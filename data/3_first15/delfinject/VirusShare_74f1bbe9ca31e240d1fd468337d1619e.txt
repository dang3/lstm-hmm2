and
mov
add
pushf
out
pushf
out
cmp
add
add
inc
dec
rcrb
inc
test
inc
adc
inc
xchg
inc
test
dec
lea
cmp
sub
loope
jns
xor
mov
mov
lods
jnp
in
aam
cmp
add
or
inc
hlt
xchg
clc
sub
sub
jae
dec
add
outsl
ja
jae
das
ja
ret
mov
dec
aaa
ja
pop
jnp
inc
in
int
insl
outsl
and
nop
sbb
add
fs
jb
out
cmp
pop
xlat
and
pop
xorb
mov
imul
jo
jmp
jb
sti
fcomi
shr
out
ds
sti
sti
imul
mov
fistpll
inc
or
pop
in
jbe
add
repz
cwtl
or
push
jmp
xchg
rcrb
adc
pop
sub
dec
fldenv
in
pause
mov
and
add
push
or
ret
cs
sub
dec
stc
dec
add
pop
lahf
lret
shrl
jo
sbb
xchg
mov
cmp
sbb
xchg
sub
roll
pop
imul
in
or
sbb
cmp
imul
and
pop
sahf
mov
and
in
push
sub
push
xchg
das
lahf
iret
xor
incl
and
hlt
sub
sbb
push
mov
push
push
jle
fdivs
icebp
sub
pop
test
pop
insb
mov
test
gs
mov
pop
fucomip
pop
fcomi
stc
fnstsw
mov
testb
xchg
ljmp
or
call
mov
stos
xchg
imull
add
test
mov
jnp
inc
xchg
pop
fstpt
iret
mov
test
xchg
mov
fs
ss
and
loop
push
fwait
lahf
loopne
mov
addb
pop
sti
enter
inc
mov
mov
jp
aad
pop
insl
pusha
and
adc
sbb
inc
rcl
push
rcrb
out
xchg
xor
andb
jmp
lcall
sahf
adc
stc
mov
pop
popa
mov
push
int3
mov
push
movsl
push
pop
adc
inc
add
inc
lods
filds
add
add
jp
idivb
data16
jnp
aad
movsb
pop
repz
popa
enter
gs
std
xchg
ljmp
and
pop
jg
outsb
mov
or
packuswb
adc
pop
ficoms
aad
test
xchg
xchg
and
ljmp
jno
inc
stc
pop
fistpll
cmc
popa
adc
xor
roll
push
and
js
ds
cltd
mov
stc
fcmovu
icebp
jge
clc
stos
mov
lds
repnz
clc
in
pop
push
push
jno
lahf
and
push
mov
inc
movsb
mov
push
ret
test
mov
cmc
xlat
lahf
out
and
aad
lods
cmp
inc
mov
sub
inc
inc
daa
sbb
jmp
call
lods
lahf
mov
test
xor
pushf
testl
xchg
iret
cwtl
pop
push
inc
jno
xchg
cmp
xchg
jle
inc
xchg
jle
mov
jns
pushf
enter
or
fadd
push
and
and
inc
adc
mov
inc
rorb
jg
pop
mov
jb
rclb
sub
loope
call
and
push
and
add
and
push
mov
mov
icebp
xchg
push
add
orl
xchg
rolb
add
cwtl
or
dec
js
call
mov
repz
xchg
jae
rcl
pop
mov
jg
test
in
push
mov
dec
test
or
or
imul
mov
push
iret
push
add
cmpb
mov
pushf
pop
int3
adc
dec
inc
lock
fs
popf
add
outsl
xchg
push
or
loopne
int3
loope
or
or
xchg
cltd
cmp
jnp
sbb
arpl
jo
xorl
mov
sub
jb
pop
adc
xlat
loope
push
inc
xchg
add
mov
mov
adc
loopne
xor
adc
adc
fldcw
outsb
jno
add
jl
cmp
mov
test
mov
lock
ja
cmp
daa
test
sbbl
sbb
testb
aaa
jb
mov
cmp
movsb
adcl
pusha
mov
jb
insb
push
ret
push
mov
push
sub
inc
mov
lret
mov
push
clc
roll
sbb
rorb
pop
jecxz
adc
aaa
idiv
mov
sbb
rclb
inc
pop
inc
ss
dec
add
xlat
sub
subl
aam
add
jp
mov
sub
mov
adc
daa
lret
or
cmp
jbe
and
pop
movsl
jmp
mov
sbb
push
inc
js
xor
roll
fnstenv
les
fsubl
pop
xchg
or
adc
stc
inc
mov
inc
jae
movsb
popa
fs
dec
dec
xor
dec
in
dec
iret
dec
test
inc
mov
or
inc
mov
add
adc
call
loop
sbb
out
xchg
xchg
dec
adc
push
xchg
dec
xor
mov
mov
xchg
adc
loop
jp
dec
movsl
enter
cmp
sub
lret
jg
adc
push
mov
aam
mov
mov
pop
jnp
lock
jbe
jb
xor
adc
ret
jl
xchg
mov
or
push
push
mov
fmulp
pop
cmp
pop
cld
mov
inc
inc
or
mov
stos
sub
fdivs
imul
adc
ret
sar
push
mov
lods
inc
jl
sti
mov
jge
add
xor
inc
cld
or
lock
xchg
in
sub
cltd
lds
int
dec
out
pushf
addr16
mov
mov
cli
mov
aas
jg
hlt
cmp
shll
sbb
and
sbb
mov
sub
mov
aad
push
push
and
adc
lock
repnz
jle
int
add
fcmovbe
pop
cld
scas
jnp
daa
and
mov
and
out
jno
sti
pushf
int
dec
and
shrl
push
insl
dec
cltd
andb
adcl
test
sub
add
ffree
sub
jmp
jno
das
mov
sbb
jns
push
js
jmp
dec
push
shlb
loop
insb
lea
inc
enter
sarb
cltd
add
cmpsl
xor
lret
call
xor
sub
push
pusha
pop
hlt
sub
sbb
push
imul
mov
dec
xorb
mov
ljmp
fucom
loopne
dec
cmp
mov
enter
repz
outsb
aam
ljmp
sub
add
xor
pop
push
xlat
dec
arpl
rol
cltd
xor
adc
pop
push
inc
lahf
clc
mov
push
jp
xchg
xor
test
movl
pop
adc
stos
loopne
xor
pop
push
mov
jmp
mov
int
push
xor
mov
jge
pop
and
mov
mov
jnp
jmp
adc
push
inc
nop
in
movsb
cltd
pop
dec
dec
js
cmp
loop
mov
iret
and
nop
push
fbld
inc
xlat
adc
pop
gs
mov
fsts
stos
ret
xchg
stos
movsb
pop
jnp
sub
repnz
loopne
lods
lahf
mov
mov
lds
je
fwait
imul
and
fsubl
lds
imul
inc
je
shl
mov
mov
xor
cld
in
clc
sub
sbb
testl
mov
test
jecxz
or
in
and
jl
in
jb
shr
sbb
mov
cmp
movl
in
cmp
pop
cld
mov
in
clc
mov
dec
mov
rclb
shlb
clc
push
pop
lock
mov
push
adc
lods
aas
test
cld
stos
subl
mov
jp
xchg
and
pusha
pushf
inc
mov
dec
jne
sub
cmpsb
out
xchg
inc
lock
lret
and
mov
or
push
pop
add
es
push
flds
jns
aaa
and
sahf
lds
jne
pop
bound
inc
push
or
popa
nop
jbe
xor
ss
fwait
daa
int3
adc
ffreep
pop
test
sub
daa
jmp
pushf
pop
mov
sbb
mov
cmc
in
popf
lret
mov
mov
push
andl
ds
shrb
lds
cmp
xor
inc
jne
lcall
aam
mov
or
adc
addl
pop
pop
mov
adc
leave
cmp
adc
imul
dec
xchg
mov
dec
push
mov
or
pushf
mov
out
xchg
pop
pushf
das
cltd
cmpsl
test
rcrb
mov
shl
cltd
dec
or
cltd
push
adc
popa
clc
fidivl
dec
mov
push
or
imul
jl
jno
xor
sub
test
pop
jne
cli
xlat
cmp
fisttps
jne
hlt
mov
frstor
xor
jae
push
movsl
dec
insl
lret
jb
dec
push
xchg
jae
dec
mov
test
shrb
jp
xor
ljmp
jb
mov
xor
shl
jns
jmp
cld
shll
pop
xlat
mov
shrl
jo
xor
xchg
pop
icebp
lcall
dec
pop
mov
add
jnp
mov
repnz
inc
xlat
adc
push
jg
push
ds
pop
int3
cmp
dec
mov
add
aam
lock
movsl
jecxz
sti
test
iret
sar
sbb
mov
sbb
cmp
mov
outsb
sbb
sbb
adc
jg
ret
test
inc
xor
push
add
xchg
sub
cld
out
outsl
push
jp
dec
clc
loopne
mov
fldenv
xlat
mov
xchg
adc
pusha
mov
js
xchg
dec
filds
ja
sub
data16
mov
push
and
mov
mov
mov
or
xor
push
add
mov
insb
push
ja
je
push
fdivrs
dec
push
or
cs
nop
cltd
adc
das
outsb
dec
loope
sahf
cmp
xchg
cld
adc
and
data16
cwtl
inc
xchg
mov
sub
push
outsl
ret
ret
jae
mov
cli
lock
sbb
rcrb
xchg
ja
pop
outsl
outsb
push
mov
es
push
pusha
in
inc
popf
xchg
es
mov
jl
or
mov
and
test
bound
negb
mov
jne
xor
xor
data16
or
cs
jno
ss
ret
frstor
fidivrl
sbb
cmp
movsb
pop
cwtl
mov
movsb
jno
xchg
dec
dec
mov
inc
dec
jg
daa
rcll
inc
in
jne
rol
ret
mov
cmpb
jne
jb
mov
leave
loope
mov
out
das
pop
aaa
pop
jb
dec
cmpsb
pushf
push
ror
and
sbb
mov
cmpsb
jns
cmp
sti
push
pop
xchg
xor
jecxz
les
mov
test
mov
inc
es
imull
dec
inc
xchg
and
mov
pop
xchg
cmp
xor
out
imul
fstps
fcmovnu
scas
cli
jp
cli
cltd
mov
cld
es
cld
mov
fisttpl
cwtl
fcoms
sahf
scas
clc
or
mov
xchg
ret
sarb
mov
pop
cmp
add
sti
or
sahf
mov
xchg
fmull
lcall
stc
sub
outsl
and
aaa
ds
mov
sub
pop
lahf
stos
xor
mov
sbb
pop
sbbb
test
ds
shlb
mov
fcmove
cmp
in
nop
pop
push
and
jnp
mov
jecxz
pushf
jmp
flds
ja
dec
sbb
enter
push
xchg
push
les
sub
dec
mov
xlat
out
jmp
adc
mov
sbb
cmp
and
jnp
adc
aam
push
clc
gs
or
in
jg
jnp
jl
inc
push
loop
movsb
pusha
das
sahf
push
flds
or
call
xor
sbb
mov
pop
imul
mov
stos
lods
xlat
loop
test
es
insb
cli
pop
movsl
cwtl
lcall
inc
shl
loope
mov
loope
inc
jae
inc
pop
mov
adc
xchg
pop
jg
cmp
icebp
mov
popa
out
fbld
adc
in
xchg
pop
sbb
dec
shlb
call
aaa
cmc
rol
jmp
xlat
jno
fsubr
xor
sub
sub
outsl
aad
imulb
and
decb
sub
pop
int3
pop
xchg
addb
movsl
and
and
bound
mov
fidivrl
xor
imul
dec
add
or
out
xchg
out
pop
sbb
pushf
imul
out
shrb
fisubrl
push
hlt
adc
movsl
ret
mov
pushf
pop
outsb
lock
rcrl
sub
movsl
jbe
icebp
xchg
xchg
jl
pop
sbbl
stos
nop
fcomps
jbe
out
dec
bound
jnp
call
mov
pop
inc
add
sub
inc
scas
dec
sub
mov
mov
outsl
stc
popf
adc
inc
ret
push
cmp
rolb
lahf
js
or
loop
test
cltd
pushf
sbb
jecxz
clc
icebp
jge
sub
jnp
cmp
in
xchg
pop
loopne
dec
xor
ret
push
filds
lret
xlat
in
test
jl
inc
outsl
xchg
mov
ficoms
and
push
fistpll
push
or
sti
or
jp
lret
xor
xlat
sub
push
out
sahf
sbb
insl
xchg
les
mov
or
stos
adc
leave
xor
insl
jle
fld
rorb
cmp
mov
daa
sub
loopne,pn
and
mov
lcall
dec
cli
cmp
jg
aam
lock
or
push
sbb
or
mov
popf
jns
cmp
add
iret
jb
fdivr
daa
mov
es
outsl
add
mov
repz
sbb
and
push
out
push
sar
sti
loope
add
mov
ja
or
xchg
repz
fidivrl
mov
sub
mov
jns
imul
mov
mov
mov
xchg
and
dec
dec
push
sub
orl
into
mov
out
pop
lcall
mov
sub
mov
inc
aam
lods
or
inc
stos
add
fistl
aad
jae
push
movsl
xor
cs
fsubl
xchg
add
push
fldl
ljmp
loopne
ret
push
in
out
sub
cmp
xor
es
aaa
adc
loop
fidivl
insb
aaa
es
mov
call
sub
mulb
jbe
bound
mov
jle
aas
sarb
ljmp
jp
bound
add
push
and
xor
testl
data16
mov
test
xchg
jp
jmp
fcomps
iret
push
cmpsl
std
and
lret
and
pop
inc
jg
stc
popa
or
push
mov
jmp
movsb
mov
pop
rol
jae
pop
test
cmpl
xchg
loopne
mov
mov
xchg
xor
push
popf
xchg
dec
daa
xchg
call
jns
and
ret
sti
mov
jg
ret
outsl
mov
mov
or
adc
mov
je
xchg
jp
popa
or
rcl
popf
xchg
mov
fsub
xchg
les
mov
repz
mov
bound
fxch
xor
xor
dec
ljmp
cmpsl
push
out
scas
xor
loop
mov
insb
push
ret
lcall
shrl
adc
mov
mov
mov
adc
imul
push
jno
ret
lea
nop
lods
das
fcompl
rcll
sub
test
add
jb
and
push
push
pop
loopne
dec
in
divb
pushf
add
pop
andb
inc
lock
in
sbb
sbb
push
mov
nop
jns
imul
in
inc
cmp
ja
out
shr
rolb
scas
or
scas
cmp
in
test
push
sub
in
mov
jge
aad
es
pop
ret
jnp
push
orb
rcll
dec
add
push
xchg
xchg
divl
push
test
int
aaa
adc
imul
xor
lret
adc
lea
rclb
add
in
mov
add
and
pop
jle
arpl
lret
mov
xchg
dec
call
js
rclb
xchg
xor
xor
clc
ds
add
lahf
jbe
xchg
lea
inc
int3
dec
mov
mov
mov
arpl
je
xchg
mov
fstpt
mov
popa
lret
pushf
sub
outsl
xor
mov
xlat
xor
jns
jmp
or
stos
popa
and
mov
pusha
jno
push
fadds
xchg
int
inc
dec
cmpsl
pop
cwtl
cwtl
jecxz
jecxz
movsl
push
sbbl
pop
fucomi
xor
loope
lods
add
jp
fsubrl
or
dec
insl
rol
adc
mov
sarb
adc
mov
jb
push
xor
sbb
sbb
adc
scas
negb
mov
and
aas
gs
daa
cld
imul
adc
clc
cmp
pop
ret
pop
jb
cmp
out
out
inc
cmp
cwtl
xchg
hlt
aad
aaa
icebp
add
mov
dec
push
cmp
test
inc
fists
push
popa
sbb
mov
mov
xor
sub
test
dec
mov
xor
pop
or
outsl
xchg
hlt
inc
stos
test
push
inc
ds
or
dec
inc
mov
aam
aas
shll
scas
xor
lret
cmp
cltd
jb
mov
push
and
jae
xchg
fldl
push
imul
insl
insl
out
jno
cltd
test
sahf
jnp
xor
cltd
add
push
push
inc
popf
das
sub
out
adc
pop
popf
iret
jo
and
push
push
stos
mov
cmpsl
sub
shlb
int3
adc
cmp
adc
test
in
psrld
les
repz
popa
rcll
js
je
aad
es
cmp
movsl
xor
ja
dec
test
xlat
sbb
mov
pop
in
pop
aaa
arpl
insb
dec
mov
dec
sub
cld
pop
mov
in
cmc
es
mov
lods
add
jle
xchg
es
movsl
into
xchg
cmp
xchg
int3
push
cmc
xchg
xor
pop
lahf
leave
es
scas
loopne
popa
test
cmp
lret
xlat
jb
popf
dec
aam
rorl
adc
fimull
loop
dec
xor
lock
es
xor
and
adc
adc
cwtl
mov
dec
or
test
fimull
out
push
cmp
cwtl
cltd
push
call
sarl
stos
and
test
mov
pop
inc
jmp
mov
hlt
movsl
add
mov
test
inc
stos
and
mov
test
pop
dec
loop
data16
push
imul
pop
xchg
mov
dec
sub
cmpsl
movsl
cmp
pop
mov
loopne
ja
mov
imul
scas
cmp
jno
cwtl
movsl
addl
adc
sti
daa
pop
adc
inc
mov
mov
fbstp
dec
mov
into
lods
cmp
adc
jge
cmpb
outsb
and
dec
loop
and
or
je
and
loop
sub
mov
aam
dec
frstor
xchg
mov
int
cwtl
adc
scas
pop
or
mov
sti
xor
or
cmp
out
fdivrl
daa
dec
xlat
ds
mov
movsb
jnp
fisubs
push
mov
pop
scas
outsl
push
lret
rcrl
mov
fwait
mov
leave
pop
adc
push
add
adc
fdivrl
dec
lret
push
lods
mov
rep
or
dec
pop
sbb
jns
mov
lret
mov
mov
and
push
or
adc
movsl
mov
cs
and
mov
inc
rorb
sahf
into
inc
das
cmp
jae
cmp
mov
es
repz
push
js
cmp
aas
ror
inc
xor
and
idivl
and
mov
sub
mov
das
sbb
test
adcl
mov
inc
fwait
or
ljmp
pop
fsts
xor
sub
test
mov
outsb
daa
and
jb
xchg
mov
jp
int3
imul
lret
sub
push
or
jbe
and
lret
xchg
mov
or
cmpsl
lds
inc
cmc
xlat
aaa
movsb
loope
cmp
push
imul
and
add
sbb
xorl
incl
iret
adc
stos
add
scas
popa
popf
jno
test
sbb
cld
in
enter
insl
xor
leave
adc
mov
icebp
out
add
repz
int3
jecxz
lock
jae
sbb
dec
jno
fdivr
popf
jecxz
jl
bound
mov
pop
cmp
xor
sahf
inc
push
test
mov
pop
scas
clc
aam
xlat
xchg
pop
clc
jne
sbb
clc
jge
mov
mov
jg
repz
daa
sub
scas
or
rclb
aad
jnp
mov
pop
adc
cmp
call
sub
mov
sahf
sbb
sub
sub
ret
mov
hlt
xor
movsl
cli
test
xchg
mov
pushf
scas
xor
pop
dec
pop
cmp
fnstsw
popf
pop
in
lret
jne
scas
pop
or
push
mov
sbb
inc
cmp
cmpsl
cmp
or
int3
or
cmp
mov
pushf
outsb
call
mov
pop
push
jnp
ret
lahf
push
in
out
js
popf
daa
shr
push
daa
testb
rcrl
xchg
cli
scas
and
mov
pushf
mov
int
aaa
or
cli
data16
sbb
pop
jne
jb
lock
push
test
addl
mov
push
mov
mov
xchg
fwait
les
sbb
in
cli
test
test
or
dec
aaa
aad
jnp
pop
scas
shl
in
xor
rcr
mov
int
mov
jecxz
scas
sarl
scas
mov
dec
fistpll
mov
daa
pop
je
lock
dec
ja
mov
fucomip
inc
mov
xor
popf
addr16
dec
out
aaa
cs
jmp
imul
fnstenv
loopne
pop
adc
adc
add
fsubs
mov
pop
ljmp
into
and
ja
lods
add
sahf
xchg
sbb
mov
pop
repz
jp
pop
cmp
fadds
mov
mov
pop
dec
mov
xor
sub
or
addr16
dec
xchg
out
inc
imul
dec
cli
insb
out
mov
adc
mov
insb
dec
jl
nop
jne
popa
ret
xchg
pop
mov
inc
dec
mov
scas
repnz
incb
bound
out
xchg
push
hlt
mov
fwait
pop
add
add
xor
daa
fnstcw
push
push
sti
sub
mov
stos
fcompl
mov
lea
or
pop
js
jp
mov
cmpsb
sahf
jo
jg
push
inc
call
pop
add
mov
lret
loopne
cmp
or
jle
jns
cmpsb
or
filds
int3
leave
outsb
mov
lea
xlat
loopne
push
mov
js
mov
hlt
repnz
repnz
cld
sahf
hlt
mov
mov
and
in
xor
mov
roll
or
out
push
adc
repz
cmp
inc
arpl
mov
divb
xchg
adc
addr16
inc
xor
leave
and
inc
enter
push
ds
loope
rcll
xchg
pop
jne
mov
mov
or
iret
dec
sub
xchg
call
and
mov
mov
aam
jl
sbb
cwtl
aam
enter
pop
pop
pop
stc
inc
push
add
mov
jbe
dec
icebp
sub
cmp
outsl
lds
notb
loop
sbb
sbb
mov
jo
scas
arpl
orl
sbb
or
push
sub
lcall
add
outsb
cmpsb
out
pushl
cmp
adc
out
push
movsl
sbb
bound
or
jecxz
clc
sti
lcall
mov
in
xor
notl
das
push
jmp
sbb
mov
push
outsb
pop
and
push
or
mov
push
enterw
xor
inc
enter
or
pusha
dec
mov
icebp
lea
cmp
xor
ja
hlt
in
xchg
dec
or
jp
repnz
push
adc
fcomps
xchg
inc
es
movsl
mov
roll
cltd
out
mov
jne
test
add
fs
loop
push
lahf
push
add
pop
add
jmp
lret
subl
int3
into
aaa
dec
negb
iret
xchg
rorl
mov
or
inc
cli
stos
push
push
add
lea
in
xor
orb
mov
xlat
dec
sub
int3
lret
in
jmp
cmp
repz
xchg
sahf
push
and
cmp
fwait
lea
daa
add
push
jnp
or
xchg
aad
hlt
jg
adc
push
dec
mov
test
adcl
cs
dec
out
jle
test
jo
jno
xchg
sub
popa
jno
cmp
fcoml
push
in
pop
lret
fimull
push
inc
imul
push
add
cmp
divl
cmc
lock
push
popf
rclb
popa
mov
xor
inc
mov
aad
inc
jno
fldenv
and
jle
mov
fwait
pop
daa
leave
inc
cld
or
mov
cmp
movsb
cmpsb
pop
push
pop
cmp
in
and
sub
xchg
test
negl
inc
add
dec
pusha
stos
out
mov
dec
mov
sbb
jne
loopne
call
push
inc
aad
mov
into
mov
lods
add
fwait
das
and
dec
add
jb
fadds
jcxz
das
scas
mov
int
xchg
into
das
cs
cmpsl
fisttpl
out
jle
adc
orl
xor
clc
lods
test
sub
aad
js
mov
and
mov
dec
shl
xor
outsb
dec
or
cmc
xor
stos
mov
jle
push
adc
push
mov
loope
xor
in
xlat
xlat
pop
dec
inc
scas
inc
mov
mov
hlt
cmp
aas
out
xchg
sbbb
cltd
arpl
lds
fcom
xor
je
mov
mov
xor
xlat
hlt
xchg
mov
out
pop
lret
cmp
mov
int3
lods
xchg
xchg
fdivrp
inc
int3
popa
xchg
xchg
add
daa
lods
leave
dec
lds
int3
pop
es
int3
loope
cs
xchg
pop
xchg
jb
inc
push
xor
lods
cmp
pop
push
iret
pop
dec
mov
push
mov
fwait
lock
mov
movsb
xor
ret
pop
lret
lret
icebp
movsl
jne
add
aas
aad
xor
les
and
push
sub
fisubl
dec
push
ljmp
cmpsl
lea
pop
sub
push
xor
adc
dec
inc
sbb
or
dec
mov
insb
mov
xor
and
and
pop
out
ljmp
push
loope
jl
je
addb
lret
sub
cs
and
inc
sti
gs
and
and
mov
cmp
lahf
aam
jno
dec
jg
leave
cmc
mov
jle
mov
add
jne
sub
in
ss
and
push
fwait
mov
daa
lea
stos
aad
ret
cmp
scas
xorb
mov
and
jno
jmp
ret
outsl
or
sti
dec
and
aad
lea
sub
and
pop
add
dec
pop
mov
das
mov
call
mov
rorl
das
pushf
adc
mov
inc
popf
or
or
xor
fisubl
xchg
movsl
out
daa
sub
add
push
push
nop
mov
stos
repz
outsb
addl
in
stos
fsubrl
adc
mov
mov
jnp
xor
jmp
ja
je
and
loopne
fxch
fdivrs
lahf
enter
call
icebp
into
cmp
iret
mov
cmp
sahf
add
ja
mov
mov
jmp
push
movsl
call
loop
xor
outsl
lcall
jecxz
bound
fwait
aad
mov
sbbb
pop
pop
iret
push
in
jb
xor
xchg
cli
fsts
push
repnz
out
pop
or
js
fisubl
jl
outsb
sti
sub
xchg
test
in
mov
xchg
mov
std
fstps
pushf
fisubrl
loopne
clc
clc
adc
bound
mov
lahf
pop
daa
pop
push
xchg
popf
adc
pop
into
movsl
pop
adc
or
jne
jns
in
scas
jp
push
sbb
mov
lret
ficompl
or
stos
mov
repnz
push
xor
jp
sbb
xchg
cmp
pop
mov
movsl
xor
and
clc
in
popf
sub
lods
xchg
int
ret
js
cmp
dec
sbb
cmc
fbstp
mov
shlb
test
cmp
outsb
daa
aas
push
imul
loope
dec
push
add
test
cltd
mov
movsb
in
mov
movsb
add
mov
sbb
sbb
mov
mov
dec
xchg
inc
es
push
inc
ret
mov
out
add
xor
cmp
les
mov
and
stc
addl
pop
add
inc
mov
push
aaa
pop
push
mov
into
out
push
sub
push
sub
jbe
jns
adc
fisubs
jno
std
ficoms
jns
shlb
lret
test
loopne
fidivs
cmpsl
addr16
mov
mov
stos
xorb
aad
push
cmp
cmpsb
int3
gs
int3
lret
aad
fs
sbb
xlat
xchg
cwtl
and
lcall
or
xor
sub
enter
xor
cmpb
fldenv
ljmp
test
add
loop
insl
mov
test
test
ret
test
arpl
mov
cmp
int
sub
mov
rcr
xchg
cwtl
and
aad
pop
mov
stc
mov
jge
and
lret
shlb
in
hlt
adc
ret
dec
mov
cmp
notl
inc
or
and
or
add
adc
adc
es
cmp
mov
sub
mov
inc
stc
and
xlat
pop
dec
out
pop
imul
cmp
push
or
lock
mov
mov
xor
sub
xchg
pop
mov
in
mov
lods
lret
pop
pop
stos
lods
mov
loopne
gs
lea
push
imul
fbld
sbb
mov
bound
inc
jle
aam
dec
sub
xchg
sbb
leave
es
sbb
fwait
stos
sub
jne
lcall
arpl
hlt
sub
imul
std
shrb
adc
test
jb
jge
push
pop
mov
sub
aam
jo
mov
jle
out
mov
insb
xchg
test
mov
fcoms
push
iret
fwait
xchg
fdivl
fcom
pop
push
and
dec
inc
push
push
into
pop
fwait
and
fsubrs
out
stos
sbb
xor
lahf
out
dec
les
push
pop
popf
dec
ds
stos
outsb
fwait
and
lahf
jl
mov
cmp
jl
sbb
xor
arpl
cmp
xor
arpl
xor
push
mov
push
mov
ja
dec
ja
aam
rorl
aaa
cmp
ljmp
cmp
cld
push
iret
jno
iret
mov
insl
dec
add
mov
add
das
mov
jmp
fsubr
add
or
mov
fimull
push
pop
mov
test
repz
into
andb
bnd
lods
xlat
xor
test
push
mov
dec
inc
mov
jbe
push
jae
movsl
sub
cmp
in
lcall
cmp
pop
into
sbb
aam
jl
iret
or
outsb
hlt
test
lods
data16
pop
daa
xchg
aam
sbb
mov
push
mull
aaa
outsb
adc
sub
push
dec
push
inc
pop
ss
shrl
dec
loop
lea
insl
adc
dec
add
int
push
add
std
xor
xor
sti
or
xchg
xor
dec
fcoml
mov
insl
mov
inc
or
or
sbb
mov
jp
daa
pop
andb
test
int
dec
add
int
bound
andl
iret
lcall
inc
push
lea
dec
shll
push
jg
loope
sbb
vpaddsw
movsl
in
lea
cmc
push
test
mov
jge
dec
lea
lret
xor
jp
mov
aam
pop
inc
or
int3
cs
adc
and
mov
mov
lret
mov
mov
lods
mov
mov
movsl
and
xchg
out
inc
push
insb
sub
adc
mov
mov
and
es
loop
push
stos
inc
xchg
mov
popf
cli
aam
jmp
clc
hlt
xchg
cwtl
lret
mov
adc
lahf
sbbl
adc
movsl
add
or
dec
mov
dec
xchg
add
outsl
ror
lahf
mov
negl
movsb
mov
push
pusha
bound
adcb
imull
mov
cltd
push
cmp
jne
push
push
and
cltd
ds
hlt
nop
or
jae
or
fs
aad
pop
and
movsl
mov
xor
stos
jp
rcrl
jmp
in
mov
or
jno
cmp
outsb
cli
aas
pop
mov
inc
repnz
not
pop
and
addr16
lret
push
pop
adc
rcr
call
mov
pop
or
sub
aam
stos
sub
das
mov
repnz
add
fwait
xor
enter
scas
dec
pop
jbe
adc
clc
cmp
loope
or
pop
pop
pop
add
pop
xchg
testl
pop
adc
and
in
jl
xchg
xor
rolb
push
sbb
enter
jmp
mov
sub
sbb
inc
out
jp
cli
dec
pop
icebp
out
lods
dec
dec
cmp
push
xor
dec
mov
jle
lret
jo
rol
ja
rclb
xchg
dec
vpmulhuw
jle
jb
cltd
loope
aas
clc
pop
jbe
mov
sahf
add
or
popf
sbb
jnp
dec
les
outsb
push
jns
xchg
ja
and
xchg
das
xor
lods
aam
xchg
mov
and
xchg
cmp
shl
and
stos
insl
jp
lods
scas
xchg
std
or
call
sub
xlat
cmp
ljmp
jae
aam
cmp
dec
jle
pop
enter
and
fwait
xlat
sbbl
clc
in
daa
push
fmuls
lods
shr
cltd
mov
sbb
popa
cld
insb
cltd
dec
adcl
jne
xchg
movb
js
sbb
xor
mov
addb
sbb
jle
mov
mov
addb
in
mov
jge
fnstcw
push
dec
jl
hlt
fistpl
and
mov
add
lods
push
xor
and
loope
jae
lret
lahf
arpl
xchg
lahf
clc
xchg
cmp
add
ret
mov
inc
dec
sub
adcb
adc
and
outsb
mov
pop
test
insl
mov
cwtl
leave
or
pushf
js
jo
ljmp
xchg
xlat
lea
dec
inc
or
add
fnsave
mov
iret
push
mov
arpl
mov
data16
push
ss
adc
fwait
sbb
push
jne
pushf
movsb
jmp
cmp
xchg
mov
sti
sti
stc
stc
icebp
out
iret
lahf
jle
cmp
jl
jl
cmc
clc
cmpsl
and
outsb
jne
divl
sub
add
pop
cmpl
cmpsl
mov
push
aad
cmpsl
nop
gs
iret
dec
into
inc
pop
inc
arpl
inc
mov
out
aaa
inc
notl
lea
pop
or
cmp
dec
xor
shl
push
cmp
cld
rclb
outsb
insl
out
push
clc
lret
cmp
sbb
bound
fldenv
dec
or
dec
rol
stc
jbe
lcall
rcl
sahf
mov
pop
out
mov
movsl
les
jbe
scas
fneni(8087
and
mov
daa
push
mov
inc
dec
mov
aas
adc
adc
cld
xchg
jne
sbb
jns
push
dec
cmp
mov
inc
xchg
inc
sbb
dec
mov
mov
xchg
imul
loopne
lcall
mov
inc
dec
fs
arpl
jb
mov
and
aaa
neg
loope
push
mov
cmp
add
or
cltd
rcl
vmaxss
lcall
cmp
and
sbb
mov
sbb
xor
pop
notl
in
jbe
pop
add
int3
sub
push
addb
push
xchg
movsl
imul
mov
or
dec
mov
jnp
hlt
movsb
in
jl
rorl
jb
sbb
out
shr
push
in
ret
sti
cltd
push
mov
mov
mov
cld
pop
shll
pop
fs
sbb
in
out
cmpl
ret
xor
and
test
mov
add
pop
or
push
shlb
js
and
pusha
xorb
pop
jle
adc
js
push
cmp
aas
xchg
dec
xor
lds
movsl
xor
sarl
push
push
lods
mov
mov
jg
arpl
shlb
loopne
mov
shlb
int3
icebp
xorl
mov
or
call
or
xchg
push
xor
and
pop
xor
push
pusha
bound
rclb
push
movsb
adc
add
or
jle
scas
sbbl
push
push
sbb
add
das
push
xchg
jg
dec
and
cmp
cwtl
mov
movsb
movsl
mov
pop
pusha
inc
pop
dec
jo
loopne
mov
les
mov
not
dec
sub
sub
jge
dec
pop
scas
inc
inc
xor
pop
lods
popa
stc
dec
fisubs
or
mov
xchg
inc
xchg
pop
fwait
in
stc
push
adc
dec
and
jge
mov
xchg
xchg
pusha
xchg
loop
pop
fchs
outsl
inc
or
imul
push
add
hlt
xchg
mov
and
and
sub
xchg
sub
out
dec
je
xchg
xor
and
popa
dec
loop
sub
stos
aaa
and
testl
sar
jge
adc
test
jno
sbb
push
sbb
mov
test
jge
xchg
mov
fdiv
adc
or
sti
mov
ret
ss
jecxz
jno
inc
popf
xor
sub
push
call
add
pop
imul
sbb
icebp
sub
out
add
daa
push
ds
sbb
jmp
sub
lcall
xchg
mov
outsl
test
sub
dec
or
aaa
pop
pop
imul
lea
inc
test
mov
subl
stos
add
les
sub
inc
xchg
out
es
cmp
ds
xchg
pop
ret
movsb
insb
repnz
lock
or
sbb
ds
and
push
in
testb
in
fsubs
and
cmp
inc
inc
es
or
sub
popa
aas
les
movsb
imul
and
inc
pop
cld
insb
nop
das
push
mov
dec
int3
into
add
pop
and
pop
and
mov
outsb
and
sbb
movsl
xor
inc
mov
shl
add
xor
dec
jecxz
dec
sub
dec
dec
cmpsl
arpl
xchg
movsb
or
andl
inc
cmp
arpl
mov
and
cmp
sbb
sub
call
jbe
or
cli
out
xor
sub
xchg
dec
iret
pcmpgtd
xchg
je
outsb
xchg
dec
or
cmpsl
bound
mov
rorl
fwait
and
repz
in
inc
aad
mov
int
push
mov
aad
mov
outsl
cmp
pop
stc
enter
sbb
sub
fmuls
arpl
insl
jg
pop
fmul
push
std
mov
sti
xlat
or
sbb
pop
xchg
or
pop
es
mov
popf
adc
mov
scas
adcl
imul
cmp
jg
shll
mov
mov
icebp
in
jb
inc
mov
and
test
mov
roll
cmp
data16
pop
aaa
lret
fmul
push
xchg
lds
rorb
sub
pushf
and
jecxz
jmp
arpl
adc
idiv
cwtl
mov
dec
in
addl
in
dec
sub
xor
adc
enter
add
out
and
pop
shrb
test
xorb
push
sbb
jl
jbe
fildll
adcl
scas
xor
cld
xchg
out
cmpsb
pop
test
jge
ds
inc
mov
jmp
lea
aaa
jo
xor
in
subb
jg
push
sub
idivb
lods
pop
in
hlt
sbb
sub
inc
xlat
jmp
mov
jmp
movsl
shll
push
pop
cmc
jnp
dec
inc
in
xor
or
xchg
xchg
int3
or
stc
in
cmpsl
and
and
insb
lcall
jb
inc
and
rcr
leave
out
nop
dec
push
rorb
bound
sbb
xor
cli
addr16
cmpsb
gs
gs
mov
pop
sysexit
das
add
xor
or
add
daa
push
xchg
test
cmp
push
inc
stos
pop
sub
jmp
inc
jo
mov
sbb
lods
cmp
out
pop
cltd
dec
sub
js
hlt
cmp
leave
rorb
xor
data16
fwait
mov
insl
loope
in
sbb
sub
xchg
les
aas
jnp
jbe
mov
jle
or
mov
popw
push
push
adc
sub
imul
enter
dec
out
jbe
and
fcomps
cmc
pop
pop
loope
xor
jmp
std
jl
cmpsl
mov
add
lds
sbb
fists
xor
pop
cmp
cmpsb
icebp
daa
inc
sub
jns
cmc
ficomps
fistpl
ja
xchg
in
xor
in
mov
jle
ja
adc
jbe
mov
sub
jg
scas
fcmovb
dec
cmp
jnp
ret
cld
push
pusha
inc
lock
jbe
subl
inc
movsb
cmpl
jno
mov
push
fistl
xor
or
cld
xchg
xchg
sbb
ljmp
jo
mov
mov
movsb
mov
and
inc
add
in
dec
popf
scas
push
jecxz
xor
or
mov
push
cltd
pop
es
je
mov
pop
sub
pop
lcall
mov
dec
push
adc
mov
rclb
sub
and
movsl
sub
outsb
lret
mov
jno
jecxz
mulb
xor
fsubr
xorl
mov
xchg
inc
leave
jbe
mov
outsl
mov
xor
test
fs
das
pop
mov
incb
push
imul
insl
cmp
in
pusha
pop
outsl
enter
test
scas
and
lcall
and
mov
enter
and
pop
inc
push
fs
aam
mov
aam
insl
cmp
sbb
jmp
mov
fsub
test
pushf
inc
std
stc
push
cli
sbb
fsts
add
push
icebp
sbb
daa
jle
mov
cmp
ss
cmp
pushf
jne
mov
xor
mov
mov
adc
push
dec
push
call
adc
pop
xchg
jnp
pop
pop
out
incl
sub
mov
enter
push
andb
push
xor
mov
aam
in
lcall
loopne
fnsave
pop
jno
outsl
cmpsl
shrl
jmp
jnp
xchg
sbb
cmc
xor
sub
inc
ja
adc
sbb
push
xor
fs
jo
divl
pushf
pop
roll
xchg
pop
add
in
icebp
cmpsl
mov
add
mov
mov
push
call
jp
insl
ja
pushf
mov
dec
sti
cwtl
je
lahf
int3
push
test
mov
nop
mov
cmp
cmp
ds
mov
test
add
lea
cltd
ja
ljmp
insl
pop
ja
jg
inc
repnz
mov
iret
out
cmp
stos
cmp
std
insb
add
insb
call
pop
incl
lcall
lock
je
int3
fdiv
mov
inc
push
insb
loopne
aad
insb
in
mov
mov
mov
add
dec
xchg
shlb
imul
push
sbb
jg
lods
jnp
iret
push
cmp
mov
arpl
add
or
and
stc
dec
jbe
leave
movsb
ds
inc
insb
add
test
pushl
loopne
jecxz
faddl
scas
mov
aam
mov
sbb
pop
mov
xor
cmc
fcomi
xchg
sarl
movsb
mov
mov
and
push
test
mov
clc
faddp
js
jmp
pushf
das
cmp
stos
arpl
pop
mov
and
jl
dec
rcll
iret
lods
insl
push
sbb
mov
popa
sub
mov
out
test
pop
jne
or
js
dec
dec
add
mov
repz
mov
ja
loop
out
push
imul
das
dec
and
aam
lods
xchg
lea
and
adc
loope
fwait
hlt
rcl
mov
insb
mov
aas
es
dec
ret
push
test
mov
and
out
inc
shl
pop
inc
call
arpl
pop
divb
inc
cmp
iret
pusha
pop
es
mov
pop
fbstp
mov
mov
data16
cmp
or
xor
cltd
mov
dec
pop
pop
and
testb
mov
push
add
or
xchg
push
ss
inc
imul
cld
or
test
push
mov
xchg
scas
andb
hlt
jmp
jbe
jae
cmp
pop
inc
mov
jnp
dec
filds
movsb
dec
adc
arpl
rorl
mov
ja
inc
je
mov
fwait
push
lret
repnz
sub
rol
mov
or
leave
and
imul
rol
clc
cmpsb
push
jmp
out
je
aam
pop
sbb
stc
cltd
push
jle
rcrb
jle
pop
in
jl
inc
mov
ljmp
aad
js
call
inc
dec
or
mov
mov
loope
pop
and
lea
and
lahf
lods
daa
out
cmp
xor
stc
iret
aam
xor
dec
popa
imul
jns
bound
fsub
pop
js
js
aad
movsl
negl
pop
out
pop
icebp
jb
leave
xchg
cmp
mov
js
mov
les
ret
and
jno
xchg
cmp
mov
mov
fwait
loopne
xchg
push
sbb
out
push
gs
add
cwtl
shlb
lds
imul
out
ret
add
ss
xor
or
xchg
push
dec
fimuls
out
arpl
cmp
jecxz
cmp
fucomp
xor
fucomi
rolb
mov
cmpl
lret
fchs
mov
xchg
lret
popf
hlt
imul
loopne
rclb
and
and
ss
mov
std
cwtl
out
orl
sarl
hlt
pushf
jne
frstor
es
mov
cmpsl
repnz
push
sbb
dec
add
pop
mov
sbb
stc
idivl
pop
cmp
mul
or
mov
add
jg
dec
inc
repz
popa
adc
lods
inc
or
andl
fisubrs
les
test
push
insb
mov
jge
outsl
repnz
push
xchg
or
lcall
push
inc
sbb
xchg
cmp
out
pushf
lods
lods
test
dec
mov
sbb
add
lods
cmp
sarb
sub
jnp
pop
mov
shrl
daa
scas
cmp
inc
repz
cmpsl
fxch
sti
stos
or
dec
shld
fstpt
pop
rorl
pop
stos
shll
fnstenv
pop
imul
fstp
insl
mov
fnstenv
push
push
sbb
inc
push
jo
jns
sub
cli
out
lret
imul
inc
or
add
insb
mov
inc
push
in
and
cmp
js
lret
adc
adc
pop
hlt
sub
out
nop
jle
popa
xor
inc
bound
lock
call
pop
jo
jb
or
sbb
xchg
dec
sbb
adc
or
xchg
dec
shll
push
out
mov
push
add
lds
mov
ja
js
push
pop
mov
sbb
push
rorb
mov
fildl
mov
scas
push
add
jge
addr16
jl
int
mov
xor
test
xor
lcall
loope
fidivrs
mov
push
sbbb
push
adc
sub
lea
iret
mov
mov
xor
shlb
stos
mov
je
imul
es
sar
push
ds
dec
mov
nop
movsb
es
mov
add
icebp
xchg
test
movsb
cmp
ret
xchg
push
and
gs
stos
ret
iret
aad
push
inc
dec
push
xchg
inc
xchg
stos
shrb
insb
mov
shrb
dec
bound
das
lahf
ret
sbb
mov
mov
cmp
sbb
lret
ror
mov
jge
mov
wrmsr
adc
mov
xchg
dec
inc
addr16
inc
in
mov
dec
int3
scas
adc
scas
cmp
pop
les
aaa
jmp
jns
stc
push
into
adcl
add
cmpb
mov
lds
or
pushf
jnp
out
scas
ljmp
mov
add
cmp
mov
xlat
inc
sbb
sbb
sub
enter
inc
push
ror
add
cmp
inc
mov
jle
fiadds
cmp
cmp
cmp
cmp
or
mov
insb
xchg
cmc
lock
loop
cld
add
pop
mov
dec
nop
addr16
fistps
outsl
xchg
add
pop
wrmsr
and
xor
cmp
jmp
lret
ret
jnp
stos
nop
out
loope
adc
mov
cmpsl
out
mov
jl
leave
jle
adc
adc
xor
call
mov
cltd
das
and
xlat
jb
adc
mov
xor
ret
js
jmp
sub
cld
jl
adc
dec
js
sub
cld
aaa
mov
jbe
and
bound
xor
pushf
cmpsl
jno
sbb
push
pop
test
sbb
inc
imulb
inc
insb
xchg
test
in
fdivrs
push
mov
adc
and
mov
push
sub
cmpb
rsqrtps
pop
lods
add
jno
aam
and
rcrl
or
loop
adc
stc
xor
addr16
loop
and
mov
ss
subl
dec
add
loop
fwait
xchg
mov
rolb
call
fidivs
ficomps
fwait
jmp
push
stos
add
jmp
mov
pusha
jo
fcoms
mov
shrl
mov
add
into
scas
xor
pop
movsl
pushf
fmuls
mov
cmp
mov
subb
pop
into
pop
adc
cltd
adc
mov
push
pop
fildl
inc
cli
aas
xchg
jno
data16
ret
xchg
and
out
es
loope
imull
out
mov
andl
sub
mov
xchg
dec
shrl
lods
in
das
mov
jmp
or
pop
dec
cmp
rolb
cmpsb
leave
xor
mov
rdmsr
rcll
fwait
mov
inc
mov
fcomps
fsubl
adc
or
jge
add
cmp
pop
jns
xchg
gs
xor
push
mov
rol
mov
cs
mov
xchg
xor
sub
gs
xchg
xchg
mov
lahf
xchg
xchg
iret
mov
xor
or
leave
dec
jns
aaa
in
aaa
out
mov
repnz
fnstenv
inc
add
out
or
dec
push
lret
pop
cs
sbb
mul
pop
dec
test
mov
push
cmova
insl
sbb
aam
mov
outsl
mov
cmpsb
cli
push
cmp
pop
jmp
mov
cli
adc
outsl
retw
test
adc
xchg
pusha
bound
xchg
hlt
cmp
cmp
les
add
lock
in
repz
cmp
js
pop
push
iret
sarb
enter
cwtl
cmp
cmpsb
cmp
sbb
push
or
mov
cltd
xchg
out
enter
loop
lcall
sub
stc
sarb
dec
mov
xchg
mov
stos
sbb
into
jno
inc
sbb
cmc
repz
pusha
int
xchg
enter
cmpsl
mov
repz
adc
sbb
dec
inc
js
push
mov
sub
data16
test
mov
add
ljmp
jecxz
and
sbb
incb
ja
xor
rorb
ffree
add
ss
push
ja
inc
sti
out
jecxz
and
or
repnz
nop
lds
cmp
add
push
aam
out
call
iret
leave
and
xchg
sub
jb
femms
cs
iret
xlat
mov
out
stos
jmp
dec
pop
out
fildll
push
dec
pop
mov
js
jecxz
sti
mov
push
scas
push
cmp
push
adc
mov
push
test
jo
and
inc
mov
or
mov
and
les
fwait
and
and
aas
xchg
in
xchg
cltd
mov
and
test
inc
pop
pop
push
jae
mov
mov
dec
jecxz
ror
fnstsw
lcall
call
psrlq
sub
sbb
cmp
mov
dec
test
jnp
adc
mov
pushf
dec
and
mov
fmull
mov
adc
mov
and
dec
mov
push
sarl
cmp
sahf
leave
cmp
dec
jne
lret
sbb
xchg
je
gs
loop
pcmpgtb
adc
cltd
mov
mov
push
mov
mov
outsb
arpl
jo
pop
dec
rorl
sbb
int3
add
addr16
xor
sahf
mov
jno
negl
add
adc
sbb
in
push
gs
and
cmp
cmp
movsl
jmp
test
mov
lock
lods
xor
jmp
jnp
into
and
insb
mov
pop
push
pop
cwtl
or
ds
test
sub
insl
and
mov
shll
xor
ret
mov
dec
inc
pop
inc
push
inc
push
pop
rcll
scas
mov
das
or
lods
jmp
nop
icebp
sbb
scas
enter
dec
add
xchg
leave
cmpsb
sti
call
out
jmp
pop
sarl
jnp
into
mov
test
pop
cld
or
xchg
add
subl
cmp
jle
sub
das
push
push
andl
pushf
jg
adc
iret
icebp
popa
mov
in
jmp
cwtl
mov
psrld
movsb
jl
fstps
ss
inc
sub
dec
push
call
add
cmp
addr16
loopne
sbbb
movsb
cmp
call
popa
xor
data16
push
iret
popa
adc
lret
stc
scas
lcall
or
pushl
add
mov
lods
pop
int3
inc
test
cs
pop
xlat
ljmp
xchg
insl
scas
mov
hlt
jae
outsl
and
fwait
sbb
je
xchg
inc
mov
push
add
fsubl
lret
int
pop
dec
cmp
jle
cmp
stc
sub
mov
xor
mov
cmp
in
std
loopne
dec
add
mov
jl
inc
in
mov
mov
out
cs
jns
test
xchg
mov
dec
outsb
pop
out
cmp
mov
lret
into
mov
in
push
jae
loope
hlt
int3
push
cwtl
stos
outsb
xor
popf
xchg
repnz
mov
xchg
outsl
or
fsubrl
iret
gs
adc
mov
mov
jle
inc
fcompl
mov
cmp
in
cmpsl
and
hlt
rcrb
and
mov
jbe
dec
push
loope
xchg
xor
dec
push
xchg
and
int3
inc
xor
cmp
js
jge
dec
cwtl
int3
pop
lods
jno
lahf
ja
lahf
ss
dec
dec
lcall
add
xchg
lahf
dec
push
out
sub
lret
cli
xor
xor
loop
mov
pop
xchg
ficoml
cmp
lar
or
sti
xor
inc
fadds
adc
insb
xor
sbb
shlb
out
cmp
lock
mov
mov
lock
add
adc
add
add
sbb
mov
out
popa
fldl
mov
pop
push
pop
pop
sbb
sbb
pop
dec
sbb
jbe
in
rcr
mov
imul
aam
lods
cmp
jg
cmpb
jne
sbb
cli
adc
loope
inc
fadds
mov
roll
roll
push
push
scas
pop
repnz
int3
xchg
lcall
pop
into
xchg
sahf
push
mov
sti
cmp
repz
xchg
cmp
jbe
pop
xorb
pop
data16
jle
xor
mov
sbb
test
add
pop
in
inc
popa
dec
aam
push
fisubrl
stc
decl
test
aas
test
pop
adc
xchg
pop
mov
and
push
mov
inc
sbb
dec
stos
jle
lods
dec
outsb
dec
dec
jb
mov
jnp
bound
in
sbb
insb
data16
cmp
xorb
xchg
dec
push
loope
push
test
dec
cwtl
add
jae
push
dec
dec
mov
lods
mov
or
pop
xchg
in
and
cmp
mov
xchg
repz
inc
push
sub
out
dec
inc
inc
jecxz
add
jb
in
cmc
mov
pop
test
loop
xchg
sub
shlb
iret
xchg
jmp
cltd
push
int3
popa
jns
push
cltd
xchg
inc
frstor
lock
outsl
dec
movsl
inc
pop
dec
rcrl
dec
ret
or
jecxz
or
stos
filds
sub
ret
mov
je
nop
mov
rcll
mov
cmp
shlb
inc
sub
mov
dec
fildll
push
leave
fisttpll
mov
inc
lret
jno
xor
push
jg
add
lgs
imul
pop
adc
jb
jmp
nop
mov
loope
mov
jne
push
xchg
nop
stos
inc
ja
cld
cmp
xchg
dec
inc
inc
divl
xchg
std
push
aaa
mov
and
ds
icebp
movsb
add
lds
push
outsl
movsl
push
mov
jnp
mov
pop
xlat
push
jne
xchg
sbb
pusha
sbb
sub
movl
inc
divl
mov
jb
cwtl
int3
les
int3
xchg
inc
sbb
inc
pop
imul
adc
bound
add
popf
mov
xchg
stos
cmpsb
xor
or
cmpsl
lahf
lock
hlt
cmp
int3
cmpsb
in
adc
insb
sti
enter
push
fadds
and
mov
or
std
popa
fstpt
dec
test
cmp
sub
mov
arpl
gs
mov
negl
jl
jecxz
jno
mov
cmp
lock
stos
lcall
xchg
adc
adcb
out
sub
push
push
scas
mov
mov
jae
insb
imul
mov
callw
mov
pushf
sub
popa
or
push
enter
int
arpl
ficoms
repz
gs
jns
lcall
sbb
cmpsl
in
inc
mov
xor
loop
ret
mov
dec
xlat
pushw
rcr
aaa
xchg
mov
lods
inc
and
lahf
dec
mov
push
pop
cmc
or
pop
mov
jmp
cmp
pop
les
scas
pop
jp
jne
xchg
push
js
fs
lcall
adc
xchg
inc
mov
push
rclb
add
call
sub
daa
xchg
mov
lods
push
inc
jmp
mov
pop
orb
mov
out
cmp
ss
fistpll
cmp
jno
aas
push
loope
jecxz
sbb
jne
push
daa
push
jae
data16
pop
test
mov
das
jo
mov
roll
or
roll
jo
sub
lods
dec
add
ja
lea
mov
mov
in
test
mov
cld
push
jb
insl
movsb
inc
push
lock
and
xchg
adc
sar
sti
arpl
jb
mov
mov
in
pop
jecxz
mov
inc
add
test
loope
mov
xor
loopne
dec
xor
or
fcoms
aaa
cmp
cld
leave
into
mov
push
out
in
hlt
mov
mov
mov
mov
iret
imulb
cmp
lds
xchg
sarb
xor
in
mov
fildll
jno
rcrl
frstor
fmuls
sub
gs
pop
cmp
mov
out
lret
sti
jle
lods
adc
add
mov
cs
loope
xchg
push
imul
mov
outsb
xchg
subb
shr
xor
xchg
es
pop
bnd
inc
adc
shl
and
jmp
repnz
jg
stos
sbb
ss
hlt
sbb
mov
push
cmc
ds
es
pop
ror
cmpsb
jmp
lret
lock
in
jg
call
in
sub
mov
cmp
cld
test
dec
xor
pop
insb
add
mov
outsb
ss
dec
int3
xchg
loope
inc
clc
lahf
es
idiv
push
and
mov
sbb
nop
jecxz
std
pusha
lea
sub
add
outsb
jne
in
cmp
imul
insb
fs
sub
cmpsl
jns
pop
shrl
imul
fdivr
repnz
rorb
add
mov
outsb
and
jp
mov
mov
add
mov
aas
nop
lea
popa
andl
cli
arpl
sub
mov
pop
aad
xchg
mov
out
or
sbb
sub
or
jmp
cmp
bound
sub
inc
mov
aaa
inc
mov
jbe
fildl
ret
xchg
lcall
sub
mov
test
mov
and
xchg
ret
fsubrl
push
iret
xor
nop
dec
cmpsb
jno
mov
outsl
and
scas
mov
or
cld
or
dec
mov
in
or
adc
cmp
dec
rcl
repnz
xchg
or
push
std
or
test
push
sbb
sar
lcall
lahf
std
aas
int
push
push
mov
lods
pop
je
mov
loop
js
fldt
sub
jl
lret
dec
xor
je
mulb
movsl
loop
lret
sar
ffree
push
dec
outsl
push
mov
into
scas
lds
into
mov
ror
out
mov
mov
shr
push
push
fstpl
sahf
in
pop
mov
je
js
xor
mov
mov
outsb
popl
ja
xor
or
pop
lret
pop
orb
out
pushf
push
loop
into
jmp
lds
mov
insl
jne
int3
movsl
in
je
shrl
mov
push
mov
sti
mov
lock
add
ror
pop
pop
data16
and
sbb
xor
or
inc
cmp
test
jl
mov
inc
lret
outsl
nop
push
add
rolb
sub
sbb
es
pop
pop
xchg
xchg
or
push
pop
outsl
sub
pusha
aad
xor
fstpt
and
mov
out
ret
mov
mov
xor
mov
das
and
cmp
push
mov
fcomip
xor
jp
cs
arpl
pop
stos
mov
xchg
fwait
dec
pop
or
cmp
dec
push
roll
adc
ja
enter
outsb
fdivrl
add
push
jb
or
out
shlb
aad
push
fsub
sub
imul
xlat
sbb
push
int3
and
mov
fstps
inc
or
mov
mov
cmp
enter
cmpb
js
push
pop
or
loop
add
and
pop
ljmp
cmp
andl
mov
ja
insb
loop
push
and
pop
push
lahf
mov
cltd
sub
mov
sbb
int
mov
xchg
mov
out
ret
or
jge
outsl
or
test
xchg
movsb
fnstenv
pop
sahf
in
les
stos
cmpsl
imul
cltd
jp
jmp
jns
mov
cwtl
mov
xchg
ret
sbb
jmp
pop
or
cld
mov
mov
or
xchg
mov
push
pop
int
hlt
cmp
or
cwtl
push
int
pop
movl
dec
xchg
mov
in
rcrl
imul
mov
repnz
mov
sti
sub
imul
out
xchg
pop
jns
andb
int3
cmc
mov
aad
fstp
mov
xorb
xor
in
iret
dec
xchg
inc
insl
daa
inc
ja
adc
push
jnp
jns
jne
sbb
imul
enter
fdivl
xlat
test
xor
sarb
icebp
pop
mov
ss
push
popl
fdivrl
cmp
cmp
fnstenv
cmp
cmpsl
or
sbb
adc
sub
lret
jle
insl
xchg
mov
stc
fmuls
mov
pop
lahf
xchg
cmpsb
mov
xor
xor
mov
adc
mov
xchg
and
outsl
mov
xchg
mov
into
cwtl
sahf
rcrb
xchg
and
ror
fsts
lahf
sub
xchg
xchg
dec
sub
sub
repnz
cmp
jmp
add
mov
fnstsw
dec
inc
mov
into
mov
cmp
dec
sti
ljmp
ja
push
ljmp
loope
sbbb
fwait
adc
fistpl
jp
fistps
mov
inc
cmp
and
mov
sahf
mov
xorl
pop
in
or
mov
pop
pushf
xchg
cmp
dec
adc
mov
cmpsb
cmp
divb
lods
jae
in
sarb
sub
movsb
fs
cmp
sbb
cli
mov
insl
jmp
pop
imul
pop
pushf
inc
jbe
pop
fwait
mov
in
or
inc
cmp
mov
jle,pn
ss
or
mov
mov
mov
or
jne
pop
push
mov
pop
imul
cmc
das
imul
mov
jae
insl
scas
and
sahf
lcall
jmp
outsl
nop
mov
cmpl
or
je
dec
jns
shrb
xor
cs
cld
dec
sti
jmp
fwait
pop
push
mov
fstpl
mov
or
xchg
imul
jo
add
sbb
xchg
mov
inc
push
fidivrs
test
mov
clc
data16
sub
pop
lock
mov
mov
push
mov
and
lods
push
cmpsb
daa
fimull
mov
lds
int
xchg
push
mov
lahf
mov
sub
jb
add
pop
sub
aas
mov
mov
pop
cli
insl
iret
subl
leave
jno
pushf
mov
mov
fs
jns
lcall
int3
imul
stos
lea
jnp
pop
cwtl
xchg
jno
mov
mov
xor
arpl
lods
mov
sbb
sub
or
cli
or
loopne
inc
testl
cli
jg
pop
pop
lea
lret
mov
pop
enter
popf
cld
int
icebp
aas
push
fmulp
add
adc
bound
xor
lods
test
loopne
sbb
mov
inc
dec
xor
sbb
mov
sbbl
adc
push
imul
jne
sbb
loopne
fisttps
mov
lcall
xchg
stc
mov
push
sub
aad
subb
jne
ret
mov
push
mov
dec
or
pop
mov
aam
mov
movsb
cmp
xor
jmp
cmpsb
roll
scas
jg
stos
jae
dec
sub
nop
ja
lea
add
push
fildl
mov
inc
mov
xor
rcl
mov
in
cs
or
jns
jmp
roll
xchg
push
cmpsb
xchg
pushf
push
and
inc
jnp
or
dec
iret
lret
dec
xchg
cld
mov
jp
mov
nop
notl
decl
pop
into
stos
mov
ds
xchg
aad
insl
in
xchg
inc
mov
es
add
push
add
xchg
mov
test
jno
cmp
dec
jecxz
and
lahf
fwait
xor
imul
xor
fcmovb
pop
decl
ja
data16
sub
dec
sub
lret
or
jl
dec
nop
pop
sub
inc
fistpl
stos
adc
fsubrl
mov
mov
mov
or
or
add
xlat
jmp
call
enter
xor
xchg
daa
mov
inc
test
bound
mov
imul
adc
testb
mov
xor
cmp
mov
pop
sbb
pop
dec
cmp
into
push
pop
pop
sub
mov
js
in
xchg
cwtl
cmc
lods
sti
lods
add
in
jecxz
mov
adc
stos
inc
push
sub
or
fadds
sbb
mov
jge
mov
or
mov
cmp
and
jbe
sbbb
enter
mov
lods
jo
pop
dec
ret
adc
loopne
inc
xchg
pop
lret
ss
out
push
insl
jae
ss
insb
and
icebp
out
sub
mov
jl
movsl
orl
xchg
out
fdivr
sub
xchg
addb
orb
mov
test
stos
aad
adc
movsl
nop
cmpsb
ds
mov
pop
fwait
inc
xor
leave
in
sbb
insl
mov
ja
mov
popf
mov
cmpsl
inc
or
push
lret
mov
dec
mov
loope
pop
test
sub
in
jnp
jne
imul
loopne
loope
js
jno
insl
xchg
cmc
pop
sti
mov
adc
sub
imul
ret
mov
roll
or
js
subl
out
ja
xchg
fsubr
sbb
orl
loop
jb
call
mov
imul
cmpl
hlt
jmp
insl
jg
aas
mov
fdivl
stos
stc
lea
in
out
cmp
sub
add
cld
adc
push
or
jno
pusha
add
je
imul
pop
or
leave
mov
lret
mov
xor
pop
xlat
fsubr
ficomps
cmp
in
popa
int
xchg
jmp
pop
incl
ds
jl
clc
jnp
add
pushf
dec
fs
test
loopne
jg
shl
mov
rorl
mov
push
cmp
nop
fldt
in
push
dec
mov
repz
sub
data16
imul
movsb
dec
iret
mov
jge
fs
es
cmc
out
in
lret
mov
pop
lock
nop
lret
mov
daa
adc
ljmp
mov
xchg
mov
mov
push
out
and
xor
ss
not
xchg
scas
pop
jae
cmc
pop
pop
mov
lods
mov
lods
and
shrb
mov
popl
ja
clc
sahf
lea
push
in
fisubs
shrb
push
add
jl
stc
or
shlb
dec
ret
sbb
push
fistpll
add
dec
and
cmp
fnsave
mov
lds
out
lds
ficoml
outsl
mov
and
jmp
mov
in
and
xchg
cmpsl
cmp
ss
arpl
adcl
pushf
jnp
in
push
jle
ret
push
mov
lret
test
push
sub
in
sub
lods
sub
inc
adc
push
xchg
xlat
push
into
jne
loopne
outsb
inc
dec
pop
dec
mov
mov
lods
insb
sub
lods
mov
or
jecxz
xchg
shlb
outsl
dec
jge
adc
iret
ja
call
cmpsb
push
mov
mov
dec
xorb
pop
jle
mov
out
scas
insb
fstpt
jb
rorl
adc
fdivrs
stos
sub
jp
xor
or
push
cmp
shll
mov
cmp
fldenv
or
mov
cmp
lret
cld
fdecstp
adc
jo
jae
pop
loopne
data16
jns
repnz
mov
iret
out
divl
mov
adc
or
push
xor
add
ja
push
mov
push
pop
test
mov
mov
mov
mov
dec
sahf
sbb
push
or
push
xchg
cmp
inc
sub
jb
xchg
xor
enter
insb
add
sub
pusha
xchg
inc
mov
pop
aaa
or
fucom
out
sub
xchg
aam
test
mov
pop
enter
fisubs
mov
pusha
ficompl
push
inc
popl
sti
inc
push
xchg
rcrb
sub
ficompl
ljmp
add
jle
icebp
repz
iret
out
lret
cmp
mov
gs
icebp
in
idiv
pop
jbe
stos
sub
mov
push
sub
cltd
fsubrl
sbb
xchg
mov
xor
or
xchg
jns
sub
pop
mov
xor
ret
sahf
insl
test
imul
in
xchg
push
pop
test
mov
cli
add
inc
xchg
and
test
xchg
aaa
mov
shll
mov
jb
cmp
cs
pushf
fs
fmul
insb
cli
notl
pop
pop
movsb
dec
outsb
push
jns
fiadds
mov
popa
adc
push
stc
cmp
or
mov
mov
test
push
bound
jmp
enter
rcrl
shll
sub
lcall
xor
pop
clc
data16
xchg
xchg
aad
imul
add
and
testb
subl
inc
sahf
pop
lcall
and
mov
sub
mov
xor
not
test
aam
lcall
hlt
cmc
pop
mov
nop
push
scas
sub
js
insl
sub
pushf
mov
imul
cmp
lds
fcmovne
les
jmp
adc
and
movsl
dec
lods
mov
pop
push
mov
xor
sub
insl
pushf
lds
js
sbb
pop
ret
inc
aad
mov
cmp
push
cmp
mov
lds
imul
xchg
dec
mov
pop
mov
jbe
push
mov
push
xchg
adc
jecxz
test
pop
xchg
push
sbb
push
sub
inc
inc
shll
mov
xchg
pop
gs
cmp
and
push
stc
dec
daa
imul
push
and
mov
sub
sbbl
jmp
fdivrp
seto
and
movsl
popa
in
jp
fistpl
push
and
adc
dec
imul
ja
data16
pop
jno
sbb
mov
in
xchg
rorb
pop
push
sub
xchg
cld
push
inc
sbb
aam
and
aad
xlat
in
cmp
and
ret
adc
xor
ljmp
into
iret
mov
sub
test
loop
jbe
addr16
push
push
callw
dec
out
add
test
xchg
xor
inc
ljmp
mov
scas
loopne
mov
pop
jle
adc
add
jecxz
in
add
pop
inc
push
fidivl
and
jns
xchg
xchg
inc
aaa
lea
pushf
mov
cmp
lcall
push
sti
inc
ljmp
lret
cmp
xor
imul
fwait
sub
push
jns
mov
notl
cmp
scas
int3
mov
mov
call
pop
inc
pop
test
add
mov
sub
and
and
lods
jp
mov
ja
push
out
lcall
outsl
pop
repnz
es
xchg
or
ret
dec
out
push
mov
and
jle
fnstsw
mov
fisttps
dec
dec
lods
dec
test
push
iret
pop
mov
fucom
iret
cs
xchg
pop
mov
push
jb
dec
loopne
xor
pop
inc
stos
push
mov
xor
insl
mov
mov
inc
xor
clc
mov
dec
sbb
sbb
jl
jae
mov
xchg
sbb
jbe
mov
fdivrs
test
lret
lds
jecxz
pop
je
and
cmp
rorl
inc
jo
dec
std
psubusw
fstpl
jmp
cltd
and
fsubrs
jae
pop
dec
insb
adc
mov
jecxz
aaa
push
cmp
lea
dec
popl
aas
shll
outsb
jno
ret
sub
repnz
rcrl
cmp
or
xchg
cmp
pop
ret
jmp
push
inc
mov
out
jb
mov
mov
movl
pop
mov
mov
rcrl
outsb
int
inc
add
stc
or
or
xor
mov
mov
imul
sahf
scas
push
imul
xchg
flds
sarb
mov
xchg
repnz
pop
mov
imul
xchg
mov
hlt
inc
dec
jbe
cltd
stos
inc
push
push
pop
in
les
xor
in
push
imul
in
movb
jb
lret
mov
mov
sbbl
mov
jp
lea
insb
ss
sar
ret
sti
jge
test
int
xor
pop
jb
xor
mov
ficomps
bound
xchg
movsl
jno
je
dec
pop
and
sub
arpl
fiadds
test
cmp
jae
adc
sbb
ror
test
rcrb
mov
sub
pop
adc
lret
mov
sub
jge
shr
cmpsl
fs
and
cli
inc
jno
fldt
pop
mov
mov
cmp
stos
leave
cmp
jecxz
mov
push
in
jno
push
test
xchg
leave
das
inc
cmpsl
cmp
in
popf
scas
push
sbb
jb
lods
xchg
pushf
lcall
or
insb
xor
mov
add
jnp
add
bound
push
and
aam
xchg
and
sub
insl
ljmp
pusha
negl
call
jne
lcall
repnz
pop
push
inc
je
mov
push
mov
or
cmp
cld
inc
out
jne,pt
cld
add
std
cmpsb
dec
orl
imul
adc
cld
rcll
addr16
or
sarb
mov
lahf
inc
fptan
push
lcall
lods
dec
aam
sub
pop
cmp
dec
mov
leave
pop
cmc
lahf
shll
xchg
sahf
out
and
enter
xorb
adc
pushf
ret
sbb
mov
xchg
hlt
cmp
sub
adc
xor
add
jnp
pop
lret
adc
into
jne
and
xor
mov
lods
mov
sbb
stos
iret
xchg
ret
mov
fsub
fwait
in
mov
and
pusha
gs
faddl
in
adc
mov
lahf
xor
inc
xchg
es
sbb
test
mov
loope
sahf
jbe
jbe
cld
sbb
add
cmp
les
cmpsl
sub
xor
mov
or
mov
insb
jle
lods
mov
nop
mov
inc
lret
push
es
jb
je
dec
shl
jae
push
sub
adc
add
repnz
dec
mov
aam
into
and
adc
mov
pop
lock
insb
inc
jno
rorl
ljmp
cltd
pop
jnp
andl
or
xor
icebp
xchg
aam
int
push
mov
xchg
jl
loopne
mov
sub
mov
cmp
mov
cmp
cld
mov
jns
cmc
outsb
fwait
cmpsl
test
mov
push
xor
rcrb
mov
sahf
cmp
or
mov
sbb
or
jnp,pn
or
stos
adc
mov
movsl
jle
lock
dec
xor
xchg
sub
or
push
rcr
jge
mov
xchg
sbb
push
jno
mov
adc
lret
and
les
mov
lcall
in
lret
insb
mov
pushf
hlt
dec
stos
mov
outsb
xor
jle
jnp
leave
xor
jb
ljmp
xchg
mov
mulb
jmp
fwait
loopne
cmp
jns
insb
lret
push
aaa
shlb
pop
mov
rolb
outsb
lcall
outsl
imul
sub
adc
sub
inc
pop
es
cmp
sbb
call
aaa
mov
sub
imul
adc
pop
xor
jne
aam
and
psubusb
sbb
mov
mov
jecxz
pop
sbb
adc
lock
adc
jecxz
pop
inc
stos
add
add
mov
jl
leave
or
xchg
adc
xchg
xor
arpl
pop
cmc
xor
xchg
mov
pusha
mov
sbb
inc
push
fsubrp
popf
insl
call
stos
and
pop
cmp
das
xchg
leave
and
imul
xor
test
incl
movsb
inc
dec
cld
imul
jl
je
mov
xchg
js
das
ljmp
orb
out
adc
negb
mov
out
fwait
outsb
lods
lea
stos
jl
mov
and
scas
dec
ret
mov
jo
and
push
adc
xchg
mov
out
nop
fcompl
xchg
inc
mov
lods
scas
sbbb
push
dec
jns
fisubs
daa
pop
les
adc
les
inc
loop
cmp
mov
cmp
dec
lret
or
lods
and
rol
out
sbb
cmp
sbb
xchg
sub
xchg
sbb
and
xchg
stos
mov
frstor
xor
mov
pushf
dec
inc
in
mov
inc
mov
fnstsw
mov
and
stc
xchg
push
mov
ds
xor
mov
cmc
mov
popf
sti
mov
add
push
shll
push
add
mov
mov
jl
pop
addb
mov
dec
sahf
mov
stos
sub
mov
mov
cmp
and
push
div
gs
jle
fcmovu
push
lock
inc
lret
ret
test
sbb
or
mov
fildll
dec
shll
add
das
in
push
jmp
adc
dec
das
js
mov
xor
cmpsb
aam
jb
cmp
repz
mov
adc
inc
pop
jo
sbb
cli
loopne
inc
pop
adc
les
xchg
fwait
lahf
out
sub
xor
sbb
nop
js
and
lahf
xchg
jb
adc
mov
push
dec
xor
addr16
mov
mov
dec
jle
sbb
pop
jmp
orl
shrb
ljmp
addr16
aad
insb
cli
fbld
add
data16
mov
xchg
std
iret
push
mov
push
icebp
dec
mov
dec
pop
sahf
mov
stc
add
scas
adc
pushf
or
in
sbb
mov
fs
repnz
test
cmp
xchg
pop
mov
adc
data16
shrb
outsl
sub
jb
xchg
mov
push
pop
enter
adc
dec
xchg
rcrb
out
push
xchg
pop
mov
and
push
dec
xchg
inc
mov
pop
mov
gs
push
movsb
stos
ss
jp
push
cmp
xchg
cmp
cs
mov
ja
xchg
dec
adc
test
adc
inc
add
or
enter
mov
adc
xchg
mov
out
pop
hlt
mov
xor
insl
inc
sbb
xor
daa
xchg
jmp
bound
movl
pop
mov
cmpsl
mov
xor
les
inc
stc
pop
xchg
movsl
pushf
sar
mov
pop
jb
mov
and
imul
xchg
lods
jns
jb
mov
gs
push
xchg
lret
popf
cmp
sbb
sbb
dec
mov
mov
lcall
fdivs
rolb
clc
nop
xchg
push
adc
loop
inc
pop
xchg
cmp
xchg
cmp
lods
in
xchg
xchg
cld
push
push
out
cwtl
jmp
aas
movsl
stc
add
sti
outsb
xor
stc
roll
pop
jl
sbb
sahf
cmpsb
xor
mov
out
jae
xchg
shrl
fs
lods
dec
inc
xchg
or
das
mov
scas
jmp
rorl
lret
push
movsb
rorl
push
fnstenv
mov
xchg
test
add
inc
bound
repnz
psubsb
lds
icebp
ds
or
pop
int3
mov
cmp
fucom
movb
test
xchg
rcl
sbb
inc
jnp
in
bound
in
imul
gs
mov
sub
pop
add
jecxz
fisubs
andb
mov
test
push
and
test
cltd
xor
add
push
scas
lret
adc
add
xor
mov
orl
fwait
push
add
enter
push
or
lret
push
sbbb
gs
adc
dec
sbb
sbb
xor
xlat
push
jb
xor
jp
jns
out
popa
cmpb
jecxz
jmp
dec
jl
pushf
xor
fmull
pop
sub
in
sbb
xlat
rorl
fbstp
xor
lods
ret
jge
pop
jg
adc
sahf
decb
push
ljmp
lcall
mov
jns
es
dec
mov
cmp
sbb
pop
push
je
psubusb
fs
adc
jns
push
cltd
fs
inc
and
inc
sbb
std
aas
cmpsb
inc
xchg
cwtl
lret
test
lret
popa
sub
sbb
jge
lock
lahf
loop
in
inc
clc
aam
lock
in
outsl
imul
push
out
sbb
outsl
imull
hlt
ret
ret
mov
jle
sbb
ja
fstps
adc
cmp
mov
cmpsl
cmp
fidivl
pop
fwait
icebp
outsb
and
mov
jbe
adc
shll
pop
nop
lahf
jno
jmp
aam
sbb
xor
inc
scas
and
and
lret
jp
pop
lock
push
adc
inc
cltd
scas
inc
or
sahf
aam
add
pop
sti
dec
and
outsl
iret
ret
idivl
test
ret
fdivs
mov
pop
addl
mov
xchg
dec
hlt
mov
mov
aas
mov
pop
stc
popa
adc
xor
dec
pushf
call
das
insl
push
jg
iret
mov
jns
lret
nop
adc
lcall
dec
addl
jo
dec
loope
and
sub
pop
call
mov
daa
xor
mov
xchg
mov
shrl
dec
ret
test
jg
inc
flds
jge
lahf
xor
stos
fdivrp
sub
jbe
adc
icebp
jg
xor
mov
pop
mov
fisubrs
js
test
outsb
add
mov
imul
dec
scas
inc
shlb
insl
mov
dec
cs
pusha
shlb
jno
addr16
shlb
mov
push
jmp
adc
push
xchg
push
mov
iret
or
clc
jbe
push
imul
imul
pop
stos
add
or
cwtl
adc
lods
push
add
xlat
mov
push
jmp
das
enter
shrb
test
xor
repnz
mov
pop
outsl
fidivrs
insb
pushf
cmpsb
jne
div
clc
jnp
cmpsb
rcl
in
pop
out
out
lods
push
bound
push
and
xlat
xor
jno
xor
push
lods
mov
dec
mov
pushf
in
push
mov
mov
xor
mov
mov
addr16
xchg
outsl
cmp
bnd
popl
push
jne
or
jno
sbb
sahf
cmp
sbbl
cmp
xchg
or
sbb
push
dec
fisubrs
pop
jmp
jae
mov
outsb
test
jae
inc
cmp
sub
cmp
fs
sbb
adc
aam
ret
lods
cmp
xchg
push
mov
lea
out
fsubrs
sub
int
jp
sbb
add
jge
mov
adc
inc
pop
mov
pop
stos
or
daa
notl
or
mov
test
clc
rcrb
pusha
push
insb
sub
mov
push
test
mov
pop
movsl
sbb
cmp
imul
xor
inc
into
inc
xchg
xorb
mov
ret
ljmp
adc
inc
jle
arpl
sti
xchg
jge
add
inc
nop
or
cmp
aaa
test
popa
out
and
or
xor
mul
in
cmpsb
mov
adc
imul
stos
pop
xchg
test
sbb
divb
mov
lcall
test
sub
div
xlat
cmpl
in
pushl
pushf
sbb
insl
pop
in
jns
out
fs
mov
push
and
inc
ret
insb
mov
cmp
test
test
lret
sub
repz
aam
pop
imul
push
jbe
mov
adc
xlat
jge
adc
enter
pop
inc
mov
fs
xchg
repz
push
inc
std
pop
sbb
push
daa
cmc
fisubrl
out
sub
jmp
pop
push
mov
xchg
jmp
sbbl
mov
xchg
shlb
push
test
pushf
movsb
jl
push
cli
add
mov
lods
jp
dec
push
xchg
pushf
ficoms
outsb
dec
addr16
mov
xor
push
ret
in
push
out
loope
stos
or
mov
cli
cmp
xchg
leave
out
and
and
pop
popa
dec
jns
mov
out
cmpsl
adc
neg
pop
ja
imul
lret
mov
xchg
in
ds
xchg
inc
sub
cli
fdiv
inc
scas
shrl
xor
lock
lock
adc
and
inc
add
xorl
pop
test
push
fmul
loope
lods
or
xchg
pop
cs
adc
jne
jmp
shlb
pop
pop
or
repnz
sbb
lods
jl
fwait
push
nop
xor
cmc
xchg
xorb
ljmp
inc
sub
out
inc
inc
sub
sub
jge
mov
lods
lods
jge
lahf
and
adc
lods
push
mov
jae
pmaxsw
dec
mov
pop
scas
outsb
inc
cmp
dec
loop
ljmp
jle
push
and
jle
sbbl
push
int3
mov
lea
iret
pop
mov
xchg
and
mov
popa
pop
leave
out
xchg
adc
adc
dec
aam
dec
and
xor
int3
test
aam
cltd
and
dec
jmp
sub
enter
shrb
mov
push
cmovno
cwtl
pop
lods
lock
lea
mov
xchg
inc
mov
out
insb
add
les
sbb
or
cld
loop
add
or
int3
std
mov
popf
test
dec
mov
repz
out
jns
mov
stos
icebp
js
cmp
clc
loop
sub
outsl
push
insb
jno
inc
jb
mov
jg
push
sbb
or
jmp
adc
test
nop
dec
pop
dec
fisubrs
cmp
fisubl
add
push
push
shrb
fisubl
cmpsb
aam
and
aad
inc
xchg
mov
daa
fsubr
xchg
jns
or
sbb
sub
fisttps
lock
shll
inc
pop
fldl
cmp
inc
mov
test
xchg
subl
push
and
lea
xor
inc
jg
cmpsb
adc
insl
les
out
aaa
xchg
inc
xor
mov
insl
jge
xchg
jnp
pop
adc
pop
mov
shlb
push
pop
fiadds
ds
add
inc
aam
inc
mov
sbb
pop
push
iret
nop
lcall
push
lods
mov
sub
cltd
mov
std
or
mov
aas
iret
rorl
mov
ret
test
push
mov
shl
inc
sti
jmp
das
pop
decl
xor
adcb
adc
dec
jns
dec
jns
pop
sub
adc
mov
sbb
in
add
cmp
inc
sbb
cmp
xchg
cmp
push
jmp
fisttpll
adc
push
flds
push
adc
pop
sbb
jmp
xchg
aad
ss
in
sub
aas
or
dec
pop
mov
mov
adc
push
lret
and
pop
inc
jmp
clc
mov
xor
add
push
repnz
dec
jbe
adc
xchg
shrb
cmp
jo
cwtl
fstpt
pusha
jmp
jae
test
loope
mov
pop
jns
in
wrmsr
test
aad
push
loope
jmp
push
bound
repnz
in
cmp
rcr
push
rorl
ljmp
xchg
pop
fadds
cmp
inc
jno
cmp
test
sahf
pop
xchg
sub
fnsetpm(287
cmc
lock
push
scas
repz
rclb
push
fxch
inc
dec
cli
mov
adc
insl
lods
in
mov
rcll
jle
lret
mov
mov
sbbb
mov
mov
mov
das
jmp
adc
in
ss
mov
aaa
or
cmp
pop
inc
inc
jno
add
push
mov
scas
push
fsubrs
and
jl
add
pop
aaa
movsl
push
pop
sahf
daa
or
sub
pop
xchg
bswap
test
cmpsl
jg
mov
mov
mov
aad
stos
fs
shrl
jno
pop
mov
sub
out
xchg
cs
add
pop
scas
js
in
outsl
or
loope
repz
out
mov
adc
add
jo
inc
dec
orb
dec
push
sbb
lea
pop
add
hlt
test
cmp
push
imul
ret
add
lods
sub
pop
movsb
in
sahf
rorb
sbb
inc
xchg
std
mov
insl
sub
xor
imul
or
rcl
dec
idivb
ja
fisttps
xchg
call
aas
push
mov
sbb
les
sbb
cmp
stc
dec
xchg
sub
iret
iret
insl
push
and
xlat
pop
xchg
sbb
jno
cmpsb
inc
aam
cli
movsb
in
divl
jo
pop
ss
insb
test
mov
decb
pop
sub
ds
sbb
inc
push
add
jge
jmp
jo
mov
data16
or
and
and
sub
sbb
jl
loop
fmul
adc
xchg
adc
xor
adc
sbb
sub
push
fdiv
iret
mov
ret
lds
mov
jmp
loop
mov
mov
mov
push
stos
outsb
add
loope
gs
dec
and
push
mov
in
push
cli
cs
gs
sbb
add
and
jp
jecxz
pushw
push
test
jle
ret
div
js
movsl
or
lock
push
or
rcll
js
jne
add
dec
aas
gs
es
xor
fiaddl
fwait
ds
fwait
imul
pop
ret
scas
mov
fmulp
imul
xchg
and
mov
arpl
ret
pop
sbb
lock
loope
and
inc
sub
jns
push
stos
out
xchg
jnp
jno
or
push
addl
xchg
jg
mov
in
insl
idivl
push
dec
xchg
adc
jp
jg
shlb
and
ficompl
pop
dec
mov
les
ds
jbe
cld
cld
hlt
sbb
inc
ds
imul
push
lds
loop
addr16
fnstenv
repz
and
dec
adc
imul
lret
push
out
repz
jp
out
mov
outsb
hlt
outsl
outsb
xor
rcrb
xchg
xchg
mov
imul
jne
call
mov
aas
push
pop
jne
adc
repz
and
lcall
adc
xor
aas
cmpsl
ljmp
sbb
inc
lahf
aaa
inc
aam
add
ret
sbb
jb
and
or
push
adc
inc
inc
pushf
mov
xchg
adc
mov
push
fisubl
push
lods
add
xchg
icebp
fs
sbb
add
jnp
js
lahf
js
push
jecxz
js
lcall
in
mov
lret
add
pop
add
sbb
sub
cmc
sbb
xor
je
fucomp
mov
lods
xor
push
loope
or
add
adc
pop
push
mov
push
mov
into
outsb
cmpsb
dec
add
mov
sbb
lret
dec
mov
adc
mov
fmul
ja
daa
mov
mov
inc
shrl
aaa
shl
outsb
imul
dec
das
arpl
aad
shlb
mov
mov
mov
adc
in
inc
xchg
and
cld
mov
and
and
lds
xchg
dec
cmc
add
and
and
ret
jmp
out
sbb
push
jle
shll
lahf
scas
fwait
jbe
cmp
and
or
pop
inc
and
test
repz
and
popf
nop
loopne
adc
lcall
addr16
sub
push
nop
js
pop
lods
loope
lods
push
mov
sbb
push
mov
adc
or
test
push
mov
addb
nop
add
stos
mov
pop
mov
imul
cwtl
mov
xchg
imul
mov
jns
aaa
out
test
cmc
fsub
mov
push
xor
cltd
xchg
xchg
push
fsubs
xor
and
xchg
xlat
push
mov
lcall
cmc
call
sbb
pop
pop
iret
lock
jmp
mulb
mov
jnp
repnz
mov
nop
mov
add
iret
je
cmc
push
push
repz
loopne
jge
leave
jle
mov
into
fbld
orl
or
icebp
nop
iret
lret
jle
lea
stos
imul
pushf
sbb
repz
divb
xor
and
push
xor
sbb
pop
pop
aad
lret
pop
add
xor
loope
lret
jb
pop
cmpsb
bound
andl
les
int
push
ja
rorl
xchg
adcl
xchg
out
mov
sbb
hlt
bound
enter
push
cmc
inc
cmc
lds
popl
jle
outsb
jmp
js
rcrb
add
stos
push
arpl
push
jnp
adc
mov
imul
sahf
out
lahf
aad
cmpsb
cmc
xchg
bound
cmp
fsub
mov
out
lock
mov
ss
push
cwtl
iret
out
push
pop
imul
mov
inc
xlat
xchg
jne
cmp
add
push
adcl
mov
aaa
cmp
push
adc
sbb
adc
mov
outsb
leave
in
call
mov
xchg
clc
push
pop
and
ja
or
sbb
enter
lcall
dec
fiadds
jns
pop
mov
call
or
sbb
mov
or
roll
or
sub
popa
enter
popf
in
repnz
sbbl
mov
pop
sbb
xor
sbb
movsb
scas
pop
mov
jecxz
aam
jle
pop
std
inc
into
pop
dec
hlt
dec
push
jbe
lret
enter
fisubs
mov
clc
xchg
cmpsl
pop
inc
popf
test
fists
divps
hlt
leave
in
loop
cmpb
out
inc
lahf
imul
pop
lods
jp
xchg
mov
mov
fwait
jo
push
fadds
mov
cmp
xor
mov
data16
std
sub
adc
pop
aam
mov
cmp
in
in
jmp
mov
fsubr
shl
dec
rcrl
in
mov
push
adc
enter
icebp
imul
ret
mov
das
cmp
je
shll
ljmp
rclb
pop
fists
push
push
pop
xor
jae
shrb
sbb
out
cmpsl
loopne
push
push
add
push
mov
fdiv
pop
scas
pop
fiaddl
mov
xchg
mov
adc
fldcw
push
and
loope
fildl
adc
or
push
xchg
loop
dec
add
xchg
sbb
ret
ffree
push
out
xor
or
mov
rorb
daa
push
xor
in
jp
jnp
inc
jecxz
mov
add
mov
clc
shlb
xabort
push
lds
arpl
push
dec
mov
in
dec
jge
jbe
cld
lret
push
loopne
lods
and
xor
sbb
mov
and
ficoml
pop
scas
int
sub
mov
push
sbb
push
test
mov
mov
jg
and
sub
andb
xchg
jg
xchg
outsl
in
push
aas
in
scas
aaa
mov
pop
loop
or
mov
cmp
mov
in
pop
idivl
jl
daa
loope
cmp
mov
int
shl
in
fidivrs
sub
xchg
xabort
in
adc
xchg
xor
mov
inc
cmpsb
push
xchg
push
or
xchg
and
in
xor
fisttpll
dec
aas
fidivrl
or
or
sbb
xor
aaa
xchg
or
push
inc
xchg
in
fwait
and
fs
push
mov
lock
fisubs
push
inc
jp
xchg
loop
dec
fwait
mov
test
pushf
pusha
or
pop
jp
lahf
mov
int
fdivrs
mov
adc
sahf
push
push
lret
leave
sub
cmp
dec
pop
jae
push
divl
and
mov
in
insb
ds
and
pop
ja
inc
pushf
sub
test
and
push
gs
pop
cmc
mov
lcall
pushf
adc
in
sub
sti
insl
cmp
mov
fcomps
add
in
into
pop
pop
xchg
setnp
or
add
les
idivb
inc
push
pop
repnz
cs
out
jo
mov
ret
xor
adc
mov
jno
out
xor
repz
iret
std
and
ret
xor
xchg
cltd
cwtl
test
add
cmp
mov
mov
out
jnp
fadd
shrl
push
mov
cs
testb
cmp
lods
andb
outsl
sub
divb
movb
repz
mov
push
imul
inc
sar
sub
jmp
ret
xchg
cmpsl
mov
mov
push
push
xor
daa
scas
pop
jecxz
xchg
into
rcr
sub
ljmp
jno
shl
push
int3
ret
insb
movsb
mov
daa
add
out
push
push
inc
aaa
subl
adc
popa
jne
dec
or
jne
push
fst
inc
dec
ret
shll
fmuls
fistpl
sbb
repnz
pop
pop
dec
adcb
movsb
shrl
insl
mov
dec
arpl
dec
bound
lret
ret
pushf
jae
icebp
dec
test
sahf
sbb
pop
mov
cmc
fs
push
stc
adc
fisttpl
aam
in
push
jno
ss
adc
pusha
aam
and
loop
or
mov
xor
and
sub
or
fists
cltd
mov
mov
cmc
fadd
fmul
mov
adc
push
jo
adc
xchg
cmc
sbb
testb
jne
leave
jbe
je
pop
mov
xchg
outsl
test
and
cltd
jo
adc
cmpsl
and
fsubrl
xchg
fwait
popl
push
dec
movsl
test
and
insl
push
adc
and
jne
dec
adc
mov
xor
mov
push
inc
inc
in
ficomps
movsl
jns
out
add
push
and
outsl
pop
mov
inc
les
fildl
pop
pop
mov
shll
fcoml
pop
xchg
mov
and
xor
xlat
dec
pop
in
inc
mov
mov
lock
pop
movsl
ficoms
push
shl
sahf
xchg
cld
js
shll
js
push
add
aam
adc
lret
xchg
test
push
inc
test
push
lahf
jno
cs
mov
pop
call
sbb
pusha
cmc
fldl
push
adc
mov
xchg
dec
sbbl
jbe
ret
push
lcall
and
mov
push
ret
xchg
arpl
adc
pop
insb
lret
loop
xchg
aaa
jb
mov
mov
or
in
scas
sti
das
stc
and
jbe
mov
mov
insl
inc
xchg
cmovb
cwtl
or
mov
je
subb
sbb
das
push
bound
clc
inc
push
mov
sbb
sar
push
pop
imul
jecxz
mov
sbb
inc
hlt
clc
xor
sub
cmp
adc
mov
sub
dec
jo
push
jnp
sti
popf
dec
mov
mov
loope
scas
outsl
push
fwait
call
aad
lods
add
ss
jnp
jne
mul
pop
mov
out
dec
cmp
cld
rcrb
cmp
jne
ret
aaa
mov
mov
mov
push
mov
cmp
lret
adc
ds
mov
loopne,pt
add
rsm
push
xchg
jge
inc
xchg
pop
mov
outsb
mov
lahf
cmp
add
sar
loopne
loop
psubusw
push
insb
iret
mov
sahf
push
adc
mov
xchg
dec
fisttpll
mov
sub
mov
leave
call
ljmp
dec
jg
push
or
sub
pop
mov
mov
cmp
inc
lahf
dec
xchg
mov
push
pop
push
adc
push
test
cmc
xor
cmpsb
cwtl
mov
lret
mov
insl
dec
cmpsb
std
inc
jno
test
shrb
out
lods
and
and
inc
sbb
push
add
add
adcb
sbbb
add
mov
sub
add
pop
mov
test
xchg
xchg
sbbb
pop
push
add
sbb
adc
inc
roll
ret
adc
mov
mov
xor
mov
cs
add
and
xchg
mov
adc
xchg
add
push
insl
sbb
les
int
push
dec
movsl
adc
mov
scas
lahf
fwait
mov
cwtl
cli
push
mov
sbb
int
mov
test
xchg
int
fwait
mov
sub
dec
dec
fs
sub
call
repnz
fsubrs
repz
xor
inc
pop
mov
imul
fcoml
add
rolb
pop
mov
adcl
fwait
mov
xor
inc
push
cmp
scas
test
and
in
mov
or
pop
add
or
and
push
std
adcl
movsl
jmp
mov
mov
mov
dec
inc
dec
rol
mov
xchg
mov
jae
fildl
xchg
dec
and
xor
push
data16
rcr
in
xlat
and
cmpsl
or
int
dec
jl
jg
mov
pop
outsl
lret
sti
movsb
lcall
pop
push
sub
repnz
cmp
gs
dec
push
jbe
stos
vstmxcsr
sub
sub
in
push
test
mov
rorl
xchg
stos
leave
mov
cmp
push
fidivrl
inc
push
jno
sub
jp
ja
mov
jle
sub
mov
rcl
sbb
int
stos
popl
cmp
xchg
mov
xchg
decl
push
push
push
jne
xor
adc
ret
cmp
scas
rorb
push
push
gs
clc
mov
jnp
iret
js
and
int
pop
stc
sbb
mov
add
pusha
pop
push
jo
mov
jb
add
movsl
fstps
jns
out
std
xor
out
jae
or
add
lcall
leave
xchg
pop
call
and
lods
pop
lcall
xchg
inc
imul
adc
mov
cmpsb
ret
add
lock
shll
filds
cwtl
adcb
orl
out
sub
in
fs
out
inc
or
in
pop
les
std
adcl
xchg
sahf
mov
xchg
mov
les
inc
sbbb
inc
add
mov
push
or
and
sti
fnstcw
mov
cmp
sbb
pop
mov
js
sub
mov
movsl
jmp
xchg
inc
xchg
xchg
es
push
arpl
mov
xor
leave
stos
test
add
dec
mov
mov
mov
pusha
loope
and
test
fldcw
dec
xchg
mov
dec
ljmp
xchg
outsb
sub
scas
xchg
and
js
xchg
xchg
out
adc
fisubrs
outsb
pop
imul
pop
mov
pop
jnp
insl
in
mov
push
adc
sbb
mov
pop
sub
daa
sub
notb
into
sub
mov
xchg
jne
ret
arpl
les
outsb
andb
ljmp
and
dec
xchg
popf
aas
jbe
xor
mov
sti
les
cmp
shrb
popa
xor
das
adc
push
push
and
mov
scas
inc
insb
add
sahf
outsl
cmc
aam
pop
cmp
xchg
mov
jns
push
inc
dec
cmp
dec
shrb
push
adc
insb
sarb
test
pusha
sbb
and
cltd
push
cmc
ja
and
shll
push
imull
imul
dec
rcrb
mov
outsb
dec
lahf
sub
ja
adc
rcll
cli
pusha
pushf
dec
sub
pop
push
inc
in
jns
sub
or
mov
aas
mov
clc
inc
pushf
into
and
xchg
pop
mov
push
dec
mov
jge
je
xchg
outsb
mov
push
push
sbb
xor
stc
cmpsl
addb
push
dec
pop
jns
mov
push
sbb
popf
inc
in
mov
icebp
int
les
sqrtps
xchg
gs
jae
fs
dec
jnp
lahf
cmc
popa
lret
mov
jnp
addr16
sbb
cwtl
mov
cmp
push
aam
call
pushf
mov
iret
mov
xlat
mov
xchg
das
jns
imul
dec
xchg
into
shrb
add
inc
jg
fs
push
mov
pop
inc
mov
xchg
add
das
dec
pop
or
aad
fsts
sub
inc
push
sub
fcoml
pop
jmp
popf
add
addl
hlt
fcomps
or
fsts
jge
sbb
lret
cltd
cld
icebp
out
fdivs
das
xor
pusha
mov
stos
arpl
xchg
jns
dec
fs
pop
insb
xchg
xor
sub
mov
or
xor
pop
jge
hlt
icebp
imul
bound
jl
js
sbb
ja
outsl
jg
fsubl
rcrb
xor
arpl
sbb
pusha
mov
cwtl
and
pop
shll
jl
jnp
mov
add
stos
adc
and
or
push
repz
daa
xor
pop
int
push
ss
repnz
push
lret
enter
jecxz
outsl
sub
cmpb
rclb
xor
popa
cmp
push
push
jb
in
sub
and
into
clc
dec
pop
push
jl
fcmovb
and
xlat
clc
les
subb
lea
movsb
pop
in
sub
sub
sti
sti
mov
pop
dec
insb
cmp
orl
pop
jne
lock
fsubrl
mov
sbbl
xacquire
mov
or
xchg
js
or
daa
iret
inc
addr16
arpl
mov
sarl
test
mov
inc
jae
imul
cli
aas
fwait
enter
test
icebp
push
dec
les
push
dec
sbb
stc
arpl
jns
imul
frstpm(287
insl
jne
ss
lds
xor
movb
das
push
or
mov
imul
jl
jmp
push
ljmp
out
ja
jp
xlat
mov
mov
repnz
xor
mov
adc
mov
loop
pop
stc
bound
in
push
mov
fnstsw
movsb
jae
mov
xchg
out
int3
xchg
sahf
pushl
lret
sbb
repnz
xchg
or
xchg
push
mov
mov
repz
mov
mov
pop
mov
lcall
add
pop
dec
cmpsb
gs
jmp
xor
mov
data16
sahf
dec
dec
fldz
iret
cs
scas
jno
jp
add
cltd
popa
mov
mov
mov
mov
sub
pushf
adc
ret
pushf
dec
adc
sbb
jmp
neg
sbb
mov
clc
in
loopne
pop
mov
jne
in
cmp
sarl
imul
inc
out
mov
js
rclb
push
mov
mov
jl
push
test
scas
push
jp
ret
xchg
repz
stos
mov
stos
int
outsb
idivl
jle
jle
fldenv
std
or
push
in
push
jge
push
and
xlat
mov
andl
mov
push
xor
mov
add
jl
xor
mov
mov
sbb
arpl
mov
jecxz
clc
pop
xchg
nop
jo
incb
stos
ljmp
mov
dec
push
mov
rcrl
and
fidivrl
adc
push
out
in
rcr
test
inc
add
pushf
outsb
or
sub
mov
adc
xor
dec
xchg
lea
xchg
xchg
aam
cwtl
enter
out
popa
enter
mov
mov
xor
mov
roll
mov
adc
xchg
pop
rol
leave
mov
add
shll
xchg
and
mov
and
push
mov
ss
jnp
pop
stc
mov
lea
push
ret
stos
std
and
iret
in
aad
aaa
or
sbb
dec
and
aas
scas
mov
testb
dec
xchg
test
outsl
int3
push
shrb
xlat
stos
icebp
fistpll
std
repz
js
cli
mov
jae
div
outsb
inc
jns
loop
clc
sub
add
jbe
out
clc
cmp
add
scas
pop
mov
leave
xor
clc
push
lods
pushf
mov
pop
lock
clc
out
bnd
dec
in
int3
imul
adc
mov
sahf
jae
mov
add
out
mov
pop
in
mov
les
sbb
repz
cmpsl
lret
mov
outsl
ret
out
sti
imul
fsub
mov
mov
push
shll
inc
add
pop
pop
mov
es
sarl
jb
dec
jae
mov
jecxz
xchg
shrl
les
gs
mov
aaa
jmp
mov
or
mov
mov
xor
xchg
loop
pop
fstps
and
cmp
lea
sub
sub
in
jl
mov
mov
lods
push
dec
pop
xlat
cmp
push
in
js
sar
ds
movsl
outsl
scas
add
sub
stc
inc
dec
push
xor
push
xchg
lds
mov
dec
push
mov
aas
imul
push
cmp
rclb
add
add
shll
leave
roll
xchg
xchg
push
mov
push
lea
dec
sar
aam
ret
mov
fdivrs
ret
jge
leave
or
mov
scas
sub
mov
icebp
outsl
or
sahf
cmpsl
mov
popa
sbb
dec
rorl
and
fcmove
cmp
xchg
ja
lods
shll
inc
push
ret
das
outsb
call
stos
push
mov
jmp
dec
imul
fildll
js
inc
cltd
cmp
std
imul
pop
sti
push
dec
xchg
aaa
fs
loope
aad
pop
aad
pusha
xchg
imul
sbb
xor
xor
xor
pop
mov
sahf
sub
dec
push
add
xor
arpl
jg
notl
movsb
dec
fldenv
xchg
mov
fidivrs
outsb
cmp
cmp
adc
std
sbb
and
xchg
je
cmp
test
push
adc
dec
lahf
cld
call
adc
shlb
cmp
cmc
mov
notb
jecxz
jl
cmp
inc
xchg
push
mov
pop
leave
push
ds
dec
sbb
dec
clc
inc
fcmovnu
cmp
and
out
sbb
in
or
mov
fnsave
ss
aam
and
sysret
ja
cmp
test
into
lock
nop
push
sarb
test
sbb
xor
add
sub
xchg
pop
add
sbb
adc
pop
negl
xchg
inc
mov
and
pop
and
and
jp
out
push
jnp
push
pop
test
notb
cltd
adc
dec
push
repnz
jns
sub
aas
rorb
sbb
nop
lds
f2xm1
inc
dec
add
pop
lea
xor
lahf
jle
scas
lods
pop
in
pop
fbld
loopne
iret
mov
pushf
out
loopne
scas
movsl
xchg
mov
xchg
mov
fisubs
lods
xor
or
xadd
addr16
clc
mov
mov
cli
pop
jg
xor
xor
push
insb
xor
arpl
xor
mov
imul
and
cmc
adc
mov
xchg
icebp
pop
jge
push
jge
out
dec
cmc
sub
nop
push
pop
jmp
sub
aas
and
dec
push
movsl
in
or
lds
push
aaa
mov
dec
cmpsb
and
rcrb
stos
add
mov
sub
jge
mov
and
repz
pop
jle
push
bound
and
insl
mov
icebp
sbb
ljmp
scas
jno
and
dec
or
mov
or
aas
pushf
cmpsb
lea
loopne
ds
insb
cmp
lret
sbbb
mov
mov
mov
mov
movsl
sbb
push
jno
das
mov
imul
pop
and
and
push
pop
mov
mov
popa
int
popa
enter
push
adc
fsubs
stos
into
sbb
jmp
outsb
fcom
mov
jge
sarl
adc
jmp
sarb
fwait
adc
mov
dec
in
ja
push
hlt
out
fcompl
popf
sub
xor
sbb
mov
cmp
jle
sbb
les
sbb
xor
xlat
xor
gs
pop
cmpsb
imul
gs
inc
sbb
push
sub
cld
sbb
and
or
jnp
inc
and
sahf
xor
repz
rorb
xchg
add
je
cmc
jmp
cmp
cs
dec
hlt
jo
dec
pop
cs
fwait
mov
cmpsl
cmp
movsb
pop
xor
movsb
push
jb
and
subl
sbb
add
clc
mov
out
iret
mov
in
cmpsb
movb
mov
andb
mov
sub
sub
pushf
cli
mov
arpl
mov
enter
arpl
mov
insl
or
jle
jae
out
fstpl
fisttpl
xchg
pushf
mov
insb
int
mov
inc
gs
cmc
and
xor
cmp
das
cld
jp
loop
test
cld
or
mov
test
sbb
cmpsb
inc
add
loopne
xchg
xchg
cmpsl
sarl
xchg
cmpb
mov
sbb
sahf
loopne,pt
jb
enter
shll
adc
push
int3
xor
cmc
jne
pushf
out
sbb
mov
add
mov
stc
dec
pop
popf
std
xlat
mov
mov
xchg
pusha
inc
jl
jg
inc
lret
stc
mov
and
cld
ds
aad
adc
push
lret
push
or
ja
cmpsl
fisubrs
ficompl
outsb
mov
fwait
dec
and
sahf
sti
pop
dec
pop
sbb
mov
mov
ds
add
sbb
pop
out
pop
pop
addr16
push
ret
push
jns
rcr
cmp
sahf
in
inc
xor
in
ret
xchg
cmc
in
mov
jnp,pt
into
cmpsl
movswl
loope
sbb
inc
dec
mov
fwait
push
add
mov
shrb
andb
or
jb
sbb
nop
adc
inc
clc
ret
in
rolb
movsl
mov
adc
pop
pop
xor
mov
adc
mov
push
xor
pop
jp
outsb
mov
lea
rclb
mov
add
sbb
into
push
cmp
mov
fsub
out
jnp
xlat
nop
sbbb
xor
push
data16
lds
fdivrs
push
out
jbe
mov
adc
add
add
mov
clc
push
jae
flds
add
mov
arpl
inc
and
cmpsb
iret
jno
inc
data16
inc
mov
inc
sbb
jl
xchg
pop
ja
rclb
gs
sub
or
out
in
mov
fs
lock
out
in
pop
dec
into
movsb
lcall
movsb
xorl
push
rorb
dec
cld
jmp
mov
jo
sar
loopne
das
rol
int
stos
xlat
xchg
data16
adcl
lea
or
outsl
jle
mov
sub
dec
std
mov
shll
rcll
hlt
sbb
inc
ret
lahf
push
jmp
lret
inc
neg
iret
cmp
lahf
fstl
ds
sarl
adc
mov
inc
stos
sub
imul
pop
adc
jo
ljmp
sbb
inc
mov
xchg
jnp
popa
inc
repz
jnp
jg
pop
test
push
test
sbbl
pop
push
push
mov
sub
aaa
popa
std
xchg
lahf
pop
and
sbb
xchg
into
push
je
jg
sub
stos
xchg
punpckldq
cmp
imul
jne
popl
push
sbb
insb
pusha
fildl
mov
jae
sti
lock
test
pusha
addr16
jae
stc
jecxz
push
cmp
and
cmp
jbe
mov
not
push
dec
jae
sub
shll
outsl
dec
in
mov
cmp
into
xlat
cmp
lock
pop
lahf
mov
mov
sbb
add
xchg
sbb
loopne
cmp
outsb
inc
cs
add
mov
dec
aas
pop
daa
into
lahf
popa
mov
mov
pop
movl
jae
push
push
push
xlat
jnp
xor
pop
inc
inc
or
ret
ret
enter
hlt
mov
dec
sbb
mov
int3
push
cltd
or
scas
pop
lods
cwtl
pop
sbb
inc
pop
fmul
or
fldl
jecxz
and
stc
repz
push
or
ffree
mov
mov
js
inc
addl
jno
roll
scas
ljmp
adc
mov
bound
mov
stos
mov
sbb
add
xor
in
movb
leave
pop
cltd
iret
stos
aas
pushw
xchg
pusha
filds
add
hlt
push
pop
arpl
pop
and
and
dec
pop
cmp
scas
fcmovu
sub
adc
push
inc
sbb
repnz
scas
jge
and
out
aam
xor
pop
flds
stos
cwtl
xchg
repz
cmp
imul
mov
lret
jge
mov
mov
mull
into
pop
pop
or
pusha
clc
cmpb
pop
loop
sbb
dec
ljmp
mov
sti
jp
jne
xchg
xchg
pop
jecxz
sbb
add
cmp
test
test
jg
movsb
mov
faddl
xor
xchg
lret
dec
movsb
inc
andb
jno
dec
ret
pop
ret
out
cmp
jmp
aad
and
rolb
testb
sub
jl
inc
jae
mov
mov
push
mov
iret
pop
jp
movsb
out
cs
arpl
fldcw
jb
int
pusha
cmp
pop
dec
adc
dec
lods
jle
out
aas
in
push
aaa
sarb
pusha
xor
jmp
in
aad
pop
adc
aam
mov
xchg
sbb
cmp
mov
jg
fwait
inc
roll
mov
mov
imul
insl
shr
repnz
out
push
mov
adc
out
jne
js
mov
into
in
punpckldq
sub
lcall
imul
popf
bound
inc
dec
lds
repz
jle
inc
cltd
movsb
mov
push
imul
das
pop
cmpsl
daa
mov
jbe
stos
jl
stos
enter
mov
ror
daa
pop
pop
push
push
mov
pusha
imul
jbe
push
cltd
sub
sbb
xchg
repnz
xor
pusha
adc
rolb
push
jno
aam
inc
inc
add
push
dec
scas
dec
xchg
mov
sub
mov
adc
jne
iret
pop
fnstenv
mov
scas
jmp
pop
je
rol
test
sub
mov
add
cmp
sub
int
xor
dec
jb
fxch
xor
shrb
pop
pop
xchg
icebp
cwtl
stos
pop
pop
fistps
adc
fs
mov
fdivrl
sti
pop
mov
xchg
add
pop
xchg
mov
lret
pandn
adc
cltd
jecxz
outsl
pop
xchg
jbe
mov
fwait
js
inc
mov
fldl
das
cmp
loope
sar
sbb
xorl
movsb
and
ljmp
dec
out
pop
sub
sbb
mov
fwait
mov
sbbl
or
adc
outsb
out
mov
pop
ljmp
lds
pop
insl
shr
loope
add
lods
frstor
push
std
or
jno
push
cli
sbb
pusha
adc
sbb
lea
mov
or
push
or
mov
lcall
in
jne
stos
jge
adcl
ja
lea
ret
sub
pop
je
sbb
jns,pn
inc
cli
movb
pop
xchg
push
test
xchg
das
adc
ljmp
test
push
test
test
sub
push
shl
aaa
mov
or
mov
xchg
call
fdivrs
cltd
jno
sbb
xchg
test
jne
mov
jl
ret
mov
loope
jae
jp
fldenv
jae
sub
sbb
xor
std
movsb
cmc
cmp
and
fs
lods
repz
xchg
subl
and
mov
inc
lret
scas
xchg
lahf
cmp
lds
and
push
cmp
and
lods
fildll
pop
and
shll
pop
sbb
adc
sub
int
and
minps
and
and
inc
ss
test
xor
mov
xor
lcall
mov
cmc
cmp
adc
fisttpll
lds
adc
cmp
mov
nop
shll
lahf
out
mov
fstpt
dec
cli
or
rcr
je
mov
cmp
push
jb
ret
int3
push
loope
cs
std
cmp
sub
cmp
clc
xor
lret
adcb
inc
mov
fwait
mov
es
xorb
outsl
out
stos
test
push
imul
jp
imul
xor
pop
push
insb
popf
cwtl
jno
push
lea
in
aad
dec
push
ljmp
push
test
push
sbb
cltd
xor
xchg
enter
mov
faddp
pop
and
mov
jae
mov
xor
fildll
lods
jp
jne
int
cmpl
mov
sub
jno
lods
push
leave
push
sub
jl
xor
je
testl
std
and
mov
iret
adc
pop
mov
jp
pop
add
xchg
dec
stos
cltd
xchg
out
test
pop
and
hlt
daa
mov
outsl
or
xorb
mov
aas
jl
cmpsl
cli
mov
repnz
pop
xchg
popf
in
es
xchg
fldt
lds
nop
add
mov
int3
hlt
inc
mov
add
xchg
mov
pop
mov
jns
pop
cmp
jae
lret
fisubl
sbb
jae
int
add
cmp
jle
adc
fcoms
imul
repz
adc
rorl
xchg
int3
mov
cmpsl
outsl
adc
lahf
mov
bound
push
scas
shr
out
stos
adcl
mov
cmp
lahf
xlat
fisttps
sbb
test
sbb
dec
or
in
xchg
fs
fldt
pop
jl
inc
xor
jp
in
pop
add
add
jecxz
and
adc
lock
or
mulb
sar
insl
sbb
push
jno
aaa
stos
inc
dec
xchg
and
adc
daa
pop
flds
adc
sbb
ret
lods
mov
mov
mov
loop
sbb
fistl
lcall
test
xor
fldenv
into
stos
sub
add
pop
bound
rolb
inc
mov
mov
dec
inc
sub
pop
ret
adc
pop
ss
ja
mov
jecxz
cmp
xchg
jmp
sub
pop
and
ljmp
cmp
fisttpll
cld
test
je
mov
and
inc
out
add
fstpt
iret
lcall
dec
das
add
cmp
jns
push
and
inc
sub
mov
mov
fistpl
pop
lock
sbb
xchg
outsb
mov
in
mov
mov
inc
pop
or
cmp
mov
mov
sbbb
and
fld
leave
mov
cmp
rclb
rcll
push
lods
sahf
jnp
sub
or
push
sbb
iret
data16
mov
dec
addl
pushf
adc
ss
loop
mov
in
insb
add
ds
inc
dec
dec
scas
aad
sbb
inc
add
mov
pop
iret
into
cmp
pop
sbb
lods
mov
imul
into
daa
outsb
imul
lret
popf
aaa
pop
push
push
lods
adc
lcall
mov
ret
cmp
dec
sti
outsl
jae
cmpsb
dec
fadd
mov
jp
out
and
xchg
andl
mov
dec
pop
stc
dec
in
inc
push
sub
jbe
andb
addl
stc
clc
bound
xchg
cli
pop
add
push
ljmp
or
mov
jecxz
push
mov
lods
out
inc
xchg
mov
test
cmp
inc
orl
cltd
pop
stos
xchg
mov
xchg
icebp
adc
repnz
cmpsl
andl
int3
mov
cmp
mov
adc
sbb
dec
xchg
bound
into
cmp
mov
xchg
loop
stos
pushf
out
and
aam
lret
mov
aas
test
sbb
lret
inc
and
jl
cmp
cmp
mov
outsl
leave
sbb
dec
imul
push
and
xchg
bound
rorl
lods
lods
jb
lahf
mov
xchg
jg
xor
divl
loopne
daa
sbb
jno
adc
repnz
cmp
test
add
adc
call
xchg
inc
mov
je
cmp
push
cmp
xor
repz
stos
jne
movsb
pop
std
in
lret
fwait
shll
gs
fildll
fmull
insb
add
ret
pop
pop
rclb
inc
mov
inc
aaa
and
test
call
jmp
outsb
leave
add
mov
imul
scas
rorb
rorl
push
ljmp
xor
mov
push
cmp
aam
jo
sbb
jecxz
into
std
xor
jbe
in
sub
outsb
hlt
aad
stc
adc
fnstcw
dec
lret
jne
or
mov
mov
push
xor
sti
mov
mov
gs
ljmp
out
mov
icebp
xlat
lea
dec
dec
jnp
push
jmp
in
cs
xor
mov
icebp
xor
fnstsw
das
imul
jbe
sub
mov
mov
dec
in
test
into
js
adc
jmp
leave
outsl
and
adc
xchg
adcl
or
pop
pop
cs
sub
sbb
jnp
lods
dec
lahf
in
pop
dec
popf
push
pop
out
js
adc
leave
pop
add
dec
imul
leave
cs
pop
xchg
cmpsb
pusha
scas
mov
loopne
pop
mov
int3
and
lods
rorb
sbb
scas
aad
xchg
cmp
jmp
lds
xchg
frstor
xchg
clc
mov
inc
mov
jnp
pop
mov
lahf
xchg
cmp
out
lods
lea
push
add
push
and
dec
sub
lods
into
mov
ds
pop
mov
mov
mov
mov
lret
or
outsl
pop
sbb
adc
popf
fistl
and
xor
dec
popa
dec
xchg
sbb
mov
push
push
and
and
adc
mov
cmp
ljmp
in
inc
faddl
test
xchg
jecxz
xorl
subl
xor
pusha
aam
xchg
inc
cmpsb
mov
lea
push
fld
push
sbb
ret
sub
test
dec
cmp
mov
leave
inc
ja
stos
mov
pop
jnp
pop
pop
and
mov
repnz
push
push
sub
xor
mov
or
xchg
or
orb
or
mov
int
int3
test
sbb
lods
cmp
xchg
cmc
int3
les
mov
scas
add
lret
jae
mov
mov
dec
sbb
push
jg
outsl
iret
mov
jne
add
push
sbb
adc
pop
test
sbb
dec
add
rolb
xor
inc
lahf
sub
dec
jge
inc
out
pop
arpl
or
and
das
inc
enter
rcrb
test
mov
mov
and
leave
ret
jbe
outsl
imul
jge
push
ljmp
dec
std
mov
sarb
or
test
pop
mov
or
cli
or
lea
out
hlt
sbb
dec
js
cmp
insl
jg
mov
push
ror
jnp
pop
cli
add
mov
mov
test
and
js
les
jp
arpl
push
mov
popa
je
shll
mov
lcall
mov
cld
inc
pop
mov
cmp
out
adc
stos
jmp
adc
aad
cmpsl
cmp
out
mov
insb
mov
push
mov
adc
jmp
call
popf
aaa
test
pop
shlb
or
mov
lret
pop
add
sbb
sbb
cwtl
mov
adc
shl
cmc
outsb
or
and
loopne
dec
xchg
adc
lods
or
push
lcall
icebp
sbb
movsl
cmp
mov
or
pop
sub
into
sarb
std
adcb
sub
push
adc
or
mov
insb
addb
cltd
jge
inc
int3
iret
shrl
adc
mov
rep
in
add
xor
mov
repnz
lret
mov
dec
xchg
inc
and
mov
adc
test
out
xor
mov
das
add
mov
ror
nop
lcall
dec
pop
dec
es
bound
mov
inc
adc
mov
xchg
test
stc
push
es
popa
shl
jg
xor
and
xchg
sbb
jge
stc
mov
hlt
aad
sub
neg
push
mov
inc
or
out
push
int3
push
mov
mov
lock
mov
shlb
ss
aad
ja
add
dec
cmpb
push
mov
lahf
loopne
mov
aam
add
or
cmp
sub
push
sbb
fidivrl
xor
repnz
push
push
dec
xor
xor
sbb
or
fidivs
fdivrl
dec
ror
push
test
jmp
cld
pop
outsb
loope
mov
pop
jle
int3
repz
imul
js
dec
movswl
xchg
mov
in
pop
mov
xchg
std
movsl
rcr
sub
in
push
cltd
aad
mov
push
stos
int
int
inc
stc
mov
leave
int3
call
popl
cld
sub
inc
pusha
fisttps
mov
and
les
add
adc
mulb
lcall
xchg
cmc
or
and
xchg
inc
mov
jnp
pop
push
stc
mov
or
cld
repnz
rolb
rorl
cmc
lret
shl
ret
mov
inc
fistps
adc
jnp
mov
js
das
sub
enter
adc
rclb
or
insl
fdivrs
mov
popa
jp
push
fstpl
pop
aaa
xor
outsb
mov
icebp
mov
dec
ljmp
repz
dec
ja
test
jno
insb
loopne
nop
sbb
push
in
mov
mov
sbb
fwait
ret
cwtl
jg
sbb
mov
inc
lea
inc
push
pop
repnz
push
mov
jmp
jg
jnp
or
sub
xchg
pop
adc
mov
cmp
mov
lret
cmp
pop
fiaddl
out
adc
test
pop
rcrl
mov
mov
push
cmp
mov
test
mov
sbbl
or
add
jno
fwait
mov
mov
xlat
icebp
or
push
jb
xor
out
mov
jg
xchg
push
icebp
in
jo
shll
pop
sub
xor
jae
test
xchg
les
add
in
sub
jle
lahf
pop
cltd
adc
in
xor
testl
jne
div
sbb
movsl
sar
cli
movsl
negl
cmpsb
jg
inc
push
pop
jae
testl
xchg
roll
in
inc
xor
jle
rorb
pop
and
stos
jns
adc
add
or
call
inc
xor
pop
lret
sahf
test
scas
mov
sbb
jecxz
jp
mov
sbb
arpl
or
sbb
pop
xchg
sub
push
dec
repz
cmpsb
pushf
xor
call
pop
mov
or
lahf
je
xlat
mov
sub
mov
lock
sub
paddw
jle
sbb
mov
pusha
outsl
sub
push
and
imulb
cwtl
lcall
mull
lods
aad
push
lret
mov
or
fwait
add
jnp
loop
test
fdivrl
cmp
stc
orb
cmp
sti
fs
sub
call
pop
mov
pop
ljmp
and
pop
jns
sbb
movsl
shrl
test
push
mov
aad
lds
clc
push
and
and
pop
push
mov
jae
lea
xlat
push
test
xchg
push
dec
mov
jl
pop
add
cltd
pop
inc
popa
push
hlt
mov
mov
push
insl
fcomi
test
xor
outsb
addl
mov
jae
cmp
inc
dec
cmpl
into
push
or
addr16
cli
xor
dec
icebp
sahf
lcall
push
jg
fwait
or
push
or
mov
movsb
cwtl
inc
jno
sbb
mov
test
sub
pop
and
rolb
pop
fs
addr16
push
push
mov
insl
iret
push
and
outsb
rolb
in
mov
inc
dec
mov
clc
stc
pop
adc
jg
shr
fwait
sub
xchg
sbb
rclb
lret
sbbb
into
fadd
adc
xchg
or
scas
sub
fidivl
cmp
rorb
lret
xor
es
mov
cmpsl
notl
dec
dec
inc
inc
pusha
ret
mov
aaa
out
stc
sti
cmp
or
mov
daa
xorb
push
idivl
pop
repnz
dec
nop
ljmp
fbld
and
pop
xchg
mov
adc
dec
mov
lods
cmp
idivl
mov
aas
xchg
bound
or
sub
rorb
test
and
outsb
icebp
inc
and
shlb
mov
dec
aam
pusha
pushf
cmpsb
sub
icebp
xor
enter
sub
insb
inc
push
jecxz
cmp
adc
and
jge
fwait
or
lock
mov
sub
ds
sahf
inc
add
call
dec
and
cs
das
loope
or
sbb
in
and
iret
roll
aaa
mov
push
push
jp
nop
dec
arpl
test
sbb
mov
adc
mov
mov
mov
icebp
adc
jae
mov
fwait
cmpsl
xlat
shr
and
test
fisttpll
movsb
bound
mov
jecxz
ja
imulb
dec
and
sub
cmpsl
cwtl
bound
scas
rcrl
das
in
cmp
xchg
jp
xchg
cwtl
sarl
pop
mov
or
xor
lea
ret
mov
and
gs
sbb
std
data16
xchg
push
in
scas
push
mov
test
push
dec
rol
sbb
cmp
scas
mov
addr16
scas
inc
mov
mov
out
fidivrl
call
mov
mov
icebp
adc
fs
dec
push
out
mov
mov
mov
mov
push
sbb
adc
je
lret
jl
lcall
xchg
mov
jnp
insl
mov
inc
imul
pop
sbb
jl
dec
cmp
loopnew
imul
adc
std
sbb
xchg
fstps
dec
cwtl
dec
lock
and
out
sti
stos
mov
mov
jns
jmp
mov
lret
pop
mov
push
mov
hlt
sub
je
or
iret
lods
std
dec
aaa
mov
ja
pushf
iret
adc
mov
mov
icebp
call
mov
jmp
push
mov
xchg
stos
sbb
out
push
mov
jns
inc
and
jae
mov
gs
dec
xchg
push
aad
sbb
xchg
xor
jns
jle
scas
pop
fsubrs
rcll
or
pusha
dec
dec
mov
push
imul
out
out
xor
jae
pop
and
sbb
sbb
test
test
les
pop
addl
popa
testb
outsl
sbb
mov
mov
add
aam
jae
jmp
jb
or
hlt
popa
mov
clc
mov
pop
or
xchg
and
mov
shrb
ljmp
lods
and
gs
mov
repnz
sbb
fdivr
inc
adc
sbb
sub
les
mov
adc
repnz
repz
jecxz
call
fmuls
loopne
call
jle
and
sbb
or
lods
bound
shll
mov
and
inc
push
aad
push
jp
adcb
adc
push
xor
loopne
dec
loop
push
out
inc
xchg
inc
add
xchg
pusha
adc
pop
mov
mov
scas
imul
ja
pop
sbb
lret
enter
pop
idivl
mov
sbb
xor
in
jle
int
pop
das
cld
xor
mov
lahf
sub
out
out
ret
jae
pop
adc
iret
popf
adc
or
cmp
jle
push
stos
pop
mov
std
cmc
aas
cmpsb
outsb
add
mov
or
sti
dec
out
xchg
hlt
sbb
xchg
sbb
arpl
push
push
mov
sub
mov
adc
popa
or
lret
add
xor
sti
loop
fsts
outsl
xchg
roll
fdivrs
dec
cli
dec
xchg
push
jecxz
popf
pusha
mov
inc
xor
or
push
xor
lea
dec
xchg
push
or
mov
mov
int3
stos
insl
test
xchg
stc
xchg
les
dec
stos
popf
test
jmp
andb
or
fwait
and
mul
push
out
adc
cmpsb
aad
push
adcl
ret
sub
or
push
sub
add
lock
mov
cmp
rcrb
jecxz
aam
mov
inc
pop
push
mov
es
and
mov
or
adc
mov
pop
sub
push
mov
sub
dec
data16
pop
mov
inc
nop
ljmp
adc
std
flds
andl
inc
flds
movsb
out
das
cld
lods
dec
xchg
sub
mov
scas
shlb
push
sub
sub
scas
cltd
out
sub
mov
push
add
test
popf
cmp
data16
lds
mov
xor
aam
pop
scas
push
mov
and
cmc
jle
fsubrs
lods
dec
ss
fcmovnu
mov
out
ss
push
fisubs
cmpsb
xchg
popf
adc
jmp
stos
sbb
jae
out
jbe
add
mov
inc
out
fisttpll
mov
test
pop
add
ss
stos
pusha
mov
lock
fisubrl
cld
push
andl
call
lock
movsl
mov
jmp
fistpll
sbb
fwait
push
dec
jne
pop
ss
push
insb
push
or
push
faddl
insb
test
mov
popa
add
ss
arpl
std
jb
jns
jae
fcmovb
pslld
inc
scas
mov
mov
in
decl
xchg
sarl
push
fidivs
lahf
test
or
test
xchg
stos
sbb
daa
in
dec
and
push
loopne
lret
sbb
ror
popa
dec
emms
gs
mov
mov
push
jmp
and
sti
or
aas
stos
or
dec
leave
fisubrl
push
lcall
adc
or
fwait
ret
stos
cld
push
movq
in
cmp
and
lcall
xor
pop
sub
popa
lods
fisubrs
daa
jo
cli
and
ja
xorb
sub
push
jge
cwtl
in
mov
mov
push
lret
and
sbb
mov
push
es
inc
out
loop
ret
mov
mov
add
push
push
inc
pop
js
cmp
in
les
fdivs
add
shrb
out
mov
jb
cs
test
pushf
cltd
lret
pusha
dec
xchg
leave
add
inc
dec
and
adc
dec
xchg
inc
push
push
jb
add
mov
test
fimull
pusha
stos
or
orb
js
push
jnp
dec
daa
jle
push
js
out
loope
arpl
subl
pop
fldz
rcll
shlb
adc
mov
lret
stc
or
fsubl
out
sbb
fsubrl
pusha
ss
jl
inc
xor
add
popa
pop
or
dec
jecxz
pop
lock
add
mov
lock
js
lods
xchg
mov
daa
decb
sub
add
cmc
cmp
aad
sub
push
lds
iret
mov
mov
roll
test
jecxz
inc
mov
aas
ds
push
testb
ds
push
sbb
icebp
pop
mov
lea
pop
sub
cli
push
mov
daa
leave
fldt
ds
fcmovbe
mov
inc
adc
loop
in
imul
shrl
cwtl
fwait
add
xchg
push
mov
and
in
pop
xchg
fsubrl
mov
sbb
dec
cltd
and
push
mov
jmp
xchg
movsb
imul
test
and
mov
jl
es
fisubl
sbb
repz
jg
jle
repnz
pop
dec
inc
scas
shll
xchg
add
sub
pop
push
les
loopne
pop
bound
test
imul
stos
shrb
into
xorl
lock
sti
test
sub
in
or
jl
sub
in
mov
xor
and
shlb
jecxz
insb
or
outsl
xchg
movsb
ja
or
push
fnstenv
add
mov
and
dec
outsb
lods
cmp
out
jge
arpl
xor
testb
nop
daa
push
cmpsl
jl
dec
push
divb
cmc
mov
mov
inc
imul
sarb
xorb
inc
cmp
jb
jl
fisubl
jne
dec
imul
andb
int
lock
scas
subb
adc
mov
cmp
push
pop
mov
and
dec
pop
mov
mov
lea
xchg
sbb
push
ret
jnp
sbb
jp
mov
mov
mov
pop
jns
or
sub
insb
xchg
xchg
pop
cli
mov
xor
enter
dec
cmpsl
mov
or
inc
int3
sbb
popa
lahf
push
lcall
inc
ret
adc
push
push
push
fsubr
jno
and
es
mov
cmp
ss
and
loopne
pop
lahf
fprem
clc
inc
stc
inc
inc
jo
jo
xlat
pop
popa
daa
lock
jl
dec
mov
movsl
or
xchg
sti
mov
ror
and
call
stos
je
cwtl
pop
xor
sti
fsubrl
xchg
xchg
xor
aas
xchg
push
pushw
push
dec
inc
scas
mov
in
pop
cmp
lods
insl
jmp
xchg
insl
and
scas
push
mov
and
lds
push
int
jle
xchg
iret
fucomip
fsubrl
repz
cmp
andl
pop
out
dec
dec
aas
out
add
jle
sub
into
add
lea
aad
lock
adc
dec
push
xor
mov
jne
mov
loope
loop
in
frstor
int3
pop
fs
icebp
xchg
call
push
xchg
cmpsb
pop
test
imul
inc
jo
jle
in
aad
mov
cmc
into
in
idiv
mov
cltd
aas
adc
ficomps
pop
stc
cmpsb
rorl
in
cs
fwait
iret
jmp
aas
lcall
pop
sub
mov
xor
sbb
push
mov
call
mov
adc
mov
sub
enter
aam
mov
fdivr
jg
mov
das
inc
mull
scas
xchg
cltd
push
out
lds
push
fidivrl
adc
ja
pop
and
aas
pop
cltd
je
nop
outsb
dec
xor
das
jb
xchg
inc
loope
jbe
lea
xchg
jge
xor
pop
mov
pop
in
aam
cmpsb
fstl
inc
repnz
adc
pop
pop
stos
mov
mov
xchg
in
inc
push
pop
add
mov
pop
cmp
popf
nop
mov
hlt
cmp
arpl
sub
inc
adc
cmp
dec
inc
push
push
in
cli
hlt
adc
pop
adc
dec
in
mov
sbb
xchg
lret
aad
push
in
and
dec
sbb
jae
iret
mov
cmp
cltd
jns
pop
jmp
bound
out
mov
jb
or
jmp
mov
mov
adcb
push
adc
iret
mov
leave
test
push
lahf
cli
aaa
sbb
movsb
mov
sti
aaa
push
enter
out
jbe
jo
and
insl
mov
push
lret
cmp
icebp
cmp
in
sub
jnp
xchg
mov
call
aad
aad
jmp
in
pop
sub
jnp
iret
dec
dec
jge
dec
push
cmp
or
cltd
stc
ret
cmp
sbbb
stc
xor
in
push
leave
ja
cmpsl
std
inc
sbb
stc
xor
scas
inc
out
fdivs
pushf
mov
mov
repnz
imul
outsb
mov
call
mov
fstpl
inc
lcall
fwait
mov
dec
outsb
aam
addl
and
jno
lods
push
push
mov
lret
xchg
push
ds
inc
ljmp
loopne
sub
xchg
cmpsb
sbb
xor
push
rolb
iret
xchg
movsb
inc
iret
fildll
das
add
mov
clc
mov
cmpsl
cmc
clc
lea
jne
mov
in
dec
cmp
push
mov
je
and
sub
dec
add
aas
jbe
mov
fisttpl
shrb
xor
mov
cmp
in
cmp
mov
ret
jge
lcall
inc
movsb
xchg
pusha
jp
scas
cltd
adc
adc
in
lods
flds
sbb
ror
inc
nop
mov
mulb
push
dec
ljmp
mov
jne
dec
fildl
xchg
pop
pop
repnz
xor
rcll
or
push
cmp
clc
mov
adcl
inc
outsl
push
mov
add
pop
mov
stc
popa
stc
mov
aam
push
and
movsl
lahf
inc
aas
mov
imul
ret
pop
sbb
mull
mov
into
add
fs
or
xchg
mov
pop
and
sbb
push
xor
mov
pop
mull
in
pop
outsb
test
jo
cmp
add
shrl
icebp
mov
movsb
cmp
lds
and
in
push
or
stc
adc
add
inc
stos
adc
add
dec
movsb
or
sub
sub
addb
push
inc
test
bnd
cli
loopne
or
mov
and
lea
repnz
rorl
pop
jb
andb
test
andl
push
or
sub
cltd
cltd
loope
les
jb
iret
cmpb
jnp
addl
in
and
out
nop
insb
adc
fs
sar
sbbb
add
or
adc
test
sarl
push
imul
push
adc
loopne
mov
cld
cmc
jmp
mov
lret
add
jno
jmp
cmp
into
andb
insl
dec
arpl
popf
aas
popa
and
int3
adc
scas
sbb
sub
mov
push
es
or
mov
sbb
mov
in
into
lret
adc
pop
mov
test
mov
jg
imul
mov
push
iret
push
addl
add
jg
mov
loopw
cld
jp
divl
inc
mov
jmp
dec
inc
jne
hlt
dec
test
mov
mov
cwtl
xchg
mov
dec
jne
pop
mov
sub
repz
lret
popa
outsb
fs
sub
jp
mov
inc
pop
inc
jmp
inc
clc
jns
iret
pusha
inc
pushf
adc
mov
cmp
mov
inc
and
jl
push
cmp
adc
adc
adc
pop
dec
mov
add
mov
xchg
std
aaa
dec
lock
fiaddl
mov
sub
mov
push
mov
pop
mov
mov
mov
es
push
std
psubd
into
xchg
int3
in
mov
and
mov
jmp
cmp
jo
pop
inc
mov
xor
pop
jne
push
push
add
movsb
aam
cmp
ret
mov
call
and
sub
cs
pop
pop
mov
aaa
rcrl
add
mov
xchg
and
mov
shll
sub
sbb
int
js
mov
mov
lock
adc
sahf
xchg
lock
popf
leave
scas
int
mov
cmp
aas
es
test
push
cmc
fsubl
sbb
outsb
mov
into
mov
out
add
sub
loop
mov
or
inc
inc
loopne
sub
sub
mov
mov
inc
mov
sbb
add
imul
inc
incl
push
popf
pop
dec
push
fwait
and
mov
jnp
jg
stos
roll
sti
fistl
call
xchg
clc
call
cmpsb
dec
test
lret
add
xchg
mov
mov
xor
add
and
in
jmp
mov
leave
cmp
js
cmp
js,pn
lret
call
jecxz
and
shlb
leave
out
shlb
pop
pop
xchg
add
pop
call
sbb
cmpsl
out
cmp
testl
fildll
pop
add
fimull
popf
das
pop
mov
insb
xchg
popa
adc
negl
out
dec
mov
or
pop
out
addl
es
sbb
xlat
fldcw
cmp
je
pop
lock
fldenv
sub
sub
clc
stos
aas
std
inc
xor
push
pop
add
ljmp
mov
clc
je
fnstsw
mov
test
packuswb
es
adc
mov
call
mov
sbb
push
jo
bound
xor
ucomiss
mov
ss
add
adc
and
stos
and
lret
inc
adc
mov
cmp
xor
inc
adc
push
mov
mov
loop
ljmp
xor
shr
scas
out
or
cmp
sbb
or
xor
push
xor
hlt
stos
sub
jecxz
inc
cmp
xchg
and
sbb
or
das
repz
mov
inc
call
mov
sti
addb
icebp
loope
xchg
dec
icebp
dec
sti
test
orb
repnz
push
mov
ja
fstpl
test
aad
cmpsl
out
mov
add
test
addr16
xchg
pop
jge
jle
or
cmp
mov
cmp
cmpsb
mov
pop
add
xchg
jb
pop
popl
fsubl
stos
cmpsb
idiv
mov
in
data16
test
cmpsb
jle
add
jge
test
loopne
call
jno
icebp
or
lock
insl
and
adc
sub
clc
cmpsb
sti
out
mov
scas
pop
rcpps
adc
cmp
pop
cli
fcomp
pop
testl
cmp
mov
cld
jp
sub
cmp
jne
jge
inc
out
bts
cmpsl
jne
imul
xor
mov
shl
ror
movsb
lret
fisubrl
lock
sbb
loopne
jmp
xor
das
insb
arpl
fstpt
stos
arpl
into
cmpsb
inc
or
push
mov
test
popa
loopne
mov
xchg
cld
sarl
aam
les
scas
out
xor
mov
js
lds
inc
aas
mov
test
stc
je
mov
fwait
xor
adc
xchg
lret
mov
mov
mov
stos
gs
sarb
push
lods
mov
flds
jnp
add
and
pop
aaa
jb
jp
cmp
sbb
mov
arpl
test
inc
dec
jge
xchg
sbb
call
repnz
mov
jge
rcll
pop
jp
lock
adc
leave
aas
pushf
movsl
push
xor
and
dec
loopne
mov
or
sahf
dec
add
stc
sub
mov
inc
imul
stc
sahf
jns
mov
adc
jecxz
mov
and
inc
sar
cld
or
push
stc
loop
jne
xchg
std
sbb
adcl
push
pop
add
push
cmp
xchg
imul
test
popl
mov
iret
xchg
outsb
pushw
fbld
inc
lcall
repnz
lock
clc
mov
push
jg
imul
xchg
and
and
mov
sub
fisttpll
add
xor
xor
xchg
ljmp
popf
adcl
mov
cmp
pop
movsl
aam
push
sub
fcom
popa
push
clc
sarl
sahf
js
cwtl
fsubs
dec
lahf
inc
adc
shll
cmp
outsl
xor
lcall
fisubl
mov
nop
mov
sub
mov
out
sub
jae
lock
stos
xchg
xchg
pop
mov
fmul
push
test
hlt
movsb
jmp
sbb
dec
dec
ror
clc
adcb
dec
adc
sbb
jo
fadd
pusha
inc
loop
sbb
jge
loope
xor
pop
jmp
mov
outsl
test
mov
xchg
cwtl
pop
test
dec
rcr
mov
push
xor
push
mov
gs
and
test
push
adc
xor
xor
insb
sbb
data16
pop
cld
shlb
push
push
push
mov
addb
adc
add
inc
inc
sub
jo
push
cmp
dec
lods
or
sub
adc
cmpl
movsl
xor
and
xor
jge
sti
xchg
xchg
or
out
jnp
scas
xor
arpl
mov
mov
push
icebp
inc
mov
das
xorb
sub
jle
sbb
sub
insl
ljmp
int3
mov
jno
mov
nop
js
fwait
jl
lcall
repnz
inc
into
les
inc
shrb
mov
mov
xlat
cmpsl
pop
xchg
xor
lcall
mov
jb
in
fidivs
sbb
movsb
xchg
nop
fldenv
test
cld
loope
jns
hlt
mov
ret
add
push
js
pop
cmp
pop
imul
xor
and
mov
imul
mov
sti
adc
scas
cmp
jne
xlat
or
push
push
xchg
xor
mov
ret
movsl
aad
orb
push
dec
jle,pt
out
lock
push
outsl
adc
addr16
inc
mov
loope
cmp
or
leave
scas
and
and
add
sti
cli
jge
pop
push
rcl
sbb
aaa
cltd
mov
xorb
mov
or
mov
cld
das
or
rol
popf
and
inc
push
arpl
jb
xor
inc
mov
pop
inc
leave
shrl
inc
and
jecxz
testl
aaa
mov
stc
adc
cmpsl
push
adc
adc
andb
and
mov
pop
xor
out
xchg
add
filds
cltd
mov
stc
mov
stos
fld1
movb
and
push
mov
mov
rorb
fs
dec
xchg
jns
enter
hlt
lods
xlat
cmp
add
xchg
jmp
push
outsb
and
roll
scas
test
out
dec
inc
les
sti
jg
push
sbbb
mov
lea
clc
js
popa
push
pop
pop
or
popf
and
mov
jecxz
jle
jbe
div
mov
mov
sub
addl
mov
xchg
lcall
jl
xchg
jmp
mov
mov
mov
fxch
and
test
repz
call
push
inc
daa
sbb
xor
pop
push
and
sub
mov
xchg
inc
pop
cmp
mov
mov
dec
orl
cmp
mov
in
push
shl
adc
ds
imul
arpl
fmulp
mov
js
aaa
push
mov
adcb
inc
lds
xchg
jno
imul
inc
mov
and
mov
inc
mov
js
mov
lods
inc
mov
dec
testb
push
sbb
insl
rorb
fildl
push
inc
test
stos
and
out
pop
sahf
es
into
adc
in
mov
jge
push
in
loop
jmp
lods
dec
stc
ljmp
sbb
or
das
out
push
xchg
sbb
fsubrp
stc
and
jmp
hlt
add
lret
pop
inc
shl
popf
push
fs
lcall
repnz
cmp
fisubs
jp
repnz
xor
lea
mov
jbe
xchg
arpl
cmp
cwtl
es
jp
fildl
mov
js
insb
in
cmp
out
mov
sbbl
xchg
dec
sub
dec
inc
imul
mov
frstor
adc
mov
fucomi
mov
popf
in
push
fstl
test
and
loopne
xchg
push
pop
sub
pop
xchg
xor
cmc
cli
dec
sbb
cmc
xchg
pop
dec
dec
xor
out
flds
jmp
outsl
test
xchg
or
lcall
sbb
pop
sahf
xchg
dec
repz
jno
ljmp
out
les
iret
mov
out
sbb
sbb
adc
imul
mov
divl
test
pop
and
cmp
or
lahf
dec
int3
cmc
mov
cmp
sub
dec
sub
out
fistpl
xor
inc
dec
pop
mov
testl
add
cli
rcll
hlt
jbe
push
insl
xchg
cmp
mov
jnp
mov
mov
pusha
hlt
sahf
imul
lds
mov
cmpsb
mov
movsb
xchg
xor
lods
jno
inc
xor
ret
orl
je,pn
jg
pop
int
js
dec
shll
je
cmc
push
pop
mov
push
inc
sub
sbb
mov
mov
inc
mov
pop
shll
sbb
in
xor
sbb
outsl
into
jge
mov
flds
cmp
aam
adcl
mov
push
outsb
xchg
ret
mov
adc
outsb
ds
xor
mov
mov
push
femms
cld
test
jae
sbb
xor
cwtl
gs
sbb
mov
cld
pop
sub
adc
xchg
ds
adc
mov
scas
ss
pop
lahf
mov
insb
test
lods
ja
lock
in
jnp
cmp
fnsave
adc
add
clc
call
cmc
cld
test
dec
in
inc
fldenv
sub
inc
and
stc
add
inc
add
adc
daa
adc
pop
pop
jl
mov
cld
xor
xor
scas
std
js
cmp
mov
stos
movsb
mov
jnp
inc
sbb
mov
fsubl
orl
das
pop
sub
or
pop
xchg
pop
mov
imulb
push
ss
pusha
iret
fcmove
and
adc
int3
sbb
pusha
mov
dec
xor
pop
hlt
and
or
inc
mov
sub
ljmp
inc
and
push
add
inc
dec
jecxz
xor
int3
fmuls
and
push
mov
inc
out
lret
or
jl
mov
in
imul
jp
mov
arpl
ret
mov
jg
dec
add
je
clc
sar
outsb
sbb
bound
movsl
cld
pop
adc
rclb
mov
stos
mov
faddl
sub
addr16
roll
or
sub
xlat
sbb
jns
cwtl
sub
test
mov
sahf
cmp
negl
sbb
inc
iret
lcall
ret
mov
xchg
shll
pop
dec
jno
orl
jae
imul
jmp
scas
mov
cmp
lds
mov
pop
testb
or
mov
push
aaa
lds
and
stc
push
mov
pop
jbe
xchg
shl
sbb
imul
movsb
xor
and
mov
pop
insb
imul
lcall
movsl
jae
xlat
ss
add
push
sahf
into
cmp
or
fistps
lds
pop
vrcpss
inc
lods
aas
sub
fadd
ljmp
push
or
add
dec
iret
cmp
jne
jo
pop
pusha
les
clc
pop
or
negl
push
aas
push
mov
inc
pop
push
xchg
pop
dec
cmpsb
fwait
or
movsl
rcrb
pusha
shr
jne
popa
jg
and
or
mov
xlat
push
jle
adc
push
shr
inc
jp
outsl
and
sarb
mov
arpl
sar
cmp
push
jge
jbe
lds
inc
lea
into
mov
cmp
lea
xor
std
pop
jno
mov
sub
xchg
sub
push
clc
sbb
mov
cmp
js
push
jno
inc
out
adc
pop
xor
pop
push
mov
mov
pushl
mov
fwait
or
sahf
pop
ss
inc
dec
sbb
fidivl
xlat
clc
lock
jge
jno
mov
cwtl
add
fldt
sub
test
jbe
into
mov
jle
jno
test
and
dec
inc
sbb
scas
das
sub
sub
les
xchg
in
mulb
jmp
je
nop
in
mov
xor
jno
scas
movb
jp
sbb
test
pop
fildll
adc
mov
cmp
mov
xor
movsl
test
jne
flds
mov
add
test
mov
ret
pop
push
insl
push
fnsave
into
inc
jnp
popa
movsl
movhps
add
ds
adc
dec
xor
fdivs
adc
xor
sub
sbb
xchg
cmpsl
xchg
test
enter
xchg
pushf
push
pop
or
mov
jo
popa
mov
js
icebp
add
cmpsl
mov
jecxz
pop
inc
push
and
scas
add
icebp
inc
mov
frstor
fistpl
mull
cmp
cmp
orl
push
lods
insl
icebp
sub
add
push
mov
lahf
or
cmp
mov
addr16
shll
test
push
or
or
test
scas
mov
xchg
or
outsl
js
fsubrl
xor
adc
cmp
idivb
mov
or
push
mov
xchg
popa
bnd
jg
mov
pushf
addr16
lods
sbb
js
lods
and
lcall
popa
outsl
inc
subb
ret
or
jp
push
pop
mov
sub
out
jbe
ret
cmpb
or
push
orl
stos
fidivrs
retw
test
popa
xchg
pop
push
adc
jmp
sbb
popa
into
jb
lods
mov
rcrl
push
jae
sub
sub
movsl
xor
fwait
ja
add
loop
push
gs
movsb
out
inc
inc
xchg
into
xchg
mov
int3
push
cli
ja
in
push
pushf
sub
fadd
xor
cmp
and
inc
cmp
mov
pusha
mov
xchg
sahf
mov
movsl
lock
insb
iret
sbb
popf
imul
push
sahf
adc
aaa
jae
dec
stos
ljmp
mov
mov
cwtl
mov
fildl
ficompl
lds
sbbb
or
mov
xchg
mov
sbb
fwait
inc
js
iret
push
push
cltd
ss
or
fs
mov
ss
cmpsb
lods
xchg
dec
pop
cmp
in
lahf
fdivrl
loop
cmp
push
out
inc
push
in
ss
or
outsb
push
lcall
outsb
pop
adc
push
into
es
inc
loop
mov
push
adc
sub
xor
scas
test
xor
stos
addb
nop
mov
lods
aas
loop
sar
pop
sbb
inc
xchg
push
adc
ja
scas
imul
aam
ret
mov
clc
daa
aaa
ljmp
call
repz
mov
sub
sbb
jno
adc
mov
stos
roll
push
lea
inc
pop
icebp
int3
cmpsb
pop
xchg
jmp
inc
xlat
lea
ss
xchg
sbb
push
stos
sbb
and
cmpsl
push
ja
inc
sahf
mov
push
imul
mov
rolb
sbb
fnstcw
dec
and
xchg
inc
push
lret
xchg
por
pushf
cli
sarl
push
gs
in
push
push
subl
xchg
mov
jecxz
ret
call
stc
jmp
dec
in
push
mov
fwait
push
cs
movb
ljmp
xchg
adc
arpl
fcoms
notl
adc
add
lahf
push
sub
cmpl
mov
shll
bound
inc
pop
dec
iret
and
repz
add
fbld
stos
pusha
pop
mov
sub
movsb
sub
mov
and
push
add
mov
mov
mov
test
rcll
notb
rcl
sub
sub
and
movsb
mov
test
xor
cmp
shl
fwait
sub
mov
jmp
jmp
sub
add
aas
jmp
jb
xchg
xchg
stc
xchg
xchg
sbb
shl
stc
lds
mov
push
or
jnp
or
mov
xor
pop
push
push
outsb
dec
inc
jbe
test
sbb
push
daa
xchg
inc
lds
mov
jbe
jno
add
jne
pusha
cmpb
in
stc
lret
ljmp
jle
negl
cmp
mov
cmpsb
cli
mov
into
scas
loope
popa
xchg
dec
adcl
pop
dec
add
das
out
cmc
or
add
lahf
jo
cmp
sub
sub
mov
mov
mov
or
mov
adc
in
popf
pop
jle
sub
mov
sbb
lret
mov
cs
repz
sbb
mov
lds
insl
fisubrs
aas
mov
dec
mov
mov
cmc
enter
and
xchg
stos
mov
insl
lods
pop
ljmp
mov
icebp
cld
dec
jns
pop
fbld
iret
shrl
sbb
pusha
movsb
icebp
mov
andl
sbb
or
pop
popa
adc
cmp
or
std
testb
sub
mov
mov
xchg
aas
xchg
mov
pop
push
imul
sarb
call
addr16
fldt
inc
and
mov
popf
push
xchg
xchg
lds
mov
fbld
cwtl
jbe
mov
arpl
xchg
jl
rcrb
insb
pop
inc
jbe
ss
addl
cmp
fucomi
js
idivb
jae
icebp
inc
xchg
mov
sbb
mov
add
outsl
cmp
js
or
mov
fsubrs
enter
or
mov
js
sub
out
push
ret
sahf
ja
push
ja
ljmp
inc
or
clc
dec
bound
cmpsb
mov
rcr
popf
xchg
xor
icebp
push
jb
popa
nop
sub
dec
mov
hlt
ret
or
shlb
xchg
or
or
sbb
mov
movsb
sub
loop
repnz
in
adc
imul
jo
or
pop
fstl
fcoms
dec
cs
dec
dec
aam
int3
mov
inc
and
in
sub
leave
xchg
mov
xor
mov
cmp
in
jecxz
push
jge
add
cmp
jg
jae
sbb
mov
push
sbb
add
icebp
push
xor
dec
jge
mov
test
xchg
add
cmpsl
shll
jbe
jbe
inc
mov
xchg
dec
mov
push
mov
enter
xchg
push
test
adc
mov
loopne
jg
cld
sbb
cld
xchg
xor
jmp
addl
xchg
jae
sub
dec
es
lahf
and
pop
xchg
jg
inc
mov
xchg
mov
lcall
pusha
push
mov
loopne
and
lods
in
jno
xchg
jg
push
push
push
xor
jnp
fs
mov
andb
ret
mov
sbb
stc
imul
dec
inc
nop
dec
cmp
and
xor
mov
into
cmpsl
stos
xchg
cmp
aaa
mov
dec
in
adc
shl
pop
cs
xchg
sub
testl
call
out
mov
sub
lock
rclb
in
sub
cmp
xchg
mov
dec
outsl
scas
pop
mov
shll
out
xor
test
jecxz
movsb
lea
push
inc
shrb
or
in
push
test
xchg
dec
lods
ds
push
fidivl
loop
cltd
sbb
xor
xchg
push
ljmp
pushl
jmp
cmp
sti
outsb
xor
xor
push
push
rclb
into
lcall
mov
dec
push
sahf
xchg
out
mov
repz
fcoml
mov
scas
in
sarb
fsubrp
fwait
xorb
adc
test
out
fnstcw
add
dec
ret
in
pop
mov
xchg
push
jae
cmp
mov
sub
mov
repnz
cmpsl
push
test
scas
push
push
imul
lret
jns
int
mov
jnp
fidivl
inc
sub
pop
scas
and
xchg
jp
inc
and
in
push
and
xchg
repz
jb
push
subb
push
pop
sbb
in
lds
adc
dec
repz
sbb
insb
jp
loopne
jecxz
xchg
inc
sbb
xorb
mov
enter
div
xor
mov
arpl
dec
nop
inc
jmp
adc
and
mov
add
pusha
adc
xchg
inc
addb
fs
adc
out
lds
fdivs
dec
lea
test
je
inc
mov
sub
ud2
jb
std
mov
mov
cld
rclb
pop
test
mov
mov
jb
push
pop
pop
pop
stc
sbb
dec
mov
fcompl
mov
mov
push
mov
xchg
cmp
pop
inc
in
ret
dec
dec
cmp
enter
sti
dec
in
fiaddl
loope
pop
push
inc
push
mov
test
mov
pop
jae
jno
sti
int
scas
pop
and
and
aas
lcall
xlat
xor
lods
stos
outsb
sub
add
lds
add
push
sahf
jne
mov
jge
fwait
adc
fisttps
and
not
enter
flds
adc
jnp
cmp
out
idivl
outsl
pushf
jns
cmp
out
add
scas
mov
into
mov
xchg
fnstcw
xchg
mov
mov
mov
in
lods
push
pushf
add
ret
in
sub
movsl
push
sbb
sbb
out
insb
or
jp
es
out
pop
mov
mov
cwtl
std
lods
ficompl
and
mov
mov
adc
mov
ss
ljmp
rolb
ja
adc
mov
fisubrs
ja
lods
mov
fwait
xor
xchg
mov
fwait
push
out
ljmp
adc
push
push
jne
movsl
loope
sub
sub
xchg
fwait
sub
in
jle
or
orb
call
mov
mov
cmp
fisubl
or
imul
or
ljmp
cmpsl
outsl
dec
cli
outsl
das
arpl
xchg
or
adcl
leave
sbb
int3
fsubs
insl
mov
cmp
mov
jb
cwtl
inc
sbb
orb
lea
into
flds
fbld
lret
movsb
jns
out
jne
sahf
and
adc
repz
push
jno
aam
dec
adc
ret
lods
push
int3
inc
fcom
mov
test
mov
xor
add
in
cmp
pop
pop
jae
xchg
mov
cld
outsl
or
sub
mov
test
cmp
jmp
rorb
mov
pop
bound
in
mov
pop
je
jae
mov
sbb
or
xor
aaa
aaa
insb
hlt
test
cmp
pop
push
push
std
out
mov
or
lea
adc
fsubr
lret
mov
ret
pop
out
sub
nop
insb
or
imul
sbb
mov
sub
movsb
jno
adc
cmp
push
adc
adc
pop
rcrb
in
faddp
loope
nop
sbb
clc
in
sahf
arpl
and
sbb
push
xchg
or
mov
aam
aaa
xchg
dec
push
mov
pop
fistpl
add
leave
mov
mov
pop
mov
adc
push
mov
pop
push
ja
inc
lret
out
movsl
scas
cmpsb
roll
shrb
imul
xchg
cli
pop
sub
mov
and
iret
cmp
sub
xor
adc
test
rcrb
enter
push
scas
xor
dec
shlb
push
pop
and
and
out
or
or
dec
loop
addr16
test
adc
call
das
mov
mov
cmp
adc
mov
testb
es
les
sbb
flds
pop
sub
imul
out
int3
and
sub
out
insb
pop
xchg
sub
push
xchg
fs
in
leave
les
stos
jmp
ret
pusha
jl
gs
ret
aaa
pushf
outsl
dec
xchg
sbb
xchg
sub
stos
fstpt
daa
adc
sub
jnp
outsl
test
stos
lock
push
cmp
add
jecxz
cmp
insb
sbb
aad
pop
cmp
mov
sub
xchg
mov
and
mov
mov
jne
mov
cmp
dec
pushf
fucom
test
push
lcall
dec
inc
add
decl
decl
inc
xchg
sbb
push
jmp
inc
pop
sahf
pop
inc
andb
lret
test
sub
test
cmp
push
dec
or
test
mov
xchg
or
push
cwtl
ss
and
inc
xor
xchg
inc
dec
ja
arpl
lahf
mov
ja
rol
sbb
insb
out
push
js
hlt
push
clc
inc
jae
insl
notl
cmp
shr
xchg
insb
in
mov
sub
push
xchg
xchg
sub
lea
mov
loope
xchg
pop
aaa
cli
push
adc
adcb
inc
enter
and
sub
fsubl
loop
sar
addr16
scas
inc
cli
xchg
or
or
inc
fcomip
lret
lock
popa
test
jbe
mov
ficomps
insb
xor
call
test
sarb
sub
ljmp
mov
and
lahf
pop
push
faddl
adc
ret
sarl
repnz
loope
rcll
and
pop
mov
mov
xchg
push
imul
clc
mov
jne
and
in
add
in
jns
pop
sub
lods
sub
stc
loopne
mov
dec
pop
push
test
test
pop
or
jg
in
adc
in
pop
imul
in
jae
fnstcw
mov
stos
out
and
xor
xor
push
mov
in
mov
mov
add
icebp
or
mov
adcb
cmpsb
xor
daa
xor
xor
sub
out
aad
wrmsr
adc
jg
cmp
add
mov
mov
xor
test
mov
imul
popf
je
sbb
xor
ja
lret
adc
pop
mov
mov
dec
mov
mov
or
test
cmp
push
jecxz
sbb
int
in
pop
cmc
push
stc
mov
or
mov
add
sbb
sbb
in
sbb
scas
loopne
scas
pop
xchg
cmpsb
adc
test
fxam
xor
loop
jo
xor
imul
adcb
test
gs
pop
pop
daa
xchg
das
jb
sub
jbe
pusha
fidivs
jl
xor
push
adcb
popa
rcrl
pusha
in
adc
notl
dec
por
jnp
fsubrs
jns
or
pop
sti
ja
sahf
enter
fwait
test
jnp
nop
scas
pop
xor
aad
cmpb
jae
in
test
pop
push
sbb
xchg
xor
adc
bound
out
push
cli
sbb
into
mov
add
pop
nop
testb
mov
xor
cmp
inc
ja
pushf
ficomps
addl
cltd
inc
xchg
dec
or
pop
and
xor
xor
mov
dec
pop
scas
jg
adc
fistpll
xor
out
leave
or
pop
insl
in
int3
mov
sti
mov
dec
jmp
sub
movsl
sbb
das
hlt
ja
dec
lret
aaa
lods
sub
pop
test
pushf
imul
and
and
pop
pushf
jg
ja
add
mov
pusha
jl
adc
push
xor
jns
dec
lret
inc
and
xchg
cwtl
lcall
xchg
mov
sbb
movsl
mov
sbb
addb
cmpl
adc
fdivr
jp
pop
or
jecxz
arpl
pop
cmp
fisttps
push
out
out
adc
sahf
xchg
in
nop
adc
dec
pop
xchg
add
mov
jo
xchg
and
clc
adc
cmp
inc
mov
stos
out
mov
int3
repz
add
jo
jns
test
in
arpl
jb
iret
pop
push
pushf
push
aad
mov
lcall
push
test
push
push
add
imul
mov
lods
negb
cmp
ja
push
or
ljmp
mov
or
nop
mov
aam
add
push
mov
out
cmp
int
adc
shrb
sub
sub
movsb
adc
xchg
jg
call
movsl
mov
mov
adc
leave
imul
in
stos
les
jbe
cmp
inc
insl
jno
and
sbb
xchg
scas
and
mov
fwait
xlat
push
fstps
xchg
xor
ss
mov
mov
jne
pop
mov
out
push
pop
add
and
sub
push
mov
test
and
mov
pop
mov
pop
add
jmp
push
pusha
fwait
sarb
mov
and
mov
in
cld
or
scas
les
call
add
sbb
ficomps
adc
cwtl
cmp
andl
out
iret
test
adc
mov
popa
mov
xchg
loop
inc
icebp
lds
popa
aas
out
xchg
mov
shlb
jle
sub
cmp
es
pop
inc
pushf
xchg
mov
test
mov
out
sub
lds
cmpsb
mov
adc
cmp
xlat
lcall
sar
sub
mov
sbb
ljmp
mov
dec
dec
jb
gs
xor
test
out
loopne
mov
xchg
dec
mov
into
stc
xlat
movb
clc
movsb
lock
pushl
cltd
mov
fistpll
sti
adc
loopne
icebp
stos
hlt
jbe
aad
nop
and
repnz
sbb
xor
in
in
insb
fists
sbb
mov
and
fdiv
jg
in
lret
push
imul
std
mov
das
cmp
popa
push
mov
mov
add
or
push
push
jno
test
lret
sub
mov
sub
fildll
mov
test
and
sbb
mov
lea
push
jns
mov
rclb
add
fstpl
xlat
cs
xchg
cmpsl
pop
repnz
enter
xor
mov
fstl
mov
add
inc
cmp
std
iret
mov
stos
scas
push
fidivrs
stos
insb
cltd
cld
push
xlat
fidivrs
insl
shr
cs
cs
xlat
or
repnz
fs
call
cs
adc
repnz
inc
dec
adc
aaa
jno
scas
xchg
pop
jb
push
aas
cwtl
and
lret
or
pop
dec
sahf
out
mov
xor
push
fistpl
mov
or
sub
insl
stos
pop
rcr
cmc
jp
dec
loope
add
aas
jl
lds
mov
pushf
cwtl
jl
xchg
jnp
ret
inc
cwtl
test
sbb
arpl
xor
sahf
jmp
aad
sub
dec
mov
push
mov
or
jne
add
cmp
or
andb
test
cmp
cmc
sarl
aam
adc
std
lret
dec
mov
into
ja
fnsave
push
outsb
jmp
add
dec
or
insl
psubw
cltd
xor
jp
push
popa
roll
out
and
int3
lock
lds
jle
jns
repz
popa
das
mov
add
inc
fnstsw
and
xor
mov
jo
test
je
mov
ja
sbb
imul
pop
pop
je
or
pop
sub
push
leave
outsl
pop
xchg
or
pop
mov
mov
mov
and
push
and
xor
dec
das
fbstp
hlt
in
mov
jno
out
cltd
mov
sub
adc
mov
jl
cli
orl
xchg
push
ficoml
sub
xor
inc
stc
pushf
data16
xchg
in
jle
mov
mov
push
in
push
or
lock
xor
push
pop
mov
imul
movsl
mov
icebp
cmp
lock
mov
ja
rcll
ret
lods
lea
ret
ljmp
pusha
dec
ljmp
in
mov
xchg
jne
enter
xor
sbb
mov
fstp
jle
dec
xor
pop
jle
jnp
addr16
adc
mov
mov
or
call
pop
pop
mov
imul
sbb
jg
inc
or
mov
ja
xor
adc
xlat
jmp
jb
ljmp
in
and
push
fidivl
push
dec
mov
jl
lret
lods
int3
xlat
fisubrs
or
or
or
mov
xlat
leave
xchg
pop
sarb
inc
clc
dec
ljmp
inc
dec
sbb
or
cmpsb
sti
mov
imul
xor
cmp
cmpsl
aaa
call
or
cmp
mov
out
or
pop
mov
pushf
imul
mov
push
xchg
ss
rol
add
and
cmpsl
clc
add
xchg
popf
xor
or
sbb
inc
fs
cmp
push
adc
into
mov
call
loop
repnz
or
push
stc
xchg
sub
cld
adcl
dec
hlt
shr
jbe
jmp
sbb
out
mov
aaa
pop
xor
mov
sub
push
sbb
mov
js
jmp
es
or
rorb
cmp
xchg
cmp
mov
dec
flds
lahf
xchg
dec
in
and
and
aad
mov
dec
insb
sub
jne
or
aas
mov
into
lods
lret
push
mov
aas
and
nop
push
inc
sub
or
inc
lret
cli
or
xor
loopne
xchg
ret
cmpsl
cmp
xchg
pop
ljmp
lds
and
jo
cwtl
mov
push
xlat
shlb
idivb
pop
pop
out
xchg
cmpsl
xor
push
sahf
cmc
jg
xor
out
push
or
or
enter
push
xor
mov
xchg
inc
sbb
or
idivl
imul
jns
and
lock
popa
sbb
les
xor
cli
addr16
lahf
push
arpl
push
adc
sbb
aad
lea
nop
fidivl
jecxz
cs
adc
pop
mov
stos
sahf
jo
scas
repnz
push
mov
jbe
cmp
sbb
repz
or
mov
test
jnp
add
adc
push
mov
mov
jmp
jne
pop
xchg
jo
out
repnz
ret
or
mov
outsb
adc
pop
shrl
xchg
hlt
adc
jns
scas
pop
inc
adc
lahf
jno
push
fwait
rcrl
es
sarb
jb
test
mov
sbb
adc
push
mov
dec
ret
cmp
dec
js
iret
dec
or
mov
and
les
ss
out
jns
sbb
cmp
mov
inc
fmul
mov
adc
jmp
pop
mov
mov
push
ret
mov
adc
dec
test
add
lods
insl
inc
push
adc
mov
and
pop
pop
loop
lea
rclb
add
dec
add
sbb
out
cmp
sbb
or
xchg
and
mov
ficoms
sub
mov
roll
ljmp
fbld
push
in
pop
dec
aaa
aad
rol
mov
push
int
sbb
test
fsubs
pop
jb
out
lods
stos
sbb
cwtl
push
cmp
mulb
inc
loope
adc
mov
mov
mov
and
xor
insb
test
popa
mov
xorl
scas
lcall
aad
adc
adc
pop
adc
cmp
jl
adc
icebp
xor
push
push
adc
and
leave
mov
inc
xor
inc
jae,pt
out
inc
mov
jmp
ljmp
jae,pn
cwtl
dec
xor
std
pushf
mov
jle
jle
mov
loop
fst
dec
stc
xor
imulb
pop
fdivs
cmpsb
adc
cmc
ret
ljmp
stos
push
push
and
or
pop
jmp
ds
push
clc
xchg
sub
loop
repz
add
mov
cmpsl
stos
pop
cmp
rcll
or
cmp
imul
sub
cmp
pop
ljmp
mov
jmp
call
pop
add
inc
jge
loop
adc
mov
stc
hlt
fmuls
dec
movsl
adc
mov
jle
inc
mov
mov
sub
rcll
sbbl
scas
mov
jbe
mov
xchg
jmp
pcmpeqw
lcall
cmpsl
pop
shr
inc
repnz
enter
push
scas
lods
push
std
push
push
out
or
xchg
mov
mov
pop
adc
aaa
xchg
cmp
ss
or
fs
popf
jae
lcall
mov
sub
shll
lods
nop
popf
outsl
aaa
push
sbb
aaa
sahf
in
and
call
inc
test
popl
jecxz
mov
mov
pop
cs
sbb
cmpsb
icebp
aad
aaa
xor
loopne
out
pop
decl
or
icebp
xchg
movsl
enter
xor
mov
and
std
add
loopne
or
fisttpll
or
xor
lods
mov
jmp
jns
pop
mov
in
cwtl
test
testb
shll
pop
jns
call
mov
lret
cmp
icebp
cmpsl
dec
flds
repnz
sbb
lret
ret
dec
push
shrb
push
push
adc
fidivrs
and
mov
mov
dec
ret
xor
jne
int3
push
cmp
xchg
stc
aad
jbe
fldenv
out
test
ja
push
inc
xor
dec
add
adc
lods
mov
and
add
mov
jl
aas
push
pushf
stc
xchg
jl
mov
xor
cmpsb
sub
mov
jns
pushf
popf
cmp
mov
mov
jge
mov
outsb
es
push
mov
addr16
sub
mov
ja
xchg
or
lcall
sub
std
xor
push
ljmp
mov
and
pop
stc
cld
arpl
repnz
mov
jge
lods
push
movsl
inc
xor
mov
cs
std
lods
and
scas
add
inc
cmpsl
and
sbb
pop
cmpl
sbb
push
outsb
and
cmp
daa
pop
xchg
aam
repz
sti
lahf
mov
popf
pop
imul
mov
push
mov
dec
call
push
adc
inc
fmuls
mov
xchg
cmpb
jns
mov
loop
int3
sub
adc
sub
xchg
addr16
dec
lret
scas
and
cmp
push
mov
and
mov
shll
xor
aam
es
stos
imul
cmc
pushl
xor
pop
pop
jns
mov
mov
mov
adc
loopne
cmpsb
rcrb
add
cmpsb
mov
cmp
cmpsl
cwtl
fisttpl
aaa
lods
jl
stos
dec
xchg
negl
sbb
fmuls
test
stc
popa
lock
push
dec
cmp
and
mov
jns
xor
jb
mov
jae
pop
arpl
shrl
xchg
lret
dec
adc
dec
xchg
sbb
test
inc
mov
movsl
and
inc
outsl
fstps
ret
xor
mov
sbb
xor
mov
or
xlat
rorl
mov
push
xchg
loopne
cmp
pop
rorb
adc
inc
lock
jmp
adc
inc
dec
test
sbb
or
out
imul
jbe
popa
xchg
xor
jno
xchg
mov
push
jl
xchg
push
xor
mov
adc
sub
adc
mov
iret
mov
add
addr16
and
lea
and
mov
jecxz
lods
cli
loopne
xor
jo
imul
xchg
inc
data16
fidivs
add
adc
cmp
jae
ja
lea
data16
sub
aaa
ljmp
or
in
lea
adc
add
mov
or
jl
sti
inc
add
mov
xor
or
addr16
iret
stc
fisttps
arpl
enter
xor
scas
popf
mov
pop
jns
add
fimuls
dec
jae
call
add
ss
xchg
dec
jne
rep
in
adc
mov
sbb
inc
out
outsb
popf
sub
mov
jo
mov
lea
icebp
jmp
xchg
sub
ret
in
lahf
add
jge
adc
or
daa
sub
push
scas
stos
xchg
xor
jns
cmpsb
data16
xchg
lret
call
cmp
lock
mov
inc
ds
arpl
repnz
inc
stos
test
push
lret
push
shrl
lahf
sbb
hlt
cld
lods
lahf
push
xchg
add
mov
icebp
cld
or
and
adc
mov
stc
int3
in
sahf
aaa
stc
xchg
mov
jle
inc
sub
or
outsb
or
or
clc
fcmovb
pushf
push
test
jle
test
xlat
cmp
daa
fldcw
cld
mov
in
pop
xchg
jecxz
into
xchg
mov
cmp
notl
pop
insl
pop
subb
pop
jmp
inc
mov
dec
sub
popa
scas
mov
nop
out
jno
jmp
out
push
jmp
pop
insb
imul
xchg
in
cmpl
inc
das
inc
dec
adc
mov
lods
out
inc
imul
adcl
push
test
xchg
dec
imul
stos
jl
push
shlb
cmp
or
pop
pusha
fidivs
jo
push
push
aaa
repnz
pop
mov
fstpl
iret
outsl
sbb
xchg
or
push
in
and
or
push
jmp
imul
decl
dec
sub
movsb
loop
sarb
push
cltd
or
test
jno
inc
jp
popf
outsl
in
sbb
divb
cs
or
jae
addr16
add
inc
lret
lret
xchg
inc
cli
aam
int3
dec
jno
mov
push
dec
adc
pop
and
sub
popf
dec
push
jp
pop
push
sub
jne
sub
xchg
xchg
sub
mov
ljmp
sbb
imul
test
call
mov
mov
mov
lahf
push
sti
jbe
bswap
or
sti
inc
sbb
push
stc
push
xchg
xchg
lock
test
sahf
push
cmpb
add
es
sbb
cmp
add
jb
push
jo
sub
jg
jne
arpl
ljmp
testb
mov
sbb
in
xchg
in
scas
add
xor
cmp
mov
bt
sbb
mulb
sub
adcl
jmp
xchg
cmp
subb
bound
pop
xor
push
out
int
xchg
inc
add
sti
push
and
jge
adc
dec
mov
add
dec
scas
fbstp
pushf
push
adc
or
cmpsl
dec
into
jno
dec
sbb
cli
mov
pop
repnz
bound
or
cmp
fs
jl
dec
and
lret
xchg
jb
sub
test
push
add
sbb
push
lock
xchg
mov
adc
jg
adc
jns
ja
inc
imul
inc
push
insl
test
dec
sub
movsl
pop
in
sub
pop
movsl
scas
jmp
mov
jb
outsb
cli
fdivr
lret
popf
outsl
stos
xchg
dec
mov
sti
push
jg
adc
xor
addps
inc
dec
cwtl
sub
jle
ja
out
repz
mov
hlt
fldt
jp
xchg
xchg
mov
jo
sub
movsb
movsl
adc
orb
jns
les
int3
pushf
pushf
inc
cwtl
les
enter
unpckhps
dec
movsb
dec
cwtl
push
out
sahf
std
cld
out
iret
jg
std
inc
push
jo
add
sbb
mov
and
stc
cltd
in
pop
scas
aas
ffreep
std
mov
sub
leave
sbb
sarl
rcrb
and
movl
fdivrs
inc
inc
xchg
js
xchg
sbb
xchg
mov
in
cs
fs
push
ficompl
fs
mov
lock
sbb
fwait
daa
outsb
push
pop
insb
add
je
mov
inc
pop
and
orl
shll
jl
test
scas
loop
sub
mov
xor
out
or
iret
jl
lcall
aam
pushf
jp
test
xor
sbb
das
gs
imul
push
jecxz
aas
into
xchg
push
mov
pusha
fs
pop
mov
or
repnz
aad
jne
pushf
cld
cmp
xor
fmulp
fldcw
xlat
adc
leave
popf
sub
push
pop
ror
inc
aas
dec
jne
sub
jne
int
js
add
lods
cmp
fisttpll
ja
shl
jl
data16
lret
push
sub
jge
popf
jb
jg
movsb
inc
dec
cmp
jmp
xlat
popf
xor
movsl
pop
mov
jmp
aam
xchg
xor
xor
jecxz
dec
ficoml
mov
cmp
clc
mov
adc
repz
sarb
aad
pop
push
test
pusha
push
adc
lret
lods
mov
or
adc
js
test
lea
inc
addr16
repz
mov
pop
divb
shlb
add
mov
test
fwait
xchg
ss
mov
xor
scas
pop
jno
sbb
and
or
hlt
pop
sub
pop
js
mov
je
int
jle
jae
and
and
loope
dec
xchg
clc
fwait
imul
fisttpl
push
pop
movsb
data16
cmpb
cld
add
jg
inc
cmpsb
insl
sbb
int3
out
cmpsb
in
push
cmp
call
dec
dec
xchg
lret
repz
dec
pop
test
inc
sbb
mov
scas
jbe
inc
into
lods
dec
dec
daa
insl
adc
push
pop
jbe
mov
mov
jnp
imul
adc
out
jns
sub
rolb
test
mov
das
ja
fists
test
inc
pop
into
out
push
pop
std
jae
push
pop
or
xchg
push
sub
loop
add
or
mov
push
adc
inc
repnz
mov
push
addl
arpl
dec
inc
sbb
jne
add
test
xor
stos
mov
sbb
ret
in
push
scas
xchg
outsb
insl
or
dec
add
and
and
es
cmp
je
lcall
out
aas
sub
rcr
adc
cmpsb
adcl
out
mov
fprem1
fildl
mov
push
xor
pop
mov
jecxz
sub
cmp
jne
sub
adc
cwtl
fxch
out
adc
aaa
in
xor
sub
pop
pop
push
mov
mov
jnp
jge
loop
sbb
mov
mov
jae
pop
push
adc
mov
xchg
or
fidivl
icebp
dec
push
insl
rorl
orl
adc
inc
push
dec
bound
mov
lods
xchg
scas
xchg
jae
pop
aas
mov
cmp
repz
cmpsl
mov
xchg
dec
add
cwtl
insl
dec
jmp
loopne
add
addr16
cmp
insl
call
mov
repnz
movsl
bound
outsb
adcl
xor
sub
iret
stos
jp
outsb
add
adc
addr16
out
mov
mov
call
sbb
xor
cmp
mov
and
dec
push
icebp
push
decb
mov
and
sub
int3
int3
icebp
sub
test
cli
clc
je
fdivrs
xchg
mov
lods
fwait
ret
push
movsb
neg
jg
pop
repnz
roll
add
jbe
and
in
push
jbe
mov
xchg
sub
xchg
lds
test
xchg
xor
push
sbb
das
pushf
push
movsl
or
pop
scas
adc
inc
dec
mov
sub
push
jo
add
movsb
test
lock
add
xchg
adc
cmpsb
test
sahf
adc
xor
push
orb
and
xchg
ret
xor
movsb
sub
mov
cmp
rclb
and
nop
ret
fmull
test
insb
loope
add
inc
or
pop
add
push
mov
subl
add
inc
or
xlat
test
sub
fadds
imul
or
aad
jle
in
pop
pop
lods
or
pusha
push
inc
cmpsb
mov
or
ret
mov
xor
sbb
sbbl
push
jge
inc
scas
cmp
adc
cmc
sub
hlt
out
mov
push
sahf
push
bnd
mov
jbe
orb
cmp
xor
xor
dec
adc
pop
jbe
sti
shll
push
xlat
lret
mov
fs
sbb
lods
insl
add
inc
inc
add
mov
inc
inc
std
mov
jne
aad
push
insl
inc
pushf
fcomip
inc
test
sub
cmp
jmp
push
push
addr16
dec
push
lea
lret
mov
mov
insb
push
shlb
cmp
call
and
jb
movsl
and
in
and
mov
shll
faddl
in
inc
test
jae
mov
sti
test
mov
addr16
mov
lock
cmp
movsl
fimull
repz
push
scas
push
fbstp
mov
sbb
jo
inc
or
mov
add
iret
popf
lods
jmp
stc
xlat
int3
dec
jo
jnp
jns
idivb
cmp
pop
adc
lahf
push
dec
std
jbe
push
and
and
and
loope
and
icebp
shll
or
cmc
movsl
mov
dec
mov
ljmp
adc
mov
loopne
xchg
shrl
pop
fs
test
stc
js
mov
pop
enter
gs
neg
and
mov
enter
pop
jns
jge
movl
cmp
pop
clc
sub
decl
add
aas
mov
test
cmp
jge
arpl
mov
cmp
fistl
ret
or
mov
stc
lods
xor
jle
push
loope
push
jmp
sahf
sub
dec
inc
or
and
inc
mov
popf
imul
fldt
mov
je
imul
mov
aad
inc
cmp
sub
in
and
test
sbb
pop
in
lods
mov
stos
faddl
arpl
mov
outsl
add
push
and
mov
adc
call
sarl
cld
cmp
cmc
sti
scas
inc
test
push
and
inc
gs
pop
iret
jmp
mov
mov
adc
imul
popf
aam
mov
lods
sub
in
cltd
dec
dec
push
movsl
sbb
clc
cmp
jnp
test
mov
icebp
scas
cmp
pop
rol
xor
rorb
xor
movsb
aam
mov
xchg
push
xchg
sahf
rcll
jbe
dec
sbb
pop
push
push
fisubrl
inc
push
pop
std
or
and
repnz
testb
and
daa
inc
inc
ljmp
xor
cwtl
cltd
stos
mov
and
shrb
sbb
arpl
pop
mov
shlb
sbb
mov
jge
jge
inc
sbb
sub
xor
out
insl
and
ljmp
aam
adc
shlb
fistpl
push
xlat
mov
push
sbb
into
or
mov
cmpsl
adc
or
cmp
mov
jb
lret
inc
push
ret
sahf
fcomip
push
mov
jle
stos
xchg
push
adc
inc
lcall
movsl
clc
push
and
mov
hlt
insb
out
rcl
arpl
fadd
sahf
fnstcw
xor
sub
xchg
jae
idiv
cli
stos
lret
pop
and
scas
arpl
movsb
icebp
or
and
dec
adc
push
jge
icebp
insb
sub
or
ljmp
and
and
rcrb
jae
sbb
mov
enter
dec
in
in
pop
push
lahf
xor
std
mov
inc
jle
sub
sbb
je
sub
cltd
sbb
insb
cmpb
mov
cmc
dec
cltd
jb
push
and
mov
loopne
push
or
sub
ret
ljmp
jbe
pop
jbe
in
ficoms
sti
outsb
stos
inc
cmpsb
jns
pop
orps
ds
mov
mov
jb
les
dec
xchg
cmp
inc
mov
cmpsb
sti
xchg
xchg
out
addr16
cmp
xchg
push
mov
cmp
inc
insb
and
pop
jg
and
jg
pop
cmp
mov
fdiv
ficoms
xlat
cmp
enter
inc
in
cmpsb
xchg
add
mov
fstl
mov
jmp
push
es
jae
arpl
add
fstl
cmp
movsb
xorb
adc
add
push
out
mov
ja
outsb
push
out
ja
xlat
in
cli
pop
xchg
dec
out
testl
mov
pop
enter
outsb
mov
adc
test
xchg
mov
popf
xor
inc
mov
js
push
repz
add
repnz
sbb
pop
push
xor
test
mov
sti
inc
movsl
in
inc
cmp
mov
pop
push
out
negb
insb
out
addr16
pop
in
ljmp
add
ja
pop
pop
fucom
aam
sti
repz
mov
add
lcall
xchg
jnp
fbstp
popa
divb
out
nop
pop
dec
dec
xchg
pusha
rsm
or
repz
es
pop
imul
dec
mov
pop
xor
popa
arpl
fstps
orl
push
ljmp
mov
insl
mov
daa
jno
xchg
cltd
dec
mov
add
push
std
in
pop
sti
popf
negl
xor
cwtl
lahf
test
hlt
ret
test
lods
subb
int3
shr
std
inc
xchg
rol
aas
cs
in
ljmp
jno
cld
shll
in
cmpsb
fwait
or
push
repz
in
rcrl
or
jmp
and
push
arpl
or
cmp
aas
mov
add
int
mov
hlt
mov
ja
xor
sub
adc
lcall
pop
or
xor
sub
outsl
loop
stc
pop
adc
or
icebp
scas
ja
imul
sahf
fistpll
ja
sbb
lahf
outsl
imul
cmp
enter
test
lcall
xchg
ret
jge
dec
test
sbb
ss
cli
xchg
jb
and
mov
popf
mov
lock
inc
sbb
sbb
scas
lret
add
fists
and
cmp
fs
cmp
iret
in
jno
addr16
loop
jmp
jo
cmp
and
out
push
out
xchg
adc
pushf
insl
lcall
and
in
jecxz
sbb
adc
out
mov
fcomp
push
cmc
and
fwait
ret
inc
out
repz
and
jmp
mov
ud1
jge
jne
jno
cli
sub
testl
push
pop
je
cmc
pop
sbb
pop
add
gs
mov
xchg
les
pop
jne
cld
outsb
sub
orb
rclb
inc
icebp
sarl
clc
cs
int
jmp
lret
cltd
aaa
pop
lret
adc
xor
and
lcall
jnp
mov
sti
add
iret
xchg
cmp
cltd
ds
mov
mov
call
lret
dec
pop
addr16
sub
push
cmpsl
push
ljmp
sbb
mov
insl
hlt
sub
test
fcmovne
dec
and
lret
sbb
jno
addl
fisubl
addr16
pusha
aam
gs
test
dec
lret
or
xchg
movsb
test
push
les
add
sub
ds
dec
in
jnp
and
xchg
or
or
imul
int3
mov
icebp
repz
cltd
xchg
repz
push
adc
loopne
push
jl
push
jecxz
loop
push
dec
insb
std
aaa
dec
cmp
test
xor
ficompl
lret
pop
mov
and
adc
mov
pop
fidivl
aas
pushf
or
mov
rclb
jge
pop
call
int3
pop
cmpsl
pop
cmp
cltd
xchg
mov
fildl
pop
inc
push
push
les
int
pop
mov
divb
out
sub
jns
sti
mov
pop
xlat
jns
aaa
pop
into
fwait
pop
stos
cmp
popa
pop
add
jbe
xor
xor
scas
push
test
jns
xor
push
mov
mov
jno
jnp
bnd
adc
pusha
out
jl
cmpsl
push
and
aad
adc
les
repz
cwtl
les
popa
test
xor
inc
into
push
push
xor
int3
cmpsl
cmp
dec
divb
insl
jge
mov
int
mov
es
out
dec
daa
push
jge
mov
jge
push
sub
sbb
add
mov
mov
decb
push
shrl
jmp
adc
or
ret
or
push
xchg
push
jbe
adc
mov
inc
and
test
push
loopne
je
inc
sbb
cmp
mov
inc
mov
push
push
imul
push
popa
in
cmc
repz
dec
bound
rcrb
or
nop
insl
add
xchg
xchg
adc
push
or
jo
or
xchg
inc
mov
push
test
xchg
push
jae
adc
xor
push
mov
out
repz
notl
movq
cmp
push
sub
xchg
cmp
inc
daa
lods
aad
out
or
movsl
mov
mov
shll
adc
mov
rorb
int
mov
pop
ds
inc
sub
mov
testb
outsl
shr
insl
mov
enter
cmpsl
adc
fsubrs
data16
leave
pop
jbe
ret
push
and
cmp
cmp
js
insb
jl
shrl
inc
es
mov
outsl
sub
repz
push
rolb
sbb
and
orl
push
adc
mov
mov
sbbl
lret
repnz
jbe
add
dec
lahf
xchg
dec
nop
xor
jb
jo
push
mov
sti
into
xlat
cld
inc
addr16
jecxz
imull
pop
mov
cli
cmpsb
ret
push
adc
pop
jg
sbb
inc
loop
sbb
cmpsb
inc
notb
xor
mov
lar
mov
pop
cmp
mov
cmpsl
out
addl
popf
inc
adc
pop
add
mov
push
jb
lds
sbb
leave
in
sahf
push
jae
push
and
lods
les
xchg
xchg
sub
or
std
addr16
xor
arpl
gs
ret
mov
ret
xor
inc
clc
push
mov
mov
mov
add
repz
aaa
push
inc
sbb
ljmp
cmp
add
aad
pop
jmp
xchg
cmp
lods
in
dec
std
cld
jle
mov
sub
mov
sub
sbb
sub
insb
mov
xchg
or
movsl
cmpsb
lods
adcb
sar
inc
inc
flds
daa
push
lahf
cli
or
and
testl
aad
xchg
sub
dec
bound
fbstp
sbb
mov
lretw
lret
adc
aas
mov
icebp
cmp
imul
cmpsb
sbbl
or
and
loope
fidivrs
stc
aas
mov
lock
jle
test
add
dec
lcall
adc
mov
mov
xor
inc
cmp
lea
pop
orb
mov
dec
adc
cltd
or
dec
and
sub
outsb
jbe
ljmp
rcrb
mov
dec
scas
fcmovbe
push
in
jbe
mull
mov
mov
in
leave
cmpsl
mov
arpl
cwtl
in
les
imul
in
addr16
mov
int3
mov
xchg
in
loope
pushf
adc
mov
jmp
jp
out
add
rolb
sbb
or
mov
bound
lcall
sbb
mov
leave
aam
jg
int
mov
mov
push
clc
movl
add
lock
dec
or
inc
stos
test
sbb
enter
lock
inc
lods
in
repz
xchg
push
sti
jge
aas
add
mov
mov
mulb
in
call
subb
and
mov
mov
enter
incb
std
cmp
add
inc
scas
add
aas
shl
push
notl
int
lods
dec
mov
stos
mov
in
imul
mov
test
fdivrp
lahf
inc
push
outsb
add
jge
cmp
jg
repz
mov
aad
inc
or
mov
iret
sbb
cmpsl
movsb
loopne
inc
pusha
lcall
fdivr
pop
lret
mov
mov
je
pushl
xor
jecxz
vpackuswb
call
cmp
pusha
enter
out
fwait
aas
dec
lret
dec
fwait
sbb
cltd
fstps
cmp
mov
or
aad
mov
adc
push
rolb
movb
adc
cmp
xchg
mov
add
hlt
inc
xor
pop
xchg
sub
into
in
xchg
insb
adc
add
mov
sub
jg
pushf
xchg
loopne
imul
ficoml
inc
push
movsb
or
movsl
xchg
pop
xchg
aas
popf
repnz
test
shl
sahf
les
sahf
sbb
mov
dec
lock
dec
and
fisttps
add
cmp
xchg
call
push
sbb
leave
xor
lcall
xor
dec
jo
in
cltd
data16
enter
push
das
jne
sub
push
push
mov
and
xor
inc
adc
and
push
sti
dec
dec
sahf
shrl
pop
push
pop
or
jle
sub
cmp
repnz
adc
in
inc
dec
sbbl
shlb
push
popf
clc
adc
stos
cmp
pop
stos
testl
cwtl
mov
pop
jmp
les
test
pushf
dec
mov
mov
jbe
loope
fxch
test
nop
nop
or
in
iret
shl
jle
and
sub
and
jg
mov
inc
cwtl
pusha
mov
pop
push
adc
in
pminsw
inc
mov
pop
pop
jle
mov
or
les
pop
out
gs
inc
scas
jl
iret
lret
add
sub
sub
mov
pop
addr16
and
arpl
sub
pop
inc
jne
aaa
std
jg
push
lcall
adc
jle
jnp
xchg
pop
rorb
cmp
xchg
mov
and
xchg
subl
sbb
aaa
nop
fildl
push
or
dec
flds
in
xchg
pop
pop
test
or
xor
out
inc
dec
popa
sub
sub
sbb
cmp
and
add
xor
sbb
rcrb
inc
fsubl
jecxz
iret
ljmp
hlt
addr16
cmc
sub
out
mov
pop
sahf
notb
xchg
mov
cmp
stos
icebp
fsts
cmp
fcoml
js
cmp
js
cltd
push
add
je
bound
adc
jmp
cmp
jecxz
loop
jne
xor
and
test
test
filds
xor
lds
cwtl
daa
inc
sbb
aas
xchg
or
xor
out
flds
addr16
mov
or
fbld
jnp
lcall
fnsave
pushl
mov
jnp
xchg
sbb
in
gs
sbb
fwait
inc
insl
mov
push
inc
and
repz
nop
jae
mov
xchg
or
shrl
in
sub
lret
fsub
scas
mov
incl
std
test
out
cmp
icebp
mov
clc
and
cmpsb
cmp
das
push
inc
fldl
scas
push
inc
dec
out
mov
and
fwait
mov
fldcw
in
dec
xchg
je
and
notb
xor
inc
subl
inc
mov
test
into
cmp
or
imul
dec
clc
dec
jg
pop
movsl
or
mov
mov
inc
and
pop
icebp
sub
mov
in
dec
push
pop
scas
rolb
fldz
idivb
jg
xchg
int3
cmp
cmp
sub
ja
xor
dec
mov
aaa
insb
sarb
test
push
or
mov
test
ret
test
xchg
or
mov
jecxz
lock
inc
jns
scas
fmuls
sbb
sbb
lret
inc
nop
dec
std
pop
ret
loopne
dec
aaa
or
rclb
dec
jno
arpl
jo
mov
cmpsb
add
mov
pop
in
sub
and
movsb
hlt
ja
fildll
or
push
test
jecxz
loop
and
lds
push
push
push
pop
cmc
or
pop
pusha
pop
hlt
sbb
mov
movsl
push
int3
xchg
je
mov
ja
int3
jp
cmpsb
rcll
sub
jle
rorl
adc
in
lds
call
scas
mov
jge
adc
sub
mov
mov
pop
adc
andl
sbbl
xchg
inc
sbb
aaa
insb
mov
ds
pop
inc
push
clc
test
rcr
and
fs
dec
addr16
sbb
xchg
jns
data16
call
rcll
out
mov
pop
pop
leave
inc
inc
sarb
lcall
add
in
mov
fs
arpl
add
icebp
jmp
mov
sub
jo
dec
jg
mov
and
dec
xor
cwtl
push
pop
orl
sub
jns
cmc
or
mov
dec
mov
add
inc
jb
lea
cmp
lods
lds
mov
pop
fisubl
mov
pusha
dec
decl
imul
xchg
jb
inc
sarl
shrb
call
mov
and
shr
cmc
orl
rcl
mov
xchg
rorl
xor
movsb
stc
imul
jns
or
sbb
push
movsl
xchg
leave
lret
ret
jl
jmp
hlt
rcrb
lea
push
xor
aad
adc
add
mov
xlat
dec
loop
lods
adc
loopne
cmp
mov
cs
jb
pop
fneni(8087
push
repnz
push
pop
and
jno
repnz
fcmovb
sub
xchg
icebp
lcall
add
jecxz
outsl
cmpsb
mov
cmp
mov
pop
int3
xchg
pushf
imul
aad
sbb
xchg
loop
mov
loop
mov
addr16
jge
cmp
shr
dec
test
mov
enter
mov
sbb
fiaddl
divb
sub
dec
int3
int3
fcmove
lcall
jmp
subb
cwtl
sub
xchg
xor
inc
dec
mov
icebp
lahf
nop
add
sub
aam
sub
jne
inc
mov
xchg
into
movsl
pop
dec
pop
push
mov
lods
add
mov
mov
int
sub
movsl
add
outsl
dec
mov
push
mov
xchg
xor
mov
jne
adc
sbb
xchg
sub
scas
pushf
sub
sub
call
daa
mov
imul
sub
cmp
mov
pop
int3
scas
jbe
fistps
icebp
dec
add
mov
lret
sub
xor
xchg
outsl
outsl
xor
jl
pop
jg
stos
cmpsb
gs
mov
xor
add
sarb
cwtl
gs
repz
aad
scas
mov
repz
ror
mov
mov
test
insl
dec
jno
mov
lods
jmp
in
and
pop
ss
cli
scas
dec
inc
loope
imul
lods
movsb
lds
sub
ss
ljmp
pushl
sahf
lahf
int3
cwtl
neg
iret
and
push
imul
cmp
aas
fbstp
mov
mov
into
mov
sub
jbe
mov
inc
push
insb
out
lods
xor
mov
shrb
jl
sarl
xchg
jle
adc
cmp
inc
bound
dec
inc
dec
push
jb
pop
hlt
sahf
add
add
inc
add
pop
outsl
neg
adcl
fcomps
push
cltd
enter
add
xor
push
or
add
sbb
icebp
jecxz
sti
iret
pop
pop
mov
test
mov
outsb
dec
mov
inc
xor
dec
xchg
sub
popl
sbb
xor
jno
xchg
cli
add
dec
push
inc
test
cmp
mov
ds
insl
inc
add
inc
arpl
clc
mov
cs
mov
dec
notb
mov
or
movsb
mov
in
sbbl
jbe
dec
or
cmp
icebp
pop
xlat
jp
pop
fcmovnb
sbb
mov
mov
inc
add
dec
jecxz
lcall
sti
iret
dec
push
data16
sbb
push
faddp
rorb
ret
cmp
cmpsb
gs
mov
mov
cmp
and
mov
dec
or
std
leave
gs
loopne
xchg
insl
inc
mov
in
inc
push
movsb
push
xchg
mov
mov
rcl
sub
and
adc
add
decl
xor
pop
xchg
data16
cmp
jae
ljmp
into
pop
xchg
add
sbb
xchg
pmulhuw
gs
outsb
jae
jmp
or
mov
jmp
mov
xchg
ss
or
dec
xchg
aam
inc
in
ja
pop
push
push
mov
cmp
iret
push
mov
or
pop
adc
mov
fwait
mov
fwait
lret
hlt
jo
test
sub
and
jle
or
xchg
xchg
hlt
pop
into
cltd
pop
fsts
push
mov
jmp
xchg
pop
mov
cs
add
testl
mov
int3
sbb
jb
imul
jae
add
loop
cmp
lds
int3
in
mov
or
xchg
mov
xchg
negb
lods
cmp
adc
iret
or
or
andb
lret
xchg
lret
mov
sub
or
mov
cmp
add
adc
jbe
in
or
or
aad
or
xor
imul
ret
in
roll
pop
xchg
xor
cmp
das
cltd
outsb
ljmp
ror
stc
incl
in
mov
dec
add
add
inc
das
cmpsb
mov
test
mov
pop
gs
pushf
sub
push
leave
sbb
xchg
adcl
iret
leave
sub
scas
mov
inc
xor
mov
or
test
or
scas
jecxz
and
rcr
adc
outsl
syscall
cmp
ss
add
sub
pop
inc
imul
or
dec
fwait
mov
mov
pop
mov
sub
push
mov
je
and
shlb
movsb
sahf
popf
and
movsb
mov
mov
push
pop
inc
stos
sbb
aad
movsb
sub
leave
mov
pop
es
cltd
jl
icebp
nop
push
cmpl
out
dec
test
addr16
push
pop
addr16
cmpsb
xor
or
or
ret
pop
and
dec
fsts
ret
push
cs
mov
leave
stos
into
popf
sub
and
cmp
sub
stos
mov
scas
and
jns
push
fdivs
out
cld
mov
xchg
mov
dec
pop
imul
jno
orb
cmpsb
popf
daa
push
and
sbbl
repz
sub
pop
fnstsw
int
xor
jbe
imul
aad
mov
mov
jmp
dec
xor
scas
pop
fcmovnu
cwtl
std
out
mov
pusha
xchg
or
mov
jmp
add
mov
adc
push
sbb
jo
addl
jp
clc
inc
mov
daa
xchg
xor
add
jge
dec
add
jg
sub
mov
jnp
adc
pop
push
popa
stos
and
mov
jcxz
mov
xor
jmp
xchg
lock
loope
insl
in
les
pop
sub
ret
pop
and
mov
jl
jae
repz
dec
nop
sub
rclb
jmp
inc
add
ret
adc
ficompl
push
mov
sub
adc
add
push
les
xchg
inc
jmp
test
inc
pushl
enter
scas
xchg
xlat
or
sub
cmp
mov
daa
fiadds
and
and
rorb
adc
sub
movl
int3
sub
faddl
pop
ja
loop
pop
adc
stc
jno
inc
sbb
es
dec
xorb
cmpb
insb
lcall
cmp
mov
adc
jmp
sarl
push
pusha
push
popa
xlat
mov
scas
add
push
mov
pop
xor
xchg
mov
sbb
cli
icebp
sub
in
jns
sub
add
mov
jno
popa
lea
pop
lods
or
out
ret
jecxz
cs
repz
sahf
or
loope
rorl
sti
jg
fwait
mov
pop
fbstp
mov
shlb
jno
in
add
loope
xchg
nop
fnstenv
inc
movb
mov
es
ds
lods
sub
sub
jmp
push
adcb
sub
or
sbb
lods
cmp
mov
cwtl
xor
dec
or
ret
enter
jbe
jb
lret
lret
push
ret
pop
orb
xchg
mov
dec
lea
or
jb
mov
xchg
push
cltd
outsl
jge
lods
adc
push
es
jp
out
clc
mov
rcl
xchg
push
pop
add
push
mov
test
jecxz
fldl
mov
adc
aad
push
repnz
sbb
cld
jbe
addr16
mov
insb
pushw
jmp
lret
jns
test
imul
sbb
push
call
insl
sbb
lds
dec
cmp
fsubrl
leave
pusha
lods
sbb
push
call
or
mov
loope
push
inc
adc
jg
lods
xor
mov
test
add
push
inc
xor
push
hlt
add
out
pop
sbb
dec
push
insb
mov
aad
fwait
cmp
jns
and
mov
mov
shrd
push
mov
roll
mov
ja
shrb
or
sbb
pop
imul
sti
fimull
loopne
in
mov
push
sbbl
in
addl
xchg
pop
inc
pushf
ljmp
mov
cmp
shll
lret
addr16
flds
jmp
hlt
mull
sub
cmpsl
fistps
pop
pop
xor
mov
push
adc
fcompl
inc
pop
xor
push
stos
imul
fisttpl
xchg
push
fldenv
es
movsl
std
and
movsb
add
in
xor
or
pop
jbe
dec
fs
out
or
repz
cli
loop
inc
pop
mov
ja
je
mov
ljmp
lahf
test
sbb
sub
stc
and
jne
into
pop
jg
repnz
dec
sti
mov
outsl
xchg
pop
fisttpl
mov
cmp
mov
inc
dec
scas
push
cmp
jb
inc
xor
add
loopne
icebp
les
push
pop
and
hlt
xor
dec
dec
xchg
jae
xor
push
inc
mov
adc
aad
mov
mov
js
mov
scas
mov
dec
enter
sub
jo
inc
jno
mov
xchg
mov
mov
pop
mov
xlat
add
inc
insl
mov
insb
jle
arpl
out
imul
lret
dec
int
ret
push
xor
lcall
or
cmp
je
mov
mov
aad
daa
mov
sbb
bound
mov
movsb
cmc
jbe
out
xor
test
mov
pop
add
loop
outsl
dec
test
jns
mov
jp
andb
mov
scas
inc
das
push
cmp
adc
push
fists
mov
or
popf
sbb
pop
inc
lahf
movsb
xchg
mov
add
adc
aam
sahf
jg
fisttpll
push
or
mov
hlt
fdivrl
xor
add
pop
dec
fdivp
xor
dec
mov
rcll
faddl
jnp
pop
cld
pop
dec
clc
add
mov
arpl
idivl
sub
inc
nop
ret
mov
inc
pop
lock
cmpsl
pop
lahf
dec
test
jmp
mov
ds
sbb
ja
leave
xchg
leave
sbb
adc
mov
xchg
jg
outsl
or
iret
loope
stc
jo
jae
xor
and
push
or
mov
outsl
jb
mov
js
pop
or
pusha
dec
xchg
jmp
xlat
xchg
mov
mov
inc
fldt
insb
divl
cmc
fldt
xchg
das
xor
adc
jl
lret
sbb
pop
push
sbb
add
or
lods
add
mov
cmp
mov
in
cli
mov
cs
add
xor
lods
int
cmp
outsb
mov
and
dec
fstps
jle
xchg
pop
lcall
out
shrb
push
andl
ds
pop
push
inc
jecxz
inc
push
xlat
pop
jnp
push
push
andb
stos
inc
fwait
jg
in
add
mov
scas
and
out
jae
mov
pop
xor
cmp
mov
std
cmp
sti
rolb
dec
jg
out
das
fadds
jle
jae
fstl
or
test
or
dec
mov
cmpsl
dec
add
mov
adc
aam
pop
addl
mov
adc
rcrl
push
enter
out
pop
dec
cld
and
sub
cmc
stc
in
lret
mov
inc
jge
sarb
cmpsl
xchg
repz
pop
enter
inc
jl
lods
aad
jg
icebp
mov
dec
add
lahf
loopne
xchg
cmc
cltd
fsubrl
inc
mov
jmp
rolb
ror
and
fnstsw
ja
in
ljmp
add
and
pop
push
je
enter
and
in
mov
rorb
enter
roll
xor
mov
jle
push
mov
loope
sub
push
dec
ds
mov
sub
fdivr
and
inc
jne
imul
push
pop
and
aaa
sti
outsb
mov
lahf
jle
in
push
sbb
adc
std
or
or
cmc
pop
fildll
cwtl
inc
dec
jmp
movsl
xlat
vcvtsd2ss
jle
call
mov
sbbb
hlt
mov
mov
syscall
test
ret
inc
int3
lea
or
fbld
ja
cmpsb
or
lcall
mov
mov
sbb
mov
cmp
sbb
xor
xor
jle
pop
and
mov
mov
ret
jmp
sbb
cmpsb
xchg
cmp
jno
pop
push
sub
shl
xchg
fdivrp
dec
xchg
cld
dec
adc
cmp
mov
xchg
jmp
sub
mov
call
dec
sti
fistpll
push
push
sbb
mov
andl
ljmp
mov
clc
add
mov
call
dec
ret
xchg
inc
jbe
cltd
mov
fbld
inc
ja
test
lods
jge
sub
adc
cmp
mov
inc
and
cwtl
xor
lods
out
cmpsb
shr
fidivl
mov
aas
pop
out
add
push
pushf
cmp
jecxz
inc
cs
int3
aam
push
ret
sbb
push
inc
call
inc
sub
leave
inc
movsl
int
xlat
ret
xrelease
push
clc
loop
jge
push
pusha
jne
push
mov
cmp
lods
movsl
push
in
stos
enter
stos
adc
jge
aaa
or
push
mov
std
dec
mov
and
out
adc
in
mov
mov
pop
repz
outsb
pop
ljmp
fyl2xp1
inc
xchg
jne
add
or
in
and
jmp
push
xchg
fcoml
cwtl
rolb
pusha
jle
jl
popa
mov
cli
shrl
xor
lock
fadds
pop
gs
add
in
adc
cmp
inc
mov
xchg
pop
cld
or
mov
cmp
jns
je
sarb
inc
jbe
stos
pop
mov
rcll
jge
das
sar
and
aas
loope
pop
faddl
loope
mov
mov
rorl
cmp
cmp
adc
loope
inc
jnp
push
das
std
negb
aad
pop
mov
scas
inc
fidivrs
mov
sbb
pop
outsb
cmp
popa
in
add
push
movsl
addl
pushf
mov
jge
mov
xchg
adc
jnp
lret
lret
inc
xchg
push
sub
popa
shlb
mov
cmp
pop
jle
add
pusha
xor
shl
nop
push
sbb
push
mov
ret
cmp
mov
stc
lods
push
cmp
pop
repz
add
cmp
inc
fidivrs
cmp
pusha
xchg
dec
add
sarl
scas
jg
std
popf
into
mov
lret
push
sub
push
stos
je
aas
gs
shlb
pusha
mov
jns
jle
lret
or
jmp
ja
mov
xor
inc
sub
cs
lret
out
daa
mov
lock
mov
lods
mov
call
pop
je
and
aam
inc
cmc
jb
aad
shll
inc
xchg
ret
scas
push
in
clc
rcr
mov
cmp
ret
in
xchg
cwtl
pop
in
xchg
pop
es
push
cli
adc
sbb
imulb
xor
mov
das
push
cmp
out
ljmp
dec
push
mov
int3
mov
sub
scas
mov
or
mov
fwait
int3
xlat
mov
in
mov
push
sbb
enter
stc
jp
mov
xchg
iret
add
sub
aad
xchg
daa
insl
push
out
jno
inc
push
in
pushf
sbb
outsl
std
mov
stos
ret
call
or
ds
dec
decb
mov
add
dec
dec
stc
repz
out
popa
mov
mov
jne
xor
inc
clc
shlb
mov
insb
ss
xor
push
lcall
pop
xor
sub
sbb
in
lods
jne
adc
stos
das
std
mov
or
enter
out
cmp
xlat
add
pusha
and
xor
gs
loope
inc
add
and
in
jg
fstp
add
aaa
es
out
mov
and
inc
imull
push
add
outsl
and
jge
daa
popf
ljmp
pop
leave
jle
add
outsl
cmp
sub
mov
mov
push
iret
lea
and
sub
inc
pop
push
adc
enter
insb
jg
cld
dec
mov
ds
sahf
std
imul
adc
lods
sbb
arpl
shlb
inc
mov
es
xchg
popf
outsb
ja
add
dec
iret
jnp
out
lods
push
hlt
in
pop
sub
sub
jo
ss
jns
out
mov
sbb
aaa
ss
js
push
out
in
das
cwtd
out
xlat
xchg
jmp
movsb
jmp
sub
or
xorl
lods
pop
adc
pop
inc
mov
or
add
popa
iret
dec
sbb
jp
ficoml
dec
cld
adc
mov
add
addr16
xor
out
dec
sub
sub
inc
rcll
pop
jp
ret
add
into
mov
cmp
mov
inc
sub
adc
ja
mov
pop
iret
sbb
addr16
mov
clc
jns
ret
pop
sub
mov
cmp
clc
dec
and
loope
jle
dec
loop
lcall
mov
aad
mov
and
push
xor
lret
cmpl
dec
fiaddl
jb
push
jnp
insl
ljmp
insl
lds
mov
xor
vpshlb
das
xor
mov
or
mov
and
js
xchg
iret
add
sbb
pop
adc
xor
int3
mov
xor
mov
xor
nop
cltd
jbe
adc
enter
pop
enter
sbb
sar
pop
sarb
lret
sub
cltd
jp
sbb
int3
lock
push
inc
es
pop
cwtl
add
popa
jp
xor
jb
and
cmp
ud0
jnp
loopne
sahf
sbb
mov
mov
push
or
xor
jle
xor
hlt
xchg
dec
les
mov
pop
lret
loope
sbb
or
sub
call
inc
subb
jbe
imul
mov
adc
sbb
sbb
dec
cld
lea
inc
push
mov
xchg
xor
cmp
les
push
jle
inc
insb
dec
leave
jl
inc
xchg
popa
addb
inc
jns
sahf
in
xor
mov
popf
mov
outsl
jns
adc
xchg
and
or
cld
cmpsb
pandn
jb
mov
pop
scas
insb
mov
les
mov
int3
sarl
mov
hlt
in
scas
imull
shlb
push
add
dec
inc
sbb
lret
dec
es
stos
sub
ret
jge
dec
icebp
pop
mov
test
and
divb
sbb
push
mov
jge
std
jo
pop
fldl
mov
jl
pop
pop
cwtl
and
jne
xor
out
divl
addr16
mov
insb
jecxz
mov
lcall
icebp
pop
mov
cld
mov
dec
push
inc
mov
jmp
pop
movsb
test
js,pt
push
fstpl
iret
push
cmp
icebp
mov
fcmovne
les
aas
jne
and
loopne
or
mov
jmp
adc
call
mov
cli
iret
fxch
or
fmuls
push
xor
dec
ds
cld
adc
out
inc
inc
jno
mov
and
pushf
cmp
loopne
insb
lock
ret
es
dec
faddl
cmp
stc
pop
push
insb
inc
loop
popf
push
iret
leave
stos
or
xor
test
lahf
jle
add
test
dec
inc
inc
lods
adc
mov
je
outsl
mov
jmp
std
int3
xchg
xlat
sub
les
out
and
adc
pop
inc
mov
clc
lcall
xchg
les
add
out
test
xchg
or
dec
insb
fildl
sbb
orl
xlat
pop
mov
mov
out
push
out
mov
mov
xchg
cmp
out
or
stc
push
mov
fmulp
xchg
cmp
xchg
mov
jno
mov
push
mov
mov
fxch
scas
xor
pushf
rcrb
repnz
jb
push
sub
xchg
cmp
int
out
sbb
sub
movsl
pop
sub
fnstenv
adc
out
cmc
fdivp
jle
std
inc
adc
es
cmc
clc
ds
divb
jp
mov
cmp
sbb
sub
inc
jp
sti
xor
mov
scas
lret
pop
subl
add
jle
jne
mov
icebp
mov
iret
xor
notb
lahf
mov
cld
jb
sbb
fldt
iret
jbe
mov
lret
cmc
fiaddl
push
push
out
or
dec
jp
push
push
or
inc
pop
or
adc
das
ret
xchg
jae
rcrb
pop
in
ss
das
sub
or
push
mov
lcall
mov
dec
mov
cld
std
mov
and
data16
lahf
adc
sbb
dec
out
std
insl
sti
arpl
sub
icebp
mov
inc
xchg
mov
shlb
xor
dec
cmpsb
xor
repnz
test
outsb
lea
xor
lret
fwait
test
jl
and
cltd
xor
adc
lahf
fwait
adc
insb
or
ret
call
sbb
out
addl
incb
mov
sahf
xchg
sbb
sub
fisubrl
mov
in
sbb
jp
cmp
pop
test
push
sbb
adc
add
movsl
sub
xlat
testl
dec
ds
test
cs
outsl
push
mov
jbe
test
xchg
das
sub
aad
aam
lds
push
es
or
dec
fdivrp
pop
out
jae
fidivrl
sbbl
adc
mov
fmuls
js
pop
push
push
mov
push
mov
pop
push
sub
or
mov
inc
pop
add
mov
test
stos
mov
or
push
sbb
xchg
mov
test
lret
sub
fiadds
stc
cli
cli
insb
mov
incl
insb
popw
xchg
popf
clc
jg
xchg
insl
movsb
add
pushf
lahf
xchg
repz
imulb
pop
lods
push
sbb
mov
mov
nop
jg
sub
push
sub
gs
hlt
mov
sti
adc
jne
sbb
ret
lret
inc
inc
aad
gs
adc
bound
sub
xorb
aad
dec
push
xchg
inc
pop
gs
jno
call
pop
push
mov
pop
add
pop
fiadds
into
and
nop
inc
cmp
xchg
inc
cmpsl
mov
adc
leave
xor
int
imul
pop
adc
push
push
mov
pop
insl
pop
xor
xor
pop
rorb
mov
or
lahf
jecxz
imul
mov
imul
and
fisubs
ret
add
mov
mov
fisubs
fsubrs
mov
push
stos
fimuls
xchg
cs
add
dec
ds
sbb
out
or
and
nop
loope
fimuls
iret
lods
mov
out
lods
fucom
mov
and
xor
mov
jmp
lret
mov
scas
scas
ret
ds
mov
es
mov
or
inc
lahf
xor
mov
insb
push
xchg
aas
movsb
out
sbb
cltd
fwait
jnp
lret
pop
daa
jecxz
int
int3
iret
addl
aas
jne
les
rclb
pop
pop
xchg
rolb
sbb
das
xchg
les
inc
lea
push
lcall
iret
cs
imul
cmp
sbb
mov
out
pop
fcmovnb
push
jne
das
subb
and
mov
cld
or
outsb
mov
or
rorl
inc
ljmp
sbb
les
out
out
inc
cmp
pop
add
imul
icebp
sbb
into
and
mov
push
jae
aas
js
test
jb
cs
leave
mov
sbb
push
pop
mul
xlat
xor
xchg
bound
arpl
push
inc
nop
js
movsl
add
jge
bound
out
pop
lods
push
iret
xchg
mov
leave
mov
loopne
lcall
lret
adc
cs
sub
add
clc
imul
push
jmp
hlt
das
into
int
out
mov
movsb
cmpsb
outsb
ret
push
jno
out
insl
test
cmp
out
mov
shr
cmp
call
cmp
xlat
cmp
xlat
or
dec
jns
cmpb
ja
lret
push
mov
and
cmp
sbb
cmpsl
push
adc
adc
aaa
imul
in
add
cli
fwait
add
aas
pop
and
xchg
push
sahf
rorb
sbbl
scas
dec
nop
xchg
jg,pt
push
adc
cwtl
or
pushfw
lds
sahf
mov
xor
jne
repz
mov
jne
in
jb
mov
mov
das
pop
aam
add
in
mov
clc
add
or
movsb
pusha
repnz
inc
cmp
leave
ljmp
and
sbb
int
sub
out
mov
test
movsb
movsl
or
jmp
mov
gs
jb
xlat
arpl
testl
cmp
in
into
inc
xor
ds
orl
pop
insb
lds
mov
jecxz
jns
xchg
pusha
lret
mov
cld
movsb
aad
test
daa
mov
jl
imul
fiadds
cltd
pop
jp
subb
cltd
insl
or
cmp
int
and
in
cltd
jge
push
in
jg
fs
test
or
bound
cmc
dec
scas
movsl
cs
mov
and
loopnew
pop
insl
cmpsb
add
xchg
mov
shll
inc
pushl
ja
fildll
in
jae
inc
or
shrl
mov
xchg
jl
pop
jne
xor
repnz
addr16
int
loopne,pn
ljmp
cld
adc
dec
ficomps
ret
and
sti
test
rorl
scas
mov
xor
xor
js
xor
roll
jl
inc
jp
xor
mov
add
push
lea
push
dec
lcall
fdivrs
test
fdivs
adc
add
movsb
push
cmp
adc
mov
pop
mov
stc
cmp
mov
outsl
sbb
xorl
mov
popa
jp
or
sbb
or
push
dec
into
test
mov
fwait
adc
jecxz
shll
nop
gs
mov
inc
add
test
pop
sub
inc
mov
fcmovnb
pop
ret
pusha
push
cmp
and
into
rcrb
je
sbb
sbb
mov
adc
and
bound
std
fdivrs
adc
push
into
hlt
popa
mov
movd
iret
leave
mov
add
adc
cld
push
int3
mov
mov
sub
fsts
mov
test
inc
xchg
inc
daa
cmp
xor
xchg
divb
xor
fdivrs
add
int3
dec
dec
pop
add
mov
in
push
icebp
mov
mov
sbb
cmp
mov
pop
in
jns
pusha
ret
shll
push
cmp
lret
lahf
lret
inc
cmp
shll
movsb
and
push
mov
xor
aad
outsb
dec
sbb
enter
add
call
push
aad
stos
ret
jecxz
mov
popf
mov
aaa
dec
insb
mov
xor
mov
sub
dec
popa
cli
mov
stos
daa
xchg
ja
or
mov
rorl
fsubrl
clc
iret
pop
aaa
iret
mov
push
sbb
imul
test
in
pop
mov
jne
xchg
cmp
andl
mov
dec
repz
ds
iret
cmpsb
dec
adc
mov
ds
mov
jno
jne
push
mov
int3
lret
add
jns
adc
icebp
xor
into
cltd
les
iret
mov
popf
fcmovbe
mov
push
sub
roll
cmc
pushf
outsb
jo
repz
mov
loope
cmp
imul
stos
bound
jecxz
push
mov
clc
add
popf
jg
pop
adc
divl
jns
xor
aas
sub
std
inc
xor
mov
pop
arpl
in
xor
pusha
cmp
mov
jbe
xchg
add
das
cmp
clc
jl
clc
push
shrl
lock
out
jg
dec
mov
mov
jb
add
mov
stos
outsl
push
aaa
test
cwtl
lret
scas
mov
and
je
iret
outsb
pcmpgtb
pushl
fdivrs
xchg
out
int3
inc
mov
fsts
mov
inc
adc
add
dec
pop
daa
popa
leave
js
lods
mov
call
out
jmp
mov
popf
das
jp
mov
sbb
jnp
rcr
mov
lahf
test
xchg
push
pop
dec
xor
add
and
xchg
sbb
ja
cmp
sahf
cltd
fcoms
test
and
mov
inc
imul
mov
push
sub
jle
cmp
add
sub
mov
xchg
nop
or
test
popf
std
aad
mov
adc
push
out
xor
cmp
mov
rcll
das
iret
orb
xor
pop
cmpsb
jl
and
int3
adc
jecxz
xchg
adc
add
mov
cltd
xor
xor
mov
jbe
addr16
sahf
lods
and
pop
jno
pop
mov
adc
inc
std
inc
insb
jb
mov
out
sub
push
jle
sbb
das
std
fists
xchg
adc
cmpsl
in
cmpsb
xchg
enter
insb
insl
xor
xchg
mov
mov
inc
rcrl
fisttpll
and
xor
push
test
adc
scas
lret
lds
cmp
fnstcw
xchg
inc
fyl2xp1
mov
test
mov
outsb
pop
pop
roll
daa
sub
icebp
mov
sbb
mov
push
cld
or
sbb
lgs
adc
adc
cmpb
xchg
in
and
sub
mov
sbb
xchg
aas
js
inc
xchg
cmpsb
fdivs
jns
xchg
jle
dec
movsl
iret
or
sahf
scas
mov
and
fistpl
lea
add
fidivs
lcall
sti
cld
into
sub
shll
sahf
adc
mov
insl
sbb
jns
jle
out
inc
ljmp
add
rcrl
aas
roll
xor
aad
jp
dec
mov
testl
add
mov
push
mov
andb
in
adc
xchg
sti
push
popa
mov
in
lret
mov
fisubs
rclb
cmp
mov
aad
out
push
mov
pop
aaa
xchg
shrl
stos
cmp
in
nop
lds
je
pop
add
jp
push
cwtl
std
sbb
sbb
pop
push
mov
dec
xor
cmp
out
lret
scas
rol
push
dec
cmp
scas
pop
xchg
sahf
sbb
or
lahf
popa
out
cmpsb
add
sti
imul
push
pushf
xchg
stos
lret
adc
jge
push
jno
pushf
xchg
faddl
cmp
mov
cmp
scas
sub
pop
mov
mov
outsl
xchg
jge
adc
dec
fdivl
mov
daa
ret
push
cmp
xor
mov
jge
fsubrp
stos
mov
cmpsb
and
in
enter
cmp
lret
fs
test
push
lds
mulb
fistl
fists
inc
lret
shll
dec
xchg
test
jecxz
lea
pop
and
scas
imul
push
cmp
bound
hlt
nop
dec
adc
rolb
xorl
lea
dec
pop
in
std
sub
out
test
pop
jge
js
or
mov
and
dec
fldl
add
push
leave
ds
lcallw
ret
or
out
pop
rorl
sti
arpl
sbb
xchg
sbb
sub
inc
test
in
ljmp
shrb
and
data16
pop
or
push
shl
out
jle
add
incl
pop
push
fwait
stc
jmp
pcmpeqb
jb
out
fs
push
cld
pop
dec
outsl
adc
and
fsubl
in
and
sbb
mov
sbb
dec
cmp
out
jb
add
mov
fmull
fadds
outsb
push
dec
in
mov
mov
add
dec
arpl
out
stos
and
loop
push
popa
adc
jbe
cmp
pop
and
add
lret
in
cmp
or
jmp
dec
out
sbb
push
jmp
mov
es
test
mov
and
xchg
outsl
sub
imul
es
loopne
push
push
push
push
add
outsl
ret
cmpsb
xchg
or
sti
xlat
dec
sub
pop
movsl
leave
xchg
xor
cmp
inc
les
stc
test
pop
hlt
aas
ljmp
lea
out
inc
fs
xlat
jno
adc
inc
xchg
out
xchg
imul
outsb
pop
test
sbb
ja
add
or
or
lcall
xchg
jg
push
xlat
xchg
mov
mov
dec
cltd
push
aad
stos
dec
out
xor
fstp
lahf
fbstp
hlt
icebp
pop
push
test
inc
jne
sbb
jl
int3
xor
mov
mov
xchg
out
orb
sbb
fwait
mov
enter
mov
int3
cmpsl
sti
xor
add
mov
jg
bnd
insb
push
sub
sub
mov
mov
bound
pop
in
fcoml
jg
dec
ja
push
jmp
dec
and
mov
hlt
mov
mov
mov
shufps
jnp
stos
loope
dec
aas
sub
out
dec
sti
test
loopne
or
push
pop
daa
mov
aas
jne
pop
out
jnp
jge
neg
sub
and
fimull
idivb
adc
add
stos
int3
icebp
sub
pop
cs
inc
outsb
cli
test
cmp
stos
mov
add
ficoml
push
adc
mov
out
fsts
xor
fldenv
dec
test
pop
je
cmp
push
sbb
xor
and
sbb
mov
cmpb
mov
adc
mov
push
mov
xor
ficoms
cmp
sub
fucomip
mov
outsl
cmp
shrl
sbb
and
out
pop
call
dec
ficoml
out
ds
dec
fidivrs
test
test
sti
sahf
or
sar
jno
or
cmp
ja
xchg
lahf
xor
dec
in
lock
adc
jp
fistpll
dec
sbb
addr16
pop
cmpsl
ds
daa
and
sub
test
fnsave
in
or
ljmp
push
lret
test
inc
jb
and
shrb
mov
push
jg
xchg
gs
inc
repnz
aaa
fidivl
sub
xor
outsb
sub
dec
test
jl
jns
in
pushf
lahf
test
ljmp
push
int
jmp
testl
jnp
hlt
mov
xchg
pushf
mov
cmp
mov
add
push
ror
pop
inc
cmpsl
mov
xor
xchg
pop
std
sahf
inc
paddb
stc
sbb
xadd
inc
or
repnz
cli
mov
cld
xchg
and
mov
xchg
mov
arpl
pushl
cmp
fisubs
lock
movsb
adc
ja
push
movsl
in
fisubl
push
in
sarb
and
add
popf
dec
push
mov
xchg
aam
mov
sbb
ja
mov
subl
inc
repz
outsl
adc
mov
or
sbb
mov
cmp
or
scas
or
sbbb
push
push
jns
fdivrs
push
mov
ret
lretw
dec
inc
mov
jp
xor
les
or
mov
lods
mov
adc
fisttps
adc
lods
pop
fwait
imulb
mov
sub
and
xor
nop
ss
lcall
mov
loope
xor
mov
inc
lahf
popf
sub
mov
int
sbb
xchg
fnstcw
call
pop
jmp
add
lds
push
mov
xlat
sub
subl
das
jle
divb
pop
shrb
mov
and
push
inc
push
cmp
push
cli
arpl
push
inc
out
push
jl
xchg
xchg
sar
mov
or
xchg
roll
dec
je
cmp
or
test
scas
jno
sub
adc
cmp
loopne
fnstenv
lret
add
sbb
hlt
dec
ja
or
dec
push
pushf
push
mov
add
iret
imul
aam
xchg
sahf
lret
add
adc
js
mov
mov
jmp
and
xchg
stos
cmp
lods
xor
ret
incb
push
lds
not
cmp
in
jb
jg
das
mov
dec
rolb
jo
xchg
jmp
add
mov
inc
stos
sbbb
jbe
sub
pushf
cli
jge
add
cmpsl
jae
jmp
js
loopne
sbb
pop
cmpsb
iret
std
hlt
sete
dec
or
mov
xlat
in
repnz
cmp
je
sbb
ret
das
fimull
lret
outsb
or
repz
iret
orb
inc
divb
pop
push
outsb
idivl
jp
shlb
sub
arpl
push
dec
pop
lcall
jge
push
sub
fwait
jmp
push
out
stos
cmc
inc
fcomps
test
pop
jecxz
jne
test
xor
lock
fsub
ror
stos
xor
xchg
repz
out
and
cmpsl
xorb
jmp
inc
insb
icebp
xchg
cmpsl
lods
cltd
mov
andb
fimuls
jp
xor
loopne
dec
or
cmpsb
fidivrl
push
adc
bound
sub
vandnps
repz
jge
mov
mov
mov
rcr
or
xchg
clc
bound
and
adc
fdivl
dec
and
out
movl
or
xorl
cmp
test
subb
xchg
mov
mov
push
push
cmc
pop
jne
pushf
push
push
dec
and
cmp
xchg
jns
jg
inc
flds
outsb
ss
jno
sti
mov
adc
sbb
xchg
or
xchg
push
nop
lods
sbb
sub
in
arpl
inc
dec
mov
stos
lahf
js
push
mov
and
sbb
scas
or
dec
dec
cmp
adc
mov
xorl
add
and
aam
add
or
mov
pop
cmpsl
or
cmp
sbb
xchg
outsl
and
lods
sbb
rcrl
and
cmp
and
icebp
popa
or
mov
jo
sub
pusha
mov
mov
push
cmc
mov
pop
add
mov
lea
sbb
movsl
das
pop
dec
hlt
mov
mov
push
mov
xlat
xchg
lock
mov
add
iret
adc
jg
mov
pusha
and
lds
call
push
mov
jge
les
scas
jmp
sub
imul
push
enter
mov
hlt
cmp
fwait
and
aaa
cs
dec
add
jne
into
sbb
fisttpll
sbb
pop
fnstsw
test
enter
pop
shlb
out
xchg
inc
ss
mov
mov
in
ss
subl
adc
pop
rorb
cs
mov
iret
lods
mov
cltd
xchg
push
lahf
and
mov
sti
clc
pop
pop
test
shll
mov
lods
sbb
out
push
pop
insb
pop
xlat
adc
inc
jle
fs
mov
fldl
pushf
pop
inc
test
xor
pop
stc
xor
aam
sahf
rcll
fwait
sub
ret
adc
pop
repz
test
aad
jne
pop
adc
xor
mov
popa
cmpsb
mov
mov
inc
lahf
out
pop
nop
mov
inc
out
adc
imul
clc
push
js
add
cwtl
stc
jmp
dec
jge
arpl
mov
test
test
fistl
sub
sbb
js
cli
sbb
and
jecxz
push
jne
inc
xchg
das
mov
out
sub
inc
or
cmpl
shll
movsl
inc
out
cmpsl
aaa
adc
scas
cs
push
aad
inc
into
mov
lods
pusha
ljmp
lds
xchg
or
std
cmp
add
es
mov
sahf
push
sub
and
enter
mov
in
fsts
push
les
mov
test
mov
ljmp
jg
xchg
es
mov
mov
ret
int3
pop
inc
xorl
aad
push
xorb
shr
mov
inc
lods
loopne
add
test
leave
loopne
mov
sbb
sbb
jno
mov
insl
aam
je
stc
fucomp
sbb
popf
mov
cmp
mov
xor
adc
ds
aam
subb
mov
cmpsb
inc
cmpsb
cmc
cwtl
cmp
into
xor
and
xchg
decl
pop
mov
add
inc
cmp
dec
mov
and
mov
hlt
out
mov
sbb
jp
cmc
hlt
lret
lret
imul
aas
hlt
ja
pmullw
xchg
pop
xchg
dec
js
or
mov
xchg
je
pop
incw
xor
mov
cmc
cli
inc
hlt
xchg
add
cmp
hlt
jecxz
sarl
pushf
or
out
xor
inc
fbld
js
jbe
inc
sbb
ret
outsb
adc
sub
sbb
mov
mov
fidivrs
cmp
pop
jnp
mov
subl
pop
das
and
stos
mov
fstl
daa
test
clc
mov
jno
out
addr16
cmp
dec
cmp
cmp
sbb
test
scas
hlt
je
cmp
jmp
or
mov
and
enter
pushf
and
pop
inc
xor
xor
insl
mov
or
rorl
lods
or
mov
dec
les
sbb
lcall
fs
sub
adc
pop
mov
adc
sahf
jb
in
fsubp
or
ja
pop
mov
sub
sbb
xchg
imul
adc
cmpsl
mov
shll
sbb
dec
cmp
xor
jae
push
addl
sbb
xor
jnp
mov
movsb
sbb
or
pop
mov
cli
fistpl
mov
lret
orl
lds
pop
and
nop
sbb
mov
push
jmp
lea
int
enter
movsb
jbe
lret
js
lods
pop
push
mov
pop
in
test
test
inc
add
sti
ret
mov
xchg
push
cmpsb
push
mov
sub
scas
push
cmp
mov
fsubp
fdivr
sahf
outsb
or
pop
roll
aas
bound
icebp
xchg
jle
orb
lea
cmp
jmp
adc
sub
adc
frstor
and
roll
mov
push
dec
fwait
mov
xchg
sbb
imul
cmpsl
scas
dec
inc
mov
cmp
popw
mov
mov
cmpsl
pop
out
insb
mov
lcall
xor
pop
pusha
jge
imul
inc
aas
fs
jg
test
adc
test
pop
es
lcall
decl
idiv
pop
fdiv
xchg
hlt
pop
scas
adc
jae
int
rclb
dec
inc
aaa
les
adc
mov
imul
xor
or
loope
ret
push
adc
or
movq
sub
sbb
jno
ja
cwtl
aad
lods
jmp
std
mov
xlat
xchg
mov
or
mov
xchg
xor
jecxz
in
jae
xchg
lcall
jnp
cs
aad
test
pushf
fbstp
dec
jecxz
sbb
xchg
mov
jns
push
call
scas
mov
fucomip
lea
adc
std
cmp
adc
mov
inc
xor
inc
sahf
aam
and
ljmp
jmp
scas
mov
sub
adc
insl
adc
push
sub
shll
je
icebp
xor
into
iret
adc
stos
cmpsb
imul
xchg
inc
loopne
mov
jge
mov
dec
push
cmp
test
arpl
imul
sahf
jge
push
fdivrp
xlat
lods
fdivl
mov
scas
flds
mov
push
leave
xchg
push
imul
into
and
mov
ja
mov
mov
pushf
pop
sbb
nop
pop
mov
jno
xchg
or
cmp
das
jo
negb
divl
jle
sar
js
or
sbb
out
xor
mov
std
cmp
sbb
add
in
mov
lea
pop
push
insl
int3
pop
sub
pop
mov
or
pop
cmp
cld
push
push
jp
pushf
cmp
dec
jbe
lahf
movl
in
rorb
mov
jg
shll
pop
xchg
pop
nop
mov
fdivs
cmpl
push
out
in
xor
out
test
fisttpll
stos
iret
js
xchg
jle
jae
inc
mov
push
shl
jle
setne
dec
repz
cmpsb
sar
pushf
lcall
std
insb
nop
pop
or
ror
scas
jle
mov
test
lcall
mov
imul
pop
sub
sbb
cmpsb
dec
jae
pop
shll
jne
lds
cld
mov
or
in
mov
add
jo
jbe
push
bound
push
jmp
mov
lods
and
jnp
lods
xchg
pop
nop
loop
cmp
ror
out
cmp
daa
cmp
pop
mov
push
or
into
jl
les
jnp
mov
mov
and
test
loopne
lahf
lods
insl
clc
add
mov
sarb
sbb
gs
mov
stc
add
dec
add
inc
inc
pop
rolb
popa
pop
mov
jge
mov
divb
aad
add
js
shll
sbb
loopne
mov
cmp
push
loopne
in
xor
das
gs
sub
insb
push
imul
or
cmp
adc
jmp
int
int
js
pusha
outsb
imul
movsb
pushf
mov
insb
pop
addr16
dec
arpl
das
cli
daa
jg
subb
mov
imul
mov
in
movb
fs
leave
out
push
jbe
repz
and
and
mov
int
filds
cmc
mov
mov
mov
and
notb
loopne
js
ret
pushf
loope
sahf
cmp
loope
ds
lds
bound
in
imul
aaa
xchg
sbb
xchg
mov
andb
adc
or
sub
pop
bound
movsl
shl
mov
out
cmp
xor
cmc
or
rorb
add
and
out
hlt
ret
push
add
pop
xchg
scas
js
jmp
mov
cmp
nop
andb
mov
inc
jge
pop
scas
mov
adc
mov
repnz
jecxz
aaa
jns
scas
dec
sub
or
iret
sbb
dec
sub
gs
mov
mov
xlat
std
mov
out
and
or
mov
dec
adc
pusha
xchg
add
sub
out
cwtl
insl
jmp
mov
cmpsl
movsl
je
test
push
adc
adc
nop
dec
aad
cmpsl
mov
and
mov
rol
fiaddl
or
mov
dec
pop
mov
inc
movsb
or
and
loopne
fcmovne
push
mov
popa
mov
jge
adc
and
sbb
jns,pt
or
outsb
pop
std
imul
pop
lcall
or
enter
ljmp
in
mov
in
sub
das
popa
aaa
in
test
xor
aam
les
sbb
sbb
add
fwait
popa
lods
push
xor
push
pop
inc
jge
lods
mov
sbb
cmc
paddsb
jns
sub
pusha
ljmp
pop
sbb
jb
adc
dec
addr16
popf
faddl
mov
call
xor
pop
in
adc
outsb
repnz
repnz
clc
sbb
jle
ret
xlat
bound
pop
lcall
xchg
ret
test
sub
dec
mov
mov
push
mov
xchg
sbb
mov
cld
add
push
lcall
mov
fs
push
icebp
xor
dec
sub
xchg
movsl
adc
xchg
cmpsb
adc
xchg
test
test
test
adc
xchg
stos
adc
adc
xchg
lods
adc
sub
stos
push
mov
mov
xchg
mov
lret
or
into
or
push
addl
adc
outsb
push
loopne
leave
inc
mov
dec
lret
adc
add
roll
test
cmpl
mov
movsl
mov
mov
and
mov
fistpl
xchg
add
lret
mov
xchg
mov
fiadds
add
add
add
sub
adc
mov
test
mov
add
test
add
adc
lods
and
enter
pop
sbb
mov
inc
inc
push
push
inc
jmp
sub
stos
or
mov
push
adc
fs
jo
mov
pop
leave
add
adc
add
push
add
xchg
push
xor
adc
and
in
aam
pop
sbb
push
add
les
push
jb
out
dec
adc
xor
inc
add
out
jns
icebp
decl
xchg
jp
ret
mov
cli
and
xlat
jmp
and
jbe
ds
xor
add
fdivrl
je
xor
sbb
add
aad
xor
pop
out
aas
mov
int3
cld
jp
dec
cli
xor
cmp
insl
cld
push
adc
or
adc
jle
jl
adcb
mov
jp
or
xorl
lods
mov
pop
mov
sub
stc
sub
outsb
sahf
fistps
std
add
mov
nop
mov
lcall
pop
ljmp
fldl
ret
xchg
pop
aas
test
xor
sbb
arpl
mov
cltd
sbb
mov
pushf
divb
inc
lods
xchg
and
shll
xchg
cmc
xchg
repz
jno
sbb
test
ljmp
repz
xor
bnd
incb
insb
into
mov
loopne
fdivrs
jmp
ret
pop
popf
popf
cmc
cmc
std
sub
dec
test
lods
std
jno
fcompl
pop
sti
jmp
movsb
dec
outsl
add
sbb
hlt
adc
jne
je
inc
repnz
pop
repnz
dec
stc
mov
mov
mov
jl
add
test
mov
mov
mov
dec
cmc
into
icebp
jne
iret
es
mov
aad
add
cld
pop
iret
stos
mov
xchg
orl
jne
in
jl
sbb
clc
pop
iret
ja
jno
sbb
lods
es
test
cs
add
inc
insb
sbb
mov
shr
pop
fdivrs
js
adc
push
aad
pop
pushf
mov
mull
dec
jl
fiaddl
jmp
rcr
shl
adc
and
aaa
mov
and
popf
fadds
movsb
cmpb
and
mov
test
pop
jae
bound
jne
lahf
mov
mov
and
negb
lds
in
add
xchg
in
jne
inc
adc
dec
test
mov
inc
add
jno
inc
mov
int3
gs
ret
out
xor
sub
xor
jle
cmp
mov
sub
mov
test
add
inc
jae
mov
push
cwtl
and
xor
mov
clc
or
ret
sbb
jmp
push
pop
insl
test
fcomp
xor
stos
xchg
pop
cwtl
mov
mov
mov
mov
push
or
cs
mov
call
fisttpl
cmp
fwait
into
clc
pop
pop
dec
daa
ret
bound
cmp
jb
mov
or
pop
mov
repz
test
and
mov
fwait
mov
and
inc
hlt
popa
xor
enter
jecxz
mov
js
xchg
pop
lcall
dec
insl
les
je
adc
mov
sbb
and
adc
rcrl
and
hlt
ljmp
xor
pushf
sarb
lret
pop
sti
mov
pop
mov
lret
xchg
dec
sbb
push
sbb
mov
repnz
repnz
bound
sbb
out
mov
in
rcr
or
cmc
out
pop
adc
cmp
ret
mov
int3
mov
adc
pop
out
add
or
gs
cmp
out
adc
mov
push
fwait
cmp
adc
mov
mov
cwtl
es
ud0
pop
leave
pop
lock
fsubrp
pushf
test
xchg
int3
insl
insl
jle
mov
mov
mov
dec
mov
insb
loope
int
fxch
cld
and
movsb
mov
incb
mov
int
sahf
loop
add
push
shrb
cmp
xchg
loop
mov
or
dec
cmovg
lods
icebp
sti
lahf
and
and
pop
mov
cmp
lds
jns
cld
mov
lret
pop
test
out
in
push
inc
cmp
shrb
adc
sub
mov
add
cmp
xor
inc
cmp
inc
or
pop
repz
mov
sbb
cmpsb
ljmp
movsb
push
mov
sub
stos
inc
movsl
movsb
xor
sahf
mov
sub
repz
push
cmp
add
mov
repnz
sbb
mov
xor
mov
mov
test
movsb
sub
stos
outsb
xchg
ret
bound
jecxz
mov
stos
jnp
adc
fwait
mov
in
mov
das
ja
push
adc
mov
push
ja
outsb
xchg
push
add
std
fmulp
push
or
adc
sbb
es
les
sub
push
mov
mov
aas
mov
mov
imul
pop
loopne
popfw
jl
fstps
cmp
jne
lods
inc
aaa
insb
xchg
mov
sbb
ret
fwait
adc
roll
jmp
jb
cs
sbb
nop
dec
cmp
jae
cmp
sub
mov
std
add
sub
cmc
push
enter
popa
sahf
idiv
mov
mov
clc
mov
clc
clc
aad
sarb
xor
lods
xor
aad
mov
arpl
and
sar
jne
jo
data16
call
shr
mov
dec
inc
jmp
or
mov
in
mov
outsl
sbb
dec
pop
xchg
add
int
or
hlt
and
dec
add
xchg
lcall
push
sbb
push
aad
cmpsb
adc
mov
negb
dec
nop
xchg
cmp
push
pop
fcmovnu
testl
int3
je
lods
rcrb
xor
sbb
jns
mov
xlat
jb
mov
mov
inc
sub
mov
iret
mov
xor
xor
es
jp
pop
mov
pop
jb
out
in
movb
out
dec
mov
xchg
push
inc
mov
mov
lods
mov
pop
imul
mov
pop
push
mov
inc
adc
xchg
leave
out
imul
dec
xchg
pushl
sti
or
mov
and
je
push
add
cmpsb
sbb
ds
sti
dec
dec
or
or
ljmp
adc
pop
movsl
pusha
sub
and
cmpb
xchg
daa
sub
inc
ret
or
push
mov
xor
rcrl
mov
sarb
add
mov
hlt
xor
addb
insb
rorl
sub
in
cmpsb
jnp
inc
lock
push
loopne
inc
or
shll
enter
js
xchg
mov
sbb
mov
lock
mov
sbb
rcll
add
rorl
mov
repz
shl
cmp
jge
xor
adc
jns
lahf
divl
cmp
fidivs
lcall
mov
push
add
pop
test
lret
ljmp
inc
pushf
mov
test
ja
cmpsl
push
sti
std
mov
int
jnp
repz
xchg
leave
lods
mov
sub
adc
inc
mov
repnz
mov
jbe
dec
add
lea
xor
cmpsb
movsl
push
ds
xchg
mov
es
stc
divb
lods
fdiv
pop
lret
and
movsl
leave
sub
inc
jg
dec
jne
enter
scas
jns
test
inc
ror
jg
push
and
ror
fwait
xchg
pop
decb
int3
dec
cld
out
cmp
add
sub
jle
test
adc
xchg
lods
sub
fcoml
cmc
dec
cmp
scas
push
xchg
fbld
outsb
adc
stos
inc
pop
jbe
sarl
jns
mov
pop
add
push
fs
out
dec
or
mov
lea
call
insb
lgs
push
outsb
mov
iret
gs
add
leave
pop
outsb
xor
push
pushl
push
cmp
cmp
std
or
fidivrl
imul
js
mov
shrl
hlt
ljmp
clc
pop
adc
jmp
xchg
je
cmpsb
jl
mov
or
int
cmc
jbe
lods
lret
inc
xorl
fnstcw
push
push
out
mov
xor
or
jno
mov
movsb
cli
lods
sub
insb
arpl
fcoms
out
mov
mov
movsb
xchg
cld
shrb
loop
sub
out
ss
push
les
dec
adc
mov
hlt
fldenv
push
xor
push
mov
loopne
push
push
test
mov
cltd
rcr
insb
xor
dec
iret
mov
enter
sbb
mov
cmp
cmp
cmp
push
jae
push
jo
mov
int3
les
movsl
or
adc
push
out
out
and
mov
stc
xorl
mov
mov
push
dec
mov
out
jo
xor
mov
sbb
in
mov
mov
clc
mov
mov
in
and
aam
lcall
xchg
lods
insl
das
in
stos
jbe
inc
adc
out
shlb
xchg
out
dec
loop
lret
xchg
jae
jne
cmp
push
cmp
negb
mov
fiaddl
lcall
outsl
jne
ret
mov
pop
push
xor
mov
mov
inc
push
push
sbbl
jns
push
int
dec
xchg
inc
dec
scas
xlat
pop
daa
mov
fildll
fimull
mov
and
cmp
es
cli
pop
adc
mov
test
insb
mov
jno
sub
lock
in
inc
jae
int
add
out
insl
std
adc
add
stc
mov
dec
lods
and
xor
rorl
arpl
addr16
inc
mov
mov
lret
and
addl
inc
xchg
jl
dec
add
pop
dec
cld
pushf
les
push
push
into
mov
popf
les
cmp
xorl
fwait
jnp
outsb
push
scas
loope
xlat
mov
hlt
es
fsub
fadds
dec
xor
xchg
jo
mov
bound
or
lods
stc
ret
ret
jle
push
nop
mov
jno
in
adc
push
add
push
out
ficoms
mov
into
sahf
cmp
sbb
push
shl
test
insb
inc
dec
sahf
ljmp
adc
sub
enter
jp
xchg
adc
jg
and
xchg
sub
cld
push
hlt
xor
ret
mov
rcll
cmp
xchg
std
daa
inc
lret
push
inc
cmp
xchg
scas
mov
inc
mov
inc
stos
insl
jns
mov
adc
add
lret
cmp
fidivrl
cmp
dec
rcr
inc
movl
cwtl
push
repz
jne
movsb
out
mov
das
cmp
mov
dec
fisubrs
add
jge
jmp
sbb
push
mov
push
fstl
movhps
andl
test
les
rolb
lea
in
adc
inc
out
sbb
add
shrl
cld
dec
shr
inc
add
rcrb
scas
and
ret
push
lods
dec
dec
dec
lret
or
cmc
and
bound
cmpsl
cld
leave
rcll
lret
adc
dec
aad
dec
int3
nop
xor
loop
loope
jae
stc
mov
mov
repz
mov
xchg
ds
test
push
adc
test
or
fnstcw
les
pushf
mov
mov
aaa
dec
dec
outsb
pop
call
jb
mov
jge
cltd
xchg
lds
cmp
or
mov
iret
sub
les
arpl
ret
test
call
jbe
xchg
sbb
inc
and
push
mov
mov
imul
cli
sbb
lods
push
int3
stc
jmp
dec
push
nop
arpl
mov
pop
cmpsl
leave
push
rcll
aas
mov
xor
adc
adc
sti
dec
jae
sti
frstor
out
sbb
out
lret
sbb
pop
aam
pop
inc
xchg
sbb
movl
insb
sahf
into
xor
lret
shrb
xlat
fincstp
cmpsl
sub
sbb
clc
icebp
adc
and
imul
mov
repz
xor
jae
into
fs
imul
cmp
sub
pop
dec
sub
push
inc
adc
jno
dec
or
jnp
fnstsw
push
dec
outsb
imul
and
dec
adc
lods
inc
mov
pop
rclb
and
sbb
nop
jo
pop
xchg
lds
insb
in
insb
adc
jge
jno
icebp
pop
in
mov
pushw
mov
in
std
shl
bound
sub
mov
ja
jl
sti
outsl
pushf
push
jno
mov
aas
mov
loopne
jno
xor
push
pop
adc
sub
mov
aad
hlt
pusha
fidivs
mov
or
mov
push
popa
push
lock
je
mov
ljmp
push
fsubrl
les
call
aas
mov
push
pop
stos
add
ja
rcll
pusha
aad
jp
insb
jae
inc
mov
cmp
sbb
nop
xchg
fildll
pop
xchg
mov
jmp
push
jno
pushf
dec
jp
int3
jae
enter
jmp
mov
add
pop
mov
add
iret
outsl
pushl
adc
sub
sbb
ja
push
cld
dec
pop
es
sbb
inc
pop
add
pop
adc
add
adc
inc
mov
out
loope
push
rorl
sbb
push
sub
out
sahf
cwtl
lea
inc
ljmp
jns
fdiv
movsl
jb
rcl
aaa
fnsave
xchg
lcall
xor
cmp
jo
movsl
into
loopne
push
cmp
pop
inc
scas
out
sbb
pushf
mov
into
ret
cltd
js
push
dec
test
pop
cmp
sbb
call
mov
mov
bswap
hlt
sbb
out
inc
ss
repz
inc
fstpt
movntq
out
mov
fadds
mov
inc
icebp
sbb
and
outsl
jecxz
xchg
ds
inc
pop
outsb
addr16
sub
fcoml
push
aas
push
adc
sbb
fdivs
jp
fldl
and
dec
shll
ds
int
pushf
dec
js
test
fsts
out
jecxz
push
mov
out
jecxz
sub
push
push
xor
or
add
sbb
xor
xchg
mov
pop
test
inc
aad
imul
lahf
pusha
in
nop
inc
sbb
enter
pop
pop
enter
std
daa
lcall
arpl
rcl
lods
mov
cs
xchg
cmp
add
dec
cld
sbb
int3
popf
inc
data16
je
lsl
mov
leave
out
loope
mov
les
mov
orl
jl
scas
sub
add
sub
daa
sbb
mov
fisubrl
repz
fs
insl
ret
stos
mov
test
mov
sbb
aas
pop
add
bound
divl
jle
in
jno
xorl
sbb
sub
pop
xchg
add
dec
sub
adc
test
test
pop
int3
movsl
cmp
xchg
out
ja
sahf
jne
addr16
and
mov
cld
faddl
repz
sbb
call
movsl
loop
aam
mov
scas
jns
stos
pop
inc
pop
pop
pop
pushf
jl
ret
push
cmp
jmp
push
sub
inc
cmc
and
jl
xor
dec
movsl
xchg
push
loop
sub
xchg
lods
arpl
dec
xchg
stos
push
or
pop
hlt
mov
jg
add
aad
das
dec
mov
sbb
lahf
data16
pushf
loop
mov
lds
cltd
ret
cmp
xchg
add
xchg
hlt
rcll
push
in
add
fcoml
sahf
cld
ja
negl
lods
shlb
lods
std
add
mov
gs
jecxz
mov
out
loopne
add
xchg
mov
rcrb
aad
pop
or
push
dec
mov
aas
es
or
pop
mov
pop
mov
les
loope
pushf
popa
ljmp
sub
xchg
fbld
popl
sub
cld
adc
fldenv
dec
mov
mov
jl
mov
roll
fxch
sbb
movaps
addr16
cmp
sbb
aas
cmp
lret
enter
addl
aas
movsl
adc
jl
test
cmpsb
xchg
imul
dec
mov
dec
adc
jnp
mov
sbb
sub
pop
xchg
push
xchg
fisttpll
icebp
int
push
mov
sub
mov
push
lret
rol
test
add
cmp
int3
out
or
rcl
fistpl
push
je
imul
stc
jbe
test
je
test
movsl
sub
push
fildll
inc
pop
jnp
cmc
aas
jmp
xor
lret
in
iret
scas
int3
in
cmpsl
xor
jb
cs
pop
ret
aad
and
fidivs
scas
inc
repz
adc
dec
pushf
pop
add
push
imul
dec
loop
mov
mov
add
int3
inc
mov
adc
push
jnp
repnz
leave
mov
es
dec
or
cld
adc
lret
out
cmp
scas
xchg
add
xchg
pop
cwtl
pusha
mov
addr16
inc
out
xlat
fistl
hlt
cmc
fsts
cmp
in
and
mov
mov
mov
mov
outsl
nop
in
call
aas
test
cmpsb
out
push
cwtl
in
jl
cwtl
dec
xchg
mov
icebp
mov
and
ror
into
out
jecxz
mov
inc
iret
jb
test
out
test
adc
and
pop
movsl
push
scas
iret
jno
and
lahf
jp
add
push
adc
aas
ds
daa
xor
lcall
jae
repnz
and
arpl
data16
inc
pop
push
mov
cmp
xchg
sbb
insb
or
in
in
pop
sbb
or
pop
in
mov
add
test
xchg
nop
xchg
xchg
pop
cmp
call
pop
fists
std
repnz
sar
jmp
int
out
mov
mul
stc
ret
mov
into
xchg
arpl
mov
gs
cmc
ret
mov
xlat
lret
repz
repz
int3
push
xor
leave
mov
out
mov
rclb
or
jo
subb
mov
add
add
inc
nop
cmovl
sub
add
add
and
clts
fimuls
icebp
and
scas
xorl
or
lods
sbbl
pop
add
sub
inc
add
rorb
or
movsb
add
js
nop
pop
rorb
and
lock
clc
or
jl
cmpb
das
adcb
and
lock
clc
or
jl
cmpb
xchg
test
stos
sub
xor
aas
hlt
inc
icebp
xchg
cwtl
gs
fs
pop
loopne
push
lahf
add
xchg
lcall
mov
mov
std
out
push
jnp
xchg
fiaddl
or
xor
lds
jbe
mov
xor
push
stos
into
cltd
xchg
inc
cwtl
int3
push
cs
lds
pop
lret
push
jno
orl
ret
loope
test
dec
int
in
popa
loop
mov
cwtl
mov
testb
xchg
leave
mov
or
pop
and
and
hlt
push
in
fstpl
or
ja
xor
jle
or
sahf
inc
out
sbb
lret
and
shlb
mov
cmp
lahf
push
sbb
push
push
jmp
cmovs
jmp
jg
stos
cs
adc
push
ret
andb
shrl
push
daa
sahf
push
in
fimuls
gs
mov
and
and
sub
cltd
ljmp
pop
mov
mov
jp
pop
lret
cwtl
in
pop
add
scas
xchg
fs
jp
std
xchg
adc
mov
xchg
jb
sub
sbb
outsl
jg
leave
jecxz
nop
out
pop
decb
cld
cmp
test
fisubrl
pop
bound
push
jmp
adc
test
out
sub
divb
dec
repnz
int3
gs
add
or
and
dec
mov
fs
in
int
into
and
dec
xchg
ret
xchg
ret
add
sbb
cmpl
or
sbb
xor
lods
test
mov
push
gs
mov
push
xor
xchg
push
loop
mov
adc
fcompl
jle
mov
into
mov
repz
push
sti
dec
cmpsl
xchg
outsb
xor
jns
inc
mov
hlt
add
pushf
cltd
xchg
shrb
into
mov
or
loop
insl
jg
hlt
outsl
cmp
scas
dec
and
aaa
mov
xor
mov
stos
int3
mov
daa
popf
dec
mov
sbbb
popf
mov
mov
notl
lret
sbb
mov
jbe
stc
push
mov
test
sarb
jmp
cmp
sub
cwtl
jmp
mov
add
cmpsl
xor
cltd
gs
sbb
popf
mov
out
addr16
enter
int
fs
mov
shlb
js
pop
addl
shl
sahf
out
mov
add
cmpsl
adc
dec
jns
ss
enter
loopne
orb
mov
jbe
icebp
and
sub
push
je
lods
inc
pop
xchg
jo
jae
aaa
pop
or
sub
rolb
xchg
mov
push
stos
mov
sbb
mov
insb
xor
or
cmp
xor
jb
ds
icebp
sub
fists
into
xor
xchg
mov
mov
daa
mov
lret
test
addr16
xor
jg
sahf
xchg
lods
push
enter
push
shlb
push
cmp
std
sbb
ljmp
push
jle
pop
push
mov
insl
add
stos
stos
int
fidivl
push
je
subl
out
sbbl
lea
pop
arpl
mov
inc
and
sbb
les
or
push
jmp
out
idivb
popf
scas
pushf
adc
int3
sbb
test
dec
ljmp
mov
iret
stos
mov
pop
fisttpll
jbe
loope
adc
mov
fdivrl
fsubrs
jbe
loop
xchg
mov
dec
lcall
adc
xor
mov
test
imul
aam
gs
pop
sub
inc
idiv
pop
mov
pop
push
sbb
jno
bound
xchg
mov
ljmp
test
xor
push
dec
mov
repz
lods
push
dec
lret
scas
jmp
iret
data16
push
pop
sub
mov
inc
iret
in
or
stos
xchg
in
stos
sbb
ret
pop
hlt
lret
popa
divl
pop
cmp
cltd
test
add
mov
jns
pop
dec
cli
lods
lods
xor
sub
jo
std
mov
inc
inc
adc
fildll
int3
push
in
xor
push
dec
mov
bound
pcmpeqb
popf
ficoml
xor
movsl
rcr
mov
pop
hlt
into
sbb
xor
rolb
lcall
jo
xchg
call
fisubl
push
mov
rolb
test
hlt
leave
icebp
jl
aam
mov
fisubrl
out
outsb
mov
loope
sbb
out
jl
out
adc
into
test
scas
push
lock
jp
xor
addr16
insb
mov
xchg
push
outsb
movsl
aam
mov
cmp
ficompl
jno
add
jmp
or
hlt
dec
fistpll
fstl
push
cltd
jbe
insb
cmp
jb
lret
aad
xchg
fwait
push
iret
mov
test
daa
cmp
mov
mov
jp
sub
in
mov
push
or
lds
enter
add
leave
sahf
mov
data16
repnz
add
push
inc
mov
aad
mov
jae
data16
jae
lret
icebp
rorl
pusha
daa
pop
in
xor
inc
mov
lea
mov
push
adc
stos
icebp
xor
les
adc
std
push
lds
pop
test
es
xor
mov
fdivrs
call
nop
dec
lea
lods
xchg
mov
add
inc
push
clc
or
adc
jnp
add
inc
sub
dec
sub
test
scas
aas
repnz
insb
int
inc
cmp
test
dec
call
aaa
cmp
divl
add
fbstp
push
mov
push
xor
jae
mov
or
mov
sbb
pusha
mov
in
daa
into
lret
inc
rcrb
fisttpl
jne
xchg
in
test
xor
inc
divl
lods
and
pop
stc
ja
xor
sahf
xorl
cmp
test
lds
pop
inc
inc
sbb
or
mov
push
inc
cmp
cmp
daa
rolb
sub
jecxz
repz
in
mov
mov
inc
adc
fwait
ljmp
fidivrl
xor
jg
lret
and
ss
bound
addr16
repnz
jp
imul
xor
dec
repz
into
sub
add
jb
mov
fwait
imull
pop
jae
jecxz
fwait
shlb
jecxz
push
xchg
cmp
adc
and
pop
cld
cmc
push
movsl
and
bound
iret
adc
pop
ljmp
popa
bnd
scas
lock
mov
cmp
sbb
aaa
pusha
mov
mov
cmpsl
xchg
jl
push
fcomps
mov
mov
call
xor
mov
jl
inc
jp
jge
pop
jle
mov
scas
pop
mov
mov
fmul
jno
mov
mov
in
rclb
lock
popf
mov
and
ds
add
jle
cmp
push
xchg
out
repz
mov
mov
adc
cmp
cmc
dec
clc
sbb
adc
out
mov
sbb
lahf
cmp
call
out
cmpsb
add
pop
pop
fcomi
xor
pop
subb
mov
inc
aaa
lret
push
xchg
mov
pop
addl
and
sub
pop
cmp
iret
arpl
add
push
xlat
jl
les
inc
scas
lock
jg
dec
xor
inc
mov
mov
aam
xchg
sub
sti
mov
dec
mov
mov
gs
and
dec
push
stos
iret
jmp
mov
dec
mov
and
xchg
lea
jl
js
xchg
popa
or
xor
mov
movsl
fsub
lds
jnp
push
out
jbe
outsb
adc
das
jne
fwait
testb
dec
pop
ljmp
divl
mov
jl
cmp
lret
jno
sbb
loope
pop
cmp
sti
dec
lds
fcmove
pop
jb
or
dec
jnp
lods
mov
push
cmc
adc
icebp
or
aad
or
in
test
outsb
subl
aas
cmc
faddp
js
ds
icebp
cmp
pop
push
clc
mov
stos
cmp
dec
pop
mov
ja
mov
and
push
sbb
xor
mov
sti
adc
jle
inc
cmpsb
cmp
mov
sbb
push
fadd
rcr
out
pushaw
jle
popl
dec
mov
in
test
pop
add
scas
mov
pop
xor
push
pop
frstor
call
dec
mov
es
movsl
jmp
stos
add
lock
jge
sub
stos
pop
push
xchg
ficomps
add
adc
add
dec
andb
sar
cmpsb
sub
in
mov
adc
jl
pop
insl
mov
shll
cmp
movsl
push
shlb
aaa
cmp
jecxz
mov
movsb
leave
mov
pop
fldt
adc
movsb
cmp
jg
dec
leave
jne
sub
out
sub
jg
cltd
imul
imul
push
sbb
fcom
xlat
andb
adc
cmpb
jge
dec
fdivr
cwtl
leave
mov
and
fnstenv
pop
lds
test
mov
dec
cltd
mov
mov
xchg
xchg
fwait
pop
shl
mov
mov
out
adc
dec
lods
jecxz
lods
into
pop
and
cmp
jno
mov
into
out
lods
in
dec
cmp
jge
pop
in
xorl
popf
or
xlat
leave
add
sbb
aas
aad
stos
ret
lea
jp
xor
adc
or
add
repnz
imul
clc
lcall
aad
outsl
ljmp
push
sub
lods
cmc
pop
nop
test
push
inc
inc
into
dec
lea
mov
xor
mov
add
mov
pop
int
cmpl
test
push
cmp
or
mov
push
sub
push
repz
sbb
and
xchg
ss
push
ds
mov
cmp
lea
enter
adc
push
xchg
push
popf
jp
and
dec
and
dec
call
imul
jmp
data16
mov
repnz
ret
sti
sbb
xchg
jmp
mov
pop
jmp
xchg
lea
sub
iret
mov
adc
popa
mov
out
mov
mov
jmp
jg
mov
cmp
jg
add
ss
mov
sub
jo
fldenv
xchg
das
test
push
xchg
pop
scas
mov
push
push
mov
add
dec
mov
dec
dec
xor
icebp
jnp
mov
push
sahf
jecxz
aaa
nopl
xor
cmp
inc
push
inc
sub
push
pop
mov
mov
test
clc
aaa
iret
push
dec
dec
cmpsl
int
in
iret
dec
outsl
inc
movsb
ljmp
test
sub
pushl
ret
pushf
shll
jle
xlat
popf
sbbl
and
daa
ficoml
push
xor
mov
in
dec
mov
or
sub
adc
push
jecxz
lea
fsubl
cld
ds
cmp
mov
inc
mov
xchg
mov
add
aaa
cmp
push
xchg
lret
or
mov
jnp
inc
mov
repnz
lret
inc
fmull
mov
xlat
dec
jno
push
rcl
out
stc
xchg
ss
mov
and
mov
negb
insl
jae
mov
jne
mov
decl
or
cmp
and
scas
cli
mov
sub
or
xchg
ds
mov
fwait
mov
fucomip
jbe
mov
and
out
mov
mov
and
sub
movsl
fiadds
repz
inc
inc
cli
cmp
scas
cmp
scas
push
lret
pop
das
push
xchg
and
jg
psubusw
in
mov
cmc
jl
jnp
nop
loop
mov
idivb
xchg
das
out
ret
in
xor
sbb
movsb
jmp
mov
nop
movsl
mov
jne
mov
cmpsl
xor
mov
loope
sti
adc
cmp
mov
mov
pusha
jg
adc
js
fisttps
cld
hlt
pop
sbb
out
nop
inc
shl
push
mov
jns
sahf
call
sbb
sbb
popl
loope
imul
divb
push
push
sub
mov
mov
lret
in
and
mov
in
imul
jecxz
or
subl
pop
pop
ljmp
out
jnp
add
mov
rorl
xchg
cwtl
data16
mov
cmp
ss
fsts
and
jno
xchg
jg
or
jp
movsl
scas
fs
mov
push
pusha
pcmpeqd
roll
sti
xchg
je
xorb
daa
sbb
lcall
es
test
cmp
inc
aam
sub
addl
scas
mov
gs
jbe
mov
lret
cmp
cmp
ror
adc
inc
cltd
fsubl
roll
int
inc
cld
fmuls
popa
pop
pop
sub
fistpll
gs
call
push
push
divl
lret
repnz
ja
das
mov
mov
mov
dec
jmpw
inc
pop
pop
rcr
push
js
mov
outsl
and
pop
lds
pushf
cmp
addl
sbb
mov
jle
cmp
cmpsb
mov
cld
or
mov
js
imul
or
push
xor
ret
add
mov
or
xchg
and
inc
jnp
inc
test
ljmp
push
mov
or
shlb
and
je
mov
aam
std
push
je
and
adc
mov
aaa
xchg
mov
pop
jmp
cli
mov
ror
cltd
stos
in
xor
xor
xchg
aad
das
and
xchg
negb
or
test
mov
jp
push
dec
stc
adc
mov
push
mov
mov
xchg
and
fs
ficoms
mov
rcll
inc
adc
push
mov
sti
cmc
sub
push
or
loopne
rorl
mov
mov
call
ret
push
xchg
cs
aad
mov
lods
lret
insb
inc
pop
in
mulb
or
jmp
test
adc
dec
mov
les
pop
aad
and
adc
jl
shlb
inc
jl
push
cmc
insl
xchg
pop
pop
dec
xchg
mov
jns
test
add
sbb
outsb
add
xchg
sbb
cltd
fwait
push
pop
imul
int
lahf
dec
fbstp
cmp
mov
push
pop
rcl
sbb
out
shll
cmpb
push
xchg
cmpsb
inc
scas
and
mov
xor
adc
pop
lcall
sub
add
leave
jl
sti
dec
test
add
dec
rcrb
push
roll
and
insl
insb
rclb
sahf
call
dec
push
int3
cmpsb
in
in
sbb
cmp
lea
popf
icebp
ss
inc
push
sub
dec
cmc
xor
fisttpl
or
dec
add
rcr
test
ss
lcall
cmp
cmp
dec
mov
jmp
call
cmp
lahf
bound
push
xchg
mov
push
insl
sbb
jnp
cmpsl
dec
addl
loopne
mov
scas
and
mov
popa
cmpl
lahf
pop
jge
fidivrl
cld
xlat
or
and
adc
addr16
nop
mov
push
lods
add
rolb
fdivs
in
loopne
stos
clc
pop
and
pop
sbb
xor
sti
cmp
lcall
xchg
push
adc
mov
push
cmpsl
inc
cmpsb
insl
sub
lods
ds
add
push
int
js
movsl
out
mov
icebp
push
mov
lods
push
or
cwtl
imul
adc
and
push
roll
fwait
sbb
daa
mov
test
lea
cwtl
xchg
lods
outsb
aaa
inc
cwtl
insb
fs
adc
push
int3
ret
mov
jnp
add
inc
fcoml
adc
sub
or
lcall
push
xor
sarl
les
pop
es
xchg
loopne
jmp
pop
push
jle
addr16
cmc
push
xor
insb
aas
adc
fldt
sbb
mov
scas
rorb
std
mov
mov
xchg
fs
xchg
stos
repnz
fstps
sub
sbb
imul
sbb
or
mov
cmp
cmp
loope
loope
mov
pop
xlat
add
test
mov
and
mov
and
push
fists
mov
outsb
push
mov
mov
repz
sarb
je
std
xchg
sbb
jecxz
or
in
pusha
loope
es
xor
dec
mov
pop
in
jae
lock
adc
pop
daa
sarl
dec
adc
mov
rcrl
or
out
ret
std
pop
stc
aad
dec
icebp
add
xor
jb
insl
je
mov
xchg
mov
outsl
cmc
les
push
enter
insl
mov
xor
test
lods
pop
pop
pop
dec
out
shlb
loopne
in
addr16
fldcw
mov
jns
xor
lret
fnstcw
test
inc
sbb
mov
rcl
mov
add
mov
adc
and
scas
cmp
lods
subl
cli
pop
mov
and
addr16
testb
jp
mov
sar
lods
push
cli
leave
outsl
xchg
inc
cmp
mov
cwtl
pop
test
sbbl
push
lret
fcmovnbe
in
push
lock
inc
test
push
into
js
adc
jecxz
dec
ret
daa
aas
out
enter
ret
inc
into
fcmovnbe
jnp
mov
ja
inc
pop
mov
add
stos
push
pop
cmpsl
lods
sub
andl
cmpl
pop
daa
push
pop
daa
into
or
jns
mov
bound
fdiv
aad
out
pop
sub
testl
nop
mov
mov
or
iret
shrl
stos
and
or
scas
les
xor
xchg
int3
mov
mov
out
cmp
xchg
xorl
jb
mov
sub
xor
mov
push
std
leave
lcall
push
roll
inc
es
out
cs
shll
mov
les
int
pop
inc
mov
sahf
inc
lret
inc
int3
pop
loope
xchg
push
ja
jmp
leave
xchg
mov
icebp
sub
mov
xchg
imul
sahf
mov
and
repnz
pop
arpl
pop
inc
push
ret
aad
cmp
xlat
ret
mov
cmc
xchg
nop
dec
insb
push
outsb
fidivl
mov
cs
pop
push
inc
movsb
ficompl
pop
fnstcw
adc
add
xor
dec
imulb
stos
lds
mov
notb
out
roll
xor
pop
cmpsl
mov
push
cld
cmpsl
mov
xlat
sbb
inc
sub
cmp
clc
or
cwtl
scas
and
inc
insl
ss
cld
sub
subl
and
mov
popa
in
roll
mov
mov
xor
mov
push
fcmovbe
jo
ds
sahf
mov
mov
lret
sub
sub
repnz
push
out
popa
repz
inc
adc
xchg
sti
int3
imul
adc
popf
in
xor
inc
add
sti
jmp
push
addb
mov
xchg
mov
lcall
push
xchg
ret
stos
rep
push
push
jecxz
xor
xor
jbe
and
fidivl
loopne
inc
sub
xchg
or
decl
sbb
or
cmpsb
fimull
xor
bswap
add
push
std
inc
insl
aam
add
popa
pop
data16
lock
mov
or
push
adc
sbb
xor
sub
xor
fs
scas
mov
pop
sub
mov
aad
or
cs
jp
imul
push
mov
and
sub
push
xchg
jns
mov
jne
movsl
negb
sub
sarb
inc
push
sbb
jecxz
jae
sbb
ret
cwtl
jo
mov
ret
push
adc
adcl
jbe
mov
mov
bound
daa
out
stc
xor
and
popf
or
std
rcrl
nop
dec
add
loop
jns
inc
data16
cmp
aaa
shr
inc
lea
lret
cmp
ret
cli
movsb
jno
xchg
jmp
repz
cmp
mov
jne
mov
movsl
test
jle
ss
aaa
mov
inc
js
jecxz
popf
xchg
jp
jae
pop
mov
loopne
in
and
add
call
xorb
bound
push
aas
mov
pop
shl
sbb
jae
nop
addr16
in
std
xchg
or
jecxz
mov
pop
jecxz
inc
ds
mov
stc
adc
xchg
jmp
outsb
push
fs
mov
ja
popf
jge
add
jb
rcr
ja
and
pop
xor
pusha
mov
mov
add
mov
mov
sbb
sub
fldcw
lods
movl
fiaddl
xor
movsl
or
jecxz
xchg
divl
and
and
fdivl
adcl
arpl
dec
outsl
jbe
lcall
jmp
scas
xchg
pop
repnz
push
scas
gs
out
test
aas
push
call
jnp
jno
sub
in
fdivrl
jbe
popf
push
pusha
jge
xchg
lea
enter
xchg
push
inc
lahf
add
xchg
sub
push
xor
je
insb
iret
jno
xchg
jge
jnp
mov
xchg
or
or
adc
sub
arpl
fiadds
jae
popl
push
xchg
nop
fs
repnz
cmp
add
stc
lret
sbb
jnp
pop
xor
lret
mov
cmp
xor
xchg
or
or
or
mov
mov
je
mov
gs
xor
lret
jb
lea
hlt
aas
shlb
aad
in
mov
ret
xor
mov
add
jmp
adc
stos
aam
push
xor
repz
add
pop
cmp
mov
je
dec
adc
repnz
lahf
xor
rclb
sbb
cmc
cmc
mov
sbb
fidivs
push
cltd
imull
roll
adc
add
testb
jle
xlat
lahf
int3
cmpsl
out
push
inc
xchg
xor
adc
and
pushf
outsl
addr16
scas
cmp
cmp
sbb
insb
and
xchg
pop
mov
movsb
mov
mov
mov
adc
das
xchg
popa
fs
push
or
mov
fcom
cmp
cli
fdivrs
inc
jae
mov
gs
cmp
ss
and
or
mov
lods
jno
stos
jmp
mov
lahf
add
mov
xor
sub
ss
jno
rol
loop
mull
xchg
cmp
sarb
xchg
push
rclb
lock
dec
cmp
adc
mov
out
gs
std
aaa
mov
pop
movsb
xlat
cmp
int
out
xchg
jno
cmc
add
mov
rcrl
push
test
das
sub
dec
cmp
and
mov
in
sahf
out
mov
pop
shr
cmc
inc
add
push
out
in
mov
out
loop
xchg
xor
add
pusha
dec
dec
arpl
mov
xchg
sbb
mov
movl
das
cmpsb
adc
sbb
and
fnsave
sbb
jge
mov
xchg
dec
pop
rolb
das
jns
xchg
xor
dec
xchg
xor
xchg
jp,pn
inc
ret
je
xchg
sub
out
nop
push
mov
cmovns
sar
mov
sti
push
adc
lods
push
mov
push
xchg
dec
scas
mov
cmpsb
test
and
xchg
jecxz
in
inc
decb
cmc
repnz
out
add
shl
stc
dec
jmp
add
sahf
std
and
popf
je
jl
popl
repnz
test
incl
into
js
xor
xor
sub
pop
mov
stos
pop
ret
pop
cmp
gs
jecxz
fisubrl
in
xchg
jnp
jge
icebp
mov
shlb
mov
sbb
fisttpll
mov
add
lcall
or
fwait
mov
sti
pop
aad
pop
pop
and
in
lahf
lahf
jbe
loop
inc
push
cmpl
cli
sub
adc
and
inc
cli
mov
sbb
fistpl
fstl
testl
loop
pop
gs
sub
adc
lret
sub
dec
sbb
loopne
in
mov
ret
cmp
arpl
cmp
mov
jge
xchg
push
mov
clc
icebp
adc
lea
adc
or
mov
pushf
rol
cmp
loope
and
cmpsb
and
pop
aaa
out
inc
xor
mov
data16
ljmp
loope
pop
cmp
ss
jae
sub
in
jmp
pop
cmp
mov
outsl
xor
cmp
or
jnp
fsubl
push
mov
mov
xor
aam
jnp
andb
loop
push
push
out
int3
jne
pop
lcall
push
loopne
rcrl
mov
aas
outsb
push
mov
jp
cld
jp
cli
mov
push
iret
dec
xor
iret
xor
inc
enter
xchg
lret
inc
add
mov
xchg
jbe
hlt
cmp
fwait
nop
push
pusha
pushf
int3
xchg
jbe
cmp
cmp
mov
arpl
xorb
in
or
pop
les
sbb
mov
bound
es
repz
or
jbe
sub
pop
ljmp
adc
pop
jno
xor
insl
mov
or
jp
in
repz
push
test
add
ror
aaa
sub
ds
iret
sbb
dec
addr16
sbb
loopne
sahf
int
mov
inc
and
mov
jl
inc
dec
sti
inc
sbb
mov
push
xchg
call
hlt
inc
call
xchg
gs
mov
subl
shlb
out
pop
loop
adcb
cld
jmp
pop
shr
and
jns
sbb
aas
std
jb
cli
cmp
roll
fld1
add
aam
adc
aaa
jge
int3
adc
shrb
push
mov
aas
jbe
jne
rcl
idiv
push
iret
and
int
jae
fimull
dec
sbb
add
cmp
add
and
push
out
mov
setno
das
cmpsb
sub
mov
cmc
outsb
ffreep
jnp
aam
cmpsl
pop
je
nop
mov
jge
sbb
loope
movsl
lods
pop
xchg
loope
fcom
int
push
inc
jmp
sbb
sbb
fbld
push
xchg
xchg
mov
adc
lahf
les
sbb
hlt
pop
and
jnp
std
hlt
cld
xor
gs
rorb
fs
iret
fadds
and
pop
stos
pop
mov
test
mov
mov
loop
scas
jae
outsl
xchg
clc
sti
daa
push
into
fstpl
movsb
pop
repnz
pop
fldt
fistpl
cmp
leave
insb
pop
loop
movsl
mov
push
insl
mov
cltd
cmp
fwait
dec
cmpl
mov
mov
in
scas
call
loopne
push
jae
sub
pop
icebp
mov
nop
pop
out
sub
sti
sbb
sub
xchg
push
pop
cmp
out
sub
sbb
orb
push
add
imul
mov
lahf
cmp
pop
cmp
aam
dec
subl
jns
mov
push
mov
repnz
dec
jnp
mov
orb
pop
aam
mov
xor
cmp
mov
test
pop
divl
mov
jmp
adc
shlb
xchg
movsb
add
mov
arpl
ds
pop
outsb
pop
xchg
pop
xchg
dec
jae
fxch
loopne
imul
movsb
insb
and
fmull
insl
mov
outsl
mov
xor
and
imul
push
into
outsl
inc
cmc
insb
scas
mov
addr16
out
lods
es
xchg
clc
popf
fs
arpl
test
push
mov
pop
add
in
push
stos
mov
lods
add
cmpsl
jecxz
sub
and
sbb
ljmp
xor
arpl
mov
ret
pop
or
in
sbb
jnp
push
out
sbb
insb
jl
pop
scas
arpl
mov
push
jge
subb
clc
add
mov
push
pop
sbb
pop
xor
mov
jl
or
int
push
push
jmp
test
push
add
out
dec
adc
lods
mov
pop
xlat
mov
ret
dec
sbb
jb
dec
cs
les
mov
ret
movsb
adc
call
hlt
outsb
lock
sbbb
icebp
scas
mov
mov
in
ljmp
or
mov
fwait
outsl
notl
out
jle
pop
jb
rorb
cltd
shl
jp
and
xchg
jb
imul
fdivs
mov
fs
ret
pop
add
jg
push
push
addr16
insb
and
sahf
imul
and
in
repz
and
jo
mov
add
lret
dec
jl
repz
loopne
mov
add
sbb
mov
jae
jle
cmc
jmp
or
fs
stos
jno,pt
rcrb
jne
sbb
enter
adc
dec
sbb
int
inc
jl
xchg
loopne
mov
mov
out
jmp
or
and
sarb
ds
push
push
cmp
xlat
adc
mov
xchg
imul
ja
jge
mov
xchg
adc
sub
jp
xor
sbb
dec
daa
outsb
fptan
dec
mov
push
mov
rcl
clc
rcrb
xchg
cmp
mov
sbb
lea
push
addr16
dec
sub
pushf
jnp
sbb
mov
mov
push
sub
les
movsb
sbb
jns
mov
rol
jbe
out
mov
aas
pop
add
cmp
pop
adc
nop
dec
sub
push
fbld
cmpb
mov
shlb
cld
adc
xor
sbb
lret
mov
jge,pt
out
int
mov
out
repnz
out
test
jmp
jmp
mov
adc
mov
pop
out
pop
ret
arpl
testl
in
xchg
push
mov
push
cmp
bnd
test
fiadds
out
aaa
pusha
sub
mov
rcl
jecxz
mov
adc
orb
movsl
bound
push
iret
test
sub
or
daa
aaa
and
jle
movsb
data16
inc
insl
add
orl
xor
sbb
adc
mov
adc
out
xlat
in
cmp
mov
mov
arpl
sub
mov
lcall
or
xlat
add
push
jecxz
iret
negl
movsb
adc
or
rorb
mov
in
movsb
bound
pop
addr16
nop
jns
clc
adc
add
gs
add
xchg
xchg
adc
xor
dec
test
out
inc
leave
test
roll
jmp
xchg
push
popa
cwtl
fidivrl
adc
sub
adc
jnp
out
mov
sti
rolb
in
outsl
pushf
xchg
jne
pop
aaa
cltd
and
popa
add
lea
mov
sbb
mov
enter
cmp
pushf
dec
or
fimuls
insb
insl
mov
js
dec
leave
pop
jg
stos
iret
aad
sbb
mov
dec
pop
mov
shl
jecxz
cltd
iret
inc
jo
push
xor
das
cmpl
mov
xchg
sbbb
or
cmc
iret
rolb
lock
and
pop
cltd
sbb
and
adc
test
cltd
ljmp
sbb
push
inc
inc
jno
push
mov
std
insl
stos
lcall
sbb
adc
cld
jp
in
insl
sub
test
mov
sbbb
aad
cli
das
stc
adcl
mov
push
in
stos
pop
loope
ja
dec
ret
mov
sub
gs
aaa
daa
cmp
dec
xor
movsl
mov
rcrl
inc
scas
jne
cmp
aas
lock
mov
and
mov
testl
mov
sbb
sbb
dec
sarl
aad
sbb
sub
or
xor
mov
out
clc
lret
mov
out
rcl
scas
xor
dec
js
pop
lcall
loope
rclb
enter
mov
in
call
jae
add
mov
dec
jbe
call
push
push
jnp
fildl
jne
pop
mov
mov
fadds
jmp
pop
leave
jbe
ficompl
in
dec
std
push
test
xchg
mov
mov
rorl
imul
fstpt
sub
push
data16
clc
mov
cltd
jns
stos
jmp
cltd
sub
adc
sub
pop
mov
or
and
xchg
lds
dec
ljmp
push
inc
cld
lds
mov
adc
dec
cmpl
push
mov
arpl
repz
push
shl
dec
ret
divl
lret
fsts
pushf
fdivr
mov
out
jnp
das
push
insb
in
xchg
aam
sbbb
pop
movsb
mov
fcmovb
mov
pushf
pushf
pop
xor
das
xchg
fcmovbe
out
rcrb
pusha
adc
js
add
test
xor
push
shlb
or
adc
inc
sar
inc
jecxz
in
es
xor
andnps
enter
jge
les
fs
dec
aaa
mov
inc
out
jp
xor
and
fld
test
or
repnz
sub
test
dec
inc
mov
sahf
pop
stc
pop
data16
jns
or
in
mov
jecxz
mov
push
sub
stc
lods
loop
cli
pop
lahf
pop
mov
hlt
ss
mov
mov
jmp
sub
test
das
xorb
je
mov
fcomp
pop
outsl
fsubs
mov
xchg
mov
mov
jge
in
je
sarl
and
inc
sbb
icebp
xor
int
add
gs
aaa
fisttpll
xor
lods
cmp
aas
popf
jl
mov
jo
shr
push
xchg
dec
lds
inc
hlt
push
shlb
mov
aas
mov
subl
outsb
dec
repz
lret
pop
inc
sbb
cmp
lods
fwait
stos
push
pop
mov
and
sti
push
popf
out
and
push
xlat
fcomp
jne
mov
jp
popf
imul
sbb
mov
mov
jo
ljmp
les
inc
add
out
xchg
sub
scas
pop
shll
sub
pop
andl
xchg
das
out
and
ja
lock
aam
clc
push
jmp
out
adc
cwtl
cmc
rcr
jmp
push
and
popa
mov
inc
popa
gs
or
or
movsb
add
inc
testb
sub
cltd
mov
dec
outsl
rcrb
repz
xchg
adc
js
jmp
ret
dec
test
mov
cmp
adc
mov
insl
jnp
lret
mov
xchg
add
shl
and
fiaddl
stos
sub
xadd
add
xlat
xchg
jle
pop
dec
ret
pop
pop
cli
jnp
mov
cmp
dec
aad
into
pushf
sahf
int3
and
mov
loop
out
or
insb
and
dec
adc
ss
pop
popf
push
nop
xor
es
jnp
dec
add
lock
jle
mov
pushf
cmpsl
test
imul
cmp
cmc
xchg
add
lea
add
cmp
out
scas
xchg
xchg
xor
adc
xchg
fsubs
or
in
inc
iret
stc
inc
mov
out
incb
ret
xchg
cwtl
push
pop
out
jnp
arpl
jnp
and
adc
jle
mov
pop
int
jge
test
mov
jbe
push
scas
loop
sub
sahf
icebp
addl
ja
xchg
sub
xlat
cwtl
insb
sub
sub
and
cmp
or
mov
insb
out
mov
mov
mov
jnp
push
xchg
dec
loopne
jle
or
ljmp
or
cli
aaa
fwait
push
lock
stos
das
or
mov
loope
pusha
and
inc
test
std
ds
fsubr
mov
mov
mov
insb
mov
push
mov
les
das
mov
pushf
xor
jb
sub
xchg
push
clc
pop
ja
and
xor
scas
pop
dec
cmpsb
pop
inc
adc
mov
push
xchg
xchg
shl
std
scas
jmp
insb
pop
mov
fnstcw
sub
insb
jo
and
loope
cmp
arpl
sbb
fisttpll
dec
jmp
jmp
test
sub
fstpl
imul
pop
sub
sub
dec
jg
orb
enter
cmp
sub
push
das
loopne
jb
shr
lods
mov
inc
pop
ja
push
jle
pop
shlb
add
imul
scas
mov
ds
mov
sub
cld
mov
cmp
mov
sbb
cmp
inc
fisubrs
mov
push
outsl
adc
stos
hlt
mov
lods
mov
nop
subb
mov
in
insl
popf
sub
adc
test
jg
in
push
repnz
push
mov
push
or
iret
push
cmpsl
pop
sbb
xor
inc
mov
iret
into
pushf
outsl
iret
mov
mov
push
test
bound
inc
pop
pavgb
call
rorl
icebp
push
xor
ret
or
hlt
mov
mov
dec
fsts
ret
scas
jmp
jo
push
inc
rep
add
adc
jns
sub
es
int
mov
fimuls
in
or
into
pop
mov
xlat
sbb
mov
add
lods
sub
stos
cmp
add
test
adc
fiaddl
stc
and
sbb
jl
mov
fcoml
cli
mov
cmpsl
ficoms
push
fstl
inc
or
sbb
lcall
pop
ficoml
loopne
or
test
lock
push
test
test
push
lock
adc
adc
push
shll
sub
push
pop
push
adc
lods
fistl
fisubl
mov
inc
add
mov
fs
in
sbb
scas
inc
dec
mov
fidivrs
clc
dec
jle
pop
fldl
mov
sarb
pop
sub
bound
or
hlt
push
scas
or
xchg
insl
mov
test
lahf
dec
js
mov
cwtl
fsubr
push
xchg
or
or
mov
adcl
cmp
mov
andb
out
mov
out
fsubr
sub
push
js
icebp
push
dec
cli
std
xchg
adcl
lock
int3
lods
pop
pushf
mov
xor
jle
sub
shlb
cld
stc
decl
in
mov
push
les
push
mov
test
cld
testl
jns
adc
and
stos
stos
lret
inc
xchg
sub
xor
inc
in
dec
pop
out
mov
out
movsl
cmp
call
or
or
int
call
and
rclb
sbb
cmp
lcall
jecxz
leave
ss
mov
scas
push
ret
pushl
inc
and
or
popf
lretw
enter
pushf
pusha
sbb
push
ss
cmp
repz
xchg
push
negb
cs
jno
jle
sbb
ljmp
inc
push
or
lcall
je
mov
xchg
xor
xchg
imul
cs
mov
popf
ss
mov
cmp
into
je
outsb
fiadds
aam
and
clc
enter
mov
jg
xchg
mov
enter
adc
add
pop
xchg
stos
push
lods
mov
mov
in
push
mov
hlt
add
mov
cmpl
jg
outsl
stos
jle
mov
xchg
sarb
adc
pop
repz
push
push
jg
cmpsb
out
in
or
xchg
stos
mov
lea
inc
mov
jns
pop
and
or
xchg
lahf
jns
cmp
pop
mov
out
les
loopne
nop
and
test
sbbl
jbe
sbb
lcall
cwtl
push
mov
mov
ljmp
aam
add
mov
idivl
movl
dec
cli
mov
jns
std
cli
cmpsb
push
ds
testl
js
mov
fadds
xlat
std
inc
cltd
stc
jb
sbbl
das
lret
mov
mov
adc
mov
imul
mov
adc
xchg
mov
js
sbb
jo
mov
add
imul
adc
xor
push
cmp
push
sub
inc
and
inc
std
dec
mov
inc
and
jne
les
push
mov
mov
andb
ljmp
adc
hlt
mov
jne
mov
test
xchg
enter
push
lods
jle
in
xchg
stos
add
aad
add
out
imul
jp
mov
arpl
adc
mov
inc
cmp
sub
aam
loop
sbb
pop
movsl
iret
and
les
aaa
daa
jb
sub
push
jns
mov
divb
dec
mov
xchg
scas
push
dec
mov
incb
out
pop
not
sbb
aaa
repz
popa
mov
pop
imul
mov
out
shrl
jl
outsb
mov
ret
test
sub
dec
leave
xchg
sbb
xchg
mov
scas
sub
cmc
fcomp
pop
mov
ja
shll
addr16
hlt
insl
sahf
test
arpl
sub
fistps
sub
enter
repz
cmpsb
int
mov
imul
das
jp
int
rol
adc
lock
incb
mov
cmpsb
test
std
sbb
fadd
stos
rolb
insl
jp
lds
mov
sbb
adc
mov
lret
sti
scas
xor
out
sub
jne
xor
jnp
xchg
aas
in
sbb
cmc
cwtl
out
inc
cmp
xor
jp
ds
mov
lods
arpl
std
daa
sub
adc
mov
xchg
test
dec
repnz
aad
mov
lock
mov
bound
adc
lods
push
enter
jle
dec
push
mov
jle
jp
push
loope
in
xor
test
pop
mov
pop
sahf
aam
fidivrs
rep
aas
push
push
jne
cli
xor
and
pop
mov
mov
incb
outsb
mov
jnp
sub
stc
outsb
jnp
in
mov
jle
mov
xor
xchg
iret
mov
imul
test
xor
mov
inc
and
das
jge
dec
pushl
sbb
cld
out
outsb
push
orl
lcall
test
sub
stos
dec
pop
mov
enter
ret
inc
inc
xor
sbb
std
lods
adcb
adc
mul
push
fwait
sbb
inc
jne
aaa
add
push
cmpsl
ror
push
aam
mov
jo
addr16
mov
ss
jnp
jle
pop
cltd
xor
push
adc
jge
daa
dec
je
sti
push
jp
scas
push
mov
pop
push
xchg
sahf
mov
stc
movl
inc
cmpsl
addl
push
mov
jge
pop
bound
mov
inc
push
sub
into
jg
pushf
lea
jl
outsl
and
xchg
sub
mov
addr16
loope
mull
adc
jl
lahf
daa
mov
jae
jo
in
mov
mov
out
inc
xchg
jne
hlt
xor
cmc
aas
mov
add
fwait
push
cld
hlt
dec
cmp
fildl
push
pusha
sbb
pop
in
pop
pop
pop
divw
jns
dec
mov
jecxz
ficomps
mov
dec
mov
outsb
push
insb
xchg
hlt
jle
xor
mov
repnz
push
rcr
popa
mov
lock
jnp
call
xchg
jecxz
ja
andl
insb
enter
cmp
fwait
dec
mov
mov
jge
hlt
inc
fsubs
jecxz
jle
mov
clc
or
pop
dec
sub
scas
jb
lods
xchg
and
dec
jne
mov
mov
inc
adc
sub
rcrb
add
add
or
dec
imul
or
mov
std
sti
mov
add
push
lods
or
std
push
dec
pop
mov
jp
mov
lods
fcompl
fisubrs
dec
pop
mov
mov
push
leave
xchg
mov
xlat
bound
jecxz
xchg
aaa
ds
popf
ss
and
adc
or
jo
test
stos
nop
sub
imul
or
add
sub
sbb
fisubrs
jecxz
into
sbb
dec
push
add
and
aam
lcall
add
mov
xchg
jno
loop
movsl
aad
aam
push
adc
ret
scas
mov
xchg
cmpsb
push
iret
lds
push
cmp
jmp
jno
popa
scas
push
mov
leave
cmp
test
xor
add
cmp
fidivrs
lret
movzwl
pop
fwait
mov
fstl
adc
and
adc
icebp
jmp
repnz
and
lods
dec
jg
mov
ret
sbb
cmp
dec
into
xchg
and
dec
jl
jo
add
sub
adc
xchg
pop
add
adc
stos
mov
test
sbb
cli
in
xor
pop
xchg
scas
lock
push
fimuls
cs
dec
mov
push
lcall
fcoml
gs
dec
push
pop
mov
xchg
pop
xchg
mov
mov
loope
dec
xchg
pop
mov
les
insl
call
pop
insb
lcall
cmc
in
push
aam
test
iret
add
data16
repnz
ljmp
in
push
xlat
lahf
cltd
push
xchg
dec
mov
or
lret
in
xchg
imul
lea
mov
int
aad
push
loop
adc
ret
ret
test
push
mov
clc
pop
mov
sub
sbb
out
xchg
fldt
or
hlt
sbb
xor
or
into
cmp
push
pop
in
test
push
cld
and
je
iret
add
pop
push
repnz
mov
dec
mov
cwtl
push
scas
js
mov
in
pushf
xor
cli
lock
adc
call
scas
aad
shll
lods
or
lock
bound
or
stc
in
scas
movsb
add
cs
inc
fs
neg
ret
push
dec
xchg
repnz
enter
jne
mov
std
mov
repz
jle
das
jnp
xchg
mov
mov
test
loop
cmpsb
fsubrs
mov
lcall
dec
sti
cmp
pushf
ja
pop
jp
pop
pushl
popf
in
pop
sub
mov
mov
dec
aad
inc
pop
sub
cmpsl
cmpl
lds
je
out
sbb
mov
push
lock
aaa
into
mov
mov
loope
mov
enter
jl
adc
cmpsl
shrb
aas
dec
mov
sub
dec
in
jmp
enter
xchg
outsl
inc
xlat
lods
mov
jne
fildl
xchg
hlt
mov
push
mov
repnz
scas
mov
sub
jl
ror
and
mov
push
dec
cmpsl
mov
loope
jb
jae
add
lret
dec
fptan
cmp
xor
push
jae
cmp
jb
or
imul
stos
sahf
jbe
repz
mov
lcall
sub
lods
and
jno
sbb
xor
fsub
xor
cmp
stos
xlat
mov
or
mov
repz
lods
insl
fs
mov
arpl
sbb
mov
cmp
lret
xor
inc
daa
mov
out
mov
inc
jecxz
mulb
jnp
cs
sti
mov
aaa
cmp
fwait
pop
sbb
mov
adcb
js
push
cwtl
hlt
and
push
cmp
call
cltd
jp
mov
sbb
in
cs
xor
cmp
pop
jbe
pop
mov
sub
iret
fnsave
repz
inc
mov
or
pop
cmp
in
negl
mov
lods
xchg
shl
push
rorl
fwait
mov
adc
test
loope
add
sar
xchg
data16
mov
mov
cwtl
cs
or
jle
rclb
adc
pop
push
push
adc
inc
out
aam
xlat
ljmp
call
aaa
mov
dec
push
lock
dec
movsb
jno
dec
hlt
push
out
cmp
mov
fcmove
cmp
std
dec
mov
pop
or
sub
out
aad
fadds
push
lods
leave
push
mulps
insb
pop
lret
cmp
js
and
cmpsl
xchg
pop
mov
sub
xchg
xlat
push
sbb
xor
les
xchg
lea
pop
lea
fcomp
sti
pop
jmp
rcll
and
jo
in
int3
xorl
sbb
sbb
or
lcall
push
in
push
xchg
test
lds
pop
add
mov
fwait
rorl
mov
pop
rclb
fdivrs
sahf
fidivs
imul
pop
cmp
or
bnd
add
jp
jb
fstps
lret
jae
and
int
imul
pop
lret
jle
jnp
pop
xor
push
lahf
sub
shr
gs
sbb
or
sbb
cmpsl
insl
pop
cld
push
lds
int3
mov
loop
pop
sub
pusha
cs
sbb
imul
fisubl
and
add
outsl
sub
pop
popf
cli
fwait
push
outsb
push
sub
ss
inc
xchg
xchg
xchg
sub
xor
cmp
in
sub
xor
xchg
leave
xchg
sub
je
mov
dec
xchg
nop
ret
call
call
mov
sbb
add
dec
test
clc
mov
dec
aam
lock
cmp
stc
xchg
cmp
jns
mov
lds
sbbb
repnz
fs
pushf
fidivrs
push
insb
xor
pop
mov
pop
ret
or
clc
jno
cltd
push
xlat
mov
push
subl
adc
imul
repnz
mov
sbb
sbb
cmp
mov
into
lods
bswap
je
xor
jle
popf
int3
in
mov
cmp
push
lds
nop
rcll
mov
cwtl
adc
sbb
inc
pop
mov
out
out
inc
data16
bound
mov
mov
adc
mov
stos
push
stc
mov
in
xchg
test
rolb
sti
push
mov
sbbb
shl
jg
or
fisttps
movlps
shl
js
xlat
xchg
stc
mov
clc
decl
jno
div
jmp
dec
loop
iret
cmp
fdivrl
xchg
jnp
xor
mov
loopew
pop
jecxz
in
cmp
push
push
test
adc
jmp
imul
dec
cmpsb
lods
jnp
mov
data16
push
imul
xchg
dec
sbb
into
push
and
pop
mov
shll
outsb
cmpsl
mov
and
cli
loop
xor
and
or
push
xchg
mov
and
mov
lock
jmp
or
dec
dec
mov
pop
mov
test
sti
xchg
add
xchg
jecxz
mov
cs
leave
dec
cmp
add
mov
into
js
ds
filds
sti
inc
mov
je
popa
fnstcw
adc
cltd
fmull
incl
lds
hlt
cmpsb
pop
clc
cmpsb
mov
leave
push
in
cmp
add
mov
jbe
pop
add
inc
decl
insl
in
mov
scas
stos
imul
fdivs
lds
ret
mov
cmp
dec
in
or
add
mov
shl
dec
cmp
sbb
lock
pop
add
xor
inc
adc
mov
push
xchg
pop
cmp
mov
gs
add
jg
in
and
sub
icebp
sbb
cmpsb
xor
fbstp
pop
je
popf
add
int
andl
add
jns
jg
xchg
add
lock
loop
in
jg
xchg
sbb
pop
adc
andl
mov
fdiv
pop
jecxz
push
ucomiss
mov
mov
push
call
std
orb
cli
ficoml
add
orl
outsl
mov
push
fistpl
mov
sub
dec
pop
adc
mov
cmp
loope
clc
pop
iret
adc
call
movsbl
je
pop
pop
sbb
fistl
push
out
adc
or
loop,pt
xor
inc
fstp
inc
add
mov
push
gs
mov
inc
cmp
push
test
push
add
push
ficompl
xor
or
xchg
cld
sbb
and
loope
arpl
shll
sar
gs
dec
sub
repz
cmovp
out
loop
push
xor
jne
mov
test
mov
pop
lods
scas
mov
fwait
inc
lmsw
into
sti
sbb
shrl
pop
push
lcall
pop
movl
push
sbb
fidivl
sub
or
mov
ss
mov
dec
mov
shlb
clc
out
scas
lea
repz
into
scas
mov
jno
push
and
lea
inc
xor
cs
pop
jne
or
stos
rorb
scas
and
add
jle
in
sti
fidivrs
fdivp
leave
aas
xor
movsl
pop
push
xor
cld
mov
xchg
jno
movsb
jns
in
aas
cmpsl
loop
mov
cs
movsb
repz
adc
fiadds
add
lret
mov
ror
mov
dec
adc
cwtl
repz
mov
jg
mov
mov
cwtl
inc
mov
fwait
mov
loopne
fcomp
or
sbb
imul
sbb
adc
out
and
and
bound
sti
popf
iret
test
addr16
pusha
sbb
xor
std
loopne
subl
push
into
add
bound
xor
popa
push
xor
fiadds
and
rcrb
or
scas
and
xor
xchg
pop
test
lret
jmp
ja
push
bound
cmpl
add
jmp
lret
scas
mov
pusha
loope
sarb
stos
mov
mov
mov
out
xlat
mov
rorl
inc
xchg
adc
pop
xchg
movsl
pop
pop
pop
popf
out
adc
lea
add
sbb
sub
iret
out
sub
add
femms
mov
adc
ficomps
fisubl
cwtl
sbb
adc
in
push
call
test
add
ja
sbb
rcrl
sub
sub
sbb
test
popa
or
inc
xchg
mov
or
sub
clc
or
inc
in
clc
sarb
mov
and
push
push
jae
inc
jne
sub
or
testl
enter
cmp
stos
inc
nop
sub
xor
add
jecxz
out
movsl
pushf
cmpsl
jge
flds
xchg
cmp
clc
outsb
fistpll
scas
and
std
xchg
lock
out
js
movsb
xor
out
pop
mov
mov
call
or
adc
inc
xchg
xchg
inc
jbe
rcll
ljmp
mov
inc
jbe
pop
push
lret
jne
cmp
push
jge
out
adc
cmp
push
ds
lea
ret
mov
pop
push
cmpsb
fstps
dec
cli
inc
mov
mov
cmc
jno
les
sbb
loop
pop
insl
stc
jae
adc
dec
pop
mov
inc
mov
aas
or
jbe
lret
out
dec
mov
scas
mov
aad
rolb
js
jg
inc
cmp
into
push
push
jb
enter
aas
cmovl
or
cli
lret
aad
pop
in
add
repz
mov
xchg
pop
jmp
mov
cld
cld
aam
mov
bound
mov
js
insl
cmp
fdivl
lahf
sbb
push
cmp
cmc
push
mov
ljmp
scas
cmc
add
lods
xchg
add
sbb
fstl
push
mov
jae
leave
mov
push
lock
orb
nop
mov
inc
stc
push
pop
rorb
mov
pop
pop
icebp
das
jmp
icebp
sub
ss
daa
ljmp
xchg
ljmp
push
pop
pop
insl
mov
jbe
mov
xchg
into
mov
jg
insb
and
orl
lock
repnz
mov
xor
movsl
popf
pmullw
int
daa
inc
hlt
dec
sahf
cli
pop
int3
jge
jl
mov
mov
dec
jb
or
mov
int
das
cmp
xchg
cltd
movsl
pop
aaa
jle
ss
cwtl
rcr
test
scas
int
aad
outsl
mov
or
fildl
out
notl
loope
jecxz
xorl
sub
xchg
jp
pop
test
aad
into
cmp
aad
pop
add
mov
shl
inc
loopne
fs
pushf
or
lret
xor
ds
in
nop
incb
inc
or
ljmp
adc
mov
push
push
add
jb
xor
mov
jbe
mov
jp
mov
andl
push
push
sub
fisubrl
inc
mov
leave
push
xor
jp
xorl
test
clc
hlt
ficompl
fstpt
or
repnz
rcl
mov
outsb
push
push
jb
shl
cmp
cmp
test
int
push
cmp
push
jbe
and
test
xchg
mov
or
xchg
nop
sarb
jno
dec
negl
or
mov
shrl
sbb
shlb
push
insb
or
and
movsl
in
fbstp
xchg
icebp
shrl
mov
mov
fstpt
jecxz
jnp
int
out
xor
sbb
sbb
int3
inc
jns
cli
add
int
push
imull
add
push
cmpsb
adc
pop
pop
in
or
lea
sub
bsf
pop
mov
pop
mov
sbb
push
je
inc
jno
or
stos
add
pop
test
lea
or
mov
push
daa
andb
inc
fcmovu
push
ds
hlt
stc
mov
movsb
xor
mov
ds
xchg
pop
jl
ret
jns
popa
mov
outsl
push
dec
pop
lcall
fsubrl
mov
movsb
jne
in
popa
mov
mov
not
mov
leave
push
dec
inc
cwtl
prefetcht2
adcb
mov
aaa
xor
mov
inc
xchg
inc
or
mov
xor
hlt
sbb
movb
and
loop
call
lret
leave
mov
ret
mov
jns
insb
int3
ss
xchg
ljmp
aas
test
fdivl
mov
sub
push
hlt
jb
pusha
divb
gs
insb
mov
repz
jbe
pop
lcall
cmpsl
popf
shl
shll
loope
jge
stos
out
xchg
pop
mov
mov
stc
pop
subb
movsb
jl
fcmovbe
int
xor
std
inc
sub
nop
cmp
jge
data16
in
inc
inc
add
dec
imul
mov
out
fidivs
cmp
push
sarl
in
std
jne
ret
pop
and
push
push
push
mov
cmp
jns
xor
outsl
data16
pop
cld
jno
cltd
filds
stc
mov
lock
stc
add
movsb
fsubrl
sub
lods
pop
es
nop
xchg
push
mov
mov
in
test
sbb
jg
sti
mov
dec
bnd
mov
imul
lods
rol
adc
cmp
ds
icebp
loop
push
call
aas
icebp
xor
cld
xchg
arpl
test
ret
cld
cmpl
test
mov
sub
mov
in
lret
push
fimull
out
es
mov
in
adc
daa
add
mov
xchg
mov
add
lds
sbb
mov
mov
es
adc
inc
insl
mov
mov
jnp
mov
or
in
ret
scas
cmp
fistl
ret
push
add
imul
std
fisubl
movsb
pop
or
ret
loope
mov
clc
push
mov
push
ror
out
mov
in
pop
mov
fcoms
sahf
or
mov
adc
aad
xchg
or
dec
push
push
dec
mov
js
mov
sbb
inc
adc
mov
icebp
pop
leave
push
push
mov
aam
push
popf
push
shll
ljmp
add
nop
outsb
sbb
sbb
mov
or
add
loope
scas
call
sahf
aam
rcrb
sbb
rep
inc
pop
pushf
sub
xchg
push
jle
ljmp
sahf
xchg
icebp
movsb
movsl
fiadds
shlb
push
sub
xchg
clc
jp
test
arpl
pop
into
in
leave
jmp
mov
jmp
pop
je
out
xchg
adc
rorb
push
clc
push
movsb
cmp
mov
rep
test
sub
pop
into
xchg
loop
xchg
popa
rorl
je
cmp
push
test
sahf
sahf
jp
lahf
gs
mov
jg
or
pop
jo
jbe
fstpl
add
je
repz
cmp
je
push
lock
mov
pop
imul
icebp
stc
xchg
cmp
loop
fs
cmc
ljmp
in
mov
inc
sbb
outsl
arpl
sti
mov
fcoms
cmp
jle
xchg
cmp
pop
in
andb
lcall
pop
iret
aas
jnp
cld
das
cmpsb
and
cmc
out
inc
ret
mov
movsl
js
insb
lcall
mov
out
out
pop
subl
sahf
xor
icebp
dec
mov
push
adc
xchg
pop
xchg
lcall
xor
xchg
and
lret
push
adc
dec
test
in
fisttps
adc
in
enter
stos
jbe
cmpsb
and
xor
mov
in
adc
mov
and
mov
ljmp
divb
add
add
jp
adc
pop
or
cmp
outsl
cmp
mov
jne
dec
jg
loope
cltd
mov
pop
arpl
loopne
call
sub
jb
pop
cmp
inc
cmp
pop
stos
out
jp
mov
jmp
into
mov
repnz
enter
mov
xor
cmp
jge
cmpsl
lahf
cwtl
imul
popf
and
lret
pop
scas
inc
add
cwtl
jge
xor
adc
mov
cltd
inc
in
fidivs
jecxz
cmpsl
pop
jno
scas
shll
insl
jb
sub
cmp
jle
clc
or
pop
sbb
daa
or
sbb
stc
cmp
cmp
aas
sbb
subb
loope
jmp
sbb
iret
mov
cli
call
enter
fbld
loope
std
push
adc
cmpsl
fs
xor
daa
jg
fdivl
shr
sbb
into
push
ret
out
aaa
ja
out
xor
push
ss
jns
in
push
xchg
outsb
and
mov
add
adc
test
subl
mov
push
push
sub
xor
es
adc
inc
movsl
pop
out
sub
inc
xchg
add
das
xchg
adc
push
mov
inc
pop
inc
or
shl
ret
jns
movsl
in
hlt
int3
movsb
adcb
add
insl
movsl
js
push
fwait
push
pop
nop
sarb
mov
push
xor
lcall
xchg
xor
jbe
sbb
cs
pop
roll
and
outsb
hlt
sbb
loopne
inc
jecxz
cwtl
aam
xchg
and
leave
mov
cmpsb
popa
js
mov
mov
mov
push
sbb
leave
ror
in
les
cmp
jmp
aaa
xor
add
lea
jmp
adc
bound
cmpsl
add
mov
cmpsb
ficompl
mov
in
xchg
fninit
mov
and
xor
dec
pop
aad
dec
sbb
mov
hlt
in
rcrl
mov
insb
rorb
addl
mov
lods
xchg
pusha
popa
dec
dec
out
mov
inc
pop
jno
scas
mov
xchg
cmpsb
lods
inc
jae
push
imul
fsts
stos
outsl
or
jecxz
xchg
js
mov
clc
push
je
and
dec
mov
sub
loopne
stos
push
push
xchg
sahf
ja
addr16
rcll
mov
in
dec
jo
mov
mov
fcmovne
imul
jbe
xchg
mov
cmp
fwait
and
lcall
loopne
fsubr
ficomps
jnp
jmp
int
inc
repnz
and
jmp
shll
js
into
fsubrl
inc
aad
xchg
rclb
xlat
in
mov
mov
xor
sub
cmp
pop
cmp
jp
inc
inc
sahf
lock
int3
pop
sarb
pop
mov
je
or
xchg
adc
notb
jmp
fcompl
mov
je
cli
xchg
fstpt
call
out
cmpsb
inc
or
or
fstpt
mov
push
repnz
xor
cmpsl
out
int3
sbb
xchg
push
jecxz
mov
insl
and
cmovle
jne
leave
mov
dec
cwtl
imul
dec
push
lcall
xchg
push
sub
sbb
lret
adc
or
enter
mov
dec
or
iret
cvtps2pi
gs
test
jge
lods
xorb
call
iret
fs
shlb
movb
and
pop
cmp
add
adc
push
bound
dec
mov
inc
inc
mov
add
mov
and
mov
xchg
jp
es
mov
sahf
test
loopne
nop
mov
out
pop
pop
test
inc
outsl
out
rcll
icebp
or
js
call
lahf
lahf
shlb
rolb
adc
addb
adcl
test
cmp
pop
adc
xchg
idiv
ss
mov
cwtl
aas
mov
rcll
adc
adc
shll
push
jg
aaa
mov
nop
push
add
push
add
and
xchg
sbbb
inc
mov
or
rclb
loopne
add
iret
sarb
popf
fdiv
dec
test
or
jp,pn
adc
jl
sbb
cmpb
mov
mov
inc
ret
inc
lock
call
test
xchg
push
cs
orb
or
inc
mov
rol
dec
or
lds
ret
or
inc
xchg
test
add
push
inc
lock
mov
mov
sbb
add
push
fs
or
test
add
push
xlat
in
add
lcall
test
pop
int
dec
jl
push
int
dec
ror
ret
jecxz
popf
mov
cmpsl
iret
xor
js
cs
mov
inc
jbe
divb
and
negb
wrmsr
pop
xchg
testl
jp
pop
lret
lods
leave
lea
popa
ss
cltd
out
mov
fwait
jb
push
call
sbb
fisttpll
loope
mov
bound
mov
inc
out
enter
jle
test
lahf
adc
jle
or
lret
jb
mov
jae
es
popa
jle
push
adc
icebp
out
push
push
fldenv
ret
addb
cs
cmp
repnz
gs
mov
cmp
arpl
or
fidivl
mov
mov
lds
lods
jb
in
les
lods
loop
leave
inc
or
adc
inc
stos
ret
lods
jbe
cwtl
pop
repnz
mov
js
xchg
jecxz
push
dec
pop
pusha
mov
push
push
shlb
mov
clc
nop
sbb
inc
and
test
data16
inc
cmp
negl
aaa
ss
xor
push
adc
adc
test
cli
mov
mov
cld
and
lods
mov
cmp
lcall
push
aad
out
testl
call
dec
mov
das
cmp
pop
mov
pop
push
cmp
cmc
xchg
push
sub
test
gs
inc
xchg
mov
lods
or
addl
adc
mov
jo
jno
testb
mov
inc
cwtl
xor
sbb
mov
sbb
mov
and
mov
jae
add
xchg
sbb
add
scas
leave
out
jmp
jae
imul
add
mov
push
mov
sub
sahf
mov
ds
aam
test
subb
dec
mov
cmp
cmc
push
popf
inc
loop
ror
int3
xchg
ljmp
adc
inc
mov
into
fadd
out
push
xor
pop
pop
mov
dec
stos
mov
jmp
rcrb
shll
xor
adc
testl
or
lcall
or
in
sbb
out
lcall
xor
inc
test
repz
adc
and
leave
push
cmp
sub
dec
jmp
mov
xchg
out
sub
sub
xor
or
mov
stos
les
fcomi
outsb
xchg
mov
sub
rcll
fldenv
sub
add
clc
push
jle
cmp
push
jmp
jmp
int3
mov
add
int3
and
cmp
mov
sbb
xchg
loop
ds
add
mov
dec
adc
jb
adc
iret
pop
into
push
mov
pusha
pop
sub
push
cmpsl
cmp
jne
pop
pop
lret
adc
pop
jge
jecxz
or
inc
mov
inc
push
dec
movsl
imul
push
cmp
or
imul
test
ljmp
lods
out
pushf
pushf
mov
sbbl
mov
pop
sahf
adc
inc
pop
cmp
test
dec
movsl
dec
or
xchg
inc
xchg
out
jecxz
sub
push
or
cltd
movsb
lret
xchg
pavgw
ret
push
clc
mov
daa
mov
or
push
pop
adc
or
cmc
stc
push
mov
mov
out
push
ficoml
insl
fsts
dec
clc
int3
xor
mov
cltd
lds
fs
out
mov
ss
cmpsb
pop
lock
cmc
fs
adc
aas
xchg
mov
cmpsb
adc
arpl
mov
test
subl
out
push
mov
jle
outsl
push
pop
inc
in
sub
js
mov
mov
push
adc
add
inc
lods
sbb
pop
call
imul
fiadds
pop
je
mov
js
jmp
pop
loop
pop
out
push
dec
cli
nop
aad
mov
fwait
leave
pop
pop
clc
add
and
adc
mulb
add
jno
in
jno
push
xorb
fs
pusha
sbb
and
lret
push
in
or
bound
loope
lods
mov
push
test
lret
adc
mov
roll
or
rorb
pop
xorl
fsubrs
or
xchg
jmp
sub
push
aas
cmp
jbe
aaa
lcall
fisubl
sarb
pusha
pop
and
aas
lret
push
xor
mov
scas
cli
add
inc
int3
inc
or
xchg
imul
ret
mov
jae
pop
les
pop
imul
mov
jb
test
std
outsb
jb
ds
sbb
aam
ror
fcoms
push
in
sub
sbb
ja
inc
mov
inc
mov
ljmp
popa
sbb
fmuls
adc
jmp
push
jno
scas
cmp
push
pop
jae
stc
aam
test
test
inc
adc
pop
or
push
mov
and
push
ret
stos
and
out
repnz
int
mov
stc
movsb
mov
nop
jbe
arpl
fsubl
mov
add
ss
jp
or
push
mov
cltd
dec
mov
insl
pop
imul
aaa
shrb
cwtl
push
mov
cltd
repnz
movsb
loopne
subb
jo
test
les
sub
sub
push
cwtl
push
adc
sbb
xchg
push
jo
shrl
clc
std
sub
pop
dec
mov
dec
mov
push
aaa
outsl
sbb
es
adc
aad
mov
out
add
cld
insl
xor
mov
sbb
lock
cmc
loope
js
bound
pop
enter
cmc
push
cmc
movb
imul
pop
dec
add
push
lcall
dec
jno
cmp
roll
sub
fwait
inc
data16
mov
lock
popa
stos
or
jmp
daa
fcompl
adc
mov
dec
in
jecxz
dec
jecxz
push
mov
aad
xchg
fmuls
loope
lods
xchg
and
adc
daa
add
xchg
mov
push
add
in
mov
xlat
mov
out
scas
dec
or
hlt
adc
mov
add
lock
pusha
push
in
dec
stos
fs
into
insb
out
into
insb
loopne
in
dec
pusha
fmuls
test
out
std
or
cs
jns
lea
pop
inc
sbb
sub
xchg
test
cld
je
aas
pop
sarb
mov
arpl
push
jne
testl
rcrb
inc
jge
push
sbb
stc
pop
call
lea
dec
cmc
ret
test
loopne
aas
movsb
inc
test
mov
push
push
ror
and
fistpl
sub
shlb
sub
mov
test
rcl
hlt
mov
dec
xor
cmpsl
add
mov
addr16
xchg
or
jp
cmpsl
outsl
lahf
aas
test
jo
lods
rol
xor
cld
ret
mov
leave
das
or
cld
mov
sbb
jnp
mov
xchg
sbbb
dec
ljmp
hlt
pop
out
rcll
fsubrl
adc
xorl
xchg
or
les
roll
lcall
or
mov
in
xchg
cli
push
aas
enter
cmp
mov
shlb
pop
in
inc
dec
jbe
inc
outsl
sbb
xor
imul
xchg
and
mov
inc
jo
adc
adc
loope
or
add
mov
adc
mov
fmul
pop
xor
xchg
loop
jecxz
inc
mov
mov
in
add
aaa
mov
sub
xchg
stc
clc
loopne
mov
sbb
xor
inc
mov
sub
mov
cmpsb
adc
push
xchg
pop
cmp
mov
push
mov
cmpsl
add
leave
in
or
inc
loopne
aad
xlat
out
idivb
mov
add
insl
imul
push
daa
sti
add
dec
lods
adc
jecxz
addb
fnstenv
jo
vpcmpeqd
subb
dec
sub
ret
sahf
add
ljmp
loopne
mov
lods
xchg
or
jmp
loopne
je
mov
dec
add
mov
mov
dec
adc
test
popf
insb
xchg
add
dec
fsubrp
xlat
fcompl
xchg
test
push
leave
cmp
arpl
cli
mov
scas
sub
jb
nop
sbb
out
xor
icebp
cwtl
push
pop
push
es
pop
inc
ljmp
sarl
js
std
je,pn
mov
pop
xor
sub
or
jno
pusha
insl
ljmp
lock
in
sarb
dec
sub
or
and
mov
pop
mov
sbb
xchg
inc
pushf
mov
mov
push
fadds
sbb
cmp
mov
out
es
rcrb
inc
add
negl
mov
and
lds
inc
jmp
jno
pop
or
inc
test
scas
adc
loope
push
sub
divl
aam
std
mov
aaa
rorb
mov
inc
sbb
adc
stos
es
das
xchg
mov
push
inc
mov
cs
add
push
or
test
cmp
rcl
or
or
ret
movsl
pop
mov
sub
adc
dec
lock
lahf
shr
mov
jp
into
and
dec
inc
pop
prefetch
or
enter
imulb
test
mov
push
adc
push
repnz
sbb
push
xchg
sub
icebp
out
dec
mov
call
dec
pop
leave
pop
clc
mov
xor
mov
movsl
mov
lods
sbb
push
rcrl
in
orb
xor
lods
mov
cmp
sahf
lret
div
movsb
pop
out
sub
mov
aad
mov
dec
out
mov
jae
xor
inc
or
mov
insb
jp
pop
pop
lods
xchg
enter
jg
pop
cmp
sarl
ret
in
or
and
les
je
into
enter
jae
mov
test
xchg
xor
stos
push
adc
or
mov
cli
mov
adc
and
dec
sub
inc
cmp
jne
scas
xor
addl
jo
pop
pop
popf
mov
int3
loop
leave
inc
dec
pushf
std
mov
das
cmp
lock
push
xor
dec
sub
jl
mov
sub
add
jp
cli
out
cmp
or
int
cltd
cmc
outsl
push
or
xchg
xor
ds
jecxz
popf
add
sbb
adc
pop
imul
and
scas
push
adc
cmp
inc
test
xchg
in
jg
or
repnz
xchg
clc
fs
or
rclb
jp
push
sbb
adc
add
inc
shll
leave
and
pop
and
out
fisubs
jmp
dec
leave
fcoms
shll
ljmp
dec
xchg
loopne
inc
or
aam
and
xor
add
jmp
xor
js
sub
mov
aam
daa
cltd
ljmp
aam
imul
mov
cli
xchg
stos
dec
push
mov
or
clc
rol
jmp
push
xchg
mov
pop
sti
jae
adc
loopne
and
push
fcomps
mov
daa
ror
jl
out
push
sub
test
test
push
fidivrs
inc
pusha
jmp
insl
adcb
dec
inc
fwait
pop
mov
jecxz
pop
sahf
add
and
add
cmpsb
data16
inc
push
fnsave
fmul
mov
mov
les
and
movsb
jo
jle
mov
test
xchg
lods
inc
adc
dec
inc
movsb
lods
mov
int
mov
aas
add
jbe
popa
movsl
sub
cld
sti
inc
mov
inc
int
outsl
pop
xchg
ja
aas
mov
push
xchg
mov
pusha
shll
push
das
push
mov
jl
aaa
mov
out
andb
int3
in
roll
orb
nop
scas
sub
push
jmp
fmul
out
xchg
in
or
jp
repz
push
add
loopne
push
sbb
mov
inc
or
adcb
adc
jmp
cmp
cs
aaa
jp
and
cmp
adc
imul
mov
fsubp
pop
lea
sbb
negb
clc
sbb
incl
orb
dec
in
fdiv
pushf
shlb
popf
sahf
fs
call
jmp
sub
xchg
icebp
test
cs
pop
jbe
mov
fwait
ljmp
pop
enter
cmpsb
sub
addb
ret
jae
add
testl
cmp
rolb
push
adc
pop
dec
int
ror
shl
adc
push
adc
cwtl
int
imull
pushf
scas
cltd
inc
mov
dec
adc
sub
sub
cmp
lds
sbb
add
pause
xor
jo
pop
scas
mov
push
test
inc
lcall
enter
stos
push
or
movsb
mov
push
je
cmpsb
dec
shrl
dec
ret
dec
push
jb
pop
add
loope
or
or
mov
mov
stos
inc
dec
mov
fs
push
stos
jge
dec
mov
push
pusha
shll
jns
push
nop
std
mulb
test
and
and
rol
jmp
and
or
scas
mov
in
int3
push
inc
in
mov
scas
jb
rcrl
pop
cwtl
test
or
pop
mov
test
cmp
adc
push
rcrl
add
sbb
int3
sti
imull
jp
mov
adc
or
mov
aas
hlt
int
mov
mov
push
mov
and
repz
adc
loope
shlb
pop
push
jb
cltd
sbb
ja
into
and
dec
inc
or
imul
in
adc
jns
and
les
js
cmp
fnstsw
idiv
leave
add
scas
pop
fs
or
and
and
sub
call
cmp
xchg
in
icebp
aaa
mov
aad
cmp
scas
sub
or
and
clc
jnp
repz
dec
icebp
in
cmp
fdivr
lock
adc
mov
sub
ds
pushf
xor
add
rcrb
and
icebp
pusha
dec
inc
jge
or
add
mov
fisttpl
addb
or
je
es
mov
sbb
pop
add
pop
push
pop
pop
rolb
fldt
add
cmpsb
mov
aam
mov
pop
xor
mov
out
scas
dec
add
scas
xchg
and
mov
out
icebp
repz
xchg
push
adc
pop
in
cmpb
movsl
mov
cmpsb
into
testb
dec
incl
pop
enter
ljmp
push
addb
and
xor
stos
dec
outsb
lds
stos
mov
dec
mov
pop
and
cmp
in
imul
fdivr
jge
ljmp
dec
and
in
out
repz
jl
enter
imulb
mov
sbb
cmp
inc
inc
nop
xchg
add
and
inc
mov
sbb
dec
add
push
inc
mov
or
pop
push
xchg
mov
push
xchg
sub
dec
cwtl
fisttpll
testb
cmp
fcompl
jae
cmp
pop
popa
stos
inc
and
push
pop
stc
pop
sub
jo
std
pop
inc
xlat
sbb
sbb
dec
mov
rcll
xchg
sub
sub
mov
mov
icebp
mov
rcll
sub
cld
cltd
in
lods
xchg
in
adcl
mov
fisubrl
pushf
out
jmp
push
lcall
fsubr
sbbl
loopne
fs
xchg
add
stos
mov
push
popa
xchg
stos
pop
pop
std
pop
imul
ljmp
scas
xor
lods
mov
rcr
ret
hlt
shll
sbb
bound
cmp
jp
aas
mov
mov
and
cmp
fsubr
data16
jmp
cmp
fldl
jmp
mov
or
inc
jmp
dec
cli
xor
lds
sub
cltd
mov
or
ss
ds
push
mov
pop
ret
mov
mov
aam
das
fldenv
adc
in
pop
or
mov
adc
xor
lahf
pop
jmp
mov
mov
je
out
out
inc
or
fdivl
shlb
xchg
and
fwait
mov
push
cmpsb
test
in
subl
jecxz
dec
or
cltd
sti
icebp
out
clc
clc
jnp
pop
pop
lock
dec
add
add
dec
adc
push
jns
xchg
mov
enter
sbb
jbe
movsl
aaa
push
pop
pop
in
daa
movsl
cld
fsubrp
shlb
rcrl
les
inc
mov
fisttpll
inc
sbb
int3
mov
popf
aaa
push
stc
je
or
hlt
dec
inc
dec
adc
fwait
mov
cmp
inc
movsl
enter
cltd
and
xchg
dec
mov
push
push
fwait
mov
pushf
in
jb
cli
movsb
mov
jne
out
ret
dec
mov
rol
sbb
jle
fbstp
in
out
in
sbb
inc
jb
mov
mov
ret
aaa
or
mov
jg
setl
adc
mov
jp
jmp
xchg
fstp
mov
xchg
and
xor
push
repz
out
xor
cmp
pop
xlat
mov
sti
scas
xchg
fcoml
xchg
sub
lods
insb
imul
dec
cmp
xor
add
les
mov
cmp
sub
jae
dec
adc
mov
inc
fmul
test
inc
or
pusha
orl
stc
enter
dec
pusha
lods
icebp
adc
xchg
xor
test
cmpsl
jmp
push
push
sbb
add
lret
dec
dec
or
imul
clc
adc
push
das
call
sahf
stos
pop
or
fisttpll
or
adc
xor
out
into
pop
or
aad
imul
stos
push
ja
int
xchg
sbb
adcb
test
and
xchg
ja
sbb
jecxz
ss
ds
fstps
lds
mov
insl
test
mov
push
mov
jo
dec
js
inc
rcll
aaa
scas
das
adc
sbb
cmp
mov
push
call
hlt
ss
int3
dec
and
leave
dec
adc
sahf
insl
mov
scas
mov
mov
mov
push
je
or
sbb
jge
sub
xchg
or
adc
mov
push
jnp
push
xchg
bound
outsb
adc
into
push
ss
std
or
sahf
or
rorl
push
andb
outsl
in
xchg
in
lea
lret
xor
and
jmp
hlt
scas
pop
lock
addr16
xchg
inc
fstpl
jecxz
std
xchg
push
or
xchg
dec
adcl
or
repnz
insl
add
mov
xchg
int
and
test
mov
mov
mov
push
js
js
or
or
insl
jb
lods
lret
cmp
insb
pop
iret
lret
addr16
sti
movsl
push
inc
jecxz
xchg
cmp
xor
scas
shll
pop
xchg
pushf
inc
xor
push
sbb
repz
mov
cmp
sbb
push
dec
and
pop
lcall
stos
push
xchg
inc
popf
ficomps
dec
mov
sbb
mov
pop
out
mov
dec
inc
aam
loopne
loop
xor
inc
mov
cmp
aaa
pop
jp
movsb
mov
pop
in
jge
cs
jo
and
rol
cwtl
int3
std
pop
jg
xchg
ds
inc
jl
stos
mov
sub
push
jecxz
faddl
inc
pop
les
shl
sub
xor
je
jp
popa
sbb
sbb
inc
inc
repnz
lret
cld
ret
stos
test
and
xor
shl
sbb
mov
insb
mov
and
cmpsb
mov
enter
xchg
shll
pop
adc
fcompl
test
add
jp
lcall
movsb
jae
sub
rcll
mov
adc
in
ss
stos
leave
sbb
pop
in
pop
outsb
xlat
adc
dec
inc
ret
jmp
and
dec
pushf
loope
inc
pop
clc
xchg
adc
movsb
jne
test
xchg
outsb
ret
nop
std
imul
lods
les
jnp
popl
push
subl
mov
es
pusha
jg
sub
and
aad
xlat
ret
test
loop
int3
stos
lods
fbld
std
stos
aad
sbb
mov
push
mov
bound
mov
ja
lea
fadds
mov
out
add
pushf
stos
lret
in
test
xor
loopne
mov
cwtl
jbe
jg
fnstcw
mov
lret
int3
dec
mov
pop
jp
and
push
sbb
mov
fs
shrb
xchg
fisubs
pop
xlat
inc
lcall
lea
subb
dec
mov
fwait
cmc
and
or
sub
push
out
cmc
mov
in
call
pop
ror
das
add
std
mov
rclb
push
pop
les
inc
pop
adcb
xchg
out
testb
push
imul
pop
jmp
ljmp
aas
shl
push
pop
imulb
notl
mov
gs
sbb
xchg
movsl
dec
sbb
inc
mov
fistpll
cmp
and
lahf
or
or
and
pop
jge
sbb
cwtl
pop
out
xchg
inc
in
sbb
cltd
into
mov
icebp
add
loop
mov
sbbb
fwait
shrb
jecxz
push
mov
incl
sbb
insl
sub
xchg
mov
cmp
adc
in
fcomps
int3
in
hlt
cmp
push
lahf
fsubrl
inc
mov
cmp
daa
popa
int
xor
movsb
shlb
aas
jmp
lcall
std
mov
fildl
ss
sbb
int
mov
and
rcll
imul
sbb
mov
push
sbb
das
and
pop
rorb
xchg
cmp
add
das
mov
or
out
jnp
lahf
xchg
rcrl
movd
das
xlat
lds
xor
leave
mov
enter
in
push
stos
aaa
or
sub
fadds
mov
mov
cmp
jo
pop
mov
int
xor
mov
inc
pop
jo
push
push
lods
jns
push
shl
push
sahf
shrl
mov
jae
pop
cmp
mov
push
js
outsl
sarb
sahf
mov
frstor
push
mov
lret
ret
xorb
sbb
pusha
cmp
leave
mov
arpl
cmp
or
rolb
or
xlat
mov
pop
outsl
loopne,pn
xlat
and
ja
pop
push
dec
leave
dec
push
cmp
or
jae
cmpsb
fistpll
popa
in
or
cli
nop
mov
fildll
pop
fs
nop
scas
sub
cmc
xor
mov
stos
imul
mov
std
sbb
push
mov
xchg
pop
push
jp
xlat
shlb
adc
fwait
dec
jbe
push
dec
or
xchg
negb
rorl
xor
jbe
mov
mov
jb
cld
cltd
in
xchg
cmp
pop
mov
jg
cmpsl
mov
icebp
scas
mov
mov
push
jne
hlt
add
mov
int3
cmp
test
jo
jbe
or
sub
stc
cwtl
jge
add
cwtl
xchg
jecxz
sub
ja
nop
mov
iret
mov
insl
pop
jle
xor
scas
cltd
mov
push
int
jge
aam
lods
add
pop
sub
jno
sub
jne
lods
pop
add
loope
mov
mov
sub
fistl
jae
popf
nop
js
sbb
cmp
sbb
fisubl
pop
sbb
les
push
mov
mov
jns
mov
jge
loope
pop
gs
repnz
xor
gs
jnp
cmp
xor
push
lods
iret
cwtl
out
shrl
int3
addr16
or
jo
push
sbb
aam
mov
sub
mov
adc
sub
ret
push
fdiv
les
adc
ljmp
sub
push
pop
iret
cmp
test
movsb
pop
iret
lods
add
cmp
xchg
aad
cmp
mov
bt
cwtl
inc
cmc
mov
nop
sub
addb
mov
js
fildl
adc
mov
ret
add
adc
and
mov
sub
aas
mov
xor
int3
add
add
ljmp
add
fnsave
and
dec
cmpsl
aam
jp
cs
push
subb
xchg
xchg
rorb
fldenv
xchg
inc
cmp
out
jnp
jmp
test
mov
lahf
cmp
cs
xor
fnstsw
pop
jne
fistps
add
inc
ds
lock
mov
xchg
cmp
push
mov
fcmovnbe
xchg
cli
mov
les
jns
add
imul
es
xor
idivb
int
mov
pop
in
les
in
lea
add
dec
jo
mov
and
loopne
push
pop
and
into
int
xor
mov
xchg
xor
cmp
push
in
loop
in
push
int
bound
dec
cmp
xchg
and
jmp
outsl
cwtl
jp
popf
push
pop
sbb
sarb
cmp
jecxz
adc
inc
sbb
push
sub
dec
xor
mov
mov
test
sub
push
pop
ret
mov
jae
testb
in
sbb
dec
mov
lock
js
push
in
sbb
fcomps
stc
repz
rcl
fildll
adc
in
mov
mov
sbb
in
out
mov
cmp
or
sbb
pop
cmp
ficoml
mov
aam
pushw
cltd
pusha
insl
mov
mov
and
sbb
ret
leave
ret
popa
cmp
notb
jge
add
xchg
jo
add
and
leave
or
hlt
les
lods
aaa
cltd
xlat
repz
mov
sub
push
jo
pop
pop
unpcklps
cmp
clc
jne
shlb
mov
mov
das
lahf
sbb
pusha
and
gs
mov
inc
ljmp
cmp
data16
push
xor
adc
xchg
mov
test
sbb
ret
adc
push
mov
xor
repz
dec
mov
rolb
in
lret
xor
mov
push
fimuls
mov
add
ja
pop
and
arpl
out
cmp
adc
jl
mov
loope
mov
sti
loopne
mov
or
in
jnp
mov
das
sub
ljmp
jge
mov
fidivrs
call
jle
fisttpl
xchg
int3
pop
les
mov
mov
cmpsb
dec
cmc
ficoms
sub
adc
scas
rcr
lahf
lods
fisttpll
ljmp
ret
or
push
sbb
jecxz
jnp
out
adc
xchg
call
int
shlb
push
xchg
mov
sub
bound
test
pop
add
imul
mull
inc
xchg
xor
xchg
aas
mov
sub
imul
or
mov
imul
rcrb
sbb
aaa
xchg
addr16
out
fwait
enter
cmp
adc
popf
pushf
mov
xchg
pop
divb
cltd
push
add
fsubl
dec
pop
adc
out
dec
cs
stc
movsb
cltd
call
insb
sbb
mov
insl
mov
mov
pop
scas
imul
in
push
inc
pop
jnp
xor
add
jecxz
imul
movsb
out
mov
imull
sbb
xor
and
or
or
or
test
mov
pop
mov
pop
adc
out
adc
xchg
lahf
pop
roll
ret
mov
mov
scas
jp
movl
sub
mov
inc
inc
sbb
adc
lea
jmp
mov
jl
ja
or
push
lds
aas
jge
mov
sub
in
push
popa
loopne
ret
sahf
lock
in
test
mov
add
xor
in
mov
sub
mov
push
sahf
xchg
lock
test
jp
outsl
push
lret
pop
nop
rolb
adc
jne
scas
out
js
mov
scas
and
and
insl
leave
popf
enter
or
jae
test
cmp
xor
cli
insl
xor
scas
sbb
pop
arpl
rolb
fcmovne
cs
sub
cmp
xor
mov
into
jle
pop
and
xor
or
aad
mov
dec
jge
shlb
sbb
jp
dec
add
out
adc
mov
gs
xor
daa
test
fildll
shlb
mov
sti
out
test
inc
push
mov
js
cmpsl
pop
es
pop
xorl
fstp
xchg
je
nop
mov
shrb
cmp
aad
sbb
out
and
ds
repnz
mov
jmp
push
dec
jae
push
orl
adc
xorl
jp
fst
les
cmp
xor
cmp
popa
cmp
pop
jne
std
push
out
inc
mov
test
push
or
dec
xor
mov
cmp
adc
mov
inc
dec
pop
cmp
loop
and
mov
fisubrs
push
test
jb
or
sti
clc
pusha
test
jne
aad
popa
mov
sub
repnz
cmp
mov
xchg
test
and
push
lcall
loop
mov
fsubrl
je
mov
dec
cmp
xchg
iret
addr16
dec
cmp
lcall
stos
dec
fmuls
inc
stos
jp
dec
add
mov
add
lahf
and
add
mov
lods
jle
rorb
ret
addr16
push
lods
sub
outsb
fbstp
mov
mov
sarl
inc
out
sbb
mov
stc
dec
mov
push
jmp
mov
and
sahf
aad
pop
call
loopne
arpl
fstpl
rcrl
jecxz
ficomps
mov
fsubs
mov
mov
in
daa
xorl
jb
dec
mov
fisttps
shrd
or
fidivs
or
dec
inc
shlb
sahf
sbb
aad
arpl
mov
jge
sbb
mov
sub
xchg
dec
in
idivl
mov
adc
movsb
or
int3
dec
inc
and
xchg
leave
dec
inc
pushf
pop
adc
mov
lahf
fcompl
xor
out
into
xor
dec
aad
push
cmp
mov
xchg
sahf
xor
outsb
pop
in
add
pop
inc
xchg
mov
cmpsb
stos
sbb
in
xor
push
cmp
xchg
and
xchg
sti
repz
pop
cmp
dec
lea
movsb
and
in
jecxz
lcall
jge
jge
or
pushw
inc
pop
sbb
xor
push
in
mov
data16
and
push
outsb
mov
xorl
clc
hlt
cmp
bound
mov
push
into
lea
or
xor
xchg
js
xchg
dec
mov
xchg
sub
lcall
test
in
jl
imull
movsb
jge
lods
movsb
hlt
nop
scas
push
mov
jl
in
cmp
mov
out
and
icebp
push
jae
popf
push
int
nop/reserved
jle
jle
sahf
xchg
sub
adc
popa
ja
or
rcr
sbb
addr16
dec
cmp
sbb
lret
clc
mov
js
mov
ljmp
ljmp
xchg
into
pop
adc
mov
mov
xchg
clc
into
bound
lods
pop
pusha
inc
push
clc
fcmovbe
inc
fnstcw
mov
cmp
jl
xchg
in
lock
loope
lret
adc
insb
repz
jne
pop
sbb
adc
add
aaa
cmp
leave
mov
pop
out
sbbb
mov
out
cmp
push
mov
test
xlat
mov
inc
stc
xor
rorb
xchg
sub
cmp
cmp
stos
jno
int
inc
pop
sub
loop
aaa
daa
mull
adc
loope
sbb
movsb
or
xor
mov
insb
sub
imul
jmp
pop
jbe
adc
ss
aam
movsl
jmp
dec
xor
fdivrs
adc
shrb
scas
fucompp
jno
lahf
jge
sbb
movb
adc
sbb
pop
xchg
mov
enter
jp
push
jmp
inc
pop
jg
dec
sbb
les
loop
mov
pop
mov
jne
fildll
lods
and
std
nop
xor
in
jo
aam
xor
push
dec
pop
ret
imul
insb
pop
sti
sub
mov
mov
js
sub
shlb
xor
popf
push
mov
xchg
cs
outsl
daa
test
xor
loopne
sbb
inc
push
stc
sub
xor
lock
jns
mov
sbb
mov
sahf
fstps
sti
sub
fisubrs
stc
daa
pop
lock
sarb
xchg
cmp
nop
gs
xorl
stos
loopne
out
scas
mov
aaa
jmp
cli
roll
cs
hlt
add
rcrl
mov
sahf
dec
xor
test
test
mov
jns
or
cmpb
inc
cltd
pop
test
adc
lds
or
jecxz
add
hlt
xor
cwtl
inc
push
dec
pop
and
sub
sbb
movsb
in
xor
jne
lahf
xchg
gs
fwait
enter
popf
mov
ss
outsb
inc
and
sub
fldenv
and
inc
mov
das
fldcw
sub
aas
into
int
rorb
xor
lea
pop
rcrl
xchg
xor
movsb
ds
into
in
fstpl
mov
cld
inc
cmpsl
das
scas
in
xor
lret
cmp
mov
mov
lock
hlt
aas
mov
test
fldt
jbe
xchg
dec
ficompl
cmpsl
adc
mov
outsb
fistl
fistpl
invd
jge
ja
fsts
xchg
out
pop
xor
mov
movsb
push
cmp
iret
in
jp
mov
filds
xchg
xor
out
pop
mov
mov
out
and
leave
fsubs
aaa
inc
cwtl
dec
les
xorb
arpl
pop
xchg
mov
in
inc
xlat
clc
loopne
mov
xchg
call
imul
or
loope
lahf
je
in
insl
push
jb
loope
sti
mov
aas
jae
push
insb
jge
dec
jo
xchg
cmp
outsb
sub
fwait
jg
sub
cmp
inc
outsb
pop
dec
add
shl
adc
inc
xor
or
cmp
cmpsb
aas
push
jmp
sbb
xchg
mov
shll
lods
mov
bound
ss
out
loopne
adc
outsb
cmpsb
movsb
pop
inc
lcall
xchg
xor
pusha
and
ds
cs
mov
sub
ret
dec
into
test
push
and
add
mov
out
call
scas
sub
mov
int3
rclb
push
xchg
jle
loop
inc
ror
stos
add
adc
mov
test
xor
lods
fistpll
icebp
push
stc
dec
in
dec
xchg
ret
mov
pop
popf
ljmp
inc
out
int3
sbb
mov
dec
sub
dec
mov
out
fmull
aam
xor
inc
sbb
popa
jmp
sub
cld
sbb
push
lods
mov
repz
jbe
add
jl
div
outsl
sbb
lret
push
mov
lods
or
dec
fildl
pushf
inc
clc
scas
cmp
and
xor
leave
pop
cli
loop
adc
xor
scas
push
xchg
lods
in
jle
sbb
ret
push
dec
lock
leave
cmp
push
mov
sbb
hlt
lahf
xchg
fimull
je
mov
jp
jb
add
adc
add
sahf
pop
scas
inc
push
or
xorb
call
push
test
push
sub
icebp
xor
cmp
xchg
jmp
loope
aas
add
fisttps
or
sub
mov
mov
inc
xchg
adc
sub
add
out
addr16
movsb
arpl
fwait
push
push
push
mov
sbb
inc
lcall
mov
int3
andb
lea
adcl
or
xor
mov
out
nop
fists
scas
lret
sub
aad
adc
mov
popf
add
sub
loope
jns
cmp
or
int3
pushf
push
adc
mov
mov
or
repz
pop
sub
mov
out
js
sarb
call
cmp
adc
pop
cmp
push
sbb
lds
mov
push
shrb
shrl
nop
inc
fcmovu
gs
inc
imul
js
mov
adc
pop
in
pushf
mov
dec
jb
cmp
ljmp
pop
iret
insl
sar
out
arpl
shrl
lcall
dec
push
popa
cmp
dec
pop
push
shl
into
mov
jp
xchg
jmp
into
add
mov
aaa
outsb
adc
pop
xchg
test
dec
jg
fwait
jnp
mov
lea
push
push
addr16
fists
mov
loopne
stos
push
xor
xchg
mov
es
mov
xchg
pop
pop
mov
jge
jle
mov
sbb
xchg
xchg
inc
lret
sbb
outsb
lods
lods
add
leave
test
inc
jecxz
sub
jne
inc
lods
inc
push
jns
pshufw
ror
xlat
mul
outsl
imul
pop
aad
ljmp
sub
pop
sbb
fidivs
xor
movsb
cld
sahf
xchg
jle
jbe
insb
rcl
or
int3
aas
das
cmp
popa
int3
or
xor
cld
mov
or
mov
mov
mov
in
stos
aaa
int
mov
aas
or
inc
push
test
or
inc
push
popa
jg
dec
dec
out
call
pop
into
or
aad
clc
dec
imul
aaa
jno
or
sbb
push
hlt
push
adc
xchg
hlt
cmpsl
dec
daa
mov
je
xchg
xchg
subl
test
out
loopne
pop
lods
xchg
ret
push
dec
pop
fstl
inc
cli
ficompl
xchg
daa
xor
repnz
clc
sti
xlat
push
mov
jl
push
cmp
lea
lahf
adc
outsl
repnz
push
fs
adc
add
mov
scas
cmp
rcrb
and
cmp
cwtl
push
and
stos
mov
sub
ljmp
fsincos
lret
inc
hlt
jecxz
testb
dec
repnz
xor
pop
dec
and
scas
cmpsb
lcall
jmp
push
pop
push
mov
mov
sarl
adc
mov
pusha
jmp
pop
mov
pop
mov
or
pop
xor
mov
inc
mov
sbb
adc
ja
aas
and
add
inc
ljmp
mov
ret
xor
loop
repz
mov
sub
cmp
imul
iret
mov
mov
pop
cmp
clc
stc
out
test
xchg
and
and
roll
pushf
adc
inc
iret
push
stos
fisttps
fstpt
cmp
push
lock
pop
and
sbb
push
cmp
outsl
jo
ret
inc
and
xor
lcall
insb
arpl
jnp
dec
arpl
jg
sub
sub
popa
in
stos
mov
cmc
add
in
cmp
cwtl
dec
pop
mov
pushf
leave
mov
inc
std
jg
xchg
mov
lock
andl
jg
out
mov
mov
mov
cmp
fstps
dec
xor
sarl
cmp
out
push
inc
call
lods
and
ret
ret
iret
pusha
or
jno
xchg
ret
mov
mov
xchg
inc
jle
nop
fldl
adc
cmp
pop
xchg
pop
cmp
lcall
icebp
pop
notb
sub
lcall
bswap
lea
and
mov
or
ja
push
push
pop
sbb
mov
dec
js
mov
inc
stos
mov
mov
jb
sti
xor
push
sub
adc
xor
jb
ss
test
sub
xor
mov
jg
lea
and
mov
mov
cltd
outsb
jo
pop
aad
mov
popf
jnp
adc
adc
xchg
inc
nopl
inc
dec
pusha
sbb
cmp
loopne
leave
adc
aas
neg
adc
andl
ret
lds
adc
outsl
in
dec
sub
cwtl
mov
jge
push
out
loopne
adc
sub
test
xchg
je
cs
inc
adcl
sub
dec
pop
fsubl
test
cltd
push
popf
lret
cmpsb
scas
lods
push
movsb
sub
fwait
stos
das
lahf
testb
mov
fdivrl
movsl
and
es
scas
inc
js
push
and
je
data16
out
mov
add
inc
pop
fmull
push
fwait
mov
and
aaa
dec
cmpsl
jecxz
xor
in
mov
xor
sub
cmp
cld
pop
cmp
rcl
sbb
inc
adc
mov
xor
push
add
std
lea
jecxz
xor
ret
inc
das
xorl
xchg
ss
pusha
push
lods
fwait
movsb
bound
and
or
mov
popa
int3
mov
lret
adc
dec
arpl
scas
inc
stc
adc
xchg
xchg
and
add
mov
adc
xor
lcall
ret
cwtl
adc
nop
popa
jo
rclb
sbb
mov
dec
mov
pop
sti
adc
sbb
test
mov
mov
dec
mov
cmpsb
add
fidivs
mov
add
scas
xchg
hlt
rorl
cmc
push
aaa
dec
or
nop
stos
xor
add
and
ret
sub
aaa
sub
data16
sub
insl
push
pop
sbb
mov
add
sub
jp,pt
filds
push
adc
mov
cmp
movsb
add
or
inc
pop
addr16
test
cmc
lods
mov
mov
sbb
dec
cmp
xchg
pop
mov
cmp
hlt
sbb
jae
stos
call
push
mov
sbb
add
ret
cmp
cs
sti
hlt
sbb
iret
outsl
sbb
fisttps
and
xchg
imul
testl
push
fsubrl
mov
cmc
pushf
adc
xchg
cmp
iret
xchg
or
add
roll
pop
leave
loopne
mov
fcoms
hlt
jle
js
lret
lds
cmpsl
jns
lret
adc
mov
lock
fisubrl
or
jl
aaa
sti
xchg
lods
inc
sbb
cmc
pop
aas
test
adc
jmp
mov
mov
xchg
xchg
mov
lds
fnstcw
call
pop
mov
icebp
scas
add
adc
cmp
das
lret
cmpl
dec
push
fdivrs
sbb
cmp
outsb
inc
mov
sub
jmp
lret
dec
cld
outsb
dec
pop
adc
sahf
sbb
mov
or
insb
xchg
sbb
jae
sbb
cmp
inc
xchg
test
adc
scas
inc
mov
jnp
inc
sarl
xor
adc
fsubp
icebp
jmp
cwtl
mov
mov
xor
popf
stos
test
stc
cmc
es
or
mov
and
xchg
pusha
and
das
mov
fimuls
mov
inc
xlat
adc
mov
inc
out
sub
arpl
shrb
sbb
in
push
int3
call
loopne
pop
das
loop
shlb
icebp
dec
movsl
mov
call
sbb
mov
in
push
jmp
dec
stc
xorb
jmp
outsl
xor
pop
sub
push
das
sbb
inc
jmp
mov
fidivs
in
sub
icebp
pop
popa
add
sub
stos
jg
pop
pop
nop
je
stos
call
int
fadds
xor
jno
mov
outsb
ja
cmp
scas
dec
fwait
cmp
mov
outsb
testb
dec
pop
xor
popf
enter
cmp
movsb
push
pusha
add
iret
jb
adc
pop
push
mov
push
das
roll
enter
jecxz
sahf
cmp
sbb
imul
pushl
ds
add
les
aad
outsb
mov
cmp
mov
shrb
adc
mov
pop
and
sub
repz
mov
and
inc
jge
or
push
mov
aad
sbb
das
push
inc
mov
fiaddl
push
stos
ficoml
popa
stc
into
add
mov
loope
push
bound
cmp
cmc
int
icebp
jp
aas
pop
mov
ret
stos
mov
in
xchg
fcomp
sbb
hlt
out
test
dec
pop
into
sub
packsswb
adc
or
cmp
pop
inc
imul
mov
mov
daa
and
test
imul
pop
adc
in
loop
das
push
cmp
sbb
mov
incl
mov
fdivrl
xor
mov
stos
mov
js
fsubrp
add
cld
clc
mov
pushl
pop
mov
cld
mov
cmpl
or
mov
clc
stos
dec
pop
test
sub
jp
insl
rcrb
mov
jo
xor
xlat
shll
rclb
xchg
lds
mov
sub
push
in
shll
stos
fcoml
or
cmp
mov
js
mov
loope
insl
cmpsb
and
xor
and
movsl
sbb
popf
fs
mull
jno
sbb
push
jno
imul
call
out
sub
sarb
and
popa
movsl
test
and
jmp
test
rcrb
cld
xor
dec
sbb
fiadds
dec
jecxz
test
push
dec
or
jbe
icebp
push
fcmovnbe
ljmp
mov
jno
dec
iret
rolb
cmc
add
jmp
ret
ror
lahf
icebp
aaa
mov
movsl
inc
loop
xor
mov
ljmp
cltd
int
mov
adc
repz
pop
scas
sbbl
hlt
mov
insb
ja
or
testb
shl
rorl
push
xchg
xor
and
in
mov
lret
cmp
rcrl
sub
loope
out
inc
fadds
outsb
in
scas
addr16
cld
mov
push
imul
and
shl
les
add
mov
cmp
mov
lock
push
aaa
jnp
sbb
test
and
fsqrt
lahf
popf
int3
adc
movsl
and
je
mov
fisttpll
sbb
insl
push
mov
jno
sub
es
xor
stc
cs
outsb
inc
add
xchg
rcr
xchg
arpl
mov
cmp
fidivs
ja
pop
out
sbb
dec
shlb
dec
fwait
mov
sbb
push
push
cmp
fwait
mov
mov
mov
pop
cli
rorl
ret
adc
dec
sbb
or
jge
cmc
mov
aam
aaa
mov
in
movsl
nop
xchg
stc
pop
ljmp
popf
loope
jle
pushl
mov
test
sbbl
lahf
arpl
xor
pminub
flds
out
mov
sbb
mov
out
push
dec
movsb
sbb
cmp
mov
cmc
fdecstp
fisttpll
lods
add
lds
hlt
and
repz
adc
out
mov
jne
jmp
rcl
xor
mov
popf
dec
dec
cmp
je
cmpsl
or
in
jp
jp
dec
xchg
loopne
dec
cmp
adc
mov
jae
test
daa
shrb
pop
in
dec
push
xchg
stos
cli
dec
and
xor
pushf
stc
pop
fdivrp
imul
in
jmp
fdivrp
out
cmp
inc
into
je
push
xchg
cmp
jl
inc
add
and
and
rorb
mov
cmp
push
hlt
or
int3
jp
cmp
std
in
lods
or
sub
cld
pusha
xor
arpl
fisttpll
jl
sti
pop
repnz
fistl
in
out
and
popa
add
arpl
push
dec
cmp
mov
fcompp
xlat
add
jp
int
inc
gs
xor
xchg
or
mov
adc
test
pop
xchg
insb
jb
ss
loope
mov
iret
mov
mov
mov
fcmovbe
cmc
js
cmp
xchg
lea
adc
test
in
pop
fdivrp
jmp
cmc
sbb
jecxz
cmpsb
pop
cmp
lock
loop
xor
popf
pop
hlt
mov
mov
mov
cmpsl
mov
push
lret
mov
adc
xchg
or
mov
shll
xlat
clc
cmp
lock
dec
pushf
scas
cmp
bound
add
or
jp
mov
xorb
push
loope
adcb
add
dec
push
and
out
adc
outsb
arpl
add
jg
std
mov
mov
inc
mov
imul
jo
rcll
shr
mov
icebp
pop
aam
leave
and
push
icebp
sbb
fmuls
and
daa
aaa
cmp
lods
fwait
mov
push
mov
imul
mov
fstps
push
mov
dec
or
bnd
fwait
rcrb
mov
dec
cli
out
xor
lea
or
push
mov
cmpsb
call
xor
pop
ljmp
inc
mov
in
add
and
mov
mov
into
add
or
call
mov
popf
ficompl
gs
dec
jge
aaa
enter
mov
mov
dec
inc
mov
in
push
cmp
xlat
pushf
loop
adc
roll
fsubr
pop
mov
dec
push
clc
imul
aad
sbb
xchg
inc
and
stos
test
mov
lret
movl
test
mov
add
aam
or
push
addr16
push
and
dec
add
mov
mov
test
mov
in
inc
in
shlb
xchg
dec
insl
mov
sarb
jmp
mov
jnp
inc
mov
jb
dec
sbb
es
loope
cmp
push
shlb
clc
push
cmpl
dec
push
add
cmp
xor
jno
ficoms
and
mov
ffreep
mov
jnp
cmpsb
cmpsb
lcall
push
ja
inc
loop
pusha
xchg
addb
adc
mov
sbb
arpl
or
pop
sub
faddl
ret
icebp
dec
push
adc
adc
dec
fs
cltd
in
in
nop
sbb
jp
push
in
cmp
lods
jae
xchg
xchg
aad
add
fdivl
xor
loope
test
hlt
cmpsb
repnz
cmp
sti
ds
jge
xor
jle
xchg
shr
add
push
cmp
xor
test
or
jbe
aaa
fnsave
ss
pop
bound
mov
test
stos
je
daa
int
mov
rorl
push
loope
lds
into
ficoms
jno
dec
cs
shl
lds
ret
shrl
xchg
out
daa
mov
inc
jge,pt
test
aam
xchg
adc
sbb
add
mov
mov
push
out
cld
out
fs
sub
mov
pop
push
hlt
stos
fwait
mov
mov
mov
mov
jb
sti
inc
xchg
xchg
push
mulb
addr16
ljmp
pop
xchg
sbb
add
test
out
pop
stos
xchg
shl
adc
out
add
push
push
or
push
notl
sbb
fld
jecxz
jae
sbb
outsb
sub
xchg
lods
int3
mov
lock
cli
sbb
push
dec
add
mov
test
add
outsl
nop
fcomip
dec
stc
add
xchg
jmp
cmp
jmp
mov
les
xorl
cmp
xlat
cmpb
mov
mov
add
sub
xor
mov
push
insb
jb
push
adc
or
std
arpl
mov
lods
aaa
outsl
insb
leave
push
lcall
pop
sbb
and
std
test
shlb
aam
je
cmp
iret
inc
aad
sbb
out
loopne
imul
jle
mov
dec
cmpsb
aaa
pop
xor
and
inc
js
imul
sar
fsubs
int3
in
in
cs
sub
push
jp
inc
inc
jp
inc
cmpsl
mov
in
or
loope
xchg
push
movsb
in
xor
aaa
mov
xchg
add
mov
aaa
sbb
in
int3
bound
sbb
pop
jbe
fisttps
jge
call
lcall
ds
mov
dec
test
cmc
das
push
sub
add
and
add
test
inc
sbb
cmp
out
lret
mov
xor
sbb
clc
js
inc
cwtl
aas
and
mov
popf
imul
jl
testl
jno
mov
inc
lret
cmp
xchg
mov
sti
push
ljmp
cs
movsb
pop
loopne
insb
leave
test
lock
cmp
bound
mov
call
pop
jge
mov
inc
data16
mov
popf
and
cmp
push
popf
jbe
stos
fisttpl
push
shlb
dec
mov
push
cmp
fs
cmp
dec
sbb
pop
imull
sbb
int3
pushf
outsl
fadds
loope
lahf
aaa
push
test
add
dec
sbb
sub
add
sub
sahf
cmp
xchg
out
mov
bound
pop
sub
and
cmp
or
sub
clc
movsb
adc
jae
inc
inc
and
rolb
inc
and
mov
nop
push
mov
test
rclb
xchg
dec
push
cmp
jge
sub
sub
mov
lret
dec
dec
xchg
xchg
clc
and
adc
dec
jl
lahf
out
sti
in
lds
mov
xchg
test
jno
cmp
and
pop
sub
adc
xchg
std
ret
dec
cltd
dec
js
out
cli
dec
jno
cmp
mov
mov
sub
add
add
or
push
rcrb
and
push
push
ficoml
adc
sbbl
inc
xor
push
push
inc
sbb
and
add
xor
mov
dec
and
iret
int3
fsubs
test
mov
lea
xor
xor
shll
or
mov
xor
xor
pop
stc
fistpl
fists
and
stos
cwtl
mov
mov
stos
daa
push
adc
mov
stos
mov
test
add
or
pop
outsl
push
dec
or
xlat
dec
and
jg
data16
cs
pop
flds
inc
enter
shlb
and
jecxz
sub
sub
mov
jge
push
subb
mov
mov
ss
jmp
ret
cmp
mov
inc
dec
adc
and
jmp
cmp
loopne
cmp
imul
xor
add
std
out
mov
and
xchg
xchg
movsl
and
shl
mov
push
push
mov
arpl
mov
sahf
push
sbb
andl
data16
and
nop
cs
mov
and
mov
les
jns
adc
jmp
dec
testl
fldt
dec
jge
test
sub
je
fisttps
or
je
mov
inc
dec
jne
xchg
imul
or
in
and
adc
sbb
push
dec
mov
inc
pop
cmp
movsb
and
mov
dec
enter
pop
fs
cmpsb
lods
data16
loopne
mov
leave
inc
dec
int
mov
ss
lret
sub
repz
jb
fdivs
das
scas
popa
inc
mov
hlt
mov
in
xor
jge
shll
scas
jae
mov
int3
inc
jmp
stos
in
lret
xchg
push
insb
outsl
notb
or
xor
dec
add
jge
movsl
test
mov
cmp
and
and
in
jp
mov
xor
cmp
daa
pop
jge
stc
sbb
mov
mov
negl
xlat
call
and
mov
lahf
out
adc
dec
dec
dec
cmpsb
and
dec
lret
outsb
jbe
or
das
inc
adc
jle
xchg
mulb
faddl
jmp
xchg
xlat
xchg
pop
addr16
lods
adc
cmc
mov
mov
fsts
mov
sbb
sub
shll
inc
test
rol
push
push
iret
jmp
push
mov
pop
das
clc
or
jp
and
loopne
data16
adc
mov
jmp
sub
dec
sub
rcrb
ret
jle
sub
ja
fildll
call
sbb
rclb
push
fimull
sub
add
addl
jne
push
add
fmuls
js
test
push
and
xchg
lods
and
fsubrs
adc
pop
bound
push
ljmp
mov
mov
loopne
xchg
cltd
push
push
into
xchg
cltd
mov
adc
je
and
jo
adcb
mov
dec
sub
and
scas
cltd
lock
arpl
das
mov
add
add
inc
mov
add
les
scas
xlat
fistpl
mov
sti
inc
lods
leave
loope
jge
push
int
and
xchg
lea
or
or
gs
mov
pop
pop
push
lcall
movsb
pop
fwait
adc
mov
jp
cltd
xor
jbe
ljmp
dec
outsb
hlt
fiaddl
or
inc
jl
pop
mov
push
es
dec
xchg
sbb
rcrb
aam
stos
int3
pop
mov
shll
dec
sbb
sub
xor
idivb
pop
mov
out
add
push
jg
push
jmp
out
incl
aad
repnz
scas
out
push
push
pop
loopne
sarl
mov
sbb
fdivl
or
jge
mov
cld
aaa
stos
sbb
ficompl
ficoml
insl
loope
xor
int3
fs
add
imul
and
out
cmp
mov
xlat
sbbl
mov
das
xorb
and
jb
imull
loopne
or
out
ret
push
push
cmp
das
jmp
dec
or
xor
dec
mov
inc
ret
xor
pop
add
sti
and
jno
test
mov
push
inc
xchg
inc
hlt
orl
mov
ja
addr16
pop
loopne
stc
scas
cs
or
std
sub
jg
add
sbb
xchg
mov
mov
xchg
dec
jge
push
sub
mov
lcall
xrelease
xchg
pop
cli
push
daa
inc
adc
add
pop
xor
pop
iret
loope
fbstp
mul
push
out
inc
bound
and
sub
mov
imul
jne
or
cmp
dec
pop
pop
cltd
jp
pop
or
lock
pop
fs
movsl
dec
sbb
loopne
push
popf
push
movsl
mov
xor
or
or
xchg
scas
push
mov
sub
jle
testl
inc
in
lret
out
andb
xor
bound
mov
stc
jne
or
in
inc
and
repnz
pop
idivl
pop
or
mov
xchg
mov
pop
pop
adc
pop
sub
adc
sub
pushf
imul
xchg
addr16
sbb
lods
mov
xchg
sub
jg
cmp
sahf
decb
push
add
leave
mov
push
addl
or
mov
jp
daa
sbb
in
add
stos
cs
test
add
das
or
insl
mov
push
xchg
mov
popf
sub
out
loop
icebp
and
pusha
adc
je
lods
addr16
lcall
test
es
xchg
and
les
add
xor
add
test
mov
imul
les
pop
and
and
mov
sub
imul
orl
scas
or
in
dec
mov
jne
insl
push
pop
mulb
lahf
cli
push
enter
test
push
add
xlat
mov
xchg
adc
or
mov
fdivp
pop
adc
push
xor
adc
xor
dec
inc
or
ljmp
test
insl
test
pop
xchg
jnp
sub
add
loope
add
xchg
add
push
push
pop
ja
mov
repnz
sbb
out
mov
pop
add
cmp
and
cld
sarb
popw
add
or
lahf
repz
xchg
js
hlt
stc
mov
mov
lahf
sub
adc
out
std
je
push
and
out
cmp
cs
or
cmp
xorb
pop
push
rol
insb
loope
pop
push
xchg
and
push
add
pop
xor
or
dec
xor
ss
adc
decl
movsb
adc
push
mov
dec
xchg
jge
ficompl
dec
cmpsl
ret
sub
jmp
cmp
inc
out
cwtl
dec
movsb
leave
fdivl
cs
mov
pop
mov
jmp
pop
pop
sbb
rorb
mov
lock
mov
je
mov
dec
pop
sbb
pop
lock
shl
mov
call
push
aam
fisttpll
movsl
mov
sub
fidivl
push
in
cmp
jbe
pop
pop
repnz
mov
mov
movsb
mov
and
mov
je
lahf
mov
sbb
sub
mov
mov
jbe
or
and
cs
or
xor
pop
adc
mov
jae
sbb
cmp
or
leave
mov
and
fwait
les
das
in
lock
shrl
mov
mov
pop
out
data16
add
xchg
cmpsb
fisubl
iret
test
insb
push
pop
jne
out
or
jle
gs
sub
out
mov
mov
dec
ret
in
sar
xor
imul
xchg
xor
pop
jae
mov
in
push
sub
jno
xor
ja,pt
push
addb
pop
ljmp
cmp
dec
int
popa
sbbl
push
gs
aam
into
int
xchg
pop
jle
push
out
or
fdivrs
jp
inc
mov
int3
xlat
fwait
mov
rolb
jns
pop
mov
or
jge
xchg
in
sub
nop
je
movsb
and
arpl
sbb
sub
mov
mov
popa
stos
and
inc
hlt
incb
adc
rcrl
ret
mov
jb
xchg
push
addl
adc
xor
add
add
or
lock
xchg
xor
xor
xchg
or
xchg
inc
pop
flds
leave
rorb
clc
int3
adc
je
pop
add
scas
in
push
cmpl
imul
repnz
and
scas
cmc
inc
pop
insl
add
rcr
push
sbb
add
cwtl
fs
lcall
xor
insb
mov
or
fadd
enter
rcr
jns
push
mov
xchg
jg
inc
and
insl
mov
cmc
in
add
shlb
ret
push
in
pop
scas
iret
arpl
cmpsl
jg
cmp
inc
add
jg
shl
mov
aam
lock
sub
jmp
adc
addr16
gs
mov
fidivrl
pop
mov
aam
xor
sub
jb
mov
jmp
movsb
js
sub
les
adc
test
jmp
es
pop
aaa
test
leave
cld
test
test
mov
test
sbb
mov
and
aaa
mov
jecxz
push
or
mov
cwtl
pop
leave
xchg
mov
push
jle
sti
dec
jae
adc
inc
dec
xor
out
xor
fidivrs
scas
mov
mov
daa
call
aam
xchg
mov
in
dec
popa
push
xchg
aad
xchg
leave
mov
pushf
movsl
data16
push
aam
adc
sub
and
cmp
mov
shlb
stos
insb
mov
mov
test
fidivs
shll
loop
adc
pop
mov
xchg
outsb
push
jecxz
pop
mov
dec
adc
aad
ja
mov
pushf
jns
jnp
dec
aas
xchg
push
jl
or
mov
push
inc
mov
and
add
inc
icebp
xor
scas
outsl
sub
or
sub
or
pop
mov
lret
sub
outsb
lret
scas
gs
dec
mov
inc
mov
pop
ret
mov
out
lret
sub
push
add
or
unpcklps
mov
sub
ja
cmp
stos
or
xchg
xchg
and
and
std
or
repnz
jp
aaa
int3
or
mov
adc
xlat
xor
inc
out
pushf
imul
mov
cld
push
mov
cmp
xchg
mov
adc
adc
pop
aaa
add
cmp
and
push
pop
fwait
jnp
lea
enter
xchg
cli
ret
repz
cwtl
mov
aad
imul
mov
sbb
in
dec
scas
lods
cmp
rolb
aaa
and
jl
or
inc
out
xlat
jp
jb
sub
cli
aaa
adc
sti
pop
dec
jmp
test
fidivrl
xchg
mov
inc
and
sbb
fs
fsubl
cltd
inc
and
paddw
and
nop
je
sbb
pop
pop
sbb
test
push
outsb
xor
arpl
mov
sub
cmc
out
jae
outsb
loop
xchg
lcall
ficoml
push
xchg
clc
lahf
jecxz
ret
movsl
pop
arpl
cli
sbb
ret
loopne
cmp
dec
xlat
fld
sbb
gs
shrb
aas
lock
jno
les
ja
cmp
or
lods
aas
fldl
imul
imul
inc
jo
jge
enter
mov
pop
mov
jle
xchg
and
notb
jbe
jl
push
int3
cmp
xchg
out
and
push
pop
xchg
cltd
adc
shrl
out
mov
and
dec
fsub
cmp
pop
pop
jecxz
adc
pop
lea
aad
outsb
pop
scas
enter
movsb
add
mov
cmp
ljmp
loopne
dec
and
testl
loop
cmp
pop
adc
push
pop
push
jmp
sub
mov
push
setns
nop
notl
popf
xchg
mov
add
lret
jl
popf
inc
data16
testb
pushf
jecxz
sbb
or
jns
mov
adc
inc
or
dec
test
push
dec
sub
dec
ret
xor
out
fld
xchg
loope
pop
adc
mov
sbb
cmpsl
lcall
fadd
sbb
pop
push
sub
push
ret
add
pop
inc
es
inc
rcrl
mov
aad
dec
flds
cmp
mov
jno
int
jl
mov
test
aad
out
xchg
push
cmp
adc
notl
shr
dec
repnz
mov
push
test
mov
and
aam
sub
or
std
ficoml
mov
dec
and
and
mov
aas
push
cltd
or
xchg
jb
lds
and
gs
and
pop
dec
pop
shll
addr16
push
repz
and
andl
fsubrl
jnp
mov
sbb
mov
dec
in
popa
and
pushf
add
fcomp
inc
jne
mov
jo
cmp
lea
xchg
xchg
mov
pop
std
mov
pop
loope
aaa
lea
push
rorb
or
mov
jle
stc
dec
and
addr16
jle
cmp
sbb
jecxz
imul
decb
and
mov
cmc
int3
pusha
lahf
mov
mov
pop
xor
loopne
jecxz
shl
ljmp
in
mov
xor
push
les
mov
mov
out
aaa
mov
loope
sub
push
fdivrl
mov
out
mov
dec
sub
inc
stc
in
pop
mov
inc
arpl
cld
pop
clc
mov
and
out
xchg
sub
inc
ss
aad
shrb
jno
cwtl
pop
add
xchg
std
xchg
add
sahf
ret
mov
mov
mov
jae
flds
stos
and
xchg
shr
dec
jno
xchg
jle
cmp
out
ljmp
rcl
add
cmpsl
lea
add
jle
fmull
jle
not
mov
movsl
jnp
push
push
sub
jg
pop
jnp
cmp
hlt
out
sbb
sbb
repz
inc
pop
inc
mov
cwtl
sbb
scas
sub
jbe
adc
sbb
in
lcall
lahf
lods
outsb
mov
and
stos
addr16
ret
jg
icebp
ljmp
cmpsb
outsl
mov
or
cwtl
test
jecxz
inc
rcl
and
clc
pop
inc
sub
pop
adc
sbb
push
mov
xchg
cltd
fdivrl
jecxz
std
and
fiadds
adc
ficoml
roll
ds
movsb
jnp
pop
mov
dec
dec
pop
stos
cli
mov
rcrb
loope
fldt
xor
pushf
push
shrb
fwait
pushf
push
incl
insl
push
pop
repnz
mov
push
test
cmp
subl
call
sbb
data16
mov
mov
hlt
sbb
cltd
es
sbb
out
popa
jnp
inc
imul
mov
mov
lret
cmp
pop
jbe
mov
les
lea
das
sub
inc
mov
imul
mov
sub
insb
fisttps
mov
pushl
and
enter
lods
jge
sbb
inc
xor
dec
iret
out
leave
mov
push
add
in
xor
icebp
jl
push
push
dec
jne
out
or
aad
daa
arpl
ds
jo
xchg
jp
imul
sub
in
test
bound
stos
pop
pcmpeqd
daa
and
pop
add
aas
in
mov
mov
movb
xchg
pop
insl
xlat
sub
repz
inc
iret
idivl
sarl
xor
out
jle
sbb
pusha
pop
mov
rcrl
data16
bswap
xchg
mov
jne
jnp
fsubl
push
ljmp
fildll
dec
mov
mov
mov
xchg
jno
push
fimull
xor
mov
shlb
inc
or
cs
mov
jo
fneni(8087
stc
inc
dec
xor
cmc
sbb
mov
push
ss
pop
pop
jb
cmp
sub
cmpl
lret
rol
mov
lds
imul
popa
mov
lcall
cmc
call
repnz
dec
mov
cwtl
sub
mov
mov
jbe
inc
aaa
xor
add
mov
aas
fs
xchg
mov
xchg
pop
jb
int3
pop
mov
mov
pop
jmp
cmp
push
adc
into
stos
repz
arpl
mov
cs
push
add
pop
push
xor
sub
aaa
xor
das
insb
xchg
jno
and
loope
mov
pop
cmp
dec
dec
mov
dec
sub
pop
jg
mov
pop
testl
lret
fdivrp
cld
das
dec
subb
and
mov
cmp
lret
dec
xor
push
test
pushw
into
shr
jne
xchg
inc
cmp
mov
lods
inc
dec
push
ret
ret
pop
lods
adc
daa
push
in
mov
fs
inc
xor
loop
or
mov
mov
stos
je
pop
loopne
push
jno
jg
in
mov
jae,pt
int3
xchg
daa
mov
ror
sti
data16
mov
push
inc
xchg
leave
jae
dec
mov
mul
or
out
jb
out
testb
je
fidivrs
das
dec
dec
jns
mov
outsl
ret
aad
pop
enter
jns
out
iret
jae
cmp
pop
ficoms
xchg
inc
leave
sub
cmpsl
jbe
mov
jecxz
hlt
rcpps
out
rorl
out
mov
popa
dec
outsl
outsb
jbe
pop
sbb
rclb
rolb
lods
imul
lret
xor
xor
and
cmp
and
subb
cmp
lahf
ret
xchg
insl
mov
ret
dec
hlt
mov
mov
mov
into
mov
and
popf
outsb
jo
stos
or
xlat
pop
cmc
or
lfence
inc
mov
movsb
test
sub
into
pop
aam
pop
es
inc
add
add
mov
adc
fidivs
mov
es
mov
or
test
inc
push
push
adc
push
and
sub
add
adc
movsb
mov
mov
jge
cmp
imul
mov
adc
ja
jae
add
or
push
into
pop
mov
mov
rclb
fistpl
add
jnp
sub
in
lods
out
jo
int
or
xchg
push
sub
cmpsl
jmp
stos
fisubrl
into
dec
sub
lods
clc
icebp
and
std
repnz
lds
arpl
in
inc
cmp
pop
fists
push
sahf
cmp
pop
cmp
les
imul
and
insl
push
ss
iret
mov
sti
sbb
jge
pop
std
xor
cmp
push
push
stc
and
ja
int
fbstp
rcll
stc
or
mov
inc
sbb
pop
rorl
mov
les
jb
pop
jb
mov
outsb
mov
jae
xchg
push
push
popa
sbb
push
inc
out
enter
sbb
push
pusha
imul
imul
stc
subl
setb
idivl
push
loop
bound
add
dec
rcl
push
popa
andl
adc
xchg
xor
test
scas
bound
jecxz
leave
scas
je
incb
inc
lahf
les
jae
aaa
out
inc
dec
jnp
xor
xchg
mov
repnz
ficoml
cwtl
fcompp
imul
lock
adc
xlat
add
lods
test
push
push
inc
adc
pmaxsw
xor
push
in
loop
sub
repnz
adc
shll
cltd
inc
cs
leave
pop
xchg
xor
lret
sti
fisubs
xchg
add
fwait
test
rcrl
mov
sbbl
incl
daa
pop
scas
sub
aad
les
paddusw
sbb
addr16
mov
inc
pop
frstor
dec
lods
aas
mov
sti
mov
cmp
sub
or
enter
imul
idivl
jb
jb
int3
or
dec
outsl
jg
inc
push
push
fcmovne
aaa
cwtl
fiaddl
stc
xchg
jmp
sub
push
adc
daa
push
int3
mov
add
fldl
push
test
loope
pop
mov
sub
jle
add
fmul
shrl
mov
xor
inc
jne
mov
sbb
aas
pop
xchg
mov
fsubrs
add
fcmovnbe
flds
lds
xlat
pop
xchg
and
dec
fcoms
aas
and
subl
pop
nop
stc
add
lods
add
jl
dec
jae
dec
addr16
or
mov
mov
cmc
add
xor
cs
and
inc
pop
call
xlat
aad
mov
inc
arpl
xchg
sub
add
lock
out
mov
pop
test
pop
xchg
push
pushf
out
pop
sub
aas
sub
jo
pop
and
idivb
or
inc
mov
or
xchg
pop
filds
js
je
sbbl
cmp
xchg
pop
or
mov
push
and
dec
push
mov
and
rolb
mov
xor
movsl
int
sub
rorl
shr
movsb
xor
xchg
in
orl
mov
jp
pushfw
hlt
out
repz
int3
sub
push
int3
sti
adc
xchg
js
arpl
xchg
or
mov
aad
cltd
jmp
popl
jecxz
mov
daa
aaa
iret
pop
jns
push
lret
push
imul
pop
jge
int3
rolb
imul
leave
subl
test
shrl
out
test
dec
pop
loop
test
pushf
jl
push
std
lock
inc
cmp
sub
jnp
mov
add
jp
push
outsb
xorb
or
leave
xor
inc
test
sub
mov
daa
orb
jp
insb
jae
push
ret
push
int3
cmp
adc
mov
bound
sub
push
and
pop
pop
loop
cmpsb
sub
lea
ret
mov
inc
xor
movsb
lods
or
int3
movsb
cs
sub
mov
shlb
cmpsl
gs
add
out
sbb
iret
popf
aas
xlat
stos
mov
pop
dec
push
enter
int
mov
cmpsb
or
daa
mov
pop
jle
pop
mov
sbb
jmp
xchg
cmp
nop
mov
lcall
fwait
pop
mov
jmp
push
jp
mov
imul
push
ja
fs
dec
push
std
mov
lret
in
xorb
jl
and
daa
test
mov
add
cwtl
lea
stos
mul
push
mov
xchg
and
pop
ret
mov
or
push
ds
mov
cltd
xor
pop
sub
add
sub
in
call
ret
lret
mov
add
sbb
or
mov
add
jmp
cmp
negl
push
push
pop
cmp
jbe
adc
xchg
fistpl
mov
std
arpl
jmp
mov
push
xor
movsl
sub
mov
cmp
mov
stos
daa
xchg
cmp
mov
addb
ret
in
or
pop
pop
dec
xchg
and
inc
mov
and
je
mov
bound
addr16
mov
movsb
ja
sbb
rclb
sbb
movsl
cmp
fwait
mov
pop
mov
inc
mov
cmp
fistpll
mov
xchg
xchg
lcall
stos
cmpsb
push
std
add
and
inc
or
imul
sub
or
das
push
jo
aas
std
fcoms
mov
dec
push
sbb
xchg
sbb
out
push
iret
mov
fcomps
lret
icebp
enter
adc
jno
sub
aad
sub
pop
insl
in
iret
pop
movsb
rorl
sahf
add
sub
jle
sub
shrb
mov
add
sub
dec
cmp
mov
push
pop
xchg
adc
lcall
lods
clc
jmp
into
mov
dec
pop
xor
push
sbb
js
sub
jle
mov
pop
mov
push
in
pop
jg
mov
fcom
jp
jbe
add
mov
lock
scas
dec
mov
xor
pop
fstpt
inc
adc
cmp
in
cmpsl
xchg
push
mov
outsb
adc
nop
icebp
addr16
and
xchg
mov
pop
inc
into
enter
fiaddl
or
testb
sub
mov
std
xchg
test
jmp
xor
adc
scas
dec
repnz
xor
es
jmp
pusha
lods
cmp
jne
movsb
stos
inc
popf
popf
adc
lods
leave
mov
sbb
fnstenv
adc
lods
scas
fidivrs
scas
and
sbb
cmp
hlt
adc
sbb
jns
orl
inc
mov
xchg
add
inc
loop
dec
cmp
ficoms
sti
call
push
mov
mov
push
add
leave
adc
int3
inc
mov
pop
jg
arpl
xor
in
std
shll
jns
inc
loope
lock
movsl
int3
in
test
add
mov
xchg
rcrb
push
lret
or
les
push
lret
mov
stos
xchg
or
nop
push
cltd
push
and
jo
pop
mov
test
aad
mov
push
xrelease
sarl
in
shll
lret
dec
gs
adc
hlt
in
ljmp
fists
not
sbb
xchg
xor
int3
imul
nop
sub
add
adc
xchg
pop
ror
dec
cs
pop
or
leave
mov
xor
int3
jb
in
icebp
int3
roll
lret
or
aaa
cltd
lahf
adc
cmp
loope
sbb
pop
cs
mov
sarb
lea
loopne
arpl
arpl
push
lret
mov
push
daa
out
sub
aad
push
data16
test
sbb
mov
jmp
dec
cmp
std
les
rcll
add
mov
push
push
cmpsb
test
xor
test
xor
jmp
pop
mov
in
jl
or
imul
nop
nop
mulb
sub
loopne
sbb
jae
pop
lret
mov
xchg
push
mov
lock
repnz
push
cmp
inc
lahf
not
and
inc
sub
push
loope
jl
sbb
or
ljmp
sbb
inc
ljmp
cwtl
and
mov
jae
jle
xor
out
mov
add
push
xchg
xor
fdivrl
aam
or
movsl
incb
cmpsl
push
int3
sbb
or
loopne
mov
mov
dec
sub
sbb
sbbb
addr16
ds
into
inc
repnz
mov
adc
ds
sahf
xor
es
mov
xchg
gs
stos
dec
pop
clc
mov
sbb
inc
hlt
rcrb
andb
xchg
insb
push
push
jno
xchg
dec
pushf
mov
lds
dec
cs
je
insl
xchg
xor
or
mov
push
xchg
cmp
jecxz
adc
lret
rcr
xor
sub
push
pop
test
jno
jp
mov
negb
sbb
into
inc
nop
lahf
adc
sub
adc
imulb
pop
add
aaa
pop
mov
mov
rcrl
in
lea
xor
sbb
shlb
movsl
pop
jb
inc
daa
mov
test
and
push
cli
clc
aad
adc
nop
repz
in
jmp
mov
sub
rorl
sbb
gs
test
je
mov
push
hlt
sbb
lods
sub
or
pop
xor
je
pushf
sbb
jno
roll
inc
push
or
fcomps
mov
rcrl
adc
cmp
movsb
adc
insb
in
in
sbb
cs
dec
dec
push
shr
inc
mov
push
adc
xorl
jb
or
adc
xor
dec
fldcw
lock
pop
and
or
scas
push
stos
push
dec
pushf
add
cmpsb
xchg
mov
stos
cmp
les
cmp
std
mov
mov
psubq
fdivr
jmp
inc
cmp
mov
imulb
test
adcl
lcall
xor
loope
outsl
pop
cmpb
frstor
add
push
hlt
mov
pop
cmp
je
push
retw
dec
dec
add
mov
pop
and
call
leave
lea
sub
into
das
jb
lds
aad
and
sub
jbe
sbb
add
mov
cmp
xlat
xchg
mov
sub
inc
dec
push
jae
mov
ret
xchg
sub
cmp
mov
dec
rolb
movsb
mov
and
sub
xor
pop
sti
push
or
les
jbe
rol
in
add
out
pop
inc
fldl
inc
lret
or
cld
mov
stos
jmp
lcall
adc
lds
xlat
in
js
aas
sbb
mov
or
dec
pusha
movsb
in
sub
mov
pop
lock
mov
lret
cmp
pop
dec
scas
ret
cltd
jb
mov
mov
data16
fcmovbe
enter
aaa
mov
pop
rcl
outsb
adc
lock
xchg
stc
lret
mov
mov
fs
and
div
push
fdivr
sbb
lods
xor
inc
leave
fcmovne
mov
dec
shrb
inc
cmc
jo
adc
shrb
inc
add
jge
mov
or
inc
icebp
inc
out
loop
add
es
nop
outsl
add
sub
out
add
push
cmpsb
scas
mov
push
sahf
lcall
mov
nop
test
pop
sahf
lods
push
stos
clc
mov
sub
mov
lock
lahf
int3
inc
loopne
out
addr16
data16
dec
pop
lcall
sub
mov
push
bound
stos
sub
adc
cld
jns
in
dec
add
cltd
jno
ficompl
mov
scas
sub
clc
mov
cmp
fisttpl
jb
ljmp
jne
aaa
outsb
and
aaa
jae
shrb
pop
lea
arpl
in
std
pop
das
iret
popf
push
dec
insl
jnp
shl
cwtl
ljmp
aaa
sub
dec
sbb
mov
cmp
fwait
pop
test
repz
repz
push
cmp
jnp
incl
icebp
xlat
ret
mov
dec
xor
pop
mov
xor
pop
cmpsb
leave
and
mov
mov
push
mov
pop
in
adc
mov
xchg
imull
mov
xchg
jbe
mov
jae
lock
or
flds
jge
cmp
xor
inc
leave
mov
cs
cld
scas
outsl
cmc
cmp
sbb
repnz
sti
push
movb
dec
cmp
jmp
xlat
cmpsb
outsl
pop
mov
loope
sahf
es
cltd
pop
push
fwait
test
mov
or
rolb
pop
out
popl
ds
mov
xor
fiadds
cmp
addr16
and
sub
xchg
rcl
jns
pop
fsub
packssdw
rcrb
cmp
mov
xchg
test
inc
push
xchg
scas
lock
push
xchg
cmc
adc
cmp
xor
in
push
decb
imul
push
js
xchg
mov
repnz
add
pop
popf
jecxz
mov
push
loope
jp
fndisi(8087
jb
cwtl
fsubrl
icebp
lcall
jl
sub
gs
sbbl
sbbb
icebp
mov
jl
or
mov
aad
mov
mov
imul
sub
loope
addr16
sub
imul
sbb
cmp
aas
dec
aaa
cmp
ret
or
or
push
mov
dec
cs
cmp
adc
inc
mov
jge
daa
push
fbstp
imul
ret
jb
test
mov
jecxz
iret
add
jecxz
movsl
sub
mov
xchg
sti
jp
fimull
jbe
jno
push
into
sub
xor
mov
mov
pop
xor
lret
mov
jne
or
adc
pop
mov
sub
add
mov
aaa
mov
mull
cmp
loope
leave
cmpsb
out
dec
cmc
popa
pop
ja
xor
mov
or
pop
andb
pop
mov
loopne
mov
orb
sub
stc
fsub
mov
mov
fs
daa
mov
sbb
sub
adcb
enter
popa
call
mov
loopne
mov
call
lcall
addr16
rclb
xchg
les
mov
movsb
ret
adc
xor
xchg
fucompp
mov
movsl
xorb
dec
jno
and
ret
idiv
push
dec
dec
in
enter
dec
add
int
cmpsl
sub
and
shlb
inc
bound
inc
adc
rcrl
inc
ret
sub
es
mov
mov
stos
std
cmp
cmp
ret
adc
stos
push
sahf
jmp
or
push
pop
xchg
pop
dec
fs
ficoms
mov
sub
jo
sbb
pop
push
xlat
es
or
cmp
mov
pop
aas
jp
sbbl
mov
rol
iret
mov
in
imul
sbb
dec
imul
push
out
lcall
cli
into
sahf
sbb
cmpsb
scas
out
sub
or
es
aam
pop
dec
mov
arpl
ret
shll
push
std
inc
cmc
pop
cs
test
adc
mov
xchg
inc
dec
pop
fdivrs
jo
shlb
out
push
xchg
mov
push
mov
popa
icebp
inc
out
inc
mov
cli
xor
in
xchg
mov
push
xor
jno
cmp
cwtl
xor
incl
movsl
lods
loopne
mov
int
pushf
and
into
imul
jns
inc
dec
pushf
inc
mov
add
mov
pop
mov
adc
out
repz
ffree
clc
inc
insb
ja
pop
sbb
arpl
cmp
dec
xor
in
lds
leave
into
push
test
movsl
pop
jne
pop
add
mov
jne
adc
lret
lock
pop
mov
pop
out
push
pop
push
hlt
insl
adc
dec
ds
and
xchg
inc
cs
mov
enter
dec
bndstx
ja
and
std
loopne
mov
nop
repnz
adc
pop
cli
cwtl
xchg
lret
mov
outsb
add
shl
rcr
xchg
push
lods
je
mov
adc
xchg
fnstenv
xchg
cmpsb
adc
or
and
lods
loop
add
mov
rep
dec
sub
dec
push
or
xchg
mov
cmp
xchg
xorl
or
sub
and
js
add
adc
xor
aas
inc
mov
call
iret
gs
cltd
pop
out
mov
pusha
test
fucomi
lcall
jbe
das
cmp
sarb
cmp
fdivp
cmpsb
popf
xor
into
jb
and
or
jg
insl
xchg
cmp
das
add
rorb
and
test
dec
lret
mov
lret
loope
cmp
dec
nop
mov
push
mov
fldcw
adc
ja
test
in
loopne
push
push
fldt
cmc
xchg
mov
movsl
jecxz
dec
loop
inc
mov
bound
lods
sub
lret
jg
fistl
lret
popa
outsb
scas
adc
jmp
sbb
inc
aaa
adc
aaa
fistpl
xchg
ljmp
mov
dec
mov
into
xlat
inc
fs
adc
lea
roll
cmpsb
jbe
scas
mov
lret
repnz
popa
pop
mov
std
mov
cmpsb
iret
or
push
mov
cmc
inc
fisttpl
outsl
push
fiadds
xchg
inc
sarl
cmpsl
int3
jbe
pop
xchg
xchg
dec
or
loope
out
inc
cmpsb
test
testl
push
jmp
xchg
jmp
sbb
fs
psrlw
jbe
sti
nop
or
inc
adc
into
and
dec
fdivs
xor
push
cmp
add
cmc
xor
ds
fldcw
call
and
cmp
aad
adc
push
inc
mov
add
rcl
push
mov
dec
mov
and
push
lret
outsb
data16
jg
mov
mov
sahf
add
mov
out
inc
jl
in
sbb
cmp
das
adc
sti
inc
imul
xchg
ficompl
pop
inc
push
mov
inc
dec
fdivr
push
mov
pop
aas
sub
cmc
pop
cmp
cmp
cld
je
insl
ss
mov
std
mov
xchg
jno
xor
mov
xor
mov
fdivs
cmp
mov
sbb
xchg
jns
adc
popf
fnsave
inc
loop
xchg
fimuls
and
fdivs
xchg
in
cli
jle
test
dec
test
xchg
inc
sbbl
movsb
and
popa
inc
mov
test
fadds
rorl
mov
aaa
lcall
or
mov
inc
and
xor
pop
inc
push
and
or
cmp
and
pop
pop
arpl
mov
sub
push
mov
inc
and
test
loop
mov
into
xchg
addr16
lcall
adc
cmpl
popa
iret
or
xchg
lret
sarl
inc
fstl
mov
adc
xor
or
or
jecxz
ret
in
xlat
fsubl
mov
aas
pop
push
dec
aas
mov
insb
adc
add
into
iret
xchg
push
and
shlb
fcmovbe
mov
jle
inc
push
repnz
xor
imul
mov
aam
inc
mov
sbb
xchg
mov
pop
lret
or
mov
mov
sbb
lock
jg
xchg
jns
ja
aam
or
add
or
cmp
dec
shl
mov
push
xor
or
cmc
cmpsb
arpl
lcall
pop
mov
loope
and
sarb
pop
or
jo
jno
stos
fidivrs
fdivs
or
cmp
sub
dec
sti
out
sbb
cmp
and
cmp
int3
and
addr16
pop
adc
std
loop
setg
and
xchg
adc
push
movq
inc
idivb
jp
popa
shll
mov
outsl
adc
xor
sbb
popf
fcom
pop
outsl
pop
jnp
sbb
adc
push
xchg
cmp
pop
and
cs
gs
mov
dec
clc
in
adc
mov
cmpl
fsubrs
fsubrp
mov
les
mov
inc
ret
pushf
mov
push
cwtl
cmp
pop
je
sbb
fnstsw
insb
dec
nop
pusha
repz
movsl
mov
xchg
dec
dec
pop
clc
push
jecxz
fisttpl
mov
mull
inc
jmp
cwtl
and
and
xor
addr16
and
dec
mov
add
xor
push
jae
dec
jbe
mov
lahf
pop
rcrb
shl
pusha
adc
cli
add
shl
test
mov
ss
mov
insl
pop
mov
xchg
inc
scas
cmp
mov
mov
mov
pop
out
mov
sbb
mov
cmp
sbb
xchg
in
cmp
in
or
jecxz
mov
xchg
inc
pop
insb
cmp
fldenv
imul
dec
sti
mov
xor
aaa
mov
in
movsb
cmp
sbb
mov
jne
xor
cmp
and
pop
notb
or
sbb
int
test
pop
addr16
lds
roll
cmp
call
pop
clc
jle
jge
iret
mov
icebp
add
leave
andl
fxrstor
dec
sub
xor
cld
push
stos
adcl
lcall
sbb
fsubs
fisttpll
stc
push
push
clc
adc
sub
ljmp
push
aaa
sbb
lahf
xor
mov
add
imul
push
jne
xor
dec
and
fistpl
lods
lds
xor
xor
sbb
je
rol
pop
mov
mov
sub
mov
popa
adc
sub
outsl
inc
jecxz
das
and
aaa
mov
fnstcw
xchg
push
mov
ret
cmp
gs
inc
lock
js
add
cmp
repnz
xchg
aam
and
loop
inc
fs
lds
into
mov
cmpsb
fildl
imul
push
loopne
ja
push
mov
cli
lds
mov
or
push
push
imul
adc
lahf
jno
push
data16
arpl
stc
mov
addr16
mov
inc
jne
sbb
jb
jns
cld
and
push
xchg
jno
in
inc
pop
jae
imul
inc
cmpsl
add
xchg
sub
loop
stc
out
in
mov
inc
lods
out
push
and
mov
push
repnz
jmp
je
add
aas
aaa
jne
push
lea
mov
mov
je
cld
mov
inc
jbe
push
adc
mov
out
fs
clc
aam
push
and
xchg
icebp
sbb
ja
subl
in
mov
rorb
pop
addb
aad
cmp
mov
movsb
mov
mov
stos
lods
dec
mov
push
mov
inc
popf
add
loop
adc
jb
push
cmp
mov
dec
popa
xor
ret
leave
mov
in
jg
add
sbb
fs
adc
call
add
push
xchg
xchg
inc
test
cld
rolb
shrb
mov
loopne
stos
xchg
cmp
and
sahf
aam
mov
nop
xor
testb
sbb
xchg
and
pop
sbb
iret
jnp
shrl
add
inc
in
scas
xchg
movd
mov
repz
pushf
cltd
test
sub
aam
hlt
mov
inc
xchg
fdivrs
gs
out
rcll
imul
in
lods
loop
popf
out
fcoml
jecxz
les
fmull
adc
mov
sub
push
clc
inc
mov
jl
pusha
mov
daa
pop
or
int3
xchg
hlt
loope
movsb
cli
push
or
mov
dec
scas
pop
movsl
and
jge
ljmp
adc
mov
dec
sti
mov
sbbl
mov
ret
lds
adc
call
aam
sub
repz
test
sarb
nop
push
fs
add
out
adc
and
loope
or
add
cmp
xor
adcl
mov
push
jmp
inc
in
lods
xchg
inc
scas
mov
cmp
or
jge
mov
dec
clc
and
xchg
add
cwtl
test
test
or
and
and
out
pushf
les
aas
movsl
enter
imul
in
mov
push
sub
xchg
pop
flds
inc
arpl
jae
call
fwait
roll
mov
inc
sub
push
adc
dec
stos
arpl
nop
sub
out
addr16
testb
xchg
mov
dec
sbb
repz
mov
dec
js
inc
jbe
loope
test
jne
adcl
call
mov
jmp
inc
cmpsb
mov
mov
in
dec
pop
push
js
sbb
dec
pop
cmp
or
sbb
or
loop
mov
xor
pop
and
mov
push
xchg
xchg
or
sbb
mov
xlat
shrb
sbb
cld
xchg
jmp
jno
sub
push
mov
popa
inc
push
dec
imul
adc
mov
js
push
popl
scas
movq
mov
test
adc
hlt
enter
dec
cmp
jge
out
adc
hlt
cmp
sub
bound
clc
test
loop
xchg
add
aaa
dec
daa
dec
push
cmpl
pop
sbb
add
and
jbe
sub
jmp
outsb
pop
into
xlat
dec
pop
inc
scas
mov
pop
mov
lret
sarl
into
sbb
xchg
lds
fiadds
pop
jb
dec
or
pusha
mov
adc
xchg
jle
jg
arpl
dec
sub
inc
andl
filds
incb
movsl
add
push
std
aas
jg
mov
mov
ret
stos
add
scas
loope
dec
jp
sub
test
jo
pop
pop
je
nop
mov
lret
adc
cmp
in
das
and
jp
iret
or
pop
ljmp
pop
dec
jb
jmp
xor
out
push
adc
fcompl
pop
call
push
adc
xor
mov
shr
mov
mov
outsb
js
cmp
into
test
pop
in
leave
aaa
mov
shl
xlat
stc
sar
ja
inc
arpl
ret
jae
lret
jbe
movl
pop
mov
outsl
ja
mov
jg
mov
popf
sub
into
sub
mov
mov
xchg
nop
adc
push
and
insl
cmpl
out
fxch
loope
inc
lds
push
imul
hlt
scas
pop
int
jl
mov
rcl
mov
daa
mov
push
inc
cmp
lods
lds
cltd
mov
scas
test
xor
sbb
int3
aad
mov
jg
mov
rclb
dec
mov
and
push
push
and
push
mov
or
pusha
and
mov
je
and
sahf
leave
sti
das
xchg
xchg
cmp
jo
aas
leave
cmp
jb
cmpsl
popf
mov
test
aad
shll
andl
int3
clc
mov
dec
insb
jae
in
mov
das
imul
jo
loop
mov
ret
sub
pop
xchg
out
outsl
sbb
mov
adc
sbb
or
pop
jle
insl
mull
cltd
inc
iret
iret
mov
daa
jle
mov
jb
int
ret
loopne
xor
mov
mov
lds
cltd
lods
dec
xchg
loop
sub
mov
mov
call
jno
jmp
add
mov
test
movb
daa
lods
int3
jae
fsubp
xchg
and
out
lahf
push
dec
lods
int3
cmpsl
or
xchg
mov
fnstenv
loopne
pusha
push
fisubrl
pop
cmp
popa
mov
psadbw
arpl
stc
movsb
adc
pop
iret
ret
pop
and
and
iret
cmp
mov
push
sbb
xor
inc
dec
gs
and
push
push
sbb
dec
xor
popa
cmp
out
in
sbb
push
mov
jecxz
and
cmp
repnz
and
push
jecxz
insb
pop
sarl
add
or
or
adc
rcl
lea
notl
cmpxchg
iret
lods
or
push
idivl
sub
ret
adc
mov
add
xor
icebp
sarb
rep
sbb
aaa
mov
jno
push
in
ret
jle
mov
fmulp
scas
push
mov
leave
or
dec
cmp
in
and
in
movb
add
xor
gs
jl
pop
imul
movsl
cmp
out
cs
push
and
aad
or
push
aam
stos
in
arpl
shl
dec
xor
out
movsl
xchg
ss
jle
imul
repz
jmp
inc
mov
roll
in
movsb
les
mov
int
xor
inc
mov
cmc
adc
mov
stos
inc
mov
cli
lods
mov
xor
subl
scas
sub
and
daa
xchg
inc
lods
imul
fbstp
xchg
arpl
jmp
jg
xor
movsb
and
iret
jbe
add
jle
sub
inc
add
pop
mov
and
or
push
xor
adc
mov
cmc
test
clc
push
mov
faddl
and
addr16
stos
rorb
xchg
xchg
inc
cmp
sti
aas
sarl
inc
xchg
rclb
mov
cmp
push
in
mov
xor
sbb
js
sbb
test
push
inc
add
loope
dec
outsl
mov
mov
jo
movsb
dec
sbb
push
sbbb
incl
std
dec
xor
inc
dec
repnz
dec
push
dec
sub
ret
mul
jbe
scas
bound
es
mov
test
sub
cmp
xchg
stos
es
fsubp
and
mov
mov
dec
xchg
daa
mov
add
pop
mov
push
gs
test
out
popf
sahf
cmpsl
xchg
ret
out
icebp
mov
insl
mov
lds
les
xor
addr16
fidivl
dec
sahf
cmc
ljmp
jge
mov
and
shl
es
mov
mov
jecxz
repz
out
jno
out
jno
dec
scas
cmp
cmp
fcoml
and
test
jb
sbb
test
inc
mov
sysenter
dec
dec
out
xor
or
xchg
in
sahf
loopne
scas
shlb
arpl
mov
jns
rclb
bound
cmp
xchg
push
inc
movsb
jp
in
int3
dec
lret
cmp
sti
mov
fsubrs
fiadds
cmpsl
mov
lahf
sub
push
andb
dec
repnz
imul
cmp
mov
dec
std
or
repz
popl
mov
add
dec
pop
fwait
in
gs
std
xlat
shl
test
gs
jno
fldt
push
pop
data16
jl
adc
cltd
xor
ja
sbb
aam
push
xlat
jns
daa
ret
cmp
jb
out
xor
and
cltd
xchg
jno
dec
sub
pop
js
shr
out
cltd
fidivl
call
jae
sbb
pop
jne
fisttpll
xor
cmp
inc
fwait
mov
int
jb
mov
cld
loope
test
ret
adc
jns
jge
ret
out
lods
iret
add
jmp
xor
jns
inc
test
lahf
aaa
lret
lea
mov
jg
popa
jno
push
out
add
adc
xchg
jl
sbb
or
int
shll
cwtl
fidivl
std
aam
sbb
lds
testl
push
pop
adc
aaa
or
pop
push
scas
lock
out
dec
js
jae
imul
mov
sahf
mov
orb
xor
cmpsl
push
fildl
add
mov
js
in
adcb
xchg
andb
inc
adc
add
mov
aaa
outsl
inc
inc
mov
pop
mov
cmpsl
dec
loop
ljmp
mov
mov
sub
jo
lea
mov
jbe
mov
sbb
add
lods
jle
cli
mov
daa
call
pop
xchg
xor
add
in
outsb
repz
sub
mov
cmpb
loope
lahf
mov
xchg
icebp
or
ret
inc
cmpb
arpl
stos
add
ljmp
lea
and
cmpsb
mov
cmp
or
rorb
fisubs
xchg
in
out
iret
or
sbbb
in
popa
mov
and
jnp
mov
mov
mov
mov
push
sub
jno
cs
adc
sbb
sbb
cmp
jl
dec
mov
cmp
jnp
inc
mov
xchg
pop
fs
jns
mov
shrb
jp
lcall
pushf
imul
mov
adc
adc
adc
push
outsl
sti
sub
andl
clc
lcall
xchg
mov
in
loopne
insl
mov
rcrl
int3
pop
int3
shrb
xor
movsl
icebp
ss
ss
jns
scas
in
in
sub
out
popa
outsb
pop
fxch
mov
mov
adc
jno
arpl
jg
lcall
in
idivb
jge
into
jno
dec
pop
inc
xchg
stos
les
fnstcw
cwtl
cs
fdivs
mov
jne
pop
jae
sub
test
scas
mov
mov
and
scas
enter
add
jle
jmp
shl
dec
scas
filds
repz
xor
xchg
test
dec
leave
pushf
pop
int3
fwait
cmp
xor
mov
mov
and
das
rcll
cmp
and
imul
addr16
mov
leave
mov
test
fcmovnu
mov
addr16
scas
dec
dec
sbb
push
add
push
mov
sub
sub
aas
fwait
int3
push
mov
fsub
ljmp
rorb
test
subb
test
scas
and
xchg
out
add
mov
mov
jbe
push
out
orl
dec
mov
call
fidivs
pop
mov
int3
or
adc
xchg
mov
xchg
outsb
scas
jecxz
aas
dec
test
and
out
jae
hlt
cld
or
xor
lock
push
jae
loopne
out
push
es
pop
lock
mov
into
cmp
icebp
bound
mov
int
push
cmp
repz
lods
cmpsb
dec
pop
push
in
fnstcw
insl
mov
loop
xor
inc
out
popf
and
sub
lods
rolb
ss
or
xchg
sete
ret
xchg
adcb
pop
push
ds
aaa
loop
stos
pop
mov
ss
add
xchg
repnz
sub
outsb
fistl
push
test
nop
cmp
aaa
decb
add
xchg
add
inc
imul
mov
popf
iret
xor
lds
cmp
jg
add
arpl
mov
mov
push
cmp
repz
inc
rol
push
or
ds
dec
loopne
xor
or
pop
ss
mov
add
retw
mov
daa
mov
mov
sti
enter
aad
aas
push
pop
jns
not
push
repnz
and
xor
insb
sub
lret
mov
mov
xchg
out
test
mov
cs
in
rcll
or
jne
xchg
ljmp
mov
cmpb
xchg
adc
fimuls
mov
mov
inc
dec
dec
inc
jb
aad
frstor
xchg
cmpl
sahf
cmp
cmp
mov
leave
aas
pop
addr16
push
sub
or
dec
dec
mov
ficoml
inc
xchg
cs
sbb
insl
sbb
mov
ds
mov
xchg
ffreep
jecxz
push
mov
ss
add
pop
push
cmc
push
lahf
mov
mov
sbb
test
sahf
js
and
mov
jnp
sub
pop
fadd
in
js
push
lret
fwait
sbb
mov
push
cmc
shrb
jno
or
in
push
ret
fwait
leave
in
dec
sti
xchg
push
or
jp
loop
xlat
adcb
or
push
out
cmpl
or
cli
loopne
cmp
mov
inc
pop
enter
test
add
loop
add
aad
push
sahf
adc
imul
out
sub
sbb
lds
ret
add
dec
ret
mov
pop
adc
je
add
cltd
rcl
movsb
add
mov
mov
push
xlat
aad
das
or
mov
paddb
int
stos
stos
cs
cld
cli
mov
dec
jae
cli
xor
jae
testl
xlat
jle
stos
sbb
cmp
xchg
adc
imul
jecxz
vpsllw
add
loope
int3
icebp
insb
loop
jecxz
sarb
test
and
pusha
pushf
ss
or
xlat
repz
loop
pop
test
cmp
das
cld
in
movsl
imul
rcrl
ficompl
ficoml
pop
lock
iret
inc
xchg
insl
das
dec
and
dec
lock
into
decb
inc
mov
adc
stos
pop
dec
xchg
aaa
js
or
gs
movsb
pop
mov
jne
mov
jecxz
cmp
fcmovb
iret
lret
mov
push
push
fidivs
cmpsl
icebp
test
mov
jb
test
cmc
ret
lds
adc
jmp
mov
mov
pop
jge
mov
inc
fs
jmp
xor
andb
popa
mov
cmp
pop
adc
or
arpl
xchg
mov
pop
imul
cmpsb
pop
adc
scas
jnp
pop
pop
mov
lods
adc
xchg
sub
lahf
sti
inc
in
inc
pop
int
push
xchg
setle
sub
mov
fidivrs
xorl
iret
adc
inc
jecxz
sbb
aam
clc
jne
inc
in
sub
setbe
sbb
cld
mov
jo
js
mov
fstpl
andb
icebp
jno
jg
mov
pop
daa
icebp
mov
adc
fdivrl
or
cmp
test
repz
pop
ret
inc
adcb
mov
iret
mov
lea
test
test
push
mov
movsl
mov
daa
sub
adc
mov
mov
repnz
lahf
loop
stos
push
xchg
push
inc
shll
loop
mov
les
ds
lahf
out
addl
pop
sahf
and
inc
lea
dec
inc
loopne
push
sti
mov
inc
psllq
arpl
sub
cmp
push
int
mov
xchg
push
mov
das
popf
jno
sti
and
out
or
mull
push
test
inc
jbe
and
icebp
mov
gs
pusha
pop
push
xor
xchg
leave
popa
dec
xchg
jns
xchg
xchg
loope
add
fsubrs
mov
add
push
inc
sbb
push
sbbb
lock
inc
xchg
repz
jnp
movsl
clc
movsl
das
xor
gs
imul
aad
loopne
inc
jnp
test
mov
sbb
lds
test
out
loop
scas
push
stos
inc
xorb
shll
mov
repnz
push
sbb
jns
pushf
xchg
xchg
out
int
fdivl
jecxz
fisubrs
std
in
hlt
push
ret
inc
adc
jne
and
lahf
aaa
lea
cmpsb
cld
in
sub
adc
xor
xor
ret
cltd
sbb
mov
or
movsb
fcmovb
and
fistps
mov
sub
popf
jnp
inc
inc
sbb
popf
ds
je
sub
mov
mov
pushf
or
or
jl
inc
fdivs
push
pop
lcall
xor
add
jg
and
call
jmp
iret
xor
mov
inc
lahf
cmp
xor
subl
cmp
pop
loopne
dec
xor
mov
imul
pop
sti
adc
out
mov
das
sarb
clc
ret
fwait
cld
jb
insl
and
cmp
loop
push
cmpsl
xor
push
cmp
int3
jae
hlt
shrl
and
push
pop
jbe
cmc
add
js
pop
sub
cld
sub
neg
sub
mov
ss
aas
aam
call
xchg
sub
lods
mov
adc
and
mov
or
adcl
test
mov
fs
pop
mov
es
clc
inc
aaa
paddsw
stc
inc
out
ret
es
add
loopne
stc
mov
cwtl
jge
mull
jb
orl
cmp
pop
sbb
jecxz
sar
and
in
push
repz
pop
dec
data16
adc
jns
jecxz
push
test
pop
mov
jecxz
imul
popf
mov
or
test
out
mov
mov
or
add
inc
sub
out
adc
push
dec
pop
xchg
std
add
fs
xchg
pop
pop
mov
arpl
xor
repz
inc
jnp
fiaddl
nop
mov
lahf
cmp
insl
sbb
test
stos
mov
pop
testb
outsl
cmp
mov
push
push
ss
and
mov
pop
jmp
dec
mov
pop
pop
ljmp
fsubs
or
xchg
dec
push
sub
pusha
add
inc
lcall
xor
lds
inc
push
cld
jg
fucomp
add
push
inc
fld
in
mov
insl
xchg
inc
or
imul
jmp
test
and
dec
jl
or
popa
add
or
pop
cmpsl
dec
data16
loopne
imul
lcall
jmp
xor
ss
xor
decb
pop
add
loopne
loopne
test
loope,pn
insl
xlat
push
or
fdivrl
addr16
out
stos
pusha
cld
roll
call
add
jl
imul
and
or
cmovl
cmp
shlb
js
aas
les
fincstp
ljmp
lods
push
repz
ffree
dec
fnsave
push
call
dec
pop
jo
fnstsw
js
ds
in
push
mov
inc
mov
adc
cwtl
inc
lds
jp
ret
xchg
xchg
pop
mov
adc
mov
dec
popa
arpl
pusha
pop
lcall
jno
in
add
shll
push
pop
subb
shlb
xor
daa
mov
out
imul
pushf
xlat
xchg
divl
xchg
shrl
xor
ljmp
mov
xor
mov
sub
and
push
cmpsl
pop
mov
out
mov
in
ljmp
or
pusha
jnp
sub
lret
push
add
loope
andl
push
and
xlat
jo
incb
lods
or
in
aad
daa
daa
fdivs
pop
js
in
sbb
inc
insb
xchg
dec
ret
push
mov
pop
dec
or
xor
cmp
addl
mov
or
ficoms
mov
js
or
arpl
cld
loope
jne
cld
xor
stos
inc
xor
pop
por
and
cld
ss
loopne
cmp
push
and
adc
mulb
loope
das
and
shrb
pop
ret
movsl
mov
add
add
ds
ret
nop
push
ss
repz
push
aad
stos
ds
loopne
outsl
mov
mov
ficoms
push
mov
mov
insb
mov
loope
cmp
pop
ret
sub
lods
and
jg
push
adc
pop
pop
lea
hlt
and
pop
pop
xor
pop
xchg
movsb
int3
loopne
addl
xchg
push
push
lock
or
aam
incb
xor
cmp
mov
outsl
clc
dec
stos
adc
inc
or
aad
nop/reserved
sbb
pop
mov
scas
mov
fwait
jle
pop
inc
jmp
jnp
push
mov
jmp
xlat
mov
mov
movsl
aad
sub
mov
mov
xchg
and
sbb
mov
sub
push
nop
daa
pop
in
cmp
data16
test
syscall
mov
push
sbb
push
jb
jns
xlat
mov
out
hlt
xor
fsubrs
xor
xor
sbb
jl
ret
pop
cltd
insb
sub
pusha
mov
xor
mov
call
in
fiaddl
mov
fimuls
ss
adc
ret
sahf
mov
sub
out
daa
clc
pop
fwait
call
lahf
insb
xlat
dec
cmp
inc
push
lret
ljmp
ret
add
popf
popf
inc
jne
mov
shl
shrl
cli
inc
xchg
fucomip
neg
sub
outsl
pusha
mov
out
out
jae
xchg
push
mov
xchg
mov
addr16
hlt
leave
pop
pushf
mov
pop
shlb
pop
insb
and
mov
mov
dec
cmc
push
leave
sarl
pop
xchg
in
mov
jge
inc
sbb
jno
bound
and
aaa
jnp
pop
and
enter
fbstp
mov
push
sahf
jmp
pop
pop
pushf
js
ss
push
sahf
pop
sub
or
sbb
mov
andl
cmpsb
imul
fisttps
lahf
aam
cwtl
aad
xchg
mov
push
mov
lcall
xchg
loopne
xchg
or
addr16
enter
mov
cmp
xchg
inc
xchg
addl
mov
push
mov
cmpsl
jecxz
mov
or
cmp
sahf
dec
shll
mov
test
rclb
repnz
je
inc
movsl
lods
mov
rclb
movsb
int3
sbb
pop
adc
arpl
mov
rcrl
adc
cltd
test
fimuls
cli
cld
js
push
inc
dec
in
and
mov
or
pop
xchg
add
jb
mov
sub
or
dec
push
rcrl
addr16
pop
jge
in
mov
inc
enter
popl
cmp
mov
jl
jne
dec
dec
fsubs
mov
stc
mov
pop
into
adc
jmp
push
dec
jmp
in
or
add
enter
adc
push
nop
fs
cmp
pop
in
dec
xchg
out
and
cmpsl
jb
sarb
out
in
jle
pop
insb
push
sub
fimull
mov
mov
sbb
mov
sahf
scas
test
dec
pop
inc
add
out
jne
sar
mov
cwtl
roll
xchg
push
mov
ja
push
sub
cmpsb
xor
cmp
rclb
xchg
pop
xchg
xor
mov
add
test
cmpsb
mov
dec
add
decb
stc
mov
sbb
bound
test
scas
loopne
mov
xor
mov
repz
test
popa
push
pushf
in
ret
bound
and
bound
mov
lret
adc
and
aaa
aaa
push
pop
adc
outsl
daa
std
ja
adc
adc
ds
inc
add
dec
aad
pop
lahf
add
loope
popf
mov
lret
outsl
test
and
subb
jg
sub
or
pop
jle
cmp
xor
sub
inc
ljmp
inc
lods
jmp
dec
and
fdivr
popf
adc
or
ds
inc
xor
mov
or
in
jne
pop
les
xchg
add
insl
adc
bound
cltd
js
pop
mov
and
adc
fldenv
mov
xchg
inc
dec
out
imul
sub
inc
iret
shl
xchg
mov
pop
pop
addl
cwtl
dec
mov
or
and
mov
sub
ffree
jne
mov
mov
inc
cmp
xchg
mov
out
mov
lahf
lods
sub
gs
sub
push
cmp
xor
dec
jl
push
lds
mov
sub
sbb
lds
pop
mov
and
push
insl
andb
mov
in
mov
lods
in
add
mov
idiv
scas
push
and
lods
movsb
mov
jne
int
sbb
mov
jmp
int3
cmp
jecxz
inc
sbb
lcall
push
jle
nop
insl
and
add
sub
or
jmp
mov
shl
outsb
cmp
and
jbe
sub
es
das
push
inc
push
es
movsb
inc
mov
lods
jae
cli
xchg
dec
insl
jp
mov
inc
in
loop
inc
push
orl
test
jg
loope
ss
add
mov
rcrl
mov
bound
ds
pop
sbb
or
mov
jg
sub
js
mov
xchg
test
cmp
push
jecxz
pop
ret
movsb
lret
dec
sub
test
dec
xchg
mov
es
push
insb
sbb
enter
mov
mov
add
cmpsl
je
std
adc
data16
add
fadd
enter
int
xchg
scas
sub
mov
inc
imul
icebp
neg
int
mov
push
dec
out
dec
cmp
fsts
xchg
and
push
iret
js
jns
mov
mov
push
adc
dec
test
xor
sub
addb
nop
push
test
add
and
cmp
or
jne
in
xchg
cmpsb
dec
pop
imull
sub
jo
pop
sahf
out
cmp
iret
dec
sub
test
push
and
aaa
in
push
add
out
jo
sub
lahf
push
test
add
adcl
std
pusha
xor
lods
push
lahf
mov
xchg
test
dec
sub
dec
leave
les
arpl
in
mov
rcl
int3
pop
cwtl
rclb
dec
xchg
xchg
lods
stos
adc
push
out
test
mov
xchg
sbb
cs
and
xorl
mov
std
pop
add
adc
mov
dec
push
pop
sbb
out
and
mov
cmc
enter
dec
data16
jmp
test
movsb
lret
rorl
and
fcomps
and
mov
sahf
lock
sub
leave
jns
push
leave
and
lahf
add
scas
jae
and
pop
cld
sub
movsl
repnz
inc
inc
mov
scas
push
sarl
push
gs
subl
lret
lret
fdiv
and
or
pushf
jbe
addr16
aad
mov
or
or
dec
sub
or
rcrb
pop
pop
jl
add
fdivr
std
xchg
mov
cmc
inc
mov
fldcw
stos
inc
aad
mov
gs
pop
jae
mov
or
or
imul
and
mov
out
iret
fwait
cmp
or
adc
xor
rclb
lea
or
movsl
xor
dec
jno
shll
mov
or
pop
shrb
loop
sbb
out
sarl
cltd
insl
in
adc
jno
scas
stos
xor
jo
loopne
aas
stos
push
jb
add
mov
cli
lods
int3
jns
ret
dec
push
mov
fcmovnbe
fistps
pop
loop
aas
ret
xorl
cmp
jecxz
rep
lahf
test
push
call
mov
icebp
mov
je
mov
je
and
lds
jp
push
clc
fsubs
test
push
mov
stos
xor
adc
cmp
rorl
dec
cmpsb
and
mov
fdiv
mov
js
mov
mov
cld
mov
add
mov
add
mov
inc
rcrb
out
lahf
push
inc
jnp
adc
adc
mov
pop
jae
mov
mov
ljmp
sbb
or
loope
xchg
jecxz
and
out
ret
push
int
pop
notb
dec
mov
push
cmp
into
mov
dec
js
lahf
lds
xchg
inc
into
cmp
hlt
test
rolb
add
or
stos
int3
in
mov
inc
and
orl
data16
cmp
imul
jl
iret
push
sbbb
mov
mov
ret
and
add
push
xchg
mov
mov
cs
xchg
add
sub
adcb
mov
add
rcll
jns
cmp
inc
aaa
cmpsb
fs
mov
mov
fisubrs
xchg
arpl
aam
in
adc
jge
sbb
frstor
fistps
inc
rolb
jge
xchg
dec
mov
sub
jl
xor
lcall
and
and
movsb
or
pusha
mov
or
cmc
fdivrl
xchg
in
aam
shlb
addb
push
ret
dec
pushf
cmp
pop
jnp
insb
push
mov
outsb
jae
out
jecxz
jo
pop
inc
jmp
mov
lret
mov
push
mov
push
inc
test
xchg
test
lahf
sbb
xor
and
add
mov
leave
jp
jg
imul
cmp
inc
mov
fcom
insb
pop
cmp
les
inc
scas
lds
dec
lds
xor
xchg
popa
push
or
xor
pop
jo
add
sbb
sbb
pushf
pop
or
mov
and
js
push
adc
fstpl
jne
cmp
jno
hlt
scas
jl
mov
mov
fidivs
pop
les
les
push
and
adc
add
xchg
into
jge,pt
jecxz
js
sbbl
mov
adc
push
mov
push
sti
pop
push
lahf
stc
push
aam
call
test
add
shrb
outsb
inc
cmp
mov
dec
lods
sub
nop
dec
jmp
out
dec
xor
mov
sbb
cmp
shrl
js
and
pushf
push
iret
mov
and
xor
jge
ja
xchg
pop
shll
jg
inc
idiv
lret
fstpl
xchg
push
jno
adc
enter
int
xor
and
mov
incl
jns
pop
stos
inc
loop
popa
fwait
sbb
push
dec
cmp
mov
popa
leave
jae
aam
add
js
popa
addr16
mov
test
ljmp
shll
fldl
jg
mov
jo
xor
jge
mov
data16
test
xchg
pop
cmp
loope
xor
mov
repnz
xor
rorl
out
fldt
lock
sbb
stc
imul
inc
sub
arpl
mov
out
insb
mov
repz
fdivs
or
mov
icebp
stos
inc
pop
cmpsl
mov
push
dec
shlb
or
mov
fdivr
dec
sub
and
shlb
sub
or
mov
repz
test
insl
xor
mov
js
sub
cwtl
gs
xchg
rorl
mov
orb
sbb
add
pushf
inc
jns
in
cmpsb
dec
insl
pop
cmp
nop
mov
push
push
mov
or
shlb
sub
ret
les
and
sbb
stos
add
lea
mov
jl
push
push
je
fs
loop
rorb
pop
sti
fimull
xor
fsubrl
dec
scas
cmp
cmc
push
nop
push
add
sub
pop
lock
ret
jbe
mov
dec
mov
sbb
adc
pop
or
push
bnd
inc
add
movsb
dec
mov
popa
and
out
xchg
mov
jne
mov
mov
inc
xchg
dec
dec
mov
es
adc
iret
decb
jbe
lret
popa
sbb
push
test
sbb
std
das
addl
push
lock
mov
mov
push
cmp
mov
insl
and
jmp
jne
sbb
cwtl
xchg
sbb
cli
push
cli
push
scas
fstl
outsl
fidivl
mov
fs
fidivl
xchg
je
sub
dec
int3
push
or
stos
xchg
jmp
cmp
jp
sbb
jnp
jo
data16
or
mov
push
rorb
mov
test
and
ret
pop
add
push
sub
sbb
xor
adc
push
push
into
xor
std
inc
jae
or
cmp
jp
dec
mov
or
and
loopne
and
dec
decb
lcall
or
imul
pop
scas
stc
add
inc
push
and
andb
stos
pop
xor
inc
xchg
mov
sub
sbb
xchg
mov
out
push
jno
add
addb
hlt
pop
cmp
or
ss
mov
pop
adc
jno
adc
jnp
ss
je
and
sar
xchg
cs
push
hlt
pop
cmp
outsl
in
cmp
xor
cs
jo
test
xor
mov
stos
cmpl
cmpsb
inc
push
mov
mov
sahf
cmp
add
mov
dec
cltd
mov
mov
subw
xor
jmp
daa
lods
push
test
mov
es
jnp
ljmp
jecxz
jle
rorl
push
aad
mov
cmc
adc
stos
mov
sub
push
js
fwait
fs
out
xchg
adc
ret
sbb
std
mov
lods
or
xor
mov
insb
pop
mov
sbb
fiaddl
arpl
dec
xchg
jp
push
jl
pop
divb
data16
jecxz
inc
dec
pop
outsb
adc
adcl
pop
mov
xchg
notl
js
test
sbb
aad
lret
or
into
mov
popf
or
lods
incb
push
jp
add
push
out
sbb
movsb
call
lods
mov
jbe
push
or
filds
gs
cwtl
test
outsb
mov
or
mov
pop
inc
xchg
jg
mov
dec
mov
mov
mov
or
in
pop
cmp
shr
push
stos
pop
inc
outsl
loopne
xchg
data16
iret
movsb
mov
arpl
orb
dec
dec
setb
xor
popf
jle
or
xchg
leavew
cmp
pop
xchg
sub
shl
hlt
dec
or
sahf
loop
xor
outsl
inc
inc
pop
stos
sub
push
call
sbb
arpl
fwait
sbb
cmp
pop
lcall
cmp
xchg
inc
jb
dec
push
sub
lea
sub
lea
mov
xor
sbb
mov
add
int3
add
lds
mov
das
stos
xor
add
cld
gs
adc
adc
and
scas
xchg
push
cltd
gs
mov
pop
jl
mov
rcll
rorl
insb
cwtl
pop
sub
mov
je
sub
dec
mov
outsl
lret
push
andb
std
adc
or
add
cmp
jmp
lock
jns
push
mov
mov
mov
sub
push
and
lahf
mov
and
pop
scas
pop
test
daa
mov
sahf
jne
push
xchg
adcl
rcrb
pop
inc
enter
push
and
std
in
jmp
xor
push
mov
push
add
add
jmp
arpl
leave
out
insb
add
inc
adc
ljmp
aas
push
int
xor
loopne
mov
mov
mov
xor
movsb
mov
jmp
add
testb
mulb
inc
loop
imul
dec
dec
rol
push
xchg
pop
sbb
test
idivl
popf
popf
jns
mov
test
ja
inc
fwait
dec
add
mov
mov
imul
dec
pop
cmpb
inc
sub
sahf
scas
push
mov
sar
repnz
mov
mov
add
mov
sbb
movl
or
xor
lret
fidivrl
lea
cmc
int
and
jmp
mov
mov
and
pop
out
and
add
add
or
arpl
push
xor
xor
lret
pop
insl
ljmp
dec
sahf
xlat
mov
mov
pop
sbb
xchg
sarb
jb
imul
or
cmc
or
lret
cmp
fwait
pusha
push
data16
mov
mov
push
cmpb
push
out
adc
push
sbb
pop
inc
outsb
popa
lea
sbb
scas
jecxz
xor
jle
and
inc
adc
jnp
xchg
fsubrp
stos
jne
test
pop
loopne
sub
ds
push
mov
mov
loope
add
icebp
hlt
inc
das
mov
es
pop
mov
mov
call
push
dec
mov
iret
mov
imul
and
pop
out
sbb
pop
mov
jo
dec
push
mov
arpl
add
mov
xchg
sbb
push
dec
popa
push
add
lods
and
shrl
sub
in
cmpsb
xchg
ficoml
pop
sbb
xchg
les
inc
mov
and
subl
pop
add
loopne
addl
add
pop
hlt
inc
call
or
jl
dec
mov
cmp
mov
out
fcompl
inc
aas
jae
cmc
cmp
mov
insl
sti
and
adc
mov
arpl
cwtl
in
subl
adc
xchg
icebp
in
or
mov
lds
pop
cld
xor
loop
ljmp
push
xor
jbe
push
cmp
lea
push
add
mov
lret
jns
mov
cmpsl
mov
or
sarl
xor
mov
dec
cmp
fnstsw
in
jle
mov
xor
movsb
dec
lret
pop
ljmp
mull
sbb
push
mov
xor
inc
jge
imul
outsl
adc
int3
fsqrt
and
clc
dec
mov
je
ror
mov
movsb
lea
sub
sub
cld
loope
xchg
pop
push
dec
inc
dec
jecxz
imul
iret
xchg
or
mov
out
inc
pop
jl
lcall
leave
inc
cli
in
pop
xchg
dec
fs
jbe
cmp
inc
jl
add
xor
push
mov
push
fiaddl
mov
dec
popa
lea
xchg
fwait
jae
lcall
insl
gs
jnp
pop
clc
mov
cwtl
movsl
pop
inc
jl
fdivrs
mov
out
popa
mov
sub
decb
add
push
cmp
repnz
mov
cmc
decb
sub
mov
in
sub
lds
push
lret
cmp
adc
or
pop
hlt
xchg
jae
mov
outsl
imulb
daa
pop
jg
adc
mov
cmp
jb
mov
dec
addr16
aam
ja
jp
jb
cld
popf
faddl
xchg
shrb
mov
loop
fcmovbe
xchg
mov
int
hlt
sub
and
add
sti
cmp
movsb
cmp
orb
cmp
aaa
jnp
push
dec
jmp
jecxz
and
cmp
adc
cmpsl
sbb
push
movsb
sub
stos
cmp
fdivl
xchg
adcl
repnz
xor
dec
xchg
xor
out
push
jl
push
rcrb
mov
popa
xlat
add
jno
pop
std
xchg
nop
addr16
fsubrl
push
loope
rorl
lret
les
mov
pop
or
dec
mov
mov
out
add
add
test
popa
gs
pop
or
adc
and
jb
lock
add
mov
adc
addr16
or
sub
xor
lods
arpl
xchg
mov
mov
mov
lret
jp
lea
mov
mov
jp
cli
lahf
mov
pop
lret
test
fnsave
lcall
dec
fsubr
mov
movsb
in
test
out
aaa
mov
and
xor
pop
pop
stc
rcrl
pop
dec
mov
subl
gs
push
aaa
bsf
mov
xor
cmp
push
pop
mov
push
sub
loopne
pop
test
pop
add
sbbl
dec
add
adc
iret
je
mov
inc
or
xor
push
fcomps
data16
dec
es
dec
or
jp
cmp
popf
push
cmp
jns
test
sarl
pop
pop
push
fcoml
test
stos
ss
mov
cmpb
mov
lds
test
sbb
bound
fidivs
stos
test
andb
test
dec
fmuls
xchg
mov
jecxz
cmp
int3
mov
and
in
mov
gs
sahf
movsb
hlt
fsubl
sub
movsl
cltd
adc
jp
cmpsl
jnp
mov
add
loope
icebp
dec
mov
cmp
push
pop
jmp
or
pushf
in
jl
aam
in
sub
push
xchg
leave
pop
stc
movsb
xchg
sarb
sahf
dec
sti
add
imul
in
or
add
jle
mov
and
ret
add
aaa
movsl
loope
fimuls
scas
add
ret
cmpl
mov
stos
jmp
sub
ss
or
xor
leave
pop
add
movsb
xor
dec
gs
mov
icebp
adc
add
std
mov
xor
js
add
es
imul
lret
dec
xlat
xchg
sub
xchg
mov
sub
sbb
in
je
lods
inc
sub
test
add
jo
jmp
fistl
add
mov
mov
or
out
sti
call
lea
repnz
loopne
sub
push
repz
pop
jg
popa
pop
out
push
mov
pop
cmpsl
scas
ret
push
xor
jns
push
adc
andl
jecxz
or
je
add
jge
loop
or
push
add
imull
mov
lahf
ljmp
pop
mov
sbb
lret
mov
push
std
ret
sahf
sub
movsl
ret
aaa
popa
or
cmp
mov
pop
arpl
sbb
or
lock
inc
lret
pop
mov
jo
lret
mov
loopne
xchg
jge
cmp
pop
push
adc
xchg
loope
outsw
out
lods
test
jle
fbstp
xchg
loopne
arpl
imul
cmp
shll
xor
mov
jle
in
jno
mov
leave
xlat
xor
mulb
dec
insl
loope
fcoml
mov
fstpt
mov
push
and
jg
jae
lret
lock
into
pop
mov
mov
adc
or
sbb
fs
xchg
scas
clc
jo
fdivrs
inc
pushf
xor
cmpsb
imul
add
mov
push
cs
sub
add
insb
jb
mov
mov
dec
lret
push
ss
xchg
ds
cltd
daa
inc
call
fcmovnu
jo
and
mov
imul
fsub
orb
add
mov
popf
and
cltd
pushf
popf
xchg
loope
dec
jns
je
xor
test
dec
or
xor
insb
xchg
sbb
cmp
jo
pushf
sarb
and
dec
aas
lcall
pop
cmp
lods
add
fidivs
pop
movsb
dec
pop
sub
push
lahf
and
push
stos
ds
int
cmpl
aam
pop
add
aam
fisubs
and
adcl
dec
mov
scas
testl
mov
or
cwtl
pop
jns
add
js
mov
imul
std
jno
sbb
sbb
insb
shlb
cmp
mov
push
or
or
or
movsb
mov
xor
inc
pop
mov
xchg
icebp
and
mov
adc
in
lea
fwait
mov
mov
ss
push
hlt
int
fldcw
ud1
sub
pop
pop
mov
adc
ficomps
jmp
lret
xchg
aas
lods
mov
sbb
in
push
iret
mov
les
loopne
lods
inc
xor
fnsave
nop
lock
lods
add
mov
lods
lds
sti
movsb
pop
cli
aam
fstl
lcall
push
imul
push
dec
or
or
push
pop
test
jbe
lock
jmp
mov
fs
fwait
inc
jae
push
sbb
dec
and
jl
sti
cmp
stos
jne
jae
shl
sbb
ljmp
fwait
mov
movsb
xchg
ret
popa
repnz
cltd
loope
test
sbbl
jb
mov
mov
mov
fcompl
gs
std
cmpsl
dec
cmpsl
cmp
lret
push
or
xor
pop
push
or
push
and
psrld
notb
addr16
ds
test
add
jno
cld
movl
jnp
aam
push
pushf
jecxz
adc
xor
or
divb
ds
aam
xorb
inc
lret
lret
arpl
leave
add
adc
mov
bound
and
out
nop
dec
in
cmp
xchg
shll
inc
movsl
jno
lock
in
cltd
outsb
xchg
mov
stos
testl
addb
dec
mov
jae
pop
js
lahf
lods
cmpsb
out
pop
jge
sub
pop
pop
fimull
cmpsb
sahf
mov
cwtl
xor
inc
mov
push
mov
aam
je
fwait
push
shll
dec
mov
mov
insb
mov
pminub
daa
xor
les
mov
in
enter
cltd
xchg
lahf
sub
xchg
faddl
sub
inc
mov
pop
push
or
sub
fwait
jno
and
push
cmpsl
aas
and
sub
sub
fisubs
pop
mov
iret
loop
inc
outsb
fidivrs
rolb
orl
int3
dec
out
pop
adc
movsl
sbbl
outsl
inc
das
adc
pop
cmp
pop
ljmp
sbb
shr
movsb
adc
outsb
repnz
call
sbb
lea
in
lahf
dec
or
cmpsl
adc
jle
pop
test
outsl
cmp
and
clc
popa
inc
int
jne
mov
inc
add
and
jle
inc
inc
mov
dec
inc
loope
push
les
dec
fcoml
repz
or
clc
insl
scas
jge
lods
xchg
add
test
cwtl
jae
adc
cltd
leave
pop
mov
cmp
and
into
jns
ficomps
movsl
xor
push
fstps
xor
xchg
fists
ja
iret
and
push
add
lock
xchg
and
in
das
adc
push
int
icebp
jae
ss
rolb
and
pop
out
jle
ret
pop
icebp
aam
aad
scas
dec
gs
pop
lock
xchg
lea
dec
mov
popa
movsl
mov
cmp
push
sub
cli
rcll
sbb
aaa
ljmp
cmp
mov
adcl
pop
test
gs
jg
sbb
or
ss
mov
jg
rol
mov
sub
jb
cmp
dec
push
dec
lcall
lds
sbb
cmp
lods
mov
sbb
mov
cld
pop
add
and
test
nop
stos
pushl
insb
push
out
aad
add
push
daa
cmpsl
jg
mov
push
fbstp
mov
xchg
push
aas
and
sbb
loopne
ja
pop
jle
repnz
and
push
mov
jmp
insl
xchg
shl
out
cmp
loop
fwait
mov
mov
mov
cmp
lock
fsubl
jne
dec
mov
and
mov
sbb
imul
movsb
in
dec
lock
cwtl
mov
pop
push
mov
push
fcoms
and
push
cmpsb
repz
rcl
jp
loopne
or
add
insb
mov
fmul
lea
adc
sbb
mov
ret
cmp
and
mov
pop
clc
outsl
mulb
shl
push
add
movsl
xor
mov
dec
dec
push
push
sbb
xchg
jo
addb
gs
push
sahf
add
sbbb
stos
test
mov
lcall
mov
popa
iret
push
cmp
mov
adc
pop
add
out
sbb
out
adc
inc
xchg
mov
dec
clc
sti
pop
orb
mov
clc
mov
mov
sub
jl
daa
dec
or
repnz
and
jmp
insl
int3
scas
rcrb
xchg
add
inc
mov
adc
pop
fnstsw
fs
push
jmp
ror
stc
call
pop
out
cmc
stos
mov
pop
push
je
les
xchg
cs
and
ds
clc
inc
gs
jae
cmp
xor
in
rcr
aam
fwait
jae
mov
in
and
mov
ds
test
outsb
adc
jne
aas
xchg
inc
pop
das
aas
lds
add
mov
and
in
dec
dec
sbb
testb
adc
or
inc
jne
cmpsl
scas
loope
in
jb
mov
leave
dec
inc
adc
xor
loop
bound
outsb
adcb
lea
int3
arpl
mov
loopne
loopne
push
or
lret
sahf
and
adc
xor
pop
in
jmp
lock
pop
push
std
or
stos
push
pop
jg
xor
inc
xor
in
push
cmp
sub
xorl
xchg
shlb
and
mov
xor
subl
dec
fs
out
adc
in
cld
cltd
gs
bound
jle
mov
addb
lret
pushf
xchg
push
inc
shl
in
xorl
pop
and
mov
dec
or
leave
lods
enter
or
pop
pop
and
loop
push
push
loop
int
xchg
xchg
mov
push
push
cmp
sub
sbb
xchg
push
cltd
mov
push
mov
mov
inc
cmc
add
lcall
addr16
sub
jbe
xchg
hlt
mov
in
lret
lods
dec
jb
dec
cld
xor
push
popa
les
and
ds
sahf
iret
faddl
leave
test
xor
mov
and
cmpsb
fcoms
arpl
daa
xchg
fwait
in
cs
imul
lcall
xchg
push
shrl
mov
adc
les
jnp
xor
inc
pop
rcrb
and
xchg
pop
insl
push
insl
sub
pop
mov
mov
sub
inc
sbb
clc
mov
arpl
imul
loop
call
sarl
and
add
pop
and
jmp
push
cmpl
into
cmpsb
dec
xchg
cmp
mov
int3
nop
pop
fisubl
stc
lock
cmp
mov
push
popa
pop
into
mov
mov
imul
mov
jmp
jecxz
negb
shl
loopne
in
adc
pop
jecxz
jns
fidivrl
sub
push
or
cmp
sti
lds
mov
orb
sti
sbb
or
movsb
sti
sti
mov
and
mov
popa
insl
in
sarb
push
jg
aam
jmp
push
sbb
jb
mov
adc
mov
xor
stos
nopl
adc
cmpsl
add
xchg
pusha
mov
inc
mov
sbb
jmp
cwtl
pop
out
cmp
xchg
mov
push
aad
insl
push
stc
gs
andl
push
rcrl
mov
fidivrs
push
and
inc
into
pusha
or
add
mov
fistl
leave
jg
add
pop
in
mov
je
mov
adc
mov
sbb
xorl
iret
or
addr16
xor
pop
stc
insb
add
jae
xor
mov
stos
sti
adcb
out
cs
and
and
add
xor
push
mov
std
sbb
lds
sbb
sub
jo
sub
aad
les
cmpsb
out
xor
fsubrp
fmull
ljmp
and
fisttps
pop
fcomps
aam
mov
pop
pop
fidivs
pop
hlt
shrb
mov
movsl
and
mov
cmp
xchg
mov
pop
pop
jbe
in
fwait
aam
data16
cmp
xlat
push
pop
and
lret
mov
popf
lcall
inc
sub
xchg
aad
push
ffreep
jmp
movsl
sbb
sbb
scas
mov
out
lods
inc
cs
mov
cmp
jle
xor
lret
data16
daa
jg
push
movsl
and
rcrl
xor
sbb
jge
jns
inc
scas
lods
je
pop
mov
cmp
sub
mov
cli
repnz
leave
sub
jae
xor
popa
jmp
lods
jbe
ss
and
cwtl
mov
jecxz
push
adc
mov
arpl
jl
in
mov
jo
jecxz
imul
ja
jno
jmp
int
push
stos
xorb
jmp
cmp
dec
sahf
clc
lock
adc
xchg
into
into
rorl
data16
xor
push
test
stos
cld
and
stc
outsb
pop
sarl
mov
movsb
test
mov
popa
jge
in
pop
icebp
ds
jo
mov
out
push
pop
mov
rcrl
cmp
push
test
test
sbb
ljmp
mov
mov
push
xlat
lcall
in
scas
icebp
lahf
ljmp
mov
xor
mov
lea
daa
loopne
inc
mov
mov
xchg
push
insl
data16
xchg
popf
jp
fistpl
ficoml
jnp
push
inc
fucomp
stc
repz
xchg
mov
xchg
std
inc
stc
fs
sbb
arpl
xchg
jbe
push
cmc
ret
in
mov
imul
mov
cmp
leave
xchg
push
inc
or
lret
push
aas
mov
adc
dec
rcll
iret
sub
mov
gs
mov
in
or
pmaddwd
test
inc
cmpb
flds
jg
mov
push
es
movsb
cmpsb
cld
cmc
cwtl
ret
call
adc
pop
in
push
mov
pop
add
rolb
cmp
push
dec
cld
insb
mov
ficompl
adc
out
lret
mov
mov
aam
adc
testl
pop
and
sti
shll
js
mov
xor
adc
popf
or
add
mov
dec
mov
mulb
pusha
mov
push
call
and
mov
xor
movsb
lock
jecxz
sub
mov
adc
scas
pop
cmp
arpl
hlt
jns
pop
repnz
in
cmpsl
mov
addr16
sbb
jno
mov
aaa
inc
mov
jnp
rclb
mov
jno
dec
popa
xchg
sbb
cld
loopne
push
cmp
xor
lods
dec
sbb
jno
cli
call
pop
xchg
insw
fcomps
stc
sub
mov
pop
pop
pop
int
aas
cmp
adc
mov
inc
jne
or
xchg
cmp
cs
pop
dec
mov
mov
jo
ja
imul
add
adc
push
aad
mov
lmsw
adc
xchg
loopne
aam
push
ret
adc
push
and
imul
test
xchg
jbe
sub
inc
mov
les
jp
xchg
and
call
test
xchg
xchg
fwait
cmpsl
hlt
clc
and
mov
xchg
jae
jmp
mov
ret
aam
popf
pushf
dec
add
dec
or
push
repnz
dec
pop
shlb
adc
mov
pop
lret
push
ss
shrl
std
jp
ja
mov
outsb
adc
sbb
lret
lock
add
cwtl
cmp
jecxz
enter
xlat
push
cmp
hlt
stos
movsl
jb
jp
jecxz
sti
nop
rcl
jbe
jnp
fucomi
mov
and
jmp
and
sbb
mov
push
mov
adc
shrb
pushf
test
pop
test
enter
repz
dec
fwait
push
adc
mov
cmp
xor
or
std
shll
lea
cs
push
imul
call
imulb
jecxz
pushf
outsb
jae
insb
fisubrl
stc
sub
mov
mov
xchg
xchg
push
push
jne
nop
std
sub
fdivs
add
std
fisubl
and
xor
lcall
add
call
push
pop
lret
hlt
or
iret
outsl
pop
pusha
cld
clc
mov
ret
andb
xchg
jle
bound
je
inc
cld
cwtl
mov
dec
add
jle
jecxz
sub
mov
mov
ds
pop
push
or
test
int3
inc
push
xor
mov
cmc
adc
or
or
rclb
pusha
jg
stc
mov
enter
data16
repz
movsb
jne
daa
movsb
sbb
in
and
leave
sub
dec
xchg
mov
addl
enter
xchg
idivl
add
cmp
mov
mov
pop
out
push
lods
mov
or
sbb
mov
jp
arpl
pop
jno
out
mov
sbb
fwait
mov
pop
xchg
fildll
out
icebp
clc
dec
xor
mov
mov
decb
decb
hlt
das
aas
push
push
cmpl
fdivp
jmp
sahf
jnp
push
nop
push
xchg
divb
int
fisubs
lret
mov
add
mov
push
icebp
mov
cs
and
pop
xor
add
orl
decl
cmc
fdivr
jge
xor
loope
or
add
mov
and
call
in
insl
in
insb
xchg
push
add
add
inc
es
mov
in
mov
xlat
std
sbb
data16
loop
or
dec
inc
lcall
sub
insl
std
popf
jecxz
mov
pop
mov
xchg
femms
popf
imul
pop
dec
sub
mov
scas
shlb
cmp
xchg
adc
add
or
lcall
flds
popf
leave
in
push
leave
in
das
insl
xchg
fnstsw
ljmp
mov
je
adc
into
call
adc
jo
outsb
mov
inc
jmp
daa
mov
cmp
jmp
mov
cmp
xorb
outsl
into
fs
pop
rol
test
xor
call
lret
pop
xor
and
test
sbb
cltd
insw
ss
xchg
pop
push
sub
sahf
aam
mov
push
push
data16
aas
sub
jecxz
cmpsl
add
add
mov
ficompl
aaa
fucomip
scas
leave
cmc
and
filds
rcr
aad
arpl
fs
test
test
xor
dec
ljmp
cmc
cltd
or
rorl
in
xor
sub
fwait
pop
je
xchg
cltd
mov
xor
inc
and
mov
in
xor
adcl
mov
ret
mov
sbb
mov
ds
cwtl
dec
aad
mov
mov
xor
loop
adc
int
jle
inc
jne
testl
lret
roll
arpl
cwtl
rolb
clc
out
dec
negl
stc
mov
jg
cmp
mov
xchg
pop
inc
mov
jbe
xchg
sub
repnz
mov
ret
sub
out
shrb
xor
or
or
push
sarb
pop
fbld
mov
jnp
mov
popf
push
xor
jl
sub
hlt
push
lods
ret
data16
inc
rclb
dec
cs
jne
sub
mov
rorl
sub
mov
pop
push
out
ret
mov
lea
pop
in
xchg
popa
inc
lods
xchg
jp
fldl
decb
test
out
ljmp
cwtl
mov
in
add
es
jl
push
pop
loop
sub
out
pop
fwait
imul
cpuid
shr
aad
loop
sbb
xchg
cltd
push
or
movsb
mov
fnsave
lahf
insl
adc
ja
pop
dec
mov
ret
adc
inc
mov
pop
pop
lcall
sbb
aas
mov
call
inc
add
add
fcoms
les
adc
fwait
inc
rorl
inc
push
jge
xchg
xor
pop
pop
scas
fdivrs
sbb
into
jb
add
cmp
dec
push
mov
mov
jl
out
mov
mov
insl
rcll
mov
scas
xchg
cmpsb
xchg
and
push
in
daa
mov
sbb
xchg
arpl
cmc
adc
push
arpl
enter
mov
pop
imul
cs
xor
xchg
sub
test
inc
or
lods
mov
cmpb
jle
jle
das
jne
jae
sub
xor
mov
clc
and
aaa
aas
ret
fs
pusha
pop
dec
cltd
sahf
inc
lds
cmp
ljmp
mov
push
mov
xchg
andb
nop
clc
pop
jg
adc
sbb
sub
push
dec
mov
push
jl
dec
cld
cmp
adc
cmpsb
jp
jbe
daa
sub
movl
lock
mov
es
xlat
jno
hlt
test
add
mul
lock
mov
pop
lods
xchg
add
jge
repz
inc
or
lock
icebp
loopne
loop
push
and
push
pop
lahf
xchg
stos
out
mov
lcall
imul
jmp
imul
or
sti
push
fldl
mov
push
ret
or
xor
ret
inc
xchg
ret
sti
xchg
jnp
in
pop
data16
js
scas
xlat
fstps
pop
out
ret
pop
push
mov
jnp
pop
pop
ja
lods
add
sbb
dec
mov
dec
cmp
push
jl
daa
fisubrl
jmp
xor
mov
daa
mov
push
mov
xchg
roll
xchg
mov
cmp
sub
mov
mov
and
add
in
ds
cmc
aad
sti
sub
jg
sbb
jg
sarl
sahf
and
mov
idivl
out
repz
mov
fs
pusha
iret
pop
mov
sbbb
sbb
bound
fsubrp
xchg
mov
out
sub
cmp
test
xchg
int
in
cmp
incl
cli
xor
ds
movsb
cmp
pushf
cmp
sti
dec
es
jno
mov
pop
loope
cmp
mov
mov
sarb
cmc
xor
pop
mov
leave
stc
sbb
and
mov
dec
push
jmp
xlat
and
pushf
and
adc
lea
nop
mov
int3
lods
fists
fcmovb
ja
cmc
fsubr
mov
add
pop
popf
hlt
cmc
jecxz
sub
xor
movsb
mov
ja
xchg
lahf
push
pop
es
repz
testl
lcall
lret
mov
out
sbb
jne
std
and
inc
fisubs
pop
add
inc
ret
add
mov
pusha
inc
fldl
sbb
xchg
pop
cmc
inc
cmc
lret
mov
add
xchg
daa
rcrb
mov
push
mov
inc
sub
jg
lahf
call
stos
mov
jmp
push
ss
mov
lock
test
xchg
jmp
xchg
jecxz
sti
xchg
mov
jbe
out
out
jbe
adc
cmpsl
pop
xchg
inc
pop
mov
sub
leave
lret
je
cmc
lock
xor
mov
popa
adc
inc
dec
popf
or
or
push
push
pop
loop
jg
mov
cmp
cmp
stos
pop
test
xchg
mov
test
push
pop
xchg
mov
xor
ljmp
popf
mov
jg
scas
stos
dec
cmp
movsb
lods
aam
clc
test
mov
mov
lahf
lods
or
sub
mov
push
fisttpl
cmp
repz
cmpsl
inc
mov
push
nop
nop
addr16
xor
cmp
xchg
dec
aam
test
lock
push
rol
xchg
adc
sbb
call
lret
jnp
sti
pop
jg
jp
lods
pop
ja
shr
fnstenv
enter
mov
jne
push
imul
fcmovnbe
pop
mov
sub
in
enter
adc
pushl
data16
jne
aam
and
mov
dec
dec
mov
cmp
shl
add
cli
xchg
leave
lea
ror
test
mov
iret
out
mov
orb
ds
das
movsl
pop
pop
lock
cmp
testb
push
dec
cmp
lock
jmp
cmp
lret
mov
scas
imul
dec
inc
sbb
or
es
xchg
pop
inc
jns
shl
int
jg
sahf
push
sbb
pop
mov
and
jl
adc
cwtl
inc
enter
push
mov
mov
jle
jecxz
jo
movsb
pop
sub
xchg
sti
add
into
stos
jl
pusha
orl
push
mov
sub
mov
fwait
xchg
jns
sti
out
and
mov
mov
stos
push
pop
dec
push
cmp
js
push
mov
out
fcoms
dec
sub
test
dec
pop
ret
jb
in
inc
mov
sbb
ds
sbbl
lcall
sbb
mov
adc
push
mov
pushf
scas
pop
loop
dec
aas
out
xchg
outsl
or
xchg
mov
mov
out
cmp
xor
test
and
int3
or
cmp
outsl
add
xchg
sbb
clc
scas
addl
lcall
and
aas
xor
mov
and
mov
push
inc
mov
jl
loope
inc
fcompl
xlat
and
imul
xlat
lods
popf
pop
jmp
lea
push
and
sarl
lea
leave
add
stos
test
in
xchg
sbb
adc
xchg
mov
leave
stos
fs
jno
inc
add
push
cmp
lcall
jp
xor
push
sub
stc
add
and
mov
jmp
xchg
movsl
push
cmp
or
add
fsubrs
jne
jno
in
sarb
push
int3
ljmp
out
mov
xor
lret
repz
or
popa
or
xor
rcl
rol
inc
roll
sbb
fcoml
add
fs
jbe
inc
loopne
cmc
mov
je
rcl
sbb
into
enter
cmp
dec
push
ret
and
adc
out
jnp
lods
sub
in
fsubrl
xchg
pop
enter
ret
cwtl
push
dec
pop
movsl
mov
icebp
sbb
jp
cld
pop
mov
xchg
mov
pop
adc
iret
push
fxch
cmpsl
push
dec
in
out
adc
in
movsl
movsl
sti
es
bound
hlt
inc
inc
mov
dec
daa
and
std
outsl
lods
test
adc
push
out
aas
push
xlat
std
stos
dec
fldcw
xchg
lea
and
jbe
test
jne
mov
pop
mov
push
sub
sbb
lret
hlt
and
scas
cmp
aaa
std
lret
inc
repz
pop
fisubrs
dec
jmp
into
mov
outsl
cmc
push
lret
cmp
or
pop
inc
or
je
mov
or
inc
xor
test
enter
inc
mov
in
pop
out
mov
test
arpl
sarb
popf
pop
mov
call
mov
and
mov
adc
push
pop
adc
int
sbb
add
pop
rorl
jmp
jo
cmpsb
rorl
adc
loop
ret
jmp
shll
and
push
out
mov
mov
sarl
cmc
xchg
mov
mov
arpl
rol
or
add
fisttpll
pop
sub
xlat
pop
in
cwtl
add
loopne
pop
pusha
adc
push
insl
or
imul
cwtl
xchg
test
addr16
mov
push
addr16
loop
aaa
dec
insl
xchg
jp
test
int3
sbb
in
scas
jmp
ficompl
add
dec
xor
and
jno
lea
xor
dec
mov
pusha
jle
arpl
sbb
jmp
jge
mov
andb
jb
rcr
dec
movsl
jl
fwait
dec
jno
inc
add
add
mov
cmc
scas
or
out
add
insl
inc
add
in
insb
rclb
cmp
out
mov
cmp
es
dec
pop
dec
aam
fs
pop
xorl
sbb
imul
insl
not
push
xchg
pop
ret
sbbb
mov
cmp
les
and
subb
and
mov
fwait
lds
jp
mov
outsl
dec
loope
lcall
mov
or
mov
cmp
jp
lods
pushf
xchg
cmc
pushf
jbe
cltd
dec
mov
addr16
aam
nop
cmp
xor
repz
dec
rorl
jmp
push
mov
xor
fcoml
push
stos
pop
inc
into
mov
adc
cltd
aaa
aad
push
adc
int3
and
xchg
adc
fs
test
pop
pop
add
mov
mov
ret
push
cmp
repnz
mov
sbb
dec
lods
test
cmpsb
sub
push
add
out
cmc
cmc
xor
jae
rcrb
in
mov
mov
xchg
in
into
jns
jo
test
ja
addr16
dec
insb
std
rep
int3
sbbb
xor
sub
movsl
aam
insb
int3
cmpsb
push
lcall
decb
fmulp
hlt
mov
cmc
or
mov
mov
aad
les
mov
add
push
xchg
and
sbb
adc
movsb
fdivs
mov
inc
push
or
outsb
push
ret
dec
pop
iret
jmp
mov
mov
call
mov
mov
mov
sbb
xor
or
xor
push
nop
lcall
test
adc
adcb
push
ljmp
cmp
lret
and
mov
add
test
inc
test
mov
mov
call
ret
sarb
xor
push
int
lea
jmp
jmp
adcl
insl
push
sub
mov
pusha
mov
mov
scas
outsb
ret
add
dec
xchg
ja
movsb
jecxz
data16
pop
jbe
out
cmpsl
pop
mov
push
mov
aaa
pop
jmp
mov
jo
insb
adc
scas
xor
lods
fcomi
pusha
ljmp
lcall
mov
aam
cmp
cmp
xor
out
lahf
mov
imul
xchg
xchg
jmp
jnp
imul
ret
popa
jecxz
repz
adc
cmpsl
jg
scas
cwtl
mov
sbb
push
imul
push
out
or
adc
mov
cmp
test
cmpsb
test
testl
push
lahf
ficoms
jb
mov
inc
inc
sbb
aam
dec
jmp
pop
jo
cmp
cmpsl
into
xchg
dec
sub
xchg
jg
jb
add
aam
or
out
xor
sbb
add
sub
sbb
cli
mov
push
test
mov
enter
pop
mov
push
pop
es
mov
movsl
jge
call
sbb
scas
jecxz
xor
mov
mov
fcoml
lock
mov
std
xor
test
std
mov
push
test
movsb
mov
xor
adc
call
sub
sbb
je
cmp
sub
xor
sub
inc
jp
sti
jp
push
jo
sarb
outsl
mov
rclb
push
cmp
mov
and
mov
lret
adc
pop
xchg
jnp
or
mov
jbe
icebp
lahf
mov
pop
ret
and
pop
data16
jb
adc
cmc
or
pop
jecxz
addr16
or
mov
pop
adc
cmp
jl
ljmp
xor
xor
fldcw
inc
orb
mov
pop
jmp
pop
inc
xchg
pop
sub
scas
cmp
push
xor
adc
bound
sub
or
outsb
clc
fs
lcall
sub
sub
mov
in
inc
stos
das
dec
push
mov
xor
andb
add
test
inc
loopne
fs
cmpsb
adc
lea
sbbl
mov
out
aad
fisubl
and
push
dec
xchg
sub
mov
adc
xchg
lods
dec
mov
xor
mov
fwait
aam
out
ljmp
shrb
out
cld
mov
xchg
xchg
jne
movsl
jno
movsl
in
imul
inc
pop
xlat
daa
mov
test
push
inc
sbbl
fwait
dec
push
lods
shlb
push
pop
lea
push
daa
mov
repnz
xchg
adc
in
cmp
adc
cld
inc
ret
pop
mov
add
cmp
add
push
arpl
lea
ret
dec
out
or
push
inc
lret
out
cmp
mov
rcl
test
or
ljmp
orl
enter
loope
cmp
mov
int
and
push
or
pop
dec
jns
push
xor
xlat
jno
dec
sub
das
xor
in
lea
jno
in
pushf
mov
push
jo
jle
push
and
and
xor
fldcw
add
pop
adc
inc
orb
dec
les
add
outsb
push
pop
sbb
push
adcb
nop
in
cmp
mov
das
mov
sub
jb
lcall
cmp
xor
adc
mov
aad
mov
shl
xchg
jge
pop
aas
xor
or
outsl
push
popf
xchg
mov
test
aaa
mov
inc
shl
jmp
dec
add
stc
push
negb
sub
inc
movsb
test
push
fisubrl
mov
add
movsl
js
dec
dec
add
test
testb
inc
loopne
mov
push
push
or
cmp
sub
or
adc
dec
mov
fcmovu
mov
cmpb
cmp
subl
loope
mov
incl
inc
cltd
push
xchg
lock
dec
rolb
movsb
js
repz
dec
dec
test
sbb
add
lahf
cs
fwait
mov
xchg
or
pop
outsl
adc
enter
or
sbb
scas
mov
jecxz
push
push
gs
pop
inc
ret
aam
push
rorb
xchg
cmp
in
xor
out
cmp
pop
cwtl
cmp
iret
cs
mov
sub
sbb
jae
test
xchg
mov
xor
lock
stos
dec
les
xchg
sub
xchg
add
and
in
push
sub
scas
add
mov
ss
stc
out
out
aam
out
xor
stc
mov
or
and
mov
ret
xchg
sub
popa
dec
and
dec
sub
dec
hlt
fildl
inc
jb
push
xchg
add
lock
dec
fs
xchg
add
insl
int
faddp
cmp
sbb
push
cmpl
add
jo
fstps
jns
inc
jne
fisubrs
cwtl
fistps
inc
push
cmp
in
xor
adc
int3
push
out
lods
push
cmp
insb
pop
add
add
testb
cmpsl
inc
cmp
xchg
mov
xchg
mov
lret
test
outsb
test
rcrl
ja
add
mov
aam
pop
jne
push
movsb
shll
mov
adc
pop
lcall
cmc
repnz
push
rcrb
sbb
push
sub
lods
inc
int
xchg
sbb
push
jns
sarb
mov
aad
iret
ja
daa
int
sbb
nop
mov
pusha
add
orb
cmp
cmp
pop
js
icebp
repnz
ret
movsb
repnz
push
and
inc
pop
push
pushf
aas
jbe
push
adc
sbb
out
cs
dec
sbb
sahf
xor
inc
pop
inc
imul
xor
fists
cmp
jno
cmp
adc
bound
imul
push
mov
add
add
dec
lret
jmp
adc
xchg
bnd
inc
xchg
repz
inc
ljmp
jl
sub
subb
fstl
xorb
pop
mov
inc
or
cmp
add
mov
jns
cli
out
mov
sub
mov
cmp
leave
and
popa
or
mov
jns
jge
mov
popa
cmp
in
lock
dec
negl
int3
imul
lock
jae
aas
mov
cmpb
shl
gs
lcall
xor
mov
fsubrl
insb
adc
jp
xchg
adc
mov
pop
fcmovnb
addb
mov
stos
scas
jne
std
mov
pop
and
loop
dec
xchg
loop
mov
xor
into
adc
adc
add
xor
push
pop
mov
jecxz
adc
gs
xchg
repz
xor
mov
push
ljmp
mov
icebp
imul
add
and
jle
add
mov
adc
cmp
adc
mov
setge
pop
popa
jns
adcb
sub
test
bound
enter
stc
jle
and
jae
cmp
rclb
pop
cmpsl
dec
add
pop
mov
shlb
aad
sbb
sub
mov
xor
xorb
or
adc
stc
loop
sahf
loope
xor
push
mov
mov
aam
sbb
jnp
insl
inc
jmp
js
or
pusha
mov
sti
and
sub
cmp
mov
pop
les
cmc
ljmp
popf
push
mov
xchg
jmp
push
mov
cld
mov
or
adc
mov
mov
jg
cmp
mov
pop
scas
push
lods
sub
icebp
loopne
pushf
pop
std
je
ljmp
xor
cltd
mov
push
mov
jl
mov
pop
hlt
rolb
aad
and
jo
test
scas
jl
add
add
leave
jmp
out
pusha
inc
xchg
inc
es
roll
fs
sahf
lea
pop
ret
aad
push
or
or
add
ret
mov
stos
arpl
xor
in
jne
pop
pop
push
add
mov
sbb
movd
xchg
mov
and
jne
lahf
lcall
inc
sub
push
pop
adc
popf
pusha
mov
jae
dec
cmp
call
add
jmp
mov
arpl
lods
scas
jp
mov
imul
lods
xchg
rcrl
xor
xchg
mov
mov
ja
data16
in
xchg
rcl
popa
test
or
push
in
xchg
xchg
ljmp
jbe
call
sti
xor
and
fildl
mov
test
inc
pusha
xchg
cmp
sbb
push
inc
xchg
adc
fistl
or
xchg
mov
mov
out
push
aaa
stos
xchg
cmp
mov
pop
dec
outsl
mov
mov
ljmp
dec
stc
xchg
into
mov
fidivrl
mov
adc
cmpsl
mov
adc
adc
in
call
dec
jge
mov
test
ret
test
shr
mov
mov
test
scas
push
jno
mov
imul
mov
sarb
jne
fimull
jmp
clc
jmp
dec
lcall
test
xorb
in
jo
dec
je
ss
fsubl
or
adcb
mov
sti
jnp
repnz
add
add
push
dec
in
pop
enter
and
outsb
mov
pop
sub
ss
repz
sub
mov
push
lcall
sub
inc
jno
iret
into
fisubrl
int
push
sbb
mov
fucomp
xchg
mov
add
andb
jne
int
xlat
stos
mov
roll
clc
cmp
aaa
and
xchg
popf
mov
push
cld
lea
inc
cmp
mov
push
jnp
ret
jl
repnz
xchg
cs
mov
and
test
out
mov
in
fiaddl
pop
push
je
cmp
mov
out
shrb
jbe
ljmp
in
test
out
mov
inc
icebp
jne
mov
in
pushf
movsl
inc
pop
rcrl
fcmove
lahf
imull
jnp
in
jmp
sub
mov
out
mov
jbe,pn
and
sub
inc
jne
int3
cs
mov
cltd
addr16
jecxz
lods
ss
xchg
cmp
pusha
sbb
iret
insb
mov
out
ret
outsl
pop
inc
xchg
into
xchg
push
stc
and
iret
enter
mov
pop
mov
xor
add
rolb
cmpsb
cmp
lret
sub
shlb
xor
ljmp
push
pop
adc
lcall
sbb
pop
push
push
and
ret
fidivrl
mov
aad
mov
sub
repnz
inc
jg
cmpsb
or
into
outsb
push
dec
push
dec
shrw
pop
xchg
daa
pop
sbb
xor
push
repnz
das
aad
sbb
das
icebp
cs
pop
mov
push
push
sbb
jmp
js
xchg
lods
inc
jnp
pop
js
push
pop
aam
dec
pop
and
rorl
add
cld
mov
push
jecxz
pop
mov
and
jns
es
repz
push
pop
xor
inc
dec
ljmp
and
icebp
cmc
cmp
push
add
je
gs
or
daa
sbb
inc
push
enter
test
adc
bound
pop
jle
scas
and
cwtl
popf
cmp
cmpsl
dec
popa
dec
insl
ret
out
push
fbld
nop
scas
jbe
es
pop
fadds
push
loopne
push
adc
call
sbb
mov
cmp
xchg
leave
xchg
push
sahf
in
aam
andb
fsubs
pop
mov
cli
je
daa
cmp
dec
dec
rolb
mov
adc
cmp
pop
idivb
rcll
cmp
and
movsb
mov
pushf
pop
push
push
pop
in
mov
cmpsb
pusha
sbb
aaa
ret
sub
test
mov
bsf
xor
pop
ret
mov
scas
inc
ds
mov
mov
test
cli
add
pushf
adc
sbb
sub
imul
pop
repz
mov
inc
and
std
shl
cltd
cmp
or
adc
or
xor
fistpll
or
shr
cmp
out
in
aad
and
mov
dec
js
fdivrl
jg
sahf
jne
dec
xchg
ss
in
fwait
sahf
ret
cmpsb
jle
sbb
fcmove
aaa
pop
sub
jecxz
out
and
js
ds
das
mov
sub
cmp
clc
sbb
pop
movsb
aad
and
jbe
imull
lods
in
rcrb
fsts
out
cmp
adc
fs
adc
push
cs
into
movsl
mov
xor
shlb
jg
mov
dec
jecxz
shr
pop
push
loope
push
test
or
push
jmp
dec
push
push
aam
lods
jno
add
mov
leave
and
negl
dec
adc
pushf
push
dec
dec
xor
mov
stc
call
fsubrl
mov
cli
cmpsb
cmp
dec
cli
incl
push
sarl
xor
xchg
scas
add
gs
and
in
leave
and
roll
movsl
jecxz
push
and
xchg
outsb
xor
divb
cmp
jge
ss
pop
jecxz
jae
mov
adc
mov
pop
lods
hlt
mov
les
fwait
cmpsb
imulb
mov
or
add
divl
notl
add
push
movsb
data16
or
or
pop
mov
outsl
fisubs
pushf
add
mov
lahf
ds
pop
jns
jl
xchg
inc
loope
insl
ja
lret
jno
xlat
rcll
inc
adc
dec
ljmp
out
sub
aas
adc
mov
nop
inc
mov
mov
push
ja
jmp
or
lods
insb
loopne
add
repz
or
xor
out
cmc
test
mov
insb
out
xor
and
icebp
inc
dec
insl
enter
test
loop
and
cmp
xor
xchg
dec
insb
sub
enter
aam
add
fbstp
test
add
outsb
dec
inc
aad
jecxz
dec
adc
aam
pop
cwtd
jmp
jmp
fsubp
lock
jg
inc
andb
fmul
and
enter
das
and
inc
pop
fidivrl
or
and
or
lahf
pop
cmc
or
ret
pop
aam
test
fistps
js
or
ret
aas
adc
sbb
in
jnp
add
outsl
into
mov
jno
popa
mov
sub
dec
in
fisubs
sub
cmp
mov
shl
dec
and
pop
xchg
xchg
nop
ljmp
mov
aas
cltd
mov
scas
mov
mov
push
mov
xor
jbe
mov
mov
out
sub
sahf
cmpsl
pop
xor
adc
mov
clc
cmp
and
lcall
xchg
jae
jae
inc
test
rorb
les
xor
mov
je
jle
in
or
mov
out
push
popf
dec
hlt
xchg
in
dec
mov
inc
sbb
sahf
scas
xchg
mov
mov
pop
adc
add
cld
xlat
sbb
push
push
fmuls
mov
sub
push
test
mov
out
jmp
fstpt
loope
mov
hlt
sub
fstpl
inc
push
test
in
nop
xchg
sbb
sahf
fisubl
adc
lret
adc
fnstsw
jne
cs
out
mov
rcrb
lret
lret
add
mov
push
test
cmpb
xchg
das
rclb
cmpsl
movsb
test
pop
jecxz
popa
cmp
mov
dec
fsubrs
mov
dec
clc
lods
add
setae
adc
jg
test
lahf
in
sahf
test
sbb
adc
mulb
fsubl
pop
mul
cmp
stos
mov
mov
xchg
add
cwtl
imul
pop
jmp
mov
movsb
or
scas
push
pop
sarl
adc
or
mov
cmp
mov
imul
pusha
test
lret
mov
xor
inc
fsubs
mov
and
mov
out
fbld
test
add
pop
shlb
aas
or
ja
test
and
enter
xrelease
pushf
and
push
sti
xchg
push
cmpsl
add
add
arpl
repnz
test
dec
cli
jo
mov
jo
cmp
push
int3
mov
loop
sub
xor
xor
dec
xchg
xor
clc
or
in
inc
xchg
clc
cmp
adc
enter
and
mov
sub
and
xchg
dec
lock
imul
cmp
arpl
test
cltd
in
mov
add
outsb
jge
jecxz
inc
cli
pop
int3
and
push
xchg
fnstenvs
sub
sbb
jae
add
jmp
mov
or
cli
inc
fbstp
shrl
repz
xor
repnz
push
fsubs
aad
aaa
ja
sub
dec
out
movsl
and
mov
jg
cmc
inc
mov
lret
pushf
mov
cmp
xchg
inc
mov
sub
mov
fistps
mul
xchg
inc
aas
jg
xchg
repnz
jo
cmp
add
push
push
push
xchg
aad
lea
pop
dec
cmp
arpl
pusha
jb
outsl
call
cmp
push
and
pop
and
cmp
movsb
daa
lock
test
mov
bound
andl
xchg
scas
stc
pusha
push
lods
sub
adc
push
pop
and
cli
in
or
inc
jo
ret
pop
stos
jo
nop
adc
xchg
jp
sub
push
aas
xor
push
push
rorl
sbb
cmpsl
or
and
adc
sub
push
in
lret
mov
fldenv
xor
or
xchg
fwait
cli
sbb
mov
fdivl
movsb
xchg
dec
mov
loopne
cli
mov
cmp
sbb
xchg
jg
mov
mov
scas
in
push
out
cmc
push
mov
lods
and
dec
mov
out
xchg
jno
pop
les
test
dec
fwait
aaa
pushf
push
aas
sbb
mov
outsb
and
lods
xor
rcr
fsubrp
xor
xor
outsb
xor
sahf
sbb
mov
jno
and
mov
sbb
jp
xor
or
mov
cmpb
insl
xlat
mov
idivl
fdivrs
adc
and
pop
dec
cmp
and
sti
pop
push
jg
dec
cli
filds
negb
js
jmp
push
out
inc
push
in
lahf
xchg
xor
mov
test
out
dec
sub
loope
pop
fadds
push
or
jne
dec
repz
push
jo
scas
mov
push
js
mov
movsb
add
repnz
sbb
rcll
sbb
mov
mov
in
imul
or
mov
xor
mov
in
xor
mov
pop
js
aad
jne,pn
dec
les
xchg
aas
ss
mov
jo
mov
loop
iret
sahf
jle
scas
scas
xor
popa
incb
and
insl
cmp
lret
pop
loop
jg
cmp
dec
push
push
push
pop
stos
mov
push
std
fdivl
ljmp
test
aaa
sub
stos
mov
in
lret
das
rorl
and
xchg
lods
jp
mov
jb
or
and
mov
inc
aaa
push
mov
mov
sub
add
lock
mov
icebp
inc
lret
nop
xchg
or
lret
xor
jle
jge
push
lcall
fs
jnp
int3
scas
cli
test
or
vunpckhps
and
cmpsb
data16
inc
jl
mov
fsub
notb
jp
mov
xchg
sti
mov
outsl
mov
lds
pop
nop
aas
jbe
es
mov
imul
mov
fistpl
enter
mov
jecxz
mov
inc
sbb
add
bound
jmp
fstpl
and
orb
movsb
sub
add
mov
call
outsb
pop
pop
addr16
nop
dec
incl
mov
aad
mov
push
mov
icebp
aam
or
movb
mov
push
dec
imul
adc
jp
adc
cltd
bound
or
add
or
subl
mov
in
mov
invlpg
call
push
and
push
std
dec
pop
pop
push
xchg
mov
mov
repz
xor
push
fistpll
cltd
nop
or
frstor
mov
sbbb
add
popf
addr16
movsl
bound
cmp
pop
jo
adc
cwtl
mov
pusha
cld
cs
in
or
cmp
sub
popf
jb
out
mov
inc
fldcw
aas
stc
stos
pop
or
lock
dec
dec
mov
jge
dec
stc
das
cmp
iret
add
sub
xor
imul
push
add
pop
jae
pop
push
lods
imul
gs
or
mov
mov
and
sub
in
int
ficompl
adc
jl
sbb
loopne
es
mov
push
or
and
cs
pop
je
and
mov
fwait
pusha
test
and
sub
arpl
loopne
out
fwait
cmp
call
test
and
sarb
das
movsl
pop
mov
or
add
inc
enter
aad
push
xchg
cmp
cmpsb
jb
jle
sub
cmpsb
rcll
aas
out
adc
and
aad
jge
dec
pop
mov
out
push
stos
xor
iret
popl
push
es
xorb
jo
jmp
jmp
leave
mov
movsl
inc
sub
inc
dec
pop
int
push
push
lea
jge
mov
ficomps
mov
adc
add
dec
insl
mov
xor
outsb
or
roll
lcall
setnp
mov
sbb
cld
cmp
popf
into
into
sbb
sub
inc
cmp
leave
mov
sub
es
push
fsubp
or
outsl
jg
das
out
std
mov
notb
xor
push
push
es
push
mov
cmc
push
imul
stos
xchg
sahf
xor
dec
fstl
mov
cltd
adc
mov
mov
aam
ret
hlt
popf
xor
stc
in
fdivr
xor
notl
ds
enter
stos
and
movntq
pop
lods
jmp
les
jbe
cltd
lods
pusha
inc
lahf
nop
outsb
push
cld
fcompl
jle
add
pop
mov
out
sbb
mov
jb
add
push
inc
add
cmp
push
inc
and
jle
push
pop
add
bound
insl
pop
loopne
jg
sahf
cs
es
icebp
or
ljmp
jnp
mov
sub
pop
cmp
push
pop
jg
aaa
xor
jbe
jecxz
push
and
ja
sbb
ljmp
sbb
scas
sbb
inc
cwtl
push
xchg
fildll
sbb
cltd
imul
add
fwait
push
ret
jno
jne
mov
adc
add
add
loope
leave
dec
incb
lock
sbb
push
or
adc
push
test
inc
cmp
sbb
mov
and
in
sub
cmc
aam
mov
cli
cmp
shlb
add
roll
pop
dec
shll
xlat
inc
test
cs
mov
inc
pushf
xor
enter
mov
push
out
lcall
sub
pop
in
and
adc
xchg
sbb
cmp
es
lods
mov
and
mov
pop
js
pop
dec
into
ficompl
mov
bnd
popa
stos
push
nop
lcall
sub
dec
cmpsl
mov
std
adc
push
cld
pop
sar
dec
dec
inc
adc
icebp
notb
inc
sbb
stos
inc
and
push
lods
push
loope
es
clc
mov
jge
test
xchg
int3
jecxz
fistpl
test
int
sub
inc
ds
les
pop
sub
sbb
and
sub
sbb
jns
sarl
rorl
sbb
dec
xchg
ds
and
loop
cmp
mov
in
push
loopne
std
cmc
subb
xor
xor
cmp
jle
jle
loopne
aad
push
nop
aad
push
nop
rorb
mov
or
inc
xorl
cmp
add
das
lret
push
push
loopne
das
pop
lret
mov
jae
jp
divl
aad
lret
lcall
and
mov
dec
add
inc
cmp
mov
pop
imul
in
pop
sbb
stos
and
and
xor
sbbb
fldenv
or
popa
add
xchg
repnz
ja
jnp
movsl
lods
hlt
clc
rorb
and
inc
aas
rcll
pushf
dec
aas
cmp
pop
ret
shl
fdivrl
sti
pop
and
push
xchg
sub
stos
jmp
lret
insl
rclb
fcompl
add
fldl
xchg
addr16
mov
push
pop
cmp
out
pop
int3
test
add
rcrl
push
gs
rcl
andl
mov
mov
ss
int
mov
add
dec
rclb
scas
fs
inc
xor
xchg
jno
mov
add
in
cmp
mov
sub
imul
fstpt
ret
fbld
mov
mov
cld
dec
sti
cmp
sub
ret
ljmp
adc
jle
cmp
repz
imul
cs
jo
mov
push
jmp
adc
sbb
mov
arpl
cmp
push
push
push
rcr
div
popf
stos
dec
cld
and
mov
cld
push
loope
mov
cli
push
xchg
push
jmp
mov
mov
sub
jbe
and
in
rorl
xor
jmp
aam
cmp
pusha
xlat
outsb
enter
popf
xchg
scas
jmp
lcall
xchg
in
out
out
xchg
push
cld
cld
dec
pop
daa
sub
daa
inc
test
xchg
or
cmp
add
cmpsl
out
data16
mov
aam
inc
je
movsl
ret
rol
push
sbb
or
sub
imul
xchg
loope
pop
dec
pop
adc
fldenv
repz
ficoml
dec
push
and
xchg
or
pop
clc
repz
dec
and
push
and
jle
insl
jns
cmpb
inc
mov
in
dec
in
movsb
mov
inc
xlat
adc
fimull
inc
lds
das
and
pop
pop
mov
mov
ja
in
xchg
pop
sub
mov
inc
lods
mov
pop
and
stos
sbb
mov
into
push
lea
test
mov
mov
push
pop
push
xchg
test
popa
inc
and
cli
sarb
mov
test
mov
lcall
push
xlat
iret
test
jbe
clc
xchg
inc
sbb
dec
ret
mov
mov
dec
add
sbb
mov
lds
sbb
jle
mov
rcl
gs
pop
pushf
hlt
insb
insb
enter
fwait
sub
pop
mull
test
pop
add
imul
cmp
dec
sahf
les
cmpsl
push
xor
ja
push
fsub
dec
es
dec
out
lods
inc
inc
sub
outsl
repnz
shr
stos
fwait
or
dec
xchg
in
push
add
sysexit
mov
push
les
mov
addr16
push
ret
mov
add
imul
fldt
sub
outsl
sbb
jmp
cmp
push
fisubrs
sbb
sti
inc
ficomps
dec
addl
jns
cmc
ja
push
pushf
sub
fwait
cmp
jle
jecxz
addr16
push
adc
lods
shrb
mov
sbb
cmp
cmc
cwtl
test
into
xor
jno
push
not
int3
imul
cld
out
scas
outsl
mov
or
and
inc
jbe
inc
cmp
add
ss
mov
mov
mov
lahf
repnz
std
dec
adc
ja
push
lret
jl
je
push
subb
sub
jecxz
rolb
lret
addr16
pop
fwait
jo
dec
cmp
cmc
sbb
cld
je
aaa
in
dec
push
push
jl
fs
inc
imul
xor
add
push
jmp
cwtl
lock
push
cmc
push
fiaddl
int
in
mov
clc
dec
mov
and
rdmsr
or
out
loop
movsl
cwtl
aad
mulb
push
imul
jmp
pushf
aad
popf
mov
pop
out
sbb
push
pop
subb
stos
pop
and
enter
movsl
rcrb
imull
push
mov
or
mov
xor
out
hlt
loopne
adc
cmp
add
xor
movsb
ret
dec
mov
mov
in
les
mov
mov
stc
ret
sbb
outsb
stos
xor
mov
xor
cmp
sarl
ret
ret
jne
enter
adc
imul
push
mov
push
xchg
push
xchg
dec
decb
or
js
and
insb
xchg
xchg
test
pop
rclb
and
loopne
inc
push
sbb
sahf
cmc
mov
adc
outsb
pop
xchg
sbbb
sub
out
lds
jo
int
pushf
test
and
aaa
adc
into
enter
stos
pop
std
js
push
aad
xchg
push
mov
shlb
lret
pop
and
or
pusha
fnstenv
js
aam
loopne
add
mov
and
inc
adc
pop
pop
jns
in
lcall
xchg
cmp
lea
sar
cmp
sub
arpl
ds
cmp
mov
fildll
sbb
scas
in
cli
das
lods
jmp
push
fisubrl
adc
xor
mov
test
les
and
scas
repz
jecxz
mov
push
add
ja
lock
test
add
cmc
xor
xor
lea
cmc
push
xchg
test
cmp
cltd
cmpxchg
push
pusha
out
out
add
popa
cld
xor
adc
jne
or
mov
test
and
iret
pop
sbb
shr
mov
das
mov
test
lock
mov
data16
into
rclb
mov
add
xor
sbb
xor
mov
cmp
mov
sbb
pop
sahf
add
add
or
test
mov
mov
jg
into
call
add
mov
jbe
or
int3
cmp
cmp
test
push
mov
push
mov
xor
jno
inc
and
jbe
out
cmp
dec
xchg
and
jns
bound
fptan
and
fninit
adc
stc
lcall
std
pop
add
sbb
imul
popa
subb
icebp
xchg
sub
push
mov
incl
sub
sub
or
push
or
int
add
mov
fldt
pusha
and
test
rorw
dec
inc
add
adc
xor
fwait
cmpsl
push
adc
and
rclb
jle
rorl
lahf
dec
push
pop
push
mov
jg
cwtl
cmpsl
xchg
test
stos
out
push
jl
mov
scas
pushf
mov
mov
sbb
lret
in
test
ja
xchg
pop
jb
pop
jecxz
mov
ficoml
pop
or
into
addr16
xchg
icebp
mov
pop
ss
push
jmp
mov
fucomi
inc
xor
or
es
push
mov
je
add
adc
leavew
pop
sbb
icebp
sbb
and
jae,pn
and
inc
cwtl
testl
int3
rorb
outsb
push
adc
int
outsb
add
adc
popf
push
sti
or
adc
std
jo
add
roll
sub
mov
add
lret
mov
dec
add
stc
test
mov
inc
scas
cwtl
sbb
sub
ret
insl
mov
shrl
lret
inc
lret
sbb
test
jne
lret
mov
cmpsl
add
ss
xchg
stc
xor
rclb
pop
or
mov
push
push
xchg
inc
push
pop
out
cli
test
mov
or
inc
adc
mov
leave
and
sbb
cmpsb
sbb
push
cmp
sbbb
inc
in
cmp
lahf
mov
jg
mov
clc
data16
out
aaa
insb
xchg
xor
movsl
push
daa
incl
out
ret
das
mov
adc
mov
in
push
add
pop
jge
jno
mov
call
imulb
add
into
adc
inc
movsb
stos
sub
mov
fcmovne
sarb
push
cmp
adc
loopne
jne
push
adc
lcall
sbb
jecxz
sbb
sub
ss
aad
hlt
adc
or
jb
inc
lahf
mov
shl
and
mov
jp
push
xor
ljmp
jge
std
cmp
cmp
mov
cld
dec
pop
out
es
pop
mov
adc
adcb
out
cltd
pushf
out
loope
sub
scas
or
add
insl
jo
imul
mov
fistpll
xchg
jns
jbe
int3
repnz
dec
jg
xor
insl
int3
fwait
jae
pop
mov
outsl
dec
jnp
xlat
cmpsl
pop
fistpll
out
cmp
mov
cmp
mov
js
movsb
xchg
push
push
pusha
shll
xor
out
mov
mov
arpl
inc
imul
sbb
xlat
add
rcr
inc
cmp
and
popf
push
int3
dec
pop
jle
sti
mov
daa
xor
jae
jge
std
jge
pop
out
inc
lods
std
mov
neg
bound
jns
and
mov
aad
mov
fadds
arpl
scas
sbb
repz
xchg
sub
push
adc
lock
push
and
std
inc
mov
xchg
enter
rcrl
sbb
jge
pushf
test
cmp
adc
mov
fbstp
add
mov
jo
jne
aaa
push
lea
insb
cmpsl
fs
aas
cld
push
int3
xor
xor
fisubrl
es
sti
es
cmpsl
mov
add
fdivl
pop
or
pop
mov
mov
rclb
rcl
pushf
outsb
fstl
stos
sahf
dec
jne
arpl
sbb
ds
popa
addr16
cmp
in
mov
dec
jg
cwtl
out
cli
data16
pop
cmova
cltd
or
push
mov
rolb
cli
fdivrl
jne
add
mov
xchg
int3
test
push
cmc
sbb
arpl
sub
pop
cmp
je
and
ficompl
ds
popa
repnz
sahf
rcrl
jbe
inc
mov
mov
or
and
and
enter
test
dec
iret
data16
clc
outsb
mov
dec
mov
mov
int
and
dec
repnz
sub
push
lods
movsb
iret
popl
je
cmp
fisubl
push
seto
arpl
lods
mov
xor
pop
push
aas
push
lock
xor
cmp
and
aaa
inc
dec
xchg
xor
mov
or
mov
js
xor
dec
bound
or
jbe
jnp
cmpsb
sub
cmp
fs
xlat
fiaddl
xor
mov
shll
pop
adc
pusha
push
rclb
or
sti
push
mov
in
mov
and
dec
dec
int
xchg
mov
pop
xchg
mov
sbb
sbb
inc
xchg
adcl
movb
lea
mov
les
ror
jp
fwait
lret
xchg
pusha
inc
pop
dec
movsb
inc
je
inc
pop
dec
sahf
inc
xchg
repz
cmp
mov
xor
incb
cmpsl
sbb
shrb
ret
push
mov
adc
repnz
mov
adcb
dec
push
or
dec
push
pop
sti
xchg
xchg
push
adc
sbb
pop
sub
sub
bound
sub
rorb
je
push
and
inc
and
int3
xchg
test
aam
enter
cmpsl
test
mov
mov
or
or
pop
aad
dec
sbb
mov
or
scas
cmpsb
adc
and
test
cs
mov
jmp
aad
aas
ret
pusha
sub
inc
xchg
imul
ljmp
aaa
inc
es
sub
sbb
dec
in
add
xchg
pop
inc
loope
and
int
jne
data16
adc
lds
and
jecxz
in
bound
xchg
lods
dec
fs
lods
ror
push
pop
cmp
inc
mov
pop
xchg
sub
cld
and
mov
pop
push
test
mov
cwtl
arpl
xchg
repnz
inc
rcrb
mov
pushf
lods
add
adc
mov
insl
mov
lds
jmp
mov
jo
js
rcl
test
sbb
into
jnp
fnstenv
pop
xor
or
out
adc
lcall
stos
and
xchg
inc
cltd
popf
mov
call
in
lret
gs
ret
mov
les
pushf
lcall
into
movb
fs
cmp
jne
leave
jne
insb
aas
inc
jmp
jl
icebp
insl
orl
inc
das
pop
hlt
out
lods
push
dec
jmp
repnz
cwtl
add
jmp
xor
out
xchg
pop
xchg
out
call
std
jl
pusha
mov
add
pop
mov
jp
movsb
dec
cmp
test
push
push
mov
mov
fmull
addr16
stos
push
add
jb
rorb
clc
pop
in
ljmp
and
movsb
and
cmpsl
dec
inc
rcrl
enter
fcom
jp
cwtl
loop
sbb
addr16
mov
cmp
xchg
cltd
sbb
pop
cmp
mov
mov
dec
add
inc
pop
rcll
scas
mov
movsb
inc
insl
scas
fs
or
pop
xchg
divb
push
push
xlat
inc
out
or
inc
sbb
loopne
jno
movsb
testb
cmc
mov
cmp
test
rclb
fbstp
inc
rolb
cmc
repz
or
and
arpl
mov
add
pop
call
add
lahf
in
daa
and
loop
jge
cmc
insl
inc
pop
fwait
in
adc
fwait
adc
fbld
xchg
mov
mov
sbb
insb
test
rcrl
dec
mov
mov
or
mov
mov
andb
or
pop
mov
roll
push
push
jecxz
jo
cmp
mov
or
sbb
fs
pusha
mov
das
xlat
bound
das
and
mov
add
xchg
mov
mov
xor
add
mov
or
xor
add
adc
movsl
pushf
lds
jb
add
movsl
inc
xor
pop
or
fisubs
xchg
lcall
rcrb
push
iret
mov
paddusw
adc
cltd
mov
std
and
adc
mov
test
sub
xchg
rolb
jns
lret
into
pop
in
cmp
or
adc
ja
mov
mov
xor
adc
mov
popl
cmp
xchg
cwtl
loopne
and
xor
loope
pop
les
sbb
ret
loopne
shl
jnp
ret
out
and
ret
sti
fwait
je
push
imul
lock
dec
xchg
pop
mov
push
sub
sub
fimull
cmpsl
jg
xorb
and
inc
int3
pop
iret
xor
out
sub
lock
jecxz
hlt
in
xor
mov
stos
cwtl
mov
std
mov
filds
xchg
cmp
lret
jp
notl
push
sahf
and
int
dec
mov
xor
inc
decb
push
pop
add
pop
arpl
xchg
lock
mov
imul
out
scas
fs
pop
push
add
inc
popf
ljmp
lahf
bound
jp
out
xor
sub
xor
mov
out
mov
jae
call
fs
mov
xchg
into
insl
dec
ret
sti
in
dec
loop
push
fildll
addb
xchg
mov
sahf
roll
pop
pop
pop
outsb
mov
mov
fisubrl
lods
jecxz
cmp
in
add
sti
jne
fistps
and
movsb
lahf
jmp
xchg
mov
mov
sub
sbb
pop
lcall
jne
mov
push
sub
dec
test
leave
mov
mov
fstl
lods
adc
push
icebp
push
sbbl
inc
xlat
orl
adc
stos
push
jo
add
test
stc
adc
and
in
shll
inc
enter
xor
movsb
scas
add
mov
les
jecxz
lods
popa
inc
clc
rcll
xchg
stos
fildl
in
push
stos
lcall
pop
mov
push
push
mov
addr16
cmp
mov
xlat
push
into
xchg
xchg
dec
test
sbbl
das
add
pop
adc
mov
lods
pushl
dec
or
hlt
or
sbb
test
cmp
lock
and
sbb
dec
insl
rolb
cs
mov
imul
insl
jl
push
aaa
xchg
inc
mov
adc
test
xchg
and
push
lods
icebp
dec
xor
mov
rolb
mov
imul
dec
or
roll
adc
mov
ret
xor
pop
test
sbb
into
imul
js
xor
pop
shrl
idiv
add
adc
das
mov
loopne
xchg
cld
sbb
xor
repz
dec
movsl
mov
jecxz
mov
jmp
sub
xchg
mov
mov
or
sub
push
cld
fwait
inc
mov
aas
sbb
inc
stc
fcompl
jno
dec
scas
in
cltd
cmpsl
icebp
test
pop
popa
rcrb
mov
imul
clc
mov
mov
push
adc
jo
fidivl
or
xor
or
call
orl
ds
je
test
xchg
sbb
mov
push
inc
push
jae,pn
scas
insb
dec
mov
loop
xchg
pusha
jno
or
mov
pop
dec
fs
jge
add
ret
dec
es
sbb
loopne
in
jb
insl
mov
mov
sbb
mov
enter
and
es
mov
ret
mov
sbb
aaa
loopne
mov
mov
sub
scas
adc
cli
mov
cmp
cmpsb
cwtl
dec
inc
ss
sbb
icebp
xchg
jle
sbb
dec
adc
xchg
scas
xchg
inc
xor
stc
mov
push
jmp
jb
mov
cltd
mov
cmp
mov
mov
xchg
or
mov
out
in
lret
mov
ds
fcmovnu
push
adc
popf
cmp
jg
xchg
adc
leave
sub
xor
ljmp
pop
loop
popf
inc
rcll
ljmp
add
pop
stos
in
push
stos
lods
pop
jecxz
fcoms
outsb
roll
xor
pop
mov
cld
sub
add
shlb
ds
cwtl
cmp
xchg
pmaxub
add
or
cmp
mov
cmp
int3
pop
cs
scas
lods
aad
or
fwait
pop
jns
repnz
lds
push
daa
test
mov
ret
xchg
pop
mov
jl
aad
mov
dec
or
push
iret
andb
adc
sub
adc
pop
mov
aas
xor
cli
xor
inc
xor
push
out
pop
ret
dec
loop
xchg
ja
insb
push
jne
in
inc
fisubrs
mov
sbb
xor
mov
rcl
test
sbb
pop
jno
pop
jnp
aaa
xor
jle
ficoms
aad
jecxz
repz
test
xchg
cmpsb
mov
cmpsb
push
sahf
fcomps
add
pushf
test
xchg
push
and
pop
imul
mov
je,pt
outsb
sub
sbb
inc
jp
lahf
and
or
adc
and
or
inc
lock
adc
fldt
pushf
xchg
aaa
add
lahf
lcall
inc
stos
dec
mov
pop
xchg
xor
das
dec
cmp
pop
repnz
jo
mov
sub
cwtl
fcmovnbe
xlat
adc
inc
xchg
movsb
mov
call
push
dec
repnz
adc
out
stos
xchg
cmp
xchg
insb
push
xchg
sub
xchg
xchg
loope
mov
pop
push
mov
inc
sahf
inc
in
loopne
mov
jne
shr
mov
or
outsl
pop
insb
xor
inc
mov
xor
inc
test
in
mov
jecxz
pop
les
cmp
push
loope
aaa
pop
dec
sub
aas
insb
xor
xchg
js
xchg
mov
stc
cmc
mov
stos
sub
cli
pop
outsl
repnz
data16
mull
rorb
imul
and
orb
sbb
js
push
cmc
inc
mov
nopl
sbb
mov
insl
mov
daa
mov
cld
sub
mov
popa
xchg
adc
cmpsb
jbe
movsl
shrb
das
mov
in
jecxz
inc
out
inc
pop
sub
xchg
push
xchg
xchg
pop
dec
inc
xchg
dec
dec
popa
push
jae
shlb
mov
adc
sbb
mov
movsb
cmp
or
add
in
xor
xchg
mov
push
cmp
and
pop
mov
adcl
lret
icebp
lock
push
jecxz
or
dec
mov
mov
jecxz
leave
call
cmp
push
cmp
and
dec
dec
mov
xor
nop
data16
jp
rorl
das
jp
sub
pop
pop
sbb
mov
or
lahf
mov
dec
jb
xchg
stc
popa
xor
sbb
aaa
fcom
adc
std
sbb
movsb
mov
xchg
lret
mov
push
pop
xchg
rcll
fs
push
imul
cmp
mov
mov
iret
mov
loope
imul
daa
mov
inc
xorl
sbb
dec
rcl
jne
aam
sub
xor
cs
and
push
xchg
and
sbb
push
and
daa
scas
cmp
push
mov
cmp
or
jno
xor
arpl
push
sbb
inc
in
xor
sbb
ret
fidivrs
fsub
and
out
fnstsw
mov
aaa
pop
xchg
jnp
pop
out
push
add
mov
ret
cwtl
outsb
jle
fsubr
aaa
mov
sub
call
iret
cmc
cmc
sbb
lret
iret
cmp
fstpt
cmpsb
cmp
adc
cltd
incl
in
mov
adc
scas
adc
jno
pop
and
xor
aam
outsb
mov
dec
cltd
mov
mov
push
jnp
sbb
inc
mov
std
sti
mov
lret
mov
in
loope
daa
out
or
xchg
xchg
sbb
ss
pop
push
test
or
insl
jb
sub
nop
cmc
sub
lock
xlat
js
dec
xchg
dec
jb
xchg
roll
out
inc
int3
arpl
fsubrs
adc
cmp
fmull
outsb
push
aam
mov
adc
rcl
xchg
pop
loopne
cmp
add
push
push
and
cmp
inc
pop
add
mov
jp
scas
rorb
fs
stc
xchg
or
sahf
out
fsts
in
mov
in
inc
cltd
ret
xchg
and
jbe
mov
xchg
repz
divb
dec
mov
mov
leave
hlt
cmpsb
jb
into
cmp
int
iret
sar
pop
dec
loopne
das
pop
lods
lret
ja
pushf
jbe
aas
cmp
aad
sahf
add
jl
test
mov
mov
clc
mov
or
aad
mov
pop
stc
cmp
mov
out
sub
adc
jnp
cmpsl
push
inc
and
cs
xor
dec
xlat
mov
repnz
jge
jae
insl
mov
adc
push
and
jb
mov
arpl
pop
xor
ja
rcr
xchg
iretw
movsl
mov
mov
and
imul
ljmp
mov
xor
movsb
popfw
sarl
xchg
fucomi
ss
aas
cwtl
pop
negl
aad
xchg
xor
lret
push
cmp
repz
sbb
mov
pushf
fisubl
cmc
shlb
and
mov
inc
movsb
fwait
push
and
inc
mov
stc
test
jl
sbb
out
dec
mov
inc
pop
in
enter
sbb
int3
sbb
xor
mov
add
sbb
xlat
inc
lret
xor
ret
xor
sbb
fstl
dec
sbb
xchg
call
mov
pop
repz
xor
mov
sub
lahf
ja
pushf
xchg
lock
push
divl
popa
and
cld
jp
mov
xchg
ljmp
xor
sub
aaa
lea
lods
jbe
mov
mov
sub
dec
lock
xchg
push
js
add
sbb
sub
xor
and
in
lcall
push
in
dec
cmp
mov
jnp
and
and
pop
mov
mov
lea
lds
push
pop
leave
mov
nop
or
in
jae
cmpb
xchg
pop
adc
sbb
cmp
or
mov
repnz
stos
mov
mov
rcll
xchg
push
pop
sbb
cld
insb
sbb
inc
dec
or
outsb
insb
pop
inc
shll
cltd
xchg
mov
popf
lret
xor
call
call
adc
repnz
cmp
pop
adc
js
ror
inc
inc
jne
sub
xor
pushf
insb
dec
pop
push
aam
test
je
add
jb
mov
jge
stc
cmp
add
lahf
jnp
stos
jp
lods
int3
xlat
jp
dec
lret
xchg
jp
dec
outsb
cmp
adc
aad
pop
jae
ret
lea
xchg
into
ss
dec
mov
push
add
ljmp
push
test
mov
xor
sahf
and
xchg
pop
cmp
rorb
mov
sub
xor
jp
icebp
or
cwtl
push
dec
inc
lds
test
sbb
mov
test
sub
cmp
adc
mov
push
and
mov
iret
jno
fiadds
unpcklps
inc
mov
cmp
aad
leave
xlat
ficoms
fwait
lods
es
xchg
xchg
sti
lret
and
nop
loope
inc
add
inc
inc
sub
jbe
es
fimuls
sbb
mov
lock
jg
cli
subl
or
fdivrp
push
imul
jp
adc
push
push
ret
pop
cmp
dec
aas
xor
mov
mov
test
pushf
cmp
mov
test
xchg
push
jmp
xchg
push
jg
arpl
cli
imul
fbstp
rol
sub
lret
imul
xchg
push
jg
push
mov
xor
fidivrl
les
insb
xor
incl
xchg
pop
or
ret
out
xchg
cmp
ss
iret
leave
cmpl
loopne
loop
int3
push
fldcw
cmp
xor
xchg
andb
inc
mov
mov
and
insb
hlt
or
push
push
mov
add
inc
sub
inc
cmp
lret
roll
lock
cld
inc
jnp
pop
sub
loopne
stos
xchg
push
jo
mov
pop
loopne
inc
mov
les
into
jmp
fldcw
mov
sahf
sbb
mov
add
ja
adc
or
jecxz
into
loop
adc
xchg
daa
xchg
les
jge
jmp
fs
sbb
mov
jl
rcll
aaa
xor
sbb
outsb
jp
fisubl
push
xor
aaa
je
scas
scas
lcall
test
aad
outsb
dec
pop
dec
leave
scas
adc
rorl
adc
mov
mov
push
mov
dec
je
es
test
adc
outsl
or
and
mov
mov
xchg
fcom
add
sub
ds
fcoml
notl
jb
std
enter
in
fmuls
mov
lcall
nop
jo
xchg
iret
cmp
xchg
jae
fsubrs
dec
cld
sub
push
lret
inc
adc
inc
inc
mov
js
xchg
rcrb
adcb
aad
scas
fwait
sbb
loope
cmp
xchg
or
and
xchg
in
sub
push
cmp
rcrb
lcall
lahf
mov
adc
push
fsubl
cmpsl
fldt
loop
dec
mov
call
lods
adc
leave
xchg
rorl
shl
ficoms
out
cmc
push
xchg
test
jo
movsb
shll
mov
cwtl
orb
and
xchg
xchg
adc
les
bound
add
push
mov
pop
popa
cld
sub
push
pop
or
jns
and
das
loop
push
faddl
das
jecxz
and
xchg
lahf
leave
mov
movsl
sbb
mov
dec
ja
adc
pop
lcall
sbb
add
mov
mov
sarl
pop
push
rorb
or
cmc
rcrb
outsl
subl
jge
mov
fnstcw
js
dec
divb
xor
pop
push
dec
pop
fs
jge
pop
scas
mov
cltd
lret
pop
test
inc
xchg
mov
outsl
sub
inc
cmp
add
stc
inc
aam
mov
jl
test
or
outsl
push
xchg
rolb
xchg
mov
rclb
sbb
sub
fs
jnp
adc
popa
dec
and
cmp
mov
pop
negl
sbb
aam
mov
push
inc
dec
test
push
add
int
bound
int
arpl
dec
xor
dec
mov
ja
pop
pop
pushf
adcb
push
sub
xchg
std
jl
dec
xchg
ror
dec
stc
push
jmp
xchg
dec
fimuls
dec
inc
push
cmpsb
push
jo
jo
nop
scas
or
dec
jo
sti
mov
and
aas
push
imul
sbbb
insb
sub
xchg
push
pop
cmp
fs
xor
mov
or
push
jns
xchg
pop
adc
loopew
xor
push
sbb
je
pop
jnp
adc
pop
int3
mov
cmp
xchg
iret
dec
or
mov
sar
push
pop
push
jnp
flds
loope
mov
test
mov
mov
cmp
cvtdq2ps
ja
loop
or
mov
mov
mov
adc
popf
imul
mov
leave
or
js
call
jae
movsl
lcall
push
dec
mov
adc
fdivrl
dec
xchg
xchg
cmpsb
enter
pushf
mov
cmpsl
sbb
js
in
add
push
in
popf
mov
clc
lods
scas
loope
mov
mov
std
xchg
test
lds
adc
push
inc
xchg
push
xorb
mov
inc
mov
ljmp
dec
repz
dec
lods
dec
sub
andl
icebp
iret
sbbb
and
push
pop
leave
repnz
pop
mov
addb
push
dec
outsl
iret
imul
mov
push
xorb
ljmp
add
ss
call
testl
repz
rorb
lock
dec
jbe
or
xchg
enter
add
fmull
cmp
xor
pop
pop
inc
mov
pop
push
daa
xlat
adc
push
dec
shr
cmp
sub
test
mov
inc
cmp
cltd
pop
idivb
mov
in
scas
ja
sub
xchg
mov
fstpt
mov
mov
pop
xlat
push
push
xchg
dec
pop
add
add
enter
popa
push
mov
mov
pop
in
xchg
imul
cmp
stos
push
pop
mov
jns
outsl
test
in
mov
movsl
pop
rcrl
mov
pop
pop
push
mov
lea
xchg
xlat
push
ret
pop
nop
shll
adc
cmp
mov
cmp
mov
dec
push
mov
daa
xchg
mov
jmp
mov
inc
sbb
data16
subb
push
dec
push
test
xchg
daa
ss
pop
xlat
pop
je
xchg
pop
nop
loopne
js
sub
xlat
and
xchg
and
mov
mov
mov
repnz
cmp
xchg
adc
bound
iret
pop
mov
cli
push
mov
and
mov
jne
mov
inc
pop
mov
mov
add
fwait
outsb
jp,pn
loopne
nop
aaa
fs
xlat
xor
and
lea
daa
push
push
shll
aas
cmpsb
lods
dec
push
add
xchg
mov
xchg
idiv
rcrb
gs
sahf
das
ja
pop
inc
jb
dec
addb
popa
lods
lods
sub
dec
dec
fldcw
push
xchg
pop
and
add
lods
xor
jge
rcll
sub
dec
sub
and
fmul
fs
ds
mov
je
adcl
aad
xchg
sub
lods
pop
xor
cmc
ror
jmp
push
xchg
jo
push
dec
imul
push
jg
cmp
inc
push
push
add
push
sub
mov
sub
xchg
subb
das
mov
cmp
pushf
mov
mov
lcall
jne
cwtl
lret
xchg
xchg
inc
lahf
movsl
pop
stos
adc
adc
xchg
xchg
cwtl
cmpsl
or
out
out
add
lret
cltd
arpl
xor
test
jg
inc
mov
cmp
xchg
test
push
icebp
push
add
mov
rclb
mov
clc
pusha
inc
fidivl
js
pop
lods
shlb
rep
mov
pop
andb
mov
neg
out
jne
rcll
jge
adc
sub
and
xchg
jo
cmp
mov
push
ret
movsl
inc
mov
stos
mov
mull
jnp
push
fdivrs
cwtl
push
and
sbbb
jbe
mov
or
xchg
mov
add
aaa
cmp
int3
inc
pop
es
mov
jecxz
jne
pushf
cli
or
jno
cli
cmpb
push
movsl
mov
dec
clc
repnz
scas
ljmp
ret
mov
loop
sbb
inc
xchg
mov
mov
stc
repnz
and
adc
insb
out
lea
clc
push
xadd
or
dec
jecxz
mov
rolb
pop
pusha
aas
ja
jno
jnp
mov
sarl
test
push
aas
xor
sbb
push
push
pushl
jecxz
bound
mov
fnstsw
jl
ja
addl
movsb
xchg
or
jmp
dec
pop
and
add
xchg
or
or
sub
enter
shl
clc
sbb
pop
jl
mov
mov
adc
sub
pop
xchg
inc
pop
add
fldt
icebp
push
sub
push
add
enter
aam
xchg
push
cmc
sbb
add
xor
sbb
je
insl
jg
jmp
jb
mov
jo
cmpsl
test
push
ret
and
add
fucomi
sbb
xchg
or
jne
aas
mov
dec
mov
mov
hlt
movb
push
dec
push
outsb
mov
addb
inc
repnz
jmp
pusha
sbb
jb
mov
fdivp
sub
mov
es
cmpsb
add
adc
loope
stos
sti
aas
push
mov
jb
sti
or
lret
xchg
jp
out
les
and
cmp
sub
sub
pushf
mulb
jnp
ljmp
mov
pop
inc
pop
popf
dec
and
pop
pop
add
jle
and
icebp
stc
sub
add
fmuls
pop
test
outsl
xor
mov
xchg
adc
push
cmp
jbe
les
out
add
jle
cmp
or
mov
and
insl
lock
sbb
rep
jbe
bound
mov
push
and
sarb
inc
pusha
sbb
sti
xchg
loopne
mov
jb
arpl
cmp
int3
cmp
hlt
jo
sbb
inc
push
adc
push
outsl
mov
out
lahf
gs
inc
addr16
add
test
adc
mov
test
pop
or
dec
sbb
loopne
mov
and
jmp
das
adc
dec
sbb
cmpb
inc
mov
scas
or
stos
testl
imul
push
xchg
shll
lahf
mov
jge
or
pushf
dec
mov
pop
add
pop
clc
add
pop
inc
xchg
into
dec
call
inc
sbbl
stos
jmp
pop
push
mov
add
push
push
movsl
add
or
ss
bnd
sub
fsubs
lods
jg
xor
jg
gs
pushf
xor
rolb
xchg
int
inc
xchg
jno
ror
mov
nop
in
lods
call
mov
in
scas
addr16
sub
nop
jnp
pop
mov
sti
mov
xchg
iret
lock
ret
dec
mov
adc
subl
imul
xorl
sbb
pop
inc
mov
bound
subb
lret
dec
pop
pop
flds
mov
cltd
sbb
insl
xor
gs
fsubrs
test
hlt
les
cltd
sub
dec
dec
mov
scas
add
jo
push
stos
insl
inc
mov
mov
lds
adc
test
outsl
test
inc
xchg
leave
icebp
push
ror
movsl
dec
pushf
or
pop
roll
xchg
bound
imul
fidivl
xor
es
out
push
mov
adc
push
aad
out
sub
sbb
push
in
mov
int3
cmp
movsb
xchg
sub
shrb
aaa
insb
shr
pop
sub
out
std
lods
test
sbb
test
adc
mov
and
js
pop
add
data16
hlt
rorl
xor
daa
mov
jmp
add
test
sub
and
cld
jno
xor
divl
insl
add
pop
add
sbbl
cwtl
popa
push
mov
ja
lds
dec
call
or
repnz
xchg
test
sahf
int3
mov
dec
enter
add
mov
outsl
cmp
into
enter
add
test
into
out
push
and
mov
jle
sbb
enter
push
mov
lcall
or
nop
push
cmc
adc
inc
cmp
jne
pop
add
jp
or
stos
insl
inc
and
xor
jb
call
inc
rcl
out
je
bound
aad
imul
inc
ficoml
aas
in
sbb
inc
mov
pop
sbb
jns
pushf
ja
pop
sbb
pop
inc
stos
je
pop
inc
testl
out
scas
scas
call
push
jb
iret
aaa
add
nop
int3
cmpsl
icebp
mov
cmp
repz
jge
push
cmc
or
jl
inc
cmp
push
sub
rolb
test
mov
pusha
ret
lea
in
jo
out
sbb
icebp
scas
mov
push
cs
pop
aam
xchg
stc
push
push
jmp
insl
adc
xchg
mov
movb
aas
mov
pop
pop
inc
lock
pop
lock
xor
cmp
inc
out
daa
call
and
or
cwtl
jmp
movsb
jp
and
add
fnstenv
fisttps
jnp
mov
xor
mov
clc
push
jb
or
xchg
fstps
or
or
xchg
nop
cmp
and
push
inc
and
daa
loopne
add
mov
lcall
rolb
jg
fstps
int
mov
stos
mov
mov
fimull
adc
leave
xor
mov
les
pop
fisttps
pop
xor
jbe
cs
xchg
popa
xchg
sub
and
outsb
jle
ret
test
imul
mov
fnstcw
dec
pop
mov
test
pop
xchg
stc
mov
adc
mov
orl
lea
dec
jae
adc
lea
fwait
pop
jp
movhlps
push
sub
pushf
mov
cld
in
pop
sahf
fsubrp
test
lods
lahf
pusha
add
imul
mov
sarb
rcrl
lahf
cmp
je
inc
mov
in
sbbb
sub
outsl
insb
mov
repz
adc
fdivrl
rcll
add
fs
push
inc
sub
push
jle
mov
rcr
int
mov
fidivl
dec
and
stos
xchg
jl
cmp
jmp
mov
pop
mov
inc
or
insl
sti
jo
nop
lds
mov
mov
fstpl
jl
mov
sbb
mov
pushf
jmp
dec
mov
lock
rorl
add
adc
sub
in
sarl
lret
ret
jg
inc
fs
stos
in
push
cmp
mov
fsubr
sahf
fidivrl
cmpsl
aas
jnp
add
xchg
xchg
xchg
cmp
xchg
inc
mov
push
and
scas
fnstsw
dec
xchg
pop
enter
pop
mov
aam
fisubrl
jnp
lahf
in
mov
data16
in
cmc
es
popf
cmp
cltd
fsubs
sbb
add
ljmp
pop
mov
sti
dec
sub
pop
cmp
movsl
movsl
and
fisubl
movsb
lcall
movsl
cs
jge
or
mov
outsb
add
fcoml
pop
mov
cmpsb
or
fldenv
rclb
add
mov
fs
jge
push
inc
in
andl
jge
push
add
jp
add
or
std
mov
out
fmull
sbb
push
xchg
js
rcrl
cmp
lock
movsb
or
shrb
mul
jge
push
or
cld
bswap
test
das
stos
mov
cmpsl
movsb
inc
push
fstl
in
ljmp
xchg
stos
jg
les
dec
cmp
adc
and
mov
add
cmp
ret
adc
sbb
mov
ljmp
and
push
sar
inc
and
cmp
cs
and
and
lods
push
xor
and
jbe
arpl
int
mov
pop
adc
mov
lods
add
inc
int3
inc
mov
sub
xchg
clc
ret
in
into
loopne
cmp
sbb
rolb
xorl
add
mov
out
les
mov
imul
aam
scas
dec
pop
mov
pop
inc
sbb
mov
inc
inc
pusha
fidivl
push
xor
loopne
sti
imul
insl
cmp
stos
dec
mov
dec
adc
out
dec
popf
sub
mov
pop
es
inc
call
dec
pop
mov
jg
or
ljmp
xor
ret
jle
sub
push
mov
xor
out
adc
je
inc
mov
test
aas
mov
cmp
pop
sbb
mov
push
insl
nop
jg
push
stc
pop
jge
xchg
outsl
or
or
inc
push
es
pop
into
mov
add
lret
ds
ja
xlat
arpl
sub
push
out
fldenv
and
pushl
mov
ja
imulb
sbb
imul
or
lret
dec
rcll
adc
and
dec
mov
adc
cmp
sub
mov
out
push
idiv
test
mov
out
jp
adc
sarb
daa
cmp
insb
dec
scas
cwtl
loopne
or
inc
inc
testl
jae
dec
in
add
dec
push
cmp
xorb
lret
mov
enter
pop
xchg
pop
xchg
jnp
scas
mov
add
push
xchg
mov
cmp
dec
rcrb
xchg
lahf
cli
xor
cmp
cmp
mov
mov
pop
mov
fldcw
imul
cmpsb
and
aad
vmread
pop
out
in
add
xchg
jnp
cmp
xlat
jnp
test
mov
xchg
jne
test
xchg
push
les
sub
fwait
add
lea
test
xchg
push
loop
inc
pop
adc
repz
jg
sub
pop
ret
into
movb
sbb
mov
sbb
scas
xchg
andb
or
sub
insl
xchg
or
jnp
add
in
test
or
mov
fldl
outsb
cld
mov
add
scas
mov
mov
mov
ret
pop
pop
lcall
xlat
sbb
adc
xchg
xlat
add
dec
jbe
cmp
dec
dec
jecxz
imul
mov
inc
data16
push
mov
or
repz
sbb
xchg
je
clc
and
push
mov
jg
pop
dec
and
aad
add
sbb
rcrl
stc
sbb
adc
mov
jp
sub
push
movsb
sub
shlb
pop
add
add
leave
push
mov
mov
cwtl
jo
xor
mov
sub
outsb
lds
inc
jo
sbb
mov
xchg
insl
call
fistl
hlt
cs
cmpl
jb
cmc
mov
dec
jle
and
pop
push
roll
arpl
xchg
popa
add
scas
in
test
lds
mov
adc
leave
dec
fidivrs
and
mov
loope
lods
in
pop
iret
mov
sti
out
push
setnp
pop
mull
or
or
mov
addr16
lcall
in
sub
lcall
clc
mov
mov
mov
gs
jl
les
in
mov
mov
das
mov
arpl
sahf
mov
shl
addr16
push
pminub
out
aaa
ret
das
sarb
add
aaa
xlat
push
addl
xchg
xchg
lret
rclb
push
mov
pop
insb
dec
ficompl
mov
xorb
in
jbe
and
ss
or
fs
bound
cmpsl
stos
cmp
push
jle
or
mov
jecxz
and
jl
push
and
popa
cwtl
cmp
mov
or
mov
fisubs
jnp
aaa
push
push
jno
mov
bound
sub
dec
inc
sub
xchg
test
mov
xchg
enter
add
mov
dec
popa
sbb
mov
cmpsb
cmp
mov
insb
ss
jbe
cmpsl
daa
ds
or
pop
dec
ja
sti
fdivs
stc
or
and
lret
and
fldt
dec
dec
fwait
pusha
movsl
mov
flds
bound
inc
and
xchg
mov
add
fsubrs
xor
cmp
mov
mov
stos
sarl
and
arpl
call
bound
mov
sbb
in
daa
jae
lahf
loopne
test
xchg
xchg
mov
jle
mov
and
jne
call
jo
repnz
jecxz
mov
dec
mov
cmpsl
sbb
mov
into
sub
jns
and
test
and
lock
push
mov
sbb
jnp
je
push
popa
les
and
push
jge,pn
into
and
hlt
mov
mov
mov
loopne
adc
push
ja
cmp
push
jecxz
sbb
push
jns
add
sti
mov
fistps
stos
fistpl
sti
dec
loope
push
sub
test
ds
xchg
add
or
cmp
jmp
cmc
push
in
cmp
mov
fisubrs
es
adc
pop
leave
sub
mov
leave
jns
jge
cmp
pop
stos
push
sub
sub
add
adc
jnp
xchg
pop
jle
fadds
ret
out
fwait
push
in
push
in
adc
mov
xchg
in
lret
push
repnz
inc
pop
jb
cmpsl
out
stc
ds
mov
cld
push
mov
movsl
scas
out
dec
fmuls
push
push
arpl
enter
lods
mov
insl
inc
nop
stos
or
mov
ljmp
insl
xchg
stos
inc
iret
repz
fsubrs
js
jne
sbb
pop
add
ja
jge
sub
sti
iret
addr16
js
push
inc
dec
cmp
cli
jns
fwait
mov
xor
popf
shlb
imul
pop
pop
ret
nop
in
add
icebp
das
lahf
scas
pop
cmc
cmp
mov
add
jo
das
ret
jb
into
mov
out
imul
jecxz
mov
jne
lahf
jns
insb
push
fwait
mov
push
sahf
popa
sbb
mov
pop
or
mov
insb
and
jne
mov
filds
mov
or
xchg
nop
dec
xor
mov
lret
mov
cmpxchg
or
fiadds
fsubrl
mov
or
jns
inc
scas
stos
scas
cmp
aaa
or
testb
add
std
sub
mov
cltd
cmp
and
fs
adc
pop
out
inc
and
cmp
xchg
fists
aam
sub
cmp
stos
add
cmp
movnti
out
and
leave
movsb
jle
mov
xor
xor
test
jle
ds
adc
rolb
lret
push
jnp
ja
add
cmc
adc
or
push
aam
andl
lods
push
sbb
mov
iret
jb
push
pop
xchg
icebp
rcrb
imul
outsb
movb
loope
mov
mov
les
dec
psubsb
es
dec
pop
xchg
sbb
adc
inc
ret
movsl
or
dec
out
test
sbb
sbb
add
ja
xchg
sahf
test
xor
ret
movsb
mov
cmpsl
mov
xor
rcr
mov
test
adcl
mov
aam
jns
mov
insb
adc
rorl
add
mov
in
lcall
and
iret
fdivl
cli
jp
add
pop
out
cs
stc
shrb
mov
dec
jg
jle
std
mov
cs
adc
push
xchg
pop
push
gs
in
cmp
js
xor
lahf
cmp
daa
lahf
loopne
imul
fcomp
or
outsb
shll
iret
mov
sbb
inc
dec
rol
ret
ja
mov
pop
sbb
jo
mov
int3
call
pusha
gs
mov
pusha
sbb
mov
pop
jle
fisttpll
leave
pop
and
inc
fnstcw
add
fbld
jl
lea
outsl
cmpsb
dec
les
push
repnz
xlat
int3
dec
mov
pmaxub
shll
xor
pusha
leave
dec
or
cmp
leave
pop
lahf
sbb
fdiv
lock
gs
dec
xor
xchg
xchg
cli
dec
js
mov
ja
cmc
jcxz
cld
or
nop
jo
pushf
lock
xchg
jmp
mov
dec
bound
roll
xchg
push
jmp
mov
jmp
adc
pop
aad
jge
sbb
pop
stos
lock
arpl
dec
push
popf
aaa
sub
stos
jbe
push
lea
xchg
addb
mov
mov
sbb
ljmp
lock
sbb
gs
push
sub
arpl
jge
sub
inc
xor
pusha
lock
cmc
ds
movsl
mov
data16
enter
sub
mov
test
mov
das
shrb
popa
xchg
mov
popa
sbb
mov
and
pop
pushf
mov
shr
pop
dec
mov
xor
jbe
loop
pop
hlt
dec
arpl
cmpb
or
jb
xchg
dec
push
add
int3
or
test
dec
int
cld
gs
rorb
test
and
scas
adcb
sbb
push
mov
xchg
xor
int
push
in
in
outsb
push
mov
cmpsb
jns
orl
lods
push
or
cmpsl
cmpsl
subl
lods
movsb
aam
sbb
imul
sub
sbb
lods
movsl
inc
mov
out
cs
ss
pushw
into
dec
lcall
lods
pop
add
push
stc
test
sbb
push
add
lcall
push
xor
adc
fsubrp
hlt
outsl
leave
push
rcrb
push
mov
aad
fsubs
in
and
pop
mov
sbb
inc
jb
mov
jae
fs
xor
cmpsb
adc
jmp
push
pop
pop
popf
sub
sbb
mov
rcrl
imul
jns
pop
add
lds
mov
cmp
test
add
lock
cmpsl
xchg
xor
test
aas
gs
sbb
push
icebp
gs
lea
int
out
fwait
aas
lahf
xchg
into
cwtl
shlb
clc
cmp
popa
daa
jae
sahf
pop
loop
mov
nop
in
fwait
mov
aaa
dec
bnd
mov
push
mov
shrb
jge
push
pop
fsubrs
mov
mov
ret
cwtl
mov
lds
mov
shl
push
aas
lds
arpl
out
mov
and
lock
pop
add
add
iret
mov
leave
add
and
xlat
inc
and
lahf
stos
inc
fistps
push
lahf
push
outsb
cmp
ljmp
mov
jl
push
mov
ficoml
repnz
lcall
jo
or
clc
mov
mov
xchg
pop
adc
xchg
jg
in
cltd
xchg
jbe
mov
xor
in
xor
fwait
inc
shl
les
lods
mov
mov
jno
sub
and
ret
popf
leave
popf
jne
xor
imul
push
hlt
xchg
stos
push
push
xchg
add
jl
mov
and
fcomps
aad
mov
xchg
clc
jb
repz
icebp
aad
sbb
outsl
cmp
rcrb
pop
dec
add
mov
ljmp
sub
push
inc
movsb
mov
fwait
inc
cmc
xor
cmp
insb
sbb
fsubrl
adc
adc
pop
test
push
mov
outsb
inc
mov
or
rorl
inc
dec
add
loope
jg
loop
push
sub
mov
sub
in
test
sbb
push
pop
and
sub
xor
sub
loop
das
test
mov
jecxz
dec
ret
pop
aam
sub
pop
mov
add
or
testb
dec
jb
or
ss
dec
mov
nop
sbb
dec
sub
and
out
pop
imul
dec
enter
std
sbb
and
push
lods
xor
dec
cmpsb
addr16
dec
xor
iret
rdtsc
jo
pop
data16
ljmp
stc
jge
insb
cmp
jbe
outsb
jl
scas
xchg
int
mov
push
sbbl
leave
xchg
nop
xchg
in
movsl
cmp
es
push
fnstcw
daa
pop
icebp
loope
adc
sub
mov
push
cwtl
add
arpl
into
je
mov
int
fwait
aad
sti
xlat
xor
cmp
push
push
cwtd
mov
jns
cltd
push
and
movupd
sbb
cmp
out
movsb
or
mov
sub
icebp
cmpsl
pop
and
mov
pop
mov
je
add
pushf
mov
je
dec
sub
adc
mov
mov
dec
out
jge
xor
add
xchg
js
aaa
popf
lcall
addr16
jns
ror
xchg
test
mov
inc
lret
jp
pop
and
push
fdivrs
lods
ds
mov
xor
add
push
inc
adc
mov
jge
imul
into
shll
mov
pop
inc
jecxz
enter
jmp
fstpl
pop
int
leave
xchg
rcll
or
pushf
outsb
gs
and
pushf
imul
outsl
push
addr16
jnp
inc
cmp
sub
pop
rcrl
dec
stc
push
arpl
push
or
jge
xor
mov
sbb
jge
push
jg
adc
pop
les
ja
dec
or
cmc
clc
pop
inc
daa
inc
add
sahf
int
negl
movsb
and
jne
jmp
inc
inc
in
shll
imul
add
int
xor
mov
cmp
add
xchg
sub
in
and
pop
fmul
mov
lea
mov
ja
and
repnz
jl
arpl
xchg
adc
lcall
lds
stos
adcl
adc
popa
imul
mov
imul
mov
mov
leave
ss
popf
xchg
add
jmp
mov
in
scas
out
xorl
data16
rclb
cmpsl
mov
int3
pop
sbb
lods
or
push
in
test
push
nop
jle
sub
ljmp
add
push
ljmp
stos
mov
lea
lods
fidivrl
pop
inc
jge
and
decb
inc
push
pop
sub
gs
mov
scas
xor
data16
or
adc
xor
pop
int3
adc
push
jb
mov
rorb
adc
int3
add
aam
int3
ret
jg
inc
ret
inc
mov
push
xor
mov
push
in
xlat
xor
mov
insb
lea
mov
xor
mov
sti
hlt
aam
xor
jae
fcomip
mov
imul
loope
add
lock
jg
imul
add
mov
loopne
int
scas
add
shlb
repnz
mov
out
mov
scas
jae
jmp
add
std
cli
sub
mov
lahf
out
xorb
and
enter
inc
test
shl
outsb
mov
sbb
repnz
lods
push
xchg
loopne
pop
jno
cmp
cmpsl
xchg
pop
jg
jb
mov
pop
jns
pop
mov
aam
pop
enter
icebp
aaa
popa
push
sub
mov
mov
aam
andb
adc
cmpb
adc
jl
out
dec
out
dec
xchg
cld
orl
and
fisubrl
invd
adcl
fwait
sub
lret
dec
shrl
mov
sub
push
jmp
sti
add
clc
inc
jl
jnp
mov
push
test
jne
cmp
not
xor
inc
and
xor
add
mov
fs
lock
cltd
sub
sub
js
imul
sbb
push
addr16
xor
mov
cmp
cmp
js
sub
imul
push
cmpsb
push
insb
out
lods
cmp
dec
xchg
outsb
mov
mov
test
pop
outsb
pop
jae
loopne
push
dec
xchg
add
sub
xchg
test
sbb
xchg
or
adc
pop
fs
mov
imul
daa
jb
insl
int3
and
jle
je
adc
fxch
ds
push
cmp
iret
push
orb
sbb
jb
add
and
inc
rcl
xchg
cmp
dec
pushf
xor
loope
and
jecxz
xchg
mov
and
sub
out
testl
gs
jb
jl
jp
arpl
icebp
aad
aam
inc
repz
leave
sbb
jg
aas
xchg
xchg
mov
mov
push
mov
ror
lea
adc
sub
mov
mov
sub
fisttpl
xchg
inc
mov
mov
or
push
das
sti
loop
or
jae
sbb
inc
lcall
jno
insl
and
ljmp
cmp
mov
cltd
mov
mov
mov
adc
aaa
xchg
inc
iret
sahf
negb
sub
inc
cmp
call
sbb
sub
aam
jbe
popf
sub
repz
sahf
loope
das
mov
mov
mov
sub
mov
mov
jl
jle
xlat
in
hlt
icebp
inc
lock
push
fdivrp
pop
popl
scas
sub
ret
mov
add
cmp
pop
test
mov
jno
bound
xor
push
dec
xor
inc
xchg
pushf
pop
imul
test
sbb
adc
mov
add
out
loope
jbe
cltd
loopne
jmp
pop
adc
pusha
fmul
scas
cwtl
jbe
mov
and
dec
mov
inc
pop
hlt
push
stos
scas
das
xchg
jmp
inc
inc
cmpsl
inc
test
mov
out
repnz
inc
or
dec
in
repz
lds
bound
testb
daa
insb
pop
popf
cmp
mov
es
jp
pop
lods
aam
inc
or
enter
or
lock
add
adc
es
mov
pushf
pop
fmuls
mov
and
push
es
mov
outsb
mov
divl
sub
out
imul
xchg
cmp
dec
add
mov
ret
inc
rcll
es
jns
mov
sahf
jno
mov
out
xor
loop
fcoms
setle
mov
pop
jno
cld
jge
mov
arpl
fimuls
stos
loope
mov
sub
aas
das
sub
outsb
daa
dec
push
mov
and
fimull
arpl
sub
mov
idivb
xor
icebp
mov
addr16
push
repnz
cmpsl
mov
xor
add
shrl
cli
out
pop
sbb
inc
inc
cli
mov
xchg
cli
add
shlb
adc
adcb
out
bound
push
imul
xchg
in
dec
rcrb
cmpsl
test
aad
clc
popa
dec
divl
jge
and
and
pop
mov
jg
xor
nop
cvtps2pd
cmp
push
mov
jl
cli
loop
or
mov
xor
ljmp
scas
rcl
push
jb
jl
ds
movsl
push
outsb
cs
insl
ja
inc
rolb
aad
push
mov
mov
adc
pop
xor
mov
aaa
xor
test
mov
and
jb
push
push
adc
daa
in
repnz
cmpsb
jle
and
sub
add
xchg
ret
mov
les
rcrl
sbb
cmpsb
lock
lds
orl
xor
stos
xor
repnz
sub
fcoms
sbb
push
fidivs
cvtps2pd
fwait
arpl
or
or
jae
lcall
xlat
out
out
xchg
in
push
aaa
jbe
xor
adc
mov
jb
nop
ljmp
lret
pop
fildl
mov
mov
sub
mov
mov
inc
scas
mov
mov
pop
movsb
cmp
es
in
mov
and
xor
ret
sbb
adc
jmp
cmp
es
and
push
or
cmp
pusha
daa
out
mov
cli
lahf
lds
sbb
test
dec
xlat
push
ret
mov
es
push
cwtl
ret
cltd
mov
imul
lock
push
lret
mov
stc
push
fs
shl
push
jb
mov
jle
rclb
lret
es
jl
movsl
push
adc
call
sub
mov
jl
inc
add
push
inc
mov
jg
int3
lods
repz
jl
sbb
iret
jle
jecxz
jb
iret
fdivs
std
jl
aad
jecxz
xor
mov
in
add
add
fs
add
inc
call
cltd
fcompl
jno
dec
mov
and
xchg
lahf
imulb
notl
cmc
dec
cmp
mov
adc
bound
cmp
push
pop
mov
cmp
cmp
cmp
data16
popf
or
dec
sbb
jno
jg
xchg
ja
outsl
inc
push
dec
out
sti
cld
movsb
movsl
shr
inc
pop
jge
jp
adc
cld
fisttpll
ret
arpl
mov
pop
ficompl
mov
xor
repz
pop
rcrl
js
lret
pop
push
or
lods
xor
ret
fwait
rcrb
jp
push
and
daa
pop
fadd
mov
test
push
jmp
xor
fcmovnb
cmp
sub
ljmp
pop
jae
repz
negl
adc
movsb
sbb
ret
cli
lea
and
cs
andl
aad
mov
adc
jmp
hlt
mov
sub
push
stos
cmp
mov
mov
add
push
add
std
xchg
shl
mov
jae
add
inc
xor
cmp
xor
cmp
mov
add
or
cmp
enter
mov
sub
mov
inc
add
and
hlt
add
dec
cli
andl
sbb
movsl
mov
mov
mov
repz
push
push
pop
outsb
mov
orl
mov
mov
lret
je
std
pushf
pop
clc
ds
jae
call
out
shlb
pusha
xor
je
cmpsb
cmovle
push
adc
fs
adc
repnz
xlat
push
loope
int
jl
sub
es
iret
mov
adc
nop
cmp
dec
pop
xor
dec
in
pop
pop
add
jnp
in
xchg
sbb
dec
sbb
xlat
push
bound
pop
repz
add
adc
dec
mov
mov
lods
shlb
lods
dec
pop
or
xor
mov
pop
fadds
pusha
fdivr
ljmp
add
sub
mulb
xchg
adc
aad
mov
in
scas
fldl
jae
or
loope
push
pop
sub
mov
int3
adc
mov
mov
nop
dec
jnp
push
aad
in
insl
test
mov
out
fbstp
jp
aad
sbb
push
lods
aad
jne
insl
mov
pusha
sbb
js
xor
daa
jo
imul
lock
sub
xchg
inc
xor
mul
dec
mov
sbb
shl
inc
pop
pop
xchg
fstpl
lods
mov
xor
lahf
movsl
adc
in
jp
xchg
fistpll
shlb
andl
jno
push
sub
push
mov
loop
push
push
mov
mov
cld
and
mov
fdiv
fdivs
or
out
sti
pop
jbe
inc
push
lock
imul
orb
sub
gs
sbb
dec
add
xchg
fcmovnbe
mov
xor
adc
loop
cmp
jb
dec
lods
mov
das
cltd
repz
in
push
dec
xchg
ds
loope
and
in
or
xor
dec
add
popa
fnsave
fs
repz
outsb
ffree
popl
fwait
sti
and
mov
jne
cmp
pop
aas
jle
or
sub
mov
fnstcw
mov
es
popa
jo
cli
rcl
insl
popa
das
cmc
loope
pop
xor
cmp
xchg
pop
mov
sub
push
mov
daa
sub
xchg
push
and
pop
jbe
aaa
mov
cs
sub
sti
xchg
mov
das
mov
cmp
and
cli
call
mov
ljmp
lret
mov
call
mov
aad
inc
push
idivl
mov
jnp
sbb
mov
mov
mov
mov
adc
out
mov
inc
mov
xchg
pop
inc
sbb
stc
rcrb
imull
sbb
je
jmp
hlt
cmp
je
loop
out
int3
rorb
or
cmp
out
popa
xchg
mov
cmpsb
inc
nop
fcos
add
mov
jmp
add
repnz
mov
lock
pop
lahf
hlt
pop
rol
pop
test
call
mov
rclb
daa
pop
mov
jae
orb
jb
jl
and
cmc
fst
jmp
mov
popf
outsl
xlat
in
test
cltd
nop
rorb
or
mov
ss
inc
cmp
lret
xchg
xor
shl
and
xor
ja
adc
add
test
xor
dec
pop
mov
in
leave
les
repnz
pushf
andb
mov
into
jb
out
fbstp
mov
sbb
mov
sbb
mov
subl
leave
in
and
mov
pop
stos
stos
cs
xchg
adc
frstor
hlt
lods
jnp
repnz
out
push
clc
sub
lcall
fisubrs
jp
jbe
xchg
jne
sub
dec
flds
outsb
xor
movsl
movsl
adc
movsb
pop
lahf
mov
mov
pop
jl
int
out
or
pop
mov
cltd
out
out
test
mov
out
sub
push
mov
add
xor
lock
jge
cmp
and
adc
jmp
cmpb
xchg
xchg
pop
rcrb
cmc
sub
cwtl
sti
lcall
jo
dec
sub
pop
sub
shlb
lret
rorb
ret
mov
dec
add
xor
sub
insb
test
outsb
dec
in
cwtl
push
or
pop
lods
mov
xchg
xchg
mov
sbb
dec
arpl
inc
sub
push
les
cwtl
mov
div
aad
jge
dec
pop
dec
mov
push
loopne
int
pop
mov
js
imul
cmp
inc
jge
fsts
sub
movntq
mov
popa
push
scas
xchg
pop
xchg
dec
repz
jo
mov
mov
adc
and
popa
outsb
mov
or
ret
mov
js
test
cmp
sar
stc
mov
test
sbb
pop
or
into
test
jle
imul
adc
ljmp
and
jno
dec
and
pop
jmp
and
std
inc
sub
add
repz
aad
dec
fs
fisubl
mov
push
jecxz
jecxz
pop
inc
mov
lahf
pop
jge
cmpb
mov
cmp
insb
xchg
sbb
sub
xchg
push
fs
scas
sub
mov
int3
push
sahf
outsb
sub
repz
mov
ror
push
repnz
mov
pop
jmp
sarl
mov
sbb
or
sti
cmpsb
cmp
js
lret
mov
push
jg
test
idivb
pop
adc
mov
jo
xchg
scas
leave
filds
or
pop
and
pop
int3
pop
pop
adc
into
and
addr16
and
adc
pop
lcallw
negb
xchg
fwait
int
sbb
ret
arpl
mov
ja
pop
fldt
jns
cli
pop
int
dec
add
lcall
push
sub
xlat
arpl
scas
dec
push
pusha
fnstsw
iret
inc
aas
and
in
or
shlb
push
push
loop
xor
lods
out
imul
jp
shrl
test
sbb
and
inc
je
push
iret
xlat
pop
jmp
sbb
out
xchg
jmp
mov
clc
mov
data16
add
pop
rcrb
xchg
pop
je
push
ret
and
and
loope
arpl
mov
test
xor
popa
aaa
sbb
lods
inc
popa
test
dec
inc
jb
ja
shl
cmp
addr16
dec
push
push
mov
std
xchg
push
sti
scas
mov
out
cmp
dec
push
sbb
jae
mov
pop
lcall
fiaddl
je
sub
je
mov
test
mov
imul
lea
stc
push
pop
cmpb
insb
cmp
adc
add
pop
lcall
popa
fisubs
jg
insl
cmp
mov
or
mov
jle
loopne
or
lds
loopne
dec
sub
jbe
loope
hlt
push
jp
mov
and
push
lock
lods
inc
xchg
hlt
inc
mov
and
sub
add
rol
fbstp
fimull
jbe
rcll
cli
pop
xchg
dec
ret
xor
stos
call
or
repz
inc
gs
aad
lds
repnz
mov
xor
add
jle
cmp
adc
and
shll
mov
inc
or
dec
loope
mov
sub
sub
dec
cli
icebp
stc
and
mov
lods
lods
pusha
out
daa
shll
push
sbb
shlb
nop
ja
pop
imul
and
add
lds
das
in
clc
test
movntps
test
push
sbb
mov
inc
int
js
lock
xchg
aas
mov
xchg
pop
or
jns
push
jmp
in
sbb
dec
rcr
jge
sub
aad
sub
xor
xchg
inc
sub
int
les
jnp
movb
inc
pop
push
repnz
cld
cltd
leave
adc
divb
mov
mov
divb
lret
pop
cmpsl
xlat
dec
test
repnz
jbe
push
mov
sti
jecxz
sub
inc
cmp
and
pop
pop
lcall
dec
xchg
add
jb
jne
mov
mov
sub
jnp
loop
jg
insl
xchg
pushf
xchg
ret
inc
fcompl
loop
movsl
or
mov
scas
cmp
lahf
popa
push
sbb
cmp
cmp
jecxz
imul
pop
mov
push
mov
add
popf
pop
addr16
mov
cwtl
pop
sub
xor
test
jp
cwtl
mov
xor
and
mov
js
jp
stc
repz
push
movsb
sbb
fsubp
push
jns
pop
sahf
sub
push
loopne
sub
jbe
lret
inc
rcl
mov
pop
das
pop
bswap
or
ficoms
hlt
dec
pop
mov
nop
lcall
xchg
cmp
pop
lds
inc
pop
push
inc
addr16
inc
mov
negl
mov
fiadds
aas
jle
repz
xchg
push
dec
mov
data16
sub
lcall
and
jns
or
imul
inc
loopne
jmp
jge
ljmp
pop
mov
fisttpll
jle
in
jle
test
add
shrl
adc
lds
and
xor
or
scas
or
aas
je
call
sbb
ret
popf
cmp
test
movsb
fidivl
popa
popa
fildl
dec
out
add
mov
mov
mov
nop
pop
mov
push
mov
out
dec
idiv
faddp
jge
lcall
dec
insb
xlat
test
or
pop
mov
mov
xor
push
jno
lds
bnd
push
aad
scas
mov
adc
ds
test
jp
xchg
push
push
and
inc
push
cltd
cmp
clc
mov
push
dec
std
iret
dec
cld
mov
iret
push
mov
adc
dec
ss
and
mov
mov
mov
loope
or
adc
sub
mov
decl
dec
adc
sbb
sbb
xor
data16
push
gs
dec
pop
xchg
icebp
xchg
sti
cwtl
das
pop
dec
fists
mov
adc
jae
divl
je
stos
leave
dec
ret
push
inc
popf
lret
cmp
mov
dec
xchg
in
jnp
mov
jecxz
bound
pop
xchg
rcr
xchg
mov
adc
cmc
pop
pop
pop
pop
pushf
nop
sub
sbb
xor
fadd
mov
push
dec
aad
pushf
pop
dec
mov
fcomps
cmpsl
inc
js
dec
push
and
inc
test
jno
in
jo
dec
dec
lea
mov
push
jo
and
scas
ret
dec
daa
sbb
pop
lret
push
dec
icebp
andb
cmp
out
jmp
inc
push
dec
repz
addr16
mov
aam
aad
aam
std
int3
mov
jecxz
clc
cltd
push
fistpl
jo
leave
mov
push
inc
iret
inc
xchg
jg
xor
out
mov
loope
mov
test
push
jne
inc
ret
call
fisubl
je
cmp
add
add
or
mov
dec
pop
and
inc
pop
push
mov
popa
mov
rcr
out
or
mov
mov
push
repz
inc
xchg
mov
sub
out
dec
fstl
sub
sub
aas
fwait
mov
pop
mov
adc
insb
pop
push
sub
push
andl
in
inc
icebp
cld
xchg
cltd
scas
outsb
filds
mov
cli
mov
jle
insl
pop
and
inc
xchg
sbb
mov
lahf
jne
lret
stc
push
push
imul
or
jl
mov
pusha
and
int3
mov
out
out
and
fcmovbe
int3
push
out
pop
addr16
movsb
xorb
or
lods
testl
and
cmp
je
stos
repnz
cs
lahf
pop
or
in
jns
nop
jb
lret
mov
xchg
xlat
jbe
sbb
sbb
aam
repz
or
dec
filds
clc
pop
jo
lcall
jecxz
mov
jns
mov
xchg
push
lahf
call
inc
fldenv
sbb
fwait
add
pop
jle
lahf
mov
bound
outsl
sbb
mov
adc
adc
xlat
test
sbb
stc
iret
addl
stc
loopne
pop
addr16
pop
sarb
les
repnz
xchg
mov
pop
mov
shl
cwtl
mov
outsl
add
je
mov
les
mov
mov
inc
mov
lret
rclb
ljmp
push
shrl
ret
dec
adc
xchg
call
cmp
sub
sbb
push
cld
lods
push
and
imul
leave
aaa
mov
movsl
pusha
loope
mov
loope
mov
mov
inc
sti
mov
ret
xor
sub
and
movsb
add
jmp
ss
add
in
ret
mov
mov
mov
xchg
leave
dec
and
ljmp
mov
lret
in
ljmp
or
std
cmpsl
mov
mov
mov
sbb
xor
cs
enter
cltd
lods
out
aam
cmpsb
les
movsb
lock
icebp
add
nop
popf
enter
fimull
add
jo
cld
dec
xchg
push
jge
add
arpl
push
adc
jo
dec
movsb
jne
sub
xchg
jge
mov
or
xchg
xor
push
push
mov
adc
and
aas
push
gs
mov
sub
jno
insl
pusha
sbb
addl
xchg
fsts
xlat
stos
imul
lret
sahf
mov
xor
ficomps
arpl
sub
stc
xchg
aaa
inc
lods
enter
lods
pop
inc
popf
push
add
cwtl
inc
sub
jns
jae
jbe
aas
out
push
pushf
or
lahf
cmpsl
lea
mov
sub
adc
mov
movsl
iret
lcall
pop
lods
cltd
sahf
jne
daa
negb
sahf
jb
shlb
push
push
inc
and
sub
out
pusha
pop
in
pop
data16
daa
mov
hlt
cmpsl
imul
or
into
stos
repnz
mov
mov
dec
fstps
jne
jno
js
imul
shlb
cmpsb
jmp
fcoms
jg
cmp
fsubrl
dec
jns
inc
je
enter
adc
inc
arpl
movsb
rorb
adc
rcrb
idivb
mov
lcall
cs
inc
neg
cmp
add
es
xorb
movsl
dec
inc
or
dec
xchg
add
jnp
imul
js
shll
hlt
test
fldt
sbb
dec
hlt
adc
lahf
jg
xlat
jo
out
fbld
data16
sub
sbb
jbe
mov
inc
dec
repnz
ljmp
push
scas
fcomp
dec
push
shl
xchg
mov
inc
pop
pop
add
or
sbb
rolb
xorb
xor
aad
pop
mov
test
mov
mov
jmp
xchg
xchg
outsl
push
loope
mov
adc
jg
inc
sub
dec
fiaddl
xchg
pop
cmpsb
jmp
in
add
pop
mov
sub
push
jno
ret
pop
pop
push
aaa
pop
add
les
pop
lock
aaa
add
or
scas
mov
push
in
xchg
mov
xchg
dec
loope
mov
push
and
mov
lods
out
sbb
pop
test
sti
mov
lds
lcall
movsb
mov
cmpsl
rcrb
lods
aaa
pop
and
shll
push
popf
pop
jl
loop
jg
adc
pop
outsb
popf
out
ds
and
mov
jne
jnp
add
out
jp
lahf
sahf
pushw
ss
dec
mov
xchg
dec
mov
push
nop
or
mov
push
imul
lods
push
jg
or
add
pop
jl
xchg
fstpt
arpl
out
cmp
loopne
mov
fdivrl
shll
insl
dec
push
adcb
movsb
push
in
scas
sbb
fistps
xlat
xchg
dec
and
mov
ret
pop
mov
xchg
mov
cs
outsb
and
jno
xchg
mov
out
test
popa
push
xor
jae
sbb
fldenv
pop
sbb
cmp
sbb
push
pushl
mov
gs
xchg
gs
mov
mov
mov
pusha
movsb
pop
inc
mov
cmp
and
jb
mov
cmpsl
mov
pop
cmp
js
xchg
ja
shr
jecxz
pop
mov
fwait
test
ljmp
inc
push
push
sub
jp
or
lahf
inc
push
mov
mov
jbe
and
daa
pop
adc
cmp
cwtl
inc
test
and
jns
cmpsl
mov
xchg
xor
xor
test
mov
or
popa
mov
movsl
xchg
sub
lock
addr16
lock
incb
mov
or
mov
xor
daa
lds
sub
push
pop
jmp
dec
inc
daa
sarb
mov
roll
inc
pop
outsl
pop
cmp
pop
sub
filds
xchg
movl
lret
mov
mov
sbb
mov
jo
sub
addr16
sbb
dec
inc
mov
adc
leave
mov
inc
push
ret
test
sbb
jbe
push
in
mov
fstpl
mov
sbb
mov
cmpsl
jbe
dec
dec
outsb
mov
push
or
das
add
push
sub
push
or
or
sub
in
dec
mov
sbb
and
ds
cmp
in
add
iret
inc
jmp
or
cwtl
mov
hlt
jno
bound
mov
repz
sbb
aas
cmpl
jg
cmp
rcll
pop
sbb
fwait
add
dec
rclb
in
inc
xchg
mov
stc
iret
push
incb
or
mov
mov
mov
inc
push
pop
xchg
xor
or
lds
mov
lret
sbb
pop
jle
mov
jl
and
sub
sub
cmp
faddp
shll
in
sub
lahf
ret
and
lcall
sub
fwait
inc
js
push
pushf
push
sbb
addr16
lock
mov
mov
ret
popf
pusha
out
jmp
pop
xor
lahf
arpl
lret
add
nop
pusha
jl
mov
clc
cld
aaa
push
popf
sub
popf
push
ss
ret
lods
cwtl
cmp
iret
or
mov
xchg
lods
xlat
jp
repnz
loop
pop
cmp
ret
out
cmp
sbb
sbbl
jmp
int3
sbb
movsl
cwtl
cld
and
sbb
adc
dec
repz
fwait
movsl
dec
add
push
push
add
cmp
lods
xor
xchg
or
jbe
sbb
out
stos
rclb
pop
pushf
clc
test
mov
icebp
dec
pop
inc
int3
jp
ja
pop
lcall
into
push
lock
outsb
out
jge
std
or
fucomp
cmpsb
popa
jnp
shrb
sub
jmp
insb
cmp
adc
push
imul
lock
push
roll
adc
jno
movsb
mov
leave
lcall
leave
sbb
test
ds
jno
loop
adc
pop
xor
in
push
mov
lret
xlat
andb
add
data16
mov
and
push
enter
loopne
pop
icebp
in
hlt
cmpsb
sub
test
das
arpl
cmpsb
je
cmp
jmp
xor
test
pop
sub
repnz
push
sahf
stos
sahf
push
js
or
ficomps
lods
das
lret
sbb
jmp
cmp
sbb
insb
xor
cmpsl
cmp
in
mov
sub
aas
pop
add
mov
ja
add
into
sbb
fcmovnb
idivl
sub
fmull
mov
roll
ficompl
and
cwtl
mov
ret
lods
add
aaa
and
and
jb,pn
lret
mov
pusha
dec
call
in
push
dec
sub
dec
cmp
out
sub
and
xor
inc
inc
decb
idivb
stos
dec
popf
js
jg
push
out
jb
xlat
push
sub
fists
mov
jecxz
xor
shrb
ss
xlat
out
into
adc
push
insl
sbb
js
add
jge
jne
pop
imul
add
insl
loopne
mov
adc
mov
loopne
jmp
jbe
loopne
pop
pushf
fwait
insb
mov
adc
xorl
pop
cmpsl
bnd
pop
cmp
leave
mov
sbb
out
push
out
imulb
inc
pop
cmc
clc
xor
xlat
add
dec
jg
fcomip
ljmp
pop
clc
adc
movsl
cs
into
aad
inc
jecxz
pop
xchg
add
and
aam
dec
or
push
lret
jecxz
lods
mov
fnstcw
pop
add
pop
outsl
adc
cld
mov
or
into
sub
push
push
pop
imul
cmp
mov
lds
add
fnsave
roll
sub
xchg
je
inc
addb
mov
roll
sti
movsb
mov
aad
jae
adc
scas
es
shrb
push
dec
pop
iret
inc
iret
ret
out
dec
and
stc
out
and
mov
addr16
sub
inc
cmpsb
repnz
in
xchg
in
ja
gs
test
shl
repnz
jns
pop
xchg
mov
mov
mov
outsb
cwtl
cmp
mov
mov
ds
gs
mov
xor
loopne
push
repnz
mov
jae
cli
inc
call
mov
repz
icebp
pop
hlt
pop
push
jno
sbb
les
adc
add
xor
insl
in
jns
dec
insb
or
loope
push
push
adc
adc
push
mov
cmp
or
ret
push
fisubl
outsb
jg
sbb
out
mov
mov
mov
mov
push
pop
jge
lret
jbe
dec
push
scas
inc
mov
push
mov
cmpsl
ja
in
test
scas
jecxz
jmp
or
xor
mov
jae,pn
cmpsb
mov
xor
jno
ret
js
inc
dec
lea
fsts
les
repnz
aas
fstpt
pop
gs
insb
sub
out
call
jl
movsl
mov
xchg
int
sbb
arpl
fmull
mov
fdivr
jp
lcall
jecxz
aaa
xor
popf
mov
arpl
enter
js
repnz
pop
movsb
jle
xchg
fcmovne
mov
xchg
push
mov
inc
movsb
orb
cwtl
push
clc
sbb
test
in
add
gs
cmovb
dec
adc
dec
add
mov
lods
push
mov
xchg
repnz
add
nop
outsb
fnstcw
incb
inc
jbe
and
inc
ja
push
mov
push
scas
sbb
sbb
mov
clc
add
mov
mov
mov
cmp
daa
mov
mov
mov
add
sub
rcrl
out
stos
pop
lahf
test
cmp
les
push
insb
inc
in
pusha
lods
add
inc
cmp
cpuid
add
test
sbb
fwait
pop
lds
movsb
addl
push
aam
pusha
push
lea
cmp
or
jo
mov
cmp
inc
cwtl
pusha
je
adc
cmp
push
mov
push
push
sbb
lahf
add
inc
dec
lcall
ja
test
iret
loopw
jne
pop
pop
adc
aas
aas
sbb
xchg
mov
cld
push
jmp
mov
jnp
mov
mov
rolb
inc
pusha
andb
jecxz
add
mov
cmp
jl
xor
outsl
cld
sub
mov
sub
lock
sahf
jb
frstor
mov
rcll
or
adc
pop
gs
jnp
scas
jle
mov
mov
cmp
add
pushf
push
dec
jnp
sub
lock
cmpsb
dec
shlb
push
xchg
popf
das
lcall
sbb
repz
ja
push
jge
sbbb
sahf
shrl
addr16
and
lods
dec
lret
daa
cmpsb
add
mov
insl
sub
lods
xor
cmc
xchg
ss
es
out
inc
xchg
or
mov
call
add
xor
dec
mov
xchg
xor
in
arpl
fwait
jecxz
xchg
lods
cmp
in
shl
in
sbb
jge
add
add
xor
test
adc
sub
call
mov
push
xor
test
push
jmp
pop
out
adc
sarb
mov
push
leave
push
cmp
mov
insl
fwait
xor
push
jl
cmp
roll
cmc
notb
xchg
mov
sub
pop
mov
ss
pop
mov
scas
cmp
je
fisubrl
mov
sti
ret
lea
xchg
mov
cld
adc
mov
pop
testb
xor
inc
and
and
xchg
int
pop
cwtl
in
add
pop
pop
sarb
faddp
jl
jp
jb
add
adc
or
insb
call
scas
mov
adc
inc
and
inc
fcoml
jno
aam
addr16
call
hlt
hlt
xchg
fs
mov
mov
bound
xchg
sub
arpl
ret
imul
fwait
in
test
push
push
add
sub
clc
sti
sub
in
lds
xchg
mov
lahf
dec
lods
lock
mov
stos
xor
call
in
stos
shr
repz
mov
cmp
test
sbb
jle
xlat
lods
and
stos
jns
dec
mov
and
scas
lods
lahf
mov
int3
popa
out
divl
stos
xchg
sub
cmp
je
mov
loope
out
pop
jl
fdivl
dec
add
cmpsl
dec
push
jg
mov
jnp
cli
lods
in
cmpsl
sub
push
add
sub
xor
les
insl
mov
fistl
fiadds
add
in
insb
mov
adc
test
fwait
adc
xor
lahf
dec
mov
daa
lds
xlat
adc
and
push
mov
sub
in
ficoml
je
imul
pop
push
jae
shlb
data16
mull
aaa
mov
pusha
push
add
lock
pop
push
jne
pushf
cmpsb
pop
stos
inc
lret
xorl
cmp
loope
lock
inc
mov
pop
addr16
rolb
jns
push
addb
aad
jp
push
flds
inc
fidivs
cwtl
cmp
inc
shrb
mov
jg
dec
or
cmc
jo
aam
cli
jle
clc
push
or
in
insl
jne
xor
leave
sbb
mov
push
mov
mov
test
cld
popf
push
mov
fwait
sub
sub
sub
sub
inc
xor
cmpsl
mov
inc
insb
and
in
dec
dec
ss
mull
aaa
push
popf
pop
push
pop
pop
test
stos
lods
iret
sbb
push
movsb
add
sbb
add
and
fwait
mov
nop
pop
pop
jno
sub
jns
scas
xchg
adcb
insb
mov
or
aas
cmp
movsl
in
pslld
ljmp
mov
test
icebp
test
sub
fwait
sbb
stos
rcll
mov
loopne
es
lea
lods
outsl
adc
cmpsb
jle
mov
mov
inc
adc
inc
mov
test
imul
jle
dec
add
js
sub
notl
inc
or
cld
xor
loope
mov
xor
mov
sbb
shrl
push
scas
imul
pop
shrb
data16
mov
dec
roll
in
stc
jns
and
and
shlb
rorb
inc
xor
mov
push
dec
add
popw
popf
mov
xchg
push
mov
mov
push
and
xchg
pop
insl
mov
js
cwtl
xchg
sbb
push
insb
call
mov
adcl
cmpsl
add
add
push
popf
xchg
sub
jnp
sub
int3
arpl
xchg
sbb
xchg
out
cmp
arpl
push
movsl
cmpb
jb
lds
mov
pop
cmp
setge
es
aam
movsl
mov
mov
pop
lock
out
pushf
das
and
fisubl
push
xor
inc
test
sbbb
ss
jbe
out
and
daa
out
or
insb
outsl
mov
fwait
outsb
push
mov
mov
inc
adc
aaa
inc
mov
nop
push
add
inc
adc
enter
mov
add
xchg
inc
jns
adc
cwtl
xchg
xor
xor
mov
mov
jne
add
jg
push
hlt
cmp
push
mov
push
into
mov
dec
push
add
push
fchs
jnp
xor
aaa
stos
sbb
test
xor
xchg
add
mov
pop
push
lret
or
lahf
jle
mov
push
daa
dec
sub
add
arpl
pop
mov
add
jb
mov
out
std
inc
out
add
imul
cli
jle
xchg
into
enter
fmul
int3
mov
in
in
fwait
add
das
jecxz
push
test
inc
cmpl
sahf
cmp
adc
mov
imull
xchg
inc
push
test
sti
push
outsb
addb
test
notb
add
daa
xchg
inc
or
mov
push
inc
js
sub
jnp
inc
movsb
scas
in
cmp
divl
sbb
xchg
lods
inc
out
dec
pop
push
outsb
lret
lods
mov
inc
jge
jle
sbb
int3
xchg
xchg
add
push
iret
cli
push
fists
and
fisubrs
frstor
repz
xchg
in
sbb
inc
outsb
xor
fwait
scas
xor
xchg
jl
outsl
fisubs
mov
sub
pushf
mov
sbb
cmpsl
add
lods
jno
es
gs
sbb
inc
mov
inc
repz
jecxz
repz
inc
gs
cwtl
pusha
inc
ret
xchg
pop
xor
aad
inc
rcrb
cmp
movsl
orb
dec
cmpsl
cmp
pop
or
iret
lret
idivb
ficoml
out
call
pusha
xor
out
out
test
fmul
mov
sbb
dec
push
js
cwtl
adc
cmpsl
sbb
mov
setle
jae
mov
mov
bound
mov
cwtl
push
lcall
push
dec
mov
sub
ficomps
pop
cltd
push
dec
cmp
add
enter
jge
push
cmp
ds
push
inc
mov
mov
js
jbe
dec
add
sub
pop
inc
push
in
sub
fs
test
xor
cmpsl
pop
mov
dec
or
push
gs
mov
push
mov
lret
add
mov
xchg
lods
mov
push
mov
sbb
int3
ror
call
jbe
cmpsb
xchg
push
out
shrb
dec
add
ljmp
ss
fmuls
rcll
mov
push
xchg
dec
cmp
or
cld
int
pop
mov
pop
inc
jmp
ljmp
aas
cmpl
test
xchg
pop
pop
imul
popf
pop
mov
cmp
cmc
stc
mulb
adc
pushf
mov
imul
inc
dec
loopne
jnp
popf
pop
insb
fiaddl
adc
imul
pop
fistpl
jmp
popa
flds
pop
inc
mov
sub
or
mov
pop
shrl
cmp
push
ds
in
int3
jo
cmc
inc
fsubrp
in
or
ret
mov
into
ret
push
jle
outsl
jae
outsb
js
or
ror
add
lret
es
cmc
mov
or
push
jns
jo
addr16
cmc
push
bound
vmovupd
push
or
aas
lods
adc
sub
idivb
and
sbb
cli
xchg
cmp
add
and
js
sahf
cmp
lods
call
xor
pop
xor
push
sbb
and
movsl
and
dec
push
fwait
sub
inc
push
adc
or
jmp
cmpsl
jae
int3
aas
xor
xor
sbb
imul
in
lret
pop
movsl
sbb
clc
mov
cmp
mov
xchg
mov
inc
mov
call
xchg
test
mov
js
push
sub
scas
lcall
mov
imul
loope
dec
ss
mov
movsb
cmp
call
and
in
out
cld
push
mov
push
cmp
cmp
mov
mov
inc
adc
ljmp
cli
insl
push
frstpm(287
orb
repz
pop
pop
loope
shlb
int3
or
insb
call
lods
cmpsb
leave
mov
out
mov
jle
xlat
call
xlat
cmc
out
push
jb
outsb
test
pusha
nop
pop
inc
push
mov
pop
addr16
ja
push
mov
movsb
es
pusha
ret
ds
std
stos
push
hlt
push
jge
push
iret
cmp
dec
je
pusha
dec
add
repnz
popa
sbb
adc
sub
jl
add
jle
insb
out
and
pop
jl
aas
fidivrs
insb
mov
outsb
xchg
pop
fimull
in
sbb
cmp
mov
stc
inc
js
push
pop
jl
mov
cltd
rcll
sub
roll
inc
mov
mov
aaa
sarb
outsb
xchg
xor
mov
and
das
out
call
insl
cli
pop
sub
jecxz
dec
outsb
jl
mov
xlat
das
lods
into
rcrl
mov
push
jmp
push
pop
je
xchg
xchg
add
or
imul
add
and
jg
sub
loop
xchg
repz
inc
popf
inc
mov
enter
sub
imul
cwtl
inc
cli
dec
daa
jae
gs
enter
xchg
das
lcall
xchg
cmpsb
jb
mov
fcmovb
dec
rclb
mov
cs
lret
and
cmp
out
sub
rcrl
test
add
fstps
mov
jbe
mov
mov
mov
scas
dec
xor
inc
fnstsw
in
jbe
sub
push
in
xchg
xchg
sti
into
and
aad
inc
sbb
iret
xor
push
aaa
adc
jmp
mov
add
push
fxch
adc
cmc
xor
jo
outsb
mov
mov
pop
scas
scas
fimuls
imul
int
scas
push
dec
out
push
clc
movsl
in
xchg
jae
loopne
repnz
jb
xor
adc
cmpsl
mov
insl
fldl
add
insb
jle
std
lret
push
mov
out
inc
ja
mov
mov
cs
lret
stc
dec
sub
flds
mov
aaa
and
pop
xchg
xlat
mov
movsl
lds
and
inc
xor
dec
pushf
adc
inc
fmull
negb
push
and
jb
cmp
jge
repz
inc
inc
pop
sub
sub
sarl
lods
fsubs
xchg
fcomp
fisubrs
cld
add
add
xor
imul
ds
jecxz
negb
jo
in
sahf
sub
sub
add
lds
out
inc
js
ror
and
sub
cltd
mov
xchg
adc
js
inc
adc
sub
test
fstpl
aam
lcall
pop
popf
scas
nop
xchg
in
sbb
sub
mov
stos
mov
test
int3
das
addr16
std
call
addr16
je
cmp
pushf
inc
inc
cmpsl
mov
insl
add
fimuls
mov
je
rcrl
push
in
mov
aam
aas
iret
mull
outsl
sbb
lcall
and
icebp
insb
jae
adc
mov
inc
push
sub
and
or
subb
xchg
xchg
inc
mov
js
sub
in
das
pop
ds
dec
mov
dec
and
add
cmp
pop
pushf
dec
or
lret
ret
or
adc
cmp
scas
aad
mov
mov
imulb
scas
fsubrl
dec
sbb
shll
aas
fisubl
mov
sbb
outsb
mov
arpl
rcrl
ret
mov
scas
out
mov
fbstp
sbb
dec
and
in
mov
or
add
and
push
dec
xchg
xor
orb
loopne
arpl
cmpsb
test
xchg
lcall
das
fists
or
mov
and
test
dec
mov
stos
mov
xchg
leave
clc
adc
lret
pop
enter
fistl
movsb
leave
jae
mov
imul
stc
sarl
fstl
push
and
int3
cltd
fiadds
fidivrl
lahf
push
test
imul
pop
inc
mov
ud0
shl
xchg
or
and
or
mov
sbb
cmp
pop
sbbb
pop
daa
jbe
or
test
lahf
in
int
out
or
jge
push
out
pop
lahf
or
and
or
shll
mov
outsb
rorb
inc
aam
xor
pop
xlat
test
adc
ret
ret
jne
cmp
sub
insl
xchg
outsl
inc
xchg
jne
pop
js
sbb
xor
push
in
mov
add
pop
push
mov
xor
jl
jle
iret
fimuls
xchg
mov
fsts
cs
and
mov
sti
adc
inc
xchg
ficoms
lahf
sub
and
sti
jg
cli
xchg
shll
cmp
dec
ds
sbb
mov
adc
pusha
xchg
lahf
xor
sub
add
fwait
es
xorb
and
cmp
leave
aad
pop
fisttps
xchg
repnz
cld
adc
sub
imulb
test
dec
push
cltd
test
aaa
lods
adc
aas
mov
fisubs
mov
sub
jl
lods
loope
call
loopne
and
bound
push
push
repz
push
sbb
xor
xor
test
lcall
pop
and
shll
adc
push
xlat
out
and
dec
into
pop
pop
fsts
or
mov
jo
mov
in
fistpl
addr16
nop
pushf
mov
mov
ja
outsb
dec
in
cmpsl
shlb
cmpsl
ret
dec
popa
sub
pop
jle
and
pop
push
lret
jg
push
xchg
lds
scas
out
sbb
adc
stc
push
xchg
xorb
enter
pushf
loopne
dec
mov
and
mov
das
pop
push
cltd
push
xchg
ror
enter
std
pop
nop
add
mov
in
xchg
cmc
and
ret
mov
cmp
aad
add
lods
mov
aas
mov
push
pop
sub
ret
repz
cmp
xlat
lock
js
mov
mov
dec
popa
les
push
ret
adc
fcmovbe
cmp
push
sti
push
jge
or
dec
jmp
jg
or
add
mov
xchg
ja
bound
sub
jecxz
mov
pushf
mov
add
andb
out
push
std
fwait
inc
xor
xchg
push
in
fnstenv
ljmp
push
jb
mov
sub
xor
shl
fdivl
jbe
aad
add
in
and
test
inc
or
jno
pop
sub
shll
inc
inc
lods
mov
and
mov
and
dec
jns
fs
cld
mov
sbb
shlb
ljmp
jno
xchg
add
lahf
push
int3
dec
add
mov
pop
xchg
ds
xchg
push
push
ret
push
stc
mov
cmp
mov
test
daa
enter
andl
or
lds
ret
or
stc
cmc
lahf
pusha
fists
std
sbb
int3
xor
je
push
add
lds
inc
stos
mov
loop
imul
cwtl
nop
push
sbb
sarl
fmuls
or
andb
orl
out
cmpb
mov
mov
es
jle
call
addr16
sbb
and
js
aam
out
jecxz
stc
lods
pusha
mov
push
add
ret
or
mov
sbb
add
data16
fldenv
jl
pop
cmp
push
sub
xchg
cmpb
arpl
das
inc
int
jmp
xchg
adc
sar
aad
sub
movsl
mov
cmpsl
scas
mov
ja
or
inc
icebp
test
jnp
push
mov
push
cli
add
xor
mov
jp
daa
pop
dec
in
test
inc
jl
rorl
inc
popf
loopne
in
pop
add
int
dec
mov
jns
sub
pusha
pop
ficoms
dec
les
pop
lods
cmp
scas
outsb
cld
jo
cmp
adc
test
fstps
sarb
fistpll
pushf
shrb
call
push
jle
ss
sbb
adc
add
pop
mov
cmpsl
clc
adc
das
dec
inc
sbb
mov
or
jg
pop
incl
mov
pop
in
icebp
je
repnz
repnz
das
outsb
test
in
and
xor
mov
fwait
add
inc
or
jecxz
jns
jae
fs
jge
clc
int3
ss
fcmovne
pop
iret
dec
xchg
and
shlb
clc
adc
push
mov
test
push
lods
xlat
aas
lcall
add
cmp
cmp
dec
xchg
comiss
arpl
or
outsl
xor
jmp
std
jl
repz
mov
aas
xorb
jbe
loopne
add
test
xchg
fisttpll
inc
sbb
addb
sbb
or
mov
in
dec
popa
not
loope
mov
mov
or
dec
xor
mov
jne
inc
jecxz
jge
shll
mov
xchg
adc
popa
enter
sub
add
pop
adc
fwait
mov
shrl
cmc
add
mov
sahf
in
inc
and
fldenv
mov
std
sub
aas
push
cmovs
aad
movsb
or
pop
shll
inc
test
imul
rep
ret
or
push
mov
into
std
repnz
imulb
jecxz
sub
and
dec
jns
jle
shll
ds
aaa
jb
inc
inc
test
in
mov
dec
jle
ret
mov
add
pop
mov
dec
aas
jecxz
loope
jne
out
lock
inc
das
adc
fldt
stc
xor
jmp
xor
xchg
mov
loopne
std
dec
loope
insl
push
loope
mov
ret
dec
lds
rorl
push
repz
adc
stos
shrb
popa
lahf
add
faddl
xchg
shll
imul
xor
adc
xchg
jne
inc
lcall
popf
test
out
xor
mov
in
dec
jp
lods
jmp
or
xor
test
and
std
mov
popf
pusha
into
pop
jb
cbtw
gs
stos
cmp
xchg
mov
pop
cmpsl
mov
mov
mov
pcmpgtb
ret
stc
imul
ss
push
out
push
cmp
xchg
mov
xchg
popa
jae
mov
imul
outsb
or
jb
sbb
sub
fstpl
cli
mov
insl
inc
sbb
and
jg
cmp
pop
mov
aad
jge
ss
hlt
cmp
mov
in
fistpl
or
aaa
lea
push
ss
inc
or
cmp
ss
inc
mov
into
leave
or
xchg
push
xchg
sub
lret
sub
mov
pop
xchg
dec
enter
jecxz
in
fbld
je
mov
ret
mov
test
and
push
pop
std
pusha
cmpsl
icebp
aaa
sarl
pushf
xchg
push
test
mov
ja
push
fcompl
mov
packssdw
add
lods
pushf
xor
and
inc
mov
xlat
imul
adc
pop
arpl
rcrb
xchg
dec
call
cli
pop
inc
mov
stos
fistps
ret
sub
sarl
lret
inc
mov
js
and
push
cmp
or
cmp
push
outsb
daa
pop
stc
insb
lahf
mov
ds
imul
xor
mov
sub
sub
popl
mov
push
xor
lahf
mov
cmp
or
mov
cmp
mov
sbb
jmp
mov
fwait
insl
imul
shl
jg
inc
iret
aam
adc
inc
repnz
out
sub
out
lds
mov
pop
stos
xor
filds
sbb
sbb
out
cmp
xchg
call
repz
jecxz
xchg
cwtl
pusha
in
push
ss
jl
icebp
or
rclb
adc
es
push
dec
fistpl
in
push
sbb
pusha
cmpsl
dec
and
inc
mov
repnz
repnz
jo
xchg
mov
push
imul
aam
xchg
lods
jecxz
sarl
cltd
pushf
movsb
jmp
pop
sbb
clc
in
xchg
xor
mov
imul
inc
xlat
dec
adc
sub
ret
outsl
xor
sti
div
fwait
cld
loopne
xchg
xchg
movsb
int3
cmpb
xor
inc
sub
mov
arpl
jne
or
sub
rcll
lods
mov
enter
cmp
lods
test
mov
dec
ja
adc
sub
imul
fsub
or
and
cmp
mov
add
and
xor
or
sbb
cmpsl
ljmp
fwait
in
mov
fwait
push
pop
insl
sub
test
out
pusha
pop
adc
and
popf
sub
dec
xor
loop
scas
push
sbbb
bound
movsb
or
pop
sub
mov
ds
ffree
and
mov
xchg
mov
sub
int
gs
sbb
pusha
jecxz
or
out
sub
mov
test
cwtl
loopne
dec
jo
int3
pop
dec
or
pop
loop
imul
fdivs
pop
imul
cmp
adc
movsl
insb
js
pop
jne
xor
jb
add
jl
loop
dec
or
dec
inc
popa
mov
and
fldl
pop
push
in
xchg
mov
mov
adc
xchg
ja
jp
xchg
sub
in
stos
jbe
jns
adc
pop
push
cmp
ja
xor
popa
in
xchg
jne
jbe
jecxz
adc
or
push
in
int
int3
mov
movsb
sub
enter
adcl
daa
mov
xor
pop
js
fdivl
iret
jnp
mov
movsb
xor
sub
push
xchg
jo
mov
pop
jge
mov
ja
jl
testb
push
scas
out
lods
je
int
fstps
leave
in
ret
mov
aas
lcall
call
push
jl
out
stos
jae
addr16
cmp
aaa
arpl
dec
add
mov
lds
jnp
jo
loope
cmpsl
aad
pop
shl
xor
arpl
fstl
mov
inc
scas
std
cmp
enter
xor
cltd
xor
push
repz
mov
mov
dec
ss
adc
mov
es
cmp
cmp
lahf
sbb
cmove
or
int3
xchg
test
jle
add
xor
sub
mov
mov
lods
pop
mov
loop
add
mov
mov
jbe
and
inc
test
mov
test
xchg
mov
int3
insb
inc
dec
xor
cmp
outsl
pushf
dec
popf
lods
pop
aas
xchg
and
test
lret
cmp
adcl
pop
dec
push
dec
cmp
mov
mov
push
mov
imul
xchg
pushf
es
pushf
lcall
call
mov
adc
push
push
mov
and
data16
or
js
fwait
and
xchg
les
nop
push
adc
fxch
outsb
out
push
loope
cmp
push
mov
fs
in
cmc
mov
or
roll
and
es
xchg
xchg
lock
mov
xor
rcll
sub
pushf
cwtl
inc
int
dec
pop
jecxz
jo
jnp
adcb
out
fsubl
shlb
adc
jne
aas
test
les
stos
movb
dec
pop
outsl
xchg
jbe
sti
and
test
imul
sbb
xchg
cmpl
repnz
ret
imul
cltd
mov
arpl
sti
rolb
scas
sbb
cmp
in
repz
mov
push
stos
dec
push
int
mov
lods
mov
cmp
hlt
loope
adc
fisubs
xchg
aas
pop
pop
and
or
sub
sbb
imul
mov
scas
sbb
xlat
xchg
loop
fldl
dec
adc
lock
push
add
test
mov
into
xlat
and
jne
add
cmp
sub
pop
push
pusha
push
dec
and
sub
jnp
cltd
bnd
ljmp
xchg
or
mov
ret
inc
sarl
lods
and
xor
cmp
addr16
int3
data16
fnsave
jmp
pop
xchg
fldenv
movsl
inc
jge
out
les
icebp
leave
mov
mov
fisttpl
sahf
shlb
mov
imul
mov
cmp
cmp
mov
cmp
xchg
sbb
inc
xchg
xor
mov
rcr
push
add
and
cmp
add
sbb
dec
pop
and
sbb
mov
pop
xor
jge
xchg
push
sahf
mov
shll
out
int3
or
xor
mov
xor
xchg
jnp
lahf
test
pushf
push
scas
enter
mov
out
aas
push
and
in
sub
and
fdivrs
fs
mov
or
aas
and
mov
int3
iret
test
adc
add
stc
cs
ficoms
inc
xor
scas
and
or
sub
jmp
testb
dec
out
dec
jno
loop
ds
adc
pop
adc
xchg
mov
test
sti
push
pop
dec
aad
daa
shrb
cmpsl
pop
xchg
in
popa
xor
orb
jae
cltd
sbb
cmp
shrl
inc
outsb
test
add
mov
push
cmc
out
scas
lcall
movsl
or
jne
mov
adc
or
sti
pop
mov
divb
mov
mov
mov
mov
add
pushf
mov
lods
adc
mov
mov
shlb
into
mov
ds
rcr
jge
scas
cmp
stc
inc
pop
das
xchg
jg
adc
mov
push
jo
call
pop
or
enter
insb
cld
hlt
fwait
or
pop
pusha
rcrb
shlb
dec
sbb
pop
xchg
sub
add
push
pop
test
jg
inc
sbb
sarb
push
cs
or
cmc
push
data16
xchg
or
add
cmc
pop
dec
sbb
pop
dec
ds
xor
outsb
lret
mov
fldt
cli
cmp
daa
fwait
mov
jmp
movsb
sub
movsl
js,pt
xchg
jae
xchg
add
or
xlat
scas
fwait
sbb
push
xor
xor
and
pop
fmuls
pop
fcompl
sbb
xor
pop
push
or
pop
pop
testb
and
cmpsb
mov
mov
pushf
pushf
lock
mov
sub
push
add
lods
cmp
aam
test
and
test
sbb
fiadds
and
call
mov
pop
jle
sub
and
xlat
cmp
pushf
xchg
cmc
cmpsb
in
ret
sbb
lods
jecxz
pop
fwait
cmpsb
in
push
xor
lods
jb
xorb
gs
pusha
sarl
ljmp
movsb
xlat
arpl
out
ret
clc
icebp
enter
pop
xorl
jge
push
adc
or
pop
aaa
xchg
inc
fmull
mov
jmp
in
cmp
adc
data16
js
mov
jle
jbe
pop
dec
inc
mov
pop
push
clc
mov
add
or
mov
jle
cmp
mov
mov
push
or
mov
mov
repnz
outsb
cmp
cmpsb
cmpsb
dec
aas
mov
add
in
orb
stos
lret
rcrb
dec
in
adc
outsb
lret
dec
je
mov
stos
in
xor
and
dec
test
cmc
in
iret
fldcw
jno
xor
lods
lret
hlt
fmuls
jns
sti
mov
mov
cmpsl
sbb
es
pop
cmp
fimuls
pop
cmpsb
cli
lret
cmpsb
push
xor
push
loope
sbb
dec
xchg
or
iret
mov
aam
mov
jns
int
jge
push
out
aad
sarb
lock
cwtl
mov
sbb
lcall
mov
sbb
push
inc
inc
xor
shrb
test
call
ret
dec
or
mov
push
pop
pop
ljmp
sub
inc
ljmp
test
mov
sar
dec
push
xor
xchg
aas
inc
pushf
loope
push
jno
popf
adc
jp
jp
in
pushf
scas
adc
andb
mov
mov
push
in
loopne
je
loopne
not
dec
loope
xchg
mov
test
scas
mov
ret
jp
aad
dec
sub
dec
dec
sbb
jp
jl
dec
and
cmpb
dec
add
cmpsb
movups
test
and
pop
jo
idivb
push
in
inc
dec
push
dec
scas
pop
xor
add
nop
insl
divb
push
not
ss
jo
shll
call
loopne
out
les
pop
xorb
add
dec
jle
sub
dec
aam
sbb
push
imulb
mov
jle
dec
xlat
je
loop
or
mov
sub
faddl
out
cmp
jnp
xchg
sub
int3
call
cmp
repz
mov
adc
cmp
xor
sti
mov
je
add
xchg
fdivrp
xchg
psubd
std
xor
enter
cltd
lcall
xchg
cmpsb
outsl
or
push
inc
inc
ficoms
jecxz
test
fsub
adc
pushf
out
xor
or
pop
jl
jae
lods
insb
nop
push
pop
cmpsl
cld
and
mov
loope
adc
pop
add
and
inc
fsubs
fs
mov
loope
adc
jp
nop
lcall
loop
or
dec
jg
test
mov
push
push
pushf
mov
loopne
ret
movsl
int3
jl
push
xchg
mov
jmp
cmc
loope
xor
inc
sbb
pop
jns
rorl
sahf
and
in
sarb
lcall
fcmovnbe
sti
and
js
cmpsb
shll
dec
fstps
stos
sub
sbb
pop
dec
cmp
xlat
inc
outsl
add
inc
adc
in
lds
adc
dec
add
jg
aas
loopne
sub
push
into
dec
fmulp
movsl
shll
xor
pop
out
cwtl
mov
jne
popf
sub
cmp
dec
mov
inc
or
jmp
test
mov
pop
jb
mov
adc
cmp
mov
sbb
fsub
cld
pop
cmpb
cli
fsub
or
or
adc
cmpsl
daa
or
sbb
imul
push
sub
mov
je
sbb
mov
int3
and
movsb
pop
ret
gs
mov
out
jle
sti
or
shrb
adc
cli
int
cmpsb
xchg
mov
xlat
das
sbb
sub
add
cmp
stc
popf
movsl
pusha
aaa
movsb
test
xor
sbb
lods
ss
or
dec
addb
cltd
adc
xor
pop
xchg
xor
inc
hlt
sub
sub
sub
insl
mov
cld
inc
inc
bound
and
out
pop
lods
in
sub
jge
jg
cmp
sbb
cmp
loop
pop
dec
std
and
dec
jmp
mov
add
xor
lods
call
jl
fistpl
xchg
xor
adc
push
jne
dec
js
xchg
test
jb
inc
jne
mov
xor
mov
mov
adc
subl
xchg
mov
icebp
fcmovb
popl
cmpsb
pop
in
arpl
jae
mov
jecxz
lds
mov
xchg
out
jbe
fxch
incb
fwait
mov
es
xlat
pusha
xchg
mov
cli
hlt
imul
dec
cli
fucom
arpl
outsl
dec
add
and
hlt
push
push
jg
dec
mov
inc
mov
sbb
fcom
cmpsb
inc
dec
lods
decb
fs
enter
mov
adc
pop
push
scas
or
test
icebp
mov
mov
jno
je
sbb
mov
push
push
outsl
xlat
jns
lret
aam
push
mov
push
dec
movsb
lods
xor
push
and
jle
fstl
and
in
push
test
cmp
out
pop
push
xor
fnstenv
stc
mov
and
mov
adc
push
add
push
frstor
pushf
leave
dec
mov
in
push
jl
pop
mov
lcall
or
inc
ficomps
call
jbe
xchg
mov
mov
dec
xor
je
jp
gs
adc
cmp
leave
lcall
add
pushf
jle
pop
xchg
and
xchg
pop
mov
subb
lcall
mov
cmp
push
cmp
icebp
pop
repz
mov
jnp
lds
mov
lock
enter
stos
jnp
xchg
sub
pop
xor
mov
jmp
inc
vandpd
push
sbb
dec
addl
cmp
pop
mov
add
pop
lcallw
add
testb
jae
or
jge
inc
pop
pop
lahf
subl
pusha
cs
mov
xchg
ljmp
mov
push
or
xchg
cli
mov
aad
mov
data16
adc
pop
jle
jb
mov
ret
aas
lock
adc
mov
sbb
out
mov
sub
jo
arpl
mov
mov
mov
in
in
and
cmp
xlat
or
cmp
adc
add
inc
fiadds
cld
jnp
idivb
or
pop
stos
aad
pop
int3
pop
xor
rcll
imul
andl
insb
in
or
negl
and
scas
lcall
fcompl
pop
aaa
push
in
sub
outsb
cmp
pop
pop
adc
and
shlb
insl
jecxz
jnp
mov
inc
push
jns
sub
fcmovu
cmp
or
out
in
sbbl
push
dec
test
arpl
divl
pop
jle
cmp
std
aam
rcrl
popa
lds
jbe
pop
mov
test
lods
xchg
in
and
mov
mov
sbb
pmaddwd
icebp
loopne
xor
ss
ja
sbb
lea
in
xchg
js
nop
pop
adc
out
insl
sbb
int3
cmc
push
int3
fdivrl
and
inc
push
rcrl
fisttpl
stc
call
pop
or
add
mov
xor
decl
cmp
shl
fadds
inc
cmc
mov
inc
and
ljmp
sysret
lock
idivb
inc
dec
jbe
push
pop
and
cwtl
xchg
shl
loope
inc
inc
fsts
adc
pop
pop
mov
push
sbb
stos
pushf
mov
push
and
shlb
in
sbb
cmp
imul
adc
cwtl
aam
xor
pushl
push
rolb
pop
dec
fcoml
test
test
mov
dec
adc
xor
push
arpl
mov
sbb
imul
sahf
and
in
rcll
mov
test
cmc
scas
jge
sub
adc
push
in
adc
popf
icebp
sub
aaa
xlat
xlat
jno
mov
into
mul
and
leave
lahf
fs
test
out
xor
jecxz
cli
jmp
fiaddl
fs
std
inc
and
lods
int
loop
lock
xor
xlat
popa
sbb
cmpsb
pop
and
cmp
xchg
mov
mov
jnp
cmp
mov
data16
hlt
mov
add
fsub
lret
dec
pop
push
mov
sub
sub
aas
or
sub
outsl
xor
js
cmp
in
push
push
sub
js
or
add
lcall
or
mov
jns
jg
xor
imul
cmp
dec
dec
lahf
push
inc
dec
wbinvd
cmc
lods
es
xor
rcrb
cwtl
popf
push
inc
mov
push
add
pop
insb
lret
inc
movsl
outsb
sbb
mov
in
push
sbb
ret
adc
stos
fistpl
push
loop
lea
test
pop
jb
pop
adc
push
cs
push
stos
xor
pop
sub
mov
adc
xlat
ss
xchg
push
nop
pop
adc
xor
repnz
insl
in
shr
cmp
les
sbb
inc
jecxz
inc
add
fst
sub
imul
insb
xchg
idivl
cltd
sahf
fimuls
stc
and
push
adc
pop
jne
stos
sbb
lret
mov
sbb
mov
cmp
ss
in
outsl
repnz
aam
push
and
cmp
pop
xchg
or
js
lret
imul
pop
add
mov
cwtl
in
movsl
mov
out
out
xor
sarb
mov
stc
jb
mov
push
and
popa
leave
enter
imul
mov
lret
cmp
pop
xor
xchg
adc
mov
add
test
jb
aam
decl
dec
loop
jmp
dec
addr16
adc
cld
mov
cmp
adc
xlat
xchg
fstpl
mov
cld
idivl
mov
fs
xchg
or
or
or
shld
pop
and
jnp
roll
xor
inc
insl
icebp
xchg
xchg
repz
add
ss
fs
in
xor
xor
popf
out
testl
push
es
insl
shll
mov
icebp
mov
shlb
and
andb
mov
fwait
jns
arpl
xchg
addr16
scas
jns
xlat
dec
jo
test
xor
clc
xlat
into
cmc
repz
sahf
std
loope
pop
add
jbe
cmp
shl
dec
aaa
pushf
jnp
arpl
lods
ljmp
pop
pop
aaa
js
and
cli
icebp
mov
mov
add
aam
and
and
fcmovnb
scas
add
pop
lods
cmpsl
insl
or
or
stos
sub
cmpsb
mov
cmp
cmp
and
or
mov
fchs
or
repnz
int3
ret
imul
fiaddl
push
mov
jmp
fiaddl
mov
and
jb
outsl
cmp
mov
sahf
xchg
iret
dec
jge
fs
rcrb
sbb
loopne
mov
cmp
or
sbb
fdivr
popa
setg
inc
data16
mov
pushf
jae
adc
rep
cld
sub
loope
mov
idiv
sarb
daa
mov
iret
sbb
std
daa
sbb
sti
inc
or
shrb
cli
sub
cs
stc
clc
stos
jl
nop
jecxz
in
mov
jmp
mov
cmc
cmp
xchg
mov
nop
sbb
repz
push
mov
lods
fs
sarl
sar
cwtl
jo
add
imul
mov
fisubs
push
jge
mov
or
shl
inc
dec
adc
shrb
sbb
nop
adc
lds
dec
dec
lods
sbb
xchg
lahf
push
fistpll
sbb
stos
arpl
inc
and
add
aas
bound
pop
iret
outsl
dec
mov
clc
push
inc
daa
push
in
mov
pop
lahf
and
pop
sub
test
js
and
dec
pusha
or
lahf
jge
movsb
sbb
test
cs
sahf
xchg
add
idivb
fwait
and
mov
dec
jno
and
hlt
cmpsl
push
les
test
arpl
sbb
lds
xor
xor
lret
movsb
sub
orb
js
insl
aam
insb
mul
jmp
adc
int3
mov
int3
int3
hlt
in
sbb
mov
icebp
xor
jnp
lock
xchg
pop
out
pop
int3
sub
mov
jecxz
sub
mov
dec
mov
mov
lret
push
std
xor
repz
dec
xchg
xchg
gs
inc
insb
call
loopne
xchg
fs
movsb
pop
xor
jb
mov
icebp
jb
mov
push
cmc
fwait
mov
aam
sbb
insl
adc
push
push
pusha
negl
dec
jbe
mov
mov
shr
push
xor
lds
faddp
sbb
and
fisttpll
shlb
mov
push
push
mulb
fxch
inc
pop
jp
add
lock
sbb
pop
mov
in
fistl
add
jbe
shll
cmp
push
iret
and
pusha
sbbl
xchg
fcoms
pop
and
nop
push
and
shll
imul
leave
or
adc
data16
dec
or
in
xor
add
or
das
sti
inc
lds
movlps
jl
push
test
sbb
mov
push
mov
sub
jne
out
jo
dec
adc
and
push
ret
add
mov
insl
ja
lret
sbb
mov
insl
aad
xor
xchg
out
push
cmp
je
cwtl
xchg
mov
mov
mov
cmc
push
xor
cmp
cli
cltd
sub
inc
xor
and
ljmp
rorb
mov
pop
div
mov
dec
inc
repnz
dec
push
and
lret
rcll
ja
out
mov
arpl
sub
and
out
jo
repnz
and
jp
sbb
sbb
pop
sbb
out
jg
push
adcl
push
xor
mov
or
sbb
movl
sahf
out
dec
pop
cwtl
andb
mov
insb
mov
fistps
dec
push
div
adc
push
mov
pop
imulb
xchg
inc
push
mov
push
inc
outsb
xor
push
in
mov
repz
push
dec
add
push
js
sub
dec
sub
mov
jno
sub
or
loopne
rclb
and
arpl
rcll
pop
sub
out
cmp
ds
repnz
adc
mov
and
jl
adc
stc
lds
mov
dec
mov
push
jmp
gs
stc
out
pop
jno
outsl
xchg
test
adc
add
sti
call
shlb
push
pop
insb
sahf
dec
and
ljmp
mov
jp
inc
adc
fdiv
in
test
flds
dec
xchg
pop
or
jle
imull
cmpsb
mov
mov
test
arpl
jns
lahf
pop
xchg
fwait
cltd
popaw
imul
sub
iret
dec
xchg
xor
inc
movsb
push
or
jg
xchg
or
mov
pop
push
sub
aam
jae
xor
inc
jg
lret
cld
loope
inc
jns
inc
mov
fldcw
scas
jo
adc
rcr
pop
xor
inc
outsb
push
orb
lods
jbe
fs
push
sbb
pop
jg
daa
int
add
xchg
xchg
decb
enter
lea
pop
mov
push
ss
and
test
push
jge
adc
scas
cld
lods
mov
mov
jnp
js
cmpsl
les
pop
outsl
lret
scas
into
sub
clc
cmp
shl
sbb
divb
pop
or
js
aad
push
fnstsw
es
bound
and
nop
outsl
int3
mov
outsl
lahf
mov
gs
cli
push
pop
and
data16
aam
int
insb
fdivrl
jle
cmp
add
fsubl
test
adc
push
dec
mov
mov
mov
jmp
lcall
xor
pop
addl
cld
jne
and
jg
cld
push
outsb
jle
dec
mov
add
fwait
push
iret
push
xor
rorb
loope
xor
imul
cltd
xchg
sahf
outsb
jle
repnz
xchg
pop
and
and
stos
sbb
std
outsl
loopne
pop
movsb
popa
es
sub
add
outsl
sub
push
jnp
cltd
adc
out
andb
jno
test
data16
shl
jecxz
pop
mov
xor
sub
in
out
arpl
in
jg
pop
xchg
add
push
xchg
sub
cmp
icebp
cmpsl
sub
mov
cs
out
and
xor
sub
ja
fisttpl
jb
fsubr
enter
aad
mov
mov
pop
add
loopne
addr16
xchg
push
dec
mov
lds
mov
push
imul
add
in
mov
test
pop
and
lcall
sub
jmp
jmp
ret
push
mov
inc
in
mov
lret
rorb
or
sub
xchg
int
test
std
pushf
icebp
les
xchg
bound
jns
jns
adc
sbb
inc
leave
push
mov
repnz
mov
iret
cmp
out
xlat
adc
mov
jmp
lret
in
xorl
ds
andl
les
pop
xchg
mov
push
rcrb
hlt
aaa
xchg
inc
adc
stc
fwait
sbbl
inc
outsl
push
mov
xor
add
and
pop
lahf
imul
lods
inc
loop
lret
push
pop
mov
dec
pop
sub
jecxz
xchg
xchg
push
loopne
test
add
mov
sub
mov
xor
filds
mov
adc
je
lahf
adc
pushf
sub
sbb
mov
sahf
add
call
adc
in
add
icebp
cmp
mov
cld
xchg
imul
pushf
or
rclb
and
jp
test
jbe
jp
jg
pop
out
add
jbe
jne
aaa
or
sar
pop
imul
cli
sti
ds
mov
jmp
jle
faddp
pop
jl
mov
xchg
inc
lcall
aam
shlb
js
dec
push
cmp
nop
sbb
adc
lea
lret
jne
ret
daa
jne
mov
fstpt
sub
pop
lret
movl
jae
add
cmp
pop
jg
test
je
movsl
stos
adc
cwtl
ds
sbb
pop
inc
push
mov
lcall
dec
jg
sbb
fwait
in
call
mov
or
mov
aaa
leave
mov
ds
mov
and
insb
lret
adc
notl
std
popa
inc
mov
sub
xor
jecxz
mov
movsl
outsb
cmp
mov
bound
and
ds
push
loopne
add
pop
bound
sbbb
shr
jbe
ljmp
pop
imul
ds
dec
in
inc
sub
cli
xchg
pop
fdivr
sub
xlat
jae
sbb
repnz
inc
pop
pop
test
stos
xchg
cmpsb
ja
jbe
test
jo
pop
out
jge
in
sub
inc
lods
sahf
adc
imul
and
adcl
shlb
jo
test
xchg
aad
in
gs
fcmove
push
mov
es
mov
mov
das
push
or
push
mov
pop
jp
stos
ja
dec
stos
mov
pop
and
push
pop
cmc
daa
push
dec
lret
movsb
dec
lret
xchg
or
fwait
mov
in
and
pop
ret
sub
dec
out
stc
scas
jmp
push
mov
inc
inc
dec
jle
fisubrl
fcmovnbe
fdivl
cs
ja
mov
arpl
insl
std
fdivs
iret
notl
rcrl
mov
xchg
ds
dec
in
jg
mov
xor
sbb
int3
mov
in
mov
jg
mov
mov
lahf
pop
pop
test
test
testl
sbb
decl
stc
cmpsl
adc
loopne
or
add
mov
dec
adc
test
subb
xchg
push
bound
or
jl
cmc
adc
addl
iret
in
sbb
jo
add
je
cmp
xchg
int
dec
pop
jp
data16
push
sar
jb
inc
mov
ja
gs
ds
or
mov
sbbb
mov
xchg
sub
fucomi
int3
ss
add
sbb
roll
sbb
sahf
cmp
jne
xor
jbe
out
cmpb
rcll
das
leave
ss
mov
fwait
and
femms
inc
add
and
sti
mov
sbb
ret
mov
or
dec
cmp
fwait
pop
or
sti
test
shll
outsl
and
out
cmp
std
cwtl
insb
cwtl
add
subb
ficoms
cmp
cmp
repnz
fldt
jne
xchg
xor
jle
mov
call
xor
shll
or
push
aam
fcompl
das
mov
inc
insl
jno
dec
lea
insl
inc
enter
lods
fistps
pop
popf
jg
orb
divl
clc
pop
loope
sbb
daa
jmp
pop
ja
je
cmpsl
and
enter
dec
push
adc
or
and
cmp
jb
ss
xchg
imul
scas
addr16
mov
aad
daa
sbbl
bound
loope
or
push
add
xor
pop
sub
arpl
sbb
cld
dec
fwait
sbb
dec
aaa
loope
out
loopne
pop
or
dec
jo
or
cmp
sbb
cli
in
hlt
jbe
sub
sti
xor
xchg
push
inc
je
pusha
or
dec
inc
jae
std
cmp
lods
xchg
mov
sub
or
lods
mov
test
adc
mov
mov
insl
ret
mov
mov
cli
es
add
data16
mov
add
mov
pop
negb
std
xchg
aad
cmpsl
xorb
gs
lret
mov
lock
fnstcw
lea
xchg
andl
mov
xor
jg
sub
mov
cli
arpl
dec
rolb
mov
jp
sbb
xchg
xor
sub
andb
xor
and
or
in
fcoms
pop
cmp
cmpsl
cmp
aam
popa
lds
xor
adcl
sbb
or
mov
imul
out
pop
xor
les
xchg
xor
rolb
jecxz
mov
movsb
pop
jle
movsl
xor
jno
into
cmpb
sarb
call
sub
inc
push
jo
sub
xchg
enter
mov
cmp
xchg
pop
and
inc
jg
lret
and
push
outsl
loopne,pt
loop
add
push
xor
and
pop
xor
movsl
cmp
rcrl
add
orl
mov
out
jns
add
aaa
inc
stos
ljmp
clc
outsb
lret
jmp
mov
cmp
mov
pop
mov
pop
push
inc
ljmp
orl
repnz
mov
xor
test
adc
fsubrs
sbb
shl
icebp
dec
sbb
fstl
xor
rorl
jp
out
push
dec
inc
add
jo
sub
mov
stc
in
sub
shrb
sbb
xchg
clc
ja
sbb
sti
xorl
or
inc
jg
sbb
fldcw
pop
mov
add
movsb
adc
add
out
push
aas
mov
iret
shrl
lods
cmp
inc
outsb
shrl
out
mov
scas
add
orb
sbb
xchg
outsl
adc
outsl
std
flds
fildl
repnz
jbe
addr16
pop
fnstenvs
jp
cmp
jb
jo
add
push
push
repz
nop
push
aaa
lock
sub
sbb
addl
outsl
rorb
pop
into
out
shlb
and
flds
out
mov
fcmovnb
hlt
roll
insb
pushw
lock
inc
icebp
testb
sbb
pop
cmp
mov
xor
mov
clc
push
cmp
or
stos
dec
in
in
and
or
int3
addb
vpunpckldq
sarb
aam
xchg
movsl
xchg
js
push
push
sar
es
popaw
lea
loop
imul
mov
repnz
cli
sbb
inc
pop
das
jbe
and
cmp
data16
xchg
jp
repnz
out
mov
bound
add
shr
jmp
xchg
jns
dec
or
ljmp
popa
mov
ss
inc
push
xchg
scas
sub
out
inc
push
mov
pop
adcb
fwait
sub
subb
sub
jb
out
movl
dec
test
jbe
add
mov
in
nop
out
inc
adc
jns
ss
shlb
shlb
xchg
lods
nop
mov
cmpsb
sahf
enter
rcll
in
sbb
hlt
mov
inc
jg
aas
test
jne
cli
jnp
jb
cmpsl
jo
dec
mov
scas
movl
lds
xor
add
enter
lock
sti
add
repnz
sarl
xchg
in
inc
ficompl
mov
sbb
or
sbb
or
jbe
call
jle
sub
cmp
jl
cld
ret
popa
sarb
mov
mov
push
sbb
jmp
mov
inc
xchg
repnz
imul
jge
int3
jbe
data16
sub
add
bound
lea
repnz
jo
xlat
sub
ret
jmp
add
xchg
sub
adc
fdiv
lock
adc
push
adc
repnz
push
xchg
jl
js
mov
xchg
mulb
lea
inc
adc
insl
pop
mov
mov
xor
shrl
mov
mov
outsb
cmpsl
loopne
cmp
jecxz
aam
pcmpeqd
hlt
add
cwtl
lock
je
dec
adc
mov
jecxz
rcrb
inc
mov
pop
push
fdivrs
out
imul
dec
mov
and
sbb
mov
xor
dec
hlt
aam
in
cmpb
fcoml
fdivl
movl
push
xlat
leave
andl
mov
inc
stos
xchg
xlat
mov
pop
ljmp
cmp
repnz
rclb
adc
jle
sti
lods
cs
and
dec
inc
push
sub
xor
jae
mov
icebp
mov
cli
andl
push
mov
adc
mov
testl
sbb
cmp
sbb
adc
dec
mov
xor
jge
sbb
das
ret
loope
in
mov
inc
cld
daa
jbe
sbb
ss
push
push
mov
imul
ret
push
test
xor
mov
les
cmp
js
testb
pusha
aaa
ret
dec
xchg
int3
fcomps
arpl
jb
lock
xor
pop
lcall
inc
add
mov
loopne
cmpsb
mov
sub
sub
rclb
enter
push
mov
out
jle
push
in
arpl
inc
mov
jmp
adcb
mov
in
shrl
mov
and
loope
pop
and
arpl
mov
in
div
fsubrs
sub
xchg
sub
xchg
pop
aam
rcrb
mov
inc
jmp
xchg
sbbb
pop
into
xchg
xor
jno
movaps
fimull
inc
jbe
imul
or
adc
xchg
cmc
mov
cmpb
mov
mov
lock
cli
adc
sahf
ja
xor
test
dec
dec
ljmp
or
ljmp
bound
fdivrs
pop
notb
or
cmc
pop
push
dec
ret
fwait
lods
fwait
call
push
jae
mov
lret
enter
xchg
test
xchg
pop
cmp
push
jmp
in
nop
scas
dec
ds
daa
fstp
mov
jl
icebp
ret
jl
dec
cmc
mov
loope
jl
push
pop
xchg
adc
xchg
fstpt
cmp
jb
pop
inc
or
fiadds
xchg
pop
xor
pop
inc
imul
sbb
sarb
cmp
aas
aas
movsb
cmc
arpl
in
pop
call
loopne
out
sbb
jns
stos
jnp
mov
jo
and
inc
jae
shl
dec
cli
push
add
addb
sti
jmp
mov
or
imul
lahf
ja
jbe
mov
xchg
mov
add
jp
mov
pop
mov
clc
fdivrl
cltd
loopne
sbb
sub
mov
movsl
add
mov
pop
inc
xor
xor
leave
cmp
imul
in
fiadds
xchg
or
stc
push
rcl
shr
imull
sub
out
aas
mov
lods
pop
push
loope
mov
or
js
inc
inc
xchg
inc
negl
in
int
jae
enter
push
mov
cwtl
add
scas
sub
cmc
inc
ret
mov
jae
mov
loop
loopne
jae
js
int3
pop
xchg
ret
iret
popa
or
cld
push
or
add
pop
cld
dec
bound
data16
pop
lret
sbb
sbb
js
mov
sbb
sbb
in
ja
jne
xchg
fldt
add
xlat
sarl
mov
sbb
inc
mov
insb
fsub
push
xchg
xchg
rcrb
and
mov
mov
inc
out
scas
pop
and
fisttps
cli
inc
xchg
aaa
ret
rcrb
sub
mov
sbb
cs
stos
xchg
mov
fwait
addr16
cmp
in
fs
divb
into
sahf
lret
iret
inc
out
mov
or
lahf
daa
int3
repz
cld
pop
mov
xchg
xlat
addr16
sti
mov
enter
pop
rcrl
iret
lods
ss
nop
int3
xchg
jmp
into
mov
jno
sbb
cmp
pusha
jae
jl
dec
popa
lcall
es
push
push
arpl
mov
mov
sub
scas
mov
shll
push
dec
test
push
or
cmpsl
roll
pop
push
cmp
lahf
outsb
fcoml
xchg
adc
call
fsubrs
fisubs
daa
popf
cmp
sub
pop
sub
movsb
cmpl
out
add
pushf
cmp
pop
iret
mov
fstpt
jae
fldenv
xchg
imul
stos
dec
std
shlb
mov
rolb
subb
fstl
adc
in
dec
sub
aam
pop
sahf
lock
addl
adc
fxch
push
insl
icebp
xor
sub
or
scas
dec
into
add
insl
mov
jbe
and
jb
add
pop
sub
vmread
inc
dec
sub
mov
adc
es
jno
hlt
jne
sbb
dec
mov
and
lahf
mov
xor
outsb
call
test
cmpsl
jecxz
js
loope
push
icebp
aad
in
or
cwtl
iret
inc
in
xor
mov
mov
or
sbb
push
ret
add
jp
and
sarb
jmp
inc
insb
dec
movsl
or
xor
fldcw
das
jmp
pop
sti
sbb
aaa
jecxz
loop
lcall
inc
pop
loop
repz
insb
in
test
dec
mov
pop
inc
cmpsb
jl
push
cltd
adc
push
dec
xor
lods
and
mov
jp
imul
sti
fcomps
in
push
cs
stc
push
lea
out
jnp
outsb
pusha
ds
scas
xor
mov
and
jp
fldt
daa
rolb
sbb
xlat
ja
addb
pop
int3
sbb
test
imul
frstor
adc
and
add
sbb
lret
lods
mov
xor
ss
adc
fmuls
stc
sbb
aaa
lret
mov
sahf
dec
scas
rcrb
push
push
flds
cmc
lock
sbb
ljmp
push
mov
sub
rcll
cs
adc
scas
sub
mov
pop
test
dec
sbb
rolb
ret
xlat
jg
mov
enter
push
dec
cmp
dec
xlat
xlat
xor
sahf
hlt
in
cmc
sbb
jb
popf
adc
out
and
daa
jne
sbb
ljmp
int
jl,pn
jle
adc
ret
mov
popf
das
jbe
add
outsl
pop
inc
or
out
or
mov
mov
aas
or
outsb
popf
jmp
xor
test
mov
fistps
jmp
dec
loopne
cmp
xlat
fsubrl
psrld
movsb
and
out
cltd
outsl
dec
and
pop
jbe
popf
fidivrl
xor
clc
rolb
jle
lret
imul
movsl
add
popf
jae
xor
roll
or
push
dec
rol
fwait
adc
jbe
shr
ret
fs
inc
jp
or
test
sbb
scas
mov
and
and
sub
xchg
jbe
mov
inc
int
push
shl
mov
ss
dec
push
or
or
and
mov
fiaddl
clc
stc
std
add
out
sahf
std
pop
daa
and
add
jne
loope
repz
inc
insl
add
push
mov
cld
or
aam
icebp
pop
jbe
adc
mov
xchg
stc
call
enter
loopne
mov
or
xor
mov
dec
enter
into
into
lock
pop
mov
call
je
movsl
mov
fistps
addr16
xchg
das
mov
xor
push
inc
scas
out
inc
andl
pop
outsb
xlat
ret
aaa
iret
es
les
fucomi
push
and
mov
out
out
push
mov
aam
adc
lret
jle
adc
movsb
xchg
outsb
push
loope
mov
mov
fstpt
pushf
inc
out
cmp
insl
ja
cwtl
into
push
push
pushf
mov
jns
mov
xor
imul
jns
fstps
xchg
or
sub
inc
sub
insw
stc
inc
cmp
iret
mov
add
fbstp
jmp
lcall
out
mov
ret
arpl
mov
movsl
mov
cmp
fcoms
inc
mov
fwait
xor
insl
dec
shr
into
test
sahf
fwait
sbb
cmp
idivb
stos
inc
stc
das
pop
and
mov
mov
pop
pop
cmp
call
or
clc
push
push
ret
mov
jne
cmp
dec
imul
fistpl
push
dec
or
je
mov
jnp
loope
pop
int
pop
jo
and
dec
movsb
mov
pop
sbb
push
mull
xchg
adc
inc
cmp
adc
or
shlb
subb
and
or
jecxz
dec
pop
jns
jnp
push
or
xor
inc
out
xchg
push
mov
adc
aas
or
fstl
or
rcll
cmp
ja
sbb
cld
pop
loopne
into
fnstsw
lock
pop
push
frstor
xchg
testb
pop
push
add
idivl
jo
xlat
pop
sets
lret
out
jmp
into
icebp
sbb
repnz
lret
push
inc
mov
mov
std
clc
or
mov
neg
push
cmp
inc
fwait
data16
pop
cmp
mov
adc
in
pop
adc
lret
jmp
dec
clc
or
pop
das
add
cld
dec
sarb
add
sub
jae
xchg
add
and
or
mov
popf
pusha
jbe
sub
adc
mov
xor
cld
rolb
add
adc
popf
lret
shrb
xor
mov
iret
mov
pavgb
lea
lahf
inc
pop
cltd
enter
xchg
cmp
and
and
or
adc
cmp
lods
das
stos
adc
mov
cmp
lds
jl
ja
sbb
test
dec
jge
cmp
clc
mov
mov
movl
mov
xchg
mov
sub
inc
inc
js
add
mov
xor
xchg
aam
sub
cmp
test
mov
xchg
pop
movsl
pop
fimull
and
incb
mov
cld
in
xchg
mov
sti
rclb
fimull
cwtl
or
sub
fucomip
xchg
rolb
push
push
mov
repz
insl
xor
pop
insl
inc
clc
les
out
adc
aad
addr16
xor
push
mov
pop
out
mov
adc
pop
jne
xchg
inc
adc
call
sti
mov
cmpsl
fdivr
add
in
mov
jbe
scas
cli
pushf
push
xchg
mov
pop
cs
mov
jne
xchg
test
lret
in
xlat
xchg
add
mov
mov
push
add
dec
mov
aaa
lds
xchg
xchg
jo
inc
fcmove
dec
push
push
mov
add
lcall
dec
sbb
sarb
mov
mov
jae
stc
jecxz
cmp
sahf
mov
movsl
jbe
jle
aad
xlat
xor
call
mov
into
cmc
repz
or
and
jp
les
ret
call
cs
pop
pop
cmp
sub
jmp
mov
scas
cmc
ss
jp
mov
lahf
aam
test
adc
jo
mov
inc
dec
mov
push
or
dec
gs
in
fwait
xlat
insl
dec
mov
sbb
icebp
and
test
repnz
sarl
stos
ret
pop
add
lods
cmpsl
sbb
sbb
lods
mov
movsb
jle
and
xchg
and
cwtl
jne
push
inc
ja
push
jo
mov
xchg
fisttps
xchg
xchg
pushf
sahf
jae
rol
or
stos
shrl
inc
xchg
dec
mov
jne
push
inc
push
mov
fstpl
push
fwait
adc
mov
mov
dec
cltd
push
pop
daa
loope
push
andl
rol
negl
sub
hlt
inc
fistpll
insl
les
sarl
shrl
inc
das
pop
call
adc
xchg
mov
mov
rcrl
fwait
or
jae
idiv
out
stc
stc
jge
xor
xor
inc
test
jecxz
pop
mov
cs
pushf
xor
xlat
mov
xor
fisubrs
lret
data16
pop
jbe
repnz
mov
adc
ret
sbb
and
pop
addr16
cmp
fs
jmp
mov
mov
jns
sub
lcall
inc
mov
pop
xor
repz
pop
pop
jb
pop
negb
jb
mov
lahf
pop
lret
and
xor
fidivs
mov
inc
imul
mov
andl
scas
mov
shlb
das
outsl
jmp
pop
dec
lds
fwait
mov
pop
sub
xchg
cmpsb
scas
ror
fwait
sub
jp
adc
mov
movsl
sub
jo
rcl
dec
das
mov
push
lsl
xor
popa
jb
jp
lods
je
xchg
dec
das
pop
adc
andl
add
loop
mov
cli
into
stos
outsb
and
lahf
mov
nop
ds
test
mov
and
and
ret
cmovnp
add
pop
pop
ftst
dec
xchg
jo
push
or
aaa
mov
jns
ret
ja
shrl
dec
in
and
aad
daa
out
outsb
ds
mov
mov
outsl
push
adc
adc
mov
push
xor
add
lcall
cmp
sub
mov
and
lea
hlt
pushf
push
jns
mov
add
push
push
movsb
js
sub
cld
dec
and
sbb
or
inc
pop
dec
and
jne
test
pop
in
inc
dec
xchg
clc
ja
sti
cmpsb
dec
mov
mov
pop
or
les
push
lods
repnz
call
lahf
lds
movsb
sbb
jmp
xlat
stos
mov
iret
adc
ret
jns
sub
push
push
int
pop
fistps
arpl
xchg
mov
lret
imul
jb
or
dec
dec
and
sub
sub
xor
jb
dec
pusha
ds
push
push
cli
inc
add
push
cmpsb
xchg
push
dec
sub
sub
lret
add
pop
pop
jo
ret
sbb
mov
stos
push
iret
clc
add
lock
insl
mov
xor
xchg
xchg
and
popa
and
loop
lret
mov
cld
jns
mov
aas
xchg
dec
xchg
ss
dec
repz
cmp
dec
aam
jmp
outsb
sub
int3
mov
cmp
mov
push
add
cmc
xlat
mov
cmpb
push
shrb
mov
push
lret
jmp
mov
test
adc
popf
mov
movsb
or
mov
or
in
xchg
fstpl
sub
pop
bound
mov
dec
nop
xchg
or
jbe
dec
daa
sahf
mov
setg
test
cs
roll
dec
arpl
leave
xchg
jmp
mov
stos
dec
cmp
dec
and
dec
sub
add
fidivrs
lret
sub
icebp
mov
xlat
sub
in
adc
inc
fidivl
or
pop
jle
cs
aas
mov
adc
ret
int3
xor
fldcw
or
cmp
add
jmp
sub
shll
movsl
mov
sbb
jno
fwait
and
mov
mov
sub
add
jbe
push
test
sbb
test
ja
adcb
nop
jmp
pop
int
xchg
jne
jmp
movsb
insl
inc
test
cmp
into
imul
loope
dec
sub
nop
popa
jecxz
add
aas
sahf
leave
dec
lods
cwtl
mov
in
or
pop
in
das
je
imul
aad
insl
int3
jae
out
adc
or
sub
mov
aas
inc
push
aam
stos
xchg
sub
cltd
and
pop
xor
int3
adc
movsb
jge
sbb
loop
jge
pop
xchg
imul
push
cltd
cmc
push
enter
adc
arpl
psllq
inc
in
mov
movsb
cmc
and
xchg
gs
and
jp
and
xchg
filds
fidivl
add
cs
mov
xor
mov
lret
push
movl
xlat
dec
mov
ja
sar
push
into
push
cmpb
ss
jne
sub
int3
add
mov
adc
mov
out
xor
mov
adc
push
aas
clc
jbe
pop
and
sbbb
mov
outsl
out
mov
jo
into
jg
ljmp
inc
sub
in
xchg
adc
or
cmp
js
mov
sahf
or
sar
cmc
add
push
movsb
push
insl
inc
pop
adc
aam
push
mov
ret
cmp
inc
adc
movsl
inc
xchg
movsl
lods
shlb
nop
add
sarl
vcomiss
sub
push
into
gs
jb
mov
mov
test
iret
mov
xchg
jle
roll
call
sub
gs
adc
jo
scas
out
lret
xlat
fstpl
faddl
mov
andl
add
outsb
ret
ljmp
push
cltd
stc
sbb
sub
ret
cmp
dec
push
loopne
mov
out
mov
adc
jns
dec
sti
leave
cld
test
inc
scas
lea
inc
mov
push
adc
or
cmpsb
sub
xlat
and
sbb
push
out
mov
xchg
aad
call
inc
test
cltd
push
mov
ljmp
mov
pop
pushf
fisttpll
inc
xchg
cld
mov
inc
inc
std
shr
push
out
jg
fisubl
nopl
xchg
mov
push
push
fsubr
dec
je
test
out
xor
int
pop
lret
movsb
arpl
jae
pushf
pop
xchg
dec
gs
mov
lds
lds
sbb
jo
or
lods
dec
jge
jns
mov
sti
pop
push
pop
cmp
sarl
xor
inc
mov
call
icebp
jg
sti
lock
lcall
mov
jmp
scas
imul
pusha
scas
aaa
xor
fwait
inc
sti
pop
push
jecxz
fildll
dec
fsubl
sub
push
pop
cmpsl
andb
aas
adc
inc
lret
mov
push
lret
mov
pop
pop
adc
sahf
out
sub
fistpl
xchg
inc
std
xchg
jae
mov
inc
into
fcmovnu
out
outsb
ds
pop
or
and
push
aad
daa
xlat
jp
push
sahf
dec
sbb
popf
mov
ret
test
iret
into
push
fcmovb
mov
sbb
sbb
sub
xchg
jne
sbb
cmp
inc
rcll
test
setge
xor
add
jo
loop
and
cs
jb
out
cmp
cmpsl
push
je
cmp
insb
out
inc
jno
mov
mov
pop
push
cmp
inc
add
les
add
aam
xor
cmp
xor
mov
test
mov
lret
ss
mov
outsb
mov
addr16
icebp
mov
jno
lret
cwtl
les
out
int
jl
sub
pop
cmp
ret
rolb
inc
fdivr
adc
xor
imul
xor
push
dec
lods
lock
ss
jb
cmpsl
gs
mov
lock
push
and
lock
or
test
mov
outsb
mov
inc
pop
and
sbb
lcall
jp
ljmp
push
in
adc
loopne
insl
stos
push
int3
push
jmp
pop
xchg
test
lea
adc
jl
mov
jmp
inc
sub
jecxz
inc
sub
sub
sbb
imul
lock
rcll
or
cmpsl
mov
rorl
inc
mov
sub
not
je
ret
cmp
mov
jo
or
xor
jb
jnp
and
adc
xor
stos
cs
test
push
inc
jge
xchg
inc
clc
pop
jecxz
lods
subb
movsb
push
push
pop
fmuls
push
ja
mov
adc
push
stos
adcl
ds
push
cmp
pop
insl
in
pop
xor
sub
or
mov
cltd
xchg
fldcw
daa
mov
repnz
daa
pop
mov
dec
popa
xchg
adc
orb
sbbb
add
stc
xchg
xchg
mov
push
ds
or
inc
jecxz
sub
or
dec
xor
cmpsl
mov
subb
mov
inc
mov
cmc
imull
jae
push
sub
xchg
sbb
adcl
sbb
ss
loopne
cli
test
into
lds
aaa
sub
xor
mov
sbbb
ds
cmp
int
jno
loop
xchg
jecxz
inc
in
aam
jb
lret
imul
sti
in
fcompl
mov
sbb
negl
jno
lcall
cmp
dec
push
add
cwtl
lods
cmp
cmp
push
jmp
pop
mov
bound
int
ljmp
mov
mov
sub
sbb
int3
shrd
mov
pop
mov
adc
repnz
clc
and
adc
imul
xor
dec
cmp
into
xchg
repnz
push
sub
or
mov
or
into
test
jnp
imul
fnstsw
in
pop
dec
call
mov
negl
dec
sub
dec
leave
in
sub
sbb
iret
pop
xchg
pop
adc
call
dec
aad
sub
imul
jns
sub
into
xor
insl
push
mov
mov
add
lock
push
loop
jl
mov
cld
popl
mov
xlat
leave
push
jmp
adc
push
add
xor
add
fwait
daa
dec
cmp
jno
jns
and
push
jbe
xchg
pop
int3
push
ret
xchg
jne
sarb
lds
sub
mov
dec
adc
jbe
or
jg
inc
push
dec
insl
pop
xchg
jl
xor
insl
pop
sub
jae
mov
loopne
leave
test
jle
xlat
bound
js
mov
sbb
gs
push
shll
xchg
xor
mov
test
testl
inc
mov
fdivrl
add
adc
fs
call
aam
daa
jne
sbb
dec
sub
sub
fwait
out
out
or
es
pop
lods
mov
and
cmp
testl
xor
clc
ljmp
pop
sub
fiadds
sub
rorb
aaa
mov
adc
sbb
lods
out
xchg
adc
adc
or
std
xchg
aad
aam
dec
mov
testb
push
add
roll
arpl
sahf
aas
jb
push
mov
inc
push
ljmp
pop
cmp
mov
mov
sahf
popa
rsqrtps
add
inc
pop
jmp
cmp
xchg
je
inc
xchg
push
xchg
or
mov
adcl
out
jno
add
insl
adc
cmp
das
unpckhps
mov
das
lcall
aam
stos
lcall
sbb
mov
jmp
add
hlt
xor
js
push
cli
ret
sti
push
cmc
sahf
dec
adc
out
pop
add
sub
inc
pop
test
sub
ss
fnsave
int3
out
mov
or
icebp
in
mov
xor
add
aas
lret
cmpsb
es
inc
cli
cltd
fdivl
sub
lods
xor
aam
mov
mov
dec
jb
mov
pop
xchg
mov
adc
push
rolb
xor
pop
adc
fsub
push
sub
test
xchg
pusha
xchg
add
aam
pop
add
push
xchg
push
dec
cld
sub
aad
stos
pop
stos
mov
dec
ret
mov
mov
int
ljmp
mov
sti
int
pop
mov
add
mov
mov
outsl
inc
push
mov
sub
popa
sub
aam
icebp
mov
mov
sub
jnp
push
sub
nop
fisubrs
sbb
in
dec
pop
xchg
mov
ficompl
mov
icebp
stos
dec
in
sbb
xchg
push
add
pop
pop
mov
jne
sub
mov
jle
adc
jns
test
subb
or
fnstcw
iret
arpl
inc
mov
shlb
pop
pop
ds
or
push
sbb
mov
xchg
push
imul
cli
aam
push
pmaddwd
dec
lods
and
jbe
arpl
ljmp
lea
mov
xchg
cmp
lahf
popa
jmp
and
or
adc
ja
imul
sarl
mov
fdivrl
scas
push
push
outsb
stos
pop
adc
mov
mov
pop
and
and
sbb
sbb
mov
add
dec
jne
mov
xlat
sbb
aaa
cltd
mov
stos
mov
out
rcl
lock
lahf
jge
gs
pop
push
cmpb
loop
sbb
xlat
jle
test
movsl
pop
add
mov
cmc
jbe
call
mov
dec
stos
mov
add
cmp
inc
xor
jecxz
repz
sti
add
cmp
test
or
inc
hlt
loope
pusha
sub
xlat
push
scas
mov
xchg
daa
mov
imul
movsb
movl
and
inc
push
into
ret
and
cmpsl
insl
ja
mov
push
test
ficoml
push
or
mov
aam
icebp
fidivrl
insl
adc
imul
fwait
jle
outsl
loope
sbb
fs
pop
add
xchg
adc
dec
in
loopne
pop
sbb
ss
dec
xchg
xchg
adc
stos
inc
loopne
xchg
inc
lret
cmpsb
inc
cmp
cli
sub
jl
or
xor
inc
mov
adc
jle
inc
jmp
dec
fwait
cmc
into
lds
pop
sub
mov
dec
dec
fisubs
in
mov
mov
and
inc
push
rolb
mov
inc
scas
data16
rcll
pop
or
and
inc
dec
pusha
push
add
and
arpl
pop
mov
cmp
jecxz
lret
and
movsb
push
jmp
fsubp
inc
jp
push
mov
lock
sbb
mov
pop
xlat
in
cmovb
mov
mov
orb
cmp
in
xchg
adc
mov
andl
fdivr
inc
popa
enter
mov
sbb
hlt
dec
outsl
jle
add
mov
add
mov
fstpl
add
ret
loop
xchg
adcb
cld
push
jnp
or
movsl
mov
xor
adc
xchg
mov
ss
xlat
fucomip
push
aam
ljmp
mov
xor
addr16
pop
xchg
inc
shrl
push
in
outsb
fildl
xor
mov
int
push
push
pop
xchg
repz
jge
xor
sub
lahf
sbb
cwtl
adcb
cs
pushf
mov
and
adc
aad
ja
xor
mov
adc
sbbb
adc
cld
mov
call
hlt
xchg
fwait
addr16
fcmove
aad
cwtl
sarl
insl
repnz
mov
rcrl
lcall
mov
sbb
jmp
jbe
jmp
sti
out
stc
xchg
int
mov
jno
adc
dec
lcall
loope
sub
and
out
lret
inc
xor
cmp
loopne
adc
rcrb
push
cli
outsb
mov
scas
movsb
pop
mov
cmp
push
movsb
ret
push
cmpb
negb
out
mov
insb
dec
cmp
lahf
adc
movsl
mov
push
lahf
push
mov
mov
imul
adc
xchg
pusha
in
pushf
leave
loopne
inc
adcb
addr16
dec
bound
movsb
xchg
sub
notl
jb
pop
sbb
pop
cmp
repnz
repz
sti
sbb
or
and
adc
add
cmp
pushf
in
vpmacssww
daa
push
ret
mov
scas
dec
adc
inc
outsl
pop
lock
lods
sbb
mov
test
gs
jmp
shlb
or
cmp
mov
xchg
mov
ja
test
lahf
stos
into
fcomip
inc
sti
jge
unpcklps
lcall
xchg
jne
shrb
adc
xchg
xor
lods
jns
jmp
jo
push
sub
or
imul
cs
hlt
lods
clc
sub
mov
scas
call
popl
xor
xchg
arpl
jg
inc
or
fldl
cli
sbb
rcrb
add
jo
pop
lret
xor
das
push
xchg
inc
and
mov
fs
and
and
xchg
pop
and
int3
fsubrl
js
gs
mov
orl
shl
adc
movsb
orb
cwtl
pop
fbstp
bswap
mov
push
insl
sub
jp
insl
sub
popf
mov
ret
cli
cmp
fisttps
xor
sbb
and
mov
lea
mov
insl
inc
add
or
mov
mov
out
or
int
sub
cmp
movsl
xor
daa
jns
div
repz
jne
in
push
out
jle
insl
pop
dec
aad
jnp
repz
cmp
pop
adc
cmpsl
xchg
push
xchg
adc
rorl
das
mov
jb
incl
jmp
xchg
subb
je
add
or
push
inc
mov
inc
jbe
daa
gs
pop
cwtl
addr16
pop
insb
and
or
xor
negl
jns
dec
mov
sbb
mov
test
xor
lcall
jle
adc
add
lret
xor
adc
cmp
jno
add
daa
pop
sbb
mov
ds
pop
cmp
xchg
test
mov
or
adc
stos
mov
dec
mov
jle
ljmp
and
movsb
lds
push
jg
xchg
loope
cmp
sub
add
aad
js
pushf
ljmp
popf
mov
decl
pop
popa
test
gs
push
arpl
and
push
xor
insb
mov
add
xchg
jbe
xor
sub
lea
divl
mov
mull
sbb
push
jnp
push
movzbl
jmp
cwtl
mov
inc
sub
clc
sti
testl
or
ror
lcall
shl
mov
decb
addr16
xchg
push
sub
movsl
dec
or
ss
push
xchg
stc
add
outsb
popf
pushf
mov
movsb
xchg
xlat
cli
dec
mov
imulb
sbb
xchg
mov
mov
adc
shrl
xor
push
add
ror
xor
sub
in
or
add
stc
rclb
aam
fstpl
aam
push
jbe
cld
dec
rcrb
mov
mov
adcb
lea
jl
mov
sub
mov
call
jo
jnp
js
and
or
and
scas
dec
mov
scas
mul
ds
jle
stc
push
xchg
cli
or
sub
inc
push
lea
pop
repnz
mov
jno
sbb
loopne
lcall
dec
jecxz
jb
in
sbb
or
dec
and
stos
mov
and
clc
ret
fstps
jmpw
xor
sub
push
pop
and
and
xor
sub
xchg
dec
sub
fidivrs
xchg
or
daa
push
out
fsubrs
xor
push
sub
mov
and
lret
xor
cli
shlb
fdivp
in
inc
aas
enter
notb
cmpsl
sbb
adc
pop
ljmp
mov
lret
push
jmp
adc
rcrb
addl
sarl
adc
sbb
sub
mov
mov
sub
adc
fdivs
push
jnp
mov
mov
js
inc
cmp
cmpb
pop
push
or
or
arpl
lahf
or
push
fwait
mov
mov
lahf
popf
sub
jns
push
mov
mov
xlat
decl
clc
cld
pop
xlat
std
mov
push
add
test
sbb
cmp
inc
loop
mov
push
aad
aam
in
cmpsl
cwtl
inc
mov
ljmp
orl
test
pop
push
in
dec
cmp
gs
or
clc
push
cs
pop
sub
cmp
sub
cvtdq2ps
ret
dec
pop
data16
cld
pop
icebp
stc
nop
jecxz
lock
in
xor
jns
sbb
popf
or
cmpsl
lret
mov
scas
pop
pop
fisttps
inc
enter
push
scas
mov
push
xchg
imul
ja
ja
ret
cld
loop
and
mov
push
pop
movsb
mov
inc
leave
sbb
aas
lahf
push
sbb
sub
data16
int3
xor
pushf
subb
jno
hlt
js
cmp
outsb
or
xchg
add
or
mov
enter
scas
or
xchg
neg
movzbl
enter
push
push
sti
hlt
int3
pop
or
mov
les
filds
add
cmp
cmp
rorb
xor
and
mov
cld
mov
ljmp
xor
lcall
jmp
and
xor
xchg
inc
pop
cmp
jmp
add
pop
jne
ljmp
mov
rcr
repnz
aaa
ljmp
and
pop
inc
and
xchg
sbb
push
jae
mov
aam
into
ret
out
mov
data16
movsb
test
mov
cmp
rclb
loop
and
sub
pop
jle
jno
shll
cmp
mov
push
or
ja
push
sbb
dec
int
sub
adc
daa
hlt
out
mov
or
outsl
mov
icebp
mov
fists
mov
std
arpl
sti
shrl
jbe
shll
push
mov
fwait
sbbb
push
das
mov
cmpsl
pop
cmp
jo
add
aaa
jge
mov
jmp
sti
xchg
pusha
mov
mov
test
movsb
jo
pop
mov
push
or
mov
roll
mov
in
data16
cwtl
and
outsl
lahf
pop
sub
cmp
xchg
mov
and
xor
lcall
mov
into
addr16
jp
xchg
cltd
packsswb
inc
or
pslld
dec
cmp
lods
sahf
sbb
pop
popf
jmp
push
inc
lock
ljmp
or
lods
in
cmp
iret
dec
sahf
stc
hlt
mov
jg
jo
push
or
leave
sbb
lds
cs
call
xchg
cmp
jg
test
out
fcoml
mov
iret
jecxz
pushf
sbb
push
in
adc
loopne
pusha
je
mov
push
add
stos
pop
icebp
cli
mov
push
sbb
xor
xchg
mov
in
xchg
xor
xor
cmp
call
inc
into
xchg
test
cmc
test
fs
sbb
and
mov
scas
mov
into
and
inc
scas
pop
and
sbb
out
dec
bound
fcompl
and
mov
pop
in
sub
fstpt
popa
inc
jbe
lock
std
mov
dec
mov
pop
lock
mov
js
mov
mov
mov
test
mov
add
not
cmpb
insl
testl
call
mov
fstl
and
sub
inc
pushf
adc
mov
shlb
jno
add
pop
add
test
pop
sub
daa
jae
mov
insl
ljmp
pop
jge
inc
std
jno
mov
inc
mov
call
and
dec
in
xchg
adc
sub
ret
mov
inc
test
in
pop
popf
pop
scas
das
fbld
mov
insb
imul
test
inc
mov
in
mov
cmc
ror
mov
stos
push
add
mov
push
aas
aam
jle
adc
mov
jb
push
pop
lea
xor
sti
aad
js
out
jmp
jnp
jg
icebp
out
out
push
pop
sarb
imul
cmp
jne
xchg
fwait
sbb
incl
and
out
mov
dec
lret
lret
mov
lcall
push
xchg
dec
xchg
mov
add
repnz
rcrb
add
inc
cmp
cmp
cmp
aad
mov
test
lea
gs
pop
cli
push
mov
cs
inc
cmp
lock
jmp
xchg
mov
out
mov
fucom
movsb
aaa
mov
xchg
cmp
sbb
jge
nop
jmp
mov
sbb
shll
ret
mov
mov
mov
fwait
jge
cld
adcb
ret
push
and
cmp
ljmp
jge
xlat
mov
and
jecxz
gs
cwtl
in
xor
sub
shlb
cld
shl
push
push
xor
mov
or
dec
hlt
xor
inc
sub
mov
lods
mov
clc
nop
cmpsl
arpl
fdivs
mov
fildll
inc
cmpsb
fcoml
xorl
jae
mov
inc
add
sbb
mov
xor
adc
sbb
or
adcb
pop
bound
xor
test
dec
mov
cli
cli
xchg
or
mov
out
inc
idivl
aas
mov
cmpsl
mov
hlt
mov
inc
inc
add
dec
cli
ffree
roll
in
lret
gs
and
sbb
push
sbb
xchg
addb
test
incb
push
lea
pop
lcall
iret
mov
into
jge
mov
push
mov
ds
subb
mov
and
fcoml
xchg
cmp
push
mov
lods
sti
out
rcr
ljmp
adc
lea
xor
mov
fcoml
jno
or
adc
xor
aad
dec
lret
adc
xchg
leave
adc
or
into
mov
dec
repz
mov
dec
stc
xchg
or
out
sub
push
mov
ljmp
daa
adc
inc
inc
ret
cmpb
cmp
cmc
dec
mov
fsts
push
or
mov
push
push
testb
mov
mov
ret
cmpsl
push
lea
push
roll
das
clc
jne
jmp
mov
xor
mov
iret
enter
repz
mov
add
xchg
aam
sub
aas
mov
aam
or
or
addl
test
push
mov
push
aam
sub
mov
jge
mov
or
push
push
pop
cs
jge
pop
inc
fwait
insl
xchg
dec
in
int3
dec
sbb
push
insl
data16
stos
mov
insb
lret
adc
bound
mov
lret
ret
jecxz
nop
mov
dec
clc
xchg
lret
jb
xor
rorl
xor
lret
adc
jno
push
sub
pop
insl
jno
jmp
aaa
cmp
lcall
ret
jae
cwtl
daa
cltd
mov
push
push
subl
ss
icebp
data16
dec
jecxz
shll
mov
jp
faddp
or
jecxz
sbb
and
or
ljmp
xor
in
nop
jb
in
stos
pop
scas
pop
pushf
or
ja
pusha
sbbb
divl
sbb
mov
scas
cld
mov
push
popf
loop
imulb
adc
mov
sahf
ljmp
push
mov
push
cmp
int
cmpsl
mov
aaa
sub
push
je
xchg
les
jmp
fldt
in
aas
arpl
push
jb
sub
xor
xor
in
loop
out
mov
fadds
mov
lcall
ljmp
rorl
nop
fs
mov
jmp
ret
divb
out
lock
mov
icebp
dec
in
sub
pop
cli
push
push
divb
fisubrl
fsubr
jmp
addr16
cmp
orl
addr16
jb
cmp
sub
dec
adc
addr16
cmc
xchg
xchg
in
jbe
cmp
popf
add
and
test
pop
push
hlt
push
arpl
repz
sub
cmpsb
jae
cltd
pop
dec
orb
scas
mov
movnti
dec
loopne
shll
xchg
imul
sarb
pushf
jecxz
jae
dec
sub
adc
push
aas
xchg
movsl
fxch
loop
fnsave
adc
inc
fdivrs
adc
xchg
xchg
mov
clc
hlt
sti
inc
shrb
cmp
jge
mov
mov
and
mov
shlb
cmp
test
jbe
and
in
sbb
test
xor
dec
popf
popf
pop
mov
dec
adcb
insl
jl
push
sarl
mov
imul
repz
shll
xor
cmp
jo
mov
and
aas
or
mov
sbb
add
sahf
push
sub
mov
movsb
sbb
mov
lock
xchg
add
push
mov
lods
jecxz
fs
shll
push
jno
xor
rclb
xlat
out
pushf
pop
in
lods
ja
pop
inc
xchg
movsb
imul
xchg
pop
jg
or
and
cli
mov
sbb
jecxz
mov
les
js
pop
sbb
sbb
xor
lods
popf
cmp
js
adc
aam
and
adc
jmp
xor
in
inc
iret
push
scas
jmp
adc
mov
push
or
in
adc
dec
stos
and
ret
sti
in
mov
jmp
in
pop
mov
push
jecxz
add
inc
adc
jbe
cwtl
test
imul
in
and
insb
push
bound
jae
push
mov
movsl
loope
mov
xchg
jecxz
stos
rorl
lahf
adc
mov
imul
inc
cltd
mov
adc
adc
adc
lret
repz
stc
testb
out
xor
pop
xor
lods
imul
out
xchg
sub
aad
mov
or
mov
outsb
cs
pop
adc
or
mov
and
xor
int
jecxz
pop
pop
jp
mov
mov
aad
popl
addr16
fdivrp
outsl
push
jo
lock
das
movsb
mov
mov
outsl
push
jecxz
in
fnstenv
test
icebp
push
add
arpl
inc
adc
data16
mov
push
jle
sbb
jp
fdivrl
jmp
out
adc
adc
cmpsb
xchg
outsl
scas
lcall
mov
push
cmp
clc
sbb
xor
cmp
mov
fiaddl
mov
mov
mov
shl
adc
jo
mov
sub
sub
data16
mov
fstps
pop
shll
inc
xor
ds
pop
ja
mov
ret
jbe
or
hlt
hlt
inc
pop
dec
icebp
and
push
sbb
sub
aam
arpl
or
ss
xor
mov
xchg
mov
test
cltd
xorb
xchg
jb
std
divl
sbb
jns
xchg
jne
rclb
inc
jecxz
repnz
lea
scas
sbb
mov
mov
cmp
pop
lahf
sarb
aam
aam
sbb
push
bound
lret
imul
push
arpl
mov
fdivs
ja
in
sub
or
inc
lret
xor
frstor
addb
loope
sbb
push
pop
sbb
sub
xor
inc
cs
mov
cld
bound
dec
lcall
mov
fisubs
jb
mov
pushf
and
push
arpl
repnz
inc
inc
ret
outsb
pop
test
pop
xchg
pop
jl
cli
cmpsb
test
sar
cmp
push
sbb
out
test
jecxz
push
inc
pop
pop
mov
sbb
mov
push
fisubl
sub
test
fisttpl
aaa
mov
je
pushf
jge
es
push
test
push
cmp
rcrb
lea
cwtl
leave
mov
jg
cmc
sub
dec
adc
fiaddl
push
rol
sarl
cwtl
or
ja
and
int3
fisttpll
lcall
adc
bound
xchg
aam
and
or
mov
push
xchg
mov
xchg
pop
and
fsubrp
inc
jl
inc
jecxz
loopne
dec
fs
mov
jp
inc
fcom
pop
pop
push
or
cmpsb
jge
test
jnp
inc
jno
ret
xor
cli
inc
call
das
addr16
data16
bound
in
int
mov
adc
xchg
jg
cld
xchg
cld
mov
sub
hlt
and
insb
cmpsl
xchg
scas
xchg
hlt
inc
mov
fildl
les
pop
jmp
std
pop
into
je
xlat
and
popa
sub
xor
cmp
push
lock
push
out
xchg
in
mov
push
cmp
paddw
cmp
sub
push
pusha
sub
mov
jb
sub
push
les
jg
rol
test
mov
lods
xchg
dec
mov
testl
sbb
mov
icebp
iret
adc
test
pop
in
shll
inc
and
loopne
int
xchg
sbb
push
std
into
push
cmp
rcr
aas
pop
jb
mov
jbe
xor
cmpsl
je
xor
cmp
xchg
or
lds
repnz
rcll
push
cli
add
ret
int
scas
pusha
adc
adc
xchg
dec
lcall
bound
mov
fcmovne
mov
or
or
or
lds
or
mov
or
push
dec
sarl
hlt
mov
frstor
mov
xchg
sub
icebp
jb
pop
adc
dec
fcmove
push
push
mov
inc
leave
ds
sbbb
sbb
dec
dec
adc
jae
xor
sub
cmp
mov
pop
adc
cltd
movsb
mov
add
and
sbb
xlat
das
sub
jns
and
jae
outsl
in
movsl
out
mov
mov
fistpl
xlat
mov
mov
push
fs
sti
cli
sti
call
repnz
xchg
xor
jg
aam
or
dec
outsb
jl
lea
in
sbb
add
mov
fmul
sbb
les
out
push
je
mov
jmp
repz
mov
inc
dec
leave
jno
or
and
outsb
xor
outsb
arpl
cmp
pop
and
stos
inc
scas
cmp
cld
mov
add
cmpsl
cmp
lret
stos
push
inc
dec
into
int3
sbb
lea
cld
push
xchg
inc
add
inc
push
mov
jecxz
cmp
mov
sub
xor
add
andl
pop
out
add
fnstsw
imul
jne
jb
mov
jecxz
out
and
mov
insb
sbb
out
popf
sbb
stos
ss
cmpsb
cmpsl
pop
push
stos
decl
mov
imul
add
pop
xlat
push
push
mov
lds
adc
divl
add
and
sbb
negb
jmp
cmp
or
cmp
outsl
lret
or
call
pushf
and
ret
pushf
cmc
lods
and
mov
sub
inc
pop
cli
xor
out
movsb
cmp
dec
sub
sub
inc
ficompl
bound
dec
leave
sub
call
gs
jmp
sbb
pop
sarl
bound
out
test
jb
loopne
sahf
sub
or
ret
mov
mov
cld
outsb
fdivrl
dec
sbb
mov
js
mov
lret
addl
testw
mov
in
sub
push
push
insb
sbb
cmp
xor
xchg
cmp
mov
je
mov
pop
and
cmp
mov
jnp
mov
fimull
pop
xchg
xchg
mov
fadd
add
adc
sub
sti
push
les
xchg
rclb
push
and
mov
in
sbb
add
ret
roll
push
imul
bound
into
push
scas
arpl
aas
mov
pop
adc
mov
pop
ret
inc
stos
inc
iret
jns
movsb
gs
cmp
mov
mov
and
hlt
shll
shll
test
icebp
pop
inc
fnstenv
repnz
and
pop
mov
in
and
fiadds
push
es
adc
in
in
add
inc
and
jmp
push
iret
xor
sbb
inc
add
rcr
jnp
xor
cmp
call
xchg
sti
test
mov
jbe
test
popf
test
scas
in
add
push
fcmovu
and
xchg
fwait
fwait
pop
lret
jo
mov
mov
cmp
pop
pop
jg
rorb
nop
jbe
add
jns
pop
loope
or
faddp
movsl
and
jg
sbb
xor
mov
sub
adc
mov
repz
ficoml
bound
sbb
fwait
push
push
int3
xchg
pushf
call
pop
cmp
scas
pop
jae
xchg
das
inc
cld
or
jnp
cwtl
outsb
xchg
fsubrp
mov
mov
and
call
mov
daa
adc
and
pop
xor
push
je
dec
repnz
imul
icebp
dec
mov
ljmp
ja
pop
sbb
sub
push
xor
and
sbb
popa
movsl
scas
mov
push
lea
enter
das
dec
shlw
jbe
lods
cmpsl
and
outsl
inc
iret
or
std
mov
mov
xchg
xor
in
xchg
inc
cld
sub
mov
cs
int3
jb
lock
mov
arpl
cld
movsb
lahf
sbb
cmp
lock
and
xchg
xchg
inc
cmp
call
inc
or
fbstp
fcmovbe
test
mov
daa
ljmp
dec
jle
push
lret
dec
popa
pop
cmp
movsb
pushf
aas
scas
cmp
mov
in
or
pop
test
das
jecxz
lock
sbb
inc
and
push
outsb
inc
dec
dec
fwait
vpshab
push
mov
addl
sti
cli
lcall
aam
xchg
push
mov
lcall
rolb
adc
mov
lret
dec
imul
inc
lahf
xchg
dec
xor
jb
sbb
sub
std
jecxz
sarb
idivl
mov
inc
sbb
cmp
int
inc
arpl
push
pushf
cmc
inc
and
lds
xchg
out
cmovnp
xchg
push
jl
insb
mov
pop
inc
lahf
sub
ja
bound
and
call
mov
cmp
mov
fstpl
and
ds
jno
jae
cmp
lahf
mov
dec
push
inc
shlb
lret
sub
cld
fs
jb
mov
push
out
mov
or
out
sub
stos
cmpsb
cmp
xchg
into
xchg
gs
shlb
sub
icebp
or
pushf
iret
clc
and
mov
inc
inc
adc
jne
xor
daa
and
adc
lds
dec
je
fidivl
cmc
movsl
sarb
mov
ds
das
jne
orb
sbb
out
lret
in
adc
clc
pop
cmp
jns
sarl
mov
mov
lds
inc
mov
stc
insl
shll
jbe
shld
cmp
and
ret
jns
ljmp
cmpxchg
out
jae
hlt
ret
insl
pop
fidivrs
mov
adc
inc
lahf
xchg
aam
andb
incb
and
into
shll
sub
in
decb
xor
pop
xor
jge
jae
test
out
jb
ljmp
dec
or
or
dec
callw
and
cltd
push
pop
or
jns
inc
bound
rcrb
pusha
pop
orb
sahf
sbb
int3
clc
or
ret
sub
xor
mov
das
mov
fistps
cmp
sahf
xor
sbb
xor
xor
sbb
lock
lahf
push
mov
push
inc
xorl
loope
ja
pop
loopne
lret
cs
mov
nop
loope
jne
cs
xchg
xchg
inc
scas
lods
sti
dec
fsts
adc
mov
xchg
pushfw
jb
in
rcrb
or
fmuls
add
pop
faddl
add
movsl
adc
pop
shr
sbb
ss
clc
mov
movsb
divb
fadds
lds
repz
xchg
and
sbb
inc
fldenv
ret
lock
das
cltd
and
pushf
cmp
pop
insb
sbb
or
inc
addr16
std
or
or
cmp
dec
lcall
jle
fsubl
push
movsb
scas
and
in
jp
fisubl
xchg
nop
lea
pushf
aad
sbb
arpl
in
dec
mov
hlt
les
out
ret
iret
and
fwait
jbe
stos
pop
pop
mov
mov
jbe
sub
fimuls
xchg
mov
movl
cmpsl
dec
mov
lods
jecxz
test
test
add
jl
cmp
enter
pop
repz
lahf
stos
test
add
lahf
mov
dec
and
add
movsl
jo
in
mov
pop
jecxz
xor
out
movsl
out
dec
jae
fimull
mov
xchg
mov
test
xchg
add
dec
and
shlb
xor
hlt
xor
or
and
sub
aam
xor
inc
mov
inc
jmp
orl
xorl
and
int
xchg
cmp
push
jns
fbstp
ljmp
mov
add
mov
dec
pop
notl
rcrb
inc
or
sub
pop
xor
mov
subb
pop
push
sbb
mov
sub
std
andl
data16
xchg
ret
fsubrs
cmpsb
scas
and
mov
aad
add
insb
sarb
adc
push
push
cmp
sbb
insb
jecxz
mov
mov
les
repz
adc
sub
inc
dec
xchg
or
fucomp
jo
push
cmp
sbb
mov
dec
shlb
mov
and
insl
xor
cmc
xchg
pop
in
arpl
xlat
mov
mov
mov
addw
jae
lock
imul
dec
pop
sbb
fmuls
jo
pop
cwtl
das
adc
test
outsb
xchg
fdivs
xchg
or
xor
outsb
inc
fsubp
aad
pop
push
lods
lods
lds
mov
cli
mov
sbb
xchg
mov
push
dec
cli
jp
ret
push
push
ret
pop
adc
adc
dec
leave
hlt
mov
addr16
in
inc
jbe
xor
jo
sbb
inc
and
dec
inc
movsb
mov
jp
jge
jns
adc
jg
pop
or
gs
rcl
adc
cwtl
addr16
push
iret
shl
push
and
imul
and
insb
jecxz
out
loope
or
cmp
or
hlt
dec
and
push
inc
inc
mov
dec
pop
and
dec
pop
sub
aad
xor
inc
add
pushf
repnz
jp
ret
pushf
mov
mov
and
ljmp
scas
push
sahf
jae
imul
fidivrl
sub
es
imul
push
roll
cmp
pushaw
xchg
and
lea
jmp
jl
cmp
sbb
cmp
dec
repz
jno
fldenv
enter
cmp
push
mov
inc
cmp
mov
push
jae
shrd
hlt
add
or
adc
jo,pn
add
jbe
shlb
inc
cli
int3
lds
or
jae
and
pop
loope
pop
loope
out
addr16
mov
jae
fsubl
cmpsb
pop
xchg
push
mov
ja
enter
dec
stos
sahf
inc
insb
imul
xlat
cmp
subb
je
jmp
mov
rcrl
cltd
mov
push
xchg
hlt
sbb
or
cld
imul
movsl
in
jb
ljmp
enter
inc
lock
ret
adc
jg
ja
xchg
into
add
xorb
insl
xor
popa
test
mov
mov
dec
or
cmp
cmp
and
cli
mulb
inc
add
xor
cmc
mov
push
mov
lock
ret
add
rcll
xor
and
inc
lock
shrl
or
jae
jmp
xor
fbstp
ret
sbb
clc
dec
test
lahf
addr16
rsm
xchg
orl
or
mov
lcall
popf
and
cmc
movsb
pop
int
scas
xchg
jo
jp
cmp
stc
mov
mov
js
mov
push
xchg
mov
lea
subb
pushf
sti
xchg
mov
mov
ds
add
mov
inc
lret
inc
iret
add
pop
ficompl
pop
and
xor
sbb
sbb
mov
or
pusha
jg
xchg
mov
inc
hlt
cmp
adc
push
inc
in
inc
hlt
lret
rorb
pop
mov
std
mov
scas
sub
fwait
daa
sub
mov
ret
mov
and
cmp
mov
mov
pop
out
dec
mov
jmp
out
or
xor
loopne
xor
adc
push
lret
mov
pop
lods
les
sub
test
daa
into
sub
fdivp
xor
dec
jae
insb
pop
addr16
mov
addr16
push
das
push
data16
sbb
insl
insl
cld
jl
add
pop
fdivrp
xchg
mov
ret
adc
mov
add
ja
mov
and
in
test
adc
sbb
sahf
out
loopne
sub
xchg
push
cltd
push
addr16
enter
cmp
shlb
lods
fisttps
jnp
cmp
push
cmpl
mov
dec
xchg
mov
mov
xchg
test
andl
jl
jne
repnz
insb
das
in
jge
pop
fidivs
sbb
shlb
jnp
jmp
sbb
or
out
fsub
sub
fwait
cmp
xor
mov
and
lcall
and
cmpsl
dec
clc
pop
inc
ja
jne
orps
fmuls
mov
mov
or
mov
fdivl
addl
inc
mov
sar
push
sarl
push
int3
ror
scas
mov
outsl
cld
xor
repnz
pop
pushl
push
out
mov
xor
mov
jns
in
popf
outsl
pop
push
lds
ret
add
dec
ret
bound
lods
pushf
dec
fwait
sub
shl
inc
arpl
xor
test
dec
jl
sbb
ffreep
loop
loopne
adc
inc
test
iret
pop
jecxz
xlat
or
mov
fsubs
movsl
xor
mov
cmp
repz
cli
and
add
aas
xchg
cltd
call
dec
dec
adc
add
lahf
mov
cli
push
inc
nop
dec
sbb
mov
jne
lds
sbb
jo
aas
mov
mov
pop
mov
les
push
xchg
ss
sub
inc
iret
enter
push
or
or
and
cmpsl
nop
mov
adcb
insl
push
cmp
xchg
xchg
popf
sub
cmp
loop
xor
adc
loopne
roll
fmul
add
mov
jmp
jmp
sub
bound
mov
pusha
aaa
ds
js
jne
je,pn
or
jne
xchg
inc
pop
sbb
jp
adc
ljmp
sbb
pop
rcrb
insl
xor
push
cs
popf
add
adcb
or
mov
fldenv
or
or
fsubs
add
push
xorb
repnz
mov
outsb
jne
cld
mov
jae
and
or
dec
add
loope
cmpsb
imul
sub
out
lret
inc
outsl
movsb
cmpsb
dec
mov
sbb
stos
jo
das
mov
into
mov
ljmp
pop
pop
inc
jb
rol
shl
fistps
fcoms
arpl
and
mov
mov
add
scas
outsb
jne
aad
mov
popf
js
mov
addr16
sub
push
sahf
sbb
dec
mul
fisttps
insb
lea
in
dec
loopne
in
pop
xchg
sahf
mov
add
adc
mov
fcmovnb
push
dec
in
adc
lahf
mov
sbb
cmp
sbb
cmp
std
fiaddl
arpl
mov
cwtl
sub
enter
jne
and
decb
inc
inc
pop
mov
mov
mov
fiaddl
xor
int
popf
xchg
cwtl
mov
adc
jb
hlt
jno
addr16
std
lahf
lret
mov
cmp
dec
inc
dec
mov
sub
push
sbb
cmc
out
pop
cmp
adc
mov
pop
imul
mov
mov
mov
pop
outsl
sub
stos
dec
sbb
and
sbb
test
jae
fmull
pop
cld
pop
mov
push
addr16
jns
nop
add
pop
push
out
out
xchg
clc
mov
imul
les
cmc
xor
in
shll
push
ss
push
push
rolb
imul
scas
xchg
push
mov
pop
dec
mov
push
sub
cmp
adc
dec
addr16
int3
pop
pop
push
adc
jae
out
fcoml
mov
jae
fxch
mov
and
mov
add
jle
lock
dec
inc
mov
inc
pop
mov
mov
mov
mov
sar
xor
popa
inc
not
divl
dec
mov
mov
nop
xchg
test
sahf
cmp
loop
es
mov
cmp
roll
ljmp
inc
shl
aam
cwtl
popaw
jmp
and
fisubrs
jnp
loope
popa
rol
das
or
insl
push
out
sub
xor
push
mov
inc
xor
jge
cmp
dec
push
and
mov
mov
xchg
add
movsl
ficomps
mov
pop
scas
insl
dec
loop
push
or
mov
mov
lcall
inc
sub
dec
xor
nop
outsl
sbb
ja
repz
fstpl
movsb
push
mov
sbb
stos
sbb
testb
mov
xchg
cs
mov
or
mov
jb
ja
cmp
xlat
idivb
jle
mov
imul
in
rcll
mov
jb
and
cmp
out
jae
adc
out
jmp
les
mov
cld
push
dec
out
test
cmpsl
lea
int
pop
mov
push
lahf
std
cld
push
fdivl
out
add
lret
jp
lahf
inc
je
lock
es
sarl
js
in
cmp
and
ss
push
pop
sub
adc
or
add
cmc
in
mov
inc
cmc
dec
ret
aam
stc
pop
movsb
add
and
xor
lret
xor
jl
xchg
mov
lcall
mov
gs
popf
xchg
push
mov
jge
mov
les
fscale
jle
adc
mov
xor
xchg
xchg
sbb
aaa
das
jmp
andb
ss
inc
stc
imull
xchg
loope
addl
imul
pop
cmp
adc
inc
xor
mov
ljmp
or
mov
adc
pop
imul
push
cmp
out
xor
sti
js
in
mov
mov
jl
imul
imul
ror
pop
push
or
out
adc
add
mov
sbb
xor
ret
mov
mov
push
pop
mov
pop
test
push
jns
test
mov
dec
leave
mov
inc
pop
pushf
cmpsl
cmp
repnz
bound
fistpll
push
xor
mov
or
jne
add
lea
dec
mov
mov
pusha
rclb
xchg
cmpsl
dec
mov
jl
dec
sbb
xorl
jge
add
movsl
jge
mov
pop
jp
add
mov
push
clc
lods
call
xorb
into
arpl
mov
jnp
add
ja
in
xchg
xchg
xlat
mov
and
pusha
fdivl
add
fadds
insl
jle
sub
sbb
sub
cmp
add
lods
push
xlat
shll
lret
sub
jb
shlb
or
xor
fs
xchg
in
mov
inc
loopne
rol
and
sti
pop
mov
push
cwtl
clc
cmp
stc
jge
stos
jns
or
jp
adc
pop
pop
adc
push
cwtl
cmpsb
mov
inc
lds
lcall
xchg
xor
mov
testb
add
pop
pop
inc
aaa
pop
mov
in
xor
mov
or
and
xorl
shl
mov
mov
xor
add
inc
jge
push
and
mov
jmp
cmpsb
adc
fildll
leave
and
mov
mov
jl
xchg
hlt
loop
cmp
popa
pop
mov
or
and
or
ret
sub
jp
push
dec
xchg
fs
pop
cli
sbb
inc
outsl
sub
and
movsb
and
pop
sbb
test
je
sub
repz
cmpsl
mov
aam
xchg
push
inc
leave
test
lahf
xchg
out
jne
adc
shlb
rcll
insl
in
add
dec
cmp
ja
mov
dec
mov
shr
cmpsb
inc
sbb
pop
xor
inc
jmp
pusha
loope
in
iret
data16
loopne
sbb
jp
cmp
ja
fistpll
xchg
dec
outsl
data16
mov
jne
sub
cmp
xchg
in
scas
mov
lret
jae
push
dec
sub
lds
mov
inc
sbb
push
lcall
mov
push
xchg
sbb
loope
fdivs
mov
mov
jno
daa
outsb
les
ret
jae
dec
sbb
pop
xchg
mov
or
mov
ss
imul
movsb
cld
jg
or
lods
cmpsb
add
je
cmp
or
pop
cmp
roll
pop
push
add
pop
pop
xchg
test
sub
cmp
dec
outsl
pop
out
out
repnz
es
pop
std
imul
cmp
add
sbb
jecxz
cltd
popa
je
dec
jmp
mov
sbb
dec
cmp
cmpsl
sub
mov
stos
dec
and
outsl
xchg
dec
sub
push
or
mov
stc
pop
jno
daa
adc
lret
out
mov
dec
mov
mov
addl
xlat
out
jmp
xchg
lods
es
lcall
sbb
mov
xchg
insl
int
loope
add
test
mov
jo
call
call
enter
mov
mov
test
js
aam
mov
sarb
sbb
or
mov
imul
test
roll
dec
push
and
mov
mov
cmpl
dec
xchg
outsl
das
andl
xor
ret
ljmp
cmpb
ss
mov
inc
dec
out
mul
sbb
outsl
xchg
xchg
jae
movsb
imul
push
jg
jmp
push
push
xchg
inc
jnp
daa
add
test
fndisi(8087
and
mov
add
outsl
cmp
nop
pop
mov
in
in
mov
out
or
inc
cmp
pop
aad
leave
mov
jnp
dec
notl
imul
pop
push
shlb
mov
popa
xor
dec
in
icebp
sti
mov
add
cmp
aam
mov
or
pusha
in
xchg
std
mov
jnp
sub
aam
mov
popf
in
mov
repnz
or
dec
fwait
xchg
pop
out
inc
push
mov
out
jno
dec
lds
sbb
imul
test
pushf
outsb
scas
cmpsb
xchg
push
pop
imul
ss
pop
sub
dec
add
stos
or
jg
scas
sub
imul
xor
push
pop
fucomip
jge
push
xchg
sub
repnz
mov
arpl
into
popa
loop
inc
cmp
ds
mov
jge
ret
test
lds
sub
sbb
scas
adc
sahf
adc
dec
es
pop
fwait
push
push
inc
mov
sub
les
push
dec
inc
mov
lret
mov
jae
adc
sti
dec
loop
push
mov
popf
mov
mov
fstpt
aas
xor
xlat
int
mov
jl
jbe
out
mov
cmp
hlt
sbb
mov
mov
jmp
scas
jno
and
jne
add
dec
cmp
push
inc
rcrl
cs
fists
push
inc
imul
mov
in
cmp
adc
pop
xor
leave
xchg
pop
mov
imul
cmp
movsb
or
jo
fsubs
sbb
cmp
loopne
xor
movsb
and
and
scas
sub
push
mov
das
insl
rcrl
cs
lds
push
mov
arpl
dec
dec
inc
testl
cmp
out
test
fdivs
ds
test
std
and
jne
insb
mov
roll
movsb
mov
sbb
mov
sbb
jae
lahf
mov
std
das
mov
shl
incb
jp
dec
cld
inc
push
sar
mov
push
xchg
aam
out
shll
stc
mov
mov
jne
lret
mov
into
std
addl
loope
loop
hlt
lds
loopne
es
aas
push
addr16
sbb
xor
mov
push
arpl
inc
int3
xor
repnz
xchg
xchg
push
hlt
lret
mov
pop
dec
imul
push
stc
aas
shrb
cmpsb
jo
out
push
in
lods
xor
std
lahf
test
insl
jge
add
fisubrs
adc
int
mov
fimull
xor
ror
dec
push
out
divb
jl
sbb
jbe
pop
or
mov
jmp
cwtl
insl
sbb
ficomps
and
xor
lock
loope
pusha
or
and
mov
add
push
push
mov
push
rcll
mov
js
mov
xchg
mov
test
out
jl
mov
mov
aam
aaa
and
xchg
mov
test
cmpsl
pop
mov
cmp
inc
inc
mov
and
add
push
mov
lret
jge
iret
dec
sbbl
lds
adc
add
ss
push
adc
inc
js
jb
adc
mov
mov
dec
out
mov
ja
ret
popf
aad
scas
ljmp
jg
dec
ss
add
frstor
popa
mov
insb
inc
lock
fs
scas
xor
adc
push
and
imul
pushw
iret
or
test
adc
scas
movsl
mov
cmpsl
into
mov
std
outsb
push
ds
sub
mov
ds
pop
ds
pop
in
or
outsl
ja
push
test
inc
lods
pop
push
fs
push
fimull
or
stos
roll
xchg
mov
inc
rcll
lahf
in
test
cld
sbb
pop
inc
sahf
cwtl
xchg
push
inc
fidivl
xchg
fstpl
leave
xor
sbb
push
add
xor
sbb
xchg
inc
stos
mov
clc
outsb
inc
push
je
jmp
cs
dec
dec
insl
pop
xchg
in
fwait
and
and
mov
outsb
jo
push
xor
fnstenv
hlt
shll
fwait
dec
adc
jb
hlt
mov
mov
aad
lcall
and
mov
fdivrl
scas
or
lcall
enter
fildll
mov
movsb
stos
popf
cwtl
push
cmpsb
lcall
data16
rcll
std
test
mov
cmp
fistpll
loopne
jmp
push
roll
push
or
sbb
scas
in
hlt
cmpsb
scas
sbb
movsl
lret
push
xchg
dec
add
mov
cmc
sarl
cmpsl
xor
and
out
pop
push
push
sbb
jge
and
cli
xchg
mov
adc
xor
aas
outsl
bound
fistpl
xchg
mov
mov
jnp
xchg
mov
cmp
je
add
xor
ret
aaa
in
shl
stos
lods
imul
test
js
fildll
cmp
xchg
inc
pop
jle
mov
push
xor
xchg
cmpb
sub
lods
push
outsb
adc
sbb
sub
xor
lods
scas
addl
rclb
lret
cmpsb
cli
in
out
iret
jmp
mov
add
xor
repz
leave
dec
gs
jle
inc
lahf
lret
in
add
pop
or
or
fists
jo
jmp
rorl
cltd
lret
pop
lods
mov
sbb
movsb
scas
cli
mov
jp
xchg
add
push
imul
cld
mov
add
das
mov
or
or
sbb
and
loopne
movsl
mov
sub
pop
mov
add
and
jl
in
lods
fldenv
pop
sub
subb
dec
pop
sub
sub
inc
add
inc
inc
and
xor
jne
dec
cld
mov
test
and
mov
andl
adc
rcll
fwait
push
repnz
neg
aad
outsb
mov
call
repz
enter
jg
test
shrl
loopne
add
cmpsl
xchg
mov
and
cmp
adcb
push
ss
out
sbb
cltd
sub
pop
fdivrp
es
and
sbb
aas
jp
test
xchg
insb
cmp
cmp
cmpsb
lahf
imul
fstps
loop
jg
inc
pop
les
add
fnstsw
mov
mov
sbb
add
ret
dec
pop
shll
lods
cltd
sub
inc
fwait
mulb
test
inc
or
addr16
xlat
imul
jp
push
adc
es
out
adc
cmpsb
cmp
add
xchg
push
cmp
inc
inc
rcr
mov
and
jle
xchg
sub
arpl
mov
ljmp
stos
or
jg
addb
xorb
cmp
mov
inc
jnp
mov
mov
test
cmp
movsl
and
and
or
out
bound
adc
roll
sahf
push
popa
mov
aas
push
test
xchg
cs
repnz
mov
add
fiaddl
imul
ds
mov
cmc
and
inc
xchg
push
fs
xor
and
pop
dec
mov
icebp
jmp
xchg
push
sub
out
mov
rcrb
or
shrd
lret
dec
xchg
add
jmp
lret
inc
pushf
inc
pop
outsl
mov
into
pop
cmp
jb
hlt
dec
xchg
inc
scas
int3
lcall
push
sub
aaa
jo
imul
stos
loop
or
adc
movsl
mov
in
rcrb
pop
loope
fidivs
int3
rorl
xor
mov
mov
imul
dec
adc
mov
mov
dec
adc
mov
sub
xchg
push
inc
sarl
jg,pt
arpl
popf
and
ja
pop
sub
leave
push
xor
dec
and
roll
xchg
mov
std
push
inc
xchg
pop
jmp
sub
mov
popf
add
xor
mov
nop
mov
or
aaa
in
push
in
mov
mov
lods
jl
insl
xlat
aas
inc
and
imul
daa
jbe
je
pop
jo
sahf
cmp
mov
pop
or
dec
pop
dec
divb
dec
out
dec
push
mov
push
jle
cmpl
cmpl
jle
ljmp
xor
loopne
out
pop
and
push
idivl
or
and
cwtl
pop
idivb
pop
jbe
test
mov
jmp
cld
add
mov
sbb
inc
lret
aas
pop
sbb
mov
mov
ss
hlt
sub
push
gs
vphaddudq
mov
inc
xor
sub
movsb
cmp
mov
push
adc
jo
xlat
fidivrs
xlat
mov
sub
pop
jge
mov
sbb
sbb
fildl
icebp
or
cmpsl
adc
cmp
pop
push
enter
mov
outsl
jne
sbb
out
inc
jle
outsl
imul
icebp
mov
sbbb
cs
pop
lock
dec
pop
movsl
xor
in
das
inc
mov
cmpsb
inc
sub
movsl
ja
fbstp
repz
xor
sub
into
insl
aaa
ja
fs
sbb
movsl
jae
mov
test
movl
lods
mov
aam
sarl
adc
jnp
mov
inc
imul
add
popf
cld
mov
xchg
mov
cmp
ret
cmp
jp
outsl
in
aam
cmp
mov
push
pop
adc
dec
ror
sbb
ja
inc
daa
fisttpl
pop
add
add
pop
loop
nop
push
jne
imul
jmp
jne
outsl
and
cmpsl
jp
inc
and
loopne
adc
test
dec
das
add
adc
loopne
xchg
cli
ret
sbb
xchg
cmc
push
aaa
or
xor
sti
xchg
xor
pop
mov
dec
outsl
push
ds
rcr
iret
or
mov
sahf
or
test
cmp
fidivs
in
shrl
lock
xchg
das
or
adc
mov
ljmp
sti
adc
pushf
jb
rcrl
aaa
in
cmp
dec
adc
sbbb
add
es
cmp
ficompl
leave
xchg
jbe
pop
mov
jge
mov
push
push
clc
xlat
mov
jnp
cs
and
pop
push
ljmp
lea
enter
lcall
or
xchg
cmpsb
js
dec
push
aam
stos
inc
hlt
add
mov
ret
xchg
xor
in
nop
shrl
fs
push
dec
push
cltd
cltd
pminub
jp
aas
lods
sub
lock
dec
clc
stc
dec
dec
js
imul
jo
cmp
int3
push
pop
xor
mov
mov
mov
loope
and
in
insl
bound
mov
test
cmp
gs
add
ret
jmp
dec
push
cltd
std
pop
repnz
jbe
jg
lahf
mov
pop
mov
stos
or
sub
and
or
inc
inc
xor
pop
pop
and
lods
push
adcl
int3
push
mov
sub
jecxz
popf
add
in
mov
ja
add
push
sbb
push
mov
cld
in
mov
cmp
jmp
mov
pop
and
mov
add
fidivrl
mov
inc
add
push
push
add
push
push
cs
jl
pop
lret
dec
push
sub
je
push
cmp
fmull
mov
sub
adc
aaa
add
mov
loopne
dec
enter
scas
pop
pop
enter
xor
out
push
pusha
scas
sti
ja
push
sub
jb
stc
das
pop
sarb
js
and
pop
sbb
and
push
pop
cli
clc
add
mov
js
mov
dec
push
push
nop
roll
hlt
or
push
add
aad
lcall
and
or
les
xor
cmp
es
repz
jae
std
push
xor
ja
jle
popf
out
test
or
repnz
sbb
xor
inc
sbb
pop
or
fwait
add
cwtl
mov
lret
add
xchg
jb
push
js
pop
cli
mov
stos
sub
xor
mov
ss
testl
mov
bound
mov
jno
test
mov
pusha
fildl
sub
in
push
aaa
jae
xor
into
pop
push
and
push
sbb
aas
mov
cmp
lea
push
imul
push
xchg
test
stc
add
push
jo
adc
sbb
push
inc
adc
add
popa
fsubrs
lods
dec
imul
mov
frstor
dec
push
insl
stos
clc
xor
mul
cmpsl
std
loopne
scas
or
cli
xchg
inc
pop
push
sub
imul
jns
and
stos
fmuls
daa
cmpsl
dec
cmpsb
jae
sbb
inc
sbb
pop
out
adc
push
or
ds
pop
sub
mov
cmp
in
inc
jge
cmp
sbb
mov
andb
and
jbe
jp
in
mov
fiadds
jno
push
in
lret
sbb
inc
ja
inc
test
sbb
mov
out
mov
aaa
pop
aam
pop
fidivrs
fadd
add
cmp
rcrl
xor
and
shll
lcall
imul
lahf
enter
pop
movsb
test
pop
aad
push
push
inc
add
mov
sbb
pushf
mov
insb
mov
fisubrs
dec
inc
xchg
sbb
xchg
jbe
insl
popa
cli
nop
std
cmpb
add
jae
dec
lret
push
pop
leave
fldenv
jbe
fwait
arpl
dec
add
stos
in
mov
pop
push
xchg
mov
js
pop
stos
lock
xchg
inc
je
cmp
adc
test
enter
add
clc
subb
cmpb
sub
sbbb
test
xor
sub
mov
sti
popf
cmp
xchg
xchg
inc
cmp
xor
test
and
rorl
mov
leave
inc
daa
xchg
incl
mov
jmp
call
xchg
dec
sub
sbb
sbb
jle
xor
add
and
sub
adc
fs
aaa
into
or
push
mov
adc
outsl
or
sahf
jg
cmpsb
pop
sbb
pop
mov
loope
mov
jle
pop
cmpsl
js
dec
mov
outsb
fdiv
sbb
jb
mov
mov
enter
adc
sub
xorb
mov
cmp
inc
mov
dec
and
jp
adc
sbb
outsb
aas
cmpsl
in
in
mov
mov
push
push
popa
lea
push
aad
jb
xlat
push
dec
xor
push
and
push
jo
push
pop
in
cmp
xchg
jbe
mov
mov
pop
orb
dec
xchg
dec
jbe
dec
jno
mov
sub
pop
xlat
mov
lcall
xor
insb
testl
mov
out
push
mov
ss
das
sub
xchg
mov
mov
aam
das
fwait
pop
enter
movsb
xchg
xchg
ds
sub
or
mov
push
repz
mov
push
je
pop
cmp
repnz
inc
fldt
cmp
std
dec
scas
inc
sbb
cmp
cmp
lcall
pop
fdivrl
outsb
and
and
leave
or
leave
mov
adc
inc
hlt
movb
jp
xchg
inc
stc
in
out
std
dec
enter
je
cmp
jb
pop
inc
jno
push
mov
arpl
xchg
dec
cmp
popf
cmp
pushl
push
mov
jns
popf
in
ja
test
nop
daa
imul
mov
mov
jmp
adc
sub
bound
and
mov
lret
hlt
xor
pop
sub
aam
lods
clc
into
xchg
cltd
dec
xlat
cltd
sub
pushf
insb
dec
add
mov
in
xchg
sbb
pusha
jle,pn
xchg
loopne
call
and
icebp
inc
sbb
pop
fcmovb
push
arpl
cmp
fcoml
loop
dec
and
dec
and
pop
es
idivb
cmp
lcall
cmp
xor
xchg
ljmp
test
sbb
pop
js
ljmp
push
lcall
js
cld
sbb
cli
jne
in
adc
sahf
mov
je
jg
xchg
mov
pop
test
rclb
out
dec
into
out
push
negb
mov
das
loope
pop
or
pushf
pop
sbb
fwait
xor
push
adcb
mov
lret
fwait
dec
sbb
aam
sar
add
mov
in
add
imul
mov
pop
addr16
xlat
and
dec
cmp
dec
xor
xor
mov
testb
inc
lods
test
inc
mov
fcmovnu
and
lret
mov
inc
mov
jbe
and
or
psrlq
test
jbe
mov
clc
xor
mov
cs
mov
call
test
repz
cmp
cmpsb
cmpsl
xor
or
sub
sbb
nop
dec
lcall
add
sbb
push
xchg
and
popf
les
or
sbb
aaa
lock
fmull
in
pop
push
push
push
mov
or
fldt
fdivrs
cmp
xchg
fcmovne
xor
jecxz
mov
mov
xchg
les
dec
mov
jo
jl
in
retw
iret
movsl
jecxz
in
add
leave
jne
jge
and
aas
outsb
xchg
sbb
test
subb
stos
arpl
sub
sti
push
insl
cmc
xchg
and
lods
pop
xchg
jbe
jecxz
add
lret
dec
stc
stos
jb
sti
jb
mov
push
or
xchg
shll
test
and
pop
cld
into
mov
lret
mov
pop
notl
fdivrs
stos
sub
dec
mov
xchg
ljmp
aam
add
push
outsb
cld
sbb
test
and
cmp
mov
sub
testb
imul
outsb
leave
sub
mov
sub
mov
pushf
in
setae
jmp
aas
push
es
lret
mov
xor
pop
rorl
in
or
and
mov
add
aad
outsb
dec
repz
dec
mov
test
add
or
push
cmp
out
aas
and
sbb
mov
mov
imul
stc
pop
mov
lods
xor
fyl2x
imul
cmpsb
and
lret
push
aad
cmp
cmp
inc
push
inc
ljmp
ds
jne
jmp
pop
sbb
test
fbstp
sbb
xchg
jo
das
pop
jb
rol
psrlq
pextrw
xchg
push
aaa
stos
test
arpl
mov
xchg
sbb
cmp
es
mov
lret
push
test
lods
lock
nop
jmp
lret
lods
jge
sub
xor
pop
sbb
int3
sub
sub
or
mov
jecxz,pn
xor
jo
test
sbb
mov
rol
shlb
push
xchg
or
inc
inc
int
jp
das
arpl
dec
repz
pusha
add
test
pusha
dec
lea
cmpsl
mov
stos
imul
jmp
pop
and
dec
or
inc
lock
ficomps
in
xchg
out
push
push
das
lahf
push
pop
ljmp
lods
push
add
dec
jmp
je
adc
loop
stc
lods
push
jo
xlat
add
rclb
mov
repnz
cmp
pop
ficoml
or
int3
sti
sbb
lock
lods
push
add
xchg
hlt
mov
testl
sti
adc
mov
xchg
sub
mov
push
jbe
xor
daa
dec
in
lods
pusha
lock
int
lea
lret
mov
stc
cs
out
xor
mov
adc
adc
mov
es
ds
pop
add
xor
cwtl
xlat
push
stc
loope
add
popf
sarb
fstps
fwait
and
inc
xchg
sbb
mov
push
xchg
insl
scas
and
je
repz
repz
pop
and
paddb
aam
jg
loopne
test
sti
sub
xchg
push
sbb
sub
out
sbb
and
lds
or
jmp
leave
mov
push
je
pusha
dec
mov
push
pusha
xchg
andb
adc
push
mov
sub
xor
js
xor
fwait
cmp
push
inc
pusha
cs
or
jmp
js
ja
push
negl
xchg
mov
cmc
push
xchg
rolb
push
fs
pop
addr16
pop
mov
or
cwtl
lock
lea
nop
xchg
stc
orb
push
rorb
inc
pop
push
subl
mov
sub
mov
mov
cmpsl
mov
sub
lea
xor
icebp
es
add
dec
pop
int3
push
dec
mov
lret
mov
pusha
lods
andb
xchg
sahf
rdpmc
add
add
sbb
xor
xchg
mov
stos
xor
call
jbe
xchg
xchg
out
xor
das
bound
or
pushf
aaa
cmp
sar
icebp
and
xor
push
decl
add
test
test
inc
sub
test
test
rolb
adc
lahf
xchg
and
mov
cmpsb
call
into
push
test
and
push
inc
and
cwtl
std
xchg
cmp
sbb
sub
movsb
sub
push
movb
jae
dec
cmpsb
push
or
sbb
in
dec
pushl
xchg
mov
gs
sbb
stos
addb
out
jg
andb
mov
sub
data16
push
test
sub
push
xchg
ss
push
jecxz
mov
mov
xor
lods
xchg
sbb
xchg
dec
enter
push
rolb
sub
repz
bound
dec
inc
mov
imul
xchg
gs
popf
shll
inc
or
jns
add
mov
call
inc
mov
test
push
push
mov
adc
pop
add
addr16
and
aas
out
add
sub
out
shrl
addr16
mov
mov
or
inc
loop
xlat
into
lock
push
pop
or
je
cmp
pop
jge
mov
push
adc
xchg
inc
filds
call
mov
in
or
into
inc
cs
out
mov
int
mov
or
inc
adc
in
jle
ds
sbb
xor
stos
add
int
pop
sub
fistl
ret
or
gs
mov
dec
pop
jnp
push
pusha
jae
push
and
inc
mov
aam
xchg
popf
rcl
jle
xor
pop
sbb
jmp
push
xor
adc
lret
or
pop
dec
int3
or
lds
out
fistpl
mov
ljmp
repz
je
push
out
mov
pushf
lea
mov
pop
popf
mov
mov
nop
pop
sbbb
xchg
scas
jb
fldcw
mov
rcr
std
repz
push
notl
or
roll
mov
test
nop
lods
test
out
lret
mov
cmp
test
mov
int3
decb
jecxz
cmp
lahf
cmp
jae
out
int
mov
lret
cmp
mov
cmp
incl
mov
decb
movsl
sbb
pop
mov
sub
jp
mov
lahf
pop
mov
stos
sbb
test
push
cltd
pushf
dec
cmp
and
dec
mov
mov
out
or
pop
xchg
aaa
ficomps
out
sub
das
dec
mov
inc
insb
fisubs
jo
adc
push
daa
dec
pop
scas
fistpl
or
out
xlat
jae
dec
add
inc
rolb
jae
dec
adc
mov
or
mov
dec
push
pop
fstl
subb
push
or
xchg
test
push
jne
and
cld
add
push
pop
push
pop
pop
adc
lods
inc
inc
cmp
push
faddl
push
dec
jmp
cs
adc
xchg
mov
push
xor
out
jmp
mov
and
gs
adc
mov
inc
xor
xchg
scas
aaa
and
sbb
add
es
out
fdivrl
je
sub
fwait
jle
push
nop
xrelease
or
sub
rol
xor
mov
adc
imul
les
es
and
pop
push
lcall
sbb
pop
jns
sub
jge
test
mov
int3
cmp
mov
push
mov
fildl
stos
rolb
cld
pop
jl
jne
dec
outsb
mulb
mov
jnp
lods
loop
out
roll
pop
sahf
fsts
inc
in
push
in
jmp
les
mov
movsl
out
xor
add
shlb
cli
negl
mov
push
xchg
leave
pop
and
xor
jnp
lea
subl
mov
loope
shl
std
fistpll
mov
outsl
xchg
push
xchg
lea
aaa
lcall
mov
xchg
dec
lds
into
insl
mov
fimull
lods
cmpsb
ret
push
arpl
fs
mov
sub
sti
push
sbb
mov
fiadds
push
std
cmp
iret
inc
repz
test
clc
mov
dec
inc
mov
mov
sahf
gs
arpl
loop
mov
in
pop
pop
gs
sbb
dec
mov
movsb
xor
movsb
cmp
imul
dec
jmp
cmpsl
fistpll
ret
cmp
cmp
mov
adc
lcall
pop
inc
mov
insb
push
in
pusha
pop
pop
sarb
xor
ljmp
mov
fisttpll
adc
repz
daa
sbb
dec
repz
stc
loopne
or
popf
adc
mov
pop
pop
shrl
push
pop
sub
dec
xchg
or
jno
mov
jno
push
pop
int
dec
pushl
jp
je
cltd
gs
scas
and
fildl
scas
and
movsl
es
jne
and
dec
mov
xchg
rcr
dec
and
add
lods
nop
adc
sub
push
mov
pop
cmpb
mov
adc
sbb
int3
das
xor
lahf
push
mov
cmp
out
arpl
shr
push
push
lret
sbb
lret
xchg
and
call
xor
and
bound
xchg
and
leave
lods
mov
pop
jle
xchg
ret
jnp
sbb
pop
pop
mov
dec
ljmp
push
xchg
sub
xor
xor
pop
jecxz,pn
dec
dec
cs
loop,pn
insl
out
cltd
cmp
inc
mov
fidivl
pop
or
mov
outsb
mov
ficompl
cld
repz
mov
test
mov
cvtps2pd
in
sub
loope
loopne
pop
fcmovnbe
adc
outsl
pushf
jae
scas
xchg
mov
add
std
jnp
xor
adc
and
icebp
repnz
jns
fdivs
stc
sub
cs
and
xchg
icebp
mov
dec
adc
xchg
mov
push
push
ljmp
inc
add
sbb
xor
push
sbbl
das
xor
jae
xchg
in
or
imul
test
sub
int3
pop
and
aas
insl
repz
push
sub
fstps
clc
rcrb
xor
mov
push
mov
sub
inc
sbb
shr
inc
dec
pop
cmp
fistl
push
mov
sbb
add
and
mov
decl
add
add
scas
loop
in
mov
test
call
and
daa
rcrl
lods
inc
test
ret
dec
loop
les
inc
jbe
dec
jne
mov
cmc
mov
daa
sbb
and
mov
movsl
cld
rorl
sbb
sub
ret
icebp
sbb
cld
gs
mov
dec
loopne
push
mov
jle
scas
sub
push
out
sbb
out
push
mov
and
stos
mov
pop
int
test
adc
inc
pop
in
popf
in
mov
jp
imul
add
add
mov
out
in
das
loop
inc
xor
movb
push
cli
icebp
test
add
mov
cmc
ss
rcrb
ja
or
xchg
fwait
repz
xor
bound
add
cld
mov
fidivl
daa
lret
cmp
jb
fdivl
pop
arpl
fcmovbe
lock
ljmp
inc
hlt
push
and
loopne
lock
xor
adc
mov
jo
subb
cmpsl
jmp
push
dec
lock
loop
dec
sub
sbb
dec
mov
push
out
mov
fidivrl
jl
mov
loop
sahf
pop
out
jbe
out
inc
mov
lods
aas
scas
insb
inc
dec
lods
jno
push
inc
rcrb
out
dec
push
mov
push
mov
imul
sbb
jl
cli
leave
mov
sub
sahf
xorb
xchg
stos
or
orb
jmp
xor
add
adc
xor
jmp
push
mov
loop
data16
sbb
stc
ror
inc
cmp
stos
incb
pusha
pop
jl
push
imul
inc
ret
ret
inc
jbe
in
out
mov
and
add
pop
lods
insb
rclb
call
jnp
cmp
in
arpl
sub
cld
mov
and
loop
fstpt
out
sbb
jnp
or
imul
or
dec
es
int3
cmpsl
jge
call
sahf
out
or
jmp
movsl
out
mov
ret
popa
add
call
ret
push
in
shrb
mov
jp
repnz
jge
sub
andl
mov
mov
adc
fistps
inc
and
push
iret
pop
test
movsl
sbb
shll
push
test
es
fwait
jne
mov
cwtl
mov
js
or
sub
dec
pop
aam
das
cmp
fstpt
mov
fildl
call
adc
in
subl
xchg
in
push
adc
mov
xchg
xor
add
sub
lea
shlb
iret
stc
mov
cmpsl
lret
jnp
lret
mov
mov
sub
cli
push
notl
cmp
test
pop
shrl
scas
xor
mov
xor
rcr
cmpsb
popf
loope
jmp
push
sbb
leave
fdivrl
xor
or
mov
dec
mov
ret
shrb
das
xchg
jae
mov
test
into
pop
inc
cmp
scas
jle
jg
int3
mov
sub
push
leave
jge
fidivs
sahf
jnp
popa
push
enter
jbe
pop
or
jg
pop
push
push
daa
cmc
push
xchg
sahf
test
call
adc
jle
add
adc
popf
cmp
dec
inc
mov
std
icebp
and
sbb
imul
bound
jae
out
dec
mov
inc
sub
adc
cmp
lret
or
xor
fistpll
jb
pop
fisubrs
push
push
enter
test
xchg
jmp
out
and
fcompl
imul
inc
inc
sbb
rorl
xchg
pop
sbb
je
jns
xchg
insl
jb
cmp
leave
repnz
outsb
xchg
cmp
dec
sub
test
and
movsb
insb
jl
or
out
or
aam
adc
and
xchg
sbb
out
rcrl
jne
bound
sbb
lret
mov
mov
jle
pop
and
sbb
fsubs
out
js
sub
out
add
push
aas
add
sbb
cwtl
rsqrtps
cwtl
jle
xchg
mov
or
fdivrl
jmp
pop
clc
or
jl
mov
and
add
ja
xor
ds
ficoml
mov
cli
iret
and
lods
mov
jge
pop
fcos
xchg
sub
cmp
or
and
sub
sub
pop
adc
and
and
fisubrl
lahf
insl
or
fistl
out
mov
pushf
xchg
jb
imull
test
jmp
in
mov
out
or
adc
clc
outsl
sbbb
inc
xor
scas
mov
jmp
shll
fwait
cmpsb
lahf
sub
add
adc
jl
xor
fs
cli
insl
in
push
out
pop
push
cld
xor
inc
sti
das
into
cmp
jbe
fwait
and
popa
or
cmpsb
jmp
jle
jns
mov
mov
mov
lahf
mov
pop
out
mov
aaa
xor
sbb
enter
mov
xor
fmuls
sbb
lds
jmp
dec
outsb
cld
xor
pusha
mov
or
stc
adc
in
stos
fimull
or
dec
inc
jle
adc
mov
push
daa
fisubrl
icebp
cmc
movsl
imul
jl
sbb
mov
mov
dec
ret
xlat
xchg
shl
cli
fucomi
cmp
adc
push
aad
mov
mov
pop
adc
xchg
sbb
jb
lret
dec
addl
push
fcoml
lcall
cli
outsl
pop
fs
sbbl
imul
push
mov
jge
or
out
pop
and
jnp
or
sbb
outsb
cmp
xor
insb
mov
adc
push
sub
loopne
movl
pop
nop
mov
js
lcall
imul
mov
pusha
sahf
mov
icebp
inc
add
lds
mov
clc
jp
push
xlat
das
dec
rcl
and
mov
xchg
fldl
xor
lcall
ljmp
leave
xchg
push
repz
cvttps2pi
arpl
inc
push
aad
out
pop
sbb
push
js
sub
ja
test
lods
je
push
jb
cmpsb
dec
imulb
leave
mov
hlt
ss
iret
outsl
sub
sub
sbb
mov
rcr
xlat
es
adc
adc
in
lret
les
call
enter
dec
mov
mov
cmpsl
sbb
loop
xchg
sar
mov
sub
adc
xor
fwait
or
idivb
cmp
mov
loopne
inc
insb
xorl
testl
outsb
sub
insl
mov
add
loope
cmp
shl
xchg
mov
ja
loope
jl
cmc
std
sti
mov
cmpsl
fwait
lahf
pusha
sub
fistps
push
cmp
addb
shrb
cmp
pop
or
aaa
or
or
mov
inc
adc
decl
sbb
rcll
fwait
clc
xchg
push
lock
push
mov
xor
fisttps
sti
xor
dec
call
push
adc
add
or
cmp
das
xor
gs
jmp
sbb
or
xchg
cwtl
pushf
push
cmp
mov
cwtl
add
cltd
std
dec
popa
loope
inc
inc
add
dec
cmp
cmc
pop
cltd
scas
loopne
loopne
outsl
pop
dec
popf
lods
dec
xchg
add
pop
mov
test
aam
sti
roll
xchg
cmp
or
addb
sbb
add
arpl
mov
shlb
stos
cmpb
pop
cwtl
add
fistpll
and
pop
mov
lea
add
ret
ret
and
push
jmp
sub
mov
les
mov
jmp
pusha
push
dec
cltd
and
aaa
add
bound
leave
sub
inc
mov
mov
mov
and
xchg
xor
push
int
cmp
xor
jns
stos
les
je
jnp
mov
xor
cmp
in
fcmovne
aaa
cld
fstpl
dec
icebp
add
fcmove
in
je
jo
in
jl
fldl
lods
jle
push
push
jp
out
dec
cmpsl
addb
negl
divb
cmp
adc
mov
jl
mov
dec
out
pop
push
std
inc
push
aas
xchg
inc
sbb
sar
xchg
int3
lcall
mov
mov
push
xchg
dec
stos
js
and
lods
movsb
daa
pop
add
int
mov
ds
jb
and
call
or
setg
inc
xchg
fisttpll
imul
sub
aas
and
test
aas
test
enter
shl
loop
fstpl
sub
sbb
cmp
xor
daa
stc
lret
roll
sbb
insl
adc
sub
cmp
inc
or
fbstp
mov
ds
xchg
pop
mov
inc
fmuls
lods
xlat
mov
and
xor
xor
push
mov
rclb
xchg
push
loope
imul
lahf
jbe
push
adc
cmpl
jbe
ljmp
push
ja
movsbl
mov
pushf
cmp
mull
mov
cmp
into
adc
mov
dec
push
call
push
jl
inc
pop
sarl
pusha
fdivrs
xor
mov
sub
mov
std
mov
repz
push
xor
aaa
test
lret
in
adc
xchg
or
inc
cmp
cmp
lds
push
aad
sub
jle
sahf
mov
jmp
xchg
rclb
cmp
icebp
fwait
loop
jno
xchg
add
and
lretw
pop
xchg
lods
outsl
insb
movsb
pop
daa
mov
or
loop
lods
idivb
adc
push
mov
sbb
cmp
sbb
insl
out
frndint
mov
rol
fsubr
jmp
pop
stc
iret
cmp
icebp
ds
jp
dec
imul
insl
add
test
aas
shl
add
push
push
loop
subl
int
inc
shr
sarb
xchg
xor
jbe
jg
or
jns
dec
ljmp
mov
jecxz
xchg
xchg
pop
lret
xchg
lcall
cwtl
insb
stos
mov
adc
jb
inc
dec
cwtl
dec
cmpsl
xor
sbb
mov
ss
fprem
xor
push
xor
imul
rorb
loop
mov
rclb
popf
test
dec
cmp
bnd
sbb
or
insb
cmpsb
shlb
cmpsb
add
movl
mov
and
mov
pusha
dec
sbb
mov
sbb
xchg
mov
pop
movsb
lods
rclb
movsb
rep
push
addb
insb
shrb
xor
outsb
in
cmp
popf
test
mov
lods
sbbb
shlb
aam
adc
add
lock
mov
out
cltd
rcrl
stos
lock
aas
cmpsl
cmp
jmp
adc
xabort
into
movsb
int
dec
scas
pop
ljmp
loopne
sub
dec
pusha
or
add
in
push
and
sti
ljmp
mov
mov
hlt
lret
push
or
fadds
push
fs
xchg
stos
pop
lods
pop
arpl
xlat
and
mov
pusha
mov
mov
pop
jp
pop
pop
pop
xchg
sub
pop
xor
scas
lods
lock
xchg
scas
test
mov
clc
add
cmpb
sub
orl
xchg
mov
movsl
push
idivb
cld
or
inc
cs
pop
add
jp
inc
cmpsb
inc
add
pop
jmp
dec
imul
jo
mov
add
les
js
or
clc
mov
and
xchg
add
xorl
or
cmp
dec
add
call
add
aam
out
popf
addb
sub
xor
jno
sub
dec
cmpsl
push
sahf
punpckhbw
insb
or
pusha
clc
inc
lahf
add
mov
mov
and
mov
pushf
psubw
mov
and
icebp
add
orl
xchg
incl
clc
cmpsl
fldcw
sub
add
inc
int
in
sbb
popa
pushw
outsb
mov
xor
rclb
mov
ficomps
int
or
push
xor
addr16
sbb
jno
mov
outsl
iret
mov
imul
and
mov
jo
repnz
enter
sbb
fnstenv
jno
aas
jp
sub
jae
sbb
lret
dec
add
sub
jnp
mov
lods
mov
lods
cmpsb
mov
add
cmp
push
cld
dec
mov
or
jle
inc
add
or
cld
inc
pop
nop
xchg
push
pusha
dec
addb
std
rolb
push
repnz
xchg
mov
pop
mov
sahf
push
cmpsl
adc
mov
rclb
in
insb
movsl
lret
jb
xchg
and
push
cmp
fisttpll
sahf
jnp
and
mov
inc
push
push
xchg
fisubs
mov
mov
mov
ss
fndisi(8087
lahf
cmp
scas
xchg
in
cmc
or
xchg
sub
mov
jl
jmp
scas
ss
mov
outsl
ffreep
inc
pop
add
mov
stos
js
cmp
imul
lcall
cmp
xchg
dec
lahf
pop
out
jae
sub
mov
and
mov
lahf
jg
fstps
divb
insl
mov
fdivs
jnp
or
sub
popf
push
pop
pop
sub
lods
xor
fisttpll
mov
xchg
sub
jbe
orb
sub
pop
sbb
repnz
popf
and
push
and
je
pusha
inc
filds
or
mov
daa
push
mov
aad
dec
pushl
out
stos
pop
je
sub
and
bound
popf
fwait
mov
sbb
daa
xchg
add
add
push
loopne
mov
popa
mov
wbinvd
mov
loope
sub
nop
sbb
lods
push
mov
mov
dec
xlat
mov
stos
sahf
dec
pop
scas
add
adc
pop
ficomps
es
icebp
sbb
mov
cmp
inc
fidivl
in
aam
faddl
sbb
or
mov
push
loopne
adc
pop
repnz
stos
fwait
and
jle
jbe
pop
cli
fisubrs
mov
xor
jmp
mov
and
movsl
cltd
in
inc
jp
xor
pop
inc
add
jmp
mov
xor
xchg
gs
in
jg
jno
inc
int3
rcll
fnsave
push
push
or
inc
arpl
aaa
hlt
popf
or
mov
fmuls
adc
mov
shr
test
push
loop
push
ret
ljmp
xchg
jp
ret
cmp
test
mov
xlat
js
sub
popa
ss
orl
ret
push
ficoms
mov
cmp
pop
pusha
out
cld
scas
out
push
out
scas
mov
out
fisttpll
sbb
test
insl
add
mov
ds
rcll
inc
shrl
aas
ds
cmp
adc
push
cli
mov
invd
xor
in
cmp
std
add
xchg
and
dec
sbbb
cmp
pop
mov
mov
sub
in
daa
fsubr
push
insl
dec
lret
fs
mov
mov
adcl
adc
sbb
or
push
and
insl
pop
in
subb
pop
mov
popa
adc
push
sahf
sub
or
or
in
imul
out
mov
cmp
outsb
outsb
aas
pop
sub
ds
subl
out
and
idivl
insb
fiadds
in
mov
xchg
mov
mov
sub
xor
cmp
inc
jns
lcall
xor
mov
popa
into
pop
push
adc
popl
cmp
push
sahf
pop
inc
and
ja
inc
decl
out
into
xor
mov
add
and
lods
inc
rcll
imul
push
cmp
mov
dec
cmp
in
lods
jae
lahf
sub
mov
jae
outsb
dec
in
lret
pop
dec
outsl
and
bound
lret
jge
leave
sub
pop
jae
lcall
mov
jnp
int
push
dec
lock
sti
mov
sub
scas
sbb
sub
outsl
inc
xor
hlt
or
sbb
lahf
out
push
adc
sub
fcoms
int
sub
in
out
sbb
call
ja
fwait
mov
movsb
cmp
cwtl
cltd
mov
lret
lods
enter
ss
mov
cmpsb
sub
test
xor
mov
popa
lock
fidivs
mull
lock
jp
jae
call
inc
lea
ds
dec
pop
insl
push
bnd
jecxz
loopne
and
test
fldpi
ss
xchg
iret
xchg
sub
jecxz
push
in
sbb
popl
dec
repz
mul
mov
fwait
mov
mov
or
fwait
sub
pop
push
inc
and
rcrl
test
inc
xchg
add
mov
pop
adc
push
jae
call
popa
adc
aad
push
cltd
scas
add
pcmpeqb
mov
xor
js
xor
cli
sub
pop
outsb
rorb
adc
sub
mov
rorl
adc
xchg
pop
inc
pusha
fcomps
dec
xchg
imul
xchg
leave
push
push
sbb
fbstp
cwtl
push
mov
ret
adc
out
and
lcall
jg
gs
jne
inc
out
mov
dec
cmpsb
js
inc
mov
add
sub
xor
xor
mov
rcl
push
ja
jecxz
pop
jl
mov
subb
imul
push
lock
in
je
jno
jno
mov
cmp
ja
mov
cmp
mov
mov
call
sbb
mov
and
icebp
pop
daa
push
adc
pop
xor
mov
sbb
lcall
inc
inc
jae
xchg
cmpsl
inc
xor
xor
daa
sahf
icebp
pushf
xlat
ljmp
push
push
das
mov
and
sahf
xor
jmp
repz
inc
call
fldt
sbb
je
jbe
sbb
ja
mov
mov
push
sub
divb
sub
pop
pop
dec
out
push
cwtl
popl
dec
repz
mov
pop
dec
lods
cltd
cmp
sbb
jg
aas
cmc
out
add
testl
jo
orb
sub
iret
sub
je
mov
mov
daa
cmpsl
aam
fwait
cli
mov
ss
fstpt
push
xor
pop
sbb
leave
pop
inc
insb
sbb
xor
inc
nop
repz
xor
movsb
inc
dec
fsubp
neg
mov
lcall
mov
cmp
xor
divl
loope
dec
sbb
lcall
xor
cmp
push
insb
mov
movsb
mov
insb
mov
push
adc
lods
sub
int
pop
rcrl
xor
bound
fimuls
sub
xchg
mov
sti
adc
adc
fdivl
jno
sub
mov
add
fs
cs
xor
sahf
or
xchg
jne
pop
and
sub
xor
pop
mov
adc
pop
into
dec
xor
hlt
pop
mov
xlat
xchg
mov
cld
iret
mov
cmp
add
sbb
test
lcall
mov
call
aad
cli
ljmp
popf
mov
popf
jmp
lods
out
adc
shll
mov
push
ja
xor
or
or
fcoml
lock
mov
dec
sbb
movsb
mov
sahf
xchg
into
out
dec
loope
xor
ss
shl
sub
push
sbb
xchg
lds
push
outsl
stc
jae
push
mov
push
ss
pop
push
in
push
movsb
arpl
jmp
push
sbbb
jne
xchg
mov
jae
sub
jmp
xor
pop
sub
sbb
xchg
ss
jge
inc
push
imul
out
stc
inc
dec
sub
or
adc
jge
imul
fiadds
hlt
sbb
xlat
inc
mov
add
xchg
add
push
lret
aad
sub
aad
mov
mov
ffreep
push
xchg
movsb
fldenv
jg
or
xor
ficomps
jl
cmc
jle
inc
push
sarb
pop
pusha
pop
xchg
adc
adc
jno
iret
mov
mov
in
lock
pusha
or
sbb
mov
imul
imul
inc
dec
shll
or
push
dec
cltd
iret
nop
push
ljmp
mov
mov
mov
scas
adc
stos
call
xchg
lock
clc
stos
pop
clc
in
mov
fdivl
rep
mov
mov
jnp
lods
leave
mov
and
loopne
nop
test
sbb
cwtl
push
in
adc
shrb
insl
fldt
sbb
dec
cmp
jbe
mov
and
cmp
cs
ret
imul
adc
sub
xchg
fcoms
in
mov
cmpsb
cmp
xlat
pop
insb
xchg
test
adc
cmpsb
xchg
out
aas
cltd
lcall
nop
or
inc
adc
and
rolb
sub
push
dec
mov
dec
lret
popa
pop
es
and
js
dec
mov
imul
inc
push
jmp
push
js
sbb
push
lahf
xchg
dec
outsl
add
mov
push
mov
in
out
paddw
add
sbb
test
adc
xchg
fwait
push
repz
ljmp
fsubl
add
addl
pop
mov
mov
movsl
inc
push
push
ud2
jmp
outsb
or
scas
jp
mov
outsb
mov
jecxz
sbb
ret
mov
pop
inc
push
jae
pop
xchg
xchg
sar
icebp
pop
pop
xchg
and
negl
cmp
cmp
ret
lock
sbb
xor
jne
outsl
mov
daa
leave
std
xchg
xchg
aam
hlt
shll
mov
lret
cli
je
pop
cltd
clc
inc
addl
pushf
jmp
in
or
xchg
test
mov
fists
imul
call
into
and
das
lds
mulb
lret
negb
clc
or
notl
jg
fwait
rcrl
xchg
push
push
mov
mov
bound
cmpsb
jecxz
stc
mov
pop
dec
les
jle
dec
mov
sahf
sub
fs
daa
or
fdivl
mov
cmpb
push
jp
mov
rcrl
mov
rorb
testb
sub
iret
lcall
or
negl
lret
lret
dec
sbb
cmp
xor
stos
ret
inc
adcl
lahf
or
repnz
cmc
out
or
icebp
jne
nop
scas
cmp
adcb
mov
sub
mov
or
testb
out
xor
aas
daa
adc
cmpsb
rcrl
sub
mov
test
jle
popf
inc
cltd
and
iret
lods
loope
call
push
mov
stos
gs
call
or
cld
mov
inc
push
ss
fld
mov
sub
cmpsl
xchg
and
andb
out
loope
xor
lea
dec
mov
aad
xchg
mov
jne
lcall
ret
xchg
pop
push
sub
cli
ret
sbb
pop
mov
inc
mov
scas
push
popa
mov
popa
push
mov
xor
cmpsb
fwait
mov
fisttps
inc
out
loop
insl
dec
jp
xchg
bound
mov
or
in
adc
ja
mov
or
push
mov
imul
jnp
jmp
jbe
jnp
adc
cmpb
mov
je
and
pusha
mov
sbb
test
in
adc
bnd
sbb
cmp
inc
imul
jno
bound
adc
test
add
daa
and
ja
jns
aas
xor
dec
mov
scas
adc
dec
sbb
xor
pop
sbb
sub
cmp
xor
or
enter
mov
xor
clc
or
xchg
xchg
out
and
sub
stos
mov
scas
dec
adc
addr16
outsl
sub
inc
push
and
in
rcr
xchg
inc
leave
dec
cmp
gs
das
je
mov
fwait
dec
jp
cmpsl
jae
das
icebp
pusha
cwtl
sbb
sarl
mov
into
xor
ret
ja
sub
xor
mov
xor
out
and
xchg
adc
int3
jnp
and
adc
jns
jge
decb
lock
mov
daa
daa
dec
scas
xchg
iret
xlat
push
add
cmp
dec
cltd
and
pop
mov
andb
int3
push
adc
aam
xchg
jp
xor
inc
inc
fdivs
ds
push
xor
out
sbb
lret
add
lret
jns
dec
rcll
imul
inc
lock
mov
in
loope
cltd
push
inc
ret
cbtw
jp
scas
mov
insb
fwait
push
movl
dec
push
fisubl
sahf
scas
out
cs
xchg
in
mov
fnstcw
cmpsl
fmuls
outsl
in
dec
xchg
jno
push
and
lahf
or
lods
iret
out
stc
rol
imul
pop
lret
inc
and
fnstenv
and
or
mov
inc
push
popa
aad
pop
loop
jl
cli
adc
lods
dec
imul
ljmp
jne
pop
jl
cmp
pop
mov
mov
cmc
pop
repnz
popl
test
repnz
adc
ljmp
loope
mov
mov
test
arpl
iret
stos
aam
daa
cmpsb
mov
loop
mov
jne
pop
or
xchg
sbb
rorb
pop
fsubs
dec
sti
icebp
arpl
mull
loopne
inc
movsl
in
inc
jb
ja
mov
repnz
fs
stos
iret
insl
repnz
dec
and
mov
and
jnp
in
dec
dec
sbb
xchg
mov
mov
xchg
xchg
pop
add
mov
gs
mov
pop
das
or
pop
fwait
and
fs
jmp
mov
mov
pop
je
cli
push
int3
int
jne
add
mov
clc
sub
lock
cmp
lea
into
mov
out
mov
inc
and
rcll
lcall
inc
mov
movsb
jno
adc
loopne
jmp
loope
jle
orb
shll
jno
adc
scas
js
in
xor
nop
dec
xor
aam
fldcw
shlb
or
mov
ss
inc
mov
mov
scas
pop
push
adc
jnp
xlat
fistpll
pop
popf
test
or
inc
es
rorl
cmp
loopne
mov
jae
xorl
sbb
cwtl
movsl
test
shrb
lret
subb
add
push
mov
fs
sbb
adc
or
add
adcl
jg
push
scas
add
daa
cltd
or
stos
inc
out
xor
adc
fdivs
add
lods
mov
mov
mov
add
sub
mov
push
cs
cli
cld
pop
push
pop
push
pop
pop
sbb
shll
int
cltd
icebp
icebp
inc
movsb
rcrl
rcrl
mov
test
jge
fbstp
iret
inc
addr16
xchg
arpl
mov
and
inc
js
loopne
in
fstpl
mov
addb
aam
mov
iret
jle
cwtl
push
fwait
movsl
fsubrl
mov
or
leave
pop
dec
imul
mov
mov
scas
mov
xor
bound
sbb
out
mov
lods
inc
xchg
xchg
xchg
sub
dec
xor
xchg
pop
add
rcrb
mov
cwtl
mov
jno
adc
jb
pop
inc
dec
in
lret
pusha
and
push
test
sahf
and
and
sbb
and
pop
mov
out
mov
mov
out
sub
repnz
cmpsb
and
into
xor
out
hlt
or
repnz
js
in
test
cld
add
inc
scas
dec
popa
sub
decb
out
pop
or
sahf
mov
aad
call
push
adc
je
cs
cmp
xchg
sbbb
xor
inc
arpl
rclb
addl
jg
ja
mov
push
jmp
popa
lahf
lahf
iret
inc
fs
mov
lock
mov
adc
fldenv
aas
shr
lea
cmp
adc
or
push
mov
rcl
mov
adc
inc
imul
add
nop
lahf
mov
stos
pop
test
xchg
cld
xchg
and
add
jns
out
or
gs
fs
dec
cmpsb
push
aad
hlt
inc
mov
fists
icebp
lahf
lret
fcmovnbe
sbb
mov
adc
call
stos
rcr
std
dec
ficoml
pop
mov
dec
and
pop
call
cmp
dec
rcrl
xchg
test
push
pop
repnz
orl
mov
test
ficoms
lods
lods
sarl
sahf
inc
inc
sarb
stos
adc
xchg
cwtl
dec
pop
mov
int3
sub
enter
insl
insb
add
cld
jecxz
push
pusha
aam
fidivl
sbb
js
jg
hlt
xchg
fidivl
cmp
or
rclb
aas
push
or
dec
mov
jae
pop
sub
push
lock
jno
xor
mov
xchg
ljmp
je
sub
call
jecxz
jno
ljmp
jecxz
pop
xorb
test
gs
push
shlb
sub
mov
and
jbe
adcl
gs
test
mov
arpl
in
pop
es
sub
int
out
es
cwtl
jl
and
inc
ds
jne
sbb
pop
cmc
and
jne
pop
negl
lods
jnp
in
lahf
pushf
sbb
inc
shl
pop
into
scas
cmp
sub
add
rorb
test
sub
popa
dec
addl
mov
sub
jecxz
mov
stos
add
cli
cmpl
xor
in
adc
stos
sub
sti
dec
jne
out
xor
cmpsl
xor
inc
or
std
xor
xor
or
xchg
mov
xor
aad
mov
xchg
xor
jno
fcoms
ljmp
mov
lods
outsb
xor
icebp
mov
and
mov
dec
mov
jb
movsl
outsl
mov
push
arpl
out
lock
push
mul
sub
stos
shl
clc
cli
add
push
ret
mov
stos
and
sahf
push
lahf
sbb
aam
pop
adc
enter
stos
movsl
stc
loope
and
in
aas
inc
aad
xor
push
insl
sub
roll
in
loope
and
mov
call
xor
cmpsl
test
pop
arpl
dec
daa
and
lret
push
scas
cltd
sub
ds
aam
fwait
mov
cmpl
push
andb
push
ljmp
push
jnp
popa
call
adc
daa
mov
mov
inc
dec
enter
sti
xlat
cltd
cli
repnz
mov
stc
push
mov
inc
and
xor
and
icebp
mov
std
sbb
fnstcw
bound
dec
add
jg
out
hlt
push
push
nop
in
ficompl
xor
popa
cmp
sbb
call
pop
mov
or
adc
sub
jae
les
sbb
test
inc
inc
and
lret
fadd
mov
and
xor
test
sub
imul
cmc
out
mov
pop
jae
push
pop
jae
cmpsl
push
lret
scas
mov
leave
loope
aad
fisttpll
pop
pop
cs
aad
out
dec
sub
ret
mov
lods
push
data16
nop
dec
nop
cmp
repnz
cmc
mov
loopne
adc
jl
sub
push
stos
sbb
jge
cmpsb
sahf
jmp
out
mov
aas
subl
jnp
inc
inc
inc
sbb
mov
daa
leave
inc
and
mov
dec
repz
mov
jnp
loopne
jo
in
test
adc
xchg
outsl
or
mov
sti
fsub
sbb
mov
addr16
push
jo
cli
mov
jmp
mov
xor
inc
shll
jmp
xchg
jne
inc
arpl
insb
ret
sbb
divl
push
in
mov
mov
xor
repz
iret
mov
iret
dec
mov
pop
orl
sbb
sbb
bound
insl
popl
sub
pop
jo
int
clc
fistpl
or
aaa
sub
scas
sarb
mov
mov
dec
jle
and
cmp
or
stos
or
ret
and
mov
stos
push
dec
mov
clc
mov
jmp
xor
mov
aaa
enter
cmpsl
outsb
mov
or
mov
je
fcmovnb
call
mov
push
sbb
pop
daa
add
cmpsb
addr16
push
mov
inc
icebp
or
nop
js
adc
pop
xor
aas
pop
hlt
or
scas
dec
rorl
nop
mov
mov
mov
or
inc
add
sub
shr
jge
out
mov
lret
jle
cmpsl
lds
inc
addr16
addr16
sub
dec
or
push
push
cmp
and
jo
adc
insb
fists
pop
outsl
outsb
shlb
xchg
mov
add
lock
jno
lea
ficomps
dec
fdivrp
repnz
sbb
jecxz
gs
stos
out
mov
in
sbbl
in
and
pop
sbb
rorl
mov
sbb
jle
pop
pop
pop
lods
and
and
xchg
lea
mov
movsl
pop
jecxz
adc
push
or
mov
sub
add
xor
das
or
dec
lock
push
push
mov
es
loop
or
push
lods
inc
hlt
adc
pop
cltd
cmpsl
and
mov
pop
gs
or
fwait
sbbl
rcrb
and
push
fstpt
mov
sub
cli
scas
or
and
lds
push
sub
add
mov
push
and
xor
pop
stos
mov
cmp
cld
cwtl
call
jb
aad
bound
mov
cmovnp
sub
xchg
and
and
out
mov
push
and
mov
insl
adc
push
adc
ja
inc
mov
add
test
adcl
faddl
sub
sub
sbb
pop
sbb
xchg
les
cltd
test
jne
leave
clc
mov
dec
xor
push
jnp
fcompl
or
or
jg
pop
repnz
pop
pop
lea
xor
aaa
cwtl
sub
lea
lret
hlt
push
lods
xchg
inc
mov
out
insb
cmc
mov
cld
cwtl
mov
push
pop
xchg
fstpl
mov
je
push
inc
or
daa
sbb
or
jb
js
mov
cmp
imul
push
pop
inc
roll
fstps
int
xor
adc
sub
aas
rorl
pop
sbb
dec
and
scas
leave
dec
aad
pushf
xchg
adc
xor
je
pop
subb
adc
insl
adc
cwtl
mov
xor
and
sub
mov
insl
je
push
ret
mov
hlt
jl
sbb
mov
inc
push
daa
orb
fnstenv
js
pop
mov
cli
fdivrs
add
pop
jno
fs
es
mov
movl
mov
jmp
in
out
popa
jb
push
or
or
fmuls
mov
out
mov
sub
in
inc
cmp
push
dec
in
lcall
push
push
adc
push
lahf
in
push
adc
cmp
orps
repz
push
aam
fsts
loop
xchg
add
ss
mov
jno
add
push
push
cmp
inc
inc
inc
lds
sub
cmp
in
pop
mov
inc
add
lret
xchg
jns
adc
repnz
rcll
mov
ret
xchg
mov
mov
adc
call
mov
push
xor
pop
mov
mov
jecxz
call
pop
mov
fadds
lret
sbb
js
mov
rcr
cmp
fsts
mov
rolb
and
aad
add
xor
clc
or
xchg
out
insb
xlat
inc
sbb
xor
fbld
sar
pop
pop
mov
cwtl
mov
loop
lret
adc
xor
ret
mov
mov
mov
inc
pop
mov
lods
setge
add
psubb
bound
leave
pop
add
adc
add
mov
mov
ret
std
cld
jnp
xchg
push
mov
jmp
les
loop
lock
imul
js
fs
loop
mov
fildll
ret
in
fwait
mov
stc
mov
jmp
push
cmp
addr16
jb
sbb
and
test
mov
xchg
pop
cmp
shlb
roll
xor
test
pop
xchg
out
fisubrs
push
jae
fdivs
jb
adc
pop
sbb
ja
jp
fbld
inc
push
popa
xchg
push
and
adc
lret
inc
nop
inc
sbb
std
fsts
gs
ja
inc
aas
pop
cmp
push
push
or
mov
bound
ljmp
roll
lds
dec
lds
xchg
and
movzbl
push
cmp
loope
xchg
sub
cmpsl
sqrtps
cmp
cld
add
or
cmp
inc
dec
cmp
negb
sbb
pop
mov
lea
lret
out
fwait
add
call
cli
repnz
seta
ret
in
jg
ror
xor
mov
jbe,pn
fs
push
sbb
xor
pop
pop
add
mov
mov
and
in
pop
int
aas
adc
les
popf
test
mov
mov
out
mov
movb
pop
int3
pushf
cwtl
and
xor
mov
mov
sub
sub
bound
dec
xchg
pop
arpl
mov
fimull
cmpsl
and
and
icebp
clc
pop
stc
jecxz
dec
movsb
out
sub
add
lods
mov
xlat
testb
andl
jge
mov
sarb
mov
cld
sub
push
outsb
pop
out
les
add
mov
adc
sbb
aaa
adc
mov
pop
cmp
adc
xchg
sub
mov
mov
aas
test
or
push
mov
mov
test
mov
fs
pushf
fmul
mov
aad
lods
lods
outsl
addr16
ja
jg
push
or
mov
stos
jne
dec
mov
rcll
cmp
cmp
jo
std
adc
mov
pusha
push
add
sub
add
adc
mov
test
cmp
fldenv
cmp
int
mov
and
push
mov
jmp
enter
out
mov
addr16
fadds
sub
popa
jp
in
cmpsb
jecxz
call
fcomip
psrad
pushf
add
jge
test
adc
jge
pop
adc
fadd
aaa
mov
mov
xchg
jnp
jno
mov
clc
pop
adc
lea
insl
pop
xchg
add
push
sub
push
aaa
mov
xchg
stc
jmp
mov
jbe
rcrl
pop
sbb
and
xlat
rclb
dec
movsb
jp
fcoms
test
and
adcb
add
mov
aas
mov
add
dec
sbb
pop
dec
stc
ja
enter
int3
enter
shrb
call
hlt
cmp
aas
movsb
sbb
enter
jp
leave
lcall
cmp
push
pop
mov
xchg
js
dec
addr16
cmp
rclb
push
mov
lret
fcomps
mov
mov
lock
jns
shrb
andl
pop
movsl
out
xchg
loope
and
inc
push
add
cmp
inc
inc
fcmovbe
push
mov
sbb
mov
sbb
xchg
pop
mov
adcl
mov
outsl
popa
int3
frstor
xchg
fsts
mov
test
pop
push
add
addr16
sub
div
jecxz
divl
mov
insb
dec
xchg
sarb
ret
fsts
inc
les
fimuls
mov
rcl
in
add
movsl
out
push
mov
xlat
adc
std
bound
inc
movq
push
xchg
and
or
cmpsb
stos
pushf
movb
test
push
push
inc
cmpsl
mov
cld
mov
loopne
jl
sub
mov
mov
les
mov
adc
pop
push
dec
cmp
stos
jle
xor
cmpsl
loope
adc
call
jno
or
xchg
mov
push
test
in
lret
cmp
fdivrl
and
push
sahf
fwait
mov
push
mov
in
mov
call
jge
sti
mov
push
insb
pop
data16
in
push
xor
out
xchg
test
sahf
mov
mov
call
mov
cmp
cmp
cs
cld
dec
pop
es
and
sbb
mov
int
aaa
je
imul
xor
lret
xor
push
inc
dec
cmp
movsb
jmp
aad
pop
add
xor
pushl
push
cmp
ret
fs
aam
andb
insl
repz
scas
xor
out
lahf
pop
fdivl
push
dec
push
into
pop
xchg
in
fistps
cltd
sti
sbb
jg
lret
add
push
push
fiadds
loopne
fstl
add
lock
repz
shll
or
mov
jl
in
clc
push
sti
negb
and
rorl
repnz
or
mov
xor
sti
jl
add
dec
push
lods
jge
jp
sub
pushl
cld
aas
pop
mov
adc
push
xchg
adc
mov
repz
mov
inc
shrb
aas
inc
mov
ds
fildll
loopne
mov
out
aam
in
mov
lcall
cmp
mov
aam
cmp
loop
incl
lods
rolb
xlat
jb
inc
jl
out
sub
add
inc
pop
imul
push
xchg
jl
cmpsl
inc
mov
or
inc
jmp
in
loope
xchg
insl
iret
adc
bound
aas
std
ss
test
dec
scas
rcr
push
mov
xlat
test
js
or
aas
mov
mov
mov
dec
fs
xchg
ljmp
dec
lret
push
fcmovb
jb
mov
test
lret
ljmp
dec
mov
mov
sbb
push
rcl
jns
xchg
pushf
cmp
inc
inc
int
mov
pusha
and
scas
nop
mov
jnp
jl
inc
ljmp
pop
sub
pusha
inc
test
xor
ret
mov
call
pop
mov
lahf
add
jno
mov
cs
repz
mov
adc
ds
rclb
dec
fiadds
mov
mov
and
lcall
test
cmp
add
pushf
lds
push
inc
lea
mov
sti
adc
add
push
and
lret
roll
mov
addr16
fists
add
push
test
sahf
adc
test
je
lahf
pop
popa
sbb
push
aaa
dec
nop
dec
fisubs
push
adc
mov
push
cmp
lds
hlt
fnstenv
xor
std
test
popf
sbb
bnd
adc
sub
movsb
or
push
mov
lock
das
imul
inc
xor
pop
js
push
cld
iret
lods
mov
sti
stc
sti
xchg
xor
jecxz
orl
jg
sar
ja
in
fs
icebp
dec
push
jle
cmp
sub
fldenv
push
loope
imul
mov
push
dec
xchg
into
push
dec
daa
mov
ficompl
imul
jns
enter
out
jp
in
mov
mov
outsb
dec
mov
insb
cmp
loop
sbb
mov
dec
jmp
mov
pop
adc
in
mov
mov
push
push
inc
mov
cmc
lret
dec
sbb
cmpsl
je
lahf
add
lret
add
dec
fistps
sub
outsl
xor
lret
mov
movsl
in
mov
je
insl
gs
push
inc
pop
push
push
mov
rorb
mov
or
lods
xor
push
inc
dec
or
test
xor
leave
fidivl
aas
clc
ljmp
in
negb
sbb
sbb
inc
sub
cmp
aas
imul
data16
cmpsb
xchg
jmp
sbb
xchg
add
test
mov
or
mov
push
mov
pop
popf
sbb
or
popf
std
rolb
pop
into
push
into
fcmovnu
stos
jo
mov
out
xchg
iret
inc
mov
repnz
push
xor
jo
aad
faddl
inc
test
iret
push
xchg
ss
dec
mov
mov
mov
mov
or
call
mov
mov
jne
mov
sbb
lock
push
jl
loop
stos
out
cmp
cmc
lret
ret
pop
mov
out
rcl
or
in
shl
push
mov
xchg
mov
test
and
adc
repnz
mov
popf
je
mov
ss
bound
mov
add
cmpsb
dec
jno
or
xor
adc
fsub
cmpsl
inc
je
cltd
ret
adc
rcll
pop
lea
inc
loop
ss
push
aam
mov
mov
push
xor
test
aad
cs
dec
movsl
lods
inc
bound
movsb
xor
pop
push
dec
ja
xor
cmp
daa
xchg
jne
enter
push
clc
ds
gs
popa
push
and
xchg
in
lcall
jns
sub
cwtl
jge
sbb
adc
or
mov
cmpsl
cmp
lret
jnp
cmp
jae
and
shrb
mov
pop
cmp
jl
mov
dec
jp
mov
enter
sub
cmp
out
sbbb
lods
sbb
inc
or
bswap
add
ret
outsl
pop
xor
xor
jae
fnstenv
shll
test
leave
inc
dec
push
pop
fisubl
pop
xchg
test
mov
or
push
sbb
les
iret
rcr
nop
xor
push
push
inc
mov
ja
push
and
mov
not
mov
add
inc
cmp
pop
lods
js
adc
mov
sbb
or
inc
push
dec
sbb
dec
push
xchg
out
jmp
add
mov
cltd
xchg
or
in
call
mov
sbbl
sbb
lcall
jb
fimull
mov
dec
hlt
xchg
iret
xchg
dec
push
push
cmp
imul
push
cmc
or
mov
cmp
lods
and
mov
jno
and
push
adc
sub
out
sub
movsl
adc
out
inc
jno
mov
xchg
mov
jl
movsb
xor
mov
or
ret
ficoml
push
cld
aaa
xor
mov
pop
inc
lock
jns
dec
and
int3
push
xor
cmp
std
mov
inc
dec
adc
into
stos
and
das
jns
cld
clc
xchg
outsl
dec
aad
mov
test
shlb
sub
mov
cmc
pop
test
push
sahf
cmp
rcrl
jecxz
mov
xchg
inc
mov
dec
outsb
push
fistl
dec
dec
lds
push
shl
out
insl
pop
fmull
inc
lahf
enter
ror
jbe
push
dec
adc
inc
loope
inc
outsb
pop
jp
mov
jbe
repnz
ss
xor
xchg
data16
sub
mov
inc
xchg
or
xor
jnp
mov
mov
dec
xor
sbb
adc
and
jb
dec
test
mov
fs
mov
jg
mov
sbb
sub
fmul
pusha
pop
in
or
inc
xor
fdivl
sbb
add
push
inc
fdivs
inc
inc
add
test
xor
aaa
pop
xor
sub
out
test
fwait
cs
push
into
mov
mov
adc
ret
mov
adc
push
cltd
sbb
data16
cmc
push
pushf
in
test
or
push
push
outsl
mov
mov
push
nop
test
sub
ds
cmp
lcall
sub
cli
adc
mov
nop
xor
sbb
pop
mov
stos
outsl
bound
sub
ja
out
mov
add
jae
rolb
push
xor
xchg
mov
sbb
into
jae
clc
jl
xchg
cmp
mov
jb
dec
xchg
xchg
ret
mov
mov
xchg
and
mov
mov
popf
icebp
ds
or
push
mov
inc
adc
into
jmp
cmc
ret
xchg
jp
mov
imul
push
xor
lahf
test
push
adc
jae
cwtl
dec
mov
iret
inc
mov
adc
ret
push
test
imul
loope
loop
lcall
ja
repnz
xchg
cmpsb
cmp
or
or
dec
mov
addb
xchg
loopne
mov
sub
test
shrl
test
sarl
stos
push
dec
mov
movsl
adc
cs
inc
popa
sbb
pop
jnp
lods
fwait
lock
mov
sbbl
scas
andb
aad
iret
mov
int3
fwait
mov
and
imul
sub
mov
mov
loop
add
popa
pop
lods
int3
and
in
cmpl
nop
push
insb
outsl
imul
lret
pop
adc
test
cmc
scas
idivl
pushf
or
pop
add
fdivrl
mov
loope
cmp
adc
fisttps
lea
mov
xchg
sub
ret
push
add
mov
mov
mov
sbb
jo
push
pop
aad
pop
fldt
js
fwait
out
lret
js
fisubrl
push
inc
ljmp
sbb
das
into
pop
sar
jle
inc
pop
mov
cmp
icebp
aaa
xchg
mov
mov
mov
stos
inc
fisttpll
fst
jle
pop
popa
outsb
ret
std
sbb
mov
cmc
fstps
push
mov
add
in
les
mov
mov
jno
xchg
and
js
push
aaa
fimull
int
mov
lds
xchg
std
arpl
negl
xor
imul
mov
jge
je
cmp
sbb
inc
stos
in
sub
les
in
pop
add
lods
cmc
outsb
sub
in
int
xlat
mov
xor
movsl
movsl
pop
dec
fadds
sub
cmp
inc
test
pop
lahf
and
ljmp
mov
stos
jno
cmp
stos
sub
loope
adc
add
mov
mov
loopne
push
leave
in
cmp
dec
hlt
fsub
cmpl
enter
int3
inc
jecxz
and
pop
aam
sti
pop
std
xor
xchg
pop
cwtl
int3
push
outsl
mov
mov
ljmp
stos
test
shlb
int
js
add
fcomps
add
push
inc
pop
mov
push
movsl
jno
xchg
add
loop
jmp
xlat
roll
fwait
in
popf
lahf
push
sbb
inc
push
clc
or
sub
lea
sub
rcr
notb
cmpsl
add
mov
aas
cs
outsb
repz
scas
mov
mov
cs
xchg
ja
xchg
out
jnp
jmp
mov
test
dec
jg
jmp
lcall
ret
sub
lods
inc
fdiv
fisubl
lea
scas
out
add
movsb
pop
cli
and
dec
or
cmc
push
xor
sbb
test
add
push
fsubl
rcll
les
dec
stos
inc
lea
fs
in
enter
and
adc
in
call
jbe
bound
les
mov
add
lods
push
sbb
lods
pushf
and
sbb
adc
jae
test
jb
lret
insb
out
mov
adc
sbb
lret
mov
leave
push
add
push
fistpl
in
mov
adc
sub
in
pop
roll
xchg
push
inc
pop
out
pop
aam
inc
push
dec
testb
stos
pop
ret
movsb
daa
mov
fwait
push
adcl
or
jno
ds
xchg
rcll
add
jbe
xchg
stc
push
inc
cs
xor
rcl
mov
lds
daa
imul
and
push
popa
xchg
ss
rcll
xchg
push
icebp
mov
shlb
les
sarl
xor
lods
aaa
loopne
in
add
mov
into
xor
mov
std
lock
fbstp
mov
push
sbb
pop
lret
lret
inc
sbb
sarl
stc
jmp
push
pop
ss
cmpsl
cmpl
or
stos
insl
cli
adc
rcrl
sub
das
in
div
push
subl
inc
aas
testl
nop
jnp,pt
jae
cmp
aad
cmpsl
shl
push
lds
imul
es
dec
adc
and
mov
mov
movsl
push
clc
push
jp
and
sbb
xor
mov
jns
jne
adc
ret
mov
adc
xor
insb
jnp
repz
dec
icebp
xchg
jne
inc
pop
dec
lret
pop
call
mov
xchg
pop
aam
adc
mov
xchg
jae
clc
pop
cld
out
push
add
int3
xchg
sbb
jp
hlt
mov
shrl
and
int
xor
mov
sbb
movsb
inc
insb
lea
mov
mov
movsb
rol
and
sarb
jb
or
sub
push
dec
hlt
pushf
pusha
jns
arpl
sbb
inc
mov
inc
cmp
outsl
leave
or
sti
push
jns
and
loope
sbb
push
inc
push
mov
daa
dec
imul
lcall
pop
xchg
mov
mov
mov
mov
lret
movsb
popf
das
cmpsl
xor
out
test
cmp
or
pop
inc
sbb
sbb
push
test
gs
dec
lret
rorb
out
insl
mov
scas
aas
jne
cwtl
add
push
stc
fstl
sub
aas
ret
out
inc
aam
mov
outsl
fdivrl
adc
mov
adc
icebp
aas
cmp
and
push
adc
loop
xlat
mov
mov
dec
outsb
jl
push
es
push
cmpsl
jns
adcb
ds
fisubrs
ljmp
inc
add
cmp
xor
jno
fadds
stos
xchg
nop
movsl
and
shlb
push
xor
push
out
mov
xchg
mov
fsubrp
adc
add
and
dec
inc
fildl
test
sub
xor
cli
push
pop
mov
imul
leave
sub
sub
repz
popf
inc
jno
and
fisttpl
xchg
inc
popf
call
and
js
jnp
arpl
push
dec
mov
or
shll
insl
in
sub
push
xor
jp
adc
xchg
test
push
or
cmp
mov
cmpsl
les
in
add
mov
pushw
jmp
or
push
push
outsb
je
push
cmp
rclb
jo
sub
stc
add
xchg
lock
mov
pop
sub
push
cld
and
xor
lods
cmpsl
ljmp
mov
je
or
imul
cs
lcall
cmp
outsb
test
dec
mov
xchg
push
inc
lods
daa
add
mov
test
cltd
cmp
sub
cmp
sub
rcl
pop
mov
mov
push
mov
push
testl
inc
mov
sbbb
mov
sbb
mov
scas
cmp
jne
sahf
sahf
xlat
push
inc
fidivs
pop
push
lds
xchg
mov
dec
xchg
jbe
popl
mov
icebp
adc
xor
popf
dec
push
push
repz
inc
or
push
sub
rorl
adc
jb
lcall
lret
or
shrb
pop
add
pusha
dec
leave
repnz
int3
mov
pop
inc
lock
add
push
or
push
or
sahf
inc
std
or
push
jo
in
test
dec
inc
out
int
andl
sbb
cmp
mov
sub
or
sub
aad
shl
inc
fdiv
cmp
adc
pop
xor
dec
mov
or
idivl
cs
pop
lods
sbb
orb
ja
clc
inc
ljmp
int3
xchg
cmpsl
in
subb
and
and
add
sub
or
jecxz
rorb
xor
inc
add
xor
stos
add
jge
sbb
push
push
test
or
pop
shll
push
add
or
call
sbb
std
addr16
cmp
or
push
fbld
loopne
loopne
sarb
pushf
jl
scas
xchg
push
fs
fsubs
incl
int
pop
sbbb
ss
adc
shll
in
leave
stos
das
cld
cmpsl
loope
xchg
dec
lcall
jbe
cmpsl
mov
insl
mov
sbb
hlt
mov
ljmp
mov
mov
mov
into
push
pop
gs
lea
lcall
mov
xor
sbb
lcall
loop
jb
lea
test
insl
or
in
push
push
int
in
jne
pop
sub
mov
pop
loopne
jo
jp
mov
adc
push
push
movsb
jnp
ret
fistpl
mov
or
jne
mov
mov
pusha
je
mov
imul
bound
test
pop
add
pop
mov
int3
adc
xchg
arpl
pop
xchg
xor
shlb
int
das
sub
adc
js
cs
xchg
mov
shl
mov
push
js
pop
out
xor
xor
sbbl
mov
pop
int3
dec
cwtl
stc
lods
xlat
loopne
lret
fwait
shrw
and
dec
xchg
pop
out
lea
fsubrs
in
lret
cmp
mov
lds
push
push
stc
mov
dec
mov
ret
in
in
jg
bound
dec
stos
ret
popf
ss
sbb
in
mov
jge
mov
jne
mov
pop
push
sub
pusha
mov
adc
cwtl
out
outsb
adcl
and
or
lret
xor
and
shlb
jg
inc
flds
sahf
and
fdivs
inc
fsubs
jnp
inc
lret
lock
pop
bound
sbb
mov
inc
xchg
pop
jno
int3
xchg
or
dec
jp
mov
out
mov
shll
push
xchg
mov
jmp
fwait
aas
pusha
or
jnp
popf
clc
outsb
or
cmpsb
add
adc
xor
pop
iret
inc
les
fwait
dec
mov
xchg
xchg
and
std
outsl
testl
es
jl
inc
sahf
xchg
jmp
stos
cmpsb
mov
movsb
push
cmp
pop
imul
fmull
lea
xchg
cmp
push
ret
jl
cmp
push
out
leave
and
out
adc
cmp
test
out
inc
int3
push
ds
in
cmc
ja
int3
int3
add
cmp
punpckhdq
cmp
and
cmc
cli
test
mov
and
jne
sbb
icebp
push
jmp
mov
aad
test
mov
and
push
and
dec
popa
xor
mov
std
push
xchg
mov
lret
xchg
sbbl
xchg
xchg
dec
int
movsl
inc
mov
push
andl
sti
inc
or
mov
xchg
dec
mov
dec
test
dec
push
push
loopne
shlb
cmp
and
mov
cs
xchg
push
add
jp
dec
mov
push
sub
sub
inc
fistpl
mov
pop
mov
insb
stos
lods
mov
ret
fidivrs
dec
repz
mov
push
lahf
je
or
stc
js
sbb
add
lods
shr
push
insb
push
les
mov
pop
movsl
hlt
cmp
mov
scas
movsl
std
mov
enter
or
inc
gs
aaa
mov
pop
push
sub
sub
fisttpll
ret
dec
outsl
fwait
adc
daa
fwait
jae
xlat
sub
pop
repz
arpl
xor
adc
call
fstpl
mov
pop
sbb
les
lock
xchg
inc
aas
adc
xchg
and
lret
outsl
xchg
jmp
jecxz
insb
and
fidivl
test
repz
sub
int3
shr
pop
push
inc
jbe
add
and
hlt
or
sub
scas
fiadds
lea
test
addr16
repnz
notb
iret
cs
mov
clc
fstps
shll
pop
dec
sbb
mov
xchg
cmp
loop
bt
fwait
out
and
addr16
sub
lcall
xor
call
lcall
dec
xchg
mov
push
xchg
pop
sub
popl
in
adc
test
dec
or
jb
mov
xor
in
pop
popf
pop
in
xor
bound
pop
stc
mov
rorb
lock
sub
xlat
jnp
adc
test
push
mov
mov
sub
push
int3
push
das
fwait
mov
jle
das
lods
hlt
test
jge
bound
cmp
das
test
jne
mov
ret
push
xchg
inc
xor
dec
scas
leave
push
loop
lea
inc
in
jo
mov
sbb
test
imul
mov
or
mov
movsl
sbb
mov
sbbb
cmp
lahf
xchg
fcoml
push
sub
mov
lods
cld
jns
pop
das
mov
sbb
xor
mov
add
out
popf
xchg
xchg
dec
je
dec
push
pop
fisubl
and
inc
cmp
dec
fnstenv
and
adc
scas
xor
pushf
je
hlt
icebp
lret
les
std
sub
inc
cmp
icebp
cwtl
cmp
push
hlt
and
fstpl
inc
arpl
push
repz
push
gs
xlat
loope
dec
std
jl
fs
jb
xor
arpl
mov
pop
loopne
mov
idiv
adcb
xchg
add
mov
rcrb
ja
scas
mov
ljmp
clc
mov
cmp
int
fidivl
test
xchg
cmpsb
push
inc
and
lods
out
test
or
xchg
fldcw
mov
fwait
jge
mov
cmp
push
faddl
mov
dec
repnz
cmp
xorl
lods
mov
cmp
mov
push
nop
hlt
inc
mov
sub
pop
mov
mov
push
addr16
in
clc
pushf
aam
insb
shrl
add
xor
jnp
sub
push
fcomi
fnsave
mov
imul
mov
insb
sahf
or
pop
cmp
in
xor
js
jb
sub
pop
cmp
push
lods
cmc
dec
pop
imul
ljmp
mov
jo
pop
fcoms
sbb
pop
inc
fs
sbb
bound
pop
mov
pop
mov
sbb
pushf
xlat
xor
add
pop
loope
mov
fcmovu
xchg
scas
dec
mov
outsb
out
ret
cmpsb
psrlw
loopne
subb
in
call
push
in
in
dec
dec
aam
sbb
cmpsl
mov
xor
jge
fs
jmp
push
adc
lcall
popf
mov
pop
add
movsb
push
and
pop
mov
call
xchg
sahf
dec
mov
cmp
and
mov
loop
cmp
mov
scas
lods
dec
out
push
mov
mov
pop
stos
lret
adc
mov
out
mov
xchg
pop
mov
xor
cwtl
loopne
xchg
insl
xor
aad
icebp
xlat
jmp
test
fstp
sbb
adcl
dec
aaa
out
es
and
xchg
cmp
jmp
insl
xchg
mov
adc
idivb
fninit
dec
push
fmull
lcall
jg
aaa
sarb
out
sbb
dec
add
divb
and
or
xor
imul
mov
les
cli
pop
xor
lret
aaa
mov
jo
imul
jns
jo
mov
sub
out
popa
add
add
and
jle
sub
mov
sbb
mov
enter
mov
aas
js
incb
xor
jno
pop
or
sbb
pop
mov
icebp
pop
push
mov
nop
lock
cwtl
mov
and
push
pop
lcall
sbb
stc
adc
sub
loop
gs
push
test
movsb
fistpll
pop
lret
push
stos
rcl
mov
cs
xchg
js
lret
push
add
jl
inc
jecxz
xlat
cmpsl
loop
imul
les
mov
test
pop
adc
pop
lock
inc
in
ljmp
inc
loope
ret
pusha
mov
pop
push
sahf
out
jns
cmpsl
dec
dec
inc
push
das
dec
ss
jl
imul
lret
int3
aas
out
lds
push
out
jb
pop
adc
cmp
outsl
mov
das
outsl
movsb
sti
dec
mov
scas
pand
sti
fs
mov
pop
xor
push
das
mov
insl
pop
repz
inc
sti
xor
in
mov
pop
xchg
xchg
lods
sub
push
inc
xchg
lahf
out
jns
test
ljmp
inc
sub
add
aaa
ja
push
sbb
lods
mov
je
add
shrl
dec
scas
sahf
xor
sbb
add
sbb
les
inc
mov
and
aad
das
bound
insl
test
mov
push
dec
cmpsl
mov
add
stos
adc
and
cmp
outsl
xchg
xor
and
jb
jno
jae
lods
cli
std
adc
scas
fidivrl
inc
jo
mov
xor
add
push
jmp
pop
shld
mov
cmp
orb
loope
fstps
sbbl
sahf
xchg
je
into
repnz
outsl
push
int3
sub
call
xchg
add
xor
xor
dec
dec
inc
inc
and
jl
adc
xchg
jb
fcom
call
add
push
icebp
sub
jmp
xlat
xor
fdivl
lods
pop
mov
out
adc
add
sti
jns
bound
sti
xchg
ja
add
les
ds
add
dec
dec
push
jg
xlat
arpl
cld
jnp
push
shl
insb
imul
fnsave
push
pop
cmpsl
jnp
pop
and
jae
add
movsb
xor
test
sub
js,pn
or
and
in
or
pop
mov
xchg
sti
repnz
cltd
clc
mov
xchg
mov
bound
lods
outsl
add
dec
mov
xor
push
xor
repz
sbb
scas
or
jle
pop
sarl
sub
adc
fsts
push
dec
mov
fisubrl
orb
mov
push
adc
mov
enter
mov
jb
ljmp
jle
std
jle
out
popl
and
in
mov
ja
out
jl
orb
aad
xchg
js
shrb
cmp
ds
and
push
inc
and
push
bswap
dec
fwait
insb
push
mov
add
mov
and
loope
mov
pop
cmpsl
cltd
jp
popa
xchg
push
jno
add
jl
dec
sahf
dec
cmpsb
pop
push
cmpsl
fwait
xor
and
push
insb
mov
mov
test
pop
mov
out
out
pop
in
movsb
pop
into
mov
cmp
mov
nop
cmp
imul
mov
jno
fisubrs
je
sub
sub
fnstenv
fldenv
insb
mov
jecxz
adc
test
push
mov
shrl
mov
inc
fisttpl
xchg
cli
leave
inc
into
dec
sub
ljmp
fsub
cmp
insb
and
xor
or
dec
mov
pop
mov
loop
repnz
sub
mov
and
loope
jl
adc
lahf
jno
sbb
and
cli
test
jns
sub
outsl
mov
mov
movsl
inc
cs
mov
adc
pop
add
or
dec
mov
stc
pushf
loop
or
cmp
and
push
pop
aam
out
loop
mov
leave
and
sbb
cld
popa
lds
icebp
loop
push
in
mov
mov
incb
loopne
inc
xchg
movsl
mov
sbb
dec
test
mov
jb
or
pop
iret
mov
add
das
cmpsl
fwait
jo
les
adcb
push
fistl
jmp
mov
push
pop
loopne
jl
scas
push
pop
scas
sub
enter
adc
fdiv
or
ljmp
mov
dec
out
jmp
pop
and
push
xchg
fwait
popa
push
insl
in
push
mov
cmpsb
cmp
test
mov
mov
lcall
mov
mov
add
push
rcr
pop
lock
fs
movsb
fdivs
pusha
xchg
push
sub
xchg
sbb
fildll
xchg
dec
in
push
or
jmp
nop
push
imul
sub
inc
stos
sub
aam
ficompl
sbb
sti
xchg
adc
mov
add
push
or
stos
bound
lods
mov
divl
adc
push
xor
mov
inc
inc
or
dec
dec
orb
mov
sub
xchg
loopne
adcb
or
and
mov
push
add
cmp
mov
add
add
roll
sarb
ss
jae
je
push
sbb
xlat
negb
sbb
pop
cmc
xchg
xlat
or
xor
mov
jg
ds
lret
xchg
mov
fwait
popf
mov
xchg
addl
jmp
enter
or
mov
adc
test
mov
xor
lds
mov
jle
xor
loop
cmp
push
idivl
mov
mov
sub
push
mov
cmp
inc
clc
out
mov
cli
cs
dec
xchg
into
clc
mov
sahf
imul
loopne
dec
jb
scas
lock
scas
fwait
pop
orl
cmp
lds
fnsave
popa
push
es
sbb
or
dec
cmc
dec
fwait
out
loope
adc
mov
mov
movsl
insl
mov
or
subl
into
mov
push
xor
push
and
jno
imul
jg
inc
inc
idiv
fidivrs
jne
inc
add
mov
inc
test
pop
cs
nop
out
stos
xor
sbb
mov
shlb
xor
cmp
or
cld
add
dec
pop
repz
pusha
jbe
sub
daa
in
jnp
xor
jecxz
cmp
hlt
not
ret
lahf
xor
pop
mov
sbb
cmp
cwtl
or
jle
xlat
mov
mov
sub
lahf
leave
ficoml
pop
insl
loope
mov
out
fmulp
xchg
and
jle
mov
in
or
lods
xchg
in
out
xor
mov
fsubrl
jge
test
jo
or
hlt
insb
pop
imul
into
mov
lahf
lahf
jl
push
mov
test
into
mov
pop
stos
scas
popf
pop
insb
loopne
loope
inc
and
jo
fcoml
mov
xlat
cld
jl
dec
xchg
mov
xchg
mov
jecxz
jp
in
sub
stos
inc
lahf
lods
mov
and
and
sti
sbb
pop
fs
pushf
add
sub
sub
mov
sbb
icebp
arpl
mov
ret
or
sub
inc
mov
or
insb
xlat
sbb
arpl
mov
cwtl
dec
jo
jl
dec
scas
fists
clc
ss
and
das
idiv
mov
lret
cmpsl
jecxz
sbb
jle
in
dec
std
cmp
mov
xor
jns
aaa
mov
fnstcw
adc
xor
iret
es
faddp
cmp
data16
imul
out
or
hlt
xor
lret
test
enter
inc
fmul
ja
push
popa
imul
jl
and
out
add
mov
clc
mov
cli
lds
das
sahf
push
mov
mov
or
sub
and
lret
push
pop
cmp
mov
jo
or
pop
divb
fildll
imul
inc
xor
inc
pop
adcb
test
jne
mov
xor
gs
js
jmp
mov
cmp
addr16
into
inc
shll
lret
jle
lea
dec
lahf
or
ret
in
jle
cmpsl
push
aad
lods
mov
imul
out
clc
stos
xor
cmp
mov
decl
mov
call
sub
jns
cld
faddl
pop
stos
jecxz
and
and
loop
mov
push
sbb
cld
aad
daa
mov
mov
stos
or
mov
popa
ljmp
cs
push
add
aaa
aam
adc
int3
mov
pop
xor
adc
movsb
movsl
test
mov
call
pushf
adc
andb
aaa
scas
push
inc
daa
mov
in
mov
sub
jp
cmpsb
leave
pop
adc
dec
add
ds
rol
cmpsl
fnop
xor
les
into
or
pop
sub
or
stos
sbb
ffree
xor
cmpsb
rcr
mov
xor
xchg
pop
in
jmp
jp
sub
dec
pusha
push
pop
push
movsl
out
mov
pop
insl
push
push
hlt
dec
mov
repnz
mov
xchg
lcall
add
pop
sbb
cli
orl
out
sti
and
xchg
mov
adc
xchg
scas
inc
insl
add
pop
enter
dec
stos
fnstenv
ss
sbb
jg
dec
or
jae
in
mov
cwtl
xchg
wbinvd
clc
xor
sbb
adc
scas
dec
rol
xlat
cmp
or
mov
nop
xor
popf
pop
in
clc
and
insl
sbb
sub
outsl
xlat
mov
data16
ret
std
dec
shll
inc
shll
sbb
mov
mov
mov
imul
lds
xchg
dec
sub
popf
fs
ret
mov
int3
cmc
xorb
cltd
mov
push
icebp
aaa
imul
mov
mov
xchg
fnstcw
mov
push
out
mov
jne
enter
push
shll
mov
push
inc
cmpsb
mov
lahf
jmp
adc
sub
inc
aas
test
arpl
push
test
or
das
add
inc
sub
sub
sahf
fwait
jle
clc
ja
jnp
and
push
or
mov
push
jb
inc
mov
mov
loop
mov
dec
sbb
push
mov
repz
fdivr
adc
mov
dec
push
adc
in
xchg
jecxz
or
icebp
imul
stos
add
mov
pop
enter
mov
push
pop
minps
fbstp
jae
jo
je
mov
enter
lock
lret
adc
dec
in
xor
ror
cltd
je
add
sahf
and
pop
lods
fwait
sbb
cmp
cmp
push
xchg
adc
sahf
or
shrb
cmp
dec
fwait
hlt
dec
mov
into
sahf
ljmp
popf
sub
mov
repz
lcall
cltd
lret
mov
inc
icebp
scas
testl
add
push
xor
lcall
and
jae
sub
jecxz
jb
test
sub
xor
add
andb
out
shrl
lahf
dec
pop
popf
iret
stos
in
fdivrl
mov
and
imul
jmp
pop
mov
pop
pop
int
or
loope
mov
dec
push
jne
or
stos
lods
out
and
call
insl
jl
test
mov
xlat
fisubrs
cmpsl
dec
setns
or
pushf
bound
mov
push
jmp
dec
and
je
sbb
movsb
xor
in
test
add
int3
xor
cmpsl
sub
fabs
dec
ret
nop
xchg
push
popa
and
push
das
xchg
lea
in
xor
ja
ret
mov
sbb
push
orl
add
mov
xor
cmc
xor
jl
cwtl
jmp
xor
dec
int
pop
push
mov
fldenv
mov
ss
int3
pop
mov
bound
insb
inc
popa
lock
movsl
inc
push
mov
fwait
adc
mov
fidivrs
jp
lea
fnstenv
cmpsb
xor
in
popf
dec
mov
ljmp
sbb
pop
stc
aaa
pop
mov
xchg
sbb
out
lea
and
jg
int3
sbb
inc
in
in
pop
push
lcall
cmp
jl
mov
fisubl
add
lock
int
add
jb
clc
mov
leave
insl
cmp
pop
xchg
push
cmp
hlt
lock
sbb
dec
pusha
xchg
popf
scas
xor
add
add
ja
notl
add
clc
inc
mov
orl
scas
arpl
dec
jl
cmpb
mov
cmp
bound
xor
mov
in
sarb
movsl
jns
jmp
jl
cmp
cli
dec
int
stc
js
sub
mov
pop
into
enter
cmpsl
cmp
stc
push
sti
dec
aas
jo
cld
scas
outsl
shll
add
dec
lock
out
iret
jecxz
fwait
ljmp
dec
ljmp
jge
mov
test
push
sahf
call
push
ret
mov
xchg
movsb
xchg
aas
repz
mov
lea
push
je
stos
and
cs
or
rorb
or
push
testb
pop
mov
daa
jmp
jae
mov
stos
cmpsl
push
jecxz
inc
stos
sbb
push
and
mov
pop
gs
clc
pop
dec
jbe
xchg
repz
xor
sub
mov
call
dec
enter
repz
in
lods
loope
push
fwait
inc
adcl
pusha
and
test
pop
les
add
stos
into
fs
and
or
or
inc
adc
sti
loop
jle
mov
sub
in
sahf
sub
jle
pop
stos
inc
jmp
jl
adc
cmp
cmc
pop
repz
and
loopne
push
sbb
imul
or
sub
pop
loope
sub
test
sub
imul
mov
popf
aad
push
xchg
outsl
mov
jae
aas
mov
dec
jecxz
int
popf
jb
test
dec
push
mov
sbb
xor
dec
add
outsb
adc
mov
adc
inc
pop
nop
sub
and
and
lds
mov
jp
cmp
repz
in
out
dec
and
pushaw
fnstsw
and
in
xchg
or
cli
jnp
xchg
jno
mov
in
fbld
filds
fs
push
adc
lods
mov
in
out
cs
mov
add
cmp
jl
mov
jns
sbb
movsb
xchg
pop
stc
inc
fwait
cmp
cli
mov
loop
fists
pop
movsl
xor
push
test
lcall
pop
shrl
inc
sub
repz
ja
cld
cmp
inc
mov
cmp
incl
lret
mov
dec
rcll
mov
repnz
mov
dec
and
mov
sub
out
pop
mov
adc
repnz
push
mov
cli
jb
mov
jl
sub
les
leave
sahf
jle
mov
mov
inc
mov
je
pop
enter
adc
adc
jg
popf
mov
aad
stc
cli
lret
fstpl
fstpl
xor
pop
xchg
mov
add
pop
nop
jns
lahf
lret
sub
jecxz
and
je
adcl
imul
mov
xchg
stc
int3
data16
pop
push
cli
out
popf
mov
cwtl
pop
mov
mov
cmovb
push
pushf
mov
popa
add
out
mov
scas
and
arpl
rolb
movsb
enter
jmp
sub
cmpsb
test
mov
adc
out
add
nop
xchg
push
or
stos
mov
push
cmp
mov
sbb
clc
jge
aam
mov
loopne
cmp
mov
sub
aaa
cmp
icebp
cmp
mov
out
xlat
xor
stos
arpl
sub
xor
sub
or
inc
movsb
xor
aad
push
pop
xor
mov
in
or
or
daa
lds
dec
rcrl
lods
mov
inc
in
loop
mov
lea
addr16
arpl
arpl
jo
xorl
std
push
jmp
mov
int3
fiaddl
jno
scas
out
ret
cmp
mov
lock
xchg
and
adc
cmp
sub
movl
imul
inc
sbb
push
and
sub
or
add
and
or
and
out
test
stc
push
sub
and
mov
xchg
pop
daa
dec
stos
popf
popa
out
cmp
xor
xchg
imulb
sbb
fldcw
and
mov
mov
fld1
es
inc
cs
subb
sti
sarl
push
push
push
sbb
shll
mov
push
cltd
push
add
jle
fldl
pop
or
xor
in
cmc
mov
negb
fcmove
iret
scas
test
dec
lcall
push
inc
jl
sub
testb
mov
aas
xlat
lcall
jae
cwtl
les
xor
push
sti
pop
pop
adc
enter
cwtl
in
push
fsubl
pop
ljmp
outsl
sbb
xor
or
popf
ficoml
mov
mov
mov
rolb
pop
or
nop
lds
popa
add
aam
test
and
push
test
in
pop
insl
sub
repz
outsb
pushf
sti
es
mov
cs
fidivrl
hlt
push
jp
scas
xor
add
imul
shl
jle
pop
cmc
das
test
inc
pop
sub
aaa
je
xor
push
ss
ja
stc
add
mov
jge
shr
add
inc
push
scas
mov
adc
mov
lock
dec
jl
lods
fldl
ret
std
sbb
jmp
fxch
les
idivb
ficoms
push
xlat
mov
mov
rolb
arpl
das
push
xor
imul
nop
in
push
lret
lods
inc
daa
jno
fdivrl
int
or
push
data16
cld
sub
insl
ficoms
jnp
xchg
ja
pop
or
push
test
mov
pop
dec
push
jle
dec
pop
int3
or
jbe
loopne
ret
xor
cmp
push
sub
popl
sbb
xlat
or
fnsave
cmp
pop
or
std
fs
imul
sbb
mov
ret
push
push
pop
js
inc
ja
mov
xchg
mov
inc
lods
mov
jp
push
sbb
stos
sti
shr
rcll
mov
mov
shll
popl
inc
and
cmpsb
les
sub
push
fnclex
pop
and
rcrb
dec
jmp
add
pop
add
sbb
aam
jl
lds
mov
jne
mov
xchg
test
cmp
pop
mov
lea
mov
test
mov
pusha
sub
cmc
fwait
bound
lock
testb
dec
sub
lds
mov
push
inc
lcall
out
aam
lods
adc
out
fsubr
jo
adc
push
mov
test
mov
faddl
inc
jp
jge
dec
mov
and
sbb
push
jmp
out
jg
loopne
call
loopne
inc
push
das
xor
pop
dec
inc
pusha
sti
xor
xor
in
ficoml
into
sub
inc
mov
loopne
cli
ljmp
adc
mov
and
xchg
jmp
dec
repz
insl
or
cmp
outsl
outsb
mov
cmp
cmp
int
xchg
xchg
outsl
test
pusha
out
ds
adc
mov
sbb
jg
and
sbb
clc
dec
mov
push
and
mov
popf
or
adc
cltd
adc
cmpsb
jmp
sub
bound
mov
inc
or
iret
cmp
cmp
cwtl
mov
and
dec
adc
shll
lock
cmpsb
pop
or
hlt
xchg
pop
out
gs
cs
das
mov
pop
cltd
jle
cmpsl
mov
shl
rdmsr
aas
mov
decb
jge
inc
pop
cwtl
or
out
or
leave
leave
adc
pushf
mov
insb
add
fidivrs
adc
jmp
xlat
xchg
imul
adc
test
test
mov
push
je
xchg
and
pop
imul
jns
add
loope
test
test
insb
cld
fwait
orb
push
mov
ja
sbb
jmp
lcall
push
jae
scas
xchg
xor
dec
ds
mov
and
adc
in
cli
inc
xor
loopne
imul
nop
insb
aam
pushf
aaa
sbbl
push
in
hlt
loope
xchg
xchg
sub
push
xchg
test
and
flds
popa
js
and
ljmp
ret
fsubs
lahf
or
sub
rolb
jbe
sti
or
push
mov
adc
out
test
or
mov
shlb
decl
add
rorb
lcall
mov
sub
divl
test
lods
push
adc
out
xchg
data16
in
and
cmp
xchg
mov
in
dec
sbb
aad
pop
sub
lahf
aaa
mov
scas
int
call
shll
push
sbbb
mov
mov
push
pmovmskb
jmp
sbb
cmp
frstor
mov
out
lods
inc
das
cmpsl
jnp
in
pop
inc
mov
fst
nop
idivb
out
mov
out
jbe
add
into
in
imul
dec
and
aam
testb
mov
subl
sbb
push
bound
out
pop
mov
pop
mov
dec
inc
and
insl
sbb
mov
xor
cmc
add
or
out
insl
sbb
pop
push
fisttpll
fcoml
push
adc
and
out
test
xchg
pop
add
adc
ljmp
inc
pop
lods
lcall
push
inc
xchg
inc
insl
insb
popf
push
dec
lret
loop
mov
lahf
push
or
push
jge
inc
lea
sbb
inc
add
mov
daa
jne
mov
mov
enter
xchg
jmp
adc
pop
sub
lods
and
test
cwtl
lahf
int
cmp
jle
int3
outsb
cmp
jb
xchg
or
movsl
mov
inc
xchg
mov
jmp
repz
lahf
shll
les
sub
adc
cs
cmp
aad
in
into
push
cmpsl
mov
lods
test
mov
add
fisttpll
lcall
test
cmp
sahf
or
mov
fwait
or
insl
mov
mov
mov
inc
insb
xchg
adc
shlb
dec
or
xchg
and
lret
insl
and
add
ljmp
add
xchg
push
imulb
das
or
sti
or
pop
mov
leave
das
or
int
stos
fs
fldcw
popf
pop
ljmp
dec
jae
mov
inc
stos
ljmp
ret
add
mov
or
xchg
nop
lahf
xchg
sbb
pop
lahf
dec
leave
mov
stos
lret
push
out
inc
sbb
lods
mov
std
repz
mov
sbb
xor
push
dec
pushf
mov
push
shrl
jl
push
adc
lea
or
insl
in
fcmovbe
mov
mov
xor
push
dec
clc
insl
cmp
int
push
lahf
mov
ja
cmp
icebp
idivb
cmp
fsub
cld
adc
jmp
jmp
fldt
roll
shrb
xor
inc
cmp
add
dec
mov
sub
pop
jb
stos
repz
dec
call
jge
insb
sbb
pop
dec
gs
enter
adc
icebp
jmp
or
pushf
pop
int
adc
and
xchg
fcmovb
lcall
jge
fdivl
pop
mov
mov
lahf
lods
rcrb
mov
mov
mov
pop
rcrl
mov
push
push
insb
movsl
mov
push
push
out
push
dec
enter
adc
dec
and
add
clc
mov
in
xor
sub
bound
sbb
std
aam
cmc
outsb
clc
xlat
or
repnz
xchg
decl
mov
cmp
inc
xor
add
daa
les
fidivrs
cwtl
test
jmp
test
into
inc
cs
mov
mov
inc
insl
orl
add
fadd
mov
add
ds
dec
pop
add
cmp
inc
movsl
sbb
cli
popf
push
inc
pop
stc
push
inc
sub
pop
push
scas
loope
in
and
add
mov
in
jmp
adc
jmp
lods
aad
ret
ja
rcr
scas
aas
pop
push
gs
mov
sbb
int
mov
clc
lods
icebp
xlat
push
test
clc
add
leave
jb
rcll
test
test
adc
outsb
nop
in
push
jo
xor
mov
pop
test
inc
mov
mov
inc
int
cwtl
ret
xchg
into
cltd
jne
cwtl
or
mov
add
pmaxsw
jge
xchg
data16
stos
clc
fsubrs
or
insb
mov
clc
cmpsb
xlat
sbb
push
add
pop
js
lcall
add
sub
xor
sub
or
repz
stos
inc
push
das
int
in
adc
pop
mov
stos
mov
xchg
fsubs
test
fs
sbb
addb
bound
fwait
les
jno
dec
cmpb
and
pop
icebp
sahf
aad
mov
adc
adc
js
add
lock
inc
divl
pop
mov
loope
fisubs
push
test
icebp
pop
sub
cmp
sbb
repz
lods
fnstsw
sub
xor
stos
test
xchg
pusha
ljmp
imulb
fxch
pop
mov
pop
loope
xor
icebp
in
mov
jns
jae
pop
fnstcw
mov
bound
xlat
push
or
push
pushf
xor
sub
push
mov
jae
xchg
clc
sub
or
cmpsb
mov
and
dec
shl
xor
int3
ja
sbb
pop
das
sbb
adc
stos
fmul
sbb
mov
mov
xor
jbe
mov
jne
and
iret
fldcw
add
cmpsl
in
scas
sbb
cmp
stos
mov
dec
fisttpl
dec
call
outsl
lds
nop
test
rcrb
cmc
xor
pop
fisttpll
cmp
inc
inc
dec
mov
loopne
push
dec
cmpl
cld
pusha
push
inc
push
sub
leave
pop
add
jo
cmp
addr16
push
cs
shlb
xchg
cmp
push
jp
xor
adc
jb
fisubrl
sbb
into
iret
loopne
or
fxch
mov
lcall
dec
shll
lods
pop
arpl
mov
inc
dec
sub
movsb
or
push
iret
mov
outsl
stc
xchg
fdivl
push
shll
shll
inc
jle
pop
mov
fidivrs
aam
mov
xor
xchg
push
xlat
mov
push
hlt
xor
adc
pusha
cwtl
addr16
cmc
inc
cmpsb
leave
pop
jbe
loope
cmp
lret
bound
mov
mov
dec
mov
lods
push
call
mov
inc
mov
mov
inc
in
pop
jl,pn
inc
jne
mov
mov
movsb
fmul
cmp
call
sti
and
add
mov
outsb
mov
mov
pop
nop
popf
fs
mov
mov
ja
int3
arpl
clc
enter
repz
dec
mov
sbb
int3
lahf
and
lret
int
rcrb
lea
jb
cmp
subb
enter
cld
dec
insb
push
movsb
add
call
push
adc
aas
lea
sbbl
addr16
jecxz
jg
out
and
fstps
xlat
jl
repz
insl
lock
loop
cli
mov
rcrl
fmul
push
mov
sbb
sub
adc
xor
fstl
cwtl
call
lds
jb
in
jno
out
outsb
sti
or
ja
sti
jg
lcall
clc
ds
dec
mov
jae
xor
jecxz
es
fnsave
inc
push
mov
insl
mov
mov
inc
push
dec
xor
mov
mov
add
mov
int3
inc
mov
mov
sti
push
or
or
js
lods
fidivl
xorb
leave
outsb
inc
int
rolb
xchg
push
fwait
xchg
mov
push
mov
dec
mov
mov
sbbl
leavew
ret
fs
xor
push
mov
or
cmpsl
fs
mov
lret
test
popf
inc
or
ljmp
cmp
addr16
rcll
adc
jb
cli
lret
loope
mov
sahf
or
lock
scas
inc
xchg
jmp
stos
in
mov
lret
jb
not
dec
and
or
rcll
sub
aas
mov
cmp
test
mov
mov
adc
jl
insl
cmpl
test
outsl
mov
dec
or
pop
and
shrb
outsb
movsl
lods
movb
popa
and
pop
and
mov
sub
xor
push
and
rcrl
or
daa
jge
cli
cmc
sahf
jg
sar
ret
das
sbb
cmp
mov
mov
movlps
das
sahf
pop
push
or
aad
jl
sar
push
push
lods
lock
dec
cmp
mov
xchg
pop
leave
nop
jecxz
int3
jnp
les
sub
mov
das
mov
fildll
jg
daa
fmulp
scas
mov
pop
sub
scas
inc
add
test
sti
pusha
sahf
fadd
daa
out
xchg
push
or
jmp
mov
cmp
std
jle
or
sbb
test
arpl
ds
jb
mov
mov
in
dec
insb
out
insb
sub
ds
and
jbe
xchg
mov
mulb
dec
lods
int3
aaa
pop
loopne
clc
jbe
ret
mov
out
outsl
scas
jno
cs
loop
shlb
and
ret
repz
and
mov
mov
dec
sbb
out
cmp
stos
inc
jg
push
and
mov
enter
jl
inc
jne
fldcw
or
gs
pop
mov
out
neg
push
fdivl
ret
rorl
outsb
cmc
aam
sub
jmp
sbb
xor
sbb
xchg
pop
mov
pop
dec
jae
sub
and
imul
pop
jo
into
out
push
std
js
notl
fmulp
mov
pop
mov
mov
test
aam
push
mov
jge
cltd
push
pop
lahf
xchg
int
lahf
add
insb
jle
test
scas
pop
in
mov
push
push
outsb
pusha
cmp
cmpb
xlat
scas
inc
out
das
mov
mov
pop
scas
scas
into
and
jle
cs
sub
mov
pop
fmuls
je
in
bnd
cmp
roll
or
iret
push
and
insb
sub
mov
sbb
lahf
out
stos
out
mov
test
mov
nop
in
adc
adc
adc
adc
adc
inc
call
ret
push
cltd
cmpsb
xor
mov
inc
mov
mov
sub
push
inc
add
dec
enter
jo
push
add
repz
dec
and
mov
je
popf
les
paddusw
or
cs
int
je
fsub
scas
arpl
dec
movsb
movsl
ds
cmp
inc
mov
movsl
mov
sub
movsb
pushf
add
mov
adc
addr16
test
nop
aas
mov
bound
stos
fsubs
in
ficoml
adc
push
jp
rcll
in
lahf
cmp
fistpl
mov
shrl
sbb
nop
jge
push
popf
test
cmp
or
mov
cli
add
fsts
adc
fcoml
incl
adc
mov
add
clc
and
push
hlt
shl
ret
mov
xor
out
cmp
cmp
rorb
mov
repz
inc
in
imul
xlat
mov
or
mov
jp
inc
jns
jg
fcmove
add
popa
mov
repnz
xchg
lock
adc
bound
push
aam
lahf
loope
cmpsl
mov
ds
jb
jg
dec
fldt
mov
jb
loopne
lahf
xchg
sahf
imul
insb
dec
push
pop
popa
add
mov
pop
outsb
shll
jbe
or
lea
xchg
push
inc
repz
jnp
mov
imul
insl
and
shlb
xchg
push
cmc
lock
and
hlt
ds
fs
cmp
enter
mov
js
cmp
pop
xor
xchg
sub
inc
mov
out
das
fsubs
lahf
gs
jl
test
mov
and
sahf
pop
mov
test
push
addr16
jecxz
xchg
jbe
mov
jbe
adc
or
icebp
xor
test
pop
enter
movb
popf
xor
push
jmp
mov
push
f2xm1
jno
icebp
sub
in
ret
out
or
xor
xchg
pushf
pushf
lret
jbe
out
sub
mov
test
xchg
dec
sub
xchg
outsb
fldt
negl
and
and
add
sub
ror
jno
mov
adc
subl
out
cli
add
jo
push
lea
std
mov
sub
sub
xchg
cltd
jecxz
mov
das
pusha
in
ret
and
mov
out
shl
or
rcl
jae
mov
jbe
or
scas
in
xchg
and
into
lret
mov
mov
or
xor
test
pushf
fcompl
out
sub
fildl
and
test
mov
jbe
or
adc
pop
dec
hlt
and
jp
mov
jle
sub
int
cwtl
js
insl
movsb
adc
in
adc
data16
outsb
inc
cli
jg
popf
lcall
jnp
add
pop
nop
jno
adc
adc
daa
push
pop
xor
dec
pop
es
hlt
andl
xor
mov
in
mov
aaa
jmp
fsubs
and
pop
sbb
lretw
cmp
or
daa
xor
pop
jge
mov
sub
xor
push
pop
or
inc
jle
mov
stos
lods
je
lods
sbb
push
call
leave
ss
enter
and
mov
jp
test
mull
notb
hlt
push
les
add
and
xchg
add
jo
mov
psrld
pop
pop
rorb
push
jne
mov
cmpsl
mov
jge
cmp
fcmovu
add
dec
ret
mov
fwait
aaa
mov
jl
mov
rcl
and
or
adc
scas
cmpsb
repnz
mov
pusha
inc
add
push
jno
sub
push
lcall
scas
test
inc
push
or
hlt
out
dec
inc
ja
fisubrs
push
pop
xchg
mov
or
add
in
orb
out
std
pusha
push
push
sarb
pop
aad
ret
cmp
inc
or
pop
push
not
test
cmp
repnz
jl
in
ljmp
ret
mov
dec
scas
push
add
mov
xchg
mov
fwait
mov
in
push
fdivs
test
nop
stos
xchg
fildll
lret
test
into
sbb
loopne
ficomps
mov
pop
loopne
vfmadd213ps
shrb
jp
test
mov
outsl
cmp
inc
cmc
ljmp
push
or
mov
test
lret
sub
in
sti
fadd
scas
stos
mov
loopne
xor
rorb
outsl
lock
sub
lret
sbbb
lea
loopne
ljmp
ret
sbb
mov
xchg
mov
sub
jnp
cmp
sbb
std
xor
daa
and
daa
pop
jg
or
ja
fistpl
mov
inc
fs
sub
or
jmp
movsl
ds
add
ja
jae
sbb
or
icebp
mov
loope
mov
es
or
mov
mov
and
aaa
mov
push
push
add
mov
fmull
and
jbe
cmpsb
fs
pop
sub
mov
adc
jnp
das
push
pop
imul
cld
dec
xor
lock
stos
fimull
add
push
pop
jo
insl
cmp
popa
movsl
sub
enter
cmpsl
push
roll
xor
rcrl
mov
mov
jle
je
push
into
mov
or
push
ret
fsubs
jbe
mov
add
in
fxch
jno
call
dec
addb
jns
fisubrl
sub
outsl
shl
int
xor
xchg
mov
fists
adc
mov
mov
xchg
sub
repnz
pop
mov
and
mov
dec
pusha
and
xchg
jb
dec
repnz
in
pop
inc
fadd
popa
stos
mov
add
lods
inc
dec
push
dec
test
sub
sbb
fisttpl
es
push
xchg
call
enter
or
test
push
cli
cld
lahf
std
adc
xchg
xchg
ds
xor
sub
bound
das
int
insb
and
and
dec
iret
pop
cli
jg
in
imul
xor
xchg
jg
mov
pop
lahf
jb
cwtl
lahf
negb
insl
incl
xchg
dec
outsl
dec
push
mov
lods
pushf
sbb
xchg
sbb
sbb
shrb
loope
xor
mov
mov
sbb
mov
mov
sti
pop
sbb
dec
pusha
out
jnp
neg
movsl
mov
inc
jo
mov
mov
adc
inc
and
test
and
call
lahf
pop
cmp
sub
mov
sbb
shrl
dec
push
mov
inc
out
ret
je
subb
sbb
iret
and
sub
pop
sub
out
stos
xchg
iret
sub
xor
cmp
jecxz
js
mov
enter
dec
test
cmpsl
xchg
fiaddl
or
test
mov
lock
shr
xchg
push
adc
inc
mov
push
xchg
cmpsl
test
mov
inc
ja
jbe
and
out
insl
jae
sub
cmp
dec
cmp
cs
and
push
dec
iret
out
cmp
in
jge,pn
inc
xchg
shrb
inc
aam
xchg
popf
dec
popa
scas
aad
mov
cmp
push
or
gs
enter
mov
into
in
mov
mov
jle
mov
in
sub
jb
adc
shll
xchg
pop
pop
mov
outsl
mov
inc
adc
mov
repnz
xor
mov
jbe
ja
sbb
mov
fadds
aaa
lcall
sti
push
fimuls
inc
rcrb
int3
add
pushf
into
mov
outsl
pushf
sahf
pop
ds
gs
mov
pop
test
sahf
mov
std
adc
sti
push
ds
hlt
and
adc
pop
ljmp
xchg
rcrl
fwait
icebp
cmc
mov
push
mov
stos
push
adc
lret
pop
imul
push
add
push
mov
out
lahf
pop
mov
nop
test
cmp
and
jmp
ss
mov
jmp
and
leave
out
incb
pop
sbb
daa
leave
mov
adc
daa
xlat
fiaddl
inc
cmp
adcb
ljmp
or
cmp
jno
lahf
outsl
or
xor
push
xchg
sbb
insl
into
ljmp
int
pusha
das
push
popa
ljmp
nop
mov
ficompl
scas
arpl
stc
jo
mov
insl
and
inc
ljmp
push
sub
iret
cmp
bnd
repnz
and
mov
pushf
sbb
or
mov
xchg
xchg
pop
adc
add
negl
test
push
ret
push
stos
leave
lahf
test
int
loopne
mov
into
dec
pushf
xor
and
add
adc
cmp
sub
sti
xor
fcoms
adc
repnz
sahf
loope
lds
fbstp
rcrl
stc
jae
je
jge
push
sbb
cmpsl
adc
test
mov
hlt
and
out
scas
inc
loopne
push
xor
imul
cmp
add
dec
dec
mov
pop
jg
inc
inc
addl
sti
pop
test
enter
outsb
sbb
aaa
lret
roll
pop
fisubrl
fsubrl
fdiv
mov
jmp
lds
add
ljmp
mov
or
jae
pusha
adc
jno
data16
push
jg
jbe
mov
arpl
ret
lret
xchg
sti
adc
inc
outsl
rcrl
cs
dec
pop
inc
sbb
inc
shll
mov
iret
pop
cwtl
iret
rorb
in
lret
sarb
push
add
rorb
inc
leave
in
mov
fcmovbe
roll
dec
push
out
adc
cmp
add
enter
aad
out
loope
loop
cli
mov
xor
mov
arpl
dec
cmp
lea
push
cmc
xor
sbb
cltd
cmc
jb
mov
data16
sub
and
sub
jmp
jns
adc
sub
mov
popf
or
pop
leave
xchg
push
cli
mov
add
addr16
sub
push
pop
mov
repnz
xor
mov
adc
mov
data16
sub
xor
xor
imul
pcmpgtd
and
mov
scas
jle
cltd
test
insl
sbb
lret
fs
out
lods
hlt
fildll
repnz
dec
out
sub
dec
dec
out
push
or
out
add
push
outsl
pushf
mov
jl
add
mov
xor
ret
test
lods
clc
cld
dec
adc
pop
outsl
xor
or
into
add
xor
ret
incl
aad
nop
jnp
aas
popa
jnp
popa
fstpt
rolb
adc
pop
das
pop
std
pop
add
and
mov
ja
add
test
mov
hlt
test
insl
push
or
jge
int
mov
cmp
inc
add
adc
xor
jbe
repnz
in
pop
jle
fwait
jae
xor
stc
cmpsl
lcall
into
mov
stos
cmpl
xor
add
pop
mov
flds
sarb
fildll
push
pop
test
jg
cwtl
stos
xor
xchg
ss
adc
jo
mov
xchg
pop
fidivl
ljmp
sti
fdiv
addl
push
push
sbb
pop
call
or
out
add
push
lea
dec
mov
ficomps
ficompl
cwtl
call
and
fidivrs
pop
dec
cmp
ret
add
and
xor
mov
inc
inc
rorb
loop
ret
mov
dec
and
pop
fwait
dec
std
mov
adc
std
cmp
ja
push
xchg
add
mov
fiadds
out
jns
pop
lret
adc
rcl
sub
dec
pop
cmc
jne
ss
es
repnz
jb
mov
or
out
cli
and
in
or
jbe
popa
fwait
movsl
hlt
out
xchg
out
push
push
in
sub
dec
adc
or
fidivs
and
and
push
or
popa
mov
pusha
roll
jne
or
ja
enter
nop
jg
push
pop
pusha
addl
adc
xchg
pusha
testl
or
dec
add
cmp
fwait
inc
testl
mov
or
divl
inc
mov
push
cmc
xchg
adc
shrl
bnd
xor
lahf
cmc
sbb
pop
aas
mov
aaa
test
mov
popf
push
cmpsl
and
inc
push
cmp
lods
sbb
lret
pop
jo
out
xor
mov
sahf
test
adc
adc
mov
xor
xor
imul
cmp
loope
sub
popf
pop
cmpsl
clc
xor
shrl
sarb
sbb
daa
out
add
mov
popa
out
and
ja
mov
jge
push
xor
sarb
shlb
xor
aaa
daa
out
pop
lds
mov
jmp
mov
imul
lock
jg
jns
xchg
ret
add
dec
mov
and
xor
cmovne
sbb
test
xchg
aaa
sub
pop
mov
ret
std
xchg
dec
jle
insb
xchg
cmp
sbb
cltd
lods
dec
loopne
repnz
push
dec
mov
push
repnz
outsb
out
push
fwait
cmc
xchg
dec
add
rcll
cwtl
stos
or
rol
mov
jbe
cmp
ss
arpl
lea
subb
sub
pop
adc
cld
mov
adc
in
int3
clc
dec
xchg
popa
mov
inc
call
inc
and
aad
mov
mov
adc
into
mov
mov
addl
sub
and
popf
stos
rorl
mov
cmp
lahf
mov
pop
sbb
xchg
aas
adc
daa
or
jecxz
adc
int
jbe
fists
daa
fiaddl
inc
sbb
aad
push
out
ja
sub
and
enter
shlb
lcall
jmp
sahf
pop
jmp
lds
jmp
rolb
pop
in
inc
fimull
mov
add
fadds
pop
sbb
cli
push
fidivrs
out
aam
mov
fwait
adc
dec
jp
fisttpl
inc
fnop
xchg
jg
jp
out
clc
loop
cmp
xor
jae
in
pusha
xor
add
add
push
rcrb
jnp
das
lcall
stos
imul
cmc
test
les
xchg
repz
lahf
lret
fadd
les
xchg
adc
mov
dec
fwait
mov
and
mov
sub
pop
int
push
add
loopne
dec
inc
aas
out
lret
xchg
xor
test
std
and
bound
jo
and
dec
or
or
pop
push
adc
imul
push
cs
mov
iret
inc
mov
je
push
sbb
addr16
xchg
test
sub
ja
ljmp
fdivrl
sub
rcr
mov
push
je
xor
mov
fldl
int3
push
push
lock
les
movsl
fucom
dec
and
pop
push
dec
daa
jb
cmp
mov
or
or
and
and
fs
jae
push
mov
insb
pop
pusha
cmp
add
arpl
mov
xchg
push
dec
les
or
cmpsb
push
add
in
aam
xor
mov
and
pop
jno
mov
mov
ljmp
out
mov
sbb
mov
stos
out
push
jb
xchg
cmp
mov
int
stc
sbbl
iret
stos
insb
ds
in
andl
push
stc
std
xchg
or
lret
xor
and
pusha
frstor
int3
bound
mov
adc
fsubrs
cli
jle
test
xchg
sub
ret
xor
lods
insl
xor
or
sbb
rcll
cwtl
cs
stc
test
out
add
dec
jmp
inc
lock
mov
mov
dec
mov
xchg
and
push
add
add
jmp
shrl
pop
enter
cwtl
les
push
shlb
sub
or
imul
inc
sbb
sub
inc
cltd
fcmovnb
std
sbb
push
lcall
mov
xor
movsb
cmpsb
cs
lret
jmp
mov
xor
addr16
xor
fldenv
js
loopne
xchg
jo
jmp
popf
adc
fdivs
pop
mov
jp
das
mov
cmp
jmp
test
aad
jge
add
idiv
test
or
in
scas
xchg
pop
addr16
mov
fcoml
push
push
js
inc
fstl
push
fnstsw
lea
push
int3
scas
adc
adc
fs
fwait
mov
out
xor
jbe
bound
pop
adc
stos
ss
inc
dec
pusha
or
pushf
fwait
jge
cltd
and
cmp
sbb
push
xchg
or
inc
xchg
sbb
loope
push
int3
iret
push
mov
jl
gs
mov
sbb
aaa
dec
popa
add
imul
jns
or
push
int
pop
popa
jecxz
loopne
push
mov
jb
sahf
dec
push
adc
jnp
out
fucomip
and
cwtl
mov
inc
js
add
fsubr
daa
outsl
cmp
fnstenv
inc
xchg
jle
push
jp
adc
addr16
xchg
or
inc
std
mov
sar
lock
jp
mov
repnz
and
loopne
xor
hlt
xor
lret
insb
fsts
pop
fwait
lsl
rcrl
xor
rorl
setb
je
shlb
add
sbbb
pop
leave
mov
xchg
xor
jne
insb
push
movsb
fcmove
push
stos
inc
fists
leave
test
jle
imul
aam
call
fdivl
test
xor
outsb
sbb
sbb
outsl
adc
rorl
bswap
popf
loop
sub
sub
ljmp
sbb
jp
mov
lods
sti
stc
jo
stos
pushf
or
pop
dec
call
decl
jg
gs
push
cmpsb
mov
add
push
test
in
cmp
and
xor
in
repnz
stos
jge
out
cmp
mov
les
push
cli
sub
dec
bound
js
int
ror
cmp
mov
lea
adc
push
into
jno
sahf
inc
or
in
cmc
popa
je
mov
inc
jp,pt
cmpsb
ret
cmpb
cld
jl
xchg
pop
xlat
call
dec
fiadds
push
jmp
and
es
arpl
loope
jnp
dec
dec
cmpb
das
in
sub
mov
and
data16
sbb
jp
push
scas
ret
xchg
adc
xlat
pop
jne
dec
into
es
out
push
mov
or
add
testl
in
mov
mov
inc
mov
repz
int3
mov
jo
aas
shlb
and
decb
pop
dec
inc
cwtl
xchg
mov
jns
pop
add
test
push
jb
ret
adc
push
lds
adc
jle
loop
jnp
dec
ret
inc
and
nop
mov
in
movsl
ret
jae
loope
sub
push
mull
fdivrl
xchg
punpckhbw
pop
faddl
inc
outsb
dec
sub
add
cmc
jg
mov
test
in
cli
in
xchg
das
sbb
stos
and
hlt
mov
stc
mov
fsubl
repz
pop
xor
cmp
adc
jbe
sub
fidivl
mov
mov
js
xchg
scas
cmp
jl
mov
dec
mov
loopne
or
aaa
ja
sbb
fldl
cmp
int
mov
lock
in
clc
popf
sub
cwtl
xor
add
sti
xchg
and
jno
pop
pusha
in
fiadds
or
subl
movsb
imul
aaa
push
xchg
push
pop
fst
push
jle
js
iret
sub
pop
pop
call
pop
adc
js
mov
add
inc
in
xchg
test
lahf
shr
ficoms
outsl
pop
decl
pop
inc
cmpsb
mov
lock
out
push
stos
adc
xchg
push
add
xchg
scas
push
es
inc
jmp
test
hlt
xchg
and
or
in
inc
cld
mov
lret
push
je
inc
test
xchg
or
dec
repnz
dec
inc
xchg
stos
lret
hlt
jecxz
cmc
sti
dec
or
mov
xor
test
enter
arpl
sub
inc
test
cmpb
in
imul
lods
xor
jle
adc
cmpsl
jbe
std
mov
fst
ljmp
mov
jns
stos
loope
push
push
push
push
add
or
in
lcall
ljmp
enter
sub
dec
jns
sub
xorb
dec
lea
cmpsb
rorl
mov
movsl
cmp
or
insb
xchg
pusha
faddl
cld
dec
aad
movsb
inc
div
xor
cmp
outsb
cld
and
push
neg
xlat
jecxz
fstpt
cmp
lods
idiv
loopne
push
fs
sbb
jmp
test
xor
push
push
clc
stos
movsb
mov
sbb
push
insl
add
mov
aad
cmp
jge
fcmovbe
push
push
jmp
push
cli
sarl
sbb
aad
add
or
ret
jo
adc
jmp
fdivrs
int3
jl
test
js
rdmsr
push
xchg
inc
and
lret
xchg
mov
push
xor
push
out
std
pop
sti
inc
lret
push
sbb
scas
mov
ljmp
test
jmp
leave
out
lds
jp
push
and
subb
sbb
mov
sub
out
stos
or
jns
stc
push
into
mov
inc
push
push
bound
aad
iret
mov
mov
push
ret
sub
es
xchg
les
inc
fnstcw
cmpsl
icebp
mov
jle
jae
js
or
jp
in
test
sbb
xor
mov
and
sub
dec
mov
or
inc
pop
mov
push
add
lods
xchg
aaa
pop
sub
inc
sbb
pop
loope
movsb
mov
pause
ret
lahf
xchg
rcll
push
test
test
cli
add
or
sahf
hlt
jp
jb
rcrl
fisubs
xchg
fimuls
in
jl
adc
dec
in
leave
out
push
mov
adc
push
mov
sub
icebp
ret
inc
imul
pop
movsb
in
pop
les
ljmp
jmp
adc
scas
dec
jl
leave
in
or
and
movsl
xchg
fstl
repnz
daa
xchg
sub
pop
mov
std
pop
fisubrs
xchg
mov
mov
mov
jmp
rcl
jl
es
mov
sub
jno
icebp
xor
xchg
fsubs
inc
or
cmc
ja
inc
cmpl
jo
rcrb
mov
push
sub
cmp
jns
jmp
les
cmp
or
mov
lods
das
mov
rcl
mov
cmp
mul
sbb
pop
stos
mov
movsl
mov
push
and
bound
idivl
jp
roll
jno
rcll
not
lock
inc
fwait
std
lods
leave
test
subl
shl
pop
cli
jmp
xchg
cmp
xchg
push
outsl
xchg
es
pop
sub
ljmp
leave
xor
and
xchg
xchg
test
or
adc
push
pop
dec
or
pop
jne
xchg
daa
xor
or
jmp
sub
test
orb
popa
mov
repz
add
or
in
mov
jl
mov
imul
mov
or
sbb
xor
adc
iret
lds
loop
jmp
sbb
jge
arpl
nop
sbb
sub
scas
arpl
pcmpgtw
cmp
lret
jmp
jb
add
popa
adc
lcall
inc
pushf
jne
add
push
cmpsb
aas
inc
mov
sub
pop
cli
out
mov
ret
inc
shr
or
cmp
enter
xchg
inc
scas
add
adcl
inc
les
pusha
int3
addr16
and
xchg
jl
pop
pop
mov
inc
xchg
mov
mov
pop
mov
mov
and
into
cwtl
mov
push
sbb
je
sub
push
pushf
int
call
mov
push
add
aaa
in
or
movsb
fiaddl
loop
pop
loope
add
pusha
mov
add
cltd
add
mov
into
cmp
cmpsl
loop
push
dec
xor
stc
xchg
push
ror
es
dec
ljmp
je
mov
pop
pop
cmp
jnp
adc
jbe
push
iret
mov
test
es
fs
pop
or
scas
in
cmp
pop
into
mov
jbe
sub
pop
mov
push
xchg
call
cmp
hlt
scas
bound
movsb
mov
push
insl
cltd
adc
mov
sub
test
addr16
add
add
out
jp
adcl
lcall
aad
fnstsw
into
jns
cmpsl
insl
into
xlat
mov
push
movb
leave
cli
add
sahf
xor
mov
lea
int
test
das
xor
test
cmp
push
dec
aam
shl
cmp
jbe
pop
jmp
pop
xlat
scas
jp
jns
rorl
clc
sub
dec
stos
sub
push
push
sbb
inc
rcll
sbb
cwtl
fidivrs
adc
data16
sbb
adc
fnstenv
test
xchg
mov
pop
sti
jg
mov
cmp
shr
movsl
jle
lcall
cmpsb
dec
xor
loopne
dec
mov
xor
fs
mov
rorb
fcmovb
lret
repnz
mov
mov
and
imul
cmp
cld
into
cmp
lds
mov
repnz
sbb
mov
fadds
sub
mov
xchg
js
loope
das
stc
in
mov
xchg
insb
dec
pop
sub
cmp
iret
mov
hlt
shlb
xchg
mov
ret
repnz
lret
mov
shlb
mov
pop
xchg
shrb
stos
scas
movsb
push
mov
loop
push
cmp
lock
loop
adc
jo
xor
jns
jge
aad
inc
pop
jbe
popa
adc
dec
outsb
jle
add
sbb
xorb
ffreep
xor
or
rclb
in
fidivrl
mov
test
inc
lahf
cmp
cmp
push
jns
jmp
repz
adc
adc
mov
xchg
mov
pop
xchg
fwait
addr16
mov
bound
pusha
xchg
pop
pop
sbbl
pop
push
jg
push
push
adc
leave
imul
push
xchg
mov
leave
mov
out
dec
mov
xchg
push
rorl
push
loope
mov
adc
adc
dec
and
cmp
inc
jns
orl
push
xor
jbe
and
test
call
add
fildl
mov
xchg
cltd
pop
pop
xchg
sbb
jmp
cwtl
xchg
insl
repnz
enter
ja
sbb
out
popa
fstp
cs
cli
dec
jae
lea
add
scas
inc
mov
iret
mov
xlat
pusha
xchg
pop
bound
lock
mov
add
pop
fst
rclb
cs
push
out
pop
pop
dec
push
mov
fcmovu
pushf
dec
xorb
jle
jae,pn
xor
mov
lcall
loope
test
les
push
inc
sbb
decl
or
out
cmpsb
leave
pushf
jae
repnz
cmpsl
movsb
iret
movsb
pop
xor
xor
push
pop
or
xchg
push
test
loopne
push
jne
or
into
sbb
pop
movsl
mov
shlb
jmp
mov
mov
filds
sbbb
jle
dec
popa
or
andb
mov
nop
xor
sahf
cmove
fwait
mov
inc
es
pop
xor
fmul
or
inc
xchg
jp
inc
dec
adc
jmp
std
lret
ss
push
pop
inc
in
push
cli
push
adc
loop
shlb
ret
mov
jge
push
test
jg
rep
out
es
iret
cmp
imul
adc
mov
cli
add
pop
mov
leave
mov
imul
mov
fildl
pop
gs
mov
xor
leave
or
mov
cmp
cmp
lock
lret
cltd
enter
adc
jno
int3
mov
fmuls
sarb
adc
pop
jl
ljmp
sbb
ljmp
int3
in
add
jo
jl
push
in
sarb
mov
jl
lahf
in
sar
jp
push
lahf
sub
dec
push
call
dec
iret
cs
inc
jno
orb
adc
outsb
lock
les
mov
push
xor
mov
jns
outsb
add
sarl
jne
push
popa
pop
adc
daa
inc
xor
fcompl
repz
jmp
pusha
dec
in
je
cli
jno
rorb
test
shlb
push
pop
pop
sub
jle
sbb
jmp
pop
outsb
inc
ss
movsl
mov
cmp
inc
les
jmp
adc
loop
push
outsl
es
inc
cmp
out
mov
pop
notl
arpl
push
int
fisttpll
jae
int
mull
lahf
out
loop
mov
ds
inc
addr16
adc
xchg
jb
test
ds
mov
push
mov
dec
lock
add
pop
ljmp
mov
xchg
cmp
add
mov
inc
in
stos
fisubl
cmp
fcomp
xchg
xor
and
xchg
lds
ds
adc
stos
mov
call
js
pop
incl
imul
leave
pop
stc
iret
dec
decl
inc
loope
or
pop
mov
jb
jge
fldt
mov
aad
insl
push
pop
push
jno
dec
xchg
adc
pop
fcom
imul
scas
loopne
inc
sub
ss
hlt
jle
inc
inc
mov
insl
lret
out
sbbb
jbe
es
xlat
add
xor
jo
cltd
cmp
mov
mov
mov
sahf
xor
jp
cmpsl
aam
test
xor
mov
mov
and
int3
and
or
mov
xor
stc
dec
fldenv
into
les
push
push
lock
inc
mov
jno
xorb
jnp
mov
and
mov
cmpsb
test
orl
in
add
imul
in
push
jbe
cmp
push
or
mov
cwtl
jns
jnp
xor
das
mov
lods
mov
in
xchg
mov
fs
sahf
fstps
insl
adc
lock
fnstcw
sub
xor
jno
push
jl
mov
cmp
push
in
mov
fidivrl
or
insb
test
std
fisttps
ljmp
pop
mov
mov
in
push
ja
jle
mov
jg
dec
cmove
jno
mov
inc
adc
push
lods
pop
stos
pushf
test
int3
fs
push
inc
imul
push
add
cmc
xor
and
divb
push
or
dec
adc
sbb
fmull
aaa
mov
hlt
mov
and
int3
test
pop
jge
outsl
rol
test
mov
popf
es
insb
addb
push
push
fldenv
jp
mov
mov
mov
mov
cmp
rcll
mov
adc
mov
pop
jo
pop
nop
loope
mov
daa
shll
arpl
cmp
out
jecxz
add
jno
es
push
fisubrl
add
xor
and
movl
pusha
sub
pop
jb
push
jns
jnp
jns
xchg
fistpll
je
adc
cmp
and
cmp
roll
das
pop
cmc
cmp
pushf
sub
push
test
arpl
jl
filds
inc
call
inc
mov
roll
xchg
push
xor
pop
mov
stc
imul
enter
add
mov
or
sbb
clc
lahf
out
mov
jno
mov
out
repnz
enter
lret
xlat
repz
add
mov
loopne
fcmovu
cwtl
imul
sub
rcrb
jae
mov
mov
pusha
imul
inc
aaa
icebp
jg
into
cltd
repnz
jo
lods
xchg
mov
das
lahf
add
cmp
jmp
cmp
lods
cwtl
xchg
pop
decb
sbbb
cmp
mov
insb
ret
cmc
add
outsb
bound
movsl
stos
clc
sbb
push
insl
push
sub
sbb
das
xor
add
pop
hlt
sbb
and
lcall
xchg
aas
pop
or
mov
cmp
and
rolb
cmc
ja
xchg
mov
mov
sub
cmp
jecxz
in
pusha
js
sbb
add
mov
mov
or
mov
mov
sbb
or
fs
pop
pop
test
int
push
repz
pop
jl
jecxz
add
push
jae
xchg
cli
repnz
imul
in
andb
jo
add
jle
add
lods
loopne
inc
aad
cmp
dec
jbe
dec
int3
mov
and
jl
mov
xchg
lods
pop
movsl
subb
pop
inc
mov
cmp
in
out
inc
aaa
arpl
in
insl
mov
stos
jmp
ret
pop
push
leave
push
scas
sub
inc
movsb
cmpb
lods
pusha
lret
adc
push
cltd
out
push
xchg
ljmp
xchg
mov
mov
les
adc
mov
mov
cmovp
pop
mov
inc
into
mov
sub
mov
xchg
sub
fstl
shlb
xor
sahf
hlt
pop
lods
sub
sbb
setl
in
dec
jae
mov
fistps
fidivrs
adc
jns
out
cmp
jnp
pop
push
lock
repnz
pusha
inc
sahf
ret
cwtl
enter
lret
xchg
jae
mov
mov
insb
inc
lret
mov
nop
fsubrp
in
jl
xchg
aam
cwtl
ficoml
inc
out
aad
cmc
dec
pop
stos
out
and
addr16
dec
cwtl
vpsubb
dec
jae
je
sbb
fwait
sub
or
mov
cmc
shlb
cmp
cld
adc
inc
inc
ss
inc
icebp
es
cmp
dec
lcall
mov
loope
in
ficomps
inc
push
ret
jg
xor
lods
dec
mov
and
xor
outsb
rorl
std
loopne
rcll
pop
push
jecxz
data16
jl
pop
mov
inc
sbb
push
lahf
stos
rclb
mov
sarl
push
pusha
movl
int3
fisttps
shrw
clc
loop
loopne
ret
neg
int
cmp
sbb
mov
in
cmp
les
xchg
lret
fs
mov
mov
popw
stc
inc
push
inc
popf
lds
cmp
lret
fisubl
or
and
mov
dec
fbstp
rclb
inc
pop
xor
jp
out
add
popf
js
popa
push
je
xor
push
push
rcrb
push
mov
adc
int
push
xchg
pushf
stos
mov
jns
lcall
mul
sbb
in
xchg
mov
lcall
mov
cwtl
insb
or
cmp
mov
add
or
mov
xor
xchg
int3
dec
movsl
stos
and
xchg
jl
icebp
cmp
xchg
loope
icebp
lcall
out
cmp
sahf
test
push
jae
aaa
lods
imul
shrb
xor
out
out
inc
xchg
pop
cmpb
mov
jp
cmp
out
aad
out
ret
xor
mov
xor
lcall
jp
push
jp
and
arpl
int3
or
rorl
pop
mov
scas
pop
das
sub
push
sti
add
addr16
xor
in
mov
call
ljmp
inc
lods
rorl
aad
mov
mov
sti
movsl
cmp
lea
inc
mov
pop
inc
adc
out
loopne
ja
adc
inc
scas
nop
or
lock
dec
mov
test
inc
sub
mov
jmp
rcr
movsl
jae
lock
dec
sub
popf
dec
cld
jbe
lods
lret
fwait
mov
mov
cmpsl
dec
xchg
and
ret
cmp
jae
insl
and
inc
lds
or
pop
into
xor
lods
sub
data16
jg
or
dec
sub
loopne
fistps
scas
cmc
scas
pop
xor
cmp
inc
add
jo
fdivrs
aaa
cmp
das
lcall
add
pop
pushl
sbb
adc
cwtl
pop
out
xor
stc
pop
idivb
movb
test
jo,pt
fadds
aas
push
sub
xorb
lcall
inc
and
push
mov
lret
sbb
cmpsl
adc
fwait
arpl
cld
movsb
inc
cwtl
and
cltd
push
mov
in
gs
xchg
fwait
call
sub
jle
pop
add
mov
loope
lods
xor
push
test
push
xchg
or
sti
or
or
cwtl
or
leave
rorl
lods
mov
ja
inc
dec
lods
and
sahf
and
icebp
test
je
sub
xchg
js
movsb
insb
out
out
cmc
mov
scas
cs
fldenv
lea
push
les
push
xor
xor
cltd
pop
stos
inc
out
ljmp
arpl
cmpsl
roll
test
stc
dec
pop
mov
adc
xor
es
lcall
arpl
into
adc
add
xor
ja
xor
aad
xchg
xchg
cmp
cmp
xor
scas
int
adc
notb
sarl
mov
and
movsb
out
orl
cmp
arpl
sarb
jae
inc
stc
and
push
lcallw
inc
sub
xor
jge
cmp
les
push
out
jne
jo
xchg
xorl
cmp
inc
add
aam
mov
mov
fisubrs
imul
and
out
dec
xchg
mov
dec
xchg
test
icebp
sub
dec
mov
jbe
cmpsb
int
mov
or
pusha
pop
shrl
and
sbb
mov
in
in
jle
stc
lods
sub
loopne
rol
pop
inc
xor
mov
dec
mov
adc
xor
adc
nop
add
dec
jo
imul
mov
push
int3
pop
outsl
xor
nop
das
ss
add
push
pop
lds
int
dec
xlat
sti
xchg
mov
jnp
shrb
filds
pop
adc
cld
cmpsl
test
stos
push
jl
jnp
cld
cld
xchg
jno
xlat
scas
jp
daa
outsl
rolb
gs
mov
mov
xchg
nop
insl
cmpsl
mov
outsb
js
arpl
outsb
sub
sbb
fdivs
aaa
cmc
lcall
jp
int
jmp
mov
mov
out
out
cmpsl
shll
inc
add
inc
cmp
pusha
out
jge
cmc
mov
call
jecxz
sar
lahf
jo
mov
outsb
xchg
or
xor
in
mov
sbb
lods
jp
ret
sub
ret
mov
ja
cwtl
scas
out
xchg
out
gs
dec
jmp
int3
ss
xchg
dec
and
dec
pop
jecxz
test
sub
adc
rol
mov
enter
push
les
dec
jo
push
mov
sub
ja
ds
fdivs
idiv
test
sbb
mov
pop
sbb
and
xor
jmp
in
into
aad
mov
inc
jnp
mov
lcall
in
ret
jecxz
jp
push
mov
sbb
std
xchg
flds
dec
addb
outsl
nop
enter
jg
xchg
repnz
jl
lret
and
pop
xchg
aaa
lea
or
icebp
dec
rcrb
pop
xchg
cmpsl
push
adc
and
or
pop
es
insl
push
pop
out
pusha
jb
iret
dec
sbb
out
lahf
cmp
jp
xchg
jns
jnp
rcrb
sub
pop
mov
ficompl
mov
xchg
dec
xchg
add
push
cmpsb
int3
lcall
and
ret
cmp
push
insb
pusha
comiss
mov
inc
clc
or
ficoml
fnsave
scas
mov
pushf
add
fs
sub
out
mov
add
mov
adc
je
int3
xor
xchg
pop
mov
xchg
sub
icebp
mov
mov
out
ds
cmc
adc
movsl
stos
testl
shll
aaa
mov
inc
out
and
xlat
push
fdivrp
pop
ja
aad
adc
sar
adc
mov
sub
bound
lahf
aam
andb
fnstsw
fimuls
das
jmp
pop
push
test
adc
sub
loop
xorl
call
mov
fnstcw
inc
or
mov
lea
test
push
push
cmp
into
sub
jnp
ljmp
shrl
jmp
push
lcall
sbb
cmp
cmp
and
call
sti
in
sarb
and
popf
xchg
dec
xchg
jg
imul
xor
aam
popf
pop
fstpl
sub
aam
inc
pushf
xor
pop
inc
xchg
mov
sbb
jmp
pop
lea
mov
lea
inc
lods
cli
test
push
and
negl
lcall
lret
mov
and
in
outsb
mov
imul
movsl
xor
cmpb
xor
loope
mov
dec
xchg
sarl
divl
movsb
mov
adcb
inc
sub
sahf
test
jmp
pop
xor
pop
sub
adc
sbb
test
pusha
stc
mov
fmull
sub
call
jns
mov
push
mov
out
icebp
pop
mov
xchg
add
arpl
pop
movsb
jns
stc
aam
mov
repz
sahf
test
insb
pop
test
and
or
loopne
sbb
pop
arpl
sub
sub
pop
push
mov
pop
adc
iret
mov
lds
xor
add
test
es
into
cmp
mov
ret
out
mov
push
je
iret
or
jb
enter
test
mov
xchg
mov
adc
jnp
in
pop
inc
mov
popa
xorb
jb
cmp
lds
mov
sbb
rol
fdivr
loopne
ret
or
jl
movsb
inc
aaa
adc
mov
das
ljmp
mov
sub
rolb
and
add
shlb
sbb
sub
daa
mov
dec
fs
fstpl
in
lds
fcom
push
push
lock
js
fisubl
adc
mov
out
push
sbb
testl
cmp
add
mov
insb
lea
enter
hlt
sub
mov
jo
cwtl
loopne
mov
adc
cmp
ret
mov
dec
std
sub
mov
icebp
dec
and
ja
in
adc
add
inc
outsl
mov
jne
leave
mul
outsl
stos
mov
sub
push
enter
xchg
xchg
aaa
dec
in
cmp
popa
int
mov
lret
fwait
lcall
cmc
movsl
stos
in
or
jg
inc
cs
cli
mov
jae
sbbl
outsl
mov
jl
xor
mov
popa
xor
fisubrl
cld
lds
push
xchg
adc
jecxz
loopne
test
or
xchg
jns
push
dec
jecxz
push
daa
jbe
test
jg
push
or
adc
adc
add
popa
push
mov
push
stos
shrl
dec
cmpsb
jns
pop
adc
clc
shlb
jmp
shlb
jo
in
push
sub
sub
mov
or
xchg
or
push
add
lcall
inc
scas
mov
ja
and
call
inc
in
cltd
adc
hlt
adc
xchg
sti
sbbl
cmp
aaa
sbb
pop
pop
cmpsb
cli
mov
push
adc
mov
lret
popa
xchg
xchg
js
sbb
jecxz
leave
aas
icebp
jle
xlat
cmp
roll
or
fidivl
lock
clc
ret
mov
add
adc
adc
and
mov
push
and
adc
iret
dec
add
mov
stos
incb
jecxz
gs
push
sahf
sbb
pushl
mov
rcll
xor
mov
push
push
test
jae
fsubrl
or
mov
mov
repz
jne
call
cmpb
push
mov
add
stos
xlat
je
push
fisubrs
pop
xchg
xchg
hlt
loope
mov
out
xchg
xor
dec
aad
push
jb
and
test
xlat
sbb
cmp
dec
and
push
lods
in
and
movsl
inc
loop
pop
cs
or
sbb
mov
push
adc
and
das
dec
imul
mov
cli
pop
lcall
adc
push
mov
xchg
fadds
out
jns
or
cmpsb
cmp
and
ret
mov
sub
in
or
inc
xor
popa
out
test
push
test
jmp
test
push
imul
test
inc
push
js
and
test
adc
sti
mov
rcl
push
xor
xchg
xchg
loope
pop
out
notb
daa
test
pushf
enter
fwait
out
aam
jno
insl
and
mov
cs
jecxz
call
shrb
mov
sub
sub
pusha
ss
imul
in
xchg
loop
dec
outsb
fists
aam
pusha
inc
jne
jns
and
push
xor
clc
sbb
adc
cld
push
mov
pusha
inc
outsl
sti
dec
mov
nop
movb
in
aam
pop
repnz
cs
test
aam
mov
js
fisttpll
mov
sbb
lahf
inc
and
jle
cmp
dec
jecxz
or
stc
addr16
mov
mov
out
rol
jle
push
cld
js
or
push
jae
leave
inc
pop
fistpl
and
pop
push
lock
inc
aaa
dec
adc
mov
mul
les
mov
insl
sbbb
popf
int3
repz
adc
sarl
insl
add
jo
mov
mov
xchg
pop
xor
jno
pop
out
inc
mov
cmp
int3
push
incb
sbbb
mov
push
push
push
push
in
sbb
aas
sbb
or
jg
ss
jae
lods
push
mov
xor
sub
or
jg
mov
in
data16
les
xchg
mov
daa
sub
cmpsb
cmp
inc
fsts
icebp
icebp
sbb
inc
xchg
outsl
lret
mov
aas
stos
lret
xor
int
dec
fcmovne
jg
sbb
mov
test
and
out
outsb
movsl
xor
into
loopne
stc
sub
or
pop
dec
add
insb
sbb
int3
ljmp
cli
in
or
addb
push
stos
xor
rcr
dec
inc
fldenv
push
push
sub
add
xchg
jg
ret
xchg
js
sbb
repnz
lret
or
into
jecxz
pusha
inc
add
hlt
popf
adc
mov
jp
lock
lret
jbe
arpl
jo
jae
pop
adcb
outsl
pop
insl
and
ret
pop
sbb
pop
and
ret
popa
mov
xchg
cmpsl
inc
out
cmpl
mov
and
cltd
cmpb
mov
pop
js
test
push
fcoml
push
ss
psubsw
cld
xor
push
adc
stos
outsb
cmpb
orl
cmp
out
sub
mov
or
dec
ss
test
rolb
inc
jmp
add
imul
subb
arpl
mov
mov
add
pop
sarl
jmp
iret
aam
add
sahf
lods
fiadds
mov
nop
ja
push
cld
and
iret
jp
or
es
pop
inc
inc
pop
adc
rol
rclb
pop
idivb
xorl
fdivl
jmp
pop
cltd
add
cmp
lds
push
ret
inc
xchg
fwait
mov
xchg
xchg
and
nop
dec
and
push
push
sbb
shlb
or
data16
fucomp
lock
nop
push
dec
mov
dec
mov
test
repz
lods
cmp
mov
mov
jge
pusha
int3
loope
insb
movsb
pop
in
mov
jl
cmp
loope
xchg
cwtl
mov
aad
and
ss
cmpsl
xor
mov
inc
adc
cltd
movsb
stos
cmpsl
sti
push
scas
fnstcw
cmp
jns
std
in
xor
cmp
popf
adc
mov
sub
test
out
test
pop
bound
addr16
push
andb
cs
fiaddl
sahf
pop
jmp
cmp
ret
dec
jns
scas
xor
cmp
aas
stos
push
cmp
lock
stos
xor
mov
jb
repz
shrb
cs
js
push
cmpsl
out
subb
or
addr16
xchg
cld
inc
push
loop
mov
into
addr16
fisubrl
inc
stos
in
stc
mov
fucomip
pop
daa
add
adc
mov
and
mov
xchg
aas
cmc
push
push
repnz
pusha
sub
test
sbb
in
cmp
fwait
pop
aad
jg
pop
jns
pop
cmp
lds
and
arpl
les
out
mov
sbb
cltd
mov
pop
hlt
push
rcrb
shr
adc
hlt
fadds
pushf
push
cli
ja
orl
lea
ja
inc
into
fstps
add
inc
testl
xor
mov
movsb
cmpb
mov
es
mov
dec
call
jnp
into
cmp
mov
mov
div
mov
mov
repz
mov
push
movb
push
jle
dec
ja
or
add
pop
std
cmpsl
push
sti
decl
scas
rorl
imull
sbb
xchg
push
or
dec
sbb
inc
leave
lods
movsb
xchg
cmp
adc
adc
cs
xchg
push
mov
cltd
and
arpl
mov
push
int3
jns
mov
mov
jle
ljmp
mov
sbbl
orb
jae
sub
or
fsubrp
cmp
fisubrs
adc
sub
stos
cmpsl
mov
or
jg
xchg
jl
pop
adcl
add
xchg
sbb
jecxz
cmpsl
sbb
push
push
roll
out
in
outsb
push
sbb
fisttps
mov
sub
sbb
sub
add
add
mov
mov
ja
dec
cmp
xchg
cmp
in
mov
scas
cmp
clc
jg
out
imul
adc
mov
incb
push
adc
jb
push
daa
cmp
or
push
notb
pop
lret
aad
out
pop
fisubrs
jo
sahf
int
mov
lret
lods
xchg
sbb
repz
pop
adc
jae
xor
jnp
lcall
popa
jle
divb
repz
stc
xchg
sbb
ds
adc
call
jbe
add
jmp
out
add
js
mov
data16
mov
insl
lret
mov
repz
cmc
push
insb
jae
test
dec
pop
fbstp
lods
daa
jne
fidivrs
xchg
movsl
lret
adc
sub
insl
fidivrs
inc
inc
and
dec
push
movsb
dec
ret
dec
orb
fnstcw
add
adcb
mov
lds
std
mov
push
push
jge
ljmp
fcomp
ljmp
inc
push
mov
mov
outsl
ror
xor
jbe
push
lret
roll
push
push
dec
and
les
test
jne
ret
roll
cltd
xor
pop
out
in
jp
pop
cwtl
xchg
repnz
add
clc
inc
cmp
repnz
shlb
lcall
mov
pushf
mov
mov
into
sub
and
sub
push
test
insl
mov
clc
xorl
outsl
icebp
test
cmpsb
fsubrl
les
movd
jecxz
jp
sbb
adc
jnp
scas
aaa
sub
mov
repz
movsb
push
shll
insl
jmp
lret
cmp
call
clc
adc
pop
lock
xchg
fdivrp
out
daa
mov
sbb
aaa
in
ret
jne
sbb
call
lret
movlps
mov
shll
and
ret
rcr
loop
loopne
cmp
enter
hlt
xchg
es
addr16
or
push
ljmp
mov
imul
add
jmp
mov
mov
js
pop
or
jb
mov
scas
mov
sti
int3
xor
dec
mov
mov
and
lcall
lea
repz
fadds
les
pop
mov
cmp
mov
dec
push
jle,pn
and
loope
pop
lea
and
cmpsb
in
pop
dec
sub
outsl
cmc
clc
les
iret
fcompl
les
dec
mov
pop
loop
dec
jmp
rcrb
loop
mov
mov
aas
ror
jge
pop
loope
jae
imul
xor
or
jne
lret
cmp
sub
dec
sub
aad
sbbb
lret
xor
xor
clc
push
mov
cmc
dec
xchg
cs
push
pop
jns
imul
push
mov
in
push
pop
rolb
lock
adcl
add
push
push
jb
add
pop
sub
pop
in
and
xor
pop
shl
iret
xchg
lahf
jbe
mov
nop
push
cmpl
stos
xchg
popa
mov
mov
dec
xor
jge
jb
lcall
mov
or
inc
lods
test
sbb
mov
mov
ror
xchg
sti
stos
insl
fiaddl
sub
fisttpl
repnz
xchg
fwait
mov
fsub
in
sarb
movsl
xchg
insb
ret
lds
inc
adc
daa
ret
jnp
gs
int
cmp
sbb
jbe
sbb
pushl
pop
pop
inc
adcl
adc
xor
pop
lcall
rcrb
sub
cli
out
mov
pushf
sbb
inc
mov
les
in
pop
xchg
sub
jg
sub
jmp
adc
fs
sbb
push
addr16
add
cmp
shll
test
enter
sbb
mov
data16
cmp
sub
inc
in
shll
ss
loopne
jae
cld
xor
dec
xchg
ret
bnd
pop
and
js
testl
mov
pop
xchg
repnz
nop
enter
mov
pop
pop
pop
imul
pop
adc
pop
loopne
sar
push
enter
mov
mov
leave
fnsave
pusha
and
pop
adc
xlat
adcl
jo
xor
out
pop
repz
cwtl
sbb
push
mov
mov
stos
pop
xorl
loopne
xlat
and
sub
aad
inc
xchg
and
add
orl
mov
adc
mov
mov
xor
xorl
adc
pop
cmp
cwtl
and
pop
cmp
xor
lods
sub
arpl
adcb
test
lcall
dec
or
mov
out
mov
loopne
cmp
sahf
imul
and
hlt
into
ja
fmulp
mov
jnp
or
push
out
sbb
mov
mov
jmp
pusha
xchg
push
jl
jl
jo
jmp
and
jg
mov
ljmp
insl
sbbb
bound
stc
jb
cs
cmp
xchg
push
ds
sbb
cmpsb
pop
les
xor
test
imul
into
outsb
or
data16
xchg
jge
cmp
sbb
aad
inc
push
mov
orb
icebp
jo
in
lcall
outsl
sti
sub
aaa
push
push
stc
in
or
adc
fimull
or
call
xchg
mov
xchg
mov
or
sbb
ja
lret
sbb
add
or
mov
and
popa
dec
adc
rorl
dec
sbb
mov
push
push
shll
mov
andl
cld
testl
in
insb
insb
mov
pop
fcoml
mov
adc
insl
jp
in
xor
bound
cmc
sbb
jns
mov
loope
and
repnz
inc
push
dec
cmp
int3
out
adc
xchg
dec
sbb
test
sbb
pop
jp
stos
jecxz
mov
mov
shlb
or
rorl
hlt
push
int
dec
push
nop
lods
jmp
inc
ljmp
xchg
xchg
dec
add
push
add
or
test
cmp
jmp
jmp
cli
subl
cs
push
leave
es
xchg
jo
mov
cwtl
shrb
sbb
mov
movsl
je
add
add
fs
leave
scas
dec
sbb
or
and
and
iret
pop
jmp
arpl
mov
push
int
push
xchg
xor
mov
into
cmp
mov
sbb
cld
push
adcl
dec
dec
or
and
sti
mov
xchg
fimull
test
lods
or
arpl
sti
lds
lock
cmp
imul
inc
inc
hlt
push
test
xchg
push
xchg
out
stos
aaa
xor
cmpsb
sti
cmp
xchg
mov
cmp
pop
lods
xchg
data16
and
jo
dec
pushf
rcrl
or
imul
sub
fwait
cli
xchg
mov
aam
cmp
ret
dec
lahf
push
std
mov
test
adc
mov
pop
ljmp
lahf
ret
jbe
inc
jecxz
xor
ja
nop
stos
mov
aad
fnstsw
xor
pop
pop
sbb
or
test
jg
xor
or
test
iret
push
jl
sahf
or
out
and
in
cld
lahf
ja
shrb
out
cmpsb
std
push
scas
mov
jp
and
mov
repz
adc
hlt
int
test
dec
jne
and
mov
or
xchg
js
imul
sbb
idivb
jg
push
pop
xor
jp
ret
push
adc
xchg
ja
xchg
add
mov
lcall
xor
or
cli
pop
fwait
dec
or
add
jecxz
and
shlb
mov
fs
roll
xchg
shl
jno
in
cmpsl
dec
out
ja
sbb
icebp
sbb
lea
nop
pop
test
cmp
outsl
pop
gs
cmpsl
insb
andl
adc
jbe
pop
sahf
clc
adc
sub
mov
not
mov
sbb
mov
sbb
push
in
jns
mov
mov
imul
adc
repnz
or
add
mov
sub
and
fiadds
rolb
loop
mov
pop
test
cld
cs
mov
or
jp
xchg
clc
xor
mov
fbld
jg
jo
pop
sub
pusha
sub
ss
dec
mov
sbb
inc
add
ficompl
xchg
les
or
faddl
outsl
imul
push
cmp
notb
adc
cmp
stos
push
xor
push
ljmp
insb
push
pop
loopne,pn
lods
jne
push
stos
jg
cwtl
out
sbb
pop
adc
out
inc
fucom
test
cmp
bound
xor
jns
adc
es
bound
push
dec
or
or
pop
mov
lret
outsl
jp
lea
push
test
mov
pop
fcoml
popf
imul
hlt
push
js
fildl
or
aam
mov
mov
rcll
movsb
lock
cld
mov
xlat
mov
testb
clc
dec
dec
or
in
add
iret
xchg
add
xor
sbbb
push
sbb
jg
push
int3
push
or
jl
test
push
adc
ljmp
in
cmp
push
je
lret
stos
sub
and
mov
mov
jae
cbtw
push
mov
sti
cmp
mov
enter
mov
xchg
aam
sbb
cmp
aam
arpl
cwtl
inc
xchg
mov
mov
push
pop
push
stos
movsb
sbb
mov
sbb
cmp
or
cmp
insl
aas
icebp
cmc
lcall
jnp
clc
push
xchg
in
push
sub
add
cld
clc
cmp
xchg
int
inc
sub
jg
sbb
fs
ficoml
popa
sub
out
mov
xchg
push
sub
out
mov
movsb
loopne
addr16
out
imul
or
popa
xor
pop
lock
jl
xchg
push
shlb
idivl
add
rorl
sbb
pop
ds
jp
xchg
pop
inc
pop
stc
loope
sub
fsubl
sub
mov
pop
xor
aam
ja
or
mov
sub
orl
push
lock
pusha
jmp
sub
subl
xchg
add
cltd
push
dec
pop
cs
and
addr16
mov
cmc
std
shrb
jno
test
and
or
lea
jmp
adc
lea
loop
movsl
cmp
icebp
push
stos
adc
adc
adc
ljmp
lret
pop
enter
pushf
add
xor
adc
into
or
pop
dec
dec
stc
xlat
sti
daa
pop
lret
fdivl
jns
leave
arpl
pop
and
and
pop
imul
sub
cmp
inc
mov
adc
icebp
subb
pushf
or
pop
call
stc
or
leave
roll
sar
push
adc
dec
aam
jae
imul
jecxz
push
mov
jp
jle
ds
push
and
or
push
mov
lods
or
cmp
pop
or
push
sbb
sub
push
outsb
mov
inc
adc
rorb
mov
sbb
sti
or
inc
mov
mov
fcmovb
outsl
in
push
push
sub
shll
xchg
mov
test
test
cmp
cwtl
dec
and
adc
add
push
push
mov
fisubrl
cwtl
sub
ficomps
cli
ljmp
out
xchg
cwtl
addl
pop
ficompl
sub
ds
cs
loope
jno
out
push
dec
adc
dec
hlt
mov
ror
scas
cmp
insl
or
data16
jle
xchg
ja
pop
sub
je
fbstp
jle
pop
push
and
and
mov
add
cmp
movsl
lods
or
rorb
fsubrl
shl
insl
add
cmpsl
dec
test
cmp
add
mov
inc
orb
mov
push
stc
adc
sahf
mov
arpl
sti
xor
insb
sbb
and
loop
inc
mov
xchg
or
icebp
std
fnstcw
mov
shlb
pop
repnz
ficomps
shll
jl
sub
pop
sti
jne
sbb
xchg
sbb
add
mov
dec
fnstenv
xlat
mov
or
add
ficoms
into
xchg
cmp
das
jae
cs
pop
cmp
mov
sahf
cld
lods
mov
adc
sarb
insl
fdivl
pop
imul
jp
mov
jns
or
pusha
int
inc
push
ror
sbb
roll
fmuls
sub
lahf
or
gs
mov
push
es
cmp
fstpt
push
sbb
leave
mov
inc
shlb
fsubrs
mov
pop
inc
or
push
cmpsl
mov
nop
add
mov
lds
inc
shll
cld
xchg
cmpsl
cmc
stos
stc
cmp
std
je
nop
xor
fildl
xchg
scas
or
ret
sbb
jmp
push
push
mov
pop
stos
fs
xchg
jbe
and
ror
push
js
decb
addl
xchg
loope
add
mov
sbb
push
mov
je
sub
stc
mov
mov
cmp
fwait
xor
imul
int
xor
push
jb
je
dec
sahf
test
out
imul
xor
leave
in
cmp
and
pop
dec
adc
aad
jmp
cmp
jo
leave
jb
or
or
cmp
add
add
lcall
orb
clc
fstl
push
cltd
pcmpeqd
call
fdivrs
lcall
dec
popa
xchg
aaa
add
sub
sub
jmp
or
mov
cmp
jo
pop
push
dec
pop
aam
mov
arpl
jl
add
inc
addr16
xor
cld
push
xor
inc
dec
ja
pop
dec
cs
popa
xor
insl
cs
lock
out
rorb
iret
test
in
pop
and
xor
jmp
sahf
in
jmp
clc
xor
fdivl
in
loop
inc
sbb
jne
inc
xorb
scas
push
psadbw
rclb
insb
fnstenv
sahf
mov
jmp
subl
adc
xchg
xchg
in
fcomps
outsl
sbb
jecxz
enter
cmp
adc
pop
sub
shl
pop
push
lea
dec
xlat
sbb
jns
jl
mov
insl
lahf
imul
andl
push
scas
mov
bound
mov
cli
lahf
jns
push
subl
mov
pop
jge
add
mov
add
icebp
add
cmpsl
test
pop
xlat
bound
jmp
mov
push
divb
loopne
mov
cmp
sub
lret
and
icebp
cli
xchg
sbb
adc
mov
push
mov
stc
pop
in
mov
xor
add
sub
insl
gs
or
stos
std
je
mov
sti
sub
mov
test
repnz
adc
mov
mov
mov
gs
jg
or
test
insb
insb
cwtl
mov
in
cwtl
cmc
inc
cltd
fldt
lock
scas
popf
pop
mov
inc
inc
lahf
mov
in
sbb
add
fnstcw
xor
stos
cmp
sbb
cld
mov
outsl
mov
in
lret
mov
outsl
js
stc
fisubl
int
jge
negb
jae
int
out
add
sub
mov
lahf
ds
push
mov
mov
es
sbb
pop
and
lods
roll
add
pop
shll
adc
popf
ret
mov
dec
mov
mov
inc
test
push
sti
daa
es
aad
dec
gs
mov
mov
movsl
mov
in
out
mov
cmp
sbbb
cmp
push
xchg
shrb
push
test
insb
jge
dec
cmp
popf
add
les
lods
int
cs
pop
jp
es
cmp
das
pop
bound
dec
mov
movsl
rolb
pusha
repnz
daa
mov
notb
push
pushf
into
loop
rcrb
mov
push
loopne
or
daa
and
jle
adc
enter
ret
es
leave
mov
dec
inc
lcall
xchg
dec
mov
roll
sub
gs
shrl
inc
outsb
jecxz
sbb
dec
dec
xchg
jecxz
ljmp
push
xchg
inc
setbe
adc
loopne
push
fwait
imul
sbb
push
adc
sbb
test
mov
loopne
inc
pop
test
cwtl
cwtl
sbbl
sbb
lds
ss
divl
scas
rcrb
js
push
xchg
lock
dec
cmp
dec
add
std
mov
push
lods
inc
enter
and
andb
push
jno
xor
fwait
dec
es
repz
or
sbb
and
pop
xchg
and
movsb
push
mov
sub
repnz
cmp
and
cld
jl
scas
ret
mov
shl
adc
mov
mov
mov
int3
test
icebp
fwait
aaa
les
push
and
rorb
notb
int3
inc
xor
add
out
sbb
mov
mov
jl
sub
lcall
int3
inc
insl
les
dec
xchg
das
inc
jb
mov
insb
arpl
pushf
outsl
lret
pop
mov
jp
loopne
mov
insl
add
xchg
enter
call
pop
xchg
and
scas
loope
icebp
xor
mov
adc
in
rcrl
xor
int
loopne
lds
sbb
mov
clc
push
and
iret
arpl
scas
notb
jge
das
and
and
sbb
sub
add
addb
rcrb
lret
dec
enter
sub
popa
jp,pn
out
or
insb
stos
mov
aam
ss
and
mov
aaa
mov
lret
xor
jmp
fwait
xor
test
fsub
pop
out
lcall
sarb
jle
dec
outsl
xlat
jp
leave
xlat
pop
addr16
mov
add
repz
xor
aad
mov
adc
jns
dec
or
sar
push
addr16
iret
cmp
aam
in
popf
dec
adcb
adc
mov
mov
test
sub
insb
jbe
sub
imul
test
movsb
mov
aaa
loopne
scas
int3
in
aad
mov
fnsave
je
push
mov
xchg
cmc
push
dec
inc
push
test
mov
pop
fcompl
hlt
and
push
insb
jnp
sub
jl
mov
aas
xchg
mov
or
test
pop
mov
xor
sub
or
mov
inc
pop
sbbb
xor
mov
adc
jmp
rorl
sbb
mov
and
xor
push
and
and
nop
inc
cmp
pop
jno
mov
cmp
in
mov
mov
cli
les
push
mov
sahf
adc
fwait
mov
and
int3
js
and
jbe
xlat
add
inc
pop
and
jne
push
and
cwtl
and
nop
lret
adc
mov
or
ret
in
xchg
adc
xchg
or
push
mov
loopne
testl
icebp
into
out
add
push
cmpsb
mov
sarb
cmp
hlt
stos
jae
fstpl
scas
std
mov
mov
bound
mov
sbb
in
mov
lcall
mov
ret
cmp
jnp
or
push
cwtl
push
push
fucomi
cmp
js
out
mov
loopne
add
icebp
rcll
add
jg
and
jb
mov
jnp
sub
adc
xchg
cli
jno
rcrl
jne
into
cli
mov
daa
push
dec
sbb
pop
push
icebp
xchg
fwait
cmp
data16
fidivs
mov
push
inc
add
jg
sarl
mov
xor
push
loopne
xchg
cmpsb
das
mov
fimuls
daa
lcall
aam
adc
inc
mov
lods
rcrb
bnd
add
push
cmpl
or
hlt
arpl
cmovp
imul
cs
adc
sbb
jno
xchg
addr16
decl
mov
or
fmull
out
push
xchg
fdiv
mov
jno
scas
cld
sub
mov
add
cmp
movsl
jecxz
in
xchg
mov
adc
imull
jp
or
xchg
mov
loopne
inc
mov
inc
sub
popa
cmp
dec
xor
jmp
mov
push
out
test
lea
jb
sbb
imul
test
pop
pop
lods
repz
stos
cmpsb
mov
es
jae
jl
in
sbb
xchg
and
insb
enter
xchg
stc
movsb
mov
xlat
cmp
inc
mov
mov
std
xor
cmp
push
push
arpl
jecxz
jp
aad
imul
repnz
sbb
repnz
sbb
mov
adc
in
ficoms
btr
or
mov
or
rolb
repnz
add
jle
pop
pop
sbb
rolb
mov
cmp
add
andb
pop
sbb
insb
mov
movsb
xor
xor
aam
pop
shrb
subb
nop
jmp
jmp
test
ja
mov
cwtl
in
test
nopl
and
dec
ljmp
dec
ja
in
and
mov
cmp
mov
stos
or
or
adc
xchg
xchg
das
pop
lahf
aaa
mov
mov
or
imul
or
cltd
xor
push
dec
test
adc
mov
stc
jg
sub
mov
xor
jecxz
movsb
push
lods
scas
pop
lods
sbb
sub
jmp
cmp
das
sti
mov
shlb
cmp
jg
add
push
push
outsl
in
sub
stc
test
sbb
sbb
ret
outsb
js
or
fsub
and
stos
pushf
loope
pop
pop
ss
cmp
das
xor
movsl
or
lds
and
ret
mov
xor
xlat
pop
jb
or
cmp
push
push
ja
push
dec
leave
addb
fucomip
in
or
xor
inc
shrb
stos
fsubrs
mov
movsl
out
xor
inc
lea
sbb
mov
es
jl
push
lcall
mov
sbb
mov
and
in
mov
pop
insl
xchg
sub
int3
pop
movsl
icebp
out
cmpsl
cmp
push
orb
testb
out
xlat
in
lcall
fnstsw
sbbb
add
ftst
push
pop
xchg
out
push
pusha
add
pop
js
dec
ljmp
cltd
jecxz
sahf
mov
stos
dec
push
or
xorb
pushf
cmpsb
push
mov
movb
mov
fdivp
dec
dec
jbe
pop
icebp
pop
and
leave
jl
or
int3
xor
mov
xchg
jb
addb
mov
fildll
sub
jo
aad
cld
mov
stos
push
dec
dec
lret
push
leave
mov
push
or
or
scas
xchg
pop
sub
cmp
xchg
or
adc
push
pop
jmp
shl
loopne
and
ss
xchg
das
xor
out
mov
pop
test
mov
std
sbb
pop
mov
leave
push
push
dec
jns
dec
fadds
jge
inc
inc
stos
sti
pop
sub
rorb
xchg
mov
pusha
aam
pop
stc
scas
jmp
inc
cwtl
add
jbe
ret
out
inc
fcmove
ss
cmp
inc
movsb
or
insl
in
outsl
sbb
cli
jns
cld
inc
xchg
dec
mov
js
clc
gs
jp
push
das
xchg
push
mov
rcrb
pop
nop
int
shrl
repnz
sbb
xchg
popf
cwtl
or
sbb
cmc
xor
fs
imul
outsb
mov
filds
mov
sub
test
xchg
je
scas
ret
xchg
mov
xchg
frstor
hlt
hlt
pop
add
gs
mov
mov
addr16
movl
xor
or
adc
pop
pop
pop
nop
insb
push
iret
dec
add
addr16
aaa
and
mov
divb
adc
inc
fwait
mov
ficoml
outsl
dec
sahf
sahf
jns
adc
jnp
cmp
rorl
xor
sbb
into
adcb
cltd
xchg
mov
shlb
fs
jbe
dec
xor
inc
cmp
push
jl
lahf
scas
push
mov
pop
push
stos
stos
mov
fistps
sub
pushl
icebp
mov
sarl
hlt
jo
jo
ret
dec
pop
repz
movsb
divl
popf
addr16
cltd
jl
les
sub
pop
add
popf
dec
or
cli
orb
fnstenv
stos
into
test
ror
dec
xor
stos
cmp
xor
cmp
mov
fimull
adc
cmpl
mov
lahf
ds
sahf
fimull
mov
je
loope
aad
pop
inc
cmc
sub
push
xchg
lods
add
sub
jmp
mov
lods
xor
cmpsl
ds
xchg
out
adc
adc
inc
mov
jbe
lret
sti
int3
andl
das
in
xchg
sti
jg
sbb
mov
mov
mov
inc
fsubl
lcall
push
and
pop
dec
in
stos
adc
fcoms
jecxz
cmp
ja
call
push
adc
xchg
lcall
out
add
and
popl
cmpl
je
mov
dec
mov
cmp
pop
push
ret
xor
sub
and
out
push
xchg
adc
and
scas
imul
imul
cmp
push
stos
scas
jae
bound
setae
cmp
pop
in
incb
push
push
xchg
inc
jo
lret
flds
mov
pop
filds
sarb
jmp
lea
mov
mov
jecxz
xchg
outsl
mov
insb
or
adc
lea
fnsave
ficoml
fistpll
adc
jb
ds
jno
sbb
sbb
mov
icebp
or
jno
les
lcall
adc
in
xchg
add
insl
in
or
cmp
sub
adc
pop
int
xchg
jbe
in
or
movsb
in
and
xchg
outsb
insl
push
fisttps
test
ret
xlat
add
aaa
ds
mov
lds
rcrl
mov
add
lret
fs
loop
push
xlat
stc
ds
and
cltd
sub
ja
mov
shrd
fnstcw
pop
mov
stc
mov
xor
aam
push
pop
mov
sbb
cmp
adc
stc
mov
xchg
rolb
adc
sahf
mov
fs
mov
rcr
jl
cmpsl
in
int3
pop
in
inc
mov
jmp
cmp
jbe,pt
adc
mov
fs
pop
orl
cmp
faddl
shrb
out
fmull
dec
xchg
cmpsb
clc
adcl
in
jl
cmp
sbb
cmpsl
jle
outsb
and
or
sbb
mov
psllw
mulb
clc
cmpsb
pop
jbe
and
jo
daa
mov
mov
test
sub
ja
sbb
xchg
pop
inc
and
jecxz
xchg
addr16
lret
xor
test
in
jno
sbbl
shl
push
arpl
fdivrl
mov
xchg
loop
mov
lret
sub
mov
outsl
test
cmpsl
adc
fildll
std
sub
lcall
fldt
addl
pop
push
testb
xchg
decb
or
mov
mov
stc
xchg
adc
add
movsb
sub
andl
or
dec
dec
xor
inc
je
cmp
xchg
repz
sbb
push
cmp
mov
jne
push
mov
mov
imul
push
outsb
imul
mov
mov
sti
push
inc
cwtl
sar
add
dec
inc
mov
push
movsb
push
clc
push
movsl
ja
popa
rclb
or
cs
ftst
popa
stc
push
cmp
sar
sbb
es
pop
sbb
jae
inc
jne
jle
xchg
mov
sub
xor
test
lds
lock
jae
pop
lea
aas
inc
xchg
loopne
add
xchg
cmp
notl
dec
daa
cltd
in
call
xor
js
pop
push
hlt
dec
idivb
lret
ds
int3
scas
scas
lea
sub
mov
shll
dec
ficomps
outsl
adc
inc
jge
xor
cmc
clc
aas
or
mov
in
push
into
jp
adcb
shrb
cmp
lods
sbb
mov
xorl
sbb
cmc
out
stos
sub
lret
lret
and
fildll
adc
fisubl
dec
or
and
ds
repz
orb
pop
cli
mov
xor
lahf
cmp
popf
movsb
sub
xchg
xor
push
mov
and
ds
jmp
cmp
mov
orl
lret
out
push
aas
cmp
push
jmp
and
imul
xor
and
xor
add
ds
mov
xchg
test
adc
cmp
mov
cmp
test
mov
mov
add
loope
inc
sub
mov
icebp
shrl
les
mov
in
dec
pop
and
mov
add
cmp
push
cltd
fistpl
pushf
jg
int
pop
daa
mov
xor
int
sahf
addr16
adc
sarb
leave
call
rcl
iret
mov
cs
cmp
loope
and
push
or
ljmp
sub
pop
jl
dec
inc
repz
fwait
dec
scas
out
data16
jae
xchg
mov
mov
wbinvd
les
jg
sarl
aad
xor
push
mov
sbb
nop
jb
push
cmp
mov
out
push
imul
jl
test
adc
lret
je
xchg
sbb
push
pushf
mov
jg
hlt
inc
mov
inc
lds
fsubl
in
jb
test
push
push
mov
mov
fs
cs
ss
ret
cmpb
xchg
xor
dec
xor
add
xchg
pop
push
xlat
cmp
fdiv
leave
imul
cltd
clc
jmp
jns
mov
dec
mov
ljmp
inc
fsubp
imul
or
xchg
cwtl
movb
mov
lcall
add
add
insl
int
cs
pop
add
mov
out
cmp
popa
cmp
and
inc
push
dec
lods
out
in
xchg
jne
push
add
fs
movsl
lods
mov
add
pop
sbb
lea
adc
addr16
lods
out
xchg
loop
xchg
loopne
mov
in
xor
xor
sbb
xor
movb
mov
push
cmp
pop
test
sub
xchg
or
outsb
xlat
pop
shlb
decb
leave
dec
ret
adc
test
nop
data16
out
jb
cmp
leave
test
xchg
std
dec
adc
xchg
lahf
or
scas
jecxz
jnp
jl
push
sbb
les
in
sti
sbb
sarl
mov
mov
mov
sahf
push
loope
fnstsw
stos
push
ret
int
shr
negl
pusha
fwait
and
dec
push
out
repnz
adc
mov
or
and
sar
push
pop
adc
test
xor
mov
fisubrl
ja
cli
mov
jle
or
jecxz
push
sub
mov
mov
jbe
les
js
inc
les
cs
push
push
mov
dec
ss
fdivrl
icebp
imul
jns
mov
into
xchg
imul
pop
sub
jle
mov
aas
and
or
or
push
out
sbb
fs
aad
mov
cs
add
arpl
bnd
scas
test
int3
clc
mov
hlt
rcrl
mov
in
add
mov
lea
lcall
inc
jmp
mov
scas
pop
xor
push
xor
dec
push
aam
cmp
divl
sbb
push
in
in
mov
pop
jnp
icebp
jmp
sub
xchg
xchg
jge
sahf
or
sbb
int3
inc
rcl
xor
in
rorb
je
in
out
and
int3
ficompl
cmp
lods
jle
jbe
daa
pop
xorb
sbbb
cli
inc
jmp
bound
xchg
push
shrb
test
push
mov
and
movsl
sahf
or
or
xchg
int3
imul
stos
in
and
mov
fwait
mov
fwait
sub
xlat
pop
sub
adc
divl
dec
lea
insb
push
xchg
test
shll
addr16
xchg
fisttpl
fcom
sbb
stos
leave
call
cmp
push
dec
divl
ret
fs
mov
lods
pop
xchg
lahf
push
mov
int
bound
adc
add
movsl
fildll
xchg
stos
lahf
inc
adc
mov
add
je
imul
lahf
mov
call
adc
or
lods
subl
mov
add
pop
sarl
pop
mov
adc
add
shrb
sbb
dec
xchg
leave
mov
dec
dec
sub
pushf
inc
push
cmp
lret
dec
sub
fidivl
push
pop
adc
popf
mov
das
mov
or
dec
or
push
ret
or
mov
push
cmp
mov
std
dec
add
jmp
ljmpw
xor
push
cmp
cmp
pop
data16
test
stc
xorb
mov
or
mov
mov
rol
cmp
stos
int3
push
adc
std
cmp
adc
daa
neg
cmp
xchg
jg
outsl
mov
mov
cmpsl
loop
insl
mov
pushf
js
mov
cltd
js
mov
dec
subb
stos
scas
mov
cmpsb
sub
gs
lea
jbe,pt
jmp
xchg
dec
jo
imul
xor
xor
insl
sahf
jae
xor
rolb
dec
sbb
sub
stos
jg
call
dec
stc
xchg
scas
loop
repnz
xchg
pop
mov
lock
dec
std
mov
sbb
sub
sbb
andl
pop
sahf
scas
rolb
add
pop
and
js
test
test
adc
in
lock
fisttpll
sub
jnp
lcall
add
mov
jb
addl
insl
daa
stos
jo
clc
enter
xor
dec
mov
add
pop
bound
mov
sbb
adc
loopne
add
sbb
insb
jecxz
scas
outsb
cwtl
xor
or
sub
fstps
fcomps
xchg
out
loopne
fsubrl
fstpt
jnp
pop
insl
mov
xchg
ret
jns
inc
mov
lea
cltd
pop
in
pop
loope
add
dec
imul
mov
cmpsb
imul
mov
xor
jns
mull
mov
pop
cld
jb
mov
inc
xor
hlt
xchg
adc
addb
fsubrl
fistpl
and
or
fst
cmp
test
into
jb
addr16
adc
mov
or
mov
adc
out
movsl
or
ficomps
in
js
pusha
push
arpl
mov
loope
jnp
sbb
jl
sti
xor
fldt
hlt
pop
pop
jnp
fcomip
lret
sub
enter
cli
mov
push
mov
cmp
enter
or
sub
jl
xor
jnp
lods
enter
test
imul
pop
cmpsl
sahf
dec
mov
shlb
mov
sahf
stos
mov
sub
popf
mov
fnstcw
pop
push
cmp
push
mov
sub
add
sbb
dec
les
test
je
mov
repnz
jge
mov
aas
lahf
inc
adc
and
in
les
inc
das
mov
arpl
xchg
or
and
xor
jp
and
loop
ds
clc
into
es
or
or
in
dec
jb
mov
into
cmpsl
jmp
xchg
enter
pop
test
add
jl
dec
hlt
scas
xchg
push
dec
sbb
testl
shl
shrb
xchg
adc
inc
xor
mov
and
mov
sbb
in
inc
sbb
pop
fidivs
xor
mov
stc
mov
and
push
adcl
fisubl
pop
loope
mov
pop
cs
lahf
mov
cmpsb
add
in
jp
daa
in
add
test
shll
jp
cltd
scas
cmp
jmp
clc
mov
mov
mov
and
dec
pop
cmpsb
sub
and
int
andb
popf
mov
out
outsb
mov
mov
inc
aaa
ret
rcrl
fstpl
xchg
test
pop
mov
mov
mov
push
or
outsb
test
lods
nop
mov
adc
add
dec
mov
jg
cmc
clc
adc
pop
fidivl
fildl
jno
out
les
adc
test
cmp
scas
test
xor
or
pop
fcompl
aas
dec
hlt
sbb
stos
fsubrp
sub
jge
js
pop
rep
ret
mov
out
cmp
ret
push
nop
and
xlat
or
xchg
not
pop
shl
fdivrl
movsb
dec
xlat
push
sub
std
jo
push
das
ljmp
xchg
or
dec
cwtl
jne
imul
sbb
shlb
or
cltd
adc
testl
sbb
cmpsb
lods
test
and
popa
mov
jo
mov
mov
ret
mov
enter
fs
and
cmp
jmp
dec
out
adc
xor
ljmp
or
add
jmp
mov
scas
test
cwtl
out
data16
fmulp
sbb
sbb
mov
push
cmp
pop
mov
cmp
iret
lods
pop
adcb
cwtl
lret
ss
fcompl
inc
fsubrs
xchg
in
int
sti
outsb
cld
push
mov
push
sub
fistpll
dec
js
cmp
out
jge
cmp
mov
sarl
add
or
shll
in
rcl
sbb
dec
sub
cmp
and
pop
sub
adc
orl
in
out
insb
xor
cmp
cmc
out
lcall
packsswb
pop
shl
sahf
divl
or
loopne
pop
sbb
add
lea
push
out
sub
bound
pop
sbb
enter
mov
inc
jge
nop
movsl
mov
and
test
push
cmp
shll
lods
sub
subb
mov
jne
cmp
iret
sub
cmp
dec
sbb
int3
fiaddl
in
rorl
repnz
fucompp
mov
push
or
sbb
int
xchg
popf
mov
fwait
popf
idivl
jge
aad
jnp
and
test
repnz
cbtw
sub
imul
rol
sbb
out
push
out
inc
shrl
jl
push
mov
mov
in
mov
fnstsw
or
movsb
and
xorl
subl
lret
xlat
lds
fwait
add
push
sbbb
dec
mov
cmp
outsb
dec
pop
pop
dec
imul
aaa
push
mov
inc
sbb
jg
mov
scas
push
xchg
adc
mov
in
mov
daa
shll
jg
jnp
jns
add
or
xor
jb
hlt
mov
or
sar
dec
mov
mov
mov
loopne
xchg
and
pop
icebp
daa
mov
push
mov
sbb
pop
xchg
outsl
xor
ss
push
nop
xor
pop
scas
dec
dec
scas
lret
mov
lcall
sbb
mul
out
sbb
and
hlt
cmp
leave
cmp
idiv
test
mov
leave
imul
es
fistpll
sub
dec
mov
in
enter
dec
jae
push
xchg
das
sbb
mulb
lods
aad
sbb
pop
inc
sub
jg
jge
dec
or
loope
push
shlb
call
ljmp
ret
xchg
gs
mov
lods
jmp
rorb
sub
xor
mov
rcrb
xor
pop
dec
dec
or
roll
gs
sub
xchg
xor
dec
adc
ds
and
cmpsl
pop
xor
jmp
dec
lock
jbe
out
imul
stos
in
loop
or
sbb
ljmp
adc
test
sub
jns
cmp
inc
dec
sbb
out
cmpsl
push
daa
jbe
mov
pop
jge
xchg
lock
xchg
cmp
sti
or
cmp
xchg
les
int3
mov
adc
mov
mov
test
movsb
leave
xchg
push
cmp
leave
add
jne
int3
js
jo
les
mov
xchg
jo
adc
std
jo
cwtl
and
push
es
push
int3
pmuludq
cld
int3
push
push
pop
adc
mov
or
ja
popf
fnsave
fwait
push
adc
adc
das
jp
pop
out
and
leave
jmp
es
mov
xchg
push
xchg
jge
mov
and
cltd
addr16
xor
leave
cvtdq2ps
pop
insb
jne
shr
popa
mov
and
insb
lret
mov
pop
mov
mov
or
fisubl
inc
imul
lock
shrb
dec
jge
jle
repnz
pop
into
lods
cli
xor
cmp
fildl
orl
cmp
clc
add
iret
daa
adc
or
pop
call
push
or
adc
cmp
adc
pop
cmpsb
cmpsl
fnstenv
dec
sbb
shrl
push
fstpt
je
jbe
lock
insl
loopne
fdivrl
inc
or
imul
jae
mov
add
jb
jo
dec
and
scas
push
xor
cwtl
scas
mov
pop
xchg
enter
fwait
dec
pop
xchg
fwait
popa
bound
add
pop
lods
ljmp
call
and
add
or
mov
add
addb
cs
pusha
push
pusha
dec
mov
mov
inc
int
aad
ret
test
or
fadds
mov
jnp
pop
inc
rolb
push
adc
push
cmp
jl
lods
cmp
add
shlb
add
mov
mov
push
popf
lcall
dec
out
sub
repnz
mov
sarb
rol
inc
sbb
into
push
scas
mov
loopne
lcall
das
negb
xchg
into
lcall
and
jns
pop
hlt
inc
movsl
scas
daa
push
test
fidivrl
jb
repnz
pop
mov
adc
movb
cmpl
repnz
sbb
mov
push
stos
add
icebp
nop
sbb
pop
or
dec
sub
mov
adc
in
mov
ds
out
mov
sbb
cmc
cld
inc
cli
movsl
cltd
pand
movsl
mov
mov
xchg
fst
adc
or
loope
mov
or
xor
mov
test
ja
cmc
add
test
test
leave
jl
enter
shl
jns
shrb
insl
add
lret
pop
mov
ljmp
fmuls
and
sbb
fst
sbb
clc
xor
in
sbb
outsl
shlb
inc
inc
jecxz
xor
cmp
js
jne
int
mov
lds
mov
xor
loop
outsl
lods
ljmp
add
xchg
mov
jg
sti
fldenv
xor
xchg
into
mov
sub
inc
jno
add
mov
bound
cmp
std
sub
xor
mov
or
xchg
insb
lock
dec
sub
in
je
push
cltd
out
in
xor
lret
nop
sahf
testb
test
ss
add
sub
sbb
clc
xor
dec
xchg
gs
xor
push
mov
decb
enter
bound
int
data16
adc
add
sbb
lock
sbb
adc
pusha
xor
inc
sub
ror
fbstp
sub
dec
dec
test
rorl
mov
nop
sbb
in
aad
pop
out
xorb
and
xchg
add
mov
loope
ljmp
mov
jge
pusha
popf
lds
inc
aaa
lret
dec
in
rcr
leave
inc
pop
out
daa
xchg
fistpll
jecxz
and
or
popa
lret
ret
pop
jp
es
pushf
sub
push
lret
pop
sub
sub
sbb
jns
lcall
dec
lahf
jge
cmpsl
in
xor
xchg
test
fcoml
ljmp
xor
sub
jge
pop
ljmp
loope
dec
lret
lods
mov
add
fmuls
cmp
subb
pusha
adc
sbb
into
xchg
inc
push
pop
or
stos
inc
shll
insl
les
add
ja
imul
pop
adc
out
bound
and
incl
inc
ficoml
pop
xor
mov
stos
adc
dec
repz
fdivp
ret
mov
push
mov
div
and
data16
and
mulb
pop
inc
fmul
pop
inc
imul
inc
in
jno
push
mov
mov
xchg
push
mov
inc
leave
imul
inc
sbb
addl
sub
cltd
push
push
xor
shll
mov
aad
arpl
push
and
jp
fidivs
lcall
push
jmp
mov
insb
pop
out
cmp
push
sbb
cltd
arpl
mov
jmp
jbe
pop
inc
les
fidivl
inc
test
aas
data16
sahf
notb
insl
xor
insl
sub
pop
call
call
stos
add
add
and
fs
ljmp
or
in
pop
or
loopne
int
xchg
sbb
ret
mov
pop
mov
sbb
fmuls
push
in
test
inc
out
js
jmp
mov
inc
cmc
jb
push
movsb
enter
adc
mov
xchg
leave
movsl
add
addr16
out
xlat
inc
sbb
test
cmpsb
cmp
movl
push
mov
cmpsl
ds
pop
mov
enter
jbe
outsb
inc
xchg
dec
icebp
pop
lods
fiaddl
lret
and
lock
ljmp
mov
sti
leave
mov
inc
push
jae
add
mov
ljmp
test
mov
xlat
outsb
or
data16
dec
xor
test
cmpsl
dec
add
xor
mov
and
cmp
lock
cs
add
orl
mov
ja
jmp
mov
push
adc
mov
test
sub
repz
icebp
dec
inc
out
sub
pusha
xchg
xor
sub
jae
dec
or
fidivrs
sbb
mov
xor
movsb
les
pop
mov
fsubs
std
ds
pop
mov
in
dec
or
adc
pop
add
cli
sbb
bound
stos
push
cmp
cmc
stos
test
pop
shl
mov
mov
popf
push
mov
repz
jecxz
cmpsb
sbb
mov
ljmp
enter
aas
jno
popa
movsb
subb
jne
out
mov
lahf
lds
dec
adc
fidivl
push
pusha
mov
mov
xchg
int3
jae
mov
movsl
outsl
js
add
sbb
dec
data16
push
adcb
cmpsb
push
cmp
mov
addr16
inc
jge
mov
mov
gs
ja
sub
xchg
aaa
pop
push
nop
adc
add
sub
pusha
or
inc
xor
or
aam
adc
dec
out
or
bound
sbb
stos
hlt
enter
out
xor
cltd
sbb
jns,pt
xchg
ja
jnp
insb
cmpsl
sbb
out
outsl
cmp
xchg
pop
sbb
es
cmp
or
lret
push
pavgw
lock
mov
in
fsubrl
push
ficomps
push
addr16
add
repnz
das
aas
push
pop
sti
xor
inc
daa
out
lret
jmp
das
jns
mov
enter
std
aaa
inc
push
jge
adc
cmp
stc
mov
jg
out
ret
in
int3
pop
sub
adc
or
sbb
xor
mov
fsubs
dec
push
mov
testl
fs
gs
ljmp
outsl
shl
lods
inc
hlt
jbe
dec
jnp
out
popa
sbb
loopne
mov
pushf
pop
or
arpl
sahf
mov
push
repnz
add
xchg
daa
into
jnp
sbb
mov
push
insl
add
aad
mov
or
ds
sbb
sarb
xchg
es
or
in
scas
dec
into
or
in
mov
xor
or
es
jne
sti
icebp
push
push
jns
xor
loop
lods
add
hlt
or
dec
push
sbb
daa
fiadds
stc
sub
xchg
cltd
faddl
scas
lahf
adc
inc
fidivrl
aam
js
pop
ljmp
int3
jns
notl
sub
icebp
les
push
je
out
out
xchg
jae
shrl
adc
insl
out
fs
xor
cmc
add
mov
dec
aas
cltd
enter
jmp
cli
jae
mov
jge
hlt
ss
xlat
lret
leave
popf
xor
mov
mov
loopne
arpl
sub
aaa
inc
rolb
fistpll
ds
cmpsb
jg
lcall
je
push
inc
push
repz
daa
xchg
aam
mov
mov
into
ljmp
insb
inc
bound
sub
add
sbb
scas
inc
bound
dec
mov
mov
call
stos
sbb
cli
mov
idivb
and
clc
neg
out
cmp
lahf
or
movl
in
in
imul
adc
adc
mov
in
adc
xchg
ret
sbb
xlat
push
push
push
and
pop
aaa
aad
lock
push
lret
mov
fwait
sub
cmc
ja
dec
daa
arpl
test
xchg
call
pop
mov
ja
mov
cli
sub
xor
mov
pop
xchg
hlt
outsb
sarl
stc
adc
cmp
inc
outsb
in
or
add
adc
cs
push
test
in
fsts
data16
xchg
push
int3
rorl
enter
mov
imul
xor
cwtl
sbb
inc
fs
ror
cmp
arpl
add
push
push
add
imul
push
inc
dec
test
jo
add
pop
sub
insb
or
cmp
lea
pop
ror
push
mov
dec
push
stc
call
inc
das
imul
mov
dec
frstor
pop
push
mov
in
push
inc
push
cmp
sub
pop
cmp
add
add
ficoml
mov
xor
fiadds
mov
adc
jmp
mov
mov
cmpsl
in
xor
xchg
inc
mov
cmp
jb
mov
repnz
fwait
mov
or
jmp
cli
push
mulb
fistpl
out
imul
jne
insb
imul
out
sbb
push
xchg
dec
sub
pop
or
cli
call
shll
popf
or
insb
fs
packssdw
out
iret
sub
je
xlat
pop
inc
in
lret
movsl
dec
mul
jecxz
jl
test
lcall
fsub
cld
pop
and
xlat
sub
test
jne
out
mov
dec
sbb
shl
cld
add
push
mov
rcll
mov
fnstsw
pop
rcrb
testl
inc
leave
cwtl
ret
lret
or
xor
movb
mov
fdivl
cmp
mov
std
rcrl
movsb
sub
shrb
push
outsl
mov
jns
stos
or
movsb
bound
push
or
pop
dec
cmpsl
adc
dec
adc
pop
js
imul
add
outsb
xchg
push
bnd
leave
xchg
out
ret
cmpsb
cmc
aad
mov
mov
fldt
test
push
cwtl
pop
negl
push
xor
or
jo
mov
aam
cltd
dec
bound
sbb
aad
nop
jno
add
xorb
mov
loopne
fists
mov
daa
mov
imul
dec
outsb
or
mov
popf
mov
arpl
sbb
fs
stc
push
xor
adc
xchg
cmp
pop
push
data16
pop
cmpsl
adc
or
loopne
icebp
cmp
mov
xor
popf
jmp
ljmp
es
jbe
push
mov
test
mov
clc
mov
dec
cmpsb
pushf
xchg
adc
xlat
shlb
out
dec
ffreep
sbb
cmc
dec
and
or
repz
pop
cwtl
mov
mov
test
xor
xor
sub
push
ja
or
jns
push
push
icebp
sarb
test
mov
pop
mov
rolb
and
pop
sti
sub
fldl2t
int
int
insb
cwtl
mov
into
cmc
lahf
cmp
push
cli
sub
fstps
hlt
fcompl
ja
mov
call
fidivrs
ja
aad
loope
cmp
inc
mov
aad
mov
sub
jecxz
cmp
daa
test
mov
shrl
in
xchg
push
js
addb
bound
xchg
aas
pop
repz
movsl
adc
int
lcall
es
daa
mov
sbb
xor
in
lcall
pop
iret
pusha
pusha
fcoms
mov
mov
ret
adc
adc
and
xor
pop
mull
adc
scas
inc
pop
cmp
dec
bound
mov
lret
fldenv
lahf
xchg
psrlq
or
and
fs
xlat
jle
in
shll
push
add
mov
movsb
mov
fistl
gs
scas
leave
push
cmpsb
cmpsl
add
push
mov
fdivrl
adc
adc
outsl
cltd
jl
jne
sbb
repz
jnp,pn
ss
xchg
sub
jo
fdivs
mov
nop
xchg
mov
and
repz
inc
xchg
jmp
js
roll
xchg
mov
ret
dec
mov
push
add
test
test
out
adc
sub
sub
mov
dec
adc
sub
adc
and
lds
mov
inc
xchg
mov
jns
dec
sbb
imul
xorl
out
fnsave
or
clc
sahf
push
out
in
enter
lahf
cmp
push
sbb
or
adc
push
jl
not
sbb
sbb
popa
int3
xchg
out
popf
add
xchg
mov
ja
sbb
sub
mov
jb
inc
iret
dec
cmp
rcrl
loopnew
inc
pop
roll
cmp
xchg
int3
int
cwtl
ja
inc
push
xchg
mov
jbe
shrl
mov
rolb
sub
divl
inc
xchg
mov
or
add
lret
in
imul
aaa
ds
add
push
incl
sbb
fists
jle
fcoms
adc
add
cmpsl
or
or
filds
jns
or
adc
std
rorl
cmp
mov
sbb
repz
inc
aaa
mov
inc
sbb
lahf
test
jne
jmp
mov
inc
shll
pop
mov
call
lock
adc
inc
imul
xor
fistpll
sub
xchg
dec
rclb
lods
inc
cmp
inc
fstps
sahf
fsubr
jno
pop
clc
dec
xchg
addr16
add
add
pop
jo
arpl
je
pop
ret
add
adc
inc
repz
stos
cld
pop
sub
lret
addr16
test
mov
inc
pop
push
jbe
dec
sbb
cltd
int3
jbe
enter
mov
stos
fbstp
scas
xor
or
repz
jns
repnz
add
jns
or
jns
aaa
push
ret
ret
js
sbb
pop
push
dec
xchg
mov
push
aas
pusha
mov
xchg
rcrb
jno
dec
or
movsl
fucompp
mov
test
fwait
insl
jbe
repnz
fcomps
mov
lar
fldcw
cli
bound
adcb
scas
mov
ds
adc
sbb
dec
lahf
mov
adc
cmp
sbb
jne
mov
sub
xor
andl
or
sbb
stos
decl
xchg
lret
and
push
push
xchg
push
and
jecxz
jno
mov
inc
and
hlt
ss
and
dec
xor
cmp
dec
loopne
mov
sbb
xchg
outsl
stos
cmpsl
pop
xor
cmpsl
jmp
outsb
push
cmp
gs
mov
adc
test
out
outsl
or
mov
pop
jb
mov
dec
mov
pop
add
lods
xor
cwtl
daa
xchg
outsb
xor
gs
outsb
pop
inc
mov
and
cmc
sbb
jo
mov
add
js
lea
jecxz
js
loopne
leave
pop
jno
xchg
popa
add
mov
xlat
into
add
mov
dec
cltd
nop
scas
push
mov
ljmp
sub
clc
mov
aaa
xchg
adc
cld
dec
aad
push
aas
sbb
mov
clc
std
js
mul
pushf
mov
ss
inc
inc
or
dec
jl
fiadds
or
sar
rcrl
fs
or
mov
fcmovb
les
rcrl
mov
jb,pn
bound
fmul
mov
or
mov
xor
int
es
adc
enter
sub
and
or
and
adc
ja
pop
iret
mov
or
ja
cmp
imul
cmp
adc
lret
sbb
inc
in
js
jle
call
and
push
or
add
hlt
xor
jecxz
or
or
jecxz
pusha
mov
repz
xorb
cmp
jecxz
daa
dec
dec
movsb
or
test
pop
shrl
cmp
pop
xchg
jmp
cs
aam
daa
jmp
sbb
adc
xchg
mov
mov
add
lds
ja
sbb
in
fsubrs
inc
mov
sbb
outsl
shlb
lret
mov
mov
dec
out
cld
xlat
das
test
mov
jne
adc
shll
push
inc
lods
sbb
or
xchg
jns
mov
jb
lods
pusha
push
mov
sub
mov
dec
or
sub
jge
xchg
dec
cmp
inc
xor
sbb
sbb
and
mov
mov
js
ret
xchg
pushf
sbb
sti
pop
push
inc
cli
or
push
push
cmp
push
cmp
push
add
fmull
cs
cmp
pop
mov
pop
jae
fimull
call
sub
dec
xor
push
adc
pop
je
pusha
pop
fwait
mov
scas
shlb
or
rep
mov
mov
mov
mov
test
daa
xchg
mov
dec
das
inc
pushf
popf
lahf
adc
or
test
gs
pop
rolb
cmpsl
pop
cwtl
or
mov
insb
cmp
test
xchg
xor
mov
test
jae
arpl
or
jl
shll
pop
rorb
mov
mov
mov
or
fildl
gs
inc
or
or
mov
arpl
repnz
jo
xchg
int3
cmp
idiv
mov
cmp
add
add
cmp
sub
jecxz
push
or
jae
pop
sbb
orb
pop
push
call
lock
pop
and
sub
sub
push
fs
pop
add
test
jge
sbb
std
in
jbe
cmp
sub
aas
or
xchg
push
gs
scas
cmp
subb
ja
mov
lea
xlat
popa
into
fldl2e
adcb
in
add
aad
sub
js
pop
movsl
xor
xchg
repz
jl
xor
mov
add
stos
and
push
cltd
jno
jnp
or
and
repz
mov
insb
hlt
mov
dec
mov
dec
mov
sbb
icebp
push
jne
pop
push
clc
imul
stos
je
sub
enter
cmp
aas
aaa
outsb
mov
mov
int
push
xor
xchg
insb
jg
shlb
xchg
out
mov
fmuls
xchg
mov
mov
jle
cmp
push
cwtl
xlat
mov
imul
mov
mov
add
fdiv
push
mov
fs
popa
scas
dec
sbb
pop
movsl
fsubrl
dec
loop
aaa
xchg
cld
int3
adc
xor
or
rclb
xor
popa
movb
dec
mov
fwait
out
mov
inc
fwait
mov
jmp
mov
pop
test
xor
ja
pop
cmp
jno
test
arpl
clc
pop
dec
int3
fiadds
cmp
cmp
sbb
test
test
dec
stos
dec
mov
out
sbbb
stos
mov
mov
push
mov
add
fnstsw
push
ficompl
add
mov
and
std
lds
xchg
push
aad
xor
ret
sbb
out
sbb
cmpsl
jno
pop
dec
mov
dec
outsl
mov
daa
lds
and
jmp
aad
icebp
dec
jg
or
push
cwtl
pushl
nop
stos
pop
cld
and
movsl
lds
sub
stc
xor
lret
mov
pusha
cmp
sbb
repz
nop
cwtl
jg
ss
loope
dec
cmp
add
fbld
xchg
xchg
es
add
add
inc
mov
jbe
sbb
test
out
inc
lret
mov
mov
loop
lcall
data16
inc
xor
mov
cld
stc
mov
cmp
xor
sbb
xchg
cs
test
rolb
jns
xchg
stos
popa
mov
pop
add
lcall
fildl
sub
jg
lods
ret
int
stos
lret
gs
xor
sub
push
repnz
adc
dec
push
inc
jnp
imul
mov
pop
test
ss
movsb
jmp
dec
jbe
sbb
add
movsb
sti
add
imul
dec
mov
movsl
sub
sbb
pop
jle
repz
jmp
mov
std
das
mov
aas
xchg
stos
movsl
das
adc
aas
test
ficoms
clc
fildl
mov
test
adc
inc
mov
addr16
sbb
push
lcall
adc
lret
les
cld
adc
push
push
inc
add
mov
lret
fiadds
dec
fcom
mov
stos
mov
cmpl
call
sub
test
pusha
mov
daa
inc
mov
out
push
push
daa
clc
imul
lods
pop
jb
hlt
dec
lcall
push
mov
mov
adc
fs
lcall
jl,pn
add
pop
add
push
jo
pop
xor
push
push
xor
out
sbb
repnz
inc
stos
push
cs
loopne
fcompl
dec
dec
movsl
es
mov
adc
push
sar
mov
ja
xchg
jmp
idivl
mov
dec
mov
nop
and
mov
adc
mov
and
cmc
xor
xchg
inc
add
neg
dec
jne
loope
adc
sub
mov
pushf
xor
cld
imul
pop
out
and
pop
andl
or
lret
sbb
aas
leave
mov
mov
lods
sbb
sahf
out
nop
mov
jl
aas
lret
mov
aas
shlb
mov
push
adc
outsb
mov
jne
out
aas
mov
out
aad
cld
rcr
mov
xchg
mov
inc
sahf
adc
shlb
sub
out
iret
add
ds
push
daa
jns
pop
ja
ffreep
test
mov
or
cmpsl
jnp
mov
xchg
lret
jne
imul
jae
adc
aas
sub
lods
loop
mov
in
mov
jb
mov
ret
in
jns
ret
stos
mov
and
sbb
sbb
xchg
push
negl
jb
leave
dec
pop
sbbb
lret
stos
sub
rcrb
inc
repnz
stos
mov
xchg
jl
stc
das
adcl
adc
ret
test
aaa
sub
out
mov
lret
push
fisubs
adc
cmp
mov
sub
shrb
aas
lcall
adc
clc
cmpsl
xchg
cld
jns
sub
mov
push
push
imul
dec
andb
adc
imul
lret
sbb
cmp
mov
mov
out
pop
dec
roll
push
mov
shll
cmp
sbb
cltd
pop
cmpsl
pop
outsb
addr16
sub
loopne
call
jp
dec
push
jl
xorl
ss
sbb
pop
push
sub
jo
mov
mov
in
push
ret
cmp
dec
push
test
pop
mov
jl
sub
ficoml
icebp
fs
inc
repz
aam
movsl
subb
movsb
test
shll
jno
cmp
aas
cs
dec
rcr
inc
mov
aam
sti
xlat
pop
and
outsb
or
jns
leave
lret
pop
dec
loope
sarl
std
pop
popf
cmpsl
iret
aaa
jg
mov
xchg
incl
cmpsl
add
dec
sbb
aaa
xchg
sub
and
imul
cmpb
push
mov
push
pop
dec
pop
sub
cwtl
and
and
dec
popa
les
sub
lock
sub
rep
pop
sub
and
mov
nop
iret
xor
add
push
cmp
rcr
call
fldl
adc
jnp
push
sahf
adc
sub
insl
sub
stos
mov
xlat
inc
mov
add
ret
push
scas
adc
pusha
test
cmp
xchg
test
push
add
sbb
lret
cli
xor
imul
inc
in
push
clc
stc
jo
sub
xchg
out
mov
nop
add
nop
add
xchg
cmc
adc
xor
cmpb
xchg
shll
sub
mov
push
pop
insl
imul
shr
lods
xchg
add
out
mov
test
jmp
inc
add
mov
xchg
in
xchg
pop
pop
sbb
push
test
adcb
inc
sbb
pop
in
dec
adc
outsb
call
add
add
lds
pop
pop
jnp
xor
lock
or
rolb
mov
jne
xchg
cltd
nop
add
mov
cmp
pop
mov
xchg
jmp
xor
fisttps
das
cmpsl
movsl
stc
fbstp
or
mov
aad
add
outsl
mov
xchg
mov
adc
cli
lahf
xor
ret
xchg
es
inc
aaa
adc
sub
mov
push
and
dec
pop
cmp
and
inc
cmp
mov
in
sbb
pop
mov
xlat
stos
xor
or
mov
jecxz
add
xor
mov
add
dec
mov
adc
pop
add
or
movsl
jnp
unpckhps
xchg
aam
lcall
loopne
dec
dec
stc
xchg
fdivl
sbb
push
ds
js
jo
mov
push
jmp
lods
popf
xchg
cmp
ret
subb
arpl
shrl
and
ds
xor
das
icebp
and
cmp
add
and
mov
pop
iret
arpl
sbb
addl
ljmp
mull
add
mov
cltd
dec
jl
loop
xor
mov
shrl
in
push
cltd
inc
clc
mov
ss
push
popa
adc
mov
inc
pop
insl
lcall
data16
lds
xor
pusha
mov
popa
adc
popf
add
jnp
sbb
mov
mov
int
xchg
iret
cmp
xchg
insl
test
mov
xchg
pop
adc
jg
pop
mov
daa
cvttps2pi
add
push
jp
sbb
pop
xor
lods
js
inc
cmp
jnp
in
adc
fildl
test
push
adc
xchg
and
ret
iret
scas
movsl
shlb
mov
gs
sbb
pop
or
aad
mov
hlt
mov
out
out
pushf
push
dec
mov
fcmove
cli
xchg
and
add
aad
out
xorb
jnp
clc
cld
std
insl
jecxz
mov
xor
fisttpll
pop
sub
inc
adc
sahf
in
scas
imul
inc
fidivrl
ljmp
lock
notl
xchg
arpl
js
cmp
mov
push
push
adc
sbb
push
fs
sbb
sbb
jge
test
lods
pop
pop
js
lcall
fs
push
rol
pop
inc
fs
adcb
or
pop
fstpt
jnp
adcl
fisttps
scas
xchg
pop
jmp
jae
sub
xchg
push
push
dec
mov
test
cmc
lock
call
mov
and
decb
and
cmpsb
aaa
or
mov
pop
add
insb
inc
imull
pop
mov
lahf
push
std
cmp
inc
inc
fbld
pop
out
dec
divb
sbb
cld
push
inc
lahf
push
ret
jne
sarb
pop
mov
add
jp,pt
arpl
jne
sahf
mov
mov
aam
scas
mov
cs
int3
push
ljmp
cmp
cs
outsl
sub
inc
ljmp
dec
imul
imul
aad
pop
hlt
or
pop
mov
gs
xor
mov
lods
cmp
bound
stos
dec
dec
push
in
je
imul
mov
xor
pop
jl
fcomi
fwait
movsl
inc
lcall
scas
pop
jle
cmc
xchg
repz
xlat
lcall
or
xchg
dec
mov
andl
inc
adc
pushf
not
or
aaa
mov
and
cwtl
push
out
dec
std
das
lods
mov
adc
clc
lock
pop
xchg
mov
pop
sbb
ret
pop
mov
cmp
xor
jecxz
arpl
nop
adc
roll
lock
fs
aam
xchg
ds
jae
enter
test
jns
adc
pop
or
fsubl
mov
adc
dec
xchg
std
or
pusha
jg
js
xchg
sbb
adc
xorl
dec
mov
aas
and
mov
popf
rcrb
es
pop
pop
lods
sahf
ljmp
inc
cmp
cs
adc
sbbb
xor
mov
out
scas
push
ss
sarl
inc
adc
test
je
imul
and
mov
push
dec
sahf
pop
add
cmp
mov
pushf
push
push
sub
cmpsl
jle
out
popa
adc
out
ret
lret
mov
ljmp
push
xchg
sarb
mov
add
repz
out
test
jg
outsl
jns
push
loope
add
mov
cld
scas
dec
cs
push
xchg
mull
add
mov
mov
push
fs
xchg
jns
scas
push
mov
iret
and
ficompl
push
stos
lret
pop
lahf
push
xor
test
ficomps
jnp
xchg
pop
ljmp
fs
test
mov
bound
mov
loopne
out
inc
lret
fwait
mov
dec
fcmovnb
fcomps
mov
push
mov
mov
jge
xor
ja
mov
add
and
cmpb
pop
aad
push
mov
jmp
test
pop
out
test
lock
jg
sbb
jne
xor
lahf
lcall
lret
jmp
lea
add
mov
pop
lods
loope
dec
mov
adc
xchg
sub
pop
daa
jle
in
push
jp
and
mov
mov
dec
shrb
mov
add
jmp
lahf
and
mov
lcall
xchg
jns
add
or
xor
jo
and
push
inc
push
lcall
adc
pop
lds
cmpsb
popa
mov
sbb
dec
hlt
cmpsb
lea
xchg
imul
cmpsl
xor
or
aas
fs
aad
fmuls
jg
lods
or
jmp
aaa
lods
add
xor
jnp
push
xchg
add
mov
xor
fucomp
jge
into
lock
jo
jmp
cmp
loopne
scas
pop
das
popa
test
out
dec
mov
mov
paddd
push
pop
mov
lea
dec
jo
cmp
fwait
sub
std
rcr
dec
sbbl
pop
outsb
ljmp
xchg
sbb
imul
cmp
dec
in
les
cld
xor
test
out
xchg
test
ja
pop
adc
aad
dec
fs
aad
sbbb
fstpl
js
in
insb
add
push
test
andl
stos
mov
dec
fisttpl
in
mov
jmp
lea
in
pop
add
mov
sbb
mov
add
mov
xor
mov
and
or
push
out
jb
adc
dec
cwtl
loop
or
jno
xor
jae
fbld
imul
or
shll
gs
sbb
push
push
addl
pause
mov
jae
fisubl
cs
mov
sub
je
and
andb
ficoml
jbe
pop
popa
call
jns
lahf
addb
and
popf
aam
or
scas
xor
jns
pop
dec
push
or
xor
fwait
add
mov
mov
ret
push
clc
push
pop
cmp
push
dec
jp
or
aas
push
aas
sub
in
sub
js
and
and
ja
das
int
jp
andl
add
loope
sbb
push
sub
ret
ljmp
stos
sti
cmp
push
addr16
jl
lods
mov
mov
ss
sub
mov
sub
push
xchg
xor
dec
das
aaa
mov
fmulp
sub
inc
mov
pop
shlb
gs
push
cmp
mov
push
repz
aas
or
sti
popl
push
ds
subb
cmp
inc
pushf
bound
inc
cmc
jmp
jb
or
cwtl
pop
sub
pop
sbb
lods
inc
xchg
mov
sbb
pop
mov
mov
popa
in
fidivs
add
fsubrp
mov
arpl
xchg
in
clc
push
popa
fbstp
pop
adc
mov
out
xor
push
push
adc
cld
inc
pop
cmpsl
push
mov
int
insl
outsb
or
imull
mov
adc
shr
pop
xor
shlb
pop
cmp
in
xor
push
mov
lahf
xchg
inc
outsl
push
mov
pop
fcom
sbb
out
lock
push
es
sbb
shr
fsubl
jb
pop
fistl
int3
stos
ret
mov
mov
or
lea
or
and
xchg
fwait
sbb
mov
mov
jle
les
sahf
xchg
rclb
fidivrl
icebp
inc
dec
mov
bound
pop
scas
or
jg
test
test
pusha
test
std
and
imul
pop
fdivrp
pop
lock
xor
xor
into
bound
ljmp
cmp
jnp
dec
pusha
cmpsl
scas
xor
jle
lret
cli
lret
xchg
dec
movups
lods
inc
lds
sbb
dec
aad
adc
push
adc
fisubrl
pop
mov
mov
mull
filds
pop
jl
xor
inc
jns
xor
cmp
inc
lea
and
repz
and
mov
cmp
sub
lret
ffree
xor
pop
push
call
stos
movl
iret
stc
sbb
adc
dec
daa
mov
xor
jecxz
push
fidivrl
test
and
movsl
int
aam
sub
pop
bswap
and
jbe
in
push
in
adc
mov
lahf
add
sti
rcr
ss
rorb
adc
jmp
insb
ljmp
cmp
sub
fwait
lods
mov
push
cmp
xor
pop
add
aaa
cmp
mov
inc
xchg
in
fcomps
gs
xchg
je
sub
dec
sbb
lea
xchg
push
push
mov
enter
aam
cmc
xchg
cmp
jne
xchg
fldt
jl
jl
dec
and
clc
mov
mov
mov
mov
push
cmpsl
inc
jne
xor
mov
cmp
dec
dec
mulb
and
incb
push
jl
inc
push
rorb
sbb
repnz
adc
add
sysexit
push
adc
jg
xchg
sub
test
or
inc
push
cmova
push
adc
int
jo
mov
das
cmp
repnz
scas
scas
sti
sub
add
xchg
jns
mov
push
ja
in
mov
mov
subb
cld
mov
add
gs
lret
xchg
mov
ret
xchg
negb
adc
xchg
aaa
jnp
aam
mov
xchg
lcall
loopne
mov
xor
sbb
dec
push
xlat
std
push
sbb
call
mov
mov
in
icebp
pop
sub
rcrl
js
sub
pop
fists
dec
aam
in
xchg
jbe
mov
dec
inc
xchg
pop
lcall
in
icebp
jmp
leave
mov
inc
loop
and
cltd
mov
and
push
pop
cmpsb
fmuls
fs
cltd
je
push
mov
or
andb
inc
and
shr
add
push
lahf
cmp
add
in
push
push
cmpb
inc
enter
lcall
or
pushf
icebp
fcompl
insl
add
jae
stos
aad
pop
and
scas
es
sub
mov
stos
jns
pop
loopne
leave
adc
lods
sub
sti
fildl
pop
mov
rorl
cmpsl
push
mov
mov
mov
popa
cmp
fadd
and
mov
mov
jle
add
mov
nop
aad
notb
in
loopne
sub
and
jmp
cmpsl
mov
jne
and
fs
lret
mov
mov
cmpsb
aaa
jg
sub
or
add
and
xor
flds
sub
jp
add
jg
cmp
ss
xor
cmp
test
rorb
divl
cmp
jns
shll
jns
push
sbb
xor
sub
sbb
jmp
in
mov
arpl
mov
ret
mov
push
and
insb
lcall
out
into
arpl
or
sub
loop
sbb
in
aaa
or
mov
dec
test
cwtl
lds
xchg
sub
jns
scas
pop
mov
jmp
push
sub
aad
fdivr
mov
xchg
lods
test
mov
clc
lods
mov
dec
fcmovnbe
sbb
stos
xchg
push
sbb
lahf
iret
fistps
inc
mov
and
sub
cmp
jge
arpl
jb
rcrl
mov
mov
pop
jbe
movl
inc
nop
in
pop
shll
adc
add
decl
cwtl
mov
dec
adc
sub
pop
sub
mov
shl
push
sbb
stc
jle
in
out
jecxz
push
adc
mov
in
lods
cmpb
das
pop
mov
jge
mov
je
sbb
inc
hlt
mov
xchg
mov
push
mov
mov
dec
push
cli
popa
pop
test
orb
xlat
rorl
test
mov
pushf
push
xchg
loop
jo
pop
jle
lods
inc
scas
out
pushf
rorb
sbbb
js
orl
push
insb
fisttpl
pop
dec
jns
mov
or
mov
fsubr
jl
xor
push
mov
lcall
rorb
jbe
dec
ljmp
je
sbb
inc
jp
test
xorl
jbe
into
mov
cmpsl
mov
sbb
daa
pop
fisubs
push
sub
sub
sub
negb
push
popa
push
fnstsw
jns
ss
xor
jecxz
std
jecxz
push
outsb
out
daa
jnp
dec
in
mov
and
out
mov
cmp
mov
andl
mov
push
ror
or
mov
pop
xchg
test
pop
or
xchg
jmp
int
and
out
mov
sbb
inc
hlt
adc
jno
cmp
jge
dec
sub
jne
jbe
subl
xchg
imul
fstp
mov
iret
out
pushf
pop
push
lea
fwait
jl
mov
sbb
ret
repnz
mov
dec
push
iret
jne
push
jbe
xchg
jle
sub
or
or
stc
rcl
cmc
in
fdivs
hlt
cmp
aad
or
adc
js
out
aas
loop
cmc
test
xor
hlt
pop
pushf
bnd
cmp
lods
sbb
out
lret
pop
dec
imul
enter
add
mov
fsub
les
cmpsb
stos
std
aam
jne
clc
pop
cld
pushf
out
xchg
nop
mov
mov
push
mov
push
pop
aaa
out
mov
add
pop
std
mov
out
push
lahf
and
gs
xchg
xchg
sarb
std
adc
pop
push
movd
dec
push
sarb
mov
or
sbb
insl
xor
xchg
test
inc
fcoms
popf
stos
inc
mov
lret
lret
mov
inc
pop
mov
lods
popf
fwait
inc
sub
mov
js
and
movsl
std
pop
lahf
xchg
out
mov
mov
add
adc
cmp
sub
in
push
insl
je
mov
mov
cmp
mov
clc
sub
mov
mov
outsl
rclb
mov
addr16
jp
mov
add
movsb
fmul
or
cltd
add
inc
dec
cmp
xor
fcmovb
test
sbb
sub
out
xchg
inc
or
inc
mov
lock
sti
out
in
sbb
add
and
jge
fmull
adc
and
push
pop
dec
and
notb
sbb
loope
aam
add
loop
ljmp
out
pop
add
xchg
adc
test
cmp
out
or
add
xchg
imul
out
xor
cltd
leave
push
jbe
jae
dec
cmpsb
iret
out
and
sti
mov
lcall
pushf
ffreep
jmp
xchg
pop
imul
es
dec
ret
pop
sti
or
pop
out
or
aas
dec
in
rorl
push
and
gs
inc
cmpsl
jb
jb
adc
pusha
push
sub
jge
mov
dec
add
pop
dec
sub
sub
in
out
jno
xchg
imul
mov
jecxz
mov
fbstp
mov
popa
std
repnz
inc
mov
enter
mov
repz
xor
sti
into
aad
nop
loop
add
cmp
sbb
les
add
lds
mov
sub
leave
imul
xor
jne
mov
pop
das
fscale
idivb
mov
push
add
sbb
mov
jl
aam
subb
bound
xor
cmp
xchg
loop
mov
sub
std
jge
jmp
mov
pop
decl
dec
sbb
lods
lds
or
fidivrl
xor
movsl
dec
popf
dec
adc
mov
shrl
cwtl
jge
cltd
pop
mov
cmp
inc
jno
out
mov
jbe
sub
cmc
outsl
dec
insb
mov
sarl
ret
ljmp
and
inc
mov
lods
cltd
mov
pop
lahf
mov
or
imul
stc
xchg
and
insl
into
pop
pop
movsl
call
and
shufps
sbb
sub
shll
xchg
mov
push
ja
inc
fistpl
mov
mov
jg
dec
shll
sub
jmp
sti
sbb
arpl
loop
fucom
cmpsb
inc
push
xor
sub
sub
out
ficoml
lds
pop
dec
or
pushf
repnz
notl
lret
jbe
xor
jbe
jne
loope
and
mov
mov
jmp
mov
out
fbstp
or
gs
jae
stos
and
shll
and
or
push
popa
sub
push
pop
jns
sti
inc
iret
fnstcw
mov
or
sub
mov
mov
aad
das
rcrb
repnz
aad
or
pushf
sbb
mov
sbb
ja
ret
sub
pop
shr
dec
sti
out
rolb
cmc
sub
out
sahf
loopne
fldenv
jno
fimull
jge
scas
loop
je
push
fdivl
cmpl
push
mov
and
inc
imul
push
jg
pop
fdivl
mov
cli
call
js
push
sbb
iret
testb
lcall
aaa
in
pop
add
xlat
inc
icebp
pop
loopne
xor
cmp
icebp
push
pop
push
leave
enter
fsubr
xchg
mov
loopne
sar
lods
out
jnp
inc
leave
xor
mov
mov
fs
in
fisttpl
rep
cmp
add
or
xchg
inc
std
pop
jle
jmp
mov
lds
pushf
mov
enter
ds
jns
aas
mov
mov
cwtl
sub
mov
lret
insb
adc
pop
cmpb
aaa
add
aam
mov
aas
ret
in
pop
rcrb
cld
push
jp
cli
pop
icebp
mov
hlt
in
pop
pop
sahf
add
cmpsl
rclb
lahf
out
jl
jl
xor
sbb
int
mov
fstpt
sub
dec
xor
push
sub
imul
jo
mov
mov
adc
sbb
dec
pop
cltd
bound
xchg
or
inc
inc
roll
addr16
jbe
add
aam
andl
loopne
dec
fwait
mov
test
movsl
or
pop
fsubs
stos
dec
sub
daa
adc
adc
cld
or
xlat
xchg
shll
dec
xor
out
mov
and
xor
fadds
loopne
cmc
pop
jp
std
out
xor
imul
jmp
xlat
mov
es
inc
adc
mov
test
out
inc
outsb
xchg
int3
jg
mov
aam
mov
mov
lret
fbstp
movsl
not
scas
aaa
lahf
sbb
lret
cmp
cmp
xchg
daa
dec
adc
and
cmp
jmp
in
lods
inc
xchg
popf
stos
sbb
int3
pop
lcall
xchg
repnz
jbe
aas
popa
repnz
inc
rcll
add
leave
stos
arpl
xchg
sahf
or
mov
scas
sbb
test
pop
cmp
pop
icebp
push
xchg
sbb
inc
stos
nop
mov
sbb
das
push
push
scas
int3
adc
add
lret
cld
adc
mov
cltd
fistps
and
xor
ja
out
inc
mov
pop
add
jnp
push
aam
jmp
scas
cmp
ss
loopne
and
push
pop
xor
push
sbb
aaa
or
sub
jle
aas
jne
nop
xchg
pop
enter
in
aaa
jns
stos
push
dec
in
dec
leave
ss
mov
imul
and
adc
pop
push
ret
cmc
mov
xchg
xor
stos
mov
popf
lret
pop
cwtl
hlt
xlat
dec
stc
lahf
into
movsb
adc
mov
jb
add
enter
adc
sarl
lret
cmp
das
lret
lods
aas
or
xchg
dec
xchg
loop
nop
or
jle
and
xor
xor
sub
add
pop
pop
sub
lret
ficomps
dec
add
dec
mov
lds
lods
or
push
fadds
lea
xor
xchg
sar
pop
jl
lods
mov
jo
pushf
jg
or
dec
cwtl
fnsave
or
mov
outsl
fs
pop
out
mov
imul
fdivp
dec
push
cltd
fistpll
sti
or
call
loope
xor
jecxz
lret
sahf
mov
jg
shlb
sbb
sbb
iret
es
adc
mov
pop
xlat
jae
loope
ret
mov
lods
jp
sarb
sbb
fistpl
pop
xor
bound
lock
pop
inc
out
pop
xchg
stc
out
cmp
incl
ds
pop
sub
mov
mov
in
dec
gs
mov
mov
testl
cmp
shrb
or
cmp
cmpsb
js
aaa
xor
arpl
and
pop
outsb
shr
jg
adc
rorb
inc
or
mov
fwait
xchg
stos
mov
jns
insb
and
cmc
mov
adc
mov
sub
iret
test
mov
mov
int
cmp
aam
cs
ret
xchg
cmp
adc
fsubrl
sbb
mov
sub
jl
outsb
out
sub
out
lock
rol
xor
mov
add
xchg
jns
mov
cmp
ret
sbbl
insl
pop
sub
mov
repnz
or
mov
adc
xchg
push
out
sbb
mov
gs
int
fldl
sbb
das
cmp
call
loope
or
push
fnstenv
out
data16
cmpsl
div
inc
in
ucomiss
iret
arpl
jl
xchg
scas
pushf
enter
out
bound
mov
and
dec
xchg
je
sbb
push
imul
and
mov
bndstx
mov
stos
fsubrl
adc
leave
adc
sbb
push
out
lret
pop
int
iret
mov
pop
ret
out
jl
xchg
in
les
push
clc
fst
das
add
jl
pusha
sbb
jmp
ljmp
adc
lret
out
lds
frstor
mov
jmp
dec
mov
sub
add
jecxz
and
adcb
cmp
xor
mov
dec
mov
mov
mov
jecxz
notl
fwait
mov
jecxz
dec
lret
sbb
push
sti
cmpsl
push
mov
divb
es
addl
sti
cmp
nop
inc
pop
in
adc
jg
call
movsl
pop
pop
lods
mov
push
ret
mov
addr16
jbe
cs
sahf
arpl
in
cmp
mov
insl
mov
sub
andl
pop
js
outsl
add
or
push
lock
negl
ja
nop
xchg
add
push
stc
mov
lods
arpl
insl
ja
inc
jns
mov
loope
sbb
out
fadds
push
mov
or
stos
push
out
push
aam
arpl
inc
fidivrs
xor
gs
out
lcall
inc
push
push
or
cmp
cmp
and
sbb
adc
add
xchg
inc
test
mov
xchg
xor
inc
dec
insl
fisubs
add
cmp
jmp
or
ret
xlat
stos
es
dec
je
mov
mov
lret
test
mov
aam
adc
add
cmp
and
pop
pop
or
mov
fdivrl
call
repnz
mov
call
clc
mov
imul
aam
fisttpll
stc
fwait
add
and
cmc
ja
jle
mov
fwait
jae
mov
div
repnz
push
cmp
je
loop
loopne
xor
notb
add
cli
xor
decl
sti
mov
adcl
jne
mov
add
and
fmuls
push
push
pop
mov
insb
test
imul
fcompl
pushf
sbb
jge
pusha
sbb
and
and
or
insl
popa
dec
fimull
mov
mov
jmp
xchg
lcall
dec
mov
add
jg
xor
cli
aas
imull
push
dec
repz
pandn
ror
xor
mov
fcomp
mov
shlb
aaa
jmp
xchg
mov
pop
ds
fs
xor
dec
or
data16
add
int
xchg
add
or
adc
mov
sbb
xorb
xor
sbb
mov
xor
mov
sub
dec
cmp
jmp
into
dec
dec
inc
insl
jl
mov
fadds
mov
sysenter
in
jecxz
xchg
push
fwait
push
loop
mov
nop
popf
pop
dec
lahf
movsl
xchg
ja
xchg
aad
popf
divb
or
rcl
stos
ljmp
popa
pop
add
dec
jge
cwtl
sbb
ss
adc
dec
cwtl
pop
add
cmpsb
aaa
insb
xchg
jae
daa
mov
adcb
enter
xchg
fiaddl
shll
popf
xchg
mov
sub
inc
test
inc
and
or
test
mov
mov
or
jle
jg
aad
xchg
loope
mov
jmp
pop
or
xor
pop
sbb
lcall
lods
sub
lcall
lea
xor
aad
adc
popa
jno
mov
sub
pop
sbb
cmp
inc
and
cmpsb
pop
mov
pop
xchg
loope
mov
insl
or
mov
aas
mov
outsl
jnp
xor
xor
push
into
lret
mov
stos
jb
xchg
imul
add
pop
inc
adc
xor
cltd
adc
stos
push
xlat
pop
nop
inc
es
fmuls
or
sbb
cmpsl
mov
lods
insb
mov
sti
add
sub
xor
push
xchg
nop
test
out
pushf
xchg
jle
gs
ret
push
ljmp
sub
adc
add
mov
sbb
sub
call
orb
dec
std
in
xchg
inc
adc
inc
dec
jmp
rol
mov
xor
scas
lahf
pop
stos
stos
ret
hlt
add
or
lcall
scas
aam
dec
add
cs
jb
mov
sub
inc
negb
jne
fldt
xor
insl
sbb
push
push
mov
int3
aas
inc
jbe
movsb
neg
sbb
ret
clc
mov
sub
jae
fbstp
int3
test
push
add
es
ja
mov
jbe
iret
sahf
or
mov
push
pop
divl
mov
fbld
push
or
xor
pusha
imul
test
pop
add
cmp
in
or
sub
sub
into
mov
dec
inc
cmp
xor
add
lret
push
jb
int
loope
inc
dec
cwtl
ljmp
sub
mov
mov
xchg
jmp
cmpsl
mov
scas
xchg
test
loopne
dec
mov
imul
inc
jno
pushf
push
je
inc
movsb
jge
mov
mov
mov
leave
es
mov
icebp
std
mov
dec
in
lret
cmpsb
mov
out
aaa
aas
out
jnp
mov
sbb
mov
adcb
stos
cmpsl
fnop
and
xchg
sti
test
xchg
mov
jbe
clc
jge
pop
sarl
fstpl
pop
dec
sub
mov
sub
ret
pusha
mov
insl
lods
and
and
daa
ret
sub
xchg
and
testl
movsl
out
push
or
pop
xchg
out
add
mov
cmp
pop
jecxz
mov
bts
sbb
out
shl
das
pop
out
pop
das
lahf
or
pop
pop
dec
stc
repnz
dec
sbb
xor
ret
cs
cwtl
int3
test
scas
icebp
in
lock
fdivp
and
jmp
or
push
out
add
jp
les
cmp
dec
mov
lods
clc
enter
add
cltd
sti
add
lea
xchg
aam
sub
jge
subb
jp
test
clc
mov
insb
loopne
push
outsl
ds
pop
int
mulb
jbe
jnp
fld1
push
mov
sbb
pop
add
ret
mov
pop
cli
sub
fs
inc
mov
data16
lods
and
lret
in
add
cmpsl
into
adc
cmp
inc
in
movsb
pop
testb
shl
das
sub
mov
pop
pushf
and
cld
mov
dec
xchg
xor
adc
adcl
aam
jb
xor
aad
mov
or
jg
jbe
into
and
imul
pop
gs
or
add
adc
stos
mov
js
mov
inc
and
cld
lret
dec
xor
xchg
mov
or
jl
and
js
sub
mov
enter
dec
lods
mov
pop
ss
fwait
push
mov
mov
stos
sahf
cmp
xchg
lcall
sbb
pop
pusha
out
stos
add
lods
mov
pop
movsb
inc
in
pop
sbb
out
je
ficompl
push
lods
xor
jae
add
fldt
lret
inc
and
outsb
gs
jp
in
cmp
data16
sbb
in
dec
in
xchg
sbb
in
xor
pop
fcmovb
xchg
test
cwtl
sbb
xor
insb
jmp
or
in
mov
and
cmp
into
clc
mov
out
gs
dec
in
enter
cs
mov
int3
mov
pop
fdivs
not
stos
fwait
mov
and
je
aad
outsl
pop
fidivl
ljmp
cmpsl
cmpb
sahf
adc
cmpsb
sbb
xchg
jge
shrl
adc
std
popa
sub
das
adc
lret
ss
sub
or
pop
repnz
push
movsl
scas
ret
jbe
push
inc
jl
lods
stc
and
adcb
lods
pop
std
test
out
ret
jmp
mov
into
lock
push
mov
loop
push
mov
or
cmp
ret
fidivs
jl
cld
inc
cmp
into
icebp
push
cmpsl
movsl
jecxz
sub
push
pusha
fisttps
xchg
push
faddl
fistpl
jl
and
or
in
rcr
in
cld
sub
stos
push
loop
xchg
test
test
mov
xor
in
es
insb
outsb
and
push
cmpsl
addr16
sub
cs
sti
cli
lock
popa
mov
xchg
adc
cmpsl
pusha
mov
inc
fldenv
out
push
mov
xchg
lds
pop
cmp
stc
jle
insl
dec
sub
inc
loope
xor
pop
in
sbb
jg
lahf
inc
popa
dec
scas
daa
sub
cmp
mov
cli
xchg
sbb
jle
loopne
pop
sbb
pop
push
repnz
sub
or
mov
mov
sbb
fwait
mov
fcoml
adc
in
dec
fcompl
jp
es
aam
cmp
stc
or
orl
and
mov
mov
add
mov
push
ja
push
push
xor
mov
sbb
pop
xchg
lock
into
lahf
pop
je
and
add
jge
xchg
jmp
cmp
sbbb
icebp
test
imul
mov
aaa
or
pusha
mov
out
lods
sub
push
inc
jp
insl
dec
xchg
jle
into
add
data16
mov
lods
fs
and
lcall
cmp
gs
enter
dec
xorl
leave
ficomps
popf
insl
pop
insb
sbb
mov
xchg
fbld
int
cwtl
push
sbb
jl
out
xchg
maskmovq
testl
push
push
mov
jle
xor
repz
into
cmc
jno
sub
and
dec
adc
inc
xor
aad
inc
pushf
lahf
sub
ret
push
inc
xchg
jns
mov
loop
cwtl
scas
xchg
jne
scas
dec
ret
sbb
loope
mov
mov
mov
mov
or
leave
cmp
inc
dec
jb
scas
and
in
out
mov
mov
loop
sub
in
or
jmp
xchg
and
stos
cli
dec
jae
cs
inc
mov
in
imul
rorl
shll
adc
flds
sub
imull
sbb
push
shlb
popf
or
pusha
push
dec
mov
in
mov
enter
adc
jo
or
and
ficompl
in
cmp
outsb
pop
test
mov
int
sub
cmp
or
sub
repz
mov
mov
sbb
lret
ret
ljmp
sub
and
popf
int
int3
xor
mov
push
sahf
and
std
mov
add
subl
mov
dec
jl
loope
fs
test
sbb
dec
push
mov
or
xor
mov
adc
sahf
shl
nop
in
cwtl
leave
stc
pop
scas
in
or
xor
jnp
sbb
mov
fisttpll
sub
pushl
es
mov
call
js
lea
jg
ffreep
dec
leave
mov
frstor
lods
sub
loope
jle
mov
push
rcl
sub
movsb
cmc
shlb
dec
mov
mov
or
and
push
iret
test
and
mov
push
pop
cmpsb
in
dec
xchg
pop
ror
push
icebp
movsb
imul
in
jb
outsl
mov
xor
mov
cltd
popf
stos
jns
mov
data16
rorb
roll
cli
and
sbb
push
stc
fidivrs
sbb
xchg
mov
mov
jl
sbb
add
jne
xlat
test
and
adc
test
roll
fistpll
aaa
rcrl
sbb
js
popa
mov
aad
inc
iret
lcall
or
sbbb
xor
cmp
in
rorl
rorw
cltd
pop
in
cmp
fisubrs
dec
mov
jbe
xchg
fs
out
push
jae
mov
fadds
inc
mov
pushw
push
jbe
insb
xchg
clc
lret
lods
sbb
scas
jecxz
xor
and
ja
xor
mov
xchg
sub
jp
mov
lahf
ja
cmp
dec
es
out
or
mov
dec
in
lock
jno
mov
cmp
cwtl
dec
test
mov
mov
bound
fbld
out
cmp
and
jge
xor
outsb
push
push
lcall
js
push
stc
cmp
lds
in
or
mov
lods
mov
mov
fidivs
adc
push
popa
aam
mov
xlat
std
js
mov
cmp
lahf
cmp
outsb
dec
in
push
scas
cld
adc
xchg
ja
inc
mov
pushf
aad
and
aad
inc
into
aam
jge
inc
add
xor
cmp
rcll
and
data16
and
mov
or
popf
push
lret
push
sub
sbb
xchg
addr16
or
cld
popf
dec
xor
jnp
test
sbb
jecxz
fmuls
push
aas
in
adc
cmp
mov
inc
sbb
xchg
sub
pop
sub
mov
loope
out
jb
xlat
pushf
in
jmp
cmpsl
sbb
push
data16
adc
jecxz
pop
mov
mov
lahf
jmp
ljmp
std
in
stos
sbb
push
loop
jle
jnp
out
lds
sbbl
push
inc
ds
div
rclb
mov
scas
lds
adc
xchg
push
mov
cmp
mov
popf
test
cmp
add
sahf
les
push
pop
or
sbb
lcall
test
pop
pop
mov
jno
jbe
imul
pop
int3
dec
jmp
or
and
popf
mov
imul
aaa
shl
pop
icebp
mov
push
inc
pusha
adc
xchg
out
test
inc
xor
or
inc
lea
sub
adc
stos
inc
rorb
divb
cmc
lcall
dec
popf
outsb
jne
int3
or
out
arpl
out
pushf
out
sub
adc
pop
cmp
addr16
mov
jbe
adc
or
push
lret
sbb
mov
push
or
call
fnsetpm(287
xchg
movsb
push
mov
mov
dec
sbb
jbe
jg
mov
lods
aaa
pop
movsl
stc
xchg
les
mov
repnz
add
mov
mov
xor
arpl
xchg
out
and
jecxz
push
pushf
loop
xchg
adc
out
pop
add
shrl
ret
int3
ret
out
or
and
sbb
xchg
xor
in
cs
gs
loop
adc
xor
in
imul
mov
adcl
out
test
fwait
insl
sub
and
imul
in
loope
ja
add
out
jno
sub
mov
pushf
pushf
mov
cmp
pop
rorl
arpl
insb
sub
rol
gs
out
fmull
pusha
cmpsb
and
inc
mov
popf
mov
rorb
jb
jmp
dec
inc
daa
sbbl
loop
mov
insl
sub
pop
mov
push
xor
ja
bound
mov
cltd
out
out
pop
shlb
adc
ret
shll
mov
cmpb
lret
sahf
add
and
mov
xor
mov
test
add
movzwl
cld
sbb
jns
adcl
sbb
out
mov
mov
adc
addr16
sbb
xor
outsb
test
or
jl
adc
cli
xchg
jp
jns
ljmp
ja
mov
push
add
jl
push
xor
js
mov
add
iret
xchg
inc
in
test
lds
inc
pop
dec
xchg
xor
xchg
out
add
push
mov
sbbl
loope
add
inc
loopnew
pusha
popa
aas
add
shrb
aaa
nop
inc
or
cmp
inc
aam
sub
xor
pusha
and
cmc
pusha
sub
push
mov
subb
cli
pop
gs
mov
xchg
push
push
js
mov
ficompl
pop
push
ljmp
cwtl
xchg
popf
sbb
enter
pop
pop
call
test
jno
xchg
xchg
rcrb
pop
pop
lock
push
outsl
and
push
or
imul
dec
dec
pmullw
sub
add
xor
or
pop
in
sub
or
js
ret
scas
scas
mov
mov
negb
es
pop
adc
in
or
std
jbe
adc
and
ret
aas
mov
mov
std
out
shll
test
sarb
orb
push
stos
andl
aas
or
ffreep
cmp
push
xor
cmc
dec
push
xchg
sub
dec
dec
cld
movsl
add
stos
rorl
int
mov
or
add
ljmp
lea
mov
sub
push
inc
jnp
pop
or
mov
and
mov
mov
ret
shl
and
xor
xor
pushf
add
pushf
xor
add
fdivrs
mov
addr16
das
lods
mov
xchg
pop
push
or
sub
jo
jbe
mov
insb
cmp
inc
ret
flds
pop
mov
loop
adc
leave
add
cmpsl
push
mov
call
ret
into
or
sbb
out
inc
loopne
and
jo
insb
and
push
fwait
outsb
mov
insb
inc
cmp
pop
mov
and
test
cmpsl
repnz
aaa
ret
xchg
lods
popa
ret
pop
std
dec
insb
inc
dec
jp
loop
sub
pop
fisubl
cmp
stc
xlat
xchg
loop
icebp
or
aas
pop
int
dec
loop
les
or
aam
pop
shll
inc
jl
daa
cmp
sub
fwait
mov
cmp
lds
out
das
xchg
pusha
pop
fstpl
into
push
cmp
mov
fcmovnu
cmpsl
imul
push
sub
mov
out
mov
lock
dec
inc
stos
into
mov
int
pop
ja
add
imul
adc
jbe
pop
cmpsb
push
cmp
fnstsw
xchg
and
xor
adc
notb
mov
sbb
pop
push
imul
rorl
mov
rolb
or
fnstcw
out
scas
dec
push
stos
movsb
push
pop
cwtl
scas
cwtl
jmp
rorb
mov
iret
into
ss
jns
outsl
add
aam
jecxz
popf
movsb
cli
out
leave
xchg
mov
xchg
jae
mov
fdivs
xlat
cmp
dec
imul
inc
outsl
pop
push
pusha
int3
testl
daa
pop
pop
imul
or
test
fwait
jl
call
scas
iret
or
sbb
popf
adc
lds
pop
loop
xor
cmpsl
inc
cmp
sahf
pusha
sbb
adc
xor
ficoml
loop
mov
add
xchg
mov
push
mov
std
jecxz
aas
int
dec
loop
jbe
xor
pop
in
lds
pop
jl
jp
das
adc
jb
cmp
jp
dec
add
out
jge
sahf
lds
stos
outsb
dec
inc
jb
xchg
cwtl
adc
add
ja
or
dec
les
es
je
shlb
sub
leave
lcall
or
lahf
pop
sbb
into
cld
mov
cmp
leave
int3
cmp
fiaddl
rcrb
imul
pop
sbb
push
fwait
insb
xchg
and
loopne
stos
icebp
cltd
and
adc
cli
pop
cmp
pushf
cli
xor
cmp
or
loope
sub
out
mov
test
das
xor
arpl
imulb
cmp
sub
into
sub
xchg
fmull
aam
rcrl
cmp
dec
popf
jo
das
scas
jae
adc
mov
jnp
jg
sub
test
imull
imul
or
fildll
jmp
xchg
int3
push
andb
xor
or
pusha
lods
movsl
out
pop
xchg
lret
mov
shrl
push
pop
jae
loope
ret
test
test
aas
sub
mov
jns
out
test
sbb
cld
adc
mov
sbb
fimuls
lahf
mov
jmp
and
mov
lock
int
add
push
mov
cmc
mov
es
xchg
add
xlat
sbb
imul
inc
push
adc
mov
and
mov
out
je
ljmp
xchg
mov
js
fcoms
movsl
sbb
hlt
and
jns
cmp
pushf
repz
mov
sbb
enter
mov
sub
cs
roll
enter
or
mov
testl
push
mov
lds
inc
fs
inc
dec
in
xchg
jle
sbb
jnp
inc
mov
or
ja
cmp
mov
jns
and
xchg
jp
cwtl
pop
ja
test
sbb
stos
rorb
dec
loope
mov
inc
mov
hlt
or
and
hlt
xchg
dec
fadds
pop
mov
loope
sbb
imul
cmpsl
cmp
test
lods
or
jne
adc
sti
into
leave
testl
iret
fldenv
rorb
fdivs
mov
clc
mov
insl
int3
lcall
xchg
enter
pavgb
jge
into
loopne
into
xor
bound
or
adc
add
ret
repz
aad
adc
push
xor
pop
jno
ljmp
dec
popf
and
lods
sub
xchg
dec
push
lods
push
jbe
mov
dec
xchg
push
ljmp
jmp
dec
iret
cmc
repnz
pop
pop
xchg
jns
sbb
addr16
pop
das
mov
jno
pushl
sti
xchg
loopne
jb
push
sarb
xchg
enter
fdivl
out
pop
pop
xor
fidivrl
mov
xchg
popf
mov
mov
pop
xor
xchg
push
jl
call
mov
pop
inc
ja
push
in
push
xchg
cmp
push
aaa
mov
xlat
jnp
inc
inc
xlat
dec
sub
ret
aad
sar
aas
popf
cmpsl
outsl
pusha
cli
dec
leave
das
cmc
xchg
lret
dec
pop
adc
out
mov
pop
mov
sbb
cmpsl
add
or
lods
das
dec
stc
mov
inc
mov
or
popf
aas
call
push
push
mov
sbb
cltd
mov
into
call
nop
sbb
adc
pop
mov
js
ss
jbe
imul
pop
xchg
pop
cmpsb
out
add
lock
xchg
pusha
out
push
fistps
jmp
pop
leave
push
fdecstp
fdivrs
cwtl
repz
fidivrs
lret
lock
push
mov
sub
das
aas
test
pop
imul
mov
insl
repz
sbbb
sbb
into
add
outsb
xlat
pop
in
lcall
rcl
mov
mov
jle
pusha
push
ror
xor
rcl
lock
cmpsl
mov
xchg
inc
and
adc
cmp
mov
sahf
movsl
icebp
sub
fwait
jns
rclb
mov
dec
mov
adc
outsl
icebp
pop
cmp
jg
es
cmp
pop
jle
cwtl
add
ja
push
push
stos
movsl
and
cmpsb
fistpll
stc
fcom
into
sbb
push
lea
inc
jbe
xchg
and
scas
or
xor
add
sbb
mov
fisttpl
inc
rcrb
mov
sbb
push
psubusw
rorb
adc
xor
std
insl
pop
push
xchg
insl
iret
sbb
cmp
in
ret
xchg
pop
call
jae
xor
cmpsl
mov
dec
push
mov
lods
and
and
jp
add
xor
lret
lds
or
pop
iret
add
outsb
push
inc
lret
das
mov
push
imul
cwtl
int
xor
je
dec
xor
inc
lret
dec
mov
leave
xchg
mov
imul
adc
xchg
sahf
out
adc
cs
scas
sub
add
mov
and
sub
xor
into
xchg
and
xchg
pop
fwait
cltd
xorb
push
call
jb
pop
pop
icebp
cmp
inc
stc
rclb
fidivrs
repz
mov
aaa
sub
sti
leave
inc
into
adcl
hlt
mov
nop
xor
and
xchg
mov
inc
cmc
fstps
lahf
enter
or
inc
pop
mov
cmp
mov
push
dec
test
cli
xchg
inc
jecxz
jmp
insb
cwtl
js
inc
inc
adc
pop
pusha
pop
and
pop
movsb
sbb
imul
shrl
std
pop
pushf
pop
xor
inc
mov
xchg
mov
mov
xchg
and
stos
repnz
aad
add
stc
add
rorb
cmp
mov
addr16
push
pusha
jge
add
mov
in
push
inc
in
aaa
pop
mov
test
jns
cmp
rcll
add
shl
xchg
inc
loopne
xor
mov
movsb
rol
lock
jns
xor
stos
imul
adc
inc
inc
inc
lahf
rorb
cld
mov
pop
push
hlt
mov
mov
dec
or
or
sahf
ret
gs
lods
jns
cmc
lcall
dec
add
jle
lea
sub
lcall
add
jno
cmp
and
mov
cmp
pusha
lahf
sbb
scas
pushf
mov
lods
or
test
jae
adc
mov
mov
addr16
ret
mov
dec
sbb
fwait
mov
push
lahf
xchg
addr16
push
pop
das
sbb
aad
cmpl
mov
or
hlt
adc
popf
out
dec
shrb
insb
int3
test
sbb
jg
xor
push
pusha
xchg
fwait
dec
cs
cmp
xchg
test
mov
fistps
dec
adc
sbb
in
cmp
int3
add
sbb
jb
cmp
adc
sti
sbb
jbe
je
adc
icebp
jl
mov
fidivl
adc
jp
jbe
movsb
inc
mul
inc
and
rcrb
scas
and
adc
pop
out
in
xchg
sub
and
js
arpl
or
mov
lods
stos
test
mov
je
cwtl
data16
cmc
addr16
mov
or
jno
mov
cmp
push
dec
and
push
mov
sbb
xor
imul
jg
push
jbe
inc
call
adc
pop
addr16
cwtl
pop
int
stos
loope
es
fwait
pop
xchg
cmc
mov
addr16
ret
repz
mov
inc
loope
insl
fs
and
mull
mov
push
pop
imul
mov
adc
inc
inc
inc
cltd
fldl
inc
adc
xor
stos
pop
cmpsl
pop
fstps
xor
lods
mov
pop
fucomip
mov
icebp
jnp
mov
jl
cmp
xchg
cmpsl
inc
fidivl
inc
adc
outsl
push
add
roll
pop
and
daa
stos
aas
lods
mov
scas
cwtl
add
gs
fwait
xchg
shll
xchg
sbb
push
data16
and
dec
arpl
js
fldcw
cwtl
cmpsl
xor
xor
push
ret
adc
add
add
and
lock
pop
add
pop
add
dec
in
mov
mov
aas
clc
imul
add
test
mov
mov
fistps
xchg
clc
ret
mov
xchg
xor
test
imul
push
and
in
push
sbb
out
daa
shrb
mov
push
mov
in
push
mov
das
call
lock
inc
je
mov
sub
pop
xor
bound
mov
test
push
push
fstp
in
fwait
imul
jmp
inc
inc
ljmp
fnstsw
cmp
test
mov
push
sbb
dec
mov
test
lods
sub
into
add
call
idiv
xor
aad
subb
sbb
and
nop
push
bound
mov
fsubl
xchg
inc
or
lods
xor
loop
add
repnz
pop
iret
push
sarl
jno
mov
lods
cmp
loope
or
sub
loopne
inc
mov
js
shr
rclb
out
movsb
xchg
inc
adc
jb
ja
pop
outsl
sbb
mov
jne
andb
xor
inc
pop
or
js
mov
push
dec
test
out
cmp
add
insl
mov
xchg
dec
rcrl
fisttpll
popa
add
xor
jge
cltd
lret
dec
scas
mov
scas
fwait
pop
sub
push
mov
push
dec
in
adc
cmp
data16
inc
pushf
fcomp
mov
mov
and
stc
or
aas
cmp
mov
jns
out
in
fildll
fcompl
push
xor
mov
fstpt
and
and
clc
xchg
ljmp
push
mov
jecxz
daa
ss
push
shlb
shrl
add
test
and
xchg
adcl
inc
das
lcall
mov
adc
cmpsb
adc
add
das
shll
pop
popf
push
jle
push
loop
dec
jmp
pop
jp
sub
adc
or
mov
jmp
lret
push
fldl
inc
mov
mov
push
shrl
stos
test
out
rcrb
jb
inc
stos
mov
lret
mov
add
ret
adc
pop
push
jge
pop
out
cmc
insl
js
cwtl
cmp
dec
mov
iret
mov
sbb
mov
ret
ds
repz
fwait
inc
outsl
push
cli
hlt
aaa
push
lods
adc
mov
js
imul
pop
inc
out
aaa
jg
int
mov
inc
movsb
repz
iret
cmp
rcrb
xchg
and
pop
je
adc
inc
sbb
addr16
sub
in
test
dec
insb
push
aas
imul
mov
je
cltd
insl
mov
dec
out
mov
mov
xchg
push
pop
push
cmpsb
test
and
jne
dec
mov
repnz
fidivs
vpmacsww
push
out
shr
xchg
int3
daa
incl
dec
movsb
sbb
cs
fildll
outsb
sbb
cli
xor
inc
mov
sub
sbb
loopne
in
add
ja
inc
popa
fwait
orl
movsl
inc
int
sbb
dec
sub
cmc
fs
xlat
push
push
repz
push
daa
dec
or
mov
into
push
pop
mov
or
mov
data16
jg
lods
in
adc
cmp
and
adc
movb
push
aaa
int
flds
jnp
lock
loope
mov
std
jne
and
sarl
icebp
and
ljmp
xor
xchg
repnz
ret
div
aad
jno
cmp
lahf
in
push
push
ret
xchg
push
adc
aad
pop
cltd
lods
add
xor
add
clc
mov
mov
out
repnz
and
arpl
aad
out
jge
jge
mov
jo
pop
ljmp
mov
popa
jmp
mov
pop
fcomi
icebp
and
jecxz
pushf
mov
pop
adc
sti
inc
xor
paddd
dec
jne
and
jecxz
jp
xchg
into
pop
pushf
mov
push
xchg
jle
das
jp
test
cltd
mov
dec
fcomp
addr16
push
mov
insl
mov
push
dec
movsl
fsts
divb
stos
dec
sbb
cmp
pop
sub
test
mov
and
inc
xor
ret
orl
jne
divb
jbe
repnz
push
cmp
jae
pop
xor
jns
sub
leave
jmp
call
pop
sub
sub
dec
sub
sub
cmp
xor
mov
cmc
and
jbe
cmpsl
jnp
mov
subl
xor
rolb
inc
das
sbb
xor
insb
jl
lods
in
mov
lahf
std
stc
fnstsw
insb
jmp
pop
and
sti
repnz
push
stos
add
mov
pop
stc
adc
pop
add
jno
jmp
lret
inc
or
cs
and
jl
imul
or
sub
stos
dec
in
push
cmp
push
out
pop
and
or
loop
xlat
push
ja
pop
jno
sbb
cwtl
lods
mov
lods
xchg
dec
divl
lods
or
gs
mov
jmp
pop
jo
dec
push
les
and
mov
jecxz
sub
sarl
pushf
pop
rcrl
xor
mov
mov
pushf
add
push
imulb
dec
mov
jns
aam
sub
mov
shrb
inc
lods
or
movsb
gs
pushf
or
cwtl
add
inc
xchg
sbb
dec
mov
out
in
dec
cld
jmp
pop
mov
pop
mov
mov
lret
xchg
mov
jp
jo
xchg
lcall
dec
out
or
xchg
push
xchg
stos
push
bound
sub
mov
inc
or
xchg
cmp
sub
gs
mov
clc
aam
mov
lret
sub
xchg
int3
out
xchg
les
lret
push
ljmp
test
inc
shl
insb
aad
add
jmp
pop
inc
stos
pop
pop
mov
fdiv
xchg
lret
leave
jbe
in
mov
jmp
xchg
sbb
mov
gs
popa
push
aad
push
mov
mov
add
out
cs
mov
js
ja
pushf
push
dec
je
jb
shrl
push
popa
ja
sti
xor
mov
pop
in
fisubl
mov
jmp
in
mov
adc
pop
sub
jmp
dec
addl
shll
pop
cmpsl
test
inc
repz
insb
gs
or
movsl
int
jbe
sahf
sahf
xchg
and
xchg
daa
lock
xorb
sub
scas
xor
pop
dec
xor
fisubl
test
mov
mov
cmpsl
outsb
clc
cli
shll
cmp
push
ljmp
push
jnp
imulb
jl
and
sub
adc
mov
pop
and
imul
cmp
push
shlb
pop
rcrl
in
repz
test
xor
scas
push
enter
and
fdivrl
mov
dec
mov
sbb
popf
jno
and
or
and
ja
aad
test
scas
cmp
mov
inc
xchg
mov
arpl
scas
stos
insl
mov
lcall
and
jae
cmpsb
shll
loope
das
fs
out
movsb
lret
imul
incl
or
mov
mov
shlb
cmc
jge
mov
push
sbb
fcomps
das
mov
out
push
ljmp
sub
push
jbe
ja
adcl
sar
jns
jge
int
ljmp
out
dec
shrb
xchg
mov
dec
inc
mov
pop
mov
nop
push
mov
enter
jg
or
cmp
shrb
xor
add
add
js
je
cmc
lret
into
jae
sbb
mov
add
and
or
das
inc
or
in
push
mov
scas
adc
and
inc
sbb
inc
stc
mov
arpl
lret
mov
push
ljmp
inc
cs
push
push
std
icebp
dec
orl
rcrb
movl
cmp
add
ja
jge
int
adc
dec
mov
into
sbb
std
js
scas
adc
lret
xor
ss
sub
sbb
filds
jno
lret
cli
lret
mov
das
aas
adc
xchg
pop
xchg
data16
movsb
popa
jno
jae
idivb
lock
mov
shlb
out
in
jle
mov
mov
pop
pop
andb
mov
fbld
stos
adc
cmp
sbb
inc
dec
lcall
loop
sbb
xor
dec
dec
cmp
inc
pusha
lcall
xchg
cltd
mov
outsb
xchg
pop
dec
push
scas
in
cmp
mov
nop
jae
movb
nop
and
outsl
cwtl
xor
aam
popl
ret
pop
push
cli
fstpl
adc
xor
negl
fwait
pop
cmp
sbb
int
sbb
aam
in
fisubl
cmp
ljmp
push
dec
aad
loopne
imul
nop
mov
cmp
loope
sbb
dec
shll
imull
mov
in
sahf
jmp
jmp
cld
sub
mov
mov
arpl
in
adc
xchg
pop
stos
xor
jle
sub
insl
repz
inc
xchg
sub
mov
mov
out
or
pop
push
imul
adc
mov
jmp
ret
mov
sbb
sti
jae
jns
sub
cwtl
pop
push
daa
pop
jae
movsl
cld
xchg
fs
out
aaa
sub
xchg
adc
out
fucomip
bound
xlat
xchg
adc
cmp
loop
stos
or
or
add
jne
inc
sbb
aas
test
aaa
xor
and
mov
insb
sbb
scas
add
loopne
adc
adc
jo
bnd
jmp
inc
icebp
pop
mov
cld
ret
cmc
pop
jmp
int
imul
shl
xor
adc
push
mov
adcb
nop
push
push
or
add
inc
jge
mov
cltd
stc
adc
dec
pop
jae
push
cwtl
push
sbb
in
jae
shlb
dec
jmp
add
lds
inc
mov
push
xchg
add
movzwl
push
shll
jl
cmpsb
std
hlt
in
sbb
inc
mov
subl
push
iret
sub
push
or
pushf
movsl
ret
lods
cmp
xchg
out
adc
sahf
adc
test
pop
in
mov
int
cmp
adcb
stos
sub
sti
das
jg
xchg
push
add
ss
cmpsb
jl
cwtl
ljmp
mov
mov
mov
lret
pop
and
sbbl
insb
adc
add
mov
pop
dec
stc
dec
sub
gs
test
pop
popa
fnstcw
mov
out
inc
cmp
cs
pop
dec
pop
sub
mov
lahf
test
loopne
sarb
pop
dec
cmp
xchg
sub
xchg
xchg
arpl
incl
cwtl
hlt
adc
ds
call
xchg
sti
push
ss
cwtl
pop
adc
in
lock
popf
mov
aam
call
inc
xchg
aas
adcb
pop
cltd
xchg
mov
daa
shrl
fwait
jl
repz
pop
loopne
hlt
fdivrl
xor
cmpsb
pop
loope
imul
addr16
cli
pop
dec
cmpsl
nop
mov
adc
mov
adcb
es
jle
add
sbb
ficoml
push
adc
insb
xchg
inc
data16
shl
imul
xor
dec
pusha
jbe
mov
xlat
enter
push
sbb
push
push
inc
jae
imul
xor
cmp
prefetch
or
cmp
jb
pop
arpl
cmp
imul
mov
pop
or
inc
cs
mov
nop
das
dec
jb
push
pushf
push
inc
xchg
or
inc
leave
stos
inc
mov
inc
lods
adc
xor
xlat
push
sbbb
cmp
mov
xchg
mov
mov
add
sub
lods
sub
and
add
mov
xchg
mov
scas
jmp
mov
out
xchg
jbe
sahf
xchg
add
cmp
inc
pop
fistl
cmpsl
cmp
xchg
stos
mov
and
and
and
cmc
or
mov
jnp
cmp
xor
or
xchg
lcall
pop
pop
add
fs
cmc
addb
add
clc
pusha
incl
jb
in
cli
pop
jmp
cmp
push
jbe
or
pop
das
rclb
pop
push
aas
sub
jns
push
xor
nop
mov
push
lods
repnz
pop
rorb
shr
jg
sahf
dec
xchg
pop
sub
mov
subb
xchg
sbb
dec
sub
adc
adc
lock
repz
int
jmp
inc
cli
dec
push
sbb
inc
sbb
mov
add
ja
and
lods
daa
vaddsubpd
inc
adc
fnstenv
int3
into
adc
jbe
add
add
pop
push
xchg
int3
das
rcrl
movsb
push
jg
or
pop
int3
inc
xchg
push
repz
unpcklps
mov
in
xor
jns
lea
add
or
sbb
xchg
and
fwait
jns
push
dec
sub
add
inc
or
cld
push
jge
lea
fcoml
divl
xchg
outsb
loop
jl
aad
jmp
dec
pop
mov
test
testl
scas
das
mov
dec
in
pop
push
iret
xor
in
mov
dec
gs
bound
xchg
ficoml
lods
and
iret
add
imul
jmp
xor
jmp
fld
push
mull
icebp
scas
xchg
xor
push
adc
movsl
orw
pop
jno,pt
loop
ret
push
orb
sub
inc
jns
jmp
or
jl
js
mov
sub
or
pop
xor
mov
mov
xchg
adc
in
dec
sub
lds
inc
sbb
mov
mov
mov
jp
shl
inc
out
pushl
push
dec
pop
in
loopne
xlat
rolb
imul
icebp
dec
or
cmp
add
test
test
das
xchg
and
mov
mov
xchg
mov
lret
mov
iret
dec
adc
push
pop
shlb
push
movlps
ret
mul
and
pop
sub
sub
cli
sub
push
test
in
jae
pop
dec
add
bound
shll
loop
jne
imul
inc
lea
mov
sub
push
xchg
xchg
es
cmp
push
rcr
call
sti
cmpsb
sahf
fisttpll
add
ss
cmc
scas
gs
pop
push
mov
cmp
incb
mov
bound
stos
inc
jo
xor
cld
and
jl
popf
cli
sahf
jne
jl
aas
push
sahf
sub
xor
cmp
leave
jb
sbb
adc
adc
add
xor
bound
rolb
dec
fsubs
sub
sti
js
xlat
add
shl
inc
mov
popa
in
in
mov
into
cmp
sbb
or
push
xchg
in
xor
dec
adc
cli
inc
test
push
add
stos
mov
cmpl
cltd
mov
adc
mov
sub
sbb
adc
mov
adc
and
push
pop
push
mov
xchg
icebp
dec
iret
dec
jl
jmp
or
push
xor
xor
mov
repnz
pushf
ds
jle
push
ret
xor
mov
movb
std
call
pop
adc
pushf
data16
push
add
clc
push
call
loop
sbb
pop
test
insb
ds
jmp
dec
or
call
and
je
in
push
cwtl
outsl
int3
xor
inc
lret
and
sub
scas
mov
xor
stc
xchg
movsb
lds
mov
push
add
in
jo
inc
outsl
or
inc
jae
mov
jno
sti
icebp
xor
push
insl
jno
andb
cmc
js
leave
loopne
pop
mov
xor
in
jge
push
xor
mov
sub
jle
pop
insl
jnp
push
xchg
dec
jge
mov
pop
andb
push
push
xor
mov
je
cs
aam
iret
push
and
xlat
sbb
xchg
daa
mov
jle
push
jb
xor
pop
jg
inc
push
sbb
jnp
ret
in
xchg
sub
mov
notb
cmp
adc
lock
xchg
push
sbb
xchg
shll
rorb
mov
mov
sbb
sub
popf
jle
lret
movb
mov
sbb
or
ds
dec
inc
xchg
xchg
out
in
xlat
out
dec
dec
inc
xor
lret
repnz
cmp
ss
outsl
das
aaa
cmpl
or
pusha
psubd
xchg
aam
popa
das
xchg
stc
cmp
or
cmp
repz
cmp
pusha
mov
inc
add
or
jmp
mov
nop
lret
xchg
jmp
mov
xor
mov
repz
jg
cld
hlt
push
sbb
sub
ret
sbb
add
push
pop
mov
push
adc
push
hlt
lahf
jns
test
insb
rcrl
sti
enter
stc
jbe
jne
xchg
nop
adc
add
aam
and
xor
js
das
cmc
stos
mov
pop
stos
xor
cmpsb
test
pop
fstpt
adc
push
jbe
mov
rorl
cmpsb
inc
jmp
push
call
jbe
xchg
jns
add
add
aad
sarb
mov
es
loopne
adc
xchg
adc
rcrl
mov
jmp
dec
xor
inc
ret
mov
and
stos
sub
adc
adc
and
pusha
xchg
fnsave
jne
aam
xchg
outsb
push
inc
xchg
ret
and
xchg
divps
sub
add
jno
jns
jae
hlt
jno
lods
cli
push
ret
dec
mov
dec
cmp
lds
fldl
rorb
mov
enter
imull
push
in
xor
stos
jbe
xchg
xchg
mov
call
jp
mov
bound
movsb
imul
xchg
mov
adcl
xchg
add
push
call
loopne
and
adc
call
add
mov
orl
xor
flds
cmp
sahf
subb
test
stos
add
dec
push
adcb
add
or
pop
in
pop
js
jnp
repnz
in
repz
test
sar
dec
loopne
xchg
loope
in
imul
je
xchg
sub
jp
or
lds
mov
or
hlt
je
bound
dec
push
xor
sub
int3
out
push
cmp
jnp
popf
pusha
std
insb
rorb
mov
lods
add
lods
mov
and
pmulhuw
push
mov
sub
cs
inc
pop
xor
inc
rol
pop
add
cmp
movsb
mov
xchg
data16
iret
or
mov
xor
inc
and
push
inc
lods
mov
ljmp
subl
mov
and
scas
shrl
sbb
dec
xchg
mov
sarb
dec
in
push
and
test
push
out
mov
push
loop
jmp
js,pn
pop
lods
mov
lds
push
push
ret
idivb
jle
insb
cwtl
andl
mov
mov
jp
or
jmp
jmp
std
scas
rcrl
adcb
jg
jb
mov
dec
pop
xchg
js
push
fdivr
dec
and
dec
push
or
inc
cmpsl
dec
xchg
int
mov
insb
movsb
in
cmp
sub
cmpsl
add
sahf
pop
cmpsb
mov
and
aaa
sub
fsubrs
or
sbb
js
sbb
dec
mov
adc
int3
lret
push
sarb
pop
xchg
iret
aaa
jle
out
push
sbb
call
out
inc
les
stos
divl
clc
pop
sbb
mov
inc
or
repnz
inc
and
fadds
popa
add
push
mov
push
or
mov
or
test
push
dec
rcll
in
outsl
jmp
out
pop
aad
outsl
or
in
add
imul
add
lret
and
cli
mov
repnz
jge
fcoms
sub
cltd
insb
mov
pop
movsl
jle
fisubs
and
jl
outsl
in
mov
cmpl
jno
sub
or
mov
adc
mov
bswap
mov
cmp
imulb
movaps
jmp
xlat
fmull
into
pop
pop
push
jp
sub
cmp
cmpsb
loopne
mov
jnp
cmpl
and
jne
pop
cmc
stos
adc
push
test
lods
stc
push
lods
fldl
test
inc
ljmp
pop
aaa
test
mov
mov
test
dec
inc
fstp
es
cmp
imul
adc
dec
xchg
mov
pusha
insb
aas
adc
aas
and
mov
sub
xor
mov
cli
push
jne
pop
inc
fsubrp
inc
push
sbb
ds
dec
inc
pop
push
xor
dec
dec
fsts
or
ret
inc
out
out
mov
push
je
mov
pop
in
aam
and
xor
mov
lcall
mov
fldpi
jp
xchg
push
jmp
xor
orb
add
pop
inc
test
pop
inc
ja
imul
fcompl
dec
arpl
into
or
mov
fwait
sti
insb
xchg
lods
popfw
popf
mov
cmp
mov
aaa
out
mov
adc
mov
add
testb
addl
ret
in
aaa
outsl
inc
nop
test
out
inc
mov
push
out
push
mov
mov
in
inc
dec
aaa
icebp
fistl
push
jp
loop
xchg
ret
push
inc
es
jo
ljmp
ret
outsb
subl
dec
test
push
xchg
or
mov
jns
je
out
ja
xchg
add
int3
jne
fistpl
std
mov
push
xchg
test
and
movl
xor
dec
outsl
mov
inc
add
and
enter
cwtl
adc
loopne
lock
js
rorb
jmp
xchg
add
mov
jge
insl
out
jno
push
xchg
mov
cmp
lret
or
cmp
popf
pop
pop
icebp
inc
mov
outsl
pop
mov
mov
jo
iret
fildl
dec
fisttps
mov
testb
data16
push
pop
dec
xchg
add
add
test
cmp
sbb
adc
pop
mov
aaa
leave
pop
pop
pop
xor
cltd
repnz
inc
jmp
adc
add
and
jae
loop
pop
sbb
push
movsl
push
call
les
mov
sbb
jns
sub
loop,pt
push
ret
sub
adc
xor
push
jg
subl
roll
leave
xchg
adc
loop
divl
pushf
xchg
arpl
push
cli
cmpsl
test
out
mov
lock
mov
mov
or
out
outsb
sbb
out
iret
sbb
cs
sarl
inc
and
data16
mov
xchg
mov
and
push
sub
dec
mov
pop
inc
mov
fistps
sbbb
pop
std
fisubrl
and
add
push
mov
call
cmp
dec
clc
movsb
cld
mov
add
sbb
data16
imul
mov
dec
sub
fstpl
subb
out
in
ficoms
test
jb
popf
cmpsl
ja
push
push
jbe
push
sub
xchg
mul
add
movsl
mov
and
inc
add
dec
or
in
mov
sarl
ja
sbb
cmp
in
cmp
sbb
jp
sub
jge
xor
pop
rclb
mov
and
aad
out
cs
loop
les
enter
mov
dec
pop
push
pop
jg
or
aam
lods
and
jns
test
sub
fcoms
hlt
xchg
dec
add
cli
pop
dec
push
out
add
fs
jmp
gs
lfs
jo
sbb
mul
fdivp
in
enter
fstpt
add
or
daa
sub
sub
pop
outsl
pop
and
sbb
call
cmp
mov
sahf
iret
sarb
fs
and
jmp
jg
das
pop
push
mov
out
sub
pop
cltd
mov
faddl
push
sar
mov
adc
dec
and
push
push
dec
jo
inc
jecxz
jno
mov
and
pop
fistl
pop
fists
inc
rcll
jne
or
push
cmp
lret
inc
cwtl
push
lods
lock
sub
stos
inc
cmp
ljmp
lahf
and
mov
or
mov
push
sahf
hlt
and
es
stos
sbb
lahf
xchg
jb
xchg
xor
arpl
adc
leave
pop
cltd
cmpsl
in
sahf
add
and
mov
fiaddl
add
jge
xor
mov
bound
test
push
hlt
sub
mov
fmull
and
divb
cmpl
or
lds
adc
pop
inc
cmp
xor
mov
je
call
js
fmul
repnz
push
cmp
jp
pop
and
jl
mov
mov
dec
jno
push
hlt
aam
mov
fmuls
pop
sbb
mov
sub
test
dec
adc
or
mov
and
cs
lret
xlat
jp
push
cltd
and
xchg
pop
mov
pop
and
shlb
test
out
jno
sub
push
sbb
push
movsb
nopl
fcompl
jle
out
int
adc
icebp
mov
inc
xor
movsb
je
dec
test
push
mov
or
adc
xor
les
push
popa
mov
mov
push
lock
lods
sub
sbb
idivl
lock
push
aam
loop
jge
xchg
adcb
cmpsl
push
or
pop
enter
int3
mov
or
jnp
loope
mov
pop
cmp
jmp
outsl
testb
fsts
bound
mov
pop
loop
cmp
scas
in
repnz
push
xchg
sbb
iret
mov
popa
jns
cs
add
add
cmp
lret
push
push
sub
push
jo
dec
jle
xor
mov
adc
mov
fdivr
and
or
imul
loope
test
push
add
cmc
cs
pop
subl
dec
out
fwait
mov
ficomps
mov
pop
push
movsl
mov
or
pop
mov
test
cmpsl
lods
adc
dec
mov
arpl
mov
adc
inc
dec
inc
mov
outsl
dec
fstp
decl
xchg
enter
cmpsl
lods
cwtl
test
cmpsl
stc
mov
gs
jge
mov
fildll
ss
cmp
icebp
jo
lods
stos
xchg
scas
push
sbb
adc
aaa
sbb
jl
sar
jmp
pop
and
fdivp
push
mov
xorl
outsl
jne
xchg
pop
sbb
pop
hlt
mov
fstpt
jo
mov
xor
bound
xchg
cmp
jno
and
lock
test
dec
int3
mov
sub
pop
xchg
fisubrl
loope
add
fwait
scas
aad
daa
aaa
jl
mov
scas
jg
dec
nop
pop
sbb
outsl
adc
jnp
mov
push
mov
xor
fisttpll
arpl
dec
int
push
sub
adc
in
sbb
and
xchg
dec
xor
xchg
loope
inc
xchg
push
cs
les
mov
flds
add
repnz
inc
jp
popf
in
mov
in
or
push
gs
or
mov
push
jnp
ljmp
push
mov
jp
stc
mov
pushf
aas
pop
pop
popf
pop
mov
ret
fisubrs
imul
ljmp
ficoms
inc
mov
sub
xchg
adc
jmp
mov
cli
rcrl
jo
push
add
cmp
sbb
mov
stos
bound
dec
ljmp
or
aas
push
iret
ljmp
or
add
adc
stos
addr16
imul
lods
or
pop
ljmp
push
stos
pop
je
push
dec
mov
push
mov
sbb
rorl
sarb
mov
pop
inc
stos
aas
and
aas
cli
inc
imul
and
movb
jnp
push
xor
fcomip
imul
cs
sbb
push
pushf
mov
cli
aas
cmp
xchg
lods
les
push
lock
idivl
data16
xchg
dec
testb
sbb
mov
or
je
or
rol
mov
rorl
js
jae
shrb
push
addr16
decb
xchg
sub
fdivs
mov
lods
fiaddl
ret
shll
pushf
sub
pop
dec
sub
mov
cmp
jle
adc
sub
lret
jmp
adc
jp
sub
inc
adc
mov
jp
nop
das
dec
xor
sti
int
mov
lahf
mov
rcll
dec
cld
jl
and
mov
xchg
or
cmpsl
mov
and
jge
mov
sbb
data16
sub
loope
xor
mov
pop
or
sbb
sbb
or
xchg
adc
sbb
ret
or
inc
lods
ja
mov
insl
mov
out
call
stc
xchg
aaa
add
mov
imul
dec
sub
inc
in
inc
pop
nop
jae
das
xor
mov
out
imul
dec
sub
cltd
mov
xchg
mov
into
ljmp
orl
mov
xchg
xchg
rcll
push
jo
push
push
out
nop
cmp
addr16
insl
dec
es
mov
enter
daa
lret
xchg
mov
sbb
or
dec
int3
enter
stos
xchg
mov
aad
mov
out
int3
adc
std
mov
insb
xor
add
jns
ffree
popf
dec
mov
xchg
ja
mov
repnz
xchg
inc
call
pop
fs
xorl
lret
idivb
fcmovbe
enter
pop
cmp
pop
daa
outsb
jnp
mov
jno
dec
dec
mov
xor
jp
mov
out
int
jb
inc
popf
das
adc
mov
negb
mov
and
or
stos
jecxz
nop
push
loopne
test
je
ret
sbb
rcrb
ret
insl
data16
cmovge
les
mov
push
and
sub
loop
jno
inc
jmp
into
adc
and
xchg
cltd
jo
cmp
fisubl
cmp
js
ret
ret
jbe
stc
nop
flds
push
stc
jecxz
out
add
mov
out
and
fnstsw
pop
cmp
mov
mov
sub
and
in
cmp
dec
dec
inc
lret
repz
mov
xchg
xor
xchg
pop
mov
and
jb
insl
pushf
sbb
cmpsl
xchg
mov
gs
repz
ljmp
ss
pop
js
pop
loope
repz
mov
aaa
movsb
xor
test
out
jg
mov
or
out
shl
pop
scas
and
pop
mov
cld
int
xchg
inc
lret
iret
and
mov
test
cld
add
xor
cld
dec
aad
sbbl
in
push
mov
cs
cmp
mov
popf
movb
or
xor
mov
das
jns
jne
mov
out
mov
hlt
xchg
imul
movsl
fistpll
and
inc
mov
add
icebp
mov
sub
inc
sub
xchg
popf
sti
outsb
cmpsb
xchg
rorb
fsubp
iret
pusha
push
into
dec
aad
pop
gs
inc
jg
out
xlat
mov
jp
testl
pop
jecxz
lods
jmp
cltd
test
inc
cmp
rcr
mov
movsb
mov
sti
fadds
cwtl
push
cmp
and
pop
or
and
test
add
repnz
inc
in
int
mov
jbe
sub
add
jmp
jle
inc
mov
into
jo
lods
lahf
mov
dec
arpl
call
xor
dec
incb
mov
int3
pushf
test
and
mov
mov
mov
pop
pusha
jbe
mov
pop
mov
in
sub
cltd
dec
adc
inc
xlat
and
xor
cld
jl
cmp
cmpsl
cmp
and
loop
jbe
cmp
or
jnp
xchg
pop
push
jle
lret
mov
js
add
icebp
loopne
fcoms
push
stos
lret
loopne
cmp
cmpsb
in
and
add
mov
mov
and
cmpsl
mov
in
jmp
enter
popf
push
fbstp
shrb
jno
clc
jl
jmp
mov
or
cmp
jmp
pop
and
adc
leave
mov
in
movsl
mov
jns
mov
xlat
leave
sbb
cmp
xor
or
lock
sbb
sarl
fldt
fldenv
jecxz
mov
sbb
mov
cmp
jnp
cmp
and
aam
fcmovne
xorb
fsubrl
mov
je
add
sbb
imul
fwait
int
cmp
mov
out
jg
xchg
mov
test
pop
icebp
in
mov
push
je
std
popf
daa
sub
das
aam
scas
mov
data16
outsb
loopne
ror
clc
sub
mov
jo
popa
push
aaa
pop
sbb
movsl
into
test
rcrl
orl
shll
addr16
arpl
pop
test
fstpt
idiv
mov
repnz
call
dec
mov
dec
sub
decl
or
xor
dec
jle
jmp
mov
xchg
mov
jno
stc
cmc
movlps
pop
or
aam
stc
mov
sbb
jne
cs
cmp
adc
fs
and
in
or
dec
lahf
out
jo
adc
out
xor
inc
or
cmp
xlat
cmp
push
xchg
jae
lret
mov
imull
loop
call
mov
inc
out
jmp
pop
fcoms
lods
and
je
mov
push
call
inc
sarl
shll
add
popa
sub
inc
hlt
jnp
xlat
popa
lock
loop
clc
or
nop
push
mov
test
mov
ror
jae
mov
packssdw
pop
cmc
mov
pop
add
adc
pop
cli
push
mov
inc
jns
add
mov
jl
fdivr
out
jnp
jns
stos
fiadds
mov
cltd
xchg
xor
test
cld
jnp
inc
ss
shrl
pop
mov
stc
ficoms
sub
cmp
inc
xor
jl
xor
sub
xor
das
or
jae
shlb
in
repnz
repnz
in
mov
imul
dec
sbb
ja
jl
mov
push
adc
sub
xchg
or
bnd
xor
adc
test
cmpsl
pop
jae
inc
sub
sbb
mov
int
jnp
stos
add
or
xor
int3
xor
testb
iret
insl
loopne
imul
repnz
mov
cmp
pop
jo
rorl
lea
xchg
and
mov
or
mov
rclb
dec
aad
adc
mov
mov
fcmovb
pop
mov
bound
inc
mov
jecxz
pushfw
scas
daa
fldt
xchg
xlat
test
and
mov
sti
inc
jb
mov
inc
sub
fisubs
fiaddl
les
jle
pushf
shl
and
cmp
xchg
movsb
dec
loope
xchg
aas
jno
xor
mov
das
mov
aaa
inc
fnsave
inc
cmc
rol
int
xchg
and
inc
pop
arpl
mov
sub
jp
nop
mov
cld
jl
arpl
inc
cld
pop
mov
std
jp
jbe
xchg
dec
testb
xchg
sub
push
xor
jne
jns
jp
jg
xchg
and
outsl
sbb
mov
sbb
xor
or
sbb
or
lret
rorb
cs
push
insl
inc
cltd
sub
sub
and
or
inc
and
scas
adc
ja
cld
push
xchg
add
pop
mov
xor
int
xor
xchg
pop
inc
repnz
push
std
cwtl
imul
les
repz
push
jecxz
xor
dec
nop
push
pop
cmp
leave
repz
and
or
inc
jns
jle
dec
add
pop
dec
cmp
ja
test
ja
adcl
mov
arpl
popl
pop
pop
xchg
and
xchg
cmpsl
fisttps
and
sub
inc
ja
repz
jmp
fistps
cmp
fcoms
lret
sub
mov
inc
jns
dec
cli
inc
add
nop
cmp
ds
stos
jecxz
ret
and
dec
inc
jl
movsl
mov
dec
mov
jo
sbb
xlat
dec
neg
testl
imul
pop
adc
inc
fdivrl
repnz
adc
repnz
mov
ljmp
dec
jnp
cmpsb
or
push
push
dec
adc
sub
adc
mov
jle
mov
cli
lock
push
insb
cmp
jg
lds
cmp
pop
mov
rorb
push
roll
dec
xor
je
jmp
adc
jle
or
add
sub
push
cltd
mov
scas
mov
nop
xor
dec
scas
int3
sbbl
xchg
mov
mov
fsubrp
fsubr
sub
xchg
xlat
pop
cmp
ret
out
jp
popa
mov
or
fsubl
lods
movsl
outsl
scas
fdivl
push
mov
fdivr
xor
sub
sub
adcb
scas
cmp
lahf
cmpsl
xchg
sbb
or
movsl
jp
mov
scas
stos
pop
sbb
out
or
iret
and
fs
ja,pt
iret
ja
into
mov
subl
test
sahf
sbb
lods
pop
fbstp
push
outsb
inc
pop
xchg
mov
pusha
es
cmp
sahf
iret
fisttps
dec
jecxz
pushf
and
xchg
mov
fcoms
ret
mov
adc
mov
inc
hlt
or
or
fstpt
stos
push
mov
lret
lock
pop
sbb
shlb
dec
or
inc
cmc
mov
sub
push
xor
enter
add
pop
push
jbe
mov
inc
pushf
mov
in
cltd
dec
and
test
mov
dec
pop
out
fs
xchg
gs
adc
stc
lret
js
sub
add
jo
jmp
aad
cmpsb
repnz
scas
rclb
mov
jne
movsb
icebp
cmp
arpl
push
xchg
xchg
xchg
push
fldcw
call
adc
movsl
icebp
push
bound
adc
mov
aas
sbb
push
sbb
push
iret
push
icebp
cmp
xchg
jecxz
push
out
fistpll
push
je
and
jne
test
adc
jnp
push
dec
inc
sbb
push
xchg
pushf
out
decb
xchg
outsl
jle
push
sar
push
sub
mov
and
dec
cltd
aad
xchg
ret
nop
in
dec
add
sub
mov
xchg
outsb
fdiv
test
sbb
mov
dec
pop
inc
jbe
mov
outsb
adc
pushw
idiv
push
mov
dec
pop
xlat
pop
sub
es
lea
dec
cli
push
inc
sub
cltd
rcr
add
jge
lahf
mov
dec
repnz
inc
pop
mov
mov
xchg
lds
sub
lea
les
sub
negb
out
incl
jns
jno
push
mov
incb
push
lret
aam
lea
std
mov
mov
mov
push
leave
out
out
fsubs
outsl
mov
movsb
mov
lods
in
jmp
lock
fwait
xor
xchg
cmp
sub
stc
mov
sar
lods
mov
enter
adc
into
sub
mov
cmpsb
leave
dec
hlt
jg
mov
std
ja
jmp
add
ja
jae
rcl
pop
jo
push
jns
arpl
fisubrl
xchg
in
adc
decl
xor
fldt
jb
xchg
cmc
outsb
cmpsb
ficomps
sub
imull
mov
in
mov
xchg
mov
ja
icebp
xchg
notl
pop
imul
aam
icebp
lret
cmp
pop
stc
push
rolb
sbb
and
sar
fldt
mov
arpl
jmp
xchg
cmp
add
lods
lds
cld
insl
fmuls
out
mov
fcoml
cmp
push
sahf
mov
cmp
repz
jae
test
sbb
mov
mov
adc
and
mov
sbb
arpl
sbb
jge
push
shlb
dec
xchg
xchg
andl
mov
sti
ja
xor
push
pop
rcl
sub
int
add
out
imul
sbb
icebp
inc
out
pop
sub
lcall
sub
xchg
sub
enter
mov
scas
call
dec
sbb
lahf
xor
lahf
add
test
inc
sahf
cwtd
js
sbb
mov
mov
sub
inc
xor
xchg
sbb
jge
and
mov
loopne
out
fisubl
push
shll
fistps
imul
xchg
out
cmp
mov
add
cmp
adc
mov
call
repnz
sbb
pusha
cltd
fists
xor
xchg
jmp
idiv
or
lock
dec
jmp
lea
add
test
and
mov
sbbl
fbstp
push
add
sub
aaa
iret
jo
xchg
mov
lret
fwait
in
inc
lret
mov
sub
xlat
mov
mov
mov
mov
push
sub
cmp
cmp
mov
mov
inc
ret
dec
imul
outsb
add
test
adc
xor
into
push
hlt
lds
mov
xor
and
xchg
fs
scas
sahf
fiaddl
fadds
lods
jp
subl
mov
cmpsl
mov
cmp
cmp
sbb
shlb
nop
stc
cmp
sbb
push
loope
std
loope
das
inc
xchg
cmp
rcrb
pop
ljmp
pop
insl
pushw
xchg
push
int3
test
je
pop
and
dec
loope
xchg
outsl
aas
add
xchg
lods
sahf
iret
push
out
jae
mov
mov
mov
push
mov
mov
nop
scas
in
sbb
fcom
push
rcrl
xor
add
rorl
lahf
jae
rol
outsl
js
inc
ret
fists
cmc
adc
fprem
and
dec
daa
dec
mov
pop
out
sub
and
shlb
cmp
xchg
loop
out
in
pop
sub
inc
add
jno
out
loopne
hlt
lds
jge
pop
xchg
or
andb
outsl
sub
pop
jge
xchg
sar
int
mov
aas
lcall
arpl
sub
mov
int
mov
aaa
mov
pop
pop
pop
pushf
jl
jl
mov
cmpsb
test
out
repz
sbb
pop
aas
push
dec
jmp
xchg
xor
fidivrs
cmp
dec
xrelease
xchg
inc
sbb
xor
dec
dec
out
sbb
cmpsb
push
std
sub
xor
cmp
mov
fwait
roll
jg
push
aaa
shrb
cmp
lcall
xchg
lods
push
sub
mov
sbb
adc
push
and
shr
sub
test
xchg
mov
movsl
xchg
stos
mov
xor
cmpsl
in
int3
decl
dec
stos
adc
push
loope
insb
jnp
sub
stos
or
pop
outsb
mov
push
dec
fldenv
or
fildll
mov
cmp
jge
cmp
insl
rol
dec
and
popf
mov
xchg
outsb
xchg
movsb
iret
lret
lret
data16
xor
sub
dec
lock
push
sbbb
sar
mov
and
inc
fidivl
addl
test
cmpsl
dec
aaa
js
cmp
inc
inc
adc
xor
xchg
rclb
sbb
pusha
test
loop
popf
sub
loop
mov
popa
jno
scas
dec
mov
push
or
inc
in
or
jl
cmpsb
sahf
movsb
imul
push
fidivl
les
scas
xor
cmp
shl
bound
push
call
push
sbb
adcl
fstl
cmp
mov
loop
sahf
xchg
pop
lds
jnp
inc
cmp
popf
aaa
out
out
dec
in
cld
adc
arpl
hlt
cwtl
fcomip
dec
cmpsl
out
jge
xor
push
push
into
jae
mov
push
cmp
sbb
mov
cwtl
adc
fsubs
xor
je
stos
push
cmp
mov
jg
pop
in
lds
loope
add
cmp
sub
push
out
sti
mov
jecxz
mov
xor
xor
push
lahf
movsb
dec
in
fwait
aam
aad
xchg
lods
sub
stos
dec
and
mov
imull
push
into
int3
inc
add
or
filds
inc
xchg
inc
ds
lds
das
sub
or
addr16
test
popa
adc
adc
mov
dec
and
stos
out
fnstsw
jne
bound
inc
mov
int
lcall
push
cmpb
sub
imulb
sti
cltd
dec
mov
arpl
sub
xchg
jnp
call
ret
and
push
pusha
add
mov
enter
loope
sub
ret
call
cmp
test
add
xor
fs
sbbb
aaa
pop
addb
and
frstor
mov
xchg
int
andb
mov
lret
ret
iret
push
sahf
mov
push
lret
push
dec
scas
mov
jp
sbb
cmp
out
adc
sbb
cmc
ret
cmc
inc
aad
push
cmp
push
push
pop
mov
mov
lret
fstpt
out
jns
push
xchg
pop
cmp
nop
sahf
cmp
mov
fs
and
dec
jae
mov
repnz
test
mov
mov
mov
aas
into
push
cmp
jnp
pop
mov
movsl
mov
adc
or
pop
mov
in
sbb
and
adc
sub
dec
mov
fadds
cltd
mov
movsl
rorl
movsb
pop
pushf
popf
repz
addb
push
sbb
fbstp
and
ljmp
and
pop
or
jbe
cmp
out
fstl
popa
xor
mov
subl
jae
int
bound
sub
push
or
inc
push
pop
mov
dec
xlat
xchg
cmp
ffreep
fwait
jmp
push
flds
adc
in
mov
lcall
cmp
into
out
popf
push
and
in
cmp
rorb
cmp
cs
jg
daa
fildll
ret
loop
repz
or
mulb
pop
mov
mov
imul
mov
dec
mov
push
daa
sub
fstpl
push
cmp
pop
test
std
xchg
xlat
std
cltd
cmpsl
ja
pop
icebp
jo
add
jbe
cmp
insb
call
xor
mov
pop
imul
mov
jae
mov
jmp
xchg
jne
notl
mov
jne
xchg
xor
push
sbb
pop
push
cli
push
or
inc
icebp
cwtl
inc
popf
outsb
mov
mov
leave
iret
fstl
outsb
inc
xor
addr16
roll
ds
adc
repz
daa
mov
repz
daa
mov
mov
out
stos
xchg
push
xchg
sbb
mov
pop
cmpsl
lretw
imulb
pop
xlat
loopne
sahf
aad
mov
push
ljmp
in
fwait
pop
jbe
dec
pop
jge
xlat
enter
nop
inc
pop
mov
mov
sub
push
xlat
lds
jge
jnp
loope
xchg
mov
int3
shr
push
aad
add
dec
dec
pushf
adc
outsb
in
pop
mov
fdivrl
addr16
popa
shrb
and
push
dec
insl
imul
dec
pop
cmpsl
jge
stos
xor
lret
cld
fs
pop
pop
push
pop
fcoms
fsubrp
sub
loopne
add
xor
sbb
daa
sub
adc
cltd
out
cmp
pop
mov
sti
aam
mov
lret
test
lret
test
sbb
adc
jg
fdivs
les
cmp
add
test
add
cwtl
lcall
push
stos
xchg
or
out
sub
xor
lods
lock
mov
out
and
jl
jmp
mov
rorb
les
push
pop
mov
mov
xlat
mov
pushf
ret
jge
sub
add
arpl
out
testl
sbb
imul
push
cwtl
mov
xchg
int3
stc
mov
inc
xor
push
mov
jae
adc
gs
adc
cmove
mov
inc
in
fcmovnbe
ss
stos
inc
sti
imul
jo
notb
ss
mov
fucomi
out
mov
popf
roll
stc
mov
scas
or
fldl
pop
jne
jmp
inc
sub
sti
mov
xlat
out
ror
push
push
jo
mov
sub
test
lcall
sbb
movsb
mov
in
dec
xchg
mov
jnp
push
insl
in
call
cwtl
test
mov
pop
mov
fcompl
xchg
std
pushw
in
jne
andb
adc
xchg
fisttpll
daa
jmp
mov
je
cmpsb
mov
cs
sahf
jae
sti
movsl
push
mov
rcl
int3
adc
xchg
push
sub
out
xlat
xchg
mov
je
outsl
sahf
or
sbb
std
rclb
into
pusha
stc
sub
push
or
repnz
mov
cmp
lds
xor
sub
stc
data16
ljmp
popa
popf
sub
mov
lods
dec
mov
xchg
icebp
xchg
mov
rolb
test
sub
pusha
call
testb
pusha
stc
fisttpl
fbstp
xchg
sbb
addr16
repnz
pop
outsl
dec
rolb
jecxz
dec
out
inc
fs
testl
cmc
push
sub
aam
adc
adc
add
pusha
add
jb
mov
inc
ds
jns
outsl
ljmp
xchg
std
in
sbb
lods
cli
movsl
mov
lret
outsb
rcrb
imul
sarl
sbb
arpl
cmpl
xchg
cmp
dec
lods
push
push
sbb
mov
pop
add
mov
js
pop
fwait
je
xchg
cmpsb
dec
ja
adc
in
aas
call
mov
test
mov
int
jge
pop
scas
sub
fwait
cmpsb
outsb
pop
mov
xchg
cmp
mov
pop
cmp
or
sbb
pop
push
xor
and
jmp
rcrl
push
fs
cmp
loop
shlb
jne
pop
jecxz
shll
mov
dec
sub
enter
clc
dec
into
jae
sbb
or
mov
mov
jp
adc
adc
clc
mov
jbe
or
fs
or
mov
jnp
or
sbb
mov
movsl
mov
mov
mov
inc
lods
ds
xlat
xchg
adc
sti
loope
cmp
push
pop
dec
mov
arpl
jecxz
and
bound
aad
popf
xchg
xchg
out
scas
idivl
test
push
dec
fs
cli
test
pop
inc
lods
mov
gs
dec
movswl
or
sti
cmp
iret
adc
push
sbb
or
das
popf
subps
imul
jg
lods
add
int
cs
or
add
jp
shll
mov
xchg
push
cmp
jmp
stos
jmp
push
xor
aas
rcrb
sahf
push
sub
aas
adc
pop
out
std
mov
xchg
cld
rorb
jecxz
scas
bound
pop
stc
arpl
xor
aad
push
inc
fsubrs
test
cmp
mov
xchg
stos
or
dec
in
lcall
gs
or
xor
lods
popa
add
loop
xchg
pop
adc
insb
fsts
adc
xor
sub
jmp
cmpsl
testl
jmp
sti
lcall
jge
mov
adc
mov
clc
push
out
outsb
dec
pop
hlt
lahf
sbb
mov
cs
mov
stos
stos
cmp
popf
lods
in
push
in
inc
testl
int3
addl
or
out
dec
je
pop
push
arpl
enter
mov
cmc
push
jno
xor
xlat
sub
inc
xor
and
xor
inc
inc
mov
iret
push
movsb
shlb
add
pop
out
addl
mov
sbb
adc
mov
dec
insb
gs
sar
mov
aas
out
xchg
xor
inc
mov
lods
cmp
inc
les
in
add
mov
adc
lods
jae
mov
out
push
outsl
cmc
stc
adc
xchg
inc
inc
adcl
out
cmp
in
in
aad
aam
mov
int
adc
rcr
in
cltd
sbb
pop
xor
sbb
loope
movsb
push
cmpsl
flds
push
jb
bound
fwait
test
daa
inc
sbb
ret
pop
cmp
stos
xchg
js
xchg
xchg
das
ljmp
mov
or
mov
loope
push
fbstp
dec
loop
insb
mov
in
sti
or
push
jecxz
jne
lods
xor
mov
ss
cmp
cli
dec
xchg
repnz
sbb
daa
mov
in
sub
mov
mov
es
data16
mov
ret
aaa
add
jecxz
jle
inc
push
pop
js
xchg
iret
pushf
push
sbb
sti
jmp
xor
shrl
hlt
hlt
idiv
adc
sub
mov
jmp
sub
xchg
iret
pop
xor
test
jb
movsl
push
mov
lods
mulb
sub
call
xor
dec
pop
sub
dec
adc
out
or
stos
std
pusha
mov
mov
aam
adc
mov
sbb
pop
clc
rol
dec
cmc
lahf
xchg
popa
cwtl
jbe
std
sarb
jmp
inc
mov
jne
fs
xor
jae
shll
call
outsb
add
loope
stos
jae
mov
in
jb
mov
mov
stc
push
xchg
movsl
cmc
bound
movsl
daa
cmp
cmpsl
mov
cwtl
sbb
and
inc
lcall
xchg
push
pop
arpl
jmp
cmpsl
aaa
mov
aas
xchg
xchg
pop
cmpsl
in
push
out
fisttpll
sbb
dec
fcomi
mov
mov
loopne
mov
or
push
mov
mov
fs
popa
lea
loop
fcompl
and
xrelease
movb
popa
xchg
push
add
sub
pop
xor
push
cltd
sbb
jg
adc
str
std
dec
jecxz
mov
jns
aaa
mov
adcb
jp
loop
daa
mov
mov
lret
bound
jbe
in
push
cmpsb
lcall
mov
pushf
insb
imul
fsubl
std
adc
pop
jns
pop
mov
loop
cmp
cmp
sub
cs
jno
sbb
aaa
xchg
fcoml
movsb
insb
ret
mov
inc
sub
sub
popf
push
pop
into
mov
ja,pn
jecxz
in
nop
xchg
iret
jb
pusha
pusha
bound
ret
and
sti
in
pandn
inc
leave
inc
cmpb
adc
cltd
xor
scas
or
mov
cmp
inc
jle
or
fsubrs
scas
sbb
in
hlt
cs
lret
push
sbb
sti
and
pop
mov
cmp
scas
aas
lret
xor
xlat
pushf
pop
pop
jbe
xchg
add
or
outsb
ret
pop
scas
mov
wbinvd
iret
addr16
or
sub
daa
adcl
shlb
xor
mov
insb
dec
loop
fwait
add
lcall
or
leave
cs
stos
movsl
sub
cmc
sbb
add
stos
xor
push
or
je
divps
repz
std
jae
ds
inc
movsb
and
nop
imul
dec
sbb
xor
and
push
cld
xor
dec
inc
jno
testb
movsl
sti
test
in
mulb
dec
push
dec
iret
out
or
xchg
jns
add
loopne
sub
fscale
movsb
int
lret
div
stc
sbb
ss
out
jno
add
repnz
pop
pop
mov
cmp
push
out
aad
add
imul
fisttpl
sub
dec
fisubs
mov
jno
inc
jbe
mov
shl
enter
jecxz
xlat
fs
fiadds
loop
cmp
pop
or
inc
adc
xor
lea
cmpsl
jnp
inc
test
dec
test
cld
dec
sti
aaa
adc
or
or
leave
cmc
mov
mov
xchg
or
mov
ljmp
insl
pushf
xor
xchg
add
cld
repnz
adc
ret
push
inc
in
push
test
clc
nop
stc
pop
sarl
aaa
sahf
pop
popaw
xor
jg
or
loope
sti
dec
push
leave
mov
inc
cli
shrb
cwtl
enter
fsubs
cmpb
outsb
adc
sbb
daa
shlb
std
jbe
pop
push
jnp
mov
cwtl
sub
jno
mov
sbb
xchg
sub
in
xorl
add
ss
dec
xchg
adc
mov
fildll
fidivs
jmp
or
sbb
inc
sbb
and
sbb
xchg
adc
add
dec
adc
xor
cmp
fistl
insb
popa
mov
ljmp
out
nop
sbb
rcrb
sbb
push
or
cltd
add
or
cli
ret
jp
ror
push
dec
xchg
enterw
sbb
or
sbb
sub
push
nop
movb
shlb
pop
fists
mov
pop
test
jge
xchg
insl
or
mov
or
movsb
outsb
pop
fcoml
xchg
stos
push
icebp
sub
sbb
inc
int3
xor
stos
mov
push
cmp
lea
bswap
cmp
pop
iret
out
shll
jg
pushf
cmpsb
imul
push
mov
hlt
mov
mov
dec
pop
imul
jmp
pop
xor
xchg
lahf
test
inc
sub
test
int
mov
popa
xor
lahf
inc
movsb
stos
test
pusha
sahf
sbb
xchg
push
lret
lds
inc
jae
pusha
outsb
push
aad
outsb
sahf
mov
scas
pop
push
stos
or
or
mov
popf
sub
ss
xor
mov
mov
mov
imul
push
fcomp
mov
les
cmc
fstpt
ja
sub
testb
popl
mov
sub
js
std
and
xchg
test
dec
insl
cltd
pop
roll
adc
push
fs
inc
add
pop
mov
je
ds
mov
add
test
cmp
jne
push
xchg
decl
adc
inc
add
leave
loopne
aad
pop
or
mov
xchg
push
test
sahf
push
sbb
adc
rcrl
push
xor
outsl
repnz
cmp
jmp
hlt
push
pusha
rol
inc
stos
inc
adc
xor
xor
and
jp
pop
es
jnp
sub
push
xor
xor
jb
repz
jecxz
dec
scas
cmpsb
mov
xchg
inc
push
jnp
jnp
je
je
insb
jp
aad
adc
cltd
push
sbb
lcall
dec
add
xor
lods
mov
bound
inc
daa
pop
jo
cmp
fdivr
push
in
mov
adc
jecxz
rolb
xchg
test
sub
adc
mov
aaa
xchg
neg
jb
scas
fcomi
xor
sbb
out
mov
xor
push
aad
fs
dec
lret
mov
mov
popf
je
mov
lret
jo
movsb
xor
lcall
mov
push
cltd
inc
xlat
ret
push
or
mov
mov
mov
mov
mov
push
cmp
add
push
dec
cmp
lock
fidivrs
mov
or
adc
cmp
movsb
inc
ret
mov
stos
jge
jb
mov
xchg
pop
xchg
jle
or
daa
pop
les
fnsave
push
mov
mov
scas
rcll
cli
pushf
insl
pop
jg
mov
cmpsl
mov
jmp
scas
fs
mov
imull
popf
jno
mov
mov
popa
fwait
jb
fisubl
cwtl
loop
mov
jb
inc
inc
xor
stos
sub
pop
cmp
dec
loop
mov
or
fimuls
pushf
cmc
add
jecxz
mov
mov
fsub
in
nop
sub
xor
inc
adc
sub
jg
sub
sub
jle
jno
into
push
aad
sub
es
xor
les
inc
shlb
ja
xor
sbb
aas
fdivs
sarb
loopne
stos
or
adc
jmp
pop
mov
mov
divl
fdivr
inc
lods
jo
lods
xor
orl
movsl
or
or
stos
pop
cmp
xor
sbb
popa
or
xor
jp
push
push
jno
ret
ljmp
jbe
and
add
mov
popf
insl
xor
sbb
pushf
push
imul
add
pusha
adc
sbb
jb
fmuls
xor
mov
adc
shlb
mov
shlb
fsubr
test
loope
cmp
rol
mov
fs
mov
sub
movsb
mov
xor
call
mov
aaa
mov
mov
xchg
push
mov
int3
daa
or
jmp
sbb
sub
mov
mov
orl
and
mov
jmp
mov
rorl
mov
cmp
dec
sbb
dec
mov
mov
jbe
in
into
aad
inc
gs
jbe
cmpsl
std
add
movsb
push
repz
fisubrl
popf
xchg
or
xor
nop
fistpl
sub
in
mov
sub
sbb
lret
mov
pop
xor
icebp
xchg
sbb
int3
scas
mov
mov
adc
andb
add
outsb
aaa
cmp
loope
cs
jo
mov
daa
cmp
push
loopne
leave
scas
push
pop
aas
xchg
jns
push
jg
sbb
adc
xchg
repnz
sbb
sahf
cli
xor
push
push
aas
iret
cvttps2pi
out
push
lods
sahf
and
dec
sub
push
daa
push
mov
imul
mov
ficoml
mov
shll
lea
in
and
shr
pop
scas
in
pop
lock
test
jno
or
push
inc
cld
aam
jp
lods
scas
rcll
pushf
dec
pushf
nop
pop
and
add
data16
fistps
mov
nop
clc
add
cmp
lahf
cwtl
mov
xor
sub
les
addr16
push
jle
movsl
loop
pop
shr
fistps
or
dec
jmp
test
cmp
cli
push
jg
fwait
and
xchg
ret
pop
adc
mov
adc
fadds
or
sbb
cmpsl
sbb
sbb
xor
adc
inc
push
ljmp
inc
test
dec
popa
mov
jno
pop
xor
dec
pop
test
mov
das
test
pusha
shl
movsl
pop
pusha
and
incb
cli
pop
jp
adc
gs
jns
pushf
scas
lret
loopne
jne
ds
xchg
xchg
arpl
add
fisubl
and
adc
negb
push
shll
mov
xor
sub
cmp
outsb
repz
and
outsl
mov
inc
scas
popa
ds
sbb
imul
cmc
enter
rcrb
mov
pop
add
outsl
lahf
and
les
addl
addr16
cmp
mov
push
jae
in
adc
dec
adc
push
inc
cmp
js
pop
ds
dec
imul
fwait
add
rorb
ja
in
mov
leave
sarl
push
xchg
cmp
pop
mov
mov
xlat
ret
cmpsl
jl
push
xchg
out
mov
mov
adcb
cmp
push
mov
rcr
in
je
mov
push
gs
inc
pop
mov
aaa
outsl
adcb
movl
leave
rcr
and
lret
and
cli
xchg
mov
nop
icebp
cmp
imull
mov
mov
std
int
inc
push
or
xchg
add
cld
cwtl
mov
outsb
xchg
cmp
rcrb
in
dec
int3
ret
movsb
push
aam
jmp
cmc
ljmp
xlat
adc
data16
and
repnz
xor
pop
gs
cmpsl
and
outsl
repz
out
test
xlat
notb
loopne
fldenv
scas
and
movl
xor
pop
inc
xchg
dec
xor
xchg
popf
lcall
aam
sti
cmpsl
scas
movsb
orl
jge
add
mov
popf
xor
xor
push
dec
test
movsl
shl
xor
fmulp
ja
lcall
es
les
inc
cli
cmp
dec
dec
sub
jno
test
and
sub
add
orl
sub
popl
int
jmp
xor
push
mov
mov
ret
fucomi
imul
inc
push
push
push
idivb
jno
in
mull
das
loope
shrb
sub
push
mov
pop
shr
cwtl
mov
enter
call
add
add
sgdtl
mov
add
push
call
or
mov
insb
pop
sbb
ds
xadd
mov
or
sub
or
sbb
sub
mov
mov
fiaddl
jecxz
push
lods
bound
push
pop
or
push
out
xor
and
loopne
sbb
dec
outsb
sar
jbe
sbb
addr16
in
lret
jae
clc
sahf
push
xchg
scas
test
lods
scas
cmp
popf
outsl
cmp
into
or
ljmp
movsl
sbb
and
test
jmp
push
xor
jno
and
xchg
dec
push
mov
pop
cmp
cmp
and
xchg
mov
loop
cmp
jne
leave
pop
mov
mov
jmp
mov
in
insl
jmp
aam
fwait
xchg
jno
insb
jg
cmp
cmp
adc
out
mulb
addr16
pop
jp
cmpsb
pop
xchg
and
push
test
dec
lock
nop
mov
repz
mov
dec
mov
lahf
ljmp
in
xchg
popa
ss
shlb
lock
sbbl
push
mov
sub
sub
call
inc
imul
fnstsw
jg
fcoms
xor
xchg
hlt
pop
xchg
cld
andb
in
sub
lret
shrl
addr16
mov
sbb
out
arpl
int3
imul
xor
rclb
outsl
add
icebp
or
loopne
js
sbb
call
mov
dec
mov
fldcw
es
in
loop
sbb
pop
push
lods
sahf
push
cmpsl
in
ljmp
dec
daa
test
pop
jmp
cwtl
and
loope
iret
daa
mov
pop
sahf
push
and
fisubl
les
in
xchg
lret
les
movsb
gs
lods
xchg
leave
leave
in
aam
mov
pop
xor
mov
cmp
jmp
jb
jnp
pop
mov
or
out
xor
xchg
hlt
fst
sub
leave
xchg
outsl
lods
mov
addr16
and
repnz
shll
sub
jl
lds
es
nop
push
mov
mov
popf
dec
iret
push
mov
jge
mov
fldt
scas
pop
jmp
adc
cmp
bound
jg
mov
lods
fidivrl
sub
vorpd
dec
xor
lcall
xchg
jecxz
cmpsl
xor
inc
cmp
jno
cld
imul
iret
xchg
gs
mov
mov
add
push
sarl
pop
pop
lods
clc
jle
in
bound
mov
loopne
jno
sbb
sbb
mov
clc
sbb
repz
xchg
adc
xor
rorb
cmpsl
cmpsl
cmp
adc
xchg
dec
shl
sahf
xchg
test
adc
add
sbb
sti
push
leave
mov
xchg
outsb
dec
test
cmp
stos
sbb
repnz
sbb
orb
mov
inc
inc
outsl
bound
lds
adc
scas
pop
sub
lods
and
sub
lret
addr16
push
bound
jl
jns
and
pop
aaa
mov
mov
mov
lock
sub
cmp
outsb
pop
and
mov
movl
jmp
addr16
in
lret
arpl
and
insl
push
mov
jp
xlat
mov
or
push
push
pop
inc
ret
mov
xchg
test
pop
xlat
out
sub
orl
xor
push
pop
jge
out
pop
rorb
xchg
xchg
cmp
sub
repz
jl
sub
icebp
cmp
or
test
add
notb
in
lret
test
rol
insb
sbb
stos
out
movsb
movsl
mov
sbb
mov
xchg
jl
or
call
xchg
out
cmc
sbb
sub
and
xchg
je
loop
mov
xor
push
inc
js
out
data16
imul
inc
ljmp
and
mov
jecxz
leave
pop
test
jns
add
cli
pop
jbe
test
pop
fwait
sbb
outsl
pop
outsl
xchg
cmp
inc
out
jno
inc
sub
hlt
adc
adc
cmp
pop
cmp
stos
dec
leave
pop
out
je
xchg
xchg
inc
inc
aam
outsb
in
sbb
dec
xor
movsb
decl
cli
and
inc
inc
and
lahf
test
xchg
push
sub
mov
jns
mov
sbb
xchg
icebp
sbb
popf
sub
pop
dec
inc
mov
je
mov
popf
test
inc
lret
shlb
sahf
mov
decb
xchg
notb
mov
and
int3
cmp
int3
repz
outsb
xor
lahf
mov
mov
jno
insb
push
jecxz
mov
mov
aaa
ret
mov
popf
sbb
aaa
imull
fwait
nop
cs
adc
jle
into
les
jp
insl
dec
jge
dec
loopne
cmp
jg
scas
jns
scas
mov
push
dec
adc
movsb
inc
leave
xor
push
clc
push
repz
mov
jmp
into
add
sub
mov
mov
mov
jmp
jg
fadd
mov
push
sbb
xchg
push
popa
rcl
mov
in
in
mov
push
mov
lahf
push
in
sti
inc
push
mov
insl
int3
push
mov
fs
mov
mov
vmovhpd
mov
adc
fst
movaps
in
dec
stc
bsf
rcl
repz
or
cmp
mov
xor
inc
iret
ret
sub
aam
mov
fldt
rcll
add
mov
leave
sbb
inc
sub
sub
popa
mov
xchg
insb
sub
and
out
adc
repz
push
xor
inc
insl
icebp
fbld
push
shlb
pushf
enter
jmp
xor
and
imull
scas
add
test
mov
fdivl
bound
mov
mov
int
pop
push
jmp
xchg
pop
push
pop
fwait
xor
mov
adc
jbe
adc
push
addb
movsb
daa
mov
cmp
lods
add
int3
rolb
mov
sub
pusha
push
pop
ja
mov
push
int
xchg
lcall
or
pusha
aaa
jnp
push
cmp
rorb
sub
adc
sahf
lock
jmp
add
adc
pop
push
loopne
add
fmuls
lods
scas
fidivrl
sbbb
and
lds
gs
jnp
xor
adc
jno
or
dec
dec
ds
jbe
jge
in
lahf
mov
dec
rorb
cpuid
mov
jmp
push
loopne
push
lods
gs
mov
or
adcl
push
les
mov
jg
in
dec
jmp
mov
xlat
mov
ds
cmc
mov
pop
mov
scas
loopne
lea
jl
xlat
cmc
xchg
pushf
cli
clc
add
ret
xor
jecxz
sar
mov
mov
or
sti
fadds
out
mov
into
add
clc
imul
or
insb
push
push
jbe
cmp
rclb
es
cmp
dec
sub
mov
xchg
and
and
mov
cmpsb
lahf
enter
sub
dec
lcall
pop
repz
push
xor
cmp
loope
adc
push
lcall
inc
enter
sbb
subl
inc
inc
hlt
mov
xor
jg
and
cmc
fdivrl
clc
icebp
xchg
test
lods
or
adc
popf
inc
out
cmp
mov
movsb
cmp
negl
leave
roll
adc
mov
aad
adc
aaa
pop
mov
sahf
es
adc
roll
pop
inc
inc
int3
into
cmp
push
insb
sbb
ret
xor
ss
ficoms
xchg
add
dec
lcall
add
mov
sti
mov
sbb
dec
xlat
push
addr16
in
inc
sbb
sahf
jl
repz
test
fs
jnp
mov
aad
pop
dec
test
mov
add
add
or
xchg
push
push
mov
loop
mov
jae
je
addl
lret
mov
jl
xor
push
xchg
jp
xchg
scas
stos
push
hlt
pop
adc
call
std
push
cmc
sti
rcrl
fwait
in
fldl2t
clc
pop
dec
jmp
movsb
sbb
mov
jle
clc
push
int
out
data16
fnstenv
mov
icebp
jp
or
les
icebp
dec
dec
xorb
push
lea
js
mov
cs
xchg
in
push
mov
fcompl
cwtl
decl
xor
xchg
push
out
movsb
cmp
fbstp
fiaddl
mov
pop
pusha
rolb
dec
mov
mov
inc
push
rorb
sbbl
cmp
test
int3
xchg
scas
ljmp
dec
test
push
jmp
js
jl
ja
aaa
les
loop
xor
int3
sub
mov
sub
out
jmp
mov
addr16
insl
aad
lahf
xchg
pushf
dec
xchg
rcrl
mov
fisttpll
cs
negl
mov
mov
in
rorl
or
enter
loope
sbb
lcall
cmp
xchg
out
stos
jns
inc
mov
jge
mov
adc
pushf
loop
mov
jle
xor
je
push
mov
ret
mov
add
push
inc
cld
ret
cmp
outsb
add
scas
and
in
inc
fisttpl
outsl
lds
stos
loope
int3
xchg
out
arpl
or
adc
out
fxch
dec
dec
and
fmuls
mov
jae
dec
adc
lahf
mov
add
mov
jbe
add
jl
call
jnp
xor
mov
sarl
pop
adc
rcrl
roll
ss
ljmp
arpl
sbb
mov
mov
lret
adc
mov
lret
shl
mov
mov
push
sub
inc
aam
push
or
icebp
aam
cmp
aas
fimull
pushf
je
xor
fs
dec
lods
add
push
pop
ja
rorl
outsb
or
or
and
mov
stc
lret
xor
popa
jle
inc
pop
add
adc
vshufps
dec
inc
cmpsb
mov
xchg
cmc
dec
sarb
and
adc
xchg
cmpsb
je
cmpsl
xor
insl
and
xor
imul
cmpsl
pop
test
push
sahf
dec
pop
push
mov
or
mov
cltd
cld
insb
cli
cltd
divb
mov
add
push
aad
cmp
pop
fstpt
mov
sbb
js
int3
push
cmovg
pop
out
gs
std
dec
out
pop
arpl
pop
sub
repz
jp
lea
pop
fxch
push
imul
dec
insl
pop
hlt
andl
mov
xchg
addr16
addr16
int
xchg
push
lock
push
inc
fs
and
pushf
jo
cltd
add
shl
jp
cld
scas
es
stos
in
imul
aaa
ret
xchg
ret
mov
pop
inc
mov
pushf
inc
outsb
and
or
inc
jl
mov
add
push
idiv
cmp
sbb
sub
cmpsb
lret
pop
jge
scas
sbb
cmp
sub
or
fiaddl
xor
mov
loope
or
insl
jo
push
adc
insl
jmp
xchg
rcll
rorb
aam
dec
test
and
jp
stos
sbb
insl
pop
in
fldt
sbb
nop
inc
adc
xchg
add
inc
fprem
js
mov
mov
dec
mov
push
stos
out
or
and
rol
mov
sbb
flds
gs
test
push
enter
push
or
cmc
jg
das
xor
mov
inc
aas
mov
mov
mov
sbb
push
lods
mov
mov
xchg
mov
and
rcrb
sbb
test
repz
arpl
add
inc
flds
in
cmpl
or
dec
movsl
das
mov
or
pusha
xor
or
pop
mov
and
sarb
rcl
arpl
push
add
pusha
mov
add
xchg
push
add
sbb
push
loopne
call
jmp
xchg
mov
outsb
push
and
dec
push
or
sub
mov
dec
inc
push
cmp
push
mov
dec
mov
pop
roll
int
mov
push
add
adc
test
push
or
add
pop
mov
dec
xchg
sub
popf
pop
push
or
add
cwtl
movsl
or
inc
push
scas
nop
mov
push
cld
sbb
add
icebp
cltd
icebp
mov
out
or
mov
ja
iret
repnz
lea
mov
faddp
add
mov
test
push
add
test
aam
sbb
das
ret
nop
add
out
push
dec
repz
icebp
lds
mov
xor
or
jmp
and
xchg
clc
jo
mov
or
out
lods
outsb
out
outsb
cmc
pop
in
cmp
fisttpll
stos
pop
mov
xor
xchg
das
adc
outsl
mov
cwtl
push
rcll
sbb
mov
and
jp
lret
rcl
xor
pop
daa
mov
cmp
push
iret
loope
dec
xlat
aas
mov
add
inc
lahf
cmp
fcoms
adc
ss
pushf
xchg
pop
ljmp
mov
mov
and
xchg
push
movsl
es
aaa
movsl
add
out
cmpsb
and
rclb
nop
xlat
test
enter
cmp
fadd
aas
addr16
out
sub
jb
pop
mov
shlb
lds
sub
xchg
jnp
jl
icebp
movsb
lods
or
mov
xor
inc
xor
sub
xlat
in
fisubrs
sbb
cmp
cs
or
push
dec
push
cmp
data16
push
adc
mov
xchg
inc
jbe
fs
stos
cld
sub
test
call
or
pop
push
or
out
lock
inc
mov
cmc
xor
mov
jmp
jb
fisubrl
xchg
test
xor
xorb
add
add
mov
movsb
or
jo
aam
pop
jmp
mov
mov
or
sbb
inc
dec
leave
and
mov
push
outsb
pop
inc
aam
and
sbb
push
rorl
out
js
mov
aaa
jp
ja
in
jne
sbb
arpl
les
add
sbb
xor
testl
pusha
xchg
decl
push
es
jmp
pop
fs
jl
fs
mov
mov
dec
bound
std
test
loope
xchg
shrl
xor
push
and
mov
or
xchg
push
scas
jne
mov
call
push
adc
test
mov
sub
lcall
adc
and
stos
nop
cwtl
cmp
add
lret
pop
in
add
and
cmp
cmp
imul
stos
rorb
sub
pop
cmp
add
xlat
inc
leave
mov
mov
mov
in
ret
pop
int
cs
add
pop
enter
jo
loop
je
pop
stc
cmp
jge
xchg
adc
adc
mov
lret
pop
jle
je
pop
mov
bound
test
scas
or
cmpsl
js
pop
push
js
pop
dec
jo
cs
in
lock
mov
dec
stc
lods
arpl
cmp
xlat
or
inc
mov
cmp
enter
outsb
cld
test
loope
push
mov
inc
into
mov
rcl
ret
lahf
pop
push
fsts
nop
jg
stos
sbb
aad
xlat
addr16
push
sahf
sub
pushf
sub
jo
dec
mov
jl
mov
xchg
inc
nop
jbe
xchg
cltd
ret
xchg
mov
aam
mov
lock
popf
leave
inc
fists
sub
inc
xlat
pushf
popf
mov
in
xchg
mov
sbb
fsts
inc
pop
xchg
mov
push
sbb
lods
outsb
in
lea
in
inc
sub
xor
mov
dec
pushl
adc
mov
mov
mov
hlt
test
add
arpl
movsb
scas
sub
repnz
popf
into
adc
mov
out
sub
data16
xchg
push
les
lret
sahf
ja
xchg
push
insb
repnz
repnz
pop
lods
pcmpeqb
dec
mov
cmp
adc
sar
xchg
je
pop
stc
leave
stc
leave
stc
mov
sub
je
cmc
das
psubq
in
roll
call
jno
cld
or
cmp
xor
mov
inc
repnz
call
mov
xor
rol
sub
orb
inc
ljmp
mov
xor
mov
pop
cmpsb
xor
sbb
cwtl
lret
add
and
cmp
or
rcrb
or
xor
jecxz
cltd
pop
mov
nop
cbtw
call
lods
seta
xchg
lea
ret
sub
xchg
inc
cli
inc
jmp
mov
mov
in
xchg
fidivrl
inc
mov
pop
jl
cli
lock
push
mov
sbb
xchg
mov
and
fadds
add
ss
fbld
cld
je
mov
xchg
cmp
pop
xchg
push
mov
push
inc
mov
inc
nop
xchg
xor
pop
xchg
pop
or
push
movsb
ficoml
and
lock
bound
cltd
inc
ret
adc
inc
cmc
div
and
xchg
and
cmpsl
in
lock
rcl
jg
xlat
call
cmp
fwait
call
lcall
in
cs
adc
lret
ret
xchg
fucomip
imul
ret
push
adc
xchg
call
dec
test
int3
pop
fsubs
push
mov
adc
test
jne
pop
ds
mov
loopne
pop
or
inc
mov
repnz
inc
sarb
pop
jmp
push
movsb
std
stc
mov
mov
mov
sarl
sub
je
fisubrs
pop
loope
and
addr16
in
dec
insl
rcll
jecxz
stc
xchg
je
pop
cmp
pop
imul
test
das
mov
and
pop
lahf
add
and
cmp
lock
aad
js
in
add
iret
cmp
adc
adc
inc
mov
loope
or
movsb
sbb
xor
mov
inc
jp
movsb
insl
pop
jo
ret
das
je
mov
test
push
das
mov
icebp
cmp
xchg
aad
or
loop
fldt
pop
add
int
inc
pop
ret
add
xchg
mov
jb
inc
test
cmp
popf
scas
scas
pop
mov
rol
sub
jno
filds
rcl
pop
test
stos
cmp
sub
in
cld
mov
mov
push
sbbl
push
jp
loop
pop
cmpsl
arpl
xchg
out
cmpsb
aas
and
sahf
mov
loop
ret
mov
or
dec
cmpsl
jg
ds
mov
arpl
or
movsl
outsl
insb
or
and
lock
rcll
jecxz
out
mov
mov
push
mov
popa
push
cmp
or
xchg
mov
sbb
andb
add
mov
add
mov
shrl
insb
sarl
sbb
push
mov
xor
js
cmp
or
sub
stos
add
inc
cmpsl
sbb
cmp
insb
subb
push
cmc
insb
out
cmpsl
sub
clc
mov
pop
les
xor
cld
push
pop
fbld
dec
into
xchg
pop
fldenv
adc
mov
lds
and
imul
add
inc
out
cmp
xchg
push
xchg
inc
inc
jo
xor
mov
test
cmc
inc
incl
pushf
lret
addr16
xchg
mov
xor
jp
mov
js
sub
imul
ljmp
popa
sub
repnz
mov
mov
gs
in
adc
ss
pop
shll
int
and
fistpll
sub
mov
cltd
lods
test
test
dec
loop
insb
out
iret
inc
mov
fdivp
imul
xor
push
scas
mov
lahf
xor
pop
pop
in
mov
loope
inc
cmc
xchg
adc
test
or
fimuls
jae
loope
push
icebp
rcrl
xchg
adc
xchg
cmp
push
mov
popf
into
and
sbb
jl
cmovb
lcall
lret
and
into
jecxz
das
cltd
je
lahf
dec
mov
sub
inc
imul
out
adc
jo
pop
leave
mov
test
js
fildll
mov
loopne
lahf
bound
fisubrs
mov
mov
into
mov
jge
arpl
jle
mov
icebp
mov
nop
out
mov
dec
dec
out
out
ljmp
mov
dec
mov
pushl
adc
or
mov
mov
jns
mov
xor
or
sbb
es
insb
jne
insl
dec
hlt
mov
push
cmpsl
mov
mov
lret
jnp
dec
cmpb
xor
dec
dec
sbb
icebp
mov
mov
lds
fstl
push
movsb
outsl
adcl
cwtl
xchg
inc
clc
stos
lea
loope
sub
ficomps
call
xor
shlb
jb
pushf
fwait
ret
or
into
aas
dec
dec
sub
mov
enter
inc
jnp
pop
xchg
cmp
out
jmp
stos
gs
adc
es
push
leave
pcmpeqd
jo
popa
ljmp
lret
mov
cmpsb
mov
mov
leave
mov
out
cmp
fisttps
pop
rcll
xlat
fbstp
mov
push
mov
fisubrl
hlt
jnp
subb
or
fistpll
dec
clc
adc
sbb
inc
fsubl
push
pop
outsb
gs
mov
imull
mov
notl
lahf
and
lods
mov
test
into
jmp
push
pop
sub
mov
out
jp
addr16
add
mov
movsl
lock
mov
fldcw
pop
loopne
add
fstps
jb
in
in
mov
cmp
jle
jg
fs
inc
or
loope
mov
mov
test
shrb
jecxz
mov
push
cmp
sub
mov
mov
aam
sbb
dec
adc
sub
mov
or
lcall
fwait
cli
jl
xchg
icebp
cmpb
mov
out
imul
jbe
jbe
jmp
test
pop
add
xchg
push
mov
jno
or
lahf
jo
sbbb
and
cli
mov
push
loopne
mov
cmpsl
or
mov
dec
mov
xchg
jge
or
sbb
jecxz
pop
in
jo
out
xor
mov
cld
mov
lahf
int3
enter
test
sti
pop
call
aam
test
jecxz
out
dec
and
xchg
push
imul
lahf
cmp
cwtl
outsb
les
xchg
imul
mul
cmpsl
add
adc
testl
pop
pop
popl
sbb
jne
inc
loop
test
lret
pop
in
mov
inc
pop
pop
cmp
xor
shll
sub
adc
hlt
cmpsl
les
movsl
sbb
lahf
jbe
out
stos
or
ljmp
sub
sub
xchg
mov
xchg
test
inc
jnp
fwait
incb
dec
je
enter
sbb
lea
rol
lret
push
inc
or
mov
les
mov
shl
xor
sub
imul
push
inc
xlat
add
xchg
ret
ret
xchg
or
mov
mov
subb
pop
adc
bound
adc
jns
sub
sub
dec
in
mov
mov
lcall
pusha
lcall
stos
add
sbb
add
inc
fildl
shrl
cmpsb
loop
test
arpl
cltd
outsl
arpl
or
popf
push
cltd
jp
xchg
hlt
push
lods
mov
js
scas
and
dec
aam
push
gs
int3
adc
into
add
enter
adc
lcall
cmp
icebp
or
mov
in
stos
insb
enter
in
flds
pop
add
or
mov
and
sub
sarl
mov
mov
sti
fbstp
in
and
dec
testb
adc
and
js
mov
cmp
and
mov
mov
pop
cltd
jmp
and
test
mov
xor
nop
pop
mov
or
xchg
sub
das
fiaddl
repnz
jmp
fadds
jmp
shrl
lods
daa
fisubs
mov
cmpsb
loopne
add
mov
push
mov
push
outsb
aaa
mull
xor
jl
mov
cmp
jg
dec
scas
inc
or
popa
ss
stos
xchg
mov
ret
in
sub
mov
xchg
dec
or
push
loope
inc
out
cmp
push
and
insb
adc
or
cmp
sub
mov
sarl
rorb
das
call
jo
mov
jbe
int3
mov
icebp
jbe
push
rorb
or
subl
sub
lret
sti
es
or
adc
push
mov
adc
mov
add
ret
and
jno
fdivr
pop
jg
cmpsb
add
cmpsb
or
and
aam
das
mov
pusha
jae
jae
inc
fsubrl
mov
or
rolb
fwait
mov
mov
inc
pushf
xor
call
jns
xor
lods
jae
subl
fistps
xchg
scas
or
jecxz
test
jl
lret
or
repnz
push
mov
jp
or
add
push
add
or
push
test
in
push
adcl
lds
pop
adc
sbb
outsb
mov
dec
and
mov
test
inc
test
and
jno
lret
bound
pop
xchg
test
int
xor
mov
adcl
and
xchg
inc
sub
fucomip
mov
sub
es
cmp
adc
xchg
jo
push
cld
add
mov
jg
hlt
lahf
fisttpll
sahf
test
dec
iret
inc
xchg
and
jmp
pushf
lcall
lcall
inc
or
lds
shl
outsl
arpl
shlb
or
adc
xchg
push
test
cmpsb
movsl
out
sbb
lret
jle
mov
sub
fwait
aas
xchg
cmp
call
loop
mov
jle
je
clc
sub
adc
ds
or
pop
inc
gs
repz
mov
sub
sub
sbb
sahf
data16
sub
movsl
pop
xchg
fdivrs
mov
int3
js,pt
scas
push
loop
jns
test
or
pop
sarb
aaa
in
adc
push
sub
icebp
and
push
stc
shrl
sub
xorb
and
lea
daa
test
sub
hlt
dec
ja
jl
jnp
sahf
filds
mov
daa
add
xor
insb
and
enter
jne
cmp
adc
shl
fmuls
outsl
push
mov
inc
mov
xor
stos
mov
in
mov
xor
lahf
cld
pop
adc
adc
dec
push
fldz
testl
or
add
inc
pop
cmp
scas
shrb
mov
push
or
adc
adc
sub
aaa
mov
gs
jmp
lock
adc
sub
inc
xchg
icebp
lea
mov
mov
add
adc
mov
cmp
push
arpl
ret
andl
sub
adc
rcll
sub
cmp
adc
shrl
daa
test
insb
shl
inc
int
fwait
add
test
loope
add
push
pop
ss
fcmovnb
ror
subb
or
sub
pop
out
xchg
jecxz
sub
inc
cmp
scas
sahf
scas
test
inc
lds
ror
mov
stos
xorl
out
lods
stos
popa
fwait
add
or
inc
sbb
mov
pusha
sub
insl
fwait
pop
dec
pop
js
adc
xor
sarb
inc
data16
sub
int
out
push
dec
test
dec
dec
addr16
sbb
es
pop
stos
gs
xchg
leave
mov
scas
mov
out
idivl
rcrl
adcl
stc
cmc
xor
ret
mulb
shr
push
push
pop
in
enter
mov
cmp
cmp
dec
sub
incb
stos
add
add
sahf
xor
xor
cmp
sbb
test
test
push
or
mov
dec
aam
mov
nop
dec
dec
cmp
inc
addr16
js
sub
and
push
aaa
push
clc
xlat
shl
add
fstpt
loop
mov
insl
add
add
add
ret
mov
lret
je
cmpsb
loopne
js
cmp
pushf
mov
mov
aad
mov
ss
sbbl
ror
fiadds
call
push
cld
mov
iret
sub
pop
inc
sbb
ficomps
out
xor
lcall
fwait
imul
push
icebp
arpl
aam
test
push
gs
subl
cmp
inc
dec
cwtl
pop
lret
cltd
adc
pop
inc
mov
xor
outsb
in
or
xchg
fcomps
ficoml
sti
scas
ret
fbld
in
outsl
inc
fsubl
cmp
jecxz
jmp
sub
cmp
dec
ret
push
add
je
push
sbb
in
dec
in
imul
pop
clc
jecxz
scas
pandn
xchg
xchg
jo
cld
cmp
xchg
stos
mov
sbb
sbb
and
andl
adc
or
imul
test
pop
jg
divb
sub
outsb
sbb
icebp
push
mov
lock
mov
gs
push
jmp
dec
cld
mov
push
popf
jmp
jbe
cmpsl
sbb
mov
jne
sahf
stos
xchg
into
aaa
mov
adc
fidivs
ds
jp
cld
push
and
mov
add
setae
pop
mov
pop
sarb
fsubl
xchg
lock
cwtl
or
lds
cmp
sbb
por
jmp
mov
repnz
outsb
jecxz
jge
stc
pop
push
xchg
cli
xchg
test
jno
popf
mov
cmpsb
sub
add
arpl
fsubrl
mov
pop
mov
or
jne
cmp
loop
fildl
and
xchg
ss
sub
xchg
inc
jb
ret
xor
add
icebp
in
mov
cs
dec
fnstcw
fcompl
mov
lods
jge
fnstsw
daa
push
mov
add
xor
xchg
mov
in
into
repz
jae
scas
xchg
cmpsl
imul
leave
lods
in
inc
aad
pop
jnp
mov
adc
jb
test
lret
add
test
test
pop
cmpsl
cmp
in
in
ja
pushf
enter
mov
mov
in
loopne
sub
or
xchg
push
imul
dec
outsb
dec
fidivrl
push
out
lds
and
xchg
gs
or
mov
cltd
ds
dec
data16
pop
sbb
pop
movsb
leave
dec
std
mov
test
xchg
add
add
daa
cmp
xlat
call
fs
loop
negb
or
cmp
mov
sbb
cwtl
arpl
sbb
inc
leave
and
shrl
jns
sub
sbb
adc
jmp
add
loope
ja
adc
jecxz
aas
dec
dec
out
in
sub
scas
ljmp
inc
ja
push
sub
addr16
push
daa
inc
sti
xlat
sub
ljmp
lret
insb
cmpl
adc
mov
incl
out
rcrb
test
jmp
sub
ja
pop
push
in
sbb
scas
inc
mov
xchg
jge
xor
mov
push
sub
aas
mov
into
test
or
daa
arpl
je
jns
loop
xchg
sbb
test
cmp
int
fimuls
out
xchg
repnz
hlt
jle
roll
sbb
mov
sub
fisubs
lcall
out
jp
test
xchg
lret
popf
sti
lret
xchg
jg
popf
mov
testb
aaa
jg
subl
ss
pop
jle
pop
cmpsb
jae
lock
push
into
pop
fsubrs
dec
notl
adc
push
xor
mulb
inc
scas
fisubrs
mov
cmpsl
dec
ja
cmpsl
push
jp
rorl
push
out
orps
cmp
cli
mov
pop
daa
pop
push
or
sub
loop
mov
out
push
push
sbb
cltd
cli
lock
sub
xchg
lahf
push
xor
mov
cmpsb
ds
sbb
xchg
inc
outsb
stos
push
lret
or
cmc
out
int
jg
mov
inc
mov
popa
fwait
sub
sbb
mov
imul
mov
add
femms
pop
xchg
pop
mov
test
fstps
cmpsl
nop
jo
decb
cld
pop
dec
fiaddl
shll
inc
les
jecxz
mov
xchg
rcrb
jmp
push
jne
add
das
call
mov
imul
mov
xchg
adc
ds
cmpsb
xlat
das
loopne
es
call
loop
testl
sub
jg
jnp
adc
jle
loope
loope
mov
mulb
sbb
and
jae
shl
pop
adc
mov
notb
jmp
mov
in
sbb
mov
stos
in
cmp
shrl
outsb
pop
mov
inc
lods
test
lcall
xor
jmp
lds
lcall
or
and
inc
cmpsb
mov
es
popa
dec
call
mov
xchg
daa
out
adc
pop
stos
push
pop
gs
sahf
scas
jecxz
mov
add
gs
insl
daa
mov
cmp
popf
jne
subl
das
mov
hlt
dec
testb
jns
xor
stc
movsl
lret
fadd
loope
push
shrl
push
rorb
sbb
outsl
shlb
cmpsb
aas
testb
je
jmp
mov
mov
leave
outsl
arpl
fs
pop
xlat
xor
cmp
sbb
fprem
ret
mov
fwait
je
loop
das
in
stc
push
movsb
je
daa
clc
mov
hlt
mov
mov
mov
pop
mov
mov
mov
sbb
pop
adc
popf
and
jno,pt
loop
pop
inc
cmp
loop
sub
adc
lods
sub
lret
adc
bsf
cld
sbb
lea
mov
xchg
fs
in
outsb
jp
in
adc
mov
mov
cli
xorb
cmc
fwait
and
xchg
pop
sbb
shll
push
pop
sbb
fdivl
bound
jbe
loope
push
outsl
iret
push
add
sbb
pop
add
sub
mov
sarb
mov
stos
into
push
repz
lret
pop
call
pop
sahf
xchg
sub
or
enter
push
bound
fnstcw
and
cmp
adc
dec
loope
cwtl
mov
push
cwtl
jno
and
jne
mul
and
and
ficoms
lods
and
dec
sub
aad
repnz
cmp
xchg
ret
adcb
loop
shll
loop
cmpsb
and
jge,pn
inc
cmp
mov
test
add
mov
iret
mov
inc
add
inc
lret
scas
cli
inc
mov
icebp
lret
add
jae
pop
xchg
push
out
mov
mov
loope
or
pop
or
sahf
inc
adc
pop
fsubrl
sbb
jb
stos
out
and
lret
adc
out
fnstsw
lods
mov
add
or
sub
hlt
insl
in
dec
lea
pop
sbb
inc
rcrb
push
gs
adcl
pop
aad
mov
push
sub
out
sub
in
jmp
enter
push
decb
out
into
cld
add
or
cmp
lea
mov
push
xchg
cmpsl
push
aad
mov
lods
and
xor
mov
xchg
or
and
pop
or
pop
cmp
sahf
pushf
xchg
pop
jne
leave
push
sahf
fldenv
cmp
cmp
clc
aas
jae
lahf
sbb
mov
mov
xchg
xor
in
xor
inc
shrl
mov
xchg
shl
inc
ret
sub
dec
fstpt
dec
xchg
push
lods
lods
daa
daa
je
in
push
imul
mov
jb
pop
fistpll
cmpsl
inc
addr16
mov
lcall
push
and
fldcw
pop
js
loopne
mov
inc
faddl
aas
or
adc
push
jo
push
mov
lock
inc
and
adc
loopne
loopne
add
add
add
pop
jbe
pop
mov
les
or
add
incl
pop
xchg
subb
jae
popf
stos
outsb
mov
sub
lock
inc
and
adc
loopne
loopne
add
add
lea
add
jecxz
stos
outsb
sub
push
int3
stos
adc
xchg
fnstsw
mov
push
pop
sub
mov
gs
xchg
dec
stos
insl
mul
add
andb
fwait
stos
std
pop
lods
ja
daa
inc
pop
push
jb
cmpsl
in
insl
jmp
pop
sub
cwtl
push
pop
jbe
loop
test
fistpll
push
idivl
jp
imul
jne
mov
dec
and
pop
xchg
cmp
pop
ds
adc
insb
dec
mov
or
stc
push
pop
in
mov
sti
xchg
fucomip
pop
out
movsb
pop
lcall
mov
pushf
sub
pop
stc
std
mov
xchg
cmp
ficomps
aam
aaa
dec
sub
ljmp
and
ficoms
lcall
adc
and
inc
in
mov
ficoms
iret
rcll
and
gs
pop
shlb
popa
imul
mov
mov
clc
rolb
aam
mov
jecxz
mov
push
add
inc
rclb
hlt
movsl
push
call
loope
inc
mov
pusha
jnp
call
in
pop
xchg
repnz
or
ret
adc
or
inc
movsb
jecxz
xchg
sar
aam
pushf
outsb
sub
movl
and
lods
xchg
popa
scas
mov
lret
call
enter
outsb
in
lret
push
sbb
stc
outsb
mov
jne
pop
add
imull
adc
lds
pop
fisubrs
dec
loopne
sub
sti
lahf
inc
inc
sbb
mov
mov
insb
sbb
jmp
xchg
xor
sub
mov
push
inc
jecxz
cwtl
cs
xchg
or
and
loope
mov
lea
fwait
push
cltd
loopne
jno
cmpsl
xchg
mov
cmpsb
mov
push
cmp
mov
adc
xorb
into
sbb
cmp
jno
fcomps
xchg
push
mov
dec
adc
call
pushf
mov
loope
xor
rcrl
adc
outsl
jge
ror
xor
and
rorl
or
pop
fsubs
inc
inc
mov
ljmp
xor
sbb
mov
iret
ret
inc
popa
mov
fmulp
inc
lea
push
add
xor
popf
enter
test
adc
icebp
testb
push
hlt
push
fdivrs
movsb
popa
into
repz
jecxz
sahf
and
mov
push
out
or
hlt
inc
xchg
jmp
xlat
jne
push
jns
sub
ljmp
cmp
movsl
nop
inc
add
dec
loop
xlat
ror
es
xor
sti
pop
fdivrs
cld
or
sub
jb
inc
mov
jmp
xchg
ret
xor
addr16
sbb
xor
addr16
sbb
inc
pop
dec
data16
aam
jb
mov
int3
inc
mov
lcall
int3
jnp
xor
cmp
aad
jmp
cmp
jle
cmp
sub
es
fisttpl
lods
repnz
loopne
inc
jbe
nop
push
shl
mov
or
data16
daa
mov
je
xchg
idivb
push
fdivl
pop
bound
stc
out
pop
and
mov
xor
das
sbb
out
cmp
fcomp
fs
std
sbb
add
outsl
imul
rcll
and
xor
pop
fstps
fistl
push
add
push
movl
mov
scas
inc
int3
xor
mov
imul
cs
xlat
jmp
loopne
popa
xor
mov
in
and
cmp
or
mov
xchg
push
adc
clc
nop
bound
mov
into
int3
addr16
stc
xchg
cmc
mov
fcmove
mov
xchg
fwait
push
ljmp
aas
jl
addr16
mov
xchg
sbb
pop
lds
out
push
enter
or
push
push
pop
or
add
lock
mov
lock
leave
fwait
scas
inc
sub
sbb
std
xor
cs
push
pshufw
push
mov
dec
xor
cmpl
mov
fsubl
cld
fwait
notb
mov
divb
jne
mov
fcmovbe
jg
jmp
jle
ljmp
aaa
scas
cmp
dec
daa
push
pop
lret
add
mov
push
inc
adc
xchg
adc
movsl
mov
imul
fimull
pop
add
fmuls
adcl
mov
push
dec
jp
fwait
ss
sbb
stos
mov
arpl
das
cltd
mov
ljmp
push
daa
in
stc
imul
scas
fucomip
inc
and
test
cmpsb
xchg
std
mov
dec
mov
int
mov
xchg
jge
and
dec
jmp
stos
pusha
pop
inc
aam
pop
push
dec
aaa
inc
lahf
and
dec
pop
pop
repnz
sub
test
test
mov
fiadds
inc
shlb
sahf
out
xchg
jne
mov
jns
xor
cltd
js
cmc
shr
mov
lods
das
es
out
dec
xchg
cld
scas
jne
xchg
push
cwtl
jge
or
fimuls
push
daa
mov
inc
es
xor
popa
mov
inc
adc
mov
adc
popf
scas
cmp
inc
fistps
mov
jge
mov
xchg
lcall
and
std
jnp
jo
iret
ror
xchg
xor
push
mov
dec
jbe
pop
fcmovbe
mov
mov
mov
lods
add
mov
mov
test
or
jbe
push
push
lcall
test
lea
ret
arpl
add
lods
inc
stos
push
movsb
movsl
test
or
adc
dec
popf
loopne
repnz
adc
inc
mov
push
mov
fldenv
jg
ficoms
mov
jb
inc
imul
jnp
mov
dec
aas
popa
sub
scas
cmp
or
mov
out
insb
inc
sahf
mov
cld
mov
aas
out
cmpsb
outsl
jbe
loopne
mov
lea
mov
sub
call
mov
pop
inc
or
loopne
mov
movsl
js
mov
shl
adc
xchg
lods
repz
xchg
cmpsl
out
lcall
test
js
mov
mull
cmp
sub
push
ror
popa
pop
xchg
mov
push
mov
lods
push
inc
adc
shrl
inc
das
in
es
es
push
ljmp
xchg
push
ss
fisubrl
xchg
pop
stos
mov
lods
fimull
mov
or
lcall
cld
jns
jne
pandn
push
fcoml
jns
jge
ljmp
enter
pop
cs
pop
mov
popf
xor
jp
mov
loope
dec
mov
ret
std
sub
mov
imul
fstpt
mov
or
out
aad
aaa
add
fldpi
mov
loop
add
out
cmpsb
mov
pop
add
cmpsl
dec
iret
sbb
cli
sahf
loop
pop
cmpsb
xchg
rorl
icebp
xor
and
jb
ds
sub
xchg
aam
or
jg
inc
fcmovnbe
test
arpl
and
pop
inc
into
repnz
pop
xor
push
hlt
insb
loopne
push
xor
and
or
pop
add
out
or
imul
les
adc
xlat
mov
lahf
gs
sahf
inc
xchg
or
cmp
and
ljmp
or
cld
popa
xchg
mov
cld
aam
jp
es
das
mov
test
sar
loope
adc
inc
xchg
jne
out
mov
mov
clc
lcall
sbb
insl
test
push
or
push
lret
push
cmp
dec
jbe
fstpl
sub
mov
jae
leave
xor
sahf
push
sarl
mov
or
lret
xor
int
pop
dec
pop
imul
cli
sub
and
call
rcrl
jle
jb
insl
xchg
cmp
fldcw
les
pop
mov
sub
addr16
push
imul
push
in
jbe
dec
aam
lea
js
sbb
and
es
mov
push
jnp
sub
mov
xchg
push
js
in
jecxz
movsl
fcmovu
std
cmp
ljmp
daa
mov
adc
or
inc
or
lret
lock
movsb
push
les
das
mov
sbb
addl
mulb
inc
and
js
cmp
sar
outsb
mov
pop
mov
addr16
pop
xchg
shl
fnstcw
pop
cmp
pop
jecxz
sarb
inc
fidivrs
xchg
subl
mov
adc
push
sbb
fildl
jl
jge
xchg
shl
int3
lods
jne
dec
js
ja
or
pop
inc
gs
cmp
jp
mov
xor
stos
pop
and
xor
call
inc
rolb
lahf
das
add
mov
or
mov
fdivrp
xor
std
lods
jge
scas
add
sbb
mov
into
inc
mov
mov
pushl
inc
cwtl
sub
sbb
sub
leave
cmpsb
sub
adc
imul
es
imul
mov
mov
outsb
adc
das
jb
jg
ss
les
mov
or
adc
shll
lods
not
popf
shrl
or
push
add
adc
xchg
fidivrl
idivl
lock
leave
cmpsl
and
dec
inc
jle
les
pop
jo
cmpsl
loop
icebp
xor
scas
jg
jecxz
dec
test
jmp
xchg
mov
inc
sub
sahf
lock
mov
std
lods
fisubrs
cs
imul
popl
clc
subb
sbb
aam
shll
mov
xchg
in
pop
cmp
mov
push
jmp
sbb
lcall
mov
rcrb
jge
xchg
mov
insl
jne
repnz
lcall
in
in
pop
push
add
imul
int
cmp
cmp
insb
mov
addr16
arpl
orb
inc
mov
xchg
xor
out
test
mov
fldl
xor
pop
loop
orb
add
sub
push
pushf
out
aad
adc
inc
adc
push
cmp
dec
jno
cmp
push
mov
and
push
outsb
inc
cmp
stos
cltd
nop
xchg
mov
mov
addr16
sbb
rclb
decl
jmp
dec
mov
lcall
stos
fsubs
push
loope
fdivr
mov
xchg
rcll
add
sbb
in
cmc
mov
out
out
mov
push
dec
jb
lret
out
fildll
mov
jmpw
testb
clc
ljmp
sbb
jmp
mov
es
xchg
adc
xchg
call
adc
xchg
popf
lahf
push
ret
call
stos
jae
gs
test
arpl
les
sub
mov
ja
insb
iret
sbb
mov
sbb
aad
pop
inc
dec
cld
in
daa
xchg
dec
mov
dec
cmp
mov
int3
adc
cmp
jecxz
lahf
test
dec
mov
negl
cmpb
aaa
imul
xchg
ret
and
cmp
leave
jns
xchg
sti
pop
mov
fmuls
mov
jecxz
add
mov
xor
cmp
xor
push
mov
shll
nop
insl
rclb
xchg
in
pushf
mov
mov
loope
mov
dec
xor
ss
mov
xchg
leave
jge
push
les
xor
ljmp
mov
adc
call
insb
cmp
sub
sub
jno
push
aam
dec
or
mov
xchg
inc
ljmp
lock
movsb
adcb
int3
mov
fdivl
rcrl
and
mov
mov
add
mov
xlat
xchg
add
inc
mov
sbb
mov
pop
fnsave
mov
aad
xchg
rcll
sarb
jl
lret
cmp
test
outsl
sub
mov
mov
out
mov
clc
call
stos
mov
fnstcw
lcall
xor
dec
insl
cmpsl
mov
mov
subb
fwait
push
loop
push
ljmp
mov
jb
incb
xchg
pop
adc
outsb
push
sub
jg
sub
sub
or
aad
xchg
xchg
es
xchg
xchg
fcomi
jmp
lea
mov
movsb
sti
jne
push
ds
pop
pop
stc
push
mov
mov
js
leave
mov
sbb
sbb
shll
jle
insl
shl
dec
and
inc
jge
xor
jns
movsb
imul
cmpsl
fwait
sbb
movsl
mov
fmull
test
pop
mov
xchg
xchg
xor
in
ljmp
in
test
add
mov
outsl
lods
inc
popa
data16
data16
scas
ret
cmpsl
mov
leave
mov
mov
rcll
cmpsl
lock
in
mov
dec
push
bound
int3
nop
call
sbb
nop
ss
rorb
add
mov
jae
mul
cmpsb
stc
mov
loopne
xchg
pop
out
repnz
jns
outsl
adc
mov
hlt
out
fists
out
push
pop
fdivrl
repz
xor
loopne
clc
sub
fxtract
shrd
xor
and
pop
push
inc
les
gs
dec
xchg
pop
pop
hlt
ljmp
dec
add
cmp
mov
dec
xchg
sti
pop
cmp
adc
mov
int
add
cwtl
dec
ror
ljmp
mov
inc
cmp
ret
dec
clc
inc
stc
add
cld
cwtl
jg
mov
mov
add
loopne
sbb
inc
add
andl
or
push
fbstp
iret
pop
sub
add
cmc
aaa
cmp
lcall
sub
dec
inc
pop
mov
and
jp
xlat
call
xchg
sbb
xchg
cld
imul
nop
lods
pusha
dec
int
das
jg
mov
adcl
pop
ficoms
xorb
cmp
sbb
sub
mov
lea
or
aam
xchg
insb
mov
hlt
repnz
movsb
jecxz
inc
bound
popf
insb
sbb
mov
out
sbb
out
pop
cmpsl
mov
inc
out
inc
std
inc
pop
cmp
out
out
sub
push
xchg
ret
lock
nop
mov
pushf
scas
outsb
and
adc
mov
cwtl
into
popa
inc
loope
cltd
push
mov
cld
xchg
fisttps
sahf
mov
test
cltd
mov
or
adc
adc
fcoml
and
int
inc
incl
stos
jns
cltd
jp,pn
jae
fs
xor
mov
daa
push
sbb
ret
jl
mov
add
lahf
lahf
jne
ljmp
stos
test
xchg
mov
fdivrl
jp
lods
stc
jne
cmp
loope
sub
mov
xor
mov
xchg
dec
insb
cmpsl
jp
pop
inc
fstpl
inc
fucomip
loope
ret
push
sti
das
call
adc
and
and
loop
dec
pop
movsb
mov
jl
popa
pop
stc
stos
std
and
fstpl
fwait
jl
std
movsl
xchg
lret
lods
sbb
jg
push
popf
imul
out
mov
xor
sarl
jb
mov
in
rcll
negl
dec
dec
clc
xor
and
inc
in
addr16
test
jbe
repnz
jge
fisubl
enter
xchg
push
imul
cld
int3
cmp
shll
mov
sub
fdivrl
sysenter
jg
push
rcr
push
addr16
cmpsb
fistpl
scas
mov
xor
ja
push
fstpt
jne
mov
jmp
push
sahf
loop
pop
dec
or
ret
in
or
jge
push
rcrl
xorl
lahf
cmp
xchg
stc
lods
xchg
js
cmp
mov
icebp
fstl
mov
xchg
sub
insb
pop
out
dec
inc
mov
xchg
outsl
push
iret
fdivrl
cmp
adc
mov
orl
mov
mov
in
scas
dec
jne
pop
dec
dec
xchg
inc
mov
clc
repnz
pop
mov
stos
in
dec
in
mov
adc
add
pmullw
push
outsl
xchg
mov
add
aad
xor
mov
sbbl
pop
and
lcall
lock
jno
jnp
xchg
sub
lea
push
bound
rolb
arpl
hlt
pushf
mov
mov
mov
sub
pop
cwtl
sbb
lods
dec
push
adc
or
aad
and
jae
and
loop
sub
test
jg
leavew
pop
inc
pop
cli
arpl
xchg
cli
cli
xor
xor
add
into
add
sub
add
cwtl
int
loopne
inc
shrb
mov
jecxz
bswap
sbb
je
push
add
mov
adc
rorl
push
or
sbb
dec
push
sbb
or
enter
mov
xchg
test
jb
loop
adc
negl
fisubrl
mov
jno
out
sahf
js
sbb
mov
ret
cli
leave
add
shrl
outsb
cltd
dec
jno
leave
push
cltd
pop
adc
cmovg
xor
aas
fildll
or
xor
shrb
xor
in
xlat
lods
gs
mov
rcrb
fstl
lcall
shll
jno
xor
mov
dec
adc
in
inc
add
in
data16
daa
hlt
repz
adc
sti
mov
dec
pop
outsl
sub
xchg
mov
push
push
stc
pop
rorl
or
pop
xor
test
mov
mov
ficoms
ljmp
je
je
pop
or
inc
scas
arpl
cmp
out
or
lahf
adc
xor
int
adc
mov
fldcw
jb
push
fistl
jle
xor
ja
mov
adc
push
cmpsl
jl
insb
ss
stos
xchg
or
aad
inc
jmp
daa
mov
aad
sub
orb
popa
cs
ret
fistps
daa
mov
sub
sub
shrb
mov
xor
mov
jge
scas
cmp
popa
adc
add
in
push
push
xor
pusha
scas
mov
push
inc
xor
das
push
out
jmp
es
jge
push
mov
addr16
imul
fisubrl
jnp
fwait
xor
xchg
adc
movsb
push
loope
test
testl
adc
pop
or
sbbl
sub
nop
scas
sub
in
push
cmp
jg
jae
loopne
stos
popl
xor
cli
pop
pop
fs
jp
jl
xor
or
stos
adc
jp
out
xchg
mov
shlb
xor
mov
adc
sub
cs
mov
repz
inc
movsl
xor
and
xchg
jmp
insb
sbb
push
pushf
xchg
push
in
std
mov
dec
jg
xor
mov
dec
mov
xchg
ficompl
iret
lods
or
jg
push
fimuls
dec
test
add
rorl
sbb
das
mov
mov
ja
mov
ret
jo
hlt
in
ss
push
adc
adc
lock
ret
push
xorb
mov
jne
sbb
das
sti
stos
test
sbb
int
xor
in
pusha
clc
lret
hlt
cld
mov
add
mov
push
in
inc
jge
sub
jo
imull
lahf
push
test
fldenv
dec
cwtl
cs
out
test
push
lahf
ljmp
inc
cmp
mov
mov
aam
movb
push
sbb
fld
push
imul
pop
mov
popa
jo
adc
mov
pushl
fcoml
xchg
fstpt
data16
in
pop
mov
into
sahf
lods
imul
jns
inc
cmp
adc
sbb
xlat
xchg
jle
int
xor
pop
jns
xor
stos
add
cmp
mov
sub
stos
adc
repnz
je
or
xlat
push
in
inc
push
adc
xchg
test
test
push
dec
lods
fisttpll
and
dec
xchg
cld
xor
in
jmp
pop
inc
sub
inc
sub
leave
inc
stc
leave
cmp
sar
cmp
mov
cmc
iret
mov
movb
orl
xchg
imul
fidivrl
fs
loopne
cmc
loope
mov
push
pop
pusha
fdivs
jge
lret
arpl
pop
das
scas
popf
sbb
cwtl
push
jbe
sarb
lods
cmp
push
mov
and
pop
mov
pushf
xchg
jae
fiadds
sub
pusha
inc
jmp
sub
test
fsubs
sub
inc
cmpsb
lock
mov
ffreep
popf
test
push
adc
shl
call
adc
gs
clc
adc
sub
xchg
ljmp
icebp
pushf
out
dec
test
cmp
cmp
push
fbstp
push
adc
xor
dec
sub
and
fmuls
or
push
faddp
sub
aaa
sarl
mov
hlt
in
xor
mov
push
std
bound
mov
mov
xchg
in
std
aas
inc
sub
mov
rolb
stos
mov
fcomp
mov
bnd
mov
push
push
jb
or
mov
adc
adc
push
nop
loop
mov
or
lahf
lods
mov
or
aad
loopne
roll
push
aaa
or
add
xchg
xchg
jbe
sub
out
jmp
xorps
jne
fistpl
lock
in
push
sbb
cmc
jp
lea
pop
cmp
aaa
or
lret
xchg
aaa
jmp
jae
mov
push
adc
xchg
in
pusha
sub
cmp
push
sysret
cmpsb
cmp
and
inc
xchg
js
jge
in
bound
xor
scas
enter
stc
cs
sub
cltd
std
in
loopne
mov
cmp
mov
popa
mov
rorl
repz
mov
adcl
lock
ret
mov
or
pop
sbb
xchg
mov
pop
mov
roll
mov
cld
sbb
pop
adc
jnp
cmp
mov
cmpsb
xor
push
das
test
inc
das
test
hlt
add
and
lock
gs
pop
jmp
xor
xor
sarl
outsl
mov
rcll
movsl
shlb
loop
fisubrs
icebp
xchg
lahf
push
push
jo
push
mov
fldcw
pop
rclb
add
push
call
xchg
or
dec
cmpsl
daa
cmp
mov
dec
cmpsb
push
ss
divl
jnp
push
clc
pop
mov
and
ret
sti
mov
sub
xor
cltd
xchg
cmp
test
xchg
dec
adc
inc
cmp
sub
sbb
ja
jmp
mov
jne
out
pushf
sar
mov
ss
mov
pop
ret
rorl
inc
mov
std
neg
mov
inc
es
call
lret
mov
cmpsl
cmpsl
rcrb
or
stos
jb
test
jg
mulb
jg
adc
push
mov
cli
leave
push
icebp
repnz
je
movsb
shll
adc
call
std
sti
jbe
mov
jmp
xchg
mov
sub
stos
pop
cmc
mov
sbbl
jne
out
cld
lock
push
inc
aas
cmp
cmp
leave
std
mov
leave
inc
mov
sti
mov
pop
pusha
cmc
scas
ja
cs
leave
cmpsb
clc
cmp
mov
mov
sub
rep
idiv
xchg
inc
in
clc
pop
je
jmp
sahf
push
insl
test
mov
ljmp
add
pushl
dec
cmp
inc
into
xchg
popf
fwait
sbb
cltd
scas
lea
cmpsb
jns
mov
test
stos
pop
js
mov
in
gs
rcl
cmp
push
fiaddl
ja
into
xor
addr16
ror
ljmp
push
aas
xchg
push
cwtl
pop
xor
xchg
add
mov
xchg
rcrl
push
sub
in
clc
lahf
xchg
mov
dec
dec
mov
xlat
xchg
pop
add
inc
push
out
xchg
xchg
insb
iret
adc
push
clc
aaa
mov
lea
dec
mov
fstpt
data16
xor
jl
jecxz
aas
add
imul
sbb
push
sub
push
rclb
and
shlb
adc
sbb
mov
push
lcall
gs
and
inc
lds
outsl
loopne
test
addb
pop
jns
les
or
std
inc
cltd
sbb
add
xchg
push
mov
xchg
idivl
cltd
cmp
push
pop
movntps
xor
test
je
pop
sbbl
inc
fwait
inc
xlat
jo
shlb
jecxz
inc
lret
xor
les
add
pop
jle
adc
push
pop
bound
sub
call
push
iret
mov
add
push
xor
pop
imul
cwtl
or
pop
lret
mov
popa
out
out
rcrb
adc
add
push
movsl
out
daa
sbb
out
test
or
int
addr16
inc
mov
add
ja
pop
fdivrs
mov
cmp
test
push
push
cli
or
addr16
in
push
and
ss
inc
sbbl
xor
dec
in
cmpsb
mov
push
sahf
ja
mov
aam
mov
imul
pop
fcoml
sbb
icebp
mov
pop
cs
inc
sbb
gs
xor
jae
notl
sub
repz
icebp
sbb
jns
loop
mov
adc
jge
stc
jns
scas
mov
jne
aam
insb
in
incl
or
orb
dec
pop
mov
jmp
lods
icebp
in
sbb
test
imul
jle
sahf
and
or
ds
sbb
sbb
cmp
xchg
inc
bound
aam
aaa
sbb
or
pop
in
push
xor
pop
jge,pn
cmp
add
ljmp
sbb
add
ljmp
push
jmp
pop
lret
fcomps
jno
cmp
test
cmpsl
sub
pop
andl
popf
adc
out
in
imul
cltd
pop
or
daa
inc
xor
jmp
inc
lcall
hlt
cmp
out
xchg
xchg
cmp
cld
das
inc
xlat
lds
push
jp
sahf
mov
cs
test
cs
sub
mov
mov
mov
dec
jnp
sub
cmpl
mov
ja
repz
and
cmpsl
cmp
add
addb
mov
outsb
cmp
or
fldcw
mov
shrb
cmc
cmpsl
lods
sarb
jle
or
add
lahf
mov
jne
js
mov
mov
xchg
out
mov
ds
xlat
in
fsubl
fwait
sbb
push
mov
mov
dec
sarb
sub
jmp
aaa
sub
scas
fimull
ret
jbe
push
jae
inc
popf
jg
cmpsl
jo
shlb
cli
sarl
push
jmp
fcmove
inc
not
std
sbb
cmp
push
cmp
sbb
push
or
in
ret
dec
mov
mov
cmp
ret
shll
cmc
ret
pop
lahf
das
int3
in
cmp
dec
or
filds
popl
push
xchg
push
aaa
inc
cmc
sub
push
lret
xchg
dec
pop
mov
imul
test
jge
pop
enter
jle
push
lahf
mov
test
je
mov
dec
cwtl
nop
rcll
aad
mov
fst
pop
push
imul
aas
inc
xor
adc
in
sbb
fwait
dec
push
adc
mov
cmpsb
cmp
mov
mov
fadd
or
mov
ja
mov
and
lret
loope
leave
ja
dec
inc
int3
lret
mov
fimuls
xchg
fidivrs
xchg
subl
push
sbb
add
cmp
jmp
add
mov
pop
fldenv
sarl
ror
jl
lahf
push
loop
std
mov
pop
movsl
enter
cltd
aam
outsb
fdivs
mov
js
les
dec
fs
repz
or
into
mov
pusha
lock
xchg
adcb
cmp
je
xor
inc
sbb
decb
inc
and
jg
in
ret
sub
loope
sbb
push
add
imul
arpl
lods
gs
sbb
and
jnp
push
insl
pop
xor
xchg
xor
cld
stos
or
add
and
mov
dec
mov
cmp
pop
add
mov
add
xor
jecxz
push
mov
sub
sbb
out
or
push
jae
fists
dec
subb
xlat
imul
out
jns
rol
mov
or
out
inc
and
faddl
xor
xor
sub
lret
xchg
adc
and
mov
jl
imul
inc
es
dec
jns
daa
and
aas
xor
daa
imul
xchg
fisttpll
icebp
xor
js
inc
mov
fs
lds
fwait
jns
dec
jmp
fs
mov
orb
xlat
in
rorb
sti
adc
cmp
decb
mov
sahf
adc
cmp
cmp
pop
cmp
add
movsb
pop
mov
mov
fdivs
adcl
jo
jno
dec
sbb
adc
lret
pop
pushf
cmp
or
jns
loope
sarb
js
das
add
in
xor
lret
iret
or
dec
clc
push
and
and
lods
add
loope
mov
add
lcall
jns
push
addr16
jmp
xlat
nop
shlb
das
add
mov
je
or
xchg
add
in
jns
dec
pusha
xchg
xor
jg
lret
cmpsl
dec
js
jmp
aad
jb
jae
mov
iret
aam
push
mov
xor
fmull
lcall
xchg
lds
mov
jb
fistl
bound
add
sbb
les
jle
pop
idiv
dec
roll
pop
sbb
fcoml
insl
adc
mov
pushf
pop
add
scas
lahf
fisubs
or
or
jle
scas
jae
outsb
sub
add
cmp
lahf
push
mov
pop
syscall
call
mov
cmp
and
int3
fwait
jbe
fisubrl
mov
mov
cs
imul
cmp
mov
jno
inc
sarl
in
lcall
jl
movl
andl
sub
adc
adcl
add
movsb
mov
pop
dec
xchg
fdivl
mov
lret
fstp
mov
sub
in
xchg
fcmovu
loop
pop
or
cmpsl
negb
cmp
sub
dec
mov
nop
stos
inc
mov
in
aad
push
data16
aad
dec
jecxz
pop
add
jmp
jg
push
xor
hlt
push
xchg
sbb
jb
js
cld
andb
cs
sahf
pop
xchg
aam
fs
data16
jns
inc
dec
imul
je
ss
mov
aad
test
cmp
jbe
iret
mov
or
jae
xor
xchg
outsl
stc
std
xchg
cmp
stc
jne
outsb
push
popa
stos
incl
mov
and
lock
jmp
mov
xor
jb
cmp
or
mov
dec
and
push
xchg
aaa
les
jo
ljmp
jbe
jg
push
dec
inc
aad
insb
loopne
cmp
mov
fwait
out
mov
mov
xchg
int
fstl
out
cwtl
testb
add
sbb
dec
push
push
nop
cld
mov
ds
cmp
mov
mov
fs
xor
mov
ds
push
int3
mov
ret
sahf
inc
std
sbb
xor
mov
int3
push
cmc
jb
mov
icebp
mov
or
add
add
dec
xchg
mov
xlat
add
push
sbb
loopne
inc
jecxz
aad
xlat
inc
and
mov
inc
gs
jg
cmp
in
mov
out
lds
outsl
mov
xchg
lret
or
out
pop
outsl
shr
pop
push
and
mov
jle
sbb
test
dec
xor
or
sub
xchg
data16
cmp
movsl
xchg
gs
mov
insl
bound
scas
and
ds
out
jp
pop
jl
xchg
dec
pop
sbb
out
test
pop
out
or
rol
dec
outsl
scas
pop
jae
into
js
out
inc
adc
incl
movsl
inc
mov
mov
shrb
hlt
mov
mov
dec
jae
pop
subl
scas
jecxz
push
ljmp
push
xor
pop
insl
jmp
and
inc
cmp
stos
dec
mov
mov
and
and
outsb
enter
imul
ljmp
fdivr
xchg
in
out
mov
fwait
shlb
push
inc
stc
inc
or
lods
jg
add
jae
xchg
insl
scas
and
mov
sbb
sbb
add
cmp
jb
cs
jecxz
cmc
mov
in
ss
decb
in
rolb
pop
push
adc
roll
bnd
sub
sarb
mov
imul
dec
sbbb
inc
int
rcr
out
sub
repnz
pop
je
in
adc
and
cmp
adc
cwtl
jbe
out
dec
sbbb
push
jae
sbb
mov
popa
inc
nop
adc
cmpsl
dec
mov
xchg
sbb
xchg
loop
mov
mov
fwait
dec
pop
push
mov
jl
cmp
ljmp
mov
or
fidivrl
dec
sbb
or
outsb
test
push
cmp
adc
mov
mov
fwait
lods
dec
push
std
in
cld
stos
push
aam
jb
sbbb
decl
mov
out
adc
ljmp
ja
sbb
loopne
stos
in
mov
adc
ds
lods
je
xlat
cli
inc
ret
lock
jbe
add
add
push
xchg
sub
inc
xchg
and
or
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
dec
inc
inc
adc
nop
test
adc
adc
or
bound
xchg
cmp
sahf
sub
sbb
lea
or
les
rorl
adc
and
jo
add
les
ret
lock
push
adc
loop
subb
test
test
and
xchg
jno
add
adc
inc
add
add
adc
sub
andl
jl
or
mov
out
push
xchg
and
stc
cmp
xchg
lods
mov
inc
or
dec
ja
dec
aas
push
and
push
in
inc
xlat
mov
xor
xor
lahf
ss
in
jge
pop
cli
mov
test
in
dec
add
push
sub
int3
jecxz
lret
mov
push
and
movb
cmp
inc
xor
popa
test
clc
hlt
inc
fwait
std
and
frstor
bound
addr16
shl
jno
cmp
sbb
cmp
sbb
sbb
push
xor
sbb
aas
add
sbb
add
push
cmp
mov
mov
sbb
push
mov
and
rol
rol
hlt
cmpb
add
xorb
xor
xchg
pop
daa
add
cmp
sub
push
pop
pop
sub
mov
xor
cmp
andl
roll
roll
adc
out
jp
sbb
or
push
sbb
push
insb
push
movsb
push
cmpsb
pop
aaa
add
jp
push
movsb
pop
test
cmpb
jp
stos
add
mov
pop
add
add
nop
xor
add
pop
add
and
sbb
mov
mov
out
mov
xchg
inc
adc
enter
jmp
or
push
push
sub
pextrw
xor
pop
stos
pop
gs
imul
fsubl
push
and
lods
jmp
mov
and
jmp
cmc
lods
out
iret
sub
iret
sbb
mov
stos
out
addr16
xchg
adc
bound
jmp
sbb
jle
sbb
mov
shlb
jbe
rcrl
in
pop
pop
aad
sbb
shrb
and
pop
or
cltd
sub
xor
sub
fiadds
jb
mov
fistpll
je
jbe
cmp
fdivp
push
push
mov
aam
jne
inc
hlt
xor
mov
mov
hlt
jne
mov
add
lods
jo
lret
sarl
pop
leave
pop
loope
clc
sub
mov
out
dec
rcrb
sub
dec
push
push
subl
xchg
popf
sub
mov
dec
movsb
sbb
fdivrp
stc
inc
jo
ret
cmpsl
mov
xchg
shll
les
das
xchg
mov
stc
jp
inc
push
lahf
inc
insl
hlt
pop
add
fiaddl
in
loope
popa
es
jecxz
scas
aam
jae
pop
push
inc
mov
or
imul
mov
outsb
jb
fucomi
cs
jns
push
loop
dec
jnp
mov
loope
jnp
pop
sub
mov
mov
mov
aad
pop
data16
mov
aaa
lret
xchg
bnd
lcall
fstl
push
pop
cmpsb
sub
int
enter
lea
cmpsb
rcll
or
inc
mov
in
xorb
pop
sti
xlat
stos
mov
sbb
lods
cmp
data16
popf
out
ja
out
pushf
in
lret
xchg
into
ss
stos
pop
push
scas
jnp
dec
pushf
push
insl
hlt
pop
enter
sub
rcr
mov
outsb
call
mov
or
pop
outsb
ds
jbe
mov
or
inc
cmp
mov
sbb
cmp
mov
adc
mov
pusha
sti
inc
inc
or
and
jns
imul
pop
cmp
js
inc
jno
xchg
pop
xchg
xchg
or
lret
inc
mov
jno
je
bound
pop
xor
mov
jnp
adc
scas
or
fbstp
xor
pop
xor
test
int
movsb
lret
dec
mov
xor
sub
inc
jbe
shll
out
ret
mov
adc
push
dec
jp
inc
stc
cs
popf
mov
jecxz
gs
dec
mov
jmp
sahf
mov
lods
in
sub
jnp
nop
clc
cwtl
push
pushf
mov
xlat
and
fdivs
xchg
jge
xchg
mov
pop
int3
test
inc
xchg
xor
mov
into
je
in
cmp
ret
imul
pusha
outsb
sbb
mov
testl
cmpl
fsubr
xchg
xchg
arpl
mov
lea
aas
daa
inc
cmp
out
arpl
mov
jbe
ja
insb
sub
jge
jbe
imull
inc
xchg
stos
pxor
or
add
push
out
inc
subl
cmc
nop
sti
and
aad
sbb
popa
jno
xor
jmp
add
les
jle
fiadds
movsb
popa
outsl
fs
test
inc
out
pop
jbe
sub
xor
es
insb
roll
lcall
push
jo
out
mov
dec
push
add
pop
add
mov
je
cmp
mov
enter
pop
mov
mov
fs
aaa
call
cmpb
andl
in
sbb
xor
test
lret
mov
ret
iret
std
addl
shlb
xor
inc
cltd
hlt
andw
push
lcall
xchg
les
in
ljmp
test
out
pop
fistpll
dec
push
xlat
push
aad
push
push
popf
sbb
addr16
test
sarb
push
divl
push
jl
dec
mov
inc
arpl
lods
jg
mov
mov
cmp
shlb
decl
add
sar
aas
ss
mov
xor
popa
lret
push
jb
test
loopne
mov
inc
testb
inc
sbb
jg
sbb
iret
or
sbb
shlb
cmp
mov
push
sub
daa
enter
mov
inc
jae
xchg
movsl
inc
jb
sbb
inc
call
mov
cmp
pop
movsl
sub
shlb
ljmp
dec
add
adc
pop
js
rorb
push
xchg
mov
iret
leave
adc
cmp
jnp
mov
cmpsb
mov
scas
test
push
push
not
or
push
fnsave
inc
gs
add
xchg
xor
fcoml
outsb
ret
mov
cmp
shl
or
mov
sbb
xor
dec
cwtl
mov
hlt
movsb
mov
data16
mov
scas
popf
mov
push
fnsave
xchg
mov
push
mulb
sar
sbb
dec
int3
subl
cmp
sbb
mov
xor
out
ds
mov
dec
cwtl
fwait
orb
cld
sarl
fiadds
nop
and
xor
push
stos
hlt
adc
pop
inc
imul
ret
xor
movsl
sbb
jbe
dec
enter
mov
cmpsl
cmp
pushf
and
fucomi
inc
jns
movsl
leave
int3
mov
cltd
sub
push
scas
jno
aas
popf
shl
xchg
and
push
or
int
popa
imul
hlt
pop
cmp
popf
fsubrs
jns
and
push
jmp
stc
or
sub
dec
sub
test
lahf
or
cltd
inc
mov
cmp
loopne
sarl
das
and
psubw
dec
jae
xor
mov
and
adc
xor
mov
mov
push
sub
rorl
test
fidivrl
imul
dec
adc
sub
push
jno
lea
fldl
jl
shlb
in
xor
lods
inc
pop
mov
add
clc
mov
push
add
jp
std
dec
out
mov
sub
mov
in
adc
cld
xor
lock
iret
and
xor
fmul
aad
movsl
cmc
ljmp
popa
xchg
dec
testb
in
repnz
addr16
and
push
push
mov
mov
pushf
and
jns
jge
add
add
jl
xor
fidivs
loope
jbe
add
jge
adcb
into
lcall
mov
jnp
div
aaa
das
insl
test
push
mulb
fmuls
dec
cltd
lods
stos
mov
push
cmpsb
mov
mov
adc
aas
call
or
loope
scas
ljmp
aad
inc
loopne
mov
and
xor
and
mov
movsb
pop
push
jecxz
stos
pop
pop
test
mov
mov
fbstp
jmp
push
jmp
enter
jg
jle
push
das
fcmovb
dec
jl
fmuls
mov
pop
or
mov
mov
incb
cmpsl
lret
mov
scas
cmovns
sti
pop
ja
jae
push
out
lds
pop
push
sarb
pusha
loop
stc
xlat
pop
popa
sub
add
ret
mov
sub
xchg
gs
add
or
adc
orl
test
dec
lea
lret
ret
adc
or
popa
jb
sti
frstor
mov
adc
fbstp
dec
sarl
dec
push
jl
cmpsl
mov
xchg
fwait
roll
iret
fistl
xchg
mov
out
mov
insl
ficomps
lahf
test
xorl
and
mov
inc
out
adc
sbb
mov
cwtl
cmp
cld
out
mov
in
movsl
loopne
aad
dec
jno
push
pop
mov
stos
repnz
sub
inc
fcomps
sub
mov
sub
arpl
add
jge
arpl
or
xor
jg
in
lds
int
in
sub
cmp
adc
aaa
outsb
push
push
and
jmp
jns
pop
sub
or
jecxz
shll
aas
or
mov
mov
pop
add
js
mov
pop
cltd
fcoms
imul
xchg
add
xorb
and
xchg
shll
add
mov
sbb
pop
fwait
mov
xchg
cltd
scas
stos
negb
cmp
movsb
out
lods
fsubrl
out
cmpsl
jne
inc
int
pop
call
and
jae
jge
mov
mov
push
adc
cmpsb
fsubrl
sbbl
in
out
stos
pusha
jmp
int
mov
or
add
ja
pop
mov
jne
dec
roll
push
adc
xor
sbb
cwtl
incl
push
cs
sahf
hlt
sub
imul
sbb
shlb
xor
mov
cmc
pop
xchg
aas
jo
jge
test
shrb
sbb
jne
sti
xchg
xor
stos
fcoms
mov
aad
mov
xchg
out
mul
add
bound
call
mov
js
loope
mov
jp
push
pop
enter
xor
xchg
fwait
inc
mov
jecxz
into
cmp
push
adc
add
int
orb
imul
enter
shll
adc
jg
cmpsb
pushf
hlt
xchg
mov
xchg
popf
xchg
pop
insl
test
adc
mov
adc
lock
ss
cmp
out
push
pop
pop
lea
loope
push
sbb
fdivrs
scas
hlt
sub
imul
stos
ficomps
into
jo
mov
or
in
adc
insb
aad
adc
mov
aas
xchg
cmc
sarl
test
lock
lock
push
lods
jns
push
sbb
xor
mov
fisttpll
fdivrl
rolb
imul
mov
mov
inc
pop
std
mov
mov
xor
popf
aam
xchg
jae
mov
add
dec
cmp
ss
push
or
nop
push
les
loope
add
or
sub
dec
aad
lds
jno
scas
dec
das
aaa
arpl
mov
cmc
mov
mov
arpl
cmp
ret
cmovb
add
aaa
fbld
pop
nop
dec
icebp
scas
xchg
xor
subl
mov
subl
cmpsl
inc
adc
mov
mov
idiv
xor
pop
movsb
cli
xchg
sar
push
in
aam
and
mov
pop
repz
lret
cmp
add
sahf
lret
cltd
push
aad
fiadds
btrl
pop
xor
mov
mov
dec
sbb
jle
movsb
aaa
mov
mov
adc
arpl
into
lock
jnp
and
shlb
rcl
repz
ds
mov
dec
push
inc
adc
xor
sbb
jno
addl
test
or
or
aad
call
in
call
mulb
cmp
jp
icebp
cmpsl
push
xchg
mov
ss
sub
adc
ret
rolb
mov
adc
ret
in
or
mov
or
or
push
sub
bound
jbe
push
or
and
cmp
fsub
and
gs
push
inc
mov
out
insb
arpl
push
mov
popa
xchg
in
loopne
xor
ss
cmp
push
jge
fists
mov
or
push
jl
sahf
pop
insb
lret
adc
add
std
jmp
iret
pop
dec
aas
add
jg
add
test
cwtl
repnz
fmuls
rcrl
fistpll
jecxz
and
cmp
mov
dec
add
dec
or
push
xor
jmp
cmp
repnz
inc
movntps
mov
aas
push
jo
mov
sbbl
xor
shrl
adc
mov
pop
ret
sub
jnp
jmp
dec
push
data16
in
mov
jge
test
insb
push
mov
lods
xchg
in
pop
cmc
out
fistps
add
sub
sub
dec
inc
adc
sbb
add
mov
adc
jle
repnz
test
xlat
mov
or
and
jge
aaa
add
fwait
jns
sub
pop
leave
or
lock
add
loop
xor
sbb
cld
adc
push
mov
clc
push
sub
daa
ret
andb
loopnew
jp
gs
mov
push
aad
lock
sub
mov
jo
add
int3
mov
mov
xor
fmul
or
inc
pusha
sbb
dec
jle
adc
mov
das
push
fnop
dec
xchg
pusha
repz
mov
into
dec
adc
sti
jae
es
jle
popf
push
lods
pop
pop
pop
movsb
inc
cld
pop
das
mov
jecxz
sbb
push
test
push
pop
sahf
mov
mov
dec
in
mov
outsb
lahf
aam
std
aas
push
cli
add
sub
das
mov
and
inc
push
rcrl
js
gs
fisubrs
jle
jecxz
aad
in
xlat
mov
loop
sti
jae
push
xor
or
lcall
sub
daa
xchg
mov
sub
scas
adc
dec
mov
insl
push
dec
lcall
lret
pop
dec
mov
mov
scas
addr16
leave
flds
movsb
jns
sub
add
xchg
sahf
xchg
pop
and
dec
jmp
jne
mov
iret
test
dec
mov
lds
imul
in
dec
lods
cmpsb
popa
add
or
xchg
mov
and
pop
imul
mov
adc
div
lahf
aad
outsb
xchg
lahf
inc
jnp
cmpsb
mov
inc
add
addr16
imul
pop
mov
xorb
pop
clc
mov
mov
xor
push
inc
mov
push
mov
call
in
mov
lahf
sub
out
scas
pop
int
mov
xchg
into
ds
jge
lcall
mov
int
mov
or
push
add
push
inc
cs
cmp
or
pop
es
clc
fnstenv
adc
xor
ss
mov
cwtl
stos
jne
mov
cltd
cmp
add
in
pusha
sub
int3
xchg
lods
fcoms
loop
push
mov
lret
test
test
jp
mov
dec
into
jns
fucomi
inc
shrl
push
pop
mov
cmp
xchg
mov
xlat
add
dec
mov
cmc
inc
scas
sbb
out
test
addr16
mov
mov
adc
out
sbb
push
pop
jle
cli
stos
idivl
rorl
aad
jecxz
push
jmp
jnp
sub
adc
mov
pop
movsb
sub
mov
repnz
xor
jbe
push
lods
pop
pop
ljmp
fcomps
cmpsl
sbb
lods
int3
adc
int
dec
arpl
insb
and
fwait
pop
or
cmp
xor
lahf
pop
xchg
sbb
ljmp
nop
cmp
mov
jne
test
cld
adc
add
lods
adc
cwtl
in
aad
lret
in
lds
loop
nop
jmp
or
cmp
add
push
call
mov
cmp
iret
aad
repz
mov
jmp
popa
cmp
mov
aaa
cmp
xchg
dec
add
pushf
inc
pop
ds
call
loop
inc
popa
in
arpl
or
add
mov
and
pop
add
ss
mov
mov
jge
stos
shrb
mov
jle
jge
xchg
test
clc
addr16
adc
dec
jl
mov
pop
call
inc
inc
andl
cwtl
ss
clc
sarl
mov
scas
xor
xchg
sub
or
cmpsb
cmp
addr16
clc
lret
sbbb
movsl
iret
jge
xchg
mov
fucomp
scas
ret
mov
push
xor
mov
or
add
rclb
add
sets
sub
subb
fistpll
mov
mov
push
adc
mull
rep
sub
xor
jle
adc
mov
jecxz
mov
dec
xchg
pop
popf
addr16
cmp
pop
lds
imull
sbb
cli
cld
jle
rclb
push
sbb
pop
or
pop
mov
jbe
ds
gs
data16
xchg
xchg
pop
sub
and
scas
inc
dec
xchg
and
or
loope
call
loope
jmp
lock
cmp
push
ds
ljmp
or
cmp
push
adc
push
cmpsb
test
pop
mov
ret
mov
add
mov
dec
jns
or
push
popa
jb
adc
jne
xchg
push
fdivl
and
jecxz
adc
pushf
sub
les
or
xchg
cmp
sbb
mov
js
addl
mov
aas
mov
mov
test
mov
dec
add
dec
add
xchg
shrb
pop
fdivl
enter
lcall
aam
mov
dec
jmp
mov
push
outsb
and
add
cmpsb
add
imul
sti
sub
decb
push
call
outsb
scas
aas
mov
dec
adc
stc
mov
mov
jns
enter
aaa
xlat
shlb
jge
lea
sbb
mov
iret
pop
stos
push
jle
add
bound
outsb
adc
dec
lods
sahf
and
dec
icebp
or
imul
aaa
add
jmp
outsl
mov
sbb
push
out
movsl
hlt
enter
das
ret
stc
push
scas
int3
addb
mov
lcall
and
xchg
div
pop
hlt
mov
jle
sbb
push
mov
or
movsb
cltd
pop
sub
dec
mov
mov
cmpsb
jne
sbb
lret
xor
lock
mov
lahf
jmp
push
into
test
adc
ret
or
bound
xchg
mov
and
and
and
add
cltd
push
js
mov
fisttpl
mov
mov
int
lds
fidivrl
sub
sub
lret
ljmp
xchg
pop
push
shll
sbb
sub
out
into
or
mov
cld
dec
lret
cs
inc
lock
cmp
and
fnstenv
pop
outsb
mov
mov
pop
mov
push
mov
scas
jb
scas
sti
mov
aad
aad
aaa
inc
outsl
cs
aam
xor
mov
push
xchg
dec
inc
inc
stos
mov
push
or
push
jnp
push
out
adc
outsl
movsb
xor
iret
hlt
sbb
push
sbb
fistl
rcrl
out
rol
mov
in
push
dec
mov
ljmp
outsb
cwtl
mov
pop
mov
inc
stos
pop
or
or
sahf
pop
mov
repz
lcall
push
cmp
jge
sub
insl
cli
cs
jecxz
jb
lret
out
dec
daa
shlb
pop
test
arpl
leave
cmp
cmp
fisubl
sbb
fdivrl
daa
mov
pusha
jp
ret
loope
divb
and
hlt
cmpl
lret
mov
xchg
mov
pop
cmp
ficoms
out
sahf
lcall
mov
les
movsl
ret
pushf
jg
dec
sub
lods
or
sahf
cmp
popa
xchg
rclb
stc
aas
insl
rorb
ret
cltd
sbb
cmpsb
scas
sbbb
loopne
loopne
jl
stos
int3
loopne
pushf
fstpl
sahf
sbb
in
popf
loop
lea
mov
mov
not
push
pop
cli
pop
sbb
jnp,pn
xchg
lds
adc
lret
pop
jp
testl
cltd
rclb
push
inc
mov
out
loopne
cmc
bound
cmp
lods
pop
sbb
imul
ret
movsl
cli
dec
rolb
adc
inc
out
addr16
mov
xchg
pushf
addr16
jle
push
xor
sbb
push
ret
or
sbb
call
xchg
push
adc
or
cmp
data16
mov
mov
sbb
sti
pop
dec
dec
ret
loopne
aas
xchg
mov
scas
jmp
adc
lret
pop
lret
movsb
xchg
lret
or
hlt
xchg
xchg
xorb
sti
daa
or
fbld
lods
imul
pop
jns
pop
lcall
xor
cmp
push
lods
mov
mov
ror
sub
lret
stos
or
mov
movsl
loope
je
xchg
cwtl
and
ljmp
and
test
jo
loopne
add
xchg
jge
scas
or
or
clc
jo
push
push
push
sbb
and
repz
cmpsl
cmp
mov
sbb
ljmp
mov
xchg
jle
fisttpl
inc
cmp
arpl
fsubrl
popa
push
xchg
xchg
lea
add
insb
hlt
add
loope
stc
push
push
imul
mov
mov
xchg
fstl
sbb
sbb
push
inc
pop
shl
pop
roll
and
xor
call
pop
mov
mov
pop
out
mov
loopne
jo
adc
inc
mov
add
jo
pop
jle
xorl
xchg
lea
rorb
sti
cmp
sbb
xchg
jno
xchg
fstpl
scas
mov
jbe
sub
aad
mov
inc
cld
icebp
ja,pt
jno
inc
clc
pusha
ljmp
and
xchg
xchg
ljmp
repnz
jge
aas
mov
mov
jge
push
push
gs
popa
sub
mov
inc
pop
ret
mov
push
mov
data16
xlat
sub
arpl
inc
mov
inc
jp
add
sti
cltd
mov
clc
ja
mov
sbb
mov
jp
mov
cwtl
test
or
call
xchg
pusha
sub
adc
xchg
jmp
pop
shlb
lods
xchg
push
mov
jne
xor
dec
ljmp
add
cs
push
fdivrs
out
mov
repnz
fidivrl
sbb
xadd
mov
mov
cmp
shl
mov
lock
xchg
pop
xchg
gs
adc
repz
movsb
stos
fists
adc
cmc
pop
cltd
pop
push
stos
je
mov
mov
inc
cld
xor
cmp
loopne
jb
lahf
adc
pop
inc
insl
cmpsl
divb
xlat
movsl
icebp
lods
repz
flds
imull
pusha
and
test
mov
inc
mov
and
leave
clc
mov
test
pop
out
inc
aaa
bound
hlt
icebp
mov
imul
dec
scas
jb
jo
pop
push
out
loope
test
dec
mov
leave
xor
dec
lcall
jbe
orps
add
sub
pop
pop
inc
scas
sahf
jnp
out
adc
sbb
add
pop
push
push
mov
shrl
inc
cmc
mov
mov
test
mov
outsb
fidivl
aam
xchg
xchg
jne
stos
xchg
fdivrs
and
mov
gs
cmp
jb
pop
lret
movsl
popa
jge
cmpsb
ss
lea
rcrl
aad
popf
int3
pop
and
adc
add
push
mov
sbb
mov
sub
sahf
shll
sti
cli
fstl
shlb
mov
mov
sti
arpl
shll
sti
leave
cmc
orl
adcb
adc
xor
pop
and
mov
dec
jg
enter
lock
sbb
mov
cld
jl
fnstenv
sbb
test
arpl
xorb
mov
std
ret
pushf
pop
adc
out
push
fstpl
mov
popf
ljmp
movsb
fstps
int
mov
shlb
pusha
int3
pop
cmp
lcall
inc
les
xchg
imul
nop
adc
add
loope
sarl
sarl
std
sub
sub
cmp
xor
mov
test
ss
in
lahf
leave
ret
fstpt
dec
push
in
popl
pusha
push
inc
andb
mov
inc
and
rclb
xchg
xchg
mov
mov
fistps
lahf
mov
push
add
in
int3
mov
out
into
mov
mov
int
int3
lods
cmovno
dec
cs
xor
xorl
stos
mov
sbb
dec
cli
pop
ss
jns
or
push
jb
add
bound
daa
mov
hlt
jle
mov
mov
push
xchg
bound
bound
xchg
hlt
mov
mov
in
ret
in
xlat
sbb
popf
pop
int
shll
in
icebp
pushaw
jmp
gs
inc
ss
fsubs
out
pushf
adc
shrb
ret
sbb
jg
cmp
movsl
sub
aad
popaw
and
mov
rcrl
rorl
mov
push
mov
in
bound
push
xlat
icebp
sti
or
push
sbb
inc
mov
push
mov
loopne
pop
dec
jnp
sub
out
aam
mov
imul
sbb
cli
out
jb
jb
xchg
sub
adc
stc
enter
cmpb
mov
jge
cmpsb
add
xor
jne
and
jbe
and
out
cmp
mov
enter
mov
mov
js
bound
div
int3
mov
push
push
xchg
jae
push
sub
int3
sub
mov
cmp
test
orl
or
sahf
inc
mov
mov
or
test
addr16
pop
out
ret
cmp
popf
gs
aaa
fisubrs
and
cltd
pop
orb
ret
loop
jl
xchg
fsubl
pop
cmp
mov
popf
in
dec
inc
dec
fdivr
xchg
dec
cmp
add
int3
inc
dec
pushf
in
in
cmpsl
sub
ljmp
add
sbbb
dec
cwtl
mov
sub
bound
data16
inc
shll
mov
rclb
mov
cmpsl
je
gs
int
jp
out
nop
add
xchg
or
rcrl
xchg
pop
push
cmp
imul
out
pop
imul
in
fisttpl
mov
xor
negb
push
mov
ja
cmpsb
or
fdivrp
pop
xchg
cmc
inc
mov
ficoml
pusha
in
inc
aaa
pop
into
xor
lods
inc
cmp
pusha
mov
mov
jge
ljmp
xchg
cmp
cli
xchg
xlat
pop
lahf
hlt
sub
lds
into
inc
ret
fcomps
in
xor
pop
fnstsw
xor
scas
dec
leave
dec
sbbb
pop
ljmp
jl
mov
aad
sbb
push
mov
xor
add
push
push
jns
inc
add
notb
push
cmp
pusha
repz
outsb
imul
aas
sub
add
insb
xor
or
shr
add
and
push
cltd
insb
cmp
insb
test
push
shlb
jns
jecxz
lods
aam
xchg
dec
icebp
outsb
mov
lods
sub
and
jns
push
pop
rcr
add
dec
sbb
rcrl
push
mov
push
movd
push
loopne
out
pop
xchg
pushf
pop
enter
add
lahf
pusha
mov
jo
jo
lret
pop
pop
insl
leave
cs
cs
jecxz
clc
mov
int3
add
adc
call
ss
mov
fs
mov
shlb
xor
in
out
jae
sbb
cli
cs
in
rolb
jg
mov
add
or
lock
mov
mov
mov
dec
lock
lds
or
movntq
sbb
mov
pop
das
sbb
jbe
insb
in
lea
scas
mov
inc
xor
pushf
dec
nop
push
rcr
popf
fisubrs
lods
ret
neg
jg
lea
loope
jo
xchg
outsl
cld
mov
sbb
ficompl
popa
shr
mov
ret
xor
dec
ret
cli
jge
into
mov
mov
mov
xchg
dec
jno
xchg
push
push
into
outsb
add
xor
test
out
add
out
or
das
xchg
sbb
xorb
mov
arpl
xor
add
shlb
cltd
leave
push
insl
outsb
sub
jge
lea
or
lret
lock
insb
inc
pop
xchg
jae
popf
stc
adc
in
xor
mov
leave
lock
shll
xchg
cmp
aam
mov
scas
push
movsl
movsl
out
mov
and
jle
push
push
int3
stc
jmp
loop
sbb
or
int3
shr
ja
lea
mov
out
xor
fidivl
add
in
pop
ds
insl
ss
aas
clc
fisubrl
decb
mov
lds
setp
jecxz
add
arpl
inc
dec
add
hlt
mov
movsl
jge
push
mov
fidivs
outsl
pop
mov
mov
push
dec
fidivrl
into
mov
stos
jle
shrb
out
mov
cli
mov
in
fisubs
mov
sbb
mov
fdivrs
and
mov
add
loopne
test
stc
cmp
sarl
sub
mov
out
lds
in
mov
mov
sbb
scas
sbbl
add
movsl
in
mov
jne
xchg
dec
cmp
jp
push
push
enter
sub
cmp
xchg
mov
outsb
xchg
jmp
adc
movsl
lock
xchg
dec
call
stos
leave
sub
xchg
push
cld
fstl
cmp
fsubl
pop
adcl
add
mov
test
xchg
imul
loop
inc
fnsave
dec
stos
in
inc
lcall
mov
leave
xchg
jmp
fbld
jle
dec
or
ja
ss
cmp
and
jbe
hlt
test
push
sarl
cmp
cmp
and
pop
pop
fmul
fldcw
xchg
sbb
sbb
cmp
pop
loop
imul
addr16
es
jae
stos
outsl
movsl
inc
dec
xchg
push
stos
push
inc
test
mov
jecxz
mov
mov
arpl
in
jb
or
test
insb
fbstp
lea
xchg
ja
or
ds
outsb
pop
std
or
popa
add
jmp
test
mov
and
mov
or
lock
dec
inc
andb
sbbb
push
test
sub
pop
mov
rcl
inc
cmp
lahf
jg
fstpt
jbe
jns
clc
cwtl
mov
insl
mov
jno
add
sbb
jne,pt
sti
mov
mov
cld
xor
lcall
ja
cmpsb
xchg
pop
push
aad
in
mov
into
fs
pop
into
mov
pmulhuw
pop
sub
sbb
xchg
movsl
sahf
mov
pop
xor
in
jl
push
lret
fdivs
xor
push
dec
ss
repnz
pop
jmp
ds
lcall
mov
fisubs
iret
xor
push
ja
ret
or
sarl
popf
xor
cli
cwtl
or
or
adc
xchg
mov
jp
ds
push
repnz
jp
cmp
jmp
gs
xchg
and
sahf
aam
inc
xchg
mov
mov
fstpl
mov
mov
and
push
je
sub
pop
xlat
xor
outsl
daa
mov
pushf
bnd
mov
in
loop
cld
sub
mov
loop
sub
mov
stos
dec
imul
push
rcrb
lcall
dec
mov
or
pop
insl
mov
mov
push
dec
mov
dec
popf
or
jp
cld
cmpsl
add
adc
dec
sub
inc
sub
pop
and
popa
pop
hlt
sti
ds
fisubrl
sbb
jge
out
ret
popa
repnz
daa
push
lret
lods
xchg
mov
test
or
call
js
jne
jmp
mov
mov
fsubrs
ds
fs
mov
jge
or
pop
int3
xor
sub
lods
aad
cli
mov
pushf
cmp
ds
pusha
mov
ja
xlat
add
fs
iret
xchg
loope
adc
pop
js
pop
adc
lcall
cmpsl
insl
sub
jl
xlat
and
inc
xor
sub
jmp
ror
mov
jmp
cmp
repnz
xchg
mov
dec
push
sbb
jno
xor
test
in
dec
addr16
rcll
icebp
hlt
test
daa
repz
cmp
sbb
rcrb
xor
adc
lds
jnp
ss
mov
rolb
mov
das
pop
stos
sti
sub
xchg
fldcw
cltd
enter
leave
mov
adc
push
jns
cmp
daa
dec
mov
call
mov
or
cmp
sub
mov
mov
out
push
movb
stc
xchg
insb
push
lds
outsb
lds
inc
adc
cmc
ss
insb
xor
pop
in
adc
xchg
in
and
icebp
xchg
movsb
repnz
lds
clc
add
ficompl
loopne
into
sbb
jne
bound
mov
mov
push
or
sbb
dec
push
loope
xchg
out
ss
xchg
xor
arpl
int3
sbb
in
add
cwtl
push
stos
in
dec
lret
out
es
mov
fisttps
pop
repz
pop
popa
jae
sbb
mov
stos
js
cmp
sub
and
lods
leave
push
daa
mov
fldt
imul
xchg
cmpsb
dec
imul
xor
inc
jmp
push
fnsave
push
cld
icebp
cli
mov
iret
arpl
sarl
adcl
adc
gs
outsb
mov
imul
jmp
les
ds
out
mov
and
mov
xor
jbe
inc
inc
jb
js
xchg
sarb
in
jb
sbb
bnd
pop
push
in
js
sbb
mov
jb
jg
xchg
in
add
and
aad
lods
rep
into
dec
mov
mov
jnp
push
bound
jno
mov
sbb
cmc
mov
jae
pop
mov
cmp
xchg
jecxz
sub
sbb
in
nop
sub
inc
jmp
and
fld
and
cwtl
adc
pmullw
rcrl
inc
ja
mov
ret
dec
and
testl
arpl
into
mov
loop
push
pop
mov
popf
cli
xor
sti
push
rcll
cmp
rorb
sub
stc
mov
stc
arpl
or
cmpb
pop
mov
pop
shll
daa
lods
pusha
flds
mov
sbb
sub
mov
push
pop
call
cmp
repz
out
adc
sbb
in
iret
or
test
cli
or
jmp
mov
pop
fisttpl
mov
cmp
lods
mov
shrb
iret
jecxz
jne
popf
or
popa
je
andl
in
xchg
mov
adc
aaa
fdivrs
jb
and
mov
xchg
mov
jmp
fdivl
cmp
repz
fistps
loop
pop
sub
fstps
popf
cltd
inc
sub
lds
and
cmpsb
pushf
sbb
jbe
jl
inc
nop
imul
adc
out
loope
jno
leave
pop
jecxz
mov
insb
popl
inc
shrl
mov
cld
lods
jne
adc
fwait
dec
push
inc
test
imul
dec
cmp
adc
or
aaa
outsl
xchg
insb
pop
jle
and
sbb
popf
in
xlat
fisttps
push
push
lcall
pop
cmp
cmc
bound
xchg
and
inc
or
push
fs
lea
sub
or
mov
inc
sarl
sbb
cmc
cmp
daa
int3
mov
enter
cmpsb
xlat
or
jmp
fbld
sub
pop
iret
mov
cld
out
sub
add
cmp
pop
jmp
xchg
sbb
sbb
insl
cs
jecxz
adc
add
cmp
xor
aas
enter
xor
outsl
out
push
in
add
xchg
pop
pop
lret
cmc
mov
pop
push
mov
cmp
lahf
or
add
add
dec
and
ret
adc
xchg
inc
mov
push
stos
inc
cmp
and
xchg
adc
dec
enter
push
enter
shlb
sub
loopne
cmp
jae
add
mov
xchg
sbb
notl
int3
fs
jbe
mov
and
pop
pushf
iret
jl
fidivl
js
xchg
dec
insb
jbe
cs
sti
jno
je
into
rorl
cmpsl
cmp
test
dec
and
jmp
pop
inc
movsb
fmuls
int
mov
sbb
or
push
push
pop
mov
pop
fiaddl
dec
xor
inc
scas
xchg
push
add
sbb
cmc
jmp
movsl
adc
xchg
inc
fcomi
inc
adc
xchg
stos
aaa
push
pop
jnp
out
call
cmp
fnstcw
cmp
lahf
jbe
das
outsl
cld
inc
ficompl
scas
sar
mov
push
sbb
pop
jne
xlat
cs
repz
xor
push
jbe
sub
popa
je
mov
mov
adc
clc
sbbl
and
sub
inc
and
mov
enter
call
push
pop
fwait
pop
std
mov
or
notl
fdivr
outsb
je
mov
out
or
or
mov
mov
push
movsb
mov
fisttpll
push
mov
mov
xchg
xor
pop
mov
sub
sbb
xor
push
mov
mov
dec
add
test
clc
and
adc
or
and
dec
or
sbb
adc
pop
sbb
and
cltd
ret
pusha
inc
mov
jo
scas
push
xchg
or
pop
or
aas
xchg
ficoms
push
sahf
hlt
in
pop
dec
sbb
into
inc
jb
cmp
add
adc
dec
rorb
scas
xor
push
sbb
test
das
int3
adcl
cmp
push
in
test
dec
lret
and
sti
out
ss
out
mov
jo
mov
sub
icebp
fdivrl
add
rcll
ss
ljmp
inc
and
or
iret
sti
or
cmpsl
imull
or
fildl
shlb
leave
adc
jge
push
rolb
cli
xchg
xor
xor
add
sti
inc
xchg
rorb
repz
cs
sbb
jl
pusha
mov
xlat
sub
or
orl
lock
sub
and
hlt
sub
push
les
scas
mov
or
inc
cmp
add
or
out
and
ret
inc
mov
fmul
daa
xchg
mov
mov
or
jno
cld
scas
mov
add
and
cmp
fwait
inc
add
orl
dec
mov
cmpsb
dec
orb
je
sub
cmp
outsb
push
jmp
ljmp
add
fmulp
shrb
mov
push
jo
push
add
jns
ret
push
pop
jp
fs
lea
hlt
scas
or
sarb
in
sti
daa
xchg
jg
xchg
dec
aad
ss
hlt
sbb
cmp
xchg
cmp
insb
inc
xchg
sarb
cli
dec
or
pop
xchg
and
or
lcall
mov
xchg
mov
and
into
pop
push
add
xchg
imul
adc
push
dec
push
lret
loop
push
push
push
sub
mov
xlat
ret
mov
sub
adc
and
aas
inc
ljmp
fs
cmp
nop
rclb
jno
popa
fldenv
inc
mov
xchg
aam
push
mov
or
imul
mov
popf
cmp
mov
pop
push
jle
mov
addl
add
test
sub
xchg
loopne
jno
loopne
inc
adc
or
mov
adc
cmp
add
push
push
js
arpl
cmp
aas
inc
push
cmp
mov
inc
xor
outsl
out
pushf
shl
push
and
dec
lcall
dec
cmp
add
jl
cwtl
les
push
mov
push
jg
addr16
mov
and
inc
aaa
pop
shlb
or
sbb
dec
leave
dec
iret
xor
scas
mov
out
cmp
adc
test
cmp
addr16
jo
mov
dec
test
aas
add
daa
fcoml
sti
notl
lret
cmovg
lods
lods
xlat
iret
jno
lea
das
test
rcr
std
icebp
fadds
nop
xor
daa
pop
cld
mov
insl
adc
cmp
stos
mov
add
pop
push
cs
es
inc
push
ljmp
imul
mov
imul
jecxz
mov
sbb
bound
arpl
pop
inc
mov
icebp
xlat
stc
xor
xchg
jno
pusha
inc
repz
call
in
jle
scas
cs
and
inc
dec
addr16
dec
mov
cmp
or
std
mov
pusha
and
les
std
fwait
push
sub
stos
cmpsl
arpl
sbb
stos
lock
push
and
pop
dec
inc
xchg
or
add
shr
pop
xor
movsb
mov
nop
xchg
or
cmp
cmp
test
shll
adc
cli
inc
and
adc
sbb
rclb
mov
xchg
ja
lcall
mov
inc
jbe
test
pop
dec
pop
add
pop
mov
cmp
push
testl
or
int
xor
jae
push
mov
sbb
dec
sub
shll
mov
mov
lods
std
out
addr16
mov
out
popa
ljmp
test
in
adc
mov
xchg
test
icebp
adc
mov
pop
pop
pop
or
stos
out
cmp
cld
sub
lea
sbb
fnstcw
daa
lods
std
or
xor
inc
sub
add
pusha
mov
push
sbb
or
mov
loope
stos
dec
cmp
or
push
fildl
push
mov
jg
loop
imul
mov
cmc
fld
jle
filds
orl
push
out
icebp
iret
pop
mov
sub
xor
iret
xchg
cmpsb
add
jbe
push
jecxz
daa
icebp
mov
jno
dec
pop
pop
fisubl
dec
xchg
loope
cmp
fstps
rcrl
cwtl
add
lea
mov
cmpsl
and
pop
and
or
inc
fildll
scas
jno
sbb
dec
xor
nop
mov
lds
nop
mov
faddl
add
mov
sbb
add
add
aaa
pop
stos
mull
sbb
or
shll
mov
aaa
lock
popa
rol
int3
jno
dec
cmp
aad
mov
pop
lods
xchg
cld
nop
iret
and
pop
jnp
push
xchg
jle
iret
cs
mov
test
hlt
cmp
jnp
mov
stc
pop
pop
in
sbb
jg
das
mov
xor
out
mov
cli
cmc
scas
jnp
hlt
sub
mov
add
lea
mov
xor
js
push
fstpt
add
sarl
adc
pop
bound
mov
int
pop
shll
pop
fwait
mov
and
push
sarb
fnstcw
jne
gs
xchg
shll
mov
and
add
mov
sbb
sub
js
mov
cmpsl
mov
in
push
cltd
sbb
dec
rcr
fcomps
ret
mov
mov
arpl
clc
out
cmpsl
dec
inc
inc
sbb
ljmp
jle
jnp
lods
cmp
mov
iret
les
mov
dec
cmp
pop
bound
icebp
xor
nop
xor
shlb
jecxz
je
in
jle
scas
adc
push
scas
pop
ja
or
arpl
int
add
test
pop
stc
mov
lret
push
inc
push
adc
mov
push
mov
cmp
sbb
jp
xchg
cmp
and
fnstcw
scas
push
je
pusha
addb
mov
insb
popa
jge
scas
int
xchg
fstl
jg
rcrb
lods
xor
xchg
xchg
or
sbb
shrl
jp
inc
add
pop
out
test
xchg
fbstp
decb
aam
adc
xchg
push
out
and
mov
push
mov
mov
loopne
lcall
or
pop
int3
pop
test
mov
icebp
scas
out
push
loopne
xlat
xchg
pop
push
addl
sub
pop
insl
sub
push
add
lahf
orb
mov
cwtl
and
add
rolb
and
xchg
test
adc
adc
push
add
push
add
add
div
sbb
add
add
dec
add
mov
or
xchg
and
enter
mov
xor
push
inc
hlt
inc
add
lock
adc
adc
add
add
jae
or
subb
ret
adc
push
add
inc
rclb
adcb
pop
add
xchg
push
xor
nop
add
nop
inc
add
test
push
adc
into
and
add
cwtl
add
popa
or
xor
xchg
cmpsl
mov
cwtl
push
push
mov
clc
dec
enter
daa
jo
add
mov
and
adc
sti
movsb
xor
mov
mov
addb
mov
ret
adcb
les
dec
adc
cmpsb
into
xor
repnz
sub
mov
or
adc
test
xchg
and
push
cmpsl
sahf
scas
xchg
adc
xor
adc
ret
sub
call
or
and
push
sub
push
push
mov
test
int
push
and
mov
fs
mov
mov
dec
push
inc
lcall
inc
fwait
adc
or
dec
lds
jns
addr16
test
dec
dec
push
jl
push
mov
dec
adc
add
lds
dec
enter
popa
cwtl
mov
mov
push
mov
push
subl
mov
pop
or
push
adc
pop
mov
adc
cmpsb
bound
daa
add
cmp
orb
in
dec
mov
pop
or
ss
inc
sub
and
test
and
aad
orb
test
push
xor
or
push
dec
imul
adc
and
push
pop
repz
adcb
rclb
inc
dec
decb
xchg
adc
loop
dec
pop
cmp
dec
and
add
inc
adc
push
pop
mov
movsl
aad
adc
mov
icebp
and
cmp
ret
scas
enter
cwtl
lcall
push
xor
cli
lahf
jp
leave
enter
in
pop
push
aam
mov
lahf
adc
or
xlat
add
and
shll
sahf
cmp
icebp
negl
push
cld
dec
dec
ror
dec
shl
cmp
pop
adc
inc
dec
dec
mov
jb
aad
gs
mov
dec
mov
jg
mov
mov
mov
add
lret
out
add
or
outsb
out
je
xorb
sbb
inc
daa
fcoml
aas
dec
icebp
mov
in
mov
dec
push
imul
jg
jmp
fcompl
mov
add
pop
dec
jl
ret
loop
aad
fwait
mov
es
fisubrl
out
cmc
imul
fsubs
stos
loope
cmc
sub
adc
xchg
cmpl
les
lret
js
cmp
insl
bound
cmc
rorb
outsb
jbe
out
aad
loop
lods
das
push
lock
loopne
or
movsl
jb
aaa
out
jnp
jb
push
adc
pop
xlat
pop
push
iret
cltd
dec
gs
push
cli
xor
pop
push
jnp
jg
mov
jmp
frstor
jbe
adc
cmp
xchg
sub
test
adc
hlt
hlt
mov
data16
scas
mov
pop
or
std
dec
xchg
movsl
loopne
cs
pop
push
cmc
int
xor
mov
pop
inc
sbb
mov
jp
movsl
mov
outsb
or
push
divb
movl
in
stos
stos
stos
jb
pop
inc
lock
mov
or
out
mov
movsl
pop
stos
or
push
push
iret
add
sti
sub
mov
dec
adc
xor
mov
out
mov
test
int
stc
daa
cmp
jmp
cmp
ret
rorb
adc
repz
mov
mov
js
test
stc
subl
out
movsb
jne
jp
sti
cmp
pop
sbb
mov
xchg
aas
inc
cmp
xchg
push
jl
sbb
jae
stos
xor
in
fwait
insb
fcoms
mov
sbb
stc
arpl
mov
je
pop
inc
sbb
into
push
cmp
mov
sub
jae
sti
addr16
into
daa
xchg
mov
xor
dec
mov
lods
or
mov
cmpsl
repnz
andl
xchg
push
cld
loope
dec
fimuls
cmpsl
jge
shlb
xchg
adc
shlb
test
movsl
jge
add
aam
ss
sbb
movsb
xchg
ds
adc
mov
push
inc
sbbl
imulb
popf
inc
test
sbb
aam
mov
cli
pushf
ret
ja
cli
enter
jge
xlat
and
insb
and
sub
hlt
cmpsl
mov
dec
add
xor
mov
aam
sub
add
int3
mov
sub
jns
int3
jno
ljmp
mov
dec
andl
pop
test
pop
jb
out
push
rcr
rcl
and
enter
pop
rcrb
les
push
dec
shll
mov
std
xchg
cmp
notl
add
std
pop
insl
subb
rcl
cmp
sub
mov
xor
inc
loope
lea
jae
shll
leave
gs
into
and
mov
repnz
xchg
mov
xchg
xchg
mov
jecxz
aam
push
dec
jle
in
jecxz,pt
mov
add
pop
xchg
movsb
adc
pop
pop
icebp
outsb
bound
sbb
adc
repz
jge
aad
das
and
cs
lcall
sub
aam
aas
adc
mov
cmovo
sub
pop
pusha
cmp
and
gs
shrb
out
ds
jg
adc
adc
xor
mov
fdivs
cltd
inc
clc
adc
add
mov
sahf
ljmp
ljmp
add
insb
fisubrl
aaa
jns
inc
sbb
push
fxch
clc
iret
sub
lods
cli
ret
jno
xchg
jno
loop
in
mov
xchg
mov
shll
repnz
int3
and
push
adc
sbb
shl
scas
push
add
imul
popa
push
mov
adc
push
dec
mov
jle
cmpsb
inc
sub
sar
faddl
ja
clc
sarl
inc
xchg
jecxz
mov
adc
mov
pop
sub
jg
adc
xchg
jne
inc
jbe
mov
inc
mov
sbb
dec
sbb
test
in
or
push
xor
sub
mov
and
cs
add
dec
dec
cmp
imul
in
adc
dec
push
mov
test
leave
pop
mov
or
jnp
shlb
push
jno
data16
neg
pop
mov
je
inc
sub
jne,pt
sti
mov
xchg
lret
scas
mov
sbb
data16
or
loop
out
aad
xchg
xchg
leave
call
inc
ljmp
mov
incl
out
outsl
jl
insl
xlat
adc
test
and
cmpl
lds
lret
scas
pushf
call
fistps
jmp
mov
data16
jbe
jmp
xchg
push
pop
call
sarb
jl
dec
inc
stos
xchg
hlt
sbb
push
ret
cmp
mov
pop
push
scas
lahf
mov
push
pop
mov
mov
jne
loope
pop
imul
outsb
and
fcmovb
sbb
cmpsb
mov
cltd
iret
cmp
pop
and
loop
xchg
cmc
nop
push
dec
jbe
jno
loopne
test
jge
dec
popf
push
and
or
imul
test
add
xchg
push
rorl
mov
jo
loopne
xlat
in
add
dec
das
sbb
xchg
negb
int
pop
pop
pop
testl
popa
filds
imul
jecxz
mov
push
fisubl
insb
mov
jmp
cwtl
lods
sbb
pop
adc
jl
lahf
jne
fcmovnu
push
sbb
mov
lret
mov
cmpsl
and
nop
aam
xchg
scas
pop
shll
push
sbb
mov
xchg
outsl
or
fidivs
jnp
std
xchg
clc
and
mov
jle
in
xchg
data16
scas
sbbl
push
push
shrb
sub
mov
out
aad
icebp
repnz
xor
mov
inc
lds
and
popf
jmp
idivl
bound
ret
aas
add
cmpsb
or
add
jo
adcb
cmp
popf
sti
out
sub
pushf
add
adc
xchg
jmp
mov
loope
popa
adc
sbb
mov
sub
inc
mov
jne
mov
cmc
pop
xchg
sarl
orl
push
cmp
mov
jae
xor
jmp
leave
or
mov
hlt
fcmovnbe
mov
sti
jo
cltd
jge
popf
pushf
push
xor
xor
mov
jmp
out
jmp
test
pusha
out
arpl
sbb
cwtl
lods
insb
lea
std
repnz
add
gs
pop
test
insb
iret
in
adc
pop
adc
push
mov
into
lret
cmp
fsubrl
testb
aas
add
adc
stos
adc
push
and
sar
ldmxcsr
mov
adc
fcoms
add
mov
add
inc
stc
ret
add
imul
push
sbb
jl
insb
aad
jo
mov
stc
lds
mov
aam
sub
mov
cld
scas
mov
imul
adc
xor
xor
leave
movsb
jecxz
xchg
push
mov
dec
cmp
mov
mov
xor
flds
pop
pop
ja
mov
or
jp
mov
push
notb
xchg
and
rolb
movsb
xchg
inc
int
movsl
and
cld
add
test
cmp
jge
orl
repz
sub
mov
jmp
pop
adc
mov
xchg
inc
daa
shlb
and
add
jl
jg
lds
cltd
cmp
pushf
enter
cs
jmp
xchg
xchg
pop
sbb
jle
hlt
dec
sti
add
sbb
sti
lahf
cmp
cmpsl
inc
add
jecxz
aaa
not
test
push
jp
mov
test
xchg
push
arpl
mov
ljmp
mov
testb
and
push
mov
adc
mov
mov
xorb
lods
inc
shrl
add
sbb
aad
jmp
cmp
and
sub
insb
movsl
aaa
cmpsb
add
sbb
pop
shlb
sub
hlt
add
into
repz
cmc
imul
mov
push
push
xlat
or
and
xor
jle
or
adc
gs
shll
not
dec
stos
xlat
or
stos
shrb
mov
mov
push
jge
rorb
test
adcl
mov
and
cmc
cmp
cmp
jne
loop
xorb
pop
sub
jg
add
call
fisttpl
pop
ret
jle
inc
gs
pop
aad
adcl
lea
cmpb
mov
mov
out
sbb
fcmovnu
pop
fidivl
aaa
leave
ret
sbb
push
sbb
mov
rcr
pop
adc
aas
jo
mov
sbbb
cmp
or
scas
mov
cmp
arpl
mov
aam
inc
outsl
jns
inc
test
mov
adc
cld
mov
mov
adc
push
mov
ret
mov
lds
pop
fbld
push
xlat
in
pusha
stos
mov
xchg
sbb
jbe
in
fnstsw
push
push
xor
into
cmp
or
xor
lcall
mov
push
movb
lods
stc
icebp
cwtl
sub
mov
dec
sbb
lcall
out
mov
divl
mov
sub
dec
jno
pop
cmp
ljmp
imull
icebp
dec
lret
xor
mov
in
sbb
into
sub
xor
fwait
popa
in
popa
xor
add
mov
mov
lcall
fucomi
mov
icebp
lahf
jne
xchg
lods
shlb
cmp
aaa
or
lcall
pop
mov
lahf
mov
cmpsl
mov
in
aas
repnz
sbbb
mov
fstpt
adc
cmp
mov
lods
fwait
adc
into
call
adc
ffree
pop
decl
push
das
cmc
pop
xchg
pop
push
dec
pusha
fdivs
sub
icebp
in
sub
iret
xchg
popa
pop
sti
scas
fnstenv
cmpsb
cmp
mov
add
notl
push
in
cmp
movsb
jbe
xchg
jae
out
lds
push
pop
inc
lds
adc
push
push
adc
pop
lds
cmp
ret
push
cmp
dec
sub
xchg
ja
fsubr
mov
movsb
adc
jle
aam
call
jns
movsb
xchg
test
jecxz
sub
sub
mov
sub
shll
lds
daa
mov
into
cmp
jb
jecxz
mov
mov
pop
xor
leave
pop
in
std
adc
insb
mov
pop
sbb
sub
mov
outsl
aaa
scas
je
adc
cld
aaa
jle
mov
cmp
sub
push
out
inc
ljmp
mov
add
addr16
sub
inc
sub
cmp
sbb
lret
popa
sarb
jle
in
mov
iret
mov
cmp
or
dec
imul
adc
ret
fdivr
dec
xchg
dec
cmp
fbld
and
mov
jne
je
mov
movsl
add
ret
push
shrl
shlb
and
imul
jo
mov
pop
cmpsb
test
cmp
ja
out
mov
inc
je
pop
rcll
je
xor
or
push
push
in
mov
movsl
adc
daa
aas
into
sub
icebp
enter
jmp
sti
sbb
jge
push
dec
ret
popf
mov
jecxz
xlat
xchg
lds
cmp
xor
sarl
mov
loop
jne
lea
jge
adc
aad
repz
scas
test
mov
pop
and
fstpt
stos
adc
mov
scas
out
jns
ficompl
mov
adc
push
js
adc
sahf
lds
test
add
jl
fisttpll
push
mulb
pop
xchg
push
xchg
in
pop
jp
push
push
jecxz
push
lret
pop
mov
push
mov
jns
pop
lock
jne
imul
push
mov
jecxz
inc
and
add
fadds
repz
ret
popf
enter
cwtl
cmp
or
cmp
out
jnp
adc
loop
xor
insl
cmc
xor
mov
icebp
jg
cmp
out
sub
sbb
in
pcmpgtd
aad
xchg
mov
repz
sub
lea
mov
aam
test
jecxz
xchg
loope
add
mov
cmp
lcall
paddsw
repz
xchg
sub
pavgb
fprem
adc
lods
sbb
sarl
mov
adc
call
scas
add
cmp
adc
test
into
rclb
out
mov
insl
cld
lea
or
dec
arpl
or
adc
jp
xchg
lock
cmp
xchg
in
push
or
jne
xor
xor
notb
inc
mov
or
std
shl
inc
cli
jo
dec
or
xor
push
sub
inc
fldenv
fidivrs
mov
mov
das
int
lret
pop
inc
cmp
or
dec
mov
stc
inc
les
inc
pop
or
test
test
xor
daa
clc
jecxz
aas
xor
rcrb
repnz
frstpm(287
aam
insb
mov
sbb
punpcklwd
cmp
lret
sub
cltd
ljmp
xchg
mov
mov
mov
std
jp
mov
mov
lret
jmp
insl
pop
stos
sahf
shlb
push
dec
adc
pop
sub
xor
xrelease
out
pop
js
test
dec
inc
shll
mov
cmp
iret
or
loop
dec
mov
push
frstor
dec
pop
idivl
iret
movsb
mov
sub
lret
cmp
fsubp
xchg
ficoml
xor
imul
jnp
add
xor
imul
icebp
mov
daa
push
pop
mov
mov
icebp
xchg
jnp
in
pop
add
xchg
fdivrl
mov
negl
icebp
push
int3
mov
dec
and
call
neg
popf
gs
jno
test
gs
jbe
adc
aas
or
jle
pop
jp
ja
jmp
xor
pop
insl
ret
mov
xchg
fstpl
ficomps
jmp
mov
call
mov
xchg
push
cmp
pop
xor
call
push
jnp
pop
std
hlt
cmc
mov
mov
icebp
inc
mov
mov
mov
test
and
jnp
xor
sub
mov
arpl
ret
add
pop
popa
test
sub
push
jbe
cmpsl
sbb
or
add
lds
test
and
mov
add
iret
jecxz
or
call
dec
lods
cmpsb
repz
out
rol
aas
jno
jb
mov
jecxz
mov
fdivl
inc
sbbl
hlt
push
push
jmp
xchg
dec
xlat
scas
jo
sbb
pop
in
mov
hlt
xchg
pop
icebp
xchg
hlt
jp
lcall
call
mov
jl
mov
mov
stc
in
fucomip
add
pop
and
fnstcw
and
adc
or
out
cld
jnp
cmp
mov
int3
scas
mov
gs
cli
cmpsl
adc
ss
clc
out
arpl
sub
xor
fwait
mov
into
add
mov
sub
loopne
jle
mov
pop
adc
lcall
inc
jb
and
xor
mov
dec
mov
aas
xor
test
outsl
aam
mov
std
lock
lods
sbb
out
and
mov
xorl
sbb
aad
das
daa
stos
aaa
mov
xchg
jmp
call
cmp
mov
aaa
pop
push
sub
clc
mov
mov
dec
lret
mov
mov
cmp
push
jae
test
sbb
sub
jmp
fldt
inc
pop
dec
xchg
or
test
in
mov
jno
fstl
clc
pop
fwait
sti
ret
repz
mov
cwtl
lret
outsl
insl
out
cmpsl
add
adc
shll
psllq
and
mov
mov
cwtl
imul
mov
jge
adc
inc
in
call
pop
sbb
push
jns
loope
pop
test
js
movsl
jb
sub
and
aad
imul
lret
sbb
stos
lds
scas
fwait
sbb
mov
jp
adc
lcall
cld
pusha
fldln2
aas
out
aas
jl
jg
insl
jb
xor
jns
out
pop
jbe
mov
and
into
pop
xchg
push
loope
fcompl
popa
pop
jmp
outsl
popl
in
popf
jle
cmpsl
cmpb
cmp
xchg
jno
mov
sub
cmpl
cld
dec
lcall
data16
js
jo
add
push
cmpsb
dec
mov
insl
gs
insl
xlat
mov
fstps
xor
fcoms
fcmovu
push
out
lock
int
cmpsl
outsl
lods
mov
iret
cmp
imul
fwait
cpuid
jp
repz
aaa
iret
repz
repnz
outsb
push
xchg
bound
or
mov
jbe
add
addb
int3
mov
or
mov
xor
mov
mov
mov
jp
mov
sbb
jecxz
push
push
stos
mov
aam
mov
pop
xor
inc
addr16
andl
in
into
scas
push
xchg
sub
push
add
test
movsl
pop
xlat
rcr
xlat
sbb
jb
cmp
jge
jo
cmpsl
xchg
push
or
push
mov
sahf
sti
jns
into
xor
and
outsb
dec
decb
fsub
cmp
jno
cmc
pop
push
inc
jnp
xchg
mov
push
push
cld
inc
lods
mov
inc
loope
pop
aam
jo
cmp
cmp
pop
ret
and
fdivr
int3
sub
shll
fiaddl
loop
adc
cli
inc
xchg
rorl
push
lcall
sbb
ljmp
ljmp
pop
sub
cmp
mov
fs
loope
test
pop
movsl
mov
inc
loope
mov
mov
test
loop
lcall
pop
outsl
mov
ljmp
inc
mov
pop
sub
ret
cmp
and
lock
fisttps
mov
inc
cmp
mov
cmpsb
pop
pop
jle
mov
and
sub
lods
notb
push
call
and
mov
scas
mov
pop
xchg
jno
pusha
push
cmc
loop
xchg
xchg
jbe
cmp
push
lods
mov
test
test
mov
arpl
dec
inc
mov
cmp
out
hlt
sub
mov
adc
lds
dec
sarb
stos
jne
sbb
pop
cs
les
ljmp
fcoml
xor
daa
cmp
xchg
inc
or
mov
xor
sbb
push
dec
add
jb
rolb
int
ret
mov
pushf
pop
mov
mov
xlat
pop
dec
ds
cmp
in
pop
notb
add
idivb
mov
rolb
stos
xchg
and
icebp
sub
aaa
jb
daa
call
out
jnp
mov
or
out
loopne
xor
mov
int
pusha
dec
sub
pop
popa
testl
sub
aaa
sti
imul
jmp
jp
cmpsl
sbb
arpl
jecxz
data16
in
xchg
leave
dec
pop
int
mov
jns
sub
cs
test
fs
xlat
jae
or
push
out
jle
rorb
jge
push
rorb
mov
sarb
cmpsb
icebp
add
and
clc
ret
insl
rorl
das
sub
cmp
dec
adc
cltd
mov
mov
mov
scas
cmpsl
out
aas
mov
jmp
stos
push
dec
jb
xor
cmpsl
or
or
mov
out
shl
std
imul
xor
add
shrb
orl
mov
cmp
inc
popa
jecxz
sub
dec
cltd
xchg
mov
adc
add
pop
js
cmp
sub
hlt
dec
addb
lods
test
inc
pop
into
lret
inc
mov
push
inc
scas
sahf
push
fidivrs
mov
outsl
jg
and
xor
decb
ja
mov
pusha
jo
add
ret
adc
ror
hlt
arpl
inc
fstps
mov
icebp
rolb
lods
sub
dec
divl
popf
push
adc
insb
out
add
out
insb
js
jns
cmpsb
pop
push
sbb
cmp
jmp
or
cli
inc
and
fistps
add
mov
testl
bound
decl
dec
int3
jno
rcl
insb
lods
fldcw
in
hlt
popf
jge
in
les
inc
and
mov
cmp
ret
add
cwtl
gs
xor
enter
insl
inc
out
xor
das
imul
mov
dec
jmp
outsb
outsb
loopne
fnsave
hlt
inc
pop
iret
inc
sti
fs
mov
adc
imul
push
shll
mov
and
mov
andb
int
dec
std
adc
insl
fucomi
stc
out
sti
sub
scas
mov
push
dec
aaa
mov
lea
and
add
mov
dec
bound
xchg
into
cmp
dec
maskmovq
notl
mov
xor
cs
mov
xchg
push
pop
cmp
repz
cmc
fadds
xor
rclb
push
or
or
in
out
mov
xchg
add
mov
push
push
jns
in
std
cmp
sbb
jle
ret
cwtl
or
inc
adc
xchg
push
fisubrs
sbb
mov
mov
xchg
and
or
rolb
gs
lock
daa
cmp
inc
ds
adc
dec
add
adc
shll
inc
loop
divl
inc
pop
stos
push
pop
movsb
loopne
int
adc
int
rcll
mov
cmp
or
shlb
fbstp
jns
mov
xchg
lock
mov
ret
mov
mov
cmpb
pop
mov
in
pop
cmp
xor
ds
pop
xchg
das
ljmp
ds
sbb
je
std
mov
jg
jp
icebp
movsl
sbbb
push
movl
inc
popa
loopne
clc
sti
ret
enter
aaa
aas
jnp
inc
lahf
fcmovu
cmpsl
xchg
ds
mov
mov
adc
mov
jae
dec
insl
mov
add
xor
ljmp
inc
inc
mov
mov
aas
test
aam
in
popf
dec
mov
mov
sub
inc
jne
lea
jne
adc
add
pop
outsl
decl
out
rolb
dec
sbb
push
mov
push
arpl
cmp
cmp
sub
jl
add
inc
popf
das
and
push
mov
push
arpl
shrb
jbe
jmp
xorl
lods
test
sbb
xlat
fadds
pop
jbe
cmpsb
enter
fimull
setnp
pop
mov
icebp
or
insb
aas
dec
ljmp
out
int
mov
cmpl
mov
mov
lahf
xchg
sbb
rcrl
pop
push
mov
fisubl
ret
push
div
fisubrs
ficompl
jnp
pusha
push
nop
arpl
jl
mov
cld
or
push
lret
ss
inc
sbb
push
movsb
aad
and
stos
call
push
fldl
imul
loope
pop
lods
and
jg
gs
outsl
mov
pop
sbb
adc
out
sbb
sbbl
xchg
nop
push
pop
rcrl
xor
flds
xchg
pop
inc
adc
fsubrl
pop
js
push
aad
dec
sbb
sbb
or
test
into
imul
jns
flds
aam
je
inc
test
sbb
mov
xchg
or
aad
adc
fdivr
cmp
xchg
jecxz
scas
insl
sbb
sub
cs
addr16
adc
in
test
clc
adc
sbb
lahf
push
mov
pop
pop
popa
add
jp
ret
xor
rolb
jl
add
lahf
xor
or
mov
mov
scas
mov
mov
vmovq
mov
sbb
push
cli
out
jmp
and
jle
push
adc
mov
inc
inc
cmp
push
test
sub
cld
out
ljmp
cld
push
mov
jecxz
xor
popf
xor
sbb
push
or
cmpsl
add
push
mov
push
dec
and
pop
cs
pop
shrb
jmp
leave
lahf
test
mov
inc
scas
mov
xchg
xor
push
sbbb
pop
cmp
mov
inc
xchg
push
test
mov
ds
fidivl
push
dec
jle
sbb
adc
and
out
enter
pop
std
or
xor
loopne
lret
movsl
push
cmp
adc
sbb
jo
inc
jp
fs
adc
js
daa
mov
mov
xor
push
add
xchg
pop
lcall
xor
push
scas
pop
sub
push
pop
repz
jne
mov
andb
mov
dec
mov
mov
cmp
sub
adc
or
or
fsubrl
mov
and
sub
xor
inc
pop
js
mov
inc
ficoml
pop
sbbl
leave
stc
mov
and
sti
scas
jne
rcrb
divb
clc
pop
rol
loope
or
mov
push
jne
aas
pop
dec
jo
cmp
push
aaa
jne
jle
fldl
mov
mov
in
xchg
pop
inc
mov
mov
lock
fdivr
dec
adc
or
jmp
movsb
pushf
inc
xchg
jl
xor
xchg
je
scas
jg
mov
ljmp
xchg
sbb
dec
adcl
jbe
mov
in
mov
mov
aam
popa
push
mov
xor
lret
ljmp
adc
mov
rcll
sub
cwtl
push
jl
lahf
add
adc
cmp
fistps
inc
sbb
fcoms
push
mov
std
je
stos
xchg
repz
call
into
shlb
int3
dec
js
movsb
cmp
scas
cli
out
mov
or
pop
and
popf
xchg
adc
ror
push
xchg
cmp
ficoml
adc
fmul
xor
stc
jno
adcl
jae
jecxz
int
mov
repnz
jp
test
icebp
std
repnz
push
xchg
mov
cld
mov
sbb
mov
aaa
stos
xor
es
xchg
xor
pushf
imul
or
cmp
loopne
stc
test
lret
mov
cmpl
lahf
push
or
add
and
mov
add
int3
popf
test
push
in
jmp
popf
repnz
rorl
das
shll
jle
mov
iret
inc
dec
aaa
cmc
enter
push
cli
out
sbb
jecxz
popf
cmp
in
mov
inc
mov
subb
xchg
jmp
outsl
hlt
mov
mov
sub
leave
mov
cmp
decl
jp
cmpsl
aad
fwait
inc
cltd
test
jmp
mov
imul
sub
push
mov
int3
cld
xor
xchg
les
inc
jns
mov
or
xchg
clc
scas
addr16
jnp
mov
fildll
insb
aad
or
cs
loopne
rcrl
mov
sbb
cltd
xchg
mov
mov
sti
fistpll
movsb
pop
sbb
sub
pop
or
add
push
push
lcall
push
cmp
sub
jl
rorb
out
jmp
sub
cwtl
fsts
in
rorl
ja
lret
pop
lds
scas
in
xchg
clc
mov
jp
push
cltd
dec
hlt
or
xchg
add
cmp
sub
jbe
mov
mov
fsubs
loop
xor
stos
mov
sub
inc
mov
aaa
out
mov
xchg
mov
pop
adc
pop
or
pop
and
sub
stos
xor
xchg
mov
mov
adc
jae
sub
test
mov
lods
outsb
xor
adc
or
mov
jb
adc
add
xchg
lahf
orb
fcmovnbe
test
movsb
and
lock
pop
cmp
sub
push
xor
aam
cmpl
and
jp
cmp
inc
jp
cli
xor
ffreep
pop
push
es
adc
fistl
mov
jno
sub
xor
enter
or
je
or
or
stc
xchg
pop
addr16
int3
add
jne
cld
out
pop
sarb
out
in
cmpsb
sub
mov
test
sbb
cltd
aaa
ss
jae
push
aas
inc
call
cwtl
mov
inc
cltd
jno
xlat
cmpsl
decb
add
jne
dec
outsb
test
dec
sbb
mov
cmp
dec
jnp
inc
decb
iret
divl
add
lret
ret
popf
add
xor
shrl
in
mov
imul
and
dec
ror
das
jo
dec
lahf
test
jb
xor
sbb
cmpb
adc
jo
gs
sbb
jo
push
lcall
insb
fwait
and
push
lret
mov
int
adcb
call
jns
daa
push
nop
mov
jle
jbe
or
jns
fistl
or
cs
dec
lods
scas
lret
inc
mov
mov
fdivl
les
dec
add
arpl
dec
adc
pop
daa
jge
cli
add
test
and
mov
pop
mov
jbe
push
xchg
ficoml
sub
scas
out
lret
push
mov
aad
add
scas
ljmp
xchg
adc
and
inc
lock
dec
je
jl
lods
out
icebp
pop
push
xor
loopne
pop
push
mov
mov
in
insl
jns
lret
sbb
inc
cmpsl
push
in
test
jle
xchg
mov
inc
jb
cmp
push
js
cmp
pop
pop
andl
mov
push
or
pushf
pop
cmp
inc
popl
daa
mov
orl
sbb
sbb
out
mov
jb
mov
stc
rorb
adc
inc
rolb
xchg
loop
insb
jmp
enter
push
jnp
test
jne
xchg
test
mov
dec
mov
pop
and
in
rorl
nop
add
in
dec
fldl
shlb
mov
mov
push
and
jb
icebp
sbb
hlt
cltd
add
push
rcrb
push
sbbl
mov
arpl
test
stos
notl
scas
cmpsl
hlt
cs
and
stos
mov
adc
and
xchg
push
xor
xor
scas
negl
and
xchg
add
xor
cmp
int
xchg
lods
stc
pusha
mov
mov
mov
cltd
jge
cmp
add
scas
mov
pop
cs
shrl
xchg
mov
int
xchg
mov
nop
add
push
mov
adc
cmp
adc
stc
in
cld
daa
mov
lret
call
push
xor
mov
xor
cltd
push
sbb
jnp
mov
mov
xchg
adcb
pop
nop
lcall
leave
dec
das
movb
rclb
clc
jmp
jmp
addr16
popf
leave
mov
loopne
insb
sub
shrb
jl
aad
jle
mov
es
and
push
jle
xchg
movsb
add
push
lock
int3
or
push
push
mov
or
lret
xchg
fstps
mov
ja
enter
push
add
std
jle
cmpsb
jns
push
jmp
outsl
je
sub
repz
mov
sbb
xlat
jecxz
sub
mov
nop
mov
sbb
sti
sub
xchg
fdivrl
push
shl
inc
js
in
dec
sbbl
mov
shll
inc
mov
ljmp
xor
or
fidivrl
push
inc
lahf
nop
pop
js
roll
cmpsb
in
xchg
or
xorb
inc
insl
movsl
in
and
leave
sub
inc
roll
sbb
or
sub
pop
jo
jo
je
xor
add
cmp
push
cmp
sub
outsb
xchg
mov
dec
insl
imul
sbb
imull
lret
pusha
lahf
fistpll
add
pop
rorb
popa
pminsw
test
out
lock
jge
xorl
int
ljmp
jecxz
push
push
or
mov
filds
mov
jp
scas
aas
cmpsl
repnz
jne
xlat
rorb
push
inc
adc
ret
andl
pop
pusha
sub
gs
push
mov
xchg
cmpsl
pusha
out
dec
gs
xchg
pop
xchg
pop
aam
and
mov
in
mov
add
sbb
rclb
sub
sub
cltd
adc
arpl
sub
fsubrl
leave
dec
pop
push
ljmp
mov
jnp
fistps
adc
testb
test
and
enter
int3
xor
or
sahf
xor
shlb
bound
bound
add
cltd
loope
loope
ret
mov
inc
mov
mov
sbb
jmp
shlb
into
das
out
push
ror
inc
mov
jecxz
dec
insb
mov
jnp
or
std
movsb
aad
outsb
call
pushf
adc
push
imul
outsb
arpl
push
xchg
je
js
inc
inc
jl
movsl
and
inc
mov
or
dec
shl
insb
jns
xor
popa
push
js
fwait
ljmp
dec
pop
cmpsb
xchg
in
mov
mov
aas
stos
adc
sbb
xor
dec
ds
scas
inc
xchg
xchg
pop
xchg
jo
adc
out
ret
sbb
or
dec
data16
jns
adc
dec
push
push
movsl
pop
pop
mov
and
fisubl
push
jo
test
jne
or
sbb
insb
movsl
pusha
jmp
es
add
hlt
xchg
insl
lcall
pusha
mov
cmp
lods
mov
adc
or
inc
insb
jae
loopne
dec
inc
ja
pop
and
or
daa
rolb
mov
push
push
mov
add
add
jnp
stc
cmp
fsub
jns
push
push
lcall
fstps
stos
stos
lods
cmpsb
or
out
xchg
insl
jecxz
pop
mov
dec
xchg
enter
fidivrl
sub
loopne
mov
clc
add
mov
hlt
js
mov
sti
aam
lock
dec
jp
sbb
add
jg
pop
push
in
leave
outsb
in
sub
dec
xor
lret
movsb
loopne
stc
cmp
jbe
hlt
inc
sub
dec
jb
and
sbb
int
add
lret
mov
xchg
adc
dec
lret
sbb
mov
mov
ja
mov
xlat
push
jmp
aas
scas
xor
mov
xchg
es
dec
idivb
dec
xchg
int
jb
dec
add
test
test
jge
adc
mov
jnp
xchg
adc
lret
sub
adc
pop
add
sbb
rorl
push
stc
fidivrs
icebp
out
imul
cmpb
adc
cmpl
sbb
add
adcb
jge
fstpl
jle
lahf
cmp
pop
nop
fnsave
pop
cmc
stc
repz
sub
mov
test
adcb
sub
imul
mov
inc
test
mov
pcmpgtd
pop
sbb
sub
push
mov
or
pushl
fadd
sahf
cwtl
cwtl
cmpsl
sub
dec
scas
dec
mov
pop
fidivl
lods
add
pop
mov
mov
and
dec
iret
mov
test
lret
icebp
fstps
mov
enter
xorb
push
pop
out
repz
pop
sub
jmp
dec
lret
sub
rclb
incb
adc
push
or
push
and
xchg
add
fists
in
sbb
cltd
push
outsl
aam
mov
ret
mov
cmp
push
testl
shrb
push
mov
dec
roll
repz
fidivs
mov
std
jge
and
dec
lods
mov
and
test
and
xchg
repz
xchg
test
dec
lock
leave
jecxz
mov
xchg
xor
pop
jnp
int
std
decb
pop
mov
sub
shlb
test
xchg
pop
and
int3
movsl
push
inc
sub
or
outsl
xor
aaa
sahf
mov
leave
or
sti
mov
dec
divl
mov
lret
mov
adc
jp
jp
in
adc
mov
xor
adc
inc
loopne
rclb
stc
xchg
mov
insl
daa
sub
and
lret
jnp
lahf
pop
jmp
cmpsb
jl
push
out
scas
push
dec
movsl
push
mov
jno
hlt
mov
jno
fadds
lret
lock
leave
push
push
cmp
and
cltd
xchg
jne
pop
and
ror
mov
hlt
sbb
sub
push
pusha
in
sub
push
sub
sub
sub
movsw
into
mov
add
add
rcrb
popf
cmp
mov
sbb
idivl
ljmp
in
add
call
int3
leave
add
xor
cmp
pop
mov
dec
xchg
ljmp
fdiv
pop
adc
push
dec
sbb
sbb
lret
cs
fdivrs
mov
popl
lret
aad
fpatan
nop
popf
mov
and
cmp
xchg
das
aaa
enter
mov
out
mov
std
dec
mov
icebp
testl
insl
and
inc
sub
lds
sti
dec
dec
push
cwtl
imul
cmp
add
in
les
pusha
jae
lds
sub
leave
adc
std
pop
fwait
pushf
data16
or
mov
sub
lcall
sub
jecxz
mov
sub
mov
lods
adc
mov
xchg
or
pop
nop
xchg
imul
or
lds
dec
xchg
xchg
sub
or
cmp
stos
outsb
addr16
in
cmp
je
push
and
dec
shrb
pop
lret
xlat
pop
sbb
mov
fiadds
jg
xchg
mov
xchg
sub
fnsave
dec
jns
cmp
lahf
jbe
sbb
pop
jbe
xchg
and
ret
fiaddl
and
lret
and
cltd
test
lret
sub
orb
icebp
xchg
push
sar
xor
in
outsb
addr16
cld
lods
fildll
xlat
mov
xor
push
in
inc
mov
sti
std
and
ret
aam
dec
stc
mov
in
xor
mov
mov
dec
dec
mov
jb
dec
cmpsb
mov
pop
mov
imulb
addr16
ret
add
or
stos
mov
mov
cmc
cmpsl
dec
inc
outsl
shlb
fwait
sub
push
fsubr
push
pusha
mov
push
cmp
jno
mov
in
imulb
insb
lahf
inc
mov
insw
xchg
mov
sbb
sub
add
inc
push
sbb
in
pop
paddsw
popf
xchg
add
fs
mov
bnd
sub
sbb
pop
adc
repz
lods
js
dec
cmpb
std
jno
cmpsb
adc
sti
jl
jge
sbb
andl
int3
js
dec
cwtl
sahf
cmpsl
addr16
jae
and
jp
sbb
imulb
call
dec
iret
shr
dec
cmp
int
dec
pop
mov
pop
push
jmp
out
ja
arpl
aam
mov
cmp
mov
and
cmpsb
and
or
repnz
dec
shll
paddb
sahf
scas
mov
mov
test
sti
rorb
push
xor
mov
sbb
cvtdq2ps
push
enter
jb
fdivr
dec
dec
jno
ss
sub
push
xor
jns
in
and
stos
push
xchg
xchg
rcll
cmpsb
je
sarb
jmp
or
out
je
ret
dec
sub
or
xchg
cltd
bound
inc
jbe
cmp
xchg
in
test
mov
mov
outsl
pusha
subl
cwtl
mov
hlt
ret
xchg
popf
stos
push
les
int3
cltd
pop
imul
push
insl
cmp
add
sbb
or
push
adcb
sbb
adc
pop
movsb
adc
jl
mov
cmp
loopne
pop
bound
dec
cmp
jg
mov
cmp
cmpsl
aad
dec
inc
loopne
cmp
sbb
mov
in
add
pop
js
mov
sub
cli
cmp
jno
int
cmp
pusha
stos
emms
sub
lahf
sahf
push
data16
in
shlb
stc
xor
dec
call
js
cmp
or
mov
push
sub
cmpsb
movsb
and
jne
negl
aad
in
xor
xchg
aad
inc
lods
adc
pop
in
mov
and
dec
pop
push
inc
mov
loopne
fdivrs
imul
inc
dec
jge
pop
push
push
add
inc
hlt
in
adc
sbb
sbb
xchg
or
fs
stc
mov
cmp
arpl
repz
cmp
jl
adc
mov
mov
push
mov
sub
push
inc
cmp
sub
xor
std
add
dec
xlat
or
jb
inc
jg
push
fildl
sbb
out
cmp
jl
test
xchg
push
sbb
movsl
test
push
loop
mov
and
xor
loop
jp
mov
lds
imul
adc
jb
jmp
sar
push
push
ljmp
iret
inc
push
lret
push
sub
cmp
mov
sub
movl
push
xchg
jge
scas
fs
fisttpl
and
xchg
push
imull
mov
jnp
mov
mov
ss
add
pusha
or
clc
fsts
cmp
insb
sbb
mov
rcll
or
hlt
inc
shrb
mov
pop
xchg
fcoms
mov
out
fildll
xor
sbb
outsl
pop
cmp
jns
jl
mov
cs
test
iret
sub
jl
pop
xchg
mov
popf
fs
pusha
inc
repz
adc
imul
mov
jp
cmp
outsb
imul
sbb
vsqrtsd
out
add
dec
repz
xor
add
mov
mov
add
inc
dec
mov
xor
xchg
or
sti
mov
push
leave
hlt
mov
jge
xor
xchg
push
in
test
fbld
leave
xchg
into
or
int
mov
sti
test
hlt
xchg
xchg
dec
out
aad
add
ja
cltd
cmp
xchg
aad
test
pop
cmp
xor
repnz
jl
insl
jns
add
orb
nop
sbb
dec
xchg
loope
xchg
jbe
adc
mov
imulb
lods
incl
faddl
notb
inc
cld
sub
aad
and
rcll
add
push
fs
mov
dec
dec
sbb
es
xchg
pop
ret
sub
dec
adc
iret
in
shlb
fisttpl
sti
mov
mov
shll
pop
in
dec
rcll
push
mov
jmp
jle
xor
mov
lcall
dec
mov
and
mov
out
fcomps
pop
stos
push
je
jae
pop
xchg
stc
icebp
add
xor
adc
push
lcall
pop
data16
shrl
mov
jle
jns
jg
xchg
sbb
cli
das
mov
js
lret
mov
icebp
push
ljmp
roll
iret
pop
test
jns
in
and
je
and
insb
pop
xchg
add
cltd
sub
data16
xor
decb
stos
int
bound
dec
pop
testb
push
jbe
jno
jp
test
test
and
pusha
icebp
xor
cltd
lods
jne
pop
mov
fsubs
stc
in
inc
aad
pop
inc
das
sti
inc
pop
es
stc
cmp
loopne
cld
pop
in
dec
adc
repz
shrl
mov
lahf
cs
mov
clc
movsl
shrb
or
mov
add
sbbb
lods
cmp
or
mov
sub
cmp
or
movsb
lods
inc
outsb
mov
stos
inc
adc
fstpl
cld
test
ret
jne
arpl
ret
cmpsl
push
gs
or
pop
inc
pop
push
jnp
lods
sbb
pop
int3
cmp
lods
mov
mov
ss
jne
loop
pop
lret
sbb
and
stos
add
into
pop
mov
out
or
gs
xchg
fisubl
pop
rclb
mov
hlt
vpunpcklqdq
push
not
inc
lret
fcmove
int
faddl
addb
in
cmp
fsubrs
cmp
dec
imul
stos
cs
mov
aam
push
iret
pop
popf
fldcw
outsb
std
inc
incl
gs
xchg
movsb
dec
cmp
dec
or
fildll
jb
insl
cs
or
leave
and
sub
insl
enter
call
jg
xor
xor
mov
out
test
push
adc
sbb
cmp
test
shll
jp
clc
inc
cld
xchg
xchg
daa
mov
minps
in
rcl
sbb
adc
xchg
lods
cmp
cmpsl
sbb
arpl
ss
xlat
fimuls
lcall
jno
test
inc
mov
mov
fstpt
dec
xor
nop
add
cli
sti
jbe
sahf
inc
or
aad
mov
cmc
push
arpl
pop
daa
imul
hlt
subb
adc
cwtl
in
inc
xchg
and
mov
and
mov
lret
jecxz
aam
lock
sarl
call
dec
jnp
sbb
cmp
mov
mov
or
and
add
mov
add
push
or
test
sub
in
jb
jnp
mov
dec
sbb
sbb
adc
roll
or
xchg
nop
pop
jo
out
test
push
push
push
gs
add
xor
hlt
cmp
xchg
mov
mov
andb
les
loope
fsubs
int3
sbb
loop
sub
iret
icebp
js
test
in
mov
jge
dec
adc
ss
lods
mov
test
inc
push
jge
mov
push
ret
mov
push
mov
xor
sbb
rcr
adc
out
out
dec
repz
xchg
jle
aas
mov
popf
sub
push
adcb
imul
cmp
pushf
cltd
daa
xor
or
cmp
add
mov
dec
lret
ret
mov
cmp
repnz
cltd
sbb
call
mov
scas
je
mov
subb
mov
pop
loopne
push
lea
movsl
sub
sbb
test
mov
add
stos
add
mov
xchg
pop
fsubl
stc
imul
movsb
sub
and
scas
adc
mov
repnz
jmp
add
adc
std
sahf
jp
mov
and
jbe
jmp
xor
fisttpll
addl
or
jg
jp
jne
dec
js
xor
jae
scas
test
hlt
or
insl
ret
aad
mov
cmove
std
ja
mov
jne
and
jbe
xchg
popf
fisubrs
inc
in
lds
rorl
scas
adc
adc
sahf
jo
jb
leave
or
popf
cmc
out
xchg
mov
push
outsb
fmuls
pop
sub
aas
mov
mov
sub
lcall
sbb
add
jge
imul
adc
add
mov
jne
jbe
mov
add
xchg
icebp
into
cwtl
mov
mov
cmp
pushf
dec
xor
push
jp
cltd
lcall
fildl
dec
push
pop
and
or
daa
sub
dec
in
imul
cmp
insb
scas
stc
push
rolb
shrl
ds
repz
mov
daa
movsb
push
mov
add
and
ljmp
mov
cmc
push
push
dec
out
push
sbb
push
cltd
lock
adc
mov
push
lea
iret
mov
pop
dec
mov
cmpsl
pushf
flds
testl
jg
std
add
sbb
repz
sub
pop
test
cwtl
inc
mov
mov
pop
les
sahf
mov
cmpsb
add
add
in
ja
jne
sub
pop
movhps
xor
cmc
test
das
mov
cmp
pusha
push
xor
mov
fwait
pusha
out
movsb
fsubrs
xchg
stos
mov
push
cmp
mov
dec
add
je
das
mov
add
imul
orl
mov
or
xor
sahf
test
push
cmp
inc
pop
out
sbb
out
ja
lea
scas
call
and
push
mov
inc
shll
xchg
notb
inc
push
gs
hlt
xchg
fdivl
cmc
inc
out
inc
movsb
mov
mov
rcr
outsl
xor
out
es
es
iret
xsavec
pop
adc
es
pop
sub
adc
fs
div
sbb
arpl
push
clc
in
xlat
scas
jnp
cmp
and
roll
sbb
ret
cmp
cli
outsl
ljmp
push
fisubl
xchg
cli
push
scas
lods
mov
imul
imul
cmpsl
mov
mov
daa
ds
xchg
popa
test
xor
in
mov
or
fs
add
pop
adc
cmp
divl
cmp
push
sub
in
mov
cmp
fsubr
notl
out
adc
mov
in
mov
clc
jnp
pop
pop
cld
lea
mov
insb
fstl
push
dec
out
push
loop
pop
mov
inc
ja
js
movsl
pop
or
es
xor
jns
mov
add
je
leave
sbb
test
rcll
xor
sbb
cmp
int3
inc
push
movsl
lods
jbe
or
repnz
mov
fcomip
sub
adc
mov
jecxz
jnp
or
push
orb
fucomp
loope
jl
or
jae
frstor
cs
aad
sahf
outsb
sbb
aam
jnp
in
cmpsl
mov
mov
rcrb
aas
or
in
cmp
lock
lret
aas
sub
cmp
leave
pop
stos
cmp
xchg
leave
adc
adc
test
jno
es
movsl
inc
es
sbb
and
add
sti
sbb
jl
xchg
dec
jns
mov
or
sbb
push
pop
insb
adc
arpl
subl
mov
mov
pop
sbb
lds
popl
addr16
std
add
and
bnd
push
or
mov
dec
add
lcall
nop
lret
jo
or
xchg
xchg
and
xchg
cwtl
pop
insl
push
test
imul
dec
in
lds
repnz
xor
xor
adc
dec
xorb
leave
mov
stc
inc
or
daa
outsb
ret
insb
enter
daa
out
jle
cmp
sbb
arpl
dec
insl
nop
pop
aam
stos
in
stos
jae
mov
cmc
idivl
mov
add
xchg
add
or
mov
imul
cmpsl
aam
cld
or
pop
out
xor
and
popf
xchg
std
pop
adcb
xorl
std
push
mov
inc
out
scas
xchg
fiaddl
in
ds
and
pop
clc
icebp
cmpsl
testl
xor
leave
xor
xchg
test
data16
jbe
imul
jne
hlt
outsb
inc
mul
pop
sub
and
fdivrp
cs
sub
or
pop
mov
xor
les
push
subl
in
mov
xor
arpl
mov
add
push
push
int
cs
popa
cld
mov
sbb
add
sub
data16
popa
push
in
xor
dec
fsubrs
aam
loop
mov
pop
mov
add
xor
pop
rcrb
mov
andl
subl
push
xchg
stc
lods
adc
cmpb
xchg
mov
outsb
inc
fisttps
ja
push
xchg
xchg
inc
lods
rclb
ljmp
pusha
and
outsl
cmp
rorb
xor
ds
fistpl
or
pop
push
or
inc
add
mov
into
adc
shr
xchg
sub
shrl
sub
test
mov
into
pop
stc
jae
jnp
addr16
add
sbb
cltd
mov
ja
mov
lds
movsb
insl
or
scas
xrelease
pusha
lea
mov
xchg
shr
aad
movsb
test
fldt
cltd
cmp
adc
and
adc
rcl
shll
stos
jecxz
and
cmpsb
bts
outsb
sar
pop
jno
lods
mov
dec
push
sbb
pop
aad
ja
xlat
test
fmuls
push
std
ds
cli
arpl
dec
inc
mov
jne
jns
imull
add
xor
jg
jge
pop
xchg
les
mov
sbb
xchg
xchg
rorb
jno
sbb
ds
fcompl
cmpsl
sahf
stc
cli
jno
mov
inc
cld
or
jge
repnz
clc
lcall
ljmp
test
xchg
cmp
sub
fs
hlt
fwait
or
pop
sbb
pop
mov
add
mov
nop
mov
int
or
xchg
iret
xor
push
daa
add
add
rsqrtps
lods
xor
divl
mov
jecxz
mov
xchg
xlat
sbb
or
bound
fbld
mov
pop
adc
inc
aad
cmp
cmp
test
xchg
outsl
mov
jg
cli
add
fisttpll
mov
mov
jae
sarl
js
icebp
xchg
movl
xor
cli
andl
loopne
aaa
or
test
loop
inc
test
cmovle
pusha
imul
stos
jbe
lcall
cmp
dec
push
addr16
test
pop
bound
pop
jno
sarb
lret
cmpsl
ret
out
and
pop
neg
idivb
adc
sub
push
out
stos
pushf
xchg
test
and
xor
rorb
loop
sbb
lds
xor
stc
movsl
or
add
or
nop
and
aam
push
fidivl
cmp
cwtl
pop
dec
add
ja
adc
cmpsl
hlt
div
sub
cmp
aam
sahf
leave
mov
mov
sub
mov
cmpsl
sub
filds
xchg
cmp
cmp
repz
mov
inc
sub
bound
test
pop
shll
gs
pop
inc
adc
mov
jno
mov
aam
xchg
xchg
fdiv
ss
jne
xor
pushf
aad
inc
jae
fdivrp
mov
push
pusha
mov
mov
cmpsl
mov
jae
sbb
mov
loop
addl
test
mov
pop
and
insl
sahf
fs
and
loop
xchg
mov
movsl
loope
adc
sub
pop
cmp
out
into
cmpsb
add
ja
aaa
adc
je
mov
shll
gs
fistpll
and
or
fldcw
adc
incl
cmp
mov
push
pop
xlat
dec
or
sbb
fidivrl
dec
out
sub
or
xchg
push
sub
cmp
push
pusha
jp
xorl
jmp
cli
imul
popf
shll
cld
loopne
pusha
cmp
cs
rol
sub
popa
in
movsl
jl
mov
out
xchg
jb
clc
lcall
jl
mov
aaa
dec
repnz
mov
push
dec
data16
cmp
aam
repnz
push
es
cmp
jne
pop
dec
sbb
adc
and
push
repnz
loop
call
inc
and
xor
movsb
test
mov
das
inc
xchg
outsl
push
pop
and
jae
dec
aaa
mov
inc
xchg
push
xchg
ret
xor
cwtl
loop
insl
gs
xor
mov
jmp
adc
loope
jg
loopne
dec
mov
xor
aas
shrb
sti
pop
ret
lea
loopne
loop
lret
pop
inc
pop
add
sbb
scas
sahf
outsb
jl
mov
sbb
mov
mov
adc
push
or
push
lock
mov
sarb
imul
lcall
xchg
and
mov
jae
loop
xchg
ja
jb
push
pop
mov
in
cmp
je
bound
pop
pop
ja
mov
lahf
repz
mov
fucomip
push
jl
test
or
xchg
daa
callw
push
loop
outsb
mov
pop
fcomps
lcall
jp
mov
cmpsl
ljmp
outsb
mov
punpcklbw
ljmp
je
xchg
cmc
in
mov
jae
mov
jge
loop
dec
adc
lcall
or
sbb
and
loopne
fadds
repz
fidivs
jb
push
je
fisubs
es
inc
inc
ljmp
pop
add
xor
xor
shl
dec
addr16
pop
into
cmp
popa
lods
mov
push
in
push
pop
cmpl
pop
inc
cmp
test
sarb
jnp
addr16
dec
mov
in
sahf
les
inc
xlat
sbb
or
jae
incb
sahf
cmp
xchg
adc
mov
repz
mov
and
cwtl
push
stos
lcall
dec
add
mov
pop
into
mov
mov
sti
inc
ja
add
sbb
pop
adc
fs
sub
mov
dec
mov
or
mov
pusha
sub
adc
jecxz
mov
stc
inc
ss
rcll
inc
mov
ret
je
mov
call
mul
arpl
nop
cld
mov
aad
out
cs
xchg
aaa
stos
or
orb
repz
shrl
arpl
xchg
xchg
add
mov
push
mov
mov
inc
nop
sbb
sub
fldl
adc
sub
cmp
imul
lods
inc
jbe
imul
cmp
mov
test
push
stos
push
add
aaa
cld
or
mov
inc
out
movsl
mov
inc
cld
aaa
dec
pop
jnp
aam
sbb
popa
xor
mov
mov
rcr
movsl
loope
call
arpl
and
pop
pop
movsl
xchg
in
scas
in
fdivrs
imul
push
shll
notl
icebp
dec
adc
and
and
or
ss
cli
adc
cmpsb
jg
inc
and
pop
xchg
addb
sarb
cmp
mov
bound
fstpl
shrl
xchg
arpl
test
mov
xor
ficomps
push
insl
aad
int
in
xor
mov
aas
lods
jb
xchg
fistpll
pop
mov
and
cli
adc
test
add
sub
out
ds
jns
out
sub
jmp
adc
je
ss
adc
daa
adc
inc
push
rorl
or
fxam
push
mov
addr16
movsl
push
sahf
ds
sub
adc
call
xchg
cld
sbb
xor
es
iret
popl
notb
xchg
mov
pop
sbb
sahf
or
js
int
or
sahf
add
ret
push
sub
jg
cmp
ja
pop
sbb
lea
lcall
and
xchg
dec
hlt
fdivrs
mov
sbb
mov
xchg
push
dec
and
add
ss
stos
inc
jge
in
aas
add
sahf
ljmp
adc
leave
mov
sub
or
out
test
mov
jbe
jl
lret
xchg
or
out
std
fildll
or
dec
lret
out
adc
js
inc
ja
dec
sbb
roll
jbe
lcall
or
xor
fdivrs
bound
xchg
xor
xchg
pop
je
pop
push
lds
and
cmp
test
outsb
aad
and
cld
lret
das
lahf
xlat
ss
mov
ret
sub
lret
arpl
cld
fsubl
out
orl
je
add
push
xlat
adc
push
pop
mov
in
fs
mov
pop
sub
orl
loope
lods
add
mov
push
sub
adc
add
mov
push
dec
pop
fsubr
fucomi
adc
jmp
push
int
aam
jmp
jp
pop
sbbl
push
or
sub
jns
aas
push
pop
dec
mov
arpl
dec
mov
mov
cmp
movsl
pop
std
js
mov
lret
add
out
je
xlat
lret
jp
fcmovnb
xchg
xchg
pop
cmp
mov
mov
inc
jp
cmp
inc
mov
test
int3
sub
lret
mov
das
outsl
pop
or
imul
mov
cmp
mov
jb
lods
inc
call
sarb
int
stos
pop
inc
mov
jle
call
shll
jecxz
das
push
jmp
xor
sbb
insb
push
inc
out
movl
mov
push
lods
dec
ljmp
inc
outsl
into
lret
push
xor
sub
lds
movswl
xchg
fiaddl
pop
xchg
jmp
cmpsl
call
aad
sub
cmp
rcl
dec
jp
outsl
pop
mov
mov
push
sbb
sub
arpl
outsl
add
mov
scas
xor
stos
dec
shll
jmp
push
pop
dec
jo
test
xchg
xchg
test
mov
mov
adc
pop
push
push
pop
mov
icebp
iret
test
int3
std
jno
sub
xchg
adc
and
xchg
stos
imul
mov
leave
push
cwtl
mov
negl
push
cld
mov
inc
lea
test
lahf
add
mov
xchg
loopne
xchg
bound
out
leave
sub
cld
dec
mov
aaa
pop
push
scas
mov
loope
cmp
push
sbb
pop
fsubrl
jns
lahf
andb
enter
scas
jne
jl
mov
sub
mov
lds
aam
xor
inc
push
xor
push
jns
add
cmp
sti
sub
inc
add
loop
cld
cmp
pop
std
push
mov
dec
nop
mov
pop
fstpl
fucomp
cmp
data16
add
imul
or
ret
xchg
or
and
pop
push
imul
int
cmc
add
inc
cmc
push
leave
out
nop
aas
lock
jnp
stos
adc
iretw
hlt
mov
mov
pop
adc
jb
or
mul
mov
xor
push
cmpsl
hlt
addr16
outsl
push
fcmovb
out
rorl
repnz
push
add
mov
and
fisubs
movsl
xchg
mov
pop
lods
scas
movl
lahf
xlat
sbb
jo
dec
or
push
mov
pop
push
std
xchg
mov
scas
add
mov
mov
adc
or
mov
pop
cmp
push
push
mov
das
mov
lock
rclb
outsb
push
fsubrp
or
push
adc
and
out
scas
xchg
sub
mov
and
or
mov
mov
xchg
sbb
mov
jbe
fistpl
hlt
pop
dec
rorl
sti
pop
and
popw
ds
in
xchg
test
scas
xchg
std
jmp
xchg
je
lods
fwait
jge
jp
fcmovu
in
cmp
xor
lret
aam
and
sbb
dec
jge
repz
mov
call
rcr
iret
cs
lods
and
in
pop
lahf
mov
mov
call
sub
rcl
sub
test
sbb
mov
push
daa
xchg
lahf
cli
lret
divl
cmp
xchg
daa
inc
nop
cltd
lret
sarb
xor
nop
insl
jge
push
jmp
imul
jg
push
push
add
cmp
sub
mov
int
mov
je
pushf
dec
hlt
pop
sub
push
sbb
cs
sbb
xchg
pop
stos
lahf
in
mov
pop
hlt
pop
imul
sbb
xchg
dec
jecxz
scas
gs
pop
js
mov
mov
incb
jp
nop
stos
xlat
std
push
repz
repnz
rcll
mov
jns
out
adc
orb
hlt
push
pop
jp
push
movsl
jno
push
jg
popw
jp
movsl
fidivl
cmp
imul
fcoml
mov
enter
sub
inc
push
int
pushfw
add
push
xor
sub
inc
fstpt
xor
into
mov
xor
imul
cmp
stc
fs
clc
pop
pop
gs
pop
xor
sbb
gs
inc
bound
insb
jnp
lahf
or
js
dec
outsb
inc
loop
call
rep
dec
ret
push
aad
out
mov
fbld
in
mov
daa
xor
pop
lea
dec
jmp
dec
pop
or
lret
pop
fdivs
fadd
cmp
lahf
adc
jne
xchg
fcomp
or
jns
out
and
add
add
fisubs
ret
dec
sti
adc
and
mov
mov
sub
fiadds
call
xor
mov
pop
js
ss
dec
push
and
sub
push
rcll
stos
pop
fs
cltd
or
insb
fstps
adc
and
roll
insb
test
lret
push
pop
in
pop
insb
mov
insl
stos
mov
jl
fldt
push
xchg
adc
fldenv
pop
inc
fwait
testb
test
xor
aad
mov
nop
mov
int
add
lcall
pop
rorb
fcom
out
mov
xchg
xchg
sbb
and
jp
cmp
xor
aad
cmp
push
movsb
nop
mov
into
and
and
xor
dec
cmp
nop
ljmp
dec
inc
leave
or
mov
fbld
cmpsl
xchg
lock
sti
out
dec
fiaddl
mov
pop
loope
sbb
and
sbb
push
out
nop
outsl
in
jae
dec
mov
adc
sahf
pop
sub
lret
xchg
xlat
fdiv
pusha
and
sbb
sbb
mov
sbbl
pushf
cmp
mov
dec
jns
mov
cmp
xor
jg
push
sub
cmp
outsl
lcall
xlat
and
shrd
mov
lock
leave
cmc
fdivrs
cmp
or
repz
aad
jmp
cmp
and
mov
fisttps
in
sub
out
or
nop
add
ficoms
jle
adc
mov
jne
jl
sub
mov
sub
mov
jle
inc
pmulhw
mov
shlb
dec
jmp
jne
and
jle
pop
pop
lock
das
popa
pop
push
cmp
clc
shlb
fisttpll
pop
add
jns
out
lar
add
push
mov
push
add
pop
sub
out
mov
jmp
dec
lock
or
icebp
jbe
pop
xor
inc
fisubl
orl
lods
int
gs
add
test
jns
pop
and
xor
push
lret
jmp
call
jno
out
adc
push
mov
lret
push
lds
mov
cmpsb
pop
jg
imull
mov
mov
jns
jo
out
xchg
shrl
repz
popf
inc
mov
shll
cmc
btc
dec
mov
aaa
ss
shl
aam
stos
int3
add
sub
test
dec
fidivrl
cmp
jae
cmpsb
adc
leave
sub
mov
fisubs
faddl
cmp
clc
popf
das
xor
sar
rcl
and
mov
pop
das
cli
subb
orl
fmull
mov
imul
pop
cmp
sub
decb
movsb
mov
or
xlat
xchg
xchg
shll
cld
idivb
add
ret
pushf
in
pop
cli
adc
test
jno
rcrb
lea
sub
js
inc
xchg
ds
mov
aas
or
mov
pop
mov
pop
ret
add
aam
lret
jge
xchg
sbb
rolb
jg
ja
add
xchg
inc
dec
mov
pop
jecxz
mov
xor
std
mov
sub
mov
pop
and
sub
or
adc
mov
jmp
repz
lods
fdivs
mov
loopne
mov
add
dec
jbe
mov
daa
pop
cmc
inc
pop
arpl
js
or
mov
andl
loopne
jle
lahf
imul
mov
scas
fnsave
pop
lods
mov
mov
pop
xacquire
test
test
les
push
xchg
rol
aam
ret
cli
mov
fwait
mov
adc
mov
jno
mov
dec
js
insl
call
stos
add
inc
sub
andl
enter
jae
loope
orb
int3
jp
js
cltd
imul
sub
ds
clc
mov
push
push
mull
jmp
loope
lods
jns
lock
push
dec
scas
in
cmp
fisttpl
gs
out
mov
not
ljmp
flds
ja
cli
fs
dec
out
sub
rcrl
pop
cmp
mov
adc
int
jmp
rolb
dec
add
and
cmp
xor
sbb
int3
xor
fsqrt
inc
popa
cmpsl
sbb
popf
je
push
daa
std
and
daa
test
and
jae
fcoms
test
loope
mov
fildl
das
sti
jb
cmp
sti
outsl
adc
jp
sti
cmp
xchg
arpl
loopne
xchg
xchg
xor
push
out
insb
stos
xor
cmp
popa
in
pop
add
insb
les
rcll
mov
or
popf
mov
pop
xor
fildl
lahf
clc
sbb
stos
lds
mov
inc
xchg
cmp
inc
sti
add
cmp
inc
daa
mov
mov
mov
shrb
je
mov
xchg
dec
lods
mov
cli
pop
aaa
sbb
xor
sub
and
mov
pusha
adc
xchg
mov
and
enter
push
sub
push
inc
mov
jne
sbbb
push
mov
in
cmp
mov
mov
sbbb
movsl
push
mov
daa
vmptrst
ds
push
jmp
in
lea
jae
inc
cmp
in
mov
jmp
mov
push
fnclex
xor
mov
jp
and
imul
xchg
pop
rcrl
cmpsl
sbb
sarb
lret
cmp
out
jns
fstpt
and
xchg
pop
ljmp
xor
jp
pusha
leave
push
xor
xlat
testl
stos
arpl
or
xlat
xor
arpl
aaa
lods
push
mov
stos
jns
enter
out
add
lds
or
mov
out
xlat
aas
add
fisttpll
faddl
xchg
pop
cmpsl
ds
or
or
xchg
rorb
adc
movsb
xchg
pop
xchg
push
insb
in
aam
or
out
pop
add
imul
lret
test
xchg
pusha
sub
cs
pop
dec
inc
stc
fbstp
cmp
sbb
cs
add
addl
in
push
addb
rorb
popa
cmp
les
xchg
add
orb
repz
sbb
sbb
in
jns
xchg
add
xchg
xchg
mov
mov
xchg
repnz
cs
sbb
dec
pop
repz
push
xor
xor
push
adc
or
mov
cmp
movsl
int
test
jmp
mov
jmp
lahf
fsubrl
sub
or
mov
mov
aaa
push
push
lcall
mov
cmpsb
es
mov
xor
cmc
jbe
adc
in
mov
test
jmp
mov
adc
push
in
repnz
cmpsb
lret
sbb
mov
jmp
mov
pop
ljmp
mov
pop
mov
dec
add
pop
push
mov
ficomps
lret
clc
data16
lods
insl
xor
mov
xor
gs
and
and
lock
data16
mov
out
bts
jge
and
cld
insl
ja
dec
cmp
insb
xor
sub
push
add
and
dec
lret
pusha
push
addl
jbe
arpl
xchg
shrb
in
movsl
xor
and
push
pushf
addr16
mov
aad
ficomps
lods
in
dec
xchg
mov
movsl
je
mov
pop
movsb
sub
fs
mov
std
test
hlt
and
adc
gs
push
mov
xchg
je
lret
and
aad
push
mov
rcll
push
test
lds
pop
mov
jle
push
ljmp
add
jle
stos
addb
cmp
lahf
push
or
neg
mov
cmp
pop
gs
imul
pop
cld
pop
fisttpll
lret
inc
iret
xlat
sub
jl
and
cmpsb
dec
xchg
jg
mov
pop
jl
in
imul
jmp
push
xchg
negb
arpl
jl
pop
and
lds
dec
stos
rcrb
aam
loop
adc
add
lea
mov
sbb
pop
mov
cwtl
cmp
sbb
add
xchg
cltd
and
push
pop
clc
cmp
cltd
add
jb
inc
add
jne
jno
nop
mov
jl
adc
mov
inc
mov
jne
mov
dec
test
pop
sub
enter
sti
in
jmp
ret
and
out
ljmp
cmp
and
sbb
je
push
in
pop
sub
and
and
push
cmc
mov
push
ds
mov
incl
scas
jb
lahf
jb
inc
xchg
imul
push
sub
mov
sub
push
mov
add
add
lds
rclb
sub
push
les
sub
orl
jle
add
insl
aaa
cli
leave
popa
sub
rcll
and
out
xlat
cmp
sub
or
sub
push
xor
dec
jecxz
lret
pop
sahf
cmpsb
push
rclb
mov
ret
jmp
out
jecxz
mov
mov
mov
adc
xlat
pop
or
fcoml
mov
xor
test
sti
sub
sbb
icebp
mov
add
push
dec
jle
stos
or
mov
pop
pop
add
add
xor
dec
int3
mov
jnp
pop
loop
je
mov
mov
lahf
test
mov
popa
inc
out
int3
aaa
ret
popa
sub
adc
mov
repz
xchg
rol
scas
cwtl
pop
push
pop
mov
pop
mov
popf
lods
lods
scas
in
imul
push
jbe
and
testb
sub
cmp
add
fcoms
xorb
inc
loope
jns
movsl
insl
and
cmc
ja
pop
dec
jmp
sub
inc
add
pop
pop
inc
bound
fsubrl
cwtl
dec
roll
popa
xchg
sub
cmp
mov
daa
aad
mov
scas
sbbl
mov
and
imul
sub
jecxz
inc
adc
int3
cmp
dec
out
add
dec
ljmp
rorl
pusha
outsl
call
cli
mov
mov
sbbb
dec
jns
dec
xlat
jnp
fwait
ja
cmc
and
sub
movsb
sbb
ljmp
pop
and
mov
nopl
push
push
lcall
cmp
mov
fwait
cwtl
mov
push
notl
adc
add
mov
xchg
cmp
jmp
push
scas
mov
mov
negb
inc
push
lods
sub
imul
icebp
lods
vpackssdw
dec
inc
pusha
jno
addl
rcll
inc
sar
sti
icebp
fisttpl
inc
cvtdq2ps
cmp
push
jmp
enter
aad
add
cmpb
xor
out
data16
icebp
fs
and
lcall
outsb
into
adc
cs
push
iret
inc
xchg
mov
sub
sub
mov
leave
test
mov
out
sub
push
lahf
aaa
mov
fs
aas
les
into
cmpsl
insl
cmp
push
xchg
fists
ljmp
pop
ds
push
outsb
test
pop
jg
clc
push
mov
sti
into
jl
pop
out
jno
xor
jbe
push
clc
jle
mov
fs
mov
test
sbb
popa
rol
repz
aaa
pop
outsb
mov
add
repz
sbbb
jnp
push
mov
lahf
cmp
sbb
sbb
sbb
adc
sub
and
jge
pop
mov
nop
jno
popf
lods
ret
jnp
sub
fistpll
sub
inc
jl
shl
out
daa
lods
jne
inc
bound
or
movsb
lret
pop
push
push
mov
cmp
pop
lods
mov
xor
mov
xchg
hlt
test
push
nop
lcall
in
mov
push
fldt
lds
and
repnz
pop
xchg
dec
mov
xchg
sbb
sbb
cmpsb
arpl
cltd
push
dec
push
and
or
mov
push
cmpsl
or
in
data16
icebp
cmp
rorb
jl
test
and
dec
xchg
orb
inc
test
or
fisubrs
movsl
les
jge
arpl
inc
mov
pop
dec
or
jbe
pusha
jecxz
mov
pop
cmc
aas
add
xchg
adc
xchg
jbe
fs
cmp
xlat
loopne
add
cmp
dec
jecxz
mov
cmp
popa
cwtl
stos
mov
mov
mov
insl
flds
fs
push
sub
mov
or
test
mov
xlat
fs
jg
add
push
addr16
movsb
jnp
loop
rorb
push
ss
stc
mov
das
xchg
push
aad
mov
pop
sarb
and
push
mov
imul
adc
mov
mov
lahf
push
or
xchg
out
sbb
js
fdivl
cld
hlt
gs
insl
mov
mov
in
pop
pusha
scas
xchg
jno
es
xchg
test
dec
push
xor
dec
test
int3
aas
push
or
popf
push
inc
mov
jo
out
mov
iret
adcb
push
pop
lock
daa
fwait
hlt
test
sbb
mov
jle
and
pop
das
stos
ja
dec
test
mov
sarb
in
cmc
adc
push
scas
ljmp
mov
test
repz
emms
or
loope
jp
push
fcoml
mov
sub
cmp
enter
xchg
data16
cmpsb
push
loop
inc
jno
sahf
pop
std
xchg
cld
and
push
loope
mov
outsl
ja
leave
or
pop
fisubrl
push
es
add
jl
loope
enter
jbe
xchg
movsl
sbb
push
mov
shlb
sbb
or
loope
xor
mov
mov
notb
insl
jg
adc
mov
jnp
jne
xor
dec
and
rep
jne
or
add
dec
ret
stos
adc
mov
or
sbb
add
mov
mov
cltd
adc
add
arpl
outsl
push
cmp
stc
and
ljmp
sbb
rcrb
lock
je
pop
pop
repz
cmp
scas
cmp
bound
jne
das
mov
lds
in
mov
mov
push
push
sub
aas
push
mov
jne
cmp
rorl
je
and
mov
cmp
aad
cmp
pop
push
mov
mov
cmp
sbb
add
popf
mov
inc
or
xchg
cmpsl
loop
aas
xchg
fisubrl
test
shl
test
loopne
mov
call
xlat
inc
jg
xchg
mov
insb
imul
cvtdq2ps
sbb
pop
arpl
sbb
clc
sub
and
adc
dec
pop
insb
iret
jb
push
cmpsl
out
lods
mov
shl
mov
in
mov
push
sub
enter
fildl
jne
mov
mov
inc
cmp
cmc
test
fstps
jge
adc
mov
nop
sbb
and
inc
addr16
push
cmp
test
nop
push
cwtl
jl
inc
int3
nop
jne
or
dec
sub
nop
es
and
nop
push
mov
cmp
mov
call
mov
stos
pusha
hlt
lahf
mov
pushl
in
mov
lock
inc
into
fsubrl
sahf
cmp
and
lret
add
xchg
mov
inc
ret
xchg
into
inc
fbstp
hlt
xchg
xchg
repnz
fidivl
int3
mov
test
repz
pop
or
popf
xchg
outsb
mov
dec
in
dec
pop
imul
mov
mov
push
dec
add
mov
bound
in
lock
xor
sbb
fcomp
inc
push
mov
mov
lea
outsl
mov
or
xor
xchg
test
sbb
cld
lock
xchg
cld
add
sub
in
imul
add
inc
cmp
in
dec
and
mov
or
into
dec
cwtl
ds
insb
push
scas
mov
mov
rcrl
jg
sbb
pop
ret
aaa
imul
dec
jnp
out
pop
int
and
lcall
jne
cs
jns
add
je
mov
lcall
pop
fistpll
dec
lahf
imull
dec
cmp
ret
aaa
fs
fwait
mov
loop
stos
sarl
cli
pop
xchg
ret
xor
pop
ficomps
nop
stc
fs
popa
push
jp
jbe
sub
pop
cld
xor
repnz
xlat
cltd
mov
fbstp
out
in
dec
lock
in
mov
repnz
shlb
xor
arpl
lods
addr16
lret
xor
push
jae
push
adc
push
xchg
mov
inc
loope
xor
mov
xchg
insb
xor
mov
pop
pushf
mov
lret
inc
popf
stc
add
fbstp
repz
ret
out
nop
fwait
push
jne
js
daa
inc
pushf
sti
inc
adc
xchg
iret
mov
and
and
out
fcmovne
pop
sub
xor
sti
pop
cmp
or
xchg
mov
gs
dec
jle
mov
test
pop
out
add
into
or
icebp
lcall
imul
mov
out
cs
out
lea
int3
jge
inc
in
repnz
hlt
imul
pop
js
and
outsb
out
and
mov
mov
lret
roll
xor
mov
inc
add
ja
or
and
xchg
frstor
ficoml
adc
inc
fs
sbb
sbb
mov
js
pop
jne
cmp
in
jb
pop
cmp
jnp
inc
mov
jecxz
pop
out
sbb
inc
sarl
xchg
das
cltd
lcall
adc
or
mov
addl
rcrl
fdivl
xchg
xchg
sbb
ret
test
jge
pop
test
icebp
stos
xchg
movsl
and
out
ja
leave
arpl
inc
dec
movsl
cwtl
daa
icebp
xchg
or
out
pushf
jg
scas
out
adc
add
addr16
pop
jae
pop
pop
mov
sbb
out
xor
sbb
xchg
jmp
and
adc
mov
mov
xorb
push
movsb
out
test
das
jbe
push
decl
jl
jbe
mov
cmpl
lahf
je
jge
inc
std
pmulhuw
inc
xchg
push
movsl
out
or
jns
fld
or
inc
aaa
inc
pop
mov
ljmp
std
in
mov
scas
loopne
hlt
xchg
cmc
lods
popf
rcrb
cmp
or
inc
sbb
cmc
fadd
and
pop
jns
dec
in
das
sbb
mov
out
jp
cs
pusha
pop
push
fisubrl
xchg
push
sub
int3
jno
mov
mov
das
xchg
filds
imul
sahf
ret
mov
fstpt
mov
adc
pusha
push
test
shll
lods
jle
pop
imul
and
in
lret
std
pop
sahf
outsb
fwait
in
pop
and
inc
push
mov
mov
adc
pop
dec
xor
or
xor
dec
hlt
push
jl
sbb
sbb
xor
adc
pop
sahf
pop
and
push
dec
rolb
adc
lods
lret
xchg
in
dec
push
ss
mov
pop
repnz
bound
cmp
je
cmpsl
into
mov
insb
push
cmp
lret
xor
and
xor
jp
mov
or
psubw
aas
push
push
aaa
mov
neg
sahf
add
xchg
movb
pop
cmp
aad
or
mov
rorb
outsl
sub
loop
lods
or
ss
xchg
pushf
pusha
jnp
mov
test
clc
in
jmp
dec
inc
add
jg
xchg
inc
xor
call
mov
sub
xor
test
dec
cmp
add
mov
clc
out
arpl
ds
in
sahf
inc
lea
mov
cmpsl
dec
seto
test
sub
pushf
pop
in
cmp
cmp
jmp
ja
in
mov
arpl
dec
adc
jmp
mov
into
outsl
inc
mov
into
orl
fdivrs
ret
jecxz
in
popf
movsb
pop
js
sbb
rolb
push
sbb
mov
clc
mov
ret
mov
roll
mov
icebp
cmp
inc
mov
adc
enter
pop
jmp
test
sti
lock
int
and
sbb
push
xchg
adc
jle
inc
push
mov
popl
popl
push
cli
dec
popf
cli
adc
sti
shr
jae
add
mov
or
enter
inc
cli
sarl
cmp
lea
push
mov
pop
push
inc
cmp
jo
xchg
icebp
mov
out
movsb
mov
clc
cmpsl
push
rcrl
or
dec
xor
or
push
cmpsb
out
sbb
fcoml
xor
lods
test
sti
imul
shrb
leave
pusha
ret
pop
int3
je
sub
inc
push
pop
je
sarb
and
nop
and
dec
ds
in
mov
fwait
adcb
sub
mov
popl
push
push
stc
nop
nop
cmp
add
test
push
adc
nop
cmp
out
stc
add
arpl
dec
jmp
jmp
jp
cmp
add
negl
cmpsb
sti
push
jnp
std
pop
daa
fsubl
mov
ds
sti
dec
imulb
lahf
fstpt
imul
jne
cmc
add
add
adc
add
arpl
xchg
jmp
cmp
insl
sbb
mov
fidivrl
mov
cmp
popa
popl
int3
ret
pop
call
jns
xorb
sub
bound
pop
icebp
and
sub
push
mov
rorb
in
pusha
shlb
dec
aas
push
mov
imul
je
xor
mov
mov
pop
cmp
lock
jb
dec
adc
pop
fidivrs
cli
sbbl
push
out
insb
and
mov
pop
jp
jno
jae
lret
jnp
mov
xor
aaa
insb
in
lods
mov
mov
int3
das
adc
lahf
jge
pop
mov
mov
jae
in
jb
shlb
imul
push
xchg
push
cmc
hlt
repnz
rcrb
inc
repz
shrl
lahf
mov
dec
test
jns
fisttps
rolb
mov
fwait
arpl
or
jbe
mov
sbb
xchg
add
cli
mov
imul
mulps
dec
or
es
push
bound
inc
adc
mov
pcmpgtd
outsl
push
xchg
pop
xchg
and
mov
dec
adc
jl
cli
ljmp
jmp
lcall
pop
jmp
aas
mov
xlat
mov
sahf
pop
xchg
into
js
push
and
jns
aaa
mull
xor
fnstenv
xor
cmpsb
out
or
push
fmull
popf
in
repz
idivb
push
and
push
jg
insb
fbstp
aad
out
mov
adc
jecxz
fldcw
or
jp
sti
int
mov
sbb
or
fistps
xchg
lahf
movsb
add
sub
jo
je
fisttpll
mov
xor
jmp
pop
mov
add
imul
decb
fdivrs
xchg
mov
fnstenv
jl
mov
jae
mov
add
push
sahf
cmpl
mov
mov
popa
and
cmpsl
sbb
cli
cmp
xor
out
push
jl
xlat
std
sub
inc
outsl
sar
in
push
fs
stc
hlt
inc
dec
cld
lock
inc
mov
stos
mov
cmpsl
jg
filds
mulb
sbb
in
xor
sbb
xor
jne
divl
scas
popa
out
addb
insl
xor
jmp
push
mov
xchg
cmp
mov
pusha
add
pop
test
mov
loope
mov
fwait
xchg
jb
sub
xchg
lods
cmp
and
loope
mov
lcall
jb
jae
nop
xchg
std
ret
cmp
push
js
dec
or
jecxz
ret
xchg
insb
cmp
or
adc
setge
dec
sbb
cmp
jns
pop
mov
cmp
out
xor
add
adc
mov
shrl
call
icebp
lods
push
dec
adc
mov
rol
sub
cmp
mov
lea
adc
push
dec
lock
mov
pop
sbb
xchg
adc
idivb
pusha
jecxz
xor
insb
out
cmp
pop
mov
mov
pop
sbb
bound
test
adc
in
xchg
test
dec
sbb
sbb
cmp
ret
cltd
sbb
iret
pop
pop
loopne
idivb
movsb
out
andnps
xchg
xor
mov
jne
xor
imul
outsb
jbe
add
xchg
add
jns
mov
pop
sub
cmp
test
xor
addl
push
ret
rclb
pop
push
push
inc
or
fcoms
daa
outsl
adc
int
ja
roll
jbe
or
pop
outsb
imul
xchg
sbb
mov
into
gs
ljmp
test
sahf
push
push
mov
push
push
inc
fbstp
dec
out
mov
fiadds
dec
pop
dec
pop
sub
lea
jge
fisubs
jge
int
push
pop
adc
add
sbb
xor
notb
bt
xchg
stos
ret
xchg
aas
push
xor
paddb
lahf
mov
out
loopne
test
cmpsb
adc
mov
cmc
mov
pop
xchg
xchg
mov
xchg
cltd
add
mov
movsl
into
test
sbb
xor
jno
leave
cmp
out
bnd
jmp
les
mov
mov
je
pusha
dec
je
inc
rcl
push
popa
aad
push
jp
test
jo
push
aas
cmc
cli
xchg
push
and
mov
ss
aam
adc
add
stos
scas
push
mov
jg
xor
push
jb
and
stos
adc
or
fimuls
sub
shrb
push
rcrl
jg
dec
dec
sahf
dec
lods
lds
insl
add
xchg
out
into
xchg
pop
adc
pop
scas
dec
sub
bound
arpl
punpcklbw
pop
cmp
scas
xor
jg
ss
pop
mov
fisttpll
outsl
fidivrs
mov
jae
clc
repnz
pop
pop
push
inc
jecxz
or
iret
hlt
std
push
mov
sub
mov
add
mov
xor
xchg
dec
fs
sub
dec
pop
pushf
adc
ja
pop
xchg
lahf
shl
adc
test
lret
dec
test
lock
inc
sub
mov
xor
call
mov
addr16
or
and
and
xchg
inc
lea
movsb
mov
jp
out
pop
popa
pushf
mov
mov
leave
not
mov
cmp
scas
in
push
mov
dec
adc
mov
xchg
xchg
loope
jmp
lcall
mov
pusha
ljmp
adc
repz
das
xor
imul
imul
js
jnp
xlat
lea
adc
inc
mov
xchg
push
add
mov
stos
pop
mov
or
sti
xchg
and
cld
jbe
cmpsb
bound
xchg
scas
cmp
sahf
insb
ljmp
rcll
ss
rcrl
pop
or
sub
pushf
dec
adc
and
je
aas
jge
cli
sarl
sbb
push
daa
mov
jae
enter
pop
jecxz
call
hlt
les
add
mov
mov
jnp,pt
push
jns
and
push
ljmp
iret
fdivrp
jb
iret
fdivrs
sbb
mov
test
sbb
jp
orb
cmp
xchg
std
jnp
adc
push
xchg
pop
and
pop
leave
incl
jae
add
sahf
jae
or
stos
cmp
cwtl
stc
inc
jno
cwtl
loope
insl
ret
sbb
lods
adc
out
jbe
mov
dec
adc
dec
std
insl
pop
xchg
mov
movsb
scas
cmp
aam
je
inc
add
mov
adc
jae
ret
push
cmc
ds
jo
or
popf
andl
sub
jp
push
outsl
xlat
xchg
dec
and
in
js
add
in
test
scas
mov
daa
rcl
jb
inc
ljmp
and
sub
addr16
fwait
stos
aad
jl
mov
ja
ja
addr16
adc
sub
cmp
fcoml
call
lcall
mov
ja,pt
xchg
jne
scas
imul
cmp
jge
lahf
and
hlt
mov
and
mov
fbstp
push
push
mov
mov
sub
xchg
lods
push
in
xor
out
pop
push
mov
adc
lret
mov
xor
psubb
fwait
xchg
fwait
ljmp
fstps
mov
mov
int3
testl
jnp
xor
or
mov
and
mov
mov
in
divb
daa
pop
lea
aam
mov
repnz
cmp
in
xchg
aas
popf
insl
xchg
adc
push
and
into
lcall
xor
xor
jl
mov
ja
xchg
sub
mov
out
cwtl
cmpsb
pop
xor
push
inc
insl
les
popa
rolb
xor
loop
xor
pop
xchg
or
sbb
sbb
inc
mov
iret
sub
insl
clc
mov
lods
xchg
scas
ljmp
push
cmc
xor
dec
pop
cmp
xchg
pop
mov
stc
test
mov
inc
pop
jg
fldt
je
jbe
aad
insl
pop
pusha
aad
sahf
mov
stos
jp
xchg
and
adc
repnz
ljmp
es
notb
lea
inc
stos
add
adc
cmp
outsl
xor
out
test
adc
xchg
or
and
stos
mov
mov
mov
cli
mov
stc
insl
pop
imul
xchg
sub
test
push
inc
pop
lea
rcrl
mov
jbe
stos
cmp
dec
outsl
cmpsb
leave
mov
aas
pushf
xchg
inc
sbb
leave
jbe
shl
mov
mov
jne
sub
cmp
mov
adc
or
out
jne
jg
fxch
test
sub
and
into
mov
fs
cmpsl
adc
jl
rcll
out
orb
jmp
cmpsb
aad
fisttpll
stos
xlat
lret
push
dec
stos
stc
outsb
inc
mov
cli
outsb
mov
sub
or
test
mov
cli
lds
aas
js
in
es
pop
mov
inc
mov
push
cmpsl
je
or
ljmp
pop
add
mov
fistps
scas
fsubl
xchg
cmp
mov
push
mov
xchg
out
in
xor
fwait
fwait
int3
loope
mov
push
les
mov
mov
loop
sub
pop
mov
stos
xor
cmp
or
pop
int3
nop
mov
nop
in
jp
out
daa
dec
test
mov
inc
je
das
push
mov
mov
push
mov
dec
mov
xor
push
gs
repnz
xchg
hlt
adc
push
pop
push
test
pop
push
push
pop
cmp
imul
mov
ljmp
test
or
int3
mov
fldl2t
lret
shlb
test
adc
sbb
mov
and
test
and
inc
jb
mov
test
cmpsb
push
negb
fldl
aam
iret
push
xor
and
test
xor
lock
adc
dec
xchg
push
fidivrl
push
test
icebp
hlt
mov
sub
adc
sub
mov
cmpsb
stos
jb
out
js
in
xor
pop
scas
leave
insl
dec
stos
in
iret
jmp
mov
shrb
push
mov
mov
cmp
fidivs
rcr
movsl
lret
sbb
gs
ficompl
and
lods
je
jge
bound
jns
imul
fsubs
push
ljmp
pop
es
or
and
pop
test
or
mov
adc
cmpsb
dec
cmp
lds
mov
push
xchg
xlat
add
xor
imul
pop
test
dec
popf
cmpsl
mov
dec
cmpsl
in
iret
fcoms
sub
ss
test
es
dec
dec
sarb
lcall
divb
cli
je
decl
test
lea
into
mov
bound
ret
fisubl
movsb
fisubs
mov
fnsave
pushl
pop
icebp
lret
push
jg
es
push
rclb
or
stos
fisubrs
adc
inc
xor
dec
inc
outsl
cmp
stos
iret
ljmp
icebp
fadds
lds
push
inc
in
jo
aam
mov
and
mov
fstl
testl
out
xchg
push
sub
cmc
lcall
addr16
negl
push
out
ja
outsl
stos
test
lods
mov
pop
jecxz
or
or
movsl
repnz
mov
sarl
ror
mov
stos
fwait
inc
sub
enter
xlat
in
jo
addl
mov
cmp
loope
rcrb
xchg
and
and
enter
sub
jle,pt
jle
ss
js
fidivs
std
inc
and
test
xchg
in
pop
inc
mov
outsl
xchg
xor
push
es
ret
mov
adc
iret
jno
stos
mov
loope
sub
fldt
jg
xor
and
push
pminub
jge
dec
jo
lret
push
mov
sbb
negb
clc
popa
rorl
and
cmp
out
dec
xor
cmp
into
mov
out
push
in
scas
jp
inc
mov
test
cmpsb
inc
lods
fldcw
leave
xor
clc
out
xchg
mov
pop
adc
pop
mov
pop
arpl
jmp
or
sbb
or
lock
rcl
seta
jo
dec
dec
sarl
push
xlat
outsl
imul
cmp
in
push
jne
call
xor
into
pop
add
jb
loop
lret
int
nop
out
sub
dec
inc
adc
std
imul
out
lods
test
lret
enter
data16
sarl
stc
xchg
mov
bound
push
cmp
fcom
lahf
cmc
mov
dec
pop
sub
add
xchg
vmovmskps
fdivr
jns
addl
sbb
mov
lods
cltd
ja
mov
movsl
out
and
in
fadds
or
fwait
insl
sub
test
rolb
das
insl
add
cmp
pop
jmp
sub
fmull
fwait
aas
or
mov
shrl
imul
pusha
out
lret
daa
popf
sahf
mov
mov
jp
push
mov
imul
rclb
mov
imul
lcall
es
push
outsb
loop
imul
sbb
mov
cmp
dec
cmpsb
sti
adc
stos
cmp
fwait
mov
ja
rcrl
or
repz
inc
cmp
and
dec
jns
test
dec
dec
leave
out
adc
sbb
push
lret
adc
mov
movsl
jl
imul
aam
fwait
adc
dec
lahf
js
push
jl
dec
ffreep
push
jns
jo
lods
mull
push
fistpll
add
js
ja
cwtl
fmul
cs
es
ficomps
repnz
repz
sbb
repz
cmp
jmp
xor
push
cmp
mov
adc
divb
lret
sub
jo
cmpsl
pop
lcall
xor
adc
jge
mov
or
jg
mov
xchg
punpckhbw
mov
adc
push
xor
xor
outsl
cwtl
incl
or
sarl
incl
out
xor
jmp
xchg
xlat
add
rclb
xlat
orl
iret
jae
mov
sti
movsb
pop
mov
aaa
fstl
mov
pop
jg
add
jge
push
mov
fistpll
push
add
cmpsb
incb
sbb
stc
sti
pop
cmp
mov
adc
mov
push
jne
gs
int
mov
ja
xor
jmp
inc
mov
mov
jmp
pop
mov
and
lret
cmp
aaa
insb
cmp
out
jp
sbb
jle
inc
and
movl
cltd
push
stos
mov
arpl
loopne
sub
push
xor
adc
push
mov
add
stos
mov
sbb
les
and
aad
push
xor
push
idiv
repz
pop
inc
mov
cmpsb
ds
out
int
sbb
popa
adc
dec
jp
loope
inc
sahf
addr16
dec
out
ss
imull
sbb
in
out
dec
arpl
cmp
aaa
and
int3
cli
hlt
andb
jne
in
ret
mov
add
daa
adc
or
aas
icebp
pop
mov
clc
cmp
jo
mov
int3
or
mov
push
jnp
sbb
mov
mov
xchg
inc
cmpsl
mov
xor
fsubrl
cld
sti
call
dec
add
stos
push
sar
jmp
call
iret
test
mov
scas
push
cld
jmp
mov
cmpsl
mov
inc
aas
movsb
das
pop
xor
pop
incl
pop
das
push
mov
mov
xchg
aas
into
gs
add
push
inc
ss
cmp
sub
push
dec
adc
rolb
pop
cwtl
mov
test
xchg
cmp
adc
pop
lods
ljmp
pop
push
jmp
inc
xor
aaa
scas
ljmp
jp
es
int3
movsb
pop
iret
mov
cmp
das
pop
sub
xchg
std
dec
push
lahf
leave
fstp
push
popf
test
idivb
mov
insl
mov
xlat
repz
arpl
push
mov
mov
sbb
sub
mov
pop
psubb
pop
sti
cmc
pop
mov
mov
xor
int
fmulp
movsb
sbbl
dec
push
xlat
lcall
outsl
in
sbb
pop
mov
jae
mov
pop
jno
adc
cs
fsubr
mov
es
push
push
and
into
mov
push
dec
gs
lock
mov
decl
xchg
and
aam
scas
or
es
rcrl
lcall
enter
repz
jg
ja
xchg
add
sub
outsb
cmp
loopne
fs
jecxz
or
in
xchg
subb
xchg
sti
inc
cmp
cmp
stos
push
dec
mov
sub
jb
fnsave
push
adc
jb
jb
mov
aam
mov
mov
jl
stos
cmpb
jge
cmp
scas
lret
ds
cmc
dec
lds
jno
cmc
in
adc
push
cmpsb
dec
mov
ja
push
xor
nop
mov
or
mov
call
nop
jbe
icebp
ror
dec
pusha
loop
jbe
jle
dec
dec
pop
cmpsl
ret
adc
jge
aam
test
mov
ret
fldl
push
mov
shl
popf
in
adc
dec
mov
push
pop
jg
into
mov
je
push
xchg
pop
mov
mov
lods
shr
push
mov
push
in
xchg
gs
pop
mov
out
call
sbb
stos
pop
mov
outsl
aam
insw
mov
add
gs
dec
fcompl
movsl
cltd
mov
data16
popf
lea
in
dec
std
xor
pop
sar
pop
mov
and
cs
js
imul
mov
mov
sub
loop
xchg
rclb
insb
js
push
push
mov
mov
popf
jecxz
pop
xchg
rcrb
fimull
test
daa
and
inc
subb
ja
subb
test
out
es
call
cmp
mov
mov
cmp
test
sarb
aas
xor
mov
stos
pusha
push
les
dec
out
nopl
pop
push
sub
nop
bound
sbb
movsl
mov
push
jns
int3
push
iret
out
lods
inc
sbb
ss
inc
idivl
dec
pop
test
jg
cmpsb
and
jp
jp
push
mov
inc
iret
cmp
jne
movsl
ja
addr16
dec
out
int3
out
inc
hlt
push
out
mov
jmp
xor
pop
pop
xlat
push
lahf
xchg
pop
in
push
mov
ror
mov
pusha
wrmsr
or
fwait
mov
out
mov
jmp
pusha
mul
cld
mov
test
mov
cmp
jecxz
js
jmp
out
imul
scas
push
xor
xchg
adc
mov
in
and
sbb
mov
outsb
mov
xchg
es
jmp
sbb
pop
mov
imul
cmp
ficoml
pop
sbb
repz
push
es
out
pop
adc
and
movsb
cmp
mov
mov
test
mov
pop
adc
cmpsl
dec
mov
out
or
mov
sar
mov
inc
repz
incb
sarl
int
subb
dec
outsb
out
pop
pop
mov
loop
loop
cmp
dec
rorb
cmp
pop
jae
lods
mov
fimuls
into
jnp
lds
jmp
add
or
sub
inc
out
ret
adc
push
fs
iret
adc
mov
insl
jl
test
add
cmpb
dec
add
enter
push
call
sbb
lock
mov
jg
add
cmp
jge
push
inc
or
mov
add
cli
jg
xor
cmp
mov
mov
cmc
and
xchg
or
jp
fs
out
jns
jo
sub
pop
sub
leave
inc
test
push
imul
fisttps
jno
aaa
cmp
cli
xor
sbb
mov
ret
ljmp
icebp
in
aas
fucompp
ret
and
push
xlat
imul
push
push
mov
inc
inc
jl
cld
cmpsl
or
mov
es
or
mov
mov
stos
push
gs
xlat
das
imul
insb
mov
fcomip
xlat
mov
addb
fs
xchg
jmp
dec
shll
xor
push
hlt
mov
je
in
add
and
inc
pusha
or
or
jp
mov
je
rcl
testb
mov
addb
or
mov
add
add
mov
or
fldt
lods
jl
std
loope
cmp
cmp
cmp
cmp
out
in
movsl
adcl
xchg
movsl
xchg
daa
push
jns
cmp
cmpb
fadd
lds
fs
xor
stos
out
bound
jae
pop
outsl
and
inc
pop
jl
scas
roll
icebp
sbb
loop
sub
mov
fld
xorb
xchg
fisubrs
fidivs
fstps
in
repz
jns
cmp
ljmp
dec
or
jl
fildl
jbe
loope
pushf
mov
gs
xchg
test
fwait
sbb
cmp
pop
rorb
popf
push
jmp
outsl
int
adc
addr16
fstpt
outsb
sbb
je
xchg
pusha
jae
lods
sbb
aam
sub
scas
sbb
mov
sbbb
cmpb
fwait
xchg
and
ds
data16
add
lret
test
pusha
or
orb
test
loopne
push
mov
dec
mov
dec
add
fwait
mov
push
rcl
mov
nop
cltd
and
inc
lods
fdivrl
pusha
je
stos
mov
xor
je
lods
xchg
insb
adc
mov
int3
jg
sub
mov
and
push
mov
stos
mov
pushf
fwait
outsb
idiv
sbb
inc
push
ja
cli
jecxz
push
loope
jbe
dec
xor
call
cmp
lods
test
sub
mov
cmp
aad
pushf
add
or
cmp
dec
mov
loop
jo
xchg
pop
inc
add
stc
mov
cltd
sbb
mov
pop
adc
xchg
push
mov
js
shlb
mov
fnsave
in
mov
repnz
das
push
mov
push
mov
inc
add
addl
icebp
cmp
fldt
inc
repz
int3
push
mov
jb
shll
push
sub
xchg
fstpt
ss
pop
push
fdiv
add
cmp
ja
es
mov
push
pop
cmp
mov
mov
loop
scas
adc
xor
mov
or
test
sbb
sbb
and
push
adc
inc
push
fisubrl
test
stos
pop
in
mov
jecxz
fidivl
aaa
stos
movsl
pop
push
mov
stos
fisubrl
pop
outsl
dec
fistps
inc
daa
outsb
jle
iret
out
cmpsb
dec
jg
pop
outsl
scas
scas
jnp
ret
dec
cmc
out
andb
sbb
loope
dec
xchg
and
bound
jns
mov
out
sub
xchg
and
xchg
or
dec
das
test
imul
xor
in
fdivrs
lret
dec
mov
push
clc
outsb
test
stos
ljmp
arpl
bound
fs
pushf
xor
jmp
pop
pop
pop
mov
test
inc
add
iret
sbb
shlb
push
bound
or
sub
xor
idivl
jecxz
cmp
outsb
cld
mov
jno
jle
inc
add
rol
xchg
dec
mov
sub
inc
aad
sub
scas
mov
cli
pusha
sub
add
lret
shl
push
xor
loopne
xchg
pushf
cwtl
jo
test
or
cmpsb
add
and
inc
mov
lock
jne
jg
pop
das
dec
add
adc
push
iret
sbb
enter
inc
lea
aad
das
add
push
mov
fnstcw
scas
aad
cltd
mov
inc
fucom
xchg
fnstcw
loop
das
mov
mov
jb
add
and
push
xchg
icebp
xchg
sub
mov
aad
stc
ror
lret
fs
imul
or
inc
and
repz
rorl
adc
int3
and
mov
or
inc
notl
add
dec
sarl
popl
mov
popa
pop
cmp
or
lods
loope
test
jnp
in
inc
test
mov
adc
xor
into
jmp
nop
inc
add
rol
mov
add
out
fdivrp
sbb
dec
mov
cld
dec
sbb
pop
mov
in
test
popa
fildl
fistpl
add
imul
sahf
push
push
addb
add
xor
inc
push
and
jecxz
adc
pop
in
call
sbb
mov
cltd
je
mov
nop
cltd
add
aam
jbe
js
imul
and
and
dec
jecxz
pushf
not
fcoms
inc
ja
push
in
iret
incl
jns
cmp
mov
cli
cmpsb
dec
adc
jb
call
jp
push
das
in
mov
cmpsb
call
jb
adc
push
in
test
les
mov
shll
xor
pushf
and
loope
pop
out
mov
movsb
stos
daa
push
ror
mov
cs
dec
sahf
push
pusha
xchg
xchg
in
orl
fists
flds
inc
pop
mov
xchg
mov
inc
sub
nop
fdivs
lods
dec
pop
dec
jo
bound
das
aad
outsb
call
call
mov
inc
xchg
pop
xchg
rorb
pop
outsb
jae
outsb
pop
dec
ljmp
in
mov
outsl
mov
sub
push
sub
and
scas
mov
lret
repnz
imulb
sub
negb
bound
and
add
into
outsl
mov
mov
aaa
ljmp
aaa
cltd
xchg
mov
fisttpll
lahf
add
mov
xchg
xor
fwait
insb
pop
mov
ret
pop
leave
jne
xlat
popf
aas
xlat
rolb
jmp
inc
insb
push
aas
mov
shlb
or
test
xchg
rep
ljmp
pop
adc
shrl
insl
arpl
popf
rorb
jnp
std
test
popa
stc
out
jl
leave
xor
add
lcall
sti
in
movsl
out
push
mov
data16
or
ret
jb
xor
cmp
mov
mov
sub
pop
or
sub
testb
pusha
pop
rclb
icebp
xchg
push
add
test
inc
les
mov
jmp
push
js
add
lods
inc
jl
addr16
rcll
inc
insb
adc
dec
mov
xchg
mov
mov
mov
fistps
dec
inc
jmp
negl
or
cmpsb
xor
mov
ret
xor
push
sbb
sub
mov
add
lret
mov
call
sub
xor
inc
rol
inc
test
shl
ds
into
shlb
or
loopne
outsl
mov
cmp
shr
push
lret
sbb
or
sbb
dec
orl
and
inc
inc
mov
andl
push
xchg
imul
in
mov
je
xorb
sbb
cmc
inc
and
mov
cmp
add
xor
inc
shr
push
test
rorb
sbb
adc
dec
jge
or
add
add
sub
or
repnz
add
jbe
add
push
rcrb
sahf
cli
loopne
cmp
dec
shl
fildl
sub
test
mov
inc
push
xor
scas
xor
rcl
inc
push
lret
pusha
dec
sbb
push
pop
xlat
out
dec
cmp
pop
loopne
int3
scas
or
arpl
xorb
imul
lahf
push
imul
mov
jbe
aad
cmp
nop
pminub
sub
mov
xchg
sar
daa
std
out
push
mov
es
loopne
hlt
push
cld
lods
enter
mov
icebp
dec
cmp
mov
mov
lods
dec
popf
jno
mov
mov
push
mov
addr16
popa
das
mov
inc
xchg
xchg
xchg
push
out
loop
cmp
adcl
les
negb
sarl
adc
dec
mov
inc
cs
cmp
dec
and
add
jge
push
mov
clc
popf
decb
push
sub
push
mov
repnz
jbe
xchg
jg
mov
icebp
mov
ds
xor
and
xorl
mov
addr16
test
mov
push
sahf
jl
in
inc
xchg
inc
test
or
fmuls
sar
add
arpl
aas
int3
mov
pushf
insl
jne
adcl
adc
push
xor
fwait
xchg
lcall
pop
adc
xchg
aas
mov
and
jmp
and
adc
icebp
fcmovbe
lahf
shrl
outsl
xchg
push
lds
inc
inc
push
test
xchg
lock
xchg
push
test
mov
out
fbld
adc
scas
lods
fidivs
inc
hlt
pop
xor
pop
test
mov
jmp
pop
ljmp
pushf
jmp
mov
xchg
pop
xchg
and
stc
push
cmpsl
ficomps
insl
jl
mov
xchg
push
sub
pop
xchg
ja
cwtl
push
das
xor
rcrl
icebp
mov
aam
cmp
jno
xchg
ljmp
cmp
in
test
loope
mov
xor
mov
loope
xor
call
cmp
inc
lcall
movsl
out
cmp
lcall
lods
lea
pcmpeqd
push
ljmp
rcll
stos
cmp
int
cmpsl
adc
cmp
mov
rcrb
and
push
sub
pop
inc
cmpsb
rcrb
fldenv
je
fmull
rorb
inc
mov
xchg
enter
dec
and
fxch
xor
adc
jb
pop
jae
sbb
shll
sub
ds
add
add
adc
aam
cmp
mov
push
std
leave
outsl
cmc
cmpsb
packsswb
xchg
jae
jg
sbb
pop
dec
sarl
pop
push
arpl
lahf
pop
sahf
fildl
sub
push
or
gs
arpl
sbb
scas
add
into
test
enter
dec
dec
loop
int3
xchg
das
fmul
fstpt
cltd
idivl
pop
imul
sub
or
lret
aam
sub
int3
loopne
sbbl
arpl
xchg
sbb
dec
push
jge
xor
mov
dec
push
or
gs
xchg
xchg
lea
in
cmp
int3
mov
xor
stos
cmp
mov
and
or
or
mov
push
sub
scas
lock
jmp
sbb
mov
iret
pusha
sbb
dec
fucomi
pop
xorl
pop
das
fisubrs
mov
and
jp
in
add
pop
mov
repz
lcall
add
cld
jns
xlat
add
hlt
mov
stc
jmp
lea
stos
clc
leave
pop
mov
inc
cld
sbb
mov
call
sarl
jle
outsl
push
pop
ret
sti
repnz
cmp
mov
mov
int
mov
cmpsb
or
push
bound
cwtl
insl
out
dec
jl
jnp
mov
xchg
add
cmp
popa
jb
negb
hlt
or
cmp
mov
lret
jno
rclb
sub
or
scas
iret
dec
xor
ss
aam
movl
cmp
pushf
aaa
xlat
lock
pop
iret
fnstenv
or
rol
jge
mov
lock
and
inc
sub
pusha
cmpb
inc
sub
xchg
jne
mov
mov
insl
xor
xchg
xchg
fnstcw
stc
scas
in
pop
es
test
push
rclb
dec
or
int
inc
adc
pop
out
xlat
and
gs
cld
push
xor
in
stos
repnz
ret
std
insl
fidivs
jg
lcall
loope
mov
ret
sarb
movsl
push
sub
int3
dec
test
mov
dec
mov
popa
push
inc
add
pop
push
dec
into
push
xlat
mov
inc
jns
popa
jl
cmovs
mov
je
addr16
xchg
lock
loop
insl
sub
or
ja
stos
dec
insl
xchg
hlt
xchg
je
jns
or
xchg
push
sub
pop
mov
lods
orb
push
arpl
push
xor
std
mov
or
subb
pop
imul
adc
lods
cmp
gs
pop
lea
test
andb
sub
inc
adc
xor
stos
or
adc
cmp
lret
push
hlt
andb
cmpb
call
pop
pop
xchg
jl
mov
out
stc
rorb
jns
je
incl
sub
pop
popf
addr16
push
add
lds
loope
pop
pop
aaa
stc
ds
std
mov
fdivr
mov
mov
pop
int
sub
lret
insb
mov
gs
lds
mov
cmp
mov
stos
bound
stc
mov
je
push
add
pop
push
pop
ja
sub
mov
icebp
cmpsb
sbb
sub
sbb
into
in
mov
lods
pop
mov
jnp
pop
and
mov
popf
jo
mov
jmp
repz
mov
mov
pop
int3
andb
in
xchg
lea
push
add
push
and
or
jmp
and
in
in
add
fldt
dec
int
jb
mov
scas
push
inc
mov
adc
jnp
sarl
mov
in
insb
lahf
subl
lret
dec
mov
pop
xchg
arpl
aas
mov
lcall
cmp
xor
movsl
cmpsl
dec
jo
jmp
ret
push
mov
mov
fld
mov
ds
push
rcl
sbbb
mov
scas
jg
mov
aaa
inc
sub
push
movswl
std
cld
or
pop
mov
outsl
repz
sub
cmp
jne
mov
fstpl
movsb
pop
mov
xor
xchg
jo
inc
sub
jecxz
jae
pop
into
stos
mov
aad
in
push
loop
ficoms
pop
add
mov
push
ljmp
inc
push
loope
jae
jmp
insb
fldenv
sbb
mov
adc
out
clc
js
add
xor
addr16
dec
outsl
xor
test
mov
sbb
lods
js
mov
leave
or
lret
mov
sbb
lcall
xor
xchg
jl
pop
push
mov
data16
ljmp
jns
mov
adc
push
ret
pusha
inc
xor
mov
flds
sbb
xchg
xchg
cmpsb
pusha
cld
leave
inc
loopne
xor
cmp
xor
cmpsl
xor
leave
mov
mov
dec
lahf
dec
and
mov
inc
pop
sbb
je
mov
mov
test
cld
bound
adc
mov
and
jb
pop
das
stos
ret
sti
orl
xchg
dec
call
mov
addr16
jle
hlt
mov
xchg
cmp
push
insl
jnp
ja
cmp
shr
jl
jno
push
push
cs
jg
push
adc
jnp
inc
inc
cld
mov
bound
fldt
ds
mov
adc
dec
orl
sbbl
pop
outsb
adc
xchg
sub
jge
fsub
jle
cmp
xchg
or
stc
jne
lds
cmpsb
out
push
xchg
sahf
push
xor
gs
inc
fisubrl
nop
iret
pop
adc
lea
ret
or
daa
cmp
xchg
mov
dec
dec
and
or
cmc
jp
mov
add
and
cmp
jne
enter
lahf
xor
inc
lods
stos
pop
adc
imul
pop
dec
jl
je
fdivrl
and
dec
pop
outsb
ss
dec
shrb
aaa
jmp
pop
fwait
and
dec
jg
fdivrl
add
xchg
xor
fildl
popf
sbbl
test
mov
inc
xchg
sbb
fisubs
and
add
dec
stos
xchg
and
rcrb
pusha
jl
cmp
push
outsb
dec
nop
cmp
mov
xor
out
cmp
mov
in
pop
fwait
or
je
loop
sbbb
adc
xchg
fcoms
cld
or
int3
out
mov
or
insb
and
aas
lods
test
dec
sbb
mov
mov
mov
outsb
insb
xor
push
movl
mov
repnz
nop
inc
pop
dec
inc
and
pop
test
mov
pop
xor
leave
cmp
xchg
clc
or
mov
push
std
sub
imul
pushl
in
pop
in
jge
cmc
pop
pop
in
and
bound
adc
fcoms
imul
sti
or
dec
or
jmp
lock
fs
push
call
sti
movsl
or
add
addr16
push
clc
mov
mov
or
xchg
inc
sbb
inc
and
sbb
or
dec
jns
mov
cmp
daa
adc
push
cmpsl
mov
sub
jbe
dec
push
push
pushf
xor
hlt
push
in
jbe
mov
add
push
mov
mov
cmc
pop
push
cmpsb
scas
cmpsl
xor
dec
mov
or
jns
jne
aas
add
mov
paddusw
mov
rcll
push
pop
into
jg
jg
pop
jb
cmpsb
in
sbbb
and
jl
push
data16
scas
adc
jb
mov
iret
mov
dec
xchg
in
push
jnp
fbstp
jmp
cmp
testb
pop
dec
lcall
sbb
insl
xor
repnz
outsb
out
in
scas
inc
dec
and
pop
out
xor
xor
cmpl
aad
add
stos
jecxz
mov
test
cwtl
clc
inc
leave
loopne
xor
cmp
fidivs
xchg
push
add
dec
lods
jg
mov
dec
popf
test
cmp
cltd
mov
les
xchg
arpl
outsb
arpl
sti
jge
popf
jecxz
addl
adc
and
test
dec
sbb
xchg
cmc
rol
jbe
mov
scas
lea
pop
int
imul
inc
repnz
jae
fsubrl
aad
fisubrs
scas
mov
movsl
mov
jnp
vmptrst
mov
push
mov
xor
test
aad
hlt
in
pop
out
addr16
mov
icebp
jb
divl
dec
bound
pushf
es
push
shrb
insl
push
ss
fimull
push
lahf
repz
mov
or
std
push
push
sahf
xchg
mov
ss
scas
jbe
adc
out
std
adc
leave
out
inc
cmpsl
mov
xor
mov
pop
add
dec
or
xor
bnd
mov
stos
int3
fcmovbe
leave
xor
stos
xchg
addr16
adc
jle
stc
sub
into
mov
pop
xor
int
xor
xor
popa
dec
ret
and
scas
xor
mov
adc
xchg
or
and
rcr
dec
lret
adc
insl
out
pop
popf
ret
adc
cmp
ret
test
jecxz
addr16
std
sbb
mov
mov
stos
pop
add
out
mov
jp
or
int3
push
jno
sbb
shrb
jnp
daa
popa
in
pop
nop
mov
loopne
sub
lret
sub
pop
push
nop
mov
jl
js
push
ja
mov
iret
out
mov
mov
xor
scas
adc
adc
cmpsb
imul
daa
sub
xchg
mov
and
lret
cltd
imul
inc
cmpsl
imul
cs
daa
sub
pop
out
ja
cmovp
fwait
js
fcomps
cli
push
jbe
xchg
aad
push
pop
adc
push
xor
sub
daa
xchg
sub
fdivrl
icebp
mov
in
sbb
push
adc
int3
pop
jp
or
and
mov
inc
or
data16
imul
jne
into
or
pop
dec
jnp
jecxz
outsl
imul
movsb
cmp
cs
iret
and
ja
aas
movsb
rorl
lcall
mov
add
and
lods
jnp
cmp
mov
xor
mov
jl
hlt
pop
xor
je
inc
mov
cs
test
jmp
shll
adc
test
cltd
out
test
mov
inc
aaa
jb
popf
int
pop
std
fsubrp
les
jl
mov
push
dec
mov
push
push
stos
dec
pop
fistpl
or
pop
jbe
inc
xchg
sbb
mov
movsl
xchg
pop
lahf
rcll
cld
dec
shlb
lret
xchg
push
pop
mov
lret
movsb
repnz
and
mov
in
xchg
icebp
dec
pushf
push
popa
sub
sbb
data16
xchg
cmp
and
xchg
mov
pop
out
cmp
or
lods
jno
mov
fucom
inc
sub
pop
je
add
sbb
mov
xchg
push
adcb
lahf
mov
scas
int
inc
loope
adc
test
pop
out
clc
mov
push
aam
leave
movsb
jle
cmp
divb
jno
clc
arpl
test
rorl
test
movsl
mov
loopne
out
fldl
loopne
mov
fisubrl
fisttpl
jge
mov
out
xchg
ljmp
cmp
jle
xchg
inc
pop
test
xor
push
fsub
or
lret
outsb
jnp
cmpsb
cs
xchg
lock
adc
add
data16
out
push
lret
xchg
xchg
lods
and
sub
jp
enter
push
bound
daa
mov
xor
fs
push
xor
iret
push
movsb
add
idivl
push
inc
inc
jmp
fsub
push
sub
testb
out
and
pop
push
mov
mov
lds
jmp
and
fwait
mov
in
ret
cmp
ret
lcall
sub
repnz
xchg
fdivrp
sub
outsb
xchg
push
dec
cmp
jns
lret
mov
leave
inc
adc
dec
bound
bnd
into
out
pop
adc
mov
fwait
aas
or
lret
aam
xchg
outsb
gs
fs
add
adc
mov
xor
mov
xchg
aam
addr16
xor
dec
into
pop
out
iret
jg
test
lahf
push
mov
mov
aas
in
mov
lret
mov
adc
dec
jns
bound
inc
or
jo
stc
or
mov
daa
inc
in
cs
cmp
testb
in
or
pop
mov
data16
pop
or
push
mov
data16
and
mov
int
pop
repz
ret
mov
push
je
in
shlb
scas
dec
pop
into
movsw
pop
mov
add
ret
mov
pushf
aam
jp
shl
cltd
or
out
lea
and
pop
ja
sub
xchg
sti
inc
int
stos
int
sbb
or
aam
lret
and
mov
and
xor
leave
mov
inc
je
xor
xchg
sbb
ret
jo
inc
movsb
ja
mov
fs
es
in
das
pop
ljmp
cmpl
in
sbb
lods
cmc
cmp
in
pop
xor
xchg
sbb
adc
or
inc
sbb
cwtl
outsb
sbb
ret
stos
scas
fldl
mov
xchg
adc
push
or
repnz
cmp
or
xchg
dec
push
aam
hlt
repnz
jecxz
push
add
sub
mov
xlat
test
rcrl
shl
inc
test
arpl
lods
fstl
sub
mov
in
xchg
push
cmpsl
xchg
ja
js
int3
sbb
cmp
pop
shrb
repz
enter
leave
daa
cli
mov
cmp
scas
test
scas
adc
outsb
in
inc
dec
mov
cwtl
insl
pop
aaa
dec
jbe
push
mov
out
bound
ss
inc
mov
cmp
movsb
mov
jo
pop
loopne
and
rcl
in
adc
lds
add
pop
sub
cmc
inc
mov
push
data16
inc
test
xchg
cmpsb
das
mov
jmp
stos
js
dec
ds
lret
stos
pushf
adc
xchg
lret
mov
mov
idiv
sbb
cmp
cmp
ss
dec
mov
ds
repnz
lea
faddp
adc
hlt
mov
out
sub
imul
inc
fildl
inc
int
out
lods
dec
xchg
cmp
fwait
mov
cmp
out
stos
cltd
es
inc
leave
push
inc
push
push
stos
lcall
cmp
fistpl
popa
test
movsl
push
ljmp
mov
gs
xor
aam
xor
push
xor
in
stos
fsubrl
pop
aad
dec
cmpsb
xchg
lret
jb
aas
push
push
repz
mov
mov
xor
pusha
repnz
das
dec
ja
addr16
fstl
divl
mov
fstl
xchg
js
fdiv
cld
jbe
adc
xchg
inc
fs
adc
jo
imul
cld
mov
xor
incl
inc
stc
cmpsb
mov
jns
sti
mov
push
orl
in
push
add
and
and
inc
jge
mov
sahf
repz
cmpsl
leave
mov
pop
sbb
sub
mov
fisubrs
jp
imul
imul
mov
adc
mov
push
mov
mov
sbb
ljmp
cwtl
jge
cmp
leave
adc
loop
std
rcrb
cltd
sahf
aad
mov
push
pop
sub
pop
popa
push
movsl
mov
jmp
xchg
pusha
pop
lods
inc
cmp
pop
xor
in
ja
arpl
mov
push
hlt
mov
lahf
inc
stc
lahf
jp
arpl
push
aaa
mov
fs
sbb
mov
out
or
lret
mov
out
das
jns
shl
inc
fnstenv
lock
and
push
out
adc
mov
or
mov
mov
fistpl
mov
out
leave
insb
mov
loop
lret
negl
lods
push
outsb
mov
jl
mov
cmp
out
and
mov
hlt
shll
imul
xor
or
lahf
jp
push
cld
fnstsw
rcrl
pop
and
sarb
shrb
daa
push
ja
mov
fldenv
fstpl
repnz
pop
cmp
mov
cs
dec
daa
test
ja
in
movsb
in
pop
mov
dec
mov
scas
sub
jp
xchg
and
cs
dec
fsubp
sub
js
cmp
push
lret
imul
outsl
push
pushf
cmc
gs
sbb
in
sti
or
dec
inc
and
pusha
or
test
pop
fs
mov
lock
testb
sub
pop
lcall
call
outsb
sbb
test
ret
ljmp
arpl
push
jge
cmp
js
lea
out
mov
pop
scas
mov
add
xchg
sub
js
pop
mov
push
lods
sbb
jg
xchg
lods
pop
pop
or
stos
les
fimull
in
imul
or
pop
loop
xor
jbe
jnp
das
cltd
jb
shr
mov
mov
xchg
adc
mov
sbb
fcomps
icebp
cwtl
imul
cmp
jo
addb
push
adc
imul
loop
inc
cs
mov
mov
mov
dec
mov
fnstsw
movsl
enter
sahf
jb
xchg
bound
fcomp
push
jae
mov
adc
fisubs
xor
out
lahf
fsts
rclb
in
xor
pop
insl
fimull
aaa
lret
test
xorl
sbb
int3
mull
popa
pop
fwait
lea
jcxz
mov
or
out
les
jns
sbb
adc
in
jae
loope
xchg
sbb
ja
mov
push
bound
inc
cmp
jnp
std
pop
mov
gs
dec
fwait
rorl
in
test
jno
xor
or
mov
cmp
add
lock
test
inc
pop
xchg
cmp
lock
scas
imul
bound
nop
fisubs
pusha
pop
stc
scas
jo
jnp,pn
loope
aas
lcall
sub
mov
repnz
jno
cwtl
jmp
dec
inc
add
stc
pop
and
xchg
push
lret
mov
sarl
jp,pn
add
pop
int
mov
into
out
js
add
insl
add
dec
pop
shrl
ret
jmp
lahf
jo
lahf
and
test
rdtsc
cwtl
xchg
enter
pop
std
ficompl
fs
std
lds
rcr
lret
lods
inc
fmull
inc
sahf
fisubrl
pushf
jg
xor
lret
je
inc
mov
dec
jmp
cwtl
scas
mov
mov
jae
movsl
push
lea
or
mov
push
mov
rcl
pushf
or
insl
inc
fwait
and
mov
xor
scas
ret
dec
adc
scas
inc
les
or
push
das
out
int3
and
je
in
or
insl
mov
push
push
cs
mov
pop
cld
lret
loope
daa
rcl
xchg
pop
xchg
out
ja
mov
pop
or
cli
clc
movsl
sub
sbb
dec
jmp
mov
xchg
mov
add
sbb
out
inc
das
push
and
mov
mov
aaa
jae
fcomip
outsl
in
and
mov
shrb
sub
inc
push
fisubl
sbb
dec
ret
or
jb
mov
in
idivl
lcall
adc
out
pushf
dec
inc
jnp
xor
cmpsl
inc
push
pop
xor
push
mov
scas
shrl
mov
push
dec
in
arpl
dec
pop
mov
lahf
add
sbb
mov
lds
xor
cwtl
adc
mov
sbb
adc
loop
adc
bound
xlat
js
movl
push
or
stos
outsl
cmp
sub
push
jp
ret
fldl
adc
aas
popf
cmc
aam
int3
cmp
or
jmp
stos
xchg
fdivl
xchg
dec
jmp
mov
dec
cmp
push
adc
hlt
xchg
test
pop
dec
jp
mov
jnp
adc
dec
scas
movsb
es
push
jecxz
in
scas
mov
lds
insb
and
or
jne
sarb
mov
jmp
pushf
filds
test
std
lock
pushf
sub
jbe
lock
popa
jne
nop
and
and
std
cmp
sbb
andb
scas
movsl
imul
pop
int3
popf
or
pop
popf
ljmp
nop
adc
xor
xchg
cmc
push
pusha
or
lods
cltd
push
shrl
push
xchg
adcb
xchg
loopne
fucomip
jnp
jae
xorb
cmp
cld
or
out
lahf
inc
push
xor
xrelease
push
dec
popf
mulb
scas
ds
mov
scas
sub
push
mov
mov
inc
xlat
pushf
aad
push
xor
pop
enter
in
insb
mov
notl
aad
nop
cli
inc
mov
call
int
sbb
fs
insl
je
mov
push
lods
pop
cltd
les
in
xchg
cmc
outsb
jne
clc
pop
dec
mov
push
fs
jno
jnp
stc
gs
mov
ja
mov
jb
cmp
jle
adc
iret
ss
stos
outsl
mov
fsubrs
jge
fsubrs
les
call
jbe
stos
pop
or
iret
jp
cmc
es
add
arpl
mov
hlt
mov
das
jge
insb
fistpl
xor
mov
enter
outsb
xchg
pushl
sbb
lea
add
mov
cmp
pushl
out
mov
add
dec
aaa
jmp
cmp
iret
sti
mov
xor
sbb
lds
in
jg
cmp
mov
addr16
lock
out
out
ret
mov
imul
and
mov
loop
add
decl
xchg
out
inc
jecxz
test
jmp
xchg
xor
out
mov
lahf
mov
mov
jne
mov
pusha
jg
sbb
cmpsb
sbb
lahf
loop
cmp
fbstp
jmp
repz
xlat
roll
sahf
imul
cmpsl
lock
dec
das
ss
adc
mov
jge
xchg
xor
fmuls
mov
sbb
mov
or
cmp
push
jg
movnti
mov
cmc
and
mov
xlat
jne
cld
leave
inc
lds
pop
mull
aas
out
rcrl
js
push
inc
jecxz
sbb
mov
inc
add
pop
xchg
dec
gs
jno
idivl
jae
and
push
mov
pop
mov
scas
ss
xchg
bound
repnz
jl
dec
les
xor
ljmp
jecxz
dec
mov
cmc
adcl
dec
aaa
lcall
loop
sahf
lret
pop
popf
ljmp
clc
outsl
cmp
out
call
or
lcall
jl
ficomps
orl
cltd
cmc
imul
jg
push
ss
pop
gs
cmp
dec
mov
pop
les
ret
cmp
push
aas
add
push
cli
mov
gs
or
gs
das
repnz
mov
imul
rorb
jecxz
jne
sbb
je
orb
es
inc
shll
arpl
mov
pushf
dec
jb
out
aad
jecxz
ret
in
pop
jecxz
popf
ds
inc
mov
stos
add
cmc
cmp
or
pop
stc
add
mov
dec
loopne
mov
push
into
inc
mov
pop
loop
xchg
adc
dec
cmp
pushf
std
jmp
int
jae
nop
cmp
adc
call
stos
fdivrl
scas
scas
fldcw
push
shlb
mov
cld
pop
cmp
outsl
xor
jno
pop
daa
xlat
adc
mov
andl
test
adc
insl
sub
mov
enter
jo
call
jae
test
sub
inc
inc
lret
mov
xchg
pop
iret
hlt
xor
push
imul
movsb
inc
adc
fdivrl
xchg
outsb
mov
cld
out
test
jae
mov
add
nop
mov
stos
mov
mov
loop
test
lahf
sub
ljmp
icebp
pop
adc
mov
jge
fsubr
adc
cwtl
or
neg
sbb
dec
sbb
pop
push
sub
sub
not
lret
sub
bound
mov
xorb
ljmp
xor
cmp
outsb
sbb
jge
mov
out
jge
movsb
in
and
popa
cmpsb
popf
and
pushf
push
iret
sbb
cmc
pushw
cltd
inc
add
ret
inc
iret
out
xlat
lods
jns
inc
sti
mov
sub
shrb
mov
ss
add
test
xchg
daa
leave
out
cmp
sarb
mov
add
cmp
sar
dec
andl
daa
ror
adc
pop
push
stos
das
push
pop
adc
insb
inc
cmpb
addr16
and
jae
pop
adc
xchg
fiaddl
sbb
stos
imulb
fucomp
lods
sbb
pop
cmp
mov
int
sub
daa
ss
lahf
cmc
ror
pusha
pop
dec
das
add
mov
push
pop
adc
jecxz
mov
pop
popf
lcall
test
sar
jl
leave
sarl
mov
dec
push
jmp
xchg
hlt
cmovno
in
inc
ret
insb
popf
addl
mov
jmp
jnp,pn
jnp
lock
movsl
les
xchg
rorl
lret
fisttpl
mov
lahf
mov
fnstcw
adc
add
sub
fcomp
cmp
dec
sbb
fldcw
scas
and
daa
sbb
fisubrs
jecxz
pushf
popa
pop
mov
adc
adcb
shll
xor
dec
jle
push
fdivs
testl
inc
in
ss
sbb
or
sbb
jmp
ljmp
dec
jge
cmc
dec
mov
mov
mov
lods
jno
xor
lods
fwait
cmp
jge
mov
lea
loope
sbb
xchg
dec
shlb
mov
cli
hlt
lods
loope
pop
dec
pop
pop
mov
mov
sub
ficompl
and
jle
shlb
hlt
fcoml
pushl
faddp
dec
mov
add
inc
test
mov
cmp
jge
jg
xchg
mov
dec
mov
inc
sbb
jmp
push
idiv
rclb
dec
outsl
mov
pushf
pop
mov
outsb
jl
test
adc
push
dec
sbb
dec
dec
jge
cmc
lcall
addr16
and
ret
xchg
flds
xchg
push
xchg
outsl
xchg
insb
adc
fldcw
imul
mov
shrb
xchg
mov
pop
outsb
loop
mov
xchg
mov
and
add
jmp
bound
pop
aad
pop
jmp
stos
outsl
mov
loop
fucompp
jbe
fwait
sbb
xchg
jl
dec
in
fimuls
jle
dec
imul
mov
aas
dec
jle
fisubrs
mov
cmp
roll
rolb
stos
pop
xchg
jbe
dec
mov
outsb
lahf
push
shlb
icebp
xchg
sbb
ret
cli
out
ficompl
iret
mov
fcompl
decl
arpl
rclb
mov
mov
js
sbb
popf
pop
mov
lods
les
mov
lret
jno
mov
dec
lret
fsts
insb
sarb
cmp
sar
rcl
rorl
loop
cmpsb
cmp
jo
adc
mov
dec
cmp
lods
xor
cmc
mov
in
je
pop
pop
sub
rcl
pop
idivb
gs
add
sub
aam
dec
jns
push
loopne
jecxz
or
loopne
adc
pop
subb
cli
popa
ret
dec
push
xchg
jb
mov
cmp
stos
jl
inc
das
sbb
enter
jb
mov
pop
mov
mov
test
in
add
sbb
cli
add
bndstx
repnz
xchg
loope
loopne,pt
testl
or
movl
iret
aam
popf
pop
inc
pop
inc
mov
lock
fiadds
out
mov
adc
roll
jns
adc
pop
les
jp
scas
stc
movsl
add
cmc
stos
das
in
jmp
hlt
dec
jb
dec
add
jb
js
scas
in
std
adc
loop
sti
inc
adc
inc
cmp
xor
jns
ds
loopne
clc
loope
sbb
in
xlat
out
lods
lea
vpshufhw
pop
push
cwtl
fsub
cwtl
scas
pushf
es
in
sub
xchg
inc
shrl
sub
out
fisttps
push
outsl
jne
cld
jne
pop
leave
adc
in
in
jmp
out
cwtl
repnz
push
enter
jge
sub
mov
roll
push
adc
stos
aaa
cmpsl
mov
shll
jnp
shll
fs
or
sbb
sbb
mov
pop
std
mov
jae
aad
and
ret
and
leave
ret
mov
ss
xorb
pop
mov
xchg
xchg
lcall
out
nop
and
fstpl
mov
testb
sbb
notl
pop
lods
out
hlt
or
xor
jae
call
cltd
xor
or
jns
das
mov
rol
mov
xchg
int3
mov
xchg
push
popa
fldpi
push
pushl
stc
xchg
inc
or
dec
xchg
mov
das
mov
aas
add
or
mov
cmp
cmpsl
and
cmp
xchg
movb
pop
out
adc
cmp
or
int3
cltd
mov
pop
cmc
mov
movsl
inc
sti
gs
push
leave
cwtl
mov
lcall
cmpsb
out
sahf
outsb
fisttps
xchg
mov
jae
pop
inc
out
iret
aaa
mov
ret
bnd
ret
xchg
fsubr
mov
inc
icebp
repz
fisttpl
xchg
daa
push
mov
dec
cmovge
adc
xchg
std
cmpsl
xchg
dec
lahf
outsl
call
dec
lcall
jns
cmpsl
fimull
or
in
mov
lock
lods
ffree
scas
dec
in
enter
jg
ljmp
test
cmpsl
inc
call
mov
orl
xor
jmp
cmpsl
mov
movsl
xchg
mov
cmp
add
sbb
xchg
dec
jne
pop
insl
icebp
daa
mov
sbb
push
mov
call
pop
mov
mov
ja
cmp
push
fisubs
cwtl
jb
push
sbb
data16
pop
pusha
mov
mov
int
loop
or
xchg
stos
or
jp
cmp
lods
mov
iret
adc
sub
jl
popf
cmp
fcoms
push
cmpsb
testb
pop
cltd
and
xor
mov
ret
dec
leave
and
icebp
fwait
pop
cld
cmp
scas
and
pusha
outsl
cmc
dec
scas
orl
cmp
icebp
in
pop
ja
xor
mov
dec
add
fisttps
outsl
inc
sub
punpckldq
push
pcmpgtb
lds
movsb
fldpi
dec
lcall
xchg
cmp
shr
xchg
and
lret
inc
jae,pn
dec
out
mov
or
rcl
cmp
lea
cltd
outsb
out
ja
sub
orb
mov
in
add
cld
jbe
jg
gs
mov
pop
push
lahf
imul
push
scas
sahf
call
fwait
mov
add
in
add
lcall
adc
aad
or
out
or
jge
idiv
adc
cltd
push
aas
push
ss
dec
fisttpll
cmp
xor
out
cmp
int3
iret
jmp
into
pop
jge
xlat
inc
pop
sbbb
pop
inc
xchg
xchg
cwtl
aad
xchg
addr16
dec
sub
mov
mov
push
push
mov
jle
jl
fists
mov
push
push
push
fistpl
xor
sbb
sbb
inc
xor
xor
lea
rcrb
outsl
call
ljmp
sbb
xor
les
and
cmp
shll
leave
push
mov
subl
vextracti64x2
lods
xor
dec
mov
jle
mov
xor
mov
arpl
pop
or
mov
inc
push
or
and
or
out
xorl
dec
lret
loope
pop
push
stos
mov
and
inc
sub
add
popa
add
rclb
add
out
movsl
imul
xor
sbbb
and
xchg
push
es
das
cmp
dec
and
push
cmp
cmp
or
inc
xchg
push
sbb
and
add
jecxz
out
sub
test
ret
loop
mov
loope
pop
test
jae
pusha
imul
pushf
mov
movsb
pop
dec
in
in
test
and
or
pop
push
xchg
pusha
pop
inc
or
xor
les
in
sub
das
cmpsl
sbbl
or
ja
pop
pop
cmp
lahf
into
cmpsl
sbb
imul
add
xor
xchg
mov
mov
mov
fcmovnb
or
ljmp
into
test
roll
xor
add
lea
inc
popa
dec
jb
shlb
push
ret
dec
mov
xor
and
xchg
and
das
roll
popf
or
sbb
xorb
mov
adc
sub
xor
insb
pop
out
sahf
in
lahf
xor
enter
dec
test
or
xor
mov
xchg
or
xchg
call
inc
pop
pop
outsl
push
dec
dec
xlat
xchg
adc
dec
xchg
pop
jb
mov
cld
insb
pop
fidivrs
loop
ret
inc
pop
cmp
cmp
inc
lcall
xor
nop
xchg
push
addr16
test
jbe
frstor
lret
rolb
lahf
mov
sarb
inc
das
aas
sbb
mov
outsb
or
sahf
mov
mov
imul
in
and
lods
sarl
dec
pop
sub
popa
inc
rcrb
cwtl
inc
orl
mov
adc
xchg
pop
xchg
mov
adc
test
mov
xor
dec
test
push
inc
adcl
xchg
out
clc
sub
push
stos
and
dec
push
lret
daa
xchg
xchg
mov
outsb
push
outsb
inc
mov
out
mov
test
sbb
jno
test
jne
adc
daa
xchg
adc
add
jae
shrl
scas
shlb
xor
addl
mov
push
rorl
dec
dec
popa
fsubrs
lret
xchg
sub
push
pop
scas
mov
mov
setg
ds
mov
sbb
fsubrs
enter
es
jbe
loopne
xor
loopne
lmsw
daa
adcl
lock
into
das
jmp
push
lock
outsl
sti
sti
jmp
jge
in
cwtl
push
or
mov
cmp
in
dec
fcmovne
leave
push
leave
xor
and
mov
push
dec
cmp
xor
xchg
xchg
lock
je
int3
xor
inc
mov
jae
xchg
testl
adc
pop
jbe
stos
fmull
mov
add
imul
push
adc
pusha
arpl
push
mov
cmp
mov
imul
pushf
sub
mov
jo
popa
pop
xor
mov
dec
mov
mov
pop
cmp
pop
cltd
nop
notb
jp
shrb
in
cwtl
nop
fnstcw
push
cs
out
repz
xchg
adc
test
pop
fwait
bound
sub
scas
xchg
adc
xor
sub
and
pushf
mov
std
idiv
dec
pop
stos
cmp
xchg
mov
mov
xchg
in
lock
movaps
fsubr
mov
into
sahf
cli
lahf
aas
inc
fists
pop
lds
imul
mov
mov
nop
jo
daa
sub
fnstsw
shl
lea
cmp
test
je
inc
and
andb
or
scas
filds
push
fcmovnbe
aaa
repz
cmp
std
mov
sbb
mov
subb
cmp
jo
fbld
mov
into
lea
insl
lea
addr16
cmp
or
shlb
add
xor
inc
popf
sti
mov
fdivs
insb
out
or
pusha
xor
xor
mov
lds
xchg
data16
mov
pop
mov
mov
cs
mov
leave
adc
push
pop
pop
fs
sub
test
fmull
pop
lcall
adc
test
out
push
push
sub
fisubrl
cli
outsl
mov
push
js,pt
cld
icebp
jge
das
in
pop
call
jle
std
cli
and
add
je
add
test
xchg
and
out
ret
cli
and
loop
sbb
mov
pushw
bound
in
push
push
repnz
xchg
adc
adc
pop
pop
pop
lcall
fcomps
inc
scas
stc
pusha
fistpll
xor
adc
icebp
sbb
pop
nop
dec
enter
or
lods
test
mov
inc
rol
in
mov
cli
fldl
iret
xchg
insl
mov
and
add
inc
ficoms
jns
das
jns
mov
push
mov
mov
jmp
in
mov
dec
add
scas
imul
test
add
dec
add
pop
test
add
xor
add
add
loopne
push
inc
ljmp
adc
out
mov
mov
xor
cmc
shr
fadds
lods
das
mov
push
ljmp
push
add
mov
enter
add
std
fistpll
idiv
cmp
mov
sbb
out
sub
push
in
jae
out
iret
mov
mov
xlat
and
addl
dec
add
sbb
and
push
add
dec
test
push
add
daa
out
aaa
cli
iret
jge
xor
js
ljmp
sbb
stc
call
sti
aaa
dec
inc
or
xor
aad
mov
or
mov
adc
mov
pop
pop
mov
sub
and
xchg
hlt
jmp
nop
dec
push
pop
dec
push
lret
sub
scas
mov
scas
jl
mov
cs
jp
enter
hlt
icebp
pop
scas
mov
xchg
mov
xchg
test
adc
cld
dec
imul
mov
mov
daa
push
and
or
dec
das
enter
push
and
aas
movsb
test
add
pop
add
lea
rcrb
mov
call
fists
mov
push
add
pop
add
pop
nop
mov
mov
test
sbb
xor
mov
and
add
xchg
vmulsd
imull
mov
data16
dec
adc
dec
push
and
push
and
mov
mov
and
nop
push
push
xchg
add
lret
mov
adc
jo
add
nop
xchg
and
inc
test
adc
or
in
sarb
jle
roll
call
push
repz
sub
xchg
stc
in
iret
movsl
sahf
xchg
xchg
jge
inc
lcall
std
inc
adc
popa
imul
das
sarb
aam
mov
jmp
pcmpeqw
jmp
dec
jg
popf
out
outsl
xchg
xchg
dec
jl
mov
xchg
divl
mov
mov
lahf
push
out
cld
and
sub
mov
stos
aaa
xchg
repz
rorb
push
add
xchg
add
scas
mov
xor
scas
insb
pusha
push
add
jnp
cmp
das
ljmp
xlat
das
cmpl
das
loopne
lock
xchg
fbld
mov
js
fsubrp
ja
fucomp
idivl
fsubrp
out
in
adc
pop
js
sahf
pop
jo
jecxz
pop
push
sub
push
cmp
jns
repz
out
lds
push
aas
std
jle
sarb
leave
inc
mov
sbb
mov
dec
add
mov
adc
aaa
popa
adc
inc
sub
and
xchg
pop
jl
mov
cmp
int3
jl
cld
fs
xchg
pop
and
fdivp
mov
loop
and
stos
std
sarl
jp
aaa
jmp
test
into
je
cmp
adc
lret
push
sbb
bound
orl
fildl
dec
test
orl
sbb
add
push
add
mov
call
imull
out
xchg
loope
jne
hlt
imul
pop
loop
xor
sahf
out
lods
push
jp
adc
jge
loop
jg
lahf
call
out
mov
sahf
mov
adc
ret
std
xchg
lahf
push
sti
pop
sbb
dec
adc
test
lods
mov
out
arpl
in
mov
push
and
loopne
push
sarb
inc
enter
push
rolb
and
shlb
add
sub
add
scas
in
inc
fsubrl
add
mov
push
cwtl
xor
dec
sbb
sbb
out
loope
push
std
fstp
imul
cld
inc
dec
xchg
sub
lahf
or
das
in
std
sbb
jno
sbb
xchg
bound
rclb
fdivrp
test
xchg
inc
enter
out
aas
insl
out
stos
dec
push
jl
aaa
mov
aas
sarb
jl
int3
out
bound
ds
inc
push
ja
inc
std
repz
sub
cmp
or
mov
jl
cltd
jg
push
xor
adc
test
jge
cmpl
jge
adc
loope
jg
cld
test
pop
outsl
sbb
jo
add
jbe
mov
dec
push
popa
test
and
add
jnp
or
hlt
iret
xchg
sti
jae
push
mov
xchg
jne
dec
inc
mov
outsb
popa
ss
aad
xchg
pop
mov
jno
ret
push
div
pop
das
cmp
insl
out
mov
mov
popf
fistpl
sahf
xor
enter
pop
out
add
dec
jbe
mov
cld
loope
jp
cmc
outsl
mov
sub
fdivrp
mov
dec
jecxz
xchg
std
dec
fsubr
jmp
cmpsb
pop
ja
add
cmc
lahf
xor
pop
add
xor
daa
loopne
popa
jo
mov
push
push
jg
in
add
les
les
sub
dec
mov
daa
dec
mov
mov
bnd
mov
mov
pop
cltd
mov
jg
popa
jg
jg
jns
fisttps
cmc
ljmp
je
push
push
fmuls
sarb
fwait
sbb
call
lret
mov
sub
ret
lret
inc
stos
ret
sbb
out
xchg
mov
pop
shlb
andb
jnp
in
dec
push
mov
lods
push
lret
lock
cmp
popf
ss
jecxz
dec
xchg
lret
jo
js
imul
push
xchg
dec
lahf
cmc
push
cmp
adc
jp
loopne
insl
rep
cld
test
pop
xor
pusha
lcall
cmc
fnsave
enter
daa
sbb
cmpsl
enter
jp
fisubl
sarl
sub
jge
xchg
add
mov
adc
test
sbb
arpl
sahf
sub
jecxz
xor
push
or
ret
push
roll
andl
sub
xor
enter
les
ja
int
test
stos
jecxz
add
repz
and
call
mov
cmc
sbb
into
idiv
notl
mov
iret
inc
js
lcall
lds
shll
inc
pop
mov
enter
inc
je
adc
movsl
ret
lods
push
cmpsl
cmp
pop
fisttpll
bnd
mov
push
jmp
es
sbb
xor
fsubl
add
loope
and
pop
jp
add
add
les
add
inc
or
pusha
inc
fmuls
stos
repnz
mov
sbb
call
sub
cmp
and
shlb
ret
and
cmp
cld
push
ret
xor
push
and
orl
cli
pop
and
add
ret
lea
adc
test
inc
std
stos
out
sub
and
add
std
loopne
stc
into
or
or
or
xchg
std
mov
cli
or
add
add
push
xor
mov
loopne
cmp
call
mov
divl
pushl
add
fisubs
cli
repz
ja
inc
and
loope
push
and
mov
sub
jns
daa
stc
js
and
fs
mov
or
repnz
mov
inc
cmpsb
or
and
sub
lods
rol
jl
or
xor
bound
shll
imul
lock
inc
mov
int3
xchg
outsb
dec
sub
out
xchg
xlat
pop
push
xchg
fcomps
pop
lcall
out
aaa
dec
mov
xlat
imul
pop
mov
mov
nop
xor
fdivrs
cwtl
test
enter
pop
and
pop
xchg
cwtl
in
dec
rclb
push
rclb
push
repz
pushf
cli
fiadds
lods
addr16
lods
ljmp
adc
aam
addr16
jo
dec
add
sub
mov
push
xchg
popa
mov
cmp
pop
cltd
sub
popf
bound
lock
pop
mov
rcr
hlt
sti
jae
idivl
cwtl
pop
jecxz
pop
xchg
hlt
cmp
in
cltd
adc
fwait
out
cmp
loopne
xchg
and
mov
cld
lret
add
decb
dec
aas
ja
push
xchg
mov
mov
icebp
and
adc
fisttpl
icebp
or
pop
ljmp
hlt
andl
sbb
and
add
enter
out
lds
ret
mov
pop
cs
cli
mov
ljmp
xchg
lods
mov
aaa
loop
incb
inc
nop
and
aad
loopne
adc
sbb
inc
push
rolb
roll
add
hlt
gs
test
or
sbb
add
xor
test
add
and
mov
push
testl
xchg
ljmp
outsl
dec
inc
pop
or
push
popa
cwtl
add
mov
dec
and
adc
shlb
jbe
inc
cmpsb
or
push
add
add
or
pusha
or
jp
and
rcll
mov
and
ret
inc
or
pop
popa
mov
pusha
je
cwtl
xor
jle
mov
orl
xchg
xor
and
mov
cs
loopne
sti
cmpsb
addb
jmp
orb
pop
xor
insb
das
subl
inc
xchg
pusha
aad
dec
cmp
repz
ret
or
enter
and
andl
adc
sarb
or
inc
cwtl
jnp
pop
test
add
int
pop
pushf
inc
in
inc
xchg
jmp
jb
sar
int3
xor
xchg
mov
arpl
inc
mov
fadd
clc
and
mov
shl
xor
sbb
adc
mov
inc
push
sbb
jl
loopne
aas
dec
or
push
cmp
add
in
sbb
jo
aaa
add
cmove
movsb
adc
push
inc
sub
pop
inc
mov
movsl
and
sub
pop
cmp
bound
inc
adc
xlat
and
pop
add
out
jo
cs
pop
mov
and
adc
daa
enter
enter
jl
shlb
ficoml
cmp
and
mov
enter
and
ss
shll
and
test
cmc
add
cmpsb
sbb
pop
or
icebp
loop
loop
inc
pop
lret
mov
inc
mov
sarb
mov
fsts
mov
add
fcom
repnz
cld
pop
jl
xchg
or
sbb
js
mov
cld
add
lahf
add
push
addb
loopne
pop
xchg
js
aaa
jl
paddb
lret
adcl
sub
mov
aam
or
adc
push
sbb
or
and
movsl
jne
lods
imul
lret
dec
aad
arpl
mov
insb
gs
sti
and
jns
lcall
lods
sbbl
lods
sahf
ds
fwait
xlat
jg
sahf
mov
push
pop
pop
push
outsl
mov
lods
lea
fs
imul
incb
inc
push
pop
fistpl
test
in
ror
lods
stos
std
cli
mov
repnz
popa
mov
insl
sbb
jo
push
idiv
push
insl
ja
imul
xor
scas
pop
fbld
cli
inc
jg
shr
sub
fildll
dec
xchg
popa
jbe
xlat
dec
xchg
ja,pt
decl
and
into
jmp
shlb
fxtract
pop
push
jnp
sti
pop
jl
divb
jl
call
dec
mov
add
stc
test
divl
loop
add
xor
mov
add
xchg
pop
std
xor
out
int3
xchg
mov
inc
mov
mov
jg
subb
int
sub
std
testl
jg
jg
inc
or
xchg
shll
mov
xchg
and
out
dec
pop
xchg
sbb
test
add
push
shrb
xchg
add
jge
push
mov
mov
data16
imul
loop
daa
call
mov
test
mov
push
std
stos
pop
out
sahf
rolb
cli
mov
and
cmp
mov
mov
add
jne
pop
jge
jne
xchg
out
jecxz
fldt
mov
in
mov
adc
adc
fwait
lret
popa
pop
insb
sub
imul
push
xchg
cmpsb
mov
out
sub
push
pop
jno
repz
jns
rol
nop
dec
imul
test
fs
jno
xor
mov
icebp
movsl
xchg
std
jb
mov
jecxz
push
repz
sub
fcmovb
cmp
dec
adcb
dec
push
cmp
adc
add
adc
mov
fisttpl
stc
ret
test
cmp
mov
sub
ja
mov
adc
in
inc
cs
daa
adc
xchg
mov
insb
divb
gs
sbb
xlat
fcom
and
mov
xor
jns
movsl
rcrl
mov
dec
xlat
mov
and
sbb
xor
addr16
cmovnp
xor
cld
push
pop
sub
fs
repnz
pusha
pop
outsb
and
inc
arpl
adc
fldcw
push
push
nop
lcall
enter
jno
dec
mov
sbb
ror
jecxz
inc
add
xlat
pop
test
adcb
ret
mov
cmpsb
push
xchg
sub
icebp
test
jecxz
cli
xor
jmp
xchg
mov
dec
cwtl
lret
jg
mov
pop
xchg
jb
bound
mov
push
adc
daa
jl
sarl
sti
adc
xchg
xchg
adc
lea
push
adc
iret
cmp
inc
iret
cmpsl
adc
data16
mov
or
mov
mov
arpl
cmpsl
data16
mov
lret
test
ds
push
loope
das
xchg
nop
mov
push
jl
dec
insb
inc
outsl
dec
push
adc
jo
inc
lret
ljmp
mov
jnp
call
xchg
cltd
sbb
shll
popf
adc
ss
es
test
repnz
ss
sbb
pop
lea
pop
pop
arpl
jmp
mov
jae
mov
xchg
cmc
xlat
test
into
subl
xorl
outsl
cmpsb
sub
fldcw
and
xor
push
xchg
stos
sub
sbb
push
xchg
pop
xor
test
popf
pop
push
xchg
fidivs
bound
mov
lds
cld
push
push
lea
popa
mov
bound
pusha
lock
and
cltd
lods
mov
mov
iret
xor
cmp
rcrl
dec
mov
add
and
icebp
dec
or
push
cli
in
xchg
loope
push
or
aaa
push
jb
xor
pop
mov
pop
sub
and
jae
ja
pop
jmp
add
and
sub
fldenv
adc
shlb
and
cwtl
mov
repz
pop
mov
cmpsb
shll
push
mov
jno
xchg
xor
popf
ret
add
sub
stc
mov
push
mov
movb
cmp
and
dec
dec
pushf
cmp
mov
mov
cmp
adc
push
xchg
lret
pop
ds
jmp
popa
push
lods
addr16
cwtl
jb
arpl
pop
loop
xor
pop
cmpb
pcmpgtb
bound
xchg
popa
leave
repnz
jno
inc
sub
dec
jne
sub
mov
xchg
and
pop
adc
aaa
setb
jmp
mov
test
jne
je
mov
pop
scas
and
sub
xlat
jmp
rcll
mov
data16
sar
notl
js
loop
push
xchg
sub
fcoms
pop
mov
xchg
xchg
adc
mov
lea
imul
xchg
pop
daa
and
cmp
pop
popa
outsl
xor
into
sub
pushf
popa
and
int
xor
inc
rcrl
inc
fnsave
or
mov
or
pop
adc
aaa
jnp
jae
int
sbb
pusha
les
jbe
lock
out
jne
mov
jo
stos
xchg
test
dec
in
shll
xor
or
insb
adcl
daa
sub
mov
pop
insl
in
daa
mov
mov
cmpsb
sbb
push
rcrl
adc
pop
inc
and
mov
dec
cmp
test
mov
cmp
fsubr
push
cmc
pop
xchg
outsl
cmp
divl
mov
mov
sub
mov
mov
dec
push
aam
xchg
daa
mov
movsl
mov
shl
js
ljmp
cltd
add
in
sub
push
adc
inc
add
cmp
lcall
lods
fnstcw
push
insl
mov
or
and
sti
stos
and
ja
xchg
pop
fcmovnbe
and
inc
je
xlat
push
jp
scas
cmpsl
scas
cltd
mov
stos
shrl
xor
inc
sub
dec
lret
xchg
inc
xchg
int3
call
pushf
insb
or
imul
push
jae
mov
jle
xor
lods
pop
enter
into
mov
xchg
divl
mul
shl
fimull
inc
leave
dec
jae
cwtl
jecxz
pusha
insb
pop
out
sbb
dec
lea
sbb
adc
outsb
popa
sahf
mov
lds
addr16
rclb
cmp
out
lods
rcrl
insl
sbb
mov
mov
pop
push
xor
js
int3
or
mov
and
jbe
ds
cmp
xor
sub
pop
xchg
sbb
je
insb
jecxz
outsb
dec
dec
xchg
cltd
sub
push
sub
mov
sub
stc
pop
fsts
jle
aas
xor
mov
int
jl
jno
loop
setno
dec
outsl
out
sub
mov
lahf
push
rcrl
mov
xchg
mov
jnp
in
push
enter
ja
mov
inc
fistpl
fcomps
jmp
cli
imul
mov
xlat
or
cltd
push
push
mov
das
mov
scas
fxam
mov
mov
cmpsl
inc
add
daa
push
mov
cli
mov
mov
pop
aaa
and
push
in
lods
btr
adc
inc
jmp
cmpsl
inc
clc
pop
and
js
and
fcomi
push
bound
mov
mov
lcall
das
inc
outsl
xor
push
cmp
out
jmp
jnp
xchg
sbb
mov
push
mov
xchg
outsl
mov
push
dec
cmp
mov
jnp
jp
sbb
fwait
mov
xor
jae
xchg
fwait
js
mov
jmp
mov
jge
int
push
xchg
dec
mov
xchg
int
fldt
push
push
repz
inc
push
into
out
mov
mov
jb
cld
xchg
cmpsl
data16
loopne
scas
in
pop
xchg
inc
popa
mov
enter
leave
mov
into
xchg
movsb
pop
push
aaa
inc
mov
push
lea
outsb
adc
jo
cmp
pop
test
xchg
cmp
enter
inc
xchg
and
mov
and
sbb
dec
mov
cmpsb
push
jecxz
fldt
jae
dec
imul
xor
flds
jle
fsubl
int
cmp
popf
imul
bound
cmp
out
xchg
or
movsl
dec
popa
fcompl
leave
and
cmc
test
movsl
xchg
pop
jge
push
pop
xchg
ljmp
hlt
lahf
sbb
sbb
push
das
int
fwait
adc
std
mov
push
jp
fstps
icebp
scas
pop
sub
xchg
fnstsw
jbe
aaa
xchg
iret
dec
int
cmpsb
sub
ret
and
imul
inc
test
loop
xor
movsl
or
into
stos
pop
inc
inc
cmpsb
mov
cs
arpl
xor
mov
cmp
dec
mov
push
imul
mov
out
mov
jns
addr16
cmp
cmp
insl
push
ret
pop
xor
sbb
mov
clc
sbb
into
mov
xchg
cltd
add
and
push
jl
mov
test
push
pop
sbb
pop
movsb
mov
loop
repnz
inc
jle
inc
push
mov
fldenv
mov
xchg
ljmp
mov
xchg
dec
stos
jno
mov
jmp
lock
sbb
sti
push
fcmovne
jg
fbstp
jecxz
mov
sub
xchg
push
call
in
mov
into
fwait
arpl
push
popa
add
ret
rcrl
fs
pop
fistps
sub
lock
sub
testl
jns
xchg
imul
mov
pop
dec
test
jl
mov
cwtl
stc
xchg
jl
dec
es
dec
jb
mov
cmpsb
dec
dec
inc
in
xor
in
out
int
inc
inc
or
jl
rdpmc
mov
inc
data16
xchg
stos
push
sbb
insb
xor
roll
dec
inc
mov
push
sbb
ficompl
movsl
popf
and
popa
adc
out
aas
add
in
mov
jne
loope
mov
or
imul
sbb
and
outsl
lods
inc
lret
push
or
ja
xor
addr16
minps
jmp
scas
jbe
fbstp
in
cmp
sahf
cmp
in
ret
call
xchg
xor
sub
shlb
repnz
mov
or
push
push
jp
cmp
fidivs
xor
pusha
xchg
dec
imul
fwait
movsb
inc
jne
xchg
push
adc
mov
fdivrl
lods
cli
and
jae
mov
cmp
add
dec
or
lods
fcmovbe
loop
sub
jne
sahf
mov
cmp
sahf
sub
cmp
negb
jecxz
xchg
and
adc
lahf
loope
imul
xchg
out
cs
lods
cwtl
xchg
mov
sub
nop
fs
outsl
mov
xchg
addr16
les
mov
and
sbb
jge
mov
fsubr
jecxz
stc
dec
jae
call
sub
cli
outsl
and
mulb
mov
aaa
pop
in
into
cltd
mov
ss
add
scas
mov
push
mov
in
cltd
ljmp
mov
mov
jbe
divb
mov
sub
mov
ljmp
rcll
fistps
jae
testl
aam
push
push
roll
jg
out
in
mov
das
outsl
insl
cltd
ja
out
ficoms
das
fbstp
push
cld
xlat
dec
add
cmp
xor
pop
or
addr16
inc
fsubrl
pop
aaa
pop
jge
xchg
out
stos
pop
sub
orl
test
dec
cmp
fs
shll
sbb
mov
ror
rorl
leave
jnp
push
test
addr16
xchg
push
pop
cmp
pop
dec
test
lock
xchg
aad
xchg
outsl
jp
sbb
mov
mov
roll
in
in
mov
scas
leave
jecxz
imul
xor
mov
pop
dec
and
pop
or
pop
mov
cld
test
subb
mov
jecxz
in
push
cmp
push
cmp
inc
arpl
in
fwait
xchg
leave
shlb
es
movsl
std
test
fiaddl
loope
cmpsl
pop
pop
aaa
jge
jmp
mov
icebp
mov
js
ja
or
cmp
lock
dec
cmp
push
push
ret
xchg
iret
hlt
negb
ficomps
addr16
test
lcall
insl
and
mov
inc
pushf
fsubrs
and
dec
test
out
sub
mov
cmpsl
test
push
repz
pop
jns
xchg
pop
xor
rcrb
out
mov
roll
mov
std
and
push
stc
xchg
mov
inc
scas
ficoml
imulb
pusha
mov
cmpsb
cmp
mov
cwtl
mov
test
dec
jecxz
lds
mov
outsl
ljmp
test
ret
inc
jp
fsubrl
xor
popf
stos
jb
popa
sub
int3
call
fwait
xchg
ret
cmp
push
adc
ss
scas
clc
int3
xchg
repz
jo
mov
push
data16
cmp
mov
xchg
dec
mov
je
push
outsl
jge
in
je
imul
cmpsb
jmp
sti
cs
mov
dec
ret
mov
inc
xor
jbe
xor
jl
xchg
repz
push
scas
in
ljmp
push
xor
jl
dec
inc
lds
and
lret
int3
hlt
xor
jnp
hlt
xchg
outsb
cmp
movsb
mov
mov
test
push
dec
mov
sub
inc
cmp
popf
stos
dec
cwtl
push
filds
mov
adc
sbb
scas
xchg
cmpsl
jns
cwtl
push
adc
cmpsl
je
add
cmpsb
call
sahf
push
sbb
pop
jp
nop
lret
cld
aad
cltd
sbb
pop
add
xchg
ret
aam
xor
mov
das
and
xor
dec
mov
shlb
leave
pop
ds
in
xchg
sub
rorb
addr16
cwtl
repz
jge
in
pop
ljmp
mov
out
pop
sbb
lret
push
xor
ja
aad
xchg
mov
xchg
lds
aaa
shlb
dec
into
je
push
jne
movsl
mov
fwait
push
or
jns
pop
dec
ret
adc
mov
adc
push
sbb
lret
mov
pop
popa
cmp
fimull
sbb
xchg
dec
pop
scas
adcb
adc
xor
pop
add
xchg
cmc
mov
and
dec
popa
stos
xchg
xorl
jl
cltd
lods
icebp
jbe
xchg
stos
xchg
shrb
out
je
leave
push
stos
mov
sti
pop
xchg
dec
or
movsl
daa
inc
mov
push
icebp
lods
mov
inc
rcrl
lock
or
dec
inc
imul
cmp
or
popf
fcoml
xchg
mov
jne
xchg
mov
adc
jge
jbe
cmp
movsl
jae
sarb
or
lret
pushf
fnstsw
repz
jmp
test
mov
unpcklps
mov
icebp
sbb
pop
pop
or
scas
and
mov
ss
or
sbb
jmp
insb
xor
adc
insl
fwait
in
les
lret
mov
mov
in
int3
mov
push
dec
fisubs
dec
xlat
mov
lods
adc
in
sub
sbb
mov
fcom
mov
mov
pop
stos
negb
sbb
aaa
sbb
mov
mov
icebp
jmp
or
lret
fsubrs
das
pop
adc
pusha
mov
mov
dec
mov
clc
into
lds
scas
pop
add
scas
insb
ja
jl
push
es
sti
gs
pushf
jl
or
ret
lahf
mov
cmp
mov
mov
push
test
rcll
fnstcw
xchg
popf
sub
movsl
pop
cmp
aas
sbb
jae
imul
fnstcw
bound
jne
mov
popa
push
pop
sbb
or
test
mov
mov
lods
popf
lret
leave
dec
adc
loop
icebp
xor
clc
clc
ja
fdivrl
lea
jbe
movsl
pop
inc
dec
inc
push
aaa
mov
jmp
add
movsl
call
push
dec
lock
xchg
pop
test
arpl
aaa
test
pop
js
sbb
lahf
and
sbb
sub
cmp
mov
push
pop
adc
call
xchg
mov
lea
ss
push
dec
pop
adc
subb
xor
jnp
cmpb
jl
shlb
adc
lahf
mov
lods
stos
mov
push
mov
sbb
mov
pop
inc
movsb
jmp
or
mov
shrb
sub
gs
fcomps
xor
xchg
sbb
loopne
int3
cmp
jmp
fsubrl
push
or
mov
push
inc
inc
pop
add
pop
aaa
sub
xchg
lea
cltd
daa
call
sbb
sub
sub
aad
cltd
bound
jno
push
sti
push
sbb
aas
jp
popf
lahf
out
cmp
xor
xor
fldenv
adc
adcb
adc
insl
cmp
jb
add
sub
sti
cmp
movsl
cwtl
jl
pushf
jl
icebp
call
sbb
dec
xor
push
xchg
xor
adc
xchg
mov
mov
dec
insl
cmp
sub
fidivrs
subb
jbe
aad
out
pop
sub
fsubrs
and
fcoms
lret
xlat
pop
jb
adc
imul
jp
movsb
ljmpw
rol
sub
in
lods
sub
xchg
push
out
adcl
sbb
stos
jl
test
cltd
mov
lcall
mov
xor
xchg
enter
push
rcll
stos
mov
mov
pop
fs
sahf
mov
jbe
jle
jns
clc
fwait
xor
cmp
stos
mov
and
or
inc
inc
mov
test
stos
mov
inc
jnp
xchg
push
inc
and
mov
test
adcl
or
andb
addb
mov
lds
jle
loope
push
es
push
stos
adc
daa
sbb
call
cmp
mov
cmpsb
sub
mov
push
aaa
in
out
scas
ja
fisubrs
xchg
arpl
jecxz
ja
pop
mov
subb
mov
jg
pushf
jmp
mov
cli
fists
or
in
dec
jmp
daa
cmp
fimull
stos
jg
jns
inc
popa
push
mov
sbb
mov
push
rorl
cltd
add
jns
push
loop
das
mov
mov
jno
sbb
insl
jl
ljmp
jb
xor
cmp
xchg
lahf
and
lods
imul
cld
mov
and
push
push
sub
pop
dec
cmp
out
mov
cmp
out
lock
mov
pop
fidivrl
push
pop
into
popf
aaa
jmp
jge
adc
movsl
ljmp
clc
shr
cli
xor
jmp
and
jl
ficomps
out
ja
mov
cli
mov
jmp
pop
add
in
dec
mov
pop
jbe
cmp
repnz
cld
movsb
sbb
sbb
pop
xlat
sbb
xchg
jb
repz
push
jae
mov
dec
stos
mov
sbb
or
fdivl
pop
jb
outsl
push
push
pop
adc
sub
adc
je
lods
lret
adc
jp
mov
cmp
clc
stc
fstpl
movsb
xchg
mov
loope
xchg
stc
pop
sub
insl
idivb
jae
and
jae
iret
pushf
jmp
push
in
push
push
in
or
loopne
jno
je
adcl
push
lods
pop
cmp
lea
mov
xchg
test
cmp
das
and
adc
dec
push
mov
fsubrs
ljmp
jecxz
pop
iret
movsb
arpl
mov
orb
mov
push
xchg
pop
jb
mov
push
insb
incb
inc
mov
std
int
jl
xchg
sbb
push
cmp
cmpsl
push
scas
aaa
mov
jbe
push
mov
sub
loope
jecxz
in
lahf
loope
cmp
xor
leave
adc
dec
ss
mov
arpl
xor
fcomi
cmp
inc
negb
add
test
cmpsl
inc
mov
dec
loop
push
mov
cmc
mov
fsub
cltd
ret
stos
xchg
imul
mov
lahf
cmpl
xchg
icebp
lahf
popl
ficoms
arpl
lds
pop
cmp
lcall
jmp
sbb
arpl
sbb
mov
jmp
mov
in
imull
xor
xor
mov
fsubrs
xchg
cmp
mov
jo
out
jge
pop
outsb
mov
int
loope
mov
fistl
pop
call
sub
enter
and
push
stos
stc
stc
mov
movsl
leave
loop
clc
mov
inc
es
ds
lock
iret
jbe
dec
mov
out
and
insb
fldt
pop
jg
push
in
iret
xor
loop
fwait
adc
je
call
jb
popf
sub
jbe
fwait
jns
mov
mov
cmpsl
cmp
jae
mov
mov
clc
ficoms
into
or
push
add
ret
les
test
es
pop
add
xor
push
pop
in
pop
lret
icebp
cmp
sahf
addr16
lret
sub
test
js
xchg
fsubrl
sbb
inc
cs
inc
lea
xor
push
lods
jb
gs
fucomip
pop
adc
mov
cmp
mov
lahf
pop
aad
aam
out
add
int3
lret
pop
pushf
pop
jle
mov
dec
aad
sbb
push
cmpsl
lret
fs
sbb
jle
add
test
das
mov
insb
mov
aaa
test
data16
xor
and
loopne
test
inc
popf
dec
jbe
or
adc
mov
pop
pusha
in
cmp
stc
jecxz
push
xor
daa
sub
push
stos
shrl
dec
mov
insl
rcrb
call
and
shll
movsl
push
int3
leave
pop
rol
clc
mov
ficompl
xchg
cmpsb
cmp
repz
mov
cmp
je
fnstsw
xchg
pop
mov
push
dec
xor
lahf
adc
shll
clc
out
jne
inc
fcmovnb
adc
jecxz
aaa
nop
mov
cld
add
rorb
lcall
push
lahf
leave
cli
and
ret
cltd
mov
fs
lret
and
pop
sub
xlat
aaa
movsb
rorb
cltd
mov
fistps
in
cmp
mov
push
adc
insl
jnp
arpl
xor
in
mov
push
xlat
mov
and
sub
aas
pop
aad
and
imul
cmp
mov
push
mov
in
mov
mov
jo
mov
xor
mov
pop
fcoms
aam
dec
xchg
mov
mov
xor
stc
cmp
mov
and
mov
dec
inc
xchg
cmpsb
loope
bound
and
inc
inc
mov
jecxz
mov
test
ret
in
pop
mov
dec
scas
push
xor
dec
add
mov
mov
adc
adc
mov
arpl
aam
subps
cmp
movsl
ret
mov
pop
cmp
in
and
inc
adc
xor
ss
cwtl
out
lret
and
xchg
pop
xchg
cmpsb
cmp
clc
fwait
push
call
sbb
mov
in
fbstp
fnclex
push
cltd
in
gs
mov
fldenv
dec
xor
push
loope
in
fisubs
xor
sub
inc
fwait
les
shll
ret
daa
lock
popf
outsb
scas
or
pop
rcrl
sub
xor
iret
push
gs
pushl
enter
mov
scas
cwtl
dec
xchg
sbb
push
loopne,pn
xchg
loop
push
xlat
hlt
aaa
fsubrs
jnp
mov
add
jne
jo
jp
xchg
mov
mov
xchg
xchg
mov
das
loop
push
adc
push
ja
fildl
stos
leave
cwtl
mov
dec
inc
jge
jecxz
ja
mov
imul
fsubr
xchg
add
jno
mov
iret
pop
jb
mov
fistpl
inc
shlb
mov
mov
incl
mov
sarl
call
jbe
ja
jns
imul
loop
mov
push
mov
push
mov
cmp
push
shl
jmp
jnp
push
cmp
lret
mov
push
rcll
jno
adc
into
repz
mov
fstpt
loope
fwait
mov
adc
mov
mov
dec
lods
out
int
arpl
mov
or
jns
or
cmp
fisttpl
inc
add
inc
test
adc
lods
fisubs
icebp
fiadds
out
add
mov
addr16
bound
adc
into
jmp
es
pop
jno
leave
addr16
sbb
pop
inc
icebp
lcall
movsb
fstps
push
cli
lods
mov
pop
push
mov
int
xchg
outsb
in
jmp
scas
aam
mov
outsl
mov
xchg
je
mov
mov
jns
insb
and
xchg
shr
addr16
insb
mul
xchg
repnz
mov
push
cli
sbb
sub
fildl
jnp
dec
in
push
cli
mov
sahf
fucomi
aas
mov
push
jle
fcompl
jbe
jns
lret
push
outsl
cmp
jns
pop
xor
mov
nopl
test
lds
iret
mov
mov
dec
mov
mov
in
xchg
or
cld
fidivrl
ret
add
jns
cs
inc
push
xchg
xchg
push
dec
hlt
ds
test
xchg
xor
push
mov
pop
cmc
pop
push
jmp
xlat
adc
and
shl
pop
data16
outsl
insl
push
cmp
add
sub
pop
pop
movsb
pushf
cmc
enter
xchg
leave
fs
cmc
lahf
pop
pop
lahf
movsl
fisttpl
aam
out
mov
pop
lods
fs
cmp
daa
inc
in
mov
popf
jns
jl
sub
lahf
jnp
pop
js
xor
inc
mov
mov
adc
mov
andl
mov
jmp
jb
mov
mov
testl
fbld
daa
mov
push
repz
or
sbb
mov
leave
fstl
repz
stos
push
mov
hlt
cmc
daa
or
push
fidivrs
dec
mov
leave
mov
dec
into
jg
jnp
push
imul
jmp
into
arpl
inc
ret
imul
push
xchg
sbb
cmp
outsb
mov
sarl
sbb
lock
pop
ficoml
iret
in
sbb
in
lea
jns
divl
mov
js
or
mov
cwtl
pop
dec
sti
jge
fsubp
imull
outsb
inc
dec
jg
loope
inc
pop
xchg
xchg
data16
pusha
mov
movsb
cmp
scas
pushf
inc
mov
insb
inc
dec
sub
fistpll
imul
out
imul
sbb
add
lahf
adc
stos
testl
lods
xchg
loope
call
lcall
lahf
xor
mov
cmc
call
lret
mov
mov
out
icebp
pop
mov
ja
sbb
orb
ljmp
push
neg
in
cmp
pop
in
shrl
mov
push
fbld
pop
test
dec
dec
nop
push
mov
stos
sub
cmpsb
leave
jne
into
mov
aam
jp
push
or
arpl
inc
mov
xor
cmpsl
inc
shl
mov
lods
jae
adc
mov
mov
xor
adcb
fs
hlt
insb
push
sahf
push
inc
jl
pop
rcrb
divl
adc
mov
add
add
sub
pop
jbe
cmc
jno
dec
jns
daa
lods
lds
test
std
les
in
call
lock
adc
ficoml
jne
jae
sbb
sub
mov
pop
and
pop
out
divb
das
dec
je
sub
mov
mov
fidivrs
test
sbb
sub
scas
test
negb
sub
jno
xchg
jmp
rcrb
aas
loopne
mov
out
imul
aad
je
out
mov
ret
call
pop
in
sahf
sbb
flds
inc
sub
sti
jb
mov
sub
pop
mov
ficoms
xchg
pop
dec
push
mov
mov
mov
and
add
call
dec
das
mov
jb
and
iret
jl
js
stos
out
pop
xchg
xchg
mov
popf
test
xchg
aaa
sbb
lret
test
ds
or
fnsave
das
imul
push
jmp
stos
pop
std
out
cmpsb
cmp
stc
push
mov
cmc
sbb
sbb
div
ds
mov
fldlg2
push
aad
hlt
test
push
pop
push
testl
aad
sarl
ret
lret
testb
push
jne
icebp
dec
in
fistpl
out
idivb
lret
add
repz
sbb
xlat
call
repnz
jmp
mov
pop
push
cmp
loope
cltd
pop
outsb
fdivrl
xor
xchg
daa
mov
pop
sti
repz
inc
jnp
jl
pop
pop
jg
xchg
cmp
jecxz
xor
aam
mov
shrb
sti
ljmp
icebp
negb
arpl
mov
mov
xor
outsb
cmp
dec
xorl
cmp
push
sub
rcll
sub
jnp
add
sbb
jo
into
into
stc
cmp
dec
iret
and
mov
lock
mov
lods
out
mov
jae
dec
test
xchg
ds
jne
pop
cltd
sub
in
insb
mov
fnstcw
push
xchg
jnp
pop
adc
hlt
mov
pushf
es
test
repnz
stos
push
mov
xlat
xchg
jne
bound
repz
ljmp
shlb
inc
lahf
add
mov
in
add
hlt
cmpsl
aaa
stc
in
inc
pop
ja
stos
out
iret
dec
adc
sbb
sbb
test
dec
jb
popf
sbb
repz
push
out
mov
fsubs
jg
in
jg
rcll
clc
pop
pop
mov
pop
repnz
sbb
mov
leave
jne
dec
xor
xor
dec
pop
mov
out
lods
sbb
into
les
icebp
out
push
sahf
lahf
orl
mov
sub
sbb
sar
out
int3
mov
jo
xor
push
add
sets
add
pop
cltd
sbb
add
pusha
cmp
dec
add
cli
lahf
cwtl
and
jns
shlb
enter
adc
loopne
xor
add
mov
inc
call
outsl
test
jle
fstpt
stc
inc
iret
lods
pop
hlt
pop
mov
in
incl
dec
outsb
cwtl
test
cmp
repz
adc
aam
imul
jle
xor
clc
mov
mov
cmpb
je
inc
mov
sub
orl
add
fs
nop
addl
loopne
add
push
mov
adc
xor
test
ss
push
addl
cmpb
repz
or
inc
pop
push
nop
add
out
adc
or
add
movsl
pop
push
jg
mov
adc
add
data16
add
cwtl
add
mov
and
inc
ret
xor
add
add
dec
add
or
and
and
add
add
inc
jo
add
add
bound
add
add
cwtl
or
or
cmpsl
or
cmpsl
or
and
adc
add
jo
add
orb
addl
add
mov
push
or
xor
add
sbb
call
test
sub
adc
pusha
lods
adc
cmpsl
imul
addb
and
inc
insb
sub
pop
pop
inc
test
inc
pop
push
add
popa
add
adc
aam
add
adc
or
adc
inc
pop
dec
add
add
cmp
cmpb
mov
adc
dec
add
test
or
adc
mov
sub
add
and
test
js
add
inc
test
add
dec
add
dec
add
dec
add
sbb
add
mov
or
xchg
add
sub
aas
ret
inc
iret
shl
mov
adc
sarb
jne
inc
sub
js
jg
mov
inc
add
stc
add
dec
lock
cli
cli
gs
mov
sub
mov
clc
xor
or
pmaddwd
xchg
repnz
lods
int3
loopne
add
or
or
test
jmp
mov
movsl
xchg
insl
push
shrb
loopne
adc
xorb
xor
loope
adc
jge
enter
ret
jge
es
and
int3
mov
add
cld
or
inc
add
dec
add
push
test
addr16
inc
jecxz
int3
mov
dec
loope
pop
push
xor
les
in
loopne
mov
gs
pop
pop
and
int3
jae
cmp
insl
inc
outsl
jecxz
and
cmp
mov
push
stos
insb
mov
clc
bound
lods
pop
pop
jmp
nop
out
cld
addr16
loope
mov
sbb
testl
int3
and
lock
pushf
std
stos
repz
mov
dec
shll
data16
jle
out
fsubp
fwait
push
jne
jne
cmp
mov
jle,pt
xchg
dec
sti
cmp
enter
jg
pop
sti
pop
in
mov
imul
in
jmp
movsl
push
loope
pop
aas
sarl
cmp
lock
mov
out
xchg
iret
ret
insb
pop
lahf
out
cli
mov
les
sahf
add
in
mov
mov
jne
loope
enter
mov
pop
stc
out
xchg
cld
ret
adc
lret
or
pop
shl
jmp
push
dec
jmp
mov
push
cmpl
int3
enter
pop
das
and
mov
mov
push
pop
movsl
sub
sub
sbb
aas
adc
add
mov
pop
or
jb
mov
mov
cltd
or
pop
cs
sbb
dec
pop
mov
sub
xor
pusha
int3
xor
pop
fs
mov
add
popa
dec
outsb
fsubr
add
pop
mov
mov
icebp
mov
sub
outsl
int3
aas
cmp
xchg
pop
mov
sub
mov
push
pop
cmp
mov
movsl
mov
pusha
mov
bound
test
xor
bound
xor
cld
pop
or
adc
push
repz
popf
lret
or
cwtl
cmp
push
cmp
mov
pop
sbb
aam
push
in
adc
cwtl
mov
cli
add
rorl
inc
xor
pushf
mov
sbb
adc
or
cmpsl
pop
xor
xchg
or
mov
mov
and
sub
call
test
jns
mov
stos
jae
xchg
mov
push
negb
jmp
fiadds
iretw
push
mov
psubw
mov
imul
dec
jl
mov
cmpsb
incb
xchg
sti
call
dec
add
mov
sub
push
dec
add
addr16
xor
ret
outsb
les
inc
lea
add
icebp
movsl
inc
sbb
sbb
adc
mov
imul
rcrl
nop
fs
push
dec
xchg
xchg
movsb
movsb
cli
mov
adc
xor
lret
mov
xchg
icebp
inc
sub
pop
sub
fstpl
add
sarb
call
call
ss
xor
ss
adc
cltd
add
subb
popa
jge
mov
xchg
stos
sub
call
shrl
push
aam
or
mov
sbb
dec
fisttps
outsl
movsb
fimuls
xchg
sbb
inc
jp
cmp
ret
dec
pop
inc
rcrb
sbb
sbb
and
push
addr16
or
lods
fwait
shlb
jmp
push
daa
or
mov
inc
pop
mov
adc
das
leave
ret
ljmp
rcl
rol
dec
dec
test
xchg
pop
les
or
ljmp
mov
and
test
xchg
adc
sub
lods
dec
or
pop
inc
push
sbb
stos
scas
scas
xor
hlt
or
stos
test
out
xchg
mov
addr16
xor
jbe
addr16
dec
imul
mov
sbb
mov
xchg
inc
jne
adc
mov
loopne
stos
mov
int3
mov
cmpsl
cs
aas
rolb
sbb
jle
stos
insl
ds
jmp
aam
sbb
mov
mov
nop
lods
test
xor
and
roll
ret
push
ret
mov
loope
dec
mov
xchg
stos
mov
inc
push
fisubrl
lret
jne
push
and
in
push
pop
dec
pop
and
push
cltd
in
mov
ljmp
xor
inc
aas
movsb
mov
adc
nop
add
sub
adc
mov
lock
push
sbb
add
lcall
rolb
jo
js
adc
push
pusha
ffreep
ret
aaa
call
and
jmp
or
and
lods
jnp
test
mov
push
mov
or
in
bound
push
push
pushf
aaa
aam
mov
dec
push
aam
jg
and
cmc
jle
stos
rclb
sbb
mov
aam
jae
adc
pop
ror
inc
inc
jecxz
jmp
fwait
and
lods
aad
sub
lret
add
pop
idivl
and
add
andb
outsl
xchg
ret
int
popa
push
das
movsb
lods
lcall
cmp
and
push
mov
or
add
inc
cwtl
jl
or
inc
dec
les
mov
sub
jl
ss
dec
dec
push
and
cwtl
dec
stos
arpl
and
mov
cmpsl
nop
lret
rsm
inc
call
lret
sub
jo
sbb
js
mov
loope
push
imul
push
aad
pop
cmp
and
push
add
inc
mov
test
mov
dec
sub
mov
data16
sbb
mov
addr16
fwait
inc
jb
xchg
leave
cmpsb
int3
repnz
or
pop
mov
inc
popa
mov
adc
push
rcrl
fisttpl
sbb
cmp
mov
inc
and
jo
mov
pop
ja
shrb
rcr
fstp
and
loope
nop
ja
and
and
and
mov
xor
mov
dec
xor
scas
pushf
scas
pop
scas
jnp
jbe
xchg
in
mov
push
data16
lret
cmp
jl
fstpt
aas
lahf
cmp
iret
jg
int3
and
xchg
popf
pop
dec
aam
lret
jne
or
inc
repz
inc
adc
cld
jbe
stc
and
cmp
mov
or
xor
mov
or
jb
jl
mov
cmp
mov
xchg
sub
xor
std
in
xchg
xor
dec
addr16
cmp
lods
adc
iret
pop
pop
arpl
or
call
inc
loop
and
in
push
push
pusha
push
dec
adc
arpl
xchg
inc
cmp
leave
fisttpll
mov
pop
ds
sub
cmpsl
leave
scas
push
push
mov
scas
xlat
sub
mov
inc
jnp
test
enter
mov
lods
dec
xor
sub
faddl
les
imul
lods
outsb
pushf
sbb
loope
and
pop
ljmp
imull
pop
jle
pop
xlat
and
add
fs
inc
xchg
out
cli
xchg
jae
cmp
push
call
test
scas
pop
ficoms
std
mov
rcl
cmpxchg
xor
jp
and
loop
jnp
dec
leave
dec
push
icebp
scas
test
inc
outsb
xchg
push
in
mov
mov
mov
fdivs
mov
pop
adc
add
ficomps
sub
mov
jnp
test
cltd
out
fwait
mov
jne
rorl
cmc
push
test
gs
add
mov
rcr
sbb
fildl
and
cmp
xchg
and
movsb
aas
mov
and
loope
or
les
mov
push
in
mov
iret
rcll
or
mov
xor
inc
repnz
xchg
lret
xchg
mov
add
add
outsl
lds
sub
dec
cmp
jecxz
rcr
lods
cmp
adc
fdivr
call
test
cmp
sarb
inc
cmp
call
sub
int3
in
mov
hlt
adc
cmp
jo
lret
gs
sbb
and
xchg
pop
imul
adc
fistps
adc
outsl
push
push
aas
bound
fdivr
loop
dec
push
xor
jmp
inc
pop
call
xchg
cwtl
sub
cmp
dec
jmp
cld
mov
enter
xor
jns
adc
cli
jnp
inc
icebp
sbb
mov
in
jg
adc
ret
fmull
xor
inc
outsb
add
or
fcmove
movsb
jle
and
mov
pop
stos
xor
dec
inc
test
mov
jecxz
inc
mov
inc
pushl
loop
adcl
lret
sub
jmp
sti
cmpsb
js
jecxz
hlt
sar
scas
jl
mov
lock
aam
cmp
jecxz
sti
cmp
and
jmp
leave
pop
outsb
bnd
push
mov
lret
fists
enter
pop
mov
test
addr16
xor
iret
outsl
cli
movsb
aas
mov
adc
dec
insl
iret
shrl
cwtl
or
push
das
or
mov
dec
lret
or
lret
fs
adc
or
movsl
inc
arpl
test
inc
or
scas
sub
jne
xlat
faddp
fsubp
aam
mov
mov
out
jp
push
andb
sbb
movsb
nop
jbe
insb
push
shl
jmp
lods
fstpt
aad
jno
mov
pop
popl
jns
xchg
and
jecxz
out
lods
mov
in
and
sbb
ret
dec
sub
sbb
sub
push
mov
mov
cmp
ret
mov
mov
mov
mov
ja
pop
pop
rcl
decl
push
fwait
addr16
xor
jo
pop
ret
jp
jb
movsl
and
adc
xor
ljmp
mov
jns
pop
jne
pop
jae
aam
mov
cmpsb
fadd
aaa
repnz
stc
lcall
je
negb
xchg
leave
ljmp
sub
mov
xchg
pusha
xor
sub
mov
outsl
xorl
rcrl
jle
cmp
popf
xor
mov
mov
push
xchg
test
insl
inc
jecxz
movsl
movsl
jge
aam
pop
sar
shrl
xchg
cmp
push
xor
xchg
xlat
ja
mov
inc
push
jno
push
stc
jle
xchg
addr16
inc
cmpsl
into
clc
into
notl
xor
pop
lahf
inc
cmpsl
sub
push
jno
popa
or
xchg
test
inc
incl
negb
adc
cmp
push
or
jecxz
jno
int
mov
push
sub
mov
loop
test
inc
mov
mov
imul
xchg
fnsave
jb
sbb
ret
mov
out
and
bound
or
cmp
and
les
xchg
adc
ds
push
jno
cli
adc
int3
xchg
dec
push
mov
xor
adc
jmp
mov
pushf
dec
out
dec
leave
outsl
mov
roll
cmc
lcall
out
mov
ss
jb
enter
xchg
pop
mov
pop
mov
and
gs
test
and
test
lahf
cs
bound
push
aad
aaa
mov
pop
or
pushf
es
cmpsl
push
movsb
std
xorb
xchg
push
pushf
in
inc
daa
dec
rclb
inc
jecxz
loopne
jno
or
stos
and
ja
or
call
aaa
fcompl
mov
scas
inc
pop
xchg
ss
jne
nop
hlt
movsl
stos
in
inc
nop
ss
dec
mov
out
inc
add
sub
jne,pn
pop
xchg
and
int
int3
orl
movsl
lret
add
shrb
fcoms
mov
bound
sbb
psubusb
jb
mov
pop
xchg
in
jmp
mov
out
loope
sti
lock
xlat
push
movsb
stos
mov
sub
xchg
das
scas
mov
pop
mov
pop
xor
mov
loopne
dec
int3
into
jns
mov
fistpll
loopew
scas
mulb
cmp
out
leave
les
inc
shlb
and
adc
popf
cwtl
pop
xchg
add
jl
addr16
mov
ret
and
mov
push
mov
push
imul
mov
in
out
xchg
mov
xchg
or
sbb
inc
cmc
out
fidivrl
mov
jne
xor
xchg
or
cmp
pop
dec
sbb
rorl
test
pusha
xor
les
cmp
xchg
dec
gs
and
adc
lret
lret
dec
fisubs
mov
pop
sbb
inc
mov
and
int
jmp
cmpsl
jl
fsubl
enter
pusha
push
or
cli
mov
pop
mov
int
push
in
dec
lock
sbb
lea
cltd
xor
sbb
push
dec
adc
push
pop
imul
inc
addl
mov
lods
sbb
rcrl
arpl
popa
loopne
cmc
jb
sub
repnz
pop
sub
xchg
gs
mov
dec
sub
jbe
mov
enter
call
cmpsb
mov
fwait
out
fldcw
repz
mov
dec
pop
test
jae
mov
jp
std
xchg
sub
dec
je
bound
out
mov
jge
xor
scas
cmp
cmpsb
cmpsl
sbb
or
adc
xchg
jns
jg
adc
cltd
push
mov
pop
loope
jg
divl
xor
jg
dec
inc
sub
mov
loop
test
into
lcall
cmc
inc
pop
js
jg
imul
sub
add
stos
pushf
fisttpl
cli
xchg
mov
cli
inc
xor
ret
fs
sbb
push
cmp
insl
mov
test
movsb
lea
and
adc
dec
pop
cmp
sub
and
frstor
jns
mov
mov
out
and
jbe
shll
cld
mov
lods
les
xlat
dec
mov
jno
icebp
pop
xlat
lahf
fidivrs
mov
mov
int
imulb
fidivl
push
mov
or
xor
pop
aad
cld
adc
scas
out
mov
nop
mov
je
arpl
out
in
call
xchg
sbb
pop
adc
aaa
rdtsc
ja
mull
pop
lret
fistl
pop
jae
dec
movsl
test
cmp
push
daa
pop
cmpsb
out
in
jne
jnp
mov
mov
xor
insb
sarl
aad
sarb
hlt
sbb
xor
or
popf
jno
cmp
pop
or
ficomps
add
ljmp
pop
arpl
inc
fcoms
cmp
and
andl
xor
frstor
mov
pop
push
hlt
fisubrs
and
jle
inc
cwtl
sub
fstpt
loopne
imul
sbb
add
std
pop
into
out
xchg
aam
scas
cmp
mov
sbb
jl
jne
and
sbb
iret
test
jmp
in
push
cmp
jl
mov
lock
clc
js
rorb
inc
divb
inc
dec
xchg
in
pop
mull
add
xchg
repz
inc
mov
mov
mov
mov
loopne
sbb
cmp
add
jecxz
mov
lret
nop
xor
pop
mov
and
int3
lods
es
les
cmp
ficoml
xor
jno
jl
mov
pop
ds
int3
stos
stos
fcoms
in
and
jecxz
sub
jae,pn
mov
jmp
inc
mov
imul
dec
pop
mov
push
incb
push
mov
das
and
adc
dec
idivb
loopne
push
in
dec
sti
and
xchg
cmp
movsl
fsubl
fistpl
cmp
mov
jge
and
pop
out
fs
xor
sub
in
ss
cld
sbb
push
test
lods
movsb
push
add
rcrb
xlat
adc
add
dec
jae
ds
stos
or
out
iret
inc
addr16
lock
xlat
cs
int
sti
not
cmc
movsl
stc
loope
jbe
mov
sti
rol
gs
ret
leave
mov
pop
insb
add
mov
lahf
and
ds
xlat
mov
loopne
fwait
mov
in
out
outsb
sub
cmp
mov
add
leave
push
call
mov
les
xor
push
mov
loop
jb
repnz
mov
xchg
xchg
xor
inc
ljmp
mov
subl
cmpsb
js
mov
and
add
dec
pop
je
pushf
xor
cmp
pop
lods
ds
scas
jecxz
inc
push
out
add
xchg
es
inc
push
mov
mov
rcll
adc
or
sub
cmp
mov
test
xor
xchg
jp
add
xor
ret
sbb
popf
and
std
enter
add
sbb
nop
add
outsb
xchg
bound
mov
push
xor
aas
rcrl
mov
xor
stos
lcall
jno
ljmp
loopne
popa
xchg
and
sub
mulb
data16
test
ljmp
lret
jp
mov
mov
jo
pop
or
pushf
jl
cmpsl
adc
sbb
adc
mov
mov
outsl
xor
repnz
pop
dec
adc
shlb
mov
xchg
add
mov
and
sbb
ja
insb
mov
xlat
sbb
into
mov
popa
and
outsb
mov
dec
das
test
adc
test
clc
jns
xor
bound
out
loopne
loop
push
addr16
cmpl
int
xchg
fdivl
add
fisttpll
ljmp
pop
or
xor
inc
jb
xchg
rcrb
ret
mov
cmpsb
mov
add
mov
popa
pop
push
icebp
cli
fs
cld
xchg
add
imul
shll
sub
xor
filds
int3
and
fdivrs
out
cmc
int
cmp
sub
dec
movsw
test
and
sbb
inc
scas
mov
popa
xor
xchg
push
inc
and
xlat
mov
mov
in
and
out
ljmp
xor
imul
cmp
sti
cmp
outsb
addb
aad
arpl
or
sarl
push
hlt
sub
adc
mov
in
cli
mov
std
repnz
les
sub
jns
inc
mov
mov
dec
adc
fmul
bnd
mov
mov
jne
and
mov
cmpsl
repnz
lret
inc
lret
aad
xchg
ja,pt
leave
lods
inc
jl
lahf
or
adc
jge
inc
or
sub
adc
inc
push
repz
mov
insb
cli
dec
or
add
jle
and
push
push
pushf
cltd
std
divb
stos
mov
rorb
push
cmpl
arpl
xor
test
mov
mov
daa
and
mul
scas
or
xor
mov
fnstenv
jp
in
nop
rep
insb
call
mov
mov
out
jmp
lret
xchg
xor
aad
add
jl
subps
daa
mov
cltd
andb
mov
leave
pop
jp
fs
inc
sahf
or
filds
jnp
pop
pop
mov
in
outsl
ds
xor
cld
mov
js
inc
xor
sbb
and
stc
cmp
add
pop
dec
sarl
add
cmp
inc
js
lods
in
lods
mov
sub
add
scas
inc
xor
mov
jecxz
pop
stos
inc
push
xchg
sub
mov
pop
scas
jge
jecxz
jae
and
xchg
mov
arpl
popf
hlt
sub
and
rep
lds
repz
rcrl
jb
imul
inc
imull
enter
fcomps
xor
mov
test
nop
daa
mov
xchg
adc
xchg
ds
jle
in
xchg
cmp
shlb
icebp
push
sti
jecxz
test
xor
popa
jle
lods
sti
sub
and
push
std
outsb
popa
sbb
mov
rclb
shll
rcr
out
hlt
negb
nop
fistpll
jecxz
fsubrp
push
mov
dec
cmp
xchg
pop
or
testb
ficoms
cmpsb
xor
fs
fsubl
jbe
iret
mov
push
sarl
test
sbb
add
xor
lods
xor
rolb
popa
mov
scas
jl
mov
flds
stc
jge
pop
pop
ljmp
loope
popa
aas
mov
cmpl
aad
lds
lret
add
fs
shlb
xchg
call
out
jbe
repnz
xchg
inc
int3
repz
mov
sahf
jmp
add
cmpb
or
push
sub
inc
rcrb
lods
insl
out
pushf
dec
push
movsl
sub
cmp
pop
lods
push
scas
xchg
inc
inc
cld
mov
add
xchg
into
in
hlt
sbb
dec
mov
mov
and
cmp
mov
jecxz
testl
xchg
dec
mov
inc
stos
xchg
mov
loope
jg
ja
and
jae
ret
push
inc
sub
lods
enter
sbb
dec
fmuls
mov
imul
push
pop
subl
call
imul
popf
out
test
dec
icebp
aaa
pop
push
repz
adc
add
jp
mov
out
mov
out
cmp
mov
loope
andl
dec
or
pop
fisubs
pop
fs
pop
jb
push
cmp
lods
inc
shr
or
cmp
and
call
and
and
adc
xor
xchg
add
enter
xchg
call
std
mov
fs
push
test
push
rolb
push
out
xor
call
push
xchg
xchg
loopne
inc
mov
sub
xchg
les
jmp
mov
jb
mov
popa
pop
clc
decb
movsl
or
lret
push
push
sub
dec
daa
or
setg
pop
shll
sub
xor
fildl
pusha
stos
mov
jg
dec
inc
daa
dec
mov
jb
pop
push
movsl
pusha
imul
test
mov
in
cmp
push
add
sbb
repz
cmp
push
lods
lret
imul
stc
jge
jno
lock
fldl
ljmp
xchg
cmp
and
mov
dec
popf
mov
clc
icebp
cmp
in
sub
sbb
sbb
adc
popa
ljmp
lods
popa
mov
jnp
test
cld
jo
mov
loop
popa
adc
clc
loope
dec
arpl
sub
mov
pop
js
xor
adc
fdivrs
outsb
ss
add
test
into
lock
popf
loop
sbb
icebp
mov
int3
out
imul
xor
add
mov
mov
mov
push
into
fstps
add
push
mov
jnp
or
or
shld
jge
inc
movsl
insl
pop
push
mov
out
in
test
sbb
dec
les
arpl
xchg
inc
into
fidivl
lret
fstpt
lock
test
mov
and
sub
inc
mov
imul
imul
test
mov
icebp
sarb
mov
in
jg
fucomip
cmova
repnz
pop
js
jle
cmp
aas
shll
cmp
mov
and
xchg
lea
push
out
lods
cmp
movsb
rolb
mov
lods
xchg
add
and
fcmovnbe
or
sbb
paddusw
mov
inc
xor
roll
testb
xchg
xchg
push
fimuls
pusha
lea
mov
popa
clc
cld
inc
mov
push
sub
lcall
adcb
push
dec
popa
nop
push
addr16
adc
fmulp
loopne
sysenter
iret
mov
pop
das
and
jge
push
mov
xor
xor
pop
or
inc
inc
or
data16
inc
test
sub
aad
mov
addr16
or
test
mov
jp
mov
into
mov
cmp
out
push
filds
jne
sbb
mov
xchg
int
sbb
lods
dec
cmpsb
and
je
and
stos
cmpsb
lret
pop
outsb
pop
jno
add
pop
int
lret
xchg
mov
mov
dec
clc
lcall
mov
or
sub
sbb
repz
imul
out
ds
insl
push
and
mov
mov
dec
repz
or
and
sbb
lods
sub
into
mov
adcl
test
add
stc
xor
insb
and
pop
jecxz
out
mov
push
xchg
push
das
popa
xchg
push
inc
mov
sbb
leave
lea
mov
push
test
inc
hlt
mov
imul
je
lahf
pop
gs
test
cmp
insb
jge
mov
inc
add
test
or
int3
jecxz
hlt
lock
imull
mov
cmpb
xor
aas
mov
insb
adc
pop
and
jmp
push
das
loopne
hlt
stos
cs
xchg
inc
idiv
pushf
sbb
mov
fnsave
xor
add
or
jge
rcll
inc
shr
and
lret
idiv
cmp
data16
stos
and
imul
lcall
loope
shll
pop
fisubrl
sti
xor
mov
cwtl
jmp
mov
test
mov
lahf
inc
js
or
adc
imul
add
jb
pop
add
jno
push
xchg
cmp
testb
add
aam
and
nop
arpl
jns
js
jno
xor
jle
cmp
add
lods
add
xlat
pop
adc
je
cmpl
iret
cmp
mov
fdivrl
addl
shll
xchg
cmovae
xor
push
mov
pop
inc
mov
subb
lret
decb
or
add
xchg
adc
xchg
add
fstpl
and
repnz
mov
pop
mov
add
iret
fldl2e
sub
mov
pop
xor
popa
stos
jb
popf
pusha
fwait
mov
mov
xlat
xor
leave
stos
rol
add
jb
sub
and
push
sub
sti
into
out
sub
push
xor
shrb
sub
cmp
or
sbbb
dec
xchg
cltd
data16
daa
inc
add
inc
fidivl
xor
push
into
dec
mov
and
add
scas
into
aaa
aaa
xor
mov
jl
shlb
jae
ficompl
orb
add
enter
add
gs
aaa
add
or
in
mov
call
ljmp
into
sbb
pop
adc
dec
mov
mov
fbstp
mov
outsl
jge
andl
cmc
in
mov
mov
cmp
sbb
insb
pop
aaa
scas
inc
inc
ja
icebp
fistl
jne
inc
lock
push
inc
inc
jns
outsb
out
les
mov
aam
and
in
test
lods
and
in
cmp
and
mov
jecxz
lcall
jmp
js
dec
inc
into
gs
sub
sbb
int3
add
pushf
dec
cmc
and
jge
pop
shrd
or
adc
dec
iret
sub
out
xchg
es
xchg
test
mov
inc
iret
stc
pop
dec
fldl
adc
xchg
out
push
mov
ror
xchg
pusha
mov
push
fildl
idivb
xlat
into
aad
fidivs
dec
lds
out
lds
jmp
dec
pusha
push
push
mov
stos
out
repnz
icebp
push
rcl
clc
leave
cmp
in
cmpsb
adc
push
xchg
push
data16
orl
or
mov
inc
sub
dec
out
and
mov
adc
test
bound
pop
jg
rcll
sbb
stc
dec
loop
mov
sbb
loop
popa
mov
mov
mov
cwtl
out
mov
push
cmp
leave
rorb
adc
push
mov
cltd
loope
sub
mov
js
push
out
pop
xor
std
mov
jmp
gs
pop
xchg
xchg
dec
mov
int3
aaa
das
jb
cmp
mov
xorl
dec
adc
pop
out
dec
mov
mov
fs
mov
mov
shlb
dec
xchg
in
pushf
fimuls
test
or
pop
and
in
xchg
or
pop
push
add
popf
jmp
or
das
sbb
fcompl
pop
andl
and
push
mov
rorb
xlat
jg
sbb
rorb
mov
frstor
pop
adcl
in
jp
jmp
ljmp
pop
and
imul
sub
and
jl
xchg
or
in
xchg
dec
fsts
and
gs
mov
in
xchg
mov
cli
outsb
xor
sti
push
cmp
mov
jg
rcrb
in
insb
jecxz
pusha
add
dec
es
jae
test
dec
jns
xor
movsb
cmp
out
loopne
inc
or
outsb
std
dec
xor
and
inc
push
mov
imulb
jb
or
into
popf
mov
push
movb
xchg
fistl
pop
jl
insl
inc
cmpsl
in
or
jbe
inc
xor
je
icebp
test
jmp
mov
fcomps
ja
mov
faddp
sub
jmp
movl
and
addr16
sbb
xchg
jge
and
xor
dec
mov
lret
and
mov
add
push
push
fmul
lods
idivl
lahf
mov
sti
mov
hlt
call
xchg
cmp
loope
test
sbb
add
jo
push
loope
xor
sub
inc
and
push
add
cmpsb
jmp
arpl
std
jae
sub
rorl
aaa
push
xor
popf
mov
movb
pop
mov
inc
mov
fldcw
adc
dec
lods
or
cmp
cld
pop
ds
ror
mov
cs
pop
cli
enter
inc
jbe
cmp
outsb
push
bound
fwait
imul
dec
lds
gs
imul
xor
mov
bound
push
mov
fwait
pusha
add
sub
inc
xchg
jns
cmc
or
je
out
aas
jg
and
out
lcall
add
inc
pop
scas
mov
dec
push
dec
push
aas
stc
push
bnd
gs
in
jae
cmp
lcall
mov
sahf
mov
jl
ds
cld
inc
cli
ficomps
pop
movsl
adc
leave
mov
scas
nop
pop
gs
xor
stc
sub
lret
dec
jmp
cmpsb
std
push
cli
ljmp
push
mov
inc
inc
repz
push
xor
fistl
stos
ss
dec
jecxz
cmp
scas
ret
add
cmp
std
aaa
add
in
fimuls
popa
inc
jbe
mov
cmpsb
imul
js
push
mov
xlat
pushf
xchg
scas
std
xchg
push
or
xor
je
test
pop
pusha
add
and
push
dec
adc
xor
dec
addb
add
fwait
mov
sub
and
mov
mov
aad
add
cmp
notb
loope
cli
dec
int
popa
test
nop
jle
pmulhuw
add
sub
rcrb
nop
jnp
orl
inc
or
mov
js
insb
mov
inc
pusha
imul
loopne
dec
in
lcall
mov
ret
mov
fcompl
or
xor
xor
stos
pop
mov
xlat
and
addl
in
inc
sbbl
or
sti
cmp
test
test
mov
mov
jle
mov
dec
sti
mov
ss
push
lahf
jae
mov
sbb
aam
push
aam
movsl
outsb
sbbl
sbb
dec
sbbl
push
inc
scas
xchg
push
cmp
cmc
cmpb
jg
cld
pop
gs
fidivrs
mov
into
pop
inc
mov
mov
dec
pop
clc
sub
or
dec
cli
rcl
xor
out
pop
bound
lahf
lods
dec
test
and
push
mov
sub
orb
insb
pop
dec
movsl
fwait
xor
mov
pop
rorl
push
js
daa
in
jbe
and
sub
aad
sbb
add
mov
test
xchg
les
fs
rcr
cmp
inc
div
in
out
adc
ret
sbb
je
addb
mov
pushf
xchg
sti
adc
sbb
xchg
sbb
es
scas
ja
mov
rcl
outsb
popa
icebp
adc
sub
lods
push
test
adc
iret
arpl
push
cli
add
sti
pop
loope
cs
and
push
mov
fmuls
xchg
ret
imul
jl
scas
out
xchg
cmp
add
jl
cmp
cs
cmpsl
dec
mov
mov
sub
fnstsw
xchg
fucomip
push
mov
rcrl
mov
pushf
inc
push
test
shlb
dec
test
sub
mov
add
cmp
xor
or
subb
in
in
ret
enter
push
pop
cmp
lds
popf
andb
pop
push
jns
xchg
pop
lods
jae
add
xchg
xchg
push
cmp
insb
cld
xchg
mov
sbbb
jbe
jle
sbb
sbb
xor
or
in
arpl
mov
jl
movsl
mov
cmc
out
stc
outsb
nop
sbb
pop
jnp
movsl
ret
jns
int3
sub
push
or
xchg
repz
pop
mov
mov
std
out
add
cmpsb
neg
mov
mov
add
rorl
or
pusha
and
add
addl
loope,pn
sub
aad
add
js
push
test
cmp
pop
imul
lahf
and
xchg
fwait
xor
insb
ds
int
in
ret
xlat
outsb
and
test
add
nop
movsl
push
dec
pushf
mov
add
stos
scas
popf
sbb
insl
lret
mov
and
dec
rcrb
sbb
mov
es
mov
fistps
jp
xor
add
adc
shll
cli
inc
ficoml
jge
repz
pop
mov
fcmovnbe
adc
xchg
cmp
jo
loopne
mov
leave
jmp
cmp
sbb
lahf
mov
out
std
movsb
loope
jnp
lahf
push
shlb
sbb
pop
mov
xor
imul
testb
fs
xchg
adc
xchg
in
test
or
daa
aas
bound
jno
addr16
add
lea
andl
add
push
dec
popa
rclb
fildl
jns
ficoms
xchg
in
pop
outsl
cmc
daa
jmp
movsl
mov
sub
outsb
mov
xchg
jecxz
stc
mov
cmpsl
std
pop
lahf
pop
or
mov
mov
mov
and
shll
bound
pop
iret
daa
xorl
shr
arpl
jg
fmuls
cmpsl
bound
mov
leave
fs
loop
cmp
mov
push
add
jge
data16
hlt
insb
or
out
dec
mov
imul
add
xor
jb
sub
pop
cmp
mov
cmpsl
cmc
popf
sbb
mov
push
stos
jmp
movsl
xchg
lock
mov
jnp
and
cld
test
mov
fisubrl
js
inc
outsl
das
idivb
int
xchg
xchg
push
mov
aad
dec
jb
xchg
mov
aam
imul
cmp
leave
add
sbb
mov
out
push
xchg
push
lcall
scas
cld
mov
push
nop
mov
xor
inc
repz
hlt
dec
ljmp
pop
test
adc
decl
neg
cmpsb
jmp
add
jnp
int3
dec
pop
mov
cmp
insl
mov
cmp
cmpsb
sbb
dec
pop
inc
push
and
dec
lea
sub
outsb
jns
test
add
adc
cmpsl
push
pop
int
fwait
pop
ret
stc
je
scas
sub
lea
mov
mov
call
xlat
out
sbb
dec
push
mov
sahf
mov
jle
and
mov
cmc
mov
and
push
or
lcall
iret
je
sbb
sbb
mov
push
xorb
sub
cmp
std
lods
adc
jg
pop
xchg
mov
aas
cltd
js
sbb
mov
dec
inc
xchg
mov
mov
pusha
fdivl
cmp
pop
sbb
movsb
jns
stos
dec
popa
lock
test
pop
mov
sub
xchg
adcb
je
in
sbb
inc
in
pop
jo
decl
jle
in
icebp
push
in
push
addl
mov
mov
shll
xchg
pop
mov
lods
cld
xchg
pop
arpl
ja
enter
iret
push
inc
or
pop
pop
leave
pop
cltd
rclb
shlb
mov
ljmp
and
flds
pop
push
sbb
jg
mull
ret
push
rcrb
sub
jge
sti
sbb
imul
rorb
xor
mov
fs
xor
push
sub
xchg
jge
push
pop
jp
dec
scas
lods
pushf
pop
jle
data16
sub
out
mov
sti
cmp
add
cltd
jg
sub
sahf
shlb
jle
cmp
fiaddl
ljmp
hlt
cli
jnp
outsl
mov
xchg
inc
pop
clc
xor
pop
sbb
xchg
loop
movsl
test
pop
jne
add
daa
sub
mov
mov
cmp
add
push
pop
lahf
jg
push
inc
jnp
or
inc
imull
add
testl
movl
mov
scas
ljmp
pop
mov
dec
les
pop
fs
insl
popf
jecxz
jecxz
imul
out
fisubrs
dec
push
mov
pop
inc
into
add
inc
sub
add
inc
jg
cmp
sbb
icebp
sbb
int
iret
loope
outsl
lea
xchg
adc
cli
cmp
inc
idiv
cmc
lcall
aas
mov
cltd
xchg
mov
mov
add
sbb
lods
sub
pop
pop
jle
push
cli
mov
xor
sbb
imul
xor
xor
xchg
fbld
mov
in
orb
ljmp
jno
daa
xchg
fimull
sub
xor
gs
sbb
ja
push
cmp
lock
pextrw
xchg
ds
out
mov
lods
faddl
mov
inc
and
imul
mov
lret
adc
mov
xor
sbb
jno
adc
loopne
dec
mov
imul
addr16
and
stos
inc
stc
push
outsb
mul
in
jp
add
adc
xchg
test
push
jno
iret
xchg
xchg
push
sub
repnz
mov
add
js
and
scas
aam
mov
mov
int
sbb
inc
add
cmc
in
cs
push
xchg
mov
dec
mov
lock
cltd
or
sbb
lret
pop
daa
test
mov
or
loope
repnz
xor
subb
dec
mov
daa
pop
sarb
adc
mov
stos
mov
popa
leave
ds
inc
hlt
rorb
sub
xchg
xor
add
inc
in
jb
std
les
mov
stc
rorl
push
xchg
iret
adc
add
mov
rorb
scas
addr16
aad
or
in
jne
jl
enter
inc
adc
jg
jno
data16
cmc
pop
out
repnz
popf
pop
and
and
jp
clc
data16
inc
rcl
jmp
mov
jno
daa
jo
mov
pop
jo
sbb
fisubs
sub
cmp
rolb
add
scas
add
test
push
pusha
push
loop
in
or
adc
fcoms
mov
ljmp
mov
cmp
push
dec
cmc
mov
jno
jl
mov
xchg
in
in
pop
loope
movsb
repnz
xchg
cs
jns
cld
dec
mov
or
or
push
add
pop
jmp
ds
xor
cmp
es
xor
fcom
mov
xchg
pop
jno
addr16
decb
movsb
cmp
jae
int
push
inc
adc
out
inc
xchg
sbb
call
hlt
push
sbb
jae
mov
out
pop
jp
pop
imul
fnstcw
mov
fs
xchg
push
jne
iret
xchg
jle
jbe,pn
and
adc
mov
les
rolb
xor
pop
lcall
mov
adc
push
inc
test
add
mov
rcll
stos
mov
inc
push
xor
xchg
and
loope
imul
out
push
lods
mov
les
mov
pop
or
mov
loopne
sti
cld
pop
andb
in
aam
inc
jb
inc
inc
dec
adc
xchg
mov
mov
fadd
mov
or
jge
das
mov
pop
out
scas
mov
ror
jns
out
fisubrl
int3
ret
dec
call
jecxz
push
fs
inc
sub
notl
add
ret
mov
ja
ljmp
test
jl
sbb
mov
xor
jne
pop
jl
pop
ja
test
mov
push
pop
push
or
pop
push
fidivs
inc
push
cltd
loope
fimull
push
add
in
lcall
insl
filds
lcall
xor
stos
addr16
in
fstpt
loop
mov
lods
out
out
test
mov
dec
pop
add
nop
inc
xchg
mov
rclb
popf
xor
push
call
arpl
mov
mov
negb
xchg
push
outsl
into
je
dec
int3
pusha
sbb
or
push
mov
cmp
aam
lds
outsb
dec
add
mov
leave
mov
sbb
jecxz
push
mov
data16
std
jnp
mov
xchg
mov
nop
add
mov
pop
mov
mov
mov
fcmovbe
fs
cmp
rcrl
scas
std
mov
stos
push
cmpsb
mov
ret
push
cmp
aad
inc
mov
add
loop
rclb
dec
mov
push
movsb
push
out
cli
sbb
push
sbbb
dec
lods
icebp
aam
call
rcll
mov
push
or
push
in
cli
aaa
movsb
mov
add
xor
pushf
mov
inc
push
out
out
mov
sbb
jns
sub
mov
add
xlat
mov
shrd
inc
cmp
into
add
pop
and
mov
mov
popf
fisttpll
pop
stc
shll
test
push
out
insb
les
stos
loop
and
pusha
dec
pop
pop
mov
insl
mov
xchg
push
cmp
insl
xchg
movsl
stc
sub
xor
sbb
clc
test
or
movl
mov
sbb
std
sub
iret
dec
mov
out
gs
cmp
sub
jbe
lods
das
inc
sbb
xchg
pop
das
cli
out
xor
cwtl
cli
es
in
fwait
dec
push
push
out
lock
or
jne
or
inc
ljmp
cmp
mov
sahf
int
inc
int3
xor
inc
cld
je
add
xchg
lods
jb
jmp
adc
rcl
mov
xorb
daa
cmp
add
fwait
add
out
sub
push
mov
dec
mov
into
xchg
sbb
sbb
xchg
push
push
scas
push
repz
sub
mov
imul
test
add
int3
loopne
call
adc
stos
dec
cltd
das
stos
pop
lahf
int3
aas
mov
idiv
sarb
pop
xor
les
es
shl
add
ss
jecxz
pusha
loopne
adc
pop
and
mov
lods
xchg
lods
or
jmp
leave
popl
addr16
mov
inc
fcmovu
push
or
and
dec
mov
jno
xchg
push
dec
cmpsl
add
loopne
das
inc
rcl
xor
mov
jne
sub
test
pop
int3
mov
xchg
jnp
dec
and
fwait
popf
jns
xchg
pop
testb
inc
insb
xchg
nop
lea
test
icebp
call
jmp
mov
push
incb
dec
dec
in
jl
or
pop
add
mov
mov
clc
sub
mov
hlt
dec
lods
adc
push
movsb
fdiv
pop
loop
mov
or
test
add
stos
repnz
dec
cld
push
cli
push
lods
cli
leave
lret
sub
xlat
lret
ja
dec
dec
outsl
mov
lds
sbb
adc
add
mov
mov
outsl
ljmp
dec
xchg
cltd
jle
pop
push
mov
sar
aas
movb
add
push
add
push
and
mov
sbb
stos
add
vmulps
add
addb
pop
and
add
mov
jno
and
aad
xlat
aad
inc
sarb
enter
bound
push
aaa
cmpsl
dec
add
mov
test
or
jae
mov
fbld
sarb
into
mov
xor
pop
stos
fcomps
push
add
stos
fldcw
lods
mov
in
pop
int
push
scas
jmp
out
outsb
mov
jo
jne
arpl
mov
mov
inc
jns
cs
inc
sbb
out
out
fsubrp
aad
testl
fistpll
jns
mov
xchg
jb
xchg
adc
cmp
movsb
cltd
xchg
pop
and
mov
fnstenv
inc
cmp
jo
push
shrl
mov
movb
ja
dec
xor
out
sub
jbe
loope
xor
iret
jno
or
bound
xchg
push
xchg
mov
bound
pop
dec
adc
mov
cmp
repnz
scas
cwtl
jnp
and
pop
or
push
add
loop
pop
inc
mov
add
mov
fisubrs
push
arpl
cmp
adc
xchg
mov
push
es
data16
aaa
fwait
pop
mov
push
pop
push
or
lds
mov
mov
jecxz
fisttpl
xor
push
or
xchg
jecxz
shlb
mov
imul
push
xor
dec
cmp
mov
sub
pop
cmpsl
pop
mov
mov
push
xor
enter
mov
test
add
ss
sub
ja
push
pop
int
call
adc
adc
add
aam
cli
mov
mov
jno
gs
push
adcl
gs
rclb
fsubrs
ret
lock
das
push
scas
push
es
xor
lret
pop
cmp
jno
pop
popa
xor
ret
push
mov
lds
lods
movl
sti
lea
mov
sti
dec
mov
mov
jl
mov
lahf
out
adc
mov
divl
daa
ret
clc
cmp
inc
xor
shrd
fisubl
xor
into
fsubp
mov
in
into
mov
sbb
int3
xchg
mov
jmp
ret
icebp
cltd
ja
mov
enter
sbb
sub
ret
xchg
sbb
jp
cmp
sub
in
aaa
pop
inc
test
hlt
flds
xor
cmp
clc
clc
mov
sbb
stos
pop
jmp
mov
into
das
sub
jbe
lcall
inc
jne
int
and
data16
adc
and
icebp
cmpsl
cmp
adc
out
mov
jo
xchg
pop
gs
cmpb
in
out
fisubrl
and
push
inc
fsubl
fisttpl
pop
sbb
jge
in
divl
lds
fsubrl
loop
in
pop
adc
xchg
inc
out
clc
aam
lds
mov
adc
sbb
ljmp
out
sbb
pop
lods
add
adc
xlat
push
outsl
fsubl
lcall
add
cltd
clc
popa
int3
scas
gs
dec
push
aaa
xchg
in
ds
mov
push
pop
data16
pop
je
cmpsl
sub
xor
shll
and
jns
xor
mov
xchg
mov
test
or
pop
and
ljmp
sub
imul
pushf
xchg
in
mov
pop
push
fs
call
and
rcll
insb
inc
cwtl
jl
or
pop
ss
repz
addr16
mov
imul
inc
scas
scas
aam
pusha
loopne
jmp
inc
mov
and
rcrl
ss
xor
mov
xchg
mov
fcoml
repnz
js
loope
pop
outsb
das
xor
add
or
push
rcl
fiaddl
or
rcll
fwait
rorb
fistpl
inc
adc
inc
mov
lahf
fildll
push
sarb
fwait
add
inc
mov
mov
inc
xlat
and
dec
mov
xor
mov
mov
fildll
push
sbb
push
lahf
and
and
scas
sub
aaa
adc
adc
inc
push
out
xchg
add
mov
sub
mov
sbb
push
movsl
sub
xorl
movhps
aas
test
fildll
in
pop
xchg
adc
mov
push
ror
ret
das
and
mov
mov
and
inc
dec
sti
jno
xlat
dec
lcall
out
arpl
out
mov
addr16
mov
dec
sbb
adc
ds
jmp
mov
inc
ds
les
sahf
in
xor
mov
aaa
push
cwtl
fisubl
pop
mov
adc
lret
xor
lret
cmp
sbbl
or
mov
pop
es
inc
in
jns
fs
fcoml
or
sbb
jae
aam
mov
in
hlt
imul
lods
add
mov
inc
dec
loop
pop
jle
call
add
mov
jb
xchg
add
ss
jae
push
clc
jl
adc
mov
pushf
cltd
pushf
pushf
and
xchg
sahf
pop
mov
pop
and
xchg
lock
pop
mov
out
or
ret
and
pop
dec
pop
out
add
add
or
out
aaa
xlat
mov
mov
jne
je
rorb
lcall
push
push
mov
rcll
frstor
and
fldl
mov
cmp
mov
fiaddl
jnp
shrb
mov
hlt
test
shl
dec
sbb
jbe
push
ds
pop
mov
add
jb
into
push
lods
les
fistpl
inc
and
enter
ficoml
pop
or
and
xchg
xor
shl
mov
pop
sbb
pop
jno
xchg
sub
mov
ret
cmp
subb
sub
pop
addb
xlat
sbb
aad
andl
jp,pn
clc
fdiv
add
lret
faddl
repnz
mov
sub
cmpsb
mov
stc
movsl
xchg
dec
stos
sbb
jmp
xor
xchg
outsl
sbb
lods
lea
xchg
push
push
pop
jge
and
insl
repz
hlt
pop
add
pusha
push
add
push
and
idivb
fadds
jno
xchg
cmp
adc
jl
cmp
mov
cwtl
xlat
jne
xlat
pop
sub
insb
ja
jp
jo
sysenter
inc
jnp
test
out
pop
pushf
inc
dec
insb
mov
cltd
out
mov
enter
fdiv
scas
outsb
pop
popf
outsl
iret
nop
dec
xor
fcom
enter
lea
dec
pop
call
jl
je
inc
xchg
rorl
or
stc
sub
add
scas
sbb
lods
adc
int3
outsl
mov
mov
je
iret
scas
out
lds
je
and
aaa
adc
fcomps
daa
adc
or
inc
lret
icebp
scas
mov
adc
insl
push
jl
mov
jb
push
iret
push
push
hlt
mov
out
or
xchg
fsubs
mov
or
inc
inc
add
movsb
jae
dec
cmpl
mov
dec
in
mov
add
xor
and
cmpsb
in
and
sub
sub
lea
sub
adc
xchg
mov
xchg
adc
fsubl
jae
fldt
in
adc
adc
or
cmc
dec
push
lock
pop
cwtl
jnp
cmp
add
adc
daa
and
inc
test
push
stc
add
xchg
test
jbe
adc
push
and
sub
loope
mov
test
scas
out
mov
adc
dec
mov
pop
aad
push
xor
fwait
pop
xchg
and
sub
xchg
sbb
inc
or
push
fsts
fiaddl
jle
mov
inc
ret
fdivrs
xchg
cmp
aas
xor
incb
adc
or
xchg
ds
les
jno
je
add
mov
jo
aam
sarl
pextrw
pop
add
jmp
push
xor
dec
push
or
mov
insl
inc
push
mov
leave
xchg
push
jo
add
xchg
sub
aas
je
lcall
insl
jmp
push
adcl
jl
push
sub
fs
push
pop
or
mov
cmc
adc
jb
or
fwait
xchg
pusha
sub
inc
stos
imul
div
xor
mov
push
imul
cmp
jmp
push
pop
mov
loop
xchg
fcomp
jmp
push
dec
and
add
mov
xor
ss
push
iret
pop
ffree
out
arpl
paddw
push
mov
jb
mov
adcb
std
daa
sub
dec
ja
mov
jae
arpl
in
incl
and
hlt
insl
jae
gs
cmp
or
call
cld
cmp
fildll
ja
in
dec
push
lret
cs
or
pop
add
fsts
repz
cmpsb
mov
das
mov
lcall
pusha
jecxz
xchg
pop
test
jns
rcrl
sub
pusha
mov
idivl
rcrb
push
jbe
aad
lcall
push
adc
imul
pusha
cmc
push
fwait
inc
repnz
pop
scas
xchg
iret
call
sub
mov
into
lock
fsubs
ljmp
push
pop
ja
fisubrs
mov
mov
ficoml
loop
fcoml
jo
movsl
outsb
into
imul
mov
adc
popf
push
in
sbb
hlt
dec
sbb
jmp
inc
jae
sbb
mov
mov
fmuls
mov
jg
sub
mov
loopne
mov
dec
xor
repnz
sub
imul
inc
pop
mov
aad
mov
in
sub
jmp
xchg
or
lret
fidivl
aad
pop
pusha
repnz
int3
popa
insb
stc
insb
mov
dec
dec
jo
pop
ljmp
fs
cs
insb
test
xor
cwtl
cmp
bound
inc
adc
clc
fsts
loop
scas
pop
sbb
dec
js
outsl
xor
stos
lods
ljmp
mov
lret
repz
sub
fwait
cmpsl
or
lods
test
push
jmp
sbb
repz
out
ja
sub
cwtl
xchg
jle
jecxz
cmp
cmpsb
ret
jo
pop
inc
pop
pop
and
mov
lds
js
adc
push
leave
pushf
cmp
sbb
dec
xor
and
adc
mov
sub
xchg
dec
add
loope
add
cli
push
loopne
movsl
xor
shrb
inc
and
je
adc
adc
in
testl
or
inc
rcr
leave
xor
sub
dec
add
push
mov
sub
cmp
repz
les
stc
scas
or
stos
push
or
icebp
gs
pop
or
jo
pop
sbb
inc
lock
out
stc
dec
ret
fstl
shll
fildl
sub
lcall
pop
adc
xchg
in
pop
and
mov
pop
stc
adc
and
sub
les
dec
out
dec
cmc
xchg
mov
mov
fists
jne
add
repnz
pop
leave
adc
lahf
pop
addr16
mov
leave
push
fnstsw
orb
inc
lahf
test
lea
jle
push
adc
xor
xchg
mov
iret
or
stc
scas
movsb
adc
mov
inc
dec
mov
jns
fsubrs
in
and
shlb
lahf
pmulhuw
lods
xor
jno
fsts
into
jmp
adc
and
in
lea
stos
cmp
push
dec
hlt
popa
js
daa
repnz
xor
lock
das
js
and
pop
bound
dec
push
pop
xchg
lret
rolb
xchg
adc
std
dec
or
sti
xor
pop
dec
ret
andl
dec
cmpb
test
or
adc
in
cltd
scas
xchg
adc
mov
xor
test
in
aas
pop
shll
cltd
icebp
push
jne
pop
adc
mov
jb
adc
and
ljmp
leave
fcoms
dec
in
insb
xchg
mov
outsb
add
fstpl
inc
dec
sub
and
dec
lret
je
sahf
lahf
outsb
dec
mov
adc
js
popa
adc
ret
movsl
lahf
mov
xchg
daa
nop
cli
inc
dec
jne
inc
mov
sahf
sub
mov
xor
push
jne
mov
gs
jae
cmp
shl
fadds
cwtl
push
mov
cmpsb
or
imull
jecxz
daa
sub
out
push
sub
movl
fstpl
mov
dec
scas
shl
cld
lods
mov
popf
pop
jae
xchg
pop
pop
xor
fwait
inc
adc
js
outsb
mov
jmp
mov
gs
mov
les
pop
pop
mov
mov
idiv
mov
fbstp
dec
inc
fsubrs
mov
jle
sub
xor
pop
jecxz
popf
inc
jae
icebp
fidivrs
repnz
sub
inc
mov
les
ss
movl
arpl
pop
push
cmc
cmpb
and
inc
sti
push
leave
dec
adc
lret
out
insb
mov
mov
pop
sahf
les
enter
push
sbb
ljmp
sti
imul
arpl
cvtps2pi
inc
inc
aad
pop
mov
fnstenv
es
mov
lds
mov
sahf
fwait
out
xchg
arpl
lods
sbb
mov
pusha
subb
fstl
clc
mov
outsb
test
clc
xchg
jmp
mov
or
mov
lock
out
insb
xor
fildl
pop
adc
cltd
lock
imul
pop
dec
pop
or
dec
inc
dec
je
inc
xor
sub
leave
fcoms
jg
call
clc
xchg
pop
mov
test
enter
std
hlt
dec
cmp
faddl
xchg
jb
inc
lahf
and
dec
movsb
imul
pop
cmp
cmpsl
ret
pop
inc
leave
and
and
xchg
xlat
rclb
push
dec
ds
xchg
movsb
adc
and
cs
sarb
push
push
or
add
mov
xchg
sbb
cmp
and
testb
fildl
and
xor
and
and
test
call
aad
xchg
and
xchg
test
and
test
nop
or
pop
fnstcw
push
and
icebp
mov
dec
testb
cli
addb
cld
pop
out
jg
sbb
and
mov
lret
push
enter
mov
mov
cmp
scas
pop
mov
inc
aam
les
clc
adc
cmp
push
dec
add
jns
dec
ljmp
xchg
or
xchg
adc
in
sub
iret
push
fistl
adc
xchg
adc
jge
dec
sub
xchg
and
and
inc
xchg
aad
std
xchg
cmc
cmp
movsl
mov
arpl
mov
and
pop
jns
mov
sbb
out
sbb
fninit
mov
int
jno
add
icebp
shll
jmp
jbe
cltd
jo
jl
adc
sti
bound
repz
jge
icebp
dec
dec
or
mov
dec
stos
dec
or
imul
ja
cmp
cmp
ss
mov
int3
inc
add
out
push
dec
lods
or
ds
ret
push
cmc
fsubl
mov
push
pusha
ljmp
fists
mov
lea
xchg
lods
xorl
lds
jbe
mov
lock
pop
ljmp
inc
sti
fistpl
out
jne
lcall
lret
aad
mov
lods
sahf
mov
scas
test
pop
ja
cmpb
cmp
js
xchg
test
loopne
sub
ror
shlb
pushf
int3
repz
push
push
add
pop
xchg
decb
stos
enter
push
xor
outsl
mov
dec
adc
jb
push
and
inc
scas
ss
sti
fldcw
arpl
mov
enter
fistps
adc
das
aas
out
add
cmpsl
pop
mov
pop
lahf
xchg
mov
pop
cmp
jae
xor
xor
call
lds
in
add
or
leave
mov
cmp
xchg
inc
mov
cmp
mov
sbbl
mov
fnstenv
outsl
inc
les
ss
adc
stos
fstps
rcrl
pop
popa
stc
jmp
cmpsb
icebp
adc
aaa
test
andl
cmp
xlat
rcl
and
shrb
rolb
inc
adc
inc
pushf
daa
push
outsb
xchg
xchg
jmp
add
in
rcl
repz
mov
jg
sbb
cld
xchg
dec
mov
xchg
gs
jle
push
cmp
jle
xrstors
inc
lock
pop
pusha
stos
dec
jae
and
push
bound
jecxz
mov
ds
xchg
or
mov
pop
fwait
inc
leave
and
push
icebp
cmc
in
push
int3
and
fmuls
or
aam
fisubrs
je
lods
movsb
scas
repnz
or
ret
adc
cmpsb
pop
lock
sbb
jae
xchg
leave
scas
arpl
pop
xor
fnstsw
bnd
scas
outsb
inc
mov
push
push
push
push
pop
std
out
mov
lcall
int
popf
mov
shrb
pop
mov
lock
ret
bnd
enter
rcr
lcall
mov
mov
mov
repz
loopnew
pop
imul
pop
shlb
xchg
mov
sahf
in
jl
jae
or
out
mov
lds
cmpsb
mov
jae
ljmp
mov
test
scas
mov
sub
fwait
loope
out
nop
outsl
cmpsl
xor
lcall
lods
or
sub
mov
repnz
clc
data16
jns
cmc
sub
dec
aad
lret
ficoml
mov
movsl
loopne
jmp
inc
sub
pop
jl
jnp
xlat
sbb
outsl
daa
push
mov
lock
push
ja
adc
and
sub
scas
mov
notl
or
dec
int
lea
dec
in
xchg
stos
ds
pmullw
cli
aad
xchg
pop
aas
pop
mov
scas
cli
mov
fisubrs
loope
inc
loopne
mov
push
icebp
xchg
pop
xor
jle
mov
in
lods
add
cld
outsl
outsl
nop
aas
or
adc
ja
xorl
call
mov
cmp
aam
add
or
jg
call
imul
mov
cwtl
sahf
test
jp
ljmp
popa
jae
fwait
push
les
xchg
push
js
enter
mov
cmp
dec
cmp
out
mov
jl
lcall
mov
ljmp
outsb
adc
shlb
sub
shrb
jne
into
cmp
es
frstor
push
jge
mov
jb
pusha
cmp
ret
cmp
inc
stos
jge
ljmp
inc
dec
lock
sbb
add
sbb
sub
popf
pop
mov
lds
ja
repnz
cmp
add
cli
push
cmp
jno
andb
jbe
cmp
das
inc
aad
arpl
pushf
je
dec
or
lret
les
in
mov
aas
popa
scas
lcall
jecxz
pop
dec
pop
cltd
pop
fwait
rcrl
sbb
das
clc
fsts
xchg
mov
jne
movsb
iret
lods
testb
mov
mov
and
inc
pop
cmp
mov
repz
pushf
out
daa
popa
mov
mov
test
sarl
pop
mov
es
or
add
jmp
ljmp
xor
imul
push
cltd
jnp
test
ss
movsl
ret
rcll
xchg
inc
sub
mov
xchg
fisubl
or
inc
in
add
mov
sti
lods
sbb
test
sbb
mov
xor
jge
popa
sbb
icebp
in
push
xchg
lea
cmc
ljmp
vpunpcklbw
mov
jo
in
lahf
cmp
ja
testb
sub
push
insl
xchg
aaa
add
jno
jmp
fwait
cmp
aad
inc
rorl
add
sub
rcr
js
mov
cmp
in
repz
or
xor
hlt
sbb
fstp
dec
dec
insb
mov
sbb
pop
jg
popa
aam
mov
and
lahf
inc
add
jecxz
out
mov
push
pusha
dec
stos
pop
js
out
cli
sub
inc
xchg
mov
inc
lock
addb
movsl
jle
mov
adc
cmp
ss
and
fabs
fs
imul
out
adc
hlt
and
or
push
cmpsl
fwait
mov
cmpsl
dec
xchg
aad
jb
aad
fisubrl
lret
push
shrl
push
mov
pop
inc
add
call
out
adc
sbb
jmp
inc
std
mov
sbb
movsb
fdivr
in
pop
mov
mov
les
movsb
cltd
dec
cld
std
mov
sahf
push
cmp
out
jo
ljmp
mov
inc
inc
outsl
cmp
lds
cmc
insb
cmpsb
daa
push
cli
repnz
xchg
stc
clc
ret
pop
push
cmc
cld
push
adc
mov
push
icebp
std
fdivs
cmp
cmp
out
enter
pop
aam
mov
or
test
push
and
mov
addl
mov
lret
shll
push
mov
out
fsubr
in
out
stc
xchg
xchg
mov
gs
std
adcl
fsts
or
in
mov
sub
outsl
xchg
xor
clc
pop
push
outsb
mov
and
jmp
pop
inc
cmp
lds
and
xchg
pop
mov
jl
sbb
xlat
cmp
cmpsl
or
xor
dec
mov
les
je
lahf
xchg
es
push
inc
aad
adc
les
ret
shrb
cwtl
push
ds
mov
bnd
js
cmp
out
inc
arpl
or
sbb
pusha
cmpsb
aad
mov
mov
das
shll
mov
adc
call
sub
sub
ret
jbe
sub
mov
sti
push
fistpl
jbe
xchg
and
cmpb
mov
push
les
cmovbe
mov
lock
add
mov
pop
xor
dec
or
daa
imul
out
shrb
adc
test
adc
inc
stos
in
push
add
pop
clc
das
jne
push
rclb
jns
jbe
xchg
push
mov
mov
adc
sarb
push
mov
mov
pop
jp
push
pop
dec
cmp
in
adc
mov
dec
jle
xchg
cmp
shll
or
xor
out
outsb
ret
das
ret
jge
adc
mov
out
mov
xchg
pop
mov
fcompl
testb
loop
imul
out
mov
inc
jp
cmp
popf
cmp
and
inc
xor
adc
jns
repnz
scas
movsl
push
stos
xor
sbb
mov
jp
mov
pop
pop
out
dec
dec
jmp
mov
lahf
arpl
das
outsl
push
rclb
dec
adc
inc
decb
sbb
mov
int
sub
je
jmp
jmp
fdivrl
push
push
adc
jns
pop
inc
arpl
lods
dec
jmp
inc
aam
mov
scas
push
in
outsb
cltd
sbb
push
add
out
pusha
sbb
pop
aaa
adc
push
lret
jmp
adc
pop
pop
xor
add
xor
add
xor
pop
inc
mov
outsl
fsubr
dec
pusha
lret
xchg
int
mov
cltd
fcomp
push
insl
and
jmp
lods
dec
shll
mov
into
adc
loopne
das
jg
fidivs
mov
out
add
in
push
popaw
lahf
in
icebp
mov
ds
fstps
or
dec
ficoms
mov
andb
outsl
inc
movsb
aas
pop
cmp
jb
xchg
aad
xchg
pop
es
mov
xchg
xchg
and
push
aaa
xchg
xchg
movsl
mov
jle
out
dec
lahf
xchg
cwtl
insl
mov
sub
pop
scas
or
cmp
out
stos
hlt
xorl
or
cmc
ficoml
xchg
pop
clc
cmp
jb
sub
jnp
in
mov
push
jb
imul
jl
mov
inc
inc
add
lods
ds
mov
or
jno
lcall
adc
cmp
pop
adc
ret
out
mov
in
fidivl
lahf
daa
fistl
ss
sub
call
out
push
cmp
add
notl
and
mov
pop
add
lods
pop
aam
xor
cwtl
and
psubd
in
repnz
or
push
push
loope
fldcw
lret
mov
clc
pop
and
call
mov
cld
movsl
push
cmpsb
mov
mov
sub
add
in
inc
mov
push
jmp
mov
jnp
xchg
cld
cmpsb
fildll
gs
subb
sub
add
lret
jbe
movntps
repz
or
testl
push
add
jno
adc
test
arpl
jp
add
sarb
adc
and
lock
jmp
push
jg
xlat
sbb
xchg
pop
xchg
xor
ljmp
cwtl
cmc
pushf
cmp
fstpl
imul
inc
pop
xchg
sub
sbbb
inc
fdivs
in
xchg
pop
push
insb
push
jecxz
xor
or
jmp
mov
mov
jb
cwtl
sub
cwtl
lea
push
sbb
pusha
and
push
push
roll
xor
popf
pop
cmp
mov
fucomi
lahf
imul
push
jnp
dec
test
cltd
and
dec
jo
jns
xor
mov
push
mov
push
sbb
data16
lock
sub
mov
xor
jbe
inc
fldcw
sbb
mov
xchg
leave
and
lock
imul
ljmp
push
jb
stc
sbb
lret
xorl
ret
aad
xchg
jbe
pop
inc
sub
cmp
fcmovbe
enter
sbb
sti
xchg
push
mov
pop
add
hlt
mov
ss
bound
adc
push
pop
add
ja
in
mov
xor
mov
push
call
insb
aas
inc
neg
and
cmp
mov
or
cmp
sar
xchg
inc
pop
or
rcrb
loope
fnsave
inc
shrl
mov
xor
pop
jnp
jmp
sbb
arpl
inc
dec
or
mov
sbb
jecxz
jmp
ds
add
dec
mov
jns
mov
insl
and
movsb
clc
insb
sbb
cmp
es
fstp
ss
mov
ja
or
int3
pop
and
fdivrl
xchg
lds
std
or
jp
and
shll
and
xor
jge
pop
lret
mov
mov
addr16
mov
add
pop
push
push
xchg
movsb
divl
mov
iret
pop
xor
sbb
push
enter
adc
mov
std
mov
cmpsb
sbb
push
dec
aas
roll
lods
inc
mov
int3
push
cmpsb
cltd
in
inc
or
adc
cld
leave
jne
lret
das
sub
subb
fs
pop
pop
pop
mov
or
xchg
pop
sbb
ss
mov
mov
in
mov
inc
int3
lods
and
aas
dec
scas
outsl
push
lods
icebp
jae
cmp
sub
iret
test
push
lods
jle
scas
mov
mov
loop
ja
mov
bound
loope
adc
addr16
and
mov
cli
inc
testl
clc
jmp
mov
iret
lds
aam
imul
lahf
bound
int
out
int3
in
rolb
jae
mov
adc
sub
cmp
mov
lahf
std
cmc
dec
inc
dec
xchg
sub
pop
mov
push
dec
cmp
popa
inc
aam
push
xlat
xor
orb
jecxz
pop
mov
loopne
and
mov
and
pushf
test
lcall
cmp
inc
dec
imull
cmp
jg
ljmp
in
nop
les
dec
jl
stc
dec
mov
sbb
popa
icebp
hlt
sbb
movb
sarb
adc
add
or
sub
mov
std
mov
int3
lods
jl
aaa
sti
dec
mov
lods
lods
mov
fldt
je
fbld
inc
jno
cli
sub
jle
loop
mov
and
insl
cmpsb
jp
pop
sahf
xor
mov
ljmp
int
cmc
xor
fsubrs
sbb
ret
mov
addr16
loope
mov
shrl
mov
push
cwtl
jge
jne
leave
not
test
jbe
lods
rcrl
cli
xor
out
sbb
std
mov
xchg
mov
mov
arpl
cmp
mov
mov
inc
xchg
out
cmc
or
shr
xchg
cmp
xor
push
andnps
pop
outsb
into
out
enter
movsb
fadd
dec
xchg
inc
push
dec
ficompl
jmp
push
pop
cli
mov
data16
sub
and
add
cmpsb
mov
dec
lds
incl
rcrl
xlat
mov
js
cmp
and
mov
rolb
pop
cltd
pop
filds
nop
cmp
pop
rcrl
lea
push
fnstsw
ss
pop
xchg
cmp
and
leave
ficompl
icebp
insb
dec
dec
mov
cltd
cwtl
mov
add
popf
repz
pop
fsubl
mov
adc
inc
fdivs
inc
xor
lds
sbb
pop
cli
mov
scas
fcmovbe
or
aam
lock
and
pop
mov
xor
xchg
orl
lret
insb
xor
sahf
cld
aad
push
cwtl
sub
insl
adc
lret
push
or
data16
aad
ret
nop
mov
mov
cmpsl
sahf
dec
mov
mov
mov
out
psrad
mov
addr16
adc
and
out
je
adc
xor
push
mov
lret
mov
js
loope
mov
cltd
xor
or
rcr
inc
and
pop
dec
inc
dec
xor
mov
fisubrs
scas
outsl
dec
add
in
ja
iret
mov
pop
cld
flds
mov
stos
stos
fwait
cld
inc
ja,pt
add
scas
jns
add
sub
mov
pop
dec
jo
into
fsts
outsl
or
test
xor
jo
test
pop
add
rcrb
mov
jl
outsl
test
js
flds
pop
out
mov
inc
sub
shll
jae
inc
rcll
out
dec
pusha
jno
clc
outsb
and
out
push
shrl
cmp
inc
repz
sbb
xor
popf
daa
jnp
jle
jmp
jns
xorl
aad
sbb
pop
sbb
pop
and
or
jp
dec
stos
mov
mov
or
inc
mov
enter
rol
jbe
outsb
adc
xchg
cmpsb
dec
cmp
iret
icebp
jge
stos
and
push
mov
or
cmp
sub
add
adc
sbb
test
and
dec
jecxz
jne
cmc
cmc
std
dec
adcb
repnz
jp
popf
xchg
aas
sub
pop
stos
add
aad
cld
mov
mov
lods
sbb
scas
clc
sub
sub
outsb
test
dec
xlat
inc
stos
jmp
pop
push
push
pop
mov
sahf
xor
std
xor
mov
xor
mov
push
cmc
data16
sub
fadd
hlt
in
or
pop
add
fstpl
jg
shrb
mov
jnp
insb
push
aas
mov
dec
popf
mov
push
xchg
pop
push
loop
fsubl
daa
add
pop
inc
ds
cmp
cwtl
sbb
push
cld
addr16
loope
clc
or
ljmp
xor
ss
clc
cli
adc
in
aas
jns
xlat
dec
dec
mov
xor
and
and
push
sti
dec
jecxz
lret
int3
pop
fcmovnbe
and
icebp
outsb
inc
mov
sbb
xor
push
pop
push
pminsw
scas
jne
dec
adc
cmpsb
ljmp
negl
leave
pop
dec
imul
or
xor
pop
add
mov
inc
jecxz
out
xchg
push
inc
dec
jecxz
leave
jns
popf
icebp
lahf
repnz
clc
pusha
lahf
jo
divl
loope
cmp
pop
push
outsl
lret
lret
xchg
cltd
stc
mov
jb
dec
lods
xor
scas
mov
fcomi
imul
sbb
mov
mov
jecxz
xchg
and
pop
mov
fimull
aaa
xchg
outsb
notl
xchg
or
sub
push
push
cmp
sbb
pop
xchg
inc
push
sbb
or
addb
fdivrs
and
adc
clc
jl
sarb
daa
xor
mov
mov
cmp
mov
add
shll
loopne
stc
dec
ret
pop
int3
sub
or
jns
add
stos
cmp
mov
loopne
xor
inc
sub
xlat
cmp
inc
pop
push
stc
push
and
mov
xchg
out
mov
sbb
repz
pop
mov
pop
mov
mov
mov
add
cmp
ss
ja
xchg
jbe
mov
jae
xchg
mov
lahf
mov
mov
push
pop
cld
jmp
imul
push
insl
jle
data16
sub
loope
divb
rcrl
jg
movsl
mov
lods
iret
cwtl
test
repz
dec
rol
pop
jns
inc
sar
stc
movsl
lcall
insb
mov
cmp
push
inc
dec
add
mov
mov
andb
push
mov
sbb
xchg
push
dec
push
test
jbe
mov
push
adc
dec
outsl
mov
xchg
in
lods
nop
mov
repz
cmpl
sbbb
test
sti
push
or
add
jmp
leave
adc
data16
mov
jnp
lock
sub
arpl
pop
fs
lea
lods
mov
inc
adc
ljmp
inc
adc
mov
xchg
ret
jb
dec
dec
repnz
mov
aam
inc
cmp
xchg
xchg
pop
dec
inc
xor
inc
loop
push
lock
hlt
les
add
fmuls
les
test
sti
jno
mov
sbbl
mov
dec
xor
lahf
xlat
mov
outsb
add
mov
inc
fists
in
lods
mov
cmpl
fstpt
sbbl
push
scas
lds
pop
jno
xchg
xchg
mov
jp
or
mov
mov
loope
std
bound
mov
dec
mov
sub
ljmp
pushf
mov
push
in
movsb
mov
cmp
int3
sbb
add
jl
fists
jge
je
or
aas
imul
les
cmc
pushf
out
xchg
add
adcl
cmp
cmc
pop
flds
fdivrp
jg
dec
and
leave
loop
inc
pop
inc
jno
sub
scas
test
pop
mov
nop
aaa
fisubrl
in
jnp
ret
fnsave
mov
dec
push
sub
and
cmp
stos
sub
rcll
push
js
mov
aaa
and
cmp
inc
jle
cmp
hlt
out
adc
mov
mov
xor
movsb
jge
mov
pushf
out
mov
push
clc
pop
and
xor
ss
sti
xchg
sbb
call
dec
jnp
out
xchg
jae
popa
iret
xchg
shlb
popf
lea
cltd
add
popf
cmp
jl
xor
fidivl
ficomps
int3
idivl
in
push
cld
dec
pop
in
loope
xchg
dec
push
lock
ret
leave
dec
mov
mov
dec
lds
and
mov
std
cmpsb
sub
sub
mov
mov
mov
sub
insb
sbb
dec
dec
sbb
push
push
lock
or
pushf
ja
into
dec
mov
dec
sub
lds
stos
ret
sbb
adc
sbb
aam
pop
lods
popa
shl
loopne
sbb
subl
pop
dec
cli
push
test
lods
push
adc
imul
stos
lods
stc
jg
lahf
mov
jge
xchg
std
sub
loope
testl
push
ja
pop
lahf
mov
mov
out
adc
pop
cli
das
stos
insb
jle
movsl
adc
mov
outsb
in
movsl
xor
sub
cmp
js
jb
inc
lds
push
jo
and
stos
arpl
sbb
data16
pushf
push
push
outsl
js
rol
movsb
jae
lock
xor
sbb
or
jae
cld
pop
insb
sub
in
arpl
mov
and
pop
sbb
jmp
test
sbb
sahf
test
jecxz
cmp
mov
mov
fsubrs
dec
mov
mov
jne
scas
test
outsl
xor
fistl
mov
pop
daa
and
and
into
adc
hlt
adc
xchg
loope,pt
arpl
add
mov
sbb
push
ja
cmpsl
dec
dec
stos
xor
pop
dec
sbb
jg
mov
fldt
sbb
mov
push
bound
push
cmpsb
enter
mov
cld
pop
cmc
jecxz
xor
addr16
shll
xlat
jmp
adc
sbb
xchg
sti
push
or
mov
jno
and
scas
outsl
xchg
test
push
lods
jbe
mov
inc
dec
or
ds
xchg
sbb
or
add
cltd
mov
aas
add
jo
dec
mov
cs
in
in
enter
mov
jo
mov
xchg
mov
xchg
test
scas
test
xchg
fidivl
sbb
lods
test
and
lea
push
mov
out
cmpsb
pusha
dec
out
into
ss
not
push
insl
in
icebp
sub
add
sbb
hlt
sti
xor
mov
cmp
fisttpl
xor
jae
mov
jo
das
into
cli
imul
into
sbb
inc
or
ret
imul
lret
stc
scas
xchg
scas
add
push
mov
sbbl
pusha
cli
fildll
dec
jo
pop
and
jle
sub
cmc
ficoml
cwtl
mov
bound
inc
push
lret
mov
fldcw
rcll
ficomps
fistl
mov
add
int3
fdiv
jge
dec
mov
rcrl
data16
sub
fsubl
ret
shll
shr
repnz
jo
cmp
rdpmc
fdivrp
clc
das
lret
add
sahf
sbb
movsb
lods
roll
push
aaa
mov
imul
fwait
jae
xor
pop
jmp
sbb
mov
mov
push
lds
xchg
sub
sbb
lcall
adc
daa
rcr
xor
jmp
test
shl
ja
mov
dec
clc
lret
and
gs
jbe
outsl
add
xchg
push
stos
dec
pop
sbb
xorb
cmpsb
pop
xchg
cmp
cwtl
or
xor
pop
pop
inc
jb
repz
ret
lret
fisttps
sbb
outsl
filds
xchg
push
dec
or
sub
sbb
cwtl
sbbl
push
mov
inc
arpl
push
cli
ret
jl
sub
shrl
sti
adc
fcompl
stc
and
mov
xchg
pop
and
es
mov
ja
inc
xor
iret
rolb
or
jl
test
test
cmp
xchg
inc
loopne
mov
lahf
loope
jae
jne
add
cs
int
xlat
push
repz
push
shrl
jb
jb
fimull
pop
add
mov
or
and
pusha
jns
jb
dec
lds
inc
or
mov
xchg
push
imul
sahf
push
mov
icebp
sbb
idivb
inc
imul
fstpt
popf
pop
rolb
lcall
pop
dec
daa
mov
push
xchg
adc
fs
lcall
jns
or
movsl
test
xchg
mov
push
icebp
enter
xor
inc
out
movsl
jmp
or
xor
sar
arpl
mov
xchg
pop
adc
roll
xor
sub
mov
jns
sub
lock
sub
push
jecxz
sub
enter
fisubl
inc
xor
or
xchg
hlt
adc
enter
insl
jb
fiaddl
in
mov
sbb
insl
jmp
cmp
jno
pusha
loope
pop
imul
push
repz
jns
aas
push
cli
aam
movsb
sub
xchg
mov
mov
stos
adc
mov
pop
mov
jbe
inc
and
cmpsb
jecxz
mov
sarl
xchg
movsb
jns
decb
stos
inc
out
insl
inc
adc
pushf
add
ret
cltd
cmp
test
cld
das
int3
clc
arpl
pop
add
cld
loope
lds
jle
lahf
push
outsb
pop
dec
fcompl
xor
lods
lds
xor
or
cmpsb
jo
jae
jno
and
fdivs
das
dec
mov
push
add
hlt
out
mov
pop
leave
inc
xor
lcall
mov
xor
ljmp
test
and
fdiv
lahf
add
mov
mov
daa
pop
or
popf
jne
fistl
xchg
insl
pushf
dec
in
xlat
insl
sar
sub
dec
fstps
rorb
cmpsl
popf
xor
and
das
andb
pop
mov
mov
mov
ret
cli
stos
fdivrs
mov
call
sub
fstl
mov
lahf
pop
insb
xchg
inc
fistpl
cld
sbb
inc
add
inc
lahf
mov
or
and
test
push
lcall
cmp
mov
icebp
and
add
repnz
mov
testl
loopne
repz
test
add
adc
aas
inc
mov
mov
out
cld
jbe
ja
sti
jb
sub
out
and
mov
test
lret
stc
dec
pop
out
lret
sub
shll
jae
sbb
jns
fisubrs
and
and
jecxz
push
mov
or
pop
jp
lds
xchg
sbb
les
adc
dec
mov
subl
cmp
xchg
xor
fistl
out
mov
adc
test
mov
ds
add
inc
push
xchg
call
add
cmp
xor
out
clc
mov
mov
sub
cmp
sbb
sbb
inc
xor
repz
mov
sbb
pop
inc
mov
mov
jp
int
int3
fstpt
add
shlb
inc
aad
push
jae
cmpsb
pop
add
jne
mov
loope
rclb
data16
dec
in
mov
repz
jae
mulb
cld
mov
loop
inc
notl
in
int
xchg
add
int
mov
inc
adc
pop
dec
fbld
cmpsl
movb
sbb
stos
push
js
mov
add
cs
mov
xchg
and
cmpsb
add
xchg
sti
mov
cmp
jae
adc
cmc
pop
ret
mov
push
nop
ja
int3
loop
push
scas
mov
adc
dec
sti
and
sub
js
stc
lret
pop
loop
xchg
mov
xchg
movsl
movsl
sub
fs
xchg
jb
sahf
int3
jo
enter
mov
mov
mov
pusha
js
mov
xchg
out
pushf
lret
dec
leave
jge
mov
cmc
out
push
aaa
add
dec
mov
or
sbb
call
out
xchg
outsb
xor
popl
popa
jnp
mov
pop
fnstsw
xlat
mov
rolb
mov
mov
mov
add
aam
lds
loope
inc
jne
gs
sbb
clc
popa
mov
and
cmp
cmpb
cmp
and
push
mov
or
out
rorl
rcrb
orl
xor
sbb
push
inc
hlt
inc
inc
popf
mov
pop
dec
mov
mov
mov
ja
jp
mov
inc
rorl
in
push
repz
push
mov
adc
and
mov
in
xor
add
jg
xchg
adc
xchg
cmp
xchg
adc
adc
adc
push
shl
dec
jmp
xor
pop
and
pusha
xchg
or
gs
outsl
andps
mov
pushf
inc
mov
dec
les
pop
es
sbb
sbb
imul
sahf
mov
jae
test
xchg
lret
push
push
mov
jae
pop
or
sub
cmpsb
lret
jge
iret
cwtl
push
mull
mov
add
and
mov
stos
mov
dec
or
call
xor
mov
aas
leave
push
in
nop
cmp
lods
jge
push
outsb
pop
inc
test
pop
lcall
dec
sub
in
cbtw
and
sub
sbb
xchg
in
xor
les
push
mov
inc
xlat
adc
les
scas
stos
adc
aas
inc
popl
cld
dec
fbld
stos
fcompl
notb
dec
les
sbb
bound
hlt
lds
mov
push
and
mov
pop
mov
push
sub
mov
lret
mov
sub
dec
mov
movl
adc
jl
ss
addr16
mov
dec
jecxz
mov
stos
jmp
das
xor
mov
ss
mov
sub
lods
arpl
jae
sub
jge
push
pop
jne
jns
inc
add
imul
mov
or
or
aaa
jne
int
ret
insb
xor
xchg
push
mov
scas
out
sub
jmp
fwait
or
cmp
mov
mov
cmp
lea
add
xchg
adc
popf
adc
and
fstl
lret
in
aam
inc
mov
xchg
movsb
daa
div
fscale
shl
sub
adc
pop
jnp
out
and
es
push
ficoml
aam
stos
lret
es
rcr
mov
call
xchg
push
xor
pop
cwtl
lahf
addb
jl
mov
cmp
ss
data16
mov
push
push
sub
push
cmpsb
mov
mov
jnp
rcl
push
and
lods
das
pop
xchg
pop
stos
xor
pop
ja
cmc
cmpsb
push
jo
out
cmp
or
test
add
ss
sub
lock
add
lret
jo
lock
jae
xor
push
cs
sbb
imul
adc
lea
icebp
in
xor
add
and
pop
test
sub
mov
inc
cwtl
dec
jbe
cmp
jmp
in
js
test
mov
xor
lock
out
jl
repz
adc
dec
dec
ljmp
int3
out
jns
jae
or
push
mov
sbb
inc
add
and
loopew
cmp
loopne
mul
outsb
cwtl
ficomps
pop
push
shrb
lcall
out
jno
push
sub
or
push
mov
cmp
mov
jbe
js
es
adc
adc
sahf
pop
push
or
fprem
repnz
jns
inc
sbb
add
in
push
imul
negl
or
aad
mov
mov
into
mov
into
jne
das
fs
cmp
aas
adc
or
aas
int3
gs
push
pop
imul
pop
mov
arpl
jb
cs
and
push
push
ret
sar
jle
xor
jnp
xchg
or
jge
sub
shrl
stc
fisubrl
bound
stc
jb
push
scas
and
lods
push
xor
add
mov
out
mov
jb
mov
mov
xchg
repnz
test
xchg
enter
das
jno
and
out
push
xor
sub
scas
mov
xchg
or
pop
sti
push
mov
sub
nop
cmp
sbb
into
iret
push
push
ds
ss
rcrb
dec
inc
mov
xor
lds
adc
aaa
cwtl
imul
imul
lods
dec
or
sar
popa
ret
jp
cmp
jnp
in
or
and
adc
pop
lret
lods
nop
cmp
mov
insb
jmp
out
add
and
subl
sti
lds
aas
loop
jle
push
loope
jg
dec
cld
push
out
add
mov
pop
orb
jge
shr
pusha
fidivrs
and
inc
ficoms
lea
in
adc
jbe
adc
add
outsl
lods
mov
outsl
push
shl
cs
mov
xor
or
leave
mov
adc
ss
dec
movsl
cmc
je
jo
sbb
scas
cltd
adc
xchg
scas
pushf
mov
cltd
in
or
push
sbb
dec
gs
pop
je
imul
daa
sbb
mov
mov
mov
pushf
ret
push
leave
xor
filds
ds
scas
adc
leave
dec
outsl
xchg
sbb
mov
ljmp
daa
popf
stos
imul
xor
out
mov
in
mov
add
cmp
pop
xchg
xor
add
cmc
adc
lods
rcl
sub
jb
loope
lea
rcrl
push
lret
jmp
int
push
push
mov
jecxz
shlb
mov
xchg
jae
add
rcr
mov
scas
lret
lret
test
xchg
xor
ljmp
sub
jnp
mov
lods
xorb
mov
dec
dec
inc
enter
ljmp
enter
adc
push
rol
insl
push
xor
scas
out
sti
inc
js
das
xor
sbb
push
and
cmp
add
sub
mov
xchg
testl
inc
fmul
and
push
mov
test
cmp
xor
fstpl
iret
dec
pop
fmull
adc
enter
xor
xor
dec
mov
rol
push
movsb
movsl
sub
mov
mov
mov
lea
lcall
mov
addr16
test
shl
sbb
xor
call
iret
push
nop
sarb
adc
and
ret
aas
inc
fnsave
pop
test
jp
mov
lds
stc
add
lea
sbb
idivl
sbb
mov
ds
je
sarb
loopne
dec
imul
jl
cmpsl
ds
xor
xchg
out
mov
xor
xchg
cmp
repz
iret
filds
mov
sbb
in
insl
movsl
push
jne
pop
pop
fistpl
add
push
add
push
mov
xchg
xchg
xor
negl
pop
pop
cs
mov
out
in
mov
push
sbb
mov
cmp
loop
mov
lret
lods
push
adc
lret
add
jb
in
lea
test
stos
nop
mov
out
add
orl
mov
mov
stos
pushf
dec
in
xchg
push
clc
outsl
mov
jl
rcll
cmp
jge
sub
fstpl
xor
mov
dec
sub
add
movsl
in
addr16
decl
adc
pop
and
push
xchg
mov
xchg
mov
mov
adc
lods
add
loopne
inc
insl
pusha
cmp
call
jmp
add
sbb
popf
add
fadd
mov
cmpsl
jns
mov
or
sub
int
and
fists
xchg
test
cwtl
mov
push
rcl
in
xlat
mov
xor
pop
leave
movb
mov
jecxz
xchg
test
mov
scas
adc
mov
dec
adc
imul
les
sub
leave
xchg
pop
pop
push
adc
mov
cmp
inc
xor
pcmpeqb
nop
xchg
fcomps
cmp
inc
rcr
xor
sarb
mov
inc
test
pop
shlb
xchg
xchg
call
aam
in
sbb
subl
or
ret
pop
jmp
test
push
popf
xor
in
jle
push
jl
sbb
jp
sti
add
shr
test
mov
cmp
xchg
sbb
mov
mov
or
cmc
mov
aam
fstps
and
in
mov
inc
jl
clc
rcrb
mov
popf
mov
or
daa
sbb
lret
out
xchg
lcall
es
in
xor
mov
iret
jmp
inc
rorl
jnp
push
mov
gs
sbb
push
inc
jbe
mov
je
cld
and
mov
cli
fadds
gs
cmpl
inc
out
lock
mov
in
pop
cld
pop
inc
lahf
jo
inc
pop
cmpsb
inc
ds
mov
jnp
scas
ja
xchg
mov
flds
insb
les
xor
mov
in
es
je
inc
push
flds
jp
sbb
mov
out
pop
cwtl
mov
stos
and
jb
clc
daa
xlat
mov
sbb
and
enter
or
fdivrs
mov
fsubl
sbbb
pop
daa
aas
push
xchg
xchg
adc
mov
jnp
imul
cld
sbb
out
iret
mov
xchg
mov
push
in
adc
repnz
out
shll
arpl
sub
popf
jnp
scas
jecxz
jmp
mov
int3
cs
xor
call
dec
orb
mov
stos
cmc
add
pop
dec
dec
mov
cmp
int
orl
sub
addl
sub
mov
xchg
sub
xchg
mov
jb
or
xor
js
or
jmp
rcr
sub
xchg
cli
xor
sub
test
cli
mov
mov
repnz
std
jbe
pusha
out
dec
scas
pop
fbstp
aam
and
fwait
jg
and
push
fbstp
jnp
add
fs
inc
out
jge
jl,pt
inc
pop
int3
dec
sarb
xchg
shrb
xchg
loop
pop
mov
daa
jecxz
pop
cmpsl
xor
subb
mov
xchg
jle
or
cmpsb
fisubs
sub
mov
movsb
fldl
sbb
or
mov
cwtl
bnd
push
clc
fisubl
jno
std
test
rcr
popf
mov
and
and
mov
dec
stc
mov
pop
fs
test
mov
scas
pop
push
loope
push
sbb
jno
and
leave
aas
out
cmp
subl
mov
pop
push
sub
or
imul
fsubrl
sub
mov
mov
in
jb
sub
stos
fstps
mov
mov
dec
cmp
and
pop
and
mov
pusha
mov
mov
mov
mov
shrl
rcl
and
jp
xchg
cmp
ret
cmp
push
inc
and
arpl
leave
stos
add
dec
cmp
sbb
int3
mov
clc
sub
cmpsl
mov
div
dec
jmp
lods
pop
cmp
mov
or
cmc
outsb
mov
pop
frstpm(287
add
cwtl
sub
push
hlt
inc
xchg
cmp
cmp
push
sahf
xchg
mov
divb
movsl
ret
dec
jne
cmp
sbb
dec
adc
cmp
add
mov
pop
sbb
xor
or
push
jne
out
xchg
mov
jecxz
popf
sub
aaa
dec
push
and
daa
out
cli
and
cwtl
das
movsb
jbe
mov
xchg
out
hlt
sahf
cmp
xor
lcall
sbb
sub
and
stc
adc
out
jle
insb
outsb
push
fisubrl
movsb
sbb
mov
pop
es
popa
push
fstpl
pop
cltd
cmp
test
test
jb
es
icebp
sbb
lds
scas
push
push
fidivrs
dec
pop
nop
jecxz
pop
sbb
cmp
out
jg
stc
loop
into
xchg
jnp
mov
xchg
test
sti
mov
pop
cmp
sarl
lds
jo
xchg
mov
movsb
sbb
jg
inc
pushf
pop
imul
rclb
or
push
sbb
sub
imul
xor
jbe
ja
sbb
jns
sub
in
ret
aad
xor
and
or
lahf
sub
stos
mov
jns
hlt
hlt
cld
push
pop
pop
inc
pop
popf
loop
push
jns
imul
and
or
lds
gs
mov
mov
retw
add
int
cwtl
in
stos
lds
xchg
dec
xchg
jl
lock
andl
shrl
int
icebp
stos
push
or
ss
clc
stos
pusha
xor
popa
push
mov
aas
mov
fisubs
fists
xor
pop
insl
add
scas
je
stos
shl
adc
xor
movsl
call
push
jmp
test
add
push
jg
mov
mov
mov
addr16
fbstp
iret
add
fs
xor
cmp
cmpsl
repz
xor
push
popf
js
xchg
dec
pop
add
mov
jmp
out
pop
test
test
fwait
movsb
sahf
sbb
ds
pop
aaa
ret
mov
dec
int3
ret
jp
sub
xchg
push
mov
cmpsb
lret
loopne
popa
test
call
push
xchg
jno
stos
sub
es
cmp
std
sub
or
dec
fsts
rcrl
dec
scas
repnz
aad
sahf
mov
mov
inc
push
sbb
shr
jmp
sub
pop
inc
jp
mov
push
test
mov
popa
test
out
ret
hlt
outsl
jmp
cmpsb
out
fsubrs
or
in
repnz
push
rcrb
xchg
stos
push
jmp
push
movsb
fwait
mov
xor
xor
daa
lods
mov
loopne
pop
adc
xchg
leave
movsb
and
lret
loop
mov
sub
mov
mov
out
out
fdivrp
popf
adc
mov
inc
lahf
cmc
lods
xchg
mov
test
mov
adc
int3
dec
jns
or
jg
jb
ljmp
leave
and
inc
jg
sbb
and
outsb
mov
movsb
pop
lods
int3
lods
icebp
in
cmp
imul
or
lahf
xchg
shrl
imul
out
inc
and
adc
add
sub
lods
scas
sbb
psllw
dec
lock
xchg
push
dec
and
cs
decl
mov
stos
int
dec
xorl
jns
sbb
scas
test
arpl
mov
cli
pop
xlat
hlt
sbb
push
pusha
pop
pusha
test
jo
dec
out
sub
outsl
push
push
push
dec
mov
lods
in
call
jl
test
dec
aam
pop
add
in
push
cmpsb
adc
cmp
gs
out
mov
shll
addb
aad
push
icebp
or
das
xchg
sbb
inc
adc
ljmp
push
cld
scas
inc
and
pop
loop
fsubs
xor
inc
cli
bound
clc
inc
xchg
dec
loopne
fisttpl
pop
fnstcw
into
femms
loopne
xchg
fistps
pushf
loope
add
imul
bound
sbb
movsl
loop
mov
nop
pusha
sahf
scas
push
jnp
dec
push
cli
stc
mov
test
frstor
mov
arpl
cld
mov
loopne
and
ret
mov
into
xor
add
mov
stos
ret
mov
dec
aaa
aas
cmp
es
jbe
jmp
cld
cli
jo
iret
int3
push
std
mov
jns
dec
out
les
ficoms
in
mov
bnd
xchg
dec
sub
test
push
and
push
adc
lret
or
cmp
lds
xor
aaa
aam
add
fistpll
cmp
xorb
call
mov
fistpll
out
dec
les
call
mov
push
fcoms
fistpll
dec
push
xlat
add
out
sbb
inc
in
mov
fs
popa
and
xor
xchg
jg
arpl
mov
pop
out
adc
dec
ja
arpl
in
mov
and
mov
cli
orl
lcall
daa
jns
clc
in
sarb
inc
sub
lcall
arpl
insl
adcb
es
sbb
cmp
pop
jae
insl
in
cmp
or
adc
lock
xor
jge
push
push
mov
adc
jo
lock
sbb
sub
xor
mov
sub
mov
fstp
in
cmp
movsb
sub
pop
jp
loope
shlb
fsts
mov
mov
bound
push
xor
fs
in
jp
mov
mov
ja
push
enter
scas
lock
loopne
ds
cmp
push
insl
or
jno
aam
mov
addb
dec
mov
dec
cmp
pop
sti
mov
push
ss
aad
popf
pop
sub
icebp
out
test
fs
movsl
push
mov
pop
lock
pop
or
inc
lret
pop
sbb
pop
mov
mov
push
test
sti
add
iret
mov
pop
xor
mov
xchg
shl
test
cld
cltd
push
mov
out
jle
push
sbb
dec
cmp
mov
shrl
sbb
test
push
loope
jge
and
mov
inc
pop
leave
pop
mov
cmp
pusha
jns
stc
or
pop
outsl
fistps
inc
sahf
pushf
pop
mov
stos
pop
cmp
cmp
xor
cmp
pop
insb
cs
lea
add
mov
repnz
insl
adc
pop
mov
ucomiss
push
cmpb
and
jnp
cld
xorb
mov
pushf
inc
rorb
shll
mov
xor
cmpsl
inc
mov
inc
mov
jmp
mull
lods
sub
xor
push
and
pop
stc
and
loopne
push
jns
xor
leave
jge
pop
cld
scas
lcall
cmc
push
push
ret
xchg
orb
mov
shlb
dec
push
xor
std
inc
lret
movsb
mov
xlat
mov
and
or
arpl
outsb
test
subl
ljmp
jne
jmp
jno
mov
dec
sti
mov
out
or
icebp
rclb
xchg
and
push
add
mov
jmp
xor
mov
cmp
jle
jg
or
xor
pop
adc
add
mov
xor
mov
adc
in
fisubrl
iret
addb
movsl
in
hlt
test
lahf
add
push
xor
insl
ds
ret
lret
push
xchg
xchg
fxch
adc
nop
shrb
into
js
push
test
add
testb
cmpsb
jle
xor
sbb
or
mov
outsb
pop
loop
ja
out
std
roll
hlt
shlb
dec
pop
jnp
sbb
push
pop
xor
fldz
jo
loopne
cmp
mov
mov
outsl
out
cltd
and
fists
popa
popa
inc
dec
mov
loope
and
dec
lods
mov
leave
out
js
clc
cmc
out
ret
pop
fdivl
mov
repz
sarb
adc
add
xchg
aas
shl
inc
xlat
aam
divl
push
xchg
notb
ljmp
push
xchg
aaa
mov
pop
xor
adc
pop
and
add
insl
aas
jns
lods
cld
jmp
in
xchg
mov
cmp
fdivs
xchg
je
push
loopne
lret
leave
pop
jmp
pop
rolb
jne
into
js
cltd
cmp
rcrb
out
mov
std
aam
lret
xor
scas
out
xor
xchg
and
jb
stos
orb
cmc
sahf
out
pop
mov
ja
popa
or
mov
push
adc
add
and
inc
mov
outsb
movsl
aam
mulb
sub
push
adcl
test
mov
test
mov
ss
clc
je
mov
fldenv
mov
lods
xor
popf
dec
dec
scas
adc
jmp
jbe
adc
in
pop
dec
sbb
inc
xchg
jae
stos
test
mov
xchg
pusha
dec
pusha
fldenv
nop
loopne
repnz
arpl
cmp
inc
rcl
and
sbb
xchg
lods
sbb
and
adc
lds
mov
pop
dec
ss
fisubl
cltd
stos
adc
mov
call
dec
addr16
adc
sbb
xchg
push
icebp
cmp
push
in
in
mov
and
imul
adc
adc
out
xchg
inc
or
imul
into
mov
adcb
pushaw
aam
inc
mov
dec
wbinvd
sub
je
addr16
cmp
pop
cwtl
fwait
pop
aam
int3
loope
stos
movsl
arpl
fsubrs
sub
test
mov
xchg
imul
cli
fisttpl
dec
nop
xor
cmp
jg
dec
test
mov
mov
mov
int3
shrl
jmp
test
xchg
stos
inc
sub
mov
pushf
not
jmp
out
jno
push
sub
int3
xchg
xchg
cmp
pop
test
imul
xchg
xchg
scas
mov
enter
push
jmp
push
sbb
xor
push
sub
and
pop
jp
sbb
mov
fsubrs
inc
mov
add
lods
pop
cld
or
mov
popf
insl
shr
into
sub
int3
into
incb
nop
std
cli
scas
sbb
fistps
push
mov
fmull
add
sbb
add
add
stos
lret
jae
sub
mov
out
test
shr
sbb
in
fisttps
fdiv
fsubp
fwait
movsl
das
cwtl
pop
fldl
test
add
mov
xchg
in
xchg
mov
add
test
nop
pop
or
loope
notl
and
inc
cmp
stos
sbb
inc
bound
out
repz
test
jmp
insl
jns
xchg
push
inc
inc
jg
js
dec
or
sbb
or
pop
mov
xchg
iret
push
rorl
sbb
adc
add
ljmp
xchg
mov
sahf
inc
fistpl
and
repz
int3
xchg
jae
push
repnz
push
bnd
fucomi
pop
cmp
out
lea
lea
jne
dec
mov
cltd
adc
lods
shll
or
xor
ret
inc
xchg
jae
scas
xor
xor
cmp
fsqrt
cmp
jmp
jecxz
mov
loop
cmpsl
dec
je
je
rcrb
fstpl
inc
daa
sub
cltd
addr16
test
push
or
mov
mov
xchg
popa
sbb
int
xor
xchg
lds
insb
loop
hlt
push
mov
scas
enter
pop
xor
push
adcl
mov
push
sub
stos
aaa
xchg
inc
sbb
test
xlat
jle
add
jg
adc
lcall
dec
testl
and
jle
and
push
inc
xchg
sub
or
out
pop
imul
int
insl
shrl
lock
addl
sti
jp
jno
scas
mov
pop
enter
xor
dec
setbe
pop
cld
sub
fildll
lcall
mov
xchg
pop
lds
shrl
enter
push
ds
push
xchg
ja
push
jg
testb
fidivrl
mov
sub
loope
scas
scas
sub
scas
xchg
nop
test
mov
bound
mov
jne
addr16
or
lods
jmp
or
aam
push
push
ret
mov
sbb
mov
and
fwait
or
call
xchg
push
cld
lahf
pushf
scas
daa
mov
push
add
jb
cld
mov
mov
push
loope
pusha
xor
mov
add
jno
and
push
xchg
out
mov
mov
cmpsb
mov
adcb
cmpsl
neg
cmp
mov
bound
pusha
je
push
mov
push
push
dec
stos
mov
call
imul
mov
cltd
pop
cmp
xor
jns
mov
rcrb
push
xchg
lock
xchg
sbb
cmpsl
cwtl
lds
mov
ds
xor
adc
xchg
xchg
xor
xor
fsts
push
lcall
pushl
xchg
imul
jl
out
push
sarb
and
adc
inc
fisubl
dec
popa
lds
lods
sub
xor
cld
ret
jo
jnp
xor
test
adc
arpl
lods
jle
jnp
xchg
jle
inc
pop
aad
or
scas
test
mov
call
mov
repz
add
sahf
cmpsl
mov
rorl
fcompl
mov
es
push
xchg
cli
sahf
xor
pop
xchg
pop
sti
out
add
insl
outsb
rclb
mov
outsl
insl
push
pop
sub
xor
call
outsl
aad
dec
bnd
xlat
push
sbb
mov
xchg
cmp
negb
movsb
inc
stos
out
inc
popf
mov
daa
stc
shlb
test
mov
and
sti
out
mov
idivb
pushf
or
adc
imul
pushf
sbb
jno
leave
sbb
pusha
xor
int
mov
rcl
push
xor
xlat
outsl
xchg
dec
cmp
dec
push
and
xchg
inc
ljmp
dec
lods
inc
shr
aaa
adc
adc
xor
push
mov
out
out
inc
mov
aaa
dec
cmpsb
inc
push
dec
xchg
inc
cmp
lret
or
out
imul
dec
lods
and
adc
dec
cmp
aam
std
pop
sub
stc
jg
jb
ja
in
inc
dec
jp
mov
inc
xchg
mov
int
and
xlat
ret
pop
mov
clc
xchg
add
xrelease
pushl
insl
cld
xor
arpl
imul
xchg
adc
cs
sub
push
jns
add
jge
pop
xchg
ret
fwait
dec
jge
ret
ret
or
in
into
add
scas
xchg
shl
mov
int
xor
subb
sbb
xchg
xor
fsubs
sub
or
sub
adc
mov
mov
out
test
xlat
adc
lea
push
shrb
mov
shll
push
movsb
pop
mov
or
andl
pop
xchg
add
mov
adcb
cld
jmp
xor
leave
pop
js
add
mov
mov
inc
jmp
cld
adc
into
or
or
push
lret
pop
pusha
leave
jns
test
cli
pop
insb
test
add
iret
and
cmpsl
jbe
stc
subl
movsl
leave
mov
inc
pushf
mov
roll
ljmp
imul
push
iret
movsl
out
aam
enter
fs
popa
xchg
in
mov
es
icebp
inc
mov
pushf
std
loope
addr16
out
mov
orb
mov
xor
cmp
scas
sbb
pop
push
fmuls
outsb
adc
pusha
mov
sub
sarl
test
imul
ja
sbb
pop
or
or
outsb
sahf
cmc
push
scas
in
mov
mov
rcrl
xchg
or
data16
movsb
add
out
hlt
sub
je
mov
jno
sbbb
xchg
call
lret
negb
and
push
push
mov
or
stc
jle
cli
lods
pushf
and
aam
push
mov
ljmp
and
pushf
lahf
mov
mov
cmp
cmpsl
cwtl
xor
push
leave
js
cmpsb
popa
mov
pop
xchg
in
insb
nop
add
shrb
jno
lahf
andb
push
test
loopne
ss
outsb
dec
add
xchg
cmp
xor
push
jmp
aas
idivl
rcll
adc
xlat
sub
xchg
push
cli
jp
jmp
or
cmp
or
fsubrp
xchg
inc
icebp
push
inc
xchg
mov
xor
push
lret
jne
je
push
or
test
sub
push
push
xchg
test
xlat
scas
pop
xor
pop
mov
out
rolb
and
inc
aam
subb
repnz
fsubl
xchg
pop
push
jno
and
jne
cmp
lcall
xor
xchg
push
arpl
mov
sub
inc
dec
insl
xor
lods
inc
test
xchg
xor
out
shl
daa
mov
jo
add
stos
stos
into
dec
hlt
sbb
dec
fstpl
faddl
cmp
into
sbb
sub
pop
cmp
mov
jno
stc
xor
push
pop
outsl
dec
test
xor
hlt
jp
ss
or
dec
ficoms
sbb
rol
enter
mov
xor
nop
push
dec
fwait
insl
add
or
mov
or
xchg
mov
cmpsb
adc
mov
in
pop
fsubrl
lahf
pop
shll
bound
fdivp
xor
decb
pushf
jmp
jg
inc
mov
xchg
les
popf
or
add
mov
cmpsl
dec
push
adc
int3
jmp
insb
inc
aad
push
pushf
adc
imul
in
shl
mov
sub
jae
add
add
mov
popf
dec
xchg
mov
mov
sahf
subl
and
sbb
out
stc
mov
adc
add
insl
push
ret
in
jecxz
jbe
mov
fildll
adc
inc
aad
inc
push
xchg
adc
es
call
aas
loopne
jmp
pop
push
mov
nop
dec
mov
sub
lds
out
sti
stc
mov
adc
push
out
out
jae
mov
xchg
push
and
push
popa
rcl
xlat
stos
jo
mov
jge
sahf
insl
sbb
mov
add
mov
sbb
inc
rol
ja
imul
push
lods
xor
stos
dec
mov
dec
mov
adc
in
aaa
add
push
ficomps
cltd
jmp
ret
lea
and
inc
xchg
mov
pop
sbb
shl
adc
sbb
ds
add
imul
mov
inc
dec
call
pop
dec
dec
ds
icebp
add
cmpsb
je
fwait
cmp
or
push
adc
xchg
call
or
xchg
sti
fdivs
cmc
frstor
fistpll
cmp
jmp
push
adc
out
int3
test
scas
xchg
dec
addr16
mov
xchg
dec
mov
nop
adcb
push
insl
mov
mov
pop
add
or
lds
rclb
jge
add
fadds
add
cmp
mov
mov
jns
sahf
jo
clc
imul
idivl
jmp
and
mov
movl
xchg
movsb
dec
ljmp
xchg
std
cld
and
addb
andl
stos
test
sti
stc
out
jle
stc
jg
or
out
cmp
fidivrl
addl
cs
frstor
mov
addr16
lret
push
xor
adc
pop
xor
shrl
pusha
dec
nop
dec
leave
shrl
adc
aaa
mov
mov
popf
xchg
cwtl
test
xchg
popf
cmp
popf
popa
lret
nop
dec
mov
loopne
push
xor
cmp
push
movsb
or
pop
sub
out
mov
aaa
fdivrs
jae
fwait
dec
decb
sbb
lret
in
mov
in
les
dec
push
dec
cmc
adc
sti
out
push
add
lret
shll
cmc
jg
popf
push
adc
fsubrl
lds
or
ja
das
pop
mov
push
xchg
xchg
dec
push
sbb
lods
jle
pushf
imul
mov
insl
mov
pop
mov
push
ss
pusha
cmpsl
and
rolb
fiadds
int
push
insl
xor
sbb
aaa
add
push
push
push
rcrl
push
add
pop
inc
pop
jmp
add
pusha
fidivl
pop
adc
push
mov
sti
mov
mov
in
scas
sub
mov
loope
adc
adc
dec
rcrl
ja
mov
lret
sbb
jecxz
cmp
jno
mov
insb
cmpsb
arpl
dec
xchg
aad
adc
jmp
aam
cld
mov
gs
cmp
mov
mov
scas
jg
mov
imul
ficomps
mov
xchg
leave
aad
out
dec
mov
jbe
jno
adc
in
lret
addb
xor
add
rorl
mov
mov
mov
and
push
sub
stos
inc
sbb
fdivp
ja
aam
pop
push
xlat
cs
pushf
out
mov
aad
push
ds
subb
out
sub
pop
lods
pusha
mov
xchg
cmp
inc
sbb
xor
mov
test
mov
dec
fnstcw
cmp
jp
push
in
lcall
test
xchg
cmpsl
sub
pusha
aad
push
aad
jp
push
dec
leave
pop
cltd
scas
jno
and
loop
cmp
xchg
fnsave
out
push
test
and
xorl
fdivrs
hlt
add
aas
inc
frstpm(287
fsubr
sub
leave
and
dec
ret
clc
xchg
push
cwtl
adc
daa
sub
mov
mov
xchg
cmovge
cmp
xchg
jle
outsb
sub
xlat
xlat
push
add
lahf
xchg
ret
lods
popf
in
and
and
mov
and
mov
imul
add
aas
sub
and
jge
lds
xchg
repz
outsl
cmp
cmp
mov
pusha
sub
ds
ret
loop
rorb
mov
sub
addr16
adc
jmp
fnstenv
push
push
sub
std
xor
xor
arpl
aas
fdivrs
aaa
mov
add
jno
fisubrl
inc
or
and
aam
rorb
push
jmp
jecxz
insl
add
jbe
sub
movsl
cmpsb
mov
dec
mov
js
or
in
cltd
cltd
push
inc
mov
stos
data16
mov
mov
ss
push
test
jae
fwait
je,pn
enter
outsb
cmpsl
int
mov
inc
addl
stc
sbb
cmpsl
jmp
jmp
test
xor
add
leave
cmp
pop
adc
xchg
insl
mov
xor
adc
leave
push
loopne
int3
repz
leave
pop
xchg
cmp
mov
sbb
cmp
stos
fwait
icebp
fists
ja
dec
cld
ljmp
xor
xlat
test
cld
lods
lret
fcmovnbe
inc
pop
inc
add
clc
lahf
adc
cmp
clc
repz
cli
jnp
push
inc
jle
nop
inc
and
in
push
repz
push
pusha
mov
mov
mov
sbb
xor
mov
adc
pop
mov
insb
pop
cmp
mov
jne
inc
dec
push
mov
xor
in
mov
dec
mov
outsb
repnz
xor
adc
adc
insb
dec
xlat
lahf
into
je
ficoml
jo
ds
sti
xchg
orb
clc
movsl
lea
cmpsb
jp
pop
xor
mov
dec
fsubp
out
push
fs
pop
jns
es
and
imul
aam
or
and
enter
dec
lods
pop
sbb
push
push
inc
fiaddl
out
outsl
sbb
and
mov
data16
and
in
lods
xchg
sbb
sbb
cmp
cmp
sbb
jl
or
jg
lods
push
in
sub
xchg
ljmp
sub
cmp
xor
mov
or
movsl
and
mov
cmp
adcl
push
jne
loopne
daa
mov
xor
fnstcw
sub
push
shrb
sbb
mov
fisttps
out
xchg
data16
push
mov
or
sub
mov
push
and
imul
mov
lret
fnsave
icebp
jmp
mov
mov
fnstenv
xchg
or
sub
pop
and
call
cmpsb
jo
dec
out
and
pop
sbb
mov
mov
fs
stos
dec
jmp
fidivs
fisttpl
test
sbb
rcrl
sbb
adc
push
mov
push
unpcklps
ror
add
jo
subb
push
xchg
adc
xor
push
inc
mov
addr16
rolb
pop
sub
cmp
lea
negb
sarb
pop
or
inc
dec
lock
xor
shrl
pop
das
nop
std
and
cmc
movsl
fisubl
dec
inc
popa
cmp
dec
in
xor
aaa
mov
cmp
pop
pop
sbbb
clc
jge
dec
test
aaa
jp
xchg
xchg
or
int3
jecxz
push
andl
or
pop
loop
aaa
or
jl
pop
je
scas
inc
mov
jmp
lahf
adc
inc
cmpsl
sbb
sbb
push
fwait
add
xchg
popa
insb
stos
fldt
xorl
nop
jp
xor
pusha
adc
xchg
hlt
xor
addr16
call
sub
sbb
add
sbb
adc
jle
adc
add
push
je
push
aaa
inc
mov
push
in
cmp
pop
mov
push
cmp
sbb
pop
mov
mov
popa
rcll
or
loop
outsb
int
inc
test
les
lods
adc
push
iret
sahf
out
push
pop
adc
adc
in
jns
lods
repz
adc
xchg
insl
mov
cmp
inc
cmc
test
sub
cmovb
xchg
lods
pop
filds
push
ja
mov
push
xchg
and
icebp
shll
loopne
dec
cmpsl
inc
and
andnps
les
adc
push
mov
xlat
in
mov
out
out
push
pop
adc
mov
int3
insl
push
cmp
out
scas
inc
xchg
lds
aaa
dec
repnz
pop
lods
dec
xor
add
xlat
into
lods
bound
test
sub
mov
in
rcl
mov
stos
or
or
fisubl
adc
dec
or
push
xchg
cmc
push
aad
in
movsl
mov
fstcw
push
movsl
dec
aam
sahf
cmpsl
lret
jg
movsb
inc
dec
dec
jle
cld
cld
std
or
outsb
mov
sub
dec
jb
stos
clc
je
xorl
out
push
rorb
mov
adc
mov
push
ret
sub
sbb
out
fucom
sti
xor
dec
and
out
inc
fdivs
mov
sahf
in
xor
inc
insb
test
ret
mov
sub
cmpsl
xlat
rclb
jge
aad
mov
mov
into
push
ret
or
iret
sub
test
and
jp
jle
sub
testl
loope
xchg
mov
mov
mov
jmp
loope
cwtl
mov
push
faddl
das
pop
int
rcr
out
add
cmp
ret
dec
hlt
fprem
scas
in
sbbb
pop
xchg
daa
mov
jecxz
xor
push
mov
decl
into
scas
loopne
stc
insb
hlt
clc
shlb
mov
iret
mov
negb
cmpsl
repnz
outsb
jecxz
or
dec
mov
jg
push
lret
lahf
lds
mov
loope
mov
les
mov
gs
rcrl
lahf
mov
push
cld
shrl
scas
insl
mov
dec
sbb
cmp
mov
mov
jecxz
ds
sbb
sti
movsl
push
fsubrl
ja
out
aas
xchg
xor
lahf
in
sbb
adc
mov
mov
fidivrs
and
aas
ret
xlat
rcrl
mov
jecxz
add
sti
not
ficoms
rclb
imul
jl
daa
insl
fcomip
outsl
out
test
test
movb
arpl
lahf
testl
xchg
cmpsb
dec
call
push
iret
lds
cmc
insb
mov
jno
mov
in
adc
cmp
stc
or
push
adc
inc
js
fisttpl
pop
push
ljmp
push
iret
sbb
lea
jae
bound
sbb
inc
stos
cmpsb
lret
inc
and
xchg
shlb
jp
mov
pop
fistpll
jb
pop
pop
mov
push
popf
not
cmp
enter
mov
cmp
ret
lods
popa
cwtl
cli
push
out
lea
push
dec
cmpsl
add
push
icebp
inc
sbb
mov
dec
aaa
icebp
xchg
stos
clc
xor
dec
mov
out
mov
lock
mov
repz
aad
movsb
in
push
hlt
sarl
jg
fs
mov
test
lret
flds
sbb
mov
mov
shlb
or
mov
fisubs
enter
out
lods
mov
and
jns
scas
sbb
or
movsl
rcr
xor
mov
mov
mov
mov
addr16
mov
pop
cmpl
aaa
test
in
dec
mov
jmp
cmp
mov
daa
xchg
ljmp
dec
fwait
not
stc
push
sub
imul
jge
pop
pop
cwtl
lret
pop
cmp
xchg
imul
nop
data16
mov
sub
enter
add
mov
xchg
cmp
push
repz
push
ret
dec
mov
cmp
pushf
push
hlt
sub
insb
jno
orb
xchg
das
push
inc
sub
rorb
bound
leave
fisttpll
jb
mov
and
inc
pusha
pop
stc
cmp
orl
hlt
andl
fnstcw
rorl
push
call
sahf
and
mov
imul
jge
add
cmp
std
popa
cli
push
movsl
xor
push
xchg
and
cmc
or
es
in
adc
inc
aaa
push
xchg
das
sbb
jae
push
jp
jb
add
jae
fbld
cli
test
outsb
das
out
insl
xchg
adc
cmp
mov
lods
ret
cmpsb
inc
aam
es
aam
insb
mov
pop
ret
les
or
xor
filds
repz
movsl
jo
xchg
mov
sbbl
test
mov
cmp
repnz
mov
and
fwait
mov
cmc
mov
inc
adc
mov
ret
xchg
es
dec
push
sub
inc
enter
and
pusha
jae
ljmp
dec
pusha
xor
cmp
sub
enter
stos
add
mov
push
lock
mov
mov
out
outsb
jns
pop
inc
adc
add
js
and
push
test
xorb
xchg
jo
jbe
scas
mov
mov
inc
push
into
push
rorl
inc
xor
jbe
mov
cld
mov
pop
mov
int
push
xchg
repz
inc
mov
push
adc
loope
dec
push
xor
bound
sub
std
push
loopne
fistps
cmc
add
insb
mov
mov
push
dec
std
sbb
or
pop
cmc
jns
mov
scas
cmpsb
adcb
lahf
aas
subb
xor
pop
daa
dec
outsb
lahf
xchg
inc
mov
xchg
mov
inc
fimuls
inc
ret
imul
lock
or
inc
hlt
jmp
mov
popf
fcoms
jno
xchg
js
mov
xor
jmp
mov
or
mov
xor
cmp
out
pop
je
mov
data16
cld
stc
dec
jge
and
fildl
lods
fistpll
adc
test
adc
test
or
mov
adc
and
add
jle
incl
int
cmpl
sub
and
adc
insl
cmp
arpl
outsl
outsl
jbe
jp
jb
jnp
pop
movsl
jg
jns
bnd
add
clc
mov
mov
push
mov
loopne
jle
lahf
sub
xor
cs
add
or
xor
outsb
and
mov
sbb
mov
jecxz
mov
mov
mov
fwait
sbb
mov
jmp
repz
aas
sbb
clc
xor
xchg
or
popf
push
cmp
or
adc
sub
dec
arpl
mov
push
pushf
mov
adcl
or
out
jl
push
pop
pop
inc
push
mull
and
data16
pop
test
push
aad
push
xchg
adc
hlt
and
fisubs
test
cmp
int3
mov
shll
shrb
pushf
out
jg
jmp
mov
outsb
pop
ss
cmp
int
mov
stc
outsb
dec
xchg
jmp
jmp
and
cmp
cli
inc
mov
sti
xchg
or
or
leave
jne
cmp
cmp
push
sbb
fstpl
add
test
push
jmp
lds
mov
xor
xchg
sub
mov
mov
rorl
jp
and
fimuls
sar
dec
lods
mov
pop
xchg
sbbl
or
push
repz
add
or
ljmp
testb
adc
inc
mov
push
mov
jg
insl
push
add
call
adc
sarl
dec
pop
jecxz
or
mov
repnz
mov
add
test
ds
pop
mov
inc
pop
cvttps2pi
outsl
repz
icebp
push
stc
inc
pop
push
imul
insl
cmc
cmpsb
mov
and
push
lods
pop
cmp
push
fcomp
dec
lcall
movsb
pushf
mov
sub
scas
andl
cmp
xor
mov
jmp
int
sub
xlat
ljmp
or
mov
dec
and
mov
loop
inc
ja
shll
or
add
or
or
push
jp
mov
les
add
mov
jo
xchg
nop
sti
push
fs
mov
xor
int
ss
mov
repz
rclb
out
orl
mov
or
push
fucomp
adc
sub
repz
dec
fldcw
push
enter
test
sub
jae
iret
insl
xor
aaa
jae
adc
mov
repnz
push
call
xor
pop
mov
into
push
cmp
add
jo
das
fstpt
xchg
sahf
xor
loope
lods
or
inc
cmp
rcrl
pop
andl
xchg
inc
pop
insl
xor
jge
jb
nop
out
fimull
push
mov
or
jo
and
xchg
jb
mov
inc
jmp
dec
push
insl
lds
daa
push
pusha
mov
hlt
fidivrl
bound
xchg
push
out
je
pop
xor
push
pop
lahf
aaa
xchg
arpl
mov
inc
shll
adc
arpl
jns
mov
push
stos
sbb
je
movsl
cltd
sub
sub
mov
mov
push
push
insl
xchg
xor
cmp
pop
sub
pusha
pop
mov
sub
pop
stos
jp
int
xlat
xchg
xchg
es
push
les
mov
xchg
je
xor
dec
or
jge
cmp
addl
jecxz
xchg
mov
inc
mov
test
xchg
movsb
pushf
jp
mov
roll
xchg
outsl
and
rcl
lahf
test
jno
cld
out
cs
cld
pushf
push
xor
inc
jbe
mov
sti
cmc
jmp
in
adc
cli
into
jecxz
decl
lret
cmc
pop
imul
or
loope
div
dec
lods
mov
in
xchg
and
mov
je
fidivrs
dec
fwait
sbb
ret
sti
rclb
lock
xchg
xchg
jno
inc
xor
xor
imul
pop
mov
ljmp
stos
loop
sbb
faddl
fisttps
rol
pop
mov
xchg
sub
iret
pusha
mov
addb
dec
dec
out
sti
pop
inc
stc
mov
mov
enter
inc
mov
inc
mov
xor
rcrl
loope
xchg
out
xchg
xor
fsts
xchg
mov
dec
adc
sub
cmpl
mov
dec
arpl
add
sbb
shrl
push
test
mov
mull
cld
daa
cs
inc
push
repz
mov
lods
int
mov
xor
es
sar
ja
jo
pop
mov
jecxz
fisubrl
and
xchg
fists
sub
dec
imul
ja
jg
bt
adc
xor
jne
or
decl
fcomps
testb
pop
cmp
push
mov
out
imul
cmp
lret
fildl
mov
xlat
shrb
dec
or
pop
sbb
mov
call
mov
lods
xchg
pop
sbb
fwait
inc
or
mov
rol
scas
movsb
lods
mov
mov
pop
or
ljmp
mov
inc
xchg
mov
mov
in
mov
dec
adc
jo
dec
loop
and
frstor
mulb
fwait
or
dec
out
mov
jg
stos
lcall
cmp
fs
inc
inc
inc
jmp
outsl
pop
jo
sub
and
test
jge
push
push
sub
inc
push
adc
repnz
cwtl
xchg
mov
dec
xorl
cmpsb
ficomps
and
rolb
outsb
insb
movsb
xor
mov
inc
sbb
and
loope
and
adc
mov
mov
and
push
outsb
movsb
out
popa
mov
mov
sbb
stos
xor
cmpsl
adc
inc
jl
cmpsb
inc
cmpsb
inc
jno
pop
sub
sbb
sbb
fisubrl
xor
mulb
cld
add
call
les
fwait
mov
xlat
ficomps
xor
mov
and
gs
in
pop
aaa
jae
mov
fidivs
fwait
call
inc
pop
mov
push
in
mov
movsl
cs
into
cltd
movsl
cmp
lods
mov
add
in
mov
sub
pop
out
cmp
add
xor
jl
scas
jno
xor
cwtl
fdivrl
jle
sbb
ret
test
jmp
out
fildl
aad
int3
cs
sub
imul
dec
fldt
popf
or
push
jne
fildl
sbb
scas
mov
lea
cmp
sarb
sbb
inc
mov
clc
mov
sarb
fnstenv
sub
fdiv
xor
int
push
mov
js
lds
cs
mov
and
ljmp
cld
mov
into
push
ljmp
insl
mov
xor
mov
adc
jge
push
repnz
cmpsb
xlat
call
or
add
add
fsub
xlat
fisttps
mov
sbb
adc
mov
xchg
inc
cmp
jecxz
repz
stc
sub
adc
stc
cmp
rorl
xchg
cmp
lods
ret
pop
test
out
inc
scas
mov
daa
fnstcw
movsb
xchg
loop
ffreep
cltd
out
outsl
popa
pushf
call
push
js
cltd
shr
mov
je
lahf
repnz
jl
addr16
sarb
push
and
int
ret
inc
xor
dec
inc
pop
in
xor
testl
sahf
and
inc
das
xor
daa
pop
or
jnp
sbb
addps
scas
out
xchg
inc
dec
addr16
cmpsl
repz
push
fisttps
push
and
imul
pop
out
int3
lods
shll
in
stos
pop
aam
lods
pop
shl
stc
push
dec
cli
add
mov
sub
leave
mov
mov
mov
jno
xchg
xchg
inc
and
stc
addb
inc
jns
int
push
lea
enter
push
andl
daa
sahf
lcall
enter
insl
cmp
pop
add
cld
das
xchg
test
pmullw
xor
aad
dec
jno
outsb
push
xor
inc
lcall
mov
xor
nop
jp
jle
mov
cli
xor
and
fisubrs
incl
sub
mov
lds
add
mov
push
sbb
in
orl
fldt
pop
adc
cwtl
or
cltd
add
movsl
je
cli
push
ret
imul
adc
xchg
push
xchg
sbb
sti
and
cmpsb
movsb
lahf
mov
cld
xchg
and
faddl
jmp
dec
cld
push
aas
jl
lret
iret
mov
mov
pushf
data16
je
jno
fisttpl
xchg
pusha
push
imul
pop
cld
or
jmp
xchg
sub
lock
bswap
inc
ss
fldt
jp
sbb
imul
push
mov
mov
mov
mov
idivb
add
lcall
mov
repnz
dec
sarl
push
ret
into
in
sub
xor
push
sub
cmp
movsb
test
xchg
stos
add
leave
cmp
xor
rorb
imul
push
mull
mov
iret
rcr
xchg
push
xor
dec
push
cmc
add
pop
push
mov
int
cmpsb
ret
dec
aaa
cmpsb
cmc
stc
sbb
pop
add
test
shl
push
es
xchg
jb
mov
pop
int
clc
outsl
adc
aaa
flds
mov
std
cmpsl
into
inc
icebp
insl
pop
sub
into
aas
and
xchg
cs
jl
cmc
lcall
xchg
leave
or
cmp
lcall
scas
mov
in
dec
adc
sbb
into
add
clc
test
inc
add
stos
int
fst
lds
cli
sarb
out
sub
inc
adc
cmp
in
add
inc
repz
dec
push
jbe
xor
or
jns
shr
test
fnstcw
sahf
xlat
iret
fdivrs
jb
inc
jle
xchg
xchg
test
jo
and
sti
fs
ss
rcrl
mov
or
loopne
lret
movsb
adc
sbb
negl
in
push
dec
or
fstps
inc
lods
add
mov
sub
imul
pop
mov
inc
mov
dec
insl
jmp
sub
cmp
outsl
scas
inc
and
pop
adc
popa
shrl
dec
inc
jo
inc
pushf
sub
inc
cld
sbb
into
inc
iret
test
movl
cmp
test
sti
xchg
jecxz
insl
xlat
subl
add
pop
adc
jecxz
inc
les
or
adc
xor
stos
popa
stos
and
shrb
bnd
add
push
lods
pop
lods
lods
mov
inc
test
mov
movsl
lahf
insb
dec
shl
stos
mov
scas
or
inc
or
and
ret
dec
clc
loopne
xchg
xor
loop
and
mov
xlat
inc
cwtl
dec
lret
fwait
hlt
mov
sub
inc
nop
sbb
mov
scas
aad
negb
dec
in
in
lcall
push
ljmp
lea
out
out
popf
fisubl
pop
ds
inc
or
xlat
sub
into
mov
xchg
adc
pop
mov
cltd
mov
and
pop
push
mov
lret
rclb
loopne
push
sbb
sahf
add
xor
dec
push
cmp
add
jge
lds
cmpsb
rcrb
xchg
jnp
sub
ret
aaa
test
inc
out
push
and
and
popa
out
movsl
stos
xor
fisttps
outsl
adc
pop
jge
punpcklbw
adc
jecxz
push
xchg
js
adc
jg
jle
jl
dec
xchg
js
js
mov
sub
xchg
fs
add
mov
xorb
cmp
stc
leave
ret
mov
incl
cmp
das
jg
mov
std
or
loopne
ss
out
lret
inc
adcl
in
jle
xchg
stc
add
roll
adc
jl
lret
rorb
xchg
ja
xlat
popf
mov
js
add
jge
xchg
dec
mov
scas
mov
insb
cmc
sbb
or
or
outsl
fdivl
mov
cmpsl
add
cmp
jns
rcr
js
cmp
pop
stc
scas
mov
add
je
je
sti
and
and
xchg
rorl
and
repnz
or
and
enter
outsl
icebp
sahf
pop
xchg
es
sbb
dec
sub
out
add
sbb
push
in
lcall
lcall
fsts
inc
ret
popa
pusha
stos
rcrl
pop
add
dec
adc
leave
leave
cmp
cmpb
insl
inc
insb
jle
divl
nop
cwtl
add
sbb
movsl
movsl
jno
add
addl
mov
or
push
cli
dec
sbb
stos
or
popa
mov
sbb
hlt
inc
pop
jne
mov
cmpsb
jecxz
cld
sbb
mov
cltd
pop
rorb
or
sarl
push
mov
cwtl
insb
bound
cmp
js
adc
push
mov
dec
dec
xchg
jg
addl
dec
enter
sbb
lods
mov
in
push
imul
test
lret
or
test
cmp
pop
mov
ss
xchg
sub
pop
cmp
cmp
fs
xor
cmc
jecxz
fildll
mov
rol
jg
push
loope
push
xchg
aaa
jns
mov
int3
clc
lock
repnz
mov
dec
push
loope
jbe
sub
cmovle
ds
and
addr16
aam
ds
adc
lahf
jmp
fdivrl
out
popf
in
ljmp
mov
popa
inc
mov
ret
or
or
inc
inc
jae
lcall
adc
pushl
or
out
xchg
pop
dec
leave
jb
loopne
jl
mov
xchg
dec
mov
ljmp
mov
icebp
sbb
decl
push
xor
mov
out
mov
aam
aaa
lods
data16
and
aaa
movsb
mov
aam
xor
cmc
daa
sub
stos
js
mov
sbb
dec
push
lcall
fs
in
mov
leave
add
outsb
sbb
dec
mov
mov
lods
push
add
adc
mov
or
lahf
imul
or
rcll
dec
scas
stc
int
faddl
idivb
and
in
enter
lahf
out
test
fists
cld
jp
sbb
cmp
in
inc
mov
out
sbb
or
pushf
xchg
sub
pop
test
or
out
ficoml
push
into
out
aaa
pop
sub
out
adc
adc
ret
mov
cmp
push
push
shrb
xchg
pop
dec
pop
xor
xchg
pushf
xchg
push
jno
mov
js
daa
loop
mov
mov
shrl
mov
fwait
sub
dec
jb
cltd
aas
add
sbb
fldcw
mov
mov
in
daa
sbb
inc
inc
fwait
enter
outsb
sub
inc
or
xchg
gs
mov
sarb
mov
insl
loop
jb
inc
pop
fidivrl
cmp
mov
dec
dec
and
xchg
sub
ds
sbb
cmp
xor
push
int3
mov
adc
cmp
adc
fdivs
cmp
repnz
mov
test
in
inc
dec
imul
sti
dec
and
or
mov
arpl
test
lods
popf
mov
add
repz
mov
xor
cmp
jne
adc
push
xor
mov
jl
out
fisttpll
sbb
bound
cmp
cmpsb
fldt
pushf
out
iret
fwait
out
and
xor
mov
add
jnp
jnp
mov
dec
dec
mov
pop
dec
jno
cmp
andl
jbe
lea
lret
xchg
int3
xchg
push
pop
sbb
adc
stos
sub
out
jp
jno
xchg
aam
imul
fstps
xorb
jge
pop
notl
outsb
ss
xchg
insb
xlat
call
dec
inc
mov
cmp
pop
or
cltd
insl
or
std
outsl
mov
shlb
or
sub
xchg
jmp
push
lea
jge
fwait
in
pushf
jo
aad
sahf
xor
adc
lret
cs
es
pop
adc
cmpsl
cld
sahf
fidivs
movsb
xchg
mov
adc
cwtl
iret
jae
scas
enter
or
sbb
test
mov
mov
inc
lahf
setns
and
mov
cmpsl
adc
call
xor
push
jae
sbbb
mov
mov
add
shl
xchg
push
sbb
stc
shll
lahf
xor
mov
in
in
in
test
mov
jno
std
les
aad
jbe
jle
jle
jecxz
adc
pusha
je
incb
leave
mov
movsl
cmp
dec
daa
cmpsl
ficomps
jbe
xor
loope
test
xor
jns
mov
mov
fldenv
pop
xor
insl
mov
sbb
mov
test
mov
rcrl
mov
lock
mov
push
fmuls
mov
cltd
ss
lods
and
repnz
add
pop
mov
fdiv
data16
cmp
ja
jmp
add
hlt
call
mov
and
ds
ret
rcrb
sub
divl
xor
and
testb
in
jp
xchg
mov
dec
push
xchg
adc
cmpsb
subb
aam
mov
sbb
in
icebp
add
clc
addb
mov
sti
cmpsl
xchg
mov
notl
or
cld
cmp
pushf
inc
subb
call
cwtl
dec
and
scas
inc
outsb
mov
add
cli
in
repnz
mov
jecxz
inc
xchg
mov
mov
mov
adc
cmp
subb
and
mov
sbb
fbstp
les
pop
jp
mov
sbb
fcmovbe
in
adc
or
sbb
repnz
imul
fimuls
push
mov
cmp
in
cmp
xor
push
mov
jnp
mov
fmuls
and
shl
pop
pop
push
mov
repnz
pop
push
or
xchg
xor
std
sub
mov
hlt
or
xor
or
xor
hlt
mov
add
xchg
outsl
mov
outsb
imul
filds
sahf
gs
add
inc
cmp
out
and
adc
pop
sti
out
or
lahf
scas
fmuls
xchg
mov
pop
out
stc
mov
clc
loope
std
mov
movsb
mov
or
mov
popf
cmpsb
pop
mov
bound
psubsw
sbb
or
ret
pop
int3
pop
inc
sub
test
pusha
test
je
jns
add
rolb
in
mov
jg,pn
push
mov
fs
in
lahf
repnz
jbe
jno
sbb
xchg
mov
idiv
sub
inc
mov
popa
mov
packuswb
sahf
add
pop
mov
aam
cmp
test
xor
pmulhw
mov
stos
rcll
outsb
aad
inc
sub
test
or
inc
pop
mov
xor
aas
mov
in
imul
mov
push
fs
aaa
cmpb
out
jo
mov
jbe
dec
adc
sbb
dec
movsl
push
rolb
ficomps
push
cld
leave
ret
sbb
mov
movlps
and
popa
cmp
jp
enter
stc
pop
dec
push
inc
cltd
repnz
jnp
ret
ret
jge
pop
mov
dec
outsl
sbb
pop
ret
jno
fidivl
bound
lret
dec
aas
das
arpl
das
xor
sahf
xor
es
push
xchg
jecxz
lds
aad
cmp
or
jmp
cmp
cmpsb
std
sub
lahf
das
or
popa
mov
mov
out
mov
lods
das
mov
stos
sbb
lds
inc
in
enter
sub
add
adc
pop
outsb
aas
mov
fwait
cmc
je
inc
aaa
add
fstl
nop
push
mov
dec
xchg
xor
int
adc
mov
mov
jae
lret
sbb
and
mov
adc
movsl
add
jno
repnz
scas
push
push
inc
in
outsb
mov
insb
mov
jecxz
inc
notb
dec
lea
push
out
cmpsb
mov
and
rolb
popf
jnp
jae
xchg
scas
xchg
clc
mov
adc
jle
mull
xchg
inc
jb
jae
dec
hlt
insl
fiadds
pop
pushf
aas
dec
cmp
mov
cmp
mov
mov
movsl
sbb
lcall
jle
imul
push
in
jb
mov
mov
jno
mov
and
xchg
xor
jecxz
les
bound
lods
stc
rcl
clc
in
clc
mov
pop
aam
das
arpl
jo
dec
xchg
mov
inc
fs
pop
inc
and
in
xchg
inc
xchg
ret
push
inc
je
pop
or
mov
inc
add
lods
lea
pop
out
ss
add
gs
jge
insb
add
aam
push
aaa
mov
dec
adc
mov
adc
add
fldt
bound
imul
sub
out
jbe
cli
cmpsb
mov
fldt
fisubl
in
xchg
and
xchg
ja
inc
dec
repz
fwait
sbb
xor
sbb
mov
sub
pop
xchg
imul
js
mov
jecxz
cmp
sub
mov
mov
call
jmp
xchg
loope
outsl
fstpl
cmpsl
js
je
inc
loop
adc
xchg
scas
jae
stos
sub
xchg
push
mov
dec
fs
lods
adc
add
clc
into
xchg
into
lea
xchg
and
cs
cmc
addr16
sbb
sub
stos
les
in
xchg
lcall
pop
flds
cmp
sub
or
pop
ret
mov
adc
cmpsb
mov
arpl
mov
cmp
dec
nop
pop
pop
jo
adc
orb
push
push
push
imul
adc
fidivrs
lret
fists
jns
leave
imul
sbb
mov
xlat
outsl
lods
lcall
mov
sahf
or
int
scas
icebp
gs
sub
lods
xchg
in
xor
ud2
push
pop
das
cmp
xchg
mov
popa
lods
cmpsb
jb
sub
mov
divl
cmp
mulb
push
dec
ss
test
mov
and
pop
out
loop
xor
pushf
inc
pop
adc
mov
fdivs
mov
jne
xor
jmp
inc
fs
pop
cmpsb
jnp
lret
mov
in
ficoms
mov
push
lret
xchg
gs
sub
loopne
inc
mov
add
test
dec
jo
gs
in
fistps
pop
or
xchg
mov
pop
lods
call
and
lods
int3
xchg
lret
pop
inc
pushf
mov
push
pop
xchg
into
das
or
popa
fcmovb
test
inc
iret
mov
in
repz
pop
jne
or
or
mov
call
lds
leave
push
insl
jl
lods
cld
mov
inc
adcb
add
pop
xchg
xor
movsl
cmp
xor
int
cmpsl
fs
sar
loopne
bound
sub
dec
stc
test
dec
lret
cmp
add
inc
add
arpl
das
dec
mov
mov
orl
push
mov
sbb
ja
mov
sbb
pop
mov
movsb
mov
in
lods
jl
mov
scas
add
fdivrl
ret
adc
arpl
jge
mov
xchg
push
fidivrs
xor
xchg
xchg
pop
jns
add
in
jl
mov
mov
push
xor
rcl
adc
imul
call
dec
cmpsl
xchg
xor
aas
jb
cmp
pop
jl
jb
jo
into
pushf
gs
addb
mov
push
ss
aaa
ja
sbb
sarb
jnp
mov
cs
cltd
inc
aam
mov
popa
in
push
sub
push
mov
aaa
jmp
xchg
cmp
mov
repz
loop
or
divl
sub
repnz
ficompl
xchg
sub
ljmp
sahf
in
aas
dec
sub
in
outsb
dec
icebp
adc
sbb
ret
decl
fstp
int
cmpsl
mov
cmp
jp
dec
cmp
jno
fnstenv
rorl
adc
xor
fsts
stos
xchg
in
xor
in
loopne
sub
push
out
mov
or
outsb
push
fidivl
lahf
fldcw
push
adc
out
dec
lea
xchg
bnd
mov
sub
lods
pop
push
jo
mov
cmp
scas
test
imul
mov
jg
and
push
shl
nop
in
cmp
fnsave
xchg
xor
lock
mov
cmp
cs
scas
xor
mov
xchg
xor
addr16
adc
test
cld
fistpll
xor
xchg
push
icebp
inc
fs
lret
xchg
cld
and
fisubrl
or
xorb
push
jg
subl
in
das
nop
xchg
lret
lock
inc
sub
sub
lcall
inc
cs
out
sahf
xor
or
mov
mov
cmp
jne
sbb
mov
push
adc
loop
jno
insb
out
ds
mov
fs
sbb
pop
scas
or
xlat
fmul
je
adc
pop
cmp
std
ds
sbb
int3
inc
jmp
enter
lods
les
add
sub
mov
movsb
fwait
popa
loopne
in
sbb
and
in
mov
inc
push
pop
cmp
mov
mov
sub
aad
cli
pop
dec
aam
mov
sahf
shlb
jb
clc
mov
fidivs
sbbb
aad
fidivrs
cmp
xor
add
pop
xchg
mov
fistps
adc
stos
push
sti
inc
mov
cmp
jl
outsb
sbb
cli
imul
in
mov
inc
aad
and
sbb
sub
stos
dec
stos
add
xor
inc
sub
push
xor
fwait
movsl
sub
dec
or
stos
ss
insl
flds
stos
mov
imul
xchg
sbb
xchg
bound
xor
dec
lods
orl
and
lea
scas
and
icebp
ret
xor
incb
xlat
mov
imul
dec
add
xchg
jp
add
sbb
stc
out
or
adc
pop
dec
and
shlb
call
sti
out
stc
loop
pcmpgtd
xchg
sub
fisubl
adc
call
mov
add
jl
pop
push
dec
hlt
xchg
or
pop
push
sahf
lahf
repz
test
inc
push
adc
rorl
fwait
pop
and
sti
xchg
xchg
in
xor
and
mov
int
push
inc
inc
lret
into
stc
xchg
mov
jecxz
adc
cmpsl
jge
sbb
enter
insl
adc
lcall
fcom
aaa
jne
ror
ret
enter
add
in
ds
pop
ljmp
cmp
test
test
jmp
icebp
and
adc
xchg
aad
loop
dec
sub
stc
nop
xchg
adc
and
inc
sbb
xor
ja
shl
out
jle
dec
insb
cmpsb
stos
push
outsb
shrl
aaa
lods
lds
mov
mov
fs
lods
xchg
negl
dec
int3
mov
lods
adc
dec
ss
test
mov
add
sbb
add
mov
bound
into
xor
xchg
mov
mov
pop
add
sbb
or
mov
mov
dec
adc
shlb
jno
mov
test
imul
dec
jge
sub
pop
or
popf
fnsave
outsb
pop
ja
cmp
out
xor
push
push
enter
push
jno
cld
cmpsb
jo
movsb
xchg
les
and
lret
inc
out
dec
std
or
mov
pop
pop
std
neg
adcl
ja
or
out
inc
push
dec
add
push
xchg
add
outsb
stc
mov
xchg
pop
div
jns
cmp
pop
push
xor
mov
cld
mov
jle
sar
fwait
test
decb
sub
mov
dec
test
and
mov
mov
jbe
sbb
xor
out
inc
cmp
xor
lods
push
inc
mov
addr16
out
xchg
push
jge
push
idivb
cmp
out
cld
xchg
cmp
nop
test
cli
jnp
neg
mov
rcrb
clc
loopne
fprem
mov
out
jo
idivb
not
mov
negb
fmul
jnp
pop
roll
insb
push
mov
push
ljmp
js
mov
and
dec
xchg
jl
rorb
shlb
pop
and
shrl
aas
mov
add
stos
movsl
pop
sub
push
fidivs
mov
mov
pop
mulb
inc
data16
fcoms
adc
sub
or
loope
cwtl
xchg
xor
mov
jne
pop
push
jle
add
insl
ljmp
jnp
inc
outsb
sahf
adcb
xchg
addr16
or
push
xor
imul
mov
test
and
adc
cwtl
mov
mov
jno
inc
call
fisttpl
xchg
arpl
jle
mov
sub
fld
insb
or
dec
movsw
adc
and
pop
arpl
in
push
divl
xchg
dec
pop
xchg
ja
lds
data16
mov
js
lea
popa
int
fstps
loopne
pop
dec
lods
fildll
pop
sbb
push
lods
lahf
mov
add
push
pop
pop
lods
or
lahf
or
push
fnstsw
scas
cmp
jg
call
sbbb
into
hlt
cmc
out
incl
pop
adc
sbb
movsb
add
mov
enter
cld
ds
xchg
shlb
inc
repnz
addl
incb
cltd
aaa
jno
stos
ud1
enter
outsl
cmp
add
daa
cld
test
inc
jnp
jae
mov
sbb
lret
ja
or
loopne
loope
stos
cli
repz
rol
test
aad
xchg
pop
xchg
mov
jl
lds
fs
push
sbb
push
inc
scas
cmp
and
xor
out
cmpsb
arpl
adc
jo
mov
mov
sub
jmp
jecxz
in
andl
pop
in
rorl
cmpsl
mov
scas
stc
cmp
mov
je
inc
stc
sub
jnp
and
inc
lcall
scas
mov
jbe
mov
bound
sub
shr
rcrl
loopne
loope
and
xor
jbe
xchg
push
loope
jg,pt
and
std
loope
sub
cmp
push
mov
enter
xchg
jp
fistpl
fistpl
adc
push
xlat
scas
cltd
fisttps
pop
ret
mov
and
mov
pop
add
filds
xchg
in
or
jns
sti
adc
cmp
mov
aas
cld
push
js
popf
xor
pop
mov
adc
xchg
mov
int
cmp
pushf
dec
in
aaa
push
decl
adc
mov
enter
sub
jae
in
repz
loope
mov
jnp
xchg
loopne
insl
pop
inc
gs
sub
mov
push
sahf
inc
push
add
and
push
test
jmp
outsb
jo
sbb
cmp
cmpsb
in
xchg
lods
out
imul
dec
mov
jo
lcall
pop
stos
cmp
aaa
and
xor
push
stc
lock
mul
mov
jg
add
adc
jg
aad
adc
pop
inc
pushf
xchg
aas
aas
push
cltd
imull
mov
sti
das
xor
leave
push
xor
je
out
outsl
mov
adc
fldenv
mov
orl
ljmp
stos
mov
push
and
xor
adc
inc
insl
mov
ja
negl
in
fwait
cmp
mov
mov
mov
sti
dec
jo
in
mov
mov
mov
mov
cmp
std
xor
leave
out
xchg
lret
xchg
sbb
ret
push
mov
fwait
mov
mov
sub
mov
imul
fs
data16
add
pusha
lahf
inc
cs
and
cmp
jbe
push
nop
lock
xor
movsb
sbb
fisttpll
add
dec
inc
add
bound
sti
jbe
push
cmpsl
jno
inc
insl
or
xor
xlat
pop
clc
mov
rcrl
xor
mov
mov
mov
mov
andl
pop
push
jbe
leave
fildl
sbbb
sub
jg
mov
mov
sub
push
mov
lods
mov
mov
cld
fbstp
xorb
mov
loope
mov
sub
xchg
subl
sbb
orl
sub
xchg
cld
mov
dec
in
and
jle
loopne
data16
inc
ret
out
call
stc
jno
std
sub
xchg
xor
jne
dec
repnz
movsb
mov
out
xor
lods
add
mov
dec
jmp
lcall
mov
and
jbe
out
and
scas
dec
addr16
test
xlat
xor
push
lds
out
jle
push
xchg
insl
clc
xchg
imul
and
lahf
jl
ret
or
ja
or
sub
adc
cmp
cmp
mov
xchg
in
mov
xchg
or
imul
xchg
jmp
fwait
lock
stos
pop
gs
xchg
jmp
cltd
stc
adc
movsb
jl
push
in
sub
mov
and
fcmovnbe
mov
aas
popf
push
add
call
add
push
cmpsb
sbb
mov
mov
std
add
iret
mov
sbb
mov
addb
cmp
movsb
adc
imul
or
or
add
xchg
loope
std
ror
mov
and
cmpsl
pusha
pusha
lea
movsb
push
add
lret
mov
or
scas
pop
add
mov
mov
icebp
mov
decb
aad
stc
jp
decl
cs
cmp
adc
fmulp
pushf
xor
push
or
ja
testl
jl
jb
xchg
sbb
xchg
mov
repz
je
adc
popf
loop
cli
cs
insb
xchg
cld
add
rcrb
and
enter
and
sbb
lahf
mov
out
cld
mov
xor
imul
cmpl
imul
rep
test
jae
and
ret
into
popf
and
ja
leave
mov
cmp
imul
push
and
mov
push
frstor
es
sub
mov
and
inc
lds
addr16
add
mov
cmpsb
jl
int
jns
pop
insl
mov
jle
pushf
test
xor
pop
pop
repz
daa
push
les
mov
jo
cmp
out
add
aas
imul
mov
jl
xlat
pop
mov
call
insb
jnp
sbb
and
sbb
in
sahf
mov
mov
movsb
jae
and
push
test
rcrl
dec
or
clc
mov
mov
push
dec
sub
or
xchg
or
push
jg,pt
cmc
dec
mov
sbb
scas
lahf
fwait
jb
shlb
mov
mov
les
xor
imul
mov
cli
inc
shl
dec
add
mov
je
mov
int3
push
adc
xchg
dec
dec
nop
dec
cmp
insl
cmp
andl
ss
or
cmp
push
mov
lods
add
cmp
movsl
inc
add
push
mov
js
lea
out
mov
sub
jmp
fwait
jne
xor
adc
sbb
in
mov
sbb
leave
mov
jns
mov
xor
pavgb
add
repz
adc
xchg
mov
imul
loop
cs
aaa
stc
rcrb
mov
ret
fnstenv
xor
sub
dec
pop
scas
sbb
inc
jmp
jecxz
xlat
cs
xor
jne
mov
adc
pusha
sub
jno
push
sti
add
out
das
jmp
ljmp
dec
dec
or
jno
dec
mov
inc
out
rorl
pop
shrl
addr16
sbb
sub
inc
lret
sub
mov
adc
fisubrs
adc
push
rcl
pop
aam
fadds
ficoml
jae
adc
repnz
cmp
movsl
imul
test
inc
pop
cmc
leave
dec
std
pop
mov
dec
xlat
lahf
fwait
sub
cmpb
sti
into
mov
icebp
jl
lods
xchg
xor
cmc
jl
sar
push
and
push
xor
pop
pop
mov
mov
mov
lea
xchg
push
inc
adc
jae
enter
sub
mov
dec
xchg
jo
outsb
mov
dec
lcall
pop
loope
std
or
int
ja
sar
js
dec
lret
pop
xor
aam
sbb
xchg
push
dec
pop
pop
vaddpd
or
nop
inc
loop
jbe
imul
pop
dec
dec
dec
gs
std
sbb
ljmp
fistpl
pushf
cmp
cmc
mov
imul
lret
sub
in
push
mov
sarl
ss
mov
out
repz
loope
push
push
test
mov
push
sti
lock
lcall
jl
cmpsb
sub
ljmp
dec
push
adc
inc
jb
movsl
sti
rolb
jp
push
mov
or
xor
xchg
stc
fsts
pop
into
lea
sub
or
push
xor
int
mov
push
andb
cmp
jo
xchg
test
js
xlat
ja
aaa
sarb
out
pop
fs
lock
sub
xor
xor
jle
lods
xchg
daa
daa
mov
sub
ja
cmpsl
fwait
out
mov
and
popa
in
or
nop
sub
xlat
icebp
inc
sbb
lds
adcl
pop
mov
dec
dec
test
sbb
pop
xchg
mov
ss
adcl
outsb
dec
cmp
adc
loop
inc
in
in
dec
xchg
ja
std
test
fisubrl
mov
cmp
mov
mov
push
inc
jmp
fldcw
xchg
lahf
pop
mov
cmp
mov
pop
mov
arpl
fimull
push
xor
pop
mov
mov
cmp
inc
ja
push
xor
push
adc
fs
stos
jns
mov
daa
and
or
and
push
inc
or
dec
dec
mov
push
xor
jnp
push
or
repz
mov
into
push
lret
sbb
les
jbe
adc
push
fists
mov
jnp
pop
stc
adc
pop
dec
mov
pop
add
rcrl
jb
jae
mov
scas
leave
fnsave
mov
mov
rcr
cmp
insb
mov
mov
in
ficomps
cld
push
mov
push
or
and
enter
cli
mov
adc
lret
or
iret
outsl
push
and
dec
ljmp
movsb
cmc
mov
sbb
arpl
add
das
sbb
mov
fisubs
mov
xchg
lahf
xor
ljmp
icebp
insb
push
sbb
cmp
cmp
pop
ja
ret
xchg
push
pop
lds
push
lret
sarb
add
insl
xor
dec
test
xorl
cmp
jmp
jg
sub
in
sub
loop
pop
inc
arpl
jne
cmp
loop
pop
sub
in
xchg
cmp
cmpsb
stc
dec
mov
gs
mov
imull
lods
mov
mov
push
mov
sbb
insl
call
sub
stos
lea
sbb
dec
or
mov
ss
inc
sbb
xchg
in
pop
pop
pop
pop
loopne
aas
ds
and
in
pop
push
in
decb
fbstp
test
in
stos
in
stos
sbb
mov
xor
enter
arpl
pop
or
movsb
into
inc
cmpsb
mov
inc
out
xchg
push
stc
shll
shrb
loope
cwtl
or
dec
out
aam
push
push
cmp
std
stos
jl
ds
push
test
xchg
dec
hlt
bound
xchg
sbb
int3
sbb
push
or
cmpsl
popf
and
popf
enter
and
xchg
dec
pop
adc
mov
push
lds
and
sbb
std
out
mov
push
sti
cmc
fadds
lcall
js
sahf
scas
or
add
bnd
jae
rcrl
js
scas
and
jp
fstps
xor
push
daa
inc
movsl
adc
bound
cwtl
mov
jmp
mov
mov
mov
push
lods
test
orl
sbb
and
xor
aam
lock
sub
arpl
xchg
fisubrs
cmp
lea
test
fisubs
fcompl
dec
sub
jno
sbb
lahf
lock
pop
jbe
lret
sub
cli
mov
and
rcr
xchg
lret
pop
mov
pop
inc
fdivr
pop
push
and
mov
lea
xchg
in
or
fisubl
push
jp
lods
ret
movsb
inc
daa
xor
shlb
mov
mov
mov
mov
das
lret
subb
xchg
jb
fcoml
cmpsb
fmull
cs
imul
jp
ret
daa
jnp
lods
mov
rcrl
jge
in
aam
sbb
sahf
xor
pop
or
push
or
lret
sahf
xor
sub
fcomps
out
push
dec
sbb
int3
sub
sbb
jle
or
push
int
loop
insl
pushf
inc
movsl
mov
xlat
aad
std
arpl
xchg
lods
das
cwtl
pop
adcl
addl
filds
xlat
push
ja
fbld
mov
pop
and
dec
xchg
and
cmp
push
pop
cmpsb
sbb
pop
xor
mov
push
jl
cmp
sub
push
sub
jb
scas
sbb
pop
xchg
adc
pop
jo
mov
mov
or
scas
and
jl
js
mov
daa
leave
mov
out
jp
add
cmp
fcom
adcb
pop
nop
incl
data16
pop
mov
cmp
jbe
push
xor
xor
in
xchg
loope
enter
push
push
popf
push
inc
mov
sub
lds
pop
xor
lods
imul
ds
pop
aaa
call
mov
pushf
mulb
gs
bound
inc
into
fldcw
int
cld
xor
aad
jno
clc
repnz
xor
imul
push
fisubrs
pop
sbb
lret
cmp
adc
or
pop
lock
stos
mov
sbb
int3
inc
mov
inc
mov
inc
pop
icebp
clc
jbe
sub
sahf
stc
lcall
ret
sub
xchg
and
jnp
sbb
aam
outsb
inc
mov
loope
in
lahf
cmp
stos
sbb
and
into
pop
incl
or
aas
mov
or
in
dec
enter
pop
mov
push
xchg
cs
sbb
in
and
movsb
mov
xchg
jecxz
popf
out
xchg
wrmsr
and
push
aaa
fstp
bound
xor
fdivs
daa
or
pushf
fistpll
xor
dec
popf
mov
rol
fidivl
out
popa
into
ret
aas
mov
dec
out
and
push
mov
cld
cltd
stos
in
xchg
shll
xchg
or
adc
arpl
pop
clc
fwait
cld
xchg
adc
bound
lods
xchg
lret
xor
sub
jl
dec
sbb
ret
lahf
sub
inc
xchg
dec
mov
loope
sarl
pushl
and
stc
jne
imul
int
cmp
jnp
clc
aas
std
adc
stc
bound
ret
lcall
aaa
dec
scas
enter
fbld
xchg
idivl
push
scas
gs
add
xor
push
fwait
mov
push
aaa
movsl
leave
leave
mov
adc
or
das
lds
dec
and
mov
xor
mov
push
sbb
aas
inc
leave
dec
sbb
add
es
jl
fnstcw
sbb
pushf
frstor
sbb
push
mov
lahf
int
loope
rclb
fwait
cmp
js
leave
add
or
into
dec
in
mov
push
cmp
inc
lea
xor
js
xchg
add
cmp
shrl
iret
mov
rclb
push
pusha
xor
pop
xchg
cmpb
and
jle
clc
dec
mov
scas
mov
out
inc
in
gs
push
stos
add
out
outsb
pusha
cmc
mov
pushf
adc
push
xor
ss
out
cmp
jbe
rcrl
mov
inc
cltd
adcl
inc
rcr
mov
movsl
or
pop
xchg
dec
push
mov
movsl
lock
jmp
pop
out
movsl
push
testl
mov
sub
inc
std
enter
xchg
fistpl
shll
dec
adc
sarb
sbb
lret
xchg
xchg
mov
int3
imul
jle
and
test
mov
cmp
and
add
das
push
push
adc
dec
cltd
testl
xchg
imul
mov
in
mov
inc
popf
jmp
jg
enter
mov
call
fmuls
mov
js
in
sti
pop
xor
imul
sub
in
fsubrl
xor
mulb
mov
cltd
stc
jecxz
repnz
push
jb
mov
dec
shlb
mov
jg
lods
aad
outsl
data16
or
sbb
adc
scas
popa
fcmovbe
inc
push
xchg
push
les
je
mov
push
sbb
negb
mov
lods
inc
fiadds
adc
sub
pop
int
sbb
pop
push
or
mov
ss
sub
and
ret
cld
xchg
pop
andl
mov
and
or
shl
mov
add
xchg
mov
cmpb
stc
pop
xor
inc
mov
jmp
das
stos
mov
test
mov
mov
cs
jo
jae
rolb
in
dec
push
xor
out
or
and
adcl
mov
push
sbb
or
repnz
xor
ss
mov
out
and
pop
add
sti
aas
mov
sarl
cmpsl
ja
lods
iret
roll
sub
add
sbb
out
xchg
lods
repz
pop
sbb
lahf
pop
push
pop
cld
jmp
imul
pop
adc
mov
cmpsb
mov
add
lods
pop
cmp
push
push
sbb
jg
shrl
cmp
rclb
stos
das
in
fmul
cld
dec
or
cltd
cmpsl
xchg
jbe
push
add
cltd
pop
or
stc
es
out
jge
insb
repz
shlb
stos
jmp
dec
inc
inc
push
rcl
int
mov
repnz
enter
cmp
pop
ja
sbb
movsb
mov
mov
mov
pop
adc
dec
or
sti
push
scas
mov
aas
daa
scas
push
out
adc
add
jb
mov
push
sub
mov
divl
add
shlb
mov
sub
es
loope
lahf
inc
ljmp
pop
mov
les
mov
insb
pop
aas
or
js
pop
or
jo
call
adc
loopne
cli
mov
lea
loopne
je
fsub
dec
and
xor
or
pop
push
jle
add
rcr
imul
cwtl
loope
xor
call
jmp
xchg
mov
addr16
dec
and
sub
pop
ds
mov
jo
std
mov
xlat
mov
adc
push
cli
push
jnp
lret
pusha
xchg
cmp
rolb
push
fildl
test
clc
mov
subb
push
ficomps
rolb
loop
pop
mov
pop
jge
jmp
adc
pop
jle
lds
add
shll
cmpl
sahf
or
mov
std
jbe
xchg
daa
inc
xchg
jns
mov
lret
iret
adc
xor
and
ds
and
pop
popf
sbb
or
std
adc
sbb
cli
and
xadd
cmp
xor
sub
sahf
xor
mov
js
call
iret
sbb
in
mov
rorl
loopne
imulb
push
add
out
clc
dec
fisttps
test
mov
pop
loopne
push
xchg
sbb
sub
mov
jno
jae
fwait
outsl
adc
and
xor
xor
daa
push
xor
in
testl
sub
adc
adc
popf
pop
push
lret
push
cmp
or
jbe
or
mov
in
popa
ds
and
jno
loopne
bound
rorl
or
dec
je
movsb
test
and
push
cmp
sub
notl
and
xor
sub
cmc
shll
stos
out
cmp
pop
push
dec
or
sub
cmp
push
jecxz
jbe
mov
cmp
adc
fimull
sbb
jne
insl
icebp
leave
add
mov
bound
xor
inc
ja
rcll
and
cmpsl
cmpl
xchg
and
test
xor
mov
push
mov
les
add
fsubl
push
pop
bound
movsl
imul
or
repz
pusha
insl
pop
push
push
pop
mov
or
loop
sbb
cmpsb
jp
adc
pop
push
jle
xor
push
pop
cmp
enter
nop
insl
sarl
lahf
je
movl
fidivrs
push
mov
xchg
shll
movb
scas
push
pop
xchg
inc
test
loope
or
xchg
shl
pushl
sahf
and
cmp
add
jge
mov
mov
testl
jns
lcall
int3
push
pop
pop
ja
adc
pop
inc
insb
inc
call
mov
gs
popf
lahf
outsb
mov
dec
mov
xchg
scas
xor
lcall
roll
pop
push
ds
add
cwtl
loopne
addr16
je
int3
xchg
cmpsb
inc
pop
mov
arpl
iret
adc
mov
daa
xor
in
in
sbb
jle
fstl
mov
dec
scas
sbb
pop
pop
xchg
shlb
and
pop
pop
sbb
or
in
es
or
andl
pop
jecxz
push
xor
or
jo
loopne
sahf
and
jecxz
popf
xor
int3
or
mov
clc
and
lret
outsl
cli
int
cmp
push
sti
lock
cmp
std
lret
fisubrl
notl
roll
insl
sub
pop
jl
push
or
cmp
imul
rcrb
cmp
dec
loopne
and
push
sbb
jae
mov
shlb
repnz
sub
push
shr
aaa
scas
and
dec
mov
stc
iret
xor
cmp
mov
jo
xor
test
add
push
hlt
xchg
push
fidivrl
repnz
ja
mov
pop
add
fsubl
xchg
push
xor
pop
mov
push
in
xor
out
mov
int
cld
lahf
mov
jne
cmp
xor
lock
mov
popf
test
imul
xchg
mov
lahf
fwait
fisubrs
sbb
scas
fnstcw
push
cmp
aaa
leave
push
adc
mov
xchg
test
xlat
repz
andb
fadds
outsl
dec
fsts
push
inc
lock
in
stos
or
push
loopne
push
mov
lahf
pop
enter
add
xor
in
xorb
inc
pop
mov
inc
dec
inc
aam
pop
lea
inc
cli
lods
gs
jl
and
inc
cmp
test
in
lods
inc
sbb
xor
xchg
out
aad
pop
stc
push
test
jnp
popa
fldt
or
xchg
int
xchg
loop
mov
dec
jge
jno
and
paddw
inc
sbb
aas
and
lret
js
ds
push
mov
loope
pop
test
in
aaa
cli
aad
mov
mov
sti
sub
pushf
xchg
or
fnop
adc
pusha
push
andb
inc
and
mov
jl
rol
ret
push
pop
sti
imul
and
dec
lahf
frstor
outsl
pop
jbe
cmp
mov
shrb
and
mov
xchg
mov
cmp
cmpsl
xchg
mov
sbb
fsubl
jmp
decb
cmp
stc
mov
dec
and
cmp
xor
or
ficomps
fistpl
sub
iret
and
jne
mov
stos
ja
jbe
int
add
add
mov
stc
jb
popa
adc
fidivl
cmp
subb
push
xor
cmp
out
test
icebp
adc
xor
mov
adc
xor
popa
xchg
or
lret
and
jae
xor
mov
pop
mov
push
xchg
dec
inc
jae
subb
mov
std
pop
xor
adc
xchg
loop
and
imul
sbb
cli
outsl
mov
ja
out
inc
sahf
popf
dec
sbb
je
cwtl
push
sbb
fdivr
sti
sub
leave
push
push
aad
xchg
xchg
or
lods
cltd
lret
xor
dec
jae
cmp
xchg
sub
xchg
jns
pop
int
aam
daa
jae
cmp
push
leave
int3
mov
adc
push
rorl
inc
jecxz
pop
insl
and
mov
mov
pop
jmp
xchg
add
pop
cld
fs
mov
xor
mulb
roll
xchg
pop
mov
repnz
and
adc
inc
sbb
ret
jne
je
add
int
inc
adc
sbb
add
push
adcb
fimuls
fistl
push
sbb
cs
inc
xor
adc
pop
int3
mov
xchg
jbe
mov
pop
cmpsl
daa
imul
shll
sub
mov
adc
pop
push
dec
add
in
incb
push
push
mov
fldt
js
popf
mov
push
movsl
mov
inc
mov
cltd
pop
pop
push
push
xor
sbb
shll
loopne
cmp
xor
aas
and
leave
scas
dec
jecxz
lock
push
nop
adc
xor
cmpsl
xchg
out
jbe
push
push
jg
sbb
cmc
lds
or
dec
push
test
add
cmp
jns
scas
inc
lcall
adc
xor
push
repz
mov
in
negl
cmp
mov
in
lret
or
repz
in
outsb
pusha
mov
mov
mov
shll
fistpl
scas
mov
jg
add
pop
push
in
jmp
pop
push
negb
pop
adc
cmp
add
sub
pop
inc
and
insl
loopne
mov
jns
ret
add
mov
arpl
fidivl
in
cmpl
gs
testb
jmp
hlt
repz
cli
aam
fnstenv
imul
dec
or
ficoms
fiadds
mov
repz
adc
lcall
sbb
push
cld
arpl
xchg
jecxz
into
fwait
add
push
mov
mov
jno
popa
pop
aaa
pop
mov
or
push
pop
cmp
jbe
mov
fsub
lcall
es
data16
lret
inc
or
sarl
out
mov
push
shlb
mov
lock
daa
lret
nop
rol
mov
adc
sbb
outsl
loopne
xorb
cmp
scas
jo
lds
or
cmp
push
insb
xchg
divb
push
sub
imul
imul
bound
inc
dec
inc
mov
add
cmp
gs
rorl
leave
or
xor
mov
stos
jg
xor
mov
mov
sarl
jl
aad
dec
fdivrs
sbb
mov
test
lods
testl
lods
inc
pop
imul
iret
mov
mov
pop
gs
cmp
orb
inc
xchg
cmp
cmp
mov
xchg
inc
dec
lahf
or
loopne
loop
xchg
mov
push
add
mov
cmc
in
test
sbb
pop
cmp
add
or
movsl
rcrl
notb
sarb
xchg
mov
jne
jo
sub
icebp
subl
in
push
push
or
jb
nop
ret
in
fwait
cmp
mov
add
shll
fsubl
nop
pop
sti
inc
js
mov
shlb
lods
out
mov
stos
rol
mov
and
fmuls
shlb
mov
cld
and
mov
adc
insl
pop
jecxz
dec
mov
shlb
push
stc
inc
push
int
fdivrs
int3
xchg
xchg
sbb
dec
cmp
xchg
jb
lret
and
xchg
pop
outsl
mov
push
pop
xchg
push
push
push
fistpll
movsl
mov
xchg
sbb
int
nop
in
xchg
xchg
and
xbegin
lock
test
pop
pushf
sahf
repnz
adc
rol
push
lods
lret
ss
repnz
enter
into
and
stc
jle
push
dec
gs
pushf
mov
or
push
and
sub
and
push
mov
into
jns
pop
lea
insb
mov
loopne
daa
jl
lret
sbb
sub
int
pusha
push
ds
out
cmp
xchg
lods
sbb
push
bndstx
cmp
add
iret
dec
jmp
xchg
jns
ret
into
ficompl
mov
pushf
sub
test
fildll
jnp
pop
lods
in
cmp
dec
push
xor
xor
out
outsb
leave
ds
repnz
test
int
aaa
add
pop
pop
jae
add
aad
add
mov
das
jle
dec
jmp
popa
mov
imul
sbb
lds
f2xm1
push
arpl
xchg
into
hlt
mov
out
sub
xlat
dec
stos
cli
xchg
inc
addb
lcall
xchg
add
xchg
test
sahf
fwait
sbb
jno
mov
mov
inc
xor
dec
je
xor
sub
sahf
push
xor
xorb
or
out
sbb
fisubs
add
test
or
jne
lret
push
sub
pushf
jns
in
cmc
pop
fs
daa
push
push
adc
or
cmp
dec
mov
loop
inc
mov
gs
pop
mov
xor
in
sbb
scas
rclb
mov
out
and
pop
and
mov
mov
mov
test
sti
cwtl
fidivs
cmp
jo
push
xor
mov
mov
mov
repnz
imul
xchg
dec
orb
mov
cmp
cwtl
nop
mul
aas
xlat
imul
push
mov
cld
stos
sub
jle
mov
mulb
push
aaa
xchg
mov
hlt
movsl
in
es
mov
and
cli
jno
jp
mov
push
inc
insb
mov
stc
cs
mov
inc
lahf
rcrb
cmp
mov
dec
pop
mov
add
mov
add
mov
cmc
stos
mov
loope
inc
pop
mov
sub
loope
cmovp
and
or
insb
add
fwait
xchg
push
int
scas
pushf
out
mov
pusha
in
sbb
xchg
stc
mov
jns
loopne
enter
mov
mov
fcompl
pop
ja
dec
jns,pn
sub
inc
out
xchg
cmpsl
mov
push
inc
cmp
cmp
mov
iret
inc
jno
loope
inc
cmp
icebp
test
call
cs
push
xor
popa
je
adc
daa
ljmp
cwtl
pop
call
das
into
stos
aad
cltd
lret
ljmp
repz
cmp
push
iret
rcl
rcl
add
pop
out
mov
or
pop
pop
mov
pop
inc
test
push
pop
push
push
mov
inc
cs
pushf
inc
scas
jg
sub
jle
push
out
outsb
mov
jo
push
clc
inc
jmp
sbb
pop
xor
rcr
scas
mov
sbb
jno
xor
cmp
aad
lahf
and
imul
inc
out
shlb
lods
adc
cmpsb
sbb
mov
scas
push
and
add
jns
xorb
pop
dec
add
stos
test
mov
sbbb
inc
pop
das
in
fisttpl
aaa
daa
divb
daa
and
cmp
sub
pop
cli
popf
push
outsb
mov
mov
cmpsb
xchg
das
sbb
mov
mull
push
into
add
dec
push
lds
fwait
out
decb
cltd
cmpb
or
shl
and
mov
cwtl
push
add
ds
sti
shlb
push
lods
add
add
sti
test
jmp
add
stos
mov
addb
mull
dec
addl
popa
xchg
inc
push
das
jb
test
push
and
or
jmp
dec
sbb
mov
rcrl
dec
outsb
pop
or
clc
stos
and
pop
leave
int
cmp
enter
xchg
test
mov
dec
ret
pop
dec
rclb
and
or
enter
sub
stc
cli
cs
sbb
mov
loop
arpl
pop
arpl
shrl
xor
js
je
outsl
xchg
jecxz
bound
loope
push
call
sub
lods
rcr
jbe
mov
out
lret
outsb
out
cmpb
ljmp
xor
xorb
mov
cmpsb
jl
push
xchg
movsl
dec
fidivrs
cs
nop
add
lret
jo
xor
loopne
and
nop
inc
aas
jnp
mov
mov
xchg
ds
out
lret
mov
jmp
pop
sarb
add
rcrb
jno
push
xor
sub
xor
cmp
sub
jg
jecxz
sub
jo
sbb
inc
lcall
movsb
orl
mov
mov
xchg
popa
inc
push
sti
jp
sub
int
adc
sti
dec
and
jno
bnd
pop
xchg
lods
rclb
scas
icebp
mov
pushf
adc
shl
inc
loopne
push
dec
inc
jne
andb
xor
ljmp
popf
jl
xlat
pusha
popa
jge
dec
mov
adc
inc
push
imul
clc
cs
ljmp
enter
xchg
into
aam
xor
mov
sub
xchg
nop
cmp
shlb
cld
dec
sbb
sbb
ficompl
test
dec
fwait
cmp
lret
test
sub
les
adc
pop
js
mov
ret
gs
adc
dec
sub
xchg
movsl
stos
mov
cwtl
lret
adc
cmp
mov
jl
stc
fbstp
mov
std
ja
mov
jecxz
lock
jecxz
jg
shlb
sbb
ds
push
sbbb
mulb
aas
fmull
loopne
outsl
jge
stos
or
es
test
jmp
aad
decl
xlat
jne
ss
xlat
rcrl
xor
jae
jge
int
popa
dec
popf
inc
pop
mov
ss
and
dec
insb
test
inc
mov
mov
shlb
push
add
dec
ja
movsb
jge
arpl
aam
cmpsb
xchg
sub
and
push
loope
cmpsb
xchg
jbe
or
and
repnz
cmp
xchg
mov
nop
arpl
daa
insb
xor
daa
fists
ret
sahf
scas
sti
mov
or
inc
mov
ror
js
sbb
popa
and
dec
or
xor
lock
outsl
mov
mov
fnstsw
mov
inc
cmp
pop
cmp
jl
inc
addr16
fwait
pop
movsb
inc
add
jo
mov
cltd
enter
lds
dec
xor
jl
fimuls
push
fbstp
push
outsl
xor
jo
cmc
pop
inc
jno
mov
pop
dec
sbb
dec
call
mov
int3
or
hlt
mov
jecxz
dec
cmpb
and
adc
clc
lock
xor
adc
mov
in
jge
and
and
sub
xor
dec
mov
fnstcw
push
fldcw
or
pop
mov
lds
arpl
jle
and
mov
sbb
cmpsl
int3
dec
pop
cwtl
rcr
les
adc
jae
rclb
jmp
push
mov
cli
mov
mov
insl
push
push
ret
bound
ja
cmp
add
sahf
inc
add
jb
mov
hlt
dec
sub
cmp
sub
mov
xor
jbe
cmp
dec
pop
xchg
sub
or
sbb
xchg
sarl
aad
es
test
jmp
cmp
test
push
xor
dec
and
sub
jae
std
test
fsubp
mov
jo
push
pusha
mul
jge
add
pop
lds
push
hlt
fidivrs
and
pop
push
aam
cmp
jp
imul
enter
lods
ss
lods
cmp
cmp
data16
stos
push
mov
push
xor
jg
pop
mov
test
jns
fwait
push
pop
push
in
imul
popf
mov
mov
adc
xchg
rcll
pop
lcall
mov
or
lcall
pop
jge
cli
lea
xor
mov
ja
push
dec
xchg
jmp
cld
and
jae
cli
shll
icebp
xor
push
mov
jns
jp
imul
mov
dec
cmp
pop
add
fdivr
not
out
shlb
out
sahf
adc
jbe
sbb
lea
mov
xchg
xor
sbb
aad
cmp
int3
popf
jo
cmp
cmp
hlt
sbb
iret
sbb
add
enter
ja
loope
sbb
imul
popa
aam
dec
adc
out
insl
xlat
push
outsb
jmp
and
in
push
pop
dec
and
pop
pusha
and
aam
out
fbld
dec
addr16
arpl
mov
xchg
xor
inc
addb
leave
and
movsb
fadds
mov
mov
add
cmpsl
cld
and
xchg
add
arpl
ficoml
dec
roll
xlat
xor
imul
jle
mov
lahf
push
pop
inc
jmp
mov
jno
int3
pop
filds
fstl
rcrl
cli
pcmpeqw
gs
ljmp
scas
lods
pop
js
sbb
cmp
je
or
in
xlat
data16
sbb
bound
push
pusha
mov
iret
mov
xchg
ret
stos
loope,pt
mov
pop
or
ljmp
dec
jg
lahf
push
push
bound
or
pushf
mov
mov
ljmp
jns
or
and
mov
sarb
dec
out
sub
cltd
in
movsb
push
fistpll
and
pop
jp
andl
repz
loop
ds
mov
insb
xor
xchg
sub
cmpsl
aad
nop
es
add
movsb
inc
jne
popa
and
mov
ja
and
jns
adc
pop
inc
icebp
sub
dec
sbb
movsb
fildll
mov
adcl
in
clc
cwtl
scas
jl
into
scas
push
push
repz
movsb
insb
jbe
cmp
xchg
mov
xchg
lret
mov
push
div
inc
popf
rolb
mul
adc
cli
es
mov
maskmovq
idivl
cmp
insb
or
jg
add
mov
cmp
mov
inc
sub
aad
dec
jg
ret
inc
fs
or
dec
push
rclb
movsb
test
or
mov
out
rclb
adc
xor
xor
push
sarl
rcrb
xor
sbb
cld
movsl
aad
mov
dec
arpl
insl
xchg
sahf
inc
idivl
cmp
gs
fisubrl
cld
outsb
mov
outsl
cwtl
outsl
inc
push
cmpsb
push
mov
imull
in
xchg
clc
cmc
jb
bound
sbb
hlt
jne
sub
cmpsl
or
mov
icebp
sbb
test
mov
lahf
mov
xor
xor
repz
fcmovu
and
xor
jo
sbbl
imul
push
pop
mov
xor
lret
jp
xacquire
orl
xchg
loopne
adc
scas
xchg
pusha
and
or
sbb
and
repz
xchg
shl
sahf
dec
out
cmp
jo
int
movsl
lods
and
out
xor
iret
cli
fnstcw
push
xor
push
imul
cltd
jno
imul
cwtl
mov
add
pop
mov
pop
sub
jb
push
mov
fsubrp
sub
inc
jns
fcos
sub
mov
repnz
std
mov
in
jbe
adc
enter
movsb
xchg
in
out
pop
pop
inc
jmp
aad
adc
out
pop
lods
cmp
jp
add
dec
pop
sub
aam
cmc
mov
test
clc
mov
mov
xchg
inc
mov
sbb
es
xchg
aaa
es
out
enter
shl
dec
jle
mov
jle
jnp
or
cmp
in
lret
pushf
lcall
push
hlt
adc
int
gs
call
mov
pop
or
movsl
mov
jmp
lods
je
enter
sub
orl
push
cltd
imul
adc
sbb
pop
push
data16
ret
xor
jecxz
jns
imul
pop
mov
mulb
popa
fnsave
movsb
mov
jne
mov
orl
movsl
xchg
pop
pop
push
and
push
xchg
divb
inc
mov
mov
xorl
mov
fs
xchg
data16
mov
xchg
sub
fs
mov
mov
sub
loopne
mov
jl
mov
sbb
xchg
jp
test
test
mov
inc
shll
jg
fnstenv
jp
jnp
out
add
int3
scas
xchg
mov
leave
adc
add
sub
jmp
mov
mov
dec
stos
push
pop
push
xlat
xchg
pop
push
mov
out
imul
imul
in
cmc
cwtl
sbb
ja
sub
lret
into
push
aaa
inc
mov
push
fdivl
dec
or
rclb
add
add
sbb
ljmp
sti
pusha
push
nop
xor
popa
rol
stc
jo
or
xchg
out
inc
stos
out
pusha
pop
out
enter
lahf
call
loop
call
xor
pop
adc
and
jnp
ja
xor
mov
push
jae
push
and
xchg
data16
sbb
mov
xor
xchg
imul
cmp
push
xchg
mov
dec
xor
rcrl
push
int
push
mov
cmp
dec
mov
xchg
push
xchg
jae
cmp
jg
mov
adc
nop
and
sub
fdivrs
sbb
bnd
ret
loop
add
sbb
sbb
xchg
adc
jns
inc
fsubrl
and
push
xchg
dec
sti
mov
pop
outsl
push
or
cmp
add
pushf
cmp
inc
sarb
ds
mov
sub
sub
lods
fsubs
outsl
nop
xchg
mov
rcrl
and
cmp
fisttps
mov
lahf
push
mov
test
fists
push
loope
jne
pop
fdivrl
pop
dec
inc
and
sub
das
hlt
lock
xor
mov
push
in
rcrl
ret
jmp
les
jae
mov
push
jmp
cmpsl
jmp
adc
and
cli
pop
add
pop
paddsb
gs
imul
filds
movl
ljmp
ljmp
or
dec
pop
pop
pop
push
mov
lcall
adc
push
cld
gs
push
pop
emms
sbb
mov
pop
dec
lcall
jp
adc
jno
push
lods
and
adc
sbb
sub
roll
fs
popa
jne
addr16
inc
ljmp
cltd
mov
movsb
sbb
add
rcrl
loopne
mov
adc
add
cmp
or
and
ljmp
roll
xor
sbb
jmp
daa
fs
sbb
fs
lahf
push
sub
pop
pop
mov
outsb
mov
bound
dec
sbb
and
mov
inc
push
vcvttpd2dq
push
xor
scas
xchg
sub
push
xor
xchg
or
mov
xor
jmp
icebp
inc
adc
leave
fnstcw
xchg
mov
testb
inc
popa
mov
or
sub
popa
push
add
mov
roll
icebp
loop
cmp
jns
in
cmc
push
push
adcb
cmp
mov
or
mov
ficomps
lahf
adc
loopne
shrl
iret
pushf
xlat
mov
sar
fiaddl
mov
pop
or
fwait
jl
clc
jnp
xor
inc
scas
mov
pushf
push
jb
cmp
push
pop
sbb
mov
sub
dec
xchg
addr16
sarb
xorps
pop
jge
inc
lret
ds
repz
test
sti
loopne
cmp
sbb
stos
add
jno
ja
inc
adc
test
xchg
xor
inc
or
shl
in
dec
imulb
mov
mov
jno
or
dec
pop
out
data16
mov
or
add
fnstsw
push
push
or
xor
orl
gs
imul
aaa
adc
mov
ss
cmp
inc
lock
outsb
mov
mov
mov
outsb
into
iret
scas
push
pop
dec
sub
xchg
mov
adc
pop
and
out
lret
repnz
fdivrp
loope
add
add
ret
test
cmp
add
add
add
add
adc
xorb
xorb
add
cmp
subb
add
rolb
add
sbb
add
sub
add
inc
add
addb
add
pop
add
orb
add
push
add
add
add
orb
add
sub
adcb
add
inc
add
addb
add
ret
test
cmp
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
fs
orb
add
ret
test
cmp
add
add
add
add
add
xchg
cmpb
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
addb
add
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
ret
test
cmp
add
add
add
add
add
test
add
rolb
sbb
add
lock
add
or
add
cmp
add
push
push
add
push
adc
add
cwtl
push
add
mov
add
enter
xchg
adc
add
clc
push
add
adc
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
push
add
sub
add
cs
add
xor
add
cmp
add
inc
push
add
inc
push
add
dec
push
add
pop
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
rorb
andb
add
or
andb
lock
andb
add
or
andb
add
or
andb
add
or
subb
add
add
push
sldt
orb
sub
add
cwtl
or
sub
add
mov
add
enter
in
sldt
loopne
add
clc
or
sub
add
adc
add
sub
add
inc
or
xor
add
pop
or
xor
add
jo
add
mov
add
mov
sldt
mov
sldt
rorb
add
call
sldt
add
add
sbb
add
xor
add
dec
or
cmp
add
pusha
or
cmp
add
js
add
nop
or
addb
add
test
add
ret
test
cmp
add
add
push
add
pushf
push
add
mov
add
ret
orb
add
and
addb
cmpb
add
push
or
addb
subb
sbbb
addb
add
xchg
pop
add
test
add
int3
pop
add
add
add
ret
test
cmp
add
add
add
add
jg
add
or
cmp
add
adc
add
sub
add
inc
or
add
pop
or
add
jo
add
mov
add
ret
test
cmp
add
add
add
add
pop
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
rorb
add
ret
test
cmp
add
add
add
add
add
loopne
add
add
add
ret
test
cmp
add
add
add
add
add
lock
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
adc
add
add
add
ret
test
cmp
add
add
add
add
add
and
add
add
add
ret
test
cmp
add
add
add
add
add
add
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
push
add
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
sldt
add
add
ret
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
mov
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
rclb
add
add
add
test
cmp
add
add
add
add
add
rclb
add
add
add
ret
test
cmp
add
add
add
add
add
loopne
add
add
add
ret
test
cmp
add
add
add
add
add
lock
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
adc
add
add
add
ret
test
cmp
add
add
add
add
add
and
add
add
add
ret
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
add
ret
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
adc
add
add
add
test
cmp
add
add
add
add
add
add
add
add
add
test
cmp
add
add
add
add
add
adc
add
fcoms
add
add
add
es
call
add
add
add
call
add
add
shrl
add
add
cmp
add
cmp
add
addb
cmp
sub
xor
add
insb
aam
add
add
mov
add
add
sub
xor
add
or
sub
xor
add
cmp
sub
xor
add
jo
sub
xor
add
movsb
fldt
add
add
add
add
add
add
sub
rolb
add
sub
sub
rolb
add
clc
loop
add
add
add
in
add
add
add
add
add
sub
rolb
add
cmp
sub
rolb
add
or
sub
rolb
add
fsubr
sub
rolb
add
add
add
sub
loopne
add
pop
lock
loopne
add
cmp
sub
rolb
add
icebp
sub
rolb
add
add
add
add
add
imulb
add
add
add
add
add
sub
call
add
add
add
add
sub
sub
add
jo
sub
rolb
add
std
sub
sub
add
pop
add
add
add
pop
pop
sub
dec
adc
add
adc
add
add
add
nop
inc
sub
adc
add
mov
sbb
add
add
add
jae
add
add
add
ja
add
add
add
ss
add
add
jp
add
add
sbb
sub
sub
add
dec
jnp
add
add
add
add
add
jnp
add
add
add
add
je
sub
add
add
je
sub
push
add
add
add
dec
jg
add
add
nop
jg
add
add
add
add
add
add
sbb
add
aam
sub
rolb
add
movsb
nop
sub
add
add
xchg
sub
pop
add
add
add
add
fs
sub
and
add
test
add
mov
add
xchg
sahf
sub
dec
add
add
mov
add
lods
mov
add
cwtl
movsb
sub
xor
add
int3
movsl
sub
pusha
add
add
sub
hlt
add
add
lods
sub
nop
add
add
add
add
sub
int3
add
add
mov
add
cld
mov
add
sarb
add
add
add
add
add
add
add
sub
adc
add
fadd
sub
mov
add
add
add
add
xor
add
or
add
adc
add
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
xor
dec
push
add
adcb
add
fwait
xor
repnz
add
mov
add
in
xor
dec
add
add
jmp
add
inc
jmp
add
pop
jmp
add
insb
jmp
add
sub
add
add
xchg
jmp
add
test
xor
adc
add
sbb
add
add
nop
aas
add
add
add
add
add
add
dec
add
inc
add
push
add
add
inc
add
push
add
add
pop
add
inc
add
dec
add
pop
add
inc
add
add
dec
add
add
dec
add
dec
add
add
dec
add
dec
add
or
inc
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
push
add
inc
add
add
push
add
add
add
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
dec
add
or
inc
add
add
inc
add
add
dec
add
add
or
add
push
add
dec
add
add
dec
add
add
or
inc
add
inc
add
push
add
add
dec
add
push
add
dec
add
push
add
pop
add
dec
add
push
add
add
dec
add
push
add
inc
add
dec
add
push
add
inc
add
add
inc
add
add
inc
add
add
push
add
or
dec
add
inc
add
inc
add
dec
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
push
add
add
push
add
dec
add
add
inc
add
push
add
push
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
push
add
add
add
pop
add
dec
add
dec
add
push
add
or
push
add
dec
add
dec
add
dec
add
dec
add
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
lldt
add
dec
add
dec
add
push
add
push
add
push
add
push
add
add
add
dec
add
inc
add
push
add
inc
add
inc
add
add
push
add
add
add
dec
add
dec
add
inc
add
dec
add
inc
add
push
add
add
add
dec
add
inc
add
add
push
add
push
add
push
add
add
add
dec
add
push
add
inc
add
add
dec
add
add
add
dec
add
inc
add
dec
add
add
add
push
add
inc
add
inc
add
add
inc
add
push
add
or
push
add
inc
add
dec
add
inc
add
push
add
adc
push
add
inc
add
dec
add
push
add
add
dec
add
inc
add
dec
add
dec
add
add
add
dec
add
push
add
inc
add
dec
add
dec
add
add
or
dec
add
dec
add
dec
add
dec
add
add
sbb
mov
adc
pop
mov
lret
sbb
mov
arpl
fistpl
xor
mov
clc
pop
xor
xor
ret
push
or
pop
sbb
or
or
or
scas
lcall
dec
sbb
cmc
sub
in
dec
jno
fmull
mov
aad
testb
aam
jbe
push
dec
xor
pop
sahf
jmp
out
adc
push
iret
push
neg
out
mov
mov
je
or
call
repz
add
les
repz
jne
jle
adc
int3
mov
inc
or
mov
xlat
out
mov
xorl
jne
insb
jne
jo
jo
in
adc
aam
ljmp
cmp
and
inc
aas
pop
lret
mov
dec
add
adc
or
add
out
mov
push
js
jo
std
push
jno
mull
icebp
pop
repz
incl
ds
cmp
pop
decb
push
cmc
and
xor
and
out
and
dec
imul
mov
std
aas
push
inc
std
xchg
outsl
sub
mov
pushl
inc
in
xlat
jg
mov
cld
jb
dec
push
ror
adc
lret
ljmp
ljmp
pusha
adc
pushf
xchg
hlt
icebp
pop
std
jae
ja
xchg
pusha
iret
pop
mov
jg
mov
loop
sbb
inc
aas
outsl
sar
pop
dec
icebp
mov
hlt
mov
inc
div
mov
and
incb
inc
lcall
pusha
aas
inc
incl
dec
test
lods
push
push
pop
cmpsl
not
jno
pop
or
lea
pop
jecxz
jmp
push
aas
out
lods
lea
pop
orb
pop
inc
push
dec
repnz
jmp
pop
outsl
stos
lcall
xchg
fisttpll
push
imul
push
push
lods
ljmp
inc
arpl
cmp
outsb
int3
jae
xchg
clc
or
scas
cld
idivb
mov
iret
cmp
pushf
lahf
lahf
sbb
mov
lods
lods
inc
std
ja
scas
loop
mul
pop
stos
movsl
les
push
loop
sbb
push
aaa
add
xor
push
jno
std
jb
sub
aam
add
pop
addr16
adc
dec
pop
jge
pop
push
outsb
dec
scas
adcl
mov
out
inc
cmp
pop
mov
jmp
call
mov
insb
inc
movsl
test
arpl
movsl
cmpsl
push
dec
mov
test
sarl
add
cmp
cli
mov
pop
dec
xchg
dec
aaa
mov
inc
test
mov
inc
outsb
mov
adc
movsb
cltd
leave
push
xchg
in
mov
out
sub
push
mov
dec
jo
daa
mov
sti
rorb
sub
pop
ds
das
push
dec
or
lahf
sbb
jae
cld
data16
dec
repnz
cmp
int
pop
mov
scas
inc
or
adc
lcall
jecxz
sub
and
into
mov
mov
int
fmull
cmp
test
loope
and
movsbl
sbb
mov
ficoml
and
aad
xchg
mov
jb
icebp
inc
mov
pop
in
cmpsw
sarb
push
mov
idivl
inc
int3
fidivrl
nop
pop
sbb
repnz
mov
xchg
xchg
pop
es
mov
mov
insb
in
mov
adc
dec
adc
shlb
movsb
and
iret
sub
jae
fcmovnbe
push
sub
inc
out
sub
push
inc
stos
shrl
mov
push
hlt
repz
mov
add
fistpll
subb
into
jo
jno
out
jge
lods
add
cmp
bound
ja
bound
movsl
ficompl
adc
or
addr16
or
fistl
inc
inc
mov
xor
sub
cmp
adc
out
sahf
cli
movb
push
fmull
mov
cmc
mov
xchg
insl
pop
imul
in
ja
push
cmpl
sub
lahf
cld
es
inc
push
pop
dec
std
mov
pop
js
fldt
add
shll
in
outsb
jl
jne
ss
adc
push
xor
xchg
push
add
ds
mov
xor
xchg
push
insl
fisubrl
push
imul
or
pop
popa
jne
mov
out
js
mov
xchg
jns
sbbb
mov
testb
shlb
jg
mov
ds
dec
cmpsl
fisttps
repnz
and
test
dec
stos
and
jo
ja
aam
pop
andl
test
int3
mov
lret
jnp
cli
fdivrs
loop
icebp
push
cld
outsb
cmp
cld
shl
xor
roll
cli
push
inc
dec
in
stos
in
xchg
mov
dec
pusha
pop
sbb
xchg
aas
pop
pusha
cmp
push
sub
andb
out
pop
xchg
std
das
cltd
sarb
dec
int
push
popa
and
jge
sub
jae
lds
push
xchg
out
inc
adcl
inc
mov
call
jmp
mov
imul
cmp
push
mov
or
faddl
sbb
cmp
dec
sub
movsl
mov
xchg
lods
jl
jb
je
ljmp
fidivrl
pop
in
cmc
mov
rorl
mov
pop
cmp
sbb
pop
pop
sbb
cmp
push
jg
lcall
jg
stos
xchg
pop
test
dec
ret
xor
add
out
dec
imul
iret
inc
jmp
push
mov
ret
lds
cmp
mov
aad
jns
adc
inc
adc
or
mov
dec
stos
xor
or
fdivs
lahf
test
add
jo
das
std
js
sub
xchg
pop
lea
jle
decb
sub
push
jp
xor
add
sarb
add
cmp
push
push
jp
test
mov
ss
xor
xor
adc
nop
inc
stos
pop
mov
inc
push
ds
sub
idiv
mov
imul
ficoml
movsb
int
push
jl
jno
sub
inc
lea
or
scas
mov
sub
mov
mov
or
xchg
push
popl
test
sbb
sarb
adc
scas
dec
sub
aaa
pop
enter
add
aaa
in
sub
push
or
pop
repz
mov
loope
sbbb
mov
push
jmp
or
cwtl
enter
or
sti
jne
or
jle
mov
adc
xchg
sub
dec
or
sbbb
jno
mov
rcrl
jecxz
fdivrs
loope
in
mov
pop
in
pop
outsb
dec
fcoml
pop
or
lahf
aam
fs
pushf
or
movsl
xor
add
mov
shlb
jp
xor
lods
and
cltd
fsubrl
test
out
loopne
jmp
stos
jno
cmp
bound
push
lahf
xchg
inc
imul
mov
xchg
lahf
push
neg
test
fistpll
add
imul
lret
repnz
and
mov
xchg
scas
daa
cmpsb
imul
mov
je
pop
xor
xor
xchg
cmp
inc
setnp
xchg
xchg
test
inc
adc
jp
mov
les
lret
dec
stos
add
push
dec
mov
mov
rorl
movsl
xchg
xchg
ss
adc
popf
mov
mov
shll
pusha
mov
test
mov
pop
push
sahf
nop
cmpsb
inc
cmp
mov
test
push
push
aad
or
push
shll
jns
sbb
pop
ret
in
imul
out
add
add
pop
push
sub
or
xor
pushf
mov
fsubs
dec
popf
sbbb
mov
mov
lods
and
jns
push
sbb
adc
push
dec
and
jmp
lea
lock
stos
mov
enter
stos
test
xchg
sbb
mov
scas
les
popa
pushw
mov
jmp
inc
sbb
sbb
shrb
ret
mov
jge
pop
xor
nop
jle
jle
sti
shll
push
pop
in
fildl
sbb
mov
fidivl
ret
in
add
subb
fldl
jmp
ljmp
xor
fstps
push
xlat
jne
mov
dec
inc
aas
adc
ror
push
enter
lea
mov
adcb
inc
insl
ja
imul
or
ret
scas
dec
jo
jno
add
lahf
cmp
stos
push
add
call
out
xchg
xchg
popf
xlat
out
scas
adc
or
add
sbb
xor
insl
sbb
and
push
ret
js
pop
lock
lahf
push
xor
jno
cmc
ljmp
cld
leave
pop
cmpsl
lcall
into
or
xchg
jmp
in
out
push
or
or
mov
sub
mov
and
insl
lock
dec
inc
mov
cmp
inc
je
out
mov
dec
push
xor
cmp
jbe
xor
mov
push
mov
sahf
mov
pop
stc
testb
or
mov
fnstcw
dec
add
cmp
pop
cs
out
push
addr16
push
xchg
and
popa
gs
rclb
out
mov
ret
mov
int3
sub
lods
setbe
and
cmpsl
xor
sbb
aaa
or
loope
pushf
popa
in
je
mov
sahf
aad
test
xchg
lods
pop
xor
fistl
jae
lds
stos
fsubrp
cmp
cmpsl
adcb
bound
movsb
outsl
fiaddl
cmp
mov
sahf
dec
test
push
fwait
jnp
je
lock
iret
and
and
mov
xlat
adc
out
call
jbe
das
stos
call
lods
or
mov
pop
pop
cmp
fsub
dec
adc
xor
xchg
test
test
mov
nop
xor
je
lea
add
cmp
nop
and
mov
cmp
adc
push
xchg
rcrl
xchg
iret
jbe
sbb
aam
divb
push
push
stos
jnp
mov
push
in
push
and
mov
iret
jnp
push
adc
fs
pop
mov
lock
fadds
addr16
xor
stos
jno
loope
dec
mov
imul
and
sub
addb
shl
popf
sub
das
stos
test
ret
fidivl
push
cmp
incl
call
xchg
loopne
aas
lret
and
leave
lds
sar
xor
divb
xchg
in
fstpl
xor
clc
cmp
fsubrp
aaa
sahf
fadds
jnp
stc
imul
xchg
inc
ja
ret
jns
jecxz
adc
in
fwait
dec
inc
mov
mov
iret
xchg
outsb
fcomps
addr16
aaa
or
xor
and
sbb
inc
mov
outsl
mov
jae
xchg
sub
out
dec
mov
mov
lods
rcll
or
mov
ret
cmp
lock
outsl
cwtl
and
sub
adc
es
or
sbb
aas
pop
fxch
aam
mov
es
fdivrs
sahf
imul
notl
popa
xchg
shrl
out
xor
add
jp
call
adc
add
aaa
pop
push
xor
adc
and
add
dec
xchg
mov
inc
sub
push
mov
int
and
fcmove
mov
outsb
and
aaa
or
xlat
imul
divb
push
sub
shrb
or
daa
jmp
neg
ss
sub
mov
int3
hlt
pusha
jge
sbb
mov
push
adc
imul
lock
push
shr
sti
or
das
inc
movq
mov
es
jge
cmp
adc
push
dec
add
sbb
clc
test
xchg
xor
fimuls
pop
jecxz
add
call
lret
das
pushf
addr16
cs
repnz
dec
sub
jl
addr16
sarl
mov
add
or
mov
in
cmp
push
outsl
pop
sub
out
sarb
jb
mov
mov
mov
inc
scas
imul
ss
jecxz
xchg
and
cmpsb
inc
cmpsb
or
mov
dec
cmpb
fldl
jb
flds
lods
fbstp
insb
lods
rep
jbe
adc
sbb
xchg
dec
call
mov
movsl
loop
lcall
pop
dec
dec
frstor
inc
jge
mov
lods
lds
shll
in
cld
mov
loop
cmp
sbb
cltd
inc
sarl
sub
pop
mov
inc
test
movsb
shrb
orb
or
cmp
fisttps
pop
int
cmpsb
int3
pop
hlt
xlat
or
mov
imul
pop
mov
xor
push
dec
push
sti
mov
out
fchs
xor
loope
jo
in
jl
mov
jmp
cmpsl
clc
js
cmp
into
sub
adc
add
lds
inc
lods
jb
adc
dec
push
subl
push
aad
sbb
std
push
dec
movsl
ret
pop
addb
in
lcall
jl
test
fcompl
push
jl
std
stos
xor
jb
lock
mov
xchg
or
call
idivl
jge
shlb
xorb
imul
cmp
int3
jae
dec
hlt
jne
dec
arpl
jnp
mov
adc
mov
dec
jl
cmpsl
icebp
pusha
imul
mov
cltd
sub
clc
sub
mov
lea
push
xlat
cwtl
aaa
or
jp
sub
jg
inc
pop
mov
jge
push
js
or
loope
outsl
aas
stos
jns
mov
xlat
mov
popw
adc
cltd
lcall
cltd
cwtd
xor
jnp
mov
outsb
icebp
pop
dec
test
add
dec
xor
and
xchg
cmpb
stc
xor
or
cmpsb
sbb
dec
lods
fcmovnbe
push
mov
shll
push
push
fistpll
int
and
mov
and
fisubs
inc
clc
pop
mov
ss
mov
imul
jb
push
movsb
in
xchg
mov
shl
enter
loopne
outsl
bound
pop
sub
mov
jmp
xor
rol
cmpsl
lahf
shl
sbb
int3
out
push
inc
sub
cmp
cmpsl
sbbb
jnp
fidivrs
pop
repz
ret
pop
pop
fst
stos
std
inc
rcll
sahf
dec
sub
adc
lret
enter
pop
imul
sbb
sbb
push
lret
mov
cltd
xor
loop
lea
mov
sbb
xchg
mov
sbb
js
or
mov
xor
dec
push
das
inc
sbb
js
jge
inc
ffreep
jmp
xor
cmp
mov
xchg
fidivrl
xchg
lahf
dec
jne
xor
or
lea
jg
sub
loopne
sub
xlat
mov
pop
lcall
pop
daa
fsubrp
pop
or
dec
rcr
xchg
inc
adc
popa
pop
andl
push
push
clc
in
xor
dec
jl
sbb
jl
jecxz
pop
mov
ljmp
movsl
cld
mov
push
and
dec
mov
mov
js
jbe
repz
mov
inc
pop
aad
scas
iret
dec
in
pop
pop
fdivrs
in
es
jae
and
and
and
cmpsl
sub
jbe
dec
and
mov
arpl
leave
out
push
mov
pop
jns
mov
jl
dec
mov
jnp
jno
xchg
mov
mov
pusha
lret
and
inc
adc
mov
rcrb
cmc
dec
push
insl
loope
cmp
mov
adc
pop
arpl
testl
push
cmpsl
sbb
arpl
push
insl
push
mov
and
xchg
fisubs
je
stos
popa
fcomps
sbb
fsubrs
xchg
popf
test
sub
nop
jle
cmpsl
jo
jbe
out
add
jbe
push
addr16
pop
stc
xchg
imul
adc
dec
fucom
xor
call
sub
lcall
mov
fs
push
imul
and
push
ret
scas
mov
fstl
mov
jnp
fidivrs
sbb
mov
mov
xchg
nop
mov
mov
mov
sub
popf
dec
mov
cmp
xor
jecxz
fldl2t
pop
popa
popa
and
jecxz
jbe
cmp
mov
lea
int3
and
pusha
jne
ss
clc
push
cmpsl
pop
lock
test
xchg
push
test
lahf
sub
test
pop
jb
in
iret
add
loope
insl
mov
push
push
inc
cltd
sub
jae
shrl
cmp
adc
leave
mov
out
push
lock
sub
xchg
in
fldl
in
xor
fidivs
fs
pusha
das
pop
cmpsb
push
lods
enter
sbb
pop
imul
xor
iret
lahf
popa
jge
pop
xchg
fnstsw
mov
imul
pop
jl
push
mov
outsl
jecxz
outsl
lods
pushf
sbb
jnp
lods
jno
cmc
enter
mov
inc
mov
mov
jbe
scas
stc
ja
jp
sbb
popf
mov
adc
popa
popl
jle
mov
xchg
inc
stc
sub
jp
mov
imul
imul
adcb
lea
ljmp
jecxz,pn
xchg
jg
push
leave
jl
jae
aad
js
jb
jp
leave
cmp
cmp
push
mov
push
xor
pusha
mov
inc
dec
rcl
jp
sub
xchg
sub
jnp
jmp
test
push
mov
jmp
pop
out
sti
jb
arpl
push
sub
sub
sbb
in
xchg
or
xchg
bnd
rcrb
roll
int3
pop
loop
push
jae
push
dec
insb
mov
scas
fs
fsts
xor
ds
sub
insl
loopne
mov
sbb
lods
lret
dec
arpl
call
push
andl
sbb
outsb
xor
leave
stos
pop
test
cmp
cmp
push
inc
lret
fwait
scas
je
aam
movsb
rol
adc
loopne
mulb
clc
es
fistl
sbb
sub
outsb
push
pop
lcall
mov
jecxz
mov
pop
jb
and
cld
cmp
cmp
add
sbb
fimuls
arpl
jae
inc
in
pushl
push
and
sbb
pop
sbb
repnz
adc
xchg
lret
andb
out
insl
sahf
pusha
in
push
sbb
sahf
cmp
adc
out
popl
rolb
mov
mov
iret
fdivrs
js
sub
inc
mov
popa
out
out
insb
sbb
mov
xchg
gs
push
fcmovbe
sbb
fwait
mov
cmc
popa
popf
aam
push
repnz
adc
std
jns
jb
aas
into
in
cmpsb
and
lcall
dec
repnz
lahf
je
addr16
ret
aas
inc
dec
fwait
jge
pop
lret
daa
rolb
cltd
push
scas
jne
sbb
pop
loop
cmp
cmp
push
mov
fsincos
stos
push
cmc
cmc
fwait
in
inc
sbb
into
imul
js
xchg
enter
jmp
ss
sub
or
cs
outsb
imul
fidivrs
xchg
sbb
dec
lcall
sub
lcall
lock
adc
pushf
adc
or
mov
mov
mov
mov
inc
addb
inc
push
cmp
call
rcrl
cwtl
mov
das
movsl
xor
inc
mov
fcomps
mov
repz
xor
xor
aad
test
js
lods
scas
push
or
loopne
fwait
out
shrl
push
mov
fs
mov
in
cmp
push
movsb
push
fimuls
push
mov
cltd
std
sub
xor
mov
sbb
dec
push
pop
mov
sub
les
dec
and
or
sbb
clc
xchg
subl
adc
arpl
enter
dec
cmp
xlat
out
or
push
mov
cwtl
idivb
cmp
inc
ja
ss
lods
cmp
nop
jne
bound
pusha
pop
movsl
mov
inc
adc
jp
or
dec
out
shl
fwait
jnp
or
xchg
loopne
addl
and
test
cmpb
xchg
in
dec
pop
mov
add
xchg
movsb
arpl
push
jae
push
push
xchg
mov
sbb
lods
cwtl
adc
aam
xchg
jns
pop
push
add
sub
enter
seto
clc
push
dec
and
test
icebp
repz
cmpsb
push
dec
pop
test
ficomps
jno
daa
sub
es
xor
ja
pop
add
shlb
nop
addr16
push
hlt
pop
or
mov
mov
iret
pop
imul
and
negb
cvtpi2ps
pop
bound
mov
mov
push
xchg
pop
test
sbb
push
jp
cmp
clc
ja
push
sbb
bound
mov
adc
loop
cmp
js
cmpsb
pop
cmp
pop
dec
xchg
sarb
jnp
xor
push
or
xlat
lock
je
dec
mov
lods
gs
out
outsb
pop
jle,pt
cltd
jmp
xchg
sbb
add
js
push
mov
sub
fs
sub
stos
or
pop
mov
sbb
sarb
shlb
in
inc
mov
ficoml
imul
in
jp
sub
roll
jne
jb
sar
jnp
xor
mov
cmp
adc
stc
cli
scas
pop
rorb
cs
inc
push
outsl
rorb
pusha
xchg
daa
popf
mov
arpl
sbb
ret
leave
add
mov
cs
push
test
or
fucomi
sbb
xor
cmc
xchg
push
insl
add
inc
jp
xchg
jnp
negl
fimuls
fmuls
aas
jle
loop
or
pop
jl
mov
adc
cwtl
in
outsl
add
sbb
add
mov
sbb
mov
out
cmpsl
jns
int
cmp
ficomps
inc
mov
sbb
loopne
scas
jmp
xchg
inc
clc
xor
gs
sub
scas
hlt
xchg
movsb
fstps
sbb
cmpsb
inc
sub
fimuls
mov
mov
mov
sbb
push
xor
dec
andb
sbb
xor
repz
call
jo
sbb
dec
cmpsl
pop
sahf
push
lods
push
lock
ja
pop
roll
dec
adc
scas
pusha
xor
nop
xlat
sub
cmc
mov
ja
push
push
sbb
fsqrt
scas
jmp
data16
xor
int3
mov
jl
int3
mov
and
arpl
xchg
mov
cs
mov
cmp
dec
and
retw
mull
dec
arpl
push
sbb
lcall
jae
mul
mov
iret
cli
xchg
fisubrs
mov
xchg
outsl
stos
loope
xor
fmul
or
fadd
lahf
punpckldq
shrl
adc
add
imul
xchg
and
movsl
sub
test
inc
adc
pop
cli
jp
in
push
jle
mov
cmp
stos
stc
outsl
jae
mov
stc
aaa
rorl
imulb
push
and
jae
cli
cmp
sti
scas
mov
outsb
cmpb
xchg
shll
dec
stos
lods
arpl
ret
fisubrl
cmp
lods
das
and
or
stc
jmp
es
jecxz
int3
ja
sbb
gs
and
cmp
scas
sub
icebp
test
xchg
jecxz
jo
push
sbb
or
adc
push
mov
js
pop
stc
add
imul
das
mov
push
and
pop
test
insb
pop
or
pop
xor
in
dec
in
test
daa
mov
pop
xor
fs
cltd
out
pop
ficoml
or
inc
fbld
pop
cld
pop
test
cmp
scas
lds
push
rcll
adc
js
das
out
add
jo
scas
jmp
leave
out
push
jp
out
mov
push
bound
pop
jl
into
mov
lea
jno
imul
push
fcmove
xor
push
fucomi
push
and
mov
jb
jl
dec
test
insl
call
fs
pop
push
test
test
outsb
je
mov
cmp
in
lds
and
int
imul
mov
sbb
in
lock
shll
sti
lahf
insl
das
dec
fwait
inc
jecxz
jmp
mov
lods
lock
or
ss
cld
mov
gs
inc
add
sbb
movsb
add
test
sub
data16
push
xor
inc
push
clc
xor
mov
mov
add
popa
and
mov
jnp
in
add
inc
mov
sub
repnz
pop
imul
inc
jecxz
push
cmp
inc
popa
mov
add
test
out
adc
xchg
or
and
lods
loope
mov
dec
or
jmp
cmpsl
es
xor
jmp
mov
aam
push
pop
stos
mov
add
mov
jb
xchg
fisttpll
cmpl
out
enter
out
ja
jns
aad
movsb
rclb
enter
ljmp
pop
imul
scas
xchg
jl
mov
jbe
repnz
dec
aas
or
pop
arpl
xor
std
test
push
lcall
mov
mov
leave
mov
fs
or
loope
repnz
int
push
jae
xchg
jbe
pop
xlat
mov
dec
stc
shlb
lods
cmp
mov
sub
sbb
pop
sub
push
adc
sub
sti
cmp
in
adc
pop
ret
gs
icebp
shl
or
inc
xchg
inc
repz
and
jae
popa
out
adc
xchg
out
push
aam
and
xor
leave
jl
push
cs
test
imul
mov
push
xor
js
sarb
jne
cmpsl
mov
pop
std
dec
rcrl
dec
jle
js
xor
out
lret
cli
and
mov
dec
sub
scas
xchg
pusha
cwtl
lock
je
int
push
push
and
and
testb
arpl
lret
ss
cmc
fldt
pushf
sub
test
mov
sub
fsubrs
add
mov
negl
stc
in
pop
outsb
push
jmp
fs
adc
stos
mov
or
sbb
push
dec
mov
or
icebp
fsubrs
xor
sbb
add
rorl
adc
dec
sub
jne
fadd
mov
andl
les
mov
cwtl
jmp
test
jbe
mov
cmp
aaa
rorl
int
cmp
mov
scas
stos
xchg
mov
cmp
dec
call
je
aad
xchg
lds
or
and
cmp
test
cwtl
testl
repnz
push
jae
insl
clc
mov
cmp
mov
mov
push
sub
inc
or
sbb
mov
hlt
lret
pcmpeqw
cmp
mov
adc
mov
icebp
add
cs
dec
daa
jne
jne
mov
xor
cmp
test
std
pop
dec
out
cmp
sti
outsb
push
cli
insl
inc
iret
xchg
cld
lods
lods
sub
sub
push
lds
iret
ret
jg
test
ljmp
repz
lods
cld
cli
cmpsl
mov
lret
int3
mov
outsb
insl
or
pop
das
xor
aam
movl
dec
repz
jmp
jbe
shlb
pop
mov
insl
or
pushf
sbb
ret
movsb
lcall
cmp
nop
iret
fs
sbb
dec
arpl
cmp
js
pop
pop
cltd
push
fistpll
cmp
adc
adc
xor
rcll
xor
imul
mov
cmp
inc
sbb
inc
xchg
pop
lea
mov
in
and
mov
dec
in
repnz
or
inc
and
out
cmpsb
xor
enter
xchg
lods
or
mov
and
xchg
sub
addl
gs
bsr
xor
das
mov
inc
xor
imul
pop
out
stos
mov
pop
fdiv
scas
jae
push
inc
sub
leave
jne
cmp
js
test
xchg
jge
arpl
test
push
mov
jb
test
lods
xor
aad
pop
push
mov
mov
dec
addps
inc
ss
cmp
adc
cmc
push
xchg
daa
cld
ret
dec
xchg
mov
sbb
inc
adc
sti
inc
mov
inc
jmp
push
add
add
lods
fs
and
cmpl
adcb
enter
pop
ja
push
fstp
rorb
add
fistl
inc
ja
mov
and
int3
xchg
mov
ds
cld
pop
mov
inc
jge
iret
test
mov
insl
xchg
es
xlat
ret
mov
imul
xchg
icebp
faddl
ja
lods
daa
js
rcrl
shrb
aaa
cli
sub
xchg
aas
rol
xorl
mov
je
les
popf
in
or
push
xor
dec
daa
and
dec
lods
xor
jo
scas
in
popf
pop
jbe
push
mov
push
mov
mov
push
mov
fwait
sbb
jb
xchg
fcmovu
cmp
push
sahf
adc
fnstcw
hlt
and
loopne
dec
or
sti
in
push
cmpl
sub
mov
insb
push
lods
ljmp
ljmp
or
out
cmp
mov
jmp
lods
xchg
test
pop
xor
dec
jmp
mov
imul
pop
xchg
lret
cmp
mov
push
arpl
xchg
xchg
fwait
cli
push
leave
add
fstpl
loop
jb
push
or
cmp
into
pop
mov
sbb
je
xchg
jbe
mov
movsb
test
cmp
jmp
pop
jo
lds
out
mov
mov
push
xor
pop
mov
pop
jb
mov
fsts
aaa
hlt
movsl
sbb
cli
cmp
jnp
movsb
ja
xor
cmp
inc
push
ja
xor
dec
fiadds
imul
push
adc
jmp
iret
jbe
mov
daa
fnstcw
cmp
out
insb
dec
mov
mov
push
js
inc
cmpsl
scas
cld
adc
sti
aam
sub
sub
popa
adc
loopne
repz
popf
fistpl
mov
or
ret
testb
cmp
cld
icebp
ss
mov
jne
pop
and
jmp
xor
push
dec
jbe
jl
leave
and
call
xor
aad
add
cmp
sub
scas
hlt
pushf
lea
pop
mov
adc
xchg
mov
mov
xor
jns
sbb
loope
cmpsl
ret
mov
xchg
mov
rorb
lds
xor
fwait
or
nop
cmp
jge
push
std
popf
push
cmp
gs
xchg
sbb
sub
enter
cwtl
add
stc
enter
cmpsb
aad
pop
mov
lahf
xchg
lods
push
and
add
pusha
inc
mov
sub
testb
mov
mov
out
ds
aas
nop
pop
mov
lcall
loopne
xchg
push
cmp
aad
jl
mov
push
mov
in
adc
into
jmp
pop
sti
xor
addr16
mov
cmp
push
dec
add
stos
cmp
jge
jle
mov
and
sbb
push
out
mov
lock
addr16
cli
push
jne
imul
pop
inc
ljmp
jbe
and
leave
out
jno
sbb
popa
bound
push
adc
mov
out
aad
sub
push
mov
jno
out
imul
cmp
push
movsb
stos
data16
je
cmc
jmp
dec
lea
xchg
addr16
dec
test
add
scas
int
or
inc
fdivrl
sub
cmc
int3
or
enter
inc
mov
cmp
cmp
outsb
sub
xchg
fisubl
aam
clc
mov
xlat
xchg
or
cmp
sub
ljmp
sahf
jne
jecxz
and
int3
push
hlt
and
add
out
xchg
insl
mov
hlt
pushf
sub
shl
in
adc
jno
xchg
cli
lret
sahf
addr16
sub
adc
or
bound
xlat
mov
jbe
add
and
sbb
sub
mov
pushl
or
cwtl
int
pop
pop
dec
movsb
sarl
sub
mov
push
xor
hlt
inc
out
mov
adc
and
ficoml
sbb
cmpsb
subl
jb
mov
sbb
or
push
das
push
icebp
cld
push
imul
jmp
sbb
pop
sub
push
pop
sub
adc
push
rolb
mov
sti
add
repnz
lock
mov
push
outsl
inc
adc
mov
or
push
dec
frstor
lea
inc
das
cmpsl
lea
lahf
cltd
int
and
sti
jnp
mov
aam
repnz
imul
cmp
aas
sbb
sbb
into
lea
inc
and
cmp
leave
xchg
mov
aad
push
cmp
out
aas
pop
dec
lcall
add
jmp
mov
sbb
push
jl
mov
mov
lods
sub
add
fnstenv
adc
jbe
or
aam
jns
jp
out
mov
inc
push
cmp
hlt
out
mov
inc
out
mov
out
jmp
outsl
rcrl
clc
sbb
xchg
ret
adc
cmc
ret
jne
lcall
dec
pop
cmp
inc
push
push
add
jo
cmp
mov
cmc
mov
mov
testb
mov
pop
xchg
push
lcall
lea
xchg
pushf
loopne
cmp
mov
ret
cmp
or
mov
stc
push
or
sub
or
fidivrl
pop
pop
sub
in
into
clc
test
inc
aaa
lret
dec
adc
outsb
adc
jmp
adc
sub
or
sub
push
jb
and
lcall
stos
enter
or
sub
inc
data16
out
push
and
cs
jae
xchg
sar
mov
mov
dec
mov
inc
int
or
enter
js
cmpsl
cwtl
add
cs
jne
inc
push
pop
mov
out
sar
fiaddl
jl
fildl
sbb
sti
jecxz
jo
adc
push
je
lods
jmp
dec
sti
aam
push
addr16
pop
fimuls
aam
out
ja
addl
leave
sbb
xchg
and
ja
xchg
dec
cmp
outsl
mov
sbb
xchg
shl
and
jns
cmp
outsb
rorb
mov
sub
rol
sbbb
ficompl
cmp
sub
sub
lea
popf
mov
enter
int3
pop
or
adc
mov
push
xor
pop
inc
lret
shll
sub
cmp
mov
mov
popf
ret
push
cli
out
sbb
jp
fsubs
mov
xor
pop
out
arpl
rol
arpl
adc
pop
lea
mov
mul
xor
lods
dec
or
inc
roll
in
jno
fcomps
dec
call
and
mov
in
inc
ret
and
xchg
add
fwait
mov
ds
cmp
mov
jp
xor
ss
imul
push
call
dec
aas
mov
jp
test
push
add
test
cs
adc
push
data16
sub
mov
pop
std
imul
mov
jnp
jbe
add
sub
aam
push
add
cmp
imul
out
jns
mov
cmp
lcall
cmp
lods
loope
pop
addr16
jge
movsl
dec
sub
ret
imul
out
pop
xor
ret
pop
lret
pop
scas
out
test
ret
dec
xlat
add
loop
cmp
pop
cmp
cmp
or
inc
shrl
dec
sti
loopne
mov
mov
movsb
into
mov
out
mov
inc
mov
fcompl
icebp
rcrl
pop
jae
xchg
mov
adc
mov
adc
mov
std
xchg
sbb
test
push
adcl
jmp
dec
dec
jnp
dec
and
ret
pop
mov
test
out
lret
insb
aam
test
insb
jl
and
sub
ffree
cmp
cltd
pusha
outsb
cs
fdivs
xorl
mov
cld
pop
sub
sbbb
cwtl
lods
dec
rcrb
lock
ljmp
mov
jo
adc
dec
sahf
sbb
mov
icebp
rol
push
push
ds
sub
movsb
call
ret
in
xchg
enter
add
sbb
shll
xchg
out
mov
ret
mov
roll
cmpsl
repnz
lods
js
mov
fsubrl
adc
sub
out
cld
nop
shrl
mov
dec
test
sbb
cmpsl
and
mov
mov
enter
xor
fisubrs
cmp
jl
cmp
mov
push
push
pop
jno
inc
out
call
push
mov
sub
inc
insb
rolb
cmpsb
push
pop
pop
sub
pushf
mov
mov
aas
rolb
rcrb
mov
stos
je
mov
mov
movsb
sbb
mov
imul
lahf
adc
push
pop
scas
mov
lahf
test
xlat
xor
sarb
mov
cmp
cmp
les
or
xor
sub
adc
ds
and
cmp
into
jns
push
cwtl
notb
ds
cmp
aam
nop
cs
arpl
movsb
adc
xor
ficoms
mov
in
mov
cwtl
repnz
scas
push
xchg
cltd
cmp
repnz
xchg
je
loop
jl
ds
rorl
nop
lret
pop
cmpsl
ja
mov
mov
or
into
mov
jno
and
sub
loopne
xchg
test
push
jp
cmpsb
pop
jae
test
call
mov
aad
ss
jmp
xchg
lahf
cmpsl
or
lret
mov
ds
movsl
push
in
repnz
xor
push
mov
int
enter
or
outsb
and
fildl
clc
cmp
add
xor
adc
push
jmp
scas
lcall
mov
rorl
arpl
xlat
insb
in
add
outsb
pop
insl
rcr
and
add
hlt
popf
sub
aam
ret
enter
or
sbb
mov
mov
mov
add
cs
cs
ja
lds
xchg
cwtl
mulb
mov
sbb
pop
mov
fcompl
xor
movsl
mov
lds
mov
xchg
out
fs
dec
ds
or
adc
cli
jmp
movsl
aaa
inc
inc
das
dec
cmc
xor
sahf
pop
or
jg
ret
sub
and
and
or
mov
pusha
shl
xor
call
mov
adc
in
decl
icebp
stos
test
gs
mov
and
in
or
shr
pop
dec
sti
sub
das
mov
test
push
mov
scas
int3
mov
data16
lock
push
ljmp
mov
das
mov
or
nop
test
fildll
mov
or
lods
sub
mov
push
imull
fistps
inc
jg
pop
lret
xor
icebp
mov
fsubs
call
gs
fwait
hlt
loopne
gs
cmp
add
xor
scas
popa
cmc
xchg
dec
sub
out
pmaxub
jnp
lods
imul
ret
add
or
pop
cmp
subb
add
cmp
xchg
mov
loope
lcall
iret
or
mov
pop
and
cvtps2pd
and
mov
lods
dec
es
add
add
push
push
lret
mov
xor
shrb
into
dec
lret
data16
in
ja
xchg
sub
push
neg
mov
aam
mov
or
rorl
push
jo
loope
fcompl
and
test
movsl
ja
jge
adc
xchg
scas
mov
out
mov
ss
jecxz
stos
or
stc
jbe
ljmp
and
jecxz
cs
lcall
fcmovu
mov
inc
stos
mov
mov
push
into
aam
jmp
xor
rcr
sbb
pop
roll
xchg
push
rol
pop
lret
xchg
test
mov
sbb
lods
xchg
inc
pop
lea
sub
dec
push
xchg
pop
push
push
cli
shlb
aas
test
push
in
ss
and
icebp
inc
mov
xor
xor
imul
sbb
shrb
scas
test
cwtl
test
mov
jbe
jne
or
in
icebp
movsl
fcoml
jle
pop
aaa
dec
lret
repnz
jb
fdivl
jo
arpl
inc
mov
std
je
idivl
ja
sti
adc
jo
mov
test
mov
push
push
int
adc
pop
dec
outsl
es
lcall
lret
inc
jge
sahf
mov
roll
mov
outsb
lret
inc
mov
fidivrl
cld
push
loop
push
lcall
shll
divl
jg
and
popa
inc
je
dec
test
ret
das
mov
jle
leave
lahf
inc
aam
arpl
sbb
gs
in
and
xor
andl
sbbl
fs
lret
pop
rclb
mov
inc
mov
sub
nop
push
inc
jmp
scas
mov
and
rcll
mov
xchg
rorb
movb
leave
stos
ret
incb
jnp
jo
xor
dec
jnp
mov
loope
pusha
dec
inc
xchg
pminsw
inc
jns
sub
dec
scas
push
in
lods
or
rcrb
insb
jecxz
push
push
jecxz
sbb
imul
sbb
fnstsw
jnp
sbb
adc
ss
push
xor
mov
repnz
clc
fcomps
push
std
daa
cmp
mov
xor
mov
jmp
in
xor
into
mov
mov
outsl
sbb
bound
cmpsb
and
push
les
mov
xor
int3
mov
sub
pop
cmp
imul
fbstp
shrb
pop
and
mov
push
mov
add
gs
mov
mov
add
lcall
xchg
lea
out
hlt
push
xchg
jae
add
shll
dec
cmp
les
push
dec
adc
adc
jo
jns
and
pop
pop
stos
adc
movsl
mov
imul
cltd
and
jmp
out
push
loope
add
sti
std
mov
push
popl
out
leave
aaa
sub
loope
loop
stos
mov
das
icebp
data16
xchg
test
out
dec
jnp,pn
ja
mov
fbstp
ljmp
or
imul
pop
mov
mov
cmpsb
mov
jecxz
push
mov
sbb
repz
mov
mov
movsl
std
arpl
dec
fisttps
cmp
lea
shlb
xchg
or
push
cmp
popa
hlt
std
cmpsl
gs
fimull
daa
push
aaa
or
in
pop
jmp
xchg
enter
cmp
aas
and
xchg
jmp
in
and
pop
mov
in
das
clc
xor
mov
lods
mov
cld
push
lcall
dec
xchg
fmull
rcr
les
add
ret
mov
mov
test
add
fs
pop
and
idivb
sti
xchg
sub
push
add
mov
push
sbb
mov
mov
fcompl
and
mov
sub
sbb
mov
push
xor
fstl
mov
sbb
rolb
popa
sbb
xor
dec
adc
jae
cld
leave
jge
scas
fadds
in
inc
add
sub
push
sbb
cmp
or
cmp
adc
inc
xchg
mov
sbb
dec
enter
pop
sub
mov
insl
xchg
adc
mov
mov
loop
jnp,pt
pop
mov
mov
fs
inc
fldenv
jmp
cld
fcmovb
lahf
mov
icebp
xor
xchg
into
sbb
subl
sbb
sbb
jne
push
jo
xchg
es
inc
adc
and
mov
adc
and
inc
dec
int3
mov
and
test
insb
not
xchg
cld
and
loop
jnp
and
dec
cmp
mov
jns
push
pop
dec
and
mov
pop
xor
in
in
mov
ret
cld
in
rcl
mov
dec
inc
or
hlt
inc
jae
out
aad
or
in
add
popf
xor
jg
lods
js
test
lods
lea
dec
out
out
dec
xor
cmp
mov
push
int
adc
mov
xor
imul
dec
ret
imul
sbb
or
push
sarl
hlt
mov
psrad
out
mov
aam
outsl
aad
rorb
jo
sub
scas
imul
daa
xchg
sub
adc
aaa
mov
out
adcw
jae
ss
fiadds
or
and
lahf
xor
inc
mov
lods
rolb
jnp
aad
mov
or
cli
xchg
scas
push
mov
jg
xchg
out
add
jno
or
xor
xor
dec
mov
push
mov
sbb
add
cli
fisubs
add
cmp
bound
lahf
loopne
sbb
push
std
in
cli
out
mov
stos
je
std
jo
push
add
iret
jge
adc
inc
xchg
shrb
push
adc
cwtl
sar
lods
sub
divb
dec
mov
aam
mov
mov
push
xor
pop
aaa
xlat
or
cli
loopne
mov
stos
xor
sbb
add
add
xor
pop
arpl
aam
call
ret
in
cld
jp
cmp
dec
sbb
xor
mov
adc
icebp
mov
ret
fisubrl
mov
mov
aad
cld
cmpsb
ss
inc
adc
sbb
out
out
mov
cmp
shr
loopne
movb
repz
inc
mov
inc
repnz
imul
mov
inc
loope
inc
cmp
inc
mov
push
dec
shll
ficoml
lahf
or
push
mov
push
sahf
push
jns
and
jae
clc
stos
push
sub
stos
pusha
xor
lcall
mov
ja
ret
mov
mov
cmp
jnp
lcall
sbb
add
mov
movsb
fs
dec
filds
jmp
pop
cmp
js
push
cltd
lea
subl
and
lret
iret
sub
xor
cmpsl
into
jno
mov
addr16
std
push
aad
push
adc
dec
int
out
xchg
pop
xor
cmp
sub
sub
pushl
jae
lods
icebp
lcall
sbb
xor
in
sbb
cwtl
dec
fiadds
cmp
cmp
rclb
nop
sub
mov
jle
pushf
repnz
sbb
jp
movsb
fmull
repz
inc
rcr
mov
popa
push
push
mov
jno
daa
fistpll
jae
loopne
push
movb
dec
and
dec
or
xor
push
pop
mov
xor
test
movb
movsl
pop
ds
fildll
data16
aad
lods
jp
lcall
insl
sub
loop
and
adc
xor
outsb
out
faddl
push
in
test
scas
jge
push
pop
into
push
xorl
mov
cmp
push
mov
mulb
add
in
mov
xor
push
ret
sbb
push
out
mov
jnp
push
ss
je
jecxz
cmp
mov
aam
jl
pop
adcb
ja
ja
mov
cmp
inc
adc
mov
shlb
aam
push
lcall
fs
lahf
cmpsl
push
pop
cmpsb
ret
decl
sub
inc
jmp
mov
loopne
and
aas
push
pop
pushf
ret
nop
mulps
pusha
and
dec
mov
mov
and
push
and
pop
push
fwait
xor
push
mov
push
push
stos
and
sarl
cmp
lds
popf
sub
and
shr
sbb
mov
pop
imulb
in
addr16
es
push
popa
out
jl
fadds
insb
test
mov
lock
mov
mov
jbe
mov
sub
scas
mov
fwait
in
lds
pop
insb
aam
mov
sbb
repnz
les
test
pop
push
into
js
test
sti
jb
sbb
aas
lahf
push
xchg
jl
cmp
push
cld
aas
add
mov
lds
fwait
adc
cwtl
sub
inc
dec
sbb
add
icebp
fmull
incl
bound
hlt
stos
pop
ds
jno
aaa
mov
jno
in
pop
and
mov
sub
xor
pop
sbb
xchg
push
push
call
inc
inc
fdivr
sbbl
mov
das
sbb
out
inc
cmpsb
jge
push
mov
mov
aaa
mov
jmp
loop
movsl
dec
inc
rcrl
and
xchg
xor
loope
xor
xchg
out
cmp
fildl
movsb
rolb
subb
cmp
ret
loope
sahf
cwtl
test
fs
jnp
mov
pop
add
fisttps
stc
pop
jmp
dec
inc
xchg
in
xchg
movl
jmp
dec
jl
push
push
inc
clc
ss
inc
ljmp
mov
arpl
in
int3
ret
mov
cmp
inc
and
dec
das
pop
cmpsb
mov
out
pop
jl
pop
jbe
in
popa
jae
mov
inc
loop
in
daa
fmuls
sub
pop
sbb
push
nop
fbld
add
dec
data16
xor
push
rol
movsb
xchg
fdivl
std
ds
mov
lcall
mov
mov
or
dec
aam
jecxz
pop
or
movsl
enter
mov
mov
add
ds
testl
sbb
in
mov
fdivrl
lods
mov
imul
xchg
mov
xchg
or
aam
push
incl
stc
frstor
fadd
ficoms
sbb
dec
mov
or
jae,pt
shlb
mov
aad
cld
push
addr16
mov
inc
or
add
lds
inc
adc
sbb
ss
pop
hlt
scas
movsl
mov
adc
lret
sub
cmp
fwait
push
inc
sbb
lret
js
cmp
jo
mov
cmp
in
mov
sbb
scas
jo
test
stos
stos
mov
fnstenv
dec
sti
xchg
call
mov
dec
cmp
mov
xchg
sub
mov
xchg
jmp
jae
or
push
sub
push
push
cmpsb
das
xor
xchg
loope
inc
jl
scas
xchg
clc
arpl
ret
outsb
loopne
aam
fnstsw
pop
int3
out
sar
nop
imul
call
daa
gs
xchg
sbb
mov
inc
push
aad
xlat
push
sub
sbb
jo
adc
std
mov
cli
or
pop
outsl
dec
ret
aaa
js
enter
push
xchg
aad
pop
xchg
lahf
and
and
jb
shlb
imul
hlt
imul
or
ret
mov
or
pusha
cmpsb
inc
mov
fmulp
repnz
inc
insb
sub
xchg
push
scas
mov
gs
mov
mov
sbb
push
fistps
dec
and
out
xchg
pusha
mov
notl
pop
push
pop
cmp
inc
movsb
gs
sub
shll
mov
cmp
cmpsl
jmp
test
jge
leave
das
andl
subl
pop
orb
jo
push
addr16
push
jp
js
add
jb
pop
fildl
push
jp
insl
dec
scas
std
cld
lock
dec
std
ret
std
incb
sub
dec
in
jg
adc
test
addr16
and
loopne
mov
aas
pop
ljmp
inc
aaa
ficompl
mov
cmp
push
sub
nop
jle
push
pop
push
pop
ss
xor
jnp
cwtl
cwtl
push
aaa
fdivrl
add
cmp
repz
jo
adc
lock
rol
aas
mov
movsl
lahf
fisubrl
jo
inc
cmpsb
sti
ljmp
gs
add
pop
xor
sub
out
cmp
ljmp
leave
out
adc
movsl
xchg
inc
push
jo
out
pusha
xor
das
movsb
call
lds
mov
dec
aam
add
mov
xlat
jg
in
xchg
and
inc
dec
orb
cmc
incl
or
imul
gs
cmp
je
pop
push
add
cld
cmp
in
lods
movsl
fisubrl
dec
test
or
push
arpl
inc
pop
xor
repnz
jge
sbb
xor
cmp
daa
jl
inc
push
mov
lahf
xchg
in
lods
inc
sub
xor
adc
lretw
fbstp
int3
mov
fs
loopne
stos
fldt
insb
jle
mov
enter
sbb
lcall
xor
adc
mov
xor
adc
data16
ja
nop
push
sbb
lret
jecxz
data16
push
and
sti
cmp
push
jge
sub
cmpsb
fsubl
mov
bnd
testl
aaa
sbbb
lea
pmulhuw
jle
pop
ljmp
lock
adc
add
add
imul
jnp
enter
fmuls
pushf
out
sbb
lret
adc
aam
jno
and
sub
out
leave
fwait
sub
mov
popf
je
add
push
add
call
stos
imul
pop
dec
imul
mov
xchg
in
rcrl
and
int3
gs
scas
inc
xchg
xchg
pop
pop
mov
je
lea
jnp
xlat
pop
sbb
sbb
scas
dec
pop
add
xchg
xchg
cld
push
or
aad
mov
fwait
sbb
cmpsb
lret
jb
loop
push
repz
pop
xor
jns
sub
idivb
adc
pop
or
xchg
xchg
fistl
inc
fimuls
sbb
js
fs
sbb
sbb
jge
pop
mov
and
jecxz
inc
lea
lahf
mov
je
cmpsl
insb
pop
mov
stc
jge
arpl
jns
push
in
inc
sbb
aas
scas
outsl
xchg
inc
sbb
test
out
lods
jle
push
aas
mov
mov
cmp
in
cs
adc
jo
or
mov
pushf
push
cmpsl
movsl
loop
loopne
loopne
jmp
out
mov
cmp
stos
notb
pop
dec
push
mov
lret
notl
mov
js
out
add
mov
in
in
dec
push
cmp
xlat
mov
lret
cld
dec
mov
inc
sub
mov
dec
in
mov
mov
movsb
pop
pop
insb
xor
call
jl
xchg
inc
mov
mov
lds
add
push
out
subl
data16
in
dec
clc
sarl
cmc
aad
test
or
bound
mov
inc
fbld
push
fidivrs
cmp
xlat
movsl
rorl
inc
jb
xchg
shrb
enter
sti
movsl
jmp
cli
sbb
dec
xchg
push
ss
clc
xchg
clc
jb
ret
cmpsl
jecxz
stc
loopne
add
xchg
lret
gs
sub
sbb
jno
lahf
cli
mov
dec
pop
push
add
gs
pop
fs
pop
jle
xchg
js
dec
sbb
or
sarb
pop
and
or
xor
nop
decl
xorl
push
insl
jecxz
mov
cmpsb
mov
push
popa
scas
sbb
xor
and
mov
add
dec
inc
mul
es
mov
fnstsw
std
cs
decl
cmp
mov
js
loopne
leave
push
or
adc
sub
divl
and
mov
inc
testl
mov
add
fsubr
jbe
in
cmpsl
cmp
sahf
dec
lock
js
mov
in
and
pop
jmp
ficoms
sti
std
movsl
ljmp
jno
pop
and
jne
bound
pop
pop
or
adc
pop
or
push
push
mov
sub
cmp
out
push
sahf
mov
lods
xchg
jp
pop
push
pop
mov
pop
in
xchg
loope
inc
imul
iret
test
movsb
lock
mov
lock
psubq
test
rcl
cwtl
mov
je
pop
and
cmp
dec
rcll
das
sub
mov
inc
add
mov
mov
or
or
pop
or
push
xor
inc
outsb
jns
sti
mov
stos
ss
lods
push
fwait
lods
sbb
scas
or
aaa
aam
test
fimuls
dec
xlat
jle
outsl
out
cld
mov
fistl
mov
xchg
fimuls
repnz
inc
adc
mov
xor
push
xchg
or
cmp
mov
jmp
out
lods
push
imul
popf
jb
ljmp
daa
xor
xchg
pop
and
rorl
fimuls
add
out
sahf
aaa
loopne
jo
or
loop
push
cmpsb
inc
movsb
pop
lods
push
or
test
adc
xor
pop
nop
jg
cmp
and
mov
mov
push
mov
mov
pop
hlt
jmp
xor
cs
dec
sti
xorl
int
insb
jne
daa
enter
sub
enter
mov
nop
pop
ror
fidivs
push
hlt
jns
push
xor
xor
lods
js
out
cmp
jns
mov
stos
sub
xor
pushf
pop
xor
icebp
mov
jbe
movsl
or
outsb
lock
add
push
xchg
xchg
jmp
jmp
or
ljmp
dec
sbb
add
xor
cmp
lret
scas
mov
jge
shrb
call
jo
fistps
repz
in
popa
rorb
insl
mov
loope
sub
into
sbb
cmp
mov
mov
cmp
pop
and
jno
and
leave
daa
xchg
mov
cld
or
adc
mov
out
cwtl
cli
pop
inc
test
js
repz
cmp
push
fwait
jno
sbb
jns
aaa
outsl
sbb
mov
cs
movsl
ss
push
div
jg
enter
movsb
adc
lds
mov
xor
add
mov
dec
jno
cmp
mov
jp
addr16
mov
pusha
scas
das
into
shll
int3
xor
pop
insl
dec
jne
cld
xchg
imul
out
xchg
loope
mov
cmp
push
sbb
xorl
div
mov
or
xchg
fisubrl
jecxz
fdivs
jbe
mov
sbb
adc
outsl
leave
adc
fidivrs
loop
xor
and
xor
sub
enter
cmp
jge
mov
push
insb
inc
adc
sub
push
and
fisttpll
decb
leave
mov
and
and
dec
std
data16
jge
inc
mov
lock
test
sub
jg
adc
movsb
ss
test
lock
push
mov
push
xchg
inc
pop
mov
pop
scas
mov
push
adc
add
ret
fsts
nop
mov
adcl
enter
mov
or
pushf
stos
cmp
sbb
push
pop
pop
dec
out
repnz
insb
into
push
popf
imul
sub
push
and
push
std
in
mov
xchg
xchg
es
repnz
hlt
dec
int3
lcall
in
in
jne
outsb
mov
sbb
gs
dec
test
sbb
inc
cmp
fbld
dec
out
adc
sbb
rol
xchg
mov
ds
mull
sub
loope
jae
es
sub
cltd
push
push
push
idiv
lds
arpl
sbb
mov
shl
sahf
and
std
das
push
clc
or
dec
pop
insl
mov
inc
out
cltd
or
dec
mov
aas
jb
xchg
mov
push
test
mov
and
in
adc
xor
divb
or
and
imul
ss
nop
and
or
mov
pushf
and
jo
and
loopne
xchg
adc
mov
jmp
xchg
push
clc
lcall
pop
mov
dec
addr16
rol
pop
sahf
lods
dec
call
pop
dec
fadds
pop
das
cmp
idivb
les
dec
inc
cmc
mov
or
cltd
cmp
push
mov
and
inc
inc
and
sub
jmp
sub
mov
mov
inc
fnstenv
pop
in
aaa
push
mov
xchg
scas
iret
push
cmpb
adc
js
cmp
xor
out
ror
repz
xchg
push
lret
fidivrl
pop
push
and
adc
divl
dec
outsl
out
jg
xor
add
loope
in
fisttps
cld
arpl
mov
scas
insb
mov
idivl
jl
cmp
mov
insb
inc
cmpsl
loop
inc
stos
push
add
lcall
or
aas
push
ret
test
pop
mov
test
push
cld
mov
jbe
ja
xor
sti
mov
scas
jae
sbb
imul
inc
mov
adc
xchg
shlb
xor
xor
jne
pop
fwait
mov
mov
mov
ss
inc
lret
inc
mov
jns
and
in
inc
decb
xchg
pop
rcrl
enter
sbb
iret
out
outsl
fistpll
dec
enter
stc
ja,pn
sbb
xor
mov
dec
xor
sub
hlt
nop
lock
lcall
push
mov
out
test
sahf
sahf
leave
aas
push
insb
add
sub
cli
cmc
adc
pop
xchg
insb
icebp
cs
je
or
sub
ja
cwtl
movsb
shll
pop
int
cwtl
in
inc
lcall
fisttpl
sti
mov
inc
in
push
test
loope
xlat
mov
loopne
push
into
out
and
fsubrl
outsb
test
test
sarl
xor
out
mov
pusha
or
pushf
stos
bound
cmpsb
sub
stos
sbb
hlt
stos
movsb
sub
fcoml
leave
js
jns
cmpsl
test
arpl
push
cmp
neg
lret
test
mov
pop
lret
mov
loopne
jmp
jmp
shlb
xlat
mov
push
sbbl
xchg
mov
addr16
repnz
outsb
lcall
jno
popf
aam
xor
cmc
cli
add
xchg
push
int
jmp
pop
and
fs
pop
movsl
dec
jecxz
outsl
jnp
dec
mov
push
movsb
mov
and
sbb
jae
push
stos
ret
rclb
roll
xchg
out
sub
cmp
sbb
mov
out
and
stc
lock
popf
aaa
mov
push
fdivl
aas
aaa
movsb
outsb
push
out
jp
in
loope
sbb
mov
cmc
imul
cvtps2pd
ljmp
test
xor
adcb
fidivl
pop
add
pop
mov
xchg
call
xchg
iret
mov
dec
cli
test
jp
aaa
repnz
xorl
pop
inc
jno
fcmovu
xor
pop
mov
call
pop
out
cmp
dec
int3
imul
aam
lea
in
fadds
inc
leave
cmp
and
cmp
pushf
test
icebp
pop
push
popa
cs
aad
stc
icebp
xchg
test
jo
out
stc
lock
outsb
sub
jnp
mov
das
inc
rcl
out
cmp
push
rclb
push
rcrl
dec
imul
or
test
out
pop
aaa
xchg
sub
sbb
js
arpl
int
sub
jo
pop
mov
sub
mov
lret
mov
sti
mov
cli
mov
insb
insl
jb
xor
mov
cwtl
or
sahf
popa
adc
out
mov
or
stos
xchg
mov
jns
sbb
push
out
xlat
mov
jbe
incb
dec
xchg
cli
hlt
inc
xor
stos
es
leave
inc
outsl
pop
stos
push
sub
xchg
push
or
jp
enter
out
mov
sarb
push
fwait
divl
dec
adc
in
ret
cmp
loop,pt
mov
or
test
mov
sub
xlat
fcmovb
cmp
test
cmp
mov
push
jo
ss
cltd
stos
mov
aam
mov
test
push
sbb
iret
and
cld
call
mov
lods
jge
jge
inc
std
dec
sbb
dec
xor
fmull
add
in
cmpsb
mov
arpl
stc
mov
pop
sub
aas
cmpsl
pop
jns
push
icebp
decl
scas
in
xchg
push
mov
add
stc
push
mov
dec
push
aaa
sbb
cmp
sbb
out
mov
filds
not
cmpsb
scas
or
bound
inc
xchg
fidivs
inc
adc
cmp
mov
inc
iret
adc
fwait
jnp
inc
dec
scas
scas
hlt
xor
in
rolb
pop
in
clc
xor
push
data16
add
dec
xor
add
dec
sub
dec
shll
xor
lock
add
mov
jp
int
mov
dec
gs
push
or
pop
mov
cmc
mov
pusha
adc
int
scas
dec
ja
push
cmp
mov
pop
xlat
dec
into
cmp
es
jle
adc
out
repnz
scas
ljmp
sub
adc
and
jb
lahf
inc
loop
loop
push
movb
out
js
inc
mov
cli
jbe
or
adc
in
icebp
add
loope
fwait
sub
insb
mov
icebp
xchg
mov
adc
mov
push
inc
imul
das
aaa
aas
push
jp
fs
add
insl
mov
cmc
mov
mov
mov
cmp
pusha
icebp
scas
cli
aad
push
pop
add
inc
mov
call
stos
icebp
insl
test
arpl
mov
push
cltd
adc
addr16
call
pop
and
iret
repz
testl
sbb
data16
jmp
sbb
push
mov
leave
adc
dec
aam
or
sbb
add
jo
les
jg
nop
xor
ljmp
shlb
dec
mov
ss
pop
mov
add
mov
xchg
and
loop
stc
ss
jp
push
mov
xchg
int
sbb
rolb
insb
je
mov
flds
bound
or
int3
sub
inc
mov
jmp
pop
popf
inc
xchg
xchg
daa
ss
pop
out
ret
mov
pop
popf
sbb
dec
loope
mov
or
hlt
rol
scas
push
mov
std
push
test
mov
push
mov
inc
add
js
outsl
push
jne
cmc
inc
mov
sbb
xor
jmp
into
jge
dec
mov
orl
aaa
cli
mov
js
cmp
lds
test
sub
lods
repnz
xchg
cmp
xlat
aaa
or
add
enter
out
out
cmp
cmp
and
dec
inc
fistl
or
mov
mov
movsl
insl
dec
pop
pop
rcrl
push
jecxz
lahf
inc
jns
xchg
mov
jmp
jnp
pushf
jge
ror
out
or
jle
cwtl
ret
xchg
mov
or
inc
and
pop
fistl
pop
insb
jne
xchg
insl
or
sub
sbb
stos
iret
mov
push
clc
pop
pop
je
mov
push
hlt
xor
lcall
rorl
lahf
push
mov
jbe
out
out
adcl
fldcw
imul
je
or
xor
popf
lock
imul
nop
pop
or
cmp
ret
xlat
test
or
dec
mov
ret
in
int
mov
out
aam
movsb
cmp
mov
xor
pop
mov
dec
pop
cmp
ds
pop
dec
jbe
mov
cmp
insl
cld
push
mov
or
enter
pop
mov
lods
into
dec
xchg
out
js
sarb
shlb
outsl
jb
js
ss
dec
ret
cmp
in
gs
inc
cmp
adc
fstpt
fcompl
xor
sub
mov
icebp
jno
mov
add
mov
mov
mov
cmp
lods
and
or
cld
es
adc
push
pop
fbld
mov
push
enter
mov
adc
icebp
bswap
repnz
mov
and
scas
lds
add
jno
ds
xchg
jl
adc
pop
jne
mov
inc
aad
cmp
sub
dec
cmpsb
test
lock
insb
add
mov
or
dec
inc
jecxz
mov
adc
sub
int
cmpsb
pop
scas
sbb
cmp
imul
or
rcll
cmp
test
lods
pushf
leave
int
mov
lods
iret
cmp
and
sub
cmpsl
in
mov
ss
addl
dec
leave
hlt
fmul
ja
popa
imul
aas
cwtl
jbe
xchg
cld
mov
xchg
dec
cmp
cmp
dec
ja
lahf
dec
jo
mov
iret
out
add
jns
mov
mov
test
popf
jne
bound
in
add
and
inc
aas
xchg
lret
insb
cltd
mov
call
cmp
lods
out
fmull
pop
pop
jo
aad
jle
aam
and
add
sbb
pop
movsb
cmp
xchg
cmp
popf
sbb
pop
xchg
ds
sbb
inc
jnp
mov
push
inc
dec
test
xchg
test
outsl
pusha
xchg
inc
loop
sub
push
xor
int
mov
pop
imul
pop
sbb
outsb
out
pop
cld
leave
inc
mov
pop
push
sbb
in
cmp
test
popf
outsl
fcomps
inc
inc
test
jg
arpl
mov
ds
testl
push
xor
popf
mov
scas
push
shl
leave
test
into
sub
daa
fcoml
add
jbe
adc
lods
out
in
dec
in
adc
outsl
jno
mov
push
into
loopne
lahf
dec
sub
xor
or
dec
shll
clc
inc
cmpsl
mov
or
xor
std
cmp
inc
pushf
hlt
stc
lds
shrb
scas
orl
out
jne
mov
dec
cwtl
nop
add
cmp
jle
xchg
loope
inc
mov
sti
xor
pop
movsl
xchg
mov
mov
cmc
cmp
adc
jno
idivb
jno
sbb
sbb
imul
sahf
push
int
shlb
cwtl
sub
sub
xchg
out
push
call
push
pusha
and
in
imul
push
jno
test
and
nop
aam
push
ffree
jbe
and
mov
sbb
mov
dec
mov
xor
sti
dec
sub
adcb
cli
lcall
es
outsb
aad
filds
mov
out
mov
into
scas
pushl
shlb
addb
fwait
outsl
jbe
dec
loope
xchg
out
iret
xor
shlb
mov
lret
lods
frstor
dec
jp
addr16
xor
mov
adc
push
fsts
mov
sbb
fsubl
xor
jae
mov
rcll
daa
xchg
xchg
ud1
aaa
push
sub
fstpl
xchg
mov
push
jns
push
jp
repz
add
gs
arpl
jne
movsb
hlt
jns
mov
outsl
sub
xor
mov
out
mov
pop
cmpsb
leave
fldenv
cld
ret
scas
fsub
lret
repnz
jne
loope
pop
inc
in
ja
jle
xor
adc
stc
imul
lahf
jge
dec
hlt
xor
lahf
xchg
or
and
cli
cmp
pop
xchg
cmp
sti
mov
insb
out
jl
ljmp
mov
aaa
dec
cmc
jecxz
int3
cwtl
aaa
aas
sbb
xchg
scas
aam
or
enter
test
movsb
push
les
aaa
lds
cmp
loop
jge
outsl
fcmovu
addr16
sahf
and
ret
int3
int3
pop
clc
sbb
jnp
mov
xchg
outsb
test
shl
shll
movaps
fldenv
popf
lcall
jns
mov
pop
mov
cmc
cld
adc
aas
int3
inc
jnp
xchg
pop
jae
and
cld
rcll
rcr
push
xchg
aaa
mov
push
test
mov
aam
dec
mov
jae
cltd
stos
aad
push
xlat
mov
test
dec
pop
enter
mov
imul
test
xorl
dec
cmpsl
push
dec
aas
adc
scas
lods
pop
push
loop
or
cld
inc
aaa
std
leave
cli
cwtl
ljmp
xchg
push
adc
pop
xor
enter
jno
add
dec
stos
int3
sub
xor
xlat
aaa
cmc
and
push
icebp
iret
mov
lods
pop
sub
jmp
shll
inc
xlat
jp
cmp
sub
negb
cmp
jnp
jo
jae
push
inc
adc
mov
pop
or
imul
and
cmpsb
inc
int3
xchg
dec
cmpsb
push
cld
addb
out
xchg
pop
test
ss
mov
sub
push
insl
jo
mov
out
fs
sbb
mov
sbb
xor
mov
and
jae
inc
xchg
mov
mov
das
sahf
lcall
mov
dec
cmp
mov
xorb
dec
pop
mov
scas
jne
addr16
pusha
insb
shl
pop
stos
pop
jmp
xor
mov
xchg
jecxz
and
pop
xlat
adc
stc
adc
mov
adc
cmp
cmp
jne
inc
mov
in
cmp
cwtl
cmp
gs
ds
aad
xchg
sub
addr16
jb
mov
pop
lock
fstl
js
or
jmp
or
fcmovnu
jg,pt
cmp
les
and
or
push
ds
arpl
lock
dec
test
xchg
sbb
int
mov
aad
xchg
cmp
mov
int3
loope
loope
jle
dec
push
cmp
lock
into
mov
pop
out
fcmovbe
mov
cli
jecxz
push
xor
jne
mov
xchg
fwait
ret
jae
repz
hlt
and
push
jns
pushf
les
sub
daa
cmp
lea
push
je
jo
xchg
mov
dec
or
cltd
aaa
jbe
push
jmp
push
jo
mov
test
push
gs
or
jg
jmp
and
das
scas
fisubs
roll
push
dec
xchg
out
pop
jge
movsb
push
jp
xor
outsl
sti
ficompl
mov
add
xor
sbb
in
setl
cwtl
negl
sahf
jle
movsl
pushf
or
xor
sub
adc
xchg
mov
scas
sub
xchg
divl
and
dec
sahf
and
repz
aam
xor
nop
jecxz
hlt
out
std
cmp
or
fst
aas
jg
cmpsl
sbb
mov
std
lds
iret
cmpl
aam
mov
push
ficoms
xchg
notl
and
les
cmpsl
popf
jo
adcb
push
loop
out
jmp
add
push
jno
cli
pop
or
movsb
sbb
xchg
add
push
cmp
fimuls
test
push
push
ds
sub
pop
lock
ficoml
and
pop
cs
ret
jb
cs
add
inc
sbb
std
lea
add
ret
jmp
clc
ret
fstl
jmp
mov
adc
outsl
jb
mov
jbe
movsl
adc
pushf
dec
fdivr
xor
iret
mov
lea
push
fldcw
sub
xchg
cmp
out
insb
dec
fnstsw
in
insl
xchg
fwait
mov
xor
cmpsl
loope
cmp
fucompp
mov
std
ret
mov
rcrb
pop
mov
out
mov
mov
push
stos
add
and
xlat
lods
out
mov
fcoms
jnp
add
and
outsl
aad
ds
out
xchg
jno
inc
adc
add
pop
xchg
nop
jge
and
outsb
pop
icebp
arpl
idivb
cltd
mov
das
and
or
mov
das
lret
sbb
loop
test
repz
push
jns
mov
pop
daa
std
pushf
adc
push
rol
test
xchg
in
xor
add
sbb
jae
aas
adc
hlt
mov
sahf
loopne
test
ss
jns
dec
push
sti
dec
xor
mov
pop
test
jne
or
inc
stos
lahf
in
addr16
sahf
lods
insl
and
pop
inc
xchg
aad
and
sub
mov
cltd
mov
pop
push
inc
dec
sbb
push
sahf
shll
adc
push
stos
cmp
ljmp
mov
sahf
cmp
cmp
rcrb
xchg
pop
nop
in
xchg
mov
adc
xor
xacquire
and
lea
call
jl
or
jp
out
xchg
stc
push
sub
faddl
adc
cmc
repz
mov
sbb
push
lods
xchg
xchg
mov
mov
adc
mov
pushf
adc
ss
js
mov
gs
fstl
add
js
es
std
fdiv
xor
add
jo
call
in
out
mov
push
imul
int3
cmp
mov
push
out
mov
data16
mov
mul
xor
inc
fcoms
arpl
lret
xchg
dec
xchg
pop
adc
lds
mov
push
xchg
iret
daa
lret
pop
jp
mov
jge
scas
adc
mov
adc
stc
mov
pop
sti
push
jl
pop
stc
clc
addr16
int
mov
ja
in
jge
inc
mov
xchg
in
jne
mov
scas
pop
movsl
jge
pop
add
fisubs
scas
inc
xor
ds
enter
xchg
sahf
pop
lcall
mov
inc
adc
test
enter
mov
sbb
push
fldcw
roll
xchg
cmp
sub
test
sub
mov
sti
repnz
mov
xor
inc
out
lret
sub
push
adc
rcr
lea
sbb
fnstenv
gs
and
xchg
cmpb
lahf
sbb
int3
pop
xchg
in
mov
mov
pop
pop
xor
out
cmpsl
xchg
ds
shlb
sbb
inc
push
dec
xchg
jmp
into
xchg
push
inc
pop
cmp
aam
cli
popf
push
addr16
jmp
out
add
bound
jns
mov
fsubr
lock
mov
xchg
outsb
ror
push
addb
sub
imul
cmp
popf
and
rcl
stos
jp
seta
cmpsl
dec
notl
mov
inc
aaa
xchg
add
add
mov
out
bound
cmp
sub
cld
mov
cmp
pop
adc
imul
mov
in
cs
icebp
jmp
mov
xchg
aad
xlat
add
lds
ror
hlt
dec
xchg
adc
mov
xlat
imull
sub
mov
and
and
mov
outsl
sub
jbe
mov
popf
inc
sub
in
xchg
inc
jl
push
xchg
in
das
movsb
ss
int3
icebp
shlb
xchg
stos
jecxz
adc
jns
roll
lcall
jecxz
movsb
push
in
fmull
dec
ret
xchg
aas
mov
and
ss
mov
mov
pop
cmp
scas
into
js
adc
xor
test
or
xchg
adc
cwtl
pop
cld
sub
mov
mov
sub
ljmp
mov
sub
cmpl
les
sub
mov
lods
sub
sub
popf
call
aam
clc
and
negl
mov
mov
sbb
or
iret
mov
xchg
inc
adc
dec
test
adcb
repz
ljmp
out
cmp
sahf
lea
dec
and
mov
lods
pop
fsts
push
das
std
pop
or
std
mov
push
or
mov
rcll
jnp
lock
sti
fistl
ffree
fidivl
pop
jnp
movsb
jp
jno
add
arpl
jnp
inc
sarb
adc
dec
xchg
stc
mov
pop
jno
pop
cli
jecxz
loop
inc
out
push
into
pusha
adc
testb
insl
aad
stos
mov
cmp
mov
loope
outsb
iret
imull
fdivs
mov
xor
lock
or
rclb
ret
xchg
add
xor
test
mov
and
adc
cmpl
sub
scas
insl
mov
add
push
jno
aas
arpl
fwait
aaa
mov
je
jmp
in
sbb
dec
sti
dec
or
outsl
xchg
hlt
repz
sbb
popa
test
pop
inc
lret
cwtl
out
out
call
cmp
mov
and
outsl
mov
in
outsb
popa
mov
ljmp
lods
mov
inc
sbb
xlat
xor
cmpsl
cmp
stos
sbb
lock
daa
jne
adc
dec
xor
mov
in
pop
bound
add
mov
add
ds
sbb
add
lret
mov
fsubrs
std
ret
cmc
and
xor
xor
jl
scas
or
inc
dec
in
stc
arpl
xchg
add
mov
sahf
inc
sub
cld
stos
jg
orb
in
pop
xchg
pop
test
gs
mov
lret
jae
in
ret
je
mov
std
repz
outsl
jg
pop
xchg
pop
mov
sub
mov
js
add
shrb
test
dec
negb
pop
mov
jmp
fistps
scas
mov
dec
cmc
cld
testb
fcomi
add
jne
enter
push
add
adc
out
lds
sub
dec
push
int3
shrl
lcall
push
bound
push
pop
mov
lods
fcomps
xor
sub
mov
call
shrl
cmp
dec
inc
push
repz
rol
mulb
mov
mov
popf
and
shrb
loope
push
je
jno
clc
xchg
sti
sbb
pop
popf
and
sbb
add
xchg
push
roll
mov
mov
adcl
pop
xor
sub
mov
aam
inc
movb
mov
dec
jle
xchg
shl
lock
dec
ljmp
mov
loop
or
inc
out
stos
xor
push
mov
clc
dec
mov
jp
pop
lahf
xchg
mov
push
adc
xor
mov
inc
out
sti
cmpsb
jecxz
stos
push
sahf
xor
dec
js
fiadds
pop
xor
scas
inc
shlb
lahf
dec
into
or
mov
je
jbe
shll
mov
or
pop
aas
mov
inc
push
ret
sub
pop
testb
lcall
movsl
ja
enter
sarb
push
and
add
lcall
sarb
pop
call
stos
out
jl
lock
or
cmc
jnp
mov
xchg
sbb
aaa
jb
stos
subl
xor
mov
sahf
adc
sub
fsubs
fimuls
mov
idivl
loopne
loopne
push
insl
xchg
arpl
ret
shl
sti
outsl
cmpsl
testl
jae
sbb
cmc
mov
outsl
ficoml
xor
in
je
push
pop
scas
mov
cmp
icebp
xor
mov
and
outsl
dec
mov
sub
fildl
mov
movsb
inc
hlt
lahf
xchg
mov
jnp
imul
loope
mov
insb
mov
inc
inc
sbb
cmpsb
out
ret
push
xchg
add
mov
ds
xchg
mov
lock
lahf
jmp
stc
cmp
rolb
and
push
stc
adc
fisubl
jnp
in
ss
mov
dec
test
sbb
mov
mov
js
push
stos
mov
int3
in
xchg
jnp
andps
lret
xchg
sarb
dec
fcoml
movsl
mov
jg
inc
int3
rolb
or
dec
addl
or
mov
ja
hlt
sub
imul
mov
and
and
lods
mov
mov
int
fs
hlt
and
decb
flds
inc
stc
into
lods
out
pushf
xchg
sub
clc
cltd
repnz
xchg
sub
dec
call
dec
imul
add
jbe
jns
jmp
mov
add
loopne
mov
push
outsb
sub
xchg
inc
out
cmpsb
sub
fldcw
notl
add
nop
add
xchg
fstl
adc
loopne
in
aad
push
add
mov
pop
popf
jno
cltd
adc
push
and
incl
leave
loope
xchg
rcrl
inc
pop
lahf
xchg
fucomi
or
inc
inc
rclb
and
fwait
call
aaa
add
sub
add
int
mov
mov
repz
fwait
xchg
mov
cmovg
aam
cld
cbtw
sbb
mov
cmp
movsl
aas
mov
scas
lea
std
lds
out
jns
sbb
pop
sub
dec
cmp
out
push
add
int3
cmp
scas
fcomip
xchg
scas
push
jmp
mov
gs
in
push
pop
icebp
daa
sbb
lea
sub
mov
bound
insl
xchg
sub
xchg
xchg
and
xchg
outsb
mov
les
pop
sbbl
xchg
loop
jae
aad
aas
sub
cmp
nop
int3
leave
out
mov
sbb
fcomip
in
xchg
je
lock
xor
fwait
push
js
jbe
fimull
notl
fldcw
fldt
xchg
xor
xchg
mov
sar
push
loope
jmp
cmpsb
repnz
push
fwait
add
rorl
mov
into
fwait
xchg
mov
dec
mov
and
test
cmpl
iret
mov
popl
fimuls
scas
lods
pop
sbb
push
fs
lea
outsl
clc
incl
call
pop
pop
jmp
dec
loop
or
or
adc
push
jecxz
sub
clc
das
mov
test
sbb
mov
mov
lcall
std
test
popa
subl
adc
cld
xchg
push
nop
js
popf
mov
lds
inc
mov
sbbl
out
or
pop
mov
or
fidivl
mov
fadds
or
mov
xchg
mov
lods
pop
fsubl
xchg
and
ror
sub
and
decl
mov
mov
bswap
imul
fcmovu
aaa
add
add
ficoms
fimull
pop
xchg
jne
push
cwtl
sub
dec
imul
pushf
cltd
xor
pushf
lcall
arpl
adc
mov
gs
leave
mov
xor
mov
idivl
fdivl
jmp
mov
pop
add
in
jnp
dec
ljmp
or
fnstcw
mov
idivl
xchg
cmp
flds
mov
inc
jo
or
mov
stc
jnp
cmpsb
test
or
pop
mov
aaa
mov
add
std
loopne
aam
cld
cli
stc
cmp
stos
xchg
adcb
mov
das
rcrl
fisubs
add
pop
sbbb
inc
dec
cmpsl
incb
add
ljmp
or
inc
sbb
scas
repnz
inc
push
pusha
call
inc
inc
inc
inc
and
hlt
xchg
or
ja
cmpsb
sbb
test
sbb
jmp
out
xor
mov
inc
decb
fs
enter
push
or
es
add
lods
cltd
pop
jp
test
test
xchg
ret
mov
add
imul
cmp
clc
cmp
or
iret
push
push
movb
test
nop
popa
jge
adc
mov
mov
loop
sbb
les
or
fucomi
scas
mov
imul
mov
fstp
ja
repz
shl
lcall
rcrl
hlt
mov
shlb
out
jae
fists
rcll
data16
ljmp
sub
dec
lods
xchg
arpl
jne
lahf
popa
sti
pop
jne
push
pop
enter
xchg
and
dec
in
mov
repz
mov
pop
sub
jno
jnp
jle
cli
daa
ja
pop
aam
adc
mov
out
adc
loopne
or
xor
dec
lcall
shl
mov
test
or
subl
or
int
fcmovnb
stos
int
roll
mov
lret
jb
pusha
xchg
aas
inc
sti
dec
shll
xlat
mov
scas
push
shr
push
or
nopl
leave
inc
dec
imul
or
sbb
sub
cltd
inc
pop
push
mov
icebp
jae
xchg
jne
dec
cmpsl
xchg
sbb
dec
sbb
iret
js
mov
inc
add
sbb
mov
sub
mov
xchg
in
sub
mov
inc
cmp
adc
add
icebp
dec
scas
lahf
les
sbbl
dec
mov
cmpsb
es
frstor
xchg
cld
clc
cli
xor
push
movsl
push
push
les
inc
dec
adc
push
mov
pop
shr
imul
out
xor
jo
pop
jbe
mov
ss
push
sbb
inc
sbb
xor
dec
adc
flds
bswap
adc
jmp
xchg
mov
bound
and
lahf
xor
loopne
push
loop
test
push
xor
inc
mov
aaa
arpl
mov
out
shrb
cltd
sti
and
mov
out
mov
data16
mov
or
pop
out
cmp
fsubrl
sub
lods
adc
inc
xchg
mov
aaa
ss
daa
lds
dec
mov
int3
popf
int3
loop
and
std
xchg
pusha
cmp
rclb
jecxz
mov
in
je
sbb
jns
bound
aad
inc
push
xor
fstl
fldln2
dec
mov
dec
mov
fdivs
ja
mov
rcl
je
imul
xor
cmp
jl
stos
rorb
fstpl
push
mov
cmp
out
xchg
push
test
ret
push
push
repz
mov
adc
movsl
arpl
fistl
add
es
add
and
lods
daa
cld
inc
int3
icebp
push
or
mov
cmp
pop
cmc
scas
pop
mov
sti
idiv
inc
inc
cmp
adc
sahf
nop
outsb
push
fs
iret
ss
adcb
xor
test
mov
xchg
sbb
xchg
repz
and
test
mov
mov
xchg
mov
into
xor
adc
pop
stos
xchg
push
cmpsb
cmpsl
loopne
dec
jae
imul
loope
scas
in
les
lcall
adc
pop
inc
lods
ja
jg
lahf
cld
cli
aas
jp
cmc
inc
pop
xor
popf
scas
push
xor
sub
jno
sarl
jb
jb,pn
push
out
scas
jmp
jb
lods
repz
pop
xchg
xchg
cmp
xor
adc
xorl
xor
enter
and
and
arpl
ja
and
rcrl
aas
inc
push
scas
adc
mov
ja
lds
cs
lret
daa
inc
pop
mov
add
add
jae
mov
call
out
mov
repnz
sub
nop
mov
int3
or
jp
sbb
mov
cmpsb
test
loope
outsb
addr16
mov
out
lods
lea
jns
jge
fadds
das
int
sbb
xchg
dec
filds
divb
pusha
int
mov
sbb
jmp
adc
adc
imul
int
pinsrw
add
and
sbb
test
out
jno
popa
rcr
lods
fsubl
inc
xchg
jae
sar
rorb
mov
movsl
lods
cmovne
cltd
push
mov
arpl
or
loopne
daa
mov
lds
sbb
and
or
xchg
jae
movsb
ffreep
jne
mov
xor
insl
mov
jb
sub
or
pminub
dec
mov
loopne
loop
lcall
mov
divb
addr16
cli
jnp
and
or
jg
pop
and
stc
es
adc
lds
in
in
push
and
and
pop
enter
xor
inc
pop
xlat
sub
popa
insb
stc
fldenv
push
fiadds
fnstcw
xor
into
pop
mov
inc
cmp
into
stc
and
adc
int3
cmp
scas
push
pop
lret
sahf
or
sub
ret
gs
stos
jno
push
dec
inc
xor
test
mov
enter
add
sbb
pop
mov
xor
stos
add
lret
inc
scas
imul
mov
jne
pop
pop
fdivrl
jmp
sahf
data16
adc
insb
pusha
arpl
inc
adc
xchg
pop
jle
add
mov
mov
call
adc
jns
mov
xchg
lahf
sbb
pusha
pop
addps
xchg
outsl
mov
jb
inc
cs
lahf
inc
mov
inc
lret
outsl
fisttps
inc
pop
ficomps
inc
mov
int
add
fmull
push
mov
dec
lds
push
shll
movb
mov
loop
mov
test
insb
add
sub
lods
push
int
and
test
cmp
jae
out
fstp
outsl
das
adc
shl
test
xor
and
cmp
push
leave
jo
mov
into
xor
shl
xorl
push
popf
ja
mov
test
out
jnp
in
inc
xchg
adc
outsb
fs
or
sbb
pop
push
int3
gs
jmp
aam
mov
sahf
dec
pop
das
push
cmpb
or
test
into
stos
cmp
mov
mov
xchg
loope
jp
out
or
scas
push
repz
mov
outsb
cmp
clc
push
or
inc
mov
sub
inc
xor
jl
sbb
rcrb
xchg
shlb
sbb
out
test
cltd
imul
cmpl
add
mov
push
push
test
test
out
fidivs
mov
xor
jne
pop
mov
xor
in
sarb
jmp
aad
lahf
xchg
inc
orl
out
subl
sub
xorb
std
dec
in
pop
test
push
lods
sbb
mov
push
arpl
pop
mov
cmp
cmp
fwait
add
imul
mov
ret
or
sbb
pusha
scas
inc
push
insl
mov
in
iret
mov
cmp
aad
sbb
mov
ret
cli
popa
sub
mov
cmpb
lods
pop
arpl
daa
push
push
cmp
adc
lahf
add
adc
pop
mov
mov
or
dec
mov
or
xchg
and
mov
mov
push
out
imul
inc
xchg
repz
cld
xorb
cwtl
mov
loopne
addr16
cmpsl
sub
xchg
aaa
orb
mov
inc
popa
mov
pop
popf
outsb
dec
cmpsb
xchg
lea
sti
inc
pop
daa
sub
dec
es
cmp
faddl
push
push
inc
stos
add
push
dec
in
scas
mov
jae
mov
mov
ja
das
lret
scas
sarl
lahf
pop
sbb
enter
pop
or
in
mov
outsl
lret
aad
jnp
jae
std
push
mov
adc
in
push
pushf
pop
clc
and
fstpl
adc
movsl
xchg
mov
lcall
inc
daa
insl
in
sub
test
scas
lea
ret
jae
mov
sti
mov
lock
xchg
sub
sbb
xchg
xor
pop
daa
cmp
pusha
roll
and
mov
je
int
es
sub
icebp
ret
movsl
jmp
push
xor
inc
cmpl
insl
cmp
out
je
mov
push
inc
cmp
xchg
ror
int3
xlat
cmc
enter
mov
fs
arpl
test
cwtl
ss
dec
cmpsl
xchg
jg
fldt
into
add
daa
rorl
jnp
sub
or
or
pop
loope
jne
enter
add
insb
or
insb
shll
sub
push
mov
inc
and
ljmp
repz
dec
popf
shlb
mov
jmp
fmuls
lea
icebp
dec
hlt
jno
mov
mov
pop
and
out
pop
add
pop
mov
pop
xchg
pop
and
push
xor
cmp
adc
js
sahf
idivb
in
call
movsl
dec
imul
jo
js
sti
stc
dec
pop
jne
add
push
mov
push
test
jno
sbb
fdivs
pushf
inc
push
std
cmp
ljmp
js
rcrl
sbb
daa
inc
xor
scas
inc
int3
lods
aas
das
push
xchg
inc
adc
gs
mov
mov
pushf
dec
icebp
jle
mov
or
js
mov
loop
pop
bswap
mov
dec
push
popa
sub
and
mov
ret
xor
ljmp
out
mov
pop
mov
dec
in
sbb
cld
repz
int3
sbb
mov
stc
shlb
sbb
out
gs
mov
mov
push
and
add
jl
mov
and
inc
push
jp
dec
and
movsb
cmp
xchg
adc
shrb
fisubs
stc
das
xchg
or
push
lods
loopne
sti
xchg
idivb
inc
mov
enter
out
cmpsl
neg
pop
in
mov
sub
or
inc
lret
adc
add
and
jae
sbb
cwtl
inc
movsl
lea
sub
fcomp
mov
in
cmp
xchg
in
fdivp
add
leave
lock
gs
ret
inc
outsl
mov
xor
mov
imul
add
lret
pop
cmp
jns
rcrl
aaa
cld
lds
gs
sub
and
ja
call
rorl
and
call
or
mov
sub
addr16
jns
push
mov
cmp
inc
push
movsb
lods
sbb
imul
pop
pop
inc
mov
icebp
das
and
jnp
inc
jns
cmp
dec
fisttpll
and
ror
pop
dec
int3
add
add
test
dec
push
mov
std
cmpsb
push
dec
pop
and
sbb
sahf
stos
sub
aaa
es
mov
cmp
pop
test
negl
pop
lods
push
inc
test
test
aad
shr
cwtl
fistpll
mov
mov
cmp
lret
sub
push
subb
daa
hlt
mov
mov
rcll
xor
aas
testb
xchg
fs
sbb
push
repz
or
test
or
aaa
push
scas
outsb
push
mov
pop
lea
xchg
loop
mov
shrl
les
jge
repnz
insb
xchg
sub
xchg
sbb
in
rol
fsubrs
lret
jne
push
dec
out
cmp
dec
mov
and
push
pop
pop
mov
sub
sahf
popl
lock
xchg
pop
pop
adc
outsl
lret
imul
jo
mov
sbb
sbb
jb
inc
jne
les
stos
ret
int3
cli
xor
pop
xchg
outsl
inc
int
inc
je
stc
into
sub
sub
sbb
cld
enter
out
dec
mov
xchg
mulb
aaa
ljmp
jnp
fnsave
adc
cs
idivl
out
jg
subb
lods
gs
rdpmc
notl
jp
xchg
mov
lea
leave
rol
push
xor
ljmp
lea
repz
xlat
cmp
popf
and
jge
shll
xchg
je
es
mov
push
xorl
popf
data16
push
pop
jle
jmp
jne
xchg
lret
jnp
movsb
and
mov
push
push
inc
pop
popf
call
jo
inc
fidivrs
movsl
dec
cmpsl
enter
sub
xchg
call
mov
leave
outsl
push
scas
incb
cmc
pop
pop
fists
enter
xor
dec
adc
je
jo
clc
and
jmp
jno
icebp
mov
fists
aad
out
inc
mov
fidivrl
movsl
adc
sbb
jmp
mov
stc
add
cli
movsb
mov
push
adc
int3
jge
je
clc
mov
enter
dec
pop
sbb
sbb
cmp
push
pop
test
mov
out
fcmovu
movsb
ljmp
clc
mov
inc
inc
cld
push
mov
fisubs
stos
mov
adc
sub
cmp
mov
push
xchg
xor
aaa
dec
je
pop
outsl
mov
sub
push
pop
inc
in
or
es
lds
int3
aas
repz
or
mov
dec
mov
add
notb
dec
jp
pop
mov
jns
mov
imul
shl
cli
rcr
mov
sti
pop
mov
or
test
das
ret
stos
xor
mov
insl
test
int
out
mov
mov
insb
inc
mov
cmc
xrelease
call
xor
psubsb
xor
sub
xchg
adc
mov
dec
xlat
pop
inc
cmp
mov
mov
mov
push
sub
adc
test
and
or
lcall
adcb
aaa
das
repz
into
push
popf
push
jns
in
lods
xchg
xor
xor
std
and
mov
stos
cld
jnp
push
dec
xchg
sub
push
xchg
lret
inc
aaa
es
push
jecxz
stos
inc
xchg
popa
test
cmp
mov
cs
sub
enter
pop
into
add
xchg
fs
clc
mov
cmp
test
aad
es
push
stos
xchg
shl
scas
stc
call
add
add
les
jge
and
aas
mov
push
xor
fs
sub
jbe
or
leave
shll
lods
test
and
adc
jmp
sub
test
pop
pop
shl
push
or
jmp
adc
push
inc
adc
sti
loope
loop
push
sub
xor
pop
sbb
insl
mov
jmp
jl
std
shll
inc
cmp
dec
cli
push
mov
mov
xor
pop
arpl
movsl
dec
ss
mov
jae
inc
dec
cmp
dec
insb
sub
jge
push
push
jno
or
lds
cmp
push
loope
bound
inc
sti
xor
or
hlt
ja
cmp
mov
test
insb
cwtl
mov
sub
pop
mul
pusha
lea
aaa
sarb
pushw
xor
das
popf
imul
pushf
or
int
notb
je
or
out
arpl
pop
loopne
rclb
sbb
hlt
fst
andl
xchg
or
pop
or
mov
jbe
mov
and
sub
das
hlt
dec
cmp
pushf
xchg
call
xor
adc
cmp
ret
add
dec
std
popf
add
xchg
rcll
cmp
in
cwtl
jo
mov
mov
loope
push
out
and
inc
rcrl
mov
lahf
enter
jnp
bound
adc
iret
fdivl
dec
sbb
mov
and
movsl
insl
push
and
cmp
sub
loop
out
dec
xchg
sarb
ja
xlat
bound
push
add
xchg
nopl
mov
xchg
mov
push
adc
push
movsl
lret
psadbw
ret
xor
ljmp
and
outsb
mov
imul
mov
and
cmpsb
or
pop
cmpsb
ret
pop
or
jns
jno
pop
push
cmp
jmp
pusha
test
or
shll
xchg
dec
ja
std
aaa
mov
and
jge
mov
ljmp
xchg
adcl
shl
ret
test
int3
jp
sbb
cs
pop
jmp
hlt
dec
push
cwtl
dec
rclb
rcr
pop
cmc
mov
lods
cmp
lret
add
or
cmp
lcall
add
pop
xchg
cli
ficomps
jb
bswap
mov
in
mov
mov
test
add
xor
insb
or
ljmp
hlt
dec
mov
dec
xchg
btr
pop
scas
les
cmc
sbb
imul
add
mov
jg
les
adc
xchg
jae
lahf
and
add
mov
push
pop
dec
test
jg
pop
ljmp
ja
lea
jb
std
mov
das
cmp
pop
imul
or
inc
mov
push
cmc
pop
popa
in
pop
shrb
mov
fidivrs
insb
dec
jg
pop
pop
orb
push
repnz
shr
xlat
jecxz
pop
fidivs
fstl
icebp
nop
mov
xchg
jo
cwtl
sti
clc
shlb
jge
sub
arpl
and
sbb
ljmp
pop
push
loopne
movsl
jge
rorb
ret
push
lock
in
pmulhw
sbb
cmp
xor
sub
test
mov
pop
rorl
inc
lock
dec
cs
xor
xchg
scas
ljmp
mov
push
inc
notb
fcmovnb
lock
jb
scas
sti
sbb
arpl
repz
dec
cli
push
and
hlt
mov
movsl
xor
adc
mov
sub
adc
mov
pusha
mov
mov
loop
aaa
fdivs
test
xchg
jp
adc
inc
and
ljmp
cmp
in
clc
in
loopne
mov
and
adc
aad
adc
addr16
sbb
dec
adc
jae
adc
push
fdivr
cwtl
inc
cmpsl
mov
jo
aaa
add
dec
aaa
sub
mov
jno
jle
mov
aas
jno
fcompl
js
iret
aaa
test
pusha
pop
aaa
pop
pop
gs
jp
lods
sub
inc
icebp
jne
mov
xchg
pushf
fs
in
jmp
cltd
push
idivl
jl
rcrb
jno
sbb
or
lods
mov
adc
sub
iret
xor
dec
das
xor
insb
pop
scas
dec
jp
inc
inc
jg
ja
ljmp
iret
xor
inc
adc
test
sub
subb
in
shl
mov
push
mov
pop
xor
push
or
mov
ja
mov
cs
xor
sahf
subl
leave
enter
mov
or
add
cmp
cmp
in
in
in
pushf
js
inc
adc
sahf
popa
mov
ds
mov
adc
out
in
push
jecxz
enter
xchg
adc
xor
pop
pop
add
mov
std
gs
lret
fbld
cwtl
jmp
test
inc
fnstcw
or
clc
jl
clc
fisttps
pop
leave
cmp
mov
ficoms
hlt
mov
dec
jp
dec
push
repz
push
push
mov
stc
jecxz
xchg
mov
pop
xor
lds
ljmp
out
fwait
aam
cmc
jo
sahf
movsl
mov
xor
nop
imul
jmp
test
int3
ret
shrb
les
movsl
int
aad
subb
insl
or
es
shrl
jo
xchg
insb
inc
rorb
aam
int
xchg
int3
inc
imul
ds
xor
lcall
push
inc
push
pop
pop
push
add
dec
les
jp
xchg
cmpsl
mov
out
and
pusha
xchg
mov
dec
push
inc
mov
aaa
lods
mov
imul
fidivl
inc
fistps
stos
sahf
loope
or
ror
and
inc
add
push
fnstenv
pusha
xchg
mov
push
bound
push
adc
adcl
inc
popl
testl
push
or
lods
arpl
imul
cmpsb
jecxz
xchg
sbb
xchg
out
jmp
mov
hlt
arpl
and
das
xchg
and
push
int
add
lea
outsb
xchg
je
pop
push
ss
out
mul
out
call
std
push
add
out
jno
adc
sub
pop
inc
subl
test
and
jl
scas
mov
imul
jo
mov
mov
xchg
sbb
inc
mov
out
mov
and
test
and
push
sub
dec
pop
adc
cmp
fsubl
pop
and
mov
and
xchg
mov
sub
mov
int3
jne
ss
scas
mov
jne
add
sub
mov
sbb
rorb
jg
aad
sbb
lret
jecxz
and
repz
sti
stos
sbb
cmc
insl
cs
icebp
pushl
sbb
loop
inc
hlt
data16
sarb
xchg
testb
ljmp
push
scas
push
fs
cmp
loope
jle
idivl
pop
xor
sarb
lahf
pop
mov
jg
cmp
dec
or
scas
cwtl
jb
mov
xchg
mov
les
or
popa
xchg
mov
fdivl
rcr
xchg
add
fcompl
push
ficoml
mov
dec
jo
jnp
insb
cmp
gs
leave
in
ds
dec
pop
mov
mov
cltd
popa
into
adc
mov
sbb
dec
sarb
test
mov
inc
loop
sub
hlt
push
lock
jae
imul
mov
mov
cmp
inc
push
inc
cli
xchg
add
neg
outsl
stos
es
mov
addr16
stc
es
aas
iret
out
repz
sahf
fisubs
bswap
or
je
ja
adc
rcrl
ficomps
lea
or
int
test
aam
test
mov
add
movb
push
addr16
mov
in
int3
sub
bound
fildl
push
and
stos
pop
dec
fldcw
xchg
cmpsb
dec
imul
and
jl
dec
popa
inc
in
fildl
stos
mov
xor
icebp
filds
dec
jnp
xor
adc
and
ss
and
or
jmp
cmp
movsl
inc
pushf
sub
int3
scas
push
adc
dec
or
mov
add
inc
loop
cli
jecxz
rorb
lret
pushf
adc
int3
in
add
int3
leave
add
push
cmpsl
insl
jecxz
jp
imul
push
dec
outsl
stos
pop
dec
xchg
push
flds
lahf
sbb
mov
lds
into
pop
js
mov
dec
push
mov
imul
pop
mov
add
sbbb
movsl
clc
add
adc
lods
in
or
mov
int3
test
jge
xchg
mov
das
pop
out
cmp
mov
dec
test
pop
adc
sub
jnp
loopne
jbe
daa
sub
mov
rcrl
adc
jg
xchg
mov
jbe
test
push
bound
mov
ljmp
rorl
mov
jg
decl
ja
mov
jae
pop
andl
jno
inc
or
notb
cli
jg
dec
dec
mov
push
pop
insb
xor
leave
frstor
loope
jo
dec
mov
dec
or
push
call
mov
je
sub
xor
jno
pushf
lods
loope
test
aam
mov
out
sti
lret
outsb
xlat
inc
out
and
push
fbld
pop
neg
or
inc
or
mov
xchg
inc
push
push
jmp
jecxz
cmp
mov
das
mov
mov
subl
cmp
dec
xchg
jp
outsb
add
test
mov
push
fidivrl
sti
cmp
sbb
or
popa
mov
movsl
addl
xchg
cwtl
push
mov
int
addl
jo
in
jge
imul
dec
mov
xchg
mov
jle
push
mov
mov
push
cli
insb
mov
pop
pushf
cmpsl
sub
or
andl
pop
pop
lds
lea
cld
aam
rcrb
mov
adc
jo
jnp
decl
inc
xor
lcall
and
push
and
or
push
enter
pop
lods
loop
dec
push
sub
mov
mov
cwtl
jb
rcrb
daa
jmp
pop
out
and
sti
inc
popf
and
jle
std
hlt
popa
jge
push
loopne
jne
icebp
mov
lods
sub
mov
test
loop
cwtl
xchg
je
movsl
jmp
push
insb
rcrl
pop
pop
cld
in
or
fisubrs
mov
sbb
test
clc
adcl
jmp
out
mov
rcrl
js
xor
mov
mov
mov
push
mov
insl
outsl
push
add
addr16
xchg
cmp
filds
push
cmp
fidivrs
and
ret
std
cmp
insb
cmc
sub
xor
xlat
rcl
dec
jns
and
sub
and
jle
cmp
outsb
jnp
call
scas
loope
add
adc
xor
cwtl
iret
sbbb
int3
enter
fs
das
subb
xor
mov
and
xchg
daa
dec
xor
sahf
test
cmp
sbb
enter
loop
cmc
mov
jnp
cmp
cmp
cltd
pop
sbb
push
insb
nop
mov
dec
xchg
out
sbb
sahf
imul
cmp
test
lods
mov
pop
lret
clc
addr16
aaa
and
pop
jge
fs
push
push
arpl
add
xor
cmp
pop
jp
and
iret
inc
cld
in
lahf
adc
or
push
xchg
in
push
aam
fldenv
push
inc
dec
sub
cltd
mov
cltd
stos
into
cltd
pop
inc
sub
jmp
push
popa
test
xor
pop
inc
mov
das
adc
push
arpl
dec
add
jmp
cmpsl
and
jl
imul
psrlq
pop
loop
cmp
imul
inc
sbb
in
les
nop
movsb
out
lahf
repz
pop
lea
mov
mov
or
outsl
leave
and
push
inc
fildl
push
mov
jae
loop
add
mov
sbb
mov
mov
out
cmp
push
mov
fwait
out
lods
hlt
int
sbb
or
enter
push
inc
xor
jne
cld
lock
mov
xchg
fstps
ret
gs
push
inc
je
mov
dec
int3
xchg
stos
repnz
mov
outsl
ja
sub
aad
es
int
sarb
movsb
sbbl
into
call
stos
aad
sbb
or
lock
jb
out
sbb
jne
orb
or
mov
mov
in
aad
arpl
mov
loopne
jne
out
xchg
mov
xchg
xor
cmp
in
jns
das
inc
stos
jne
ja
aam
or
lret
mov
out
adcl
mov
out
in
inc
mov
leave
sahf
adc
bound
das
mov
decb
out
rcll
fs
pop
mov
and
mov
mov
ds
pop
or
dec
cwtl
popa
outsb
add
jp
aam
pop
mov
inc
mov
into
sub
ss
ja
xchg
bound
inc
jb
pop
pop
sahf
push
mov
dec
mov
and
mov
lds
into
ss
mov
jmp
sub
xlat
and
out
xchg
jp
cmp
sti
js
cli
bound
push
xchg
gs
push
xor
adc
inc
cmp
or
xchg
imul
into
stos
mov
icebp
mov
test
into
inc
xchg
xchg
repz
lret
pop
js
iret
pop
cmpsl
cmp
jbe
sahf
sbb
inc
test
xchg
jnp
mov
cmp
leave
lods
or
xchg
jno
jg
jbe
aaa
cli
cmp
std
das
movsl
dec
js
push
aam
or
mov
jle
pop
mov
lret
das
stc
bound
sub
push
out
jns
icebp
dec
cltd
ds
mov
add
movsl
out
cmp
xor
imul
jl
fs
in
aad
loop
imull
lds
mov
sahf
xchg
outsl
ficompl
xchg
inc
push
sub
adc
mov
in
sbb
aad
enter
in
cwtl
mov
stos
fistpl
push
add
xchg
mov
jg
dec
cmp
lods
jo
jecxz
subps
fld
add
test
inc
xchg
not
xchg
push
cltd
popf
push
sub
loope
mov
mov
sub
push
push
int3
pop
mov
stc
add
movsl
and
push
ret
fstps
push
sub
frstor
fcoms
or
shufps
test
test
jmp
and
test
lret
std
sbb
mov
div
ljmp
arpl
je
inc
dec
mov
imul
dec
ret
ljmp
rcl
add
lahf
rorl
mov
movsl
notb
add
or
pop
jb
add
xor
stos
adc
push
inc
sahf
push
jmp
xchg
xchg
cmp
sub
divb
repz
add
mov
jg
aad
mov
fsubl
jge
insl
popf
je
jge
and
mov
cltd
xchg
ret
xchg
sbb
imul
int3
ret
ror
xlat
adc
cld
fwait
xchg
pop
in
out
jnp
xchg
jnp
add
mov
and
xor
cmp
cmc
and
fldenv
ret
jle
dec
jb
jb
mov
aaa
push
sarb
mov
xchg
inc
xchg
mov
jne
lahf
mov
cwtl
xchg
pop
jb
xchg
adc
loopne
xor
and
std
arpl
test
push
mov
scas
mov
pushf
xor
jae
jmp
outsb
test
mov
inc
shrb
test
loopne
call
in
mov
mov
mov
or
gs
data16
push
outsl
pusha
dec
cmp
push
fidivs
dec
decb
xor
mov
bound
lret
aam
xor
cwtl
cli
fldcw
mov
dec
sar
xchg
mov
insb
dec
mov
push
inc
fisttps
cltd
fcomps
inc
ljmp
push
pop
pop
cs
push
and
pop
adc
push
cmp
inc
lret
push
lret
lret
push
fists
jb
in
xchg
test
cs
outsb
xchg
stos
mov
or
cltd
arpl
add
movsl
mov
in
pusha
or
ret
scas
das
xchg
sub
shrb
mov
push
pushf
xlat
es
out
and
dec
sarl
adc
push
jge
sahf
add
sub
sub
push
mov
cmp
add
hlt
in
subl
mov
ds
adc
sub
ret
sbb
or
test
shl
push
psubb
dec
jo
push
xchg
cmpsl
cmpsb
loop
mov
aam
push
fdivrl
ret
test
push
cmpsb
xchg
xorl
shlb
mov
sarl
iret
daa
fdivl
les
or
ja
sbb
mov
xchg
fisubs
je
stc
xchg
and
pop
pop
mov
mov
push
into
cmp
movsb
and
lds
fwait
lods
adc
ss
xor
xor
or
hlt
mov
and
mov
subl
scas
and
dec
mov
sbb
mov
mov
push
mov
push
adc
fbld
arpl
lock
pop
jecxz
push
addr16
aam
sar
test
cld
rorb
cltd
fdivl
addr16
push
mov
in
movsl
fidivrl
scas
pop
add
or
lret
into
cmpsl
loope
js
cmp
lret
in
xor
das
mov
add
pop
popa
repz
sahf
pop
js
sub
fcoms
clc
jnp
fnsave
outsl
cmp
cmp
add
sbb
mov
rorl
cld
loop
inc
mov
mov
aad
and
int3
jmp
imul
mov
lea
sbb
imul
jb
pop
sub
adc
add
dec
xor
mov
cmc
movb
ja
shll
fs
cmp
stos
cmp
cmp
shrb
iret
xor
les
ds
sbbl
aam
pop
daa
dec
dec
sbb
imul
stos
int
iret
mov
or
test
insl
cwtl
out
icebp
dec
cmpsb
outsb
mov
cmp
and
xchg
mov
mov
adc
imul
xor
jae
fmull
mov
aas
xlat
aaa
xor
stos
cmc
xor
popa
push
bound
daa
push
sub
add
and
pop
sbb
adc
add
jnp
outsb
in
leave
pop
pushf
aaa
fucomi
push
movsb
aaa
inc
mov
mov
stos
jns
popf
aaa
cmp
xchg
arpl
inc
fwait
repz
and
adc
push
xchg
into
stos
cld
out
cli
mov
pop
or
mov
mov
push
int
jecxz
repz
jl
shll
pop
add
imul
xchg
out
push
jl
inc
inc
les
outsb
pop
clc
and
xchg
loop
dec
pop
das
aas
fildll
ds
or
hlt
dec
cld
movsb
mov
js
lahf
std
repnz
sbb
icebp
mov
faddl
lods
jmp
push
dec
cltd
aam
adc
inc
xor
lea
loope
jno
std
stc
jmp
decl
jo
call
and
push
dec
mov
jo
punpcklwd
or
add
lods
dec
xchg
js
iret
das
xchg
insb
in
test
adc
cmp
pop
fcompl
frstor
ljmp
pusha
cmpsb
or
rorl
push
lret
jg
ljmp
and
inc
neg
add
outsl
xchg
jno
mov
xor
or
mov
lea
xchg
pop
cli
jae
int3
mov
jecxz
mov
push
sbb
jg
divl
and
jno
pushf
mov
xor
out
arpl
faddl
inc
pop
or
dec
cmc
int3
clc
cli
lods
pop
mov
leave
iret
push
addl
push
movsl
shlb
insb
ds
nop
shlb
xor
fsub
rcrl
aas
xchg
jmp
push
mov
outsb
and
push
pop
lahf
data16
roll
jbe
or
adc
cld
sbb
push
aad
popf
adc
pop
pop
mov
push
xchg
or
or
cmpsb
iret
inc
and
xor
adc
lock
andl
push
jl
adc
cld
cmp
dec
jbe
adc
adc
adc
or
pop
mov
sbb
in
lock
cmc
or
sahf
or
add
mov
add
dec
push
mov
adc
mov
add
lcall
data16
jbe
cwtl
test
aad
mov
pop
sahf
or
jne
shrb
ret
or
bound
fwait
in
push
mov
mov
in
dec
sub
inc
mov
out
jnp
push
mov
cmp
int
popf
pushf
ja
jp
mov
addr16
xchg
nop
or
push
movsb
jecxz
je
mov
push
in
cwtl
insb
roll
or
arpl
jl
add
test
enter
xor
add
pop
adc
leave
push
imull
idiv
outsb
mov
sbb
sbb
pop
movsb
mov
rorb
mov
aam
aas
in
testl
sub
orb
loopne
adc
imul
inc
push
add
mov
add
leave
mov
push
mov
lods
dec
stos
mov
push
out
mov
shll
ficoms
dec
adc
fstl
in
push
hlt
mov
mov
sub
jl
lea
addb
test
insb
xchg
sarl
call
adc
mov
enter
mov
mov
mov
insl
sbb
sub
stos
aaa
fucomi
mov
test
idivl
inc
xchg
mov
dec
mov
pop
std
sub
dec
jb
subl
lock
pop
sub
dec
idivl
xchg
out
fstl
popa
jbe
fstl
sbb
mov
mov
xchg
adc
xorl
cmc
test
adc
pop
data16
bound
pop
pushf
enter
inc
mov
mov
sub
scas
lret
mov
inc
push
ds
cmp
inc
and
arpl
imul
daa
jne
insb
fisttpl
push
in
out
mov
cld
adc
out
faddl
mov
xor
jp
fisubl
scas
jle
cmp
fnstcw
icebp
push
xor
jne
dec
les
insb
popa
ja
lcall
test
mov
rcll
mov
push
xor
scas
push
enter
fildll
add
in
mov
push
push
data16
sbb
lock
and
jo
mov
sub
repnz
jno
insl
jmp
pop
scas
jecxz
insl
sub
jmp
and
movsb
cmp
cltd
fdivl
add
inc
xchg
sahf
push
jae
cmp
pop
mov
cld
jno
in
aaa
fidivs
gs
sbb
add
je
cmp
mov
mov
in
xchg
inc
jo
insl
shl
xchg
lock
pop
cmp
fbstp
mov
sbb
jb
dec
xchg
dec
fs
jge,pt
js
push
pushf
aaa
inc
mov
mov
pop
outsl
jl
mov
sbb
rcr
jbe
stc
fidivs
inc
push
mov
jecxz
lret
in
cmp
mov
stos
sbbl
jecxz
jo
push
insb
lds
sbb
stos
nop
fistpl
jnp
sti
jae
inc
jmp
jo
jne
mov
loopne
mov
mov
and
shll
aaa
loope
sub
or
test
arpl
repz
in
cwtl
xor
iret
ret
jg
push
out
adc
mov
stos
mov
cmp
loope
test
loopne
inc
mov
sahf
ja
fistpll
xor
mov
outsb
lds
lret
lock
push
mov
les
xchg
stos
push
popa
fdiv
jecxz
mov
aas
sub
dec
sub
outsb
xchg
xchg
adc
scas
mov
lret
jb
mov
add
pop
xchg
mov
jne
dec
in
jno
hlt
mov
jmp
xchg
xlat
mov
out
pop
sbb
dec
adc
and
fdivs
pop
fwait
and
sub
in
mov
movsl
aas
ds
arpl
push
and
leave
ss
sahf
icebp
lcall
test
incl
shlb
test
mov
mov
insb
mov
lods
adc
andl
and
push
sub
inc
mov
sub
aaa
notl
cmp
inc
and
fdivl
stos
jb
and
and
ja
add
loope
std
xchg
jge
dec
cwtl
popf
sub
cmc
and
push
mov
or
mov
pop
pop
push
or
cs
push
out
stos
cmp
dec
xlat
out
or
cmpsl
aam
lahf
jmp
xlat
sbb
adcb
inc
cmpsb
das
dec
ret
lods
aam
or
mov
fdivl
jmp
push
je
push
mov
adc
push
inc
jmp
xor
mov
jo
push
and
jmp
into
jae
repnz
dec
sti
inc
push
in
fisubs
scas
fwait
mov
sbb
jl
xor
loopne
xchg
jbe
in
sub
lret
jne
pop
push
pop
pushf
gs
fiaddl
cmp
lcall
dec
jne
cmpsl
xor
loopne
adc
cmp
xor
in
inc
mov
xor
mov
push
int
dec
push
in
testb
adc
xor
sub
cmc
inc
mov
cmp
lds
mov
mov
int
mov
pop
add
xor
sbb
jbe
int
mov
mov
dec
xchg
or
inc
adc
jp
or
out
sub
loope
enter
jge
cmp
xlat
pop
cltd
inc
xor
inc
sub
mov
sti
xchg
jg
cwtl
adc
stos
xor
aam
sub
lret
bound
pop
sbb
fistps
jo
dec
mulb
push
lcall
clc
push
aad
imul
les
das
mov
sub
movsb
or
mov
xchg
lods
xchg
pop
fstl
hlt
sahf
addr16
lods
jle
or
addr16
into
pop
ficoms
lret
std
inc
dec
mov
jp
inc
lea
mov
stos
mov
mov
bound
mov
mov
xor
inc
jle
int
aad
adc
xor
xchg
lods
push
xor
sahf
cs
stos
sbb
fdiv
xor
loope
int
dec
cwtl
jmp
cwtl
mov
lods
lds
push
ret
pop
mov
hlt
jnp
repz
pushf
ds
pushf
sahf
mov
xor
arpl
fdivr
aad
adc
popf
dec
in
dec
and
lods
jae
out
xchg
or
insb
xchg
repnz
push
cs
inc
popa
cld
pop
mov
push
inc
jge
pop
push
lods
mov
movsl
xchg
mov
mov
push
cmp
adc
push
je
aaa
repz
sub
jg
dec
cmp
icebp
icebp
in
pop
int
cld
dec
xor
inc
cld
xor
scas
inc
add
subb
test
xor
loope
orb
mov
or
lahf
fs
jmp
movsl
shl
arpl
cmpsb
es
jge
dec
xlat
mov
mov
and
push
je
inc
jnp
orb
pop
or
mov
popf
xor
lock
icebp
mov
fstpl
add
gs
pop
or
xor
pop
adc
cmpsl
in
out
rcrl
enter
sarb
enter
mov
loope
negb
arpl
push
sub
jo
mov
neg
insb
std
std
xchg
xor
or
jmp
popa
add
not
mov
or
sub
xlat
pushf
imul
jmp
decb
mov
in
mov
push
les
call
cs
inc
mov
jmp
rorl
in
ss
into
out
imul
and
jns
dec
dec
aam
and
jp
mov
and
sbb
or
lea
enter
repnz
jns
sbb
sahf
inc
inc
or
repz
push
ja
inc
fcoml
xorb
cli
test
in
dec
push
notl
cmp
mov
repnz
je
pop
mov
jnp
iret
leave
loop
xor
out
mov
cli
bound
shrl
bound
xchg
stos
mov
sbb
push
shll
dec
mov
les
pop
mov
repnz
xor
jae
pop
cmp
pop
negb
dec
jns
pop
push
add
push
out
lds
fidivrs
arpl
xchg
out
add
fistps
shrb
pushf
pop
cmp
sarl
iret
outsl
lea
pop
inc
aaa
mov
push
sub
cmp
scas
movsb
pushf
mov
pop
push
imull
inc
test
xor
xchg
movl
jge
push
and
loopne
mov
outsl
push
test
cmpsl
imull
sbb
fdivs
cmpl
int
xchg
in
jecxz
and
fsubrl
int3
cmp
mov
lods
add
movntq
adc
jle
aad
jne
and
les
cmc
stc
out
or
aad
add
jae
mov
enter
pusha
int3
std
popf
outsb
scas
stos
mov
iret
mov
lret
push
sbb
xor
int
js,pt
incb
scas
popa
into
hlt
test
cmp
xor
lcall
daa
push
sub
loop
jg
loop
outsl
mov
dec
pop
mov
sbb
xchg
cmp
adc
xor
add
mov
repnz
shrb
dec
jne
icebp
push
lods
xor
xchg
imul
cld
adc
ja
repnz
leave
cmc
pop
sub
rcl
xor
xchg
jg
inc
pushf
loopne
lahf
out
push
mov
adc
push
xor
js
outsl
mov
xchg
cli
sbb
pop
jecxz
fadd
ljmp
xchg
pop
test
call
fnsave
lret
cmp
push
mov
add
push
push
and
aad
jnp
fnstenv
fisttpll
sub
adc
loop
loopne
or
clc
xor
cmp
rdmsr
cmpsb
enter
xchg
and
stos
dec
arpl
in
imul
pop
cmp
data16
and
sub
cmpsl
cs
mov
dec
sub
xchg
paddd
pop
enter
mov
int3
fidivrs
and
test
pop
push
icebp
inc
movl
repnz
shll
pop
jns
adc
sub
cld
fs
shr
iret
out
aas
jmp
sahf
cmpsl
int
mov
aad
inc
arpl
movsl
gs
push
adc
adc
push
and
pop
ja
movaps
repz
jne
jecxz
mov
add
jne
ss
aam
jo
push
jne
ljmp
clc
cs
sarb
aad
mov
aas
stos
jp
imul
lock
mov
scas
mov
push
loope
pop
scas
scas
in
mov
and
xor
cmp
add
rol
pop
dec
enter
popfw
ds
inc
rolb
jo
sbb
pop
pop
mov
sub
test
inc
xchg
out
mov
jae
jmp
enter
add
out
sti
addr16
adc
mov
lret
fisubs
call
ret
add
mov
jb
sahf
cld
xchg
mov
pop
pop
mov
and
pop
nop
mov
fnsave
lds
jns
loopne
dec
or
inc
scas
in
or
sbb
shl
fldcw
dec
jl
xchg
mov
xlat
sub
insb
add
xor
dec
cld
or
bound
xchg
out
push
aaa
mov
mov
call
jge
std
outsl
jg
shl
adc
add
sbb
or
sub
dec
outsb
pop
pcmpgtw
gs
sub
popa
inc
inc
jle
jl
imul
mov
insb
loop
mov
dec
out
mov
mov
lret
sub
jno
insb
fnstsw
jo
and
mov
mov
aaa
xchg
nop
pusha
repnz
and
loope
lods
mov
push
push
je
push
jns
mov
mov
dec
shlb
jle
clc
je
lds
pop
dec
leave
das
stc
mov
lods
pushf
jge
jo
out
mov
sbb
lcall
xchg
cwtl
mov
data16
or
int3
mov
mov
imul
imul
cld
scas
xor
mov
lcall
sbb
fs
stos
lock
mov
in
add
mov
or
scas
cmpsl
clc
cli
movsl
xor
xor
push
movb
popa
int3
xchg
outsb
lret
cmpsl
or
mov
mov
mov
lcall
mov
ret
lret
orl
cmp
imul
rcll
cmpl
mov
cwtl
jne
movsl
daa
sbb
popf
stos
inc
inc
mov
push
outsl
cmp
xchg
std
sub
inc
push
sub
stc
es
addr16
fadd
sarl
cmp
push
adc
sahf
test
mov
mov
es
aas
out
sbb
mov
sub
lds
and
jns
ret
push
sahf
je
pop
mov
or
insl
ret
rcrl
std
xchg
popa
dec
mov
mov
and
mov
mov
sub
pop
push
mov
jle
rolb
and
adc
out
pushf
mov
cltd
xor
dec
call
inc
lods
mov
sbb
in
and
dec
pusha
pop
mov
or
insl
cmp
or
jmp
or
sub
pop
xor
jecxz
pop
je
push
inc
insl
xchg
sbb
dec
arpl
in
ret
mov
fldenv
xchg
icebp
ds
std
adc
ss
lret
cwtl
pop
push
push
xor
or
fmull
inc
enter
cli
clc
jo
pop
dec
jmp
out
xor
mov
shl
rcrl
push
xor
and
call
inc
sarl
addr16
jmp
bnd
lods
out
mov
movsl
insb
std
jg
sbb
call
mov
jne
imul
adc
es
inc
xorl
push
inc
das
jns
pop
in
dec
fucomip
mov
nop
xor
pop
lcall
movsl
adc
insl
inc
xor
or
nop
mov
or
xor
jb
sti
sub
pop
in
scas
mov
add
lods
ja
mov
stc
sbb
leave
adc
int3
in
jl
push
and
inc
or
rorb
pop
adc
xor
stc
fs
jmp
fucomip
int3
iret
jnp
mov
dec
test
fucomip
icebp
inc
les
pusha
inc
xchg
or
imul
movsb
pop
or
and
inc
mov
jg
lret
jo
in
jno
dec
mov
mov
mov
sbb
pop
mov
mul
pusha
into
loope
sbb
test
sbb
daa
mov
out
lret
scas
add
and
mov
adc
xor
pushf
repnz
xor
ficomps
mov
mov
inc
sbb
xor
mov
add
mov
fldenv
int3
int3
lret
icebp
jmp
or
outsl
cld
imulb
mov
mov
fs
inc
jae
aad
movsb
out
enter
mov
xchg
pop
push
cs
int3
add
mov
sbbl
addr16
jbe
adc
insl
add
adcl
jb
insl
pop
sti
cld
fsubp
and
iret
cmp
outsl
movl
inc
ds
xor
dec
fwait
jmp
jno
mov
fmul
dec
incb
pusha
out
add
cltd
stc
fwait
push
es
mov
jae
push
pop
clc
push
movsl
xor
jg
ljmp
mov
pop
cmp
and
imul
inc
test
cli
mov
out
js
popa
int3
imul
and
pop
cwtl
sahf
mov
sub
inc
loope
pop
bnd
hlt
xor
int3
cli
jbe
sti
pop
test
jbe
xor
ret
sub
push
pop
out
ret
inc
adc
popa
mov
repz
push
es
shl
push
test
and
cli
cli
push
aad
adc
xchg
sbb
in
xchg
mov
mov
iret
in
adc
aaa
sbb
pop
cmc
pop
sub
aam
sti
lods
repnz
adc
stc
nop
sbb
dec
jne
out
aam
rorb
add
pop
adc
scas
mov
push
jne
push
mov
and
repz
push
sbb
add
data16
icebp
cmp
sub
pop
mul
in
mov
lahf
cmp
mov
cs
pop
repz
fisttps
mov
hlt
fs
pop
fs
stos
fistl
lods
popa
cmp
arpl
mov
push
and
add
je
mov
xlat
sbb
inc
jo
data16
cmp
js
btcl
std
push
sahf
fmull
aam
popa
int3
dec
stos
es
les
dec
popf
ret
sbb
rcrb
push
dec
sub
cmc
push
dec
std
mov
sub
dec
aam
test
fwait
mov
add
decl
inc
pop
xlat
cmp
add
jns
fldenv
pop
adc
xor
sbb
stc
iret
sbb
in
jb
test
push
scas
orb
mov
mov
iret
dec
aaa
or
stc
or
inc
loopne
sbb
sahf
call
push
sub
aaa
sar
sub
imul
push
push
or
scas
push
fwait
sub
mov
mov
xlat
loop
mov
push
push
pop
jae
sub
js
es
insb
lret
lods
sub
and
mov
add
adc
ja
add
dec
jg
jmp
aad
lcall
aaa
push
add
jo
push
xor
mov
inc
and
cmpl
addb
sub
push
mov
mov
ffree
mov
add
inc
sub
or
call
or
sbb
fst
pop
out
aas
stc
cmp
daa
mov
fs
ds
std
xchg
add
cmp
jl
ret
sti
xor
cld
adc
push
cmp
insl
stc
dec
lret
sahf
ja
out
mov
icebp
cwtl
adcl
mov
mov
cmp
mov
xor
fldenv
xor
xor
mov
mov
fwait
aad
push
out
mov
or
roll
xor
pop
mov
xor
sar
dec
cli
je
bound
mov
loope
iret
pop
in
sbb
leave
in
mov
dec
xlat
scas
les
dec
in
sbb
and
mov
sub
jecxz
push
daa
mov
add
sbb
or
sahf
jmp
xlat
sub
fisubs
repnz
or
xchg
xor
ficompl
push
out
mov
cmp
sarb
fnstenv
aam
frstor
push
mov
mov
rcrb
stc
ja
pop
ds
xor
jae
mov
sbb
adc
cmp
dec
imull
push
xchg
push
push
sub
push
push
out
mov
cmpsb
pushf
stc
mov
popf
pop
mov
mov
cs
cmp
fiadds
add
shll
inc
adcb
cmc
sbb
aam
inc
xchg
aad
pop
lret
add
push
push
cmp
adc
sbbb
cld
push
jo
scas
mov
aad
jle
out
shrl
repz
sub
loopne
adc
lret
test
jb
add
mov
lret
cmc
sti
out
sub
sbb
dec
movsl
jae
adcl
lret
add
xor
mov
nop
xchg
and
aas
fwait
xchg
sbb
scas
data16
inc
out
push
xor
addr16
rcrb
push
inc
mov
mov
cld
stos
aas
xlat
lods
dec
bound
mov
jbe
shll
xchg
pop
ret
mov
adc
xor
insl
in
add
insl
movsl
push
insl
in
xchg
jl
por
insb
jecxz
je
jb
mov
adc
mov
lock
pop
pusha
add
jg
xchg
lods
cli
sbb
lods
mov
xor
leave
jge
jno
mov
es
cmpsl
call
into
out
mov
fwait
aam
or
shl
je
and
and
mov
dec
fwait
popa
xchg
es
adc
sub
jp
andb
test
ret
push
dec
adc
pop
stos
mov
inc
repz
loopne
notb
jnp
push
jno
cld
stos
pop
es
shrb
push
sbb
aas
add
pop
cmpsl
jno
jne
push
push
pusha
call
mov
lret
ds
push
sahf
imul
mov
sti
das
xor
idivb
fsts
aad
int3
in
imul
aad
xor
adc
jle
popa
cmpsb
ds
xchg
data16
xor
outsb
jecxz
jo
dec
repz
incb
mov
rclb
sub
test
xchg
fstps
js
jmp
inc
mov
or
push
fstl
pop
dec
addr16
xchg
add
dec
push
es
aas
fsub
out
mov
and
rorb
mov
sub
outsb
xor
pop
cli
jecxz
enter
fimull
or
sbb
sarb
mov
jae
filds
push
mov
insl
cmc
not
jnp
adc
jo
cmc
mov
or
cld
cmp
aaa
enter
jg
scas
std
cmpsb
mov
sbb
outsb
out
and
fwait
daa
xchg
push
lret
mov
enter
loopne
std
pop
repnz
xor
cmc
mov
and
push
mov
inc
mov
ffreep
sub
movsl
adc
aad
cli
popf
xchg
or
test
lea
add
in
daa
push
repnz
sbb
sub
fnstsw
imul
cmp
sub
fst
or
fsubrs
mov
rorl
loope
jne
adc
and
lret
mov
stc
pop
cmp
fcompl
jbe
jmp
lret
mov
dec
in
push
loop
lods
xchg
jb
call
lods
fnstcw
flds
sbb
sbb
rcll
mov
test
mov
cld
jns
add
test
push
inc
leave
call
xchg
sbb
push
push
adc
test
adc
nop
fstl
pop
xor
inc
add
int
addl
cltd
mov
add
push
mov
xchg
int3
shr
push
loopne
pop
cmpsb
sbb
aaa
fisttps
pop
lock
es
cmp
cmp
je
popf
je
xchg
mov
jecxz
shl
xlat
jne
add
jns
rcrl
mov
sti
ds
or
out
das
mov
mov
cmp
imul
xchg
adc
hlt
fwait
mov
cmp
loop
mov
jmp
sbbl
pop
push
mov
mov
movsb
leave
jle
insb
stc
jge
sbb
jmp
jmp
sbb
push
mov
xor
out
gs
addr16
push
or
push
addr16
fstl
stc
cmpsl
aaa
repz
sbbb
enter
pop
jl
push
mov
mov
incb
popf
adc
pop
pop
iret
mov
push
sub
cmpsl
loope
icebp
jnp,pt
aaa
sbb
dec
outsl
rolb
inc
jbe
stos
les
insl
sub
test
xrelease
jb
mov
minps
push
cltd
dec
mov
inc
xor
cmp
xorl
mov
adc
sub
rcrb
xlat
dec
ss
push
add
mov
stos
aam
cmp
mov
sub
mov
jns
mov
ss
and
cmp
xchg
cmpb
mov
and
sbb
add
enter
xor
imul
shl
inc
or
mov
insb
fisubrs
insb
sarl
dec
mov
daa
cs
test
rolb
icebp
lds
lcall
inc
pop
pop
aaa
mov
mov
add
loop
mov
nop
jle
cmp
nop
lahf
lods
sbb
ljmp
mov
jmp
mov
imull
push
adc
cwtl
inc
jo
or
inc
mov
test
cs
jp
cld
adc
arpl
mov
mov
sbb
adc
jl
push
add
je
jo
imul
inc
xlat
insl
adc
call
sbb
pushf
jbe
and
std
and
ret
lret
xchg
nop
shr
fnsave
xchg
cwtl
arpl
dec
mov
mov
xor
jnp
push
inc
sub
pop
sbb
pusha
inc
add
es
mov
inc
test
xchg
mov
test
mov
loope
adc
stos
out
dec
out
xchg
dec
fwait
orb
lahf
sti
fs
aas
lcall
push
cwtl
stos
lret
sub
or
icebp
fstpl
sub
mov
aaa
mov
dec
subb
sub
sbb
push
test
popf
lods
adc
out
push
popa
out
mov
outsb
jecxz
pop
xchg
lret
out
xor
mov
inc
xchg
sti
in
sub
sub
addl
push
loopne
loopne
ret
adc
sbb
out
jmp
orl
xchg
pop
loop
cmpsl
xchg
push
insb
mov
in
int3
repz
stc
loop
sub
xor
mov
sbb
popf
leave
mov
lcall
mov
mov
xchg
data16
std
or
pop
mov
add
xchg
or
testb
stos
bound
addr16
mov
mov
push
dec
sub
je
mov
xchg
jg
das
or
cs
rcrb
mov
in
stc
out
orb
mov
sti
popa
mov
mov
mov
jns
push
popa
and
lock
hlt
pop
sbb
ja
scas
test
std
sbb
dec
push
sub
xor
cmpb
mov
push
mov
push
jl
lahf
inc
int
mov
lahf
xchg
jl,pn
mov
or
xchg
mov
sbb
cmp
mov
jb
cmpsb
dec
lods
gs
repz
into
xchg
adc
jnp
or
xchg
imul
sti
mov
pop
pop
mov
or
add
cmp
xor
jb
pop
mov
cmp
mov
lock
jmp
dec
loope
sbb
mov
cmc
mov
adc
insb
rorb
int3
out
fs
and
mov
dec
lea
mov
and
cmp
or
mov
mov
fcoml
lahf
lcall
cmp
stc
dec
fwait
cmc
scas
lret
xlat
mov
cmpb
sbb
sbb
into
test
mov
pop
jo
loope
adc
jae
sub
std
adc
jbe
pop
in
jne
sub
sub
sub
inc
daa
adc
pop
xor
das
stc
jecxz
stos
pop
cmp
pop
dec
pop
test
mov
mov
int3
seto
int
cmp
adc
dec
fidivrl
add
leave
int
loop
fldenv
dec
jp
mov
cs
test
push
and
push
xor
jle
into
mov
mov
xor
inc
jle
jecxz
xchg
ret
mov
push
int
ja
in
xchg
repz
cmp
fstpl
js
mov
stos
orb
push
arpl
mov
or
dec
int
adc
shl
xchg
bound
test
cmp
cmp
leave
cli
add
gs
cltd
or
sub
push
popf
cmpsb
je
sbb
hlt
shrl
mov
gs
jb
sahf
mov
pop
lret
in
push
scas
mov
mov
ljmp
mov
fwait
loop
test
push
xchg
jbe
cmc
mov
mov
jo
mov
rolb
iret
nop
sub
jecxz
in
icebp
pushl
sbb
adc
ds
aad
rep
data16
and
mov
call
aas
cli
jle
dec
xchg
mov
mov
cltd
pop
pushf
push
call
pop
xchg
xlat
scas
adc
sbb
add
fwait
sub
ret
push
mov
dec
fucomi
pop
dec
mov
push
cmp
mov
movl
cmp
cmp
test
sbb
inc
call
jge
mov
mov
xchg
adc
stos
sbb
adc
mov
stc
pop
cmp
andb
enter
nop
push
mov
lds
scas
stc
nop
cmp
lahf
dec
or
jbe
repz
test
imul
adcl
push
lods
adc
mov
outsb
arpl
testb
mov
fidivrl
push
in
dec
jne
mov
jecxz
in
mov
lret
jne
fcmovnb
rorl
arpl
sub
test
cmpsl
negb
sahf
jns
pop
jmp
les
popa
sub
fdiv
loope
xor
popf
pop
data16
or
jne
sbb
int
scas
cmpsl
pop
inc
jp
pop
roll
adc
mov
test
out
daa
jmp
outsl
fsubl
out
mov
xlat
orb
xor
jo
sbb
nop
push
push
dec
adc
dec
fidivs
fildll
dec
ret
imul
xor
lds
in
and
cld
lcall
idivb
fs
push
inc
sahf
cmp
and
movsl
aad
sbb
mov
lcall
out
int
das
xor
inc
xor
or
mov
int3
cmpsl
or
aas
das
lret
notl
je
jne
faddl
dec
xchg
aad
dec
cmpsl
cwtl
jmp
add
test
aaa
xor
mov
pop
push
push
shrb
loop
cs
xchg
insb
ja
mov
or
sub
lcall
dec
dec
movsb
pop
or
dec
fldl2t
sub
mov
imul
stc
clc
xorl
icebp
loop
xchg
iret
mov
ja
push
addr16
mov
inc
ss
push
outsl
lock
addr16
mov
jbe
mov
lret
or
cwtl
xchg
test
adc
cmp
addr16
mov
xchg
sub
in
xchg
add
andl
call
les
pop
into
pop
je
or
fwait
cltd
xchg
mov
fstpt
and
fs
repnz
pop
jmp
mov
push
std
js
dec
jbe
imul
test
mov
es
mov
mov
sbb
jo
jl
mov
stc
cmp
sbb
cmp
test
mov
icebp
pop
adc
push
mov
lret
mov
sbb
sbb
loopne
sti
stos
mov
xor
mov
addr16
xchg
dec
sub
scas
fsubs
sub
enter
roll
popf
fwait
out
inc
std
mov
dec
mov
imul
imul
addr16
cmp
lea
sarl
push
nop
hlt
pushl
cmp
dec
into
divl
fimuls
or
hlt
mov
mov
dec
loop
imul
pop
cmpsl
mov
xor
int
cltd
mov
loopne
enter
mov
mov
cmp
cmp
vmovmskpd
jmp
add
adc
cmp
in
aas
xchg
and
sbbl
fimull
fidivl
push
mov
cmp
xchg
inc
push
cmp
xchg
mov
pusha
in
test
mov
mov
cmpsl
out
xchg
lcall
fwait
dec
aam
cmp
and
pop
fs
mov
into
xchg
cmp
jo
inc
and
test
lods
xor
mov
mov
out
xlat
movsb
lods
and
iret
ss
clc
push
or
xor
or
call
add
push
aad
scas
pusha
jns
leave
outsb
outsl
push
xor
pushf
mov
rorl
xchg
enter
dec
ret
aam
jge
faddp
cmc
je
testb
mov
sub
jne
xchg
dec
in
adc
aad
repz
test
xchg
mov
insb
jnp
cmp
out
inc
xor
jb
push
fidivs
nop
repnz
lret
and
pushf
clc
cmp
dec
int3
shrb
jnp
dec
popf
mov
cmp
ret
xor
xor
rcr
mov
sbb
into
aas
repnz
cli
and
std
sub
lahf
push
aaa
addl
scas
or
out
xlat
aaa
rorb
jb
sbb
arpl
in
les
xor
nop
aaa
shrb
jnp
shll
push
test
leave
jle
cld
ret
shl
test
adc
clc
inc
mov
pop
inc
cmp
scas
fnsave
testb
wbinvd
lods
push
push
scas
mov
es
neg
sub
jo
mov
pop
daa
sbb
int
jl
sub
inc
or
mul
test
in
shll
and
enter
fbstp
incl
and
es
sbb
adc
push
sub
fucomi
add
adc
pop
sbb
xor
imul
inc
mov
sbb
add
in
adc
mov
jmp
clc
enter
pop
cmp
xor
dec
xchg
push
adc
jnp
lods
es
or
mov
push
or
cmp
xor
xchg
inc
in
push
push
and
int
xor
push
adc
mull
jne
gs
mov
or
int3
adc
adc
lret
cmpsb
es
lahf
jge
lahf
add
sub
std
inc
icebp
pop
push
popf
sarb
stc
arpl
push
mov
ficompl
xchg
push
cmp
inc
imul
in
int
lahf
ss
popa
call
icebp
popf
std
cmp
adc
jp
pop
cli
jl
xor
enter
cmp
xor
into
or
mov
pop
xor
jno
adc
loop
out
sub
push
mov
in
cmp
outsl
dec
mov
negb
xchg
or
push
call
jle
pop
dec
pop
sub
nop
addr16
dec
push
lret
mov
lahf
addl
sbb
or
fcoms
cmc
inc
jno
cmc
cmc
sbb
movsl
dec
mov
and
sahf
popa
outsl
sub
dec
xor
mov
jne
or
dec
push
rorb
jo
loop
add
jmp
xchg
cs
cmp
or
xlat
loopne,pt
pop
mov
dec
mov
add
push
cmp
xchg
jns
xchg
sub
aam
sub
push
jne
lea
push
adc
push
and
gs
in
rcr
push
mov
push
sub
stos
sub
and
lcall
test
cwtl
fsub
dec
jbe
push
push
jnp
and
sti
outsl
push
pop
or
add
shl
mov
mov
nop
or
xchg
push
jmp
out
or
lcall
out
xor
or
pop
sub
in
sbb
gs
inc
cmpsl
push
std
ss
mov
jmp
adc
mov
jno
in
xchg
dec
daa
mov
andl
jbe
cmp
cltd
xor
gs
jmp
mov
push
pop
jae
leave
into
stos
lahf
xchg
push
lods
fdivrs
adc
xlat
mov
sub
sbb
lods
hlt
cmp
fnsave
sub
pusha
mov
lcall
aas
pop
add
cs
and
ss
and
mov
in
and
bound
xrelease
adc
xchg
insb
lods
lcall
cmp
mov
pop
movsb
shlb
xchg
or
aam
mov
sub
lcall
or
pop
jl
outsl
lcall
jmp
and
push
push
shr
test
pop
push
cli
xchg
dec
mov
mov
push
dec
cwtl
sub
jecxz
aam
pushf
std
jge
iret
addr16
push
pushf
repnz
pop
pop
lea
rorb
fdivs
ss
mov
aas
inc
call
aad
aaa
std
lahf
push
fsubs
imul
lret
xor
or
jle
inc
cltd
lcall
pop
enter
aad
cwtl
push
test
mov
aam
mov
fs
pop
mov
push
add
jg
add
hlt
xchg
xor
sbb
sbb
adc
rorl
lds
mov
call
cmc
cwtl
movsb
dec
pop
das
mov
sti
mov
fs
pop
mov
loopne
or
or
xor
loop
sub
gs
sbb
cmc
arpl
rcll
and
ds
fmull
pop
dec
inc
jge
push
jmp
push
ficomps
add
cmp
in
insl
into
sti
xor
add
mov
out
push
jns
sahf
pop
inc
cmp
les
scas
imul
sbb
int
inc
jge
xor
add
pop
fsubrs
mov
ljmp
inc
jmp
mov
ja
xor
js
adc
inc
lahf
enter
push
push
cs
xchg
sbb
adc
fimuls
lods
cmp
sti
mov
jbe
pushf
cmp
int
cmc
imul
mov
fwait
jmp
sahf
xor
jmp
jnp
decb
insb
cmp
add
outsl
std
or
mov
jb
or
inc
stos
xchg
mov
and
adc
in
jle
push
or
mov
jecxz
jge
icebp
arpl
mov
mov
shr
arpl
cmp
xchg
lret
enter
xor
dec
push
push
and
mov
adc
imul
sub
adc
rol
icebp
rol
inc
xor
sub
in
inc
cld
orl
imul
mov
and
jg
mov
pop
out
idivb
les
mov
out
mov
push
int
pop
xchg
in
out
es
fiadds
stos
mov
orb
mov
xlat
mov
shl
lcall
pop
sub
rorl
push
scas
fcmovnbe
jae
xor
mov
jo
mov
adc
jnp
push
movsb
mov
cmp
sbb
setge
int3
fmull
cmp
lods
in
mov
rcrl
inc
xchg
cmpsb
enter
es
push
aaa
insl
or
mov
push
inc
lret
sbbl
int
ljmp
repnz
sbb
aaa
ds
gs
imul
xchg
ficompl
scas
mov
mov
add
pop
pop
imul
scas
cmp
cmpl
mov
push
out
cmp
push
dec
movsb
inc
cmp
scas
js
lret
sbb
dec
add
pushf
jg
out
aaa
test
dec
repz
clc
mov
sub
pusha
movsl
dec
mov
inc
nopl
jl
das
add
add
aaa
xor
cmp
jnp
lahf
cmp
sub
popa
loopne
aaa
sbb
sbb
icebp
xchg
in
adc
inc
xor
fs
and
and
jne
adc
ljmp
lahf
jb
mov
outsl
and
shll
or
adc
adc
popa
ror
stc
pop
and
or
in
imul
ret
cltd
jge
jo
aad
xlat
shll
xchg
lret
pop
sub
xchg
push
jge
jne
or
leave
pop
xlat
loop
pop
dec
inc
lods
stos
fisttps
push
mull
fs
xor
in
cmp
sub
adc
adc
aas
das
icebp
icebp
jb
je
std
dec
cmpsl
dec
sub
mov
mov
cmp
inc
insb
push
jb
loop
jb
xchg
addr16
jl
push
cmp
cmc
or
push
xchg
xor
pop
mov
insl
xor
jbe
inc
in
lahf
sub
or
add
jnp
mov
fcoms
mov
push
loopne
and
xchg
data16
cmc
mov
jmp
xor
cmp
cs
in
rcrl
int
into
stc
test
dec
pop
mov
push
xchg
and
xchg
mov
call
arpl
sub
insb
adc
add
mov
clc
gs
out
hlt
std
rcrb
jge
mov
es
inc
js
int
xor
pusha
sbb
sub
int3
insl
call
cmp
mov
mov
pop
xor
jne
mov
jecxz
dec
jb
mov
mov
dec
or
mov
xor
inc
aas
pop
repz
mov
ss
mov
imul
out
lret
enter
add
movsl
push
pop
push
jle
mov
sub
shrl
xor
jo
data16
neg
stc
lahf
inc
std
fwait
dec
mov
lcall
jge
and
sbb
sbb
lods
stc
insb
cmp
mull
pop
sub
imul
pop
test
add
js
shll
mov
stos
insl
test
adc
clc
jo
mov
lock
out
pop
mov
adc
push
adc
jl
mov
popf
lret
outsl
mov
jnp
movsl
inc
in
xchg
movsl
push
mov
stc
shll
in
xchg
adc
push
pop
sub
jmp
jno
loop
mov
loopne
inc
xorl
sbbl
movsl
dec
jnp
mov
and
jge
rcrb
pop
xchg
xchg
jl
popa
lds
xchg
lods
lcall
int
je
cmp
sbb
mov
sbb
adc
jl
xor
xchg
imul
push
jg
cs
xchg
jns
negl
andl
in
cmp
mov
cmp
add
adc
divb
pop
xlat
xchg
fldcw
cltd
push
js
pop
xchg
in
mov
popf
lcall
pop
sub
push
or
scas
sbb
jg
jl
mov
sub
sbb
dec
inc
adc
fdivp
ja
es
push
std
sbb
and
fiadds
inc
xchg
mov
add
pop
imul
xchg
jmp
int
xor
xchg
xchg
jb
cmp
mov
sub
jbe
aas
sahf
in
icebp
xchg
mov
lds
movsb
xchg
js
xor
jecxz
xor
into
lods
sbb
cmpb
in
ljmp
leave
lea
imulb
aaa
insb
xor
lahf
or
daa
add
lock
adc
jae
lahf
lods
mov
std
roll
mov
insb
in
imul
rcr
clc
cmp
mov
lret
cmp
and
test
les
mov
test
scas
test
mov
push
dec
pusha
pop
lahf
loope
jecxz
cwtl
xchg
xchg
inc
jae
stc
mov
rcrb
out
or
sub
in
and
testb
mov
fildll
mov
cmc
js
iret
std
fisttpll
sub
dec
aas
pushf
ret
lods
fs
aas
xor
xchg
mov
sbb
cmp
cmpsl
rcrl
cmp
xor
inc
mov
pop
sbb
fnstcw
mov
mov
shll
outsb
shlb
test
dec
mov
xchg
pop
imul
mov
sub
les
scas
repz
ficomps
sub
sarb
lret
shlb
bound
lods
xchg
cmp
add
cmovae
lret
movsb
jns
and
adc
clc
adc
mov
xchg
or
lock
rcrl
mov
inc
cmp
mov
xchg
inc
mov
dec
jb
fisttps
mov
push
test
insl
sbb
imul
jge
add
sub
xchg
mov
adc
pop
jbe
sbb
cmp
pushw
sub
dec
dec
mov
mov
ja
jg
mov
stc
jmp
mov
test
dec
insb
cwtl
cmp
add
call
inc
je
or
lea
cmp
pushf
add
mov
ret
loop
sub
jl
adc
dec
divb
jecxz
dec
test
mov
jae
xchg
iret
xlat
adc
and
jl
jle
ret
adc
or
xchg
test
add
pop
sbb
sub
mov
cli
pop
push
push
lcall
pop
fidivl
pop
pop
jg
xlat
movsb
lods
xchg
push
mov
sub
jmp
mov
jmp
or
dec
adc
jns
jns
lods
pop
lcall
fists
and
popa
add
mov
xlat
popa
dec
mov
ret
sbb
les
or
imul
lds
sub
cmp
iret
inc
cmp
or
outsl
pop
in
sub
loope
xor
mov
inc
mov
pop
add
inc
lods
ljmp
mov
sahf
movsb
test
gs
ret
xor
loopne
mov
ss
push
repz
les
divl
jle
sbb
pop
dec
fisubs
lock
add
jecxz
pop
mov
insl
cmpb
loopne
dec
and
ficomps
adc
adc
cs
ss
cmpsl
ss
mov
dec
xchg
pop
inc
ret
or
pop
pusha
imul
inc
mov
mov
dec
pop
cmpsb
imul
hlt
sahf
pop
add
xchg
repnz
aad
rorb
push
cmp
add
jb
inc
in
xchg
dec
xor
pop
fidivrs
lock
in
popa
mov
out
ret
daa
mov
stc
inc
repz
mov
call
pop
out
icebp
add
cmpsb
std
xchg
inc
mov
add
dec
fcoms
clc
jmp
and
jmp
int
sub
dec
les
dec
ficomps
or
dec
adc
ljmp
add
xchg
adc
adc
pusha
das
insb
pop
rolb
inc
or
xorl
xor
sbb
xor
loop
and
loop
xor
cltd
jp
mull
insb
testl
cmp
cmp
fsincos
mov
fpatan
add
xchg
lahf
jmp
or
adc
mov
mov
pop
xchg
outsb
out
insb
je
mov
repnz
cltd
xchg
sub
push
popa
es
test
std
and
or
and
jle
cmp
lcall
lods
add
mov
cli
insl
cmp
std
sbb
bound
aas
lret
aad
in
notb
cmpb
xchg
jecxz
adc
jae
inc
addr16
or
das
gs
jg
movsl
cltd
mov
testb
jne
xlat
mov
xchg
inc
xlat
insb
aam
cmc
mov
cmpsb
sahf
cmpsb
nop
fcompl
adc
mov
cli
iret
loop
jno
lret
lods
lds
fistpl
imul
roll
popf
and
sub
adc
sti
pop
mov
or
rclb
insb
mov
push
and
sbb
out
popa
sbb
popf
int3
mov
inc
xlat
js
push
adc
inc
dec
mov
lock
pushf
cmpb
pop
sub
dec
adc
addr16
idivb
mov
and
xchg
jg
pushf
movsl
push
in
jbe
mov
mov
xchg
adc
mov
outsb
int3
inc
jle
lds
dec
cli
pop
addr16
loope
jne
inc
iret
or
lret
inc
fisubrl
inc
insb
sti
mov
out
orl
stos
sub
pop
aaa
dec
mov
into
jns
popf
jns
test
in
push
sbb
ljmp
sahf
call
dec
stc
rcll
sbb
pop
and
pop
cltd
push
jg
mov
js
sar
icebp
ss
in
sbb
sub
stos
lcall
nop
filds
cmp
arpl
loope
fcoms
mov
inc
mov
xor
push
mov
xchg
nop
xor
xchg
sti
sahf
cmp
jg
add
sarb
add
and
ss
cmp
vpaddq
jl
and
or
sbb
sub
cmp
push
mov
out
inc
rclb
mov
xor
xor
mov
xchg
fstps
insl
xlat
ficomps
rclb
enter
sbb
lret
rep
lcall
ds
fidivl
push
dec
fists
dec
adc
into
xor
mov
mov
imul
inc
mov
sti
test
into
es
outsl
push
inc
les
out
rcrl
xlat
iret
xchg
jae
xchg
in
xchg
ds
jb
adc
sbb
mov
sbb
cltd
mov
inc
xchg
or
neg
leave
jnp
aas
sbb
push
mov
outsl
jg
pop
jno
loopne
rolb
cmp
dec
js
fidivrl
and
in
pop
in
insl
sbb
cwtl
outsb
movsl
call
jo
push
mov
jns
dec
fistpll
gs
pop
loop
scas
jle
packuswb
mov
imul
addb
inc
jl
lahf
dec
push
dec
cmp
mov
psrlw
jl
stos
pop
rcrb
push
mov
fsub
ja
aad
jecxz
daa
lcall
xchg
push
jmp
xor
leave
jno
rorb
mov
or
jne
push
sub
pushf
test
out
lds
jmp
loope,pt
mov
mov
bnd
iret
fdivrl
adc
mov
pop
pusha
xor
fdivl
icebp
lds
jge
pop
out
mov
jb
cmp
mov
jecxz
jbe
clc
insb
sahf
and
aaa
sbb
shr
scas
jmp
fstl
and
aam
cmp
fmul
call
and
pop
sub
ss
pusha
xchg
movsl
and
addr16
xchg
or
push
fmull
lahf
es
das
stos
sarl
in
and
sbb
cmp
int3
inc
push
repz
iret
and
cld
mov
xchg
jl
inc
xor
movl
fdivrl
xchg
stos
sbb
mov
in
mov
dec
shll
dec
lahf
pop
or
and
mov
mov
insb
lret
and
lods
pop
pop
cmp
test
outsl
inc
mov
add
xchg
cmpsb
lods
and
scas
cmc
in
jb
rcrl
xchg
lock
lock
loop
out
mov
adc
push
cmpsl
cmc
mov
lahf
cwtl
xchg
push
ss
xor
sub
push
pop
sbb
es
aaa
je
jns
js
or
xchg
scas
test
outsl
fistl
cltd
push
aad
push
mov
sub
dec
fwait
mov
ja
lret
rolb
inc
mov
adc
divb
pop
popl
jecxz
pop
fmuls
mov
in
add
lahf
imul
stos
icebp
dec
ret
or
add
inc
sbb
sub
push
shlb
cltd
adc
int
cmp
mov
add
in
xor
stos
jne
jbe
aam
repz
push
daa
mov
and
sbbl
out
lret
stos
imul
mov
inc
nop
or
vmread
rcll
sub
dec
shr
sub
mov
xchg
addr16
lock
std
lret
dec
pop
mov
repz
scas
jg
mov
pop
mov
lahf
and
inc
mov
insb
bound
push
inc
movsl
cmp
lret
addr16
and
mov
mov
jne
inc
arpl
ficoms
movsl
cmp
push
jmp
pop
push
inc
divb
jge
jno
pop
pop
repz
mov
push
mov
imul
cmp
mov
push
jns
inc
sbb
push
pusha
sbb
fmulp
jbe
fstpt
nop
std
pop
xchg
movsl
je
das
stc
rorb
push
pop
rcl
lahf
test
rorb
int3
adc
cwtl
lds
cmp
inc
ror
xor
jge
call
mov
pop
shr
or
pop
xor
push
movsl
jo
mov
mov
popa
lods
adc
pop
push
mov
mov
jecxz
insb
mov
inc
test
dec
fisttpll
sahf
inc
sbb
mov
int
cmp
add
cmp
pop
mov
loope
mov
pop
mov
cmp
cmp
mov
cmovg
jmp
pop
sbbb
mov
xchg
adc
add
push
int
adc
sbb
aas
push
pop
loopne
cld
mov
sbb
jl
popa
fidivrs
xlat
inc
sub
in
cwtl
fs
pop
mov
scas
cmpsb
in
mov
orb
testl
fldt
mov
push
pop
movsb
xchg
lahf
mov
jmp
pop
mov
jno
inc
add
inc
pxor
movl
push
lcall
or
fiaddl
xchg
jecxz
pop
stos
mull
sbb
nop
int
rorl
or
xchg
dec
sbb
push
cmp
push
mov
sbb
push
int3
insb
jge
stos
mov
call
xchg
imul
or
sub
imul
pop
scas
aaa
or
rcpps
push
adc
rorb
mov
cmpsb
stos
pushf
xor
into
scas
ret
stos
pusha
jns
xchg
loope,pn
movsb
dec
mov
jns
xorl
lret
adc
dec
cli
adc
jne
rol
fdivl
fisubrl
sub
pop
mov
notl
out
xchg
nop
imul
lcall
xchg
insl
mov
dec
sub
sub
xchg
push
fstl
mov
dec
mov
xorl
lcall
push
mov
repnz
mov
lret
cmp
mov
mov
das
imul
repz
fdivrs
ss
invd
xor
mov
les
xor
mov
into
sub
jmp
sub
dec
jg
mov
jbe
xchg
stos
sbbb
pop
cmp
hlt
cli
outsb
sbbb
mov
add
add
add
pop
call
addl
mov
pop
jle
or
lods
lcall
sarb
adc
outsl
pop
jne
xchg
mov
outsb
jbe
jo
popa
mov
or
push
cli
out
cmp
xchg
loop
test
inc
lahf
fdivrs
sub
mov
mov
int
loop
leave
fld
sahf
mov
imul
or
pop
testl
je
push
out
mov
xorl
lods
mov
pushf
lret
idivl
call
in
jae
mov
movsb
jl
mov
fs
sub
in
shr
in
scas
xchg
add
push
sahf
sub
mov
add
rcr
inc
data16
stos
xchg
or
aas
dec
dec
and
mov
idivb
mov
adc
sub
cli
mov
inc
jbe
call
rorb
shr
mov
scas
jb
shrb
push
insb
xor
sbb
xorl
sbb
push
adc
push
cmp
push
cmp
iret
ljmp
cmc
test
xchg
adc
cltd
into
mov
pusha
out
inc
mov
fadds
jns
xor
pushf
mulb
outsl
mov
test
dec
pop
mov
xor
shl
subb
pop
dec
add
or
mov
add
scas
arpl
xor
mov
mov
inc
stos
clc
mov
xchg
push
pop
jmp
dec
pop
loope
mov
cmp
xchg
or
out
in
les
sbb
jb
or
jb
dec
pop
insb
adc
outsb
mov
inc
nop
xor
bound
sbb
mov
sahf
jbe
pop
xchg
leave
xchg
ret
mov
insb
imul
scas
lahf
mov
gs
pop
in
push
subl
adc
fs
mov
gs
sahf
lds
or
inc
add
xchg
ret
jno
enter
xrelease
je
xchg
sti
or
sub
xor
dec
push
ljmp
adc
jg
push
ljmp
cmp
pop
adc
pop
jno
add
xor
leave
dec
dec
cmp
fwait
popf
loopne
mov
pop
scas
stc
icebp
lds
test
js
dec
mov
inc
aaa
hlt
jg
xor
fwait
or
sbb
adc
neg
xchg
sti
enter
pop
ja
mov
pop
mov
int
out
cmpsb
and
push
fwait
adc
fst
aad
or
in
cli
ljmp
or
mov
xchg
xor
and
jmp
pop
push
push
inc
in
mov
jo
out
dec
add
fistl
pusha
cmp
dec
lcall
ficoml
mov
inc
sub
push
cmp
fstl
fidivl
ret
in
out
cld
bound
ja
cmp
hlt
stc
xchg
xor
xor
jae
mov
add
dec
fwait
or
and
repnz
ret
add
or
dec
add
int3
nopl
int3
stos
neg
loope
sti
sbb
fdivs
fwait
add
dec
shl
or
adc
cli
xor
dec
fs
cmc
loope
iret
push
jo
iret
mov
or
aam
jb
dec
repnz
and
jnp
inc
loopne
dec
into
push
scas
xchg
test
mov
jo
ss
sbb
sbb
push
pop
mov
scas
fidivs
das
cmp
imul
push
cmp
or
pop
inc
rolb
arpl
pop
frstor
jl
add
mov
mov
pop
aaa
hlt
mov
idiv
adc
add
pop
loop
push
push
movsl
aas
push
xor
sub
std
pop
inc
cmpsb
jg,pt
movsb
ljmp
sahf
data16
aas
jbe
andl
mov
inc
fdiv
test
movsl
jo
mov
cmc
xor
jecxz
push
jge
jg
mov
out
xor
pop
mov
xor
xor
inc
dec
xchg
loopne
dec
lock
cmpsb
sbb
add
daa
inc
pop
or
ds
cltd
cmp
jl
jmp
outsl
mov
mov
popf
sub
lock
out
jmp
mov
mov
ret
push
xchg
pusha
lret
filds
movb
cltd
leave
mov
xchg
and
jmp
pop
cmp
lods
cld
push
cmp
xchg
add
mov
jno
test
push
jg
cld
hlt
xchg
cltd
addr16
scas
xor
lea
mov
mov
adc
jmp
daa
dec
pusha
pop
fildl
out
js
mov
jb
in
adc
aad
pop
in
in
dec
and
cmp
jne
cmpsb
adc
jle
ds
fs
mov
cwtl
sarl
and
sbb
adc
pop
ret
cmp
xchg
stos
icebp
cmp
test
mov
pop
stc
pop
push
decl
popa
popf
loope
pop
pop
fsubs
scas
cltd
sub
and
pop
xchg
mov
stos
testb
inc
or
lds
movsb
mov
inc
mov
loop
cmp
dec
pop
sbb
out
ret
xchg
mov
aad
push
sub
xchg
push
mov
dec
xlat
mov
and
fistps
mov
and
cli
jnp
out
ds
mov
fbld
pop
push
add
stc
adc
cmpsl
fildll
mov
xchg
test
mov
cmc
push
outsb
in
cmp
jge
push
lock
imul
add
sbb
add
fisubrs
add
add
sub
jnp
ds
iret
cmc
clc
repnz
jae
add
popa
jo
aas
and
sbb
mov
pop
movb
fisubrs
pop
jl
mov
push
sub
call
imul
jb
sbb
cmpsb
pop
cmp
jl
push
push
aas
stos
pop
and
out
test
enter
and
ss
mov
leave
pop
test
mov
shl
pop
lea
cmpsb
sub
stos
inc
pop
fmuls
mov
leave
jns
bound
outsl
outsb
int
jae
scas
pop
mov
scas
sub
ror
or
inc
add
aam
pop
pop
sub
push
pop
adc
adc
cmp
xchg
jmp
insl
andl
and
div
jmp
lcall
sub
push
dec
call
sbb
jb
into
xchg
sub
arpl
jecxz
pop
pop
mov
mov
xchg
and
cld
dec
adc
lea
pop
ja
shrb
cli
dec
mov
leave
iret
lret
or
outsl
cmp
dec
mov
mov
loope
pop
xlat
mul
mov
cmp
stos
aad
test
sahf
arpl
fwait
xchg
xor
jecxz
mov
jge
fwait
std
clc
movsb
cmpsb
and
fidivrl
xchg
mov
xchg
push
add
cmp
cmp
nop
insb
push
repnz
cmp
sub
fwait
lahf
xor
stos
jno
jno
add
jle
inc
add
mov
sahf
sbb
sbb
adc
stos
dec
add
pop
push
sbb
out
fs
mov
adc
dec
and
into
icebp
dec
adc
or
jecxz
sahf
adc
shlb
cmp
mov
movsl
mov
sti
mov
fidivs
push
push
dec
mov
push
cmc
pop
jp
fdivrl
fwait
dec
mov
in
dec
push
pop
rcrb
out
stc
out
cmp
add
mulb
and
pop
popa
add
jge
sbb
jno
out
mov
xor
loope
cld
insl
add
dec
and
or
shl
into
stos
lock
leave
test
out
mov
sbb
mov
popf
xor
daa
out
mov
xor
mov
mov
loope
mov
pop
add
push
ret
loopne
jp
xorb
scas
and
pminsw
jg
nop
xchg
jne
cld
sbb
aas
leave
or
in
or
or
out
inc
xchg
push
and
pop
test
insl
xchg
decl
pop
loopne
es
xchg
enter
adc
sahf
and
push
les
sbb
cwtl
mov
shll
dec
lods
les
and
mov
and
pop
sbb
test
pop
daa
inc
jmp
mov
sti
arpl
or
mov
sar
loope
orl
sub
pop
mov
adc
sub
xor
lret
cmpsl
xchg
sbb
test
clc
push
sbb
ss
es
or
jge
mov
sub
lods
vpcomd
scas
mov
fs
scas
mov
stos
ljmp
rorl
lock
gs
add
dec
sub
pop
xor
rorl
mov
pusha
or
daa
popf
fwait
or
add
stc
addb
mov
push
mov
fs
xchg
jno
leave
and
jae
test
nop
mov
push
add
mov
imul
fdivl
mov
movsl
out
jo
ljmp
sbb
and
sbb
sub
xchg
xor
cmp
and
es
lock
xchg
popf
push
push
in
pop
out
mov
inc
insl
int3
sub
or
adc
popa
mov
jg
jmp
int
sub
jmp
cwtl
lea
test
inc
push
pop
adc
xchg
xlat
js
mov
sbb
stos
hlt
ss
xor
adc
shl
jle
and
aam
in
mov
push
pop
repz
jg
data16
dec
xor
inc
jp
aad
stos
adc
xor
fwait
out
loopne
je
frstor
mov
dec
push
inc
lock
adc
mov
fdivrp
rclb
shll
das
outsl
mov
push
test
push
mov
test
inc
dec
jae
cltd
inc
jge
push
push
outsb
jp
or
xchg
adcl
div
push
aas
shll
push
add
xor
cmp
mov
subb
add
cmpsl
enter
lret
pop
lds
dec
mov
testb
movsl
stos
lret
or
xchg
insb
pop
cltd
jp
or
cmp
jae
push
cmp
push
lcall
dec
inc
pushf
repnz
xor
loope
adc
fcoms
cld
push
cwtl
test
cwtl
pop
lcall
add
loope
jecxz
mov
xor
mov
fidivrl
and
pop
dec
mov
xor
adc
imul
mov
je
jnp
dec
cmp
popl
nop
lods
lock
mov
mov
test
rcr
pop
dec
xor
ss
push
inc
mov
aam
outsb
cmpsl
pop
mov
mov
or
out
aad
adc
dec
lods
rclb
adc
mov
xlat
jle
sbb
pop
inc
add
cmpsb
cmc
push
loopne
ds
mov
addr16
xchg
inc
jb
sbb
outsb
inc
sbb
mov
push
xor
mov
mov
lods
aad
lret
jo
insb
je
pop
mov
scas
pop
sbb
movsb
fiadds
or
je
daa
out
mov
fsts
sbb
cmp
xor
adc
mov
inc
sbb
xchg
dec
push
icebp
sahf
comiss
jecxz
adc
mov
lahf
mov
inc
mov
pushf
mov
pop
enter
xchg
pushf
sbb
rclb
fildl
pop
std
add
push
push
xlat
out
cmpsb
or
imul
ret
in
and
mov
daa
fs
adc
pop
shlb
add
out
je
inc
lret
mov
lods
clc
xor
xor
test
int3
aaa
or
add
aaa
sar
das
jo
in
mov
fstps
sub
pushf
mov
mov
xor
xor
xor
jg
pop
mov
xchg
int3
in
iret
call
xor
inc
lcall
call
sbb
pusha
jnp
inc
mov
or
mov
cmp
pop
push
fistpll
xlat
inc
in
std
xor
mov
adc
pop
jl
xlat
inc
dec
lods
ret
mov
mov
xor
sub
lods
test
sarl
fcoml
popa
adc
lret
cltd
mov
sbbb
das
jne,pn
push
mov
fs
std
jnp
or
loop
jge
mov
pop
cmp
ret
push
repnz
fidivrl
aas
in
shr
mov
clc
xchg
and
cmpsb
mov
and
clc
or
bound
jge
jnp
enter
cmp
insl
es
cwtl
fldpi
lods
fldl
mov
cwtl
xchg
xchg
mov
push
or
mov
imul
add
pop
dec
dec
sbbl
int3
into
add
lods
in
cmp
jo
xchg
cld
and
clc
mov
xor
test
adc
cmp
lret
sub
inc
inc
sub
shlb
in
andl
call
mov
les
push
mov
subb
imul
fmuls
and
in
pop
push
lods
and
adc
in
pop
movsl
push
ds
shlb
inc
dec
pop
push
jnp
out
in
mov
divb
inc
cmpsl
stc
xchg
stc
test
jo
pusha
test
rcl
dec
hlt
bound
push
hlt
sub
mov
cmp
inc
push
xchg
das
dec
stos
and
lcall
pop
sub
adc
adc
ja
mov
pop
add
subl
enter
sub
sbb
jb
outsl
icebp
ds
or
dec
adc
stos
insl
scas
loopne
aam
stos
into
sbb
imulb
test
cmp
ret
adc
aam
rcll
int
push
mov
adc
repnz
enter
inc
jle
xchg
ret
jnp
xchg
or
stos
insb
mov
nop
mov
inc
push
out
daa
std
cmpb
clc
ret
add
push
push
and
stc
pop
rclb
and
insl
clc
je
es
fdivp
stos
stc
sbb
mov
inc
sub
sub
cmp
cld
cld
dec
lods
mov
xchg
push
mov
and
cmpsl
add
testb
cmp
in
mov
icebp
jge
sarb
rorl
sub
movsl
jp
pop
shll
mov
mov
out
fsub
or
and
aaa
sub
xlat
arpl
xor
gs
in
loop,pt
cli
pop
mov
xchg
aaa
jne
sbb
ds
jg
inc
sub
inc
xchg
or
stos
test
mov
arpl
ret
mov
lcall
dec
fs
dec
js
cmpl
xchg
sbb
jp
inc
insb
mov
enter
sbb
adc
fucom
roll
sbb
out
xchg
mov
pop
mov
or
fldenv
add
psllq
movups
sub
dec
sub
fcomip
lret
mov
jmp
je
pusha
mov
mov
insl
xor
mov
nop
sbb
inc
lahf
mov
daa
cmpsb
inc
aaa
leave
loopne
jo
fidivl
mov
pop
addb
xor
loop
jl
inc
test
faddp
arpl
push
inc
ss
sub
enter
or
xchg
jbe
mov
fldenv
lods
push
jae
cmp
clc
sbb
mov
pop
xchg
xchg
lods
aad
dec
lods
mov
pushf
xchg
xor
push
mov
or
lcall
lea
xchg
dec
test
iret
filds
pop
jle
inc
lahf
mov
mov
stos
scas
lock
addb
pop
dec
sub
pop
addr16
push
pop
cmp
inc
xor
lret
sahf
sub
adc
testb
jbe
add
stc
mov
mov
out
stc
in
leave
jge
scas
test
add
cmp
ret
jo
hlt
mov
cld
lods
and
sbb
pop
push
jg
pop
dec
cli
push
stos
pop
sti
es
divl
add
sti
pop
arpl
in
jno
pop
lahf
pushf
jb
repnz
sbb
stos
jnp
push
mov
mov
sarl
int
pop
mov
leave
and
js
xchg
xor
adc
sarl
std
test
dec
ficoml
testl
cmpsb
dec
adc
jb
fwait
xor
incl
out
mov
mov
sub
xor
xor
mov
int3
mov
test
mov
bound
or
ds
sub
or
add
bound
sbb
fdivrl
push
aas
ds
jns
cli
repnz
lret
fbld
stos
xchg
adc
xchg
movsb
shl
push
fisubl
nop
inc
xor
adc
lret
sub
clc
sbb
adc
popa
test
movsb
ss
pop
fnstcw
adc
loope
loop
dec
xchg
pop
fisttpll
mov
pop
insb
insl
push
out
sbb
sahf
push
add
mov
shll
adc
sbb
add
inc
int
loopne
mov
cmp
repz
push
inc
movsb
mov
or
pop
cmp
mov
lcall
mov
imul
push
aaa
inc
push
pop
cmpsl
clc
pop
call
stc
stc
daa
dec
xorb
push
mov
jbe
test
mov
sbb
ret
mov
fidivl
test
sbb
jmp
mov
jns
cmpsb
aas
test
ror
mov
das
mov
inc
cmp
iret
ja
aam
fwait
push
andb
stos
sub
popa
hlt
daa
es
pop
mov
in
jecxz
ret
aas
loopne
das
out
or
dec
aas
fs
arpl
xor
cmc
ja
lods
filds
aaa
out
push
xor
jbe,pn
test
inc
mov
fisttpll
jno
test
mov
imul
xor
lods
lcall
push
mov
test
fisttpl
addr16
lods
dec
shr
out
lds
aad
in
mov
lock
fstpt
mov
roll
sub
stos
repnz
aam
pop
cs
adc
sub
xor
adc
mov
dec
out
pop
pop
jge
stos
loop
xchg
fsts
cmp
push
lock
outsl
lea
rol
adc
xchg
inc
aad
sbb
mov
roll
push
test
mov
or
js
or
mov
mov
dec
jge
add
sahf
jno
inc
int
pushf
add
inc
negl
fwait
mov
push
clc
mov
xchg
lods
mov
and
add
push
mov
test
cmpsb
and
and
mov
mov
mov
sarl
and
mov
movsb
xchg
push
dec
cmp
mov
push
jb
and
popa
push
push
mov
sub
out
pop
aaa
jb
fcomip
ss
insl
adcb
scas
mov
xor
scas
push
mov
sbb
ss
jo
jns
subl
dec
loop
jno
lods
xor
scas
jge
stc
jae
adc
ss
jae
cld
pop
mov
sbb
dec
clc
test
push
mov
out
mov
out
sbb
cmovge
xchg
push
cs
repz
ja
push
sbb
xor
push
fs
mov
fcompl
pop
push
push
xchg
push
pop
setns
inc
jnp
scas
xor
lods
cs
dec
xor
in
cmpsl
arpl
pop
fistpl
and
jecxz
jg
inc
cmp
mov
movsb
imull
imul
push
fmuls
pop
cmp
mov
pushl
cltd
mov
pop
pop
and
pop
and
cmpsb
dec
aam
mul
xor
mov
ds
mov
push
rorl
xchg
cmpsl
xlat
pusha
repz
pop
sbb
popa
imul
sbb
scas
js
sbb
int
or
je
sub
pop
and
xor
es
push
and
ljmp
popa
pop
clc
std
hlt
shll
lret
mov
mov
mov
scas
and
out
aad
and
lds
fisttps
scas
lahf
push
pop
sarl
push
iret
fisubl
stos
gs
jmp
push
inc
dec
daa
loope
in
mov
mov
aaa
push
lcall
int
notl
fldl2e
sub
lea
popa
mov
out
jmp
push
shrb
addb
or
xchg
adc
mov
mov
or
test
cmp
call
adc
addr16
adc
xchg
idivb
fldz
or
jg
and
out
lret
inc
aaa
aaa
jecxz
les
leave
loopne
fbstp
cmp
repz
data16
push
shlb
and
hlt
outsb
mov
sahf
shrb
mov
inc
inc
enter
and
xchg
sbb
adcb
hlt
iret
iret
adc
in
pop
fidivrs
repz
test
cmp
sbb
pmaxsw
pop
shlb
mov
pusha
cmpsb
cld
cmpsl
mov
bound
ret
fsubrp
std
mov
aaa
mov
push
fldl2t
std
fldcw
cmp
call
pop
dec
sub
push
and
inc
jbe
ret
jb
ljmp
and
ds
cmpsb
enter
scas
shr
lret
inc
iret
and
test
lock
xchg
outsl
mov
xor
dec
mov
adc
scas
push
cmp
pop
enter
cmc
dec
fidivrl
cli
lods
xor
mov
notb
jmp
pusha
sbb
lret
int
jns
jnp
cmp
shll
dec
sbb
pop
xchg
inc
and
xor
mov
adc
pop
stc
in
mov
cmp
outsb
add
fwait
mov
jg
cmp
imul
lods
test
test
xchg
jae
mov
lods
fsts
add
mov
dec
aas
aaa
lahf
mov
or
gs
test
or
sarl
fs
scas
inc
jb
xchg
pop
jnp
adc
jmp
mov
stc
test
add
inc
sub
xchg
pop
lret
jae
xor
or
cltd
mov
test
mov
inc
pop
mov
jae
fcomip
repz
jecxz
add
push
nop
std
xor
adc
and
stc
repz
stc
jg
ret
fistpl
out
mov
adc
out
lods
jb
mov
jo
pusha
cli
test
sbb
adc
mov
push
subb
inc
icebp
mov
sbbl
test
lea
pop
jae
or
hlt
lea
pop
pop
adc
sub
add
out
movsb
ja
or
cmpsl
dec
sbb
xchg
xor
pop
xchg
jno
inc
fcmovnb
mov
cmp
and
test
mov
imul
movsb
push
dec
lock
inc
pop
das
jp
gs
mov
mov
jle
push
push
jo
scas
adcb
pop
aad
push
sbb
jb
pusha
push
psllw
out
and
pop
pop
jle
add
outsl
stos
es
pop
mov
xchg
inc
rorb
jge
sbb
loope
sbb
jb
rcrl
insb
xchg
mov
cmp
mov
outsb
jno
aad
dec
inc
push
mov
clc
adc
mov
xor
xchg
xor
sbb
test
fnstcw
lods
in
data16
hlt
in
mov
daa
call
xchg
push
lods
int
repz
fwait
leave
push
int3
sbb
lcall
dec
inc
and
jp
cwtl
sbb
imul
cmpsb
jg
stc
jae
cmp
mov
sub
mov
das
mov
dec
inc
es
jg
mov
xor
cld
leave
xlat
jae
sbb
mov
pop
adc
xor
insl
das
xchg
cld
lods
out
sub
insb
mov
mov
leave
test
fwait
out
push
lds
mov
adc
xchg
mov
inc
jp
or
push
movsb
mov
sti
adc
push
xchg
and
add
repnz
mov
outsl
adc
cmp
push
mov
in
aaa
sub
push
arpl
or
pusha
or
push
jge
add
or
in
int
push
push
sub
sub
and
shrb
arpl
mov
push
add
mov
fucomi
push
ja
fiaddl
iret
in
push
add
lds
lret
jns
xchg
push
data16
std
imul
fcmovne
iret
and
mov
stos
xchg
pop
cltd
cwtl
lcall
pushf
xchg
dec
cmpsl
cmpsb
in
outsl
dec
adc
clc
sti
movsl
mov
movsl
movsl
in
and
sbb
idiv
inc
shl
aam
xchg
shl
lock
int3
jg
scas
repz
mov
add
mov
xor
mov
xorb
aad
or
int3
sbb
sub
movb
and
pop
push
jge
daa
out
aaa
lds
sti
ss
pop
cmp
xor
loope
jmp
sti
dec
in
imul
insl
mov
adc
and
stos
jp
adc
into
std
or
jle
test
jb
push
fidivrl
jmp
mov
das
jle
inc
push
test
divl
out
call
push
icebp
pop
int3
lods
gs
push
mov
leave
pop
ss
stos
pop
jecxz
inc
inc
mov
mov
xorl
fwait
xchg
jns
ja
pop
xor
pop
jae
stos
mov
clc
cmc
sti
inc
inc
loope
sbb
xchg
jle
mov
ss
pop
sbb
cmpsb
sbb
inc
dec
divb
mov
mov
rcrb
dec
mov
mov
pop
xor
mov
out
lock
cltd
mov
or
sub
or
aaa
idivl
and
push
jb
in
iret
lahf
mov
insl
xor
subl
lret
scas
arpl
popa
and
push
and
dec
cmp
bound
sbb
into
mov
das
xlat
imul
jge
jmp
jo
movsl
dec
xchg
jbe
jb
mov
xor
xchg
inc
and
lea
stos
cmp
xchg
and
mov
jle
pop
or
insb
rorb
dec
jnp
sbb
pop
pop
ret
mov
sub
pushf
aas
push
out
call
lock
call
mov
mov
push
test
enter
test
mov
mov
push
xor
lea
sub
shlb
lock
sub
jne
lods
jecxz
inc
mov
jo
cltd
lock
mov
ss
jb
lcall
lock
cmp
mov
sub
jae
movsl
jp
add
rorb
mov
xlat
sarb
mov
in
ljmp
pop
push
xchg
jnp
dec
data16
pop
push
jmp
mov
xor
sub
xor
scas
mov
icebp
inc
sbbl
dec
lods
test
sbb
lret
mov
loopne
cmp
out
loop
xchg
out
ds
movsl
roll
push
pop
xchg
xor
movsb
shll
data16
lahf
cwtl
mov
jle
sarb
addr16
push
dec
push
mov
test
xlat
imul
idiv
sbb
mov
movsb
nop
outsl
je
mov
mov
ss
sbb
cmpsb
sbb
jae
sub
mov
cli
adc
jge
sti
fsubs
faddl
ret
cmc
adc
nop
mov
cmp
or
das
in
inc
into
std
jg
jmp
je
adc
fidivs
fcomps
idivl
divb
xchg
shl
inc
inc
cmc
cmp
sbbb
or
lcall
leave
sbb
repnz
fwait
mov
loop
mov
sahf
push
push
or
lods
and
push
mov
cmp
jmp
into
or
dec
sbb
test
es
les
mov
pop
pop
int3
mov
or
dec
cmpsb
sahf
lods
pop
jmp
cmp
out
test
mov
call
push
sub
xchg
aaa
addr16
fistpll
imul
js
and
xor
mov
sbb
lret
push
push
sub
add
sub
insb
pop
sbb
jae
arpl
jmp
mov
mov
push
mov
push
int3
int3
pop
stc
into
dec
xor
jno
add
jnp
dec
pusha
jae
mov
jmp
cmp
lock
scas
jb
daa
int
mov
test
cmpsl
sub
fdivr
addr16
adc
or
xchg
sub
daa
mov
hlt
sub
mov
pop
lods
movsb
mov
push
adc
in
rol
test
mov
or
rcrl
xor
sbb
mov
mov
daa
push
or
lret
xchg
stos
push
dec
test
and
popa
test
mov
push
sbb
and
sub
out
sbb
cli
into
cmp
xchg
xor
lcall
int
sub
mov
dec
cmp
xchg
leave
lds
fs
repz
das
mov
sarl
outsl
add
pop
jp
arpl
xchg
add
call
ja
mov
xchg
adc
jle
cwtl
mov
sbb
es
and
clc
dec
mov
aam
dec
fucomi
es
jp
push
popw
loop
test
call
data16
push
mov
push
pop
rorl
loop
pushf
or
pop
push
mov
cmp
icebp
push
add
arpl
loop
arpl
mov
fcoms
jb
lods
roll
push
push
int
or
xchg
push
call
mov
lret
cld
push
push
fmull
test
mov
leave
xchg
jmp
cmp
mov
push
mov
adc
loope
or
mov
sbb
movsb
sub
and
cmp
aas
loope
outsl
in
cmpsb
loope
out
movsb
subl
jge
pop
aam
roll
push
jle
and
sar
leave
adc
or
adc
call
ds
mov
push
fsubrs
xlat
in
outsl
mov
jno
or
in
pop
sbb
adcb
mov
xor
cmpsl
xor
pop
ret
popf
xchg
sub
leave
pushw
pushf
fisubs
push
or
insb
adc
mov
sub
xor
mov
jo
mov
jle
pop
xchg
fimuls
pushl
xor
iret
dec
sbb
jle
dec
push
push
pushl
pop
mov
inc
cmp
jae
ret
ficoml
int3
in
lea
clc
xchg
inc
jecxz
cmc
inc
jl
xchg
outsl
lods
stc
mov
cs
dec
fwait
jbe
lods
mov
fmul
cmp
addb
push
mov
cmp
inc
lock
outsb
adc
mov
add
and
insb
inc
inc
lret
mov
mov
pop
jo
cmp
jmp
mov
out
sub
shlb
outsl
lods
nop
testb
outsl
xchg
test
outsb
push
and
leave
stos
push
iret
dec
sbbb
dec
lea
xchg
jnp
sahf
jnp
sbb
dec
jbe
mov
mov
pop
cwtl
sbb
and
sbb
jle
pusha
sahf
mov
dec
fdivl
mov
sahf
in
sbbb
mov
jb
add
add
stc
pushf
xchg
hlt
pop
xchg
mov
es
pop
sub
inc
adc
cmpsl
push
and
ret
rorl
xchg
in
adc
adc
in
inc
pop
inc
divl
stc
push
add
in
inc
imul
jnp
in
cmp
outsl
xchg
mov
dec
adcl
jecxz
or
add
call
xchg
stos
mov
pop
sti
sub
imul
repnz
in
inc
movsl
outsl
inc
into
jecxz
add
out
mov
xchg
bnd
xor
pop
dec
cld
test
mov
xchg
dec
pop
jp
daa
dec
xor
sbb
pushl
xor
loope
mov
jbe
fwait
pop
fs
hlt
arpl
aam
lret
and
in
js
xchg
pop
rclb
sub
jge
and
fstpl
pop
mov
std
or
repnz
cld
les
mov
aas
les
xchg
and
in
mov
mov
std
adc
jge
pop
mov
shrl
das
lods
div
mov
imul
outsb
sbb
pop
adc
into
stos
outsb
dec
dec
int
pop
cli
movsl
lds
pop
push
fimull
or
mov
pop
add
repnz
mov
add
xchg
in
iret
aaa
pop
cmp
lret
cmp
jg
push
mov
push
xor
imul
mov
fsub
inc
aad
inc
sub
aam
loop
xchg
subb
push
inc
mov
and
icebp
movsl
adc
scas
int
jmp
mov
int
std
ret
pop
out
test
mov
lcall
lock
sahf
push
loope
cli
inc
xor
dec
or
in
addr16
inc
or
insl
lds
xor
pop
test
sbb
cmp
push
imul
adc
pop
jmp
sbb
xor
sar
in
mov
push
sub
imul
mov
and
and
jb
rorb
rclb
jbe
insl
pop
fistps
add
test
mov
fsubr
mov
xor
js
imul
cld
popa
sahf
sub
dec
dec
sbb
sbb
jb
xor
jns
cltd
push
xchg
mov
fimull
pop
lds
inc
jnp
push
out
in
cld
push
in
frstor
daa
ja
nop
adc
movsl
mov
and
sti
sbb
test
cltd
test
outsb
int3
jl
enter
jbe
mov
mov
dec
pop
mov
mov
mov
in
lret
andl
icebp
mov
pop
and
pop
es
pop
pop
enter
lea
hlt
adcl
cld
pop
inc
and
add
data16
or
sub
fsubrl
add
jg
fbstp
int
cli
inc
hlt
adc
sbb
hlt
loopne
xchg
dec
inc
sbbb
imul
xor
pushf
lret
out
negb
add
push
int3
xchg
sub
in
sbb
dec
dec
ret
das
imul
orb
dec
adc
pop
fstp
sahf
ds
loop
push
xor
inc
ja
in
sahf
jb
jl
cmpsb
sub
fs
movsb
std
les
cmp
mov
push
add
jge
loopne
mov
sub
daa
xchg
shl
lret
es
andl
je
gs
movsb
push
test
xor
clc
adcl
and
ja
ljmp
and
add
out
mov
mov
sarb
xchg
pushf
cmpsb
in
mov
jp
jle
sbb
imul
lock
cmp
dec
mov
jns
shl
or
lret
dec
ljmp
lcall
fdiv
call
mov
mov
cmp
enter
outsl
mov
sub
scas
sbb
leave
and
jp
push
push
je
dec
push
fwait
and
adc
pushl
das
popa
cmp
ficoms
dec
ljmp
dec
lahf
push
sti
stc
sti
cmp
outsb
pop
ret
push
mov
fdiv
inc
test
xchg
cmp
xchg
int
cmc
js
mov
int3
cvttps2pi
mov
fistpll
jp
mov
shufps
arpl
nop
cmc
mov
jb
dec
push
repnz
dec
add
xchg
xchg
fmul
push
in
jecxz
dec
pusha
mov
and
push
sbb
mov
pop
sbb
xor
fsubrp
xor
push
adc
imull
and
sbb
pusha
aad
std
dec
adc
inc
sahf
xchg
pop
sbb
outsb
sub
sbb
fstpt
cli
push
jp
sahf
ss
fcoml
jmp
push
push
loope
xor
or
or
dec
mov
cmp
lcall
dec
push
stos
adc
cltd
mov
mov
dec
fsubl
lahf
jno
sub
fdivrl
in
mov
movsb
out
cmc
mov
jl
and
push
sbb
notb
loop
push
mov
idivl
pop
cmp
add
sub
mov
hlt
pop
add
les
push
cmp
push
adc
stc
cmp
movsl
lods
add
jg
inc
jae
call
stc
outsb
cmpsb
mov
in
xchg
sarb
cmpsb
mov
ret
cmp
or
std
or
sahf
pop
mov
das
xor
repz
mov
test
scas
mov
idivl
subl
jp
sti
jbe
and
dec
cld
das
call
js
pop
hlt
aad
mov
pop
xchg
mov
scas
add
in
dec
inc
or
mov
jle
aaa
lock
adc
push
popf
mov
roll
mov
popa
rolb
dec
jmp
fistl
jno
mov
jae
ja
cmp
add
push
dec
dec
or
cmpsl
sub
popa
push
mov
xor
repnz
mov
xor
scas
jo
test
outsl
push
mov
lds
sub
xchg
cmp
test
bound
ror
cli
pusha
stos
out
sub
dec
jmp
cmpsb
cmp
fldcw
pop
fdivrs
pop
pusha
cmpsl
repnz
or
sbb
sbb
clc
popf
inc
ljmp
xchg
rcll
imul
add
push
jne
jmp
sub
sbb
and
les
cmpsl
lds
xlat
xchg
aad
dec
inc
lahf
or
test
and
fildl
push
mov
movl
std
sub
into
test
mov
jmp
call
popf
lock
jg
sub
cmp
xchg
xchg
sbb
test
das
mov
mov
mov
dec
les
daa
in
jns
cmpsb
sbb
pop
jecxz
dec
scas
mov
xor
shl
adc
sub
sti
add
xchg
mov
adc
add
aad
push
sti
fnstcw
imul
jae
cmp
imul
push
xchg
sbb
out
xlat
push
xchg
xchg
inc
mov
fmulp
fsubrl
into
stc
shrb
ror
out
dec
movsb
fs
clc
xchg
mov
or
push
imul
inc
scas
adc
mov
xor
lret
rcl
into
in
push
pop
ss
sub
push
cltd
inc
int3
or
fists
mov
fmull
sub
xchg
cltd
mov
iret
push
jb
adc
xchg
loop
adc
mov
aas
pop
rcr
jne
test
mulb
xor
jmp
push
and
in
out
les
inc
mov
mov
fs
decl
idivl
mov
sub
or
mov
arpl
cmp
fst
adc
sbb
add
lds
adc
or
lods
inc
or
imul
loope
pop
loopne
mov
push
push
mov
push
adc
mov
push
inc
jl
dec
bound
jl
ljmp
pop
mov
cltd
pop
jb
cmp
push
adc
fucomip
or
xor
and
sbb
mov
sub
fldl
les
pop
in
or
sub
jns
sarl
pushl
out
adc
lret
imul
rcrl
ret
jns
xbegin
jbe
inc
outsl
and
stos
or
push
cmp
mov
fdivl
jno
mov
lods
out
repnz
adc
into
outsl
xor
clc
mov
fcoml
flds
mov
popa
and
mov
je
cmpsl
mov
jns
repz
xchg
insl
xor
scas
push
jle
mov
lret
sbb
xor
sub
jno
mov
dec
cmp
mov
ja
fdivs
out
fsubrl
mov
je
sub
pop
push
add
ret
mov
lcall
adc
lcall
mov
sbb
or
push
push
mov
jecxz
repz
jecxz
push
test
jb
jnp
test
xchg
ds
xorl
jle
mov
sub
mov
sbb
imul
xchg
ljmp
sub
rorl
ljmp
mov
pusha
pop
xlat
push
adc
cmc
adc
and
stos
ret
xchg
add
cld
fwait
lds
push
xor
sahf
imul
sbb
cmpsl
lcall
in
push
movsl
rol
mov
cmp
mov
jo
adc
mov
mov
daa
jp
andl
cmp
inc
xor
and
test
call
mov
out
mov
ss
xchg
adc
cmc
test
in
shrl
mov
adcl
inc
popa
shl
pop
popa
mov
mov
xchg
pop
ja
jp
outsb
enter
addr16
xchg
je
mov
test
in
sti
frndint
out
add
dec
mov
ja
lahf
cmp
xor
aas
sbb
mov
jne
jge
dec
hlt
jge
jne
mov
test
outsb
stos
mov
pop
in
adc
sbb
rcl
push
jno
dec
mov
rclb
shll
add
push
pop
test
lds
add
push
aaa
into
inc
add
lea
inc
js
lods
sti
sub
test
inc
leave
sbb
cli
das
or
iret
sub
incl
sub
lahf
push
repz
xchg
aaa
leave
or
jno
and
stc
ss
adc
bound
int3
xchg
cli
ds
fstpl
jmp
cmp
cmp
loope
add
mov
and
sbb
imull
mov
es
pop
jns
jno
jno
loope
ja
add
cli
loopne
out
pop
test
adc
push
mov
mov
fildll
cmpsl
ret
cmp
inc
xchg
add
inc
sbb
mov
repnz
adc
xlat
iret
mov
mov
imul
sti
push
push
bound
mov
nop
shr
adc
js
cmp
adc
ss
outsl
outsb
hlt
sbb
fsubl
push
int
test
addr16
js
jns
mov
push
adc
push
es
popf
ret
mov
sub
and
pop
inc
shl
jle
je
jmp
movsb
nop
mov
inc
cltd
jmp
xchg
int3
jb
mov
xlat
popf
mov
in
scas
xor
lea
xor
push
leave
sbb
insl
pop
lods
ljmp
rorb
push
sub
test
xchg
cmp
add
ror
dec
mov
cmp
add
mov
and
push
aas
shrb
mov
ss
lods
mov
add
test
push
xchg
cmp
pop
mul
popa
jnp
mov
out
add
dec
fwait
xchg
lods
sub
rorl
js
mov
sub
add
cltd
cmp
lret
or
aad
xor
jp
ret
adc
out
pop
lret
ds
jnp
adc
add
sub
adc
jo
xor
jge
jmp
mov
xchg
pusha
mov
insl
cmp
jp
pop
lock
mov
pop
lods
sub
xor
push
lock
sahf
push
adc
mov
inc
shr
jb
or
mov
mov
sbb
xchg
pop
and
cmp
shll
ret
pop
fmuls
movb
lcall
push
mov
mov
lock
xor
cmp
cmpl
pop
out
rcrb
sbb
mov
pop
dec
cmp
sbb
xchg
lods
ljmp
pop
mov
pop
std
dec
adc
xor
xor
in
push
js
dec
mov
outsl
adc
mov
jle
mov
xor
cmp
or
mov
cmc
sub
jb
jae
divb
and
out
sahf
push
sub
pop
loope
test
mov
push
shl
mov
out
dec
lcall
cmpb
ds
movsb
iret
adc
push
test
lea
jl
enter
adc
jne
loopne
test
mov
lds
int
frstor
push
cwtl
add
push
aaa
cli
sbb
push
insb
int
std
xchg
pop
aas
inc
jge
pop
daa
test
lds
cmp
jo
divb
leave
pop
idiv
mov
or
fistl
add
imulb
setne
lcall
adc
insl
push
dec
pop
adc
cs
push
sub
decb
rdpmc
out
js
jl
ds
add
jmp
inc
xor
push
int3
jnp
or
repz
jg
pop
jge
lahf
clc
jecxz
jge
divl
ja
int
mov
mov
sti
fistps
fsub
fdivs
icebp
sti
push
repz
inc
mov
sbb
out
cmp
mov
fiaddl
sahf
jmp
mov
inc
inc
mov
gs
dec
lcall
fildll
out
xor
pop
test
iret
sbb
sbb
ss
cli
push
jle
or
push
lcall
inc
jmp
insl
cmc
ss
sbb
aam
fs
jmp
xor
out
loope
aad
xor
pop
cmp
sahf
push
sbb
test
sbb
call
pop
idivb
imul
cmpsb
lcall
jg
out
cmp
out
movsl
mov
inc
inc
mov
shlb
enter
push
mov
pop
cmp
daa
xor
fldl
or
lret
daa
xor
inc
ret
xlat
jle
pop
pushf
shl
imul
mov
or
add
aaa
xor
les
movsl
push
push
add
enter
cmpsl
push
and
mov
inc
pop
cmp
xchg
sahf
and
pop
cwtl
and
aam
cwtl
pop
int
out
or
sub
mov
sbb
sarl
cmp
mov
and
shlb
stos
and
jle
repnz
adc
pop
push
inc
jle
mov
test
xorb
inc
or
movsl
sar
insl
out
xor
fisubrl
mov
push
lea
xor
movsb
lahf
xchg
pop
xchg
xor
inc
test
roll
loopne
cli
mov
daa
sub
cmp
pop
pop
ficoml
or
test
push
push
pop
sub
pusha
test
aas
paddusw
xlat
addr16
les
cmpsb
dec
in
dec
push
adc
nop
sub
stc
nop
int
or
lds
fldcw
cld
loopne
lret
push
in
ljmp
mov
xchg
jnp
fsub
dec
aam
mov
push
or
mov
mov
inc
out
pop
je
aaa
incb
sbb
mov
aaa
stc
mov
subl
stos
lds
push
outsl
push
pop
repnz
xlat
loop
pop
mov
push
push
int
pop
call
popa
stos
add
ja
xlat
jbe
adc
dec
cmc
xchg
loope
jno
jecxz
add
call
add
movsb
mov
inc
cmpsb
pop
insl
xchg
std
adc
jp
add
loop
mov
sahf
xchg
popa
pusha
fwait
and
ret
popa
test
mov
test
inc
popaw
or
mov
inc
test
wrmsr
push
mov
loopne
xor
mov
movnti
cmpsb
shl
ss
jns
xor
add
mov
ret
jae
mov
cmp
ja
sarl
ja
jbe
aam
fisubs
sbb
rcrb
fnstsw
or
les
or
and
insl
push
pop
shll
push
push
add
mov
mov
out
int
dec
subb
add
hlt
nop
sahf
or
adc
rcr
jb
dec
imul
push
sti
pushf
daa
xchg
mov
clc
cmp
sbb
stos
xor
push
popf
insb
pop
daa
and
dec
jmp
pop
mov
pop
dec
mov
jnp
mov
test
pop
inc
mov
jno
push
loopne
repnz
movsb
out
sbb
xchg
add
mov
fldt
jbe
inc
cmp
mov
daa
mov
les
and
cld
mov
dec
test
lods
sarb
jo
scas
cli
mov
push
in
cmp
ss
aas
jmp
jmp
mov
sbb
or
mov
orb
adc
sbb
xchg
or
ljmp
xchg
dec
outsl
cmp
pop
or
stos
bnd
cld
jne
es
adc
or
lret
pop
js
pop
ret
dec
in
jne
xlat
sbb
popf
in
add
cwtl
lods
pop
lea
bound
lea
xchg
cmp
sbb
push
lock
or
aad
aaa
mov
js
jmp
insb
int3
add
add
mov
mov
cmpl
movsb
addb
andl
in
imul
loopne
mov
add
ffree
das
xor
xor
xor
stc
cmp
daa
jb
xor
std
addb
popf
repz
jg
mov
test
jo
mov
pop
test
sbb
or
ja
adc
pushf
fnsetpm(287
and
mov
jne
lods
jg
mov
xlat
out
add
inc
mov
gs
in
xchg
mov
int
imul
xor
data16
lock
dec
lret
pop
popa
dec
mov
dec
push
pop
fnsave
mov
add
inc
dec
dec
das
cmc
cmp
sbb
mov
gs
mov
mov
jns
push
ss
out
ss
fistps
arpl
inc
cmc
push
mov
out
dec
push
data16
clc
or
bnd
or
xorl
scas
inc
sub
cli
pop
push
popf
jl
jae
aad
aad
xor
pusha
dec
lds
mov
add
jnp
pushf
xor
mov
add
mov
in
in
mov
daa
and
rcr
fdivs
mull
mov
scas
adc
in
mov
lahf
lds
jnp
inc
jne
push
in
xchg
cli
notl
push
lret
or
sahf
cmp
test
test
push
sti
mov
xlat
outsl
add
icebp
adc
roll
fdivr
sar
pop
popa
mov
imul
lock
movsb
jbe
in
push
testb
mov
stos
lods
mov
rcl
pop
nop
dec
adcl
outsb
rorl
arpl
or
insb
xchg
mov
movsb
mov
inc
and
clc
out
push
mov
pop
jge
push
add
sbb
jecxz
jno
fwait
mov
fcomps
repnz
insb
adc
stc
mov
pop
pusha
cmp
or
and
jle
es
jae
pop
fwait
nop
shrb
test
scas
jne
xchg
leave
lds
leave
mov
push
lahf
std
adc
mov
es
jo
jo
stc
fdiv
mov
inc
xchg
add
jno
sti
sub
mov
inc
loope
mov
lret
sub
fisubl
shlb
insl
or
ljmp
dec
xchg
insl
xor
pop
pop
pushf
mov
sub
ret
cmp
addl
add
jae
adc
push
mov
es
mov
sbb
iret
lret
lods
dec
repnz
or
lcall
lods
jne
xchg
mov
lock
mov
jne
adc
out
add
xlat
jo
mov
cwtl
dec
and
mov
jl
inc
jbe
xchg
inc
xchg
xrelease
xchg
arpl
sub
cmp
outsb
inc
out
mov
xor
int
stos
push
in
xchg
add
mov
mov
xor
popf
enter
pop
movsb
or
movsl
int
sti
ds
das
orl
xchg
inc
ljmp
push
push
and
cmpsb
jmp
xchg
clc
dec
aad
aam
xor
shl
xor
out
jecxz
daa
lcall
adc
lock
cli
daa
and
sub
mov
dec
in
cmpsl
pop
add
hlt
mov
xor
sub
add
outsb
cmpsl
xor
sti
jg
les
insl
aad
aam
out
push
jge
sti
mov
jbe
pop
jbe
push
mov
push
mov
shrl
mov
add
sub
sbb
push
lret
mov
filds
cs
orl
push
adc
inc
and
adc
test
add
jge
aad
pop
test
xlat
cltd
loope
push
push
mov
enter
out
daa
push
imul
lods
push
lcall
pop
stos
pushf
sti
lods
mov
dec
push
scas
iret
jae
test
dec
sub
in
jecxz
jae
dec
sbb
sarb
xor
push
into
pop
andb
dec
add
mov
xlat
in
dec
mov
xor
inc
xor
mov
imul
adc
mov
jns
jno
hlt
leave
xlat
in
or
sub
repnz
stc
ja
cmp
jp
jmp
sti
sub
push
cmp
shll
test
shlb
notl
mov
rorb
lock
jle
jle
mov
out
xchg
mov
cmp
lds
or
les
pusha
in
xchg
dec
outsl
cmp
dec
pop
or
shrw
test
dec
mov
aas
cli
cld
fwait
rorb
lahf
add
sti
mov
std
sub
mov
cmp
xor
ss
inc
fbld
mov
enter
cmp
pop
jo
add
xchg
push
sbb
mov
pusha
xor
fists
jle
pop
aad
pop
mov
sbb
dec
cmp
push
pop
and
repz
adc
pop
out
pop
scas
int3
jb
push
xchg
out
or
jns
mov
inc
pop
dec
loopne
push
push
cmc
cmpsl
and
mov
mov
mov
in
mov
leave
cmpsb
enter
xchg
repz
scas
add
sub
and
add
jp
test
out
pop
mov
push
inc
and
lret
push
mov
mov
jb
mov
fisubrs
scas
xorb
sbb
leave
bound
and
mov
ds
push
xorl
sub
lahf
decl
push
jg
sbb
sahf
jns
imul
jp
adc
xchg
pop
mov
daa
mov
add
inc
dec
jae
mov
and
mov
jmp
dec
daa
mov
mov
aam
clc
daa
test
dec
ljmp
fnsave
fldt
scas
insl
stos
data16
js
loop
xchg
cmp
dec
enter
shlb
mov
push
sub
dec
data16
jne
pop
inc
test
rcrb
bound
sub
and
in
pop
sub
adc
cmp
adc
lock
dec
outsb
in
xor
and
pop
jb
loopne
and
pop
mov
rcrb
lret
jo
daa
push
jg
xchg
jle
ja
mov
pop
push
jo
hlt
push
pop
notb
push
mov
inc
push
ret
stc
inc
cli
push
out
cmp
adc
dec
mov
push
and
push
xchg
adc
dec
aas
cmp
sarl
adc
lds
popl
push
jae
xchg
repnz
mov
mov
xor
mov
push
add
xchg
aas
adc
out
jmp
inc
mov
cmp
fcoml
mov
or
aaa
test
repz
xchg
xlat
ds
cmp
xchg
fsubrl
cli
sub
and
out
movsb
push
in
inc
arpl
loope
xchg
aam
and
add
outsl
mov
repz
jl
popf
sbb
mov
rcrb
xchg
add
out
cmpsl
mov
and
call
bound
arpl
fcmovbe
fildll
dec
or
mov
sahf
xchg
int
cmc
scas
aas
je
mov
adc
or
jb
repnz
lret
xchg
shl
outsl
repz
outsb
push
dec
sarb
push
mov
mulb
mov
fidivrl
jb
lods
cmpsb
std
out
cwtl
push
or
mov
clc
sbb
test
insb
pop
jle
je
addb
sahf
push
sbb
adc
mov
cmp
mov
outsl
bound
movsl
and
jo
hlt
sbb
sbb
jecxz
jl
loopne
add
xor
nop
pop
fdivrs
cmp
and
aas
mov
popf
mov
fisubrl
inc
pop
or
jle
fistpll
adc
std
fisttps
add
mov
stos
std
cltd
and
inc
popa
jle
jp
push
sbb
push
push
xchg
dec
xor
in
jecxz
mov
loopne
pop
out
jns
dec
mov
push
shl
push
testl
das
xchg
xchg
fucomp
int3
jae
ret
add
shlb
and
mov
repnz
xchg
mov
rorb
fsubl
mov
leave
sti
pop
or
into
imul
cwtl
out
clc
aam
pop
inc
inc
mov
xor
lock
xor
xchg
cmp
jg
pop
cmp
aas
mov
xor
lcall
mov
pop
mov
push
shr
push
sub
pop
ret
cwtl
xchg
mov
aaa
add
lret
xchg
cwtl
lods
push
add
dec
rcll
mov
mov
push
and
test
and
ret
je
je
insb
pusha
sbb
pop
mov
daa
nop
popf
cmpsb
popa
cmp
cmp
testb
adc
push
jae
add
stos
xor
nop
dec
sbb
sbb
mov
adc
mov
mov
add
popf
xchg
rcrb
sbb
mov
in
fwait
mov
pushl
cmp
cwtl
test
mov
movsl
test
enter
sti
xor
sub
ficoml
outsl
or
hlt
lret
dec
mov
jnp
pop
leave
test
pop
das
cmp
mov
pushf
dec
or
cmpb
pop
jge
adc
dec
jmp
jae
mov
out
jecxz
ret
sbb
inc
push
xor
cmp
cmc
dec
xchg
ss
in
xchg
dec
xchg
dec
xor
lods
mov
xchg
mov
mov
xchg
std
inc
or
jno
cmp
aam
mov
sbb
in
insl
das
inc
out
scas
out
aad
fidivrl
scas
das
cli
inc
int
mov
loopne
xchg
les
lcall
push
enter
sub
fwait
cmc
mov
inc
dec
sahf
gs
out
inc
xchg
inc
ss
push
pop
push
adc
and
inc
jmp
je
out
fsubs
xor
inc
and
jnp
pop
mov
iret
dec
shr
rcrb
cmpsl
mov
mov
and
bt
xor
pusha
leave
cmpsb
mov
cmpsl
hlt
andb
xchg
test
or
mov
jge
or
mov
movsl
add
sub
std
insl
je
and
jbe
or
sti
imul
jp
lock
mov
mov
add
ljmp
scas
loop
jnp
adcb
sahf
lock
adc
push
mov
push
adc
mov
and
push
cli
push
xchg
fsin
stc
movsb
stos
clc
xchg
dec
sbb
xchg
lret
xchg
iret
loop
test
mov
jns
xlat
rcrl
jb
out
cmp
sub
xchg
es
and
pop
stos
inc
daa
shll
pop
xchg
jno
fs
xor
test
push
incl
repnz
xchg
inc
pushf
aam
fsubr
jmp
stc
pop
cmp
popa
jnp
mov
imul
in
gs
mov
sub
mov
imul
aam
add
popf
cltd
out
int
enter
mov
call
call
cmpsb
lcall
pop
pushf
and
push
daa
mov
inc
popf
es
rorb
int
mov
mov
inc
sub
loopne
testl
push
call
in
xchg
adc
cld
cmp
test
push
ljmp
push
pop
hlt
mov
cli
std
loopne
xlat
push
sub
mov
cmp
aad
movsl
add
mov
in
mov
push
xor
mov
push
insb
out
inc
bound
dec
mov
test
jecxz
mov
ds
iret
out
xor
inc
mov
rcrb
ljmp
pop
in
jno
stc
jle
sub
mov
adc
dec
movsl
fdivp
outsl
sarb
mov
pop
inc
xchg
pop
pop
jno
push
not
ja
inc
add
lods
stc
dec
adc
lods
aam
inc
cmp
scas
sub
outsl
push
aas
lret
inc
pop
mov
ret
lret
mov
xchg
lods
out
test
mov
mov
cmp
dec
ja
movsb
dec
add
sti
xchg
adc
push
adcb
inc
mov
int
insl
sub
je
sub
and
addl
sub
adc
lods
shl
mov
cmc
mov
jle
fmull
test
fabs
jecxz
push
push
aam
add
out
push
mov
push
add
xchg
mov
test
xchg
scas
mov
out
and
js
jmp
cs
testl
repnz
imul
rorb
aam
in
fnstsw
call
scas
je
pop
lds
sub
jp
fwait
push
or
jno
dec
orb
imul
sub
mov
mov
ficompl
cmpsb
xchg
fiaddl
repnz
cmp
lret
push
adc
out
push
out
sub
pop
add
jb
jp
addr16
and
clc
sbb
xlat
fwait
ja
je
rorb
pop
xchg
ss
xor
jmp
cmp
cmc
cld
cs
idivb
cmpsb
in
and
adc
int
or
in
sub
lret
adc
mov
testb
xchg
into
idivl
push
jo
mov
fwait
cmp
mov
adc
pop
in
and
pusha
push
lcall
out
out
sbb
pop
leave
add
in
mov
popa
xchg
add
jae
aad
push
mov
call
les
xor
mov
not
lret
pop
and
and
out
in
fwait
jbe
insl
sbb
push
pop
mov
div
cs
imul
fsubl
dec
push
dec
jnp
popf
sub
pop
rorb
push
ds
xchg
or
fsubr
jae
lret
pop
shl
outsl
sub
sti
es
inc
stos
and
cltd
leave
fldcw
orb
ds
inc
mov
loop
cld
dec
mov
jecxz
je
xchg
popf
mov
mov
and
push
lea
dec
in
sbb
xor
shl
pop
adc
jb
test
dec
xor
fs
mov
test
shlb
int3
ret
or
xchg
mov
aas
lret
jmp
cli
push
sbb
lret
adc
mov
mov
or
mov
in
psrlq
mov
and
inc
int
jmp
mov
lahf
sbb
pop
jl
imul
dec
add
xchg
jo
sbb
rol
sub
lea
sbb
repz
sti
cs
lahf
subb
push
sub
pop
mov
stos
filds
jmp
jae
aad
xlat
or
repnz
mov
int
loop
jp
lcall
scas
sub
sub
dec
in
cwtl
sbbb
imul
adc
testb
dec
add
jo
adc
cmp
sbb
cmp
xlat
or
lods
dec
mov
mov
inc
push
inc
sub
insb
leave
andb
adc
cli
sbb
mov
in
and
int3
mov
sbb
inc
add
std
pop
fldz
inc
outsb
es
push
fwait
adc
lods
push
jmp
lods
xchg
js
pop
div
das
mov
mov
lea
fisttpll
jmp
sbb
and
adc
mov
bound
fstl
dec
imul
mov
cmp
int3
add
lods
add
and
ds
dec
scas
mov
cli
fwait
jl
push
inc
fisubrs
mov
mov
or
lds
add
jp
insb
lret
lea
mov
add
imulb
lcall
fsubs
push
or
pop
mov
stos
ljmp
rcrl
das
jbe
fisttps
out
insb
xchg
mov
or
arpl
mov
mov
push
xchg
xor
cmp
in
lock
mov
and
mov
add
aaa
mov
mov
cmp
and
repz
lret
jae
and
mov
mov
xor
add
idiv
mov
ds
jo
fnstsw
fstl
jmp
pop
out
jp
xor
mov
mov
loopne
mov
ja
cld
mov
lock
jg
ret
jecxz
xorb
xchg
das
jnp
clc
aaa
shrb
enter
mov
jb
lcall
test
mov
test
mov
cmc
push
dec
add
jp
sub
shl
roll
test
push
xor
lea
pop
scas
out
jmp
inc
mov
pop
mov
cltd
into
in
or
ja
sbb
fimuls
loop
test
fcoml
sub
jae
mov
adc
inc
mov
pop
dec
jnp
mov
ret
std
ret
imul
mov
jne
and
je
sarl
jno
sub
and
pop
ret
lea
rorl
cmpsb
dec
call
cmp
xchg
fcoms
in
in
or
inc
jge
js
jp
loopne
stc
cltd
js
xchg
cli
or
loopne
dec
xor
out
dec
mov
popa
sbb
or
fiaddl
jmp
push
adc
test
mov
mov
xor
and
call
pop
cmp
cld
mov
pop
shr
cmp
or
xchg
addr16
pop
in
xor
adc
xor
loop
cltd
fnsave
jno
test
sub
sbb
mov
adc
in
push
call
je
ja
push
or
aam
insl
outsl
lods
repnz
loop
mov
dec
mov
pop
xor
cmp
ss
xor
jae
and
jbe,pt
das
and
push
xor
pop
pop
hlt
cmpsl
imul
jg
sbb
push
push
cmp
jmp
nop
pop
sub
push
outsb
lahf
jecxz
jns
nop
sub
out
lret
sbb
cmp
mov
sarl
lret
push
mov
mov
xor
sbb
mov
loop
jecxz
loope
stos
xlat
xchg
outsl
les
lret
stos
fsubl
add
loope
jmp
mov
dec
inc
ret
pop
cmc
xor
in
test
outsb
push
or
add
sbb
pop
loope
repz
lds
and
lods
adc
bound
push
cmp
push
sub
dec
jns
ja
aas
mov
leave
jl
mov
ljmp
mov
pop
lret
inc
jmp
aad
push
sbb
xchg
adc
in
outsb
inc
es
divl
cmp
ja
icebp
inc
aam
push
dec
mov
jnp
ficomps
ret
pop
add
ja
lds
rcrb
loope
mov
jae
pop
and
lds
xor
je
repz
shrl
popf
or
xor
push
push
dec
test
mov
mov
xor
icebp
mov
mov
mov
mov
aam
push
mov
pop
mov
push
into
daa
loope
repnz
ret
in
sub
aam
mov
fdiv
inc
lcall
fidivs
cmp
loope
xor
jo
daa
jecxz
hlt
mov
fwait
xor
dec
sbb
and
xchg
push
lock
fmul
push
outsb
push
adc
dec
push
pop
pushf
out
hlt
andb
ja
cmpsb
jne
ja
icebp
mov
mov
xorb
push
loope
dec
pop
cltd
js
insl
mov
in
aad
cltd
fucomip
mov
popa
push
in
clc
fildll
testb
adc
cmp
in
test
pop
popf
jo
mov
imul
shll
sbb
pop
add
in
xchg
dec
icebp
fstps
aas
shlb
mov
pop
push
mov
jle
scas
ss
flds
scas
ret
dec
jns
out
sbb
fists
mov
lock
pop
rorl
cmp
int
es
jge
mov
psubusw
lret
scas
inc
dec
jmp
rep
cmp
insl
xor
js
xor
in
decl
push
inc
test
dec
sub
xor
int3
jecxz
cmc
adc
mov
cli
in
lods
xchg
int3
stc
cmc
js
mov
sub
adc
push
mov
xchg
out
inc
dec
int
sub
push
add
inc
xor
cli
mov
pop
iret
jg
add
and
es
mov
out
mov
mov
push
xor
cmp
aad
mov
jnp
fisttpl
stc
negl
cmpsb
stos
rorl
fwait
idivb
icebp
mov
xchg
pop
call
xchg
mov
aaa
mov
mov
adc
lahf
mov
decl
or
add
jno
ljmp
mov
iret
xor
mov
scas
popf
cltd
and
clc
sub
imul
pop
mov
sbb
out
mov
es
outsl
sahf
fisubs
jbe
mov
xor
rcl
or
bound
cmp
adc
and
popf
addl
lock
lea
scas
pop
sub
pop
cltd
dec
jnp
imul
loope
mov
add
stc
push
jp
adc
mov
jmp
aam
popa
adc
cmp
bound
out
push
sub
lahf
pop
and
popf
in
rorl
mov
js
push
add
enter
scas
scas
lcall
lock
mov
ds
into
xchg
inc
jae
aas
rcrb
aad
in
jbe
aas
mov
push
movaps
xor
adc
mov
xlat
xor
or
fucomip
pop
cltd
test
add
push
aas
ja
fwait
aam
push
cmp
gs
xchg
aam
cltd
sub
dec
sub
cmp
popa
mov
and
mov
jg
addb
sub
xlat
test
xchg
lcall
jmp
shlb
sbb
sub
fimuls
shl
imul
repz
pusha
mov
sub
sub
adc
pop
mov
lock
popf
hlt
mov
pop
lcall
cmp
mov
and
lret
lods
setge
inc
cltd
mov
xor
and
or
lock
sbb
loop
push
repz
arpl
ljmp
dec
insb
mov
mov
sbb
xor
mov
jg
xchg
mov
test
std
mov
lea
xor
jecxz
sub
iret
pop
mov
xor
adc
sbb
in
aaa
sti
orl
xor
mov
inc
and
mov
mov
inc
adc
push
fldt
pop
add
cmp
jo
nop
jecxz
aad
repnz
neg
xchg
push
cs
popf
mov
mov
push
dec
mov
pop
cmp
fmul
xor
shld
nop
test
int
scas
ret
cmp
jo
cmp
mov
icebp
mov
pop
sub
mov
and
aad
popa
insb
mov
jle,pt
pop
push
out
xchg
imul
and
cmp
and
cmp
das
lds
adc
scas
jne
int3
inc
outsb
mov
sub
and
mov
repnz
sbb
hlt
scas
adc
fiadds
mov
lahf
and
loope
pushf
or
lret
out
in
loop
sub
filds
loopne
std
out
in
push
xor
ret
xor
stc
imul
std
stc
push
in
mov
pop
popf
es
out
insb
pop
dec
outsb
std
cld
push
xchg
fnstcw
mov
push
xor
data16
push
cli
ss
stc
inc
sub
in
sub
out
jnp
jg,pt
mov
ficompl
dec
pop
jmp
mov
mov
cli
in
jns
subl
jp
js
push
and
jg
xchg
xlat
andl
push
movsb
sti
push
pop
cmp
mov
ds
mov
fisubl
daa
push
clc
int3
stc
pop
dec
int
push
enter
hlt
mul
test
incb
test
cli
or
cld
xlat
pop
xorb
add
jecxz
shlb
xchg
call
cltd
xor
ret
pop
and
dec
clc
sbb
fistl
fwait
mov
clc
dec
stc
aam
mov
pop
out
out
jnp
rcll
pop
ss
xchg
push
inc
dec
lcall
fisubs
push
addr16
sbbb
hlt
in
js
mov
popa
aaa
and
imul
mov
aaa
and
dec
scas
dec
in
jae
cs
lret
data16
sub
movb
dec
mov
mov
jg
aaa
mov
xchg
sbb
pusha
pushf
pop
movsl
sub
movsl
or
lods
cmp
sub
sub
pop
xor
mov
push
jl
lcall
cmp
sbb
in
lcall
fsub
push
push
jne
cmp
lcall
xorb
adc
dec
xchg
test
xchg
lods
jb
pushf
sbb
movsl
cmp
das
iret
push
in
xor
mov
icebp
sub
inc
stc
or
aam
or
cwtl
fmull
lock
mov
pop
jnp
cs
cmc
dec
lods
ja
mov
in
inc
mov
cmp
pop
jge
adc
and
push
sbb
cli
imul
and
jmp
cmp
fdivrs
pop
and
fwait
pop
out
jno
add
mov
or
out
sub
stc
or
aam
inc
lods
mov
ljmp
cmpsl
mov
scas
inc
xchg
xchg
lods
pop
aam
fstpl
fs
insb
test
scas
mov
cli
ret
shr
stc
sahf
push
hlt
dec
inc
or
push
mov
pop
inc
jge
sbb
ret
pop
mov
jne
mov
lret
jnp
mov
cmpsl
loope
bound
mov
pop
andl
push
add
lret
lcall
and
pop
js
lahf
push
mov
jecxz
pop
pop
test
jns
push
xchg
lcall
jmp
adc
dec
jbe
and
dec
jmp
jecxz
push
test
add
and
adc
repnz
push
adc
jl
aas
jg
roll
rcrb
add
pusha
inc
loope
mov
aas
cmp
rorl
mov
arpl
fisubl
push
mov
mov
xor
insl
cld
xor
jbe
dec
lods
jmp
mov
add
dec
stc
and
sub
sub
mov
stc
aaa
ljmp
inc
mov
jg
movsl
mov
mov
cmp
cld
notl
gs
fildll
push
and
sub
out
sbb
inc
and
insb
push
mov
in
mov
lock
jbe
inc
outsl
push
jb
movsl
xor
push
xor
clc
and
repz
decb
or
and
push
fnstenv
add
jmp
aaa
insb
loop
std
loop
in
shrl
in
aam
xchg
lock
enter
scas
repnz
or
xorl
mov
mov
lock
xchg
push
repz
es
cmp
cmp
les
push
imul
dec
xorl
mull
inc
fmuls
hlt
pop
sahf
inc
dec
cmpsb
test
cmp
cmp
mov
setp
sbb
jb
push
xor
and
enter
scas
push
std
mov
xor
daa
lret
dec
pop
mov
or
push
mov
or
icebp
xchg
mov
mov
fisubs
push
fisubs
imul
hlt
cld
mov
repz
mov
bound
fadds
dec
rclb
sti
add
jne
mov
repz
sbb
test
cwtd
xchg
out
push
xchg
and
loope
cmp
insw
pop
mov
xor
cmc
add
scas
in
sahf
imul
add
dec
fiaddl
adc
push
in
popf
xchg
fcmovnu
xor
out
or
mov
cs
push
fs
add
add
push
cmp
out
mov
xchg
pop
push
clc
sbb
outsl
or
xor
loop
adc
mov
sub
sbb
stos
add
mov
repz
insb
dec
test
dec
cmc
sub
jecxz
adc
xor
jmp
imul
es
stos
outsb
inc
xor
cld
dec
faddl
add
sbb
adc
dec
xor
rorl
mov
and
cmc
pop
mov
fstl
mov
cld
mov
pop
out
cwtl
mov
mov
mov
mull
adc
xor
sti
mov
cmp
jae
int
scas
inc
nop
iret
lock
mov
lods
dec
nopl
mov
pop
cwtl
sub
cmp
add
clc
jbe
mov
xchg
imul
fldl
sahf
insl
mov
push
jb
fistpll
movsb
mov
xchg
add
lds
mov
test
stc
dec
daa
mov
inc
push
xlat
add
shrb
pop
popa
adc
inc
pop
pop
stos
mov
icebp
imull
sti
xor
stos
and
jg
std
inc
adc
mov
jo
das
and
ljmp
popa
sub
insl
jne
mov
repz
mov
dec
lret
xchg
add
lds
push
popf
ja
cltd
daa
xchg
jp
mov
outsl
mov
push
out
out
mov
inc
push
aaa
sarb
lock
inc
mov
mov
xchg
cld
cmp
inc
push
add
test
push
dec
adc
push
mov
jbe
adc
stos
popa
xchg
inc
pop
lock
mov
jns
jo
nop
and
mull
mov
ret
jnp
cmp
and
daa
add
int3
fmuls
int
adc
sbbl
jbe
jae
jmp
gs
and
cmpl
mov
dec
fcoms
pop
shr
ja
jnp
fnstcw
push
mov
mov
jo
push
inc
jl
stc
and
pop
inc
das
mov
daa
cwtl
xchg
bound
dec
repnz
inc
in
xor
xchg
loopne
data16
push
or
jns
fimull
xchg
test
data16
lret
bswap
add
xchg
lret
ss
cli
adc
jmp
mov
push
leave
push
cmpsl
fucomi
mov
mov
loop
xorl
andl
lahf
or
add
add
jl
jae
jg
cmpsb
adc
incl
sarb
sbb
sti
shll
mov
cmpsb
push
out
scas
push
sub
and
ja
mov
xor
popa
out
pop
sbb
mov
lcall
leave
adc
movsb
inc
jle
mov
rep
imul
je
sti
cmp
inc
stos
dec
pop
dec
shl
mov
xor
nop
or
mov
repnz
pop
fimuls
jbe
or
jns
popf
add
push
push
mov
xorb
xchg
insl
and
jle
shll
sbb
loopne
lcall
inc
or
mov
dec
xchg
ficomps
lds
dec
jbe
jle
cs
pop
jb
fidivs
ficoms
push
jns
push
lahf
jg
fisttpl
out
lahf
inc
int
cmp
dec
imul
aas
mov
scas
in
data16
or
push
int3
add
mov
gs
xchg
dec
scas
jne
mov
js
push
adc
into
mov
mov
ss
fbld
das
loop
lods
pushw
repz
addr16
test
daa
or
or
add
data16
stos
adc
daa
les
outsb
mov
dec
mov
pop
lret
dec
les
negl
xchg
mov
jb
jb
adc
jo
jnp
mov
mov
dec
and
jmp
sub
in
int3
push
sbb
mov
cmp
cld
rcr
mov
jbe
jmp
dec
sbb
inc
xchg
sbb
lods
or
arpl
dec
int
mov
arpl
sub
mov
loope
cmp
xor
mov
fldl
dec
jno
jge
and
push
out
dec
loopne
aaa
mov
iret
dec
out
cli
pop
in
aad
mov
push
push
inc
imul
fs
in
mov
data16
mov
mov
mov
pop
in
movsb
repz
std
pop
adc
aas
mov
add
sbb
ret
pop
fisubrs
cmpsl
mov
loopne
in
sbb
sarb
insl
jg
ficomps
in
in
xchg
or
or
into
dec
and
xchg
outsb
testb
mov
adc
sar
sbb
pop
adcl
or
sub
cmp
in
or
add
sub
sub
lret
xchg
inc
jbe
fsubr
sub
shrl
int3
test
push
sbb
jne
aaa
cmpb
xor
ret
stos
pop
ja
and
repz
ds
cmp
loope
mov
enter
in
add
push
fs
fwait
jmp
jge
ja
int
or
mov
popf
fistps
mov
int
cltd
dec
cmp
test
or
loopw
nop
imul
out
jb
push
loopne
or
push
mov
in
scas
mov
test
lods
stos
sbb
dec
cmp
push
cmpsl
icebp
inc
pop
fs
jge
mov
jmp
jo
std
test
push
sbb
xor
scas
jno
test
pop
xchg
insb
cmp
outsb
aam
sbb
or
and
push
out
out
xchg
cli
xor
fnstcw
or
pop
sub
scas
xorl
jp
cmp
sub
dec
stos
sbb
jl
push
mov
mov
or
movsb
pushf
push
add
es
es
data16
cmpsb
sub
loope
out
out
repnz
aad
out
ds
add
fnstsw
add
mov
mov
push
mov
gs
or
flds
mov
sbb
daa
push
and
scas
loop
or
scas
mov
shrl
mov
test
jg
add
xchg
dec
and
aas
jmp
mov
add
stc
adc
out
outsb
shr
andl
mov
fdiv
pop
inc
repnz
jle
cmc
movsl
push
sti
rcll
mov
fcmovne
push
push
inc
stos
idivl
pusha
mov
mov
aas
mov
and
sub
stc
jae
lds
inc
cmp
idivb
pop
stos
imul
je
out
loopne
fs
scas
lret
or
mov
push
jecxz
pop
repnz
mov
xchg
repnz
add
jle
mov
addr16
adc
cmp
push
scas
mov
mov
pushf
cltd
xchg
mov
out
repz
pop
jge
mov
mov
dec
int
cmp
out
mov
dec
cmc
dec
jo
in
adc
pop
das
xlat
iret
out
loopne
in
jne
jno
mov
test
test
nop
xor
dec
lret
icebp
daa
fs
repnz
push
pop
and
mov
out
xlat
xchg
jbe
push
adc
les
movsb
mov
sbb
pop
xchg
aaa
stos
pop
add
fisubl
cwtl
mov
call
ficomps
popa
inc
xchg
cltd
aad
and
adc
popf
arpl
out
loope
jno
cmp
lods
jecxz
js
pusha
pop
mov
jmp
jmp
mov
cmp
movsl
hlt
clc
orb
fwait
jp
xor
pop
mov
lea
sbb
add
sti
xchg
repz
ret
jge
mov
repz
fstpt
cwtl
lds
pop
push
push
pop
and
mov
in
mov
lret
push
hlt
out
inc
mov
jg
test
jne
cmp
jmp
ret
and
mov
jns
mov
repnz
lods
mov
sbb
sbb
sbb
add
imul
lret
scas
push
mov
hlt
pop
mov
sahf
stc
in
test
sbb
cmp
mov
mov
pop
daa
push
lret
or
loope
adc
ror
test
data16
mov
mov
bound
cmp
fucom
fxch
sbb
mov
rcll
or
shll
add
push
sbb
jo
nop
ret
ror
adc
mov
mov
int
aaa
jmp
mov
stc
inc
mov
lahf
fwait
lcall
scas
mov
rcr
hlt
lods
sub
xchg
sbb
loopne
xchg
and
push
jle
mov
mov
leave
mov
jno
mov
push
divl
cmp
cmp
mov
sub
fcompl
jecxz
in
lret
cmc
dec
rcl
pusha
pushf
jae
popf
xor
or
dec
sub
fcompl
addl
push
out
out
and
push
xchg
xor
push
push
enter
pusha
loope
push
aaa
dec
jne
jge
shll
mov
mov
sbb
insb
cmpsl
std
lret
xor
icebp
sub
dec
push
xlat
push
mov
fcomps
and
xchg
loope
in
rol
popf
and
mov
add
mov
dec
adc
cmp
into
sub
in
pop
clc
int
add
lea
pop
pop
movsb
mov
notl
loope
ja
cmp
fs
xorl
mov
lea
or
jno
inc
in
push
xchg
mov
sbb
adc
test
out
loop
cli
cmp
rol
popa
xchg
inc
outsl
cmp
jp
and
inc
fldenv
and
pop
out
sub
push
mov
mov
clc
jg
mov
lea
adc
push
sbb
jge
dec
xor
filds
jg
mov
jnp
fnstenv
ss
fwait
fwait
jne
mov
dec
test
rolb
sbb
mov
xchg
aaa
xchg
or
cwtl
push
inc
out
push
and
cli
jle
ds
mov
sbb
pop
pop
and
mov
mov
lret
mov
es
jns
sbb
xor
cmp
mov
push
push
popa
orl
int
jnp
call
test
jbe
filds
hlt
push
inc
shll
sbb
jnp
push
xchg
and
adc
pushl
movsl
cs
mov
mov
mov
fwait
sbb
std
inc
cli
leave
stos
test
push
lods
jo
stos
xor
iret
cmp
je
mov
mov
inc
lret
inc
xor
dec
inc
ds
stc
cmp
cmp
cmpsb
pop
mov
push
cmp
ja
outsb
inc
inc
push
mov
dec
pop
pop
int3
insl
adc
sahf
ret
mov
ss
arpl
dec
sub
mov
scas
jp
dec
add
loop
ss
aaa
cmp
dec
push
out
test
and
dec
xchg
stc
and
and
jmp
mov
ffree
test
imulb
mov
sbb
fmuls
sbb
add
mov
pop
test
and
test
cmpsl
out
cld
mov
dec
sub
aam
js
mov
sahf
inc
pop
and
cwtl
pop
mov
js
or
loop
sbb
imul
xchg
mov
and
test
push
movsb
jb
les
inc
mov
imul
mov
pop
ljmp
loop
lods
shlb
mov
cmp
ret
and
popa
clc
dec
popf
push
sub
xchg
jl
cs
adcl
lods
inc
mov
movb
arpl
sarb
and
cmp
lea
dec
test
and
std
or
xchg
gs
jno
dec
dec
popa
je
or
cmp
jmp
test
out
or
adc
xor
dec
leave
cld
cmp
dec
cmp
inc
lods
push
jg
int3
hlt
xchg
or
sbb
push
imul
mov
mov
mov
div
mov
bound
fmul
stos
sbb
sbb
sbb
mov
cs
repnz
sub
xchg
dec
pop
pop
lret
enter
mov
fstps
lret
jp
leave
push
in
iret
mov
inc
test
cld
pop
out
test
ficoml
xor
cmp
or
xchg
xlat
push
xorps
jg
mov
js
sbb
js
sub
test
cs
jg
lret
lret
movsl
adc
out
mov
xchg
out
dec
sahf
sub
outsb
rolb
mov
adc
cmpsl
dec
cmp
mov
push
and
imul
aad
xchg
leave
cmc
int3
jp
repnz
adcl
xchg
inc
pop
sub
out
sub
push
mov
adc
push
xchg
pop
mov
call
shll
xchg
gs
mov
rorl
aas
jmp
fs
jmp
mov
dec
in
jecxz
jmp
jb
xchg
ljmp
add
jmp
subb
mov
in
xor
lds
fsubl
xor
push
fwait
inc
movsb
cltd
mov
sarl
mov
sub
mov
scas
hlt
mov
into
push
mov
push
xchg
cld
add
mov
xchg
out
out
iret
sub
dec
pop
mov
fistpll
mov
insb
sub
fwait
ljmp
aas
push
outsb
cmpsb
xadd
push
sub
das
pmovmskb
stos
cld
shrb
add
lcall
push
clc
outsl
adc
lods
cmp
outsl
lock
aam
jo
sbb
rorl
push
jb
lods
xchg
clc
int3
out
fsubrs
outsl
push
mov
push
push
lret
leave
sahf
pop
cld
push
mov
pop
fcoms
es
jg
hlt
jle
inc
das
push
ja
or
mov
loopne
jmp
roll
mov
in
popa
daa
jae
or
fisubrl
cmp
js
mov
sahf
cmp
fists
fisttpll
xchg
pop
inc
mov
xchg
ret
in
outsl
mov
mov
mov
inc
stc
jno
pop
cld
daa
jo
mov
hlt
jne
movsb
movsb
mov
cmp
xor
mov
ds
sar
xlat
sahf
stos
mov
mov
inc
ja
fs
mov
clc
sbb
push
popf
dec
mov
jbe
imul
sub
push
dec
and
or
xchg
bnd
aad
jb
inc
cmpsb
cmp
push
and
out
out
xlat
push
inc
jne
xchg
cli
mov
out
pop
sbb
popa
ds
jb
and
cmpsl
inc
add
inc
push
or
xor
add
dec
stc
jmp
push
es
pop
jl
loop
dec
mov
sti
ss
ficomps
mov
jge
sbb
adcb
mov
inc
ret
mov
addr16
add
push
es
cmp
sbb
sbb
sbb
fstps
mov
or
imul
std
test
push
push
pop
in
inc
scas
mov
arpl
or
mov
and
inc
mov
mov
lds
incb
push
insb
movsb
ret
inc
clc
fstpt
push
jb
push
xchg
mov
cmp
xchg
cmp
mov
psrlq
jl
insb
cld
sub
stc
fcomps
jnp
xor
xchg
mov
dec
add
xchg
into
sbb
jmp
cli
cmpsl
inc
pop
stc
or
pop
test
and
push
movsl
jle
iret
or
fsts
xor
fstps
hlt
dec
cmp
sbb
and
dec
add
add
cltd
daa
sub
rolb
cmpsl
xor
fists
in
stc
mov
inc
movsb
test
out
icebp
movsb
es
lods
add
jge
mov
inc
xor
xchg
std
sub
push
into
cmc
aas
outsl
sub
fisttpl
aam
sahf
adc
sbb
jecxz
jecxz
sbb
dec
lret
mov
roll
mov
xor
pop
shlb
cmc
sbb
psubusw
pop
adc
clc
std
sbb
sub
cmp
lods
add
xchg
pop
cld
mov
jp
mov
mov
xchg
add
xchg
and
mov
inc
sub
pop
pop
push
cmpsb
hlt
mov
mov
test
popa
dec
add
xchg
cmp
mov
pop
push
fistpl
leave
xor
aaa
fcoml
shrl
rcl
add
cmp
stc
add
add
add
in
movsl
or
out
imul
sub
xchg
adc
in
push
jp
movsb
aad
xchg
fmul
test
mov
inc
shl
addr16
jae
sbb
push
in
rolb
jae
in
lods
xchg
mov
sti
les
or
mov
mov
xchg
bound
cli
movsb
mov
lcall
mov
cwtl
and
int
push
jns
mov
sub
cmc
dec
cmp
in
adc
pop
pop
jp
sahf
pushl
mov
pop
pop
inc
or
fs
aam
lcall
loope
aas
jae
hlt
push
leave
stos
jno
pop
push
test
xchg
jae
or
jl
leave
or
cmp
repz
mov
or
arpl
jg
xor
aam
ret
jae
mov
popa
sti
or
sub
out
cmp
test
lret
jmp
popa
xchg
push
std
push
add
dec
into
adc
lea
loope
mov
lret
adcb
mov
movsb
rclb
or
sbb
outsl
inc
sbb
push
mov
adc
lcall
fsubrl
dec
daa
lods
sub
int
inc
sub
imul
xchg
sub
add
jge
and
add
scas
ficompl
pop
aam
xchg
sub
movsb
imul
rcr
jg
test
dec
in
in
movsl
and
outsb
leave
out
fdivl
sub
ret
and
xchg
in
inc
fildll
out
lahf
and
sbb
lods
fistpll
inc
rclb
out
xchg
push
movsb
fimuls
jmp
js
incb
cwtl
pop
ficompl
cmp
clc
xchg
jl
outsb
jne
inc
inc
mov
sar
cmp
adc
push
mov
repnz
dec
xor
jns
add
mov
fisttpll
call
cwtl
inc
stc
in
mov
lods
adc
adc
in
out
repnz
shl
nop
mov
dec
jnp
int
int
push
or
out
jp
aaa
mov
cmp
push
push
ret
push
push
data16
and
add
adc
jle
cmp
scas
test
das
dec
dec
popa
out
int
xor
pop
adc
les
cmpsl
in
scas
stc
sbb
adc
jl
push
inc
fcmove
sub
addr16
mov
push
mov
testb
and
imul
mov
call
outsl
in
das
cltd
sub
add
cmp
mov
stos
xorl
cmp
push
cmp
hlt
sahf
sub
lcall
dec
add
test
ss
inc
or
and
scas
scas
pop
sub
mov
inc
jb
jl
int
sub
loope
adc
out
mov
cmpb
push
lods
stos
sarb
loope
lgs
jnp
and
jae
push
int
aaa
int
repz
or
push
shrl
cmp
mov
pop
shlb
sti
pop
fildl
xorl
or
inc
mov
pop
sub
lods
cmc
push
inc
orl
movsl
push
mov
mov
pop
ds
cmp
sahf
adc
xchg
movsl
test
scas
mov
xor
xor
lahf
paddusw
pop
lock
mov
inc
jbe
mov
je
pop
and
cs
rclb
adc
je
fistl
mov
insl
mov
aaa
das
je
sbb
outsb
fs
inc
mov
inc
addb
sub
inc
mov
pop
imul
push
sbb
je
fsubrl
sub
popf
stc
pop
negl
cmp
adc
adc
dec
jg
and
outsb
dec
mov
inc
jmp
lds
cli
int
cmp
rolb
outsb
sub
jmp
xor
out
pop
insl
ljmp
mov
stc
fisttpll
sarl
arpl
xchg
aaa
iret
pop
xor
adc
ficomps
adc
shufps
mov
scas
xchg
icebp
inc
cli
sbb
jbe
or
orb
xor
mov
movsl
dec
sti
mov
push
cmpsb
mov
push
jo
jnp
or
rorl
xlat
mov
ja
inc
sar
dec
aam
adc
push
out
xchg
lret
movsb
ficomps
push
sub
mov
sub
mov
cmpsl
out
jo
mov
pop
sbb
insl
and
lock
subb
insl
mov
shll
aaa
mov
cmpl
jb
xchg
cmp
cmp
shlb
out
iret
ret
sti
test
cmp
dec
in
insb
xor
mov
cltd
js
xor
xor
idivb
mov
sub
mov
xor
jecxz
sbb
lret
mov
into
frstor
sub
or
mov
call
adc
xor
fadds
mov
call
pop
add
push
call
xchg
dec
sti
push
addr16
jno
fwait
int
ss
outsl
cltd
aaa
outsl
xstore-rng
cmpsl
push
adc
neg
int
mov
pop
jl
bnd
xchg
lods
pop
aas
movsl
rorl
jmp
cmpb
mov
ss
test
out
pusha
lahf
mov
stc
pusha
lds
jecxz
mov
xchg
mov
or
stos
cmpl
addr16
stc
jecxz
ds
mov
mov
adc
test
roll
les
inc
cmpsl
fnsave
xchg
lock
inc
fiaddl
clc
xchg
dec
loopne
test
cmpsb
scas
pop
stos
test
adc
mov
cmp
sub
push
mov
lods
mov
orl
daa
ror
dec
adc
in
js
test
push
mov
shll
mov
sub
push
lea
std
repnz
adc
fdivrl
lcall
aas
mov
imul
jecxz
or
dec
sbb
stc
mov
sbb
pusha
jecxz
push
pop
inc
mov
inc
pop
add
mov
fidivl
jae
call
pop
addr16
xchg
int
nop
rcrb
and
adc
lahf
dec
sub
hlt
hlt
pop
in
pinsrw
mov
insb
shll
inc
std
cmc
out
sub
sub
int
mov
mov
mov
mov
jnp
iret
sub
cmp
imulb
addb
mov
icebp
pop
adc
subl
jmp
dec
outsb
bound
iret
stos
in
outsb
jne
popf
ss
push
lds
ss
mov
insl
gs
xor
sub
bound
cmp
or
mov
ds
sub
mov
jp
les
or
jnp
popf
mov
adc
inc
lahf
mov
or
pop
bound
lock
add
or
popf
jg
mull
cmp
pushf
adc
jge
add
mov
mov
cli
scas
out
shrl
jmp
dec
out
movsl
push
js
dec
js
pop
aam
inc
rorb
dec
push
push
push
je
out
jbe
lcall
cmpsl
cmc
stc
sti
int3
fisubrs
faddp
sahf
call
cmpsl
push
jecxz
outsl
pop
and
mov
cmp
and
ret
in
pop
enter
sub
sbb
pusha
jmp
mov
cmp
in
add
mov
ret
xor
in
movsl
pop
cld
jbe
stc
lods
imul
jecxz
lods
sbb
lahf
sbb
cmp
loop
xchg
repz
out
dec
mov
lahf
ljmp
adc
fstps
and
lret
mov
nop
cmp
mov
mov
jmp
leave
mov
push
sbb
add
jne
push
add
int3
jnp
sub
cmp
add
test
xor
ror
and
push
mov
inc
stc
movsb
pop
and
mov
push
xor
daa
push
into
push
jmp
xchg
into
test
imul
fucomp
in
jne
lret
push
or
fs
ds
inc
lahf
jg
push
nop
jne
addr16
cmp
dec
jecxz
push
inc
jmp
jg
push
movsl
lcall
sbb
sbb
leave
jecxz
dec
mov
pop
cwtl
jmp
divl
jg
xor
adc
or
jg
jns
inc
inc
iret
jmp
popa
icebp
sbb
clc
in
push
insb
cmp
inc
bnd
pop
aas
push
push
cmc
pop
out
sbb
add
pop
mov
add
fdivr
push
fisttpll
lret
jle
adc
movsl
icebp
imul
sbb
ret
lds
ss
pandn
gs
mov
shlb
fsubs
jle
mov
mov
cmp
shl
shlb
sti
dec
call
xchg
jnp
push
data16
dec
sub
ss
jo
movsl
or
clc
sbb
fstps
add
inc
add
cwtl
lcall
jne
dec
jno
lcall
lods
and
repz
add
inc
lret
cltd
mov
inc
xchg
pusha
sub
scas
cmc
aad
or
daa
enter
mov
fcmovnbe
in
movsb
lret
dec
lods
sbb
and
fldcw
shll
sub
push
inc
add
dec
int
jecxz
fstpl
inc
test
ret
or
cld
ljmp
movsl
cmp
loop
xor
pusha
push
xor
out
aam
pop
sub
or
rorl
stc
in
movsl
je
dec
popf
loope
cmp
sarb
js
popf
pushf
mov
xchg
mov
sbb
sahf
adc
out
clc
pop
mov
pop
loop
add
stc
adc
or
loop
hlt
mov
push
dec
gs
divl
mov
arpl
cwtl
jmp
dec
in
nop
jno
movl
int3
es
fnstsw
ficompl
inc
gs
dec
ret
mov
jmp
imul
adc
ja
jmp
scas
mov
leave
scas
mov
sub
add
movsl
dec
lret
hlt
push
repz
pop
loope
test
pop
push
pop
inc
mov
push
mov
int
aaa
xor
sahf
or
pop
cmp
mov
fld
pop
jns
sub
pop
mov
jle
testl
cs
data16
and
dec
xchg
adc
pop
scas
sbb
fisttpl
adc
sub
pop
fadds
add
lcall
xchg
int
int
idiv
pusha
int3
ljmp
mov
cli
lcall
and
adc
push
test
pavgw
lcall
ljmp
cs
pop
lret
pop
aas
scas
je
stos
mov
call
pop
es
rcrb
rcrb
leave
cltd
inc
xor
movb
mov
add
mov
lds
cmp
lahf
mov
movsl
pop
mov
bound
mov
mov
aad
and
push
std
sar
cmpsb
inc
fisttpl
out
and
ja
xor
aad
xor
test
xchg
dec
lret
nop
lcall
mov
jne
pop
jecxz
lock
fistpll
cmc
into
pop
loopne
pop
lock
orl
push
out
outsl
imul
popf
pop
xor
dec
push
fdivrl
popa
test
inc
lret
lret
jno
out
pop
pop
movsb
js
pop
jae
jecxz
pop
add
sub
xchg
std
setle
int3
adc
repnz
inc
das
dec
jmp
sbb
pop
push
int
mov
xor
add
sti
adc
xchg
nop
jl
jle
cmp
scas
xor
fisttps
in
push
out
jg
pushf
test
jnp
cltd
lods
sub
pop
push
aaa
adc
sbb
sbb
mov
pop
adc
inc
mov
jp
mov
outsl
jns
bound
jne
repnz
int
mov
decl
inc
jo
jmp
inc
mov
pop
bound
std
mov
mov
mov
jg
sbb
or
dec
and
xor
sbb
ror
notb
jno
in
mov
popa
xlat
iret
repz
mov
xchg
outsl
add
xchg
outsb
call
inc
lahf
mov
xchg
lahf
hlt
mov
add
insl
aam
inc
pop
loopne
push
sub
fucomip
xor
hlt
lea
dec
jmp
dec
scas
sbb
loop
xor
push
xchg
xchg
and
ja
std
stos
leave
add
adc
jge
jae
iret
ret
add
ret
xor
rcll
dec
mov
lea
lahf
xchg
cld
das
xor
pop
jg
xchg
mov
jle
cli
push
fcoms
pop
fwait
sbb
and
rcrl
mov
mov
mov
inc
pop
jne
roll
jl
pop
inc
xchg
popf
mov
out
and
xor
aam
pusha
cld
dec
pushf
add
add
xchg
nop
aad
lds
mov
push
das
push
add
xchg
rcll
testl
pop
mov
mov
and
mov
imul
popf
mov
in
lcall
xchg
testl
jbe
xor
xchg
mov
notl
sbb
mov
psubq
jl
or
out
ds
movsb
and
cmpsb
sti
mov
repz
cmpsb
jnp
push
jge
and
mov
dec
xor
xor
out
dec
arpl
hlt
imul
dec
cmpsl
xchg
pop
pushf
sbb
inc
sbb
xchg
cwtl
rclb
out
mov
fstl
lods
in
mov
stos
mov
out
iret
lret
dec
sarb
sub
pop
or
ss
repz
push
xchg
mov
icebp
mov
xor
sbb
dec
stos
jb
sbb
movsl
stc
addr16
xor
lret
and
lock
fmuls
xor
cmovge
xlat
push
push
repz
sti
shrl
out
data16
pop
lahf
les
sub
clc
test
fs
dec
xchg
lret
loopne
jo
cmpsb
pop
lock
int3
in
mov
xor
divl
jno
jg
cmp
adc
and
pop
out
cmp
mov
insb
lea
jecxz
aam
sti
xchg
cmp
adc
in
cmp
ljmp
shlb
das
dec
popa
xchg
pop
push
lea
mov
sahf
enter
push
or
xchg
mov
pop
or
xor
pop
lods
int3
in
bound
orps
add
mov
nop
cmp
inc
lret
out
lods
rcr
push
dec
sub
cmp
call
dec
stos
je
movsb
sbb
loope
adc
mov
mov
rorl
jmp
lcall
sub
xchg
cmp
push
sbb
lret
mov
mov
cmc
outsl
push
jle
movsl
sbb
imul
pop
jmp
and
popa
add
test
aad
lea
push
jmp
scas
lret
fiaddl
jno
shl
ficomps
mov
cs
adc
push
fstps
aas
fmuls
xchg
testb
lods
xchg
push
lcall
iret
push
push
xor
ss
mov
jno
sub
je
jne
call
jne
lahf
fcomp
aad
cmp
orl
div
and
int3
xor
mov
push
addl
movsl
dec
aaa
jns
addr16
lret
push
hlt
into
pop
pushf
push
iretw
imul
ret
insl
or
pop
shl
jp
mov
ret
push
fxch
jo
lahf
pop
stos
add
insb
cmp
and
aaa
pusha
xchg
int3
pop
andl
cli
add
mov
push
pop
test
cmpsl
mov
je
dec
std
mov
lret
imul
lahf
jl
addb
and
pop
push
sub
test
fisubrs
ja
push
scas
xchg
inc
ror
adc
psubq
out
fwait
cmp
fstpt
xorb
inc
fsub
mov
outsb
std
xorl
inc
mov
sbb
jle
stos
sbb
cli
mov
lods
mov
xor
jmp
or
push
sbb
adc
push
or
outsl
adc
cmpsb
jb
fwait
adc
jno
data16
mov
jns
xchg
call
cmp
or
and
pop
push
mov
mov
jmp
jno
jns
les
xchg
jno
jl
jb
xor
jae
or
dec
fldenv
std
dec
ret
out
xchg
add
fdiv
movsl
jns
nop
in
loope
mov
push
aas
add
lcall
xor
push
aas
test
mov
or
mov
in
xchg
push
mov
xchg
bound
sub
jmp
push
loope
pop
inc
mov
pop
adc
sub
fadd
dec
subl
and
ret
push
jl
lcall
cmp
pop
icebp
test
aad
pop
jmp
mov
out
sbb
sub
xor
sbb
adc
or
mov
xor
fmull
and
shr
dec
and
jo
pop
js
and
push
xchg
sbb
inc
clc
fsubl
xchg
xor
jecxz
or
mulb
pushf
sub
mov
lahf
mov
cmp
cmp
pushf
inc
jle
xchg
xor
xor
sbb
xor
cmp
cli
sarl
pop
adc
out
jg
or
aas
adc
push
dec
jge
pop
pop
testb
cld
mov
fisttpll
cmp
jmp
dec
rorb
clc
fiaddl
stc
in
shll
das
sbb
inc
xor
jle
xchg
sub
std
cmc
jae
sbb
push
sub
cli
movsb
ret
cltd
jge
mov
xlat
and
cmp
xchg
shlb
mov
iret
xor
cmc
dec
mov
jle
or
rolb
cli
sbb
inc
mov
int3
push
aam
or
mov
lods
or
enter
and
out
add
pop
cli
stc
or
popl
rol
lcall
in
insl
cwtl
ror
push
lahf
mov
aam
cmp
push
in
xor
inc
mov
mov
loop
add
push
aad
lea
enter
popf
out
jo
lods
cli
adc
fcoms
ret
and
dec
jp
lods
fyl2x
mov
out
pop
jbe
mov
lret
cmp
xchg
gs
xchg
out
fs
sub
jge
out
sbb
xchg
repz
dec
iret
test
push
std
push
ret
pop
sbb
jle
out
mov
fildl
sbb
in
push
cld
aad
daa
ss
cmp
mov
mov
jp
out
push
fistpl
dec
mov
test
scas
jg
test
mov
mov
cmpb
popf
daa
cmp
xor
sub
jmp
test
or
insb
adc
imul
xchg
dec
mov
jo
mov
mov
fldt
cmp
outsb
xor
pop
xor
pusha
lcall
sub
in
xchg
adc
jae
push
sahf
mov
and
rcr
movsb
pushf
nopl
add
fadds
data16
sub
cld
xor
dec
mov
jle
or
sub
add
xchg
fwait
mov
into
and
lea
dec
jmp
stos
xchg
and
imul
scas
mov
cmp
or
loop
repnz
lahf
jl
xor
jbe
inc
pop
ja
shlb
out
insb
aad
fmul
leave
xor
adc
mov
xchg
int
mov
sarl
or
ljmp
sbb
rcrb
movsb
movsl
clc
add
mov
lahf
xchg
popa
in
or
jno
xorl
ja
repnz
repnz
lds
cmp
pop
mov
bound
dec
xchg
and
nop
ds
mov
inc
lcall
pop
cmp
jo
aas
ja
or
lds
test
xchg
nop
sbb
xchg
cld
lcall
sahf
dec
xchg
scas
sub
out
int3
in
incl
xlat
xor
cwtl
mov
lds
enter
shlb
aad
pop
mov
mov
sub
xor
xchg
or
in
sub
xorl
cwtl
cli
movsl
xchg
pop
adc
roll
std
fbld
xchg
and
aam
les
pushf
adc
lods
and
mov
push
jp
scas
aas
dec
or
out
mov
or
pop
mov
jecxz
jle
and
pop
dec
pop
icebp
pop
fistps
data16
sbb
loope
mov
stos
into
stc
flds
pop
mov
xchg
jns
int
stos
and
sti
out
pop
inc
push
xor
push
dec
mov
jne
mov
pushf
sub
fiadds
rclb
stc
push
sub
loop
sub
cmpsb
pop
xchg
repnz
mov
jmp
out
frstor
call
in
pop
mov
add
adc
les
add
cmp
nop
mov
out
sbb
xchg
fidivl
pop
gs
lret
daa
mov
in
rcrl
xchg
out
cwtl
popa
pop
mov
je
push
cmp
les
sahf
xor
or
jns
dec
dec
mov
or
jge
push
push
fcompl
mov
ds
xor
push
loopne
mov
fcmovb
mov
lods
jmp
out
call
jne
adc
sbb
loope
fsubrl
cwtl
push
popf
movsb
mov
cmp
mov
in
and
xchg
cmpsl
scas
pop
push
mov
push
fisubl
pop
lods
jg
cmpsb
mov
movsl
mov
jb
sbb
shll
add
fisttps
push
xor
int
cmp
mov
xchg
cli
cltd
aam
popa
add
sbb
bound
scas
sbb
mov
push
out
xchg
imul
push
sub
inc
imul
sub
ret
cld
arpl
lods
das
pusha
cmp
loope
sbb
pop
xchg
mov
sub
enter
push
cmc
jle
pop
and
roll
pop
lea
jns
xchg
xchg
cli
pop
mov
adc
popf
es
stos
xor
jmp
cmpsl
dec
jecxz
inc
fistps
je
dec
cmp
jnp
xchg
les
pusha
outsb
rcll
pop
aas
pop
imul
cmp
jne
dec
flds
ds
and
pop
stc
in
rorl
hlt
stos
or
ret
dec
loope
call
dec
mov
xchg
hlt
ljmp
add
push
adc
sub
fwait
iret
in
push
js
addl
cltd
jo
xor
call
sbb
mov
icebp
js
in
je
in
xchg
imul
mov
out
in
mov
pop
decl
aad
js
rclb
sbb
cmc
lcall
jmp
mov
adc
xchg
xor
jne
sbb
jl
enter
inc
int3
xchg
fimuls
aas
sub
mov
arpl
outsl
xchg
mull
xchg
fdivrs
add
pusha
andb
push
sub
pop
clc
scas
or
mov
sti
dec
and
orl
cmp
adc
test
testl
fnstenv
and
inc
add
movsl
push
jl
push
adc
int
aad
push
push
and
xchg
dec
les
xor
sbb
into
cmpl
xor
iret
jle
shrb
sub
xor
pop
cwtl
or
lea
call
jp
mov
test
enter
xchg
iret
inc
xchg
xlat
sbbb
sbbb
js
dec
fucom
in
insb
dec
in
pop
insb
mov
aam
or
andl
fbstp
xchg
adc
test
mov
pop
add
push
int3
gs
jmp
decl
push
std
xorb
test
shrl
pop
push
lahf
shl
mov
fsubrp
xchg
adc
or
jge
add
push
xchg
dec
pop
jmp
cmc
add
mov
xor
add
movsl
or
xor
fwait
cmpsl
fadds
inc
ret
add
aas
ret
or
xchg
xchg
addr16
mov
xchg
outsb
xchg
pop
sbb
repnz
jnp
inc
pop
inc
mov
mov
and
repnz
ret
mov
mov
outsl
lret
mov
mov
insl
mov
imul
sub
or
sbb
mov
push
orl
xchg
mov
faddl
lods
lret
aas
jl
mov
or
lock
xchg
loopne
aad
cmpb
sti
movsb
mulb
mov
push
inc
movsl
cltd
icebp
pop
lahf
loope
pop
ss
push
ds
jg
cmc
mov
mov
adc
adc
push
adc
mov
mov
js
repnz
call
or
add
or
sub
cmp
fwait
dec
xchg
mov
jl
pop
mov
mov
gs
mov
jo
idivb
test
push
aad
mov
loop
sbb
das
ret
movsb
fcomps
push
in
mov
mov
dec
jp
shrl
or
ja
cmp
out
das
fsubr
mov
fnstenv
ljmp
mov
test
mov
mov
test
out
out
hlt
dec
push
dec
adc
pushl
lret
push
pop
pop
xchg
xorb
or
push
push
or
aam
enter
int3
xchg
jnp
lahf
mov
lahf
lds
jg
test
xchg
or
and
loop
out
dec
jg
jmp
mov
xor
xchg
push
mov
cmpsl
add
insl
jecxz
inc
fucomp
leave
sub
sbb
jae
add
stos
sahf
xchg
mov
loop
frstor
push
bound
mov
cmp
sbb
in
and
mov
rorl
ficoml
jmp
in
sahf
or
mov
test
push
sbb
mov
xor
js
aam
repz
fwait
cmp
sub
icebp
imul
cwtl
dec
out
xchg
sbb
aad
loope
pop
cs
andb
sti
arpl
mov
push
repz
test
mov
adc
dec
xor
bound
subb
xchg
sti
iret
std
std
jge
jne
rorl
pop
dec
outsl
inc
jle
xchg
imul
outsb
cmp
xor
inc
arpl
out
sbb
into
mull
js
cmp
outsl
outsl
xor
cmp
lret
movsl
bound
xchg
mov
stos
and
mull
jns
fxch
in
ss
add
sahf
loop
outsl
repz
out
jnp
sub
pop
ja
fsubl
mov
mov
aam
xchg
pop
adc
rclb
cmpb
ret
xchg
negl
and
inc
adc
into
cmpl
pop
jbe
jo
stc
xchg
xor
push
cmpsl
push
mov
jbe
in
clc
sarb
jb
fnstenv
dec
xchg
mov
nop
hlt
scas
loopne
test
mov
lods
mov
andl
lods
adc
dec
push
xor
mov
fistps
popf
dec
cmc
pop
xorl
cmp
jge
movsl
pop
mull
arpl
pop
or
pop
mov
pop
push
sar
mov
cltd
adc
jno
out
and
out
add
xchg
push
sbb
sbbl
add
aam
bound
sbb
push
fwait
data16
pusha
ds
add
daa
int
pop
fisttps
iret
cmp
jg
repnz
mov
or
xorl
out
gs
sub
mov
and
push
ret
loope
out
arpl
test
stos
add
sbb
and
inc
repz
mov
lock
repz
and
add
pushf
xor
mov
pop
mov
mov
je
jnp
adc
jl
dec
mov
sbb
repnz
xchg
jp
mov
pop
mov
test
jecxz
lcall
jl
cld
xchg
pop
pop
aad
in
pop
xchg
push
push
and
sbb
pop
stos
sbb
lea
in
lock
lock
rcll
cli
hlt
dec
add
scas
push
xchg
cmpsl
mov
inc
pop
ds
pop
das
ds
mov
jmp
ja
sbb
inc
sub
sbb
repz
lods
pop
adc
push
popa
scas
cmp
repnz
stos
pop
push
jmp
pop
outsl
cmp
lods
mov
mov
pop
push
cmc
and
add
ret
addl
sub
insb
nop
jbe
sub
pop
std
outsl
jns
mov
not
cmpsl
ror
cmp
mov
xor
shlb
sub
testb
pop
dec
fstpt
aas
cmpsb
cmc
and
je
gs
int3
cmp
in
mov
jb
pop
fildl
fisubl
mov
mov
pop
into
hlt
mov
inc
and
popl
rclb
lret
mov
addr16
sbb
and
mov
or
cs
push
cli
push
inc
push
sbb
mov
and
pop
xor
pop
fucom
test
mov
jle
aas
pop
fsubl
jg
sbb
enter
mov
sar
xor
loop
stos
test
fstpl
add
xlat
jecxz
mov
xchg
mov
clc
push
pushf
test
into
xchg
sub
pop
cmc
mov
pop
sub
mov
sti
sub
jbe
sbb
and
pop
fld
ret
cmp
scas
mov
and
mov
outsl
pop
and
xchg
cmpsb
jb
mov
cwtl
sub
test
divl
pop
ds
or
test
xor
ja
mov
ret
push
sbb
dec
xor
test
inc
jge
jp
jp
test
fstps
push
pop
inc
arpl
fwait
sub
movsl
addb
ret
mov
add
sti
mov
jle
fiaddl
rorl
mov
ds
pop
cmp
push
mov
ljmp
mov
sub
pop
clc
pushf
popa
adc
mov
dec
and
mov
lret
mov
data16
sti
lds
out
inc
add
sbb
cltd
push
arpl
push
pop
outsb
fiaddl
mov
mov
and
mov
mov
xchg
mov
xchg
sub
stos
lcall
cmpl
xchg
xor
pop
mov
testl
push
xor
mov
pop
push
rorl
pushf
sbb
mov
imull
stos
pushl
xchg
fcomip
xchg
gs
ret
xor
sub
pop
mov
inc
out
mov
stos
lods
testb
push
mov
mov
subb
mov
sarl
or
xchg
mov
pop
or
cmp
cmp
pop
mov
out
les
cmc
mov
jmp
push
lds
mov
in
lcall
aad
negb
movsl
outsl
subb
outsb
ret
loop
pop
fwait
mov
hlt
unpckhps
jae
mov
mov
out
loopne
fisubrs
adc
sub
in
loop
or
add
bound
ds
adc
test
sbb
and
sbb
outsb
aad
inc
test
pop
adc
push
or
mov
test
add
sbb
push
std
outsl
xchg
cld
adc
in
jae
push
clc
add
adc
test
jge
jmp
mov
xchg
push
push
nop
mov
jae
test
sarl
mov
xor
loope
jb
inc
dec
out
xchg
movsl
sbb
inc
jl
adc
xor
cmpsb
add
push
movsb
test
inc
jecxz
outsb
iret
mov
xchg
xor
fidivrl
mov
fldenv
icebp
cmc
movsb
rcrb
in
push
pop
mov
dec
repnz
rcrb
mov
test
jg
std
mov
gs
dec
fstps
push
lret
xchg
popf
or
rcrb
loopne
in
aas
xchg
mov
and
cmp
inc
adc
jo
inc
dec
gs
xlat
lods
into
mov
loopne
aad
ljmp
sbb
pop
lds
push
outsb
cmc
out
aam
out
or
dec
pop
into
inc
arpl
into
cmpsb
push
lahf
leave
iret
sbb
xor
cmc
jge
ja
adc
je
push
stos
and
es
xchg
fstpl
imul
jl
xor
push
xor
add
lret
push
add
push
push
insl
pop
popa
inc
lods
mov
sbb
pop
xor
mov
mov
jne
stos
orl
pop
mov
cmp
pop
movsb
mov
jbe
and
loope
sub
pop
sub
insb
add
loop
cld
dec
cmp
jae
xchg
or
lods
mulb
or
ds
mov
movl
inc
mov
scas
jnp
into
pop
sahf
inc
negb
sub
outsb
les
mov
push
out
loop
inc
mov
addr16
pop
inc
mov
cltd
test
fwait
dec
repz
lods
push
inc
sbb
inc
push
inc
fbstp
imul
jmp
sub
es
jo
shll
mov
loop
jae
sbb
mov
rorl
jae
pushf
sub
cmp
cmpsl
loop
repnz
mov
imul
rol
or
adc
push
mov
std
mov
jb
mov
lret
dec
fistpll
xchg
add
popf
neg
push
faddl
push
incl
sarb
xchg
cmpsb
in
aaa
jecxz
jle
mov
jg
dec
popf
mov
ret
pop
std
lea
sahf
jnp
jne
cld
mov
cwtl
xor
cs
adc
mov
in
mov
out
mov
adc
jle
out
mov
sub
cld
sbb
sahf
mov
jae
and
fisubs
or
ffreep
jb
or
adc
fnstenv
sbb
or
xchg
les
xor
and
jo
rclb
mov
jae
shl
add
fnsave
fiaddl
iret
cmpsl
xchg
jg
pop
jbe
xorb
pop
js
xchg
icebp
lret
push
dec
addl
cmp
xchg
cmp
or
xlat
ljmp
loope
lock
cli
sub
fisubrs
mov
mov
jae
pop
adc
pusha
aas
sbb
jnp
xchg
fdivs
lret
repnz
add
xlat
and
inc
das
clc
jnp
pushf
lock
adc
or
arpl
leave
and
xorl
xchg
sub
cmp
sbb
xchg
xor
push
scas
push
sahf
loop
or
sbb
pop
pop
xchg
sbb
daa
jmp
mov
mov
dec
icebp
jp
fwait
add
pop
sub
leave
sbb
sub
jno
adc
xor
dec
jmp
call
loope
out
xchg
fcmovne
in
mov
cltd
aaa
outsl
pop
dec
mov
je
cmp
in
jle
jno
sbb
imul
gs
push
int
out
cmp
jecxz
int3
addl
push
movsb
nop
inc
subb
push
shrl
shrl
add
das
mov
or
add
mov
pop
jbe
push
push
daa
mov
aad
cmp
fwait
mov
pop
sbb
xlat
xchg
pop
sahf
mov
push
jl
insb
mov
fisubrl
sahf
fs
aas
xor
aas
adc
jmp
out
sub
lods
xor
cmpsb
mov
movsb
xchg
clc
adc
push
out
repz
sub
xor
data16
pop
xor
inc
imul
sub
mov
scas
shlb
dec
sbb
mov
xor
lds
mov
push
into
lods
dec
lods
jle
pop
jb
sti
mov
mov
xor
std
andl
out
jmp
jns
or
gs
mov
mov
xor
dec
inc
cmp
adc
lret
call
cmp
leave
outsl
mov
xor
dec
cmp
pop
xchg
inc
mov
pop
aad
ljmp
dec
repz
scas
or
cmp
cmpsb
xchg
bound
jmp
sbbl
xchg
push
cmc
adc
and
or
imul
xchg
repz
loop
in
inc
jp
jne
or
push
sbb
add
push
mov
push
int3
sbb
and
jb
imul
int3
fcompl
movsb
pop
test
call
cmp
cs
jbe
js
call
jno
fcomps
in
jg
pushf
lock
or
lea
push
lret
jb
jmp
dec
icebp
adc
test
lret
mov
mov
lea
in
ss
pop
jbe
leave
mov
shlb
cld
jo
jp
sbb
es
mov
mov
setne
or
das
jne
push
add
nop
push
test
inc
cmpsb
sahf
sub
pushfw
xlat
inc
pop
and
cmp
iret
jecxz
cli
jo
ss
jo
inc
adc
jp
jge
mov
or
stos
mov
mov
inc
loop
push
and
pop
in
stos
jl
jno
mov
fwait
scas
aaa
cmp
push
stos
rolb
pop
mov
ss
pusha
fnstenv
mov
pop
cmpsl
scas
rorl
dec
mov
fs
addl
pop
jl
mov
hlt
pusha
sbb
lods
jbe
sahf
jo
loopne
mov
mov
ficomps
mov
cli
sti
jp
out
ret
sbb
xor
xchg
add
sar
arpl
mov
insb
xor
adc
push
daa
and
or
aas
push
nop
test
push
jae
in
mov
fcoml
ja
jle
notl
aaa
pop
add
sub
fs
jns
add
stc
rcrl
ret
or
in
insl
add
push
loope
adc
lahf
xlat
adc
pusha
nop
cmc
lock
pop
int
xchg
mov
push
pushl
jecxz
xlat
dec
movsb
push
cli
stos
aas
cld
stos
lods
out
mov
pusha
sti
sbb
mov
cmc
pop
xchg
pop
in
insl
testb
fsubrs
xor
mov
cmpsl
mov
mov
out
mov
push
jge
loop
mov
fcoms
dec
je
or
daa
outsl
jbe
fisubl
ret
and
arpl
xchg
out
pop
lds
jns
xor
lcall
inc
cmp
pop
or
loop
or
int
push
push
dec
xchg
jge
jne
iret
jb
movsb
add
imul
and
mov
mov
pop
sahf
mov
rcrl
ret
add
stc
or
cs
out
or
add
inc
sbb
jmp
aaa
rorl
sub
inc
pop
iret
cld
and
xchg
ret
or
das
xchg
and
inc
sub
jne
cmp
xor
fisubrl
sbb
fs
scas
std
test
xchg
jg
cmp
repnz
clc
in
pop
mov
xor
xor
fnstsw
out
xor
mov
jne
cltd
xor
repz
imul
clc
icebp
pop
pop
or
mov
dec
sub
fcmovne
mov
cmp
jno
addl
shl
loopne
sbb
je
mov
movsb
inc
adc
sbb
dec
or
jl
mov
add
sahf
scas
pop
jae
mov
xchg
xchg
popa
xor
cwtl
jb
roll
stos
mov
lds
hlt
pushf
mov
aas
mov
nop
lret
and
lret
cwtl
outsl
fidivrl
sbb
mov
insb
daa
hlt
dec
cwtl
das
sub
daa
or
add
fld
int3
lcall
dec
fwait
adc
cmpsb
test
sbb
jg
stc
loope
fcmovu
div
stos
adc
cmp
push
cmpsb
dec
mov
adc
sti
movb
mov
dec
pusha
sbbb
ss
jb
les
mov
fdivrs
inc
stos
pop
push
add
fimuls
movsl
clc
mov
push
and
or
out
pop
sub
dec
cltd
jo
or
or
lahf
leave
fwait
pop
pop
or
adc
or
jmp
lcall
insb
nop
sbb
icebp
push
dec
ret
xor
cmp
jle
pushf
mov
jbe
inc
in
pop
mov
lods
flds
jo
stos
int
std
jae
ljmp
adc
push
inc
bound
xor
or
jp
push
adc
dec
sub
dec
lea
faddl
repz
xor
mov
mov
jp
or
xchg
adc
lods
insb
sbb
in
imul
in
dec
mov
xchg
xor
cmc
and
jp
jp
cmp
mov
ret
dec
das
push
jg
into
push
sub
scas
movsl
mov
cwtl
js
clc
pop
movsb
push
dec
pushf
add
push
dec
jbe
lock
mov
dec
pop
pushf
jb
popa
push
fs
sub
out
ja
in
lret
add
ja
mov
jmp
es
fdiv
and
je
shr
xor
dec
mov
ret
adc
and
dec
pop
loopne
int3
scas
adc
insb
gs
call
inc
popf
jecxz
loop
fsubl
pusha
lods
lds
cmp
mov
xor
rclb
dec
xchg
ficompl
stc
mov
lret
or
fisubl
inc
push
push
pop
outsb
add
jo
sub
jbe
ss
test
add
in
add
add
lods
lods
mov
add
imul
out
in
inc
or
mov
jns
jb
inc
mov
and
nop
mov
mov
popf
leave
je
mov
mov
leave
fcompl
xor
lcall
stc
dec
sbb
xchg
xor
dec
fistpll
jle
sub
sub
jno
add
mov
movsl
test
pop
jno
imul
daa
push
add
dec
lcall
cmp
fsts
and
xchg
ret
fstl
and
test
or
cmp
ljmp
sbb
pop
aas
aas
stos
and
pop
ja
fsubl
hlt
insb
loop
jg
ss
sbb
or
or
lret
lock
fisttps
in
jmp
aaa
mov
aas
test
lods
mov
jp
adc
push
pop
cmp
int
rcrb
lods
loop
push
xchg
pop
mov
pop
lods
adc
sub
sbb
dec
dec
add
inc
xchg
xlat
lret
loop
dec
cwtl
adc
jp
enter
in
scas
jp
aam
adc
push
pop
xchg
cld
jne
cmp
not
adc
arpl
in
xor
inc
pushf
push
mov
stos
out
sub
repnz
cli
jecxz
push
adc
ss
test
pop
imul
xor
ftst
fildl
pop
mov
aad
or
pop
mov
bnd
sbb
pop
movsl
sbb
aad
fldenv
adc
inc
sbb
xor
pop
std
sub
orl
repz
xor
mov
lret
leave
sahf
cmc
sbb
jbe
cmc
pop
imul
mov
xlat
xor
adc
orb
push
jle
pop
cmp
pushf
movsl
ja
ja
sub
pushl
push
lahf
int3
lahf
inc
into
pop
and
pushf
xor
ret
subb
repnz
sbb
xchg
sbb
push
dec
jle
loop
mov
mov
int3
mov
aam
and
loope
outsl
inc
roll
xor
bound
jb
inc
push
hlt
mov
sub
xchg
stc
mull
inc
dec
xchg
dec
xor
mov
lds
adc
loop
repz
mov
fsubl
and
xchg
push
rcl
dec
inc
mov
pop
mov
int
mov
clc
testb
cltd
inc
dec
into
int
push
andl
add
aas
jge
add
add
jg
data16
push
lods
xor
jle
sbb
mov
jmp
ror
dec
stos
pop
push
jb
pop
dec
push
inc
out
dec
cwtl
inc
mov
fisubs
cmc
aam
imulb
add
xchg
sub
inc
pop
push
mov
ds
mov
shl
nop
sub
std
in
push
adc
or
mov
in
add
push
jae
xchg
fwait
jmp
pop
xchg
push
lcall
int3
pop
rcrb
push
fs
outsb
lcall
icebp
sub
xchg
pcmpgtd
sbb
fildl
movsl
rclb
adc
outsb
inc
hlt
bound
dec
pop
out
and
jae
mov
jns
push
in
pop
aaa
jnp
ret
cmpsb
lahf
insb
cmp
stos
fimull
add
inc
pushf
call
dec
fistpll
adc
cmp
mov
movsl
popf
or
and
dec
subb
jne
test
in
adc
or
dec
divl
adc
cli
cmp
xchg
pop
enter
into
movsb
movsb
sub
add
pop
ds
mov
aam
ja
sub
es
xor
cmp
xor
xor
cld
cmp
in
ja
mov
out
enter
mov
loop
mov
mov
das
rcl
arpl
or
add
int
xchg
and
mov
lcall
cmp
ret
or
jae,pn
daa
stc
cli
cmpsl
movsb
push
loope
xor
dec
jno
sti
sub
cmp
dec
shlb
outsl
or
out
mov
sub
stc
cltd
int3
or
cmc
xor
jp
sbb
lcall
fs
shll
fisubrl
movsb
lcall
jg
inc
xor
mov
jno
repz
stos
nop
out
aaa
mov
pop
aas
outsb
arpl
in
jle
in
cmp
adcl
jp
xchg
in
jne
loope
sub
dec
cmc
popf
xchg
sub
test
jno
jp
out
clc
sarb
imul
jge
movsl
mov
jb
out
adc
mov
xchg
popa
jle
mov
push
jb
adc
cli
cmp
or
mov
shl
fists
jg
sarl
lret
jle
icebp
leave
movsb
jno
push
sub
test
and
in
loopne
lods
pop
loop
mov
inc
cld
mov
stos
mov
sub
cmp
out
or
adc
test
sahf
mov
sbb
sbb
mov
xor
xor
add
cmp
in
and
fdivrs
insb
xchg
pop
mov
popa
jg
push
repnz
jbe
testl
mov
sbb
es
gs
mov
jecxz
clc
cmp
mov
test
pop
mov
adc
pop
jle
stos
jb
pop
fidivrl
adc
mov
dec
loop
mov
jg
mov
push
nop
fistpl
add
mov
int3
pop
fimuls
ret
packssdw
inc
repnz
imulb
loopne
test
loopne
iret
out
dec
frstor
dec
pushf
lea
push
call
popa
mov
and
cli
repz
es
mov
mov
fdivr
shll
cld
dec
ror
imul
notb
pop
pop
sbb
test
pop
mov
cmp
mov
inc
cwtl
mov
stc
lcall
xchg
dec
xor
fsubl
in
into
call
clc
sahf
insl
add
out
sub
test
cmpb
outsb
lods
sbb
jmp
dec
test
rorb
mov
push
int3
add
dec
dec
loop
cmpsl
xlat
mov
sti
stc
arpl
je
mov
dec
les
pusha
out
les
lea
pop
inc
out
adc
outsl
fsubr
jg
mov
push
inc
jle
fwait
loop
cmp
repz
subl
sub
mov
mov
sbb
mov
adc
in
xorb
ret
sub
mov
negl
insl
and
xchg
push
fistl
add
xchg
or
sub
cmp
xor
addr16
cmpsl
mov
sbb
mov
lret
inc
dec
in
or
adc
int
add
pop
mov
sbb
out
iret
or
adc
stc
push
call
shl
or
jle
bnd
popa
and
in
mov
ret
lret
pop
xor
fstp
call
dec
cmp
imul
pop
mov
mov
pop
pop
mov
loope
dec
ja
orl
mov
jo
aaa
sbb
fsub
jae
lea
subl
sub
sbb
jl
lods
roll
push
lods
cltd
in
add
and
rclb
cmp
outsb
mov
int
or
adc
enter
ds
mov
or
lds
cld
movsb
stc
add
lock
jae
lcall
test
mov
nop
test
lea
out
dec
stc
shlb
frstor
clc
iret
cmc
mov
ss
ret
sub
js
sbb
shl
jbe
push
into
xor
and
mov
mov
iret
pushf
lock
stos
adc
out
xchg
mov
aaa
mov
dec
dec
push
scas
xchg
in
pop
mov
ftst
clc
scas
into
movsl
sahf
sub
pop
add
mov
mov
push
fxch
push
shl
push
cltd
xor
inc
insb
add
stos
jmp
adc
aad
jl
insl
jo
rcrb
outsb
fmull
jl
inc
in
jno
sbb
testb
aas
mov
lock
jae
mov
sub
dec
sub
stc
push
pop
aas
mov
in
aas
jns
cld
aas
fildl
call
mov
in
lods
outsb
popa
lahf
xor
mov
xchg
jnp
mov
gs
sub
rolb
mov
dec
cld
int
in
xor
adc
stc
cmpsb
cltd
mov
mulb
xchg
mov
loop
pop
pop
sub
push
jb
sbb
dec
cmp
in
sub
je
xchg
les
fwait
or
aaa
pop
cmpsl
sahf
pushf
sbb
aaa
cmp
xchg
cmp
shll
pop
jnp
sbb
cmp
sub
jl
push
lea
ja
inc
insb
data16
mov
popf
mov
gs
sbb
mov
ss
int
xchg
xor
out
jo
insl
insl
in
inc
enter
lods
xor
adc
dec
dec
jnp
sbb
outsb
std
mov
decl
jae
or
cmp
and
clc
xrelease
add
pop
mov
or
sbb
mov
lods
ja
xchg
lahf
pop
cli
mov
dec
cmp
cmc
dec
and
repnz
in
scas
cmp
or
or
test
cld
popa
adc
and
dec
cmp
and
sbbl
sub
sub
push
ficompl
inc
mov
push
pop
test
cld
pop
sbb
je
data16
jns
mov
std
ljmp
push
dec
les
roll
sub
pop
and
in
std
les
popf
xchg
cmp
mov
loopne
push
mov
outsb
inc
xor
push
inc
xchg
aas
mov
shl
pop
mov
or
xchg
outsl
lods
jle
mov
xchg
adc
or
fistpl
ljmp
outsl
sbb
mov
sbb
pop
rolb
mov
jg
orl
mov
sub
sbb
fucomi
xor
cmp
mov
js
test
push
aad
or
nop
call
ss
lahf
jnp
jle
insb
pop
ljmp
cwtl
cmc
push
jno
lcall
mov
mov
test
mov
pop
aam
mov
xor
dec
mov
push
inc
fisubs
jge
addr16
push
movsl
push
rorb
sbb
pop
test
rorl
or
sbb
and
pop
jbe
out
jmp
mov
mov
xor
jl
mov
pop
mov
jg
add
adc
fs
jle
insl
mov
jmp
jp
inc
mov
sub
xchg
lahf
push
ret
stos
sbb
mov
mov
incb
in
cltd
push
sti
insl
inc
dec
push
and
push
mov
mov
lock
stos
mov
iret
jnp
mov
jne,pn
pop
push
adc
cld
pop
data16
pop
or
pop
jne
cwtl
outsl
dec
push
aad
pop
pop
mov
test
mov
pop
cmpsb
jbe
push
sub
xor
lods
dec
pop
push
adc
pop
dec
xor
repz
lods
cmc
aad
mov
jp
enter
jno
stos
mov
or
stos
inc
sub
ds
sbb
mov
pushf
cld
rorb
jg
movsl
pop
inc
loope
sub
lret
mov
xorl
mov
push
cmc
rcll
add
data16
jge
in
fwait
ret
pop
loopne
adc
add
ficomps
lds
fldt
std
xchg
lea
inc
xchg
and
jne
inc
push
xchg
bound
fs
popa
je
push
adc
and
addr16
sbb
icebp
in
enter
ljmp
mov
stos
jb
pop
arpl
xor
mov
push
and
jle
inc
andl
ret
fdivp
add
das
xchg
js
xor
std
sub
inc
cmp
cmp
sbb
or
sbb
inc
rolb
xchg
stos
pop
mov
movsb
out
rorb
push
cmp
mov
jae
mov
xchg
mov
jl
dec
inc
cmp
fcmovnu
out
aad
or
icebp
movsl
jge
addr16
std
out
mov
lahf
xchg
mov
les
mov
les
outsb
push
inc
ret
mov
sbb
fsubs
fists
pushl
xlat
iret
aam
lret
sub
xorb
sbb
sbb
clc
inc
lods
xchg
sub
daa
jmp
jl
sti
sub
add
test
loopne
push
mov
shll
cmp
lds
scas
cmp
insb
jle
pop
fiadds
mov
jne
daa
dec
repz
dec
call
adcl
xorl
scas
or
mov
out
cmc
outsb
aam
or
inc
pop
push
inc
jae
xor
jg
fidivl
mov
hlt
jmp
jne
and
aaa
sub
pop
inc
fstps
and
cmc
sub
cli
stos
outsb
call
insb
and
and
jp
and
adc
mov
mov
and
loope
rcrl
data16
stc
mulb
mov
add
sub
fdivs
test
in
or
sbb
mov
push
sbb
dec
mov
push
popa
push
push
add
push
dec
sbb
mov
sbb
inc
cwtl
lret
sub
inc
inc
loope
xchg
mov
xor
insl
leave
popa
loop
xor
dec
push
fdivp
fildll
or
adc
pusha
dec
clc
xor
jecxz
loop
cltd
jae
hlt
jb
mov
push
mov
and
or
jge
mov
cli
shr
andb
insb
push
jns
mov
fisubl
scas
iret
mov
add
bnd
dec
jle
pusha
in
and
adc
cmc
inc
cmc
bound
xchg
sbb
in
adc
ret
or
lea
popa
dec
mov
lret
push
dec
xor
stos
sub
mov
shrl
mov
es
push
bound
mov
movsl
repnz
mov
rcll
leave
mov
cld
jmp
cmp
inc
lret
in
xchg
push
testl
mov
es
cmp
sub
jb
cld
sub
outsl
shl
rol
cmpsl
xor
or
inc
adc
lock
lea
mov
mov
outsl
addr16
pop
cltd
xchg
jbe
dec
xchg
mov
iret
imul
in
jmp
mov
adc
fldcw
push
negb
in
cltd
inc
data16
out
mov
stos
xchg
jne
lret
and
mov
or
dec
jl
addr16
push
lahf
cs
mov
push
aaa
iret
mov
or
ja
movsb
mov
inc
mov
adc
mov
fldl2e
test
popa
cmp
lcall
mov
inc
adc
or
jle
cmp
adc
xchg
mov
push
mov
dec
mov
shlb
call
mov
sub
pop
das
adcb
repz
xchg
outsl
push
lcall
js
test
in
mov
out
int3
pop
ljmp
mov
and
aas
ret
pushf
mov
fldcw
jno
jecxz
divl
js
outsl
xchg
dec
gs
xchg
push
lods
mov
jae
mov
dec
cmp
dec
sub
fimuls
movl
inc
add
imul
sbb
mov
jg
xchg
dec
pop
sub
jecxz
outsl
loopne
subl
mov
nop
stos
xchg
into
stc
stos
xor
imul
mov
das
and
mov
dec
repz
jge
aaa
adc
hlt
xchg
xor
mov
push
inc
xchg
lods
pop
stos
inc
mov
jb
fimull
pop
mov
or
mov
out
cmp
das
lods
jmp
lcall
rcl
shr
rcr
pop
movsl
fnstsw
movsb
dec
test
and
cmpsl
sub
jne
or
sub
cld
mov
xchg
aas
int3
cmp
cmpsl
push
rorb
testl
testb
sub
mov
sti
cmp
add
stos
pop
jbe
cmpl
dec
outsb
push
test
andl
add
inc
imul
add
cltd
or
xor
in
insb
xchg
jae
push
sarb
popa
addr16
cmp
faddl
nop
mov
sbb
sahf
and
lea
push
jno
xchg
ds
inc
sub
sti
rcl
cmp
cmp
das
push
dec
or
loopne
xchg
and
lahf
lods
movsb
adc
jg
add
repz
and
enter
loop
or
lods
xor
out
mov
pop
mov
test
jmp
cmp
out
xchg
and
mov
push
add
int3
xchg
leave
pop
mov
icebp
xor
jns
pusha
cmp
sub
mov
lods
sahf
jl
aas
pop
in
sbb
cmp
and
leave
dec
push
idiv
dec
lods
sub
leave
sbb
jnp
mov
adc
pop
bound
xchg
js
repz
cmp
xor
or
jmp
fistpll
out
cmpsl
xor
sbb
pop
scas
cltd
sti
and
aas
ss
mov
in
pop
mov
notb
call
sub
lds
test
data16
mov
jecxz
clc
mov
inc
lds
jae
push
jge
sti
aas
fsubrl
sbb
in
fcompl
cmpsl
into
adc
andb
push
sub
and
push
xor
cmp
mov
add
pop
lahf
add
cmp
outsl
and
push
into
mov
lret
add
mov
jecxz
cmc
jp
mov
out
add
cmp
cmpsb
push
icebp
jecxz
es
lcall
cmp
xor
shlb
xchg
xorb
int
jbe
xlat
stc
hlt
or
cltd
ret
out
jmp
sub
shl
pusha
jmp
mov
pop
mov
jmp
outsl
adc
push
mov
fnsave
in
cmp
fnstenv
sub
lods
js
add
add
adc
arpl
pop
out
sti
and
jp
xchg
pop
lods
or
mov
and
dec
rclb
cmp
adcb
dec
lcall
dec
test
gs
push
push
dec
in
inc
in
sub
jmp
es
jmp
inc
mov
xchg
jbe
fsts
add
jnp
pop
dec
xchg
mov
inc
cmc
into
and
push
mov
out
jnp
ss
mov
cmp
mov
loope
pop
test
sbb
insl
imull
dec
cmpps
mov
mov
daa
or
pusha
sub
mov
fidivs
mov
stc
pop
and
adc
push
stc
fs
push
lret
ret
push
ret
push
dec
or
lcall
in
filds
sahf
pop
outsl
fmuls
cmpsb
aam
jae
dec
gs
xchg
jmp
mov
pop
add
cwtl
push
or
lods
jne
das
push
ret
adc
aad
dec
xchg
lret
push
dec
mov
pop
push
gs
pop
adc
and
mov
clc
les
ss
mov
divl
sarl
sub
mov
lahf
sub
inc
rol
push
cmp
ficoms
scas
in
lcall
push
cli
and
adc
mov
push
ret
popa
shll
xor
test
arpl
data16
icebp
jno
cmpb
test
mov
inc
dec
paddsb
ror
lret
cwtl
sub
out
loopne
out
inc
fiaddl
pop
sbb
sti
cmp
js
aas
adc
gs
cwtl
inc
push
aam
jo
pop
sarl
jle
mov
or
add
fcompl
lods
cmp
rolb
mov
pop
in
xchg
mov
cmpl
push
jne
pop
call
jge
fucom
int3
push
cmpl
pop
jp
push
call
dec
mov
mov
lret
add
repnz
leave
pop
mov
enter
and
xor
xchg
cmp
jle
icebp
push
adc
dec
nop
es
das
or
jne
outsl
mov
xchg
aas
popa
shll
in
add
int
push
test
aaa
mov
pop
mov
jnp
shll
add
or
stc
dec
jp
push
sahf
out
mov
mov
or
add
cmp
sub
jnp
sbb
jge
out
jle
inc
ret
mov
jp
repnz
hlt
add
bswap
lea
cmp
mov
xchg
inc
xorl
mov
aad
cmpl
gs
inc
sbbb
or
mov
sarb
mov
push
mov
roll
lret
mov
int
add
push
dec
lods
dec
sub
rcl
xchg
mov
rorl
mov
in
cmpsb
jns
movsb
mov
fisttps
push
sub
xor
jns
xchg
sbb
inc
scas
mov
dec
push
inc
push
xchg
inc
fdiv
mov
pusha
fisubrl
pop
sbb
push
inc
leave
jno
movsb
inc
data16
sub
pop
add
pop
lock
jnp
push
inc
fnstsw
test
jmp
shlb
lcall
sbb
pop
lock
pop
int
inc
cmp
int3
fxch
cmp
mov
or
mov
jle
stos
mov
daa
lret
int
jg
fdivl
sub
push
sbb
jl
pop
test
xchg
sub
cmpsb
mov
aas
into
push
lret
cmpsb
jne
inc
loope
xor
mov
shlb
push
cmp
out
pop
jl
out
fnstcw
mov
aam
es
in
in
mov
loop
aas
scas
fadd
shll
cld
jno
imul
xchg
push
movsl
dec
inc
lcall
loop
sbb
imul
cmp
fdivl
mov
pop
fwait
mov
sbb
sub
data16
arpl
mov
jle
fsubl
mov
cmovnp
or
sub
fs
mov
xor
lret
jns
mov
or
pop
and
int3
aaa
add
jp
adc
inc
in
jnp
pop
test
fnstsw
mov
jne
inc
int
jo
stos
xor
sub
pop
mov
rcr
add
add
adc
mov
push
xor
test
push
jns
stos
push
scas
jecxz
adc
repz
jl
or
pop
pop
imul
adc
insl
jecxz
xchg
sbb
mov
sbb
idivl
jecxz
out
dec
dec
inc
arpl
xor
lahf
add
fidivs
rcr
xchg
stc
aam
xor
or
and
inc
xchg
mov
jns
xchg
jp
sbb
push
jg
shll
sahf
orl
insl
adc
in
inc
lods
insl
in
xchg
add
in
xchg
clc
cmp
xor
pop
hlt
mov
cmp
xor
fcomip
push
fdivr
pop
jg
cmpsl
pop
lds
xchg
jl
sbb
adc
loope
sti
bound
dec
mov
dec
adc
shl
push
fsubr
or
enter
dec
adc
inc
jle
mov
pop
push
xchg
sub
mov
push
pop
push
sbb
mov
inc
scas
xor
aas
xchg
outsl
sub
jle
dec
fldenv
cmpsl
add
dec
iret
cmp
mov
sbb
loope
sahf
push
lock
xchg
mov
push
sbb
inc
xor
push
addl
fwait
cwtl
adc
syscall
fisttps
sbb
mov
lret
xchg
cmp
pop
lcall
push
xor
loope
fdiv
xbegin
adc
cmp
or
and
lock
loopne
push
clc
out
push
imul
or
test
sbb
sub
iret
push
mov
movb
insl
dec
inc
inc
cwtl
inc
scas
in
adc
pop
rclb
xor
xor
xor
repnz
int
negl
sbb
inc
add
jb
inc
and
xor
jge
je
adc
addb
sbb
data16
add
xor
in
mov
std
rcll
out
shll
loope
push
mov
jno
ds
add
enter
es
and
xor
xchg
subl
jmp
out
sahf
mov
mov
adc
cmc
test
mov
jmp
jne
push
in
lahf
sub
sbb
sub
fldt
jbe
adc
mov
push
inc
in
push
andl
neg
or
and
out
pop
ljmp
dec
and
repnz
ror
cmp
adc
fsts
mov
dec
and
jl
pop
inc
mov
xchg
out
shrl
test
mov
mov
dec
es
xor
movsl
adc
jg
hlt
xchg
aas
arpl
mov
shrl
add
push
mov
xor
jp
pushf
cmpl
dec
mov
pmaxub
out
sahf
popa
cwtl
jb
testb
jns
mov
pop
je
movsb
dec
or
add
rcll
adc
pop
push
fstl
repz
push
mov
adc
push
add
lods
outsl
shl
aas
fstps
rorl
aas
leave
pop
shlb
ja
fisttpll
dec
or
je,pt
negl
cld
mov
inc
cmp
jl
pushf
cmpsl
and
push
mov
push
mov
out
dec
icebp
mov
lea
test
push
xchg
inc
iret
int
clc
dec
adc
xchg
or
sub
ret
xchg
sub
fisubrs
inc
pop
sahf
push
and
mov
inc
lret
lfs
dec
rcl
and
mov
lahf
sbb
xchg
imul
adc
jno
jbe
rcrb
mov
imulb
pop
fnsetpm(287
add
aas
cli
cmp
gs
and
add
rsqrtps
fs
or
test
mov
xchg
mov
push
dec
dec
xlat
push
xchg
test
mov
int3
xchg
xor
sbb
nop
outsl
dec
mov
addr16
ja
aam
and
mov
inc
mov
add
jle
lret
rcll
xorb
popf
sub
insb
sbbl
pop
push
in
inc
push
sbb
xchg
xchg
and
test
fmull
inc
stos
data16
push
incb
adc
repnz
loopne
add
fldenv
mov
insl
mov
xchg
pop
cld
mov
or
add
jle
fcoml
fbstp
push
popf
loop
dec
jle
lods
cmp
int
mov
repz
push
fildll
test
bound
and
push
mov
movsl
xchg
xchg
cmp
xchg
dec
bound
sbb
gs
push
and
cmp
mov
sets
jno
dec
loope
sub
jb
or
jbe
adc
xor
dec
mov
lret
jmp
pushfw
cmp
lahf
cmp
in
mov
lret
mov
inc
fmul
shll
and
imul
js
mov
cmp
xor
sahf
jp
xor
rcll
cmp
aam
test
jnp
jmp
repz
push
cmp
jmp
inc
pop
pop
xor
fnstsw
andb
mov
dec
jno
xchg
repnz
rcl
fisttps
pop
mov
outsl
in
movntq
out
shlb
xchg
mov
out
fistps
push
sbb
cmpsl
pop
sbb
xchg
mov
ret
or
shll
dec
rclw
adc
lock
push
push
xlat
or
pop
dec
imul
insl
pop
popf
insb
int
or
and
xchg
fbld
cltd
in
pop
inc
icebp
ds
jl
or
jle
std
hlt
push
imul
add
aaa
pop
jge
sub
pop
adc
out
add
icebp
inc
dec
addr16
orl
pop
mov
sti
rorl
or
scas
push
out
lcall
mov
xlat
or
movsl
adc
stos
arpl
jno
repz
fists
rcr
nop
filds
mov
test
mov
scas
fs
sub
push
sub
fsub
and
push
xor
aam
sub
fsubl
add
add
pusha
int
mov
add
insb
test
and
fcmovbe
movsl
bound
push
add
out
jp
loop
and
mov
into
jne
aas
jbe
mov
cmpb
xchg
iret
jg
cmpsl
into
movl
idiv
cmp
pop
popa
std
das
cld
movsl
inc
mov
int
push
rol
shll
inc
dec
xchg
adc
pop
push
outsb
vmread
bound
test
push
jp
adc
fnstenv
adc
cmp
pop
in
dec
push
subl
aad
mov
cmp
and
push
xlat
lods
adc
pop
cmp
xchg
clts
cmp
leave
fldenv
mov
dec
mov
cmp
sub
mov
mov
mov
and
pushf
les
int
out
cld
cmp
add
sar
lds
sbb
sbb
rol
xchg
popa
lock
fwait
movsl
mov
dec
mov
outsb
popf
fiadds
enter
pop
jbe
and
cli
inc
outsb
stos
repnz
cld
jp
popa
fstl
mov
mov
rclb
lods
cwtl
sub
adcb
roll
cs
jb
jg
cmpb
push
sarl
fldcw
mov
les
sti
inc
jb
fdivs
hlt
xchg
jg
data16
adc
inc
iret
dec
cltd
in
or
pop
insl
xchg
std
add
jmp
mov
cmpsl
fcoml
sub
sub
add
into
test
test
push
mov
ljmp
ljmp
lods
add
dec
in
stos
adc
fcoml
pop
pop
lahf
sti
jg
clc
or
clc
pop
testb
out
xorl
insb
popf
pop
test
jle
aas
aam
sbb
das
les
les
rolb
cwtl
pop
cmpsb
shll
sarl
in
pushf
bound
int3
mov
jge
dec
dec
popa
shll
pop
sarb
sub
jnp
mov
sub
mov
jnp
dec
or
lret
imul
inc
xchg
fs
std
mov
xchg
fnsave
mov
call
lcall
mov
loope
dec
mov
mov
push
fdivrs
popa
addr16
and
cltd
test
jb
pop
outsb
sbbb
jae
or
popf
xchg
lock
leave
add
pop
in
sahf
xchg
jle
push
push
dec
mov
fidivl
hlt
push
lahf
dec
bswap
in
jp
ret
call
push
cltd
cld
push
mov
call
or
dec
fwait
dec
loopne
clc
lods
mov
ss
mov
insb
dec
cmp
sbb
sbb
xchg
or
mov
cli
popa
or
jb
cld
fstl
pop
xchg
out
call
jmp
jne
outsl
jae
mov
ficomps
mov
push
pusha
test
popa
add
dec
pusha
inc
in
push
add
imul
mov
sbb
loopne
push
jns
outsl
iret
jae,pn
rorb
call
mov
xchg
jne
aam
and
std
fmull
pop
ret
stos
inc
sbb
sub
adc
test
pop
mov
cmp
jb
movsb
je
pop
stos
stc
rcll
pop
xchg
dec
push
push
pushf
test
xchg
movsb
cmp
mov
mov
jbe
inc
xlat
popf
hlt
pop
pushf
iret
leave
in
sbb
inc
lahf
mov
pusha
std
shlb
int
loop
arpl
sbb
fildl
push
jp
lret
aad
ds
xchg
loopne
hlt
scas
sbb
mov
xchg
push
pop
mov
scas
jecxz
das
iret
or
or
enter
stc
aad
push
roll
inc
das
in
mov
pop
pop
in
outsb
and
mull
test
mov
mov
les
outsl
sub
addl
outsb
movsl
lods
cmp
pop
into
mov
mov
lock
stc
mov
sub
xor
arpl
mov
imul
sub
push
out
mov
fs
enter
and
xor
pop
int3
roll
mov
lcall
bound
pop
dec
jge
sbb
mov
out
jle
shlb
testl
repnz
cmp
shrl
repz
and
and
into
fisttps
sbb
es
jns
sahf
hlt
adc
dec
aam
mov
mov
adc
mov
sbb
adc
or
mov
fldt
cwtl
outsl
jmp
mov
imul
mov
dec
push
mov
push
pushf
mov
rorl
mov
mov
mov
jne
shl
inc
mov
imul
fiadds
push
jle
xor
je
mov
mov
adc
leave
fldenv
cmp
or
pop
jne
xchg
aaa
push
pop
out
setns
stc
or
push
sbb
push
shr
lret
jbe
mov
xchg
mov
inc
dec
loop
pushl
mov
sub
xor
imul
std
cmp
dec
in
inc
inc
rcl
sbb
daa
and
mov
inc
jnp
lods
arpl
push
stos
inc
in
sbb
leave
add
mov
mov
test
inc
add
decb
rdmsr
rcr
mov
dec
jbe
mov
mov
xchg
clc
mov
jo
xchg
mov
mov
mov
aaa
mov
or
notl
shrl
mov
push
mov
rep
mov
insb
jl
dec
add
push
popf
pop
sub
clc
sar
add
cmp
scas
test
imul
add
repnz
outsl
jnp
call
neg
mov
sbb
jecxz
lods
mov
or
jecxz
pop
cmp
dec
fidivrs
fmulp
or
lret
push
xchg
xchg
xchg
stos
inc
xor
xor
dec
fistps
outsb
arpl
stos
imul
jle
fwait
test
xor
xor
sub
adc
mov
ja,pn
cmp
rcrb
push
mov
pop
dec
js
shrl
add
dec
loop
jg
dec
mov
lret
ljmp
stc
out
int
mov
fiadds
adc
nop
aas
lret
cmp
sub
jle
loop
outsb
subb
aas
add
sub
jns
clc
cmp
loopne
xlat
dec
es
and
les
push
pop
popa
lea
cmp
or
add
and
xor
out
aad
jp
push
cmpsb
push
cmp
mov
push
cmpb
pop
sbb
ja
fcoml
mov
fisubl
xlat
xor
mov
and
xchg
jle
ds
lcall
loop
or
mov
sbb
and
push
lds
sbb
dec
jg
roll
test
and
imul
mov
add
add
notrack
inc
icebp
xor
ret
fwait
aad
pushf
pop
popa
lret
xchg
push
scas
cmp
pop
call
add
pop
adc
jb
test
fidivrl
jp
pop
fcoml
int
iret
adc
add
sub
push
xchg
iret
gs
push
xchg
mov
aaa
popf
adc
xlat
xor
in
icebp
and
push
orl
insb
mov
and
adc
inc
add
into
mov
out
fwait
xor
sub
movl
repz
lahf
adc
jle
nop
mov
insb
lea
movsb
and
in
inc
loopne
jg
sbb
adcl
push
in
cld
rorb
mov
jp
imul
popa
int3
sbb
inc
mov
mov
cmpsb
or
push
push
xor
mov
cmp
arpl
add
jecxz
fisttpll
xor
inc
jp
leave
daa
loope
jp
cmpsb
mov
movsl
enter
inc
push
ficompl
sub
ret
cld
and
or
mov
and
cmp
imul
inc
and
ret
repnz
lcall
mov
add
mov
std
mov
adc
jne
ljmp
decb
sbb
mov
mov
daa
mov
nop
jge
lcall
movsl
cmp
cli
cmp
testb
in
les
insb
xchg
mov
add
inc
in
les
inc
es
insb
das
and
jnp
icebp
xor
pop
lahf
xchg
or
xor
push
in
std
out
mov
sysexit
ud2
call
lret
jg
rolb
cmp
add
push
dec
pusha
mov
outsb
dec
test
lods
scas
call
cmp
rcr
loopne
or
ficoml
mov
push
pop
sub
insl
xchg
ja
add
movsl
add
and
mov
xchg
loopne
fcoml
or
and
push
stos
pop
push
aaa
cwtl
pop
into
in
aad
out
mov
jg
std
lea
nop
popa
test
mov
mov
mov
xor
sub
decl
stos
bound
cld
inc
mov
sti
xchg
sbb
jno
clc
out
mov
or
pop
add
scas
lods
pop
inc
cmp
xchg
xchg
or
xchg
imul
jo
mov
adc
cli
shll
out
sub
push
xchg
or
lds
lret
jb
xor
jl
hlt
jle
jp
mov
scas
lea
enter
pushf
and
sub
xor
or
mov
xchg
push
scas
pop
mov
mov
push
cmpl
or
iret
adc
adc
cmp
adc
sbb
pop
xchg
aas
ljmp
scas
dec
mov
rol
mov
subb
out
pop
dec
sbb
lods
roll
lea
xchg
fisubrs
js
sub
sbb
daa
push
pop
jae
js
in
lods
movsb
lock
xor
out
aaa
push
inc
adc
pop
jp,pn
cmc
adc
jno
sub
add
fs
pop
and
imul
or
rol
std
repnz
xor
mov
pop
test
fcompl
jecxz
and
mov
or
and
pop
fisttpl
mov
inc
loope
dec
mul
push
sub
rorl
inc
bound
pusha
push
push
ret
icebp
fstpl
sti
xor
addr16
sbb
add
repnz
pop
mov
adc
int
push
mov
or
sbb
fiadds
sbb
mov
cld
inc
call
or
stos
pusha
xchg
jno
mov
mov
dec
loope
stc
dec
sbb
mov
aam
mov
push
push
and
pop
std
iret
sub
lret
pop
out
push
inc
cmpsl
aaa
lods
and
pop
adc
mov
in
jle
pop
mov
pop
sbb
push
stos
ret
incl
nopl
div
andb
mov
fisubrs
das
popa
xchg
enter
cmpsb
fadd
fcmove
pop
dec
movsbl
dec
fwait
sub
jb
std
dec
mov
fcmovb
into
mov
xor
int
mov
cmpsl
xorl
rclb
push
iret
hlt
xchg
mov
ljmp
dec
in
xlat
inc
dec
icebp
xlat
cmovns
icebp
jne
stos
inc
push
or
insl
sub
push
das
pusha
xchg
insl
enter
lahf
inc
rcl
push
sbb
icebp
es
add
and
std
cltd
outsl
in
dec
pop
and
or
and
out
push
ror
pop
fsubs
nop
jg
sahf
mov
cmp
mov
inc
and
aaa
xchg
mov
jns
or
cmp
cmp
dec
dec
mov
cld
in
pop
dec
out
dec
mov
or
ror
mov
inc
fdivl
xchg
xchg
pop
faddl
jle
xlat
scas
jg
jns
inc
push
stc
cmp
std
adc
jmp
dec
pop
cli
lock
sub
sbb
xchg
stos
arpl
pop
dec
and
rcr
dec
loope
sub
mov
pop
loop
push
mov
les
dec
xchg
jne
lods
xor
inc
pop
or
or
aam
and
sub
xchg
push
in
outsw
fs
xor
cmp
imul
push
setl
adc
pop
pusha
or
sbb
stos
std
fisttps
scas
iret
xchg
shr
add
pop
jle
inc
in
cmp
fstpt
xchg
jp
fs
xchg
lock
out
jnp
pop
mov
xchg
pop
loop
push
dec
adc
negb
out
mov
out
xor
mov
mov
adc
adc
dec
repz
lds
lock
push
std
inc
inc
popf
pop
arpl
imul
adc
pop
fdivr
jbe
pop
mov
shrl
sbb
xchg
sbb
ret
ficoml
sbb
add
les
ret
push
test
pop
cltd
or
xchg
in
arpl
fisubrl
xchg
nop
xchg
push
imul
popf
xor
lcall
popa
cmpsb
int3
dec
cmp
xlat
cli
sahf
jl
test
and
mull
jmp
cmc
std
call
lock
pop
sub
in
mov
inc
pop
inc
pop
shll
shl
fs
outsb
movsb
in
pop
mov
fdivs
rcrb
push
out
lock
rcrb
fcoms
insb
pop
push
mov
cmp
mov
loop
insb
push
inc
movsl
shrb
in
std
inc
loopne
ucomiss
test
not
xchg
and
gs
cmc
xor
dec
lods
in
inc
test
arpl
mov
std
fldt
push
pop
sti
add
movsb
inc
inc
leave
mov
and
lret
std
mov
pop
pop
pop
roll
out
sti
lds
leave
pushf
mov
mov
cs
jb
jle
xchg
xchg
pop
mov
sub
lret
leave
gs
fbstp
or
jp
sbb
mov
popa
add
imull
sbb
ret
je
rorb
loop
xchg
mov
popa
ja
mov
lds
fwait
add
nop
bound
test
outsb
iret
ss
mov
nop
inc
adc
and
and
out
ja
push
fimuls
je
in
pop
into
inc
fcomp
xchg
inc
cmpsl
jno
mov
jecxz
sbb
popf
cmpsb
negb
mov
sub
jno
lcall
ljmp
cwtl
nop
call
cmc
dec
testl
sarl
inc
sbb
cltd
adc
jns
xor
mov
aad
dec
repz
mov
mov
dec
arpl
jnp
push
sahf
cmpsl
test
out
add
xor
shlb
xchg
jbe
lods
and
jns
inc
imul
loope
and
lds
mov
sub
cmc
enter
adc
xor
lock
jge
mov
fnstenv
outsl
or
or
mov
pop
and
push
stc
or
outsl
push
push
fxch
mov
mov
push
std
mov
xchg
push
and
insl
add
push
mov
and
inc
cmp
jmp
loopne
add
mov
jle
jbe
cmp
push
adc
ja
pop
mov
xor
fnstsw
addr16
sub
rcrb
pop
test
jg
fiadds
jl
mov
js
xchg
jmp
jbe
cwtl
js
xor
sbb
mov
cmp
data16
push
pusha
adc
cmc
cmp
sub
adc
inc
out
pop
pop
ret
out
xchg
pop
mov
test
scas
movsb
add
repnz
jg
sahf
mov
push
sbb
in
jae
mov
lret
inc
imulw
sti
or
shl
jns
xor
sbb
inc
popf
dec
pushf
in
in
out
inc
imul
push
pop
inc
aas
shlb
loopne
jne
popf
mov
add
loope
xchg
or
cmpsl
mov
hlt
xor
lret
pop
gs
add
mov
push
into
rcr
jge
ljmp
imul
aas
xrelease
push
adc
and
dec
mov
or
nop
or
cmp
into
cs
call
jb
addr16
or
xchg
inc
push
jb
mov
lock
es
xor
popa
jmp
out
sbb
in
xor
push
sbb
jmp
cmp
mov
lret
outsl
leave
jg
jecxz
dec
xchg
shlb
xchg
loop
adc
pop
aad
jmp
rorl
mov
out
insb
bnd
into
movsb
icebp
out
js
popa
fsubrs
jmp
roll
sahf
jno
iret
ret
es
push
mov
cmp
xchg
test
dec
cli
stos
aam
or
lock
clc
repz
lcall
pop
ss
pop
push
push
mov
mov
push
fsubs
jp
jne
das
add
lahf
push
sub
and
xor
sahf
cwtl
pop
fwait
stos
imul
les
sub
js
xor
mov
jns
add
adc
call
incl
cld
add
and
push
data16
add
push
cmpsb
inc
in
mov
push
outsl
adc
or
xchg
mov
pop
imul
inc
sub
mov
jns
mov
adc
iret
cltd
outsl
pusha
gs
rcrl
aam
cmp
out
jp
inc
push
fldl2t
jp
dec
stos
out
inc
stos
jo
inc
mov
imul
mov
es
arpl
shl
push
subb
jbe
push
pop
mov
out
arpl
pop
mov
loop
sub
jl
push
and
cmp
jle
inc
lds
adc
mov
repz
fidivs
fisubrl
lods
dec
cmp
fldl
xor
cmp
gs
ret
mov
xor
pop
jae
cmp
ret
mov
movsl
stos
mov
iret
orb
mov
jbe
cmp
cmpsb
jns
xor
xor
shll
xor
xchg
cmp
movsb
sub
push
or
stos
pop
addb
mov
pop
adc
jle
pop
outsb
xor
cltd
jae
xchg
not
movsb
inc
cmp
xor
mov
dec
cmp
mov
outsl
adc
int3
sbb
popa
push
stos
mov
outsb
jbe
repz
and
mov
lahf
mov
scas
cmp
test
push
push
mov
ret
repz
dec
mov
dec
scas
sub
cli
sub
dec
mov
lret
pop
jno
xor
push
xchg
rcll
std
push
and
jne
sbb
ficomps
xor
cmp
lods
mov
cmp
or
sti
or
cmp
movsb
mov
xor
push
mov
addr16
pop
scas
icebp
sub
push
arpl
and
mov
ficoms
outsb
xor
test
mov
mov
inc
mov
fcoml
add
arpl
cmp
xchg
cld
sbb
xlat
stos
lock
xchg
imul
test
cmp
es
mov
dec
and
cld
cli
jno
hlt
jl
insl
jecxz
lret
iret
jno
cmp
sti
bndstx
inc
sbb
ja
in
fidivrs
dec
loope
mov
pop
push
dec
movsl
pop
popf
test
adc
out
dec
icebp
jno
jne
adc
cmp
pop
in
mov
mov
mov
stos
inc
loop,pn
ret
sub
fdivrl
call
in
cwtl
jbe
stc
mov
cmp
pop
jecxz
rorb
cmovnp
jge
pop
std
mov
pop
and
or
add
mov
mov
adc
pop
push
add
and
das
sbb
push
or
loope
imul
dec
add
insb
cmp
mov
outsb
xchg
int3
and
sti
aas
jns
add
mov
pushf
pmuludq
inc
rclb
mov
sbb
rcll
xchg
scas
mov
push
test
int
add
das
mov
gs
inc
mov
js
mov
mov
inc
aad
sti
jbe
das
xchg
aad
push
js,pn
and
aas
adc
popa
sbb
add
mov
push
jne
movsl
jno
push
push
nop
int3
inc
and
mov
test
xchg
jb
xor
fidivrs
xorl
sub
test
fwait
loop
mov
cmc
addr16
xor
mov
mov
and
mov
add
ficoml
loopne
or
push
ret
cmpl
divb
jnp
jmp
in
jg
loopne
xor
push
outsb
ds
ja
mov
mov
sub
pop
ret
jne
imul
cwtl
insl
stos
xor
rcrl
adc
mov
xchg
or
lahf
inc
lret
nop
dec
fsubrs
test
aam
sub
push
arpl
loope
sub
xlat
shlb
frstor
sbbl
fwait
pop
adc
inc
in
fldenv
jl
dec
lret
adc
inc
dec
mov
shrb
sbb
js
or
mov
push
cmp
loopne
in
inc
dec
sbb
push
inc
ret
mov
dec
push
stos
and
int3
jns
lock
cmp
dec
clc
roll
lds
lret
and
stos
jae
pushf
test
mov
imul
enter
loop
mov
xor
push
and
mov
inc
dec
shll
cmp
popa
xor
pop
dec
aas
inc
das
push
inc
lea
sbb
cmp
mov
dec
jnp
sahf
xchg
ja
mov
mov
xor
loop
mov
stos
inc
lret
into
xlat
stos
mov
push
mov
xor
and
icebp
adc
push
pop
fldl
ja
mov
repz
inc
fldenv
or
xchg
or
xchg
mull
dec
add
icebp
testb
je
das
arpl
sub
mov
push
jo
gs
push
scas
rorl
adc
fsubrl
leave
sub
push
fmull
xchg
cld
sub
jns
gs
inc
push
fimull
mov
jecxz
in
jmp
inc
daa
mov
movsl
sub
test
mov
xchg
add
mov
stc
xchg
imul
lret
insb
jle
es
fwait
loope
enter
cmp
mov
xchg
stos
subw
jg
inc
test
mov
dec
loopne
inc
out
stos
cmpsl
pop
sbb
loope
shlb
cltd
mov
icebp
rclb
stos
mov
mov
push
es
sub
addr16
out
xchg
push
icebp
jg
add
das
push
or
bound
jbe
xchg
stc
mov
add
inc
jb
sub
push
ja
sub
add
std
xchg
hlt
sbb
insl
pop
std
or
inc
push
stc
jne
daa
push
or
inc
dec
jne
aad
stc
enter
mov
jo
pop
sub
xchg
loop
pusha
push
jg
xorb
jbe
cmp
push
lea
ss
cmpl
bound
icebp
push
std
push
mov
dec
mov
aas
add
pop
jno
aas
xchg
xlat
dec
pop
mov
inc
addl
popa
add
cltd
sbb
mov
and
adc
les
jle
hlt
xchg
xlat
jp
sbb
jnp
rolb
add
adc
bound
fnstcw
fwait
dec
mov
in
nop
or
imulb
or
sbb
mov
dec
inc
sub
aad
aam
addr16
loope
or
push
rclb
lahf
sub
les
sub
or
xor
lea
mov
les
iret
and
jae
iret
push
adc
mov
mov
pop
adc
je
loopne
push
decl
jp
mov
fnstsw
jp
xchg
cmp
or
fmuls
sub
lahf
lahf
cmpsl
aas
popf
rorb
pop
ss
mov
sub
jbe
push
addr16
in
add
pop
bound
dec
lret
outsb
test
sbb
pop
pusha
mov
inc
lods
pop
pop
aad
dec
pop
pop
mov
cmp
fisubl
push
mov
stc
rcrl
sbb
fstpt
cmpsl
jp
jno
mov
mov
push
fwait
dec
mov
ds
subb
enter
adc
out
ljmp
movsb
lock
sub
mov
sub
pop
sbb
fcmovb
mov
jmp
cmpsl
fcmovnb
adc
xor
fisubl
fildll
cmp
incb
inc
cltd
mov
jae
arpl
aad
cltd
psrld
add
cs
xor
sub
mov
or
lds
cmpsb
adc
js
xor
ja
popa
sbb
fbstp
pushf
test
ja
mov
aaa
or
ss
test
adc
xorl
loopne
ljmp
sub
fdiv
sbb
jg
mov
cltd
sbb
adc
popl
addr16
jns
data16
jle
sbb
andl
mov
dec
mov
test
pop
lods
insb
sub
aam
decl
inc
and
scas
data16
xor
sbb
orl
pop
add
scas
sahf
repnz
movsl
mov
ret
pop
daa
clc
mov
lds
pop
mov
push
addr16
ret
mov
pop
mov
bound
inc
sti
dec
js
inc
jne
fldl2t
dec
movsl
mov
add
dec
jbe
sti
mov
leave
pop
jo
add
pop
adcb
sub
adc
xor
int
not
push
jbe
xor
inc
sub
pop
sbb
push
add
inc
fdivs
arpl
pusha
jmp
test
daa
mov
out
cs
ret
jno
and
cs
lret
jg
cmp
or
push
int
fcomip
jo
in
or
sub
lods
adc
mov
pop
pop
lea
sti
pop
mov
push
shrl
aaa
jl
ds
bound
cmp
push
rorl
xchg
or
mov
jb
mov
ret
xchg
jl
xchg
mov
jno
mov
xchg
nop
dec
sbb
movl
stos
icebp
adc
dec
cmp
mov
dec
lea
xchg
out
xchg
mov
cli
mov
insl
stos
out
sub
dec
mov
adc
jae
cld
mov
movhps
mov
and
lods
mov
cmp
push
fsubl
mov
xchg
fs
test
xor
mov
int
sbb
push
lret
sbb
nop
xor
mov
xchg
in
mov
sub
lret
in
lock
imul
int3
xor
or
cmp
inc
mov
sbbl
mov
and
or
test
xlat
xchg
lret
jne
jge
loop
dec
clc
das
xor
mov
mov
fiadds
loopne
sbb
sub
addr16
sbb
add
repnz
cli
or
pusha
adc
xchg
roll
repnz
mull
negb
cmp
shlb
and
xor
ds
dec
lock
cmp
nop
ja
std
pusha
dec
loop
xchg
pop
and
lea
mov
and
xor
xchg
sbbl
outsl
pop
mov
and
ret
fistpl
or
pop
dec
jge
mov
xchg
cltd
push
xchg
pushf
les
push
stos
les
rorl
push
pop
sbb
in
push
push
ds
dec
cmpsb
and
sbb
mov
mov
es
out
cli
fdivs
inc
dec
jno
fsubp
fidivl
pop
pop
bound
rorb
xorl
data16
test
sub
cmc
insl
jb
mov
pop
jo
hlt
shll
dec
pop
inc
dec
std
leave
pop
arpl
into
cmp
and
ja
inc
cmp
lock
lea
mov
call
das
jecxz,pn
shr
mov
pusha
xchg
and
in
fstps
mov
dec
and
fimull
push
ficoml
mulb
stos
jecxz
push
sub
aam
icebp
out
sti
shrl
push
mov
mov
fidivrs
xor
mov
clc
sub
sbb
cmp
pop
pop
insb
mov
cmp
stc
mov
in
stos
fucomi
jnp
stc
movsl
xchg
cltd
and
add
jo
xor
sbb
xchg
pop
cmp
leave
movsl
xchg
sub
inc
in
out
push
dec
jg
push
repnz
into
clc
test
bound
jmp
adc
mov
push
les
jecxz
lahf
and
mov
out
in
jo
js
mov
push
sub
rclb
jl
into
hlt
pop
enter
cmpl
add
fstl
mov
loopne
sub
mov
icebp
jbe
mov
jnp
loop
fdivp
xchg
adc
and
pop
stos
jae
fwait
aas
insb
fwait
sbb
in
imull
out
inc
dec
pushf
fcomp
fdivs
jmp
sar
jb
clc
inc
mov
mov
ret
dec
xlat
repz
push
aam
inc
pop
cmc
cmc
or
adc
mov
cwtl
adc
sti
cmp
movsb
xor
mov
dec
test
cmp
addb
leave
sbb
rcll
jecxz
cmc
andb
cmp
mov
mov
mov
dec
scas
xchg
jb
mov
lret
add
mov
aaa
imul
ficomps
jecxz
xor
mov
dec
call
sbb
or
cld
xchg
outsl
pop
scas
test
mov
xchg
ss
adc
insl
dec
ljmp
movsb
xchg
cmpsb
lods
push
dec
sub
and
sbb
adc
mov
andb
inc
jo
sub
jle
iret
pusha
or
mov
out
test
daa
aaa
test
cmp
aas
shll
push
push
outsl
lret
or
scas
loop
fisttpll
shrl
in
cld
call
rcrb
xor
mov
shl
je
into
hlt
or
mov
out
out
adc
icebp
flds
test
int
push
enter
mov
add
sub
and
sbb
in
xchg
dec
push
test
out
cmp
xchg
push
jp
add
nop
enter
in
lods
iret
inc
xchg
gs
cld
push
scas
into
dec
out
adc
mov
test
add
movsl
in
jb
push
test
orl
lcall
in
push
xchg
sbb
out
data16
outsl
test
aas
mov
sub
add
xor
sub
xor
loopne
push
adcb
adc
xchg
mulb
mov
push
pop
xchg
cmp
adc
in
and
xchg
nop
into
call
push
mov
mov
sbb
leave
pushf
repz
mov
mov
adc
mov
nop
mov
pop
rclb
jg
sub
addr16
daa
cmpsb
pushf
jbe
cld
addb
addr16
and
cld
and
jmp
mov
pushf
pusha
mov
stos
sub
shrb
int
rcrl
mov
pop
dec
insl
adc
push
add
xchg
sub
aad
aad
mov
sbb
outsl
jmp
push
in
cltd
xchg
into
ja
xchg
cli
ljmp
fimuls
fnsave
and
lods
xchg
push
mov
jmp
fcom
and
sbb
clc
mov
pushf
xchg
stos
into
sub
cmp
pop
mov
sbb
adc
push
push
push
push
dec
mov
loope
int
mov
lods
cmpsl
jp
cmp
lds
inc
sbb
lods
imul
xchg
mov
dec
int3
xor
int3
lods
push
leave
outsl
cmp
cmp
cmp
divb
dec
pop
adc
cmp
pop
jo
push
std
sbb
lea
leave
mov
into
jne
dec
sbb
stc
lds
int
cmpsb
aam
mov
jns
int
arpl
cmc
pop
xchg
mov
push
push
dec
popa
fsts
cmp
push
and
pop
mov
mov
xchg
mov
mov
mov
fwait
outsb
add
add
fs
mov
pop
xlat
out
and
or
and
test
popl
pushfw
adc
sbb
cmp
in
lret
cli
stc
orl
push
mull
stos
ds
rcrl
xor
imul
pmulhw
dec
pop
mov
adc
fnstsw
imul
xor
mov
inc
negb
dec
and
ljmp
inc
mov
sub
pop
cmpsl
sbbl
inc
aad
fistpl
cwtl
fldcw
sahf
inc
out
imulb
xor
mov
jp
jnp
and
sbb
data16
out
mov
cmp
popf
push
push
jno
fisttpll
mov
ror
notl
pop
xor
sub
rolb
dec
inc
pop
das
test
dec
call
xor
pop
pop
xchg
jle
push
pop
pop
sub
mov
dec
repz
and
adc
xchg
mov
cmc
mov
lahf
or
iret
daa
outsl
add
add
pop
jnp
mov
fidivrs
jmp
subl
addl
push
inc
lea
lock
xchg
sti
stos
loop
xchg
sub
lods
dec
jmp
fisubrl
xor
add
mov
jecxz
and
or
addl
jg
je
lods
sub
pop
add
les
and
dec
jne
inc
inc
std
jg
lods
dec
sahf
arpl
cld
mov
mov
mov
mov
into
dec
imul
adc
xor
jne
out
jns
in
js
mov
pop
xor
sbb
cwtl
std
or
pushf
sbb
cwtl
jmp
xchg
nop
movsl
cmp
leave
mov
mov
loopne
mov
hlt
movsl
call
testb
or
push
pop
fbstp
dec
pop
lods
push
or
xchg
sub
jle
pop
inc
sbb
fmul
imul
add
xchg
jecxz
sbb
pop
ret
ljmp
jle
idivl
push
sbb
popf
jno
mov
sub
dec
push
sub
iret
std
xchg
add
jae
aaa
jmp
pop
in
test
mov
decb
xor
shll
arpl
sbb
xchg
ss
jg
xor
int
repnz
push
and
int3
adc
in
cwtl
sbb
lods
jae
out
testl
dec
stc
pop
test
mov
lret
fmull
mov
pop
mov
popa
lods
mov
pushf
aam
inc
jae
pop
scas
fdivs
sub
add
repnz
clc
or
imul
outsl
jns
js
inc
jo
xchg
add
adc
bnd
cs
mov
hlt
jge
cmpsb
stos
clc
cli
rorl
fcomip
lahf
mov
jbe
cs
in
gs
and
lds
imul
lods
movsb
add
andl
lods
shr
mov
stos
mov
xchg
or
iret
cmp
repz
push
and
outsb
xchg
mov
into
out
in
sbb
add
insl
lret
mov
sbb
std
xchg
es
xchg
push
lds
scas
jae
movb
fs
mov
pop
ljmp
into
xorb
addr16
push
loope
call
loopne
inc
jnp
ljmp
shlb
leave
mov
sub
test
inc
inc
cmc
mov
mov
scas
cld
cmp
xor
jbe
stos
jb
xor
mov
jne
loopne
sbb
pusha
lods
jne
fmull
fs
inc
mov
sub
and
push
push
out
mov
in
push
out
insb
outsb
pop
sbb
add
filds
iret
cli
cmp
mov
and
xor
inc
lret
cmc
bound
jg
jns
and
mov
enter
ds
add
aad
jecxz
mov
cmp
pop
push
sub
mov
data16
xor
cmpsb
jg
das
leave
jl
fsubl
repz
mov
sub
inc
roll
add
sbb
sbb
pop
je
rcll
inc
int3
sbb
dec
xor
imul
jne
sub
jne
fnstsw
loopne
cli
jae
dec
andb
lods
jno
adc
scas
pushf
loop
jecxz
es
loop
in
cmp
pop
mov
jno
mov
lds
pop
sarb
sub
bound
popa
idiv
jle
mov
test
pop
add
mov
mov
arpl
iret
sub
iret
pop
pop
jmp
mov
cwtl
pop
inc
xchg
pop
xchg
fmul
xchg
arpl
dec
push
int
lret
leave
lods
psrlw
jno
pop
je
fimuls
ja
and
inc
mov
jne
cmc
sbb
push
clc
fdivrl
call
dec
mov
mov
repz
inc
dec
daa
stos
fwait
pop
add
mov
sub
push
mov
jg
xchg
cmp
stc
dec
jecxz
loop
sub
mov
and
loopne
repnz
dec
mov
notb
jle
xchg
inc
add
and
bound
clc
push
test
sub
nop
stos
mov
xchg
mov
inc
sbb
xchg
xchg
adc
add
cs
je
adc
icebp
fidivl
jg
test
fidivs
mov
inc
add
sbb
sub
cmp
loope
int
scas
insb
dec
pop
fisttps
fcoml
pop
arpl
add
ss
push
fs
movsl
cmpsb
cmc
cmpsl
cmpsb
aas
xchg
mov
les
aam
jns
and
cmp
jno
mov
aaa
fimull
arpl
sub
pop
adcl
ljmp
jne
loopne
xor
lods
inc
in
dec
and
inc
mov
stos
out
imul
push
and
stos
inc
push
jne
xlat
shl
test
mov
mov
cmp
out
jae
adc
xchg
lds
add
add
fs
ds
cmp
add
xchg
outsl
shll
jnp
xchg
out
jbe
mov
pop
rclb
fs
lret
jl
push
ja
xchg
lods
aas
mov
out
arpl
mov
mov
adc
hlt
fidivrs
lcall
jp
xchg
cltd
aad
stos
jne
xor
out
nop
pusha
push
pop
mov
inc
jmp
popf
jbe
inc
push
xchg
popa
mov
fimull
sub
jmp
jnp
sbb
insl
sub
xor
mov
scas
cwtl
mov
push
mov
popf
loope
push
or
adc
arpl
xchg
add
inc
sbb
pop
aaa
das
mov
add
add
aam
dec
imul
adc
stc
movsb
mov
lods
divl
sbb
mov
push
ja
xchg
pop
mov
jo
repz
jne
test
insb
stos
xor
fnstenv
repz
or
sub
sbb
loop
pop
lahf
xlat
int3
loop
ret
mov
aad
cmc
shrl
push
dec
ret
fldenv
dec
sub
inc
xchg
out
fidivrs
pop
xchg
mov
push
fmull
ja
ficoms
test
outsb
dec
push
out
shlb
aas
push
jg
nop
rcrb
ret
adc
mulb
insb
adc
popf
push
data16
mov
fstps
xchg
jns
cmpsb
shrb
or
sbb
stc
mov
insb
xor
jb
or
lcall
pop
cmp
pop
fists
mov
sub
jo
adcl
dec
mov
mull
push
push
rcrl
mov
push
jae
es
insl
mov
xor
mov
adc
add
or
xlat
xor
mov
adc
push
mov
fiadds
add
add
arpl
cwtl
mov
mov
or
mov
jl
or
xchg
sub
jo,pt
xchg
bound
jnp
and
cmp
call
dec
iret
clc
daa
shll
push
arpl
divb
sbb
andb
incl
push
std
inc
push
rolb
imul
sarb
je
aaa
mov
mov
mov
sbb
jae
cmp
jb
ficomps
call
scas
xor
xlat
lahf
xchg
mov
decl
enter
call
out
cwtl
or
ja
xchg
jmp
mov
mov
insb
js
cmp
dec
dec
sti
inc
popa
loopne
js
ljmp
jnp
nop
nop
jno
push
adc
sub
pop
push
push
repz
dec
xchg
jg
movlps
sbb
out
in
sarl
mov
or
cltd
popf
daa
sub
insl
std
mov
push
fldl2e
inc
or
mov
pop
xor
popa
mov
push
add
notl
mov
cmpsb
cmp
out
sub
std
sub
rcrb
lahf
dec
rclb
mov
or
lcall
jle
in
cmpsb
pusha
xchg
lock
jmp
fucomi
sti
mov
repz
shlb
xchg
or
xchg
add
sbb
out
rcrl
test
cmc
mov
fcmovnu
push
jno
mov
ret
pop
and
arpl
mov
int3
push
mov
xor
mov
mov
push
xor
mov
shl
scas
or
pop
inc
adc
out
or
xor
in
jg
loopne
xor
arpl
fs
je
sbb
xor
idivb
push
jne
lods
std
adc
push
stos
sbb
sub
jg
mov
mov
xchg
outsl
mov
mov
outsl
cmc
imul
rorb
xlat
sub
fdivrs
vpshld
add
dec
cld
xchg
movsl
pusha
xor
mov
stos
push
xchg
xor
shrb
or
pop
cwtl
mov
pop
cmp
sahf
nop
insb
gs
dec
test
and
ss
shrl
scas
aam
dec
int
sbb
cmpsl
movsl
nop
xor
negl
inc
sbb
int3
xor
mov
lcall
addr16
mov
dec
push
roll
mov
push
mov
cmp
and
sbb
out
movsl
adc
fsts
add
add
leave
pop
mov
jns
aad
aas
out
push
or
movnti
dec
xchg
es
or
push
out
addr16
scas
inc
sbb
inc
xor
jl
aas
dec
aad
or
movsb
jmp
lret
push
insb
mov
add
sbb
pushf
sbb
mov
pusha
jo
in
ss
popf
js
xchg
mov
rclb
fwait
pop
dec
outsb
movsl
es
xchg
popa
repnz
or
out
lret
mov
push
mov
jae
cmp
cmovle
popf
cmpsl
inc
push
xor
outsb
jecxz
mov
adc
cld
xchg
ror
jmp
sti
repnz
inc
fcmove
mov
insl
pop
dec
or
call
mov
test
jno
repz
test
ds
jle
or
xlat
loop,pn
xchg
addr16
cmpsl
adc
adc
nop
xor
stc
mov
xor
std
push
and
sub
jo
pop
and
into
ficompl
pushf
in
sub
sahf
hlt
bound
cltd
xchg
stos
cmp
cmp
push
adc
adc
fwait
adcl
std
pop
dec
mov
mov
and
jbe
dec
mov
movsl
mov
jp
sbb
jl
loopne
mov
orl
cmp
das
jne
add
movsb
lea
repz
scas
mov
fldcw
dec
jmp
ret
shl
sub
dec
sbb
fwait
stos
loopne
xchg
mov
dec
lods
jae
lret
fwait
cmp
fsubl
lret
ds
sbb
push
push
mov
scas
rcrb
addr16
out
sbbb
loopne
adc
jnp,pn
ficompl
push
xor
fidivrl
insl
jl
and
dec
xchg
hlt
xlat
jns
pop
call
and
cli
pushf
pushf
push
xchg
and
inc
aad
cmpsl
xchg
xchg
and
or
outsb
hlt
jecxz
mov
or
adc
into
mov
ljmp
cmpsb
cwtl
mov
lret
jo
dec
scas
mov
pushl
test
ret
cmp
dec
repz
cmp
xor
mov
and
lahf
pop
cltd
or
popf
cmpsl
jne
daa
cli
xchg
xchg
cli
sub
add
mov
fwait
add
add
mov
js
scas
arpl
cmc
push
and
mov
out
daa
imul
inc
pop
incb
fsts
inc
inc
mov
notb
mov
lock
aas
sbb
push
tzmsk
push
mov
cmp
stc
sub
hlt
push
mov
rcr
repz
enter
mov
ret
mov
xchg
lods
int3
jp
movsl
out
or
insb
nop
jecxz
jo
ljmp
or
push
inc
mov
xchg
ficomps
mov
aaa
add
push
imul
mov
mov
pop
xchg
cmp
mov
outsb
movsl
pop
shll
mov
xchg
adc
xchg
or
fnstenv
lods
jmp
inc
push
jnp
clc
sti
inc
push
push
arpl
fs
xor
mov
xchg
or
into
loope
call
cltd
insb
cli
aas
adc
adc
jle
into
xchg
fwait
out
inc
cmp
mov
pop
inc
xchg
fs
push
out
sub
ret
daa
inc
das
jle
cmp
pop
sti
xchg
mov
ret
mov
add
jge
rcr
in
sub
fcoml
sub
int
scas
repnz
jne
xchg
loope
imul
fadds
mov
fidivrs
cld
call
in
movlps
pusha
subb
and
lret
faddl
sub
ljmp
xchg
jb
scas
movl
test
jnp
cmp
sub
mov
xlat
test
xchg
mov
js
mov
loopne
jns
iret
into
or
cmp
iret
decb
push
cli
incl
sbb
out
test
push
sarb
scas
sti
xrstors
sbb
xchg
xlat
push
test
clc
aaa
dec
lds
test
jecxz
rol
incl
pop
std
scas
push
ja
cmp
movsb
lcall
jmp
jae
insl
loop
cmp
mov
fstl
int3
xchg
cmpsb
ret
testb
push
repnz
dec
fs
movsb
arpl
mov
das
cwtl
icebp
fisubrs
ja
inc
cmp
outsl
adc
sub
and
fs
inc
push
scas
sbb
hlt
push
out
xlat
gs
mov
stc
movb
ljmp
rcrl
mov
pop
test
add
add
cmp
subb
pop
fwait
lahf
call
ja
dec
xor
out
in
ss
pop
into
out
jno
int3
scas
ss
outsl
pop
imul
roll
pushf
inc
in
lods
push
push
cwtl
aas
mov
and
sbb
fwait
outsl
dec
pop
push
cmpsb
or
dec
dec
push
ds
mov
mov
and
and
shl
outsl
dec
sub
insl
xor
mov
popf
adc
push
arpl
jg
repnz
sbb
mov
cmp
xlat
sub
sbb
add
push
hlt
inc
sbb
xor
jo
jnp
lock
and
mov
adc
xor
jo
test
or
adc
lods
std
lods
mov
aad
loopne
xchg
mov
ss
mov
inc
ljmp
icebp
sarb
arpl
push
int
xor
add
rcl
test
xchg
je
hlt
add
jmp
cmp
xchg
sti
enter
jno
mov
xor
dec
jg
es
insb
jbe
mov
aaa
repnz
mov
mov
fnstenv
loop
push
stc
xchg
popa
repz
stos
sbb
xor
lods
pop
lret
or
xchg
jne
or
rcl
inc
test
lret
lods
add
pusha
test
dec
xchg
adc
jae
fadds
imul
xchg
cmp
and
stc
bound
jl
jne
jg
lock
mov
pop
insb
push
jl
sub
pop
xor
daa
inc
push
mov
je
jmp
in
or
notb
jmp
movsb
dec
mov
sahf
repz
mov
test
enter
faddl
out
fwait
xchg
popa
cmp
sbb
pusha
mov
adcl
dec
sbb
les
sahf
iret
pusha
movl
outsl
or
mov
in
frstor
std
push
sub
xchg
insl
inc
mov
cmc
fucom
outsb
pop
les
pop
pop
inc
ret
xor
cmpsb
xor
ss
inc
pop
dec
jb
shll
xor
ror
hlt
push
mov
icebp
xlat
mov
clc
xor
insb
push
cmp
arpl
sbb
je
dec
iret
push
push
test
in
fildl
adc
mov
sti
xchg
hlt
push
mov
add
adc
lds
movsl
loope
jno
pop
add
ss
fdivr
ffreep
add
sub
ja
push
add
test
mov
outsl
mov
dec
lea
cmpsl
adc
fistpl
test
lods
jle
sahf
mov
and
and
xchg
jge
mov
mov
add
pop
cltd
and
mov
stos
outsl
push
pop
lds
int3
add
cmp
and
popa
das
sti
ret
inc
sbb
xchg
fucompp
int
mov
fs
sbb
test
dec
fmul
jne
push
pop
std
gs
sbb
jb
sbb
mov
int
movsl
fwait
jbe
js
inc
xchg
adc
jb
movsw
cmp
in
xor
fstps
jg
pop
mov
dec
leave
or
sub
add
in
push
subl
push
in
stc
adc
xchg
mov
test
ja
sti
fmul
xor
idivl
shll
daa
enter
ret
jnp
or
or
in
sub
sub
pop
add
aas
mov
cld
js
pop
fidivl
xor
out
loopne
and
cld
sbb
imul
in
fisubrs
mov
je
imul
sti
dec
repz
outsl
out
mov
divl
adc
xchg
cld
sbb
fdivrs
sbb
push
imul
out
idivb
mov
inc
xor
lds
dec
or
sub
xor
bsr
inc
cmp
mov
dec
ljmp
int
xchg
testb
loope
in
scas
mov
scas
or
xchg
lret
cmp
aas
lods
mov
stc
daa
dec
mov
pusha
ret
lea
stc
pop
xchg
sub
mov
js
ret
daa
push
stc
ret
test
cmp
add
jecxz
pop
es
sbb
pop
lcall
mov
jbe
jne
cmp
pop
and
mov
pop
mov
add
jge
xchg
pop
push
aad
ss
ljmp
pop
rsm
mov
mov
call
cmp
dec
ret
cmp
jp
enter
push
in
imul
hlt
xor
push
int3
sbb
ja
jg
or
scas
cmp
or
xchg
jecxz
mov
mov
imul
stos
and
jo
xor
repz
dec
scas
int
mov
mov
aas
out
clc
aaa
fdivp
push
xchg
dec
sti
loop
out
mov
xchg
xlat
hlt
imul
mov
sub
fs
aad
movsl
inc
push
pop
add
or
pop
and
js
in
jl
sbb
inc
shlb
mov
cmp
cmp
mov
xor
jecxz
sub
sub
repnz
mov
stos
mov
insb
das
jmp
divl
xchg
les
adc
shll
mov
xchg
mov
sti
arpl
mov
dec
xchg
divb
les
test
lcall
lret
imul
scas
test
inc
aad
sub
mov
inc
jg
adc
jmp
jae
push
rol
push
rorl
gs
cmp
aam
mov
out
lret
jge
mov
sbb
mov
xor
sub
fistpll
inc
pop
cltd
lahf
dec
and
push
test
pop
rclb
pop
fs
insb
add
orl
dec
mov
mov
sbb
pop
jmp
push
pop
xor
push
pop
adc
cmp
out
fldcw
ret
stos
add
add
xchg
or
add
mov
push
loope
pop
insl
sbb
fwait
dec
outsl
inc
sbb
inc
lcall
cmpsb
sub
sti
inc
stc
mov
repnz
jae
inc
push
cwtl
bound
lods
mov
gs
cs
je
mov
mov
inc
loope
fldt
cli
fwait
mov
imul
pop
aas
cmp
ljmp
mov
sbb
mov
push
xchg
and
stc
mov
stos
fs
icebp
push
fwait
clc
adc
ret
sub
scas
dec
jno
xchg
mov
jae
insl
out
fs
fstl
shrb
pop
stos
or
js
push
sub
inc
aas
dec
and
pop
sub
cmp
rcr
lock
sub
test
outsb
xor
xorl
shrl
push
cmpsl
dec
jp
aas
mov
mov
xor
cmpsb
cwtl
jae
ljmp
dec
rorb
out
push
mov
mulb
clc
jns
cmp
xorl
aaa
and
mov
in
mov
push
sbb
daa
add
xlat
mov
in
neg
ret
cmp
pop
popa
fs
ljmp
pusha
cmp
fdivr
xorl
lods
and
add
das
mov
dec
cmp
je
push
mov
dec
push
push
mov
cmp
mov
mov
mov
push
cmpsl
inc
les
jmp
inc
popa
dec
out
inc
ss
loope
imul
jns
out
loope
popf
pop
inc
in
shrl
inc
adcl
adc
xor
in
pop
mov
movl
dec
pop
adc
adc
leave
popf
xchg
push
bnd
mov
pop
push
inc
imul
jmp
lods
or
inc
sbb
clc
fdivs
imul
cs
leave
cmpsb
or
mov
mov
jns
sarb
or
lods
and
mov
mov
cltd
in
xor
fs
out
xor
cld
add
lret
jge
push
sbb
sub
mov
out
or
fldl
out
arpl
and
test
sti
add
cmp
out
inc
mov
jge
fisttpll
jns
dec
jp
sub
es
push
sarl
sub
repnz
adc
adc
into
pop
pop
fwait
push
gs
fisubrs
xlat
repz
fstpt
pop
outsl
add
mov
jg
stos
mov
clc
adc
negb
popaw
ret
jp
jae
int3
pop
sub
sub
mov
cmp
ret
lock
pusha
inc
in
inc
and
fadds
jl
mov
cmp
mov
pop
int3
shrb
pop
fists
cwtl
icebp
aas
or
loopne
lea
lods
js
hlt
popf
add
push
cmp
imull
or
orb
fidivrs
shl
adc
mov
in
xchg
lahf
les
loop
pop
mov
mov
aaa
mov
inc
jbe
into
pop
lret
adcb
ret
inc
jmp
inc
mov
rcll
cmp
sub
sbb
fidivrl
cltd
jo
add
sbbb
or
push
jl
les
jp
inc
jbe
sar
mov
sbb
push
and
faddl
js
and
push
jecxz
adc
xchg
loopne
outsb
push
sahf
sqrtps
cmp
es
cmp
pusha
sbb
mov
lahf
sub
push
xchg
ror
popf
testl
fsts
icebp
xchg
inc
dec
stc
inc
push
frstor
out
xor
imul
mov
push
stos
jno
vdivsd
sbb
icebp
cmp
pusha
sbb
sbb
inc
adc
mov
xchg
ret
jae
rcrl
mov
push
rol
inc
std
push
or
push
lock
jb
or
in
js
addr16
fisttpll
pop
std
or
cld
cmp
pop
pop
dec
inc
jno
fwait
pop
inc
aas
mov
aas
mov
scas
out
adcl
hlt
cmpsl
je
je
add
cmpsl
fdivl
loop
xchg
lods
jmp
neg
push
repnz
add
imul
out
out
fnstcw
cmpsb
and
push
and
add
xor
std
pop
push
mov
mov
cmpsb
nop
ret
adc
jne
xor
jmp
mov
xchg
mov
sub
and
enter
xchg
mov
vsubsd
pop
mov
js
popa
mov
and
cmpsb
pop
ds
jo
iret
fdivrl
or
dec
insb
insb
int
imul
lahf
xlat
repz
std
cltd
ljmp
insb
mov
jbe
in
sti
iret
sbb
sbb
addr16
mov
and
and
cmc
and
aam
in
pop
mov
outsl
push
iret
inc
insl
xor
lahf
inc
inc
sti
xchg
mov
mov
cmp
push
mov
icebp
mov
xor
mov
or
fsts
cmp
push
test
das
lods
add
in
jge
cmp
roll
cs
jbe
loope
xor
sub
imul
aam
mov
dec
inc
jmp
sub
jb
xlat
sub
fstps
push
dec
repnz
jnp
inc
xchg
arpl
sahf
and
push
sbb
sarb
ss
cmp
ret
xchg
pop
stc
gs
cmc
aad
out
add
daa
shlb
push
repnz
add
jp
inc
mov
lea
pop
mov
adc
push
loop
sub
xor
jmp
mov
scas
ds
mov
jmp
mov
dec
mov
xor
test
pop
push
cs
push
hlt
adc
sbb
push
mov
stos
xlat
or
mov
vcmpss
jne
inc
mov
scas
mov
mov
fidivl
mov
push
inc
popa
add
dec
mov
rcrb
aad
enter
cmp
in
sbb
xchg
xor
push
subl
outsb
mov
std
mov
dec
sbb
adc
mov
imul
insl
cltd
aaa
inc
mov
cmpsl
lret
jbe
arpl
test
icebp
sbb
and
push
iret
jmp
adcl
jb
pushf
andl
in
pop
adc
inc
cmp
sbb
shlb
orb
leave
ds
outsl
loope
mov
sbb
xor
scas
pop
pop
sub
sub
xor
sub
sbb
jp
mov
adc
mov
sub
leave
call
or
mov
mov
test
ret
mov
outsb
jae
push
mov
mov
pop
jae
gs
push
outsl
xor
sub
xchg
fwait
jne
lahf
cmp
push
test
repz
ret
fcomip
mov
in
and
sub
xchg
fbld
arpl
sbbb
subb
ret
add
lcall
xchg
stos
jmp
adc
rcl
sbb
inc
or
jns
loope
out
add
adc
mov
cmp
aaa
ljmp
xchg
and
pop
daa
pushf
or
and
push
inc
xor
mov
js
mov
ret
lret
xorb
outsb
jnp
stc
push
sub
aam
daa
das
pop
in
adcb
mov
xchg
sbb
mov
js
cmpl
inc
xchg
inc
in
mov
pop
mov
push
std
in
ljmp
sahf
dec
jo
jnp
jb
dec
orl
gs
pop
shll
lret
mov
adc
rorb
or
adc
nop
sub
push
bound
cmpsb
or
lds
cmp
popf
xchg
push
scas
popa
jo
mov
sbb
mov
daa
fwait
jl
cmpsl
push
es
cmpsb
add
mov
push
mov
loopne
in
lods
inc
loop
add
and
shrl
sbb
mov
test
xor
mov
xor
ds
xchg
aad
out
and
insl
jo
pop
dec
ss
cmp
shl
cmp
shlb
iret
and
int3
in
add
mov
inc
inc
hlt
push
aaa
add
int3
js
movl
daa
movsb
lcall
cmp
mov
jg
xor
or
and
lock
add
imul
not
cld
aas
pop
mov
jg,pn
sub
cs
sub
cmp
into
xchg
cmp
mov
jp
or
push
xchg
iret
adc
jb
scas
mov
sbb
mov
fisubs
xchg
sbb
or
mov
lcall
push
iret
sahf
mov
push
jo
mov
xor
imul
or
adc
es
sbb
cmp
and
mov
int
divl
iret
mov
cmp
adc
call
jnp
mov
sahf
mov
testb
push
shl
mov
sub
lea
xchg
mov
test
pop
repnz
push
inc
outsb
push
cmpsb
inc
mov
xchg
adc
xor
movsl
jp
sub
sub
les
xorl
push
mov
add
imul
call
clc
shll
jns
jb
cmp
and
mov
leave
pop
not
mov
das
lods
rcr
push
movsb
dec
aam
loope
shlb
and
out
leave
movsb
sbb
in
mov
or
jae
lods
cmp
ror
aas
cmpsb
xor
repz
xlat
xor
xchg
push
dec
pop
dec
mov
mov
inc
add
add
jl
push
cmp
adc
cld
push
addr16
in
sub
jecxz
idivb
or
ds
cmp
push
and
cmp
mov
popf
xchg
jne
and
sbb
mov
cmp
int
arpl
into
mov
iret
jp
mov
xchg
xor
add
inc
fbstp
scas
inc
sub
jno
movsb
cmpsb
mov
mov
or
test
pushf
out
stos
ljmp
dec
in
mov
dec
pop
fwait
push
add
aaa
jae
loopne
sbb
or
stc
daa
push
vucomiss
xor
int3
bound
nop
lcall
aas
cmp
add
pushf
mov
mov
mov
shrb
repz
cmpsb
mov
mov
mov
test
lods
add
mov
rcll
js
xor
lea
xchg
sub
ja
dec
cmc
pop
lods
int3
imul
jnp
scas
test
push
fwait
das
cmpsb
mov
aaa
and
sub
in
pop
pop
test
add
sub
mov
roll
mov
push
adc
lcall
ja
inc
or
mov
jp
rclb
push
inc
test
sbb
jl
loope
adc
stos
fistpl
sub
add
pusha
test
lcall
arpl
mov
jnp
int
adc
and
cmp
movsl
add
mov
outsb
aaa
pop
data16
es
bnd
into
imul
xor
push
and
adc
jg
push
js
data16
imul
sbb
push
imul
lret
out
cli
pop
test
std
in
lods
pop
mov
mov
dec
insl
and
xor
repz
unpckhps
dec
pop
movsb
rorl
jl
cmpsb
lret
inc
jge
bound
and
ret
mov
and
hlt
xchg
test
sub
shlb
cmpsl
test
pushf
mov
popl
or
mov
cmpsl
xchg
sbb
lock
repnz
push
xor
clc
cmp
int3
arpl
pop
movsb
lods
les
mov
imul
ja
insb
or
jb
decl
sbb
adc
mov
mov
lock
popa
fldt
pop
nop
loopne
mov
xorl
decl
jle
dec
test
hlt
sbb
or
mov
into
xor
and
scas
in
xor
pop
ljmp
pop
fimuls
scas
xlat
ja
imul
mov
dec
fsubs
int3
roll
rorb
add
into
jno
xchg
mov
les
push
push
sbb
mov
outsl
leave
fnstsw
sarb
mov
outsl
stos
lods
cmc
jnp
addb
xchg
or
rcrl
loope
aaa
mov
push
sahf
imul
xchg
fildll
pop
xor
mov
fnstsw
adc
mov
and
xor
mov
adc
push
or
lret
mov
jecxz
loope
sbb
rcrl
sbb
insb
inc
out
pop
test
add
loopne
fs
nop
push
xchg
pop
scas
insb
push
mov
stc
test
sarl
ljmp
cli
jecxz
mov
and
sub
jl
jl
fadds
ret
cmp
or
mov
push
lods
aam
mov
aam
lods
push
or
mov
jle
fistpll
sbb
mov
sub
int3
shll
sbb
add
xchg
pop
and
jge
ret
cmc
pop
or
in
daa
sahf
or
dec
adc
loop
xchg
aam
fs
and
les
aaa
rclb
xchg
mov
mov
and
in
sbb
push
pop
jns
push
fistpll
sahf
push
sub
sbb
cmp
lret
jns
xor
sbb
mov
lea
pop
arpl
add
or
adc
in
clc
sbb
push
push
xor
fmulp
jp
pushf
das
jo
loop
jmp
and
fcmovne
jmp
ss
imul
les
push
fldenv
sbb
pop
lock
test
iret
movb
xchg
mov
lret
jmp
pop
sub
push
xchg
shr
cmp
push
xor
stc
gs
adc
daa
inc
mov
inc
lahf
jle
les
into
pop
or
hlt
rolb
imul
sbb
xlat
aas
rcll
cltd
cmp
xchg
sub
and
and
mov
fs
dec
sub
mov
jecxz
call
sti
xor
inc
scas
cmpl
cmpl
and
stos
mov
sbb
inc
rorl
mov
fisubl
pop
ljmp
and
iret
xor
rorl
push
cmp
jg
loopne
insb
cli
pop
aam
push
jbe
shrl
sbb
push
outsl
mov
or
ret
scas
mov
shlb
sub
and
pop
addr16
mov
xorb
jge
fnsave
decl
lahf
dec
mov
jns
mov
xlat
stos
test
mov
sbb
sbb
mov
fucompp
leave
sahf
call
adc
dec
repz
daa
or
ret
mov
jge
mov
mov
push
ficoml
push
movsb
outsl
and
dec
roll
cmp
jns
jbe
adc
fadds
xor
lret
inc
push
or
xor
mov
js
fcomps
sbb
push
mov
pushf
xor
jno
or
mov
pop
push
data16
add
repz
shrb
nop
cwtl
cmpsl
ljmp
jns,pt
lcall
push
loope
addr16
push
push
mov
pop
test
add
aas
dec
mov
or
xchg
ret
xchg
je
sbb
push
sub
mov
jle
aaa
pop
cmp
mov
in
std
fbld
call
faddl
pop
les
xorb
cld
int3
nop
in
push
imul
sub
sahf
push
dec
adcl
cwtl
fdivrs
loopne
xchg
incl
cmp
out
orl
dec
and
aaa
bound
aas
lret
je
jg
pop
popa
jecxz
scas
mov
mov
jo
loop
adc
mov
mov
or
icebp
pop
rol
aam
fistpl
rorl
aaa
inc
inc
xor
or
int
lods
les
movsl
pop
lcall
pushf
jns
aad
add
hlt
xchg
push
cmp
mov
fistps
push
imul
fldl
mov
fbstp
mov
pushf
jno
xchg
insb
adc
cmpsb
mov
or
rorb
xchg
add
repz
sbb
push
xchg
add
adc
lret
rcrb
je
cmpsl
lds
int
fdiv
je
leave
jae
int3
int3
mov
jl
xchg
add
into
imul
mov
sbb
adc
ja
lret
jno
pop
sub
cwtl
call
jmp
fwait
gs
fcmovbe
xor
sbb
mov
fnstsw
add
shrl
jl
push
inc
mov
pusha
and
push
xor
faddp
push
lods
cs
adc
adc
mov
in
in
imul
cmpsb
cmp
inc
sub
les
fiaddl
cld
daa
js
imul
adc
lods
mov
adc
xchg
loope
pmulhw
notl
add
fsub
mov
into
dec
and
inc
call
negb
and
aaa
dec
subl
lock
pop
scas
jae
xchg
push
daa
repnz
sti
pop
mov
lcall
inc
xcrypt-ecb
cmpsl
push
shr
xlat
stos
pop
dec
aas
fdivrs
push
stos
xor
lret
scas
loopne
fldenv
cmp
xchg
pop
bound
repnz
addl
jno
lret
push
nop
leave
ficoml
in
inc
sbb
scas
into
jae
push
sbb
imul
mov
shll
xor
xchg
xchg
sub
push
mov
or
mov
dec
and
cmp
push
or
mov
lods
or
mov
out
gs
mov
dec
mov
jno
sub
mov
pop
notl
loopne
je
movsl
cmpsb
or
es
lea
sub
ja
sahf
pcmpgtw
mov
lods
add
scas
inc
or
loop
jns
cmp
jp
shrl
icebp
mov
ss
mov
mov
adc
ds
in
mov
int
mov
out
mov
jns
mov
mov
mov
adc
rcr
cmp
pop
cmp
lahf
nop
pop
xchg
sahf
mov
sbb
cmpsl
lret
pop
bound
in
xchg
sub
aas
jne
jne
pop
rcrl
sbb
xchg
or
popf
fsubl
or
das
inc
jl
or
dec
stos
xchg
ds
push
testl
jo
mov
push
xor
repnz
out
mov
lret
mov
xchg
add
jns
mov
mov
xchg
nop
rcrb
add
test
repz
mov
movsb
xor
stos
adc
in
js
xchg
cmp
sub
sahf
dec
clc
push
jmp
lret
icebp
sbb
or
push
xchg
sub
xor
xor
pushf
jne
mov
loopne
and
push
mov
sti
fcoms
fnstcw
sbb
repnz
ficomps
popa
jb
or
pushf
test
mov
testb
xor
lretw
out
or
test
cmp
mov
mov
nop
movsb
js
push
lds
push
xor
insl
sahf
dec
jb
aaa
inc
xchg
ret
and
sbb
inc
push
in
jmp
dec
shr
shl
jo
je
and
mov
sub
xchg
mov
lock
xor
mov
mov
xchg
pop
ja
inc
lahf
xorl
loope
test
outsl
pushf
repz
fldenv
int3
mov
rorl
sbb
pop
jbe
xor
push
xor
data16
in
lret
cmpsl
outsb
pop
pop
jnp
adc
into
out
fldenv
mov
xchg
mulb
insb
sbb
mov
mov
es
cli
out
outsl
mov
jecxz
pop
cwtl
mov
sbb
mull
cmp
push
mov
lcall
dec
mov
add
xorl
stos
cld
fs
sarb
jge
xor
xchg
nop
mov
fisubrs
adcb
pop
scas
out
pop
jp
rorl
sub
jl
cmpl
jmp
jge
sbb
sub
outsb
mov
mov
inc
into
add
cmpsl
sti
js,pn
ljmp
xor
jg
xlat
inc
or
push
stos
scas
fwait
in
xchg
ret
jecxz
xor
adc
mov
fistps
xchg
lods
mov
xchg
dec
scas
jnp
rcl
push
jmp
inc
js
daa
push
idivl
je
int3
js
jmp
and
pop
mov
pop
dec
aaa
or
pop
or
dec
adc
pop
inc
sub
sub
pop
dec
push
xchg
mov
push
imul
ss
jbe
dec
xchg
leave
dec
add
jnp
cmp
xor
mov
mov
or
sub
dec
scas
mov
mov
inc
mov
and
icebp
insb
mov
outsl
mov
pop
jns,pn
out
jb
rorl
mov
jmp
or
sbb
xchg
push
lret
and
xchg
lock
mov
out
inc
push
test
pop
movsb
mov
add
sahf
add
xor
push
ljmp
lds
scas
lret
ret
int
ja
add
jp
and
sahf
push
cmc
leave
addr16
mov
lret
mov
adc
cmpsl
xchg
notl
daa
xor
xor
mov
nop
adc
push
push
lea
cmp
inc
and
fsts
lock
push
jnp
cmp
clc
in
outsl
mov
test
repnz
movsb
mov
fimull
pcmpgtw
hlt
mov
cwtl
cmp
test
loop
or
cmp
or
xor
ss
lea
int3
loope
clc
mov
out
sub
mulb
xlat
hlt
in
outsl
aaa
test
sbb
push
lret
fstps
pop
in
cmp
mov
std
std
sti
lds
ds
sbb
out
scas
and
lahf
insb
ret
push
es
cmp
sub
pop
lods
mov
mov
dec
je
pop
mov
cld
jns
xchg
call
rcll
jo
push
clc
mov
push
mov
pop
xor
sbb
mov
gs
popf
inc
in
mov
xchg
nop
test
lds
adc
movsb
inc
mov
out
pop
inc
sbb
cld
xchg
xchg
pop
pop
jbe
sbb
push
or
outsl
and
mov
pop
jmp
xor
movsb
lods
in
jg
jae
push
movsb
clc
aam
pop
das
push
jae
xor
fs
jns
mov
push
imul
mov
inc
lret
lret
dec
mov
out
xchg
arpl
and
test
jae
mov
dec
jecxz
jae
imul
rcl
movsl
dec
test
push
lock
sti
and
and
cld
roll
orb
mov
jbe
xor
out
pop
mov
btc
xchg
or
sahf
mov
mov
repz
xor
cltd
test
pop
out
subl
add
add
test
jno
cmp
cmc
or
mov
outsl
pop
xor
fisttpll
rorb
mov
inc
xorl
fcmovb
ss
pop
rorb
ljmp
std
loop
xchg
xor
inc
mulb
call
pop
orb
lods
push
les
sbbl
das
xchg
mov
push
mov
mov
lea
mov
pop
test
cmp
inc
jle
or
pop
xor
jb
sbb
addl
and
mov
outsl
mov
mov
shll
pop
dec
dec
and
inc
dec
inc
cmpl
inc
test
ret
jns
pop
mov
dec
dec
out
test
incl
or
add
out
test
aaa
into
lea
mov
lods
icebp
push
into
xor
inc
sbb
xchg
shll
and
cmp
dec
clc
xchg
lcall
cmp
sub
push
mov
add
lret
mov
xchg
pop
test
push
mov
push
pop
clc
xchg
xchg
stc
imul
je
mov
aas
arpl
jge
pop
mov
and
into
jnp
nop
pop
test
mov
loope
sub
roll
or
test
mov
decb
xchg
dec
out
add
aad
out
lcall
xchg
adc
pop
and
cmp
push
dec
stos
popf
inc
cmpsb
outsb
ss
int
dec
xchg
addr16
sbb
cmpsb
cltd
jns
ds
pop
mov
lcall
jo
cmp
fisttpll
push
xor
cwtl
dec
push
pop
loopne
outsb
xlat
cmpsb
repz
lods
scas
jecxz
inc
pop
sub
ljmp
cli
jp
mov
mov
mov
mov
repz
shlb
cmp
mov
push
outsb
xorl
inc
test
jns
mov
jns
aas
jp
mov
rolb
data16
mov
scas
mov
jbe
mov
out
in
pop
loop
nop
loop
cli
cmovge
xchg
add
xchg
sbb
xchg
in
inc
xchg
jle
lods
in
mov
jo
sub
into
xchg
ja
rcr
cmp
rorl
push
push
inc
mov
inc
xchg
pop
push
cmpb
pop
sbbb
enter
push
mov
scas
mov
inc
jns
xchg
and
mov
xlat
jae
xor
or
les
or
lahf
nop
fidivrl
xchg
mov
in
jno
jb
or
mov
sbb
xor
mov
and
dec
cs
xchg
popa
xor
jnp
aas
and
cmpb
rcrb
mov
out
in
sbb
mov
inc
addl
xor
xor
jle
xchg
xor
hlt
jns
sbb
mov
addl
cmpsl
stos
out
and
outsb
aas
test
loopne
call
sbb
mov
push
cmp
fnstenv
ds
mov
inc
and
lcall
xchg
repz
in
pop
orl
cmpsl
mov
addr16
fsubrl
cmp
shl
jmp
pop
cltd
outsb
ret
mov
push
add
lods
cltd
je
pop
mov
lods
shlb
mov
aas
and
pop
in
mov
pop
pop
and
add
imul
imul
push
js
lret
sub
cltd
add
mov
mov
out
das
push
int3
sbb
mov
addr16
xchg
hlt
inc
xchg
test
or
aad
inc
call
fwait
dec
loopne
fsts
push
dec
shll
xor
data16
and
cmp
aam
cmp
pop
sbb
xchg
ds
mov
js
push
jno
jae
jne
xlat
sub
push
sbbb
fisubl
imul
xchg
mov
dec
inc
push
outsl
and
add
xor
out
mov
loopne
int
xchg
loop
sub
lcall
adc
pop
aas
out
jle
or
rorb
aad
jb
jb
ljmp
outsb
add
adc
xor
mov
xor
sbb
in
sbb
xor
leave
punpcklwd
or
int
jecxz
shl
xchg
or
mov
scas
jno
add
lret
data16
dec
jp
stc
imul
insl
out
add
xor
push
lcall
xor
adc
jno
and
mov
not
sbb
dec
sahf
mov
gs
cmp
mov
add
mov
movsb
cltd
mov
sbbb
push
dec
sbb
fcomps
test
js
stos
sbb
xchg
fstpt
mov
jp
cltd
nop/reserved
hlt
mov
xor
or
inc
jecxz
jecxz
aad
push
push
jl
jg
out
cli
mov
xor
mov
xor
cli
or
add
or
pusha
pop
or
aas
adc
sbb
dec
ds
repnz
lahf
sub
push
push
cmp
adc
jg
cmpsl
cs
cmc
inc
or
sti
lds
sbb
test
dec
daa
iret
xchg
fisttps
adc
mov
adc
aas
cmp
and
and
arpl
bound
and
pushf
xchg
lock
push
jae
test
inc
push
pxor
out
imul
or
out
adc
cmc
pop
lret
ss
or
movsl
int3
icebp
adc
pop
hlt
mov
aaa
mov
xor
pop
out
jo
jle
dec
aam
icebp
leave
rolb
stos
enter
nop
loop
sbb
js
arpl
and
pop
pop
xchg
pop
pop
and
push
rclb
ds
push
or
dec
inc
or
and
loop
xor
pop
lret
pop
lret
xor
adc
dec
arpl
push
adc
leave
les
jno
dec
lock
pusha
cmp
cmp
sbb
add
lcall
test
arpl
lock
sub
ljmp
xchg
ss
push
outsb
nop
nop
push
orl
cmp
jmp
leave
push
jb
cmpsl
sbb
push
imul
and
gs
bound
in
mov
test
jbe
or
pop
out
and
push
adc
mov
popw
xor
jp
cwtl
popa
leave
icebp
aad
daa
push
xor
fidivl
insl
push
icebp
test
sub
les
xor
or
icebp
test
xchg
ret
jae
xor
push
stos
fwait
mov
cmp
sub
movl
sub
adc
or
fstps
mov
or
test
adc
mov
pushf
in
adc
ds
push
and
cmp
std
jae
cwtl
ret
lahf
imul
sbb
jbe
jbe
xchg
xor
in
adc
push
or
inc
repnz
sbb
sahf
push
push
mov
ja
cmp
jo
pop
test
push
mov
jge
pusha
dec
dec
mov
mov
jne
aad
call
mov
test
cmp
xchg
popa
decl
enter
je
test
mov
mov
repnz
pop
in
mov
lea
test
mov
daa
jge
add
push
rorl
adc
ret
data16
xchg
add
sbb
pop
popl
push
cmpsl
fwait
dec
cli
movsl
fimull
dec
test
in
ficompl
js
and
push
jb
mov
js
inc
ja
rcll
int3
mov
jmp
xor
push
decl
pop
mov
cltd
jns
xchg
icebp
fcmovnb
test
leave
mov
inc
cli
pop
pop
iret
rcl
jecxz
aas
aam
cmp
or
loopne
mov
jp
das
mov
out
aaa
xchg
xchg
leave
repz
jmp
clc
ljmp
aad
pop
fcomip
adc
das
das
xchg
mov
mov
sub
xchg
aaa
dec
pop
add
pushf
mov
dec
sub
lock
push
fmuls
outsl
dec
pop
mov
int3
add
xchg
les
xchg
cmp
mov
sbb
or
jne
sbb
mov
lock
fwait
in
mov
push
mov
mov
mov
outsl
insl
mov
jb
xlat
popf
arpl
sub
fcoml
rclb
scas
xor
dec
mov
sbb
pop
jge
cmp
mov
sti
jmp
mov
ljmp
jmp
push
shll
xchg
jmp
scas
xchg
out
push
or
pop
xchg
stc
testb
outsl
int3
ror
imull
mov
dec
loop
adc
xlat
adc
js
mov
inc
mov
inc
test
or
mov
out
jle
js
fmul
push
cmpsl
jns
ja
pop
les
insl
in
mulb
pop
mov
outsb
inc
in
mov
test
ret
jbe
mov
js
and
inc
jne
into
push
call
cmp
movsl
cmp
pushf
lock
stos
xchg
cmpb
addr16
adc
loop
and
loopne
cmp
movsb
and
in
stos
mov
mov
dec
push
out
data16
mov
mov
pusha
push
dec
push
scas
arpl
jne
subb
dec
add
mov
jp
jl
dec
repnz
mov
popf
ret
adc
scas
ret
insl
xchg
pop
mov
outsb
repz
jnp
mov
jp
mov
adc
iret
leave
mov
jno
inc
add
es
out
jnp
sbb
out
lahf
cmp
je
sahf
out
lcall
daa
sldt
add
out
push
push
pusha
int3
inc
loope
lret
push
mov
xchg
adc
add
adc
and
bound
inc
int
ss
syscall
sti
loope
jl
hlt
std
sar
movsb
repz
fstpl
or
movsl
jmp
movsb
jmp
cld
les
mov
leave
push
push
jmp
fdecstp
dec
gs
sbb
sahf
int3
mov
outsl
add
lods
stc
ss
mov
mov
mov
in
adc
icebp
pop
push
inc
inc
cli
adc
sub
fidivl
sub
jp
cltd
push
test
stos
lock
fimuls
scas
add
in
cmp
popf
add
dec
inc
push
inc
lret
neg
div
pop
pop
lret
or
into
shl
mov
mov
inc
mov
push
mov
dec
std
fsub
sbb
loope
lods
scas
aas
inc
pushf
fdivr
testb
adc
cmp
icebp
loope
sub
fwait
mov
lea
cmpsb
inc
testb
insb
icebp
enter
dec
nop
div
inc
and
pop
stc
aas
mov
or
jne
daa
fidivs
cwtl
sarb
or
fdivrp
sbbl
jb
sub
lods
cmpsl
dec
out
ret
orl
jae
sub
add
in
pop
mov
sbb
lret
rcr
push
test
inc
test
mov
dec
int3
jbe
loop
int
or
push
dec
sbb
les
sub
call
add
dec
add
stos
sahf
gs
sub
sub
adc
mov
mov
xchg
xchg
jae
hlt
test
cmp
or
ds
into
mov
aaa
push
or
jg
and
and
insb
shlb
xchg
adc
int
cltd
cld
adc
adc
push
clc
mov
push
or
jp
cmpsb
dec
or
test
cmp
nop
mov
inc
push
mov
xor
adc
test
enter
cs
shl
ss
ret
bound
push
push
xchg
outsb
ficomps
adc
insb
add
popf
roll
scas
sub
cmp
sub
test
push
cmc
pushfw
insb
jmp
jnp
push
sbb
hlt
sub
loope
loopne
fildl
ret
loope
xor
mov
xor
in
ret
lret
stc
in
add
lahf
movsb
gs
push
sbb
shl
aad
cmpsb
sarl
icebp
inc
or
pop
and
adc
xor
data16
sub
je
pop
pop
cmp
inc
pop
aad
clc
popa
xchg
fldl
mov
int
loop
mov
pop
std
fdivrp
inc
stc
sbb
jno
push
adc
mov
aaa
mov
pop
ss
or
loop
ja
std
mov
and
out
sahf
or
jns
adc
mov
aas
inc
ja
out
lods
ret
sbb
add
in
jmp
adc
mov
xor
popa
adc
sub
inc
pop
out
addb
dec
addr16
dec
cmp
fnstenv
je
sti
cmc
fnstsw
jge
sahf
or
fcompl
push
js
pusha
pop
imul
cli
out
and
mov
xchg
add
fst
in
xchg
bound
mov
clc
xor
mov
cmp
push
bound
jnp
rcl
dec
jg
xchg
xchg
fiaddl
lcall
cmpsb
dec
lret
mov
out
jl
ret
insb
sbb
repnz
sbb
push
iret
dec
sbb
sub
pop
sahf
test
addr16
scas
jle
push
xor
push
sub
and
mov
and
mov
mov
xor
popa
icebp
xchg
pop
push
dec
mov
movb
xor
movsl
or
adc
pushf
sbb
fsts
push
movsl
mov
shrb
daa
lret
sbb
movlps
mov
sbb
or
mov
stos
jmp
std
ret
fstpl
xor
sub
add
jp
arpl
xchg
out
lods
pop
addr16
jb
add
push
mov
sub
int3
jbe
or
jbe
ret
int3
sarl
mov
dec
mov
pop
movsb
jne
mov
imul
cmp
jmp
pop
push
push
mov
stos
cmp
cmpsb
or
jns
adc
push
lret
and
fadd
ss
pop
cwtl
or
jno
mulb
sub
std
sbbl
sahf
add
pop
inc
xchg
dec
inc
mov
iret
out
pop
stos
mov
out
cltd
seto
and
adc
mov
inc
push
pop
stc
js
inc
mov
ds
fnstsw
lahf
addr16
dec
pop
daa
rolb
dec
jno
icebp
and
pop
mov
daa
pop
mov
or
insl
add
push
xor
cmp
xlat
jb
enter
addr16
mov
adc
push
out
loop
scas
pop
cmpsl
sbb
add
sbb
add
xchg
out
sub
lcall
add
jno
enter
inc
jecxz
xor
movsb
fcompl
std
mov
in
stc
lahf
fs
pushf
or
xchg
aad
mov
pop
mov
jge
adc
mov
push
sub
xor
or
xlat
fldenv
or
and
pop
scas
into
in
push
cwtl
adc
and
insl
cmp
and
push
mov
xor
fldcw
stc
and
popf
aas
xor
nop
rclb
cmp
jns
dec
pop
adcb
xchg
mov
ret
call
icebp
pop
add
test
je
xor
pop
insl
in
adc
popa
dec
mov
pop
inc
inc
xor
pop
push
leave
inc
or
in
shr
sarb
mov
enter
mov
add
xchg
ljmp
inc
das
pop
lods
sbb
or
fistpl
cwtl
cmp
xchg
push
xchg
jno
mov
movsl
cmp
out
push
lahf
mov
js
mov
or
xor
jecxz
xchg
stos
or
cmp
fs
add
mov
sbbb
sbb
push
pop
sbb
inc
xor
inc
jns
xor
xchg
xchg
ret
ljmp
xchg
lea
ja
jge
lahf
cli
sbb
pop
mov
addr16
cmp
or
lea
sub
sbb
push
fcom
sarb
xchg
pop
sbb
sbb
aad
jno
add
movsb
jns
dec
dec
sbb
cmp
pop
xor
fistpl
out
xchg
call
or
mov
fbstp
cltd
jmp
jp
pop
dec
ret
lods
in
jmp
adc
jge
adc
aas
push
mov
leave
scas
std
lods
push
adc
jns
lods
int
adc
test
ret
inc
mov
xor
sbb
and
xchg
out
cmpb
lcall
jnp
leave
aad
adc
stos
setns
lcall
inc
dec
xorl
fidivrs
in
sub
aaa
mov
mov
jp
lcall
jle
test
fisttpll
sub
push
aas
mov
pop
or
mov
lock
add
sbb
popa
cmp
sbb
fdivr
jo
out
cmp
out
pop
mov
scas
sti
pop
sti
mov
push
xchg
sub
mov
lahf
nop
in
enter
mov
testb
test
cmp
rclb
stos
outsb
mov
and
xchg
jb
adc
mov
ret
or
push
fnstcw
ljmp
mov
mov
ss
pop
das
sub
adc
fsts
test
loope
int3
xor
sbb
pop
sbb
pop
test
jb
xchg
xor
or
insb
in
fst
push
add
push
sub
lods
jp
scas
sub
pop
xchg
mov
xor
out
test
push
mov
mov
addl
jns
mov
cltd
sub
and
mov
jle
add
push
lcall
into
xor
xor
push
int3
sub
out
cwtl
cmp
fwait
or
and
icebp
fucomip
inc
rcrb
std
nop
xchg
add
inc
jl
cli
into
ja
mov
int
stos
mov
test
inc
push
xlat
fildll
mov
mov
and
mov
out
xchg
adc
mov
and
mov
imulb
push
cli
aad
fildl
cs
out
sub
mov
lret
loop
cmp
lahf
xchg
mov
mov
push
adc
jbe
pop
enter
popf
out
mov
mov
push
aaa
adc
push
sub
dec
std
pop
daa
andl
pop
scas
jnp
movsb
xor
iret
push
int3
or
pop
lods
call
sub
fisttps
adc
mov
das
movsl
mov
out
xlat
add
aam
adc
out
dec
jp
out
aaa
hlt
cmp
lods
jbe
filds
dec
rcr
sbb
out
aam
jo
add
xchg
jno
lcall
imul
dec
lcall
in
push
nop
int3
out
adc
scas
add
arpl
enter
adc
addr16
pop
cmp
inc
movsb
sbb
hlt
in
fcmovu
sbb
sti
push
cmpl
pushl
out
mov
in
mov
repz
cmp
stos
hlt
mov
mov
std
pop
mov
mov
pop
xor
stos
or
dec
cmp
sub
mov
push
push
mov
das
adc
loop
jg
ljmp
or
imul
xor
jecxz
ret
or
mov
inc
xlat
dec
inc
sahf
inc
add
stos
bnd
jbe
cmp
jg
out
mov
mov
iret
inc
sbb
mov
fs
jg
loop
das
negl
movsb
cwtl
movb
sub
in
push
je
or
mov
push
sub
dec
movsl
mov
inc
jp
stos
mov
jo
int3
fs
inc
xor
lods
jae
popf
xor
lods
rorl
push
mov
mov
in
and
out
push
sbb
mov
push
je
add
xchg
sbb
imul
lock
add
test
xor
lods
jl
lcall
movsl
pop
out
adc
jmp
pop
jne
mov
ja
fisttps
into
lea
out
push
shlb
test
pusha
popl
push
out
jge
fs
ljmp
inc
fldl
outsl
jl
jo
add
xorb
das
jns
push
cld
fstpt
add
div
je
mov
adc
jo
das
rcll
fildl
adc
les
cmp
inc
or
inc
xchg
add
gs
aad
int3
and
mov
adc
mov
mov
cmp
pop
dec
mov
add
mov
insb
insl
outsl
loop
aam
dec
adc
adc
imul
xchg
aaa
scas
pop
mull
loopne
push
scas
sti
mov
mov
nop
push
sub
ss
fistpll
xchg
daa
jns
mov
mov
sub
out
out
movsl
pop
testl
xor
inc
mov
mov
addr16
inc
and
stos
mov
out
or
mov
std
test
cld
cmc
rcrl
je
lret
das
adc
dec
je
out
icebp
out
mov
adc
mov
cld
dec
push
jnp
paddsb
lret
adc
cmpsb
in
out
loope
shlb
jl
cmc
out
inc
adcb
lcall
inc
jb
stos
subl
aas
cmc
ret
and
mov
mull
mov
daa
mov
fwait
xchg
cmpsb
mov
mov
jae
xchg
mov
push
push
mov
inc
outsb
dec
addr16
test
jne
dec
xchg
cmpsl
mov
mov
xchg
pushl
mov
jg
setne
sbb
ficompl
adc
int3
or
cli
mov
inc
int3
xlat
push
ja
dec
lods
mov
loop
pusha
and
fildll
in
and
xchg
fnstcw
ret
pop
cmp
mov
pop
nop
inc
stc
sub
sbb
test
and
cmpsb
or
std
daa
and
aam
and
iret
dec
fstps
push
and
xchg
add
ja
dec
popf
push
add
loopne
pop
movsl
xchg
mov
gs
lahf
xlat
cltd
xor
sahf
test
aam
fldt
jle
leave
aaa
imul
subl
cltd
inc
ret
divb
ds
insl
pop
shll
idiv
dec
pop
mov
repz
stos
fldl
xchg
push
je
cmp
xor
adc
cmp
mov
push
lret
sbb
mov
into
lcall
call
int
daa
fcmovnu
xchg
jo
daa
adc
ds
clc
cmp
pusha
jmp
into
popf
cmpsl
add
mov
inc
dec
jne
shlb
lret
in
aad
cmc
mov
xchg
push
dec
lods
jne
push
cltd
cmp
ret
mov
lret
data16
scas
adc
cmp
ret
rcrl
mov
dec
ret
das
int3
ja
movsl
push
mov
fmul
cwtl
adc
jmp
pop
or
popf
ud2
gs
inc
xchg
sbb
insb
popf
mov
jge
stos
ja
pop
dec
add
add
jl
sbb
aas
cmpsl
jmp
and
jg
insl
adc
and
cmpsb
xlat
or
aas
mov
lock
stos
sbb
mov
out
pop
mov
cmpsl
dec
scas
stos
mov
adc
sbb
mov
sahf
je
sbb
or
test
shlb
stc
dec
jns
lock
insl
mov
pop
pop
adc
mov
xlat
push
sub
sub
and
and
mov
inc
hlt
cmpsb
cmpsb
or
jns
mov
cmp
and
xor
lcall
leave
push
je
xor
mov
dec
cltd
xor
mov
jl
jns
cld
fwait
mov
stos
sahf
mov
dec
mov
aas
lret
aaa
lcall
test
mov
cmp
std
dec
mov
mov
cmp
pop
sbbb
loopne
test
in
push
pop
lds
loope
sub
push
xchg
push
push
sub
jp
lods
cmp
xor
iret
movsl
js
aas
add
mov
sbb
rcrb
cmp
faddl
call
dec
shrl
cmp
add
daa
adc
sub
push
int
es
mov
test
sub
in
movsl
jp
outsb
jb
sbb
subb
mov
jg
push
sbb
out
pop
movsb
inc
mov
pop
add
inc
dec
repz
lds
mov
in
xor
and
push
fisubrs
leave
pop
aad
in
aas
bswap
pop
jmp
int3
jle
fbld
in
stc
sbb
mov
mov
scas
xchg
inc
cmp
mov
cmp
mov
push
mov
into
sub
mov
pushf
sbb
cmp
movsb
mov
jg
rclb
cmp
int3
cmc
xor
leave
mul
jno
pushf
out
mov
mov
lret
bound
mov
add
gs
test
jmp
leave
int
jmp
sahf
insb
mov
imull
insl
dec
leave
or
out
cmp
push
loopne
roll
test
xor
cmp
data16
jle
loope
cld
ret
das
pop
std
dec
dec
lods
mov
repnz
jge
mov
pop
mulb
pop
mov
mov
ss
cmpsb
sti
outsl
cmp
aaa
mov
addr16
insb
jp
aaa
sarb
dec
dec
nop
mov
mov
out
popa
daa
inc
jns
loope
fldenv
mov
clc
jne
sbb
xchg
inc
inc
xchg
lods
push
cmp
ud2
xor
sub
scas
sbb
adc
jl
in
stos
inc
shrl
pop
loop
ret
iret
ljmp
and
stos
out
js
sahf
fs
ret
cmp
adc
sti
std
pop
cmp
lods
dec
cmpsl
int
loop
jmp
outsb
and
mov
call
and
shl
jns
bound
push
loopne
lret
movsl
lahf
cwtl
sub
pop
pop
sub
mov
outsb
cltd
pop
mov
lcall
lret
or
pop
test
test
imul
pop
jmp
pop
mov
imul
sarl
inc
outsl
ss
and
out
and
xor
loope
aas
push
cmp
fisttpl
loopne
mov
fdivs
ja
cwtl
xchg
mov
ja
pop
adc
sub
and
inc
stos
cli
mov
sbb
aam
push
sbb
mov
aad
popl
cmpps
mov
mov
pop
xchg
repnz
rolb
sbb
dec
mov
jnp
sahf
rcl
clc
jnp
in
rcll
mov
dec
fadds
je
icebp
jle
orl
push
add
cmpsl
sub
xor
gs
adc
jge
fcmovu
mov
mov
pop
test
sbb
cmpb
pusha
or
ss
add
cli
xor
sbb
add
ror
or
jb
pop
sub
mov
jne
fsubrp
idiv
cmp
inc
and
xchg
mov
jmp
in
pop
mov
pop
adc
int
and
jns
mov
insl
mov
std
shlb
add
xor
nop
lret
xor
loope
xor
data16
xor
repnz
cmpsl
push
mov
mov
sub
mov
inc
cmc
mov
lea
leave
test
adc
mov
jne
xchg
or
pop
mov
sbb
or
xchg
cmp
sbbl
adc
lret
inc
out
xchg
xchg
jl
pop
pop
out
ret
fmuls
fwait
mov
sub
lret
jo
test
ss
pop
xor
xchg
movsb
dec
jb
dec
adc
or
sub
mov
pop
sub
mov
movsb
push
jb
sub
or
popa
jmp
xor
scas
and
call
fidivrs
mov
push
insb
negl
jmp
mov
dec
xor
loopne
lahf
and
or
xchg
sbb
jl
outsb
dec
lahf
lret
push
add
mov
cmp
lods
fadd
lahf
loop
pop
lahf
arpl
ds
add
xchg
push
gs
sti
imul
sbb
adc
inc
dec
adc
mov
pop
mov
cmp
push
outsb
outsb
xchg
ss
int
rep
push
dec
das
icebp
sub
aad
xor
mov
xchg
xor
test
in
cld
sbb
fimuls
xor
pop
and
xor
cmp
lock
xlat
adc
jns
pop
outsl
in
xchg
sub
xchg
fidivrs
lods
jmp
enter
fld
nop
daa
fcmove
mov
vpunpckhqdq
mov
hlt
pop
mov
fisttps
inc
das
pop
add
fsubrs
mov
xor
mov
dec
xor
mov
xlat
in
aas
adc
pop
mov
jge
aaa
xor
mov
sahf
mov
cmp
fisubl
sub
add
es
xor
xchg
xor
clc
pushf
or
aam
pop
mov
xchg
dec
dec
insl
mov
std
rorb
imul
add
sub
mov
jne
push
mov
gs
mov
pop
or
lcall
and
adc
cmp
pop
fidivrl
push
in
jmp
dec
loop
inc
in
mov
es
cmp
adc
push
test
andb
dec
xchg
inc
mov
mov
adc
pop
insb
into
mov
pushf
out
xor
jge
in
sub
fs
fadd
add
mov
mov
xorl
cli
xchg
dec
mov
or
mov
dec
add
pop
leave
addl
sub
mov
mov
aas
add
jmp
mov
and
push
loopne
xorb
sahf
cmp
xlat
test
cmp
bound
pop
lret
stos
add
mov
cld
add
inc
jle
xchg
stos
leave
jp
int
inc
leave
aas
rclb
dec
outsl
ret
xchg
dec
hlt
mov
fstpt
xchg
shl
xchg
fucomi
int3
rolb
mov
lods
and
mov
roll
push
js
gs
enter
fwait
scas
xchg
in
inc
mov
pop
imulb
lock
sub
lahf
test
loopne
mov
adc
dec
dec
scas
sbb
aas
mov
out
mov
dec
cmp
add
idivb
sub
xchg
inc
jl
cltd
jg
sahf
bswap
cs
push
daa
daa
fnstsw
bound
mov
xor
lods
push
xorl
jecxz
int3
sahf
lock
lcall
dec
int
mov
aas
repnz
jle
into
dec
adc
jnp
shlb
mov
sbb
hlt
stos
mov
lahf
jle
or
js
xchg
orb
jb
shr
loope
xchg
pusha
enter
out
repz
mov
aam
in
mov
mov
gs
mov
enter
mov
scas
rcrb
sti
mov
shrl
pop
mov
add
and
fisubrs
idivl
in
jmp
mov
add
and
fsubl
cmp
daa
mov
pop
iret
shll
xchg
push
addb
gs
fsubs
test
int
sbb
rcr
jle
cmp
int3
repnz
mov
xchg
inc
aam
cmp
cmp
sarl
hlt
push
fadd
repnz
jl
ljmp
cld
pop
jg
inc
bound
and
adc
or
fdivrl
sbb
inc
outsb
push
or
mov
dec
ficoml
dec
pop
or
lret
cmpsb
mov
mov
pop
into
movsb
jo
insb
pop
call
fstpt
xor
movsl
imul
cltd
out
sub
jne
sub
xor
add
test
or
push
jp
mov
test
inc
mov
outsb
push
push
jle
cwtl
insb
imul
or
insl
scas
fnsave
sub
sub
jnp
leave
sti
icebp
mov
jb
or
adc
stos
add
cmpsb
mov
mov
mov
or
pop
pop
stos
or
jns
push
in
lcall
pop
ds
movsb
and
movsl
ret
cwtl
jo
lret
rcrb
mov
movsb
xorl
inc
in
daa
test
loopne
mov
sbb
repnz
popa
xchg
faddl
and
nop
data16
clc
es
int3
jp
outsl
and
lret
or
mov
inc
lea
ja
mov
or
fwait
pusha
decl
lcall
std
inc
jge
pushf
lods
add
or
cmp
testb
and
ror
mov
es
test
mov
daa
mov
or
stos
shrb
or
jl
idivb
jne
or
xor
inc
jmp
insb
or
inc
rorb
lods
mov
in
sbb
test
aaa
xchg
mov
cmp
pop
movsl
inc
arpl
push
or
jg
dec
xor
enter
cmpsl
inc
xchg
jno
inc
es
rolb
lret
mov
jecxz
call
aad
jmp
scas
adc
sub
mov
sbb
mov
jbe
xor
mov
outsl
dec
idivb
in
dec
lea
and
mov
mov
push
sbb
and
jmp
xchg
push
adc
out
fstpl
cmp
rorb
cmc
add
add
xchg
cltd
fimull
sbb
lret
dec
in
jne
das
push
lret
addr16
push
punpckhwd
outsb
cs
movb
mov
fsubrs
movsb
sbb
int3
out
stos
adc
xor
inc
push
push
mov
addr16
imul
loop
out
mov
dec
pop
dec
sub
sbb
test
sahf
mov
push
xchg
out
mov
pop
sub
ret
and
xor
jecxz
sahf
pop
movl
cmp
jo
dec
sbb
push
stc
test
mov
jb
lret
insl
loope
aad
mov
aaa
das
out
jo,pn
sub
add
sub
pop
jno
sub
bswap
jl
bound
dec
xlat
sarl
rclb
jb
xchg
notb
fisttpl
cmpsb
sub
inc
jmp
mov
dec
and
xchg
push
pushf
or
ret
adc
mov
leave
mov
mov
in
or
ret
push
testl
jp
psubusw
das
ret
fisubs
xchg
nop
mov
test
add
addr16
or
add
orl
pop
jne
mov
push
dec
js
jge
push
inc
out
rorl
cwtl
xchg
cwtl
ficomps
insl
in
sub
lret
repz
lds
test
in
hlt
rorl
cmpsb
std
sbb
fdiv
inc
punpckhdq
mov
negb
dec
add
shr
dec
fbstp
test
loope
cmp
add
adc
push
and
lea
jbe
arpl
pushf
inc
or
sub
daa
mov
sub
scas
fsubr
mov
xor
stos
in
mov
jge
test
adc
mov
sahf
jmp
pop
jnp
or
arpl
fadd
subb
in
mov
xchg
sbb
cld
out
xchg
add
fdivl
or
test
fucomip
push
and
cld
call
out
adc
sbb
leave
jns
sbb
in
add
mov
pop
mov
repnz
outsl
daa
movsb
dec
dec
fldl
ret
out
adc
pop
push
and
into
mov
pop
push
sti
pop
xor
movsb
iret
or
pop
popa
sbb
xor
pushf
gs
stos
mov
addr16
jecxz
cmpsb
xchg
test
imul
mov
and
xchg
sar
xchg
cltd
mov
in
mov
jns
jbe
ds
lahf
cwtl
mov
add
cwtl
fs
ret
adc
and
pop
mov
test
mov
fiaddl
sub
cmp
and
fcmovb
rcrl
ficoml
jbe
pop
lds
out
notb
lds
pop
pushf
lds
lea
fbld
imull
pop
push
adc
and
mov
push
test
ds
mov
push
sbb
cmp
inc
jns
movsl
mov
mov
mov
pusha
jmp
jnp
out
pop
pop
in
inc
add
xchg
iret
pop
orl
mov
rclb
shl
hlt
das
pop
mov
mov
rorl
pop
mov
lret
call
aaa
cmc
and
iret
jns
xchg
mov
jb
fs
and
mov
jecxz
movsb
add
and
sbb
inc
arpl
out
popf
xor
insl
rol
xchg
xor
fcomps
fisubrs
and
jns
sbb
fwait
mov
and
shll
mov
xor
xchg
xchg
rclb
or
mov
subl
sub
mov
or
mov
lods
js
pop
xor
loopnew
mov
hlt
mov
xor
shl
add
mov
or
inc
pushf
cli
fnstenv
and
insb
push
dec
negl
mov
iret
clc
xor
mov
xor
scas
movsl
pop
hlt
cld
aam
mov
push
in
testl
mov
push
push
sub
push
in
sbb
int
mov
xor
arpl
popf
gs
shr
fs
or
aaa
xchg
ret
jp
popa
xor
lret
mov
mov
fdivs
adcb
cltd
aad
fistps
loopne
aad
xor
fistps
les
xchg
lret
mov
cmpsb
cmp
fcomip
shlb
test
repnz
jbe
fcoml
dec
ss
jno
movsb
inc
pop
push
xor
in
adc
mov
mov
popa
and
div
mov
push
clc
movsb
mov
addr16
daa
test
out
or
stc
pushf
fidivrl
dec
sub
imul
outsl
or
or
scas
sub
mov
shr
aam
fmulp
sarb
add
bound
mov
es
jl
lods
cs
dec
and
xlat
out
enter
mov
test
mov
sti
icebp
stos
inc
das
pop
in
daa
sarl
sub
jno
sub
cmp
jmp
dec
cmp
pop
pop
aaa
jmp
add
subb
jne
out
inc
mov
sbb
xchg
or
stos
sbb
scas
mov
xchg
ljmp
jne
aam
push
pusha
mov
jns
lret
sub
cmpl
xor
scas
sbb
push
cwtl
jg
ret
jg
enter
add
push
pop
leave
adc
mov
mov
or
add
add
sub
inc
sub
push
mov
pop
pop
inc
js
adc
push
mov
mov
je
leave
in
popf
rcll
push
testl
dec
xchg
in
or
xchg
das
mov
mov
inc
iret
out
push
ffree
lods
jo
dec
mov
ss
jle
mov
sub
sub
push
and
stc
scas
and
jb
push
pop
mov
xchg
iret
mov
movl
cli
lods
mov
dec
cmc
std
mov
cld
adc
pop
das
mov
push
jecxz
cmp
pop
push
adc
xchg
aam
cld
xchg
shl
sub
iret
stc
cs
pop
cmp
cmc
jecxz
shr
xor
in
lahf
xchg
leave
repz
int3
cwtl
ds
ds
or
xor
ffree
icebp
test
cmc
cmp
aam
adc
cmpsl
popf
jg
adc
imul
pushf
xor
int3
mov
inc
pushf
mov
add
xchg
or
xchg
sbb
mov
loop
xor
pusha
or
dec
fildll
jmp
or
arpl
mov
repz
sbb
dec
lret
test
outsl
pop
test
stos
mov
int
add
adc
add
jl
push
cld
movsb
out
pushf
dec
out
std
mov
mov
mov
mov
ss
pop
cmp
cli
scas
push
or
dec
adc
rcrb
mov
push
fbstp
mov
movsb
jge
lds
jecxz
les
das
gs
inc
movsl
and
mov
fs
lret
mov
dec
divl
fstps
loope
add
inc
mov
insl
xor
adc
xchg
divb
cld
sbb
pop
lret
push
push
or
mov
mov
mov
lahf
leave
leave
add
and
sub
pop
stos
movsb
jg
mov
aas
mov
into
mov
dec
arpl
adc
pop
jl
sahf
js
mov
mov
js
nop
aam
out
lcall
and
shll
in
inc
xor
push
and
xor
push
mov
pop
loopne
imul
xor
and
jge
aam
jbe
call
xor
push
dec
in
push
add
xchg
in
notl
push
js
jnp
pop
fwait
pmaddwd
mov
jns
jge
inc
shll
and
into
stc
sbb
imull
jl
aam
push
or
cmp
mov
and
stos
push
cs
jl
sub
mov
push
aam
ja
pop
sahf
lods
sub
subb
add
ds
ss
gs
adc
loopne
jo
inc
sbb
in
inc
outsb
jecxz
and
mov
out
out
fildl
in
sti
and
mov
fldenv
aad
or
fucomi
cmp
jp
popa
xchg
int3
ljmp
jb
and
loopne
idivb
mov
or
xchg
mov
lods
xor
stc
stos
xchg
test
mov
rorl
dec
jb
lock
daa
sbb
sub
enter
jmp
xlat
xor
add
inc
cmp
imul
loopne
and
jae
stc
lods
push
or
lret
push
into
mov
fdivs
inc
jl
mov
lods
pop
sub
jp
aaa
stos
adc
jg
ss
mov
lock
loope
add
push
xlat
cmp
dec
add
cmp
mov
mov
inc
push
or
shll
adc
outsl
jp
ds
add
mov
sub
leave
pusha
sub
xor
fildll
mov
ficoms
pop
mov
addr16
add
jo
sbb
inc
daa
push
adc
fiaddl
repnz
push
in
mov
loope
lds
mov
scas
cltd
cmp
cmc
loopne
lock
dec
out
rcl
fcomps
pop
dec
inc
mov
stc
pusha
dec
sarl
push
insl
pop
mov
das
mov
sbb
push
mov
dec
adc
shl
cmp
rclb
js
pop
test
adc
in
mov
outsl
cmc
loope
lock
out
repz
das
push
mov
sarb
jne
test
inc
pushf
and
xchg
sahf
ja
lcall
mov
repz
shll
pop
xchg
aas
and
jmp
mov
ja
fdivl
das
ret
testb
pusha
sbb
out
stos
lret
jno
pop
xor
lahf
mov
aad
push
mov
or
cmp
int
lods
adc
outsl
xchg
popa
addb
adc
pop
push
in
sti
lret
enter
push
adc
outsb
add
ret
cmpsl
jbe
rcll
mov
dec
out
pop
fimuls
xor
cmp
shr
adc
popf
movsb
xlat
out
cmp
mov
jle
je
xchg
adc
mov
das
rorb
adc
imul
dec
mov
adc
push
jle
mov
push
pop
inc
push
into
xor
dec
leave
jae
xor
xchg
pop
lods
call
xor
and
out
xor
cld
add
or
repz
and
decb
xchg
dec
xlat
pushf
lahf
cmp
repnz
repz
stc
cli
cs
jns
xor
push
cmp
ret
sti
xor
stc
stc
push
popf
cli
mov
cld
cli
mov
repz
movsl
dec
in
clc
out
bnd
in
fwait
sub
dec
or
adc
mov
or
add
js
add
lret
repz
ja
sbb
hlt
aaa
cmp
pop
popf
mov
std
das
mov
fmull
loope
push
in
fstpl
repnz
and
enter
pop
sub
data16
movsb
fsubrs
cmp
incl
data16
lahf
lods
and
imul
sarl
rol
dec
sub
js
divl
jge
add
call
add
and
adc
push
pop
call
dec
sarb
mov
cmp
sub
mov
je
pushf
ss
lahf
xchg
addb
pop
popf
sub
mov
push
je
or
mov
or
aas
pop
inc
mov
sbb
adc
stc
push
inc
xor
aaa
sbb
fstps
cmp
jne
pop
lret
dec
out
mov
std
jae
jo
aaa
lock
std
out
jge
xor
mov
shlb
pop
int
movsl
lret
ret
inc
es
push
or
outsb
int3
push
adc
je
cli
ret
adc
cmp
cltd
int
lret
inc
or
push
cmp
jne
stos
cmpsl
out
cmp
dec
data16
lret
dec
jle
mov
xor
scas
aaa
push
in
cli
pop
in
enter
daa
mov
icebp
arpl
sub
rolb
xchg
scas
pop
cmp
sti
push
stc
and
cmpsb
jmp
cld
out
stos
aad
test
outsb
clc
js
icebp
cmp
nop
outsl
adc
mov
fld1
mov
fcoml
sbb
mov
int3
jb
cmpsl
add
test
lcall
repnz
sbb
xchg
jge
insb
dec
push
jns
mov
jbe
push
jle
divb
pop
aam
fadd
mov
mov
shrl
stc
mov
pop
xchg
lahf
insl
cwtl
mov
dec
fidivl
lds
popl
xchg
xchg
mov
aaa
jg
mov
outsb
mov
mov
jno
dec
mov
adc
stos
and
bound
scas
out
sbb
icebp
jg
mov
adc
jecxz
jb
enter
int3
sub
call
mov
test
mov
or
jb
cmpsb
and
mov
stos
aam
lcall
adc
adc
shlb
int
cmpl
leave
insb
test
std
jno
add
stc
xor
aaa
ficoms
fs
adc
sbbl
int
mov
imul
xchg
and
jge
push
xchg
pop
mov
movsl
xor
je
stc
popf
test
rcl
fs
fmuls
inc
shlb
lods
divl
dec
or
test
fisttps
xchg
ret
inc
bound
cmp
mov
fcomps
sub
jo
push
sbb
pop
enter
cmpsl
popf
std
lahf
fdivl
stos
cmp
cld
into
enter
push
mov
aas
add
insb
sbb
jns
andb
adc
cmpsl
inc
pop
add
jb
cmp
sahf
rclb
mov
push
loope
ss
sub
dec
mov
out
bound
pusha
pop
aaa
es
ljmp
nop
mov
lods
or
push
jle
xchg
loop
jb
xor
or
in
xchg
push
jmp
sub
mov
xchg
fs
add
fidivrl
xor
adc
dec
jmp
cmpsl
ljmp
adc
pop
dec
out
mov
sti
push
cmc
lock
iret
out
mov
and
sbb
out
sub
cmp
push
adcl
sub
add
xor
cmpsb
pop
adcb
int3
outsb
inc
mov
adc
sbb
std
and
test
inc
jbe
xchg
adc
in
xchg
push
sar
in
repnz
ficompl
stos
fstpl
mov
aad
repz
mov
inc
loope
adc
pop
and
or
es
mov
push
dec
ja
jno
dec
lret
scas
xchg
repz
mov
inc
sbbl
leave
das
cltd
mov
in
fdiv
ljmp
outsl
xchg
mov
inc
pushf
jbe
or
in
jmp
sti
stc
loopne
xor
clc
fsubl
sub
sbb
lea
mov
in
dec
test
and
add
xchg
mov
dec
jne
in
je
shr
add
fsts
dec
push
jne
mov
je
nop
out
xchg
ficompl
sub
stos
lret
gs
loope
lods
leave
pop
adc
rolb
jnp
ret
arpl
daa
mov
xchg
les
shr
pop
inc
or
repz
xor
or
mov
pop
xchg
xor
out
push
les
mov
je
jl
dec
adc
or
cmc
sarb
xchg
sub
insb
lret
test
aad
movsl
jnp
mov
dec
dec
in
sbb
into
cmp
loopne
and
shr
sbb
add
adc
popf
inc
xchg
inc
pop
jg
cmpsl
sbb
lret
in
rclb
dec
dec
push
mov
adc
pop
cltd
or
pop
jo
les
inc
push
fsubl
ja
jne
ja
in
add
popa
cmp
sbb
shll
std
inc
std
mov
mov
push
push
outsl
fists
pushf
push
rcrl
das
sub
push
pop
pop
dec
push
pop
aaa
sub
mov
mov
jp
pop
in
ds
xchg
ficompl
sbb
xor
jns
xchg
adc
dec
jle
lea
rcl
loop
in
repz
mov
xor
xlat
sub
in
push
and
sub
mov
mov
mov
jo
arpl
cmp
mov
xchg
and
in
cmp
push
mov
add
testb
inc
xlat
lods
scas
daa
pushf
jl
sarb
xchg
je
nop
mov
add
xlat
mov
ss
lcall
in
lods
or
inc
inc
fcompl
xlat
mov
lahf
mov
sub
add
push
xchg
je
pop
or
push
add
jb
pop
test
fucom
cmpsb
xchg
inc
fsubl
repnz
dec
push
jle
mov
add
xchg
cltd
cmp
push
je
mov
and
xchg
stos
icebp
mov
mov
filds
sbb
push
cmp
pop
or
xor
push
rcr
mov
pusha
idiv
inc
mov
fstpt
lods
sub
push
inc
xlat
jae
push
popf
nop
mov
add
push
test
dec
jmp
inc
add
sub
xchg
and
mov
and
sub
call
or
loope
or
sbb
decl
and
stos
xor
das
jl
push
pop
jle
pop
ja
sub
insb
jl
mov
stc
je
add
roll
clc
mov
dec
mov
stos
mov
hlt
jle
jmp
xor
adc
inc
cmc
popa
lock
cli
popf
push
ss
jae
mov
ret
xor
cmp
cltd
cmp
dec
or
aas
inc
sbb
rorl
lods
hlt
mov
pop
and
jge
addr16
pop
lock
mov
cmc
sub
add
in
fidivl
lret
scas
ror
fwait
cli
loop
faddl
in
out
nop
nop
or
jnp
in
or
fisttpll
jb
and
std
fsubrs
shl
xchg
test
dec
gs
mov
jns
ret
nop
mov
loop
imul
xor
shlb
pop
xchg
loop
mov
aaa
leave
lcall
mov
xorb
icebp
and
movsb
scas
test
push
lds
inc
or
stos
out
push
xor
pop
dec
push
push
iret
dec
test
js
mov
adc
mov
out
jecxz
pop
std
outsl
mov
sub
adc
repz
stos
sub
mov
popf
xlat
jmp
xchg
mov
outsb
bswap
pop
mov
dec
mov
fistpll
repz
test
rorl
shrb
in
jmp
add
ljmp
pop
notb
inc
cmp
fisubs
loop
add
xor
andl
pop
inc
rolb
out
xchg
sbb
ja
movsb
jb
xchg
mov
iret
lea
or
mov
xor
pop
pop
mov
mov
ret
out
roll
jo
repnz
nop
cmp
lret
pop
mov
jno
jmp
or
pop
aas
ds
mov
mov
arpl
fwait
idivl
hlt
imul
adc
xor
clc
stos
test
hlt
in
push
jne
adc
inc
xchg
jns
ret
jb
shlb
adcl
jae
sahf
mov
mov
je
out
push
adc
inc
dec
push
cli
cmpsb
stos
testb
or
popa
cmp
loopne
jle
mov
out
bound
inc
fstpl
insb
inc
xor
sub
lds
lods
test
out
hlt
add
outsb
sbb
mov
outsb
insb
mov
test
je
mov
cmc
dec
aam
outsb
rclb
xor
mov
push
fwait
mov
mov
int
clc
sub
lret
nop
adc
cld
addr16
fldl
js
fwait
in
loope
inc
nop
pop
out
roll
cmp
shl
repnz
jo
push
fistpll
addr16
fidivrl
mov
ret
negb
mov
inc
mov
and
dec
and
adc
sub
call
hlt
xlat
movsl
out
or
test
idiv
out
add
mov
jl
sub
pop
cmc
cwtl
ret
push
ljmp
adc
data16
push
inc
roll
pop
xchg
outsl
iret
sub
pop
mov
lret
jo,pn
repz
rcrb
and
push
ret
mov
adc
idivl
mov
jae
pushf
rcpps
fwait
dec
rorb
or
test
imul
hlt
mov
out
out
aas
ds
test
xchg
and
xor
xchg
loop
mov
xchg
lret
add
mov
push
cmp
mov
push
mov
xchg
test
xchg
sbb
push
push
call
pushf
cmp
adc
cs
mov
ja
in
cmp
jnp
daa
movsb
movq
jno
imul
gs
fwait
test
sti
xor
mov
dec
movsb
lahf
mov
and
cmp
scas
and
imul
jecxz
fcomp
dec
cmp
popa
or
mov
outsl
lods
xchg
lock
cmp
movsl
scas
sbb
fs
in
loopne
aas
xchg
jb
and
fwait
ret
dec
shrl
mov
dec
add
adc
sti
adcl
xor
out
int
mov
pop
je
ds
fdivrl
sbb
outsb
in
mov
jbe
je
sbb
movsb
jmp
adc
jecxz
je
xchg
sub
pop
inc
lea
aas
inc
arpl
movsl
inc
push
je
cwtl
and
mov
adc
cwtl
push
mov
push
xchg
pop
scas
jbe
outsl
lds
adc
dec
fmuls
into
dec
into
loope
pop
xchg
fwait
pushl
movsl
xor
loope
aas
jecxz
lahf
fsubs
lods
enter
addr16
pop
dec
push
mov
sbb
rcrl
shlb
imul
sub
inc
ljmp
daa
aam
mov
xchg
push
sub
sub
push
jnp
outsl
jns
jle
cmp
aas
and
xchg
test
outsl
mov
mov
ret
scas
jg
test
lods
mov
jp
mov
movsl
repnz
lods
stc
mov
mov
mov
ds
test
out
cld
loope
or
out
mov
push
cmp
or
loop
inc
and
outsl
pop
pop
sub
jbe
mov
decl
aaa
sub
and
cmpsb
out
rcrb
or
sub
jnp
pop
jmp
cmp
sarl
das
push
mov
rorb
fwait
sbb
fisubrs
pop
jp
sub
pop
inc
aas
mov
lds
push
add
pop
fwait
sub
add
test
mov
int
shll
in
cmpb
pop
out
lock
push
jnp
xchg
xchg
and
sahf
icebp
push
mov
fcmovnbe
add
ja
in
stos
sbb
xchg
out
out
xchg
pushf
sbb
mov
sbb
and
xchg
aam
outsl
cmpsb
movsl
pop
push
shrl
nop
sar
mov
sbb
shl
push
cld
dec
repz
les
pop
xchg
mull
xchg
dec
rorl
jbe
repnz
mov
pop
cmp
shrb
mov
out
daa
push
jecxz
xchg
rcr
cmp
mov
dec
stos
cmp
imul
pop
mov
dec
push
scas
data16
jecxz
adc
sub
mov
sbb
push
aas
mov
mov
stc
stc
sub
xchg
sahf
pop
xor
push
and
out
adc
insl
adc
mov
xor
mov
push
mov
out
aad
xchg
rcll
aas
mov
push
mov
lds
clc
stos
mov
dec
mov
xchg
pop
and
loope
lret
adc
mov
shrl
xor
jnp
filds
cmp
flds
les
cltd
cmpsb
fistpll
and
fiadds
push
lret
dec
cmp
push
dec
popa
aam
jmp
pop
xchg
xchg
mov
fisubrl
push
cmc
adc
ja
repz
mov
and
pop
inc
jns
jg
xchg
ja
sti
push
pop
call
sbb
sbb
mov
adc
cwtl
push
add
imul
add
fcmovne
std
cmp
fstpl
lods
addb
ret
sbb
nop
mov
aad
sub
loope
in
pop
pushf
xlat
mov
pop
icebp
and
jb
xchg
inc
mov
sbb
arpl
loope
dec
sbb
lock
push
cmpsb
and
xor
sbb
sahf
pop
cwtl
out
clc
in
test
pop
mov
dec
cmp
sub
xchg
pop
hlt
jl
scas
push
shrl
mov
xlat
rcr
jecxz
sub
lods
addr16
and
loope
movsl
ja
stc
test
mov
fisubs
sahf
das
cmp
inc
jp
and
movsb
inc
adc
xchg
mov
cmpsb
out
mov
sahf
aaa
daa
in
push
dec
sbb
outsl
sub
pop
test
imul
shl
popa
aas
mov
xchg
pop
mov
stc
scas
lcall
fwait
cmpsb
inc
out
std
dec
push
jge
push
sbb
cli
dec
pop
ljmp
rcll
rolb
push
fistpll
dec
jl
xchg
out
in
sbb
out
mov
incl
push
fisubrs
test
ret
adc
mov
push
cmp
inc
pop
and
and
adc
mov
mov
movsb
mov
loopne
dec
incb
popa
stc
and
div
notl
mov
add
scas
adc
xor
dec
stos
and
xor
push
fsub
and
test
mov
dec
xor
mov
xor
sti
jmp
arpl
xchg
adc
movsl
stos
mov
add
out
jno
stos
repnz
ja
dec
jge
int
in
xor
loopne
inc
mov
fwait
sub
dec
push
por
sbb
sub
mov
ret
lea
js
aaa
sahf
mov
pxor
das
subl
aas
out
dec
jbe
test
mov
push
sbb
pop
les
addb
mov
push
stc
stc
in
pop
sbb
fxtract
sti
adc
das
xchg
jnp
xchg
sbb
sarl
adc
push
cli
push
mov
push
dec
cmpsl
or
dec
and
xor
lret
icebp
sarb
cli
sub
adc
fmul
aaa
and
test
call
pop
ljmp
jle
cmp
lcall
jb
sbb
ret
popf
mov
imul
or
aaa
lock
lods
aam
push
inc
inc
insl
je
data16
mov
jb
dec
es
mov
stc
jp
pop
loope
jecxz
pop
lret
sub
jge
shl
repz
xchg
xorb
test
add
std
mov
sub
insl
out
sub
cmp
mov
into
xchg
jg
in
cmp
mov
faddp
je
xor
pushf
push
push
in
cld
mov
xchg
outsl
push
add
out
cli
loop
sub
shlb
aas
jecxz
nop
lahf
std
in
ret
cmp
insb
lahf
lret
sarl
movsb
ss
jo
popa
mov
and
jno
dec
aas
std
xchg
pop
jno
mov
dec
cli
das
out
push
jno
cld
inc
movb
lods
sbb
jecxz
dec
push
daa
out
push
in
add
mov
repnz
adc
shrl
and
nop
in
scas
mov
notb
xor
cld
mov
jl
mov
ljmp
push
mov
nop
fucom
xor
subl
and
jg
push
mov
or
out
jns
sub
into
js
xchg
cmpsl
mov
xor
xchg
stos
aad
mov
and
data16
sahf
sbb
fs
push
shr
and
adcb
or
rolb
pop
stos
pop
inc
xor
pusha
stc
inc
mov
mov
hlt
mov
xorb
int
sbb
sub
or
dec
push
jg
jg
fcompl
mov
mov
push
inc
ret
mov
sub
xchg
aad
inc
push
push
jecxz
cmp
and
pop
mov
imul
cmpsl
bound
adc
xchg
sbb
js
test
loope
inc
jno
mov
mov
nop
and
idivb
mov
push
cmp
ret
pushf
cwtl
ss
mov
in
sub
cmp
rorl
xchg
mov
loopne
popf
cmc
jge
fnsave
fucomip
pusha
cld
movsb
cs
mov
lret
push
jle
push
adcb
jmp
push
adc
pusha
jo
testb
mov
icebp
es
jg
aad
sub
push
loopne
in
mov
push
sarl
mov
push
enter
sbb
cmp
sti
add
ret
je
or
lock
adc
nop
outsb
nop
pop
pusha
outsl
pop
or
outsb
aaa
in
dec
pusha
call
aas
mov
jbe
add
sahf
mov
test
cmp
jmp
jbe
rcr
adc
fwait
mov
clc
lock
mov
sub
and
cwtl
fs
test
sbb
lock
sub
mulb
insb
in
dec
or
mov
push
mov
je
xlat
jbe
inc
mov
xchg
negb
sub
xor
add
mov
jecxz
aad
call
shlb
jne
ret
lea
scas
in
pop
sahf
leave
les
cmpb
mov
adc
out
lds
cld
and
adc
mov
add
shll
roll
rcrb
repnz
aas
insl
sub
add
adc
and
inc
xchg
mov
jmp
mov
adc
sti
lret
pop
jge
pop
pop
fildll
cld
push
enter
mov
ror
loope
xchg
pusha
add
daa
adc
stos
das
and
sub
lret
pop
jl
scas
inc
test
jmp
imul
aaa
aam
pop
rclb
cmp
fwait
sub
bnd
push
push
mov
pop
adc
dec
es
fs
outsl
adc
pop
jno
and
cmp
mov
sub
pop
and
sub
sub
stc
xchg
jecxz
inc
in
ret
ret
mov
fisubs
mov
add
movb
mov
js
push
add
xchg
mov
jp
cld
shl
inc
js
sbb
xor
or
sub
pop
dec
mov
mov
sub
fnstsw
adc
jp
push
xchg
andl
addr16
pop
pop
sub
or
jns
xor
pop
or
imul
call
mov
pop
out
mov
pop
sarb
lcall
lret
movsb
call
in
jno
sbb
inc
jg
inc
orl
push
psadbw
fnstsw
mov
or
fdivs
mov
out
pop
xchg
jle
sbb
bound
dec
movsb
mov
xchg
int
inc
fisubs
fsubrs
dec
dec
push
jbe
or
cmpsl
push
insl
push
dec
sub
loopne
jns
fcom
mov
out
push
ljmp
ret
imul
icebp
mov
dec
test
push
int3
fildll
xchg
out
icebp
test
or
jl
cmpsb
xchg
jge
inc
push
sar
mov
movsb
inc
xor
xchg
scas
add
js
daa
add
stos
out
pop
dec
xchg
fwait
sti
and
cmp
xchg
sub
and
aad
mov
out
cwtl
adc
push
negb
push
in
rol
je
pop
imul
mov
mov
clc
fcomi
cs
pusha
rolb
fdivl
pop
jbe
shll
stos
sbb
dec
push
hlt
mov
fcomp
int
pop
mov
call
dec
and
out
out
in
mov
pop
pop
fisttpl
cld
adc
imul
mov
mov
lods
jb
into
jo
gs
rorb
repnz
cmp
fstpt
ljmp
inc
fs
and
hlt
out
pop
mov
lods
cld
mov
mov
ljmp
fstps
into
int
xor
dec
pop
in
sub
and
stc
pop
mov
cmc
xor
jns
pop
and
popf
clc
dec
inc
push
lods
mov
test
ljmp
movsb
sbb
test
and
pop
decl
add
imul
adc
scas
pop
daa
cwtl
jle
push
in
iret
mov
add
test
shl
bound
int
into
mov
dec
push
cwtl
adc
bound
sub
pop
adc
push
imul
add
jae
mov
mov
imul
xorb
int
popa
dec
mov
aaa
lret
pop
outsb
dec
repz
mov
repnz
xchg
xchg
inc
jne
sbb
adc
aaa
lret
add
add
fisubl
pop
bound
push
mov
ret
fbstp
loope
or
adc
bound
push
dec
stc
cmp
or
cmp
mov
stos
cs
js
jnp
cmp
arpl
mov
faddl
shr
mov
or
mov
fdivs
sub
out
lods
pop
push
or
jg
jmp
xchg
pop
repz
aas
mov
inc
mov
lods
xor
cmp
cmc
jle
jns
subl
adc
sbb
mov
pushf
cmp
jns
jno
scas
mov
negl
xorb
lret
test
mov
dec
jnp
pop
xor
pop
stc
gs
fidivrs
mov
sub
mov
shlb
les
pop
inc
add
sbb
mov
scas
and
jne
cld
fidivs
mov
in
aas
lock
push
pop
mov
nop
movsb
xchg
mov
sbb
mov
sti
stos
flds
sub
xchg
xchg
leave
lock
cmp
das
popa
clc
mov
add
leave
jae
in
rcll
fldl
pop
sbb
or
out
jo
lods
jge
xorb
cwtl
ret
insl
insl
jl
dec
sub
and
add
pop
arpl
push
mov
jmp
pop
and
add
test
xchg
test
sbb
movsl
sbb
dec
adc
add
dec
cmp
or
jbe
sub
cwtl
int3
xchg
out
mov
xor
int
int
fs
idiv
and
in
fimuls
std
nop
cmpsl
push
xchg
pop
rcl
jno
stos
stc
pushf
imul
cmp
or
xchg
fsts
insl
sbb
mov
sahf
push
ja
cli
mov
fiadds
movsb
lock
mov
nop
pop
cmp
push
sub
repz
pop
rorl
scas
adc
movsb
sub
jnp
dec
xchg
sbb
xlat
into
jecxz
sbb
cmp
xor
mov
shlb
dec
in
popf
fisubl
int
xchg
into
inc
pop
lea
aad
adc
test
hlt
rcll
add
pmaddwd
iret
jp
mov
cmp
lods
xchg
adc
mov
and
xor
int3
xchg
sub
call
or
inc
sbb
inc
xchg
inc
test
mov
jge
out
xchg
shl
jp
dec
sub
cmp
dec
shrl
outsb
cmc
pop
inc
aam
mov
mov
add
sbbb
sarb
xchg
loopne
mov
enter
mul
push
or
es
sti
adc
int3
idivl
jae
add
aas
aad
pushf
mov
sub
push
fwait
lea
std
or
dec
cmc
das
cmp
mov
mov
clc
jbe
fwait
bound
sub
stos
test
sub
push
pop
out
sub
mov
mov
ja
xchg
jno
bound
pop
mov
jno
cmpsl
push
sar
dec
mov
in
and
mov
pop
lods
mov
cwtl
cli
subb
cmp
loop
jl
inc
jg
repz
cmp
and
nop
dec
mov
loope
xor
aaa
mov
ret
in
imul
or
jno
cmpsb
popa
mov
xchg
pop
xchg
subb
lret
sub
not
stos
sub
in
dec
iret
icebp
lods
ret
jns
adc
xchg
data16
xor
arpl
sti
dec
adc
int3
stos
push
cmc
dec
sahf
js
mov
out
ret
notl
fdivr
sbb
addr16
add
test
daa
adc
in
es
jbe
cmp
sarl
ss
jge
inc
mov
or
enter
test
mov
mov
and
fcomps
je
and
or
sub
mov
cmpsb
into
fwait
in
or
lret
push
imul
mov
lret
sbb
mov
pusha
test
adc
sub
into
outsl
cmp
inc
pop
add
sub
imul
inc
mov
or
mov
and
xchg
mov
leave
jl,pt
imul
sub
insb
pushl
push
out
mov
popl
test
cli
out
sub
test
dec
pop
sbb
pop
scas
or
xor
out
inc
out
test
jnp
mov
cwtl
lret
cmp
stos
and
enter
clc
nop
mov
aam
iret
mov
rcr
fisubs
out
inc
es
cwtl
lcall
jmp
leave
dec
insb
xor
mov
lods
sub
mov
cmpsb
mov
repz
fdivr
push
mov
iret
nop
jge
mov
sti
test
jg
mov
xchg
adcb
mov
and
sbbb
inc
push
rcrb
dec
std
loop
cmpsl
lods
inc
lods
js
sub
cmc
and
pop
inc
dec
mov
cld
mov
iret
pop
mov
sbb
or
fsub
popa
xor
clc
cli
movsl
in
sbb
stos
fists
mov
addl
fsts
inc
out
cmp
inc
push
daa
fbstp
test
dec
popa
movsl
cmp
inc
sar
xor
sbb
imul
lret
outsb
cmp
arpl
test
mov
mov
mov
xor
cmp
js
fisubrs
aad
jmp
xchg
xorb
mov
sub
outsl
loope
jge
mov
lock
or
shlb
xlat
fists
ja
cmc
fcomip
inc
dec
dec
filds
lret
popa
daa
mov
or
inc
jmp
inc
ficoms
or
std
xor
stc
or
aas
addr16
xor
sub
in
repz
nop
adc
add
fyl2x
xchg
jg
lahf
push
sbb
fs
pusha
scas
into
mov
nop
xchg
dec
sbb
jno
mov
fbld
lock
scas
fst
es
in
sbb
gs
pushf
mov
pop
mov
mov
sbb
xchg
clc
fldt
lea
inc
test
mov
sub
cmp
add
cs
dec
cli
mov
lods
push
fdecstp
test
pop
stc
mov
dec
mov
and
pop
sbb
jle
mov
sub
xor
loopne
and
jecxz
in
ja
repz
xor
inc
mov
nop
or
out
and
gs
pusha
sti
inc
jmp
in
int
in
shl
out
loopne
fnstenv
push
push
ja
daa
jae
aam
push
cmp
push
adc
sbb
dec
imul
sbb
bound
notl
xchg
xor
mov
dec
cmp
mov
cltd
mov
in
xchg
lock
fidivrs
lock
inc
mov
or
inc
inc
add
mov
test
popa
mov
sbb
push
fidivs
ljmp
sbb
mov
xchg
mov
cli
sbbl
mov
sti
incl
cmpsl
jnp
inc
ljmp
inc
mov
jne
into
mov
sub
clc
xchg
xor
cltd
add
fmul
fwait
dec
jns
in
in
outsl
sarb
dec
jmp
dec
adc
cli
cli
fisttps
and
test
fs
push
mov
add
clc
std
cvtps2pi
xor
xor
nop
scas
arpl
adc
xor
mov
inc
xor
lds
jbe
lods
and
faddl
dec
sbb
fbld
ds
das
fwait
data16
aam
xchg
mov
js
movsl
int3
jp
lret
jo
fwait
outsl
icebp
out
jns
adc
sbb
cmpsl
xchg
add
jae
mov
stc
cld
outsb
stc
lock
push
xchg
lret
cld
fxam
sbb
xchg
cwtl
push
mov
mov
js
ds
movsb
movsl
hlt
lods
leave
mov
sub
bound
scas
pushf
and
sub
push
sub
outsb
aaa
es
ds
sub
mov
xchg
fldenv
test
push
gs
pop
sbb
inc
or
fidivrs
xchg
dec
shl
mov
in
jle
jno
int
cs
mov
leave
out
pop
mov
fxch
hlt
add
pop
rorb
cwtl
adc
inc
cs
pop
jle
mov
push
out
adc
adc
aad
cld
das
fdivr
add
push
repnz
fadd
lods
test
pop
sub
and
sbb
cmp
gs
out
inc
lret
cld
fs
and
xor
in
fistpl
jne
sub
jge
jno
loop
mov
lret
cli
pop
pop
sbb
cld
xchg
daa
dec
xor
shrb
mov
push
add
xchg
sti
jns
inc
jle
icebp
in
mov
sub
inc
aaa
mov
sbb
dec
adc
into
jne
dec
outsl
jne
movsb
add
dec
outsb
xor
mov
lcall
decl
gs
imul
adc
or
clc
popf
jp
jg
mov
fadds
sub
leave
sub
call
jmp
dec
dec
dec
xchg
and
push
rclb
and
adc
inc
jmp
xor
push
mov
aaa
je
pop
lock
pushf
pop
add
dec
mov
cmpsb
and
pop
stos
test
pop
mov
xchg
pop
enter
lahf
test
iret
test
xor
not
push
mov
std
mov
out
dec
loop
dec
and
int
das
neg
push
pop
cmp
ds
scas
sub
inc
dec
pop
shl
pop
mov
sar
mov
mov
pop
dec
ret
cs
scas
cli
icebp
mov
mov
fnsave
inc
movsl
pushf
sbb
pop
xor
ret
call
and
or
sbb
gs
adc
adc
lods
outsb
or
dec
imul
add
and
pusha
pop
push
xchg
movsb
gs
inc
iret
mov
xor
cs
push
mov
aaa
insb
imul
mov
and
jae
xchg
movsb
out
ret
jb
pop
mov
or
dec
aaa
addl
mov
mov
aam
xchg
dec
fnstcw
enter
mov
mov
fcmovne
jmp
popa
fistpl
mov
or
nop
popa
in
shlb
mov
inc
mov
xor
mov
sti
push
push
add
jge
mov
jns
cmp
push
test
imul
xchg
aaa
into
std
adc
fucomp
and
dec
pop
pop
cmpsl
xchg
cmp
inc
pop
shrl
clc
repnz
mov
sbbl
xlat
in
inc
and
cli
mov
fcoms
push
out
xchg
jnp
jb
lods
in
imul
outsb
xchg
movsl
scas
add
add
xor
test
push
movsb
popf
cmc
ficomps
and
fimull
or
cmp
inc
mov
lock
fidivrl
insl
jo
lret
sub
jns
cmpsb
fcompp
adcl
mov
adc
inc
ds
popf
push
in
dec
stos
sub
sbb
xor
add
fimull
pop
lahf
mov
dec
imul
out
out
mov
mov
xor
pusha
insb
cmp
xchg
pop
sar
in
out
adc
mov
inc
and
loopne
lahf
adc
cmp
pop
sbb
adcl
lock
pop
xchg
int
pushl
pop
test
cmp
cli
jbe
imul
movsl
icebp
adc
loope
jne
in
movsl
and
cli
xorb
cld
mov
adc
mov
push
idivl
mov
lea
lea
pusha
int3
in
push
jo
cmc
stos
add
jmp
lods
add
or
call
adc
sbb
cmp
xchg
arpl
dec
push
repnz
outsb
fnstcw
jne
xchg
fwait
xchg
jle
ja
lret
push
jno
arpl
or
outsl
cmp
imul
movsl
mov
scas
dec
and
jge
stos
nop
cltd
adc
lcall
outsl
lods
push
xchg
clc
push
lret
jae
pop
ja
mov
pop
movsl
test
pop
xchg
mov
in
dec
pop
pop
dec
test
fstps
pop
lods
iret
stos
pop
jmp
insb
insb
fidivrs
enter
xchg
mov
cmp
hlt
dec
rcrl
sub
inc
mov
mov
xor
mov
cmp
dec
ucomiss
jbe
jne
pop
cmp
add
in
or
aas
es
mov
popa
fstps
push
pushf
push
push
mov
inc
push
and
xor
ffreep
mov
jmp
mov
repnz
xchg
sbbl
or
lock
clc
cli
dec
cmpsb
jg
inc
out
cltd
stos
push
mov
fdivr
nop
loop
add
stos
fmul
sti
adc
sar
sbb
clc
sbb
scas
mov
mov
hlt
mov
aaa
int3
sbb
jmp
cmpsb
sub
dec
out
mov
or
rclb
xchg
mov
mov
in
sbb
lock
inc
jo
inc
int
push
sti
xchg
rolb
sbb
cwtl
xor
lock
aad
pop
mov
sub
andl
les
mov
popa
mov
call
jo
lds
and
jbe
sub
fs
xor
jno
inc
dec
cmpsl
sbb
push
ja
lods
xor
insb
mov
add
sbb
push
inc
mov
loopne
adc
and
stc
dec
pop
sar
push
pop
jno
pop
test
dec
pop
stc
cs
inc
and
inc
xchg
push
sbb
mov
cmpsb
scas
jno
pop
fwait
xchg
mov
shrl
in
das
sbb
jno
clc
stos
sahf
push
push
out
fwait
outsb
hlt
pop
testb
push
push
and
and
aas
inc
jne
ret
dec
outsb
imul
pop
inc
adc
adc
adc
ret
xor
addl
jp
out
mov
negb
push
inc
cmp
mov
loopne
int3
adc
cmpb
lahf
mov
addr16
push
addl
adc
jge
mov
lcall
out
test
pop
sbb
mov
jae
daa
mov
addr16
sbb
add
cli
xchg
sbb
enter
stos
dec
rolb
fs
roll
jno
imul
stc
sbb
mov
imul
lock
adc
mov
data16
loope
test
xchg
fisttpl
test
loop
pop
popl
int3
pushf
outsb
insb
dec
mov
cltd
scas
ror
mov
in
cmc
sbb
fwait
dec
jno
scas
fldcw
rcll
push
int3
cltd
in
xchg
jo
dec
sub
mov
les
adc
les
cmp
sub
sub
sub
leave
mov
in
push
push
shll
fwait
mov
push
push
inc
daa
stos
icebp
xor
mov
div
stos
movsl
ficoms
adc
mov
mov
or
popa
nop
sahf
lahf
cmp
aad
popf
jnp
cmp
sbb
push
jnp
mov
jae
iret
inc
pop
mov
and
loope
pop
jl
pop
pop
lcall
rcrl
dec
mov
inc
scas
mov
shrb
or
inc
insb
add
xchg
jmp
stc
mov
sub
pop
addb
jae
stos
test
xchg
add
sbb
xchg
push
lret
dec
in
cmpsl
inc
mov
xor
push
xchg
clc
jno
sbb
mov
mov
loopew
jae
push
loope
jl
sbbl
mov
mov
push
push
pop
test
and
jecxz
sahf
add
jno
jl
das
cmpsb
in
mov
mov
lods
mov
xchg
lock
arpl
lods
dec
add
adc
stos
mov
mov
push
jno
icebp
fistps
xchg
push
dec
inc
and
insb
imul
arpl
lahf
inc
jecxz
pop
cmp
mov
add
mov
js
mov
movsl
stos
sti
pop
and
orl
jp
sub
mov
push
cmc
pop
sbb
or
icebp
stos
mov
jae
mov
fdivs
repz
add
addr16
out
push
mov
fidivs
cmp
pop
testl
adc
stos
cmpsb
fstpt
cmpsl
data16
mov
leave
gs
adc
negl
add
push
lock
cs
js
pop
arpl
dec
mov
jbe
mov
iret
fisubs
out
push
mov
cmp
rorl
lahf
andb
testl
repz
fisubs
iret
std
test
adc
pop
cmp
xlat
add
push
or
leave
sahf
push
dec
push
mov
movsb
out
xor
std
inc
jne
fistpll
sbb
outsl
arpl
mov
ret
js
jle
in
sub
jecxz
rclb
dec
sbb
push
lret
out
loopne
hlt
xor
dec
fsts
fstpt
aam
mov
nop
jmp
or
xlat
mov
nop
xchg
ljmp
sbb
push
xor
pop
jmp
lret
mov
dec
pop
jle
push
jbe
andb
lea
xor
jmp
push
test
std
xchg
outsb
outsl
lret
cmp
cltd
daa
sti
mov
aas
jae
pushf
push
mov
es
xchg
loop
cli
push
lcall
dec
mov
push
sbb
adc
dec
inc
sbb
movsb
adc
push
mov
jl
mov
sub
cmp
fadd
inc
setne
cmp
insb
das
fidivl
fstl
mov
jmp
out
int
icebp
orb
outsl
pop
lret
pop
out
mov
imul
jnp
mov
or
pop
sbb
xchg
fst
hlt
out
mov
or
pop
add
frstor
push
into
or
jmp
mov
adc
sbb
inc
cmpsb
ds
xchg
dec
adc
mov
call
pop
je
jbe
repnz
adc
and
and
aas
ljmp
loop
inc
jle
and
sbbl
movsl
jbe
xchg
pop
test
xor
faddp
pop
das
js
or
leave
loope
push
and
in
hlt
mov
movsl
xchg
rep
jb
inc
push
cmp
push
rcpps
lret
fsts
mov
add
mov
aam
xchg
mov
rorl
push
and
mov
lretw
xor
test
cli
fs
gs
cmp
jecxz
outsb
into
xchg
dec
add
stc
adc
xchg
xlat
in
lock
pop
push
lret
dec
jmp
cmp
pushf
add
xchg
sub
cmpsb
into
xchg
test
mov
out
sarl
inc
in
pop
aas
xchg
dec
outsl
shr
ja
test
add
jmp
pop
std
adc
fistl
jb
lahf
inc
in
lret
sarl
rorb
xchg
popa
jecxz
adc
pop
mov
cli
enter
jmp
jne
sbb
loop
mov
mov
addr16
lock
jae
push
xchg
sbb
dec
xchg
mov
sub
test
adc
faddl
inc
xor
xchg
mov
or
ss
popf
lret
scas
mov
sbb
cmp
adc
cmc
sarb
xor
mov
adc
arpl
movsb
daa
add
cmp
scas
int
pop
sub
jno
pop
mov
jnp
std
pop
imul
xlat
jmp
and
leave
mov
das
mov
jecxz
pop
mov
addr16
mov
mov
pusha
mov
dec
mov
mov
sub
mov
push
hlt
sbb
push
xchg
movsb
imul
add
fs
sbb
pop
or
dec
repnz
jl
repnz
pop
add
insl
sbb
rclb
mov
xchg
adc
cmp
je
push
repz
popf
inc
sub
sbb
inc
ret
fsubrl
repz
or
mov
ljmp
push
push
pushf
lods
lds
inc
mov
mov
push
ds
jmp
lds
loope
scas
mov
dec
and
stos
lock
pop
and
mov
aad
aam
cmp
push
shr
bound
push
arpl
cmp
sub
xchg
inc
pop
icebp
movsl
fldl2e
out
iret
incl
cmpsl
jbe
jge
adc
jns
cmp
cmp
je
pop
fs
jg
test
jbe
bound
jmp
outsb
arpl
push
aas
shl
xchg
ficoms
ss
jp
int
fcoms
push
xchg
sbb
in
sub
popa
jne
sub
jbe
adc
inc
adc
mov
dec
and
sbb
sahf
jg
sub
sti
mov
in
sbb
and
xor
dec
test
and
dec
mov
pop
sti
mov
sahf
enter
or
movaps
out
inc
popf
cwtl
out
rcr
shlb
gs
fwait
in
and
mov
loop
xor
mov
in
jge
add
jge
sahf
push
decb
fmulp
xor
loopne
in
test
sub
das
repnz
dec
cmpsl
in
in
push
jmp
mov
jb
sub
stos
out
lret
jmp
xor
or
sub
pop
dec
cmp
adc
adc
aas
cmp
pop
inc
sbb
je
and
mov
inc
sbb
mov
cmp
add
loop
jnp
xchg
in
sti
cmpsb
push
in
mov
dec
popa
xchg
jmp
scas
dec
push
movsl
or
mov
int3
in
mov
xor
ds
and
mov
inc
aaa
mov
cmp
mov
pushf
adc
jno
lock
mov
shrl
ret
mov
lcall
push
lret
add
je
mov
fcmovnbe
inc
add
mov
inc
mov
jle
ljmp
and
mulb
stos
rorl
inc
mov
or
xchg
imulb
jae
test
std
loopne
cmp
pop
fwait
test
cs
sub
fistpl
xchg
and
and
test
pop
push
pop
or
cli
mov
stc
daa
daa
cli
in
decb
js
ljmp
aad
dec
outsb
stos
jge
or
sbb
hlt
pop
in
xchg
das
sbb
std
mov
test
fisubrs
repz
stc
pop
insl
scas
int
xor
jp
sti
outsb
mov
fcoms
pop
jmp
xchg
or
dec
mov
pop
imul
lret
mov
push
fldlg2
and
imul
jne
mov
out
int
and
mov
mov
push
inc
icebp
mov
or
cmp
mov
mov
xor
gs
test
push
cwtl
mov
sbb
or
frstor
push
rol
mov
lret
sbb
les
sahf
push
imul
pop
stc
cs
jp
loope
adc
adc
mov
sbb
xchg
xchg
cmp
testb
lahf
add
cmp
pop
mulb
popa
jno
es
test
mov
lret
dec
subb
aam
movsb
aad
adc
sub
and
stc
aas
inc
xchg
mov
pop
jg
sub
inc
cmc
add
sub
addr16
jmp
insl
jns
dec
shl
loopne
aaa
push
mov
xchg
shlb
out
in
pop
repz
lds
xchg
ss
jnp
adc
mov
inc
dec
aaa
lods
dec
mov
adc
sbb
lock
mov
int3
js
packuswb
lods
lahf
movsl
addr16
pop
mov
pop
lock
lds
sub
xchg
outsl
jmp
aam
aaa
inc
inc
fdivs
cltd
gs
push
mov
mov
dec
cmp
sbb
sub
out
dec
mov
inc
ja
jnp
fistps
cmp
mov
pop
sbb
lods
popl
inc
addb
ret
mov
ja
and
inc
sbb
sbb
xchg
jecxz
and
sub
bound
xor
outsb
std
pop
mov
cld
insb
and
pop
out
jns
call
std
fsubrp
shlb
push
xor
decl
jecxz
fcompl
jp
push
add
into
into
mov
aad
mov
add
sub
ffreep
clc
xor
es
flds
test
fildl
push
fsubl
or
sub
int3
xor
cld
aad
xor
or
call
xchg
jmp
mov
imul
leave
sbb
mov
lret
scas
mov
enter
xchg
cmp
and
aaa
sbb
and
dec
daa
dec
push
movsl
ja
out
mov
loop
scas
or
lcall
das
push
and
xchg
push
xchg
std
dec
je
and
movsl
xchg
pop
or
mov
xchg
repnz
and
out
push
in
loopne
mov
jecxz
cmc
addr16
sahf
and
sar
cmpl
push
mov
pop
loopne
mov
movl
out
xorl
test
mov
and
or
push
add
add
dec
inc
leave
dec
push
mov
js
adc
push
cli
sbb
fsubl
xor
stos
shr
and
mov
js
leave
push
sahf
cs
outsb
pusha
into
cmp
add
jle
scas
mov
lahf
mov
addr16
and
lcall
ret
add
cmp
push
mov
jg
sub
cmp
fistl
ret
sbb
and
mov
pop
jb
jge
popa
insl
xchg
repz
leave
addr16
jbe
adc
adc
ss
mov
xchg
xlat
mov
add
jl
aam
pop
ss
arpl
leave
ss
cltd
rcr
adc
arpl
or
inc
adc
ret
or
pop
mov
mov
mov
fcos
jp
sbb
cmc
lret
inc
in
or
aam
sti
mov
push
outsl
dec
fcomps
jg
sbb
pop
jmp
adc
out
dec
push
call
stos
or
or
cwtl
inc
daa
hlt
cltd
in
xorl
sub
dec
mov
push
dec
adc
shr
inc
inc
xchg
or
ret
push
xor
or
add
jnp
int3
pop
jbe
rclb
std
cltd
push
pop
xor
pop
mov
out
icebp
cmp
dec
add
lds
rolb
add
iret
inc
xchg
hlt
test
inc
mov
imul
and
fmuls
jge
and
jnp
fcoms
insl
mov
jg
les
ja
and
or
in
lods
stos
pop
fucomp
lret
jae
cld
je
mov
jmp
mov
sbb
mov
in
ss
lret
movsb
sub
pop
and
popa
add
es
clc
jecxz
cmpsl
es
mov
aad
push
cld
and
movsb
adc
fisttpl
daa
pop
jecxz
add
push
sub
or
push
sub
inc
call
jns
dec
inc
nop
xchg
enter
xchg
jo
xor
in
xchg
testl
stc
dec
push
lahf
fs
cmp
jle
jp
leave
ret
enter
cmp
mov
xchg
ror
xor
lcall
mov
in
sub
and
stos
addl
cmp
add
lcall
fidivrl
ljmp
nop
aaa
cltd
cli
add
pandn
jl
mov
or
int
stc
pushf
jle
shr
enter
or
jge
in
addr16
mov
mov
jb
push
sbb
push
jbe
jge
mov
inc
pop
cmp
adc
jmp
stos
jns
in
mov
rcr
jp
push
add
xlat
imul
mov
jmp
nop
inc
int3
call
mov
jmp
outsb
repz
sahf
jbe
loop
xchg
xchg
std
sub
ja
addl
test
repz
inc
add
mov
addr16
push
aas
dec
js
push
bound
sub
inc
idivl
fcompl
pop
insl
popa
xorb
std
mov
mov
popf
mov
arpl
dec
fs
adc
imul
not
mov
dec
pop
cmp
lahf
rcll
pop
stos
push
jno
inc
aad
ss
aaa
nop
push
aas
or
xchg
mov
aas
clc
out
fldt
xor
clc
mov
adc
xlat
loopne
cld
outsl
push
inc
mov
mov
cmp
repnz
fnstenv
fs
popf
mov
enter
addr16
aad
aas
int3
push
pop
sub
outsb
fiadds
cmp
mov
repz
xchg
adc
dec
adc
mov
scas
inc
outsl
ret
lds
mov
pop
jo
or
lahf
pusha
jns
adcl
cmc
test
jecxz
int3
cmp
jp
add
push
js
or
jl
add
int
mulb
mov
movsl
psrld
mov
fsts
cli
mov
inc
pop
bndstx
mov
sbb
inc
xchg
das
cmpl
push
xor
es
lods
stos
adc
mov
daa
js
cmp
xor
cmp
test
adc
mov
stos
movsb
shrl
test
jnp
cwtl
dec
pop
loop
loop
mov
lahf
loop
and
jle
mov
hlt
lods
add
stos
lds
movsl
daa
ret
outsb
pop
std
cmc
inc
outsb
into
movsb
inc
outsl
sbb
popf
icebp
xlat
cld
test
pusha
add
dec
addl
dec
xor
pusha
xchg
jg
mov
loop
lea
lds
pop
sub
add
xchg
cmpsb
ficompl
lret
pop
nop
cmpsl
add
inc
shll
stc
daa
lock
cmp
and
mov
mov
mov
xor
repz
movsl
jg
es
loopne
add
ljmp
enter
inc
mov
mov
dec
xor
fdivp
mov
mov
push
sub
mov
cmpb
arpl
loope
jnp
jnp
std
sahf
fldln2
lahf
mov
iret
insb
int
cmp
xor
xor
jnp
out
mov
mov
rolb
xor
push
outsl
cmp
mov
mov
jnp
enter
subl
mov
int3
pop
idivl
lcall
mov
jno
bound
cmp
pop
int
pop
push
lahf
test
mov
je
sub
fidivs
push
test
lret
popf
imul
call
jg
lods
sub
and
mov
jae
xchg
insb
idiv
test
pop
or
std
fsubrp
xchg
imul
sub
jno
js
aaa
inc
or
test
mov
ret
cmp
pop
ss
mov
sub
dec
in
stc
daa
jle
cltd
push
fcompl
mov
sbb
adc
pushf
cmc
mov
jg
lods
xlat
out
aad
jmp
out
push
xlat
je
mov
ror
outsl
clc
ret
pop
pop
sub
xchg
ds
and
fdivrl
sbb
int
mov
or
jb
sbb
sbb
data16
rclb
sahf
insb
push
popa
out
xor
adcl
jnp
test
outsl
ja
mov
mov
xchg
pushf
mov
adc
sbb
push
jbe
loopne
cld
cmp
lret
dec
xchg
jae
xchg
pop
sbb
mov
adc
sbb
insb
sub
xchg
cmpsb
push
mov
cld
push
gs
iret
xor
enter
idivl
ss
push
outsl
std
jb
je
jbe
popa
cmc
and
ljmp
pop
pop
mov
push
inc
lret
jecxz,pn
xor
aas
and
fmulp
and
outsl
cmpsb
iret
lea
loop
hlt
push
imul
add
sahf
sbb
aaa
test
mov
ja
and
insl
das
lods
xchg
fcmovu
aad
inc
mov
popf
mov
mov
aad
lds
mov
ss
jno
movsl
sub
pop
inc
stos
out
pop
test
dec
stos
push
test
xchg
xchg
repz
les
dec
add
fisubl
lea
xchg
orb
mov
cmp
mov
aas
leave
jmp
sarb
and
sbb
rolb
pop
jp
std
fdivr
faddl
sub
leave
xor
mov
arpl
push
inc
and
es
ja
sbbl
dec
mov
xchg
jbe,pn
add
rcll
or
xor
aaa
jl
and
mov
pop
push
dec
fldcw
push
sahf
sub
xchg
test
dec
add
mov
sub
mov
ds
test
flds
mov
cmp
adc
rorl
cmp
cmp
insl
cwtl
stos
test
js
imul
cmp
xchg
mov
sahf
fnsave
and
sarb
cmp
cltd
cmp
hlt
xlat
aas
sub
add
cltd
pop
sub
arpl
imul
loopne
mov
ret
push
adc
jmp
lods
mov
inc
hlt
loop
adc
xchg
and
movsb
adc
das
push
cmc
out
mov
cmp
xorb
xchg
lea
pop
cs
insb
sub
dec
push
push
xchg
mov
push
insl
cwtl
adc
adc
cmc
arpl
cmpsb
fisubrl
aam
arpl
xchg
xchg
daa
cmpsl
cmp
movsb
andb
sbb
mov
jmp
mov
das
add
or
in
dec
in
lahf
pop
ficomps
out
push
loopne
xchg
sahf
sbb
mov
sbb
pop
in
arpl
cwtl
fwait
adc
cmp
scas
ret
push
hlt
pop
inc
mov
test
cmpsb
test
test
push
lea
push
dec
in
fcomi
sahf
add
jne
enter
inc
jbe
stc
shlb
ret
fwait
push
outsl
xor
mov
push
inc
pop
sti
vpunpckhbw
pop
fcomps
pop
shrl
repnz
lds
cmc
jle
cmp
adc
int3
popa
aad
and
pop
pop
rcrb
inc
mov
jmp
int3
mov
push
mov
push
call
out
divl
mov
mov
mov
out
jge
mov
jmp
inc
add
mov
mov
stos
cmp
int
aad
in
mov
sti
jecxz
pop
repnz
xchg
dec
arpl
add
js
inc
mov
jno
lret
clc
xor
jnp
sbb
mov
sbb
and
sub
xchg
fidivs
xor
inc
test
mov
mov
jns
cli
loop
mov
pop
out
sub
inc
mov
addr16
sub
scas
xchg
icebp
lret
adc
test
je
sbb
repz
adc
sbb
jbe
ficoms
push
leave
rol
outsb
fisttpll
mov
movsl
jge
cli
push
and
xor
mov
sub
fnstenv
in
inc
cld
mov
push
shlb
inc
sub
lret
data16
dec
ds
popa
push
add
negl
jne
push
adc
test
sub
mov
pop
dec
enter
add
jae
sub
imul
jg
stc
out
int3
push
fdivrs
add
scas
dec
lods
ljmp
and
sahf
test
jne
cmp
neg
test
in
jnp
cmp
cwtl
mov
outsb
mov
inc
fstps
push
jae
and
sahf
or
and
push
inc
dec
jle
repz
shr
mov
add
test
mov
jno
cmp
les
ljmp
ja
mov
filds
cld
outsl
cld
lds
sbb
insl
fwait
lods
and
and
aas
adc
pushf
jg
add
jmp
insb
loope
loopne
push
movsb
es
ffreep
jns
stc
fnstenv
inc
xchg
jb
lcall
xlat
popa
sarb
scas
pushf
daa
pop
stos
mov
ret
inc
jmp
or
cwtl
mov
jmp
jne
mov
cmpl
inc
test
push
lds
lahf
ja
inc
inc
or
jno
stc
jo
dec
icebp
in
icebp
shlb
adc
add
add
cwtl
out
push
or
fdivp
lods
pop
pop
push
lcall
xchg
adc
pop
inc
int
mov
dec
sbb
or
out
std
push
pop
push
xor
push
imul
mull
into
mov
jp
adc
sub
mov
rorl
mov
dec
mov
ret
test
jl
jns
jp
mov
pushf
lret
add
shlb
lret
adc
xor
cmp
lcall
lcall
mov
aaa
mov
push
out
push
inc
inc
push
outsl
shl
icebp
int
sub
outsl
dec
mov
scas
rcll
iret
or
add
pushf
repz
pop
ljmp
sub
insl
add
pop
xor
cmp
pop
pop
pop
mov
call
stos
js
cs
jg
iret
cmpsb
test
lods
inc
or
mov
xlat
xchg
fists
cmp
mov
call
aam
mov
jecxz
daa
imul
sub
mov
jl
push
mov
add
cmp
push
out
sbbb
mov
xchg
cmpsb
shlb
mov
xchg
cld
fld
shl
jno
pop
sti
das
lock
pushl
test
mov
gs
sub
push
jns
testl
inc
mov
jecxz
insl
outsb
push
sti
inc
das
jp
sub
sub
pop
stc
imul
adc
lcall
jecxz
inc
out
and
es
lahf
cmp
insb
ljmp
movsb
mov
test
jecxz
xor
inc
testb
fisttpll
lret
mov
aaa
sbb
mov
lea
adc
inc
jae
xor
cld
sbb
mov
jnp
pop
scas
std
js
ficompl
sub
cmp
xor
fdivrl
inc
decl
xlat
ret
push
imul
jge
shll
nop
jl
js
test
lcall
mov
enter
pop
outsb
push
cmp
pop
mov
enter
or
into
adc
pop
xchg
scas
jb
push
insb
sarl
push
dec
mov
movsl
sub
adc
aaa
jnp
mov
in
aad
ljmp
inc
mov
add
lret
sbb
mov
add
or
jl
inc
sbb
lret
pop
push
jnp
jp
xchg
pop
cltd
mov
push
fsub
scas
cmp
mov
dec
shrb
add
adc
mov
std
cmpsl
sub
in
aam
daa
addr16
mov
addr16
out
add
pop
add
cmp
iret
lcall
aad
push
push
in
pop
int
xlat
ss
inc
iret
sbb
cmp
push
arpl
inc
inc
nop
es
sbb
mov
dec
mov
rolb
cli
sbb
cmpsl
adc
push
ret
test
shll
push
mov
jb
push
cmpsb
or
cmp
jle
scas
pop
xor
js
inc
mov
pop
sub
jl
mov
cwtl
outsb
lods
inc
dec
cmpsb
daa
inc
notb
sahf
dec
mov
mov
adc
enter
sub
lea
pushf
insb
jp
push
and
pop
cmp
cmp
dec
push
repnz
fidivl
cs
ja
lds
clc
faddl
xor
lret
cmp
test
xchg
pop
scas
lret
xchg
pushf
pop
jnp
popa
mov
int3
jge
add
mov
test
mov
jmp
js
pop
sbb
add
mov
lods
in
ficomps
cmc
push
sbb
push
mov
mov
sbb
jo
jbe
mov
cwtl
xchg
das
nop
xlat
fmuls
xor
sti
addb
xor
in
pop
scas
jle
outsl
jmp
jo
add
ror
ja
adc
stc
loop
ljmp
test
loope
fisubs
daa
loopne
xor
jbe
xor
jbe
push
pop
inc
shrl
mov
andl
loop
fidivs
jle
add
out
mov
and
pop
js
out
dec
adc
and
and
stos
int3
popf
aas
sti
xchg
paddb
mov
in
mov
xchg
js
push
daa
popf
aam
out
mov
jl
repz
or
roll
fisttpl
popa
jo
or
jl
fstl
lock
xchg
je
repz
fisttpll
aas
js
and
ficomps
mov
pop
stos
loope
hlt
cmpl
mov
sbb
sub
fcomi
addr16
dec
xlat
pop
jle
cmp
outsb
fmuls
and
out
xchg
mov
in
int
lds
and
dec
ret
sub
and
cmpsl
sti
mov
jae
dec
mov
mov
mov
xchg
mov
xchg
pop
jmp
mov
mov
ret
mov
mov
push
cld
dec
jmp
pop
pop
mov
in
add
pop
stos
daa
jne
or
outsl
mov
iret
fcomps
decb
lea
adcb
and
aad
scas
js
pop
or
ss
adcb
gs
push
mov
pop
call
hlt
in
mov
rorb
stos
ds
or
sbb
inc
and
cmp
lock
mov
daa
mov
clc
scas
mov
inc
cmpsb
cltd
aam
popa
or
adc
addb
subb
jge
cmp
mov
aaa
frstor
adc
lret
fnsave
xchg
pusha
mov
cmp
dec
pop
add
adc
jae
in
mov
pop
cwtl
xor
fnstcw
mov
and
test
cwtl
cmp
lcall
cmp
movsl
cli
inc
mov
je
jmp
pushl
or
outsb
loopne
cmp
lods
fs
jmp
int
repz
dec
inc
mov
push
mov
mov
les
fidivrl
and
xchg
shll
jae
stc
gs
mov
sbb
sti
cmp
dec
sub
mov
mov
imul
pop
xchg
inc
xchg
int3
inc
call
arpl
xchg
pop
sahf
xor
sub
jnp
and
ret
mov
mov
roll
lret
dec
test
je
sti
outsl
xchg
imul
aam
jge
push
xor
test
mov
arpl
ds
add
lcall
and
inc
xchg
sbbl
jle
push
cmpsb
call
scas
addb
das
cmp
sbb
sbb
les
stc
cmp
sti
push
inc
lahf
xchg
push
jmp
ror
push
out
outsb
jb
out
fldenv
addr16
mov
nop
int
xchg
xor
test
push
cwtl
scas
and
pop
loopne
push
cmp
lcall
dec
bound
push
pop
add
inc
pop
stos
ficompl
add
push
daa
mov
adcl
shrl
or
sub
and
inc
pusha
fucomp
into
repz
mov
das
aam
add
xchg
cmp
mov
imulb
cmp
fdivrs
lret
lcall
clc
in
sahf
repz
addr16
movsl
push
ds
lea
les
out
pop
push
mov
or
sub
mov
ficomps
outsl
xor
mov
mov
into
xchg
cmpsb
dec
jl
mov
jno
roll
hlt
xor
cmp
and
rcr
fisubl
cmovae
mov
adc
icebp
in
je
dec
ds
sbb
pop
sub
xor
or
movsl
pop
out
cmc
inc
push
mov
lods
subb
cld
out
imul
sahf
xchg
mov
or
ret
pop
mov
jb
pusha
or
stos
fimull
mov
shrb
mov
lcall
mov
lods
loop
cwtl
repnz
jns
arpl
inc
xorb
xchg
lcall
dec
sbb
dec
push
fisubl
out
pop
jno
cmp
push
call
push
mov
sbb
subl
jecxz
mov
out
es
imul
jno
push
jmp
call
lret
mov
cli
int
push
push
mov
pop
shlb
inc
insl
inc
add
xchg
pop
jg
xchg
testl
hlt
xor
sarl
xor
iret
fwait
in
inc
std
int
dec
out
or
sub
inc
jmp
ljmp
imul
sbb
jb
xchg
fstl
dec
fsubl
xchg
pop
scas
jmp
mov
outsb
xchg
xor
std
mov
inc
and
arpl
xchg
pop
fs
push
es
xor
hlt
dec
add
sub
subps
and
sti
cs
lret
ficoms
sbb
pop
mov
mov
outsl
shr
movsl
cmp
jecxz
lret
xor
mov
mov
fwait
data16
inc
pop
pop
sahf
mov
stos
test
cli
jg
stc
dec
shll
test
divb
das
scas
pop
fcomi
push
icebp
in
cmp
and
adc
sbb
in
push
fidivrs
icebp
imul
inc
cmp
mov
cmp
addr16
cmp
pop
mov
jbe
cltd
mov
aad
cmp
out
dec
pop
push
pop
sub
adc
lock
xor
not
inc
jnp
jge
add
ja
sbb
fwait
or
mov
mov
andb
push
aas
sub
and
movsl
sub
lcall
sbb
jl
insl
mov
js
nop
fbld
in
movsl
int3
in
sbb
lock
xor
jnp
cmp
es
out
js
pop
pop
mov
out
pop
pop
add
lahf
or
insb
pop
incb
ficoml
inc
cmpsl
and
jns
outsb
push
std
movsl
inc
xchg
pop
jmp
ss
cmp
outsl
lods
leave
filds
sbb
lock
xor
lret
push
jge
sbb
xchg
clc
pop
mov
jmp
mov
scas
push
pushf
cmp
push
or
mov
inc
sbb
pushf
mov
ss
push
out
xor
mov
jbe
lahf
lret
lds
lcall
pop
sbb
cmp
jns
sbb
cs
or
or
mov
idivl
scas
sbb
inc
mov
sub
sar
dec
hlt
scas
sbb
inc
mov
loope
pop
inc
adc
shll
jmp
call
jle
push
movsb
jns
inc
ret
addr16
dec
movsl
cmp
stos
out
add
mov
out
sbb
jo
dec
loope
or
pop
xor
loopne
dec
sub
jp
mov
cmp
in
fsubrl
clc
adc
lock
xchg
call
pop
cli
in
or
call
in
adc
scas
insb
cli
or
dec
mov
pop
data16
cmp
lcall
addr16
sbb
std
and
hlt
or
jns
in
cli
outsl
push
jnp
mov
push
inc
sbb
xchg
pmullw
jmp
aam
movl
pop
xchg
aas
xor
dec
inc
mov
repnz
xchg
das
repz
pop
mov
mov
loop
dec
sbb
mov
dec
roll
fwait
jge
fiaddl
xor
cs
dec
pushw
jg
cmpsl
test
lods
mov
and
mov
dec
lods
xor
push
ds
lret
in
fnstsw
lock
jl
daa
arpl
repz
adc
push
insb
stos
into
aam
imul
sbb
sub
fwait
aad
and
and
fcomps
jae
xchg
push
cmpsb
pop
in
pop
out
mov
lock
cld
cmp
in
mov
in
outsl
movsb
shl
add
es
sti
dec
jg
pop
xor
scas
dec
daa
sbb
push
pop
fwait
in
insb
std
ljmp
int3
roll
sub
lea
adc
pop
inc
xchg
iret
and
push
jb
sub
cmp
lods
mov
mov
or
cmp
jg
pop
inc
stos
idiv
mov
jmp
or
add
mov
or
notb
lret
pop
cltd
hlt
data16
inc
inc
cmp
imul
sub
cmp
mov
std
mov
addl
sbb
jno
jbe
jmp
and
pop
lret
icebp
dec
xlat
ljmp
pop
sbb
jno
cmp
out
je
frstor
in
imul
push
add
jae
gs
xchg
and
scas
sbbl
mov
fisttpll
mov
testb
fisttps
pushf
sub
in
push
jns
dec
addb
int3
movsb
adc
inc
pusha
scas
jp
cltd
icebp
ret
or
dec
lea
ret
outsb
xorl
icebp
lods
xchg
and
popf
mov
mov
cmp
xor
loopne
or
add
xor
lcall
inc
add
inc
and
cmpsb
ja
mov
cmp
dec
je
mov
or
rcrl
push
nop
iret
xor
outsl
add
outsl
rcll
xor
test
jl
mov
jnp
dec
xchg
pusha
inc
lret
lahf
scas
pop
movsb
push
xchg
or
mov
aam
loop
cmpsl
adc
les
dec
push
mov
jbe
jp
out
lock
jmp
filds
stc
xchg
add
rcll
inc
in
hlt
ja
movsl
cmp
sbb
push
push
in
xchg
in
push
imul
call
push
andps
lcall
mov
push
pop
sub
lods
loopne
add
mov
aas
test
negl
ja
pushf
fsubrl
push
in
sahf
add
cmc
es
xchg
unpcklps
mov
test
push
add
inc
jns
lods
push
fstpt
subb
pop
sahf
jne
in
out
mov
and
jo
xchg
test
and
jle
mov
or
sub
mov
mov
push
mov
xchg
jp
xor
adc
jp
xchg
out
mov
movsb
add
push
lds
in
mov
aaa
lods
repz
leave
xor
fldcw
lret
jb
xlat
pop
hlt
rol
pop
mov
jns
rcrl
push
push
cmp
mov
pop
jne
sub
add
jle
mov
xorb
orl
cltd
or
cmp
sub
lods
std
lret
test
xchg
cwtl
out
aad
mov
lds
sbb
sbb
cld
and
in
inc
jmp
daa
cmp
scas
jb
mov
out
dec
push
cmp
pop
call
js
jp
addr16
cmp
lods
ljmp
pop
data16
or
shrl
xchg
lds
outsl
insb
enter
jb
push
mov
adc
jp
xchg
xor
shll
mov
pop
pop
inc
cmc
dec
rcrl
dec
cmp
lock
shl
inc
mov
rclb
xchg
imul
out
test
add
inc
mov
stos
cmpsb
push
mov
fnsave
mov
aas
mov
orb
add
inc
mov
or
xchg
pop
in
bound
data16
dec
loop
pop
movsb
inc
pop
nop
xchg
aad
xlat
test
clc
out
in
mov
repnz
mov
jae
stos
stc
ja
imul
jno
mov
lret
jle
mov
adc
iret
repz
add
call
test
test
push
jae
mov
sub
mov
xor
out
push
mov
faddl
xchg
fidivl
xor
sub
mov
mov
jg
or
in
add
loopne
jle
das
gs
sbb
stc
jge
cmp
mov
scas
xor
pop
out
jge
hlt
lahf
loop
pop
aaa
inc
adc
or
dec
mov
mov
mov
adc
dec
mov
std
jnp
fstl
pop
out
popf
jl
aaa
mov
mov
or
outsl
xor
shlb
sub
dec
push
loopne
cld
dec
fistl
push
ficompl
mov
mov
add
ret
cmc
sub
scas
mov
mulb
scas
fstps
clc
loopne
stos
mov
cmp
and
loopne
jge
in
adcl
sti
or
lds
dec
and
jge
shlb
pusha
out
sti
in
shrb
pop
adc
add
push
loop
lret
mov
sarl
push
stos
add
arpl
xor
jg
add
adcb
ja
pop
jecxz
inc
inc
test
lret
inc
out
mov
push
imul
movsb
fisubs
xchg
dec
inc
inc
repz
mov
stc
adc
push
jne
xor
mov
xchg
fbstp
xchg
mov
jnp
out
dec
into
dec
sub
mov
loopne
xor
push
shl
test
jp
movsl
lock
std
xor
xchg
decb
mov
aad
call
ds
sahf
jmp
aam
and
xor
jbe
adc
enter
dec
xor
pushf
sub
mov
cli
inc
cmpsl
cmp
xchg
pop
add
or
xlat
xchg
inc
insb
cmpsl
scas
popa
lret
inc
lahf
testl
fldenv
pop
pop
mov
stc
sbb
mov
test
insb
or
inc
sbb
call
xchg
into
xor
mov
xchg
push
fnstenv
hlt
cwtl
jno
push
cmp
pop
ja
addr16
je
adc
jnp
dec
pop
xchg
cmp
dec
xor
test
hlt
add
mov
repz
and
and
std
test
sarb
mov
and
jp
and
fmuls
cli
js
xlat
sub
xchg
cmp
lock
fstpl
adc
mov
lea
hlt
in
add
aam
orb
inc
stos
rcll
scas
ds
stc
pop
idivb
data16
push
aaa
pop
push
hlt
in
and
and
subb
push
cmp
adc
push
add
lods
lahf
mov
mov
mov
mov
in
adc
popa
adc
sbb
and
push
ja
icebp
jmp
mov
xchg
loope
add
lret
mov
in
xchg
loop
push
dec
cmovbe
adc
cltd
mov
jecxz
mov
push
jae
sbb
cmc
cmp
cmpsl
mov
rorl
xchg
pop
fdivs
fucomp
or
pop
adc
xorl
cmp
outsl
mov
jp
sub
stos
push
mov
mov
jl
lods
adc
jne
out
or
mov
and
jmp
movsl
and
mov
dec
negb
lahf
mov
or
lods
adc
dec
add
adc
mov
cmpsb
pop
fwait
push
cmp
pop
cli
mov
fdivl
mov
repz
stos
jge
loopne
push
outsl
cmp
pop
int3
dec
cmpsb
sbb
cs
xchg
dec
enter
adc
cli
mov
cmp
sbb
inc
div
add
push
inc
fisttpl
pop
xchg
iret
mov
hlt
jnp
jo
outsl
iret
in
fs
jb
out
and
xlat
mov
fbstp
jle
scas
or
adc
inc
lret
notl
lock
cmp
stos
lret
xchg
xlat
or
sbb
cltd
pop
jle
xchg
inc
cltd
pushf
test
int
shr
pop
ljmp
jge
adc
js
and
sub
ja
mov
das
mov
inc
enter
je
push
dec
ljmp
cmpl
inc
pop
and
pop
loop
xchg
xor
add
jmp
cmp
push
outsl
pop
rorb
jnp
mov
mov
aad
sub
sbb
adc
lret
clc
call
push
test
xchg
jo
ljmp
lods
jno
cmpsb
inc
mov
or
inc
push
ficoml
in
xchg
jbe
pop
push
dec
fs
lret
rorb
sub
adc
movb
div
inc
sbb
mov
push
lods
rcl
mov
sbb
cmpsb
push
xor
mov
mov
fistps
jo
and
rcll
jle
nop
jp
test
imull
dec
jp
pop
xchg
gs
push
repz
out
out
popa
jbe
les
cmovo
sub
xor
jmp
gs
insb
mov
or
nop
ljmp
xor
imul
sahf
xchg
xor
cld
aas
shll
dec
ss
popl
call
push
clc
adc
mov
xor
lods
push
sub
dec
fsubs
inc
sub
jno
ljmp
std
mov
xor
sub
inc
inc
push
loopne
dec
in
jle
dec
jle
add
aad
adcb
mov
popf
xor
les
repz
mov
and
mov
or
xchg
lret
push
mov
adc
test
xor
and
mov
inc
lock
cmp
test
xlat
sbb
lods
sbb
fwait
mov
push
lahf
xchg
rol
xchg
mov
inc
jb
add
imul
scas
inc
mov
fcomp
or
orb
lahf
adc
cld
bts
inc
sarb
push
xchg
cs
or
adc
mov
sbb
pop
push
bound
mov
subl
xor
lret
xchg
mov
sbb
or
sub
sub
cwtl
cmp
cwtl
pop
push
lods
adc
pop
std
push
xchg
push
movsl
decb
fnstsw
mov
fdivs
or
dec
ret
mov
ja
pop
cltd
shll
xor
jae
test
stc
lcall
jmp
jg
cli
jnp
inc
es
sub
jne
outsl
pop
push
mov
and
mov
imul
inc
cmpsl
sub
fwait
in
jbe
lods
fs
hlt
jae
popf
popa
jb
jae
scas
adc
mov
inc
sldt
add
jmp
inc
test
out
and
inc
ret
sub
adc
mov
or
rcrb
movntps
or
adc
mov
iret
mov
sahf
sar
xchg
xor
jnp
dec
imul
lret
repnz
cld
aas
xchg
clc
and
dec
jg
push
iret
jo
cltd
mov
das
cmp
inc
push
add
mulb
stos
lea
push
mov
mov
sti
add
clc
dec
cltd
add
cli
std
jo
fisttpl
icebp
dec
push
push
mov
mov
inc
ja
lock
adc
inc
ss
push
xor
lea
cs
aad
mov
insb
call
xlat
stc
sub
aad
inc
add
xchg
movb
das
arpl
std
outsb
imul
push
xor
sub
cmpsb
lcall
add
cmp
mov
orb
pop
dec
add
mov
mov
mov
test
fidivs
das
jp
add
mov
cmp
popf
ret
jae
push
add
inc
jl
in
jae
or
push
pop
xlat
jo
lret
mov
into
mov
push
mov
xchg
imul
outsb
and
insb
cmp
sub
insl
xchg
sub
loop
fwait
adc
js
cmc
jb
repz
inc
xor
dec
bound
cmp
mov
jle
xor
xor
mov
enter
cs
mov
bswap
xchg
aaa
ljmp
push
xchg
mov
xchg
jp
sub
sar
cmp
dec
cmpsl
add
call
sti
popf
mov
clc
add
sbb
dec
inc
cmpsl
cmp
out
add
fdivrs
cmp
jo
call
popf
mov
pop
in
xchg
dec
push
out
jne
mov
loopne
dec
xor
add
loopne
lock
outsb
loop
xor
mov
jg
sbb
pop
push
jo
pop
cmp
dec
jg
cmpsb
addr16
mov
add
pop
dec
push
sub
pop
sbb
push
cmp
das
loopne
mov
sbb
or
mov
push
sub
add
adc
push
roll
mov
push
cmp
shr
scas
fdivs
add
pusha
and
psrlw
divb
sub
push
imul
loopne
in
scas
shll
loopne
std
or
add
jge
test
mov
pushf
es
jno
aam
fs
es
sub
in
xchg
fisttpl
mov
jae
testb
xlat
shl
mov
add
pushf
jl
xchg
js
mov
loop
fstpt
jg
outsb
fdivs
std
out
pop
lds
aam
mov
clc
outsl
or
pop
xchg
daa
cmpsb
fdivr
lock
push
test
dec
leave
test
faddl
lahf
fstps
pop
jg
je
mul
jns
cmp
jecxz
sahf
lahf
stc
xor
lods
sbb
fldenv
clc
aad
cwtl
ja
mov
mov
adc
divb
sub
pop
xchg
push
sti
les
jmp
and
jl
push
imul
clc
call
sbb
or
sbb
stos
adc
movsl
adc
push
cld
arpl
pop
into
pop
xor
test
pop
mov
call
jecxz
out
pop
push
movsl
add
in
lods
add
jo
push
xor
adc
xchg
nop
cmpsl
mov
push
hlt
push
or
pop
out
add
jo
pop
sub
int3
fisttpl
imul
rorl
repnz
sub
inc
dec
lods
push
adc
adc
and
adc
mov
mov
mov
pop
xor
mov
or
leavew
movsb
scas
sbb
int
and
mov
rcrb
inc
jb
nop
fistl
mov
stos
pop
jmp
ret
psllq
pop
adc
push
nop
inc
imul
jae
arpl
lods
jb
jecxz
mov
in
mov
das
into
daa
mov
outsb
inc
arpl
bound
inc
jg
outsl
scas
cmc
scas
clc
es
and
jge
push
sbb
in
sub
shlb
ret
inc
mov
stc
outsb
or
lcall
fdivr
xchg
loopne
mov
sub
sarl
xor
mov
pop
pop
pop
popa
add
dec
fsubrl
outsl
popl
ds
jns
stos
sbb
clc
jbe
and
inc
icebp
inc
aaa
das
mov
pop
mov
bound
insb
push
loope
imul
mov
mull
in
hlt
divb
xchg
and
pop
sub
stos
int3
xchg
or
mov
stos
pop
jp
cmp
pop
jecxz
popf
int3
imul
pop
fistpll
loopne
sub
mov
mov
loopne
mov
int
sbb
pop
mov
jge
pop
dec
xor
push
cmp
pop
fwait
dec
xchg
cld
bnd
fists
inc
test
xchg
sub
jo
jl
sub
lret
jl
outsb
es
aam
movsl
and
imul
push
jg
enter
add
ret
sbb
pop
jp
cmp
das
inc
mov
inc
mov
mov
insl
sub
push
cmpsb
jp
mov
push
in
ficoml
sub
sahf
inc
mov
adc
hlt
mov
gs
adc
or
jle
cmp
fld
out
pusha
adc
sub
notl
in
insb
jno
sub
or
fsubr
mov
sbbb
sub
cli
aaa
inc
sbb
outsb
dec
loope
inc
test
fmul
idivb
pop
push
adc
push
bound
dec
imul
ljmp
fwait
push
push
sbbl
push
js
mov
cmp
xchg
mov
aam
pusha
inc
jo
pop
nop
fsubl
jbe
loop
mov
jb
mov
mov
test
jmp
or
lret
es
subl
icebp
jno
pop
cmp
out
jnp
push
dec
lcall
ljmp
and
mov
pop
or
imul
xchg
mov
pusha
test
out
inc
bound
outsl
sahf
test
jbe
cmpsl
ret
xor
test
shl
mov
sbb
pop
mov
push
nop
push
xchg
dec
cmp
push
mov
scas
mov
and
mov
mov
xlat
mov
mov
pop
insb
mov
call
fnsave
rcll
fcompl
pop
mov
jns
idivl
loope
lret
inc
cmp
fwait
or
out
sahf
sub
pop
push
and
jl
xchg
xchg
push
or
subl
subl
ljmp
jmp
xchg
stos
shl
adcl
sub
pop
sub
stos
insb
std
int3
and
adc
ja
repnz
jp
sub
push
dec
sar
push
mov
xchg
ret
leave
sti
xchg
es
pop
add
and
pop
push
mov
cmp
dec
mov
mov
sbb
mov
int
xor
mov
pop
sbbb
jae
adc
dec
fs
xor
rcll
in
leave
fsubs
mov
add
xlat
stos
push
es
pusha
pop
ror
push
enter
repz
mov
cmp
fwait
mov
xorb
fistpll
shrb
popa
mov
lcall
xor
adc
lret
xor
and
addr16
stc
addl
arpl
jo
adc
loope
mov
adc
adc
push
mov
dec
repnz
push
adc
ret
cmpsl
jb
xor
cmp
rcrl
addr16
sbb
or
rcrl
iret
adc
test
cmp
add
fcmovnbe
xor
enter
lret
and
stc
andb
mov
or
neg
xor
das
adc
inc
sbbb
pop
andb
pop
push
shrb
dec
fistpll
out
into
movsl
push
ljmp
fs
push
shlb
push
xchg
in
sbb
cmp
pushf
sbb
aam
outsl
ljmp
scas
pop
popf
cmc
xchg
pop
push
mov
mov
pop
mov
int
int
add
sub
cmpsl
inc
push
imul
ja
gs
mov
fistl
mov
and
adc
pop
jmp
mov
lods
out
mov
insl
fidivs
daa
stos
sub
jecxz
xor
and
test
rcrb
dec
xchg
mov
xor
xchg
dec
push
or
jno
mov
test
pop
cmp
cld
xchg
sbb
divl
or
jbe
pop
ret
lahf
push
sti
adc
mov
aad
inc
mov
rcr
cmpb
adc
insl
pop
icebp
sub
adc
pop
mov
movsb
test
sub
incl
and
lret
sbb
icebp
dec
mov
fildl
cmp
mov
mov
jns
adc
lret
js
dec
pop
cmpsl
or
lods
shlb
pop
adc
subl
mov
mov
stos
arpl
adc
or
jmp
loop
shlb
pop
push
bound
fmull
inc
cmpsb
adc
sbb
mov
loope
pop
jbe
jne
insb
sbb
call
aas
push
push
cmc
push
lcall
pop
ret
outsb
adc
jge
xor
addr16
adc
dec
xor
fs
sbb
aam
outsl
jle
jl
xor
and
or
ret
popa
push
imul
aaa
cmp
mov
outsb
rcr
adc
stos
clc
pop
fcmovb
pop
ja
andl
fldenv
adc
cmp
not
jl
mov
cmpsl
push
fstps
adc
aad
inc
jns
test
into
shlb
push
inc
out
mov
imul
mov
call
mov
repz
scas
std
pop
and
xchg
aaa
push
test
imul
fsubl
sbb
mov
xor
add
stos
xor
jecxz
data16
push
adc
jge
xchg
iret
sbb
add
mov
adc
jmp
repz
test
stos
mov
pop
push
std
ds
gs
shlb
inc
fcmovnu
es
test
jl
sahf
cmp
ja
and
ja
ret
jns
fdivl
cmpsb
out
inc
movl
les
inc
xchg
inc
in
jp
pop
mov
adc
mov
lcall
and
jp
xchg
ret
sub
xor
sub
jo
mov
hlt
mov
dec
jae
dec
mov
imul
sub
cmp
stc
mov
lds
jbe
jns
adc
bound
cmpsl
xchg
mov
jne
adcb
cmp
scas
dec
fnstcw
push
in
je
lret
lret
mov
outsb
stos
push
enter
out
mov
nop
push
and
inc
cmp
nop
jg
push
push
outsl
test
out
test
jmp
cmp
imul
ret
into
inc
adc
dec
lods
mov
add
xor
mov
iret
pop
add
add
imul
test
inc
pop
xor
fidivl
aad
loop
test
mov
icebp
jns
mov
pop
aad
repnz
push
fidivs
adc
into
pop
mov
std
icebp
jecxz
jo
scas
outsl
hlt
xchg
jb
lea
sub
dec
icebp
lock
jno
inc
push
xor
cld
leave
bound
shr
cld
sbb
pop
add
push
fs
test
sbb
jns
xchg
orb
rcrb
mov
add
jmp
or
bnd
repz
add
mov
jl
jae
enter
addr16
iret
insb
xchg
or
jmp
sbb
scas
enter
std
push
xor
sarl
repnz
leave
fucomp
mov
imul
shlb
xchg
adc
mov
inc
cli
inc
mov
mov
inc
sbb
aad
push
pop
jnp
adc
xchg
inc
add
jnp
les
sub
pusha
sarl
inc
mov
jae
cmp
and
xchg
and
pop
mov
lock
sub
test
scas
mov
xchg
mov
stos
xor
lahf
adc
xor
scas
xor
mov
aaa
jg
push
shll
mov
and
clc
cmp
in
dec
jno
aad
xchg
push
bound
outsl
popf
mulb
pop
shr
sbb
push
dec
push
xor
repnz
int3
pop
xchg
xor
cmpsb
pusha
int
and
jae
mov
sub
in
addr16
mov
or
cmp
cmp
or
push
push
inc
and
hlt
btc
xchg
push
lods
jnp
loope
pop
dec
ja
cmpsl
repz
sbb
pop
cwtl
leave
test
jge
ss
ljmp
pop
repnz
iret
orl
dec
jo
adc
xchg
and
xchg
push
mov
push
jmp
jne
dec
cmpsb
repnz
and
jp
jae
aam
mov
daa
inc
sub
insl
lahf
loop
and
adc
mov
xor
push
mov
sbb
xor
push
lods
in
mov
out
add
push
les
gs
mov
add
rclb
sbbl
je
pop
adcb
fwait
bound
jmp
xchg
xlat
fcompl
xchg
insl
cmp
mov
daa
jb
mov
mov
pop
jns
add
loopne
mov
pop
lahf
loope
sti
cs
into
push
push
dec
in
push
cmp
bound
popa
mov
sti
pop
mov
push
and
pop
jb
fdivrs
sub
push
jne
lea
iret
das
push
jle
sbb
mov
ret
fwait
pop
and
pop
xor
sahf
ljmp
test
xor
mov
rcll
icebp
dec
clc
jg
ljmp
cld
or
ljmp
push
pop
lock
cmc
adc
test
std
or
stc
aad
test
mov
pop
push
aad
les
add
sbb
pushf
mov
shrl
or
sarl
push
mov
mov
push
push
sbb
pop
mov
lahf
roll
sbb
fs
cmp
push
cmp
inc
je
lock
pop
pop
aas
dec
and
scas
aam
sub
mov
mov
mov
rcll
arpl
xchg
arpl
lods
ret
push
popa
insl
stc
adc
out
rorb
ret
bound
fsubs
sbb
nop
ficoml
cmpl
xor
mov
sti
jg
inc
and
stos
out
test
cwtl
adc
xor
jne
and
popf
lock
jmp
jae
rclb
es
enter
adc
adc
jae
lret
jmp
adc
and
imul
mov
inc
cmp
xor
xorl
pop
pop
dec
or
pusha
das
dec
fbstp
std
sub
shrb
mov
mov
enter
enter
mov
loop
leave
push
xchg
test
insl
rorb
arpl
mov
jmp
jg
es
bound
pop
mov
dec
ljmp
cmpsb
rcrl
iret
sub
xchg
xchg
xchg
or
stos
sub
aaa
fdivrs
push
gs
xlat
push
repz
divb
fs
jmp
clc
lods
int
gs
push
arpl
sub
loope
mov
fsts
imul
xchg
sub
aas
mov
mov
cmp
cwtl
push
outsl
dec
lock
push
stos
negl
out
cmc
adc
inc
and
mov
out
lods
insl
add
xor
test
push
inc
pop
mov
mov
lods
adc
and
cmpsl
mov
sbbb
push
imul
fwait
sar
outsb
test
stos
call
cmp
das
ret
inc
call
sub
and
lea
in
aad
cwtl
insb
xchg
push
adc
xor
sbb
sub
mov
adc
mov
mov
adc
jb
and
faddl
push
sbb
stos
test
xchg
cmp
sti
and
fwait
cmc
js
popa
mov
push
mov
int
fidivl
mov
mov
int
jp
xchg
xor
es
cmp
cmpsb
scas
cli
cmpsl
test
je
cld
xor
xor
sub
xor
sub
jecxz
inc
adcl
shll
and
and
data16
cli
mov
imul
loope
shlb
pop
mov
ljmp
out
cmp
xor
jnp
mov
ss
in
fs
jne
add
jecxz
mov
cmp
scas
adc
xlat
jle
inc
divl
mov
xlat
cmp
mov
mov
pop
pop
popa
ljmp
mov
je
inc
xor
jle
mov
xchg
mov
mov
pusha
or
pushf
mov
shll
ret
and
inc
or
add
inc
test
jp
jae
add
sbb
sbb
push
inc
pop
clc
std
mov
cmc
popa
decl
gs
iret
jg
mov
xor
pusha
lcall
loopne
fwait
arpl
out
mov
or
sub
push
std
test
dec
outsl
stos
call
xor
xchg
nop
mov
out
mov
sbb
or
push
dec
hlt
out
jbe
add
and
bound
mov
inc
xor
addr16
mov
insl
cli
daa
sub
imul
imul
mov
mov
out
sti
dec
jno
imul
rorb
sbb
fisubl
or
movsb
js
into
xchg
fldcw
and
insl
cmpsb
out
xchg
int3
jl
test
das
lods
cs
pop
daa
ret
leave
xchg
inc
or
mov
sbb
jno
fs
jecxz
jnp
fs
loop
out
push
das
clc
fbld
lds
ds
add
sbb
add
daa
dec
sbb
aad
cmp
dec
cs
pop
hlt
mov
movsl
out
mov
outsb
mov
fdivl
or
xor
pop
dec
stc
or
in
into
imul
ja
and
addr16
test
fimull
mov
aam
sbb
imul
pop
jg
mov
xor
add
fists
inc
xlat
lods
loopne
and
les
mov
push
sbb
inc
dec
cwtl
mov
push
lret
mov
or
testb
data16
ja
push
dec
add
sbb
jae
rcl
mov
push
int3
add
scas
mov
mov
mov
dec
pop
aaa
fsubrs
mov
xchg
or
jecxz
sub
mov
mov
pop
les
mov
jmp
jmp
aam
ror
rorl
mov
push
mov
pop
mov
test
inc
das
sbb
xchg
mov
and
xor
mov
push
cltd
js
int
or
push
ds
jnp
call
das
xor
imul
mov
in
cmp
jne
xlat
popa
mov
mov
daa
mov
mov
xchg
gs
jmp
pop
nop
notb
filds
jecxz
aaa
fbstp
mov
sar
mov
inc
sbb
insl
aas
sub
nop
fiaddl
adc
ret
push
fists
in
sub
xchg
insb
sar
jb
fistpl
leave
cmp
aaa
mul
fsubr
leave
lods
incl
std
and
mov
sahf
aaa
test
and
mov
fidivs
cmpsb
adc
aam
fcom
imul
add
adc
mov
push
cmpb
dec
cmp
lret
sub
out
lea
leave
sarb
sub
xorl
je
xchg
pop
push
jo
lods
mov
jecxz
fs
sub
enter
leave
sbb
lock
scas
lret
pusha
outsl
imul
leave
cli
clc
gs
xchg
sbb
das
int3
sarl
or
jne
shll
pop
adc
xlat
ret
mov
sbb
mov
add
mov
incb
push
add
fldenv
and
push
mov
push
cmp
outsb
pop
jmp
outsl
inc
dec
pop
popa
sti
jns
fwait
fs
cmp
mov
negb
mov
test
add
inc
jl
adc
dec
xchg
out
pop
xor
push
in
push
notl
pusha
or
mov
imul
sub
out
leave
sub
repz
and
pusha
jle
leave
adc
adc
mov
mov
aas
jg
shll
clc
addr16
and
inc
mov
lcall
imul
or
pop
out
gs
sahf
rol
mov
xor
lea
mov
test
jge
mov
in
andl
jb
test
pushf
cmp
sbb
test
std
mov
cld
les
push
pop
daa
cmp
cltd
mov
loope
cmpsb
push
xchg
jno
mov
push
fstps
popa
shrl
lock
addr16
mov
cld
sub
push
ja
jbe
fs
ds
xchg
and
inc
push
or
in
lret
xchg
movsl
sbb
cwtl
jne
test
iret
bound
les
push
negl
push
sbb
loop
mov
cmpsb
jl
insl
xor
pop
clc
cltd
jmp
mov
outsl
mov
sahf
sub
xor
push
pop
out
add
mov
lcall
movsl
jl
movsb
fdivl
sub
lret
pusha
mov
mov
push
mov
jg
push
rcrl
dec
rorb
xlat
js
mov
add
xbegin
mov
adc
cs
sbb
ds
daa
arpl
fists
pushl
bound
clc
xchg
testb
mov
xchg
dec
leave
xchg
sahf
sbb
jle
shlb
dec
imul
lret
pop
scas
fcoms
fs
imul
jbe
mov
shl
push
and
lret
mov
pop
fiaddl
sbb
xchg
and
sbb
popf
movsl
test
xor
or
dec
jo
jle
sbb
xlat
jl
mov
mov
jp
push
mov
clc
dec
mov
cwtl
sub
or
icebp
stos
mov
mov
out
pop
sbb
loope
sub
test
ljmp
imul
push
add
inc
movb
cmpsl
add
pop
push
jnp
xor
and
or
clc
and
mov
mov
loope
add
aaa
cmp
inc
jae
sahf
mov
and
popa
sbb
pop
push
and
out
sbb
cmp
or
mov
fidivrl
out
repz
sbb
cld
repz
sbb
sbb
cli
cmp
adc
fsub
push
ljmp
lcall
push
pop
mov
dec
dec
jb
out
cmpsl
hlt
loop
or
sub
je
xor
rclb
xlat
pop
jb
xchg
lcall
call
adc
cwtl
cmpl
movsb
xchg
ss
in
cltd
mov
xchg
sbb
cmp
pushf
sbb
mov
std
jnp
add
into
mov
arpl
and
ja
insl
sbb
out
inc
mov
adc
call
inc
movsl
jecxz
enter
and
out
mov
xchg
scas
out
inc
or
ret
lret
cltd
pop
push
in
mov
sbb
jnp
popa
in
jno
fisubs
leave
sbb
mov
inc
std
test
pushf
mov
or
sbb
mov
mov
push
out
mov
push
mov
out
shll
lahf
leave
cmc
pop
sarb
imul
jnp
xor
sti
jg
jne
das
fs
push
cmpl
add
scas
jae
test
adc
jo
and
daa
push
iret
hlt
sub
out
dec
negl
ds
adc
jo
and
lock
or
pop
in
movsb
ljmp
in
push
mov
add
cmp
push
mov
mulb
rol
jb
int
mov
fwait
repz
bound
add
mov
mov
rcrl
xchg
lret
jbe
pop
or
aam
scas
lret
cli
movsl
cmpsl
push
pusha
mov
mov
rolb
in
and
xchg
in
addb
adc
int3
sbb
fnstsw
cmpsl
pop
cld
testb
ss
dec
shlb
sub
mov
mov
mov
xor
push
pusha
inc
pop
xchg
sub
sahf
out
or
pop
xor
lods
es
jno
cld
jle
mov
or
add
js
mov
cmp
das
and
sti
or
mov
ds
mov
adc
add
testb
movb
aad
cmp
sbb
inc
or
inc
jnp
les
pushf
jb
and
dec
out
popa
mov
dec
xchg
mov
mov
adc
mov
push
pop
rclb
lds
mov
clc
adc
les
scas
mov
jbe
jmp
dec
into
ljmp
pop
out
dec
pop
aaa
lock
xchg
je
setbe
or
xchg
xchg
pushl
fwait
aas
sbb
insl
jo
xor
test
pop
cmp
das
pusha
jecxz
jnp
les
jl
insb
popf
jnp
xlat
rol
inc
imul
test
dec
test
lods
mov
cmp
push
dec
inc
push
pushf
xchg
sbb
fdivrl
repnz
mov
into
push
iret
and
lcall
out
out
xchg
jbe
scas
popa
sbb
mov
mov
cmp
and
dec
or
push
mov
icebp
cmp
lea
hlt
dec
shlb
xor
ss
scas
xor
pop
shl
inc
push
insl
and
mov
repz
push
jno
ss
jmp
or
iret
jns
adc
stc
dec
in
in
lea
jbe
xchg
pop
pop
xor
mov
std
push
inc
mov
adc
aaa
stc
push
das
pop
or
dec
popa
repnz
sub
jp
out
clc
stc
push
xchg
cmpsb
mov
std
dec
pop
sub
cmp
iret
and
xor
inc
xor
cs
enter
addb
gs
pushf
xchg
mov
clc
rcl
pop
test
pop
xchg
fwait
xorl
out
test
rcr
cli
mov
lods
dec
idivl
popl
sbb
out
clc
ljmp
mov
jno
sti
rorl
mov
pcmpeqb
in
xchg
jg
ss
pop
or
fsts
aaa
aam
add
jnp
mov
sbb
mov
decl
mov
sahf
fimuls
sbb
mov
push
and
outsl
mov
call
sar
xchg
out
aaa
insb
jno
fdivr
lods
push
test
pop
ret
dec
xor
in
cmp
pop
pop
push
and
mov
dec
in
dec
xor
insb
mov
lds
mov
sbb
mov
movsl
cmpsb
mulps
sbb
and
aad
inc
rorb
ret
cmpsb
mov
add
sbb
xor
jae
mov
jb
or
aas
push
mov
ret
xchg
jmp
fwait
add
out
dec
ret
add
dec
ss
or
xchg
jge
xor
and
or
ret
jne
xchg
jge
fs
pop
add
jl
xchg
dec
test
xchg
aas
pop
cs
movl
adc
adc
push
pop
invd
xchg
stos
ja
pop
nop
dec
into
jl
push
fcmovne
mov
lret
sub
inc
and
lock
fcomps
out
pop
sub
lock
pop
clc
mov
rclb
stos
pop
and
jmp
jmp
push
dec
pop
mov
or
stos
xor
or
mov
cmp
lods
add
mov
cmp
mov
lahf
jmp
ret
ffreep
adc
mov
and
inc
sub
xchg
fbld
insl
inc
jns
inc
mov
dec
inc
mov
inc
sub
cmpsb
xchg
cld
mov
push
cwtl
in
xlat
xchg
xchg
jecxz
shrb
lock
jmp
or
sub
cli
xchg
adc
shrl
adc
dec
js
test
cmpsb
mov
xchg
jb
dec
cmc
popf
push
push
dec
and
daa
aad
enter
jbe
cmp
dec
stos
out
dec
xchg
call
loopne
mov
dec
test
xor
jmp
leave
test
repz
pop
mov
push
mov
push
mov
popa
xor
hlt
xchg
or
cmp
dec
xchg
xlat
ss
xchg
dec
std
jmp
lods
mov
int3
xchg
inc
lea
out
cmp
stc
jae
pop
lods
mov
out
pop
mov
adc
dec
outsb
pop
push
sbb
popa
push
jge
pop
push
popf
ljmp
add
xorb
inc
shlb
mov
pop
test
inc
inc
mov
mov
xchg
mov
cmpsl
loope
dec
inc
sub
lods
lds
test
xchg
rcr
loopne
loope
sahf
fnstcw
daa
fimuls
sahf
in
loope
cltd
mov
cmpb
ds
insb
insb
insb
stc
in
insl
lahf
std
call
lods
je
adc
and
add
ja
xlat
and
fisubrs
imul
iret
call
inc
push
or
ss
test
or
rcr
or
int
ret
sahf
jle
jns
xor
xchg
lea
ss
and
mov
aad
pop
push
leave
cld
cmc
in
out
cltd
mov
sub
fldenv
adc
dec
lahf
out
data16
xlat
adc
cmpsl
fdivs
adc
test
push
fsts
lods
in
or
jne
mov
in
mov
mov
sbb
mov
xor
shrl
repz
jge
jl
mov
mov
popf
lret
add
lret
imul
dec
sub
lret
adc
fsubs
fdivl
push
ds
ss
inc
xor
ficompl
cmc
push
mov
fdiv
add
lret
or
stos
int3
mov
push
cmp
fsubl
lods
dec
loop
cli
pop
pop
mov
cmp
sub
mov
mov
mov
movd
jecxz
push
jp
xor
sub
fimuls
pushf
inc
cvtdq2ps
push
mov
mov
mov
lods
mov
rol
fdivrl
call
xchg
push
gs
in
pop
add
mov
inc
jge
fwait
hlt
xor
jb
xchg
lods
outsb
jecxz
out
test
mov
mov
or
adc
mov
mov
jne
pop
cmp
dec
cmp
jmp
scas
hlt
in
sahf
inc
pop
outsl
dec
fnstsw
push
jne
push
sub
test
dec
xorl
ret
hlt
in
rep
pop
addr16
mov
int3
in
gs
sbb
pop
std
je
pop
lcall
mov
push
scas
pop
add
clc
outsb
mov
sub
jp
jle
add
or
ret
push
inc
sub
lret
pop
or
mov
insb
cli
push
sub
adc
pop
repz
mov
cmp
push
je
stos
fcompl
roll
hlt
push
push
lretw
xor
jmp
paddq
out
mov
andl
shll
fwait
cmp
or
lods
out
aas
push
jl
mov
adc
xchg
xchg
fdivl
mov
mov
xchg
addl
mov
xchg
hlt
movsl
mov
adc
xor
test
loope
out
lock
test
cmp
insb
arpl
fs
repnz
fidivl
iret
push
cmp
cmp
pop
mov
cmp
in
cmc
sbb
gs
outsb
iret
test
jbe
cmp
and
xchg
mov
rcrb
inc
xor
es
sbb
fwait
xchg
push
neg
fcomps
sbb
in
lcall
mov
jnp
xchg
stc
lret
dec
inc
mov
jb
inc
push
je
xor
mov
repz
pop
mov
mov
enter
in
pusha
mov
out
cmc
mov
das
add
mov
jb
cmp
daa
lret
push
nop
dec
inc
int
sbb
loope
les
repz
pop
into
sbb
cmpsb
mull
mov
rol
ficomps
sub
fidivl
xchg
call
jb
frstor
pop
cmp
sub
xor
adc
xchg
andl
push
inc
jb
das
stc
xor
ds
and
pop
dec
movsl
and
aam
in
rol
xor
pop
push
ss
mov
leave
mov
jo
cltd
roll
inc
nop
sarl
sbb
xor
lds
jmp
in
add
jle
hlt
andl
movsb
lcall
mov
cmp
sub
xchg
aad
repz
mov
xchg
test
or
sub
pop
add
pop
enter
sub
sbb
js
mov
pop
push
mov
clc
pop
sub
out
pop
movsl
cli
xlat
stc
fiaddl
mov
scas
xor
dec
fucomi
mov
fmuls
cmpsl
xor
fs
and
mov
fcompl
cmp
inc
cmp
xor
out
jns
xor
xor
push
fnstenv
enter
je
int3
lret
js
and
lods
sub
mov
idivb
inc
aas
call
cld
shr
addr16
adc
mov
test
xor
and
adc
iret
push
xchg
adcl
arpl
int
sbb
and
fsts
out
and
add
int
xchg
out
lock
aad
push
mov
sti
sub
inc
hlt
stos
mov
mov
add
insl
push
jo
mov
jge
ljmp
cmc
jge
adc
mov
jo
fcoml
arpl
jmp
fdivrp
sbb
pusha
cli
ret
dec
push
notb
lods
movsb
js
negb
mov
out
adc
popa
scas
negl
mov
into
jge
lcall
inc
out
jmp
stos
add
mov
shlb
test
movsb
test
pop
jnp
mov
addr16
movsl
xchg
test
mov
popf
lods
or
inc
out
push
shrb
jle
push
xchg
xlat
loopne
out
sbb
mov
cwtl
cli
lds
xor
add
aam
xchg
mov
pop
push
mov
inc
mov
push
testl
xor
jno
lds
test
test
cmpsl
in
push
nop
mov
jns
ds
dec
lahf
jecxz
insb
dec
sbb
dec
mov
sarb
mov
pop
or
dec
push
pop
test
add
push
dec
push
sub
data16
adc
mov
sub
jge
in
xor
xchg
mov
push
add
js
xor
and
test
xor
lcall
adc
jne
mov
sbb
lahf
outsl
xchg
ficoms
add
cmc
fisttps
xchg
adc
popf
push
loop
pop
sbb
mov
incl
ss
xor
insb
fisttpll
filds
add
out
negb
aam
mov
dec
xorl
cmp
out
dec
out
in
dec
xor
inc
and
xchg
insb
in
jae
test
cmp
fwait
add
pop
std
pop
xchg
pop
movsl
js
lds
mov
mov
jecxz
fldl
jb
js
loope
jne
pop
lcall
add
adc
hlt
jg
js
mov
inc
mov
mov
popa
data16
fnstenv
nop
mov
int3
sbb
dec
iret
addr16
jg
pop
jge
pop
clc
cld
aad
sub
xchg
lods
jae
ja
jno
repz
enter
mov
cmp
arpl
std
loop
add
iret
cs
xorl
push
pop
data16
mov
xchg
adc
adc
stos
adc
mov
icebp
and
sub
jnp
sahf
and
int
inc
cwtl
loop
test
push
nop
inc
add
xchg
sub
push
xor
dec
ja
nop
imull
jbe
arpl
js
ret
push
cmp
mov
sti
dec
adc
pop
xchg
ret
xorl
cmp
inc
sub
push
fstl
xor
in
cs
int3
mov
xor
xchg
aam
sbb
out
push
dec
xchg
xchg
xchg
sbb
and
rolb
subb
and
push
fidivrs
mov
fmuls
sub
inc
jge
adc
pop
or
xor
test
dec
enter
jle
mov
arpl
sbb
notl
int
lahf
adc
sar
inc
push
xchg
fsubrl
std
sbb
push
popf
iret
mov
dec
xchg
jmp
dec
dec
leave
loop
lods
std
mov
mov
mov
push
inc
adc
lret
jmp
pop
loope
inc
sbb
pop
xsave
jge
push
pop
inc
add
in
sbb
cwtl
aam
and
in
sahf
pop
inc
ret
adc
lret
jecxz
xor
jg
repnz
addr16
gs
stos
fs
rcl
out
fcoml
pushf
adc
xor
movsb
jb
adc
jo
adc
sbb
fcmovne
xor
inc
stos
and
cmp
push
push
mov
mov
test
and
or
orl
dec
insl
rorb
mov
pop
push
cmp
fwait
dec
inc
jecxz
pop
stc
cmp
stc
dec
cs
inc
jnp
cmp
jns
sub
xor
mov
push
xchg
in
adc
leave
jns
call
sti
mov
sbb
or
pop
and
inc
mov
jmp
xlat
sarb
sub
jl
mov
out
jecxz
push
repz
pushl
insb
dec
dec
mov
ja
xor
test
mov
mov
shr
mov
jb
imul
adc
ds
push
movsl
daa
adc
xor
out
ljmp
mov
pushf
notl
xchg
imul
sbb
aad
in
mov
mov
pop
leave
dec
fs
mov
xorb
bound
mov
jb
push
test
or
or
roll
inc
shll
jp
aas
sti
xor
ljmp
mov
out
xchg
sub
loop
pusha
mov
cmp
daa
xchg
and
cmp
in
cmp
cmp
aad
mov
mov
dec
mov
and
jl
cli
arpl
fcmovnbe
and
das
dec
push
push
xchg
xorl
inc
cmp
call
jno
inc
adc
xchg
mov
sbb
sub
lahf
fnsave
in
dec
test
cmpsl
cmpl
sbb
adc
sub
cmp
dec
loope
jmp
xchg
int3
push
aam
imul
cmp
add
lds
add
scas
mov
cmpsb
jmp
inc
daa
pop
pop
sub
ds
sbb
pop
test
les
cmp
and
lea
cmp
cmpsl
ja
shl
psubd
mov
cli
push
mov
push
rcrl
aad
clc
les
fbld
imul
in
div
or
lcall
mov
jns
sbb
inc
and
adc
xchg
cmc
add
es
jge
lcall
inc
pop
out
push
add
in
xchg
mov
fcmovnu
enter
mov
in
jo
cmp
arpl
cmp
xchg
mov
pop
mov
imul
jb
inc
add
sub
mov
in
cmp
xor
gs
mov
xor
push
add
xor
fbstp
jb
push
mov
in
xchg
dec
mov
jecxz
in
pop
and
jno
pop
mov
sbb
add
pop
dec
or
idivl
sahf
xchg
movsl
fisttpl
xchg
mov
pop
adc
bound
mov
pop
push
mov
pop
cmp
pop
sti
cmpsb
push
pop
pushf
fwait
outsb
into
and
popa
hlt
jmp
xlat
sbb
pop
je
cmpsl
mov
arpl
jo
adcl
inc
enter
ret
pop
dec
add
xlat
and
sub
cmpl
xchg
fmulp
arpl
repz
xor
ret
enter
jle
xchg
xchg
test
sbb
sbb
mov
push
push
dec
adc
mov
int3
loopne
das
into
pusha
jecxz
call
push
add
push
mov
pop
push
les
orl
out
adcb
addl
jbe
sub
inc
stc
add
pop
les
push
push
add
add
sbb
loopne
popa
ffreep
sahf
xchg
clc
mov
cmpsl
mov
xchg
xlat
repnz
aam
pop
adc
mov
xorl
stos
add
out
call
xorb
push
cld
adc
repz
inc
dec
add
nop
mov
dec
mov
bound
es
lahf
mov
mov
mov
cld
push
xchg
fdivrl
sub
push
xor
hlt
fdivrl
test
out
xor
gs
ljmp
or
fistpl
xchg
adc
dec
push
or
xor
push
ret
jns
cld
or
pop
cmp
ss
mov
inc
das
adc
jecxz
add
push
jg
out
rcll
int
push
sub
mov
sar
or
xchg
lods
adc
inc
rorl
pop
sub
cmp
addr16
enter
call
push
mov
and
xchg
mov
call
adc
call
xor
jp
cmp
out
adc
cmp
pop
jo
mov
mulb
mov
dec
jl
imul
jge
mov
es
pop
push
fmuls
sub
pop
and
sub
xchg
call
loopne
jmp
gs
dec
inc
cmc
out
fbld
arpl
push
js
dec
ljmp
popf
xchg
out
jg
adc
imul
cmpsl
mov
ljmp
stos
daa
lahf
outsl
push
ljmp
lods
daa
or
xor
jns
sub
jecxz
fs
add
clc
jno
icebp
stos
mov
and
dec
movsb
lock
cld
adc
adcl
lret
mov
jae
clc
inc
lds
push
cmp
inc
mov
sti
sahf
add
ja
lahf
jbe
jnp
xchg
pop
add
sahf
pop
jo
jle
mov
dec
fwait
imul
mov
xchg
or
pop
dec
push
sahf
out
push
mov
sbb
mov
aaa
aad
mov
inc
add
adc
or
cmc
dec
inc
aaa
pop
push
lods
cltd
pop
jl
repnz
loopne
lret
gs
adcl
outsb
xor
out
sbb
and
rcrb
cmpsl
popf
xchg
dec
int3
stos
lret
pop
inc
push
jo
sub
add
outsl
cmp
or
das
aam
mov
aas
sbb
mov
data16
dec
push
rorl
xor
mov
sbbl
jns
jo
divl
loopne
mov
sbb
inc
frstor
sbb
cli
fwait
dec
les
fnstcw
outsl
inc
xor
jl
ds
jns
lret
mov
lret
xorb
fimull
jno
mov
testb
cmpsl
leave
shll
mov
or
pop
ja
mov
sbb
sub
push
mov
and
mov
pop
dec
sub
test
jle
sti
int3
in
jae
int3
iret
jecxz
mov
lahf
sar
fcompl
aam
nop
inc
aam
fbstp
push
cmp
push
mov
xor
inc
xor
imul
inc
adc
mov
loop
cmp
cmp
and
inc
lods
adc
xor
in
add
cmp
dec
jo
cmp
shr
rorb
xor
xor
jmp
and
fimull
ljmp
mov
stos
pop
sbb
xchg
mov
push
dec
xchg
ljmp
in
mov
push
outsb
out
cmpsb
out
jmp
mov
jb
sbb
cmp
loope
sarl
test
jno
imul
ljmp
subps
inc
lock
daa
adc
cmpsb
insl
pop
jecxz
es
dec
scas
loope
or
sbb
pop
adc
lods
loopne
ret
push
and
sti
sbb
clc
fwait
leave
imull
inc
adc
out
pop
cmpsl
insb
push
aaa
nop
xorl
xchg
lock
cli
xchg
or
xchg
jnp
lea
fucomip
mov
outsl
movsb
call
jno
data16
mov
mov
cmp
fsts
xor
add
jae
jge
sbb
scas
xchg
dec
pop
lods
imul
lods
inc
ds
mov
aam
je
inc
enter
pushf
pop
and
shll
jbe
dec
ja
outsb
jmp
sti
imul
xor
cmovbe
pop
das
inc
leave
test
mov
and
jne
pop
daa
fwait
push
inc
in
insl
or
cli
movsl
jmp
insl
fsubrs
dec
decl
js
jnp
dec
mov
into
lods
mov
jmp
call
cmp
cs
cmpsl
sti
int
fistps
push
lahf
int3
mov
out
xor
fs
jo
loope
fcoml
jge
pop
jne
pop
dec
jle
cmp
into
repnz
pop
push
xchg
pop
test
xlat
insb
pop
iret
jb
jecxz
sbb
shlb
sahf
xor
mov
int
je
sarb
xchg
movsb
inc
or
jb
cs
and
fdivl
or
mov
loope
fnsave
and
int3
lock
add
mov
jl
jmp
mov
xchg
outsb
out
sub
jns
adc
pop
call
dec
call
ds
ja
mov
inc
sbb
flds
lret
enter
fcoms
or
push
fdivr
lods
push
mov
cli
in
lret
add
rorb
aad
xchg
fldt
pop
sub
pop
inc
icebp
ficomps
adc
push
fwait
add
mov
call
mov
mov
mov
decl
pshufw
and
les
sbb
aaa
les
lahf
and
inc
mov
arpl
lcall
pop
les
insl
pushf
pop
xchg
cmp
jb
fwait
push
mov
imul
ds
shll
push
jg
mov
js
jl
adc
imul
push
enter
dec
push
xchg
jmp
out
cs
push
sbb
add
icebp
sub
loopne
xchg
sarl
mov
dec
ret
add
cli
mov
adcl
dec
sahf
xchg
or
inc
out
iret
adcb
sub
cmpsl
test
push
sbb
jmp
cwtl
pop
pop
add
add
sti
test
mov
adc
lcall
dec
mov
ja
xlat
in
xor
push
std
push
test
or
addb
fs
inc
adc
rcll
and
sti
btc
sbb
repz
fisttpll
rorl
mov
test
sub
sbb
out
sbb
into
jnp
jle
mov
cmp
jo
pop
jo
aad
addb
jae
push
sbb
rclb
xchg
pop
pop
dec
lret
ss
cmpl
sbb
ljmp
stos
xor
lret
sub
jns
pop
adc
sahf
je
lods
out
hlt
out
sub
push
dec
std
xchg
sub
add
or
pushf
movsb
cmp
xchg
mov
and
imul
cmpps
and
rol
stos
push
rolb
adc
push
outsb
adc
or
add
adc
push
scas
add
jecxz
arpl
adc
jp
je
in
or
jle
negl
jnp
lock
dec
jle
enterw
rolb
lcall
mov
push
outsl
dec
add
shl
ret
adc
cltd
stos
lock
mov
test
loop
sub
stos
inc
push
push
jnp
inc
push
lods
popa
lahf
imul
stc
jecxz
movsl
mov
jae
push
ljmp
fwait
je
data16
addr16
sbb
pop
pop
movsl
in
jbe
xchg
outsl
lods
gs
lods
inc
hlt
movswl
push
clc
out
push
sub
outsl
mov
push
lahf
lcall
push
inc
nop
sbb
repnz
ja
pop
push
jbe
inc
mov
in
lret
pop
lahf
jge
jge
lds
jnp
pushl
aaa
mov
cmp
mov
sahf
mov
jp
int3
shrb
dec
push
jae
pop
ret
mov
fidivl
xchg
inc
xchg
mov
jnp
mov
fsubrs
or
dec
aaa
outsb
and
pop
or
and
jecxz
push
push
push
lret
or
fisubs
aad
ret
mov
push
inc
movsb
pop
mov
imul
mov
dec
out
dec
shlb
mov
int3
jp
mov
imul
xchg
push
mov
add
insl
xlat
adc
mov
int
ds
flds
inc
dec
cs
xchg
out
jbe
inc
test
aad
mov
push
and
daa
daa
aaa
iret
sub
push
inc
pop
push
clc
sub
aas
pop
mov
mov
mov
into
jp
push
scas
js
popf
jae
pop
scas
jg
cmp
loopne
loopne
mov
in
push
repnz
andl
push
in
mov
popa
jp
cmpsb
cmp
fdivs
ja
inc
mov
es
leave
pop
sbb
push
pop
xchg
push
pop
jg
cmp
ret
ret
bound
notl
movsl
stc
mov
cmp
mov
jl
leave
nopl
mov
mov
dec
fists
inc
xchg
dec
xor
in
fcoms
mov
jbe
stos
out
xchg
pop
or
sbb
ja
lds
xchg
mov
dec
dec
jne
insb
pusha
cmp
mov
pop
mov
rorl
lcall
popa
pop
out
jo
xlat
inc
pop
mov
iret
int
pop
adc
dec
adc
xchg
adc
adcl
fs
out
sti
das
call
sti
mov
mov
out
lret
or
xor
or
jl
and
movsl
push
decl
in
cltd
push
ljmp
inc
jb
insl
int
ja
repz
les
dec
jg
adc
pop
xchg
movsl
xchg
imul
es
and
or
push
xchg
mov
mov
divb
jbe
sbb
test
loopw
ret
aas
dec
repnz
imul
dec
push
cmp
lea
out
fiadds
scas
xchg
dec
incl
jp
mov
jne
dec
xchg
dec
adc
jae
int3
aam
mov
pop
aas
fadd
mov
outsl
xor
orb
ss
jecxz
outsb
mov
cmpsl
addr16
and
repz
cmp
and
mov
mov
clc
cwtl
pop
jo
sti
mov
xor
xor
xor
jmp
sub
test
mov
mov
mov
dec
cwtl
cld
mov
loopne
jnp
fcoml
sbb
mov
xor
dec
lret
addb
pop
xchg
out
pop
call
or
arpl
fndisi(8087
scas
or
js
xchg
pop
push
push
adc
jp
mov
outsl
cld
dec
bound
hlt
fnstenv
cvttps2pi
jecxz
push
shll
cmp
pop
inc
in
daa
test
into
ret
mov
xor
jae
repz
push
test
or
dec
addr16
cmpb
inc
stos
lock
mov
push
into
dec
test
cmp
dec
les
inc
adc
mov
or
aaa
push
sbb
add
data16
jle
sbb
pop
mov
cmpsl
sbbb
out
mov
pushf
test
and
ds
jno
dec
cmp
cltd
cld
xor
xchg
dec
fstpt
push
pop
dec
clc
leave
sub
aam
dec
jne
mov
add
adc
dec
jnp
mov
dec
add
sbb
gs
jecxz
loope
sahf
repz
jb
and
jg
push
xor
push
inc
jb
or
loope
in
push
dec
out
ret
push
test
nop
icebp
and
out
sbb
pop
push
cmp
out
cmc
call
aaa
test
lock
xchg
loop
imul
in
insb
fstps
cmp
pop
jmp
out
aaa
mov
add
out
jp
cmp
aam
inc
push
andl
fsts
loop
lds
shll
xorb
sbbl
imul
daa
or
outsl
pop
dec
inc
popa
adc
int
es
daa
sbb
xor
jmp
iret
test
pop
repz
movsl
lods
andb
push
and
xlat
leave
sbb
stos
cmp
mov
dec
mov
stos
outsl
mov
jo
lcall
mov
aas
push
push
das
adc
xchg
jl
push
cmp
jle
xchg
sub
pusha
mov
dec
addr16
fwait
gs
mov
loopne
push
test
jne
inc
ffree
icebp
adc
xor
cmp
fisttpl
fwait
xor
xor
leave
rcrl
outsb
or
in
cwtl
mov
in
bound
imul
pop
in
mov
xor
sahf
cmp
and
and
add
std
mov
sbb
pop
inc
mov
int3
scas
cmc
xchg
xlat
cmp
ret
sbb
lea
dec
mov
test
mov
jp
mov
xor
movsb
rolb
xor
pop
mov
mov
fdivp
xor
movsl
mov
cmp
jae
push
and
stos
cmc
andl
jl
cmc
or
int3
stos
neg
mov
shl
xchg
daa
jg
xor
into
jle
test
mov
rcrl
sti
sbb
cmp
in
out
push
in
pop
jns
push
les
in
adc
ret
lods
xor
mov
add
jp
ljmp
xor
xchg
scas
xchg
test
adcl
or
adc
mov
repz
add
pop
outsl
mov
mov
mov
xor
push
movsl
xor
out
push
in
xrelease
adcl
mov
push
bound
mov
jb
push
leave
imul
or
ret
mov
mov
jnp
outsb
jnp
push
stos
in
repnz
aaa
and
in
mov
add
pop
lock
sub
aaa
pop
in
jecxz
test
in
push
insb
sarl
mov
mov
jbe
mov
cmp
in
push
sbb
xchg
push
sbb
out
lock
in
leave
fcomps
outsl
push
and
and
pop
lret
mov
enter
repz
cmp
push
push
in
push
dec
mov
loopne
cmpsl
cmp
sbb
insl
pop
fdivrs
fstps
pop
sti
out
stos
and
pop
cli
test
ss
ljmp
hlt
mov
dec
ret
cmc
jae
shll
outsl
pop
scas
mov
jecxz
and
nop
dec
repnz
or
mov
xor
scas
fwait
dec
fs
cmp
test
or
call
cld
cli
push
stc
ret
ljmp
test
push
jo
mov
fiadds
adc
jl
xor
and
pop
xchg
add
add
cmpl
dec
sub
jo
adc
pop
adc
pop
outsb
pop
mov
insb
mov
pop
aam
add
inc
lahf
dec
push
jecxz
arpl
fbld
addr16
es
pop
push
xchg
enter
dec
cltd
push
sub
cmc
and
test
lods
les
sbb
jno
cmpsb
sub
mov
pop
adc
sub
lods
inc
push
in
dec
jae
hlt
xchg
out
mov
loop
fsts
mov
fs
popa
data16
repz
jb
mov
cmp
inc
push
jbe
in
adc
mov
dec
push
insb
jae
sub
mov
pop
mov
shl
jne
inc
sub
iret
lea
xor
fs
xor
fstpl
push
jg
je
test
adc
scas
push
out
test
mov
push
pop
movsb
cli
cmp
test
lds
xchg
dec
sub
sub
nop
std
pop
popf
fdivr
add
mov
inc
jno
int3
ljmp
call
lcall
xchg
sub
cmc
out
out
rolb
cmp
xchg
faddp
pop
or
pushf
int3
xchg
pushf
setae
insl
mov
stos
mov
shrl
in
add
jl
push
mov
frstor
outsl
push
adc
lret
jo
je
fwait
sbb
leave
dec
out
sub
jge
sub
jg
pop
mov
inc
and
add
jl
sti
jg
cwtl
pop
rorb
mov
out
popf
fsubs
int3
js
int
fstl
aas
jge
fimull
bound
cltd
cld
sbb
dec
mov
out
loop
cmc
cmp
xor
ljmp
mov
fcmovb
repz
cmpsb
push
or
or
out
xor
out
ret
xchg
jns
out
pop
pushl
orl
int
imul
mov
sbb
data16
test
inc
ds
sub
adc
pop
jp
popa
sarb
in
or
ljmp
popa
add
js
jne
and
fdivrp
mov
cmp
adc
mov
int
inc
outsb
movsb
pop
mov
cmp
adc
mov
add
add
out
or
mov
bound
mov
mov
in
inc
dec
adc
mov
push
ret
xor
add
mov
int3
and
or
das
ficomps
sti
data16
sbbb
cmp
iret
fwait
or
jo
clc
repz
out
adc
stc
jp
stos
repz
mull
fwait
sbb
decl
xor
cmp
mov
fistl
test
cli
fwait
in
inc
arpl
sub
inc
adc
mov
mov
notb
dec
push
movsb
push
out
out
mov
mov
adc
daa
push
repz
nop
stos
fmuls
test
push
cmp
pop
andl
cmp
roll
pop
add
das
and
jmp
ss
stc
push
and
jne
jg
add
push
adc
jns,pt
push
jl
pop
imul
jl
add
sub
lea
shrl
je
or
ret
cmp
push
mov
insl
lcall
mov
les
nop
rsm
xor
xchg
lret
adc
shl
daa
mov
push
add
popa
xor
xor
sbb
cmpsb
in
out
cmp
es
push
dec
sbb
inc
ret
cmp
outsl
pushf
lods
dec
jb
dec
arpl
fimuls
divb
dec
bound
jge
dec
cmp
stc
cli
lea
clc
jbe
cmc
icebp
xor
testl
imull
aas
das
jno
jae
fidivs
sbb
push
out
cmp
neg
dec
adc
fwait
js
cmp
or
and
mov
pop
pusha
pusha
cmpsb
mov
lods
idiv
lret
sbb
aas
push
insb
dec
jb
iret
and
ja
int
mov
cmpsl
rolb
fisttpll
lcall
insb
jge
cmp
xor
and
movsl
lods
fsubl
xchg
aaa
inc
js
or
mov
popa
push
jge
sti
mov
sahf
jecxz
push
inc
fcomp
or
cmp
jno
outsb
rorl
aad
ja
fadd
movsl
in
xchg
mov
mov
nop
xchg
mov
inc
mov
adc
sub
aas
jl
xor
adcb
cmp
mov
mov
and
cmpl
out
jle
cltd
mov
mov
jae
and
xchg
int
pushf
pop
sub
out
push
sbb
push
add
in
push
loop
sbbb
enter
pop
fcmovnb
and
dec
fsts
js
sti
roll
in
dec
in
dec
add
cmc
mov
mov
mov
mov
push
adc
hlt
imul
and
cli
movsb
sub
mov
jns
xlat
add
rcrb
pop
adc
sbb
outsb
jno
stc
sub
out
mov
dec
data16
and
sbb
gs
pop
out
xchg
and
push
jmp
fidivl
mov
jbe
mov
xchg
push
mov
xchg
imul
in
repnz
jbe
pop
xchg
fidivs
arpl
or
icebp
call
cmpsb
jle
fldcw
or
pop
popf
and
dec
push
js
stos
push
cwtl
xchg
in
aad
mov
push
clc
dec
jbe
dec
daa
mov
add
sbb
mov
lahf
lret
fadds
es
cmpsb
out
or
mov
test
push
dec
add
mov
pop
mov
push
shll
movsl
or
aam
adc
scas
mov
lods
insb
pop
ficomps
bound
pusha
sbb
fwait
xor
sub
aaa
xor
sbb
es
sti
fstpt
jne
cmp
hlt
shll
adc
shlb
xor
outsb
jne
in
in
inc
lods
inc
icebp
mov
push
push
pop
pop
fbld
and
movsb
push
xchg
or
xor
xchg
mov
xchg
or
sub
out
fadds
xor
stos
sbb
cmp
xor
adc
subl
inc
das
pop
rcll
pop
sub
sub
pushf
jp
sub
out
xchg
stos
mov
fdiv
dec
sbb
jmp
sub
mov
mov
lock
out
push
dec
or
mov
mov
mov
gs
mov
fnstenv
outsl
push
or
jge
cmp
in
cli
jge
mov
or
adc
pop
push
dec
xchg
xor
int
sahf
or
jmp
jmp
pop
xlat
lock
xor
aas
outsb
push
std
and
adc
stc
push
pop
and
push
inc
lret
call
bound
ret
push
and
test
cmp
adc
cs
push
mov
mov
popf
mov
xor
jne
ret
or
add
clc
sahf
fsubp
scas
hlt
add
sti
xlat
dec
ja
lods
out
xchg
in
inc
cltd
mov
xchg
pop
push
movsl
fisubrl
mov
xchg
or
stos
xchg
scas
push
ds
rcrl
dec
ss
xchg
pusha
jnp
dec
xchg
xchg
mov
pop
leave
sub
lods
lea
inc
push
xchg
xchg
xor
jae
inc
neg
movsb
sbb
test
and
sbb
pop
xchg
xchg
mov
int
notb
jecxz
pop
mov
adc
out
xchg
int3
lds
call
jns
xchg
loope
mov
push
xchg
fnstenv
es
push
daa
lods
xor
dec
stos
lea
jno
adc
shl
push
loope
arpl
loopne
push
shl
add
mul
mov
popf
lock
shll
add
xchg
fwait
inc
lds
movsb
sbb
shrb
and
fs
fidivs
movsl
jp
out
loopne
inc
cmpsb
jl
stos
std
out
fldt
test
adc
scas
mov
mov
xor
mov
call
sbb
jmp
push
jnp
inc
fdivl
imul
cs
sub
cmp
bound
mov
ds
sub
xchg
add
loope
cld
repnz
cmp
xchg
mov
int
bswap
cwtl
jnp
xlat
push
jnp
leave
mov
mov
jo
ss
and
pop
dec
clc
dec
mov
lahf
subb
scas
and
mov
jge
sub
inc
add
andl
mov
pop
adc
pop
push
jp
test
adc
and
push
dec
or
inc
xor
bound
ljmp
aas
aas
in
sti
mov
xchg
xchg
and
xchg
xchg
add
or
les
movsb
push
pop
sub
inc
sahf
jo
psubsw
cmp
leave
imul
js
mov
scas
adc
dec
icebp
daa
lods
cmc
repz
mov
rorb
or
mov
lahf
jle
out
mov
mov
in
xchg
jecxz
inc
popf
push
xchg
adc
or
sarb
or
imul
mov
or
push
jmp
xor
imul
iret
fbld
push
jl
sbb
push
push
aaa
ljmp
ffree
jnp
add
xor
mov
stc
stc
scas
call
inc
outsl
add
pop
dec
stos
je
pushf
sbb
loope
jecxz
sbb
mov
mov
fdiv
dec
mov
add
cld
repnz
cmp
ljmp
repnz
sbb
push
pop
mov
jae
pop
out
jno
jge
inc
cmp
ret
add
mov
adc
sub
lods
test
jle
pop
jno
pusha
mov
mov
icebp
cmp
bound
pusha
or
mov
out
xchg
mov
adc
mov
mov
sub
adcl
test
cmc
lret
sti
mov
in
cmp
mov
and
xchg
add
ljmp
sub
sbb
stos
mov
xor
es
idivl
cmp
clc
inc
xchg
add
jg
push
dec
shl
imul
xchg
icebp
addr16
in
enter
ss
xchg
stc
or
imul
or
sbb
jns
lret
imul
pop
mov
test
dec
mov
pop
push
mov
mov
cmpsl
enter
hlt
mov
xor
jo
jo
mov
clc
adc
negl
stos
cwtl
pusha
fldl
adc
ljmp
sahf
jbe
mov
insl
pop
and
jp
std
dec
inc
mov
test
mov
shrl
fxch
hlt
mov
rclb
lock
jne
xchg
jecxz
mov
sahf
jbe
outsl
pusha
jge
mov
fs
mov
add
mov
jns
xchg
dec
movsb
push
or
push
int3
lea
mov
daa
sub
mov
test
ds
outsl
and
mov
xor
push
lods
rcrb
mov
pop
xor
das
je
lods
inc
inc
ds
aaa
pop
call
push
lods
sar
ja
pop
stos
movsl
jno
cmc
add
std
hlt
test
adc
dec
jnp
xchg
je
lahf
sub
cmp
or
dec
fistl
add
sbb
xorl
adc
fisttps
cli
adc
jle
mov
dec
mov
jne
cwtl
jmp
repz
fwait
adc
add
inc
sbb
push
stos
jge
out
or
xchg
les
imul
jbe
cmpsb
or
push
pop
mov
push
cwtl
js
dec
sub
out
es
roll
je
loope
add
and
lret
add
add
jp
mov
sar
jbe
mov
mov
mov
mov
and
sbb
cld
pop
icebp
xchg
mull
rcl
mov
stos
mov
int3
mov
leavew
cs
sbb
imul
jmp
pop
mov
xchg
push
mov
lods
push
xor
not
mov
subl
push
lret
mov
imull
push
ror
in
mov
subl
xchg
das
loopne
jg
sti
not
arpl
daa
inc
pushl
loop
add
cs
sbb
sub
add
pop
test
sub
inc
in
xchg
jmp
xor
sub
insb
pop
aam
dec
pop
inc
mov
push
cmp
mov
scas
stc
ds
movsb
or
xchg
mov
sbb
lods
sub
pop
ficompl
push
aam
jmp
in
lcall
scas
sbb
xchg
push
std
aad
cmpb
adc
and
ficomps
lods
int3
fs
jb
push
mov
in
sbb
std
jg
pop
jle
mov
mov
dec
sbb
cmc
repz
arpl
push
adc
cmp
aam
and
push
testb
jb
sbb
pop
and
aaa
lret
cmp
cld
adc
lret
adc
lods
add
pop
mov
or
divb
cmp
xor
out
lods
pop
aaa
jg
sti
sub
in
ljmp
fisubl
or
je
mov
inc
jbe
leave
imul
mov
dec
stos
int
jmp
outsl
pop
adc
fdivp
cltd
add
les
out
xchg
xor
mov
push
push
sub
push
out
lret
pop
pop
rclb
ljmp
jne
gs
adc
push
mov
daa
dec
and
and
push
daa
cltd
out
inc
pop
movsb
pop
mov
jns
jno
notb
ds
repnz
mov
clc
mov
sbb
xlat
aad
movsl
dec
or
imul
mov
fsubr
cmp
sub
push
and
nop
sti
push
pop
push
fists
int3
xor
addr16
fcoms
iret
fimull
and
pop
pop
xchg
repnz
stos
jmp
dec
add
test
sbb
aam
cmpsl
inc
test
icebp
fldcw
call
shrl
mov
fs
daa
sub
leave
sub
inc
call
xchg
or
mov
jbe
test
add
ror
enter
cmp
mov
push
fcomps
lcall
aad
addr16
mov
je
pushf
mov
mov
movsb
sub
mov
sub
push
hlt
imul
or
adc
sub
ret
fildll
jle
imul
xchg
add
lcall
or
outsl
push
popf
and
cmpsl
arpl
mov
jle
stos
call
xor
sti
fcoml
in
std
int
or
inc
test
pop
fisttpl
jmp
inc
iret
ds
mov
or
mov
or
fiaddl
mov
into
adc
push
xor
cmc
shlb
mov
jne
lods
jnp
lahf
rcr
fmuls
rorb
cmp
pop
adc
and
out
std
sbb
mov
pop
cmc
ret
rcll
sti
adc
jge
ss
in
js
stc
and
cmp
adc
adc
mov
fcomp
movsl
inc
leave
mov
xchg
loopne
fnstenv
mov
mov
fisubs
mov
cs
push
les
push
vmovq
insl
jno
aas
out
xchg
cmp
jle
das
dec
dec
add
loop
jae
dec
cmp
pop
inc
cltd
jnp
sub
lods
jg
cli
jle
nop
lret
and
jno
xchg
das
jmp
lahf
shll
pushf
in
ljmp
push
add
xchg
icebp
push
call
sbb
jb
cmpsb
dec
gs
cltd
nop
fsub
data16
adc
lods
jmp
in
rolb
test
xor
adcb
mov
push
cli
test
mov
pushf
mov
ljmp
sbb
xchg
popf
push
dec
mov
and
xchg
push
mov
pusha
in
loopne
mov
push
xchg
xchg
push
pop
mov
mov
cmpl
lret
movsl
xchg
aad
rep
push
pop
ljmp
cld
mov
aam
jge
clc
cmc
mov
or
scas
stos
sti
push
jg
lea
mov
subps
xor
sub
fdivl
gs
and
fcompl
push
jns
stos
rorl
aam
inc
add
ret
pop
in
xchg
data16
fnstenv
adcl
sub
mov
mov
sub
cltd
leave
ds
cmp
lcall
dec
cli
aas
xchg
pop
cli
dec
push
in
mov
aas
clc
cmp
mov
test
jns
loop
dec
dec
adc
jg,pt
je
inc
insb
lds
cli
dec
mov
int3
and
mov
scas
pushf
imul
sub
xchg
cmp
in
pop
xor
jle
int3
in
xlat
pop
leave
gs
push
xchg
xchg
xchg
xlat
into
fistpll
pop
mov
cli
scas
lods
test
call
ljmp
imul
xchg
xchg
mov
mov
addl
cmp
cmp
dec
sub
aam
jmp
inc
in
xchg
in
xchg
scas
loope
cmp
jmp
lods
popf
mov
hlt
xlat
into
xchg
jns
fsubrs
popa
cwtl
or
push
lret
xchg
push
xlat
lret
shrl
inc
add
mov
cwtl
xchg
push
repz
data16
sbb
jmp
adc
cli
rcrb
pop
pop
jmp
iret
cmp
sub
jmp
imul
dec
inc
fwait
lret
nop
jne
jge
dec
pusha
adc
testl
or
add
in
std
or
int3
jg
ret
jnp
mov
cmpsl
inc
gs
sbb
in
inc
lret
insb
cs
icebp
leave
sub
sub
jl
jl
std
incb
inc
jb
lods
loop
lock
and
divl
push
aas
mov
xchg
cmp
inc
outsb
jne
lods
dec
mov
jl
lock
xor
xchg
stos
push
stc
cltd
in
imulb
xchg
or
fmul
jnp
ret
cld
popf
adc
ljmp
mov
and
push
pop
xchg
popf
es
push
inc
test
es
pop
fisttpl
cwtl
into
mov
or
mov
mov
cs
xlat
fists
mov
mov
insl
stos
imul
arpl
iret
int
mov
xor
in
fwait
int3
cmp
addr16
and
pop
pop
cwtl
repz
lret
cmp
fwait
roll
repz
aas
mov
mov
mov
hlt
push
nop
pop
cmp
ffreep
dec
insb
or
fstl
push
vpunpckhbw
pop
fs
xor
pop
pop
cmovge
mov
sar
fistps
daa
cmp
shll
sar
push
imul
xchg
sti
test
shr
enter
sub
mov
pusha
fnstsw
push
mov
aad
xor
scas
push
stos
or
lds
faddp
ss
pop
cmp
dec
aas
inc
adc
dec
mov
das
cs
imul
pop
addb
sub
in
outsb
or
pop
mov
add
and
lea
xchg
adc
mov
lcall
xchg
andb
mov
push
and
mov
jle
xchg
push
scas
cmp
ljmp
adc
xchg
fcomps
pusha
andl
outsl
jne
shll
fcoml
out
hlt
pushl
aam
mov
sub
mov
pushf
scas
push
ja
mov
mov
push
test
movsl
pop
mov
sahf
inc
icebp
xor
nop
push
pop
mov
cmp
push
je
lret
pop
dec
pop
xchg
repnz
rorl
mov
ret
cmp
push
or
add
shll
lahf
jp
movsl
insb
repz
shrb
iret
stos
inc
roll
xacquire
sub
std
sbb
fstl
lret
pop
loop
and
testb
test
sbb
sub
sub
sahf
bound
sarb
ja
gs
cmp
insl
mov
push
cld
add
mov
sahf
mov
inc
mov
xor
jl
in
inc
mov
and
adc
int3
xchg
dec
mov
testb
adc
inc
inc
lods
pop
int
push
movb
inc
test
pop
test
add
inc
mov
and
add
in
loopnew
or
loopne
sar
pop
out
das
xchg
subw
cwtl
xchg
int
mov
jo
out
daa
aaa
cwtl
mov
sbb
push
dec
mov
inc
je
dec
hlt
mov
sbb
int3
jns
in
mov
in
jl
in
roll
inc
outsl
mov
jb
int3
inc
pslld
movsl
pop
dec
jge
dec
jge
and
inc
rcrb
mov
mov
lods
xchg
lds
inc
add
clc
mov
xchg
cmpsl
fimuls
cmp
std
mov
jo
subb
sarb
aad
cmpsb
mov
repz
push
sbb
repnz
dec
in
or
test
call
imul
jmp
pop
xchg
push
inc
pop
sub
mov
pop
inc
push
shr
jno
loope
cmp
gs
lods
cmpsl
shll
shrb
mov
fists
lods
xchg
cmp
movl
sub
stos
stc
mov
addr16
xor
and
mov
bound
sbb
jl
mov
inc
fwait
or
stos
pop
sbb
jb
imul
jae
shrb
mov
movsb
pop
mov
dec
lcall
testb
loop
pusha
sbb
push
mov
mov
ja
inc
xor
add
imul
popa
cmp
imul
ret
repz
lea
sarl
jmp
hlt
iret
shll
adc
sub
adcl
cs
ret
repnz
fildl
loopne
inc
cli
and
leave
mov
pop
pushf
jg
invd
lods
jecxz
sub
idivb
das
lret
xlat
cmc
xor
mov
push
xlat
das
cld
or
pop
mov
sbb
in
fnstsw
sti
aas
loope
rclb
add
shlb
cmp
pop
cltd
add
xor
mov
leave
imul
push
jle
ljmp
dec
fldcw
push
pop
shll
pop
mov
adc
ret
sahf
shrl
imul
lods
cmp
push
adc
push
call
cmpsl
hlt
pop
inc
aam
mov
jns
push
inc
lcall
loope
arpl
mov
arpl
js
mov
int
rcl
in
das
pop
add
arpl
les
iret
mov
adc
mov
js
les
or
in
dec
dec
mov
aad
inc
bound
push
sub
aam
jo
push
stc
add
mov
ja
xor
push
test
sbb
sahf
je
pop
leave
dec
xchg
cmpsl
movsl
adc
sub
add
jno
stos
sbb
jmp
or
push
outsb
xor
lods
add
jmp
mov
mov
push
xchg
je
out
jo
je
fcompl
mov
mov
sbb
repz
and
jl
mov
sub
mov
add
inc
lock
push
sub
mov
bts
or
and
cld
pushf
mov
cmp
adc
inc
les
inc
jb
mov
sub
mov
push
repnz
ret
jne
sbb
mov
sbb
xor
and
in
jae
mov
add
jae
or
adc
xchg
mov
mov
sbb
mov
mov
jbe
sarb
jg
jne
mov
sub
sub
mov
pop
pop
mov
mov
push
sti
xchg
adc
xchg
cld
lahf
pop
imul
pop
daa
test
mov
jmp
cltd
inc
jns
sbb
jge
stos
stos
mov
arpl
aam
test
fsub
daa
daa
pop
xchg
shll
mov
pop
mov
or
faddl
inc
fistl
mov
cmp
push
sub
cmpsb
out
mov
sbb
rol
jb
and
call
mov
xor
sbb
pop
aaa
cmp
sub
xchg
or
ja
addr16
ds
jbe
int
jmp
shlb
jae
mov
xor
popf
scas
jge
add
rcrl
gs
jo
xchg
sbb
repz
stos
maskmovq
mov
jg
jne
movsb
nop
jnp
inc
jge
xchg
xor
xlat
cs
push
sub
sbb
push
fcompl
xchg
out
movsl
popf
data16
iret
aad
jmp
mov
mov
sarl
rorb
jno
pop
sbb
daa
dec
cmp
mov
sarb
nop
sbb
or
hlt
inc
inc
xor
mov
mov
call
push
fidivs
adc
mov
ds
movsl
stos
pop
inc
jno
jb
iret
mov
xchg
cld
or
jno
loope
stos
ficoms
repnz
jae
cmp
imul
btc
mov
in
in
or
mov
mov
pop
xchg
out
sar
out
mov
sbb
loopne
daa
sbbl
adc
and
stos
mov
jb
popa
inc
in
sub
ret
jne
adc
sbb
jnp
add
sbb
mov
rclb
ljmp
jns
or
ss
inc
push
xchg
jle
loope
mov
aam
pop
inc
mov
cs
cld
mov
sbb
mov
sbb
inc
das
or
outsb
xor
mov
or
out
push
jg
mov
rcrb
pusha
or
das
std
fldt
pop
es
xchg
aam
dec
mov
das
jns
push
inc
push
xor
mov
mov
ret
and
push
xlat
shl
movsl
pushf
cltd
jecxz
pop
loop
aad
xor
pop
pop
shll
test
in
xor
sbb
xchg
cmp
push
inc
mov
enter
jbe
jmp
out
pop
xchg
sbb
and
add
scas
xlat
jp
mov
stc
lock
add
repz
and
je
xor
ljmp
xchg
xor
or
cmp
dec
hlt
lcall
sub
lods
scas
fidivrl
outsl
sub
sbb
imul
add
pushf
clc
pop
fucom
push
push
mov
push
mov
mov
call
pop
mov
outsl
lock
aas
push
out
int3
cmpsl
fcmovnu
test
cmp
out
jle
inc
sub
cmpsl
push
iret
cwtl
and
xchg
in
adc
and
inc
out
mov
cltd
out
std
or
xor
cmp
dec
push
jnp
in
aad
xchg
sbb
out
xchg
sti
in
mov
adcb
push
into
dec
daa
inc
notb
xchg
pop
lcall
aam
in
in
arpl
and
in
ja
shlb
sub
lds
sbb
in
out
fildll
scas
out
scas
movb
push
in
jecxz
dec
movsb
inc
aaa
lock
cwtl
loope
adc
mov
outsb
jl
orb
lea
push
std
daa
test
into
or
xchg
adc
and
mov
cs
cld
fimull
jb
adc
cmc
lea
idivb
lds
dec
je
std
xor
clc
dec
dec
jecxz
out
xor
stc
sbb
pushf
out
xlat
addb
pop
or
arpl
lret
mov
jg
or
and
and
mov
or
push
xlat
jno
dec
int
das
push
out
add
inc
mov
mov
fwait
cmp
xor
pusha
xchg
cmp
leave
dec
jns
lock
mov
mov
adc
push
mov
xchg
jae
pushl
scas
push
xchg
in
and
test
pop
clc
imul
mov
mov
pop
jecxz
mov
adcl
jae
sti
int3
mov
hlt
ss
cmp
fmuls
ret
xlat
xlat
test
into
nop
pop
js
jge
mov
jp
and
push
nop
sub
mov
lods
cmp
add
ficoms
add
xchg
pop
push
into
out
jbe
icebp
shlb
int
cmp
pusha
fmul
in
add
lods
cmp
lea
jl
inc
mov
adc
mov
push
sahf
lret
push
xchg
loopne
sub
xchg
xchg
and
mov
ficompl
rcll
lret
or
xor
cltd
adcb
xchg
jle
cmp
xor
and
ds
dec
enter
insb
fs
sub
jle
int
and
lahf
jecxz
in
popf
cmc
fwait
imul
pop
jle
dec
xchg
les
cmp
repz
iret
lods
popf
ss
aad
pop
lret
mov
pop
add
inc
fstpt
pop
out
push
mov
dec
xor
xor
iret
std
sub
xlat
test
mov
jg
lahf
pop
gs
lods
aaa
mov
xor
rcr
inc
pop
inc
sbb
cmpsb
push
pushf
aaa
cld
mov
addr16
inc
xchg
js
aam
mov
mov
in
jle
pop
movsb
mov
stos
dec
and
push
cs
test
fistpll
xorl
pop
and
mov
dec
and
pop
cmp
repz
ret
mov
mov
mov
stos
xchg
fptan
jae
mov
mov
test
fistpll
push
ds
dec
out
xlat
test
add
adc
test
sub
adc
jmp
lock
fs
cmp
lret
xlat
and
xchg
pop
es
and
cld
sbbl
sub
jnp
fwait
lcall
call
xchg
int
mov
aas
add
adc
nop
outsb
pop
inc
subl
sub
pop
or
ja
jns
jle
cmp
sbb
fmul
dec
adc
sbb
adc
imul
sbb
mov
mov
mov
inc
xchg
std
or
or
push
jbe
clc
sbb
add
mov
adc
stos
or
mov
dec
repnz
push
mov
lret
mov
push
testl
movsl
dec
sbb
mov
es
mov
lcall
mov
adc
mov
mov
push
fcomip
xor
cld
cli
call
cld
cmp
xchg
inc
xchg
push
xchg
xor
rclb
das
lods
fnsave
test
xchg
test
pusha
mov
inc
xor
xlat
and
cwtl
dec
in
dec
jnp
add
outsl
cmpl
fcompl
xor
mov
repz
clc
mov
jmp
cmp
aaa
push
ja
fwait
enter
or
aad
shr
sbb
mov
ljmp
add
xor
out
lock
lock
inc
int
mov
push
adc
jge
mov
mov
testl
lcall
into
int
pop
mov
adc
dec
inc
loope
clc
lods
lahf
shrl
mov
incb
rolb
or
cmpsb
dec
nop
jbe
ja
mov
lret
dec
push
sbb
addl
call
and
inc
cmpl
mov
aas
xlat
mov
sbb
daa
mov
and
xchg
aad
xor
or
jle
shl
push
mov
rdmsr
ficoml
insl
mov
inc
aam
mov
cltd
inc
pop
test
push
dec
and
pop
cld
cmp
push
xchg
and
sbb
or
pop
sub
mov
outsb
ja
cmp
mov
adc
mov
mov
repnz
out
jp
insb
out
push
cmpsl
bound
ficoms
sub
sbb
insl
lcall
sub
sahf
fnsave
ret
sti
daa
int3
mov
sub
or
fdivs
mov
ds
mov
cld
or
sub
push
leave
mov
out
imul
loope
pop
std
js
je
mov
cs
out
ficoms
mov
push
add
adc
ds
pop
jg
jp
xchg
insb
dec
lret
outsl
jge
sub
int
and
jno
adc
into
loope
xchg
push
pop
pop
scas
fistl
shr
movsl
fcmovnb
xor
dec
insb
idivl
fnsave
push
cli
insl
sub
mov
cmpsl
add
cmpsl
mov
or
jae
hlt
xlat
xor
push
cmp
dec
cmp
aaa
add
fimuls
fbstp
jnp
jmp
mov
out
inc
push
lea
jne
les
mov
test
and
insl
xchg
rorb
lock
pop
pushf
mov
and
push
les
mov
sub
stos
call
jo
rcl
mov
mov
inc
mov
test
sub
movsb
xchg
cmc
xchg
std
or
pop
dec
xchg
les
shrl
out
iret
icebp
call
loopne
mov
jmp
inc
xchg
xchg
pop
insl
arpl
jp
xor
mov
push
push
or
or
and
movsl
test
cmp
repnz
push
stos
jo
js
sbb
loopne
mov
xchg
loope
sub
pop
sti
in
add
dec
or
jo
gs
or
jg
aam
fsubrl
sbb
xchg
fnstcw
mov
xchg
addr16
test
ret
loope
push
imul
imul
lret
mov
leave
mov
inc
inc
and
shlb
xchg
pop
loopne
adc
and
test
cmp
push
out
int
ljmp
mov
jnp
pop
push
push
out
fs
cmp
dec
jge
mov
daa
cmp
mov
push
arpl
cmp
icebp
jno
stos
fsub
pushf
outsl
mov
jg
cmp
repz
sbb
lcall
and
jmp
and
xchg
hlt
push
mov
lret
mov
stos
imul
fs
xchg
je
sub
dec
out
insl
sbb
sbb
add
inc
ljmp
test
add
fidivrl
into
rcll
aad
push
jp
mov
mov
add
mov
cmp
cli
mov
mov
popa
imul
cmp
loope
pop
inc
cmp
jmp
dec
push
sub
lds
or
sbb
adc
jge
push
pop
repnz
fcompl
fsubrl
add
imul
inc
testl
adc
push
call
sar
fstpt
out
dec
je
xchg
adcb
push
scas
mov
xchg
mov
cmpb
adcb
inc
aad
lods
cmp
inc
mov
jbe
jp
push
stc
mov
mov
mov
es
test
xchg
jle
xor
or
sbb
aam
xorb
jns
push
das
in
aam
rcrb
jo
jbe
das
fnstsw
jo
pop
test
outsb
lock
fstps
movsb
jae
push
cmp
movsl
ss
cli
pop
in
call
enter
leave
pop
xchg
mov
mov
sub
fcmovbe
lods
mov
incb
jne
sub
mov
ljmp
add
mov
ss
or
pushf
pop
xchg
fstpt
sbb
inc
imul
cmp
xlat
sbb
out
hlt
icebp
jno
mov
icebp
shlb
add
push
jo
mov
dec
das
test
mov
and
dec
dec
stc
std
push
aam
lea
dec
jecxz
mov
addr16
mov
popf
add
mov
sarl
icebp
xchg
push
jo
fisubl
mov
push
rol
xchg
mov
dec
lahf
mov
scas
enter
fidivl
mov
or
idivl
and
cmc
stos
cmc
pushf
jbe
les
adc
adc
fisttpl
std
pop
loopne
cld
mov
lret
dec
aaa
mov
nop
xchg
mov
mulb
jg
inc
fsts
xor
xchg
fwait
scas
lret
in
mov
and
gs
mov
lock
lret
and
lcall
pushf
imul
rcrl
sub
fistps
add
jnp
sbb
sub
dec
ljmp
sub
inc
xchg
test
adc
mov
popa
aad
movsb
push
sbb
jp
sbb
into
and
push
ss
in
push
mov
daa
mov
xchg
dec
add
testb
shl
mov
mov
fwait
jne
add
ret
sahf
mov
bound
pushf
das
xchg
aad
aaa
and
lods
outsb
push
cmp
outsb
sub
cs
mov
cld
bound
mov
jnp
dec
pop
mov
ss
jbe
inc
push
adc
int
and
mov
xchg
sahf
hlt
push
fwait
dec
mov
leave
jae
loope
fimuls
lods
shll
jmp
mov
mov
aad
imul
clc
and
pushf
or
lret
out
xsavec
arpl
adc
push
shll
test
sub
push
fistl
xchg
loop
cmp
pop
mov
call
cmpb
aad
cli
js
pop
dec
insb
dec
movsl
pop
in
push
mov
xchg
hlt
fistps
cli
into
int
icebp
loopne
adc
dec
sti
jle
out
sub
xchg
mov
sahf
xchg
lret
mov
sahf
adc
push
cmp
pushf
call
sub
mov
mov
sbb
int3
jns
jmp
jge
xchg
jp
shrb
push
outsl
xchg
mov
jmp
ret
popa
repz
data16
or
mov
cmp
popf
xrelease
pop
mov
pop
test
mov
movsb
call
mov
aam
rorb
shll
ljmp
sub
mov
ja
and
sub
outsl
push
and
xor
fimuls
daa
mov
aam
sbb
icebp
fists
sub
mov
je
imul
pushf
mov
flds
int3
sub
pop
xchg
pop
jb
adc
jl
in
fstpl
lods
push
xchg
sarb
mov
xchg
out
xor
pop
in
or
outsl
popa
mov
xlat
cmp
pop
stc
insl
mov
cmc
into
add
fnstsw
sub
idivb
call
add
or
cmp
mov
sbbb
mov
lret
inc
xor
cmpsb
add
pop
js
mov
inc
pop
sub
fsubs
repz
cld
mov
and
repz
insl
ja
xlat
xchg
fistps
in
pop
push
pop
pop
push
sub
mov
enter
adc
jae
mov
fbstp
jnp
loop
pop
vpackssdw
cmp
imul
dec
adc
enter
pop
adc
repz
in
inc
repnz
pop
ss
movsl
pop
push
scas
addr16
mov
out
iret
insl
addr16
lock
inc
movsb
xchg
fs
or
mov
andl
cmp
sahf
aaa
and
xor
into
popf
jge
dec
sbb
imul
shl
ss
nop
inc
mov
mov
repnz
aas
jg,pn
outsl
xchg
imul
ret
dec
sub
mov
pop
xcrypt-cfb
cmpsl
loope
rcrl
out
iret
lahf
sarb
pop
sahf
add
add
cmpsl
mov
mov
cmpsl
mov
icebp
xchg
imull
lods
fwait
jb
call
mov
jae
hlt
add
cmpsb
hlt
dec
pop
jbe
mov
mov
je
iret
aam
js
lcall
and
jge
out
lcall
add
sub
shl
fstps
test
mov
pop
int
inc
pop
ds
sahf
icebp
aaa
into
lods
inc
jl
dec
int
lahf
into
outsb
dec
mov
into
or
ret
inc
inc
mov
add
jmp
cmpsl
sahf
sti
fwait
push
movsl
jle
lods
icebp
or
xchg
mov
pop
mov
aaa
cmp
xchg
inc
clc
sbb
jecxz
lret
cmp
daa
subb
cld
inc
fidivrs
pop
cwtl
adcl
inc
aad
adc
jmp
shl
pop
sbb
lahf
add
sbb
popa
jmp
xchg
sbb
mov
and
mov
mov
mov
into
lahf
test
aad
push
push
notb
mov
ret
addr16
jbe
gs
mov
outsb
dec
into
ja
dec
mov
leave
push
xor
pop
ret
sbb
push
push
sti
sub
leave
mov
gs
jbe
lock
mov
and
mov
fmull
daa
pop
scas
mov
es
test
das
push
or
sub
or
int3
push
ret
cmove
dec
cmp
sbb
push
pop
iret
shl
mov
jge
jae
mov
jbe
nop
fcomip
pop
cmp
pop
adc
fbstp
je
es
loop
dec
pop
add
call
clc
push
or
jecxz
add
outsl
bound
and
rorl
and
push
aam
or
out
or
in
and
shll
ss
roll
cmp
mov
insb
cli
xor
daa
sahf
mov
push
push
xor
les
or
add
lock
mov
clc
adc
dec
lahf
xor
out
cmp
cld
mov
ljmp
das
sub
mov
fcoms
mov
adc
push
in
mov
inc
pop
inc
jnp
test
jne
xchg
inc
outsl
sarb
pop
fistpl
mov
dec
fs
aam
jne
and
add
popf
sti
pop
jbe
push
loopne
mov
xchg
jb
shl
xor
popf
dec
cmp
jae
and
test
icebp
sbb
enter
je
mov
push
movsb
ret
jns
cmovno
xor
stc
inc
call
mov
stos
xchg
js
inc
lret
add
jmp
aam
addr16
movsl
movsl
dec
rorl
and
aaa
js
dec
int3
cmp
inc
and
loopne
fiadds
sbb
mov
aad
and
in
or
pop
sub
jg
pop
xor
and
loop
popf
popf
jle
jns
mov
ja
loopne
adc
rorl
int
test
fnstenv
lea
sub
test
mov
iret
dec
xor
imul
mov
pop
add
inc
inc
push
inc
into
insb
rcr
cmp
add
dec
orl
fcomi
les
jle
xchg
aas
xchg
daa
fiadds
in
in
push
pop
mov
xchg
cltd
or
lcall
test
das
push
dec
bound
jne
pushf
sahf
pop
mov
xor
test
sti
rcrb
js
shlb
jg
xor
iret
xor
mov
cs
mov
adc
stos
jecxz
clc
outsl
sbb
loope
dec
mov
push
add
push
test
jg
sti
cmp
sbb
jmp
lods
mov
repz
pop
mov
int3
mov
sbb
dec
push
jns
mov
add
xchg
inc
xchg
mov
jno
dec
and
les
add
and
dec
jae
push
es
xor
and
addr16
jb
sbb
dec
and
and
fnstsw
neg
fcomi
mov
call
mov
jmp
mov
xor
add
push
jmp
lods
ljmp
mov
add
add
addl
insl
fsubrs
ds
xor
jecxz
ret
iret
js
push
lahf
push
xchg
and
mov
ss
cwtl
sub
pop
cmc
lds
and
mov
arpl
mov
jle
cmpsl
add
jmp
push
dec
ret
dec
rcrl
cmc
je
push
or
inc
in
int3
imul
jp
ljmp
stc
imul
jns
ljmp
mov
sbb
lcall
lock
in
inc
iret
aaa
sbb
push
pop
not
cli
xchg
test
add
jmp
out
outsb
nop
jecxz
imul
sub
pop
ret
and
rcrl
pop
test
push
xchg
add
cmp
cmpsb
andb
mov
inc
mov
bound
in
mov
and
mov
cltd
xchg
fisttpll
adc
clc
fsub
roll
dec
jg
popf
sub
jl
push
sub
xor
inc
out
push
cld
js
ss
ret
mov
mov
mov
jbe
hlt
int3
stos
and
mov
or
call
or
mov
jo
iret
mov
xor
jb
pop
add
stos
and
negl
stos
outsl
inc
mov
inc
dec
sahf
insb
not
mov
imul
and
movsb
pop
mov
mov
add
iret
mov
leave
into
aad
sbb
cmp
sub
test
inc
mov
cmp
je
sub
cltd
iret
notb
mov
inc
out
fwait
js
sub
mov
pop
scas
jb
repnz
pop
add
adc
lcall
out
imul
mov
loopne
cmp
mull
out
push
icebp
js
dec
scas
decb
insb
push
rcrb
mov
xor
ret
push
add
lret
inc
loope
test
imul
inc
out
mov
enter
lcall
push
in
or
mov
movl
mov
arpl
sbb
lret
cwtl
test
pop
xchg
jne
stos
fcompl
shrl
int
jp
add
in
xor
aaa
movsb
orl
push
leave
mov
pop
mov
mov
push
adc
jae
imulb
mov
sub
scas
cmp
adc
or
or
in
push
sub
sub
aaa
push
pop
ljmp
sub
inc
mov
movsl
out
jg
jno
shlb
cmpsb
arpl
stc
xchg
push
cvttps2pi
aaa
sbb
jg
jns
inc
jg
div
jb
sub
repz
ljmp
aaa
sub
outsb
in
sub
nop
adc
jnp
repz
cmp
push
xchg
clc
stc
orl
mov
mulb
out
dec
outsl
dec
xor
mov
inc
stc
sbb
ss
andl
pusha
dec
out
enter
fdivr
ss
dec
jne
cltd
and
movsb
mov
jge
mov
adc
pop
sti
and
push
adc
inc
sbb
repz
lods
je
je
xor
test
inc
xor
cli
out
sbb
out
aad
roll
inc
mov
rcrb
dec
cmp
pop
pop
xor
les
inc
decl
popa
in
push
lahf
ret
pop
rcll
cs
iret
popa
dec
popf
ja
call
test
into
addr16
sub
cmpsb
in
pop
lcall
add
fisubl
bound
xchg
lods
gs
int3
jns
pop
nop
push
int3
mov
adc
cmpsb
std
les
or
push
xor
mov
hlt
pop
mov
pop
fdivl
idiv
mov
mov
stos
cld
cmpsl
mov
dec
fstpl
mov
inc
xchg
mov
jle
ret
xchg
pop
aam
xchg
mov
imulb
lods
xchg
sub
movsb
mov
pop
adc
add
mov
movb
arpl
mov
aaa
cmp
xchg
sbb
and
std
push
inc
pushf
jle
cli
repnz
stos
stos
aaa
js
lret
push
shrb
cmp
stos
add
xchg
ljmp
aad
mov
mov
cmp
out
push
adc
pusha
aam
mov
cli
aad
cmpsb
call
add
lods
push
dec
test
and
jg
cld
jge
popf
lcall
rorb
push
inc
pcmpeqw
inc
filds
jle
out
and
in
mov
loop
ja
mov
sbb
fisubs
aad
jnp
popf
lret
xchg
inc
jmp
orb
lods
shl
mov
es
rolb
adc
cmpsl
pushf
push
scas
std
in
in
push
les
lds
movsb
dec
or
jge
clc
pop
imul
mov
mov
stos
mov
cmp
pop
fmul
jl
inc
push
and
fistl
rcrl
and
push
inc
imull
push
cmp
ret
hlt
fbstp
push
ret
mov
mov
lret
rolb
cmp
sbb
in
roll
add
jno
dec
out
cmp
pop
leave
rcl
fs
ret
sub
aaa
dec
sub
jl
mov
dec
push
jns
sahf
push
mov
cld
cld
mov
ret
mov
jmp
fimuls
out
jbe
jge
ja
aaa
hlt
addb
lods
or
repnz
mov
mov
clc
mov
jge
push
stos
stc
and
push
or
jmp
xchg
rol
iret
or
gs
enter
pop
scas
jecxz
imul
leave
sahf
inc
mov
push
mul
mov
mov
mov
enter
mov
mov
mov
lret
lahf
push
aad
fldl
push
divl
xor
sbb
adcb
pop
out
inc
cld
and
xchg
loopne
imul
mov
push
jge
jmp
imul
or
jp
push
or
das
cmpsb
inc
adc
mov
sbb
push
and
pop
or
in
pop
shll
sub
sti
jnp
ljmp
adc
pop
xchg
mov
in
mov
pop
mov
and
jge
push
outsb
in
out
dec
imul
sub
push
lods
xchg
in
cltd
xchg
pop
xor
xchg
js
js
xchg
aad
jno
mov
adc
dec
push
das
jbe
push
out
into
ret
dec
fdivrs
mov
pop
ja
dec
adc
bndldx
sbb
and
mov
in
mov
mov
adc
sti
ja
mov
dec
inc
in
in
fwait
pop
cmp
pop
jb
and
xor
mov
push
dec
and
repz
out
push
jg
and
arpl
xchg
cld
mov
inc
xchg
outsb
cmp
mov
jl
mov
and
dec
xchg
dec
sahf
push
fwait
xor
sub
adc
xchg
mov
xchg
cmp
sahf
mov
inc
imull
cmpsl
mov
popl
add
xor
cld
aas
test
jno
mov
mov
add
insb
call
pop
int3
into
arpl
dec
xorl
pop
pushf
lods
inc
test
cld
push
xchg
repnz
loope
sar
xor
jne
scas
push
mov
xchg
cli
fnstenvs
xchg
bound
jbe
pop
fisttpl
mov
in
out
imul
les
xchg
adc
insl
int
movsb
nop
cs
ret
sub
popa
or
adc
dec
lock
das
or
lahf
sti
in
negb
out
fisttpll
notl
xlat
test
rol
into
mov
lods
out
test
ficoml
loopne
cmp
call
or
inc
andl
nop
xor
arpl
xor
insl
pusha
xchg
shlb
jo
das
or
dec
stos
rorl
pop
inc
sar
sbb
mov
jecxz
cmovle
mov
or
and
and
xchg
fs
add
dec
repz
popa
imul
or
push
or
or
xchg
dec
and
jnp
push
lahf
xchg
push
shll
jnp
aaa
aas
xchg
xchg
xchg
aas
jg
pop
sub
ss
fcmovb
cmpsb
jne
dec
jl
pop
int3
sbb
subl
xor
pop
ljmp
negl
movsl
pop
sub
cmp
xchg
add
dec
aaa
xchg
out
sbb
mov
push
xor
add
mov
jecxz
fsubl
fildll
fisttpll
into
mov
fdiv
mov
in
es
cmp
mov
sub
cmp
mov
xchg
addr16
adc
or
dec
hlt
mov
lods
or
cwtl
mov
out
ja
cli
mov
dec
mov
push
pop
loop
loope
push
in
subl
xor
cmpsb
mov
dec
cmp
or
mov
jge
mov
cwtl
popa
imul
jle
or
xchg
sub
mov
push
pop
xor
sbb
ret
mov
mov
call
xor
outsb
test
popf
xor
movsl
cmpsb
and
test
mov
mov
pop
xchg
jne
or
mov
gs
jmp
pop
mov
jge
lods
mov
dec
dec
mov
cmp
sbb
inc
es
mov
dec
push
lock
popf
aam
sahf
rcr
or
or
jno
outsb
das
rcll
std
test
pop
mov
loop
xor
mov
test
mov
xchg
clc
mov
and
cmp
out
cmp
fidivrs
test
sub
sub
cmpsb
mov
jno
push
add
movsl
cs
or
loopne
imul
cmp
dec
push
in
jecxz
inc
in
jns
mov
and
rorl
or
mov
jmp
and
rolb
shrl
xor
jnp
cmp
es
roll
ret
outsb
mov
ret
add
dec
sbb
add
push
cmpsl
out
sub
mov
in
ja
push
ss
and
cli
insl
cld
mov
push
int
daa
add
jb
jecxz
jae
lds
imul
jmp
fimuls
and
mov
fsts
iret
pop
push
pop
mov
fimuls
mov
lods
xor
mov
push
bound
adc
in
in
add
push
sub
inc
xchg
inc
loope
scas
loop
jmp
cmp
jmp
jae
mov
sbb
fldcw
inc
mov
push
aas
in
mov
lret
js
xchg
or
pop
pop
movsl
std
mov
aam
mov
add
testl
ret
lret
aad
pusha
or
push
push
and
and
test
leave
and
dec
test
jle
add
dec
push
scas
cmpsb
fisubrl
mov
pop
pop
push
dec
cmovg
dec
pop
pop
es
imul
ds
pop
incl
pop
sbb
jmp
pop
jmp
test
mov
mull
into
jo
subl
xor
mov
and
and
shrl
pop
sub
sbb
testb
insb
ss
dec
movsl
shrb
sub
mov
cmp
and
fidivrs
xchg
das
sbb
pop
xor
call
pop
ret
dec
lock
mov
mov
fidivs
sub
in
push
inc
loope
inc
add
fisubrl
les
push
jecxz
push
popf
ljmp
dec
int
add
mov
sbbl
pop
mov
test
sub
insl
cwtl
mov
pop
jle
jo
in
cld
fildll
or
out
mov
jns
push
in
jmp
mov
push
insb
add
inc
add
lahf
loope
pop
sarb
cmp
fdivrs
lock
jae
jnp
cmp
stos
pushl
data16
xchg
in
jne
push
int
daa
pop
xor
cmp
push
sub
fs
cs
lret
jbe
push
sbb
and
mov
loope
ss
insb
push
lret
inc
add
jo
sti
pop
leave
aam
jnp
pop
and
in
xchg
mov
jae
jge
add
je
add
loope
ss
xchg
dec
sti
imulb
jmp
enter
out
xchg
mov
inc
mov
aaa
xor
inc
nop
es
jge
adc
movsl
sbb
and
ljmp
xchg
cmpsb
or
fistps
test
mov
les
sub
pop
cli
out
leave
add
icebp
mov
out
in
imul
mov
push
fwait
rorb
jl
int
push
pop
imul
pop
dec
fcoms
decl
test
sub
nop
sarb
ja
xchg
jecxz
aam
cld
pop
mov
mov
cmpsl
and
jge
js
movsl
scas
cs
les
test
mov
mov
sarb
hlt
inc
stc
dec
gs
aas
shlb
dec
adc
leave
mov
push
lods
pop
enter
adc
out
out
rorl
sarb
popa
mov
fstps
popa
jns
int
or
shrl
or
dec
mov
pushf
dec
aas
fwait
xor
sbb
inc
fs
dec
stos
push
cmp
pop
adc
inc
cmp
clc
fs
pcmpgtd
xor
scas
pop
push
mov
xchg
cltd
adc
xor
cs
mov
push
push
hlt
lods
sub
repnz
jl
repnz
sbb
popa
cmp
inc
sub
out
scas
scas
roll
sub
pop
push
and
or
cmpsb
arpl
in
out
movsl
adc
cli
ret
and
cmp
das
xor
and
lea
outsl
imulb
mov
aas
addr16
lds
rcrb
fadds
cmp
std
pushf
xchg
sbbl
xchg
ja
leave
mov
lret
popf
movsl
push
push
leave
ljmp
cmc
shll
imull
dec
mov
cs
inc
dec
mov
sub
adc
mov
xor
loope
sub
je
adc
push
fmul
mov
push
fcom
lds
cli
hlt
mov
adc
test
stos
scas
or
cwtl
movsb
mov
sahf
jmp
data16
iret
xor
icebp
hlt
jg
push
xchg
and
pop
ljmp
and
arpl
mov
lock
dec
xor
fisttps
jp
xor
pop
mov
test
subl
sbb
lock
cmp
xor
popa
mov
js
test
mov
pop
adc
fidivl
fsubl
lahf
sbb
xchg
gs
pusha
bound
in
mov
addr16
jne
les
inc
pop
out
jge
fistl
xor
pushw
fwait
andl
sub
ficoms
dec
xchg
add
jl
icebp
test
fwait
and
leave
aaa
outsl
insl
aaa
popl
int3
cmpsl
daa
in
or
sub
sbb
cli
mov
gs
negb
xor
mov
aaa
and
or
dec
fcompl
xchg
das
mov
ror
pop
cmpsl
addr16
jle
push
mov
roll
jb
jecxz
lcall
cvtps2pi
cmp
pop
jp
les
jl
push
outsl
mov
sbb
push
ret
jmp
lock
sub
sahf
stc
cmpsl
stos
inc
sbb
mov
inc
or
adc
jno
ret
push
sbb
fwait
addr16
cli
cmp
and
add
add
repz
mov
jmp
ljmp
or
cltd
push
cmp
jne
bound
adc
ja
add
cmp
sub
inc
loop
nop
xlat
cmp
in
xor
xchg
movb
mulb
and
outsl
sbb
fnsave
cmpsb
xchg
and
pop
jecxz
stc
pop
jle
lods
mov
xchg
daa
mov
mov
mov
pop
xchg
mov
repnz
jge
jne
subb
pop
stos
negl
or
jnp
dec
jg
test
es
inc
sbbl
insb
mov
mov
scas
cli
or
cmp
add
or
add
push
cwtl
sub
loope
inc
xlat
push
pop
cld
jbe
out
movsl
cmp
je
inc
addr16
adc
movsb
scas
sub
imulb
dec
push
fucomp
cmpsl
imul
cmp
xchg
ficoml
mov
mov
test
lahf
in
cmpsl
pushf
or
and
adc
test
leave
adc
mov
and
test
and
push
pop
sub
pop
test
sbb
push
push
pop
cmp
pop
into
sbb
dec
inc
add
sbb
adc
fdivs
sti
aas
insb
js
pushf
xor
cmp
arpl
sahf
idivb
data16
push
xchg
cmp
sbb
xchg
repz
loop
lahf
add
or
add
lret
pop
dec
adc
sub
outsl
dec
sub
add
mov
push
sub
clc
lcall
dec
in
sub
jns
fbstp
in
cmp
and
ds
adc
mov
fnstsw
test
jns
pusha
ficoms
stos
enter
push
sbb
mov
movsb
das
jge
sub
addr16
lret
mov
insl
popf
push
dec
push
inc
lods
fsubl
fisubs
sub
sub
add
jl
pusha
inc
fcomi
and
jmp
cwtl
lock
or
inc
xchg
push
and
push
push
xor
sbb
mov
test
mov
into
push
mov
pop
aaa
test
into
jno
fcmovnbe
or
repz
repnz
cmp
fsubp
sub
mov
in
mov
ljmp
xchg
sub
imul
and
cmp
stc
xchg
hlt
push
lret
dec
scas
push
xchg
and
inc
push
pop
ljmp
pushf
adc
scas
sbb
test
sub
pop
out
dec
mov
pop
filds
cwtl
sbb
es
xchg
data16
add
and
lea
lea
dec
mov
fdivrl
dec
les
out
mov
cld
cmp
shll
pop
lahf
test
inc
sbb
sub
clc
xor
shll
inc
enter
mov
repz
inc
sahf
jno
rorl
xchg
push
and
rclb
inc
push
fistpl
je
jo
dec
dec
pusha
clc
ds
jnp
mov
mov
jae
adc
lods
mov
inc
mov
lods
nop
mov
or
xchg
lea
push
aad
popa
pause
testb
push
stc
mov
test
ja
mov
testb
addr16
leave
or
inc
adc
fsubrp
movsl
leave
ss
aas
push
dec
das
pop
ret
dec
mov
lahf
shll
das
sbb
mov
sti
jmp
dec
in
rorb
xor
scas
dec
movsl
in
ljmp
sub
jb
jecxz
test
out
loope
adc
nop
cli
mov
fld
or
mov
data16
scas
fmull
dec
xlat
add
incb
fwait
aaa
pop
das
hlt
sbb
mov
xlat
mov
add
sub
hlt
push
aas
inc
dec
dec
xchg
fstp
fimuls
fadds
xor
push
pusha
out
sub
dec
adcl
jg
loop
shlb
push
or
cltd
cltd
in
mov
mov
mov
adc
fwait
and
jmp
pop
inc
mov
xor
in
push
sub
xchg
add
inc
mov
pop
xor
sbb
hlt
int
fimuls
inc
mov
mov
mov
xor
rcr
stc
shl
or
inc
pop
push
arpl
or
imul
pop
adc
hlt
jns
scas
aam
mov
pop
pop
pop
aad
mov
and
fbld
sti
ss
sarl
repz
push
paddd
sarl
cwtl
loop
dec
mov
push
sbb
in
pusha
loop
repz
jns
movsb
or
add
movsb
clc
int3
add
shlb
mov
jno
stc
inc
mov
pop
dec
dec
in
vcomisd
mov
test
jmp
pop
push
pusha
xor
jle
int
xor
push
lods
frstor
inc
fdivl
pop
sub
bound
push
outsl
out
add
cmp
xchg
in
and
mov
call
add
pop
inc
add
push
leave
mov
jns
and
testb
into
xor
and
xor
and
sub
cmp
inc
jp
xor
outsb
mov
add
jb
xchg
and
adc
cs
cs
inc
rorb
inc
cmp
stc
push
in
sarl
popf
fidivrs
sub
adc
jae
imul
mov
stos
arpl
add
jecxz
mov
mov
mov
repz
loopne
mov
sbb
aam
cmp
push
mov
xor
cli
mov
out
sbb
xchg
ret
cmpsb
into
popa
lret
setp
add
jns
cwtl
call
pop
gs
cmovno
rcrl
and
movb
outsl
push
das
mov
rorb
mov
xor
xchg
cmp
xor
sbb
shll
jl
sbb
sub
out
jecxz
stos
jo
shl
shr
icebp
ljmp
lcall
and
mov
or
rcl
movsl
in
and
fadd
lcall
sbb
and
sbb
pop
pop
mov
lret
cli
cmpsb
outsb
shlb
mov
mov
int
mov
daa
ret
xor
into
mov
sub
fadds
pop
push
sbb
xor
pop
sub
sbb
clc
cs
cs
and
sbb
icebp
push
jle
mov
push
dec
adc
add
fisubs
roll
mov
ds
mov
dec
mov
jne
fwait
push
cwtl
mov
inc
adc
rol
sbb
xchg
mov
loope
sbb
cltd
testl
aad
or
jg
jge
push
mov
sbb
sbb
mov
je
cmp
jo
cmp
in
pop
jnp
stos
iret
cwtl
rcrl
xor
shlb
les
mov
fwait
into
scas
inc
or
aas
fnstsw
xchg
aas
sbb
icebp
mov
or
sub
cld
punpckhwd
inc
or
ret
call
push
test
mov
loop
add
mov
mov
push
leave
test
iret
not
insl
das
stc
xlat
imulb
scas
lock
sub
in
stos
rcll
sbb
sbb
jmp
jo
scas
ficoms
or
leave
loopne
into
pop
testb
mov
in
imul
fsts
addl
lea
xor
call
mov
bound
adc
fcomps
jne
xchg
xchg
out
or
sbb
out
shrb
sub
shrl
mov
xor
sbb
ret
and
inc
daa
out
cmp
aam
mov
adc
mov
push
inc
jne
cmp
mov
push
ret
mov
test
push
inc
add
jbe
sub
cmp
mov
add
iret
inc
mov
sbb
mov
xlat
movsl
std
mov
dec
jmp
and
int
or
cmp
pusha
std
xchg
mov
out
mov
sahf
lcall
rcrl
push
dec
rcl
and
add
dec
add
xchg
pop
fbld
in
ret
mov
mov
insb
xor
shrl
in
stc
fs
pop
ja
outsl
test
repz
fsubrl
stc
sbb
mov
mov
test
push
ds
dec
dec
pop
pop
inc
xchg
mov
mov
sti
andb
loopne
xor
sbb
mov
iret
lret
and
fdivs
imul
out
xor
xchg
xchg
cwtl
xor
loop
cmp
sbb
stos
jnp
push
sbb
aas
into
test
out
lods
dec
pop
outsb
sbb
ljmp
sbb
xchg
and
enter
incl
scas
mov
outsl
and
adc
lock
rcl
mov
mov
inc
enter
aaa
imul
and
stos
xchg
int3
divb
push
jno
sub
jne
lock
dec
imul
dec
in
sbb
jp
dec
sbb
leave
repz
push
imul
call
sub
or
jmp
sbb
jl
or
in
and
mov
imul
stos
and
add
sbb
daa
pop
mov
push
push
sub
add
push
jge
xor
pop
das
adc
das
pusha
ret
adc
mov
cmp
icebp
in
sti
les
hlt
jae
outsl
sahf
adc
lock
aad
movsb
mov
sub
mov
sbb
xchg
dec
lods
and
mov
lret
push
es
fstp
popa
incb
push
filds
jae
packsswb
sbb
mov
lcall
ss
cmpsb
cmp
pop
sbb
and
pop
dec
mov
adc
inc
sbb
iret
dec
out
dec
jns,pt
popa
in
out
adc
pop
test
fdivrl
adc
mov
dec
into
cltd
jmp
fisubl
and
xor
cltd
and
mov
into
aaa
call
pop
lock
jnp
pop
sbb
rcrb
xchg
rep
cwtl
cltd
icebp
scas
data16
nop
imul
sub
push
xchg
in
cltd
mov
xchg
dec
sbb
insl
push
dec
jle
data16
and
negl
or
xor
or
xchg
into
or
jae
jns
scas
inc
inc
pop
add
pop
lock
and
shll
rclb
aad
lock
cmp
fiadds
mov
mov
adc
fs
inc
fpatan
mov
jg
flds
addb
hlt
fwait
pop
cmp
mov
sub
ror
inc
jns
std
mov
ljmp
in
mov
dec
xchg
scas
push
cmp
fmull
inc
addr16
cmpsb
mov
ret
or
xor
jae
mov
pushl
jecxz
hlt
fnsave
repz
or
inc
cmc
daa
xor
mov
int3
xor
imul
sar
int
push
mov
jo
pop
aaa
sahf
aaa
xor
fcomps
jge
pusha
cmpsb
addb
dec
push
pop
js
mov
js
lret
stc
loop
dec
test
sub
xchg
clc
mov
rcrl
xor
cmp
arpl
das
lret
jmp
or
mov
cmp
fisttpl
sub
jge
pop
inc
stos
jnp
and
jp
mov
push
mov
out
jns
and
xor
ss
sbb
dec
lds
mov
cmc
xchg
push
lock
pop
pop
and
xchg
inc
sbb
jp
aam
ljmp
jl
sarl
xorb
shl
inc
cmp
outsl
idivl
mov
jne
ds
out
mov
clc
push
cmpsb
jns
mov
loope
dec
jge
pop
pop
inc
dec
xchg
push
push
in
inc
cmp
adc
or
inc
nop
sub
fisttpll
sub
test
ror
cli
push
enter
cs
lcall
into
dec
mov
loopne
int3
jo
xchg
pop
and
repz
aaa
inc
mov
testl
cmp
fistl
ja
mov
cmp
test
jb
pop
sbb
xchg
jne
jb
mov
rol
repnz
jmp
jb
fidivrl
mov
lods
xchg
mov
andl
shlb
lock
cmc
sub
sbb
cmc
aaa
bound
mov
leave
push
or
mov
lock
aad
cltd
stc
test
xlat
and
sub
je
jae
mov
or
ds
out
xchg
mov
repz
adc
jae
and
sarb
dec
inc
dec
out
rorb
mov
es
outsb
imul
mov
cmc
xchg
outsl
mov
pop
cmp
mov
cmc
rorl
faddl
cmp
inc
aam
inc
out
pop
into
pop
rcll
mov
addr16
into
fcoml
out
subl
jge
lret
ret
pop
push
in
sbb
add
lahf
add
jae
ret
jge
cltd
je
lods
xor
pushf
std
xchg
pop
frstor
xorl
or
cli
push
stc
dec
subb
mov
adc
xchg
das
mov
sahf
dec
pop
xchg
test
jl
xchg
sub
mov
sbb
pop
mov
faddl
movsb
xchg
cmp
cmp
or
lods
push
js
daa
or
xlat
ds
mov
les
jl
inc
lods
cmp
adc
xchg
pop
cmp
hlt
dec
mov
je
xchg
imul
pusha
pop
or
dec
sub
cmp
and
mov
out
cmp
jbe
cmp
dec
sahf
movsb
ror
fcoms
add
int3
aam
int3
cmpb
adc
ja
and
mov
mov
mov
jb
inc
inc
jb
outsl
and
xchg
push
testb
jmp
cmpsb
pop
push
ljmp
cmc
push
jp
ret
imul
es
cmp
call
or
dec
sti
outsb
mov
inc
enter
repnz
fistl
push
cmpsb
push
xchg
aaa
int3
pop
notl
push
dec
jae
mov
loopne
icebp
les
ret
jnp
test
dec
and
ds
push
xor
inc
std
stos
mov
scas
cld
mov
xor
mov
sahf
outsb
mov
dec
pop
mov
jecxz
sbbb
sahf
cwtl
cs
or
ljmp
pop
stos
and
lock
mov
adc
stos
vshufps
rol
repz
hlt
jae
cs
mov
insl
setl
xchg
lcallw
pusha
mov
cmp
mov
repnz
inc
stc
mov
pop
notb
leave
ss
or
xchg
xlat
dec
pop
mov
mov
adc
or
dec
add
loop
stos
ja
addr16
cmpsl
test
add
movsl
stos
fxch
pop
sub
sbb
or
mov
out
inc
cmp
iret
arpl
add
xchg
aam
nop
fxch
enter
popa
loope
lock
mov
daa
jns
in
adc
lahf
int
mov
jp
xchg
pop
scas
hlt
int
pop
mov
push
and
mov
movsl
scas
sbb
jae
push
jo
add
pop
xor
xlat
pop
jbe
mov
push
dec
hlt
loopne
mov
in
cmp
mov
loopne
jo
in
out
inc
push
push
xchg
pop
lods
cltd
std
mov
pop
adc
jl
xor
cmp
test
or
imulb
repnz
jbe
stos
mov
scas
test
adc
inc
sbb
loop
mov
mov
daa
lods
fisttpl
sbb
pop
movsbl
ss
addr16
adc
std
int
fisubl
push
adc
pop
ret
mov
or
lret
push
adc
jge
enter
out
jle
jne
inc
xlat
adc
mov
mov
cmc
repnz
ror
test
mov
push
inc
data16
adc
cmp
xor
int3
int3
pop
jnp
mov
outsb
jbe
outsl
test
nop
inc
aad
stos
mov
arpl
hlt
lret
leave
sbb
pop
mov
mov
cmp
inc
loop
dec
out
inc
xor
in
pushf
incb
notl
fdivr
je
mov
push
in
jmp
popa
leave
sub
mov
je
adc
pusha
mov
into
fnstcw
aad
insb
xor
dec
cmp
cli
sub
fisubl
sahf
jge
or
mov
aas
negb
mov
add
js
test
negl
dec
scas
mov
push
inc
pop
lcall
out
xor
xchg
mov
je
outsb
jle
adc
pop
pop
or
adc
jae
mov
xchg
pusha
clc
test
popa
and
pop
aaa
mov
xor
fsubp
subb
ljmp
cmp
pop
das
and
adc
rcr
ss
jge
mov
xchg
js
sbb
adc
pop
jo
fidivs
xchg
mov
jge
push
scas
xchg
daa
sti
test
or
dec
add
xor
sbb
cmp
or
sbb
pop
or
xor
out
sbb
ss
or
testl
lods
mov
pop
je
cmp
xchg
ret
sbb
addr16
in
xchg
int
and
mov
imul
xchg
orb
ficoml
cmp
test
insl
ja
add
subl
sbb
test
xchg
loop
out
cmp
cmp
inc
cmp
popf
push
or
fs
dec
imul
subl
in
adc
arpl
lret
int3
lcall
xchg
xchg
or
insb
cmp
inc
cmp
push
leave
pop
das
mov
fidivl
jbe
jb
pop
mov
add
insb
adc
arpl
mov
hlt
rclb
ror
adc
jnp
add
and
pop
andl
stos
dec
mov
std
pop
sbb
pop
js
push
mov
jb
jmp
in
jmp
dec
and
imul
dec
mov
call
or
pop
outsl
in
cmp
imul
sub
jno
and
test
mov
sub
mov
sub
push
lret
rorb
cmp
mov
fwait
sbb
pop
cmp
sub
mov
xchg
xchg
jmp
cltd
push
mov
and
sbb
cmc
movsb
mov
adc
test
icebp
mov
subb
sbb
test
lcall
jle
mov
adcl
sbb
pusha
push
pop
dec
clc
adc
lcall
je
xchg
les
cli
arpl
lds
mov
adc
sti
cmp
mov
rorb
sub
and
push
adc
mov
or
stos
ds
pop
xchg
adc
and
addr16
scas
int
data16
and
sub
push
mov
inc
movsb
negl
mov
sbb
cwtl
push
lods
mov
scas
mov
inc
scas
inc
aad
jmp
loopne
pusha
repnz
push
adc
pop
xchg
xlat
ljmp
sbb
cli
xchg
xor
dec
mov
sbb
inc
jb
popf
rdpmc
cmp
test
jle
lcall
mov
cwtl
es
and
movsb
and
repz
jecxz
fisubs
mov
add
jecxz
lret
outsl
pop
xchg
popa
loop
dec
mov
iret
out
inc
dec
jnp
cmp
jb
rcr
jne
pop
mov
sbb
xor
jl
push
mov
mov
pop
xchg
fstl
out
daa
push
pop
mov
mov
push
mov
nop
dec
mov
scas
fdivrs
pop
sti
xchg
dec
adc
cmp
xor
into
dec
pop
aas
jp
fcmovne
cltd
or
loopne
push
std
pop
and
gs
xor
js
sarl
sbb
test
dec
out
scas
aad
add
dec
cmp
mov
es
in
xor
sbb
cmp
out
push
cmpsb
hlt
xor
sbb
cld
lahf
adc
lods
aaa
push
addr16
mov
movsl
mov
push
fbld
adc
mov
xchg
ds
outsb
push
sahf
pop
pop
stos
xor
and
cltd
ret
stos
ficoms
inc
negl
in
fsubrs
sbb
movsb
sub
mov
adc
push
aaa
pop
fndisi(8087
lock
mov
je
in
inc
mov
xor
jle
in
xchg
clc
inc
mov
ja
scas
stos
scas
out
mov
pop
jecxz
iret
adc
mov
data16
jge
mov
xlat
xorl
adc
inc
ret
xchg
aam
fiaddl
adc
xchg
scas
cld
add
aaa
xor
rorb
xchg
sub
or
or
shll
jno
fldt
shll
es
jbe
cmp
xchg
test
das
aaa
mov
mov
cmc
fneni(8087
int
pop
lea
shlb
mov
outsb
add
testb
xor
sub
ret
movsl
mov
jl
in
dec
push
jl
push
inc
pop
push
daa
xchg
jp
subb
push
mov
test
xchg
std
int
xchg
or
pop
addr16
push
je
imul
jecxz
and
add
or
mov
push
imul
jb
popf
mov
sbb
loopne
or
mov
cmpsl
icebp
repz
jl
sub
fs
inc
and
mov
ret
loop
ja
dec
adc
mov
or
enter
lea
aaa
push
fldt
adcl
out
lods
or
inc
test
aad
sbb
mov
ret
ror
xchg
shrb
ja
pop
jecxz
cmc
cltd
notl
mov
pop
mov
fldenv
ret
push
mov
push
jbe
lret
sarl
xchg
cmp
dec
xor
sub
popf
mov
xchg
sub
hlt
arpl
insl
mov
dec
out
lret
xor
jns
fstl
push
push
xor
push
fisttpll
pop
xchg
and
shrl
in
repz
call
add
mov
call
bound
fwait
and
bound
jmp
add
lcall
inc
shr
fmulp
bound
test
or
dec
dec
sbb
xor
jbe
or
insb
enter
jns
sub
mov
or
ret
adc
sbb
mov
dec
subl
shll
cmp
cmp
xchg
lock
pop
jmp
into
mov
mov
sbb
inc
dec
mov
sub
xchg
jne
sub
jno
fwait
in
lahf
hlt
test
stos
pop
jle
adcb
insl
push
stc
mov
dec
mov
adc
lea
sub
jmp
dec
les
shll
mov
sub
rcrb
mov
scas
fcoml
mov
xchg
jecxz
dec
push
push
test
lds
and
cmp
or
dec
pop
cltd
jo
push
dec
mov
mov
fcomps
push
lock
or
jae
lock
mov
pop
cmp
push
in
cli
xor
sub
enter
push
das
rdpmc
arpl
cmp
sub
mov
xchg
loope
dec
ja
add
xchg
aas
ffreep
faddp
inc
sub
push
add
or
cmp
sti
push
pushf
ror
sub
adc
and
push
or
mov
push
and
mov
adc
fs
loope
ret
fs
jnp
lods
xor
fisttpl
ds
add
sub
xchg
cmp
andl
mov
xchg
fstpt
push
cmpsb
or
dec
aam
mov
popa
out
push
xlat
push
dec
mov
in
xchg
add
push
enter
mov
sbb
cmp
jge
aaa
adc
sbb
cmpsl
ret
jmp
ljmp
sbb
xor
jns
daa
push
mov
ja
fisubl
and
in
cld
mov
push
pop
loopne
xor
xor
push
add
dec
push
mov
cltd
lods
bound
notl
inc
pop
fs
aad
mov
mov
sbb
dec
push
inc
shr
test
pop
in
xor
sahf
dec
xor
adc
aaa
repz
xchg
mov
mov
sub
xor
and
arpl
test
fistpl
mov
jne
and
inc
lea
push
ficoms
ret
sbb
and
lret
and
fildl
inc
pop
bound
push
cmp
pop
pop
mov
cmpb
arpl
inc
orl
scas
lcall
ds
pop
jb
ss
rcl
cs
in
jmp
addr16
stc
jns
inc
int3
repnz
repnz
mov
enter
ret
fcompl
or
dec
or
dec
jle
sarl
mov
mov
nop
cwtl
cmp
lods
fadds
outsb
dec
xlat
repnz
lcall
jg
inc
bound
das
mov
filds
dec
xor
and
pop
mov
push
into
sub
sub
dec
int3
xor
iret
icebp
mov
clc
xor
mov
sahf
mov
xchg
push
add
imul
int
lods
or
leave
mov
leave
sub
pusha
lcall
stc
mov
inc
addr16
add
push
pop
mov
mov
jns
cmp
pop
xchg
mov
jl
sbb
pop
lock
lods
lea
sub
pop
mov
jp
push
dec
aad
fmull
xor
adc
mov
lods
ja
fimull
jg
pop
in
js
xorl
imul
rcll
inc
and
ret
roll
lcall
add
sbb
xchg
sub
mov
or
sub
sub
fidivrl
pop
ja
xchg
push
int3
mov
frstor
loope
fcomp
out
pushf
push
adc
mov
test
sub
das
loopne
dec
cs
and
enter
inc
and
daa
add
lock
aam
pop
stos
repnz
push
sbb
ret
fwait
pusha
jl
mov
xchg
into
xor
faddl
cltd
scas
popf
das
dec
nop
fadd
push
pusha
xor
mov
icebp
dec
mov
fistpll
mov
mov
pop
add
ljmp
dec
rclb
xchg
repz
test
or
cmp
push
mov
mov
inc
movsb
jp
mov
frstor
and
cld
sbb
les
dec
test
and
sub
add
mov
mov
adc
jo
sub
push
jbe
mov
push
pop
in
mov
gs
ret
daa
les
fsubrs
fcmovne
xor
sub
add
xchg
inc
jnp
stc
cwtl
insb
fwait
jg
add
dec
xor
pop
jecxz
insb
jp
pop
sbb
push
push
lahf
dec
repnz
mov
mov
out
lods
pop
sub
negl
adc
inc
mov
pop
lahf
iret
push
jo
inc
cmpsl
hlt
mov
fstpl
mov
xor
scas
test
mov
sub
imul
pop
cs
lock
dec
shll
dec
sbb
das
xchg
jecxz
outsb
ret
les
jns
dec
mov
xchg
xlat
cmc
lcall
pop
roll
jl
add
aam
jecxz
out
out
ja
mov
xchg
push
popf
inc
adc
pop
sub
ficompl
insb
aam
daa
cld
je
mov
lret
idivb
fs
sar
cmp
out
sub
out
jg
add
std
pop
cmp
mov
or
inc
int
inc
pop
jge
je
movsl
jbe
jg
lods
int
xchg
dec
cmpsb
mov
mov
cmp
inc
shl
pushf
cmc
ret
test
fsubl
shlb
movsb
mov
sub
addr16
ja
shr
push
ds
and
pop
sbb
jmp
nop
xor
mov
dec
addr16
pop
and
aaa
icebp
add
add
jo
jp
andb
mov
pop
js
push
loop
outsl
fldl
pop
pop
std
sti
lret
xlat
data16
dec
fsubp
in
scas
jp
std
xchg
ja
stos
test
inc
jg,pn
gs
push
lret
inc
ljmp
mov
iret
sbb
sbb
add
adc
pop
int
pop
xchg
sti
xchg
in
mov
mov
enter
push
mov
pop
test
aas
mov
pop
ljmp
cmp
insl
cmp
ss
xchg
xchg
ja
cmp
les
xchg
cmp
lret
mov
push
fwait
xor
ret
sub
bound
add
pop
sbb
pushf
jae
aad
mov
int
mov
cwtl
mov
mov
mov
stos
mov
cmp
sbbl
adc
jge
ja
cmpsl
jecxz
jno
negb
hlt
jmp
mov
add
push
sub
sbb
es
and
jmp
lds
jno
ffree
or
mov
cmc
lods
xchg
pop
adc
sbb
sbbb
cmc
and
cmp
xor
loopne
addr16
or
lods
jl
lock
fistpll
adc
mov
test
ja
cmpsl
in
xor
mov
and
dec
push
lret
inc
and
push
fwait
inc
rcrb
adc
decl
divl
test
add
add
sub
inc
test
inc
mov
inc
add
mov
mov
hlt
ja
xor
ja
add
dec
in
ret
andb
xchg
addr16
sbb
shll
repz
repz
insb
test
stc
dec
sbb
or
jne
cmp
subl
jg
cmp
inc
and
addr16
add
std
mov
and
fdivrl
mov
leave
fs
movsl
adc
aaa
orl
sbb
mov
or
cmp
jns
jp
mov
into
int3
sahf
or
mov
push
pusha
mov
or
sub
mov
mov
mov
lret
push
in
jne
push
sub
loopne
pop
pop
pop
sbb
xor
pop
imul
or
jae
dec
push
or
movsl
jbe
mov
aad
cmpl
cmc
cmp
jb
jg
bound
icebp
sbb
and
fwait
xor
rcrl
jge
jns
int3
sub
push
xor
jae
in
mov
repnz
sub
out
inc
cmp
inc
test
add
xchg
dec
and
stos
push
idivl
and
popl
jecxz
mov
mov
and
out
in
out
inc
mov
dec
test
mov
mov
daa
mov
fs
test
and
add
mov
jge
and
vmovsldup
dec
fnstenv
fisubl
out
xor
test
sub
repz
cmp
sarl
aad
dec
stc
lahf
push
and
out
mov
add
ja
or
pop
ffree
push
adc
scas
cmp
xor
sub
pop
stos
or
std
add
mov
or
scas
push
dec
adc
push
cli
dec
jge
scas
sbb
mov
into
out
fmuls
push
xchg
sub
push
sub
loope
mov
sbb
sub
sub
dec
clc
fdivl
or
inc
out
ret
mov
rcrl
cld
lcall
ret
and
gs
xchg
outsb
fiadds
pop
inc
fsts
adc
imul
repz
xor
mov
xor
mov
ljmp
sarb
cmpsb
imul
add
xlat
mov
arpl
jae
in
hlt
pusha
mov
jl
push
cwtl
hlt
in
dec
add
fwait
xor
iret
adc
sub
mov
sub
xchg
cmp
arpl
lods
call
push
jns
mov
and
leave
jge
aas
fstps
inc
outsb
adc
icebp
or
push
pop
adc
mov
cmp
inc
push
in
insl
gs
scas
mov
sahf
sti
push
adc
push
sbb
sub
frstor
and
gs
rcl
sbb
or
clc
shr
push
fnstenv
mov
mov
sbb
mov
and
cmpsl
pop
in
pop
adc
rorl
shlb
lcall
inc
das
ret
int
out
cmp
insl
sbb
and
btc
out
iret
mov
iret
bound
ss
pop
out
rolb
icebp
pop
add
cltd
mov
aam
nop
scas
jno
or
push
cmp
pop
out
push
inc
shrl
enter
ss
push
out
pop
add
ss
jl
outsb
test
ljmp
sub
out
scas
popa
mov
xor
in
push
sub
mov
sub
pop
and
int
in
fistps
arpl
mov
cli
xlat
ja
adc
in
jbe
mov
jno
sub
lock
inc
mov
js
es
or
aam
or
cwtl
call
pushf
test
fiaddl
cmp
out
imul
dec
cld
adcl
dec
sar
push
dec
sub
icebp
jmp
mov
cs
fsincos
push
icebp
mov
mov
into
bound
inc
es
in
cwtl
ror
pop
hlt
fs
lcall
call
inc
mov
pop
adc
scas
pop
subb
ficoml
out
testb
dec
enter
faddl
icebp
call
inc
jae
lea
xor
inc
popl
out
xchg
jb
aas
cmpsb
add
and
push
xor
fstpl
lcall
jg
aad
mov
imul
lds
cmpsl
cmp
jl
xchg
jmp
cmp
sarl
pop
push
sahf
inc
push
pop
fildll
in
push
shll
gs
adc
mov
jecxz
mov
aaa
movsb
imul
fwait
sahf
mov
xor
mov
dec
jnp
daa
inc
outsb
pop
dec
mov
imul
mov
out
xor
das
cmp
inc
hlt
in
sbb
sbb
imul
xchg
sbb
inc
lock
jl
int3
jge
sbb
movsl
cmpsb
fdivl
xor
cmpb
sahf
add
scas
test
xor
mov
mov
pushf
aas
idiv
ret
mov
imul
je
shl
lcall
xchg
adc
movsl
loop
dec
mov
ja
loope
shlb
adc
into
mov
mov
es
push
subl
lea
aad
insb
mov
dec
dec
hlt
iret
jne
rcll
pop
jp
out
cmp
mov
repnz
or
sbb
iret
stos
ss
in
or
mov
or
mov
or
mov
jg
nop
sbb
imul
adcl
sub
pop
adc
dec
int3
stc
arpl
lock
fsubr
mov
mov
iret
cmpsl
cli
pop
xchg
cmp
in
scas
es
jecxz
jbe
sub
cwtl
add
lods
pop
jbe
mov
mov
mov
jge
dec
push
mov
stc
cmc
cli
mov
movsb
pop
xor
and
add
test
rorb
inc
scas
pop
adc
jmp
add
cli
testl
sbb
and
xchg
jmp
push
cmpl
cmp
adc
rolb
sbb
jge
sbb
pop
mov
ljmp
out
mov
int
inc
sub
loop
aas
pop
xchg
lock
adc
iret
lret
xchg
je
mov
cli
into
mov
in
sub
and
fwait
push
popf
in
mov
lock
or
mov
sti
mov
cwtl
xchg
subl
mov
lret
in
rol
shl
jae
sbb
in
aaa
roll
push
jecxz
gs
push
sbb
icebp
imul
mov
jl
push
and
jmp
aas
data16
xchg
xchg
mov
sbb
add
mov
movsl
xchg
mov
iret
mov
repnz
lcall
dec
mov
pusha
mov
rcrl
jb
mov
cmp
jle
pop
xchg
mov
ljmp
mov
push
ds
addr16
mov
sub
jno
sub
push
mov
cmpsl
popf
clc
rorl
loop
cmc
push
test
mov
out
push
adc
cli
mov
pusha
push
andb
fcomi
mov
dec
rorl
call
iret
and
jecxz
loop
cld
fisubs
in
push
fidivl
push
pop
cld
mov
add
adc
jo
sbb
xor
outsb
inc
ds
ficompl
cmpsb
mov
mov
in
aam
mov
lock
lea
or
shrl
cmp
mov
inc
in
test
adc
push
mov
lahf
ret
ss
cmpsb
sahf
lea
data16
add
ljmp
sbb
jp
jno
xchg
bound
popf
inc
jno
xor
cli
in
scas
cmpl
fadds
sbb
or
jae
jl
jmp
sbb
jnp
inc
adc
sub
add
in
mov
shlb
jbe
test
test
cmp
in
mov
sahf
int3
aaa
pop
xlat
xchg
into
cmp
dec
lahf
jmp
adc
dec
lcall
testb
lret
xchg
push
push
xlat
mov
or
setae
in
into
mov
nop
push
mov
cs
jb
mov
js
mov
lahf
subb
call
sub
xor
lds
inc
adcb
jge
call
cli
sub
sub
inc
stc
das
pushf
aas
xor
fisubrl
aas
mov
ja
add
shll
mov
or
leave
push
cmp
and
inc
dec
pushf
or
push
push
push
push
aad
pop
jge
shrb
das
and
pusha
jle
stc
mov
fdivs
mov
jbe
cmc
in
mov
mov
or
mov
xor
adc
mov
shl
popf
dec
inc
popf
fldenv
or
xchg
les
and
arpl
into
andl
sbb
sbb
imul
scas
xor
or
pushf
inc
inc
leave
adc
mov
shrl
xchg
outsb
xchg
jmp
fmul
jge
ljmp
push
hlt
mov
mov
sbb
aad
insb
adc
pushf
push
mov
popf
loopne
pop
out
cmp
hlt
or
cmp
inc
daa
jge
fnstcw
std
mov
sub
frstor
sub
fldl
hlt
dec
inc
bound
aad
jp
hlt
data16
shl
mov
ret
pop
dec
adc
rcll
ljmp
aas
js
and
cmpsb
jle
out
jmp
pop
popf
insl
pusha
insb
mov
or
cmp
repz
push
rcll
push
lods
in
mov
or
mov
mov
mov
insl
mov
fidivs
cltd
or
xchg
mov
cli
mov
dec
lods
push
clc
sub
movsb
clc
push
xlat
mov
aas
pusha
add
sahf
push
xchg
dec
shrb
inc
sub
push
repz
and
dec
ljmp
arpl
cmp
mov
mov
fucomip
fs
jmp
fistps
mov
icebp
adc
cmpsl
out
out
mov
es
loopne
and
das
pusha
out
pop
mov
sub
mov
mov
ret
cmp
nop
hlt
push
sti
mov
aas
add
ret
push
push
push
mov
add
sahf
cmp
scas
jnp
mov
test
adc
orl
mov
testl
fwait
xor
test
push
jg
into
lods
addr16
ret
loope
lret
mov
jo
clc
mov
or
mov
mov
adc
in
jle
lahf
xchg
stos
sahf
or
pop
dec
pop
and
xchg
dec
aam
outsb
test
out
int3
test
faddl
neg
loope
lahf
int3
xchg
in
cmpsl
pop
dec
js
ret
mov
in
sarb
xchg
aas
call
das
sbb
push
fldenv
scas
add
div
inc
sub
inc
scas
stos
mov
add
cmp
or
test
popf
repz
jp
test
pop
repz
lahf
dec
adc
ja
mov
or
add
lds
lret
add
aad
loope
pop
and
gs
push
fstp
inc
stos
jnp
scas
scas
ss
loope
fwait
hlt
push
loope
or
fcompl
mov
pandn
lods
cli
lods
sti
or
fwait
clc
movsb
push
shrl
sti
jg
and
mov
in
leave
sbb
hlt
jp
out
adc
and
fidivl
outsl
xchg
push
mov
cmc
movsl
jecxz
push
mov
icebp
aaa
ret
cmp
test
dec
mov
ds
push
lcall
jmp
cmp
pop
mov
subb
sbb
jle
push
mov
out
gs
jne
push
mov
push
in
rcrb
daa
or
ret
paddb
mov
add
enter
nop
push
loopne
mov
rorb
add
mov
sbb
test
mov
cmp
fxch
mov
int3
jb
test
cmp
add
out
jbe
movsl
jmp
mov
pop
jecxz
js
cltd
mov
push
inc
leave
popf
adc
inc
fadds
test
lods
cld
pop
xlat
mov
into
inc
cmp
dec
mov
aad
loopne
sub
push
jecxz
cld
xor
cwtl
movsb
xadd
xchg
in
pop
cwtl
ficomps
jne
jb
int3
aam
and
ja
nop
jge
dec
xor
and
ret
repnz
addr16
pop
shrl
ret
int3
inc
rcrl
mov
and
aam
xor
sahf
xchg
push
add
pop
test
iret
fldenv
scas
dec
mov
jg
sahf
pop
loopne
cmpsl
cmp
adcb
cwtl
ja
sbb
add
push
hlt
daa
aaa
xor
pop
mov
mov
add
push
xor
mov
jmp
inc
inc
mov
enter
pop
jle
dec
int
in
jge
push
cmp
pushw
xor
mov
fucomi
popf
add
clc
popf
push
push
mov
dec
dec
outsl
push
jbe
lahf
lods
mov
dec
movsb
fsubl
int3
sbb
test
mov
adc
add
sbb
out
jl
fbld
mov
imul
push
aaa
movsbl
sub
int
sub
lcall
dec
jne
popa
dec
insb
adc
xchg
push
mov
xchg
mov
cmp
call
icebp
fbstp
test
pop
adc
pop
incb
push
cmp
mov
jecxz
add
insb
xchg
add
pop
xchg
jae
fsubs
sub
gs
mov
mov
jne
inc
test
addr16
jl
data16
lods
out
sbb
ficoms
xchg
dec
mov
stc
cs
fadd
pop
testl
das
dec
pushl
in
aas
jg
and
lods
stos
lret
popf
cld
icebp
adc
mov
dec
dec
lods
mov
repnz
cmp
in
pop
cld
das
jg
adc
insl
jb
mov
lret
lods
sbb
push
lea
fwait
jp
mov
cltd
cmpsl
call
sub
cmpsb
sbb
fistps
stc
popa
sub
and
and
xchg
aaa
sub
sbb
jecxz
and
xlat
push
push
add
dec
sub
mov
fimuls
pop
xchg
roll
cli
ljmp
test
mov
divl
xchg
es
fidivrs
pop
adcb
mov
int
dec
push
inc
fdivrl
mov
out
dec
insb
lock
roll
lret
cmpb
pop
xor
jle
mov
rcrb
or
sbb
out
fwait
push
xchg
pusha
negl
fwait
dec
cmp
loope
leave
nop
pop
test
sub
xchg
dec
and
sub
js
insb
fisttpl
outsb
cmpsl
js
popa
dec
test
out
pushf
adcl
mov
out
cmp
and
inc
setle
jns
inc
cmp
jne
fadds
adc
sub
push
outsl
sub
pusha
cltd
xchg
cmp
test
nop
jge
mov
jg
mov
sti
and
insb
sub
xor
pop
cmpsl
mov
push
shlb
cmp
punpckhbw
sub
push
mov
add
hlt
cpuid
dec
sub
sbb
inc
and
or
and
das
pop
push
mov
dec
sarb
fisubl
mov
sub
dec
jbe
push
ffreep
mov
es
cmc
sti
adc
fcmovne
loopne
inc
mov
jge
adc
stos
jmp
mov
notb
loope
push
mov
test
sub
mov
or
add
mov
xchg
xchg
test
jg
cmp
test
adc
mov
or
inc
shlb
ds
sbb
sub
jno
or
ficoms
adc
stc
sub
push
movsl
movsb
test
and
test
out
cmpsb
mov
push
rclb
mov
adc
arpl
insl
outsl
mov
stos
js
lret
scas
jmp
movsb
jae
or
aas
ss
jo
into
sub
pop
ja
pop
es
pop
or
sub
in
sbb
mov
dec
rep
faddl
fstpl
mov
adcb
fnstenv
dec
push
sbb
in
mov
jae
cmp
inc
jb
mov
sub
pop
mov
jns
mov
xor
daa
clc
xchg
and
arpl
hlt
jp
xor
dec
shlb
jbe
inc
cmp
xchg
iret
lods
add
cli
sbb
in
and
mov
mov
jnp
dec
lock
shlb
cmp
lret
push
cwtl
push
xchg
push
out
cmp
push
adc
xchg
sub
adcl
loopne
in
ss
mov
sub
cwtl
roll
mov
pop
outsb
xlat
mov
mov
andl
xchg
lcall
cmp
cltd
out
cmp
push
sbbb
inc
add
int
pusha
adc
icebp
jbe
incl
push
orl
cltd
xor
insl
mov
sbb
sbb
sbb
movsl
loop
or
xchg
lods
scas
addr16
push
jecxz
pop
jle
aad
mov
fwait
sub
ror
imul
ljmp
fists
mov
daa
ja
or
test
test
in
stc
push
dec
and
loope
mov
cmc
or
orl
fadds
test
sub
adc
sar
in
mov
lock
mov
outsb
cmp
xlat
lock
movsb
ljmp
inc
mov
lods
and
cmpl
sub
dec
imul
or
fidivrl
push
ljmp
xchg
xor
loope
mov
aad
push
data16
movsb
test
daa
imul
add
dec
test
xor
dec
push
mov
sub
inc
ja
fstpt
sub
icebp
xor
or
mov
and
pop
or
popf
push
movsb
rorb
fiadds
bound
push
jae
incl
divl
add
sbb
fsubs
jns
dec
xchg
mov
inc
cmp
mov
dec
ret
popa
js
cld
mov
xlat
je
jecxz
xchg
icebp
subl
insl
mov
dec
test
je
mov
push
jg
mov
cltd
test
xchg
stos
add
mov
iret
sub
mov
and
fcoms
out
jns
mov
js
sub
sub
mov
int3
mov
cld
int3
pop
xchg
jle
push
jnp
jge
icebp
in
jmp
cmp
mov
in
push
mov
ret
inc
sub
nop
jae
and
adc
inc
dec
xchg
sub
xchg
push
nop
es
or
or
sub
mov
fsubrp
push
lods
pop
pop
sub
and
arpl
lods
decb
cmc
and
dec
in
cs
and
mov
push
insl
mov
dec
int
xchg
icebp
dec
push
xor
sbb
loope
arpl
sbb
lea
bnd
imul
dec
adc
repz
dec
mov
xor
sub
mov
js
push
add
ja
negb
push
sarb
loopne
dec
jmp
inc
insl
out
jnp
ss
cmc
out
mov
fbstp
mov
mov
test
cltd
jle
jae
ljmp
insb
loope
sub
lock
push
cltd
mov
cmp
mov
mov
aad
ss
cli
pop
xchg
pop
xchg
je
jg
out
adc
movsb
pop
sahf
popf
push
loopne
enter
jg
fdivrl
icebp
pop
cmp
pop
jecxz
dec
sti
cmp
sub
sahf
mov
jbe
add
sub
sti
cmp
mov
ja
mov
jns
dec
mov
test
sub
fisubrs
int3
nop
cmpsl
fs
fsubl
fistps
mov
xchg
daa
sub
sbb
leave
movd
jno
call
cs
or
rcl
jmp
xor
fadds
mov
nop
js
sahf
jo
fidivrl
pop
mov
jge
jge
mov
div
xchg
push
dec
int
hlt
or
ret
cwtl
lock
cs
push
jb
gs
enter
je
bound
shlb
pushf
xchg
mov
mov
sub
sahf
mov
add
inc
insl
jb
and
ret
mull
and
jno
pusha
loop
lods
and
test
and
pop
xchg
pushf
nop
push
push
cmp
nop
stos
aaa
js
cmp
mov
aaa
or
cli
into
loope
popf
movsl
test
pushf
leave
out
sub
cmp
or
clc
imul
test
test
jg
and
dec
mov
adc
xchg
jge
adc
cmp
les
push
mov
push
jmp
xchg
mov
loop
xchg
fwait
push
dec
mov
sbb
cmp
mov
mov
call
jo
stc
mov
pop
jnp
dec
out
sub
xchg
repz
clc
adc
fbld
insb
and
mov
rcr
aas
lahf
xor
fmul
sbb
outsb
mov
aad
cwtl
or
mov
fs
cmp
inc
daa
les
popf
int
daa
or
mov
pop
fistl
filds
dec
cmp
xor
loop
out
mov
arpl
test
jg
or
dec
test
sbb
stos
scas
outsl
or
insb
or
gs
and
jbe
mov
mov
and
pop
rcl
fnsetpm(287
test
test
testb
popa
ds
push
scas
mov
loope
out
inc
dec
sub
jns
leave
xchg
ds
enter
cli
sbb
ljmp
je
mov
cs
mov
fnstsw
and
adc
fwait
idivl
push
adc
jb,pn
aad
xlat
imul
dec
add
cli
nop
data16
jo
push
cmp
jnp
mov
rorl
and
push
in
push
lcall
daa
imul
or
test
mov
inc
lret
stos
icebp
addl
push
pop
scas
pop
icebp
rcrl
sub
in
roll
fimull
mov
lea
pop
jno
jge
mov
xchg
imul
js
sti
xor
push
mov
pop
mov
dec
into
nop
ret
or
adc
pop
mov
inc
sahf
mov
ret
xchg
loope
mov
sub
loopne
gs
fucom
inc
fcmovne
icebp
in
fsts
das
icebp
sub
sub
lahf
les
jp
pop
pop
cmpsb
sahf
dec
pop
sbb
ja
inc
stc
fwait
loopne
lods
stc
adc
lahf
dec
arpl
or
or
je
lahf
mov
dec
aam
pop
push
mov
mov
sub
sbb
xchg
jne
in
lahf
and
pop
cmpsl
ucomiss
jmp
sbb
sbb
jle
inc
lods
arpl
ss
mov
lods
not
lcall
adc
scas
loop
jno
bound
inc
xchg
ja
push
pop
sahf
shrb
daa
jmp
or
jecxz
xor
add
adc
fldenv
testb
cld
lods
int
jg
xchg
jbe
ror
in
pop
jecxz
cmp
out
pop
in
mov
stos
lcall
adc
fidivrl
pushf
xor
xchg
js
jne
gs
aad
inc
sub
out
ficomps
jecxz
sub
inc
addr16
bound
pop
loop
ss
fdivs
mov
arpl
inc
stos
add
rcrl
in
inc
bound
adc
cwtl
outsl
adc
fdivrl
lahf
mov
sub
out
push
cmc
out
jno
stc
rol
sub
sub
push
cs
out
repz
dec
loop
bound
popf
mov
lret
and
int
mov
xor
pusha
rcll
ss
in
mov
or
js,pn
cmp
lahf
insl
jg
xlat
dec
insb
dec
adc
lret
out
xchg
jp
je
or
xchg
cld
sbb
sbb
adc
imul
xchg
mov
push
add
scas
movsb
mov
push
in
cli
xor
aaa
cmp
es
mov
sbb
mov
adc
std
sar
jecxz
addr16
cmpsl
mov
sbb
cmp
bound
ret
ror
call
mov
mov
jne
repnz
xchg
push
jmp
cwtl
inc
and
daa
fnstcw
fisubrs
cltd
cmpsl
mov
or
leave
mov
adc
int
mov
dec
es
pop
pop
xchg
cli
lea
push
out
push
sbb
test
mov
icebp
imul
cmp
aaa
sbb
mov
outsb
cwtl
shlb
das
sbb
pop
outsl
dec
pushf
imul
cmp
mov
adc
popa
mov
rcrl
into
add
call
lahf
inc
cli
shlb
cmp
leave
aad
aad
mov
lods
ja
inc
fs
inc
jle,pn
outsl
add
in
push
adc
dec
sbb
lea
sub
push
iret
pop
xor
cs
out
pushf
push
fs
hlt
mov
jns
ret
inc
mov
push
out
enter
inc
lock
testl
ficoml
sub
xor
loop
xor
adc
xor
stc
jbe
pop
jnp
cmp
lahf
mov
mov
cmpsl
mov
and
lret
xor
addr16
mov
or
mov
mov
shl
shrl
mov
pop
jbe
testl
inc
cmp
cltd
mov
push
or
loope
jle
leave
cmp
xchg
andb
inc
jg
ja
lods
or
jl
movsl
mov
mov
in
jno
sub
adc
pushw
xchg
in
push
inc
addr16
mov
lods
dec
dec
std
pop
inc
dec
enter
sub
inc
add
xor
jns
shl
mov
ja
gs
pop
arpl
clc
jg
insl
xor
mov
ffreep
daa
mov
jg
jns
scas
loope
xor
add
sbb
rclb
js
sbb
dec
xor
imul
fldcw
push
pand
rolb
pop
in
jmp
subl
out
sarl
fidivrl
outsb
xchg
xor
pusha
adc
jno
lods
xchg
lods
inc
std
cmpsb
dec
aad
mov
js
mov
sbb
jl
xor
inc
xchg
in
mov
push
push
add
inc
aas
mov
scas
inc
cmc
dec
test
inc
lea
mov
rcl
stos
xchg
std
sbb
mov
mov
pop
clc
inc
movb
and
inc
or
fwait
insl
pop
int3
lcall
jl
or
notb
dec
aas
cmpsb
es
fistps
loop
and
cs
sub
cmc
pop
mov
mov
dec
mov
mov
xchg
and
pop
push
fprem1
add
mov
divb
xchg
xchg
cmp
aad
inc
adc
sub
sbb
jg
pop
mov
nop
jecxz
sub
clc
test
inc
pop
pushf
scas
jecxz
jne
xor
leave
xchg
pusha
cmp
js
mov
stos
jge
aaa
sub
clc
pop
cmp
inc
fs
push
mov
jo
xchg
sub
jae
lea
repnz
insl
cmp
push
mov
cltd
ja
mov
push
jmp
push
jae
popf
into
mov
mov
mov
adc
mov
mov
ret
add
xor
inc
dec
push
jae
push
into
or
pop
jmp
jecxz
icebp
mov
dec
repz
testl
add
mov
dec
or
ds
out
out
clc
pop
sahf
repz
daa
stc
mov
aad
lcall
xchg
lret
xlat
or
flds
cmp
push
inc
mov
inc
iret
pop
sti
sub
sub
mov
lds
mov
jg
leave
shrl
repz
ror
and
fld
dec
jo
movsl
push
xor
jb
shlb
in
cmp
sub
mov
sbb
dec
xchg
pop
mov
xchg
sbb
outsl
mov
inc
fisubrl
gs
cld
jg
popf
in
jns
repz
fwait
les
pushf
sbb
sub
xchg
lret
daa
test
mov
lahf
inc
xchg
out
icebp
insb
lea
xor
mov
lcall
vshufps
xchg
enter
fstl
aad
adc
sub
sbb
jge
jecxz
daa
mov
outsl
lret
popf
mov
push
test
cmp
lret
cltd
decl
xor
xor
outsb
ret
fildl
orb
cwtl
shl
ret
js
push
mov
sbbb
push
push
xchg
imul
call
dec
outsl
test
pop
push
pop
test
sub
xor
shr
jo
xor
pop
pusha
or
filds
mov
imul
ds
data16
mov
subb
aas
xorl
repnz
sarl
sub
jbe
repnz
inc
push
sbb
sub
push
xchg
pop
loopne
mov
jge
inc
inc
ljmp
xor
inc
aas
jns
lahf
roll
in
stos
bound
incb
add
add
lret
test
sub
adc
adc
inc
pop
xor
push
and
cmpl
pop
lcall
in
push
repz
pop
lahf
call
inc
pop
orl
and
cmp
mov
enter
push
clc
pop
inc
sbb
gs
push
lock
fwait
movsl
or
jbe
push
stos
xchg
cmp
insl
xor
inc
pop
test
mov
scas
and
stos
movsb
leave
dec
push
pop
jge
mov
xchg
fmull
xor
mov
fistl
xchg
das
adc
rcrl
jmp
cwtl
cmp
in
xchg
xchg
in
mov
push
dec
sbb
insb
add
mov
int3
inc
enter
bound
mov
cltd
push
test
fs
pop
scas
add
jl
jne
push
aas
testl
cmpsl
lcall
ret
enter
pop
xchg
and
ss
push
out
mov
test
add
clc
xor
movsb
mov
out
mov
scas
movsl
push
into
js
call
mov
sbb
sub
xor
out
loop
lret
or
add
out
dec
inc
cmp
push
test
bound
pop
lret
add
testl
nop
mov
lret
adc
movsl
aad
test
and
mov
push
mov
jo
jge
xor
mov
lds
add
inc
xchg
rcr
pop
daa
push
mov
jmp
popa
mov
clc
cmpsb
in
insl
sub
inc
pushf
dec
sub
arpl
scas
fwait
mov
push
cmp
and
mov
add
jl
cmp
sub
sarl
jnp
xchg
cmp
cs
mov
in
cld
adc
xchg
mov
or
jmp
mov
pop
ds
in
out
rcr
jmp
pop
shlb
aam
repz
pop
and
mov
test
fisubrs
pop
xor
xchg
xlat
push
clc
and
in
inc
sbb
dec
test
popf
and
adc
mov
mov
pop
jmp
lar
xchg
cmp
aas
jne
add
ss
out
in
pop
movsb
dec
and
jno
out
faddl
into
sub
mov
fwait
push
pop
or
and
inc
loop
movsb
test
data16
test
mov
es
mov
push
add
push
fcomi
rcr
dec
push
lret
sbb
mov
cmp
jl
jg
bound
cmc
fadds
sub
and
pusha
cmp
add
in
enter
sti
out
jbe
hlt
imul
mov
cltd
mov
movsb
iret
cmp
clc
xchg
adc
mov
xlat
mov
daa
mov
xor
cmp
push
insl
xor
and
cltd
std
loop
cmpsl
out
inc
lahf
pop
adc
jp
xchg
loopne
pop
test
mov
push
jo
pop
movsb
pop
push
sbb
outsl
es
jo
push
xor
mov
test
mov
rorl
and
dec
inc
sbb
mov
mov
push
adc
xchg
mov
dec
inc
test
scas
xor
jbe
xchg
ror
es
xchg
cltd
popa
call
aas
xor
mov
lds
ret
lods
out
dec
mov
nop
xchg
out
sbb
scas
ss
or
out
jbe
call
nop
pop
pusha
pushf
dec
lea
insl
pop
pop
or
sub
jg
jo
icebp
jmp
insl
pop
div
clc
fisubl
jns
lret
dec
adc
push
adc
add
jmp
or
inc
xor
outsb
lds
mov
jns
adc
or
lret
cmp
inc
jl
inc
mov
push
icebp
lea
xchg
xor
ds
push
xchg
sbb
pusha
xchg
mov
sub
inc
mov
aam
outsl
rdpmc
or
pop
sbb
add
mov
push
ret
arpl
popa
or
fnsave
sbb
lds
gs
mov
cmp
push
je
fidivs
mov
aad
in
je
cli
push
adc
lock
jle
icebp
hlt
lods
or
cwtl
mov
mov
out
adc
or
cld
daa
cmp
insb
ds
out
divl
xchg
xor
dec
gs
push
sub
xchg
xlat
jle
xchg
daa
or
sbb
test
pop
lock
movnti
pop
push
mov
jo
mov
xor
push
push
and
push
xchg
inc
mov
das
aad
cs
std
sub
jo
mov
fidivrs
insl
xor
aad
xchg
sar
aas
sahf
pop
repnz
lods
push
pop
mov
cmp
adcl
pop
rcr
aas
sub
or
lds
pop
dec
sbb
push
xchg
sbb
jno
xor
cli
fdivp
ret
decl
jl
pop
inc
rcll
rorb
in
sub
enter
stos
lods
pushf
in
jo
ljmp
inc
push
add
test
iret
fmull
jmp
repz
inc
outsl
adc
xorb
xchg
es
jns
mov
mov
cmpsl
mov
pop
sub
mov
and
inc
lahf
jo
mov
sub
or
ljmp
pop
lea
inc
inc
out
sbb
icebp
add
cmp
pop
sub
cmp
stos
stos
mov
cmpsb
enter
jns
add
mov
ss
fstpl
adc
movsl
dec
in
push
sub
inc
push
test
sub
dec
cmc
ja
ss
cmp
lods
jns
adc
mov
xchg
fistpl
movl
xor
jg
xchg
les
cltd
inc
into
icebp
mov
jge
out
dec
int
or
and
xorb
mov
xorl
jl
mov
jne
out
pop
pop
jecxz
inc
xchg
dec
mov
divb
std
std
lret
aas
mov
mov
cltd
pusha
cwtl
mov
xchg
pushf
int
cmpsb
es
popf
push
or
lods
mov
xor
mov
aas
cmp
mov
push
sbb
movsl
mov
imul
aaa
pop
adc
cmc
and
xchg
in
sbb
cmp
ljmp
mov
in
jns
mov
es
pop
enter
stos
pop
jge
push
xchg
lea
cli
inc
movl
lods
add
sub
int
adc
fildl
scas
pop
dec
push
lret
add
inc
insb
push
in
stos
dec
js
notl
sbb
cmp
test
mov
sti
mov
cmpsb
loopne
add
add
cwtl
and
int
dec
je
mov
xchg
mov
mov
cld
xchg
jecxz
rorb
or
shrl
inc
ja
fsincos
sub
push
adc
dec
jp
jae
mov
mov
or
scas
shlb
cwtl
xor
pop
mov
xchg
xor
sub
mov
mov
inc
pop
mov
jmp
mov
scas
mov
inc
fstps
mov
out
lds
sub
xchg
fldenv
pop
idivb
pop
jb
mov
into
lret
cwtl
iret
ja
mov
xor
ja
fadd
or
in
into
fsubr
loope
lods
sub
fmulp
movsl
push
leave
xchg
add
and
scas
testl
sub
ljmp
fisttpl
icebp
imulb
mov
mov
dec
xlat
adc
dec
int3
out
call
pusha
mov
sub
add
dec
mov
sbb
jnp
adc
adc
dec
xchg
jp
mov
sbb
xor
shrl
fisttpll
and
cmpsb
in
jmp
xchg
fisubs
pop
shrb
shl
add
jae
out
pop
xchg
sbb
aad
fisubrs
leave
or
pop
and
call
fcmovnu
cli
add
stc
repz
add
mov
mov
xchg
mov
mov
mov
inc
lret
stos
inc
call
mov
outsl
arpl
rcl
pop
fsubrl
push
cmpsl
sub
xchg
dec
out
xlat
enter
jmp
jmp
xchg
push
lea
sbb
adc
test
stc
inc
and
pop
xchg
sbb
xchg
and
push
cmp
add
cmp
andb
cmp
in
jg
clc
in
test
stc
inc
popf
xchg
or
das
mov
ds
rdmsr
loope
mov
mov
and
jo
bound
xor
inc
movsl
jb
jmp
fucomi
pop
out
xchg
loope
ret
push
xor
ror
adc
mov
xchg
cli
cmpsl
mov
xchg
int3
adc
jnp
int3
scas
daa
push
jle
xchg
and
rcll
in
ds
aaa
mov
mov
or
mov
mov
shlb
xor
mov
imul
or
frndint
leave
shll
mov
scas
ret
lret
cmp
sbb
mov
jle
lret
scas
xchg
and
push
xor
mov
push
and
test
fwait
sbb
xchg
in
mov
stos
inc
jno
pop
xchg
dec
sub
mov
ret
out
fstl
ss
mov
data16
loope
lcall
stc
nop
rcl
jmp
mov
ljmp
cmp
inc
sbb
loopne
mov
pushf
sub
dec
inc
hlt
pop
dec
pusha
cmp
pop
adc
jp
mov
fidivl
mov
jle
or
xor
and
cmp
sbb
enter
sbb
aaa
pushl
mov
push
adc
push
out
pushf
jg
out
adc
pop
xor
mov
ret
inc
cwtl
xor
jp
lock
push
lods
lea
shlw
stc
mov
push
jo
xchg
nop
jbe
rcr
sti
out
call
xchg
dec
dec
test
sbbl
mov
or
mov
mov
jo
fadd
in
mov
cmp
push
inc
inc
xor
lcall
leave
xchg
lds
in
clc
sbb
call
xor
dec
push
mov
in
ljmp
xor
or
or
jae
sbbl
pop
adc
in
mov
mov
les
leave
ret
pop
mov
pop
lea
pop
call
xchg
mov
out
add
dec
mov
xlat
out
xor
mov
inc
dec
add
movl
mov
nop
mov
mov
sbb
sbb
ja
movsl
mov
ljmp
movsl
sub
jle
popa
or
inc
jmp
es
popf
push
adc
aas
je
dec
outsl
ret
sub
addr16
jb
adc
stc
mov
lcall
jbe
jb
shr
xchg
xor
lods
mov
xchg
add
fiaddl
fnstenv
mov
loope
lcall
cmpsl
cmp
ja
lock
out
adc
and
outsb
pushf
in
pop
popf
xchg
cmpsb
mov
leave
fsubl
pop
rcrl
adc
inc
fisubs
sub
cli
fnstcw
mov
push
xlat
cmc
lahf
data16
dec
pop
or
jmp
add
dec
insb
xor
test
push
push
movsl
mov
jno
add
aas
push
cmpsl
sti
stos
aad
push
and
jmp
sbb
stos
sub
jmp
add
cmpsb
add
aad
idiv
inc
call
pop
inc
jl
scas
xchg
popa
fnsave
mov
psllw
mov
sysret
in
jb
in
rcl
gs
cmpsl
shr
stos
cmpsb
pop
ret
ljmp
orl
mov
pop
subb
sbb
sbb
push
adc
push
xor
lock
scas
cmp
inc
outsl
mov
add
sub
fdivrs
out
aad
in
push
in
outsl
xchg
dec
pop
in
xor
pop
ret
push
cmp
xchg
fists
fbstp
ret
fsts
push
and
aad
ret
push
push
pop
addr16
pop
ret
stos
mov
xchg
jns
cld
out
dec
or
ret
or
mov
sub
pop
out
lds
and
clc
faddp
push
and
movsl
push
xor
mov
ja
inc
xchg
pop
xor
int
pop
or
addr16
das
mov
out
sbb
scas
adc
or
mov
ret
inc
jl
jmp
gs
popa
in
rcll
int3
jae
cmp
add
cltd
cli
mov
jl
xchg
and
sbb
dec
ret
jnp
insl
lret
and
jbe
push
subb
jge
lahf
adc
mov
sub
lahf
mov
data16
jecxz
adc
jmp
jns
ss
insl
je
dec
sub
sbb
scas
sbb
cmp
mov
mov
mov
push
mov
mov
or
inc
adc
sub
and
xchg
mov
popf
inc
sub
jae
incb
jg
repz
dec
insb
ret
rorl
mov
add
dec
push
outsb
ret
xchg
adcb
movsb
sbb
cwtl
push
arpl
push
lcall
pop
push
inc
test
xor
inc
in
mov
dec
jns
cmp
xor
xor
icebp
mov
inc
xor
xchg
lods
pop
or
adc
lret
fsubrl
adc
iret
pop
adc
pop
sti
ja
mov
pop
in
jbe
push
mov
push
mov
mov
in
test
cli
and
pop
add
fisubrs
dec
pop
clc
inc
jp
repnz
arpl
icebp
imul
sbb
dec
mov
adc
jb
adc
mov
or
in
rorl
mov
sbb
and
fdivrl
sub
scas
rcrb
js
mov
arpl
outsb
stos
inc
cmp
adc
pop
std
xlat
mov
sub
loopne
xchg
enter
push
push
stc
lahf
gs
stos
popf
lds
push
adcl
dec
mov
ja
dec
fdivrs
add
push
dec
rcr
stc
lret
repnz
fnstenv
pusha
inc
push
sub
loope
cli
xchg
push
in
lds
jne
daa
lret
fmuls
lods
push
jnp
subb
cmp
cmp
inc
outsl
lds
and
movsl
scas
dec
dec
stc
in
jb
mov
cmp
jl
push
xor
out
insb
jecxz
inc
sub
fstp
dec
lret
cld
jne
mov
cmp
std
rorl
out
add
and
mov
sti
dec
cmp
jle
cs
inc
mov
add
push
mov
jg
stc
sbb
pop
jo
dec
mov
jne
fnsave
insl
xor
and
jbe
vmread
mov
fstps
sbb
sbb
xchg
sbb
outsl
push
call
xchg
mov
push
and
lds
inc
dec
add
in
adc
es
push
mov
icebp
fwait
push
testb
shll
popf
enter
xor
sbb
cmp
test
scas
out
xor
add
jecxz
adc
cmp
inc
or
cltd
stos
scas
jecxz
lcall
stos
mov
add
pop
jle
int3
mov
push
mov
test
inc
adc
fwait
xor
sti
and
test
inc
inc
loope
fldt
push
add
enter
mov
sarl
push
ds
insb
push
mov
in
test
and
clc
call
xlat
in
inc
jns
pop
cmp
add
fwait
sub
xor
mov
push
mov
cmpsl
pusha
icebp
xor
mov
out
sbb
cli
pop
mov
loop
repnz
inc
jns
lods
jmp
stos
cmp
sub
pop
add
adc
lds
addr16
testl
aam
push
pavgw
ljmp
dec
cli
add
in
push
mov
popa
in
cmp
daa
lcall
sub
or
sub
scas
push
int
lods
sub
call
pop
jg
bound
rcll
stos
or
and
lds
or
out
pop
xlat
jecxz
dec
stc
aaa
sub
inc
test
mov
or
mul
repz
jne
stos
or
repz
in
test
stc
mov
xor
jb
and
and
insb
sti
std
sub
mov
insb
jbe
mov
adc
jecxz
repnz
pop
jmp
xchg
jne
out
mov
into
fistpll
fildl
outsb
or
aam
jp
or
cmc
not
or
das
out
pop
push
cmpsb
stos
out
imul
ss
xor
adc
dec
lret
jge
adc
stos
sub
ret
ja
out
add
ljmp
jmp
and
sahf
push
and
dec
fwait
mov
lds
lock
clc
mull
cmpsb
and
daa
push
dec
sahf
in
jnp
dec
popa
sbb
jge
jle
lahf
ss
jo
push
cmpsl
and
or
jg
mov
pushf
hlt
lea
fwait
popf
sbb
in
pop
clc
sub
movsb
cmp
stos
imul
lods
jbe
stc
pushf
jg
shlb
movsb
sbb
cmp
in
cmpsl
mov
inc
in
scas
faddl
cld
cld
xor
cmpl
repnz
dec
inc
adc
dec
mulb
icebp
cli
and
sub
cmp
mov
fld
pop
in
jb
dec
test
mull
push
addr16
shrb
jbe
gs
test
fsubrs
or
sub
fmul
shrb
int
mov
mov
cmp
or
jecxz
dec
xchg
lea
cmp
pop
popf
jp
pushf
mov
pop
daa
mov
xor
pop
push
xlat
push
filds
adc
sbbl
out
mov
mov
clc
jmp
xchg
rep
mov
in
pop
and
rcll
inc
stc
xlat
cmp
dec
lods
icebp
sbb
and
add
in
ljmp
mov
sub
and
xchg
pop
pop
das
adcb
adc
cs
dec
lods
push
or
fsubl
dec
ss
lret
jbe
xor
sub
push
jle
dec
je
xlat
mov
jae
es
lcall
fsubs
cld
lcall
outsl
jmp
sarb
jns
or
or
loopne,pn
cmp
lods
push
or
mov
push
mov
inc
jb
and
cmp
outsl
es
nop
gs
loop
imul
cwtl
mov
xor
cmp
shrl
clc
scas
inc
pop
pop
jnp
push
popf
cmp
rorb
push
fucom
cmpsb
sbb
rcrl
fidivs
popa
mov
cmp
add
outsb
sahf
sbb
lods
in
rcrb
push
or
ror
adc
ret
mov
xor
push
loope
cltd
out
insl
xor
sbb
dec
into
xchg
lods
push
cmpsb
mov
xchg
aad
pop
iret
int3
aad
mov
pushf
test
jmp
loope
and
pop
mov
fs
fwait
adc
shl
test
jge
mov
sub
lret
inc
mov
jl
pop
ja
lret
pop
inc
aaa
sub
sub
ds
test
xchg
inc
push
add
cmpsl
xor
out
lods
movsl
and
pop
jle
dec
nop
fs
add
int3
cmp
sbb
dec
mov
test
adc
stos
scas
imul
mov
mov
sub
sti
pop
cmpsl
pop
add
leave
jecxz
int
jne
pop
lret
fidivl
push
cmc
dec
hlt
insl
notb
push
push
movsl
pop
std
ret
ljmp
je
out
pop
out
or
lcall
insb
xor
and
inc
ficompl
daa
shlb
xchg
std
push
add
int
daa
cli
inc
mov
push
fs
dec
aaa
std
out
push
cmp
imul
gs
leave
mov
xchg
mov
push
jb
cmc
aas
inc
fwait
inc
sbb
mov
pop
mov
xor
stc
or
dec
dec
test
push
sub
xchg
dec
xor
jnp
pushf
cmp
jg
icebp
or
add
in
xor
loope
fs
push
jns
clc
push
dec
push
mov
aam
int
adc
add
out
insb
lret
in
jmp
add
lret
cs
sbb
fidivrl
push
sbb
mov
xchg
pop
mov
cltd
das
mov
jl
sti
dec
js
sub
call
fldenv
mov
adc
fsubrl
gs
or
cs
mov
mov
mov
rcll
xor
sbb
rorb
add
dec
aas
pop
iret
jne
in
stos
jbe
push
cmp
insb
int3
sub
and
pop
xor
lods
outsb
push
mov
shlb
sub
push
cmpl
dec
sbbl
jns
lahf
stos
daa
sub
or
jne
movsb
outsb
push
push
push
leave
and
outsl
mov
mov
dec
stos
cmp
mov
in
mov
pop
mov
and
inc
add
jecxz
jmp
or
push
sub
in
sub
sti
cld
js
xorl
outsl
lods
push
cmp
push
fisubrs
clc
push
aas
cwtl
ja
jle
inc
lods
sub
mov
shlb
pop
daa
imul
sub
mov
adc
dec
inc
scas
bnd
and
mov
insl
jns
pop
inc
mov
xchg
jae
xchg
sahf
lods
lret
cmp
and
enter
gs
pop
loopnew
pop
loop
dec
mov
mov
jge
stos
xchg
aam
pop
stos
cmp
in
ss
test
inc
movsb
ja
sbb
sbb
icebp
movsl
imul
xor
inc
mov
and
scas
insl
adc
in
iret
cmp
test
push
cmp
es
cmp
add
jle
xor
push
rcrl
mov
jl
cli
les
sahf
js
enter
fldenv
inc
movsbl
push
dec
lds
enter
add
jge
xlat
lret
push
mov
les
mov
jno
mov
dec
ficompl
mov
dec
jns
lock
outsb
inc
dec
cmc
push
dec
enter
inc
out
xchg
mov
adc
push
cli
xchg
not
cld
dec
ret
inc
adc
cmpsl
pop
in
ret
movsl
pop
jecxz
push
push
push
pop
push
out
sub
test
cmp
mov
cltd
dec
lcall
lret
ret
in
mov
mov
inc
mov
adc
cmpsl
xor
roll
imul
pushf
in
add
mov
mov
and
mov
push
sahf
push
jmp
dec
lds
repnz
leave
test
cmc
out
movb
jg
hlt
out
xchg
pop
xorl
pop
sub
cmpsl
xchg
dec
out
or
pusha
outsl
fcomp
lds
sub
dec
testb
les
pop
fwait
sahf
xor
and
shl
xchg
adc
lret
sbb
div
mov
aaa
test
adcl
fbld
adc
pushf
movzwl
stc
adc
xor
mov
xchg
lcall
jns
mov
jbe
daa
jg
push
mov
jg
stos
aas
cld
mov
daa
hlt
inc
mov
pop
push
mulb
pop
mov
out
jge
jb
loope
int3
test
lea
and
and
orl
vmread
sub
or
pop
loopne
arpl
leave
sbb
out
and
or
xlat
out
mov
push
jnp
jg
adc
cmpsl
cmpsb
add
out
xchg
cmp
mov
cld
les
sub
mov
aad
in
test
leave
jno
push
hlt
imul
inc
xor
sub
dec
adc
cmp
inc
jmp
mov
cld
sub
in
pop
fnstenv
out
stos
cmp
je
xchg
mov
adc
mull
pop
sbb
dec
lret
roll
ja
fwait
or
fldcw
fidivrs
push
aad
leave
scas
fimuls
push
dec
insl
leave
ja
mov
mov
pop
xor
adc
rcrb
jecxz
out
inc
insl
gs
loope
and
pop
pop
or
lods
nop
adc
pop
sbb
mov
inc
inc
cmp
dec
adc
lret
mov
fwait
inc
inc
fadds
jnp
add
sub
or
enter
or
xchg
test
sub
fisttps
movsb
jmp
inc
pop
inc
pop
ret
cli
les
mov
fisubrs
sub
notb
test
adc
aas
adc
add
loop
xchg
aad
xchg
subb
popa
sub
add
rcr
imul
xchg
jbe
cld
js
cwtl
das
insl
mov
or
push
ds
das
jae
push
cmc
pusha
mov
aam
repz
cmp
cmpsl
enter
inc
jns
inc
dec
push
add
fdivrs
fmuls
stc
xchg
lahf
jb
ret
adc
push
inc
into
pop
pusha
jg
adc
out
cmpsl
in
in
push
push
add
out
cld
push
push
inc
adc
push
push
aam
test
fimuls
xor
std
ljmp
mov
in
sub
xchg
test
xchg
mov
movb
cwtl
ss
fsubs
nop
in
sbb
pop
jns
outsb
add
or
subl
mov
add
lret
lea
sti
insb
inc
aam
push
jns
mov
or
lods
fnsave
jmp
sbb
pop
sub
cld
jne
inc
ret
pushf
imul
push
and
mov
sbb
jne
stos
pop
mov
jae
out
dec
addr16
out
fs
adc
cltd
lods
jmp
loop
push
rcl
mov
push
jne
push
idivb
and
cli
inc
xorl
fucomp
leave
adc
lcall
add
mov
mov
loope,pt
cmpsb
push
fwait
loopne
mov
inc
xlat
mov
incb
ficoml
out
vmovupd
ret
cmp
add
enter
rol
cmp
push
sub
pop
xchg
or
push
inc
xchg
inc
jns
rorb
fistpll
clc
inc
mov
enter
dec
in
push
fsub
mov
int3
adc
adc
jbe
jecxz
loopne
pusha
lods
inc
sub
or
inc
repnz
pop
ficomps
and
xchg
jbe
cld
sti
adcl
add
sar
clc
inc
xchg
xchg
cld
lret
and
data16
jp
orps
cwtl
push
add
aaa
test
leave
outsl
adc
cmp
push
addb
xlat
enter
insb
jno
add
dec
jecxz
lret
add
xor
pusha
notb
adc
movsb
xchg
scas
rolb
adc
push
lods
sti
jae
mov
fistpll
test
lods
int3
test
sbb
inc
inc
in
dec
movsl
mov
ret
movsb
xorb
fadds
aam
mov
mov
pop
out
movsl
and
in
add
hlt
fwait
inc
int3
xor
dec
ret
sub
dec
or
or
sbb
imul
xor
scas
lock
dec
mov
or
incb
hlt
xchg
pop
test
mov
insl
sarb
cmp
das
movsl
imul
shl
adc
movsl
push
pop
flds
xor
out
inc
sub
xor
lret
mov
lea
idiv
daa
lahf
imul
dec
push
out
adc
push
repz
imul
iret
xchg
test
mov
fldt
add
mov
shl
loopne
test
mov
hlt
int3
aam
mov
push
clc
cmpsl
sbb
inc
je
pop
jns
push
test
movsb
lcall
std
sub
daa
iret
out
imul
icebp
sub
mov
and
std
or
movsb
int3
pop
out
scas
scas
ret
repz
loope
lea
repz
inc
mov
or
sbb
mov
mov
dec
dec
lea
arpl
push
cmp
out
cmp
adc
lock
cmpb
jns
sbb
mov
imul
sbb
ret
aam
jmp
cli
jge
out
xchg
loop
or
call
scas
mov
sub
out
dec
cmpsl
rorl
cmp
jmp
or
cmp
adc
xor
mov
lea
mov
mov
int
popa
adc
in
mov
test
ljmp
push
mov
lds
mov
jnp
sahf
lea
subl
scas
xchg
jns
ret
jp
inc
test
push
pop
ljmp
inc
lock
push
jno
addr16
je
bound
mov
push
pusha
arpl
mov
sub
leave
ss
stc
test
lock
out
aam
outsl
cmp
repnz
mov
nop
out
test
pop
mov
push
arpl
aam
ds
jmp
jb
cmp
test
loop
aas
fmul
mov
test
shl
fdiv
push
inc
jmp
insl
mov
mov
add
pusha
data16
outsb
push
cs
xchg
mov
or
or
test
and
jmp
mov
and
mov
add
ljmp
jmp
cmp
aam
dec
sbb
cmp
jae
imul
cli
movsb
push
nop
add
fld
xchg
in
adc
movsb
cmp
movsb
pop
pop
bound
xchg
lods
sbbl
test
ret
fiadds
xlat
mov
jmp
inc
lods
js
imul
in
jp
push
mov
mov
je
pop
popf
dec
xchg
lds
and
xor
data16
xchg
dec
add
jb
movsl
mov
and
mov
mov
ds
mov
pop
mov
in
push
iret
sahf
fisubs
or
lcall
jno
jnp
out
add
jmp
outsb
loope
mov
ja
bound
insb
cmpsb
addr16
cld
repz
jl
cmp
adc
mov
mov
loope
xor
out
hlt
pop
inc
cmp
fld
dec
out
jae
sbb
jle
jae
fstpt
aas
andb
mov
loope
shrb
imull
jecxz
mov
rolb
jle
and
and
ret
inc
xchg
mov
mov
cmp
int3
scas
insb
or
xor
jne
fcomi
out
xchg
out
std
sub
fsubl
gs
jmp
roll
jo
or
loope
dec
sub
inc
inc
sbb
nop
leave
mov
xchg
iret
fnsave
leave
mov
sti
in
jecxz
hlt
mov
xlat
stos
xorl
mov
in
sahf
arpl
fwait
sti
in
sbb
repnz
in
jne
pop
or
cmp
lods
xor
aam
pop
cs
xchg
outsb
dec
imul
mov
inc
outsl
pop
cmp
dec
jno
and
or
sub
popa
add
mov
icebp
in
int3
ret
jno
imul
leave
inc
jp
das
outsl
xor
pop
ja
adc
mov
rcll
lahf
push
lock
jno
pop
dec
mov
or
rolb
xorl
movsl
inc
lret
inc
push
mov
sub
sub
das
jge
jae
sub
add
insb
sbb
in
inc
mov
jb
test
xchg
jns
js
pushf
in
lret
or
ror
inc
aad
push
rep
jg
dec
mov
mov
push
scas
ja
mov
pop
in
popa
xor
dec
insl
sbb
mov
push
push
or
cwtl
push
adc
mov
aaa
out
pusha
pop
push
fldcw
push
pop
cmpl
std
pop
js
cmp
jnp
cmp
imul
mov
jecxz
stc
jne
xchg
aaa
cmp
add
aaa
sub
imul
in
lcall
clc
test
ds
mov
cli
subb
stos
call
js
push
cmp
xchg
repnz
inc
jns
push
fs
arpl
orb
icebp
and
out
or
and
cli
incb
cmpsb
pop
ret
jp
add
ret
mov
test
hlt
inc
or
call
stos
call
mov
bound
pop
or
jnp
mov
std
rclb
ja
scas
and
xor
nop
stos
addr16
dec
pop
pop
sahf
xchg
cmp
ret
test
sbb
sub
cld
arpl
stc
mov
add
mov
xor
or
mov
push
sub
test
sbb
push
call
testl
filds
or
jp
mov
into
sub
in
call
jecxz
cld
ljmp
subb
mov
fiadds
test
into
dec
out
bound
sbb
icebp
jae
sbb
js
cmp
push
mov
inc
mov
stc
sub
pop
sbb
and
out
scas
cltd
mov
xor
cmpsl
pop
popa
push
stos
and
sahf
jge
in
or
shll
mov
out
aam
lcall
icebp
cmpsb
push
stos
ret
inc
adc
lods
in
dec
adc
ss
adc
dec
pop
test
jne
dec
mov
push
call
pop
dec
je
inc
ds
mov
mov
adc
jae
and
sub
inc
addr16
inc
xchg
inc
movsl
sub
loop
test
xchg
shrl
rclb
mov
or
push
fstp
mov
insb
adc
cmp
aas
mov
or
inc
aaa
push
insb
outsl
inc
scas
mov
or
ja
xchg
das
sub
mov
push
js
int3
push
lahf
mov
shl
adc
mov
jecxz
filds
ss
inc
cmp
jne
jmp
mov
aam
cmp
push
sub
loop
xor
cmc
daa
mov
loope
loope
mov
xor
aaa
and
pop
mov
jbe
ja
stc
fs
xchg
mov
push
mov
addb
fisubl
scas
aas
shlb
push
mov
xor
push
sub
mov
or
push
test
xchg
mov
mov
push
lods
mov
out
push
flds
loope
rclb
bnd
je
jmp
outsl
inc
sub
sub
lock
mov
sahf
push
popa
mov
pop
ja,pn
clc
mov
cs
mov
aam
or
incb
mov
std
or
std
jl
test
xchg
loop
pop
rolb
jnp
je
mov
icebp
clc
repnz
mov
popf
popa
lock
rolb
dec
shrl
popa
jp
and
or
sbb
pop
icebp
push
stc
arpl
cld
push
hlt
and
cmc
sbb
cs
aaa
xor
pop
adc
xchg
xor
aam
xor
jae
dec
in
sar
jae
xchg
sub
lret
lea
std
jge
adc
jmp
jne
jle
mov
stc
jle
pop
in
es
in
clc
dec
mov
sbb
fs
clc
add
repz
mov
frstor
pop
rcll
pushf
cmp
cmpsl
mov
out
movsb
sbb
imul
fs
ja
movsb
mov
js
mov
pop
and
imul
xor
jns
and
nop
rclb
push
lods
xlat
pop
pushl
mov
scas
ljmp
jecxz,pn
dec
cs
xchg
mov
pushf
pop
pop
xor
push
mov
push
ja
cmp
push
xchg
icebp
and
test
and
and
mov
stc
dec
cmp
pop
enterw
push
xor
test
fwait
cld
es
mov
inc
fidivrl
xchg
aaa
mov
setae
sub
xchg
fcoml
pop
cmc
in
scas
leave
jns
fmuls
xchg
push
push
cwtl
cli
xor
out
dec
pop
aas
push
out
lcall
and
loop
fsub
arpl
out
dec
cmp
lea
ja
jp
mov
sub
lds
ja
mulb
in
add
pop
divb
ds
mov
cmpsb
fcoms
xlat
mov
bound
cwtl
xor
imul
and
mov
imulb
jl
add
xor
bound
mov
add
dec
pop
xchg
cwtl
and
ror
and
pop
icebp
jp
rorb
cmp
fists
push
add
dec
mov
dec
mov
iret
sbb
pop
ljmp
jbe
sbb
jne
mov
or
mov
cld
mov
in
sbb
mov
cmp
mov
push
and
mov
pusha
cli
scas
int
fs
test
xor
push
into
pop
cmp
mov
in
rcr
lods
fadds
fcmovb
ds
je
lcall
jns
aam
pop
xor
lahf
lahf
and
in
add
and
orl
mov
es
adc
xlat
dec
cmpsb
bound
in
mov
dec
dec
iret
out
jmp
push
test
mov
add
pop
sub
mov
adc
pop
cmp
sub
ror
and
out
mov
test
pop
sbb
arpl
adc
lock
jae
daa
mov
fidivs
sbb
adc
mov
sub
mov
ljmp
push
xchg
enter
xor
cwtl
dec
mov
lea
cmp
cmp
cld
adc
adc
dec
enter
inc
adc
iret
test
inc
pop
inc
loop
frstor
dec
in
pop
and
aad
fistpll
mov
sahf
mov
pop
add
stos
and
stos
push
mov
push
adcl
loopne
rcrl
mov
fistpl
mov
call
sbbb
pop
das
popa
repnz
repz
insl
mov
je
inc
test
aaa
mov
loop
mov
nop
mov
jne
aam
jns
push
cltd
fldenv
pop
stos
adcl
int
dec
pop
mov
nop
repz
loope
ret
adc
aam
repnz
pop
data16
push
cmp
shrl
cltd
mov
in
mov
imul
hlt
xor
adc
xchg
adc
xchg
or
or
and
cmp
inc
push
icebp
mov
xchg
xor
sbb
rcrl
out
dec
sbb
out
addr16
fcomps
cld
adc
or
pushf
push
insb
sti
adc
scas
or
xor
out
sub
popf
dec
dec
and
in
mov
lret
lret
mov
fistpll
loopne
jno
xor
pop
mov
gs
jmp
mov
jne
adc
add
out
ds
out
sbb
xchg
jl
jne
daa
xor
jge
dec
add
ja
mov
cmp
cmp
adc
test
lds
js
and
push
mov
pop
adc
push
lock
mov
icebp
xchg
fwait
mov
imul
out
daa
aaa
inc
mov
cli
add
mov
lods
xchg
jge
push
push
lds
aaa
scas
push
jne
mov
fnstsw
enter
jb
xlat
adc
mov
into
cltd
jnp
in
pop
mov
fdiv
and
int
dec
aaa
cmpl
xchg
ficomps
sub
cmp
mov
ret
rol
enter
clc
push
sub
cmp
popf
test
jb
pop
cwtl
inc
sub
das
iret
sbb
xor
jbe
mov
repz
fisubl
or
and
pop
ljmp
mov
stos
mov
push
cli
jmp
xchg
add
sahf
pop
mov
lods
lret
sbb
mov
sbb
jne
inc
and
sbb
xchg
movsb
rcrl
dec
sbb
fdivrs
dec
out
and
inc
sub
hlt
std
xor
push
cmpsl
cld
xor
and
pop
dec
xorb
rorl
subl
int3
hlt
jb
sbb
xchg
js
call
pop
add
cmpb
or
add
add
ja
inc
cwtl
shl
bound
xlat
push
je
and
lock
mov
dec
nop
sbb
fmuls
sbb
sbb
push
pop
lock
mov
fmuls
inc
fs
or
bound
lock
push
sub
scas
iret
sub
shl
cmp
mov
aas
ret
and
sahf
and
dec
pop
jmp
adc
mov
movsb
scas
inc
das
pusha
gs
js
mov
sti
mov
outsb
scas
in
ja
jo
push
push
mov
inc
fistps
push
xlat
add
call
xchg
jg
adc
push
sub
ljmp
jmp
ss
jno
xor
mov
int3
lcall
xchg
pop
dec
in
dec
popf
xchg
cmc
lahf
mov
mov
bswap
jnp
or
xorb
repz
call
cmp
and
xor
add
cmp
in
testl
sbb
sahf
mov
adc
pop
gs
mov
call
insl
negl
push
mov
out
cltd
dec
out
incb
jbe
push
mov
and
pop
mov
inc
mov
outsb
xor
xor
sub
lret
addr16
and
in
aam
mov
inc
lcall
jmp
jnp
mov
repnz
cwtl
jae
pop
clc
frstor
or
mov
movsb
xlat
test
sub
ljmp
cmp
negl
push
sarb
or
xor
pop
flds
scas
dec
bound
jg
outsl
cmp
mov
scas
popf
pop
sqrtps
leavew
sub
fdivrs
lods
dec
xchg
fldl
rclb
shll
and
lock
push
lret
jns
push
popf
imul
add
mov
adc
push
sarl
out
cs
xchg
sub
mov
testb
leave
in
lret
sbb
pop
test
imul
inc
pushf
std
arpl
push
movsl
mov
test
pushf
iret
test
gs
add
test
fwait
or
cmc
pop
mov
loope
test
enter
and
stos
adc
mov
stc
jbe
pop
push
xchg
adc
add
ljmp
mov
stos
or
insb
lret
xchg
addr16
fadds
inc
inc
or
lods
jp
jp
cld
mov
add
adc
add
pop
add
sti
movsl
dec
je
push
push
shl
add
mov
std
mov
rclb
gs
add
ja
pop
scas
je
ds
cli
sbb
aas
cltd
pop
clc
jmp
outsb
push
jno
mov
imul
xchg
cmp
cmp
jae
push
sub
xlat
roll
and
jmp
aam
lahf
dec
mov
mov
bnd
xlat
lods
add
xchg
lea
out
sahf
js
push
mov
rcll
xchg
lcall
adc
decb
out
cld
outsl
jp
inc
jp
cmp
adc
imul
mov
xor
xchg
out
sub
clc
call
jmp
jmp
pop
mov
test
jmp
fnstenv
rol
xchg
in
outsb
push
pop
push
xor
out
nop
pop
inc
pop
imul
inc
fwait
sbb
pusha
pushf
cmc
sbb
or
imul
sbb
sbb
sahf
adc
sub
mov
cmp
out
into
sub
inc
rcll
inc
je
jae
add
loop
mov
cmp
xor
mov
dec
ljmp
fwait
push
loop
cltd
pop
push
in
xchg
xorb
cmp
jge
mov
mov
test
repnz
pop
bound
jle
dec
je
rcrl
pushl
cmc
loopne
iret
mov
stc
xor
cld
lret
pop
mov
test
xlat
sbbb
sahf
mov
ds
into
in
push
push
or
loopne
sub
inc
rorb
stos
jge
dec
sbb
jne
inc
mov
ret
pushf
repnz
push
mov
inc
lret
dec
pop
imul
add
aas
xchg
sub
lods
pop
push
mov
out
cli
iret
xchg
hlt
outsl
xchg
hlt
mov
pop
mulb
inc
mov
or
cs
jp
adc
mov
movsl
js
sti
dec
mov
loopne
xor
sub
mov
ret
push
pop
mov
mov
sbb
fs
ljmp
sub
add
cmpsb
dec
xor
ss
add
ss
mov
push
cmp
cs
inc
xchg
repnz
jp
mov
imul
dec
cmp
dec
pop
cmpsl
int3
dec
sbb
fisttpll
xchg
data16
testl
inc
xor
mov
push
std
lret
xchg
je
outsl
std
inc
popa
cwtl
fistpll
mov
roll
or
test
or
clc
fimull
jno
cmpsl
jmp
pop
outsb
fidivrs
mov
idivb
pop
or
mov
ret
push
test
les
and
and
sub
jge
aas
mov
stos
mov
aas
daa
dec
sub
push
in
xchg
shl
mov
fimull
testb
push
jecxz
fidivs
or
xor
cmp
sub
cmc
inc
adc
fcomi
jno
inc
inc
cltd
jno
frstor
cmp
aaa
dec
test
mov
outsb
push
data16
cmp
push
push
call
test
out
adc
fildl
lcall
movsb
mov
addr16
sub
jp
shl
pop
loopne
add
push
jns
cmp
hlt
jl
push
cmp
sbb
ret
add
into
fcompl
push
mov
nop
mov
and
pushf
cli
dec
mov
xchg
outsl
test
push
rcpps
mov
xlat
adc
imul
sub
push
inc
adc
daa
ret
pop
ljmp
or
adc
das
in
lcall
mov
or
xchg
addr16
mov
dec
jns
mov
cmp
push
aam
int
and
cld
sbb
insb
xchg
fwait
xchg
jl
mov
ja
gs
je
or
add
in
lcall
ss
sbb
bound
mov
clc
push
sahf
cmc
rcrl
inc
pusha
ss
cmpsl
xor
xlat
out
imul
repnz
xchg
mov
push
and
mov
aam
xchg
stc
int
clc
and
adc
icebp
dec
adc
jle
pop
mov
loope
and
ss
fs
or
or
lret
sub
imul
shlb
add
or
dec
stos
jg
mov
call
dec
mov
mov
sbb
js
jo
pop
jp
fidivs
xor
das
jg
lods
pop
mov
rorb
jl
sar
mov
lret
test
mov
imul
jge
sti
mov
jl
mov
cmp
pop
cmp
arpl
cmp
jge
sbb
lods
pop
xchg
ds
or
pop
out
jle
lret
jb
mov
aam
push
add
jnp
test
jmp
xor
pop
je
sti
inc
cli
lods
fcomip
adc
jg
pop
insl
std
or
sub
mov
sbb
mov
lea
xor
pop
sbb
fnstsw
pop
xchg
sub
lahf
jno
test
jo
stos
mov
loopne
adc
enter
aam
pop
lods
and
jmp
ror
mov
lcall
outsl
pop
sub
jb
ret
mov
popf
popa
cs
cmpsb
push
popa
ss
adc
imul
jp
jp
add
in
stos
data16
push
out
fcomps
stos
mov
lock
add
dec
rcrl
pop
jno
andb
loopne
or
fs
std
fnstsw
test
dec
fdivl
pop
sti
push
sti
inc
scas
mull
jno
in
sub
sub
mov
adc
stos
ret
inc
cmp
int3
xor
cmp
sub
jnp
push
pop
sarl
in
lea
je
adc
sub
out
loopne
jge
push
out
leave
cs
or
aaa
pop
xchg
xchg
js
mov
jg
xchg
pop
repz
out
mov
jle
rcrl
mov
or
std
mov
enter
mov
outsl
movsl
sbb
ja
dec
fisubrl
arpl
lea
xchg
and
repnz
jne
fwait
mov
out
xchg
push
inc
fidivs
fcmove
sub
ss
adc
fadd
push
add
jbe
movsl
orb
mov
cli
xor
mov
stos
outsb
sub
popa
mov
push
sub
xchg
xor
outsl
mov
push
xor
sbb
fs
repz
dec
pop
sahf
mov
xor
jbe
jae
fs
jbe
mov
mov
pop
jnp
xor
pusha
add
mov
lret
jnp
mov
subl
inc
fnstenv
or
push
les
adc
jecxz
dec
jle
lahf
add
xor
es
mov
mov
inc
xor
xchg
js
jb
sbb
push
stc
lcall
xor
lds
or
jnp
out
pop
push
jo
pushf
imul
stos
test
icebp
roll
std
xchg
movsl
push
aam
and
ret
push
int
in
sub
ret
xchg
orb
pushw
scas
pop
xchg
aam
cli
sbb
or
leave
repnz
cmc
jge
cs
stc
mov
pusha
loope
fldenv
jecxz
and
repnz
ficompl
adc
in
mov
jp
and
or
sbb
cwtl
cwtl
mov
shl
xor
in
pop
push
icebp
jle
test
mov
shrb
xchg
popa
add
and
or
call
fistpl
shlb
shlb
jae
jle
int
ds
sbb
sbb
pop
ficompl
out
add
jns
mov
push
jle
adc
and
dec
js
testl
pop
adc
mov
push
lahf
adc
filds
rcl
lcall
xlat
jl
mul
cmpsb
jne
xchg
jecxz
pop
add
in
les
sub
test
xchg
cmc
and
and
push
test
or
jp
mov
and
pusha
jbe
psrlq
push
repnz
mov
xor
lods
pop
jbe
in
lds
fldcw
cltd
cmpb
dec
and
mov
dec
cmp
sbb
xchg
lcall
scas
call
movlps
mov
lea
jb
scas
mov
mov
jmp
and
leave
xchg
push
ds
pop
jle
pop
jae
in
pop
sub
pop
cmp
dec
data16
cmp
gs
lret
sti
mov
mov
inc
cld
aaa
mov
je
test
imul
sub
pop
shl
pop
inc
test
daa
pop
sbb
cmpsb
mov
push
or
dec
and
insl
dec
out
mov
sub
or
inc
cmp
test
pop
stos
add
bound
push
jb
pop
aad
mov
jmp
fimull
adc
cmp
lock
cwtl
movsl
into
bound
mov
shll
xchg
iret
sub
movsb
push
leave
xor
xor
jge
call
rorl
das
pop
jl
fistl
sbb
into
jecxz
call
frstor
add
jb
jecxz
cltd
and
jmp
fsts
sub
xchg
adc
aad
sub
xor
mov
mov
aad
pushf
scas
scas
test
or
in
bound
mov
iret
mov
sti
mov
mov
and
push
jge
pop
adc
jb
sbb
and
es
mov
mov
ficoml
movsl
aad
mov
add
mov
jg
cwtl
cld
insl
ds
sub
xchg
sub
inc
and
aam
jo
loope
push
sbb
jne
pushf
repnz
lods
push
inc
shrl
lret
xchg
xor
popa
repz
sub
cmpsl
sti
or
addr16
testl
mov
sub
mov
es
lret
popf
mov
sti
and
push
jns
out
sti
mov
lcall
ror
or
xchg
sbb
jg
push
mov
mov
cmpsl
sub
out
cmp
ret
lcall
test
xchg
ja
out
repnz
dec
lcall
adc
into
int
adc
mov
fidivrl
xchg
jg
je
dec
ja
mov
mov
and
add
push
scas
stc
dec
enter
sbb
jne
xchg
in
mov
push
dec
push
sbb
arpl
and
dec
hlt
mov
dec
test
mov
insb
test
xor
sbb
push
sub
sbb
mov
subl
or
push
idiv
stos
cli
fbld
mov
inc
in
jne
ret
fcoml
jge
popa
les
daa
sub
lods
cs
mov
jns
cmp
out
add
and
push
cs
cmc
in
leave
xlat
add
fbld
ljmp
imul
inc
mov
rcl
cmp
xchg
arpl
lcall
in
push
insb
mov
pop
jge
pop
jnp
inc
and
pop
pusha
jmp
jne
int
mov
stc
sbb
fiadds
loopne
jae
xchg
sub
ret
adc
sbb
into
xchg
jne
clc
movsb
or
nop
clc
push
in
sbb
pop
sub
jl
or
dec
push
stc
clc
and
ss
iret
clc
repz
jp
pop
pop
dec
inc
outsb
scas
fnstsw
divl
xchg
in
popa
inc
push
pusha
into
jecxz
cmpsl
jle
scas
pop
stc
popa
and
repz
mov
dec
xchg
jb
xor
and
repnz
mov
not
lahf
jmp
test
loopne
cmpsb
mov
leave
jmp
mov
cmp
mov
loope
in
xchg
call
pushf
popf
mov
out
sub
and
iret
mov
xor
cmp
inc
call
push
fcoml
dec
in
pop
scas
add
and
jo
loopne
pop
push
mov
sti
cli
test
jmp
dec
std
push
add
ds
call
sub
xor
jno
fucomi
in
sub
mov
push
inc
data16
sbb
icebp
outsb
iret
xchg
jo
mov
jge
popf
mov
mov
test
mov
jp
sub
dec
and
xor
xchg
inc
out
les
jp
mov
xchg
icebp
lahf
stos
in
dec
stos
and
xchg
or
jecxz
cmp
insl
int
or
stos
inc
mov
scas
icebp
sbb
gs
sbb
imul
mov
pop
sub
xchg
mov
inc
xchg
jle
jmp
pop
pusha
sub
je
jae
mov
test
xchg
fisttps
sub
adc
outsl
mov
cmp
and
and
popf
xor
mov
subl
xor
cltd
ljmp
pop
popf
xchg
aas
lds
pushl
mov
push
jmp
inc
aas
mov
test
and
jl
xor
movsl
xor
adc
mov
cmp
bswap
lret
hlt
xorb
sub
mov
dec
and
imul
or
cmp
mov
or
int3
imul
gs
sub
and
movsl
or
das
ja
imul
pop
lret
in
push
in
outsl
fdivrs
sti
das
mov
adc
mov
push
and
stos
rorl
loopne
and
lods
mov
popa
aas
or
or
jae
hlt
xchg
test
fidivs
cltd
fstl
aas
pop
sbb
repz
sub
mov
jl
fwait
lcall
or
sbb
jmp
push
xchg
lahf
or
pop
in
outsl
jns
call
cmp
clc
inc
loop
addr16
and
xor
cs
scas
sub
into
jge,pt
xchg
mov
push
mov
mov
pop
xchg
push
pusha
jmp
dec
insl
call
jg
xor
shr
int3
mov
cmpsl
xor
sbb
mov
sub
jle
pushl
test
addr16
inc
mov
cmp
pop
daa
les
sti
clc
dec
xor
fs
outsb
cwtl
jae
shll
out
jecxz
and
cli
cmp
popf
cmp
dec
enter
adc
ljmp
sbb
jno
sub
mov
movsl
mull
jb
stc
lret
pushf
inc
cwtl
clc
jp
sahf
add
xor
mov
arpl
leave
push
mov
into
jb
pop
sub
xchg
cld
jmp
cmpsl
dec
pusha
clc
cld
pushf
aad
repnz
adc
push
cmp
push
jmp
cltd
cmp
orb
ss
push
loop
add
jge
or
repz
inc
inc
jo
xchg
and
jae
add
stos
mov
jbe
mov
mov
or
fidivs
push
popl
pop
and
dec
fdiv
sbb
xor
test
dec
test
lret
mov
mov
cmp
lods
in
inc
and
jle
ljmp
imull
ret
ja
aaa
lds
insb
scas
push
cmp
jns
cmc
pop
insl
jg
paddb
add
clc
loopne
or
cmp
pop
in
pop
scas
ss
and
leave
lcall
fstpl
stos
shll
cltd
pop
mov
jb
sub
sub
pop
ljmp
dec
mov
outsl
or
das
lock
daa
clc
out
nop
mov
add
mov
push
mov
sub
adc
daa
inc
call
add
adc
xchg
sub
dec
mov
or
mov
add
enter
das
pop
pop
call
rorl
xchg
xor
push
iret
ss
pop
int
xchg
data16
ss
daa
add
shll
fsincos
arpl
sbb
mov
in
push
add
and
push
or
fwait
pop
rclb
int
scas
or
mov
scas
jp
or
and
mov
sub
inc
or
and
clc
add
rorb
ljmp
gs
fimull
xorl
sar
push
bswap
mov
mov
loop
mov
or
dec
movsl
arpl
jp
dec
dec
inc
xchg
ss
mov
mov
rcr
mov
push
cmp
loopne
pushf
leave
shrl
dec
xchg
xor
repnz
and
mov
cmp
adc
mov
push
fstpt
cmpsl
inc
jbe
in
loop
sbb
or
xor
pop
shll
push
push
adc
jmp
pusha
cmp
jb
call
fcoml
je
ljmp
push
sbbb
lods
pop
pop
and
call
nop
mov
and
fimull
aad
and
repnz
push
mov
xor
push
add
fwait
mov
movsb
inc
lcall
std
xchg
push
enter
jns
test
frstpm(287
out
in
clc
inc
cwtl
lret
push
es
push
popa
add
inc
fdivs
pop
ficomps
mov
dec
rcrl
lret
inc
mov
xor
xlat
aad
fldl
jo
insb
icebp
sub
std
dec
hlt
mov
dec
adc
rcl
ja
mov
mov
push
rolb
stos
pop
pop
cwtl
lret
aas
mov
loope
mov
lcall
ljmp
push
xchg
fdivrp
scas
test
lods
mov
in
repnz
mov
lods
aas
xor
outsl
and
stc
jle
xchg
pop
lahf
mov
jne
dec
xor
mov
sub
lret
or
cld
dec
call
js
shl
or
inc
inc
ret
sbb
push
xor
mov
mov
or
inc
ret
imul
pop
jg
hlt
sbb
xlat
push
jae
aad
push
mov
imul
mov
cmp
lods
shll
sbb
in
test
pop
push
cs
sbbl
ljmpw
pusha
push
lods
add
test
andb
ret
sbb
clc
insb
sub
sbb
xchg
ljmp
das
xor
jmp
push
jle
jno
xor
mov
cmp
push
mov
xchg
mov
pop
sarb
mov
jle
loop
adc
stos
mov
push
or
mov
xchg
inc
jl
sub
imul
div
divps
sub
adc
outsl
movsl
mov
repnz
xor
xchg
sbb
ja
into
and
sbb
adc
fisubrl
mov
sbb
push
ror
rol
jb
fsub
lock
mov
pop
out
inc
and
sub
and
push
xchg
mov
pushf
pusha
inc
xchg
cmp
dec
push
inc
sub
popf
movsb
out
mov
lds
or
imulb
pushf
sbb
mov
mov
mov
xor
fsts
and
ret
mov
fcompl
inc
push
in
stc
mov
xchg
lods
sub
aas
dec
shl
sub
mov
pop
lahf
pushf
dec
push
mov
mov
into
dec
fidivrl
push
mov
mov
enter
sarb
fcompl
pop
sti
pop
repz
mov
out
ss
pop
jmp
mov
xchg
clc
icebp
aaa
pop
sub
or
rolb
int3
jb
andl
jg
dec
mov
iret
repz
mov
and
sti
pushf
int3
and
jb
ja
decl
sti
scas
sbb
js
inc
iret
mov
out
aaa
push
lret
shlb
rcrl
inc
mov
stos
aad
aas
enter
push
insl
std
dec
shrl
popw
mov
jg
cmpsl
in
test
int
mov
pop
push
mov
test
or
aam
es
call
jl
call
pop
rorl
push
outsb
addr16
cmp
leave
inc
test
jo
xor
sahf
iret
clc
and
mov
inc
aam
aaa
cli
leave
stc
jb
xchg
test
add
test
outsl
test
andb
sti
and
lea
iret
clc
jmp
sbb
pop
cmp
pop
lock
in
rcl
sbb
sub
shl
lcall
jns
xor
mov
cld
das
xchg
data16
fiadds
xchg
and
negb
out
push
add
filds
addb
aas
dec
mov
cmp
test
xchg
lods
dec
xor
sub
mull
or
popf
fwait
lret
jns
mov
add
sub
add
mov
addr16
cmpsb
mov
mov
movsl
ret
sbb
test
test
into
lret
inc
popa
mov
adc
cli
add
mov
lahf
inc
sub
outsb
cmp
movsb
cltd
dec
sti
cmpsl
sub
das
das
or
xchg
push
pop
and
inc
adc
push
lret
xchg
sub
imul
pop
or
jl
mov
clc
rorl
cmc
in
push
sti
cmp
or
leave
mov
push
stc
sbb
dec
sbb
mov
lcall
mov
or
xor
in
cltd
ficomps
mov
in
aaa
repz
bound
mov
inc
into
ficoms
xchg
sahf
mov
int
pushf
or
push
and
addr16
aad
das
scas
sbb
dec
arpl
push
cs
push
xchg
ret
pop
xchg
out
fcmovu
test
adc
cwtl
adc
jnp
incl
add
jns
or
ds
jnp
pop
cmp
mov
jae
dec
cmpsl
movsb
aas
insb
es
and
dec
dec
bswap
xchg
jne
push
mov
outsl
movsb
cs
mov
hlt
dec
xchg
mov
cmpsl
ds
andl
jo
jmp
fldcw
sub
add
xor
and
daa
dec
lock
mov
mov
push
lds
enter
adc
rorl
sub
jp
imul
fsts
lret
inc
lods
add
cwtl
fnsave
test
mov
mov
mov
ljmp
pop
push
adc
mov
jae
aaa
push
xor
pop
leave
or
or
sbb
cs
mov
call
lcall
popa
push
and
jae
cs
jl
push
xchg
jnp
mov
lods
fwait
in
adc
push
aas
loopne
adc
jmp
jecxz
pushf
int3
scas
sub
and
jle
fs
sub
stos
fucomp
pop
pop
xchg
push
add
test
xchg
aas
stos
test
sbb
inc
roll
lods
jp
les
in
inc
pushf
aas
mov
or
fmul
sub
and
stos
ljmp
cmp
sbb
lcall
and
push
sub
lret
pop
loop
mov
mov
loope
dec
mov
int
imul
bound
cmpsb
mov
mov
inc
jbe
or
in
mov
adc
inc
cmp
mov
and
ss
cmp
lcall
rorl
xor
cmp
sub
test
subl
pushf
inc
out
jne
sbb
sub
mov
aad
scas
es
iret
pop
mov
cwtl
shlb
pop
stos
sub
inc
or
xor
mov
insb
sarb
mov
mov
adc
xchg
mov
repz
icebp
push
in
faddl
xchg
int
mov
jns
sbb
push
mov
pop
adc
sbb
mov
fs
jne
jnp
push
fistl
push
icebp
fyl2xp1
fimuls
in
faddl
xchg
call
jb
fcmovne
aas
sub
jecxz
inc
aad
push
insb
sbb
ret
test
cmp
add
jl
jge
xchg
stos
loopne
test
aaa
sub
fwait
insl
lock
sub
std
pop
fisttps
and
push
sbb
inc
cmpsl
jl
mov
inc
mov
movsb
in
dec
mov
fstpl
mov
lret
cmc
in
lods
push
mul
or
adc
add
adc
popa
fs
mov
push
or
stos
cltd
or
add
push
xchg
inc
push
into
push
imul
jle
sbb
xor
add
xor
mov
repz
mov
out
add
aaa
iret
andl
xchg
jg
mov
or
hlt
movsl
sbb
mov
mov
mov
ret
arpl
in
mov
xor
lret
pop
mov
sub
pop
cli
imul
scas
fwait
pop
imul
faddp
das
mov
cmp
mov
dec
aam
push
loope
jne
fmul
gs
loop
andb
sarl
scas
fwait
test
cs
add
leave
imul
fcomip
push
push
imul
repz
and
push
rcrb
xchg
loope
mov
cmp
mov
sub
aas
js
movsb
mov
sbb
xor
jmp
inc
es
adc
xchg
fdivr
scas
andl
clc
push
mov
sub
lods
add
push
pop
sbb
fstpt
or
sbb
fwait
mov
and
inc
push
outsb
add
lock
dec
xor
in
push
fadds
sti
mov
mov
mov
mov
ss
mov
mov
inc
sub
les
outsl
scas
stos
jl
push
loop
xchg
cli
js
sub
in
stos
mov
ljmp
and
jno
sbbl
xor
cmpsb
adc
fsubr
es
xlat
aam
pusha
jnp
inc
int
or
dec
mov
pop
mov
int3
lds
xchg
loope
sbbl
addr16
popl
xchg
hlt
test
mov
xor
add
push
les
lods
std
adc
imul
xchg
lret
pop
push
cli
jmp
ficompl
orb
cmpsl
and
adc
cmp
fnsave
push
insb
stos
sbb
mov
sub
daa
stc
add
lret
lcall
sti
fnstsw
lcall
jo
sub
mov
mov
mov
mov
out
fistl
stos
adc
insb
push
sub
xchg
stos
cmp
xchg
pop
outsb
int3
inc
or
and
and
jp
xchg
mov
jge
pop
mov
fldenv
aas
sbb
jmp
orl
cmp
pop
clc
inc
fbstp
call
cld
and
lock
sbb
xor
sub
clc
inc
sub
movsb
daa
pop
lods
mov
loopne
inc
xor
movsb
fmull
jne
pop
outsl
shlb
xchg
arpl
mov
aas
cld
xchg
xchg
daa
hlt
pop
inc
jge
mov
int
jo
mov
sub
enter
cmp
in
or
pop
adcb
fldcw
data16
sarb
lcall
cmc
xchg
pop
xor
test
cmp
inc
hlt
in
pop
outsl
nop
and
cmp
rorb
icebp
mov
fwait
sub
mov
ret
or
leave
int3
and
mov
push
cli
int
std
mov
xchg
loop
icebp
dec
cmpsb
in
popa
xchg
incl
daa
mov
add
in
pop
aas
test
xchg
jl
mov
inc
ret
fsubrp
pop
mov
hlt
shll
out
scas
pop
push
iret
lock
cmp
add
sarl
in
jne
and
out
aam
pop
sarb
xor
lcall
bound
mov
ss
sar
cmc
imul
cmp
push
loopne
out
mov
pop
mov
shll
push
movsb
sbb
dec
pusha
or
lea
cmc
pop
pop
mov
sbb
pop
mov
inc
dec
jmp
adc
pop
stc
call
imul
xor
jne
jl
adc
popf
aas
imul
adc
insl
and
in
fstpt
and
pop
das
je
lock
cltd
cwtl
fstl
imul
outsb
ret
fdivr
rorl
enter
mov
cmp
int3
push
push
int
andl
sbb
mov
js,pn
pop
push
inc
sbb
jbe
insb
insl
mov
pop
fs
xchg
push
mov
insl
sbb
cmpsl
sahf
adc
jge
and
and
pusha
xor
sarb
insl
lahf
lret
pop
jb
and
lods
xchg
scas
xor
mov
sbb
insb
and
sub
nop
xor
push
dec
sub
fistps
insb
lcall
mov
cli
add
add
daa
in
test
bswap
mov
pop
sbb
cmc
lcall
adc
mov
sbbb
jnp
cld
sbb
sub
xchg
mov
loop
mov
sbbl
repnz
out
adc
and
test
mov
cli
push
sti
sarb
push
movsl
mov
pop
jne
xor
and
repz
repz
out
inc
cmp
and
insl
sbb
mov
call
cli
push
fisttps
dec
nop
cmp
pop
push
or
loope
sahf
test
push
sbb
push
addl
lcall
orb
out
cltd
push
test
jg
inc
ret
cmp
repnz
sbb
xchg
mov
insl
xchg
jp
mov
or
mov
scas
xchg
aaa
testl
jo
lods
test
icebp
addr16
jmp
in
jecxz
xor
pop
xor
adc
or
push
mov
mov
cmp
cmp
or
lahf
je
fstl
lods
xchg
mov
pusha
jnp
jb
loope
jo
jecxz
xchg
vsubpd
and
adc
inc
adc
pop
xor
test
cmp
sub
mov
test
adc
mov
gs
subb
inc
jmp
ss
roll
ud2
in
dec
jge
and
or
jb
mov
push
mov
nop
jbe
push
push
cwtl
pop
pop
out
rcr
hlt
mov
cmp
sub
cmpsl
jne
leave
jecxz
fadds
into
and
daa
xorb
js
sti
push
icebp
push
aam
scas
dec
xchg
sub
mov
data16
enter
xchg
push
sub
push
pop
scas
cmpsl
mov
or
xor
xor
fsubp
and
push
xchg
std
loop
mov
cs
sub
mov
or
add
jnp
jl
arpl
xor
add
jg
pop
cld
add
inc
daa
sub
out
cmpps
aas
mov
out
fwait
hlt
cmp
pop
or
or
outsb
or
cmp
movl
pushf
mov
js
mov
xor
mov
cmp
inc
std
pop
xor
ficompl
mov
xchg
into
pop
outsl
xchg
int
dec
test
cwtl
adc
pop
jns
pop
shrb
sbb
fdivs
cmpsl
notl
mov
mov
pop
insb
jmp
pop
pop
or
call
clc
push
notb
repnz
jo
ljmp
mov
decl
xlat
frstor
pop
xor
xchg
test
mov
sbb
out
push
pop
aam
lods
mov
mov
mov
or
xor
xchg
sbb
xorb
xchg
and
xor
push
call
inc
in
std
add
pop
jae
sub
cmp
popa
aaa
test
mov
or
jmp
das
xchg
inc
mov
rorb
inc
adc
imul
jp
cmp
repnz
pop
mov
mov
lods
push
gs
jo
notb
sub
sahf
outsb
push
sbb
adc
rclb
sub
dec
sahf
test
pusha
ja
sahf
inc
call
sbb
pop
dec
scas
in
jp
cmp
data16
dec
xor
in
mov
add
cs
mov
pop
sub
mov
div
hlt
dec
shl
or
in
jle
sbb
cli
ljmp
clc
orb
addr16
push
scas
repz
push
pusha
push
sbb
cmpsl
dec
mov
dec
out
jo
or
loope
inc
mov
les
inc
loope
arpl
xchg
es
dec
ret
int3
ret
or
lea
int
sub
and
cmpsl
fdivl
xchg
fbstp
lret
loop
xlat
sbb
dec
cmp
mov
in
enter
or
test
outsl
mov
cwtl
inc
popf
fnstcw
pop
jp
and
scas
adc
jmp
lahf
outsl
push
inc
cmp
pop
mov
jecxz
sub
mov
cmp
ret
pop
fidivl
pop
arpl
cltd
stos
sub
movsb
sbbl
cli
cmpsb
aad
dec
in
stos
mov
jl
jecxz
repz
push
and
inc
mov
push
cli
mov
push
es
add
adc
or
xchg
cmpb
movsl
mov
loop
cmp
mov
push
movsb
push
jle
cwtl
fnstcw
stos
leave
jo
push
iret
sub
aas
pop
push
test
pop
imul
inc
insl
and
and
add
push
xchg
xor
cmpsb
xchg
sti
jecxz
sbb
fwait
push
lret
and
int3
inc
decl
sbbl
scas
ret
ja
mov
pop
out
or
jb
jbe
shr
dec
clc
int
jb
ja
sbb
cmp
adc
add
xchg
push
xor
fwait
push
push
test
and
fsub
and
push
jle
xchg
enter
adc
ret
orb
sub
bound
xor
in
scas
cs
mov
mov
out
mov
loopne
push
jnp
cmpsl
mov
shrl
insb
xchg
mov
xchg
adcb
out
and
or
add
adc
jmp
es
push
fisubl
pop
push
repnz
or
push
mov
jle
lods
mov
sub
stc
enter
dec
mov
mov
fldcw
jmp
dec
xchg
inc
inc
addl
les
or
inc
xchg
lock
cwtl
xlat
sbb
lock
es
inc
xlat
add
mov
sub
pop
mov
push
negb
jecxz
dec
aam
mov
mov
add
jae
push
adc
rolb
lahf
sarl
mov
cli
mov
sbb
jge
scas
mov
mov
gs
imul
frstor
xchg
add
stos
loop
jecxz
cmp
pop
iret
in
xchg
cmc
jmp
push
movsb
push
adc
aam
lahf
mov
loopne
lahf
or
in
adc
stos
pop
mov
roll
adc
and
dec
hlt
jg
jbe
lds
dec
sete
push
dec
cli
push
inc
push
xchg
cmp
dec
test
daa
mov
shr
stos
lret
cwtl
out
fisubl
cwtl
rorb
insb
loopne
scas
negb
imul
push
jnp
cmpsb
aam
mov
cli
ss
mov
fsubrl
jecxz,pn
adcb
jmp
mov
mov
dec
mov
rorl
insb
cmp
sbb
stc
mov
sub
idiv
js
mov
mov
pop
sbb
lcall
mov
movhps
mov
push
mov
mov
int
xor
dec
dec
push
xorl
out
aad
jae
mov
in
xor
out
push
jb
cli
clc
push
xor
push
xchg
push
jb
dec
jns
lret
jno
mov
cmp
and
cltd
sub
aam
cli
jbe
cld
daa
stos
lods
int
xchg
iret
xchg
cmp
aaa
loopne
dec
arpl
inc
jns
and
xor
jno
scas
sar
or
lcall
incb
out
data16
jnp
xor
push
jp
jnp
stos
stc
ret
adc
xchg
dec
fidivl
mov
fldcw
pop
cwtl
mov
in
mov
sub
xor
out
or
mov
and
and
je
inc
rcl
loope
lret
fs
mov
ljmp
cwtl
xchg
jg
shrb
mov
jae
xchg
loope
xchg
or
cmp
xor
mov
iret
repnz
jnp
push
aas
into
lods
mov
leave
pop
mov
xlat
subl
repz
mov
in
stc
ljmp
sub
xor
jmp
ret
mov
xchg
ret
cltd
and
pop
cmp
mov
xor
inc
insl
inc
sub
cmc
pop
or
enter
sbb
cmc
xchg
sahf
imul
jo
push
or
adc
movsl
pusha
nop
in
mov
sub
mov
cli
testl
popf
loop
into
icebp
mov
in
test
pop
repnz
jmp
les
jno
fisttpl
test
jp
jae
and
dec
std
in
add
adc
adc
iret
mov
jne
xlat
push
in
call
jl
test
fnstenv
hlt
lods
xchg
int3
adc
scas
or
mov
repz
imul
mov
push
sub
inc
jecxz
aas
push
xor
sbb
mov
xchg
in
adc
push
nop
xchg
and
gs
push
andb
jg
mov
pushf
sbb
test
std
lock
lcall
lahf
arpl
das
add
inc
aas
inc
cltd
jmp
mov
popf
xchg
in
icebp
xorl
shlb
inc
sub
push
push
jecxz
xchg
mov
fcoms
mov
pop
jns
jb
int3
sbb
xchg
fstp
cmp
and
stc
hlt
or
push
xchg
cmp
cwtl
lods
mov
ljmp
xor
mov
xlat
adc
adc
inc
pop
sbb
mov
or
jbe
repz
mov
cld
cld
or
int
push
pusha
mov
push
ret
mov
cmp
xor
xchg
mov
in
adcl
jne
aad
jo
in
pushf
sub
sbb
jo
inc
cwtl
sbb
jns
xchg
mov
in
jmp
push
mov
pop
inc
adc
cmp
sbb
cmp
ds
adc
jne
stos
xchg
ja
jbe
dec
cmp
cmp
lea
mov
test
clc
lods
inc
pop
jmp
pushf
xlat
lods
add
cmpl
call
int
test
xchg
in
mov
shlb
imul
into
pop
cmp
pop
mov
test
sub
dec
leave
test
cs
cmpsb
divb
insb
sub
and
loop
mov
imul
cmp
xor
orl
hlt
xor
mov
into
ds
jne
lea
jns
cmc
or
cmc
imul
mov
stos
dec
sbb
lods
dec
popa
dec
fstpl
cmp
ss
cmpsb
jno
iret
aaa
imul
mov
movsl
jns
mov
and
movsb
fs
cwtl
mov
lahf
fmuls
mov
cmp
scas
std
hlt
test
mov
not
aas
cld
push
stc
ja
dec
iret
addr16
imul
mov
dec
insb
add
jne
add
adc
nop
stos
insb
cmp
push
and
lret
dec
push
lret
sbb
lahf
cld
mov
mov
negl
cmp
imul
scas
xchg
nop
movsb
lock
push
jnp
loop
std
add
push
mov
aas
jae
clc
adc
adc
mov
stc
cmpsl
ror
sbb
mov
pop
test
cltd
xor
sub
mov
out
ljmp
pusha
add
lea
movsb
popf
lcall
iret
jbe
repnz
shrl
mov
push
ds
xor
fcmovbe
adc
jge
aas
jnp
mov
pop
inc
ds
dec
mov
pop
in
sbb
mov
mov
cmpsb
fbld
adc
outsl
imul
pop
insb
test
dec
jnp
inc
fwait
mov
push
rorb
push
cld
ss
lahf
in
sub
mov
lret
js
push
adc
popa
add
test
test
pop
pop
loope
cmp
fisubl
push
sbb
mov
icebp
jbe
sub
dec
xor
dec
mov
mov
je
clc
ljmp
test
aad
cmpsl
cmp
ss
bnd
xchg
insb
cmpsl
dec
in
aas
mov
push
mov
call
dec
test
sbb
mov
cmpsb
sbb
pop
sub
add
mov
sub
aad
enter
add
sub
cmp
push
push
push
jp
sub
add
test
cli
jp
sbb
push
rorb
lea
sbbl
pop
and
aaa
mov
test
pop
int3
dec
lret
stc
xchg
test
pop
in
xchg
leave
jle
fcomps
lods
imul
subb
push
lock
movsl
mull
ficoml
int
mov
xor
adc
jl
mov
dec
repz
xchg
aad
jle
pop
fimull
lret
lahf
cltd
in
xchg
jns
or
adc
outsb
mov
pop
adc
in
sbb
add
sbb
sahf
ja
dec
jmp
mov
in
dec
ss
push
daa
push
cwtl
ss
dec
xrelease
xchg
xor
je
sub
pop
stos
and
out
pop
pop
jmp
ljmp
inc
mov
es
mov
cmp
pop
mov
and
nop
or
loop
sub
sub
pop
inc
mov
lods
hlt
cmp
js
repz
bound
hlt
lret
dec
hlt
adc
cmp
add
out
clc
mov
std
cltd
cmp
das
ss
daa
movsb
and
scas
fistps
inc
lea
fsts
out
popf
pop
sbb
inc
mov
nop
clc
nop
sub
sub
loop
jno
fstpt
std
mov
xchg
xchg
xchg
in
jg
mov
sti
mov
mov
ss
xchg
adc
xchg
fidivl
fnstenv
xchg
fistpl
dec
mov
es
cltd
rcrl
sbb
pop
pop
lock
je
aaa
int3
adc
lea
mov
xchg
xchg
in
stos
jg
inc
idivl
jmp
xchg
sbb
adc
jge
sbb
cmp
mov
mov
adc
dec
mov
cmp
sub
test
mov
pop
addr16
mov
movsb
mov
cmpsl
pusha
imul
cld
or
pop
mov
out
pop
sbb
testl
xchg
jns
dec
jae
mov
daa
hlt
jae
scas
jbe
or
enter
xor
iret
ss
sbb
jb
add
push
jg
cmpsl
aaa
add
dec
mov
mov
jno
jns
das
in
iret
jb
push
xchg
adc
mov
outsl
mov
test
pop
lret
mov
mov
in
popa
push
jg
aas
cmc
dec
loopne
lods
xorb
pusha
ret
cli
jp
stc
inc
inc
aad
push
mov
adc
ja
cmp
fsubp
sbb
icebp
xchg
fld
daa
sbb
aas
jge
pop
jae
mov
jle
mov
movsb
mov
or
adc
stos
pop
dec
or
cmp
out
sub
adc
mov
enter
incl
cmp
divl
mov
dec
inc
inc
adc
jbe
das
pop
mov
outsl
gs
orb
cmp
clc
icebp
jl
mov
mov
rcrb
add
mov
pop
mov
pop
movsb
test
jl
js
loopne
int3
mov
cli
shlb
jp
adc
and
jb
adc
into
cltd
ficompl
js
sub
cmpsb
loope
js
rolb
iret
int3
mov
fs
mov
jecxz
adc
xor
mov
inc
fdivs
push
movl
shll
add
pop
push
sub
test
rcr
in
stos
lea
jmp
jno
pop
sahf
shll
nop
lds
into
test
hlt
pmaxsw
lahf
gs
push
mov
mov
cmp
mov
shll
and
and
bound
inc
inc
aad
lcall
dec
stos
mov
clc
cmc
addl
mov
inc
xor
aad
arpl
mov
lds
flds
dec
test
jne
es
or
mov
pop
dec
sub
shr
cmp
cmpsb
cwtl
pop
aad
xchg
outsb
repz
fimuls
jge
sbb
adc
jl
cld
lcall
xor
xchg
ret
mov
sbb
jecxz
push
aas
test
mov
jb
aad
outsl
mov
shl
popf
cmc
mov
add
loop
and
dec
cli
into
shlb
stc
sbb
xor
sbb
or
lods
add
sub
add
add
push
out
and
mov
out
aam
cmp
out
shlb
mov
enter
mov
lcall
jle
lcall
mov
dec
inc
pop
inc
stc
pmaxub
fimull
aad
dec
pop
mov
mov
jae
push
sahf
out
or
aam
cmc
mov
mov
sbb
mov
std
mov
fstps
sti
mov
pop
cmp
test
out
xlat
lahf
sbb
cmpsb
inc
clc
leave
xor
ljmp
lock
sahf
shr
sbb
dec
shlb
scas
jo
ret
dec
cmp
cmp
pop
and
jp
sar
test
jge
aas
leave
sub
call
rclb
mov
mov
outsl
add
int3
jp
das
xchg
std
xor
pop
int
xchg
mov
repnz
sar
or
cmp
jnp
fistps
imul
jne
leave
int3
pushf
rcrb
xchg
inc
push
add
in
lods
lock
push
aaa
sbb
pop
in
loopne
jmp
or
scas
jns
repz
shrb
pushf
test
out
sub
mov
test
or
scas
dec
aam
in
inc
loope
pop
fsts
pop
dec
mov
sub
mov
in
fisubs
ficomps
adc
xor
outsb
xchg
fucomi
pop
rorl
pop
adc
and
test
xchg
std
ljmp
pop
int3
clc
sub
inc
jbe
jl
xchg
jns
imul
loopne
pop
cli
or
mov
jge
inc
mov
dec
in
cli
sbb
push
lock
sahf
dec
stos
addr16
and
fsubs
jg
inc
mov
jnp
xor
sahf
xor
aas
push
or
out
ret
push
fiadds
push
sub
xchg
test
push
gs
rolb
dec
std
pop
ss
sti
lds
ljmp
sub
cld
jo
test
pop
mov
shlb
sbb
push
test
and
inc
and
push
jb
test
testb
mov
xchg
es
and
pop
pop
stos
mov
ja
push
xor
ss
cmpsl
mov
in
pop
lret
adc
cmpsl
aad
int3
movsb
pop
pop
xor
sbb
mov
cmpsl
cltd
pop
dec
dec
daa
xchg
push
lds
stos
cs
movsb
jo
pop
sbbl
adc
cmpsl
xlat
aam
jl
dec
inc
or
jo
sub
into
cmp
push
jb
stc
xchg
negb
nop
cli
mov
addl
jbe
fistl
dec
clc
push
hlt
mov
xor
xchg
neg
xchg
mov
int3
mov
movsb
nop
dec
imul
mov
insb
dec
in
sub
jg
cmp
pop
out
scas
xlat
adc
xchg
rolb
aad
ret
je
xchg
sarb
adc
jnp
mov
inc
lods
jne
loope
push
pop
push
push
movsl
ret
imull
jg
mov
push
xchg
fs
leave
sbb
aaa
mov
roll
imul
mov
test
xchg
bound
into
or
push
dec
cmc
cmp
jnp
mov
aas
dec
leave
mov
lret
outsb
ret
mov
lret
clc
ds
ja
lcall
mov
sub
jp
pop
loop
pusha
retw
adc
sbb
push
stos
cmp
loop
stos
mov
mov
cld
imul
adc
fisttpll
inc
sbb
pop
lock
decl
out
jbe
addr16
xchg
loopne
imul
sti
pop
aaa
popa
mov
fisubl
js
mov
enter
adc
mov
or
inc
push
mov
movsl
pop
fcomps
lds
outsl
xchg
repz
mov
push
xchg
mov
xchg
lahf
dec
inc
jnp
cs
add
sbb
mov
arpl
and
ljmp
mov
xor
adc
xor
hlt
sub
and
mov
pusha
pop
xchg
mov
dec
pop
mov
js
imul
push
mov
subl
mov
lahf
sub
push
mov
cwtl
push
fcoms
outsb
mov
jge
lcall
mov
cmp
push
adc
pop
xchg
or
movsb
xlat
inc
icebp
enter
or
pop
popa
cmc
into
sarb
dec
out
jns
imull
sub
mov
sbb
xor
pop
jbe
inc
mov
adc
jo
mov
pop
sbb
daa
push
mov
bound
loope
in
sahf
imul
js
lods
sbbb
mov
daa
xchg
imul
repnz
stc
ljmp
pop
lcall
icebp
adc
adc
out
xor
nop
subb
ret
xchg
or
lahf
mov
xor
out
pop
add
jmp
pop
fmul
jp
mov
aaa
int3
xor
je
xchg
in
pavgb
push
ss
sbb
push
or
cs
push
cmp
sbb
or
sbb
add
push
add
cmp
cwtl
cmp
aad
and
jbe
or
repnz
les
jbe
sub
idivl
add
ret
sti
jge
das
enter
test
sbb
cmp
push
lret
mov
sub
and
mov
sbbl
fdivl
add
ss
xchg
sub
or
add
xchg
data16
fsubrs
mov
inc
inc
and
sysenter
std
xchg
mov
out
insb
cmpsl
lock
hlt
sbb
mov
jg
mov
cs
shll
lret
insb
sub
cmp
mov
ljmp
mov
push
mov
add
gs
lcall
push
and
stos
pop
loopne
adc
addr16
push
mov
push
shlb
pushf
out
ss
out
loop
jbe
dec
ret
stos
adc
outsb
xchg
add
cltd
sbb
and
xchg
scas
inc
ljmp
fwait
mov
push
bts
stc
jb
pop
mov
pop
jg
xchg
jecxz
xchg
sti
jbe
jmp
frstor
mov
lret
and
add
jne
pop
sbbb
pop
push
xchg
out
lock
mov
cmc
mov
mov
sbb
test
imul
std
sarl
shrb
mov
xchg
or
popa
mov
pop
inc
mov
lret
jmp
mov
mov
sbb
sub
xor
incl
mov
add
lcall
iret
sahf
dec
mov
jmp
xchg
addl
ds
into
lret
cmp
into
cmp
jp
mov
and
inc
in
mov
loope
enter
xlat
pop
xchg
iret
ljmp
jecxz
enter
inc
popa
repz
and
push
subl
jge
xchg
stos
in
cli
cwtl
fstpl
call
xchg
mov
sub
cmp
cmp
add
or
fisubl
or
loopne
mov
insb
pop
mov
outsb
pop
xorb
push
les
push
fstpl
jbe
loop
dec
aam
repz
cli
push
add
dec
adc
xchg
mov
sti
fwait
xchg
inc
pushf
rcll
cmp
roll
mov
mov
inc
and
call
adc
loope
sbb
ss
mov
imul
push
jle
les
leave
rcll
cmp
aad
xchg
and
jne
pop
inc
push
dec
je
les
ret
adc
xor
lret
shll
pop
mov
add
loope,pt
fcompl
andl
push
je
arpl
fdivs
jp
aas
adc
mov
adc
jno
xlat
add
sbb
fisttpl
mov
xor
dec
loope
ss
int3
mov
jge
or
adc
stc
mov
iret
loope
rcl
jecxz
repnz
pusha
ss
fildl
in
mov
jno
sub
xchg
jnp
cmpb
mov
nop
fiadds
mov
inc
mov
pop
xchg
mov
mov
pusha
imul
pop
push
pop
xorl
fwait
out
subb
call
test
es
sbb
cmp
inc
sub
call
clc
shlb
mov
mov
mov
jns
jno
cwtl
pop
and
bound
roll
lock
mov
or
sub
cmc
loop
loop
jle
outsb
cmp
or
xchg
js
mov
movsl
fsubs
mov
std
inc
push
pushl
cmc
repz
mov
cmp
lahf
iret
roll
pushf
fadds
and
je
adc
sbb
pusha
inc
aad
mov
adc
xchg
mov
ror
add
js
inc
or
sbb
scas
std
pop
rep
lcall
xchg
rorb
dec
imul
ret
addr16
leave
inc
pop
mov
pusha
cmp
inc
and
movsb
xor
ficompl
pusha
jbe
sub
xchg
sub
test
xchg
ret
mov
xor
push
xchg
stos
jl
pusha
and
xchg
shrl
mov
push
add
and
fldt
inc
xchg
repnz
xchg
jbe
pop
test
in
mov
cwtl
sbb
addr16
add
shlb
mov
sub
std
in
repz
aaa
cmpb
fcomps
mov
mov
cmp
stos
xor
lahf
sbb
std
mov
lock
push
mov
sub
mov
cmpsl
adc
or
adc
repz
loopne
imul
addr16
mov
sahf
roll
cmc
jp
xor
mov
mov
mov
cmp
pop
es
mov
lret
adc
adc
loope
iret
aas
xchg
cli
roll
fwait
dec
mov
jecxz
xchg
mov
mov
cmpb
mov
and
mov
subb
dec
daa
inc
nop
cltd
sbb
ret
dec
bnd
test
and
add
jno
lret
mov
pop
pop
shlb
mov
ja
dec
jle
xchg
jb
arpl
into
dec
push
xor
xchg
push
mov
xchg
cs
mov
pushf
lds
xorl
jbe
push
dec
jle
push
repnz
mov
mov
adc
es
jb
hlt
pop
fs
jb
xor
ja,pt
loope
pushf
pop
aas
mov
fidivrl
pop
sarb
cs
mov
insb
sbb
jae
test
fldenv
cs
dec
jbe
in
ljmp
ds
xor
dec
fdivrp
sub
das
enter
fs
and
int3
ret
xor
mov
rorb
cld
mov
mov
mov
mov
mov
fdivs
in
sbb
enter
or
jns
push
clc
fidivrs
jg
inc
mov
icebp
fildl
fsubl
mov
fnstsw
ret
add
pop
test
inc
cmp
push
sbb
shl
adc
cmpsb
and
iret
aaa
adc
mov
push
repz
lcall
jb
jae,pn
sub
out
mov
dec
addb
and
mov
dec
xchg
sub
mov
mov
lret
shll
jge
int3
xor
mov
xor
jne
ficoms
pop
shll
push
inc
rcrb
pop
mov
lods
call
ret
mov
pop
cs
push
mov
jnp
cmp
add
lea
dec
cmp
cmp
cwtl
dec
cmp
mov
test
rorl
jmp
add
iret
std
or
dec
adc
push
adc
inc
int3
dec
ljmp
ja
dec
mov
stos
jl
cli
test
dec
mov
add
ret
outsl
cwtl
int3
xchg
movl
adc
mov
mov
dec
inc
ret
loopne
jmp
sbb
and
mov
jg
cs
stos
dec
pop
sahf
xchg
jno
out
dec
or
in
xchg
and
lods
popf
mov
sub
xchg
in
fiadds
push
jb
lret
aam
adc
ds
aas
mov
ds
sarl
adc
adc
jmp
cmp
test
loope
push
xor
mov
pop
aas
lea
xchg
cmp
pop
xor
pop
fldenv
pop
dec
dec
add
test
ret
jg
fsubr
inc
aaa
test
xor
mov
les
push
mov
in
test
xor
push
int3
jl
pop
and
mov
pop
mov
cli
mov
cmpsl
sahf
dec
xchg
cmp
lods
shrb
xchg
jnp
adc
push
and
rcrb
mov
out
mov
rcr
add
xchg
imul
mov
cmp
mov
or
mov
xchg
sti
cmc
test
pop
int3
mov
imul
iret
into
mov
xchg
or
mov
sub
cmp
nop
jo
xchg
dec
jmp
push
popf
je
jbe
jbe
sahf
xorb
or
pop
pop
cmp
clc
clc
cmpsl
adc
idiv
das
jns
or
xchg
popa
cmp
arpl
mov
lcall
and
repnz
jp
jl
pop
cmp
dec
jg
inc
cmpsl
arpl
test
push
aad
fs
push
or
addps
cmp
mov
fcomi
scas
ljmp
movsb
aad
into
add
roll
adc
push
repz
rolb
jge
sbb
and
cmp
sbb
das
dec
jmp
mov
or
mov
dec
fistpll
fcoms
pop
insb
sub
icebp
pop
push
pop
mov
push
or
and
repnz
jbe
jnp
sti
or
xor
fs
pop
and
sub
dec
sub
imul
adc
decb
sahf
pop
aas
nop
push
popa
data16
div
movsl
into
jle
pusha
aas
push
in
dec
push
mov
push
jmp
xor
inc
ret
pop
jne
fwait
lds
xor
clc
xchg
xorb
lds
shl
clc
and
jecxz
mov
push
inc
aas
rorb
icebp
mov
push
cmpsl
fbstp
mov
clc
call
xchg
adc
loopne
jnp
fwait
cmp
sbb
dec
icebp
scas
xor
mov
bound
xchg
aad
cmp
call
pusha
cmp
rcll
fnsave
pop
push
mov
out
inc
push
or
lods
xor
out
sub
imulb
mov
dec
dec
jp
xchg
ret
ror
das
or
ss
jmp
inc
dec
add
cmp
xlat
adc
loopne
jge
out
in
pop
in
lock
push
inc
dec
das
or
insl
in
sbb
scas
jp
xor
fwait
sbb
add
mov
idivl
mov
cmp
mov
jnp
cltd
mov
push
inc
ljmp
jae
fisttpll
rcll
sahf
testl
mov
cld
cmp
xor
and
mov
rol
out
jl
pop
iret
lahf
ficomps
lods
xchg
lahf
adc
out
je
out
ret
or
testl
pop
cmovge
jg
lods
mov
mov
pop
scas
cs
shlb
aam
inc
enter
fistpll
cmp
inc
sahf
mov
roll
add
out
mov
push
test
cmp
data16
inc
cli
pop
fsubr
pop
sub
repz
je
jmp
mov
lea
imul
jp
sub
cwtl
mov
add
xchg
push
divb
pushf
testl
int
mov
lods
dec
lods
je
adc
leave
ret
icebp
fnstsw
and
mov
pop
lods
add
shll
leave
jl
rclb
fxch
lcall
popl
dec
inc
add
xchg
xor
push
mov
cmp
shr
sub
sbb
inc
ds
mov
pop
pop
and
xor
les
push
push
andl
mov
xchg
scas
sbbb
adc
mov
aad
ja
xchg
mov
idivb
mov
aam
fcomi
aad
stc
fistpll
lahf
xchg
inc
mov
add
aaa
sub
jb
mov
prefetcht0
sbb
repnz
cmp
and
repz
lret
push
mov
rcr
scas
pop
rclb
lods
inc
pop
or
fsubrl
outsb
fdiv
pop
aaa
xor
out
icebp
jp
das
dec
cmpsb
cmp
jecxz
invd
fists
pop
push
fsub
and
sub
sbb
sar
subb
jp
ss
mov
push
xor
ja
cmp
ss
xchg
iret
cmp
sub
stc
scas
enter
stos
mov
call
xlat
xchg
aad
mov
mov
mov
mov
nop
mov
dec
mov
in
inc
jae
cmp
orl
loope
aaa
lretw
mov
dec
fsubs
mov
jnp
out
mov
daa
pop
sub
xor
insl
push
jle
test
bound
mov
stc
rolb
scas
pop
xor
out
inc
push
and
sub
pop
inc
mov
inc
inc
lcall
pusha
and
dec
xor
cld
pop
xchg
jg
adc
popa
stc
jmp
lock
loop
lea
jne
repz
hlt
mov
cmpsl
cltd
mov
nop
repnz
and
jl
sub
fwait
int
testb
mov
in
imul
mov
aas
sub
pop
xchg
in
add
xchg
out
add
cmp
xchg
outsl
jmp
ss
sti
pop
adc
dec
jbe
cmp
test
and
jecxz
inc
pop
mov
or
push
lods
mov
xlat
leave
insb
xchg
clc
repnz
aam
adcb
data16
mov
and
inc
rol
xor
aad
add
stc
push
test
repnz
adc
into
negb
pop
dec
rclb
mov
test
mov
push
arpl
add
hlt
mov
cmp
push
xchg
js
outsb
leave
cld
push
repz
xor
push
cld
cmc
lea
or
call
xchg
call
or
mov
fs
out
enter
dec
xor
mov
xchg
push
jecxz
pop
pop
call
add
out
es
lods
pop
add
mov
sahf
pusha
xchg
repz
in
es
testl
movsb
and
xchg
std
test
sbb
add
in
pop
pop
inc
pop
std
leave
rolb
iret
stos
sbb
cmpsl
xchg
push
dec
add
popa
xchg
inc
fsub
cltd
js
xchg
fidivrl
lods
and
adc
xchg
stc
pop
adc
add
push
in
mov
inc
mov
mov
push
hlt
je
fs
mov
in
or
adc
and
push
push
inc
test
fs
pop
in
sahf
ret
movsb
jl
mov
dec
dec
nop
cltd
xchg
jno
mov
lea
sub
or
mov
out
adc
scas
test
mov
ja
test
push
loopne
mov
add
pop
bound
je
insb
test
sub
and
rclb
daa
jmp
aam
add
inc
and
xchg
pop
dec
test
mov
inc
cmp
lods
add
and
jae
pop
inc
inc
int3
clc
pop
xlat
je
dec
jg
dec
fstpl
pop
dec
out
mov
mov
aad
call
jle
int3
lahf
int
inc
jbe
jo
push
xor
mov
xchg
inc
pushf
cmp
inc
out
loope
imul
pusha
dec
or
dec
xor
popa
je
roll
daa
dec
sbb
cli
jge
push
gs
lock
push
rclb
xor
cmp
jmp
lcall
jmp
jne
jecxz
mov
jg
inc
mov
jmp
scas
pop
jmp
mov
outsb
in
sahf
fcoml
mov
cmp
sbb
jno
mov
inc
mov
xchg
mov
sub
lahf
pop
mov
sbb
dec
stos
sub
test
jne
popf
ror
cmp
xor
pop
stos
stos
in
dec
xor
insb
or
les
aad
scas
loope
clc
inc
lea
mov
ljmp
ja
fnstenv
mov
iret
clc
lock
jge
out
out
fsubrl
mov
mov
dec
in
push
ljmp
xchg
cmpsl
inc
aam
or
xor
std
mov
outsb
mov
push
dec
repz
icebp
fldt
aas
push
sub
xor
in
xor
les
mov
or
pop
divb
xchg
fbstp
add
stos
scas
jle
pop
or
cli
sub
aas
inc
adc
fcoml
gs
push
push
pop
imul
mov
cwtl
and
jmp
jno
jg
hlt
repnz
loop
jecxz
in
popa
bswap
popf
arpl
pop
jbe
pop
enter
mov
xchg
xor
mov
pop
sbb
stos
in
dec
or
dec
mov
ret
fnsave
div
jg
adc
test
cli
jno
push
lock
insl
leave
lods
dec
and
lret
push
iret
adc
scas
mov
adcb
mov
clc
stos
xor
sbb
push
aam
or
imul
mov
shlb
add
or
xchg
imul
mov
and
jns
pop
in
push
jmp
push
out
out
cmp
push
and
out
sub
push
push
popa
imull
cmp
scas
xor
call
push
lods
lods
sub
fcmovbe
insb
test
add
push
shrl
aam
or
or
andb
xchg
push
mov
pop
lcall
push
mov
out
dec
jl
inc
out
ja
pop
jno
divl
inc
dec
arpl
xchg
mov
cli
dec
movsb
pop
xor
lods
push
and
sub
repnz
pop
rorb
loopne
push
inc
inc
scas
aaa
mov
ret
push
or
pop
xchg
xchg
inc
pusha
sub
pop
lods
sarl
jmp
lcall
loopne
movsb
lret
cmp
fisubl
cmpsb
imul
movsl
mov
cmpl
adc
mov
sbb
bnd
out
int
loop
shll
xor
push
jmp
cs
cmpl
popf
dec
push
out
daa
fs
movnti
pop
loopne
sub
fdivrs
jbe
or
pop
xor
sbb
xchg
mov
and
mov
test
adc
cli
lcall
popf
lret
xor
fidivs
rcr
stos
or
lock
pop
xchg
out
mov
das
inc
pop
dec
cmp
test
pop
and
test
mov
or
enter
lahf
iret
push
and
push
std
mov
cmp
cmpl
std
das
call
add
mov
scas
mov
out
inc
inc
ljmp
push
fcmove
hlt
mov
mov
cmp
sti
lret
push
or
stc
mov
fsubr
and
adc
js
or
in
mov
mov
cmc
rcll
mov
je
inc
rclb
pop
addr16
jne
jg
hlt
das
sub
hlt
iret
mov
lea
out
dec
lea
clc
insl
out
scas
mov
jnp
pop
xchg
pusha
lods
pop
or
lcall
insb
int3
test
cltd
out
insl
loopne
lods
aas
inc
stc
pop
repnz
sbb
xor
push
sbb
filds
add
pop
add
inc
mov
cmp
insl
fcomi
je
pop
inc
jmp
and
jb
xor
and
and
adc
test
dec
jne
stos
mov
pop
data16
in
push
sub
dec
dec
sbb
pop
mov
pop
js
int3
lods
sbb
and
fildll
xorl
pop
inc
or
xchg
shr
pop
out
xchg
cli
dec
js
pop
fsts
mov
sbb
je
sub
inc
in
and
jnp
hlt
push
sub
sub
daa
jns
fidivrl
cwtl
sbb
adc
ret
je,pn
scas
mov
cmp
mov
xchg
xchg
adcl
cmpl
cmp
enter
jns
xor
les
mov
icebp
inc
lret
adc
idivb
test
adc
xor
lods
mov
test
pushl
popa
or
dec
cld
test
xchg
dec
xchg
and
or
stos
jbe
and
rcrb
stc
movsl
mov
imull
push
mov
clc
pop
out
insb
dec
pop
lahf
inc
push
ret
addb
lods
in
bnd
jne
test
in
nop
pop
mov
mov
dec
fnstsw
lea
xor
in
lods
mov
jp
mov
rolb
aas
add
mov
addl
pop
xor
mov
add
jmp
mov
dec
inc
sub
jp
decb
mov
and
ljmp
adc
mov
imul
mov
jno
notl
dec
mov
repz
mov
pop
lds
push
fbstp
ljmp
mov
in
stc
insb
nop
clc
jmp
cmp
sub
inc
mov
test
and
push
inc
mov
scas
lahf
insl
clc
scas
sti
mov
push
sub
push
xor
repnz
xor
jns
pushf
xor
js
movsb
mov
sub
addr16
ja
flds
loopne
popf
cmp
clc
xchg
push
jp
push
div
sbb
popa
scas
lahf
fs
repz
push
xor
pop
lret
jmp
repz
mov
ss
in
adc
mov
pushf
pop
dec
gs
popf
aam
enter
repnz
add
repz
iret
rcl
inc
cmpsl
dec
and
xor
popf
xchg
adc
adc
sub
lock
cli
add
jmp
mov
sahf
jb
jmp
sahf
fistps
dec
mov
mov
xchg
push
jne
loop
data16
fildll
add
shll
push
push
lcall
out
inc
dec
mov
mov
cmc
loopne
add
ss
adc
fldenv
in
mov
and
mov
and
mov
int
mov
movsb
fists
iret
lods
notl
shr
mov
mov
idivl
clc
mov
dec
dec
aas
dec
inc
ljmp
popa
xchg
xchg
test
jle
mov
gs
push
and
cwtl
icebp
inc
inc
rcll
or
lods
push
dec
es
lahf
mov
push
call
mov
xlat
ret
test
pop
jae
jmp
jg
out
lcall
sarb
movsb
adc
fimull
pop
sub
cmp
mov
enter
lods
cs
cmp
add
adc
aaa
cs
sbb
test
test
ret
sub
popf
push
sub
jbe
ds
movsb
dec
sub
sti
fwait
stc
jmp
mov
cli
mov
pop
imul
dec
insl
lds
jge
jl
jmp
outsl
mov
mov
pop
dec
pusha
push
dec
ja
mov
es
std
out
sbb
out
adc
pop
xorl
loope
aas
mov
cmc
mov
into
sub
add
mov
pusha
cmpsl
ret
outsb
mov
cwtl
shlb
out
int3
sti
imul
cmp
lret
add
outsl
pop
mov
inc
cld
inc
add
sahf
cs
mov
int3
push
movsl
and
shll
inc
sbb
int
or
into
cld
sub
sar
dec
and
scas
xchg
fwait
adc
xor
push
dec
xor
test
shlb
outsl
sbb
add
imul
sbb
subb
add
jge
dec
xor
mov
mov
std
jno
negl
xchg
mov
ja
repnz
leave
sub
and
xor
leave
jb
jne
pop
lret
cmpsb
sub
jp
lods
adc
xor
push
push
inc
push
jno
or
push
and
or
repnz
outsb
in
fdivrl
scas
mov
or
and
xor
clc
fmuls
add
cltd
lock
out
leave
mov
and
fsts
ret
call
das
push
xor
pusha
mov
dec
mov
mov
fwait
movsl
push
test
inc
loopne
add
sbb
or
mov
mov
adc
mov
mov
sbb
out
xchg
mov
sarl
aaa
cmpl
jl
inc
push
or
jmp
pop
sbb
inc
fsub
cmpb
pop
mov
mov
lret
rcll
jg
jecxz
mov
rorb
call
pop
mov
and
push
push
in
cwtl
lea
std
xor
mov
add
lcall
sub
jecxz
lret
out
sub
adc
iret
xor
imul
cltd
je
or
icebp
jo
xlat
and
testl
fidivrs
mov
arpl
cltd
dec
adc
jmp
dec
mov
inc
jns
fs
pop
sub
iret
iret
ss
sbb
es
mov
jnp
dec
andb
pop
sbb
in
xchg
out
mov
and
jnp
mov
cmp
mov
aam
mov
cwtl
push
fwait
aad
cld
xlat
push
sarl
and
das
in
xchg
pop
jl
mov
stos
dec
mov
xchg
push
popa
pop
xor
icebp
mov
out
clc
clc
movsb
dec
sbb
pushf
and
popa
fldt
lock
mov
and
push
fisubrl
sub
push
nop
xchg
and
jg
pop
mov
push
inc
lods
in
out
loopne
and
xlat
test
mov
mov
xchg
push
dec
pop
mov
aaa
inc
aas
xor
rorb
ljmp
lret
jp
pop
jns
test
imul
push
mov
testb
sbb
aad
stos
and
sahf
pop
insl
mov
pop
stc
mov
or
subl
add
scas
ret
and
cmp
xor
pop
cs
rcrl
incb
mov
ljmp
sbb
pop
roll
lret
push
in
jb
jp
add
ja
repnz
dec
das
imul
lret
fidivrs
lcall
xor
inc
js
cmp
dec
sub
adc
sbb
or
int
mov
inc
cltd
in
shll
leave
ror
hlt
shll
out
jge
rolb
xchg
xor
mov
push
pop
add
arpl
out
out
or
aas
insb
cs
jo
add
imul
fstps
lods
shlb
jle
lret
pusha
xchg
repz
sbb
fadds
or
into
leave
call
imul
popa
iret
cmp
inc
jge
add
pop
push
push
xor
jae
xor
mov
call
fidivrs
sub
push
pop
xor
cs
or
adc
push
lcall
mov
movsl
inc
sub
lods
sbb
sub
xchg
test
adc
jle
jno
inc
in
stos
xor
add
aaa
jp
mov
fbstp
mov
sahf
jmp
leave
mov
cmpsb
push
add
and
xor
xchg
jecxz
pop
pop
pop
pop
sbb
loop
cmp
mov
push
scas
cld
xor
in
loop
adc
jno
aas
jmp
aam
out
or
push
push
lods
inc
divl
stos
daa
daa
or
fcmovnbe
xor
in
xchg
mov
xchg
push
stos
mov
xor
shll
cwtl
dec
movsb
adc
les
push
ret
pop
xor
push
jo
mov
nop
into
sub
enter
pop
xchg
in
mov
mov
xchg
mov
lock
loope
cmpsb
sub
cltd
je
jne
dec
or
jge
insl
and
mov
mov
outsl
outsl
sub
xor
daa
push
icebp
pop
sub
adc
dec
adc
dec
insb
mov
mov
inc
push
andl
cld
add
js
mov
lret
cmp
std
sub
xor
dec
cmp
call
nop
clc
out
xlat
outsl
and
mov
pushl
addr16
or
in
test
cwtl
mov
mov
out
mov
cltd
mov
cmp
stos
mov
test
cwtl
cmc
adc
in
mov
popf
movsl
fsts
shll
jg
out
jbe
cmpsl
sbb
js
loope
adc
lods
movsl
mov
lods
imul
push
cmp
faddl
sbb
dec
movsl
daa
add
xor
and
std
cmp
into
push
movsl
imul
lods
add
mov
lock
orl
adc
adc
loop
std
xchg
in
lcall
imul
lret
inc
repnz
mov
arpl
mov
add
add
fldt
add
xor
push
arpl
loopne
ret
pop
sbb
stc
lods
bswap
ret
popa
mov
in
lods
lds
movsl
inc
sti
movsb
adc
es
jnp
lcall
shrl
mov
addr16
jo
adc
jnp
jnp
fcmovb
out
in
dec
inc
adc
mov
call
jp
xchg
repz
xorb
sub
into
andb
or
or
adcb
dec
dec
mov
or
icebp
mov
cmpsl
add
std
in
jnp
fmul
fwait
leave
dec
mov
and
jecxz
notb
dec
stc
xchg
daa
test
add
popa
mulb
xchg
inc
sub
sti
lods
push
aaa
mov
cmpsl
xchg
or
xor
test
insl
lret
leave
lods
push
cmp
repz
push
or
sub
add
imul
mov
stos
xor
add
mov
adc
mov
out
sub
push
fdivl
fisubs
dec
test
jbe
into
mov
rclb
and
int3
jle
lret
xchg
insl
lea
or
lea
rcrl
mov
repz
push
inc
aad
inc
loop
jge
xor
gs
ljmp
psubusw
xchg
aam
lods
adc
ret
sub
test
rorb
pop
in
cmp
mov
pop
cs
outsb
dec
push
rolb
pop
sbb
je
pop
scas
ds
leave
xchg
and
lea
in
xor
jbe
push
leave
xchg
xchg
pop
add
push
test
jns
sarb
cmp
je
lahf
push
shlb
and
test
mov
hlt
data16
std
enter
jb
and
lods
inc
sbb
pusha
xorl
jg
mov
push
fsubr
and
pop
jnp
xchg
pop
mov
sbb
loop,pt
or
pop
ficoml
mov
mov
lcall
push
jae
cltd
or
fiaddl
cmp
rcl
lcall
or
jp
add
cmp
xchg
call
cmpsl
jge
clc
mov
add
jno
cmp
cmp
xor
movq
inc
adc
shlb
and
lcall
cmpl
fsubrp
jns
dec
mov
in
push
xor
pop
add
pop
adc
loope
xor
adc
jmp
add
mov
or
mov
add
aad
es
lds
add
sub
sbb
ret
xor
mov
xor
shrb
into
add
cmp
addr16
or
add
es
inc
jae
jecxz
call
daa
repz
idivb
addr16
cs
ss
jbe
mov
ja
test
xchg
aaa
test
pushf
xor
lcall
daa
dec
aaa
sarl
sarb
shrb
sub
mov
fidivl
mov
call
pop
dec
mov
xchg
popa
lahf
lds
and
insb
outsl
sti
pop
test
dec
test
jne
mov
pop
lock
outsb
lds
subl
lods
inc
mov
cmp
pop
xlat
popf
mov
xor
or
sti
sahf
mov
and
sub
xor
ret
test
mov
sub
inc
ss
aas
cmp
icebp
cmc
test
aaa
xor
out
les
lock
fcmovbe
ret
cli
iret
ds
mov
out
fists
and
leave
xlat
and
shl
push
test
and
ljmp
ds
sarl
js
dec
cld
jge
jb
jns
inc
std
add
jg
fistl
outsl
ret
jge
dec
xchg
mov
aaa
test
inc
hlt
int
sub
lods
icebp
and
mov
ljmp
cwtl
pop
outsl
cmp
adcl
jmp
pushl
or
xchg
lcall
dec
mov
faddl
lcall
adc
cltd
cmp
xlat
cmc
lods
andw
pop
mov
rcrb
repnz
mov
ret
scas
dec
push
jl
into
pop
cli
repnz
outsb
mov
aaa
dec
aam
ss
pop
cld
fdiv
fimull
arpl
jbe
lock
mov
fidivrs
enter
in
clc
std
rcrl
outsl
push
push
jo
mov
mov
data16
mov
and
scas
or
cmp
pop
shl
out
rclb
and
pop
push
dec
mov
mov
and
std
imul
mov
std
mov
add
psadbw
lret
cld
sarl
popf
and
xchg
clc
xor
popaw
push
cmpl
imul
hlt
ljmp
testb
cmp
xor
jnp
xor
add
mov
push
lret
sahf
xchg
cltd
push
push
fnstsw
aam
adc
cmc
xchg
jg
sbb
jne
jno
pop
adc
jg
pop
stos
push
and
xchg
pop
or
or
xchg
xorl
fsubrl
add
jp
pop
or
in
xchg
push
data16
xor
jno
push
scas
sbb
mov
and
mov
scas
dec
xor
or
fists
mov
push
aad
cmp
fisubl
mov
mov
loope
std
mov
icebp
aaa
in
int3
or
xlat
sbbl
fsts
stc
mov
repnz
fimull
sti
in
out
scas
sarb
lcall
add
icebp
loope
in
shll
js
xlat
pop
es
jno
cltd
jb
in
in
push
mov
push
out
mov
or
cmpsb
and
sbb
mov
mov
lret
leave
lds
sub
jmp
fwait
sbbl
movsb
ret
cmp
stc
push
or
cmp
call
ror
jbe
jnp
test
xorl
mov
inc
sbb
cmp
push
or
test
pop
dec
popf
int3
shlb
or
dec
jno
dec
mov
cmp
cmpsb
dec
cs
std
xchg
hlt
push
or
je
stc
pop
dec
sub
in
sub
or
inc
sub
sbb
jp
fisttpl
sahf
cs
jb
lahf
rolb
inc
mov
outsb
je
dec
dec
imul
jns
jg
loope
xor
fcomps
movsl
cmpsl
std
cli
lea
fldt
fidivrl
fstp
mov
jmp
test
sbb
repz
ficoml
mov
mov
out
mov
mov
sbb
xchg
mov
ret
push
int3
in
ss
sub
adc
fdivrl
adc
sbb
dec
jne
cltd
pop
orl
add
push
test
add
hlt
fwait
push
add
pop
sbb
jo
cmp
and
mov
dec
ds
xchg
stos
insb
mov
aas
mov
cmc
mov
pop
inc
out
into
or
sbb
sub
pop
inc
cwtl
adc
sub
adc
push
adc
lds
jo
idivl
js
lcall
push
fsubl
in
fcoml
ret
pop
lret
sbb
pop
sarl
cmp
fwait
jp
addl
andl
lahf
mov
fnsave
push
insl
cmp
jnp
xchg
notb
cmp
xchg
pop
mov
lods
cmpsl
bound
sub
ljmp
inc
or
sbb
in
adc
hlt
fldenv
push
adc
stc
inc
ret
mov
lods
jmp
mov
icebp
or
pop
mov
push
xchg
xor
mov
jl
les
int
movups
inc
andb
xchg
je
icebp
cli
mov
jl
or
clc
or
sbb
test
stc
fcompl
push
cmp
lahf
inc
xor
int
repz
mov
imul
sbb
iret
mov
cwtl
in
sub
xchg
xor
fs
dec
sbb
dec
in
and
jne
cld
test
movsb
lret
testl
push
cmc
sbb
sbb
and
cmp
push
cld
or
adc
and
jb
inc
mov
xchg
and
add
mov
cmp
jno
push
mov
inc
or
in
js
or
out
mov
xor
or
xor
fbld
cmp
and
sarb
loope
push
xor
aam
inc
fwait
shr
add
jns
ds
mov
mov
lds
dec
or
movntq
cwtl
sub
fcoml
pop
outsb
push
ret
mov
fs
sahf
ja
gs
dec
es
pop
pop
testl
push
ds
sub
lods
mov
cld
or
inc
ret
dec
test
aam
jns
xchg
xchg
adc
push
pushw
pushf
dec
outsb
jae
loopne
cwtl
hlt
jp
sbb
inc
xchg
mov
mov
mov
jge
fdiv
jb
pop
mov
push
cmp
cwtl
sti
in
jb
xchg
stos
pop
dec
orl
cld
adc
cld
pop
xor
shll
cltd
test
popa
lods
aaa
fists
sub
add
xor
jmp
sbb
sbb
cmp
push
enter
sbb
mov
jno
inc
test
jl
cmp
les
cltd
iret
cmp
test
ret
repnz
arpl
sub
fmul
clc
or
cs
lock
or
adc
and
mov
pop
sub
dec
inc
rol
iret
jb
add
cmp
imul
call
adc
lcall
pop
jb
and
mov
aam
int
loop
jns
add
cltd
sbb
lahf
les
mov
or
push
jmp
dec
lock
jbe
pop
je
out
popl
in
repnz
add
pop
xor
mov
repz
sub
cwtl
sbb
dec
sbb
mov
cltd
clc
jno
fwait
adc
and
test
loop
pushf
pop
xchg
lods
cmpsl
cs
xchg
test
stos
lock
int3
push
xor
scas
inc
or
scas
dec
addr16
cld
pop
add
fbstp
or
or
cmpsb
outsl
inc
pop
popa
xor
push
stos
clc
sub
dec
mov
push
mov
mov
js
sbb
test
sub
xor
aaa
fisubs
lods
ljmp
scas
adc
dec
add
push
repnz
xor
pop
adc
pop
pop
mov
add
and
fs
aad
xchg
pop
lods
hlt
jo
pop
popa
add
dec
out
pusha
popf
lods
add
leave
dec
push
cmp
fbstp
adc
xchg
test
notb
pop
cs
pushf
fs
retw
add
dec
shrb
jb
lcall
jae
fistpll
jne
fiadds
popf
hlt
ss
sbb
shrl
jbe
push
insl
sub
pop
jg
test
out
mov
outsb
sub
pop
stos
dec
xor
pusha
or
fdivrs
sbb
lahf
xchg
jo
and
jge
lods
into
mov
arpl
leave
stos
in
aaa
mov
jg
mov
push
stc
fcoms
xlat
cwtl
mov
cmp
outsb
pop
sub
xchg
loopne
push
loopne
sub
call
jge
sahf
or
fdivr
mov
into
and
ss
add
ds
pushf
mov
clc
icebp
adc
push
andb
cmc
or
sbb
mov
sbb
push
jno
inc
push
mov
mov
rorl
sub
jns
movsb
push
es
pop
inc
fdivrs
mov
pusha
and
pop
push
jns
jae
call
loope
jl
out
sub
xor
adc
inc
push
repnz
divl
jg
cmp
loope
test
mull
fs
mov
mov
ljmp
mov
xchg
mov
dec
cmp
insl
mov
aaa
enter
jne
rorb
pop
jo
enter
call
jecxz
push
mov
xlat
fwait
gs
in
ljmp
scas
rcrl
push
add
shll
xchg
push
cli
fnsave
js
push
gs
jo
dec
xlat
out
pusha
and
cwtl
call
sbb
loope
jg
int3
add
mov
dec
call
scas
data16
jae
repz
in
jns
push
testb
inc
or
lock
sar
pop
inc
adc
cmp
add
rcll
cwtl
lcall
push
pop
add
push
mov
das
outsl
lret
fcoms
in
xor
out
roll
dec
add
pop
and
fisubrs
sbb
repnz
rorl
push
add
andl
test
sahf
inc
adc
push
jle
push
popf
mov
pop
loop
sti
ret
push
nop
mov
aad
fistl
jno
cmpsb
cmpsb
iret
in
aaa
enter
int
imul
loopne
pop
inc
dec
outsb
mov
xor
add
lods
fs
mov
push
icebp
cmpsl
pop
sbb
mov
push
int
push
xlat
pop
cmp
repz
in
rcrl
jnp
inc
cmp
xchg
dec
xchg
mov
or
dec
je
aaa
clc
xchg
popa
xchg
in
push
repz
ja
mov
xor
lods
icebp
addr16
fwait
in
and
es
loope
bound
cli
rol
cmp
sbb
shr
cmp
pop
pushf
dec
repz
cld
ret
jl
sub
pop
std
lahf
mov
repnz
and
js
pop
push
add
mov
sahf
in
incb
inc
inc
jle
scas
repz
out
push
je
enter
jno
mov
fstps
push
lahf
fnsave
mov
mov
cld
decb
das
fisttpl
lret
adc
jne
es
sub
jo
mov
dec
sbb
pop
and
cli
xor
je
or
loopne
das
dec
sbb
mov
jp
sbb
pop
xchg
cwtl
or
add
mov
subl
scas
aaa
mov
adc
jp
shl
fldl
adc
jp
vmaxss
mov
pushf
sub
in
pop
push
loope
imul
out
mov
mov
sub
js
sbb
test
xor
cmp
loopne
push
mov
negl
mov
int3
fidivrs
stos
fcmove
fs
mov
in
pop
fsubr
jle
inc
leave
rcrl
mov
shll
repz
xchg
and
mov
push
cltd
sarl
pop
xlat
test
cwtl
cmp
inc
push
ds
insb
mov
out
mov
xchg
and
xor
mov
xor
rcrb
cmp
mov
push
or
movsl
inc
fwait
test
cli
inc
add
movsb
cmp
mov
out
call
in
jb
jg
cmpl
cmp
rorb
pushf
add
jno
inc
shlb
aad
jb
adcl
mov
in
fcmovne
and
mov
xchg
pop
aas
xor
or
add
fstps
clc
dec
dec
popa
les
push
fwait
push
pop
fwait
cmp
pop
cs
cmpsl
adc
lods
cmpb
xlat
lcall
cmp
sub
stos
cmpsb
jmp
lcall
sahf
andb
push
lret
aaa
insb
or
mov
or
pushf
enter
sub
dec
mov
in
cmp
test
pop
xchg
je
or
mov
xor
out
sbb
cmp
lock
int
cmpsb
jno
push
pop
mov
or
xchg
jnp
stos
or
lahf
imul
out
aam
add
popa
lea
pop
jne
outsl
pusha
popl
push
inc
int3
inc
outsb
sbb
lcall
sub
or
mov
add
insl
jg
fmul
sbb
insb
cwtl
int3
jmp
adc
out
leave
inc
vpunpckhqdq
ret
fadds
mov
jecxz
je
adc
adc
neg
bndldx
push
push
dec
and
sub
mov
sub
push
and
mov
inc
icebp
mov
adc
mov
dec
sbb
lea
mov
icebp
stos
sarl
mov
ficoml
int
loopne
cwtl
adc
mov
mov
xchg
sbbb
dec
stos
sti
lahf
jbe
cmp
bound
adc
or
rorb
pop
insb
jb
bound
and
or
cmc
nop
jns
cltd
test
pop
in
xchg
int
jns
cs
cmpsb
in
dec
jl
repz
lret
imul
ret
sbb
and
xor
dec
lods
push
mov
xor
fwait
rcl
subb
into
jbe
shl
or
pop
leave
cli
push
loop
dec
cltd
xchg
mov
fucomi
rcll
mov
cmpsb
push
in
push
iret
mov
mov
in
test
aas
icebp
jp
fwait
add
mov
dec
hlt
cltd
fistl
scas
arpl
int3
fsubs
jle
push
repnz
push
fs
pop
lret
add
push
fcmovb
adcb
outsl
ret
adcl
repz
repz
insb
test
mov
shrb
mov
fcomip
je
jno
inc
insb
sub
xchg
cmp
insb
sbb
fdivs
in
cmp
mov
or
sbb
add
add
jmp
icebp
sub
sbb
test
ja
lret
mov
in
xchg
mov
and
cmpsl
pop
in
mov
and
ss
mov
cmpsl
mov
shll
dec
in
push
fistpll
jb
lock
jl
xor
pushf
and
push
jbe
push
push
test
lahf
xchg
sarl
xchg
xor
adc
addl
mov
push
mov
jbe,pn
dec
sti
and
pop
jns
sbb
ficoms
loopne
stos
lcallw
jae
or
sub
int
js
fistps
inc
pop
mov
xor
xchg
push
orl
fisttpl
cmp
sub
out
std
fs
and
push
fwait
ret
mov
iret
mov
in
xchg
repnz
aam
hlt
xlat
loopne
cmpsb
jle
ficompl
scas
pop
je
sbb
es
pop
int3
loope
rorl
xor
mov
lea
mov
std
cld
cs
dec
sbb
dec
inc
loope
add
jne
inc
jge
dec
dec
inc
mov
je
jmp
xchg
pushf
lods
push
pop
sub
aad
outsb
daa
inc
aaa
push
movsl
in
std
in
dec
inc
inc
jbe
add
repnz
mov
in
jmp
sub
xor
dec
xchg
int3
add
sti
mov
push
shlb
or
fwait
ss
sbb
cld
mov
movb
xor
lock
cmp
sar
jno
out
insl
sbb
jp
jl
jne
mov
loope
inc
fcoml
mov
enter
xor
mov
scas
adc
add
or
xchg
das
lods
xchg
xor
fcmovnb
cmp
aad
mov
mov
inc
jnp
dec
test
int3
hlt
fldt
adc
es
stc
xchg
sarb
jb
adc
lahf
gs
sub
add
sbb
push
insb
cmp
push
loopne
mov
std
insb
ds
iret
out
adc
xchg
fs
mov
fcmovnbe
sub
addr16
je
sub
xchg
nop
dec
in
jne
cmp
int
jns
push
pop
test
mov
adc
lock
jb
decb
loopne
inc
xor
sbb
pop
lea
dec
ss
pop
xchg
ja
push
inc
mov
cmp
jg
xchg
test
push
xchg
xor
mov
test
pushf
xor
cltd
lea
fwait
xchg
dec
mov
cmp
insb
ret
add
pop
loopne
mulb
adc
out
mov
jp
and
subl
mov
dec
daa
inc
xchg
mov
mov
lret
mov
xchg
mov
jo
loop
xchg
inc
push
insl
icebp
cs
insb
rolb
mov
jbe
out
sbb
adc
mov
inc
mov
xorb
cmpsb
sbb
xchg
mov
and
mov
sarl
sbb
fcompl
sub
mov
mov
cmp
cmp
data16
sub
mov
add
push
bound
fwait
jp
daa
rorl
dec
add
push
popf
fdivr
cmp
jno
jae
adc
outsl
cmpsl
cwtl
sub
outsb
movsb
cmc
bound
add
xchg
mov
xchg
nop
mov
cwtl
sti
or
test
call
lret
sti
mov
or
fsubrs
es
mov
imul
xchg
adc
and
jg
mov
pop
arpl
std
pop
or
dec
xor
pop
rorb
ret
mov
insl
xchg
inc
rorb
push
mov
add
aas
adc
into
cmp
and
addb
or
mov
fnstcw
icebp
sub
sbb
out
fcoms
push
test
sub
inc
scas
out
sub
into
out
cmp
rclb
and
mov
sub
xor
adc
jbe
int
jle
fsubr
out
mov
add
add
rcrl
push
mov
jns
arpl
jp
mov
push
xlat
mov
adc
or
or
cltd
sbb
xor
iret
jae
lea
iret
dec
xchg
sti
movsl
in
push
mov
mov
dec
fsubrl
adcl
sbb
cld
mov
dec
adc
inc
fsubs
xchg
addr16
mov
pop
cmpsl
dec
jl
loopne
cmpsl
int3
xlat
sbb
pop
sti
xor
xchg
rcrl
and
ja
jbe
loopne
mov
jl
inc
sahf
imul
popf
testl
loopne
leave
mov
or
jne
mov
pop
xor
out
out
repz
mov
ds
sbb
fs
dec
and
faddl
call
xor
bound
pop
adc
cmpsb
stos
lock
dec
xlat
pop
aaa
adc
push
mov
xor
inc
mov
icebp
das
pop
push
cmpsl
jb
stos
ds
andb
test
pop
jne
nop
xlat
and
xor
mov
icebp
sub
mov
lret
xchg
aam
enter
mov
notb
or
or
adc
mov
pop
insb
fwait
hlt
subl
adc
scas
clc
or
xlat
inc
clc
lds
jae
jb
lea
cwtl
add
gs
mov
lock
jb
dec
popf
push
imul
cmpsb
xor
popa
jne
outsb
test
outsb
stos
cltd
and
sub
jno,pt
loop
xchg
push
int3
and
addl
movsb
lcall
into
pop
lret
js
push
cmp
fcoms
mov
ss
testl
xchg
imul
cmp
imul
fidivs
js
jb
dec
mov
ret
cmpsb
adc
mov
sbb
push
lods
cmovbe
xor
out
jne
add
xchg
call
push
xchg
xchg
inc
push
mov
clc
push
push
popa
push
fists
jmp
incl
outsl
je
xchg
xor
push
loope
push
mov
xchg
int3
mov
or
jl
out
push
jb
push
notb
mulb
dec
dec
imul
push
mov
and
ficomps
adc
add
addr16
push
cwtl
add
pop
fdivs
dec
pop
or
jge
pop
adc
cmp
imull
testl
popa
cli
mov
out
mov
cmp
jo
stc
pop
cmp
mov
in
adc
and
insl
add
imul
in
jns
adc
or
out
movsb
xchg
cwtl
daa
ficompl
negb
sub
or
lea
js
jle
fidivs
dec
cmpb
and
loopne
dec
xchg
add
jns
loopne
lret
xor
cmp
or
push
inc
ret
ffree
icebp
ds
push
inc
sbb
mov
fists
in
loopne
add
out
scas
pushw
aad
mov
test
push
adc
xchg
dec
movsl
jecxz
sbbb
adc
mov
nop
adc
dec
pop
add
mov
imul
cmpsl
std
sbb
negb
mov
rcl
out
cld
test
pop
cld
pop
nop
xor
sahf
sbb
mov
add
push
add
push
lods
dec
imul
iret
dec
gs
push
inc
mov
mov
test
jg
jmp
jle
jb
xchg
ss
clc
int
inc
fisubrl
daa
adc
lret
push
mov
and
cld
sbb
xchg
pusha
jno
hlt
out
pop
cmc
shll
mov
inc
bnd
loope
scas
ds
mov
cmp
pusha
mov
add
shrl
ss
cmp
xor
fstl
xor
inc
fwait
mov
mov
mov
mov
xchg
lea
ljmp
lea
xchg
fidivl
dec
mov
mov
repz
jne
fcomps
pop
adc
mov
pop
lahf
jecxz
dec
lea
popf
push
pop
jae
cltd
in
in
pop
aaa
rcrb
push
pop
stos
cli
sahf
gs
insb
emms
push
aad
mov
icebp
scas
cmpsb
push
fwait
sub
iret
xchg
xor
pop
lahf
int
jl
mov
insl
pop
pusha
sbb
adc
negb
dec
xor
insb
sbb
jge
sbb
push
lahf
ja
dec
ss
stos
pop
inc
inc
clc
mov
scas
or
add
mov
pop
pop
mov
mov
sbb
adc
mov
and
cld
fs
sti
mov
jb
cmp
cwtl
xor
jo
inc
in
lret
dec
ja
jle
push
pop
ret
or
mov
ja
mov
js
stos
test
jne
and
mov
adc
lahf
in
xor
inc
adc
popa
sbb
jp
in
add
rcll
movl
adc
push
daa
pop
mov
divb
sti
push
xor
sbb
mov
outsl
stc
xor
cli
icebp
and
push
ljmp
dec
out
in
hlt
les
shll
ljmp
addr16
sub
fdivs
out
dec
pop
or
xchg
inc
mov
movsl
jp
xor
dec
cmp
popf
xchg
or
mov
cmp
cmp
in
pop
sbb
inc
in
scas
xor
adc
cmp
addr16
out
fldt
les
lock
loop
cmpsl
mov
lea
cmc
ret
xchg
xor
js
and
jmp
add
ja
add
push
pushf
ljmp
mov
or
lods
fadd
lahf
push
outsb
jne
lret
ret
xchg
loopne
out
mov
and
outsb
lcall
mov
or
dec
insb
fistpll
or
movsb
test
mov
jae
mov
bound
mov
cmp
pushf
mov
repnz
cmp
sub
push
or
and
daa
mov
mov
jb
mov
push
aam
nop
jnp
orb
xor
push
adcl
bound
mov
add
clc
ss
loop
bound
loope
adc
xor
test
adc
scas
cmp
popf
adc
mov
mov
mov
mov
mov
lahf
jns
out
mull
sub
int
orb
aas
test
push
enter
and
sbb
mov
pop
mov
je
lcall
aas
xor
cmp
adc
jo
int3
mov
pop
mov
cli
out
cwtl
aaa
in
mov
jl
and
adc
or
mov
shrb
ret
dec
jo
inc
xchg
scas
mov
lods
xchg
sbb
xchg
mov
xchg
outsl
mov
aad
push
sub
shl
jge
push
cld
mov
mov
lods
dec
xor
loope
das
mov
ljmp
inc
inc
xchg
mov
or
cwtl
jg
pop
aam
xor
inc
ja
dec
subl
sbb
push
mov
pop
js
xor
flds
ds
xorl
xchg
stos
std
clc
xor
fimull
std
inc
adc
dec
stos
mov
into
mov
xchg
mov
xchg
insl
push
fstl
pop
pop
lods
mov
cmovne
loop
xor
jg
aad
mov
mov
sbb
imul
xchg
jle
xor
scas
gs
shrl
out
mov
jp
int3
popf
xchg
test
std
ss
jge
call
lret
xor
adc
roll
pushf
mov
push
stos
cmc
test
into
push
gs
push
or
movsb
std
mov
imul
leave
rcpps
fs
aam
inc
data16
mov
xchg
pop
and
push
je
or
iret
shlb
in
and
repz
inc
xor
pop
jns
and
add
xchg
mov
aas
stc
adc
jnp
rol
jmp
dec
jge
xor
dec
add
mov
sub
cwtl
xchg
lods
lret
cmp
dec
gs
lcall
push
daa
sbb
insl
lret
mov
jmp
push
cmp
sbb
adc
add
movsb
dec
ds
movsb
push
jo
insl
ret
jl
scas
mov
sbb
push
push
sbb
cmp
or
adc
pop
sub
sbb
cli
mov
mov
fisttpl
mov
pop
fistps
xchg
jo
adcb
jb
add
xchg
negl
test
gs
pop
js
fimull
fcmovnb
shrb
and
and
and
cli
sarb
or
rolb
das
cmp
lret
test
xor
jmp
data16
fmuls
xlat
ds
in
push
movsb
adc
cmp
roll
scas
pop
jns
insb
jne,pn
lods
movsl
mov
mov
cwtl
mov
sbb
mov
jmp
add
push
cwtl
ja
and
mov
pop
in
add
lods
cmc
add
cld
xor
std
cmpsl
hlt
test
push
outsb
mov
xchg
sti
or
nop
jnp
fisttps
cvtdq2ps
dec
in
xchg
mov
pop
xchg
outsl
sub
rcll
xchg
je
xor
hlt
cltd
sub
cmc
fcmovb
dec
rcr
sub
lret
jg
xor
sub
add
xchg
out
out
ret
loopne
pop
nop
pop
arpl
lret
and
std
cmp
mov
or
loope
push
int
sbb
movsb
xlat
outsb
add
cld
pop
inc
jge
les
pop
cmp
icebp
mov
sub
into
inc
jge
adc
xchg
in
scas
cmp
jmp
frstor
pop
into
push
mov
clc
xchg
inc
xchg
in
in
icebp
int3
pop
cld
ds
mov
and
sub
imul
push
icebp
dec
jp
pop
das
lods
in
dec
lahf
mov
clc
lods
cmpsb
sub
jmp
pop
pop
jae
sub
pop
sbb
jnp
jno
cmpsl
xor
adc
repnz
int3
inc
jle
cmpl
mov
ds
mov
jge
adc
lods
shll
or
inc
xor
popa
aad
jge
mov
mov
and
outsl
outsb
cmp
mov
sub
aam
cmp
hlt
cmpsb
loopne
rcrb
mov
mov
or
xchg
sub
fnstenv
into
daa
outsb
cmp
mov
inc
dec
loope
push
push
and
daa
xor
and
mov
insl
dec
mov
xchg
or
mov
and
xor
pop
mov
mov
aas
in
push
add
lret
into
cmp
mov
sbb
xlat
fnstsw
dec
mov
movsb
or
or
in
dec
jns
jno
mov
pusha
in
sbb
nop
out
test
loopne
stos
sbb
cmpsb
jmp
loop
inc
ljmp
pop
mov
sub
push
cli
jg,pt
mov
filds
jbe
scas
mov
xor
ja
or
stc
mov
lea
push
fucom
shrb
xchg
ja
xchg
lods
push
cmpsl
jne
js
push
adc
imul
sub
sahf
imul
idivl
xchg
push
pop
and
rcll
jp
sub
hlt
lea
movsl
mov
push
scas
sub
test
shll
or
xor
repnz
xor
imul
pop
mov
decb
jae
lcall
jmp
sbb
push
rolb
and
mov
jo
icebp
adc
sbb
mov
mov
mov
push
cmpsl
add
imul
and
test
jge
add
jns
icebp
vphadddq
inc
add
sti
push
dec
scas
jne
adc
dec
shl
xor
aaa
lea
out
xor
dec
inc
mov
insb
push
idiv
or
cmp
mov
popa
push
lret
ret
xchg
nop
or
negl
je
call
imul
adc
add
sbb
sbb
sahf
lcall
push
inc
shl
mov
jle
xchg
inc
pop
mov
pop
je
inc
pop
cmp
scas
push
cli
inc
pop
fldl
sub
into
cmp
loope
xor
push
xchg
add
jnp
adcb
mov
test
mov
add
pop
jae
ret
xchg
push
mov
sbb
ds
adc
enter
es
gs
cmp
lea
and
scas
iret
push
pop
and
cmp
cmpsl
popf
mov
mov
push
cmp
shll
cmp
sbb
dec
pop
and
lcall
cmpl
jmp
sub
jb
push
leave
das
mov
cmp
icebp
addr16
hlt
pop
push
pop
cwtl
sub
pop
es
pop
dec
mov
cmp
insl
xchg
sub
xchg
jg
cmpsb
in
out
test
and
in
sbb
pop
hlt
insb
mov
jns
sbb
and
sbb
out
in
or
loope
mov
sbb
xor
cmp
ret
jle
rclb
pushf
push
insb
cmpsb
jns
jae
mov
xchg
cmp
rclb
out
jae
scas
popf
scas
std
dec
sub
mov
scas
sbb
dec
dec
fisttps
cmp
xlat
jp
mov
push
sti
dec
add
stc
and
enter
jb
or
repz
scas
xchg
out
mov
int
fs
in
xchg
push
mull
cmp
cmp
stos
adc
popa
ds
mov
jge
dec
pop
leave
xor
popf
add
insl
loop
mov
add
mov
mov
and
mov
cltd
cmp
pop
call
test
out
xchg
jb
lea
shlb
and
fdiv
rcrb
out
mov
add
dec
mov
mov
and
push
xchg
cmp
xlat
xor
or
cltd
out
inc
mov
neg
sub
dec
fstpl
push
mov
ret
inc
scas
cli
mov
hlt
popf
xchg
insb
lea
std
mov
cld
das
push
lret
fcomp
cli
pop
mov
inc
dec
pop
das
xor
jno
and
inc
pop
daa
jmp
test
ds
cwtl
stc
adc
out
sub
and
mov
aas
mov
xor
dec
loopne
call
adc
bound
mov
push
sahf
mov
push
push
adc
mov
enter
fisubl
mov
shll
fdivrl
movsl
imul
aam
pop
test
mov
repz
test
into
icebp
jg,pn
push
sub
fistpll
es
lfs
test
aad
divb
js
and
push
xor
sbb
mov
call
sbb
mov
mov
stos
inc
js
mov
fmull
push
aaa
bound
xchg
test
push
mov
jl
xchg
dec
sub
daa
sbb
test
cmc
xchg
into
lcall
inc
mov
aad
ds
cmp
inc
and
jnp
addl
mov
jp
shl
icebp
xlat
subl
sbbb
xlat
paddsw
lea
adc
pop
push
sub
jle
in
dec
dec
nop
and
iret
ss
add
sbb
jo
adc
pop
ja
dec
or
adc
jbe
or
sbb
pop
pop
scas
mov
and
in
mov
ja
lcall
idivl
or
mov
cmc
push
testb
jl
jge
dec
push
cmpb
arpl
pop
mov
push
enter
fldl
lds
mov
xchg
movsl
adc
roll
cmp
add
cmp
mov
mov
push
adc
in
imul
insl
leave
push
push
inc
aam
cmp
jecxz
out
fdivrl
mov
xlat
mov
xchg
cld
dec
mov
outsl
adc
imul
int
jl
inc
andl
aas
push
sub
push
lods
mov
xchg
ficoms
mov
add
and
adc
fidivs
mov
push
cmpsb
jg
pop
call
inc
out
loopne
pop
insl
fbld
xor
dec
adc
jle
mov
mov
test
pop
fwait
cmc
cmpsb
push
lods
sar
out
es
sub
sub
pop
jp
imul
cld
insl
fs
mov
dec
pop
test
or
pop
out
call
shrb
cld
xchg
jne
lds
lret
iret
sbb
lahf
mov
movsb
push
in
jecxz
iret
xchg
pop
jbe
pop
call
mov
or
jae
decb
push
nop
das
test
push
push
add
push
stos
jmp
push
xlat
mov
lret
xor
stos
fwait
adc
jle
fwait
mov
test
out
pushl
shll
sbb
cwtl
ja
lods
movsb
popa
inc
jo
bound
std
stc
mov
xchg
dec
pop
arpl
xchg
mov
mov
cld
dec
add
pop
cli
aad
push
adc
dec
mov
ss
push
outsl
lahf
dec
sub
xchg
into
ret
push
lea
cwtl
movzwl
js
aas
pop
mov
push
and
adc
std
inc
mov
dec
in
shll
or
mov
outsl
fldcw
inc
pop
cmp
pop
mov
jmp
push
test
push
cmc
imull
test
add
mov
lock
mov
push
es
jecxz
lret
cmpsb
rclb
push
out
add
inc
fidivrl
outsl
arpl
bound
sahf
pushf
mov
hlt
cmp
pop
jnp
outsl
shl
mov
hlt
fcoml
call
outsl
push
sbb
loopne
inc
int
aas
xor
cli
les
repz
stos
jno
push
push
popa
out
sarb
adc
sbb
test
pop
sbb
pop
cld
nop
movsl
je
nop
imul
add
or
pop
fmuls
xchg
ljmp
push
loop
insb
mov
sbb
int3
shlb
out
xchg
cmc
ljmp
xchg
out
in
mov
xchg
pop
test
push
xor
je
test
add
sbb
or
shll
outsl
lock
filds
mov
ss
mov
jno
mov
mov
aam
movsl
in
and
dec
out
jae
pusha
leave
ret
jge
inc
pop
mov
mov
cld
mov
popf
es
adc
xor
mov
sbb
shrb
imul
xadd
lahf
adc
stc
cmp
mov
pop
inc
push
inc
sbb
pop
xorb
push
jno
mov
push
jne
movsl
jno
xorb
ret
jbe
std
ss
je
leave
cmc
xchg
pop
je
out
jno
notl
and
mov
dec
subb
into
or
cmp
std
cmp
inc
jae
push
hlt
stos
pop
clc
lods
pop
mov
sbb
hlt
jo
jae
call
xchg
pop
cwtl
pop
js
out
xor
adc
cmc
xchg
pop
jo
mov
dec
pop
sbb
cli
push
pop
lret
pop
lock
cmp
mov
fisubrs
push
scas
dec
filds
lock
sub
jnp
jg
insl
add
xchg
add
ret
cmp
lret
int3
cld
test
fldenv
cmc
pop
mov
in
out
inc
and
cmpsb
lahf
or
lods
aas
leave
jle
stos
divl
dec
mov
or
sahf
clc
cwtl
dec
cmc
out
pop
in
sti
push
push
push
in
adc
jle
ss
arpl
adc
xchg
jmp
int3
mov
loope
cs
test
adc
and
xor
bound
pop
fsts
add
mov
sub
sbb
sbb
test
sub
cltd
ror
mov
jmp
popl
cmpsl
mov
add
and
push
ljmp
cld
push
pop
jae
or
xor
insl
addr16
sarl
dec
lds
hlt
imul
mov
hlt
xlat
mov
sahf
cli
inc
dec
sub
mov
sar
ljmp
nop
cmpsl
leave
lock
and
adc
xchg
cmp
fisttps
jne
jo
dec
pop
movsl
int
inc
jb
out
ljmp
mov
ja
sub
inc
scas
push
jb
fidivrs
sbb
mov
jg
nop
jg
mul
xchg
aaa
daa
mov
push
lock
jle
es
xor
jle
in
xchg
xchg
cmpb
pop
mov
stc
adc
ret
jle
in
inc
mov
call
push
or
mov
cmpsb
aas
dec
cwtl
popl
mov
ds
lret
push
cs
push
xchg
insb
addr16
mov
add
cli
jp
stos
cwtl
and
outsl
nop
outsb
push
dec
mov
push
jo
out
and
jge
xlat
mov
stos
sbb
mov
scas
stos
push
sahf
mov
loop
fdivr
int3
imul
jno
cltd
push
stc
imul
ret
pop
and
ja
lret
mov
test
cmp
fcomp
and
or
mov
js
imul
test
xchg
or
mov
addr16
lcall
cmp
xor
repz
lcall
bound
out
lods
cmp
mov
orl
cs
in
dec
js
aam
scas
dec
pop
movsb
xor
icebp
jg
push
or
mov
xchg
cwtl
jo
aas
mov
fwait
in
or
fcomi
out
cmpsl
xchg
push
cmp
xlat
lock
int
test
jb
inc
rcll
adc
sub
call
in
push
mov
ret
push
jb
stos
hlt
mov
adc
pop
jo
xchg
mov
xor
inc
pop
xchg
and
les
fs
xchg
jbe
fildll
mov
add
mov
aas
cmc
cmp
xor
popf
dec
add
ds
push
adc
int3
in
mov
lock
rorl
subb
out
mov
add
jb
orl
stos
dec
pop
inc
daa
in
movsl
adc
loope
mov
shll
rcrl
sti
mov
int3
dec
insl
fucomi
lret
je
add
mov
rcl
divl
adc
aaa
sub
movsl
sub
aam
repz
sti
leave
inc
aaa
xchg
mov
test
lea
mov
int3
push
and
dec
lret
mov
es
cmp
push
sbb
mov
fidivs
scas
inc
scas
mov
fadds
or
adc
push
push
xlat
dec
dec
repz
jne
addr16
mov
or
xchg
iret
mov
mov
addr16
push
add
inc
insl
icebp
sub
mov
clc
test
lret
pop
or
pop
lds
into
mov
xlat
push
cmp
out
popf
cli
mov
into
xchg
mov
int
pop
aaa
and
cmc
dec
aam
xlat
loop
xor
push
cmp
xorl
inc
movsl
dec
lcall
push
inc
cmp
push
and
mov
sbb
loopne
ja
mov
dec
mov
lea
fsubs
int3
scas
jmp
lods
and
xor
lahf
mov
jb
out
mov
ljmp
inc
pop
sbb
jg
das
out
xchg
sub
lret
sub
je
enter
push
lods
inc
and
out
jle
pop
les
adc
sahf
lahf
jno
add
dec
push
push
out
shrl
adc
repnz
jmp
lock
les
lret
pop
lret
pop
push
xor
and
jnp
sub
pop
js
jmp
pop
mov
jae
test
jo
out
sbb
mov
pop
mov
push
mov
rclb
fdiv
icebp
out
push
int
inc
cvtdq2ps
mov
sbb
cmp
xor
ljmp
xor
jmp
pop
fisttpl
mov
pop
xchg
adc
aad
fdivp
ds
leave
cltd
hlt
or
xchg
sbb
push
or
iret
and
les
lahf
or
in
movsl
xchg
mov
push
or
fidivrs
xchg
mov
repz
xlat
cmp
add
xchg
out
aas
sub
xchg
fsubr
dec
mov
adc
dec
adc
cmp
in
addl
cmpsb
adc
stos
mov
in
stos
xor
leave
cltd
mov
inc
fdivrl
scas
out
cmp
jecxz
movl
mov
cli
rol
xor
mov
loopne
mov
scas
jl
pushf
subl
jg
inc
pop
jmp
xor
sub
lret
jge
and
or
leave
mov
out
sbb
fmull
push
mov
sbb
subl
pop
aad
xlat
xchg
push
aaa
fldcw
jp
xchg
cwtl
jecxz
or
mov
std
dec
aas
in
dec
hlt
pop
lret
xchg
xor
xchg
adc
inc
loopne
loope
lcall
mov
jne
lea
scas
mov
cmp
stos
orl
movsl
xchg
lret
mov
xchg
cmp
sbb
idivb
sub
fstl
cwtl
bound
arpl
ret
and
or
jmp
inc
mov
push
inc
movsb
dec
push
push
add
adc
rcl
jno,pn
es
and
push
adc
pop
fbstp
pop
add
xchg
or
push
sbb
or
adc
mov
leave
rorl
mov
shlb
jecxz
cmp
mov
div
adc
scas
andl
add
int
adcl
mov
adc
leave
xor
lods
lods
xchg
adc
nop
decl
fucomip
fs
adc
ret
mov
test
push
pop
dec
filds
aas
ret
lods
and
insb
rcrb
popa
fdivrs
lods
in
js
aad
mov
imul
repz
fildl
out
mov
sbb
mov
mov
push
xor
movsl
scas
mov
in
aam
jl
inc
sbb
ja
stos
push
or
rclb
in
jb
cmp
in
xor
xor
push
jns
je
xchg
das
jns
sub
dec
pop
sub
loop
ja
mov
adc
jae
pop
sub
rcrb
leave
and
shrb
push
repnz
sbb
jp
mov
test
ret
pusha
mov
fs
aam
pop
aas
sahf
add
mov
and
push
decl
add
sti
dec
cmp
or
popa
in
ja
insl
sub
adc
add
jno
pop
repz
mov
xchg
fidivrs
xchg
mov
test
sub
mov
lret
std
fisubl
jae
in
movsl
jl
add
inc
and
or
ljmp
mov
mov
xor
mov
aaa
or
test
mov
cmp
cmp
fnstcw
mov
js
sub
and
mov
jge
shlb
pop
mov
jecxz
fsubrl
jne
sarl
push
jmp
inc
push
jp
push
jp
mov
ds
es
stos
and
shlb
pop
and
outsl
push
push
add
jne
push
jne
xor
lret
inc
pop
mov
inc
fldt
pop
xchg
xchg
lds
jo
or
inc
mov
xor
cmpl
jecxz
jno
jge
fs
addb
je
mov
jbe
scas
loopne
or
int
cmc
mov
xor
fstpt
mov
inc
mov
cli
lea
xchg
jbe
imul
jbe
cmp
subl
pop
add
test
in
lods
stos
fwait
rclb
fisttpll
pop
xlat
aas
jnp
cmp
arpl
cmp
fmul
cli
and
test
or
int
aaa
and
adc
imul
inc
add
jb
and
mov
jae
xchg
rorb
sub
imul
add
cmc
dec
sarl
add
cmp
js
cmp
dec
xchg
or
mov
sti
dec
stos
mulb
scas
pop
mov
pushf
mov
push
xchg
int3
inc
pop
or
aam
cmpb
and
cmp
mov
jmp
lahf
sbb
shl
push
xchg
pop
icebp
inc
lahf
inc
jae
xchg
ret
push
stos
dec
mov
sarb
push
xchg
push
xchg
aaa
cmp
push
dec
adc
das
stos
sahf
dec
mov
aad
lock
fidivrs
idivl
out
mov
or
adc
add
int
jo
mov
sub
jae
stos
xor
stos
ja
push
and
mov
add
fistpl
cld
mov
xchg
jno
push
sub
movsl
cmpsl
jne
mov
sub
jl
aaa
and
jb
hlt
insb
adc
cld
add
pop
lock
lcall
xorl
or
enter
dec
imul
aaa
mov
lcall
push
mov
xchg
inc
inc
jmp
repz
and
xor
sbb
leave
iret
mov
inc
insb
jmp
sub
loopne
and
fs
mov
lret
pop
cli
repnz
adc
mov
in
insl
add
mov
pop
or
shr
mov
repnz
mov
mov
push
dec
mov
push
mov
dec
lahf
cmp
push
in
cld
lret
inc
lahf
in
arpl
ror
add
scas
fldl
jo
dec
cmp
mov
mov
ds
mov
xchg
sub
xor
xor
add
xor
out
adc
push
test
jns
xlat
jns
enter
cmp
pushf
nop
cld
mov
sub
movsl
lret
xor
out
xor
clc
add
xchg
mov
cmc
sbb
push
mov
dec
sbb
push
or
mov
scas
xor
sbb
adc
add
mov
scas
repnz
jns
cld
rcll
add
mov
push
dec
insl
push
mov
xchg
mov
xlat
into
lods
lea
push
fbstp
ja
in
inc
mov
pop
out
xchg
mov
jg
fwait
inc
xchg
push
jg
cld
sbb
pop
roll
ds
and
add
ja
inc
push
mov
in
out
jnp
push
xchg
xor
test
loope
and
aam
test
adc
cwtl
dec
xchg
es
inc
mov
and
dec
out
cwtl
jno
inc
sti
sarl
imull
repnz
ljmp
test
rolb
jle
shr
imul
scas
movsl
out
or
adc
loopne
pusha
mov
inc
or
mov
mov
les
fsts
fistpll
xor
mov
dec
dec
scas
pop
jmp
pop
repz
shlb
cmp
lods
jae
xchg
mov
add
pop
loope
ds
adc
and
inc
adc
dec
xlat
faddl
cmp
cld
pop
jmp
sar
ljmp
jae
imul
mov
dec
shr
aad
js
jg
xor
cmp
push
cli
mov
test
repz
in
pop
mov
enter
ja
jg
inc
dec
add
clc
cmc
add
fs
xchg
mov
adc
lret
cmp
jp
insb
or
dec
xor
mov
test
in
mov
mov
ret
mov
jecxz
jp
pop
xchg
xchg
insb
sbb
imul
fsubrl
cli
lret
inc
bound
push
sahf
pop
mov
ds
popa
cmc
daa
jno
jo
and
xchg
mov
cmp
and
mov
popf
mov
out
mov
lock
imul
mov
and
divl
out
jns
daa
pop
jnp
push
sahf
sti
adc
xlat
sub
flds
pop
fdivrl
pop
or
push
std
push
mov
movsb
enter
jb
pop
std
clc
das
push
lods
push
jbe
inc
faddl
add
sbb
and
inc
in
or
inc
cmc
mov
pop
adc
decl
xchg
andl
adc
loopne
das
jnp
sarl
push
or
inc
das
js
sub
scas
push
xchg
ja
sahf
pop
ss
js
jbe
addr16
mov
arpl
aas
insb
int
mov
int3
fnstenv
jl
repnz
stc
lahf
stc
aam
cmp
movsl
push
dec
addb
push
popf
xchg
aaa
xlat
fsubs
jmp
jge
std
cmp
xor
ljmp
xchg
ja
mov
loope
and
adc
sbbl
lret
pushf
pop
nop
lods
mov
inc
popa
lret
mov
inc
xor
and
or
or
sub
xor
sub
insl
xlat
cmpb
mov
dec
mov
sti
pusha
cwtl
test
out
push
jmp
dec
adc
in
mov
mov
fbstp
pop
mov
call
lods
bound
lock
filds
jne
repnz
push
mov
gs
mov
jp
outsb
sbb
repnz
lret
xor
pushf
mov
sub
inc
pop
or
jae
test
jle,pt
mov
xchg
sub
lods
xor
imul
pop
push
dec
push
pop
mov
jb
and
mov
mov
jmp
pop
data16
mov
push
jb
js
xchg
pop
addl
xor
mov
dec
dec
xchg
sub
dec
mov
iret
cmp
dec
jb
fmull
rcrb
sub
out
inc
sub
inc
dec
in
enter
pop
dec
cmp
cli
mov
cmp
leave
mov
mov
fwait
add
enter
shll
lahf
ja
rcll
repnz
mov
divl
lock
imul
mov
xchg
push
inc
mov
xchg
cmp
lcall
cli
mov
jg
jg
repnz
xchg
xchg
repz
push
lret
imul
lods
clc
loopne
bound
clc
stos
push
push
sbb
mov
sbb
or
pop
ja
push
cmc
into
inc
mov
cltd
cli
out
pop
fs
push
inc
add
add
jnp
clc
dec
cmpsl
sbb
clc
sub
bound
ja
xchg
inc
mov
cmp
push
xor
adc
jae
mov
jo
sti
lahf
and
xchg
push
dec
insb
push
lea
xchg
out
jbe
dec
and
pushf
test
inc
jns
sbb
jl
push
or
inc
movsb
push
popa
std
mov
unpcklps
adc
and
dec
cli
mov
dec
pushf
cld
mov
lea
sti
fsts
out
insb
je
movsb
cmpsl
sub
hlt
mov
inc
add
jle
sahf
in
ja
pushf
out
aas
inc
cmpsb
jecxz
push
mov
push
pushf
cmp
scas
mov
jb
push
jo
mov
int3
sub
xchg
ljmp
dec
mov
iret
mov
imul
imul
pushf
dec
ja
pop
aaa
pop
jmp
xor
cld
mov
pop
adcl
leave
xor
cmp
mov
loopne
inc
sarl
frstpm(287
xchg
stos
ja
cs
push
scas
scas
cs
imull
push
pop
xchg
pop
pop
cmp
out
fdivl
in
sahf
sti
jp
and
xchg
ficoms
dec
jmp
mov
cli
jl
mov
sub
and
fldt
xlat
inc
fsubp
cmpsb
jecxz
roll
jne
push
adc
pop
xor
icebp
xor
out
sbb
into
shlb
push
dec
pop
sub
out
sti
mov
jnp
loopne
and
ja
js
pop
rolb
sub
rcl
fidivl
and
sbb
pop
or
fsub
into
dec
mov
mov
icebp
sub
scas
pop
xchg
ljmp
and
sarl
movsb
xchg
mov
imul
test
xlat
cmpsl
ret
fdivs
jae
lret
sahf
add
mov
mov
sbb
imul
jne
add
movsl
rcl
dec
movsb
jo
dec
in
rcr
test
icebp
or
js
ljmp
or
sbb
arpl
cwtl
dec
cmpsl
cltd
push
push
add
cmpsl
cmp
inc
cld
out
inc
push
lods
aaa
push
pop
mov
mov
subl
fs
lds
test
cmp
inc
dec
mov
lcall
mov
jecxz
inc
dec
jno
in
push
cmp
or
sbb
out
jne
mov
shll
aad
cld
lds
insb
dec
dec
jle
pop
lret
dec
and
xlat
es
fcmovnb
popf
or
sub
cmpsl
pshufw
movsb
adc
clc
dec
push
js
xorl
stos
mov
icebp
pop
rcl
in
cld
lret
outsb
jl
les
fstpl
sub
pop
cmp
lahf
scas
push
jae
xchg
inc
jecxz
sbb
adc
iret
adcb
pop
push
pop
dec
jmp
jl
or
push
stos
xchg
mov
mov
popf
sbb
out
mov
pop
adc
mov
mov
xchg
repnz
cmpsl
jno
mov
pop
ljmp
faddl
push
fld
dec
or
push
jmp
pop
insb
ret
out
je
or
ss
popl
cmp
mov
or
mov
sbb
addr16
imul
jno
sbbb
jnp
sbb
stos
pop
movsl
ljmp
push
clc
dec
stos
pop
mov
lret
cmpsb
dec
mov
es
test
push
mov
sbb
mov
out
dec
mov
js
stos
dec
adc
leave
inc
test
shll
xor
ret
int
and
loop
popf
jbe
push
scas
cli
inc
xor
xchg
in
jno
aam
iret
jns
cmp
pop
sub
mov
ret
sbbb
or
xchg
movsl
div
test
pop
push
dec
mov
mov
mov
inc
mov
aaa
out
xchg
inc
pop
cltd
jp
movsb
cmp
pop
fcompl
test
rcl
sti
ret
and
adc
cs
mov
ret
mov
push
or
aam
jbe
fldt
xchg
push
push
pop
sub
and
stos
or
mov
cli
xchg
cmp
xor
sbb
push
xchg
pop
push
xchg
aam
out
add
mov
cmp
jae
jnp
pop
xor
outsl
sub
test
data16
in
add
shll
cmp
pop
adc
pop
fisubl
dec
lods
xor
cmp
addr16
ficomps
stos
fcoms
cmpsb
push
jmp
mov
mov
push
ljmp
push
sbb
jb
jns
push
pop
push
aas
rcrb
xchg
data16
arpl
pusha
fimull
loopne
or
and
push
out
pop
movsb
pop
leave
cmp
or
inc
pop
lcall
gs
xor
jge
mov
jg
int
xlat
push
add
imul
jp
and
push
daa
ret
mov
pop
filds
loopne
scas
lret
mov
pop
push
aam
shll
or
xchg
clc
leave
mov
jbe
xchg
mov
lea
or
mov
in
out
popa
or
movsb
xor
inc
xor
int
push
rcrl
xchg
sbb
icebp
neg
inc
pop
xlat
jns
sbb
pop
mov
adc
jb
inc
insb
ds
mov
lcall
cmp
inc
jl
or
stos
pop
adc
sub
fnclex
jbe
mov
mov
lock
mov
fbld
mov
xor
shrl
addb
push
stos
xchg
xchg
jmp
cmc
lret
push
fdivl
leave
dec
out
jecxz
and
mov
test
sub
lds
xlat
test
gs
test
push
fbld
adc
jle
push
ret
fmull
pusha
cmp
adcb
test
and
scas
xchg
pushf
loope
repz
adc
jl
outsl
add
test
test
insb
int3
cmpsb
inc
cmp
dec
imul
repnz
jae
lock
fcompl
push
ret
repnz
aaa
movsb
and
mov
mov
sbb
or
dec
xchg
int3
ja
mov
push
dec
or
jb
jnp
mov
pop
ja
dec
add
cmp
je
es
mov
fildl
fs
pop
outsl
movsb
lods
daa
sub
fiadds
fidivl
adc
pop
or
and
out
push
lahf
popa
loope
mov
stos
xlat
add
pop
add
insb
subl
loopne
add
jecxz
pop
mov
fsubr
mov
cli
lahf
loope
jle
outsl
gs
mov
xor
pop
mov
adc
jnp
xchg
out
or
lock
ja
jno
es
std
xor
ret
xchg
inc
adcb
out
cmp
dec
pop
sbb
mov
xchg
inc
xchg
int3
shrl
dec
mov
add
cmp
xchg
ja
xchg
and
repz
mov
das
decl
xlat
or
fcom
push
icebp
xchg
mov
das
insb
int
mov
mov
xlat
pop
imul
leave
push
adc
sbb
jns
in
mov
mov
loop
jns,pt
pop
shufps
xor
out
adc
stc
mov
jecxz
test
jne
das
ret
lcall
or
jo
adc
in
lods
mov
adc
pusha
lret
pop
adc
leave
movsl
insb
adc
xor
lea
aaa
lahf
dec
outsb
jecxz
fwait
xchg
mov
push
mov
push
dec
xor
jl
mov
adc
stos
push
and
mov
fsub
pusha
daa
sbb
sub
sbb
pop
push
rorl
mov
test
scas
and
loopne
aam
rolb
testl
adc
enter
lods
cmp
mov
lret
inc
pop
or
add
je
adc
push
ficoml
mov
pop
xor
jecxz
in
and
in
sub
inc
int
int
pop
lahf
in
in
negl
jp
mov
pop
adc
jno
inc
movb
sub
test
cmp
pop
outsl
in
sbb
lcall
and
mov
mov
adc
sub
fisubrs
sub
inc
in
inc
push
cmc
test
std
push
cwtl
inc
jns
add
lret
cmpsl
roll
popa
pop
mov
int3
sbb
jnp
cmp
sbb
daa
or
sub
hlt
dec
cmp
js
mov
jmp
jnp
into
push
pop
mov
add
xor
in
jmp
sub
fcomps
stos
jmp
mov
lret
testb
jbe
es
pop
sbb
cli
sub
addr16
rol
xor
outsb
cmp
repz
jno
scas
pop
cmp
mov
pop
add
test
aad
adc
es
int
les
ret
pop
into
insl
fcoml
scas
or
lcall
mov
les
pop
pop
dec
clc
fs
mov
xchg
std
sub
mov
stos
inc
xor
loope
repnz
stc
rol
and
enter
inc
sub
adc
mov
dec
ret
adc
inc
cwtl
jae
lahf
sar
jnp
mov
test
neg
ret
std
mov
xchg
dec
add
adc
adcb
pushf
scas
pusha
pop
jae
cmp
inc
xor
ja
cmc
filds
cmc
xchg
loope
dec
insl
cmp
fcoml
addl
stos
std
into
hlt
sub
es
cld
cmpsl
call
fistps
mov
out
cmpl
imul
rcrl
aad
mov
ja
mov
aad
sahf
pop
cld
cld
loopne
idiv
mov
dec
xor
adc
pop
jl
dec
xchg
sbb
push
sahf
pop
in
lcall
fistps
pop
push
push
pop
pop
ja
je
adc
ss
repz
or
jmp
xor
lea
cmp
sti
cmp
adc
repz
mov
cmpsl
frstor
outsb
mov
xchg
and
int
pop
add
adc
in
push
xor
pop
into
lods
rcll
gs
orl
and
and
fs
sub
mov
icebp
notl
imul
mov
mov
enter
jl
scas
mov
lret
jbe
cld
inc
inc
bound
pop
hlt
sub
xchg
mov
xor
xor
and
pop
cwtl
repnz
pop
dec
fsub
loopne
pop
mov
mov
je
xchg
enter
xchg
lret
inc
nop
mov
mov
out
loopne
or
out
insl
jo
cld
test
or
int3
outsb
jle
mov
sbb
add
test
dec
and
std
fidivrl
or
das
mov
push
lods
call
xor
lock
jge
loop
repnz
mov
fistpl
clc
test
std
dec
pop
xor
iret
aad
sahf
mov
push
and
sbb
lret
sti
sub
mov
xor
out
popf
or
inc
mov
or
pop
mov
adcb
xlat
pop
push
ret
lods
sub
dec
xor
xor
dec
jp
adc
popf
daa
imul
push
cmpsl
call
out
cmp
jbe
adc
mov
jb
shl
sbb
imul
in
les
xchg
inc
adc
orb
lahf
mov
xchg
xchg
mov
adc
adc
cmp
xlat
mov
fisubrs
stc
lret
shrl
test
mov
push
int
xchg
jo
in
jns
movsb
cmp
ret
jle
dec
lock
sbb
testb
push
mov
or
faddp
rolb
jl
in
stos
cmp
mov
jno
pop
mov
mov
mov
in
std
pop
jns
adc
aad
sub
or
aaa
xchg
cld
in
add
jle
fists
sbb
les
dec
jo
sahf
jns
ss
mov
je
fwait
adc
iret
mov
addr16
sub
clc
in
mov
or
mov
xchg
push
cmc
ja
xor
fidivs
push
xor
arpl
jno
jecxz
push
insl
xchg
out
rclb
repz
sub
pop
out
and
rolb
sti
das
mov
notb
mov
mov
push
inc
push
push
push
sub
add
mov
push
xchg
ret
in
mov
aam
jecxz
and
int
ss
jbe
cld
sbbb
mov
push
shlb
fistl
ja
adc
and
cs
mov
sub
xlat
movsl
pushf
cmpsb
sbb
adc
xchg
pop
in
xchg
xor
inc
out
xor
and
stos
lods
add
shll
adcl
sbb
jmp
cmp
iret
addb
sub
lods
push
sbb
jae
jae
pop
jno
je
mov
push
popf
ret
sub
ficompl
aas
cmp
fstl
outsb
loopne
sarb
mov
xchg
out
jo
jl
lret
or
pop
and
push
xchg
add
icebp
adc
scas
jo
inc
and
popa
sub
subl
jl
fisubrs
jo
iret
sbb
popf
insl
cmp
inc
mov
pop
sahf
or
xchg
xchg
xchg
pop
stc
xor
and
aaa
add
mov
icebp
pusha
pop
sbb
cmp
pop
dec
lret
xor
test
and
fcoms
mov
add
stos
xchg
mov
xlat
lods
movsb
rclb
cmpb
jnp
icebp
jl
add
jns
mov
add
mov
and
cmp
mov
test
add
pop
dec
popa
pop
in
mov
sbb
sub
add
mov
sbb
jecxz
imul
mov
pop
repz
les
adc
add
pop
lock
cmpsl
clc
ret
and
std
fs
aas
pop
stos
xchg
xor
loop
loopne
out
inc
cmc
ficoms
inc
push
adc
insb
push
ljmp
cmpl
cli
push
scas
adc
fcmovb
loope
cmc
test
inc
inc
int
xchg
leave
push
jb
adc
mov
ret
ret
and
imul
sbb
sti
cmpsl
daa
xlat
fcoml
sbb
mov
icebp
xlat
sbb
movsl
jns
jecxz
movsb
out
jo
jo
rcrl
mov
fwait
gs
fcmovnb
fcoml
pop
rcl
stos
mov
jnp
xorb
inc
dec
push
in
xchg
fucomip
jbe
lock
sub
xor
inc
jl
fs
dec
inc
cmp
sub
jo
mov
mov
xor
inc
in
rcrw
dec
mov
mov
fnstsw
pop
xor
or
mov
sub
xchg
mov
in
stc
mov
aas
stc
std
push
test
outsb
inc
xchg
repnz
rcrb
out
mov
out
ret
stc
xchg
mov
jg
testl
mov
leave
inc
das
jmp
ds
lret
insl
out
xchg
mov
in
xchg
pop
xor
imul
xor
inc
xchg
push
lcall
cmp
lcall
mov
xchg
je
fildl
sahf
add
add
push
jae
and
fistps
pop
sub
ja
push
push
xor
mov
xchg
in
movsb
xor
arpl
sahf
int
add
lahf
mov
push
je
inc
sbb
ja
pop
jle
enter
sbb
mov
out
lret
and
add
and
jecxz
xor
mov
in
js
bnd
xor
sub
insb
fs
repnz
xor
out
lret
pop
xor
pop
and
icebp
and
test
pop
fcoms
das
cmp
out
inc
fadds
jnp
jns
fiaddl
stc
dec
fcmovu
jp
int3
dec
or
add
jae
inc
js
es
pushf
adc
nop
and
js
pop
inc
mov
in
gs
dec
iret
adc
andl
inc
xchg
jp
into
shrl
cli
jp
outsb
bt
dec
daa
rolb
inc
int
cwtl
jg
loope
or
movl
pop
out
test
mov
cli
or
test
stos
hlt
inc
in
cmpb
outsl
pop
and
push
cmpsl
add
outsb
pop
dec
addr16
xchg
aad
jns
jg
dec
inc
cmp
nop
mov
aaa
mov
pause
inc
jb
mov
lods
out
push
sub
subb
cmpsl
push
inc
inc
mov
sub
push
pushl
das
int
mov
mov
mov
popf
and
repz
xor
adc
mov
cs
movsb
out
jno
das
in
out
xor
inc
push
sti
notb
les
sbb
hlt
popa
xchg
ljmp
nop
lock
mov
lahf
inc
lret
mov
loop
push
imul
les
mov
sbb
lret
arpl
xor
cwtl
das
xor
xor
into
mov
sub
dec
pop
cmp
mov
jnp
mov
lret
xchg
lret
mov
gs
xchg
dec
dec
fdivl
loop
shlb
pop
mov
and
cmpsb
xor
popa
xchg
out
mov
push
mov
loop
lea
lea
push
rcrb
in
repnz
adc
jg
sub
mov
into
in
into
cltd
jo
xchg
js
sub
stos
fisttpll
std
mov
cmpl
into
es
cltd
out
lods
and
or
rcrl
dec
in
xor
xchg
mov
ss
lea
outsl
cld
push
ja
mov
jecxz
out
adcl
xchg
cmp
out
pop
rolb
cwtl
insl
test
cmp
pop
insb
fwait
les
sbb
sub
mov
fnsave
mov
push
and
lret
inc
and
sub
jae
mov
sbb
xor
fcoms
and
adc
pop
lret
test
sub
fbstp
mov
or
xchg
inc
lcall
sbb
and
shlb
adc
int
xor
cmp
movsl
mov
or
in
or
arpl
adc
test
cltd
loopne
pop
push
decb
aad
mov
adc
in
in
movsl
aaa
or
jno
popa
sub
sub
push
mov
divl
adc
stc
outsb
jl
jnp
adc
sbb
das
imul
sbb
pop
add
test
mov
fimuls
mov
jbe
jb
cmp
mov
push
inc
xor
xor
jb
lret
pop
jns
dec
or
and
mov
adc
fstp
movsb
mov
jg
addr16
icebp
xor
data16
push
movsb
cmc
scas
out
sbb
lcall
mov
fistl
mov
adc
push
add
or
fcmovne
in
xorl
jg
lret
jecxz
imul
cmp
loope
nop
divl
iret
outsb
pop
fwait
mov
push
imul
hlt
hlt
mov
push
and
inc
adc
dec
xor
jnp
lahf
mov
mov
test
test
xchg
cmpb
mov
mov
lahf
xor
ljmp
mov
dec
xor
mov
xchg
mov
sahf
mov
mov
push
xchg
jmp
xchg
xchg
repz
aam
fsubr
cmpsb
lods
mov
push
jecxz
loop
notl
mov
cmpb
cmp
fmull
push
bound
cli
xchg
lods
mov
cld
daa
push
leave
push
dec
shlb
sbb
fbstp
adc
pushf
jl
or
test
in
mov
xchg
stos
pop
outsl
sbb
push
jo
mov
les
addr16
mov
mov
shl
jmp
inc
mov
in
fsqrt
lock
pop
lret
stos
push
cmp
test
inc
pop
nop
leave
popf
insl
mov
dec
push
inc
popf
leave
lds
or
or
fcmovb
mov
jne
inc
sub
mov
je
adc
jns
push
sub
push
mov
mov
push
inc
inc
sub
sub
cmc
push
xor
xchg
imul
dec
lcall
sbb
jns
xor
int3
bound
dec
movsb
aad
lahf
in
lods
scas
adc
dec
add
pusha
mov
and
aam
int
leave
xchg
jecxz
inc
jo
cmp
pop
js
stos
pop
jno
in
mov
aas
xor
add
pop
hlt
xor
clc
fld
jmp
aas
rcl
orl
xlat
std
imul
push
data16
test
ret
outsl
inc
add
dec
inc
mov
and
sbb
push
jae
or
pop
push
rcr
adc
mov
inc
movsl
pop
cmpsl
push
xchg
out
mov
fs
aam
sub
arpl
jne
and
bound
fdivrl
rcll
inc
and
mov
imul
xor
adc
cmp
out
add
cmp
push
mov
test
xor
outsb
or
daa
mov
cmp
movl
lds
pop
loopne
jb
mov
inc
mov
mov
out
mov
mov
mov
icebp
rclb
add
dec
pop
mov
push
pushf
sti
mov
jecxz
out
mov
sbb
arpl
xorl
or
adc
pop
addl
xchg
test
ljmp
das
ret
xor
loopne
adc
pop
or
push
sub
mov
ljmp
enter
pop
in
out
call
lret
aas
jecxz
or
mov
mov
aaa
sub
dec
xchg
cmp
dec
test
cmpsb
pop
into
add
ret
aam
rcrl
idiv
xchg
add
aas
xorl
lods
adc
idiv
lahf
dec
pop
lods
xchg
xor
mov
lds
jns
cmpsl
jno
and
sahf
aad
sub
pop
ret
lea
xchg
adc
sub
test
iret
inc
dec
cmc
pop
inc
rolb
xlat
xor
nop
lods
pop
sbb
inc
ss
push
fstl
xchg
jns
xorb
push
pop
repnz
mov
cmp
lods
mov
pop
push
or
adc
stos
clc
and
movsl
pop
outsb
fistpll
enter
add
dec
hlt
ds
sub
inc
jp
cwtl
mov
scas
pop
in
das
ljmp
and
inc
test
pushf
rcll
movsb
lods
xlat
and
das
or
cmpsl
ss
fcmovnu
cmp
outsb
pop
mov
dec
mov
lods
fcoms
push
movsl
inc
out
and
ficompl
mov
fs
sub
test
rol
add
pop
lret
dec
inc
in
popf
or
add
xlat
xor
mov
fstpt
das
in
mov
sbb
add
xor
xor
shlb
cmpsb
mov
mov
flds
insb
jnp
cmpsl
out
jg
or
fiadds
daa
add
xor
adc
xor
mov
cmpsl
pop
add
sub
jne
xor
das
sub
jo
rorb
inc
scas
add
dec
mov
data16
adc
loopne
mov
in
jae
inc
sbb
leave
lret
scas
add
add
in
std
dec
cmpsb
hlt
in
in
cmpsb
sbbb
cs
and
loopne
outsb
sti
xchg
je
dec
push
xor
lret
dec
call
jo
push
xchg
pop
jns
fildll
gs
sarl
xor
nop
fwait
mov
std
adc
xor
and
flds
in
subb
sahf
dec
lret
aad
lea
dec
imul
in
int3
negl
ret
jae
shll
jno
dec
and
popa
out
test
sbb
dec
or
or
js
mov
push
mov
stos
sbb
cld
das
dec
test
dec
outsl
ficomps
es
mov
inc
ret
sti
and
inc
add
lahf
insl
aas
es
icebp
lret
std
and
addl
idivl
push
inc
xchg
sbb
mov
lods
xor
xchg
jl
mov
repz
mov
fs
movsb
inc
mov
cmpsb
call
or
aam
mov
stos
ret
xchg
jns
and
add
call
outsl
into
adc
push
sub
jle
mov
sub
loopne
scas
xchg
std
cmp
mov
mov
adc
icebp
cmp
lcall
mov
fiaddl
cmc
mov
testb
fdivr
push
mov
inc
inc
push
ret
cmp
inc
push
repnz
sbb
icebp
into
mov
cmpsl
sbb
mov
pop
lods
jl
ds
cmp
or
push
repz
cmp
or
imul
mov
jmp
fcmovnbe
jb
or
out
cmpsl
loop
fwait
ljmp
dec
out
movsl
repnz
mov
enter
lahf
dec
lret
in
xchg
stos
adc
sub
sub
mov
mov
mov
xchg
call
mov
les
punpcklwd
jno
inc
jbe
mov
out
xchg
pop
cmc
xor
jno
inc
sbbl
dec
mov
xor
in
shlb
cmp
or
stc
out
mov
inc
mov
cmp
cmp
cmp
testb
imul
sub
sbb
insb
icebp
ds
jmp
lods
popa
cmp
mov
add
fwait
xor
ret
std
mov
mov
xlat
jge
jae
jmp
fiadds
pop
ljmp
ss
dec
add
jl
cmp
jecxz
pop
lahf
jne
jo
and
mov
dec
push
xor
dec
adc
jo
adc
cld
jge
pop
or
xor
int
cmp
mov
dec
mov
xlat
push
sbb
ds
cmpl
jecxz
jb
dec
mov
fiadds
mov
sub
inc
cwtl
int3
ljmp
cmpsb
int3
lret
mov
or
les
or
push
aam
loopne
push
mov
mov
adc
rorl
add
cmp
and
int
xchg
jnp
inc
shl
adc
scas
repz
jb
repz
fstpl
mov
or
mov
lods
iret
in
ljmp
jg
mov
push
mov
cwtl
jecxz
mov
cs
bound
push
out
js
cltd
dec
notb
mov
xchg
push
add
pushw
xor
dec
inc
lahf
pushf
xchg
stc
lret
pop
pop
fsubrs
imul
movsl
movsb
mov
sbb
addb
mov
adc
and
shll
xchg
js
fstpl
mov
jl
imul
aaa
std
imul
sbb
jb
stos
sub
cmp
xchg
xchg
pop
fs
mov
les
cmc
pop
add
add
in
lock
sub
ds
outsl
jo
cmp
inc
aam
rolb
flds
adc
adc
je
or
rcll
and
sub
movsb
mov
fs
add
sbb
pop
xchg
xchg
das
jnp
adc
das
jnp
lock
jl
in
testl
sti
addr16
mov
xchg
shl
cmp
iret
mov
jnp
mov
or
or
xorb
sbb
mov
xchg
sbb
lret
mov
stc
jmp
nop
cmpb
push
int
adc
icebp
xor
cwtl
cmc
xchg
add
sub
mulb
pop
mov
popa
sbb
mov
dec
mov
cmp
ds
push
pop
adc
out
loopne
test
in
inc
cmp
mov
xchg
in
sub
jno
enter
insl
into
lea
ss
pop
iret
pop
sbb
lcall
popf
xor
add
cmpsb
lret
sub
cmpsb
scas
addr16
bound
mov
or
sahf
pop
outsl
jle
mov
je
dec
and
lods
inc
push
pop
idivl
jmp
leave
cltd
pop
jle
test
fiaddl
stc
inc
mov
in
daa
stc
xchg
les
out
mov
call
sbb
cmpsl
adc
jle,pt
pop
sub
adc
stos
lea
popf
aad
add
and
add
and
pop
cs
test
test
adc
push
and
push
aam
sbb
test
mov
mov
cld
shrl
inc
shrl
cltd
lds
mov
dec
jb
pop
dec
iret
stc
or
repnz
xor
pop
pop
stos
sub
xchg
inc
xchg
xchg
movsb
gs
outsl
cmp
add
xor
dec
adc
sti
jne
sbb
xlat
gs
cmp
cmp
popf
aas
mov
and
adc
cmpsl
dec
ja
pop
xchg
jle
xchg
ret
call
pop
lods
loope
loopne
mov
or
lods
rclb
leave
imul
pop
jmp
call
bound
push
cmp
bound
sarb
and
jmp
imul
jl
pop
and
repz
mov
lret
cld
int
mov
sub
jo
popf
mov
mov
cld
xchg
fstl
pushf
in
inc
je
mov
orb
mov
jo
cmp
lea
xor
pop
std
fistpl
add
mov
or
adc
cmp
jbe
xchg
jge
jmp
iret
std
jb
loopne
out
fsubs
pop
aad
pop
and
add
addr16
mov
mov
or
jp
mov
outsl
xor
xchg
push
jbe
dec
sub
shl
mov
loop
je
shlb
sbbb
leave
cmp
movsl
pop
filds
xlat
sbb
jle
divb
aad
addl
cmp
xor
jl
mov
pop
jge
pushf
les
divb
and
iret
push
mov
adc
cltd
push
xchg
add
sti
mov
daa
rcrl
lret
mov
push
mov
dec
mov
mov
sub
adc
mov
iret
mov
ds
bound
push
xor
inc
ret
ret
in
jecxz
jle
cmpb
lcall
sub
lahf
sub
stos
pop
mov
sbb
xor
sti
and
xchg
or
lret
or
out
loop
pop
dec
in
int
fildl
jg
jg
shrl
scas
mov
cmp
out
adc
hlt
clc
fwait
push
ljmp
in
jmp
stos
jns
xor
nop
push
aas
es
out
xchg
fisttps
xor
popa
pop
sub
popl
scas
int3
loope
loope
push
in
sbb
adc
cmp
mov
mov
fnsave
mov
pushl
js
dec
xchg
and
in
sub
ss
sbb
fcmovnu
jmp
in
sub
adc
push
imul
loope
jb
push
lret
lock
and
inc
mov
mov
stos
ret
inc
mov
jg
es
pop
clc
in
xchg
xchg
sbb
xchg
pop
imul
pushf
mov
pop
pop
jecxz
loope
cltd
lods
icebp
fiadds
out
adc
incb
push
repnz
and
xor
add
pop
in
movsl
decl
call
je
inc
fbstp
add
inc
jle
aaa
lret
test
ljmp
enter
cmpsl
sbb
out
sbb
loop
mov
pop
jo
jge
ffreep
lods
icebp
add
gs
gs
daa
sbb
aas
das
pop
mov
xor
xchg
lods
sbb
sti
or
xchg
jle
mov
xchg
push
jne
das
aad
mov
pushf
dec
pop
adc
jae
mov
movsb
movntps
cmp
dec
sub
enter
rclb
iret
jg
mov
pop
int
leave
add
or
mov
jns
xlat
lea
fwait
mov
cmpsb
inc
ret
fwait
inc
jae
inc
andb
cmc
fcoml
shl
pusha
lret
sub
mov
jmp
lods
ja
push
loope
ds
movsb
dec
jge
push
dec
loope
movsl
mov
lea
mov
sbb
mov
int3
popa
out
inc
popf
scas
sbb
test
mov
or
xor
cmp
popa
pop
insl
cwtl
arpl
repz
cmpsl
xorb
dec
popa
xchg
cmpsb
out
lods
rcll
data16
out
or
leave
fxch
inc
push
enter
xlat
sub
es
ds
add
paddsw
test
clc
or
je
or
ret
cmp
mov
mov
and
ds
or
iret
aam
pop
bound
add
xchg
test
mov
leave
mov
jo
aam
cmpsl
test
adc
push
scas
sub
movl
dec
jmp
loop
dec
aas
lds
pop
and
fwait
pop
adc
aas
push
pop
rcr
inc
or
cmpsb
cmp
fs
pop
scas
or
es
sub
out
arpl
push
scas
ja
xor
jbe
mov
imul
shl
jge
mov
sarl
in
cmc
mov
pusha
je
jns
jg
cwtl
push
popa
or
cmc
jp
pushf
outsb
lcall
pop
outsb
rclb
sarl
mov
lret
scas
cmp
push
or
or
inc
in
xchg
sbb
fsts
loopne
sahf
jg
cli
sbb
sarb
sbb
mov
pushl
rol
sbb
sbb
daa
pop
lods
and
out
pop
rcrl
push
mov
add
fs
xor
jb
fsubrl
rcr
jmp
inc
push
call
xchg
bnd
lods
adc
imul
in
int3
jmp
fidivs
sbb
mov
pop
fcomip
cmp
jl
sahf
xor
shld
mov
pop
sbb
in
jae
inc
jns
inc
int
mov
inc
mov
loop
clc
scas
jae
adc
dec
cli
ss
in
test
pop
imulb
push
sub
lods
xorl
mov
mov
scas
mov
aas
xchg
push
lea
inc
repnz
add
rcll
loop
xchg
imul
ss
add
movsl
cmc
push
pop
cmpsb
xor
pop
shrb
xchg
gs
pop
fists
gs
iret
fwait
jbe
fcmove
push
lcall
mov
cwtl
and
sbb
orb
pop
adc
out
mov
insl
mov
jno
fisubl
or
adc
inc
jo
mov
add
xor
das
dec
ret
mov
jae
aas
inc
push
sbb
dec
mov
ret
sahf
fs
fimull
and
arpl
jns
lret
cmp
xchg
xchg
push
jb
hlt
mov
cmp
xchg
xor
je
not
xchg
arpl
into
fisubs
mull
adc
fcomps
mov
insl
sbb
xor
cs
cmp
pop
int
iret
xorb
xchg
outsb
pop
ja
lret
les
mov
daa
cli
fyl2x
loopne
adc
fldt
mov
ret
mov
andl
in
jnp
roll
pusha
mov
jns
xchg
stc
cmc
inc
das
push
cld
je
push
test
jecxz
out
add
jae
mov
jl
je
ds
addl
stos
nop
loopne
rorb
andb
adc
xor
dec
xor
out
iret
ja
mov
pop
daa
mov
fsts
mov
lea
emms
add
xchg
jae
fcmovnbe
fistps
loopne
subb
leave
xor
mov
nop
dec
sub
inc
adc
push
and
cli
mov
sbb
pop
cmpl
push
icebp
mov
mov
addr16
mov
ret
add
dec
loopne
loopne
add
push
aaa
scas
cmpsl
js
jge
cltd
sahf
push
mov
test
cmc
sbb
mov
int3
cmp
mov
mov
mov
pop
lock
dec
iret
pop
xor
sub
stc
repnz
call
xchg
fs
stos
std
int3
mov
pop
cmp
mov
mov
in
scas
ss
jmp
xchg
pop
sbb
dec
std
cld
out
cltd
dec
ljmp
mov
mov
roll
std
pop
mov
sub
push
mov
rcr
push
xlat
xchg
mov
adcl
pop
jp,pn
std
ds
cmpsb
out
jbe
and
icebp
popa
cmp
push
in
push
jl
dec
push
jo
mov
pushf
lahf
jns
jp
mov
int3
outsb
jge
jp
or
and
jbe
outsl
ljmp
movsl
push
aad
or
scas
jns
xor
mov
ds
cs
ret
lret
jg
scas
cmp
cmc
xchg
out
pop
fcmove
push
pop
mov
scas
sub
mov
and
adc
nop
sub
xchg
mov
mov
rcrb
mov
cmp
mov
lea
xlat
outsb
cltd
xchg
mov
mov
pop
fbstp
into
out
cmp
inc
mov
shll
or
jo
outsl
ret
clc
add
push
dec
testl
sbb
add
xor
dec
cli
jp
xchg
out
adc
cs
mov
inc
stc
cli
loopne
cmpb
mov
add
mov
jbe
pushf
inc
iret
jl
fnstsw
mov
movsl
arpl
loopne
into
and
push
add
jmp
test
pop
call
push
mov
xor
repnz
pushf
or
inc
fucomi
fsts
andb
aas
out
outsl
cmp
je
mov
in
add
sub
xor
flds
cmp
mov
dec
stc
push
pop
mov
push
ja
in
mov
movsb
iret
xor
cwtl
leave
out
mov
sbb
gs
sar
inc
out
sahf
dec
movsb
clc
inc
inc
movsl
and
addb
lds
lods
mov
or
daa
pop
or
fcoms
mov
add
mov
xchg
into
mov
ljmp
sbb
sti
sub
or
fwait
or
bound
dec
add
in
fs
fldt
mov
xor
sub
stc
sahf
and
and
sub
push
aad
cmp
adc
test
clc
and
xchg
shll
xor
or
loopne
cmp
mov
out
push
test
outsl
popf
mov
ds
les
cmpsl
js
pop
popf
mov
test
xchg
mov
lods
lret
jae
jg
jmp
out
jb
daa
sub
inc
arpl
adc
jmp
sbb
inc
enter
dec
mov
je
fld
jp
cwtl
adc
adc
push
xor
push
cmp
lret
jae
xor
push
das
xor
cltd
out
iret
jmp
mov
aaa
xchg
add
fidivl
xor
xchg
mov
jnp
icebp
lods
push
xchg
dec
std
sub
ret
aad
xor
jge
add
jp
inc
mov
arpl
aam
add
add
sbb
notb
adc
push
repnz
mov
pop
loop
imul
adc
into
pop
xor
leave
xchg
ljmp
mov
jno
shlb
stc
dec
cmp
cli
pop
cmp
mov
ud2
dec
adc
jns
push
pop
out
pop
jp
sahf
xor
mov
inc
frstor
shrb
jmp
pusha
inc
or
in
rcrl
es
cmp
pushf
ss
jecxz
pop
and
sub
add
lcall
or
inc
cli
mov
mov
add
add
rorl
jbe
push
xor
lds
and
cld
jle
sbb
adc
fsts
ljmp
shlb
mov
xorb
fsubrs
push
insb
lret
and
movsb
and
xchg
lds
pusha
push
daa
iret
xor
pop
addr16
inc
adcb
and
pop
jo
cmpsl
in
loopne
and
xlat
sub
fisubrs
xchg
cli
sahf
push
fucomi
stc
inc
xchg
mov
inc
lret
cltd
cmpsb
cmp
ret
sbb
xchg
dec
stos
dec
mov
dec
jmp
cmp
dec
pop
or
cmp
fbld
pop
sbb
es
xor
mov
outsb
push
jae
mov
lods
cmp
pop
iret
ja
sbb
mov
subl
and
rcr
rcrb
int
xor
cld
cmp
lods
mov
lods
and
dec
xor
mov
add
fs
cld
lcall
or
fsts
push
pop
sub
loopne
mov
repnz
pop
pop
je
sub
repz
icebp
xchg
in
adc
inc
test
insl
iret
std
jae
push
stos
mov
mov
cmp
cmp
and
jb
jnp
inc
mov
pop
jecxz
popf
ljmp
lods
lcall
push
ss
je
dec
ret
xchg
fcmovbe
cli
std
daa
pop
stos
test
mov
fnstcw
test
out
sub
pop
or
out
pushf
push
mov
mov
jl
adc
stos
jl
mov
cmp
out
in
xor
mov
pop
xchg
inc
xor
std
cli
cli
push
ja
cmc
cmpsb
lahf
dec
xchg
mov
dec
jb
aad
cmp
loop
sub
add
mov
add
test
xor
jmp
mov
mov
mov
lds
stc
xchg
aad
jmp
ljmp
ja
mov
ja
mov
out
push
cmp
cs
fs
shrl
push
movsl
cmpsb
sub
hlt
outsb
into
cmp
leave
mov
scas
ret
sub
pop
roll
push
xchg
jmp
popa
testl
push
jo
cs
mov
mov
cmpsl
es
test
jne
cwtl
cmp
pop
scas
xlat
pslld
mov
adc
push
push
adc
rol
andb
adc
xor
cltd
sarb
push
cld
sub
loop
xchg
pushf
mov
pushl
shrl
push
or
mov
jge
push
scas
push
and
and
or
in
xchg
add
lahf
dec
dec
out
push
movsl
and
push
addl
test
push
push
xor
dec
mov
cwtl
mov
cmp
fisttpl
popa
adc
adc
jo
mov
fwait
xor
cmc
sbb
loopne
push
loopne
pop
fucomip
jecxz
std
or
jnp
imul
sbb
addr16
add
mov
add
imul
into
into
insl
jl
lods
loopne
movsb
mov
in
jge
jecxz
aad
cli
jbe
adc
cmp
jo
icebp
add
in
in
daa
add
xor
adc
dec
sub
fwait
sbb
ss
call
fwait
out
stc
mov
mov
mov
movsb
movl
or
inc
outsl
dec
rcrb
pop
bound
jnp
xor
fdivrs
das
aad
xchg
xchg
stos
mov
cmp
cmc
popa
insb
push
loopne
jns
pop
cmpsb
stos
test
jp
cmp
shrb
push
outsb
scas
movsb
mov
dec
inc
mov
push
dec
mov
push
xchg
pop
push
daa
ret
mov
xchg
mov
pop
lcall
push
pop
ljmp
jns
clc
mov
repz
shrl
or
mov
mov
jbe
push
hlt
popa
enter
imul
lret
out
insl
cmc
movsl
adc
dec
ja
repnz
sub
in
in
pop
icebp
jns
mov
fildll
pushf
int
lods
push
sti
stc
fstl
pop
imul
in
mov
iret
out
inc
cmovbe
sub
ficomps
cmpsl
inc
mov
xchg
and
ljmp
and
lea
lret
add
aaa
xchg
int
jb
cs
lea
mov
fidivl
mov
stos
test
dec
and
sub
and
or
cmp
notb
rcll
std
lahf
mov
sub
outsl
sbb
sub
aas
cwtl
movsb
movsb
and
and
jbe
xchg
pop
test
pop
mov
jno
jb
inc
icebp
repz
dec
sbb
add
xorps
xchg
jge
mov
test
addr16
fdiv
cmp
pop
lcall
cmpsl
inc
shlb
imul
iret
aaa
cmp
and
push
test
adc
loope
and
xor
mov
push
addr16
dec
lods
xchg
mov
pop
add
add
rolb
mov
dec
push
adc
and
jns
inc
pop
dec
xchg
rol
sbb
jmp
cld
jno
pop
leave
in
imul
std
xchg
out
in
xlat
loopne
stc
xor
push
mov
test
js
pop
lahf
push
jns
call
fs
xchg
sub
fwait
mov
in
std
pop
mov
dec
sbb
popa
or
mov
pop
dec
dec
fwait
lock
idivb
jl
jns
je
mov
test
dec
icebp
xchg
ljmp
mov
add
stos
mov
shr
inc
insb
nop
outsb
jnp
nop
pop
mov
inc
sub
mov
jnp
xorb
loopne
fiaddl
lock
pop
outsb
fstl
pop
xchg
jns
mov
fstps
mul
dec
sahf
pop
out
out
into
mov
jbe
jno
jle
fidivs
negl
cmc
enter
scas
ss
adc
pop
scas
pop
mov
xchg
xor
rcll
aas
nop
std
xchg
xchg
inc
push
xchg
mov
daa
and
push
pop
pop
push
mov
clc
mov
test
cmp
insl
xchg
inc
in
cmp
cltd
push
repz
xchg
ljmp
jle
jmp
fcoml
dec
nopl
icebp
sbb
in
aam
call
outsl
clc
xchg
out
fwait
imul
clc
loop
ds
dec
rcll
fmuls
mov
and
scas
mov
mov
inc
lock
cltd
ret
push
stc
ja
xor
gs
mov
imul
inc
dec
scas
mov
test
sub
cs
jl
mov
mov
pmaxsw
adc
jns
cltd
xor
dec
add
mov
mov
dec
jo
in
test
jecxz,pn
fcompl
ror
mov
outsl
xchg
add
adc
pop
arpl
inc
fdivrl
push
test
jg
in
or
fnstcw
push
push
dec
cmp
loope
sub
out
push
lea
sub
sub
jmp
push
out
movsl
xchg
sbb
loop
imul
mov
push
sub
push
ja
rcr
cmp
push
lahf
in
lock
movsb
push
es
pop
and
push
rolb
into
cmc
test
mov
divb
push
or
aas
mov
dec
cmp
xlat
xlat
repnz
fnstsw
pop
movsl
jnp
pop
jns
fwait
mov
inc
dec
pop
mov
pushf
stc
xchg
pusha
xor
aas
pop
inc
in
js
or
scas
pop
popf
popf
scas
pop
cmpsl
negl
mov
imul
outsl
inc
jns
out
mov
ljmp
xchg
mov
mov
mov
push
mov
lcall
jge
es
clc
test
xchg
movsl
aaa
fisubrs
and
test
or
pusha
add
xchg
or
sar
or
loope
mov
in
pop
test
test
popa
push
repnz
cli
call
push
mov
push
lods
ror
insl
mov
test
into
clc
out
mov
jg
push
xchg
xchg
lods
jge
xor
fiaddl
jo
jno
or
mov
or
ficoml
inc
enter
out
arpl
sub
enter
mov
test
xor
pusha
and
sub
ja
sti
mov
sbb
in
arpl
std
cmpsb
leave
add
mov
daa
popf
ret
xchg
das
stos
push
scas
adc
sti
inc
mov
push
jne,pt
jae
test
dec
lods
enter
and
leave
mov
inc
enter
inc
xor
cmp
out
fisttpl
lds
out
adc
mov
jns
loopne
notl
int
or
adc
scas
pop
mov
push
fcompl
lds
in
sub
lahf
movsl
push
mov
xchg
dec
rorb
dec
je
pop
inc
dec
lods
sarl
adc
lock
inc
nop
xlat
add
sbbl
cltd
xchg
pop
or
lret
sub
nop
or
imul
push
js
fistpl
cmp
orl
ficoms
inc
lods
in
test
jecxz
push
lcall
adc
xor
pop
stos
add
test
popf
and
and
ficompl
shlb
rcrb
mov
inc
out
sub
push
lcall
push
fdivs
cltd
sub
dec
cmp
mov
mov
popa
lods
or
and
push
gs
dec
mov
pop
pop
mov
outsb
addr16
dec
scas
loope
out
xlat
lds
mov
xchg
mov
pop
xchg
pop
pop
cs
sbb
jge
push
cli
sbb
fdivr
movsl
ja
mov
into
push
cmp
fsubl
cmpsb
fsubrl
pop
in
js
jle
sbb
dec
lahf
test
test
sub
add
jnp
xor
mov
pop
nop
loop
into
sbb
pop
and
mov
add
push
out
mov
pushf
iret
inc
sub
adc
outsb
xor
or
cmpl
push
not
arpl
xor
or
sub
test
add
das
mov
sbb
int3
and
jb
loope
ds
fisubs
sub
mov
fadds
xorb
movsb
daa
aaa
pop
fnsave
inc
push
lock
mov
scas
xchg
mov
pop
push
insb
jmp
enter
mov
mov
cltd
mov
jmp
int3
insw
dec
xor
call
sahf
sub
sahf
out
dec
jne
jo
push
scas
and
loope
cmpsl
scas
mov
push
addl
inc
aaa
imul
inc
stc
push
add
cmp
cmp
stos
mov
mov
sar
icebp
jbe
pop
jnp
inc
sbb
sub
in
mov
push
push
shrb
and
adc
outsb
xchg
ja
sub
xchg
jbe
xchg
sbb
dec
mov
adc
pop
add
sahf
inc
pop
cltd
aam
pop
xchg
mov
fsubrp
sub
xlat
ss
mov
mov
pop
sbb
adc
pop
or
jp
aam
call
xchg
data16
rcll
shll
jmp
out
dec
test
dec
test
dec
test
stos
int
ss
cltd
mov
jae
hlt
mov
loopne
pop
and
iret
outsb
dec
push
jmp
mov
push
loope
imul
decb
adc
push
decb
scas
lods
mov
jl
aad
add
xor
les
jl
test
mov
jb
inc
fstp
inc
sbb
push
arpl
inc
stc
mov
subl
cmpsb
mov
dec
push
aaa
les
push
loope
push
lock
jae
push
bound
jbe
xchg
dec
outsl
cwtl
xchg
lods
sub
in
fstl
sti
xchg
pushf
outsl
jne
or
push
jecxz
or
mov
shl
dec
cmpl
aad
in
sbb
shlb
jecxz
repz
fmul
addr16
fwait
in
xor
push
aam
inc
push
aas
insl
cmp
scas
mov
aad
into
flds
sar
pop
mov
arpl
notb
das
pop
daa
push
popa
jp
fs
loope
mov
ds
mov
cmp
ja
adc
and
in
push
jg
das
dec
dec
hlt
xchg
lods
sbb
xor
and
mov
std
mov
cltd
inc
mov
das
mov
mov
mov
mov
mov
add
xchg
out
sbb
lcall
mov
jge
cmp
xchg
cmp
nop
inc
insl
jmp
fsubl
cmpsl
shl
adc
add
sbb
outsb
jno
mov
ja
popa
cmp
sbb
sbb
movsl
xorl
popa
xchg
cmp
js
loope
les
sbb
mov
repnz
dec
movsb
mov
xor
cltd
cmpsb
sub
adc
insb
loopne
dec
out
iret
int
rcrl
pop
out
ljmp
xchg
xlat
fimuls
xchg
mov
sub
aad
lock
stos
sbb
mov
add
scas
ds
mov
into
ret
push
call
into
outsl
dec
test
call
jnp
xlat
push
push
jecxz
sti
popf
xor
sbb
fdivl
clc
or
jle
or
cs
aam
xlat
push
sbb
mov
cmp
das
fcomps
insl
adc
addr16
mov
pushf
pop
jecxz
mov
sti
int3
lock
imul
out
vhsubps
sub
stc
sbb
in
gs
mov
out
fldl
or
cmc
cld
mov
dec
jns
push
cli
ja
gs
jg
idivl
jmp
sub
scas
iret
lret
cltd
das
jmp
adc
sti
xchg
or
jns
mov
faddl
mov
int
sbb
lea
push
xchg
fnstsw
out
push
pop
mov
mov
mov
insb
popf
pop
sbb
cmp
push
movsl
loop
or
xchg
fistps
mov
or
dec
jge
jge
sbb
sarl
jecxz
inc
jg
arpl
jle
or
and
jbe
mov
mov
inc
stos
pop
js
xor
cli
cmp
aas
sbb
iret
mov
add
das
adc
and
and
sbb
das
mov
xchg
mov
repnz
rcrb
adc
jno
movsb
mov
leave
imul
jae
cmp
jne
sub
jl
push
and
ficompl
shlb
mov
aas
dec
dec
in
mov
adc
xor
test
cmp
int
neg
ss
rolb
inc
mov
popa
ds
aas
sahf
sub
xchg
int3
sahf
arpl
adc
xchg
push
jns
shlb
cmp
pushf
sarl
mov
cmp
mov
pushf
add
dec
dec
adc
aam
mov
pop
movb
ret
xlat
mov
or
ret
lret
ret
fdiv
lds
dec
out
push
je
xor
jo
mov
sahf
ret
inc
mov
pop
cmpsb
add
jle
sti
shll
pop
xor
in
aad
test
jl
jo
xor
mov
inc
ja
mov
in
dec
push
push
sbb
inc
imul
loope
and
add
jbe
int
mov
xchg
xlat
and
push
xchg
adc
incl
mov
jns
adc
add
js
data16
mov
sub
and
daa
std
push
sub
xchg
jmp
test
out
fcom
xchg
fdivs
xor
adc
lock
add
push
iret
adc
mov
sub
sub
sbb
lock
outsb
jmp
cs
push
daa
ret
push
ficoms
lret
pop
jo
iret
and
cmp
filds
int
and
jge
hlt
scas
inc
sahf
mov
daa
inc
mov
leave
clc
inc
daa
xchg
push
enter
test
mov
ret
push
push
pushf
mov
or
cmp
push
push
xchg
mov
pop
test
mov
xchg
adc
xor
bound
jge
or
adc
lods
jmp
xor
bound
int
add
lds
adc
inc
cmpsb
ss
cld
dec
and
add
add
or
pop
dec
pop
jbe
and
outsl
push
insl
outsl
push
subb
inc
stos
ss
mov
inc
jecxz
orl
hlt
popf
sbb
jmp
lds
js
cmpsl
into
lahf
pop
ds
pop
add
jmp
cld
test
pop
mov
pushf
imul
cli
xchg
inc
lds
sub
sub
push
cmpsl
add
pop
mov
sub
rep
xor
test
test
xchg
jge
sahf
pop
xchg
sbbl
push
push
xor
aaa
mov
sbb
sti
adc
xchg
sub
xchg
pop
mov
ljmp
cmp
adc
xor
mov
push
cmp
sbb
xor
and
adc
int
jns
aam
pop
fidivrs
and
cli
mov
inc
ljmp
cmc
xor
jno
ffreep
shl
out
dec
popaw
mov
repz
in
push
insl
cmp
stos
js
std
popf
dec
movsl
pop
enter
std
fwait
mov
jbe
jge
and
mov
icebp
adc
and
sub
sbb
pusha
dec
imul
addl
cld
push
js
outsl
jnp
in
lret
stc
jl
nop
xor
sbb
int
cmp
roll
xor
sbb
pop
pop
push
mov
sbb
adc
inc
dec
mov
inc
lods
lea
cmp
push
mulb
sahf
in
xor
pop
pop
pusha
add
loop
mov
pushw
cmpsl
divl
imul
shlb
cltd
adc
shrb
fnstsw
loope
sub
push
lret
scas
mov
cmp
push
mov
jge
fs
pop
push
jbe
xor
xchg
nop
cmp
sub
faddp
sti
cmp
mov
inc
mov
cs
int
mov
mov
jg
pop
roll
test
insl
pop
sahf
repz
cmp
jb
rolb
pop
push
mov
inc
push
inc
loop
or
test
repz
mov
cltd
aad
mov
push
inc
adcb
dec
xchg
jecxz
and
in
xchg
jno
dec
test
mov
enter
ljmp
lcall
pop
mov
ror
je
inc
arpl
dec
push
mov
mov
lret
xchg
push
loopne
sub
aas
or
out
mov
stos
outsb
add
pop
iret
divb
sub
mov
fidivrs
cld
inc
fisubrl
pop
or
scas
lret
xchg
xchg
cmc
inc
lea
add
mov
repz
std
sbb
xor
cmpsb
cmpsb
lock
sub
push
cld
sahf
stos
out
lcall
cmp
push
lret
xchg
in
inc
jmp
xchg
test
xchg
iret
lret
stos
jl
mov
in
or
xchg
jbe
mov
mov
inc
xchg
test
dec
and
sbb
out
mov
sahf
dec
lret
add
test
fidivrs
mov
movsl
in
mulb
popa
sbb
pcmpeqw
shrl
xchg
aam
inc
movsl
lret
fimuls
fistps
adcl
ret
cli
stos
loop
clc
sti
out
mov
xchg
ficomps
xchg
call
in
movsb
push
mov
imul
jp
pop
fdivs
fcmovnbe
xchg
adc
jo
dec
jae
mov
jae
das
scas
xchg
movsl
repz
test
dec
sbb
cli
mov
dec
inc
or
aaa
sbb
add
mov
xchg
sahf
jg
mov
push
psllq
ja
cltd
sub
jo
rcrl
jnp
mov
lods
adc
sarl
cld
popa
cs
jns,pn
push
pop
push
dec
pop
fisubrl
lahf
mov
gs
ljmp
xchg
dec
mov
adc
or
cmp
insb
jo
je
int
and
xlat
aaa
dec
scas
sbb
jb
xor
add
or
insl
int
sbb
lods
leave
mov
subb
inc
outsl
xchg
mov
xor
das
je
jbe
test
in
pop
mov
and
fprem
mov
mov
inc
xor
inc
jae
cli
mov
fisttpl
test
fiadds
push
ret
insl
cli
mov
insb
ror
popa
and
bound
call
data16
fimull
gs
pop
adc
ficoml
rorb
cmp
add
lret
loop
and
das
pop
fstpl
xchg
mov
xor
push
arpl
mov
repz
cld
sub
ret
mov
pop
push
mov
adc
cmp
shrb
lods
jne
or
jnp
rcrb
jnp
bound
out
leave
mov
into
mov
out
adc
or
movsb
stc
jp
fucom
clc
dec
and
or
stc
jne
stc
sub
sbb
je
push
sbb
rclb
mov
icebp
mov
mov
cmp
movsb
jl
adc
mov
push
fbld
push
jbe
js
and
and
cli
in
sub
inc
cmpsb
fisttpl
in
sub
sbb
scas
fs
in
leave
mov
repnz
xchg
pop
testl
cli
insb
fmul
leave
jmp
cmp
lret
ds
das
ficompl
mov
loope
cmp
in
xor
sub
jno
mov
sub
mov
xchg
cwtl
jg
lods
jge
dec
cmpl
inc
xchg
mov
pop
push
leave
sti
jp
add
cld
fsubrl
ret
or
fbstp
jp
ret
pusha
cwtl
js
cltd
imul
push
ja
xchg
xchg
sbb
add
sahf
outsb
mov
or
mov
pop
insb
popa
lock
pop
or
jne
fdivrs
leave
lea
jae
dec
sbb
xchg
sub
popa
push
xor
mull
xlat
dec
sti
out
aam
fsubrl
dec
jne
dec
pushf
xchg
add
ja
mov
ret
vpminsw
fstl
popa
aas
xchg
and
fldenv
pop
cli
mov
fbstp
shr
popf
aaa
xor
out
lods
push
adc
cmpsb
les
jg
adc
sbbl
pop
arpl
arpl
xlat
sbb
js
inc
pop
jnp
shr
xor
je
je
imul
jg
add
inc
mov
es
scas
or
fwait
lea
jp
insl
orb
inc
js
fs
push
xor
js
fnstenv
test
fisubs
mov
and
into
inc
arpl
push
add
and
or
cmp
dec
mov
sbb
jne
into
ds
dec
adc
cmp
pop
ret
notb
les
jg
jns
mov
mov
sub
scas
jmp
dec
mov
jno
push
jno
xor
inc
loop
cmp
mov
sar
push
jbe
lea
pop
daa
jecxz
pusha
and
mov
mov
std
decl
cmpsl
push
lahf
out
and
fsubr
outsb
mov
fstl
ss
bound
bound
repz
shrb
sbb
pop
and
rcrl
sbb
mov
xchg
lods
pop
sar
loop
loopne,pt
jno
fbld
in
aaa
adc
mov
pop
inc
inc
je
stos
sbb
bound
inc
mov
aad
inc
xchg
jmp
lock
and
sbb
addr16
push
jnp
and
faddl
imul
std
jae
push
jmp
je
ds
jecxz
andl
lcall
xlat
in
push
dec
repnz
jo
pop
fs
lods
shl
aad
lock
ret
aaa
pop
mov
ljmp
dec
mov
lret
cmc
imul
jns
lods
lods
fadds
push
or
xor
in
mov
nop
dec
jp
mov
xor
popf
outsb
mov
cmpsl
cwtl
push
inc
fsin
enter
sub
negl
arpl
jbe
and
faddl
int3
mov
or
aad
or
cmp
cs
sbb
lods
int3
aam
iret
pmulhuw
ret
ret
add
insl
push
fiadds
jmp
push
sub
push
nop
cmp
ret
fmull
sub
cmp
fs
dec
xchg
pop
sbbl
push
sahf
mov
inc
arpl
push
je
inc
sub
xchg
mov
and
outsl
lods
lock
cmp
bound
fiadds
mov
into
push
out
nop
in
or
leave
pop
or
int
roll
xchg
arpl
inc
mov
mov
or
scas
mov
mov
stc
ja
sti
pop
jg
idivl
lock
xor
hlt
repnz
and
bound
sbb
insb
std
jg
pop
loop
pop
cli
das
dec
xchg
idivl
arpl
bound
jge
xchg
cld
test
mov
aad
push
pushf
inc
cwtl
push
daa
push
mov
popf
in
jl
xorb
test
xlat
cmpsb
int3
pop
xchg
inc
mov
ds
test
push
cmp
pop
and
xchg
ja
mov
cmp
pop
push
pop
mov
cwtl
or
outsb
mov
sbb
dec
ss
cmc
jae
jnp
sbb
add
mov
in
add
movsl
cmp
icebp
stc
ret
lods
inc
pandn
inc
mov
push
sub
adc
adc
fstpt
mov
ljmp
pop
jmp
xchg
stos
int3
xor
xor
mov
loope
cltd
mov
test
jae
dec
out
xor
in
clc
mov
add
popf
jle
add
push
xor
push
pop
insl
sub
movsb
sbb
dec
cmp
sub
cltd
sbb
and
adc
push
dec
cli
cs
cmp
cltd
clc
cmp
icebp
mov
std
and
les
push
push
rcrb
ret
inc
jno
cmp
mov
xchg
mov
pop
push
add
sub
push
imul
cltd
repz
shlb
fxch
fnsave
sahf
fistpll
xchg
adc
mov
sbb
add
rclb
dec
jo
push
imul
xor
imul
fwait
or
mov
xchg
das
jecxz
mov
mov
mov
in
add
jecxz
sbb
jnp
adc
jbe
dec
mov
lds
adc
cwtl
and
hlt
adc
leave
decl
test
inc
inc
push
leave
jp
cmp
fidivl
cli
lcall
or
enter
scas
sub
sub
add
xor
cmp
iret
or
mov
and
daa
and
mov
movsb
xchg
jecxz
adc
cmpsb
pop
out
stc
sahf
xchg
lahf
stc
inc
dec
xchg
push
sbb
adc
daa
sbb
xchg
xchg
mov
pop
lods
or
mov
sbb
jmp
in
xor
mov
ss
add
movb
mov
inc
andb
cmpb
cmc
daa
xchg
and
outsb
cmp
inc
mov
or
lods
mov
int3
cmc
mov
add
push
push
mov
je
push
loope
and
xchg
or
scas
push
and
xchg
xchg
movb
sarl
mov
mov
aam
push
cld
jecxz
pop
adc
dec
jno
inc
push
pop
or
and
ret
shll
adc
into
mov
mov
dec
push
fbld
pop
mov
ret
ret
push
test
popa
out
push
loop
push
push
aam
js
cmp
and
jnp
test
subb
push
scas
push
scas
cld
adc
add
addr16
imul
xchg
inc
push
push
es
lret
stos
sbb
xor
ljmp
mov
xchg
mov
xor
xchg
and
pusha
xchg
jno
cmp
ret
cmp
xlat
sbbl
lock
ljmp
mov
cwtl
mov
fstps
cmp
lret
xchg
repnz
cmp
cmp
not
dec
fimull
repz
out
or
stos
xchg
pop
ret
iret
in
mov
sub
mov
pop
jp
out
mov
jmp
arpl
or
das
divb
mov
dec
sub
loopne
inc
pop
push
sbb
push
sub
mov
pop
inc
cmp
outsb
outsl
pop
fildll
ret
je
or
dec
xchg
lods
out
sbb
xchg
lds
lods
insb
cmpsb
outsl
lock
ficoml
cmp
clc
inc
jmp
ljmp
stos
jae
out
pop
stos
out
dec
movl
out
enter
leave
push
outsl
outsb
stos
jg
in
testl
push
xor
jno
xchg
push
push
arpl
pop
int
fstl
dec
icebp
cmc
add
fmull
mov
incb
mov
roll
and
sub
das
push
push
popf
cld
jb
stos
dec
xchg
loop
dec
ljmp
mov
testb
jecxz
cmp
or
idiv
or
mov
xchg
mov
or
mov
push
adc
pop
or
dec
shrl
sbb
les
outsl
das
loopne
jns
or
or
std
push
dec
lock
jne
sbb
movsb
pop
fnsave
xor
aas
js
es
mov
insl
sbbb
xor
ret
js
rcl
js
out
ret
mov
popa
pop
out
movsl
divl
push
xchg
lea
or
jns
test
xchg
test
push
shl
cli
mov
mov
mov
sbb
mov
sarl
mov
add
inc
jno
test
sti
lcall
xor
xchg
inc
push
jg
adc
mov
fistl
mov
rolb
dec
adc
mov
dec
out
lea
and
js
xlat
mov
mov
jnp
incb
sbb
adcl
arpl
pushf
in
cmp
mov
jl
or
add
push
sub
xchg
movsl
cmp
xchg
pop
pop
fstps
jns
into
jle
shrl
dec
and
or
into
xchg
xor
wbinvd
mov
cmpb
sbb
mov
stos
mov
xor
mov
or
mov
xchg
xchg
mov
shlb
and
iret
inc
negb
pop
adc
das
pushf
test
idivb
pop
push
mov
or
in
jge
jne
xchg
aaa
in
pop
xor
repnz
arpl
js
mov
xlat
pop
pushf
push
pop
push
push
mov
fbstp
jbe
addr16
mov
ja
cld
outsb
pop
and
jmp
and
adc
mov
or
rclb
in
jl
pop
or
fisubrs
fdivrp
aas
aam
fnstenv
imul
fxch
push
dec
pop
mov
xchg
shl
leave
mov
sub
cmpsb
das
push
rep
jle
dec
andb
out
fxch
dec
xor
add
fnstenv
fbld
pop
les
addr16
int
inc
movsl
int
push
fnsave
mov
lods
outsb
push
popf
and
popa
stc
aad
loop
cltd
sub
sbb
cld
pop
enter
cvtps2pi
or
rdmsr
adc
test
or
minps
mov
insb
mov
adc
pop
jb
cmp
xor
aad
test
pop
pusha
jl
imul
dec
jle
cmp
or
sbb
pop
pop
das
repz
xchg
insl
pop
fldcw
dec
rcrl
push
lds
xchg
lcall
xchg
sub
jmp
scas
scas
pop
pop
lahf
inc
call
add
cmpl
es
loop
inc
out
adc
and
fs
jb
loope
cmp
outsl
stos
iret
inc
push
imul
inc
add
lret
mov
lret
pushf
mov
sub
ror
xchg
out
push
inc
call
cmpsl
adc
out
cmp
mov
mov
sub
mov
nop
fsubrs
imul
jge,pt
das
lds
out
sbb
fwait
mov
sub
stc
pop
gs
adc
adc
arpl
cmpsb
leave
sbbl
jnp
stc
or
nop
cli
jae
js
mov
sub
mov
adc
push
pop
outsb
push
mov
fnstsw
jno
dec
loop
sub
adc
stos
je
fidivrl
imull
movsl
mov
lahf
test
popa
loope
mov
stc
lcall
out
xor
lret
and
adc
mov
bound
dec
sbb
out
xlat
sub
das
into
mov
stos
mov
insl
stos
leave
shll
or
enter
add
ss
outsl
insb
stos
out
cmc
loopne
ret
ror
mov
andl
xor
popa
sub
iret
data16
movsb
cmp
cmc
jmp
fiaddl
and
adc
mov
inc
shl
jecxz
pop
test
dec
sub
js
sub
push
xor
or
push
and
xchg
sti
mov
repnz
push
cmp
jp
add
roll
pop
dec
ret
lret
mov
xchg
dec
imul
filds
and
movsb
xchg
inc
fisttps
clc
dec
mov
mov
sbb
std
fsubr
xchg
and
shr
into
mov
ss
add
push
mov
cvtps2pi
mov
out
test
cmp
pushl
bswap
loope
xchg
push
cmpsb
jle
stos
mov
out
inc
add
lods
fstpt
add
loope
sbb
mov
cmpsb
mov
inc
adc
mov
fwait
movsb
sub
xchg
mov
and
fisubrs
jp
movsb
cmpsb
adc
loope
lods
addl
pop
pop
repnz
dec
mov
push
in
lods
sbb
add
lea
jmp
out
mov
std
xchg
jo
lahf
jle
rep
vmovlpd
push
lods
sbb
mov
aaa
add
push
popf
and
add
fdivrl
addr16
cmp
cmp
mov
push
push
pop
test
xor
stos
rclb
lret
adc
adc
xchg
xchg
fbld
loopne
mov
lds
popf
out
mov
mov
sti
push
dec
mov
inc
or
fsubrl
inc
cmpsb
jecxz
pop
iret
pushf
xlat
sub
popf
lahf
hlt
xchg
pop
mov
out
cmpsb
in
jb
xor
pop
xchg
push
test
and
pop
inc
andl
repz
subl
pusha
jle
xor
xor
bound
pop
mov
mov
out
jbe
pop
dec
pop
lods
shlb
in
cli
and
and
push
comiss
int3
stos
sub
leave
adc
push
ss
bound
out
bound
or
test
test
xchg
fs
imul
mov
push
push
jns
and
jl
repz
hlt
cmp
fidivl
pop
cs
aaa
xchg
testl
insl
ret
push
cli
ljmp
adc
add
push
or
pop
jno
cld
into
addr16
pushl
pop
iret
je
clc
and
scas
mov
frstor
xchg
addr16
nop
clc
rorl
xor
cmpsb
or
negl
data16
lret
pushf
push
popf
or
mov
push
adc
es
movsb
push
dec
add
cltd
xor
dec
jmp
daa
aas
jmp
les
pop
lds
cmc
repnz
decb
or
sahf
pop
fistps
and
xor
in
cmp
xlat
test
add
mov
sbbl
push
std
data16
test
cmpsb
xchg
mov
or
pushf
fildl
data16
adc
push
ljmp
hlt
xlat
dec
lret
jb
jnp
or
cmp
jne
jmp
mov
clc
fcmovnbe
and
and
gs
imul
test
or
pop
sub
push
mov
add
cmpsb
rcll
sub
daa
adc
jns
sub
jbe
mov
jecxz
ret
movsb
adc
mov
mov
mov
lds
ret
in
jge
test
sbb
mov
clc
les
dec
mov
cld
icebp
loope
ret
das
xchg
loope
mov
add
fdivr
dec
cltd
cmp
idivb
mov
adc
add
repnz
in
mov
aam
loope
pop
pop
out
repz
out
pop
add
clc
mov
shlb
cs
add
inc
lret
repz
jae
mov
xor
movsb
add
iret
out
int3
push
icebp
lret
hlt
mov
sbb
cmp
sub
mov
mov
jecxz
iret
xchg
jecxz
repnz
cmp
mov
add
mov
mov
push
mov
aad
roll
add
xor
sbb
jnp
daa
bound
mov
mov
aad
xchg
popf
data16
pop
ret
stos
rcrb
jne
mov
and
and
jmp
test
mov
insl
sub
lods
jmp
pushl
dec
cs
repz
iret
stc
mov
popa
imul
mov
jp
lock
jecxz
jb
pop
pop
lret
sti
test
popa
mov
inc
cli
clc
xchg
sbb
jmp
bound
xchg
test
std
push
std
add
fadd
jl
xchg
sbb
loope
sub
pop
insl
ficompl
mov
inc
adc
pop
leave
out
movsb
xchg
cmc
hlt
sbb
clc
cmp
dec
stos
pushf
idiv
mov
xlat
in
repnz
or
popa
imul
or
inc
mov
cmc
imul
fs
in
inc
int3
mov
cmp
adc
out
lcall
push
pop
and
mov
fimull
mov
into
int3
fidivl
mov
cmpsb
add
cmp
pop
mov
pop
scas
incl
ja
mov
mov
bound
xchg
ljmp
mov
xor
cmp
data16
fdiv
popf
and
fs
addb
xchg
add
mov
adc
mov
rclb
outsl
xor
ffreep
lods
in
jns
ja,pt
xor
add
idivl
xor
push
in
add
sub
mov
fsubl
mov
je
jmp
jnp
aas
dec
pushf
aam
fidivs
nop
push
push
hlt
inc
pop
loopne
cld
pop
jle
dec
fidivl
lcall
mov
fmuls
mov
mov
mul
push
cmp
rcrb
mov
pusha
cld
inc
pop
inc
or
dec
pop
insl
mov
mov
dec
push
mov
and
inc
xchg
lcall
and
add
gs
inc
fwait
aad
inc
add
in
icebp
sbb
cltd
pop
or
sbb
daa
subl
fisubrl
or
sub
inc
inc
xchg
sahf
inc
pop
sti
cmp
adc
sti
lahf
jg
or
mov
loope
inc
cwtl
mov
sbb
mov
js
add
xchg
mov
push
dec
lods
push
add
mov
in
inc
cli
shlb
mov
test
pop
das
aas
cmp
push
inc
arpl
dec
jne
ret
xlat
push
int3
sar
jecxz
push
stc
imul
mov
jno
out
das
sub
sbb
daa
sub
insl
jmp
lret
sub
cmp
aad
xchg
popa
xchg
inc
add
push
repnz
ficompl
dec
jo
pop
pop
adc
jae
dec
jo
pusha
pushf
jae
sub
add
fs
pop
and
sub
or
or
es
inc
std
leave
insl
inc
mov
dec
popf
lock
iret
lret
leave
add
popa
mov
adc
popf
in
adcb
pushf
cmp
mov
pinsrw
add
inc
jmp
clc
mov
xchg
movsb
and
mov
lahf
mov
xor
pop
outsb
sub
mov
and
mov
xor
xor
mov
decb
sub
mov
sbb
cmpsb
scas
fstl
mov
popa
jg
mov
mulb
mov
inc
jns
ds
jbe
pop
and
add
decb
mov
aad
clc
adc
cmp
into
jae
int
push
pop
and
ss
and
pop
iret
leave
imul
adc
movhps
cmpsl
add
xchg
fimuls
pop
out
jl
daa
loope
cmp
aam
pushf
js
and
cmp
mov
sti
aas
jl
bound
mov
mov
xorb
filds
pop
pusha
test
cli
jecxz
jecxz
clc
std
lods
ss
adc
rclb
ficompl
inc
and
inc
addr16
mov
rorb
jbe
jbe
cwtl
mov
and
inc
jge
dec
pop
out
iret
add
jb
mov
fwait
lods
lcall
fisttpll
inc
xlat
mov
pushf
leave
xor
out
lcall
pop
clc
inc
sti
test
cld
inc
pop
sub
call
cmp
dec
mov
push
into
in
or
and
jno
or
push
out
dec
je
mov
push
jmp
cmp
sqrtps
cli
mov
lea
inc
aas
test
push
mov
dec
ja
xor
int3
or
lcall
mov
cmpsl
imul
sbb
fiaddl
dec
jne
addr16
inc
push
xchg
hlt
sarl
js
lods
test
fs
push
dec
in
jmp
cmp
int3
mov
sbb
mov
in
popa
xor
push
mov
outsb
mov
cmp
data16
fs
in
xchg
or
mov
dec
addr16
in
cli
mov
cwtl
sbb
jge
mov
sbb
pop
aad
fiaddl
xchg
cmp
ficompl
xor
popa
mov
push
fimull
insb
lds
std
push
in
sbb
dec
int
mov
mov
fmuls
dec
jl
cltd
call
or
or
jmp
into
scas
fildll
vpor
pop
int
or
push
cmc
mov
scas
hlt
dec
into
cs
mov
dec
dec
sub
push
ljmp
pop
adc
add
push
ds
gs
incl
mov
sub
push
mov
push
cmp
add
adc
cli
mull
repz
arpl
subb
into
scas
or
in
mov
cltd
xlat
cmpsb
mov
fs
and
mov
cmpsb
sub
fsubrp
and
aaa
sbb
loope
inc
push
mov
and
outsl
ja
mov
in
pop
xchg
inc
leave
xchg
sub
ja
lods
xor
mov
mov
cmp
or
cwtl
out
and
jmp
andl
sarl
push
push
and
cmp
push
mov
jecxz
and
cld
mov
jne
mov
cmpl
out
popf
gs
aam
adc
les
mov
dec
imul
or
dec
movsl
js
sbb
in
add
jge
out
xor
jecxz
shll
loop
mov
jle
xor
cmp
sti
sub
sub
inc
and
repnz
lock
ja
ret
lods
leave
ja
jp
xchg
call
gs
notl
mov
mov
add
mov
bound
cmp
sbb
mov
dec
in
mov
cmc
xor
movsb
imul
cld
fsubl
xchg
cmc
dec
nop
enter
dec
fstps
add
jae
mov
fildll
xchg
cld
movsb
rcll
enter
cli
mov
push
jbe
mov
out
pop
scas
mov
adc
sbbl
enter
cmp
xchg
xchg
xchg
or
cmp
inc
in
leave
aas
fnsave
add
and
add
lcall
push
sbb
lods
rcl
mov
mov
lock
notl
push
outsl
mov
mov
mov
ljmp
rolb
dec
xchg
pop
pop
sti
adc
mov
inc
clc
aaa
imul
fnsave
sti
rorb
lods
insl
push
dec
cwtl
mov
cmp
rcl
cmc
das
out
outsl
sub
or
sub
out
cld
popf
enter
js
shufps
pop
xchg
daa
rcll
pusha
fistpl
lea
js
cmp
add
stos
or
fldl
out
push
js
jp
mov
or
lcall
xchg
outsl
jle
sbb
lcall
sub
leave
movsl
fldcw
in
mov
call
roll
inc
lock
push
cmp
or
fldl
out
jl
jl
insb
sub
call
sub
dec
jne
pop
jl
xchg
pop
out
add
inc
sti
lods
daa
xchg
std
insb
shlb
jg
inc
js
testb
xchg
gs
pop
fmulp
pop
pop
aad
cltd
clc
aas
lahf
and
mov
leave
int3
cmp
mov
or
out
hlt
in
mov
hlt
inc
jg
bswap
sbb
hlt
mov
pop
mov
jae
cmp
jae
xor
inc
cltd
out
jne
cwtl
test
push
cmp
sbb
xchg
frstor
out
in
int
call
ja
add
pop
push
fs
pop
subb
mov
mov
adc
adc
add
add
xchg
mov
mov
dec
clc
mov
sarl
in
dec
insb
mull
data16
popf
or
mov
insb
std
mov
insb
jns
jg
enter
jb
ds
das
adc
dec
and
stc
mov
inc
xor
jmp
gs
sahf
iret
pop
int
and
mov
out
adc
and
lret
mov
into
dec
mov
test
or
iret
movsb
mov
outsl
sub
adc
jg
bound
mov
or
fildll
mov
shlb
or
icebp
adc
dec
out
cmp
xchg
lods
in
call
in
sub
bound
sub
cs
mov
mov
jmp
dec
cmpsb
inc
and
or
in
sti
push
std
mov
xor
ss
adc
int
xchg
aaa
rcrb
std
xor
lcall
sbb
sub
adcl
and
imul
call
adcb
and
mov
xchg
pop
movsl
in
xchg
mov
cld
int
cmp
xchg
dec
mov
push
mov
fdivr
push
ss
push
add
push
sbb
mov
dec
jae
jne
xchg
add
icebp
outsb
xorl
or
xor
cmc
movsl
xor
in
xchg
das
pop
int
call
mov
cmpsl
andb
aad
and
cmp
test
into
ds
inc
mov
jnp
rcl
insb
leave
mov
into
sub
and
daa
pop
pusha
sti
inc
ficomps
mov
mov
imulb
fdivr
ficoml
mov
in
out
or
sub
cmp
and
mov
jle
mov
xlat
jmp
cmp
mov
inc
jl
mov
inc
mov
xchg
inc
jae
iret
out
aam
lds
cmpsb
sub
sbb
stos
sti
push
lret
cmp
jge
mov
aas
sbb
fdivrp
push
push
mov
lcall
add
sbbl
jmp
xlat
fwait
stc
xlat
shll
push
push
addr16
into
orb
sub
lahf
jmp
jbe
mov
lahf
ss
and
leave
decb
xor
fwait
das
jns
ret
lret
mov
mov
inc
imul
adc
out
xor
jl
ja
loope
fildll
out
lds
sbbb
mov
lock
dec
xchg
stos
adc
mov
mov
sub
add
int
cmp
inc
mov
push
loope
xchg
stos
and
fistps
leave
mov
pop
shlb
jp
push
push
in
std
insl
aaa
jo
jns
or
pop
mov
cld
es
mov
and
and
in
pusha
jae
mov
cmp
dec
in
add
loope
add
aad
out
sub
xchg
jno
dec
fs
dec
test
pop
leave
lret
stc
add
or
or
or
lea
pop
cwtl
inc
sbb
ljmp
std
inc
movsb
scas
jecxz
push
pop
arpl
dec
mov
xor
sub
sbb
dec
inc
mov
mov
daa
add
stos
je
cmp
sbb
cmp
mov
lods
mov
movsb
mov
or
gs
push
or
or
enter
int3
hlt
stos
inc
dec
and
cmp
leave
nop
int
jecxz
mov
insb
sarl
ds
mov
xor
pop
push
loopne
es
movsl
mov
and
lea
std
hlt
out
pop
stos
jge
jl
mov
pop
jmp
mov
xchg
fdivl
js
push
add
inc
jbe
nop
stc
lcall
cld
xchg
inc
mov
pushf
add
in
fbld
psadbw
in
sbbb
xchg
adc
cld
cli
xchg
negl
xor
jo
mov
pop
shrl
mov
xchg
and
int3
neg
jle
test
and
cltd
adc
out
pop
fcomip
loope
or
jmp
adc
mov
mov
push
xor
push
aas
outsl
push
and
mov
xchg
pusha
dec
dec
jo
cmc
or
ljmp
cmpsb
sbb
ss
sbb
xchg
and
jno
lods
or
dec
adc
push
ret
pop
aam
mov
adc
mov
pop
mov
out
scas
enter
in
data16
aad
test
jnp
iret
inc
push
lcall
cmp
je
sbb
mov
leave
mov
inc
subb
repz
cmc
and
xchg
lods
lods
hlt
inc
scas
das
push
jecxz
xorl
out
mov
inc
data16
cltd
xchg
nop
jg
mov
push
push
nop
xchg
and
jp
cmp
lds
push
fstl
lods
shlb
cld
add
lock
mov
repnz
out
in
xor
and
scas
xchg
addr16
cmpsl
xor
inc
outsl
push
mov
ret
cmp
adc
int3
sbb
stos
sub
mov
mov
jne
sub
inc
mov
jle
mov
push
movsb
xchg
adc
sub
adc
and
leave
xlat
xor
or
dec
scas
int
push
dec
ljmp
xor
mov
pop
and
pop
adc
lret
shr
jns
fwait
sbb
push
cmp
mov
mov
mov
add
flds
outsb
pop
data16
ja
add
data16
mov
rolb
pop
in
test
or
ss
or
ret
testb
ljmp
or
jg
lds
enter
negb
add
in
add
mov
sbb
idiv
mov
ljmp
popf
iret
mov
cmp
and
mov
mov
imul
bound
mov
test
ja
xchg
test
inc
xchg
arpl
out
cs
mov
into
jo
aas
or
cmc
adc
jg
pushf
mov
pop
sti
test
jne
ljmp
jp
ret
push
mov
out
mov
dec
iret
sbb
mov
jp
lods
push
mov
jmp
add
aad
lcall
enter
aaa
loop
out
pop
xor
sub
out
inc
repz
push
pop
fstpt
dec
adc
test
pop
lods
test
xor
loopne
mov
mov
add
xchg
mov
mov
xchg
icebp
in
cmp
movsl
mov
adc
push
movsl
mov
mov
and
enter
cmp
pop
dec
mov
paddb
jle
mov
aaa
jp
je
mov
push
setnp
negl
arpl
mov
xor
pop
dec
popa
mov
ja
xor
inc
insb
movsl
adc
and
add
sarl
dec
testb
andl
rclb
lcall
enter
fcoms
mov
cmp
adc
mov
xchg
idivb
pop
into
rol
sub
sarb
jae
out
pshufw
addb
mov
pop
test
and
and
jnp
push
jl
dec
decl
movsl
int3
sbb
dec
repz
xchg
std
xlat
mov
cmp
mov
out
sbb
bound
movb
cwtl
xchg
fstpl
sub
jge
and
movsl
inc
dec
dec
dec
jmp
loope
jae
cwtl
mov
cli
enter
dec
and
dec
mov
test
mov
cmovns
sbb
or
sbbb
imul
inc
jns
xchg
mov
push
xor
mov
xor
int3
inc
dec
mov
cmpb
dec
jecxz
cmp
test
inc
xchg
fsubs
insl
fldt
sub
fdecstp
insl
mov
imulb
pop
xor
dec
rcrl
mov
lock
mov
adc
push
jns
cmp
sbb
cmc
xchg
loopne
in
lcall
mov
ljmp
adcb
in
out
jnp
push
sbbb
in
mov
sbb
enter
insl
or
adc
pop
mov
inc
test
cmc
fnstsw
popf
in
sahf
stos
insb
xchg
stc
ffree
mov
in
loope
sub
push
in
xchg
or
js
sub
push
jo
add
daa
fldenv
jl
inc
pop
sbb
jmp
lcall
arpl
shlb
sub
xchg
into
jl
sub
xor
sbbl
adcl
cmp
call
fidivrl
clc
fs
and
sbbw
loop
shll
mov
ljmp
jmp
push
sub
out
stc
pop
xor
cmp
sbb
pushf
mov
les
sti
popa
scas
jecxz
mov
lret
inc
icebp
lds
aas
out
mov
in
inc
push
ss
cmp
out
sti
pop
mov
add
cmp
mov
adc
out
sbb
or
mov
icebp
jg
fdivp
call
lock
in
rcll
sub
inc
add
push
xchg
lods
fcomi
push
stos
mov
mov
ljmp
add
xor
push
lods
movsl
stos
mov
stc
mov
push
fsub
add
mov
dec
aad
adc
push
sub
mov
imul
mov
popa
test
into
enter
xor
ja
dec
pop
fstps
lcall
mov
mov
lcall
cmp
sbb
ljmp
ljmp
xorb
cmp
imul
lock
dec
and
in
pop
xor
cmpb
fwait
lock
mov
pop
add
cmp
mov
int
push
pop
xchg
pop
ljmp
addl
sbb
cmp
loopne
in
or
out
push
mov
pop
iret
fsubl
push
cmpsl
mov
jge
jp
xchg
mov
jne
mov
mov
pop
fnsave
insb
pop
rclb
pop
push
push
ss
add
jno
pushf
dec
xchg
shll
jbe
nop
stos
push
aad
sub
cmp
jnp
xor
adc
lret
and
psrad
cli
mov
sbb
xor
xor
adcl
inc
xchg
mov
std
shlb
jp
popa
aas
rorl
mov
lock
xchg
js
mov
xor
cmp
jne
out
movsl
jae
pushf
andb
sti
cmp
xor
mov
lds
enter
sbbl
lock
xchg
rcr
out
fwait
push
mov
rorl
jl
jbe
movsb
sub
mov
jno
icebp
mov
and
cs
dec
out
iret
sbbl
push
adc
mov
jmp
pop
mov
dec
andl
test
push
and
insb
ja
mov
push
xor
push
repz
xor
test
xor
ja
sub
test
and
xchg
push
adc
lret
out
mov
outsl
or
inc
fldcw
std
out
test
xchg
lcall
fcoms
aad
ret
jg
jp
inc
xor
jne
pop
out
sub
icebp
aaa
lcall
imul
fstpt
cmpsb
sarl
dec
mov
and
test
divl
xchg
in
pop
or
sbb
sub
cs
push
add
repz
aam
mov
mov
sbb
mov
into
mul
inc
sub
daa
mov
lods
call
inc
or
movsl
call
sbb
test
ss
ficoms
repz
addr16
or
jmp
hlt
sbb
icebp
push
dec
out
jmp
pop
jecxz
fiadds
mov
xchg
pop
repz
push
outsl
xor
aas
popf
pushf
inc
push
insl
roll
pop
push
mov
fstpt
pusha
jl
lds
sbb
in
clc
insl
xchg
mov
popf
adc
add
ss
jns
popf
cmp
or
repnz
movsl
mov
push
insl
sub
xor
push
jge
pop
cmc
dec
fdivrs
fldl
dec
and
sub
aad
inc
aad
pop
jae
or
ret
jmp
les
sub
xor
out
orb
pushf
int
mov
cmpsb
jb
sub
leave
add
cltd
xchg
test
push
jg
negb
inc
sub
pop
and
xchg
lods
push
in
addb
addr16
mov
loop
add
ds
inc
test
lds
xchg
push
jmp
xchg
mov
jle
mov
and
mov
add
push
pop
add
mov
and
in
pop
ss
es
add
mov
xchg
hlt
imul
mov
and
mov
sti
sbb
lods
xor
push
mov
rcl
adc
mov
addr16
inc
push
lds
gs
cmc
lds
repnz
popf
inc
lds
adc
imul
jnp
loop
int3
pop
enter
and
xlat
aas
movsb
fnstsw
sbb
pusha
test
jo
push
aad
pop
inc
and
xchg
dec
inc
pop
insb
xchg
adcl
xchg
dec
in
cmp
add
pop
stc
lsl
mov
jle
xchg
dec
jae
or
pop
sbb
lea
mov
mov
lock
cld
into
xor
sub
xor
fidivl
mov
outsb
loopne
lret
addr16
lret
pop
js
and
out
cli
aas
psrad
sarl
loopne
sub
lahf
add
jns
xchg
cmp
mov
sub
aaa
push
aas
dec
xchg
jmp
decb
mov
push
lds
setno
or
stos
imul
popf
ja
enter
add
ror
test
sbb
xor
adc
jle
pop
loopne
repnz
sbb
std
mov
sub
and
inc
sbb
jo
sub
nop
or
mov
add
sub
add
cmpsl
faddl
fisubs
lret
sbb
or
sahf
testb
mov
push
sbb
aaa
andb
insb
xchg
out
ficomps
ret
cmpsl
leave
call
mov
jo
adc
pushf
pushf
or
cmovnp
xchg
and
js
fstpl
mov
mov
stos
inc
pop
loope
or
cmp
popf
adc
sbb
xor
or
inc
inc
xchg
repnz
cld
cmp
jae
ret
iret
or
dec
test
add
scas
icebp
in
mov
out
xchg
xchg
js
mov
loopne
mov
mov
inc
jo
mov
inc
mov
lock
jp
sbb
cmpsb
les
mov
xchg
jbe
cmpb
fcomp
jbe
clc
or
lock
pushf
mov
mov
cmp
jp
outsb
xor
dec
decb
and
pop
and
dec
ds
cli
lret
in
inc
sub
and
test
cmpsl
xchg
jmp
jns
sbb
jb
cltd
rcr
push
mov
rorb
fcoms
mov
js
xor
repnz
inc
mov
and
jbe
roll
lcall
aaa
pusha
ja
lret
xor
sti
xor
dec
mov
pop
ja
pop
movsb
js
lea
sub
cmc
sub
sbb
mov
sbb
push
adc
out
out
xchg
xor
popf
cmp
xchg
pop
or
fildl
pop
inc
sub
ljmp
in
push
fucomp
call
xchg
leave
fsubrp
pop
sub
stos
mov
fs
mov
mov
ret
int3
xor
in
mov
jp
xchg
bound
imul
insb
idivl
jnp
pop
add
push
fists
sti
aas
ss
xor
sub
pop
xchg
aaa
cltd
mov
fcmovu
xor
in
fisttps
hlt
cli
or
mov
mov
shrb
movsl
sub
loope
pop
lret
std
fstl
sbb
jecxz
and
lcall
or
lret
push
aas
in
or
sahf
and
mov
and
inc
cli
gs
fbstp
inc
into
or
rolb
adc
or
push
pop
and
fwait
cmpsl
push
jg
frstor
adc
xchg
insb
pop
sub
std
sbb
or
ss
inc
loopne
mov
sub
movsb
js
orl
insb
cmp
inc
je
jne
push
lods
cli
mov
mov
arpl
sahf
call
and
xchg
stos
lock
ljmp
mov
fwait
arpl
and
cmp
mov
jmp
and
adc
pop
scas
ss
mov
fdivl
ja
dec
orl
fists
jl
pop
sbb
inc
cmp
hlt
jle
in
jo
repnz
int3
dec
and
rol
shll
jmp
movl
imul
cmp
mov
adc
ret
dec
movsl
cmp
cwtl
lahf
mov
jnp
in
lds
or
jns
pop
test
subb
cmpsl
mov
push
adc
xchg
stos
jno
jge
push
out
and
lea
xchg
lret
call
sbb
and
in
movsl
test
and
loope
sahf
xor
xchg
int
addr16
jge
push
sbb
inc
mov
xchg
jno
jne
push
push
fcmovb
std
test
cld
in
rcrl
data16
aad
out
push
fcomip
push
dec
das
sbb
scas
test
push
lahf
ljmp
pop
rorl
nop
lods
jno
push
jb
mul
jg
adc
faddl
sub
cwtl
int3
mov
lock
test
sbb
aas
clc
lret
out
and
dec
stos
add
fwait
push
xlat
jae
xchg
fdivs
cmp
in
mov
or
jmp
test
loopne
imul
sbb
lcall
out
xchg
jle
pop
inc
lret
mov
jb
dec
inc
fnstcw
sbb
ret
jne
int
into
lret
mov
and
insb
in
or
or
sub
movswl
xlat
rcr
push
fcomps
jle
push
clc
xchg
push
inc
xor
jg
insl
adc
cmpsl
int3
sbb
adc
adc
push
or
push
fisttpll
mov
inc
mov
xchg
xchg
jnp
leave
xor
jbe
aaa
xor
adc
pop
mov
pushf
sub
cld
test
jbe
or
je
bound
jo
or
out
pusha
xchg
ret
mov
arpl
push
mov
mov
cmc
fdivs
jo
sub
cmp
je
inc
movsl
xchg
call
mov
push
or
ljmp
sub
int
ret
xchg
jnp
adc
aad
outsl
ljmp
xor
cmp
imul
mov
repnz
push
idiv
sarb
das
adcl
clc
lahf
popa
and
in
inc
ss
mov
mov
repnz
leave
xor
gs
fcom
fidivrl
in
xchg
dec
fbstp
mov
imul
xor
mov
cmp
sti
mov
ja
aam
push
mov
xor
jbe
or
roll
pop
test
cmpl
decl
pop
dec
xchg
sbb
loope
fsubrl
pop
arpl
or
xchg
stc
jbe
cs
cmc
xchg
jae
pusha
js
jne
aas
push
pop
xchg
jb
mov
gs
arpl
mov
xchg
xchg
mov
add
cmpsl
ljmp
lahf
rcll
push
inc
jl
test
push
sbb
mov
mov
jb
imul
hlt
jnp
xchg
out
adc
jnp
pop
das
sbb
fsts
jnp
adcl
call
ret
jmp
push
mov
scas
in
leave
jp
test
dec
adc
shlb
pushf
dec
sub
jge
fdivl
lods
into
loopne
jmp
xor
inc
ficompl
jle
push
mov
loopne
ja
popa
xchg
dec
fs
movaps
loope
sbb
lea
in
ds
ds
mov
ja
outsb
js
out
lds
rcll
ljmp
fidivl
jmp
xchg
push
mov
push
mov
mov
or
out
imul
pop
jmp
pop
xor
pushf
mov
outsb
xor
stos
sbb
sbb
cs
stos
adc
inc
pop
adc
sub
sbb
pop
movsl
imul
xor
jg
fnstenv
aam
dec
popa
stos
pop
pop
dec
fistps
sahf
jle
xchg
inc
adc
cmp
jg
sub
jle
mov
imul
xlat
sahf
ret
dec
inc
inc
add
lcall
popf
cwtl
pop
adcl
cli
sbb
push
xchg
mov
mov
dec
call
loope
push
mov
jnp
imul
push
sub
pop
and
push
fimull
dec
xlat
jle
jecxz
sarl
repz
jp
push
add
pop
xor
int3
and
sbb
arpl
int
adc
jne
or
hlt
popa
lock
xor
mov
mov
popf
imul
data16
test
add
cmp
push
push
mov
loop
adc
mov
push
int
loopne
cs
sbb
pushf
pop
mov
xchg
js
sub
or
lods
fcmovbe
sbb
mov
lcall
mov
popa
inc
pop
adc
data16
imulb
push
icebp
jge
popl
sbb
mov
mov
jmp
bound
popa
mov
dec
ds
fwait
fwait
cmp
outsb
adc
inc
xor
dec
xor
sub
out
xchg
test
adc
push
cmp
cli
pop
in
fxch
push
in
loopne
or
inc
loopne
push
ja
mov
lods
ret
sub
popa
inc
jns
add
xchg
outsl
mov
jmp
cmp
fwait
xchg
iret
cmc
inc
mov
jl
sar
test
mov
jl
dec
cltd
in
mov
jns
dec
fcom
shrl
movsl
repz
push
lret
mov
cmpsl
enter
daa
clc
cmc
mov
fmulp
ret
aad
pop
xchg
pop
inc
loop
mov
je
daa
mov
cltd
leave
xchg
mov
call
pop
adc
inc
data16
and
fidivl
in
pusha
iret
in
xor
cmp
lcall
in
aaa
cmc
in
xor
pop
stos
call
and
inc
and
addr16
inc
cmp
adc
insl
cmp
push
scas
data16
xchg
pop
pop
addr16
pop
leave
push
add
xor
movsb
cmc
lods
xchg
fcmovne
fdivrp
in
out
test
mov
movl
jmp
sbb
movsb
adc
sti
int3
clc
mov
jle
xchg
cmp
les
andl
jo
add
rcl
dec
aam
and
hlt
loop
call
inc
xlat
add
ss
rorb
sub
aas
pop
jg
fdivrl
fisubl
pop
jg
nop
sbb
jmp
xchg
dec
add
out
jge
ja
imul
lret
daa
aam
aad
in
cld
aas
aas
push
xor
pop
adc
test
sub
pop
xor
rcrb
unpckhps
push
xor
pop
lret
mov
cwtl
xchg
pusha
and
mov
sub
sarb
movsb
lret
add
lret
das
cltd
shll
repnz
sub
jmp
out
stos
mov
mov
xor
jmp
cld
movswl
js
or
or
push
xchg
out
movsb
xchg
sbb
int3
inc
fstpl
into
into
insb
das
shll
rorb
fs
mov
mov
push
adc
pop
mov
hlt
xor
and
ret
jp
scas
lods
jbe
cmp
lahf
xorl
into
iret
xor
and
xor
icebp
imul
lock
int3
mov
or
cmp
jl
nop
pop
mov
daa
pop
stc
test
in
outsb
ret
scas
push
jne
and
dec
pop
icebp
scas
iret
dec
sbbb
jo
inc
shlb
mov
pop
lahf
lock
sbb
hlt
in
sub
aas
ret
inc
addr16
movsb
xchg
xor
pushf
mov
mov
xor
sbb
std
pop
scas
mov
stc
daa
sub
fmulp
push
daa
subl
loop
inc
dec
push
sbb
mov
xor
cmpsb
pop
outsl
xchg
js
mov
dec
dec
fisubrl
loop
ficoms
adc
jo
or
js
xchg
inc
fldenv
cwtl
aaa
xor
cmp
fiaddl
cltd
adc
out
icebp
cltd
pop
xor
sbb
cmpsb
and
repnz
test
pop
mov
pushf
repz
pop
cmp
jl
jns
inc
pop
pop
pushf
or
mov
xchg
ds
arpl
dec
lea
adc
push
add
xchg
add
sub
mov
aam
insl
sbb
sub
mov
lcall
repnz
mov
fwait
iret
adc
inc
push
cmp
sbb
jg
mov
mov
cli
push
lcall
mov
xchg
addr16
loop
jo
cld
xchg
lock
xchg
jge
out
jg
mov
adc
sbb
mov
push
dec
sub
call
aad
pop
inc
cld
loop
je
pop
cld
and
sub
iret
in
cli
sbb
sub
and
or
outsb
mov
les
das
jge
mov
or
mov
inc
loopne
roll
sub
sub
lock
punpcklwd
aas
pushf
out
sarb
repnz
dec
test
adc
mov
cmp
jl
pushf
jbe
popf
push
adc
dec
lret
outsl
pop
dec
push
stc
incb
jmp
sub
outsl
mov
leave
add
icebp
push
pop
loope
jle
dec
test
fucompp
js
ljmp
jne
ss
jge
mov
add
jle
js
or
in
xchg
sbb
and
test
nop
jno
notl
mov
xchg
dec
sbb
fldcw
lea
inc
ss
pop
lods
ljmp
into
xchg
mov
pop
imul
into
pop
mov
and
and
decl
call
lds
scas
jnp
xorb
inc
push
int
enter
stos
jns
repnz
rclb
sub
lods
adc
inc
jle
cmpsb
cwtl
divl
cli
xor
leave
dec
out
or
scas
movsl
mov
andl
mov
stc
fadd
lahf
jns
xchg
mov
push
insl
movsb
mov
pop
out
add
icebp
adc
pop
and
mov
mov
or
mul
fisttps
popa
inc
lahf
jmp
lret
mov
aad
jle
dec
cmp
sub
or
mov
add
shll
icebp
ss
mov
mov
xchg
out
out
adc
rcll
cmp
into
lea
jl
movsl
jg
sbb
es
inc
scas
ret
jns
lret
fstps
dec
push
in
out
sbb
dec
xor
int3
push
dec
dec
jmp
and
pushf
js
jne
add
pop
xchg
push
push
into
pop
lcall
icebp
sub
mov
stc
push
outsl
adc
lcall
xor
sub
insl
sub
sahf
sub
cltd
xchg
push
mov
xor
fs
hlt
enter
mov
mov
pusha
scas
dec
cli
test
dec
cmpsl
cmp
push
clc
int
pop
test
lods
pop
sarb
inc
je
cmc
push
test
push
arpl
jns
in
push
pop
xor
xchg
addr16
or
sbb
push
int3
cwtl
adc
jns
sbb
or
outsb
dec
pop
lods
lret
or
or
rorb
movsl
sub
out
ljmp
cwtl
dec
inc
cld
push
mov
cmc
mov
rorl
mov
mov
loop
inc
sub
shll
jl
inc
in
neg
mov
imul
adc
inc
push
mov
dec
fadds
fldenv
pop
inc
sbb
sbb
fsubrl
mov
mov
repz
mov
and
incb
js
pop
outsl
cld
rolb
jmp
test
movsl
out
cld
push
pop
pop
gs
idivb
push
clc
sbb
jle
fmul
cmp
jo
cmc
sbb
je
daa
jl
mov
inc
pushf
stc
xchg
or
cwtl
cwtl
cmp
mov
pushf
pop
arpl
popa
push
or
mov
dec
cmpsb
out
std
add
pop
cs
les
lods
lcall
mov
push
fwait
shl
mov
sub
out
mov
push
adc
mov
xor
push
inc
pop
inc
sahf
adc
push
mov
and
mov
xor
xchg
std
lds
sub
inc
ljmp
in
push
mov
notl
cmp
movsb
push
call
jo
add
pop
gs
inc
bound
adc
out
rcll
fists
mov
mov
inc
and
pop
cltd
sub
mov
fucomi
jle
cltd
mov
or
out
pop
ss
aam
mov
adc
xor
sbb
fstpt
insb
fwait
sbb
mov
jecxz
mov
push
add
push
repnz
imul
icebp
lcall
clc
out
out
lcall
jl
pop
into
mov
mov
cmp
je
dec
push
imul
or
hlt
mov
pop
lcall
mov
imul
icebp
cmpb
or
xchg
mov
stos
add
push
jl
jp
fincstp
fwait
lret
rorb
sbb
out
sbb
mov
popa
push
in
ficompl
xor
jbe
mov
mov
aad
ret
int3
aaa
pop
mov
popa
lcall
mov
in
mov
stos
mov
ffreep
xchg
add
mov
aas
rcl
or
and
lcall
subl
pop
jbe
fcmovnbe
push
aaa
cmpsl
push
push
xchg
jge
ljmp
out
lret
sbb
icebp
inc
sbb
adc
cli
pop
fistpll
addr16
mov
sar
leave
push
fsub
mov
sbb
mov
jl
nop
pop
mov
ret
add
mov
in
pop
mov
mov
mov
or
mov
adc
jl
or
and
cmc
and
push
in
mov
into
sti
enter
test
push
pop
or
ss
cmp
mov
sti
adc
sub
lahf
out
scas
jmp
add
ljmp
dec
xor
dec
or
inc
lock
movsl
mov
stos
push
outsl
in
xchg
aaa
mov
dec
pop
mov
movsb
ret
movsl
test
cld
cmp
sbb
lods
push
jb
jl
ss
cmc
inc
or
mov
xor
dec
movsb
lret
hlt
pop
add
adc
mov
lods
push
aad
and
mov
enter
pop
cltd
enter
fidivs
mov
js
sub
lcall
inc
xor
mov
fnsave
jnp
int
jbe
xchg
jno,pt
mov
cs
ret
dec
cmp
xchg
andb
dec
dec
jg
cmpsl
xchg
dec
testb
push
xor
sub
mov
push
sub
xor
lcall
adcl
push
and
add
repz
cmp
adc
in
mov
jmp
lock
sbb
push
sbb
sbb
sbb
jb
inc
sub
lret
loope
xchg
mov
incl
dec
int
cmp
pop
jo
testl
xchg
js
in
test
ffreep
cmp
jno
stc
or
sahf
in
jns
mov
ret
mov
mov
jbe
lds
mov
xchg
outsl
jg
ret
cs
xchg
jae
ret
adc
push
sub
xchg
xchg
int3
mov
in
xchg
fsubrs
xchg
cld
movsb
adc
mov
pop
push
mov
lahf
icebp
jg
mov
dec
out
loopne
sbb
arpl
sti
test
and
pop
adc
fstpt
mov
fistl
inc
enter
push
fdivl
inc
stos
mov
in
in
lock
test
push
aam
cmp
cmpb
add
mov
call
mov
xlat
push
xor
dec
into
dec
sahf
xchg
aam
lret
stos
loopne
ret
mov
jnp
sahf
out
push
repz
push
jecxz
mov
imull
leave
outsl
push
aaa
fistl
dec
int
adc
mov
and
add
jecxz
leave
push
and
lods
mov
gs
add
mov
loopne
shrb
movsl
fbstp
cmc
fld1
mov
pop
mov
inc
rclb
pop
xchg
out
jg
xchg
arpl
jae
lcall
in
dec
cmc
mov
loop
adc
filds
jbe
push
test
cmpsl
sbb
out
lock
enter
and
dec
mov
and
jmp
add
add
movsb
sub
mov
aam
pop
adc
mov
je
xor
in
cmp
cs
mov
adc
xor
out
loopne
dec
cmp
imul
arpl
mov
lds
test
and
jns
imull
popa
or
insb
mov
push
sbb
inc
jo
push
in
mov
xchg
addr16
call
xchg
into
out
inc
lret
inc
mov
xchg
je
out
add
xlat
mov
mov
xchg
mov
mov
dec
push
arpl
or
outsb
insb
loope
idiv
iret
dec
and
loop
stos
rorl
int
or
loop
inc
mov
adc
pop
movsb
jno
rcll
mov
sahf
sahf
es
mov
jbe
mov
arpl
push
shlb
sub
sbb
inc
sub
jo
jno
cld
dec
mov
int3
pushf
fidivrs
xor
xor
sub
cmpsl
adc
das
pop
jno,pn
dec
sub
pop
dec
ja
ret
push
push
inc
lret
add
movsl
cmp
mov
xchg
lock
loop
loop
mov
lahf
cmc
movsl
inc
hlt
push
insb
insb
adcl
cld
pop
push
sti
mov
sbb
dec
dec
mov
jbe
pop
call
cld
push
rcrl
xlat
in
adc
aam
mov
daa
ret
and
dec
insl
or
lret
out
sub
push
ret
mov
loop
stos
and
sbb
in
int3
les
lea
mov
les
shl
or
xchg
inc
sbb
pop
ficomps
sbb
dec
or
fadds
jnp
pop
cmpl
dec
mov
in
popf
lcall
add
dec
fidivrs
or
inc
mov
bound
aas
push
dec
in
std
pop
dec
in
cmp
mov
movsl
nop
lcall
lods
mov
push
push
cld
ljmp
cmp
imul
fwait
cmpl
cmp
out
outsl
pause
and
call
jp
xlat
mov
dec
and
push
mov
mov
push
icebp
pop
fwait
adc
fs
std
cltd
xchg
fldl
lcall
or
cmp
outsl
scas
mov
mov
and
push
mov
adc
jne
or
push
out
cmpsl
jmp
fst
aas
sub
mov
fimuls
jp
pop
or
jnp
add
popf
xor
fdivr
cmpsl
add
xchg
jge
insl
mov
jp
lds
mov
xchg
mov
push
pop
aad
inc
push
and
mov
aad
outsl
aas
mov
mov
js
call
cmp
lret
gs
adc
in
std
mov
ret
and
into
jb
fnstcw
into
cmp
sub
pop
jl
or
push
and
mov
mov
inc
push
push
sti
mov
pop
dec
popf
xchg
ja
xor
sub
jl
sbb
dec
adc
fxch
xchg
mov
mov
pop
or
aad
mov
test
insb
cmp
insl
or
popa
cmp
out
adc
mov
jb
arpl
mov
out
mov
jle
and
mov
push
dec
aam
jle
sahf
xchg
cs
int3
sub
push
je
int3
jns
add
ljmp
mov
and
cmp
sti
and
call
sbb
mov
and
pop
fnsave
std
repnz
mov
shl
adc
icebp
adcl
push
cmp
jp
push
lods
dec
xlat
xchg
cmp
pusha
sti
push
sbb
test
xchg
enter
test
clc
loopne
sub
iret
mov
int
sub
lret
lret
xor
push
out
mov
sbbb
push
mulb
dec
int3
bound
pop
aas
cmpsl
adc
in
xor
sbb
or
adc
out
mov
jb
sti
pop
outsb
mov
mov
sub
jb
mov
cmp
adc
shrb
jbe
adc
jle
sbb
cmp
and
sahf
dec
mov
sub
fisttps
add
pop
jno
fldcw
mov
addr16
mov
call
dec
inc
lods
movsb
rcll
xor
cmpsl
mov
ds
mov
and
or
pop
mov
cmp
dec
gs
and
xchg
in
leave
insl
roll
mov
cmpsb
fiadds
or
arpl
dec
lret
xor
mov
xlat
aaa
aas
aas
push
dec
jge
mov
mov
fcoms
inc
pop
int3
or
imul
les
outsl
mov
dec
mov
xor
je
lret
out
arpl
adc
pop
insl
aad
nop
repnz
out
jecxz
or
enter
rcrl
into
cmp
jg
in
cmp
insb
fcoml
pushf
pop
addr16
cmp
inc
push
jbe
fwait
mov
stc
movsb
fld
popf
sbb
imul
fadds
enter
xchg
clc
cmpsl
fadds
sbb
es
mov
fdivrs
mov
loopne
push
push
sbb
sahf
outsb
pusha
mov
mov
xor
mov
addr16
pop
lret
jle
and
sarl
cmp
ljmp
mov
push
gs
mov
mov
add
test
inc
rorb
jle
mov
add
std
or
mov
addr16
xchg
pop
jns
dec
lods
fstps
mov
pop
stos
lods
gs
mov
fbld
out
inc
sbb
cmp
lcall
movsb
sahf
dec
pop
sub
test
jns
pop
das
jne
pop
sbb
mov
mov
adc
popa
arpl
mov
mov
pop
sbb
insb
jae
aam
shrl
pop
out
jge
push
xchg
ja
jo
icebp
add
sbb
jno
clc
and
adc
jge
or
loope
mov
xchg
pusha
pop
imul
inc
into
jge
jecxz
loope
push
cld
insb
popf
mov
or
adc
pop
add
xor
inc
icebp
into
pop
mov
mov
sti
repz
fmul
mov
add
mov
add
pusha
xor
clc
sub
sbb
fchs
sbb
cwtl
pop
pushf
inc
in
cmc
daa
jp
aad
jg
imul
test
fmulp
les
ss
test
sub
xor
lock
js
xor
or
or
loopne
or
movsb
inc
jb
ret
outsl
daa
lcall
rorb
mov
enter
out
imul
cmpsb
mov
mov
xchg
pop
or
cmp
loop
push
and
test
lods
xchg
sub
push
loopne
cmpl
dec
cwtl
inc
in
dec
dec
insb
adc
jnp
mov
lcall
and
pop
dec
clc
leave
arpl
mov
das
lds
or
movsl
xor
lret
repnz
mov
adc
roll
dec
mov
dec
push
or
cmp
cs
ror
ret
add
mov
pop
xchg
mov
and
and
ret
data16
and
push
sub
mov
les
in
les
xchg
jp
mov
push
loopne
je
xor
std
int
sub
xchg
push
push
lret
add
xchg
nop
in
push
push
data16
mov
and
or
inc
ljmp
mov
mov
outsb
push
or
shrb
sbb
out
cmc
xchg
pop
add
xchg
push
ficomps
ss
or
add
dec
stc
push
xchg
jl
jg
mov
cs
lods
adc
xchg
into
adc
or
xchg
stos
bnd
and
dec
sahf
mov
mov
adc
cmp
dec
sbb
and
imul
sub
or
lret
xor
adc
jg
mov
insl
mov
pop
sbb
dec
xlat
adc
mov
lds
ss
cmp
movsl
pop
dec
sub
insb
mov
bound
pop
jp
in
cmp
fnstenv
xchg
push
xchg
fcmovne
ffreep
addr16
cmpsb
sbb
cmp
xor
sbb
aam
jl
int3
test
add
xor
xor
cmc
movsl
pushf
call
clc
push
pop
jge
jl
pop
jg
lret
mov
pop
push
fwait
imul
lock
notl
out
or
cmp
pop
or
xchg
add
in
loopne
nop
mov
mov
jbe
in
das
fildll
adc
xchg
sbb
in
push
push
stc
add
xchg
ret
pop
data16
sub
or
lahf
lds
sub
push
adc
adc
mov
xor
shrl
mov
jp
ds
mov
mov
pop
imul
and
pop
lahf
mov
jnp
xor
fs
out
mov
push
sub
cmp
cld
mov
cmp
das
dec
xor
jns
orl
add
lods
fimuls
xchg
xchg
outsl
push
inc
sbb
xor
ror
jl
inc
jle
push
cld
mov
dec
add
into
push
sbb
popf
stos
sub
inc
div
ljmp
sub
push
dec
jno
out
cmc
test
hlt
loope
cmp
fisubl
add
mov
repz
jp
mov
shlb
pop
adc
cmp
out
in
leave
enter
adc
rclb
int
cld
lahf
sub
test
fstpl
scas
xchg
hlt
movsl
sub
arpl
add
pop
loopne
es
aam
dec
xlat
jo
pop
sbb
pop
push
ret
dec
ds
je
xchg
test
imul
sbb
mov
xor
shl
dec
int
lret
in
movsl
scas
fsts
cld
mov
mov
movsb
inc
sub
dec
push
faddl
xchg
cwtl
inc
xor
and
pop
daa
imulb
fsts
and
imul
dec
in
cmpb
sti
mov
add
xlat
adc
push
and
pop
out
adc
push
ds
dec
jge
js
or
dec
cmpsl
xchg
add
out
pop
mov
div
iret
pop
jmp
sbbl
ds
sub
add
push
cwtl
xchg
lcall
sub
daa
pop
iret
pop
aaa
pop
fistps
sbb
and
jmp
push
loop
dec
push
xchg
lods
xlat
les
popl
sbb
mov
mov
push
nop
pop
xor
inc
sub
lea
in
xlat
mov
mov
xor
movsb
and
out
popa
fidivrs
sub
shrb
out
add
sbb
out
add
mov
or
rcrb
mov
cwtl
cld
rcr
jg
lcall
push
xchg
pop
dec
dec
inc
and
movsl
cmpsl
jae
fsubrl
push
orb
ss
mov
roll
ja
test
ret
ljmp
xchg
jg
push
loope
ss
mov
inc
into
inc
sar
out
cmc
inc
scas
cli
xchg
xchg
adc
arpl
and
fiadds
xchg
popa
clc
shll
or
sbb
cmp
fldl
and
mov
or
lods
pop
jp
xor
stc
adc
sub
xor
xor
les
jp
and
inc
add
in
imul
dec
jb
daa
push
xor
mov
loopne
lret
inc
popf
popf
and
jl
enter
xchg
pusha
arpl
scas
mov
adc
jmp
cmp
adc
mov
xor
mov
jns
aad
xchg
orb
neg
dec
mov
orl
and
dec
mov
or
insb
sbb
mov
data16
cmp
hlt
jae
js
dec
xlat
xlat
bound
xor
je
mov
fstps
lret
mov
push
into
pop
test
xor
mov
mov
sti
int
adc
stos
add
test
push
jecxz
scas
mov
dec
mov
cltd
pop
loop
xchg
jge
mov
or
scas
lahf
and
jmp
add
das
mov
adc
mov
cmp
adc
fisubrl
push
mov
andb
dec
lret
nop
lret
inc
fdivrs
xchg
lock
jmp
and
aam
daa
movsl
adc
int3
xchg
push
pushw
rcl
psrlq
mov
xor
ret
imul
mov
pop
push
shlb
xor
push
mov
mov
mov
pop
aam
bnd
push
orl
shl
pop
jbe
xor
inc
inc
adc
je
jl
pop
pop
int
xchg
test
in
add
push
cmp
cmp
aaa
and
mov
jmp
mov
jl
dec
vpackssdw
cld
inc
loop
and
adc
mov
lahf
or
ret
add
out
lods
ss
test
mov
pop
mov
iret
in
and
in
xchg
jb
mov
rcl
push
mov
pop
jnp
orb
mov
adc
ret
outsl
xor
mov
adc
push
mov
pop
rcll
daa
imul
js
mov
jg
fs
scas
inc
ret
mov
mov
je
shr
lcall
shll
ficoml
scas
rolb
pushw
pop
std
adc
mov
dec
pop
sub
cmp
pop
aam
push
xchg
dec
int
imul
xor
jns
mov
shlb
mov
pop
bnd
xlat
es
push
xor
or
sbb
imul
push
movzbl
outsl
push
cld
and
cmc
xchg
into
subb
push
jns
sbb
or
test
xlat
stc
xor
add
mov
jbe
aad
test
fdivr
in
dec
and
fcomip
cli
rolb
sarb
push
xchg
jmp
mov
sarl
rcll
aam
cs
cmp
xlat
lods
inc
xchg
aam
aas
sahf
adc
xchg
inc
sarl
imul
cli
ret
shll
fstpl
xchg
aad
push
loope
jge
jge
lret
inc
push
sbb
scas
ds
sahf
neg
and
add
ret
push
maxps
push
lods
out
stos
push
ret
sbb
scas
into
jp
jmp
andb
pushf
mov
andb
push
lock
test
adc
jge
adc
sub
ds
and
sahf
lret
inc
cmp
xchg
sub
ss
jnp
ljmp
adc
std
insl
dec
jbe
arpl
mov
pop
mov
inc
adcl
sbb
loop
stos
stc
outsb
dec
sub
fcomip
cmpsl
cmp
les
repnz
test
adc
loop
mov
insb
push
xor
cwtl
addl
sub
jp
mov
push
arpl
adc
mov
xor
inc
mov
jnp
push
in
out
outsl
xor
xchg
push
icebp
and
in
aam
shrl
lods
lock
xchg
ljmp
pop
into
out
xchg
cmpsl
shll
fwait
xor
jg
mov
cmp
test
sbb
psllq
jns
sti
gs
mov
sbb
dec
jnp
cli
sbb
jg
in
jmp
stos
dec
inc
xchg
push
lcall
sahf
movq
mov
xchg
adc
hlt
adc
xchg
add
icebp
icebp
fnstcw
popa
mov
aas
repnz
lcall
lods
or
dec
adc
nop
pop
in
sub
and
insl
mov
insb
push
loopne
push
iret
jb
mov
add
cmp
stos
arpl
xchg
xchg
fisubrl
dec
pop
jno
sub
fdivs
or
or
sbb
hlt
jmp
outsl
leave
cli
sub
jmp
pop
out
popa
pop
les
inc
adc
icebp
sbb
jg
xchg
mov
out
jmp
fsubrs
jg
inc
push
add
daa
mov
cmpsl
in
inc
jo
push
adc
imul
fisubs
sbb
dec
sbb
addb
and
pop
push
or
push
mov
jbe
mov
mov
push
lods
add
inc
jno
push
jmp
jmp
lods
cmc
mov
inc
mov
mov
push
lahf
push
mov
mov
xchg
jns
inc
push
movsl
jge
lock
mov
and
cmp
cmp
or
or
subb
mov
mov
rcr
push
mov
sbb
or
cli
jl
inc
insl
pop
xchg
mov
cmp
divb
addr16
add
jp
int
jns
testb
adcb
into
mov
push
fildll
mov
mov
test
mov
and
xchg
dec
js
dec
repz
and
jge
or
lock
mov
ljmp
mov
outsl
loop
cmp
lock
pushw
lods
inc
push
cmpsl
mov
fldenv
clc
out
std
cmpsb
les
mov
cwtl
adc
ljmp
adc
mov
loope
push
mov
insl
out
adc
push
jb
icebp
and
lods
xlat
std
jne
sbb
loopne
xchg
pop
bound
xor
mov
aas
ljmp
mov
fsubp
or
loop
addr16
stc
jns
jge
call
push
mov
sub
and
mov
shll
cmp
push
lods
testl
xor
inc
into
dec
outsl
cmp
pop
sbb
add
sub
gs
repnz
xchg
outsl
sub
je
outsl
sub
cmpsl
stos
or
and
push
jp
mov
lret
mov
test
popa
and
test
scas
ja
shll
std
adc
pop
movsl
pop
add
add
lea
cmp
gs
dec
pop
sti
or
loop
cmp
imul
pop
mov
xor
mov
fldcw
lods
mov
jns
push
es
lods
mov
fisubrs
sti
shlb
pop
in
and
cmp
cltd
push
gs
iret
rorl
push
add
mov
cmpb
push
sbb
scas
jecxz
pop
loop
clc
repz
sub
cs
pop
dec
jl
pop
fcoml
sub
outsb
sub
fisubrl
int
data16
inc
dec
into
jmp
push
push
xchg
out
mov
rcll
lea
aaa
std
aaa
xor
std
add
out
pop
sub
inc
jb
sub
add
and
mov
jmp
movsb
cmp
test
scas
lock
jecxz
push
jl
aam
and
cmc
add
mov
lock
mov
test
iret
dec
in
cwtl
mov
in
jae
arpl
data16
jmp
popf
int
rorb
or
outsl
mov
jnp
push
pop
lcall
xor
sbb
int
stos
dec
or
fbld
cmp
cmpsl
sbb
fistps
jnp
sub
int
pop
lea
and
and
and
cli
flds
sbb
xor
lret
loop
dec
pusha
jbe
mov
fistl
push
cli
loop
idivl
hlt
popa
cmp
bound
pop
jp
pusha
mov
inc
xor
gs
mov
mov
cmp
daa
fistps
jbe
mov
in
dec
std
insl
mov
pop
clc
inc
arpl
call
and
sub
inc
fisttpl
pop
jae
cmc
sub
cmc
fsubrl
stos
mov
or
fnstsw
ds
push
push
lahf
hlt
xchg
push
test
cs
aas
flds
insb
cmpl
movsl
into
addl
je
arpl
xor
jp
test
into
outsl
repnz
data16
push
jne
mov
jl
lret
jae
dec
mov
pop
jle
push
xchg
add
jl,pn
sbb
or
sti
cwtl
jge
lock
pusha
fstpl
adc
pop
jl
jno
test
out
fnop
or
call
neg
cmp
jle,pt
add
mov
testl
pop
pusha
in
lret
loop
cmpl
pusha
and
aad
pop
arpl
push
mov
mov
insl
or
jbe
movsb
pop
mov
xor
gs
das
lods
filds
push
pop
lahf
test
lods
fcmovnbe
test
lods
mov
mov
inc
clc
cs
inc
pop
bnd
stos
sbb
jb
ret
and
jg
dec
aas
loope
ljmp
sti
call
mov
mov
imul
adc
out
mov
add
adc
push
cmp
or
mov
loopne
and
add
push
mov
push
mov
sub
jge
cmpsl
das
xchg
inc
movsl
sti
leave
stos
xor
pop
mov
sub
cmpsb
xchg
loope
cltd
push
nop
push
ds
cmpsb
jnp
repnz
popf
addb
jb
test
push
dec
mov
cmp
cwtl
rcrl
push
push
dec
out
int3
mov
fwait
push
mov
or
inc
fcmovu
mov
fidivrs
cmp
ja
js
fidivrl
mov
aaa
icebp
pushf
inc
mov
push
inc
movsl
xlat
outsl
mov
inc
xchg
sub
and
std
xor
add
adc
dec
xor
inc
into
popf
lods
push
adc
adc
and
std
insb
je
test
xchg
cld
dec
ffreep
aad
mov
cmp
repnz
cmp
xor
ljmp
imul
cmpsl
leave
mov
lret
int3
outsl
sub
arpl
out
outsb
xchg
xorl
adc
xchg
sti
lret
aam
ljmp
sub
add
pusha
out
stos
push
scas
cmp
pop
std
xchg
pop
jecxz
push
push
sahf
xor
leave
mov
jle
push
subb
mov
ja
daa
xchg
mov
sbb
imul
jle
es
outsl
sbb
cmp
movsl
or
push
inc
dec
popf
jecxz
pop
xchg
xchg
rorl
adc
icebp
jmp
add
pop
inc
pop
jb
leave
cmpsl
rclb
subl
inc
cmpsl
sub
shrb
mov
sbb
pop
test
xchg
mov
jmp
push
pop
jge
mov
aas
cs
lcall
xor
lock
cmpsl
push
inc
lret
sarl
xchg
inc
lock
outsl
leave
xor
inc
stos
mov
lea
fsubrp
and
icebp
sub
mov
jmp
jp
das
jnp
sbb
shrb
imul
and
mov
mov
rcr
mov
or
movb
int
ret
push
je
scas
sub
loope
call
bswap
dec
call
loope
mov
sti
cli
inc
jnp
xchg
js
add
push
cli
idiv
inc
push
hlt
shrl
cs
inc
cltd
iret
aas
test
mov
mov
inc
mov
rep
sti
aas
cli
sub
nop
adc
std
mov
in
jge
mov
mov
xor
jle
lea
addr16
sbb
pop
sub
xchg
mov
mov
xor
insl
and
dec
out
cmc
enter
add
pop
jns
mov
push
sbb
jbe
cmp
into
jle
movsl
push
sub
sti
imul
inc
add
cmc
sub
xchg
rcll
imul
add
jl
push
fcomip
int3
test
cmpsb
inc
or
sub
push
inc
dec
sub
pop
adc
shll
and
mov
cmp
lret
adc
dec
push
mov
inc
pop
movsb
pop
mov
or
adc
std
sti
aad
inc
stos
lods
sub
lods
pusha
outsl
or
jge
push
mov
cmp
fdivrs
imul
jne
arpl
mov
into
pop
fsubrs
sub
stc
loope
push
push
out
inc
cs
cli
push
sub
imul
sbb
iret
cmc
fcoms
gs
movsb
cmp
pop
test
or
std
fwait
push
push
inc
arpl
cld
fwait
and
adc
mov
lock
rolb
push
subl
jbe
pop
mov
mov
dec
frstor
test
std
inc
enter
test
jns
pop
xchg
shll
repz
xor
xchg
sti
jns
pop
rorb
pop
movsb
sub
sti
jp
adc
andb
jle
adc
jle
daa
ficoms
scas
into
or
xchg
push
cmpsb
mov
mov
xchg
movsb
jle
sub
std
xchg
jmp
mov
sub
push
mov
mov
xchg
lcall
lret
jmp
mov
call
fisubrl
add
push
xor
data16
pop
and
popa
mov
stos
cmp
jae
or
jecxz
sub
sbb
pop
imul
and
js
dec
add
push
push
adc
sbb
pop
sub
movl
jp
shlb
outsl
scas
or
fldl
inc
push
xchg
mov
adc
aam
mov
dec
mov
lret
je
sbb
xlat
push
pop
mov
nop
mov
outsl
jns
mov
add
add
sub
dec
adc
add
add
inc
push
addl
xlat
in
push
je
pop
ja
mov
loopne
sbbb
out
into
or
lret
mov
sbb
iret
fstpt
dec
add
adc
in
sub
jo
nop
mov
adc
and
inc
adc
push
fst
mov
mov
mov
adc
call
in
in
lcall
cmc
cmp
imull
or
ret
push
push
mov
jae
mov
cmp
inc
inc
daa
rcr
xorb
dec
pop
out
notl
cltd
lcall
cmc
popa
imul
loopne
push
gs
cltd
fs
push
mov
and
add
mov
insl
test
mov
mov
movsb
jl
push
addl
ss
pushf
cmpb
out
outsl
in
cmc
cmp
sub
add
add
cmp
xor
xor
popa
xchg
ja
inc
lret
jp
push
popa
dec
mov
jg
cmc
ja
outsb
out
scas
add
adc
fs
mov
mov
mov
mov
sbbb
sub
ret
add
int3
rorb
arpl
movsl
loopne
movsl
adcb
mov
outsb
add
or
push
daa
and
xchg
fwait
mov
inc
neg
mov
pop
sub
mov
or
into
cwtl
push
jp
or
ljmp
sub
inc
jge
jno
push
jno
out
in
push
leave
push
lcall
mov
into
jle
adc
push
xor
xchg
lds
insb
adc
shrb
fstpt
inc
lret
push
xor
aaa
jg
jns
sbb
lret
stc
pusha
inc
mov
cmp
test
in
cltd
movsl
sahf
subl
dec
dec
or
fimuls
insl
adc
lods
push
ret
pop
loop
adc
xor
mov
test
cmpsl
adc
xchg
adc
adc
testb
ret
mov
aas
push
xor
or
push
sbb
sbb
mov
pop
dec
cmpsb
aam
fstpt
fsubr
mov
incl
in
les
sub
dec
int
xor
das
inc
mov
add
aam
inc
hlt
add
repz
out
sbb
fdivs
mov
ficompl
jp
add
xor
xchg
fidivrs
xchg
cwtl
not
loope
mov
ret
test
sbb
enter
adc
fistpl
sbb
pop
xlat
push
sbb
outsl
aas
pop
pop
cmp
aaa
xchg
fisubl
clc
lock
pop
xchg
mov
jns
inc
scas
imul
repz
negb
daa
int
jno
push
shlb
insb
sub
sub
rcrb
xchg
jge
mov
mov
mov
pop
mov
stc
xor
aas
scas
fnstcw
push
jns
inc
orl
adc
imul
popa
aaa
test
mov
sbb
or
cs
cmp
sbb
repnz
dec
into
jne
repnz
sub
xchg
xor
imul
hlt
add
lods
icebp
stos
mov
add
dec
or
sub
jl
dec
adc
mov
es
ficompl
pop
std
cld
xchg
xchg
push
imul
jmp
xlat
outsl
inc
in
daa
outsl
cmc
pop
jp
cli
shlb
mov
sahf
in
lods
jbe
das
ja
jmp
dec
rcll
mov
mov
je
dec
in
inc
push
fcomps
test
popf
wrmsr
inc
daa
fs
pop
es
or
adc
mov
sub
stc
xlat
xor
repnz
iret
jle
ret
repz
mov
lret
popf
mov
adc
xchg
xlat
icebp
test
stc
out
lods
test
sub
movsb
sbb
in
xchg
push
lock
mov
cwtl
adc
dec
fiadds
ds
xchg
mov
adc
in
lahf
repz
dec
aaa
addr16
sbb
test
repz
jmp
jae
sub
cli
push
fcoml
mov
stc
push
mov
pop
divl
movsb
cs
dec
ljmp
orl
popa
inc
cmp
test
stc
pop
fdivrs
mov
enter
fldt
push
and
shrl
lds
mov
leave
shlb
and
lds
xchg
repz
push
dec
adc
inc
mov
jge
icebp
and
push
add
adc
pusha
stos
adc
mov
mov
subl
adcb
jmp
mov
push
nop
test
jnp
std
scas
pop
das
in
pusha
fldenv
data16
mov
ss
jl
movsb
cmp
imul
imul
or
cmp
xchg
test
mov
pop
jbe
add
cmp
sub
popa
imul
mov
xorl
imul
stc
add
and
and
cmpsb
sbb
cmp
popa
mov
cmp
addr16
add
out
je
push
and
je
xchg
scas
mov
mov
enter
jle
push
arpl
cltd
adc
into
or
clc
icebp
cmpsb
sbb
arpl
cmp
cmp
adc
stc
shl
jecxz
xchg
push
mov
jo
inc
adc
popa
xor
pop
outsl
xor
aaa
mov
inc
test
inc
int
push
push
jg
sbb
imul
mov
inc
pop
cmp
cmp
add
sbb
add
cmpsl
pusha
mov
mov
cli
scas
loopne
movsb
lods
mov
std
inc
or
ret
sarl
mov
sub
mov
push
loopne
pusha
movsl
or
pushf
push
pop
cld
mov
jp
xchg
in
jl
outsb
ja
and
jbe
mov
outsl
fstpl
xor
sub
lods
sub
scas
cltd
and
push
and
xchg
imul
ret
push
xor
fdivr
cwtl
xchg
pop
dec
xor
lods
sbb
stos
jbe
push
or
push
fsubs
mov
dec
sti
cld
scas
xchg
fisttpl
mov
mov
inc
cmp
sbb
in
xchg
rcll
push
xchg
inc
pop
pop
insl
scas
lds
ljmp
push
sti
sub
and
stc
lea
repnz
das
jg
adc
rcll
push
dec
add
scas
fisttpl
inc
xchg
dec
adc
or
insl
leave
jmp
stos
popl
pop
imul
je
jno
out
xchg
gs
cmp
mov
out
mov
adc
subl
jnp
mov
int
xchg
pop
sarb
data16
fcomp
jae,pt
gs
sbb
push
pop
cmp
xchg
mov
push
fisubs
and
popa
sbb
mov
or
fmul
insb
and
iret
mov
push
dec
iret
popa
sbb
adc
add
jne
mov
xor
inc
sar
xchg
pop
mov
xchg
sub
imul
jne
test
cmpl
adc
inc
and
and
stos
xchg
jle
cmp
add
xchg
add
dec
jb
adcb
movsb
loopne
or
jcxz
mov
cmp
push
xor
cmpsb
out
xor
cmp
mov
rcl
jbe
and
pop
xor
or
add
xor
daa
xor
lea
sub
sub
jbe
pop
cmp
fisttpll
test
insb
js
lcall
js
push
sub
jb
jne
loop
mov
sarb
sbb
hlt
push
pop
shll
cmpsb
cli
push
stc
ja
add
ljmp
and
adc
dec
cmp
aas
cmp
jmp
cmc
mov
jbe
stos
jno
ret
jmp
or
mov
stos
pushf
or
rol
andl
or
jo
or
in
int3
cmp
mov
sbb
sub
test
adc
xor
lods
bound
sub
adc
std
stc
dec
pop
inc
mov
add
fcomi
mov
inc
xchg
popf
ret
push
inc
xor
cmp
xor
cmp
jne
in
std
dec
cmp
xchg
sbb
das
add
jbe
jl
movsl
pop
and
loopne
pusha
mov
mov
negb
sbb
lret
rcrb
enter
test
cmpsb
add
pop
fstl
xchg
jecxz
in
cli
fiadds
mov
cs
jmp
out
fadds
lret
jns
out
xor
mov
adc
lret
sbb
pop
test
xchg
fbld
shl
push
mov
and
sbb
outsl
aam
push
jle
or
sahf
pop
loopne
outsb
lea
fwait
loope
dec
inc
xor
icebp
sbb
ljmp
int
lahf
inc
push
loope
mov
out
xchg
lock
xor
sub
and
and
arpl
and
xorl
in
jmp
adc
aam
push
adc
mov
int3
jmp
dec
push
outsb
xor
sub
and
sub
mov
aam
adc
pop
xchg
popl
aam
mov
arpl
or
adc
fsts
adc
addr16
inc
fwait
arpl
out
mov
mov
or
mov
mov
push
aam
and
roll
adc
cmpsl
fmul
shlb
repz
in
jl
testl
outsl
push
es
popa
xchg
cli
jb
lahf
adc
fildll
cmpsb
mov
pop
mov
lea
mov
push
or
or
cmp
jle
cmp
dec
stos
push
lahf
mov
xchg
xor
xchg
pushf
int3
mov
pop
adc
pop
sbb
mov
and
bound
call
test
je
pop
inc
enter
lds
movsb
push
mov
adc
pop
ror
das
cmpsl
pop
or
inc
or
mov
dec
push
dec
xchg
jne
jecxz
add
inc
pushf
push
push
xlat
inc
pop
mov
xor
ja
pop
jmp
sbb
pop
jnp
cmpsl
out
jge
xor
ljmp
lock
xchg
mov
ds
and
jne
fdivl
test
dec
or
fidivrs
cli
cmpsb
cmpsl
mov
jg
jno
insb
or
dec
scas
pop
mov
mov
pop
cmp
iret
inc
jno
cmp
add
imul
bound
into
xchg
aam
lea
gs
ret
add
sbb
shlb
add
xchg
es
shll
ret
inc
pushf
stos
ss
test
mov
cs
leave
cli
xchg
xor
push
insb
test
fbld
and
loop
jne
rorl
rcrb
in
not
fs
sahf
fidivs
pop
enter
mov
add
inc
sbb
rcr
sub
mov
outsl
sbb
mov
pand
or
sbb
fisubrs
mov
push
xchg
inc
data16
clc
pop
mov
icebp
cmpsb
dec
icebp
inc
test
cli
loop
sbb
jnp
out
dec
cmp
pop
stc
stos
pop
and
fisubrs
inc
cmp
inc
xchg
dec
cmpsb
pop
push
pop
mov
pop
dec
out
outsl
sbb
nop
xor
iret
es
iret
inc
push
jnp
addr16
mov
cltd
dec
daa
test
andl
lret
ret
loopne
scas
sbb
test
fsubrp
aam
sub
pop
pop
inc
lods
push
adc
sbb
fstpl
es
inc
fcom
scas
adc
icebp
adcl
push
mov
iret
mov
xchg
mov
test
rol
arpl
and
inc
mov
lds
cmp
imul
and
leave
jnp
inc
cmp
add
adc
jg
inc
push
rcrb
cmp
negl
xchg
add
addr16
push
loope
icebp
les
xchg
nop
das
xchg
packsswb
in
loop
xchg
insl
or
loope
pop
scas
into
mov
aam
jne
pop
mov
mov
push
mov
xor
test
test
xor
xchg
or
addb
add
push
call
mov
mov
xchg
or
xchg
jecxz
mov
les
clc
mov
mov
dec
daa
mov
mov
jbe
dec
les
xchg
add
outsl
xchg
int
add
inc
stc
cmp
sar
shr
out
cli
mov
int3
push
es
dec
cmp
jl
pop
adc
jg
shr
mov
testl
jb
sbb
test
and
cmp
cmc
jl
push
or
out
mov
arpl
mov
add
xor
lret
cs
jmp
jne
add
faddl
shll
pop
in
sub
iret
or
mov
push
jb
cmp
jp
mov
xchg
dec
xlat
pop
stc
cmp
cs
mov
jmp
pop
push
pop
add
sbb
xor
mov
aam
pop
jnp
mov
mov
or
fdivl
xor
inc
mov
mov
adc
jmp
or
fisttps
lahf
shld
adc
jl
dec
cltd
mov
inc
mov
or
pop
into
sub
fidivl
sbb
je
mov
sub
sub
repnz
into
jo
lret
lea
addb
je
ja
xor
cmp
adc
cmp
pusha
xchg
lods
xchg
inc
push
test
cmpsb
lcall
dec
mov
jmp
jmp
ficomps
in
divl
xlat
bound
mov
cmp
adc
jb
or
and
pop
data16
je
fst
imul
jb
xor
sbb
push
push
sbb
push
addr16
stos
add
in
add
pop
outsl
xchg
jae
int3
sbb
rcrb
movsl
xorb
sub
mov
fdivs
cmpsl
cs
jecxz
inc
xchg
mov
inc
inc
in
adc
push
out
in
pop
pushf
in
in
rclb
nop
stos
pop
movsl
xchg
sub
ret
mov
jb
lock
pop
jl
inc
imull
sub
or
xchg
addr16
movsl
push
lods
add
sarb
fnstsw
mov
aas
fincstp
mov
mov
sahf
aad
in
shrl
sti
and
sarb
xchg
adc
or
outsb
ss
lods
and
inc
sub
xchg
mov
dec
pop
faddl
cmp
push
sahf
btr
lds
rorl
popa
outsb
lret
push
leave
clc
xchg
inc
jge
mov
pusha
js
sbb
pushf
sahf
xchg
xchg
stos
xor
inc
jge
les
ljmp
int3
rolb
ja
cmpsb
dec
jnp
in
pop
and
mov
int3
jge
ja
or
bound
mov
fisubrl
rclb
ja
into
inc
pop
xchg
lds
add
stos
dec
fisubrs
into
test
test
ret
iret
fwait
cmp
dec
aaa
mov
ficoms
xchg
popa
sbb
jae
push
xor
sbb
mov
stos
test
sahf
sub
push
loope
fcmovb
daa
jg
push
negl
into
aad
ficompl
push
cwtl
and
sub
test
cmpsb
pop
add
pusha
xchg
pop
jno
loop
in
and
pop
mov
aam
shl
push
pop
pop
aad
mov
pop
inc
push
mov
dec
cwtl
stos
sub
mov
push
mov
dec
add
adc
add
loope
ljmp
in
enter
cmpsl
jg
xchg
xchg
addr16
in
movb
push
repz
mov
repnz
enter
jecxz
cmp
jge
fcmovnu
jbe
push
or
sub
sbb
pop
inc
sub
lods
fstps
stos
jl
cmp
push
or
adcl
negb
cmp
test
mov
loopne
add
xor
mov
stos
push
cmp
lods
fdiv
inc
cltd
out
test
jge
psraw
mov
arpl
add
xchg
insb
pusha
jg
adc
jecxz
push
xchg
and
or
add
pop
loop
arpl
or
cmp
mov
lret
mov
jbe
mov
mov
arpl
dec
pop
insl
mov
mov
lret
insl
fists
mov
mov
jl
stos
lcall
pop
jb
push
dec
pop
ret
into
add
insb
pop
lea
jmp
xchg
repz
mov
and
jmp
arpl
or
sarl
sbb
mov
mov
call
jae
jl
fwait
cmpsb
adc
sbb
ljmp
iret
cmp
jle
clc
sbb
aad
push
fcmovbe
negl
insb
hlt
mov
pop
adc
dec
loope
enter
xor
mov
push
test
js
outsb
mov
cmc
cmpsb
ret
outsb
popf
int
fdivrp
lret
mov
sub
cmp
scas
jecxz
jl
pusha
jbe
cmc
fwait
and
mov
test
fstps
stos
shrb
ror
mov
add
pop
mov
push
mov
or
push
sbb
aam
xor
out
out
cmpsl
lock
inc
rcrb
repz
ret
sub
jmp
cmp
xchg
sub
repz
in
sub
adc
sub
pushl
mov
xchg
sub
loope
bound
mov
lahf
xor
ret
fldt
jnp
and
test
roll
cmp
sub
pushf
inc
imul
cmp
mov
inc
rcll
movsl
pop
pop
and
and
jo
sbb
imul
sbb
subb
lods
mov
lock
daa
mov
ljmp
fwait
push
dec
jle
cmpsl
pop
sbb
mov
mov
adc
jle
xor
insl
cmc
rorb
loopne
and
dec
fsubrs
dec
jnp
lahf
daa
or
inc
mov
pop
pop
inc
cli
xor
ds
or
inc
mov
into
dec
push
mov
stos
imul
push
shll
stos
test
push
xchg
adc
jno
jo
inc
sub
inc
inc
push
clc
mov
fwait
cmpb
jecxz
aam
inc
loop
icebp
sarl
xchg
lea
ja
aad
out
in
xchg
adc
pop
subb
aaa
stos
sub
mov
popf
jns
jg
adc
movsb
popa
test
shl
push
out
mov
push
leave
fnsave
add
insl
gs
adc
jl
xor
outsl
sti
cmpsl
ja
in
fwait
sub
jg
jle
out
ret
icebp
in
popf
sbb
jg
mov
fadds
cmp
sub
shll
mov
insb
stc
lea
sub
xchg
jl
sti
adc
sub
roll
push
fwait
sbbb
jecxz
aad
shl
push
in
sub
jp
mul
hlt
iret
sub
mov
sarb
mov
add
inc
mov
enter
xchg
scas
outsl
and
stos
stos
jmp
push
mov
jae
gs
pop
sti
hlt
test
dec
mov
jb
pop
xor
add
sub
cmp
push
lods
inc
add
mov
mov
enter
daa
pop
mov
inc
cltd
jge
xchg
mov
inc
ret
mov
lods
clc
out
xchg
push
shlb
js
mov
mov
inc
inc
adc
pop
outsb
xchg
pop
or
cmpsl
inc
add
or
xor
sub
in
hlt
insb
xor
hlt
loop
fisubrs
icebp
stos
cmpsl
lea
or
mov
lret
mov
repnz
mov
mov
cmc
adc
pop
mov
loop
or
mov
push
xor
push
out
or
into
sbb
jo
insb
jno
ljmp
xchg
mov
lcall
adc
insl
or
xor
inc
inc
pop
arpl
sbb
cmpsl
xchg
sub
sbb
pop
xchg
and
enter
lret
pop
pop
sbb
int3
insb
loopne
add
rol
cmp
mul
lods
pushf
data16
test
aaa
mov
out
sbb
call
imul
lds
pop
push
into
pop
mov
dec
jae
sti
mov
or
insb
xchg
rorl
loop
cmp
ja
mov
sbb
mov
sbb
xchg
mov
pop
jb
fsubrl
nop
andb
and
cs
fisubrl
push
lret
stos
bound
fcomps
xchg
lock
jmp
sbb
jnp
sbb
ret
adc
insb
les
push
and
scas
and
cwtl
push
aaa
ljmp
mov
add
mov
cltd
and
sub
inc
sbb
cmovae
xchg
sahf
mov
push
rolb
mov
sti
into
mov
ret
bnd
ljmp
mov
push
push
mov
jmp
nop
cmp
lret
mov
and
out
bound
mov
clc
jmp
xor
jmp
movsl
cmp
dec
pop
mov
mov
mull
imul
xor
sub
xor
jno
ljmp
inc
adc
mov
mov
insb
lock
xchg
insl
js
mov
mov
pop
inc
jnp
or
jnp
pop
cmpl
in
lock
lock
cmp
ljmp
sti
or
mov
outsl
dec
ret
loope
andl
or
adc
fstl
xchg
pushf
rorl
xor
jmp
adc
ret
pushf
outsl
arpl
dec
push
mov
xorl
or
sti
jae
mov
pop
dec
arpl
or
xchg
jne
outsl
sbb
icebp
mov
sar
cmp
adc
mov
gs
cmp
scas
or
xor
push
jle
dec
jbe
mov
dec
lcall
and
and
outsl
inc
in
xchg
push
inc
cmp
aaa
push
scas
cmpsl
or
imul
adc
xchg
mov
lahf
rcrb
push
pop
repnz
jg
out
lcall
fwait
popa
insb
xchg
es
cld
pop
ljmp
es
and
stos
mov
enter
pop
fucomp
sti
push
mov
cmp
out
pop
mov
mov
mov
lret
dec
dec
sti
movsl
lods
mov
push
shrb
push
pop
jl
sub
stos
js
in
mov
js
cmp
cltd
xchg
xchg
xchg
jle
out
fiaddl
add
mov
cwtl
nop
jno
lahf
xchg
loopne
mov
test
push
jne
cmp
fimull
and
mov
lahf
pop
mov
sbb
dec
push
arpl
mov
into
xchg
sub
or
fwait
mov
jmp
imul
fmulp
outsb
jo
and
mov
hlt
xor
xor
push
jp
dec
jno
lahf
cld
dec
aam
pop
ljmp
lods
jg
dec
ret
inc
notl
xchg
sbb
xor
mov
int
push
sti
ret
mov
stc
xchg
outsl
fbstp
test
sahf
test
mov
pop
dec
xorb
fwait
data16
mov
pop
pop
push
pop
dec
mov
mov
pop
push
imul
sbb
es
sahf
jle
fwait
cmpsl
push
fxch
inc
sbb
and
fsubrl
sbb
cmp
or
xchg
sub
xchg
mov
jle
int
fs
sbb
jbe
js
mov
xor
jecxz
call
xor
jl
sub
pop
mov
dec
jno
mov
dec
jecxz
sub
ret
dec
dec
andb
inc
mov
jno
mov
xor
mov
in
push
mov
aad
jo
dec
pop
inc
push
push
lock
sbb
test
mov
sub
pop
out
cwtl
xchg
sbb
jb
jo
aam
mov
sub
jge
dec
xchg
repz
rcrl
insl
xchg
aaa
leave
mov
movb
dec
sbb
add
or
xchg
iret
lods
lret
and
icebp
mov
adc
mov
pop
mov
adc
enter
call
loop
fdiv
sbb
or
cmp
adc
hlt
push
in
mov
mov
mov
pop
insb
js
popf
aad
lret
cltd
mov
mov
call
cmpsb
sub
sub
shrl
lock
add
lds
pop
mov
loop
adc
inc
or
out
repnz
dec
and
bound
pop
fsts
in
mov
mov
insl
sbb
sbb
xor
scas
rclb
int3
int3
pop
iret
jbe
ss
les
dec
loope
mov
shr
mov
pop
and
movsb
and
int
add
fmull
jae
in
ss
cmp
cmc
in
jle
inc
lahf
pop
cmc
xor
fwait
or
push
aad
mov
int3
pop
xor
mov
test
lahf
icebp
pushf
push
push
add
out
sti
or
fisubrl
arpl
inc
and
into
xchg
mov
xor
or
fsub
sub
test
xor
jp
mov
add
lock
inc
sub
push
movsl
lods
jnp
xor
mov
mov
lea
or
out
in
dec
add
dec
loopne
loopne
and
add
push
mov
outsl
push
add
idiv
rorl
jae
call
das
lret
aad
sbb
jns
rdpmc
lock
imul
cmpsb
sbb
xor
inc
std
pop
repnz
filds
lock
icebp
sub
pop
xor
xchg
imul
push
inc
and
bound
daa
push
xor
pop
sahf
sub
mov
aad
and
out
mov
push
cmpsl
lcall
jne
mov
loop
pop
lock
andl
out
clc
or
or
push
cli
fdivr
mov
ss
and
mov
shrb
movsb
push
inc
pop
lret
fstpl
mov
dec
mov
ss
popf
in
lds
scas
je
mov
je
out
add
jbe
ret
or
add
imul
inc
jno
shrl
repz
ds
std
test
sub
cmpsb
pushf
lods
jno
inc
lock
push
pop
jbe
repnz
ds
in
push
xor
nop
les
and
cld
push
add
push
pop
xor
sahf
jmp
add
mov
mov
cwtl
mov
pushw
adc
push
cmc
inc
je
out
or
adc
ss
sbb
push
loopne
js
je
cld
sub
ficoml
dec
sub
pushf
sbb
fs
stos
jb
sbb
and
test
cs
dec
aaa
fldt
mov
and
fstps
jg
cmc
mov
aaa
push
mov
mov
jp
jae
dec
xchg
adc
cltd
std
stos
repnz
negl
xchg
std
lahf
mov
leave
cmp
js
and
sbb
shll
lods
mov
or
hlt
stos
cwtl
cli
ja
testl
sub
iret
mov
shlb
mov
xchg
sbb
cli
adc
insb
pop
shrl
lods
std
cld
mov
push
out
outsb
outsl
ja
repz
aam
stos
rorl
insl
xchg
mov
pushf
fwait
icebp
jae
mov
mov
push
scas
fistps
mov
rcrb
movsl
sahf
dec
jmp
sub
aam
sbb
ss
daa
into
arpl
aas
clc
adc
mov
push
out
in
fstl
test
cmp
test
xor
lret
lahf
jle
inc
movsl
int
popa
sub
cmp
rclb
stos
test
xchg
and
fsts
mov
cmp
sub
aam
ficompl
pop
pop
iret
shlb
scas
jno
jp
mov
inc
lods
jg
adcb
data16
mov
adc
mov
pop
sbb
xchg
sub
lcall
or
xor
cwtl
sub
sarb
fldcw
or
sub
dec
aad
sahf
or
test
lsl
xchg
mov
mov
cmp
sahf
mov
sub
xchg
aas
dec
xchg
jge
mov
mov
stc
je
sub
push
gs
pop
xchg
xchg
test
fs
in
pop
mov
mov
cmp
frstor
inc
jle
enter
push
and
loope
add
mov
push
in
pop
cmp
jmp
dec
shrl
jl
lea
dec
xchg
mov
incb
cwtl
cmc
jbe
inc
mov
out
xor
dec
ds
xchg
cmc
jno
arpl
cmp
and
aad
aam
or
and
fwait
add
je
pop
and
and
pop
xchg
and
sbb
sbb
adc
pop
aad
out
dec
pop
hlt
xchg
pop
cs
and
push
outsl
in
cmp
or
pop
es
sub
adc
add
push
scas
fs
sbb
addb
inc
jbe
add
rorb
and
push
jmp
inc
dec
sbb
cmp
mov
and
inc
mov
inc
repnz
jmp
xchg
inc
lds
popf
rcl
mov
out
ficompl
pop
aas
push
out
xor
mov
mov
xor
test
outsl
jbe
ljmp
adc
jbe
imul
lret
pop
xor
pusha
addl
pop
xor
js
out
sub
xchg
or
sub
fcoms
cmpsb
lret
dec
bnd
xor
orl
rclb
and
in
test
cmpsb
loop
or
outsl
pop
pop
aas
mul
mov
hlt
dec
test
fwait
repz
push
adc
nop
leave
fs
cs
mov
aaa
xor
cwtl
js
in
pop
cmp
jl
fucomip
cmp
dec
xchg
mov
adc
stos
aas
movsb
push
andl
xchg
jmp
sti
or
lahf
xor
in
pop
mov
dec
mov
std
xchg
in
bound
or
sbb
ret
mov
mov
rol
jo
icebp
decb
and
mov
popa
mov
fsubr
xchg
fisubs
nop
push
pushf
push
mov
testl
les
out
dec
int
repnz
fidivl
fs
mov
stc
and
cmpb
push
push
dec
rcll
cmp
mov
mov
or
outsb
lods
pop
mov
push
mov
sub
cmp
or
dec
pop
mov
mov
inc
xchg
ds
add
fdivrs
decl
ror
jo
stos
jo
fimull
in
fistl
sarb
in
jmp
push
mov
mov
mov
outsl
scas
testb
dec
je
jp
icebp
pop
nop
push
mov
dec
pushw
inc
scas
subl
test
xchg
pop
cltd
icebp
jg
cmp
cli
pop
orl
gs
divb
sub
fcomps
mov
sbb
pusha
lods
ja
adc
and
cmp
inc
xor
pushf
into
push
ficoml
mov
ljmp
jbe
aaa
in
xchg
lret
jmp
push
outsl
stc
cmp
add
imul
and
sub
jbe
sub
mov
add
out
mov
mov
or
aam
scas
jo
ret
cmpsl
movsl
data16
mov
data16
push
push
pushf
in
jno
sub
aaa
jl
fsubs
push
xchg
fstpt
pop
pushf
jb
loope
xchg
leave
jae
pop
cmpsb
dec
sbb
inc
lods
jne
or
adc
dec
pop
mov
sbb
push
leave
mov
adcb
pop
mov
stc
clc
lahf
cwtl
enter
or
loopne
pop
movsb
les
loopne
adc
cmc
shrl
shlb
lea
mov
dec
mov
hlt
icebp
push
rolb
pop
cmp
ss
test
ret
imul
dec
push
jnp
movsl
fidivrs
pop
out
shll
mov
movsl
aas
jnp
test
xor
mov
sbb
repnz
jb
jno
push
pop
pop
adc
xchg
push
loope
aad
jmp
inc
fisttpll
fs
fwait
push
sbb
sub
sbb
aad
sbb
pop
insl
insb
andl
outsl
adc
call
mov
pop
jmp
enter
push
and
jae
insb
pop
inc
std
movsb
sarb
adc
movsl
lahf
add
xor
push
or
icebp
xchg
or
lods
sbb
lea
nop
arpl
jno
dec
mov
add
mov
leave
xchg
dec
lock
lods
clc
mov
int
nop
mov
loopne
xor
outsl
pop
sbb
aas
fs
pushf
repz
jp
ljmp
fistps
or
test
int
sbb
sti
cli
into
popa
fdivrl
in
cld
std
push
jl
jmp
jl
or
test
pusha
jnp
jge
push
mov
add
stos
std
adc
cmp
sub
or
mov
leave
xor
out
insl
add
lcall
icebp
xchg
adc
push
or
xchg
insl
or
fstpt
aad
mov
jmp
lcall
nop
or
cli
push
in
xchg
xchg
mov
jb
jae
cli
test
ja
or
jns
add
ja
les
cmp
add
mov
jo
int3
inc
adc
mov
cmp
lcall
pop
inc
les
jge
inc
in
mov
loope
cmp
inc
roll
xlat
and
enter
imull
push
mov
mov
adcl
in
pop
mov
ret
in
outsb
push
psubsb
mov
ret
pop
cmpsl
ret
push
aad
pop
mov
lret
aad
xor
and
mov
ss
mov
xor
in
filds
or
mov
mov
pusha
clc
xor
out
jp
inc
f2xm1
mov
outsl
fscale
mov
bound
add
mov
xchg
cmp
pop
out
mov
and
jmp
aas
cs
sbb
xchg
sahf
dec
shll
pushf
cmp
pop
stc
mov
dec
leave
lods
xchg
inc
dec
inc
mov
loope
mov
mov
xchg
rcrl
lock
lods
repz
pop
mov
cs
cmp
dec
scas
notl
shll
push
test
xorl
btr
sub
lock
in
dec
add
xchg
jle
xchg
xchg
clc
cs
cs
insb
mov
test
lods
aad
xor
ljmp
jo
cmpsl
or
ret
xchg
push
ljmp
mov
pop
addr16
mov
scas
sub
cmp
cltd
jmp
fsubr
mov
roll
push
dec
jp
out
push
mov
call
add
jns
and
stc
or
mov
jmp
cmp
fnstsw
mov
cmp
clc
in
cmpsb
fnstenv
repnz
xor
shrl
fdivr
mov
pushw
andl
in
mov
adc
mov
leave
jp
inc
jecxz
icebp
mov
nop
std
idivl
xor
movsl
adc
inc
jae
mov
dec
lret
pop
cmp
xchg
cmp
xchg
movl
push
aad
sbb
mov
imul
pusha
pop
or
add
jne
push
aaa
out
mov
xor
das
push
cmp
aad
fwait
lcall
data16
lock
or
xchg
jo
js
mov
jbe
lahf
sbb
ja
push
insb
arpl
ss
daa
faddl
sbb
mov
pop
add
icebp
xchg
push
jge
stos
cmp
adc
setl
bound
cmp
jecxz
dec
lock
movsl
xchg
aad
popl
test
shr
imul
and
clc
ja
into
insb
test
xor
andl
ret
cli
mov
adc
push
add
aaa
je
push
xchg
dec
movsb
cwtl
iret
int3
adc
push
and
fnstenv
mov
stc
xlat
test
jp
cmp
mov
mov
aad
fwait
int3
das
shr
pop
mov
test
mov
pop
ja
inc
fwait
dec
cvtps2pi
pop
jb
cld
sar
mov
and
ficomps
pop
mov
aas
imulb
pop
inc
jp
xchg
std
insb
jno
aas
push
loopne
mov
xor
int
and
cwtl
jne
xchg
xor
xor
add
aad
stos
repz
xlat
push
xchg
lret
int
incb
dec
pop
push
jbe
icebp
into
and
aam
push
frstor
and
mov
insb
lds
dec
cld
pop
std
adcb
or
pop
fcomps
pop
dec
dec
imul
test
sti
pop
cltd
inc
es
test
push
fistpl
pop
dec
int3
push
xor
mov
xchg
pusha
pushf
hlt
xchg
mov
and
mov
test
adc
lds
rolb
add
into
in
das
sbb
inc
scas
icebp
dec
adc
lods
hlt
js
pushf
cmp
ljmp
scas
imul
xchg
imull
movsl
cmp
loop,pt
in
push
and
es
push
mov
or
outsl
mov
aas
call
gs
sub
pop
mov
xor
xchg
mov
movsb
and
mov
add
xchg
inc
cmp
mov
lods
enter
pop
adc
xor
lcall
cwtl
in
jno
cltd
stc
adc
sbb
into
aaa
inc
push
mov
pop
or
jns
push
imul
nop
adcb
xchg
jo
cwtl
mov
ja
xchg
push
notl
loope
mov
mov
mov
push
ljmp
sbb
mov
insl
inc
enter
push
cmpsl
push
aam
xor
sub
push
xor
add
cltd
xorl
or
mov
nop
jle
jae
sub
and
fcmove
mov
sub
arpl
ss
mov
ja
pusha
jnp
shrb
xchg
es
xchg
ds
mov
cmpsb
pop
jle
jnp
cmp
and
xchg
mov
ss
fdivs
aam
jo
inc
pop
jno
cmp
dec
loope
sub
lret
shlb
mov
sbb
cmp
dec
pop
repnz
loope
in
sub
lcall
loop
or
xchg
xchg
jle
mov
cli
mov
xor
je
sar
xor
mov
xchg
pop
cli
shrb
lds
repz
jge
push
jle
xlat
divl
or
sbb
test
ret
cld
pop
in
and
inc
xchg
xchg
xchg
aam
push
mov
inc
xchg
stc
mov
fcoml
lods
ja
scas
fdiv
lahf
mov
shrl
xchg
loop
xor
inc
mov
jmp
repz
jns
push
push
xchg
aam
jae
pop
in
pop
ja
inc
ja
cmpsb
in
xchg
fisubl
mull
call
lcall
jns
push
push
mov
or
xor
add
dec
jp
inc
cmpsb
mov
imul
movsb
mov
cwtl
sbb
cltd
or
cmp
popa
cmp
pop
adcl
fisubs
scas
sbb
out
cs
jecxz
inc
dec
adc
sbb
lret
pop
fsubrl
xorb
lods
xor
gs
sub
xchg
dec
cmp
aaa
fucom
xlat
pop
test
rorb
mov
stc
movsb
mov
gs
scas
movsl
test
lods
add
push
lds
clc
mov
adc
mov
fwait
popa
jle
pop
or
mov
dec
outsl
dec
adc
sub
test
mov
js
push
mov
sub
xor
aam
mov
xchg
sbb
out
mov
cmpsl
sbb
sbb
fs
and
daa
imul
adc
or
xchg
mov
sarb
push
or
xor
sti
out
cwtl
xchg
and
int3
fwait
sbb
pop
je
popa
adc
rcr
outsl
jecxz
rolb
xor
push
push
repz
arpl
cmp
mov
ja
mov
ret
lods
pop
jecxz
xchg
inc
push
aad
mov
inc
loopne
cmp
sahf
and
xchg
add
scas
roll
and
js,pt
xor
repz
int
incb
jns
jecxz
lock
bound
sub
pop
xlat
adc
fst
mov
adc
or
push
addr16
fidivl
xor
push
adc
mov
sbb
sbb
sarb
xor
jno
test
push
jb
mov
in
xor
jp
xorl
push
cmp
or
repnz
xlat
mov
pop
xchg
out
ficoms
inc
icebp
clc
out
add
cwtl
outsb
imul
fwait
insl
xor
mov
std
jnp
hlt
lea
mov
ret
scas
js
pop
popf
scas
cmp
sub
sbb
push
xlat
sbb
pop
jecxz
mov
jb
out
mov
pop
or
hlt
lods
push
cltd
clc
fidivrs
addr16
mov
mov
jecxz
and
hlt
cmp
jle
xor
jno
or
xchg
xlat
sub
jne
and
cmp
getsec
imul
push
stos
cmc
push
cmp
jge
xchg
int
and
loope
cmp
ror
xor
mov
outsb
pop
lahf
lods
mov
into
inc
xor
push
pop
adc
pop
mov
mov
sti
rcll
std
mov
test
in
js
data16
jg
test
stos
pop
or
loope
jne
mov
sub
aas
mov
add
sub
xchg
fdivrs
les
mov
repnz
out
or
xor
and
sbb
aam
jno
dec
adc
xor
leave
or
xor
sbb
push
out
mov
outsl
loopne
lods
mov
sbb
sub
push
fmull
cmp
cmp
movsl
jecxz
mov
jae
or
xchg
inc
repz
mov
mov
sti
push
shlb
and
push
xchg
mov
jb
mov
and
add
out
adcb
in
lods
add
jo
ss
int3
mov
sbb
insl
fisttpll
or
push
push
jne
in
pop
adc
dec
or
mov
cmp
fs
cs
data16
ror
shl
arpl
scas
and
add
push
decl
mov
aam
cmc
jl
pop
dec
scas
test
stos
in
sarb
scas
inc
xchg
insl
dec
scas
ja
stc
das
pop
lods
xchg
jne
in
sub
jno
pop
cli
fwait
cwtl
imul
jl
fildl
ds
fdivrl
mov
lock
inc
rol
jl
cmpsb
xchg
xor
jp
adc
mov
mov
sti
add
ds
loopne
jge
out
fisubl
inc
aas
scas
pop
ret
daa
cli
cmp
cmp
ja
push
push
loopne
fcoml
sub
aas
cltd
fimuls
in
and
jg
sbb
sbb
ds
jnp
lods
dec
cmp
cmp
out
in
or
lea
lods
cmp
aad
inc
add
xchg
adcl
out
jle
sbb
mov
inc
push
pop
inc
push
mov
mov
xor
mov
mov
insb
shld
or
sub
mov
mov
pop
dec
or
cwtl
pop
rorl
rcll
sbb
roll
cmp
lret
sub
out
push
jge
std
test
aam
mov
clc
and
sbb
out
aad
cmc
sub
sbb
adc
cld
inc
rcll
lock
rol
xor
subb
cmpsb
mov
cwtl
scas
ds
adc
sbb
mov
cld
mov
gs
push
and
or
mov
gs
int3
xchg
pop
aas
aam
sahf
shlb
popa
push
movsb
pop
ss
inc
push
sbb
imul
lock
test
xor
push
sbb
pop
pop
or
sbb
leave
call
loope
mov
mov
outsl
jmp
dec
pushf
ret
jb
loope
js
shrl
jb
pop
movsb
and
ds
jb
sub
add
dec
mov
sbb
dec
sub
cmp
xor
daa
push
pushf
ss
lds
dec
pushf
sarb
js
jns
mov
loopne
inc
lock
xchg
mov
xlat
jno
and
fistps
pop
dec
sbb
mov
and
xchg
mov
loope
enter
lahf
lock
imul
push
pop
pop
mov
mov
dec
js
xor
xor
lahf
add
cltd
pop
add
mov
iret
lahf
shrb
dec
xchg
mov
test
adc
rorl
xchg
or
jbe
add
mov
mov
xor
fidivrs
push
loopne
addr16
shlb
sub
sbb
das
sbbb
jno
mov
add
pusha
xchg
jae
das
push
mov
cmp
inc
jbe
jmp
ljmp
je
imul
fcomps
negl
cmp
push
xor
sub
adc
mov
dec
inc
pop
adc
mov
fsubr
lahf
lds
add
pop
aad
or
xor
mov
lock
dec
scas
ss
xor
loope
push
stos
jl
loope
inc
pop
ds
in
loop
paddsw
sbb
mov
mov
fcomps
sub
jg
testl
fisttpl
xchg
imulb
pop
les
or
cld
movsb
cmp
in
fnstenv
jl
insl
pop
cmpsl
loopne
sbb
arpl
out
adc
sbb
cmp
ror
pop
out
add
sub
dec
das
and
movsb
sub
dec
jecxz
dec
adc
adc
jle
pop
pop
xorb
jmp
test
xchg
sarl
cmpsb
mov
jnp
fwait
bound
xor
sub
insl
and
sbb
repnz
mov
xchg
dec
mov
sub
fmull
inc
loopne
pop
xor
insb
sbb
xor
sbb
mov
int
or
aas
addb
mov
rolb
jnp
je
aad
xchg
jno
jmp
xchg
pop
sbb
fsubr
xchg
cli
ret
arpl
sbb
in
xor
hlt
cmpsl
test
sbb
in
sbb
or
mov
mov
lcall
sbb
xor
hlt
push
outsl
movsb
mov
in
rorb
mov
hlt
add
cmp
fstl
loope
mov
ja
insb
pop
rolb
jle
insl
lds
lods
enter
aam
mov
lcall
cmp
xchg
movntps
mov
call
adc
hlt
jne
fdivs
ret
or
out
mov
mov
call
cwtl
adc
insl
sarl
mov
std
leave
sbb
int3
aam
ret
inc
or
mov
insl
pushf
popa
xchg
push
test
push
jl
adc
or
cmp
cmp
lds
scas
stos
mov
cld
ss
outsb
arpl
mov
mov
xchg
outsl
adc
mov
jmp
es
lock
es
into
dec
insb
xor
mov
fnstenv
popf
test
pop
rcr
stos
push
idivl
lcall
enter
mov
enter
cmp
cmpsb
jmpw
vpminsw
jmp
xchg
lcall
mov
addb
and
pusha
or
add
mov
fldt
dec
dec
jb
out
pop
mov
jbe
mov
dec
mov
mov
aad
pop
call
pop
sub
and
sti
imul
sub
mov
jle
mov
in
insb
in
sbb
test
rep
aam
or
dec
push
gs
and
mov
sti
pop
mov
mov
mov
loopne
hlt
sti
sarl
mov
jnp
cmp
pushl
js
stc
jle
in
pop
or
cmpl
aam
dec
xor
or
fdivr
sbb
and
pop
pop
ja
cmp
adc
push
inc
jo
fnsave
dec
aas
mov
mov
cmp
mov
leave
jbe
cli
daa
test
filds
pusha
push
push
insb
mov
jbe
mov
lret
sbb
xchg
jno,pn
adc
mov
pop
jmp
fistps
mov
pushf
nop
push
sahf
ret
clc
cmp
or
sbb
subb
cmp
out
stos
ljmp
mov
and
push
mov
add
les
fs
frstor
mov
adc
mov
jmp
adc
mov
or
cli
lods
cmp
cli
or
push
xor
push
or
ffree
addl
push
or
jle
cmpsl
push
add
mov
imul
into
push
add
push
dec
inc
pop
daa
adc
addr16
out
mov
popa
xchg
cmpl
pop
dec
test
mov
outsl
mov
pop
jnp
mov
cwtl
mov
pushf
inc
mov
addr16
lds
dec
outsb
or
aaa
loop
das
jmp
mov
mov
pop
sbb
out
pop
mov
shll
cmpsb
in
addr16
jo
aaa
gs
add
adc
out
pushf
add
jle
mov
nop
decb
inc
pop
inc
daa
mov
mov
pop
jle
mov
hlt
dec
add
sub
push
jmp
sub
xchg
jg
nop
andb
add
mov
adc
mov
loop
and
cld
fsubrs
mov
sbb
xchg
cmpsb
cltd
gs
mov
int
inc
sar
shll
fst
sub
xchg
mov
inc
icebp
cmp
or
pop
mov
je
jae
insl
gs
hlt
and
pop
jp
push
int3
jg
xchg
push
push
xor
xchg
out
les
xchg
sahf
addr16
xor
fmuls
shlb
xchg
loop
mov
in
movsl
jle
xorb
push
fstp
repz
or
rep
or
sbb
insb
hlt
mov
push
jge
add
xchg
mov
dec
fpatan
dec
or
push
add
adc
lds
mov
fistps
outsl
dec
inc
out
xchg
mov
lea
or
imul
out
add
jno
push
xor
push
cmpsl
push
adc
cmp
xchg
fbstp
out
into
wbinvd
fistl
repz
push
into
fstps
add
aas
dec
rcr
es
das
stos
int
push
add
adc
pop
je
xchg
sbb
rcll
push
js
dec
push
test
outsl
enter
scas
mov
das
das
fldt
push
push
into
or
sub
in
popf
testl
popa
lret
xchg
push
and
das
out
dec
hlt
adcb
inc
inc
mov
lret
sbb
cwtl
xchg
pop
movsl
aam
xor
adc
jp
scas
push
std
sti
xchg
clc
mov
cs
mov
lea
adc
push
push
and
js
xor
xchg
xchg
in
xor
in
and
push
jge
hlt
sbb
pop
jp
arpl
sub
xchg
fstpt
inc
jl
fcompl
test
push
xchg
loop
xor
add
cmp
dec
inc
sbb
pusha
scas
stos
xchg
rcl
add
cld
into
inc
repnz
and
mov
dec
adc
jmp
mov
add
mov
popa
cmpsb
add
inc
loope
roll
into
sub
inc
sbb
mov
rorl
xchg
icebp
out
sarl
mov
push
xchg
aaa
mov
dec
sub
sbbb
mov
out
sub
sub
fildl
xchg
cwtl
jp
mov
cld
movsb
fldenv
pop
inc
ja
hlt
mov
xlat
stc
in
xlat
aaa
dec
popf
mov
cwtl
fidivs
movsb
or
mov
divl
rcrl
fsubrs
adc
mov
mov
mov
sbb
add
cmp
ret
sbb
lods
jg
mov
loopne
std
inc
xchg
lea
dec
xchg
icebp
jp
jnp
out
int
sub
jl
sub
rcr
xchg
fwait
adc
mov
jmp
scas
pop
lds
std
les
dec
cmp
dec
mov
subb
enter
enter
pop
mov
scas
jmp
inc
push
aaa
mov
stos
mov
repz
shlb
sbb
push
int
stos
decb
and
mov
push
adc
jge
or
stos
es
push
pop
jae
pop
out
cmp
xor
idivl
stos
mov
sub
aad
xlat
cmp
pushf
imul
add
stos
iret
push
xor
xchg
sub
lock
iret
inc
fmulp
jns
push
inc
inc
pop
dec
pop
xor
js
insl
add
push
jnp
xor
pop
cmpsb
enter
sbb
add
add
cmp
sub
hlt
pop
pop
cs
sub
cmpsb
sbb
in
mov
addr16
xor
push
sub
mov
aad
or
movsl
jbe
inc
mov
pushf
into
popa
stos
repz
xlat
dec
dec
fyl2xp1
add
adc
addr16
pop
and
adc
cmp
ret
pop
repnz
fdivs
shr
sub
mov
ret
push
jb
jae
repnz
ja
pop
sahf
je
les
repnz
out
pop
jne
orl
xchg
inc
cmp
mov
enter
inc
mov
daa
insl
fists
mov
cmp
jge
add
mov
shrb
xlat
jae
outsl
jg
dec
test
sahf
inc
cmc
fisttpll
push
mov
xor
int3
lret
or
adc
scas
mov
call
gs
xor
and
in
aam
or
xlat
add
leave
pop
sub
push
add
and
mov
arpl
test
jl
mov
aas
clc
outsb
movsb
dec
dec
jmp
add
ja
hlt
jmp
test
add
mov
mov
xor
mov
pop
jne
pop
outsl
xor
callw
in
loope
add
mov
and
mov
in
xchg
adc
push
in
ror
adc
fistl
lock
das
xchg
popa
inc
push
jnp
dec
ds
nop
pop
jo
fincstp
loop
inc
test
xchg
jnp
dec
jnp
or
mul
fwait
scas
jl
ss
test
mov
jg
lea
loopne
xor
stos
ret
movsl
stos
repnz
inc
jge
or
clc
shlb
mov
mov
rcll
out
lcall
inc
pop
scas
hlt
sbb
sub
fnsave
lret
and
xor
lahf
jne
repnz
cli
inc
inc
pop
hlt
inc
ja
sub
shlb
cmp
cmp
ds
add
les
push
cmpsl
fmull
mov
popf
test
mov
jb
jbe
clc
mov
adc
mov
add
xchg
je
xor
dec
and
push
lods
sbb
xchg
fs
call
icebp
push
mov
cld
shrl
mov
sub
mov
jg
fcomps
mov
mov
push
lods
lds
adc
roll
scas
mov
outsb
jecxz
push
fxam
fbld
dec
sti
arpl
pop
push
in
fidivs
pop
dec
sbb
lods
mov
fwait
jo
mov
sbb
stc
fdivrs
mov
dec
jl
scas
dec
and
or
aaa
out
jp
push
xchg
cmp
in
in
ljmp
dec
dec
aas
add
dec
push
jl
int3
or
je
and
sub
das
sbb
pop
adc
add
push
jmp
pop
jb
mov
and
es
pop
xor
ljmp
jp
mov
shll
mul
movl
dec
mov
outsl
test
bound
mov
mov
push
in
pop
mov
loopne
adc
adc
ret
xor
mov
push
movsl
sahf
push
pop
leave
dec
outsb
rolb
adc
xor
jmp
ficomps
test
fsubr
add
cmp
lcall
push
je
orl
jmp
pop
inc
jno
mov
adc
fdivrs
xchg
mov
mov
or
pushf
lea
dec
mov
in
jmp
jb
adc
fcoms
outsb
loope
lods
adc
aam
fdivp
fs
cmp
ret
daa
jmp
sbb
hlt
push
xchg
fucomi
mov
pushf
xchg
aaa
mov
push
sbb
mov
stos
pushf
ss
arpl
idivl
cmc
cmc
push
mov
dec
je
ja
pop
pop
adc
aam
pop
subb
sub
into
mov
jnp
lods
fdivrp
int3
xor
pop
std
repz
ss
std
scas
mov
inc
cmc
das
push
push
lret
lds
mov
mov
mov
insb
lock
fsts
xchg
or
mov
jl
lret
lret
mov
or
nop
sub
imul
cwtl
mov
les
add
insb
mov
jne
dec
out
or
jb
push
fs
pop
or
xor
mov
inc
fstl
xor
out
adc
stos
pop
ret
lret
notl
sahf
inc
push
dec
push
shlb
mov
icebp
jne
int3
inc
or
sub
aas
and
fstl
mov
inc
ret
ja
dec
jg
lret
pop
mov
mov
or
shlb
sub
dec
push
xchg
ds
shr
pop
dec
andb
mov
jge
push
js
cmp
pushf
push
stos
mov
clc
mov
aas
fildll
adc
pop
aas
mov
notb
out
les
addr16
sahf
lea
out
cwtl
rclb
xlat
xlat
sbb
jp
or
sar
loopne
icebp
lret
xor
shl
push
pusha
or
in
mov
in
push
mov
enter
repz
and
cmp
mov
pop
pop
lcall
sub
xor
pop
cmpsb
or
aaa
dec
inc
or
sub
fstl
xor
xchg
and
nop
jb
nop
and
call
adc
inc
mov
dec
cmp
pop
jp
ja
ja
movsb
push
mov
mov
sbb
cltd
rolb
jne
mov
or
inc
sbb
out
fwait
decl
std
clc
std
out
jecxz
je
dec
or
popf
rcl
dec
push
xchg
inc
xchg
call
dec
std
stos
cmp
shll
daa
mov
dec
lock
mov
imul
mov
das
pop
pop
insl
cmp
inc
and
jns
jae
pop
lret
outsb
fcmove
popf
xor
dec
repz
jbe
sbb
or
jne
jae
and
in
pop
roll
push
sbb
cmc
xchg
in
pop
mov
and
rol
mov
push
jnp
mov
incb
aas
push
mov
or
sbb
push
mov
sub
stos
jb
gs
stos
mov
shrl
push
lds
cs
mov
xor
into
test
cmp
jne
int3
fsubp
cmp
and
fstl
mov
lods
test
mov
mov
imul
inc
enter
outsb
aas
addr16
jl
xor
cmp
mov
mov
inc
jbe
test
frstor
iret
push
cmpsb
das
adc
arpl
stos
jle
cltd
and
mov
shld
jmp
in
jne
xor
in
mov
push
hlt
fiaddl
sbb
push
fsts
leave
push
sub
mov
arpl
and
mov
cwtl
mov
addr16
xor
or
clc
inc
inc
pushf
arpl
or
loop
mov
pop
pop
xchg
mov
addr16
jge
jmp
add
xchg
leave
jbe
sbb
xchg
daa
dec
jno
fdecstp
jae
jmp
aaa
testl
inc
nop
xchg
ds
pop
and
jb
mov
or
jmp
fstl
xor
xchg
jbe
icebp
mov
mov
pop
lahf
and
xchg
in
xchg
xchg
daa
call
xor
xor
les
in
dec
mov
xor
mov
mov
and
cmpsb
and
inc
and
or
pop
pushf
xchg
loope
subb
xor
jne
inc
lar
xchg
sbb
xchg
pop
in
sub
or
mov
movsl
out
push
or
push
sub
mov
sub
push
in
fisttps
aam
out
shll
xor
stos
pop
int3
lock
xor
adc
mov
push
pop
inc
shr
rcl
sub
stos
and
das
mov
cmp
xor
sbb
and
mov
pop
sbb
mov
bound
xchg
cmp
fcoms
nop
mov
outsb
xor
jmp
mov
push
xlat
mov
push
xchg
mov
scas
jae
mov
jmp
sahf
inc
mov
lcall
inc
iret
pop
pop
aad
loopne
test
stc
pop
mov
push
fwait
repnz
push
xchg
jno
in
mov
jecxz
mov
xor
mov
jb
stos
pop
lcall
and
icebp
cmp
inc
jbe
rol
aam
sarl
xchg
fwait
inc
jne
shlb
mov
sbb
sub
icebp
pop
sbb
pop
push
aaa
jle
pop
cltd
xlat
mov
pop
fs
test
add
iret
popa
inc
xor
cli
popf
mov
lahf
add
mov
or
xchg
cmp
andb
mov
das
sbb
ss
xor
adc
fldt
inc
inc
into
or
adc
xchg
cmp
push
push
jg
cmp
xchg
and
stc
loop
repnz
push
int3
dec
mov
std
cmp
out
push
daa
addr16
add
push
icebp
add
cmpsl
loope
ljmp
push
xchg
ljmp
mov
test
mov
setle
mov
jmp
in
hlt
mov
inc
scas
mov
add
xorb
daa
pop
add
addl
test
fistpl
push
scas
sub
test
xor
lea
daa
lods
push
imul
push
test
loop
pop
dec
icebp
rcrl
sbb
loop
mov
pushf
popf
mov
nop/reserved
add
jmp
cmpb
cmp
cmp
shll
sub
sub
insl
adc
pop
cmp
mov
inc
loopne
roll
mov
rolb
out
push
sbb
imul
mov
mov
sub
sbb
mov
imul
cmpsb
fnsave
outsl
inc
cli
hlt
test
add
xor
jmp
out
cmp
aas
adc
ja
mov
fidivs
xlat
fistps
mov
fcompl
popa
jo
mov
int
loope
adc
adc
lock
adc
push
fs
mov
push
je,pn
enter
and
sbb
fnstenv
mov
in
inc
or
shr
aas
jge
xchg
out
cltd
jmp
push
mov
mov
xchg
scas
pop
sbb
cmp
dec
std
cmp
icebp
stc
sub
xchg
mov
add
icebp
subb
fisubs
cmp
and
jne
jp
fdivl
out
scas
inc
pop
cmp
inc
shll
cmp
cmp
lock
idivb
mov
into
aas
stos
lods
jno
out
js
jbe
icebp
jle
xchg
mov
cltd
add
xchg
movsl
sub
pop
adc
cs
adc
idivl
sbb
xchg
in
cwtl
arpl
cmpsl
mov
jmp
mov
bound
mov
adc
sub
push
dec
fldl
addr16
std
scas
cs
adcb
dec
std
and
sub
lock
es
push
jge
jnp
inc
mov
into
sub
push
flds
xchg
pop
ret
jge
shr
add
dec
push
mov
cmpsb
test
in
pop
shlb
xor
outsb
aam
out
mov
mov
inc
push
sbb
xor
and
imul
push
jp
sahf
add
pop
inc
ficompl
ljmp
dec
inc
mov
outsb
sbb
jo
mov
ffree
or
sbb
fdivl
sub
push
aas
cli
in
push
fcmovb
xchg
inc
test
data16
add
call
jl
enter
inc
sahf
pop
out
xor
aas
mov
ss
push
adc
fwait
cwtl
pop
ljmp
sub
les
dec
xchg
movsb
test
and
shr
out
insl
push
xor
and
pop
movsb
and
jno
test
push
push
cmp
mov
and
jne
inc
cs
mov
jl
lods
adc
mov
mov
mov
mov
cwtl
add
cmpsl
icebp
mov
hlt
pop
imul
int3
sbb
inc
or
mov
mov
add
sub
pop
shlb
jl
add
imulb
gs
scas
js
popw
iret
pop
sub
xchg
nop
out
aam
je
inc
scas
mov
mov
sub
mov
sub
vsubsd
mov
mov
enter
inc
shll
lods
adcl
mov
bound
add
push
jnp
inc
cmp
nop
and
je
repz
in
push
aas
cmp
pop
and
inc
mov
add
adc
pop
add
xor
ret
test
push
jl
test
ret
push
in
fisttps
jnp
xor
scas
xor
xchg
cmp
cltd
xlat
xchg
test
testl
mov
fildll
lret
insb
mov
push
dec
cltd
jns
cltd
ja
cli
std
in
inc
jg
jmp
jns
push
shlb
sub
xchg
inc
std
lods
sbb
push
out
xchg
dec
push
adcb
push
test
mov
roll
push
or
mov
aas
ljmp
movb
or
pop
adc
leave
outsb
sub
lret
scas
lret
aad
imul
inc
loop
mov
test
pop
aad
add
aaa
test
jbe
stos
ficoms
mov
aaa
mov
cmpsl
repnz
push
jle
or
dec
push
jae
and
and
into
leave
xchg
cmp
sub
sbb
xlat
sbbl
push
push
mov
movsb
dec
xor
push
fidivrs
es
dec
xbegin
daa
lahf
cwtl
push
adc
mov
xchg
cmp
mov
pop
jne
sahf
jno
enter
into
push
int3
repnz
lcall
loop
and
xchg
ds
mov
out
and
dec
imul
andb
mov
xchg
std
std
and
adc
sahf
adc
xchg
cmp
jns
test
test
push
aaa
and
movsl
das
stos
call
mov
sbb
lods
sbb
inc
or
aad
push
aam
or
sub
cli
clc
das
jecxz
xchg
sbb
push
mov
stc
out
push
inc
loopne
cmp
shlb
into
imul
bound
jae
mov
ret
fwait
icebp
aam
jmp
aaa
sbb
jg
shrl
daa
imul
sub
dec
push
push
int
jecxz
clc
adc
scas
loop
decl
ficoms
mov
fldcw
fistpll
pop
inc
jae
psrld
lret
dec
inc
sub
mov
and
add
pop
pop
pop
outsb
push
inc
lea
andb
fisubl
addb
or
call
and
push
test
shll
adc
push
or
xchg
mov
imulb
xchg
push
lret
or
out
lods
push
scas
push
push
xchg
jl
cld
out
dec
push
mov
inc
cmp
aam
lret
mov
hlt
imul
jecxz
inc
leave
mov
movl
xchg
jne
arpl
ljmp
pop
or
mov
das
cmp
mov
jns
cmp
lods
lods
lea
pop
xor
int3
cmp
fbld
adcb
shlb
xor
test
jbe
cmpsl
inc
loopne
fdivs
push
xchg
jo
ror
and
movntps
ffree
push
inc
and
jg
clc
fadds
inc
xchg
aam
push
ret
sub
fiaddl
call
imul
movsl
mov
ds
cmpsb
cs
aad
or
mov
sbb
out
imul
dec
jno
push
inc
xchg
inc
mov
out
fs
fisubrs
lods
jo
outsl
dec
and
test
xchg
sbb
sub
inc
stc
lahf
cwtl
push
jl
mov
mov
mov
das
gs
push
cld
mov
je
xchg
cmp
pop
xchg
inc
enter
ss
push
cwtl
mov
aam
or
cltd
or
outsl
pop
fadds
fwait
xchg
stos
stc
mov
leave
sti
imul
shrb
fistpl
mov
cmp
sti
sbb
xchg
ljmp
mov
stos
mov
add
mov
xchg
or
mov
jmp
xlat
xchg
sub
out
cmpsl
mov
jnp
out
inc
mov
outsl
pop
cld
cmp
cmp
push
adc
repz
pop
xlat
mov
add
std
mov
adc
dec
int3
insl
ret
inc
pop
outsl
cmp
jns
cwtl
jecxz
call
subb
lcall
or
adc
aaa
push
outsl
pop
sbb
jne
and
xchg
fistps
sub
mov
xlat
jae
js
sub
sub
and
add
ret
xor
int3
jg
mov
out
outsb
add
out
pop
arpl
fisubs
fdivrs
in
xchg
fdivs
stos
imul
fsubrl
mov
adc
jb,pt
dec
xor
ljmp
sub
ss
lea
mov
and
pop
daa
fs
mov
mov
outsl
pushl
jo
pop
inc
std
fmuls
fwait
jno
push
ss
push
icebp
jge
sub
call
inc
or
cmpsb
dec
sahf
pop
das
sbb
and
push
xor
pop
pop
xchg
sbb
push
out
sub
ret
cltd
rorl
sub
inc
lret
ficomps
aaa
lods
mov
jnp
mov
push
and
fdivrs
xchg
inc
jno
in
and
int3
mov
mov
xchg
cmp
xchg
pop
adc
jno
scas
testl
lods
and
mov
sbb
test
pop
sbb
inc
jge
pop
jnp
pop
xchg
lcall
xlat
pop
add
mov
sub
cmp
data16
adc
mov
pop
or
pop
scas
je
pop
test
add
bnd
lock
fmuls
dec
cmpsl
push
clc
lods
push
and
dec
pushf
pop
int3
jb
fwait
and
hlt
stos
sahf
push
xchg
enter
inc
imul
lcall
clc
jnp
mov
dec
xchg
add
xchg
sbb
cltd
loope
jmp
fcmovnu
leave
and
mov
popa
inc
jg
lahf
fs
stc
add
leave
les
lds
std
mov
mov
lahf
daa
dec
outsb
push
std
pop
and
daa
mov
inc
int
push
mov
dec
sbb
mov
std
cmp
jno
inc
adc
loope
fs
outsb
lods
xchg
adc
mov
fucom
ret
mov
inc
shll
dec
rolb
sub
shrl
xor
fnstcw
fists
fs
int
sahf
mov
xchg
and
sbb
pop
out
loopne
sbb
test
outsl
xchg
sbb
cmpsb
pop
inc
xlat
inc
pop
out
push
push
jne
pop
scas
jmp
mov
cmpsl
mov
push
and
add
mov
fidivrs
test
lret
xchg
leave
dec
inc
mov
nop
mov
push
mov
cli
mov
sbb
cmp
push
les
out
aam
fldcw
and
sahf
rolb
sbb
mov
inc
mov
pop
mov
mov
insb
hlt
icebp
clc
lcall
push
iret
mov
pop
and
jecxz
in
icebp
decl
ss
lcall
pop
fs
inc
addr16
mov
lcall
adc
xchg
fs
test
aaa
add
adc
pop
enter
in
inc
inc
sbb
sub
or
mov
jmp
xchg
out
xor
movsb
adc
jge
popa
cmp
in
mov
faddl
dec
pop
shll
aam
lahf
lea
inc
mov
sahf
xor
repnz
push
pop
lret
in
cmp
mov
int
inc
inc
cmp
add
push
sbb
mov
sahf
cmp
fnstsw
loop
out
jns
push
or
lret
add
xchg
xor
loope
pop
or
inc
les
fcompl
inc
mov
mov
out
movsl
sarl
icebp
jecxz
rcr
add
push
push
loopne
push
mov
mov
sbb
cmpsb
xlat
arpl
repnz
lods
pop
jmp
add
cmpsl
add
mul
les
dec
dec
push
push
movsb
loopne
iret
and
ret
push
sti
daa
jns
and
leave
int3
je
and
cli
sub
aas
jmp
mov
stos
add
xchg
or
inc
sahf
fs
fwait
scas
aad
jns
mov
xlat
negl
test
test
jp
das
pushf
btr
ret
cmpsb
sub
cmp
mov
das
or
mov
or
adc
sub
add
xor
pop
pop
scas
les
outsl
test
push
cld
add
std
jo
adc
sar
jecxz
data16
out
cld
lea
sti
or
push
jmp
popa
aam
jl
mov
and
mov
fwait
pop
add
cmp
in
ss
mov
mov
inc
dec
es
insl
adc
fwait
xlat
sarl
cmp
dec
fdivrs
mov
fs
jg
push
sbb
aas
xchg
push
mov
arpl
sub
repz
jp
sbb
int
repz
inc
out
loop
pop
bnd
pop
jg
pop
xchg
sti
mov
rorb
daa
in
mov
sbb
imul
mov
ret
cwtl
sahf
insb
add
loopne
inc
mov
adc
add
test
inc
inc
cmp
movsl
insl
out
push
mov
out
add
test
xor
add
mov
xlat
push
std
add
jnp
push
scas
jge
pop
mov
sbb
sbb
push
repnz
addl
inc
in
jecxz
pop
loop
push
mov
cmp
je
pop
inc
aaa
push
jge
lret
sub
add
mov
lcall
jnp
push
mov
fbld
mov
mov
cmc
push
mov
rcr
mov
fsubs
jecxz
xchg
jge
lods
sub
pop
jne
icebp
enter
pop
popa
pop
add
fdivr
jnp
test
ret
mov
xor
jle
std
lea
mov
hlt
cwtl
mov
push
pop
fistpll
sub
sbb
fistpl
dec
divl
and
lock
in
lock
ret
sar
aaa
xor
pop
aam
xor
mov
mov
mov
mov
iret
pop
into
mov
push
into
mov
aam
cmc
jae
aas
aaa
fstps
push
and
out
jecxz
adc
push
sbbb
xor
leave
in
cld
decl
out
xchg
mov
mov
jbe
repz
mov
inc
les
add
and
jmp
pop
or
loopne
xchg
adc
or
test
add
sub
fwait
push
jp
sub
cwtl
inc
mov
adc
call
adc
pop
push
outsl
fsubr
jbe,pn
push
js
leave
popf
sub
push
repnz
rorl
or
jno
mov
scas
mov
fcompl
in
pop
push
je
mov
jge
jecxz
and
sub
lds
sub
icebp
sbb
nop
inc
push
invlpg
lcall
enter
sbbl
push
loopne
cwtl
call
fs
out
loop
loope
cmpsl
mov
shlb
sahf
jno
push
stc
ficompl
jl
jnp
aaa
shld
push
jge
int
xchg
jecxz
ret
pop
call
jmp
cmp
xor
mov
or
mov
lds
and
mov
nop
sub
idivl
pop
inc
data16
jmp
mov
sbb
jg
sahf
lahf
lods
add
or
rorb
sarb
mul
loope
mov
cs
push
test
out
popf
rolb
std
leave
inc
aas
inc
push
fnstenv
mov
dec
add
sub
or
lds
mov
or
mov
in
loop
jle
and
aas
fisubrl
and
push
adc
sub
xlat
mov
pop
jno
lahf
jmp
cmp
int
lcall
out
push
xor
adc
cmc
fs
sbb
pop
outsl
and
iret
xchg
or
and
or
mov
sahf
clc
repz
mov
jae
out
rcll
sbb
outsb
sbb
enter
cmp
inc
and
sbb
movsl
inc
adc
jb
rorl
inc
xor
dec
ficoml
addr16
stos
push
xlat
outsb
adc
insb
xlat
lock
sub
lds
mov
push
mov
mov
rcrl
test
adc
sbb
jns
add
testl
xchg
and
jl
inc
pop
sub
mov
cs
mov
pop
sub
and
mov
out
pop
jmp
sbb
int3
lcall
sub
in
mov
in
repnz
xor
test
dec
mov
sub
les
pop
in
sub
cwtl
ja
dec
mov
cmpsl
dec
jb
lods
hlt
push
jmp
or
out
jecxz
int3
adc
mov
mov
ds
sti
popf
mov
cli
into
xor
xchg
aam
outsl
ss
mov
pop
gs
jl
adc
mov
push
mov
test
les
push
test
leave
mov
scas
lret
cmpsb
pop
xchg
xchg
push
pop
inc
clc
xchg
mov
push
sarl
push
pop
mov
lret
inc
fists
in
push
popf
dec
and
pop
loope
mov
inc
inc
inc
loop
ret
cmp
testb
or
jns
and
mov
ret
sbb
outsb
out
lret
popf
inc
out
fldl
adc
outsb
lahf
outsl
dec
fldl2t
test
mov
push
push
push
xchg
iret
xor
cld
testl
loope
jle
cmpxchg
add
lds
push
in
or
in
adc
pop
jne
cld
lock
ficoms
ficomps
imul
pop
push
movsb
pop
lea
insb
popl
fldcw
mov
adc
jns
mov
sub
and
loop
jmp
and
or
xchg
dec
data16
aad
out
in
aaa
cmp
or
xchg
mov
and
push
pop
sbb
shlb
fistpl
lds
xor
xchg
aaa
pop
out
pop
loopne
pop
pushf
xchg
test
or
stos
fwait
add
mov
xchg
mov
adc
jl
divb
xchg
into
sbb
mov
test
aad
fidivrl
pop
js
rcll
cld
ret
test
mov
je
jl
or
popa
lret
cmp
lods
mov
sbb
mov
inc
jnp
sub
mov
es
push
out
mov
in
arpl
into
mov
jno
imul
fwait
xchg
push
loope
ret
push
and
xchg
mov
call
ljmp
sub
pop
mov
in
lcall
pop
ret
or
outsl
ret
mov
jns
push
mov
inc
inc
sti
bound
inc
iret
jnp
push
mov
cmp
adc
inc
cmp
loope
dec
pop
rcrl
pusha
stos
fdivrs
ljmp
stc
sarb
dec
xor
xor
mov
in
int
xor
pushf
pop
loope
inc
pop
fcmovu
stc
or
out
fwait
jae
stc
rol
cmp
and
dec
outsb
inc
pop
inc
stos
mov
cmp
addl
in
push
push
or
test
outsl
call
scas
in
mov
adc
push
xchg
stos
push
ds
pop
and
xchg
bnd
xor
cld
jl
jno
sbb
pop
jmp
sbb
xchg
sbb
push
xorl
push
scas
fwait
call
fistpll
jb
sub
mov
dec
ja
outsb
pop
cli
and
stos
popf
leave
orl
pop
es
mov
cmpsb
or
cmp
push
inc
fsubs
jbe
int
dec
movsb
fsubrl
jb
inc
push
lods
jne
popf
jb
hlt
sub
adc
lock
mov
scas
mov
mov
cltd
dec
scas
jmp
sbb
and
and
push
lcall
pop
dec
mov
shrb
in
fstpl
xlat
and
cs
stc
jae
jb
repz
aas
xchg
fmuls
mov
lds
jb
mov
dec
xchg
push
add
and
data16
sbb
cld
pop
dec
sub
lret
xchg
push
sub
dec
mov
roll
lahf
mov
push
inc
fucompp
int
lcall
cmp
test
jo
lods
pop
aad
push
fistpl
out
mov
clc
pusha
aam
in
movsb
cwtl
stos
aas
pop
cmpsb
lret
mov
vrcpss
pop
mov
outsl
mov
testl
mov
pop
jge
xor
repnz
xor
jp
cmpsl
xchg
adc
mov
fdivrl
adc
hlt
sbbl
sbb
pop
push
sub
mov
pop
pop
add
mov
ds
or
xchg
cli
and
push
mov
test
in
sbb
mov
pop
mov
mov
iret
call
lock
dec
inc
in
xor
or
pop
xchg
jne
and
mov
in
mov
ficoml
leave
xor
aam
es
insb
sbb
lahf
in
cmp
fcoml
pushf
jmp
sub
into
jb
outsb
ljmp
push
dec
inc
push
sub
dec
notl
xor
or
mov
sbb
xchg
lret
or
sbb
std
and
mov
or
pop
and
movsl
hlt
adc
pop
pop
call
sti
sahf
sahf
outsl
fbld
cwtl
test
xlat
or
pop
scas
mov
cmpsl
call
sub
sub
adc
xor
test
test
dec
push
jecxz
mov
jne
scas
rclb
mov
jnp
mov
push
jge
mov
xchg
dec
les
xor
outsb
shll
cmpb
add
lahf
jl
cmc
sub
call
xor
push
aam
lods
outsb
sbb
ss
adc
pop
std
mov
lea
push
repnz
sub
out
dec
adc
repnz
mov
xchg
arpl
popa
add
gs
ret
add
inc
ljmp
push
ljmp
jb
je
mov
rorb
mov
mov
roll
fadd
or
xor
out
push
ljmp
mov
sub
ss
xor
dec
in
filds
cmpsb
loopne
pop
jbe
leave
xor
xlat
fcmovnb
scas
cmp
popf
ja
inc
sub
sbb
sub
lea
les
test
popf
lret
add
jno
cmpsb
cmpsb
mov
mov
xchg
push
mov
dec
testl
inc
daa
mov
push
bound
inc
sub
aas
cmpsl
xor
inc
inc
inc
dec
inc
nop
mov
sub
ret
cmp
xchg
hlt
cmp
pop
sub
inc
inc
and
mov
hlt
inc
sbb
cmp
cmp
mov
aad
dec
lock
daa
sti
test
jbe
or
jns
enter
test
scas
push
push
jnp
std
ret
jecxz
sub
mov
xchg
out
and
shll
addr16
cli
cmpl
and
popa
xor
movsb
lods
add
popf
and
gs
pop
adc
nop
cs
mov
sbbb
mov
pop
aaa
jbe
jecxz
mov
adc
mov
ja
rcrb
dec
imul
clc
clc
lret
pop
imul
movsb
mov
daa
shll
fcoms
sbb
mov
lcall
ds
pmaxsw
cwtl
jg
cmc
test
cli
pop
sbb
or
mov
shrl
xchg
dec
dec
pop
xchg
pop
and
mov
fwait
cmc
std
jmp
in
pop
inc
xchg
lock
in
int3
cld
jno
mov
fisubl
and
pop
outsl
addr16
outsl
or
insl
xchg
cmp
outsb
arpl
lret
mov
mov
and
fimuls
call
es
pop
jle
scas
push
es
push
dec
sub
pop
sti
mov
push
mov
hlt
xchg
sub
cmp
mov
mov
push
adc
arpl
fld
xchg
aaa
imul
stc
std
add
push
inc
and
rolb
fcmovnbe
test
aas
cmp
out
fsubs
pushf
cltd
rorb
cmp
scas
decl
pusha
movswl
cs
cmc
adc
push
icebp
xor
in
xchg
in
mov
test
daa
loope
stos
adc
and
xchg
add
lcall
cli
mov
in
jae
outsl
addb
popa
nop
push
repnz
pushf
cli
dec
mov
add
or
cmp
and
outsb
ficomps
aam
push
mov
jecxz
sbb
adc
lock
test
lods
jl
inc
idivb
mov
mov
inc
jp
gs
loope
mov
xor
je
stos
fldcw
ljmp
pop
and
iret
popf
lahf
xlat
loope
pop
sbb
lea
incl
daa
leave
hlt
orl
imul
mov
jne
push
sti
inc
ljmp
pop
loopne
cmp
sbb
jnp
adc
xor
push
cmp
sbb
dec
ljmp
gs
lods
lahf
in
xor
xchg
std
lcall
mov
fdivp
movaps
cltd
iret
cmp
or
push
adc
lea
popf
inc
or
bound
out
insb
dec
mov
jno
dec
or
ficoml
pop
clc
fistpll
cwtl
add
dec
xor
and
sbb
pop
and
stos
jb
pushf
inc
dec
jae
push
std
lahf
fistps
adc
push
inc
push
sub
mov
mov
inc
or
cli
jge
dec
sbb
jmp
push
nop
dec
jae
push
mov
mov
movsl
cmpsb
sbb
rclb
lock
ficoms
test
or
aaa
or
test
insb
cmc
jae
inc
cmp
or
pop
repnz
movsl
ret
xchg
jp
push
ljmp
xchg
jnp
push
mov
dec
jb
cmp
jle
push
lea
mul
dec
inc
and
cmp
mov
cmp
cmp
or
pop
js
inc
jg
jmp
xchg
and
out
das
mov
mov
sub
adc
repnz
sub
inc
xchg
fwait
inc
cmp
movsb
sbb
bnd
add
push
xor
mov
inc
jne
add
and
mov
mov
rcr
and
hlt
and
int
rcrb
sahf
jmp
dec
cli
sbb
aas
je
xor
xor
inc
rorb
outsl
inc
stos
and
cmp
or
inc
std
ja,pt
in
add
rolb
jnp
mov
xchg
dec
dec
hlt
dec
add
cltd
leave
jp
push
xchg
pop
test
in
in
mov
push
in
jmp
scas
out
fidivrs
leave
xchg
leave
ret
arpl
pop
jnp
das
jnp
test
in
cmp
mov
pop
lods
stc
add
xchg
out
sub
push
cmpsl
mov
and
mull
dec
jl
lcall
mov
movsl
push
pop
xor
in
pop
fists
imul
cmpsl
shl
fwait
pop
test
roll
push
fsubs
push
test
dec
arpl
decb
dec
cs
inc
push
sub
pop
inc
insl
mov
inc
xor
roll
mov
out
push
movl
jae
cmp
push
push
cli
xor
dec
sbb
lret
stos
repz
inc
mov
xor
ficoms
xchg
cmc
and
inc
jne
adc
pusha
ja
dec
jecxz
clc
mov
data16
test
dec
inc
mov
mov
mov
shrb
mov
ret
xchg
ja
inc
icebp
and
jg
ljmp
in
push
insl
lds
sub
xchg
hlt
lahf
mov
sarl
pop
int
xchg
or
mov
ret
pusha
mov
pop
lcall
cmpsl
lods
jge
ficoms
mov
fdiv
fiaddl
xlat
outsl
test
dec
add
test
mov
xor
out
add
xor
jne
jl
sbb
mov
scas
imul
jo
jge
sbb
scas
mov
push
outsl
add
pop
imul
imul
fsubs
cmp
mov
and
sub
jecxz
lock
inc
jle
dec
gs
psrlw
shlb
or
sbb
xchg
rorb
dec
cmp
icebp
icebp
fldt
sub
mov
cld
scas
arpl
std
rcll
fwait
inc
imul
push
and
mov
dec
pop
cmp
mov
pop
imul
pusha
push
jne
adc
imul
lahf
jl
adc
mov
fistpl
push
mov
dec
cmp
sti
dec
jl
imul
sbb
lcall
inc
enter
test
rcll
mov
push
ds
enter
out
mov
mov
out
fistpll
mov
sub
xchg
mov
xor
cltd
jmp
mov
push
pop
pop
jp
lock
jge
cmpsl
lods
enter
jl
sbb
dec
inc
leave
ds
push
xchg
fsubl
pop
mov
pop
inc
sbb
fisttpl
add
dec
mov
push
pop
inc
inc
out
into
push
movsb
dec
scas
lods
stos
fisttps
mov
pop
xchg
outsl
int
cs
fwait
adcb
xchg
lods
fs
roll
and
xchg
push
pop
notl
xor
lds
dec
pop
pop
loope
mov
gs
xchg
les
cmp
cli
orb
and
imul
pop
mov
inc
outsl
xor
and
lcall
fldenv
inc
int
out
rolb
iret
push
in
mov
push
dec
mov
imul
aas
mov
cmp
xchg
aaa
in
inc
retw
aam
imul
icebp
lcall
cmp
jb
lcall
dec
mov
cmp
in
jg
lcall
or
stos
repnz
lds
out
jl
jecxz
insl
fstps
aaa
adc
popf
mov
shlb
fwait
enter
rorb
xlat
ret
dec
mov
or
xor
aaa
rclb
sbb
mov
repnz
repz
mov
rorl
xchg
lahf
mov
aad
pop
andb
sbb
sbb
xor
lahf
mov
or
jno
inc
lds
movsl
test
aaa
cmp
aas
lods
rcl
fisubrs
xor
movsb
fistl
scas
add
add
or
jno
push
push
orb
shll
or
sbb
cmp
inc
xchg
fwait
mov
jb
cld
cmc
fildl
iret
adc
mov
xchg
iret
sub
sbb
in
jmp
push
gs
js
mov
sbb
cmp
xchg
fisubrl
adc
sbb
mov
jb
pop
and
jb
iret
imulb
bound
xchg
add
cmp
int3
insb
adc
std
sub
jns
mov
and
leave
cli
lods
test
pop
lcall
lods
add
push
cmp
and
lcall
ja
std
cmp
push
mov
cmp
insb
pop
imull
dec
mov
outsb
xor
inc
dec
movsl
pop
mov
clc
push
sub
out
sub
or
or
arpl
mov
push
mov
mov
jecxz
jb
xor
divl
imull
popf
ret
lea
xchg
mov
scas
icebp
subl
pop
fidivrl
loope
pop
iret
cli
xchg
xor
imul
or
dec
inc
or
xchg
xor
call
jne
xchg
pop
mov
xchg
out
jne
test
loopne
adc
push
mov
push
dec
lds
xchg
mov
ret
push
xchg
pop
mov
mov
mov
mov
bound
out
cmpsb
xchg
push
test
sub
les
fisubl
xchg
fstps
shrb
lret
dec
hlt
push
xchg
lea
mov
mov
pop
inc
insb
nop
add
lahf
push
dec
sub
push
jns
mov
sbb
push
xchg
jo
cmp
cmpsl
and
repnz
lahf
fcom
ljmp
out
pop
mov
mov
cmp
fadds
xlat
pop
mov
fbld
sub
push
cwtl
imul
sbb
push
jo
mov
repnz
and
adc
enter
pop
scas
xor
mov
mov
sub
inc
mov
xchg
arpl
xor
aam
jae
lret
mov
scas
push
push
dec
inc
lods
fdivp
sub
cld
pop
push
out
xchg
stos
and
mov
loopne
into
lret
jae
sub
fidivrs
ja
dec
aaa
outsb
mov
dec
stos
fistl
mov
sbb
shrl
jmp
xor
test
adc
pop
mov
mov
enter
scas
dec
clc
mov
and
adc
xor
int3
call
xor
mov
aam
mov
dec
outsl
in
cmpsw
in
sub
ja
ss
aad
mov
xchg
mov
pop
imul
aad
call
sub
xor
cmp
jns
ds
push
cs
bound
and
sub
out
mov
inc
dec
sbb
xor
dec
xor
mov
in
addr16
cmpb
inc
jle
cmpb
jmp
xchg
xchg
adc
in
enter
sbb
icebp
xchg
loope
ret
lea
and
in
push
push
aaa
movsb
iret
xor
sti
mov
cmp
ror
mov
pop
adc
pop
xor
push
jmp
jo
dec
mov
pop
mov
mov
xchg
dec
lret
push
sti
fcompl
mov
mov
aas
das
jae
data16
and
sub
jnp
ds
dec
fldcw
and
mov
movl
adc
adc
jecxz
mov
jecxz
xor
stos
cmpsb
sbb
out
add
hlt
or
imul
inc
stos
cmc
inc
dec
sti
push
jle
js
cmp
xor
mov
insl
mov
mov
pop
lahf
add
mov
fsubs
int
in
xchg
aam
ja
or
sub
ljmp
test
mov
or
movsl
add
mov
sub
sbb
pop
ss
lcall
sahf
jmp
les
lds
aaa
add
not
adc
arpl
mov
mull
jge
sbb
fisttps
shll
xchg
out
fld
test
addr16
std
out
repz
out
popf
popa
fldz
call
lret
cltd
bound
mov
pop
xchg
xor
jno
and
xchg
push
dec
nop
jl
inc
scas
jo
mov
add
jnp
insl
inc
lcall
cmp
and
aam
ss
out
mov
icebp
add
inc
hlt
in
mov
lods
les
aaa
push
or
inc
shrl
data16
lea
ds
adc
lods
pop
inc
shll
fcompl
icebp
cmp
or
rcll
push
xchg
cmpb
xchg
pusha
xor
enter
outsb
mov
dec
lea
adc
mov
pop
add
add
mov
js
lods
add
popf
xor
pop
xorb
neg
mov
push
divb
mov
sbb
mov
mov
push
fst
xlat
push
je
outsb
sub
repz
shrb
out
stos
pop
sbb
push
xchg
mov
pop
xchg
out
xchg
mov
mov
pop
jecxz
dec
xchg
mov
dec
int
push
jne
es
xchg
neg
dec
dec
dec
lahf
jb
and
dec
pop
lahf
xchg
push
push
adc
cmp
mov
ja
sbb
stos
push
ret
out
push
fwait
mov
call
xchg
xor
xchg
iret
jbe
test
dec
in
fistps
scas
mov
scas
jmp
out
ss
int
ds
xlat
cmc
test
push
push
dec
adc
dec
xor
push
cmp
cmpb
mov
and
adc
jbe
scas
inc
cmp
aaa
dec
lea
shl
cltd
pop
aaa
mov
lret
cmp
jbe
dec
mov
lret
incl
daa
sub
test
mov
inc
test
pop
dec
xor
push
cwtl
adc
sub
stos
scas
loope
xchg
mov
test
add
ss
add
aas
les
pop
adc
test
mov
dec
sahf
push
adc
add
cwtl
jnp
nop
into
xchg
dec
dec
sbb
test
cmp
mov
xchg
push
loop
fs
cli
inc
push
inc
aad
sub
cld
daa
dec
stos
fimuls
int3
insb
lods
fistl
in
jno
mov
fdivrs
add
fs
out
jecxz
cmp
sbb
or
mov
rcrl
push
test
sub
sar
dec
mov
es
adc
arpl
sub
mov
frstor
jge
cmp
push
jle
or
mov
jnp
stos
xchg
ret
fistpll
adc
popa
fisttpl
lret
pop
or
or
jae
pop
dec
out
imulb
call
or
and
xchg
hlt
xchg
gs
and
test
inc
lds
push
sbb
outsl
lcall
imul
jbe
push
in
icebp
out
cmpsl
dec
sbb
ljmp
jmp
push
jg
sbb
frstor
jae
rcrl
bound
push
mov
dec
sbb
movsl
lds
lds
adc
sub
add
scas
or
not
daa
fiaddl
movsl
pop
adc
mov
and
lods
cmc
inc
and
movsl
inc
mov
test
shll
push
cmp
xor
fbstp
cli
add
xchg
loop
cltd
xchg
lock
inc
ret
cmpsl
and
rcr
insb
cltd
sub
es
dec
inc
cmpb
mov
out
test
out
clc
std
cwtl
sbb
pop
fidivl
sub
xchg
dec
aad
hlt
inc
mov
ficoms
stos
mov
in
sbb
lret
xor
jb
stos
cmc
fadd
mov
aaa
mov
out
cltd
cmp
sti
nop
push
push
js
arpl
dec
lcall
push
inc
mov
pop
pop
in
sbb
pop
das
lods
test
jne
mov
mov
rclb
or
jl
mov
out
add
mov
stos
fistps
mov
bswap
outsb
pop
mov
mov
cltd
pop
adc
outsl
inc
mov
data16
adc
push
fnsave
mov
stos
scas
movsb
int
orl
movsb
stc
ficoms
xor
fdiv
repnz
mov
push
xchg
or
aad
ss
jl
push
push
cmp
lds
mov
fsubs
out
cmpsl
inc
leave
inc
mov
xor
out
int
or
imul
clc
repz
push
lret
mov
and
lret
dec
sub
mov
jp
xchg
repnz
mov
sub
out
repz
jecxz
cmp
fisubrl
popa
sbb
or
insl
insl
cmp
movd
jae
pop
cmpsb
rcr
pop
mov
or
push
scas
out
das
fucomip
in
fmulp
out
mov
fwait
mov
test
stos
xor
cmpl
iret
aad
mov
sub
loop
xchg
mov
shl
push
xlat
sub
int3
in
ja
ja
pop
xor
repz
cltd
xor
pop
pushf
aaa
out
faddl
outsb
fldenv
subl
jns
or
jb
jo
cmp
jge
mov
imul
nop
shrl
pushf
movsb
ret
inc
push
scas
sbb
cmp
push
iret
mov
sbb
push
cmp
and
ds
out
andnps
jno
xchg
aas
mov
dec
xchg
mov
add
pusha
mov
shlb
das
fcmovu
nop
in
fisttpll
iret
xor
dec
cli
mov
mov
dec
rolb
js
es
mov
mov
inc
sub
popf
push
nop
cmc
sarl
cmp
push
decl
lret
mov
out
sarl
mov
mov
pop
shlb
in
push
rcrl
mov
int3
sub
mov
sbb
pop
aas
test
xchg
push
jnp
mov
adc
scas
push
xor
mov
aad
pop
bound
sbb
jle
dec
stc
nop
lods
test
movsl
je
inc
fadds
or
jnp
inc
out
in
fadds
mov
cs
idiv
xchg
subl
dec
mov
out
lcall
push
jmp
jl
sbb
pop
push
push
jg
ficoms
mov
call
push
pop
js
mov
pop
ljmp
ljmp
push
mov
movsb
and
xchg
push
push
mov
lahf
cmp
and
mov
or
nop
pop
clc
jns
mov
mov
adc
lea
shll
lea
mov
fldenv
or
adc
inc
inc
xor
or
aas
ret
push
fs
and
and
and
js
sahf
dec
push
dec
mov
inc
popa
adc
leave
jecxz
cli
mov
lret
addr16
imul
mov
jb
fldl
call
lahf
inc
sbb
in
stos
mov
cwtl
sbb
movsb
fdivl
pushf
jns
dec
mov
fnsave
fs
mov
sbb
cltd
push
mov
lods
ret
lods
inc
sbb
jmp
mov
out
jmp
dec
dec
xchg
fadd
or
cmp
cmpsl
test
out
imul
xor
das
sbb
ja
test
mov
xchg
out
jge
in
das
shl
xor
push
dec
cmpsl
cmc
loopne
stc
jl
ret
lods
jecxz
cltd
sbb
or
jbe
jp
inc
jns
outsl
sbb
jge
outsb
in
and
xchg
fsts
addr16
mov
cmp
or
fcmovne
mov
stos
xchg
add
push
jge
or
cmpsl
mov
sti
out
int3
lods
cmp
push
jmp
fisubl
cmpsl
int3
mov
loopne
cld
mov
ret
test
out
mov
cmp
out
gs
mov
jnp
mov
jge
inc
repz
and
lods
add
xor
fisubrl
cmp
pop
and
dec
adc
imul
ja
adc
pop
ret
cld
sbb
idivb
jl
adcl
jns
js
mov
mov
adc
sub
hlt
inc
push
adc
scas
cmpsb
mov
push
nop
mov
fwait
into
pop
arpl
loop
cli
xorb
hlt
rorl
mov
sub
aaa
or
xchg
nop
xor
mov
outsb
sbb
cmp
sahf
dec
pop
jmp
xlat
and
loopne
lods
iret
mov
inc
pusha
fucom
xchg
add
js
lock
mov
push
popf
xchg
dec
mov
scas
nop
jmp
pusha
and
mov
xlat
movsb
icebp
mov
sbb
xor
cli
jle
xor
mov
pop
push
js
dec
pop
adcl
and
or
xor
adc
dec
push
push
es
or
xchg
stos
mov
pop
push
mov
cmp
sbb
imul
pop
pop
adc
xchg
out
lock
dec
lret
std
mov
push
cmp
jg
clc
mov
or
testb
mov
adc
or
cs
jp
cmpsb
stc
ret
push
fsts
push
das
dec
scas
sub
cltd
es
adc
inc
inc
xor
imul
push
sbb
iret
cmp
ja
pop
out
mov
mov
jg
pushf
or
xor
and
push
lods
jbe
add
cmp
lcall
rclb
iret
dec
popa
shll
imul
loop
mov
xor
push
mov
jae
add
pop
cmc
popf
aas
loope
out
xor
aam
insl
cld
sbb
fwait
sbbl
cmpsb
adc
push
loope
rcrb
ja
inc
dec
jno
aam
ret
rcll
dec
inc
mov
loop
add
jecxz
inc
ss
fwait
test
adc
shrb
push
xchg
and
fiadds
mov
out
std
out
jne
std
fbld
or
add
mov
mov
xchg
je
xchg
or
mov
dec
push
pop
and
jns
rolb
mov
rolb
cltd
inc
inc
stc
jae
pop
jnp
in
add
jge
outsb
sbb
inc
filds
nop
sub
cmc
cltd
repz
jno
xorb
or
adc
lea
mov
fwait
mov
xor
mov
es
jmp
sbb
cmc
ljmp
lret
clc
sahf
lret
sub
or
idivb
jae
lods
daa
aas
jo
sarl
dec
sti
fisttpll
loope
xor
pop
fimull
lea
lcall
fdivrs
mov
xchg
pusha
mull
out
stc
clc
mov
popa
lret
jb
fmul
fisttpll
adc
jge
jae
mov
adc
or
push
ds
fs
push
cmp
lods
pop
xor
ret
icebp
jge
push
xchg
popa
ret
mov
mov
adc
mov
insb
mov
mov
test
ds
add
repz
push
lcall
xchg
inc
lea
insb
pusha
movsl
subl
pop
inc
loope
xor
cmpsb
jnp
or
lcall
sub
fisubs
mov
mov
std
repnz
pushf
loope
mulb
sahf
outsb
stos
fcompl
inc
jo
xchg
push
xchg
xor
cmp
rorl
roll
mov
add
in
mov
pop
lret
cmp
cmp
jp
imul
inc
test
testl
mov
inc
mov
outsl
jne
cld
sub
test
mov
loope
loop
pushf
and
iret
iret
xchg
dec
stc
dec
mov
mov
sbb
xchg
fdivrl
add
into
dec
cmp
xor
mull
fwait
clc
mov
mov
or
dec
in
push
jg
or
cli
out
mov
add
mov
add
push
adc
rclb
shr
cmp
lret
sarb
data16
scas
jl
test
out
dec
adc
adc
lret
nop
shr
or
pop
pop
pop
mov
push
ret
xchg
inc
fsubrs
lret
xor
stc
call
jns
adc
cltd
clc
mov
ds
shl
mov
jo
cltd
xor
cld
mov
inc
aam
fiadds
test
jo
push
insl
aaa
aaa
xorl
jbe
call
xor
fstpl
jmp
pop
mov
test
test
jg
xchg
sbb
insl
out
popa
sbb
mov
in
dec
sbbl
and
sbb
jmp
mull
adc
sub
inc
xor
jne
jl
cltd
arpl
cmp
les
je
mov
jbe
jo
adc
jp
add
sub
cmp
loope
xchg
js
lods
popf
jo
sub
push
pop
call
js
or
and
jmp
inc
push
fwait
test
arpl
pusha
pop
mov
adcb
jnp
sbb
cmp
movsl
adc
dec
pop
dec
in
divb
fisubl
jp
jge
pushf
add
pusha
loop
mov
mov
dec
cli
jns
add
inc
cwtl
inc
jge
fwait
xchg
rcrb
out
pop
es
jmp
mov
jp
jle
ss
xor
sub
jae
jno
notb
ljmp
in
arpl
sub
inc
lods
push
sarl
ret
movsb
rcll
sarb
insl
subl
mov
loope
or
or
adc
arpl
iret
lock
jp
dec
dec
sub
inc
shll
xchg
test
or
ljmp
inc
sbb
push
cmpsb
lcall
jne
ret
stc
test
jl
cmpsb
mov
ss
loop
test
iret
adc
shrb
xchg
adc
push
cli
popf
cmp
pop
mov
ljmp
ds
addl
or
adc
aad
into
stos
outsb
xchg
insl
jle
xor
jae
push
out
mov
mov
jbe
jbe
mov
in
sbb
dec
push
jle
or
loop
mov
cmpsl
or
call
jmp
repz
sub
jne
mov
xor
jo
push
clc
or
ja
sbb
bound
pop
xchg
pop
mov
pop
into
out
xor
add
push
lahf
mov
arpl
adc
jge
adc
sti
cmp
mov
lret
jns
imul
scas
mov
lea
cwtl
jmp
lock
cwtl
mov
jnp
fs
push
mov
ret
bound
lret
jg
jno
imul
inc
push
jno
inc
and
pop
mov
xchg
sbbl
sbb
std
or
adc
mov
scas
repnz
je
fmulp
cmp
aas
mov
inc
mov
sub
or
pop
insb
mov
mov
push
sub
enter
inc
sti
ja
jnp
or
sahf
sub
arpl
ret
dec
or
mov
pop
dec
cmp
adc
sbb
inc
rol
adc
add
mov
popl
fwait
hlt
xlat
xchg
insl
or
mov
adc
mov
imul
sub
inc
test
inc
add
add
jnp
addl
dec
aad
sub
repnz
jae
call
sahf
ret
fucomp
lock
push
sbb
cmp
sub
call
sbb
fcom
pop
xor
mov
shrb
jb
out
shlb
ss
jg
sti
ret
pop
in
cmp
scas
icebp
mov
jle
popa
dec
jno
scas
or
stos
xor
sub
add
sahf
js
xchg
cmpb
into
xor
fbstp
xlat
cmpsl
je
cmp
sub
stc
data16
lods
out
clc
sub
add
fsubrs
xor
cltd
jbe
adc
test
sub
inc
lcall
lds
and
mov
mov
pop
in
push
cmp
mov
or
xchg
and
sbb
clc
sbb
out
xchg
sub
adc
ficoms
bound
fnstsw
lds
inc
sub
xchg
inc
mov
adcb
inc
cmp
stos
sub
sub
adcl
dec
jns
sub
mov
rcrl
push
adc
mov
popf
icebp
push
rcrb
ret
inc
lcall
mov
inc
enter
pop
cmpsl
lret
sbb
mov
lret
sub
testb
clc
jae
shl
dec
mov
jmp
jno
and
or
bound
mov
fcmovb
xchg
pop
call
lea
pop
mov
or
enterw
pop
mov
adc
insb
faddl
and
push
repnz
ds
mov
sub
xlat
std
push
mov
idivb
bnd
ja
and
mov
adc
dec
pop
jle
inc
test
jge
mov
or
lock
sti
movsl
cmpsl
mov
xor
cli
test
or
ret
mov
cmp
imul
push
movsb
outsb
fidivrs
test
sbb
std
jne
fisttps
push
aas
roll
dec
mov
add
aaa
sbb
bound
das
sub
sub
arpl
std
mov
ja
jp
lods
cmp
dec
outsl
sarb
js
push
addr16
divl
pop
lods
push
test
aaa
sbb
cmp
lahf
sbb
gs
jg
mov
jge
adc
aaa
push
clc
sub
daa
repnz
inc
cld
add
cmp
xlat
insl
insl
inc
mov
arpl
jecxz
inc
loopne
sub
fnstsw
iret
es
in
mov
sahf
inc
shl
xchg
int3
cld
data16
adc
mov
pop
out
iret
dec
ds
jno
fcmovne
loopne
adc
aaa
jae
shrb
sub
cmp
xlat
sbb
lock
dec
push
in
push
dec
movsl
ss
cld
xor
or
enter
enter
lret
pop
stos
icebp
mov
outsl
fwait
xchg
leave
repnz
popa
mov
in
fldcw
std
loopne
popf
sub
adc
ret
sub
fnstcw
dec
insl
jns
adcl
or
out
aas
jnp
ds
adcl
add
scas
dec
sti
sub
xchg
cmc
in
jmp
inc
sbb
sub
testb
or
push
adc
mov
adc
loop
dec
dec
ret
xchg
loop
jb
loopne
jb
fistps
pop
jns
and
aam
arpl
adc
sbb
pop
mov
rcl
xchg
rorb
pop
icebp
mov
lds
add
mov
incb
scas
stos
jl
sbb
fsubp
cmp
daa
pop
mov
pop
hlt
mov
nop
lock
xchg
pop
pop
fisttpl
push
sbb
sub
jmp
xor
daa
insl
leave
cmp
fadd
mov
cmp
movsl
outsl
out
ss
or
sbbb
push
into
inc
jmp
adc
roll
paddsb
xchg
jns
pop
adc
je
add
std
pop
jns
shrb
adc
adc
push
push
cmp
push
sbb
bound
sbb
push
lods
inc
cs
ljmp
cmc
popa
xchg
stos
in
shlb
in
repnz
scas
mov
mov
mov
inc
ja
setle
das
xchg
push
jbe
popa
push
mov
daa
shrb
out
add
jae
aam
popa
addr16
lret
add
lcall
test
adc
gs
push
sbbb
cmp
adc
sub
les
inc
cmp
iret
xchg
adc
iret
mov
adc
or
and
faddl
mov
inc
adc
push
cwtl
pop
ja
jb
or
ja
iret
ss
loop
test
or
loopne
push
cmp
pop
xchg
push
dec
cmp
enter
inc
sbb
and
call
bound
dec
test
jle
leave
sti
ds
pop
test
and
adc
imul
sbb
test
xlat
mov
mull
and
cwtl
sahf
ss
mov
push
pushf
push
in
int
mov
jns
mov
lret
or
or
or
aaa
aas
cmp
sahf
mov
and
jmp
xor
lret
movsl
fstps
js
clc
sub
pop
dec
or
mov
jle
xor
and
ljmp
push
xor
mov
or
add
and
fdivs
loope
mov
or
mov
dec
ljmp
cltd
push
and
cmc
cld
pop
or
inc
mov
inc
cs
jne
jns
paddb
fs
and
pop
std
jb
aad
fisttps
mov
bound
xor
ds
push
test
shrb
cmp
sete
in
add
lods
cmp
pop
out
dec
insl
mov
sbb
xor
mov
aas
fdivrl
adc
pop
add
addr16
jae
inc
frstor
and
inc
add
adc
jne
sub
out
out
jmp
pop
sub
cmpb
sbb
sub
jb
mov
mov
dec
lcall
jl
call
mov
add
test
icebp
sbb
shl
xchg
shll
dec
xlat
fsubrs
arpl
push
inc
xchg
mov
or
jnp
sbb
fwait
loope
push
daa
push
js
sbb
sbb
fucomp
push
aad
jns
adc
imul
stos
jo
sti
xchg
fsts
jbe
xchg
out
push
decb
inc
pop
in
pop
pop
mov
ja
cmp
inc
dec
pop
ret
jg
and
dec
test
fistps
push
mov
lods
test
mov
lock
call
push
negl
daa
les
cmp
jnp
cmp
stos
xor
je
cli
es
cmpsl
push
dec
pop
rcrb
cwtl
or
inc
xchg
xor
ja
rorb
or
adc
lds
inc
cmc
fwait
xchg
mov
xchg
pop
dec
jne
dec
jo
sbb
aad
lods
mov
sbb
popf
addr16
xlat
jnp
sbb
fisttpl
pop
cltd
mov
inc
cs
sahf
pushl
je
sub
sbb
cmp
xchg
mov
aad
repz
stos
insb
lret
xchg
dec
mov
out
std
mov
in
lret
mov
jecxz
dec
fdivrl
subb
mov
jp
mov
fucomi
and
xor
mov
jne
adc
pop
mov
mov
pop
imul
adcl
pop
aas
dec
sbb
xchg
int
dec
mov
ret
inc
repz
mov
mov
xor
pop
xor
test
add
imul
xorb
cmp
das
out
loope
mov
scas
lds
clc
jns
pop
loopne
int3
loopne
push
mov
xchg
mov
push
fildl
loop
cmpsl
bound
jne
mov
mov
mov
ja
cld
jo
shlb
adc
cmp
popf
adc
fists
ds
dec
daa
add
shrb
mov
mov
xor
out
mov
hlt
push
mov
cld
movsl
decb
sub
enter
cmp
mov
xchg
outsl
cli
sub
xchg
repz
insb
dec
sub
fimull
jne
insb
xchg
xlat
repnz
jo
jne
mov
ljmp
add
cmpsb
mov
push
push
push
add
int
push
sbb
iret
xor
push
aad
in
or
and
gs
insl
sbb
xor
jmp
ret
cmpsb
repnz
std
xor
cmp
repnz
sbb
jns
jge
dec
mov
divb
lret
fisubrs
mov
leave
push
mov
mov
imul
xchg
xor
jg
icebp
or
jmp
cld
adc
lods
push
inc
stos
mov
popa
cmpsl
in
outsb
xlat
cmpsb
test
pop
sbb
inc
stos
cmp
lret
gs
mov
daa
rol
or
out
out
dec
xor
sub
mov
sbb
cmp
add
xor
lahf
inc
in
pop
adc
lock
test
mov
xchg
pop
jle
insb
mov
fs
loopne
popf
js
mov
ds
mov
das
xchg
scas
lret
pop
mov
adc
cs
inc
popf
mov
pusha
jns
test
and
jb
jp
mov
sahf
dec
inc
and
inc
adc
ljmp
das
cmp
push
lods
cmp
ret
cmp
mov
jo
pop
shrl
and
xor
push
arpl
mov
popf
mov
pop
adc
cmp
and
push
xchg
dec
push
pusha
mov
sbb
mov
std
sbb
pop
pop
mov
push
dec
stos
push
iret
add
dec
jbe
in
lahf
pop
sbb
push
scas
cmp
out
icebp
int3
imul
outsb
cmpl
outsb
lods
adc
ficompl
pop
jmp
lea
add
cmp
outsb
push
push
sbb
dec
mov
les
lea
out
push
cli
orb
xor
lods
push
jb
mov
jns
push
les
xor
mov
mov
xlat
test
cli
popa
dec
or
jle
xor
adc
mov
gs
push
adc
and
add
cmpl
hlt
hlt
jae
mov
xor
cmp
cmp
jbe
adc
negb
inc
in
enter
jo
std
xchg
add
or
rcll
push
mov
lds
pop
mov
in
push
mov
pusha
andb
push
add
cmpsb
in
push
insb
rcrb
insb
js
fdivr
loopne
lods
adc
pop
bound
or
inc
xchg
mov
push
adc
fucomp
test
pop
and
int
cmp
pop
push
sbb
pop
cmp
inc
enter
sub
fsubrs
les
rorl
mov
dec
lds
mov
and
jb
dec
jmp
andl
shl
rep
jecxz
sub
je
movsl
ret
hlt
jecxz
jnp
jge
cmp
jmp
les
rclb
ret
or
add
mov
jne
insb
arpl
mov
sbb
xchg
push
pop
cmp
jecxz
xor
add
fucomip
push
hlt
es
add
cld
jno
clc
das
roll
mov
sbb
aas
adc
dec
es
lret
xlat
mov
add
mov
insl
add
punpckldq
insl
in
daa
adcl
sub
sbbb
inc
mov
ret
jecxz
scas
stos
mov
jae
ror
mov
loop
arpl
js
jns
mov
xchg
inc
push
xchg
add
je
inc
cmp
mov
hlt
cmp
jbe
jl
ja
cmp
mov
pop
test
sbb
jl
sahf
fistl
dec
fwait
in
or
pop
inc
scas
push
xlat
jo
xor
fstpl
xor
sbb
cmp
fists
adc
cmpsl
loope
outsl
mov
lret
jecxz
sbb
sbb
cmp
cmp
dec
cmp
cmpb
inc
add
lea
imul
repz
inc
dec
inc
xor
test
enter
jno
or
icebp
outsb
mov
repnz
sbb
dec
fdiv
repnz
cmp
pop
inc
aad
shrl
lods
pop
vmovntps
inc
in
xorb
mov
jmp
sub
cmp
adc
sub
sub
pop
xchg
sbb
mov
out
leave
clc
push
or
jb
xor
mov
inc
or
xorl
adc
movb
inc
xorb
ror
mov
adc
in
push
popf
cmp
rcr
fsts
out
lret
push
dec
cld
inc
lahf
jb
sub
pop
lahf
xor
lods
sub
loop
or
mov
lahf
adc
fnsave
mov
pop
sub
xchg
xchg
jle
aam
push
imul
push
xlat
arpl
sub
out
add
pop
xor
ja
aaa
cmpsb
pop
adc
pop
pop
scas
mov
cmp
lahf
sbb
mov
push
xchg
mov
cmp
scas
dec
mov
outsl
jmp
mov
inc
out
jg
adc
or
add
bound
fists
jno
lret
rcll
pop
add
xorb
sub
enter
adc
pop
or
mov
dec
cli
dec
test
sub
inc
xchg
fcmovnb
xor
inc
ja
inc
xchg
jbe
mov
mov
xlat
push
adc
pop
js
repz
mov
aad
cwtl
sbb
ret
pop
adc
jmp
pop
cmc
mov
leave
mov
adc
nop
es
xor
and
xchg
xor
out
adc
pop
test
mov
roll
movb
sub
xor
or
fidivrl
fidivrs
xchg
rclb
push
movsl
jns
in
fdiv
jl
dec
adc
mov
xchg
adc
fsubr
pop
bts
aam
or
push
nop
mov
xchg
sub
xchg
lds
add
repnz
inc
cmp
dec
and
mov
fwait
in
lods
pushf
pop
ret
shll
cmp
out
push
das
lods
and
cmpl
fimull
or
mov
push
clc
insb
dec
dec
loop
add
mov
pop
out
stos
push
and
mov
add
cld
pop
popf
sub
fiaddl
xchg
push
pop
fbld
jnp
int3
mov
jle
mov
repnz
mov
data16
cli
or
lds
shl
fnstsw
les
in
aam
jb
and
scas
and
es
jnp
popf
jl
dec
xchg
lcall
mov
data16
icebp
and
pop
insw
out
scas
lea
pop
fidivrl
ret
mov
cld
je
cmc
btr
icebp
dec
popa
fmulp
movsl
mov
in
and
inc
mov
andl
lods
adc
in
xchg
pop
loope
fisttpl
sub
xchg
inc
xor
sbb
inc
inc
popf
mov
je
shld
test
imul
add
fsubs
mov
das
mov
repz
push
int3
psubb
movsl
push
scas
cld
leave
inc
mov
cmpsb
xor
lods
fisubs
sbb
add
gs
inc
mov
sub
repz
jo
mov
xor
outsl
and
xlat
ljmp
mov
mov
movsl
dec
cmpsb
lahf
test
and
adc
mov
jnp
xor
jnp
out
mov
in
in
hlt
cmp
mov
mov
or
cmc
adc
andb
iret
stos
mov
test
lcall
ja
ret
xchg
mov
push
shr
in
pop
sbb
negb
jo
decl
lret
dec
test
scas
imul
pop
mov
sti
sarl
fcmovnbe
pop
mulb
shr
icebp
xchg
data16
fnstcw
sbb
insl
sbb
jmp
sbb
push
push
push
cmpsl
daa
xchg
adc
mov
cmp
cli
in
ret
addl
ja
sti
stos
jl
clc
ljmp
sub
in
mov
dec
outsl
sbbl
xor
loopne
popf
cmpsb
fdivrl
scas
scas
test
push
shll
das
daa
sub
rcrb
jmp
pop
cltd
mov
std
shld
cltd
jg
ret
inc
inc
sub
loopne
imulb
jo
and
and
roll
jo
sbb
add
sbb
xlat
mov
pop
mov
testb
je
xchg
dec
fsubrs
xchg
or
sti
cmp
insb
adc
cs
adc
loop
stc
movsl
sbb
push
repnz
adc
sub
jmp
scas
imull
fmuls
jno
adcb
fdivs
mov
jbe
push
shl
es
daa
daa
mov
outsl
popa
adc
bound
pop
je
in
std
das
and
jbe
push
sahf
test
xor
sbb
enter
call
test
pop
ja
mov
sub
xchg
add
test
ja
sbbl
and
mov
xor
aam
pushf
rcr
mov
sbb
gs
rcrl
sub
cmp
sbb
dec
and
xchg
sub
mov
lock
lds
adc
xor
jmp
mov
jl
jmp
loopne
sbb
pop
pop
fstpl
repz
sub
aas
adc
or
andb
scas
mov
mov
inc
or
mov
or
push
jbe
mov
aam
ja
out
cs
movsb
fwait
mov
out
int3
into
xor
in
add
sbb
test
lret
pop
add
rcl
add
movsb
out
xchg
inc
xchg
inc
mov
and
inc
xor
hlt
dec
push
xchg
mov
push
inc
push
imul
push
ljmp
adc
sub
loop
mov
andl
adc
mov
jle
pop
sbb
sti
mov
push
mov
push
sbb
mov
lret
jbe
in
or
jle
xchg
pop
fdivrs
xor
shll
mov
loope
test
mov
cmp
aam
sti
add
pop
jnp
stos
into
movsb
or
mov
leave
ror
in
jnp
inc
ret
xchg
jns
in
mov
add
mov
pop
lret
cmpsb
jno
mov
cld
enter
mov
cld
bnd
fiadds
cmp
jp
push
pop
xchg
dec
aam
sub
dec
mov
mov
cmc
js
int3
mov
mov
jecxz
icebp
rcrl
outsb
addr16
testl
add
fisubs
push
jg
repnz
shll
inc
or
xchg
mov
or
add
cmp
mov
mov
mov
mov
mov
inc
lahf
mov
in
cmp
cmpsl
in
mov
loop
int3
fimuls
mov
setge
inc
add
mov
js
stc
mov
mov
cmpsb
fldcw
hlt
orb
cwtl
cmp
xor
xchg
clc
loopne
sub
pop
nop
lret
js
ficomps
lds
adc
cmp
and
clc
sbb
mov
movsb
dec
dec
nop
cld
loopne
mov
in
out
and
in
ja
mov
jno
and
popf
push
movsl
js
dec
imul
or
scas
mov
mov
pop
sbb
mov
dec
and
jne
mov
pop
mov
movsb
shlb
fbld
cltd
mov
mov
jge
enter
repz
xor
sarl
add
call
std
pop
push
fnstsw
inc
mov
shlb
and
scas
in
dec
arpl
jecxz
loop,pt
xor
in
cld
loopne
fwait
cltd
ja
cltd
xchg
push
pop
jmp
push
jno
shrl
lods
inc
or
std
bound
cmp
movsb
mov
xor
sub
sub
arpl
ss
addr16
mov
xchg
sbb
fwait
push
mov
jg
pop
sbb
inc
icebp
lret
shr
pop
ret
repz
cmp
ljmp
mov
push
and
mov
xchg
add
out
and
jns
sub
leave
daa
xor
adc
add
sti
mov
insl
mov
mov
sbb
or
pop
les
aam
mov
cmp
sbb
and
mov
stos
xor
lods
outsb
pop
and
mov
xor
inc
sti
movsb
jmp
mov
ljmp
les
pop
sahf
jg
push
es
aaa
stos
inc
jg
mov
pop
push
push
ret
inc
push
push
repnz
fisubrs
sbb
jmp
pop
repnz
pop
mov
cmp
mov
hlt
fisttpl
push
and
iret
lods
in
pusha
lds
jmp
inc
mov
xor
sub
jge
aas
insl
pop
xchg
into
loop
jno
jnp
jne
pop
push
xor
into
mov
adc
xor
jg
push
inc
jp
add
xchg
mov
sub
addr16
lock
loopne
or
and
scas
repz
sahf
jns
mov
mov
sbb
mov
sbbb
or
cmp
dec
sub
daa
loopne
or
pop
xchg
inc
push
shlb
cs
rorl
xchg
sub
daa
push
cmp
jle
lds
pop
test
clc
fidivs
std
jecxz
bound
push
arpl
sahf
mov
or
add
sbb
mov
add
enter
outsl
sub
mov
cli
sub
pop
sbb
ficompl
inc
sbb
dec
xor
shlb
fdivrs
gs
imul
lods
dec
insb
mov
inc
sub
mov
aad
fmul
lods
sub
push
sbb
xor
dec
fstp
cmpsl
ja
xor
sub
aad
cmpsb
dec
gs
jbe
addr16
jne
dec
push
and
in
idiv
out
imul
js
enter
push
sbb
push
xchg
mov
jae
icebp
loopne
mov
sbb
cmpsb
cmp
sbb
mov
popa
cltd
aad
sub
cld
cli
negb
xchg
cmp
add
push
mov
lds
sub
cmp
and
outsl
dec
xor
les
stos
mov
push
movsb
inc
mov
jmp
inc
imul
mov
push
mov
jecxz
or
test
cwtl
scas
mov
cmp
fsts
mov
push
jmp
clc
pop
loop
cmp
test
sarl
ja
push
subl
inc
and
rclb
pop
dec
dec
in
ja
lret
jno
xor
jp
cmp
and
gs
jnp
jae
mov
lret
jle
nop
aam
cmp
jb
nop
dec
rcrb
and
sar
test
cmp
mov
mov
cli
ljmp
adc
addr16
ror
and
lock
inc
cmp
or
mov
and
add
mov
xor
lcall
adc
into
push
sub
adc
mov
pop
data16
add
lds
cmp
inc
push
jg
test
test
push
ljmp
push
jae
jmp
or
arpl
jmp
xor
bound
xlat
jno
cmpsb
aaa
sbb
sbb
sbb
lret
ret
cs
fcomip
cmpsb
clc
xor
outsb
push
mov
ffree
orb
jle
pop
add
in
movl
add
mov
sbb
and
ss
jo
jbe
pop
nop
arpl
lret
push
jbe
fbld
xchg
movsb
dec
icebp
insl
inc
push
int
sahf
jno
xchg
in
pop
add
mov
stos
rclb
pop
stos
cwtl
mov
daa
fwait
outsl
pop
jbe
xor
xchg
lahf
jb
sub
pop
mov
jecxz
lods
pop
pop
jb
insl
cmp
adc
mov
xchg
or
sbb
pop
jle
inc
mov
movsl
cmp
lahf
xchg
xor
addb
imul
daa
mov
add
push
xchg
or
aam
pop
sbb
jge
mov
inc
xor
rorb
mov
or
dec
xor
add
lret
movsl
stos
insb
loop
cmp
push
pop
sti
lea
cld
mov
fidivl
loope
and
icebp
and
jg
xchg
and
mov
cvtpi2ps
in
stos
xchg
adc
movsl
jo
ds
pop
mov
dec
xchg
push
pop
mov
stc
mov
dec
mov
fs
dec
or
push
in
fdivrp
imul
mov
push
adc
mov
mov
and
mov
outsb
loope
arpl
mov
pushfw
adc
insl
fsubl
test
shl
sub
jnp
pop
mov
xchg
add
inc
xor
je
xor
std
push
mov
fbstp
mov
daa
mov
fidivrl
xor
les
negl
push
mov
and
cltd
cwtl
mov
jno
push
lds
dec
mov
outsl
arpl
add
xchg
aaa
es
or
jmp
ret
mov
bound
xchg
xlat
cmpsb
daa
mov
icebp
xchg
xchg
aad
xor
adc
sub
add
mov
cwtl
xchg
xchg
mov
bnd
jl
lret
andb
cs
repz
mov
lahf
add
sbb
sub
leave
cmp
insb
out
ja
cmpsb
xchg
pop
dec
or
add
ljmp
pop
addr16
popf
adc
dec
mov
aas
mov
xor
sub
push
mov
lock
dec
mov
pop
stos
sub
xlat
xor
shlb
sub
adc
daa
or
dec
fsubrl
sub
mov
adc
push
inc
cmp
mov
push
pop
inc
add
fadds
xchg
add
ret
enter
and
imul
std
test
dec
pushf
mov
cmpsl
sbb
add
dec
dec
stos
sbb
sub
push
adc
pop
add
xchg
mov
outsl
dec
or
mov
in
push
adcl
mov
sub
aas
aaa
jge
in
nop
inc
mov
sarb
mov
cmp
dec
mov
rcrl
push
daa
movl
mov
jno
jo
and
mov
pop
dec
leave
daa
lea
mov
or
andl
out
xchg
cmp
jmp
fisubrl
stos
insb
pop
mov
sub
or
add
cmpsb
idiv
add
sbb
mov
out
fidivs
testb
fidivrl
cwtl
jo
and
movsl
repz
shrb
adc
add
or
add
mov
stc
jne
xor
mov
jle
ds
cmpsl
lret
inc
sbb
mov
xlat
jo
or
sub
mov
lock
xlat
push
and
lods
stos
cmp
sbb
arpl
in
pop
cs
aad
inc
adc
aaa
mov
movsl
ds
dec
push
add
aad
jle
jmp
sub
shrb
loop
mov
jl
fs
push
cld
es
mov
mov
push
add
lods
push
pop
lret
dec
outsb
pop
loopne
aad
sub
or
mov
add
jno
sub
lds
pop
out
std
xchg
fiaddl
daa
jg
clc
and
cwtl
sub
sbb
hlt
ret
movsl
ds
movsl
and
or
std
cmp
jg
mov
dec
fwait
pop
roll
loopne
mov
cwtl
cmp
roll
adc
jno
mov
cmp
xor
cmpsb
pop
xchg
jp
cs
in
jne
dec
mov
das
add
xor
xorb
xchg
rorb
fwait
int3
pop
cmpsb
inc
mov
pop
mov
ljmp
rcrl
ds
and
add
and
es
sahf
mov
push
loop
icebp
xchg
cmpsl
mov
icebp
test
clc
data16
es
and
cld
mov
xor
pop
mov
loop
aam
dec
shlb
pop
adc
stc
inc
nop
ret
pop
in
pop
cmp
cmpsb
movsl
in
jmp
popa
stc
cli
add
dec
jl
dec
mov
or
aam
adc
icebp
cwtl
out
outsb
cmpsl
push
ljmp
adc
jns
das
mov
dec
or
add
mov
in
push
mov
test
stos
in
cmpsl
ss
or
dec
mov
push
test
sbb
fstpl
pop
das
xchg
pop
pushf
cltd
nop
inc
stc
out
mov
out
or
aad
loop
xor
mov
call
icebp
leave
into
cwtl
aad
adc
mov
imul
dec
cs
icebp
inc
pop
lock
popf
pop
mov
mov
push
pop
xor
movsb
adc
lret
es
mov
andb
mov
gs
shl
aaa
cmp
test
or
mov
mov
mov
sbb
out
xor
push
sub
cmp
pop
hlt
mov
aaa
int
scas
shll
movsl
aam
das
cli
hlt
add
mov
and
mov
adc
daa
jp
or
cs
xor
lcall
jecxz
das
leave
test
inc
push
dec
add
cmpsb
pop
ficompl
push
and
pop
stos
sbb
cmp
pop
ffreep
inc
popf
sbb
or
mov
scas
jg
xchg
ret
pop
loopne
mov
sub
jbe
sub
or
int
and
pop
jge
outsb
mov
xor
push
dec
outsl
repnz
leave
testl
pop
mov
movsb
ljmp
popf
sub
xor
mov
push
pop
fucomp
push
push
imul
cmp
cmp
sub
xchg
insb
sti
mov
out
in
dec
xor
xchg
js
lcall
cld
loop
pop
imul
int
movl
rolb
add
inc
je
sub
jb
and
jge
xchg
sub
pop
rol
or
jmp
jbe
fs
cs
sub
or
ss
out
fcmovne
stos
pushf
add
lret
data16
and
mov
sbb
shll
and
sahf
bnd
pop
cmp
jo
xchg
and
inc
push
ja
xchg
fimull
std
sarl
stc
movsl
pop
push
cs
jmp
sti
xchg
add
mov
xchg
inc
test
dec
jecxz
ss
push
test
sub
ss
movsb
push
mov
rcrb
jnp
pop
jo
mov
iret
aas
cmp
and
mov
jns
addr16
cmp
repz
xor
int3
add
dec
sbb
dec
mov
adc
test
xchg
pop
dec
xor
mov
jne
sub
out
test
cmp
inc
or
leave
push
ret
adc
adc
mov
sarb
xchg
arpl
mov
sahf
std
jb
cmpsl
popl
sub
or
subb
std
outsb
xchg
mov
stos
fcomip
addr16
dec
add
jle
subb
xor
push
std
jae
loope
stos
es
mov
add
jmp
inc
xchg
addr16
mov
imul
daa
and
int
cmp
fs
enter
dec
adc
fstp
dec
repnz
in
popa
jns
ret
rcrb
mov
xchg
mov
inc
mov
sbb
loop
flds
add
scas
hlt
push
arpl
fs
xchg
mov
pop
rclb
mov
icebp
jns
call
dec
add
sbb
js
test
notrack
aas
not
int
dec
in
je
sbb
test
xchg
lds
xchg
rcl
cmp
mov
mull
push
jns
inc
gs
arpl
mov
popf
pop
push
dec
push
fdivrl
xor
das
inc
cmp
mov
ss
cli
iret
jnp
dec
mov
xchg
xchg
bound
and
mov
jle
and
cltd
mov
pop
inc
iret
inc
loopne
push
mov
inc
enter
or
imul
cltd
push
jp
add
or
jmp
lods
jb
sub
es
xchg
or
lds
stc
xor
mov
sub
sti
dec
sub
rorl
nop
mov
adc
mov
cld
push
ret
lock
daa
or
jg
insl
shlb
xor
pop
adc
aas
mov
ss
jbe
dec
je
aaa
sarl
add
mov
mov
repnz
xchg
cli
pop
icebp
dec
sub
pusha
jae
je
idivl
bnd
mov
jns
pop
lret
or
fcomps
pop
and
mov
inc
jbe
in
icebp
cld
sub
scas
adc
push
xor
lds
xchg
popf
mov
imul
mov
lret
adc
sti
jb
or
sbb
sti
sbb
into
mov
add
fmulp
push
ss
dec
out
outsb
roll
test
das
pop
in
popf
mov
inc
push
incl
insb
jge
fbstp
push
jae
fwait
pop
test
ret
popa
nop
mov
icebp
ljmp
iret
xchg
mov
stc
sub
mov
mov
iret
xor
iret
rcl
cmpsb
stos
scas
push
cmpl
lret
inc
sub
dec
movsb
jp
dec
and
outsw
rcrb
outsl
aas
sbb
cmp
int
sbb
imul
clc
dec
bound
mov
jecxz
sub
cwtl
pop
inc
outsl
and
sahf
pop
jl
outsb
push
nop
rcl
xlat
jb
in
sbb
pop
js
scas
cmp
push
inc
jecxz
push
lcall
cltd
out
test
stos
push
add
pop
adc
repz
enter
xchg
cmc
xchg
mov
les
popf
jae
into
fistpll
add
filds
ss
adcl
sbb
jns
loopne
sti
cmc
push
dec
into
in
loopne
ds
popa
out
dec
sbb
lcall
push
movsb
jno
mov
or
mov
into
mov
and
ljmp
imul
scas
push
sti
movsl
mov
aaa
enter
data16
pop
jbe
cmp
add
lock
mov
int3
sub
mov
and
jge
jo
repz
scas
or
outsl
xchg
push
stos
push
sti
jmp
sbb
adc
mov
mov
cmp
mov
rcrl
cltd
and
pop
es
xor
add
dec
lcall
mov
les
xchg
push
inc
les
inc
dec
nop
fsubl
enter
aam
sub
push
lret
in
push
repnz
stc
test
das
inc
cmc
and
aad
shlb
test
rclb
idivl
sbb
jo
cwtl
sahf
imul
movsb
or
fiaddl
xchg
into
mov
faddl
mov
sahf
or
aam
mull
cld
dec
rol
add
aad
rcll
push
and
and
and
or
cltd
and
xchg
cmpsb
das
pop
pop
or
push
rcrb
inc
fdivrs
int3
mov
loopne
sub
sahf
fldz
or
fnstenv
cmp
enter
mov
ss
lahf
idivb
arpl
insb
cmp
and
in
jge
add
leave
ja
fists
cltd
or
push
hlt
lds
add
fwait
je
in
lcall
out
adc
push
movsb
ret
lods
xchg
std
pop
cmp
sbb
movsb
adc
xlat
ret
cli
stos
cmp
fldcw
inc
insl
mulb
xor
lock
out
sbb
cwtl
sub
cli
cmp
dec
int3
int3
jp
xchg
les
enter
jp
insl
sysexit
cmpb
sub
lret
mov
xor
sub
data16
add
shlb
loope
out
imul
lret
dec
mov
push
mov
ret
jecxz
pop
xchg
pop
insl
iret
pop
adc
bound
stc
dec
lock
lods
pop
dec
adc
cmp
into
rol
mov
les
jmp
sub
in
aam
roll
or
xchg
repz
lods
ss
jns
lock
push
enter
sbb
lods
cmp
xlat
fnsave
dec
int3
adc
cmp
call
data16
push
push
mov
mov
sbb
popl
dec
int3
inc
cmc
scas
data16
out
int
insl
or
into
incb
gs
mov
fcomi
jmp
xchg
mov
jle,pt
popf
scas
mov
sbb
int3
aad
movsb
push
mov
ret
pushf
loopne
and
mov
pop
test
mov
rolb
call
mov
ja
icebp
sbb
icebp
out
adcb
negb
cmp
pop
dec
push
xchg
jge
iret
iret
sub
push
jns
adc
fimuls
sub
mov
pop
push
cmp
daa
xchg
push
je
aas
pop
rorl
rcrl
dec
adc
mov
mov
or
test
inc
fimull
pop
push
clc
cmpsl
mov
addr16
sbb
xchg
xor
outsl
ja
or
push
jle
inc
aam
lret
rcr
jbe
push
aas
cmp
cwtl
fdiv
repnz
jbe
push
dec
shll
popf
lock
lret
jne
rcpps
jnp
pop
push
mov
jp
ljmp
cmp
push
enter
pop
aas
cmp
jle
popf
sub
stc
loopne
pushf
push
sub
imul
jae
stos
push
call
inc
scas
pop
push
and
sti
daa
sahf
adc
lea
adc
scas
fwait
mov
mov
or
imul
jl
imul
stos
ss
dec
addr16
call
xor
cmp
aad
xor
movsb
sub
pop
sbb
inc
mov
push
icebp
dec
lock
addr16
pop
aaa
mov
ficompl
dec
insl
mov
call
dec
cmp
clc
push
cwtl
mov
sbb
sub
sarb
jne
adc
cwtl
sbb
into
into
sub
mov
inc
xchg
jno
mov
data16
gs
iret
sahf
cmp
cmp
iret
cmp
mov
lret
mov
imul
outsl
lods
and
xchg
cwtl
popl
loopne
fwait
jmp
jbe
dec
xor
fnsave
rclb
cmp
jnp
mov
xchg
fcomps
popa
mov
xchg
movsl
dec
fstpt
jmp
sub
test
cwtl
addr16
lds
es
test
ret
jg
push
enter
adc
pop
cld
bound
sub
sub
out
dec
sbb
dec
call
push
pop
or
cltd
dec
popf
sbb
xor
imul
mov
sbb
cmp
arpl
sti
fdiv
cmp
jge
xchg
sbbl
xor
cmpsl
or
das
jecxz,pt
mov
mov
push
repz
iret
sahf
mov
xchg
cmpsl
mov
xor
clc
cmc
dec
or
dec
lret
dec
adc
lods
inc
out
mov
jl
sahf
pop
sbb
dec
rorl
sub
jo
push
jae
aam
in
imul
push
and
shl
ret
rorl
sbb
inc
adc
pop
ficompl
mov
aas
fildll
dec
out
mov
pop
mov
movsl
push
movsb
popf
imul
call
rep
lret
cli
sub
shrb
lods
leave
fmull
sbb
shrb
movsl
loop
mov
fs
out
rcrl
pop
fwait
cld
leave
pop
fcomps
pop
loop
lods
pop
dec
lcall
imul
loope
lock
pop
aaa
lds
or
mov
aaa
test
mov
or
mov
lock
jbe
cs
push
mov
clc
enter
jmp
ret
jecxz
clc
mov
fstpl
inc
jp
mov
dec
sahf
push
fldt
repz
fistpl
xchg
mov
data16
sti
fstpl
rclb
or
pop
dec
push
aad
xlat
int3
sbb
test
push
fwait
sbb
dec
mov
repnz
insl
in
mov
and
leave
lahf
pop
jno
cmc
push
mov
rcll
mov
lods
lret
mov
mov
and
popf
push
mov
and
in
aaa
xor
out
jo
into
xchg
test
mov
cmp
lods
jp
testb
mov
mov
add
insb
dec
pop
dec
in
cmpsl
call
add
cmpsl
mov
and
ljmp
fists
scas
inc
add
in
push
lods
fsts
dec
sub
fmul
and
pop
adc
lret
cmp
lcall
es
jno
or
dec
xchg
xlat
push
aaa
and
jo
scas
ss
add
or
sbb
adc
sub
dec
mov
iret
push
dec
das
jmp
or
adc
adc
cmpsb
aad
sbb
cmp
adc
xchg
lods
pushf
cmp
sbb
lods
jo
shrl
jno
xchg
jbe
jmp
mov
jbe
daa
push
push
pushf
adc
sti
enter
xchg
ljmp
outsl
inc
sub
pop
lock
adc
mov
sbb
mov
movsb
test
int
jb
sub
hlt
fsubrs
scas
mov
icebp
daa
out
out
jnp
push
movsb
std
hlt
jp
leave
outsl
pop
mov
mov
idivl
nop
in
sub
mov
fisttpl
jmp
clc
pop
push
mov
ret
sti
icebp
jns
bound
sub
inc
adc
add
dec
and
push
popf
mov
or
cmpsb
and
arpl
repz
sahf
mov
pushf
mov
pusha
test
in
dec
jmp
push
push
mov
push
add
clc
movsl
arpl
or
out
push
pop
loope
mov
xor
in
push
mov
ret
pop
sbbb
xchg
push
enter
sub
mov
dec
mov
pop
fnstenv
ror
movsb
xchg
push
mov
push
aam
xchg
and
pop
pop
ja
addr16
icebp
mov
mov
push
mov
into
push
add
repnz
out
les
clc
hlt
jns
ljmp
rcrl
xchg
cmp
dec
dec
mov
adc
push
mov
stc
lods
cmp
test
mov
push
xor
jecxz
testb
or
stos
mov
adc
fwait
adc
rcrb
std
shlb
inc
pcmpeqb
movsb
popa
add
jl
es
pop
mov
jmp
test
stc
shlb
fwait
movsb
fdivl
push
insb
push
bswap
xor
inc
sbb
mov
dec
std
jmp
jp
andb
mov
cmovne
pop
sub
fsubrs
out
fbld
or
roll
xchg
dec
mov
mov
jl
pop
pop
cwtl
cli
push
pop
loop
sbb
data16
sbb
shlb
fwait
ds
ja
call
jmp
outsl
fwait
cmp
xchg
je
ret
sahf
jmp
cmp
pop
pushf
lds
mov
scas
inc
movsl
fs
push
add
arpl
xor
jnp
jge
cld
sbb
inc
pushf
adc
xchg
dec
cmp
dec
rorl
dec
mov
das
movsb
mov
out
jg
cli
or
xor
pop
cmp
push
shl
jns
xchg
lcall
mov
jne
movsl
jne
icebp
out
andb
push
push
jmp
xchg
and
lods
xor
aas
out
icebp
aas
push
outsb
je
mov
sti
add
test
mov
test
mov
sarl
jo
xor
rorl
mov
xchg
sbb
dec
lods
xchg
mov
mov
loopne
sti
insb
push
adc
push
xchg
push
jne
mov
mov
adc
sti
jle
and
aas
or
add
leave
adc
es
addr16
jnp
out
cld
fcomi
insb
mov
xchg
push
das
and
arpl
add
int3
adc
enter
mov
inc
cmp
in
ficomps
lret
sub
es
sub
push
sti
push
out
pop
imul
stc
mov
xchg
test
test
inc
sbb
dec
inc
sbb
sub
stos
cmpsl
add
lret
not
jae
call
sub
adc
adc
dec
cli
cwtl
and
popa
xchg
jbe
faddl
add
mov
fnsave
addr16
les
xor
movq
xchg
mov
out
add
testl
ljmp
cmpsb
jl
mov
movsb
into
jecxz
jae
jmp
push
js
add
sub
mov
mov
lret
add
outsl
gs
mov
dec
add
sahf
push
out
add
mov
cmpsb
in
mov
cmp
xor
xchg
fs
jb
sti
aam
fbstp
inc
add
ret
jl
xchg
sub
pop
xlat
repz
orl
fs
push
popf
jg
xchg
and
inc
dec
xchg
push
or
mov
and
adc
xchg
mov
insl
stos
adc
aas
lods
mov
aas
jp
int
fs
mov
jo
xchg
pop
fbld
xchg
xchg
dec
sub
ret
or
lock
cmp
or
sbb
hlt
xlat
xor
xor
data16
sub
mov
jecxz
jbe
xchg
and
iret
inc
sub
or
outsb
push
ljmp
in
mov
das
sub
fdivl
sub
pop
push
xchg
int3
push
or
or
scas
cli
mov
into
add
call
rorl
pop
fstps
call
test
sbb
cld
scas
das
rcrb
scas
loopne
pushf
xor
test
hlt
stos
or
mov
and
fsubl
in
sub
pop
jle
and
push
add
movsb
aad
out
push
mov
jo
mov
popa
lds
in
ss
lds
pusha
and
jo
sub
push
and
sub
dec
xor
push
push
mov
dec
mov
cmp
jp
sbb
sub
mov
data16
jo
cmpsb
mov
icebp
in
rol
fsubl
sbb
lds
popa
inc
mov
std
sub
sahf
aad
xchg
hlt
test
das
daa
xchg
jbe
sahf
mov
pushf
xchg
cld
int
loop
jecxz
mov
addr16
jl
dec
adc
ret
xchg
lods
sbb
push
mov
test
mov
outsl
pop
les
mov
fcmovu
jp
in
push
repnz
in
pop
and
loop
sahf
dec
lahf
lahf
int3
rorb
push
xor
mov
insb
pusha
out
nop
jp
pop
mov
cmp
shll
jns
sbb
out
loope
and
repnz
or
imul
sub
je
adc
jae
dec
scas
jae
push
sbb
shrl
sub
lahf
mov
pop
cwtl
dec
cmpsb
cwtl
add
xchg
sahf
mov
xchg
rol
dec
loope
test
mov
imul
lret
sub
loope
fsubrs
popa
push
aam
add
in
inc
pop
sti
repz
popa
add
mov
mov
pop
dec
movsl
stos
mov
xchg
sbb
dec
sub
inc
or
mov
lods
ret
jp
xor
popf
push
mov
imulb
mov
pop
lock
int
mov
pop
aam
inc
jg,pn
in
popf
jecxz
lret
dec
test
fmull
cwtl
popf
ficoml
cmp
dec
arpl
push
cmc
and
inc
jbe
and
sbb
lcall
cmp
jg
inc
pop
movsb
add
xor
xor
scas
out
lea
movsl
pop
daa
pushf
and
out
aad
and
leave
mull
imul
test
add
add
push
mov
aam
or
jecxz
arpl
aaa
jmp
bound
mull
xchg
cmp
test
xor
cmp
lods
or
push
jne
mov
mov
sub
and
cmpsl
aad
iret
jno
sbbb
imul
rorb
mov
xchg
jp
sub
mov
xchg
lock
or
loop
pop
xor
jae
es
sub
data16
mov
cli
fimull
xor
sbb
fbld
out
push
mov
xor
aam
outsl
rcll
push
pusha
mov
fsubr
cli
movsb
mov
cltd
cltd
xor
shrb
repz
fucomip
sahf
mov
push
adc
aam
sahf
xchg
outsl
or
fmuls
push
shl
mov
inc
out
or
lret
out
add
ret
test
cli
cmc
sarl
or
out
cmc
jle
or
mov
cmpl
or
sub
xorb
adc
or
sub
push
inc
iret
std
sbb
xchg
outsb
dec
int3
sbb
and
stos
jg
pop
add
mov
mov
mov
idivb
xchg
fists
sti
mov
inc
test
ds
push
xor
addr16
bound
test
xorb
sbb
pushf
add
test
mov
fwait
jns
sbb
sarl
scas
sbb
rcr
pop
add
push
mov
add
jae
adc
out
js
push
jmp
or
jmp
arpl
nop
arpl
je
frstor
mov
movsl
and
shrl
ljmp
or
inc
lock
jle
mov
fs
movsl
jl
leave
insb
mov
pop
fwait
sub
add
js
enter
xor
xchg
jle
sahf
cmp
enter
mov
mov
push
lcall
jecxz
notl
push
pop
rcrb
aam
adc
or
ljmp
pop
xor
out
aad
jnp
mov
cwtl
sbb
repnz
sub
arpl
xor
pushf
int
add
mov
dec
mov
test
xchg
xor
pop
call
xor
and
pop
stos
or
cmp
jge
inc
mov
or
lock
insb
insb
mov
mov
hlt
in
les
int
or
adc
mov
pop
jbe
xchg
sahf
mov
aas
idivb
pushf
or
mov
jae
dec
jne
sub
push
sbb
or
insb
jge
mull
push
and
sahf
adc
out
leave
fistl
jb
sar
xchg
xor
lods
xchg
shr
ficomps
out
jp
and
mov
fsts
sbb
outsb
aad
push
lods
xor
mov
cli
icebp
mov
mov
sbb
and
test
mov
add
arpl
sbb
lods
pushaw
or
neg
bound
xchg
fnstenv
and
repz
jne
add
pop
jmp
stos
aaa
jno
and
lret
jmp
je
popa
or
ret
jbe
fmull
jp
call
gs
mov
stos
sbbl
insb
lretw
and
repnz
dec
xchg
and
or
inc
push
insl
jecxz
xchg
cli
inc
cmp
xchg
ljmp
pop
add
lods
jmp
out
xchg
ficomps
xor
in
mov
cwtl
add
jg
inc
rcrb
mov
xor
arpl
or
and
add
cmp
lods
rcrl
cmp
mov
fsub
or
mov
push
iret
jg
movsl
in
or
lahf
lods
in
mov
popf
lea
push
repz
imul
inc
xchg
icebp
je
paddsb
cmpsb
xor
cmp
scas
cwtl
cmpsb
xchg
adc
mull
insl
loop
push
pop
add
mov
loope
hlt
mov
pop
mov
xchg
push
pop
mov
sub
shll
push
imul
imul
jb
add
movsl
add
jle
jb
andnps
outsl
ror
xchg
jp
mov
imul
xchg
cmp
sub
mov
stc
mul
add
or
bound
cmp
jnp,pn
push
adc
into
cld
cmpl
lods
sub
adc
or
icebp
mov
xchg
adc
stc
ja
mov
add
mov
fnstsw
ss
add
pop
inc
iret
adc
cs
lcall
rcll
pop
pop
push
mov
popa
push
sti
fnstsw
sahf
jae
sarb
es
jg
imul
jle
or
push
les
or
ja
pop
les
fwait
add
push
cmpsl
and
xchg
lret
pop
ror
movl
and
adc
addb
xchg
bswap
roll
xchg
je
lds
hlt
sub
nop
subl
xor
mov
rorb
mov
je
pushf
jo
dec
mov
and
and
and
jo
jmp
push
xor
and
push
dec
sbb
sarl
pop
mov
push
imulb
xor
sti
fnstcw
in
addb
jecxz
or
arpl
test
or
arpl
pop
sbbb
dec
lock
pop
insl
ja
sub
ja
mov
inc
inc
mov
call
sub
call
pop
inc
scas
lock
sti
scas
fsts
pushf
add
shl
sbb
and
jbe
or
lret
andl
stos
sbb
adc
push
in
jg
jle
fldenv
in
jg
adc
in
adc
sub
xor
out
ss
cmp
gs
adc
loop
repnz
xchg
ljmp
pop
and
inc
mov
imul
insl
lods
je
outsb
adc
in
aad
aas
pop
mov
enter
push
popf
popa
lock
jo
add
sbb
mov
add
movsb
cmpsb
sar
jg
push
js
mov
lea
std
fldpi
sub
ds
pop
or
xchg
rorl
jns
push
jecxz
negb
adc
mov
fstpl
sub
mov
test
aam
les
pusha
jbe
stos
lock
or
add
inc
popf
cmp
shlb
ficomps
mov
adc
das
and
dec
dec
jnp
and
ds
push
fldenv
mov
ljmp
cli
movsb
insl
jmp
out
fwait
divb
push
xchg
clc
dec
pop
push
jno
inc
adc
push
mov
mov
cmovp
or
lea
bound
sbb
jnp
rcrl
scas
jp
or
sub
scas
sub
push
xchg
fldl
ljmp
jne
bound
stos
mov
scas
gs
cmc
sub
nop
push
ds
in
mov
fs
scas
dec
movsb
mov
fwait
jne
rolb
bound
mov
push
in
or
hlt
cmpsl
inc
pop
dec
jne
xchg
jae
ljmp
out
pop
jg
fwait
ficompl
in
std
mov
mov
bound
jl
js
push
pushf
jb
and
lret
fcoms
das
subl
mov
mov
mov
into
idivb
stc
adc
pushf
inc
stc
mov
xor
sub
ja
movsb
fisubrl
je
push
insb
sahf
rcrl
cltd
leave
divb
test
jae
fisttps
jae
xchg
add
jns
dec
fdivl
or
fdivs
sub
mov
xchg
pop
in
aaa
pop
test
cs
out
idivb
cmp
stc
test
outsb
sbb
cwtl
sub
imul
stos
jns
xor
mov
sbb
jns
insb
rcr
scas
fsub
out
or
hlt
rcll
mov
or
jle
xorl
fdivs
ficoml
jno
in
jo
mov
std
in
js,pn
xchg
movsl
xchg
movsb
adc
pop
in
mov
and
mov
push
nop
fs
sti
gs
cmp
adc
sbb
insw
pusha
lods
sub
cwtl
jl
jnp
adc
shlb
cmp
fdivrl
iret
sbb
cmp
push
pop
xchg
or
arpl
sbb
xchg
pop
lods
setae
int
ficoml
cmpl
cmp
dec
push
js
and
dec
jp
sarl
adc
aad
cs
std
sub
cmp
cmp
ja
xchg
fcoms
sarb
push
pushf
out
pop
add
mov
sbb
ret
ja
mov
mov
sub
test
jns
mov
rcrl
inc
jg
mov
push
stos
adc
inc
sub
insl
xor
fmull
lods
out
pop
pop
lods
jbe
sub
push
jg
outsl
jne
cmp
push
negb
fadds
xlat
cltd
sbb
jbe
inc
outsl
mov
es
jb
aad
hlt
in
mov
inc
and
faddl
iret
add
scas
jne
lds
lcall
pushf
push
push
sbbb
xchg
jl
mov
inc
insl
fsubr
in
sub
xchg
inc
and
cmc
mov
nop
pxor
mov
jecxz
sub
sbb
lahf
jmp
mov
out
sbb
inc
push
and
or
mov
lock
rcr
or
cli
ljmp
aam
aas
inc
sbb
push
test
ljmp
in
dec
jmp
mov
stc
sbb
cli
mov
movw
fcoms
repz
scas
into
xchg
movl
popf
mov
xchg
mov
shll
bound
cltd
aam
sub
sub
pusha
add
out
out
add
inc
inc
dec
jne
mov
scas
push
mov
jl
push
cmp
xor
notl
push
out
cmp
xchg
stc
mov
int3
stos
int
es
lods
in
lods
dec
xchg
adc
dec
outsl
add
in
jae
inc
xchg
dec
mov
mov
outsl
sub
cmpb
std
push
addr16
mov
push
jbe
xlat
stos
outsl
mov
sbb
cmp
rorb
jns
pop
sbb
cwtl
outsl
fiadds
xor
pop
call
out
xchg
mov
cwtl
mov
cwtl
adc
lahf
hlt
movsl
mov
pop
addr16
aas
cmp
fdivrl
cmpsl
xor
fsts
or
xchg
aaa
jb
dec
dec
xor
or
adc
dec
cmp
xor
pop
cli
inc
xchg
fbld
xchg
clc
mov
cli
adc
into
mov
cmp
jge
pop
icebp
movsl
rorl
mov
mov
ffree
sub
int
frstor
cs
hlt
sub
pop
sbb
mov
inc
jmp
imul
je
mov
xchg
aaa
shl
scas
pop
xor
xchg
mov
sbb
bound
xorl
gs
fnstcw
popa
dec
or
inc
push
jnp
adcl
ss
push
in
pop
lods
dec
adc
test
cmp
jl
or
inc
add
cmp
jp
fldenv
jns
pop
andb
sub
lea
mov
xchg
movsl
popa
ja
jmp
into
ja
ljmp
pop
fnstsw
push
gs
outsb
test
inc
in
jle
adc
mov
test
xor
push
repnz
out
movsb
popf
and
movups
pusha
fwait
in
scas
mov
ljmp
js
cmp
clc
sbb
lret
out
sub
ja
jp
popf
sbbb
add
jae
gs
dec
mov
cmp
add
shlb
loop
ja
adc
clc
decb
leave
xchg
or
xchg
sub
das
into
xlat
push
icebp
push
inc
dec
out
out
std
sbb
sub
jbe
out
testb
mov
fs
leave
test
mov
pop
test
popl
add
jmp
jg
fidivrl
test
jmp
jg
sub
into
inc
jns
inc
add
cltd
stc
and
mov
cmp
jnp
loope
jmp
cmpl
rcr
stos
movsb
cs
inc
mov
pusha
mov
fbstp
fnstsw
push
mov
mov
stos
mov
add
dec
iret
pop
outsl
jbe
sbb
jg
jmp
dec
jg
ret
jmp
loopne
and
fstps
mov
into
dec
imul
sti
xchg
insl
out
out
gs
mov
jbe
shl
pop
mov
and
cli
pop
insl
xor
call
push
jns
jp
insb
jb,pn
pushf
fadds
push
push
jg
mov
inc
jg
rcrl
cmp
or
dec
aas
push
jmp
cmp
push
insb
in
fdivrl
popf
or
test
aad
loop
das
cmp
psubusb
push
es
add
lea
lds
lahf
in
xchg
jne
lahf
adc
push
cmpl
adc
inc
inc
mov
int
mov
xor
xchg
pop
enter
out
adc
and
jecxz
sti
mov
pop
or
jle
jbe
push
testl
shr
jae
mov
mov
xor
dec
mov
jae
ja
mov
out
fwait
lods
js
or
or
add
lret
inc
add
push
mov
mov
loopne
fwait
stos
pop
rclb
jae
pop
iret
mov
cltd
out
mov
push
add
and
push
xor
mov
mov
jno
into
out
inc
push
and
jno
sbb
cwtl
inc
enter
movsl
mov
clc
push
into
pop
dec
imul
jnp
loopne
lock
cli
js
xorl
cld
pop
add
dec
decl
dec
add
and
dec
sub
stc
ficompl
xchg
sbb
pop
shl
mov
adc
out
mov
dec
pushf
and
fistl
loope
fldenv
mov
shrb
js
and
lock
add
mov
jno
lods
jmp
scas
and
fwait
push
cmp
pop
sbb
stos
xorb
xor
add
adc
xchg
aas
addr16
xchg
jge
mov
cmp
mov
out
int
mov
xor
test
idivb
jae
into
cmp
jl
mov
addb
and
pop
cmpsl
push
das
cmp
in
pop
adc
mov
test
scas
adc
aas
inc
mov
pop
xor
jno
xchg
sub
in
cmc
int3
mov
adc
sbb
sub
sub
mov
sbb
dec
enter
inc
lock
sbb
mov
les
test
andl
mov
mov
subl
cmp
jns
fst
jnp
jno
iret
sub
adc
inc
enter
or
dec
mov
ret
adc
mov
mov
add
call
mov
inc
mov
imul
mov
fcompl
ja
cld
ljmp
leave
inc
sbb
jl
and
mov
mov
mov
ds
mov
test
cmp
jl
bound
lret
push
and
fistl
stc
sbb
pop
shll
adc
fstl
adc
inc
and
movsb
sub
sub
push
mov
movsl
lret
push
bound
sbb
out
iret
in
xorb
pop
shll
mov
pop
jg
mov
mov
lock
or
jg
divb
dec
adc
sub
out
insb
jmp
test
cmc
push
sti
fcomps
or
lahf
mov
ret
pop
ljmp
repz
xchg
mov
jmp
mov
push
and
and
cwtl
push
pusha
push
jmp
lock
fucom
das
jbe
push
int3
mov
int3
hlt
faddl
push
daa
rep
push
xchg
out
and
es
nop
adc
cs
stc
hlt
je
adc
sbb
xchg
pusha
divl
or
jne
into
or
inc
cmc
ret
jns
jbe
scas
test
lea
nop
dec
cmp
or
pop
fcmovbe
xorb
in
dec
inc
ret
inc
inc
scas
loop
fistl
add
fldenv
repz
pop
sarl
outsl
mov
push
pop
jmp
lods
or
test
js
stos
sbb
pop
mov
push
sbb
shll
jmp
mov
mov
jle
test
bound
sbb
push
jns
inc
in
and
rcr
test
sub
rcl
cmc
fcomip
push
imul
sahf
pop
fistps
cwtl
pushf
jmp
and
adc
bound
mov
dec
cmpsl
xlat
cmpsb
pop
test
mov
stc
push
lds
cmpsl
cwtl
roll
xor
repnz
push
inc
test
lcall
add
inc
repnz
inc
ds
bsr
shll
add
sbb
imul
addb
and
xchg
push
mov
inc
sub
clc
in
in
das
add
sbb
jns
out
lock
je
pop
xchg
iret
jae
mov
push
pop
loopne
loop
int3
dec
cmp
mov
rcl
arpl
or
pop
mov
xchg
ret
xor
pop
xchg
int3
cmc
cld
daa
jp
clc
pop
push
imul
idivb
adc
enter
movsl
jp
fdivrs
sub
rcr
pop
in
lret
sbb
outsl
and
xchg
push
push
aad
fisttpll
aam
jbe
aas
xchg
xor
fimuls
aaa
sbb
push
bound
dec
js
outsb
stos
sub
cmp
xchg
or
cwtl
je
js
adc
out
repz
push
xchg
lret
testb
popa
js
in
mov
icebp
sub
add
iret
mov
pop
mov
pop
and
add
xchg
add
or
inc
add
jne
xor
sbb
rorl
cmp
inc
jecxz
xor
inc
jl
adc
xchg
test
test
jno
pushf
addr16
loopne
push
add
cvttps2pi
cmp
mov
in
popf
stc
lret
fdivrl
adc
loop
mov
sar
or
scas
sub
andb
sbb
cmp
stos
adc
cmp
testb
es
shrl
dec
popf
lods
mov
mov
mov
jge
fwait
dec
call
xor
fucompp
xor
scas
pop
push
int
loopne
outsl
pop
fs
lock
and
shrb
jnp
loop
sub
mov
je
packsswb
push
in
lcall
ljmp
pop
pop
pop
mov
icebp
mov
sub
push
and
insl
inc
inc
ds
addr16
jne
adc
push
pop
hlt
mov
test
repz
sbb
lock
cwtl
sub
jae
mov
sub
xor
and
xlat
cmp
mov
mov
sub
jb
push
loop
inc
test
shl
sub
xchg
cmpl
outsl
fcmovu
mov
mov
cmp
add
sarl
mov
add
adc
sahf
lahf
xchg
mov
pushf
mov
lea
cli
ja
jnp
pop
sub
or
xlat
jb
stc
push
xchg
mov
push
out
enter
adc
mov
inc
dec
xchg
cld
addl
shr
fwait
dec
cmp
or
call
jg
mov
mov
stos
sbb
daa
fistpll
sub
jl
daa
adc
dec
jo
jl
aas
xor
dec
push
add
add
sub
add
or
stc
ret
push
out
sbb
insb
cli
and
sub
mov
cmpsb
jmp
bswap
jle
mov
call
in
loop
xor
iret
lea
popa
pop
aam
dec
mov
std
cs
or
push
xor
jecxz
mov
dec
loope
testb
or
push
in
dec
shrb
push
sub
or
and
dec
sbb
mov
mov
scas
push
loopne
sbb
adc
shrb
sahf
rolb
mov
or
divl
pop
mov
adc
rcrl
sbb
movsl
jp
cld
out
gs
sti
cmc
inc
call
add
in
inc
in
mov
loop
test
push
xchg
nop
adc
mov
push
mov
aaa
pop
cmp
out
push
arpl
sub
sbb
out
cld
incl
ds
jl
adc
mov
ljmp
mov
sahf
mov
push
pop
movsl
mov
icebp
inc
mov
test
mov
sub
jecxz
inc
mov
fidivrl
mov
mov
mov
aam
andl
lods
icebp
movsb
fcmovu
sbbb
out
lods
loope
jg
push
cli
ficomps
setb
es
and
pushf
call
sbb
popa
lea
pusha
cmc
adc
xor
push
imul
jp
xorb
dec
cwtl
aam
int
dec
addl
inc
add
aas
shlb
lds
push
cmp
mov
cmp
and
das
adc
inc
loope
repnz
mov
and
mov
mov
mov
xor
xor
dec
add
fiaddl
and
sub
and
mov
mov
adc
dec
push
iret
or
or
jno
movsb
push
add
movsl
lret
push
js
jb
add
mov
sar
dec
testb
mov
hlt
jle
insl
cmp
inc
lods
das
cmp
mov
pop
pop
nop
mov
aam
inc
mov
mov
repz
push
jle
ja
jne
into
lea
in
or
sub
cld
xchg
or
push
bound
lods
test
into
lock
and
push
ds
outsb
arpl
popa
push
or
pop
sti
fdivp
lock
push
cmpsb
fmuls
mov
and
jmp
pop
cmpsl
lret
int3
and
cwtl
fdivl
jecxz
inc
ljmp
jmp
test
in
xlat
das
dec
fists
pushf
sub
mov
dec
inc
push
xchg
test
test
sub
push
push
sub
cmp
inc
mov
hlt
sub
out
lcall
pushf
mov
stos
xchg
scas
loopne
add
xchg
mov
inc
scas
rorb
lods
sbb
or
inc
sbb
repnz
shll
mov
jbe
cwtl
xchg
icebp
push
xchg
inc
add
cmpsb
in
xchg
xchg
pop
mov
les
enter
negl
jnp
cwtl
ret
or
movsb
and
mov
es
mov
dec
cmpsb
repnz
cmp
jp
and
out
jbe
jmp
bound
mov
test
sbb
imul
mov
popf
das
jle
pop
lret
ds
xchg
adcb
mov
xchg
sub
or
jge
or
lods
data16
lea
add
imul
sbb
adc
dec
ret
mov
xchg
pop
pop
lcall
mov
push
imul
int
notb
adc
insb
std
and
adc
sub
or
pop
or
push
mov
push
dec
mov
test
int3
push
popf
push
sti
es
hlt
std
mov
std
lods
add
stos
gs
xor
stos
arpl
jbe
loop
test
int
sbb
adc
mov
and
movsl
xor
pop
aad
flds
lret
rcll
icebp
es
ja
lret
jae
leave
or
mov
and
pop
push
ja
ficomps
repnz
jmp
push
stc
jo
lea
aas
repnz
cmc
inc
imul
fcomps
cs
iret
js
cmp
sbb
addr16
fistpl
add
loopne
mov
sbb
mov
jmp
sbb
and
mov
jl
xor
mov
movsb
push
sti
add
pop
pushf
cmpsb
les
adc
jbe
loop
out
mov
lods
addb
dec
stos
pushf
sahf
jne
inc
adc
sub
cmpsb
mov
in
jmp
push
adc
jmp
and
mov
int3
negb
sub
mov
ret
or
aaa
xchg
pop
push
push
neg
inc
repz
lods
pushf
mov
ss
in
hlt
cli
cmp
dec
jmp
push
repz
mov
sub
mov
leave
or
jecxz
cs
jle
cmp
test
repnz
add
out
outsb
xchg
add
jge
adc
imul
xor
test
test
sub
pop
arpl
adc
mov
cs
std
pop
inc
mov
mov
test
cmp
cli
ljmp
imul
cmpsl
mov
pop
inc
mov
hlt
cmovnp
shrl
jnp
out
scas
mov
and
sub
fidivrs
imul
aad
add
lea
jecxz
pop
stc
cmp
xlat
fucom
xor
in
out
scas
insl
mov
adc
push
mov
sti
sarl
bound
mov
cmp
int3
call
dec
fxch
gs
mov
cld
add
test
loop
into
stos
fs
add
enter
or
dec
stc
cmp
sub
xchg
ss
stos
xchg
ja
mov
inc
cmp
xchg
push
popf
loopne
adc
push
pmaddwd
lock
pop
cmp
repnz
shrb
cmp
repnz
scas
xchg
pop
je
push
repnz
sti
xor
and
jle
xchg
mov
inc
scas
stos
out
cs
and
jns
dec
push
pop
pop
das
aam
rclb
cmp
xchg
add
add
add
adc
cwtl
inc
int3
pop
std
icebp
mov
jmp
cld
nop
or
in
or
and
or
ss
mov
pop
or
aaa
out
data16
push
jl
movsb
or
std
rcll
inc
lods
cmpsb
and
lahf
cmc
pop
and
popf
sbb
xchg
xor
push
sub
negb
ds
inc
sub
addr16
jnp
and
test
sub
push
cmc
push
mov
pop
scas
pop
lret
lcall
cmpl
test
pop
sbb
out
pop
shll
push
pop
pop
and
and
es
xchg
movsl
cltd
adc
cmc
in
dec
loop
cld
dec
fcoml
fs
xchg
jb
in
dec
movsl
data16
out
cmp
adc
xor
fs
sbb
adc
shll
or
cmovg
lret
aaa
add
cmp
sub
dec
push
mov
loope
loope
loopne
inc
ljmp
fwait
imul
adc
xchg
mov
sub
dec
sub
pop
add
adc
mov
dec
dec
xor
mov
sbb
mov
ja
ljmp
lahf
mov
test
pop
and
add
fldenv
add
ret
add
or
dec
mov
lret
divb
aad
out
out
adc
test
gs
xchg
stos
aaa
mov
cmpsb
mov
es
jg
pop
rcll
mov
sahf
mov
mov
add
add
mov
inc
sub
test
dec
jae
sub
and
lret
dec
sbb
dec
push
jg
sub
mov
lock
add
and
pop
push
fwait
ret
mov
lret
mov
sub
jbe
mov
jmp
sub
sub
inc
popa
lahf
jp
rcr
pop
sub
fwait
mov
test
xchg
sbb
pop
filds
xchg
jae
xchg
or
xor
stc
mov
fdiv
push
inc
outsb
sub
adc
push
das
cmpsb
divl
pop
stc
scas
mov
and
and
push
xchg
fs
rorb
cmp
pop
pop
inc
in
std
mov
outsb
sub
add
mov
fucomip
insl
cmp
cmp
das
leave
mov
ss
or
fmuls
pop
push
cmc
aas
and
sub
sub
mov
cld
fs
lret
daa
sbb
sahf
sub
push
les
add
mov
pushf
sub
or
mov
aad
movsb
push
xchg
pop
xchg
scas
sub
je
outsl
sub
mov
sbb
or
repz
xchg
test
aad
xchg
into
and
xchg
push
outsl
or
sub
mov
xchg
fimuls
ljmp
or
mov
ds
jl
cmp
outsb
sbbl
push
mov
dec
cltd
xor
cmp
or
shl
arpl
dec
pop
push
sub
xor
fwait
dec
adc
rcll
aaa
ss
in
push
and
jb
and
jbe
jg
mov
mov
cmp
shll
stos
jge
or
outsl
in
xchg
pop
adc
dec
adc
out
or
jmp
jp
stos
dec
scas
lea
out
in
adc
mov
popa
arpl
les
mov
or
out
cmp
dec
loopne
cld
mov
bound
jg
clc
inc
clc
aam
stc
push
push
je
shrl
mov
out
lret
xchg
inc
mov
push
testl
mov
ret
or
mov
jne
testb
stc
dec
sub
push
sub
and
lcall
push
fdivrs
mov
aad
js
and
pop
data16
pusha
xchg
jno
mov
mov
xchg
mov
sub
sahf
test
adc
xchg
sub
push
je
inc
ror
jle
cmc
mov
mov
and
push
dec
xchg
je
lods
fwait
sti
andl
mov
mov
jae
aam
mov
out
xor
adc
in
sub
mov
ret
es
es
scas
adcl
pop
movsb
mov
jae
loope
and
stos
lahf
movsl
leave
dec
ljmp
int3
add
jge
inc
sbb
inc
dec
inc
int
mov
lret
mov
mov
jo
push
add
push
or
pop
or
lret
in
popf
mov
dec
pop
ljmp
nop
or
ret
mov
sbb
int3
mov
sub
jb
ja
imul
xor
data16
cmp
add
push
insb
jle
stos
mov
or
push
iret
sbb
fstl
mov
adc
nop
xor
test
daa
gs
mov
dec
mov
jae
and
cwtl
fwait
xchg
pop
ljmp
and
es
sbbb
mov
sbb
out
dec
movsl
adc
inc
push
fadd
add
mov
sbb
mov
sbb
cltd
mov
mov
lcall
pusha
iret
dec
les
jmp
lret
push
and
jmp
mov
pop
xor
adc
sub
pop
shrb
or
fdivrp
aas
pop
out
dec
mov
xlat
js
mov
jmp
cmp
inc
andb
movsl
and
mov
rclb
lea
scas
scas
pop
test
jl
push
es
pop
mov
out
xor
dec
mov
xchg
xlat
out
addr16
cmp
xor
mov
iret
mov
jo
mov
jecxz
shll
cmp
mov
rolb
xchg
or
mov
pop
push
add
dec
push
sbb
fisttpl
je
add
add
push
clc
int
aaa
or
jno
sahf
cmp
mov
sbb
inc
popa
sub
push
lea
push
ljmp
sbb
cmp
xchg
fwait
push
inc
popf
sbbb
test
mov
push
ljmp
xlat
addb
xchg
in
stc
push
jbe
ljmp
test
mov
xchg
aad
cmpsl
lcall
outsl
nop
lock
jno
lea
mov
loope
popa
mov
mov
or
push
subb
pop
adc
xchg
mov
dec
cmp
pop
or
pop
repz
adc
cli
mov
mov
cmp
and
nop
jbe
push
sub
mov
fimull
vpmullw
mov
push
fcmovnb
xor
mov
jno
shrl
int3
push
xor
data16
xchg
cmp
or
cld
gs
jecxz
mov
icebp
push
dec
inc
lret
adc
sbb
sbb
jnp
orl
sub
std
add
mov
or
cmp
xchg
adc
sarl
dec
in
sub
and
push
dec
xchg
adc
shll
lods
push
jle
mov
jle
nop
dec
aaa
add
rcrl
sbb
lods
or
enter
cltd
dec
xchg
cmp
sub
push
sub
sub
mov
pop
add
scas
bound
test
sub
add
leave
or
mov
stc
and
dec
mov
mov
jle,pn
lea
jno
inc
fmuls
aam
dec
outsl
lret
cmp
xlat
xchg
sbb
aaa
in
ror
jae
add
mov
pop
loope
ss
repz
fisubl
sahf
sti
sbb
div
dec
out
push
in
pop
sahf
cld
fisubrl
jg
cli
cmpsl
popa
mov
ljmp
sbb
push
push
push
aaa
mov
sub
mov
sbb
dec
cmpsl
out
arpl
sub
push
cmp
adc
dec
dec
xchg
stos
popa
ljmp
mov
in
cmp
fsubrl
mul
xchg
dec
xlat
push
stc
push
mov
jecxz
hlt
pop
popa
xchg
rcrl
andl
and
test
pusha
stos
icebp
inc
mov
xorl
enter
adc
cltd
jne
gs
cmp
inc
or
xlat
loope
stos
add
into
mov
rcll
mov
rcrb
add
iret
jno
test
xchg
xor
cmp
lret
outsb
cmp
jns
jp
fists
cltd
aam
mov
in
shlb
pop
sbb
push
testb
lods
pushl
adc
fiaddl
sbb
popa
out
pop
sub
add
fildll
in
lea
xchg
push
add
loopne
out
ret
leave
mov
adc
ss
bound
mov
xchg
dec
arpl
jnp
cltd
cs
xchg
and
movsl
jmp
aam
dec
insb
loop
lds
adc
push
shufps
cmpsl
cmp
gs
push
subl
cmc
cli
leave
adc
cmp
jnp
subb
mov
ljmp
push
in
js
enter
cmp
adc
pop
gs
arpl
adc
outsb
icebp
xchg
inc
out
out
xchg
adc
in
std
xlat
pop
push
pop
cltd
mov
add
push
fisttpll
push
decb
out
push
hlt
data16
inc
arpl
movsl
je
inc
lcall
jp
mov
and
mov
mov
aas
pop
inc
sti
add
es
xchg
mov
cmpsb
loope
mov
lret
das
xchg
fdivl
mov
mov
test
add
lret
repz
out
mov
stc
jge
dec
lods
add
mov
jae
movsb
fadds
outsb
xchg
out
andps
add
jl
jmp
pusha
mov
mov
int
and
rolb
inc
sub
loope
in
mov
out
out
inc
mov
jb
add
inc
mov
xor
mov
adc
mov
xchg
mov
mov
push
xchg
cmpsb
mov
cmovge
pop
sbb
xorb
xchg
xor
sub
shlb
cld
lea
add
xor
in
add
pop
mov
fptan
mov
movsl
push
out
leave
jmp
leave
lea
cmp
repz
aam
add
insl
loop
jmp
lahf
xor
test
pop
iret
adc
cld
bound
lret
pop
dec
mov
fs
sbb
sub
mov
inc
out
out
mov
sub
cwtl
scas
in
jb
loope
cmp
push
xchg
insb
jmp
pop
xor
xor
dec
xchg
push
daa
mov
cmp
mov
xor
ret
call
mov
jle
sub
enter
mov
push
js
hlt
ret
out
enter
in
aas
movsb
out
dec
inc
xchg
leave
rcrl
push
sbb
dec
mov
jo
mov
sub
mov
jnp
mov
jne
das
cmp
ret
inc
xor
add
fwait
pop
loopne
shlb
adc
add
aas
lret
mov
ja
xstore-rng
cmpsl
xchg
roll
mov
stos
pop
inc
sbb
sub
mov
xchg
daa
adc
push
daa
in
mov
jns
insl
cmp
loop
push
cmc
aaa
popf
lock
cmp
lods
add
mov
or
or
int
pop
inc
icebp
and
cmpsl
popf
mov
and
outsb
adcb
cmpsl
xchg
xor
jge
inc
mov
nop
std
pushf
pop
push
adc
les
xor
sub
mov
pop
xor
mov
adc
ret
sbb
lea
jmp
ret
stc
es
fcom
and
add
fmul
mov
pop
xchg
sbb
incl
lods
or
mov
push
jae
jge
in
movsb
adc
fwait
push
and
ljmp
ss
imul
pop
xor
loope
stos
fcmovnbe
mov
dec
xor
cmp
jge
nopl
out
aas
repz
out
cmc
stos
xchg
mov
jbe
loop
fimuls
push
mov
cmp
aaa
and
fistps
pop
or
lret
push
data16
loopne
xchg
mov
mov
test
jnp
xor
dec
push
daa
fwait
shrb
in
fidivrs
jl
ret
and
and
jge
dec
or
ret
sub
cmp
es
repnz
movsl
add
scas
lea
inc
adc
aad
adc
push
or
cmpsl
inc
add
fists
popa
sub
iret
in
orb
stos
push
inc
push
scas
sub
xor
push
leave
and
sbb
es
mov
in
sbb
addb
or
or
jae
jne
sbb
std
cmp
mov
mov
into
cltd
lret
dec
inc
ret
mov
xor
dec
std
insl
mov
push
sbb
jbe
sarb
outsl
xor
divb
push
adc
dec
repz
gs
data16
adc
sbb
sub
int3
cltd
jnp
adc
iret
movsb
ret
int
hlt
sbb
daa
and
push
jl
int3
clc
mov
lods
jg
inc
int3
jle
stos
and
mov
fdivp
fildl
out
xor
or
shll
mov
in
orb
aas
sbb
loope,pn
sbb
cmp
sbb
pop
add
loope
adc
in
ret
adcl
std
xor
jecxz
pop
mov
inc
push
cs
xor
add
inc
rcr
inc
push
stos
sbb
rcr
xchg
xor
cltd
xor
xchg
les
insb
mov
jno
test
pop
mov
in
lcall
aam
repz
shll
and
les
mov
ror
inc
and
push
xchg
inc
mov
jecxz
sti
mov
add
ror
fadd
or
push
dec
mov
push
jo
jb
shll
rorl
nop
push
sub
andb
and
imul
cld
cmc
jg
out
adc
jp
icebp
scas
push
jg
repnz
xchg
ja
popl
pop
repz
leave
leave
ljmp
pop
inc
insl
adc
pop
shlb
popf
sysret
or
mov
ds
out
dec
daa
test
rcrl
inc
icebp
fsts
nop
pushl
xchg
pusha
jg
mov
pop
dec
xchg
push
xlat
inc
adcl
icebp
enter
cmpsl
mov
or
sub
ljmp
out
or
arpl
lcall
pushf
lods
xor
sbb
pop
imulb
leave
mov
mov
pop
mov
pop
jo
les
add
xor
sub
ds
push
test
push
lahf
adc
push
mov
mov
inc
jo
addl
loope
sub
cltd
xchg
inc
imul
cmp
pop
lahf
jp
sub
inc
rol
jl
test
cmp
dec
inc
sti
mov
mov
or
jmp
pop
in
xchg
ret
fdivl
addb
aam
scas
mov
int3
sbb
xchg
cmp
mov
shl
scas
dec
cmp
inc
and
push
mov
out
aas
cmp
adc
sub
xchg
mov
rcrl
dec
jecxz
push
movb
xor
cli
push
imul
pop
sub
sbb
stos
arpl
dec
xchg
jno
cmp
test
pop
jns
mov
xchg
jmp
sub
mov
leave
dec
mov
int
nop
mov
mov
popa
pop
pusha
push
jne
xor
movsl
mov
add
roll
arpl
je
out
testb
sub
add
nop
das
addr16
out
xchg
pop
push
adcb
scas
lret
repnz
pop
mov
xor
push
adc
outsl
sbb
bound
mov
out
lahf
test
mov
int3
lahf
jle
insb
jecxz
scas
cltd
add
in
hlt
sahf
imul
xlat
mov
cwtl
icebp
add
xor
clc
jl
out
adc
or
imul
or
mov
stos
push
movsb
pusha
jge
mov
stos
icebp
cmp
mov
push
repnz
add
xor
repnz
insb
daa
sub
fisttps
fwait
bound
test
mov
sbb
out
mov
cmpsb
sub
roll
pop
arpl
leave
mov
dec
lea
jp
mov
popa
fs
sub
lret
or
pusha
xor
adc
arpl
xchg
das
orl
cmp
dec
mov
addr16
push
subb
pop
ret
push
xchg
aad
jo
iret
mov
mov
lcall
in
or
into
xor
xor
jne
or
cltd
lcall
add
or
icebp
lods
adcl
fwait
scas
sahf
sbb
jmp
addb
test
pop
push
cmp
cmpsl
movsl
pop
int
jecxz
outsl
xchg
cmc
gs
in
cli
jo
cmp
mov
sbb
repz
cwtl
jle
cmp
fsub
repz
push
jbe
imul
mov
cmpsb
cmpsl
xchg
adc
xchg
xor
inc
imul
xchg
loope
push
mov
jae
test
movsb
mov
mov
lret
push
inc
fld
notl
pop
movsb
jl
cmpsb
jo
repz
int3
andb
add
loopne
pusha
sbb
movl
ret
in
pop
xor
mov
clts
pop
jle
sbb
mull
dec
xlat
and
xchg
mov
stos
lcall
add
call
in
icebp
popf
xor
lret
pop
jle
sbb
adc
cmp
sahf
xlat
mov
scas
inc
outsb
popf
add
fsubrl
adc
cmp
mov
dec
addr16
push
add
dec
fistl
subb
push
test
gs
pop
stc
lea
mov
pop
out
lret
pop
mov
imul
cmp
and
incb
ret
aad
cld
das
out
adc
fistpll
mov
in
xchg
xor
jp
les
fwait
inc
icebp
mov
shr
lret
std
repz
xchg
or
das
or
das
sbb
jnp
jmp
aaa
xchg
sahf
imul
sbbb
fldl2e
fsubl
xor
aad
je
dec
fsts
int3
mov
shr
mov
addb
shll
and
xchg
test
sbb
test
bound
adc
addl
sbb
in
pop
push
xchg
and
aaa
mov
stc
cmp
jge
cli
jecxz
sbb
mov
mov
sbb
dec
repz
insb
lret
jno
aaa
dec
rcrl
mov
jmp
cmpsl
dec
icebp
sbb
shlb
push
cmp
or
shrb
jle
mov
scas
stc
fisubrl
cld
test
lods
lret
ss
jecxz
aaa
jle
xor
fwait
int
sbb
rcrl
or
mov
push
arpl
popf
lods
clc
and
xlat
shr
mov
lahf
mov
decb
push
hlt
push
add
and
popa
mov
ret
pop
lock
or
or
mov
sub
and
fdiv
int3
popa
mov
adc
mov
repnz
outsl
popa
psubw
sbb
xchg
sub
icebp
cwtl
fwait
mov
stos
popf
cld
ret
imul
movsl
jl
fimull
mov
xor
repnz
xchg
cmp
scas
mov
cmp
cwtl
pop
adc
cmp
mov
xchg
jp
scas
pop
iret
mov
repz
in
lds
dec
std
sbb
xchg
int3
fnstcw
pusha
out
cld
add
and
pop
imul
dec
insb
and
dec
push
fisubrl
decb
into
fisubs
push
inc
out
cs
and
add
xchg
test
push
mov
sbbb
aas
in
push
stos
in
leave
idivb
test
leave
imul
stos
sti
aaa
lea
mov
or
sbb
cmpsl
fs
sbb
faddl
jae
xor
scas
pop
dec
leave
or
popf
out
and
loope
pop
into
jmp
push
and
or
jbe
xchg
adc
insb
ficompl
ja
xlat
sbb
sar
popa
sub
call
add
test
cmp
lock
add
mov
fsubs
mov
xchg
inc
sub
iret
xor
push
sbb
push
or
in
add
sub
lea
add
adc
testb
cltd
fdiv
pusha
xchg
scas
add
sarl
std
mov
pop
pop
mov
mov
add
add
shlb
fdivrs
pusha
xchg
and
mov
test
mov
inc
pop
pop
les
adc
jns
nop
sbb
mov
xchg
jnp
outsl
adc
dec
mov
sar
movsl
call
jge
out
sbb
je
popf
sbb
into
hlt
jle
cmp
icebp
xchg
loope
popfw
xor
in
pop
inc
pushf
push
mov
and
test
leave
dec
cltd
adc
ficomps
mov
inc
xor
cmc
es
adc
cmp
sbb
push
adc
icebp
enter
push
jo
xorb
lds
sub
mov
sbb
stc
dec
jbe
mov
mov
dec
or
mov
in
popf
ljmp
pop
jns
sbb
fbstp
pop
jnp
ljmp
es
sbb
fsubl
lret
out
inc
cmp
xor
jecxz
xchg
ss
pop
fldcw
xchg
xchg
insb
lcall
sub
ret
cwtl
inc
mov
add
gs
xor
rolb
mov
mov
ret
push
pop
mov
push
fildll
sbb
ret
fistpl
leave
sbb
mov
or
jg
cs
iret
jb
mov
and
loope
adc
mov
pop
ret
dec
cmp
mov
clc
jae
stos
dec
cmp
adc
inc
xchg
push
movsl
bound
or
shrb
pop
mov
jge
daa
test
lcall
mov
push
fwait
mov
test
hlt
popl
push
shrb
push
rolb
in
sub
pop
and
or
sub
push
popa
ret
lcall
enter
loopne
xchg
lahf
lock
xchg
enter
pop
test
outsb
ljmp
mul
fidivrs
icebp
fistpll
or
sub
pop
pusha
adc
ret
popa
pop
cwtl
jns
pop
ret
test
leave
xchg
mov
unpckhps
jmp
add
popf
xor
shll
lods
rcll
xlat
inc
outsl
mov
mov
sub
sbb
cmp
into
jb
stos
das
dec
mov
lret
cld
cmp
aad
push
add
ret
sti
jae
fwait
jmp
pop
orl
ficomps
push
shll
mov
ds
push
and
fistpll
ss
in
sbb
xchg
loop
inc
stc
mov
inc
stc
adc
xchg
in
ror
xchg
decb
decb
lret
dec
add
xor
data16
mov
xor
mov
das
fimuls
dec
cmp
shr
popa
ljmp
pusha
push
pop
add
mov
jle
cmp
clc
sahf
and
movsl
cmpsl
sbb
mov
push
dec
in
outsb
int
sahf
add
mov
bound
push
sbb
mov
negl
sbb
icebp
mov
call
sub
dec
test
les
mov
fstl
mov
enter
insb
sub
inc
lahf
push
scas
jge
out
cmpsb
in
pop
test
sbb
or
das
hlt
stos
insb
in
leave
clc
xor
and
xchg
add
cmc
das
push
mov
mov
rcrl
hlt
jge
stc
and
inc
rorb
shlb
dec
jo
xchg
aad
xor
push
sahf
fistl
mov
cmp
leave
stc
sub
add
cwtl
std
in
or
shlb
sub
and
push
jle
inc
push
adc
dec
out
lock
cs
cmp
xchg
pop
stos
xlat
pop
mov
pushf
mov
or
or
push
dec
imul
arpl
push
pop
aaa
leave
sarl
gs
adc
repz
loope
push
out
das
adcb
xchg
cmp
lds
loope
inc
push
inc
cmp
cmp
push
rorb
pop
mov
adc
xchg
rcrl
pop
and
shll
inc
xor
push
xchg
les
xchg
call
cld
imulb
ds
sahf
push
fs
inc
xchg
mov
cmp
push
sbb
add
or
mov
push
call
sti
lahf
cmp
lds
rol
fbld
sbb
xor
inc
lods
add
push
out
bound
push
pop
or
jo
cli
ret
cmp
jp
scas
mov
mov
jecxz
inc
push
test
xchg
inc
insl
icebp
pop
xchg
repz
or
cmc
xor
fiaddl
icebp
sbb
mov
popf
inc
mov
shlb
xor
shr
push
adc
jle
mov
lods
cmp
pusha
push
xor
jns
sub
cmpsb
jns
mov
dec
rcrl
out
dec
das
out
sbb
jge
fsubs
pop
push
pop
out
xchg
mull
mov
insl
imulb
mov
test
inc
ret
nop
mov
sub
pop
xor
inc
push
push
filds
out
int3
shr
xchg
jle
adc
adc
dec
or
jae
mov
scas
fucomp
and
push
add
fidivrl
mov
sub
sub
pop
ret
daa
adc
pop
lods
push
pop
adc
add
lea
sub
int3
xlat
inc
ja
mov
loopne
adc
call
jg
add
or
ja
and
xorb
cwtl
and
fsubl
mov
fs
out
sub
leave
cmp
jns
std
or
inc
adc
jl
mov
xor
jp
mov
loope
mov
aaa
xchg
cmp
lods
pop
mov
push
test
addr16
mov
add
mov
cmp
pop
jbe
xorb
repz
out
imul
ss
cmpsb
scas
ret
int
lods
pop
xor
testl
outsl
pop
lret
mov
loope
ja
repnz
jae
jmp
mov
mov
fdivs
out
xor
icebp
js
mov
cld
fidivl
mov
jne,pt
pop
sub
mov
aas
add
mov
rcrl
icebp
or
mov
das
bound
pop
mov
ja
xor
or
push
xor
push
mov
push
dec
mov
cwtl
js
cmp
ret
inc
movsb
loopne
pushf
sub
xchg
insb
test
add
sbb
or
xlat
lret
jne
xchg
cs
lret
out
ret
gs
sti
data16
lret
sub
add
or
push
clc
andb
shlb
cli
mov
inc
mov
pop
mov
jb
fisttpll
stos
and
cwtl
scas
sub
int3
inc
aad
inc
jmp
push
sub
outsl
hlt
rcl
aas
das
mov
and
enter
dec
inc
inc
mov
jne
fisttpl
push
mov
shl
ror
in
in
shrb
fnsave
mov
test
xchg
jno
inc
movsb
inc
mov
or
push
xor
leave
mov
sbb
jns
or
push
ja
lret
sub
repz
mov
cmpb
out
and
aaa
stos
or
cli
bound
or
ljmp
repnz
push
inc
mov
data16
mov
mov
adc
dec
cmp
sbb
imul
or
ds
sub
mov
aas
push
mov
jbe
sbb
aad
daa
mov
out
push
jne
les
adc
sbb
mov
inc
jmp
ds
xchg
jbe
hlt
cld
mull
or
fmull
data16
scas
mov
mov
ja
xor
bound
lds
jno
fs
clc
movsl
add
adc
sub
xor
ret
fwait
dec
insl
je
mov
and
ret
repnz
cmp
push
mov
push
mov
loope
inc
jl
js
out
in
in
pop
xchg
pop
cmpsb
adc
xchg
into
jecxz
std
jnp
dec
shll
ror
arpl
mov
push
cld
mov
lahf
mov
adc
sub
xchg
push
jno
sub
mov
std
xchg
xor
mov
xchg
mov
or
pop
int3
xchg
adc
aas
or
lock
fimull
jg
std
pop
pop
ljmp
hlt
not
jg
loopne
dec
in
mov
push
push
sbb
sub
mov
sahf
loop
negb
flds
dec
push
jge
fs
mov
xor
in
pmaxsw
jle
add
cmc
adc
jb
dec
mov
inc
fwait
pushf
lret
push
mov
push
lods
pusha
mov
popf
test
jle
adc
cs
iret
hlt
arpl
cmp
sahf
push
mov
pushf
aad
xor
sub
hlt
jno
hlt
mov
jne
jne
idivb
cltd
push
mov
in
inc
popf
cmpsb
xorl
into
es
mov
xor
repz
push
or
shr
xchg
outsl
xchg
pop
stos
jmp
cmp
imul
mov
loop
aam
in
into
jbe
pop
aaa
test
inc
and
aam
jecxz
inc
jecxz
sbb
ret
mov
mul
jmp
in
repnz
lods
xor
lods
and
xchg
and
les
arpl
cmp
insl
call
cmp
xchg
mov
shl
push
mov
and
xchg
dec
ss
jge
sub
mov
test
push
sbb
rorb
pop
jno
out
jb
in
sbb
sub
and
ss
in
jae
push
sbb
fwait
lret
jnp
mov
fimull
jae
jg
stc
lods
cltd
lcall
xlat
push
int
mov
jl
lea
ja
or
dec
jbe
das
int
jmp
dec
xchg
pop
push
stos
fwait
xchg
adc
ds
ljmp
or
dec
in
pop
or
dec
fldt
shl
lret
cmpsb
pop
mov
xor
cmp
cmpsl
loop
shll
imul
into
cmpb
fdivs
loope
jo
jo
mov
mov
jecxz
inc
add
mov
mov
out
popa
xor
sub
test
jg
and
xchg
mov
adc
sbb
or
out
xchg
dec
bound
dec
inc
aam
sub
adc
ja
mov
enter
call
sbb
lods
testb
sub
inc
dec
repz
nop
and
sti
jg
fs
xor
add
jp
mov
je
mov
xor
mov
lods
jnp
roll
addr16
aam
mov
xor
xchg
mov
mov
cmp
scas
rcll
popf
dec
dec
pop
adc
xor
loop
sbb
jb
xor
into
lret
ret
add
sub
xor
ds
stos
in
xchg
dec
rcrl
push
popf
dec
mov
sub
mov
or
lret
mov
and
mov
enter
aaa
bound
and
andb
and
jo
int3
dec
mov
in
pop
pop
cmp
push
jle
sarw
andl
or
repz
pushf
add
mov
inc
inc
ds
jnp
push
cltd
je
pop
adcb
xlat
sbbb
jmp
xchg
repz
das
sbb
add
stos
sbb
xchg
jns
das
notl
repnz
sbb
into
sub
test
fisubrs
push
les
or
sub
dec
div
call
in
imul
repz
in
pusha
and
inc
adc
fnstcw
test
adc
iret
fldcw
mov
cmp
dec
mov
imul
in
outsl
fldenv
inc
repz
pop
adc
or
dec
in
pop
je
sbb
cld
std
push
mov
push
les
adc
popa
nop
mov
and
lret
dec
repz
cmc
mov
into
and
leave
jge
xlat
sub
ljmp
cmc
mov
mov
cmp
push
add
jg
ja
lret
and
inc
popf
rolb
xchg
jg
mov
stos
or
cltd
das
daa
rorb
cli
adc
pop
lret
scas
movsl
insl
inc
jbe
testb
or
lods
aaa
sbb
xchg
xor
je
mov
mov
scas
lock
mov
cmpsl
push
jb
aad
test
adc
in
inc
sahf
call
testl
cli
or
lcall
repz
fsubrs
rcl
insb
mov
sbbl
dec
in
mov
repz
jne
das
cmpsl
lds
sti
int
lods
arpl
lock
xchg
jmp
loopne
stos
mov
in
cli
andl
mov
mov
mov
jecxz
mov
aad
cmpsb
mov
enter
frstor
mov
adc
dec
pusha
movq
and
mov
gs
orl
push
xor
push
outsb
data16
cmpsb
push
int3
pop
inc
jno
pop
add
mov
hlt
mov
inc
xor
dec
adcb
sub
push
insb
sub
add
xchg
clc
pop
out
cli
ret
inc
sbb
repz
cmc
mov
call
or
jbe
push
push
gs
inc
clc
stos
sti
sti
imul
jns
jle
inc
into
xchg
pusha
cwtl
and
add
xchg
jp
rorl
or
or
push
push
or
movsl
pop
inc
push
aam
aas
js
mov
cmpsb
jmp
mov
xchg
icebp
pop
mov
mov
scas
aad
dec
xchg
js
mov
adc
ljmp
fwait
mov
fistpll
pop
clc
pop
pop
jg
pop
mov
jo
adc
stc
pop
cmp
lock
mov
sbb
movl
jle
ljmp
sbb
sub
test
push
enter
out
mov
mov
repz
push
fisubs
push
mov
iret
fidivrs
test
mov
xchg
imul
loope
jg
cmp
inc
leave
add
pop
pop
jo
sbbl
cwtl
jbe
lret
mov
dec
mov
loope
and
fmull
pop
inc
fwait
int
lret
mov
cmpl
into
cmc
in
imul
pop
pop
pop
out
xlat
addb
insl
and
mov
outsb
jg
push
inc
fs
jo
jo
cmc
mov
sbb
daa
cmc
mov
push
sbb
cld
add
out
mov
test
bnd
adc
shll
icebp
add
and
mov
xchg
jnp
pop
pop
mov
enter
xlat
stc
mov
data16
fbstp
mov
gs
aad
add
hlt
jecxz
sbb
or
bound
push
fstpt
add
pop
jmp
xor
inc
inc
add
fstpt
cmp
fnsave
mov
movsb
mov
pop
sbb
das
pop
inc
or
nop
or
push
sbbl
stos
ret
xchg
push
in
into
scas
mov
in
outsl
adc
lock
mov
cltd
gs
cmp
in
jle
int3
insl
push
in
xor
cmp
push
mov
hlt
cmpsl
sti
andl
clc
push
push
and
mov
divb
fwait
bnd
fsubs
adc
xchg
std
cmpl
and
cmc
call
inc
fisttpl
jmp
fwait
add
mov
mov
faddl
cmp
cld
and
stc
push
mov
cwtl
xchg
pop
lods
int3
sub
mov
inc
push
ficomps
addr16
xchg
in
cmpb
loopne
jmp
add
inc
addr16
mov
sub
xlat
jno
and
jb
bound
cwtl
test
pop
or
cmp
jecxz
mov
and
mov
jle
mov
pop
cld
mov
pop
jg
negb
aaa
fidivs
xchg
and
pushf
push
mov
jmp
test
insb
jge
dec
xchg
add
jo
mov
inc
pop
sbb
pushf
out
stc
andps
movb
adc
and
jl
pop
sbb
pop
mov
negb
pop
hlt
das
dec
dec
stos
insl
adc
lods
subl
arpl
inc
ja
cwtl
jmp
cld
xchg
ljmp
sbb
jmp
enter
rcrl
lcall
hlt
cmc
mov
inc
into
stos
inc
jecxz
push
rcrl
lock
push
dec
lds
divl
dec
cmp
les
imul
adc
add
fidivl
cmp
sub
jne
out
sub
adc
xlat
neg
push
test
sub
push
pop
jp
aad
mov
xchg
repnz
mov
imul
push
das
pop
sti
or
movsl
je
sbb
adc
add
ja
pop
push
jnp
int
lock
negl
lcall
fisubrl
xchg
push
insl
pushf
cmc
mov
repnz
xchg
iret
jl
mov
outsl
loopne
shlb
or
mov
sub
push
or
mov
imul
test
shll
out
stc
pop
xchg
mov
js
mov
inc
pushl
std
stos
je
cmpl
mov
jl
cmp
imul
and
push
lcall
xchg
inc
xor
inc
pop
adc
xchg
das
push
int
mov
lea
xchg
push
push
rdmsr
pushf
xor
or
fucom
sub
call
mov
fadds
adc
incl
stos
sti
cwtl
xchg
cltd
imul
stc
mov
sub
jle
mov
or
pop
shll
jg
scas
ja
mov
pop
aam
dec
xchg
outsl
sbb
fstps
les
cli
jecxz
mov
mov
xchg
xor
add
dec
lea
mov
sub
adc
mov
xor
stc
or
je
repnz
and
into
pushf
loope
jne
insl
xchg
in
out
test
push
data16
xor
mov
rcrb
fidivl
mov
movsb
jb
divl
test
jle
inc
mov
test
out
dec
mov
cli
dec
fisttpl
push
sub
mov
sub
scas
pop
lahf
cmp
nop
cmp
mov
fdivr
scas
push
xor
in
or
xorl
jne
jg
gs
pop
mov
sub
xchg
out
hlt
lock
mov
mov
inc
cli
inc
cli
scas
mov
lea
adc
imul
loopne
xchg
add
fdivl
test
xchg
mov
decb
push
andb
xor
mov
dec
sbb
rcll
pop
sub
pop
mul
mov
push
mov
or
leave
xchg
dec
js
xchg
mov
js
out
add
test
fdivrs
sti
pop
push
in
js
adcl
dec
out
mov
out
jns
or
stos
inc
rcrb
jp
push
fwait
movb
mov
je
pushfw
mov
test
iret
jo
or
sub
jecxz
mov
adc
dec
mov
addr16
mov
push
xor
xor
repnz
or
lahf
scas
in
sub
pop
cmp
out
cmp
fisttpll
jb
add
sbbl
add
addr16
add
in
in
pop
int
sub
push
xchg
mov
lock
cmc
mov
mov
or
push
adc
fsubr
mov
mov
push
jp
xor
scas
push
add
outsb
push
sarb
pop
repz
mov
jmp
subb
xlat
cltd
dec
test
mov
addr16
cmp
in
je
and
push
mov
or
mov
pushl
mov
push
bound
xchg
dec
out
insb
stos
outsb
adc
dec
and
mov
jp
cmp
or
cmpsl
and
mov
xorb
imul
cs
iret
xor
mov
xchg
fisttpll
cwtl
sub
jnp
lea
or
pop
mov
jno
jnp
es
add
lds
ret
cmc
repnz
xchg
lret
push
xlat
dec
aaa
add
pop
adc
push
cmp
lahf
scas
jmp
loope
int3
adc
cmpb
aad
mov
test
sbb
test
loopne
into
icebp
xchg
inc
bnd
scas
ret
imul
jo
mov
push
aad
pop
xchg
pop
movsb
movsb
jns
pop
sbb
aas
push
push
mov
aas
pop
in
shr
inc
outsb
outsl
in
divl
pop
sbb
outsl
scas
pop
jo
xlat
sbb
cli
xchg
xor
cmc
jae
outsb
mov
gs
out
and
jp
mov
push
bound
int3
and
mov
lods
fisttpll
and
lea
shlb
std
adc
jmp
jle
sarl
repnz
mov
add
fbld
or
loop
pushf
cld
scas
idivb
loopne
dec
subb
loopne
out
js
dec
and
in
popf
and
scas
mov
shll
add
cmpsb
and
enter
cmp
xchg
scas
or
or
in
icebp
repnz
jmp
addr16
pushf
pop
or
xor
jnp
addl
jno
jge
inc
outsl
imull
lock
lahf
mov
push
les
mov
xchg
add
dec
imul
inc
stc
ret
in
sub
xlat
mov
jge
mov
ljmp
xor
imul
sbb
sbb
pushf
repz
xchg
jb
aad
loop
xor
mov
jne
lods
xor
sbb
mov
adc
jle
mov
sub
mov
nop
test
enter
inc
mov
in
ss
inc
add
cmp
lret
rolb
out
cmp
cmpsb
icebp
jmp
rolb
loop
test
leave
dec
daa
and
sbb
aad
adc
movsl
xchg
mov
mov
fwait
mov
test
stos
sbb
mov
push
sub
xchg
add
cmp
in
pusha
lea
push
lcall
jmp
lea
and
lock
imul
xchg
push
mov
xor
mov
cmp
adc
jns
and
jmp
rclb
loopne
add
xor
lcall
cmpl
xchg
fdivrl
in
into
mov
jp
incb
add
js
sbb
in
cmpsl
in
popf
in
add
pop
lock
jae
scas
pop
stos
inc
les
ret
mov
aam
orl
xor
pop
mov
cmpsl
cwtl
movsb
bound
not
mov
aam
stos
push
lret
add
xor
fwait
cmpsl
out
or
jge
lcall
outsb
outsb
xchg
mov
xchg
cltd
lods
sub
cmp
or
stc
outsb
jbe
xchg
xchg
jge
inc
or
jp
cwtl
stos
jp
inc
iret
test
add
movsb
xchg
lock
adc
mov
sti
fwait
adc
jmp
test
cmp
test
mov
shlb
jo
dec
push
std
and
aas
cmp
sub
callw
je
gs
dec
enter
aaa
jno
mov
mov
jnp
and
jno
adc
cmp
cmp
dec
stc
inc
pop
xchg
outsb
dec
mov
lcall
jecxz
flds
push
push
xchg
orl
fstps
xor
or
push
aam
mov
mov
mov
int
jmp
daa
pop
shll
stc
lahf
sub
enter
push
mov
inc
popf
xchg
fistl
xchg
dec
js
jle
pop
dec
fcom
popf
pop
pop
rcrb
add
scas
mov
xchg
or
lods
dec
aad
or
call
adc
pop
adc
pop
jg
pop
test
vmwrite
insl
or
sub
call
fisubrl
sbb
dec
xchg
pextrw
insb
in
fistl
lock
cmc
mov
out
cltd
mov
pusha
xchg
ds
ljmp
mov
pusha
out
shll
popa
out
mov
xchg
pop
bound
gs
dec
int3
or
push
data16
iret
inc
mov
jo
jle
xchg
xchg
pop
shr
pop
sub
inc
cmpb
imul
or
push
dec
mov
lds
sti
cmpsl
mov
push
mov
jbe
movsb
xchg
daa
test
insl
jmp
bound
icebp
jae
repz
add
lcall
and
cmp
popa
cmp
addb
imul
push
je
jnp
call
aas
repnz
movsb
pop
cmpsl
bound
stc
mov
hlt
pushf
dec
mov
ret
lods
inc
pop
push
in
dec
push
mov
adc
jnp
adc
loop
jbe
loopne
jns
push
add
add
mov
addr16
aaa
call
daa
popa
adc
jnp
inc
dec
dec
adc
movl
lret
mov
pop
cmp
mov
ss
lret
pusha
sub
lea
lcall
das
int
cmp
popf
xchg
rclb
dec
icebp
sbb
pop
std
cmc
data16
push
test
popa
rorb
icebp
fnstcw
imul
ljmp
sub
pop
and
enter
push
mov
mov
push
mov
and
loopne
mov
adc
retw
push
mov
in
xchg
pop
inc
xlat
pop
dec
movsl
cmpsb
mov
stc
lahf
xor
pop
in
sahf
popf
loopne
cmp
push
cld
aam
push
fidivrs
movsb
sub
cwtl
mov
jle
mov
gs
jns
mov
or
mov
jle
mov
loop
inc
mov
add
pop
mov
sbb
dec
pop
fucompp
pop
out
mov
mov
xchg
iret
mov
pop
popa
lahf
xor
fldt
ret
jle
int
outsb
jle
cli
fucom
arpl
inc
inc
mov
stos
movb
repnz
mov
int3
pop
mov
push
or
mov
pop
daa
sub
in
add
pop
lcall
es
pop
mov
mov
loop
andl
js
dec
mov
cmp
test
mov
imul
lea
adc
rcll
sahf
push
pop
daa
mov
dec
cltd
mov
icebp
cmpsb
pop
jl
dec
lret
cmp
mov
pop
sbb
dec
outsl
sub
negb
mov
jl
push
call
sub
int3
adc
add
add
cmp
daa
mov
adc
in
adc
mov
shlb
fstl
and
sub
jo
xchg
mov
das
cmc
jl
mov
push
cmp
push
xor
push
and
rorl
cmp
das
jae
and
dec
lret
gs
mov
lods
iret
xor
cltd
xor
scas
cmp
sub
mov
inc
out
mov
xchg
lcall
xor
loopne
mov
sbb
rcrl
stos
mov
jns
aaa
jp
pop
mov
xchg
pusha
sub
xchg
ret
daa
lcall
jle
ficoms
rorl
adc
out
adc
movsb
imul
iret
sahf
dec
xchg
mov
mov
jmp
das
dec
fdivl
mov
lcall
shll
cmp
sub
shlb
clc
les
shrl
icebp
push
sub
test
iret
mov
outsb
adc
and
cmp
lret
inc
xchg
or
loop
mov
xor
inc
sub
mov
into
dec
mov
lods
sub
mov
jb
inc
lcall
cmp
int
add
lcall
fadds
jbe
clc
jmp
push
pop
je
imul
in
mov
mov
in
mov
ja
leave
sahf
xor
aaa
int3
xchg
pop
xchg
xabort
mov
sbb
lods
jnp
pop
dec
sbbb
hlt
push
jge
or
out
movsb
ret
lret
push
push
add
mov
mov
pop
mov
mov
test
jb
out
mov
sub
sbb
imul
xchg
das
adc
divb
stc
sbb
hlt
jmp
cmpsb
mov
push
cli
lds
inc
insl
push
test
cld
pusha
mov
bound
sahf
jno
nop
fs
mov
shll
test
icebp
or
repz
mov
mov
jno
in
jae
hlt
aas
insb
mov
adc
clc
or
lods
pop
mov
les
jae
sahf
cmpw
js
pop
pop
insl
or
xchg
test
mov
movsb
inc
pop
or
or
sbb
jnp
dec
mov
mov
cmp
sarb
inc
fldt
jge
cwtl
test
sti
lahf
sbb
bound
mov
jnp
cs
pop
pusha
ss
filds
icebp
xchg
push
aam
int3
jae
ficomps
mov
test
js
dec
adc
dec
mov
shrl
adc
push
pop
pop
sahf
sahf
adc
push
lcall
mov
inc
mov
ret
inc
jnp
sbbb
lcall
adc
notl
xchg
hlt
outsl
pop
out
enter
in
test
jne
lret
mov
test
inc
hlt
push
push
dec
jne
pop
fsubr
into
in
inc
enter
jnp
pop
imul
mov
call
data16
daa
mov
sbb
aaa
or
push
fstl
loope
mov
and
nop
mov
xlat
fs
lret
data16
cld
jge
xchg
cmc
ret
rcrb
imul
sub
jno
sbb
mov
stc
mov
adc
mov
clc
pushf
outsl
sbbb
stos
je
scas
rcll
or
clc
mov
mov
je
push
and
std
pop
pop
mov
mov
movsl
sub
sub
lds
fisubs
jnp
mov
cmpsl
std
icebp
push
add
adc
fdivl
pop
dec
jl
popf
jmp
ret
fcmovnbe
mov
xlat
fdivrs
xor
sub
fwait
xor
xor
stos
cli
sbb
mov
sti
push
ljmp
int3
subl
and
movsl
jecxz
loope
jns
sbb
int3
icebp
cmpsl
mov
mul
icebp
mov
lret
scas
pshufw
xchg
mov
pop
clc
ljmp
mov
dec
testb
dec
push
movsl
aad
lods
fs
fistpll
lds
mov
imulb
addr16
jecxz
repz
inc
lcall
fs
inc
or
loopne
sti
loope
aaa
push
stos
movsl
xor
fisubl
nop
or
into
hlt
cmp
clc
pushf
add
add
inc
mov
and
pop
push
and
and
push
inc
mov
rcr
push
sbb
fwait
out
movsl
sbb
jge
pop
rclb
jmp
pop
pop
mov
dec
push
mov
loop
iret
testl
sti
cmp
js
js
jns
incl
rcl
hlt
je
and
cmp
push
xchg
fs
test
fwait
les
jae
push
jmp
and
adc
xor
ficompl
mov
dec
incb
mov
mov
call
scas
int3
sbb
in
lcall
ja
js
xor
dec
or
push
pop
incb
insb
orl
lea
fwait
lcall
or
add
mov
stc
jge
push
icebp
cld
mov
xchg
iret
shrl
clc
sar
stos
dec
stc
xor
out
dec
mov
inc
jp
mov
xchg
out
cltd
fs
jl
xor
mov
in
cld
or
cmp
or
cmpb
stc
inc
ss
sub
push
lahf
mov
je
dec
push
add
popa
cltd
ficomps
enter
sbb
jecxz
rcrb
push
idivb
and
mov
jge
or
pop
mov
pop
out
mov
mov
clc
push
sub
iret
bound
insl
push
clc
mov
imul
mov
repz
int
aaa
movsb
aam
rcl
fnstcw
cli
mov
push
push
outsb
pop
pop
out
fadd
inc
gs
enter
jbe
sahf
cpuid
cmp
jnp
and
das
jns
scas
mov
jecxz
daa
mov
mov
test
pop
clc
out
mov
mov
cmp
insb
in
popa
push
outsl
nop
push
mov
sub
out
add
call
setge
and
mov
inc
ss
sbb
add
sahf
sbb
or
dec
and
push
xlat
push
inc
adc
insb
jmp
cmpsl
sbb
mov
fwait
jmp
mov
icebp
push
or
andl
xchg
cmp
xchg
jge
pop
add
lods
jge
fstpt
shlb
les
out
inc
mov
scas
mov
stc
xchg
mov
adc
mov
mov
lahf
pop
push
xor
lahf
mul
arpl
lcall
mov
jg
stos
out
shlb
aas
cli
push
psadbw
add
dec
lahf
fisubrl
rcll
lock
lds
xorl
out
xchg
int
mov
xor
mov
call
dec
push
add
cmp
or
test
fildl
adc
jo
pop
and
int3
pop
loopne
add
stos
jb
push
iret
loope
dec
xor
test
or
fwait
mov
cmpsb
xchg
lcall
push
scas
inc
stc
aad
mov
insb
mov
mov
out
mov
into
scas
aas
xchg
loop
ljmp
push
imull
fwait
add
xor
dec
inc
popa
inc
clc
pop
inc
pop
xchg
popf
sbb
pop
mov
scas
inc
lea
mov
dec
xor
rorb
fcomi
icebp
xchg
mov
dec
dec
in
push
in
insb
inc
ret
incb
cmc
pop
gs
inc
es
in
je
dec
in
ror
cmp
loop
aas
jae
mov
nop
cmp
inc
jo
fldenv
out
mov
call
mov
sub
mov
jecxz
pop
mov
mov
outsl
mov
adc
cmp
push
and
add
std
inc
sub
jl
rclb
and
mov
mov
add
pushf
mov
jmp
xchg
pushf
aas
adc
sbb
clc
push
cltd
inc
xchg
sbb
scas
sar
or
mov
dec
adc
rolb
out
ret
fistl
sub
mov
rorl
or
cmp
sti
sub
pop
sarl
sub
test
mov
test
aad
call
cmp
push
add
arpl
icebp
in
xor
and
jo
cmpsl
cmp
mov
fisubrs
incl
fcompl
stos
dec
inc
xor
fwait
out
jmp
adc
pushl
cmp
leave
push
std
fwait
cwtl
xor
fisubs
push
adc
ja
dec
lods
mov
fwait
icebp
fwait
stos
inc
call
and
out
mov
push
add
call
lds
das
or
add
pushf
inc
mov
inc
mov
js
ficomps
mov
add
xor
xchg
jno
shrl
inc
insb
push
loop
lods
ja
jns
or
or
stos
aad
out
ds
mov
ss
push
std
mov
stos
and
sbb
ret
sub
sbb
xchg
repz
jg
rcrl
and
jmp
cld
ja
inc
and
rcll
sbb
mov
pop
mov
fnstsw
pop
fsubl
mov
ja
and
out
jmp
add
fildl
pop
cmp
inc
es
add
push
cmc
add
shll
sub
pop
push
mov
int
mov
fdivrl
lret
divb
scas
out
pusha
cli
test
sub
aam
ja
out
jp
and
clc
cli
jne
sub
jb
sahf
hlt
sbb
xchg
cmp
das
rclb
fistps
aam
or
ja
leave
xchg
lock
js
ret
cmp
andb
xorl
jnp
lahf
lret
flds
repz
rorb
das
mov
fs
mov
mov
push
cmp
das
xor
mov
cmp
in
pop
lods
clc
cli
mov
inc
push
ds
push
xchg
jle
stc
pop
and
call
adc
insl
out
jae
xchg
pop
test
scas
icebp
push
pop
movsbl
shll
pop
gs
lods
mov
jbe
imul
push
sub
push
lock
aam
lret
les
rcrb
sub
or
dec
xor
in
popf
or
ds
in
fimuls
ja
test
mov
shr
cli
sti
scas
loop
insl
test
popa
test
push
cmp
xor
mov
mov
cmc
adc
xor
pop
imul
lcall
add
adc
mov
cmpsb
inc
push
inc
pop
jmp
push
pop
lret
js
or
in
pusha
pop
xchg
rcrb
lahf
addr16
and
fs
out
mov
add
xor
and
mov
cmp
mov
imul
fadd
mov
addr16
movsb
fists
cmpb
mov
ss
hlt
push
jp
push
popa
jae
mov
add
lods
out
popa
add
les
test
je
jne
lds
sbb
outsb
jno
imul
sbb
in
hlt
jle
or
pop
imul
push
fbld
pop
pop
in
test
stc
outsb
inc
pop
mov
pop
add
sahf
movsb
inc
call
sahf
push
int
ss
mov
test
lods
out
mov
xor
insl
xor
jmp
inc
xor
inc
xchg
sbb
mov
cli
sbb
scas
lea
test
sbb
adc
neg
das
outsb
repz
loopne
sub
jne
test
xchg
popa
cmp
jae
or
dec
jo
jb
adc
and
sbb
push
stos
adc
push
int3
push
cmpsb
mov
xor
mov
mov
mov
data16
in
adc
dec
leave
sbb
inc
bound
pop
mov
push
mov
lcall
mov
fisttpl
movsl
jg
movsb
inc
jmp
fiadds
out
out
jle
sub
ret
cmpsl
or
sub
icebp
bound
xchg
in
mov
pop
or
inc
mov
in
jl
mov
sub
sahf
sub
sbb
mov
rclb
adc
add
outsl
das
flds
imul
adc
mov
add
pushf
xor
inc
mov
aaa
push
rcrl
mov
add
rcr
js
sbb
repnz
jne
push
rorl
push
push
pop
jp
sbb
xchg
jo
xchg
rorl
pop
dec
mov
sub
add
call
sub
stos
imull
fsubr
xchg
pop
cmp
jb
movsl
ret
xor
sub
pop
or
add
jnp
aad
es
sub
xchg
out
cmp
lock
sub
xor
ror
add
xchg
and
ja
xor
jl
mov
psllw
xchg
cs
inc
imul
mov
pop
negl
fs
orb
in
fldt
test
rcr
test
movsb
fnstcw
mov
ds
jl
sub
daa
daa
pop
addr16
xchg
in
adc
xchg
mov
data16
lcall
incb
pop
push
sub
add
mov
cli
xor
xor
enter
jbe
xchg
daa
and
mov
xor
mov
or
inc
sub
leave
and
xchg
add
dec
fdivrl
inc
dec
xchg
lock
cmp
xchg
sub
aaa
xchg
jnp
push
rclb
int
mov
das
mov
mov
int
testl
and
ret
or
or
or
jmp
or
pushf
insb
jo
jge
jp
int3
pop
scas
mov
pop
and
xchg
mov
cmp
cmp
adc
adc
sar
and
pop
std
aad
adc
adc
into
out
insl
stc
jle
or
stos
cld
iret
jns
rorl
dec
in
iret
lds
cmp
cmpsl
push
mov
push
push
cltd
add
dec
mov
or
into
push
adc
add
lds
sub
jno
add
subb
lea
lock
cld
cltd
jns
push
std
sub
outsl
cmp
xorb
and
clc
mov
das
adc
gs
call
dec
mov
fildll
pop
mov
pop
mov
out
mov
sbb
nop
adc
cmpsl
xchg
imul
jmp
rcrb
movsl
or
jge
pop
aad
call
xchg
sbb
cmc
out
jbe
rol
add
lahf
insb
dec
mov
add
cmpsb
fstps
mov
jmp
lcall
adc
jp
iret
lock
push
lcall
imul
loopne
sahf
les
pop
dec
dec
nop
mov
or
clc
push
rcl
sub
mov
xchg
mov
popf
out
and
xbegin
xor
into
mov
movsb
sbb
js
ja
mov
negb
pop
scas
push
test
jno
xlat
int
mov
jle,pn
aad
lret
jo
bnd
cmc
inc
push
add
outsl
xchg
mov
dec
xchg
aaa
in
mov
test
mov
add
test
mov
pop
dec
sbb
xor
cmpsl
lcall
cmpsb
xor
xadd
xor
pop
jp
cmp
stc
int3
xor
jo
and
cmpsb
xor
mov
psubd
in
aam
push
into
cli
mov
xchg
movsl
call
sar
testl
out
call
pop
ds
out
fsts
push
daa
mov
adcb
cmp
mov
sbb
jbe
cmpb
or
loop
mov
jg
xor
int3
jne
out
xchg
jno
jb
mov
push
cmp
lods
pushf
in
or
lahf
xor
and
ljmp
shll
add
insl
push
xor
mov
sbb
or
jge
lock
daa
in
push
xchg
out
xor
sub
xor
add
cld
popf
adc
popf
or
loop
test
mov
dec
addr16
mov
xchg
lret
out
arpl
imul
inc
gs
test
cmp
ret
into
xor
pusha
inc
mov
pop
sbb
daa
add
jb
cmp
or
push
sub
in
jge,pn
pop
lret
cmp
std
stos
push
les
xchg
cmc
xchg
sbb
add
sbb
test
mov
enter
ficoms
mov
cmp
fcomip
and
in
xchg
mov
cmp
xchg
leave
cmp
ss
mov
xor
stc
jne
inc
mov
jns
inc
into
fld
push
pop
arpl
shl
les
cwtl
ds
leave
imul
pop
jo
outsl
jo
xchg
ds
sbb
or
mov
mov
sub
shrl
imul
idiv
imul
sbbl
test
push
icebp
je
mov
out
in
dec
cmpsl
inc
inc
xchg
or
gs
pop
push
inc
and
pop
push
cli
int3
call
xlat
pop
ficompl
mov
mov
shrl
in
cmpb
int
les
and
and
das
adc
pop
inc
ljmp
ljmp
push
leave
mov
lds
and
mov
fdivp
ret
divb
lahf
lea
js
pop
negb
mov
jnp
test
pop
xor
mov
daa
push
push
mov
icebp
cmp
nop
outsl
test
cmp
call
mov
vmovups
test
nop
cmc
ja
les
adc
ja
xchg
rcrb
bound
fcomps
inc
ret
or
dec
push
cltd
rcll
in
pop
jle
mov
and
cli
scas
pop
jl
mov
xchg
call
jnp
out
rcrb
call
aaa
cli
xchg
call
insl
test
jecxz
dec
ljmp
xchg
mov
mov
pop
popa
or
out
fcompl
sbb
faddp
push
ljmp
cs
cmp
sub
mov
lods
jl
pop
sub
call
sub
push
mov
inc
push
int3
pop
adc
aaa
xchg
jne
cmpsb
dec
clc
xor
div
int
mov
inc
sub
test
push
adc
dec
sub
and
jle
push
notb
insl
mov
adc
jns
mov
sbb
cmp
sti
sbb
pusha
dec
pop
outsl
js
mov
push
jecxz
xchg
sub
xchg
add
mov
test
cmc
test
add
idiv
jg
js
mov
jmp
mov
cld
add
inc
sbb
mov
insl
mov
cs
push
dec
jne
lock
ljmp
bound
inc
imul
cmp
popa
shr
cmp
int3
hlt
sbb
push
and
test
inc
adc
inc
mov
xor
xor
cmp
scas
lock
lcall
iret
mov
mov
lds
sbbl
inc
pop
jnp
sar
das
push
push
popa
add
jle
shlb
cmp
insb
shll
or
mov
cli
in
add
or
mov
rclb
in
cmp
gs
lods
dec
stc
and
movsl
add
repz
xlat
test
xor
jg
scas
clc
mov
adc
test
testl
mov
js
leave
imull
or
xchg
lods
test
pop
shrl
stos
push
fs
shrl
loope
mov
sbb
lods
int3
clc
xchg
fdecstp
cli
ja
pop
mov
sbbl
loopne
pop
inc
fnstcw
cmpsb
dec
dec
stc
test
push
xchg
jne
mov
cmp
cld
aad
mov
jecxz
and
jmp
xchg
outsb
fstpt
outsl
inc
and
xlat
pushl
cmpsl
jle
inc
mov
aas
jmp
and
inc
jmp
dec
jae
movsl
jmp
pop
dec
cmc
push
test
lahf
xor
fnstenv
dec
inc
fcomp
lock
adc
cmp
in
sbbb
movsl
lcall
jl
hlt
sbb
test
fistpll
pop
lea
pextrw
sbb
mov
scas
adc
gs
mov
xor
jne
cmpsb
cli
iret
or
jnp
andl
inc
ljmp
jge
cmp
add
adc
xor
push
mov
mov
lods
sbb
push
cmp
mov
mov
arpl
dec
mov
or
push
mov
gs
mov
pop
jecxz
pop
mov
std
fisubl
fwait
cwtl
sbb
test
and
jbe
enter
das
inc
inc
inc
dec
jne
xor
test
loopne
ret
pop
sub
jecxz
out
xchg
scas
push
xchg
cmp
mov
dec
and
adc
js
xchg
pop
ljmp
sbb
arpl
cli
mov
popa
fwait
jo
xchg
jl
loop
clc
stos
push
mov
leave
addb
xchg
mov
xor
pop
jp
mov
and
mov
cwtl
faddl
call
jb
inc
lods
sub
cwtl
xlat
dec
mov
loopne
lahf
daa
js
cmp
lret
cld
mov
mov
fcoms
dec
clc
or
add
sbb
cmpsb
mov
cmp
xchg
addl
fstpt
xchg
sub
aaa
mov
lods
testl
enter
mov
xchg
test
loope
jnp
pushf
sarl
push
test
mov
in
repz
mov
movsb
sbb
imul
iret
loope
cmc
in
aaa
inc
rcl
add
add
call
jge
cmpsw
pop
xchg
cmpsl
dec
xchg
loop
add
mov
xchg
pop
sub
push
push
lcall
insb
popa
xor
ljmp
das
add
push
cmp
cmp
outsl
data16
adc
mov
mov
test
and
dec
iret
out
mov
aaa
mov
push
mov
jecxz
sbb
sub
out
rcr
lahf
sbb
mov
outsb
stc
dec
jae
test
cmp
das
loopne
mov
pop
test
sbb
add
call
mov
sbb
ja
xchg
lret
xchg
out
outsl
jmp
adc
sub
es
in
ffree
rorl
insb
clc
push
in
int3
cmp
es
jp
dec
je
cmp
lahf
test
mov
popa
xchg
or
shr
mov
fsubl
std
dec
sarb
jmp
ljmp
icebp
lds
xchg
lcall
and
rorl
loope
fsubs
jmp
icebp
mov
imul
or
xchg
mov
pusha
sub
idivl
leave
dec
outsb
mov
es
push
jne
ret
add
loope
cmp
xchg
sbbl
mov
cmc
repz
jnp
dec
mov
mov
push
sbb
cmp
adc
push
jle
leave
adc
push
and
std
push
mov
testl
mov
cli
je
jmp
jno
cmp
shr
je
lea
out
or
pop
jns
dec
fs
mov
jge
rorl
int
adc
dec
rdmsr
sbb
loop
or
lods
fcoml
out
pop
addr16
xchg
jmp
add
push
stos
cmp
fsubr
mov
sarb
addb
jae
pop
shrl
aaa
dec
lods
dec
pop
test
lret
imul
add
lret
lock
sbb
cli
jmp
fldl
jp
mov
icebp
fwait
sbb
dec
mov
in
jb
mov
sarl
imul
lahf
and
in
push
cmc
stc
fsubr
adc
cmp
addr16
ss
xor
sub
xchg
data16
dec
loope
mov
xor
add
ljmp
inc
cmp
or
pop
sub
dec
sub
loope
mov
and
xor
inc
inc
daa
cmc
int
mov
leave
in
sub
push
xor
cmp
movsb
fldl
ja
loop
jbe
pop
pop
add
insl
push
or
mov
push
dec
jbe
sbb
cmp
or
dec
jno
test
pop
in
adc
clc
adc
roll
enter
adc
fwait
inc
xor
sahf
imul
pop
and
into
pop
add
mov
or
lods
add
xor
test
dec
inc
xor
fiaddl
mov
shrb
push
sbb
lret
lret
in
lcall
pop
pushf
pop
call
or
inc
pop
xlat
push
lcall
jl
shrl
jecxz
xor
sub
and
inc
pop
inc
outsb
lcall
push
mov
push
sbb
and
test
jnp
dec
gs
lods
lret
xchg
xchg
ja
sub
mov
and
adc
lods
into
aad
and
loop
jbe
jb
icebp
inc
arpl
push
pop
jmp
sahf
cmp
push
cltd
fisubl
sub
push
movsb
stos
and
jnp
rol
inc
rcll
push
out
mov
test
negl
add
in
les
sbb
notb
and
cmp
stc
adc
jge
std
mov
push
insb
fistps
mov
test
xor
cld
or
fcomip
inc
dec
adc
mov
xchg
cmpsl
insb
stos
mov
inc
sub
lds
cmc
mov
js
cmc
in
mov
les
call
scas
stos
jno
aas
int
loopne
orl
fidivrs
movsb
and
repz
iret
shll
push
insb
or
or
sti
ds
dec
jns
cltd
into
lret
jg
roll
aad
movsl
xor
imul
pop
ja
mov
imul
adc
sbb
pop
loopne
jg
lea
ret
inc
inc
out
jns
outsb
cwtl
mov
loope
push
insl
in
gs
sub
cmc
or
cmp
loopne
jbe
les
add
outsb
jnp
stc
fstl
std
dec
or
jno
mov
ds
or
test
insb
leave
ret
cltd
rclb
fdivrs
lea
insl
sub
popl
mov
dec
and
add
cld
lods
cmp
icebp
xor
stos
sbb
sbb
fwait
stos
in
pop
not
scas
add
pop
dec
pop
sbb
mov
out
mov
inc
addb
shl
stos
cmpl
sahf
push
repnz
dec
nop
stc
js
loope
xchg
mov
mov
leave
jp
push
addr16
or
imul
icebp
dec
lahf
xor
inc
xchg
jmp
cmp
cwtl
adc
pop
add
sti
shrb
mov
aad
prefetch
rcl
cmpb
aas
xor
mov
push
stos
dec
loopne
test
scas
pop
sub
jmp
sarl
pop
sub
pop
mov
aas
lret
aaa
mov
xchg
movsl
jle
xchg
push
out
inc
enter
push
mov
int
nop
movsb
mov
mov
and
loopne
lods
popa
sub
inc
adc
imul
out
jo
pop
sti
scas
imul
stc
fisttpl
bound
xor
stc
jo
mov
dec
lret
add
lcall
mov
test
cwtl
cltd
scas
insb
adc
cmp
js
dec
arpl
jl
in
sahf
lret
xchg
pop
test
outsb
inc
jecxz
sbb
stos
cmpsl
les
pop
dec
in
data16
fnstenv
mov
add
xchg
inc
or
mov
or
cmp
fs
out
mov
lds
mov
sub
bound
movsl
gs
out
dec
testl
jmp
shrb
dec
and
inc
cmp
lods
jnp
xor
push
push
pop
ja
jl
ret
pop
loope
and
mov
push
adc
or
pop
addr16
push
daa
and
inc
sub
and
push
inc
mov
pop
xchg
or
fwait
movsb
sbb
xchg
adc
cmp
cmp
leave
jle
jbe
xor
lcall
jnp
cmp
mov
pushf
out
and
dec
aam
mov
and
fistl
lds
mov
scas
loope
inc
arpl
int3
push
repz
cmp
cmp
aad
cmpsl
xchg
ret
cmp
mov
cmp
lahf
dec
sarl
psrlw
fwait
call
outsl
aad
imul
jb
lcall
sar
fldl
lahf
push
add
inc
add
sbb
add
and
xchg
mov
add
aaa
push
or
dec
lcall
adc
rcll
cmp
icebp
sbb
sarb
and
pop
xor
sahf
xchg
je
bnd
adc
and
stos
add
les
stos
enter
into
dec
push
cmp
test
es
clc
repnz
or
ret
repnz
std
fistpll
imul
push
cs
mov
mov
popf
int
je
pop
sahf
sahf
push
cmp
jle
or
outsl
xchg
lods
test
pop
popa
inc
aam
cmp
adc
adc
push
je
adc
push
je
inc
mov
mov
xlat
jno
dec
and
int
test
rcll
ljmp
cmpsl
mov
insl
cmp
stos
lods
lods
clc
test
push
push
icebp
test
mov
fsubs
aam
and
cmp
jae
mov
andb
jno
xor
out
and
add
mov
fcoml
sub
mov
dec
fcmovnu
movsb
sahf
out
out
in
pop
pushf
fcompl
je
aas
mov
out
pusha
inc
ret
sub
push
mov
lea
fwait
pushf
fidivs
pop
dec
cmc
xor
pop
add
xor
adc
stos
sub
aam
jnp
mov
ja
dec
dec
jo,pt
fnstenv
mov
and
and
mov
repnz
xchg
arpl
movb
shl
jecxz
mov
insl
insl
push
inc
popl
sbb
repz
or
gs
xor
xor
es
mov
pop
xorl
into
sahf
mov
mov
orl
jmp
cmpsb
mov
call
pop
jmp
dec
pop
cltd
cmp
repz
lock
sub
movb
in
mov
xor
imul
andl
push
jecxz
scas
dec
inc
inc
lods
or
xchg
stos
lock
movsb
lods
repz
pushf
pusha
sbb
jne
into
movsb
lret
or
mov
jl
jecxz
mov
lahf
inc
inc
aaa
xchg
and
sub
push
dec
out
in
or
lods
jnp
lahf
mov
outsl
jg
gs
imul
pop
push
nop
add
and
push
test
push
inc
cmp
adc
mov
or
push
dec
xor
fimuls
and
sbb
and
xchg
stc
int3
inc
xor
lahf
push
cmpb
sbb
ficompl
push
das
mov
test
daa
fmul
inc
cmp
dec
inc
cmp
fcoms
lods
sti
jge
leave
cmpsl
incl
xchg
mov
outsb
sbb
lock
xchg
mov
fidivl
sub
xor
scas
and
xchg
xchg
mov
dec
push
testb
push
add
cmp
mov
mov
in
cwtl
xor
sub
in
cmpsl
sbb
or
xor
inc
inc
mov
lahf
push
push
clc
stc
push
xor
xchg
mov
add
dec
push
ret
movsl
push
inc
in
adc
rsqrtps
mov
sbb
push
stos
inc
mov
dec
stos
xor
add
leave
fidivrl
adc
mov
adc
clc
cwtl
dec
sar
fdivl
or
jge
xchg
adc
sbbl
cltd
mov
dec
out
movsl
push
mov
xchg
shll
jno
fnstcw
push
mov
sbb
aad
pop
push
cmpsl
sub
sahf
shll
out
sub
xor
inc
fstl
dec
lods
fwait
jno
add
sbb
xchg
imul
adc
gs
cmp
test
pop
inc
jns
pop
aaa
jge
scas
pop
pop
jg
test
mov
push
mov
fisubs
sub
dec
jae
jns
fstpt
cmp
mov
fwait
pop
lret
loopne
xlat
jl
fldcw
adc
enter
mov
mov
ja
jae
xchg
cld
pop
out
sbb
cmpsl
sbb
aas
int3
dec
sub
repnz
mov
mov
or
enter
mov
cmp
pop
fwait
xchg
jecxz
les
cwtl
xchg
ja
push
cld
outsl
and
lahf
movsb
push
lods
mov
mov
jge
iret
sbb
push
ret
pop
stos
adc
cmp
imul
shl
adc
mov
aam
jmp
jmp
aam
mov
loop
add
add
push
ljmp
push
xor
cmpsb
push
xor
and
mov
and
cwtl
and
and
jp
and
mov
jecxz
mov
ss
or
leave
mov
stos
fstps
fs
jge
mull
mov
xor
xchg
xor
inc
sbb
icebp
jns
adc
test
cmpl
loope
aad
sbb
into
xchg
xor
pop
int
ljmp
or
lcall
xor
into
sub
data16
push
mov
sbb
ja
fwait
stos
lds
pop
and
pop
mov
scas
or
loopne
jne
int3
push
mov
jae
loop
sub
fwait
xchg
or
add
dec
mov
rclb
and
and
loope
jle
fwait
cmp
xchg
je
mov
mov
lcall
pop
and
mov
sbb
fwait
push
movl
loop
mov
jecxz
enter
mov
aad
mov
cmpsb
data16
pushf
movsb
cmp
pop
nop
fiadds
jl
pop
ds
or
hlt
test
cwtl
mov
mov
data16
cmpsb
lahf
cli
stos
clc
dec
push
lock
out
mov
push
mov
mov
or
or
xor
sub
stos
add
xchg
jae
cmpsb
mov
inc
aad
scas
aad
lods
das
and
or
lock
jne
adc
fdiv
ljmp
std
int
mov
dec
icebp
sbb
lock
pop
adc
jne
jge
pusha
imul
add
std
call
test
adc
in
idivl
jecxz
xchg
int
jno
into
xchg
stos
js
rol
cld
scas
add
inc
dec
inc
or
dec
rdmsr
mov
les
add
das
fldcw
scas
dec
mov
jb
stos
fisubrl
pop
jmp
inc
in
nop
and
pop
adc
repz
and
inc
sub
push
lods
iret
cmp
in
pop
jno
pop
pop
out
loopne
xor
in
dec
xchg
daa
jns
mov
dec
stos
outsl
std
frstor
leave
mov
imul
idivl
inc
jecxz
sbb
in
je,pn
cmc
push
inc
pop
movsb
mov
aad
mov
and
push
and
es
aam
enter
call
xchg
mov
fwait
mov
stc
pop
mov
push
mov
pop
sarl
mov
inc
push
imul
leave
push
xor
out
mov
pop
pop
scas
mov
cwtl
jbe
ss
cwtl
push
std
insb
in
iret
rol
fdivrl
pop
mov
addr16
xor
mov
mov
jne
xchg
mov
in
fimull
xchg
inc
mov
clc
ja
rorl
jne
and
arpl
sub
orl
sbb
push
idivb
xchg
out
adc
in
and
mov
lds
pop
cmp
stos
and
adc
sub
cmpsb
push
jnp
and
shr
mov
loop
and
cmp
hlt
movsb
push
adc
add
cwtl
lret
push
shll
push
push
fildll
shrb
and
or
aaa
push
ficoms
mov
mov
cmc
fistps
inc
and
arpl
aaa
jno
fisubrs
pop
imul
ret
push
and
xchg
jl
push
das
push
mov
mov
mov
dec
ja
cwtl
stos
pusha
data16
jecxz
jmp
filds
inc
mov
fisubs
repz
insb
popa
loope
push
int
add
push
movsb
addr16
hlt
dec
xor
mov
xor
into
jno
iret
xchg
or
mov
cs
xchg
shll
outsl
idivl
scas
pop
sub
xchg
or
test
outsb
mov
cmc
push
xchg
xlat
movswl
ja
xchg
nop
sbb
adc
xor
pop
cld
sub
inc
cmpsl
cli
rorl
xchg
roll
outsl
fsubrs
mov
stos
insb
test
xorl
push
or
stc
mov
test
dec
sub
push
pop
cmpsb
push
fldenv
push
pop
enter
mov
cmp
pop
hlt
shll
pop
adc
shrl
lock
cmpsb
jl
fldl
lock
jge
jne
cmovl
aad
stc
push
test
aaa
outsl
fs
and
outsl
pop
jbe
addr16
or
inc
outsb
rclb
bound
sbb
inc
lret
add
andl
jl
loope
jnp
jno
lret
stos
adc
dec
insb
je
sarb
add
mov
mov
ficompl
mov
mov
es
sub
sahf
mov
jl
inc
sub
data16
out
fsts
xor
testb
into
pop
mov
arpl
lcall
adc
cmpsl
or
push
sbb
jle
sbb
mov
mov
sub
push
and
xor
repz
int3
data16
cmpsb
inc
call
xor
lds
lret
ljmp
lods
ret
add
stc
adc
push
in
mov
aam
inc
clc
push
sbb
test
fldt
add
int
xchg
scas
sbb
lret
lahf
cmpsb
lret
push
out
adc
loop
cli
mov
bound
lock
lods
enter
pop
xor
xchg
adc
orw
pushf
lea
and
enter
sahf
cmp
jg
pop
sti
pop
lods
inc
push
in
push
icebp
in
mov
push
mov
cmp
outsl
jno
mov
dec
mov
loopne
or
or
jbe
fistpl
push
adc
dec
cltd
cmpb
mov
push
imul
clc
jns
or
es
mov
push
in
test
mov
cmp
mov
cmp
push
lret
inc
lds
ret
pop
fstl
push
or
mov
dec
fwait
insl
mov
pop
cld
cmp
adc
or
testb
sub
xchg
dec
lahf
inc
mov
arpl
lcall
iret
xchg
fmuls
add
addl
testb
cltd
push
dec
loope
adc
cmc
adc
in
mov
out
or
push
loop
or
icebp
xchg
addr16
adc
insl
loope
adcb
adc
xchg
jg
dec
bound
daa
inc
pop
jg
popf
add
out
aaa
fldenv
sbb
sub
mov
cmp
push
fistpll
and
addr16
adc
mov
lret
mov
xchg
stos
jmp
sbb
out
xchg
addr16
mov
pop
jae
jnp
xor
ret
and
pop
mov
or
xchg
mov
jmp
fucom
sbb
mov
repz
jl
dec
sub
sub
cmp
int3
test
cwtl
mov
idivl
pop
mov
dec
jecxz
insb
popa
adc
mov
jle
sbb
mov
pop
mov
rolb
test
fbstp
sbb
aas
stos
repz
mov
jne
xor
aas
insb
push
or
and
add
or
jmp
es
sbbb
pop
out
push
aaa
and
shrl
sbb
xchg
or
cmp
fnsave
ficoml
pop
out
cmp
sub
out
ds
mov
pminsw
push
lret
jnp
fisttpl
inc
insl
sbb
sarb
imul
jo
stos
scas
mov
or
scas
out
in
sti
leave
ja
cltd
sub
xor
out
add
jle
aas
mov
rclb
dec
or
icebp
adc
and
and
jp
pushf
cmp
enter
outsb
test
int3
jl
xor
mov
dec
jp
lret
mov
sbb
test
pop
mov
flds
movsb
and
test
out
clc
lret
in
sbb
jns
cli
and
test
mov
pop
mov
out
outsl
int3
or
mov
das
xor
adc
add
sbb
in
push
add
jbe
out
add
mov
popa
xor
cld
push
sub
daa
ffree
and
push
out
mov
sbb
pop
push
fs
pop
jbe
push
fdivrs
nop
ret
enter
push
lods
aas
mov
popf
jnp,pn
popa
push
movsl
arpl
and
fisttps
test
psrlq
mov
movsl
in
add
fcoml
mov
mov
lcall
xchg
sub
sbb
subl
xchg
mov
dec
push
or
lods
dec
mov
lret
adc
xchg
out
popf
pop
mov
imul
jae
xchg
xor
push
stc
mov
out
fsts
push
push
je
repz
jp
sbb
ja
xor
cmpl
repnz
and
jle
jle
fcoml
pop
or
add
in
les
jmp
dec
jno
into
mov
and
in
popf
fisttps
or
cld
shrb
not
cmp
rolb
mov
or
arpl
test
outsl
ret
rcrb
jno
mov
xchg
inc
fisttpl
std
xor
sbb
fs
push
int3
fldcw
cs
fildl
ja
insb
cmp
movsl
or
or
dec
sbb
fwait
gs
mov
dec
bound
rcrb
js
adc
jns
jecxz
mov
jns
pminub
and
xchg
arpl
push
or
jecxz
add
adcl
enter
lea
clc
shl
xor
outsl
cmp
mov
mov
jb
lods
addr16
mov
mov
inc
cmpsb
enter
cwtl
jns
icebp
xchg
inc
repnz
mov
sbb
push
loop
or
outsb
xchg
mov
loopne
divl
add
mov
aaa
sbb
je
cltd
jno
js
arpl
mov
test
xchg
stos
dec
adc
sbb
cli
mov
cltd
jns
out
cltd
mov
pop
or
jbe
in
lods
inc
mov
stos
xor
cmp
add
or
pop
test
loopne
adc
lret
mov
or
jmp
bound
xor
or
adc
das
xchg
addr16
adc
pushf
test
mov
sbb
pushf
add
outsl
pop
rolb
adc
add
dec
pop
inc
cmp
xchg
sbb
cmp
pop
idiv
andb
dec
rol
push
jmp
push
add
hlt
fwait
mov
mov
sarl
fprem1
icebp
dec
addr16
sub
adc
nop
in
into
and
bound
mov
push
fdivs
xor
incl
and
cmc
jl
jecxz
fs
cmp
jbe
mov
cmp
lahf
pslld
pushf
cmp
mov
jo
sahf
xchg
or
push
ds
subb
xor
int3
adc
arpl
or
jae
push
es
test
sahf
or
push
test
stos
mov
ljmp
js
push
sbb
jbe
fisubrs
out
insl
mov
pop
jmp
jle
push
mov
pushl
jl
leave
lods
das
jae
popf
fstps
mov
cmc
mov
das
imul
leave
push
push
inc
pop
inc
inc
cmp
push
push
mov
or
das
ret
cmp
jle
push
mov
push
cwtl
lret
adc
pop
cmc
mov
or
mov
lret
decl
call
sub
fcmovnu
scas
roll
mov
jne
dec
out
int
std
or
sub
dec
inc
rcr
mov
or
aas
adc
lods
out
nop
pop
test
pop
lahf
rcll
xor
out
ja
mov
testb
leave
pusha
popa
imul
jae
add
lock
into
mov
xchg
sbb
in
imul
pop
test
cmpsb
adcl
iret
fisubrs
jno
mov
push
mov
lds
push
pop
sti
iret
push
push
adc
pop
mov
mov
mov
movsb
sar
push
or
dec
jg
mov
xchg
inc
push
jl
lods
and
sub
xchg
scas
sti
jo
mov
pusha
ds
mov
loope
ds
inc
add
fldenv
pusha
pop
fisttpll
cmc
add
int
mov
xchg
inc
dec
sbbb
adc
or
int3
outsl
ds
jp
cmp
lods
cmp
in
sbb
stc
subb
or
xlat
fisubrs
sete
bound
inc
call
scas
jb
addr16
popf
lods
ret
inc
fwait
or
cmp
sbb
push
cmp
test
sbb
data16
push
fisubrl
push
cmpsl
sbb
in
ljmp
fimuls
mov
sti
out
jbe
push
mov
xchg
mov
add
jecxz
ror
pop
sbb
mov
pop
jae
insl
pop
lds
nop
fildl
pop
pop
movsl
lahf
sbb
jge
cmp
xchg
dec
iret
mov
jmp
sub
sarl
sbb
adc
das
int
jge
cmpsb
adc
iret
shlb
mov
push
mov
mov
push
push
inc
adc
addr16
loop
sub
adc
sbb
loopne
jge
shll
mov
daa
ljmp
adc
dec
pop
and
rorl
in
cmp
push
scas
jl
cmp
shrl
or
out
add
stos
mov
sub
lcall
pop
imul
pushl
lret
aaa
addr16
mov
jne
jge
xlat
ljmp
or
and
lahf
in
popf
add
jnp
or
pop
mov
icebp
je
pop
in
mov
sahf
cltd
push
xor
cwtl
fnsave
jmp
insl
sbb
push
dec
je
shr
in
fld
or
ljmp
and
push
sbb
cwtl
pop
aam
outsl
fsub
jbe
pushf
jbe
pop
sti
add
mov
repz
mov
js
leave
mov
add
jns
ss
mov
cmpsb
push
mov
jmp
pushf
xor
mov
jecxz
cmpsb
jge
loop
xchg
mov
xor
int
outsb
mov
mov
rcrb
push
mov
mov
push
fmull
aad
sbb
ja
mov
or
not
pop
je
andl
mov
insl
add
and
and
mov
in
call
ret
dec
pop
xor
sub
test
fwait
out
addr16
add
fwait
ljmp
imul
xor
mov
nop
decl
sbb
push
mov
and
mov
jl
les
into
xchg
mov
cld
or
sub
push
jnp
jbe
loop
and
fmuls
cmpsl
xor
cmp
sbb
clc
jbe
push
cltd
int
push
movsb
cmp
repz
adc
cmp
add
ja
insl
test
test
daa
cmpsb
bound
xchg
pop
sbb
lcall
lock
aaa
lcall
xchg
mov
lea
pop
and
inc
sarl
fwait
xchg
inc
movsb
popf
adc
push
in
es
sqrtps
ja
and
in
in
push
in
inc
sbb
inc
fdivs
sbb
iret
jno
dec
out
dec
fidivl
mov
mov
ljmp
xchg
mov
repz
and
xchg
sbb
insl
mov
adc
js
jo
xchg
cmpsb
mov
enter
add
insl
insl
mov
jg
loopne
sbb
test
adc
fwait
js
xchg
into
add
arpl
fs
ss
icebp
mov
push
sbb
jmp
popa
sti
cmp
mov
stos
xchg
pop
fidivrl
outsb
xchg
push
jmp
add
jns
mov
int
inc
out
ret
cmpl
xor
fcmovnu
mov
sbb
js
mov
adc
roll
pushf
xor
mov
vmread
shr
bound
mov
jp
pop
mov
lea
aaa
jns
arpl
je
enter
inc
jne
mov
fldenv
adc
aad
sbb
orl
dec
mov
push
xorb
mov
lock
test
test
aas
pop
pop
sbb
mov
add
int3
mov
push
fld
mov
scas
sbb
lods
inc
mov
mov
mov
leave
int
xchg
hlt
dec
js
ficomps
jmp
jb
ret
sub
jecxz
aaa
stos
mov
add
xchg
shll
push
jl
nop
mov
scas
or
lret
pop
xchg
jb
fwait
cmpsb
dec
repnz
into
pop
das
fists
enter
cld
jp
jmp
adc
fiadds
movsb
mov
adc
or
popa
and
mov
jnp
not
push
xor
pop
int
or
movsl
daa
mov
xor
adc
push
cmp
mov
cmp
add
mov
stc
xor
adc
pop
sbb
enter
fsts
push
je
fisubs
dec
mov
jno
jbe
sbb
mov
lcall
bnd
stos
push
mov
sahf
orb
or
add
cmp
scas
iret
stos
mov
sub
push
mov
cmpsb
aam
insb
ljmp
ds
arpl
hlt
pop
aam
inc
sar
pop
insb
test
cli
jbe
mov
or
scas
sbb
and
hlt
pop
and
dec
enter
je
dec
aas
mov
add
inc
push
into
scas
imul
rcll
std
ret
fmul
pop
int
out
adc
xor
cmp
xor
shll
push
mov
xorb
lcall
mov
adc
cltd
xor
popl
sub
repnz
fs
lock
mov
aaa
aad
dec
in
ljmp
out
nop
and
sub
aam
in
scas
sub
and
jmp
jecxz
lock
fucom
ljmp
addl
xchg
sub
nop
ret
fnstcw
test
or
les
lock
cmp
arpl
push
push
push
push
sub
push
xor
jns
mov
in
xchg
jns
movsb
out
jbe
xchg
or
es
dec
sub
adc
pushf
mov
mov
testl
test
out
stos
push
or
sahf
sub
mov
aam
push
xchg
stos
pop
ror
sub
lea
cld
and
shll
leave
adc
es
jl
cmp
into
mov
insl
cmc
nop
les
mov
dec
dec
mov
cs
sbb
dec
mov
rclb
nop
fiadds
movsb
leave
mov
call
push
xor
dec
andl
mov
add
pop
imul
dec
jae
sahf
mov
or
mov
jo
push
fdivrs
pushf
dec
div
cmp
loop
adc
sbb
call
jns
rclb
mov
dec
repnz
cmp
orb
adc
push
push
lcall
xlat
jmp
stos
mov
jb
sub
inc
jge
adc
stos
loope
cltd
sub
xchg
lods
rol
out
add
push
or
enter
jns
pushl
test
loop
add
es
rclb
mov
mov
jp
movsl
jle
popa
stos
pop
push
cmp
push
sti
lock
leave
popa
loop
je
testl
xchg
ljmp
pop
xor
out
divl
xchg
movsb
or
cmp
mov
loope
jne
push
jp
mov
lcall
aaa
sahf
pop
enter
sbb
pop
das
dec
sbb
sub
pushf
inc
mov
mov
cld
test
push
and
sub
sub
call
or
fwait
push
fidivrl
push
mov
jg
cmc
sbb
aam
jmp
outsl
sbb
sbb
xchg
sub
and
arpl
mov
insl
push
mov
lods
popa
push
cmc
mov
mov
popa
or
test
stos
repnz
push
cmp
test
movsl
sbb
lods
xchg
js
jnp
push
add
jmp
jecxz
inc
test
stc
inc
add
addr16
mov
push
jns
cmc
fnstenv
lds
arpl
cmpsl
inc
gs
bound
push
jmp
pop
cmp
loop
inc
pop
pop
xor
test
inc
call
adc
jne
test
push
ret
push
shr
daa
push
cmp
insl
or
and
sbb
cld
imul
dec
ljmp
or
fldenv
test
dec
mov
mov
addr16
xor
pop
pop
dec
adc
pusha
lcall
sbb
sub
test
jnp
lock
inc
ljmp
push
xchg
rcrl
fdiv
pop
sbb
and
cld
rcr
cmp
iret
lret
mov
repnz
push
clc
out
es
mov
cmpsb
dec
xchg
aaa
aas
aaa
pusha
in
sub
cli
fbld
orl
sti
add
loop
loop
int
fistpll
mov
adc
dec
mov
sub
pushw
and
ss
or
aam
xchg
sbb
xor
fwait
imul
lea
lret
in
mov
das
xor
mov
inc
lods
mov
ja
lcall
or
push
adc
pop
mov
fistps
xor
xchg
popf
je
pop
movsl
les
das
mov
xchg
sti
std
and
dec
xchg
push
repnz
xor
lods
in
push
cmc
mov
nop
pop
pop
xchg
leave
scas
jne
in
and
inc
nop
in
insl
enter
push
lret
xor
cltd
push
daa
mov
sbb
pushf
gs
inc
mov
mov
out
and
cmp
call
mov
cmp
pushf
adc
aaa
xchg
mov
fcoms
mov
adc
outsb
adc
mov
dec
mov
fildl
jp
ret
xchg
adc
aam
push
imul
jns
push
shlb
aam
jge
sti
call
movsb
dec
outsl
mov
subl
in
sub
or
sub
xlat
test
sbb
fcoml
repz
sub
sbb
xchg
mov
lea
pop
adc
xor
xor
mov
imul
jo
jns
pop
lds
or
mov
and
daa
int
daa
add
cmp
cmc
arpl
or
cmp
cmc
add
ljmp
push
loop
cmp
js
and
leave
fldt
pop
in
jg
bound
outsl
cmovge
fisubrs
stc
jb
out
push
jge
insb
or
xor
mov
lcall
jbe
idivb
pop
mov
clc
mov
inc
mov
out
hlt
test
imulb
sub
popa
or
inc
jmp
daa
mov
test
ficompl
mov
inc
push
or
adc
mov
mov
shl
xchg
loop
cmc
cmc
cld
mov
in
mov
pushf
mov
push
in
xor
inc
cmp
sub
xlat
mov
mov
inc
ljmp
mov
xor
pop
arpl
mov
mov
lahf
pop
ss
bound
push
loope
mov
aam
loop
fsts
imul
or
mov
mov
stc
sub
and
jns
adc
jae
dec
das
insl
js
sbb
es
mov
sub
sub
daa
jecxz
mov
pop
xchg
or
roll
xor
xchg
or
inc
mov
lcall
jae
fstpt
mov
das
fcomi
cmpsb
lcall
mov
jbe
cmp
lahf
aas
ret
inc
cmp
dec
mov
add
repz
imul
mov
scas
movsb
xlat
iret
inc
fidivrl
insl
jae
das
and
in
sub
adc
jnp
pcmpgtb
fisttpl
dec
cmp
pop
sub
sbb
daa
xchg
sbb
dec
les
fstps
clc
mov
mov
mov
pop
mov
pop
ror
and
pop
add
mov
mov
dec
xchg
jp
ret
mov
jecxz
outsb
sarb
xlat
lahf
mov
xor
cmp
ret
cmova
sub
mov
out
sbb
test
ret
sbb
cwtl
out
push
frstor
and
rorb
rcrl
cmp
pop
dec
lods
mov
push
mov
cmpsl
push
sbb
mov
pusha
mov
clc
xchg
xor
sbb
hlt
xor
addl
and
sbbb
int
pushl
mov
or
orl
dec
loopne
loop
icebp
mov
cs
or
imul
mov
dec
or
in
cmp
imul
outsl
orb
imul
jbe
out
pop
mov
jbe
mov
adc
rcr
outsb
dec
mov
cmp
mov
push
xorb
iret
inc
xchg
or
mov
inc
sahf
in
test
das
xchg
movl
add
out
shr
lea
imul
add
cmp
mov
in
iret
test
clc
loopne
xchg
inc
sbb
xchg
int3
popf
and
add
shr
and
inc
into
push
and
mov
loop
mov
jg
mov
bound
cmpsl
bound
cwtl
scas
jno
mov
and
dec
mov
cmp
push
push
hlt
sahf
or
pop
test
adc
jne
cmp
fwait
mov
ja
jecxz
sub
std
rolb
and
push
inc
fs
sbb
movsl
push
ds
jg
flds
test
mov
xor
pop
cwtl
cmp
bound
in
push
fidivrs
aas
or
aas
int
or
jecxz
lock
xor
sub
in
aad
jnp
mov
mov
mov
sub
sub
rcl
popf
cwtl
cld
mov
push
xchg
pop
negb
into
jmp
bound
and
repnz
std
int3
mov
dec
mov
enter
sub
call
mov
mov
lea
pop
dec
inc
movsl
ficoml
aaa
pop
imul
lcall
xchg
mov
mov
and
sbbb
sub
movsl
push
in
scas
jns
sub
mov
dec
fdivrs
ret
lret
adc
adc
popa
gs
sub
ja
adc
cmc
and
xchg
js
mov
pop
xchg
dec
sub
pop
mov
arpl
outsb
inc
and
xchg
and
pop
outsl
insb
mov
scas
outsb
push
out
and
xchg
sub
test
outsb
stos
scas
cmp
or
ja
sti
bound
xchg
or
cwtd
add
or
cmp
lds
mov
add
aaa
outsb
jo
adc
inc
add
inc
cli
mov
fbld
orl
into
mov
add
cmp
dec
inc
or
fcomi
adc
mov
stos
enter
xchg
mov
xchg
in
std
jp
mov
sbb
adc
push
shr
insl
aas
fs
hlt
push
mov
xchg
add
jge
push
dec
mov
test
movsl
sbb
scas
inc
inc
adc
or
jb
jg
add
in
sub
arpl
sub
jl
sub
mov
add
mov
sub
xor
or
push
jo
push
repnz
and
out
cmp
jne
and
push
or
cli
vunpckhpd
out
into
rorb
ret
or
sbb
ss
mov
sub
pushf
cld
xor
nop
and
pop
push
sbb
mov
enter
lea
out
ret
call
or
jmp
testl
jb
into
sub
pusha
pop
clc
bound
cmp
cwtl
fdivrs
cmp
std
lahf
xchg
pushf
pop
push
sbb
dec
stos
mov
and
fsubs
sbb
jge
cli
out
mov
push
push
jp
adc
dec
cmp
adc
gs
fbstp
or
cmp
push
loope
jne
pop
xchg
mov
push
les
mov
fsubrl
stos
cmp
movhps
iret
sub
xchg
or
inc
mov
scas
cltd
cmpsl
push
mov
dec
add
cmp
mov
stos
xchg
mov
insl
cmp
fdivl
ret
rcrb
out
addl
dec
mov
ljmp
in
sub
cmpsb
jp
ret
dec
pop
icebp
push
lcall
lock
sbb
ds
adc
inc
push
jle
movsb
xor
mov
jnp
inc
xchg
cmpb
jp
sti
bound
lea
sub
xor
push
inc
or
lcall
fcompl
xchg
add
and
push
nop
pop
mov
xchg
xor
rep
ficoms
rorb
sti
dec
cwtl
fstl
mov
push
mov
xor
push
bound
icebp
in
sub
adc
and
cmc
ret
pop
jmp
aas
call
mov
add
or
cs
ret
and
sub
popa
adc
xchg
das
dec
and
mov
pop
xor
xchg
dec
mov
mov
mov
adc
inc
movl
arpl
daa
mov
xchg
jnp
arpl
iret
mov
lea
sbb
out
cld
pusha
jo
push
jle
shl
jl
xor
icebp
call
dec
mov
jg
sbb
push
int
imul
cmp
push
enter
notl
je
cmpsl
imul
mov
mov
mov
aad
xchg
in
fimull
repnz
shrl
push
jns
lret
out
pop
cmp
or
cli
mov
divl
jg
mov
or
xchg
stc
jno
ret
mov
jl
pop
adc
int3
xor
insl
sbb
sahf
lods
jo
sbb
xor
mov
js
mov
insl
cmp
sti
fcompl
dec
loopne
je
popf
lret
xchg
sub
es
jno
xchg
mov
cld
test
aaa
inc
hlt
xchg
push
push
xchg
rolb
mov
mov
push
sbb
icebp
xor
inc
es
out
add
loopne
pop
subl
popa
xor
mov
popa
add
mov
pop
insl
lret
adc
mov
fmulp
dec
adc
cwtl
jns
ljmp
mov
xchg
xchg
cmp
fs
call
pop
dec
jecxz
or
cmp
lcall
mov
lahf
orb
cmp
lods
xor
icebp
aad
popf
sbb
push
and
enter
lahf
fidivrs
loope
cmpsl
cld
je
jns
cs
jb
dec
notl
loopne
inc
stos
ss
sbb
outsl
lods
sbb
in
out
lret
int
jmp
nop
mov
in
loope
adc
imul
repz
dec
xor
jmp
test
mov
mov
sbbl
inc
inc
lods
mov
insb
jno
mov
lret
icebp
bound
popf
int3
mov
xlat
insb
shl
mov
lcall
cmp
mov
jo
cmp
mov
sahf
js
fnstenv
mov
mov
jecxz
fwait
dec
iret
movsb
adc
mov
adc
pop
cmpsb
lahf
int
scas
pusha
aad
repnz
sub
fsubrs
sub
push
jecxz
mov
mov
int3
movsb
add
jns
insl
inc
push
mov
xchg
cltd
push
xchg
lahf
mov
pop
lods
sub
jno
loop
jae
clc
in
movsl
je
cvtpi2ps
sub
ljmp
fxch
dec
cli
jb
add
sub
out
mov
mov
pop
sets
pusha
ss
scas
dec
out
call
adcb
pop
into
and
je
shrl
push
arpl
out
adc
ficomps
push
sbbl
sarb
cmp
dec
rclb
lods
arpl
aad
push
adcb
lret
jg
lds
xorl
clc
lret
mov
out
test
mov
dec
scas
or
pop
lret
and
mov
fldcw
jnp
mov
iret
ljmp
stos
enter
int3
push
cmpsl
fcmovbe
jnp
xchg
ret
jmp
ss
xlat
mov
ja
add
inc
out
push
iret
xchg
xchg
push
sub
inc
imul
dec
dec
xor
call
loopne
inc
adc
stc
jbe
pop
push
mov
jle
scas
sarl
xchg
icebp
int3
mov
lock
int3
push
enter
jbe
mov
or
js
pop
lods
addr16
push
das
jl
inc
jg
mov
stos
iret
dec
xchg
adc
stos
sub
lahf
jae
push
dec
push
gs
sub
sub
fcompl
jnp
out
out
loop
push
aad
jo
into
lods
es
mov
xchg
gs
stos
sbb
mov
mov
test
adc
rcr
cwtl
fwait
xor
jno
mov
mov
stos
sbb
arpl
xchg
out
arpl
stc
mov
fcomip
loope
mov
stos
push
leave
push
mov
fwait
into
or
int3
mov
in
pop
and
adc
sarl
shl
insl
jmp
pop
xor
xlat
jl
sbbl
aas
jecxz
les
mov
and
insl
aad
or
out
mov
aas
fwait
scas
jl
sub
ret
xchg
loope
sbb
xchg
movl
push
loopne
outsl
call
dec
xchg
fbld
subb
hlt
repz
jbe
xchg
cmp
sahf
shrb
add
filds
xor
inc
xor
pop
and
mov
subb
mov
push
imul
lds
test
loope
fiaddl
fbstp
in
lods
mov
out
icebp
mov
movsb
dec
xor
jl
pop
outsb
jp
call
pop
lret
or
test
cmc
jno
pop
jl
test
jge
out
stos
arpl
dec
cmpb
xchg
std
repnz
dec
fcmovnu
andb
xor
mov
lock
gs
pop
sbb
sahf
mov
mov
jo
icebp
scas
fildl
mov
lahf
sti
pop
test
fcomps
pop
sarb
fsts
es
pop
adcl
dec
jo
ss
out
push
cmpsb
sub
imul
push
dec
sbb
pop
int
dec
imul
pop
sahf
pop
test
mov
andb
sarl
jne
je
enter
adc
xor
sub
jbe
arpl
call
ror
push
jmp
mov
ret
pop
pop
mov
out
mov
mov
jmp
inc
lods
daa
cmp
out
test
mov
enter
xchg
sub
lods
pop
ss
ficompl
push
add
inc
adc
pushf
xchg
adc
mov
je
xchg
pop
movsl
xchg
outsl
sub
push
mov
clc
in
xchg
mov
cld
cmp
popa
pop
lret
and
stos
cmp
bound
ror
mov
ret
cmpsb
fldcw
sbb
jne
movsb
push
cld
sbb
jmp
mov
or
idivl
cmpl
adc
lret
and
test
mov
cmp
jmp
faddl
mov
or
pop
add
cmp
push
loopne
lret
jb
pusha
loope
adc
sarl
xchg
negb
push
push
daa
imul
sub
movsl
add
cmpb
lea
and
aam
xchg
mov
lock
enter
aaa
pusha
jp
push
jge
dec
or
push
scas
ret
hlt
ret
test
xor
and
cmp
mov
out
test
pushf
mov
shl
xchg
inc
cmp
pop
cmp
pop
dec
cmp
xor
mov
jp
inc
sub
adc
enter
mov
push
push
inc
movsb
cmpsb
dec
ljmp
ljmp
push
mov
into
or
push
jae
and
lock
outsb
hlt
fistpll
push
test
dec
mov
outsb
cmp
jecxz
adc
mov
push
pop
mov
xor
adc
out
mov
hlt
jg
movsb
xchg
je
sub
adc
mov
movsl
xor
stc
sbb
cmp
push
inc
insb
cmp
inc
pop
fwait
or
mov
jmp
sub
test
ret
popf
push
iret
mov
rorl
inc
mov
dec
jbe
cmp
lds
in
pop
sbbl
and
cli
push
mov
dec
push
into
mov
cmp
sahf
mov
ds
sub
dec
sar
pop
hlt
dec
xchg
lahf
std
fisubrl
mov
dec
mov
mov
out
and
mov
je
lcall
mov
push
cs
mov
sti
mov
jae
popf
xlat
sar
rcll
ficoms
add
xor
or
iret
in
sti
jmp
int3
mov
int
aad
pop
or
add
mov
fcmovne
lret
sbb
sbb
pop
hlt
jno
sarb
or
mov
xchg
test
adc
xchg
aaa
or
insb
out
mov
dec
push
jno
cmc
push
jne
fildl
test
iret
mov
jp
dec
or
cmp
popf
scas
adc
test
insl
or
scas
dec
pushf
pop
lahf
es
mov
dec
xchg
sbb
adc
int3
je
add
out
cmpsl
push
jns
lret
negl
pop
cmp
rcrb
movsb
jmp
mov
fcoms
mov
outsl
pop
and
in
sub
dec
jmp
mov
sbb
mov
ds
call
into
inc
nop
nop
mov
insl
jae
inc
iret
push
mov
lods
popf
out
cltd
test
gs
mov
xchg
and
or
cmpsl
sub
pop
pushl
scas
jnp
push
pop
jg
repnz
test
imull
jg
aam
jnp
inc
mov
mov
xlat
inc
gs
test
sar
dec
add
pop
pop
jmp
arpl
loope
jnp
cli
push
in
pop
fisttps
push
mov
lea
es
dec
xlat
sub
outsb
sbb
in
xchg
mov
pusha
mov
cmp
mov
fdivl
das
loope
cmp
shll
in
xlat
js
pop
inc
fincstp
mov
test
cmp
adc
int3
adc
je
jae
mov
cli
push
into
dec
jmp
mov
mov
mov
les
push
cmp
outsl
mov
cmpsb
adc
or
test
lcall
cmpl
xor
clc
and
in
imul
xor
mov
mov
push
lds
lods
loopne
xor
mov
dec
ja
add
cmp
jle
out
aas
add
mov
jl
jmp
jb
and
xchg
dec
test
lret
jle
lds
mov
dec
lds
xchg
les
mov
loopne
mov
loop
dec
jbe
call
mov
mov
lods
sbb
test
mov
push
adc
lret
xchg
lock
jo
sub
sub
test
test
inc
fisubrs
cmpsb
fcoml
dec
sub
adc
or
jae
pop
adc
addr16
pop
rorl
test
sub
icebp
add
lahf
mov
lock
push
mov
movsl
mov
lea
cli
lcall
xchg
and
xchg
push
or
jo
dec
jb
mov
enter
or
movb
jmp
leave
jle
mov
sti
adc
test
push
and
sub
lock
jnp
and
testl
mov
scas
fmulp
sbb
aam
pop
nop
negl
and
ljmp
dec
or
jle
aam
inc
sahf
cmp
cmp
mov
cs
inc
mov
das
mov
fdivrs
xchg
mov
sub
cmpsl
pop
test
inc
repz
xchg
loopne
inc
dec
lret
int3
push
mov
in
and
push
mov
in
rcll
xlat
pop
sbb
and
jns
pusha
sbb
test
pop
add
imul
int
mov
hlt
lods
cmp
rorl
cltd
cmp
in
bound
push
xchg
test
xchg
and
mov
sub
lods
mov
ds
jmp
pop
out
sub
icebp
mov
jmp
test
sub
clc
and
dec
das
mov
test
movsl
mov
add
xchg
cmc
scas
jp
mov
sbb
mov
aaa
mov
jo
cwtl
and
mov
lcall
outsb
inc
xchg
pop
jae
in
nop
inc
cmpsb
sub
dec
xor
cmc
jno
scas
hlt
imul
fwait
or
push
push
clc
mov
movsb
iret
loope
mov
mov
negb
cmovl
add
sbb
fcomps
jnp
lods
mov
jo
xchg
sbb
push
call
and
mov
lods
ja
push
sarl
shll
push
lret
push
lea
andb
xchg
pushf
mov
inc
pop
int3
jnp
jo
mov
or
mov
jne
jg
repnz
adc
xchg
iret
outsb
and
roll
pop
mov
cmp
int
dec
push
cmp
mov
sbb
je
mov
push
inc
and
out
es
xchg
xchg
xlat
lcall
je
jbe
out
push
adc
cmpsb
sub
xor
dec
pop
lods
cmc
sbb
jns
sub
adc
cli
mov
inc
test
xchg
push
mov
in
xchg
or
adc
nop
lahf
out
jmp
cld
sbb
hlt
lahf
dec
into
data16
es
in
sti
xchg
jno
out
adc
pop
add
or
push
pop
mov
adc
aaa
fdivrs
mov
jne
ja
mov
xlat
pop
or
xchg
adc
cmpsl
cmp
jg
mov
jne
addl
pushf
ljmp
mov
out
jno
jno
mov
push
xor
xor
mov
mov
lahf
push
ja
jb
loop
jb
sub
push
dec
xchg
cld
sbb
fisttps
sub
and
movsb
jb
cmp
hlt
fcos
sbb
push
push
outsl
test
insl
scas
push
out
xor
inc
mov
clc
insb
pop
xlat
push
xor
xchg
push
das
rcrb
jae
in
mov
sbb
fists
xchg
sbb
xor
fimuls
pop
adcl
jge
iret
jbe
mov
jecxz
lahf
stc
pop
sbb
clc
mov
mov
pop
leave
movsb
lock
sub
or
xchg
push
xchg
pop
xor
das
mov
jecxz
je
popa
push
jnp
sbb
sub
ljmp
repz
xor
xchg
pop
pop
push
dec
repnz
mov
ret
pushf
lret
lods
pop
dec
xchg
ljmp
mov
insb
movsl
clc
repnz
adc
xchg
pop
loope
fmulp
ret
imul
sbb
adc
cmp
jbe
lcall
arpl
out
call
pusha
or
push
mov
out
mov
sub
fadds
out
icebp
sub
mov
aam
xchg
push
adc
int3
xchg
mov
xchg
pop
xchg
mov
aam
out
ja
je
ds
and
cmp
enter
in
push
cmp
mov
out
xchg
decb
call
xor
push
in
popf
dec
add
inc
inc
outsl
add
in
mov
cmp
xlat
rcll
pop
cmp
stc
sub
mov
fstl
cmp
mov
jp
adc
insb
sbb
xchg
pop
push
int3
cmp
iret
movsl
push
adc
mov
cld
clc
mov
mov
sub
cli
nop
aad
adc
ret
stos
lods
xchg
mov
idivb
and
je
xor
sti
mov
xchg
push
dec
push
repz
test
inc
test
lods
adc
in
inc
sbb
jecxz
mov
cmp
pop
mov
xlat
jae
jb
adc
and
jo
mov
cmp
jle
aam
mov
mov
ss
mov
aad
jno
xchg
pop
stos
nop
xchg
in
jl
pop
sbb
sub
lcall
inc
ret
subps
in
mov
jle
push
je
jno
fwait
jmp
xchg
sti
xor
idivb
stc
jno
xor
popa
push
cmc
and
cmpsl
into
sbb
andb
in
jbe
lea
cmpsl
into
pop
xchg
sbb
mov
int
fwait
pop
inc
scas
mov
and
jnp
int
scas
jmp
dec
lret
ret
sti
xor
xchg
sti
inc
xlat
sbb
scas
jbe
dec
pop
jb,pn
cs
mov
jae
sub
bound
fiadds
outsl
xor
push
xchg
fdiv
ljmp
in
loopne
lcall
fcomps
jne
cmc
bound
adc
jp
cmp
pop
gs
mov
sti
gs
stc
sahf
inc
mov
mov
jg
test
test
inc
rclb
lods
xchg
rcr
xchg
nop
aam
jp
sbb
lods
cmp
pop
jne
cmp
mov
clc
nop
mov
mov
adc
loop
lret
stos
xchg
test
mov
je
cmp
adc
enter
mov
dec
fsubs
in
add
lock
inc
jp
sub
jmp
xchg
daa
add
mov
or
mov
adc
or
mov
push
and
rorb
shlb
push
mov
lds
pop
or
jns
sub
lret
xchg
addr16
ktestb
mov
inc
es
iret
insl
sahf
ja
push
inc
pop
and
jo
sub
loop
xor
int
stc
lcall
cli
xor
lea
aam
jnp
imul
dec
add
mov
mov
in
pop
push
mov
scas
xor
adc
test
cltd
sbb
push
or
sbb
out
xor
add
je
inc
movsl
lock
into
jnp
xchg
sbb
jb
or
in
clc
loop
enter
jbe
inc
fbld
imul
scas
into
jmp
dec
xchg
push
js
outsb
loope
int3
aas
rcrl
xchg
cs
mov
push
xchg
lds
mov
mov
fs
jmp
aam
xchg
inc
sub
leave
sbb
hlt
sbb
ds
xchg
jecxz
leave
daa
aam
inc
test
out
mov
in
sub
mov
mov
mov
cmp
sub
mov
xor
mov
neg
jmp
inc
or
pop
xor
insl
montmul
cmpsb
roll
mul
add
aaa
dec
imul
into
cmp
xor
lcall
xchg
cmp
mov
orl
stc
xor
sbb
add
mov
sbb
cli
push
add
icebp
es
cmp
dec
adc
add
mov
mov
pushf
in
mov
jle
aas
fs
mov
add
out
or
inc
rol
xchg
add
std
xchg
push
cmp
cltd
rcl
adc
xchg
stc
lret
jecxz
jecxz
std
aas
je
or
push
dec
or
and
fisttps
add
dec
rcl
mov
push
bnd
fidivrs
repz
fxch
add
xor
mov
dec
into
jb
mov
arpl
and
push
sbb
cld
xchg
insl
mov
jle
jae
pop
jns
mov
mov
imul
mov
aam
mov
lret
imul
jl
stos
das
rol
pop
mov
push
ljmp
cltd
fsub
imul
sub
gs
insl
inc
mov
mov
cmc
mov
sbb
pop
push
xchg
orb
sub
mov
mov
adc
test
into
test
and
dec
out
cmp
sti
popf
insl
push
mov
testb
push
xchg
adc
push
inc
test
ret
das
test
lret
mov
imull
fisttpll
scas
aas
ret
fmull
das
es
lea
sbb
mov
sbb
mov
cmp
fcmove
xor
jg
sub
ja
add
add
notb
je
and
sbb
test
mov
insl
hlt
in
jecxz
popa
lods
inc
fldenv
jecxz
push
mov
and
ret
mov
lods
leave
xor
xchg
mov
mov
push
aas
pop
fld
cmp
jae
and
dec
mov
jmp
cmp
push
shlb
dec
or
and
scas
test
shl
or
outsb
dec
addr16
shlb
bound
jg
adc
or
fldt
js
push
adc
mov
sub
shrb
hlt
jns
cmp
aas
loope
icebp
xchg
test
rcrb
jo
push
sahf
repnz
cmc
dec
enter
frstor
or
push
fildll
les
shl
testb
adc
gs
cltd
popa
mov
mov
xchg
jp
gs
dec
jne
test
cvttps2pi
adc
lcall
jae
idivb
jmp
imul
fldl
cmp
mov
lret
sub
add
push
push
jbe
mov
scas
dec
xor
cmc
aad
test
leave
and
add
je
mov
lds
fidivrl
sub
stos
fsubrs
inc
push
cltd
pop
test
pop
pop
ret
adc
scas
loopne
data16
push
mov
lods
push
mov
xchg
aaa
inc
in
adc
add
mov
lock
xchg
xlat
sahf
ret
pop
adc
sbb
adc
mov
in
cmc
dec
adc
insw
adc
ret
inc
hlt
cs
lret
and
bound
dec
push
mov
fucom
pop
negl
fsubrp
mov
loop
jo
popa
pop
jmp
cmp
adcb
fimuls
aaa
loopne
xchg
popa
loopne
das
mov
leave
xchg
lea
pop
jge
aam
jge
jne
push
jb
imul
jecxz
movsb
ret
pop
data16
pop
xor
pop
dec
or
repz
mov
or
push
ficompl
mov
popa
xchg
rcrb
adc
inc
sub
or
jns
bound
je
cs
inc
cmp
lret
sub
mov
pop
push
push
jle
jl
ret
pop
outsb
xchg
scas
pop
mov
mov
or
fdivl
lds
out
jbe
arpl
adc
popf
sub
and
in
sub
stos
arpl
adc
cwtl
data16
pop
aas
fisttpl
mov
sbb
sti
dec
in
sbb
cmpsb
imul
pop
test
je
out
and
push
cmpsb
sbb
shlb
or
rcrl
out
aam
ljmp
cmpsl
sahf
div
cwtl
or
cli
fidivrs
loop
movq
inc
rsqrtps
jge
cmp
lods
pslld
orl
arpl
push
adc
cmp
inc
loop
jle
shll
mov
adc
outsl
xor
test
lds
fimuls
xor
lea
mov
or
or
clc
add
mov
addr16
in
shll
pop
test
xor
mov
adc
ja
imul
gs
xchg
mov
nop
jo
add
sbb
pop
add
movsl
sub
icebp
sahf
add
adc
js
loop
xchg
js
call
sbb
sti
in
aad
lcall
cmp
stos
iret
xchg
fistpl
and
and
dec
movsb
inc
insl
sbb
lret
fdivrp
mov
jecxz
aad
inc
lock
and
mov
outsl
and
or
or
scas
mov
and
pushf
lea
inc
roll
pop
daa
invd
test
adc
fcmovnb
lahf
mov
scas
shr
push
mov
ss
out
movsb
or
in
dec
test
fidivs
aas
jb
in
xchg
xchg
mov
fcomp
dec
nop
sub
push
and
sti
pop
cmp
pop
fdivrl
inc
fldt
lea
mov
xchg
icebp
adc
cmpsb
insb
cmp
jnp
push
loop
mov
lahf
push
xlat
cmp
in
mov
jo
push
pushf
jae
mov
jbe
mov
fstl
jp
inc
inc
adc
repnz
mov
sub
jmp
ljmp
fdivrs
cltd
lods
jno
out
mov
dec
jp
cmp
mov
jecxz
imul
ret
aam
sub
dec
dec
call
cwtl
pop
int
and
dec
cwtl
cmp
hlt
sbb
sub
mov
jo
cmp
push
outsl
test
aaa
ret
mov
push
stos
or
imul
push
and
mov
inc
push
jg
stc
shlb
adc
aas
ret
xor
cs
enter
ss
loope
inc
sbb
sbb
push
or
shlb
push
iret
dec
popa
sub
add
popw
pop
out
cmpsl
push
xchg
shrl
or
push
daa
aad
jmp
cmp
loope
pusha
cwtl
leave
out
pop
mov
dec
lock
inc
shr
cmp
test
adcb
inc
jg
add
fsubr
lods
jl
jp
rcl
sahf
jle
and
dec
lods
xor
inc
mov
pop
xor
cld
push
stc
cmpsl
sbb
test
push
mov
lds
or
xor
cmp
adc
cmp
xchg
xchg
imul
xor
jl
test
pop
imul
mov
jbe
scas
test
cmp
jns
xor
adc
out
inc
decb
in
or
mov
mov
lea
aaa
stos
call
sbb
dec
shrb
std
ja
inc
jge
cmpsb
add
pop
xchg
ret
push
lret
xchg
imul
mov
xor
fsubr
xchg
lds
pop
pop
movb
pop
in
in
aad
or
fimuls
ret
inc
sbb
push
cmp
inc
jecxz
gs
or
mov
xchg
xchg
test
jp
loop
ss
repz
mov
insb
adc
sub
push
mov
jne
sbb
fistl
adc
stos
adc
ljmp
mov
jp
inc
out
and
ljmp
lods
add
sub
gs
sub
leave
add
mov
inc
inc
outsb
xchg
mov
push
aas
mov
push
mov
mov
fwait
imul
ja
push
int3
imul
push
cli
or
js
sarl
sub
mov
pop
push
xor
nop
add
mov
or
pop
mov
push
or
or
or
mov
into
or
call
out
in
xlat
lds
fsin
movl
pop
push
xchg
or
mov
xchg
push
lret
lods
pusha
jle
fists
mov
and
xor
push
jo
std
in
cmpsl
mov
xor
sbb
sbb
inc
xor
dec
movsb
and
inc
pusha
xchg
xor
cmpsl
inc
inc
sbb
jl
fstps
inc
mov
sub
xor
into
stos
test
sti
jnp
or
aaa
int
cmp
out
or
adc
sarl
inc
sbbb
out
test
xor
jmp
sub
lret
adc
sbb
mov
lea
push
sti
sbb
pop
pusha
xor
psraw
cmp
xor
mov
jp
xor
insl
mov
filds
imulb
mov
lock
inc
jmp
outsl
xor
xchg
fucom
mov
aam
andb
pop
dec
push
jne
mov
cwtl
jp
dec
lods
and
push
xchg
jbe
xchg
subb
sahf
lahf
stos
sarl
movsl
and
mov
std
xlat
rclb
insb
cli
ret
dec
stc
in
cmp
xor
arpl
jecxz
fdivrs
pop
cld
filds
stc
in
shlb
fcmove
cmp
and
das
inc
sbb
mov
dec
sbb
dec
test
inc
and
xchg
and
in
ss
jg
or
mov
testb
jae
xor
lret
iret
xchg
mov
fwait
leave
mov
fwait
dec
fyl2x
pop
pop
loope
fsts
add
popa
push
ficomps
ljmp
loopne
sbb
in
inc
push
mov
idivb
add
mov
out
lcall
fsubr
dec
push
shl
hlt
mov
add
xor
ret
faddl
popf
sub
icebp
outsb
hlt
in
mov
xchg
adc
mov
lret
cmpsb
push
out
jmp
test
mov
addr16
xlat
sti
sarl
xor
jge
push
sbb
cmp
jp
inc
and
out
cmp
xor
xor
repnz
inc
enter
insl
push
mov
xchg
push
mulb
call
mov
cmp
ss
pop
mov
fisttps
aam
pop
sahf
xchg
cwtl
push
and
lcall
and
jbe
mov
push
pop
outsb
fdivrs
std
aam
pop
jne
jne
push
or
cmpsl
orl
jg
mov
push
ret
jb
xor
mov
aam
ljmp
pop
jp
push
aaa
add
arpl
pop
add
aam
jp
in
mov
pushf
dec
orl
mov
cs
movsb
sbb
mov
or
pop
stos
mov
dec
push
hlt
push
cmp
scas
sti
jle
iret
or
popl
cmp
inc
cmp
fwait
hlt
xchg
and
aaa
jnp
int
daa
push
inc
mov
sahf
cmp
push
loop
mov
mov
dec
push
inc
iret
mov
xchg
cs
push
cs
and
lock
mov
xor
cmp
inc
pop
icebp
cmc
loope
in
sarl
popa
arpl
lds
dec
cli
das
cmpl
test
add
xlat
sub
jg
divb
insb
cmc
decb
ret
jae
std
movsl
sub
and
jno
leave
idivl
sbb
cmp
xchg
mov
lahf
mov
jns
or
jb
pop
int3
inc
sub
enter
mov
cltd
icebp
jne
xor
jo
outsl
dec
movntps
mov
mov
movsb
iret
pop
adc
jg
test
cwtl
add
pop
insb
decb
das
rol
pop
push
push
jmp
jno
sbb
gs
clc
fwait
cmp
and
das
dec
mov
sub
dec
mov
xchg
jae
out
dec
pop
pop
shrl
adc
ret
mov
movsl
jae
das
or
fxch
cltd
mov
dec
mov
jns
mov
je
fcomp
fcomp
negl
jns
out
int
sahf
ja
dec
mov
jno
pop
push
subb
sti
jmp
adc
lds
pop
cltd
cmp
mov
mov
and
mov
push
pop
lcall
xor
mov
mov
imul
movsb
push
mov
arpl
adc
stc
insl
sbb
jg
leave
fsubrs
inc
push
xlat
ja
data16
mov
fisubrl
sahf
outsb
xor
cmp
mov
call
pop
xor
cmp
mov
ret
pop
fsubr
cli
cmp
loopne
mov
pop
lods
mov
lods
js
xchg
rolb
or
lret
mov
dec
sarl
and
test
and
pop
mov
jp
loopne
push
inc
lock
ret
and
bound
jb
adc
push
mov
lret
jbe
pop
pusha
mov
int
push
orb
cmp
insb
fs
mov
cmp
or
popa
cmp
mov
out
shrl
out
jp
xchg
pusha
idivl
scas
negb
int3
or
popa
arpl
aas
xor
lret
push
ret
rolb
and
cmc
orl
pop
mov
faddl
push
sbb
aad
aad
out
pop
adc
xor
pop
push
roll
lods
jb
outsl
pop
hlt
mov
pop
icebp
testb
jle
ret
and
out
iret
mov
pop
pop
mov
jecxz
int3
add
or
pop
or
daa
jl
or
mov
fstpl
cmp
jno
int3
gs
enter
rolb
inc
sbb
adc
dec
cmp
mov
in
fcoms
xor
lahf
pop
aas
cmp
test
div
out
add
xchg
int3
nop
loopne
xchg
lods
mov
mov
xchg
and
stos
push
jmp
sbb
pop
loopne
jl
and
add
cli
push
mov
dec
jne
adc
mov
lods
in
loopne
push
xor
sub
rclb
mov
mov
cmpsl
sub
pop
sti
clc
mov
mov
jg
cmp
jg
pop
sbb
or
adcl
sbb
jmp
mov
psubsw
cmp
jo,pn
xchg
test
add
mov
mov
clc
sub
lea
stc
and
mov
pop
xchg
sahf
das
xchg
mov
les
mov
sbb
cmp
js
int
xor
ds
ret
and
popl
out
fcmovbe
bound
les
dec
jae
pop
xor
in
adc
or
daa
fists
dec
xchg
push
dec
std
dec
mov
mov
fisubrl
cli
cmpsb
in
sar
fcoms
or
lds
lods
fmulp
mov
jae
popa
aam
push
sbbb
fists
adc
ss
pop
sub
out
jno
pop
xlat
out
insb
cmp
or
jge
mov
clc
adc
movsb
adc
pop
fdivs
sub
dec
enter
mov
loope
mov
subb
jl
ja
ja
push
inc
enter
out
mov
add
pop
outsl
lds
loope
out
xchg
out
out
pop
mov
fmull
clc
mov
jl
mov
sub
clc
icebp
lcall
xor
sub
jle
dec
pop
adc
lds
test
sub
daa
push
repnz
pop
fnstcw
test
out
ficompl
testb
loop
sub
jbe
and
stos
mov
fsubr
xchg
rcrl
jmp
loop
div
outsb
pop
daa
pop
call
adc
fs
adc
fs
test
in
int
push
adc
push
push
cs
sub
push
jo
cmpb
loop
push
ljmp
and
jno
aas
mov
out
sbb
sub
sub
add
pop
ud2
lcall
les
jo
lahf
es
push
insl
and
sub
adc
xchg
jecxz
and
and
sub
std
in
lcall
mov
rclb
into
pop
inc
pop
lock
pop
mov
push
sbb
sbb
push
pop
test
rclb
mov
mov
xor
mov
pop
idivb
sbb
aaa
cmp
dec
std
cmp
mov
fmul
testb
mov
lcall
mov
shr
cmpl
push
mov
xchg
stos
jge
lods
dec
int
lods
cmp
repz
push
ret
into
in
mov
inc
fcmovu
push
xchg
pop
jae
or
mov
inc
adc
jno
aas
mov
pop
or
jecxz
ret
ret
cmp
push
sub
and
mov
mov
push
ljmp
xor
xor
or
mov
shr
inc
xchg
adc
dec
shrb
mov
loope
sbb
pop
mov
fiaddl
stos
aas
rcrl
cwtl
inc
test
data16
add
in
push
mov
adc
ljmp
repnz
loope
pop
std
add
test
popf
ret
jne
gs
rcl
mov
cmpl
push
mov
fimuls
push
pop
pop
dec
push
inc
gs
aad
iret
lahf
ficoms
add
call
xor
dec
mov
and
sti
popa
jae
mov
sti
and
xor
sti
pusha
push
dec
or
jnp
mov
arpl
sub
mov
xor
leave
inc
std
fcompl
stc
lods
pop
lret
adcl
jg
push
or
scas
cmc
xor
cmp
js
jbe
aad
mov
insb
xchg
and
stos
sarb
in
pop
or
adc
push
xor
cli
jno
mov
in
and
mov
mov
inc
cmp
xor
das
daa
fiadds
and
and
fiaddl
mov
xchg
cmc
pusha
mov
dec
and
ror
inc
jle
xor
mov
lret
pushf
int
inc
ret
lods
ja
pop
les
add
stos
mov
fs
push
loopne
cmp
imul
adc
add
pop
push
cmc
add
js
sub
cli
jnp
mov
mov
mov
inc
sub
mov
lods
dec
sbb
lds
xchg
int3
adc
lcall
or
cmpsb
adc
jb
dec
pause
dec
stos
ja
or
add
push
jne
scas
fists
decb
icebp
jno
lock
mov
lock
jae
movsl
test
xchg
in
clc
and
pop
pop
jbe
repnz
sbbb
push
cld
pushl
aaa
push
jno
mov
jmp
aaa
inc
std
mov
pop
push
dec
out
orl
xor
lds
in
out
pop
fs
sbb
inc
xor
jp
xchg
scas
fnsetpm(287
or
rcr
insl
test
push
addb
jle
sbb
sbb
fld
fdiv
cmp
in
call
repz
adc
xor
aas
dec
xlat
stos
push
addr16
mov
sahf
cmp
dec
hlt
dec
mov
cmp
mov
sub
je
mov
aas
mov
mov
lods
mov
mov
pop
inc
and
push
sahf
mov
mov
jbe
sbb
lea
and
pop
cwtl
cmpsl
mov
js
int3
mov
sbb
dec
stos
cwtl
cmp
cmpsb
in
pop
addr16
push
xor
jo
sub
in
jb
ja
rcrb
cmpsb
in
addr16
cmp
lock
push
push
inc
xchg
rcr
jp
jle
leave
fnstcw
pop
sbb
sti
out
js
pop
cli
mov
and
lcall
or
shll
xchg
icebp
aad
cwtl
or
jge
cmpb
xchg
lahf
gs
adc
xlat
fisttps
call
cmp
and
roll
mov
repnz
inc
iret
pop
negb
repnz
out
push
andb
jmp
sub
jle
mov
pop
leave
push
out
lret
xor
or
gs
lods
cmp
shl
sub
lret
loope
pusha
pop
daa
mov
and
push
inc
mov
and
and
in
pusha
aaa
aaa
push
adc
inc
inc
mov
movsl
sub
xor
mov
jl
cwtl
mov
dec
sub
cmp
mov
jnp
lods
push
mov
aam
cvtpi2ps
int3
mov
es
addr16
lret
adc
sbb
ss
loopne
fdivr
push
ja
arpl
into
push
cmpsl
mov
inc
cli
pop
loope
fmull
inc
xchg
hlt
dec
cs
decl
mov
nop
imul
jp
js
adc
repz
push
aaa
test
movsl
jmp
ja
arpl
cmpsb
sbbl
int3
fldenv
fstl
loopne
lahf
in
inc
ss
insb
leave
mov
sarl
popa
adc
loopne,pn
cmp
sub
mov
outsl
pushf
ja
cmp
sbb
sbb
xchg
mov
pop
outsb
ret
sub
xchg
adc
push
clc
jecxz
inc
jg
insb
pop
xchg
out
inc
inc
fistps
movsb
pop
pushf
sub
scas
sub
outsl
jo
or
test
cld
jae
add
daa
addl
push
ret
lcall
sahf
jle
mov
cmp
aaa
mov
pusha
fs
jecxz
cmc
ret
mov
in
xchg
int
fstpt
mov
bound
jnp
cmpsb
mov
add
mov
pop
sahf
popf
popf
in
js
mov
mov
popa
test
repnz
lcall
std
in
adc
and
divl
jns
cltd
ljmp
add
dec
inc
push
xchg
dec
imul
cld
mov
mov
jl
mov
push
push
repz
clc
cmp
xor
and
cmp
scas
in
cmpsb
mov
mov
mov
arpl
cmp
jbe
out
lock
sub
cmc
xorb
mov
ja
rcrl
jecxz
jno
inc
inc
push
sbb
push
iret
mov
arpl
cli
pop
outsb
rep
inc
xor
lret
dec
lods
add
repz
bound
add
out
jmp
fs
test
sbb
xchg
inc
push
or
andl
xor
and
popa
adc
movsb
jae
xchg
outsl
jae
mov
stc
test
fs
sbb
pop
aad
or
sub
jg
xchg
fsub
dec
nop
cld
int
sub
mov
ret
push
xor
sub
lret
stos
and
dec
mov
push
ss
add
nop
dec
popf
push
or
dec
aas
shll
mov
adc
insb
cwtl
bnd
sub
pushf
push
pop
adc
rep
test
inc
rcll
iret
mov
imul
cmp
jae
out
cli
cwtl
sub
repnz
push
add
mov
xchg
xchg
xlat
lock
scas
xchg
das
cld
mov
idiv
test
cmc
add
add
mov
scas
jo
loope
enter
lods
dec
xchg
insl
rcrb
push
mov
push
pop
into
std
cmpl
jecxz
xchg
mov
dec
xor
xchg
sbb
mov
jle
pop
fcmovu
mov
lgs
rcr
out
cwtl
and
in
and
pop
aas
imul
or
xor
mov
fdivrl
into
jle
aad
add
and
dec
and
jo
ficoml
cmp
rcrl
repnz
outsl
jg
faddp
sbb
xchg
pop
adc
fisttpll
mov
push
mov
fistpl
mov
fmull
lock
cmp
in
mov
sti
xchg
in
mov
aam
push
cmp
jecxz
leave
cmc
rcl
cmp
dec
mov
or
idivl
bound
pop
in
sbb
push
xchg
dec
repnz
cmpsb
jge
ret
cld
push
inc
push
dec
xor
pushf
std
xorb
int3
loopne
mov
jbe
push
fdiv
mov
jbe
mov
push
shl
dec
movsb
or
iret
mov
test
mov
cmpsb
movsb
popa
inc
inc
xor
movsb
jnp
out
insl
cmp
pop
sahf
aas
hlt
lock
push
stc
repz
jae
test
mov
add
gs
mov
lret
mov
loope
out
push
push
push
mov
sub
cmpsb
xor
cmpsb
mov
arpl
inc
xchg
in
xlat
pop
lcall
cmc
ret
and
push
pop
lret
int3
sti
sub
into
jge
push
je
sarl
cmp
sbb
into
cwtl
cltd
sbb
repnz
test
sub
mov
mov
or
sti
out
pop
aaa
mov
jbe
fdivl
sbb
int3
sbb
cmp
push
ss
shl
sub
xor
add
cmp
sub
mov
pop
dec
std
rolb
adc
mov
cmp
push
pop
dec
test
lahf
test
out
jb
sbb
jecxz
ljmp
cmp
fists
cwtl
aad
call
aaa
shl
jp
addl
repz
call
jecxz
je
inc
mov
test
decb
add
dec
cltd
ds
sbb
cmc
repz
icebp
and
cmp
outsb
out
popf
ret
fcompl
xor
sub
fstpl
fwait
adc
dec
jmp
mov
or
inc
mov
inc
sub
mov
xchg
daa
jl
cmp
out
inc
jmp
mov
jp
rolb
dec
lods
pop
jnp
adc
dec
xor
mov
leave
ds
idivl
into
xchg
xor
pop
push
out
repz
pusha
xchg
loop
js
add
inc
imul
jnp
icebp
insl
push
loop
mull
jae
push
loope
stc
mov
les
jbe,pn
movsb
fldcw
es
dec
ljmp
sub
loop
jae
aad
adc
mov
push
push
repz
sub
pop
shr
push
outsl
js
les
dec
mulps
cltd
sub
cs
xchg
int3
xlat
lret
test
imul
push
and
cwtl
hlt
push
icebp
aaa
mov
jmp
out
adc
add
sub
jmp
cwtl
call
test
cmc
insl
xchg
icebp
pusha
and
sti
jg
fistpl
shl
xchg
adc
scas
mov
mov
scas
sub
data16
insl
jp
stos
push
cs
mov
xor
jle
cmp
out
or
and
xor
ret
popf
and
mov
rdmsr
loopne
cmpsl
inc
test
xor
dec
std
inc
daa
add
sti
mov
cld
lods
inc
ljmp
ja
sbb
in
push
mov
adc
jbe
test
sbb
pop
loopne
daa
incl
div
sub
xor
adc
loopne
repz
push
dec
push
push
xchg
add
inc
mov
cmc
push
cmp
push
pusha
loope
add
or
fidivl
repnz
inc
in
pop
sbb
in
in
mov
das
std
pop
xor
jecxz,pn
push
frstor
out
mov
mov
jle
mov
mov
mov
sbb
dec
fildl
sbb
in
pushf
xchg
jge
les
mov
push
mov
mov
mov
imul
adcb
adc
inc
mov
sub
lds
cmp
push
imul
jo
push
rcrb
pop
pop
push
scas
push
roll
aad
cwtl
pop
xor
cmp
add
or
xor
outsl
in
pop
cld
inc
adc
cld
sbb
sbb
idivb
icebp
push
push
mov
push
dec
sbb
cmpsl
mov
or
outsb
inc
jge
xchg
lahf
arpl
xchg
add
push
inc
insb
xchg
dec
pop
imul
inc
sti
leave
cmp
sub
mov
ss
dec
adcb
sub
scas
fwait
jne
in
sbb
daa
xchg
cmp
adc
sbb
iret
popa
imul
or
es
lcall
or
pushaw
sub
sbb
inc
scas
push
lcall
into
daa
pop
sbb
sbb
jae
xlat
push
mov
popa
scas
mov
jne
sub
and
mov
push
shl
aas
int
mov
mov
enter
mov
push
lahf
int3
pop
pop
test
push
sti
loop
xchg
orl
js
rcrb
in
adc
daa
testl
js
filds
das
adc
ljmp
xchg
mov
dec
sub
je
adc
in
fsubrl
or
outsb
repnz
adc
or
xchg
sub
cmp
fwait
xor
fldenv
inc
je
pop
in
xor
fadd
adc
or
and
scas
lea
push
shrb
repnz
pop
and
inc
outsb
mov
fldenv
test
enter
jo
scas
sub
in
push
mov
scas
popf
stc
dec
or
scas
in
inc
pop
pushf
out
stc
mov
mov
int
sahf
add
add
fiadds
xchg
aam
xchg
inc
test
popf
sub
cmpsb
cmpl
les
fstps
loope
in
add
pop
icebp
fisubs
call
sub
and
int
pop
popf
and
leave
into
adc
js
aas
outsl
loopne
cmp
in
mov
lock
repz
imul
xor
xor
imul
test
mov
out
test
inc
mov
dec
push
mov
gs
jl
arpl
jg
cli
subl
sub
leave
cmp
leave
inc
shll
push
mov
inc
ffree
cmp
ret
cmc
inc
lcall
mov
push
inc
push
sbb
cmc
adc
jns
adc
aas
mov
mov
leave
cmc
out
out
push
or
xchg
sub
xor
mov
icebp
mov
jge
mov
pop
xchg
xor
test
inc
aaa
aas
dec
sub
mov
jge
scas
popa
jb
lret
movsl
or
mov
xor
fldl2e
stc
lcall
adc
sub
dec
mov
xor
push
or
push
mov
aaa
les
insl
test
xor
and
loop
dec
into
or
inc
dec
xchg
idiv
sub
mov
mov
cmp
mov
and
jle
pop
sub
and
jo
scas
pop
cld
and
mov
or
and
sbbb
mov
pop
cmp
out
in
sahf
aas
and
out
cmpb
inc
lock
mov
int
mov
and
aam
jmp
push
or
and
dec
arpl
out
mov
or
stos
xor
add
es
sbb
sub
xchg
out
cmp
jnp
aaa
mov
jge
xchg
push
mov
xchg
and
add
add
cmp
test
adc
insl
sbb
shl
jge
ss
je
push
jge
dec
cld
cmp
xchg
inc
and
add
sub
repnz
push
lret
adc
ljmp
in
jle
cmc
mov
adc
test
pop
ds
shl
gs
das
jne
mov
sbb
out
push
aam
xor
push
cs
or
add
jmp
mov
jnp
inc
sbb
or
ror
negb
mov
pop
pushf
addr16
in
arpl
sub
stos
mov
mov
iret
cli
mov
imul
pop
scas
lcall
js
jnp
and
test
mov
xchg
filds
inc
inc
inc
lods
and
fcomip
push
in
xor
hlt
icebp
adc
pop
mov
fwait
jo
jp
ss
mov
repz
arpl
notb
adc
nop
inc
daa
pop
xchg
and
repz
imul
or
mov
mov
addb
cmp
xchg
iret
loopne
add
test
jmp
out
pop
pop
jmp
jmp
outsl
xchg
repnz
outsl
mov
fldl
dec
lret
daa
mov
int3
mov
lock
in
clc
pop
loope
pop
mov
inc
repz
into
cmc
fildl
mov
adc
jnp
rcr
ds
daa
mov
pop
or
pop
nop
hlt
mov
pop
arpl
cwtl
push
int
pop
lods
sub
int3
mov
scas
fwait
adc
jp
aam
push
add
add
out
cwtl
out
ret
and
je
and
xchg
aas
mov
in
fsubs
ret
push
call
loope
pop
stc
cmp
or
hlt
sub
adcb
aas
xchg
jnp
rcrb
jle
adc
sbb
insl
adc
dec
pusha
sub
fidivl
fcoml
pop
in
hlt
sub
push
jb,pt
out
pcmpeqd
mov
pusha
mov
jo
cmp
cmpl
es
inc
xor
sbb
mov
adc
or
jno
daa
hlt
pop
nop
jg
push
repnz
nop
aad
inc
in
fidivrs
movsl
dec
cld
xchg
popa
loopne
shl
xor
inc
sub
jge
sbb
loope
mov
sbb
dec
fwait
clc
push
inc
rcl
jge
jle
rcrl
outsl
cld
mov
orb
mov
popa
imul
lea
jne
stos
pop
scas
xchg
pop
mov
mul
stos
xor
and
inc
mov
icebp
fnsave
mov
inc
mov
lret
or
ljmp
sbb
in
mov
adc
fisttpl
loop
push
sbb
add
adc
cld
int
pop
and
shll
into
movsl
mov
inc
dec
and
jbe
rcl
imul
mov
fidivrl
hlt
xchg
mov
sub
jo
push
cld
lcall
aad
in
bound
pop
sbb
aad
shrl
fsubrl
or
and
lahf
sub
sub
pop
idivb
in
aad
ror
popf
movsl
outsb
push
fst
insl
fsts
add
int3
popf
fmull
push
fwait
mov
and
shll
leave
sbb
mov
push
mov
push
inc
scas
push
adc
loopne,pn
enter
sbb
test
stos
dec
out
fwait
cld
gs
mov
aaa
repnz
adcl
sub
cltd
mov
push
mov
icebp
sbb
gs
repz
incb
lds
jns
add
push
inc
js
imul
repnz
pop
hlt
stos
sti
mov
and
cwtl
js
outsl
dec
lods
mov
ja
les
clc
and
dec
push
pop
pop
jecxz
dec
lods
cmpsl
lods
push
daa
stc
js
push
fwait
mov
rorb
hlt
jns
out
mov
or
cmpsl
jbe
nop
pop
jb
test
dec
sub
rcll
push
jmp
jns
fldenv
iret
mov
add
jge
adc
test
fnsave
fstpl
mov
cmp
push
stos
cmpb
jns
or
mov
cmp
mov
mov
movsb
lret
in
notb
pop
jb
std
jnp
shr
sub
int3
adc
mov
pop
xlat
jecxz
fdivrl
pop
div
jnp
xor
sbb
sti
imul
jecxz
ds
mov
mov
jecxz
decb
push
and
adc
loope
and
jp
movsb
xchg
or
pop
jmp
lock
sarl
and
rclb
ja
scas
nop
and
aad
lods
adc
jl
imul
imul
cmpsb
dec
loope
mov
pop
mov
int3
add
aas
in
arpl
sti
fldcw
mov
addr16
pusha
subb
pop
stc
outsb
jns
jl
mov
adc
mov
push
call
jg
add
cmp
or
mov
cmp
jb
push
aam
and
sbb
cmpsl
xchg
icebp
xchg
in
cmpb
in
jne
and
rclb
xchg
clc
inc
inc
dec
lock
pop
pop
push
out
call
sahf
mov
or
lret
aaa
pop
enter
sbb
cli
inc
xor
and
outsl
and
dec
xor
push
ja
pop
inc
mov
cmp
fstps
fistpl
repz
std
mov
test
std
mov
je
sbb
scas
out
jbe
dec
std
mov
test
int
push
test
push
mov
and
aaa
sbb
aad
lret
dec
jge
jno
adc
mov
mov
cwtl
data16
movsl
scas
sbb
sarb
out
inc
add
xor
popa
inc
or
and
push
fisttpll
sbb
cmpb
es
sub
fnstsw
add
testl
xchg
mov
cld
add
jbe
sti
cmp
jb
mov
popf
aaa
and
adc
popf
xor
je
cmp
std
outsb
mov
cmp
test
scas
jge
shlb
dec
inc
repz
push
popa
pop
mov
inc
push
mov
popa
out
mov
adc
mov
lods
out
loop
fucom
pop
stos
mov
pop
arpl
inc
lds
sub
inc
das
cmpsb
mov
ljmp
pushf
xchg
decb
or
out
and
ss
push
pop
jnp
fidivl
lahf
add
pop
dec
add
mov
sbb
sub
push
cmpsl
mov
adc
iret
test
push
xchg
jno
push
stc
cmpsl
fidivs
repnz
jns
loop
and
daa
cmpl
cmp
cmp
mov
out
imul
lret
and
ljmp
cmp
int
fistpll
dec
sub
fistps
pop
xchg
mov
and
add
enter
aas
add
out
mov
push
inc
dec
insb
mov
cmp
dec
repz
ja
or
insl
in
scas
ror
jge
mov
or
arpl
das
cmc
inc
jnp
pushf
lods
pop
daa
pop
add
sbb
sub
sbb
add
mov
nop
mov
sub
mov
loope
xor
test
mov
mulb
mov
cltd
mov
jae
rclb
cmp
mov
imul
cmp
lret
popf
push
and
push
cmp
push
jb
int3
push
sub
mov
fidivrs
fildl
es
jmp
push
out
out
dec
scas
pop
lret
pop
jg
outsl
outsl
cmc
into
push
lock
jecxz
lods
xchg
push
pop
mov
notl
dec
and
pop
enter
xor
test
inc
add
jbe
and
and
sbb
insl
mov
pop
add
and
mov
movsl
dec
rcll
mov
insl
loopne
jle
jns
cmp
mov
cld
les
roll
arpl
decb
jno
cmpsl
subb
xor
popf
pop
lret
dec
int3
jno
inc
lods
fmuls
add
loope
pop
iret
leave
sub
and
sbb
out
js
fcomps
lods
ljmp
js
inc
dec
out
jne
in
jl
fs
std
mov
jnp
push
jmp
mov
xchg
lcall
stos
cmc
push
xchg
ficomps
adc
in
xor
daa
cmp
mov
push
push
xlat
pop
jg
je
push
pop
mov
sub
lods
push
push
out
test
pop
dec
insb
sti
hlt
push
mov
lret
dec
and
xorl
or
scas
jge
lods
jno
push
cmp
popa
ss
jmp
or
fistpll
cwtl
test
dec
mov
xchg
mov
mov
cmp
and
lods
insb
add
lcall
jb
bound
and
outsl
xchg
mov
movsl
inc
and
and
push
push
lea
lock
or
cltd
sahf
xor
mov
xchg
jo
mov
pop
fwait
shl
enter
xchg
nop
sub
push
mov
icebp
mov
push
push
cmc
xchg
test
in
lods
out
pop
push
fwait
ret
push
push
jns
enter
enter
and
xor
mov
movsb
sub
scas
sub
mov
cwtl
enter
shrl
jge
pop
mov
push
and
in
popf
test
and
roll
and
xor
popa
push
mov
add
add
bound
cwtl
addl
inc
adc
xorl
jne
jmp
mov
sbb
mov
or
adc
jbe
pop
sub
xchg
and
lods
or
cld
fs
or
adc
fidivs
cmpb
lahf
or
addr16
add
lea
mov
sysenter
ss
call
dec
rorl
inc
push
scas
cmc
iret
inc
pop
sahf
shr
sbb
sbb
xor
scas
jns
adc
push
not
pop
aaa
or
or
add
cmp
xchg
sbb
repz
fistps
and
fildl
mov
cld
dec
pushf
sbb
rcl
testl
mov
test
xor
pop
ret
fdivp
mov
add
mov
mov
sahf
cmc
cmpsb
je
insb
fwait
jns
cltd
rcrl
sbb
dec
pushf
fxch
lea
sbb
lahf
and
mov
in
imul
rolb
jno
mov
sti
pop
ret
mov
push
jecxz
repnz
test
push
inc
push
lahf
mov
sub
inc
cmp
lods
cmp
lock
add
inc
aam
sbb
int
jg
mov
imul
divl
insl
mov
inc
in
jg
mov
pop
add
in
jmp
sbb
out
xchg
hlt
inc
enter
in
push
xchg
jns
in
mov
cmp
lret
stos
out
gs
clc
push
aam
ja
cli
das
test
je
inc
add
pextrw
imul
mov
es
out
out
or
and
les
inc
mov
cmpsl
jg
in
sub
push
adc
and
mov
lret
xchg
dec
push
mov
inc
cmp
cli
js
cmpsb
mov
mov
popa
mov
or
or
cmp
push
push
test
and
mov
and
pop
xor
sub
xchg
mov
rcr
sti
sbb
mov
xor
cmp
aam
mov
sub
and
inc
pop
xchg
test
sbb
hlt
daa
mov
lds
add
clc
push
les
or
and
xor
mov
mov
fcomps
loop
adc
jecxz
pop
cmpsb
or
sub
stc
sbb
out
mov
leave
dec
mov
hlt
cmp
dec
popl
addr16
push
inc
jne
ds
std
pop
shlb
push
mov
xchg
sti
jae
xchg
mov
and
push
leave
push
add
inc
push
mov
xor
test
cmpsl
xor
mov
sbb
jle
push
dec
push
and
ret
data16
popf
pushl
hlt
sub
loop
or
sbb
cltd
add
push
and
cmp
mov
movsb
or
dec
lret
push
mov
std
push
test
mov
adc
subl
shlb
pop
cmp
icebp
sub
xchg
sarb
insl
or
sub
cmp
scas
bound
mov
add
loop
mov
push
out
pop
mov
mov
adc
lret
loop
and
or
or
jo
test
push
fwait
out
dec
jle
xchg
mov
sbb
test
inc
mov
lret
lret
inc
ja
hlt
rorb
add
cmc
xchg
add
and
shl
jp
sbb
jne
call
out
pop
push
sub
push
mov
cmc
aaa
add
sub
add
cltd
mov
pop
fisubrs
xchg
cs
push
ret
dec
xor
sti
icebp
mov
mov
jle
pop
fstps
add
insl
fnsave
sbb
cld
jnp
xor
mov
repnz
add
pop
ret
fucom
call
push
cmc
mov
daa
movsl
into
es
pusha
mov
nop
test
mov
outsl
ljmp
dec
pushf
sbb
jnp
pop
pop
xchg
daa
loop
or
lods
xor
jl
loopne
lret
out
mov
cmpsb
std
mov
and
jne
popf
dec
push
mov
fisttpll
cwtl
mov
xchg
fxch
jle
in
adc
leave
cmpsb
out
adc
sub
or
pop
adc
pop
cmpsl
mov
adc
and
cltd
add
xchg
sbb
ret
and
lods
lret
fsts
or
dec
adc
xchg
jnp
ret
dec
roll
out
sbb
xorb
inc
jno
jecxz
cwtl
inc
test
nop
push
pop
fistps
lcall
mov
das
jmp
push
lcall
jb
cld
pop
cmpsl
cwtl
loopne
js
in
test
lds
add
icebp
ja
fcmovne
adc
or
adc
xorl
test
pop
pushf
ret
push
imul
dec
lods
ficoml
enter
or
pop
or
mov
xabort
or
lret
repz
xor
outsl
divl
sar
dec
mov
cld
lods
in
cmp
jg
and
ficomps
and
pop
add
sahf
pop
fimuls
leave
insl
popf
gs
jmp
or
and
adc
roll
aad
fdivr
imul
imul
xchg
stos
jge
ret
arpl
xor
adc
pop
jmp
dec
jle
ljmp
dec
jl
adc
xor
or
pop
into
cs
bound
in
xor
and
and
stos
je
pop
es
add
mov
mov
les
pop
int
mov
pop
sub
cltd
and
or
adc
mov
push
lds
mov
pop
gs
idivl
and
sub
addr16
ja
dec
jae
lret
sub
mov
xchg
lahf
fimuls
data16
jp
jmp
es
cmp
fsts
call
jae
js
xchg
jnp
xlat
out
insl
pusha
jmp
xor
mov
scas
mov
mov
shlb
shll
ja
ljmp
fsubp
pop
xchg
push
jbe
pop
addr16
and
imul
mov
mov
ds
rcr
fimuls
leave
addr16
mov
fucomip
das
mov
aam
mov
out
fdivs
pop
and
jne
pushf
cmpsb
mov
and
insb
adc
imul
sar
iret
daa
daa
dec
xor
lods
or
add
xchg
jg
push
imul
cmpsl
cmpsb
jne
mov
sbb
mov
add
sub
fwait
cmc
aad
dec
lahf
nop
shrb
mov
cmp
and
push
or
es
scas
dec
jno
popa
jb
push
orb
call
push
test
jg
xor
and
int3
dec
xor
addr16
or
cltd
inc
lret
lcall
jne
jg
mov
pusha
mov
fbld
and
mov
ret
cmovno
and
xchg
fstpl
pusha
push
rcrl
sbb
ljmp
cmp
and
test
aam
bound
inc
sub
mov
popa
imul
sub
ret
gs
leave
test
cld
pminsw
inc
jle
lods
xor
inc
std
mov
dec
cmp
lock
pushf
fadds
popa
xor
in
add
cmpsl
jmp
mov
lcall
push
xor
sbb
adc
mov
mov
mov
mov
push
xchg
orb
push
icebp
popf
cld
in
dec
sub
daa
sub
out
xchg
xlat
js
shll
aaa
dec
lret
xor
or
mov
dec
ret
sbb
xor
xchg
mov
loopne
fsubrp
icebp
aas
dec
and
sub
pop
mov
out
shrb
mov
pop
popa
aam
sbb
and
push
sar
xchg
rcrl
shll
ret
inc
inc
adc
pop
and
andb
inc
jge
mov
idivb
das
sbb
repnz
push
cmpsl
pop
cs
sar
or
clc
idivl
inc
mov
mov
mov
repnz
shll
out
aas
stos
push
rcrb
test
mov
pushf
clc
inc
cmp
movsb
cltd
psrld
mov
and
adc
pop
cmc
roll
mov
cmp
gs
out
cmp
mov
xchg
or
mull
aas
sbbb
lahf
and
jo
xor
ja
movsb
cld
int3
arpl
mov
js
dec
in
ret
fsub
clc
scas
xchg
movsl
stc
in
xor
sub
das
pop
mov
rcrl
ret
test
and
xor
repnz
xor
lods
ljmp
push
fcoms
call
fildll
test
bound
sub
aam
mov
aad
cmpsb
xchg
adc
xor
mov
push
call
rorl
imul
cmp
btc
add
mov
push
inc
mov
sbb
add
clc
rclb
pop
inc
cwtl
inc
pop
cmp
mov
pusha
and
imul
jle
stc
out
jno
mov
out
ficomps
sub
jns
andb
pushf
xor
xorl
arpl
adc
mov
xchg
mov
mov
je
xchg
push
fwait
out
lds
jo
dec
nop
les
and
lret
jae
cld
cmp
push
mov
fstpl
pop
pop
add
push
or
insb
repnz
dec
cmp
hlt
and
and
incl
leave
xchg
out
lods
push
rorl
ja
icebp
test
push
rorb
subb
mov
xchg
add
xor
xlat
lods
hlt
jno
xchg
pop
mov
pusha
notb
cmp
xor
lock
hlt
xor
cmp
inc
cmp
inc
jg
ds
fisttpll
scas
jae
popa
mov
jne
sahf
xor
xor
push
sbb
mov
int
out
jecxz
add
cmp
sbb
xchg
and
and
js
hlt
std
call
xor
lea
inc
ret
pop
cli
push
loop
or
adc
shr
push
add
test
mov
ret
in
inc
push
pop
sub
lods
dec
cltd
dec
dec
jecxz
cmp
dec
inc
popa
sub
xor
out
dec
add
sub
xchg
in
lret
iret
push
push
mov
loope
out
notb
mov
xchg
add
inc
orb
mov
xchg
insl
cmpb
dec
dec
lock
mov
and
mov
out
xor
divl
xchg
dec
jle
ss
in
icebp
mov
sub
in
call
faddl
out
push
mov
xor
xchg
mov
fcompl
mov
dec
movsl
cwtl
fadds
xchg
out
jmp
or
sbb
xchg
shll
scas
popa
fbstp
loope
pop
out
mov
cmc
cld
loop
es
arpl
jecxz
sub
rolb
mov
and
in
push
repz
jb
jo
jae
sbb
jne
adc
cmpsl
xchg
lods
jnp
cs
mov
cmp
pop
test
and
jae
dec
ret
or
jmp
loopne
jp
mov
xorl
add
jne
fcomp
aam
push
cmp
jge
jecxz
pop
sub
nop
scas
sbb
pop
inc
repnz
call
and
push
scas
div
outsb
sub
pop
add
repz
xor
xchg
or
jmp
je
into
and
mov
lcall
sbb
adc
xchg
fisubrs
push
out
mov
test
mov
add
mov
negl
loopne
stos
inc
inc
push
movsb
and
in
aam
repz
pop
or
jmp
mov
stos
repnz
and
inc
jnp
dec
push
aaa
pop
inc
leave
push
std
adc
and
stos
xchg
jno
fs
pop
sbb
pop
mov
or
push
fisubs
lahf
inc
add
pop
notb
sub
dec
dec
cmp
xchg
jle
cli
jne
outsb
and
cmp
push
adcl
cmpsb
xchg
sub
aaa
stc
dec
push
subb
adc
loopne
std
das
xor
xor
in
and
shll
loopne
xor
dec
add
lds
jmp
dec
hlt
js
icebp
xchg
loopne
cmc
out
cmp
adc
dec
in
roll
stos
loop
pop
push
and
es
mov
mov
pop
jnp
ljmp
ret
xchg
movl
jae
rcll
jge
or
addb
addb
daa
jne
imul
xchg
das
lock
les
push
popa
rclb
xchg
stos
inc
lock
fdivr
nop
pop
dec
jmp
mov
push
insl
out
not
pop
add
daa
loope
lods
orl
aaa
sbb
lcall
loope
popf
aad
pop
scas
addr16
sub
fwait
es
push
ljmp
mov
dec
cli
xchg
lret
sbb
neg
adc
repz
push
or
xorb
inc
int
pop
call
inc
repnz
test
pusha
mov
dec
jb
ss
test
bound
add
xlat
out
imul
mov
shr
pushf
dec
dec
insb
fcoms
roll
mov
push
inc
mov
pop
mov
pop
add
xchg
jg
sub
insl
dec
mov
mov
and
cmpxchg
fisttpl
out
jl
mov
and
or
lret
dec
das
jne
fistps
mov
push
xor
or
stos
push
sub
je
inc
stos
sahf
repz
test
test
jmp
insb
xchg
lock
rcrb
xlat
clc
inc
xchg
divl
incl
ficoms
pop
lods
cmpsl
jns
mov
mov
fsubrp
mov
out
enter
int3
inc
sbb
out
in
cmpsb
jl
add
push
xchg
je
test
push
ss
arpl
lahf
inc
pushf
xchg
jle,pt
mull
lcall
jb,pt
in
and
icebp
mov
pop
add
jo
jne
lds
cmp
mov
cs
stos
hlt
dec
pop
inc
mov
cmp
sbb
pop
push
icebp
pop
outsl
inc
std
mov
insb
cmp
testl
lea
addr16
sbb
push
push
xor
add
push
dec
into
mov
mov
pop
push
pop
inc
xor
ljmp
add
dec
xchg
leave
pop
push
mov
pop
adcl
gs
lock
pop
lods
cwtl
frstor
movsl
pop
nop
or
xor
mov
movsl
inc
fisttpll
mov
gs
movb
popa
in
daa
mov
cmp
nop
add
movsl
sbb
rcll
or
jae
repnz
ret
lds
mov
mov
push
pop
jb
in
dec
mov
js
cmc
xor
shrb
lahf
fldenv
sub
dec
and
sbb
pusha
push
cmp
ja
pop
dec
sbb
rolb
loope
inc
addr16
fistpll
sub
sbb
pop
mov
fisubrs
push
ljmp
mov
dec
aam
notb
push
jns
or
sbb
aas
and
lret
aad
add
jl
or
inc
xchg
sarb
test
jo
stc
js
aam
push
sbb
push
stos
lea
sbb
mov
test
xorb
mov
das
xor
dec
lret
or
movsl
fnsave
fs
lds
jl
mov
jecxz
push
fsubl
mov
shll
cmp
mov
ds
cmc
insl
pop
cmp
les
into
bound
in
xchg
lcall
cmc
jno
jmp
mov
leave
mov
add
mov
lock
mov
ret
add
aam
mov
mov
mov
sub
sub
rorb
pop
or
mov
fucompp
rolb
lret
jmp
dec
fcmovu
insl
fldenv
lcall
lods
xchg
shlb
inc
push
mov
or
mov
loopne
ja
sbb
jae
xor
imul
daa
fildl
and
mov
xchg
ss
sub
mov
pop
in
and
addb
pop
jnp
dec
xchg
test
icebp
mov
pop
frstor
push
push
cmp
cmpsl
and
in
nop
fdivr
sahf
jns
div
mov
add
pop
shlb
fdivr
outsb
sub
out
shl
inc
push
push
sbb
jb
scas
js
hlt
fistpll
xor
in
rcll
inc
jmp
xchg
fs
addr16
push
rolb
ret
sbb
addl
shrb
aad
mov
jns
jo
cmpsl
es
jae
push
movsb
cmp
mov
xchg
aas
adc
lock
cs
inc
adc
add
call
pop
jl
mov
leave
loopne
rcl
xchg
push
xchg
fildl
xor
ficoms
add
mul
sub
ficoml
lret
out
push
fwait
ds
loope
xchg
stos
and
cwtl
fnsave
repz
scas
jo
out
mov
aad
es
jno
int
pop
xchg
fsubs
xchg
shrb
cmpb
push
lds
lret
push
or
mov
jbe
popf
sub
insl
add
in
and
hlt
pop
lods
add
loop
sbb
ljmp
insl
dec
mov
pop
cmpsb
stc
fidivl
pop
std
cmp
int
and
frstor
xorb
inc
scas
jl
fistpll
or
and
repz
xor
stc
push
out
das
mov
mov
jp
popa
fdiv
push
push
sub
cltd
mov
movsl
mov
lock
test
movsl
dec
data16
gs
jl
mov
xor
and
imul
push
inc
mov
push
xor
je
in
fwait
xbegin
mov
mov
ljmp
insb
fidivrl
idivb
and
jle
cmp
mov
jmp
inc
jne
ret
push
cmp
mov
dec
sbb
hlt
sub
or
and
jmp
fmul
inc
ja
inc
sub
mov
jl
out
test
cmp
jbe
aad
mov
je
inc
or
in
push
cmp
mov
mov
mov
xor
gs
mov
jb
ss
pushf
inc
pop
loope
cmpsl
scas
sbb
mov
sti
sbb
cmp
push
ds
pop
inc
mov
fnstcw
repnz
int
xor
fnstsw
push
mov
jmp
cmp
inc
pop
ja
loopne
icebp
push
cmp
sbb
xchg
aaa
loop
inc
or
imul
sub
mov
lcall
sbb
mov
push
in
add
mov
pop
in
mov
in
cmp
mov
xor
call
add
sbb
xchg
lcall
mov
xor
test
lock
push
jns
jmp
inc
sbb
xchg
fstl
xchg
push
sbb
ficomps
nop
in
dec
repnz
enter
sbb
fisttpll
mov
dec
insb
add
iret
daa
push
das
inc
sbb
sub
loope
mov
scas
adc
fidivs
data16
out
xchg
repz
mov
lret
adc
ja
gs
mov
xchg
pop
cmpl
inc
fildll
popf
mov
cmc
insb
rorb
icebp
loop
mov
xchg
lock
fwait
gs
les
mov
push
mov
cs
dec
pop
mov
lods
cmp
les
fisttpll
in
fidivs
clc
out
rcr
testb
push
insl
adc
xlat
fcom
in
xchg
jbe
popa
cwtl
popf
mov
xchg
xchg
cmc
or
xchg
into
loopne
ret
js
mov
fcoms
popf
rorl
push
int
mov
mov
add
inc
dec
xchg
ja
lds
andb
push
das
cmp
fs
xchg
sub
das
arpl
adc
je
or
inc
mov
dec
xchg
rclb
mov
pop
fucomip
push
mov
out
jmp
clc
and
push
outsl
jnp
cmpsb
ljmp
imul
cmc
sti
out
int
test
jb
adc
aad
jns
loope
and
dec
mov
push
sbb
dec
pusha
shrl
mov
mov
ret
lods
daa
sbb
xchg
jo
in
pusha
popf
test
add
imul
std
sbb
xor
sarl
repnz
dec
in
aad
lcall
or
inc
inc
sbb
xchg
cmp
xorb
inc
test
rorb
shrl
mov
stos
jge
adc
shr
and
ljmp
scas
in
sbb
ljmp
or
imul
xchg
nop
je
or
cmovb
popf
jmp
jecxz
mov
mov
sub
out
add
sub
outsb
andl
add
movsl
shl
popf
mov
inc
scas
ret
sahf
jb
mov
fbld
movsb
fidivl
js
test
cmp
pop
bnd
inc
into
pop
pop
pusha
xor
push
push
call
xchg
add
in
mov
fucomip
mov
lea
push
sub
clc
add
push
add
test
out
mov
icebp
repnz
mov
cmp
xor
js
mov
fbld
repz
cwtl
mov
pop
mov
pop
rolb
push
sub
clc
aas
inc
jl
xor
jge
pop
inc
rclb
lods
call
jle
push
insb
xchg
outsb
shrl
pop
pop
cmp
dec
arpl
jbe
fnstcw
cwtl
xlat
mov
jne
xchg
and
out
push
jnp
xchg
xchg
in
mov
psadbw
js
add
std
adc
aaa
sub
sbb
xchg
push
or
arpl
mulb
enter
mov
push
xchg
daa
fidivrl
scas
xchg
and
jecxz
add
in
push
lahf
dec
mov
scas
adc
cmp
pushl
sub
call
fcoml
in
fistps
inc
mov
aas
pop
and
inc
fsubrp
jns
cmp
scas
jno
mov
rcrl
add
sbb
jo
mov
repnz
nop
cli
push
push
js
push
rcrl
push
sub
xorb
sub
or
shrd
imul
fldt
addr16
nop
pop
fisubs
mov
je
punpckhbw
pop
in
lret
add
inc
sbbl
pop
inc
jo
lret
xor
cwtl
dec
insb
mov
sti
aam
aas
insl
xchg
or
sti
shr
call
rcll
pushf
shlb
insl
adc
xor
push
push
jge
xor
pop
scas
cmp
adc
pop
xor
xchg
mov
xchg
ret
xor
enter
dec
movsl
lea
push
mov
inc
sub
dec
add
mov
cmp
movsl
mov
std
movsl
mov
sub
addr16
rorb
jns
jecxz
jne
fistps
mov
addr16
push
aaa
adc
adcb
lods
cld
lcall
add
sub
mov
mov
push
mov
xor
popf
shlb
fdivrl
adc
mov
fsqrt
mov
push
mov
into
imull
inc
dec
sbb
in
lcall
jge
dec
inc
cmp
sbb
ds
mov
cmp
mov
out
lahf
adc
out
stc
sbb
adc
push
mov
sti
pop
sbb
dec
sbb
and
jmp
dec
lock
fstps
cmp
sub
dec
movsl
xlat
push
clc
mov
hlt
mov
call
dec
mov
fsubrs
aad
xchg
lea
jmp
lock
push
jmp
call
sub
add
xor
push
sbb
and
and
ret
lock
xor
gs
adc
enter
dec
xchg
rorl
mov
lds
das
lcall
dec
jle
cmp
rcrb
mov
imul
jno
sbb
in
jge
into
pop
pushf
adc
icebp
and
fdivrl
andb
push
sbb
sbb
inc
dec
or
dec
cmp
call
jl
fcompl
loope
cmpsl
jg
sub
into
nop
sbb
mull
addr16
jo
jno
shll
rcrl
jbe
std
jp
insb
icebp
repnz
xchg
sub
movsl
hlt
add
jne
pop
cmp
sbb
out
mov
fmuls
jmp
es
sarl
mov
lea
jae
and
bound
push
cltd
pop
or
dec
scas
jmp
ret
nop
fwait
les
sub
and
arpl
lods
cltd
imul
shrl
jg
add
lea
shll
inc
and
ss
in
lahf
jo
mov
jae
fdivrs
cmp
add
mov
mov
in
or
gs
adcb
inc
loope
or
cld
sar
daa
outsb
xor
and
mov
arpl
xchg
inc
das
jbe
adc
pop
lods
mov
std
imul
rorb
cwtl
enter
rcll
cmpb
js
repnz
das
sub
movb
cmpsb
int3
rclb
add
cmpl
xor
outsb
testb
cld
out
jnp
repz
sbb
pop
jmp
icebp
cmc
dec
outsl
test
push
loopne
jecxz
aad
loope
loopne
ss
push
dec
pusha
push
jbe,pt
scas
sbb
dec
nop
hlt
xchg
add
outsl
sbb
push
sahf
cli
mov
push
outsl
inc
inc
rcl
jnp
lods
sbb
adc
cmp
sbb
repz
dec
rorb
xor
divb
repnz
in
das
orl
xlat
arpl
subl
xchg
aam
xchg
sti
out
addb
cmpb
cmp
repnz
mov
sti
mov
xor
jnp
lahf
iret
test
push
testl
ja
pusha
push
sbb
xchg
aaa
shrb
arpl
fidivrl
rcl
xorb
das
cmc
cmp
ljmp
mov
jb
cwtl
pushf
nop
test
daa
ljmp
int3
pop
fbld
cwtl
xchg
mov
lods
lahf
sbb
lea
xchg
mov
cs
loope
push
sub
test
inc
mov
inc
cmp
jle
cltd
cmp
xchg
xor
xor
ss
jg
pop
add
pop
push
lcall
mov
or
jge
mov
xor
jmp
mov
out
adc
cmp
fldl
dec
aaa
add
jle
icebp
xchg
fucomip
push
cmp
push
ljmp
cmc
lods
in
lds
mov
shll
inc
xchg
repnz
sub
jne
stos
mov
mov
packssdw
lcall
lret
or
bound
jnp
mov
int3
and
xchg
and
shll
scas
jae
loopne
movsb
dec
or
mul
mov
cmp
xchg
hlt
lea
scas
add
lret
dec
xchg
inc
fildll
xchg
inc
scas
or
and
clc
mov
sti
add
fstpt
jge
xchg
out
cltd
daa
js
arpl
enter
notb
sub
push
les
mov
out
aam
lods
hlt
andb
sar
cli
pop
pusha
sti
fldcw
insb
and
aaa
add
ret
add
pop
rcll
push
dec
fstps
inc
mov
sbb
div
push
mov
imul
pop
jmpw
sahf
xchg
loope
stos
or
and
and
popa
lods
rolb
lret
stc
inc
rclb
push
imul
ja
sar
lret
cmp
imul
cmp
sub
imul
xchg
jne
pop
lcall
in
data16
jle
fbld
mov
push
scas
pop
jecxz
mov
sbb
push
mov
ret
dec
xchg
add
xchg
push
xchg
addr16
scas
hlt
out
in
cmp
test
cmp
mov
movsl
pop
push
je
stos
cmpsb
sbb
mov
cmp
xchg
in
out
mov
in
jl
jbe
xchg
call
fsubl
xor
jmp
ds
jle
std
movsb
cmp
cmp
jecxz
in
shll
enter
ds
and
push
jno
jno
and
je
dec
xchg
inc
lea
inc
dec
loope
ds
in
sub
and
mov
xchg
push
jge
mov
mov
xlat
insl
xchg
imul
cltd
mov
sub
loopne
xchg
cmp
ficoms
sbb
xor
mov
ficoml
jnp
add
jle
lds
scas
xchg
cmc
push
call
cwtd
dec
push
xchg
sub
call
lret
fidivrs
mov
mov
push
movsb
mov
sbb
jl
repz
and
mov
arpl
clc
cmp
cmp
insl
shrl
and
int3
psraw
or
or
les
adc
mov
hlt
pop
jmp
scas
sub
dec
dec
cli
in
fisubs
jle
sarl
adc
dec
xlat
repz
mov
lea
mov
jmp
and
enter
in
dec
sti
or
xor
je
mov
insb
push
rep
mov
mov
or
inc
jo
nop
movsl
jo
cs
enter
mov
cmp
xor
stos
sbb
addl
and
add
jbe
arpl
pop
imul
inc
loope
and
adc
test
mov
adc
add
fldenv
stos
and
mov
adcb
testb
cmp
dec
xor
cmpsl
xor
mov
int
call
mov
dec
je
mov
int3
lea
inc
call
mov
jp
pop
lea
jne
cmp
addl
push
cmp
mov
sbb
pop
cwtl
xor
or
int3
scas
nop
jge
xchg
push
sbb
fldenv
cwtl
jg
push
rep
popa
rclb
or
ljmp
arpl
or
rorb
int
xchg
cwtl
in
jne
mov
stos
icebp
or
sbb
mov
mov
and
pusha
loop
adc
push
popw
dec
decb
xlat
cwtl
xchg
cmp
imul
shrb
ljmp
mov
mov
xchg
xlat
cltd
adc
dec
mov
orl
adc
push
rcrl
inc
pop
lock
subb
pop
add
jmp
add
sub
roll
arpl
jae
cmp
test
clc
test
negb
sbb
mov
pop
repnz
mov
jb
jno
fmull
lret
outsl
inc
imul
xor
sbb
jb
test
push
lret
xchg
icebp
test
mov
aas
std
aam
adc
xchg
pop
ljmp
fidivl
pop
xchg
or
jae
push
iret
adcb
sbb
push
add
lea
inc
pop
std
sbb
mov
out
stos
aas
inc
and
repnz
inc
xchg
scas
xor
mov
int3
fsubrl
faddl
or
rcr
push
out
icebp
mov
adc
and
pushf
xor
mov
xchg
nop
fldenv
sbb
jno
aam
dec
cli
mov
stos
or
sub
cmp
sarl
fdivp
xchg
cmp
sub
int
mov
fildl
fs
out
int3
fwait
sub
js
iret
mov
imul
clc
ja
into
push
push
adc
lods
rcl
gs
movsl
insb
or
and
mov
push
daa
jb
in
mov
popl
cmovp
rep
push
lods
cwtl
mov
fcmovnu
popf
in
not
in
hlt
lds
stc
and
gs
lock
loope
fbld
jl
je
sar
pop
mov
xchg
or
mov
popf
or
pushf
pop
insb
mov
pop
jp
sti
test
mov
jno
mov
mov
sub
sub
mov
stos
jmp
xchg
jp
jb
dec
cmpsb
dec
pop
ds
testl
xor
push
push
data16
test
xchg
jnp
nop
out
xchg
inc
leave
aam
fcmovne
jno
adc
xchg
mov
pop
out
adc
lds
orl
xchg
aad
rcrb
push
inc
cmp
push
faddl
xorl
test
mov
pop
mov
cld
dec
in
inc
mov
jecxz
pop
scas
sub
mov
cmp
dec
cmp
cmpsl
jne
inc
or
push
mov
dec
ljmp
adc
mov
sub
cmp
push
pop
js
sbb
mov
mov
jge
jecxz
pop
cmp
jge
out
ficoms
iret
cli
xor
cwtl
sub
fwait
mov
inc
fdiv
xchg
cmp
sarb
adc
mov
hlt
add
jecxz
sbb
jge
data16
push
jecxz
jbe
decb
in
outsl
xchg
xlat
call
das
mov
inc
sub
push
cld
insl
or
sub
dec
cmpsl
mov
push
inc
and
fwait
push
mov
movsl
leave
inc
jbe
mov
outsl
xchg
sub
repnz
movsl
testl
xchg
mov
fisubrl
cltd
mov
lahf
mov
sbb
xlat
movsb
insl
mov
lahf
push
in
sub
inc
add
out
jmp
in
inc
push
cltd
adc
mov
popf
inc
fdivs
out
je
lods
xchg
inc
sahf
sbb
es
mov
mov
popa
dec
and
mov
dec
in
or
pop
or
dec
jb
lock
stc
dec
imul
sub
push
and
int
cmp
adc
insl
int3
jnp
cmp
mov
push
push
or
loopne
xchg
mov
xchg
fcomps
push
sub
lret
push
ret
roll
sbb
pusha
xchg
ret
stos
icebp
pop
roll
mov
cmc
pop
inc
mov
mov
lds
dec
cwtl
cmp
icebp
fcompl
mov
jmp
lods
mov
pop
inc
or
dec
xor
sbb
mov
stos
test
cwtl
and
cmp
jle
pusha
mov
in
int
push
inc
ja
js
aam
std
ret
inc
loop
stos
test
inc
loopne
jns
stc
outsb
pop
jge
mov
push
fs
leave
ffreep
pop
push
inc
imul
push
cld
cmp
in
add
jecxz
and
call
jl
push
mov
outsl
pop
dec
setb
mov
push
movsl
sub
inc
sbb
les
mov
iret
mov
sbb
sub
push
or
cwtl
xchg
xor
push
mov
cmp
cmp
adcb
push
dec
xlat
and
loop
frstor
add
addr16
pop
imul
or
fcmovu
je
mov
idivl
sarb
mov
fsts
jbe
in
xchg
stc
inc
ret
pop
repz
inc
mov
insl
inc
sub
xchg
shl
pushf
movsb
rcrb
xchg
push
lods
fldenv
jp
sbb
into
mov
cmp
data16
insl
je
xchg
sbbb
sub
jge
fcomps
pop
mov
xchg
pop
pop
pusha
and
sub
movsb
ljmp
jno
cmp
or
and
jg
mov
insl
jo
jne
mov
dec
jg
add
pop
jae
ja,pt
sbb
push
cld
je
out
xchg
xchg
push
enter
dec
mov
lahf
fiadds
mov
pop
sahf
push
sarb
rclb
movsl
shll
leave
enter
jge
data16
push
inc
rcll
pop
mov
addr16
adc
roll
inc
jg
mov
insl
sub
mov
inc
pushf
popf
bound
xchg
rcl
add
jo
sub
mov
popf
inc
hlt
sbb
shll
cmp
sub
sub
inc
lods
lods
xchg
iret
loopne
inc
xor
insl
clc
or
dec
iret
ds
in
testl
iret
adc
cmp
push
mov
sbb
shrl
icebp
inc
clc
sahf
mov
sub
add
pop
fidivs
cwtl
ss
int
cli
dec
into
out
sti
in
popf
sub
in
and
ja
push
out
int
sub
sub
adc
movsl
loope
xchg
or
xchg
push
lcall
jecxz
aas
inc
mov
loop
sti
lcall
inc
xor
psubq
adc
push
sbb
fcoms
ret
mov
sub
out
outsl
fxch
lea
sub
mov
inc
and
sub
repz
ja
cmp
adc
inc
sbb
mov
out
adc
mov
push
cmc
ret
out
mov
inc
clc
pop
lret
loop
fsubrl
sbb
xchg
out
add
and
push
jp
add
sbb
fisubrs
fidivs
push
pushf
cli
inc
push
imul
pusha
inc
shll
sbb
adc
mov
xor
loope
inc
negb
add
pop
leave
aaa
sbb
out
rcll
or
mov
push
xor
dec
je
push
hlt
sahf
pop
and
cltd
aas
jle
jl
insl
aaa
jg
ret
shll
and
addr16
imul
push
mov
mov
nop
cmpsb
or
jbe
test
icebp
jnp
mov
jno
pop
mov
std
add
push
mov
repnz
add
fwait
inc
add
add
repz
add
mov
pushf
cs
pop
mov
jns
dec
pop
js
fbld
sti
or
fisttpl
popa
sbb
cmc
shll
mov
jae
lcall
mov
sbb
and
sub
pusha
je
and
fwait
cmpsb
out
mov
mov
add
popa
dec
xor
pop
pop
stos
pop
bswap
cmp
xchg
add
xchg
jge
mov
mov
adc
call
cmpsl
cmp
std
and
ljmp
jns
mov
jmp
sub
add
arpl
aas
lds
fsubrl
add
fsubs
dec
dec
sub
dec
push
mov
xor
arpl
test
push
out
ja
xchg
mov
and
mov
push
xor
sbb
cmp
rcrb
jno
aad
jle
mov
xchg
dec
lock
lods
inc
pop
movsl
rcrb
repnz
repz
jmp
mov
jmp
push
mov
stos
jl
xchg
mov
cmpb
cltd
inc
outsb
fdivrp
popf
mov
insb
xchg
push
pop
lds
push
xchg
inc
inc
pop
dec
out
je
addr16
lcall
push
out
je
inc
scas
or
in
xor
jne
pop
das
notl
repnz
fists
cli
add
lods
nop
repnz
mov
ljmp
xchg
mov
add
mov
push
fdivrl
xchg
xchg
cmp
sahf
pushf
jo
dec
movsl
jle
aad
cltd
pop
out
je
and
cmp
push
pop
sbb
mov
xchg
pop
leave
push
rcl
out
bound
xor
jle
xor
inc
dec
jp
adc
out
cli
push
or
popf
mov
fs
mov
les
cld
pusha
dec
and
in
iret
mov
xor
dec
dec
shrl
out
sarb
mov
test
mov
pop
jb
add
shrl
mov
and
pusha
jle
lock
adc
mov
push
add
or
outsl
inc
add
fcmovne
jg
mov
mov
and
out
sub
mov
into
icebp
xor
add
outsb
pop
scas
adc
jg
cs
push
movsl
add
orl
xor
jns
inc
sub
mov
out
ret
push
jb
cmpsb
jb
adcl
sarb
sti
jo
xlat
ret
cmc
jmp
mov
add
repnz
mov
stos
mov
stos
or
mov
fstps
lahf
jmp
jmp
push
jl
insl
cmp
loope
push
pop
int
cli
call
pop
movsl
call
pushf
ljmp
and
ds
stos
pop
add
push
ss
icebp
sbb
in
xchg
lret
loope
or
pop
stc
dec
test
xor
push
or
outsl
or
dec
jo
pop
pop
scas
xor
enter
aas
shl
cs
arpl
adc
nop
fstpt
in
das
movsl
and
dec
addl
jmp
mov
mov
mov
adc
inc
pop
dec
sub
inc
cmp
and
adc
rcll
flds
and
mov
pop
mov
cmc
mov
repnz
push
loope
adc
dec
enter
int3
jg
push
pop
aas
fidivrl
fmull
outsb
add
out
add
loop
mov
sbb
cld
fcomps
ljmp
sbb
or
mov
fcmovb
cmc
pop
sbb
dec
data16
pop
loope
subb
out
fs
testb
cmp
ror
int3
push
cmp
insl
jno
cltd
test
addr16
jge
add
pop
sbb
mov
push
outsb
jle
icebp
xor
fptan
cmpl
jne
not
or
sub
fstpl
cli
pop
mov
mov
sbb
jbe
ljmp
jb
mov
cmp
popf
cmp
cmpsb
cmp
sbb
mov
cld
daa
fisubrl
inc
adc
xor
fstpt
fwait
sbb
test
je
mov
scas
dec
inc
in
divl
mov
lea
in
out
scas
aaa
clc
aaa
test
adc
xchg
fsubr
and
pop
dec
push
pushf
popf
cmp
ss
int3
cmp
out
mov
push
jl
das
jae
mov
mov
mov
ds
mov
pop
dec
or
pop
push
jo
push
mov
nop
add
fcmovnu
mov
xchg
ret
clc
ljmp
or
mov
lret
stc
nop
test
incb
movsl
fs
and
sar
jmp
icebp
bound
sbb
jnp
bound
lcall
pop
push
out
mov
scas
sub
stos
sub
inc
pop
pop
mov
out
mov
sub
outsb
out
jae
jl
std
sbb
cmp
inc
inc
mov
jbe
cmp
test
xchg
cld
xor
mov
xor
loope
mov
lea
popf
sub
in
ds
pusha
movsb
add
mov
mov
aaa
lret
ds
mov
adc
xchg
pop
jl
cwtl
ficompl
dec
mov
xchg
rorb
xchg
pop
sbb
lea
sub
inc
sub
jns
add
mov
dec
aas
aaa
arpl
pop
fwait
xchg
mov
fcmovne
xor
jae
out
mov
xchg
pop
rol
lret
call
stc
repnz
fisubrl
insb
sub
pushf
out
cmpsl
jne
sub
repz
popf
pop
mov
mov
push
lret
mov
retw
and
push
xchg
loop
aam
sahf
fs
and
cmp
adc
or
lds
fsts
mov
cwtl
enter
inc
inc
push
inc
xchg
ret
pop
iret
xor
lods
lret
xor
jns
loope
jno
cli
cwtl
fdivrs
cmpsb
adcb
xor
lds
in
and
jno
rorl
ret
call
jecxz
mov
repz
mov
sub
fwait
sahf
mov
sahf
xchg
push
cmpsb
xor
inc
test
hlt
lds
enter
mov
mov
jl
mov
pop
leave
imul
push
out
inc
dec
or
sub
jl
pop
cmp
shrb
mov
dec
testb
mov
lds
push
cltd
sti
adc
lods
cmp
xlat
sub
in
movsl
jns
aam
js
popa
rolb
stos
stos
xor
das
lahf
pop
test
sbb
lods
dec
int3
sahf
jp
jns
cli
jbe
cmp
pop
lahf
in
sub
pop
push
push
int3
imul
lock
jae
adcl
mov
sahf
iret
adc
jb
dec
mov
sub
outsl
addr16
test
aaa
ljmp
mov
xor
or
cs
out
ret
ret
inc
outsb
mov
push
lock
jne
rcrb
mov
fldenv
sbb
jl
rorb
mov
sahf
sub
popa
mov
imul
push
push
inc
sahf
loopne
int
in
pusha
ljmp
mov
mov
ds
ja
or
dec
mov
push
in
lahf
mov
aas
sbb
sub
fmuls
jnp
jnp
pusha
out
jnp
jmp
dec
mov
mov
rol
jmp
in
inc
data16
mov
push
xchg
push
jmp
jl
add
xchg
sbb
fs
pop
in
xchg
mov
insb
cmpsb
pop
mov
or
test
leave
addr16
hlt
lahf
addl
vcomiss
cwtl
adc
icebp
mov
test
inc
xor
sbb
jp
ds
mov
xchg
xor
int3
pushf
je
sti
fs
mov
imull
push
or
mov
test
mov
push
fdivs
je
dec
test
stos
sbb
jo
aas
adc
pop
iret
adc
push
mov
daa
sbb
pop
repz
sub
mov
out
xchg
cmc
test
stc
xchg
fistl
cvtps2pi
sub
inc
dec
pop
mov
in
sub
xchg
dec
mov
jge
movsb
lea
pusha
ss
ret
fists
lock
mov
es
push
or
pusha
xchg
div
test
ja
loopne
aam
cld
movsb
mov
out
xor
pop
xlat
jbe
push
addb
inc
or
dec
dec
dec
push
push
push
cmp
sbb
mov
insb
orl
xchg
xor
fsubs
cmp
push
mov
and
xor
je
cmp
rcrb
xor
inc
test
sti
mov
jp
pop
in
lahf
adc
add
dec
mov
sub
shll
out
popa
mov
xchg
xchg
jecxz
jmp
dec
push
sti
mov
fsubrp
add
hlt
cmc
lret
mov
push
mov
adc
push
cs
sbb
mov
mov
stos
idivl
pushf
push
jge
in
add
sbb
mov
imul
sub
cld
in
mov
mov
loopne
sahf
or
aam
inc
pop
in
mov
mov
xchg
or
repnz
stos
pop
mov
loopne
adc
jge
out
or
add
jge
loop
and
shrl
sbb
outsb
bound
jne
nop
loop
outsl
ficoms
stc
imulb
push
push
out
mov
into
xchg
out
stc
or
pop
test
leave
out
ds
xchg
jge
pop
mov
xor
pop
sub
sbbb
sahf
add
mov
clc
dec
add
lea
dec
fistps
push
jno
ss
sbb
jb
aas
lods
adc
sbb
fidivrl
jle
cs
jge
pusha
fstpt
int
popf
es
aad
lcall
into
add
jne
push
xlat
adc
loope
gs
repz
sub
lods
test
xchg
cmp
dec
push
xchg
jmp
ja
aad
xor
fdivrs
dec
xchg
push
pop
fiadds
push
test
add
rorb
stos
cmp
loope
fwait
cmp
sub
and
les
and
cld
test
dec
jns
popf
push
pop
and
jo
das
rorb
xchg
cltd
mov
orl
ja
loopne
push
sub
cmpsb
jns
push
mov
lahf
mov
dec
stc
test
sbb
jl
mov
pop
imul
sub
mov
call
scas
push
sbb
ljmp
ljmp
and
xor
add
loop
in
sbb
aas
pop
cmp
fisubrs
test
cwtl
dec
dec
cmp
js
dec
ret
leave
mov
jge
inc
push
xlat
pop
and
or
push
mov
mov
repz
jno
sarb
daa
or
add
mov
sub
stc
movsl
jae
mov
sbb
pop
fs
mov
fsts
and
jbe
pop
pop
loopne
rorl
push
inc
std
xchg
ljmp
nop
xchg
fs
pop
testb
and
outsb
cmpsl
popa
adc
fisubl
mov
push
xchg
int3
gs
jp
lcall
mov
mov
mov
lret
jp
popa
adc
imul
mov
rcl
xchg
jae,pn
add
scas
pop
es
cmp
das
jecxz
jne
pop
sub
gs
push
adc
xor
ret
sub
fimull
mov
test
and
mov
cmpsb
jge
test
push
addr16
pop
adc
pmulhw
add
shr
mov
insb
add
or
int
mov
mov
andb
mov
add
inc
push
mov
ds
repz
and
insl
mov
sarb
and
in
xchg
in
test
lret
jnp
add
out
jb
sti
mov
cmpsb
pop
dec
movsl
and
sub
xor
bound
shrl
loopne
stos
ja
adc
insb
loope
jle
fldcw
mov
xchg
adc
pusha
cwtl
mov
scas
int
adc
ss
movzbl
outsb
lods
cmc
jmp
jp
adc
cltd
ret
adc
sub
push
sub
push
sub
mov
dec
sub
add
lds
mov
xchg
insl
sahf
inc
xchg
cmc
mov
call
scas
mov
fwait
jl
fcoml
xchg
mov
mov
cmp
test
xchg
sahf
inc
sub
ljmp
ret
int
outsb
ljmp
lret
addr16
insl
js
popf
jl
test
dec
int
mov
add
sahf
xor
imul
mov
dec
test
fdivl
out
mov
add
lcall
xchg
adc
adc
jnp
bound
mov
ret
pop
out
mov
pushf
pop
xchg
call
call
pop
mov
test
add
hlt
dec
out
push
add
lea
das
mov
inc
mov
aad
and
cwtl
push
sub
push
mov
int3
cmpb
push
mov
repnz
popf
sbb
mov
push
push
lahf
inc
jle
repz
jp
jne
sub
push
test
inc
in
mov
mov
sbb
loop
test
cltd
and
sarl
inc
xchg
add
cmpsl
sbb
lea
sbb
lret
add
push
in
aam
lods
cmp
pop
outsb
sbb
sub
inc
subl
dec
fidivl
ret
or
push
pop
or
cmp
add
int3
outsb
std
pop
pop
sbb
pop
mov
mov
mov
out
popf
dec
mov
push
cltd
addr16
leave
outsl
mov
mov
dec
out
sub
xchg
push
cmp
pop
into
in
adc
leave
mov
testl
mov
mov
rcrb
add
ficompl
sub
push
jmp
adc
sub
shl
mov
inc
je
pop
push
in
movsb
mov
jge
pop
movsl
ficoms
inc
xor
push
lock
sar
je
add
aam
jbe
mov
and
adc
jns
inc
fs
xchg
mov
in
cld
fisttpl
fdivp
and
out
mov
stc
lret
nop
test
or
icebp
movsl
xor
shlb
mov
push
sub
mov
lret
xor
fldt
add
insb
mov
inc
in
mov
iret
jle
or
outsl
pop
adc
hlt
bound
inc
or
dec
stos
jo
sbb
in
push
cmp
adc
out
jle
push
sub
mov
mov
aad
add
push
imul
ljmp
jbe
addr16
jle
pop
cmp
cmp
jno
sbb
add
cmp
cmpl
and
inc
fmuls
stc
jns
int3
jecxz
xchg
jge
mov
aaa
add
nop
mov
ds
jb
lods
shll
mov
lcall
and
sahf
sub
pop
or
adc
mov
and
sub
add
lods
in
jne
in
xor
cli
pop
in
fimull
mov
insl
dec
inc
in
xor
cli
aam
mov
dec
jae
dec
push
in
inc
js
daa
sbb
pop
daa
lcall
cmpsl
ret
inc
cmpsb
xchg
dec
inc
jecxz
loopne
lds
jae
sbb
lods
sub
mov
ret
addl
and
and
mov
fsubl
xor
add
fistpll
push
and
int3
xchg
rcll
mov
adc
aas
pop
adc
sbb
cmp
cmp
daa
cmp
inc
clc
mov
andps
xchg
leave
nop
jg
cwtl
js
jo
lsl
or
mov
jns
and
sub
ss
mov
fnstsw
push
pop
xlat
ja
xchg
jmp
push
cmpsl
popf
push
sub
into
push
pop
out
jge
stc
and
jnp
call
sub
sbb
adc
mov
xor
pop
movsl
push
push
sbb
aas
out
ficoms
out
xchg
jle
js
xor
xchg
out
adc
jecxz
int3
imul
mov
shrb
pop
mov
cwtl
lcall
rorb
jb
adc
repz
push
aad
inc
or
inc
xchg
jg
aas
stos
jmp
cli
ljmp
imul
out
mov
adc
lahf
pusha
das
push
mov
pop
hlt
dec
fnstcw
inc
cs
jp
lahf
sbb
shrl
sub
jge
ljmp
pop
adc
adc
mov
test
ja
sbbl
push
jae
adc
sub
rcll
stos
pop
lods
repz
mov
stos
xor
sbb
fisubs
mov
cmpsb
mov
out
hlt
js
mov
push
or
sub
mov
cli
shlb
cs
scas
xor
cmp
and
push
lcall
jbe
mov
fwait
pop
xor
rcll
mov
jmp
call
push
lret
lret
enter
repnz
pop
fimuls
inc
and
mov
add
push
mov
cmp
insb
setae
cli
orb
and
sub
popa
push
xchg
notl
repnz
imul
pop
jnp
jp
sub
lret
sbb
fnstcw
aam
repz
in
jle
sbb
push
out
mov
pop
push
xchg
adc
ljmp
xchg
dec
fcmove
in
xchg
icebp
add
cmp
subb
test
pop
je
jecxz
sbb
je
ja
out
das
mov
cmp
lahf
addb
sbb
push
fs
out
out
push
mov
sbb
adc
jnp
mov
dec
dec
and
xor
pop
and
test
loop
xchg
jnp
je
addr16
xchg
stos
mov
in
enter
jle
push
std
sbb
mov
fsubs
loopne
and
push
cwtl
add
sahf
mov
pop
out
xchg
inc
fcomps
fdivrs
popf
fistps
mov
add
nop
movsb
mov
jno
imul
out
push
arpl
mov
and
cwtl
mov
lahf
into
cmc
jns
pop
cmp
negl
divb
pop
test
call
arpl
iret
jb
xchg
add
shll
mov
out
andb
orb
jle
fists
aad
popa
fiaddl
out
jp
fsubl
nop
pop
out
inc
cltd
xor
stc
aam
mov
push
xor
xchg
lret
xchg
jne
lds
insb
test
adc
pop
push
in
adc
xchg
call
and
add
push
pop
js
xchg
xchg
push
mov
dec
jecxz
gs
push
push
jne
sbbb
scas
das
data16
pop
cli
and
jnp
sub
jecxz
mov
idivl
xchg
inc
pop
mov
out
mov
pop
aaa
mov
dec
lret
push
pop
mov
movsl
mov
mul
sbb
sub
ss
subl
ja
sub
aam
loope
fisubl
inc
mov
cltd
dec
mov
lea
push
rcrb
ret
imul
pop
push
jge
mov
pop
mov
imul
test
ss
icebp
xor
out
loop
adc
push
xchg
mov
cmp
pop
decl
push
int
pop
daa
das
das
push
div
clc
mov
pop
dec
gs
faddp
push
jo
lret
pop
leave
cmpsl
jge
xlat
adc
pop
sub
leave
xchg
ja
int
pop
adc
pop
adc
mov
push
outsl
mov
xchg
xchg
call
xor
shrl
ljmp
lods
stc
cmp
add
lds
lea
xchg
inc
xchg
out
jl
pop
sub
cwtl
jg
dec
and
hlt
lret
dec
lods
jmp
and
inc
loope
cwtl
stos
mov
xor
inc
mov
and
and
push
sub
mov
mov
arpl
cmpsl
jnp
or
in
jnp
out
push
mov
in
cmp
push
cmp
jmp
add
jmp
sbb
scas
lret
lret
lret
jnp
sub
adc
pop
mov
mov
pop
adc
pop
int
in
mov
jno
jle
and
insl
lret
scas
pop
push
push
mov
mov
xchg
shlb
fstl
mov
pop
fwait
movlps
lahf
push
push
and
dec
dec
ret
dec
sahf
inc
mov
fcompl
jno
pop
mov
js
xchg
sub
inc
ja
bound
mov
or
ljmp
lds
sbb
push
mov
mov
push
rorb
lods
lret
fdivl
call
ljmp
les
add
daa
lahf
les
sbb
push
sahf
jne
jae
loope
ret
outsb
sbb
adc
cmc
test
movsb
insb
cmp
and
clc
xor
das
jp
inc
stos
jp
mov
lds
sub
adc
cmpsl
into
je
inc
pop
es
pop
jle
xchg
add
pop
testl
and
ds
test
in
adc
push
lods
outsl
push
cmp
xorl
movsl
inc
sahf
xchg
jns
in
pop
rcll
scas
add
icebp
icebp
jae
xchg
add
fsubrs
addr16
test
ja
mov
repz
hlt
xor
or
dec
inc
leave
xchg
arpl
mov
adc
scas
dec
adc
cmp
lret
dec
sub
cs
push
dec
mov
sbbl
pop
insl
imull
sub
jne
cld
pop
push
adc
pop
and
pop
lods
gs
pop
xchg
mov
repnz
pop
add
push
xor
add
in
inc
fucom
pop
inc
pusha
lds
pop
mov
cmp
cmp
xlat
ja
ret
or
mov
and
and
dec
xor
cmp
xchg
daa
xor
es
jb
nop
leave
fbstp
xor
mov
push
dec
incb
push
pop
sbb
leave
mov
pop
xchg
mov
test
shlb
cmp
aas
int3
jl
imul
mov
push
rorl
addr16
rcrb
enter
lods
sub
or
jp
mov
rorl
lahf
inc
stc
adc
test
and
or
sub
lods
bound
sbb
movsb
pushf
test
pusha
clc
lods
fwait
inc
test
adc
inc
jge
test
pop
push
mov
mov
inc
mov
ret
bound
stos
jb
iret
mov
movsb
roll
jecxz
sub
and
insb
pop
shl
lods
sub
lcall
lcall
arpl
mov
mov
icebp
jl
inc
sti
mov
or
jnp
dec
xor
lods
shrb
dec
jmp
lods
jg
and
shrl
sub
js
int3
ret
add
mov
lock
js
mov
and
xor
cmp
andl
xchg
sbb
mov
xchg
lcall
push
jbe
adc
xchg
mov
js
ljmp
int
push
cli
dec
xchg
pusha
mov
mov
stos
pop
push
scas
loopne
adc
sub
and
cmpsb
cmp
iret
inc
sbb
call
push
inc
sub
les
sbb
push
dec
shr
sarb
sub
inc
jge
aad
call
cmc
roll
aad
xchg
add
xchg
or
lods
sarl
pop
xchg
jb
lds
pop
pop
out
lea
or
jne
dec
andl
mov
xchg
or
idivl
push
xor
inc
pop
in
sub
add
sub
fcmovbe
fcmovnbe
cmpsb
icebp
hlt
mov
mov
sahf
dec
jmp
popa
adc
push
dec
loopne
pusha
or
and
stc
ret
and
sbb
lret
cmpsb
inc
sub
das
into
mov
mov
into
xlat
aaa
loope
and
pop
lret
es
push
add
jnp
push
adc
pop
mulb
and
adc
mov
hlt
imul
dec
pop
enter
mov
adc
sti
sbb
mov
and
in
andb
aam
mov
fwait
popa
pop
lcall
leave
adc
scas
adc
mov
push
push
jbe
outsl
xlat
pop
adc
xor
push
mov
outsl
movsb
sbb
fwait
or
ljmp
shlb
pop
aaa
mov
aas
xchg
cmpb
push
adc
lds
xchg
push
nop
mov
cmp
mov
je
cli
and
mov
sbb
addb
les
mov
sub
loope
out
rolb
push
cmp
insb
mov
js
mov
xchg
sub
cmp
sub
mov
sbb
inc
ss
mov
mov
mov
movsl
das
ficompl
in
je
adc
cmp
pop
call
punpcklbw
xor
lea
ret
xchg
cmpsb
cld
jg
testb
and
or
in
gs
pop
popa
addr16
jmp
mov
xchg
cmp
addr16
adc
jae
pop
sub
pushf
imul
sub
jp
cltd
lahf
fistl
push
adc
ret
pop
xor
aam
daa
ljmp
lahf
scas
sbb
loope
mov
jle
orb
das
jns
sub
or
fidivrl
fimull
mov
dec
testb
test
mov
mov
jmp
inc
xor
std
outsb
xor
push
sbb
push
sub
or
mov
es
and
setg
div
subl
xchg
dec
mov
ss
icebp
insl
fmull
out
out
xchg
mov
mov
lock
mov
or
lea
cwtl
push
pop
in
jl
push
dec
xchg
mov
jae
inc
push
xchg
pop
cmp
sub
faddl
arpl
xor
call
pop
mov
call
xor
fisttps
mov
mov
and
push
insb
cmp
arpl
mov
inc
dec
addl
sarb
out
add
mov
jecxz
pusha
inc
or
jmp
loopne
xchg
add
call
frstor
or
jp
xor
xor
xchg
pop
sahf
cltd
lods
into
sahf
pop
push
cmpsb
jecxz
ljmp
or
add
push
movsl
in
xchg
sub
mov
sbb
xor
test
cld
fnstsw
mov
outsl
mov
mov
mov
cmpsb
nop
mov
enter
loope
mov
sbb
int3
js
mov
and
mov
mov
adc
cs
lea
cmpsl
add
nop
outsb
ret
hlt
dec
mov
add
fstpl
add
ret
sti
outsb
ret
clc
jno
pop
mov
pop
xchg
pop
scas
hlt
ds
adc
cmp
push
inc
nop
add
sahf
jecxz
aas
cwtl
xlat
test
pusha
cmp
inc
sti
enter
adc
mov
xchg
std
popa
inc
add
lods
test
repz
push
pop
xorl
pop
fwait
jle
pop
mov
inc
mov
push
cmp
jg
cltd
adc
sub
jo
js
int3
ret
sub
in
and
jnp
es
add
call
bound
and
imul
ss
or
xor
lret
xor
imul
xchg
cmpsl
lahf
cmp
jg
push
shrb
clc
cmpsb
add
sbb
add
xor
pop
call
jne
sahf
mov
and
aam
in
dec
lds
xchg
shl
or
into
push
dec
jmp
lret
insl
test
mov
dec
dec
jae
xor
mov
jnp
shlb
out
movsb
scas
mov
cmp
sub
mov
addr16
ret
and
rcll
sbb
ja
mov
cmc
cmp
aam
test
repz
pop
and
sbb
jb
adc
mov
mov
insb
add
pop
movsl
cmp
sbb
je
int
int
jge
add
jne
xor
into
mov
mov
cmp
push
xor
mov
push
pop
shll
dec
es
jno
sbb
push
in
shll
dec
ret
sub
frndint
stos
addr16
sbb
xchg
aas
int3
pop
cmpsl
pushf
cli
mov
push
adc
mov
cltd
dec
push
pop
leave
push
jbe
popa
inc
mov
mov
mov
mov
das
shll
add
clc
mov
push
and
subl
test
mov
out
xchg
pushf
jns
mov
fisubrl
xor
adc
pop
pop
push
or
popa
fadds
in
jmp
scas
mov
cmp
sbb
insl
add
sub
das
sub
scas
pop
xor
push
ret
xchg
fcompl
sub
push
arpl
mov
xor
mov
dec
sbb
jecxz
xor
sub
cmp
insb
iret
pop
push
add
btr
adc
jbe
test
into
out
xlat
cmp
dec
pop
ret
mov
push
data16
sbb
xor
jecxz
push
sbb
std
and
test
das
out
stc
cltd
sahf
pop
adc
sub
push
sub
and
testb
add
ret
and
mov
and
mov
loope
out
and
arpl
mov
outsb
mov
mov
lds
fs
adc
fstl
pop
cwtl
dec
fs
mov
sub
and
push
or
xchg
test
cmc
mov
xchg
test
or
mov
lret
jns
push
mov
sbb
bound
aaa
fcomi
mov
into
inc
dec
jmp
push
pusha
inc
pop
jp
rcll
mov
adc
inc
mov
orl
out
jp
dec
dec
xchg
arpl
out
arpl
mov
inc
test
ljmp
rorb
adc
daa
cli
cmpsb
xlat
daa
cwtl
frstor
int
mov
or
enter
orl
push
jno
icebp
cmp
dec
fmull
lret
inc
cmp
push
inc
xor
das
jo
push
sub
cmpsb
dec
aas
or
adc
cld
lds
mov
dec
jmp
lret
js
adc
jno
jno
popa
add
pop
inc
fistpl
lahf
xchg
jle
bound
out
ret
mov
test
mov
lds
jno
ret
inc
dec
ret
dec
testb
inc
fsts
sub
hlt
push
xchg
or
stc
adc
out
gs
mov
cld
mov
les
clc
mov
xlat
inc
pop
inc
leave
mov
mov
ss
jb
add
push
or
scas
mov
push
cmc
fdivs
push
adc
sub
sbb
repnz
push
cmc
test
lods
mov
inc
push
add
orl
int3
je
test
ss
lret
pop
mov
test
rcr
int3
and
cmpsl
lea
stos
adc
jmp
jbe
pop
imul
xlat
pop
jle
inc
fsubl
stos
inc
and
pop
sub
dec
rclb
cmpsl
jb
loope
cs
cmp
mov
sbb
add
sub
sbb
mov
push
int
jb
or
jae
push
sbb
push
jno
lods
ret
xchg
push
test
and
jl
jmp
add
loop
out
insl
test
insl
orl
mov
aaa
xchg
pop
or
hlt
sahf
dec
rcl
fsubrl
dec
dec
roll
sahf
pusha
pushf
inc
mov
mov
pop
mov
pop
adc
das
mov
adc
arpl
push
add
loope
dec
and
inc
in
sbb
stc
mov
repnz
aaa
pop
jle
filds
sbbb
das
sbb
call
test
jns
mov
mov
jae
cwtl
testb
xor
and
mov
xchg
hlt
inc
out
icebp
arpl
jg
pusha
dec
xor
insb
mov
scas
int
and
dec
adc
or
sub
cmp
sbb
mov
aam
sbb
xchg
ds
lret
lcall
jno
gs
mov
inc
fwait
sbb
dec
lahf
cld
xchg
inc
xchg
xor
pop
jns
xchg
iret
cmp
mov
xor
sbb
fwait
test
xchg
adc
mull
std
pop
in
push
dec
popw
inc
fsubrl
repz
cld
jno
or
incl
sbb
out
pop
pop
sub
dec
jnp
jbe
inc
fsubrl
dec
into
inc
stos
in
xor
inc
mov
test
adc
pop
repz
ret
and
xor
lcall
push
nop
scas
call
fcompl
sub
jo
xchg
out
icebp
or
fwait
xor
xchg
dec
arpl
pop
sbb
mulb
inc
jp
pop
jnp
dec
testl
jb
lret
mov
int
in
dec
sub
cmp
gs
flds
jp
push
ror
gs
adcb
test
xor
das
pop
hlt
mov
out
in
jns
pop
sbb
in
sub
mov
mov
es
lcall
xchg
cltd
mov
xchg
push
rcl
cs
or
xor
inc
jmp
cmp
iret
std
sbb
and
mov
mov
data16
outsb
mov
test
ljmp
jge
int3
sub
cmc
in
mov
add
std
adc
dec
fdivrs
sub
dec
cmp
fbstp
ffree
jg
icebp
sub
and
aam
test
popf
movsb
lds
scas
fadds
or
xor
and
push
outsl
sti
or
push
mov
movsb
mov
inc
iret
popf
push
xchg
imul
rcr
aaa
add
ffree
fwait
mov
mov
testb
push
or
rorb
daa
xor
mov
mov
dec
data16
imul
aad
dec
fistps
fildl
jmp
fadds
sbb
mov
bound
daa
daa
data16
sti
cmp
test
xchg
ja
xor
icebp
sub
popf
popa
pop
dec
add
popf
div
pop
ljmp
dec
pop
andl
or
cwtl
test
sbbl
jns
scas
sub
xchg
movsb
repz
movsb
xlat
rorl
cmp
bound
inc
aas
or
jle
in
push
ret
sar
pop
pushl
sti
into
and
inc
sti
push
int3
call
nop
and
mov
mov
xor
data16
xor
nop
cmp
nop
daa
inc
add
mov
push
popf
scas
add
aas
lret
sub
mov
sbb
hlt
xor
sahf
mov
pop
es
icebp
jns
mov
adc
jnp
in
into
ljmp
pop
sbbl
pop
in
lods
stos
xor
sbb
fisttps
mov
sbb
mov
push
jg
daa
add
jns
out
inc
ret
outsb
and
jnp
es
push
cmc
adc
or
jle
sub
xor
sbb
push
and
dec
cmpsb
test
mov
sbb
insl
sti
in
inc
fisttpll
add
sbb
fdivs
xor
dec
mov
jp
sub
or
mov
das
push
fmul
inc
adc
dec
out
subb
in
adcb
jnp
leave
inc
xchg
clc
pop
sub
aas
sbb
add
lahf
jle
and
mov
loopne
out
mov
xchg
lahf
add
loopne
push
mov
cli
stos
movsb
cmc
mov
sti
adc
shr
xchg
or
ds
insl
mov
jge
addr16
in
mov
mov
fdiv
out
faddl
rcl
fnstsw
push
scas
dec
sti
sub
lods
imul
mov
push
icebp
hlt
imul
js
mov
ljmp
inc
pop
mov
loope
loope
xchg
loop
jne
into
push
fwait
icebp
xlat
pushl
rclb
and
dec
jnp
andb
hlt
pop
push
jbe
in
xor
push
dec
mov
lcall
xor
cmpsb
jg
jno
lahf
jb
and
jmp
mov
in
sub
mov
pop
in
std
mov
daa
out
shll
dec
cmp
sbb
stc
cs
cmp
in
mov
dec
lds
inc
inc
test
out
xchg
addl
push
sbb
dec
lahf
dec
xchg
in
sbb
fistps
mov
cmp
push
dec
xor
and
movsl
xchg
jno
mov
scas
add
push
rcr
pop
push
dec
sti
subb
xchg
jo
ftst
dec
imul
das
xchg
cmp
into
xchg
fldt
jp
inc
shrb
sbb
add
mov
fadds
decl
out
cs
push
lods
sbb
outsb
jmp
jo
or
imul
lea
dec
xchg
mov
out
pop
movsb
sub
test
jb
add
icebp
xchg
fdiv
test
and
sbb
lock
das
nop
ds
orb
jne
jb
jmp
int
jg
ss
and
push
aad
rol
shlb
js
into
incl
pop
mov
pop
xlat
and
jnp
push
adc
repz
scas
jle
xchg
cli
push
lret
mov
imul
and
mov
jmp
in
inc
push
je
mov
mov
or
jb
add
pusha
dec
mov
mov
aaa
arpl
mov
loope
es
scas
popa
les
pop
cli
fs
mov
outsl
mov
ror
xchg
ficomps
sbb
and
xchg
hlt
mov
icebp
jge
rol
cs
sbb
xchg
xor
test
add
jo
dec
push
test
sahf
or
jecxz
mov
ret
clc
cli
nop
mov
loop
push
mov
outsb
pop
cmp
mov
mov
js
lods
mov
cli
push
jp
mov
bound
pop
pop
adc
pop
adc
jbe
xchg
and
or
test
add
iret
cld
out
pusha
push
sbb
jge
xor
jp
xchg
inc
loopne
iret
bound
aad
sbb
movsb
mov
movsb
and
inc
test
pop
pop
sbb
pop
js
xchg
rcr
fsubp
ss
lods
adc
test
test
mov
adc
adc
pop
mov
stos
jo
pop
rorb
lcall
and
fistpl
cmc
in
or
pop
imul
loope
jge
insb
xor
adc
sub
fidivrl
jnp
push
cmpsb
dec
inc
push
loope
js
aaa
cwtl
dec
push
ret
dec
loop
mov
mov
sub
mov
or
int3
scas
dec
ljmp
sbb
out
mov
pop
das
enter
mov
jg
push
sbbb
mov
imul
jp
dec
jecxz
shlb
test
xor
test
mov
mov
sahf
test
mov
add
mov
cmp
push
ds
xchg
jl
xor
popa
leave
in
cmp
clc
shl
je
mov
ficoms
push
xchg
aaa
pop
imul
iret
xchg
xor
andl
adc
fnstcw
mov
cmp
sub
in
lahf
xchg
lcall
jo
in
pop
sahf
icebp
or
sarl
xchg
sub
repz
dec
lods
mov
xor
cli
fstl
cld
or
popf
in
stos
xchg
cmc
xor
and
mov
or
je
lods
out
adc
inc
pop
pop
mov
fdivr
xchg
inc
insb
jmp
pop
std
js
pushf
sub
push
repnz
pop
add
push
std
roll
movsl
pop
adc
jns
test
cmp
in
in
loope
lea
cmp
lret
cmp
jmp
mov
lea
addr16
mov
outsl
loop
pop
inc
ss
gs
cli
dec
fnstsw
imul
stc
or
push
pop
cmp
dec
stc
scas
sub
pop
push
inc
mov
test
bound
mov
jp
push
scas
outsl
push
adc
decb
sahf
pushf
xchg
sbb
inc
and
mov
stos
aam
dec
pop
movsb
cmp
outsl
inc
std
add
mov
mov
out
dec
fadds
fs
xchg
sub
mov
xchg
cmpsb
dec
inc
jae,pn
mov
filds
ss
clc
jae
popf
rolb
mov
arpl
push
fcmovne
and
jge
jecxz
rol
mov
out
int
ret
scas
shrl
mov
outsb
inc
xchg
jo
cmpsl
sub
shlb
xchg
pop
xorb
icebp
stos
fdivrs
xchg
vmwrite
sbb
push
roll
mov
bound
lret
jle
pushf
cmc
add
cld
sbb
popa
les
push
std
and
ficomps
xlat
inc
jle
push
dec
mov
cld
ret
ljmp
icebp
inc
jbe
xor
cltd
cli
rdmsr
test
mov
data16
insl
mov
call
cmp
pop
xlat
filds
fs
call
sti
dec
adc
add
mov
sbb
lret
dec
inc
ds
in
fadds
sub
push
aam
cs
cmp
xor
pushf
js
cwtl
test
jo
and
cwtl
pop
jno
mov
mov
jmp
aaa
lea
sti
pop
xlat
xor
pop
pop
nop
adc
stc
mov
add
adc
cmp
jo
xchg
pop
fnsave
push
lahf
xchg
jne
pop
popa
and
push
ja
mov
sbb
mov
pushf
add
fimuls
inc
pop
mov
mov
in
stc
push
cwtl
aad
mov
aad
sbb
loopne
aad
outsl
repz
jl
lock
iret
xchg
pop
daa
dec
cmp
out
test
cmp
xor
loope
test
rclb
add
sahf
into
pop
jb
test
mov
pop
jge
fmull
ret
outsb
cltd
negl
aaa
add
pop
sub
xchg
cmp
push
jbe
cmpsb
sub
movnti
cmp
push
std
insl
jae
mov
ret
or
push
lcall
xchg
xchg
mov
lods
inc
jo
push
push
lahf
orb
jns
lods
add
fxam
aaa
xchg
dec
fldl
push
sub
cmp
clc
popf
xor
andl
mov
mov
jl
jb
fcomi
add
lret
xchg
clc
dec
lock
outsl
mull
add
arpl
adc
repz
sub
je
push
pusha
mov
pop
or
repz
cli
lea
mov
lods
movsl
fsubrs
inc
daa
xorl
push
xchg
fdivl
jbe
icebp
andl
insl
jo
sbb
imul
xchg
xor
lahf
addr16
enter
lret
mov
and
adc
enter
mov
jle
leave
mov
fimull
mov
jle
pop
mov
popa
xor
pushf
jmp
imul
clc
mull
data16
pop
and
add
int
loope
dec
and
fidivrl
dec
cmp
out
sbb
add
mov
pop
lahf
xor
nop
fidivs
out
jno
sub
sarb
cwtl
mov
jne
aas
repz
jb
cwtl
in
or
push
nop
and
dec
mov
divb
leave
mov
adc
out
clc
arpl
std
xchg
cmpsl
pop
pop
and
jns
mov
and
rcrb
lods
xchg
cmp
or
sub
add
pop
mov
cmpl
pop
ljmp
adc
mov
dec
pushl
add
sub
in
enter
dec
mov
mov
data16
sub
push
nop
push
sahf
lahf
fistpl
pop
xchg
pop
hlt
out
xchg
aaa
jno
insb
xor
or
push
in
mov
sub
cmp
fiadds
fadd
iret
and
lea
dec
lret
cltd
mov
mov
fidivrl
stos
mov
outsl
fists
faddl
in
sub
push
aam
mov
and
sub
mov
pop
xlat
xlat
pop
jecxz
push
mov
int3
and
adc
jg
sarb
cmpsl
movsl
bound
push
or
or
lret
je
mov
fstpl
inc
sbb
xchg
test
ret
enter
sub
lret
jmp
cs
pop
iret
pop
daa
xchg
cmc
shl
into
jbe
jmp
in
call
fmul
sbb
loope
aam
push
jge
ljmp
stos
sub
jle
mov
pop
pop
ss
test
xor
scas
jecxz
lods
mov
popf
mov
ljmp
das
pop
mov
rcl
sbb
ret
cmp
andl
scas
jns
and
iret
push
mov
jmp
ljmp
add
in
pop
outsl
xchg
iret
inc
popa
cmp
jl
sbb
stc
push
lods
jne
mov
lahf
cwtl
loope
stos
lock
jbe
mov
jne
or
cmp
jne
fsubp
scas
sub
mov
cltd
pop
in
mov
mov
cmp
jmp
jle
mov
mov
popf
aas
gs
sahf
into
aam
outsb
fstp
sub
sub
jl
addb
lret
cmp
xchg
push
pop
and
cmp
iret
outsl
mov
jp
xor
clc
or
fstps
add
push
loop
and
pop
imul
push
addr16
fsubrp
jmp
nop
inc
sub
and
fsubr
sbbb
lock
jbe
mov
in
push
jmp
inc
les
test
inc
mov
cmc
mov
pop
test
mov
and
outsb
popa
shll
idivl
xor
movsl
dec
push
out
lds
sub
sub
shrl
push
jmp
ret
lcall
mov
xchg
mov
sub
jb
cmpb
test
psubsb
sub
in
sbb
aas
adc
jp
leave
sbb
mov
int3
adc
add
push
jns
and
in
inc
push
data16
cltd
jnp
mov
aaa
insb
arpl
subl
in
rcrl
xor
pop
pusha
jle
imul
dec
and
ret
xor
bnd
mov
xor
popa
mov
jae
repz
push
mov
or
jge
sub
and
sbb
xor
inc
stos
jl
stc
sub
cmp
cmp
je
xchg
cmp
int3
shl
sbb
std
scas
and
testl
or
test
xor
or
mov
insl
int
insb
jge
cmp
jne
stos
gs
mov
scas
pop
jnp
notb
push
cmpsl
out
fstl
aam
outsb
dec
jb
inc
inc
sbb
daa
aas
jae
jecxz
or
adc
fwait
mov
into
jne
call
addb
loopne
in
pop
sub
sbb
mov
cmp
fimuls
sub
shrl
lods
dec
orl
inc
aaa
mov
fistl
sub
cld
and
cmp
adc
ljmp
das
dec
cmp
inc
add
mov
push
mov
stos
jle
bound
jmp
loop
rclb
pop
ret
outsb
mov
push
das
mov
mov
popf
stos
mov
dec
lods
in
or
jne
or
add
push
out
test
adc
add
mov
jle
cmpsl
push
in
aam
frstpm(287
fsubs
mov
cmp
fwait
and
inc
and
pop
das
mov
push
hlt
push
out
jge
imull
ret
xor
roll
mov
sub
addr16
loopew
jo
dec
xchg
jno
fdivrs
lea
lock
loope
push
data16
jbe
ffree
add
scas
push
outsl
pop
xor
fwait
or
pop
movsl
dec
inc
notl
jns
jecxz
js
sarl
je
mov
shll
mov
add
inc
or
or
or
mov
add
pop
xchg
jnp
sub
out
std
cld
imul
cmp
and
adc
jb
jne
xor
xor
or
outsl
iret
fiaddl
les
lods
fs
add
mov
lock
add
cwtl
jecxz
adc
dec
push
push
pop
xchg
sti
fs
inc
repz
adc
jnp
and
es
in
nop
xchg
push
mov
sti
inc
push
je
rorl
add
add
in
fcmovnbe
neg
fs
rclb
addl
push
stos
aad
loope
fwait
pop
movsb
sub
rclb
movsb
adc
lcall
and
mov
pop
xor
es
inc
jle
push
hlt
out
and
out
xor
lock
pushw
mov
out
or
sub
jmp
cmp
push
jnp
inc
lds
das
adcl
or
mov
in
add
dec
repz
adcl
aam
int3
cli
scas
imul
lods
jne
mov
cmp
sub
in
adc
push
iret
repnz
xor
out
out
cmp
movl
sbb
sub
inc
jno
insb
fdiv
push
mov
scas
dec
jmp
mov
out
xor
xchg
loop
subl
scas
and
xchg
jae
into
test
aas
movsb
pop
cs
aas
insb
and
mov
adc
cmpb
in
cs
jle
loop
fstps
inc
cmp
xor
sub
ja
add
mov
inc
xchg
push
test
pop
imul
fisubrl
jnp
insb
fwait
pop
jnp
mov
loopne
mov
fnstcw
jg
adc
push
sbb
mov
fnsave
hlt
aas
push
push
push
int3
dec
mov
in
sbb
int
pop
fldcw
jmp
out
mov
jo
gs
aas
bswap
push
call
iret
mov
adc
cwtl
adc
fstpt
dec
cwtl
ret
mov
xchg
aam
and
and
lds
jno
add
mov
std
negl
ljmp
add
js
mov
out
jg
mov
repz
adc
lds
mov
mov
xchg
inc
cmp
mov
push
xor
and
xchg
or
mov
cmc
je
cmp
cli
adc
xchg
add
ret
jbe
in
in
pop
adc
cmp
mov
arpl
aad
mov
mov
mulb
test
cmp
fisubrs
out
test
sbb
dec
cmp
fnstsw
cmpsb
or
sub
pushf
arpl
push
ss
dec
addl
inc
dec
add
sbb
inc
fsubs
add
add
pop
or
jnp
and
jnp
xchg
inc
mov
push
push
cs
pusha
mov
xor
mov
idivl
inc
adc
iret
mov
int
insb
je
fwait
cmp
call
setge
into
test
iret
mov
mov
fs
out
pop
pushl
dec
mov
mov
and
popa
cs
out
repz
repz
sub
jae
push
adc
mov
fisttpll
loope
mov
aad
sbb
xor
xor
mov
pop
adc
pop
fstps
xchg
inc
xor
movsl
sub
xchg
adc
sub
sbb
inc
dec
adc
pop
iret
ret
movzwl
xchg
mov
lea
mov
mov
mov
aaa
out
cld
fistps
in
ret
pop
out
popf
je
insb
mov
mov
ja
pop
arpl
inc
add
aaa
cld
fisttpl
push
int3
push
mov
adc
not
insl
sahf
add
and
or
pop
pushf
push
cwtl
dec
in
pop
pop
xchg
fcomps
and
sahf
xchg
scas
clc
mov
cmp
nop
adc
pop
lahf
push
pop
sbb
lods
add
inc
jns
xchg
jae
mov
add
fidivl
aas
xor
xchg
dec
mov
ljmp
pop
pop
ljmp
not
sub
test
or
pop
lret
shlb
push
mov
fdivp
test
dec
mov
push
je
outsl
push
jb
mov
adc
sahf
xchg
inc
xor
xor
inc
scas
jne
out
cmp
mov
fidivl
mov
sub
pop
or
ret
loopne
fstpl
push
xor
mov
lcall
das
mov
cmovnp
and
addr16
sub
push
or
xor
push
test
or
in
mov
es
mov
in
pop
push
lret
roll
mov
aam
mov
outsb
notb
xor
mov
pop
and
or
push
dec
lods
shlb
dec
out
and
pop
inc
pop
cld
push
push
and
sahf
lret
test
push
mov
imul
outsl
cmp
scas
loopne
and
in
insl
ja
cmc
roll
insb
push
xchg
lret
xor
xchg
cmpb
stos
cltd
orl
adc
mov
push
pop
fcmovb
jno
outsb
out
scas
fstpt
inc
adc
lret
lahf
incl
adc
cmp
lods
push
outsb
push
repz
cmp
insl
xchg
out
sub
xchg
and
sbb
imul
push
lcall
mov
sub
mov
outsb
mov
fsubrs
punpcklbw
dec
xor
adc
ret
lods
jp
daa
subl
insb
mov
mov
jne
dec
lahf
lahf
adc
push
sti
mov
add
aad
jle
mov
mov
repnz
sahf
test
clc
sbb
xchg
ljmp
cmpsb
dec
add
jp
sbb
mov
leave
std
lret
add
ja
cmc
add
inc
sbb
das
pop
xor
cltd
pop
stc
pop
out
rol
es
mov
out
lods
daa
inc
jae
rclb
lret
inc
stos
outsb
jno
sub
cmp
pop
mov
mov
enter
xchg
in
inc
xor
loop
pop
subb
stos
cmp
mov
pop
mov
lret
sar
adc
cmp
add
or
cltd
insb
in
dec
adc
or
push
cli
lret
cltd
xor
comiss
mov
mov
jg
adc
add
mov
cmp
pop
cmp
mov
inc
jle
out
pop
cld
ljmp
iret
mov
mov
rol
scas
mov
mov
je
jo
das
mov
sub
mov
pusha
shrb
pushf
sub
pop
xor
cmp
xchg
xlat
inc
clc
cmpsb
jp
in
scas
lahf
dec
or
push
sbb
popa
in
iret
jge
mov
sbb
sbb
loopne
xchg
cmpl
xor
push
xchg
ja
leave
sbb
sarl
push
in
stos
xchg
out
dec
dec
daa
and
loop
mov
xchg
sbb
movsl
in
jb
and
aaa
push
loope
rcr
aaa
xchg
sahf
dec
das
or
jl
jo
mov
dec
pop
push
leave
inc
fs
aam
mov
jno
aam
mov
dec
mov
stc
inc
cli
icebp
push
fs
sub
cmp
mov
loopne
addr16
ret
fs
aam
and
dec
rcr
repz
inc
ret
lea
jae
lahf
test
out
out
pop
cmc
and
pop
std
or
sbb
ds
sub
mov
fsub
dec
test
or
outsb
push
dec
idivb
pop
or
test
icebp
leave
int
js
push
sub
mov
xlat
fcmove
fisttps
insb
lock
cmp
fwait
or
mov
mov
mov
mov
adc
adc
cld
lcall
subb
jle
cld
aam
cmp
test
in
or
mov
sbb
mov
and
mov
or
adc
adc
negb
add
pop
add
mov
pop
rolb
out
iret
ja
pop
ja
mov
ja
sahf
popa
mov
decb
pusha
push
divl
std
fidivs
pop
out
mov
cmp
or
push
bound
mov
call
sarb
imul
mov
pushaw
stc
mov
sub
lret
repz
mov
cmp
clc
ret
pop
jecxz
je
sti
dec
or
hlt
xchg
adc
loope
or
pop
jo
hlt
imul
push
mov
out
xor
inc
lods
or
pusha
mov
into
movsb
push
sbb
jns
shlb
inc
repnz
mov
lret
lret
incb
int
lahf
and
testl
push
out
sub
dec
pop
and
sub
cmp
xor
outsb
add
jmp
pusha
mov
add
lea
into
shr
idiv
movsl
mov
jne
ljmp
lcall
ja
push
aad
jns
mov
daa
add
jp
xor
mov
cmp
jne
xchg
fmul
pop
fsubs
bound
ds
sbb
mov
pop
jbe
int
inc
fwait
mov
bound
enter
out
shrl
inc
xchg
movsl
sub
add
mov
add
mov
jnp
repz
fcompl
aas
jne
repnz
idivl
mov
je
fdivrl
mov
mov
enter
sbb
shl
cltd
mov
sbb
insb
push
aam
jle
inc
mov
push
ror
stos
repz
ret
mov
repnz
lahf
aaa
in
pop
sub
in
inc
jne
jge
push
ja
push
push
test
jns
data16
pop
bound
pop
fstpt
ljmp
sahf
popf
fcmovu
mov
dec
insb
sub
popf
mov
dec
sub
push
fsts
or
mov
clc
into
std
mov
sbb
push
xor
sub
stc
divl
repz
jb
cld
fs
mov
adc
je
sti
jno
rcr
xor
movsb
pop
hlt
jno
out
xor
out
shl
add
inc
incb
mov
fsubl
adc
jle
popa
push
je
clc
shll
je
iret
ljmp
lcall
sahf
and
adc
xchg
pop
mov
in
pop
in
xchg
in
inc
mov
es
jle
push
jg
icebp
movsb
jno
adc
stos
data16
mov
fwait
pop
cwtl
push
and
roll
loopne
jbe
test
aaa
fdivrp
xlat
sub
mov
out
cld
fcmovu
cmpl
jb
ljmp
xor
mov
fiaddl
dec
out
mov
or
gs
mov
leave
mov
adcl
nop
test
loopne
add
xchg
jne
jns
xor
fcoms
movb
sahf
loope
icebp
loopne
outsb
std
or
jmp
aas
sub
jae
cmpsl
cmpsb
or
jp
je
and
aas
jnp
jmp
inc
int3
cmp
sbb
iret
sub
mov
clc
mov
test
xor
imull
decl
aam
dec
dec
mov
lret
out
out
pop
sbb
mov
jl
adc
pop
je
push
clc
fmull
cmp
jecxz
sbb
mov
popf
movsl
push
aaa
scas
push
inc
add
push
faddl
notl
jne
dec
jo
xchg
adc
bound
fxch
call
adc
scas
dec
ja
mov
jl
lock
inc
or
jbe
sbb
test
neg
filds
or
ja
es
xorb
ret
push
lret
das
sbb
push
imulb
movsl
std
fimuls
jp
imul
cmp
shll
jmp
test
xchg
or
jl
inc
pop
inc
adc
push
xchg
mov
lods
leave
and
pop
pop
gs
out
mov
mov
aad
sbb
dec
cltd
push
inc
mov
mov
xabort
fidivrs
jecxz
mov
xchg
clc
mov
std
fwait
push
lret
adc
stos
adc
jo
test
test
aad
push
lock
loope
movsb
les
js
sub
push
sbb
mov
or
and
and
out
ret
scas
cmpsb
xchg
insl
sbb
in
loope
pusha
shrl
je
adc
fldt
rcrl
imul
imul
mov
fdivs
decl
pop
out
sarb
dec
clc
js
cmp
jnp
add
push
cmp
push
adc
test
into
gs
mov
loop
add
rep
add
imul
aad
jnp
mov
lds
int
pusha
shll
icebp
mov
shrl
cld
iret
test
sub
xchg
jnp
cmp
pop
add
mov
out
mov
dec
push
test
mov
dec
cltd
and
mov
in
pop
addr16
shl
mov
data16
push
xchg
xor
ret
xchg
dec
lods
sbb
fwait
or
sub
out
inc
mov
push
push
mov
pop
mov
dec
data16
cmpsl
add
lea
adc
aad
jmp
sub
sbb
push
xchg
in
mov
int3
mov
inc
mov
or
push
xchg
aaa
cmpsb
std
movsb
cld
pop
imul
lds
repnz
adc
cmp
mov
dec
sarb
add
cli
adcl
dec
loop
push
mov
xlat
mov
jo
dec
imul
pop
pushf
mov
es
inc
and
div
adc
rcll
dec
inc
pop
mov
xchg
leave
aas
jnp
ja
imul
sub
cmpsl
push
dec
pop
pop
pop
xchg
and
repz
cmpsl
add
int3
int3
mov
shr
lret
mov
mov
bound
test
sub
movsb
lahf
push
in
int
add
jae
mov
shrb
lahf
cmpsl
mov
mov
imulb
and
mov
pusha
loope
lods
push
stc
icebp
pop
mov
or
shll
xchg
orl
mov
and
nop
mov
fsts
xchg
out
and
jbe
push
dec
in
rorl
jle
int
add
pop
test
orl
inc
pop
in
add
notl
pop
out
popf
push
push
pop
test
mov
jbe
mov
push
cli
push
imul
mov
lcall
in
xchg
push
clc
xor
dec
stc
gs
into
rcr
xor
jge
xchg
test
and
test
lods
inc
dec
out
mov
sbb
sbb
pop
lret
insl
inc
mov
fbstp
adc
aaa
and
les
mov
testl
mov
cwtl
jae
jb
out
sub
mov
out
popfw
xor
cltd
mov
pop
push
cmp
xchg
inc
jl
into
and
aad
mov
cmpsb
sbb
ficompl
enter
int
pop
cltd
movsb
mov
cli
xor
push
shrl
adc
cmp
test
imul
in
daa
inc
icebp
xor
or
test
lock
cs
mov
add
mov
dec
mov
loop
in
jno
imul
test
xor
jo
xor
adc
test
int
arpl
sub
inc
in
mov
push
arpl
stos
ss
in
pop
inc
iret
fs
push
cmp
sub
dec
popf
xchg
je
xor
push
fildll
insb
movsb
cmc
sbb
add
test
jnp
aaa
xor
outsl
fiadds
inc
mov
fsubs
and
fsub
sub
daa
pusha
jmp
lahf
dec
cs
push
fwait
push
mov
in
loop
testl
ss
mov
cld
xor
lahf
insl
dec
dec
dec
stc
mov
sub
and
popa
jg
jle
add
inc
daa
ss
and
or
movb
mov
arpl
sbb
ret
iret
cwtl
mov
mov
jb
int
xchg
dec
bnd
fldt
adc
sbb
loope
push
xchg
jl
mov
aaa
jle
mov
add
sbb
pop
insb
dec
pop
rcrl
outsb
ljmp
shll
mov
pmaxub
adc
push
push
fbstp
inc
negl
adc
js
stos
xchg
dec
addr16
adc
test
xchg
xor
xchg
es
push
hlt
andl
into
or
pop
xchg
push
cmpsl
and
leave
jne
addr16
dec
sarl
push
scas
pop
mov
in
xor
or
mov
popa
insl
sahf
test
cmp
dec
mull
test
ud1
add
push
ret
les
aam
je
pop
add
mov
xchg
xchg
out
add
jns
xchg
adc
cmp
xlat
and
inc
push
or
fnstenv
shrb
fstpt
pop
xchg
repz
test
adc
cmpsl
popf
lret
cmpxchg8b
mov
mov
divl
test
mov
pop
ds
push
sub
pop
lret
or
mov
iret
mov
pop
test
xor
aad
fcompl
nop
and
pop
adc
inc
cmp
out
pop
pop
sbb
xchg
arpl
inc
aaa
fldcw
adc
push
stc
call
pop
or
dec
xchg
ret
mov
in
sub
cld
cmp
loop
push
rcll
loope
cmp
sbb
mov
and
dec
aam
pop
mov
push
mov
lds
lcall
cmp
cmpsl
and
lahf
loopne
mov
jns
sub
xchg
dec
lea
je
xchg
fbld
sub
jae
hlt
lcall
inc
mov
jl
pop
or
cmpsl
ja
fldcw
inc
sarl
inc
gs
andb
clc
in
pushf
bound
jnp
dec
add
pop
pop
ljmp
inc
andl
mov
adc
inc
sarl
xchg
bound
pushf
adc
leave
pop
repz
and
push
add
and
cwtl
mov
addr16
jmp
mov
enter
cltd
xor
insl
mov
and
ficoms
fdivs
daa
xor
push
fldl
ret
or
mov
xor
addr16
mov
call
xchg
sahf
rorb
stos
xchg
adc
out
lcall
push
mov
or
ljmp
pop
and
jb
fildl
rcrb
sub
mov
or
in
cli
pop
mov
dec
icebp
sbbl
ret
push
imul
cmp
sbb
jecxz
in
mov
and
in
out
sub
inc
into
jne
mov
mov
leave
jecxz
faddl
popa
ss
xchg
xchg
add
sbb
icebp
inc
insb
add
cmp
in
sub
gs
inc
mov
imull
fiaddl
cli
mov
xlat
leave
mov
mov
or
dec
cli
push
push
or
out
xchg
inc
dec
xchg
fwait
jge
jb
mov
sbb
jns
std
inc
loope
cmpsl
mov
popf
or
mov
xchg
push
cmpsb
orb
push
mov
pop
fildll
push
fisttps
or
and
fwait
or
aas
push
addr16
mov
xor
fldenv
jge
jno
push
roll
mov
stos
mov
inc
andl
in
imulb
or
gs
xchg
fsubs
test
sbb
sub
lahf
xchg
addb
daa
cltd
mov
pop
pushf
dec
xchg
xchg
ss
icebp
outsb
repnz
repnz
xlat
inc
into
cmp
test
pushf
pop
clc
std
testb
mov
pop
xchg
cmpsb
aad
mov
std
xlat
aad
ja
sub
dec
add
movsl
add
addr16
fldenv
mov
pushf
xlat
add
pushf
inc
into
in
out
in
das
neg
add
or
sub
dec
test
pop
int
mov
pop
int
cmp
sti
cmc
pop
jge
les
mov
sub
or
jp
cmp
pop
out
fcmove
rcrb
loope
fiadds
adc
xor
repz
mov
aaa
adc
ret
sub
int
nop
test
push
cmp
test
out
scas
ret
push
mov
dec
fists
insb
stos
notl
or
sub
pop
popf
outsb
lahf
jns
loopne
jns
xchg
jmp
sarb
mov
mov
jbe
in
or
pushf
sbb
pop
aas
adc
xchg
sub
jmp
xor
dec
es
out
mov
inc
adc
pushf
sub
fdivrl
pop
cmp
addr16
jle
shrl
jne
inc
jmp
pop
adc
or
cli
mulb
push
in
out
push
daa
jg
cld
out
lods
outsl
lds
inc
mov
sub
sahf
and
jecxz
in
mov
push
fstl
mov
push
cmp
pushf
or
fbstp
insb
aaa
mov
or
cwtl
lret
mov
lods
sti
sbb
sbb
jge
push
bound
rorb
outsb
pop
dec
mov
in
and
mov
test
addr16
and
mov
cmc
sbb
popf
pop
clc
sub
cltd
js
add
mov
pop
mov
add
fidivl
cli
rcrb
rorb
jmp
ds
fbld
mov
fsub
sbb
call
das
push
cmc
fiaddl
and
int
ret
pop
sbb
in
or
add
in
insb
inc
push
sub
ljmp
loopne
adc
sbb
das
out
jecxz
jmp
xor
aas
jp
in
es
out
sbb
in
icebp
imul
ljmp
pop
mov
lods
lahf
xchg
outsb
rorb
shrb
loope
test
inc
mov
cld
ss
jmp
sti
mov
mov
mov
sub
pop
lcall
pop
popf
pop
lds
xor
int3
xor
dec
mov
sahf
and
std
jle
lret
shlb
fstp
cmpsl
lods
sub
fdivrl
dec
nop
adc
fs
das
and
sub
stc
insb
loope
popa
test
test
xor
sub
ja
sub
and
add
inc
cmp
inc
loopne
push
inc
lcall
inc
pop
jne
lods
arpl
sbb
fbld
or
jno
inc
popa
sbb
in
xor
jle
or
pop
pushf
mov
lahf
int
aad
ja
inc
and
cwtl
add
mov
incl
pop
xchg
xor
or
xchg
dec
sbb
add
das
loop
and
xchg
mov
pop
mov
into
std
add
outsb
lret
adc
cltd
in
shl
cmc
jo
or
xchg
jns
ret
test
int3
lods
in
xor
or
mov
rcll
sbb
pop
out
and
mov
fwait
pusha
cmp
push
test
lock
les
xlat
jns
dec
dec
mov
lea
cmp
shl
add
mov
into
mov
mov
ffree
scas
adc
mov
test
inc
notb
into
mov
sub
enter
fisubl
mov
dec
js
sbb
shll
out
gs
insb
sbb
shlb
xor
dec
fidivrs
xchg
enter
in
pop
and
data16
mov
mov
fdiv
dec
push
cmp
pop
add
push
xchg
sbb
mov
aad
xor
push
inc
sarl
icebp
cmp
ret
lahf
push
cmc
ja
xchg
push
insl
inc
push
xchg
jmp
xchg
nop
mov
cmp
test
pop
push
or
outsl
dec
sub
test
push
dec
cmp
mov
mov
adc
bound
orl
add
imull
or
xor
push
and
add
shrl
push
or
sub
push
xor
sbb
into
test
daa
xlat
sub
nop
pop
pop
pusha
lock
movsb
push
push
jae
std
sbb
inc
je
fisttpll
inc
push
fisubrs
lds
lcall
sbb
mov
movsl
xor
xchg
sti
push
dec
adc
cmpsb
fistps
outsl
ret
pop
ret
pop
push
add
mov
adc
sub
mov
mov
sti
hlt
je
xchg
outsb
add
jno
inc
cmp
ja
sbb
sbb
xchg
negl
movsl
xor
les
stos
daa
jns
jmp
pushf
sbb
jle
pop
lea
xor
incl
daa
cld
loope
xchg
sbb
dec
dec
repnz
mov
sbb
fiadds
mov
in
mov
fwait
inc
pushf
popf
in
ss
aaa
daa
out
sahf
cmp
pop
xchg
mov
fisttps
mov
loope
ds
fs
and
mov
xor
jmp
std
mov
faddl
ja
dec
or
ror
lret
sub
sbb
mov
jnp
push
adc
or
fsubrs
in
stos
add
mov
xor
jae
mov
call
out
mov
cmpsb
fidivrs
adc
jo
cmp
stc
push
xchg
mov
and
ljmp
mov
movsb
sbb
ret
mov
loopne
add
pop
call
mov
loop
xor
out
mov
mov
pusha
cmp
icebp
cmp
pop
fmull
aad
mov
cmpsl
mov
sub
in
cmp
loopne
sbb
xor
and
cli
jle
cwtl
popa
std
mov
inc
dec
test
stos
add
jbe
adc
and
into
sbb
mov
lods
inc
rcrb
xchg
pop
mov
fcomip
xor
push
test
and
loop
test
aam
pop
bound
out
outsl
sub
ficompl
mov
ficomps
sbb
push
ret
das
inc
data16
cmp
fdivl
hlt
cld
idiv
cmpb
sbb
out
je
xor
sub
push
loope
btr
fmuls
xchg
inc
flds
ret
push
lock
les
les
imul
shrb
pop
lcall
mov
daa
push
ss
ret
into
nop
cmpsl
inc
or
ljmp
xchg
rcrb
or
mov
scas
imul
addl
or
mov
rcrl
ds
dec
int
cs
or
pop
popa
adc
jecxz
fs
add
push
scas
cmp
lods
push
cmp
mov
pushf
jbe
aam
dec
movsl
mov
and
cmp
ljmp
sbb
lds
sbb
dec
shrl
xchg
pop
lret
mov
cmpsb
push
in
and
dec
cmp
dec
outsl
pop
mov
push
mov
outsl
jle
cli
ret
imul
cmp
xchg
mov
idivl
or
jbe
std
cmp
mov
mov
fwait
ret
clc
xchg
jl
inc
or
push
aad
loopne
nop
dec
out
filds
xchg
or
sahf
add
jbe
xchg
in
dec
daa
scas
or
dec
cmc
mov
pop
push
push
jp
in
mov
inc
lods
pop
fnstenv
out
out
aad
jmp
insb
xor
jo
decb
pop
data16
fisubl
push
int
pop
out
or
cmpb
adc
mov
push
mov
or
sub
sbb
adc
daa
push
loope
aad
adc
sbb
loopne
scas
jne
out
jne
push
xchg
xor
icebp
mov
dec
cmp
out
fldl
or
and
mov
lahf
xlat
std
fsubrl
mov
cltd
ficoms
test
jae
rol
iret
inc
std
in
xchg
jle
bound
lcall
push
mov
cmp
aas
cwtl
daa
icebp
and
inc
ret
inc
mov
and
push
mov
aam
lods
mov
stos
xor
mov
jae
pop
jae
lret
pop
andb
lcall
std
push
cmp
xchg
jbe
in
stos
gs
mov
inc
mov
mov
roll
or
aam
aad
jae
call
mov
scas
dec
push
fwait
in
xor
iret
mov
iret
sub
inc
mov
sbb
push
xlat
adc
push
and
out
cwtl
push
loop
xchg
cmp
imul
adc
xchg
push
aad
fidivl
lds
xchg
push
dec
add
inc
xor
mov
dec
mov
dec
adc
sub
or
lret
mov
es
mov
jp
jg
fisubl
or
sub
jbe
xor
popa
fisubrl
and
lret
pushf
cmp
inc
out
es
jno
cmp
out
iret
faddl
adc
mov
call
jl
push
cmp
xchg
cmp
aad
add
mov
mov
lahf
cmp
or
mov
jne
push
jecxz
insb
push
testb
push
mov
cmc
pusha
imul
pop
xchg
xlat
data16
inc
xchg
mov
fdivs
fnstsw
and
bound
jo
enter
je
pusha
jle
mov
out
push
sahf
es
ror
sub
pcmpgtb
jecxz
fmull
lods
and
xchg
inc
cli
std
or
jecxz
push
pop
and
xlat
fdivl
pop
jo
testl
adc
mov
shlb
aaa
cmpsb
outsb
in
in
icebp
rolb
mov
ds
cmp
jp
jmp
mov
jne
or
shlb
adc
les
mov
outsl
cwtl
and
test
pop
adc
aam
dec
jecxz
xlat
sub
add
push
addr16
or
movsl
jno
inc
aas
subl
in
add
cmpb
push
mov
adc
cwtl
loope
push
out
inc
cltd
xchg
xchg
ja
ror
and
dec
mov
ja
cmp
imulb
xor
fstpl
sub
test
cmp
mov
scas
dec
pushf
adc
sbb
cmp
xor
loope
dec
push
add
bound
stc
mulps
push
xlat
jge
outsb
dec
xchg
sub
xlat
pop
js
in
xchg
mov
pusha
cmc
adc
data16
xchg
pop
xchg
xor
pop
mov
mov
xor
pop
or
cli
adc
inc
mov
fs
outsl
mov
loope
jb
inc
or
sub
stc
sti
jne
dec
clc
imul
mov
adc
out
jp
out
std
outsb
ret
lds
pusha
and
inc
jbe
dec
dec
call
mov
mov
sub
mov
movsb
inc
adc
pop
sub
cmp
fstpt
push
jge
rcll
cmp
mov
jg
pop
sub
lods
pop
inc
jnp
lcall
mov
loopne
popa
mov
and
outsl
xor
fsubrl
mov
mov
imul
mov
jno
jle
dec
rcrb
ret
mov
xchg
into
stos
pop
hlt
enter
and
call
stc
push
pop
sub
sbb
add
sub
jge
push
lods
into
out
adc
sub
pop
xchg
dec
es
sub
es
xchg
pop
dec
sub
jno
icebp
dec
imul
out
fidivrs
dec
mov
aas
js
inc
stc
push
push
ja
jl
ret
sub
mov
xlat
jmp
fistpll
fisubrs
fisubrs
call
addb
push
push
imul
xor
addr16
xor
mov
lds
das
pop
sub
inc
ret
sbb
lods
or
js
or
cmp
jns
ret
and
into
subb
stos
mov
mov
lahf
insb
sti
fisttpl
mov
jg
in
neg
xchg
rclb
call
mov
pop
fcomp
fnstcw
scas
divb
jmp
xchg
ret
jg
fwait
push
notb
loopne
or
das
jle
add
in
jno
fwait
pusha
scas
lret
repnz
popf
out
fbstp
imul
push
or
inc
out
push
mov
sub
subl
ret
sbb
cmp
dec
xor
and
test
inc
cmp
add
lret
dec
and
cmp
adc
into
test
mov
sahf
das
out
fstpt
inc
in
mov
or
inc
in
push
shrl
out
int3
aaa
mov
je
jb
sbb
daa
xor
sahf
arpl
dec
jl
hlt
mov
cmpsl
and
pop
je
xor
das
mov
enter
addl
or
and
mov
or
xchg
lret
movsb
cmp
jnp
jb
je
shlb
shrb
es
pop
out
lahf
push
inc
mov
repnz
jnp
lea
inc
push
dec
aaa
sahf
jns
out
and
xchg
push
xchg
popf
enter
inc
or
cmc
cld
aam
pusha
mov
or
addr16
sub
or
push
cwtl
dec
cmpsb
gs
fxch
fwait
or
imul
out
insl
lds
xchg
sahf
mov
je
mov
cmp
xor
mov
pop
shl
xchg
imul
sub
jnp
stos
push
inc
ret
sahf
push
adc
mov
mov
cwtl
test
pop
testb
mov
jns
mov
bound
dec
push
jl
adc
cmpsl
out
sbb
scas
mov
jo
jp
shl
cmp
jg
shl
cmc
cmp
and
rorl
lods
push
das
cmc
push
test
fxtract
xchg
jae
ficompl
fiaddl
mov
and
pop
repnz
inc
add
dec
loop
or
in
fisttps
sti
pop
hlt
lods
addr16
mov
out
mov
cmpsl
lods
cmp
divl
pop
and
xchg
jns
add
fcmovne
rolb
es
mov
loope
ret
ja
ret
jecxz
clc
inc
insl
jg
cmpsb
lds
mov
test
lea
lea
insb
jle
cmp
dec
ret
jg
dec
mov
out
jecxz
xchg
test
stc
outsb
loop
loop
ret
movb
stos
mov
mov
daa
pop
popf
shl
popa
jno
cmpsb
lret
aaa
rol
fs
adc
dec
stc
hlt
cwtl
lea
jns
cltd
into
cmp
ror
popf
out
pop
inc
xor
and
jo
push
jb
nop
idivl
mov
inc
add
add
pop
mov
push
inc
sub
enter
adc
pop
pop
pop
lret
jmp
push
lcall
imul
inc
mov
hlt
or
pop
arpl
sbb
dec
das
outsb
mov
pushf
push
sub
ja
jg
dec
dec
push
mov
ret
rcl
shlb
loop
sub
dec
icebp
fiaddl
repnz
daa
leave
leave
cmpsb
jle
test
hlt
dec
mov
test
mov
lahf
inc
movsl
or
jmp
sar
inc
dec
push
mov
mov
xor
mov
andl
movsl
sbb
xchg
xor
iret
divb
push
push
ljmp
insb
jl
adc
stos
fadds
data16
lcall
mov
rcrb
jle
cs
fisubs
popa
and
stc
jmp
and
into
cmp
mov
outsl
add
mov
mov
stos
aam
lret
mov
std
jg
pop
xor
bound
aam
and
dec
je
dec
outsl
and
lds
scas
jmp
cmp
stc
cld
js
insb
push
repz
repnz
stos
dec
test
pop
xor
test
mov
and
fcompl
adc
add
adc
cwtl
pop
inc
clc
pop
or
testb
mov
movsl
dec
arpl
ffree
mov
subl
addr16
movsl
aas
pop
movd
adc
ljmp
jno
push
lret
jne
inc
orb
cs
popa
jecxz
xchg
push
xor
or
aam
sub
fwait
add
xchg
sub
inc
inc
test
sbb
xchg
movsl
adc
arpl
lret
mov
mov
je
cli
and
or
out
fcoml
stos
fs
xor
adc
xor
arpl
fildll
or
lea
lea
cs
into
xchg
jmp
aam
xchg
jg
ss
int3
xor
mov
clc
cmp
out
push
das
mov
xor
pop
testb
push
xchg
jl
mov
fsubs
lods
stc
adc
mov
mov
jmp
adc
outsb
clc
fdivrl
add
xor
push
and
mov
mov
into
gs
mov
imul
ds
cmp
mov
jmp
test
push
orb
add
push
sbb
xchg
popf
aad
pop
dec
fcmovnu
pop
jg
stos
mov
lods
cmp
test
mov
lock
ds
lcall
or
push
incb
mov
lret
leave
cmpb
inc
lods
scas
pop
out
dec
inc
xchg
and
pop
inc
xor
xchg
insl
hlt
mov
pop
push
jecxz
iret
mov
sub
test
xchg
nop
sub
fcomps
adc
es
je
jbe
test
pop
gs
pop
jle
rcr
adc
repz
jmp
pushf
or
fstl
nop
lods
mov
pushf
dec
loope
neg
popa
sahf
cmp
xor
lods
gs
dec
add
fsubl
lret
or
push
sub
mov
fimull
xchg
sub
rcrl
xchg
adc
sarl
loope
cs
testb
mov
test
lea
pop
jge
jbe
jno
mov
bound
stos
lret
mov
jno
jp
or
xor
add
pop
aam
movsl
stc
pshufw
pop
fs
insl
inc
jnp
jnp
insl
out
rolb
xor
iret
xor
imul
jnp
sbb
rcrb
mov
jns
inc
inc
push
fwait
dec
lods
repnz
push
test
push
cmp
and
sbb
pushf
mov
ja
mov
cld
push
loope
adc
inc
push
testl
pushf
loope
pop
fcompl
bound
jg
cmpsb
xlat
outsl
add
enter
pop
adc
fcmovnbe
loope
out
into
popa
push
mov
addr16
dec
jp
cmp
mov
inc
pop
dec
jg
or
fmul
and
mov
sarl
scas
or
stos
pop
adc
cmpsl
mov
mov
mov
icebp
mov
cmpb
sub
popa
das
xchg
dec
scas
sbb
cmp
and
shrb
nop
mov
enter
aaa
mov
xchg
jecxz
xor
cmpsl
xorl
ljmp
rcll
mov
dec
push
pop
push
subb
adc
mov
sub
push
sbb
ret
add
add
ret
lods
mov
mov
xchg
ret
push
clc
test
into
sbb
sbb
outsl
add
inc
cmp
insb
or
mov
insl
daa
and
mov
add
push
stc
fidivrl
sahf
in
push
das
ljmp
addb
xchg
mov
dec
in
inc
inc
in
push
in
adc
dec
movsl
dec
outsl
add
lahf
inc
and
aaa
jp
xor
jmp
ret
jae
les
cmp
mov
and
das
std
adc
mov
push
push
je
jne
outsb
movsl
lret
popf
add
stc
adc
mov
sub
insb
push
or
out
sbb
jl
outsb
mov
imul
mov
cli
popf
test
popf
daa
mov
pop
xorb
in
inc
push
in
inc
mov
dec
je
push
cmpsb
int
int
xor
cmpsl
xor
or
rcr
or
sub
mov
mov
dec
addr16
lret
lahf
xor
lret
cmpb
arpl
scas
push
int
shrl
push
or
jg
mov
dec
shrl
pop
pop
and
aas
mov
lret
lods
or
fstps
jl
ffreep
fisubrl
mov
fistpll
sbb
pushf
inc
shrl
icebp
scas
jl
inc
imul
ja
fbld
ret
fwait
adc
es
xchg
xchg
repz
test
mov
sub
sbb
or
js
pushf
fistpll
and
insb
repz
or
inc
imul
cmp
out
fsubrp
sti
mov
mov
jnp
out
mov
sub
xchg
cs
mov
mov
pop
dec
shll
jl
nop
scas
in
faddp
out
fwait
xchg
aam
movsl
shr
adc
enter
fs
xor
add
pop
xor
pop
dec
cmp
insl
test
aas
movsl
cmp
dec
xor
sub
push
dec
dec
and
sbb
xor
xchg
fiaddl
cmc
lret
mov
lret
mov
or
pop
in
xchg
das
jae
inc
inc
adc
push
out
push
xor
aas
lock
jno
fdiv
imul
cmp
imul
pop
data16
mov
jmp
imul
stc
data16
aas
jne
pusha
stos
out
aam
icebp
outsl
int3
or
sbb
adc
mov
sub
jno
mov
leave
xchg
test
fsubl
ret
mov
sti
out
out
inc
les
bnd
sti
loope
xor
ficoms
icebp
mov
xchg
pop
xchg
cmpsl
fnsave
push
mov
sbb
rclb
stos
int
mov
sarl
or
scas
pop
pushf
pop
sbb
aas
pop
xchg
jnp
xchg
mov
decb
out
sbb
out
cmpsl
jo
cmp
and
jl
xchg
scas
mov
mov
sub
or
fdivrl
aaa
js
or
fxch
mov
fstps
inc
push
int3
xchg
fiadds
jne
add
jl
int3
push
push
stc
add
fs
cmp
into
cltd
add
push
dec
cmc
dec
or
mov
addr16
xchg
leave
mov
ror
jno
sub
adc
lods
push
ret
dec
nop
shlb
cld
sti
add
dec
cmp
addl
sarl
lods
int3
ret
out
adc
push
je
sub
jns
shl
pop
push
icebp
inc
sarl
int3
inc
mov
iret
mov
ja
insl
xor
imull
fcomi
adc
xchg
das
dec
inc
shl
movsb
shll
into
adc
cmp
push
pusha
nop
inc
daa
les
mov
jne
pop
jae
mov
add
adc
jmp
adc
loope
pop
inc
lods
or
inc
std
fidivs
lret
mov
and
nop
dec
fs
xor
inc
pop
cld
test
add
or
pop
ret
aas
jo,pt
gs
testl
jne
ja
push
mov
lret
sub
lahf
fimuls
iret
pop
jmp
sbb
stc
push
sbb
inc
loop
clc
jno
je
xchg
fstpt
dec
pop
ficomps
loopne
mov
shll
shrl
mov
lock
dec
loop
mov
insl
gs
lcall
push
stos
mov
and
cmp
cld
ret
xor
mov
lcall
mov
cmp
and
fbstp
sahf
movsb
or
ja
imul
mov
insb
push
pop
fwait
jmp
aaa
test
mov
cmp
loope
add
cwtl
es
jnp
push
xor
and
xchg
cmp
sahf
rep
loope
or
adc
nop
xchg
mov
int
fisubrs
cmp
ljmp
mov
and
jle
jp
inc
xor
mov
or
fs
sbb
push
push
into
fnstenv
in
fcmovnbe
cmp
pushf
sbb
rcrl
jg
aam
lahf
xchg
mov
push
repnz
fwait
rol
xchg
mov
add
cwtl
test
adc
push
fisttps
cmc
orl
cltd
loope
jb
xchg
int
push
jmp
push
jne
push
hlt
or
fs
shlb
push
mov
cli
out
mov
xchg
mov
jb
jl
test
push
mov
push
cmp
lcall
and
lods
inc
mov
inc
movsl
ficompl
sub
cmpsb
out
sub
lods
add
jp
jmp
adc
pop
cmpb
xchg
mov
jns
adc
or
xchg
add
int3
xlat
test
jne
loope
in
xchg
sub
shlb
mov
test
in
movsb
in
jae
xor
fistps
in
sub
push
bound
add
mov
rorl
cmpb
mov
pop
enter
addr16
sbb
repz
and
push
and
push
fwait
sar
out
xor
mov
jbe
pop
xor
clc
fstpt
jle
bound
out
mov
mov
call
sbb
push
fmul
pop
adc
mov
push
push
mov
jb
lds
sub
insb
adc
ljmp
ret
cltd
jge
test
push
fwait
jo
xor
add
ss
and
leave
mov
adc
outsb
jns
out
enter
and
xor
mov
je
jmp
loope
scas
test
sbb
in
pop
jge
scas
cmp
test
dec
sbb
test
or
and
mov
rcll
pushf
mov
mov
leave
lret
ja
dec
adc
sbb
lds
mov
pop
jl
push
outsb
repnz
test
or
push
mov
push
xorl
ficoml
loope
push
cld
mov
sti
outsl
outsb
jne
nop
lea
lods
lahf
pop
fbstp
or
xor
pop
sbb
mov
clc
fbld
out
mov
ficoml
inc
mov
in
sarb
inc
shll
vpcmpeqb
sarb
int3
cmp
cltd
cmp
imul
fadds
jo
xor
jl
test
mov
push
xchg
lds
jb
pop
cmpsb
xchg
shr
dec
cli
push
cltd
mov
loope
idivl
pop
mov
aad
cli
ret
insb
jecxz
adc
dec
push
rcll
jp
push
sbb
pop
adc
scas
mov
pop
pop
in
ret
lahf
vpaddd
jns
mov
cmp
mov
call
cmp
in
jnp
sub
sub
mov
mov
enter
xchg
sbb
lahf
dec
xchg
aas
pop
xchg
aam
jbe
jo
xor
mov
scas
xchg
mov
pop
inc
mov
test
mov
add
jns
out
mov
cltd
pop
sub
pop
jmp
out
push
call
pop
ss
push
adc
sahf
data16
cmp
adc
inc
dec
addb
aam
mov
xchg
popf
cmp
push
iret
sub
lret
xchg
cld
jp
jnp
std
jae
stc
dec
ds
imul
lret
loopne
and
fnsave
and
push
ljmp
push
dec
xchg
outsb
dec
xor
adc
mov
es
ds
xchg
xchg
je
jl
rclb
inc
je
sbb
sahf
shlb
clc
enter
mov
ljmp
rolb
xlat
xchg
bound
jmp
mov
xchg
lock
ss
mov
mov
jns,pt
and
jle
fs
push
cs
mov
stc
negl
leave
in
das
enter
sbb
fdivs
daa
jle
sbb
sbb
aas
mov
mov
add
mov
arpl
in
adc
inc
cwtl
sub
mov
icebp
mov
pushf
shr
sub
jne
mov
cwtl
imul
inc
jecxz
lahf
ja
fwait
loopne
pop
ficoml
jae
xacquire
mov
lcall
adc
dec
push
test
mov
int
jmp
stos
inc
out
ds
and
add
mov
loop
je
push
in
cmp
xchg
popa
fwait
test
call
adc
adc
push
fnstsw
movsb
sbb
mov
push
add
popa
push
add
cld
ds
fildll
rcrb
jae
sub
pusha
sub
cli
int3
aad
aam
arpl
repz
fisttpll
imulb
dec
cmp
mov
mov
xchg
test
mov
fwait
sbb
imul
dec
ja
hlt
mov
and
inc
mov
cmp
xor
mov
movsb
enter
shll
hlt
in
ds
cmpsb
lds
arpl
mov
lods
ljmp
xchg
inc
sub
xchg
pop
out
scas
jp
ljmp
adc
xor
add
sti
push
xorl
mov
mov
jae
jl
out
xchg
add
mov
in
jnp
mov
pop
loopne
add
mov
ret
shrb
in
jp
dec
cltd
sahf
mov
in
ja
insl
outsb
mov
out
arpl
push
mov
jp
loop
inc
scas
loopne
sub
dec
mov
mov
lret
sbb
repnz
insl
xchg
imul
cmpsl
add
stos
notl
pop
sahf
addr16
push
leave
hlt
push
stc
scas
push
jne
dec
test
int
lea
adc
imul
shlb
popa
pop
negw
sub
test
ret
lock
out
mov
dec
fcoml
addr16
dec
mov
loop
subl
imul
add
push
sub
rol
cwtl
movsl
mov
sub
sub
ret
sti
out
pop
bnd
mov
and
fmuls
rcrl
jnp
ljmp
popf
pushf
jg
outsw
jge
pop
xchg
aad
adc
popa
inc
mov
pop
test
fldt
imul
ja
add
pushf
enter
dec
jge
test
rcr
mov
sub
rorl
cltd
cltd
push
adc
add
inc
arpl
jg
xchg
stc
out
sbb
ljmp
out
inc
rcll
push
cld
movsb
ficompl
test
push
dec
mov
dec
fstp
mov
add
pop
pop
std
insb
jnp
mov
cs
jle
incb
scas
mov
sub
sti
cmc
mov
xchg
repnz
xor
stos
xchg
js
sbb
sub
shlb
fcoms
outsl
mov
pop
lea
js
push
sti
pop
push
lea
nop
inc
inc
push
nop
jne
adc
inc
fadd
inc
int
nop
xor
fldenv
arpl
mov
xlat
or
loop
ja
pop
sbb
movsl
jb
jnp
test
jns
add
jae
rcl
inc
mov
and
in
inc
adc
sti
das
movsl
adc
pop
cld
imul
pop
add
sti
dec
push
xchg
xor
mov
adc
push
xor
mov
cmp
test
xor
out
out
sti
jecxz
out
jl
xchg
addr16
mov
pusha
aad
xor
lds
pop
cld
jl
cmp
jecxz
je
pop
xchg
push
into
adc
pop
loope
push
sub
adc
xor
jns
mov
or
jo
inc
sbb
push
push
sti
outsl
add
add
or
add
in
imul
test
pop
loope
adc
cmp
sbb
push
in
jmp
out
xabort
movb
sbb
or
xor
insb
jle
jae
rorl
sbb
ret
mov
and
sbb
pusha
outsl
pop
imul
rcrb
cmpsb
insb
sub
or
mov
inc
inc
xchg
xor
inc
pop
push
sub
xchg
push
loopne
lcall
in
cli
cltd
cmp
out
sbb
loopne,pt
int
mov
setg
sub
dec
cmp
cld
and
gs
insl
inc
adc
testb
or
push
add
jne
cltd
call
shl
mov
test
sahf
jp
fcompl
add
lret
sub
push
jne
repnz
scas
adcb
cmp
xchg
fsubr
jmp
stos
int3
gs
and
inc
jmp
std
outsb
bound
xchg
push
sub
xor
dec
cltd
sarl
pushf
cli
test
jne
ret
xchg
mov
incb
ds
xor
test
cld
repz
jns
jnp
aaa
movsb
dec
push
add
jns
dec
push
push
inc
scas
jge
fs
xor
mov
les
pop
negb
clc
loope
xchg
call
inc
inc
ja
test
stos
popf
mov
push
and
lret
stos
std
gs
out
mov
stos
add
jo
loope
inc
nop
aam
mov
movl
test
lahf
push
or
cmpsl
pop
lock
dec
push
rcrb
mov
jno
aas
cmpsl
addr16
test
es
mov
icebp
add
pop
mov
xor
mov
sbb
push
ljmp
into
cmc
add
cltd
loop
pop
subb
jle
or
ret
mov
mov
shl
decb
xor
stc
insb
pop
sbb
shlb
jo
mov
jp
and
jg
leave
les
mov
xchg
add
mov
out
sub
repz
mov
inc
orb
mov
in
pop
adc
rorb
sahf
stos
data16
scas
xchg
mov
mov
sbb
inc
sub
mov
jg
sub
add
das
pop
mull
enter
dec
mov
and
mov
das
jno
fmuls
sbb
sbb
fisubl
jle
adc
aad
lds
adc
push
cmpsl
or
push
popa
popa
das
add
in
adc
pusha
sub
jne
mov
ds
test
imul
int
lods
lock
add
mov
fcmovu
pop
xchg
pop
rcrl
frstor
sub
jne
pop
sbb
repnz
lcall
lret
mov
std
xchg
jmp
shlb
mov
dec
mov
adc
cwtl
cmp
adc
inc
sbb
fimull
jmp
sub
sbb
and
mov
jbe
daa
mov
xorb
aas
mov
popf
mov
mov
iret
xchg
mov
cmp
pop
mov
sbb
mov
pop
xchg
and
popf
insb
mov
inc
das
inc
stc
or
js
jae,pt
dec
adc
mov
adc
mov
jge
cwtl
add
aas
nop
cmp
shl
sub
jo
addr16
lret
ja
fmuls
jmp
jmp
adc
cli
into
add
pop
adc
sub
mull
jo
xor
roll
ja
jecxz
int
dec
jl
lret
shl
cmp
out
scas
jbe
cmp
fdivs
inc
sbb
test
cltd
sti
push
aaa
cmp
stc
subl
mov
out
jae
mov
in
xchg
or
je
pushf
or
and
pop
and
sbb
mov
addr16
adc
mov
sbb
lret
scas
push
mov
jp
clc
pop
push
cmpb
and
mov
out
jae
push
pop
rorl
inc
push
jge
clc
push
mov
lds
mov
icebp
daa
int3
pushf
aad
in
mov
lea
adc
cltd
adc
sub
shll
add
clc
pop
test
int
add
cli
xor
testl
ja
add
mov
fcoms
lahf
inc
in
out
push
jge
dec
leave
push
mov
std
fnstsw
adc
xor
sub
mov
mov
push
jle
shll
pusha
std
cmc
clc
fcomps
sub
mov
mov
ss
cmp
xchg
out
xlat
iret
hlt
mov
cmp
or
fldenv
mov
cmp
jmp
testb
xor
cmp
shl
stos
inc
and
mov
add
scas
ret
xchg
das
jecxz
push
or
insb
or
popf
add
or
push
or
rcr
and
icebp
dec
mov
cmp
push
cltd
insl
push
adc
lret
data16
push
orb
ret
cmp
lret
scas
cmpsb
pop
or
fnstenv
adc
sub
hlt
mov
jle
dec
sub
call
jg
movb
mov
ljmp
imul
into
in
add
mov
fdivr
test
mov
mov
cli
in
cltd
dec
cmp
outsl
sti
push
testl
or
cmp
cmc
xlat
xorb
aas
sbb
add
fdiv
mov
jge
mov
filds
mov
jp
cmp
lret
imul
push
pop
popa
xor
dec
jne
scas
pusha
xchg
and
lock
mov
fs
repz
mov
push
xor
xchg
rep
sbb
inc
lods
in
or
push
and
roll
sub
dec
sti
sbbb
xor
into
jmp
sbb
dec
inc
call
mov
ret
in
pushf
xor
nop
loop
mov
mov
xchg
pop
lret
jno
loop
lret
mov
cwtl
sub
nop
std
inc
dec
dec
stc
nop
repz
inc
or
bound
lret
sub
mov
jg
xlat
jno
adc
data16
andl
int3
inc
lea
push
jo
test
pop
xor
pop
aam
cmp
es
cmpsl
out
mov
fisubrs
and
sbb
dec
insl
popw
jno
push
jmp
xor
mov
in
inc
pop
cld
repz
or
or
xor
nop
and
mov
popf
mov
push
inc
aad
add
or
pop
cmpsl
fcmovne
lret
xchg
adc
insl
cmpsb
outsb
sti
mov
pusha
xchg
mov
xor
out
mov
subb
dec
pop
fdivrp
leave
jmp
test
rol
inc
lcall
adc
xor
sub
je,pn
jo
jo
cmc
fdivrl
mov
decl
dec
xchg
and
dec
lods
adc
cld
fdivs
ror
jg
jo
or
sbb
popa
adcl
add
ja
call
fistps
es
shlb
inc
enter
add
mov
ja
inc
outsb
mov
adc
and
test
mov
jbe
pop
mov
rcl
mov
cmp
stc
call
out
imul
xchg
leave
mov
lret
pop
lock
cmp
aas
mov
outsb
sub
xchg
or
pop
stc
push
sahf
jnp
test
das
mov
sub
fildl
fucompp
mov
es
inc
fiaddl
or
mov
popf
insb
test
mov
cltd
scas
aas
or
mov
flds
ds
dec
sti
fs
aas
mov
outsb
imul
test
shlb
inc
push
cwtl
loopne
dec
xchg
es
divb
call
dec
xlat
xor
and
cmp
sbb
and
xorl
test
sarl
shl
mov
mov
leave
pop
cmp
div
dec
dec
das
dec
dec
push
mov
mov
sub
aad
lret
inc
leave
sbb
and
mov
imul
or
lahf
mov
mov
mov
icebp
push
cmp
or
mov
scas
sub
lea
repnz
jle
aas
push
push
enter
jecxz
add
call
ja
xchg
or
test
mov
and
movsl
gs
fcompl
outsl
push
pop
push
sub
inc
leave
pop
rolb
loopne
sbb
add
repnz
mov
es
pop
jecxz
mov
xlat
aam
mov
enter
jp
sbb
int
dec
jge
mov
push
xchg
mov
int
repnz
insb
mov
insb
pop
push
cmp
sub
and
scas
jns
fwait
andb
pushf
and
inc
inc
sub
jecxz
and
xchg
out
add
jl
ficoml
cmpsl
cmp
inc
jp
or
lods
mov
mov
je
es
jo
or
jne
dec
lock
sahf
addb
pop
in
mov
xchg
out
imul
inc
popf
mov
xchg
shll
sub
inc
stc
jns
jmp
int
add
mov
outsl
pop
sbb
jo
mov
call
cli
cld
bndldx
jb
je
test
xchg
mov
xchg
mov
adc
mov
cmp
sarb
mov
cltd
mov
jo
add
pushf
sbb
xor
jg
in
pop
rcrb
dec
arpl
scas
pop
lock
addr16
aaa
jecxz
inc
in
sbb
lea
add
lahf
mov
lods
fst
mov
icebp
and
fwait
aad
fldenv
push
dec
add
ljmp
int
xor
fdivs
jmp
xor
xchg
or
add
mov
das
and
add
mov
arpl
jle
and
jle
sahf
stos
repz
les
xorb
stc
mov
push
hlt
lea
sbb
sti
cmp
push
mov
mov
push
mov
and
test
jbe
je
scas
pop
jmp
pop
mov
frstor
lahf
jnp
ljmp
ffree
gs
aad
adc
pop
jmp
shr
sbb
jmp
push
call
jo
rcrl
jbe
imul
repnz
lret
mov
cmpsl
inc
mov
xchg
das
fistl
mov
imul
inc
icebp
sbb
or
in
dec
fsubrs
jbe
in
add
lret
aas
mov
mov
or
mov
push
push
lock
shll
push
stos
shlb
lcall
jb
cmp
cmp
xor
loopne
sub
mov
loopne
mov
mov
mov
push
mov
outsb
sub
popa
test
sbb
dec
mov
addr16
lret
sbb
int
mov
mov
mov
jnp
loopne
lret
jnp
cmp
push
xor
dec
in
fs
pop
mov
lds
xchg
xadd
xchg
ret
aad
int
iret
adc
mov
lods
and
dec
ljmp
inc
pop
cltd
sub
test
aaa
push
sbb
jp
cmc
lret
in
sbb
push
rolb
into
mov
iret
mov
jge
pop
movsl
sbb
pop
cmp
imul
out
out
inc
sbb
lods
sub
sar
into
test
sub
dec
add
hlt
and
aaa
jnp
sbb
mov
sbb
lahf
inc
jbe
add
pop
mov
pop
dec
fdivrs
andb
push
mov
mov
faddp
or
mov
mov
adc
jg
data16
int
stos
subl
aad
inc
dec
rolb
mov
movsb
cltd
lret
mov
mov
jge
pop
sub
lods
rorb
adc
ret
cwtl
adc
in
iret
jno
mov
xchg
pop
shl
mov
aaa
mov
addr16
pop
testl
js
jbe
jbe
cwtl
cld
sti
adc
popf
aad
adc
xor
fildl
sbb
or
nop
mov
mov
pop
test
int3
test
mov
cmc
scas
dec
cwtl
arpl
jg
sbb
ja
ret
in
push
or
popf
xor
and
ljmp
push
cmpb
inc
mov
lcall
pop
mov
dec
sti
and
stos
xor
subb
call
pop
jp
arpl
clc
mov
je
mov
mov
out
add
mov
fsubrl
push
loopne
mov
sbb
mov
lock
mov
divb
insl
sbb
ds
aaa
pop
mov
inc
sub
xor
lea
sbb
aaa
mov
add
xchg
into
pop
xor
pop
cmp
test
mov
xchg
fisubl
jnp
pop
out
add
stc
lret
movsl
push
pop
cld
xchg
dec
mov
mov
xchg
cld
in
and
bound
into
mov
add
xchg
sahf
add
sbb
insb
adc
fistps
repz
jbe
or
shlb
push
mov
adc
fistpll
movsl
mov
rcrb
inc
ret
inc
out
xchg
fdivrl
fbstp
pop
cmpsl
mov
add
push
test
xlat
or
cltd
fwait
push
adc
clc
sbb
xor
mov
push
insb
mov
jp
lods
inc
aam
dec
cmp
fwait
inc
mov
das
jnp
leave
lcall
pop
xchg
incb
jl
mov
mov
adc
cltd
lret
pop
faddl
or
into
jne
mov
cld
into
or
out
out
es
and
jne
out
enter
push
inc
outsl
fwait
adc
test
mov
repz
inc
jmp
pop
dec
cmpsb
inc
cmp
pop
add
out
fmull
sub
or
lea
je
pusha
inc
aas
jns
or
jo
leave
ret
leave
jge
adc
test
push
inc
adc
fcmove
inc
lods
enter
add
dec
add
add
and
or
sub
insl
rolb
subb
dec
cmpsb
mov
and
inc
dec
enter
shll
adc
add
add
test
push
or
mov
scas
andb
insb
adcb
enter
ficoms
mov
in
out
dec
popa
fisubs
mov
divl
pushf
int3
mov
sub
pusha
dec
sub
scas
fwait
cmp
repz
scas
sahf
stos
repz
stos
stos
or
and
jge
mov
decl
iret
mov
rorl
stos
dec
mov
pop
fdivs
add
sub
inc
inc
push
xchg
fs
dec
xor
dec
das
lahf
mov
lock
loope
fcmovnb
cmp
outsb
ljmp
and
sbbl
fldl
add
ds
arpl
arpl
sti
lret
sbb
outsl
cltd
fucomip
xor
scas
and
in
int3
je
imul
daa
test
out
lds
push
mov
lds
or
or
xor
and
jg
ret
mov
cmp
adc
fs
xor
jl
push
dec
mov
cld
xchg
mov
cld
pop
jae
add
or
aad
mov
inc
stc
adc
push
fbstp
test
je
and
cmp
sub
cmp
imul
pop
lret
sub
or
aas
mov
inc
pop
lods
xchg
push
addl
xor
call
push
mov
sub
jmp
or
mov
out
nop
push
or
adc
jo
test
int3
aad
shrl
les
push
or
das
sub
outsb
imul
mov
xlat
pop
mov
and
stos
pop
int
or
add
cmp
or
sub
cmpsl
les
je
cmc
icebp
mov
push
fnstsw
sbb
stc
ret
dec
lea
pop
inc
add
aam
fbstp
lcall
cmp
out
sarb
push
rcl
fwait
add
push
xor
sub
and
and
push
add
pop
inc
pushf
nop
ljmp
outsb
ss
inc
neg
push
je
mov
jle
sbb
cltd
dec
jp
pusha
fs
mov
or
cmp
or
cli
sub
data16
gs
test
sarb
xor
cmp
nop
jecxz
push
mov
jecxz
jne
out
dec
push
mov
imul
cwtl
mov
mov
push
push
jmp
dec
int
push
lods
mov
add
fwait
add
outsb
das
mov
xchg
lcall
push
shll
jae
or
xor
ja
xchg
fildll
dec
mov
cwtd
mov
xor
ds
mov
pop
lcall
push
cltd
sub
cwtl
jno
movsb
lret
les
fldt
or
mov
mov
mov
incb
or
fcmovnbe
inc
subb
jb
roll
jae
shrb
jbe
jns
sahf
in
adc
pop
push
inc
xchg
xchg
hlt
cmc
adc
sub
mov
mov
inc
mov
push
xlat
mov
pop
addr16
stos
pusha
inc
inc
icebp
sbb
mov
mov
mov
jecxz
adcb
and
loopne
and
mov
fdivrs
mov
and
cmp
je
mov
push
fucomi
jbe
movsl
adc
ret
mov
and
xchg
in
in
test
enter
lods
ss
sbb
out
imul
sbb
sar
shlb
arpl
test
dec
js
add
in
jno
fimull
out
add
cmp
adcl
fisttpll
pop
sub
jns
push
scas
daa
arpl
in
mov
inc
insb
mov
mov
fisttpl
sahf
jge
push
xor
out
mov
mov
movsl
cmp
mov
out
popf
sub
mov
and
dec
loope
idiv
dec
outsb
push
fdivrl
stos
cmp
or
rorb
mov
add
mov
and
add
jecxz
into
inc
add
xchg
call
and
sbb
adc
xchg
inc
inc
cli
dec
xor
dec
mov
notb
sbb
sbb
inc
addr16
xor
repnz
repz
call
lods
mov
stc
das
lods
inc
inc
jnp
adc
mov
push
cmc
add
xchg
dec
out
jne
or
push
fimuls
push
mov
add
outsl
das
sub
pop
popl
or
xchg
loope
inc
inc
xchg
sbb
inc
or
pop
mov
into
inc
or
cmp
into
lahf
adc
dec
jg
mov
add
ficomps
test
stos
mov
inc
movsl
loopne
cmpsb
mul
mov
sbb
popf
or
mov
jg
loope
mov
and
aas
adc
pop
push
jge
push
jge
sbb
pop
stc
dec
mov
stos
or
call
fwait
test
addr16
push
mov
sbb
into
cmc
cmpsb
movsb
mov
sbb
incl
jmp
push
stos
imul
and
bound
pop
mov
xor
inc
mov
pop
or
jae
insl
add
ficoml
mov
pop
add
add
dec
icebp
mov
and
cmp
mov
mov
repz
ja
pop
pop
and
pop
and
pushl
ljmp
in
xchg
xor
pop
mov
ret
mov
mov
repz
push
pop
jo
loop
adcl
ja
mov
negl
mov
xor
cmpsl
push
and
mov
stc
adc
insl
xor
cmp
icebp
inc
sbb
jne
adc
sti
adc
mov
stc
and
add
sub
inc
xor
test
mov
imull
ds
ljmp
mov
pop
mov
xor
in
arpl
cmp
aas
insl
adc
xchg
xchg
push
xlat
mov
inc
push
push
js
loope
xor
lret
insb
mov
orb
ror
icebp
ja
xchg
enter
loop
sub
mov
pusha
push
pop
dec
adc
test
pop
cmp
dec
xchg
cmc
push
mov
pop
ficomps
rorl
mov
popa
les
nop
fidivs
or
inc
add
mov
lahf
ja
push
mov
gs
push
sbb
sub
mov
shll
aaa
jns
aaa
jle
lods
loope
push
mov
inc
lods
inc
push
cltd
and
xchg
sub
pop
cwtl
xor
insl
jb
add
inc
shlb
dec
aas
mov
andb
lds
mov
ret
dec
gs
mov
ret
insb
mov
loope
or
imul
add
lds
mov
mov
xor
dec
cli
xor
pop
inc
ss
shlb
fwait
and
out
add
insl
jbe
inc
mov
mov
cmp
push
pop
mov
fisttpl
movsl
sub
rcpps
pop
lret
aaa
mov
dec
ljmp
ficoml
pop
mov
out
cmp
inc
aaa
jg
movsb
ss
addl
cmp
outsl
push
cld
call
push
or
addb
push
push
xchg
xchg
mov
mov
and
xchg
sbb
xchg
dec
js
pop
movsb
mov
ret
mov
xchg
inc
cmp
jb
fcmovnu
mov
jle
mov
call
jo
imul
lret
and
mov
and
lahf
test
inc
nop
imul
pop
movsl
cs
clc
dec
lcall
or
jecxz
mov
popf
xchg
mov
in
stos
add
lock
enter
dec
jbe
sbb
push
mov
in
call
inc
or
and
xor
hlt
fimuls
aaa
rcll
sbb
mov
or
sbb
xchg
jle
push
pop
add
scas
cltd
popf
out
mov
test
adc
icebp
movsl
testl
pop
sub
mov
push
cltd
aas
add
dec
pusha
fstps
inc
jbe
out
std
in
sbb
stc
gs
arpl
shlb
pop
pop
xchg
andl
fstpl
pop
mov
add
mov
jnp
insl
dec
mov
xchg
in
mov
ret
push
push
pop
enter
movsl
pop
pop
icebp
jae
add
pop
inc
pop
lcall
mov
and
outsb
out
dec
sub
not
cmp
psubsb
in
loope
psubsw
or
clc
pop
aad
mov
in
sbb
cmp
movsl
loopne
sub
adc
cmp
sbb
lock
xchg
scas
in
test
lock
push
jecxz
pop
call
stc
adc
xchg
cli
mov
jle
lock
mov
inc
jle
mov
test
in
outsl
in
dec
rol
int
xor
mov
nop
adc
jg
scas
sarl
jp
adc
in
adc
adcb
rclb
cmc
xchg
enter
loop
imul
loopne
jmp
popf
cmp
rol
movhps
or
stos
add
lcall
and
in
sbb
incl
adc
mov
in
shll
mov
adc
sarb
jae
and
pop
pop
and
neg
inc
fidivrs
mov
fimull
lret
mov
mov
adc
dec
sub
int
mov
xor
js
in
xor
fnstsw
jb
cmp
aas
out
dec
and
mov
mov
push
loopne
cmp
mov
sbb
addb
mov
push
jmp
push
fildll
xor
push
dec
jno
sub
push
pop
mov
xchg
push
push
mov
into
mov
jge
xchg
xor
into
mov
ljmp
loop
rolb
pop
cmp
repnz
and
push
dec
add
push
or
dec
or
out
inc
fcom
leave
xor
xor
lds
or
sti
je
cmp
pop
adc
lcall
xchg
mov
push
call
mov
fisubrl
into
mov
sahf
xor
mov
xor
repz
idivb
mov
dec
std
pop
mov
insl
fidivl
jno
or
dec
mov
loope
xor
push
fsubrl
jb
pop
sarb
push
les
shll
roll
sbb
scas
jge
mov
and
into
movsl
add
cmp
lahf
sub
xor
adc
insb
mov
and
aam
pop
cmp
in
iret
ds
insl
add
mov
mov
mov
xchg
push
cmc
jno
lahf
insb
push
es
jle
addr16
f2xm1
xchg
rorb
scas
sbb
in
jmp
mov
lock
cli
xchg
xlat
sbb
or
aas
movsb
cwtl
out
and
out
xchg
xchg
push
push
xchg
xchg
fiaddl
xchg
add
or
push
or
les
sarl
mov
add
insl
or
dec
in
xor
fstpl
mov
xlat
pop
sarb
push
dec
std
and
addr16
inc
push
leave
ds
inc
out
mov
subl
ljmp
jns
in
daa
sbb
negl
pop
loope
mov
fstpt
cmp
add
ljmp
lret
xlat
cpuid
int
hlt
addb
sub
mov
inc
pop
xlat
jbe
scas
push
lods
inc
lret
sti
mov
mov
mov
dec
fsubp
in
pop
push
mov
jne
aad
mov
std
push
push
mov
jnp
cwtl
jbe
cmp
xlat
sbbl
pop
fdivs
in
mov
cmp
hlt
inc
lahf
dec
fildl
mov
mov
add
les
int3
add
in
xor
xchg
add
lret
sbb
and
sbb
push
mov
pop
cmp
jle
mov
sbb
jmp
inc
adc
movsb
pop
outsb
push
lret
mov
push
loop
add
cmp
sahf
cmp
pop
lcall
ljmp
cmp
pusha
jno
cwtl
mov
dec
and
je
stos
nop
xlat
mov
mov
pop
xor
into
rolb
xchg
adc
inc
mov
ss
fsubl
mov
jno
xchg
pop
xchg
sbb
ds
out
or
lock
cs
icebp
outsl
jge
mov
jecxz
cs
jne
insb
jb
mov
mov
pusha
adc
add
stos
es
sub
xchg
pop
sub
out
mov
je
scas
ljmp
cld
shl
or
sarl
lea
dec
ror
call
ja
mov
decb
ljmp
xchg
xor
ja
das
pop
cld
dec
ret
adc
mov
ss
loope
in
mov
push
fadd
or
ficoms
insl
test
or
mov
pop
cmpsl
aaa
loope
outsb
out
repnz
bound
cli
mov
sbb
sub
mov
mov
shrb
js
into
xor
push
cs
jmp
pop
xchg
imul
leave
faddl
lds
sbb
mov
addr16
add
fmull
sbb
cs
dec
cmp
xchg
mov
pop
test
or
xchg
in
clc
nop
pop
paddusw
aad
cmp
dec
pop
loope
cld
pushf
mov
out
movsb
push
pop
andb
sub
jecxz
movsb
clc
xor
shl
std
ret
sti
dec
mov
stc
mov
movsl
inc
popa
pop
loopne
jl
inc
out
mov
test
push
imul
mov
xchg
adc
xor
imul
cmp
push
les
xlat
add
cltd
out
jmp
or
imul
adc
out
data16
add
stc
mov
add
inc
jnp
stc
imulb
flds
xchg
push
push
mov
in
int3
mov
test
pop
pop
iret
scas
inc
push
ds
arpl
push
inc
andb
or
mov
mov
or
cmp
hlt
sbb
loope
mov
and
push
enter
dec
aaa
sub
test
jb
push
bnd
inc
sti
es
pop
mov
ja
cmp
or
lret
idivl
xchg
movsb
vxorps
cmpsb
popf
ljmp
or
pop
lcall
or
test
sub
mov
xor
add
sbb
mov
in
insl
add
and
out
in
enter
mov
fidivs
cmp
push
push
mov
in
mov
popf
test
pusha
enter
sbbl
jo
xchg
imul
cltd
shrl
adc
cmp
leave
cltd
jg
mov
test
in
test
sub
cwtl
or
mov
adc
jecxz
in
push
add
sahf
stos
pop
inc
sub
arpl
hlt
adc
xor
fcomip
aaa
xor
mov
call
mov
pop
mov
dec
pop
shrb
sub
hlt
fsubs
icebp
daa
sbb
lret
xlat
ljmp
ret
dec
xchg
and
lods
mov
std
pop
lahf
xchg
adc
dec
psubd
adc
es
adc
pop
cwtl
fmuls
stos
rol
in
push
pusha
daa
mov
xlat
pop
out
pop
pop
mov
or
jl
data16
jns
test
push
jae
sbb
jb
fcomps
inc
cmpsl
in
decb
repz
popf
rorl
sub
fbld
add
out
daa
push
dec
jmp
cmpsl
ds
lods
xchg
out
push
mov
call
dec
jle
insl
js
ds
mov
push
or
xor
clc
in
push
cmp
int
mov
cmp
sbb
or
lods
or
mov
lcall
divl
fidivl
inc
in
roll
orb
cmp
lea
sub
scas
pop
pop
and
sbbl
pop
imul
les
lock
ds
cmc
pop
xlat
pop
test
icebp
daa
dec
cmpsl
imul
or
loope
add
mov
mov
fistpll
push
dec
pushf
fwait
das
dec
cmp
sti
pop
inc
das
lret
imul
mov
jecxz
test
aad
mov
std
xor
cmp
sbb
outsl
fs
lret
sub
xchg
push
mov
xchg
cwtl
movsl
daa
push
das
dec
sub
xor
dec
jo
push
sbb
mov
aaa
iret
mov
scas
push
mov
or
out
inc
mov
movsb
xlat
cld
xor
fstl
rorb
adc
mov
mov
mov
test
lahf
dec
inc
xchg
jge
cmpl
stc
icebp
jp
mov
adc
imul
out
cli
daa
in
push
jbe
and
fwait
aam
dec
call
push
ret
icebp
adc
xchg
fadds
fldenv
xor
pop
iret
clc
in
mov
jge
xchg
icebp
inc
mov
push
add
adc
movsb
xchg
cmpsl
into
mov
int
jo
jg
nop
ja
pop
enter
and
add
and
mov
fbld
out
pop
fs
stc
notb
sbb
xchg
iret
xlat
cmp
out
aaa
push
imul
mov
mov
push
lret
movsb
xchg
sahf
inc
xchg
pop
adc
xchg
test
mov
inc
into
jns
sbb
push
lcall
out
sti
mov
sub
push
dec
adc
xor
fcmovne
inc
lock
ret
xchg
pop
insb
in
cli
in
lret
push
ror
addr16
or
mov
lods
add
sub
rcr
movsb
movsl
mov
push
lea
mov
push
stos
jne
mov
lea
sbb
sti
clc
fs
and
iret
xor
rclb
sub
jp
ficomps
sti
lods
movsb
mov
mov
shrb
andl
daa
repz
mov
sti
sbb
dec
add
stos
adc
jmp
pop
inc
mov
hlt
sti
insl
cld
and
mov
cmpsl
inc
rorl
int
inc
sbb
lea
jmp
fildl
loope
cmp
fimuls
aad
ud0
cmp
inc
iret
aas
cmp
int3
inc
mov
sub
scas
lods
or
iret
loopne
push
les
jae
sub
leave
in
jbe
addb
test
iret
lcall
mov
rclb
cmp
xor
insl
mov
and
call
push
jp
xchg
xor
pop
popl
cs
sub
jne
repnz
mov
jnp
dec
dec
mov
mov
andl
mov
imul
lds
mov
test
add
xor
cmpsb
jle
add
mov
pop
or
call
adc
cmp
ja
jae
int
mov
or
inc
xchg
test
xor
int3
xor
push
mov
inc
xchg
loop
dec
dec
inc
and
nop
out
mov
cmp
int3
cmpl
mov
es
jno
inc
mov
cmc
and
jmp
inc
xchg
cs
mov
stos
fnstcw
pushf
mov
wbinvd
add
xor
shrl
roll
movsb
lcall
and
popf
divl
das
cmp
mov
sbb
test
pop
sub
sub
fucomip
movsb
mov
cltd
dec
sub
cmp
xor
lods
repz
jne
mov
js
call
dec
cwtl
out
lahf
jns
nop
mov
clc
mov
je
jb
pop
rcll
addr16
push
stc
aaa
enter
jb
mov
repz
mov
or
pusha
jo
clc
add
je
jnp
dec
mov
add
xor
rcr
cli
xor
push
subb
cli
inc
mov
shrl
mov
or
push
negb
scas
lret
cmpsb
mov
push
add
mov
adc
sbb
mov
cli
mov
in
xor
cmp
insl
dec
xchg
pop
cmp
adc
popa
and
cld
sbb
out
shl
lret
leave
mov
mov
push
and
mov
mov
insb
dec
mov
jnp
sahf
mov
test
adcb
dec
fs
roll
pop
jle
js
lahf
xchg
dec
xchg
inc
scas
insb
ja
push
jnp
xor
mov
add
test
push
int
in
jmp
xlat
fidivs
sbb
dec
insl
fmull
jg
lods
sbb
add
mov
push
cwtl
xchg
scas
lahf
stos
add
popf
outsb
or
aas
xor
stos
cmpsl
cmp
jmp
mov
pop
jl
sub
dec
cmp
cltd
adc
fdivs
loopne
sub
cmpsl
xchg
ret
push
push
pop
and
movsl
sub
gs
ja
push
xchg
ficompl
push
loop
fcomps
cld
sbb
sbb
movsb
mov
imul
stos
inc
and
jg
and
push
ljmp
fildll
pop
in
mov
xor
sbb
hlt
cmp
loopne
and
xchg
lods
cmp
xlat
cld
cmc
jp
jo
jmp
outsb
push
fidivs
out
sbb
enter
push
sbb
dec
and
push
addb
mov
fisttpl
jbe
jmp
daa
out
icebp
mov
sub
jp
mov
shrb
jns
sub
fimull
aam
arpl
jns
mov
mov
mov
les
mov
shrb
in
jae
ret
dec
fiaddl
cmp
out
stos
stos
sub
int3
out
out
mov
lret
sbb
mov
fwait
scas
or
je
test
scas
hlt
pushf
insb
or
or
and
sbb
jbe
sub
stos
movsb
into
mov
in
arpl
hlt
arpl
cmp
sub
std
mov
insl
and
movsb
out
add
test
call
fdivrs
push
imulb
xchg
or
sub
cmc
pop
loopne
dec
mov
fcomp
subb
pop
pop
loop
push
test
xchg
or
lahf
adc
daa
lret
cmp
inc
shrl
ret
or
fiaddl
add
sub
fwait
cmp
jp
addr16
adc
ss
jne
aaa
gs
or
cmpb
xchg
xchg
inc
enter
push
inc
pop
cmp
inc
xchg
xchg
dec
rclb
adc
divb
movsb
outsb
add
push
hlt
mov
jle
or
stos
sub
pop
fst
mov
nop
ret
outsb
cmp
xor
sbb
or
and
je
jge
scas
pop
push
or
test
or
push
stos
xor
sti
das
ds
scas
jg
int
loop
jae
mov
arpl
jmp
lods
xor
inc
cld
dec
je
mov
jge
pop
fwait
addb
jp
cmp
mov
or
aaa
icebp
or
xchg
test
enter
xlat
pop
jae
out
cld
xlat
cmc
test
jmp
xchg
and
ficoml
jge
les
mov
xchg
test
lret
rclb
or
daa
xchg
sub
lds
sbb
inc
or
xchg
inc
cld
adc
sbb
xchg
or
mov
lcall
dec
rcrl
pop
dec
shlb
dec
aam
and
mov
out
sub
pop
dec
je
testl
adc
fwait
scas
movsl
adcb
stos
mov
sbb
leave
fldenv
jo
and
sub
nop
pop
insl
pop
popf
mov
arpl
cmpsl
pop
mov
jmp
stc
int3
ljmp
repz
fstpt
mov
jnp
mov
in
enter
jnp
or
inc
pop
clc
push
xor
aaa
jnp
or
cltd
inc
into
push
jb
cmpsb
push
pop
mov
add
stos
movsb
xor
in
cmp
outsl
mov
adc
loop
jae
dec
mov
lret
jmp
mov
adc
or
into
hlt
jl
pop
push
scas
jle
pop
xor
push
push
fldl
dec
rcrl
divl
dec
cmp
fs
outsl
add
cmp
mov
mov
add
dec
addb
pop
jg
out
xchg
js
pusha
push
and
sti
push
cmp
xlat
ds
and
addr16
fildll
fwait
dec
sub
inc
sbb
dec
ret
cmc
adc
in
push
jno
xlat
gs
mov
jmp
pop
xor
dec
lock
in
cmpsb
jl
adc
jmp
pop
addb
jae
mov
pop
loop
xchg
or
sbb
xor
inc
xchg
movsl
push
jp
fsqrt
loop
aam
scas
ja
pop
push
in
shl
sahf
test
add
shll
test
push
aam
xchg
jg
or
adc
sbb
jle
sbb
xchg
push
in
adc
sbb
xchg
in
sahf
xchg
testl
decb
adc
xor
out
push
out
test
cmpsl
data16
das
dec
xorl
pop
int
es
filds
aam
aaa
mov
or
jl
test
jae
andb
mov
mov
inc
data16
pop
insb
aaa
xor
sti
xchg
jecxz
outsb
outsb
or
ret
sub
sub
daa
lcall
icebp
push
call
mov
mov
dec
fistpl
incb
fiadds
adc
cwtl
cwtl
cli
movsb
and
insb
cmp
mov
and
jno
test
stc
xor
mov
mov
push
faddl
fdivrs
xor
cmpsl
jp
adc
mov
fmull
lods
add
enter
rcrl
pop
cltd
lcall
jl
inc
leave
pusha
hlt
or
pop
ret
loopne
mov
pop
jbe
pop
or
pop
int3
out
xchg
mov
lock
or
je
in
mov
add
outsl
or
dec
sbb
fisttpl
mov
sbb
xlat
dec
aam
and
loope
stc
call
mov
ds
js
cmc
sub
push
mov
fs
mov
add
lret
or
dec
pusha
pop
xor
adc
les
inc
xchg
and
xor
mov
add
test
mov
or
dec
icebp
mov
subl
pmaxsw
pop
outsl
movb
nop
dec
dec
test
xchg
lds
xchg
cmp
dec
stos
xchg
rcr
jle
cmp
mov
dec
out
push
xchg
mov
std
xchg
dec
aas
pop
dec
shrl
jno
add
sbb
je
pop
and
xchg
sub
sub
and
mov
xor
add
fldcw
cmp
adc
adc
inc
mov
jnp
and
push
fcoms
cmp
cmp
adc
push
stos
ficomps
cmpsb
std
jg
pop
add
test
jmp
mov
scas
fists
pop
adc
sub
mov
sbb
mov
insb
xchg
in
pop
bound
ss
popa
lods
sbb
add
pop
rcrb
jp
sbbl
test
sub
insb
mov
ds
jbe
mov
lret
sub
and
jno
mov
sub
and
jbe
iret
fimull
fisubrs
loope
sbb
mov
xorb
mov
jbe
cltd
xor
clc
cmp
cmp
push
xor
je
inc
into
cli
add
dec
pop
stos
sbb
leave
xchg
xchg
stos
cmpsb
xlat
jnp
mov
mov
push
and
rcrb
jle
sub
mov
jge
sub
movsl
pop
pop
test
sti
mov
hlt
mov
mov
js
loop
cmc
jbe
jg
lret
lret
mov
jl
mov
insl
pop
mov
and
bound
or
stos
cmp
adc
dec
data16
pop
scas
inc
push
mov
dec
push
nop
imul
lcall
les
xor
lds
fwait
imul
cmpsl
fcomps
sarb
ljmp
push
testb
sub
aaa
xchg
aaa
loopne
jg
mov
lds
cmpsb
std
xchg
xor
pusha
adc
xchg
pop
stc
lods
cmpsb
mov
sbb
pop
sbb
loopne
or
push
pop
ja
pop
not
lcall
sarl
outsb
mov
pop
adc
push
lret
insl
in
cltd
adcb
scas
xor
dec
xor
fistps
cld
jecxz
insb
push
out
jns
out
mov
cmp
xchg
addr16
inc
test
in
in
sub
loopne
aam
hlt
mov
iret
mov
mov
xchg
out
mov
and
mov
add
cmpsb
insl
or
inc
inc
inc
or
aaa
scas
repz
adcb
or
filds
push
mov
inc
push
push
dec
pop
inc
push
test
lock
and
aas
and
rcrl
jae
repz
xchg
cmp
sub
sub
xor
out
in
push
xchg
adc
adc
jnp
daa
test
mov
sbb
jno
fists
or
cmc
popl
fimuls
cmp
jns
cmpsb
cmp
fstps
rcrl
cmp
ljmp
sahf
sarl
iret
sub
mov
jle
filds
in
jle
push
outsb
mov
and
scas
popa
ss
push
jae
pop
mull
pusha
bound
jne
dec
sti
stc
sub
sub
sahf
cli
mov
push
dec
mov
push
mov
and
test
jnp
xchg
jmp
xor
mov
aam
xor
push
sbb
je
fs
xchg
fwait
lds
xor
gs
lods
sbb
xchg
xchg
imulb
sub
mov
out
pop
sub
mov
mov
jbe
loopne
mov
xor
xchg
dec
xor
cs
clc
daa
je
movsb
shlb
mov
iret
js
jnp
push
lds
ljmp
aad
xchg
pop
test
fidivrl
mov
stc
lcall
test
push
mov
inc
in
add
xchg
leave
xchg
adc
pusha
pop
les
mov
js
lea
dec
pop
push
push
mov
enter
hlt
pop
ja
xchg
into
cmp
jp
add
cmp
orl
xchg
mov
aaa
mov
call
add
sbb
and
adc
pop
and
push
add
ss
outsl
js
or
and
adc
das
jnp
lods
das
add
mull
inc
mov
adc
sti
shll
xor
xchg
dec
js
je
lock
imul
xchg
cltd
ret
cmp
fidivrl
sbb
std
lahf
cmp
js
cld
xchg
pop
dec
js
clc
mov
addr16
mov
ljmp
mov
jg
mov
mov
lock
inc
in
jmp
add
cmp
mov
sbbl
ja
dec
or
cmp
out
enter
cmp
fwait
lods
push
cmpsl
shll
std
es
mov
pusha
hlt
out
pop
ret
and
loope
push
pop
and
lods
mov
and
ficoml
fucom
ss
push
inc
enter
mov
pop
es
call
add
jecxz
fdiv
dec
shrb
adc
mov
dec
jmp
nop
adc
mov
icebp
jl
insb
loop
inc
mov
and
int3
mov
sbbb
pop
sbb
inc
pop
xor
mov
popf
mov
call
incl
sub
lret
cmp
pop
stc
adc
and
lcall
add
or
icebp
push
mov
out
jnp
jg
xchg
daa
fwait
push
xchg
jle
pop
jae
fwait
pop
push
add
out
mov
sbb
xchg
rcl
mov
movsl
test
adc
loopne
fs
and
pusha
imul
sub
inc
mov
fbld
cmpl
iret
int
jg
mov
add
xor
xor
imulb
pop
pop
mov
cwtl
or
jle
xor
test
or
adc
sub
lret
xchg
mov
inc
jb
aas
dec
idivl
repnz
push
dec
cmp
mov
mov
push
and
mov
leave
jl
cs
filds
add
and
push
cmp
pop
lock
imulb
out
mov
ret
mov
mov
fsts
std
arpl
repz
out
sub
incb
xchg
jp
sti
push
data16
iret
cld
add
push
inc
pop
or
arpl
push
push
ss
and
sbb
into
jg
sbb
jl
jl
pusha
outsl
ret
es
cmpb
dec
mov
in
jne
push
subl
adc
inc
or
repz
mov
jl
jb
das
std
adc
stos
mov
and
cmpl
stos
adc
movb
aaa
inc
adc
cmpsl
jl
call
movsl
sbb
mov
into
std
adc
cmpsl
outsb
mov
jns,pn
dec
lcall
test
das
test
adc
clc
outsl
cmp
cli
cltd
xlat
and
cmp
sbb
adc
mov
mov
sti
xor
nop
mov
jl
test
cmp
mov
in
cwtl
test
test
fistps
icebp
pushl
add
test
dec
outsb
dec
sub
xlat
inc
mov
repnz
sub
jmp
ljmp
mov
cmp
notb
les
mov
sarl
stos
push
bsr
mov
outsl
aas
lret
cmpsl
stc
jecxz
arpl
pminsw
jmp
nop
cltd
int
into
std
nop
xlat
ds
jecxz
cli
xor
outsb
push
or
dec
mov
mov
pop
adc
loopne
cmp
int
movsl
cmp
scas
rol
sbb
fs
movsb
shr
mov
rcrl
dec
mov
incl
das
int
jle
adc
fs
cwtl
fsub
mov
inc
jo
jmp
pop
lret
pop
sar
lods
mov
push
inc
jg
lds
xor
hlt
mov
pop
loopne
cmp
or
mov
jns
inc
test
sahf
or
js
or
push
cmpsl
pop
test
lret
cli
aas
leave
rorl
jne
and
lock
loop
lea
jp
and
pop
cmpsl
popf
xchg
das
xchg
lods
test
cmpsb
out
cli
call
outsb
pusha
daa
push
imul
cmp
sbb
popl
int
dec
ret
cmpsb
aas
mov
pop
shr
jnp
lds
cmp
daa
and
xor
cmp
cmpsb
cmp
push
lcall
shr
push
sub
loope
pop
jne
mov
sbb
pusha
addr16
or
leave
fbstp
fsubrs
or
mov
js
stos
lcall
addl
push
jge
jae
aas
repz
lret
push
dec
xor
js
jnp
minps
nop
fs
lcall
arpl
inc
pop
dec
sub
sarb
test
mov
mov
daa
enter
fdivl
cmc
mov
inc
jb
stc
sarl
cld
and
nop
or
jbe
xchg
push
insl
fs
enter
sbb
fsts
frstor
mov
aas
sbb
jle
mov
and
into
dec
insl
pop
dec
add
sbb
add
jg
ja
xor
rclb
mov
and
sahf
push
subl
cmpsl
cwtl
cmp
stos
sbb
pop
stos
rcll
jo
jne
fwait
std
pop
lcall
popa
fsubr
test
imul
and
fmulp
iret
mov
loope
outsb
xor
push
inc
pop
dec
push
aaa
jl
xchg
jge
dec
lret
test
sub
mov
mov
shrl
sub
mov
pop
sbbl
sbb
iret
mov
stos
pop
pusha
cs
js
addr16
jmp
push
jbe
dec
adc
fildl
sbb
mov
lret
imul
jae
movzbl
das
jg
cltd
mov
mov
inc
rolb
mov
repz
inc
jmp
pop
adcb
sub
cmpsl
aad
inc
push
cmc
outsl
dec
mov
mov
pop
adc
add
mov
jmp
int3
push
pop
ror
icebp
repnz
and
sti
lds
pop
mov
clc
mov
dec
mov
mov
push
scas
push
xor
sahf
xchg
inc
insl
push
bound
mov
push
jecxz
popf
lods
imul
fisubrl
popa
cmc
sti
mov
das
pop
pop
aas
mov
pop
pop
movsb
sbb
insb
mov
xor
pushf
pusha
push
shrl
iret
in
inc
or
int3
xor
stos
cmp
jp
enter
sub
inc
lahf
lock
movsb
cmp
cmpsb
jae
push
cmp
subl
jno
or
test
dec
adc
xor
and
adc
xlat
in
aad
sbb
cmpsl
fdivr
mov
insb
test
hlt
mov
xchg
jns
xchg
nop
shl
add
push
jle
mov
lds
cmpsb
addr16
outsl
andl
jns
adc
pop
mov
jl
jge
xchg
imul
mov
add
fiadds
push
pop
out
scas
fcompl
push
push
repz
fs
xchg
pop
cmp
jae
cli
xchg
mov
into
cmp
add
xor
push
das
les
inc
sarl
out
fisubrs
and
fwait
das
pop
and
push
out
push
test
sbb
push
push
jbe
in
nop
cmp
xchg
je
mov
ljmp
pop
andb
rol
jp
lcall
xor
cmp
shll
pop
ret
lods
mov
mov
nop
xlat
xchg
pushf
and
imul
adc
cmp
cmp
adc
or
loope
mov
decl
add
stos
data16
ss
pusha
pop
xchg
pop
mov
xor
dec
std
pop
sti
inc
pop
sub
int
lahf
inc
push
inc
aam
push
sub
or
mov
jns
js
clc
aad
in
cmp
out
mov
fs
push
pop
fcoml
and
push
sarl
scas
jg
ret
jmp
shlb
imul
push
movsl
das
popf
mov
je
add
std
push
outsl
mov
aad
sub
push
in
std
loopne
fistpl
ljmp
fdivrs
jae
mov
shll
jbe
jne
fs
mov
xor
repz
outsl
inc
push
insb
push
les
cs
pop
stos
call
test
clc
or
push
int3
iret
mov
lock
in
jne
pop
int
sub
push
mov
cwtl
mov
lods
lods
call
test
xlat
jmp
jecxz
dec
add
shrl
fwait
sbb
fstpl
lret
jl
push
jae
ror
mov
mov
or
out
pushf
insb
dec
xlat
out
std
cmpsb
pop
loope
sbb
jge
dec
mov
bound
or
loopne
aad
mov
and
fmull
sub
rolb
inc
mov
nop
rcll
hlt
and
inc
sub
pusha
arpl
mov
cmpsb
subb
xchg
sbb
or
xor
sbb
cs
jbe
inc
enter
push
xor
jp
sbb
push
mov
gs
or
insl
adcb
push
loop
mov
test
in
jns
mov
rcll
jle
mov
add
mov
sbb
jle
in
push
xor
lret
jnp
sub
mov
pushf
add
enter
add
add
scas
mov
ds
clc
xchg
ficoms
inc
imul
repnz
xor
jns
adc
push
cmp
ljmp
js
adc
cwtl
ss
int
roll
jl
adc
fisttpll
xlat
in
xchg
insb
adc
iret
mov
flds
decl
cmp
xchg
not
pop
pop
jo
lods
mov
je
insb
js
xchg
cwtl
pop
jae
jb
push
xchg
mov
mov
ror
sbbl
ljmp
loopne
test
push
cmp
mov
addr16
mov
clc
cmp
and
cmp
into
ljmp
pop
jge
rorl
push
popf
cmc
pushl
test
int
ret
xchg
cmp
adc
jne
mov
and
ljmp
mov
or
or
xor
ficomps
mov
pop
mov
and
lea
cmpl
cli
jae
dec
idivb
cmp
mov
dec
mov
je
js
sub
fistl
imul
inc
xor
jns
iret
pop
ds
sti
dec
push
add
daa
test
cs
push
ficomps
and
sbb
test
mov
sbb
enter
xor
mov
pop
pop
shrw
movsb
fldl
push
inc
cltd
loopne
rorb
cmc
and
or
fidivs
ljmp
std
pop
insb
dec
mov
lods
int3
mov
cmp
imul
filds
inc
xchg
jmp
push
repz
cmc
add
jmp
pop
popf
jno
stos
loop
jns
loope
xor
cmp
dec
mov
insl
outsl
leave
inc
sbb
add
stc
or
sub
xor
ss
je
push
fwait
push
in
adc
sub
imul
cs
sbb
xchg
sbb
das
mov
fcoml
xchg
push
sbb
mov
shrb
outsl
int3
inc
add
cld
fdivrp
aam
pop
push
xchg
bound
adc
out
pop
jbe
in
outsl
push
dec
inc
pop
das
jp
insb
add
and
jmp
inc
fsubrp
test
dec
jno
hlt
or
sub
mov
aad
cmpb
les
push
inc
jno
sub
lret
inc
in
jnp
loopne
sbbl
cli
cmp
jge
or
xchg
lcall
push
mov
daa
pop
inc
lret
mov
push
sub
addr16
cmp
lret
cmp
cmp
clc
pusha
sbb
loope
or
leave
fisttps
xchg
adcb
and
push
fiadds
rcll
idivl
xor
pop
ret
sbb
mov
or
or
cld
les
repz
push
or
sti
inc
rcll
adc
pushf
imul
and
cmp
and
mov
pop
out
aam
push
int
rcll
xor
dec
sbb
ficoml
dec
jp
cs
imull
cmp
jo
adc
sti
out
sbb
shrl
adc
mov
divb
mov
lods
fisubl
fwait
mov
ret
lret
jo
sbb
dec
repnz
jg
xchg
push
cmp
pop
sub
and
aam
inc
sbb
mov
enter
std
push
jno
in
gs
fdivl
test
sti
mov
repz
xlat
xchg
sbb
dec
loope
subb
inc
stos
in
push
aaa
pop
popf
jns
lret
pop
pushf
pop
or
nop
je
cmp
stc
inc
push
mov
jb
std
lock
sub
es
push
mov
xchg
sti
fcomp
clc
subb
sub
or
cmp
ljmp
push
imul
sub
push
std
arpl
push
gs
cltd
ja
add
insl
sbb
sub
fmul
mov
jmp
pop
out
adcl
inc
and
ja
mov
add
sbb
mov
movsl
jno
and
cltd
and
xor
add
mov
sub
shlb
push
xor
xchg
into
push
jb
ja
movsl
call
mov
xor
adc
cmp
or
push
fld1
mov
repnz
in
aas
jo
add
jge
adc
adc
dec
addr16
aad
push
pop
popa
pop
dec
mov
xlat
inc
mov
ret
test
fs
xor
xor
imull
jae
cli
mov
inc
push
pop
jg
dec
lret
dec
dec
xor
out
pop
push
aam
mov
ss
ss
xor
mov
pop
xor
adc
mov
insb
int
push
out
lret
les
daa
dec
movsl
dec
and
mov
fwait
xchg
and
fldlg2
mov
scas
jne
xchg
lea
aas
mov
push
fsubp
mov
sbb
jo
and
cli
jb
out
push
cld
pop
lods
mov
jbe
lods
sarl
mov
popf
int3
mov
and
sub
lods
cs
xor
iret
stos
fwait
jnp
xchg
fwait
mov
dec
nop
popa
inc
push
cmp
jno
in
add
imul
imul
les
test
ret
mov
push
dec
out
into
jo,pn
lods
cmp
dec
push
lret
add
or
int
int3
cmp
dec
aas
ds
out
or
mov
sahf
movsl
jns
and
scas
sbbl
inc
cwtl
or
mov
jge
push
mov
cmc
jne
pop
iret
sub
sahf
xlat
xor
in
mov
jbe
mov
sti
fs
stos
gs
mov
loop
inc
fidivrl
lds
in
add
lcall
dec
fnsave
je
jns
push
adc
aas
test
outsl
gs
mov
rorb
jle
jp
icebp
adc
xor
mov
test
mov
lods
sub
lea
push
rcr
dec
pop
xchg
sbb
ror
iret
clc
jmp
cmp
inc
cmpl
movsl
mov
mov
or
popa
into
mov
andb
sbb
inc
popa
sbb
aad
sbb
das
stos
test
dec
dec
cmp
scas
cmc
pop
ja
push
cltd
xor
add
in
add
push
pop
or
or
jle
jne
sbb
popf
into
popf
or
fcompl
inc
pop
int
dec
movsb
mov
ficoml
jge
and
test
dec
packssdw
adc
cmp
insb
imul
pop
mov
mov
pop
rcll
and
ss
in
adc
pop
pop
ret
aad
adc
push
lds
sub
aas
mov
bound
mov
pop
int3
mov
ret
mov
push
arpl
pop
fldcw
fists
scas
and
cwtl
sarb
xchg
or
das
inc
test
stos
lods
cmc
sbb
push
pop
in
jp
lods
imul
lahf
mov
es
push
fisttpl
addr16
add
testl
jmp
filds
aam
insl
pop
fmul
mov
push
insl
cmc
mov
and
or
out
jl
push
sbb
insb
leave
add
mov
fadd
xchg
mov
iret
push
into
push
pop
daa
fbld
stc
adc
repz
cmp
test
pop
sarb
fs
xchg
inc
xchg
cmp
xchg
insb
repnz
sub
jo
mov
xchg
hlt
and
mov
shll
fwait
insl
popf
outsb
xor
pop
sahf
fildll
stos
imul
mov
stos
lea
pop
movsb
scas
pop
dec
icebp
cs
jle
jle
mov
inc
push
push
xor
in
daa
lock
push
cltd
insl
ficompl
push
sahf
aad
mov
bound
dec
push
addr16
nop
leave
pushf
sbb
in
push
jne
mov
fadd
jb
sbb
jmp
xchg
mov
std
and
xor
aam
lods
out
int3
and
or
inc
fadd
leave
jmp
ret
std
pop
xchg
cmp
mov
movsb
mov
push
loope
pop
es
mov
xor
inc
mov
cmpsb
into
mov
xchg
fidivrl
ja
stos
testb
inc
in
loopne
adcl
rorb
aad
pop
pop
mov
pusha
sti
mov
mov
push
xor
fnsave
psrlq
fidivs
mov
jne
dec
fldl
mov
out
dec
jg
fadds
mov
jno
ficomps
inc
sbb
div
icebp
xlat
sub
cmc
push
insb
test
push
repz
inc
pop
adc
mov
sub
jnp
imul
pop
movsl
mov
push
imul
lahf
ja
push
xor
dec
outsl
cmp
mov
mov
iret
dec
xor
icebp
push
fsubrs
ret
repz
xor
into
dec
sub
int3
pop
das
out
mov
jge
mov
sbb
jle
pop
sti
aas
pop
shlb
out
dec
out
push
pop
push
iret
daa
cmpsl
pop
cmpsl
data16
repz
fistpll
pop
in
jl
insb
in
fwait
or
data16
xor
mov
and
or
loopne
add
sti
mov
sbb
sub
cs
scas
mov
pop
ret
dec
pop
lcall
adc
cmp
clc
mov
sbb
sbb
stos
mov
adc
iret
sti
adc
out
mov
adc
sahf
fcoms
pop
and
adc
jae
in
leave
scas
jne
out
lcall
xor
icebp
jns
mov
xlat
popf
or
fwait
xchg
xchg
dec
decl
int
cmc
loopne
out
jb
ret
hlt
jae
push
mov
repnz
movsb
and
xchg
mov
sub
dec
xchg
push
ret
filds
adc
push
in
add
or
int3
adc
mov
and
ljmp
xchg
sub
sub
das
les
fsub
and
mov
pop
in
mov
shr
cmpsb
sbb
lcall
push
imul
mov
xchg
mov
sbb
push
leave
adc
adcl
movsl
cwtl
sbb
push
push
cmp
aam
xchg
pop
ret
xchg
stos
shlb
ja
subb
dec
adc
xor
scas
faddp
leave
aaa
xchg
jbe
imul
mov
arpl
dec
pop
cld
lcall
mov
js
jle
insl
outsl
xor
es
jle
inc
repnz
lret
int3
jns
mov
addr16
mov
adc
jo
sbb
inc
dec
adc
mov
cmp
cltd
xor
fs
or
inc
lret
in
popa
aad
insb
ffreep
inc
pop
jecxz
dec
scas
mov
ret
xor
pop
sub
and
xchg
add
pop
push
xchg
aad
mov
cmp
xor
fs
xor
testl
shrl
or
adc
or
addr16
addl
mov
pusha
pop
pop
cs
hlt
jp
test
ret
sbb
push
dec
test
data16
cltd
sar
sbb
ds
jl
push
test
pusha
das
aam
adc
pop
push
scas
xor
jp
or
enterw
mov
fwait
pop
cmp
xchg
xchg
mov
movsl
push
xlat
scas
jge
loop
push
ret
or
mov
mov
call
fwait
call
fistl
test
leave
shll
mov
pushf
push
filds
out
mov
dec
jo
iret
push
insb
cmp
or
pop
pop
adc
bnd
outsb
add
test
in
xor
pop
jnp
mov
pop
xchg
push
xor
rcr
or
or
sbb
jmp
sbb
mov
dec
addr16
aam
and
aas
mov
adc
cli
scas
xchg
add
cmp
xor
or
inc
sub
xor
aaa
pop
rol
push
and
xor
pop
xchg
mov
popa
lcall
mov
lock
or
ljmp
sbb
mov
xor
std
xchg
jbe
xchg
iret
scas
cwtl
gs
mov
sbb
xorb
repnz
lock
out
inc
and
xchg
dec
xor
adc
xchg
mov
mov
mov
hlt
ss
cmp
mov
iret
mov
xchg
jb
push
inc
sub
xchg
pop
sub
jmp
popa
aad
xchg
lcall
ss
or
or
adc
jb
pop
mov
mov
cmp
pop
dec
fnsave
lods
cmp
pop
out
lods
push
xchg
inc
jmp
loope
and
ss
inc
hlt
cmp
hlt
push
cwtl
dec
jne
push
add
test
xchg
sti
out
jns
std
mov
push
rorl
mov
fcomp
sbb
cmpsb
pop
lret
xlat
icebp
cmp
inc
jae
xorb
adc
dec
scas
dec
repnz
mov
lahf
cwtl
mov
call
enter
push
dec
fimuls
push
adc
rcl
call
in
cmp
cs
mov
and
adc
std
outsl
icebp
lret
or
fdivrs
add
movsb
loope
lcall
cltd
mov
mov
sti
cmpsb
in
leave
cmc
pop
in
and
pop
mov
fldt
push
pop
scas
es
jae
cs
mov
mov
pop
adc
rorb
inc
xchg
lret
mov
lods
cmpsl
cmp
xchg
add
xchg
adc
dec
scas
mov
in
les
cmp
adc
repnz
adc
xchg
xchg
int
outsl
call
dec
imul
cmpl
int
mov
add
xor
jbe
xchg
addr16
push
mov
int
lret
cmpsb
pushf
cli
jae
lret
loop
inc
xchg
sub
movsb
aam
dec
mov
rorl
pop
dec
cmpsl
aam
lods
rorb
stos
cli
cmpsl
mov
sbb
out
mov
mov
add
dec
arpl
sbbl
leave
lcall
es
mov
fwait
imul
aaa
out
cmp
or
push
pop
cmp
add
dec
push
faddp
movsl
lret
fidivrl
ja
push
in
hlt
jnp
std
enter
clc
ja
add
ds
icebp
in
imulb
xor
jne
dec
aaa
mov
mov
aad
stc
push
fldl
lods
pop
xor
pop
ffree
scas
push
jnp
fnstenv
mov
mov
sbb
xchg
inc
xchg
pop
xchg
pusha
cmp
imul
cmp
and
inc
es
cmc
pushf
push
lea
jg
xchg
out
mov
inc
push
sub
and
iret
ds
test
scas
push
iret
fmuls
push
cli
dec
test
lds
test
jbe
add
and
xor
xor
push
mov
jo
xacquire
hlt
shlb
sar
roll
lods
pop
push
orl
sti
adc
add
push
addr16
push
mov
sarb
inc
stc
icebp
dec
stc
jnp
les
fistpll
loopne
leave
fwait
stc
enter
sahf
mov
fwait
pop
sar
pop
mov
cmp
or
les
fldcw
pop
into
test
sbb
jg
inc
mov
adc
arpl
dec
out
loope
push
sub
popf
pop
mov
inc
dec
pop
cmp
xchg
cmp
pop
mov
jno
aaa
pop
jb
add
loop
and
xor
mov
mov
jne
sbb
mov
push
jo
pop
idivl
mov
inc
cmp
mov
jb
dec
dec
jl
adc
mov
shlb
movsb
mov
xor
cmp
mov
mov
je
sub
ret
and
jmp
arpl
pop
fstl
stos
enter
pop
inc
mov
jne
gs
call
out
and
and
dec
and
gs
mov
das
fs
push
xchg
test
cmpsl
ss
cmp
pop
mov
jno
push
sub
or
push
dec
mov
out
call
imul
inc
pop
lcall
or
xchg
mov
pop
mov
pop
inc
dec
sub
sbbb
aas
cwtl
adc
hlt
ljmp
lcall
mov
test
faddl
dec
push
fwait
push
into
push
add
jg
mov
mov
add
inc
push
loopne
aad
jmp
xchg
and
jae
btc
sub
jnp
mov
cld
xlat
inc
pushf
data16
addr16
xchg
loop
cmc
lods
loopne
imul
into
int
or
add
xor
hlt
into
sub
pop
shl
or
ja
les
xchg
jl
xchg
mov
inc
push
clc
mov
add
icebp
int3
std
dec
cmp
adc
xchg
cmpsb
push
push
add
ss
popa
xchg
imul
mov
sbb
pop
call
push
add
xlat
mov
loopne
xor
cmpsl
jnp
inc
jecxz
and
stos
or
sub
aad
mov
mov
inc
push
mov
or
std
int
cmpsl
pushf
addr16
inc
push
nop
xchg
pop
xchg
jge
enter
push
loope
pushf
pop
int
sti
cmpsb
js
cmp
je
sbb
cmp
lods
push
mov
ficoml
mov
xchg
inc
testb
fbstp
mov
adc
xchg
add
lcall
loop
das
dec
jecxz
add
jecxz
pop
push
dec
stos
in
setne
ret
xor
mov
or
notb
inc
insb
xchg
cwtl
pop
mov
sbb
nop
insl
pop
cmp
xchg
fs
add
clc
out
decl
stos
cmp
pop
popw
cmp
pop
cwtl
adc
dec
test
addr16
cld
es
pop
pop
scas
out
cmpb
inc
push
and
call
sub
xchg
daa
push
mov
pop
in
sub
pop
or
lea
pop
aad
out
fisubrs
mov
jg
push
inc
mov
inc
pushf
lock
mov
and
xchg
xchg
push
aaa
mov
icebp
fwait
sbb
test
dec
pop
and
rcr
fs
scas
add
push
mov
test
xor
xor
jnp
sub
in
mov
hlt
int3
fnsave
mov
cld
add
pushf
int
lret
cld
arpl
out
shrb
cmpsb
jmp
stc
das
aad
mov
pushf
xchg
inc
or
mov
add
and
ret
testl
sahf
in
or
jle
popf
lret
test
fwait
icebp
pop
jecxz
lret
mov
arpl
cmp
cmp
push
emms
adc
loope
and
lret
ret
hlt
cltd
pop
mov
push
sub
jl
inc
inc
mov
sbb
xor
scas
inc
jmp
cmp
les
jg
xor
sub
or
shll
jb
pop
ss
push
or
cmpsb
test
pushf
cld
dec
lock
gs
mov
mov
mov
pop
add
jnp
daa
dec
bound
outsl
fisttpl
outsb
inc
pop
and
iret
mov
xchg
iret
adc
mov
push
lea
lret
xor
repnz
dec
inc
xchg
push
jns
std
clc
and
fs
aas
sbb
mov
jno
and
out
subb
clc
push
lds
inc
shrb
loop
outsl
xor
fs
je
or
lods
mov
nop
or
sub
test
fiadds
loope
dec
hlt
call
nop
mov
pop
cmc
lret
mov
jle
inc
fwait
xchg
sahf
push
mov
pop
in
cmp
lret
insb
cmpsl
aaa
pop
sub
cld
cwtl
ja
aad
pop
bound
adc
and
xchg
dec
sbb
popf
mov
mov
mov
add
lock
mov
icebp
ds
jge
mov
mov
fsubrs
inc
mov
or
loopne
aaa
dec
movsl
push
cmpsb
push
popf
xchg
inc
lret
or
or
cmp
nop
scas
mov
xchg
idivb
mov
enter
add
sbb
imul
fsubrs
add
inc
adcb
testb
push
shr
jb
dec
add
add
push
push
dec
cmp
sti
movsl
ljmp
je
cmpsl
lcall
jmp
imul
xchg
jae
rcrb
and
inc
lret
adc
push
fidivrs
je
test
mov
push
xor
jl
cmpsb
fbstp
mov
xchg
mov
mov
mov
in
add
out
enter
inc
xor
aad
xchg
enter
out
insl
add
and
daa
lcall
ret
jecxz
sub
test
add
test
fsubs
lds
xchg
ja
rcrb
sub
mov
shl
sbb
adc
mov
xor
lcall
xorb
movsl
and
stos
scas
inc
outsb
and
cmp
loopne
lods
add
insl
sub
pop
in
sub
rorb
loopne
in
push
xchg
sub
subl
mov
insl
cld
cs
addr16
xlat
ret
adc
sbb
cli
in
test
ficompl
fdivs
and
jp
in
xchg
mov
inc
das
and
xor
xlat
mov
jnp
pop
out
xchg
mov
mull
iret
jp
andb
sti
inc
mov
mov
sub
lcall
in
sub
inc
sti
cwtl
int3
jecxz
sub
leave
ss
test
sbb
lds
pop
jecxz
xchg
lcall
cmp
xchg
mov
sahf
test
sar
inc
aaa
sti
inc
pop
js
stc
popf
cmp
sub
stos
int3
mov
jle
iret
daa
je
add
and
pop
sub
cltd
fiaddl
pop
cmp
mov
mov
js
push
sub
je
xor
arpl
pop
cmp
js
xor
mov
sarl
cmp
push
and
hlt
ja
and
mov
mov
mov
push
fcmovnu
mov
mov
xchg
ds
fisubrs
xor
cmpsb
dec
pop
adc
pop
sbb
sub
xchg
mov
mov
adc
jecxz
cmp
test
push
push
cltd
adc
mov
sub
push
xlat
jecxz
pusha
mov
rolb
sub
or
stos
add
and
bound
pusha
pcmpeqb
daa
and
add
call
dec
inc
xor
out
jg
mov
ficoml
pop
int3
in
sbb
adc
mov
cld
sbb
jnp
sub
mov
je
inc
iret
jnp
mov
sub
mov
push
xor
daa
xchg
cmp
insl
adc
mov
lods
fs
js
inc
mov
fisubs
xchg
or
mov
popf
lret
shr
stc
jb
adc
xchg
aam
mov
sti
add
cmp
fwait
outsl
push
add
lods
idivl
test
dec
mov
xchg
jp
dec
pop
push
cmc
mov
in
andl
jmp
and
in
imul
imulb
and
faddl
fcmovnu
pop
dec
xchg
arpl
xchg
lcall
in
pushf
rorl
movsl
es
push
xlat
mov
or
movsl
int
dec
mov
sbb
sbb
or
inc
outsl
in
repnz
mov
lcall
jmp
pop
inc
in
ret
pop
push
arpl
cltd
lahf
shrb
xchg
pop
lds
fldt
push
mov
add
mov
xchg
sbb
aad
or
dec
or
sub
lock
ds
leave
cmpsb
ret
pop
daa
and
rorl
xchg
mov
lcall
mov
xor
and
sbb
adc
pop
adc
xor
or
push
xlat
iret
mov
jo
push
pop
pmaxsw
jae
push
push
sub
jnp
dec
mov
lds
lcall
lods
stc
jo
or
xor
mov
aam
ljmp
mov
inc
or
mov
test
jae
ja
movsb
icebp
sub
push
sbb
rcrl
and
jl
push
adc
addl
lcall
rolb
test
cmp
mov
popa
rclb
lods
ds
mov
or
push
sbb
sbb
scas
cmp
ljmp
push
rcrl
cli
or
cmp
je
inc
inc
fwait
addr16
stos
fdivp
and
test
jo
pop
popf
std
addr16
lock
mov
enter
scas
icebp
jns
mov
xor
test
sub
sbbl
imul
mov
mov
xchg
aam
out
xchg
mov
and
mov
dec
add
les
punpckhbw
addr16
repnz
dec
xor
pop
push
clc
or
or
fstpt
out
clc
dec
icebp
stc
in
sti
cmp
adc
test
add
sbb
ficomps
xchg
test
push
and
pushf
adc
jecxz
xchg
lret
push
mov
or
negb
jle
inc
and
inc
sub
test
mov
test
je
inc
and
sub
push
jl
out
mov
out
lods
push
sub
push
lods
lcall
push
aad
in
mov
and
hlt
outsb
ja
dec
call
xchg
loopne
pop
xor
sub
in
or
jne
fists
push
ret
insb
fnstsw
daa
xchg
rorl
lds
lods
or
enter
dec
lret
imul
fidivrl
pop
and
pop
dec
adc
jecxz
sbb
mov
or
inc
or
pop
std
xchg
movsb
pop
cmp
pop
mov
mull
icebp
outsl
ror
gs
and
or
sub
jg
cmpsb
stos
pop
jnp
and
dec
mov
leave
mov
mov
filds
push
mov
xor
mov
test
or
mov
dec
mov
iret
ss
mov
sub
cmpsb
dec
movsb
push
xchg
pop
cltd
xchg
xchg
std
push
orl
cmc
pop
mov
push
mov
push
hlt
xlat
call
dec
addl
rcrb
lea
loop
sub
cwtl
in
push
dec
sbb
mov
add
or
mov
je
pop
add
dec
lahf
jne
hlt
daa
loop
mov
sbb
or
dec
mov
mov
push
add
push
aaa
aas
aas
outsl
out
mov
xchg
pop
nop
arpl
stos
leave
jmp
arpl
fcmove
pusha
test
xchg
pop
mov
xchg
jge
xchg
sub
loop
fwait
pop
pop
push
fisttpl
pusha
jl
fiaddl
sub
shll
int
in
and
cld
aas
stc
lods
push
sub
mov
enter
fistpl
pop
cli
push
mov
mov
push
andb
jg
pop
push
xor
sbb
adc
dec
sbb
dec
enter
sahf
sbb
popa
lods
sbb
cmpsb
mov
push
enter
cs
mov
cmpsl
cmp
jge
test
sbb
adc
cmp
dec
xchg
push
cmpsb
dec
jns
mov
cwtl
sub
cmp
scas
pop
shll
cmpl
fadd
dec
fistps
xchg
aad
dec
sub
dec
push
aaa
stos
push
or
mov
push
inc
adc
outsl
push
jl
push
adc
add
stos
fnsave
addr16
insl
icebp
fcmovu
and
xor
mov
int
stos
mov
or
mov
cmc
test
and
mov
and
cmpsl
inc
xor
or
sbb
loop
outsb
push
das
mov
xchg
mov
jbe
rcll
ds
aam
pop
outsl
or
fldl
cmp
in
fs
or
or
pusha
jbe
rcrl
sahf
mov
cmp
and
shll
sarb
xchg
xchg
lahf
sub
int3
cmp
fwait
iret
movsl
in
dec
into
sub
pop
into
mov
mov
fmul
dec
mov
andb
jbe
mov
sub
sub
inc
pushf
cli
dec
arpl
mov
jns
pusha
outsb
into
sti
jnp
mov
rcrb
add
cwtl
movsb
xor
xor
pop
xor
jp
cmp
xchg
sbb
jle
ljmp
mov
push
sub
fbstp
pop
stc
addr16
popa
shlb
pop
int3
sub
mov
mov
sbb
pop
cld
stos
ret
sub
ret
icebp
cmpsl
loopne
xor
xchg
int3
mov
fisubs
in
add
insb
scas
adc
xor
ret
pop
iret
test
xchg
jns
xchg
std
jnp
jg
lods
add
mov
cli
pop
jg
dec
push
jne
rcll
das
into
adc
mov
jb
imul
jo
mov
push
sbb
lret
out
fadd
jle
test
pusha
ds
adc
int3
rclb
inc
repnz
push
cmp
les
pop
xchg
pop
jno
out
mov
inc
push
mov
adc
inc
mov
into
in
call
mov
sbb
jne
inc
xchg
clc
lods
shl
jns
mov
inc
mov
push
xchg
pop
fs
mov
shr
adc
add
push
loope
xor
nop
imul
lods
icebp
inc
mov
and
imulb
inc
push
in
fs
enter
push
nop
inc
sub
mov
and
rcl
lock
xchg
lahf
push
pusha
push
jne
fbstp
sub
stc
xchg
nop
cmp
out
pop
add
dec
dec
mov
xlat
pop
sub
pusha
hlt
xchg
pop
es
mov
sub
loop
pop
daa
insb
in
lcall
and
loope
movhps
out
insb
and
jl
xchg
lods
mov
cmpsl
inc
cmpsb
aad
fwait
jge
pop
jecxz
out
bound
pop
insl
or
jne
dec
jbe
mov
hlt
mov
aas
hlt
or
sbb
rclb
div
jle
jg
repnz
mov
in
add
fwait
sbb
jno
lahf
imul
fwait
dec
nop
fwait
push
inc
sub
nop
push
jecxz
jnp
bnd
insb
and
jecxz
mov
mov
popa
sub
mov
xchg
mov
addr16
mov
and
push
mov
loopne
fwait
test
xor
add
push
push
addr16
adc
sub
xor
imul
xchg
sbb
out
cwtl
data16
inc
test
popa
jo
jae
sbb
ss
imul
shrl
out
adc
in
xchg
enter
cmp
adc
stos
xchg
dec
adc
mov
jge
ja
enter
xchg
xchg
inc
and
jmp
in
lcall
sub
dec
xor
and
jns
jns
aaa
iret
test
mov
cmc
inc
cmp
jle
or
sbb
into
orl
pop
stc
mov
add
xchg
push
pusha
js
jmp
aaa
in
call
fcmovnu
dec
outsl
scas
cmp
add
subb
push
and
lea
mov
mov
cli
dec
cmpsb
int
lret
mov
ret
mov
xor
mov
dec
int
xor
xchg
push
xor
mov
scas
mov
incl
add
shlb
daa
xor
fmul
or
lock
fwait
outsl
scas
push
xchg
xchg
adc
hlt
roll
mov
jp
adc
inc
jns
jns
into
das
sbb
mov
rcl
add
adc
jnp
inc
inc
lahf
repnz
jns
mov
cltd
push
xchg
movsb
xchg
cmp
mov
leave
and
xor
or
aaa
test
cmp
sbbb
sub
jno
mov
pop
mov
or
push
insb
xor
test
mov
scas
xchg
pop
dec
stc
out
jl
sub
xorb
cmp
jnp
xor
lea
cmpl
jmp
adc
mov
mov
lea
adc
dec
mov
iret
outsl
mov
jno
bound
and
inc
aas
mov
popa
enter
xor
jmp
inc
dec
loop
fisttps
decl
sub
lcall
outsb
cli
cltd
sbb
gs
daa
ljmp
rcll
xor
daa
and
pusha
inc
out
mov
xchg
lahf
cmpsl
inc
in
adcb
sub
fistps
jg
mov
xchg
jp
into
mov
mov
dec
lods
add
inc
call
jg
or
fstpt
add
pushf
jnp
push
mov
mov
repz
call
repnz
lahf
es
pop
cmp
jg
cmp
inc
mov
and
fiadds
int
sti
and
mov
aad
aaa
jl
dec
and
mov
int3
push
imul
mov
sarb
in
cli
cmp
mov
ret
sti
lret
fs
gs
mov
ficomps
movsb
enter
or
lea
pop
insl
jae
sbb
sub
adc
xor
in
cs
inc
add
and
or
gs
push
mov
out
push
cmp
imul
xor
aad
mov
data16
push
inc
leave
cs
mov
inc
pop
or
sbb
test
scas
cld
ror
add
push
push
adc
sbb
dec
pop
jle
icebp
pushf
nop
cmc
push
sbb
push
out
out
lds
push
arpl
mov
fwait
mov
cmp
pushf
add
fdivr
sar
jne
imul
bound
or
repnz
shrl
int3
int
es
iret
push
das
dec
push
lret
pop
sub
cs
sbb
shrl
daa
push
xor
mov
xor
xchg
jo
inc
xlat
pushf
popf
lds
into
mov
xor
mov
mov
inc
mov
sbb
or
lret
lret
jns
popa
or
aam
rcrl
pop
dec
iret
aam
out
ficoml
sbb
cmp
cs
fidivl
pop
roll
or
xchg
pop
inc
xor
mov
push
mov
arpl
sar
scas
add
shll
aad
popl
or
mov
cmp
sub
cmp
sub
sub
inc
jp
mov
lea
adc
scas
scas
pushf
arpl
cld
inc
mov
sbb
cmp
fcomps
xchg
fwait
rorl
adc
jbe
int3
inc
dec
lret
pop
into
out
lods
mov
and
test
aad
adc
popf
pop
clc
dec
cmp
out
and
ret
pop
pop
sahf
inc
ficoms
pop
or
sahf
fisubs
ds
pop
sub
lods
cmpsb
inc
mov
rol
mov
jle
imul
mov
mov
jle
aaa
mov
sbb
cmp
xor
dec
rorl
mov
aas
push
fimuls
fcmovnbe
push
in
mov
popa
shr
lret
jge
cmp
test
out
sub
inc
cltd
shlb
popf
mov
repnz
jge
clc
adc
pop
xor
or
popa
cmpb
lret
scas
pop
cmp
xchg
cltd
cmpsl
repz
lret
or
imul
insl
out
popa
std
mov
pop
stos
xor
dec
lods
enter
sahf
push
sti
lahf
cmp
lret
add
ss
stos
std
lea
fs
test
leave
mov
fcmovnbe
push
cmc
mov
in
adc
adc
into
jbe
sbb
mov
dec
cmp
lcall
inc
movsb
mov
nop
push
ret
daa
rcrl
mov
rorl
xor
call
add
aam
stos
rolb
sub
mov
dec
mov
jbe
mov
lea
lret
push
mov
sub
mov
sti
ss
leave
lret
add
adc
loope
add
or
cmpsl
inc
out
shrd
mov
imull
outsb
ret
pusha
notl
sub
mov
dec
dec
push
inc
adc
cwtl
add
dec
outsb
repz
dec
cmpsb
pop
jne
imul
adc
sbb
cs
push
dec
lods
or
mov
test
cmp
xor
out
ja
dec
les
push
push
testl
jae
mov
adc
xchg
cmp
lahf
ljmp
cld
fwait
adc
rcr
xchg
push
into
aaa
jbe
add
sub
das
and
std
adc
pop
fistl
push
shlb
leave
mov
icebp
mov
jmp
xor
or
mov
cld
inc
addr16
es
ret
sbb
xchg
and
push
xor
cmp
inc
neg
or
mov
mov
push
sub
cmpsb
and
clc
adc
push
mov
push
repnz
mov
scas
jmp
jns
hlt
in
adc
pop
xlat
bswap
pop
mov
mov
ds
add
shll
je
icebp
xchg
xor
xor
inc
insl
test
xorl
mov
lcall
xchg
icebp
sbb
jl
sbb
cli
test
inc
fstps
test
xchg
jae
gs
push
pop
xlat
ljmp
aaa
nop
jne
je
push
mov
ret
push
icebp
sbb
pop
popa
jmp
call
cltd
sub
lods
adc
jno
gs
mov
cmpsl
inc
inc
pushf
xor
jo
in
dec
jmp
xchg
jl
mov
mov
dec
or
inc
ja
imul
lods
sbb
in
mov
shl
jp
push
cmovae
push
les
arpl
push
cmp
sub
rsqrtps
push
aam
je
mov
mov
loop
add
cld
insb
outsb
movsl
rorl
jnp
lret
push
in
lock
mov
xlat
dec
gs
cld
ss
fstpt
loopne
or
in
mov
dec
mov
ret
lahf
enter
and
mov
xor
mov
and
mov
shll
imul
fcompl
push
enter
push
fisttps
push
popf
pop
ja
mov
fstpl
sub
sahf
icebp
cmpsb
mov
es
mov
dec
ss
bound
dec
and
xor
push
rolb
cld
in
arpl
jmp
fistpll
add
cmp
mov
jb
mov
push
dec
add
jae
std
out
jecxz
pop
inc
adc
aam
movsl
mov
push
or
xchg
xor
fcmovnb
rcrb
sbb
daa
adc
mov
lea
xchg
push
push
sbb
les
xor
dec
dec
cld
sar
je
mov
leave
repnz
sbb
mov
lods
call
lahf
sub
lcall
jecxz
aam
sbb
xchg
int
push
pop
push
popa
out
rolb
sbb
inc
add
icebp
pop
mov
loope
adcb
ss
int
mov
sbb
aad
jp
repz
scas
push
xor
mov
pushf
dec
lods
dec
cmpsb
fisubs
fwait
jp
sbb
lods
cmpsb
pop
sbb
cmp
mov
insb
insb
pop
shrb
push
push
push
pop
icebp
xor
aaa
pop
mov
xchg
mov
jecxz
mov
data16
test
adc
cmp
cmp
or
dec
bound
aad
out
mov
stos
mov
xlat
iret
and
ds
mov
rorl
sbb
jecxz
dec
xchg
clc
dec
mov
fdivrs
jbe
shll
xor
cs
out
jg
inc
pushf
movsl
xchg
sti
stc
sahf
sub
pop
ljmp
sarb
inc
pop
sti
aam
addr16
addr16
push
add
cmpsb
in
push
decb
inc
iret
sbb
or
push
pop
dec
ljmp
jns
add
pop
xor
and
cmpsl
lods
cmp
pop
xor
cmp
dec
mov
mov
jecxz
das
iret
imul
pop
jb
mov
dec
dec
stc
pop
ljmp
lea
xchg
sbb
dec
scas
lcall
iret
add
mov
xchg
xor
js
loop
dec
addb
push
adc
fstpl
inc
rcrb
es
dec
andl
data16
adc
ja
add
int
jb
jecxz
xor
add
sbb
imul
sub
out
addl
fadd
out
push
lds
subb
dec
dec
pop
push
push
out
imul
lahf
lret
or
mov
jno
ja
sahf
iret
mov
pop
jge
inc
fcom
rolb
stos
push
es
inc
lea
mov
ss
out
addr16
clc
ret
icebp
bound
or
orl
pop
mov
ror
dec
push
inc
add
fcmovbe
out
sub
and
sub
mov
dec
add
outsl
insb
test
mov
sahf
outsl
je
mov
cmp
add
xchg
cmc
dec
movsl
lahf
adc
movsbl
ss
int3
out
xchg
iret
mov
push
inc
popf
ret
pusha
hlt
mov
inc
push
xlat
adc
and
adc
mov
fnsetpm(287
push
cmpsb
cmp
je
lds
push
idiv
sub
jl
add
or
mov
insb
imull
mov
jae
mov
sub
push
daa
dec
sub
ds
insb
add
push
push
cld
jl
adc
xchg
mov
xor
mov
fs
outsb
sub
add
js
xchg
pop
fildll
pop
add
inc
jae
cmpsl
gs
test
mov
stos
pop
mov
lea
nop
jmp
mov
cmp
mov
movaps
jae
arpl
xchg
pop
push
pop
ja
leave
rcrl
lret
sti
fwait
inc
adc
mov
lahf
pop
mov
pop
pop
bound
scas
outsl
hlt
jo
lods
lret
lds
and
bound
mov
dec
in
iret
outsl
rcr
push
inc
xchg
popf
xchg
pop
out
gs
repnz
aas
aam
rcrb
xchg
mov
pop
je
stc
bound
cli
inc
add
int3
or
xor
testl
xchg
xchg
xor
mov
jl
jne
jnp
push
mov
mov
dec
dec
or
clc
or
cs
mov
or
mov
mov
stc
or
and
in
cli
inc
leave
inc
notb
push
dec
xor
adc
add
push
sarl
xor
xor
aam
lods
je
bnd
mov
xchg
out
cwtl
push
mov
dec
mov
sahf
ret
mov
test
or
test
xlat
pop
xchg
shrl
dec
jp
fs
or
arpl
clc
int
hlt
adc
and
and
pusha
add
test
xchg
sub
movsl
pop
lret
push
outsb
inc
cld
cmpsl
mov
out
int
or
or
in
icebp
mov
std
repnz
cld
mov
ret
imul
idivl
and
inc
fldl
pop
lock
sbb
mov
scas
out
stc
das
shrl
sub
inc
sbbl
xchg
fstl
xor
ljmp
and
mov
aam
push
mov
push
ret
mov
cli
cmpsb
rolb
jl
xor
mov
insl
jle
sub
dec
mov
sbb
subl
lret
mov
jns
inc
sbbl
mov
movsb
dec
out
test
jns
mov
bt
push
out
loop
fmull
call
stc
outsl
loop
and
in
and
mov
fs
add
sbb
mov
lret
mov
or
jbe
mov
mov
arpl
lcall
add
sbb
loop
arpl
ja
pop
mov
dec
and
pop
cmpl
rorb
cmp
loopne
add
or
cwtl
mov
jmp
scas
push
cld
jnp
push
lret
xchg
or
mov
repz
stos
stos
xor
jmp
mov
and
cs
or
pop
jnp
out
pop
gs
sbb
xchg
std
jp
cmp
icebp
das
loope
adc
jne
stos
dec
cmp
pop
out
in
xor
movsl
mov
ss
leave
add
or
sbb
lock
inc
mov
mov
dec
or
bound
andl
lods
mov
addb
scas
stos
pop
out
push
lock
dec
ds
lock
adc
pusha
add
jmp
lea
dec
das
jb
add
pop
test
shll
mov
sbb
lea
lock
movsb
pop
repz
fs
jne
popa
sbb
les
fnstcw
push
and
add
inc
cmp
jmp
fbld
lods
fstps
mov
lea
lcall
shlb
or
testl
push
mov
pop
addr16
insb
sahf
cmp
shlb
rcrl
pop
jo
insl
xor
insb
or
addr16
faddl
push
loope
inc
dec
lock
ljmp
mov
ret
mov
fs
xlat
not
push
rcrl
in
outsl
lahf
in
mov
ss
pop
jbe
jmp
inc
sbb
daa
push
in
and
jl
neg
frstor
cmp
and
or
inc
pop
in
adc
in
scas
or
dec
push
mov
sarl
mov
loop
out
mov
fmuls
and
call
sbb
inc
ljmp
mov
cmpl
cs
dec
xor
dec
arpl
into
xor
das
aam
cli
das
inc
fldt
mov
lahf
imul
mov
out
in
sti
push
stos
loopne
push
aas
ss
push
inc
lret
xor
fwait
int
adc
cmc
cltd
std
cmpsb
mov
in
aam
adc
or
fistpll
mov
jbe
adc
and
add
in
lss
adc
mov
cld
sbb
inc
dec
les
xchg
mov
repnz
add
mov
js
mov
adc
xchg
pop
lock
or
push
fimull
mov
inc
insl
lahf
cmp
add
fisubrl
jno
or
mov
jb
jnp
jb
xor
xor
sahf
inc
sbb
pop
dec
ret
add
cmpl
add
cmp
push
cwtl
daa
sub
addr16
sbb
pushf
test
mov
xchg
mov
jl
shll
aas
dec
cld
jl
sub
push
lret
inc
adc
sub
repnz
mov
adc
out
jmp
in
sahf
test
nop
jo
sub
cmpsb
mov
cmc
add
sub
into
mov
jno
jecxz
cmp
stos
fs
insb
mov
or
inc
notb
push
pop
insb
flds
pop
daa
ds
movsl
adc
xchg
out
pop
jno
jno
pop
pop
jecxz
insl
arpl
rcl
cmp
add
mov
in
dec
daa
push
sarl
push
imul
and
dec
and
push
xchg
fwait
xor
shrb
mov
cld
aam
mov
or
xor
push
les
insl
nop
fisttpll
ss
aam
and
movsb
mov
clc
jp
add
push
dec
sub
or
pop
cmpl
cmp
or
mov
mov
sbbb
addb
adc
loopne
das
cmp
test
xchg
mov
or
hlt
adc
mov
push
arpl
and
scas
jno
ja
add
sbb
inc
jnp
call
sarl
movsl
shrd
loope
pop
mov
and
imul
ss
cmpsb
xchg
adc
add
mov
jmp
leave
adc
div
mov
mov
push
mov
mov
xchg
xchg
mov
test
sub
cld
fwait
mov
rcll
icebp
mov
jg
ss
mov
add
push
scas
inc
push
iret
shl
loop
in
mov
mov
sbb
pusha
cli
movsb
mov
sbb
lock
push
aam
dec
bound
gs
adc
popf
aam
call
jecxz
add
or
out
or
les
mov
dec
jbe
dec
xchg
in
fidivrs
mov
movsb
pusha
xchg
xorl
rcrb
push
insb
out
sbb
sbb
insl
jmp
je
dec
inc
mov
jle
lods
jmp
rorl
jmp
push
data16
pop
or
or
mov
or
or
sub
icebp
aaa
cmc
movsl
mov
jp
mov
xor
dec
stos
sti
cmp
jg
dec
lret
lret
popa
pop
out
shlb
imul
out
insl
push
pop
data16
lock
outsl
xor
js
push
and
div
mov
jg
sbb
loop
mov
fdivl
pop
jle
daa
and
loope
add
sbb
mov
add
jb
out
aad
xchg
mov
jl
lahf
xor
and
jl
sbb
lods
inc
loope
jmp
xchg
and
and
dec
stos
xor
les
and
xchg
mov
in
insl
lds
pop
sbbb
inc
stos
jge
fwait
ret
int
jl
xchg
mov
je
or
aam
imul
adc
push
bound
cmp
xor
push
sbbb
call
out
insb
mov
jno
seta
cmp
and
std
addl
push
orb
js
cmp
cli
sbb
cli
push
out
push
aaa
dec
mov
fnsave
or
sub
sbbl
cmp
mov
pop
dec
push
dec
mov
lret
push
mov
iret
xchg
xor
sbb
ret
cmpsb
jge
sti
scas
lods
icebp
adc
dec
xchg
dec
stc
jmp
cmp
sahf
inc
sub
cmc
pop
jbe
jno,pt
stc
int
xor
in
pop
push
fdivs
jmp
dec
jb
or
nop
mov
jo
jmp
nop
cwtl
adc
out
mov
xchg
push
ljmp
sub
sbb
adc
test
cltd
mov
add
jmp
std
push
push
inc
add
dec
jae
push
xchg
sbb
sbb
sub
pop
push
repnz
sbb
cmp
add
sbb
jp
outsl
xlat
out
and
push
loope
adc
sti
in
cmp
pushf
push
inc
sub
inc
bound
lods
jne
jl
sub
dec
aam
pop
adc
pusha
data16
dec
pop
nop
movsl
fwait
das
pop
adc
vmovss
xchg
lahf
or
inc
sub
or
clc
scas
cmp
sbb
stos
inc
daa
mov
mov
push
pushf
les
mov
mov
xchg
add
hlt
popf
xchg
daa
cmc
ficomps
or
inc
fadd
and
inc
and
jns
fbld
and
mov
outsl
mov
mov
xchg
mov
lea
adc
jl
cmp
dec
or
imul
popa
fldenv
in
aaa
adc
loope
shl
sub
mov
pop
lahf
mov
pop
xlat
adc
mov
push
mov
sbb
mov
cld
add
jbe
sub
fs
outsl
push
outsl
test
xor
pop
aas
mov
push
jmp
xorb
ljmp
push
movsb
addr16
add
add
outsb
push
iret
lods
ja
pop
mov
int3
mov
mov
dec
movsl
lods
and
mov
dec
xor
rol
sahf
fnsave
adc
pop
push
cmpl
mov
add
insl
into
jns
dec
adc
mov
mov
fs
jle
xchg
popf
pop
push
data16
jg
mov
add
lods
dec
dec
jg
xor
jle
sub
sbb
mov
push
mov
mov
jl
jle
xor
mov
lea
into
xchg
dec
or
mov
iret
cmp
cmp
cmc
insb
iret
test
ds
add
xor
sbbl
pusha
shlb
pop
cltd
cwtl
sbb
repz
dec
lcall
sbb
pop
mov
push
ljmp
jnp
cmp
mov
je
adc
add
add
outsl
jbe
mov
ja
or
in
call
fwait
or
xchg
popa
lret
sahf
nop
mov
push
mov
add
sbb
fildl
dec
mov
ret
ljmp
out
cltd
adc
sub
aas
aaa
jecxz
paddsb
out
out
cmp
lock
cs
aas
fistpl
leave
pop
stc
enter
and
icebp
pusha
enter
scas
int3
mov
jmp
dec
adc
arpl
mov
ds
xor
cmp
shrl
lret
push
je
push
fldl
out
ljmp
jg
push
dec
mov
ds
js
and
xchg
test
pushl
sti
jecxz
je
lret
mov
push
sbb
sub
orb
sub
inc
lret
jbe
jl
xorb
ss
ret
rcrb
addr16
fwait
xor
imul
sub
mov
adc
push
icebp
popf
jno
push
movb
pop
mov
loope
test
dec
imul
loop
jge
int
xchg
shll
mov
cli
movsb
imul
ja
push
push
les
push
shl
lea
shll
xchg
int3
popf
jg
aad
mov
mov
add
loopne
js
xor
jne
cmp
mov
in
das
jp
aam
jnp
cmc
mov
adc
push
int
ret
test
cmp
test
inc
inc
pop
icebp
cmpsb
inc
mov
adc
mov
lock
sbb
pushf
mov
shll
hlt
mov
inc
sub
into
testb
jnp
or
aas
mov
cmp
cwtl
mov
outsl
es
push
lret
mov
rcll
ret
imul
rorb
cmp
mov
jle
xchg
push
push
sub
jne
push
pusha
fucomi
int3
aam
lea
repnz
cli
arpl
sar
sub
icebp
xchg
mov
insb
nop
idiv
incb
add
or
cmpsb
movsw
shrl
mov
adc
aam
inc
push
add
sub
and
mov
mov
addb
lret
adc
imul
sahf
inc
push
inc
dec
imul
xor
dec
jae
int
movsb
shrb
mov
jmp
into
imul
cmc
adc
add
ret
sub
jns
fcomip
add
sti
sbb
mov
dec
inc
fadd
sbb
jb
mov
mov
in
js
push
cltd
lcall
push
pop
int3
cmp
addb
es
idivb
imull
rorb
pop
mov
mov
mov
mulb
xor
ja
lahf
adc
or
adc
cli
push
movsb
sbb
fucom
sbbb
xor
es
ja
adc
cwtl
sbb
inc
adc
cld
mov
xlat
aam
ret
mov
aas
mov
xchg
xor
xor
inc
std
mov
mov
fwait
dec
jp
jne
les
push
ret
gs
mov
cltd
push
dec
dec
or
pop
cmp
call
pavgb
push
popa
mov
jne
mov
jb
dec
mov
lcall
mov
aas
inc
lea
add
sbb
mov
pushf
cmp
mov
mov
aas
xor
xor
inc
ficoms
pop
and
dec
imul
jmp
js
outsb
cli
adcl
lock
jecxz
push
loop
mov
inc
repnz
shrb
inc
jge
fldcw
lods
push
fistps
popf
ss
inc
fstpt
test
jecxz
jbe
pop
in
shl
push
repnz
mov
aas
mov
je
mov
adc
test
and
test
pop
sbb
cmp
jg
dec
decb
jg
mov
sub
ljmp
push
aam
es
int3
adc
push
aaa
sbb
add
push
add
leave
or
mov
mov
mov
lret
mov
loope
inc
or
fstpt
push
push
push
push
add
sbb
push
push
xlat
outsl
mov
adc
push
aam
dec
aaa
mov
mov
mov
cli
ret
inc
pop
aad
pushf
lret
scas
xchg
push
loope
int3
nop
out
loop
xlat
lret
mov
add
mov
ficompl
hlt
add
jae
dec
adc
sbb
mov
jle
jbe
std
pop
add
fisttps
stos
inc
xchg
test
jb
mov
repnz
sahf
jmp
lret
dec
mov
and
cmc
xchg
jo
xchg
repnz
inc
cli
pop
cmp
mov
or
int
enter
sbb
cltd
sub
addr16
incl
ja
fs
mov
adcl
xor
test
and
adc
push
aaa
jbe
xchg
sub
add
insb
xchg
daa
jp
mov
int
xor
in
out
dec
xchg
bound
pusha
hlt
mov
mov
xor
mov
out
fiadds
inc
lods
sub
jle
dec
out
cmp
xchg
sbb
popa
jo
adc
cmp
fs
xor
pop
pop
std
js
sub
decb
inc
clc
repnz
movsb
push
push
fs
insb
add
pop
movl
lret
test
mov
das
sub
movhps
icebp
sub
or
pop
pop
xor
hlt
xchg
dec
sbb
mov
mov
sti
aam
cmc
mov
push
sbb
out
outsl
pop
adc
jb
xor
scas
sbb
popa
push
sbb
out
mov
pop
repz
es
or
mov
dec
xchg
mov
xchg
in
cmp
iret
pop
loopne
inc
mov
pop
push
repz
push
and
les
dec
fdiv
pushf
mov
xor
push
icebp
nop
xor
popa
bound
or
data16
mov
pop
jge
and
xor
cmp
adc
cmpl
jae
loope
sahf
jge
sub
mov
adc
loope
jecxz
pop
leave
cmp
int
dec
xlat
and
inc
adc
adcl
and
cmpsb
shll
sub
dec
xor
outsl
push
rcll
aam
jnp
jno
inc
shll
bnd
pop
mov
in
cmp
lods
mov
mov
imul
ja
imul
sahf
xchg
daa
rolb
enter
mov
pusha
cmp
xor
and
sbb
fcomps
aas
loop
and
inc
nop
lret
or
lods
pop
push
push
cs
jecxz
mov
push
jbe
fcomip
std
cmp
decb
fadds
pop
push
or
or
fwait
jge
sub
sub
pop
inc
mov
xchg
call
pop
adc
addb
shll
into
push
xchg
dec
push
enter
shll
loope
cltd
rorb
inc
and
repz
call
mov
incl
dec
fldcw
mov
jb
jle
mov
leave
push
scas
imul
mov
push
insl
adc
dec
adc
stos
loop
cmp
cwtl
jge
mov
sti
adc
decb
jl
pop
das
pop
mov
das
in
sub
loop
out
jno
xor
cwtl
clc
xor
pop
add
movsl
outsb
adc
stos
or
subb
insl
jge
imull
test
pop
dec
pop
mov
mov
test
and
stos
xacquire
cmp
imul
and
sbb
daa
mov
cmpb
xchg
add
cmp
stos
mulb
push
out
sbb
mov
add
jnp
jg
repnz
sahf
out
popa
cltd
mov
ffree
rcl
push
adc
mov
dec
stos
cmp
mov
push
xchg
aad
mov
ret
std
fadds
dec
jo
andb
cmp
aam
inc
adc
mov
ffreep
push
lock
push
mov
and
add
cmp
cmp
pop
aam
and
adc
mov
pop
xor
ljmp
test
add
sub
dec
unpcklps
shll
addr16
and
jb
aam
adc
add
testb
shr
ja
pushl
mov
sti
iret
xchg
imul
inc
roll
repnz
pop
lret
pop
aaa
daa
daa
push
dec
jo
jae
gs
cmp
mov
sbb
les
mov
cmp
lcall
push
inc
jb
popa
decb
rcl
fisubs
popf
cmpsl
inc
push
clc
pop
xchg
lock
inc
daa
add
lock
cmpsb
cld
mov
sbb
cld
jg
imul
cmp
loop
pop
xchg
cmpsb
test
pop
popa
push
out
mov
cltd
mov
mov
aad
and
adc
das
mov
pop
in
mov
hlt
out
mov
and
mov
mov
mov
stos
test
jle
and
ds
mov
mov
ftst
repz
cs
mov
or
xor
ja
lahf
pop
leave
jmp
sbb
movsb
mov
xchg
rcrb
int3
test
fadds
fdivl
popf
add
hlt
out
aas
push
cld
dec
cwtl
and
cs
push
jecxz
rol
sahf
mov
xor
fldcw
repz
int3
enter
insl
dec
movsb
shlb
imul
insb
sahf
jecxz
orb
and
inc
shll
xorl
or
in
scas
cmp
push
cwtl
inc
inc
pop
lret
fisubrs
outsb
push
pop
push
mov
es
sbb
lock
dec
sahf
mov
fidivl
aas
loope
fwait
mov
inc
add
push
mov
das
aam
inc
jae
lods
jb
insl
jge
imul
out
cmp
or
ss
or
pop
jmp
int3
popa
xchg
mov
insl
pusha
nop
jl
xor
adc
cmp
and
inc
jl
pop
sbbb
je
mov
push
fisttpll
cmp
aas
sub
dec
jns
mov
xchg
ss
add
push
and
in
notl
inc
xchg
adc
mov
stc
mov
clc
inc
inc
incb
jo
sub
aam
ljmp
mov
xor
mov
call
sbb
push
mov
xor
pop
fstl
dec
leave
das
pusha
inc
xchg
js
mov
into
add
add
dec
cmp
insl
dec
fwait
pusha
fdivl
adc
scas
gs
mov
push
xchg
xchg
lcall
jge
or
movsb
decl
les
lcall
bound
xor
mov
jmp
pop
and
cltd
movsb
push
and
add
and
mov
test
xchg
insl
cmpsb
xbegin
jne
and
xchg
pusha
std
sbb
imul
std
dec
jne
std
adc
adc
ds
jl
sbb
stos
cmpl
out
add
cmove
ret
sahf
adc
out
mov
imul
loopne
in
cmp
mov
add
lock
mov
jb
jp
cmp
push
ds
movsb
adc
outsb
fsts
insl
test
add
push
outsb
inc
fwait
outsb
xchg
call
lods
jne
int
mov
into
jg
inc
dec
sbb
cmp
insb
inc
leave
insl
adc
or
test
jl
repz
lods
iret
or
cltd
sub
faddl
aas
xchg
push
aad
cmp
adc
xor
test
xor
xlat
lods
out
sub
push
adc
xchg
out
imull
or
xor
je
enter
out
sahf
clc
jae
mov
lods
int
mov
dec
inc
pop
cwtl
jae
push
mov
add
push
xor
or
fld
sti
or
adc
and
mov
vmovaps
loope
mov
pop
mov
push
sbb
out
pop
adcb
mov
repz
es
pusha
aaa
jb
or
cmp
push
and
xchg
lods
cmp
mov
mov
sub
out
stc
fcmovnu
push
shl
ds
js
ja
mov
outsb
xor
jmp
mov
cld
shll
repz
pusha
ja
cmp
es
pop
mov
push
sbb
dec
pop
cmp
or
adc
xchg
cmpsl
jnp
jbe
cmp
sbb
xor
ja
nop
aaa
pop
or
sub
mov
push
in
adc
cmp
sahf
pop
insb
test
mov
sbb
clc
kxorb
dec
mov
lahf
fdivr
insb
push
fistpll
dec
mov
rorl
bnd
mov
sub
int
ficomps
sbb
fmul
jmp
mov
comiss
addr16
push
or
sub
pop
inc
adc
jnp
adc
xchg
mov
mov
and
imul
lahf
xorb
les
mov
jb
cmp
stos
dec
enter
dec
dec
push
push
mov
in
daa
out
sahf
xchg
out
dec
stos
xorl
push
jmp
xor
cmc
push
mov
cs
mov
and
xor
imul
jp
fstl
mov
dec
stos
xchg
int
mov
mov
push
shr
jg
dec
outsl
push
sbb
cmp
ret
jnp
fimuls
fcompl
int
clc
int
sbbl
mov
add
imul
push
mov
fsubs
insl
mov
pop
fistps
dec
sub
lods
jl
or
addr16
loop
test
gs
jge
fs
mov
adc
popf
scas
push
push
push
dec
ds
jp
xchg
cwtl
and
adc
fdivrl
pushf
or
and
mov
pushf
dec
pop
mov
jp
mov
mov
adc
push
stos
rolb
cmp
mov
scas
fsubl
cwtl
cmp
clc
in
lock
cli
shll
pushf
mov
lret
gs
jns
es
shl
ficompl
adc
movsl
ljmp
shlb
pop
sti
insl
sbb
fdiv
fstl
mov
aaa
jle
adc
adc
fisttpl
jg
xchg
loopne
xor
fldenv
cmp
aad
xor
leave
inc
and
sbb
shrl
inc
into
sub
and
test
clc
out
sbb
or
ja
fdiv
dec
ds
out
and
rolb
enter
aad
adc
sahf
and
in
jbe
cli
out
icebp
cli
aam
lret
jb
cmp
add
lea
cmp
sbb
xchg
lods
daa
subb
ret
sub
data16
out
sub
pop
out
cmp
mov
aaa
in
mov
sbb
mov
inc
add
inc
push
xor
dec
lods
adc
xor
pop
aaa
sti
inc
pop
loope
mov
or
cmpsl
fisubrl
jp
or
and
pop
add
xor
outsb
movsb
add
push
push
jecxz
sbb
push
mov
imul
js
push
shrl
ret
xlat
jo
pop
cmp
mov
ret
mov
pop
and
jnp
shrl
int3
in
and
cmp
mov
call
loopne
cld
sbb
int3
stos
mov
push
cld
sarl
ror
dec
aaa
pop
test
push
and
testb
cmp
aas
xchg
fisubs
daa
fldcw
mov
fisttps
in
mov
jmp
fdivrl
inc
daa
xchg
push
inc
icebp
sbb
xlat
cmpsb
jmp
sbb
jne
mov
insb
pop
inc
xchg
sub
insl
fdivrp
pop
xchg
pop
int3
and
cmp
cli
inc
inc
repnz
test
or
mov
inc
dec
sti
in
out
jb
mov
cmpsb
aam
pop
sbb
mov
scas
pop
jbe
push
dec
add
or
push
lock
int3
icebp
dec
mov
enter
out
ja
xchg
jle
inc
cwtl
pop
cmp
xchg
loop
scas
stos
sub
push
adc
test
sbb
rorl
bound
sarb
imulb
jle
inc
jmp
push
stos
das
or
dec
jns
sti
in
push
pop
pop
ljmp
mov
pop
aas
mov
iret
hlt
mov
pop
mov
push
mov
dec
int3
jno
mov
adc
scas
cmp
lret
mov
mov
push
in
mov
lea
cmp
shl
shll
or
sub
pop
dec
arpl
xor
sarb
jl
add
add
pop
sbbb
jnp
pop
out
lock
fmull
popf
cli
pop
mov
shll
repnz
scas
ret
test
sub
xor
cmp
int3
int
push
aad
jno
int
iret
fadds
push
sub
pop
mov
andb
and
js
mov
sbb
adc
sahf
mov
mov
dec
test
jp
cmc
lods
repnz
hlt
fidivrs
repz
mov
mov
jp
cld
jns
pop
aam
or
dec
pop
mov
loop
and
aaa
cmc
stos
dec
add
fldt
jno
mov
nop
inc
mov
mov
in
ret
daa
addr16
adc
jg
aas
dec
pop
inc
call
rep
popf
dec
dec
cs
mov
rorb
stc
sbb
mov
xchg
cmp
faddl
xor
out
pop
int3
loop
in
xor
lock
adc
push
and
mov
pop
adc
inc
xchg
or
cmc
xchg
adc
nop
mov
cltd
sbb
xor
fwait
and
jge
mov
mov
dec
jb
and
mov
push
jle
int3
sar
je
in
xchg
sub
jnp
arpl
xor
js
lock
jno
shll
cmpsl
ficompl
fucomi
jl,pn
mov
scas
inc
enter
test
or
leave
mov
adc
ret
xor
in
out
add
mov
testb
sbb
es
arpl
sub
or
fiaddl
out
sub
inc
add
sbb
inc
push
adc
pop
dec
sub
inc
sbb
lds
pop
mov
sbb
cltd
or
sub
mov
test
loop
dec
push
fs
push
xchg
xchg
dec
aam
arpl
jecxz
pop
in
jp
int
xor
mov
ss
popa
xchg
mov
pushf
outsl
mov
and
cmp
jecxz
and
add
jp
shll
or
cmp
xor
in
popf
mov
push
jmp
repnz
sahf
out
add
and
mov
mov
scas
aaa
fdivr
xchg
xor
int
jge
out
adc
pop
cltd
mov
lret
add
call
in
mov
push
cmp
test
sub
dec
hlt
cmp
pop
push
mov
rcrl
mov
sub
jp
dec
insb
dec
mov
or
imul
sub
insb
out
mov
jl
inc
pop
in
push
sbb
call
outsb
sub
sbb
pop
in
pusha
fisttpll
js
sahf
test
ja
push
mov
sub
pop
xchg
pusha
popa
xorb
enter
xchg
cmp
std
jmp
aad
scas
stos
mov
or
push
fcoms
movsl
clc
loopne
sub
rcrb
mov
lods
ret
cwtl
sbb
dec
xchg
mov
dec
mov
dec
xchg
or
jp
mov
add
data16
inc
inc
mov
mov
mov
daa
hlt
or
movsl
adc
mov
loop
add
or
jno
stc
push
imul
cmp
bound
scas
push
adc
cmc
inc
mov
jne
dec
imul
sahf
jp
adc
in
ss
pop
inc
pop
rol
aad
ds
aad
jno
adc
out
sti
push
cmpsb
pop
lahf
in
not
int3
mov
icebp
sbb
cwtl
inc
jle
mov
push
push
lahf
outsb
cmpsl
pop
fs
push
push
sub
inc
cli
inc
mov
and
push
into
or
test
add
fnstsw
cmp
push
mov
mov
lds
and
add
in
add
cld
sub
mov
jns
or
xor
fistpll
stc
cs
xchg
lock
out
sub
addr16
sahf
outsl
inc
pop
enter
xchg
add
out
xchg
loopne
mov
cltd
pop
and
or
lahf
test
repnz
inc
pop
add
insl
add
rcr
jne
frstor
xchg
pop
loopne
dec
sbb
sbb
xlat
test
das
xchg
fbstp
cli
add
dec
aad
mov
jae
mov
xchg
imul
ucomiss
das
aad
lahf
push
and
outsb
rorl
hlt
sbb
testl
pop
sbb
pop
imul
push
add
inc
fnstsw
cmp
sub
out
mov
mov
shr
sbb
cmp
xor
imul
ret
ds
mov
flds
jo
adc
movsl
adc
es
inc
or
out
xorb
mov
sti
push
lret
adc
lret
push
inc
pop
leave
shrb
repz
cli
sub
cld
sbb
scas
sbb
cli
dec
pop
mov
add
ja
out
addr16
jge
jmp
xlat
int
push
pop
or
hlt
sub
xchg
shll
adc
inc
pushf
cli
jl
jp
mov
ljmp
pop
ja
cwtl
ds
pop
pop
push
outsl
add
hlt
nop
and
cmp
lds
in
cmp
fists
pop
bnd
add
fildll
out
jbe
xchg
and
jnp
gs
in
insb
scas
lea
nop
jns
and
pop
dec
inc
xchg
fwait
enter
pushf
sti
repz
push
xchg
je
arpl
xor
stc
cs
mov
mov
pushl
and
loope,pn
loope
imul
and
gs
xchg
inc
in
sbb
jns
inc
fidivl
adc
mov
out
jmp
rolb
xor
dec
inc
inc
push
lret
push
xlat
rcl
sbb
das
push
es
iret
fs
mov
push
in
push
dec
fs
add
cwtl
mov
sbb
shl
xor
jle
mov
rolb
test
mov
arpl
emms
and
fcoml
pushf
xor
mov
mov
or
add
imul
pop
outsb
inc
dec
nop
repz
push
js
pop
jg
and
mov
lock
imul
xlat
imul
mov
imul
popf
jge
pop
xchg
sti
push
inc
and
jle
adcl
addr16
je
incb
add
cmp
jb
inc
psadbw
stos
adc
roll
push
repz
outsl
shll
ja
mov
outsb
add
cmp
dec
test
and
adcl
jne
filds
testb
imul
cmc
dec
shl
dec
or
and
rcll
sbb
js
cmp
fisubl
adc
in
icebp
sbb
sub
lret
sub
xchg
adc
int3
and
mov
jnp
daa
fistpll
lcall
lea
and
fs
adc
loope
and
sti
cmp
fldcw
push
inc
or
imul
imul
sbb
ret
test
or
idiv
inc
inc
pop
lods
out
mov
fisubl
sbb
mov
sarl
popa
pop
jae
xchg
cs
in
lret
sti
pop
repz
loop
repnz
nop
pop
stos
mov
jge
popf
mov
jns
repz
adc
dec
mov
jbe
inc
xchg
push
aam
mov
xor
jmp
fwait
mov
mov
fnsave
or
mov
pushf
fwait
push
test
jg,pt
mov
loop
popf
pop
jns,pt
and
in
subb
aaa
sbbb
jge
lret
dec
dec
cmp
sub
arpl
daa
subl
xchg
or
xchg
lock
loope
shrb
cmp
cmp
dec
int
jo
jb
mov
cmc
push
mov
cwtl
jmp
icebp
jns
sub
inc
cmp
aad
shrb
notl
repz
push
pop
add
xchg
adc
stos
mov
cltd
ja
sbb
or
xchg
dec
xor
pop
or
sub
push
xor
mov
out
mov
jb
punpckhbw
enter
cmp
fwait
inc
and
rorl
and
cld
fwait
lcall
xor
jmp
roll
pop
sbb
shl
cli
xchg
adc
aad
repz
lret
rol
icebp
inc
in
daa
pop
inc
ds
jbe
pop
clc
mov
scas
inc
jb
push
pop
mov
cli
mov
jns
jp
insl
imul
xchg
xor
imul
cmp
push
lods
roll
and
cmp
subl
mov
push
mov
mov
pop
push
sahf
push
sbb
stc
mov
daa
pop
xor
rorb
movsb
pop
mov
jge
bound
add
out
xchg
cmc
inc
sub
mov
in
sbb
fiaddl
pusha
push
adc
pop
out
clc
lret
or
aam
jge
dec
fsub
out
inc
pop
inc
sti
rorb
ljmp
into
int3
mov
inc
insb
cmpsl
sbb
pusha
pop
jmp
push
mov
sbb
jbe
in
push
shl
aaa
mov
mov
xchg
aaa
stc
pmulhuw
std
fsts
sub
xor
scas
or
adc
fucomi
add
add
xchg
push
rcrl
adc
xor
cmp
adc
adc
jl
push
inc
dec
imul
stos
ja
test
je
jns
outsb
popf
cmpsb
push
and
xlat
stc
dec
push
jmp
xchg
fstl
inc
aas
cmpsb
bound
push
in
mov
movsb
push
ljmp
adc
ficompl
sub
add
nop
jno,pt
fldenv
inc
lods
add
call
sub
jne
sub
shrl
scas
mov
or
inc
mov
mov
mov
ds
xor
pop
xchg
out
or
fadds
mov
lret
push
mov
push
cmc
outsl
dec
std
push
lea
ljmp
int
fstp
andl
push
sub
nop
mov
out
jle
adc
xorb
xor
pop
push
fbstp
mov
pop
mov
xor
popa
aad
mov
lret
stos
mov
add
loope
jo
out
cltd
aad
in
lret
rol
std
cmp
into
jb
sahf
or
hlt
test
push
xchg
movsl
stos
jbe
cld
pop
xor
mov
dec
call
rcll
int3
sbb
push
stos
and
insl
inc
popf
xchg
sub
insl
aas
adc
sbb
das
push
cltd
mov
xchg
test
rcrl
adc
or
jno
add
push
push
mov
xor
shr
inc
mov
fnstsw
fisttpl
popa
enter
or
mov
mov
lock
and
sbbb
sbb
lret
out
jns
cmc
jb
in
repz
push
mov
pop
fs
inc
cmp
mov
mov
adc
pop
add
mov
dec
xor
xchg
pop
test
pop
xchg
adc
and
push
fisubs
mov
mov
data16
cmc
call
js
mov
aam
dec
mov
xchg
mov
int3
inc
dec
push
xor
outsl
xlat
dec
xor
sahf
fldl
mov
aad
push
push
popf
mov
inc
cmc
bound
out
test
stc
nop
lea
adc
inc
and
dec
mov
lcall
inc
repz
jne
data16
or
mov
out
push
out
arpl
dec
lea
mov
mov
jp
push
stos
cmp
mov
xor
sub
adc
pop
imul
lea
xchg
fmuls
dec
cmp
call
int3
aad
pop
divb
adc
sbb
sbb
int3
js
cmc
sbb
lahf
pop
cmc
push
adc
jg
pusha
add
lea
std
inc
jbe
icebp
sbb
fsubrs
stos
jno,pt
jmp
or
add
pop
rcrl
idiv
add
push
xor
lret
push
and
mov
sbb
cmp
add
xlat
lds
daa
xor
scas
add
fdivrp
scas
dec
pop
lea
sub
out
in
test
cmpl
xor
xchg
push
cmp
push
pop
addr16
into
movsb
cmpsl
mov
mov
lds
movsl
jmp
pop
inc
inc
in
jmp
sub
bound
jns
test
outsl
pop
test
lods
adc
cmp
pop
sub
mov
ficoms
mov
dec
movsl
add
pushf
push
movsl
jbe
push
sbb
aad
fdivrs
adc
or
mov
inc
mov
jbe
push
ljmp
movsb
push
pop
stc
cmp
loopne
mov
cwtl
adc
ret
cli
cmc
movsb
jne
js
aaa
cmp
jle
addb
aaa
movsl
dec
mov
dec
dec
lods
push
cmovo
call
push
imul
bound
adc
fsubl
in
or
jne
pusha
jg
div
movsb
shlb
xor
lahf
xchg
jp
sub
lret
mov
cmpsl
addr16
cli
xor
hlt
inc
pop
loopne
and
mov
mov
lods
pop
cmp
inc
pusha
cli
stc
leave
or
aam
stc
test
push
scas
jbe
dec
jno
mov
mov
cmpsl
mov
gs
call
sbb
inc
iret
test
mov
loope
out
jns
adc
push
xchg
mov
orl
aaa
mov
fwait
or
adc
int
test
pop
cmp
nop
add
imul
js
int3
pop
pop
repz
dec
popf
mov
mov
xchg
push
push
int
test
repz
out
xchg
lock
call
lahf
push
xor
mov
imul
xchg
mov
jle
addl
mov
inc
push
movsb
mov
dec
pop
out
dec
xlat
testb
sub
mov
hlt
sbb
fwait
xlat
call
adc
popa
sub
fiaddl
or
outsl
orl
pop
lahf
test
push
xor
inc
mov
lods
addr16
sbb
jns
inc
mov
xchg
sub
jle
shl
adc
cs
popa
jle
adc
pop
sbb
sbb
icebp
into
hlt
call
sbb
ss
cmp
aas
and
pop
je
sub
fwait
dec
xor
incl
mov
push
stos
aam
arpl
xchg
movsb
cmp
pop
dec
xor
jno
imul
scas
sbb
decl
adc
dec
aas
dec
mov
cmpsb
jmp
lahf
push
test
out
cwtl
jne
mov
hlt
sbb
je
es
imul
icebp
jg
pop
jle
xchg
call
ja
out
lcall
xchg
push
ret
js
data16
jge
or
jb
adc
loope
mov
mov
lahf
add
adc
mov
mov
icebp
adc
xchg
imul
and
cmpsl
push
jle
mov
mov
dec
incb
cmp
jl
inc
insb
imul
and
mov
sub
cltd
ds
ret
icebp
je
mov
push
js
jecxz
daa
sti
jns
outsb
les
sahf
lock
push
jns
insb
fldcw
xorb
inc
dec
les
test
jae
imul
test
push
mov
call
and
fiaddl
bnd
cmpl
xchg
ja
inc
push
ja
xchg
cmp
add
outsb
and
and
int3
xchg
xchg
cs
push
rol
es
int
jle
sub
adc
mov
daa
popa
out
adc
jno
lret
cmpsl
pushfw
lret
inc
pop
jge
pop
hlt
iret
dec
add
mov
mov
sub
shl
sbb
std
hlt
es
icebp
or
xlat
cltd
in
ljmp
aad
dec
aam
mov
test
mov
jmp
es
xlat
popa
jge
stc
jg
adc
xchg
aas
mov
pop
outsl
loopne
xchg
or
cld
cmp
and
rolb
adc
add
jmp
cmp
xor
mov
sbb
pop
xchg
pop
push
sbb
mov
xchg
adc
lahf
pop
shlb
xchg
xor
and
cwtl
push
pop
xor
clc
into
sub
push
loopne
or
pushf
push
push
sub
rorl
or
movsl
aas
gs
cltd
pushf
in
xchg
nop
popa
jl
imul
faddl
hlt
mov
sub
sti
outsl
aaa
dec
xor
dec
repz
pop
push
lcall
in
out
das
jmp
outsb
add
add
ljmp
inc
ret
and
cltd
inc
cwtl
arpl
jnp
adc
dec
pop
int3
xor
sub
and
or
mov
mov
xor
clc
pop
fst
sti
shll
cmp
mov
mov
fxch
lahf
insb
fwait
ds
mov
mov
int
cltd
mov
cmp
out
and
or
inc
cwtl
mov
out
cli
dec
call
cmp
dec
enter
in
js
stc
fwait
xchg
into
sbbb
sub
fwait
jl
cmp
adc
jmp
and
push
lcall
test
lock
inc
insl
inc
popa
or
and
add
aam
mov
shl
cmp
jg
adc
es
push
pop
inc
xlat
xchg
scas
xchg
pop
xor
sub
add
stc
arpl
mov
cmp
jp
outsl
xchg
and
push
cmpsl
adc
fcomp
rclb
lahf
nop
shl
addl
and
fisubl
sbb
ljmp
inc
rolb
adc
aaa
sahf
jbe
inc
or
jbe
xor
xor
test
shr
jae
in
icebp
cmp
loop
out
pop
insl
pusha
mov
sbb
sub
pushf
cwtl
aaa
fstl
inc
outsl
loopne
push
js
xor
fwait
cmp
or
roll
mov
in
jb
cli
rcll
cld
fcomi
loope
cmp
adc
adc
xchg
sahf
repnz
mov
pushf
push
in
das
pusha
dec
lea
push
push
fstpt
inc
jns
frstor
lahf
subl
mov
fidivrs
icebp
outsl
sarl
out
dec
icebp
push
movsl
dec
xchg
cmp
dec
pop
enter
dec
lret
and
pop
test
pop
jnp
mov
jbe
lods
in
stos
hlt
fdivrs
lret
push
xchg
push
cmp
xchg
mov
mov
add
mov
out
pop
lods
bnd
sti
lret
and
in
lock
adc
add
cld
sub
dec
aad
fs
dec
inc
mov
jl
push
addr16
xchg
popa
fwait
xor
cmpsl
rol
xor
enter
sub
jb
in
jbe
add
movsl
aad
in
mov
cwtl
movsb
jae
stc
aad
out
repnz
loopne
push
push
mov
sbb
cmp
or
aaa
cwtl
adc
push
inc
mov
or
notl
adc
mov
dec
sub
xor
mov
mov
enter
dec
test
fs
int3
out
pushf
loope
or
daa
jbe
je
mov
stc
das
push
xchg
and
sbb
inc
loop
int3
fstl
or
insl
fdivr
std
jmp
cld
sub
mov
push
mov
rcr
cmp
ljmp
dec
popf
adc
popa
nop
pop
fs
test
shlb
mov
in
cmp
out
push
repz
jne
xchg
push
and
icebp
and
mov
in
add
loop
xor
xchg
mov
popa
repz
loopne
fwait
lock
fst
adcl
in
fstpl
pop
or
sbb
iret
pop
fildl
mov
ss
mov
adc
pop
mov
cmpsl
fstl
xor
or
in
lods
int
cmpsl
cmpb
imul
hlt
ljmp
loop
shlb
push
ljmp
mov
xor
mov
rcrl
jg
test
mov
push
lahf
adc
sbb
adc
or
popf
xchg
push
mov
fstps
lds
add
push
loope
lsl
and
ret
mov
cmc
mov
inc
and
adc
xchg
push
push
ret
iret
mov
int3
idivl
jb
cmp
rclb
fcmovnbe
mov
jp
popf
mov
fstpl
xchg
ja
daa
and
jmp
addr16
orb
jne
fucomi
pop
rcll
inc
loop
test
sarl
test
dec
cmp
dec
cs
fistpll
pop
sbb
jno
loop
out
add
fldenv
cmp
lea
loopne
int3
xor
pop
outsl
lods
fdivrl
mov
jle
xor
add
pop
jmp
xchg
push
pop
jno
dec
in
bound
in
inc
xchg
aad
or
pusha
push
scas
adc
add
lret
test
and
out
push
add
sahf
push
arpl
push
fsubs
or
jmp
out
mov
cmp
pop
popa
lahf
mov
clc
dec
arpl
insb
cmp
mov
mov
jg
mov
stc
xor
inc
imul
sarb
nop
loope
inc
lret
icebp
cmp
jns
clc
push
sbb
push
push
int
cmc
adc
mov
jnp
xor
mov
imul
jns
xor
rcr
out
pop
mov
pop
fs
or
push
jmp
xchg
xor
popf
dec
in
outsl
add
dec
push
imul
dec
pop
push
adc
int3
popa
add
hlt
dec
daa
xor
lds
xor
sar
sub
sub
sbb
cmp
bound
in
jno
mov
xor
fmuls
cmp
in
clc
adc
or
cmp
xchg
jmp
ljmp
imul
imul
cmpsl
mov
fisubrl
or
jp
fcoml
push
fwait
cvtpi2ps
dec
add
mov
mov
ret
lods
push
cmp
ret
mov
movsl
add
sbb
dec
pop
mov
jecxz
add
or
fsubs
xlat
jnp
rorl
fdivl
fidivl
or
cmp
pop
icebp
int3
sub
cltd
push
pop
test
fistps
loop
ljmp
pop
xchg
ds
imul
js
lock
call
cmp
jecxz
sub
cmp
call
adc
xor
dec
cmp
imul
out
ja
jae
mov
stos
push
or
popa
fbld
pushf
and
xorl
xor
pop
fcmovne
jp
loope
pop
repnz
xchg
pop
jle
fidivl
fnsave
pop
xorb
push
jnp
jg
ss
scas
sub
cs
mov
xor
insl
inc
rcr
xor
mov
push
es
int3
jmp
mov
or
out
sub
jl
sahf
out
adc
test
shll
fs
mov
sub
leave
daa
lock
xor
push
sarb
sbb
push
jbe
lock
inc
int
sbb
cmpsb
adc
lret
jne
cmp
or
push
fists
leave
fsubl
cmpsb
sbb
mov
lds
dec
mov
inc
sbb
std
dec
mov
sahf
ret
jge
fs
or
fisttpll
xchg
popa
dec
xchg
daa
add
mov
adc
outsl
out
xor
sbb
rcl
mov
outsl
pop
and
and
pop
jecxz
data16
inc
xor
cmpsl
mov
stos
loopne
add
orl
adc
imul
fbld
and
lock
enter
xor
xor
notb
call
aam
add
out
out
insb
mov
cmp
filds
sbb
pop
dec
dec
decb
push
stos
aaa
aas
adc
out
faddp
fsub
cmpsl
push
dec
jle
mov
pop
aad
mov
mov
insl
sub
xchg
bound
cmp
xchg
popf
sub
mov
lret
sbb
xor
push
test
push
scas
xchg
push
out
xchg
mov
packsswb
mov
dec
dec
push
lods
pop
sub
add
xlat
icebp
int
xchg
dec
cmp
icebp
push
inc
dec
mov
cs
pop
jle
test
lcall
inc
cmp
add
je
popa
mov
cmp
in
rcrl
push
fstpt
inc
jo
int
sarl
cli
call
mov
adc
bound
sbb
cmp
imul
subb
and
cwtl
es
xor
imul
lret
in
sbb
in
or
xor
lods
shll
or
pop
mov
mov
or
dec
ret
ljmp
pushf
inc
dec
sbb
aam
sbb
rclb
nop
fidivs
clc
test
hlt
es
inc
mov
jmp
aaa
mov
loopne
push
out
dec
xchg
nop
popf
mov
add
sahf
jb
fwait
mov
dec
lcall
or
dec
das
jae
push
or
notb
lds
or
mov
or
mov
popf
xchg
xchg
or
lock
push
call
out
mov
mov
inc
aaa
ja
or
sub
in
jl
test
sbb
std
dec
xor
aaa
sbb
mov
push
jge
dec
add
push
adc
mov
jge
lods
jmp
fiadds
lods
push
cmpsb
fidivrs
mov
movsl
dec
out
lcall
mov
xchg
pop
push
in
andl
jmp
push
and
test
jl
mov
ds
in
cmp
sub
test
imul
xor
mov
lahf
pop
xchg
scas
push
push
pop
cmp
push
int
stos
mov
sbb
jg
cld
lea
sti
ret
out
add
ficoms
lahf
cli
inc
cmp
xlat
cmp
pop
and
xchg
pop
repnz
jl
gs
fidivrs
stos
pop
dec
add
arpl
pusha
inc
inc
pop
outsb
outsl
insb
mov
lods
sbb
jno
test
les
sti
and
mov
jne
in
aam
pusha
mov
js
xchg
push
packssdw
test
sahf
cmp
outsl
mov
add
adc
xor
dec
push
xchg
repnz
aas
and
xlat
es
aaa
mov
mov
ret
inc
addl
ja
sbb
xor
call
icebp
jns
inc
adc
js
xor
or
int
mov
lret
mov
popf
mov
or
mov
ljmp
ret
mov
aad
jns
enter
daa
mov
xor
pop
stos
in
test
jno
inc
ljmp
icebp
pushf
insl
std
push
aaa
jnp
std
out
mov
cltd
int
scas
jmp
or
hlt
rorl
xor
cmp
lahf
nop
fidivrs
lods
lret
pop
mov
lds
rorb
hlt
adc
inc
mov
outsb
lods
mov
lds
out
repz
xor
cmpsb
outsb
es
push
add
and
scas
scas
negb
mov
xchg
repnz
in
pop
shlb
sub
or
pop
cmpl
int
inc
dec
mov
ret
sarl
insb
xchg
mov
mov
mov
add
push
lea
loopne
sbb
shl
sti
lods
rorl
in
faddl
adc
cmc
movsb
jp
push
dec
sbb
cld
insb
push
jbe
jb
mulb
outsb
stos
xor
lea
js
loopne
fcomi
mov
fisubrl
mov
scas
hlt
adc
inc
das
icebp
lea
jecxz
jl
mov
jne
hlt
aaa
out
push
and
out
test
cmpsl
sbb
dec
mov
or
divb
in
repnz
push
shl
test
mov
orb
jb
cmp
clc
sub
ret
int3
xor
and
jmp
popf
fmuls
xor
daa
mov
lahf
xchg
cwtl
cmp
mov
add
push
and
jne
sub
mov
stc
enter
hlt
ffreep
push
lock
mov
into
lock
mov
cli
dec
sahf
push
jg
add
cmp
push
or
adc
push
xchg
push
ret
adc
adc
xor
icebp
out
jmp
push
inc
popf
sti
data16
addr16
mov
fmuls
dec
mov
fnstcw
in
jp
mov
push
jge
das
test
stc
xchg
mov
sti
xchg
cld
aad
ljmp
bound
and
fimuls
cli
cmc
mov
push
call
sub
mov
push
rcrb
cmp
push
mov
dec
fstpl
inc
mov
bound
or
loopne
pop
jmp
xchg
add
sbb
jno
loope
sub
xchg
aam
xchg
xor
push
jns
cli
pop
xchg
mov
jo
jecxz
test
pop
cld
sbb
movsl
push
js
bound
mov
pop
fwait
call
lods
ds
aad
xchg
pop
js
out
mov
loop
and
pop
mov
mov
std
and
mov
in
out
out
mov
inc
cs
pop
add
xchg
inc
xchg
icebp
in
push
or
adc
mov
adc
mov
in
push
pop
inc
jb
jmp
or
sub
inc
gs
stos
mov
adc
mov
int
sub
ja
les
iret
mov
ja
loopne
jle
les
lahf
enter
xchg
jmp
fwait
xchg
mov
gs
jno
jge
cmp
jmp
fwait
enter
xchg
lods
pusha
mov
xor
out
lcall
std
inc
insl
andl
lcall
das
cmpsb
mov
lahf
ss
pop
adc
xchg
cld
les
mov
call
add
cmpsb
dec
jmp
push
cltd
sbb
fxch
cwtl
out
add
ss
pop
cld
mov
cs
mov
lret
insl
orl
fisubl
nop
add
lods
outsb
push
jg
inc
dec
cmp
add
jmp
and
add
stos
loope
pop
push
insl
lahf
stos
cld
mov
dec
xchg
sub
icebp
cli
mov
aaa
inc
push
ret
in
xorb
push
scas
push
sbb
stos
or
scas
inc
sub
outsl
jo
les
sti
outsl
jmp
fs
clc
fimull
jnp
xor
jns
js
or
xchg
xchg
scas
push
sbb
cmpsl
scas
ss
xchg
sti
adc
sbb
test
sbb
push
fstps
imul
aam
hlt
in
ljmp
movsb
and
mov
inc
adc
mov
pop
dec
shl
cmp
mov
pop
lret
dec
and
aam
xor
cli
dec
movsb
push
fsubp
dec
iret
sahf
mov
out
jae
or
push
mov
mov
push
mov
daa
call
clc
pop
cmp
and
stc
fildll
jle
ret
imulb
xchg
or
and
adc
fisubrs
sbb
out
fs
add
inc
push
ds
leave
push
std
cmp
xor
inc
gs
push
aaa
aas
xor
ret
mov
cmc
subl
mov
pushf
jmp
xchg
ret
push
lods
mov
cmc
add
xchg
add
jo
mov
shrb
in
hlt
jmp
cmp
mov
outsb
jecxz
pop
inc
mov
subb
xchg
dec
cmpsl
pop
cmpsl
xorl
in
test
xchg
pop
outsl
int
jg
or
mov
dec
jmp
movsl
cli
sub
sbb
mov
ja
inc
loop
mov
push
fwait
ds
push
jnp
aad
sub
ljmp
loopne
xchg
notl
outsb
sbb
xchg
clc
lds
add
je
cmp
mov
inc
mov
sbbb
iret
jl
negb
cmp
sub
mov
repz
frstor
shl
pusha
test
lods
test
mov
or
movsl
sub
sbb
sbb
inc
loopne
outsl
mov
fmuls
dec
sbb
cmc
xchg
fwait
jg
insl
push
scas
mov
aam
dec
stos
add
test
ja
push
cwtl
hlt
in
fwait
sub
insl
sbb
pop
out
or
mov
jle
pop
dec
std
rcl
outsb
lea
js
xchg
jo
jg
sbb
jno
jo
fmuls
add
sub
lahf
std
ss
adc
push
insb
xchg
hlt
fwait
stos
mov
inc
cmp
mov
outsb
mov
mov
incl
xor
push
in
movsb
adc
bound
stc
xor
mov
loopne
sub
or
cmp
ljmp
les
into
pop
jecxz
jbe
push
jb
push
mov
data16
pushf
aam
pusha
adc
and
ja
es
sahf
in
ret
imul
adc
fs
test
enter
jb
sbb
fsts
outsl
push
aad
or
dec
or
call
cwtl
movsb
jnp
sub
in
cmp
ljmp
and
lret
fldenv
lds
or
out
sbb
int3
adc
xor
in
lea
stos
and
and
bts
std
dec
imull
cmp
fistpll
test
pop
push
add
jmp
test
mov
xchg
mulb
cld
and
jle
and
div
dec
addr16
hlt
mov
mov
std
push
nop
cwtl
xchg
mov
add
inc
aaa
dec
adc
or
jg
inc
je
call
dec
incb
lods
sbb
and
adc
pop
test
add
orb
sbb
cmp
push
or
rorb
mov
jg
xor
sbb
negl
stos
jp
push
and
add
xor
aam
cwtl
lock
jle
je
add
sub
and
insb
fsubrl
out
scas
mov
or
mov
sub
cmp
adc
inc
call
arpl
dec
pop
stc
out
aaa
in
adc
sub
inc
add
inc
push
xchg
sbb
xorl
adc
rcrl
jnp
xorb
push
loop
push
sub
mov
stos
loope
and
les
mov
and
mov
rcrl
xchg
leave
incl
mov
pop
or
inc
jae
pop
hlt
mov
jmp
fcmovbe
xor
ljmp
cmp
push
jmp
aaa
jmp
xchg
pop
cmp
adc
out
iret
push
aad
dec
lock
jle
outsl
mov
pop
shrb
pop
pop
adc
cmpsb
scas
cli
jecxz
xor
mov
add
stc
dec
dec
mov
mov
inc
xchg
roll
int3
pop
mov
repz
mov
movsl
ljmp
bnd
push
test
lods
sub
mov
push
int
addr16
push
mov
cmpsb
adc
xlat
add
xor
push
stc
pop
lahf
or
es
fs
test
push
ret
roll
or
mov
aas
xchg
inc
jg
leave
xor
sub
jecxz
cltd
pop
jnp
adc
in
fsubrs
subl
sub
mov
pop
fldl
jbe
xchg
or
cmp
sub
mov
pop
bound
pop
mulps
sub
loopne
mov
das
xor
lret
or
es
jbe
pop
dec
push
ds
pop
repz
subl
adc
cmp
cwtl
pop
popa
add
xlat
stc
dec
adc
sahf
out
push
add
fs
into
jmp
cmpsl
in
jno
les
dec
xchg
mov
loop
in
sbb
mov
xchg
sub
std
lods
inc
outsl
cmc
push
jp
fdivrl
jp
or
rclb
cmp
dec
and
push
mov
mov
imul
mov
adc
out
push
loopne
sbb
cltd
inc
int3
ds
lock
xchg
sbb
jbe
xchg
cmp
clc
inc
rorl
inc
add
sbb
scas
mov
adc
lock
cmp
push
xchg
dec
mov
repnz
add
test
test
add
repz
sub
cmp
xchg
inc
mov
das
mull
jno
cmc
pusha
sub
inc
sbb
jp
dec
inc
js
hlt
daa
ja
repnz
in
push
outsl
and
adc
scas
push
rorb
push
bound
add
xor
push
xchg
dec
and
lret
inc
in
jnp
repnz
cmp
pop
mov
dec
xor
jle
test
mov
leave
lret
arpl
out
pop
addr16
and
repz
int
jbe
call
nop
orb
lea
cmp
and
adc
xor
ret
sbb
scas
test
push
in
adc
fwait
mov
xor
xor
mov
jbe
sub
mov
jg
jb
mov
push
sbbb
push
push
inc
repnz
lahf
add
stc
loop
cmp
gs
popa
pcmpeqw
imul
lds
push
push
inc
xlat
das
mov
mov
jecxz
lods
cmpsl
adc
bound
pushf
ret
imul
pop
and
sub
and
push
push
pop
jecxz
je
cs
jns
push
cmp
add
jp
sbb
fisttpll
push
mov
mov
shlb
and
movsl
cwtl
cmp
into
push
adc
lret
xchg
sahf
lret
xchg
leave
or
lahf
jge
sbb
insb
or
cmp
fsubs
adc
andl
cmp
scas
hlt
mov
lcall
es
mov
js
or
jbe
iret
movsb
push
fistpl
dec
jne
jmp
in
or
mov
jg
aas
xor
jnp
in
rcll
pop
imul
xchg
imul
les
nop
mov
sbb
add
jmp
stos
lahf
leave
lret
pop
jo
mov
frstor
iret
sub
mov
mov
mov
adc
xchg
cmp
mov
xor
cld
shrb
mov
jbe
ja
aas
out
pop
lret
ss
in
inc
dec
dec
ss
imul
arpl
or
lock
mov
in
mov
cld
lret
fs
idivb
aad
ret
mov
lods
pop
mov
pop
pop
bound
dec
lcall
push
pop
fsubs
and
jp
imul
insl
ret
jnp
sbb
adc
cmp
dec
sbbb
dec
and
inc
stos
xchg
loop
cltd
lret
mov
jne
xchg
cmp
in
lcall
jne
and
daa
scas
insl
sub
data16
push
cltd
rorb
adc
push
int3
pop
inc
das
add
cmpsl
insb
mov
add
mov
xor
stos
repnz
into
sub
push
sbb
jbe
sbb
call
outsl
divl
cld
mov
leave
int3
movsb
add
sbb
jge
or
int
iret
mov
std
lret
in
fdivr
into
jns
lret
push
add
pop
shlb
xchg
pusha
push
test
mov
jbe
cmp
lahf
sub
int3
mov
fld
or
out
test
adc
iret
mov
jecxz
jno
ficoml
insl
sbb
sbb
sets
pop
xor
xor
xor
pop
inc
movsl
dec
loope
jo
inc
shll
cmpsb
push
mov
into
inc
add
cwtl
into
xor
and
or
xchg
sub
ljmp
jmp
cli
mov
out
push
mov
lret
das
mov
stos
pop
int3
das
sbb
pop
js
adc
jecxz
or
sub
test
adc
and
imul
mov
lods
add
mov
sti
mov
fdivp
fidivrs
cmp
int
hlt
orb
sub
inc
pop
insb
addr16
loop
inc
cmp
call
xchg
sbb
xor
int3
insb
repnz
shll
shll
hlt
xchg
lcall
ret
jno
sub
mov
js
add
stos
sub
inc
hlt
outsb
lods
pop
xchg
sub
sub
push
cli
and
mov
push
xchg
add
shrb
mov
js
sbb
jle
or
xchg
pushf
adc
mov
dec
xchg
mov
xchg
add
sub
mov
repnz
mov
xchg
jge
xchg
jbe
cmp
cmp
pop
js
push
add
sarl
or
int
fs
sbb
xlat
dec
cld
cs
mov
sbb
jmp
mov
rcrl
jne
or
cmp
cld
or
mov
mov
pop
andb
cmp
lods
mov
mov
mov
jno
out
insl
ja
sub
imul
sbb
mov
xor
cmpsl
les
cmp
jge
repnz
mov
or
bound
rclb
add
aas
mov
call
sbb
mov
mov
xor
add
scas
fldl
mov
imul
arpl
sbb
mov
ss
and
ret
sbb
shrl
adc
sti
sub
dec
lock
mov
mov
arpl
dec
or
shr
fistpll
testl
cmp
push
pop
shll
adc
daa
add
shrb
and
inc
subb
add
pop
ds
xchg
insb
cli
ret
xchg
ljmp
jne
adc
fmul
std
out
in
nop
adc
xchg
test
sbb
out
loop
mov
sub
jbe
sub
mov
inc
and
jns
jbe
movsl
arpl
push
loope
and
mov
fildl
leave
loop
fcom
jl
pop
push
or
push
jb
pop
dec
shl
sub
push
insb
or
push
xchg
iretw
mov
push
mov
xchg
out
mov
ds
inc
pminub
int
mov
xor
fst
push
sti
pop
xor
mov
and
xchg
mov
push
out
mov
fnsave
sahf
pop
inc
xchg
loope
fdiv
sub
loop
mov
mov
addl
mov
push
lret
jns
mov
mov
mov
lcall
sub
mov
jbe
clc
sub
in
popa
cltd
fbstp
lock
repz
or
lahf
pop
inc
jecxz
push
lds
ret
gs
into
mov
mov
fs
sub
pop
mov
ljmp
sbb
imul
sub
and
pushl
movsb
test
stc
adc
std
fidivl
clc
mov
push
shrb
cmc
inc
jae
push
cmc
mov
cwtl
js
negb
jecxz
leave
cmpsb
test
rcrb
daa
insl
in
inc
pop
sbb
mov
and
sub
add
enter
push
imul
jnp
push
clc
aam
inc
nop
push
xor
aam
andb
cli
xchg
stos
ret
js
adc
or
repnz
int3
imul
lcall
or
pop
call
rcll
gs
fnsave
std
pop
int3
mov
mov
or
das
push
mov
mov
and
rolb
and
rorb
stos
xchg
and
flds
mov
jne
cmp
fistps
cmp
movq
xchg
adc
filds
xlat
in
in
pusha
xlat
fsubrs
and
jno
jns
rcl
mov
ret
jne
pusha
xchg
outsl
push
loopne
lcall
imul
insl
mov
ljmp
dec
cmc
enter
cmpsb
or
xchg
adc
vcmpsd
je
daa
mull
sbb
lea
jmp
bound
shll
loop
xor
cmc
cmp
push
repz
mov
imul
popa
push
cmp
xchg
add
inc
aas
cmp
pushf
mov
jns,pn
aam
jae
or
int
clc
cmpsl
imul
sbb
insl
xor
pop
rcr
cmp
push
pop
xor
xchg
lds
add
mov
mov
fidivrs
mov
test
stc
fbstp
dec
mov
adc
adc
or
push
or
lcall
clc
xchg
into
aam
test
cli
mov
mov
push
popf
push
loop
pop
xchg
mov
xlat
mov
js
sar
xor
adc
inc
xchg
mul
aas
ret
lds
jae
xchg
xchg
int
mov
sbb
mov
stos
pop
mov
pop
push
xchg
mov
pop
inc
aad
add
pushl
int3
and
sbb
xor
push
outsl
jns
push
je
bound
pop
test
mov
and
scas
mov
scas
int
repz
fcompl
jl
xchg
jns
lock
ret
xchg
jecxz
and
icebp
cltd
and
leave
push
pop
ret
pop
lret
pop
cmp
fdivr
sarl
lea
inc
int3
pop
je
cmp
aam
sar
push
sarb
sarb
xlat
repz
or
sbb
pop
jno
outsb
ffreep
pop
xchg
push
loop
lret
cmpsb
imul
push
lds
imul
jmp
fbld
jp
std
push
xchg
in
mov
pop
adc
add
pushf
dec
cmp
aaa
je
mov
das
sub
outsb
mov
sub
popa
inc
dec
lret
mov
sbb
cmpsb
xchg
mov
sti
xchg
push
and
mov
ret
orb
cs
jns
scas
xchg
mov
jb
push
jge
in
ja
imul
and
into
push
das
mov
pop
mov
cmp
push
daa
test
xor
cli
push
push
lock
sub
test
push
ret
fwait
mov
sub
rep
push
daa
dec
imul
xlat
js
mov
xchg
test
xor
addl
and
jne
rolb
cmpl
ja
cmpl
dec
add
or
sbb
loope
jmp
test
lahf
hlt
sti
cmpsl
xor
pop
int
movsb
rcrl
call
pop
popf
shl
xchg
into
jmp
out
push
adc
xchg
dec
or
addr16
lcallw
aad
cwtl
and
push
inc
insl
ret
push
jne
icebp
pop
int
mov
push
lahf
shrb
jae
insb
gs
dec
int3
inc
mov
lods
push
mov
movb
fisubs
sub
mov
xor
mov
fsubl
jecxz
insl
jle
add
mov
test
mov
dec
imul
fistl
push
les
xchg
dec
addr16
mov
pop
push
fdivp
popa
push
arpl
adc
or
les
bound
js
adc
sub
aam
lods
das
daa
mov
aam
cltd
cs
xchg
insl
call
ljmp
iret
dec
fdivp
fsubrl
lea
pop
xor
push
stos
call
sahf
outsb
dec
push
jp
mov
les
es
push
adc
xor
lret
lock
dec
mov
cli
mov
add
mov
out
popfw
pop
jecxz
test
mov
stc
adc
lods
pushf
push
out
stos
je
repz
std
sub
mov
push
loopne
fs
clc
mov
dec
mov
and
ret
addr16
leave
dec
jbe
ss
mov
cmpsb
and
fsubrs
dec
inc
insl
and
out
mov
xchg
pop
decl
sub
repnz
ret
sbb
stc
lret
jae
mov
adc
shlb
xor
sbb
and
push
mov
pop
mov
sbb
lock
push
ja
xor
out
inc
addr16
jb
xor
lret
out
fwait
sti
pop
stos
sahf
xchg
mov
lahf
xlat
cmp
adc
pusha
cmpsl
pop
push
mov
addr16
mov
mov
mov
xchg
push
xor
stc
ds
aaa
subl
movsl
add
flds
or
adc
popf
sub
lea
xchg
je
lret
addr16
out
cmp
aas
ds
mov
es
adc
imul
hlt
or
and
jp
xor
xchg
jge
ret
rol
mov
cmp
xchg
push
icebp
xchg
sub
loope
ret
adc
into
inc
jle
jge
push
mov
jbe
cmp
xchg
dec
insl
dec
mov
imul
mov
stos
insl
inc
mov
push
popa
fld
js
pushf
cmp
add
inc
icebp
mulb
xor
sub
dec
dec
dec
loop
lahf
shll
fidivrs
stc
out
loope
pop
mov
ljmp
nop
sar
rolb
jg
in
pop
push
mov
call
mov
test
xchg
pop
mov
fidivrl
sarl
or
ficomps
xchg
out
repnz
or
adc
sub
adc
dec
push
xchg
inc
sub
ficoml
nop
mov
sbb
cwtl
or
sbb
adc
jecxz
test
pop
push
jl
push
xchg
xchg
or
scas
rclb
jge
sub
sahf
mov
adc
sahf
cmp
cltd
out
mov
mov
loop
jo
jo
shrl
xchg
in
cmpsl
jecxz
pop
cmpsb
pusha
pop
sub
push
cmp
cmp
adc
cmp
aad
dec
stos
push
sub
xchg
sub
cvtpi2ps
jmp
ss
ficompl
push
lret
cmp
dec
jns
inc
sahf
popa
das
jns
dec
inc
nop
outsl
scas
sarb
mov
pusha
and
inc
pop
and
je
cmc
jbe
dec
and
cli
xchg
inc
daa
in
cmpsl
aad
lcall
repz
jmp
mov
repnz
out
xchg
or
mov
lods
movsb
pop
addr16
fildll
insl
dec
aas
and
mov
jg
pop
inc
lcall
sub
sbb
sti
popf
sbb
fs
push
aam
shlb
rclb
inc
xor
iret
out
or
mov
lcall
jnp
sti
lods
and
mov
mov
jns
xlat
outsb
mov
push
js
popa
xchg
out
insl
add
aam
pop
test
aad
jbe
pusha
in
adc
cs
mov
shl
aas
push
cli
out
lea
pop
arpl
lret
pop
test
push
xlat
stos
es
out
xor
adc
cs
push
push
aam
pop
adc
andl
js
enter
xchg
int3
mov
loop
inc
mov
push
cmp
jnp
and
loope
es
repnz
in
dec
inc
or
sti
sub
daa
adc
xor
pop
mov
mov
ljmp
push
and
ss
leave
xchg
scas
cmc
lods
xor
cmc
and
adc
lahf
int3
lret
adc
andl
repz
inc
cmpsl
or
adc
test
and
test
sub
dec
fbstp
push
xor
sbb
and
mov
pop
fimuls
insl
fidivl
mov
pop
fstl
call
les
aaa
mov
out
ja
xchg
or
ss
rcll
jle
pop
test
std
clc
add
gs
mov
xchg
jmp
dec
pop
js
mov
dec
xchg
movsb
jecxz
mov
scas
xor
popa
in
mov
inc
sub
scas
shrb
sub
lcall
lods
pop
mov
adc
idivl
bound
xchg
data16
inc
addr16
out
nop
icebp
dec
dec
sahf
xor
es
xor
loope
ret
jge
or
push
fdivrl
sbb
jp
and
mov
jae
xchg
fwait
xchg
ljmp
mov
sbb
xchg
cli
lcall
orb
sub
jecxz
sbb
push
in
lods
sbb
shll
jg
lahf
in
mov
into
mov
pop
sub
imul
aam
ja,pn
jno
out
jno
imul
rorb
xchg
idivb
mov
sahf
pop
ret
lret
sti
pop
in
movsl
inc
loope
cmp
mov
or
iret
lods
xchg
cld
outsl
adc
cltd
mov
leave
fwait
mov
cld
jnp
and
arpl
scas
shlb
mov
lret
cmpsl
std
jecxz
mov
imul
pop
push
ja
loopne
or
nop
xchg
mov
inc
or
sbb
sahf
xorl
scas
pop
cmpsl
fistpl
inc
fistps
mov
pop
cmp
xchg
ret
xchg
mov
cltd
pop
outsb
push
push
sub
outsb
jne
stos
fstps
div
int
cli
in
or
and
xor
mov
in
sub
test
in
jmp
lods
ss
fldt
cmp
pop
stos
addr16
jae
sarb
mov
in
pop
mov
cmp
addb
xlat
pushf
addr16
fistps
sub
test
sub
lods
std
or
test
xor
xlat
dec
fs
movsl
cmp
test
sub
aaa
pop
call
stc
loop
pushf
push
cmpsl
push
lret
mov
adc
es
insl
jmp
and
cmp
ds
adc
xchg
pop
fistpll
sbb
shlb
into
mov
mov
lods
lret
roll
and
cltd
insb
jae
jp
rorb
mov
insb
mov
add
or
nop
add
cmpsb
pop
xchg
push
mov
aam
inc
je
ljmp
lods
aaa
out
jg
xor
push
fnstcw
adcb
pusha
sub
pop
mov
ja
mov
insl
or
lods
dec
shrl
mov
mov
insb
jb
aam
insb
mov
test
leave
and
lods
pop
cmc
pop
xor
dec
clc
adc
clc
pop
mulb
cmp
adc
fistpl
test
aam
and
inc
outsb
std
aaa
loopne
pop
ljmp
inc
mov
testb
mov
fidivl
and
xor
cmpsb
aaa
push
push
adc
push
mov
ja
test
lods
js
and
jge
ljmp
shr
inc
push
adc
add
ja
aam
add
stos
pop
sub
in
in
loope
dec
mov
mov
pop
loopne
loope
sbb
xchg
out
popf
mov
das
lret
mov
shrb
ljmp
add
ds
adc
add
fistpl
pop
xor
cltd
jmp
pop
dec
add
pop
sahf
sub
rclb
popa
mov
test
cmp
add
adc
push
sbb
aam
insl
pop
dec
les
repnz
pop
mov
sbb
fs
pop
scas
pop
pop
cmpsl
popf
sti
hlt
sub
and
rorb
imul
add
cmp
call
and
movsb
pop
cmp
mov
cs
out
push
push
shll
lahf
mov
push
lea
and
mov
popf
mov
test
push
data16
mov
sahf
dec
adc
or
fs
mov
inc
orl
int
loopne
mov
dec
lcall
push
inc
int3
mov
push
cld
pop
jp
jbe
mov
or
inc
sub
data16
sbb
imul
dec
inc
inc
or
jae
mov
xchg
es
xor
in
dec
lods
adc
shl
test
push
cmp
add
lds
mov
frstor
and
or
stos
in
lret
xchg
sub
out
aam
scas
mov
push
push
mov
enter
leave
cmpb
bnd
and
aad
mov
adcb
add
mov
jnp
pop
jnp
inc
mov
lret
loop
sbb
mov
cld
fcomip
jmp
ficomps
pop
arpl
cmp
pop
cwtl
inc
xchg
inc
or
xchg
stc
push
cld
aas
dec
shr
mov
repz
lock
shrl
lcall
mov
rorb
inc
add
adc
and
sbb
or
sahf
lods
daa
mov
int
enter
push
das
and
and
cmp
imul
movsb
insl
shl
and
push
fwait
sbb
sub
into
jb
xlat
ds
test
data16
fbstp
jbe
jmp
or
xchg
xchg
push
sbb
xchg
mov
es
cmp
xchg
adc
scas
clc
leave
aad
lods
leave
test
mov
loop
mov
push
fsubrs
xchg
add
stos
adc
jecxz
data16
and
mov
popa
jl
call
add
sbb
push
mov
arpl
lcall
dec
or
jecxz
adc
xchg
clc
into
lock
call
jne
outsb
ljmp
pushf
mov
xchg
jecxz
push
sbb
push
sbb
cld
sbb
xlat
cmp
inc
and
inc
je
push
xchg
rcrl
outsl
mov
xchg
xchg
mov
or
xchg
bound
pop
std
pusha
mov
push
mov
mov
mov
push
xor
lods
dec
out
and
sub
icebp
mov
mov
cmp
imul
insb
inc
xchg
inc
dec
xor
popf
scas
iret
pop
inc
add
jno
fiaddl
gs
mov
mov
mov
arpl
loopne
lret
sub
dec
sub
mov
fisubrs
jbe
adc
stos
iret
cmp
dec
pop
loope
pusha
mov
jae
and
leave
movsl
push
aas
cmc
sub
or
dec
into
lret
dec
pop
add
mov
aad
push
test
pop
mov
mov
pop
roll
jecxz
jnp
pop
xchg
aas
lea
push
jecxz
xchg
add
js
in
xor
mov
jno
addr16
lret
push
bound
out
addr16
mov
xor
icebp
cmp
outsb
in
inc
adc
adc
mov
ss
es
neg
outsb
mov
insb
test
subb
and
sbb
not
in
pop
lds
sub
movsl
sbb
ja
push
pop
test
push
xor
xchg
mov
addr16
jp
inc
push
dec
or
rorl
sarl
adc
rolb
mov
push
clc
sub
aad
cli
mov
xchg
cmc
xchg
push
incb
fcmovnb
pop
adcl
xchg
push
insb
mov
inc
aas
incl
adc
mov
xor
pushf
out
out
xchg
je
adc
inc
test
js
sub
test
sbb
and
roll
popa
jg
push
sub
jb
cmpl
add
int
clc
movsl
insb
adc
mov
xchg
adc
mov
xor
cld
es
ds
xor
mov
mov
mov
sub
loope
orb
orl
xchg
jbe
sti
clc
mov
pop
imul
loop
jb
pop
dec
in
test
fsub
lea
ljmp
divl
aad
jb
cmp
inc
lret
add
lea
adc
orl
mov
push
imul
jecxz
mov
jae
jno
pop
fistl
js
adcl
xor
daa
xchg
jmp
ret
or
clc
std
pop
in
sbb
mov
mov
out
sub
or
pop
cmpsl
dec
pop
mov
clc
and
insl
fucomi
idivl
dec
shll
mov
das
loop
fisubl
fistps
jno
scas
mov
xor
add
xor
push
jg
push
movsb
insl
ret
repz
sbb
cmp
data16
das
mov
jb
into
jnp
mov
and
adc
mov
cmp
add
mov
mov
dec
adc
cmp
repz
push
cmc
sub
repz
mov
adcl
and
mov
sub
loope
add
sbb
and
icebp
mov
shll
movb
fsubrs
or
loop
mov
lods
sub
fcompl
inc
cmpsb
pushf
es
pop
or
aas
jbe
call
icebp
cld
aam
inc
mov
xchg
and
cwtl
push
and
in
or
adc
int3
xor
dec
push
je
mov
in
jb
xchg
mov
lret
jo
sahf
insl
xor
faddl
sbb
and
jl
dec
mov
add
lea
cmp
loope
fs
jg
pop
ss
cmp
add
xchg
movsl
add
mov
pushf
cmp
es
and
cmpsb
inc
test
push
les
xchg
out
adc
or
pushf
mov
xchg
subb
es
cmpl
les
pop
cmp
mov
xchg
sub
push
fs
ss
lock
jno
mov
fptan
out
movl
adc
loope
test
in
push
cmc
mov
xchg
or
jb
push
cmp
scas
stc
out
ret
subl
mov
mov
loopne
in
push
xchg
gs
mov
sub
test
mov
xabort
push
stc
jmp
cmpsl
mov
stc
into
push
add
jl
pop
in
mov
pop
mov
xchg
xchg
sub
lcall
ret
mov
cmpb
fsub
hlt
aas
mull
push
pop
das
in
mov
mov
or
add
icebp
icebp
andl
sbb
mov
xorl
rcll
and
rcrl
mov
test
loope
adcl
push
jmp
ss
cmpsb
pop
mov
xor
jp
xor
lea
daa
sbb
hlt
mov
or
je
outsb
pop
xor
mov
test
shll
inc
mov
rorb
push
jns
dec
xchg
imul
lret
cmc
mov
icebp
lcall
add
jecxz
aam
mov
aad
cltd
mov
in
jae
inc
sub
xor
cmpsl
insb
pop
xchg
xor
sahf
lods
fimull
mov
and
or
or
and
imul
arpl
xor
or
fnstenv
cmp
adc
mov
xor
jne
xchg
js
adc
sbb
loopne
cmc
insb
out
sarl
mov
mov
cld
rclb
push
xor
mov
xlat
mov
addr16
cmc
cmc
cmp
rcl
mov
fiadds
adc
mov
hlt
je
jg
push
adc
mov
arpl
pop
pop
dec
fdivrl
in
push
aad
loop
add
sub
pop
and
fldt
sbb
mov
call
in
out
or
jne
xchg
or
adc
jmp
ss
ss
pop
lahf
inc
adc
jg
jo
mov
pop
stos
push
in
div
mov
out
jo
and
push
ret
push
inc
fldl
xchg
adc
sbb
inc
repz
dec
or
stc
push
inc
imull
or
into
fstpl
jnp
and
hlt
leave
mov
int3
and
add
mov
xchg
arpl
jns
and
testb
inc
sarl
mov
push
mov
adc
leave
sub
xchg
dec
cmp
jmp
jl
orl
lods
xchg
es
std
pop
repnz
loope
add
movsl
mov
lock
mov
imul
jns
push
jns
sbb
in
dec
dec
std
loope
data16
mov
inc
sub
cmp
adc
std
fimull
les
aad
test
xor
loope
enter
ja
pop
testl
out
sbb
out
or
sub
sub
cld
lretw
scas
pop
mov
js
sub
negb
stos
ds
mov
xchg
test
and
into
mov
cmp
gs
push
cltd
push
ljmp
loope
gs
ffreep
bound
dec
cld
and
sbb
sbb
movl
xor
mov
jmp
rcrl
inc
fs
les
mov
adc
sti
xor
pop
lcall
push
cmp
popl
lahf
jno
jo
jecxz
cwtl
and
cmp
sahf
mov
rorb
sbb
ds
push
pop
cmp
ret
out
in
sahf
sbb
movsl
daa
mov
gs
xor
inc
test
int3
push
ss
cmp
fcmovne
adc
push
js
adc
pop
push
stos
bswap
ja
push
mov
imul
btc
fs
cmp
add
outsb
jp
sbb
jmp
lahf
js
inc
sub
jecxz
test
clc
cmc
les
inc
test
sbb
push
lahf
mov
jns
fcomi
shlb
jo
dec
jae
ljmp
add
dec
adc
sahf
test
js
shll
push
sub
xor
icebp
jecxz
fldz
inc
jns
pop
aam
fistpll
push
shlb
ljmp
pop
test
fwait
sub
sbb
mov
inc
cmp
mov
jmp
stos
pushf
sbb
lret
mov
fstpt
push
lock
xor
dec
lock
jmp
or
int
fldt
insl
popa
cld
push
pop
test
sub
rcl
adc
cld
xchg
pop
jle
mov
xor
xor
in
xchg
inc
jae
jp
int
adc
push
push
mov
dec
rorb
mov
je
call
dec
testb
xchg
cmp
in
shr
jbe
push
into
and
and
lods
jbe
bound
cli
pop
xchg
incl
mov
mov
addr16
stc
jae
into
pop
jecxz
sub
or
add
movsb
es
ss
mov
jnp
popa
popa
and
inc
inc
pop
xchg
jecxz
mov
lcall
jmp
jl,pt
sub
test
lds
jbe
frstor
cmp
repnz
add
sahf
fs
pop
pop
cmp
cmp
shl
adc
or
dec
and
push
aad
in
movsl
push
mov
clc
int3
in
mov
xchg
int3
xchg
in
adc
xor
test
cmpsl
dec
pop
icebp
mov
call
loopne
jecxz
push
clc
xor
jp
or
inc
outsl
xor
jecxz
pop
push
jae
les
jno
jmp
adcl
xor
in
mov
mov
xchg
fldt
mov
nop
dec
aas
inc
inc
push
push
cmpsl
push
rolb
pop
shl
cld
mov
aad
adc
mov
and
les
in
les
sub
inc
add
jge
push
xchg
ss
inc
mov
xchg
add
mov
add
cli
cmp
mov
clc
scas
cmpsb
or
sub
mov
adc
lret
add
cs
dec
xchg
mov
not
cmc
sub
cmpsb
pop
push
fcoms
cmpsb
cwtl
int
ficoms
lods
cli
fwait
add
dec
int3
dec
adc
cmpsb
loop
add
stos
mov
push
popa
pop
decl
mov
js
mov
ss
mov
cmpsl
stos
dec
xchg
push
xchg
pop
pop
mov
hlt
mov
les
xchg
or
mov
cs
and
les
pop
shr
jne
lock
fwait
mov
pop
sbb
int3
dec
jmp
shrl
xchg
push
fcmovnu
and
std
xchg
push
sahf
ret
xchg
jp
stc
xchg
lahf
and
mov
mov
std
or
lret
or
fdivl
xor
pop
push
and
int
sub
test
jb
fcmovne
lcall
inc
rorl
in
jns
lahf
mov
xor
dec
out
test
hlt
push
dec
data16
icebp
mov
fnstenv
cmp
ror
imul
insl
mov
dec
scas
mov
hlt
jge
std
mov
sarl
inc
xor
inc
jbe
daa
ficoms
cld
psrlq
lea
js
sbb
push
xlat
into
cmpsb
sbb
cli
sbb
aas
xchg
data16
stc
je
sahf
lcall
jg
shl
mov
push
push
stos
jecxz
loop
sub
xlat
pop
jle
movsb
cmp
insb
inc
arpl
pop
mov
mov
mov
sbb
pushf
aad
add
mov
jle
cmp
nop
fistl
je
push
and
mov
adc
sub
pop
jle
movsb
in
lret
ljmp
jl
adc
dec
arpl
mov
jno
xor
xchg
sub
out
out
xchg
jl
repnz
mov
stos
or
pop
cmpsb
add
mov
add
xchg
loopne
cmpl
mov
mov
and
mov
lds
dec
cmp
jae
repnz
into
push
push
or
out
or
in
repz
xchg
mov
push
pop
lds
roll
cmpsl
xchg
mov
xchg
or
jmp
jmp
xor
mov
rorb
push
jae
loope
orb
lods
xchg
test
incl
adc
mov
test
pop
inc
adc
sub
les
divl
xor
push
fldt
fs
sbb
dec
addl
or
jecxz
xchg
push
adc
addr16
stc
xor
cmp
mov
and
int
xor
iret
andl
insb
mov
idivb
and
pop
push
mov
dec
mov
rcrb
nop
xchg
popf
dec
ss
movsb
push
cmp
cmp
fchs
and
push
mov
mov
xchg
shlb
fcomps
xchg
lret
add
les
inc
mov
pop
daa
leave
jl
pop
into
pusha
pop
rorb
ret
scas
xchg
mov
push
sub
inc
add
idiv
rcrl
call
jmp
add
jnp
ret
enter
ret
mov
rorb
sbb
lahf
les
push
sub
mov
xchg
dec
inc
xor
jle
mov
into
sbb
xlat
std
lods
push
jle
lds
mov
leave
xchg
test
pop
repz
fcomps
movsb
xor
pop
sub
ret
shrb
fwait
and
and
inc
popf
into
sub
xchg
xchg
rcrl
dec
lahf
pusha
adc
ds
out
cli
in
rclb
das
mov
inc
loope
cmp
or
rcll
xlat
mov
into
sub
xor
test
pop
aas
movsb
fs
les
dec
in
cmp
push
andb
hlt
adc
lock
pop
jne
jo
add
push
daa
dec
sub
lcall
push
imul
cmp
mov
mov
inc
aas
mov
xor
inc
aas
pushf
fcoms
cmp
in
cmp
mov
das
jb
pop
in
fsubl
push
sbb
mov
int
sub
out
xor
push
mov
and
jle
popa
das
mov
push
jno
or
mov
les
mov
push
lea
cmp
imul
enter
ljmp
dec
in
fimull
pushf
out
decb
shlb
insb
push
insb
add
arpl
xchg
adc
sahf
and
jecxz
or
dec
inc
scas
cs
dec
lds
stos
xchg
orb
xchg
xor
outsl
repnz
xor
popa
sub
inc
divl
sbb
adcl
dec
lcall
adc
xchg
imulb
pop
cmp
jae
out
sub
sbb
xchg
or
sbb
add
xor
xchg
inc
jae
cld
adc
out
add
icebp
into
iret
push
push
aad
sub
in
popf
xchg
pop
jecxz
cmc
dec
xchg
push
fstpl
repnz
sbb
imul
fistpll
or
ret
jae
cmpsl
arpl
jae
lds
pop
imull
pop
jle
jp
jg
push
fdivrp
out
pushf
mov
pop
xchg
das
jecxz
and
xlat
ud1
cmc
mov
in
inc
repz
mov
jg
out
gs
mov
cwtl
xchg
cmp
sub
adcl
lahf
xor
lret
pop
cmp
xchg
test
add
inc
stos
scas
inc
sbb
in
mov
xorl
xlat
loop
mov
mov
xor
js
pop
mov
push
xlat
fisubrs
sbb
sbb
shl
pop
xor
bound
in
cs
inc
leave
and
in
or
sbbl
stc
inc
lret
jne
and
push
rolb
cmc
mov
es
fcos
pusha
sbb
xchg
leave
mov
ret
adc
mov
dec
pop
scas
ucomiss
mov
fiadds
data16
aam
mov
sub
in
nop
fildl
aam
orl
inc
pop
fsubr
ud2
or
daa
in
into
inc
lahf
mov
insb
xchg
enter
inc
shll
dec
fsubs
xchg
stos
fdivl
cs
ficoms
push
outsl
add
xor
push
add
cmp
icebp
andb
or
aad
mov
scas
lods
pop
sbbb
push
mov
sti
lods
xlat
idivl
add
faddl
mov
orl
ss
pushf
pusha
data16
in
fisubrs
repz
push
loopne
jae
push
outsl
xor
sbb
aas
popa
pop
leave
add
mov
arpl
out
int
stc
xchg
pop
inc
push
ret
leave
push
lds
daa
rcll
sub
dec
test
pop
mov
inc
lock
movsl
mov
inc
add
pop
arpl
sub
jo
push
push
cli
xchg
arpl
cmc
out
lods
cmp
push
push
jno
test
clc
sti
outsl
les
clc
gs
fsubr
sbb
adc
mov
dec
pusha
jo
sbb
insb
lds
xchg
mov
adc
testl
inc
nop
dec
stc
mov
pop
jae
enter
mov
add
test
pop
jno
xchg
jl
aam
aas
lock
push
jno
addr16
xchg
pop
mov
fs
xor
lods
loope
repz
jl
repnz
xor
and
imul
sbb
dec
les
xchg
cmp
inc
sbbl
or
dec
xlat
dec
stos
mov
mov
jns
lods
scas
adc
popf
and
int
cs
or
sbb
jb
out
sub
scas
inc
adcb
mov
lods
jne
or
out
mov
ds
add
repnz
push
roll
cld
sub
insl
test
sbb
jg
push
mov
or
repz
call
jne
ja
push
mov
fwait
lods
addb
stc
mov
scas
repz
aas
cmp
mov
loope
movsb
or
xlat
aam
fs
bound
jno
push
dec
mov
xlat
mov
sub
loope
jecxz
popa
repnz
pop
mov
fldt
inc
sbb
addr16
cmp
push
aaa
clc
push
fildll
stc
popf
sarb
ret
xor
mov
mov
pop
outsl
adc
pop
into
lret
xchg
in
mov
inc
repnz
mov
lret
iret
xorb
mov
dec
xor
scas
jae
mov
and
jecxz
notl
pop
movsl
ret
add
outsl
inc
out
out
or
scas
pop
cmp
das
mov
in
ljmp
loopne
ss
les
jno
jp
paddb
pop
mov
dec
loopne
imul
xor
sbbl
jo
cmp
les
inc
inc
jecxz
mov
lcall
sbb
test
push
in
std
lds
jge
or
insl
outsb
cs
cmpsl
and
push
add
jnp
stos
push
imul
jecxz
lcall
and
and
xlat
push
and
push
jp
and
mov
mov
dec
dec
push
and
js
arpl
xor
notb
arpl
cld
jmp
jb
lahf
mov
test
mov
push
sub
xchg
mov
lock
aas
subl
out
out
imul
gs
test
bound
shrb
xor
jne
subb
cmpsl
or
push
xor
cmp
jl
dec
mov
push
inc
aas
imul
dec
jle
lret
push
in
ror
ljmp
vpandnd
fimull
or
sub
fwait
push
rcll
push
stos
mov
loope
roll
fs
mov
fists
lret
mov
mov
cmpb
outsl
pusha
mov
push
fnsave
push
sbb
push
std
pusha
sub
or
push
sbb
fistpll
nop
push
std
and
xchg
adc
lea
je
push
push
cwtl
inc
xor
in
inc
cmpsl
cmp
sub
or
rorl
jl
fsts
sarl
fmull
movq
sbb
gs
push
jle
lret
roll
pop
pop
mov
and
aad
and
imul
ror
xor
xchg
aaa
outsb
mov
mov
jp
lret
lods
test
jnp
mov
mov
cltd
leave
cmc
aad
mov
cmp
push
jecxz
inc
popa
jg
jmp
jo
add
adc
xchg
and
add
inc
out
je
pop
push
adc
mov
das
jb
out
test
push
sbb
pop
fistps
jo
es
cmpsb
cmc
into
jg
or
jae
out
outsb
clc
into
cmp
jg
mov
aas
cmp
lahf
in
jge
rcrl
out
idiv
adc
push
aam
xor
push
mov
ret
fidivrl
in
pusha
stc
loope
or
jg
sbb
xor
jmp
insl
xor
push
ret
cli
inc
cmp
es
hlt
out
sub
mov
shl
sbb
ror
cmp
mov
mov
jl
cmp
dec
data16
out
push
jp
mov
pusha
adc
rol
mov
xchg
nop
pop
mov
cmp
xchg
dec
std
pop
mov
imul
adc
fimull
push
sub
sbb
xchg
sbb
sub
ret
nop
sub
xlat
stos
bound
pop
aam
loope
push
in
jge
mov
cmpsb
and
pop
xor
fs
pushf
push
outsl
lcall
fistl
bound
sub
jno
popf
roll
rcrb
mov
add
scas
sbb
mov
fbld
push
and
ret
pop
xchg
loop
inc
xor
rol
add
pop
jns
sbb
xlat
jmp
inc
cmp
test
shl
clc
mov
xor
cmp
into
loopne
sub
lahf
inc
repnz
in
push
pop
fsts
cmp
adc
or
js
jae
adc
mov
cmpsb
lea
sub
imul
ja
push
inc
cmp
js
fldt
sahf
in
les
out
dec
out
pop
roll
adc
sti
mov
jb,pt
adc
sbb
sbb
mov
cld
out
mov
dec
test
insl
and
jno
cmp
mov
adc
dec
or
fisttpll
cmp
arpl
jae
loope
aad
repz
icebp
add
out
mov
loop
lods
lret
out
pop
test
sub
xchg
sbb
xlat
mov
loopne,pt
pop
and
enter
cmp
test
adc
out
xchg
filds
scas
add
cmp
sub
mov
xchg
stc
pop
cmpb
loope
std
out
fisubrs
cmp
or
aas
scas
stos
push
push
stos
ret
jns
scas
xchg
mov
mov
data16
lret
xor
dec
add
mov
push
sub
bound
in
mov
dec
mov
adc
shlb
mov
mov
pop
insb
ret
lcall
fldcw
outsb
and
jecxz
ja
shrl
fmul
in
shl
pop
jmp
mov
gs
xchg
jmp
out
mov
or
adc
fdivs
push
lock
dec
mov
sbb
fmull
outsl
lret
push
and
sbb
scas
dec
push
scas
ss
loopne
stc
jb
sahf
into
dec
in
mov
cmp
test
push
inc
mov
in
lahf
aaa
daa
mov
mov
js
add
mov
push
cmc
in
pusha
mov
cltd
fcmovb
iret
and
push
rcl
andb
out
pop
jecxz
jbe
shrl
jmp
dec
mov
insb
fdivp
jl
sbb
sub
in
sub
adc
mov
dec
or
sbb
rclb
cmp
xlat
paddsw
int
or
push
scas
jmp
cwtl
popf
nop
cwtl
xorb
jmp
ds
test
dec
or
cmp
clc
out
movsl
adc
mov
lea
test
xchg
jle
jns
insl
ss
scas
stc
ss
fsubr
les
xor
out
mov
push
mov
fidivrs
sti
cmp
js
clc
int3
xchg
out
inc
or
subl
lock
out
shrl
push
pusha
push
imul
insl
enter
xchg
xlat
xchg
lock
sarb
test
lea
sub
inc
xor
das
rcrb
pop
jnp
push
lahf
xchg
sub
cmp
xor
pop
shlb
stc
jmp
cmp
adc
add
add
cmpsb
ret
pop
xchg
xchg
out
mov
imulb
sarb
sahf
je
mov
test
popa
seta
inc
inc
xorl
pusha
sti
aaa
cmp
sub
pop
jle
outsb
inc
mov
adc
sbb
ljmp
mov
add
gs
xlat
ljmp
mov
fistps
push
inc
lock
out
sahf
mov
or
push
push
call
jl
stos
dec
sub
daa
int3
jnp
icebp
mov
push
mulb
mov
push
mov
mov
cli
xchg
pop
jb
sahf
inc
lods
jmp
in
outsl
inc
inc
test
xor
scas
jbe
fsubs
popf
add
xchg
and
pop
adc
test
outsb
dec
cld
out
xor
jg
cmpsb
mov
jbe
cmp
stos
cmc
push
push
push
aaa
push
imul
lret
imul
mov
hlt
out
movsb
dec
icebp
aam
mov
fsubrl
xor
stc
dec
cmc
jno
lock
into
and
and
sub
xor
and
adc
addb
ja
test
dec
icebp
movzbl
ja
xor
pop
idivl
mov
sahf
mov
xor
sbb
sbb
rcrl
xor
or
cmp
push
lahf
addr16
jb
push
add
jb
mov
mov
out
dec
mov
or
andb
lahf
frstor
push
cmc
jb
test
lcall
add
fwait
in
jge
inc
jne
rclb
cmp
xlat
add
je
sub
bound
jbe
lods
into
xor
adc
xor
push
jns
pop
mov
xchg
filds
sahf
mov
push
pop
call
cmc
repz
mov
out
jmp
xor
xor
addr16
ss
xchg
mov
mov
fdivs
mov
xor
push
loop
rol
fisttpl
aaa
ds
pusha
cmp
ljmp
dec
lea
idivl
sbb
int
mov
xor
inc
cmpsl
jns
mov
push
fdivrl
adcb
hlt
inc
xchg
movhps
sbb
adc
ret
mov
pop
scas
cmp
aaa
jo
mov
mov
daa
stos
add
addr16
ss
cmp
ret
lret
push
push
clc
pop
jecxz
push
mov
popf
and
or
push
jg
xchg
aad
jmp
popf
xchg
iret
or
inc
stos
mov
pushf
push
xchg
mov
xchg
inc
into
out
xor
and
pop
push
xchg
inc
xchg
xchg
pop
adc
push
add
mov
or
cld
mov
xor
cmp
cmp
jo
roll
dec
jae
push
ja
add
loope
shrb
and
pop
pop
add
or
jmp
test
mov
lea
daa
ja
insl
cmpsb
inc
mov
xchg
xlat
outsl
dec
imul
pop
nop
out
jbe
int3
outsl
jp
push
sahf
js
hlt
in
inc
push
dec
frstor
mov
cmp
movsb
pop
or
mov
pop
sahf
cmp
cmpsb
mov
adc
adc
mov
fadds
and
add
mov
mov
sub
dec
test
add
out
lcall
xor
or
call
sbb
ds
push
hlt
int3
ret
pushf
fs
outsb
push
leave
aad
dec
sub
pop
fnsave
mov
sbbl
pop
sarl
in
jnp
pop
into
pop
adc
push
ret
popf
push
les
add
shl
pop
or
dec
aaa
jo
imull
arpl
push
dec
push
xchg
ret
std
xchg
pop
jg
and
inc
hlt
hlt
pshufw
pop
inc
outsl
fcmovu
pop
add
in
cmp
out
ret
in
mov
cld
mov
xor
push
fs
mov
into
adc
rcll
cli
outsb
mov
mov
aaa
add
sbb
adcb
jbe
int3
bound
xchg
jmp
sti
mov
adc
fstpt
in
lds
std
out
cmp
mov
inc
and
shrb
int
or
sbb
aaa
js
adc
je
mov
lret
mov
fsubrp
in
ret
test
daa
adcl
mov
and
xchg
fisttpl
xor
sub
push
or
adc
or
sbb
int
adc
jecxz
xor
lds
aam
cmc
ja
es
insl
push
outsl
test
or
sbb
jl
or
jecxz
jns
mov
mov
pushf
mov
jl
cwtl
repz
insl
in
push
jae
outsb
cmp
cmc
cmpsb
aaa
sub
mov
mov
xchg
icebp
outsb
pop
inc
adc
mov
pop
jae
aaa
insb
data16
sbb
push
movsl
rolb
popf
loopne
cmp
lods
sub
dec
jno
push
xchg
mov
xchg
out
fdecstp
stos
test
in
int3
imul
jbe
decb
das
push
jno
mov
shlb
pop
pop
mov
push
fists
pop
jno
aam
jmp
push
jne,pn
test
sub
loop
cmpsb
fs
int3
pop
pop
push
mov
arpl
sbb
movsl
mov
push
cmp
gs
andb
sub
arpl
fnsave
sub
in
and
aam
lret
adc
aam
mov
xchg
dec
adc
mov
ret
sub
cwtl
lods
enter
xor
dec
lods
cmc
mov
test
cli
adc
sahf
or
mov
xchg
ffreep
jns
int3
add
testl
and
cmp
and
pop
jae
into
mov
cmp
insl
not
xchg
movsb
pop
scas
xchg
push
mov
jmp
jl
dec
orl
fsts
fsubl
fsubrs
adc
sub
loop
pushf
or
test
lods
fbstp
jecxz
push
jle
xor
push
push
mov
cs
xchg
ret
or
enter
mov
mov
rcrb
sbb
xor
ss
jns
iret
fwait
jg
add
ret
mov
into
dec
sbbl
add
cmp
lahf
pop
popf
imul
cmp
dec
pop
push
sbb
fisubrl
fnstsw
pop
mov
add
pusha
lods
hlt
fiaddl
xor
int
jle
lock
cmp
ret
scas
jne
std
rolb
movsb
mov
add
mov
fisubs
jle
sbb
pop
lods
adc
or
lods
add
mov
push
xor
cmp
loopne
jecxz
out
fld
jl
jp
sarb
adc
add
mov
add
decl
or
push
dec
cmpb
es
pushf
fcomi
or
iret
xchg
mov
decl
movsl
cld
test
stos
cli
daa
sub
hlt
cli
test
ss
mov
loopne
jle
cmp
push
sti
adc
mov
or
jno
imul
xor
testl
cs
cwtl
pusha
test
stos
adc
mov
push
inc
test
adc
imul
gs
xchg
rol
call
ds
aas
cmpsb
lahf
mov
dec
mov
imul
jecxz
shll
ljmp
cmp
ljmp
mov
cmpsb
push
fdivs
xchg
fcoms
aaa
divl
push
jg,pt
clc
mov
std
sbb
pop
popf
add
xor
mov
scas
loopne
mov
clc
push
pop
pop
add
icebp
mov
ficoms
hlt
fdecstp
xor
lahf
adc
and
push
sbb
jmp
dec
notb
inc
scas
sarl
lods
in
lahf
jne
enter
les
adc
xchg
sbb
enter
in
push
scas
xor
pop
mov
lods
out
dec
icebp
shrb
repnz
sbb
push
cmp
jecxz
cmp
mov
sbb
insl
popa
mov
cld
insb
das
shlb
pop
pop
push
inc
inc
clc
add
mov
xchg
or
lahf
cmpsl
jne
jle
pop
arpl
xchg
cmp
in
cmpsb
push
shl
leave
push
pop
cmp
lahf
cmp
jge
pop
jp
test
pop
or
sub
adc
jle
lret
xor
cli
lds
cs
das
cmp
out
imul
cmc
or
jge
inc
loop
inc
insb
setno
mov
or
leave
idiv
test
dec
les
adc
mov
loopne
shrl
add
pop
fsubs
test
sti
xor
mov
xor
arpl
test
mov
cmp
sti
push
add
in
outsb
add
lahf
ja,pn
fistpl
outsl
sub
idivl
fwait
jns
mov
sbb
cmpsl
jmp
fdivrl
cmp
stos
push
frstor
inc
mov
ret
adc
push
and
xor
jle
sbb
pop
dec
xchg
inc
jmp
xlat
sarb
data16
cmp
nop
mov
in
xor
add
int
jbe
bound
adc
inc
push
loope
rorl
fldt
popf
in
and
stos
add
mov
cld
jl
mov
cmp
int
or
push
mov
loop
inc
imul
lret
mov
pop
sub
fildll
mov
dec
xchg
add
push
jno
push
scas
add
mov
xchg
mov
ret
lods
inc
enter
jns
mov
mov
xchg
daa
push
pop
cli
bswap
test
cmpsb
xchg
sub
popf
mov
xor
sbb
xor
fisttps
cmp
inc
pop
cld
push
inc
xor
mov
jns
fistl
cmp
push
pop
jae
pushf
pop
cmpsl
shl
scas
sbb
mov
test
fildl
mov
out
out
rolb
cs
mov
mov
lcall
adc
sub
fidivrl
inc
pop
xor
or
ljmp
lgs
popa
loopne
mov
cli
jo
les
sub
lcall
sub
stos
mov
sti
fnstcw
scas
pop
adc
ja
mov
mov
jo
int3
add
iret
mov
mov
cmp
and
cmc
adc
icebp
in
jbe
daa
mov
mov
bound
sbb
inc
mov
inc
outsb
insb
int3
popa
fsubrs
stc
sub
call
testb
jge
push
xchg
in
mov
cmp
call
mov
sbb
sbb
dec
addr16
jmp
adc
add
stos
mov
jo
ret
mov
jo
mov
ljmp
push
shrl
enter
adc
add
test
aaa
cmp
lea
ret
dec
aaa
ret
xor
aam
mov
cmpsb
pop
repz
inc
cmp
leave
popa
and
ss
iret
inc
mov
jmp
jl
xchg
adc
jecxz
sub
cmp
fs
mov
hlt
imulb
adc
fs
ficompl
lret
mov
inc
loope
stos
shr
sub
shlb
in
push
sbb
jp
jg
loopne
icebp
push
mov
faddl
sub
sarl
jp
ret
mov
sub
jmp
sbb
ret
jle
movsb
mov
or
je
outsl
and
mov
outsl
test
xor
dec
hlt
pop
shlb
adc
pop
add
fs
lret
sub
sub
jp
test
das
daa
hlt
add
shrl
pushf
outsl
into
repnz
xchg
push
sbb
adc
ja
mov
jb
enter
dec
push
mov
or
inc
jb
icebp
add
inc
lcall
push
clc
mov
pop
cmp
mov
out
jle
dec
pop
inc
pop
cli
xor
repnz
fwait
cli
xor
movsb
mov
lods
shll
sahf
cmp
das
mull
dec
ljmp
shl
stc
inc
fdivs
dec
push
fstpl
stos
fs
and
sbb
dec
jnp
addr16
push
shlb
pusha
mov
aas
adc
in
push
pop
adc
sbb
dec
outsb
add
mul
cmpsb
cmp
xor
xor
jl
xchg
jecxz
cmp
sarb
das
mov
jecxz
or
je
movsl
addr16
lret
jae
ret
lcall
cli
daa
cmc
mov
mov
inc
loope
add
fstps
jb
xor
xor
push
out
adc
sub
mov
sti
push
test
inc
jnp
add
inc
xchg
cmp
shll
xlat
sub
push
movsl
jb
pop
inc
jns
sbb
loope
mov
repz
js
loop
cmp
aaa
mov
fcmovne
test
cs
mov
shld
add
mov
mov
and
iret
cmp
mov
sbb
adc
and
stc
xchg
xor
push
rcrb
lods
in
sarb
into
lds
mov
vcvtdq2pd
pop
xor
mov
mov
push
xor
rorl
repnz
jmp
add
push
sbb
mov
adc
and
mov
dec
cltd
mov
or
mov
push
scas
xor
add
fwait
lret
fdivs
mov
sbb
jg
inc
pop
loop
and
fisttpl
mov
push
mov
mov
sub
idivb
jno
adc
cmp
popf
pop
ret
and
mov
hlt
fsubs
lods
scas
test
and
pop
mov
sahf
out
inc
add
pop
ret
insl
fimuls
cmpsb
test
in
jmp
imull
mov
addr16
test
call
mov
cmp
mov
lods
das
mov
inc
jmp
scas
out
dec
cmpsl
das
lods
xor
cmpsb
int3
mov
test
clc
jb
hlt
pop
pop
and
add
pop
sbb
imul
ss
xor
jne
mov
xchg
and
sbb
mov
cmpsl
add
lock
and
dec
pop
aaa
popf
stc
mulb
int
fimull
int3
out
xor
mov
sbb
outsb
mov
mov
sbb
aas
inc
cs
push
aas
adc
xor
hlt
dec
mov
xchg
jnp
ljmp
mov
push
adc
popa
jae
dec
shlb
aad
xchg
push
arpl
jnp
pop
enter
and
test
sbb
ds
or
jno
ss
sbb
std
mov
mov
mov
fimuls
push
dec
push
cmpsb
mov
jmp
je
sbb
mov
add
xchg
sub
clc
or
fwait
cmc
pushf
xchg
out
dec
add
cmp
and
test
outsl
std
pop
and
cmc
outsl
addr16
das
les
lcall
pop
add
adc
addr16
out
sbb
mov
enter
ds
xchg
jl
inc
lret
mov
xor
mov
rcll
hlt
jnp
mov
ret
rolb
inc
mov
push
or
sbb
adc
lahf
xor
pop
push
stos
sub
lahf
mov
stc
pop
cs
mov
xor
add
sbbb
lock
xchg
in
sahf
mov
popa
repz
cld
xor
arpl
aam
std
fidivrs
outsl
in
push
sbb
mov
jecxz
xor
pop
push
dec
and
adc
lret
fsubrl
inc
sbb
push
andl
mov
filds
cwtl
xchg
jnp
ret
test
js
imul
leave
mov
pop
ds
pop
scas
cmp
cld
xor
std
insb
pushf
movsl
cld
mov
mov
cwtl
jns
or
xchg
sarl
imul
or
dec
or
movsb
jbe
dec
lods
mov
sbb
imul
lahf
test
cmp
mov
ret
incl
mov
mov
pop
xor
and
xchg
lcall
popl
inc
stc
pop
and
jnp
xor
ss
jge
sub
daa
pop
xor
imul
mov
test
jae
pop
sub
push
iret
out
repz
gs
push
dec
arpl
cmp
push
mov
sbb
mov
sbb
addl
mov
pop
fidivl
int3
loope
xchg
add
dec
repnz
jecxz
loope
stc
rcrl
or
add
fistpll
push
mov
mov
fwait
cwtl
xchg
add
inc
out
or
call
dec
aam
inc
repnz
mov
mov
dec
mov
fxch
xchg
daa
inc
jge
and
ret
dec
test
sti
adc
cmpsl
push
cmp
lods
jmp
xor
push
jmp
cmp
adc
and
daa
mov
mov
sub
push
fidivrl
mov
push
arpl
cmp
mov
aad
and
into
xchg
inc
mov
push
jb
leave
sub
jo
aas
rep
xor
jno
in
repz
inc
mov
push
idiv
mov
pusha
mov
pop
shr
xchg
jmp
xor
pop
imul
dec
popa
push
test
lock
and
inc
jne
jno
xchg
xor
mov
cs
jno,pt
cmp
xchg
mov
out
and
loope
stc
xlat
jne
lret
notb
insl
outsb
jmp
inc
lret
dec
push
add
xor
jne
jnp
xchg
sbb
jnp
test
adc
pop
fisttpll
outsb
test
push
test
cltd
ja
fsts
mov
and
into
fldl
stos
mov
jbe
es
loop
jbe
aaa
mov
pushf
adc
add
call
pop
fnsave
lea
lods
mov
or
loope
aad
dec
pop
or
adc
jecxz
xchg
orl
xor
std
jne
xchg
or
sbb
push
sarb
xor
jecxz
cs
lret
fldcw
or
out
sarb
dec
lahf
sbbl
test
jae
pop
push
outsl
cmp
repnz
fstpt
cwtl
movsl
rcl
inc
adc
sbb
out
xchg
cmp
add
pop
insl
lcall
xchg
xchg
jnp
jecxz
xchg
xor
mov
insl
ja
dec
dec
adc
popf
notl
push
xchg
push
das
xor
mov
cmpsb
xchg
fisttpll
aaa
pop
dec
mov
pusha
pop
ja
sar
cli
adc
pop
nop
sqrtps
fs
pusha
insl
les
shll
fnstsw
daa
pop
xor
lods
and
cmp
repnz
xor
mov
or
and
clc
ljmp
push
outsl
sbb
repz
jle
xor
lret
xchg
ds
and
cli
adc
jmp
movsl
push
pop
push
fwait
lret
insl
sahf
xor
dec
aas
cmpsb
fsubl
gs
jge
push
pop
or
mov
and
imul
pop
shll
in
mov
sahf
push
stos
inc
clc
adc
mov
push
shr
stos
inc
jp
stc
pusha
xchg
lret
xor
lods
jmp
dec
movsl
jecxz
sti
push
scas
aas
test
sahf
ficompl
loop
es
jo
addr16
pop
rcll
test
xor
dec
sub
cmc
not
jae
mov
lock
cmpl
loope
scas
idivl
lret
bnd
hlt
jno
pushf
cmp
je
daa
inc
stc
dec
xor
mov
push
inc
mov
ficoms
icebp
lea
fnstsw
xchg
jb
pop
jmp
pop
into
xlat
inc
push
insb
push
sub
arpl
out
aad
jp
sti
add
jl
in
add
or
pop
add
and
inc
xchg
nop
call
bnd
mov
cwtl
add
scas
mov
shr
fwait
jb
pop
and
hlt
cmpsl
loope
clc
imull
pop
inc
mov
dec
mov
push
in
std
mov
cmc
adc
ret
fiadds
pop
sbb
mov
jecxz
add
ds
mov
pop
outsb
cwtl
xor
push
repz
inc
repz
sbb
pop
mov
leave
push
cld
scas
mov
adc
push
pop
stos
or
sahf
dec
leave
fistpl
xchg
xor
inc
cmp
test
andb
insb
insl
dec
push
ffree
rol
jo
mov
ret
icebp
xchg
je
push
adc
shrb
push
in
push
or
dec
fwait
xor
out
dec
mov
xlat
cmp
jmp
or
shll
popl
cmp
cmpsb
jecxz
scas
pop
call
std
pop
and
filds
mov
cmpsl
sbb
in
rcrb
outsl
cmpsl
jne
movb
cmp
dec
jmp
pop
push
xchg
das
scas
stos
in
fcmovnbe
das
jb
jnp
jns
pop
mov
jae
fs
lea
insb
push
out
mov
or
pop
add
movsb
pop
fwait
out
out
stos
imul
cmp
mov
out
sbb
dec
pop
mov
jp
lods
jb
je
sbb
mov
fimuls
xchg
mov
es
jae
test
push
lea
dec
ljmp
popf
dec
sub
xor
mov
jl
jge
pop
hlt
push
xchg
adc
xchg
popa
pop
mov
out
or
mov
add
fnstcw
mov
popa
adc
test
nop
iret
shrb
or
jbe
jae
cltd
xlat
out
mov
sub
push
pop
ljmp
in
add
in
fdivl
mov
gs
push
loopne
and
fisubl
xchg
jbe
insl
repnz
mov
jg
sbb
decb
cld
jnp
or
push
fsub
fistps
jp
dec
rclb
cmpsb
out
addr16
js
stos
imul
fwait
mov
out
adc
mov
mov
jge
xchg
pop
shlb
jo
push
insl
mov
sbb
add
lret
dec
rcrl
jo
mov
xor
jbe
inc
aaa
dec
pop
and
ljmp
lds
icebp
sub
push
jnp
mov
enter
and
pop
xchg
insl
dec
pop
fstpt
dec
sub
dec
in
stos
ljmp
sbb
xor
mov
mov
sbb
xchg
push
adc
dec
pop
cmpb
stc
fiadds
mov
mov
sbb
xchg
sahf
push
cmp
movsb
cmpsb
mov
mov
fistpll
arpl
aad
mov
pusha
addr16
dec
clc
in
xchg
xchg
mov
aaa
es
aas
xor
or
adc
jecxz
xorb
cmp
or
sbb
add
outsb
jge
repz
mov
mov
data16
cmp
inc
cmp
in
pop
cli
xchg
lea
mov
scas
adc
pop
insb
stc
stos
mov
dec
add
or
sbb
leave
loopne
sahf
xor
push
xchg
or
mov
sbb
sbb
ljmp
add
stos
rcrb
cmpsl
pop
ja
mov
sub
nop
repnz
push
push
mov
add
cmc
dec
das
rcrb
stc
daa
push
fldl
jo
out
or
pusha
fs
jns
sti
shrb
mov
es
dec
movsl
iret
daa
xchg
xor
std
and
or
pusha
aad
or
in
cmp
cmpsl
test
add
loop
jl
sbb
dec
cs
test
dec
dec
pop
pop
dec
lfs
or
imulb
mov
lret
and
sub
pop
inc
aad
mov
pop
mov
jle
xchg
stos
rcrb
cltd
jecxz
loope
int3
insl
shrl
lods
dec
mov
dec
rolb
mov
lods
imul
dec
daa
int
sbb
cli
js
mov
mov
jno
push
pop
mov
jb
ss
inc
cmp
xchg
mov
dec
dec
xchg
mov
and
int
or
mov
mov
test
push
inc
cld
in
sub
xchg
adc
das
dec
jge
sub
xchg
jle
pop
mul
pusha
cmp
and
adc
jb
sub
cmp
mov
pcmpeqd
call
sbb
mov
gs
mov
cmpsl
jp
js
arpl
mov
fimull
cmc
jnp
ret
jl
cmp
shl
and
pop
je
into
sahf
cs
dec
pusha
push
cmp
mov
mov
daa
pop
outsl
push
jecxz
in
pop
into
ds
xor
mov
xlat
loop
mov
popa
add
jp
test
push
pop
add
movsb
sbb
inc
lods
mov
sbb
hlt
and
cmp
mov
shll
inc
aas
mov
cs
mov
xchg
dec
pop
or
xor
js
xchg
or
adc
lahf
lods
vmovlps
ljmp
rcll
inc
popa
pushf
xchg
arpl
enter
fildl
adcl
repnz
and
mov
add
dec
pop
mov
pop
mov
inc
cmp
push
push
stc
std
xchg
idivl
or
or
ficoml
pop
mov
jo
mov
cmpsl
mov
cmp
sbb
ja
out
or
mov
stos
in
lret
pop
daa
mov
mov
gs
loope
lods
call
lds
loope
fwait
aas
jne
je
fnclex
dec
adc
aad
loopne
orl
sbb
lods
aad
std
or
maxps
sub
pop
shll
push
xchg
xor
ret
sub
stos
jge
roll
pop
sbb
or
sbb
in
div
dec
push
pop
loop
mov
mov
adc
xor
add
cmp
adc
pusha
xor
stos
jge
xchg
cmp
sub
imull
lea
push
sbb
xchg
in
pusha
mov
xor
lahf
aam
and
xlat
aas
lahf
dec
push
repnz
imul
mov
inc
dec
cmc
mov
cltd
leave
in
jo
out
add
rcl
cmp
or
adc
popf
or
fwait
dec
aaa
sbb
aad
jmp
or
out
lret
je
lds
or
inc
xor
push
add
or
jle
and
subb
mov
jge
nop
cmpsb
jae
cli
das
imul
xor
sbb
adc
scas
cmp
pop
je
sti
xchg
fwait
mov
repnz
pop
insb
cld
inc
add
nop
inc
mov
in
and
cwtl
mov
fistl
outsb
jae
inc
jmp
movsb
shlb
pushf
sub
out
mov
mov
dec
ljmp
lret
popf
sbb
lods
iret
or
jno
dec
push
insb
int3
mov
xchg
test
bnd
xchg
iret
stos
out
lahf
xchg
cltd
out
ss
push
gs
cmpsb
pop
add
pushf
les
jp
ja
and
xor
sahf
inc
pushf
push
jge
mov
mov
leave
sub
jns
out
scas
lahf
inc
cmc
loop
mov
jbe
and
cs
and
mov
jge
bnd
out
bound
ja
cmpsb
mov
cwtl
ret
lea
std
mov
mov
mov
scas
cmp
rcrl
pushf
fld
lret
into
jns
rcrl
mov
lahf
mov
and
ds
mov
mov
mov
add
cmc
loope
pop
jno
les
jb
push
cmpsb
xor
sbb
aas
icebp
xchg
add
mov
fdivl
das
dec
jb
jp
mov
cs
pop
ja
sbb
arpl
or
lcall
mov
jae
rorl
push
jo
mul
pop
jb
jl
mov
sub
pusha
scas
aad
lret
stc
int3
sub
setb
pop
and
jge
aas
sahf
enter
push
loope
lock
fldcw
push
jb
ja
pop
xchg
lods
and
fcompl
out
xchg
test
into
sub
xchg
sti
push
in
cmpsl
divl
mov
dec
sub
cli
arpl
jns
pop
xchg
test
sbb
mov
pop
xlat
insb
lret
sub
mov
mov
mov
pop
add
xor
push
sbb
fimull
loope
mov
pop
xchg
push
cwtl
sub
mov
movsl
addb
arpl
imul
xchg
add
jmp
cmp
pop
sub
imul
cmpb
popl
xchg
stos
insl
imul
fidivrs
push
xchg
loop
fmull
pop
das
dec
jne
xor
adc
jmp
imulb
cltd
in
pop
cmp
and
pop
inc
xchg
out
jmp
pop
fdivrs
into
jp
pop
xor
fdivp
and
cwtl
test
sarb
cmp
inc
or
mov
lret
inc
enter
and
cmp
cmp
enter
fs
testb
jbe
xchg
loopne
mov
cli
xor
subl
dec
mov
cltd
fwait
scas
dec
mov
pop
sti
mov
or
ja
aam
xchg
sub
ljmp
sbb
wrmsr
das
xchg
sbb
or
cwtl
lahf
cld
cmp
sub
cmp
dec
push
mov
xchg
addb
inc
xor
insb
jo
inc
call
jp
sbb
dec
inc
sarl
cmc
daa
ds
xor
rcll
test
or
pop
scas
xchg
out
pop
adc
sbb
aaa
bound
lods
inc
xchg
xor
mov
les
lret
inc
dec
pop
pop
adc
mov
test
das
fcoml
stos
sub
cmp
leave
int3
xor
mov
ja
dec
lret
flds
pusha
mov
rcrb
int3
xchg
push
mov
sarl
inc
clc
cwtl
jg
sub
icebp
inc
dec
mov
movsb
push
jl
lcall
jnp
aad
xor
aad
mov
or
add
and
sti
les
flds
scas
enter
call
push
or
hlt
in
imul
add
flds
mov
pop
push
cltd
dec
cli
out
jge
adc
xchg
movsl
push
fdivrl
fcmove
inc
fistl
test
pushf
pop
add
pop
lret
dec
mulb
sbb
inc
xchg
fstpt
call
push
cmpsb
xor
fwait
out
xchg
les
movd
mov
daa
or
unpckhps
xchg
shr
mov
mov
out
sbb
in
jp
xchg
dec
addr16
pusha
cli
incb
xchg
xchg
mov
xchg
icebp
lds
xchg
and
mov
push
out
jge
mov
popa
jnp
pushf
sub
pop
int
test
inc
dec
pop
int
lds
lds
and
cmp
out
dec
div
adcb
jno
pop
add
add
in
add
add
mov
add
or
sbb
add
add
mov
fildl
rcr
fimull
mov
popa
popa
pushf
push
pop
ljmp
xchg
dec
or
mov
adc
or
scas
jmp
int
xchg
leave
data16
mov
insb
repnz
enter
mov
dec
pusha
add
into
insb
leave
hlt
jg
push
arpl
inc
cmp
jo
and
cmp
imul
push
mov
lea
into
roll
test
dec
imul
test
sbb
and
ret
cs
ja
or
and
inc
repnz
dec
dec
jae
lock
dec
dec
mov
addr16
xchg
xor
rcrl
lods
adc
inc
pop
fsubrs
push
xchg
sahf
cltd
test
fmull
jle
lds
lds
mov
push
sbb
inc
out
mov
push
push
sub
adc
icebp
loopne
mov
push
pop
aas
cli
or
and
clc
insb
dec
mov
into
cs
xor
adc
mov
adc
icebp
mov
jno
cld
or
sub
pop
xor
call
stos
xor
lea
je
mov
repnz
sub
sarb
jge
sub
std
pusha
jle
arpl
xchg
pop
dec
cmp
cwtl
ljmp
add
jp
jo
lea
push
mov
pop
add
cmp
out
daa
inc
pop
cmpsb
add
sbb
iret
ljmp
adc
jmp
jp,pn
adc
and
pop
mov
adc
push
push
cmp
mov
mov
ret
push
push
xor
lcall
sti
pop
xchg
push
pop
dec
mov
push
pusha
cmp
mov
or
xchg
stos
xor
mov
addl
repz
and
jl
jmp
inc
adc
test
int
cmp
mov
mov
cmpsl
aas
mov
adc
in
sahf
ds
fisubrl
in
sahf
popfw
xchg
addr16
and
cmpsb
xor
clc
pop
lea
shr
fs
cmpsl
mov
inc
insl
jmp
xor
jbe
pusha
adc
or
xor
push
int
add
test
out
xchg
imul
decl
inc
pop
jecxz
imul
xor
int3
xor
mulb
jb
dec
mov
subl
testl
add
mov
xchg
in
out
pop
xchg
roll
cs
stos
dec
ror
je
sbb
icebp
mov
icebp
in
lods
push
test
daa
cld
push
sbb
pop
or
cli
inc
pop
imul
mov
test
xor
push
test
add
mov
push
hlt
scas
repnz
in
mov
adc
imul
xchg
push
shlb
inc
mov
and
fisttpll
mov
mov
sub
push
mov
mov
or
and
lret
fwait
loope
outsb
std
push
jge
mov
push
clc
test
jge
addr16
xchg
into
lret
out
push
push
clc
and
jp
lcall
aam
daa
lcall
cmc
lret
mov
sub
pop
inc
sbb
xor
push
jmp
xor
fsub
pop
xor
shlb
xlat
js
icebp
into
pop
ljmp
xor
mov
mov
insl
fdivrl
dec
pop
sub
les
pop
add
jg
jno
add
test
je
pop
inc
loopne
rcr
mov
leave
mov
jne
cmp
jl
ret
bnd
fsubrs
xor
xchg
adc
fcompl
loope
pop
insl
mov
push
dec
cltd
jb
push
jge
jl
mov
test
testb
mov
and
shlb
mov
enter
pop
sub
jecxz
mov
xchg
cld
cmc
fs
push
fiaddl
push
sub
scas
stc
xchg
bound
cmp
inc
fsubs
push
xchg
mov
push
mov
mov
sbb
fidivl
mov
add
jle
test
into
mov
repz
test
xchg
jnp
push
push
popa
jge
subl
cli
daa
aas
imul
xlat
in
inc
sbb
test
mov
loopne
push
js
mov
and
sub
xchg
loop
cmp
sahf
subl
imul
das
cmp
xor
std
addr16
xor
push
fstl
add
popa
stos
stos
out
pop
fcomps
and
inc
mov
jns
push
jmp
mov
or
adc
lods
je
je
sbb
std
lcall
xor
out
xchg
mov
xchg
imul
lods
jmp
jne
clc
andl
pop
fldcw
lret
add
adc
imul
mov
shl
inc
push
jno
repnz
lahf
pop
stos
jo
fs
inc
cs
in
dec
pop
mov
pop
mov
into
push
xchg
inc
repz
lea
mov
dec
push
fs
cli
les
cmp
xor
pop
ffreep
jns
dec
cmp
mov
adc
mov
mov
adc
jmp
pop
lods
stos
pushf
stc
in
xor
xchg
pop
adc
jne
cmc
mov
pop
fistl
imul
sub
vpunpckldq
leave
sbb
fidivrs
pushf
dec
xchg
loopw
push
sub
jno
push
jle
cmpsl
in
and
pop
cmp
jecxz
cltd
bound
test
in
inc
loopne
mov
icebp
cmp
paddw
xchg
push
add
cs
xor
outsb
and
mov
jmp
xor
call
lea
lret
jae
ja
sub
wbinvd
divl
mulb
xchg
mov
mov
rorl
nop
sbb
aaa
insb
outsl
jl
sub
mov
pop
and
fsubrl
inc
inc
and
xlat
mov
arpl
notb
sbb
pop
inc
rclb
leave
xlat
es
rorb
xor
mov
mov
sahf
pop
push
sbb
lcall
sub
es
call
dec
cmc
int
xchg
dec
sub
sub
mov
mov
aad
push
leave
aam
or
andl
mov
jmp
mov
or
pushf
cmpsl
pop
jmp
stos
jp
pop
xchg
cmp
sti
mov
movsl
test
mov
inc
pavgb
lret
ret
adc
jp
mov
adc
imul
pop
ss
cmp
repz
pop
jle
cmp
pop
xchg
mov
sub
and
cwtl
jnp
cli
hlt
mov
jl
push
pop
aad
dec
idivb
cmp
mov
mov
lahf
inc
cld
mov
mov
pop
and
stc
stos
dec
jbe
inc
loope
outsl
lods
aam
jp
sahf
xor
xchg
inc
sbb
jecxz
lods
iret
push
fwait
enter
push
daa
and
cmpsl
xchg
inc
lret
insl
in
xlat
jp
xchg
int3
pop
fs
outsl
repnz
cmp
sub
shl
xor
mov
jbe
pop
cli
pop
and
push
dec
fwait
lods
out
aad
dec
sub
fld
clc
ror
push
fisubrl
call
pop
jnp
jmp
dec
sub
mov
out
or
test
mov
mov
mov
add
call
pop
cli
xchg
xor
mov
imul
jg
sbb
and
mov
subb
mov
addr16
cmp
dec
jge
es
mov
popf
jecxz
shlb
inc
jg
dec
mov
mov
lods
out
and
pop
mov
fimuls
ret
das
sbb
sub
pop
shll
jbe
jmp
in
test
sbb
add
sti
dec
pop
scas
mov
mov
test
ret
fsubl
inc
hlt
icebp
pop
cmpsb
bound
adc
and
in
xor
rolb
stc
cld
pop
push
mov
adc
mov
mov
lods
pop
pop
sti
dec
mov
test
gs
sub
add
lret
or
inc
aaa
cltd
xchg
repnz
mov
jle
push
aam
pop
outsl
inc
lret
test
pop
or
mov
xchg
ljmp
mov
test
gs
jmp
xchg
fadd
orb
pop
js
cmp
mov
into
jno
xor
cmp
lahf
push
loop
shlb
xor
dec
cmp
repnz
push
decl
lds
sub
stos
fcomps
and
cmp
das
enter
xchg
dec
jl
sbb
repnz
in
pop
sarl
pop
pop
and
in
pop
push
arpl
mov
icebp
shrb
andb
cwtl
scas
bound
faddl
ss
pop
pop
sbb
dec
lock
enter
rorl
shl
loopne
mov
push
notb
rcrb
adc
adc
inc
lret
lock
es
lods
push
stos
lods
ret
xchg
das
fbstp
xor
loop
lds
xlat
inc
inc
ss
insl
xchg
fs
adc
mov
out
inc
sub
out
xor
cmp
das
mov
in
push
push
aaa
inc
mull
jp
leave
mov
ficompl
cmp
clc
dec
pop
clc
and
cwtl
push
cmp
fstl
jg
test
out
mov
sub
int3
jnp
in
out
outsb
cmp
setne
jne
pop
movsl
mov
fisttpl
mov
cld
cs
sbb
mov
test
cmp
jle
mov
mov
jmp
or
out
cmp
shll
cs
ret
xchg
or
push
andl
xchg
and
in
fdivrs
jge
cmp
push
scas
test
dec
scas
mov
and
add
clc
fldl
add
push
iret
das
mov
call
pop
jae
in
mov
ret
into
and
mov
adc
and
cmp
jno
shrl
int3
scas
arpl
and
xor
xor
lret
add
push
pop
movsb
popf
shll
mov
mov
jb
js
and
push
out
leave
dec
into
mov
add
mov
fchs
xchg
mov
inc
push
sub
aaa
push
shl
jo
xor
aad
ret
cltd
je
mov
cltd
out
mov
and
xor
in
sbb
inc
jbe
add
popa
lods
and
cmpsb
dec
mov
dec
xor
xor
insl
pop
gs
add
push
sar
int3
pop
xor
movsb
scas
dec
ficomps
pop
movsl
dec
in
mov
repz
clc
pop
dec
jg
sbb
shrb
aaa
sub
push
adc
xchg
stc
fnsave
sub
addr16
and
push
jge
out
sbb
jb
xchg
or
arpl
mov
into
data16
or
mov
test
pop
jbe
dec
adc
xor
imul
pop
out
jno
movsl
cmp
adc
xor
xor
sti
movsl
fnstcw
outsl
cmp
mov
push
push
xchg
scas
enter
ror
xchg
movsb
dec
jns
call
cwtl
or
or
mov
dec
add
mov
aaa
cmp
cmp
adc
jns
pop
lahf
mov
aad
lcall
or
cwtl
lret
add
daa
lahf
rcr
push
aas
out
test
mov
cmp
gs
jne
jo
clc
sti
fsubp
and
icebp
loop
loopne
xor
mov
aaa
cmp
imul
cmpsb
sti
sub
cmp
insb
hlt
mov
xchg
adc
ror
pushf
inc
push
or
fisttpl
mov
mov
jo
cld
sbb
inc
mov
cmp
sbb
mov
jnp
fisttpl
pop
into
mov
dec
pop
fwait
or
test
mov
xor
divl
negl
insl
enter
pop
inc
mov
call
call
out
jp
xor
aaa
mov
dec
pop
or
mov
inc
mov
scas
push
int3
mov
mov
aas
pusha
jg
pop
loope
insl
lcall
in
mov
movsl
call
pop
xchg
mov
loope
hlt
repnz
fsubr
jne
lds
sarb
mov
mov
loope
pop
mov
cmp
jne
mov
cmp
test
jge
or
sbbb
hlt
pop
mov
mov
popa
loopne
push
mov
mov
push
imul
shll
jo
sti
jae
jae
lcall
insl
dec
dec
stos
xor
mov
jb
cmp
es
pushf
repnz
xchg
test
xor
sub
mul
or
or
xor
jne
js
mov
push
mov
das
in
sub
or
mov
hlt
pushf
cmp
xchg
add
pop
cmp
cmpsb
sub
ss
test
cli
xorl
dec
call
add
jp
scas
test
idivb
xor
cld
lods
out
mov
cmp
divl
jp
mov
inc
ficoms
cmpsb
fdiv
out
lock
pop
ret
ja
xchg
mov
and
dec
pop
xchg
iret
xor
cltd
mov
mov
jecxz
sbbb
mov
cmc
das
or
fwait
scas
les
mov
mov
gs
inc
testl
pop
push
sub
test
ss
pop
in
sbb
movsb
idiv
stos
popf
mov
mov
roll
or
js
fs
pop
mov
out
add
cmc
aaa
test
imul
push
lods
in
mov
xchg
test
leave
imul
xchg
ret
clc
pop
xchg
dec
pop
mov
aas
arpl
mov
adc
push
push
repz
adc
add
pop
imul
decb
xlat
fs
push
dec
mov
imul
data16
mov
sbb
lret
pop
ja
mov
mov
mov
data16
cmp
int
imul
lahf
xchg
mov
cmp
fcoms
adc
xchg
fisubrs
bound
adc
fwait
dec
xchg
dec
fwait
inc
cli
pop
insl
sbb
clc
adc
lahf
ja
or
inc
shll
ret
xchg
popa
add
adc
js
aam
ljmp
inc
and
mov
mov
loopne
jae
imul
push
mov
mov
outsl
jge
mov
ret
out
repz
sub
popa
mov
push
in
xor
adc
jae
sbb
lock
int3
push
dec
cmp
sbb
sar
sub
inc
add
push
int
xlat
push
std
dec
out
push
popa
mov
adc
mov
jp
mov
mov
jecxz
repz
mov
jg
lahf
pop
arpl
dec
in
popa
mov
sbb
or
imulb
cwtl
lret
in
cmp
out
xchg
fisttpl
test
mov
sub
mov
cmc
enter
lock
push
jp,pn
movsb
int3
jecxz
cmp
pop
and
rorb
xor
push
and
mov
adc
enter
inc
jbe
call
stos
add
push
pop
xchg
lahf
fidivrl
fadds
xchg
mov
rorb
and
sbb
jp
bound
jae
lret
aad
andl
sbb
mov
lcall
les
sbb
mov
mov
push
scas
dec
test
mov
in
cmc
jns
sbb
mov
mov
xor
xor
inc
or
add
and
insl
sub
iret
pop
repz
mov
mov
ret
out
cli
cmp
repnz
mov
arpl
fwait
in
popf
pushl
stos
fadds
pusha
xor
cmp
stc
add
sti
cmp
mov
and
stc
lahf
and
pushf
pushf
std
cld
rcrb
roll
or
incl
inc
mov
jne
push
xchg
inc
pop
pop
dec
in
sbb
fimuls
cmpsb
pop
movsl
xchg
into
call
cmp
daa
js
jecxz
xor
daa
jno
imul
pusha
je
icebp
or
sahf
jg
adc
addr16
sub
nop
insl
test
outsl
mov
jae
lods
cmpsb
andl
adc
jmp
rolb
mov
mov
in
push
or
mov
ds
mov
lahf
lds
nop
inc
lahf
into
ds
in
mov
icebp
or
jmp
and
repnz
das
add
popf
and
stos
inc
loope
jmp
and
push
fwait
pop
std
mov
pop
mov
dec
std
or
sub
adc
popa
xchg
insb
fcompl
cmp
fs
and
jecxz
mov
sahf
movsl
std
jnp
add
daa
jle
cld
mov
ret
xchg
out
xchg
lret
adc
push
push
push
test
cld
loop
sbb
ret
mov
movsl
jecxz
dec
sbb
jnp
xchg
jns
adc
or
cli
test
popa
or
cs
call
adc
mov
xchg
mov
in
or
mov
rclb
xor
push
adc
mov
rcl
mov
lcall
mov
ret
inc
ja
lock
rorb
push
icebp
addr16
js
cli
test
leave
mov
inc
fnsave
sbb
hlt
loope
dec
mov
sub
test
ds
xchg
popa
data16
mov
lea
xchg
jnp
mov
sbb
movb
mov
jmp
push
test
jnp
rolb
sub
mov
gs
in
and
mov
jle
out
std
sbb
mov
push
out
or
popf
cmpsl
pop
cmpl
jmp
sti
popa
je
cmpsb
cmp
bound
ds
jbe
outsb
pusha
ss
adc
add
cmpsl
pop
test
leave
call
xor
xchg
daa
lahf
push
test
sub
test
bswap
sbb
sar
pushf
stc
inc
sbb
lret
pushf
jp
lcall
mov
int
inc
mov
outsl
out
add
das
xor
enter
adc
cmp
repnz
test
or
clc
out
hlt
les
mov
add
inc
sti
out
inc
mov
inc
jns
xchg
int
jb
call
and
or
add
xor
out
es
inc
loopne
out
sub
or
out
out
cld
ljmp
je
stos
push
orb
addr16
cltd
sbb
dec
lcall
cmpsb
jae
cli
pop
out
xchg
add
imul
push
pop
add
mov
or
push
hlt
mov
loop
add
push
mov
loop
xchg
cmp
cltd
stc
inc
ret
mov
mov
pop
out
outsb
inc
cmp
out
das
xor
stos
movsb
repz
aam
cwtl
faddl
adc
sub
test
ret
mov
pop
mov
cmp
jno
mov
insl
shrl
mov
daa
xor
mov
repnz
gs
add
fdivrs
push
pop
rcrl
shrl
enter
push
cmp
mov
daa
mov
jl
outsl
lock
popa
sbb
hlt
movsl
cmp
xchg
pushf
ds
lock
shr
lret
xorl
cltd
lods
out
bound
faddl
cmpsl
movsb
lds
popf
pop
shll
mov
movsl
dec
outsl
inc
fiaddl
inc
faddl
popa
jnp
inc
jno
and
adc
push
and
mov
mov
jns
and
arpl
dec
cmpb
repz
pop
repz
es
pop
and
mov
or
adc
push
ljmp
jbe
push
mov
inc
sub
push
lock
pop
mov
dec
mov
sub
add
mov
lock
push
loopne
or
testb
pop
scas
push
pop
add
rorb
jg
popf
jb
xor
mov
fnstcw
cmp
jp
mov
mov
xchg
adc
push
lods
jb
scas
mov
fucompp
and
and
mov
outsb
pop
push
lods
enter
mov
mov
shrl
cli
cltd
dec
dec
mov
in
movsb
mov
add
cs
xchg
push
xlat
xchg
ret
pop
mov
gs
jmp
imul
js
out
cmp
clc
in
jecxz
ja
sub
nop
add
cmp
cmp
and
cwtl
push
mov
insb
pop
dec
ret
adc
sbbb
pop
mov
movsl
xchg
push
and
in
lods
push
sbb
rclb
dec
movl
pop
sbb
or
mov
xchg
fwait
dec
pop
xchg
cmp
orb
mov
js
sbb
fwait
sahf
push
mov
sbb
das
adcl
repz
lock
cmp
aas
jl
cmc
add
xrelease
pop
addr16
pop
cmc
cwtl
test
mov
inc
sub
xor
or
in
xchg
and
lock
sub
sub
and
testb
rorl
mov
lcall
fistpl
xor
lea
test
iret
adc
add
arpl
je
dec
lret
stc
mov
jp
es
jb
push
popf
loope
push
sub
icebp
fbld
ret
cmc
mov
push
push
cmp
push
mov
scas
imul
ja
fnstcw
loopne
jnp
push
in
int
call
dec
ret
repz
xchg
loop
cmp
enter
mov
fsubl
pop
push
out
aad
inc
pop
scas
popf
sbb
push
popa
es
fisttps
jnp
mov
fsubl
sub
sbb
and
lea
loop
and
imul
insl
mov
xchg
mov
jno,pt
insl
lcall
mulb
mov
lea
into
dec
jg
mov
mov
rorb
loopne
sbb
bound
leave
sahf
mov
mov
adc
das
imul
dec
jg
dec
xchg
data16
mov
mov
out
aad
push
stos
sbb
sarl
rorl
and
cltd
out
shr
icebp
and
mov
imulb
jno
loope
xor
sub
es
repz
push
sbb
xor
js
std
push
sub
mov
xor
xchg
mov
mov
xor
mov
rorb
push
adc
xor
and
sub
xchg
in
mov
fs
adc
jl
xchg
push
lods
cmc
xchg
lret
inc
test
lea
pop
repz
cmc
les
es
mov
test
dec
ret
out
rcl
mov
push
mov
scas
inc
adc
mov
xchg
add
ret
add
ds
or
sbb
and
mov
cmpsl
aam
out
pop
push
stos
pop
cmpsl
cmp
scas
movsl
xor
andb
outsl
cmp
in
fildl
hlt
mov
and
dec
inc
pusha
cwtl
ret
sub
pop
imul
fwait
hlt
mul
loop
aam
cmp
mov
xchg
lea
inc
out
jmp
push
pop
dec
ret
push
jbe
stc
push
add
cld
add
out
sub
inc
xor
dec
jmp
dec
mov
push
pop
add
mov
inc
jae
loopne
push
imul
inc
sahf
push
sbb
mov
ret
mov
testb
jmp
dec
dec
adc
adc
shl
pop
jecxz
inc
sti
shlb
mov
cltd
pop
fisubrs
shrb
js
lods
cmp
mov
imul
jo
cs
and
or
lock
sub
mov
cs
dec
in
xlat
push
leave
lods
repz
or
mov
mov
and
ret
rcl
sti
cmp
arpl
mov
xchg
loop
sub
inc
mov
out
lcall
fwait
loope
sbb
push
dec
andl
xchg
xor
lds
xorb
nop
jns
outsb
bound
xchg
mov
adc
or
xchg
jp
push
sbb
xor
inc
loopne
xor
imul
loopne
sbb
dec
xor
loop
sbb
add
xlat
mov
mov
sbb
xor
cmpsl
and
mov
push
xor
jns
mov
mov
outsb
add
jmp
lods
in
pop
pop
ret
xchg
jg
test
jae
mov
pop
sub
fldenv
pop
lds
cmp
mov
xor
mov
or
xor
pushf
test
stos
inc
adc
cmp
pop
sub
fimuls
stc
or
rorl
je
adc
jno
xor
outsb
jne
aam
add
scas
jecxz
jo
pusha
xchg
scas
aam
adc
enter
jno
or
lock
or
ret
mov
cmc
cmpsb
mov
das
or
leave
pop
push
les
lret
mov
int
mov
pop
mov
stc
scas
pop
push
push
pop
push
jl
and
push
insb
scas
enter
mov
or
add
sbb
mov
and
jl
or
xor
gs
adc
das
maxps
fiadds
sbb
in
jne
stos
add
cwtl
jle
inc
jg
out
fisubrs
stc
adc
imul
and
inc
mov
ret
xor
xchg
sarl
jl
jmp
dec
leave
aas
and
jp
and
push
jp
lea
iret
cmpsb
mov
out
xchg
les
incb
call
fstps
or
push
popa
lods
dec
test
std
push
adcb
pop
popf
jbe
out
and
inc
div
cmp
jns
imul
fadds
fldl
pop
sub
aad
xor
sti
ret
mov
or
mov
push
pop
sar
xor
jno
mov
pop
mov
xor
jg
adc
stc
or
sbb
cld
insl
arpl
add
pop
test
cwtl
mov
cmpsl
fisttps
mov
jl
add
mov
mul
sub
in
loop
div
in
add
cmpsl
xor
or
jl
jbe
adc
cmc
cmpsl
push
loope
inc
idivb
push
stos
xchg
jp
add
scas
sub
push
and
jmp
fs
pop
mov
dec
push
pushf
sti
pcmpgtw
imul
cmp
sbb
mov
enter
jne
bound
push
shll
ja
scas
cmpb
jg
loop
mov
jnp
mov
std
dec
dec
pop
cmp
adc
and
push
jmp
lret
scas
fs
aam
pop
inc
xchg
gs
cmp
cmp
loopne
insb
sbb
jge
popa
dec
xor
sarl
scas
sbb
movsb
mov
aaa
aad
int3
add
xorb
and
std
xor
adcb
icebp
out
add
outsl
fistps
jbe
dec
sub
loop
pop
std
cs
dec
mov
into
jge
jno
mov
iret
fwait
outsb
fwait
std
cltd
push
push
push
sbb
leave
fistpl
push
scas
jp
add
push
fnsetpm(287
jecxz
lea
je
mov
inc
sub
sbb
repz
lods
add
add
sbb
jmp
mov
pop
sbb
sbb
test
xor
dec
test
test
inc
out
mov
bound
insl
daa
test
sub
xor
fstp
lcall
andb
pop
push
lcall
pop
jecxz
jecxz
shl
pop
adc
mov
loope
sub
fmull
subb
jno
jg
sahf
inc
add
fs
mov
xchg
loop
pop
pop
rcl
pop
mov
sbb
mov
fcoms
imul
sub
or
shlb
dec
pop
mov
xchg
cmc
pop
xchg
aam
sbb
js
out
je
pop
icebp
sub
jo
push
cld
mov
outsl
adc
test
sub
scas
fstl
mov
pop
jmp
arpl
sti
imul
xchg
inc
inc
xchg
pop
les
jae
out
mov
jle
mov
mov
pusha
push
pmulhw
xor
aad
mov
and
jle
mov
sub
adc
fucomip
sub
mov
mov
cmp
into
and
mov
push
scas
cmp
cmp
cmp
mov
or
imul
push
jae
xchg
sbb
or
cwtl
sbb
iret
test
xor
bound
shll
or
fnsave
sbb
addr16
into
arpl
lcall
sub
jne
sub
test
jbe
mov
test
xchg
mov
bound
cwtl
pop
loopne
outsb
sub
jae
mov
rolb
fs
gs
bound
or
pop
xor
and
addr16
add
mov
add
sub
mov
rcr
mov
hlt
xchg
jns
out
sub
jge
dec
mov
mov
dec
sub
shll
fwait
jmp
lret
push
jecxz
and
arpl
cmp
jle
es
push
daa
cs
xor
stos
lret
adc
shlb
aas
inc
cmp
and
pop
test
mov
test
mov
xor
mov
jge
aad
mov
test
sbb
scas
daa
push
enter
out
lahf
loope
or
call
jne
jo
cmpsb
sbb
xor
mov
sbb
jmp
leave
jns
cmc
ljmp
jns
int3
bound
lods
xor
lcall
mov
repnz
test
fidivl
hlt
push
pop
dec
js
cmp
sti
sub
aam
mov
or
inc
mov
inc
into
pop
mov
in
imul
and
jp
mov
je
mov
dec
pop
mov
mov
push
jno
sbb
sub
test
das
pop
xlat
in
sub
rcrb
inc
xchg
sbb
ljmp
mov
dec
pop
imul
popf
adc
lret
mov
mov
mov
mov
cltd
insl
aad
shrb
cwtl
jle
add
lret
fcompl
test
mov
xor
sub
shlb
inc
xchg
and
fwait
in
pop
sbb
data16
mov
out
gs
call
lock
cs
jne
jmp
xchg
dec
lods
cltd
mov
dec
dec
test
out
test
in
dec
lcall
pop
lock
xlat
push
jmpw
adc
xchg
ja
idivl
ja
jp
lcall
push
outsl
outsl
sub
xor
lret
insl
xor
jns
test
out
push
lods
lock
jbe
loop
out
jo
ja
xor
and
push
out
and
cmc
fdivl
xchg
inc
js
lret
jmp
imul
add
ljmp
jp
movsb
call
sbb
sbb
jmp
popf
fnsave
mov
mov
xchg
fadd
mov
std
sbb
push
jp
incb
aad
out
xor
and
mov
shlb
aas
and
rol
scas
pop
gs
popa
insl
cwtl
add
push
pushf
movsb
cmp
in
cmpsl
outsb
int
mov
stc
xor
adc
test
or
ds
push
sarl
fstl
aaa
mov
push
addl
rorb
lret
test
jmp
repz
adc
sub
push
push
je
movsb
sub
call
pop
subb
mov
out
or
hlt
fbld
daa
jbe
test
fwait
xchg
mov
jns
fistps
jle
sub
add
add
testb
enter
pop
mov
xchg
xchg
movsb
pop
ljmp
outsb
jno
adc
xchg
mov
arpl
xor
out
mov
imul
imul
repz
cltd
divl
hlt
mov
jg
cli
sub
testb
and
ss
push
mov
mov
pushf
cld
or
jmp
out
mov
dec
pop
jmp
lea
add
mov
pop
push
notb
sbb
xlat
or
push
jae
cs
mov
cld
unpcklps
jle
push
fsubrs
xchg
aaa
aaa
cmp
xor
pusha
iret
mov
inc
sbb
std
sub
imul
call
icebp
lret
lods
xchg
imul
fisubs
mov
rol
adc
outsb
push
mov
loopne
shll
mov
loop
and
inc
repnz
lock
addr16
dec
inc
es
pop
arpl
xchg
outsb
dec
jae
cmp
adc
lahf
jbe
mov
dec
cmp
hlt
jno
push
ss
dec
fdivrl
ret
f2xm1
dec
xlat
rorb
xor
jmp
jo
mov
dec
mov
pop
ljmp
dec
stos
pop
int
jns
inc
sub
loope
lock
push
xchg
dec
and
dec
xchg
and
lret
mov
mov
mov
enter
xchg
pop
sbb
je
out
popf
or
cwtl
adc
mov
jns
gs
aaa
inc
stc
daa
iret
xchg
push
jnp
add
in
jnp
mov
arpl
in
or
xor
scas
rorl
xor
push
add
aaa
or
or
es
cmp
xor
sahf
lret
sbb
jnp
cmpsb
xor
scas
dec
imul
cmp
daa
push
adc
cmp
cmp
jne
jg
addb
popa
adc
cmp
aaa
loopne
mov
pop
adc
cmc
dec
insl
pop
adc
jg
les
pop
xor
and
and
pop
lsl
les
adc
adc
ror
sub
jne
sbb
sbb
mov
pusha
push
xchg
dec
out
inc
xor
push
cmc
negl
mov
cmp
mov
outsl
cmp
outsb
mov
cmp
cld
and
add
cmpsb
in
mov
fldenv
movsb
popf
call
xlat
xlat
idiv
cmpb
and
pop
sahf
cmp
in
adc
dec
int3
mov
not
mull
aaa
bound
gs
jno
popf
rcll
inc
inc
adc
bound
jge
xchg
add
adc
add
inc
stos
jmp
dec
or
mov
jmp
das
jo
mov
bound
fnstcw
fsubl
out
mov
fimuls
fdivrp
leave
sbb
and
leave
test
ss
push
loop
jbe
pusha
ss
ficoms
jecxz
popf
ror
pop
xchg
xlat
and
std
fldcw
mov
sti
xchg
je
and
sahf
and
xchg
iret
sbb
ret
add
jno
scas
xchg
cmp
loop
pop
or
mov
hlt
adcb
clc
lcall
out
push
and
push
dec
sub
jl
pop
fisubs
popa
push
xchg
or
in
jl
lret
in
fdivrs
inc
and
jb
pop
lahf
pop
fwait
jo
or
lods
in
jg
fidivl
scas
xor
es
orl
sbb
nop
mov
sub
push
repz
sar
cmp
nop
mov
cmp
pop
mov
rorb
and
testb
xchg
mov
jb
sub
pop
jne
xlat
cs
push
lret
enter
in
xor
filds
pop
fs
lcall
cmpsl
cmp
addr16
adc
mov
add
ss
mov
shll
sub
xlat
cld
push
ret
incl
jne
jae
adc
lcall
mov
xor
add
sub
or
or
call
fistps
or
adc
sbb
sbb
xchg
jg
dec
cltd
popf
jl
add
and
sbb
jle
mov
dec
aas
and
add
xor
in
jne
testl
xchg
cmp
outsb
dec
xor
rolb
pop
into
lret
call
dec
or
push
dec
jnp
dec
outsb
pop
jae
push
adc
sbb
or
outsl
into
cmp
dec
mov
mulb
pop
loope
push
cmp
ja
cs
xchg
mov
jno
or
imul
in
cld
add
push
sub
call
sbb
and
or
fimuls
xchg
shll
mov
hlt
arpl
pop
push
mov
mov
lea
into
cmp
mov
ja
mov
push
pop
mov
inc
jo
sbb
sbb
xor
pusha
push
icebp
adc
test
imul
gs
jmp
icebp
out
inc
lea
or
xchg
pop
dec
sbb
fdiv
rcrb
std
icebp
mov
ja
repz
pop
popa
cmc
in
fmull
pop
clc
push
std
jl
add
and
xchg
mov
cltd
lods
sbbb
out
adc
jb
out
adc
lds
xchg
stos
adc
rol
sub
test
aaa
push
dec
lds
ret
hlt
stos
xchg
mov
mov
loop
pop
int3
mov
sub
cmp
mov
pop
aaa
shll
loop
xchg
test
lds
shlb
dec
pop
jecxz
push
lret
imul
mov
gs
dec
pop
popa
mov
push
lret
loop
adc
inc
mov
int
in
test
in
cld
dec
add
add
test
icebp
sbb
mov
adcl
or
mov
shrl
push
push
mov
idivl
in
stos
mov
sti
cmp
loop
loope
jb
es
out
mov
xchg
sti
shll
cmpsl
fnstsw
mov
xor
call
movsb
call
dec
idiv
adc
push
jmp
cld
xor
push
movsl
jp
jmp
dec
mov
roll
jb
or
pop
aad
dec
cmpsl
incl
and
add
dec
arpl
xchg
mov
imul
or
cld
cmp
imul
test
push
ret
pop
jne
sahf
popf
sub
push
ds
push
js
popf
and
pop
add
push
in
fwait
aaa
jmp
or
daa
push
pop
sbb
sahf
mov
pop
movsw
inc
std
fistl
pop
push
xchg
cmp
pop
xchg
mov
repz
jmp
cmovae
jmp
leave
shll
cmp
push
movsl
xchg
imul
jmp
icebp
fs
fs
aad
sub
sub
nop
lds
mov
data16
dec
imul
cmp
iret
jb
mov
mov
testb
pop
mov
push
ja
or
insb
push
pop
mov
sub
mov
int
cld
into
popa
testb
nop
or
jae
lods
push
mov
cwtl
sub
mov
or
jp
outsl
xchg
outsl
scas
and
xchg
cmc
xchg
pop
cmpsl
nop
jb
test
out
jae
lods
mov
jg
sti
sub
movsb
shll
test
insb
xchg
cmp
in
cmp
adc
or
mov
mov
sub
lods
push
pop
push
inc
popa
call
xchg
pusha
cmp
sub
add
jbe
js
and
xor
pop
push
cmp
gs
xor
adc
notl
lahf
cld
sub
push
jb
roll
jbe
mov
fidivrl
push
pop
xor
lods
mov
cwtl
outsl
rcrl
in
pop
out
or
add
jge
sbb
mov
adc
mov
cmpl
imul
mov
in
popf
arpl
mov
lahf
popl
nop
loopne
js
sbb
gs
adc
js
test
dec
pop
add
pop
es
lea
sub
dec
lea
mov
xchg
mov
cmpsb
or
andl
xchg
out
pop
pushf
adc
pushf
ret
stos
icebp
pop
add
pop
fucom
pop
lret
push
fisttpll
inc
mov
insb
sub
ss
add
in
insb
outsl
mov
xor
adc
popa
or
cmpsb
and
fiaddl
sbb
or
cmp
and
lea
int
xor
jecxz
or
rorb
sub
jl
addr16
cmpsb
cmpsb
sti
aaa
adc
mov
out
inc
dec
sub
stos
ljmp
sbb
cli
or
rcrl
imul
sbbb
xor
sbb
fistpl
pop
idivl
jno
cmp
dec
in
cli
mov
fbstp
dec
mov
jb
das
les
sbb
out
jbe
icebp
inc
inc
xor
jbe
pop
stc
pushf
mov
push
nop
andl
mov
test
inc
dec
inc
std
out
xchg
cli
mov
push
xor
sub
loopne
cmpsb
std
xchg
mov
jmp
cmp
pop
pop
push
out
out
dec
jl
jle
xor
mov
rcrl
mov
xchg
loopne
out
or
jne
stc
xchg
or
cmp
pop
or
cltd
pop
sbb
mov
ss
sub
cmp
hlt
enter
add
lods
lods
iret
add
cmp
cli
mov
mov
push
ss
test
xchg
push
jmp
enter
sbb
loopne
push
or
adc
insl
add
pusha
adc
ret
mov
adc
adc
imul
je
push
fadds
pop
in
xchg
in
ss
and
fistpll
xor
push
sub
jno
std
ss
movsb
cmp
mov
mov
cltd
xor
inc
fwait
aam
jge
addr16
das
int3
ljmp
test
pop
jge
int
or
push
test
jo
daa
cmc
enter
push
jmp
sbb
shrb
sub
push
xchg
insb
mov
pop
xchg
pop
out
add
repnz
push
push
nop
and
std
daa
rclb
ss
out
push
jmp
out
sub
pop
ds
sti
ds
mov
insl
outsb
xor
adc
push
jg
aad
pop
xor
cmp
add
fs
or
mov
push
sbb
and
insl
dec
aaa
fwait
out
jnp
cmpsb
inc
data16
mov
mov
mov
pop
fildl
sub
cli
jbe
filds
xor
and
scas
jg
imul
outsb
mov
pop
rolb
les
sub
push
mov
iret
sub
add
into
rcl
dec
dec
lea
imul
sbb
out
scas
push
sbb
xor
clc
scas
stos
hlt
or
dec
test
clc
jo
pop
jp
es
in
pop
pop
inc
add
scas
cmpsl
mov
mov
out
imul
mov
jnp
loopne
and
out
and
xor
leave
dec
mov
mov
ds
arpl
inc
test
sub
test
sub
adc
mov
cmp
sahf
jae
adc
mov
pop
mov
into
lcall
sbb
out
ds
stc
pop
test
pusha
pop
dec
stos
push
mov
testl
sbb
sti
neg
jnp
cmp
or
sahf
arpl
icebp
mull
sub
lds
arpl
test
push
adc
mov
mov
das
out
sub
adc
fs
sbb
ucomiss
test
mov
imul
aam
insb
fs
stc
dec
popf
jno
repnz
and
dec
in
cmpl
adc
jns
loopne
dec
addr16
std
fwait
das
popa
mov
and
ljmp
cmpsl
mov
neg
xor
scas
or
ja
lea
leave
dec
test
fisubs
test
lods
in
ljmp
sbb
lods
clc
jge
and
mov
notl
xchg
loope
out
mov
push
dec
push
int3
push
in
mov
imul
jb
jle
push
inc
cmp
push
sub
int3
jecxz
push
lods
add
mov
xor
pop
ljmp
out
sbb
int3
mov
add
nop
xchg
cmp
int
push
jno
xor
sbb
ds
cmp
pop
test
push
ret
cli
inc
addr16
or
gs
xor
push
call
mov
clc
fs
in
lahf
cld
pop
push
pop
jae
int3
popa
mulb
aas
sub
lods
pop
movsl
gs
into
psubw
or
je
push
push
pop
pop
sbb
mov
adc
cmp
test
scas
negl
add
mov
ret
ljmp
imul
or
push
cmp
dec
movsl
dec
xchg
cmp
jg
gs
adc
sub
push
nop
jno
out
adc
or
dec
adc
push
sbb
or
dec
cmpl
cld
xchg
sbb
clc
mov
jle
lods
rclb
jecxz
jno
int
mov
popa
mov
int
pop
in
mov
jmp
mov
xor
addr16
dec
jp
cmpsl
addl
mov
movsl
cmp
cmpsl
xor
xchg
sub
inc
cli
inc
push
repz
push
jo
sub
shll
push
std
mov
xchg
arpl
xchg
xor
mov
rorl
push
inc
mov
out
inc
cmp
or
int
ret
xor
pop
loope
rcr
and
imul
cld
int
or
mov
jno
mov
clc
lods
test
mov
in
mov
test
mov
xor
sbb
popa
pusha
out
jge
loopne
insl
push
mov
js
in
mov
pop
push
mov
arpl
xor
aaa
or
xchg
jl
dec
mov
loope
xor
inc
pop
lcall
std
popf
loop
and
fcoms
aaa
rcrb
dec
and
xor
push
loope
es
movb
addb
pusha
adc
ret
pop
dec
xadd
fistl
fwait
stos
jb
dec
loop
in
inc
pop
fidivs
cmovno
repz
inc
andl
lea
inc
js
fstpt
cmp
add
pop
sbb
repnz
repnz
push
mov
fwait
xor
cbtw
jbe
cmp
dec
data16
and
in
outsb
pop
push
js
push
ja
adc
pop
inc
mov
and
notl
lods
inc
test
aad
cmp
mov
xchg
arpl
sub
jnp
mov
jo
push
and
sahf
icebp
cli
push
inc
negb
lret
mov
pop
inc
pop
mov
dec
and
lods
sti
test
xor
push
lahf
jb
push
xchg
ljmp
fsts
pop
mov
xor
pop
sub
inc
or
sbb
mov
pop
xlat
inc
pop
std
daa
mov
xor
jp
mov
test
push
cs
xor
adc
dec
test
mov
stos
mov
test
xlat
dec
cmp
je
mov
lahf
mov
out
insl
mov
sbb
int
outsl
cwtl
pop
sbb
movsl
and
sti
testl
pop
cmp
xor
xlat
add
fcmovb
xor
in
adc
lret
roll
and
mov
push
cmc
pusha
push
jno
jmp
cmpsl
roll
outsb
and
mov
xor
and
cmpxchg
jge,pn
cmovnp
dec
xor
rcr
out
jl
aaa
xor
out
mov
ss
aas
xlat
jb
popf
and
jmp
mov
xchg
jp
lock
and
gs
jno
push
pop
std
mov
popf
and
sub
pushf
mov
pop
sub
mov
push
pushf
movsb
pop
pushf
cmp
mov
or
je
sub
stos
mov
push
sbb
popl
aas
inc
outsl
mov
inc
jnp
xor
add
adc
adc
push
add
into
adc
and
loopne
dec
sub
xchg
and
jmp
mov
pusha
ja
fimull
mov
daa
lahf
sbb
jl
clc
loopne
cmp
cmp
pop
push
aam
add
mov
sub
hlt
icebp
cld
mov
adc
and
outsb
inc
pushl
pop
cmpsb
jb
xor
mov
and
divl
adc
and
cmpsl
mov
in
inc
cmp
scas
es
or
xor
fs
loop
dec
cmp
adcl
hlt
cmp
sub
jo
push
fsubs
xchg
inc
stc
aad
cmp
dec
inc
sbb
shlb
mov
hlt
out
mov
cmp
in
sbb
popa
call
outsb
daa
push
xchg
cltd
inc
mov
into
dec
xchg
pop
shl
pop
jmp
iret
and
aas
mov
push
push
mull
xchg
out
dec
fs
jns
and
fdivrs
out
iret
add
sbb
arpl
push
adc
negl
pop
stos
mov
shlb
in
mov
cld
loopne
pop
popa
mov
pop
push
mov
mov
inc
aam
out
push
pop
sti
push
mov
mov
xor
mov
cmp
cmp
aam
jmp
fistps
leave
jnp
test
mov
mov
pusha
xor
mov
pop
jecxz
push
sti
xchg
jecxz
out
call
sub
pop
popa
jbe
icebp
scas
mul
adc
add
jbe
sub
ret
jno
adc
movsl
dec
adc
and
sbb
jb
test
add
loop
push
sbb
mov
mov
and
rcpps
cmp
cmp
test
outsb
cmc
push
mov
xchg
lret
dec
mov
fstp
adc
mov
jns
dec
jg
sahf
sbb
and
dec
mov
sub
inc
push
aas
sub
movsl
dec
push
or
and
or
xchg
stos
mov
sub
movsl
cmp
jg
mov
push
shr
jno
lock
mov
mov
mov
repz
cmp
repnz
pop
inc
mov
adc
nop
rcrb
inc
scas
cmp
sbb
outsb
mov
mov
std
cmp
sbb
jl
lahf
mov
scas
insl
cmpsl
inc
std
out
cwtl
std
in
mov
das
fcompl
arpl
imul
stc
add
cvtdq2ps
jp
imul
mov
cmp
rclb
mov
fs
jns
fldenv
sti
sbbl
ljmp
frstor
int
push
fmull
mov
dec
push
pop
pop
cmp
xchg
pushf
mov
pushf
jg
push
xchg
jecxz
inc
fistl
lret
mov
test
lods
scas
fiadds
mov
fsubr
rorb
cli
test
xchg
pop
sub
xor
cmpsl
mov
sbbb
shr
loop
mov
pop
imul
add
cs
pop
mov
mov
jg
sbb
dec
addr16
jg
push
fistpll
in
jbe
and
mov
and
lods
mov
pop
cli
add
push
sbb
pop
es
lcall
adc
shrb
or
jae
sti
cltd
aas
mov
fisubs
mov
pop
pop
push
mov
inc
jle
fnsave
out
or
pop
fists
or
or
fisttpll
vaddsubpd
lds
lods
jno
sub
xor
adc
fnstsw
mov
mov
mov
cli
pop
pop
push
daa
pop
mov
ds
mov
cld
add
cmp
out
fucomp
loopne
mov
or
notl
into
xor
and
dec
sahf
loope
das
test
pop
mov
add
adc
nop
in
and
mov
popa
jle
add
cld
shrb
jnp
push
xlat
in
out
vsubps
sahf
pop
nop
xchg
into
fwait
arpl
push
cmp
fisubrs
inc
int3
arpl
mov
les
xchg
js
testl
dec
push
and
xchg
push
rcrb
cmpsl
sbbb
jmp
mov
adc
loope
cmp
loop
cmc
sbb
mov
outsl
dec
cmc
or
jbe
xor
lds
pop
add
mov
push
div
pop
sub
mov
mov
in
ds
cmp
loopne
dec
rcrl
dec
jno
pop
and
leave
sbb
clc
and
or
pop
int
popa
cwtl
in
push
outsl
call
or
mov
jae
inc
sub
insb
into
pop
jno
dec
adc
into
mov
sub
cmp
call
sub
push
ror
push
cmp
inc
mov
mov
sub
lahf
dec
enter
loopne
lret
xchg
shll
push
push
jne
and
stos
xchg
scas
mov
out
js
pushf
fld1
gs
mov
cmc
dec
rol
inc
lds
icebp
icebp
pop
dec
xor
jp
or
push
push
push
stos
or
negb
ja
adc
loopne
mov
cmpsb
cvtpi2ps
sbb
lods
sub
popf
adc
in
xorb
out
sar
mov
fisubl
rolb
fidivrs
sub
sub
dec
cs
test
mov
pop
stos
jbe
cltd
dec
dec
jmp
mov
scas
xor
or
lahf
xchg
jo
add
cwtl
cwtl
sub
or
scas
pop
sbb
mov
mov
fsubrp
fiadds
je
fsubrp
aas
out
xchg
push
repz
mov
unpcklps
mov
movsl
bnd
lret
insl
movsb
sbb
and
std
sub
fs
cmp
jle,pt
cmp
inc
mov
mov
ljmp
inc
dec
out
imul
ds
cld
testl
scas
movl
xchg
ja
mov
mov
pusha
pushf
sub
incl
stos
mov
xchg
push
sti
jl
in
into
mov
sbb
enter
xor
mov
mov
bound
clc
pusha
pop
scas
int3
and
jecxz
mov
xor
sub
xor
jmp
cwtl
dec
xlat
inc
loope
xchg
push
and
mov
adc
jb
sar
or
sahf
mov
sahf
dec
xor
test
outsl
adc
jne
or
ss
sahf
cmp
xchg
or
int3
fsubs
pop
push
mov
or
cmpsb
sbb
jb
inc
xchg
out
jno
pop
xor
pusha
push
ret
pop
roll
into
fs
and
lahf
aaa
jbe
ljmp
sar
mov
mov
inc
in
cmp
xchg
xchg
xlat
idiv
das
adc
push
mov
mov
das
test
jne
ja
fdivs
inc
cmc
in
popf
loope
sbb
popf
inc
push
dec
jecxz
xchg
movsb
lcall
rcrb
cli
xor
mov
icebp
xchg
roll
add
and
mov
outsl
mov
sbb
and
movsb
pop
mov
mov
faddp
and
mov
mov
cwtl
dec
push
in
and
int3
in
sbb
sub
xchg
outsl
mov
sarl
insb
push
mov
cmp
out
push
pop
cmp
xor
mov
add
fstl
add
ret
xchg
push
fmul
les
cmp
filds
les
adc
mov
and
dec
cmp
inc
iret
enter
adc
subb
jnp
fisttps
cmc
sub
stos
subl
stos
cmp
aas
adc
gs
loope
inc
scas
inc
in
cmpsl
int3
xchg
mov
popa
sub
xor
adc
hlt
inc
or
inc
cltd
dec
xor
test
test
inc
faddl
int3
mov
mov
cld
movsb
pop
in
fisubrs
push
aaa
leave
sarb
mov
mov
jb
sub
fidivs
inc
pop
mov
sub
test
cs
repz
roll
dec
test
aam
jmp
push
pop
add
xchg
es
pop
fisubrs
cmp
dec
adc
test
push
sbb
das
or
cmp
out
adc
jnp
or
or
jo
jne
xchg
mov
gs
int3
lods
mov
pop
push
inc
call
mov
aas
lea
xor
std
dec
mov
cvtdq2ps
daa
icebp
or
test
xchg
aam
fwait
push
cmpsl
popa
xchg
movsl
loope
stos
mov
int
test
jnp
cwtl
cli
mov
xor
pop
insb
inc
push
gs
sub
sbbl
jae
mov
stc
mov
int
dec
lahf
negl
jg
sti
xor
cmp
jbe
push
mov
aad
sbb
xchg
popf
mov
inc
movsl
mov
lods
loopne
arpl
sub
sahf
inc
std
inc
or
sbbb
popf
loopne
or
pop
inc
cwtl
int3
inc
xor
in
adc
pop
in
stos
pop
xor
xchg
sub
xor
xor
stos
adc
mov
sub
inc
mov
sti
fsubrs
cmpsb
push
repz
pop
sub
lret
and
cmp
xor
outsb
and
mov
cwtl
cwtl
push
decb
cmpsb
test
add
inc
mov
psadbw
fdivl
jle
dec
or
push
jne
dec
cmpsb
jge
mov
daa
data16
imul
sub
lods
mov
imul
jnp
jae
imul
xchg
test
insl
fstl
call
xchg
and
scas
xchg
jb
cmp
inc
adc
lods
adc
jp
sub
nop
movsl
nop
outsb
ljmp
jnp
mov
test
xchg
mov
jle
fsubrs
fwait
jno
std
jmp
fcoms
cmp
mov
and
xchg
inc
lcall
xor
sbb
scas
popw
ficompl
negl
outsb
ds
inc
sbb
fidivrs
dec
and
fstpl
out
fwait
mov
nop
arpl
arpl
sbb
push
dec
shll
push
test
mov
ror
mov
push
fstps
loopne
sbb
imul
mov
xchg
pop
cmpsb
loope
outsl
aaa
jmp
imul
adc
or
pop
mov
push
subl
jg
imul
inc
stos
js
cwtl
mov
mov
mov
cmc
pusha
adc
mov
push
in
notl
sub
into
xchg
xacquire
sbb
sbb
icebp
sub
xchg
aas
cmp
xchg
je
ja
aaa
out
test
mov
scas
std
inc
jne
add
jae
xor
mov
fxch
mov
dec
fnstenv
loopne
pop
mov
in
mov
mov
jbe
das
call
xchg
outsb
and
mov
ret
xchg
mov
xorl
arpl
dec
scas
mov
jecxz
sbb
je
pop
sbb
aad
scas
mov
sub
sub
sub
xchg
sbb
mov
insl
lock
lret
xchg
daa
mov
cmp
pop
inc
insl
mov
bound
jns
test
lcall
cmp
mov
mov
dec
aas
pop
cmp
and
mov
das
xchg
push
cld
mov
mov
inc
inc
fistl
pusha
daa
pop
pop
cmp
fs
and
xchg
repz
aaa
xchg
mov
dec
pushf
push
popa
xor
stc
dec
test
fiaddl
outsl
mov
addr16
decl
xchg
push
or
inc
mov
lea
cmp
aas
adc
mov
sbb
pop
mov
les
loopne
sbb
addr16
lds
pop
test
push
dec
pushf
sbb
dec
or
bound
cs
lret
daa
cmp
scas
xor
and
sbb
movsb
pop
std
jae
fisubl
adc
dec
jg
mov
pop
mov
nop
leave
out
push
or
mov
cmc
rcr
nop
cld
jbe
in
cmc
dec
lods
push
inc
mov
fcmovnbe
iret
popf
push
ficoms
cmpsl
lret
lock
sbb
pop
cli
arpl
cmp
jge
mov
test
or
test
cmpsb
mov
movsb
cmc
cmc
repz
mov
repz
cmp
rcrb
nop
addr16
repnz
cltd
test
les
test
mov
pop
addr16
xchg
fadds
fstl
lods
push
cwtl
dec
rcrb
imul
out
and
cmp
pusha
fcoml
pop
bound
inc
adc
add
xchg
push
loope
jb
ret
loope
inc
jb
cwtl
nop
loop
test
jle
mov
les
add
iret
lods
out
lods
pop
xchg
xor
aad
mov
mov
loop
jne
xor
xchg
or
loope
dec
into
mov
repz
in
movsb
inc
and
or
inc
test
pop
lret
lock
xchg
lcall
mov
shll
dec
outsl
ret
mov
and
inc
push
aaa
xchg
and
cmpsl
les
jo
imul
mov
lcall
addb
add
sbb
lret
or
dec
adc
fnsave
loop
push
jl
or
aaa
jno
pop
js
mov
data16
ljmp
mov
inc
mov
cmp
xchg
push
in
les
mov
sub
test
mov
jbe
bound
adc
sub
out
sub
mov
scas
rorb
mov
mov
cmp
stos
idivb
inc
cltd
repnz
dec
in
xchg
outsl
fs
jp
sub
fstpl
ficoms
jne
cmp
mov
insl
adc
xchg
and
mov
fadds
sub
js
xchg
sbb
call
clc
inc
in
fs
ficomps
mov
cmc
loop
jecxz
icebp
xchg
adc
call
xchg
mov
jg
cmp
mov
pop
lods
arpl
sub
lods
xor
xor
jmp
push
add
xor
jmp
lods
push
ret
ja
dec
rclb
mov
fsubrl
rcrb
ss
xor
mov
ret
in
test
push
enter
js
jo
xchg
test
mov
cmpsb
add
jp
mov
mov
sarl
fwait
push
addr16
push
sub
dec
movsb
les
xchg
gs
and
or
lcall
popa
mov
sti
cmc
push
haddpd
cmp
sub
shll
and
sub
or
in
out
xor
loopne
stos
and
pushl
int
or
es
div
mov
dec
xor
scas
stos
cmp
sub
adc
cltd
aaa
pop
dec
in
push
push
adc
sub
insb
cmp
sahf
js
xchg
push
jns
stos
xchg
pop
sbb
scas
testl
or
push
scas
pop
fsubrl
test
es
mov
pop
dec
dec
and
pop
jbe
sub
push
jg
mov
dec
xchg
pop
xchg
enter
inc
jno
ss
cmc
addl
and
leave
dec
pop
sti
les
imul
aaa
dec
xchg
mov
data16
jne
adc
sbbb
mov
mov
and
scas
hlt
out
int
shlb
mov
mov
stc
cli
xchg
push
lock
mov
das
insl
push
push
lret
cwtl
cmp
dec
mov
adc
pop
pop
xlat
ja
mov
out
jne
imul
int
into
xchg
pop
sarl
jno
fisubl
dec
popa
jmp
in
lret
mov
sub
movsl
xlat
mov
add
les
jmp
adc
push
call
cld
mov
movsb
inc
or
repz
jbe
flds
pop
jl
mov
sub
sti
push
jg
inc
inc
add
jae
pop
push
lock
mov
sbb
cs
xor
push
clc
les
push
cmp
pop
and
mov
cmp
int3
jnp
xor
xchg
cs
dec
adcl
xchg
mov
fdivp
adc
jmp
xchg
lods
mov
mov
frstor
fdivp
jne
sub
mov
outsl
addr16
push
xchg
data16
cmp
ljmp
jge
pop
iret
popa
jno
pop
je
js
sbb
jl
mov
fiadds
leave
testb
dec
push
fidivs
movswl
pop
xlat
mov
ret
cmp
jbe
sub
stos
sub
test
std
ja
aam
mov
mov
cmpsb
je
push
mov
xor
mov
xchg
mov
mov
pop
subb
push
adc
jmp
mov
dec
test
test
dec
lods
dec
sbbb
sub
repz
push
ffreep
adc
mov
sub
enter
mov
in
cld
sub
loope
push
mov
sahf
outsl
inc
pop
fcoms
cmpl
out
rol
mov
insb
scas
mov
pusha
jo
and
add
xchg
repz
inc
outsl
jmp
mov
insl
sub
or
mov
dec
push
stc
pop
mov
push
adc
cltd
shr
mov
scas
xor
and
xorb
es
mov
cmp
in
movsb
mov
mov
push
cli
enter
das
fsubrs
fmuls
xlat
mov
xlat
inc
scas
inc
push
jnp
cmp
stos
xchg
jge
movsl
insl
inc
pop
pop
or
mov
sbb
cmc
enter
jbe
dec
lea
pop
ret
aam
shr
pop
add
ja
mov
shll
les
adc
pushf
mov
scas
add
mov
ja
mov
fyl2xp1
lock
lods
cmc
in
jge
mov
hlt
aaa
cmpsl
sub
sub
sub
mov
xchg
xor
mov
xor
fiadds
lock
jle
out
out
pop
lret
add
mov
fcoml
pop
jns
cmpl
outsl
pop
push
pop
outsb
adc
loop
jns
scas
pop
xchg
sub
scas
adc
jle
dec
inc
and
cmc
push
jle
sbb
mov
popf
mov
jne
xor
push
push
inc
cwtl
xchg
out
jmp
ja
push
xor
xchg
test
xor
out
lret
jo
lods
or
je
sub
dec
stos
std
adc
sbb
mov
xchg
sti
xchg
mulb
push
repnz
lcall
shll
push
insb
xor
mov
mov
into
mov
imul
xchg
in
addr16
and
das
inc
fdivrs
jl
inc
test
ret
cmp
mov
or
ss
fs
jno
outsl
out
cwtl
jo
enter
lods
mov
in
push
or
bound
and
out
push
xor
adc
daa
xchg
cmp
mov
sub
mov
jp
push
iret
frstor
sbb
pop
dec
push
jae
adc
ret
outsb
sbb
sub
imul
inc
pop
pop
addl
int3
mov
xor
stc
clc
cmpsl
mov
or
inc
div
shlb
cmpsl
lock
mov
push
data16
mov
push
mov
popf
test
jle
imul
les
mov
push
adc
push
pop
stos
push
inc
cmp
bound
outsl
sbb
and
push
push
xor
je
jns
inc
bswap
push
adc
in
aam
aad
aas
stos
mov
inc
inc
int
fs
outsl
xchg
inc
pop
mov
testl
sub
lods
mov
out
sbb
cmp
pop
pop
add
jnp
lahf
cmp
xchg
sbb
sbb
je
push
xor
loope
sahf
bound
gs
sbb
jge
pop
cmpb
movsl
test
fldt
in
addr16
and
xor
xchg
in
fwait
mov
jp
add
hlt
fisttpll
lods
push
clc
jae
mov
push
int3
inc
sahf
je
or
js
lods
jge
sub
test
std
outsl
stos
or
dec
pop
mov
hlt
aam
xor
mov
mov
jno
push
xor
lret
repnz
adc
xchg
testl
faddl
lds
mov
cmp
jnp
cmc
cmp
adc
nop
mov
cmp
mov
xchg
jmp
fistl
mov
mov
or
mov
fwait
mov
cmp
xlat
enter
out
sbb
stos
mov
push
cmp
inc
and
nop
jb
jnp
inc
call
lods
orl
nop
cmp
cld
daa
fistpl
push
cmp
test
inc
in
lret
pop
scas
pop
bnd
fwait
scas
arpl
sbbl
jmp
dec
and
jl
insl
or
mov
and
ljmp
add
fwait
aad
xchg
sarb
lcall
fs
insl
sbb
setp
jo
cs
xor
in
pop
test
xchg
sbb
xchg
mov
stc
aaa
dec
cmp
lods
pop
into
fcoms
fdivp
daa
loope
jnp
cmpsb
das
xchg
loopne
scas
les
hlt
sbb
mov
negl
lret
push
shll
bound
in
xor
stos
mov
dec
pop
fidivl
xchg
inc
push
repz
dec
cli
in
ljmp
cmpl
xchg
in
out
mov
dec
add
xor
push
cli
push
sub
rclb
arpl
je
or
add
xor
push
shl
insb
or
cmc
ficomps
cmp
enter
loopne
sub
stos
push
sub
pop
cmc
loop
push
in
push
imul
insl
jmp
mov
xor
daa
mov
fs
pop
xchg
pop
mov
push
fists
jmp
cs
add
pushf
daa
xchg
nop
test
fwait
stos
sbb
mov
pop
movsb
rcll
ret
push
cmp
mov
jle
pop
push
into
and
sbb
imul
jno
dec
mov
repnz
jl
xchg
js
cmp
mov
mov
push
leave
cld
fcoms
push
fs
fidivs
push
ss
jo
xor
sbb
jbe
and
jb
add
test
add
je
inc
add
out
out
jmp
adc
mov
sahf
imul
jmp
jge
int
add
rclb
sarl
repz
dec
fdivr
ret
js
jge
test
out
cwtl
xchg
cmpsb
adc
jae
idivl
shll
loopne
lret
pop
and
jbe
dec
fldt
imul
sub
out
xchg
jno
in
fmuls
jno
mov
loopne
xor
and
jno
add
mov
push
jnp
mov
cmp
faddp
fdivrl
outsl
popa
jle
orl
ss
add
pop
out
push
mov
fstpl
mov
rclb
mov
pop
or
and
push
push
loope
dec
sbb
and
push
jnp
jns
mov
cmpsb
cmp
jns
inc
xor
pop
js,pt
stos
inc
mov
mull
and
or
test
lods
cmpsb
adc
dec
xlat
push
mov
movsl
dec
out
jb
xchg
mov
ror
test
imul
test
lock
imul
mov
push
mov
mov
jbe
and
dec
fwait
mov
jo
fbld
movsl
outsb
nop
sarb
bound
xor
aas
in
sbb
in
cltd
xchg
and
inc
and
std
jo
xor
xlat
lcall
daa
in
cmpb
xor
cmp
mov
incl
popw
cltd
mov
icebp
test
jne
ss
int3
xor
cs
mov
cmp
mov
mov
cmp
sarl
enter
mov
imul
cmp
cmp
xor
mov
jo
or
mov
push
in
bound
pop
mov
and
dec
pop
xchg
xor
xchg
imul
xchg
mov
lods
push
mov
sub
ja
mov
add
jecxz
xchg
je
inc
sbb
imul
fdiv
repnz
sbb
sbb
pop
inc
loope
scas
inc
fs
cltd
adc
dec
int3
xchg
lcall
pop
std
loope
loop
jb
sbb
mov
push
cmp
arpl
mov
insl
cmc
cmp
xchg
xchg
jecxz
add
add
xchg
xor
jb
lods
lcall
push
push
fidivrs
popa
or
push
mov
mov
sbbb
mov
lret
pop
mov
ja
mov
push
cwtl
addr16
cmp
fcmovne
addr16
or
out
sbb
inc
shll
mov
xor
jecxz
cmp
or
loop
cld
test
fnstsw
pop
pop
mulb
jl
push
pop
inc
and
inc
movsb
je
xchg
aaa
ljmp
xrelease
jb
lds
sar
inc
icebp
jmp
mov
data16
cli
outsb
xor
fs
popa
adcl
pop
xchg
or
dec
hlt
push
mov
xor
lret
pusha
movsb
repz
push
sub
stos
push
mov
mov
push
pusha
sub
push
mov
mov
jle
out
leave
cmp
int3
mul
rcrb
lock
add
imul
and
jmp
aam
jno
das
fs
out
add
ljmp
pop
nop
lret
sarb
fidivrs
mov
sbb
mov
sbb
je
out
dec
int
out
xor
dec
mov
mov
mov
fstpl
mov
in
or
popf
lret
cmpsb
adc
and
stc
fldz
jg
push
rolb
rcll
and
test
addl
testl
mov
popa
and
mov
in
push
and
cmc
xchg
mov
cmp
xchg
sbb
bndstx
rcrb
xor
pop
push
adc
pop
repnz
jnp
mov
clc
and
mov
jb
dec
lcall
mov
enter
fs
loop
cs
int
cmp
mov
adc
xchg
in
cmp
cmpsb
cwtl
sti
and
daa
and
push
mov
or
dec
push
addr16
adc
cmpl
dec
push
mov
aam
jp
dec
iret
sbb
push
in
push
cmp
mov
pop
ss
jo
sbb
ret
mov
adc
jge
adc
aam
push
js
jmp
jp
gs
sbb
pop
imull
mov
pop
mov
in
cmp
fidivrs
jg
lahf
mov
jae
xlat
ljmp
adc
jae
inc
outsl
arpl
jno
pop
rcll
out
sub
pop
push
jae
add
cmp
push
adc
cmp
arpl
cmp
sub
pop
stc
and
push
jnp
push
add
mov
adc
adc
dec
addr16
sti
sub
adc
add
or
popf
loop
lahf
stos
out
pop
ret
dec
fnsave
jg
jmp
cmp
and
lret
pop
cmp
xor
mov
push
addb
sbb
dec
jl
push
xchg
addr16
push
mov
cpuid
or
dec
cli
int3
adc
xlat
fstpt
jb
jmp
xchg
mov
pop
fidivrl
and
dec
mov
xor
aad
repz
sbb
cwtl
cmpsl
pop
sahf
mov
mov
cltd
int
xor
test
push
sbb
imul
mov
or
pop
mulb
xchg
pop
xor
sub
inc
push
inc
xchg
ds
mov
js
jbe
test
push
mov
ljmp
adc
cwtl
xchg
cmp
loop
jnp
mov
in
ja
mov
xor
adcl
ret
dec
call
sbb
hlt
aad
mov
insl
loope
jge
movb
and
in
sbb
cmp
xchg
mov
notb
mov
popf
into
sub
roll
les
mov
mov
mov
in
adc
dec
and
je
into
sbb
std
cmp
imul
and
add
sbb
in
xor
aaa
mov
shrb
enter
arpl
call
fimull
ror
js
shr
push
inc
or
movsb
cmp
insb
inc
push
iret
aam
outsl
sahf
cmp
loope
dec
pusha
fstpl
xlat
lds
test
cmp
leave
scas
dec
cmp
lret
test
sahf
mov
inc
imul
flds
jle
pop
outsb
out
cmp
pop
pop
jbe
ja
inc
push
lahf
sub
stos
jne
stos
cld
push
add
or
nop
or
or
adc
add
aad
lods
dec
sub
cmp
jno
scas
cld
shrl
xor
pusha
sarb
hlt
pop
push
pop
sbb
clc
aaa
adc
and
out
jnp
bound
in
mov
sub
sti
adc
or
decl
mov
xor
test
je
and
cmpl
mulb
outsb
xlat
push
outsl
roll
pop
xor
mov
aad
xchg
pushf
in
pop
fcmovnb
jo
aam
sbb
jne
pop
jmp
test
sbb
arpl
xchg
mov
aam
pop
lods
lock
pushf
cmp
mov
hlt
adc
jl
shll
outsb
pop
sti
div
xor
lock
cmpsl
dec
dec
and
push
in
ret
addr16
ror
mov
or
ljmp
xchg
mov
das
ret
int3
mov
jle
mov
ss
dec
or
cwtl
pop
dec
sbb
arpl
pop
mov
iret
sub
sub
lds
pop
in
mov
dec
mov
or
lds
cmpsb
or
dec
xchg
lea
std
mov
jg
cmp
enter
rcl
pop
aam
mov
sub
sbb
inc
xor
das
mov
test
push
inc
lea
sbb
loope
mov
push
or
cmp
xlat
icebp
data16
mov
mov
repnz
or
fnstsw
arpl
call
leave
bound
ret
push
orl
std
jno
cld
loopne
aas
fcoml
add
repnz
hlt
frndint
flds
aas
mov
repz
rol
inc
pop
xchg
pusha
inc
xchg
inc
lods
rcrb
xchg
out
pusha
push
in
into
mov
dec
add
dec
dec
roll
add
arpl
imul
or
test
cmpsb
dec
dec
or
cmpsb
vmovdqu
aaa
push
jp
fildll
push
stc
mov
roll
xchg
int
aaa
mov
imul
and
testb
outsl
pop
icebp
mov
mov
adc
aas
jo
in
xchg
ds
mov
test
shlb
inc
dec
adc
or
mov
addr16
je
push
mov
decb
mov
and
sbb
aas
xchg
pop
insb
aaa
in
shrl
lea
push
fnstcw
xor
or
out
in
imul
and
inc
cmp
cmp
loopne
ja
clc
cmp
int3
jne
inc
jno
adc
push
jle
mov
pop
inc
mov
ret
mov
mov
sahf
dec
repnz
fs
push
cmpsb
stos
xor
fsubl
lahf
mov
jns
stc
les
sub
daa
xchg
rcll
addl
stc
lock
cmp
cmp
test
xlat
aas
mov
icebp
sub
and
icebp
and
stos
jo
sbb
in
rol
jae
push
js
or
dec
imul
mul
aad
fucom
add
xor
xchg
test
cli
or
js
xor
mov
ficomps
push
imul
in
test
je
pop
scas
insb
cmpsb
rol
stos
cmp
loop
outsl
fdivl
push
fmul
sub
pop
insl
sbb
push
mov
iret
aaa
xchg
pop
cmpsl
iret
enter
popa
dec
jge
outsb
icebp
lahf
hlt
mov
add
dec
sub
dec
mov
movhps
leave
fcoms
push
sub
mov
and
adcl
hlt
cmp
and
pop
push
lock
leave
lods
jle
pushl
jae
jne
incl
or
add
add
jno
inc
dec
dec
pop
cmp
stos
sub
ljmp
push
push
xlat
jp
iret
rcl
inc
shrb
xorb
xchg
out
pusha
std
fadds
ljmp
aad
mov
push
orl
jo
imul
ljmp
outsl
dec
sbb
fldcw
addl
jl
sar
addr16
loopne
imul
push
lret
mov
call
mov
jno
mov
pushf
fcomps
cli
xchg
pop
loop
daa
hlt
in
and
pop
push
in
inc
test
cli
mov
inc
popf
push
hlt
fcos
mov
cmp
pop
out
bound
sub
ds
cmp
add
lahf
stos
jg
fcomps
ja
adc
stos
jno
stos
xor
sub
mov
xchg
add
es
push
popf
dec
lret
das
xchg
inc
add
mov
sbb
xor
cmovg
push
mov
mov
ret
scas
je
add
adc
pop
adc
loope
in
cmp
sbb
push
ljmp
mov
shl
or
mov
test
andb
push
sub
xor
mov
ss
out
iret
mov
into
and
fldl
ja
or
mov
mov
sahf
push
fcoms
imul
mov
push
pop
addl
arpl
dec
icebp
jno
repz
pop
shrl
cmc
rol
xacquire
dec
fwait
fs
push
jbe
testl
pusha
mov
dec
sub
popa
lcall
ljmp
xor
roll
and
pop
mov
inc
sub
sub
repnz
mov
pop
mov
pushf
shll
mov
in
xchg
push
adc
mov
in
adc
cmpsl
or
sbb
fidivs
sarl
fmul
mov
mov
jns
push
inc
out
xchg
mulb
jns
stos
imulb
adc
ret
addr16
and
jns
shlb
mov
mov
xor
lret
stos
fcompl
insb
sbb
sub
in
xchg
ja
stc
adc
and
loop
push
out
cs
adc
stos
sub
mov
aam
lahf
dec
ds
idivl
stos
call
dec
and
loope
mov
pop
xchg
iret
sbb
sbb
aas
fidivrs
and
sbb
push
mov
mov
loope
adc
lods
sub
push
iret
mov
lcall
xor
fnsave
or
lock
bound
maskmovq
testl
ja
cli
test
in
add
cmpsl
int
repnz
xchg
fwait
mov
pop
jb
mull
inc
push
cs
jnp
cld
pop
test
dec
sub
scas
adc
xchg
pop
sub
scas
sbb
xor
fisttpll
cli
dec
test
imul
mov
sub
sub
push
xor
negl
dec
pusha
rcr
jmp
out
lock
popf
enter
aad
and
jns
stos
clc
divl
dec
xlat
push
mov
pop
mov
push
xchg
pop
repnz
push
mov
jg
fsubrs
and
in
es
popf
inc
jns
cmp
mov
jp
cmpsl
enter
icebp
cmp
pop
inc
test
sti
repz
lret
jecxz
ret
jns
push
in
cmp
daa
mov
clc
cli
inc
jp
stos
dec
dec
xchg
or
mov
cmc
iret
and
std
cmp
mov
jle
push
push
cmp
lsl
mov
push
in
push
pop
lds
ja
inc
ret
inc
inc
dec
sub
adc
sbb
push
jbe
xchg
push
lods
xchg
aas
mov
xchg
xor
mov
testb
pop
or
push
xchg
xchg
mov
xchg
mov
cmp
cs
nop
push
lret
out
rcrl
lods
pop
push
mov
popf
lcall
sbb
xchg
adc
xor
add
jno
add
add
out
fildl
sub
pop
addr16
movsb
lock
mov
jecxz
iret
cmc
jge
sbb
inc
xor
int
enter
jae
sbb
add
outsb
fs
test
push
das
inc
cs
add
lods
pop
lret
sub
ja
pop
xor
shlb
jno
mov
inc
xchg
aam
pop
mov
popf
inc
addr16
call
mov
jns
and
rorl
adcl
cmpsl
xchg
lods
adc
mov
mov
fwait
xchg
push
rcll
stc
mov
push
outsb
mov
push
jo
iret
out
or
and
outsl
not
pop
fsubs
add
shl
sbb
sbb
lret
outsl
lcall
sub
lds
fcmovne
imul
or
mov
sahf
fisubrl
xchg
cmpsl
out
lods
out
push
pusha
int3
jno
push
outsl
jmp
push
lret
cmp
out
pop
mov
test
add
xchg
lods
nop
adc
xchg
insl
jmp
iret
jle
and
mov
xchg
push
psubq
sbb
inc
xor
sbb
cli
aas
adc
lock
jno
clc
dec
jmp
mov
int3
das
cmp
pop
pop
inc
sbb
inc
insb
mov
dec
inc
shll
xchg
mov
sbb
and
jl
jnp
mov
cmpsb
mov
mov
int
pop
jns
mov
jb
xlat
adc
imul
pop
dec
cmpsb
fmull
mov
cltd
hlt
jno
jbe
negb
sarb
mov
mov
mov
sub
xchg
and
mov
and
add
nop
mov
cmp
pop
cmpl
ds
addr16
mov
rcr
pushf
flds
adc
mov
adc
fs
rcll
sahf
inc
mov
rolb
mov
ds
fildll
add
out
dec
sub
cli
cmp
lds
push
dec
cld
pop
fistl
loope
jae
divl
jbe
sbbl
jae
rcrl
mov
testb
mov
push
mov
dec
inc
inc
mov
xchg
sbb
jp
in
mov
call
loopne
movsb
stc
and
xchg
test
stos
sbb
add
adc
mov
xchg
jnp
jle
fwait
sub
clc
lret
push
mov
iret
aam
sbb
out
or
xor
push
pop
jo
jno
loopne
fucomi
inc
or
fsubs
fxch
mov
mov
dec
ficompl
mov
sbb
outsl
test
cltd
add
inc
add
pop
and
enter
xchg
xchg
insb
into
pop
and
stos
scas
or
adc
pop
in
outsb
mov
cs
dec
xchg
pusha
icebp
clc
jne
incb
out
adc
into
fbld
lods
lret
xchg
clc
mov
inc
outsl
sub
out
ja
jo
nop
js
dec
pop
mov
mov
xchg
sarb
notb
jge
js
cmc
sbb
jecxz
pusha
sub
push
test
lcall
mov
mov
and
adc
sbb
or
mov
mov
in
xor
pop
shrl
incb
jge
mov
xor
arpl
xor
js
roll
jae
mov
add
inc
sahf
inc
testl
stos
insl
pop
lock
xchg
out
ds
jmp
xchg
arpl
enter
push
addb
mov
mov
decb
jg
loope
adc
inc
clc
mov
or
dec
leave
xchg
pop
add
les
stos
and
mov
pop
xor
outsb
aad
adc
mov
adc
mov
das
jo
pop
sub
fnstenv
push
and
add
jl
cmp
xchg
sbb
fcmovne
mov
rorb
stos
pop
scas
idivl
lods
lret
adc
or
ret
dec
sbb
pop
push
xor
outsb
jne
ret
imull
add
cmp
test
enter
imul
ret
xor
jae
sub
pop
mov
in
iret
shrl
inc
mov
mov
xchg
rolb
cmp
fmuls
mov
pop
or
pushl
int3
lret
jo
cmp
xor
rorl
mov
adc
dec
ljmp
push
xchg
inc
jnp
sbb
push
sahf
repz
or
filds
addr16
jnp
push
insb
lahf
adc
push
push
push
add
inc
mov
add
pop
addr16
and
call
xchg
cmpsl
push
jl
inc
adc
pop
imul
adc
ljmp
sub
in
dec
dec
mov
ja
xchg
movsl
inc
leave
pop
bound
mov
ja
and
xchg
jl
cwtl
cmp
pop
jnp
jle
or
or
or
jb
in
mov
ja
popf
jle
pop
sbb
sti
and
popf
js
and
flds
dec
sbb
mov
mov
int3
pop
out
shlb
sarl
xor
mov
add
loopne
jns
push
xor
fwait
test
sub
add
and
pop
das
leave
sbb
add
mov
sub
idivb
jno
cld
sbb
cmp
sti
fists
inc
mov
sbb
mov
jb
es
jmp
frstor
fadd
inc
xor
mov
ljmp
imul
mov
inc
clc
and
cmpsl
pop
dec
pop
xchg
lock
int
push
mov
test
push
and
dec
rolb
or
cmp
insb
or
ds
jg
dec
ret
and
cmpsl
pop
daa
cmp
pop
mov
dec
dec
sbb
push
mov
inc
int3
mov
aad
das
loope
pop
jns
es
xchg
cmp
lods
inc
es
popf
fildll
insb
jmp
xchg
dec
push
in
loopne
push
popf
mov
es
test
insl
rorb
or
mov
pop
lret
xchg
push
aam
test
sbb
shl
jbe
adc
mov
and
sub
insb
mov
lea
cmp
sbb
pop
stos
pop
repz
je
rol
fisubl
outsb
push
sahf
in
lahf
dec
xor
rclb
inc
in
insl
dec
xchg
push
or
xchg
cmp
inc
fcmovne
jns
lds
mov
adc
ljmp
jp
mov
cmp
das
mov
outsb
mov
fsubrl
cmp
fistps
sbb
inc
js
pop
fidivrs
punpcklwd
fmulp
cmc
daa
loop
out
adc
pop
pop
push
cmp
fsubrp
mov
shl
pcmpeqw
xchg
pop
xorb
sbb
mov
pop
rol
test
mov
xor
push
adc
mov
xchg
je
sahf
inc
pop
sub
xchg
sbb
sbb
sub
jae
sub
shl
sub
loop
xor
orb
rcrl
adc
cmc
pusha
scas
dec
out
je
pop
mov
pusha
add
cmp
out
js
adc
fbld
mov
cld
sub
adc
outsb
jmp
cmp
stc
inc
fstl
adc
sbb
sbb
fcoml
add
xchg
and
push
mov
mov
in
jge
xchg
add
shlb
sub
aam
jge
mov
fsts
mov
xor
xchg
push
test
pop
rolb
imul
rolb
aam
out
pop
mov
mov
sahf
mov
sub
popf
cli
popf
les
adcl
test
rclb
mov
inc
cld
movsb
pushf
lods
stos
lret
shll
push
add
xchg
fidivrs
mov
outsb
cld
mov
mov
or
stc
cmpsl
shlb
xchg
imul
mov
scas
xor
push
repz
cmp
stc
xor
je
test
dec
push
int3
iret
lret
cmp
std
pop
in
pop
rorl
dec
rcll
mov
pop
pop
hlt
and
fidivl
iret
xlat
or
test
cmc
or
pop
aas
lods
aam
sub
pop
insl
hlt
push
loope
mov
insb
push
jno
mov
adc
sahf
push
cmp
std
add
lods
jge
mov
jbe
pop
shr
mov
sahf
sbb
sub
cmp
daa
sbb
or
aaa
and
jl
das
cmp
cmpb
popa
mov
push
push
stos
fxam
adc
inc
push
cmp
push
je
out
ds
inc
lods
movntps
cmp
cmpsl
sahf
daa
xor
pushf
ja
mov
xchg
mov
icebp
nop
cmp
lret
adc
fs
sbb
adc
sub
and
and
or
fs
and
nop
and
nop
ret
or
push
mov
mov
jnp
cmp
xor
shr
lods
adc
adc
inc
mov
mov
add
fwait
data16
mov
inc
add
imulb
xchg
sub
outsb
xchg
or
loopne
idivb
dec
and
outsb
xchg
test
mov
mov
fsubrl
or
dec
mov
dec
popa
repnz
cld
xor
push
adc
xchg
fbld
pop
xchg
dec
mov
mov
mov
mov
sub
mov
push
arpl
mov
push
scas
gs
mov
mov
ret
lret
pop
mov
lea
pop
gs
rclb
pop
pop
and
mov
std
jne
pusha
push
pop
xchg
dec
and
repnz
dec
adc
jl
add
adc
aam
xor
jne
push
push
sub
sbb
pop
jg
push
mov
and
mov
rcrb
mov
aam
jl
repnz
fnsetpm(287
push
adc
add
dec
xchg
shlb
das
icebp
jb
sahf
dec
push
aad
xor
xor
pop
lcall
mov
sahf
int
mov
roll
jne
lods
arpl
xor
mov
adc
clc
dec
xor
xor
push
arpl
enter
mov
mov
xchg
inc
dec
lahf
pushw
jmp
add
test
or
jle
sub
fisttpll
or
stos
xor
sbb
cmp
push
fiaddl
fwait
test
rcr
int
adc
dec
loopne
gs
jmp
jmp
out
lock
mov
adc
movsl
mov
jecxz
jecxz
std
sub
adc
in
out
popa
dec
pop
arpl
aad
or
stos
dec
jmp
outsb
pop
out
pop
and
inc
loop
shrl
fucomip
jmp
mov
mov
out
cli
mov
or
mov
nop
lea
sbb
ffreep
idivb
ss
fwait
test
or
and
and
imul
sbb
ljmp
cltd
cwtl
mov
inc
int
cmp
out
fwait
add
les
sub
mov
test
hlt
je
arpl
jae
loopne
add
dec
insl
int
jmp
notl
ljmp
or
add
faddp
outsl
test
add
pop
daa
inc
fistpll
xchg
sbb
loope
xor
pop
repz
dec
or
daa
mov
mov
jne
xor
arpl
mov
insl
divl
dec
sarl
ret
in
jbe
mov
nop
test
lea
std
or
clc
in
sbb
sub
pop
xchg
call
inc
inc
xchg
fcmovnb
fidivl
shrb
mov
in
inc
add
shll
xor
push
add
or
int
stos
or
inc
fisubs
pop
add
sbb
xchg
pop
push
jmp
sub
fbld
fldlg2
mov
pop
mov
outsb
rorl
repz
stos
out
jle
sbb
dec
es
aad
fnstcw
es
pop
ret
rcrl
push
xor
push
add
into
pop
addb
pusha
mov
in
xchg
mov
aas
jae
mov
rcrl
xchg
into
mov
cwtl
inc
jo
jge
mov
mov
in
xchg
inc
lods
movsb
or
bound
jno
sbb
mov
xlat
adc
or
xor
mov
dec
and
lcall
add
lahf
xchg
lret
clc
xor
movsb
pop
or
bound
outsb
xchg
popf
dec
lods
insb
in
cld
mov
scas
xorb
cmp
pop
cmp
push
repz
or
jae
inc
outsb
imul
mov
insb
stos
adc
loopne
mov
divl
push
out
ss
or
fs
mov
pop
push
and
mov
mov
xor
add
inc
inc
push
scas
es
and
cmc
ja
jns
add
cltd
mov
frstor
in
dec
sub
mov
dec
push
or
add
test
lahf
sbb
or
xchg
and
cltd
xor
mov
stc
dec
jg
mov
mov
mov
mov
fwait
out
fidivrs
xchg
gs
inc
adc
jmp
add
jns
aaa
mov
insb
pop
ss
mov
cwtl
bound
lcall
aad
nop
add
js
and
inc
jle
std
sbbl
dec
adc
dec
shr
add
cmp
xchg
mov
lods
hlt
ffree
out
dec
push
mov
out
fistps
fwait
xchg
jb
enter
imul
and
stos
jnp
push
lcall
scas
mov
push
mov
scas
aas
insb
sbb
fwait
or
daa
ret
or
in
or
push
insb
repnz
movsl
jecxz
jmp
xchg
xchg
jns
cs
cmp
jg
jo
mov
imul
jecxz
fs
ret
fisttpl
mov
add
aas
popf
fists
xor
pop
mov
dec
and
dec
cld
pop
enter
pop
jb
or
rcll
push
fcmovnb
imul
xor
xor
adc
cltd
or
gs
test
stos
and
cs
mov
rclb
push
les
ljmp
hlt
or
cmp
mov
popf
inc
leave
std
rclb
xor
mov
jp
add
mov
imul
mov
adc
in
push
inc
scas
pop
ficompl
xlat
andl
add
shr
xor
leave
mov
addr16
lock
xor
sbb
clc
mov
pusha
push
sahf
push
mov
adc
idivb
int3
test
inc
imul
pop
mov
xor
arpl
jg
and
clc
loopne
cli
add
daa
push
cmc
push
ficoml
loope
dec
push
inc
test
xor
xor
adc
jmp
xchg
cmp
jo
loop
mov
xchg
push
jmp
push
out
shrl
mov
sti
jecxz
pusha
test
enter
imul
shll
cmp
fs
push
push
movsb
jo
jno
fs
or
popf
mov
adc
loope
data16
movsl
jecxz
pop
xchg
pushf
stos
cmc
sbb
addr16
pop
arpl
push
inc
push
das
ds
movsl
pop
icebp
mov
mov
cs
xchg
cmp
pop
sarl
repz
or
sti
mov
mov
pop
add
mov
cmpsl
cli
ss
lds
jae
je
cmpsl
in
pop
mov
stos
cltd
xchg
scas
lds
push
mov
repnz
inc
sbb
repz
ljmp
mov
jge
repnz
xchg
icebp
xor
icebp
mov
inc
sub
jp
mov
dec
nop
xchg
jo
pushf
flds
inc
sti
lret
pop
fidivs
sbb
and
aam
insl
jno
inc
mov
mov
sbb
shl
and
pop
inc
in
test
lahf
outsb
push
pushf
roll
es
lock
cmpl
dec
fcomip
pop
aaa
es
sbb
pop
ds
xor
scas
sbb
icebp
std
xor
pop
imul
inc
jns
in
jge
mov
xchg
scas
imul
cmp
inc
cmp
xlat
push
dec
jae
pop
ljmp
mov
jg
sub
nop
add
orl
xor
vpsrlvd
ret
jecxz
xchg
ss
je
xor
pop
cmp
or
imul
inc
pop
fistpl
inc
pop
pop
pop
adc
xor
shlb
fisttpl
rorl
lock
fwait
and
mov
sub
rorl
xchg
jns
inc
aam
mov
in
pop
mov
adc
jge
push
ja
aad
mov
mov
in
xchg
cmpsl
rcrb
cmp
out
and
in
dec
out
imul
int
push
push
pop
mov
cltd
push
push
pop
pop
test
int
dec
inc
xchg
sbb
loopne
mov
rcl
sub
sub
jnp
mov
adc
sub
insb
cmc
dec
mov
xchg
xchg
push
sbb
jnp
push
lods
jge,pn
mov
push
sbbb
sbbl
test
mov
lret
xchg
int
jl
fcoms
push
adc
rclb
pop
dec
jne
movsb
push
pushf
in
xor
addl
xcrypt-ecb
cmpsl
lret
cwtl
rorb
cmp
xor
jmp
call
mov
pop
jo
call
loope
fcoms
push
test
cmpb
xchg
push
mov
xchg
add
test
xchg
or
iret
push
pushf
mov
push
sbb
inc
bswap
stc
sbb
int3
push
sbb
sub
rcrl
mov
fdivrl
out
ja
jnp
jmp
inc
mov
cmp
mov
push
outsb
push
mov
mov
or
push
jnp
outsb
fisubl
jecxz
cltd
les
push
inc
mov
xor
in
fdivr
fsubrl
out
pop
test
cmpb
and
mov
xchg
inc
cltd
repz
adc
add
test
lock
xchg
jl
jnp
mov
push
mov
pop
xchg
jl
or
jne
bound
lahf
and
jo
mov
inc
fists
push
fwait
int3
sub
iret
cld
mov
mov
cwtl
ds
shrb
cmp
or
and
imul
in
xchg
add
insb
adcb
fcompl
lods
mov
subl
or
sti
or
cmp
aam
rolb
in
xlat
mov
xor
cmovg
push
in
mov
imul
xor
in
bound
fdivrl
mov
outsl
xchg
aad
aaa
mov
hlt
mov
cmp
lcall
inc
or
jns
mov
movsl
hlt
cld
imul
xchg
mov
adc
incb
add
push
ljmp
xchg
adcb
pusha
daa
int3
mov
add
ja
cmp
pop
or
and
pop
ffree
mov
fxch
lahf
cld
adc
inc
lcall
fincstp
sbbb
mov
dec
in
out
addr16
mov
call
add
fiadds
xor
pop
xchg
jne
fadd
fsubl
movsl
cli
push
aas
sbb
mov
pop
loop
and
adc
adc
jge
addr16
mov
je
int3
js
mov
pusha
fistps
cli
sub
mov
cmpsl
out
out
mov
std
cmpsl
mov
cmpsb
clc
shll
ret
lret
dec
fbld
mov
mov
xchg
test
cli
mov
dec
in
testb
or
dec
add
sub
xor
sub
aad
dec
lret
mov
lret
mov
jle
out
loopne
adc
inc
sub
fcoms
sysenter
push
loopne
sbb
pop
adc
popf
inc
cwtl
addr16
sub
sbb
pop
lods
add
cmpl
xchg
int3
andb
dec
fisubs
ret
out
sub
xchg
add
mov
int3
push
cwtl
mov
jnp
outsl
inc
inc
call
inc
int
dec
sbb
fmull
pop
jl
mov
mov
cmp
filds
xchg
xor
and
sub
adc
mov
cld
mov
mov
test
and
movsb
jo
and
test
bound
jmp
or
arpl
xor
mov
or
outsl
arpl
ds
je
pop
push
imul
fldt
subl
fsubr
jns
adc
mov
int3
mov
lods
ja
jb
sbb
push
clc
pushf
dec
sbb
movsb
call
inc
fst
movsb
jnp
cmp
inc
call
push
mov
dec
add
inc
push
dec
cwtl
lock
push
dec
sub
adc
mov
dec
in
cli
and
ljmp
cmp
arpl
idivl
mov
pop
adc
aam
adc
dec
jae
ja
cli
and
ljmp
push
movsb
sahf
cld
mov
ljmp
jl
rcll
jbe
add
pop
jmp
nop
imul
addb
cmp
jnp
cltd
add
xchg
adc
cmp
push
pop
mov
sub
cld
jb
jnp
loop
leave
or
and
mov
loopne
jo
je
mov
mov
adc
sub
leave
nop
imul
inc
and
jge
or
xorl
and
sti
ret
mov
mov
adc
xorl
push
pop
pusha
sbb
xchg
sub
dec
xor
cmp
sbb
add
fucomi
cmp
fbld
adc
push
out
xor
bound
cld
xchg
mov
mov
sahf
jl
inc
out
push
lods
call
repnz
scas
inc
adc
imul
out
mov
fwait
mov
syscall
lds
dec
imul
fs
xchg
orl
inc
andb
mov
shll
mov
movb
ja
xor
lods
sbb
push
mov
fimuls
push
rcl
push
xor
leave
dec
push
sbb
add
insb
jne
push
arpl
pop
fsubs
sbbb
lods
arpl
bound
xchg
inc
xchg
adcl
cmp
xor
into
repz
push
fwait
pop
or
movb
jecxz
mov
xor
ljmp
sbb
sbb
call
test
xor
sub
repnz
sbbl
andl
mov
ja
pop
daa
or
fnstenv
sarb
dec
or
mov
popf
mov
ja
lds
push
sbb
xor
sub
inc
ljmp
sarb
push
jns
repz
insl
rclb
outsl
xchg
inc
mov
mov
cmp
push
fsubr
imul
inc
test
push
mov
mov
dec
in
xor
vaddps
add
push
mov
mov
addr16
pop
jns
lret
or
push
cmp
adc
mov
pop
addr16
mov
xchg
mov
push
lahf
push
cmpb
or
add
shrl
std
cmp
icebp
divb
movsb
mov
psubusb
clc
dec
xlat
ss
fisttpll
pushf
adc
adc
ja
cmp
xchg
lods
dec
push
outsl
xor
outsl
adc
dec
push
repz
mov
push
mov
jl
dec
aaa
push
int
test
pushf
xor
pushf
mov
mov
fs
cmp
mov
notl
pop
gs
pop
sub
subl
jns
fistl
pop
aad
inc
dec
call
leave
gs
jl
mov
adc
repnz
mov
dec
clc
ljmp
xchg
loopne
add
in
in
push
dec
dec
ljmp
test
fmull
shl
es
xor
mov
jae
cld
fidivrs
clc
dec
daa
lods
or
adc
dec
hlt
pop
fsubrp
cmp
push
test
leave
ljmp
or
push
push
pop
cmpsb
and
pusha
std
dec
push
outsl
sbb
out
fildll
adc
xchg
push
mov
aam
leave
hlt
idivl
dec
mov
shl
fwait
pop
icebp
ljmp
cltd
imul
rclb
popf
mov
in
mov
lret
jo
pop
xchg
and
loop
je
xchg
orl
fadd
xchg
xchg
loope
inc
xlat
mov
pop
js
pop
add
sbb
sbb
adc
and
inc
mov
pop
or
add
push
sub
push
addr16
test
roll
js
jns
je
loop
iret
fcom
scas
inc
aad
mov
mull
or
adc
fmull
hlt
outsb
je
into
addr16
ds
pop
mov
fdivrs
in
cld
push
xchg
pop
out
cmc
pop
lock
cltd
mov
mov
andl
push
sbb
jno
mov
add
pop
cmp
aad
fcoml
sub
xorl
mov
imul
jb
ja
outsl
cld
outsl
stc
icebp
pop
mov
call
xchg
and
xchg
mov
fiaddl
xchg
jmp
fists
jnp
nop
cmp
loop
mov
sbb
add
pop
push
ljmp
icebp
xor
das
or
insb
and
inc
in
xlat
add
jae
push
popf
pop
orb
dec
cmp
sbb
cmp
cmp
cmp
loopne
fsub
pop
mov
mov
sti
inc
xchg
pop
fsubs
repz
or
scas
dec
sub
mov
xor
cmp
jns
in
dec
sbb
mov
adc
and
clc
mov
mov
neg
movsl
js
mov
ret
or
sub
jnp
xchg
inc
add
mov
in
xchg
mov
xchg
sbb
jo
inc
adc
push
daa
cmc
loop
popf
mov
xchg
xchg
cmp
leave
or
xchg
mov
aaa
inc
mov
push
cmpsl
xchg
mov
cmp
sbb
dec
outsb
lcallw
adc
scas
xor
jae
jl
and
icebp
sub
sbb
daa
mov
out
cmovbe
sbb
loopne
aas
fcmovbe
mov
lahf
adc
add
and
xlat
cmp
outsb
aam
aad
mov
test
xor
lret
xor
int
and
pop
shrb
pop
fwait
pop
sub
hlt
pop
cmp
aas
xchg
adc
fisubl
cmp
loopne
push
add
out
push
cmp
call
xchg
pop
aad
sbb
outsb
xor
and
or
mov
mov
or
std
ret
jbe
cmp
insb
fucom
ret
movsl
and
jnp
mov
push
aaa
inc
test
in
fsubrs
adc
xor
mov
jl
stos
lahf
jl
add
dec
faddl
jl
push
addl
std
cwtl
push
aaa
mov
fildl
jl
xor
xchg
inc
add
std
fucomi
notl
das
add
pushl
icebp
test
mov
cli
xchg
or
mov
and
mov
stos
pop
pop
mov
nop
push
sbb
jp,pt
jmp
inc
jbe
adc
xchg
xchg
push
mov
sbb
xor
ud1
push
jle
stos
loopne
xchg
xor
add
and
lock
jl
fimull
int
decl
aaa
insl
ret
gs
inc
int3
dec
jne
js
sub
imul
jne
ss
pop
movsb
inc
ficompl
push
cmp
cli
int3
pop
mov
mov
jmp
cmp
shr
push
test
mov
ljmp
push
and
scas
loop
sti
dec
add
or
mov
inc
mov
inc
xor
cmp
out
ss
push
aaa
lods
jns
fistps
dec
jecxz
arpl
push
leave
lret
jecxz
fldl
xor
xchg
jbe
xchg
xchg
pop
mov
lahf
mov
pop
inc
adc
test
icebp
stos
jecxz
pop
dec
pop
or
bound
xor
aad
lods
xor
setnp
or
push
cld
lret
loopne
mov
popf
inc
xchg
aas
out
pop
inc
leave
push
scas
loop
sub
mov
mov
fs
test
test
cltd
in
js
cltd
subb
and
adc
jle
js
and
in
sbb
inc
sahf
xor
and
dec
roll
and
jae
out
pop
aaa
daa
test
decb
dec
push
test
mov
sub
out
rcrb
popa
fcmovbe
cld
push
fs
xlat
mov
jae
jp
push
decl
test
test
repz
scas
fstps
repnz
outsb
sbb
cmp
mov
gs
aad
xchg
inc
neg
jns
mov
sub
cmp
dec
adc
xor
xor
cld
popa
or
lcall
jp
stos
push
mov
inc
pop
lods
fcompl
cmc
repz
sbb
and
inc
lcall
sub
lds
jg
cmpb
leave
insb
sub
cmpsl
in
outsl
movsb
inc
inc
sarb
dec
push
aaa
mov
les
pop
cmp
mov
jge
mov
ljmp
xchg
mov
jl
stc
add
push
lds
add
es
sbbl
pop
insl
xlat
lds
add
jmp
outsl
xchg
lahf
cmp
and
daa
jl
lods
lods
outsl
push
sbb
shll
mov
lds
fistpl
cmp
in
jae
mov
pop
lds
xor
or
xchg
clc
or
dec
arpl
sarl
test
inc
fildll
lea
pusha
pop
pop
addr16
mov
push
lret
adc
mov
ret
jb
cmp
jmp
js
in
sbbl
jle
sbb
inc
stos
mov
and
mov
popf
mov
xor
push
popa
out
or
push
jmp
xor
in
xchg
pop
xor
cbtw
imul
dec
and
push
fld
shll
mov
rorb
sub
push
scas
je
std
push
lret
dec
int3
jle
sub
dec
mov
adc
mov
inc
adc
pop
cmp
pop
add
xchg
sub
stos
jns
mov
mov
push
lret
pushf
xchg
popa
test
iret
mov
mov
into
cmpsb
jl
arpl
jmp
std
sub
cmp
or
lret
fs
outsb
add
ret
popa
jg
insl
or
sahf
cmc
ds
sbb
adc
inc
fsubrs
adc
cmp
add
dec
jo
mov
loopne
and
repnz
dec
mov
add
dec
sbb
sub
inc
into
jno
mov
mov
fidivrs
enter
lock
pop
mov
xor
js
push
sbb
repnz
mov
andnps
test
cli
sub
adc
xlat
iret
out
mov
jne
orl
cmpsl
add
jl
shrb
test
imul
je
sbb
pop
mov
and
push
or
adc
loop
and
iret
jbe
and
xor
inc
pushf
or
or
mov
inc
lret
mov
or
stc
or
jge
jl
jbe
rol
popa
pop
stc
ja
cmp
jb
loopne
gs
inc
inc
addb
sub
sbb
and
lea
cli
divl
je
arpl
repz
lods
mov
insl
out
and
roll
ljmp
test
cli
lea
sub
jns
incb
test
mov
sahf
jne
int
inc
mov
movsb
ret
xor
sub
jmp
cli
stos
sti
test
jecxz
xor
pop
adc
jno
sbb
inc
inc
loope
call
sbb
fstpt
dec
pusha
mov
fcoml
repz
push
repnz
add
lahf
das
repnz
mov
inc
dec
addb
mov
adc
gs
or
cld
xchg
or
je
xchg
mov
sahf
mov
pop
pop
mov
and
jle
cmc
mov
lds
lret
lcall
inc
outsb
gs
loope
jb
shrl
daa
aaa
cmpsl
les
std
inc
push
mov
ret
dec
shl
bound
inc
xchg
jbe
fucomp
sub
mov
in
jmp
inc
inc
push
shl
xchg
sbb
imul
test
or
clc
fdivrl
sub
jp
lds
mov
rcrb
cmc
jp
pop
mov
arpl
ja
mov
insb
push
or
cltd
int
scas
xcrypt-ctr
cmpsl
ficoml
fisubs
mov
and
jne
nop
int
sub
sub
pop
ds
inc
add
enter
enter
fadds
mov
xchg
addr16
sbb
sub
xor
jbe
insl
mov
in
jne
lcall
test
jae
dec
dec
xchg
jle
pop
mov
push
jecxz
pop
or
pop
sub
movsb
mov
jp
xchg
je
xchg
fiaddl
outsb
scas
add
std
mov
popa
data16
push
push
push
addr16
mov
pop
xchg
in
shlb
jno
movsl
pop
push
shll
fs
sbb
add
insl
gs
imul
inc
out
cmc
mov
ljmp
add
cmpsb
fildll
inc
add
mov
push
xor
pop
adc
or
dec
mov
dec
jbe
mov
sbb
icebp
insl
push
jbe
iret
je,pt
xlat
push
jp
lret
cmp
scas
hlt
jo
aad
push
pop
testl
and
in
inc
jp
clc
out
cli
into
cmp
loop
mov
loopne
cltd
pushf
xchg
sti
pop
pop
inc
call
cmp
xchg
jg
mov
aas
fs
out
dec
pop
pop
adc
or
pop
xchg
add
outsl
xchg
add
add
pop
push
pop
jl
dec
mov
xchg
jg
mov
mov
pop
push
cmpl
pop
test
jae
xlat
mov
adc
clc
jne
dec
dec
mov
fildl
cld
mov
push
shll
or
dec
lcall
jnp
pop
push
push
cmc
cmp
enter
into
repz
mov
lret
mov
jne
ret
pop
insl
arpl
pop
jp
pop
loop
dec
es
fcoml
sub
inc
int3
inc
js
xchg
aas
icebp
aaa
gs
imul
push
dec
mov
xchg
inc
cmpsb
add
int
cmp
fsubs
mulb
sub
cmp
jp
push
fwait
into
add
repz
pusha
add
enter
pop
scas
adc
aas
iret
outsl
mov
mov
loope
or
movq
xlat
mov
push
insb
lock
or
pop
fldz
pop
xor
inc
mov
movsl
stos
in
sub
rcrl
ss
dec
jle
insb
cmp
dec
adc
push
xchg
mov
in
mov
inc
dec
push
cmp
roll
jae
pop
repz
xchg
cltd
push
lea
inc
pushf
stos
int
mov
push
cltd
cmp
in
inc
xchg
and
jle
mov
stc
cmc
addr16
sbb
and
adc
pop
sub
lret
sub
repz
into
mov
movsb
into
mov
pop
push
and
pop
mov
dec
ss
hlt
fwait
cmpsb
popa
cmp
fidivrs
sbb
jge
enter
mov
add
xchg
stc
mov
adc
xchg
js
gs
adc
cmpsl
js
hlt
xor
jg
xchg
mov
mov
in
and
icebp
adc
in
xor
movntq
outsb
ret
movq
jge
rcr
in
aaa
aaa
jno
outsb
sti
roll
push
out
jbe
aas
mov
mov
mov
les
jge
movsb
cmc
movsb
sbb
mov
jbe
lcall
mov
jp
jp
dec
out
mov
rorb
movsb
call
popa
test
pop
filds
gs
add
sbb
nop
jecxz
scas
mov
jno
addl
mov
rol
fdivs
fiaddl
mov
push
ljmp
lock
fs
and
mov
rclb
pop
dec
xchg
js
jecxz
outsl
mov
das
xchg
sub
cmp
sbbl
or
push
outsb
dec
mov
loop
sbb
xorb
fistpll
sbb
sub
testl
cs
fwait
jmp
cwtl
fcoms
mov
sbb
mov
sbb
adc
cmp
inc
insb
xor
ret
fldpi
std
pop
loop
or
mov
sub
push
arpl
and
sub
or
lcall
lret
dec
mov
repnz
into
fldpi
jo
mov
push
sbb
scas
xchg
test
repnz
inc
out
addr16
dec
ficoml
sbb
cwtl
and
add
pusha
cwtl
push
xor
sbb
fldenv
xor
pop
lods
or
sbb
negl
loop
inc
cs
aad
jb
ljmp
imul
out
fcmovb
xor
push
sbb
das
es
ljmp
addr16
add
out
iret
xor
rclb
jb
sub
push
cmc
xchg
add
xor
movsl
mov
mov
std
stos
xchg
mov
ljmp
dec
jle
jb
sbb
lret
hlt
insb
xor
push
add
xor
mov
je
dec
or
lock
dec
push
cli
jge
out
sbb
sub
mov
fimuls
adc
xchg
icebp
dec
cs
inc
shlb
push
fdivrl
stc
push
test
jecxz
aas
in
inc
xor
push
iret
movsl
pushl
aas
gs
mov
stos
and
adc
testl
fs
cmp
scas
es
rorl
mov
shll
sbb
leave
push
aaa
scas
or
inc
je
orl
or
mov
and
push
dec
cmp
fisubrs
mov
cmp
cli
xor
mov
stos
sbb
add
in
movsl
idivl
inc
stos
daa
into
push
xor
rcr
sti
push
xchg
push
aaa
sbb
jmp
outsb
ljmp
mov
imul
icebp
xor
cmp
inc
inc
std
mov
mov
lret
mov
mov
int
mov
pop
add
jbe
imul
mov
pop
push
sarl
cmp
add
in
xchg
leave
rorb
push
jae
mov
lds
outsl
xchg
push
movsl
outsb
in
cld
push
lods
std
scas
notb
inc
inc
adc
jno
lock
aaa
stos
sbb
ficomps
mov
and
sub
sbb
shlb
in
pop
mov
xor
inc
mov
jl
cvtps2pi
mov
xchg
cmc
fdivr
xor
ret
iret
push
mov
dec
mov
sub
fs
shll
data16
xchg
test
rolb
mull
mov
lahf
adc
mov
lret
push
in
jo
or
mov
popl
data16
mov
mull
or
out
into
stos
mov
pop
mov
lods
out
jge
ret
js
lret
imul
and
ror
xor
xchg
sub
mov
and
pop
fwait
mov
xor
les
rolb
fdivrs
xor
insb
fsubl
aaa
jg
fildl
leave
mov
in
cmpsb
jg
inc
cmp
add
jg
imul
jp
in
in
out
movsb
jo
mov
sti
lods
adc
adc
jmp
push
pop
xor
inc
inc
mov
xchg
mov
xor
xlat
shl
in
xchg
dec
cmp
ja
andl
test
jnp
jge
dec
add
push
or
push
push
ficoms
mov
loopne
lds
test
dec
insb
xchg
ret
enter
xchg
mov
mov
jne
aad
xchg
push
test
sbb
jno
gs
mov
and
adc
mov
in
cmpsl
in
inc
iret
push
das
es
les
inc
shll
loop
cltd
aam
pop
pop
insb
into
std
dec
dec
push
fmull
loopne
ss
aam
fwait
aam
pop
stos
out
jb
pop
cmp
cltd
orl
gs
adc
mov
lods
fstl
dec
std
aas
repz
xchg
push
jp
xor
movsb
mov
ja
lahf
cmp
xchg
dec
adcl
bound
fdiv
mov
mov
test
sbb
repnz
sti
call
cmp
int
add
pop
jnp
outsl
mov
test
push
int3
imul
outsb
cwtl
sbb
stos
cmp
bound
and
mov
dec
and
rorb
pusha
test
add
or
and
call
imulb
cmp
lods
push
insl
adc
dec
push
aad
and
aam
lds
loop
int
pop
test
je
push
fs
data16
in
jmp
into
pusha
adc
cmp
cs
ja
pop
aas
stos
cmc
sbb
mov
icebp
jb
add
mov
push
jmp
push
push
cmp
int3
imul
scas
mov
mov
jecxz
or
pop
adc
push
mov
repz
scas
inc
cmp
std
sbb
in
pushf
jo
mov
pop
in
loopne
cmpsb
jl
fimull
mov
pop
ljmp
sahf
dec
movsl
ret
mov
xchg
jecxz
stos
add
jecxz
inc
pop
adc
pop
push
dec
jl
and
sub
xchg
push
mov
out
jne
fadds
es
jbe
js
lcall
jbe
mov
pushf
inc
loopne
add
in
std
scas
jae
int
adc
push
ss
jb
xor
add
test
es
xchg
xchg
jge
addr16
mov
adc
cld
adc
fs
adc
push
pop
jg
les
imul
mov
cmpb
cmp
leave
push
mov
mov
add
lret
push
mov
add
lods
je
jae
insl
test
sub
pop
xchg
jbe
lock
xchg
jb
rcr
adc
push
and
sti
enter
xchg
pushaw
sub
or
or
in
or
pop
jmp
xchg
mov
push
lds
jmp
scas
mov
pop
orb
lcall
nop
mov
rcrl
sahf
cmp
inc
es
xor
mov
aaa
sub
cmpsb
loopne
xchg
dec
mov
dec
sbb
xor
imul
fdiv
pop
loope
sub
js
aas
inc
push
mov
push
mov
push
push
testb
and
or
fcomps
insl
test
js
scas
mov
push
xchg
xchg
or
cmpl
out
jnp
add
push
or
add
in
sub
arpl
fsts
enter
out
ret
xchg
sti
mov
adc
add
push
xchg
clc
outsl
mov
xchg
lea
je
xchg
popa
testl
lods
rcrl
adc
pop
scas
jo
sahf
sbb
mov
sub
and
arpl
rep
es
adc
sbb
out
movsb
jp
mov
sbb
cmp
jecxz
insl
aad
fnstenv
int3
in
pushf
popa
int
inc
adc
es
out
int
or
jge
cmpsb
inc
pop
fistps
inc
arpl
outsb
cmpsl
cmc
inc
call
fstp
int3
mov
cmp
fsubrs
out
lcall
mov
shll
jge
mov
clc
cmpsl
ret
fucomip
add
repz
push
add
lret
and
pop
push
in
pop
jae
cmp
lea
in
dec
in
cli
jbe
mov
xchg
mov
test
fistps
and
jnp
scas
leave
andl
bound
cmpsb
cmp
push
shlb
rcr
pop
xchg
mov
or
fnstsw
in
mov
dec
inc
loop
sbb
cmpsb
fcmovu
addr16
sub
adc
pop
popf
data16
dec
std
jmp
sbbl
jmp
das
xor
pop
jno
xor
push
or
push
out
and
lahf
jg
xor
add
push
outsb
push
jne
sbb
mov
cmp
jne
dec
int
repnz
stos
jg
adc
mov
add
clc
dec
or
mov
enter
pop
xchg
sub
idiv
fnstcw
mov
sub
lea
and
dec
idivb
inc
int
jne
sub
insl
dec
sbb
xchg
jmp
aas
std
push
jne
xor
cmpsb
addr16
das
push
stos
dec
negb
call
fs
pop
add
add
roll
jnp
call
jmp
push
in
rcl
pop
add
dec
dec
shlb
pop
push
pop
lret
shlb
dec
mov
repz
mov
mov
push
xor
int3
dec
aaa
mov
mov
mov
insb
cli
dec
mov
dec
sub
dec
add
jg
aas
aas
cmc
lds
out
pop
adc
mov
cli
js
jecxz
mov
rclb
mov
dec
push
imul
push
pop
mov
xchg
lods
mov
enter
js
ss
repz
aam
and
test
paddb
dec
loopne
orb
jp
cltd
sbb
push
scas
sti
in
adc
mov
jecxz
sbb
sahf
mov
mov
push
fimull
pop
sbb
das
out
sub
frndint
dec
jl
xchg
xor
or
mov
mov
push
repz
ret
incb
jl
clc
ffreep
fs
push
popa
add
sbb
sub
testb
in
and
mov
sub
cmp
iret
cmpxchg
xchg
xor
ss
pop
mov
daa
fs
add
addr16
mov
lock
loopne
jp
inc
or
cmc
pop
call
mull
jne
dec
lds
das
mov
test
add
mov
out
inc
fisubl
push
xor
out
xchg
adc
loopne
xchg
clc
ss
push
loope
adcb
pop
popa
sub
xchg
xchg
mov
icebp
lods
adc
inc
orb
imul
add
jns
mov
add
jnp
and
mov
dec
nop
jp
or
add
dec
pop
iret
inc
mov
cmpsb
mov
push
outsb
shll
xchg
movsl
pop
movsb
test
fcoms
sub
mov
scas
nop
sub
add
int3
and
cld
jns
inc
mov
outsl
push
imul
mov
lods
lret
bound
pop
jne
inc
xchg
pushl
out
popa
std
sbb
aad
inc
scas
jae
dec
mov
push
push
arpl
mov
or
and
mov
inc
scas
jb
jbe
mov
pop
insl
imul
mulb
lcall
fxtract
sarb
shrl
cli
push
and
pusha
pusha
push
pop
xchg
fcomps
jle
dec
xchg
jb
and
inc
jne
dec
std
js
adc
sub
sub
jle
test
sub
subl
adc
xchg
mov
data16
mov
pop
stc
rclb
nop
lods
sbbl
add
pop
outsl
and
xchg
int3
lods
cmpsl
pop
data16
ret
idivl
lock
sbb
out
xchg
or
pop
xchg
ret
push
xchg
jns
mov
inc
lods
outsl
lcall
leave
fadd
fldl
cld
pop
pop
cmpsl
or
xchg
add
add
mov
ss
and
sbb
push
gs
jmp
loop
mov
fstpl
int
cld
cwtl
or
dec
mov
data16
in
dec
and
ret
enter
xchg
enter
enter
and
push
and
push
xchg
arpl
or
out
ds
pushf
cmp
jp
stos
sub
std
push
scas
std
pop
mov
push
jl
fisubrl
imul
xchg
test
inc
out
call
mov
mov
mov
add
inc
cmp
push
push
scas
bnd
lods
shll
sarb
stos
push
pushf
sbb
ret
repnz
in
inc
leave
push
int
imul
xchg
xchg
push
je
add
cmp
dec
aad
dec
xor
lds
and
jg
jecxz
cmpsl
or
gs
adc
out
dec
xor
iret
and
jnp
push
push
xchg
dec
and
test
adc
fnstsw
push
ljmp
mov
mov
push
inc
mov
mov
jg
lods
xchg
and
add
icebp
adc
ficoms
sbb
fwait
mov
xchg
es
lods
jg
jae
mov
ret
cld
out
lods
mov
cmp
subl
xchg
cwtl
cld
sti
inc
fucomip
sub
mov
cmpsl
push
out
xchg
sbb
ljmp
dec
push
pusha
cmp
decb
and
shlb
jnp
xorb
and
insl
sahf
sub
jmp
sbb
xlat
lods
enter
xchg
mov
adc
cmc
sti
lret
xchg
test
imul
sti
mov
gs
pop
cmp
add
dec
mov
mov
lahf
bound
das
sahf
in
hlt
aaa
sub
mov
movsl
hlt
imul
jmp
outsl
dec
nop
sbb
int3
and
iret
cmp
sub
cmp
and
add
lea
adc
mov
adc
push
popf
das
mov
xor
mov
sbb
in
sbb
and
fistpl
fs
dec
daa
stos
xlat
jmp
outsb
add
add
lods
mov
out
mov
imul
or
push
mov
fsubl
push
loope
adcl
pop
push
mov
sarl
xor
loopne
ret
andb
pop
dec
mov
loop
lds
int3
mov
scas
cmc
test
sahf
mov
insb
sub
fisttpl
add
paddd
xor
sbb
rcrb
lret
ja
dec
cmc
push
sti
cmp
jo
loop
faddl
mov
std
push
add
imul
xor
addr16
inc
lds
movsl
mov
out
and
xchg
lret
mov
frstor
jp
mov
test
idivl
outsl
jl
cmp
mov
repnz
fsubl
mov
lock
mov
in
jne
loope
jle
mov
sbb
je
into
or
shlb
in
shr
cmpsb
inc
repnz
getsec
dec
mov
inc
popf
in
xchg
push
js
sbb
andl
call
fwait
push
std
lods
shll
pop
jl
and
mov
and
push
jg
mov
jmp
lods
sbb
jl
flds
dec
imul
orl
cltd
aas
push
fwait
mov
cli
sbb
test
dec
mov
push
stos
dec
int
and
mov
daa
lods
mov
jae
dec
sarb
push
cwtl
fcoms
adc
mov
pop
lods
loopne
test
push
je
adc
in
psubsw
jns
das
arpl
std
decb
mov
mov
sub
mov
push
xor
xorl
or
outsb
out
sub
xor
and
leave
mov
arpl
shrl
outsl
int3
hlt
sub
push
shrb
mov
xor
sbb
lods
into
mov
dec
mov
push
inc
xor
cmp
fwait
xchg
push
fmulp
stc
lret
xchg
idivb
pop
and
mov
sbb
cmp
gs
adc
pop
ror
lret
pushf
arpl
pop
inc
mov
sub
cltd
mov
sbb
pop
in
pop
xor
jne
xor
mov
cld
shll
and
in
imul
insl
pushf
test
cld
out
je
xor
js
xrelease
jns
outsb
in
out
xchg
pop
cmp
dec
jo
sahf
and
popa
arpl
adc
and
jo
out
in
add
and
rorl
test
dec
rcrb
push
stos
inc
cmp
fdivl
adc
cmc
cld
shlb
jmp
push
pop
mov
mov
test
jge
sbb
in
ret
stc
xchg
sub
adc
rcr
cmp
popf
inc
jnp
sub
mov
jge
es
cmp
in
jle
mulb
pop
pop
in
dec
push
jae
xchg
les
in
push
jno
pushl
addr16
pop
mov
mov
imul
push
scas
in
rolb
scas
repz
xchg
add
or
sub
jb
pop
call
lret
and
or
iret
xchg
dec
lahf
outsl
xchg
cli
xchg
cmp
fistpll
add
sarl
or
mov
sbb
push
push
out
mov
jecxz
mov
mov
sub
fldl
sub
jns
xor
ror
movsb
ret
cmp
aaa
loop
pop
adc
mov
and
mov
jae
scas
and
cmp
es
idiv
pop
dec
lahf
jnp
imul
aam
mov
jp
pop
jmp
sbb
sub
test
mov
xor
outsl
lods
or
out
jb
call
movsl
jbe
jns
add
cmp
inc
lahf
mov
jae
int
and
lods
aaa
dec
orb
test
dec
push
leave
test
stc
jno
xchg
ret
imul
call
mov
adc
sbb
and
cld
pop
mov
dec
push
test
fists
test
mov
mov
mov
push
addr16
xchg
test
decl
loop
mov
fcoml
sub
bound
test
inc
movsb
sbb
popa
push
mov
mov
sbb
pop
ret
jp
in
sub
loope
xchg
mov
outsl
cmp
push
mov
fists
scas
repnz
repz
shll
sbb
leave
sbb
aaa
lsl
add
rorl
movsb
insl
pop
sub
push
push
mov
popl
cmp
or
jl
xorl
sub
push
push
cmp
xlat
and
sub
shll
mov
nop
divb
daa
xor
popf
xor
add
test
and
clc
lret
push
xchg
out
movsl
adc
mov
ret
mov
inc
xchg
sub
pop
in
orl
and
add
inc
test
lds
mov
lahf
lea
xchg
dec
mov
ds
fsubl
pop
inc
dec
jl
into
push
scas
xchg
pop
mov
insl
mov
test
sbb
aas
pop
int
jmp
out
es
mov
or
mov
insl
inc
mov
sbb
push
outsb
out
jae
dec
bound
or
shl
loop
pop
push
sub
pushf
push
dec
fcmovu
iret
fs
cli
adc
mov
pop
out
lock
popa
orb
mov
fscale
add
push
mov
and
jle
xor
dec
inc
aad
shr
mov
xchg
jo
cld
in
pop
jge
cmp
out
aas
xchg
and
inc
adc
xlat
shll
jmp
shlb
dec
std
pop
xchg
in
or
shrl
sbb
adc
out
faddl
push
adc
daa
sub
or
jmp
ret
cmp
lock
dec
push
mov
rcll
addr16
add
sub
outsb
xchg
ljmp
and
mov
sarb
nop
aad
push
xor
icebp
push
xor
mov
mull
iret
roll
inc
xor
sub
sahf
xchg
arpl
push
clc
testl
mov
xchg
cltd
ljmp
and
cmp
jns
mov
scas
dec
xchg
adcb
sbb
push
aam
out
scas
xlat
fdivrl
fwait
cmp
fidivrs
push
ss
push
adc
jbe
cmpsl
fnstenv
xchg
imul
lahf
ss
pavgb
jae
pop
cwtl
and
les
jecxz
push
jge
mov
scas
mov
loop
fbld
aas
cmp
xor
mov
xor
sub
data16
pop
roll
outsl
imul
cld
jmp
enter
and
movsl
cmp
sub
dec
xchg
cmc
out
sbb
mov
mov
jns
and
or
inc
in
mov
out
and
pop
clc
sub
or
pop
xchg
data16
fistpl
jns
or
sti
jg
push
sub
aam
pop
es
mov
add
popa
stos
push
sbb
push
out
sbb
sbb
cmp
cmp
xchg
repnz
sub
sbb
aad
mov
add
mov
adc
jbe
inc
push
xchg
mov
pusha
ss
pop
xor
insl
out
loopne
sti
push
leave
mov
or
sub
adc
pop
aas
in
add
ss
ds
or
xor
adcl
adc
in
fcos
test
cmp
fsave
dec
jmp
cld
push
jo
sub
fcomps
pop
into
cmc
ret
ror
and
xchg
dec
and
sbb
cmp
push
mov
dec
xor
mov
xor
push
adc
xor
outsb
fucom
mov
jnp
cltd
mov
mov
cmpsb
ljmp
fldenv
das
push
incl
aad
dec
mov
outsl
push
dec
test
addr16
scas
daa
xchg
mov
mov
or
jp
inc
sbb
in
push
jle
aam
xchg
jbe
lcall
repz
pop
dec
fwait
sub
repnz
adc
sub
or
xor
inc
mov
cwtl
mov
add
test
push
cli
rol
dec
cmpsl
jo
xor
int3
mov
dec
sahf
mov
inc
lret
cmp
movsb
xchg
lods
push
jnp
arpl
jge
add
stc
fs
inc
mov
xchg
push
leave
leave
outsl
rep
sbb
push
loopne
xor
lea
mov
cli
adc
ss
iret
push
movsb
ret
cmc
movsb
mov
xor
xchg
jnp
ljmp
xchg
sub
mov
jnp
dec
imul
es
in
sbb
test
clc
push
mov
adc
mov
das
test
in
jl
jne
aad
jns
fwait
sub
sbb
jle
daa
shl
es
push
xor
jmp
repz
fsubrl
outsb
or
cmc
push
mov
mov
inc
int
testb
lahf
aam
sbb
jb
jmp
xchg
mov
jl
sbb
jecxz
push
and
jge
popl
repnz
inc
pop
ja
adc
mov
rclb
fs
xchg
dec
pop
addl
dec
add
int
mov
cmpsl
sub
jmp
pop
outsl
inc
push
pop
fsubp
arpl
sbb
sub
pop
adc
cmpb
cwtl
insb
xor
sbb
pop
xor
pop
add
sbb
cmpsl
or
mov
mov
adc
dec
sar
jmp
arpl
bound
cwtl
add
jle
cmp
shrb
jae
std
out
insl
jle
ss
sbb
mov
or
daa
or
lds
jg
out
ja
bound
and
jg
push
dec
fstl
or
or
jle
outsb
push
test
into
jno
outsl
stos
fsubrp
ret
adcl
cmpsl
sub
mov
out
push
cs
in
sub
iret
lods
fs
mov
lret
vmwrite
fdivl
xchg
mov
scas
add
rorl
xor
xor
out
cmp
ret
or
in
sbb
cmp
xchg
jo
xchg
xor
gs
jae
mov
mov
movsb
sub
mov
mov
fsubs
fisubrl
xchg
mov
add
fdivrs
lahf
cmpsb
lock
iret
xchg
int
jns
sarl
faddl
cs
icebp
and
scas
push
cltd
test
or
sub
jmp
andb
xor
xchg
movsl
les
ss
aaa
mov
adc
jge
insl
hlt
adc
subl
mov
stos
xor
inc
dec
sub
out
sarb
xchg
jle
aam
das
das
sub
sti
pusha
test
jns
push
fstps
adc
pop
dec
fldcw
pop
xchg
shll
mov
test
mov
ss
or
add
call
orl
mov
sbb
mov
mov
mov
sub
mov
pop
mov
and
lods
movsl
mov
lcall
jmp
rcll
scas
xor
mov
dec
jnp
jo
pop
ljmp
hlt
mov
xchg
daa
scas
mov
xor
inc
or
pop
adc
iret
test
out
and
lods
cli
mov
fucomi
add
lds
ja
int3
cmp
fs
call
or
test
cmpsl
push
push
mov
jge
mov
mov
xor
jecxz
ja
jae
sub
mov
flds
ja
lods
aas
divl
xchg
pop
fwait
mov
add
mov
jnp
or
dec
test
stos
jnp
jb
mov
jnp
inc
and
ds
int3
push
push
cld
cmp
out
dec
xchg
xchg
add
xchg
loop
inc
xchg
sub
jl
pop
mov
ja
sbb
push
addr16
pminub
dec
dec
sub
mov
imul
jl
mov
cld
xor
fldcw
xor
push
pop
adc
inc
sub
fstps
aam
std
imul
inc
push
stc
cltd
loope
and
and
test
mov
les
pop
dec
int
adc
inc
insl
mov
xor
jg
imul
stos
jne
push
into
outsb
fsts
outsb
dec
adc
mov
inc
inc
enter
push
adc
jne
iret
inc
mov
dec
sbb
jnp
sub
decb
movsl
int
mov
js
pop
inc
cmp
ret
pop
mov
sbb
mov
pop
enter
jle
repnz
fisubs
inc
lea
nop
sti
cli
mov
adc
mov
iret
leave
lods
fsub
xchg
mov
xor
and
je
add
mov
push
gs
push
lret
sti
call
xchg
iret
sub
pop
sbb
scas
aaa
xchg
push
lahf
pop
inc
repnz
push
push
addr16
xchg
dec
loopne
push
call
push
adc
in
xchg
test
or
push
ret
fs
in
nop
loope
mov
dec
and
das
add
flds
adc
xor
mov
xchg
jmp
mov
clts
push
jb
push
stc
and
mov
mov
push
push
mov
das
xchg
adc
dec
pop
push
out
dec
mov
fidivl
cmpsl
pop
fsubrs
xor
fs
mov
imulb
fimuls
pop
xchg
aaa
pop
test
sbb
in
cltd
adc
inc
mov
mov
xor
daa
or
push
xor
mov
stos
cli
mov
out
add
sbb
and
scas
pop
mov
jmp
xor
pop
cmc
cltd
jmp
adc
xorb
imul
sbb
cmc
sbb
je
mov
add
push
pop
inc
fstpt
test
adc
adc
add
push
cmpsl
mov
out
jg
bound
pop
jns
mov
sub
into
out
and
std
pop
mov
sub
cmp
push
aad
or
jae
fimull
data16
xor
cmp
ds
pop
shrl
in
cmp
aaa
jl
pop
push
inc
scas
call
xchg
pusha
sbb
inc
sbb
pushf
lods
sub
or
outsl
scas
andb
push
xchg
icebp
sahf
or
clc
lods
push
push
push
sub
int3
xchg
lods
loopne
pop
aam
xchg
sti
pushf
cmp
arpl
adc
stc
xor
push
mov
xchg
mov
xchg
mov
loope
xchg
sti
jmp
inc
mov
clc
lcall
hlt
shrl
dec
cmp
sbb
sub
inc
pusha
loope
xor
in
mov
cmp
mov
test
inc
add
sub
jns
xor
cli
jns
mov
testb
sbbb
push
pop
xor
pop
shrb
test
or
mov
sbb
or
insl
sahf
xor
cmpsb
pop
adc
add
xor
and
mul
movsb
idivb
ds
sbb
xchg
mov
jae
cmp
pop
das
nop
pop
ss
mov
push
out
dec
lock
lock
in
shr
mov
or
into
std
pusha
fs
inc
mov
pop
xchg
cld
and
mov
fs
inc
sbb
call
shlb
mov
mov
inc
mov
adc
xchg
push
mov
mov
and
sahf
dec
mov
jne
pushl
cmc
xchg
push
adc
xchg
jae
cmpsl
pop
inc
iret
movsl
test
inc
jmp
pop
xchg
mov
inc
add
xchg
popa
push
push
imul
cmp
sub
sahf
daa
sti
movl
xchg
das
xor
ljmp
cmp
sti
mov
mov
inc
ret
roll
call
popf
call
pop
mov
sti
js
mov
dec
mov
sahf
jp
test
andb
mov
jl
test
scas
cmp
ret
test
xchg
jns
adc
mov
jmp
rcrb
xor
xor
jne
call
push
je
jp
scas
mov
push
mov
gs
mov
mov
sub
sahf
divl
aam
jp
pshufw
pop
jns
into
cmp
rcll
repz
push
in
mov
xchg
mov
mov
jae
sbb
adc
xor
rcrl
xchg
cmp
mov
jp
push
push
outsb
sub
pop
stos
sti
pop
hlt
daa
lret
inc
dec
out
add
sbb
xchg
bound
pop
fists
ret
fcoms
fwait
dec
mov
xchg
jg
push
jne
adc
push
mov
adc
testl
mov
iret
hlt
sbb
and
cwtl
mov
out
xchg
jnp
cmpsl
decl
shrb
push
and
dec
dec
ret
or
mov
out
and
jmp
idivl
fldenv
push
push
cmpsl
push
scas
je
loop
int3
rclb
clc
lods
xor
out
dec
jae
jne
in
popl
test
repz
add
mov
adc
sbb
mov
xchg
dec
mov
lcall
pop
fbld
push
xorl
xor
fdivl
stos
out
lahf
lret
imull
push
mov
sub
dec
push
xor
and
cmp
jne
mov
lret
repz
fistps
loope
mov
and
add
aad
sub
cmc
aas
adc
ret
cmp
mov
cld
ljmp
push
mov
xor
test
push
mov
stos
imul
pop
sub
and
add
dec
cmpsl
adc
pop
push
das
fsubrp
into
popf
push
rcrl
xchg
test
jns
cwtl
cmp
in
scas
test
data16
aaa
sahf
pop
outsl
mov
into
stos
mov
cmp
push
push
xor
jne
vmovaps
pop
stc
mov
push
std
mov
daa
sti
movsb
jbe
cli
outsb
gs
int3
sbbb
rorl
dec
jmp
push
das
xor
jb
and
cli
mov
jp
out
mov
cmpsb
jl
inc
test
cmp
aam
out
stc
xchg
add
scas
mov
xchg
lock
mov
xor
fcmovnu
adc
mov
out
xor
jmp
xchg
inc
jge
adc
setg
jo
or
shlb
sub
xor
stos
stos
cmp
sbb
xchg
cmp
pop
mov
fidivrs
xchg
lret
outsl
stc
into
sub
sti
and
or
mov
ja
shl
out
in
dec
mov
xchg
outsb
ds
push
inc
sahf
mov
lret
std
mov
push
cmp
cli
aad
or
push
ret
das
addr16
sub
aad
mov
jecxz
lds
repz
lods
mov
jge
lods
ss
shlb
push
jg
xchg
mov
hlt
fildl
adc
add
imull
add
repz
fisubl
mov
lock
into
testb
cmpsl
aas
insl
jl
in
test
aas
inc
mov
test
outsb
cmp
xchg
decb
in
lods
aam
movsb
negb
mov
aam
jmp
rclb
jns
bnd
call
cs
scas
pop
inc
xchg
in
sub
jae
dec
mov
mov
push
pop
stos
jge
cmc
ret
into
shll
lods
xorb
test
and
lea
aaa
pop
idiv
js
rol
jnp
dec
inc
mov
jge
add
fnstsw
mov
cmp
mov
arpl
pusha
loope
outsl
sub
fsubs
pop
mov
test
cli
mov
jns
cmp
push
mov
mov
loopne
pusha
flds
hlt
bound
pop
push
test
xchg
or
adc
mov
cmp
sbb
mov
lods
mov
in
repz
push
inc
inc
hlt
rol
gs
and
cmp
jbe
pop
dec
cmp
movsl
lds
lock
pop
aaa
adc
sarl
cwtl
dec
dec
fs
sahf
stos
aas
ficompl
fldt
scas
mov
out
adc
push
adc
mov
push
add
xor
adc
push
sbb
xor
push
pop
pop
js
adc
push
sub
fstl
or
sti
push
jecxz
adc
adc
popf
jb
repz
ficompl
ss
cmpb
and
fdiv
mov
loopne
fdivr
in
mov
popa
mov
mov
mov
repnz
push
sub
or
mov
sahf
push
aas
outsb
xor
mov
jnp
push
or
mov
and
sub
psllq
test
cmpsb
cmp
pushf
scas
out
push
ljmp
cmp
scas
aaa
das
xchg
leave
movl
dec
jge
les
shlb
jb
leave
push
sti
clc
mov
xor
cltd
push
out
dec
jmp
sbbb
cli
test
push
or
pop
popf
pop
push
stos
sub
in
jg
insl
aas
mov
fnsave
out
cltd
test
pop
and
push
mov
and
in
subl
mov
stos
mov
sub
cmp
or
push
mov
jp
sub
arpl
lock
nop
daa
dec
clc
repnz
roll
dec
jg
into
dec
std
roll
and
cld
in
cmp
mov
mov
xor
es
inc
jg
jle
cmpsl
sub
pop
leave
dec
add
fdivrs
scas
jle
xchg
imul
push
insl
ret
rorl
ret
sbb
into
jb
inc
aas
mov
ror
mov
cmp
and
or
mov
jno
sub
ja
out
lret
add
loope
stos
sbb
xchg
fldcw
inc
popf
pop
loop
mov
sub
pushf
or
lock
inc
fiaddl
jl
jl
mov
out
add
sub
bound
ficompl
iret
pop
adc
mov
pop
push
cmp
outsl
aaa
inc
cs
xor
jnp
push
test
or
inc
mov
pop
add
jae
shr
push
arpl
stc
mov
fdivrs
pop
jmp
pop
push
jno
add
adc
dec
lahf
xor
hlt
mov
inc
les
test
std
and
or
aam
ret
sbb
pop
mov
mov
fs
pop
out
psrad
jl
cmp
adc
repz
cmp
mov
jnp
fstl
xlat
push
xor
xor
rcl
push
pop
cld
push
enter
bound
out
andl
mov
mov
jne
mov
cli
inc
out
mov
xchg
sub
pop
sbb
cld
sbb
xchg
daa
sub
adc
xor
xchg
add
enter
xor
xchg
or
push
in
and
addr16
push
push
imul
repnz
jl
lret
shlb
sub
out
rcrl
mov
or
sbb
lea
not
addr16
inc
mov
mov
lea
cmpsl
jmp
negb
jbe
and
ljmp
cmp
stos
cmp
cmp
mov
cmp
pop
pop
std
mov
dec
xor
and
scas
aaa
mov
sub
jb
xchg
or
dec
ss
adc
std
pop
sub
movsb
lret
or
jnp
fbstp
out
sbb
xchg
push
jp
outsb
imul
xchg
sub
mov
in
loopne
push
repz
iret
jp
pop
call
pop
lock
push
add
cld
sub
push
add
loop
mov
jo
xchg
mov
arpl
stos
fsubr
jecxz
mov
push
or
notl
movsl
mov
mov
lods
loopne
cmpsl
insb
adc
mov
incb
aam
imul
xor
stos
pop
xorl
xchg
push
jle
repz
or
shl
mov
clc
push
mov
xor
imul
out
jno
mov
cmpsb
and
scas
adc
fstpt
js
jne
and
popa
les
add
jbe
dec
pop
int3
jae
sti
int
xor
sub
sub
jmp
dec
or
sbb
lods
shll
add
and
inc
test
xchg
or
in
lahf
mov
jge
jns
sbb
mov
inc
bnd
out
lret
mov
xor
push
iret
lock
pop
in
in
call
add
stc
aaa
pop
push
daa
pop
fadd
jo
insl
inc
jbe
push
or
fmull
sbb
fstl
mov
movsb
adc
inc
dec
gs
adc
jp
daa
jo
addr16
push
jno
cmp
adc
and
in
lods
jecxz
lahf
lods
dec
xchg
insb
adc
aaa
jle
adc
out
xchg
dec
sub
iret
or
ret
xchg
test
xor
dec
dec
aaa
adc
inc
shrb
jmp
nop
pop
fsubs
push
mov
in
movsb
outsl
add
xor
cmp
les
mov
shrl
fisttpl
mov
jb
leave
in
pop
int3
test
aam
repnz
data16
daa
dec
pop
xchg
pop
sub
xorl
push
inc
mov
jno
cmp
and
aam
fistpl
insb
mov
inc
ret
cmp
pop
mov
in
dec
out
mov
jge
scas
cwtl
repz
repz
aam
mov
and
sbb
stos
cli
scas
je
jne
sbb
daa
pop
out
inc
incb
stos
int3
int
mov
js
fildll
inc
fisttps
icebp
jge
repnz
push
daa
or
xor
sbb
inc
cmc
mov
call
cs
mov
add
or
es
inc
mov
cltd
out
pop
enter
pop
push
test
dec
pop
lret
xchg
jg
pop
mov
mov
hlt
sub
js
push
xlat
stc
cmpsb
ss
leave
imul
rcr
add
inc
clc
iret
pop
test
ljmp
xchg
xorl
push
clc
fldl
jne
mov
and
inc
orb
jp
sbb
jmp
add
iret
xchg
imul
mov
xchg
jno
fwait
aad
pusha
push
lock
sbb
shl
inc
mov
adc
insb
sbb
or
xor
stc
or
clc
mov
ljmp
ret
cli
outsb
mov
fwait
mull
pusha
pop
lea
pop
xor
cld
mov
cmp
push
pop
or
leave
jns
and
sbb
test
cmpsl
dec
adc
stos
cmp
push
cmp
push
mov
sti
lahf
and
xor
jecxz
lock
push
xchg
sbb
adc
push
push
xor
xchg
stos
push
jge
mov
int
add
pop
sbb
int3
enter
dec
or
cmp
scas
push
imul
faddl
rorl
cli
ret
out
or
notl
mov
mov
jl
jp
les
xchg
mov
sub
cltd
xchg
es
mov
xorb
fsubr
and
aaa
mov
shlb
mov
adc
sti
mov
sub
js
daa
rcrl
xchg
int
insl
xchg
popf
mov
imul
cs
int
scas
test
aad
mov
in
ficoml
aas
mov
dec
sti
test
push
add
mov
xchg
xchg
cmp
gs
jbe
addr16
mov
fldt
cmc
and
add
cmp
out
into
pop
pop
js
call
aad
adc
insl
ficompl
pop
dec
push
mov
push
filds
sub
bound
dec
cmpsb
cs
dec
ret
loope
mov
insl
inc
in
enter
ljmp
push
imul
into
cmp
cli
shl
adc
shrl
cli
in
add
add
jno
push
loope
imul
jge
jns
imul
bound
iret
pop
or
or
flds
jne
shlb
mov
mov
dec
jl
std
or
jge
add
push
adc
andb
jg
sbb
adc
or
jmp
dec
lods
sub
xor
lods
fbstp
mov
call
sub
mov
dec
addr16
mov
jnp
std
cltd
cmp
daa
ret
lret
movsb
xor
adc
adc
dec
pop
shrl
lcall
mov
into
insb
js
loopne
pusha
sbb
sbb
sarl
pop
jmp
in
and
pop
pop
hlt
push
jo
xchg
cli
mov
daa
cltd
aas
out
sub
xor
inc
imul
adc
call
out
rcrl
xor
lret
jo
pop
in
mov
pop
xor
adc
adc
test
cmp
push
out
push
add
mov
jb
lods
cmp
in
mov
adc
jae
pop
inc
imul
fidivs
mov
inc
fisubrs
mov
fistpl
movsl
sbb
loop
xor
out
mov
mov
inc
call
jns
clc
jecxz
adc
jg
or
stc
stos
fdivs
sbb
and
mov
call
cmp
mov
or
jecxz
sbb
bound
inc
mov
nop
inc
incl
rcll
sub
or
mov
lahf
inc
sbb
cmp
imul
sahf
jnp
std
mov
aam
xchg
xchg
adcl
sub
das
vmaxsd
mov
int
ss
les
insb
mov
je
jp
rcrl
dec
scas
and
loop
dec
sti
xor
inc
insb
xor
push
mov
pop
jp
nopl
mov
and
rclb
ret
jge
insb
cltd
test
pop
mov
and
repnz
nop
jecxz
in
in
mov
test
mov
lods
xor
dec
fwait
shll
cwtl
mov
or
ret
mov
mov
cmp
dec
xchg
pop
xor
paddw
and
fmuls
or
adc
dec
pop
inc
mov
jne
pop
std
stc
lcall
movsb
movsb
dec
loop
xchg
jae
pop
mov
add
push
jge
mov
xor
pop
es
or
mov
cmp
mov
jnp
sub
enter
loop
push
in
adc
aas
notb
and
add
jge
adc
test
insb
imul
out
inc
scas
jmp
sub
mov
push
or
jbe
xor
fisttpll
scas
sbb
icebp
pop
imulb
xchg
out
dec
cwtl
mov
pop
imul
insl
cmp
xor
rorb
inc
cmp
stos
dec
and
adc
dec
ja
fimull
je
pusha
pop
inc
xchg
jl
push
pop
xor
mov
movsl
mov
movsb
adc
testb
les
xchg
jge
jbe
mov
jge
jle
scas
insb
pop
adc
pop
inc
popf
adc
push
stos
jne
popa
xchg
fwait
mov
data16
push
das
std
arpl
sbb
xor
mov
aaa
fistpl
dec
mov
sub
pop
and
leave
ss
inc
aad
sbb
loopne
adc
sub
lock
jo
out
dec
mov
pop
lds
shl
mov
int3
xor
cld
arpl
js
jb
outsl
fwait
addl
pop
sbb
pop
adc
inc
stc
jle
sub
pop
lret
shld
push
jne
lret
mov
aas
jp
pop
mov
xchg
movsb
aaa
lds
test
xor
jp
add
dec
cmpsb
sub
sub
ds
sbb
sbb
lahf
lods
push
in
das
mov
push
loope
popf
sbb
rolb
push
call
pusha
adc
lahf
outsb
lret
or
fdiv
dec
out
popf
aas
xchg
jb,pn
xchg
popa
test
outsl
insb
mov
and
add
fst
cmp
js
je
jecxz
daa
xor
clc
sub
or
pop
pop
stc
or
leave
pushf
adc
xchg
mov
pop
in
imul
fisubrl
cmp
jns
and
cmc
addb
sbb
paddd
push
add
test
jb
adc
stos
jle
push
imul
and
outsb
pop
in
dec
enter
cs
add
notb
movsb
inc
mov
mov
inc
sub
fistpl
stos
sbb
add
push
xor
push
mov
jnp
mov
pusha
sbb
loope
stos
pop
add
mov
inc
daa
imul
dec
imul
and
in
inc
and
iret
add
adc
pusha
cmpsl
cmp
aam
sub
mov
aam
push
xchg
xor
mov
mov
mov
xor
jecxz
xor
dec
jne
scas
push
xor
cs
mov
int3
push
push
fnsave
into
sbb
inc
jbe
pop
dec
mov
test
popa
loope
lock
in
mov
loopne
mov
xchg
or
cmp
inc
enter
hlt
push
stos
pop
sbb
orb
ror
cli
push
cmp
or
shl
inc
jb
test
or
cmp
insl
mov
jo
jecxz
insl
xchg
movsl
mov
pushf
je
lea
hlt
push
push
add
inc
dec
cs
dec
sahf
dec
push
sbb
sti
sub
repnz
xor
mov
xor
sub
scas
mov
pop
cmp
add
je
add
icebp
pop
mov
pushf
andb
movsb
xor
inc
test
cs
dec
fdivs
sbb
aad
mov
in
mov
les
sub
push
sub
int3
mov
adc
xchg
fs
xchg
xor
xor
movsb
inc
adc
inc
loop
mov
pop
in
push
cmc
mov
pop
aad
mov
inc
jno
loope
jp
in
pop
cs
sbb
xor
pop
mov
jne
bound
test
pop
inc
pop
xchg
loopne
jo
pop
cltd
mov
mov
lahf
inc
mov
fistl
sti
outsl
dec
or
inc
bound
aas
jbe
jg
push
push
lret
cmp
insl
imul
mov
cmp
jmp
pusha
ja
into
pop
adcb
mov
sbb
jp
jbe
rcll
fmuls
arpl
das
frstor
ret
add
or
add
aaa
imul
and
lcall
mov
add
in
add
fdivr
cltd
out
jecxz
mov
sub
dec
sub
out
pushfw
mov
fwait
inc
into
pop
shl
out
aam
das
aad
cmp
test
xchg
movsl
gs
mov
sub
mov
and
pop
xor
push
je
or
ret
inc
cmp
fwait
or
fadd
cmpsb
push
push
int3
scas
pop
xor
call
pop
pusha
inc
aas
lret
pop
cwtl
test
aam
idivb
fbld
rcrl
lods
packuswb
mov
inc
push
and
mov
daa
pop
ja
movsb
hlt
fcmovnb
xchg
mov
stos
and
repnz
in
insb
out
mov
mov
or
jle
jb
out
cs
dec
mov
hlt
xchg
cmp
rorb
push
in
cmc
add
mov
dec
pop
inc
push
cwtl
xchg
and
outsb
cld
dec
notl
push
xor
insb
xor
dec
xor
xchg
adc
out
mov
pop
adc
cmc
repnz
shlb
push
daa
jb
loop
or
mov
lods
cmc
cmp
cmp
mov
jnp
jmp
outsl
adcw
mov
das
hlt
lret
lahf
push
in
jnp
push
into
push
std
or
jmp
clc
mov
push
je
sub
dec
and
into
ret
cli
xchg
pop
lods
addr16
lret
sarb
and
lock
add
xor
mov
js
fwait
mov
test
and
mov
fdivrs
out
pop
aam
fs
and
add
pop
int
mov
mov
mov
inc
and
adc
fwait
cmpl
nop
inc
imul
and
xchg
adc
fcmovb
stos
mov
sbb
aas
je
cld
jnp
call
fcompl
dec
fists
mov
rcl
out
inc
inc
ret
loope
sub
gs
xor
adc
jno
cmp
lock
mov
stc
lock
dec
mov
cmp
std
sbb
fcompl
idivl
cmpsl
jmp
fidivs
push
lods
xchg
es
push
negl
xchg
mov
and
je
pop
jae
inc
cmc
inc
cli
lret
pop
jecxz
push
xchg
push
test
sbb
in
adc
jle
out
mov
xchg
cs
xchg
icebp
jge
cmp
stos
adc
cs
imul
enter
fstps
pop
inc
repz
sahf
mov
insl
pop
enter
loope
pop
dec
mov
lds
dec
test
mov
pop
xlat
or
mov
or
xchg
stos
rorl
scas
js
or
mov
scas
and
jo
subb
dec
pushf
mov
daa
pop
cmpsb
imul
or
imul
pop
lret
pop
lock
jne
cmpsl
mov
outsl
mov
pushl
in
dec
mov
cmpb
shrb
jmp
call
cmp
test
enter
test
inc
jle
jmp
and
mov
mov
jnp
inc
icebp
fbld
push
adcl
add
push
and
mov
sub
push
rep
loopne
cmpsl
sbb
out
xor
mov
push
mov
dec
xchg
mov
sbb
mov
or
lcall
lret
push
icebp
dec
gs
test
ret
sub
outsb
or
aaa
test
out
cmp
sub
fnstcw
and
pop
xchg
jl
jl
mov
insb
inc
mov
cmp
stos
jns
rcll
cli
push
or
add
cld
dec
adc
arpl
fldt
push
xchg
jl
mov
jns
andb
aas
xor
fs
add
int
lea
into
loop
jmp
adc
fldenv
icebp
push
and
leave
sbb
icebp
inc
jae
mov
sarb
test
les
mov
lock
aam
in
xor
shl
lcall
enter
addl
lods
ret
icebp
push
les
je
and
jns
cwtl
leave
jge,pt
or
xchg
sub
lock
pop
rcr
dec
lret
lea
negl
aaa
cwtl
mov
adc
dec
popa
or
mov
sub
test
xchg
sbb
push
dec
gs
popf
lock
jl
and
subl
sahf
inc
lock
fdivrs
jp
add
insb
sub
fcmovbe
push
jno
mov
fimull
aas
punpckhdq
clc
flds
sbb
pop
aad
cmp
and
call
pop
outsb
shld
loope
sub
or
lds
lret
andl
xchg
negl
xor
adcb
pop
pusha
in
out
es
dec
xor
divl
mov
inc
sahf
icebp
clc
int
popf
sbb
mov
aas
add
aad
inc
insl
or
inc
out
iret
sbb
adc
dec
push
mov
int
sbb
ret
test
out
loopne
mov
addr16
ss
xor
jo
sub
mov
cwtl
rol
pop
jo
jge
arpl
sub
clc
sub
dec
sti
inc
xor
xor
loope
lds
mov
fimull
mov
dec
mov
mov
inc
inc
push
int3
and
jg
pop
daa
cli
popa
adc
or
test
sti
fs
dec
bts
mov
loopne
cld
dec
gs
cltd
in
mov
bound
daa
and
jecxz
out
mov
jb
jbe
ss
shrb
pop
and
add
jno
ds
lds
cmp
out
in
adc
daa
jmp
icebp
inc
jbe
mov
test
ret
inc
int3
add
sub
es
push
add
lock
pop
cwtl
fistps
popf
loope
pop
out
enter
rcll
sub
lock
imull
jnp
xchg
imul
push
aaa
push
pop
add
xor
xchg
mov
jne
rolb
mov
jno
mov
pop
lock
fs
cmp
dec
jge
arpl
pop
and
xchg
imul
jns
mov
das
adc
mov
mov
ljmp
inc
int
inc
ds
ret
test
add
lds
adcb
adc
cs
adc
inc
xchg
jmp
mov
inc
popa
adc
sub
inc
xchg
or
insl
jbe
and
dec
test
mov
sub
cmp
loop
rcll
test
cmp
add
clc
jmp
aam
mov
dec
into
dec
cmp
jnp
outsb
and
cltd
adc
out
xor
addr16
idiv
movsl
xor
pusha
movsl
inc
xchg
test
ds
push
xor
scas
pop
sub
adc
popa
cmp
pop
popf
pop
fidivrl
cmc
pop
repz
sub
push
repnz
adc
pop
mov
jle
into
inc
mov
add
sbb
hlt
lahf
lock
mov
ss
mov
dec
xchg
andb
into
pushf
jnp
mov
fcmovne
mov
dec
das
jne
stos
pop
lock
repz
fwait
aaa
push
sub
mov
pop
push
cmp
pop
cmp
pop
out
or
jg
ficompl
pop
mov
mov
loopne
pop
xchg
xor
scas
pop
fwait
add
movsb
jmp
idivb
mov
mov
dec
mov
and
andb
sub
popa
lret
aaa
fcoms
xchg
js
mov
pusha
mov
pop
dec
lock
push
mov
lods
pop
xchg
push
data16
sub
mov
add
lret
xor
mov
mov
inc
xchg
push
rol
push
pop
leave
xor
xlat
ja
xchg
sbb
in
mov
or
loopne
or
inc
xor
jge,pn
pop
xchg
or
je
push
orb
jmp
xor
push
dec
mov
jle
lret
mov
jns
repnz
mov
add
or
aad
mov
jb
test
or
xor
movsl
jae
push
sbb
adc
fwait
push
sub
mov
flds
into
or
popf
in
mov
mov
pop
fnstsw
xor
pop
ffree
out
and
insb
sbb
sbb
scas
xchg
pop
out
inc
fwait
jne
mov
inc
test
pop
jo
insl
jno
repnz
adc
jge
int3
and
mov
inc
iret
outsb
and
insb
push
jo
mov
sarb
popf
inc
jp
subb
aas
inc
mov
cmpl
push
inc
or
xor
aas
int
mov
jns
fs
pop
dec
cld
test
cmp
scas
or
ss
icebp
mov
pop
repnz
out
xchg
inc
adc
mov
mov
jle
cmp
test
test
add
loope
lods
mov
inc
push
daa
sub
and
lret
adc
mov
mov
mov
testl
or
clc
movsl
jnp
fimull
pop
push
xchg
jns
sub
mov
mov
and
push
fsubp
xchg
mov
outsb
fsubl
lahf
movsb
mov
xor
and
aad
xor
push
sub
dec
jg
xor
xchg
jns
xchg
sub
xchg
add
mov
fs
lahf
add
fnstenv
xchg
sbb
out
push
xor
and
jg
mov
inc
repz
mov
xor
mov
mov
cmp
dec
dec
insb
sub
add
out
xchg
les
sub
inc
ljmp
js
cmp
rcl
pop
inc
insl
jb
mov
or
pop
sbb
xor
sti
repz
gs
dec
mov
addl
sbb
mov
ljmp
cmp
lock
stos
jl
inc
jmp
and
test
fbstp
inc
cmp
clc
mov
xchg
test
push
push
addl
in
cmp
test
pushf
inc
dec
insl
jb
int3
rorb
ds
movsl
push
jnp
jge
or
dec
mov
lret
sbb
mov
das
lahf
dec
ret
jne
ret
jp
cmpsl
in
loope
lret
dec
lahf
mov
xchg
adc
inc
add
icebp
mov
syscall
addb
daa
call
cld
lcall
adc
ret
movsb
js
jne
rol
iret
inc
sahf
lock
lods
sbb
and
xchg
leave
dec
or
sbb
push
jmp
clc
ja
push
iret
ret
xchg
jge
mov
imul
jb
fs
add
imul
lds
cmpsl
popa
inc
pop
fcompl
add
movsb
jnp
dec
push
jecxz
xchg
scas
imul
dec
out
andb
cmp
outsb
push
stos
pop
popa
mov
dec
lods
adc
addb
clc
test
mov
sbb
adc
jg
ja
mov
imul
pop
mov
add
or
repnz
jne
mov
xchg
inc
cmp
out
lahf
sbb
push
fcom
lods
lds
push
cmp
test
push
mov
pop
arpl
lahf
xor
mov
sti
fldt
rcl
fisttps
adc
pop
sbb
push
das
or
scas
pop
ds
mov
sbb
add
pushf
xor
push
test
xchg
cltd
dec
lods
in
cmp
fimuls
xchg
jnp
pop
xchg
xchg
cmc
outsl
cltd
ss
adc
sbb
cs
mov
cmp
xor
mov
sarb
xor
in
cmp
xor
push
popa
enter
test
aad
xchg
out
aad
insb
fcomp
sub
fldcw
mov
clc
hlt
or
push
in
jb
aaa
or
mov
cmpsb
sub
int3
mov
dec
shl
inc
sub
cli
sbb
mov
xchg
pop
inc
push
cmp
mov
cmp
mov
fists
or
testl
sbb
pop
cs
int3
mov
adc
daa
push
or
jae
adc
outsb
fnstsw
repnz
push
popa
add
sar
int3
inc
cmp
and
pop
test
dec
jns
jns
mov
pop
les
ljmp
pop
pop
iret
jnp
jb
push
inc
mov
mov
or
int3
je
xchg
pop
and
call
cmpsb
in
movntdq
movsl
cmp
loopne
mov
xor
lds
cmp
and
loop
je
add
add
daa
push
lods
cmpsl
filds
rorl
fisubrl
mov
mov
or
xlat
and
xor
and
cmp
cmp
sbb
rcrb
stos
sub
repz
push
aas
hlt
aas
in
call
cld
xor
scas
pop
icebp
or
call
ret
mov
movsl
decl
push
cmp
and
inc
mov
in
or
add
fwait
add
aas
bound
rcll
mov
clc
outsb
lea
andb
dec
jecxz
mov
rolb
cmc
push
out
addr16
bound
mov
jns
sbb
or
scas
xchg
jge
jle
test
mov
in
adc
mov
in
mov
and
cltd
js
fcoms
scas
sbb
leave
aam
nop
lahf
add
cmpsb
dec
test
fnstenv
and
lret
xchg
inc
dec
cmpsb
mov
jp
mov
repz
pop
jmp
dec
cmp
mov
mov
clc
std
cli
fdivr
cwtl
movsl
pop
and
mov
adc
pushf
pop
and
sbb
popa
call
loope
jbe
fsubl
ljmp
loopne
sarb
stc
cmpsl
hlt
jp
out
push
jl
notl
test
mov
push
jl
outsl
and
dec
outsl
fidivl
dec
js
xchg
insb
mov
pop
cmpsb
mul
or
xor
out
xchg
test
sbb
stc
aas
sub
lea
cmpsl
mov
cltd
push
mov
andl
push
mov
jge
xor
cli
cmp
jp
push
mov
xchg
push
xor
dec
cld
cs
or
mov
lret
mov
repz
movsl
lds
out
icebp
jp
mov
lahf
sbb
frndint
mov
insb
ret
sbb
push
imul
dec
test
lock
test
xorl
mov
repnz
adc
jne
repnz
lret
fsincos
mov
stc
xorb
jmp
lods
fcoml
add
mov
rcl
aaa
jl
js
mov
xchg
stos
inc
stos
fcomp
mov
mov
sahf
in
and
pop
push
cmpsb
push
lods
jne
add
pusha
es
pop
mov
in
lods
mov
and
jle
mov
dec
pop
xor
cmp
cmp
xor
mov
int3
sub
out
and
hlt
sbb
push
push
cltd
and
or
sbb
dec
pop
sbb
gs
sbb
xchg
test
cmp
stos
test
push
addb
popf
xlat
inc
and
arpl
xlat
adc
inc
xor
aam
test
repz
push
lret
mov
pusha
sti
outsl
inc
popf
outsl
mov
fimull
sbb
jns
cli
mov
loope
stc
xor
jbe
xchg
cli
into
out
aad
or
std
xor
in
inc
add
jmp
gs
add
mov
mov
pop
out
nop
loop
data16
xchg
jecxz
mov
test
cmc
mov
pop
mov
cmpsb
sbb
fisttpll
pop
cmp
or
mov
lret
out
mov
mov
jae
push
out
xor
repnz
test
pop
xor
dec
mov
pop
test
inc
leave
cmpsb
cli
pop
push
hlt
or
mov
ret
jecxz
clc
imul
jg
or
insl
xor
icebp
hlt
jbe
loopne
sbb
mov
or
aas
dec
cmp
ficompl
testb
mov
mov
ss
mov
fisttpll
in
aaa
xlat
movsb
inc
pop
ret
push
rcrl
jle
jns
push
adc
popa
ja
gs
and
je
jno
stc
sahf
push
push
enter
add
loopne
shll
scas
test
add
mov
gs
pop
arpl
ret
push
jmp
add
dec
outsl
arpl
jno
mov
ret
inc
sti
push
enter
icebp
aam
sbb
add
test
mov
add
xlat
dec
mov
loopne
daa
out
mov
jecxz
mov
int3
outsl
jmp
add
add
outsb
subb
lea
rorl
dec
imul
mov
pushf
std
test
mov
xchg
pop
std
sbb
cmp
mov
sbb
fscale
xchg
mov
sub
cli
add
mov
inc
xor
insb
add
mov
mov
popf
fcomp
xchg
out
les
xchg
in
jb
scas
dec
xchg
idiv
cli
dec
pop
pop
fwait
test
xchg
cmp
xchg
stos
and
out
mov
push
jp
pop
xchg
mov
add
shll
data16
test
and
jno
cwtl
jnp
cwtl
ljmp
stc
mov
cmp
aad
sub
lret
mov
int
jns
sbb
rol
mov
jbe
fsub
mov
mov
lods
scas
out
inc
mov
jp
push
adc
ja
xchg
in
es
xchg
fcomp
add
sbb
jmp
jmp
dec
fdivs
mov
lods
push
xchg
push
push
adc
mov
xor
mov
nop
fisubrs
or
pop
push
sub
cmpsl
mov
xchg
mov
lahf
push
in
dec
push
jmp
mov
jo
xchg
jbe
mov
cld
dec
or
sbb
jle
out
inc
mov
inc
inc
enter
or
sbb
jecxz
jmp
call
jmp
scas
and
icebp
cwtl
dec
adc
pop
xchg
xor
out
push
call
dec
imul
cld
mov
add
pop
inc
pop
and
fcompl
frstor
fisttps
mov
lds
into
sahf
lock
mov
sub
cmp
mov
push
in
lret
fnstsw
addl
test
dec
mov
imul
xchg
inc
xchg
iret
pop
sub
or
mov
shl
sarb
pop
aad
shll
cld
jbe
xor
test
je
mov
jmp
xor
loopne
jmp
fistps
mov
dec
addr16
adc
dec
es
and
sarl
fbld
loopne
jcxz
jbe
ja
popa
in
test
outsb
arpl
push
mov
fsts
mov
mov
dec
jle
cmpsb
inc
into
mov
out
adcb
cltd
mov
add
add
jge
and
add
inc
out
sub
push
mov
or
xor
fnstsw
add
dec
sbb
jl
mov
jmp
xor
adc
ja
add
popa
sti
pop
cmpsl
xchg
inc
jle
iret
push
shll
scas
sahf
mov
fcomp
mov
cli
mov
sti
push
dec
push
sahf
testl
ss
push
in
imul
into
pop
lods
cmpsb
or
sar
jmp
cmp
jmp
pop
push
push
lcall
jo
xchg
cmp
sub
dec
mov
jmp
lret
push
in
xchg
push
dec
out
adc
lods
mov
int3
filds
add
xor
mov
in
push
outsl
jo
jle
out
sarl
data16
sbb
jbe
xor
or
jne
jecxz
sbbb
pop
xor
xchg
popf
nop
cld
inc
fwait
dec
mov
cmpsl
imul
sub
mov
mov
dec
mov
pop
enter
mov
test
outsb
push
jnp
mov
mov
and
pop
andb
jmp
push
mov
xchg
mov
outsb
repz
and
flds
mov
cmp
ljmp
jns
jmp
push
dec
push
popf
cmp
js
xchg
popa
mov
adc
adc
int3
jae
fisttpll
or
iret
stos
adc
push
jae
xchg
push
and
fnstsw
mov
into
mov
pop
dec
push
and
rcl
outsb
add
xor
add
scas
bound
inc
lcall
rcll
idivl
pop
mov
and
cmpsl
out
adc
std
leave
lahf
jle
jb
outsl
leave
aas
lret
hlt
or
jne
cmp
sub
sahf
repz
fwait
jns
fdivl
mov
les
push
les
int
xchg
dec
stos
sbb
inc
push
adc
push
loop
rcrb
popa
or
lahf
es
pop
scas
cltd
data16
insl
xorb
push
sbb
jae
lds
xor
es
fiadds
sarl
xchg
lret
pop
stc
mov
mov
fadd
js
push
sbb
xor
sub
adc
sbb
loope
xchg
jno
test
test
inc
sbb
xchg
mov
aam
jmp
jecxz
iret
mov
xor
or
mov
jae
mov
pop
lock
jp
cmp
cltd
lods
xor
mov
cmpsb
cmp
lea
and
sti
hlt
add
pushl
push
pop
mov
popf
adc
popa
shll
push
in
fwait
dec
sahf
lods
push
out
and
jl
imul
or
push
std
or
pop
out
sbb
and
cltd
mov
push
dec
pop
xchg
loopne
stos
fs
add
pop
lret
fnsave
dec
data16
cmp
icebp
jne
sbb
cmp
push
ja
aas
int
dec
inc
jecxz
ja
fs
jb
jb
jb
in
push
inc
mov
inc
cld
std
js
icebp
mov
fxch
or
mov
lock
and
aad
jb
mov
and
test
and
sbb
sbb
loop
lea
loope
imul
push
add
push
jecxz
or
mov
dec
cs
outsb
jns
xor
pop
iret
cmc
ljmp
ja
popa
jmp
mov
and
and
push
mov
mov
xchg
xchg
js
jbe
loopne
pop
inc
imul
pusha
rol
and
mov
xor
pop
leave
notb
subl
loope
push
or
repz
ret
test
ret
popf
repz
dec
lahf
xorl
inc
jmp
jnp
jecxz
jge
and
test
stos
xchg
rorl
cmpsb
clc
push
stos
sarb
gs
repnz
xor
lds
mov
aad
mov
add
inc
xchg
sub
fcomp
mov
repnz
xchg
and
xchg
cmp
xor
mov
outsb
dec
subl
lods
mov
aaa
xor
xor
adc
push
pop
mov
andb
or
adc
mov
enter
stos
push
divl
lock
and
mov
pushl
mov
fisttps
adc
dec
cltd
lcall
js
test
adc
sub
jg
popa
sub
sub
into
adc
ljmp
mov
lret
sub
pop
lods
and
mov
ss
xlat
mov
xor
hlt
out
dec
cli
call
mov
test
mov
fwait
mov
testb
repz
jae
pop
or
fistl
pop
cmp
fnstcw
iret
aad
dec
sbb
push
rcll
clc
and
rorl
in
cmp
cmpsl
push
stc
insl
cli
adc
xchg
popa
push
mov
into
adc
js
jmp
stos
sub
or
hlt
imul
mov
iret
and
xchg
test
repnz
stos
xor
test
call
dec
cs
cwtl
inc
mov
lcall
mov
dec
pop
mov
cs
lcall
pop
sbb
xchg
pop
popl
ja
repz
push
mov
movsl
test
popa
lahf
jg
repz
xchg
adc
inc
in
lock
in
ficoml
jle
cmp
jae
mov
sahf
iret
orb
and
jne
movsl
pop
je
push
in
push
fiaddl
jl
stos
xor
test
dec
test
js
pop
clc
push
out
mov
mov
stos
xchg
outsl
sub
push
test
adc
adc
mov
ds
push
add
scas
jae
fucomp
inc
inc
cli
pop
push
fbld
and
xchg
xchg
pop
mov
icebp
in
nop
gs
xchg
shll
mov
sub
sbb
inc
jle
pop
push
and
xchg
xor
jnp
sbb
pop
cld
push
cld
cli
sub
nop
sti
ror
jge
mov
scas
add
mov
fsts
mov
cwtl
cld
mov
sbb
ficoms
dec
imul
test
pusha
pop
out
or
into
jb
xchg
fs
mov
repz
test
mov
add
mov
scas
jge
cmp
push
stos
and
neg
fisttps
shr
dec
and
jge
test
xlat
pop
jne
dec
dec
xchg
inc
xchg
dec
push
sub
rcl
pop
bextr
pop
mov
mov
fsts
xchg
cmp
mov
sbb
lods
jne
popl
xor
popa
lods
lret
push
daa
stos
pop
cmp
hlt
mov
test
bound
into
lret
testl
inc
mov
xchg
shll
les
add
popa
cmpsl
mov
pop
dec
sti
xchg
sub
pop
mov
xlat
cmpsl
loop,pt
pop
mov
xchg
xchg
push
dec
fsubrl
mov
dec
movsb
loope
jno
pop
test
mov
movsb
mov
into
push
adc
adc
out
fstpl
sub
je
cld
ud0
loope
inc
sti
jle
adc
fisttps
stos
lret
sbbb
sub
add
sar
xchg
notb
add
std
dec
xchg
bound
cmp
test
push
fistpll
sub
and
and
push
out
xchg
fmul
dec
fldl
subl
sbb
or
mov
adc
jb
xchg
pop
mov
add
and
lea
cltd
sub
bound
nop
data16
decl
insl
mov
imul
jne
cld
sbb
aaa
aas
cwtl
jae
adc
bound
inc
pop
and
mov
pop
stos
lret
pop
in
inc
icebp
add
popa
in
ds
in
mov
inc
adc
sub
jb
fmuls
jmp
rcl
push
inc
iret
ljmp
nop
movsl
je
test
adc
add
test
push
inc
or
je
mov
mov
lds
push
popa
stc
out
mov
pop
mov
lods
sub
jmp
and
add
mov
jne
dec
push
divl
sub
cmpb
sbb
pop
jbe
xor
fsubp
stos
push
dec
out
pop
jnp
in
int3
fbstp
inc
inc
out
in
int3
dec
pop
pop
sub
sbb
pop
sti
mov
stos
add
imul
mov
mov
xchg
push
cld
mov
mov
scas
jp
cmpsl
fs
popa
sub
lods
push
daa
repz
or
call
aas
lahf
jnp
xchg
pushf
fistl
lock
mov
test
mov
cmp
fwait
adc
inc
inc
jbe
test
ja
mov
loope
addr16
fistl
lahf
mov
mov
xchg
cmp
sbb
and
in
stos
xlat
roll
and
mov
cmpsl
jae
inc
pop
or
mov
cmp
pop
jge
jmp
xchg
mov
mov
clc
neg
xor
cmp
push
ds
push
and
out
dec
in
shll
mov
sub
mov
icebp
movsl
daa
pop
mov
and
pop
mov
cwtl
scas
fabs
xlat
and
or
inc
lcall
dec
movsl
mov
adc
pop
in
mov
ds
fisttps
fsts
incl
popa
sbb
inc
scas
cwtl
jge
movsb
jl
and
pushf
enter
cmp
call
xchg
js
arpl
pop
jne
cmp
sub
mov
fildl
lds
xchg
mov
out
je
lcall
icebp
sti
cmp
movsb
cmp
test
inc
jb
jns
lahf
mov
mov
int
mov
mov
pop
xchg
cmp
xchg
xchg
aad
mov
xchg
dec
fisubl
cmpsl
jg
lds
movsb
push
sbb
and
sub
mov
jl
mov
adc
jne
stos
mov
inc
mov
popf
adc
aad
jbe,pn
popf
sahf
jno
lahf
mov
dec
pushf
dec
jo
fmulp
lea
je
mov
xchg
scas
xor
pop
mov
hlt
and
daa
dec
jae
out
mov
cmp
arpl
imul
mov
sub
lret
imul
mov
loop
int
mov
rol
ret
fs
out
inc
and
cmp
dec
xchg
into
jecxz
add
lahf
fidivl
push
pop
cmp
mov
or
cmpl
jbe
cmp
mov
mov
inc
inc
jne
dec
mov
add
mov
jb
add
mov
js
mov
jns
stos
mov
xor
enter
in
dec
jbe
mov
dec
sbb
mov
arpl
sahf
mov
mov
test
popf
pop
nop
jp
pusha
mov
push
cmp
cwtl
or
pop
flds
sahf
or
inc
outsb
repz
js
mov
cltd
shlb
nop
or
jne
jo
jb
xchg
xchg
push
adc
dec
jle
inc
lahf
idivl
std
loope
and
stc
fwait
lock
push
cmpsb
sbb
pop
push
mov
lahf
or
fcomps
cmp
loope
ja
adc
cs
movsb
mov
js
ds
popf
push
xchg
ss
mov
in
jg
sahf
or
pop
mov
fwait
sub
fwait
jmp
int
in
jle
roll
loop
push
outsb
sub
popa
insl
orb
repz
fyl2xp1
sbb
pop
addr16
aas
adc
sub
imul
movsb
cmp
je
xchg
repnz
pop
dec
dec
push
jmp
fcompl
adcl
fisttpl
xor
fstl
mov
inc
mov
sbb
je
pushf
fwait
jae
out
jae
in
mov
jg
dec
mov
bound
inc
pop
jle
movb
and
jp
adc
jmp
test
mov
sub
jnp
rcll
mov
popa
testl
sbb
pop
mov
or
outsb
jne
add
and
mov
aaa
inc
pop
xchg
push
and
cmp
outsb
fucomip
outsl
pop
push
lods
pop
jl
jne
imul
stc
popf
repz
iret
xchg
or
std
arpl
jge
dec
sub
stos
ret
mov
stc
add
push
lods
mov
jbe
out
push
out
and
pop
push
lcall
sub
popa
je
jmp
mov
dec
ljmp
sarb
loope
dec
andl
ss
push
xor
aad
aas
add
lret
adc
adc
int
mov
out
jmp
in
inc
jmp
dec
out
sbb
push
lea
movsl
stos
cmp
cmc
pusha
frstor
jno
lahf
mov
mov
scas
lock
xchg
inc
or
xor
jle
ja
jle
or
mov
scas
fisttps
mov
in
shll
subl
dec
dec
pop
push
loop
add
xchg
add
mov
jbe
mov
mov
mov
cwtl
adc
lds
jmp
pop
sub
or
dec
in
daa
push
push
out
push
in
mov
daa
ret
adc
rol
add
hlt
dec
mov
cmp
cmc
pop
inc
inc
pop
test
or
jne
out
movsb
sbb
inc
jne
jno
faddp
sbb
and
int3
xor
scas
jmp
push
xchg
jl
lock
fwait
sbb
pop
cld
xchg
push
mov
insl
sub
mov
in
jbe
cwtl
xor
cmp
cmp
add
mov
mov
in
cmc
pop
addr16
pusha
mov
out
xor
inc
xchg
jb
mov
jbe
adc
adc
push
inc
mov
and
punpckldq
ljmp
and
sub
adc
pop
sti
xchg
mov
or
push
dec
cmp
stos
push
cmpsb
dec
jp
movsb
icebp
dec
sar
push
xchg
xchg
stc
or
movsb
jbe
push
cmp
aas
and
ret
inc
fs
xlat
incb
cmp
imul
test
add
xor
push
mov
xor
pop
rclb
xor
mov
sbb
inc
rorb
adc
adc
rclb
xchg
jge
imul
jmp
rcrl
shrb
stc
movsb
sar
xchg
inc
dec
and
dec
pop
sahf
push
dec
scas
scas
mov
fs
in
imul
jbe
sbb
adc
lret
stos
test
add
outsl
push
fidivrl
fdivl
jb
scas
mov
lret
das
push
hlt
xchg
ja
jecxz
pop
mov
push
add
inc
or
adc
in
int
adc
repnz
cltd
mov
int3
loopne
popf
cmp
das
cmc
popa
xchg
decb
pushf
add
xchg
inc
mov
push
filds
scas
cld
ret
push
repz
pmulhw
and
nop
aam
stos
xor
lcall
jg
pop
mov
sub
mov
pop
bnd
lahf
ljmp
fdivrl
push
dec
cmpsb
mov
loopne
das
cmp
cmpsl
ret
test
fcmovnu
add
jmp
mov
cmp
dec
loopne
xor
cmc
xchg
cmp
es
jecxz
addb
lret
fstpt
xor
mov
xchg
loop
pushf
and
mov
push
cmp
outsb
xchg
cltd
mov
push
hlt
test
mov
mov
sarl
and
xchg
mov
pop
outsl
push
enter
int
sbbb
and
add
sbb
aas
ja
adc
test
fistpll
and
jne
push
cmp
lods
lcall
mov
stc
inc
aam
push
lret
dec
out
push
xchg
pop
push
jp
jnp
lret
pop
jg
test
out
lea
clc
testl
push
fs
lret
jno
pop
pusha
aas
mov
lds
jne
sti
cli
mov
push
xlat
icebp
sub
leave
mov
mov
push
out
sub
cld
inc
dec
mov
and
aas
add
dec
inc
icebp
pop
mov
mov
dec
push
sbb
mov
rorl
cmpsl
sbb
jns
in
std
dec
sbb
repz
mov
loope
iret
cmp
daa
dec
lods
adc
gs
add
lea
outsb
jecxz
rorl
sub
jno
mov
hlt
in
adc
push
roll
movsl
xchg
fsubl
hlt
mov
jge
push
stc
xorb
fldl2t
stc
xchg
jae
nop
dec
add
jne
rol
xlat
cli
xchg
cli
mov
mov
push
and
lods
mov
shll
scas
jp
js
jg
into
hlt
sbb
repnz
mov
xor
adcl
or
incl
cmp
push
popa
in
pop
mov
mov
adc
mov
adc
enter
sub
mov
push
pop
dec
mov
jne
mov
in
sbb
dec
sbb
mov
add
in
pushf
push
dec
cmpsl
mov
add
outsl
xor
adc
add
sub
mov
insl
pop
addr16
dec
sbb
js
jns
inc
pop
or
arpl
adc
aad
mov
insb
jns
mov
jo
roll
test
xchg
inc
aas
jge
leave
xchg
clc
push
imul
pop
push
push
mov
xor
push
dec
enter
out
mov
sub
test
ss
rcll
push
jbe
lea
mov
lcall
xor
jb
jle
mov
pop
mov
sub
xor
or
imul
fwait
sub
sub
mov
mulb
fwait
inc
jg
sub
adc
imul
in
push
popa
in
adc
pop
jae
inc
or
adc
pop
jnp
test
sub
lahf
or
jp
int
push
js
ss
movsl
int3
cs
inc
and
dec
stc
add
leave
clc
or
pop
js
lret
xor
testb
fs
mov
inc
push
les
rcrb
mov
xor
nop
fwait
add
lahf
insb
inc
xlat
fnstsw
and
in
sbb
lods
inc
xchg
xor
pop
cmp
jmp
cmp
rol
mov
movsb
jbe
lock
and
jne
pop
fidivs
mov
cmc
pop
jae
aas
pop
stos
lods
inc
jl
repz
leave
push
fdivrl
dec
jns
pop
pop
inc
les
cmp
jp
daa
flds
inc
cwtl
in
loop
out
addr16
mov
popl
jmp
xchg
outsl
push
gs
sub
in
in
jle
scas
ljmp
mov
dec
mov
test
ljmp
jp
xchg
sbb
mov
ja
ret
dec
imulb
or
push
ds
aas
cmp
push
in
mov
mov
pushf
or
fdivrl
add
lret
xchg
loope
test
sbb
mov
jns
mov
cmp
inc
push
imul
or
fidivrs
bound
mov
inc
mov
pushf
jns
push
sub
fsubrl
jno
add
xor
in
loope
dec
inc
int3
dec
ljmp
sahf
in
ja
push
xor
call
aas
pop
out
bnd
ja
cmp
fsubrs
xchg
leave
in
add
xchg
test
add
lods
cmpl
leave
pop
mov
aas
or
mov
xor
nop
lds
sbb
push
out
testl
push
mov
movsb
push
push
pop
lcall
mov
sarb
loopne
mov
pushf
sub
jae
fs
sub
jmp
or
aaa
dec
sub
dec
mov
xlat
cmp
in
addr16
inc
sbb
movsb
push
xchg
popf
jecxz
jbe
cli
mov
popf
or
or
xor
mov
add
rep
sub
pop
push
lsl
dec
lahf
orb
sbb
jns
pop
inc
sub
jl
in
shll
mov
pop
orl
push
outsl
adc
pop
mov
jae
movsb
rol
aad
adc
lea
dec
shll
loop
test
pop
js
mov
dec
or
stc
sub
clc
jno
inc
sub
mov
lcall
fsubs
sbb
mov
jae
repz
movsb
sbb
jnp
mov
cwtl
aad
inc
jle
mov
dec
mov
or
sub
xchg
fisubrl
lods
xchg
pop
xchg
adc
lret
adc
das
je
adc
and
lcall
clc
stc
xor
jge
xchg
adc
mov
xchg
arpl
dec
dec
xchg
add
sahf
rorb
popf
repnz
andl
cmpsb
pop
rorl
jo
add
clc
push
iret
xchg
imul
mov
sbb
fiaddl
push
mov
add
and
bound
mov
adc
in
sarb
and
add
iret
cwtl
pushf
jno
jmp
xchg
out
xchg
popf
lock
mov
rclb
in
jg
mov
jg
sbb
enter
push
mov
xlat
push
mov
mov
or
addr16
xor
pop
mov
insl
scas
imul
jns
push
lods
int
ss
add
cmpl
rcr
stos
inc
not
orl
outsb
lds
je
mov
xor
enter
push
das
dec
cmpsl
push
mov
fimuls
sbbb
loop
push
sbb
mov
imul
xchg
pop
jbe
stos
sbb
lods
addr16
div
sub
ficomps
lea
lods
push
pop
cmpsb
jo
fwait
out
lea
pop
cmp
imul
insb
xlat
dec
dec
jge
xor
jne
add
in
jb
or
mov
sbb
ret
pop
ljmp
dec
imul
insl
sbb
cld
xchg
mov
gs
and
jns
daa
sub
iret
dec
dec
cmp
cmpsb
push
mov
test
pop
push
cmp
stc
repnz
lods
push
mov
aas
cmp
popf
cmp
jb
std
cli
adc
xchg
mov
in
mov
sub
xchg
mov
imul
ficoml
dec
sub
mov
jae
sar
cmp
into
lods
mov
pop
mov
jns
pop
mov
ds
pop
and
lahf
inc
lahf
pop
mov
ja
mov
int
mov
and
push
sub
repnz
faddp
gs
adc
popf
insl
fldenv
movsb
in
movsb
ret
cmp
jl
iret
lcall
mov
pop
push
add
pop
loopne
xchg
out
xor
stos
out
sbb
push
fmuls
rorl
arpl
outsl
or
lock
lods
adc
cwtl
pop
sub
scas
in
jmp
adcl
mov
pop
push
mov
push
or
lret
out
lcall
cs
aas
adc
fs
mov
mov
add
mov
adc
inc
ret
xchg
mov
orl
fs
push
mov
mov
xor
mov
pop
inc
xor
cmp
pop
and
sbb
pop
sub
clc
dec
pop
sub
leave
mov
add
sub
sahf
repz
sbb
std
test
hlt
data16
mov
loop
push
xchg
cli
adc
fdivrs
adc
scas
lahf
sub
cltd
xchg
hlt
pop
mov
bnd
jl
popa
mov
xchg
xor
push
mov
cmp
popa
jnp
int
mov
aam
dec
arpl
lret
add
dec
jae
call
pushf
xchg
fcompl
std
push
mov
pop
or
enter
mov
shlb
or
mov
xor
outsl
cmp
in
test
mov
push
mov
cmp
std
jb
nop
sub
movsl
push
jne
lods
mov
mov
repz
sbb
cld
fldl
mov
and
mov
lret
push
iret
mov
pop
lcall
xchg
je
scas
nop
sbb
mov
dec
sahf
mov
mov
and
gs
test
sarb
adc
xchg
test
bnd
movsl
in
and
mov
push
pop
out
sti
fstpt
ljmp
negb
shlb
movsl
rorb
push
insl
adc
cmp
dec
or
popf
cwtl
xchg
mov
cmp
icebp
push
jo
sub
pusha
mov
subl
push
out
mov
or
mov
push
add
jmp
daa
xchg
jns
mov
inc
cmp
pop
xor
or
clc
push
aam
and
movsl
xchg
pop
scas
test
fdivrl
pop
cmpsl
aaa
mov
rcll
mov
cmp
cmpb
out
mov
cld
inc
jg
insb
push
inc
inc
xor
loop
lahf
scas
mov
iret
or
inc
xor
push
adc
fnsave
enter
cmp
test
xor
sti
imul
leave
loop
jle
pop
jns
aad
or
fildl
pop
mov
push
bound
dec
andb
inc
repz
push
xchg
fsubrl
or
xor
fcmovnbe
clc
inc
or
daa
sub
cmp
lods
idiv
aaa
lahf
cmpsl
enter
mov
jbe
cmp
cmp
cmpsl
sahf
cld
add
pusha
repnz
cmc
aaa
lcall
lock
scas
arpl
and
sbb
adc
push
int
mov
push
imull
repnz
push
sub
sub
mov
xchg
xlat
xor
into
in
in
or
loop
lods
icebp
test
or
nop
orb
mov
into
dec
frstor
push
lock
sbb
push
nop
adc
inc
imul
dec
sbb
cmpsb
ret
sub
outsb
ja
lock
test
incl
push
lods
mov
mov
fwait
and
int3
mov
out
inc
pop
push
ja
jecxz
pop
xchg
add
push
or
sbb
loope
cs
movsl
orb
adc
xor
cld
lcall
pop
incl
stos
xchg
pop
xor
addr16
ja
add
mov
mov
shll
inc
cmpsb
dec
jno
xor
addr16
mov
pop
push
xor
lods
adc
in
add
xor
push
or
out
mov
mov
pusha
out
lock
lahf
insb
xor
mov
pop
xor
aam
sub
in
rcr
push
rcrl
push
or
arpl
jno
or
dec
sub
jp
aam
addr16
dec
jp
sti
test
pop
pop
mov
or
je
mov
and
xor
loopne
xchg
test
lret
in
push
mov
icebp
fs
xchg
mov
pop
int
in
pop
jle
and
xlat
std
cmpsb
ficoms
jae
test
xor
mov
stc
mov
sti
out
aas
push
cltd
pop
lret
sar
mov
mov
stc
lods
bound
cmc
clc
data16
and
loop
inc
inc
cmpsb
inc
cmp
addr16
call
popa
push
outsl
popf
xor
fbld
xchg
pop
subl
lods
inc
jnp
xor
xor
jae
pop
cmp
addr16
lahf
sbb
test
shl
test
sub
and
jecxz
inc
push
lds
jmp
xorb
fistps
imul
fwait
pushf
sub
fists
sti
xchg
xchg
xchg
int
movsb
mov
jge
rorl
andb
hlt
inc
add
scas
mov
add
fdivr
mov
add
jno
leave
cli
clc
hlt
mov
cwtl
xchg
enter
aas
jge
aas
dec
mov
pop
mov
je
cmpsb
pop
stos
jle
jg
stos
pop
in
pop
mov
insl
sub
unpckhps
fucomip
mov
pop
push
inc
mov
scas
and
push
cwtl
enter
hlt
or
mov
andb
xchg
inc
inc
loop
sbb
cwtl
loop
std
test
lds
mov
push
xchg
test
ljmp
lods
out
fdivr
adcb
scas
iret
cmpsl
sub
cmp
and
add
dec
sti
mov
dec
loope
mov
dec
adc
lock
in
dec
aad
into
roll
jl
xchg
pop
arpl
data16
leave
outsl
daa
pop
ret
xor
addr16
mov
cld
cli
arpl
shrl
aaa
push
cmp
iret
push
cli
stos
mov
dec
pop
setle
lods
loop
mov
push
pop
mov
sub
sbb
mov
mov
in
mov
pop
pop
mov
std
fcomp
shl
stos
sbb
inc
jbe
dec
mov
loop
out
push
cmpsb
stc
pop
ficompl
jns
les
pop
cmpsl
fs
gs
inc
cmpsb
es
jmp
mov
pop
sbb
mov
mov
jp
aad
xor
inc
sub
xchg
cld
arpl
jnp
cltd
sti
xor
pop
and
out
int3
lock
pop
iret
or
and
repnz
gs
aaa
lret
mov
mov
and
scas
mov
scas
xlat
mov
push
std
sub
or
in
notb
roll
mov
int3
pusha
out
or
es
jbe
lock
nop
repz
in
or
cltd
addr16
xchg
pop
push
or
add
test
dec
sub
das
int
fwait
test
loope
call
imul
sarb
inc
cltd
xor
lds
jb
out
pop
mov
idivb
lret
xchg
mov
test
jg
ret
sbb
inc
sbb
jmp
iret
mov
xchg
jb
inc
cli
jno
xchg
lar
cmp
mov
fwait
icebp
test
mov
dec
xlat
xchg
sbb
cmp
cmpsl
mov
mov
lods
das
das
stos
xor
mov
xor
fists
jg
lahf
insl
leave
sarl
daa
loopne
ret
lcall
jbe
nop
sub
lret
mov
ficoms
push
mov
push
pop
sbb
cmp
out
vpavgb
xlat
std
inc
jecxz
shlb
adc
mov
daa
sbb
cmp
cli
idivl
push
mov
xchg
mov
lcall
shll
adc
xor
and
inc
fs
pop
movsl
ds
xchg
scas
adc
sarl
pop
push
jmp
mov
js
add
jno
jg
and
cmp
mov
test
or
xchg
int3
scas
lock
sbb
add
shll
dec
and
cwtl
fimuls
out
outsl
subb
push
xchg
mov
lcall
push
roll
adc
push
clc
lret
jecxz
dec
es
adc
jae
int3
out
and
pop
xchg
xchg
ret
insl
sbb
adc
jo
cltd
xchg
int3
aas
mov
loopne
call
repz
cmp
mov
lahf
mov
stos
pop
cmpsb
mov
inc
and
int3
dec
pushf
mov
clc
mov
cli
push
or
add
dec
rorb
lods
push
popf
cs
dec
xchg
mov
cmc
insl
push
inc
mov
sub
jns
mov
scas
mov
out
das
pop
cmpsb
ljmp
xchg
loop
sub
loop
mov
loope
mov
ficoms
mov
xchg
scas
xor
mov
outsb
mov
imul
shl
adc
fwait
xchg
sub
scas
in
lahf
xlat
sub
call
data16
dec
cmc
adc
lock
lret
mov
das
sbb
mov
xchg
or
clc
push
fldcw
adc
sti
enter
out
aaa
cltd
push
and
push
ljmp
mov
movb
shrb
cmp
std
dec
sahf
lret
cmc
in
js
sub
sbb
imul
mov
popf
xchg
mov
sbb
in
fcompl
add
mov
xor
cmp
jne
pop
mov
jecxz
loopne
aad
repnz
enterw
jb
xor
xchg
repz
out
mov
hlt
sub
xor
mov
cmp
cld
sbb
sub
fimuls
std
push
pop
mul
cmpsl
leave
inc
sbb
mov
out
out
shlb
adc
mov
mov
inc
imul
loop
hlt
jae
nop
movsl
push
inc
pop
movl
out
and
arpl
xlat
addl
shlb
mov
inc
cmpsl
enter
aad
fucomi
mov
inc
and
and
jnp
and
rorb
daa
shrb
dec
lea
cmp
lret
gs
je
mov
std
into
mov
pop
xchg
rorl
pop
and
inc
lahf
dec
and
sub
xchg
xchg
jns
jmp
movsb
notl
lcall
mov
push
sbb
scas
adc
pop
out
dec
fmulp
push
inc
sbb
fsubrs
inc
fidivrl
mov
add
les
cmp
aas
dec
or
ljmp
bound
shrb
cmp
mov
daa
add
jmp
mov
orl
rcr
push
dec
push
adc
cmpsl
cmp
add
scas
cwtl
cmp
cmp
push
sub
push
pop
testl
jle
add
wbinvd
cld
jmp
xchg
mov
fwait
push
fs
jne
pop
js
jns
ret
sbb
popa
inc
scas
pop
aas
hlt
mov
mov
dec
scas
loopne
or
loop
icebp
cwtl
mov
lahf
cmpsl
lahf
aaa
sub
pop
pop
repnz
not
push
stos
jecxz
add
cwtl
mov
sub
pop
das
cmp
popl
push
mov
inc
dec
scas
mov
mov
mov
icebp
cld
inc
xlat
pushl
testl
add
test
xor
mov
sahf
jp
ret
xchg
pop
insl
xor
mov
int3
sahf
xchg
loope
mov
in
cs
jae
orl
inc
and
dec
cmp
mov
inc
dec
and
out
sar
adc
out
decb
cli
loopne
inc
out
xor
dec
and
pop
cwtl
in
jb
subb
out
sub
stc
dec
data16
pop
stos
or
out
call
push
mov
das
test
adc
sub
sbb
icebp
or
sub
int
mov
xor
sub
cmp
scas
fsubrs
xor
xor
dec
push
lahf
imul
jno
sbb
sub
fs
imul
rcr
adc
imul
sub
popa
in
fnsave
xchg
cmp
outsb
pop
cmpsb
leave
mov
jns
mov
cli
stc
or
std
imul
ret
scas
mov
sub
xchg
scas
jmp
lock
in
add
pop
dec
jp
inc
or
jg
sbb
cwtl
scas
je
dec
pop
mov
cli
adc
filds
and
and
mov
adc
cmp
add
lods
jns
add
jbe
add
jns
and
xlat
mov
inc
aas
dec
adc
xchg
or
cli
add
loopne
fstpt
xchg
mov
popa
aas
imul
stos
mov
lret
adc
popf
cmp
int3
push
mov
leave
loope
jo
cmpsb
add
xchg
loop
lcall
mov
movaps
jns
xchg
fsubl
into
push
test
push
aam
inc
lods
cmpsl
repz
into
sbb
test
pop
inc
xchg
cmp
js
push
cwtl
sub
or
inc
jb
inc
int3
aad
sub
stos
in
popa
sbb
cmp
movsl
repnz
jmp
int
aad
and
fdivrs
lcall
mov
and
ret
les
or
loopne
sub
sbb
movsb
xor
dec
push
in
pop
stc
je
inc
mov
sbb
test
push
in
stc
inc
outsb
push
repz
fisubl
imul
adc
and
mov
dec
sub
inc
push
stc
add
push
sbb
jae
hlt
aad
mov
mov
add
ret
pop
stos
pop
dec
fistl
int
std
decb
cmp
and
and
mov
mov
mov
lods
fisubrs
in
cmpl
jmp
or
or
sub
adc
nop
inc
mov
aaa
test
rcrl
jge
mov
jb
leave
sbb
cs
sub
jno
mov
cmp
mov
stos
shlb
scas
dec
lock
sti
adc
das
pop
mov
jp
jmp
jns
adc
je
adc
or
pop
enter
xchg
data16
movsl
insl
fidivl
into
mov
pop
jne
icebp
std
dec
addr16
and
and
fsubl
cli
cwtl
cmp
iret
add
lods
je
cmpsl
mov
xor
aam
clc
sub
aad
jp
in
xchg
jmp
lea
out
test
lock
sbb
sarl
out
push
dec
and
lcall
mov
push
std
shrl
dec
fcompl
lret
call
xchg
xor
mov
mov
popf
call
push
inc
out
and
movsl
push
loopne
mov
push
pop
mov
clc
addl
addr16
xchg
in
popf
mov
and
jae
popf
pop
add
inc
repnz
xchg
mov
cwtl
mov
adc
stos
add
inc
adc
popa
mov
ljmp
in
push
imul
xor
cmpsb
sbb
aad
mov
cs
cmpsb
adc
jmp
pop
movsl
mov
out
lahf
inc
push
fimull
mov
jmp
in
or
pusha
dec
push
ss
fwait
mov
sti
dec
scas
aaa
mov
pop
cwtl
scas
inc
leave
lea
jb
push
jnp
shlb
outsb
mov
pop
cmp
bound
out
mov
add
or
adc
or
push
mov
fnstcw
test
mov
in
mov
ds
into
add
in
dec
das
nop
bound
enter
sub
mov
push
movsl
shrb
xor
cmp
in
adc
fidivrs
push
adc
sub
pusha
inc
enter
jp
ljmp
clc
cmpsl
mov
outsl
cmp
and
add
dec
push
jle
movsb
sbb
sub
stos
mov
mov
adc
or
loop
pop
mov
arpl
mov
mov
cs
aaa
sub
sub
out
mov
adc
lock
push
pop
mov
xor
lret
and
adcb
out
scas
xor
shrb
inc
adc
leave
mov
jae
inc
mov
sbb
mov
aaa
adc
push
fwait
in
sti
sarl
xchg
mov
mov
lcall
push
out
or
xor
sub
int
mov
pop
rclb
or
mov
mov
es
stos
mov
lea
out
shll
clc
dec
aaa
aad
orb
roll
outsb
xor
dec
push
and
sahf
xor
sbbb
jns
cltd
push
push
sub
loopne
push
dec
adc
inc
sbb
mov
popa
sbb
mov
xchg
xlat
cmp
jmp
sbb
aad
or
mov
inc
outsl
lcall
push
aas
add
push
xor
inc
cmp
inc
lahf
dec
jl
push
ret
popa
popf
in
movsb
cmp
add
inc
in
or
sub
jne
mov
mov
xchg
jp
into
mov
movsl
add
cmp
scas
mull
or
sbb
add
xchg
fcmovu
add
sbb
push
fs
fldl
test
imul
xor
movsb
icebp
test
fldz
popf
jns
icebp
cmovl
pop
jb
pop
cmp
dec
mov
sbb
and
loope
cmp
rcrl
push
pop
movsb
jl
push
add
push
mov
mov
sbb
and
das
mov
jmp
pop
es
sbb
sahf
cmp
jge
mov
ds
pop
cs
clc
jbe
mov
add
hlt
popa
jecxz
mov
inc
aam
xor
push
scas
dec
add
pop
hlt
scas
mov
shl
cmp
adcl
movb
sbb
shrl
pop
shlb
jne
push
out
cmpsb
add
jns
adc
mov
test
subl
and
push
in
mov
dec
daa
jg
insb
lcall
test
jne
nop
push
mov
sub
jnp
inc
and
nop
hlt
les
pop
mov
shll
stos
in
and
fld
mov
sbb
es
or
mov
dec
jns
cmp
or
mov
dec
and
fcomi
out
sbb
icebp
push
dec
pop
loopne
mov
sbb
shrb
jge
cld
out
pop
jmp
jp
out
and
dec
mov
filds
scas
push
and
ljmpw
aad
adc
jl
fs
inc
push
cmpsl
xchg
jecxz
int
push
icebp
in
push
xchg
outsl
fistpl
mov
mov
xchg
in
aam
inc
inc
scas
xchg
adc
push
lahf
dec
in
daa
sub
out
xorl
adc
rol
xorl
out
stc
xlat
arpl
movsb
or
outsl
sbb
fsubs
test
or
mov
repz
sbb
sti
in
push
jae
xchg
mov
sbb
mov
sbb
lods
loope
imul
or
pop
xchg
jle
std
and
sub
fs
cmp
inc
inc
or
enter
sub
push
aas
pop
push
mov
rcll
xor
jmp
inc
out
lahf
outsb
hlt
mov
mov
sti
out
lret
inc
mov
or
in
aas
mov
jg
dec
mov
cmpsb
adc
test
xchg
dec
hlt
movsl
movntq
mov
inc
push
push
pop
mov
jbe
xlat
jb
sub
xchg
bound
cmpsb
ret
cmpsb
sti
xor
rorl
cltd
aad
push
add
cmp
je
adc
jp
loopne
dec
xor
sbb
ret
fdivrs
ret
pop
mov
mov
insl
divb
inc
mov
xchg
stc
dec
cltd
push
or
jge
rorb
adc
xor
jecxz
mov
sub
pop
into
pop
movsl
push
ljmp
daa
jbe
mov
lods
xchg
lods
shlb
jns
lods
outsb
push
cmpsl
add
pop
pop
roll
mov
call
adc
test
gs
mov
mov
mov
dec
adc
lods
dec
jle
bound
fsubl
jb
lahf
testb
out
push
mov
mov
jmp
mov
aaa
testb
add
jo
push
mov
xchg
lods
push
sti
push
or
mov
stc
cmpsl
xor
cmp
out
repz
cmp
mov
xchg
mov
das
jo
add
and
mov
jbe
mulb
jmp
adc
pop
popa
test
ror
fldt
lock
cmpsl
mov
in
fdivrs
and
sarb
ret
pop
pop
fmul
xchg
mov
and
jle
sub
jb
push
aaa
pop
loop
shrl
xor
inc
es
cmp
stc
in
or
and
dec
mov
ja
sahf
test
xor
jl
xchg
inc
aam
xor
sub
pushf
xchg
push
test
xor
test
or
clc
shlb
pop
adc
out
mov
cmp
inc
add
xlat
in
mov
and
shufps
mov
push
int3
roll
addl
bound
cmp
or
imul
dec
mov
push
mov
movsl
push
ret
pop
sbb
dec
lea
pop
aaa
cmp
fucomip
idivb
fucom
enter
dec
repz
pop
cld
daa
test
or
js
fidivs
cmpsb
std
push
or
xor
ss
out
fwait
test
fidivrl
mov
les
insb
dec
fwait
aas
and
les
orb
arpl
test
xor
ret
fsubl
mov
push
std
mov
not
das
mov
fimuls
stc
mov
push
pop
or
cs
pop
cld
cld
hlt
fisttpll
add
jnp
test
inc
test
ds
mov
xor
pop
push
int3
lret
or
ljmp
pop
jb
arpl
push
call
out
addr16
mov
rcrb
enter
rorl
mov
pop
sub
xor
xchg
xor
fcmove
push
lods
out
cmpl
test
or
insb
cmpb
movsb
inc
sbb
xor
sbb
push
cs
in
shrl
adc
lods
sbb
ret
push
std
jge
cli
ds
push
scas
pop
mov
pop
jp
cmpsw
mov
stc
inc
adc
roll
aas
mov
mov
pop
pop
shlb
std
dec
xchg
push
jmp
ret
lret
bswap
ret
jecxz
inc
in
mov
scas
pop
jae
popf
mov
sbb
mov
jae
hlt
icebp
push
mov
iret
rclb
mov
leave
aam
fcmovne
ret
push
xchg
xchg
xchg
repnz
inc
or
mov
je
mov
test
lds
dec
iret
adc
mov
stos
inc
xchg
push
aaa
jo
add
pop
push
inc
xor
inc
xchg
push
loope
je
scas
mov
or
mov
add
repz
push
mov
cmp
out
notb
into
sbb
sahf
scas
cmp
loopne
pushf
das
cmp
into
cmp
leave
ljmp
jnp
decl
add
movsb
jno
lcall
cmp
inc
js
rcr
jb
or
mov
subl
ror
and
lods
iret
rcrb
popa
jecxz
ljmp
loop
xlat
cmpsl
sahf
mov
sti
movsb
movsb
outsl
jbe
movsl
in
dec
ds
sbb
jge
cli
scas
mov
loop
outsb
mov
aaa
or
xchg
jo
in
scas
popa
xchg
out
mov
out
inc
jne
fnsave
or
cmp
test
cltd
pusha
cld
iret
dec
sahf
out
mov
jle
in
xchg
mov
xchg
pop
test
push
mov
xchg
add
lock
push
dec
gs
jl
in
mov
mov
enter
and
add
dec
inc
pushf
and
call
push
cmp
cmp
iret
cmp
loop
in
fmulp
ret
and
nop
fildll
fidivrs
repnz
xlat
out
scas
movsl
push
and
jne
int
pop
or
pop
mov
lea
mov
out
out
push
mov
lret
lock
add
add
pop
inc
mov
mov
ret
das
fcmovnbe
addr16
es
push
jo
fsubs
lcall
mov
push
push
outsl
fs
xlat
lahf
or
dec
lea
arpl
mov
pop
pop
jl
mov
push
fildll
pop
inc
bound
push
imul
cmpsb
xchg
repz
add
adc
imul
js
test
or
pop
filds
jg
stos
movsl
fstpl
fbld
mov
inc
enter
ffree
and
or
mov
pop
jo
mov
jb
cli
and
loope
and
or
push
lods
aas
push
sbb
add
aam
mov
dec
out
mov
sbb
aas
mov
mov
add
add
jle
jmp
inc
mov
data16
ss
xor
cltd
xchg
mov
hlt
scas
xchg
jmp
adc
leave
cmp
mov
ja
pop
sbb
pop
aad
jno
out
out
mov
daa
inc
jl
lret
stos
push
mov
scas
std
cmpsl
test
inc
hlt
cmp
mov
mov
dec
clc
fisubl
jnp
pusha
repnz
cmp
test
shr
inc
roll
pop
cli
addr16
pop
xchg
decb
xor
stc
iret
and
dec
rcr
clc
leave
iret
jbe
out
cmp
pop
jnp
pop
fwait
pop
in
mov
cmpsb
mov
ja
or
lret
add
or
fbstp
les
call
je
inc
dec
pop
pusha
test
les
cwtl
xor
mov
rcrb
lds
jecxz
xor
mov
popf
call
test
mov
inc
test
popa
int
pop
shrl
xor
lds
jne
sub
jp
jl
lods
outsb
cmp
jl
ficoms
jmp
inc
repnz
out
and
fiaddl
mov
stos
jno
adcl
mov
jae
add
push
rclb
jbe
and
shr
mov
fdivl
pop
cmpsb
push
scas
lods
dec
dec
scas
or
xor
jnp
add
dec
mov
mov
fistl
call
mov
jb
xor
outsb
add
lock
xor
aaa
and
mov
sbb
add
sub
or
fisubrl
lret
je
dec
adc
cmp
in
clc
rcll
sahf
ja
mov
sub
cld
subb
jg
cli
pop
push
inc
out
test
jge
push
ja
aad
mov
dec
pop
fwait
scas
dec
imull
xor
testl
out
fcoml
pop
xor
aam
mov
jl
add
call
cmp
lods
or
cmp
pop
pop
sahf
lods
cltd
push
popa
into
test
inc
jg
pop
loop
in
call
test
js
sub
das
inc
daa
xchg
push
and
cli
mov
int
mov
pop
enter
add
std
pop
push
push
mov
pop
lret
stos
js
ds
push
out
cmp
or
mov
mov
mov
mov
sub
lock
call
mov
cmp
inc
mov
repnz
ret
cmp
and
icebp
fs
fs
add
inc
push
mov
xor
mov
mov
sub
addr16
ss
mov
fs
adc
inc
es
test
leave
in
leave
js
sbb
out
gs
jae
lret
fsubs
fdivrl
je
sub
sub
dec
mov
clc
stos
sar
dec
in
clc
sbb
xchg
mov
xor
adc
adc
xchg
dec
sub
jmp
sub
mov
xor
mov
xor
xor
jg
call
das
xor
sbb
mov
mov
lcall
jp
cmp
adc
rclb
dec
ljmp
mov
push
lea
jno
jbe
sti
push
jle
mov
popf
shlb
dec
xchg
mov
push
je
mov
mov
aas
mov
push
outsl
ret
shr
jb
test
rcrb
fldcw
sub
mov
dec
scas
cmc
dec
icebp
mov
or
dec
push
insb
repz
fistpl
lret
or
xlat
push
dec
pop
jo
jno
nop
daa
cmp
mov
and
cmp
pop
mov
pop
sbb
jecxz
or
pop
cmp
int
mov
push
pop
mov
daa
mov
jns
add
icebp
int3
pop
pop
outsl
mov
aaa
popf
xor
cmpsl
dec
mov
fdivs
push
sub
cmpsl
addl
inc
jnp
mov
mov
stc
adc
pop
addr16
sbb
jns
in
rol
stos
arpl
scas
movsl
mov
jno
mov
inc
in
adcb
lcall
daa
mov
stos
pop
hlt
xchg
dec
andnps
push
outsl
hlt
repz
popa
lods
dec
xchg
scas
iret
in
adc
subl
add
out
iret
movsb
shrl
loopne
xor
sbb
cmp
ret
xor
inc
and
mov
push
out
mov
and
fidivrl
aas
push
mov
mov
jp
fcompl
push
dec
daa
mov
fcmovnb
stos
cmpsl
popa
fidivl
stc
in
rclb
push
cmp
dec
jae
pop
addb
cmp
aam
or
aam
inc
adc
xor
popf
xchg
push
shll
ljmp
mov
inc
push
stc
sbb
cld
rdmsr
faddp
fisubs
loopne
clc
mov
mov
shll
add
inc
icebp
nop
jnp
push
push
dec
mov
fxch
jo
jae
push
xor
mov
popf
scas
fstps
inc
cmp
lahf
mov
pop
xchg
daa
add
dec
mov
rcll
loop
lcall
sbb
loop
jnp
mov
pop
mov
pop
adc
pop
cmpsb
jb
pop
push
mov
ds
dec
xchg
insl
or
push
or
jnp
int
imulb
repz
insl
data16
clc
mov
sbb
jmp
gs
pop
lret
sti
mov
push
ss
dec
xor
pop
test
loopne
jbe
xor
xchg
xor
jg
call
add
dec
fists
lods
repz
psllw
pop
in
mov
mov
or
mov
xchg
pop
scas
sub
je
pop
movsb
sti
jb
xchg
adc
cmpsl
outsl
in
lret
je
ret
and
pop
xchg
orb
or
mov
inc
and
xchg
pop
cli
std
jb
mov
mov
pop
arpl
cmp
mov
sti
fdivl
fstpl
push
popf
xchg
mov
aas
popa
mov
mov
mov
cmp
mov
adc
mov
out
xchg
call
lahf
jmp
mov
xor
lds
dec
cld
sub
jp
mov
cmp
mov
push
fwait
clc
mov
test
gs
nop
out
lret
ret
fisttpl
fbld
nop
notb
mov
push
enter
mov
dec
add
push
roll
or
inc
in
inc
xchg
adc
xchg
insb
cs
push
orb
xchg
and
test
lahf
sbb
mov
out
orl
aam
mov
inc
fnsave
test
cmc
jmp
sub
bound
neg
rcrb
pop
cmpsl
popf
push
cmp
sub
xchg
sbb
inc
test
jg
pop
and
xor
ret
lock
mov
jo
xchg
pop
pop
ret
jae
das
cld
int
sub
inc
inc
iret
mov
aaa
popf
xchg
xchg
push
lahf
xchg
pushf
and
mov
sti
aaa
add
adc
mov
mov
xchg
imul
mov
cmpsb
pop
andb
adc
int
mov
sbb
pop
sti
push
imull
movsb
movsb
movsb
jp
dec
cmp
lock
movq
insb
rcll
jb
das
or
push
outsb
xchg
cli
into
jne
fwait
inc
mov
or
mov
sub
cmp
dec
pop
outsb
sub
loop
sub
mov
in
loop
test
pushf
pop
cmp
into
fistps
das
xchg
ret
scas
inc
lock
pop
inc
rolb
lret
std
push
ja
xchg
push
in
lods
cmpsl
pop
adc
int
mov
pop
sti
or
push
xor
sub
cltd
cmp
rcrl
std
lret
xor
cs
mov
pop
cmpb
sti
jp
sbb
cmp
inc
fidivs
stc
sbb
into
movsb
xlat
push
js
jge
xchg
data16
das
leave
mov
arpl
adc
js
lret
dec
mov
out
push
dec
ficoml
mov
adc
pop
sbb
jb
mov
movsl
inc
and
pop
pop
jno
lods
xchg
jae
cli
jg
pop
push
dec
lods
push
ja
jg
js
ljmp
sbb
dec
stc
cmp
xchg
jmp
aam
push
andl
out
int
and
push
in
movsl
sbb
lret
jb
out
fisubrl
pusha
mov
daa
or
ret
cmp
popf
jecxz
pushf
repz
adc
xor
int
sarl
call
adc
push
sbb
clc
mov
inc
inc
mov
in
into
sub
pop
dec
cmovae
sti
scas
jb
mov
cwtl
add
ljmp
xor
xor
xor
verw
lods
pop
mov
sub
ret
lcall
subl
mov
in
mov
push
cmp
and
js
inc
xchg
js
inc
lods
pop
cmp
cmp
inc
mov
icebp
leave
hlt
jge
add
repnz
mov
lcall
fsubrs
fwait
inc
iret
cwtl
sbbl
mov
std
mov
cmp
pop
dec
addr16
cld
mov
push
cli
outsl
fisttps
icebp
les
add
je
movsl
cmp
adc
in
mov
ret
pop
sahf
sub
sub
or
das
jl
cs
sbb
cmp
lods
jl
shlb
ftst
sbb
ss
scas
int
cmpsl
out
xchg
pop
in
cs
cmp
mov
sbb
and
adc
dec
push
inc
in
rol
scas
fsts
mov
jno
outsb
dec
mov
int
sbb
xchg
rclb
inc
addr16
das
adc
icebp
mov
mov
xor
je
call
mov
xchg
sbb
stos
push
jmp
mov
in
gs
cmp
pushl
pop
lcall
push
xchg
enter
movsl
test
xlat
lahf
sub
lods
cmp
das
inc
fidivrs
nop
pop
push
es
lret
mov
jo
xchg
sub
int3
mov
adc
fwait
in
in
xchg
inc
push
cmpsb
add
sahf
mov
daa
push
es
add
xchg
clc
mov
std
cmpsb
add
mov
outsl
daa
mov
int3
inc
dec
pop
sub
imul
mov
push
addr16
popa
test
outsb
mov
sbb
inc
xor
in
and
mov
lock
jno
xchg
xor
popa
cs
push
repz
mov
ret
scas
mov
scas
mov
outsl
xchg
jne
mov
adc
lahf
clc
push
sub
sub
jp
mov
dec
lcall
sbb
push
scas
cmp
ret
movl
pushl
push
push
push
rcll
rorb
pop
fldcw
rcr
shl
stc
jne
sbbb
push
popf
lea
cmp
push
push
push
shl
push
sbb
push
mov
jl
mov
loopne
or
in
xchg
in
xchg
and
fwait
popf
mov
pusha
xchg
adc
sbb
std
xchg
pop
out
hlt
push
pop
cld
cmp
push
mov
hlt
xchg
lcall
lea
andb
int
cmp
mov
jge
call
fldt
mov
or
add
pop
incb
or
std
mov
je
addl
sub
sarb
xchg
subl
mov
xor
mov
or
and
dec
fstpt
cltd
adc
fs
dec
or
dec
popa
xchg
jmp
dec
das
or
push
cld
push
add
jns
pop
fwait
in
shlb
inc
dec
lods
pushf
lret
mov
sub
loope
jne
mov
push
or
cmc
cld
mov
std
jp
jl
sub
pushf
int3
rolb
pop
clc
aaa
out
sub
movsl
imul
mov
out
mov
push
dec
pushf
idivb
jns
and
pop
test
push
sub
popf
jp
fidivs
xor
fcoml
loopne
mov
ss
in
mov
sahf
cmpsl
fistpll
test
push
pop
jp
cld
js
dec
jns
mov
outsl
xchg
cli
pop
cli
je
sbb
mov
or
movsb
test
pop
jne
cmp
jg
push
fldcw
xor
sarb
mov
jp
fdivr
and
fldl
iret
jno
outsl
pop
lcall
xchg
xchg
in
loope
mov
ret
stc
xor
aam
sbb
mov
aam
cmpsl
inc
ret
jg
sbb
aad
fidivrs
lds
pop
aad
jmp
out
sub
js
cli
inc
mov
outsb
jp
pop
jo
cs
sub
in
rolb
mov
pop
lcall
add
hlt
roll
xchg
decl
sbb
jns
sbb
daa
jnp
aad
push
mov
cmp
ret
scas
shlb
loopne
orb
aaa
xchg
mov
jecxz
iret
pop
mov
adc
aad
cltd
daa
xlat
ror
in
cmp
inc
sub
cmc
mov
dec
loopne
and
xorl
iret
jp
push
inc
pop
push
mov
inc
and
test
sub
aad
subl
adc
jno
dec
pop
in
ret
fiaddl
xchg
rorl
mov
xchg
aam
movsb
mov
leave
sbb
push
lock
inc
fstps
insb
lods
push
sahf
jl
fisubrs
sahf
fistps
test
adc
adc
lods
pop
dec
mov
outsb
fidivrl
mov
call
inc
addl
and
push
jno
and
arpl
in
scas
movsl
addr16
icebp
jne
mov
in
pop
out
fcmovu
jle
push
mov
fs
mov
ja
xchg
int
mov
cmp
outsb
daa
ja
cli
out
and
test
repnz
cltd
jae
in
xchg
xchg
mov
ret
imul
cld
and
sbb
test
in
cmp
cs
clc
aad
ficomps
xchg
xchg
mov
popa
pop
mov
insl
xchg
jno
fistps
int
pop
sbb
cmp
adc
sbb
mov
mov
xor
in
testl
add
lret
out
mov
xor
cmp
cmp
repnz
mov
ss
add
or
subl
jmp
inc
adc
xor
cmc
push
dec
lret
js
jno
adc
mov
mov
nop
dec
fidivrl
jns
loope
lret
inc
xchg
movsl
cmc
sbb
dec
sti
xchg
adc
aam
cmp
gs
lret
shrb
adc
outsb
insl
in
pop
mov
ljmp
and
dec
in
gs
andb
outsl
imul
imul
icebp
xor
sbb
jge
bound
int
popf
testl
bound
arpl
cmp
mov
xor
fdivrl
dec
jge
ja
xchg
lret
mov
xchg
push
pop
sbb
sub
inc
out
dec
inc
jecxz
push
call
xlat
imul
shl
std
xor
rcrl
jo
rcr
push
xchg
push
rorb
sbb
daa
stos
aad
inc
mov
repz
mov
mov
xchg
jl
mov
adc
xchg
adc
rorb
flds
shr
jle
aaa
inc
sub
popf
ja
test
pop
inc
cmp
add
invd
sub
fisubrs
cmp
fwait
add
daa
cmpsl
add
sbb
ret
pop
out
push
xchg
xchg
addb
fnstsw
es
xchg
std
cwtl
insb
mov
lea
xchg
loop
aas
add
or
adc
idivb
out
lret
loopne
jmp
ljmp
mov
je
lret
add
leave
cmp
mov
je
cmpsl
push
mov
daa
inc
cmp
stos
popa
popf
push
loop
push
cld
inc
rcrl
leave
cmpsb
cltd
pop
adc
ret
dec
inc
mov
ljmp
pop
dec
lea
and
xchg
in
add
lret
dec
in
dec
xor
popa
inc
addl
cltd
push
loop
push
push
adc
xor
sub
cwtl
xor
lock
push
iret
leave
out
fbstp
imul
jle
test
xchg
push
outsl
sbb
test
push
rolb
adc
mov
add
clc
fdivs
out
mov
xchg
inc
repz
add
inc
mov
mov
ds
je
mov
subl
pop
adc
imul
xlat
cmc
jle
add
gs
lods
jb
mov
xchg
mov
mov
rcrb
inc
pop
mov
cld
jge
in
cmp
mov
jae
mov
addl
std
adc
pop
jle
cltd
outsl
push
sysexit
dec
pop
dec
mov
inc
outsl
dec
push
cmpsl
push
push
pop
hlt
test
cmp
pop
sbb
sub
rorl
mov
and
test
push
je
pushf
mov
lea
stos
pop
repz
test
roll
pop
repnz
mov
push
xbegin
xchg
loope
test
fistl
push
inc
rol
cld
jg
and
dec
pop
dec
cmp
xchg
adc
dec
lahf
or
inc
inc
clc
pop
dec
mov
lret
xor
sbb
cli
mov
xchg
aas
fwait
aad
xor
sbb
mov
push
jge
or
sub
scas
pop
js
or
jecxz
sub
rcll
in
outsb
mov
push
repnz
mov
movsl
mov
stos
loope
call
dec
or
shll
dec
shr
fwait
push
and
divl
and
mov
mov
push
rorb
push
push
hlt
adc
in
sbb
xchg
push
andl
mov
std
test
sub
idivb
test
pop
add
sub
scas
call
test
addb
out
adc
jmp
sbb
sbb
out
pop
jecxz
pushf
and
aam
std
xchg
popa
pop
xchg
jg
icebp
sbb
repz
push
jb
mov
in
aam
test
scas
add
sub
fmul
mov
mov
test
jmp
fsubs
mov
xchg
pop
mov
pop
out
xchg
cmp
pop
sub
adc
repnz
xor
lods
mov
loop
fs
pusha
std
inc
pop
xchg
jmp
in
test
test
cmp
inc
scas
into
ret
fldt
jg
inc
fiaddl
xchg
movsb
xor
clc
cltd
repz
push
int3
punpckhwd
stc
and
daa
cmp
or
int
cmp
cmp
nop
mov
add
dec
fcmovnbe
ljmp
sbb
push
and
jp
sub
out
mov
out
jns
pop
and
jmp
ficomps
cmp
push
mov
sub
fmulp
fsubl
stos
pop
stos
inc
test
dec
mov
sub
aad
stos
mov
or
daa
mov
dec
cmp
cmc
fsub
xor
dec
add
mov
call
sub
push
ja
jle
outsl
dec
or
jmp
in
mov
cmpsl
dec
mov
pop
shlb
test
add
inc
cld
sub
mov
mov
js
clc
icebp
mov
mov
cmp
sub
mov
jns
or
sub
xchg
sti
lea
xchg
lahf
add
cld
pop
fcoms
cmp
sarl
fdivp
xchg
cmp
les
out
push
loop
and
in
std
cmp
cwtl
cmp
adc
sub
sub
sub
lods
ljmp
or
fadds
push
std
test
ss
sbb
lods
insl
cmp
adc
sbb
testl
jmp
movsl
add
lds
icebp
mov
dec
mov
adc
mov
push
sahf
out
jmp
cmp
test
or
js
loope
mov
enter
jle
sbb
adc
inc
in
dec
cmpb
lods
push
neg
or
dec
ret
mov
xor
les
jns
dec
clc
lods
clc
loopne
pushf
sub
mov
fwait
test
mov
sar
icebp
xor
repz
xchg
cmp
shlb
jns
mov
mov
enter
fisttpl
or
push
or
dec
imul
xchg
out
adc
pop
movsb
test
ficoml
cld
cs
mov
push
into
jg
inc
cmpsl
dec
aas
lret
mov
inc
pusha
loop
pop
xchg
xchg
in
test
imul
nop
xchg
pop
leave
sub
pop
xor
out
les
cmpsl
clc
and
pop
adc
fmull
and
jb
dec
addr16
idivl
js
shrl
mov
push
dec
jmp
xchg
gs
add
mov
adc
aas
mov
adc
cmp
push
clc
cmp
inc
add
sbb
andb
pop
cmp
and
xchg
jo
je
es
es
jns
pop
inc
les
lcall
stos
lret
testb
add
ljmp
lea
sub
mov
xlat
jle
adc
jge
pop
add
cs
popf
cmp
xor
and
adc
pop
cli
loop
lret
and
aam
std
loopne
js
push
cmpsb
pusha
pop
inc
push
testb
jge
movntps
jns
adc
dec
ds
lods
lds
adc
in
ret
aas
or
fcomps
stos
loopne
imul
adc
inc
xlat
pop
add
sarb
loope
jp
pop
icebp
test
das
sbb
sti
pop
and
imul
adc
ret
mov
xchg
push
loopne
sub
andl
mov
shrb
stc
out
out
pop
pop
and
sahf
sbb
xchg
push
pop
pop
jg
in
into
rcll
or
push
inc
lods
dec
push
fld1
xchg
movsl
dec
xor
push
sub
fisttpl
sbb
push
mov
int
mov
or
in
sub
mov
int
and
orb
xor
jle
cmp
icebp
pop
sbb
cvtps2pd
xchg
outsl
inc
bound
pop
push
push
test
or
pop
scas
or
inc
xchg
xchg
xor
mov
ret
lods
cmc
push
push
cmpsl
mov
cmp
jae
add
in
xor
mov
sbb
pop
mov
out
add
xchg
or
lds
mov
xor
inc
imul
inc
inc
lods
test
xchg
xchg
insb
dec
dec
or
lds
jecxz
popf
leave
dec
xor
sbb
scas
sbb
rol
aaa
dec
dec
and
imul
cmpsb
aam
fdivrl
inc
fdivs
jbe
push
push
push
fisttps
cltd
push
loop,pt
xor
fcomps
push
or
sahf
or
mov
lds
jle
and
aam
hlt
rclb
mov
aas
and
mov
sbb
or
sbb
pop
scas
nop
adc
push
mov
shlb
cmp
loopne
call
scas
aad
xor
aad
shlb
cmp
pop
sbb
pop
scas
lret
push
mov
js,pt
inc
cmpsl
dec
sub
cmp
out
push
lds
fs
xor
dec
iret
les
psrlw
mov
pop
aaa
lret
aaa
jae
fwait
or
shrl
jg
xlat
addb
lcall
mov
xor
mov
std
mov
cld
dec
test
mov
mov
inc
sub
inc
cmp
cmovg
inc
push
outsl
push
xchg
adc
push
cli
sub
mov
and
in
ljmp
cmp
scas
pushf
cmp
idiv
push
icebp
push
push
jbe
push
decl
push
xor
xchg
pop
push
les
cld
rclb
mov
mov
stos
mov
inc
call
fwait
xchg
xlat
cs
outsb
mov
and
dec
xor
or
loope
arpl
clc
jp
movsb
and
ret
or
pop
loope
xchg
insb
in
adc
pop
loopne
jno
fsubrs
jmp
xchg
inc
inc
test
jno
and
xchg
rcr
pop
ficoml
mov
dec
cltd
in
lcall
outsl
mov
push
jmp
push
mov
jp
sbb
andnps
xchg
mov
sti
or
pop
les
xor
push
xchg
xor
popf
iret
add
notl
xchg
cmp
cli
fisubrs
xor
jns
cmpsl
lcall
mov
jge
bsr
scas
jge
and
jo
adc
xchg
nop
mov
push
or
ljmp
imul
and
pop
and
pop
int3
out
lods
mov
jbe
sbb
xor
and
lods
dec
and
andl
fwait
mov
cld
ret
sbb
inc
testb
out
lods
push
add
aad
adc
pop
stos
dec
add
sbb
jo
cmpsb
mov
sub
imul
lret
leave
xor
dec
dec
cltd
divb
adc
scas
pop
mov
imul
adc
sub
inc
in
les
ja
fistpll
pop
dec
and
lret
adc
inc
sbb
cmp
incl
cmp
or
add
movsb
sbb
xchg
pop
push
mov
cmp
loopne
and
or
pop
xlat
push
mov
into
lea
pop
xchg
test
inc
call
cmp
daa
imul
outsl
outsb
pop
dec
lahf
jecxz
stos
dec
fstps
pop
icebp
pop
add
xlat
in
xor
sarl
dec
movsb
insl
das
add
int
das
out
mov
and
sub
dec
xchg
sub
pop
xchg
mov
xor
movsl
into
mov
cmpsb
sub
push
pop
xchg
push
jnp
cmc
push
fsubrl
sub
insb
inc
xor
jb
push
out
and
aaa
test
cwtl
repz
mov
ror
test
int
jbe
adc
mov
and
lock
inc
sti
push
cwtl
shrb
jmp
cmp
imulb
dec
stos
popa
in
adc
sbb
sarb
or
test
stos
push
rorb
cmc
xchg
lahf
sbb
mov
incl
shrb
mov
repnz
cwtl
enter
pop
xchg
mov
stc
sub
lock
aas
dec
xchg
xchg
or
push
mov
adc
dec
mov
lret
push
mov
int3
test
mov
jae
cmp
popa
xchg
test
cmp
dec
and
xchg
shr
in
ja
dec
das
adc
mov
test
and
out
sbb
inc
pop
jge
push
jo
cmc
pop
daa
xchg
jecxz
add
xor
outsb
adc
dec
dec
mov
iret
adc
sbb
pushl
cmp
fwait
jns
mov
cld
int
movsb
mov
fldcw
arpl
jle
clc
mov
pop
cs
push
jecxz
jne
lret
fadds
pushf
test
dec
je
push
pop
cmpsb
icebp
test
xor
cmp
rep
std
jb
ss
popf
js
mov
mov
push
cmp
stos
icebp
xor
fdivrl
mov
psubusw
inc
fstpt
cmc
jno
mov
and
pop
cwtl
fstpt
arpl
xlat
xchg
fimull
mov
inc
xchg
gs
testl
imul
mov
popf
adc
inc
addr16
lea
mov
pop
push
jp
rol
inc
das
jns
enter
arpl
ljmp
gs
mov
sahf
xchg
sbb
lock
out
push
out
cmc
xchg
cmp
sbb
lcall
out
mov
out
je
dec
adc
ret
divb
sub
cmp
inc
cmp
rcr
mov
das
daa
xchg
cmp
push
and
pop
das
loop
push
pop
and
xchg
push
daa
sub
mov
dec
dec
or
lret
fnstcw
imul
add
data16
mov
rcll
sti
pushf
pop
aad
sub
pop
rcrb
xchg
inc
out
jno
outsl
in
inc
scas
ja
adc
test
sbb
mov
ret
dec
repz
imul
sub
push
dec
sub
add
sub
sub
xor
stos
and
pop
insb
push
fiadds
jmp
mov
dec
iret
js
es
push
aad
cmpb
adc
outsb
push
cltd
nop
idiv
sbb
ret
rcrl
aam
loopne
mov
jns
pop
jg
jle
fildll
xlat
sbb
adcl
aaa
mov
das
push
bnd
pop
movsl
lret
pop
sahf
fdiv
inc
mov
mov
fstpt
std
xchg
repz
repz
fscale
push
inc
rorl
leave
mov
adc
push
inc
mov
stc
cmp
fcmovbe
mov
cltd
inc
jnp
clc
inc
jo
daa
sbb
loopne
in
push
or
sub
push
cmp
sti
cs
push
imull
out
stos
inc
or
sti
rcll
pop
bound
daa
sbb
movnti
dec
push
xchg
orb
inc
daa
sbb
nop
cwtl
sbb
rolb
pop
fsubl
in
adc
cmc
mov
call
cmc
repz
jl
frstor
ss
jp
es
cmp
jg
stos
pop
fadd
lcall
pop
popf
push
mov
call
mov
leave
outsb
stos
into
mov
adc
xchg
pop
iret
lods
std
sarl
pop
rcrb
clc
icebp
imul
pop
mov
cli
or
sbb
inc
je
out
jge
test
sub
or
adc
xor
or
subb
dec
mov
mov
pop
jle
adc
scas
jp
stc
lock
jge
gs
test
dec
inc
and
pushf
xor
rcr
fiadds
in
mov
arpl
inc
popf
iret
addr16
lahf
std
arpl
mov
in
out
adc
fsubrl
sub
lods
push
push
sti
mov
mov
lcall
into
scas
insl
iret
mov
jmp
pushf
jo
es
clc
sub
cltd
xlat
sahf
adc
shrb
fst
outsb
loope
data16
push
push
push
dec
mov
sahf
lret
mov
lods
xchg
jge
pop
pushf
adc
cld
dec
cli
test
jp
pop
and
data16
and
pop
lahf
rorl
jbe
xorb
jns
mov
lcall
insb
ja
jb
dec
or
stos
jg
sbb
fldl
das
test
dec
leave
outsb
jae
pop
xlat
ljmp
cld
push
shlb
cmp
lock
xchg
je
rep
test
mov
cmp
movl
cwtl
dec
bound
mov
jb
ja
out
cmp
pop
pop
xchg
dec
add
repnz
fldt
push
or
dec
lret
test
cwtl
pop
int3
sub
out
in
cmp
sub
imul
scas
in
cmp
into
cld
sahf
loop
in
mov
pop
mov
cmpsl
sub
cmp
pushf
mov
or
roll
test
and
push
stc
insl
mov
and
adc
pop
mov
push
mov
cwtl
aas
or
xchg
mov
mov
mov
fidivrl
cmp
mov
cltd
test
adc
or
adc
add
cmp
cmp
nop
and
fs
mov
mov
in
mov
shll
les
cmp
mov
fwait
enter
pop
sub
jg
popa
pop
sarl
mov
lea
loope
int3
xorb
add
jg
bnd
or
fs
mov
or
lods
aas
dec
shl
add
push
lahf
xor
subb
icebp
lcall
stos
mov
push
out
jns
pop
sub
jnp
imul
push
aas
mov
or
mov
and
imul
dec
rorb
push
push
pop
lahf
pop
mov
push
bound
in
lret
test
inc
add
add
jno
sbb
add
and
pop
jno
dec
sub
sub
imul
add
hlt
repnz
push
push
push
sbb
jmp
div
dec
pop
das
jne
xchg
lret
daa
icebp
push
mov
cltd
xlat
and
fcmovne
and
roll
jp
xor
in
add
jae
aas
in
jne
cmc
sub
inc
jo
stos
insb
inc
cmp
mov
jge
sahf
cmc
pushf
inc
sbb
femms
into
mov
sbb
das
and
xor
sbb
mov
stos
xchg
inc
inc
pop
bound
jne
pusha
leave
outsb
pop
xchg
lret
jl
pop
dec
xor
pop
and
repnz
out
xor
repnz
xchg
mov
les
inc
xchg
mov
loop
pop
inc
loope
aaa
or
test
cmp
cmpl
sub
jge
inc
mov
cld
pop
fs
jge
in
aas
xor
imul
cmp
int
mov
outsl
inc
shrb
or
addr16
inc
test
mov
dec
lods
les
in
sub
scas
inc
sbb
or
add
js
cmpsb
pop
aam
pop
jp
xchg
mulb
pusha
xor
stc
into
push
xchg
imul
push
jp
loope
mov
push
mov
cmc
mov
sar
sahf
stos
je
jmp
xlat
stos
dec
rorl
pop
shrl
daa
das
faddl
inc
das
cmc
loopne
push
adc
cld
dec
pusha
inc
push
pop
insb
inc
xchg
sbb
scas
addb
dec
and
mov
outsb
mov
out
push
xchg
jle
repz
or
lret
iret
data16
pop
imul
or
mov
mov
adc
jl
sbbl
mov
push
xor
fistpll
cmp
jae
out
enter
xchg
aas
outsl
or
add
lods
mov
dec
cmp
xchg
jno
and
daa
sub
dec
push
sub
shll
sahf
push
lock
lods
daa
push
jbe
push
addr16
gs
mov
and
add
xchg
or
sbb
mov
sbb
ss
cmp
enter
jo
jge
cli
ret
enter
fisttps
jae
ret
xor
icebp
repz
mov
push
push
cmp
add
iret
loopne
insb
xor
pop
lock
repnz
in
aad
mov
scas
cltd
mov
mov
and
scas
adc
in
loopne
add
cli
int3
jb
sbb
xor
fs
insl
or
stos
xchg
xor
fiadds
jns
fldenv
mov
add
arpl
ja
and
push
das
and
fmulp
das
cmp
mov
fsubl
lods
adc
scas
jp
in
pop
sqrtps
addr16
popl
mov
loop
jb
lret
jl
push
or
fisubl
xchg
sbb
add
into
sbb
and
mov
out
and
or
cmpsl
xchg
inc
cmp
sti
mov
lahf
mov
sbb
sub
mov
sti
xor
ja
fistpll
out
mov
ret
jl
sbbb
inc
xchg
dec
addr16
mov
dec
roll
add
loop
jo
movsb
adc
aam
fcomip
lcall
jmp
jne
mov
xchg
sub
frstor
mov
cs
faddl
mov
inc
stos
sarl
inc
inc
popf
imul
push
pop
orl
adc
pusha
ss
out
jns
xchg
or
adc
add
dec
aaa
and
bound
daa
popf
jmp
jge
push
es
sub
pop
jb
out
test
fs
in
loope
cwtl
repnz
jno
sbbl
mov
test
cmp
push
jmp
daa
out
ja
mov
pop
jb
adc
iret
mov
mov
shlb
sbb
mov
cltd
scas
in
jbe
xchg
xchg
insl
or
mov
es
fs
testb
jns
sbb
xchg
add
sbb
jmp
lahf
movsl
and
mov
aam
mov
pop
push
xchg
idiv
fldt
fcmovne
je
mov
arpl
out
sbb
xchg
adc
or
addr16
and
stc
jge
jmp
stc
and
iret
or
adc
rcrl
xorl
iret
xchg
call
fdivs
std
adcb
arpl
decl
mov
lods
dec
test
sbb
aad
cmp
sarl
test
pushl
out
sbb
mov
in
lods
dec
xchg
rorb
ljmp
lahf
test
cmp
in
pop
push
dec
and
sub
push
lods
int
cmp
sbb
pop
in
cmp
stc
pop
and
and
inc
sub
ljmp
mov
inc
sbbb
pop
test
adc
mov
jne
xchg
aam
lods
repnz
mov
fs
add
rcrl
shl
dec
cs
jno
movsl
enter
and
repz
jns
dec
lods
mov
add
mov
shlb
or
call
mov
jmp
xchg
outsl
les
add
xor
push
loope
pop
mov
ds
cltd
arpl
or
add
fbld
je
jbe
in
loope
jmp
fs
scas
int3
adc
pusha
out
xchg
jb
aam
add
mov
fdivl
les
in
enter
ror
pop
in
outsl
rcl
stc
dec
add
xlat
dec
pop
outsl
jge
mov
sbb
pushf
cmp
daa
push
inc
popa
push
dec
outsb
add
sbb
xchg
inc
test
jp
xor
adc
or
inc
fstp
rolb
sbb
fdivp
adc
and
mov
mov
jmp
and
mov
cltd
jnp
xor
nop
add
xlat
push
mov
rep
cmp
je
lods
lahf
mov
mov
cltd
rcrl
mov
mov
iret
aas
jae
imul
xchg
cwtl
xor
insl
mov
dec
jge
hlt
pusha
add
popf
push
xor
lea
adc
movsb
pop
sbb
fists
sub
ljmp
xchg
cld
jecxz
loope
sbb
xchg
and
adc
jae
je
sbb
movsl
jb
jo
in
stc
in
mov
mov
and
mov
pop
xor
sti
pop
mov
fwait
orb
getsec
xor
jl
mov
aas
add
movsb
mov
in
xor
loope
enter
out
and
jmp
fs
sbb
mov
in
inc
pusha
mov
add
add
xor
pushf
sbb
cmpl
mov
lods
mov
cmc
jmp
inc
sub
mov
or
cmp
pop
add
lods
ret
and
pop
xchg
lret
mul
push
aaa
fcompl
sub
dec
imull
mov
lea
mov
push
pop
insl
add
add
std
aaa
xchg
sbb
jnp
out
xchg
push
jno
xchg
add
jo
push
sub
mov
jae
leave
xor
aas
je
adc
test
outsl
ds
mov
aad
cmp
add
cmp
xchg
xor
dec
lret
in
jecxz
lea
push
dec
jns
cld
lret
push
stc
cmp
or
cmp
jns
adc
in
mov
fstps
mov
loop
dec
push
aaa
lahf
dec
sbb
mov
mov
out
xor
mov
mov
sub
inc
int
les
push
mov
jmp
mov
sbb
popa
sub
xchg
loope
outsb
je
push
notl
or
inc
or
jge
mov
je
int3
add
rcr
xchg
and
mov
scas
popa
push
adc
adc
push
sub
arpl
cli
loop
nop
fnstcw
push
ljmp
popa
push
mov
lret
jae
stc
ds
pop
xchg
mov
mov
push
sti
cmp
ret
push
movsl
push
into
pushf
repnz
push
mov
cmp
push
pop
jge
stos
in
fcmovne
aas
mov
cmp
dec
xor
jns
push
jge
sbb
sar
adc
and
js
int
mov
les
jns
jmp
xor
and
cmpb
jg
ret
mov
mov
sbb
fs
dec
adc
outsb
scas
cwtl
and
fldcw
push
movsb
mov
jo
pop
inc
cld
mov
pop
insl
into
int3
mov
pop
in
jg
pop
push
push
xchg
adc
and
lcall
sar
ds
sub
xchg
scas
out
movsl
test
sarb
fwait
out
in
hlt
mov
shrw
jns
jmp
fsubs
notb
jne
push
and
cltd
xchg
mov
push
dec
dec
popa
out
push
xlat
call
in
xor
dec
xchg
pushf
je
sub
push
mov
out
sub
mov
xchg
xor
test
sub
inc
sbb
add
fnsave
rcll
adc
addr16
adc
push
mov
xorl
adc
pop
push
xlat
adc
cmp
ficoms
sub
cmpsb
hlt
push
or
cmpsb
xorl
sub
jne
repnz
inc
je
xlat
cmp
incb
fistps
push
adc
or
test
lahf
or
lret
cmp
mov
lret
jmp
in
cli
and
push
xchg
mov
aaa
mov
imul
lret
push
and
dec
out
push
mov
aam
push
jmp
in
fildl
push
mov
loop
cmp
sbb
mov
mov
xorb
and
out
dec
lods
pushf
leave
mov
fldt
fsub
das
fs
cmp
dec
and
lea
jae
sbb
xchg
aam
xchg
fidivrl
js
aam
daa
repnz
sub
pop
cmp
jge
cmc
cs
mov
mov
push
dec
push
pop
jnp
xchg
shrb
enter
pop
fs
sbb
movsl
xor
dec
jno
or
insl
lock
or
pop
push
jo
cmp
ds
pop
roll
sub
jmp
test
mov
in
ss
mov
jno
aaa
into
scas
repnz
xchg
popl
ror
jmp
cld
mov
in
xchg
rcl
repz
js
aaa
jo
lahf
leave
pop
pop
dec
mov
or
lods
repz
sbb
faddl
dec
mov
pop
rcll
rcr
adcb
test
push
push
shrl
cmp
push
test
aam
addb
inc
sub
jge
stos
xchg
out
dec
mov
xchg
adcb
xor
sbb
popf
cmpsl
jo
js
or
dec
cs
pop
or
movsl
test
and
lahf
in
jp
lret
jg
into
orl
mov
and
pop
out
pop
xchg
nop
jg
inc
fcompl
jg
lahf
sahf
addr16
in
mov
adc
fnstsw
mov
loope
push
xchg
xchg
in
and
mov
push
test
hlt
sahf
mov
iret
lcall
into
rorl
insl
add
shll
test
jne
mov
popf
push
repnz
icebp
xchg
mov
xor
mov
mov
mov
jnp
cwtl
call
push
popf
cmp
or
lea
inc
jnp
jge
das
jne
mov
cmp
aam
push
popf
mov
enter
mov
inc
fsubl
imul
jl
pop
mov
dec
push
inc
inc
pop
pop
cmp
xchg
sbb
out
repz
into
fcompl
rcll
pop
pusha
pop
cli
xchg
or
jns
sbb
leave
nop
pop
sub
movl
mov
pop
andl
jge
aam
in
imul
pop
sarl
inc
dec
or
jmp
xchg
pop
daa
insl
or
adc
mov
stc
inc
xlat
fisttpl
cmc
in
nop
cs
shll
lods
lods
outsb
ror
pop
or
mov
sub
push
dec
invd
xchg
jns
cld
cmpsl
clc
ds
adc
dec
xchg
push
xor
shrb
ret
jne
sub
aaa
jnp
sub
and
in
ds
cmpsl
add
sbb
in
into
inc
call
fwait
mov
inc
testl
cmc
mov
and
cmc
dec
inc
sbb
aam
xlat
rcrb
jno
and
inc
notl
or
ret
aad
repnz
idivb
xchg
pop
and
testl
inc
sti
pushf
es
mov
cmpsb
daa
rorb
outsb
dec
xchg
xor
xchg
cmp
clc
stos
adc
xchg
leave
dec
js
stos
int
xor
mov
imul
lea
stc
add
pop
push
lods
or
jecxz
test
dec
mov
lcall
lea
xor
mov
sahf
jns
lods
fstpt
mov
or
loop
icebp
xchg
call
xchg
out
fldcw
push
stos
xor
scas
xchg
add
aaa
and
mov
mov
mov
sub
cld
mov
insb
out
sbb
jne
mov
adcb
scas
or
adc
inc
mov
and
mov
insl
ja
ds
cwtl
push
repz
call
nop
lock
loopne
add
add
dec
test
int3
inc
push
add
lcall
mov
mov
add
popa
outsb
fmul
jge
scas
push
xor
dec
sti
std
cmp
sub
xchg
mov
jg
divl
or
imul
mov
lock
or
xchg
aad
inc
pop
lahf
push
popa
fcmovb
add
cmp
ljmp
pop
in
pop
loope
push
in
addl
mov
divl
jge
pusha
icebp
inc
jmp
js
sbb
sub
cltd
andb
xor
out
fs
add
add
dec
cmp
mov
cltd
jb
test
xor
sbb
lds
or
ror
imul
pushl
mov
shrl
xchg
mov
jne
call
mov
pop
test
jo
addl
jmp
add
push
pusha
ret
gs
and
mov
pusha
addr16
cmp
loop
or
sub
aad
jl
ljmp
dec
pop
cmpsb
les
pushf
push
xchg
cli
in
mov
je
push
pop
dec
shlb
repz
mov
push
mov
stos
data16
cmp
mov
mov
xor
mul
jo
or
pop
push
sub
andb
ficomps
lds
push
imul
aad
sub
cmp
loope
push
add
jne
pop
pop
mov
cli
push
and
inc
sti
inc
mov
cli
ds
mov
sub
flds
out
std
insb
fcmovne
pop
pop
sbb
popa
sti
push
push
into
dec
dec
loopne
cmpsb
pop
sahf
add
add
out
fidivs
test
xlat
aam
xor
pop
cld
xchg
mov
cld
test
mov
ret
push
sbb
pop
pop
dec
outsl
push
mov
aas
xor
pop
shrb
in
insb
iret
rcrl
out
movsb
mov
in
insl
stc
pop
mov
xchg
xchg
inc
jmp
faddp
mov
rorb
adc
cmc
pushf
pop
lret
mov
add
and
fildll
dec
dec
xor
test
in
jnp
sarb
addr16
jecxz
jb
ret
adc
sbb
aaa
xchg
outsl
push
xchg
out
pop
addr16
mov
inc
lods
mov
inc
mov
lcall
addb
jb
aad
lock
fldcw
push
pop
in
mov
dec
test
rclb
adc
jno
mov
insb
mov
mov
aaa
int3
insb
sub
shrl
rcrl
rolb
xor
mov
mov
ja
pop
pop
add
lds
inc
in
inc
pop
jb
pop
mov
jns
sub
enter
jmp
and
int3
push
add
xchg
sarb
adc
cmp
cli
std
dec
hlt
test
lock
imul
cmp
repnz
iret
jp
add
pop
loope
pop
divl
xchg
xor
inc
cld
jae
sbbb
orb
loope
xchg
in
bound
push
sbb
cmp
xor
stos
xor
lret
pop
testb
and
cmp
shl
xor
add
sub
cmp
dec
mov
sahf
pop
cmp
popf
in
and
pop
mov
test
push
jnp
adcb
inc
xchg
mov
mov
cmp
xchg
inc
mov
mov
xor
cmpsb
cmp
addr16
jecxz
adc
imull
movsl
faddl
shrl
data16
jb
sub
push
in
lret
js
imul
decl
fcmovu
test
fcoml
cwtl
mov
inc
imul
xchg
xlat
xchg
outsl
imul
jecxz
cld
stc
xlat
fidivs
ss
stos
ret
mov
das
dec
cltd
pusha
jo
add
js
enter
hlt
movsl
sbb
pop
dec
sbb
aam
js
aam
mov
adc
stos
int
xchg
in
addr16
push
rorb
lahf
repz
or
movsb
pushf
mov
xchg
cmp
mov
int3
leave
jmp
sub
jo
fs
ret
rorb
cmp
adc
mov
icebp
add
add
or
sti
push
mov
xor
mov
cmp
lea
mov
jmp
pop
add
push
xor
adc
cmpsl
or
pop
cmpsl
loope
cltd
lock
push
cmp
mov
push
and
push
int
outsb
push
mov
inc
or
fiadds
out
xor
dec
insb
into
ret
loop
push
fistl
dec
cmc
jo
push
outsl
mov
andb
mov
sub
pop
std
mov
jnp
aaa
inc
push
mov
cli
mov
sub
fcmovnb
xchg
push
sbb
pushf
cmp
loopne
mov
lcall
stos
das
data16
push
mov
leave
test
jno
cmc
sub
and
fsubrl
daa
stos
mov
repz
push
inc
iretw
xchg
cltd
outsb
and
xchg
pop
add
cmpsl
jnp
cli
cmp
inc
inc
jmp
icebp
addr16
and
xchg
pushf
or
mov
std
or
jbe
jle
in
push
movsl
mov
lods
sbb
pop
ret
icebp
rorb
pushl
and
sahf
or
insl
pop
movsl
push
pop
or
seto
or
mov
mov
adc
lcall
std
mov
out
js
and
movsb
in
addl
dec
adc
push
fcomps
sub
dec
adc
inc
pop
xor
std
mov
add
xchg
pop
sbb
push
jo
mov
fucomi
movsb
call
movsl
pop
in
aas
lock
pusha
ja
mov
iret
aad
popa
adc
sbb
cmp
mov
cltd
into
scas
cmp
je
mov
pcmpgtd
mov
sub
sbb
mov
lahf
aas
in
sub
in
int
ret
add
or
ret
gs
popa
scas
lahf
push
push
out
lock
mov
and
outsl
cmpsb
mov
xchg
cs
jg
adc
inc
xlat
les
fimull
jg
mov
andl
insb
xor
jge
iret
push
xchg
inc
ss
mov
and
lea
loope
pop
mov
jne
rcll
mov
pushf
and
xchg
inc
jmp
aad
out
dec
in
test
xchg
push
mov
jae
insl
in
mov
mov
js
push
inc
cmp
mov
pop
out
push
leave
js
xchg
and
dec
js
popf
popf
cmpsl
or
xchg
pop
dec
mov
jb
insb
jmp
shrb
outsb
scas
or
aam
and
adc
or
dec
cwtl
in
push
inc
jb
xchg
push
cld
popa
push
out
subb
jmp
lret
arpl
stc
mov
int
mov
dec
loop
jns
pop
cmc
sbb
mov
adc
fdivr
adc
outsl
xlat
mov
aaa
mov
pop
mov
fcomps
fldt
push
std
test
or
and
enter
push
fwait
mull
bnd
fldl
gs
in
hlt
repnz
mov
inc
pop
inc
mov
fstpl
stc
mov
dec
sbb
in
in
add
xchg
xchg
cld
mov
lret
imul
stos
lret
xor
ja
imul
push
lods
and
aaa
and
orl
sub
icebp
lret
dec
dec
lret
push
frstor
pop
sbb
icebp
ljmp
or
mov
jg
fsubrs
shlb
pop
icebp
xchg
mov
mov
into
xor
sahf
adcl
ret
jecxz
test
int
hlt
inc
ds
xchg
pop
outsb
test
outsl
ds
cmp
mov
xchg
mov
adc
dec
sahf
int
pop
jne
xor
daa
in
mov
sub
push
mov
jmp
loop
mov
clc
push
movsb
or
arpl
mov
stc
fcmovne
inc
jo
xor
cld
fnstenv
lock
imul
adc
std
inc
and
aaa
jae
test
inc
pop
idivb
and
clc
mov
daa
push
shlb
popf
and
das
fistpl
loopne
sbb
lcall
jmp
std
sbb
sbb
push
push
lea
punpcklbw
mov
into
clc
sbb
xor
bound
jecxz
inc
fimull
jns
add
mov
iret
pop
sub
dec
cmp
pop
inc
jp
xor
into
xlat
loopne
jo
mov
xchg
xchg
push
pop
push
jb
enter
cmp
ret
int3
mov
push
dec
push
adc
push
call
cmp
outsb
in
xchg
imul
sbb
push
out
jae
hlt
das
pop
out
enter
test
sbb
mov
insl
jmp
jl
jne
lahf
ret
cmp
inc
sub
in
loop
lret
inc
dec
gs
inc
ficompl
je
ds
mov
test
xchg
and
hlt
mov
push
mov
mov
sbb
push
xchg
push
outsb
jnp
outsb
mov
jnp
in
mov
adc
hlt
jne
push
push
data16
test
inc
aad
xor
cmpsl
cmpsb
mov
popf
insb
inc
pop
sahf
shll
xchg
lods
pop
xchg
mov
cltd
push
lahf
dec
lret
fldenv
jae
push
add
call
into
mov
jmp
mov
mov
sbbb
xor
pop
xor
rcrl
outsb
ficoms
aas
jge
cmpsb
mov
xor
out
xchg
addr16
or
xor
jecxz
sbb
inc
cmc
mov
push
dec
shrb
cmpsb
and
push
cld
xchg
inc
loope
incl
pop
or
int3
xor
inc
stos
xchg
jge
sbb
int3
daa
clc
cmp
jmp
mov
xchg
fbld
pop
jg
mov
pop
das
and
insl
cmp
pop
loop
cmp
scas
insb
dec
outsb
xchg
movsl
outsb
pop
xchg
or
push
aam
fstp
adc
gs
iret
and
sub
into
mov
mov
movsl
bound
jo
add
mov
cwtl
adc
jae
popa
stos
dec
int
cmp
jl
aaa
sbb
and
shll
push
xchg
call
jb
fimuls
lcall
rorb
sti
or
pop
jmp
insl
mov
lods
add
daa
lock
sub
je
lahf
out
mov
ror
lods
mov
imul
cltd
push
lcall
mov
mov
popf
mov
mov
scas
jmp
imul
jnp
pusha
pop
mov
loop
popa
imul
idiv
push
insb
sub
lret
scas
sub
cmp
pop
fsubl
mov
lea
lcall
or
repnz
out
insl
sbb
xchg
imul
cld
js
outsb
inc
test
pop
ret
ds
pop
cwtl
jnp
xor
das
cmp
jae
cmp
xor
jge
cmp
insb
ss
mov
inc
mov
jns
addr16
mov
stc
and
or
mov
pop
fistl
lret
ret
mov
popf
sub
or
fwait
adc
xor
inc
lods
mov
movsb
push
jb
call
lcall
mov
xchg
bound
repnz
dec
pop
in
movsl
test
pop
add
inc
add
repnz
sahf
insb
fisubl
jmp
orb
push
out
out
clc
xchg
sbb
cmp
push
hlt
ficompl
adc
dec
mov
shll
bound
cmp
pop
cwtl
sub
sub
fld
mov
dec
shl
in
mov
mov
das
inc
jne
or
int
pusha
orb
inc
addl
cmp
bound
out
ret
in
jp
stc
cmp
mov
les
adc
lods
cltd
xlat
mov
push
nop
outsl
into
scas
mov
add
xchg
or
shlb
shrl
mov
mov
stos
sbbl
data16
dec
pop
mov
mov
dec
sbb
cmp
mov
xor
icebp
out
cmp
test
pop
xlat
and
fnstsw
lods
mov
cwtl
pop
cmp
mov
push
fldl
push
push
push
jnp
jne
aaa
mov
inc
je
lea
and
mov
dec
add
pop
xor
cli
scas
or
add
inc
nop
cld
mov
xchg
adc
leave
je
popf
jno
insl
push
xchg
dec
pushf
inc
adc
sub
es
mov
and
or
aam
mov
xchg
les
mov
mov
xchg
loopne
jle
jg
js
in
clc
stos
pusha
mov
call
les
adc
std
scas
sbb
dec
out
pop
mov
movsb
pop
pop
sbb
leave
or
prefetch
or
daa
js
xchg
jecxz
cmpsl
scas
nop
xchg
std
push
jb
adc
ljmp
imul
repz
dec
cmpsl
stos
xlat
adc
add
mov
sub
and
mov
fxtract
imul
dec
mov
test
test
cmp
cs
pushf
mov
pop
inc
adc
stc
incl
and
addr16
xchg
xchg
mov
out
add
xchg
jl
cltd
cmp
pmaxsw
inc
push
mov
popa
inc
pop
push
lock
fldcw
mov
sbb
fcos
scas
cs
dec
inc
mov
xchg
jle
std
and
adc
mov
mov
lods
fldl
jecxz
les
sar
pop
lea
dec
mov
cmpsl
in
icebp
xor
rorl
pop
hlt
aas
inc
popa
fcomps
ja
jp
dec
arpl
mov
xchg
movsb
sbb
fisttps
shlb
jne
test
aad
test
mov
inc
jae
jb
je
add
mov
pop
scas
in
ret
mov
cwtl
and
mov
stos
hlt
xor
addl
xor
insb
pop
inc
mov
and
and
testb
and
lock
mov
sub
adc
std
rcrl
shlb
or
lds
push
stc
add
mov
xor
pop
xchg
sti
sub
inc
mov
les
dec
push
mov
cmp
mov
cmp
or
rolb
cmp
jg
ret
push
into
test
pop
jge
xor
push
inc
jnp
in
dec
das
rol
aam
icebp
psubb
pop
ds
in
dec
adc
and
xchg
test
push
mov
adcb
movsb
inc
test
sbb
sti
in
sub
faddl
xchg
ss
mov
into
call
dec
add
ja
inc
lds
dec
cmp
pop
mov
mov
adc
jne
push
mov
sbb
sub
in
and
push
int3
insl
pop
xor
jl
inc
cmpsl
pop
xor
jp
mulb
push
push
push
xor
icebp
pop
pop
inc
pop
add
test
push
pop
adc
mov
mov
jmp
nop
fs
data16
and
or
fidivs
shll
mov
push
ret
pop
aam
xchg
cmp
mov
dec
ret
out
jbe
add
xchg
aaa
sub
add
into
hlt
xchg
xlat
dec
ljmp
xor
movlps
int3
inc
dec
and
mov
maskmovq
negl
mov
xorl
mov
pop
sahf
mov
roll
arpl
jmp
cld
iret
imul
jb
sub
xchg
inc
daa
xlat
sub
mov
faddl
or
lods
loop
fs
push
mov
pop
aam
aas
jbe
mov
jnp
cmp
int3
adc
and
add
test
std
adc
mov
add
push
les
sbb
lods
lret
aad
popa
lock
les
fildl
int3
out
sar
sbb
adc
mov
pusha
leave
push
jbe
cmp
and
roll
enter
das
pop
and
mov
sub
mov
imul
aam
xorb
pop
cmp
inc
jecxz
and
loop
lock
js
jle
mov
pop
pop
addl
jle
popw
lret
jmp
lcall
in
pop
sub
pop
sbb
jno
jle
aas
mov
mov
imul
mov
jne
ss
sbb
in
icebp
ss
out
sub
rolb
call
jns
adc
jle
lea
int
mov
lret
movsb
cmpsb
mov
xchg
popf
jle
push
dec
mov
xor
sbb
cmp
cmpsl
movsl
pushf
dec
cld
fcomp
invd
fucom
repnz
fstl
cmp
xor
xlat
add
int
movsb
and
inc
sarl
orb
sbb
scas
jo
fs
push
daa
icebp
sbb
dec
xor
test
or
ss
add
cmp
clc
push
push
jne
lret
icebp
mov
add
out
js
push
outsb
inc
and
xchg
iret
iret
aad
push
out
add
jg
int3
lods
in
cmp
xchg
jg
enter
push
bound
mov
mov
adc
js
sub
cmpsb
out
test
gs
stos
jo
xor
popf
or
test
mov
xchg
mov
fists
sub
in
mov
mov
pushf
mov
loop
into
jmp
xchg
pushl
in
addl
repnz
popf
mov
jmp
addr16
push
sub
dec
fstpl
out
add
dec
test
stos
push
mov
es
adc
addr16
shl
jge
jmp
and
xchg
dec
inc
test
call
fdivs
push
ss
fwait
sti
mov
scas
pop
push
and
shrb
cmpsl
add
rorl
mov
in
scas
cmp
sahf
pusha
and
mov
ljmp
add
jbe
ret
push
inc
inc
inc
cwtl
insl
repnz
fsts
push
sti
xor
lods
mov
jno
fstpt
xchg
dec
xor
or
push
dec
adc
scas
int3
push
xor
mulb
xchg
stc
lods
and
rorb
test
inc
xor
jmp
int
pop
mov
pop
and
bound
shlb
xchg
jg
adc
mov
js
jecxz
sbb
arpl
sbb
add
dec
jne
nop
dec
mov
lahf
ja
xchg
cmp
in
jg
push
mov
ja
cmp
add
pop
push
cmp
jb
filds
xchg
test
push
lods
jnp
jo
cld
jne
xor
mov
push
jbe,pt
ds
and
je
sbb
and
into
addb
jne
xlat
mov
jp
gs
fiaddl
aas
jae
dec
mov
sbb
rorl
dec
jg
pusha
sub
xchg
xchg
add
cmp
addr16
imul
fst
xchg
cmp
cmpsb
and
cmp
out
inc
lret
pushf
in
rcrl
in
sti
push
lods
cmp
lret
mov
inc
shll
cltd
mov
pop
inc
xchg
mov
je
scas
shl
or
arpl
out
add
xlat
sub
bound
cwtl
arpl
inc
mov
push
add
push
loope
cltd
and
adcl
lcall
xor
imul
pop
xor
daa
test
push
mov
in
rol
xchg
and
es
sub
jns
in
sub
ret
call
cmc
repnz
pop
repz
cmp
pop
jae
test
sarb
scas
mulb
cpuid
std
das
pop
scas
lret
loope
clc
shll
loop
ret
ljmp
adc
and
mov
out
mov
jae
adc
mov
xlat
mov
lret
cmp
orl
fs
jbe
in
mov
outsl
pop
outsl
cwtl
int
push
pop
inc
movzbl
roll
xor
pop
ret
push
xchg
xchg
mov
sahf
xor
mov
xchg
mov
clc
cmp
ds
and
push
cmpsl
mov
rclb
pop
dec
insl
bound
loopne
in
jno
cwtl
shll
sbb
jecxz
idivb
or
mov
fisubrl
in
sbb
cltd
ljmp
or
lea
sbb
or
aas
pop
mov
adc
push
in
movsb
fidivrs
stc
jne
xor
rcrb
jae
sbbl
test
push
into
jp
jae
push
mov
sub
imul
in
mov
data16
in
fs
insl
psllq
mov
jnp
fdivrs
mov
and
and
mov
and
sbb
adc
out
enter
fadd
fs
cmp
mulb
jl
dec
scas
and
sbb
jne
mov
add
pop
dec
imul
testb
pushf
inc
lahf
sar
xor
repz
stc
ret
stos
inc
in
sub
xor
inc
shrb
outsb
inc
dec
mul
enter
lock
fdivrl
ficoms
in
cmp
out
mov
shlb
xchg
adc
out
dec
mov
ret
out
ret
mov
pop
dec
push
mov
popa
mov
into
int
mov
mov
fdiv
andb
cmpsb
jns
or
sahf
les
jae
add
cmpsb
bsf
cmp
pop
or
and
test
push
sbb
jo
mov
sub
cld
sub
movl
mov
shrl
or
xchg
mov
lds
jp
adc
xchg
test
popa
fidivrs
sbb
or
cmp
inc
inc
mov
mov
push
and
aad
add
mov
cmp
inc
lock
scas
and
ljmp
shrb
pop
push
pop
movsb
xlat
pop
arpl
push
pop
xchg
loop
pop
mov
cmc
jnp
mov
mov
fdiv
pop
sbb
cli
jecxz
fstpl
xlat
fistpl
mov
sbb
repz
fiaddl
fwait
arpl
add
stos
scas
push
lret
or
data16
mov
mov
mov
cld
arpl
mov
popf
fsts
test
in
aad
dec
cmpsb
into
cltd
jbe
in
lock
enter
lahf
cmpsb
mov
clc
fwait
rolb
add
mov
mov
push
lcall
xchg
insl
or
pop
mov
jmp
push
inc
jb
js
xor
mov
call
ds
je
std
loop
sarl
cmp
cmp
cmp
repz
out
lahf
mov
sbb
push
pop
out
push
cmp
icebp
std
and
loop
adc
push
pop
push
aad
ljmp
and
popa
mov
in
enter
cmp
scas
xchg
ds
push
push
push
dec
push
pop
jae
sbb
aaa
push
das
inc
jl
add
aam
repz
outsl
and
pop
jg
in
mov
stc
jmp
fsubr
push
jb
push
aad
pop
fldlg2
sti
fisubrl
in
daa
mov
mov
mov
push
xchg
xchg
dec
scas
ret
lea
out
lods
jae
sbb
in
cwtl
and
mov
xor
push
decb
mov
jbe
adc
in
int
fs
inc
xlat
jnp
push
pop
sbb
aad
fldt
ss
and
jp
fnstsw
fimull
jl
push
pop
ret
jle
dec
sub
jno
test
test
adc
cmovbe
cmp
xlat
daa
and
and
nop
inc
mov
rorl
mov
imul
sarl
mov
dec
xchg
fildll
mov
mov
push
push
mov
dec
push
mov
jecxz
pop
fiaddl
aam
xor
mov
jge
add
cmp
xchg
cmp
in
cs
mov
add
outsb
lea
loope
ds
cli
pop
mov
or
xchg
mov
cmp
inc
push
pop
mov
fldenv
or
mov
xor
outsb
cld
mov
orb
xchg
sub
mov
xor
gs
pop
fstpl
aaa
rclb
add
cmp
into
lods
lret
pop
mov
scas
dec
push
jge
or
cltd
adc
sbb
xchg
mov
mov
mov
push
ss
iretw
jg
ja
cltd
cmp
ljmp
sub
jae
insl
jns
insb
inc
and
loopne
dec
les
pop
dec
cmp
fldenv
aam
jg
imul
cmc
ret
icebp
loope
aas
pop
enter
inc
lret
sarb
test
pop
in
rcrl
pop
mov
xlat
xchg
outsl
cmpb
dec
or
xchg
outsb
push
rolb
or
pop
test
mov
inc
push
scas
mov
movsl
push
sbb
repnz
movsl
mov
popf
pop
pop
dec
stc
inc
mov
dec
sti
daa
lahf
or
cmpsl
loop
pop
iret
fildll
xorl
mov
dec
mov
rorl
lock
dec
pop
mov
mov
inc
lcall
cmpsl
dec
int
mov
stos
jnp
xor
sub
and
inc
and
ds
lods
mov
mov
xchg
out
push
xchg
arpl
mov
mov
lock
inc
enter
inc
add
pop
das
inc
pusha
pop
inc
sbb
xchg
mov
xchg
jno
mov
push
fdivl
sub
jnp
xor
enter
cmc
out
mov
add
or
xor
push
sub
test
push
mov
incl
xchg
inc
fcmovne
aad
sub
lods
insl
fidivrs
pop
out
fs
mov
lods
test
pop
xchg
inc
or
cmpsb
and
das
dec
sbb
pop
cwtl
pop
int3
jl
lea
sahf
bound
in
repz
cmp
pop
pop
cmp
lret
out
jne
xor
test
in
pop
mov
pop
je
adc
jo
stos
mov
mov
mov
data16
push
movsl
push
fbstp
jg
rorb
xor
xchg
ljmp
outsb
cmp
test
loope
cmp
scas
sbb
push
shl
call
xchg
xchg
cmp
jl
jmp
ss
arpl
jp
stos
add
arpl
jmp
jle
add
sbb
xchg
shl
lcall
adc
mov
fstpl
push
scas
call
iret
sub
aad
add
rcrb
shlb
pop
inc
stos
or
mov
pop
ds
scas
cld
movsl
inc
shll
nop
sbb
xor
mov
cmc
mov
and
rorl
jg
jmp
enter
lret
adc
xor
jmp
dec
jae
test
cmp
xor
dec
fnstcw
push
cmpsl
jl
pop
and
clc
out
adc
clc
jg
jp
fsubl
enter
insl
or
leave
jbe
das
mov
loop
loop
push
pop
insl
popf
xchg
lock
insb
aaa
xor
aam
mov
in
imulb
loope
push
into
sarb
lahf
cmc
inc
pop
pop
sub
adc
fdivrl
int3
push
jle
jg
aam
movsb
shll
push
and
insb
or
xchg
push
inc
arpl
outsl
and
cmpsb
jmp
add
xor
or
xchg
jne
call
roll
cmc
leave
and
mov
and
popf
in
inc
mov
cld
push
cmpsl
xorb
in
in
mov
fisttpl
xor
fs
xor
jno
imulb
dec
and
aam
xchg
xchg
add
les
sub
add
sub
rcl
jl
fdivrp
pop
repz
aad
fs
aad
mov
sti
cmp
inc
mov
jl
in
pop
adc
adc
loop
mov
dec
dec
stc
jo
dec
xchg
out
notb
jno
stos
jg
cmc
cld
dec
push
mov
outsl
xor
imul
mov
in
in
daa
fisubs
pop
in
or
mov
inc
add
icebp
fisubrl
dec
cmpsl
fimuls
jns
and
add
jns
xor
outsl
mov
or
scas
iret
scas
lret
push
paddw
push
into
xor
das
dec
jne
lods
dec
rcl
jmp
stc
out
sti
rcll
cld
jl
xor
loop
fs
inc
dec
pop
pushf
mov
push
cmp
daa
jmp
xchg
lods
push
data16
cld
cmpsb
cltd
stos
hlt
les
and
push
in
push
or
mov
fnstcw
out
jno
sub
pop
mov
push
pop
mov
mov
fistps
cmpsl
popa
push
jns
das
out
xchg
enter
sub
and
jecxz
aaa
xchg
xor
cli
mov
iret
jbe
cmpsl
popf
cli
push
pop
dec
jg
aaa
scas
iret
es
aam
scas
fcompl
mov
out
ds
hlt
xchg
les
aam
test
mov
dec
jl
test
adc
aam
add
or
push
stos
lods
or
cmc
bound
mov
xchg
cwtl
or
sbb
push
dec
xor
lahf
lock
out
mov
adc
pop
inc
dec
mov
in
pop
sbb
aas
jl
mov
mov
pop
jno
mov
push
pop
xorb
fsubrp
sub
jnp
fwait
jnp
xor
dec
mov
clc
xor
pop
push
idivb
sub
mov
push
into
mov
cli
jne
inc
mov
imul
push
sub
les
dec
mov
insl
out
and
xor
ret
shrl
repz
stc
push
sub
xchg
inc
das
js
test
cli
outsb
fiaddl
sbb
std
fcomps
add
cmp
inc
cwtl
dec
inc
ljmp
push
call
adc
jge
sub
cli
mov
and
jle
enter
cmpsl
or
and
stos
mov
inc
pop
testb
sahf
sbb
daa
enter
loope
icebp
lods
xlat
out
ret
adc
in
adc
and
shll
mov
mov
icebp
lcall
adc
mov
inc
xchg
fistl
mov
les
add
cmpsl
xchg
iret
mov
jno
jo
push
gs
push
cmp
xchg
aad
cmc
sub
es
in
addl
in
adc
push
dec
nop
mov
fs
in
test
es
push
loope
mov
ss
pusha
cmp
xorl
jae
ja
jmp
outsl
mov
in
jle
mov
gs
push
lods
mov
loopne
inc
cmpsb
pxor
fmulp
movsl
icebp
mov
and
aad
mov
cld
xchg
je
lods
scas
and
popf
lods
cmpsl
sub
push
mov
into
add
shlb
add
sahf
outsl
xchg
outsb
icebp
xchg
or
mov
xor
sbbl
dec
xlat
bound
jmp
insb
es
shll
mov
mov
xchg
enter
popa
mov
adc
dec
sbb
lods
mulb
mov
loope
mov
pop
push
xor
enter
out
xorl
sbb
xor
mov
jmp
cli
dec
sub
xlat
outsl
mov
push
sub
jp
cld
mov
pop
xor
out
xor
shl
pop
push
aaa
mov
sbb
inc
push
imulb
mov
or
movsb
jne
in
cmp
out
rcr
mov
es
fsubs
out
or
ret
out
leave
insl
call
or
or
mov
call
aaa
mov
mov
aad
mov
fisttpll
cmp
push
rcrl
pop
push
and
inc
and
rcl
fdivrl
rcl
lea
adc
mov
mov
or
mov
frstor
dec
mov
inc
cli
push
dec
or
ja
out
sbb
movsb
clc
fsubrl
ljmp
push
mov
push
clc
insl
popa
in
or
out
arpl
add
fwait
jb
push
lods
jle
cmp
in
dec
jg
cmp
and
in
mov
push
jl
es
inc
mov
in
mov
std
das
jp
push
das
pushf
push
dec
pop
mov
out
push
cmpsl
sub
push
xor
dec
adc
xor
insb
jecxz
inc
mov
into
out
shlb
stc
cltd
loopne
aas
scas
cli
xor
call
clc
pop
adc
dec
jmp
inc
cld
ret
push
sub
lcall
aaa
dec
jnp
aas
cmp
mov
cmp
mov
testb
test
sub
into
add
into
in
jno
jl
mov
or
in
sub
cmc
clc
ja
mov
mov
sub
fsts
in
loopne
push
add
cmp
pusha
jmp
in
pop
fcomps
xchg
xor
push
mov
shll
xchg
add
pop
mov
or
gs
es
add
in
flds
test
in
xlat
cmpsl
jbe
out
xchg
add
cmp
or
mov
cmpsb
xchg
and
loope
int
cmc
dec
jmp
ss
cmc
mov
cltd
outsl
repnz
out
jne
int3
pop
aam
pushf
test
enter
lret
mov
das
pop
call
mov
cmp
stos
and
les
jg
dec
bnd
xor
test
sahf
dec
add
mov
int3
nop
out
adc
outsl
xadd
mov
sti
les
data16
enter
fsts
popf
lret
sbb
jne
mov
lcall
jb
outsb
mov
mov
sbb
lea
loopne
mov
mov
icebp
ret
ljmp
negl
aad
outsb
cld
dec
lds
push
dec
loope
add
cs
pop
shll
pop
dec
test
fsubp
movl
stos
outsl
scas
in
mov
add
lock
inc
xchg
adc
sub
sbbl
sbb
icebp
ds
leave
mov
rol
fucomip
stos
push
pop
cmp
mov
mov
jp
mov
xchg
mov
mov
mov
cmp
xchg
cwtl
dec
xchg
and
rol
out
mov
loopne
in
out
scas
adc
test
fwait
mov
lods
in
xor
popf
test
push
dec
lods
push
insb
repz
push
mov
lret
lret
dec
mov
xchg
daa
faddl
insb
xorb
es
mov
xchg
out
sbb
insb
sub
leave
sub
xor
out
rcr
iret
xchg
jne,pt
adc
decl
aam
ljmp
xchg
dec
add
push
mov
shl
testl
cmpb
pushf
inc
inc
lock
inc
mov
rcrl
nop
rol
or
imul
roll
aam
push
lret
das
cld
mov
dec
mov
push
ds
push
std
pop
push
mov
adc
adc
xor
sub
sarl
mov
mov
push
mov
popa
and
test
fsubr
cs
mov
data16
pushf
movsl
dec
and
xor
xor
inc
jbe
ret
cmp
fldenv
mov
test
lods
mov
fidivs
pop
ljmp
int3
pop
aam
and
mov
scas
sbb
jno
in
fxch
dec
pop
popa
push
outsl
lea
cmc
lods
cmpsl
mov
add
sbb
daa
cmp
cld
mov
ret
sbbl
dec
jnp
ret
inc
outsl
data16
mov
xor
push
dec
or
sub
mov
dec
outsl
push
or
loop
popf
jns
add
or
incl
cwtl
mov
cs
xor
fimuls
mov
and
sbb
and
rep
mov
lods
cli
lods
lods
mov
int3
push
mov
fwait
mov
inc
cld
fsubrs
push
cmp
in
mov
outsl
icebp
loop
jge
pop
mov
jns
or
mov
mov
push
mov
xchg
fldcw
mov
cld
mov
push
rcrb
hlt
imul
lods
inc
scas
fmuls
add
dec
ss
js
cli
jl
add
xor
push
sub
scas
movsl
mov
cmp
xor
insl
push
mov
clc
mov
loope
and
xchg
popf
icebp
pop
and
push
test
xlat
loop
subl
and
rol
test
dec
adc
clc
pop
fnstsw
divb
adc
mov
in
loopne
mov
adc
cmp
aaa
jg
jae
gs
arpl
insl
fstpt
popf
aad
pop
mov
push
call
ret
das
jne
imul
jo
call
adc
test
mov
int3
rolb
sub
mov
and
xchg
pop
push
fldcw
vpunpckldq
jne
cmp
push
les
fwait
inc
sub
rclb
in
popa
fisttpl
mov
lock
out
pop
add
pop
jnp
jmp
bound
pop
xor
xchg
testl
jg
cmpsb
sub
lcall
dec
gs
sti
call
repz
test
fcoms
movsl
idiv
mov
cld
cmpsb
xchg
les
or
mov
xlat
mov
xchg
mov
outsb
pop
dec
inc
repnz
int3
xor
jb
adc
push
jns
lock
push
cmpsl
cmp
cltd
clc
inc
push
xlat
faddl
and
jne
jmp
pop
cmpsl
xchg
adc
cmpsl
aad
les
sub
jg
sbbb
mov
jns
and
mov
jecxz
loop
mov
jns
inc
push
sbb
out
repz
icebp
fcoml
sbb
inc
adc
arpl
ss
pusha
mov
lock
mov
in
test
jle
stos
xchg
push
mov
nop
pop
mul
jecxz
in
push
fimuls
rorb
xor
xor
push
in
repz
or
lahf
aam
inc
call
sbb
dec
cmp
cmp
xchg
cmp
cwtl
mov
sti
mov
movl
out
jns
inc
dec
adc
mov
mov
xor
fs
sbb
enter
in
roll
pop
xchg
mov
xchg
dec
popf
sbb
stos
outsl
mov
mov
xchg
loope
out
mov
inc
jp
in
stos
mov
pop
and
dec
inc
std
push
repnz
inc
sub
cmpsb
in
push
push
cmovs
sbb
and
gs
push
mov
push
mov
std
popa
mov
push
inc
mov
jnp
cwtl
mov
xlat
hlt
pop
or
call
loop
insb
jae
subl
adc
fucomi
push
clc
les
fcompl
test
aad
mov
jnp
lret
imul
mov
mov
jno
sbb
add
fldt
mov
aam
out
std
faddp
in
jno
xor
aaa
loopne
jb
add
xor
jle
in
in
popf
mov
and
inc
fisubl
loop
sbb
xor
push
hlt
scas
es
inc
fnstcw
repnz
addr16
dec
jnp
cmp
xor
repz
je
loope
push
mov
ja
insb
int3
ret
mov
cmpsb
and
sub
loop
xchg
mov
fsubs
cmpsb
je
xchg
clc
inc
xor
pop
push
mov
mov
cmp
lret
repnz
idivb
mov
clc
and
bound
push
lahf
jl
add
repnz
mov
dec
mov
jle
ljmp
sub
mov
nop
inc
fisttps
scas
ret
aas
mov
and
sti
push
ljmp
pushf
jbe
xlat
fisttpll
iret
arpl
bound
or
movsbl
lock
insl
daa
ror
xor
xchg
jp
stos
test
std
fwait
pop
push
outsb
rcll
sbb
lret
jnp
enter
andl
push
jp
xor
sub
stos
repz
cmp
jmp
sub
pop
sub
sahf
out
popf
push
mov
xchg
scas
xchg
lods
imul
adc
sarl
jl
jl
push
xchg
or
ja
not
adc
xchg
addr16
dec
outsb
mov
rcrl
in
xchg
movsb
insl
icebp
dec
push
scas
loope
cmpsl
dec
imul
push
je
mull
and
int
xor
mov
lock
xor
cmp
push
xor
out
adc
cmp
outsl
or
add
cwtl
jg
push
mov
sbb
jmp
imul
lock
mov
sbb
xchg
out
push
outsb
jns
mov
rcl
je
dec
jl
cmpsb
cmp
mov
cmp
gs
popl
in
repz
and
add
inc
add
insb
mov
mov
sub
push
sbb
push
adc
js
movb
ret
lahf
or
pop
mov
pop
lret
inc
es
mov
dec
sahf
push
mov
cmp
dec
add
mov
add
stos
push
fwait
cmc
nop
std
cmp
fisubrl
mov
es
mov
inc
std
xorl
outsb
js
push
xchg
pop
pop
arpl
add
lods
mov
lret
ja
pushf
cld
stos
lret
and
inc
inc
mov
add
adc
or
xor
jbe
push
sti
push
pop
cli
outsb
in
adc
mov
mov
jno
test
call
cmp
mov
jbe
out
or
cli
pop
sbb
mov
int3
sbb
hlt
rcll
cmp
cmp
push
adc
jns
faddl
mov
daa
mov
mov
jge
sbb
inc
sub
scas
into
adc
and
arpl
and
lret
aaa
inc
aad
push
inc
xchg
cmc
test
jl
sbb
sbb
sbb
mov
pusha
jle
push
arpl
js
push
int3
mov
adc
jne
or
in
mov
in
repnz
jge
fwait
lahf
xor
fldl
jp
mov
mov
jl
aam
pop
xor
fidivrs
jb
jns
sti
cmp
repz
sub
cmpsl
nop
adc
icebp
or
std
fmull
and
mov
pop
push
xor
leave
push
add
test
sti
add
dec
sub
ret
aas
int
cmp
mov
dec
jecxz
subl
test
lret
addr16
push
je
das
adc
xor
inc
jno
or
cwtl
test
idivl
sub
mov
sbb
shrb
pop
out
ds
aas
popa
pop
cltd
push
dec
aas
pop
lahf
sbb
lcall
xchg
mov
push
popa
jnp
push
cmp
add
dec
dec
popf
in
jecxz
jae
enter
add
cltd
rcll
mov
lea
push
add
rol
mov
js
xchg
hlt
mov
mov
sbb
test
das
fnstsw
add
xor
push
ljmp
ret
sub
jecxz
xor
push
fwait
cli
dec
mov
push
rcrb
je
push
adc
mov
out
cmpl
call
in
or
pop
loop
cmp
cmpsb
insb
or
cmp
cwtl
scas
inc
xchg
xchg
test
push
rolb
icebp
push
lock
jl
push
flds
pop
inc
or
out
das
rcl
mov
jne
cs
cmpb
xor
mov
imul
mov
repz
jecxz
or
cmc
fadd
jae
leave
mov
loop
sbb
and
push
iret
adc
mov
pop
inc
mov
addr16
cmp
arpl
mov
pushf
cwtl
lods
std
movsl
decl
inc
mov
push
rep
inc
push
in
outsb
ds
sub
shlb
mov
ss
inc
xchg
shl
push
adc
fnstcw
test
add
push
fistpll
xor
pop
mov
pop
stos
int3
int
mov
lods
push
add
mov
lods
push
dec
and
xor
xor
lcall
xor
mov
in
das
lret
rclb
lods
pop
push
cs
in
mov
sub
dec
call
inc
outsl
add
cltd
or
leave
sbb
mov
aad
fcomp
or
xlat
sbb
cmp
lret
pop
inc
lds
adc
fcoml
push
dec
push
ljmp
stos
test
scas
push
sarb
shlb
out
loope
lcall
cmp
mov
stc
jp
mov
shl
ss
cmp
rorb
jmp
rclb
mov
sbb
mov
push
sub
lret
dec
sbb
jecxz
adcl
and
xorl
out
mov
je
lcall
stos
add
mov
push
mov
mov
das
icebp
shrl
negb
aam
je
or
ret
inc
or
pop
sub
jno
lret
es
xor
or
popa
fwait
lea
pop
loopne
push
mov
cs
and
inc
and
gs
fistpll
mov
xchg
sub
fs
sahf
xchg
pop
sub
int
stc
mov
sahf
add
cmc
jle
dec
lahf
lcall
dec
daa
lods
scas
push
pop
clc
lret
adc
inc
into
jns
or
and
rcrl
jnp
push
lock
ret
adc
pop
imul
cld
push
mov
fisttpl
push
notb
stos
mov
in
lret
je
test
adc
lock
hlt
icebp
xchg
mov
test
xchg
lret
popf
jb
push
jmpw
mov
rcll
xchg
xor
out
pusha
mov
cmpsl
lea
xor
push
loopne
sbb
dec
aad
lods
lds
fistps
out
loopne
or
pop
cmovne
dec
push
sbb
imul
jae
sub
pop
stos
pop
sbb
hlt
fcompl
dec
data16
fiadds
xor
sti
xor
push
mov
ret
in
pop
popf
jns
call
sub
push
inc
sub
out
jne
mov
xor
cltd
adc
pop
jecxz
jno
nop
jne
sarl
mov
sub
push
inc
pop
sub
jnp
in
xor
jmp
xchg
out
xor
ja
ds
or
add
in
in
adc
lret
icebp
cwtl
ret
movsb
xor
mov
imul
push
int
inc
aaa
fs
pop
es
xchg
inc
push
cmp
sub
outsl
pop
pop
lret
xor
es
push
pusha
std
and
mov
pop
ret
xchg
lds
push
push
incl
cwtl
mov
xchg
cmpsb
push
fwait
ljmp
mov
inc
xchg
cltd
lahf
or
inc
insb
ja
div
inc
into
jns
xchg
mov
xor
jnp
lret
aaa
sbb
mov
sub
aaa
jbe
jp
ja
pop
out
into
fdivrs
sub
pop
and
ror
xchg
adc
ret
out
inc
fistps
mov
dec
jle
add
lcall
pop
push
sbb
adc
addr16
lock
mov
testb
mov
mov
bound
jle
push
add
aas
mov
jg
or
pop
test
into
jo
fisttpll
dec
repnz
push
mov
cmpsl
shlb
mov
cltd
jl
push
jmp
daa
out
and
pop
jg
jmp
andb
xor
and
fwait
sbb
clc
jo
cld
adc
push
xchg
ficompl
ja
pusha
stos
xor
add
cmp
ss
popa
mov
jg
jne
loopne
or
sbb
fucom
pop
mov
jno
push
push
lcall
mov
pop
mov
int3
xchg
hlt
fsts
nop
inc
cmc
mov
inc
call
cmp
jp
mov
xchg
push
jp
inc
fstl
push
das
mov
in
lods
and
and
adc
push
mov
int
fistl
mov
enter
or
lcall
sbb
subb
in
sbb
jle
add
lock
lret
std
sub
and
mov
mov
rorb
jns
test
pop
fcompl
imul
das
insl
mov
out
push
push
and
xor
mov
sbb
aaa
fs
xchg
mov
xchg
aam
loopne
arpl
enter
add
jo
dec
adc
rorl
clc
xor
mov
sahf
icebp
sbb
jb
or
ror
std
cmp
lea
lods
mov
js
add
inc
adc
xor
rolb
fidivrl
mov
jle
xor
aaa
sub
popf
outsl
push
inc
push
dec
xchg
lret
push
cmc
loopne
sahf
out
xchg
in
loope
mov
cmp
lods
ret
lahf
cltd
scas
cmp
sub
add
stc
jo
jmp
xchg
xor
add
add
xor
js
rcrl
movsb
pushf
mov
cmp
jne
xlat
push
jnp
push
xlat
mov
iret
xor
popl
orb
call
sbb
repz
mov
lret
and
outsl
hlt
lea
subl
mov
ljmp
mov
cltd
fwait
add
lea
xchg
xor
std
jecxz
cli
rcll
cmpb
or
adc
or
sbb
pop
shrl
and
test
gs
inc
nop
and
push
add
stc
dec
lds
addb
jmp
mov
mov
mov
xchg
push
outsb
pop
iret
shll
sbb
mov
pop
inc
pop
sub
movsb
sti
lods
mov
and
lods
mov
mov
aad
xor
xchg
or
pop
test
dec
cli
iret
adc
adc
cmp
cmp
inc
xor
or
add
mov
xlat
lcall
ss
mov
sbb
pop
movsb
cmp
push
outsb
std
mov
push
cs
xchg
addb
sub
call
fs
shrl
mov
stc
cmp
pop
std
push
jp
mov
out
dec
adc
push
xchg
sbb
fxch
pop
out
push
pop
nop
pop
out
int
pop
mov
cmp
lods
call
xchg
mov
and
lods
xor
lahf
aam
ffreep
cmc
mov
jg
adc
lock
into
and
jle
cli
fstps
mov
xor
mov
daa
pop
mov
cld
adc
scas
jl
cmc
xchg
push
pop
inc
cwtl
nop
dec
lret
mov
and
push
jle
enter
aas
test
enter
iret
jle
in
cli
sub
add
jno
cmp
stc
jne
sarl
movntps
mov
inc
mov
mov
int
mov
inc
mov
add
fimull
fbstp
mov
sbb
out
jmp
mov
mov
mov
hlt
aam
and
ljmp
fs
loope
lds
aad
jne
fwait
and
xor
lock
insl
test
sub
sahf
ds
xchg
hlt
inc
je
imul
or
movsb
dec
cld
cmpsb
shufps
and
pop
les
loope
mov
mov
mov
push
cwtl
lock
and
and
lea
dec
jne
out
jnp
mov
mov
lods
jae
sbb
out
mov
cmp
clc
adc
cmp
out
sarl
mov
xchg
mov
cmp
rol
cli
push
lret
or
add
jle
sub
sub
add
cltd
scas
outsb
pop
and
std
sbb
fildl
jl
xchg
jnp
cwtl
dec
sbb
testb
fnsave
mov
call
push
xchg
std
mov
ja
add
pop
cmp
mov
fistps
cs
fldenv
dec
jg
lahf
push
add
daa
std
in
movsl
mov
cld
les
adc
or
stc
in
pop
push
sahf
push
xchg
sti
sub
mov
inc
push
loope
divl
add
xor
mov
cli
inc
add
sub
cmp
adc
test
xor
inc
hlt
call
es
pop
inc
sbb
sbb
add
push
inc
pop
daa
pop
repz
sub
mov
jno
gs
cmpsb
jmp
sbb
xchg
mov
ret
ljmp
out
mov
leave
cwtl
mov
mov
lds
add
xchg
cmp
cmp
mov
bound
jle
nop
or
add
pop
aam
fs
ret
scas
ret
mov
rcrl
cmc
shll
test
add
outsl
sbb
rorl
cmp
fmulp
and
xor
mov
dec
daa
loope
cmpsb
push
dec
hlt
pop
jne
out
inc
or
testl
inc
inc
adc
sbb
lds
sbb
stos
sub
adc
fstl
pop
scas
sbb
pusha
stos
popf
lcall
xor
testl
xor
cmp
mov
adc
outsb
and
gs
fcompl
out
or
icebp
nop
rcr
jbe
out
lcall
sbbb
push
fs
int
cli
cmp
cmpsb
js
bound
xchg
loopne
pop
lahf
push
test
cmp
pop
add
jg
adc
loop
cmpl
add
mov
add
mov
sbb
mov
pop
sub
aam
insl
and
repnz
xchg
in
addl
adc
leave
xor
sahf
lcall
xor
ljmp
mov
inc
mov
insb
xchg
je
or
inc
stos
push
xor
dec
pop
xchg
in
shl
push
adc
loopne
movsl
mov
andb
jecxz
stos
jnp
in
mov
mov
outsb
push
lea
xchg
xchg
test
shrb
rorb
adc
rorl
dec
mov
mov
push
cmpsb
fisttps
lock
sub
in
jecxz
movsl
das
lea
shl
ficomps
or
cmp
jo
icebp
jp
cli
je
mov
jns
or
xchg
arpl
in
xchg
popf
mov
jae
inc
mov
sti
aaa
dec
sub
fiaddl
xchg
or
gs
pop
cs
mov
bnd
jge
xchg
neg
outsb
aad
inc
popa
xchg
fimuls
push
or
sub
mov
cmp
cmc
mov
shll
sub
sbb
add
sub
sbb
mov
and
inc
xchg
mov
jg
in
pop
push
into
insl
sbb
jge
push
mov
pop
and
sbb
hlt
inc
cltd
out
test
dec
push
repnz
adc
lahf
stos
imul
mov
push
lret
fcmovb
inc
out
mov
and
xchg
in
pop
repz
ret
mov
test
pusha
clc
inc
lahf
fisubs
addb
lods
in
ljmp
lret
clc
cs
lahf
jmp
stc
adc
fidivl
xchg
aad
push
push
push
cmp
dec
dec
incl
pop
inc
aaa
je
test
insb
cld
sub
push
aam
cmp
lret
pop
jae
mov
mov
and
loop
mov
adc
adc
mov
jno
dec
sbb
pop
adc
test
cld
push
fs
mov
push
pop
sub
dec
sahf
hlt
xchg
fwait
jle
out
dec
dec
stos
jle
cmp
ja
mov
xor
dec
cmpsl
and
es
repz
sub
mov
and
add
testb
xchg
mov
std
ret
xor
test
mov
push
insl
cmc
popf
stos
aaa
mov
mov
cmp
in
sbb
sbb
sti
mov
cmp
push
or
pushf
test
mov
repnz
imul
imul
shll
jo
jne
shrl
outsb
add
mov
mov
xchg
mov
lahf
push
test
out
pusha
test
cmp
mov
dec
das
scas
adcb
dec
inc
lcall
mov
repnz
inc
adc
les
cmp
cmp
ljmp
push
mov
xchg
dec
lock
push
lret
int3
imul
out
xlat
bnd
sub
mov
loopne
cmp
rorb
sbb
adc
js
popf
mov
scas
test
fld
in
adc
mov
arpl
out
push
inc
dec
dec
xchg
mov
dec
mul
sbb
js
pop
lods
sbb
cwtl
repz
outsl
sahf
mov
jmp
sbb
stc
and
lahf
add
loope
loope
xchg
shl
and
flds
scas
ret
jae
xchg
bound
bnd
mov
jge
addr16
rcll
inc
dec
jo
mov
jbe
pushf
in
cli
mov
add
sbb
inc
xor
push
rcl
mov
fcmovnbe
adc
and
ret
cmp
jg
stos
subb
outsb
mov
mov
xor
rcrl
xchg
mov
add
mov
hlt
and
xchg
out
mov
cmp
jp
mov
and
jge
jae
popf
or
lret
rcll
sbb
mov
mov
inc
jns
sbb
fstpl
jne
and
xchg
jae
out
fmul
mov
lahf
js
cmpsl
fdivrs
std
inc
fmull
scas
nop
test
cmp
push
cwtl
je
fistps
shrl
loope
push
push
mov
js
test
mov
mov
cmc
mov
sub
lahf
data16
cmp
insb
movsb
ja
stos
mov
sti
fstp
cmp
jmp
dec
xchg
cli
ret
and
dec
sbb
dec
ret
or
add
jl
cmp
stos
inc
test
add
jecxz
roll
fildl
sahf
nop
push
aas
aad
lahf
mov
mov
lret
cmp
mov
adc
jo
ds
mov
roll
mov
mov
test
push
mov
ss
add
lret
fsubrl
outsb
lock
test
in
add
inc
pop
cmpl
aaa
add
add
jbe
xor
rorb
or
shlb
push
rcr
ja
mov
pop
sbb
loopne
dec
xor
dec
mov
mov
inc
cmpb
pop
push
or
cmpsl
int
cmpb
dec
mov
jnp
or
xchg
loope
add
xchg
cltd
ds
push
loopne
cmp
sbb
push
mov
inc
pop
call
dec
jae
fwait
jmp
das
xchg
gs
aaa
cmc
xchg
dec
pop
inc
imulb
out
bnd
or
pop
xchg
dec
inc
add
cld
add
lcall
pop
jns
or
mov
pop
mov
frstor
jge
dec
xchg
in
adc
addps
cmp
xchg
fwait
adc
mov
fadd
cmc
pop
add
xor
std
pop
gs
lock
into
stos
fimull
fimuls
arpl
outsl
cmp
cs
pop
adc
mov
pushf
mov
mov
rcll
jbe
test
mov
mov
cwtl
xchg
or
xor
outsl
je
xchg
mov
dec
mov
jge
cltd
imul
out
adc
jle
add
fsubrl
imul
mov
cmp
sbb
std
sbbl
insl
lcall
aas
and
call
jae
mov
dec
les
jo
loope
xorl
adc
iret
push
dec
xor
out
and
jmp
mov
js
cmp
adc
inc
jno
pop
mov
sti
movsb
sub
in
jmp
sub
xor
lds
xor
sbb
jg
loope
mov
ds
mov
stc
xor
xor
dec
les
xor
jae
add
imul
sarl
aad
xor
mov
sbb
mov
mull
imul
hlt
jo
add
and
in
pop
inc
adc
in
pop
cmc
mov
mov
mov
lods
sbb
inc
pop
fildll
test
adc
dec
sub
cmp
or
push
ljmp
dec
or
sahf
int3
jmp
movsl
sbb
lods
iret
cmp
adc
insl
stos
adc
in
pushf
add
insl
ret
push
shrl
mov
les
jne
cld
lds
loopne
and
adc
mov
imul
cmp
xchg
leave
cwtl
dec
in
loopne
testl
sub
movsl
dec
leave
stos
sbb
aam
repnz
mov
sbb
lret
jge
pop
pushf
insl
test
iret
sahf
test
inc
insb
imul
jge
xchg
sub
call
or
dec
sbb
xchg
lret
cwtl
mov
jns
pusha
fistpl
leave
call
into
nop
xchg
push
popa
daa
scas
insl
add
fidivrl
push
out
push
inc
lret
jge
push
fbstp
clc
outsl
ret
ja
fwait
cmp
out
mov
mov
ret
adc
scas
push
jbe
cs
dec
clc
jnp
sahf
ds
dec
inc
mov
fisubrs
add
imul
jg
push
add
pause
push
jns
roll
cmp
mov
ss
shlb
mov
loopne
push
stos
fisubs
jge
lret
push
pop
cmp
test
adc
lock
xor
push
mov
enter
add
cmp
repz
pop
mov
xlat
dec
lret
jmp
sahf
sarl
popa
mov
mov
lcall
push
push
mov
sbb
push
arpl
inc
push
in
shrl
scas
in
push
cmp
dec
sub
dec
xchg
into
mov
jg
imul
xor
dec
mov
mov
or
and
sbb
lock
jo
ds
or
pop
insl
imul
mov
mov
adc
adc
aas
movsl
pop
fwait
ja
das
adc
mov
mov
jle
cmp
clc
xchg
cmp
out
insb
mov
jp
fistps
jnp
xchg
sbb
shl
subb
sahf
fsubs
mov
push
lcall
shlb
cltd
insl
inc
loop
cmpsb
shrb
out
fsubrp
dec
jne
sar
aas
mov
out
pop
jg
inc
pop
xor
xor
sub
test
push
lret
arpl
push
outsb
scas
sub
mov
out
add
xchg
bound
mov
dec
push
add
xor
mov
push
jno
shlb
jnp
icebp
inc
xor
inc
out
push
rcl
sub
add
incb
bound
fstpt
mov
adc
xor
data16
loope
sbb
or
nop
and
jecxz
sub
iret
sbb
add
jmp
ljmp
pop
dec
inc
das
mov
enter
mov
mov
adc
or
cwtl
inc
sub
pop
push
pop
adc
jno
jbe
fsts
jne
and
inc
xchg
xor
mov
cli
pop
into
js
in
andb
filds
mov
mov
push
pop
lret
les
bt
aam
xor
addr16
mov
js
inc
je
fstp
pop
ja
or
cld
dec
int3
inc
jb
fs
bound
or
jecxz
jmp
inc
mov
push
sti
cmc
xchg
insl
add
call
mov
push
jl
rcl
mov
test
xlat
popa
sbb
jge
mov
loopne
pop
hlt
jbe
int
fdivrl
sub
std
inc
adc
pusha
mov
sub
int
pop
mov
sub
and
stc
xor
ljmp
mov
mov
mov
xor
lcall
les
pop
inc
outsb
ficoms
ret
push
das
in
in
xlat
push
insl
hlt
pop
cwtl
mov
cmc
sub
jg
jnp
mov
out
in
lcall
sahf
pop
je
lcall
ljmp
daa
je
aaa
push
aad
and
imul
jb
mov
pop
jns
pop
lods
dec
cmp
and
call
jb
cmp
sub
xchg
push
or
fstpt
push
pop
jmp
scas
ret
cmp
cltd
ror
and
jl
mov
jno
shrb
pusha
rclb
push
sti
iret
xor
popf
jns
addb
stc
or
lods
in
sbb
sbb
inc
sbb
mov
cmp
push
cmpsl
ror
cmc
add
call
repnz
pop
push
stos
inc
mov
loop
jmp
sub
imul
test
outsb
dec
cmp
mov
sbb
fldenv
inc
push
and
jo
jle
adc
or
sub
mov
push
cmp
mov
jno
and
scas
aaa
or
push
cmp
cltd
inc
repz
lods
dec
dec
enter
iret
push
inc
and
subb
xlat
or
lods
and
mov
xor
mov
fcmovnu
xor
jae
jno
cmp
xchg
push
out
jno
cmp
repz
test
add
push
cmpsb
insw
pop
out
jge
mov
adc
jno
fs
fdivrs
mov
into
add
setg
js
jp
ficompl
mov
repz
mov
mov
mov
out
xchg
mov
add
or
imul
mov
idivl
push
sti
mov
sub
jle
scas
rcrb
inc
pop
data16
add
arpl
outsl
mov
fwait
cmc
inc
lods
clc
inc
push
pop
xor
je
xor
mov
xor
jae
test
les
mov
jle
jnp
daa
dec
pop
pop
orl
repz
and
subl
xchg
pop
mov
xor
bound
mov
loop
stos
cwtl
movsb
pop
fucom
mov
adc
icebp
cld
dec
jmp
jnp
pop
popl
jecxz
js
xchg
mov
hlt
popf
hlt
psubsb
pop
gs
lock
lods
lea
push
mov
test
adc
ja
and
fs
push
pushf
cmp
mov
lcall
push
cmp
xor
mov
out
xor
pop
iret
lock
outsb
and
into
bswap
mov
outsl
and
sti
leave
mov
ds
repz
sub
cmp
int3
nop
and
or
test
pop
pusha
ss
cmp
xor
jnp
dec
xchg
fwait
xchg
loope
mov
sub
scas
or
rorl
xor
mov
dec
mov
fldenv
add
test
fnstsw
inc
push
cmp
xchg
ja
mov
out
cmc
xor
push
mov
adc
in
push
adc
ror
push
adc
pmulhw
mov
lock
mull
xor
in
cmp
mov
sbb
mov
in
leave
sub
sub
dec
mov
scas
out
scas
daa
lea
cmpsb
or
lods
shll
in
lods
cld
aam
sahf
mov
sti
xchg
pop
push
xchg
out
mov
or
aad
pop
movsb
pop
mov
cmc
les
jg
fpatan
xor
imul
in
shrb
mov
mov
jecxz
mov
inc
shlb
jp
jne
lods
popa
push
fnsave
in
ljmp
or
mov
xor
mov
adc
push
rcr
mov
jmp
lahf
shll
lea
adc
popa
mov
and
add
enter
jp
cmc
cmp
or
inc
cmc
xchg
pop
or
sub
sbb
xchg
fimuls
pop
popf
leave
pop
inc
and
sarb
jno
int
inc
in
xabort
xchg
gs
or
inc
pop
cmp
je
jp
xchg
sub
ljmp
daa
sbb
mov
je
push
dec
push
fldenv
test
outsb
adc
xchg
mov
inc
jle
test
scas
ret
mov
lahf
mov
fldt
or
out
xor
mov
xchg
dec
jl
add
pop
insb
mov
mov
push
xchg
movsl
pop
aad
into
fisttpl
push
cmp
mov
mov
rol
fisttpl
push
push
mov
pop
jbe
mov
enter
xchg
jo
sub
pop
lea
inc
lds
int
inc
pop
add
adc
shll
lods
mov
sbb
lods
pop
pop
jle
fldenv
repnz
inc
ljmp
test
cmp
out
cmp
adc
xchg
fidivrs
insl
dec
jecxz
repz
insl
rol
and
sbb
mov
jo
cmp
addr16
popa
fisubl
and
in
dec
fsts
adc
in
loopne
mov
enter
jg
test
add
fwait
je
xchg
stos
mov
fsubr
test
and
icebp
stos
into
dec
xor
sbb
and
inc
mov
or
xor
nop
int3
pop
mov
xor
sbb
push
xchg
adcb
stos
aam
into
pop
pop
in
dec
xchg
leave
jb
fs
divb
stos
je
and
xchg
lods
or
adc
mov
adc
dec
int
push
pusha
imul
aas
pop
jp
fbstp
insb
add
add
sub
add
pushf
daa
daa
hlt
fnsave
add
sub
mov
ret
hlt
icebp
dec
int
js
xor
mov
pop
jmp
lods
xchg
dec
xchg
and
jne
jl
or
xor
xchg
sbb
pop
sbb
aaa
xchg
loope
sub
dec
fistpl
sub
aad
repnz
mov
xlat
mov
mov
sub
sbb
in
mov
mov
xlat
and
inc
sub
and
aas
lret
dec
aad
mov
mov
add
xchg
testl
push
or
iret
jmp
lret
pop
or
je
inc
rcrb
mov
stos
rcll
jnp
mov
sub
inc
stos
mov
pop
cmp
ficompl
push
js
mov
outsb
aas
jnp
xor
and
lea
mov
jae
push
jne
sti
out
mov
push
cmp
ret
out
cmp
mov
je
lret
pusha
mov
xchg
pop
mov
fcomip
ja
xchg
dec
ret
movsl
or
sbb
push
roll
mov
ror
inc
mov
icebp
sub
xchg
test
cmpsl
cmpb
stc
fsubrl
fsts
loop
jo
popf
inc
mov
mov
push
dec
call
hlt
fcmovnbe
fcompl
repnz
xchg
push
icebp
adc
pushf
adc
mov
push
dec
arpl
insl
sbb
xor
ljmp
dec
in
xchg
jge
clc
aas
mov
ret
jne
pop
xchg
lock
add
mov
idivb
xchg
imul
shll
mov
jbe
movsb
aam
aam
xchg
daa
scas
dec
int3
stos
notb
add
lds
sbb
push
addr16
mov
aas
fstpl
sub
jmp
mov
cs
int3
clc
repz
push
clc
xchg
orl
mov
rorb
cwtl
loope
nop
sti
add
cmpsb
xor
xchg
sar
mov
xor
pushf
cmpsb
ss
ljmp
mov
scas
int3
mov
jne
cmpsb
xchg
lods
inc
test
daa
pop
and
xor
or
je
sbb
sbb
aad
inc
mov
dec
mov
in
inc
into
dec
and
mov
inc
xchg
dec
stos
xchg
dec
repz
das
cmp
sbb
arpl
inc
lock
jmp
imul
push
pusha
add
mov
mov
dec
pop
jge
clc
push
leave
out
fcomip
rolb
loope
movsl
lds
jmp
pop
cmp
add
daa
into
pop
std
sub
xor
les
popa
adc
xchg
mov
mov
push
sub
inc
mov
mov
insl
test
mov
call
xor
xchg
stos
mov
cli
in
mov
fsubs
push
pushf
hlt
xchg
das
cmpsb
pop
test
lcall
or
pop
mov
cmc
xchg
push
add
mov
inc
mov
xor
out
mov
jbe
out
ja
cmp
stos
add
and
jmp
jp
insl
or
call
insb
or
push
or
dec
pop
xlat
pop
xchg
loop
pop
outsb
mov
pushf
and
in
mov
or
ret
push
lock
xor
mov
sub
pop
push
mov
inc
out
mov
les
lods
sub
out
mov
scas
stos
jne
xchg
fistpl
mov
mov
rolb
outsl
call
jle
pop
jno
adc
push
andb
imul
lret
cmp
sub
lds
loope
or
imul
add
jno
mov
cmp
mov
loop
jp
sbb
in
filds
cmp
push
mov
lahf
cmp
push
subl
aas
lods
mov
pop
clc
and
addr16
sti
divl
xor
mov
sbb
aas
and
das
cli
addr16
into
divl
mov
cmpsl
es
mov
cmp
jb
mov
pop
xchg
bound
out
sub
ja
clc
pop
stc
rcll
das
pop
sarl
sub
mov
insb
sub
incl
push
pop
fadds
sarl
addr16
aam
clc
fildll
inc
xor
inc
inc
ret
xchg
xchg
xchg
mov
lods
sbb
or
movsl
jge
movsl
adc
mov
mov
fdivrp
dec
push
jge
dec
scas
roll
rclb
xchg
in
vxorpd
sbb
icebp
repnz
and
lret
adc
call
jg
pop
jl
ret
fsubr
test
xchg
and
xorl
add
lea
jmp
cltd
ret
cmp
pop
shrl
xchg
jae
xor
scas
jl
xchg
mov
fs
or
mov
in
pop
xor
jp
mov
sub
bound
lods
lcall
lock
dec
mov
xchg
sahf
lds
sub
or
movsl
or
jle
inc
in
inc
ror
shl
rcr
push
pop
mov
sub
inc
inc
in
lods
lods
out
xchg
mov
dec
xor
inc
mov
loope
sbb
icebp
sub
in
push
xor
pop
push
jle
fisubrs
cmp
pop
jge
arpl
xor
lret
nop
outsb
or
aas
ret
fidivs
repnz
push
clc
shrb
add
insb
xor
pop
mov
sbb
repz
add
sbbb
adc
dec
pop
out
cmp
cmp
adc
cs
fcmove
jp
xchg
xor
outsb
adc
aad
mov
dec
popf
sbb
mov
fnstsw
fs
ror
or
bound
mov
add
js
mov
fwait
popf
sbb
lea
push
fnstsw
lea
test
pusha
out
xchg
sbb
jmp
negl
inc
and
popf
mov
mov
mov
mov
leave
loop
mov
loopnew
pop
push
int
push
or
xor
or
xchg
nop
lret
jb
mov
push
jg
push
mov
fmuls
loopne
mov
popa
dec
mov
ljmp
or
scas
cmp
adcl
mov
xchg
sbb
fadds
xlat
mov
cmp
cmp
dec
imul
add
adc
repz
or
out
xor
adc
add
lret
jmp
sbb
or
mov
xchg
shlb
pop
adc
xchg
iret
aas
ret
push
ret
out
sbb
lods
mov
fidivrl
out
mov
jge
mov
insl
mov
out
cld
xchg
scas
sahf
jp
hlt
xchg
cltd
dec
loope
and
fs
icebp
hlt
sahf
shl
test
cltd
mov
ljmp
aam
mov
mov
add
xor
xor
in
pop
aad
push
push
cwtl
xlat
cld
rcll
cmpsb
add
sbb
pushl
cmp
dec
or
xchg
push
fwait
lret
lar
fsubr
rorl
adc
cmp
pop
push
mov
pop
cli
jne
nop
mov
xor
aam
pop
ljmp
jbe
shll
xchg
ret
dec
pop
push
fwait
stos
mov
imul
ret
jg
sub
dec
push
rolb
jp
mov
jge
or
xchg
mov
xchg
jmp
mov
jg
push
dec
adc
pop
popa
and
push
push
push
fcmove
insl
stc
sub
mov
fistpll
jmp
push
xor
std
sub
xchg
xchg
leave
and
pop
adc
mov
pop
jmp
mov
and
aam
xchg
out
test
aaa
mov
add
daa
sahf
sar
xchg
dec
jmp
pop
imul
imul
adc
xchg
add
out
int3
jae
and
jns
fistpl
jge
adc
cmpsb
mov
fwait
les
idivl
lret
cs
je
push
outsl
xchg
int
jnp
movsb
jle
xchg
movsb
fists
dec
addr16
sahf
inc
push
rcll
jle
and
insl
mov
scas
fs
out
jae
add
ret
das
scas
jns
cmp
xor
xchg
mov
cmp
cmpsb
adc
mov
inc
cli
adc
clc
dec
arpl
sub
push
mov
dec
pushf
push
test
add
outsb
xchg
test
dec
mov
mov
fwait
scas
add
insb
xor
sti
int3
sbb
xchg
in
movl
mov
push
ss
or
jae
aam
in
xlat
lds
leave
divb
aad
sub
add
in
fwait
inc
aaa
enter
xchg
adc
outsl
inc
in
sub
fsubr
mov
fistpl
lea
cmp
inc
push
pop
xchg
lahf
mov
ret
hlt
cld
mov
popl
rcrl
mov
rcll
jbe
sub
xchg
pusha
jl
mov
push
fiadds
sarl
mov
pop
add
and
sbb
pop
inc
int3
aad
jmp
adcb
sub
push
cmpsl
roll
mov
mov
or
movb
out
add
ja
jecxz
lret
std
or
adc
pop
mov
mov
or
dec
mov
push
jmp
jmp
lahf
scas
repnz
or
cmc
call
lahf
aad
ss
lods
push
mov
jl
negl
mov
fs
aaa
push
cmc
int
jl
lahf
shr
dec
imul
insb
mov
pop
mov
cmp
mov
fucomip
shrl
mov
push
cmp
loopne
js
cld
dec
sbb
test
gs
dec
pop
icebp
bnd
aam
rol
das
push
sub
pusha
test
stc
cmpsl
pop
sbb
or
jl
jbe
jae
clc
xchg
dec
cmp
or
das
jbe
mov
xchg
stc
pop
mov
mov
inc
enter
lcall
scas
jg
mov
lods
arpl
or
mov
mov
and
notl
pop
dec
mov
repz
inc
xlat
inc
stos
into
cwtl
push
sbb
aam
xchg
jmp
or
cmp
and
xchg
mov
aaa
pop
xor
jns
pop
hlt
mov
inc
cmp
aas
cmp
xchg
push
adc
jl
push
pop
gs
jbe
and
jmp
xor
pop
push
push
movsb
mov
adc
and
in
and
scas
aas
dec
subl
sbb
dec
mov
and
jp
adc
sub
xchg
js
aaa
pop
sahf
pusha
mov
cmp
xor
mov
adc
mov
lods
ja
cmp
dec
popa
push
and
pushw
pop
pop
sub
mov
divl
std
and
ja
dec
in
adc
pop
stc
sub
cltd
sti
mov
mov
insb
imul
pop
popa
inc
push
rcpps
mov
jno
xor
sbb
add
jne
push
jo
sub
jne
push
imul
mov
or
xchg
ja
fldl2e
dec
cld
divl
push
add
lret
cmp
sub
repz
xor
cmp
mov
repz
hlt
test
jo
mov
int3
repnz
je
xchg
xor
mov
dec
pop
pop
mov
xor
dec
or
cltd
repz
getsec
push
jae
popf
cli
or
mov
scas
dec
cwtl
mov
loope
outsb
xor
repz
lods
std
and
hlt
xchg
icebp
aas
out
std
mov
fwait
lret
into
jnp
and
aaa
push
hlt
ja
loop
mov
xor
pop
test
xor
add
cld
cli
ret
xor
mov
adc
bound
cmc
out
pop
add
fbstp
cs
outsb
dec
pop
jmp
mov
ja
mov
idiv
in
enter
gs
jge
lea
adc
or
cwtl
lods
mov
mov
repz
addl
pop
jns
sbb
test
and
insl
pop
outsb
inc
aas
sbb
push
ficoml
fcoml
fldcw
jp
pop
out
jmp
mov
rolb
sub
icebp
lods
jbe
adc
loope
jae
rcrb
and
in
addr16
xchg
push
pusha
push
js
cwtl
rcrb
fisubrl
mov
clc
adc
sbb
fistpll
bound
and
dec
out
lcall
pop
addr16
imul
push
fistpl
fwait
xor
adc
fmuls
adc
cwtl
add
push
push
sahf
mov
push
fdivl
xchg
inc
cld
addb
xchg
dec
arpl
negl
nop
sar
and
fisttpll
xor
mov
mov
pop
and
jl
push
inc
xorl
sahf
dec
and
lock
xchg
in
fwait
push
ds
mov
imul
add
bound
jnp
iret
imul
pop
es
jmp
cmpl
jnp
in
and
dec
mov
xchg
sbb
sub
pop
popa
imul
aad
mov
enter
jnp
and
mov
or
fdivr
loope
cmp
je
mov
xor
fistpl
add
mov
sbb
jne
pop
inc
aaa
js
rcrl
mov
fistl
shr
pop
and
scas
std
pushf
mov
mov
jbe
daa
aad
cmp
dec
lds
push
inc
lret
lea
jle
in
clc
dec
inc
enter
in
in
dec
insl
daa
sbb
clc
test
push
pop
mov
sub
cmp
mov
loopne
pop
scas
aas
insl
popa
fidivrl
or
int3
sub
fildl
loope
lods
fisubrs
push
movsl
jns
or
sbb
stos
leave
or
iret
sbb
mov
enter
or
inc
rorb
ss
mov
mov
aaa
pop
leave
dec
fwait
jg
mov
adc
or
fldcw
stc
push
in
ds
push
cwtl
dec
mov
out
push
add
pop
push
cmp
call
and
sbbl
mov
add
or
or
push
out
lret
pop
mov
lahf
jb
mov
clc
ljmp
test
adc
pop
insb
hlt
test
add
mov
into
jp
inc
fldl
cmp
scas
lods
sub
xchg
mov
jae
sub
inc
lods
xchg
or
in
fwait
xchg
popa
pop
push
out
lret
pop
xchg
gs
sbb
sbb
fmuls
and
jnp
mov
jg
in
inc
gs
mov
daa
mov
popf
push
orb
popf
sub
pop
pusha
xchg
icebp
int3
scas
mov
push
data16
daa
jno
clc
adc
jne
push
movsb
les
int3
outsb
push
cwtl
jl
pusha
and
pusha
or
sbb
fcomi
insl
clc
icebp
fdivrl
cmp
mov
cli
inc
inc
popf
fs
stos
jae
adc
sbb
loopne
xchg
pushl
jb
or
or
sub
and
mov
inc
lret
in
sahf
int3
add
sub
inc
jecxz
jmp
fimull
notb
loope
pushf
fbld
les
popa
xor
movsl
into
cmp
shll
inc
push
mov
out
shlb
inc
jae
aaa
jns
mov
jno
data16
das
jo
fs
xchg
cmp
scas
jne
ret
mov
push
aam
jecxz
dec
mov
jno
push
mov
pushf
push
push
aas
xchg
and
popa
pushf
out
xor
mov
js
rclb
mov
call
ret
sub
mov
stos
pop
pop
fxch
add
insb
pop
fisubl
in
mov
cmp
aaa
add
jmp
jmp
adc
cmpsb
adc
jno
adc
adcl
out
bound
inc
push
outsl
enter
cmp
mov
mov
daa
cli
aaa
cmp
push
mov
sbb
dec
add
xor
test
mov
jne
or
lret
insl
int3
xorb
popf
scas
std
outsb
xchg
adc
pop
pushf
cmp
cli
xchg
cvtpi2ps
inc
lods
and
fildl
cmp
repz
iret
dec
enter
addr16
adc
cwtl
adc
xor
and
int
xchg
adc
pop
mov
mov
jno
mov
imul
arpl
xor
fidivrs
mov
add
or
dec
or
pop
jle
cmp
and
and
lds
in
insb
push
orl
mov
adc
adcb
jge
pop
mov
ror
arpl
sbb
pop
mov
jo
pop
add
loop
pop
sahf
sbb
and
insl
daa
jo
data16
stos
xor
aaa
call
test
adc
jge
ja
repz
movsb
cld
pop
xchg
jp
lock
mov
fs
dec
xchg
lods
fnstsw
mov
mov
xlat
rcl
loope
imul
mov
mov
sub
sbb
pop
fisubrl
aaa
xchg
pop
repnz
mov
or
and
bound
call
popf
scas
and
pop
scas
xchg
shll
in
pop
xchg
repnz
xchg
xor
lods
xchg
push
cmc
jge,pn
subl
jbe
fsincos
push
test
rorb
inc
aaa
ret
shlb
push
mov
or
mov
or
mov
std
loop
or
cmp
and
or
lret
test
inc
lods
dec
daa
das
adc
imul
push
std
sbb
mov
enter
and
push
add
aas
cmp
pop
ret
movsl
push
push
sbb
and
add
jns
add
mov
inc
adc
sub
xor
add
push
or
pop
cld
fstps
jp
jg
mov
add
mov
pop
push
fiadds
cmp
outsl
or
mov
in
mov
sbb
mov
jo
incl
psraw
jge
ret
cmp
or
mov
push
fisubrs
pop
dec
das
cmp
adc
or
andl
fimuls
xor
jne
push
sbb
sbb
jbe
sub
rol
push
push
int3
std
lret
jge
mov
cmp
scas
es
mov
jp
jmp
mov
call
add
sahf
hlt
stos
fs
mull
pop
mov
sbbl
jnp
cli
or
adc
fwait
lcall
xor
mov
fistpll
pop
mov
sbb
nop
pop
sbb
push
push
in
dec
fwait
lods
sbb
stos
rcrl
popf
popf
push
cli
xchg
jecxz
mov
pop
out
fld
stc
lds
sti
fsubs
cltd
test
push
cmp
mov
addr16
dec
and
test
jge
fwait
ret
popf
movsl
sub
rolb
inc
filds
mov
filds
dec
push
call
imul
push
dec
dec
rcll
in
adc
aaa
and
push
dec
in
in
pop
outsl
jns
scas
mov
mov
sbb
subl
imul
mov
in
ss
xor
loopne
sti
pop
fdivrl
mov
dec
cmp
out
es
into
inc
hlt
stos
insb
ljmp
lds
arpl
push
sbb
sti
das
popf
movsb
inc
inc
xchg
cmpsl
stos
push
cmp
add
cltd
inc
xchg
cmpsl
stos
sub
xchg
outsl
push
jnp
pop
mov
cmpsb
in
add
inc
out
fcomi
cs
subb
fsubs
loopne
push
add
ja
inc
in
lods
add
sub
mov
sbb
jmp
dec
fadds
xor
addb
roll
int
jmp
fs
push
cmp
mov
shll
fcmovnu
pop
scas
fdiv
lret
std
repnz
pop
mov
hlt
push
sub
subb
cli
mov
lods
daa
fadd
ret
insb
inc
add
add
imul
inc
cwtl
add
or
sub
cmp
mov
pop
ljmp
and
inc
fiadds
movsb
scas
pop
lahf
mov
test
in
aaa
decl
daa
xchg
lahf
jbe
lds
push
in
ret
out
jo
jne
add
push
fdivrl
mov
jmp
add
shl
pop
mov
insb
mov
aam
add
fldenv
xchg
loop
pop
xchg
bound
cmpsl
jo
popa
jge
xor
ficomps
movsb
roll
pop
sbb
out
shll
pusha
lea
sti
push
mov
cmpsb
sub
pop
xor
xlat
mov
or
outsb
fidivl
adc
in
jae
push
mov
and
mov
sbb
addr16
sbb
mov
sub
sahf
repnz
clc
clc
lret
enter
dec
ret
popa
arpl
nop
movsb
mov
pop
ret
stos
fnstcw
jle
int
cmp
cmovbe
lahf
jnp
cmp
insl
not
mov
adc
pop
jnp
pop
mov
xor
imul
gs
out
fstps
les
cmpsb
or
mov
and
dec
lods
lock
or
push
push
or
jbe
add
or
into
int3
imul
pop
dec
mov
push
fadd
xor
loope
sub
push
sub
insl
mov
test
adc
insb
jo
insl
sbb
js
aad
or
arpl
cmp
mov
cwtl
loop
int3
dec
test
out
inc
daa
jns
imul
gs
mov
cmp
sub
dec
push
shl
fistl
and
mov
out
sti
iret
aad
adc
vmovdqu
dec
dec
movb
ja
xchg
mov
clc
ret
leave
pop
movsl
in
xchg
mov
push
in
outsl
inc
popf
ret
or
std
inc
push
iret
xchg
push
jno
mov
pop
scas
ficoml
jno
push
daa
fisttpll
add
stos
sbb
jle
cmpb
rcrl
pop
loopne
pop
cmpb
cmp
ss
sahf
xor
testl
add
in
push
movsb
xchg
daa
mov
stos
mov
xor
int
push
setbe
xchg
jnp
roll
mov
arpl
out
mov
lret
sbb
lds
mov
push
pop
movsl
std
pop
xlat
es
in
adc
sub
mov
dec
pushf
lock
enter
lea
lea
pop
ficompl
insl
and
test
clc
adc
cmp
shl
in
iret
xchg
rcrl
roll
push
xchg
pop
sbb
jmp
lret
popa
inc
out
and
push
sub
loopne
shll
divb
scas
cmp
cwtl
or
dec
scas
add
jns
adc
dec
mov
dec
adc
mov
inc
add
daa
test
test
add
insb
or
and
adc
pop
ret
addr16
mov
push
gs
sub
jg
fistpl
scas
sub
rolb
rcll
or
sbb
xor
or
xlat
pop
shll
mov
and
pop
dec
cmp
or
dec
add
add
sarl
cmp
dec
repz
jae
dec
xor
pop
sub
leave
insb
sub
iret
xchg
sbb
cmc
xchg
xchg
out
decb
call
cmp
jp
mov
mov
into
mov
lahf
cmp
xchg
aas
mov
jl
mov
cmc
mov
sbb
adc
pop
jno
and
pop
push
jg
roll
in
inc
dec
inc
repz
jge
mov
adc
addr16
ret
iret
std
movsl
lods
int
jl
or
lock
sub
xor
shl
mov
jae
mov
cli
pushf
aaa
pslld
jge
out
xor
movsb
pushf
stos
jbe
into
inc
push
sbb
dec
test
adc
push
pushf
ret
notb
push
addb
arpl
iret
xchg
ss
or
fstpt
sub
ljmp
pop
test
xlat
sbbb
test
incl
sub
sbb
sbb
mov
pushf
mov
dec
orl
adcb
sbb
movsl
inc
mov
aas
jns
loope
into
movsb
jecxz
pop
xor
out
andb
adc
jb
pop
xlat
push
xor
push
out
cmp
fadds
hlt
int
je
cmp
lret
in
imul
sbb
mov
sub
mov
ret
sahf
addr16
sbb
cmp
int3
sahf
mov
jb
test
mov
ja
adc
nop
imul
ss
jns
sar
jp
lods
cmpsb
jmp
out
stos
dec
adc
jno
nop
push
test
lahf
sub
mov
cmp
push
push
mov
lods
stc
jl
cmpsl
sti
sub
cmp
subb
cmpsl
adc
es
jo
bound
shrb
mov
cmpl
int
mov
cmpl
fisttpll
xor
sbb
aaa
dec
xor
nop
push
cmp
inc
inc
jg
xorb
sub
cld
sbb
jg
pop
jns
push
sub
cld
lahf
or
adc
push
or
inc
xor
mov
sbb
testb
jmp
lcall
sub
sahf
cmpsl
or
mov
push
mov
mov
clc
mov
ret
hlt
out
cltd
lods
xchg
jecxz
ret
and
xor
sbb
or
shlb
xlat
movsl
dec
jae
shrl
lcall
push
xlat
arpl
js
outsb
pusha
mov
stos
jbe
scas
nop
mov
imul
cmp
push
add
popf
pop
sub
mov
and
cmp
ljmp
jnp
xchg
cli
or
inc
loop
or
push
sbb
lock
loope
fistps
icebp
jle
or
xchg
loope
imul
sbb
mov
dec
mov
inc
mov
xor
outsb
sbb
movsl
aas
loop
aad
outsl
out
psrlw
aas
mov
sub
adc
inc
cmp
ljmp
push
mov
mov
or
xsetbv
xor
rcrl
rcrl
pop
inc
cli
mov
cmp
jne
add
je
je
pop
sarb
ret
fdivl
jmp
out
adc
sbb
xchg
ret
inc
mov
adc
lret
ja
mov
std
xor
jbe
test
dec
mov
imul
pop
sub
sub
push
mov
xchg
repnz
enter
jge
and
outsb
cmpsl
lahf
inc
or
fyl2x
std
arpl
cltd
mov
jne
lret
test
testl
pop
jns
pop
xchg
mov
arpl
mov
xorb
dec
std
push
xchg
stos
ss
insb
loope
daa
mov
jns
outsb
decb
dec
test
fistps
jmp
cmp
sarl
mov
and
sbb
dec
xlat
inc
mov
mov
mov
mov
sbb
enter
je
cld
mov
dec
mov
ja
jle
sub
xchg
sbb
pop
orb
xor
jbe
popf
push
push
iret
out
hlt
adc
push
fs
roll
dec
mov
hlt
or
mov
popf
in
cld
mov
mov
sarl
dec
pop
ret
push
mov
sub
cmp
fdivr
fmulp
xor
outsl
aas
daa
cmp
movsl
push
lahf
xchg
adc
xorb
or
sahf
push
int3
jae
aam
dec
push
push
jb
inc
xchg
in
xchg
mov
mov
in
and
dec
lods
aam
fcoms
nop
push
fwait
adc
mov
mov
and
std
nop
mov
ja
pop
popf
mov
xlat
js
loopne
inc
inc
sub
mov
push
cmp
pop
cwtl
sub
pop
sbb
les
sbb
popf
in
push
mov
addr16
addr16
pop
dec
jge
dec
jp
cmpb
jle
testb
jbe
push
xor
xchg
mov
pushf
mov
test
push
sbb
aaa
mov
push
or
dec
divl
inc
jb
pusha
or
sub
push
push
in
adc
bound
stos
adc
cmp
xor
stos
lods
gs
pop
mov
jp
add
adc
xchg
push
incb
aas
fnsave
xlat
mov
xor
nop
ljmp
cmc
mov
insl
mov
imul
mov
add
push
pop
aad
sub
out
xchg
inc
push
movsb
cmp
mov
jmp
sub
dec
in
das
cmp
mov
mov
sub
fs
jno
ret
addr16
je
push
outsl
scas
shr
mov
add
js
push
inc
or
sahf
decb
bt
inc
and
cmp
mov
stc
rcl
add
icebp
sub
sti
mov
adc
ds
mov
sbb
jge
jae
pushf
in
xor
int
cltd
fistpl
jb
ret
inc
or
push
jnp
mov
stc
cmp
pop
adc
ja
sbb
fisubrl
dec
jnp
xlat
cwtl
pop
outsb
outsb
xchg
fnsave
mov
aaa
and
lock
jnp
rclb
cmp
mov
dec
cmp
mov
inc
jg
sub
js
sub
lock
add
pop
dec
sar
and
ja
repz
lock
mov
aam
sub
js
inc
imul
in
add
cwtl
pop
ja
insl
subb
mov
fdivs
fisubl
int
mov
stc
imul
add
pop
add
aad
icebp
repz
call
jae
push
jmp
jb
fwait
inc
or
fdivrl
sub
mov
aas
rcrb
xor
dec
cmp
mov
pop
dec
inc
fxch
adc
push
int3
push
sti
mov
and
test
js
adc
push
stos
jb
xor
adc
and
cmp
xchg
push
daa
in
mov
std
mov
mov
push
jno
mov
call
and
inc
imul
in
push
or
popa
push
cmp
cmp
out
adc
into
jne
pushf
and
mov
shll
mov
jns
or
mov
out
mov
push
outsb
add
das
lods
sbb
scas
icebp
push
outsl
mov
xchg
daa
jne
push
es
xchg
jne
out
add
add
jecxz
fcomps
mov
push
mov
sub
sbb
sub
loop
adc
jo
inc
fistl
dec
push
clc
ds
data16
add
xchg
fisubrs
xchg
inc
pushf
out
inc
mov
test
sub
dec
add
jns
jge
mov
lret
sub
sbb
shll
push
mov
int3
cmp
jno
test
jnp
fnstenv
out
push
call
lahf
mov
push
mov
mov
test
adc
in
loope
mov
mov
in
mov
mov
add
std
fwait
lods
in
fs
js
fs
push
and
loope
mov
mov
fdiv
repz
jnp
rcl
jae
out
out
cmp
xchg
shll
jl
test
pop
scas
mov
out
jmp
in
pop
outsb
cli
bound
adc
cmc
mov
ss
mov
cmp
push
outsl
stos
leave
push
add
xchg
pop
cld
inc
in
lock
xchg
aad
ja
inc
mov
rorb
movsl
jne
cwtl
sti
gs
add
mov
jl
xor
push
push
js
mov
mov
mov
lcall
xor
jmp
mov
dec
lods
jae
mov
movsb
inc
stos
xchg
mov
scas
or
popa
mov
mov
rol
jns
scas
mov
or
dec
push
outsb
filds
test
dec
movsb
mov
sbb
fwait
sbb
cmpsb
push
std
shlb
dec
pop
cmp
or
lods
cli
das
ja
stos
xchg
jg
jmp
xchg
aad
into
cltd
test
ss
jne
inc
mov
shlb
lret
bsr
in
pop
decb
mov
push
fcmovu
xor
xchg
lret
pop
pop
mov
out
xchg
xor
push
sbb
push
sbb
pop
lret
lret
mov
xor
mov
fstpt
in
movsb
push
dec
cmpsl
icebp
ds
pusha
push
sub
dec
xor
repz
fstl
xchg
mov
stos
out
scas
mov
popf
mov
pop
sbb
sub
orl
mov
notb
jb
jmp
lods
push
mov
inc
cltd
roll
mov
scas
xor
adc
aas
fs
sbbl
push
or
gs
add
jecxz
rcll
adc
mov
cld
or
mov
push
aas
sub
jae
loop
push
sbb
fldenv
std
dec
or
xor
and
ljmp
xor
out
in
mov
mov
jo
push
pop
push
fimull
jecxz
push
enter
lea
lahf
push
add
jecxz
mov
mov
jg
iret
aaa
jp
push
pop
jae
xchg
adc
sarb
fdivrs
mov
imull
loopne
inc
cli
out
cmp
inc
push
jnp
mov
mov
dec
push
inc
or
cmpsb
jne
mov
sbb
jns
inc
daa
pusha
mov
and
pop
cmp
lea
inc
mov
jae
das
call
daa
scas
std
sbb
pop
push
mov
addr16
pop
notl
jmp
and
outsl
movswl
jmp
mov
mov
in
xchg
out
mov
daa
outsl
dec
sbb
sbb
imull
repnz
or
not
jle
loope
or
or
call
jno
mov
test
ret
fildl
xchg
fistpll
xor
or
sarb
add
ljmp
xchg
rcrb
mov
pop
dec
and
pop
cli
sarb
in
mov
outsl
ret
fstps
fcomi
add
sbb
pop
xchg
mov
or
cmpl
imul
inc
inc
mov
pop
clc
scas
add
inc
dec
aam
dec
xchg
mov
movsl
dec
int3
pop
cs
pop
dec
jo
sbb
test
jb
int
xchg
xor
sbb
push
xchg
lahf
sub
dec
lret
push
std
push
jbe
out
inc
scas
push
stc
sub
sub
inc
adc
dec
xor
and
inc
sahf
shll
add
mov
je
neg
jno
dec
jge
shlb
mov
std
addb
add
mov
popf
call
pop
push
testb
je
mov
sub
ret
push
data16
hlt
dec
fcoml
inc
mov
testb
xchg
xchg
pop
mov
jbe
mov
lods
cmpsw
mov
lcall
ljmp
leave
jle
cld
pushf
xchg
loope
mov
adc
les
fidivs
cmp
mov
jne
pop
je
inc
pop
movsb
push
mov
pop
cmp
aad
add
mov
mov
imul
jl
sub
mov
adc
lret
lahf
ja
pop
ljmp
imul
or
outsl
stos
pop
and
dec
ret
jecxz
xor
movsl
push
mov
outsl
adc
pushf
dec
fldenv
clc
aas
fs
popf
jb
movsl
xor
jne
lds
repz
test
inc
sbb
sub
fmull
mov
mov
or
and
jecxz
mov
adc
sub
cld
out
push
and
out
mov
ss
ret
jns
imul
xchg
ja
sbb
add
sti
cmp
adc
aaa
xor
rorl
add
ss
add
lahf
pusha
das
cmp
mov
push
mov
ret
lock
adc
iret
mov
pop
jge
lock
loop
cmp
rolb
adc
sbb
mov
and
outsl
and
data16
test
push
dec
sbb
or
stos
test
mov
mov
test
sbb
or
test
xor
jecxz
jns
daa
jo
movsl
xor
sahf
dec
into
es
dec
add
hlt
inc
movsb
xor
test
cmp
icebp
mov
mov
cld
and
inc
mov
inc
and
lock
loopne
xor
lea
das
popa
jecxz
daa
mov
test
adc
lret
and
aam
adc
or
aad
lahf
fcompl
lret
push
dec
cwtl
mov
lds
into
push
sub
dec
or
leave
stos
push
test
les
push
or
in
add
inc
xchg
mov
in
push
aam
sbb
xor
rorb
dec
and
outsl
popf
sub
add
mov
jnp
aad
ljmp
cmp
imul
jl
push
sub
and
in
xor
xchg
sub
sub
stos
roll
or
pop
mov
jo
mov
sbb
mov
push
mov
iret
icebp
add
jne
mov
in
cli
int3
cmp
jb
inc
jns
pop
mov
add
mov
repnz
js
scas
stos
sub
sbb
xor
sbb
fldt
test
cmpl
pop
outsl
pop
enterw
xlat
and
or
lret
dec
mov
xor
pop
pop
dec
test
fmull
dec
stc
dec
std
mov
cmp
lahf
pop
outsb
inc
loope
mov
sub
mov
push
mov
or
sbbl
out
push
flds
mov
mov
mov
xchg
ljmp
mov
xchg
mov
aam
jnp
test
push
shrl
aas
inc
fsts
pop
sub
or
jg
sbb
mov
mov
inc
mov
adc
icebp
xor
and
sub
fstl
hlt
mov
std
daa
out
incl
push
add
jno
add
jbe
adcb
jbe
push
mov
cltd
sub
daa
xchg
ljmp
cmp
pop
pop
insl
jae
cwtl
into
shrb
mov
rcrl
jno
mov
mov
lock
xor
add
rclb
fucom
xchg
mov
fistl
and
xor
add
push
in
adc
test
mov
push
mov
mov
out
stc
adc
and
jnp
jbe
pop
push
mov
mov
cmp
sbb
dec
pop
enter
mov
jns
jb
les
sbb
mov
dec
pop
fs
jno
sub
rcrb
outsb
mov
imul
fcmovnbe
mov
pusha
into
mov
dec
xchg
subl
jno
mov
xchg
xor
or
test
dec
pop
lock
enter
pop
or
jae
fldz
jo
nop
test
insb
or
mov
jge
xchg
mov
data16
stos
jno
lea
test
shrb
inc
in
or
or
iret
jmp
pop
jns
mov
dec
dec
sbb
in
repnz
jl
cmpb
lcall
add
push
mov
mov
and
push
push
fstp
sbb
icebp
pop
jmp
sbb
out
xor
inc
and
lea
je
sub
out
int3
loopne
orl
mov
jmp
xchg
sbbb
movsl
pop
cltd
sbb
xchg
scas
mov
xor
lea
cmp
push
lret
add
cwtl
pop
imul
jp
mov
pop
pop
popf
test
test
mov
pop
js
cmp
int
and
movsl
mov
repnz
ret
es
adc
out
testl
ss
bound
popf
pop
int3
pop
jb
add
insl
dec
inc
std
xchg
enter
data16
mull
sbbl
pop
outsb
rcll
mov
pop
dec
cli
shrl
cs
call
loop
inc
repz
ja
mov
ret
mov
mov
stos
mov
mov
nop
cmp
push
cmp
or
ds
rorb
mov
xor
cwtl
fdivl
les
pop
xor
test
ror
repnz
jmp
sub
pop
insb
xchg
lds
and
mov
lods
and
aaa
hlt
xor
mov
inc
dec
cmpb
fsub
leave
mov
pop
scas
outsb
in
mov
hlt
dec
xchg
xchg
mov
cmp
insb
sub
idiv
mov
xor
add
ret
adc
xor
jg
sbb
cld
mov
loope
fsts
orb
xor
pop
fldcw
aam
hlt
dec
mov
xor
cwtl
jmp
cmp
sub
mov
repnz
mov
dec
jge
sub
daa
mov
mov
xchg
push
fcmovnbe
jle
fisttps
add
jp
push
inc
shlb
sub
inc
xor
sbb
add
pop
stos
mov
push
push
add
pop
pop
out
sub
loopne
mov
adc
jg
dec
sub
pop
movsb
ret
xchg
mov
dec
out
loope
fists
xchg
cltd
push
adc
or
mov
outsb
inc
or
cmp
in
stos
inc
insb
fwait
nop
andl
leave
cmpsb
cmp
adc
jge
jnp
in
in
xor
xor
test
out
in
sbb
insl
shr
ja
or
lcall
loop
sbb
adc
js
push
clc
aas
sub
mov
cmp
into
rcrl
sbb
lods
add
loop
test
int3
daa
leave
sti
mov
and
pop
mov
out
rorl
test
rorb
mov
lea
add
in
inc
fsubrl
nop
pop
pop
lea
mov
jae
xchg
int3
and
repnz
or
stos
pop
js
pop
jmp
call
sti
sbb
sbb
out
xchg
inc
shl
cmp
cmp
insb
negl
xor
mov
pop
in
add
ret
ja
loopne
into
cmpb
aam
xor
movsl
mov
ja
push
lahf
nop
push
lahf
enter
push
push
push
test
mov
dec
pop
cmp
adc
stos
xchg
sets
push
daa
pushf
inc
jmp
inc
push
sub
andl
aam
cmp
jp
push
ss
mov
aam
leave
ret
lods
nop
iret
lea
popf
lock
pop
pop
jecxz
push
add
stos
inc
jp
nop
loopne
mov
icebp
stos
into
mov
das
and
cwtl
lea
cwtl
dec
pop
fidivs
out
out
fwait
jecxz
mov
pushf
ss
stos
mov
das
jns
cmp
lret
mov
xlat
cmc
push
test
out
sbb
clc
imul
lods
cmc
push
in
xchg
insl
xchg
aas
ljmp
cld
jg
and
xlat
pop
hlt
mov
sbb
sahf
pop
pop
sub
lods
ficoms
shrb
das
clc
inc
js
sarl
xchg
lods
stos
adc
fimuls
pop
clc
xchg
add
push
xor
jp
jp
mov
addb
xchg
mov
enter
add
ds
arpl
les
push
and
push
pop
push
in
fisttpll
popl
add
xor
pop
mov
imul
push
mov
inc
push
xadd
xchg
movsl
cmp
mov
and
fldcw
inc
xor
fs
jns
cltd
dec
push
lcall
das
fucomip
mov
inc
jns
orl
ret
cmc
jns
xchg
insl
and
xor
inc
jmp
int3
rcll
jp
roll
xor
lock
mov
xor
and
adc
sbb
fcom
mov
xor
inc
and
adc
sub
cmpsl
cwtl
add
fidivs
push
mov
cwtl
dec
mov
or
int3
mov
adc
jecxz
stos
fistps
mov
adc
nop
inc
mov
aaa
jb
repnz
mov
inc
jle
jmp
cmp
ret
aad
pop
inc
aad
subl
mulb
push
push
popf
nop
es
imul
xor
mov
lret
mov
cli
shll
mov
jmp
in
jge
xor
pop
stc
pop
xchg
outsl
mov
push
mov
cmpsl
mov
adc
std
xchg
call
xchg
call
outsl
mov
dec
pusha
xlat
mov
mov
scas
jmp
in
jmp
pusha
dec
and
cmp
add
cmp
out
cmpsl
in
xchg
loop
fstpl
js
insl
imulb
fists
jns
fprem
push
repnz
sub
cmc
jl
aad
popl
xlat
cmpsl
lods
jb
dec
pop
push
outsl
stos
in
cld
pop
xchg
dec
push
fldt
jo
jle
cmp
sbb
out
dec
ljmp
sti
xor
pop
sub
or
and
aas
cs
xchg
scas
xabort
lea
pop
mov
insb
in
xor
in
gs
dec
call
add
rolb
test
cmpsl
add
lahf
loop
cmp
loope
mov
dec
push
dec
jl
pop
add
pop
loop
xlat
sub
mov
int3
repnz
lock
sub
dec
lods
push
stos
cli
adc
or
cmpsb
icebp
cmc
loope
push
dec
dec
xchg
aam
pop
push
call
mov
les
clc
fcmovbe
lock
leave
add
insb
stc
or
pop
cmp
shll
out
adc
pushf
inc
lods
sub
cmp
adc
xor
adc
lea
jl
outsb
iret
push
add
jno
cmpb
icebp
adc
dec
out
ss
pop
fidivrs
fsts
in
stc
xchg
popa
xchg
inc
sub
nop
stc
cltd
pop
out
pushl
push
pop
ret
mov
push
push
pushf
and
xchg
ja
enter
dec
lods
mov
push
jb
lret
scas
stc
cmpl
or
test
jae
cmpb
jbe
inc
xchg
andb
jl
mov
inc
ds
pop
jo
outsl
cmp
cwtl
mov
lret
lcall
rcl
mov
fsubs
dec
cltd
sahf
gs
in
popa
daa
jl
jbe
and
add
push
pop
xchg
decl
fisttps
xor
xchg
inc
jp
inc
jmp
mov
test
mov
jmp
add
add
push
xor
mov
xchg
jbe
mov
mov
xchg
negl
or
mov
inc
mov
les
icebp
sub
into
sarb
enter
jne
imul
jl
xsha1
push
sbb
in
sahf
fstpl
pop
push
scas
push
setp
add
out
inc
gs
sti
shll
lcall
xor
in
mov
lods
pop
mov
dec
pop
mov
mov
cmpsl
push
or
push
xchg
lods
insb
cmp
fnstsw
andl
push
dec
jmp
adc
ja
les
adc
int3
pushf
push
push
add
in
test
test
loope
repnz
jnp
and
movsl
repnz
idivl
aaa
push
mov
adc
xchg
aam
in
mov
lods
xor
xchg
jmp
push
push
or
fsubr
in
fndisi(8087
notb
out
icebp
rdtsc
fisubl
xor
insb
xchg
push
mov
testl
sbb
sbb
push
dec
pop
add
adc
cmp
cmpsl
mov
cli
mov
fdivrp
icebp
out
dec
mov
xor
cmp
add
pop
popf
sbb
jecxz
add
or
inc
jns
or
cmpsb
aad
stos
sub
fisubs
mov
inc
jle
lock
cmpsl
mov
rcrb
add
xchg
mov
xchg
sub
fmulp
mov
lret
inc
cmp
inc
jo
cmp
push
lods
repnz
repz
jecxz
pop
flds
dec
lret
andb
xor
pop
dec
ja
test
jg
ljmp
mov
mov
adc
ja
lcall
or
lret
inc
and
imul
in
mov
mov
pop
enter
sub
insl
gs
push
dec
fcomi
jmp
dec
jbe
mov
push
hlt
add
sub
mov
imul
outsb
dec
sbb
sub
push
push
and
mov
push
lcall
adc
aad
mov
mov
and
aad
push
shl
cmp
mov
popf
or
push
adc
imul
xor
xor
dec
cwtl
jnp
or
lret
or
outsb
pop
mov
daa
scas
pop
jno
pop
lcall
fstl
pop
mov
mov
cmpsb
jno
das
pop
inc
pop
popf
xchg
arpl
and
dec
xor
push
dec
mov
clc
lret
jmp
lock
stos
nop
sbb
push
add
xlat
push
add
mov
movsl
and
aad
and
dec
sub
lcall
and
imul
shll
add
fbstp
pop
movsl
mov
bound
xchg
jp
fsubs
into
mov
in
adc
mov
sub
or
add
dec
pop
fisubs
scas
jge
mov
ljmp
aam
scas
cli
sbb
outsb
orl
inc
or
push
mov
aam
sub
add
and
push
lods
jne
adc
or
mov
dec
adc
inc
ss
mov
add
add
xchg
add
dec
xor
mov
daa
daa
mov
mov
or
jmp
ljmp
push
mov
mov
cwtl
push
jle
shll
add
cmp
add
rorl
out
arpl
repz
cli
imul
xor
in
inc
jb
cs
test
rolb
push
fs
jb
and
inc
ds
fmul
cmpsl
insl
adc
icebp
jb
aam
jl
ret
mov
push
dec
pop
inc
mov
in
into
gs
sbb
testb
negb
lods
int
inc
xor
jmp
dec
hlt
inc
or
dec
xor
lret
jo
sub
add
movsb
daa
pop
lock
std
push
and
or
out
mov
gs
add
adc
pop
cwtl
enter
insl
inc
lcall
out
test
fadd
lahf
in
pop
int3
aas
jmp
cmpsb
fwait
out
xorl
push
clc
xor
js
cli
sub
pop
mov
faddl
stc
lods
mov
push
sub
jle
lret
xchg
or
into
cld
pop
or
xchg
pop
mov
shlb
adc
mov
popf
jnp
sti
xor
pop
xchg
lret
adc
xlat
kortestb
or
in
enter
js
lret
jl
loopne
pusha
fidivrl
pop
aaa
dec
int
jle
out
insb
add
pop
adc
loopne
lret
rcrl
arpl
aaa
xor
pop
aas
ss
mov
mov
xor
bound
popf
push
leave
push
mulb
adc
mov
dec
in
fwait
sarl
mov
cwtl
mov
lea
gs
stos
pop
fsubrl
inc
pop
jmp
lods
sbb
sub
add
sbb
and
cwtl
lds
out
out
je
out
push
mov
cli
inc
mov
out
fwait
inc
push
dec
lahf
arpl
jp
ret
add
mov
dec
stos
loopne
inc
ret
mov
add
mov
lods
and
mov
sbb
mov
movsl
pop
rclb
jge
mov
in
cmp
js
dec
cmpsb
push
mov
pop
sbb
and
sbb
jmp
xchg
fnsave
out
xchg
imul
pusha
jl
xor
scas
out
hlt
outsl
lds
push
fiaddl
adc
call
pusha
mov
mov
cmp
adc
pop
divb
xchg
out
sub
xor
inc
mov
jl
cli
pop
pushf
mov
imul
movsl
pop
shrl
jmp
sahf
push
fs
pop
out
nop
pop
sbb
mov
push
call
sub
jle
or
sub
push
pcmpeqb
xchg
lret
lahf
pop
push
inc
int
pop
je
xor
mov
mov
mov
mov
negb
push
mov
into
adc
jecxz
jle
cltd
cmp
jl
pop
mov
aaa
out
in
xor
sub
dec
cld
lods
pop
leave
out
enter
xor
mov
dec
xchg
mov
lcall
scas
and
cwtl
inc
in
push
and
ljmp
addr16
int
jp
test
test
into
pop
aad
cmp
movsl
insb
out
movsl
jg
xlat
xchg
inc
ficomps
fs
push
sub
jb
arpl
aam
icebp
xor
sub
fwait
or
dec
jl
mov
repz
pop
in
jae
js
icebp
mov
cmp
pop
mov
xorb
jl
add
hlt
lea
and
sbb
xor
lock
xor
jmp
sub
inc
xor
mov
jno
mov
xchg
or
shll
arpl
roll
leave
xlat
xor
mov
xor
pop
add
push
mov
mov
push
scas
push
push
cmp
jb
add
ja
out
mov
mov
adcl
js
std
and
rclb
and
dec
scas
orb
adc
int3
ret
lret
scas
fst
and
inc
xor
faddl
mov
pop
in
inc
outsb
mov
push
jg
jmp
sub
add
sbb
inc
pop
sbb
cmpsl
cmp
mov
xor
lret
imulb
pop
test
clc
inc
xchg
push
adc
fcoms
pop
dec
adc
or
out
sub
out
or
sub
loop
mov
std
ret
jl
jae
jl
sub
add
mov
jl
fisttps
mov
hlt
mov
mov
test
leave
inc
xor
imul
stos
or
nop
xchg
and
add
je
iret
lods
sbb
inc
rsqrtps
xchg
frstor
cmp
imul
sub
mov
andl
mov
repz
cmp
sarb
adc
inc
clc
flds
mov
and
or
mov
stos
aaa
rcll
fstpt
and
lock
mov
out
xchg
mov
sub
loope
adc
mov
add
mov
outsl
and
pusha
mov
add
or
add
ljmp
call
jo
jnp
mov
stc
dec
loop
jle
adc
push
arpl
pop
enter
cs
je,pn
outsl
inc
ds
shrb
jmp
inc
insb
sti
int
add
rcrl
xchg
pop
stc
xchg
enter
fwait
lcall
push
jecxz
shlb
dec
cwtl
mov
mov
in
xchg
fdivs
out
rcl
ljmp
inc
in
pusha
nop
fs
hlt
mov
cmpsl
outsb
pushf
inc
pusha
pop
pop
sbb
jns
cmpl
dec
push
loopne
js
jbe
fisubs
dec
sahf
aas
push
stos
inc
mov
jne
or
mov
cmp
ljmp
imul
cmp
je
in
test
imul
movsb
mov
jmp
aas
mov
adc
push
pop
pushf
in
xor
push
fimuls
or
lcall
sarl
iret
mov
es
test
pusha
jecxz
or
cld
xchg
jp
push
fldenv
mov
int
mov
xchg
jp
lock
cmp
push
xchg
and
mov
out
pop
std
aad
mov
leave
pop
mov
dec
push
sub
and
inc
inc
mov
sub
adc
mov
notl
iret
sub
lea
sub
mov
mov
insb
cld
enter
pop
cvtdq2ps
add
mov
mov
lock
fists
cmp
sbb
stos
popf
nop
in
mov
jno
sub
out
cwtl
dec
push
jne
cmp
roll
imul
dec
iret
xchg
into
jmp
mov
add
outsl
js
ljmp
les
subb
stc
in
pop
lods
ficoml
mov
inc
dec
decb
add
movsb
mov
mov
or
jecxz
add
shl
dec
mov
dec
push
push
push
dec
jns
outsb
push
outsb
mov
ja
lds
insb
test
cs
pushf
das
cmp
inc
sarl
xchg
out
jg
bound
sbb
cli
call
mov
je
push
pushf
push
lahf
or
or
addr16
adc
aad
js
inc
flds
push
fisubl
ret
inc
adc
das
sbb
pop
sub
fucomp
mov
cmpl
mov
ss
scas
das
aas
xchg
push
imul
rorl
sbb
jecxz
inc
mov
and
inc
lods
arpl
rcrl
add
push
inc
push
into
dec
das
shl
push
cmp
pop
inc
loopne
out
lock
fmull
xor
in
fucomip
jns
mov
adc
insl
mov
mov
mov
jmp
ljmp
roll
push
ret
leave
add
jp
fbld
shrb
xchg
lcall
xchg
mov
mov
push
or
push
add
fistl
sahf
inc
cmpsb
jbe
adc
hlt
daa
cmpsb
mov
aaa
dec
test
pop
mov
push
rcll
stos
cmpsb
xor
sbb
popf
mov
fsubrl
rclb
sub
sbb
mov
lcall
sti
dec
aas
jp
pop
inc
mov
push
sbbl
loope
pop
and
mov
ret
and
divl
pushf
mov
push
aaa
jnp
ficoms
push
or
lods
shll
cli
push
sbb
mov
and
insb
dec
and
loope
xchg
pop
movsl
fwait
or
mov
jo
jge
pop
xor
out
adc
jb
cs
cmp
les
test
call
mov
mov
xchg
jnp
or
es
sti
cs
mov
in
mov
lods
push
popa
add
in
das
cmp
dec
ss
add
data16
or
mov
sub
jnp
fstps
leave
push
sub
aam
add
stos
roll
adc
mov
out
imul
test
push
out
mov
mov
rorl
and
cmp
sti
icebp
xchg
jbe
imul
push
fstpl
hlt
inc
mov
aas
clc
and
js
adc
mov
cmp
xchg
lea
rorb
addb
cmp
in
insb
scas
popf
xchg
cmc
mov
cmp
and
rorl
or
popf
xor
not
repnz
and
jl
dec
je
push
sti
fistpl
mov
fildll
mov
test
aaa
call
push
out
adc
or
mov
data16
cmpl
sbb
outsb
or
maxps
inc
fwait
xchg
in
dec
pop
sub
icebp
xchg
subl
dec
sahf
push
sub
mov
dec
jb
imul
nop
mov
lea
lock
add
jecxz
sbb
xchg
into
icebp
sbb
adc
jecxz
loopnew
xor
mov
cwtl
mov
shlb
fisubl
sub
jb
js
ret
mov
jp
dec
jbe
xor
push
xor
dec
movsl
and
imul
lds
and
xor
mov
cs
sbb
out
enter
sub
popf
add
cmp
insl
and
test
in
in
push
shll
pop
aas
inc
addr16
push
mov
mov
sub
fs
mov
lret
sub
adc
sbb
inc
xchg
test
mov
popf
out
outsb
mov
ljmp
scas
inc
pop
test
divb
in
or
sbbb
cmp
jnp
pop
lock
ret
cmpsb
dec
jo
xor
cmpl
mov
loope
adc
xchg
xor
movsb
outsb
xor
sub
lret
fstl
inc
js
push
adc
xchg
lods
data16
jae
dec
cmp
inc
or
or
sub
inc
or
pop
add
or
pop
in
sbb
jns
popa
mov
pop
mov
pop
js
sub
repz
cmp
shll
adc
repz
sbb
lods
mov
outsl
sarl
xchg
cmc
cltd
loopne
add
std
rcll
jmp
jb
insb
shl
or
imul
lock
mov
lcall
mov
lea
cltd
test
addr16
fwait
lret
inc
pop
pop
loopne
cmp
adc
stos
pop
jns
sub
add
enter
or
xchg
add
nop
movsb
and
adc
icebp
stc
or
stc
inc
or
sbb
ret
pop
outsb
mov
fsubrl
stc
das
xchg
mov
sub
pusha
pop
xchg
rclb
cltd
push
mov
outsl
pop
repz
pop
xchg
fwait
xor
out
lds
in
sarb
inc
dec
jg
xchg
inc
cmp
and
mov
mov
mov
mov
cmpsb
mov
hlt
and
fs
notb
mov
repnz
lds
cld
popf
mov
jo
xor
dec
ljmp
sbb
icebp
insb
mov
sti
mov
clc
aad
pusha
or
xlat
add
or
cmp
addr16
data16
or
je
pop
imul
sahf
leave
stos
adc
mov
or
stos
fs
out
xor
lret
adc
sbb
divb
dec
mov
outsb
negl
stc
jp
cwtl
and
fiadds
fists
xor
inc
and
in
inc
jb
cmpsl
push
push
add
mov
and
sub
or
nop
cld
jo
sbbb
add
push
cld
lock
adc
sub
lock
xor
inc
mov
ja
in
pop
sbb
xchg
pop
shl
push
enter
sbb
lods
insl
mov
adc
cmp
mov
jl
andb
cli
xchg
add
mov
adc
jo
inc
dec
negl
mov
cmpsb
out
mov
jnp
in
mov
clc
imul
xchg
notl
movsl
xchg
addb
aaa
cld
shrl
xor
inc
insl
mov
ss
lret
jl
and
pop
ret
test
lods
cwtl
cli
xchg
xchg
push
or
pop
shll
aam
imul
sbb
imul
movsl
cmp
push
rcll
je
xchg
arpl
mov
cmp
sbb
lahf
in
mov
imul
push
push
lret
lret
jge
in
xchg
and
sti
jne
mov
dec
movsl
dec
jne
cmpsl
call
jmp
mov
iret
lods
xchg
addr16
cwtl
lods
jae
mov
std
mov
add
dec
or
cmp
pop
or
mov
mov
shrl
ror
jmp
cltd
or
push
xchg
cmp
jne,pn
push
add
pushf
push
add
jae
hlt
add
xchg
idivb
mov
rclb
out
mov
pop
stc
xor
pop
xor
sbb
lds
imull
mov
mov
pop
sbb
pop
ss
aas
dec
subl
cmp
idivb
lret
sbb
in
aaa
inc
xor
fcompl
shlb
fstps
pop
lahf
test
jl
and
js
dec
hlt
jecxz
js
xchg
idiv
jne
outsl
pop
fimull
add
imul
loope
shll
daa
xchg
cli
popf
push
cwtl
popa
xchg
int3
jne
xor
imul
lods
mov
pop
pushf
mov
imul
jmp
test
mov
aas
into
push
or
out
mov
and
inc
or
out
and
ds
cmp
lock
ja
dec
push
data16
dec
push
dec
ljmp
jmp
je
inc
jns,pt
lahf
lods
cmp
and
mov
shl
and
jo
les
add
pop
test
mov
sbb
cmc
add
xchg
or
rorl
push
xchg
push
mov
fbld
mov
mov
dec
xor
in
or
mov
in
xor
sar
shll
fstl
faddl
inc
lret
or
in
and
and
in
mov
popa
jne
pop
push
xchg
sub
mov
sub
in
dec
dec
push
daa
rol
lret
sti
leave
inc
mov
in
ficompl
pop
negb
inc
jl
or
and
fildl
addb
std
push
dec
pop
mov
test
xchg
jp
int
es
dec
mov
fnstenv
testl
or
fwait
mov
lock
cmp
push
scas
loope
and
mov
movsl
pop
and
xchg
and
xor
mov
icebp
cmp
and
cmc
aam
lahf
mov
pushf
cmp
insb
popf
ljmp
ficoms
gs
mov
in
mov
call
ja
add
push
gs
push
pop
mov
pop
popa
jp
mov
enter
inc
popa
and
mov
mov
sub
xchg
pop
and
mov
movsl
jmp
jae
cmp
cltd
mov
insb
repz
sbb
movsb
out
jbe
dec
lea
ss
jg
cmp
dec
call
rcrl
xchg
xor
sahf
mov
jbe
mov
les
jmp
int3
popa
push
jge
jb
cwtl
inc
adc
shr
jns
jne
insl
in
and
imul
fisubrl
jle
fcmovnu
out
cmc
ds
push
cltd
xor
aad
outsb
jg
roll
fcompl
dec
fstpl
mov
adc
dec
mov
scas
outsl
jns
ds
jo
stos
decl
cmpsl
xor
cmp
mov
insb
adc
mov
add
jp
xor
jp
int3
lock
add
ds
sarb
out
lret
notb
in
pusha
movsb
xchg
fwait
icebp
scas
inc
jg
fwait
imul
fdiv
sbb
mov
std
in
addr16
pushf
jle
mov
xor
mov
and
inc
movsl
and
das
sbb
jp
pop
cltd
or
dec
or
add
cmc
jp
mov
arpl
push
test
xchg
cmp
or
push
add
sbb
sbb
pop
mov
or
test
cld
sub
mov
cmp
xchg
xor
jl
push
xor
fsubs
repnz
shrb
sub
jb
xchg
ja
movlps
ljmp
imul
xlat
popa
shll
out
leave
mov
mov
mov
jg
xlat
ja
ljmp
or
mov
mov
and
mov
xor
cmp
int
je
jns
data16
push
mov
and
pop
adc
fwait
mov
mov
xchg
mov
adc
in
mov
mov
lock
fstpt
loopne
mov
lret
arpl
jp
pop
xor
test
mov
cmc
and
stc
ja
inc
push
inc
insb
lock
lret
mov
mov
push
adc
inc
pop
cmpsb
cs
push
xchg
ljmp
xchg
and
repz
mov
fstpl
sbb
dec
pusha
mov
sbb
sbb
pop
mov
loope
icebp
or
adc
rcr
mov
movsb
mov
outsb
add
sub
sbb
aaa
cwtl
dec
jge
mov
mov
into
adc
jl
xor
mov
cmp
aam
xchg
lcall
inc
xchg
xlat
xor
popf
roll
adc
sbb
xor
jnp
mov
lcall
popa
pop
rcll
dec
enter
mov
pop
or
cmp
jno
pop
loopne
pop
xor
arpl
ja
jae
sub
outsb
jg
jp
or
cmp
push
pop
xchg
push
movsl
leave
xchg
sbb
or
leave
imul
fwait
cld
mov
loopne
push
jb
xchg
fldcw
or
inc
add
daa
into
xchg
xchg
cmpsb
sahf
mov
shlb
dec
lahf
sbb
cmp
ret
sub
test
mov
push
fbstp
xlat
sub
shr
ja,pt
add
jbe
mov
push
movsb
inc
stc
roll
or
int
repnz
push
fcomi
lahf
insl
or
xchg
sub
sub
mov
lea
fisttpl
in
push
pop
inc
mov
inc
insl
jl
lahf
stc
push
movsl
dec
lret
sub
push
xchg
scas
out
test
ss
shrb
popf
xchg
negb
push
mov
push
cltd
in
push
push
xor
test
fisubrs
jne
mov
aam
ret
lret
in
fdivs
bnd
pop
inc
sub
dec
fsubs
lock
imul
xchg
mov
fs
push
and
cmpsb
xchg
cmpsl
in
sbb
sbb
pop
loope,pn
adc
mov
dec
cmpsl
loop
in
pop
lcall
mov
adc
inc
enter
insl
push
popf
clc
dec
mov
jns
subl
push
nop
inc
cmpsb
cmpsb
shrb
jge
adc
mov
lret
movsb
sub
push
sbb
inc
into
scas
out
or
shrb
outsb
iret
push
sti
push
lahf
sbb
repnz
dec
into
mov
lret
jb
aas
outsl
aam
push
jnp
shlb
es
popf
stc
mov
or
push
mov
xchg
dec
xchg
push
inc
or
push
cli
sti
sti
fcoml
mov
pop
sahf
mov
jge
jg
and
aaa
sti
pop
test
pop
imul
add
mov
mov
mov
mov
xor
fcoms
push
fisubs
lds
pop
inc
loop
pop
push
loop
jl
or
xor
scas
insl
fdivrl
lods
push
sub
sub
jl
dec
sbb
cmovp
in
sub
dec
and
clc
inc
mov
cmpsl
push
or
and
clc
inc
pop
and
sub
aaa
sub
xchg
movsb
rorb
leave
addl
cld
sarb
sahf
mov
imul
jns
shrl
jo
sub
mov
inc
sysenter
add
les
push
ss
aad
aas
fists
jo
sarb
test
in
mulb
cld
push
insb
inc
xchg
adc
mov
mov
icebp
cmpsl
adc
push
int3
dec
push
pop
ret
dec
fildll
jl
cmp
cmp
mov
jbe
jno
imul
ret
daa
inc
test
or
data16
sti
dec
popf
and
stos
sub
out
clc
das
adc
inc
xlat
rcr
inc
push
push
sub
cmpsb
mov
in
inc
lock
icebp
test
fimull
and
lret
or
mov
in
pushf
push
bound
fdivs
leave
sub
xchg
out
addb
sub
aaa
int
adc
leave
pop
lret
dec
or
add
add
sti
lock
ret
push
push
pop
ret
outsb
lret
jle
rorl
mov
dec
clc
int
mov
xchg
cmp
jno
stos
ret
outsl
and
jg
inc
arpl
sbb
cld
out
das
jcxz
sbb
popf
push
in
push
push
lods
push
fiaddl
shll
sub
enter
addr16
cmpsl
cmc
out
loop
cmp
jge
fcmovnu
aam
cmp
pop
aas
cli
jp
nop
mov
sub
test
clc
cmp
sbb
hlt
idivb
imul
cmp
push
add
mov
sub
inc
lods
js
in
jmp
add
or
js
cmp
mulb
sbb
inc
rorb
lds
push
inc
push
imul
xor
jns
movsb
movsl
xchg
test
mov
popf
hlt
dec
inc
dec
out
adc
in
and
dec
push
xchg
mov
sbb
into
leave
daa
xchg
mov
shr
push
ret
in
popf
inc
push
mov
sbb
scas
loope
rcl
lahf
cwtl
sub
in
push
int3
jns
pop
stos
bnd
cmp
hlt
scas
mov
jl
sahf
xchg
imul
stos
jg
cmp
roll
fistpl
data16
jmp
dec
mov
hlt
lcall
push
int
pop
sub
jne
sbb
jb
lds
out
mov
fsub
pop
inc
in
into
stc
imul
lods
push
push
outsl
xor
mov
cmc
fbstp
push
mov
ret
out
and
rcl
push
and
int
mov
iret
dec
pop
nop
test
sub
lret
xor
dec
testl
into
push
call
mov
test
call
push
stos
sub
adc
push
xchg
or
outsb
insb
insl
out
lcall
rcl
clc
test
je
js
mov
inc
jae
adc
pop
sti
inc
test
mov
xchg
fidivs
xchg
lahf
mov
dec
mov
repnz
and
in
xchg
movsl
aad
shrb
jge
mulb
shrl
sbb
pushf
cs
xchg
pop
fldcw
cli
std
pop
jmp
adc
mov
xor
imul
lods
inc
rcr
imul
xchg
push
rol
ss
push
cmp
jae
sub
pop
sub
mov
xchg
jne
cli
cwtl
stos
jmp
aam
lret
mov
les
jp
push
clc
sub
push
dec
jmp
mov
scas
jbe,pn
lahf
sub
mov
push
out
pop
in
push
push
lods
xor
mov
cmp
jp
dec
xchg
jnp
mov
in
sbbl
push
xchg
sub
cmp
clc
clc
push
jg
mov
fs
xor
test
shl
test
scas
lods
adc
enter
call
dec
jecxz
adc
and
cltd
jmp
mov
cmpsb
jns
xor
mov
adc
sahf
push
xchg
xchg
or
fidivs
lds
sub
into
aas
adcl
sub
ret
in
cs
sbb
add
aaa
addl
jo
icebp
pop
mov
dec
jle
in
idiv
loope
fildll
test
dec
or
aaa
int
bswap
cwtl
test
mov
xor
adc
lods
sti
or
mov
mov
pop
call
xchg
xchg
subl
add
int
mov
pushf
outsl
jge
ja
adc
sub
xchg
mov
out
add
fbld
stc
test
aad
cmp
adc
inc
jnp
sub
aas
das
add
add
fnsave
mov
jne
sub
inc
mov
cmp
or
fdivl
fstps
jecxz
aam
jg
push
cmp
xor
sti
fisubrl
xchg
lret
inc
push
mov
arpl
fmulp
cmp
pop
ljmp
lahf
add
fisubs
mov
sti
sub
jns
fists
pop
stos
mov
insb
push
test
sbb
lcall
lahf
push
cmc
in
mov
cmc
dec
int3
in
aam
dec
rcr
pushf
jae
pop
mov
mov
pop
sub
push
rcll
test
fidivrs
icebp
inc
rcr
rol
adc
lcall
or
xor
in
test
jne
int
pusha
inc
pushl
call
push
popl
jnp
sub
jle
xor
int3
sub
jne
into
mull
jl
xchg
inc
int
jnp
lds
mov
rorl
push
lods
mov
les
cli
mov
insl
loopne
into
lretw
sbb
jno
jmp
data16
xlat
inc
movsl
sti
fisubrl
test
cmp
xchg
movsb
jg
mov
inc
popl
xchg
cltd
jno
nop
insb
jp
dec
pop
or
pop
xchg
sub
mov
sti
leave
mov
mov
dec
dec
jae
inc
aad
daa
sbb
mov
pop
lods
and
in
xchg
or
sbb
mov
mov
cmp
andl
fwait
sub
fs
test
aaa
popa
aam
mov
imul
jb
xchg
adc
mov
or
xor
movsb
fcoml
sbb
lods
frstor
jb
aam
les
inc
cs
mov
mov
fcmovnbe
sbb
sar
jg
mov
mov
bound
or
stc
jle
mov
lods
jmp
iret
repnz
jb
jb
ficomps
loopne
scas
ds
cmpsl
cld
push
sbb
test
add
jecxz
sbb
sbb
or
jns
test
stc
xor
push
repz
js
mov
outsl
aas
sbb
xor
scas
cmp
cld
ror
cmpsb
jmp
sub
addr16
je
cmp
mov
cmpl
add
lods
dec
push
pop
stc
aas
mov
notb
in
nop
popf
mov
jp
xchg
or
push
mov
sub
and
jecxz
sub
and
ljmp
mov
push
mov
pop
fldl
push
or
sbb
inc
sub
mov
movsl
dec
mov
outsl
clc
mov
inc
mov
mov
sub
push
imul
loope
add
sbb
arpl
cmpsb
cmp
jp
mov
gs
inc
pop
pop
mov
imul
xchg
adc
cmpsl
add
pop
pop
xor
xor
pop
pop
and
mov
scas
cmpsl
popf
xchg
lds
sar
sbb
iret
aaa
dec
lret
dec
enter
push
je
sbb
inc
cmp
xor
out
mov
ja
and
fs
enter
cmp
iret
adc
mov
cmc
popf
cmp
and
or
repnz
push
cmp
jg
int3
cmp
mov
sub
push
mov
sub
es
push
mov
mov
sbb
data16
ja
mov
and
sub
xchg
call
vmovmskps
xor
push
adc
cmp
mov
aaa
or
mov
popa
jno
in
test
sbb
cltd
or
sbb
popa
jb
dec
sbb
jmp
push
add
inc
cmc
ljmp
insl
cwtl
in
loope
xchg
nop
fistpll
mov
faddl
loopne
jge
xor
bound
jmp
adc
cmp
mov
jbe
push
scas
pop
or
mov
xchg
call
sbb
sbb
cmp
xlat
sahf
cli
pop
hlt
hlt
notb
mov
or
xor
push
loop
jle
xchg
xor
add
xchg
adcb
test
mov
jne
outsb
push
or
loope
je
cmp
bound
jns
jle
xor
sbb
adc
addr16
loope
cmp
stos
mov
pop
dec
lahf
aaa
insb
aad
inc
inc
sbb
adc
lods
add
xor
popf
and
mov
jecxz
sub
into
cmp
fsubl
popa
push
aaa
adc
and
cld
imul
xlat
inc
clc
xchg
test
daa
cmp
orl
adc
jge
hlt
stc
pop
popf
es
mov
in
mov
pop
adc
cmp
xchg
adc
xor
inc
mov
in
imul
imul
rep
pop
fwait
push
loope
sbb
es
insb
sbb
pop
cmp
popf
jmp
hlt
lds
mov
imul
stos
cmpsb
xchg
loope
out
jae
inc
insl
or
mov
jnp
test
add
test
js
lods
sub
mov
lods
loope
xchg
int3
xchg
pop
push
repnz
stos
mov
push
xchg
mov
pushl
lods
cld
daa
subb
mull
sbb
outsb
sbb
pop
dec
dec
mov
loop
imulb
add
imull
fildll
data16
out
aas
jnp
pushf
cmp
data16
icebp
shll
mov
mov
bound
xchg
or
jnp
inc
cmp
cmp
jo
push
ja
or
out
pop
or
sbb
cmp
inc
cmpsl
rcrl
mov
lahf
stos
bound
sbb
imul
cmc
mov
stc
xor
dec
mov
cmc
stos
adc
dec
int3
call
jge
rcrb
repnz
dec
dec
imul
pushf
or
push
add
or
test
sub
cmp
std
inc
loop
mov
nop
push
in
jp
pushf
mov
adc
mov
scas
cmp
jne
cwtl
ljmp
aas
jbe
xchg
test
xchg
and
jp
mov
push
dec
adc
dec
jae
or
fcmovnu
or
into
ret
and
cld
loopne
scas
cltd
push
ret
inc
subl
lret
mov
dec
bnd
push
clc
mov
inc
loop
jp
gs
push
into
sbb
lea
sub
mov
cmc
dec
pop
xchg
stc
mov
iret
mov
jo
aaa
inc
pop
cmpsb
icebp
in
addr16
jmp
and
and
cmp
mov
fnstcw
jecxz
and
sbb
mov
scas
fwait
dec
pop
add
pop
xor
movsl
mov
or
cltd
stos
mov
jne
jg
dec
mov
imul
pop
out
cltd
xchg
lcall
dec
sbb
mov
push
mov
xchg
mov
cmpl
cltd
clc
das
je
jb
out
pop
jmp
insl
pop
mov
cmp
es
sti
pop
js
push
cli
jecxz
sub
push
mov
lds
add
jns
xlat
cmpsb
bound
sub
mov
and
push
iret
or
xchg
sub
sbb
inc
add
adc
mov
add
fstpt
mov
adc
lock
loope
sbb
mov
pop
cmpb
dec
adc
andl
push
lret
pop
or
mov
xlat
pop
sub
mov
mov
pop
ds
or
cmp
xlat
pop
push
faddl
scas
or
out
inc
imul
mov
cmc
jnp
jg
lea
jb
pop
mov
insl
and
cmp
xor
mov
jp
add
dec
addr16
mov
in
call
rol
dec
test
fisubrs
mov
dec
nop
sub
mov
je
test
add
xor
cmp
add
and
sub
aam
dec
add
aas
sub
xchg
mov
inc
push
cltd
enter
xchg
stos
out
pop
aas
insb
fs
xor
inc
movsl
lods
dec
xchg
fisubrs
jne
pushf
and
leave
ret
jnp
lock
out
imul
xchg
mov
in
std
mov
mov
data16
xchg
mov
add
and
mov
jp
psrad
mov
popf
orb
lea
es
inc
nop
scas
repnz
mov
mov
xorl
filds
dec
lds
xor
stc
push
push
mov
lods
sub
jg
lret
adc
dec
pop
lcall
outsb
hlt
cltd
out
lret
mov
cmp
in
sub
outsb
outsb
push
dec
ror
pop
push
xor
pop
jp
cmp
fmuls
or
addr16
popf
into
lahf
mov
push
aas
mov
lods
imul
div
insl
addb
decb
out
or
xor
insl
lret
pushf
test
cltd
imul
jecxz
pop
sbb
mov
and
pop
lods
test
jo
mov
ret
shlb
pusha
gs
mov
insb
pop
mov
stc
push
insl
mov
repz
cmp
arpl
mov
pop
loop
lret
inc
dec
rclb
push
in
push
inc
pop
dec
aas
and
mov
iret
push
push
leave
dec
jnp
leave
mov
mov
in
lods
out
jne
ficoml
int
mov
lret
adc
ljmp
lods
enter
inc
mov
jnp
rorb
xchg
xor
add
insl
sbb
xchg
inc
popf
mov
stos
dec
mov
test
push
arpl
cmp
jns
cmp
sbb
mov
cmp
xor
das
add
mov
std
gs
add
mov
cltd
mull
lea
push
orl
xor
jle
insl
lds
movsl
popf
xor
icebp
inc
xchg
push
xchg
inc
xor
sub
and
mov
cli
pop
dec
test
scas
into
sbb
inc
stos
and
fisttpll
in
lret
out
mov
sarb
add
cmpsb
sub
push
les
push
es
addr16
pop
cmp
pushf
jmp
sbb
sub
daa
xor
repnz
mov
sbb
rcl
shlb
mov
xchg
sub
in
enter
rcrl
push
aad
fwait
int
into
jmp
fisttps
mov
testl
repz
mov
push
push
shlb
loopne
addr16
jp
sub
cmc
mov
nop
rolb
jg
and
fs
aad
sub
sbb
loopne
ss
std
jbe
daa
mov
cmp
add
lods
mov
hlt
xor
jbe
and
popa
sti
mov
insb
push
addr16
or
jg
aaa
mov
xor
xchg
scas
mov
jl
xor
dec
pusha
mov
fldcw
adc
cmc
lret
push
xchg
mov
popa
out
sub
repnz
mov
jmp
adc
push
cmp
loope
in
scas
pop
xchg
and
ss
mov
jmp
popa
push
xor
hlt
or
mov
rolb
rorl
daa
cmc
lods
lret
push
decl
mov
cltd
xchg
cli
rclb
lods
loop
xchg
jp
cmp
sub
cmpb
in
addr16
insl
xchg
lret
stos
ds
mov
in
sub
mov
push
popf
mov
jmp
and
out
movsb
mov
mov
cmp
das
push
ljmp
ret
adc
push
in
dec
outsl
ljmp
fstpt
das
lea
in
xor
scas
arpl
sahf
out
cmc
nop
mov
xchg
cmp
ja
imul
mov
dec
imul
jp
xchg
insl
add
pushf
insl
mov
cld
jle
xor
repz
in
popf
xchg
or
push
adc
test
add
bound
frstor
aam
icebp
daa
inc
fcomip
ret
cmpl
fisubs
sbb
mov
cmp
jo
dec
enter
xor
bsr
cmp
mov
sub
pop
xor
add
icebp
dec
dec
test
bound
add
and
mov
and
or
movb
repnz
sbb
pop
push
ja
adc
xor
dec
hlt
hlt
out
inc
movsb
adc
mov
sbb
cmp
aaa
in
mov
adc
fmuls
xchg
test
int
repnz
rorl
mov
ljmp
sub
and
popa
mov
pop
test
add
orl
mov
cld
mov
mov
add
pop
jae
loope
cmp
jnp
bound
cmpb
jp
test
inc
popa
mov
inc
addb
adc
mov
push
xchg
mov
cld
pop
inc
insb
push
lea
in
adc
mov
mov
pop
pop
bound
dec
into
cwtl
jns
pop
outsb
sub
fwait
ss
mov
jns
push
cmpsb
adc
fbstp
insl
jb
mov
inc
stos
jmp
rorb
dec
mov
and
cld
call
aad
lods
mov
adcl
mov
mov
xchg
ja
dec
mov
and
fcomip
inc
push
dec
stos
test
call
dec
roll
xchg
ficomps
mov
adc
popf
adc
lret
xchg
or
xor
or
popa
dec
cli
arpl
hlt
adcb
mov
cmp
mov
prefetchwt1
inc
loopne
jg
cli
das
adc
dec
pusha
popf
arpl
fmulp
mov
pusha
mov
or
fcomp
mov
movsb
jbe
mov
dec
out
int3
jmp
and
push
and
jg
stos
jb
fisubrl
adc
enter
addr16
adc
popa
repz
mov
push
idivb
mov
int3
inc
mov
mov
iret
test
lret
push
push
ljmp
cltd
adc
dec
push
fimuls
add
loopne
jg
push
push
lods
sub
lret
cmpl
push
sahf
int3
stos
jns
fcompl
ds
pop
out
ja
cmp
mov
sub
push
les
mov
xchg
cli
inc
out
aas
test
xchg
jbe
in
mov
sbb
mov
daa
mov
int3
or
cmpsl
shll
filds
or
shll
incb
cmpsb
std
adc
sub
aas
call
fstl
adc
mov
fwait
xlat
ficoms
pop
shlb
jae
loopne
loopne
fsubr
lods
repz
mov
cmpsb
dec
jle
bound
das
jne
sub
clc
mov
and
adcb
xchg
jp
or
add
mov
xchg
mov
lock
clc
dec
shlb
mov
stc
xchg
data16
jne
and
setbe
loope
daa
mov
fidivrl
test
fwait
mov
sub
cltd
mov
cmp
popa
xchg
sbb
insb
pop
xlat
loop
sbb
pop
jbe
adc
je
pop
dec
sub
adc
or
scas
and
cmp
add
add
int
ret
mov
add
sbbl
nop
inc
jg
test
xchg
fimuls
mov
adc
cs
cli
mov
mov
ljmp
cmp
outsb
or
js
jle
lahf
cmpsl
xchg
sub
xchg
or
xchg
sbb
mov
xchg
push
nop
jle
bnd
add
ss
mov
std
cmc
adc
cmp
and
push
xor
adc
es
pop
adc
push
dec
cmp
mov
cmp
les
xorb
dec
mov
dec
sub
insb
cli
add
shlb
inc
dec
xor
in
adc
mov
push
je
fistl
stos
imul
inc
mov
xchg
inc
mov
or
xor
inc
pushf
int3
sub
cli
jl
push
test
adc
inc
jge
ret
jg
inc
cmp
mov
push
sub
lcall
pushl
adc
mov
stos
loopne
aad
dec
jmp
xchg
addr16
shrl
sub
cmp
inc
aas
mov
int
jbe
and
mov
out
push
rep
ror
cmpsb
adc
mov
pop
lds
mov
mov
mov
pop
xchg
div
jmp
fisubrs
mov
pop
pop
lds
rcll
shrb
scas
push
popa
xor
mov
stos
add
inc
hlt
mov
dec
lock
imul
push
fincstp
dec
cmpsb
sbb
xor
out
push
push
insb
iret
loop
or
cmp
inc
push
das
pop
push
into
inc
pop
or
mov
stc
cmpsl
aas
cmp
mov
mov
test
pusha
fstl
or
repz
push
lret
into
ja
add
sbb
fcoms
shlb
jl
pop
test
cmpl
mov
les
add
dec
xchg
mov
xchg
lea
sub
dec
sbb
add
negb
or
das
enter
ja
icebp
cmp
push
xor
shrb
push
sbb
xor
add
aam
mov
gs
mov
mov
lahf
stc
fwait
and
lea
pextrw
mov
mov
scas
fadds
pop
arpl
push
xchg
js
cs
fadd
mov
dec
aaa
and
xchg
js
call
jmp
dec
cmp
or
sbb
pop
push
cmc
cltd
adc
jo
mov
aam
out
scas
mov
fistpll
repz
out
mov
mov
push
aaa
push
jno
fisttps
popa
out
test
add
and
iret
add
xor
faddp
insl
negl
stos
lret
pop
fwait
jp
inc
or
imulb
clc
sub
fs
jecxz
sbb
int3
imul
adc
mov
cltd
repz
cmp
or
out
xor
jns
shlb
pop
mov
movsb
lahf
lock
lret
push
adc
outsb
int
dec
fs
out
push
fiaddl
mov
inc
xlat
xchg
cs
hlt
mov
jle
push
mov
std
lds
testl
cmpsl
imul
cmp
nop
imul
fidivl
movl
pop
int
mov
popf
loope
adc
push
lods
mov
lock
mov
out
inc
rcrl
xor
adc
and
shl
xor
sbb
jmp
scas
das
push
dec
xchg
loop
fwait
sub
cmp
daa
xchg
ret
jne
iret
jecxz
lahf
scas
jnp
inc
fs
inc
sub
dec
popa
pop
xor
rep
push
test
jl
jns
jecxz
and
jmp
outsl
mov
add
shl
fs
scas
in
push
dec
mov
out
negl
sub
nop
push
xor
or
mov
pcmpgtd
dec
std
pop
das
data16
sbb
addr16
test
or
xor
pushf
iret
or
iret
mov
arpl
jp
aad
fdiv
orl
push
mov
shlb
and
cmp
jbe
inc
mov
xor
add
jb
mov
int3
call
in
pop
repz
pop
sbb
je
mov
mov
add
popf
adc
add
das
pop
mov
adcb
rcl
xchg
cmp
pop
jbe
sub
mov
add
call
add
cmp
ja
jae
cld
mov
pop
ds
scas
dec
sub
shll
mov
xor
fisttps
aam
arpl
mov
sti
fsubs
mov
inc
mov
je
push
nop
fmulp
sub
jl
aas
es
std
mov
push
repnz
jge
cli
popa
jbe
dec
jmp
cli
cld
mov
daa
nop
fs
sbb
ss
cmpsl
mov
outsb
aad
aad
jbe
pop
push
shlb
scas
adc
push
mov
cs
add
daa
push
in
test
jno
and
xor
pop
das
jno
mov
pop
mov
cli
inc
push
fimull
pusha
xor
out
stc
lret
push
mov
rcl
js
xchg
ret
ja
and
xor
outsb
push
fsubs
into
pop
addr16
int3
sub
lock
ljmp
jl
scas
jae
push
push
and
inc
add
jmp
std
fistpll
adc
xchg
xor
pop
mov
jae
mov
xchg
or
jecxz
xor
xor
loop
mov
jecxz
cmp
mov
mov
pop
jecxz
sbb
daa
mov
outsl
adc
jno
fdivrp
xlat
dec
dec
out
mov
movsl
adc
or
ljmp
push
sarb
xchg
insl
xchg
inc
lcall
cmp
xlat
push
xchg
cld
push
pop
sbb
add
sarl
in
xor
mov
fdiv
es
add
xor
outsl
nop
cli
dec
inc
push
and
cld
cwtl
xor
or
outsb
push
mov
pop
test
push
xchg
mov
push
mov
fcmovnu
push
pop
rolb
jl
ficoml
dec
adc
mov
adc
scas
cmp
mov
inc
push
rorl
cs
leave
add
popf
dec
jnp
mov
les
pop
sub
jge
and
lods
data16
scas
jl
xor
arpl
push
sti
insl
mov
pop
inc
push
popa
dec
ret
xor
adc
mov
mov
jecxz
jmp
sub
dec
fcoms
cwtl
jg
inc
scas
mov
sbb
push
jmp
cmp
sti
cmpsb
ljmp
je
dec
in
mov
cmp
js
cmp
fcompl
pop
pop
mov
push
insl
cmp
test
and
mov
xor
icebp
ja
sub
and
mov
jns
cmp
mov
xchg
movsl
mov
mov
stc
push
push
js
fcoml
loope
mov
or
fists
and
xor
mov
xchg
lock
pushf
out
out
sbb
add
add
cmp
movsb
mov
shlb
jle
scas
push
imul
mov
cmp
push
mov
in
jbe
std
adc
mov
stos
jge
or
push
movsl
out
imul
and
jmp
xor
lods
fsubr
and
mov
xor
ja
dec
data16
sub
jae
cmp
sub
popf
push
cmp
xchg
dec
mov
mov
test
es
pop
movsl
movsb
and
cs
jbe
jnp
in
gs
testb
out
push
adc
lcall
out
call
push
cmp
adc
pop
dec
vaddsd
xchg
mov
mov
cli
lea
jbe
push
test
mov
in
imulb
or
xchg
inc
xor
call
push
in
mov
inc
movsb
mov
cmp
pop
cmp
adc
cmp
adc
xchg
mov
dec
jl
scas
mov
test
shr
cmc
stc
xor
jge
mov
jbe
mov
pop
int3
imul
push
cmp
and
sbb
lret
mov
lods
stos
sub
in
sbb
lcall
push
test
xor
sti
test
fwait
dec
loope
ret
push
outsb
jo
or
pop
and
sub
addl
sbb
push
jns
jmp
cld
push
adc
add
add
mov
js
xor
add
add
push
das
sbb
mulb
pop
testb
loop
bound
or
jnp
hlt
fstpt
mov
cmp
ss
mov
adc
xlat
pushl
pushf
fcomp
out
cmp
pop
out
mov
and
xor
or
std
and
lret
xchg
push
jae
xchg
pusha
mov
bound
jne
push
xchg
arpl
fisubs
into
push
or
xor
inc
ds
divl
cmp
sub
rcr
and
test
repnz
or
pop
xlat
or
mov
adc
fdiv
jb
cmp
dec
inc
std
jae
fs
jae
jl
in
adc
mov
mov
add
cmpb
into
in
cli
pusha
mov
fistpll
cmpsb
mov
or
scas
xchg
fwait
repnz
lock
dec
xchg
pop
pusha
pop
xor
xor
or
adc
xchg
add
xchg
push
pop
xchg
jno
dec
push
xor
jae
jg
and
sub
dec
popf
sti
and
push
movsl
xor
jp
or
push
xorb
lods
adc
xchg
and
push
inc
dec
or
push
add
lahf
stos
addr16
mov
decl
inc
push
mov
mov
pop
inc
aam
jle
push
add
jae
inc
xlat
push
inc
sarb
lds
sub
sub
cmp
lcall
scas
push
add
clc
loop
push
push
dec
dec
popa
push
out
pop
sbb
insl
sub
stos
mov
ljmp
push
lods
push
loope
jl
xchg
cli
xchg
push
and
sub
jmp
push
out
std
xor
xor
rorl
push
xchg
mov
dec
jmp
xor
sti
push
in
xor
mov
add
push
fwait
pusha
pop
push
adc
mov
adc
inc
sbb
shrb
or
and
mov
repz
cmp
dec
mov
sub
sub
mov
roll
push
sbbb
cmpsb
push
inc
xchg
shlb
mov
push
xor
subb
push
inc
and
pop
fistpl
mov
sub
xchg
clc
push
cmp
cld
add
jecxz
stos
test
lea
imul
inc
xor
dec
mov
xchg
jo
mov
lock
in
outsb
mov
push
dec
aaa
sbb
fnstsw
xchg
and
mov
out
fcomps
frstor
lahf
jmp
iret
std
lds
lods
movsb
aam
fdivrs
push
loope
dec
sub
cli
int3
fimull
enter
inc
pop
fcompl
mov
mov
aad
stc
enter
jg
dec
push
adcb
and
mov
fisubs
inc
out
cld
sub
andb
inc
cmp
sahf
xor
stos
xor
mov
inc
or
inc
test
nop
mov
push
push
insl
mov
mov
sbb
es
jl,pn
mov
daa
mov
hlt
stc
pop
adc
xchg
mov
fmul
add
jge
daa
push
dec
add
lds
push
and
mov
pop
not
pop
ret
mov
lds
movsb
loope
xchg
adc
jl
jp
add
or
imul
test
dec
arpl
and
push
jb
nop
or
call
and
add
scas
pop
mov
mov
sub
xlat
mov
data16
repnz
inc
repz
xchg
pop
incl
xchg
in
pop
or
cmp
jns
scas
jp
pusha
std
push
lahf
outsl
cmp
bound
in
push
and
jns
iret
pop
gs
mov
adc
in
sar
mov
jg
add
push
mov
test
jmp
xor
pop
inc
jge
out
adcb
xchg
outsb
negl
sbb
daa
dec
cltd
cmp
push
aam
mov
sub
pop
cs
mov
cltd
sbb
test
leave
xlat
pop
sahf
cmp
add
mov
sti
push
push
add
lret
aam
add
inc
jle
inc
xor
ret
rcll
mov
mov
lods
xchg
popf
fistpll
shll
and
test
hlt
mov
and
gs
push
lock
xchg
dec
das
mov
mov
or
add
negl
sbb
push
lds
inc
roll
jmp
and
fucomp
lahf
dec
andps
and
jae
xchg
loope
sub
jo
ret
fstpt
pusha
stos
cwtl
mov
sarl
sarb
popa
int
cmp
aaa
sahf
je
cmpsl
clc
or
inc
icebp
jge
adc
fwait
push
lods
or
out
jb
stos
xchg
dec
xchg
flds
jecxz
sbb
test
xor
cmp
mov
mov
cmpsl
inc
xchg
arpl
cmp
jns
test
popf
lcall
or
sahf
movsb
inc
xor
fbld
mov
push
mov
adc
xor
or
mov
jb
xchg
pop
pusha
jg
push
sub
iret
loopne
sub
mov
adc
mov
mov
filds
cmpsb
inc
pop
scas
cli
mov
popf
cmp
fldcw
pop
daa
jo
es
out
pusha
sbb
xchg
loope
std
outsb
or
push
test
fldt
stc
clc
popl
les
mov
ret
loop
push
mov
in
jnp
lret
add
adc
pop
mov
fsubrl
ds
push
movsl
in
out
add
add
add
cmc
mov
xor
test
dec
push
adc
pop
call
cmc
test
or
pop
ret
mov
adc
fdivrs
xchg
xchg
push
push
testl
sbb
fidivl
std
jo
push
push
loop
push
fs
add
rcrb
adc
daa
xchg
jg
fisttps
xchg
mov
mov
xor
cld
or
jno
dec
mov
and
in
pcmpgtw
aaa
mov
cmp
mov
push
and
xor
out
orl
mov
mov
mov
dec
xor
ja
jecxz
sbb
shrl
out
movsb
das
xor
cmc
mov
push
mov
test
clc
jne
cmp
inc
test
mov
sbb
adc
or
insl
mov
rorb
les
ja
jle
push
pop
fdivrl
imul
mov
pop
enter
addr16
mov
fwait
stos
adc
pop
addr16
jo
jnp
mov
popa
scas
ljmp
pop
movsb
sub
lcall
es
or
fdivrp
xorb
xchg
sbb
fwait
mov
cld
push
movsl
pop
xor
shlb
inc
dec
mov
nop
xor
lcall
add
sbb
stc
push
cld
jb
fnstsw
jmp
pop
xor
enter
add
cltd
jnp
cli
push
fcomps
pop
cs
fwait
dec
push
dec
scas
xchg
jne
push
mov
pusha
mov
cmp
xor
rcrl
pop
pop
repnz
out
jecxz
js
js
aam
test
or
and
and
stc
pop
ffreep
xchg
aas
fidivl
mov
in
call
das
ljmp
mov
lret
pop
dec
adc
sbb
inc
sbb
popa
cmc
adc
dec
pop
jmp
pop
push
in
addl
fisubrs
cmp
or
test
adc
in
shl
stos
pushf
mov
pop
xchg
aas
dec
test
in
mov
dec
movsl
rorl
ja
or
leave
enter
nop
into
lahf
aad
xor
sub
scas
aaa
jg
loop
dec
jae
mov
lahf
lea
push
pop
jl
mov
test
int3
cmp
ds
sub
std
lret
mov
xor
fcmovnu
insb
push
dec
jnp
faddl
loopne
sbb
mulb
ret
cmp
popa
ljmp
or
push
fwait
or
and
or
clc
jmp
add
rcrl
fisttpl
xchg
shr
call
dec
iret
cmp
sahf
hlt
test
call
and
lods
xor
mov
js
push
sti
push
in
jge
xor
sub
mov
jge
and
or
divb
jge,pt
fstps
xchg
adc
std
shll
pop
mov
fcmove
pop
jnp
mov
jns
imul
sub
aam
mov
push
ja
push
add
or
repnz
cld
lods
sbb
push
push
mov
scas
decb
fsubp
cmc
nop
hlt
pop
popa
shl
lock
sbb
mov
cli
jno
ret
aas
xchg
into
mov
and
sub
xlat
idiv
inc
loop
mov
inc
aad
adc
xchg
loopne
dec
mov
cmp
xchg
inc
dec
xchg
cmp
aad
or
je
lret
xchg
jecxz
in
aaa
call
or
mov
insl
push
cmp
xor
mov
xchg
dec
inc
arpl
xor
pop
push
xor
mov
jecxz
ds
xchg
clc
dec
cmp
cmp
xor
xchg
sbb
in
cmp
pop
adc
les
mov
sbb
mov
xchg
cmp
fsubs
popf
js
int3
sub
xchg
inc
nop
dec
xchg
cmp
lea
mov
cmp
jo
test
lods
lds
movsl
cld
dec
rclb
pusha
js
pusha
scas
lods
mov
addr16
adc
pop
insb
xchg
ret
jns
test
movsl
cli
pop
or
add
cmp
pop
xchg
or
test
or
dec
xor
aam
inc
cmp
adc
cwtl
jp
cwtl
pop
repz
sbb
shll
rclb
test
cmp
push
or
cmp
fadds
subb
and
jmp
inc
fdivp
push
mov
inc
adc
add
dec
cmp
lcall
sbb
pop
jne
vmovq
bound
fisttps
adc
xchg
out
jbe
dec
sub
push
mov
fmull
and
or
imul
fdivl
mov
dec
mov
and
push
orl
xor
and
add
mov
jmp
xchg
and
mov
insb
push
fdivs
addr16
mov
fcoml
add
push
push
xchg
test
enter
test
shl
notb
out
mov
xor
inc
mov
imul
pop
mov
insb
popf
popf
shrl
add
imul
xor
mov
rcr
ljmp
or
cmpsl
mov
pop
out
jns
xchg
mov
jae
hlt
inc
or
shll
mov
cld
rcl
add
enter
dec
in
jge
imul
outsl
xor
imul
add
iret
xchg
aam
inc
sub
jl
and
lods
jp
aas
or
push
mov
dec
pop
mov
xchg
mov
inc
out
clc
adcl
outsl
xor
adc
push
test
fcmovb
inc
pop
dec
idivl
aam
aad
mov
jge
inc
mov
xlat
mov
sub
or
sbb
jle
out
ret
xadd
cli
mov
imulb
cltd
dec
jmp
clc
lret
pop
inc
cmp
out
icebp
xchg
jg
out
mov
in
outsb
das
fistpl
mov
xchg
inc
fldenv
enter
mov
adc
mov
popa
popa
sahf
mov
loopne
inc
lods
mov
add
int
jb
mov
inc
mov
bts
das
cli
repz
sbb
jb
jb
imul
mov
push
pop
out
fdivr
push
lods
data16
test
dec
mov
ret
inc
sbb
aaa
les
cli
cmp
mov
dec
fsubrs
add
jge
iret
lahf
mov
jb
add
test
ss
js
inc
cmc
fdivrs
sub
popa
add
inc
out
push
ljmp
xor
pop
add
in
in
daa
ficompl
clc
aas
lcall
stc
add
gs
int3
cwtl
loope
aas
repz
ret
cmp
push
cmp
out
popa
cs
cmp
sbb
int3
test
pop
cmpsb
std
mov
mov
outsb
xor
inc
out
scas
test
mov
ret
ss
xchg
push
aaa
aad
cli
dec
lcall
sbb
sbb
out
push
push
mov
xor
sti
das
jns
or
pop
imul
xor
sbb
sbb
and
mov
outsl
dec
rclb
push
ret
sub
sbb
pop
jne
jecxz
push
xor
xchg
imul
rorl
fadd
sub
es
mov
fidivrl
mov
sbb
lret
lock
pop
fcompl
jbe
aaa
cmp
pop
ljmp
dec
sub
aad
mov
pop
lcall
mov
and
cmpl
push
fxch
out
sub
inc
shll
jmp
jne
mov
fcomps
dec
and
ss
bound
add
and
sbb
cmp
pop
sbb
sbb
jnp
lret
mov
sub
aas
shrb
std
cmp
dec
adc
test
in
mov
out
scas
int
mov
adc
scas
inc
sbb
scas
loop
roll
add
test
xlat
or
fmull
jne
leave
sub
push
and
and
mov
arpl
lret
mov
lahf
loopne
sub
negl
add
scas
mov
in
and
pushf
ror
out
das
fildl
fs
testl
jg
iret
mov
adc
push
iret
fiadds
repz
push
out
xlat
sahf
int
dec
lods
jns
iret
inc
pop
sahf
mov
jmp
adc
fisubrs
sub
add
or
xor
lock
xchg
ret
push
dec
xor
sub
mov
aad
xchg
pop
adc
push
sti
or
outsb
or
xlat
ja
jg
sbb
daa
jne
xor
mov
mov
into
or
mov
movsb
stos
add
mov
add
cli
xchg
or
inc
ljmp
enter
testl
js
jge
loope
in
and
xor
sbbl
dec
xchg
test
xchg
nop
adc
cmc
scas
or
dec
lods
mov
pop
cmp
fldt
xor
sbb
inc
popa
inc
mov
jbe
inc
out
inc
mov
mov
sub
popa
das
mov
lret
xchg
mov
cmpb
insl
push
and
shlb
inc
push
cmc
int3
sahf
pop
cmpsl
jo
popf
sahf
jl
rorb
aad
pop
rcll
adc
mov
clc
pop
orl
subl
in
inc
fldenv
or
out
out
pop
push
fidivrl
jecxz
pop
pop
jbe
jae
xor
in
mov
es
cmp
fnsave
mov
pop
adc
popf
hlt
pop
call
loopne
or
cltd
imul
ds
dec
sub
repnz
xchg
lods
xchg
ror
and
loop
leave
mov
shlb
test
ss
mov
jb
sub
faddl
out
cmp
jecxz
push
inc
jne
cmp
lcall
fs
lret
mov
adc
push
sbbl
je
xor
fsincos
loope
or
dec
cli
jmp
cmpsb
xor
push
les
insl
rcr
imul
leave
mov
dec
mov
xorb
lahf
mov
push
dec
push
loope
popa
inc
jg
mov
cwtl
mov
mov
xchg
es
xchg
push
ss
mov
insb
aas
outsl
inc
into
outsl
dec
mov
insl
xor
mov
jge
out
jp
dec
xchg
lds
sbb
mov
mov
jge
push
push
mov
sti
popa
or
cmc
ja
gs
insl
imul
xor
mov
call
xor
or
inc
cmp
cmp
outsb
xor
jnp
or
faddp
and
or
loopne
lahf
xor
mov
xor
in
rcrb
mov
test
fldt
push
cltd
popa
pop
loope
sub
test
dec
pusha
ret
add
jns
sub
hlt
cltd
pusha
jbe
imul
push
hlt
ret
imul
dec
test
lock
cmp
dec
jge
jne
mov
cmpb
out
adc
jns
sub
push
arpl
mov
xchg
or
loopne
xchg
in
pop
int
and
adc
adc
ficoms
in
les
cmp
push
push
rcll
xlat
shrl
sub
mov
dec
repz
jge
push
mov
fiaddl
inc
scas
push
or
lret
data16
mov
xchg
pushf
push
rcll
push
adc
sub
mov
pop
push
fstl
sbb
xchg
inc
sarl
pop
push
fidivs
lcall
fnstsw
bound
sub
ret
scas
xor
sub
dec
sbb
pop
repz
mov
mov
mov
xchg
dec
cmp
loop
mov
or
cmp
jnp
sbb
adc
or
mov
mov
jge
mov
mov
ret
mov
das
js
sbb
in
and
or
xor
sti
mov
mov
push
sbb
xor
or
inc
jae
xor
pop
iret
imul
popf
pop
dec
ja
incl
clc
ss
aad
pop
out
fistpl
repz
pop
and
mov
xor
fnstsw
mov
negl
scas
or
inc
orl
jae
shrb
lods
popa
pusha
je
lock
pop
cmp
nop
stos
ret
movsl
cmp
sbb
shlb
xchg
or
subb
xchg
aaa
and
out
pop
test
out
add
xor
inc
xor
push
mov
gs
mov
xlat
cmp
xchg
ja
loop
push
and
push
xchg
xchg
mov
icebp
aam
xor
ss
popf
pop
add
aaa
lods
lahf
repz
mov
pop
mov
mov
cmc
lahf
andb
mov
aad
loopne
mov
inc
lcall
fnstsw
push
add
popa
pop
push
mov
call
push
ljmp
mov
fsubl
xchg
add
lcall
or
mov
cltd
out
fwait
cmp
in
scas
in
sbb
inc
mov
mov
int
test
fimuls
xor
mov
cmpsl
lret
mov
es
lret
in
into
adc
pushf
insl
add
jg
or
mov
xchg
xor
data16
xor
sub
mov
std
cmc
or
pop
sub
pop
jne
hlt
inc
sti
dec
jge
push
sbb
test
xor
push
mov
stc
xor
lock
sub
inc
test
subb
mov
shl
sub
xor
jno
pop
sub
xor
hlt
out
mov
or
sbb
scas
into
cli
push
out
inc
loopne
mov
adc
ss
cmp
cmpsb
lret
xor
mov
out
mov
adc
stos
inc
jl
pop
or
ja
xchg
xchg
fs
gs
scas
int3
into
pop
xor
mov
xchg
rorl
xor
jecxz
pop
dec
loope
xor
ds
mov
jge
add
xor
ds
or
push
add
imul
push
sbb
std
xchg
fistpll
jns
cld
pop
mov
int
mov
and
jp
add
fmuls
sbb
xor
dec
jno
mov
outsl
and
fldl
cmp
cmp
outsb
cmp
or
lds
push
add
out
fsubs
and
mov
les
subl
jmp
seto
jmp
insb
imul
mov
pop
int3
cld
aas
hlt
fsubp
xchg
push
inc
sbb
xor
pop
jmp
mov
sbb
dec
in
mov
xchg
push
iret
cmpsb
shll
mov
aaa
cmp
stc
ret
jp
hlt
and
ja
and
mov
add
js
divb
cmp
out
repz
mov
lods
mov
lcall
or
mov
dec
je
jge
jbe
mov
sbb
jns
xlat
or
pop
cwtl
xchg
clc
fdivrs
in
hlt
mov
arpl
or
and
orb
sub
xchg
imull
xchg
sub
push
mov
popw
rcrb
cwtl
xor
and
bound
movsb
test
push
mov
inc
in
addr16
fwait
repz
in
call
es
das
out
or
aas
ss
lret
mov
jns
cltd
outsl
out
divl
inc
xchg
add
fucom
push
scas
xor
xchg
and
xchg
sahf
fs
and
daa
xor
dec
fwait
add
mov
adc
mov
icebp
jne
push
sub
fcoms
rcr
mov
mov
sbb
mov
mov
mov
addb
xor
movsl
jbe
adc
imul
cli
push
movsl
sub
fbstp
movsl
popa
and
xchg
sub
les
pushf
mov
out
ret
out
fistps
add
xor
xchg
or
and
insb
sbb
inc
movsl
mov
sbb
adc
push
jb
pop
aas
add
cli
ja
js
jne
xlat
adc
lret
pop
or
loopne
lret
sbb
or
inc
sbb
in
or
push
decb
pop
ljmp
mov
popa
sub
mov
lds
iret
rcl
push
push
push
dec
testl
test
mov
out
mov
pop
sahf
fidivrl
or
pop
cmp
xor
into
sub
decb
pusha
sbb
es
mov
out
mov
aas
or
adc
dec
cmp
mov
aam
jb
mov
jne
mov
repnz
jmp
in
push
inc
lahf
dec
mov
arpl
loopne
adc
aas
jns
sbb
xor
add
mov
mov
lret
insl
lret
test
rolb
add
cmp
mov
push
sub
mov
adc
icebp
sub
dec
xor
sub
jnp
iret
std
insl
sbb
cmpsl
mov
xor
nop
je
xorl
ret
and
fsts
mov
add
aaa
mov
sub
mov
stos
push
jns
insb
cwtl
pop
push
icebp
out
mov
ds
aad
movsb
jge
adc
dec
insb
mov
inc
or
dec
mov
push
ret
imul
into
adc
cmpsb
sbb
cli
repnz
sbb
sbbb
aad
sahf
sub
dec
popf
add
out
fisubl
negl
mov
xor
pushf
push
lods
addr16
xchg
sub
sub
sbb
loopne
add
andl
popa
or
cli
dec
lds
popa
jecxz
or
pop
nop
pop
jns
and
adc
into
sbb
adc
inc
mov
dec
lods
insb
aad
mov
jge
test
repnz
lret
jo
mov
dec
jns
mov
movsl
dec
sbb
into
int
mov
cmp
add
mov
push
inc
ficoml
xchg
sahf
xchg
mov
push
xchg
and
inc
xor
adc
mov
adc
pop
add
push
or
jbe
dec
mov
cmp
adc
leave
negl
rcl
inc
xchg
sbb
leave
and
jle
out
jno
jbe
mov
and
in
sub
mov
rorl
popf
mov
loope
adc
loopne
mov
adc
mov
fldenv
sub
sbb
test
add
call
addl
out
sbb
jb
leave
roll
js
stos
xchg
add
inc
in
xor
mov
adc
fadd
les
mov
sbb
bound
mov
mov
xchg
dec
out
sub
sub
push
mov
int3
gs
daa
xor
cs
rcl
mov
sbbl
cltd
out
and
inc
cmpsl
divl
mov
je
xchg
cltd
xor
xor
push
aad
jl
xchg
mov
inc
in
push
push
ja
cmpsl
sub
sub
and
pop
scas
push
loopne
aas
add
and
xorb
ret
jecxz
clc
scas
pushf
shr
mov
repnz
mov
mov
jge
cmp
es
ljmp
xlat
xchg
push
mov
mov
dec
push
jmp
pop
shrl
sbb
sbb
xchg
cwtl
adc
adc
sub
adc
push
mov
jmp
fnstenv
test
test
rcll
dec
pop
push
mov
adc
or
push
ss
sub
jb
pusha
shl
iret
jp
popa
stos
sbb
test
and
lea
xlat
lcall
int3
xchg
lods
in
sbb
rorl
fs
sbb
ja
inc
ds
mov
scas
add
push
fildl
xor
cmp
inc
and
divb
cmpl
inc
loope
jmp
negl
call
sub
mov
lret
push
inc
pop
aad
mov
mov
int3
popf
add
add
lods
sub
hlt
push
dec
aas
mov
pop
mov
sbb
cmp
mov
push
bound
iret
rcr
jge
lret
fwait
push
outsl
loopne
add
ss
cmc
scas
fwait
jmp
dec
jecxz
cs
mov
jbe
xor
dec
stos
push
popl
in
mov
fsubs
pop
std
pop
sub
aaa
addr16
mov
sub
insb
nop
jne
jmp
mov
lcall
or
push
xor
push
push
std
cmpsb
and
lea
inc
jne
fdivs
cmp
in
dec
js
stos
bound
fnsave
sub
repz
movl
xor
and
lret
or
rcll
lret
mov
jle
xchg
jecxz
es
dec
mov
mov
pop
cmpb
insb
out
cmp
idivb
loope
fiadds
xchg
js
mov
cmc
lcall
adc
cmp
inc
sbb
sti
in
test
push
aad
add
incl
dec
mov
xchg
mov
out
iret
xchg
outsl
repz
in
pop
jae
or
loop
scas
movsb
mov
or
addr16
mov
les
dec
ljmp
cmpsl
arpl
jnp
ret
cmp
sbb
ss
ljmp
lds
je
cmp
insb
dec
leave
addr16
outsb
xor
xchg
scas
jb
lds
aaa
mov
sbb
adc
rcrb
mov
dec
ljmp
sti
arpl
cmp
and
pop
cld
cwtl
push
popa
mov
shlb
fmull
cmp
lods
add
xchg
aas
push
mov
lods
repz
mov
push
mov
push
js
orb
idiv
and
push
mov
test
push
xchg
fcmovbe
mov
lret
clc
in
ss
mov
and
or
jbe
sbb
cld
subb
cli
mov
scas
mov
mov
shr
test
int3
sbb
repnz
repnz
sbb
sub
push
insl
mov
lcall
call
fdivrs
push
mov
mov
push
push
pop
aas
adc
out
pop
cmp
rcll
jmp
fidivrl
mov
push
xor
outsb
cmp
jno
add
push
lods
mov
mov
stc
lds
ffree
outsl
insl
inc
lret
repz
sbb
pop
scas
cmp
xor
ret
stos
push
lret
adc
xchg
dec
xor
jg
xor
ror
cmp
and
jge
incb
dec
add
insb
cmpl
add
out
and
or
or
sbb
inc
stc
adc
lcall
xchg
mov
dec
shrl
mov
fdivrl
daa
or
mov
imul
lret
jp
dec
push
cmpsl
enter
jb
push
pop
mov
push
fistpl
push
fisttpll
jp
imull
push
add
out
or
pop
loopne
cmp
shl
test
inc
pop
push
jbe
and
ds
push
mov
test
arpl
fisubrs
fsubrp
imul
mov
sti
and
lret
mov
mov
cmp
sbb
dec
or
mov
jl
jns
mov
in
out
and
sub
mov
pop
mov
test
sarl
push
adc
mov
jp
cli
dec
sahf
movsb
mov
gs
sti
dec
sbb
inc
ret
sbb
sbb
jno
push
add
pushf
repz
stos
cmp
outsl
jg
push
push
cld
or
or
lcall
xor
jecxz
ds
jp
inc
jmp
jle
sub
ret
leave
adc
lret
pushf
mov
jg
inc
ret
jno
mov
divl
or
in
incb
cld
scas
jb
pop
xchg
or
aad
outsl
gs
mov
pop
sub
or
mov
xlat
idivl
jp
jle
pop
xchg
mov
out
push
cld
pop
mov
add
loope
lret
mov
test
sbb
pop
mov
clc
stos
adc
negb
push
cmp
insl
cmp
fimull
insb
je
xor
jge
cmpsl
mov
cmc
cmp
movsl
hlt
cmpsb
negb
push
add
enter
fildl
jecxz
dec
push
je
jle
jl
sbb
mov
xchg
repz
pop
scas
xchg
fwait
in
pop
jbe
cmp
push
dec
jb
adc
scas
and
nop
xchg
sti
lea
cmp
rcll
into
out
xchg
xchg
enter
in
ficompl
stos
or
mov
cmp
jns
ret
ja
mov
add
cs
and
jg
int
xor
inc
nop
out
jge
sbb
mov
cs
add
inc
test
insl
sahf
xchg
push
dec
shll
enter
pop
in
outsl
pushf
pop
mov
pop
jle
dec
popf
cli
lods
in
adc
xor
iret
fbld
jge
ljmp
mov
xchg
jo
test
push
mov
jmp
subl
jb
and
fnsave
leave
or
mov
dec
or
mov
cmp
nop
leave
ja
ljmp
gs
push
sbb
dec
cld
xor
add
stos
and
in
sbb
icebp
xchg
and
mov
sub
out
xchg
jnp
mov
icebp
ja
push
lea
push
dec
movl
stos
adc
jl
movsb
lret
mov
inc
daa
xor
sarl
sbb
loope
aam
iret
or
pusha
cmpsb
push
ret
frstor
fcmovbe
insb
xchg
popa
ret
sbb
lret
lods
and
shll
stc
ret
xchg
or
cmp
cmp
test
cmpsl
into
in
jbe
adc
jle
mov
leave
cmp
pop
mov
std
jae
pop
jp
outsb
aas
push
lahf
dec
xchg
inc
js
sub
sbb
aad
add
scas
and
mov
add
or
outsb
int3
push
rcr
jne
xchg
push
jge
aam
cmp
mov
outsl
add
enter
xor
inc
add
push
scas
and
inc
fs
pop
jbe
out
mov
or
mov
scas
and
rcll
mov
xor
icebp
fisttpll
inc
dec
fstl
pop
sbb
cs
inc
fmul
mov
call
in
sub
mov
out
icebp
jo
es
pushl
cs
xchg
xchg
push
aas
leave
in
outsl
mov
aaa
cmp
lods
and
dec
mov
and
lea
outsl
push
cli
xchg
mov
jns
push
loopne
imul
adc
jne
jnp
pop
das
movsb
pop
push
push
mov
ljmp
or
cltd
lret
lret
insb
mov
sub
aas
xor
jg
inc
loope
and
loope
inc
or
push
leave
inc
jbe
data16
xchg
inc
or
outsl
mov
inc
cmp
test
jmp
mov
sbb
repnz
int
repnz
aam
jae
add
pop
cld
pop
push
scas
addl
and
mov
cmpsb
or
push
push
mov
pop
das
and
shrl
and
repnz
aad
dec
mov
ficoms
push
xchg
mov
sub
mov
scas
cmpsl
xchg
and
jno
je
stos
fwait
adc
pusha
or
cmp
out
xor
ret
pushf
in
adc
movsb
sub
pop
add
fs
dec
lcall
lock
push
inc
pusha
scas
mov
dec
xchg
xlat
in
aad
xor
mov
or
and
xchg
pop
add
int3
adc
add
clc
insb
mov
jg
xchg
call
xchg
and
and
jne
ja
add
inc
jns
sahf
test
js
ret
arpl
xchg
pop
cmp
pop
fisttps
into
int3
mov
mov
inc
jmp
fldcw
push
adc
push
ds
push
xchg
adc
scas
lock
mov
in
pop
enter
or
inc
outsb
sar
mov
ret
ss
aad
jnp
addr16
cmpsl
int
cmpsb
mov
sbb
mov
call
push
jg
adc
mov
xchg
leave
shrb
sbb
pop
fcoms
out
and
dec
stos
into
mov
push
cmp
sbb
ror
lock
outsl
or
pop
mov
sti
xlat
testb
lcall
push
ds
xchg
sub
enter
ds
jb
fiadds
xchg
add
mov
push
iret
mov
iret
adc
adc
lcall
popl
dec
fxch
sub
mov
mov
repnz
sbb
cmc
out
jle
pop
ret
fisubl
sub
push
and
call
out
andb
fisttpll
add
add
mov
int3
mov
shll
pop
out
das
leave
icebp
push
int
push
mov
push
xchg
mov
bound
add
mov
and
sbb
int
lods
xchg
mov
add
xchg
dec
or
xchg
mov
add
lock
pop
pushl
pop
jns
cmp
inc
xor
repnz
push
shll
push
pop
sub
test
jbe
jo
or
arpl
repz
aas
mov
jns
xchg
repz
arpl
xor
or
mov
fsubs
out
pop
mov
pop
push
data16
jb
out
movsl
imul
jmp
mov
js
pop
mov
repnz
add
xchg
test
les
sub
clc
dec
xor
popf
pop
and
and
xchg
das
stos
inc
ror
lea
fdiv
enter
leave
cmp
cwtl
pushl
xchg
pop
or
and
cmc
call
aaa
jmp
repz
hlt
sub
ret
es
add
adc
or
xor
idivl
jb
dec
sub
mov
outsl
js
imul
cmc
iret
cwtl
cmp
fimull
and
sbb
ljmp
sbb
clc
repz
aaa
pop
jmp
cmp
xorb
loope
dec
lds
sahf
sti
leave
mov
pop
fs
sbbl
lock
lods
fdivrs
dec
pushf
insl
xor
xor
popf
push
bnd
popf
mov
xor
rcll
fcompl
xor
test
mov
sbb
push
imul
inc
pop
arpl
dec
push
negl
daa
sbb
cmp
inc
mov
push
out
imul
mov
sub
neg
mov
scas
lea
push
enter
nop
xchg
mov
int3
ret
cs
enter
mov
dec
cmp
insl
pop
cmp
lcall
stc
mov
xchg
sbb
jmp
test
enter
lret
sub
imul
les
mov
xchg
cmp
loopne
push
vprotb
orb
sub
mov
xor
test
pop
test
cmp
mov
cld
bound
clc
lcall
test
stos
cmp
jle
sbb
add
cmpl
jecxz
cmp
jmp
mov
fimuls
in
mov
lret
or
sub
and
pop
popf
out
pusha
imul
jg
pop
out
cs
enter
push
mov
xor
pop
daa
fdivl
fisttpll
ret
ss
cli
mov
cmc
inc
or
inc
cltd
push
sub
addb
sbb
in
and
dec
xchg
outsl
test
cli
push
jns
jo
rorb
outsl
pushf
xchg
jl
out
int3
insb
inc
jbe
mov
test
jmp
mov
sti
pop
mov
mov
lea
adc
pop
aam
sti
lret
add
xor
imul
aad
push
jb
xchg
not
push
outsl
inc
enter
or
pop
rorb
pop
cmp
mov
ret
xor
mov
jnp
adc
push
push
fldenv
or
ja
jno
ss
insb
sub
xchg
js
jns
jbe
jb
mov
add
jo
push
and
popl
sbb
and
add
or
jmp
ja
jl
sub
add
pusha
ja
push
int3
ja
pop
pop
in
lcall
sub
pushf
mov
scas
lods
cmc
xchg
dec
jae
push
dec
and
sub
test
pop
dec
jmp
pop
add
cltd
adc
ret
fdivl
fcomip
adc
bound
pop
lcall
out
repz
mov
cld
jl
data16
pop
dec
cmpsl
aam
insl
pop
push
or
mov
ficompl
lods
cmp
adc
les
sbb
xchg
sub
sub
jo
pop
mov
mov
xor
jmp
out
jns
loope
fisttpll
cmp
sub
orb
pop
or
das
fnsetpm(287
in
sub
andb
adc
fstps
pushf
imull
fistl
inc
jb
mov
lea
mov
and
xchg
dec
mov
aaa
cmp
mov
mov
push
jge
stc
cmpsb
mov
mov
cmc
in
es
aas
adc
pushf
adc
add
data16
jae
mov
pop
xor
into
mov
adc
push
test
sahf
lock
gs
xor
ret
rorl
stos
mov
push
xor
shl
aas
lods
aam
in
mov
adc
xchg
sbb
mov
pop
adc
leave
testl
jmp
push
xlat
dec
testl
test
out
loope
fistps
sbb
divl
aam
push
stc
leave
mov
jbe
jae
push
sub
rcrl
jne
push
fucomi
jecxz
pop
sub
dec
ds
rorl
insl
mov
dec
jmp
jae
out
pusha
or
xor
aam
mov
mov
movsb
mov
idiv
lods
inc
mov
test
gs
test
sbb
cmp
test
push
daa
std
jge
rol
rorl
loop
arpl
aam
movsb
and
lock
mov
xchg
negl
sbb
inc
lcall
and
push
sbb
mov
pusha
jnp
push
add
cmp
pop
cmp
and
loope
cmpl
sbb
js
stos
out
adc
push
fcoms
test
bound
push
cmp
mov
jno
inc
jg
xorl
icebp
testl
lock
lret
mov
rcl
std
adc
out
sbb
sbb
sub
rcrl
adc
lret
mov
add
test
adc
adc
inc
xchg
fildll
gs
adc
inc
icebp
cmpsb
mov
loopne
xchg
test
sub
cltd
push
test
sub
inc
mov
jmp
sbb
add
cmp
adc
xor
jo
aad
out
loop
ljmp
inc
mov
cmpsl
mov
int3
loop
pop
into
mov
pop
xchg
sti
inc
mov
adcb
js
mov
ja
jno
push
std
mov
mov
ljmp
iret
cmp
loope
mov
inc
mov
lock
mov
cli
jecxz
fwait
push
add
out
inc
cmpsl
sti
rcll
adc
mov
sub
sub
es
out
ret
dec
inc
test
xor
test
jl
dec
or
or
les
push
cmc
xchg
leave
mov
hlt
std
imul
sub
sti
and
incl
roll
mov
and
imul
cltd
outsb
loope
xchg
mov
ror
dec
or
dec
ret
nop
out
faddl
sar
jae
repz
adc
pop
aam
stc
push
test
notb
call
mov
push
ds
popa
jle
shl
int
lret
cld
outsb
mov
jg
aaa
insb
sbb
enter
fcmovbe
mov
push
ret
dec
dec
sub
add
pop
fsubs
shlb
jb
xlat
mov
insb
addr16
sbb
mov
es
add
fdivp
cmp
add
xor
imul
sbb
popa
mov
dec
ljmp
jb
dec
fsubrs
or
adc
stc
sbb
cmpsl
sahf
and
pop
inc
lret
cwtl
repz
ret
loop
imul
sbb
add
ja
push
ss
xor
lret
pop
dec
xor
adc
jbe
xor
fnstsw
dec
push
clc
and
add
add
in
xchg
in
fbld
mov
es
sub
pop
push
cmc
mov
fbstp
popf
fistpll
popf
aas
imul
xor
and
dec
mov
imul
mov
push
pop
imul
xchg
stos
sbb
lcall
pop
scas
and
or
push
push
les
outsl
mov
add
cwtl
dec
add
cld
popa
jg
outsb
rcrl
ret
inc
sub
fwait
mov
fidivs
and
sbb
lock
or
stos
icebp
vpcmpgtb
pop
fidivrl
pop
push
loopne
push
pop
jp
add
stc
aam
andb
cmpsb
pop
inc
push
adc
fisubrs
mov
and
addr16
pop
rcr
test
or
repnz
dec
pop
jecxz
jnp
push
push
ds
lods
sub
mov
cwtl
popf
and
popa
adc
xchg
xor
pop
roll
imul
push
mov
sbb
cmp
das
push
cld
rorl
xchg
pop
pop
dec
imul
inc
int
cld
jmp
fisttpl
jge
sub
xor
xchg
pusha
ret
dec
int3
or
shl
xchg
dec
jae
xchg
gs
loopne
sbb
stos
es
subps
inc
fstps
iret
jb
fdivl
inc
cmpsb
cmp
fsubrs
push
popa
cs
pop
out
inc
add
shrl
push
jg
jp
cmpsb
mov
hlt
dec
mov
dec
xorb
pop
sub
out
ja
push
inc
pop
xchg
in
stc
aam
in
pusha
mov
mov
cs
inc
mov
cmp
or
xchg
sub
adc
shll
adc
mov
push
sub
repz
wrmsr
jle
add
js
cwtl
divps
ljmp
dec
cmp
lret
in
call
lock
dec
fwait
gs
inc
movsb
mov
jp
or
jmp
leave
push
test
les
lcall
jl
fstps
sarl
flds
std
jno
mov
sahf
push
sub
je
subb
or
xor
cld
cwtl
jg
repnz
mov
lret
inc
add
lret
jbe
xchg
mov
cmp
sub
or
inc
mov
xchg
imul
sti
mov
xor
xchg
daa
lahf
and
stos
fmuls
insb
adc
push
cld
ret
inc
dec
dec
mov
int3
popa
test
and
push
in
and
jbe
sahf
add
fisttpl
dec
aad
popa
int3
lahf
loopne
out
aam
test
not
sbb
int3
jmp
insl
cli
jecxz
int
push
jbe
cmpb
jle
or
mov
dec
aaa
aas
push
push
jo
popa
mov
dec
mov
rcrl
or
decb
movsl
add
xchg
in
ss
repz
mov
shrb
xor
xchg
cmc
mov
mov
xor
repnz
outsb
pop
mov
dec
into
sbb
faddl
sti
lret
sub
adc
outsl
dec
aas
jl
push
sbb
pusha
mov
inc
mov
pop
cmp
into
adc
add
enter
pusha
add
pop
arpl
jns
in
push
cmp
fdivl
pop
movsb
mov
test
dec
mov
addl
and
dec
imul
sbb
test
and
xor
stos
push
sbb
mov
mov
push
insb
add
pushl
sub
and
add
loop
mov
in
fildll
xor
mov
push
adc
out
rcrb
scas
cld
xor
rolb
mov
mov
aam
mov
dec
push
xchg
jl
mov
pop
je
ss
aam
pop
mov
stos
xchg
mov
fcoms
jne
mull
mov
adc
xor
cs
xlat
pop
in
and
andl
out
aaa
dec
cld
mov
aad
mov
popa
xlat
or
nop
push
jle
jge
dec
popf
test
fsubrs
js
cmpsb
dec
xor
xchg
cli
cmpl
scas
and
std
cmp
add
mov
fidivl
shrl
pop
xlat
lahf
imul
cltd
shl
xchg
mov
ftst
pop
fmul
lods
imul
insl
and
pop
dec
test
lret
xor
stos
mov
lret
inc
mov
push
lcall
into
ds
rorl
push
mov
cld
jg
pop
mov
mov
dec
test
loopne
sub
rolb
loop
and
cmp
int
lock
sarl
mul
or
pop
mov
call
cwtl
mov
push
jae
or
mov
inc
mov
daa
jmp
repz
dec
xchg
add
clc
mov
pop
into
mov
and
lret
lcall
add
pop
mov
arpl
mov
sub
pushf
arpl
add
notb
mov
lea
in
mov
jbe
out
mov
je
mov
ja
jge
test
jb
stos
insl
out
inc
cmp
lcall
scas
out
add
inc
adc
jp
push
xchg
mov
int
cld
sbb
popl
xor
mov
mov
and
rcrb
mov
mov
xchg
sbb
inc
icebp
pop
sbb
test
jne
pushf
jno
loopne
adc
rcrl
movsb
aas
mov
out
stos
sbb
mov
xchg
mov
mov
test
add
cs
add
dec
ljmp
int
push
mov
push
mov
lea
push
fwait
mov
rcl
int3
cmp
lahf
xchg
outsl
pop
mov
xchg
loopne
test
dec
jbe
sbb
mov
cmp
roll
dec
cld
fcmovb
pushf
out
fidivs
ljmp
aad
rcr
and
push
inc
mov
lahf
jo
movsb
sbb
les
sub
les
adc
cmc
clc
fwait
push
cmp
data16
mov
jge
je
fisttpll
dec
inc
adc
neg
les
mov
fwait
lret
js
and
push
adc
scas
adc
in
dec
das
sub
mov
dec
int3
out
fcmove
nop
mov
stos
or
mov
xchg
cli
fs
xchg
movsb
lds
in
aas
int3
push
inc
inc
pushf
aam
mov
jne,pt
sub
mov
cmp
icebp
popa
pandn
mov
or
in
xchg
cmc
call
data16
aas
xchg
xor
test
and
xchg
clc
add
mov
insl
mov
divl
fnsave
mov
mov
push
pop
js
ss
xor
adc
jle
popf
jecxz
push
fs
faddl
sbb
aam
call
push
cmp
ret
jo
cmp
addb
xor
mov
xor
test
ljmp
jl
outsl
jmp
shrl
out
push
xor
push
xchg
push
and
sub
add
fisttps
mov
in
jecxz
jmp
insb
out
mov
movsl
and
dec
cmp
and
xchg
xlat
rep
out
cmp
adc
sub
fmuls
fcomps
sarb
loop
into
aam
pop
in
lret
fcomi
mov
hlt
mov
ljmp
pop
cs
inc
xor
push
sbbl
adc
in
psadbw
and
push
adc
jae
pop
in
jp
inc
cmp
jmp
call
aad
shrb
cmp
push
insl
adc
pop
sahf
add
mov
outsb
ret
movsl
scas
lds
jge
jg
or
adc
dec
xlat
inc
icebp
cld
mov
adc
mov
and
and
mov
insb
cmc
sbb
inc
data16
in
pop
repnz
cmpsl
cld
mov
and
xchg
and
xor
or
inc
pusha
ret
outsl
pop
pop
mov
cmp
addr16
xor
sbb
into
jl
std
adc
push
cmp
dec
cmp
movsl
cld
xor
xchg
xlat
into
push
aaa
sub
faddl
mov
mov
dec
push
popa
sub
sti
pop
pop
mov
sub
push
ds
cltd
ret
xchg
mov
insb
sbb
inc
aas
xor
mov
data16
inc
xchg
ficoml
cmp
ss
dec
inc
xchg
mov
and
push
outsl
push
nop
push
pop
xchg
mov
sub
dec
nop
sahf
xor
pop
push
mov
cmp
cmpsb
push
inc
ljmp
mov
gs
mov
inc
push
push
into
jb
pop
fs
sbb
aam
jg
cmpsl
pop
inc
nop
adc
sub
out
cmp
and
xchg
iret
sub
insl
cs
jmp
les
pusha
cmp
jmp
adc
cli
xchg
repz
rol
sahf
mov
subb
jmp
orl
frstor
mulb
sub
call
or
pushf
or
fisubrs
cmpsl
jecxz
cmc
fcoms
adc
out
and
push
push
sub
lea
lret
repnz
cmp
dec
cmp
jnp
mov
fisubrs
aaa
test
jae
mov
mov
xlat
test
xchg
shl
hlt
ret
movsb
xor
sbbb
fldenv
es
add
cmc
stos
adc
jns
cmp
lret
lret
nop
ja
sub
pop
push
fstpt
pop
xchg
xlat
rol
dec
lods
call
mov
shll
mov
pop
adc
pop
pop
cli
outsl
out
mov
pop
or
cld
enter
imull
and
cmp
dec
xchg
rcl
test
pop
dec
dec
inc
jae
call
test
push
pop
and
xor
jb
test
xchg
hlt
cmp
into
push
mov
and
repz
jl
scas
cmc
adc
movsl
je
mov
sbb
je
mov
cmpsl
fucomp
dec
sub
inc
add
add
test
fidivrl
mov
into
xchg
js
push
mov
sbb
xchg
cmp
outsl
icebp
push
pop
lea
mov
xchg
cmpl
pop
sbb
cld
pop
sbb
std
fcmovnbe
mov
in
movsl
mov
sti
orb
push
xchg
inc
mov
cmp
inc
mov
dec
in
ss
or
sub
incb
das
dec
mov
scas
push
cmc
cmpsb
mov
dec
bound
popf
jnp
andl
into
pushf
xchg
lahf
leave
das
pop
dec
mov
bound
ds
and
xor
test
push
fadd
pop
xchg
sbb
and
add
fnstcw
roll
loopne
push
mov
aad
out
pop
lods
push
div
mull
mov
pop
dec
push
mov
push
jnp
into
test
mov
sti
test
test
mov
or
cli
inc
scas
mov
vmovupd
arpl
aam
cmpsb
sbb
xchg
pop
adcb
jnp
testb
dec
ja
outsb
dec
or
fwait
sub
mov
rcll
mov
pop
xor
xchg
fwait
add
repnz
jb
in
xchg
jno
pop
pop
xchg
das
repnz
and
imul
pop
lahf
jns
mov
mov
int3
dec
push
into
fldl
push
stc
inc
mov
lret
adc
data16
sahf
cmpsl
rol
dec
add
mov
stos
mov
mov
int
lahf
je
or
mov
pop
add
cmc
cs
loop
fwait
sahf
mov
ja
mov
xchg
mov
ret
sub
xchg
stc
inc
xchg
dec
dec
mov
ljmp
cmpsb
or
mov
jne
xor
dec
cmpsl
lea
loop
mov
push
push
pop
inc
outsb
mov
fst
add
dec
mov
jp
sub
popf
out
sub
lret
sub
and
js
ds
push
cwtl
cltd
clc
lods
cmp
jl
cld
pop
rorl
subl
imul
mov
push
mov
int3
insb
popa
xchg
leave
fs
bound
sbb
pusha
cmpb
ret
rolb
stos
sub
and
hlt
xor
lods
push
mov
xor
pusha
int
loop
push
or
aad
jg
imulb
jg
add
out
out
mov
test
xchg
js
jg
xchg
mov
inc
pop
jno
jl
pop
dec
push
movsl
addr16
dec
sub
adc
and
ret
mov
xchg
sbb
mov
dec
lret
sti
lret
js
mov
int
or
lock
pop
xchg
sub
mov
dec
test
xor
and
or
sbb
pop
test
and
out
je
aaa
jge
loop
push
loopne
and
xchg
test
scas
ds
jecxz
push
fisubrs
mov
and
sbb
out
fwait
test
ficoms
push
sbb
inc
dec
mov
adc
and
jb
leave
xorl
ret
insl
inc
sub
mov
push
xor
lahf
cmp
xor
fbstp
cmp
aaa
lahf
sub
xchg
iret
ret
push
lret
cmc
mov
inc
sub
or
cmpsb
aad
popa
push
inc
rcrl
aaa
clc
sti
insb
jmp
push
int3
push
fimuls
mulb
inc
mov
test
xlat
dec
aaa
fs
mov
pop
xchg
mov
mov
fnstenv
and
xchg
test
fnsave
stc
test
sbb
xchg
push
dec
das
dec
lret
stos
fstpt
and
cmc
dec
sahf
ret
sub
mov
push
xchg
daa
inc
hlt
jno
sahf
pop
xorl
and
lods
pop
jmp
in
ljmp
xor
mov
or
pop
repz
mov
mov
xor
sti
adc
push
xchg
cmp
aam
mov
cld
movsb
dec
mov
popf
arpl
mov
es
sahf
test
daa
stc
xlat
mov
cmp
gs
int
sbb
out
xchg
cmp
int
rcll
popf
mov
imul
out
repz
clc
push
clc
pop
sbb
pop
xor
mov
fdiv
xlat
sub
pop
pop
imul
xchg
out
adc
cli
out
ljmp
test
cmpb
mov
fadd
andl
cmpsl
test
inc
icebp
jg
dec
xchg
repz
decb
xchg
std
add
sahf
push
insb
jge
mov
and
fmuls
adc
pop
cmp
or
pop
dec
fwait
je
in
inc
xchg
sub
call
sti
psubsw
prefetch
in
cmc
das
push
aad
fidivrl
mov
shll
mov
xchg
sub
scas
inc
jae
mov
notl
cs
loop
jecxz
test
mov
xchg
test
jo
pop
add
rcll
pop
in
inc
aad
in
fidivs
popa
jnp
nop
in
lods
xchg
and
inc
sub
lods
addr16
hlt
ret
arpl
push
stos
or
pop
popa
mov
outsb
out
push
lcall
cli
mov
ja
adc
mov
enter
mov
lds
and
or
and
aad
lea
cmp
stos
leave
lock
jns
fnstenv
pop
push
xchg
xor
xchg
cltd
sub
sub
dec
inc
bound
jecxz
mulb
inc
sarb
or
inc
ret
cmp
cmp
pop
push
mov
dec
push
mov
sbb
scas
cmp
mov
mov
add
xchg
gs
pop
addb
popf
mov
orb
imul
push
repz
adc
test
pop
mov
pop
inc
or
dec
xchg
pop
fisttpl
dec
or
or
rorb
loop
sbbl
repz
xchg
jp
addr16
sub
add
sub
push
aad
push
lods
and
pushf
mov
cmpsb
jl
out
push
test
addr16
mov
push
insl
insb
aam
sub
repnz
pop
out
jg
imul
push
test
pop
movsl
xlat
cmpsb
outsl
stos
cmpl
sbb
cwtl
or
mov
inc
jns
cmc
outsb
jae
and
push
xchg
sti
fwait
out
xchg
jge
xchg
call
das
mov
push
sarl
pop
cmp
lret
call
popa
lea
call
repnz
shrb
sbb
ljmp
and
push
popa
cltd
push
or
addr16
jp
mov
mov
cld
out
or
sbb
stos
or
push
iret
push
aam
mov
xchg
xor
push
push
add
inc
out
cmpb
and
hlt
arpl
fcomps
pop
xchg
xor
ds
cmp
aad
mov
imulb
addr16
push
add
sbb
rorb
dec
adc
scas
xchg
xchg
loopne
mov
dec
ljmp
shlb
xchg
nop
jp
push
mov
lahf
leave
pop
loopne
lret
popa
mov
ljmp
lods
sbb
push
std
das
mov
sub
loope
fbld
cld
movsb
bound
dec
mov
mov
mov
jp
insl
add
add
mov
mov
jmp
sub
ret
mov
ja
sbb
add
mov
xor
xchg
xchg
cmp
push
push
fbstp
push
outsl
adc
or
push
sbb
ret
add
add
xchg
ds
int3
data16
adc
adc
add
stos
lock
fildll
xlat
mov
xorl
addw
lahf
cmc
mov
lock
mov
mov
jbe
rcll
mov
lea
dec
in
clc
pop
mov
repz
negl
mov
push
jo
jl
test
mov
sub
repnz
push
xor
rorb
neg
mov
movsb
into
fs
add
inc
lcall
mov
in
sbb
in
pop
sbb
adc
out
aam
jecxz
lcall
ljmp
lock
test
or
ja
adc
sbb
insb
call
subb
out
cmp
xchg
and
mov
push
stos
jns
or
adc
mov
and
lret
js
jecxz
add
insb
cmove
push
add
rep
ret
inc
cmp
xor
mov
sti
outsb
rorb
scas
orps
icebp
sub
jb
cmp
jnp
cmp
lods
insb
test
push
cmp
inc
fidivrs
or
idiv
inc
dec
sarl
loope
inc
cmpsl
add
pop
or
jge
and
mov
loope
mov
sbb
and
pop
jno
cli
std
je
arpl
lock
jle
push
fisttps
xor
nop
add
pop
and
or
push
repnz
in
jmp
xor
sbb
imul
inc
mov
je
fsin
push
mov
mov
adc
xchg
and
mov
jae
add
push
mov
int
inc
shrl
fstpt
and
push
imulb
sub
jns
xchg
mov
mov
stos
jb
xchg
nop
cli
rcr
jb
mov
aam
cltd
mov
xchg
cltd
das
fstpt
sub
sahf
jecxz
jno
int3
mov
push
pop
sti
mov
aad
push
movsl
jmp
je
loope
xchg
test
mov
loope
add
inc
lret
pop
mov
sbb
and
aas
mov
mov
jmp
roll
cmc
jno
jmp
stos
jbe
lods
ja
cmpsl
and
xchg
dec
ds
xchg
cmp
and
add
mov
mov
mov
into
xor
mov
dec
shlb
inc
je
inc
jmp
subb
cmp
jbe
jae
leave
sub
cmpsb
push
fs
xor
dec
push
ret
lea
cmpsl
mov
mov
call
inc
insl
aam
sbb
vaddsubps
addr16
sub
icebp
push
sub
xor
mov
ret
adc
mov
cmpsb
jnp
addr16
mov
cltd
stc
push
sbb
cmp
push
inc
inc
out
ret
cli
lea
ja
jnp
cmp
xchg
lret
pop
mov
jae
sub
cli
sbb
lret
scas
lock
out
enter
jg
aas
push
pop
stc
inc
aad
dec
mov
imul
xor
sub
jb
popf
pop
lret
outsl
cmc
xchg
stc
xchg
mov
dec
mov
arpl
fdivrs
out
and
xor
lret
in
or
jle
test
call
lret
inc
jnp
js
add
cmp
jo
js
mov
mov
arpl
or
xchg
or
aad
ja
dec
jb
xchg
loope
jp
ds
mov
adc
jbe
add
popf
loopne
jge
add
nop
or
adc
jp
mov
enter
inc
and
scas
pushf
fwait
pop
push
mov
sub
fsubrp
call
cmpsb
mov
test
dec
ds
mov
iret
add
ds
mov
mov
push
jg
mov
lahf
pop
arpl
iret
push
sbb
mov
pop
popf
push
in
cmp
jl
outsl
shll
jno
pop
es
arpl
xchg
and
xchg
and
jecxz
addr16
inc
or
das
sub
in
push
fcomps
lock
js
mov
xchg
ficompl
xor
pop
stc
inc
add
dec
mov
mov
aaa
adc
mov
lods
cmp
dec
mov
mov
pop
xor
fnstcw
push
movsl
pushf
cltd
inc
fcmovb
sti
nop
sub
mov
push
out
adc
cwtl
out
sar
les
das
int3
adc
fs
iret
aaa
jmp
push
adcb
mov
rcrl
cmp
inc
xchg
aam
cmpsl
cwtl
out
push
cmp
bound
ds
xchg
sub
xchg
fisttpl
xor
cmp
mov
sbb
std
sub
xchg
jbe
leave
jecxz
pop
clc
nop
mov
call
cltd
xor
addr16
andb
push
stc
and
fucomi
and
dec
test
mov
out
sbb
pop
ljmp
insb
or
inc
fs
add
sbb
xor
out
std
stos
daa
mov
ret
adc
aaa
add
pushf
mov
ds
hlt
add
shll
in
jg
fidivrs
pop
adc
clc
cmpsb
aam
shr
hlt
add
or
xchg
pop
fs
jge
push
and
lcall
inc
mov
sub
mov
jmp
sub
rorb
aam
mov
loope
sub
mov
inc
inc
cmp
cmp
mov
push
enter
add
or
or
push
es
stos
les
mov
pop
or
mov
adcl
cmc
enter
xorl
iret
test
cmc
gs
cmp
fistps
xchg
add
fucom
add
mov
fs
ret
sbb
dec
aaa
test
lods
mov
enter
push
jl
adc
xchg
jb
into
cld
and
int
sbb
inc
or
pop
jecxz
push
lret
mov
pop
cmp
fcoml
in
ret
ss
mov
inc
mov
fistpll
dec
fsubp
arpl
pop
or
xchg
fs
scas
or
clc
jecxz
loop
sub
lods
mov
in
mov
cltd
push
loop
out
shll
out
and
add
lahf
mov
xor
mov
in
xchg
mov
cld
mov
xor
lock
mov
or
loopne
and
sub
in
pop
scas
ljmp
call
xchg
inc
push
subl
xor
lret
fiadds
repz
sub
dec
gs
je
jno
lea
mov
sbb
add
cmp
jle
mov
loop
adc
adc
jae
xlat
pusha
lea
xchg
pop
push
adc
pop
dec
scas
cltd
inc
push
rcr
imul
icebp
mov
mov
or
dec
lods
mov
and
mov
jp
mov
cld
stos
fistl
or
mov
leave
scas
jp
xchg
sbb
and
outsl
pop
jl
pop
pop
lea
mov
push
pop
in
cli
arpl
add
cmpsb
icebp
loopne
jg
adc
pop
out
daa
push
insb
test
mov
aas
mov
lret
pusha
dec
icebp
or
and
mov
push
test
movsl
xchg
cmpb
test
lea
pop
dec
adcl
ret
sbb
icebp
fsubrl
sub
test
fadds
lahf
jmp
cmp
imul
iret
mov
mov
test
cmp
pop
pop
sbb
les
inc
js
xor
arpl
hlt
loop
xchg
loopne
scas
insl
add
xor
sub
mov
in
sub
repnz
push
dec
add
outsb
xchg
jl
add
mov
mov
xchg
mov
orb
sbb
mov
and
andb
mov
jl
int
repnz
mov
push
arpl
pop
dec
nop
test
xchg
rol
and
cmpsl
push
or
ljmp
js
mov
pop
iret
mov
shl
cld
int3
push
faddl
fwait
or
sub
fiaddl
repz
jns
leave
outsl
repz
out
ret
bound
mov
and
jge
xor
push
mov
jbe
es
jne
and
push
push
and
outsl
cmp
rcl
cmpsl
cltd
in
or
push
outsl
daa
mov
call
jns
data16
aad
stos
and
sub
adc
sub
cltd
pop
cmp
and
sbb
fistpl
jmp
fwait
popf
pusha
in
mov
iret
mov
pop
flds
fwait
add
mov
repnz
mov
out
fwait
and
add
and
dec
xlat
inc
loop
sbb
sarl
scas
mov
iret
dec
rcrb
push
mov
mov
xchg
cmp
arpl
add
dec
add
or
ljmp
push
cltd
rcrl
dec
or
es
leave
sbb
pop
sbb
add
repz
test
sbb
mov
das
pop
leave
mov
ss
or
outsl
sbb
push
movsl
stc
sarl
xor
xor
outsl
pop
nop
clc
test
ja
scas
adc
mov
shrb
aad
cmp
push
pusha
adc
and
fsub
mov
andl
xlat
mov
jle
push
xlat
test
or
lahf
rol
sub
aad
movsl
jnp
idivb
inc
sbb
orl
push
gs
sub
add
xor
dec
fbld
mov
push
push
test
jle
out
cmpsb
aad
mov
dec
pop
into
in
mov
sbb
mov
jmp
cmpsl
lock
outsl
jae
mov
sets
sub
outsl
ja
mov
jb
dec
loop
adc
adc
addb
pop
push
lock
xchg
mov
pop
adc
cmp
lea
fidivl
daa
fs
jle
add
repnz
xchg
addl
xor
push
test
roll
cwtl
call
test
js
cli
popf
cltd
mov
lcall
or
sahf
stc
fisttps
mov
sbb
std
cli
cmp
push
test
hlt
cmp
pop
movsl
js
lret
push
jmp
shll
pop
jg
mov
mov
cld
sbb
add
or
stos
aas
push
xchg
shrl
dec
cmc
bnd
gs
out
lock
cmc
mov
xchg
or
sbb
roll
sub
push
insb
stos
rclb
push
cmc
loopne
push
scas
or
data16
icebp
pop
les
pop
pop
and
xchg
push
mov
pop
pop
inc
aad
aaa
nop
push
popl
xlat
negb
xor
mov
iret
pop
sbbl
add
mov
mov
repz
add
std
xchg
lret
add
pop
ss
jb
pop
iret
icebp
add
add
movsl
mov
jmp
ja
sub
adc
mov
mov
fldl
cltd
ret
ja
sbb
in
xchg
sub
jle
jp
mov
std
fimuls
and
aad
fninit
shlb
xchg
pop
adc
jbe
repnz
mov
cmovnp
inc
xor
adc
cmp
mov
inc
sbbb
sub
ret
out
fs
cltd
gs
mov
fprem
mov
or
movsb
cmp
pushf
iret
sbb
sbb
lock
mov
lock
adc
and
cld
adc
fidivrl
shlb
xchg
dec
shll
cmpsb
xlat
lret
xor
push
cltd
fildll
adc
lret
push
iret
push
dec
jg
gs
ds
sub
xor
fistpl
stc
adc
or
xor
das
lds
clc
fisttps
jmp
mov
fldl
mov
jle
sbb
mov
int3
or
movsb
mov
add
data16
mov
mov
pop
or
push
push
scas
jns
repz
xor
push
and
lea
fsubrs
add
cs
jne
popf
jne
mov
ror
test
jp
ljmp
pop
and
inc
subl
or
dec
cmp
mov
or
jne
setle
add
jns
adc
nop
mov
mov
mov
pop
jbe
outsb
pop
inc
std
push
enter
mov
jg
mov
mov
scas
sub
jo
aas
cmp
iret
sub
inc
movsb
movsl
xchg
fldcw
adc
das
xchg
mov
outsl
cmp
out
outsb
inc
mov
inc
push
dec
jns
icebp
cltd
daa
jecxz
fnstenv
mov
pop
push
xchg
fidivl
inc
ret
leave
mov
jno
mov
dec
xchg
daa
not
jle
mov
enter
popf
sarb
neg
inc
mov
mov
push
pusha
ja
stc
and
jecxz
adc
mov
push
and
fldenv
mov
mov
test
fwait
sbb
js
adc
xchg
dec
dec
cmpl
jns
stos
xchg
outsl
pop
xchg
fs
repz
jb
adc
push
ds
xor
mov
call
xchg
loop
jns
testl
lods
mov
dec
cld
sbb
test
scas
or
inc
jb
les
pop
ss
push
jl
jmp
outsl
mov
push
xchg
xchg
jae
mov
mov
in
jbe
mov
lcall
fucomip
rcrl
popf
cmovo
pop
or
out
aas
aad
push
ljmp
mov
test
pop
into
sarl
xor
add
pop
mov
inc
or
pop
cmc
and
sub
andb
pop
in
xchg
mov
je
out
aas
xchg
adc
sub
fisubrs
and
mov
loop
push
push
push
lret
cmpsb
xor
pop
into
div
or
test
mov
pop
xlat
inc
js
stos
out
jmp
push
cmc
aaa
or
daa
pop
jnp
test
inc
mov
addl
cmp
mov
loope
js
inc
orl
and
lcall
xorb
xor
enter
cmp
push
cmpsb
enter
mov
dec
rorl
push
aad
cs
int3
dec
icebp
inc
mov
mov
mov
cltd
and
push
jno
data16
jp
aam
jmp
out
xor
rorb
pop
outsl
out
or
ss
sbb
dec
fs
jmp
xchg
mov
in
or
aas
gs
out
mov
pop
stos
cld
xchg
ss
les
cwtl
add
jp
xlat
aas
sahf
mov
mov
adc
call
mov
jmp
jecxz
lds
nop
push
cmpsb
xorb
loopne
mov
push
push
pop
dec
jno
stos
dec
rcrl
out
jp
sub
ret
pusha
cwtl
lods
xor
xor
hlt
dec
loop
push
push
icebp
mov
xchg
jmp
jl
shr
jge
arpl
or
scas
dec
add
es
ds
pop
icebp
push
jecxz
xor
mov
in
mov
lock
fbld
cmp
in
sbb
push
dec
sbbb
das
xlat
xchg
xchg
cld
mov
cmp
dec
aas
xchg
inc
mov
mov
inc
fs
lret
lock
aas
inc
add
mov
imul
mov
push
sti
fnstcw
dec
sub
fdivrp
pop
lahf
int
jg
mov
dec
xlat
jl
out
rorl
mov
ja
xchg
add
xor
mov
loope
outsl
jp
jp
jl
fs
mov
out
add
aaa
jae
rcll
test
repnz
pop
das
push
call
outsl
jp
pmaxsw
mov
mov
xchg
popf
call
test
inc
lods
notl
adcl
sbb
lea
ror
sbb
inc
faddl
push
add
jmp
cld
add
and
ljmp
jnp
pop
push
pop
push
and
ja
pop
js
mov
jmp
inc
inc
lods
pop
add
push
or
jg
lcall
mov
call
adc
xchg
pop
movsb
or
lret
leave
cmpsl
sti
test
js
inc
push
nop
ret
fdiv
adc
xchg
xchg
fwait
mov
inc
mov
adc
mov
mov
jns
sub
sbb
xchg
inc
aaa
push
scas
mov
and
outsb
and
cltd
cmp
cmpb
xor
cmp
dec
in
mov
xor
bound
xor
bound
insb
out
bound
out
sti
mov
xchg
pop
call
inc
mov
leave
aaa
cmp
push
movsl
xchg
mov
mov
xchg
aad
jns
jp
jbe
jbe
xor
in
dec
int
movsb
sbb
orb
and
int
pop
cs
jbe
jb
add
repz
or
popf
add
outsb
xchg
mov
clc
andl
call
push
and
or
loopne,pt
iret
inc
test
mov
adc
fwait
int
cwtl
add
icebp
nop
pop
add
cmp
xor
mov
clc
shr
lods
or
xchg
jnp
pop
dec
lods
xor
cmp
hlt
push
mov
arpl
xor
cld
rolb
add
rorl
ret
orb
add
cmpl
dec
cmp
mov
loope
mov
jmp
decb
fimuls
cs
imul
mov
xor
xchg
or
neg
jbe
mov
mov
fs
sahf
sbb
iret
shr
cmpsb
dec
shlb
sahf
insb
enter
cmp
sub
inc
add
lcall
movsl
cmp
xor
jb
pop
mov
arpl
sub
push
aaa
pop
shrb
add
cwtl
jae
pop
pop
ja
mov
sub
test
xor
sarl
cmc
push
rorl
lods
jo
out
jl
mov
pop
arpl
inc
js
pop
push
lods
mov
or
jle
adcl
push
test
es
sbb
stos
pop
iret
aas
mov
pop
repz
and
sbb
out
fisttpll
sbb
fwait
xor
out
pop
mov
out
add
inc
incb
cmp
rcll
test
cltd
lret
lret
mov
pop
jmp
aad
shl
mov
xor
psubusw
pop
bnd
fiadds
pop
pushf
cli
lret
cli
mov
andb
pop
and
jne
push
iret
les
pop
outsb
pop
jmp
pusha
mov
enter
in
pop
daa
lcall
in
xchg
dec
xor
pop
push
sbb
mov
loopne
cmp
lahf
es
push
or
and
xchg
cwtl
pop
cli
mov
fwait
add
test
inc
stos
xchg
dec
movb
sub
imul
in
icebp
cwtl
inc
mov
xchg
xor
cmp
rcrb
mov
out
mov
imul
mov
xor
cmp
jecxz
stos
mov
gs
push
out
negl
pushf
popf
sub
inc
ljmp
xchg
lcall
sub
lock
mov
mov
xchg
cli
dec
sbb
sub
add
push
cmp
rclb
jge
push
pop
jle
call
iret
popf
cltd
aas
call
sub
gs
jmp
lea
pop
jle
pop
add
cs
xchg
jl
out
adc
add
vgetexpsd
ret
xor
mov
addr16
mov
add
jl
lock
clc
dec
push
gs
ficompl
sub
cltd
nop
push
inc
jge
xchg
push
xchg
mov
jo
adc
iret
cltd
jne
cld
cld
push
jbe
push
jp
mov
ds
mov
inc
les
push
mov
fnstcw
pop
jae
sub
mov
leave
aam
cmp
lret
push
inc
fidivrs
jp
sub
and
out
out
es
or
add
cltd
and
pop
xlat
in
push
in
mov
xchg
jns
jnp
sbb
divl
aaa
lcall
cmpl
out
dec
jle
xchg
lret
cmp
add
dec
mov
cmp
sub
iret
test
adc
push
jnp,pt
cli
push
dec
xor
jecxz
and
addr16
cmpsb
mov
jle
or
add
pop
rorb
jge
jb
lahf
lcall
loope
sti
jne
shlb
pusha
dec
mov
sti
roll
lret
cld
mov
call
jp
jbe
and
push
and
movsb
mov
push
in
lret
add
mov
mov
lret
and
pop
scas
clc
mov
or
cmpsb
sahf
les
or
jae
add
pop
pusha
in
lods
pop
int3
scas
scas
cmp
mov
fnstsw
mov
cmpsb
jno
sbbb
jne
notl
push
inc
imul
adc
jae
outsb
cwtl
repnz
cli
movsl
test
cmc
dec
sbb
stos
xchg
loope
loopne
enter
dec
jne
cmp
inc
dec
fcomps
aas
xchg
xor
hlt
int3
rorl
sub
cmp
std
inc
clc
enter
push
or
fidivl
push
push
in
leave
add
loop
cmp
inc
mov
in
das
xor
add
lea
mov
ss
jns
mov
add
ficoms
jns
ret
mov
pop
hlt
cli
std
mov
cmp
pop
shll
out
sbb
andl
jle
jo
sbb
outsl
pop
or
jecxz
gs
shll
mov
into
mov
cld
aam
xor
adc
jmp
das
lahf
mov
push
xor
stos
sbb
mov
push
int3
mov
cli
sbb
xchg
pop
adcl
mov
mov
mov
scas
daa
scas
xlat
xor
in
cmp
scas
fdivs
movsl
push
lahf
push
sti
ss
inc
call
or
popf
out
mov
movl
push
cmpsl
mov
or
mov
inc
cwtl
or
and
loopne
cmp
pop
xchg
and
clc
fidivrl
ds
xchg
or
fnsave
loop
js
sbb
dec
imul
idivl
enter
push
rcrb
call
fldt
adc
jge
icebp
mov
daa
subl
or
jns
addr16
shrb
dec
notb
subl
lret
lock
pop
gs
mov
lods
jmp
mov
mov
inc
out
jb
cmp
pop
push
in
lcall
mov
jp
push
xchg
scas
inc
adc
cli
ljmp
int
jle
je
movsl
jne
jns
lea
in
dec
ret
fxch
inc
xchg
aam
cmpsl
fdivrp
dec
nop
lods
inc
mov
mov
pushf
push
xor
xchg
std
clc
out
mov
repnz
repz
fadds
ret
out
lock
jbe
clc
jge
xor
push
jl
inc
mov
xchg
push
mov
lcall
mov
mov
das
imul
insl
lahf
or
jno
stc
test
aad
mov
je
or
adc
jnp
sahf
das
mov
je
jecxz
add
mov
in
push
scas
in
cmp
sbb
inc
fwait
mov
shl
test
fsubl
sbb
add
test
iret
aam
pop
pushf
sub
jo
lea
and
or
mov
enter
sar
filds
and
cmp
xchg
xor
cmc
aaa
ja
imul
dec
fiadds
imul
sbbl
xchg
xchg
arpl
cmp
sub
addr16
movsl
dec
sar
lea
sub
mov
fdiv
ds
outsb
mov
gs
cmpsl
aaa
shll
rorl
sub
sub
push
fwait
jmp
dec
loop
sbb
lret
imul
cmp
mov
mov
mov
xor
xchg
hlt
retw
dec
les
or
ljmp
popa
out
adc
pop
jge
mov
jge
movsl
and
pushw
push
daa
sub
and
mov
adc
mov
lahf
xorb
ficomps
cs
cmp
cmc
imul
rcll
notb
or
xchg
add
popa
divb
jmp
fldl2t
orl
arpl
pop
es
jmp
aas
inc
inc
andb
cmp
sub
mov
cltd
dec
movhps
pop
cmp
rolb
xchg
jo
jle
stos
push
nop
lock
sub
out
fwait
leave
xchg
add
inc
adc
lods
sahf
mov
clc
hlt
call
mov
call
or
and
and
jg
xor
xchg
jg
rcl
cmp
mov
cld
mov
sub
add
cmp
pop
pop
pop
ljmp
mov
pop
shl
out
jecxz
pop
add
mov
popf
clc
fs
sub
and
and
xchg
jg
adc
sub
rorb
pop
loop
or
xchg
mov
imulb
and
fnsave
push
es
out
jl
ss
ret
xchg
fcompl
popa
mov
addr16
pop
or
bound
sti
std
in
dec
mov
imul
push
ficompl
int
and
and
jle
mov
mov
clc
mov
xchg
pop
cli
mov
out
lret
adc
mov
insb
cmp
jl
or
pop
mov
xchg
pop
pop
mov
push
jg
xchg
push
pop
out
into
enter
jp
lret
add
sahf
lahf
dec
pop
aaa
clc
mov
dec
movsb
sub
fildl
call
xlat
lods
stos
mov
int3
and
ss
xchg
push
or
pop
inc
pop
add
pop
popf
out
or
imul
cmp
mov
xchg
stc
andl
xchg
xor
jbe
pop
fidivrl
ret
mov
mov
fwait
xor
js
jb
jo
pop
mov
jecxz
inc
mov
ret
jle
pop
xchg
std
pop
push
iret
clc
out
mov
mov
pusha
or
movsl
aas
or
pop
out
mov
mov
inc
inc
mov
mov
call
andl
xor
cwtl
or
test
or
and
sub
cli
pop
daa
sbb
cli
dec
clc
and
mov
jl
cwtl
adc
std
jb
aad
jae
int
adc
int
mov
ljmp
nop
lods
cmp
pop
in
imul
push
jno
in
shlb
inc
xchg
lods
mov
out
repz
xor
ret
add
in
sub
cs
cmp
mov
pop
in
jb
test
mov
ficompl
jo
sti
nop
adc
pop
mov
scas
pop
adc
insb
mov
cmpsl
push
out
adc
mov
or
add
xor
add
sub
mov
movsl
ret
xor
sub
mov
pop
push
xchg
subb
jp
insl
or
dec
add
popa
jle
popa
mov
dec
xchg
sbb
xchg
inc
ja
loop
icebp
iret
dec
arpl
sbb
and
adc
gs
push
or
inc
daa
xchg
and
icebp
pusha
pop
xor
push
sub
jae
lahf
dec
int
pop
mull
mov
cltd
mov
in
jp
jge
pop
cmp
movsl
push
xchg
rcrb
jmp
lods
dec
mov
fsubrp
sbbb
xchg
pop
ljmp
jp
dec
ja
roll
in
sarb
add
lret
push
stc
test
add
shl
xor
repnz
daa
jp
cmc
pop
rclb
jae
addb
lahf
adc
add
push
mov
push
nop
dec
bound
out
inc
int3
lret
ljmp
pop
cmp
mov
jmp
js
pushf
pop
xor
mov
push
cmpsl
mov
shll
mov
nop
and
mov
push
inc
pop
mov
lods
dec
mov
lahf
iret
mov
dec
pop
imul
push
xchg
inc
cmp
out
pop
xor
push
mov
imul
mov
mov
pop
data16
shll
jp
in
ss
sar
test
inc
cmp
fildl
insb
mov
pop
rolb
adc
push
xor
jno
pop
inc
jnp
jbe
fstl
push
dec
sahf
pop
lods
sarl
int
leave
fdiv
jnp
push
imul
cmp
subl
je
jp
sbb
sti
adc
xor
addl
and
cmp
add
out
ret
adc
ljmp
xor
jle
imul
pop
sub
mov
int
ss
mov
xchg
sub
pop
jmp
or
and
sbb
mov
or
movsb
jmp
out
xchg
xlat
dec
imul
lahf
push
cli
dec
adc
jns
dec
lds
test
adcl
mov
lods
scas
add
and
aas
cmp
jge
mov
xor
loopne
pushf
jle
pushf
lret
fidivs
xchg
jg
mov
sbb
and
ficomps
scas
mov
in
inc
fbstp
es
or
fisubs
cmpsb
cmp
es
mov
fs
lods
lods
lods
aas
inc
add
cli
fwait
push
insl
rcrl
out
xchg
loope
fisubrs
pop
je
dec
nop
sub
dec
push
arpl
insl
sbb
lahf
mov
mov
stos
dec
dec
hlt
scas
mov
repz
jmp
loop
imul
mov
jne
sahf
xor
lods
dec
pushf
jno
scas
out
cwtl
sub
xor
xchg
inc
movsb
xor
inc
sbb
loope
jno
lea
add
imul
addr16
addr16
xchg
shld
xchg
add
mov
popa
adc
add
or
push
mov
popf
sbb
adc
lock
xlat
fs
xchg
ret
adc
aam
mov
xchg
repz
sub
xchg
or
and
enter
test
pop
pop
rolb
adc
lahf
push
mov
cmp
xchg
pop
add
fld
popa
aas
jecxz
inc
mov
jne
bsf
out
push
pop
mov
ret
cmc
bound
adc
mov
iret
xor
sbb
xor
pushf
subl
or
mov
in
das
add
test
andb
jno
ljmp
popf
fdivp
mov
jo
pusha
adc
out
imul
pop
xor
das
out
sub
das
rcrl
leave
cwtl
dec
dec
jbe
shll
pop
mov
push
in
sbb
dec
loope
stc
aad
bound
ret
movsb
fldl
ret
mov
scas
mov
cmp
mov
or
xchg
popa
roll
xor
pop
dec
xchg
push
mov
inc
and
cld
jns
mov
cmp
movsb
jne
mov
fildl
inc
out
mov
ficoml
cmp
jb
dec
xchg
xchg
gs
jl
js
nop
pop
int
pop
sahf
test
sahf
insl
sbb
rdmsr
push
add
push
lods
push
jg
es
jmp
jo
cs
mov
imul
pop
ja
mov
cld
aam
jns
pcmpgtd
lock
gs
mov
imul
sarb
loope
push
and
mov
or
popf
inc
mov
pop
in
and
fwait
dec
sub
into
add
cld
js
into
test
cs
and
jo
imull
push
sbb
add
test
inc
xchg
hlt
or
movsl
ss
je
stos
mov
lock
xor
add
ja
push
mov
idivb
jbe
pop
sarb
sub
xchg
push
int3
jno
imull
mov
sub
lds
mov
lock
shrb
imul
in
jno
mov
ljmp
jl
popa
sub
hlt
in
sbb
ljmp
mov
pop
aam
sub
jbe
iret
rorb
push
lea
pop
jp
cmc
imul
pop
and
les
movsl
out
jecxz
sub
pusha
push
shlb
inc
loop
and
mov
xor
mov
inc
xchg
jl
adc
mov
sub
xor
pop
inc
outsl
xchg
ja
or
sbb
stos
addb
out
mov
sbbb
jo
jg
push
lds
mov
out
insb
out
aas
lret
xchg
xchg
dec
pop
sbb
test
clc
dec
sbb
and
test
jle
mov
sbb
icebp
lods
hlt
mov
dec
xchg
loopne
jns
mov
mov
add
das
loopne
out
jae
dec
push
mov
jno
call
shrb
jg
nop
outsl
xchg
shll
mov
fistpl
filds
and
imul
out
and
adc
fstps
and
into
cwtl
lret
test
sahf
ret
scas
cld
inc
mov
jp
adc
add
xchg
lods
ljmp
repnz
and
cmp
mov
adc
ds
jne
sub
in
repz
js
fists
cltd
ds
cmp
shlb
adc
dec
cmc
push
or
inc
lret
adc
arpl
mov
je
mov
test
repnz
xor
das
push
dec
aam
insb
lock
mov
jmp
jmp
sahf
push
or
jno
lahf
int3
and
dec
fdivrs
lret
loopne
dec
and
dec
jne
imul
jl
mov
cmc
jns
pop
dec
pushf
mov
aas
cmp
mov
xchg
nop
xchg
pop
sub
sub
sbb
or
arpl
ljmp
fnstcw
sbb
cmpsb
cmp
dec
insb
fildll
add
dec
in
les
and
ret
rolb
fwait
pop
fsubrp
cld
push
lcall
das
add
mov
in
mov
int3
aad
aad
loop
push
push
add
sbb
je
aas
jo
push
imul
lea
pop
inc
es
stos
cmc
adc
sub
fwait
mov
sbb
sub
movsb
pop
mov
pop
push
jno
mov
push
in
mov
int
out
fdivrl
iret
loopne
and
aas
arpl
pop
int3
cli
add
sub
pop
inc
mov
out
lock
pop
call
lret
ret
xchg
addb
push
lods
xchg
scas
xlat
fsubl
dec
sub
sbb
ss
adc
enter
int
test
pushf
lahf
pushl
outsl
push
mov
test
fnsave
mov
pop
addr16
or
mov
loopne
call
int3
fxch
jne
fdiv
or
jl
cmp
xor
adc
stos
xchg
bound
rcrl
pop
mov
popf
fnstenv
ret
xchg
push
adc
jle
mov
cmpsl
inc
jle
filds
pop
cmp
fwait
dec
jge
pop
push
sub
pushf
xorb
xor
movsb
les
testl
push
test
mov
fdivrl
inc
stos
jle
inc
pop
aas
ss
dec
adc
stos
mov
xchg
push
lea
movsb
cmpsl
movsb
int
jae
dec
mov
xchg
test
enter
add
or
push
sbb
cmpsb
xor
mov
fldcw
xor
jp
packuswb
lock
negb
jl
mov
mov
inc
pop
mov
jne
mov
ds
push
mov
pop
inc
fisttpl
push
pop
into
dec
xor
out
pop
rorl
out
lahf
lock
icebp
jae
aam
fcomi
mov
mov
bound
inc
mov
enter
jae
mov
insb
dec
hlt
outsl
pop
sbb
sbb
popa
push
out
mov
in
stc
sub
es
mov
xchg
inc
aam
mov
and
inc
mov
mov
mov
mov
fbstp
push
sbb
subl
iret
test
test
adc
clc
mov
cld
fwait
ss
faddl
mov
push
shlb
inc
sbb
mov
sub
xor
ljmp
xchg
mov
dec
sbb
mul
push
add
jo
cmpsb
enter
xchg
mov
jnp
or
mov
fidivl
sub
lret
inc
ljmp
fcmovnbe
scas
mov
cmp
sub
in
ds
xlat
mov
loop
push
lods
clc
push
mov
ja
adc
mov
cmpb
mov
loopne
pop
mov
dec
imul
fs
or
lods
int3
dec
stos
or
xchg
pop
enter
sub
add
xor
xor
push
mov
test
pop
push
lret
push
cmpsl
subl
scas
add
sub
pop
or
lods
adc
sbb
repnz
cmp
das
shll
outsb
mov
and
push
in
xchg
pand
push
les
mov
shll
testb
gs
jae
xchg
stc
inc
xchg
fmuls
lret
dec
jno
lods
sbb
repz
jge
sbb
xor
mov
aaa
fldcw
ret
fmuls
xchg
adc
mov
inc
lea
inc
sub
mov
stos
mov
dec
mov
sub
test
lea
dec
xchg
cmpsb
clc
sub
aad
mov
and
jge
lahf
pushf
jmp
cwtl
pop
sbb
mov
xlat
xchg
dec
and
lods
pop
pop
aad
add
out
jmp
dec
inc
daa
sub
outsl
dec
sbb
mov
push
or
cld
mov
fildll
stos
test
pusha
xchg
and
daa
xchg
cwtl
shrl
sub
inc
sbb
cmp
mov
mov
fldenv
jg
fidivrl
aad
in
ror
inc
int
mov
push
ret
cwtl
sbb
stos
cmp
jns
xor
add
fcoms
fiadds
xor
push
adc
jne
sub
sbb
or
or
xor
ja
sbb
dec
xor
mov
shll
dec
idivb
push
rclb
jge
inc
pop
mov
add
mov
repz
mov
out
sti
lea
push
push
inc
dec
bnd
int3
inc
add
outsb
push
daa
inc
pop
ret
mov
in
insl
dec
call
rcr
in
decb
test
insb
jae
not
or
idivl
icebp
jp
bound
xor
add
fisubs
mov
xor
out
xchg
ret
and
push
add
movzbl
adc
push
cmc
xor
shrb
and
popa
pop
sbb
cwtl
cmpsl
mov
inc
xor
stos
lds
jns
inc
cmp
fs
ja,pn
loop
and
sahf
rorb
mov
mov
fsubrl
int
jmp
enter
add
ja
sbb
mov
xchg
rcrb
add
loopne
xchg
fs
lahf
cli
and
cmp
push
sahf
stos
iret
pusha
clc
xlat
lea
cmp
cmp
jl
cmp
xchg
add
mov
pop
inc
std
rcll
add
lret
lods
ja
jae
outsl
mov
mov
push
add
jno
xor
sub
cmp
pop
push
cmp
xchg
fisubs
icebp
or
xchg
and
pop
ret
sbb
mov
cmpsl
sbb
pop
js
cmpsl
or
jbe
in
push
jg
lods
outsb
or
enter
or
xor
xor
in
lock
scas
adc
mov
cltd
sub
aad
adc
rorb
out
pusha
aad
leave
stos
and
mov
jle
lods
or
repz
pushf
push
sar
sahf
lcall
mov
dec
jmp
movsl
mov
rcrl
jp
xchg
std
jb
jb
fbld
mov
aam
jmp
xor
xchg
mov
fdivrl
add
je
divl
sbb
push
hlt
dec
hlt
vpor
roll
pop
fs
sti
inc
movb
call
xchg
scas
lods
xchg
shll
cmp
in
shrl
dec
xchg
cltd
sub
add
cmpsl
pusha
add
inc
vaddpd
adc
pushf
lods
mov
cs
dec
dec
std
cmpsb
xor
std
popf
pop
rcrl
int3
pop
cmp
mov
xchg
mov
push
fs
cmpsb
cmpsb
lds
fdivrl
push
fisttpl
jae
sarb
jp
out
and
ret
or
mov
out
jnp
xor
pop
stos
dec
insl
push
push
bound
subl
aam
push
mov
jge
mov
lods
cmp
adc
stc
fs
lods
sub
and
pop
or
jg
ss
shr
es
inc
jl
cmc
daa
pop
inc
pop
xchg
ja
jge
outsb
fisubrl
push
sbb
mov
ja
mov
lea
jb
mov
stos
testb
dec
xor
movl
inc
stos
pop
dec
push
sti
pusha
jle
mov
push
arpl
stos
daa
push
dec
pop
jne
xor
out
mov
sbb
imul
xchg
aam
sub
jl
dec
push
sub
xchg
jl
dec
js
xchg
jne
repnz
push
jge
imul
ss
in
fidivl
out
mov
sbb
or
mov
dec
push
push
xlat
or
inc
mov
mov
cmp
mov
jl
clc
pusha
cmpsb
leave
ja
pop
icebp
inc
icebp
dec
mov
jb
jg
or
fdecstp
cmp
aad
push
pop
les
inc
aaa
aaa
sbb
xchg
sbb
rcrb
in
lods
jle
out
ss
mov
das
mov
sbb
sbb
es
jae
roll
fsubrl
fnsave
popf
sub
or
rorl
js
push
fisubrs
push
leave
ret
pop
jne
adc
adc
dec
sub
ss
clc
jmp
rclb
imull
clc
adc
lret
and
lock
push
push
fldl
push
mov
push
fidivs
jne
inc
aam
jns
sub
inc
loope
push
push
push
icebp
push
mov
les
xchg
mov
push
push
dec
xor
sub
mov
dec
sub
repnz
pop
data16
sbb
adc
sahf
pop
je
cmp
push
lds
out
jecxz
popf
and
movsl
js
add
out
mov
test
add
mov
cmp
repz
xchg
xchg
clc
xchg
int
push
incl
adc
aas
jl
xchg
pop
pop
ljmp
dec
popa
jne
bound
sub
outsb
jo
xchg
jmp
sbb
push
movsb
pusha
cld
popa
or
cli
or
add
scas
push
fcomp
mov
push
data16
mov
fldcw
iret
inc
xchg
pop
or
cmc
push
mov
push
mov
mov
stc
inc
xchg
test
out
scas
sti
xor
dec
mov
inc
cltd
insb
sarl
mov
fs
cmpsl
scas
repnz
mov
jns
pushf
adcb
mov
jb
cmpsb
fisubs
es
lret
mov
xor
mov
enter
loop
xchg
and
adc
sti
and
ja
xchg
mov
push
ss
notl
je
push
jnp
leave
mov
int
jge,pt
scas
sahf
mov
jg
sub
jecxz
or
and
into
mov
out
mov
adc
and
ret
pushf
sub
xor
popa
xchg
add
mov
lds
js
and
push
int3
es
sub
pushf
insb
fcoms
aam
xor
in
add
call
mov
ffreep
inc
js
mov
shr
or
pop
in
adc
pusha
lcall
scas
negl
in
bound
mov
popf
rorl
add
adc
or
out
inc
sub
testb
jg
lock
xorb
ljmp
mov
fildll
fldl
xor
lods
mov
addl
aas
adc
push
shll
notl
mulb
and
pushf
imul
jae
mov
cmp
inc
jae
and
jecxz
push
or
adc
das
push
pop
inc
pushf
jbe
push
into
out
mov
push
int3
mov
addr16
movsb
inc
mov
xor
pop
arpl
or
cld
jl
lcall
sysexit
xchg
and
fisubl
insl
ss
insl
enter
out
notb
mov
jl
fisttpl
mov
rorl
filds
pop
cmp
jnp
fs
fidivl
xor
mul
lods
adc
add
pushf
cltd
mov
sbb
or
push
insl
cmpsb
das
lock
scas
mov
and
nop
cmp
xor
jl
xlat
leave
divl
pop
cs
in
add
push
mov
jb
xor
stc
mov
mov
cmpsl
adc
push
in
jecxz
jecxz
adc
addr16
gs
mov
push
mov
push
fists
and
mov
mov
add
push
fists
daa
jb
pop
xor
sbb
jge
and
scas
lods
popf
jns
pushf
into
xchg
imul
mov
mov
outsl
push
jl
stc
or
sbb
mov
add
andps
push
add
inc
jecxz
add
sub
stos
cltd
xchg
cmp
lea
pop
push
shl
lock
sarb
push
into
jp
cmp
inc
loope
add
mov
mov
sub
fisubrs
call
cmp
aaa
cmpsl
inc
cmp
sbbb
mov
imulb
jl
cld
xor
dec
jge
outsl
scas
gs
aad
push
push
mov
xchg
lcall
add
pop
mov
mov
insb
aas
into
mov
cmpsl
and
cwtl
mov
aas
into
jo
into
xor
pop
and
les
add
sub
cmc
daa
cmp
adc
fidivrl
adc
mov
jnp
jne
add
ja
xchg
scas
xchg
xorb
shl
hlt
popf
je
mov
mov
sarb
faddl
mov
lds
cwtl
cmpsb
mov
test
aas
aaa
mov
repz
lods
xchg
mov
bound
adc
sbb
adc
jbe
or
push
inc
popa
rol
mov
mov
add
xchg
fldenv
call
dec
jb
cmpsl
rorl
movsb
mov
ljmp
cmc
aam
mov
and
mov
insl
sahf
xor
sub
cmp
mov
inc
cmp
pop
dec
pop
mov
negb
pop
xchg
ffreep
push
jmp
out
mov
stos
or
popf
lods
push
mov
or
adc
out
xor
pop
xchg
test
or
stc
xor
andl
cmp
fnstsw
push
sarl
xchg
ljmp
adc
push
clc
adc
inc
call
sahf
xor
and
out
add
cmp
lret
fwait
mov
inc
arpl
fldt
adc
call
fildl
jns
mov
or
cld
in
insb
mov
aam
lahf
cmp
scas
jmp
lock
in
pop
add
js
mov
int
mov
test
ret
clc
sbb
jecxz
add
jg
cmc
clc
out
xor
or
ret
test
nop
ja
cmp
ret
dec
sarl
shll
dec
dec
push
stos
lea
sbb
fs
adc
mov
fidivrs
mov
pop
pop
and
add
jg
fninit
inc
test
icebp
leave
or
rolb
lret
fistl
xor
xchg
push
scas
jge
sti
mov
outsl
aaa
out
push
outsb
ljmp
inc
pop
mov
bound
cmp
sbbl
xor
mov
push
push
dec
lret
dec
mov
jne
stos
lret
pop
fcmovu
sub
mov
jecxz
pop
xor
add
orb
lea
loopne
out
pop
imul
idiv
adc
cmpsb
xchg
mov
out
loop
push
dec
repnz
or
xor
loopne
ds
and
fmulp
or
rep
out
test
enter
mov
repz
xlat
jbe
mov
sbb
push
ret
cmp
lahf
decl
add
cmp
add
xchg
sbb
adc
mov
adc
or
mov
mov
mov
scas
imul
push
push
inc
add
jns
inc
inc
add
sub
jae
push
cmp
setns
jns
cltd
mov
iret
jbe
fldpi
xor
fcomp
sti
outsb
je
insb
fwait
xor
daa
fwait
cs
mov
insb
insb
repz
mov
decb
cld
jnp
xchg
fistps
add
bound
sbb
shlb
sub
cmp
inc
pusha
enter
test
lcall
or
test
loope
into
popf
push
adc
inc
int3
stc
push
call
adc
pop
repz
mov
gs
sub
das
mov
aaa
mov
dec
aad
sahf
ffree
jg
test
stos
imul
mov
jae,pn
jmp
cmp
jge
pop
or
test
insb
pusha
dec
por
cmc
xorl
jne
or
test
inc
xchg
add
xor
cmpsl
rolb
repnz
fldenv
jp
jbe
sahf
inc
inc
sahf
repnz
outsb
lods
adc
inc
sbb
mov
in
xorl
or
dec
mov
mov
inc
jg
icebp
add
or
sti
jg
mov
or
cli
or
les
lock
mov
mov
inc
mov
sbb
lret
mov
jb
sub
mov
xor
out
adc
test
lea
divb
mov
mov
mov
rcll
mov
pop
nop
jo
add
or
jae
movsl
stc
inc
sub
fisubs
and
loop
mov
xor
jo
into
and
add
in
scas
jmp
sbb
or
stc
xlat
mov
leave
and
cmc
and
loope
rolb
jge
push
push
dec
outsb
push
sti
dec
inc
jno
adc
stos
jno
not
cmp
or
fs
adc
mov
push
movsl
aad
push
and
sub
xchg
inc
pop
mov
es
leave
xchg
pop
faddl
push
scas
pop
ret
subl
cltd
cmp
es
stc
fwait
jmp
adc
pop
inc
jge
adc
sub
clc
xlat
imul
lret
push
xchg
xor
test
push
cmp
jo
bnd
cmpsl
pop
and
cwtl
add
adc
imul
lret
inc
mov
xor
jnp
test
out
jnp
test
das
popw
sbb
cmp
out
dec
jne
mov
mov
adc
adcl
mov
fs
sub
enter
jno
fidivs
lds
imul
push
xchg
rcll
add
shrl
scas
out
pop
mov
jecxz
movl
jns
jecxz
and
sub
vpsadbw
popl
inc
and
call
out
and
pop
stc
bound
cs
fcmovnbe
faddp
and
cmp
cmp
flds
idivl
fcompl
sbb
sbb
es
stos
inc
cwtl
cmp
xchg
cmc
mov
popf
adc
sarl
lcall
icebp
in
out
mov
and
repnz
repnz
mov
fnstsw
inc
popf
leave
add
addl
mov
fadd
or
pop
in
mov
ja
es
vpmaxub
push
out
movsb
movsb
mov
cmpsl
lock
push
mov
scas
jbe
add
push
mov
xchg
inc
lcall
inc
data16
pop
adc
cmp
sbb
jmp
sub
ret
sahf
stos
shl
xchg
clc
pop
insl
pop
andl
fucomp
add
and
dec
push
jl
add
sahf
push
adc
and
lock
imul
pop
insl
pop
sbb
mov
flds
arpl
cmc
insl
rol
adc
jecxz
mov
dec
and
scas
pop
jge
pop
repnz
mov
mov
cmc
inc
lret
pop
int
sbb
jns
jmp
pop
test
push
dec
sub
repz
hlt
push
cld
es
and
mov
sub
stos
aas
cmp
cmpsl
popf
inc
outsb
enter
lock
sarb
data16
in
movsl
dec
in
out
mov
xor
cs
mov
hlt
sbb
sbb
fidivl
scas
out
in
je
jae
out
fdiv
aam
cmp
jnp
mov
in
pop
jp
mov
sbb
testl
xchg
or
jae
sti
lock
dec
into
pop
cld
adcb
lcall
xchg
sbb
divb
lods
cmp
cli
adc
mov
aad
jne
xchg
jecxz
leave
and
divb
push
push
lock
cmc
cmp
xchg
push
xchg
scas
sub
loop
pusha
jle
mov
xchg
xor
jb
test
pop
iret
or
push
xor
jp
lea
and
into
dec
std
int3
call
dec
xchg
pushf
aas
daa
pop
sbb
jbe
mov
add
sti
xchg
jle
mov
xchg
mov
fcomps
push
push
push
xor
xor
add
out
sbb
sub
lods
shll
push
or
xor
mov
jo
add
push
cli
and
mov
pop
ret
js
movsl
scas
mov
repnz
mov
inc
fs
sbb
bound
out
add
inc
jnp
mov
stos
pop
inc
cmp
push
fs
data16
fwait
cwtl
fstl
add
and
xchg
test
and
or
push
je
dec
sbb
shlb
xor
inc
testb
inc
jg
mov
daa
xor
pop
addr16
jno
addb
mov
shlb
daa
lcall
movsl
lret
and
add
cs
scas
jmp
cli
push
clc
mov
orl
dec
xor
and
arpl
inc
stc
scas
int
and
xchg
les
ja
fidivs
imull
pop
pop
insl
out
fistpll
ss
push
bound
pop
scas
xchg
outsl
in
cli
sub
imul
test
pop
xchg
push
jmp
cmp
outsl
imul
and
xlat
jge
xchg
pop
jmp
jp
inc
jno
stos
and
mov
mov
iret
int3
push
xchg
add
popa
adc
or
dec
lret
cmp
daa
movsl
lock
popa
pop
pusha
adc
and
push
cmp
pushf
mov
aas
enter
dec
dec
push
xor
push
push
xor
xchg
leave
in
jl
cmc
call
ror
icebp
jecxz
and
call
mov
out
fdivl
fistpll
stc
bound
repz
lds
mov
push
jo
pop
adc
push
fyl2xp1
mov
and
test
std
cmp
xchg
movsb
and
jl
push
bnd
mov
ljmp
cltd
shrb
mov
in
lret
pop
jmp
sub
aaa
cmc
or
imul
add
push
pop
inc
hlt
mov
mov
cwtl
ljmp
cmp
mov
fdivrs
cltd
lea
push
add
xor
dec
ret
aaa
hlt
in
push
sbb
lahf
movsl
in
dec
cltd
xchg
cmpsl
iretw
leave
cmp
notb
icebp
add
jg
push
or
xchg
inc
mov
jle
daa
iret
daa
cltd
repz
pop
divb
jae
mov
xchg
mov
repz
in
sub
jae
imul
add
inc
add
aad
add
pusha
cli
das
sub
jle
inc
sbb
mov
mov
aaa
cmp
cmp
push
ror
rorl
lret
sarb
xlat
cmp
jl
dec
ss
addr16
inc
loope
cld
loope,pt
dec
iret
das
or
cmpsb
ja
push
push
inc
stos
or
mov
or
mov
mov
ds
imul
jle
cmp
push
and
jmp
in
xchg
pop
add
int
or
xor
or
mov
mov
jae
inc
xchg
in
repz
sub
test
adc
pop
pop
leave
mov
xchg
out
jle
imul
and
in
sub
sahf
pop
movsb
lods
subl
jns
sbb
ror
stos
sub
jns
mov
pop
cmpsl
stc
lods
pop
and
divb
fsts
pop
jo
add
xor
add
jecxz
inc
and
inc
movsl
push
int3
mov
scas
pop
xchg
xlat
mov
cmc
cmpsb
xor
xchg
call
pop
mov
rolb
enter
sahf
xor
xchg
dec
lds
jg
dec
jno
mov
xchg
adc
mov
repz
xor
xchg
roll
xchg
test
adc
enter
pop
popa
push
pop
and
cmp
pushl
roll
or
in
outsl
mov
popf
lret
subb
sub
shrb
pushf
mov
out
outsl
rep
adc
cmc
jne
inc
ljmp
sahf
push
fdivs
mov
jae
rorl
stos
into
adc
out
cmpsl
sbb
cmp
loope
cmp
push
sbb
mov
outsl
call
jle
cmpsl
repz
in
jne
bound
aad
int
sahf
jmp
jle
je
sahf
out
ss
and
jb
xor
insl
in
and
in
and
lret
test
in
inc
cmpsb
mov
int3
or
call
addl
stos
inc
and
push
xor
sahf
xchg
rcll
push
fisubrl
jp
sbb
pusha
jae
mov
or
scas
add
dec
lds
or
push
add
xchg
pop
mov
fsubs
mov
lea
push
fsubl
pop
xchg
fidivrs
int3
ret
mov
or
inc
pop
or
lea
inc
fidivs
jno
gs
adc
mov
orb
stos
inc
test
mov
dec
pusha
cwtl
pusha
fisttps
cwtl
xchg
ljmp
movsb
pop
lret
lcall
fnstsw
xchg
popa
shrb
lods
lods
test
push
pop
rcrb
sbb
inc
outsl
inc
and
adc
xchg
sbb
leave
cld
fs
jbe
mov
sub
or
push
cmpsl
pusha
jmp
fwait
aam
addr16
push
ds
push
arpl
sub
divl
cmp
mov
rcll
sbb
fadd
in
lfs
lock
dec
jo
aas
xor
das
aaa
sbb
add
pop
mov
adc
lahf
cmp
add
mov
popa
stos
adc
mov
js
enter
imul
add
jns
aaa
xor
loop
aad
fdivrp
pop
call
out
mov
pop
jp
lahf
fbstp
jmp
adc
jne
mov
mov
out
cmp
cmc
xchg
mov
testb
dec
dec
out
xor
jnp
stos
js
dec
ljmp
out
test
cli
jae
xchg
jle
orl
xchg
out
push
mov
cmp
push
dec
les
das
aaa
xchg
mov
outsl
inc
es
mov
push
aas
sub
jmp
dec
das
daa
or
inc
cmp
and
stc
les
or
mov
dec
pop
lret
mov
jg
cmp
mov
je
pop
cmc
jle
or
and
aaa
add
jnp
les
sti
arpl
cmp
push
push
or
insl
inc
in
les
adcb
cmp
xchg
loop
jle
mov
loopne
sarb
pop
out
pop
aas
movsl
sub
cwtl
dec
addr16
adc
es
sbb
mov
outsb
bound
push
mov
cmp
addr16
bound
push
stos
or
iret
ret
add
arpl
cltd
jle
mov
arpl
push
push
jmp
mov
sti
jmp
iret
jg
cmpsl
pop
repnz
xchg
test
sbb
push
mov
lods
sbb
push
ljmp
aaa
les
ljmp
stc
mov
inc
test
mov
loop
sbb
sub
movsb
add
call
imul
sbb
jl
jp
fwait
repnz
movsl
mov
nop
sub
pop
pusha
adc
jno
outsb
and
cs
or
mov
mov
pop
sbb
adc
mov
jmp
mov
push
cltd
divl
nop
jnp
sbb
sub
mov
sub
shrl
out
and
pop
pop
shrb
cmp
sub
fs
dec
lret
jg
stos
pop
repz
xor
cltd
mov
mov
std
jae
pop
push
pop
lock
ret
sti
fnstsw
push
push
inc
fucomi
jb
mov
lock
mov
pusha
push
aaa
add
cmp
shl
dec
or
repz
mov
dec
cmp
pop
nop
pop
mov
mov
jecxz
add
pop
sbb
aad
bound
mov
lahf
or
mov
imull
mov
sub
repz
sar
mov
sbb
sti
test
in
aas
mov
dec
xchg
add
sub
cmp
lea
clc
push
cwtl
fildll
leave
movsl
xchg
lea
and
outsl
in
cmp
xchg
je
clc
in
scas
sbb
lods
inc
subb
dec
inc
jecxz
xchg
jg
mov
inc
ror
xor
xchg
aam
stc
jl
push
mov
mov
fistps
fstps
cmp
cmpsl
xchg
jmp
add
lea
test
sar
cmc
aam
pop
lahf
repnz
and
inc
dec
xchg
push
rolb
and
jo
sarl
jmp
popa
pop
cwtl
cltd
cmp
fisubrl
or
lock
leave
nop
hlt
cmp
dec
int
ss
ret
sub
or
sbb
push
xor
in
cmp
pop
nop
sub
mov
mov
pop
mov
xchg
in
pop
push
pop
jae
ss
xor
add
adc
mov
adc
comiss
add
fstl
add
iret
bound
fbstp
fidivrl
cli
xchg
into
and
in
jne
mov
jbe,pt
add
xchg
dec
stos
xchg
inc
les
and
cltd
cmp
mov
sahf
out
ljmp
dec
jno
mov
push
and
shll
sub
in
mov
ja
into
lret
and
sub
or
or
mov
pop
pop
sbb
ret
popa
loop
fildll
mov
stc
adc
fsubr
mov
imul
mov
imul
push
outsl
scas
pop
jno
xlat
mov
rcr
push
shl
mov
cltd
xor
push
fildll
fists
js
or
cmp
leave
mov
aas
in
cld
ja
out
sti
lea
jnp
sbb
fstps
inc
push
adc
icebp
jmp
fs
iret
fsubrl
xor
inc
jmp
mov
lock
and
fcompl
xchg
jae,pt
sbb
dec
out
mov
jmp
mov
push
icebp
pop
mov
push
adc
psubusw
adc
sub
or
jle
insb
inc
stc
jle
ds
xchg
ljmp
jne
fimull
and
adcl
out
and
jl
xor
pop
lea
or
loope
adc
ret
push
mov
sahf
pop
adc
aas
test
mov
fwait
jg
jb
inc
sbb
repnz
scas
push
xor
imul
icebp
loope
push
mov
test
fldcw
out
cmp
arpl
outsl
sti
jle
adc
fsubrs
adc
out
ret
pop
into
and
xchg
push
xor
popf
repnz
cmp
push
mov
xchg
fdivl
pop
adc
cmp
clc
push
insb
out
pop
push
sbb
gs
pop
std
pop
clc
rcrb
movsb
movsl
ja
inc
mov
or
aaa
add
pop
inc
fbld
stos
aam
push
push
pushf
jae
lret
icebp
lcall
jg
decb
cmp
aas
nop
mov
fidivl
sbb
mov
mov
mov
lcall
dec
cmp
xor
and
pop
xchg
jns
stos
sti
loopnew
sbb
pop
jmp
push
jo
push
jo
push
push
jbe
push
scas
sbb
xor
stc
lds
sbb
fnstsw
sbb
jbe
int
insb
popa
push
mov
lahf
lahf
sub
int
bound
je
fildll
cmp
adc
xlat
inc
push
jns
xchg
std
jge
sbb
push
in
ror
or
hlt
stos
mov
idivb
jno
testl
imulb
mov
imul
into
hlt
cmp
xor
int3
cwtl
dec
cmpsb
mov
add
mov
jb
jb
pop
fisttpll
sbb
test
lods
jp
inc
mov
hlt
test
callw
pop
jne
lcall
xor
int
adc
lods
mov
enter
in
ja
mov
cmp
es
pop
outsb
mov
jle
sub
fisttpl
pop
scas
sbb
mov
std
scas
shl
mov
in
mov
add
adc
popa
pavgb
xor
out
xchg
adc
push
nop
aam
xchg
jle
push
ja
loope
cmp
sahf
popa
std
into
dec
dec
and
cs
inc
dec
out
and
push
push
stos
and
lds
xor
mov
sti
addb
fcoml
or
pop
popl
cld
mov
or
lahf
div
pop
mov
lcall
mov
lods
or
imul
cmp
adc
xlat
test
decb
mov
int3
test
and
mov
mov
std
test
js
sub
push
add
pop
pop
mov
xchg
popa
push
sub
cmp
int3
push
ja
subl
pop
lock
or
push
push
xor
push
mov
dec
aad
popf
mov
sub
jge
mov
ds
js
push
movsb
mov
pop
stos
add
adc
xlat
fsubrs
inc
ret
movl
cmc
sbb
rcrb
xchg
push
aad
mov
inc
mov
adc
fldlg2
pushf
int3
dec
aas
push
push
shll
cmc
mov
je
popf
cmpsl
ljmp
push
stc
mov
xchg
mov
test
fstpl
push
es
shlb
adc
imulb
mov
sarl
inc
lret
aas
repnz
pusha
adc
xchg
inc
inc
cmp
pop
inc
shll
push
out
cmp
mov
rcrb
jl
xchg
pop
pop
sbb
jg
mov
mov
xor
sbb
or
sub
xchg
cli
xor
pop
jnp
xchg
shlb
test
and
push
xor
mov
xchg
icebp
setnp
cmp
or
lock
repnz
jno
int
les
push
pop
sub
push
test
jae
ss
fnsave
push
popf
xchg
rcrb
jecxz
dec
orl
scas
or
es
jmp
out
and
dec
mov
bound
call
sahf
fs
sbb
stc
or
loop
push
into
push
insb
mov
lods
push
or
fcompl
movsb
outsb
addr16
mov
pop
divb
ljmp
sub
jnp
loopne
cmp
sbb
push
sbb
add
pop
repz
sarb
ja
push
js
outsl
int
jbe
mov
daa
or
xor
jbe
nop
loopne
shlb
dec
sbb
into
xchg
inc
fst
mov
mov
sbb
mov
xor
push
jl
xlat
sbb
dec
push
lock
jo
push
push
inc
hlt
fstps
fs
cmp
pop
adc
fwait
je
fcoms
inc
lret
xchg
iret
ficompl
aam
icebp
je
lahf
cmp
jo
pop
mov
mov
lock
cld
insl
or
in
sbb
mov
sub
pop
ja
das
lds
xor
mov
rorb
dec
push
mov
fstl
xchg
clc
ret
cmpsl
lods
insb
inc
mov
lds
pop
lret
in
inc
push
clc
iret
icebp
sti
or
cmc
cmp
pop
shl
inc
fldenv
mov
in
mov
sub
mov
cwtl
stos
jmp
jl
adc
jg
mov
out
out
jbe
call
dec
lods
inc
push
scas
dec
leave
icebp
jle
loopne
and
gs
mov
and
dec
test
xor
jo
jmp
xchg
in
imul
sub
into
call
xor
jle
test
test
push
jmp
inc
inc
jno
jge
pop
jp
outsl
call
push
sub
ret
in
in
pop
jno
dec
sbb
mov
adc
or
adc
movsb
imul
repnz
mov
nop
int3
xchg
sti
pushf
testb
lds
mov
lds
lods
pop
ds
sbb
mov
cs
or
push
sub
repnz
scas
mov
adc
call
add
stc
lods
and
inc
cmp
je
scas
test
out
arpl
push
movsl
pop
icebp
jmp
xor
adc
andl
and
cmpsb
lock
or
pop
lock
sub
arpl
jle
cli
and
movsb
mov
div
or
jns
mov
and
inc
and
push
push
jmp
test
lea
mov
out
mov
lahf
add
inc
inc
clc
daa
jo
lods
mov
push
pop
test
sarl
outsl
lods
mov
xor
int3
jbe
dec
shl
xchg
les
in
fwait
mov
xlat
sbbb
test
or
into
inc
pop
jg
xchg
mov
pop
loopne
or
add
xchg
nop
cmc
cmp
inc
xchg
pop
inc
push
fldl
cli
repz
cmp
pop
xor
out
test
jb
add
pop
rcrl
sub
repz
push
sbb
mov
mov
adc
cmpsb
or
out
enter
mov
and
sub
sbb
or
sub
sub
ljmp
pop
mov
mov
jb
movsl
sbb
ljmp
aaa
push
test
scas
cmp
js
jmp
arpl
sub
stos
inc
fistpll
and
in
dec
outsl
or
insl
mov
mov
clc
add
add
nop
inc
sub
cmp
mov
adc
xor
xchg
clc
mov
xor
jmp
lea
dec
out
jbe
insl
pop
adc
xor
and
and
jns
je
jbe
cmc
ret
push
fbld
and
lods
pop
mov
shlb
jbe
push
scas
movd
xchg
frstor
pop
jae
dec
pushf
testb
xchg
pop
jb
aaa
sti
mov
mov
cwtl
push
out
scas
in
lea
sbb
add
jns
cmp
pop
out
xchg
movsl
andl
notl
xlat
mov
mov
xchg
dec
arpl
xchg
add
outsb
jecxz
mulb
jmp
cltd
jmp
pop
add
mov
adc
mov
fmuls
mov
mov
movsl
dec
bound
xchg
icebp
cwtl
nop
ja
jp
mov
jns
mov
mov
das
jnp
andl
pop
sub
out
pushf
ljmp
dec
xor
lahf
repz
jns
fcompl
mov
mov
loop
xor
add
xor
inc
paddusw
push
cmp
jl
aaa
lock
movsb
shr
adc
subl
inc
ss
dec
adc
dec
mov
cli
sub
ds
shr
cmp
dec
rol
mov
es
push
jno
mov
loope
mov
out
and
xchg
popf
fnsave
imul
repz
lock
pop
insl
mov
adc
inc
cmp
rcrl
pop
popa
inc
aam
jmp
cmp
sub
fiadds
arpl
jmp
jle
pusha
arpl
mov
and
jmp
fsubrl
sbbl
push
sub
or
fsts
shr
dec
jecxz
inc
mov
push
ret
dec
fdivs
adc
jp
cli
mov
jae
pop
jb
dec
scas
mov
sbb
in
les
sub
adc
fidivl
jb
pop
ja
xor
scas
push
pop
mov
or
xchg
add
lcall
pop
pop
or
pop
inc
cmpsb
shlb
jg
insb
lcall
aas
cmp
clc
outsl
pop
es
cmp
push
cmp
in
pop
xchg
jo
out
mov
add
dec
cmc
movl
dec
gs
inc
rcrl
mov
out
call
pop
ja
or
jecxz
ja
out
clc
iret
inc
test
aas
lods
fwait
cmp
mov
mov
or
inc
outsl
out
xchg
call
pop
fldl
movsl
js
inc
jle
jb
sarl
lcall
sahf
into
lcall
mov
dec
adc
mov
bound
arpl
sbb
dec
inc
aaa
jmp
aaa
jns
push
sahf
jmp
push
jno
xchg
inc
pop
inc
insl
out
fwait
jecxz
push
inc
js
lods
cli
cmp
jmp
pop
test
mov
jge
push
or
add
pop
mov
call
xchg
mov
outsl
notl
sbb
in
jecxz
js
lock
xchg
dec
inc
in
out
test
mov
adcl
cwtl
push
pop
cmpsb
test
jae
add
xchg
cmp
sub
cli
inc
sbb
les
sbb
icebp
mov
int
sbb
mov
pop
in
mov
mov
or
push
out
mov
dec
inc
hlt
cs
cli
inc
xor
adc
cmp
clc
addr16
jno
std
cmp
sbb
pop
je
cli
push
out
or
jp
cmc
lahf
xchg
jge
addr16
stos
and
sbb
sub
arpl
adc
mov
push
ljmp
push
mov
inc
hlt
inc
lahf
push
mov
pop
sbb
inc
xor
pop
mov
add
mov
sarb
in
and
jge
cs
jge
je
jp
mov
sbb
jae
sbb
jae
dec
test
pop
fisttps
mov
adc
mov
aam
inc
aam
andb
je
js
dec
leave
push
add
test
shrl
xchg
and
mov
pop
lret
mov
popa
pop
pop
daa
cmp
mov
insl
jmp
sub
add
scas
imul
xorb
push
les
adc
ljmp
cmp
cmp
mov
adc
loopew
mov
dec
mov
test
add
jb
rol
int3
jae
subps
popa
lahf
repnz
lods
or
xor
sbb
sbb
jb
cmp
and
dec
bound
dec
and
gs
xchg
xlat
pop
and
insb
sbbl
and
jmp
add
jl
sti
or
popa
fs
aaa
psubw
rclb
dec
sub
stc
rcrb
cld
xorb
or
mov
inc
mov
mov
sbb
filds
push
aad
shlb
loop
sti
ret
pop
lock
in
mov
aaa
std
in
flds
ret
mov
aaa
sub
loope
mov
test
pop
xchg
mov
xchg
out
das
cld
adc
lret
fstl
sub
add
in
mov
cld
loop
popf
jge
out
and
movsb
lcall
or
addb
popa
cwtl
push
mov
negl
shlb
push
out
pop
loope
loopne
aad
addr16
jecxz
scas
jecxz
push
xchg
outsb
paddsw
push
mov
ja
cmp
inc
and
outsb
add
stc
int3
leave
sti
imul
sub
je
push
sub
lods
and
cmp
cli
cmp
fisubs
adc
shrb
sub
js
shll
and
xchg
popa
inc
push
push
pop
iret
mov
mov
test
push
mov
push
jg
xchg
test
out
pop
pop
and
out
scas
popf
rcrb
pop
in
fbstp
aam
test
sbb
sub
in
clc
dec
mov
cmp
int3
shrb
sbb
int
adc
push
ret
mov
inc
jbe
pop
cld
call
dec
insb
dec
dec
dec
rcll
fbstp
adc
js
push
adc
and
jo
push
push
mov
and
pop
inc
ret
add
xchg
test
loopne
pop
movsb
and
imul
jno
dec
or
inc
fstpl
aaa
and
pop
mov
popa
and
addr16
in
fisttpl
jl
or
mov
mov
outsb
sub
xchg
cwtl
dec
bound
fldt
push
or
pusha
inc
pop
pop
subb
test
sbb
mov
push
mov
loop,pt
cmp
sbb
inc
sahf
xor
imul
pop
hlt
movsb
aad
adc
mov
call
xor
mov
clc
test
outsb
and
paddb
pushf
rcll
push
sbb
aad
sub
dec
test
xchg
in
out
mov
dec
pop
fidivrs
xchg
mov
rorb
add
jge
into
mov
lret
xor
mov
xchg
cli
jge
mov
sub
loopne
cwtl
dec
push
sub
dec
jno
mov
cltd
xor
loope
test
jae
push
mov
jmp
adcl
pop
enter
and
cltd
dec
subl
hlt
xchg
mov
xchg
push
cmp
push
aam
data16
les
add
push
imul
or
movsb
xor
inc
and
stos
repnz
jne
sbb
cmp
mov
mov
orl
push
pop
jg
outsl
and
adc
mov
add
add
in
shlb
xlat
jp
bnd
mov
outsl
loopne
dec
jbe
stc
and
xlat
sub
fistpll
push
mov
cmp
sti
cmp
dec
addr16
aad
fidivs
pop
pop
je
sbb
dec
lods
stos
popf
add
push
dec
jp
addr16
mov
fucomp
and
jmp
aaa
out
std
dec
mov
in
movsl
lds
xchg
lods
xor
in
sub
cld
test
xor
sub
es
testl
push
repnz
in
jb
mov
test
mov
fimull
call
pop
add
sbb
js
mov
push
test
js
xor
mov
sub
push
addr16
in
cmpsl
sti
movups
mov
and
aam
incb
dec
rcrl
pop
in
stos
mov
das
mov
cld
outsb
push
loopne
jg
pop
js
mov
pop
push
pop
out
lret
jmp
outsb
or
test
sub
int3
lods
and
push
or
mov
xchg
push
sub
xlat
jo
arpl
dec
mov
adc
nop
in
popf
inc
pushf
sti
shrl
adc
in
push
mov
outsl
pop
and
fisttpl
xor
in
stc
scas
and
xlat
enter
in
imul
jbe
imul
mov
cmp
outsb
andb
mov
aad
insl
popa
jp
fbld
jge
or
push
mov
sbb
nop
mov
mov
cmp
lods
out
sbb
into
push
mov
nop
pop
push
inc
push
sbb
call
xor
jmp
ret
sbb
lds
jp
inc
or
push
cmp
shrl
imul
daa
insb
hlt
arpl
inc
mov
xor
test
fucomip
jecxz
mov
call
clc
jno
daa
push
iret
insb
shrl
mov
adc
mov
mov
andl
jns
negb
int
sbb
nop
arpl
or
div
les
icebp
sub
aad
ret
or
cmovno
iret
jmp
push
xchg
sbb
insb
xchg
icebp
push
mov
xor
mov
movsb
repz
inc
in
lret
cmp
sub
and
in
add
aam
repz
inc
test
cli
out
shl
jl
jbe
hlt
in
sbb
jns
add
pop
add
idivb
daa
test
idivl
sub
int
xor
imull
mov
lcall
add
push
inc
in
popa
mov
outsl
jns
jnp
add
ja
cmp
adc
jb
js
xor
iret
sbb
sar
hlt
hlt
cmp
sub
lret
jae
adc
loopne
xchg
xor
loope
mov
icebp
sbb
lods
mov
cmp
push
dec
inc
mov
xchg
jecxz
pop
inc
pop
adc
mov
cmpl
and
mov
or
movsl
sti
pop
cmc
lea
push
movsl
mov
call
nop
stc
xor
cmpsl
lahf
pushf
mov
sub
popa
inc
cmc
stos
int
in
mov
lahf
xlat
stc
sbb
xchg
push
aad
cltd
loop
inc
jne
mov
bswap
repnz
fs
call
call
sbb
jp
mov
mov
sub
stc
adc
js
adc
shrb
loop
loope
add
add
outsl
dec
fidivs
sbb
mov
in
fsubr
mov
sub
arpl
jl
push
sbb
fs
scas
addr16
xor
pop
xchg
imul
sub
add
adc
and
ret
dec
sahf
in
adc
cmpsl
std
jo
verw
mov
es
pop
push
xor
aam
mov
sbb
dec
jp
sbb
push
andb
pop
cmp
ja
mov
inc
or
jae
sbb
cmp
sbb
je
jnp
adc
pushf
repz
push
lods
lcall
xchg
insl
les
movsl
andb
adc
lods
sbb
sbb
ret
mov
fiaddl
orl
aam
dec
xor
cmp
enter
push
mov
and
in
or
adc
movsl
jne
sbb
aas
mov
iret
xchg
xor
push
fstpt
cs
js
jmp
loop
inc
sbb
mov
sti
dec
dec
test
ret
pushf
cld
testb
mov
dec
rol
push
cmpsl
push
xlat
fidivs
sub
add
and
cs
dec
jmp
iret
adc
cmp
out
popf
repnz
xor
dec
inc
cltd
xchg
xchg
stos
and
stc
jno
aam
andb
inc
stos
push
or
call
gs
push
adc
inc
iret
and
into
mov
je
insl
adc
cmp
pop
push
jb
cmpsb
jge
pop
movsl
nop
pop
sti
mov
test
xchg
sub
scas
sbb
jno
bound
mov
stos
and
ss
fidivs
inc
movsb
ret
or
testb
dec
fisubs
dec
and
jb
pop
mov
movsl
lods
into
mov
dec
push
inc
inc
aas
push
push
lcall
stos
ret
inc
xchg
cmp
and
xchg
push
pop
xor
stc
xor
dec
or
adc
lret
aad
adc
cmpsl
dec
add
mov
sub
in
jo
inc
loopne
pop
bswap
sbb
in
lcall
cmp
lock
add
adc
fiaddl
add
mov
and
sbb
adc
call
sbb
xor
test
pusha
adc
pause
and
xchg
cmpsl
sbb
rcrb
jp
or
add
add
jge
ficoml
inc
inc
hlt
scas
sbbl
mov
mov
mov
inc
sub
insl
dec
mov
lret
cmpsl
dec
inc
jl
ret
imul
and
or
pop
push
lods
cmp
test
fisubs
pop
enter
lcall
cmp
pop
int3
pop
pushf
mov
leave
push
jo
mull
xchg
xchg
cmp
subb
movsb
sbb
jle
adc
out
push
sahf
fsts
xchg
xchg
aaa
or
aam
cmp
jmp
xor
add
loope
out
jmp
and
mov
sub
xlat
icebp
dec
mov
mov
and
aas
cmp
jle
jmp
pop
xchg
cltd
out
fcomps
adc
pop
mov
mov
inc
inc
je
cmpsb
pop
adc
popa
decb
xchg
push
lcall
or
outsb
fstps
adc
adc
jle
mull
mov
sti
cmp
inc
inc
dec
mov
dec
add
xchg
sub
pushf
insb
cli
das
adc
cmpsb
in
aad
add
inc
mov
dec
rorb
adc
ss
mov
push
cmc
int
add
mov
movl
jae
xchg
jns
dec
jae
push
pop
mov
mov
pusha
push
dec
scas
push
aaa
xchg
movsb
nop
shll
pop
mov
push
sbb
test
jb
sbb
mov
xlat
movsl
shl
sbb
jb
mov
xor
xlat
mov
aad
push
faddl
xchg
cmc
jecxz
pop
sahf
push
fcomip
das
fildll
int
add
adc
or
das
das
stos
add
mov
mov
icebp
adc
cld
xchg
lock
mov
fcmovu
in
xor
lcall
xor
mov
mov
mov
pop
mov
sub
stc
in
outsb
fstpt
dec
lds
subb
loope
mov
mov
lret
mov
mov
cs
nop
mov
sar
dec
mov
mov
mov
push
mov
shrl
mov
jg
jmp
into
jmp
mov
dec
mulb
in
jmp
out
test
sub
push
sbb
cmp
jl
jns
and
clc
pop
jl
out
dec
and
ret
loope
sbb
andb
mov
mov
std
pop
mov
mov
mov
call
or
pop
adc
cmp
out
dec
or
and
shr
push
xor
and
mov
cwtl
imul
data16
xor
nop
sbb
xor
movl
scas
outsl
aaa
inc
push
ret
addr16
add
jns
shll
lock
in
pop
std
insl
idiv
pop
aas
call
out
incb
fidivrs
adc
mull
sahf
testl
cli
sbb
pusha
aaa
pusha
lahf
imul
in
es
or
cmp
or
in
xor
sti
aas
or
pop
sti
adc
jg
in
or
sbb
add
adc
repnz
adc
clc
fs
cmp
repz
xchg
jnp
jnp
sti
sub
jmp
push
jo
and
loopne
sar
addb
sbb
cld
mov
scas
mov
mov
mov
mov
mov
adc
xor
pop
frstor
inc
jp
add
mov
fwait
jg
mov
fsubr
leave
in
fucomp
fiadds
mov
fucomip
pop
in
clc
add
add
add
lock
pop
shl
lea
enter
sub
mov
shlb
in
icebp
add
adc
call
or
push
mov
mov
add
stc
aas
add
sub
pop
cld
sar
push
lock
pop
jge
add
sub
or
pusha
lock
mov
xlat
xor
shlb
cmp
mov
jmp
or
push
mov
pusha
jg
imul
add
add
stc
mov
iret
rorl
stc
rolb
lock
in
add
sbb
dec
add
add
aaa
addb
lahf
rolb
xor
cmc
jle
test
add
add
loope
testb
addb
add
xor
sbb
or
push
addb
pop
push
sub
sbb
loopne
jo
mov
add
sub
sbb
add
lock
cmp
add
sbb
or
jo
std
fdivr
add
mov
iret
mov
addr16
fadds
js
jb
orb
adc
out
mov
popa
jg
out
inc
mov
and
mov
or
add
add
arpl
daa
cmp
mov
adc
mov
lds
je
cld
cmp
xchg
add
mov
xlat
in
mov
rol
rcr
aaa
sub
pop
shlb
lcall
pusha
push
mov
stc
xchg
insl
or
fwait
mov
pop
sub
mov
xchg
pop
pop
rcl
sbb
loope
clc
push
cld
cmp
aam
sub
jne
sub
mov
cmp
xchg
and
pop
cli
sbb
pop
jp
out
adc
test
lret
daa
stc
shl
jle
inc
cmp
in
clc
mov
ret
cmp
inc
xor
iret
mov
pop
popf
xchg
and
pusha
pop
or
lahf
icebp
push
xchg
sar
ret
xor
inc
adc
fadd
xchg
call
cld
call
push
ljmp
cli
lahf
cmp
iret
cmc
and
aas
or
cld
cli
dec
js
push
jns
rorb
adc
or
and
cmc
add
push
std
sahf
dec
cli
loope
flds
jb
adc
xchg
mov
out
clc
pop
in
pop
imul
mov
jmp
pop
loop
das
fnstcw
dec
std
stos
enter
xchg
ds
and
sub
or
out
cmp
xchg
fdivrl
ficoms
sarl
in
cmc
loopne
mov
sti
mov
lods
jns
lock
bnd
pop
out
pop
cmp
lahf
addr16
jnp
jle
mov
add
push
inc
std
out
rolb
cmp
sti
fimuls
loopne
jecxz
into
iret
popf
aaa
clc
push
repnz
js
repz
std
push
out
cmp
lcall
cmp
andb
stc
movsb
jno
push
ds
pop
ficoms
ljmp
mov
fists
xchg
insb
rcl
movsl
icebp
dec
pop
popf
pop
jb
lret
das
orl
cmp
iret
jg
repz
insb
pop
push
adc
push
sbbb
shl
dec
mov
and
dec
fmull
bound
mov
test
lods
int3
or
dec
and
into
inc
dec
fnsave
cli
jne
and
dec
xor
push
inc
mov
mov
int
jbe
aaa
mov
jbe
ljmp
xchg
divb
xor
pop
pop
jb
pop
ja
or
int3
and
sbb
pop
jle
mov
clc
leave
sub
pop
add
push
js
mov
pop
idiv
loope
lods
lock
mov
cld
inc
push
cmc
adc
enter
mov
fwait
sub
add
or
call
aad
setbe
les
dec
mov
mov
aam
cmp
fiaddl
roll
sbb
les
jnp
sub
push
out
int
aam
shrb
mov
shlb
pop
into
stc
or
and
xchg
add
sub
pop
xchg
dec
mov
xorb
in
add
mov
fisttpl
out
pop
xor
sub
cwtl
lahf
bound
jmp
imul
mov
lcall
imul
mov
in
lcall
orl
repz
push
inc
dec
dec
cmc
jbe
and
movsb
push
xchg
sbb
inc
or
or
jl
add
xchg
jge
push
adc
mov
push
jae
test
pop
outsb
sbb
int
jle
test
and
scas
scas
or
mov
pop
mul
lea
pop
cmp
pop
sub
push
ret
sub
movsb
fnstcw
insb
lcall
lcall
lret
inc
aam
popa
ja
clc
repnz
movsb
adc
mov
je
mov
jne
jg
sbb
out
je
inc
ljmp
out
nop
pop
xor
xchg
mov
into
xchg
inc
push
pop
bound
dec
xchg
xor
add
icebp
fsubr
and
pop
and
hlt
clc
sbb
pop
insl
stos
pop
pusha
xor
and
jecxz
jno
shrb
jne
cmpsb
inc
je
xchg
pop
hlt
cli
mov
push
jbe
sti
rorl
subb
push
jns
data16
ret
nop
sub
rcrl
jecxz
data16
insl
dec
dec
cmp
jns
mov
adc
xor
fdivrs
mov
sbb
mov
or
cmp
push
mov
imul
sbb
dec
mov
push
loop
cmp
loopne
test
mov
out
cmp
add
mov
xor
xchg
loop
lret
cmp
jge
cmp
sub
int3
sbb
stos
rcr
inc
inc
orb
xchg
aad
ds
fcomps
into
std
push
shll
and
aad
pop
js
aam
cmpsb
dec
mov
ja
ss
int3
bound
xchg
jb
imul
jb
ljmp
insb
test
cli
ficomps
dec
shrb
fisubl
in
aad
mov
jl
add
pop
xchg
jl
je
cmp
out
pop
dec
stos
adc
jns
insb
jl
inc
mov
test
add
fbstp
pusha
ret
inc
mov
mov
ret
int
mov
xchg
je
jo
gs
or
or
sti
jne
inc
inc
scas
lret
add
rcrl
imul
xchg
out
lock
sbb
pop
jmp
ljmp
jnp
mov
mov
insl
or
andl
inc
and
mov
add
lds
mov
pop
mov
mov
movsl
fimull
mov
sub
xchg
das
pop
push
mov
pushf
mov
dec
jno
popf
dec
push
cmp
jge
cmc
iret
movsl
inc
scas
xchg
sbb
test
dec
hlt
imul
sub
mov
pop
adc
cmp
jle
jp
in
xchg
mov
push
lods
pusha
jbe
push
inc
jae
lret
lea
sub
cltd
fldenv
aam
or
ja
push
into
mov
sbb
inc
lcall
cmp
cmp
mov
call
rcrb
xchg
je
and
add
mov
movsb
xchg
dec
cmpsb
test
test
mov
xchg
aam
test
sahf
mov
ret
or
stc
inc
stos
int3
lahf
es
mov
testb
cmpb
test
ss
push
xchg
out
mov
test
cmp
movsb
jo
fs
mov
mov
icebp
pop
mov
aam
pop
jne
mov
dec
mov
in
jb
dec
enter
mov
mov
test
mov
sub
bound
jmp
mov
dec
loop
push
ja
daa
mov
scas
sbb
ljmp
jne
popa
stc
mov
add
gs
sti
gs
mov
push
dec
fidivrs
stos
test
loopne
loopne
arpl
fs
daa
idivl
xor
lret
add
push
sbb
mov
mov
lock
cmp
xlat
lret
hlt
push
mov
pushl
divps
enter
sbb
pop
push
mov
jecxz
jle
xor
movsl
push
and
mov
cmpsb
lahf
out
xchg
jnp
mov
mov
or
inc
jnp
xchg
xlat
dec
into
xor
dec
test
popf
mov
jge
xchg
ret
rclb
fisubs
and
fs
xchg
pop
xlat
bound
filds
xor
jecxz
or
pop
mov
xchg
mov
sbb
in
lds
lcall
lcall
inc
icebp
arpl
cmpl
jl
call
and
mov
stos
outsl
or
cli
push
aas
push
inc
daa
outsl
mov
stos
shll
and
adc
mov
stc
mov
adc
sub
inc
sbb
cmpsb
push
out
std
es
mov
push
fcoms
sets
jecxz
lea
jbe
fdivrs
mov
mov
cmp
push
jne
sbb
mov
stos
test
aam
lea
mov
xchg
fldl
int3
in
es
xchg
xor
je
lret
aaa
fcoml
adc
test
testl
jmp
divb
call
in
je
mov
das
ret
ret
push
cwtl
cmp
pop
pop
in
xchg
sahf
mov
xchg
gs
mov
push
pop
mov
sub
jne
lds
mov
sbb
sub
into
lret
lods
sub
sub
adc
pop
clc
orl
cltd
push
dec
out
push
sbb
mov
loop
xor
js
mov
and
in
ss
data16
jl
xlat
subb
xor
sbb
mov
sbb
cmpsl
lcall
fildl
mov
cmp
fstpl
aaa
xchg
ds
test
mov
mov
clc
jne
mov
pop
sbb
fwait
int3
adc
movsb
inc
or
pop
sub
mov
inc
fldt
in
imul
in
das
das
outsl
arpl
inc
mov
sbb
adc
out
dec
xor
mov
mov
or
pop
pop
or
ret
out
xchg
mov
test
loopne
cltd
das
mov
xchg
cmpsl
ljmp
dec
inc
push
out
test
sub
jp
jbe
aam
mov
jns
add
mov
pop
mov
das
and
arpl
imul
addr16
jb
arpl
or
cmp
pop
push
xlat
ss
leave
mov
xor
out
fidivs
ret
adc
test
cmpsb
lahf
cmpsl
sahf
mov
int3
xchg
or
dec
imul
enter
test
loopne
enter
scas
xchg
repz
roll
cmp
rcrb
and
shr
iret
outsl
insl
lret
mov
ljmp
xor
mov
imul
pop
dec
xor
nop
repz
jmp
jl
int3
call
out
sbb
ljmp
cmp
scas
pop
int3
call
rorl
test
push
nop
xor
fcomps
pop
adc
mov
psubb
cmp
jecxz
hlt
cmp
add
push
fnstcw
daa
popf
and
mov
mov
fcompl
out
lea
insb
lea
sbb
call
sbb
jecxz
outsb
rclb
cmp
lret
in
jbe
clc
xchg
xchg
sbb
ret
mov
adc
jno
xchg
sti
loop
mov
mov
cmp
xor
popa
or
mov
dec
dec
adc
inc
dec
push
jmp
aad
mov
sahf
push
xchg
jns
xor
fldz
push
jl
jl
into
mov
xor
ret
and
daa
cmpsl
push
push
pop
je
lcall
xlat
mov
shrb
vandps
sub
in
sbbb
in
test
xor
mov
adc
fmulp
mov
mov
adc
and
imulb
and
nop
push
adc
push
enter
cmc
cmpsb
push
es
dec
xor
sub
cmpsb
fwait
nop
xor
jnp
inc
leave
xlat
lahf
lcall
and
lods
cltd
inc
inc
push
mov
mov
dec
pop
enter
cmovge
out
popf
js
xor
xchg
mov
or
jns
xchg
and
pop
inc
or
ljmp
mov
shl
xchg
cmp
add
insl
pushf
jno
aam
pop
pop
mov
cld
mov
cmc
jno
and
and
pop
aaa
dec
dec
mov
add
sti
mov
enter
push
dec
movsl
aam
das
add
fwait
divl
cmp
fnsave
xor
sub
xor
add
or
add
adc
push
dec
push
dec
cmova
mov
in
cmp
and
and
mov
in
mov
out
stos
xchg
repz
jb
pop
loopne
mov
popa
lret
sbb
scas
mov
and
popf
stos
int
xchg
cwtl
sub
push
inc
mov
mov
aas
lods
sahf
movsb
mov
mov
int
iret
push
mov
lret
xor
and
push
aad
fadd
mov
fdivl
jnp
fisubrs
mov
xchg
mov
push
addl
test
jb
pop
jns
lock
xchg
xor
lcall
cli
xor
out
jb
or
adc
mov
adc
and
call
sti
add
pop
cwtl
popa
mov
cmpsb
rcl
insl
stos
jl
xchg
lret
xchg
stos
movsb
js
pop
ret
mov
clc
adcl
int3
pusha
enter
jl
fimuls
mov
addr16
cmpsl
jecxz
mov
lret
test
xchg
aaa
popa
fwait
lods
pop
gs
pushf
push
ja
into
jne
shrl
sub
in
mov
dec
jne
out
out
mov
outsb
xchg
arpl
jno
stos
xlat
push
xchg
mov
push
movsb
test
push
inc
mov
inc
shrl
inc
sbb
mov
fcmovb
popa
xchg
push
inc
movsb
lods
xchg
outsl
stos
loopne
jnp
testl
xchg
ja
lods
add
imul
jb
out
add
cwtl
ljmp
xor
addl
xchg
repz
dec
ret
movsb
fisttpl
dec
es
imul
aam
cmp
or
aam
xor
sti
test
mov
fldt
mov
mov
loop
sub
repnz
pushf
leave
cmp
mov
pushf
call
inc
ror
add
mov
imull
xchg
mov
xchg
adc
out
push
sub
or
lods
mov
cmp
adc
sbb
int
ja
mov
inc
into
mov
rcl
cmp
or
in
xor
outsb
push
add
pop
add
jnp
cs
and
cmc
cmpsb
push
popf
add
call
in
movsl
mov
lea
add
ss
into
nop
lret
movsb
nop
fisttpll
pop
sbb
test
test
js
rcr
jb
adc
insl
push
dec
lcall
mov
add
xor
and
mov
mov
insb
sbb
mov
sbbb
fisubl
arpl
ds
adc
leave
lds
sub
push
out
test
bound
inc
jbe
lret
mov
push
dec
dec
imul
pop
dec
mov
gs
ljmp
call
jne
lcall
in
outsl
lds
fdiv
pop
fstpt
xor
inc
je
jnp
out
lcall
lea
ret
js
mov
test
std
ds
lods
xchg
scas
out
imul
popl
dec
inc
ret
mov
jmp
pusha
mov
fs
push
push
lods
sbb
add
lods
arpl
sub
sbb
cmp
outsb
inc
sub
mov
and
iret
push
mov
in
aas
mov
inc
mov
loope
les
push
inc
mov
lret
fdivs
pop
lcall
sti
jle
rcll
pusha
push
js
add
clc
pop
aad
das
and
bound
sarl
outsb
push
jb
sub
lea
xchg
cli
add
dec
testb
push
popf
xchg
mov
sbb
mov
add
ret
aas
dec
mov
in
movsb
add
sub
pop
sub
das
ds
push
inc
xchg
in
aas
cs
mov
dec
dec
sub
push
dec
sub
jb
addl
inc
aas
pop
data16
push
repz
pop
insb
lcall
mov
outsl
inc
add
lds
fs
xchg
fidivrs
or
jmp
add
xlat
shl
xchg
jbe
mov
or
push
cmp
inc
pop
orb
ss
int
xor
xor
push
mov
jno
loope
ljmp
push
aad
testl
or
push
aaa
or
js
xchg
add
mov
repnz
xchg
xchg
push
xchg
xchg
stos
add
ss
add
sbb
mov
xchg
arpl
ficomps
fnstcw
jl
clc
cmpsb
pop
push
or
sbb
mov
xlat
push
push
shrl
fcmovb
clc
rcrl
mov
dec
mov
push
cmpsb
orl
mov
outsb
mov
pop
xchg
xor
lret
ret
jno
sub
dec
insb
xchg
sub
rol
stc
imul
jb
and
std
cmp
call
clc
and
fadds
lea
cltd
mov
into
mov
lcall
mov
inc
adc
pop
adc
xchg
and
sbb
push
push
repnz
mov
lea
sahf
dec
lods
inc
fidivrl
repz
nop
dec
add
xchg
loope
adc
pop
and
and
sub
in
cmp
ret
sahf
sub
lret
repnz
xchg
outsb
pop
mov
or
sub
test
inc
int3
inc
test
inc
aaa
stc
mov
push
sub
fwait
mov
xchg
push
xor
cmp
int
inc
sbb
test
xchg
out
push
test
inc
mov
repnz
popa
jno
dec
jb
test
dec
imul
sahf
out
dec
int
cmp
mov
adc
pop
push
add
insl
xlat
sub
add
test
xchg
xchg
sub
ds
mov
adc
lds
jle
sbb
sub
lret
mov
popa
adc
push
xor
ret
test
cmp
jp
xchg
scas
jp
adc
jo
sub
shlb
rorb
jmp
mov
stc
add
jmp
xor
xor
es
inc
sbb
in
jle
out
and
rolb
mov
pop
cmpsb
inc
dec
dec
test
cmp
lret
mov
sbb
mov
mov
pop
popf
je
cmp
repnz
mov
add
shl
add
cmc
decb
repnz
jbe
mov
xor
and
mov
lret
js
sbb
shl
js
jbe
pop
imul
cwtl
mov
fnstcw
clc
inc
pop
jae
xchg
adc
push
xor
orl
adc
mov
test
cmp
cmp
xchg
push
cmp
outsl
mov
movsb
adc
xchg
inc
dec
xor
mov
addr16
sub
push
dec
push
cld
mov
push
or
xchg
fisttpl
and
cmpsb
cs
pop
out
data16
xor
lahf
xor
mov
jne
and
jae
sarb
lret
pop
fldt
cmp
mov
imul
jmp
icebp
mov
popf
dec
sbb
aam
aaa
xchg
adc
push
stc
and
mov
mov
jp
jb
xchg
push
sbb
jecxz
addr16
aas
into
inc
or
mov
shll
or
rcrl
daa
movsl
aas
push
sub
adcb
mov
loope
pusha
subb
movsb
out
sarb
adc
fdivrl
stc
faddp
inc
repz
inc
inc
mov
mov
sub
mov
mov
and
scas
mov
sub
cmp
push
rol
mov
int
mov
mov
aad
out
sub
mov
push
pop
sbb
jle
mov
mov
test
aaa
sub
shlb
jl
xor
cmp
js
ljmp
mov
sub
pushf
fsts
lds
mov
or
andl
pop
cmp
ret
push
fistpll
divb
inc
in
mov
pop
pop
sbb
cmp
in
or
pop
lcall
sbb
dec
pop
xchg
mov
xchg
cmp
out
loope
add
push
outsb
gs
xchg
xchg
mov
call
cmp
mov
xchg
pop
xor
xchg
nop
fsqrt
aaa
ficoml
jecxz
sub
and
jge
ss
xchg
fidivrs
mov
sub
pop
outsl
pop
sbb
rcrl
fsubrs
mov
xchg
push
insb
and
and
jbe
pusha
push
inc
out
dec
adc
adc
int3
jl
shl
sti
aas
add
fcomps
gs
jle
mov
scas
insl
jns
dec
mov
repnz
mov
roll
testl
iret
aam
jg
div
sbb
xchg
pop
repnz
loop
fldl
clc
insl
sti
jnp
rcrb
es
jge
push
xor
jbe
push
sbb
mov
xchg
repz
pop
jp
mov
adc
dec
or
jl
dec
cmp
ret
jge
ss
pop
sbb
sub
rorl
out
adc
lret
cmpsl
cmpsb
and
roll
xchg
lahf
sbb
lods
nop
jbe
push
and
arpl
inc
inc
popf
mov
in
adc
loope
sahf
daa
add
ss
lcall
cmpsl
notl
mov
jp
mov
and
cmpsb
sbb
stc
lret
repnz
mov
add
push
std
scas
btr
fdivp
jns
repz
cmpl
dec
mov
dec
test
pop
fstpt
mov
mov
jl
daa
inc
sahf
jo
mov
sub
fldt
jnp
adc
mov
push
nop
cmc
jl
mov
mov
gs
ja
mov
ja
pop
dec
repz
adc
fldl2t
subl
jae
in
jnp
jmp
sub
add
lock
outsl
cmp
cmp
adc
or
pop
inc
std
cmp
xchg
cmpsl
iret
lock
adcb
mov
pushf
mov
cmp
fildl
es
pushf
sub
mov
aam
xchg
scas
mov
ds
fwait
dec
sub
in
ret
test
das
xchg
out
adc
xchg
popa
fmul
ds
push
jne
and
mov
pop
es
inc
push
xchg
pushf
shl
lods
and
test
jl
add
pop
inc
sahf
push
push
xchg
lods
mov
xchg
dec
mov
sub
sub
in
jecxz
and
xchg
or
push
xchg
add
mov
dec
imul
pushf
jb
push
mov
pop
scas
aas
insl
dec
es
pop
popa
push
cmp
mov
aam
mov
roll
mov
and
mov
cmp
cmp
and
out
gs
int3
sub
dec
lock
push
adc
and
mov
hlt
lods
push
jmp
stos
jae
lds
int3
push
jns
data16
repnz
sbbl
xchg
decb
ret
jl
dec
mov
dec
scas
fbstp
dec
leave
inc
nop
xchg
in
test
xchg
nop
jbe
lods
jge
add
stos
xor
icebp
push
lock
xor
jnp
aas
lahf
popa
mov
sbb
int
pop
sub
jns
cmpsb
xchg
loope
addr16
loopne
dec
push
cmp
out
and
stc
pop
arpl
cli
pop
sub
popa
sbb
push
insb
aad
into
cmp
leave
push
adc
jo
sub
icebp
dec
cmpsl
mov
in
push
xchg
insb
jns
or
inc
in
stos
test
movsb
and
push
mov
shr
add
stos
cs
jne
adc
pop
cmp
sbb
sbb
sbb
aas
mov
call
fisttpll
fwait
sbb
cmp
repz
ret
dec
mov
xor
jmp
hlt
mov
inc
ret
inc
cmp
jmp
insb
imul
cmp
xchg
dec
push
loope
fsave
adc
imul
in
jae
sub
add
xchg
mov
filds
test
and
sahf
ficomps
lea
fcompl
inc
sbb
jg,pn
jnp
inc
xchg
jp
jb
lea
mov
data16
std
in
out
and
repz
popf
dec
xchg
sub
jmp
in
stos
adc
fst
or
cmp
cltd
mov
das
jge
mov
sbb
inc
xchg
or
cmp
dec
adcb
mov
sub
or
jno
mov
xor
call
outsb
loop
jg
and
adc
aaa
xor
push
xchg
jnp
int
sbb
xor
mulb
int3
mov
mov
add
or
cmpsb
fisubrl
mov
lods
jns
mov
loopne
xchg
xor
bound
push
stc
mov
jmp
cmp
ret
or
cs
xchg
xchg
add
push
cmpsb
sub
xor
clc
les
cltd
pusha
xchg
mov
mov
push
mov
cs
outsb
sub
lock
insb
cmpl
mov
hlt
aas
scas
push
jmp
rcrl
sub
lcall
push
push
movsb
out
xor
lcall
push
adc
or
lcall
push
add
push
adc
pop
dec
stc
and
inc
lock
fidivl
xor
pushf
nop
sub
fwait
and
fxam
dec
cltd
fwait
pop
aas
dec
cltd
mov
int3
mov
cmovae
xor
hlt
jns
imul
arpl
out
and
mov
fisttps
fists
inc
jo
out
das
push
mov
cltd
lahf
andb
js
xor
cmpsb
add
sub
lahf
test
mov
dec
je
pop
inc
sbb
push
xor
shll
int3
cmp
rclb
pop
jb
pop
sub
gs
and
sub
daa
adc
xchg
shrb
xor
cmp
sbb
push
notb
outsl
inc
fisubrl
cs
ret
fcoml
fsubl
inc
adc
sub
jb
leave
sub
cmpsb
mov
popf
adc
test
fcoml
fwait
jle
ret
jg
movsl
jo
test
mov
jecxz
xchg
xchg
pop
pop
push
test
fsin
cli
inc
mov
stos
rorl
mov
hlt
lcall
ss
fcmovnbe
pusha
lock
in
mov
cld
xorl
pop
je
dec
xor
or
mov
test
add
clc
adc
mov
movsb
mov
cmpsb
push
int
dec
jnp
inc
jge
adc
les
xchg
test
pop
sbb
push
js
inc
in
popf
sti
int
xchg
push
out
mov
in
int3
lods
into
mov
xchg
pop
jge
ja
bound
cli
fcomps
ss
ljmp
rcl
daa
scas
pop
lret
stos
xor
xchg
lds
loop
mov
dec
cmc
xchg
js
jo
std
add
repz
lret
cs
mov
leave
scas
xchg
popa
or
jae
sub
aad
xchg
mov
lea
lcall
aas
mov
bound
or
mov
in
icebp
pop
inc
mov
aas
mov
mov
sti
call
or
insb
jl
je
jmp
stos
clc
cmp
xor
push
std
mov
xlat
scas
ja
orl
xchg
or
mov
inc
adc
push
push
xchg
or
cmp
inc
xchg
or
or
ret
cmpsl
jmp
iret
lret
sbb
loopne
mov
lret
je
lcall
and
fcmovu
lds
mov
loope
ss
mov
jge
fsts
stos
mov
fcoml
inc
lock
ljmp
dec
test
ja
mov
shlb
call
hlt
xor
cmp
push
enter
std
rclb
test
dec
push
fadd
aam
dec
sbbb
mov
movsl
xchg
dec
jecxz
and
pop
lcall
popf
aam
cltd
adc
pop
push
sbb
scas
int
cs
scas
mov
xor
sbb
fidivrs
mov
pushf
shr
mov
inc
test
push
test
es
inc
fildl
xchg
xor
dec
fisubrs
mov
shlb
add
push
lret
add
shll
repz
sbb
insl
mov
xor
cmp
negl
enter
xor
movsl
in
ds
jb
js
js
decl
mov
stos
fs
or
inc
xlat
jnp
or
or
iret
mov
lcall
mov
push
je
sbb
int
sub
mov
pop
scas
xchg
sbb
sub
cmp
xchg
xchg
push
mov
shl
xchg
mov
mov
pop
add
xor
push
ss
and
mov
jb
mov
out
jo
add
add
mov
mov
inc
jl
inc
lret
rcrb
push
xchg
dec
mov
lds
dec
out
test
hlt
js
sub
inc
mov
outsl
je
dec
js
mov
bound
pop
mov
pushf
pop
mov
pop
mov
clc
pop
adc
cmp
inc
inc
sub
test
stos
lock
cld
mov
push
add
push
xchg
pop
push
adc
andl
jnp
push
repz
pop
xchg
cmp
and
not
cmp
adc
mov
dec
icebp
scas
scas
dec
jl
adc
push
ret
int3
cmpl
repnz
jecxz
or
xor
inc
cmp
lcall
xchg
adc
fwait
mov
insl
and
add
sbb
dec
sbb
mov
adc
mov
lea
dec
xchg
mov
or
add
cld
in
cli
rorb
push
add
jg
and
jae
mov
int
dec
sbb
fs
aad
iret
jp
xchg
repz
test
js
jle
mov
push
xor
shlb
rcll
lock
loope
jmp
dec
inc
mov
cld
mov
std
lret
filds
adc
outsb
rol
push
imul
ret
testl
test
nop
in
xchg
out
mov
xchg
jne
sub
mov
pop
imul
inc
es
insl
imul
push
dec
dec
cmpsb
xchg
cmp
aad
jnp
popf
adc
adc
mov
loope
rcrl
imul
sahf
outsl
push
mov
or
movsl
cmpsb
sub
sub
sbb
out
xchg
repnz
push
arpl
sub
loopne,pn
xchg
jae
add
stos
popf
jg
js
push
cli
insl
push
nop
push
test
fildll
xchg
sub
or
stos
push
pushf
cld
imul
loope
add
xor
insl
xchg
add
sub
lret
ja
fnstsw
in
mov
mov
movb
cmpsl
lods
or
add
cld
push
fs
in
movsl
jno
sahf
adc
roll
mov
sbb
test
call
inc
and
and
leave
test
loop
dec
stos
cmpsb
xlat
sbb
adcl
jb
test
loopne
mov
test
adc
fcomi
or
rorb
jmp
sahf
xor
mov
loop
xor
jns
sub
and
fucom
pushf
pop
jl
inc
pop
xor
add
or
data16
lock
jb
movsl
aam
mov
fimull
ja
cmp
and
sbb
imul
outsl
into
cmpsl
fistl
push
inc
daa
pop
jge
popf
jecxz
ficoml
mov
mov
mov
adc
or
push
mov
cmp
pop
xlat
add
cmp
repz
and
dec
addr16
inc
out
pop
mov
daa
addr16
inc
test
lock
mov
enter
mov
pop
daa
les
addr16
pop
enter
sbb
loope
cmpsl
fcomps
xor
rclb
pushf
ror
sub
xor
pop
or
es
jbe
sub
ja
rolb
xor
cld
mov
cmpsl
dec
bound
push
sbb
cmp
pop
test
adc
call
cmp
jae
unpcklps
repz
add
mov
mov
push
ret
icebp
aam
cmp
xor
je
shrb
jmp
shrl
inc
data16
xor
push
popf
jae
xchg
loope
or
push
adc
lods
xor
mov
xchg
xchg
cmp
cltd
xchg
das
xor
fs
fbstp
imul
or
or
lcall
sub
pop
sub
leave
movsb
jecxz
cmpsl
and
push
sbb
dec
aaa
mov
das
adc
in
lea
jge
sub
fildl
or
jg
jge
ficoml
jecxz
push
dec
fbstp
mov
outsl
rcll
test
icebp
mov
jbe
mov
add
notb
rol
cmc
iret
push
mov
push
sbb
xor
nop
inc
ljmp
inc
les
xor
int
jecxz
pop
mov
push
pop
fisubrs
leave
sahf
dec
into
cmp
mov
mov
adc
cwtl
or
movsb
out
sbb
loope
cmpsl
push
adc
sbb
mov
enter
pop
push
jbe
mov
call
js
repz
push
mov
mov
dec
cmpsb
test
xor
push
add
into
outsb
inc
adc
rclb
js
push
xchg
sbb
sbb
in
pop
rorb
mov
xlat
pop
out
jg
sub
inc
jnp
push
mov
pop
pop
inc
add
adcb
sbb
insl
mov
push
dec
mov
push
push
or
adc
adc
cmc
lock
jne
fidivl
and
inc
addl
xchg
mov
mov
add
movsb
push
mov
sbb
jae
fcmovnb
dec
cli
pop
dec
in
pop
jns
mov
lret
imul
push
movl
cmp
mov
in
cmp
sbb
ljmp
lcall
inc
scas
das
sbb
xor
jns
popa
xchg
inc
xor
and
ret
xlat
inc
lock
and
fmuls
test
cld
leave
icebp
roll
addr16
nop
mov
inc
ret
test
mov
xor
fsub
mov
repz
xchg
sarb
inc
popf
sbb
mov
mov
ja
sahf
cmp
shrb
mov
into
loop
mov
fdiv
push
sbb
inc
aas
out
movsb
mov
and
cmp
adc
mov
test
inc
lds
mov
xor
shll
bound
and
cmp
mov
insl
add
aad
xchg
and
ljmp
dec
fstpl
dec
arpl
adc
iret
lock
call
sahf
popf
pop
add
mov
sub
fs
les
ljmp
rcrl
fbstp
dec
movsb
sbb
cltd
push
add
push
jbe
shl
sub
cmp
and
fdivrl
xor
and
jo,pn
insb
xorb
lds
test
aaa
xor
test
ret
sub
mov
jnp
iret
outsb
loopne
mov
ficoms
ss
xchg
pusha
xor
arpl
adc
imul
pop
or
fistps
fisubl
mov
jp
mov
ja
orl
or
jecxz
adc
and
xchg
push
sbb
mov
enter
dec
incb
les
xchg
add
cmpsl
xor
jle
cmpsl
lods
pop
jae
adc
mov
inc
stos
shlb
pusha
repnz
push
and
push
test
push
ret
lea
popa
xor
pop
dec
test
xor
jbe
add
addr16
and
fstp
loopne
in
add
fstp
cmpsb
cmp
addl
mov
pop
xchg
je
fcoms
rcrb
or
xor
popf
in
out
mov
mov
pminub
int
cmp
jl
xor
push
cmp
xchg
lret
sub
sub
mov
dec
push
push
push
pushf
std
mov
fwait
movsb
lcall
fs
cmp
inc
nop
mov
cmpsb
das
mov
jo
aaa
inc
mov
dec
leave
scas
cmp
lods
je
sarb
mov
xor
adc
mov
outsb
jmp
push
fldenv
insl
and
inc
lret
mov
mov
jl
dec
cmp
aam
dec
dec
jnp
outsl
cmp
pop
notl
insl
loope
orb
sti
cmp
mov
pop
jo
stc
rolb
sar
and
mov
test
adc
adc
stc
push
inc
loopne
inc
pop
in
out
std
sub
lcall
adc
push
les
mov
fstpt
sub
adc
push
fsubrl
jne
and
add
cmp
cmp
aaa
adc
xor
jge
mov
sub
fisubl
mov
xchg
cld
shll
sub
pop
out
add
or
dec
mov
mov
jbe
push
jae
mov
in
aas
dec
cmpb
ljmp
inc
xor
push
add
jb
lds
test
add
inc
out
xorl
pushf
push
test
and
jp
xor
fidivs
or
jne
aad
or
bound
stos
pop
lret
fs
pushf
addr16
ficomps
sbbb
jo
mov
pop
jae
lret
jns
add
inc
or
pop
setg
sub
adc
adc
xchg
jecxz
sbb
cmp
mulb
xchg
out
lods
in
xchg
mov
cs
dec
ret
adc
xchg
fs
cmpsb
or
push
mov
imul
sbb
push
adc
out
xchg
loop
jo
mov
jae
ss
fsub
adc
test
sahf
fbld
clc
call
test
in
imull
mov
aam
outsb
rorl
in
adc
popa
lods
pop
jno
mov
outsl
add
in
call
sbb
outsb
rolb
dec
fstps
clc
rcll
adc
pop
ljmp
jle
push
cmp
sub
sub
sbb
nop
mov
push
cmp
jle
push
test
and
lea
outsl
dec
nop
lcall
lret
mov
shrl
xchg
iret
mov
lds
loope
push
loop
adcb
insb
in
aas
ret
sahf
or
dec
ficomps
cltd
insb
push
dec
jge
subl
nop
mov
cmp
xchg
mov
fsubl
or
cmovae
add
test
sub
into
inc
nop
addr16
lds
loop
push
sub
in
push
sub
sbb
lods
fldl
xlat
subb
xor
dec
popf
xchg
stos
aaa
xor
lods
sbb
push
sub
inc
das
dec
cli
lods
sbbl
add
xor
notl
dec
fimull
xor
stos
loop
add
xchg
cmp
and
fcmovnb
aad
pop
dec
mov
xchg
xor
xchg
xor
xchg
inc
pop
mov
jne
mov
dec
xchg
movsl
hlt
in
inc
add
sar
push
sbb
pop
xchg
std
xor
inc
pop
pop
bound
cmp
js
add
mov
jge
repz
aam
pop
inc
stos
mov
test
cwtl
aaa
sbb
nop
mov
xchg
push
adc
mov
daa
dec
mov
imul
les
data16
inc
xchg
rorl
ss
fldln2
call
out
sti
cltd
lahf
loop
cmp
call
loopne
and
popf
pop
jecxz
jge
push
daa
pop
sbb
pusha
jp
out
and
jnp
filds
xchg
mov
lcall
jne
jle
loop
aam
adc
mov
lods
pushf
cltd
jae
jmp
addb
test
mov
imul
cmp
imul
loope
inc
rcr
insl
icebp
addb
xor
dec
xchg
mov
stos
lods
jmp
repz
das
sub
sbb
mov
push
cmp
loope
es
int
fucomp
scas
dec
sbb
add
adc
gs
in
cmc
mov
stos
sbb
mov
rcr
pop
pop
or
ja,pt
subb
sub
mov
bound
lret
cmp
adc
divl
mov
popa
pusha
divl
jecxz
xor
push
xchg
call
sbb
push
or
push
loopne
loopne
push
pop
dec
mov
cmp
pop
int
insb
xlat
mov
test
int
jge
ds
sub
push
rcrb
mov
mov
add
mov
test
inc
add
mov
xchg
popf
xor
add
xchg
cli
sar
inc
pop
pop
out
movsb
outsl
push
adc
pop
ret
adc
out
xor
in
add
sbb
pop
test
mov
sbb
imul
scas
jl
or
xchg
push
rcl
iret
push
fwait
mov
sbb
decb
add
mov
ret
in
cld
sbb
aaa
or
cs
pop
jbe
add
sub
xchg
mov
in
mov
sbbl
clc
stos
popa
cmp
jns
call
shll
or
movsl
out
xlat
and
jecxz
jbe
add
or
lea
xor
add
lea
daa
jns
pop
push
adc
cmpsb
xchg
xor
jl
ljmp
or
psrld
pop
inc
pop
sbb
jmp
pop
inc
cmc
dec
in
fdivrs
popf
adc
push
dec
push
mov
push
ret
mov
cltd
inc
cmpsb
or
pusha
ret
sbb
ficoms
outsl
mov
andl
das
jne
inc
scas
cltd
addr16
mov
arpl
fbld
pushf
mov
lods
outsl
dec
lock
paddsw
je
js
ret
and
arpl
and
cli
and
and
jae
sub
and
sbb
mov
inc
and
dec
test
mov
and
mov
sbb
cmp
push
add
xchg
popa
aas
mov
cmp
xchg
pop
push
dec
xlat
push
xchg
std
jo
sbb
aas
out
xchg
mov
xchg
out
push
out
repnz
push
add
xchg
mov
nop
xchg
popf
pop
or
jge
push
mov
lds
jo
insb
push
and
adc
push
sbb
neg
hlt
adc
xor
rclb
iret
cmp
fidivrl
mov
xchg
inc
adc
or
mov
fnstenv
push
out
out
es
jl
rolb
cs
leave
dec
das
sarb
jnp
mov
or
loopne
push
imul
and
sti
into
gs
and
dec
push
call
and
jne
ffreep
push
bound
jae
add
sbb
popf
xchg
cs
sub
testb
in
xchg
xchg
inc
rclb
cli
inc
or
pop
push
mov
inc
lds
fdivr
jns
out
sbb
add
pop
and
test
cmc
scas
cld
popf
push
jnp
in
pushl
push
imul
and
repnz
pop
icebp
jg
cmp
rclb
sbb
cmp
or
xchg
fidivrs
fistl
inc
mov
jnp
jmp
repnz
ljmp
cli
pop
bound
jbe
sub
or
pop
or
sub
xchg
xchg
insl
sub
jmp
sti
std
rol
fisubrl
fwait
popf
dec
cmp
stc
or
lret
and
fbld
arpl
iret
leave
test
adc
push
sarb
mov
push
rcrl
xchg
pop
je
add
popl
jp
jb
sbb
lret
sarl
xchg
insl
iret
sbb
xor
inc
cmp
push
mov
adc
xor
shl
and
fisubrs
dec
aam
xchg
test
or
dec
adc
lea
lods
jbe
and
lods
cltd
mov
popf
mov
pop
mov
out
and
ret
test
repnz
cmp
and
cmp
iret
in
push
mov
fisubl
ret
movsb
divb
fwait
in
mov
sbb
imul
xor
int
jbe
dec
bound
es
shll
inc
das
adc
loop
enter
sbb
push
test
popa
cld
adc
mov
aas
dec
les
cmp
clc
mov
mov
pop
xchg
cmp
jmp
rol
aaa
mov
fisubl
dec
cwtl
jl
dec
dec
sbb
stos
sub
pusha
mov
fidivrl
test
mov
adc
mov
in
push
scas
sbb
mov
jo
push
scas
add
and
imul
rcrb
mov
fldt
call
cmpb
idivb
test
xor
mov
mov
inc
mov
ss
repz
mov
xor
out
imul
mov
in
or
add
push
pop
ss
cmpsl
out
call
gs
xor
mov
jle
sub
xchg
cltd
xor
std
in
mov
jno
mov
cmp
loop
fsub
mov
pop
mov
xchg
push
or
inc
dec
xchg
movsl
mov
imul
sub
xchg
stos
sbb
add
and
imul
lahf
fsubl
cltd
insb
xor
rorb
hlt
inc
inc
mov
adc
fimuls
adc
adc
jns
pop
inc
hlt
xchg
jl
mov
cwtl
js
daa
push
add
mov
sbb
mov
inc
xor
pop
fisttpll
mov
inc
or
in
dec
sub
mov
les
test
gs
cld
cmp
movsl
aad
test
cmp
pushf
mov
add
push
insb
xchg
cwtl
je,pt
adc
clc
lahf
out
ss
lock
ret
arpl
sbb
inc
ret
xchg
js
jmp
fs
mov
sbb
or
fsubs
insl
mov
cmp
shr
movsb
sahf
aas
das
mov
iret
mov
stos
sbb
std
jge
jecxz
adc
scas
jecxz
cmp
mov
pop
pop
inc
aaa
pop
sahf
cmp
lds
mov
int3
imul
int
push
add
cmc
iret
xchg
inc
in
adc
repz
mov
jne
iret
movsb
call
test
fnstenv
iret
add
mov
cmp
cld
mov
rcrb
scas
rcl
adc
or
not
inc
call
cld
xor
pop
cmp
mov
pop
ds
repz
pop
jo
cmpsl
enter
xlat
filds
daa
cmp
add
push
repz
push
pop
xchg
mov
mov
pop
cmp
pop
std
fdivrl
sbb
dec
and
test
jmp
mov
ss
adc
push
clc
and
inc
mov
jmp
sbb
add
push
cmp
cwtl
notb
bound
push
mov
repnz
jo
les
test
push
iret
pushf
mov
jb
sbb
cmp
cmp
lock
xor
loop
mov
xlat
or
mov
hlt
sub
sub
into
jno
push
sar
stos
sub
mov
mov
stc
inc
iret
cmp
inc
jae
stos
mov
xchg
sub
lcall
notl
in
decb
pop
subl
push
cmp
xorl
jle
gs
pop
lcall
mov
jle
mov
ret
push
fsubrs
cmp
jle
mov
sbb
pusha
ja
pcmpgtb
add
das
pop
add
pop
add
or
pop
inc
pop
mov
movl
ja
scas
aas
sti
pop
clc
aas
adc
insl
lret
mov
xchg
sahf
lret
in
scas
jo
inc
adc
xchg
icebp
add
xor
adc
adc
mov
pop
out
popa
add
ds
int
adc
push
or
cld
add
or
lds
lret
setne
mov
mov
in
imul
inc
xor
ljmp
mov
nop
lods
push
sbb
lret
pop
jae
push
push
jg
movsb
seta
mov
ret
xchg
jns
leave
dec
cmp
dec
xchg
and
jmp
dec
inc
inc
pop
push
cmp
cmpsl
mov
mov
adc
jmp
xor
repnz
cmpsb
xchg
addr16
add
adc
loop
push
fldl
add
bound
pop
xlat
jae
lea
sbb
testb
cmp
fists
push
push
pop
lds
pop
xchg
jecxz
mov
out
lcall
test
xchg
jg
imul
hlt
jo
pop
scas
inc
leave
cs
add
cmp
test
ljmp
sbbl
cmc
das
or
jne
dec
push
ss
jbe
lret
inc
lock
xor
in
ror
pop
gs
fbstp
adc
pop
xchg
jo
push
jl
mov
mov
mov
lea
test
pop
pop
ja
xlat
dec
jne
push
cmp
das
fs
push
divb
out
or
jg
cmpsb
jbe
idivl
dec
cmp
and
jmp
xor
jecxz
jge
pop
sub
pop
mov
jmp
fsubr
scas
jns
sarl
add
lods
lret
daa
int
pop
mov
sbb
scas
je
cmc
faddl
std
lret
lret
and
pop
xchg
push
popa
sbb
push
or
loopne
sub
lods
cltd
pop
sbb
sbb
adc
and
adc
pop
jmp
testb
dec
push
mov
jmp
stos
cmp
mov
or
int3
and
pop
pop
shll
sbb
insl
jns
sub
fstpt
lods
push
dec
xchg
ss
push
gs
jbe
jle
adc
pushf
add
xchg
enter
std
jp
mov
push
xchg
mov
xor
jge
adc
imull
ficompl
sub
xchg
sub
dec
nop
xor
adc
inc
pop
leave
pushf
or
inc
jne
mov
push
lods
mov
ja
sbb
rcrl
mov
inc
or
je
fidivs
jnp
mov
sar
fadds
jecxz
cmp
lods
sub
inc
dec
sbb
subb
pop
shrl
or
movsb
jb
les
stc
in
and
jmp
stos
pusha
lahf
loopne
jbe
cmp
negl
popf
mov
clc
xor
xor
cmp
xchg
cmpsb
cld
pusha
sbb
jmp
sub
and
inc
int3
xor
and
push
xchg
jle
ja
pop
loopne
cmp
sub
mov
mov
pop
mov
jg
sub
lock
jnp
jb
popa
cltd
sbb
push
cmp
dec
repnz
pushf
adc
add
testl
pop
jecxz
inc
sbb
add
xchg
add
push
cmp
jb
orb
mov
insb
or
sbb
js
std
andb
inc
mov
pop
fcomip
cld
cmp
clc
add
into
inc
movsl
mov
gs
mov
int
jle
mov
bound
xor
sub
xor
xchg
shll
sub
cs
sbb
jecxz
shl
add
pop
testl
inc
cltd
jns
push
dec
xchg
int
pop
aaa
out
pop
sub
cmpsl
mov
cltd
xchg
shlb
std
lea
stos
insb
jae
push
inc
adc
inc
cmpsb
arpl
nop
mov
xchg
sub
arpl
mov
rcl
es
sub
in
mov
out
inc
enter
lods
fisttps
pop
lret
loope
aaa
cld
ljmp
lds
repnz
sub
shlb
cmp
das
xor
adc
jnp
ret
int3
or
mov
adc
mov
movb
outsl
dec
pop
lcall
call
push
cmpsb
push
movsl
jne
lret
dec
jg
fcmovnbe
das
ds
scas
gs
movsb
enter
mov
bound
adc
and
dec
iret
cltd
jl
jg
jg
outsb
adc
pop
pop
sbb
cmp
and
jns
cltd
push
adc
cmpsb
ror
push
cmp
ss
sub
lds
mov
jle
or
outsb
cmc
aaa
sub
pushf
shlb
data16
sub
mov
dec
xchg
jne
xchg
sti
aas
pop
inc
xor
ret
adc
scas
jp
out
mov
xor
xchg
xlat
pop
in
inc
repz
fbld
mov
mov
adc
mov
mov
lret
in
mov
les
mov
fidivs
orl
outsl
mov
xor
add
sub
popf
in
jecxz
enter
psubw
je
imul
xchg
loopne
iret
pop
pop
xchg
cmp
imul
dec
mov
aaa
les
lock
mov
les
xor
mov
out
dec
fldt
mov
adc
or
sbb
lds
inc
dec
stc
mov
addr16
adc
mov
mov
lret
jp
jne
fs
jecxz
cmpsb
lea
inc
scas
adc
stos
inc
in
cmpsb
icebp
mov
mov
jo
jne
into
xchg
test
jo
aam
popa
test
and
xchg
adc
sti
cmpsb
lods
and
and
sbb
ret
ret
inc
mov
daa
jecxz
jle
push
pop
shlb
xor
jnp
sbb
dec
dec
sub
ffreep
adc
mov
aad
sbb
cmpsb
cmpsb
aas
dec
cld
inc
lcall
aad
popf
mov
pop
mov
mov
sbb
adc
int
mov
mov
jge
out
fnstsw
xchg
dec
mov
sbb
inc
loopne
pop
test
push
sbb
cmc
pop
aaa
fildl
jnp
lods
stos
nop
ret
gs
pop
sbb
and
push
adc
decl
stc
xchg
movsl
and
xchg
lods
mov
xorl
push
ret
jno
pusha
insb
sub
mov
lret
and
mov
fidivrl
icebp
out
aam
pop
scas
lods
pop
lea
and
add
dec
es
inc
cmp
ss
pop
or
mov
fsubl
imul
jl
arpl
pushf
and
fsubp
xlat
mov
push
mov
rorb
repnz
xchg
test
jmp
stc
jl
adc
lahf
gs
cmp
push
xor
rclb
test
dec
rolb
std
cmp
scas
lret
call
add
cmpsl
in
pusha
inc
xor
pop
in
jl
iret
jecxz
push
add
das
fcomp
cmpsl
ret
sub
push
sbb
fwait
std
subl
lcall
xchg
adc
xchg
lea
scas
dec
inc
mov
sub
dec
mov
jmp
mov
or
or
sbb
xor
inc
jp
ljmp
insl
push
jp
out
xor
jecxz
outsb
cs
dec
sarb
cmp
in
leave
adc
jnp
lds
daa
int3
sub
jecxz
mov
pop
stc
add
test
clc
mov
lods
or
test
pop
hlt
imul
push
and
data16
adc
ret
mov
push
cltd
clc
mov
out
push
cmp
jb
rorl
jno
fmull
loopne
adc
cltd
inc
mov
ja
pop
dec
out
pop
mov
in
jmp
sub
jle,pt
push
sbb
mov
adc
mov
mov
inc
outsl
andb
fiadds
sbb
mov
pop
jne
lret
les
and
fcomps
lcall
dec
outsl
aad
cwtl
insl
outsl
in
mov
jns
loope
scas
cmp
push
and
and
out
jle
lods
fs
mov
cmp
fldenv
mov
incl
pushf
daa
mov
jae
dec
cltd
pop
stos
es
mov
loopne
gs
test
inc
and
mov
adc
dec
adc
ljmp
lret
mov
clc
les
sbb
cmpl
mov
imulb
jnp
xchg
lahf
ljmp
push
push
imul
iret
or
pop
and
imul
mov
add
sub
pop
aas
pop
jb
cwtl
cmp
xchg
sub
or
mov
push
mov
xor
and
cmp
adc
or
add
xchg
pop
inc
aad
pop
or
cwtl
cmp
or
movsb
lahf
mov
pop
and
or
ret
fidivl
pop
mov
jnp
dec
pop
loopne
pop
mov
pop
add
subb
mov
mov
and
push
push
fcmovne
push
or
andl
pop
daa
bnd
xchg
pop
mull
push
jle
push
and
mov
call
mov
mov
add
fstps
sub
sarb
cmp
arpl
cmc
out
std
jno
lcall
inc
mov
push
inc
xchg
lods
sbb
pop
test
into
xlat
pop
popa
jmp
sub
sub
call
sub
or
aam
scas
xchg
movb
mov
or
dec
cmp
xchg
sbb
mov
lds
movsl
dec
test
mov
out
rcr
xchg
outsl
jbe
pop
testl
shr
cmp
xor
rcrl
lcall
push
xor
xor
xor
lds
jecxz
out
dec
aam
fbld
sbb
out
hlt
nop
or
les
mov
arpl
mov
jg
call
movsl
push
call
mov
fbstp
jno
outsb
adc
cld
in
in
cmp
stos
adc
sbb
pop
fdiv
cmp
pop
mov
je
ror
stos
jmp
incb
or
or
mov
ja
push
pop
lret
pop
mov
inc
aam
inc
mov
mov
mov
jle
ret
push
xchg
iret
push
pop
out
call
sbbb
in
std
sarb
sti
mov
outsl
aam
xor
and
lods
mov
leave
ss
nop
js
and
push
in
jmp
mov
mov
lods
adc
dec
mov
lcall
jnp
or
adc
and
jbe
es
test
sub
fldl
sbb
adc
add
push
push
pushf
outsb
adc
lods
rcrl
pop
ja
adc
xchg
sub
imul
xchg
fmull
jge
int
lahf
fucomp
sub
lock
pop
aad
rcl
les
out
adc
orb
loop
sarb
loope
test
xor
jae
or
aas
cwtl
xor
sub
pusha
fildl
jnp
mov
in
sub
sahf
fs
addl
jne
cmp
aam
lods
sbb
mov
stos
mov
xchg
sbb
ficoms
pop
pop
sti
sub
fwait
test
gs
pusha
xlat
out
int
push
mov
imul
cmpsl
jecxz
xchg
clc
jmp
call
aaa
in
cmpsb
sbb
lcall
rorl
xor
ljmp
mov
push
cmpsl
es
rep
or
roll
xlat
or
jecxz
sbb
adc
mov
mov
mov
mov
adc
scas
sub
out
dec
inc
std
or
test
insw
push
sbb
cli
scas
sbb
push
test
outsb
in
cs
and
xlat
adc
mov
add
aam
xor
repnz
cmpsl
adc
xchg
popa
bound
mov
dec
inc
pop
push
mov
mov
ds
xor
mov
fs
out
je
mov
shll
mov
xlat
adc
push
lods
pop
jmp
jo
insb
xor
scas
mov
aad
inc
sbb
clc
push
dec
xchg
mov
incb
negl
mov
sti
rolb
movsl
cmpsl
dec
repz
push
ss
sub
lcall
add
mov
add
mov
mov
pop
ret
dec
sub
lods
sub
popf
fldcw
frstor
ret
add
cmc
cmp
jle
cmpsb
orl
rcl
sub
xchg
aam
xor
push
into
cmp
jecxz
mov
movsb
lcall
hlt
push
pop
xchg
add
xor
movsl
lret
cmpsl
sbbb
sahf
scas
adc
push
ret
jae
cmpl
jnp
idiv
sbb
add
sbb
sbb
xchg
stc
stc
sub
rorl
sar
pusha
scas
push
xchg
pop
out
call
pop
insb
jmp
mov
jno
icebp
lret
mov
xor
cmpsl
mov
xchg
mov
sbb
inc
ret
ds
push
cli
mov
or
xorb
test
fwait
leave
mov
test
cmpsl
divb
ss
imul
sub
xlat
cmp
cltd
push
mov
sti
pop
adc
in
mov
and
outsb
popa
mov
stos
dec
out
inc
sti
and
mov
fisubl
gs
dec
bound
lea
jmp
adc
punpckhwd
jmp
test
cmp
sub
or
mov
and
daa
mov
cwtl
test
ret
xchg
test
addr16
pop
shrb
cmp
cs
pop
cmp
mov
inc
sbb
int
rcl
cmp
ret
cmpsb
shlb
stc
fs
scas
in
dec
sub
imul
ret
pop
mov
insl
mov
xchg
mov
daa
lahf
es
decl
cld
test
btsl
push
imul
mov
out
add
imul
repz
aad
out
movsb
add
sub
test
mov
xchg
cmp
mov
xor
cmp
sub
add
pop
sub
xchg
icebp
cmpsb
cs
push
cltd
sub
pop
inc
pushf
pop
adcb
nop
js
sbb
pop
jne
jbe
popf
sbb
dec
cmp
cmp
inc
sbb
cmp
sbb
into
or
xchg
iret
popa
mov
cmp
dec
outsl
pop
scas
mov
icebp
andl
aad
fsubr
fnstenv
pop
outsb
xor
stos
or
js
pop
hlt
mov
andl
in
ret
in
insl
aam
inc
test
inc
xor
lock
push
xchg
imul
or
sbb
add
jns
mov
mov
dec
xor
ds
add
push
mov
xor
popf
das
test
jb
inc
and
push
xlat
cmpsb
adc
and
adc
pop
xchg
adc
sahf
mov
xor
cld
cmp
add
lcall
push
out
jnp
gs
popa
neg
mov
push
add
push
fidivrs
mov
popf
andl
andl
in
pop
cltd
popa
adc
push
push
imul
pop
insl
pusha
stos
notb
faddp
dec
int3
push
adc
and
leave
ret
test
mov
add
inc
enter
cmpsl
xchg
insl
das
pusha
mov
adc
lahf
sahf
xchg
mov
ss
jnp
aas
sub
clts
push
xchg
aad
movsb
loope
clc
xchg
dec
push
adc
dec
dec
jle
jb
pop
pop
jp
pop
cmp
loop
jecxz
stc
es
jae
xlat
xchg
and
ja
addr16
movl
sti
mov
testl
lcall
mov
movsl
out
jg
lock
bound
sarb
cmpsb
xchg
pop
gs
fisttps
jle
inc
mov
push
sbb
and
cmpsb
jo
dec
pop
and
add
jmp
jmp
xchg
leave
adc
adc
and
pop
adc
iret
aad
hlt
lret
jl
aad
fs
lods
test
xchg
or
leave
push
mov
pusha
push
lods
orl
rol
mov
repnz
enter
inc
int3
dec
enter
or
cmp
push
mov
ffree
and
and
push
dec
mov
xor
cmpsl
mov
dec
aam
push
cmp
pop
pop
push
push
pop
sahf
fs
mov
cli
pusha
push
cmpsl
or
ret
push
inc
mov
and
and
outsl
lahf
mov
or
sbb
fsub
and
jp
adc
cmp
stos
cmpsl
lahf
movsb
imul
enter
jb
fildl
ret
sbb
fidivrl
pop
jp
out
mov
gs
outsb
xchg
int3
ret
sub
and
mov
cmp
push
cs
in
add
in
dec
pop
pushf
add
cmp
mov
push
insl
adc
iret
daa
mov
push
mov
rcrb
in
ss
sbb
das
dec
xor
leave
push
dec
jmp
inc
sbb
inc
pop
mov
push
mov
push
outsb
mov
push
aaa
incb
test
pop
mov
push
sbb
roll
mov
lds
mov
cmp
mov
cmovle
push
and
mov
sahf
fstps
mov
jge
pop
or
jmp
pushf
imul
adc
mov
pop
jnp
jae
jp
out
sub
test
rcrl
adcb
or
ja
push
rclb
push
fcomp
sbb
xor
clc
and
repz
inc
out
mov
faddl
mov
iretw
repnz
mov
inc
jbe
clc
xchg
bound
mov
out
push
sub
movsb
syscall
pop
push
imul
cmpb
std
lock
movsb
icebp
push
stos
stc
ret
les
inc
pusha
leave
std
fnstsw
mov
jl
xor
inc
pusha
mov
mov
jg
pusha
xor
stos
mov
fldcw
adc
sub
jecxz
pop
idiv
sbbb
nop
fnstsw
sub
nop
lods
iret
je
shll
mov
dec
aaa
sbb
mov
sahf
dec
and
jecxz
or
push
dec
mov
mov
pop
outsl
mov
dec
nop
insb
cs
adc
gs
out
pop
sbb
roll
aaa
out
mov
into
pop
scas
andb
xchg
lahf
push
xor
and
jmp
cmp
adc
add
lret
js
in
fnsave
sub
lret
js
leave
pop
jmp
lods
xchg
repnz
lock
sti
mov
sbb
js
stc
lahf
xchg
scas
push
dec
xor
dec
stos
mov
cmpsb
dec
cmp
pushf
add
loop
ficomps
dec
sbb
mov
inc
mov
test
pop
mov
inc
and
in
outsl
mov
inc
fdecstp
mov
je
aam
push
mov
sub
dec
rorb
jmp
pop
and
jg
push
test
xor
xlat
aaa
nop
and
adc
jge
repnz
or
pop
repnz
dec
dec
mov
out
mov
int3
aam
gs
fwait
pop
jle
pop
mov
dec
sbb
hlt
fnstsw
stc
add
cmc
sbb
aaa
xchg
outsl
iret
jmp
data16
xchg
inc
add
pop
mov
jl
js
js
xchg
xchg
push
jne
aam
pop
sbb
mov
jge
insb
push
inc
lret
in
xor
inc
and
mov
jecxz
and
xchg
loopne
aas
arpl
lods
fisttpl
add
add
lret
std
vcvttsd2si
jp
arpl
mov
cltd
inc
or
repz
cs
into
mov
clc
mov
cmpsl
pop
fldt
pop
jne
mov
sbb
jp
insb
or
sub
pop
les
mov
jge
cmp
sub
mov
xchg
and
jo
dec
jae
sub
rcll
pop
mov
stos
mov
lods
lcall
push
test
iret
push
fidivl
hlt
cmp
loopne
jb
push
outsl
loopne
sub
fadd
or
out
arpl
jne
xor
sarl
adc
or
jle
xor
das
push
movsl
xor
sub
cmp
dec
or
repnz
aaa
fcomi
adc
pop
je
insl
fildl
cmpsl
push
imul
cmp
mov
inc
insb
mov
aad
popf
incl
xchg
daa
cmp
xchg
add
inc
dec
imul
cmp
mov
cmp
push
shlb
pop
cmpsl
scas
xor
cwtl
dec
bound
jge
adc
daa
out
fdivrp
call
jg
cwtl
inc
sbb
loope
mov
xor
pop
pop
pop
scas
and
in
mov
cmpsl
int3
fsubr
adc
jecxz
cmp
ja
stos
lahf
sub
fidivrl
push
sbb
jl
shrb
or
out
clc
mov
mov
cmp
stos
ret
fistpll
inc
ljmp
aad
inc
std
sbb
loop
sbb
ja
add
ss
sbb
jmp
pop
loope
mov
pop
or
mov
adcb
push
push
int3
dec
or
je
lods
in
cmpl
xchg
rcrl
movsb
lds
xor
cmp
mov
addr16
dec
arpl
testb
incl
mov
loopne
in
femms
jmp
adc
lret
stos
jno
lods
daa
movsl
pop
dec
std
fnsave
das
pop
in
and
icebp
dec
push
and
mov
or
jle
int
es
scas
mov
mov
push
adc
aam
test
nop
jne
push
dec
xchg
lret
imulb
call
mov
or
std
dec
mov
jne
mov
pop
mov
mov
xchg
mov
lret
pop
outsb
push
inc
xchg
in
mov
fisubrs
sbb
fidivs
jge
in
pop
in
jo
pop
jo
or
rcrb
test
mov
frstor
faddl
pop
xchg
test
sbb
cmovne
xor
outsl
push
and
repz
mov
add
push
cmc
and
inc
mov
pop
test
jmp
insl
mov
xchg
rclb
dec
dec
enter
cmp
icebp
ss
nop
testl
lret
pusha
fildll
lods
jmp
xchg
mov
xchg
push
mov
push
xlat
pop
cwtl
jns
test
cmpsb
pop
movsl
sub
push
mov
int3
xchg
jl
roll
pop
bswap
sub
ret
mov
inc
int3
sbb
movsl
shlb
push
mov
xchg
call
movsl
enter
test
lret
ret
mov
pop
lds
mov
stos
adc
sbb
add
xor
int3
dec
lods
jb
lods
xor
fstl
fsubs
inc
popa
inc
dec
xchg
or
mov
xor
and
or
test
xchg
lock
loope
jb
mov
stos
pushf
push
mov
fadds
repnz
and
pop
cmp
lods
loop
lret
lods
adc
inc
nop
jnp
lcall
push
test
jno
dec
sub
pop
xchg
not
rorb
jo
push
jmp
clc
add
xor
popa
sti
lret
add
mov
dec
inc
inc
xchg
jle
and
dec
cmc
repnz
mov
xchg
xor
cli
jp
sbb
shrb
xchg
push
nop
and
ret
dec
pop
sub
repz
sub
jecxz
divb
xchg
in
mov
cmp
jo
outsb
push
lret
mov
inc
xor
lds
and
mov
idivl
push
orb
mov
push
pushf
pop
dec
mov
lcall
pop
pmullw
aas
push
inc
xor
cmp
aaa
dec
sbb
mov
mov
movsl
mov
xchg
push
lret
push
imul
or
aas
cwtl
outsb
xor
das
out
testl
repz
and
into
dec
sbb
dec
push
out
nop
cltd
hlt
push
pop
outsl
sbb
out
mov
mov
pushl
jle
iret
xlat
data16
sahf
test
jns
test
iret
imul
xchg
imul
dec
ja
jmp
je
adcl
xchg
jb
nop
xchg
mov
cld
inc
inc
leave
sbbl
addl
mov
push
ja
push
mov
loope
stc
test
add
ficomps
sbb
adc
in
xchg
jg
adc
mul
pop
stos
out
arpl
mov
xor
xchg
insl
jmp
fcom
sbb
jl
cmp
shrl
cmp
mov
rcll
xor
dec
shlb
hlt
adc
outsb
ss
jno
mov
push
es
out
cmc
mov
insl
cmpsl
lahf
cmp
mov
dec
push
jle
dec
fucom
pop
pop
and
or
xor
aaa
lods
push
jmp
cmp
insb
mov
test
ret
scas
mov
fisubrl
cmpsb
popf
ja
pop
mov
in
aas
sbb
jecxz
jns
jnp
and
insb
sub
and
mov
mov
or
std
rcrl
loop
xchg
dec
mov
call
adc
pop
int3
push
lds
and
outsb
mov
xor
jbe
and
cmp
cmp
out
jnp
push
in
and
stos
test
mov
lret
js
enter
mov
inc
rcl
add
fs
cmpsl
push
ror
jo
scas
sub
cs
subb
xchg
and
push
add
pusha
inc
sarb
jns
or
jne
add
xor
dec
mov
inc
enter
or
pop
pop
ja
push
xchg
adc
mov
jl
pop
pop
cltd
lods
pop
xor
xchg
outsb
xchg
in
and
outsb
movsl
popf
cli
aas
or
push
xor
jl
inc
xchg
push
mov
test
adc
mov
stc
shll
popa
movsb
adc
xor
push
loopne
pop
inc
in
xchg
dec
and
xchg
xor
lods
jmp
fwait
dec
jg
rcll
aam
pusha
cld
sahf
mov
and
sbb
pop
lret
sbb
push
lcall
sbbl
jp
add
jg
scas
lock
inc
pop
fists
lahf
adc
out
add
cli
addr16
repnz
mov
adc
mov
cmp
cmp
mov
iret
daa
test
sub
mov
adc
add
lock
fucomip
fwait
pop
push
test
lods
mov
sbb
sbb
das
addr16
out
test
aas
inc
pop
mov
cmp
jno
jmp
insb
add
add
int3
mov
sbb
dec
shlb
ja
jbe
mov
inc
subl
out
inc
jne
push
mov
int3
jecxz
add
jae
lretw
shrl
fldt
jnp
insb
sti
orb
popa
inc
sbb
movsl
jl
mov
aas
idivb
addr16
sub
ja
jg
in
sbb
lret
dec
into
sar
xor
popa
xlat
sub
push
adc
adc
mov
notb
je
fdiv
inc
arpl
inc
mov
jne
cmpsl
cmp
xchg
push
jmp
lahf
test
and
imull
cmpsl
jge
mov
mov
inc
jecxz
xor
ss
mov
or
push
dec
repnz
jnp
sbb
or
cmp
test
ljmp
lahf
and
and
mov
jp
lea
adc
pop
mov
ljmp
mov
stos
xchg
xor
adc
scas
push
rcrl
xchg
pop
push
int
inc
cmp
shlb
mov
movsb
or
les
cmp
cmp
push
shr
and
lret
into
inc
xchg
lods
push
test
mov
test
pop
adc
mov
pusha
out
movsl
fwait
dec
push
mov
scas
push
mov
pop
jmp
adc
mov
inc
popa
mov
jns
adcl
mov
stos
xchg
push
add
sub
hlt
push
das
mov
mov
daa
cmp
push
lea
push
mov
adc
ret
mov
xchg
mov
mov
scas
add
xchg
aas
adc
cld
mov
dec
mov
xchg
or
mov
push
in
pop
imul
xchg
repnz
enter
mov
jl
xor
jne
dec
js
test
inc
scas
cmpb
imul
int
lods
scas
jg
push
mov
pop
sbb
xor
pop
jle
aad
cli
addr16
sub
rcrb
xor
xchg
mov
pop
jns
addb
rcll
adc
pop
adc
jecxz
rep
mov
push
repnz
bound
dec
cmp
ret
inc
jg
sub
test
push
adc
push
mov
sub
xchg
xchg
sahf
mov
xchg
pop
or
push
out
fiaddl
stos
call
push
adc
movl
cmp
sbb
add
stc
cmpsl
incl
xor
and
dec
daa
cmp
mov
testl
adc
add
cwtl
cs
data16
mov
ret
mov
jp
mov
push
ja
cmp
lds
mov
mov
adc
int3
adc
mov
movsb
or
xchg
inc
pop
lahf
lcall
push
movsl
pushf
xchg
out
aas
rorl
xchg
or
sti
mov
jmp
call
dec
aam
fiadds
insl
xor
stos
add
jb
jl
xor
mov
ja
bound
lods
cmp
inc
repz
rcll
mov
xchg
jmp
stos
and
xor
enter
lret
es
jmp
hlt
sahf
fwait
pop
movsl
ds
rcrb
xchg
lods
int3
out
sbbl
lea
xchg
ja
es
inc
insl
xchg
sbb
inc
adc
mov
aad
shrb
sub
mov
stc
lcall
and
mov
and
out
dec
and
xchg
mov
call
or
cmp
loopne
mulb
xor
ds
mov
jg
jl
dec
lahf
mov
xchg
mov
lods
aas
pop
xchg
xor
repnz
mov
ficoml
push
movsb
out
jle
xor
in
xchg
fildl
push
jbe
roll
inc
rcl
mov
and
inc
add
mov
cmc
sbb
mov
stos
mov
xchg
cs
jne
add
mov
mov
push
xor
out
and
and
out
out
xchg
ds
push
sbb
jns
sub
add
aad
in
push
lret
jnp
cmpsb
and
repnz
adc
insb
add
jl
dec
loopne
mov
shrl
push
mov
push
or
out
test
mov
mov
mov
nop
popa
mov
jns
cmp
dec
mov
pop
push
aaa
push
jo
add
in
fs
push
ret
adc
cli
xor
jge
repnz
ja
in
sub
std
ljmp
add
sbb
jae
and
dec
sbbb
pop
out
out
pop
jmp
int3
leave
mov
stos
inc
mov
mov
sarb
dec
jg
nop
out
notl
mov
loop
loopne
or
rcl
push
jmp
dec
sub
jp
out
dec
lret
stos
mov
stos
insl
test
mov
sti
out
mov
data16
in
sbb
inc
mov
cli
rcll
js
stc
push
xchg
cs
insb
shll
in
lds
push
and
dec
rorb
mov
xchg
xor
fs
cmp
jecxz
mov
push
mov
movb
push
push
push
mov
inc
jnp
push
insl
out
cmp
adc
rorl
out
enter
push
fists
cmc
fwait
xor
fs
inc
inc
cmpsl
push
fldl
dec
push
xchg
add
movd
dec
push
movsb
loopne
jp
push
fwait
cmp
repz
fwait
cmc
daa
stos
ja
xchg
cs
fsts
movsl
jle
and
scas
or
adc
mov
mov
lahf
lea
jg
cmp
pop
shr
mov
hlt
insl
pusha
outsb
jle
stos
xchg
dec
in
out
jo
mov
popf
out
movsw
xchg
mov
arpl
xchg
test
ds
sub
imul
fimull
shll
in
mov
into
mov
xchg
push
push
xchg
repnz
cld
mov
mov
push
cmovno
mov
jae
cltd
xlat
movsl
xchg
xchg
cmp
add
add
out
lock
sbb
pop
adc
push
pop
int3
mov
and
or
or
dec
pop
test
sti
pop
push
add
andl
xchg
pop
sbb
mov
cmp
lret
int3
fists
cli
jle
lea
push
xchg
xor
add
nop
leave
movsl
imul
mov
push
mov
xor
jecxz
fists
pop
cmp
sub
and
lret
mov
test
bound
sub
aam
outsb
jge
mov
aaa
in
mov
mov
in
jge
fistpl
sub
xor
stos
pop
es
and
dec
adc
loope
mov
mov
in
inc
cmp
test
jle
lret
mov
cmp
jb
in
ficoml
xlat
push
in
xchg
fwait
test
out
dec
lcall
in
loope
inc
lods
test
push
aad
jge
push
cmp
cmp
sbb
cmp
jns
ret
out
mov
out
pop
sub
or
jl
int
sar
inc
cmp
adc
adcb
and
repnz
or
xchg
xchg
int3
js
mov
test
es
or
xor
ret
inc
xchg
idivl
xor
mov
xor
inc
pop
sub
shrb
das
stos
mov
push
shrb
bnd
or
subl
scas
call
jge
push
dec
jnp
push
loope
flds
inc
jae
sbb
faddl
and
push
lock
xchg
xchg
aad
mov
ret
xchg
mov
push
into
aaa
cmp
sub
mov
mov
lea
divb
cmp
data16
mov
push
dec
hlt
cld
divb
jecxz
xor
test
jge
ss
cli
adc
pop
xchg
dec
mov
rcrb
adc
mov
push
jne
cmp
ds
adc
shll
cmpsl
jae
xchg
xorb
idivl
xor
adcl
fwait
pop
insb
and
rcll
sub
int
xchg
sbb
stc
xchg
and
fs
dec
mov
dec
arpl
jge
mov
adc
jno
cmpsb
or
scas
push
outsl
inc
mov
jp
fldlg2
xor
jmp
push
mov
push
in
jge
es
in
clc
imul
sbb
cwtl
xchg
mov
xor
arpl
icebp
or
into
cmp
sub
jp
push
sub
sbb
fwait
and
jns
js
cmp
mov
inc
jl
cmp
call
aaa
cmpsl
fisttps
lret
lret
dec
jecxz
push
jne
shlb
adc
stc
inc
mov
in
neg
pop
gs
aaa
mov
push
mov
push
xchg
les
push
lods
pop
add
test
add
movsb
pop
loope
mov
scas
pop
xchg
xor
lods
push
imul
insb
ret
sub
jnp
ds
cmp
testl
mov
jmp
fcmovne
stos
push
clc
adc
mov
out
xor
fnstsw
jo
xor
lcall
pop
pop
jl
aam
subb
outsb
mov
call
mov
stc
std
out
mov
rcrb
mov
xor
inc
jno
nop
fsubrl
xchg
idivl
mov
div
sub
push
cmpsb
or
mov
lcall
inc
test
mov
pop
xchg
decl
cwtl
fst
dec
inc
or
push
movsb
icebp
test
push
push
cmp
mov
or
xchg
mov
push
outsb
stc
pushf
insl
fisubrs
pop
js
mov
dec
push
xor
sbb
add
lret
mov
cmp
subl
jbe
sub
test
scas
iret
dec
or
adc
xchg
sub
dec
repnz
xor
xchg
loop
push
std
jge
or
mov
lds
es
inc
movsb
mov
repnz
stos
xchg
mov
xchg
push
add
sbb
adc
adc
mov
test
jbe
pushf
dec
xor
in
divb
xlat
ja
inc
jecxz
mov
mov
call
add
pusha
sarb
cmp
sbb
adc
jne
lret
rcll
xchg
mov
mov
dec
daa
lcall
shlb
mov
mov
shl
adc
stos
adc
adc
outsl
fisttps
hlt
xchg
mov
mov
inc
test
lcall
pop
lds
dec
inc
call
jno
or
and
out
cmp
scas
mov
cmp
sbb
sbbl
outsl
jecxz
xchg
and
cmp
jle
mov
sub
push
int
in
adc
jecxz
adc
dec
mov
pop
push
mov
es
int3
test
ret
pop
data16
jg
ja
popa
lods
in
aad
sbb
push
jno
imul
xchg
lods
mov
sub
jmp
add
inc
push
aas
les
jb
lea
test
mov
mov
cmp
pop
or
jecxz
add
filds
jmp
sti
or
mov
and
dec
xchg
subl
push
lcall
fisttpll
jecxz
mov
mov
paddw
iret
mov
sbb
jge
cmp
jo
push
xlat
fcmovu
mov
ret
jmp
out
xor
pop
cmc
mov
ret
pop
dec
xchg
repnz
cmp
xor
stos
or
xchg
cld
dec
mov
lea
or
jmp
inc
jae
cmpsl
pop
push
mov
pop
scas
rdpmc
jbe
test
ljmp
or
aad
cmp
mov
je
mov
divb
mov
cmpsl
xor
bound
or
dec
fisttps
nop
mov
push
pcmpgtd
in
jo
testb
aam
in
lret
jmp
dec
sar
and
xor
movsl
shr
mov
incl
xchg
jmp
jno
pusha
iret
push
xor
add
dec
xor
jge,pn
and
lds
loop
or
test
lcall
sub
inc
xor
filds
lret
lret
orb
push
mov
jle
sbb
popa
sbbb
nop
jnp
ret
mov
das
rep
outsl
jnp
pop
mov
out
push
dec
push
shlb
mov
shlb
insl
sbb
in
mov
sbb
adc
fmull
leave
sysenter
mov
jmp
xchg
loop
fs
inc
adc
movl
cmp
dec
adc
sahf
pop
push
pop
cmp
int
je
inc
xor
and
jecxz
ret
dec
fstpt
and
inc
or
mov
outsb
pop
imul
push
mov
xor
data16
xchg
lods
mov
or
xchg
sub
mov
jno
adcl
bound
sar
add
test
lea
repz
popa
lods
pop
xchg
inc
popf
sbb
cmp
sub
out
insb
ljmp
loop
jp
mov
bound
stc
std
cmp
dec
dec
mov
cld
js
loop
adc
jge
sbb
or
pop
xchg
mov
nop
clc
cld
mov
cmc
into
xchg
rcr
mov
or
push
mov
sub
aad
push
iret
xor
mov
addr16
xchg
add
mov
daa
inc
std
repz
shr
movsl
mov
add
fcmovu
es
repnz
bound
lock
addr16
xor
sub
mov
in
pop
add
xor
dec
outsb
xlat
add
mov
enter
dec
jb
or
pop
and
mov
testl
xor
cmp
jmp
jmp
jmp
and
pop
mov
subb
clc
lcall
into
xor
test
pop
push
popa
and
in
mov
push
adc
mov
mov
mov
xchg
cmpsl
ja
in
inc
add
sbb
add
mulps
aaa
mov
cli
add
push
inc
jno
sub
or
push
and
cld
ljmp
das
mov
adc
adc
pop
aas
das
mov
jnp
in
sbb
sub
jg
xor
mov
mov
xor
outsb
sbb
adc
inc
mov
mov
mov
fcompl
jle
xlat
jo
bnd
rcrb
jecxz
adc
adc
mov
ljmp
shlb
inc
lods
inc
mov
in
or
jge
xlat
mov
xchg
jge
mov
xchg
pop
or
sub
jmp
push
add
add
xlat
mov
or
push
fistpl
arpl
test
inc
mov
xor
dec
ret
leave
jl
and
fwait
lea
testl
sub
cmp
xchg
jge
jb
iret
das
push
jnp
fnstenv
jp
rorl
cmp
repnz
lods
das
shlb
mov
das
aam
adc
jb
rclb
ret
lock
fcmove
jecxz
mov
push
lds
push
dec
rep
mov
mov
out
pop
gs
sub
inc
stc
inc
pop
testb
xor
int3
xlat
lahf
mov
dec
lret
insb
dec
mov
inc
filds
jno
xchg
imul
inc
or
xchg
incl
cmp
int3
or
cld
sbb
or
aam
imul
dec
in
out
xorb
cmp
loope
inc
xor
push
xlat
sub
sub
repz
movsl
and
mov
cmp
mov
adc
inc
jmp
fldl
arpl
rolb
mov
sbb
mov
sbb
loopne
insb
and
mov
xor
jae
loope
mov
pop
clc
add
movl
sti
cwtl
xchg
data16
out
icebp
enter
andl
aam
and
in
cmpsb
daa
fisubrl
pop
imul
pusha
jmp
adc
imul
mov
pop
mov
inc
imul
pop
test
hlt
stc
dec
add
mov
ds
add
in
sti
bound
addr16
pop
std
negb
push
loop
cmpsb
add
inc
out
out
nop
fsubs
pop
inc
gs
das
jmp
ret
xor
dec
push
xchg
outsl
and
hlt
pop
dec
or
jb
cmp
mov
or
xor
mov
jle
sbb
les
aad
cwtl
bnd
jnp
jg
imul
pop
jnp
stos
jle
pop
and
mov
shrb
cmp
nop
mov
test
push
aam
mov
pop
in
jcxz
test
xchg
dec
add
cltd
je
stc
mov
or
movsl
pop
sub
rclb
dec
test
mov
mov
pop
and
es
cmp
loope
dec
xchg
sbb
adc
int
push
push
stos
cmpsb
push
mov
jmp
sbb
int3
push
insl
notl
aam
dec
cmp
popa
repz
xchg
pop
xchg
repz
jo
pop
shlb
mov
inc
adc
push
rcll
fistpll
sahf
lcall
mov
jp
mov
stc
ret
xchg
mov
add
pop
mov
mov
xchg
or
and
mov
lods
xor
inc
dec
mov
dec
push
fcomps
sbb
push
jle
ljmp
addr16
push
pop
xor
out
sub
jns
fadd
and
dec
pop
aas
fnsave
mov
pop
dec
bound
out
mov
clc
mov
inc
int3
push
cltd
cli
inc
mov
lret
shll
insl
daa
ja
mov
lcall
and
ficompl
pop
rclb
mov
pop
dec
add
xor
lret
push
test
add
test
lret
xchg
loopne
adc
jmp
aad
jl,pn
hlt
sub
inc
inc
or
xchg
jl
sbb
cltd
mov
ds
outsb
daa
jnp
sub
aam
aam
dec
pop
cmp
push
xchg
mov
pusha
leave
mov
lds
in
cmpsb
inc
sub
in
mov
sub
leave
xor
fnstcw
inc
aas
xor
fisubrs
pushfw
jnp
xchg
adc
jno
das
imul
aaa
cmc
lret
negb
andb
push
roll
rcrl
aas
arpl
mov
aam
and
dec
or
fstp
push
xchg
jl
out
negl
rcrl
inc
or
push
or
or
xchg
mov
call
orl
jge
pusha
inc
sahf
popa
and
aad
movsb
sbb
iret
pushf
in
mov
stos
sbb
jl
lds
xor
push
ret
push
cs
xor
jl
mov
or
movsb
inc
fidivs
xor
int3
cmpsb
test
xchg
inc
push
dec
imul
aad
add
mov
cltd
mov
dec
mov
movl
dec
cmpsb
hlt
stc
test
mov
repz
ja
test
jo
andl
fucompp
or
jbe
xchg
cmc
fwait
xor
jnp
lret
insl
ljmp
and
mov
mov
in
adcb
dec
ja
int
and
pop
fstsw
add
xchg
sahf
mov
push
xchg
sbb
sti
jnp
mov
sub
cli
sbb
ret
jg
inc
stc
mov
mov
js
outsl
dec
test
jns
jae
inc
leave
and
xor
arpl
sti
leave
lods
jbe
mov
sbb
fdivr
pop
adc
mov
adc
xor
pop
jmp
cltd
test
sahf
mov
mov
and
std
ror
jle
jnp
inc
test
ss
or
xor
out
fsts
jb
sub
test
aas
inc
mov
dec
in
push
mov
mov
fsubrs
jns
out
cmp
push
in
sub
lcall
int3
leave
aad
cltd
inc
jg
lret
loope
pusha
sbb
add
push
xchg
out
sti
and
bound
sti
imul
nop
inc
loopne
and
addr16
xchg
dec
mov
dec
lret
jmp
adcb
and
sahf
roll
nop
pop
pusha
repnz
and
xchg
pop
mov
gs
inc
and
sub
sbb
outsl
ljmp
fsts
pop
jmp
push
push
int
js
sbb
cld
dec
dec
jp
dec
pop
ja
mov
jae
in
add
adc
pop
test
mov
xor
lcall
lods
insl
xchg
jl
lret
cmp
fimuls
addw
inc
jb
lea
decl
pop
scas
shrl
or
mov
sti
cmpsb
mov
adcb
movsl
clc
lods
mov
lahf
or
call
cmp
mov
xchg
fsubrl
dec
fs
fcmove
push
bound
scas
push
mov
pushf
and
aam
xchg
mov
js
pop
xchg
xor
ljmp
ds
scas
es
dec
or
push
mov
aaa
sti
mov
addr16
pushf
movsl
mov
lock
data16
mov
cmpsb
ficomps
fwait
or
cmpsl
xchg
pusha
int
test
push
inc
movsb
xor
inc
in
rcll
push
add
mov
mov
rclb
fs
jno
cmp
mov
mov
pop
sbb
nop
out
in
idivb
push
add
aad
outsl
pop
pop
pop
in
inc
mov
ffree
or
inc
ret
inc
imul
iret
push
lods
jge
loop
negb
mov
test
nop
fcoml
cwtl
popa
cltd
cmpsl
lods
mov
iret
push
mov
out
nop
and
mov
and
push
or
and
jmp
js
add
mov
mov
ljmp
test
jle
cmpsb
adc
jo
js
pop
mov
out
xchg
clc
pushf
cli
add
and
int3
jmp
mov
xchg
xchg
adc
div
out
sub
sub
jecxz
into
mov
push
mov
movsb
xchg
popa
movsb
imul
cmp
dec
inc
lret
data16
in
loopne
dec
je
arpl
xchg
dec
aas
scas
in
out
decb
in
and
idiv
arpl
ds
push
xchg
outsb
test
sub
jl
cmp
int
data16
or
not
jg
cltd
inc
xor
stc
mov
mov
pop
dec
mov
insl
add
pushf
sti
adc
leave
arpl
push
pop
xchg
xchg
test
add
xor
sbb
sarl
enter
xor
xchg
adc
inc
insl
push
inc
cmpsl
sahf
in
pop
dec
and
testb
movb
pop
lret
mov
jns
dec
sti
icebp
pop
sti
fwait
aad
xchg
adc
cltd
icebp
cmc
popa
lds
stos
add
fcmovbe
push
pop
aaa
xchg
lcall
mov
sbb
pop
cmp
scas
popa
cmp
add
or
xchg
pop
add
out
test
sub
hlt
mov
testl
out
lods
popa
push
sub
insl
dec
add
fidivl
orl
icebp
push
adc
cli
int3
mov
dec
inc
adc
jb
mov
and
into
pop
adc
xchg
sbb
sahf
scas
pop
int3
loop
lock
imul
dec
inc
imul
inc
loop
mov
jp
mov
lock
mov
imul
sbb
pushf
rcrb
inc
pop
aam
pop
mov
mov
jmp
addb
pop
fsts
mov
cs
sub
cmp
negl
add
mov
cli
jp
jecxz
dec
std
mov
fimull
xchg
or
or
sub
push
inc
aas
cmp
inc
cmp
out
mov
shlb
incl
cld
xchg
bnd
fs
out
push
cmp
xor
inc
stc
mov
jmp
or
shl
pop
xchg
sbb
orl
sti
shl
and
jb
push
jae
mov
dec
sbb
fwait
and
mov
cmc
repz
mov
shrl
jecxz
pop
sub
sbb
push
xchg
rcl
and
jl
and
aas
js
jno
and
stc
ja
dec
ret
and
add
adc
icebp
daa
jne
lods
and
shr
js
lret
outsl
adc
dec
cmpsb
dec
sar
loopne
test
or
xor
or
fiadds
or
inc
dec
jnp
pop
xchg
mov
aad
and
dec
adc
jmp
xor
xchg
insb
sbb
sbb
xor
adc
cmp
sbb
sbb
outsb
scas
cmp
mov
mov
inc
pop
dec
fcompl
mov
xchg
or
les
mov
lret
scas
sub
popf
dec
cld
push
xorl
dec
pop
sbb
cmp
imull
out
dec
mov
mov
lock
mov
jle
das
mov
and
jne
mov
pop
or
sahf
sub
es
gs
outsb
scas
ret
xlat
lods
cmp
ds
mov
ret
insl
jge
push
jmp
push
pop
rcrl
jno
mov
cwtl
aam
mov
bound
pop
dec
aad
add
call
mov
lods
enter
test
adc
test
into
jne
aas
fwait
les
out
popf
jno
and
push
inc
outsb
add
int3
mov
mov
jb
out
sbb
dec
ja
iret
movsbl
dec
cmp
xchg
xor
or
jbe
inc
inc
pop
sub
jecxz
cmp
mov
aas
lret
push
fsubl
jge
pop
or
scas
mov
ret
hlt
popa
mov
jno
push
mov
push
shlb
lods
dec
sub
or
mov
pop
div
and
mov
dec
jge
out
sbb
test
lcall
fs
jb
pop
imull
movsb
dec
mov
data16
in
out
and
inc
mov
rorb
scas
mov
fwait
cmp
dec
pop
pop
xchg
mov
sub
lods
loopne
fcomip
fists
out
jno
sbb
sbb
int
ss
mov
inc
aaa
sbb
jecxz
pop
jnp
aas
or
cmp
cmp
aad
ss
push
xor
xchg
loope
loop
jno
push
hlt
adc
shrb
les
in
and
in
push
sub
xchg
pop
mov
lret
mov
lock
mov
mov
push
cmp
sub
and
pop
push
in
stc
mov
inc
leave
sub
mov
imulb
mov
out
pextrw
dec
inc
ljmp
sbb
push
popa
lods
daa
xchg
push
iret
pop
jb
cmpsl
lods
xor
xchg
iret
cmpsl
ds
dec
daa
and
stos
inc
xor
jno
adc
scas
inc
loopne
jbe
mov
repnz
popa
push
jp
or
dec
push
jb
das
mov
mov
mov
shlb
lret
testb
mov
push
mov
iret
ljmp
test
std
repz
fcomps
in
pop
cmp
repnz
into
pop
cmp
addr16
shrl
mov
cwtl
scas
pop
mov
sbb
xlat
and
jns
push
xor
jno
mov
or
cmpsb
push
call
push
stc
jae
xor
jp
flds
nop
sbb
mov
sti
adc
push
mov
lret
mov
cmpsb
lds
ffree
cwtl
icebp
aas
pop
test
movsb
pop
das
dec
pop
sarb
sub
push
out
add
das
int
jb
lods
cmc
xchg
jae
das
pushf
les
cmpb
mov
push
icebp
mov
xchg
push
jmp
inc
mov
out
shr
ljmp
push
mov
aad
das
mov
bound
and
jp
test
cmc
inc
jns
mov
dec
sub
cmpsb
ljmp
cmpsl
in
push
add
adc
mov
xchg
xchg
lea
mov
or
inc
mov
adc
ficoml
and
les
mov
mov
dec
xchg
lds
pop
jecxz
push
xchg
or
mov
in
xor
cmpsl
loope
mov
cmp
xor
dec
shl
add
cs
mov
fildl
push
push
xchg
lock
sahf
out
mov
clc
hlt
lret
jle
or
cmp
js
into
mov
out
movsb
inc
mov
and
out
cmc
stc
xchg
or
out
into
xchg
pop
movsb
xchg
fildll
lea
imul
pop
fcmovu
in
sbb
jg
push
inc
mov
dec
aaa
jg
xorb
xor
scas
hlt
rorb
and
ss
lret
push
sub
data16
jno
cmp
inc
mov
mov
add
out
mov
jno
xchg
lods
outsb
sub
pop
mov
jb
leave
xchg
push
jae
xor
and
pop
test
sti
aaa
popa
dec
jg
add
popl
je
lret
call
outsb
aam
cmp
mov
std
movsb
out
jbe
xlat
daa
fiadds
jno
adc
in
movsb
sub
fisttpl
lods
int3
and
push
pop
cmp
jo
pop
cmp
fdivl
sub
leave
jle
repz
imul
pop
push
dec
sbb
dec
sar
xchg
icebp
enter
sbb
push
fisubrs
lcall
in
mov
lret
rcr
cmp
cld
loope
push
ret
int
adc
mov
out
imul
pop
jp
pop
rol
cmc
inc
out
outsl
dec
sub
outsb
adc
mov
xor
stos
cwtl
addb
adc
add
lds
addr16
push
inc
jno
scas
repz
subb
lahf
jmp
inc
pop
dec
xlat
or
sar
push
lahf
test
jge
loope
sub
imul
aam
aaa
in
cmc
nop
xchg
add
sti
les
jnp
cmp
shr
dec
and
mov
dec
push
push
jo
pop
daa
xor
lret
fstl
xchg
push
hlt
sbb
fdivs
lods
add
stos
push
cmpsl
cmpb
sbb
pusha
jge
mov
addr16
imul
adc
ljmp
test
into
push
jl
ds
mov
cmp
inc
lods
in
lds
cmc
dec
sbb
popa
dec
std
jmp
inc
mov
and
lcall
or
ret
enter
xchg
adc
jge
jmp
mov
mov
jmp
test
out
int3
subb
out
jg
push
popa
fdivrl
inc
rcrb
or
mov
mov
add
ret
mov
cmp
jbe
stos
xchg
pop
jp
pop
add
lahf
jb
push
cmp
js
adc
enter
add
adc
or
xchg
frstor
fstpl
or
addb
and
loop
movsb
xchg
cmp
or
or
xchg
xor
or
adc
loope
ret
or
aaa
push
test
lods
jecxz
sbb
arpl
push
cltd
mov
mov
mov
mov
gs
lock
mov
insb
push
push
jg
cmc
mov
into
mov
js
idiv
testl
mov
imul
mov
jo
or
xor
out
sub
pushf
icebp
inc
xchg
ret
adc
mov
pop
in
push
cmp
pop
and
mov
cli
push
movsb
js
stos
pop
test
jns
idivl
mov
adc
jmp
pushl
jne
pop
and
dec
xchg
jl
adc
cmp
push
pop
and
dec
sar
and
sti
push
mov
jnp
js
ljmp
dec
mov
insb
cld
dec
daa
xchg
inc
xor
cmp
sub
pop
jg
sub
je
das
fidivl
les
mov
in
mov
jnp
push
mov
inc
rcll
push
out
add
push
clc
pop
xorb
mov
mov
cli
in
pop
xor
xchg
cmp
mov
jle
add
pushf
add
jecxz
into
popa
icebp
fists
out
outsb
loopne
into
xor
fldt
inc
jle
out
dec
push
jne
jb
mov
jecxz
insb
fld
stos
sahf
pusha
push
mov
in
in
mov
test
adc
stos
push
aaa
cli
mov
pushf
loop
sysret
xor
xor
aam
js
cwtl
rorb
and
dec
stc
mov
inc
mov
rolb
dec
outsb
pop
rorb
icebp
lea
fsubrs
mov
fs
stos
jecxz
xchg
pop
adc
fbstp
dec
movsl
out
int
movsb
xchg
lds
dec
jo
adc
popf
out
and
idivl
insl
xor
mov
cltd
mov
cmc
lcall
push
enter
repnz
mov
sti
and
mov
insb
jo
sub
dec
int
shll
mov
cmp
scas
mov
jo
or
push
xchg
push
inc
outsb
lahf
test
movsb
iret
fs
test
jne
xor
add
push
add
pop
mov
in
imul
mov
neg
mov
jl
push
enter
xchg
rcrl
cmpsl
in
and
xor
xchg
dec
sbb
sahf
add
call
mov
push
mov
ljmp
dec
jns
fidivs
js
mov
ds
cltd
pop
inc
div
lahf
je
sahf
rcrl
loop
mulb
pusha
pop
mov
sarl
mov
push
scas
cmp
jns
hlt
or
pop
test
xor
int
jae
sbb
adc
mov
fstpl
jne
scas
ret
mov
jns
aas
iret
push
pop
cwtl
xor
outsb
test
nop
dec
mov
jb
ds
fadd
out
dec
push
scas
cmpsb
leave
mov
ret
jmp
jmp
or
pop
push
orb
jnp
xchg
dec
inc
mov
iret
mov
lret
aaa
pop
aaa
cld
lods
push
in
sbb
mov
xchg
jmp
dec
lret
icebp
je
fsub
dec
xchg
adc
dec
mov
icebp
js
pushf
adc
cmp
fistpll
adc
mov
mov
cltd
or
mov
clc
inc
and
mov
out
shrb
xor
add
std
cmpb
or
inc
imul
lea
je
inc
arpl
mov
insl
cld
shlb
movsb
or
jae
int
ffree
push
mov
push
add
cli
pusha
adc
pop
dec
xchg
repnz
jmp
fstl
jne
pop
and
inc
adc
cmp
cmpsl
call
pusha
test
test
pop
adc
lock
push
or
repz
sbb
ficoml
mov
popa
mov
jno
inc
popf
add
jno
mov
push
bound
jmp
outsl
jb
out
xchg
loop
ja
cmpsb
cmp
xor
dec
insl
int
mov
push
inc
or
loopne
aad
or
sub
gs
sti
das
sbb
xchg
pop
xor
or
push
push
imul
jmp
repnz
clc
pop
and
mov
push
mov
xchg
repz
sub
js
insl
push
std
xchg
ja
lea
sarb
mov
mov
outsl
imul
dec
lret
pusha
add
idiv
or
jae
inc
inc
insb
jae
add
std
jg
xchg
xor
xor
out
mov
pop
cltd
psrld
inc
pop
mov
insl
jb
icebp
addr16
jecxz
outsl
add
scas
pushl
jp
jmp
lds
cld
ss
outsl
std
dec
pop
xor
aas
into
adc
inc
sbb
ret
jno
mov
sti
push
out
mov
idivl
aaa
xor
pop
pop
cmp
xor
aas
nop
enter
xchg
xchg
out
pop
mov
in
incb
jmp
jnp
cmp
xchg
lcall
sub
pop
outsl
aas
out
jg
movsb
mov
dec
decb
cmp
cwtl
icebp
jge
mov
mov
out
pop
jecxz
xchg
das
ret
xor
data16
sarl
bound
in
jg
fidivrl
negl
dec
stc
dec
add
add
sti
pop
fcoms
mov
jne
icebp
fiaddl
fistl
ds
push
test
push
pop
pop
xchg
sub
cltd
adc
pop
sbb
test
hlt
adc
inc
mov
mov
lcall
out
shll
ja
pop
out
es
idivl
and
sub
pop
push
mul
dec
mov
popa
mov
nop
mov
fnstcw
nop
xchg
inc
pop
negb
jp
sar
iret
push
cmp
es
fisttpl
mov
fsts
or
ret
sbb
incl
dec
stc
sub
sub
add
xor
xchg
cmp
stos
jle
std
dec
xchg
in
into
adc
jo
bound
loope
push
sbb
jnp
sahf
mov
cmp
loop
cmpsb
xchg
fwait
arpl
aaa
jno
mov
ret
es
cmp
push
movsb
iret
cmp
xchg
cld
shrb
fildl
lock
dec
lret
xchg
mov
mov
jne
ljmp
aaa
add
lret
jl
outsb
inc
push
insb
pushf
cmp
pop
les
out
push
das
pop
ljmp
and
outsl
daa
inc
cmp
data16
sub
add
sub
sti
fs
sbb
or
pop
jns
out
ret
mov
outsl
mov
aam
jl
adc
repnz
xor
add
xchg
xchg
mov
and
sbb
cmp
mov
jge
addl
jle
test
pop
jmp
mov
pop
mov
fbld
xor
mov
int
jle
mov
pop
mov
popa
jge
mov
pop
mov
sbb
jo
in
fstl
inc
xchg
dec
adc
jmp
mov
out
xchg
cmp
int
push
mov
mov
jle,pn
xchg
test
faddl
das
lcall
ds
cmc
insb
push
insl
jns
or
pop
mov
fdivrl
imul
pop
shl
cmp
lock
call
scas
movb
cmp
into
add
jne
mov
movsb
add
aam
inc
cmc
push
cmp
jp
pop
das
jge
push
cmc
xlat
dec
mov
scas
cmpsb
fistpl
inc
fisubl
bound
sub
loopne
dec
rcrb
dec
mov
xor
mov
or
mull
or
mov
cmpsl
mov
inc
sbb
and
scas
dec
dec
jnp
jno
jp
mov
fsubs
sti
cmc
push
or
dec
or
and
lods
mov
pushf
inc
jle
test
outsl
shr
xchg
and
sub
loope
push
and
cmp
mov
shl
push
arpl
sahf
adc
cwtl
pop
sub
push
out
fdiv
or
aam
and
lret
mov
mov
sub
sub
fistps
pop
mov
mov
jbe
cmp
rclb
cmpsb
rclb
out
aaa
jo
ret
mov
repnz
fstpl
icebp
and
cmpsl
mov
repnz
cmpsb
lret
test
shl
mov
notb
add
out
jne
dec
gs
push
ret
sbb
jnp
sahf
push
mov
add
outsl
movsb
mov
sub
pop
inc
call
or
jo
dec
adc
mov
ds
pop
ja
test
cmp
neg
loope
js
dec
cs
cmc
mov
rcrb
and
hlt
iret
dec
mov
adc
pop
or
xor
xorl
inc
inc
dec
in
xor
fbld
or
cli
jb
into
jae
jl
pop
imul
repnz
sbb
push
cmp
adc
iret
orb
pop
arpl
iret
push
cwtl
and
orb
mov
inc
dec
xor
push
dec
push
jbe
icebp
inc
pop
aam
mov
movsl
shl
dec
jg
mov
add
test
xor
aas
stc
sub
cwtl
cmpsl
and
out
push
sti
mov
jne
je
fcom
insl
pushf
pop
andb
test
mov
mov
lods
cmp
leave
pop
mov
pop
aad
inc
loopne
ret
rcll
mov
cmp
xor
fildll
pusha
pop
out
sbb
push
mov
out
aaa
xchg
xor
mov
or
pusha
jns
sub
sbb
sbb
sti
sub
push
sbb
mov
sub
jp
subb
cmp
xchg
lahf
adcl
call
mov
add
and
jg
and
into
mov
cli
scas
shr
cmp
in
adc
insl
add
push
jecxz
inc
cmc
mov
in
jo
js
iret
jl
sbbl
mov
addr16
out
jge
enter
fdivp
rcr
cld
shlb
dec
outsl
xlat
xor
dec
sbb
inc
cmp
sbb
mov
pop
mov
cmp
rcrl
popf
stos
sbb
pop
mov
leave
cmpsb
addr16
mov
fisttps
idivb
mov
shr
pop
mov
pop
in
dec
cs
es
add
movsb
movsl
and
and
mov
or
mov
fbld
lods
mov
sbb
cmp
pop
push
add
out
or
sahf
aaa
push
fstps
gs
addr16
and
ret
mov
in
pop
loopne
orb
les
out
cmp
lahf
addr16
lds
adc
adc
divl
in
fbstp
inc
adc
pop
lcall
fistps
loop
push
lea
mov
jge
repnz
adc
jne
hlt
sbb
adc
test
lods
inc
jl
mov
repnz
roll
js
popa
mov
stos
dec
xchg
jp
mov
or
lret
insl
hlt
loop
dec
hlt
push
bnd
cmpsl
cmp
das
iret
movsb
jle
dec
pop
push
add
xor
push
repz
loop
mov
lea
xchg
iret
jl
and
adc
fisttps
adc
adc
data16
mov
add
push
addr16
outsb
sub
aas
and
scas
mov
int3
jae
in
out
sbb
mov
pusha
nop
cli
cmpsb
cmp
lock
call
dec
icebp
xor
inc
cwtl
inc
mulb
in
stos
mov
sub
cmp
inc
scas
shr
cmpsb
adc
jno
mov
int
add
xor
or
stos
mov
stos
dec
arpl
mov
shll
decl
repz
gs
in
mov
popa
jns
mov
push
je
leave
add
push
mov
out
testb
shrl
xor
fiadds
stos
rcll
sub
pusha
cmp
xchg
lcall
lcall
out
sti
sub
xor
popf
push
mov
or
push
push
aam
jne
jp
in
jbe
out
outsb
xor
ficoms
inc
pop
jg
dec
cmp
push
icebp
dec
dec
mov
jmp
push
hlt
jle
push
daa
jl
mov
ret
fwait
repnz
shl
aas
or
xchg
icebp
adc
loope
fisubs
fidivrs
lahf
aad
test
addr16
arpl
cmp
sub
aam
js
pop
mov
jle
dec
mov
and
fucom
fisubs
pop
loopne
or
imul
inc
int3
jg
out
dec
cwtl
xor
popf
movsl
jnp
pushf
mov
inc
rcrl
arpl
mov
addr16
jmp
stos
loope
push
xor
in
fistps
shlb
mov
sti
enter
pop
scas
in
test
mov
xchg
in
or
popa
mov
mov
mov
add
into
movsb
ret
pop
rcr
test
dec
call
hlt
sub
mov
jno
iret
dec
cli
cmpsl
jb
xor
leave
rolb
scas
xor
aaa
out
xchg
jg
lret
xor
mov
push
sub
fcomi
adc
and
daa
in
test
mov
cld
out
or
outsb
negl
mov
jp
rcll
mov
fisubrs
mov
push
inc
int3
test
add
into
dec
dec
pushf
jp
xor
jp
xchg
mov
inc
pop
add
mov
inc
popf
push
stos
out
push
out
jae
add
loop
ss
lds
insl
or
mov
repnz
dec
pop
call
in
fucompp
cld
jle
das
rorl
add
lret
pop
popf
mov
xor
cmp
add
nop
test
lcall
jp
addb
arpl
jp
mov
sahf
out
movsl
in
scas
jp
nop
inc
xor
xchg
cmp
and
push
sbb
cmp
adc
fdiv
push
jae
arpl
sti
sub
xor
pop
cmpsb
xchg
or
cmp
iret
daa
mov
scas
pop
test
pop
jnp
push
add
cltd
mov
fadd
dec
sub
pop
mov
subb
imul
pop
jmp
or
es
negb
cmp
popa
setp
jp
mov
mov
daa
stos
push
push
pop
adc
lods
push
rcrl
adc
or
add
mov
scas
imul
fwait
mov
shll
jecxz
arpl
std
jl
insb
test
fldcw
frstor
ljmp
adc
aad
jae
out
clc
xchg
add
push
mov
add
adc
pop
insb
je
and
loope
dec
cmpsl
or
adc
xor
sub
jb
in
jbe
ficomps
out
in
movsl
push
jne
clc
push
lret
xlat
in
pop
lock
insl
sub
out
scas
popf
mov
mov
ja
outsl
push
aam
out
imul
push
popl
in
mov
xchg
fsubr
pop
scas
sbb
jmp
fucom
stos
pop
fimull
mov
int
xchg
out
sarb
insl
mov
sti
push
mov
xlat
push
lahf
and
es
inc
mov
je
cli
inc
pop
fmull
lret
jo
mov
test
cmp
mov
nop
repz
out
xchg
pop
lcall
sahf
mov
outsb
in
jle
aaa
insl
jae
mov
lds
jb
iret
or
into
pop
aad
push
push
cmp
xlat
fwait
mov
mov
dec
mov
pop
out
mov
mov
inc
movsb
into
imul
insb
enter
movsl
mov
lock
rcr
stc
push
mov
fsubrl
and
shll
jne
dec
adc
push
ja
movsb
mov
mov
lcall
push
orb
out
and
and
pushf
decb
femms
stc
jmp
ss
sbb
mov
push
scas
lock
jmp
pop
repz
inc
lds
cmc
mov
mov
fcmovbe
punpckhdq
adc
jae
push
and
mov
cmp
aaa
test
andl
insb
popa
aas
mov
enter
xchg
inc
and
dec
adc
or
fs
loop
push
ret
jno
sarb
jmp
test
sub
inc
add
aas
mov
mov
push
dec
xor
gs
aas
call
mov
pushf
mov
jecxz
inc
enter
shlb
shr
cmc
sbb
fistl
jle
cli
inc
xor
cmp
inc
int3
in
movsl
xchg
lods
cmp
rcl
sub
aad
imul
aaa
push
sbb
pop
shl
fcoms
insl
stc
lock
push
lahf
push
mov
cwtl
sub
jnp
cltd
lods
adc
jnp
dec
pop
dec
adc
sub
stc
stos
mov
push
enter
add
enter
pop
orl
sub
push
cmpl
cmp
cmc
jns
mov
shlb
or
xlat
jge
imulb
aaa
sub
mov
cli
fcmovnu
cmc
or
xchg
jo
popa
inc
mov
xchg
sbb
repz
cmp
mov
lahf
into
push
insb
adc
push
cmc
das
xor
test
repnz
mov
rcrl
mov
pop
dec
cmc
fnstsw
sti
add
sub
mov
mov
xchg
in
fs
addl
fwait
jecxz
pop
jns
imul
out
cmpsb
xchg
push
gs
idivl
mov
jnp
or
enter
and
in
xchg
repz
jge
std
aaa
ja
mov
std
lods
dec
js
test
leave
jmp
lret
or
in
sbb
pop
xchg
sub
leave
xor
cmp
mov
inc
test
push
insb
or
iret
stc
jle
movsb
iretw
or
jbe
out
mov
aaa
cmp
push
xchg
pusha
into
xlat
jl
hlt
inc
inc
daa
insb
mov
xchg
pop
jg
pop
jmp
icebp
pushl
mov
imul
nop
pop
jne
das
lret
sarb
mov
push
shrb
dec
sbb
sbb
add
mov
lods
inc
aaa
add
int3
xor
pop
outsb
mov
scas
xchg
adc
aad
and
dec
fcompl
sbb
mov
aad
scas
cmp
into
enter
cmovbe
popf
mov
pop
pop
out
mov
imul
imull
in
mov
xor
push
negb
or
scas
sti
aas
int3
push
or
adc
ljmp
repnz
mov
pop
add
stos
dec
jp
loopne
loopne
je
cmpb
hlt
push
in
int3
sbb
inc
test
hlt
les
std
push
or
movsb
call
push
mov
fists
aaa
test
aas
mov
imul
addb
inc
mov
and
lret
in
push
and
imul
add
mov
and
negl
cld
ja
xchg
bsr
xchg
loope
call
jne
pop
adc
jmp
xor
andl
inc
in
sbb
dec
add
pop
xchg
mov
iret
shll
pop
js
lret
sti
push
enter
in
stc
gs
mov
xor
push
cmp
mov
rorb
jl
test
aaa
pop
scas
and
outsb
or
push
push
shrb
mov
addl
add
xor
mov
push
mov
push
loopne
xor
xor
add
jno
pusha
pop
inc
jno
push
adc
add
jl
push
loopne
loop
xchg
es
sub
xor
add
sub
or
cs
inc
je
push
sbb
xchg
fimull
sub
clc
dec
jecxz
dec
cmp
push
std
mov
push
and
mov
sub
addr16
inc
clc
cmpsb
andb
imul
xor
repnz
hlt
xchg
orb
pop
jb
add
pop
sbb
sub
xchg
or
mov
cmp
dec
lcall
cmp
pop
add
adc
lods
test
mov
imul
mov
out
stos
jl
or
jecxz
pop
mov
sub
push
push
call
jle
sbb
jle
mov
mov
leave
cld
scas
mov
sub
jns
leave
or
or
xlat
or
cmp
push
mov
pop
push
xor
pop
xor
and
dec
call
pop
mov
xor
push
sub
in
test
push
ja
lret
mov
mov
push
sbb
add
imul
xchg
lds
stos
cvtpi2ps
movsl
aad
out
and
andl
jnp
rcrl
test
bound
call
dec
movsb
shlb
cmc
bound
je
add
aas
nop
ret
push
mov
addr16
and
mov
inc
mov
andb
cmp
and
leave
push
xor
andl
insl
add
mov
cmc
push
sub
xchg
inc
cmp
lcallw
test
int3
test
imul
adc
cmpsb
sub
inc
in
ja
sbb
push
mov
mov
dec
cld
inc
shl
push
mov
sbb
push
aad
jb
xchg
add
test
dec
mov
and
mov
inc
jmp
cmp
fsub
divb
or
lods
imul
faddl
xchg
pop
mov
xor
jecxz
push
mov
pusha
and
pop
adc
gs
icebp
int3
cltd
push
imul
das
daa
lret
mov
leave
jecxz
mov
inc
fidivs
rorl
cmp
repnz
adc
inc
pop
fsubs
clc
lods
outsb
inc
icebp
bound
scas
inc
mov
pop
lahf
jmp
imul
pop
sbb
mov
loopne
subl
mov
sbb
or
pop
es
dec
adc
jge
xor
testb
data16
pusha
lods
push
popa
in
mov
movl
cmp
adc
cld
push
clc
leavew
inc
movzbl
pushf
popf
xchg
repnz
push
adc
and
push
cmc
or
xchg
aad
add
mov
aad
sarl
sbb
lds
lods
push
int3
in
adc
rcll
jne
and
push
test
and
or
fistpll
popa
push
negb
jmp
push
xchg
dec
sarb
dec
ss
or
or
das
sub
mov
icebp
inc
nop
mov
lea
test
movsl
clc
into
sbb
push
cld
mov
out
mov
popa
fstpt
sbb
lods
ud2
sub
movsl
rolb
xchg
adc
cld
out
pusha
push
push
xchg
aaa
jp
lcall
inc
mov
cmp
cmpl
fnstcw
adc
and
stos
xor
push
xor
adc
lea
andb
adc
and
xchg
or
xlat
test
cltd
push
adc
xor
xchg
dec
mov
mov
aaa
mov
dec
push
aaa
inc
and
jnp
in
jns
test
inc
push
inc
cmpsl
cmp
dec
cltd
or
mov
sub
pop
mov
xchg
sbb
push
popf
xor
push
stos
roll
mov
xor
addb
push
scas
lods
cli
mov
test
xchg
adc
cs
mov
and
lock
arpl
inc
xchg
clc
add
dec
loop
mov
ret
mov
cs
arpl
jge
in
cmc
jb
pop
pop
test
dec
out
pop
mov
sbb
jle
lods
adc
in
mov
dec
jb
mov
pop
std
mov
outsb
pop
test
xchg
mov
addl
int
and
int
in
push
cli
cmpsl
hlt
push
mov
lods
pop
enter
gs
and
scas
xchg
add
daa
inc
cmc
mov
addr16
pop
xchg
push
mov
dec
call
jmp
push
inc
hlt
mov
sbb
dec
addr16
mov
bound
push
xlat
jmp
es
mov
pop
lret
movsl
and
ret
sbb
dec
mov
cwtl
cmp
push
adc
cltd
daa
xchg
mov
inc
pop
jge
cs
or
psrlq
hlt
cmpsb
push
mov
inc
ret
cmp
popf
xor
mov
lods
dec
xchg
mov
mov
and
cmp
fmuls
inc
ret
sub
lret
pop
jl
xor
data16
lds
lods
lock
add
insb
jmp
mov
push
and
add
xor
cmp
adc
add
jl
jnp
shll
inc
or
mov
insl
push
and
xchg
mov
mov
fs
jae
aad
push
inc
sub
mov
add
jecxz
and
cmp
nop
sbb
outsb
ret
jge
repnz
loope
mov
inc
adc
push
rorb
fiadds
lods
stos
or
mov
ds
jmp
mov
pop
lret
fistps
jno
cld
mov
jb
mov
sub
push
clc
scas
mov
sub
and
fildll
cmp
das
mov
pop
pop
aam
xchg
ret
movsl
flds
jbe
inc
xchg
add
fs
xor
xor
mov
iret
xchg
rorl
push
pop
pop
dec
popf
jmp
xor
xchg
push
dec
push
nop
xorb
pop
insl
push
call
sahf
dec
push
arpl
cltd
push
lea
icebp
pop
pop
dec
add
stos
repz
push
sbb
repnz
test
cld
andb
fldcw
sbb
test
mov
sub
jbe
leave
shll
out
pusha
out
jns
lcall
sub
ret
xchg
or
stos
adc
adc
xor
pop
mov
and
repnz
scas
push
loopne
ret
dec
call
adc
daa
jns
pop
in
sbb
mov
test
push
push
lock
cmovae
jae
cwtl
xlat
mov
dec
call
bound
add
lock
sbb
cmovae
xor
ljmp
pop
aaa
adc
add
pop
add
test
lods
push
scas
mov
and
inc
push
cmp
pop
jne
inc
xchg
out
incl
es
into
push
sub
bound
mov
out
cmpsb
pop
dec
xadd
inc
mov
mov
jp
jge
enter
movsl
mov
nop
scas
jnp
xchg
jae
ds
imul
jl
das
sub
sbb
cltd
xor
out
scas
xchg
dec
fs
sub
iret
push
lods
repnz
mov
or
mov
cmp
cltd
jmp
or
orl
pushf
cmpsl
xchg
adc
dec
sub
bound
add
enter
test
mov
lock
call
pop
pop
out
mov
xchg
js
scas
fcoms
inc
testl
orl
mov
aaa
in
adc
mov
cli
out
sarb
divl
push
loope
xor
movsb
xchg
xor
adc
in
repnz
cli
dec
pop
mov
loop
clc
xchg
lmsw
hlt
or
dec
cmc
lret
ficoml
push
pop
lods
int3
adc
xchg
mov
and
inc
jo
pop
shll
mov
int
jp
movsb
loop
cld
sbb
jae
ficoml
mov
xchg
dec
je
in
xlat
aaa
add
in
aad
pushf
out
push
adc
fstps
adc
fldenv
repnz
aas
je
pop
movsl
pop
stc
dec
xor
mov
pushl
mov
add
test
daa
outsb
fisubrl
int3
push
negb
test
and
jns
popa
add
mov
adc
mov
push
pop
inc
hlt
test
test
dec
addr16
stos
mov
mov
rorb
xchg
and
xor
adcb
imul
pop
outsb
mov
repnz
ja
xor
push
loopne
or
sub
arpl
fs
push
mov
mov
mov
mov
lret
movsl
push
xor
lcallw
cmc
dec
outsb
sbbl
mov
icebp
lcall
out
xor
xchg
mov
push
insb
inc
sbb
scas
mov
mov
add
jecxz
inc
push
jne
jae
sub
ror
aad
push
shrb
mov
jp
out
cmp
jp
pushf
lret
add
imul
xor
js
inc
mov
sub
adc
clc
xchg
xor
int
addr16
in
push
out
mov
push
cwtl
rclb
int3
adc
and
or
sti
stc
cld
imul
push
imul
add
pop
dec
pop
or
testb
mov
push
sub
sub
loopne
inc
push
push
xlat
stc
mov
or
cmp
into
andl
nop
cmp
mov
imul
jp
movsb
mov
sbb
or
cld
add
pop
pop
add
and
dec
sub
out
movsb
rcll
daa
loop
aaa
inc
dec
out
dec
jns
adc
sbb
imulb
mov
or
mov
xor
dec
adc
cmp
pop
pushf
and
and
out
sub
cmp
push
push
pushf
les
xor
rorl
imul
sub
xchg
mov
xor
insl
icebp
paddd
sbbl
mov
add
inc
addr16
aas
mov
movsl
es
push
sbb
jle
rcrl
in
out
dec
lret
cmp
xor
test
insb
mov
fwait
ret
cli
pusha
push
loop
test
pop
pop
push
ret
pop
mov
xchg
movsb
inc
bound
subb
enter
cs
cwtl
push
pop
stos
xchg
add
in
repnz
push
sub
adc
mov
mov
push
das
rorl
sbb
stos
sarb
add
adc
daa
xor
cmp
movsl
mov
je
dec
jne
leave
jo
jb
add
sub
and
sbb
and
dec
sbb
imul
inc
popa
aad
lods
adc
inc
popa
push
mov
testl
mov
inc
adc
mov
out
jl
and
mov
cld
add
jg
cltd
lret
or
shlb
dec
insl
fwait
dec
es
int3
int
add
mov
add
sub
enter
lods
push
cmpsl
xchg
inc
stos
pusha
sbb
mov
rcll
mov
jl
xchg
fwait
add
pop
rcll
mov
aad
pop
lret
mov
dec
push
mov
sbb
leave
pop
cs
pop
sarb
mov
cs
ljmp
or
js
inc
adc
mov
xor
sbb
les
les
cwtl
mov
mov
lods
inc
xchg
and
add
and
mov
rolb
scas
leave
call
cli
xor
mov
stos
push
jb
xor
cmc
and
ja
adc
cwtl
loopne
cs
sahf
fwait
mov
mov
pop
sbbl
mov
inc
add
sbb
popa
into
lahf
in
jg
subl
xchg
aam
popa
adc
sub
cld
or
jg
shlb
dec
mov
xlat
pop
add
or
push
dec
cmpsl
aaa
mov
jp
and
aaa
dec
push
pop
hsubps
cs
dec
rcll
sub
xchg
add
jo
cmpsb
and
dec
imul
mov
pusha
arpl
out
and
cmpsl
filds
dec
sub
xor
test
orb
pop
sbb
dec
mov
mov
mov
outsb
push
dec
cli
lret
lods
xor
movsb
lcall
pop
jl
push
or
pop
sbb
cwtl
jae
jns
cs
cli
hlt
sub
jp
inc
dec
sbb
out
mov
sbb
ds
scas
lods
or
xor
sub
sub
jl
dec
sub
lret
xchg
pop
sbb
std
xor
sarb
xor
sbb
int3
mov
pop
roll
or
mov
sbb
loopne
fcoms
cltd
jns
js
popa
dec
and
mov
jecxz
repz
outsb
ret
mov
in
xor
subl
push
fnstcw
adc
jae
rclb
imul
xor
dec
fnstenv
lcall
mov
fisubrs
fisubrl
lcall
mov
int3
ficoms
mov
dec
fsts
fildll
or
rcll
orl
pop
dec
cmp
stc
popa
aam
add
cld
pop
stos
pop
pop
mov
xchg
cmpps
jg
fwait
jle
pop
inc
dec
xor
dec
jmp
mov
adc
mov
push
cld
jge
hlt
icebp
and
push
outsl
clc
push
cmp
lea
jp
mov
push
ret
jns
mov
lret
movsl
repz
ret
cwtl
fwait
je
out
xor
cmpb
add
mov
jp
in
aam
enter
testl
jp
inc
es
adc
cld
cmp
cwtl
lea
adcl
das
sbb
or
fnsave
jnp
sbb
jnp
in
jne
rorl
sub
or
adc
and
in
jo
lods
sub
xchg
popf
popa
pushf
ds
adc
arpl
repnz
mov
jbe
test
sar
mov
not
push
and
mov
push
lods
sub
inc
jo
mov
mov
mov
arpl
xchg
sbb
int
lret
test
loope
adc
mov
or
lods
pop
lcall
mov
movsl
repnz
or
movsl
jl
dec
and
mov
in
popf
out
popa
out
leave
cmp
adc
inc
adc
repnz
adc
add
or
xchg
test
hlt
lret
out
icebp
dec
push
jo
test
ds
in
mov
out
mov
dec
ds
or
push
cmp
dec
aad
pop
xor
repz
pop
std
popa
cmp
push
mov
and
pop
in
mov
push
cmc
xchg
sub
xchg
push
aam
or
popa
pop
ja
fsts
ss
out
push
and
and
ljmp
push
in
sti
mov
sub
add
dec
fmuls
jnp
sbb
in
orb
js
pushf
rolb
mov
dec
scas
outsl
loope
subb
pop
fwait
cltd
pop
mov
and
in
hlt
stos
shl
fcoml
jb
or
inc
pop
adc
mov
js
js
cmp
pop
std
mov
jecxz
jb
cli
dec
sbb
pop
imul
shlb
pop
inc
outsl
movb
add
and
mov
mov
pusha
cmp
pop
test
in
inc
hlt
and
leave
xchg
and
mov
mov
sbb
mov
imul
xchg
sbb
loope
inc
add
aas
mov
xchg
cmp
sbb
xor
es
dec
lret
xchg
dec
fstpl
lds
clc
and
jbe
in
mov
scas
jbe
sbb
add
ds
pop
inc
pop
sbb
iret
stos
mov
lods
inc
shlb
lret
test
sub
sbb
cli
clc
cli
lock
imul
cmpsb
or
sbb
bound
jle
out
shlb
or
sbb
mov
into
out
add
scas
nop
aad
mov
aaa
fidivrl
cmp
or
xchg
out
cs
mov
lods
lods
pop
sbb
jl
xchg
sbb
and
cmp
out
call
or
jge
lret
cmp
lods
out
insl
faddp
aam
leave
or
leave
xor
test
dec
adc
fiaddl
pushf
dec
push
mov
aad
or
dec
lret
adc
add
mov
mov
popf
push
and
xlat
hlt
adcb
arpl
insl
ja
mov
pusha
jnp
dec
loope
add
leave
sti
add
stc
das
stos
mov
xor
sub
jno
mov
cmpsb
mov
arpl
je
and
fs
xlat
scas
fldcw
fistl
mov
pusha
stc
inc
or
hlt
pop
imull
in
or
inc
xor
jle
sub
push
fcoml
mov
bound
cmpsl
mov
pushf
arpl
sti
inc
xchg
out
push
or
pusha
fs
xchg
enter
adc
std
or
test
nop
leave
ficoml
xchg
out
imul
mov
xor
mov
cmp
push
lahf
mov
sub
out
popf
shlb
icebp
fwait
dec
aad
loope
adc
cld
add
dec
mov
movsb
dec
call
scas
out
or
aam
stos
xchg
daa
idiv
lods
imul
mov
jmp
enter
test
dec
and
mov
data16
fdivl
push
dec
push
inc
push
or
cmpsl
cmp
ret
xchg
xlat
cmpsl
sti
jno
stos
jnp
cmp
div
in
mov
adc
cmc
xor
popa
pop
cmpsb
mov
insb
mov
inc
loope
int
je
test
pop
sub
cmp
aam
out
or
enter
iret
and
sub
call
jno
imul
pushf
add
push
xchg
and
popa
aaa
aad
insl
push
sub
je
cwtl
stc
fidivl
enter
insb
int3
lahf
push
clc
push
daa
cmp
lahf
es
mov
push
inc
dec
mul
lea
into
cmp
push
push
dec
inc
mov
test
repz
stos
ja
inc
daa
jbe
jmp
dec
xchg
jmp
add
push
or
rorl
fwait
and
pop
pop
push
int3
imul
call
pop
je
loopne
imulb
or
ret
stos
jb
fidivl
or
das
mov
jp
lods
cmpb
add
icebp
negb
pop
sbb
mov
fwait
xchg
gs
inc
inc
mov
hlt
inc
jb
flds
les
and
jle
lret
fdivrs
sub
xor
push
jp
or
popf
mov
nop/reserved
scas
mov
sub
int
ljmp
imul
call
push
pop
andl
mov
dec
scas
fmuls
or
jnp
inc
cmp
mov
sarb
jns
call
xlat
ja
push
sub
cmp
imul
jb
shl
xor
dec
aam
xor
fs
in
std
xchg
cli
sbb
scas
ja
pushf
mov
stos
lret
hlt
pop
rep
adc
lahf
cmpsl
bound
xchg
pop
leave
stc
and
call
std
add
inc
lods
out
sub
inc
popa
push
xor
dec
scas
add
js
out
pusha
aad
xor
lock
pusha
fdiv
lock
icebp
push
add
insl
sbb
daa
roll
adc
sub
rep
sti
and
jg
shl
sub
mov
inc
in
pop
sti
and
scas
jmp
test
js
jno
adc
mov
pop
testb
dec
xor
mov
ja
inc
leave
dec
iret
nop
enter
mov
sub
jle
xchg
out
fistpll
sbb
push
jl
xor
mov
pop
arpl
lock
cmp
popa
pop
imul
bound
and
stc
in
adc
mov
xor
jle
rcll
cmpl
mov
jecxz
fbld
aam
cmp
add
into
loop
sub
sub
repz
xchg
insb
pop
out
aas
adc
cmp
sub
cmp
je
movsb
push
outsl
or
mov
dec
les
mov
popa
mov
in
mov
sub
sub
jecxz
lret
in
jg
icebp
push
aad
xchg
fsubp
repnz
mov
iret
dec
jge
insl
aas
leave
fcoml
imul
sbb
sbb
out
xor
push
lock
aam
xchg
shr
aad
sbb
and
sub
mov
xchg
xchg
das
xchg
pop
dec
inc
jecxz
ja
jbe
in
mov
mov
and
pusha
scas
das
xor
shll
insb
ds
pop
into
out
or
mov
mov
sub
cs
out
test
mov
testb
cmpl
sbb
repz
jmp
sbb
lds
cltd
vcvtsd2si
icebp
xchg
jns
add
push
jge
xlat
jo
pop
pop
pop
mov
enter
inc
mov
inc
jmp
cmc
mov
lods
sarb
inc
scas
notrack
lcall
sbb
movsl
mov
sbb
repz
mov
or
fstp
fcmovnbe
mov
hlt
mov
lods
fwait
push
push
daa
jo
leave
in
in
dec
les
push
inc
or
pushf
icebp
push
fisubs
pop
popf
jne
loop
pop
lea
mov
aaa
xor
xor
fcmovnb
sub
push
pop
mov
rcl
in
mov
lock
sub
int
repz
rolb
or
mov
call
pop
or
push
xchg
std
add
sub
fucomip
push
xchg
and
push
divl
stc
pop
arpl
mov
xchg
pop
test
je
dec
jge
sti
xchg
cli
lods
inc
push
pushf
iret
lcall
push
sub
inc
inc
rclb
sub
inc
ficoml
sbb
sub
lret
push
testb
lds
inc
ja
lcall
cltd
sbb
mov
data16
call
or
add
mov
dec
scas
in
sti
sub
aaa
ja
lods
addr16
lcall
or
add
filds
mov
pop
movsb
into
xor
lods
sti
cli
push
scas
xorl
jmp
mov
sbb
ss
jnp
sbb
negb
es
push
mov
dec
fcompl
sub
mov
mov
or
xchg
cltd
fsubrl
mov
inc
sbb
das
push
pop
je
xchg
sbb
xor
pop
inc
push
jns
cmp
xchg
inc
popf
dec
fwait
xchg
mulb
pop
out
jge
or
out
fmuls
or
lahf
mov
xchg
imul
or
mov
xlat
sbb
jae
jae
out
pop
cmp
stos
sbb
aas
cmpsb
orb
inc
sbb
mov
fcoml
mov
inc
arpl
cwtl
sbb
add
outsl
mov
cmpsl
sbb
push
xor
stos
int
mov
jo
pop
scas
imul
push
in
dec
enter
aaa
ret
mov
adc
cs
push
dec
fidivs
daa
sub
repz
adc
jnp
arpl
lahf
mov
sbb
add
dec
lretw
adc
push
or
sbb
pop
or
xor
push
test
pop
in
or
leave
or
xor
les
push
xor
pop
mov
dec
pop
pushf
cmp
sub
jno
test
mov
and
push
adc
xorb
in
jecxz
cmpsb
xchg
fstpl
in
aad
sbb
xchg
out
dec
xchg
lods
push
mov
cs
popa
pop
stos
iret
or
mov
cmp
lock
xchg
mov
xchg
xchg
sbb
pop
cmc
dec
into
or
lret
lock
into
sbb
out
inc
pop
test
aaa
push
and
and
pop
arpl
iret
mov
xchg
daa
into
pop
mov
adc
sub
lods
mov
daa
sub
stos
xor
rcl
inc
and
mov
mov
fbstp
xchg
push
insb
xor
lret
stc
sub
out
jl
or
or
gs
mov
xorb
jp
ret
dec
inc
ss
and
call
jo
mov
adc
frndint
sbb
pushf
adc
lods
cwtl
jl
inc
mov
rcrl
lock
jns
jbe
jecxz
test
sti
lea
mov
sahf
mov
aas
enter
fs
push
loope
inc
enter
pusha
cmpsb
enter
jge
mov
movsb
lret
add
loopne
jmp
call
xchg
movsb
out
data16
jge
push
mov
cmpsl
or
imul
andl
repz
scas
push
lahf
repz
shrl
std
test
adc
jno
ret
mov
imul
arpl
push
xor
xor
repz
ret
xchg
push
stc
push
mov
or
out
jnp
jmp
fsubs
ret
mov
jo
add
sahf
jl
jbe
push
lret
xlat
mulb
mov
sbb
pop
mov
neg
decl
add
mov
sahf
cli
cltd
insb
in
int
mov
mov
jl
mov
mov
cmp
mov
ret
pusha
pop
push
xchg
nop
mov
mov
jmp
divl
imul
orl
mov
ror
lock
lcall
sbb
add
xlat
sti
inc
jns,pt
cvtps2pi
cmp
into
ret
pop
sbb
lret
sub
add
test
pusha
xlat
clc
adc
pop
cmp
testb
ror
movsb
and
movsl
mov
sub
hlt
scas
cmc
icebp
mulb
dec
jecxz
pushf
test
pop
lock
pop
sub
inc
xchg
inc
call
pop
loope
ret
xor
lds
jne
mov
sub
adc
jle
and
imulb
and
movl
add
pushf
sbb
xor
bnd
add
push
mov
mov
pusha
dec
adc
or
dec
xchg
cli
rorb
or
pop
test
jle
cmp
mov
push
loope
movsl
mov
loop
orb
mov
and
jae
ljmp
add
sub
arpl
lock
repz
pop
mov
jno
ja
loope
push
inc
je
and
lods
mov
sub
repz
or
icebp
loopne
adc
add
mov
nop
testl
loopne
int
pop
mov
stc
inc
fsts
xchg
bound
lock
out
or
test
addr16
mov
or
cmp
add
jae
ja
icebp
pop
je
aam
xchg
loopne
push
repz
shll
lds
sbb
pop
or
jbe
add
dec
add
jns,pt
scas
test
std
sbb
cmp
jle
push
cmp
inc
jo
subb
cmp
faddl
fidivs
xor
arpl
sbb
lods
fstl
push
out
imul
adc
xor
mov
scas
inc
jnp
pop
addr16
pusha
mov
pop
les
cmp
mov
mov
sub
xchg
int
pop
and
test
lret
or
ficompl
cmpsb
inc
in
mov
or
ja
dec
dec
out
test
mov
repnz
xlat
mov
fstpt
pop
addr16
es
lds
pop
cltd
faddl
mov
mov
or
cmpsb
cmp
or
mov
loope
push
sub
jnp
xor
mov
cmpsl
inc
pop
push
outsb
pop
inc
jmp
int3
xchg
add
pop
pop
cmp
mov
mull
mul
rcll
mov
out
stos
out
jne
sub
rcll
inc
or
pop
mov
movsb
in
test
pop
shlb
and
mov
adc
or
scas
cmp
and
xor
frstor
mov
divl
xor
out
xchg
clc
call
rol
scas
mov
mov
push
or
pop
xor
and
cmpsl
clc
sub
jne
xor
mov
mov
add
lret
or
repnz
push
dec
mov
inc
adc
subb
fucomip
inc
xlat
int
add
insl
punpcklwd
cmpsb
call
push
adc
inc
aam
jno
push
outsb
xchg
mov
stc
jecxz
xor
pop
push
out
imull
js
sub
test
push
ficomps
pop
inc
sahf
js
loope
or
cmp
ds
adc
or
das
sbb
out
mov
stc
enter
push
cltd
xchg
adc
div
js
or
xchg
push
shrd
sub
js
push
sub
popf
aad
js
fs
and
jno
xchg
sbbl
xchg
sbb
int
stc
mov
inc
push
jne
push
in
int3
jg
and
xor
ss
dec
adc
aam
sub
lahf
and
aaa
bound
clc
ret
icebp
in
add
lods
mov
push
xor
push
jne
cs
mov
movsb
mov
adc
pop
in
lcall
fimuls
shl
xorb
je
inc
and
pushf
arpl
mov
sbb
out
sar
jns
adc
aam
jno
fiaddl
xchg
flds
or
std
mov
dec
stos
jb
inc
push
mov
xchg
stos
jne
mov
into
scas
shll
ss
push
nop
cwtl
sub
xor
sbb
in
push
mov
loopne
movsl
push
frstor
iret
scas
iret
int
adc
stos
cmp
cmp
lods
jecxz
scas
sbb
mov
adc
adc
add
test
test
mov
inc
mov
subb
out
arpl
xchg
pop
inc
dec
loop
mov
fcompl
int
push
mov
cmpsb
shlb
dec
mov
sahf
lea
mov
mov
jecxz
add
mov
add
es
icebp
add
cltd
add
sahf
std
mov
jg
iret
xchg
mov
jo
xchg
push
or
call
pop
int
hlt
or
xchg
lret
js
ja
push
push
ljmp
xchg
mov
xchg
and
or
test
outsb
jmp
mov
add
jno
dec
imul
aas
mov
mov
mov
pop
dec
daa
adc
bound
outsl
or
adc
sub
imul
je
mov
pop
and
addr16
mov
dec
push
rorb
outsb
push
lret
popl
xchg
jg
dec
mov
aam
sub
icebp
das
shrb
mov
andb
in
xor
das
jmp
popa
daa
and
cmp
mov
dec
mov
roll
jmp
pop
mov
ret
inc
xchg
cmp
jbe
xlat
test
popa
movsl
jns
insl
repnz
lahf
xchg
mov
pop
daa
push
xchg
mov
aaa
nop
xchg
push
popa
xor
pop
push
adc
sbb
sbb
arpl
or
jbe
mov
sarb
cmovae
lock
mov
add
push
push
jae
xchg
mov
mov
mov
icebp
lods
pop
mov
fstp
mov
xchg
es
fcmovnu
loope
cmpsl
mov
ret
sarl
pop
xchg
imul
fcmovne
pop
adc
xor
push
daa
pop
jns
pop
pop
aam
xlat
pop
in
xor
inc
xchg
mov
outsb
lahf
cwtl
js
enter
pop
or
mov
mov
fucomip
mov
pop
dec
add
mov
xor
jbe
add
andb
push
mov
dec
push
testl
shlb
add
cmc
in
cmpsl
or
sub
xchg
loope
adc
adc
pop
mov
mov
push
sub
xchg
jb
sti
inc
shlb
movsb
fisubl
pop
outsl
pop
jmp
shlb
adc
sub
and
cmpsl
push
inc
mov
subl
push
mov
in
cmp
iret
add
ss
jno
pop
jl
cmp
xlat
fiadds
jno
xlat
mov
pusha
loop
jo
in
dec
push
jae
push
repz
ja
orl
sub
mov
roll
fbld
rorb
mov
mov
loope
pop
jno
pop
sub
jbe
sub
lcall
in
fdecstp
sbb
sub
cld
lret
insb
clc
pop
xchg
jge
jge
add
lahf
mov
fists
jg
mov
push
movsl
lods
cltd
add
jns
ja
stos
aas
push
ret
mov
andb
call
dec
mov
fnstcw
fisttpl
sub
fs
xchg
add
ljmp
ss
inc
sbb
cmc
dec
mov
jge
jne
mov
out
pop
testb
test
xor
and
movsb
jmp
adc
dec
pop
andb
and
out
cmp
shrl
mov
adc
ss
pop
cmp
mov
cmp
scas
add
scas
icebp
push
cwtl
dec
cmp
mov
mov
ja
fidivrl
push
pop
pusha
adc
or
lret
cmp
ret
sbb
sbb
cli
or
cmp
call
dec
imul
or
not
rorb
sti
or
lahf
pusha
and
outsl
inc
dec
mov
xor
subl
fmuls
lods
jno
mov
idivb
or
idivl
mov
mov
call
mov
cli
and
cmc
dec
mov
das
stos
adc
test
inc
test
push
aad
mov
push
push
cs
mov
movsb
bndstx
iret
test
std
out
cmp
pop
inc
inc
lret
inc
nop
mov
adc
push
cmp
add
cmc
xor
jne
setle
inc
sarb
bound
push
add
mov
add
or
outsl
out
cltd
test
cmp
bound
icebp
rcll
mov
popl
lret
push
repz
vpmacsww
push
jne
cmp
stos
orb
pop
je
test
cmpsb
xchg
fldcw
outsl
ret
adc
or
mov
push
sub
or
aas
jnp
daa
inc
cmp
cmpl
mov
mov
xchg
fsubrl
xchg
mov
imul
xchg
fistps
ret
lds
clc
aam
rcll
inc
pop
xchg
mov
push
idivb
sbb
pop
xchg
xchg
cld
hlt
aam
inc
sar
push
mov
test
inc
mov
lock
mov
or
lea
test
nop
push
xadd
imul
hlt
push
cmp
outsl
cmp
and
ds
insb
mov
into
mov
add
mov
jmp
idivb
or
mov
popa
gs
imul
insb
repnz
lock
sub
cmpsb
divl
cmp
in
js
inc
inc
hlt
push
fsubrl
mov
jo
jp
in
or
push
std
cmp
push
pop
in
aas
scas
or
jo
fldcw
dec
jns
xchg
int3
push
sbb
ret
outsl
mov
scas
xchg
inc
and
and
stos
jge
xlat
fwait
fwait
or
and
out
mov
gs
ss
xchg
sbb
push
lods
lods
stos
stc
out
scas
int
or
cmp
push
imul
stc
sarl
xor
sub
pop
cmp
in
ret
adc
push
je
out
jmp
mov
xchg
jno
insb
fmulp
add
sub
add
adc
push
call
fnstenv
sbb
aam
test
or
and
and
sub
lahf
and
inc
pop
pushf
pop
push
scas
ror
sub
int3
xchg
xchg
mov
lods
mov
arpl
out
add
stos
lock
lods
cmpsl
fisttpl
mov
insb
sub
mov
xchg
inc
ss
rcr
and
push
fs
addr16
negb
int
jb
sbb
shll
call
jl
jo
push
leave
inc
cmp
mov
mov
out
sub
dec
in
and
adc
cwtl
cmp
aas
adc
jb
and
sar
shll
repnz
popf
test
add
out
jge
into
or
adc
loop
out
add
ljmp
sbb
xor
and
and
mov
imul
cld
repnz
xchg
addr16
mov
mov
jle
push
push
sar
lea
push
add
sbb
jae
lock
lret
ret
sub
imul
dec
push
out
inc
rorl
pop
mov
push
sub
push
pop
loopne
jo
fidivrs
std
jb
arpl
jno
sub
sbb
mov
repnz
mov
lcall
pop
mov
stos
lahf
xor
stos
test
in
push
dec
cld
mov
aad
jg
xchg
mov
movsb
sub
imul
pop
cmp
mov
dec
call
sub
jo
out
fcomip
push
mov
mov
jp
xor
es
jbe
cmc
xchg
cmp
fucomip
sbb
fnsave
cmp
out
sub
aas
pop
ds
sub
js
shll
shl
sbb
jmp
add
xchg
test
icebp
out
jnp
mov
cmp
mov
div
mov
sbb
adc
xlat
xchg
hlt
ret
call
jmp
mov
iret
add
lcall
pushf
pop
insl
xchg
cmpsb
fiadds
icebp
dec
adc
imul
dec
int3
inc
push
imul
cltd
ret
add
mov
je
iret
inc
jbe
decl
popa
pop
dec
insl
daa
sarl
cltd
adc
xchg
frstor
iret
sub
pop
dec
dec
dec
les
sbb
rcr
mov
and
inc
pop
push
mov
mov
stos
shll
lea
int
out
out
das
pop
add
xchg
ss
popf
pop
lock
outsb
mov
pop
sti
hlt
fimull
add
push
or
adc
mov
mov
cmpl
jg
push
outsb
shlb
push
push
gs
and
xor
lds
ds
xor
mov
pop
popf
cmp
push
stc
cmp
fs
fwait
sub
sub
imul
mov
pop
lcall
xchg
fmul
data16
jno
sbb
and
mov
dec
pop
bound
mov
mull
fst
and
int
enter
mov
jno
and
xchg
xor
nop
in
mov
inc
lock
and
dec
push
jp
into
sbb
add
bswap
aam
xor
pop
mov
gs
addb
pop
mov
xchg
test
lock
lret
inc
cmpsl
imul
pop
sbb
mov
les
or
subl
and
add
jmp
je
in
xor
or
lcall
in
stos
add
adc
jae
lods
test
mov
jp
lret
lret
dec
mov
fwait
pop
pushf
fsts
cmp
lahf
aaa
pop
ss
push
push
cs
cld
lret
add
jmp
or
dec
mov
and
mov
cmp
les
pop
mov
jnp
sarb
jns
int3
imull
fadd
xchg
jno
insl
setne
jle
rcrb
xchg
cmpsl
push
loope
add
ja
cmp
lods
cld
and
xor
add
out
mov
inc
fwait
rcrl
fisubs
dec
scas
mov
mov
dec
push
or
data16
dec
cmpb
jmp
sub
push
or
js
add
cli
orb
mov
pop
gs
ret
jl
fimull
xor
inc
in
rcrl
pushf
addr16
jbe
in
add
cmp
push
insb
push
scas
xchg
lea
adc
lds
mov
xor
pop
cwtl
dec
mov
and
js
pop
xor
sahf
ljmp
mov
call
add
cmpsl
push
filds
jo
sbb
fimuls
push
subb
outsb
test
icebp
call
push
scas
lods
into
push
or
add
push
xor
int
in
jmp
popa
pop
cmp
int3
fadds
ffree
inc
mov
cs
pop
addr16
mov
mov
aam
add
out
or
mov
test
mov
mov
dec
sub
add
or
dec
mov
or
popf
lods
xchg
std
sbb
xor
jae
sbb
mov
movsb
test
jcxz
mov
out
sub
fisubs
xchg
sub
push
mov
adc
popf
add
xchg
xchg
out
cwtl
fistpll
adc
xor
jnp
xchg
mov
lea
pushf
inc
fwait
xor
pop
or
in
ds
add
mov
jae
inc
gs
and
dec
or
mov
pop
cmp
iret
in
sub
stos
jns
mov
imul
mov
es
pusha
shll
mov
mov
add
dec
leave
mov
lret
xlat
sbb
cmp
out
lcall
add
xchg
cmpsl
sbb
in
sub
dec
adc
je
mov
fadds
mov
xor
jl
pop
aam
pop
dec
pusha
mov
std
subb
add
js
push
pop
sbb
sub
adc
pop
aas
mov
mov
testb
fisttpll
push
mov
inc
and
xchg
ss
mov
cmp
in
divb
mov
xchg
and
push
sbb
ss
rolb
cmp
push
push
scas
adc
mov
or
icebp
lea
ret
movsb
xchg
in
and
push
add
and
push
inc
cli
sahf
push
cmp
mov
outsb
sbb
movb
andl
inc
cmpsb
ret
shrb
orl
cli
addr16
repnz
jae
jb
dec
sahf
dec
pusha
or
lret
xor
cmp
addr16
sbb
ds
lcall
sti
out
jmp
outsl
pop
jecxz
gs
shr
enter
lods
mov
loope
mov
in
adc
push
and
and
js
je
mov
stc
out
adc
xor
and
mov
nop
insb
repnz
aas
dec
test
push
fs
scas
aas
jle
inc
jnp
in
jg
xchg
xchg
out
fcoml
mov
into
xchg
dec
fs
js
mov
xchg
addr16
fisttpl
cmpsb
mov
push
xchg
shrb
mov
and
in
ds
pop
add
and
pop
jle
cmp
out
or
inc
mov
gs
mov
inc
popf
sub
sbb
or
test
xchg
push
nop
in
cmpsb
dec
inc
adc
testl
add
push
cli
and
fisttps
jbe
dec
and
mov
cmpsb
xchg
cmpl
add
pushf
mov
xor
dec
inc
cmpsl
adc
outsl
mov
jno
pop
mov
inc
jne
push
inc
jbe
or
stc
jl
pop
sub
push
push
jbe
int3
lods
leave
push
arpl
cltd
shr
jmp
cld
push
pusha
inc
and
scas
rcrb
xor
xchg
ljmp
loopne
mov
xchg
mov
mov
adc
mov
arpl
or
gs
sub
loopne
and
sub
test
ja
in
push
sbb
jle
sub
mov
inc
cwtl
mov
mov
dec
mov
mov
xchg
enter
dec
push
sub
mov
test
mov
sbb
mov
adcb
aam
sub
and
mov
add
jne
decl
popa
mov
pop
mov
push
arpl
mov
jl
loopne
fs
shrb
aad
sub
xchg
lea
leave
jns
cmp
repnz
js
clc
add
jl
in
mov
ret
insl
dec
in
xchg
inc
lea
es
pop
orl
xchg
push
jno
add
in
pop
cmp
shr
push
adc
out
push
sub
or
dec
mov
out
sbb
jns
push
je
stos
aad
xor
or
or
lds
inc
xor
std
pop
sub
cmp
mov
mov
push
mov
push
cmp
gs
popf
push
das
aam
ficompl
pop
and
popf
push
pop
cmc
out
outsl
pop
adc
clc
xor
push
sbb
jne
mov
or
test
in
jg
sub
cmc
mov
jbe
jp
mov
xor
in
add
rolb
aaa
lcall
fimuls
cmp
loope
xchg
cld
add
fidivs
cltd
pusha
cmc
test
mov
add
popa
repz
mov
push
push
pop
pushf
mov
dec
sub
es
dec
and
in
mov
xchg
adc
movsb
inc
or
add
movsl
test
or
xchg
into
mul
test
into
insb
sahf
or
fcomp
lock
mov
ss
pushf
lock
xor
fldt
mov
movsl
push
fistpl
test
push
ljmp
data16
movsl
and
popa
mov
xchg
add
mov
jo
inc
dec
mulb
js
out
jmp
fsubrs
dec
div
imul
rep
or
orb
pop
icebp
rcrl
pop
xchg
push
cmp
jle
fwait
inc
pusha
pop
cmpsb
ds
adc
sub
fnsave
jns
mov
out
call
fiadds
outsb
fdivrs
fsubrs
arpl
sbbl
fdivrs
pop
pop
cwtl
jae
rclb
sbb
cmc
jecxz
loope
adc
ljmp
jne
shl
cmc
mov
fldl2t
and
mov
sub
loope
pop
bound
lcall
fisubl
sbbb
push
cltd
pusha
xchg
fiadds
add
into
out
inc
jg
pop
enter
inc
sti
js
push
xchg
and
push
aad
outsb
shrl
pop
pop
into
add
mov
cmp
mov
fsts
xchg
cmp
cmp
in
xchg
push
mov
in
sbb
cmp
mov
add
sbb
lahf
mov
or
and
push
jmp
cmc
pop
push
xchg
out
or
push
and
sub
aad
adc
push
insl
cld
fstpt
mov
imulb
push
mov
xorb
add
push
notl
jl
subb
data16
je
adc
jo
sbb
movl
adc
les
out
cmp
adc
inc
mov
cmp
mov
pop
adcb
fwait
mov
add
push
or
leave
adc
aas
loopne
enter
loope
jbe
lret
arpl
ljmp
mov
mov
inc
scas
or
jmp
jae
jge
inc
scas
movsl
std
rcr
fwait
test
cmp
mov
pop
inc
mov
lahf
mov
or
dec
xor
inc
repz
push
adc
lock
xchg
lock
fisubs
dec
push
jmp
xchg
cltd
mov
int
arpl
out
mov
fbstp
insb
loopne
mov
outsl
lock
and
sbb
cmp
mov
jmp
or
mov
mull
cmp
adc
mov
negb
fnstsw
add
fisttpll
mov
cmp
fwait
pushf
push
and
add
in
mov
fwait
out
in
arpl
lods
adc
imul
sbb
mov
nop
mov
lcall
mov
loop
push
lods
out
out
sub
jg
movsb
sbb
subb
add
xchg
adc
dec
and
push
notl
jnp
cmp
xor
inc
mov
inc
jns
out
shrl
jmp
add
stos
in
lods
pop
mov
cmp
cmpsl
sbb
in
inc
pop
repz
mov
daa
stos
aas
inc
sbb
inc
out
aaa
cmpsb
cmpsl
pop
loope
fwait
scas
mov
mov
jl
or
lock
push
xchg
add
mov
push
and
orb
xlat
roll
rorl
xchg
xchg
mov
aaa
mov
push
adc
pop
jnp
les
rolb
int3
repz
dec
aam
mov
or
gs
loope
cmp
inc
mov
pop
scas
aam
push
jne
fucom
adc
mov
fistl
xchg
js
adc
shr
xor
imul
xchg
mov
out
stos
incb
and
mov
rcrl
lods
push
jge
cmp
mov
loopne
xor
sahf
mov
cld
jo
xchg
dec
add
mov
pop
out
sbb
add
ss
loopne
sbb
jb
jle
jno
rorb
bound
jns
shr
icebp
fs
fpatan
push
aad
cmp
call
loopne
push
lahf
ja
mov
adc
xchg
enter
inc
mov
loop
fstl
push
inc
mov
sahf
jo
add
fidivrs
jb
inc
das
arpl
push
push
in
aaa
xor
jbe
stos
pop
mov
inc
ja
adc
xchg
sub
and
xor
pop
pop
or
popf
xchg
push
lock
cmc
fs
push
xor
cmp
mov
pop
sbbb
xchg
xchg
jge
sub
ja
xchg
mov
inc
push
out
mov
mov
or
fmull
mov
mov
pop
add
adc
mov
cmp
sbb
or
sahf
fsub
push
testb
sub
sahf
jnp
mov
fists
xchg
sbb
mov
lock
out
scas
mov
push
scas
push
pop
mov
mov
add
dec
xchg
xchg
lahf
adc
shrl
jle
inc
cld
sub
mov
push
lret
out
xor
push
mov
jecxz
and
add
hlt
jle
pop
loope
pop
add
jmp
and
jns
jle
jecxz
cmp
mov
mov
cld
test
adcb
xchg
lods
xchg
sti
outsb
fidivs
pop
mov
jecxz
movaps
jl
dec
mov
ds
cwtl
sbb
cmp
roll
pop
sbb
mov
add
pop
out
js
f2xm1
xchg
inc
add
mov
pop
push
pusha
pop
mov
inc
in
mov
mov
cmc
sarb
das
xor
cmp
xor
xchg
rcrb
repz
xchg
ds
clc
mov
and
out
pop
mov
mov
dec
mov
out
lcall
adc
xchg
mov
mov
ds
sub
pop
pop
xchg
movsl
pusha
scas
xchg
sub
jbe
lea
lcall
cli
mov
mov
dec
xor
loopne
cmp
clc
or
mov
cmp
insl
mov
fs
pop
inc
rolb
xchg
imul
pop
mov
or
mov
cmpsb
out
call
mov
je
movsl
lret
mov
repnz
sub
xchg
pushf
notl
in
sbb
addr16
xchg
sbb
mov
mov
push
nop
jmp
fwait
push
jae
pop
xchg
pop
imul
in
cli
in
bound
outsb
mov
aaa
dec
xor
push
rcl
add
jns
das
sub
jp
pop
mov
pop
xchg
adc
sbb
negb
mov
fcomps
pusha
cmp
or
inc
pop
les
and
rorb
pop
sbb
outsl
or
pushf
mov
sub
rcl
xchg
mov
mov
jo
imul
dec
xor
pusha
cmc
insb
imul
movl
sub
jae
es
mov
ret
lret
xlat
inc
mov
lret
lahf
bound
icebp
scas
cmp
cmc
inc
ljmp
mov
xor
push
pusha
xchg
push
mov
jno
push
push
xchg
sub
mov
cmp
and
and
jae
imul
add
icebp
inc
mov
test
cld
or
outsb
or
jecxz
xor
xchg
call
leave
lret
mov
mov
xor
loopne
aas
pop
popa
dec
mov
test
gs
mov
mov
sub
mov
or
insl
testb
das
and
dec
adc
aam
pushf
sub
pop
sti
popf
out
loope
sti
mov
adc
mov
inc
jne
out
mov
push
mov
xchg
cmp
add
imul
cmp
inc
mov
xchg
test
cmp
mov
call
fisubl
cwtl
mov
in
loopne
insl
cmp
jmp
or
hlt
scas
rorb
jle
insl
dec
xchg
dec
dec
jne
push
fcomps
mov
mov
or
std
subl
roll
aad
pop
xor
out
dec
xchg
in
test
stc
mov
push
cmp
std
iret
inc
xchg
pusha
imul
inc
xchg
out
cwtl
aaa
out
cmp
nop
loop,pn
scas
mov
inc
testb
jnp
roll
xlat
push
mov
orb
fsubrs
add
popf
scas
dec
mov
mov
xor
inc
leave
lods
mov
ret
jg
xorb
les
mov
xor
cmc
dec
push
pop
mov
mov
push
push
inc
ss
push
and
fstl
addb
sub
cmpsl
xor
mov
aas
jmp
popa
outsl
lret
pop
or
out
lret
lea
jae
fisubrl
ret
bound
outsb
jge
stc
jmp
mov
fisubs
int3
push
jl
out
sbb
inc
fimuls
xchg
out
outsl
mov
mov
es
daa
mov
adc
je
jae
inc
lods
jbe
lock
pop
push
push
cmpb
mov
lods
cli
mov
fldcw
jl
lahf
test
sub
push
xor
ss
out
std
dec
jnp
jl
lock
out
xor
mov
push
jge
mov
daa
adc
sub
cmp
into
ret
jnp
dec
jge
outsl
repnz
inc
xchg
sarl
xor
insb
inc
cwtl
and
push
fsubr
adc
stc
cmp
cmp
call
mov
cwtl
rol
fwait
xor
and
loopne
fsts
add
jns
das
pop
out
push
mov
jmp
inc
fwait
iret
subl
push
stc
inc
scas
fldcw
dec
loopne
nop
mov
push
mov
sbb
mov
lea
out
mov
adc
sbb
cmp
fsubrp
or
mov
clc
push
xchg
push
loop
jbe
test
add
push
push
ret
add
sub
pop
adc
or
dec
out
pop
lret
sub
mov
sub
jl
pop
andb
fsubl
scas
and
xor
pop
aam
addr16
mov
idivl
mov
jns
orl
scas
cmp
int3
repz
lret
sarb
lret
mov
in
popa
push
mov
cmp
xchg
adc
fwait
adc
std
rcr
jge
sarl
movb
mov
jge
inc
fadds
fisubs
mov
mov
push
loop
pop
xor
sub
inc
inc
std
and
arpl
sarb
je
fisubrs
mov
inc
loope
inc
sbb
rcrl
les
xor
fstl
ja
pusha
cmp
in
xchg
push
fidivrl
adc
add
addr16
or
xchg
xchg
jns
add
ret
sbb
mov
aam
push
addl
les
aam
adc
leave
repnz
pop
mov
inc
cltd
das
cmp
rclw
into
insb
fldt
in
add
insb
in
pop
cmpsb
popf
mov
mov
lcall
fsubl
mov
int3
push
gs
cmc
iret
push
xchg
adc
xlat
cld
cld
jle
jae
out
aas
movsl
mov
mov
or
clc
fwait
mov
pop
cmp
bound
mov
sub
ret
cmp
xchg
cli
or
aas
das
dec
mov
mov
lcall
cmpsl
or
pop
inc
lcall
scas
mov
out
enter
lahf
push
adc
dec
incl
adc
fldl
leave
in
int
popf
popf
mov
push
sbb
push
out
sahf
fcmovne
sti
inc
inc
and
jo
fbstp
jle
rorl
daa
rorb
mov
cwtl
pop
les
and
adc
jp
lods
pusha
jbe
xchg
inc
and
orb
addr16
jg
mov
fs
dec
ret
inc
jl
faddl
add
sub
mov
ficomps
mov
xor
in
xchg
divl
dec
mov
fcmovbe
mov
in
or
pop
out
and
lods
jg
xchg
push
loopne
add
mov
fldt
movsl
mov
ljmp
enter
std
jecxz
xor
pop
xor
loop
push
push
xchg
jmp
sbb
add
cmp
xor
mov
dec
push
inc
dec
bndldx
fs
aad
xchg
sbb
aas
popf
sbb
mov
incb
inc
mov
mov
push
push
push
add
sahf
add
xor
in
int
insl
hlt
subb
mov
cli
mov
xor
cld
shrb
pop
scas
cwtl
ds
movsb
imulb
test
pop
and
js
dec
lods
jle
xchg
cmp
aad
ret
call
fimuls
sub
aaa
scas
adc
int
dec
or
lods
cltd
lret
xor
xchg
loop
cmp
cli
adc
mov
mov
gs
dec
jbe
push
mov
pushf
je
jae
insb
out
pop
mov
lea
sbb
insl
fisubrs
fstl
dec
hlt
jg
push
dec
jmp
adc
jmp
push
outsl
adc
movsb
push
mov
loopne
dec
test
sub
inc
mov
lods
out
lds
xor
cmpl
adc
cmp
arpl
sbb
push
sub
cltd
push
and
imul
mov
loop
sahf
push
sbb
mov
shll
cli
fcomps
jb
and
xchg
add
mov
xchg
clc
rorb
push
ret
arpl
ret
stos
fnstcw
stos
and
pop
ljmp
in
dec
stos
xor
xchg
lods
cmp
ss
or
lods
dec
inc
and
pop
test
test
inc
or
xorb
fstpt
in
adc
fisttpl
mov
nop
mov
jbe
sti
test
or
and
sub
out
scas
push
or
popa
hlt
and
xchg
fbld
mov
pop
popa
pop
adc
stos
sub
xchg
sbb
mov
sahf
sarb
jae
jmp
shrl
fdivr
and
mov
cwtl
repz
pop
mov
addr16
out
add
add
xchg
cmp
and
jl
sahf
cmp
push
jp
xchg
xadd
outsb
shrb
cmpsb
mov
jbe
and
mov
push
sub
adc
xchg
cmp
dec
adc
popf
das
adc
cmp
and
pop
fstpl
lahf
push
jecxz
out
xchg
cmp
fnsave
popa
push
bound
add
ss
sub
mul
and
daa
inc
and
sbb
jne
ret
sub
mov
popa
stc
sub
test
mov
repnz
sub
mov
lea
mov
stos
test
add
insb
cmp
orl
mov
or
push
and
divl
stos
jl
xor
inc
inc
jns
push
push
aas
xchg
idivl
mov
movsb
mov
mov
push
pop
or
repnz
or
add
gs
fdivs
div
mov
cmp
repz
dec
xor
sub
divl
test
pop
mov
jecxz
jmp
jo
call
dec
xor
xchg
into
pop
jmp
cmpsl
aas
es
xchg
jae
jbe
xor
adc
scas
rcrb
imul
sub
mov
test
cmpsb
dec
inc
fisttpll
or
sahf
jo
push
daa
scas
loop
push
cmp
mov
inc
notl
js
sti
rcl
and
cmpsl
sub
xor
out
mov
loope
ret
dec
or
ds
mov
mov
push
push
bound
ret
out
shr
xlat
mov
xchg
sarl
dec
out
sahf
cld
arpl
inc
addr16
mov
enter
pop
inc
out
ds
aam
sbb
xor
dec
out
inc
pop
mov
jl
cld
pusha
mov
std
dec
mov
mov
mov
and
sub
or
out
pop
scas
cs
pusha
cwtl
and
inc
mov
xor
push
call
out
popa
cmp
push
jns
sbb
mov
std
arpl
sub
xchg
push
outsl
dec
pusha
jl
aad
sti
cmp
imul
es
aaa
mov
sub
std
fcoml
mov
mov
cs
testl
orb
xchg
add
xor
dec
test
sub
xlat
dec
pop
mov
nop
and
enter
mov
or
lcall
cmp
add
dec
pop
pop
enter
jl
xor
xchg
inc
mov
push
dec
fsubrl
setnp
std
dec
loopne
movsl
imul
enter
push
cs
aaa
sbb
inc
or
inc
ss
pop
and
repnz
fwait
lahf
out
cwtl
cltd
adc
cmp
jns
pop
ret
shrl
sub
leave
sbb
cmp
test
movsl
mov
test
mov
outsl
cmp
daa
ss
repnz
mov
nop
es
sub
sub
fs
sbb
pop
js
loop
push
int3
sub
mov
imul
add
add
xchg
neg
ja
xchg
xor
cli
pusha
xor
stos
jle
je
jb
xor
ret
jns
mov
dec
jno
es
push
rolb
jl
fildll
cmp
or
add
ret
dec
leave
mov
sub
repz
xchg
mov
mov
in
xchg
inc
sub
js
movsl
je
fildll
jl
sub
fisubs
xchg
push
idivb
push
out
das
popa
mov
das
std
stc
push
adc
dec
and
mov
jnp
aam
push
rcrl
or
repz
repz
mov
outsb
testl
leave
push
mov
jns
cmp
add
pop
add
dec
aad
and
lret
sub
sarl
adc
imul
mov
pop
fcoml
lret
push
inc
cmp
in
sub
adc
add
dec
lock
out
test
cmp
cmpsl
and
mov
inc
inc
push
lcall
pusha
cmp
mov
arpl
jo
sahf
sbb
xor
jle
dec
pop
xor
add
push
inc
jecxz
and
dec
dec
mov
push
mov
inc
enter
das
arpl
movsb
xor
xorb
test
pop
les
repz
sbb
xchg
cmpsl
ds
sub
xchg
aad
pop
movsb
ljmp
sub
mov
pusha
mov
and
leave
jmp
popf
jmp
push
or
xor
lret
jnp
pop
push
pop
test
mov
jmp
insb
loop
jecxz
jecxz
xor
std
mov
je
mov
iret
je
iret
sar
pop
xchg
lea
orl
fisttps
adcb
je
cli
fidivrl
fisubl
ret
mov
pop
stos
rolb
add
loopne
out
dec
out
mov
mov
fs
in
pop
xor
lret
jle
mov
mov
movsb
fsubs
mul
jg
push
pop
xor
jnp
cmpsl
sbb
out
stc
into
xor
fmul
push
aad
inc
mov
adc
sbb
mov
movsb
xor
push
fadds
out
cwtl
lahf
in
cli
mov
pop
outsl
insl
xor
fistps
xor
cmpsl
xor
or
xor
adc
ret
out
in
std
cmp
mov
es
mov
cli
pop
or
mov
mov
les
stc
mov
outsl
lret
push
mov
cmp
sub
in
rcll
xor
or
rcr
dec
dec
adc
leave
lock
movsl
testl
push
xchg
mov
add
cmpsb
sub
push
gs
rorl
or
adc
jns
jp
pop
out
loopne
and
mov
cltd
rorb
in
imul
or
xchg
nop
dec
cmc
pop
cmc
loop
dec
mov
dec
pushf
hlt
and
adc
cld
push
xchg
inc
int3
fsubs
adc
ret
lahf
fprem1
inc
imul
mov
mov
ds
push
push
mov
ja
push
jg
cmp
or
pop
in
cmp
mov
insb
je
mov
into
jnp
sbb
negl
out
sub
push
call
sbb
cmp
push
icebp
jbe
dec
mov
aam
imul
shl
jb
xchg
cmp
ficomps
stc
ror
fwait
inc
movsl
mov
or
aas
pop
xchg
and
cmp
jmp
leave
insl
out
pop
gs
loop
push
icebp
ret
sub
pushf
push
stc
movsb
push
add
jno
and
inc
loop
out
call
cmpsb
imul
xor
or
lea
pushf
push
jge
ds
mov
and
in
mov
stos
jne
test
aas
daa
pushf
pushf
in
lret
or
in
stos
insl
pop
push
lret
scas
lret
dec
mov
test
int3
jle
outsb
jne
test
shl
lods
push
inc
js
imul
popa
xchg
mov
cld
dec
lods
mov
cmp
ss
subb
aad
sbb
rcrl
and
shl
movsl
ret
push
fs
adc
js
fbld
xchg
mov
mov
les
jne
pop
jl
cmp
mov
cli
imul
pusha
lods
enter
pop
ret
or
sub
push
xchg
out
ret
scas
or
dec
in
leave
out
aad
mov
in
sub
ljmp
adc
add
jae
push
in
and
daa
mov
dec
icebp
fcoml
pop
push
flds
iret
lret
lods
shl
cmp
sbb
in
cltd
adc
adc
fldcw
push
adc
das
inc
fmulp
push
dec
xor
sub
mov
xchg
mov
out
and
data16
inc
test
inc
mov
sti
or
fildl
dec
call
pop
mov
dec
cmp
out
push
outsl
push
add
cmp
cmp
inc
xchg
out
jge
sbb
inc
add
jo
lcall
add
mov
sub
pop
xor
int3
out
and
jae
cmp
inc
hlt
outsl
sub
adc
mov
pop
mov
adc
pop
cmp
xorl
dec
inc
push
push
popa
ja
aas
sub
test
stc
add
gs
ja
stos
aas
cmp
lds
mov
stos
outsl
lahf
inc
in
stos
loop
inc
data16
ret
mov
cmpb
out
sbb
imul
lret
pusha
xchg
pop
cmc
mov
dec
mov
or
pop
fwait
pop
or
je
pop
cmpsb
arpl
cwtl
gs
cmpsl
je
xchg
jmp
pop
mov
and
fnstenv
push
repz
mov
dec
inc
dec
andb
orl
imul
not
jle
lods
jecxz
rep
mov
enter
cmp
popf
fists
dec
popf
pop
fcomps
sbb
gs
jb
stos
arpl
push
cmpps
xchg
cmp
xchg
int
cwtl
outsb
into
stos
add
xlat
jle
jb
cmp
push
cltd
lahf
test
call
ja
pop
jge
es
imul
inc
cmpsl
sub
push
mov
imul
mov
lret
imull
or
jp
mov
inc
xlat
pop
adc
mov
ficompl
dec
or
je
mov
xor
test
popf
mov
push
shrb
mov
call
mov
testb
jo
add
out
mov
out
testb
and
out
pop
hlt
pop
test
bound
sub
rcrl
idiv
insl
insl
dec
xchg
pusha
xchg
mov
mov
pop
iret
std
pusha
xchg
and
sub
push
stc
push
mov
aaa
mov
mov
mov
add
incb
in
or
fldcw
loopne
and
mov
fistpl
pop
pop
xor
or
std
mov
mov
popf
loopne
insb
pusha
adc
iret
xchg
aaa
mov
lcall
mov
dec
sti
jo
clc
pop
in
push
xlat
or
mov
xor
test
std
push
mov
call
cli
not
jg
push
pop
xchg
mov
lock
out
or
sarl
dec
lods
in
pop
pop
and
scas
shll
mov
and
jne
dec
mov
dec
pusha
push
cmp
jne
adc
test
mov
imul
add
sbb
push
adc
cld
test
jno
xchg
lods
adc
jno
sub
enter
gs
mov
dec
dec
mov
outsl
data16
sub
xchg
lods
lea
jae
xor
cmc
insl
pop
cld
jnp
pop
pop
std
sbb
cs
push
fstps
scas
xchg
cmp
adc
gs
fdivs
aas
mov
dec
fsubs
mov
jo
pop
jmp
pop
or
sbb
pop
stc
dec
push
adc
sub
add
inc
imul
in
nop
iret
xchg
out
mov
es
arpl
es
xchg
and
lcall
jo
push
ret
pop
jl
fs
out
ljmp
fdivs
into
pop
loope
inc
mov
xor
loopne
cmp
pusha
fdivs
mov
jbe
and
inc
sub
xchg
pop
stos
xor
shrl
rcrl
lret
pop
aaa
daa
xchg
imul
sti
lret
pop
jecxz
ja
pop
out
cltd
or
repz
push
daa
mov
sbb
xor
adc
jge
into
hlt
jmp
pop
push
cmp
mov
push
lea
mov
jne
mov
popf
push
repz
jbe
pop
imul
dec
icebp
clc
inc
adc
and
fst
movsl
fdivrs
add
xor
fidivrs
jmp
pop
cld
cmc
push
pop
and
inc
scas
mov
loope
fldl
xchg
dec
fcompl
gs
cli
mov
test
jb
js
mov
push
add
repz
idiv
mov
pop
or
scas
test
cmp
lret
pusha
lret
inc
xchg
xchg
or
add
cld
xor
test
add
cmp
scas
mov
adc
push
aad
dec
std
xlat
mov
and
xchg
ja
popa
sbb
adc
xchg
xchg
jl
dec
rcll
jne
in
fs
movsb
and
dec
jecxz
xor
sub
add
lret
incl
shrl
adc
mov
imul
or
jnp
hlt
inc
dec
sub
xchg
pop
clc
sub
dec
adc
jmp
mov
out
sbb
decb
and
jle
dec
dec
dec
xor
sahf
clc
push
jge
fisttpll
inc
sqrtps
lock
jle
push
jb
lret
cmp
mov
jae
bound
cmp
and
adcb
js
sub
mov
hlt
stos
adc
repnz
in
movsl
daa
rorl
cmp
call
idivl
sbb
pushf
adc
mov
adc
stos
in
jae
cwtl
or
add
shlb
mov
push
test
notl
lcall
outsl
xor
hlt
mov
sub
pusha
outsb
jo
inc
xchg
push
mov
int3
sub
loope
and
or
sti
movb
js
xchg
scas
add
sub
out
pop
rcrl
cmp
cmp
or
mov
out
pop
outsb
mov
lahf
push
jl
pop
ljmp
lock
in
movsb
or
or
cmp
cltd
dec
or
inc
std
movsl
sti
push
mov
lock
mov
pop
jb
popf
addr16
iret
cmp
mov
fcomp
pop
adc
repz
addb
lods
pop
mov
adcl
lahf
sub
push
and
mov
or
cmp
mov
hlt
jnp
pop
imull
dec
push
enter
dec
jl
pop
fistpl
cmp
cld
add
ss
enter
popa
sbb
dec
cmpsl
test
fwait
je
jmp
and
mov
jge
imulb
jmp
arpl
sahf
dec
pop
stc
sarb
sbb
loop
push
xor
int
out
loope
jns
cmp
cli
and
mov
xor
mov
sbb
rcrl
int3
add
push
cli
bound
stos
nop
or
dec
jmp
push
mov
das
pusha
push
jp
fcmovnb
sarb
out
sahf
arpl
xor
pop
popf
in
inc
mov
cld
ret
mov
inc
cs
loop
nop
jne
rorb
and
jnp
mov
mov
mov
sub
or
stc
adc
xchg
mov
out
push
inc
les
xchg
andb
or
aaa
shlb
xchg
mov
jbe
cmp
ja
sti
cwtl
loopne
xchg
pop
jbe
loopne
or
dec
in
sub
cmp
mov
arpl
negl
mov
shr
dec
push
insb
movsl
dec
fnstenv
cwtl
rcll
push
fs
inc
push
xlat
sbb
cmp
dec
cld
xchg
add
gs
enter
outsb
pop
into
pop
lea
pop
xchg
dec
int
sub
pop
jmp
sahf
add
fwait
repz
jo
cmp
pop
lahf
das
shl
les
push
xchg
mov
aas
call
pop
out
clc
dec
or
movsb
xchg
call
test
out
js
jle
cwtl
out
sbb
fcom
out
pop
mov
pusha
stos
out
imul
loope
pop
pushf
in
repz
jb
cs
scas
cmp
negb
jecxz
and
xchg
sti
sbb
jecxz
dec
jae
loopne
jecxz
loope
cmp
cli
mov
pop
jae
mov
in
pop
repnz
arpl
jp
rorl
cli
loop
and
mov
jp
in
out
mov
fprem1
inc
sub
lods
movsl
hlt
clc
shll
lret
sbb
fistpll
xchg
ljmp
xchg
add
pop
fisubrl
lods
aaa
iret
lret
sti
cmpsl
repz
sbb
push
cmp
sbb
call
add
xor
and
push
jnp
les
mov
xor
adc
pop
mov
xchg
sub
jp
scas
arpl
add
push
movsl
push
cli
out
lods
addr16
push
in
in
push
fwait
or
push
mov
loopne
hlt
ficoml
in
push
sub
sub
cmp
enter
mov
je
aad
xchg
pop
or
enter
loope
sarl
stos
jbe
loop
aaa
stos
mov
xor
sarl
and
mov
aad
sti
clc
ret
mov
sub
jbe
lahf
pop
sbb
push
push
shlb
mov
ret
imul
mov
aaa
imul
pop
loopne
ss
mov
mov
mov
jb
es
data16
sub
xchg
sub
int3
cmp
xchg
mov
jl
xlat
xlat
subb
cmp
sahf
testl
mov
mov
lret
push
lahf
in
xlat
sbbl
ds
dec
daa
mov
setle
dec
push
iret
leave
scas
or
sub
addr16
push
insl
lds
addr16
sub
cld
pop
mov
sub
cld
cld
popf
jns
rep
stos
cltd
repz
sbb
fisubrs
lret
adc
adcl
fsubl
pop
push
push
daa
in
dec
hlt
shll
push
das
add
shll
cld
mov
shll
jle
es
push
cmp
leave
xor
popa
lret
test
das
push
outsb
ror
xchg
out
mov
das
fwait
stos
jmp
jb
out
mov
jo
outsb
sbb
jbe
xchg
mov
fucomip
nop
div
mov
cli
out
movsl
xchg
loope
xchg
imul
test
shr
and
xchg
fsubs
push
mov
fisttps
cmp
jo
sahf
ss
jns
dec
imul
xchg
jecxz
inc
inc
call
sub
push
cli
shll
xchg
decb
fimull
push
fcmovu
popa
jo
ret
inc
inc
pop
je
leave
sahf
jbe
orb
xchg
mov
cmpsb
or
mov
out
pop
fcmovu
std
inc
push
push
daa
in
pop
mov
cmp
jecxz
pushf
pop
stc
jge
movsl
daa
gs
pop
rorb
je
stos
cwtl
or
incb
or
xor
push
xlat
jl
ficoml
adc
int
add
pusha
mov
mov
mov
jae
outsl
sub
inc
mov
testb
cmp
dec
mov
sbbb
push
sub
imul
jb
outsb
aas
mov
xchg
and
movsb
lret
pop
sub
jo
dec
add
call
sbb
adc
add
fsubrl
fs
rclb
add
jp
and
insb
lret
shl
popf
inc
cmp
dec
out
movsb
in
pop
movhps
in
mov
addr16
xor
xchg
sub
insb
xor
mov
add
xchg
fwait
pop
xchg
scas
or
inc
aad
xor
and
jecxz
dec
inc
add
mov
cld
and
cld
dec
andb
add
add
fisubrl
or
xchg
inc
push
add
mov
lods
xchg
xchg
movsb
and
xchg
sub
mov
pop
dec
pop
push
mov
pop
nop
stos
subl
jge
add
imul
adc
cltd
loopne
shll
dec
lahf
ficomps
dec
cltd
shl
popf
aas
cli
dec
lahf
je
xchg
scas
jae
jmp
sahf
or
into
insb
idiv
add
cmp
pop
dec
dec
pop
clc
in
add
add
jle
test
mov
lods
cmp
push
inc
in
mov
mov
adc
and
addr16
out
fcmovb
dec
xchg
sbb
dec
popa
jb
xchg
adc
ds
invd
sub
lcall
pop
inc
dec
and
and
outsb
pop
loop
pop
stc
scas
xchg
shl
int3
jmp
divl
push
mov
or
cmp
test
mov
popf
push
loop
insl
xchg
iret
jp
arpl
dec
sbb
pop
dec
sub
pop
test
mov
lds
add
cmpsl
pop
dec
sub
mov
int
pop
aaa
aaa
fcmovb
sahf
pushf
cmp
add
pushf
dec
sbb
addr16
and
fstl
or
inc
push
adc
sub
fildl
ficomps
adc
sub
push
inc
lds
fsubs
in
ja
movl
pusha
shr
inc
push
pop
adc
test
mov
push
int3
lock
or
fwait
insb
mov
ret
push
add
movsl
sbb
jnp
xchg
mov
fwait
cli
inc
jmp
test
mov
jge
cld
in
sub
insl
cmp
int3
mov
mov
mov
push
lea
imul
xor
mov
mov
rolb
lahf
and
mov
fidivrs
add
rcrl
dec
xchg
rclb
iret
mov
mov
mov
cmp
mov
cmpsb
data16
out
sarb
xchg
cwtl
mov
into
pop
and
add
xchg
xlat
stos
test
mov
movsl
sub
fsubl
pop
sbb
fxch
insb
dec
daa
loop
mov
or
and
nop
mulb
fwait
dec
enter
and
mov
in
or
hlt
ljmp
mov
std
jo
dec
mov
pop
popw
lock
cld
push
rcl
push
adc
repnz
cmp
int3
aaa
add
mov
mov
test
push
ljmp
fimuls
mov
cmp
add
dec
push
jl
pop
and
jmp
jmp
das
xchg
sti
mov
pop
adc
insb
xchg
push
jl
clc
outsb
lahf
popf
ret
repz
jecxz
mov
das
test
push
in
fs
dec
mov
popf
mov
push
fs
out
cmp
jg
mov
out
xchg
cmpsb
inc
repnz
test
lods
or
and
fdivrs
gs
in
in
xchg
fdivrl
mov
shrl
es
mov
xorl
mov
stos
jecxz
pushf
cmc
cmpsl
jmp
sarb
inc
repnz
jp
cli
jbe
pop
iret
mov
inc
mov
mov
push
and
push
xor
js
mov
int3
push
and
xchg
jns
xor
sbb
jge
fsubrs
lea
sbb
imul
inc
xchg
clc
mov
jge
xchg
es
out
lcall
in
es
push
shrl
mov
push
mov
test
lea
es
cmp
lahf
mov
sbb
mov
or
pusha
in
loopne
sahf
xlat
sub
je
pop
pop
or
popa
push
cmp
pop
daa
and
fdivr
pop
pop
cwtl
xchg
mov
jp
cmp
dec
mov
xchg
test
xchg
imul
rclb
movsl
in
xor
negb
jnp
or
sub
push
les
dec
xor
mov
lods
out
test
jns
mov
call
fprem
orb
int3
fwait
xlat
mov
push
dec
or
lcall
insb
xchg
pusha
jp
lcall
and
in
inc
orb
decb
add
andl
pop
pop
cmp
stos
pop
movsb
fsubrs
mov
int3
in
xor
pop
and
fistpll
add
add
sub
aas
dec
jle
je
jmp
pop
imul
sbb
mov
sub
or
into
insl
aas
or
pop
nop
ja
punpckldq
xchg
mov
pop
xor
rcrb
and
add
push
out
sbb
mov
push
rcrl
mov
out
mov
into
aaa
call
mov
mov
sbb
cmp
outsb
lret
pop
sub
push
cwtl
fisttpl
mov
sub
add
leave
jg
jge
xchg
dec
sarl
mov
push
ret
mov
mov
mov
aam
cmp
sub
loopne
insb
movsb
adc
and
push
bound
adc
cltd
std
bound
pop
jae
movsb
bound
scas
mov
jno
mov
das
shlb
sbb
jne
rorl
pushf
adc
aas
cld
in
out
lcall
inc
daa
jg
aad
xor
adc
sub
imul
icebp
jne
fxtract
push
lahf
adc
std
ja
mov
popf
fnop
jle
mov
cmp
nop
push
je
popf
std
push
mov
orb
mov
icebp
add
sbb
jecxz
sti
dec
out
pop
mov
push
lret
jno
sub
ret
incl
jecxz
dec
fidivrl
fistps
adc
out
out
mov
inc
cmp
cmp
mov
fcoml
ret
dec
gs
dec
lods
inc
sbb
iret
cmpsb
pop
dec
and
lahf
lahf
mov
mov
repz
sti
xchg
cltd
insl
fbstp
outsl
test
xor
inc
flds
cmp
xor
pop
fists
sub
imul
inc
add
subl
push
push
je
bound
ljmp
imulb
nop
adc
cs
insl
das
jmp
call
clc
mov
jp
stos
mov
mov
mov
cmc
inc
in
sahf
aaa
xor
xchg
xchg
into
ja
mov
cmp
jle
aad
test
nop
movsl
push
cltd
mov
mov
sub
or
and
mov
lret
mov
xchg
mov
aam
movsb
aas
mov
in
leave
xchg
ficomps
xor
mov
repnz
cmpsl
mov
arpl
popf
andb
cmp
scas
mov
and
xchg
push
jb
ja
push
mov
sub
xchg
or
mov
stos
or
xchg
ret
push
lds
lret
inc
fwait
mov
inc
int
sub
das
xlat
pop
xor
rorl
pop
shr
fimull
or
jno
jmp
sarb
sbb
sbb
rol
push
in
andb
imul
iret
add
cmp
inc
cmc
jbe
into
ljmp
ljmp
imul
lret
pop
mov
mov
sti
repz
cmp
scas
stos
movsb
fistpll
mov
insb
add
jns
sysret
jno
fwait
mov
jp
and
cmpsb
lods
adc
dec
bound
mov
fdiv
mov
popaw
ret
addr16
loope
mov
mov
faddl
in
and
les
jne
clc
pop
mov
arpl
sub
aad
sbb
imul
or
inc
pop
mov
icebp
push
xor
movsl
out
xchg
daa
pop
dec
mov
fcompl
int
pop
cmpsb
mov
sahf
sub
xchg
sahf
pop
out
sbb
stos
ljmp
xchg
push
icebp
xor
out
clc
fcmovnbe
adc
mov
cli
sbb
inc
das
xor
pop
es
xchg
push
int3
pop
xchg
mov
mov
push
in
mov
addr16
pop
fnstsw
lahf
push
in
clc
xchg
push
pop
xor
and
adc
movsb
mov
jns
fdivrs
bound
incl
lcall
js
jmp
les
icebp
and
data16
int3
xchg
int
daa
decb
jge
xchg
outsb
push
addb
pop
mov
push
outsb
aaa
out
jo
fdivp
add
xchg
xchg
add
adc
xchg
jbe
icebp
ss
xchg
mov
mov
add
ret
mov
rorb
fxtract
rorb
pushf
loope
sub
inc
mov
adc
xor
mov
adc
adc
push
lret
adc
mov
test
adc
sbb
lods
or
pop
adc
aaa
push
popa
cmp
dec
cmpsb
jp
sti
xor
sbb
adc
mov
leave
push
dec
arpl
jb
out
push
cmpsl
cmpl
jl
jmp
mov
sahf
cmp
xor
mov
scas
jb
movsl
test
pop
inc
das
cmpsb
jbe
out
enter
adc
mov
jnp
pavgw
insb
dec
pop
test
mov
cmc
mov
out
js
outsb
inc
pop
dec
dec
adc
or
dec
cltd
shrl
push
hlt
push
into
cltd
fimull
pop
lret
movsb
call
ret
lock
push
mov
addr16
add
sub
mov
dec
dec
pop
and
sub
out
cli
ljmp
cmp
daa
jae
daa
int
jae
out
pop
inc
ficompl
ss
sbb
ljmp
mov
shll
dec
sbb
repnz
or
das
scas
iret
inc
movb
or
sbb
lcall
lock
in
hlt
xor
cmpl
mov
rcll
dec
mov
cwtl
sti
into
jg
cmp
mov
leave
fcomps
nop
push
mov
in
lods
push
jp
dec
iret
mov
in
dec
mov
xchg
jno
cld
popa
sbb
aas
je
rclb
and
das
and
inc
mov
incb
pushf
out
sbb
push
lcall
add
add
and
out
sub
je
sub
mov
fisubrs
cmpsb
mov
jl
or
test
nop
dec
inc
insb
addr16
bound
fucomi
les
repz
push
les
in
ret
loop
adc
mov
std
and
xlat
lock
scas
xchg
pop
fcmovnb
pop
xor
imul
movsb
out
pushf
rcll
out
ds
std
cmpsl
push
inc
inc
hlt
call
incl
xchg
ret
pushf
arpl
mov
pop
mov
in
les
mov
pop
aad
mov
mov
lock
pop
or
mov
jge
push
loopne
cwtl
sub
cmp
pop
sbb
push
addr16
jb
arpl
mov
mov
dec
lds
or
pop
cmc
aaa
outsl
mov
outsb
xlat
add
jbe
mov
mov
test
cmp
rcl
les
pop
outsb
pop
add
or
je
mov
inc
stos
fldcw
sub
mov
insl
and
jb
jmp
mov
cmp
dec
pop
jge
mov
cmp
and
inc
ljmp
mov
mov
push
xchg
je
repz
dec
arpl
push
jg
in
xor
fisubrl
fdivs
test
or
xchg
mov
je
in
jmp
push
sbb
push
fildll
mov
jmp
cmp
pop
inc
sbb
jg
push
dec
jle
popa
in
pop
jo
popf
dec
repz
mov
paddusw
adc
sub
xchg
mov
jno
insb
mov
shrl
mov
inc
jbe
mov
es
add
out
fcomps
adc
imul
gs
push
test
add
js
pusha
inc
push
cwtl
mov
outsb
fdivrs
cmp
stc
pop
lock
aas
push
or
xor
mov
pop
clc
jne
xchg
nop
pop
xor
clc
add
ljmp
dec
sub
mov
hlt
xchg
push
mov
jbe
test
mov
mov
cmp
xor
notl
xor
xor
jge
and
cmp
movsl
pop
jge
xor
cs
jno
mov
jb
rolb
sti
mov
xchg
adcl
mov
xchg
sub
push
dec
les
nop
mov
data16
push
outsb
or
pop
aas
inc
nop
arpl
rclb
aas
popa
jl
mov
dec
jns
inc
lds
outsl
sbb
ror
and
stc
push
ss
mov
sub
sbb
clc
in
and
jnp
xchg
shrb
imul
cmp
inc
stos
sar
pop
cmc
loope,pt
xchg
inc
or
addl
sti
pop
xchg
rcrb
dec
cmp
pop
jo
into
xchg
or
push
ficoms
xchg
cmc
movsl
enter
or
jg
insb
movsb
mov
outsb
daa
jnp
cmp
cld
xor
faddp
add
add
shll
rclb
in
orb
fldenv
rclb
ljmp
cmp
mov
or
cmp
mov
jnp
xor
xor
repnz
in
mov
mov
ret
xlat
xorb
sub
out
dec
push
cs
cmc
daa
cmp
sar
cs
leave
ffreep
movsb
or
adc
outsl
fists
push
std
sti
mov
jnp
rcrb
mov
lock
pop
sti
or
ja
mov
jnp
mov
or
pop
mov
xchg
out
std
sbb
sbb
in
dec
add
stos
clc
dec
shlb
jnp
icebp
add
imull
jge
cmp
push
add
or
or
mov
cltd
in
nop
jl
sbb
mov
clc
mov
jmp
or
jbe
sbb
sub
lds
mov
mov
cmpsl
jp
push
loop
insl
jae
xchg
test
inc
aaa
inc
mov
xor
jp
mov
mov
nop
loopne
push
sti
jg
dec
mov
or
loopne
cli
sbbb
test
xor
mov
sahf
dec
roll
lock
inc
vpshufd
cltd
or
or
mov
pop
pop
dec
pop
int
cmp
test
sub
adc
rcrb
dec
mul
lods
jnp
je
push
mov
push
sbb
fdivp
jo
jbe
enter
xlat
mov
mov
mov
outsb
push
and
xor
push
jnp
stc
jg
cmpsb
mov
xor
je
dec
sub
test
jbe
lcall
push
insl
cmp
call
xor
sub
js
or
push
das
popa
lock
lods
jne
pop
repz
addl
out
hlt
ficoml
xchg
push
xchg
outsl
test
xor
iret
mov
push
cmp
cmp
js
xchg
loope
mov
inc
push
add
das
jecxz
mov
mov
adc
push
xlat
lahf
xor
and
jecxz
in
fsubr
sbb
int3
jns
inc
clc
sub
js
mov
cmp
iret
push
lods
idiv
pop
mov
shlb
or
testb
jo
repnz
jne
roll
mov
arpl
pop
orb
nop
cs
lahf
movsb
iret
test
mov
sub
inc
mov
data16
lods
add
dec
pop
fdiv
lods
push
mov
cmc
lock
mov
call
out
mov
inc
push
js
xor
repz
out
mov
ret
jp
cmp
repz
daa
jg
mov
mov
and
mov
sbb
push
or
add
lret
mov
rorb
adcb
int3
iret
dec
aas
push
orl
adc
sub
pop
jno
cmp
test
mov
jnp
cwtl
pop
nop
outsb
out
pop
add
popf
push
inc
jmp
push
out
mov
inc
arpl
cld
push
stc
jnp
add
cmpsl
pop
mov
gs
es
lock
and
addb
in
stos
xor
mov
aam
cmc
sub
mov
fucomi
daa
fcomps
loope
sub
pop
adc
jl
aam
pop
stos
mov
pop
push
in
sarl
jbe
out
sub
mov
data16
mov
inc
addr16
les
mov
dec
icebp
in
in
cltd
adc
sti
call
mov
and
stc
and
xor
gs
cmp
in
cmp
dec
push
or
gs
xchg
jecxz
dec
js
repz
add
into
ljmp
data16
xchg
inc
ss
outsb
outsl
stos
lcall
in
outsb
out
fisttps
or
pop
push
pushf
mov
cmp
fisubrl
in
aam
mov
lcall
sbb
sqrtps
test
out
sbb
ficoms
hlt
cmp
mov
out
icebp
cmp
es
xchg
rcl
lret
xchg
loopne
popf
dec
repz
dec
mov
dec
jle
or
ss
inc
sti
push
mov
inc
adc
aas
jle
nop
test
ds
push
aas
data16
adc
push
cmp
in
daa
xor
mov
xor
cmp
aam
pop
idivl
jbe
outsl
inc
std
pop
mov
dec
push
inc
and
repnz
repz
xchg
adc
pop
mov
mov
ljmp
ja
pop
std
dec
imul
repz
push
icebp
enter
cli
outsl
loope
cmp
daa
adc
enter
into
int
sti
imul
mov
push
rcll
enter
dec
mov
aaa
insb
adc
cmp
ror
fcos
cmp
shll
fidivs
js
dec
in
cmpsb
xchg
and
inc
pop
aam
int
mov
pop
negb
in
je
inc
leave
stos
sbb
sub
iret
add
or
scas
pop
pop
sub
leave
aaa
mov
nop
mov
mov
mov
dec
test
mov
fcompl
inc
push
scas
mov
mov
cld
jnp
and
fimuls
mov
push
idivl
add
out
clc
jb
jmp
jl
aam
stos
jge
jb
dec
ss
arpl
mov
popl
dec
mov
xor
push
aam
ficoml
push
aaa
orb
out
mov
addr16
cmp
adcb
outsl
adc
aaa
mov
mov
scas
pushf
pop
pop
lret
rcr
lock
mov
iret
icebp
mov
outsb
cmp
jne
bound
fisttpl
addr16
cmp
xchg
aad
and
push
js
pop
jae
xchg
sub
inc
push
mov
sub
inc
lds
push
outsl
iret
inc
push
test
mov
bound
les
out
mov
out
mov
mov
mov
adc
movsl
and
dec
popa
stos
mov
orb
dec
pop
notb
lds
sbb
sti
test
je
dec
in
mov
xchg
push
pop
cmp
push
in
inc
xor
je
sbb
mov
push
xor
ss
push
pop
sbb
daa
stos
cwtl
insl
mov
add
xchg
add
inc
dec
imul
pop
mov
test
adc
lds
jo
pop
mov
call
xlat
sbb
out
mov
inc
xor
lods
xorl
arpl
and
enter
leave
fcmove
add
rcr
mov
jno
movsl
pop
sub
sbb
cmp
jecxz
mov
add
scas
mov
mov
sub
add
roll
into
imul
dec
sbb
xchg
mov
push
ds
pop
mov
in
lock
mov
sub
js
pop
mov
pusha
sbb
mov
cmp
and
push
shlb
xor
pop
pinsrw
mov
xchg
shll
imul
out
rcll
out
mov
imul
imul
cmp
inc
arpl
inc
cmpsl
jne
push
push
cmp
add
jbe
mov
xor
jno
push
pop
inc
daa
das
mov
shll
mov
pusha
out
mov
dec
push
add
jecxz
lret
imul
mov
mov
movsb
jnp
dec
pop
hlt
jae
arpl
and
or
mov
addl
shlb
adc
and
sbb
fiaddl
jo
scas
sbb
movsb
js
xchg
xor
hlt
push
add
addl
loope
jmp
pop
pop
cs
push
xchg
test
divb
jb
stos
sub
sbb
jg
or
push
mov
enter
jge
lods
call
and
sti
xor
pop
out
or
fmuls
fwait
insb
inc
lds
lods
and
adc
test
mov
call
pop
in
mov
and
cmp
push
cltd
fisubrs
inc
mov
popf
mov
mov
mov
add
dec
scas
mov
sbb
loope
sbb
dec
idivl
xchg
int3
pop
dec
push
push
and
jmp
stos
pushf
je
sub
mov
xlat
jmp
cmp
jle,pt
subb
subl
cmp
outsb
shll
mov
stc
pop
adc
js
lahf
out
push
push
je
push
in
sub
dec
cli
mov
mov
xchg
repz
sub
adc
pop
aam
jmp
or
jecxz
bound
ds
xchg
test
sub
mov
or
pop
or
push
add
mov
adc
jmp
cmp
fucomi
xchg
ss
mov
mov
pop
mov
adc
add
in
and
shrl
sti
in
rcr
cmp
sbb
sbb
jge
xor
sbb
lea
sbb
xchg
fstpl
loopne
stc
or
jne
jg
and
test
jp
dec
pop
add
rorw
pop
jnp
push
jecxz
cmpsl
mov
jle
icebp
daa
stos
cmp
xor
lcall
test
fsubrs
add
scas
xor
daa
lods
mov
mov
nop
or
add
xor
and
lea
outsl
cwtl
adc
mov
cwtl
lock
cld
sub
rcl
jae
lcall
pop
xchg
mov
sbb
mov
js
out
inc
addr16
lods
repnz
sub
call
jl
mov
mov
out
adc
bound
cmpb
gs
nop
gs
push
mov
pop
adc
and
in
inc
adc
inc
adc
call
test
mov
inc
das
pop
add
xor
mov
repnz
cmc
jae
sahf
cs
sub
add
xor
ljmp
inc
aas
sbb
aam
stos
test
std
dec
adc
bound
in
or
test
sub
sub
mov
test
jo
in
leave
rcll
inc
pop
xchg
cmp
sarb
jb
add
cmpsb
xor
push
xor
mov
fimuls
aad
outsb
and
es
fnstcw
cwtl
inc
xchg
cmpsb
negb
mov
and
lahf
add
push
test
jno
cwtl
sub
jge
in
pop
inc
ror
push
fistl
adc
sbbb
xorl
xchg
movsb
gs
add
sub
jp
shlb
fucompp
shlb
sbb
jns
push
das
mov
pop
lods
add
rolb
jg
xor
out
mov
test
push
test
push
or
jecxz
push
cmp
push
rorb
in
cmpsl
sbb
in
lea
bound
mov
scas
sbb
aad
mov
pop
push
xchg
or
or
sbb
rcrl
aas
or
or
pop
gs
mov
add
loope
mov
incb
pop
jle
dec
popf
xor
lds
mov
das
mov
mov
aam
inc
call
lods
sbb
jmp
movsl
mov
jge
shl
dec
mov
mov
jns
pop
xor
mov
and
out
pop
jne
jbe
popf
es
jb
arpl
inc
dec
shll
int
jp
inc
adc
test
fcomip
pop
sahf
sahf
jns
dec
inc
fadds
mov
jle
xor
jnp
cmpsb
push
push
inc
movsl
jle
jl
test
movsb
xor
xlat
ror
das
push
jle
cmp
sbb
xlat
xorl
cmc
mov
lret
xor
arpl
in
clc
rcl
pusha
fsubrl
pop
popa
lret
xor
push
cmp
in
shll
xchg
add
cmpsl
popa
mov
push
jbe
add
inc
add
popa
adc
loop
scas
dec
xor
std
jg
sbb
lahf
or
pushf
jno
mov
cmp
std
inc
lea
or
dec
hlt
mov
xchg
xor
xchg
push
aaa
or
mov
gs
pop
jbe
jecxz
rcrb
mov
cmp
mov
mov
push
sbb
or
rclb
in
xlat
arpl
out
jno
sbb
loopne
loopne
dec
adc
mov
jmp
sub
add
xchg
sbb
xor
dec
test
stos
cmp
mov
sbb
mov
gs
clc
stos
aaa
arpl
lahf
lahf
inc
push
cmp
arpl
push
ficoms
xchg
ret
loope
mov
dec
sbb
loope
sbb
inc
dec
adc
mul
test
orl
jg
fisttpl
push
cmp
test
cmpsl
dec
outsb
std
adc
mov
imul
jae
sti
fistl
jno
mov
sub
xorb
mov
out
mov
jo
mov
ss
shrb
jnp
xor
mov
andb
push
add
scas
outsl
cwtl
adc
test
or
sub
jnp
mov
es
test
cmp
es
lahf
insb
clc
popf
loope
ficomps
or
push
xchg
out
dec
pop
mov
mov
js
pop
ja
mov
subl
add
cli
movsb
bound
push
mov
addr16
imul
jnp
mov
hlt
sub
divb
adc
cmp
mov
cmp
pop
sti
jp
push
xchg
mov
adc
jo
fwait
add
call
outsb
loopne
jl
in
ljmp
imul
fcomps
js
nop
loopne
mov
adc
sbb
subl
push
push
mov
and
test
cwtl
mov
icebp
and
pop
and
popf
add
pop
jmp
sub
inc
and
movsl
cmpsb
and
dec
dec
and
shlb
loope
repnz
cmp
xlat
cltd
jle
adc
sub
repnz
in
test
adc
ljmp
cwtl
and
rep
daa
ret
insb
mov
mov
in
inc
aas
fistl
cmp
lahf
cltd
lahf
pop
push
ds
aas
leave
es
inc
xchg
ret
test
jp
ficomps
xor
mov
out
sti
xlat
mov
or
xchg
fidivs
sub
push
in
rcll
mov
and
cmp
adc
mov
cmc
xor
stc
xor
aas
cld
jo
mov
stos
mov
mov
pop
addr16
fcompl
icebp
iret
adc
aas
mov
negl
pop
gs
push
push
pop
pop
lds
fcomi
cmp
mov
adc
ss
add
lds
loopne
jnp
cmpsb
dec
push
int
jle
stc
mov
cwtl
sahf
jae
add
ret
xorl
decb
xor
fists
icebp
jge
cs
mov
jnp
popa
xor
dec
in
xchg
stos
sahf
out
dec
jns
pop
inc
xchg
mov
or
call
pop
lcall
cmp
hlt
stc
les
arpl
mov
xchg
jg
cmp
cmp
mov
or
mov
sbb
lret
cld
xchg
rcr
push
mov
shrl
sbbl
lcall
out
xlat
or
dec
fwait
lea
fs
mov
dec
xchg
std
clc
aas
jecxz
in
jecxz
fistpll
dec
out
aas
jge
inc
nop
mov
int3
dec
sub
icebp
adc
loop
push
lret
dec
or
loope
hlt
dec
dec
xchg
in
sbb
aad
das
ret
pusha
ja
push
adc
mov
imul
cmpsl
aas
xchg
aas
mov
fsubl
aam
loop
fstps
mov
mov
jne
push
jno
fnstsw
gs
or
push
push
or
shlb
ds
push
inc
jmp
lret
push
push
insl
mov
cmp
lea
jle
sbb
imul
mov
popf
out
or
xor
loopne
and
inc
mov
addr16
fnstcw
or
inc
lock
mov
jne
jbe
dec
sbb
sbb
out
ja
mov
arpl
cli
sub
out
and
test
into
push
lds
mov
addl
orl
mov
add
into
dec
xchg
dec
sub
iret
inc
inc
fldl
mov
and
push
pop
xchg
adc
frstpm(287
in
stos
scas
call
loop
movsb
nop
jbe
jecxz
hlt
in
shl
push
mov
and
leave
repnz
xor
jns
sbb
mov
mov
fldcw
push
push
dec
add
and
clc
in
pop
cmp
in
add
and
push
mov
mov
dec
iret
pop
and
xchg
add
mov
ljmp
xor
cmp
pop
mov
inc
fldenv
ss
mov
cmpsl
das
pop
jge
addb
int
pop
add
sub
repz
out
jae
mov
jmp
sbb
lret
xchg
push
loopne
adc
jb
xchg
cltd
lds
dec
xor
xchg
imul
or
xchg
xor
push
inc
insb
cmpsb
or
xrelease
inc
pop
push
push
cmp
inc
push
fdivl
xor
popf
movsl
push
shlb
repz
push
out
popa
ss
rorb
dec
push
arpl
sub
adc
mov
sbb
mov
cwtl
testb
sahf
jne,pt
testb
dec
jmp
jne
lahf
roll
adc
push
pop
hlt
sub
andb
mov
mov
icebp
xor
cmp
pop
add
pop
add
xchg
call
xchg
test
sbbl
andb
mov
add
dec
call
gs
xlat
shll
test
cmp
insl
mov
pop
push
pop
jne
jne
sbb
cmpl
lods
sbb
movsl
cli
lret
mov
jo
push
stos
dec
sub
and
inc
ja
inc
shlb
xor
xchg
or
sbb
jb
icebp
mov
add
dec
pop
aas
shl
ficompl
inc
cltd
lea
scas
dec
sarl
cmp
lret
push
lcall
adc
stos
shl
fs
hlt
notl
pop
push
ficoml
xorb
push
adc
lcall
mov
sti
sbb
idivl
pop
xor
aam
inc
cld
push
xchg
inc
enter
jp
mov
xchg
adc
cmp
pop
or
fildll
fisubl
rclb
pop
test
sub
cmpsl
inc
fadds
cwtl
fcomps
pop
xchg
gs
rorb
daa
in
push
push
add
sub
sbb
add
sbb
xchg
leave
pop
push
or
lods
or
in
sub
push
addr16
xor
cmp
cli
dec
jae
jne
je
xchg
push
enter
lcall
and
jo
mov
in
mov
adc
int3
cmpsl
mov
in
test
inc
movsl
sub
push
cmp
les
gs
xlat
nop
cmp
lock
adc
rcrl
sbb
mov
mov
ljmp
lcall
rolb
pop
mov
fldt
pop
pop
jae
out
adc
insl
mov
mov
xor
fidivs
mov
insl
or
jmp
inc
loop
repnz
dec
mov
add
jp
xchg
lods
daa
dec
push
mov
stos
pop
xchg
mov
ja
inc
int
aam
stos
jl
in
xor
roll
mov
adc
xchg
pop
or
mov
adc
movsb
clc
fstp
pop
fsts
jmp
in
scas
sub
adc
dec
jbe
dec
mov
dec
adcb
movsl
xor
sbb
pop
jle
loope
sbb
xchg
jp
push
fs
and
mov
test
lea
popf
int3
dec
repnz
in
or
or
pop
sub
testb
pushf
rol
shll
mov
push
sbb
inc
add
stos
or
or
pop
loop
aad
cmp
cmp
xor
imul
or
dec
add
push
xchg
pop
into
adc
push
int3
rorb
pop
xor
or
out
fwait
scas
je
in
xchg
pop
push
inc
cmp
mov
fsubr
shll
push
mov
lds
into
js
out
int3
inc
sbb
push
stos
lret
or
testb
mov
rorl
roll
push
mov
cmp
jg
cmc
jb
add
repz
je
pop
dec
mov
pop
pop
or
int
sbbl
ret
mov
sub
lods
sahf
dec
iret
cmp
sub
pop
add
pop
mov
scas
lret
cmp
jp
dec
mov
mov
movsb
mov
pop
jp
xchg
icebp
fsubrs
jne
jg
mov
mov
lea
loope
jg
mov
inc
fildl
pop
push
les
cmpsl
fldenv
adc
push
cmpsl
mov
in
or
xor
jne
inc
shll
call
xchg
testb
loopne
mov
data16
rcrl
or
cwtl
mov
lods
xchg
dec
mov
cmp
mov
out
pop
and
dec
push
ja
xor
fwait
insl
jp
mul
jp
push
pusha
in
ljmp
pop
mov
iret
push
xchg
cmp
sub
ficompl
outsb
xchg
fs
inc
aaa
or
xchg
bound
ss
loop
sbb
sbb
cmpsb
and
aaa
or
sub
arpl
xchg
pop
icebp
pop
je
jp
mov
mov
pusha
jl
outsb
jb
pop
jp
test
xchg
inc
je
jle
ret
push
ljmp
popa
rcrb
adc
les
cli
mov
mov
mov
mov
push
rcll
repz
sub
inc
lcall
jae
push
arpl
xchg
sti
jo
mov
dec
ja
cmpsl
push
sahf
push
icebp
fmul
test
and
fwait
push
xchg
xchg
and
pushf
inc
int3
inc
fmuls
mov
in
pop
pop
ja
and
or
adc
xor
push
xchg
mov
and
pop
cmpsb
das
adc
in
cmc
sahf
mov
sbb
mov
jmp
repz
imul
ljmp
mov
push
dec
push
cmp
popf
lahf
fidivs
jae
jne
outsb
pop
inc
dec
dec
js
mov
repz
pop
ja
xchg
mov
loopne
sti
mov
out
xor
out
inc
mov
call
mov
popf
jne
pop
jno
xchg
movsl
cmp
shlb
testl
pop
pushl
loop
sti
lahf
bound
sbb
jne
add
or
aas
lods
aam
lret
mov
insl
vpsubw
into
mov
add
inc
inc
or
adc
jo
cmp
xor
repz
xchg
sbb
jo
iret
mov
sarl
mov
fcoms
pop
or
and
out
jo
cli
push
mov
mov
or
jmp
jg
cld
daa
xor
insl
push
inc
out
sbb
push
adc
jne
mov
push
stc
in
dec
cwtl
movsb
lcall
iret
jle
xchg
pushf
dec
dec
mov
scas
push
fcoms
push
insl
add
movb
mov
aaa
lret
aas
xorl
jmp
adc
mov
imul
fists
stos
iret
scas
jl
mov
mov
sti
scas
add
and
xchg
mov
aas
dec
aaa
imul
std
mov
adc
fsubrp
je
xor
push
gs
sbb
mov
mov
je
lods
clc
push
adc
jl
jbe
dec
test
xchg
fdivrs
dec
jnp
punpckldq
rolb
push
into
stos
jg
stc
and
adc
fbstp
sbb
jecxz
fistpll
in
jp
call
lret
xor
gs
subb
aaa
fidivs
imul
jg
dec
cmc
cmp
daa
subl
movsb
mov
cli
mov
addr16
xchg
xor
mov
aad
addb
mov
fisttps
out
adc
add
outsb
rcrb
or
lcall
jbe
push
mov
pop
xchg
aas
or
sbbb
jle
popf
out
shl
outsl
xor
sub
les
js
lret
gs
in
sti
mov
jle
lret
repnz
scas
rcll
ja
mov
movsl
and
test
sbbl
js
jns
sbb
inc
mov
cmp
movsl
pusha
pushf
sbb
mov
vmwrite
jg
lahf
enter
negl
xor
add
inc
imulb
movsl
ds
pushf
or
mov
in
xchg
sbb
aam
pop
das
cld
lock
les
lcall
orb
test
imul
jbe
fstpt
loopne
testl
fwait
pop
rcrb
shlb
mov
lods
mov
pusha
test
cld
test
xchg
sbb
or
pop
in
dec
arpl
xchg
xchg
mov
nop
stos
in
mov
test
xchg
outsb
mov
ret
aas
inc
adc
cmpsl
or
jge
xchg
push
imul
pop
lock
pop
inc
lahf
dec
jb
mov
push
shll
and
sub
ret
sub
mov
outsb
or
mov
imull
pop
cli
outsl
dec
aas
test
pusha
into
imul
ja
push
lret
out
cmp
test
aas
shr
jmp
and
insl
jecxz
adc
or
jns
int3
adc
movsb
in
out
dec
jno
push
xchg
das
dec
test
rcrl
out
movsl
mov
push
cs
les
sbb
cmp
cmp
xlat
pushf
xchg
loopne
stos
in
inc
bound
jmp
jnp
stc
jns
fimuls
adc
sbb
faddl
cmpb
push
mov
adc
ret
cmp
flds
call
push
ss
pop
add
xchg
xor
or
popf
pusha
inc
cli
push
rorb
fcomps
sbb
sbb
ja
ss
stc
popf
xchg
and
in
xchg
xor
outsl
xchg
fsubl
fwait
dec
mov
pop
js
cli
popa
pushl
mov
gs
jecxz
dec
mov
jnp
sbb
les
lea
and
jge
enter
cmp
fdivrl
aam
or
outsl
std
mov
sub
fs
jecxz
xchg
aad
out
imul
sub
cltd
fldl
in
rcrb
push
xchg
jno
movsl
xchg
outsb
enter
xchg
repz
test
lea
faddp
cmp
daa
jge
xchg
dec
imul
das
mov
je
cmp
mov
inc
cmp
clc
jbe
outsb
dec
inc
aam
mov
shll
mov
push
imul
cld
movsl
icebp
pop
and
lods
and
jo
mov
aas
xchg
mov
aaa
adcb
rcr
and
jge
popf
out
mov
je
push
mov
pop
ljmp
cmp
add
out
int3
insl
pop
mov
sub
adc
stc
int
dec
jae
xor
pop
call
scas
out
das
and
jbe
jnp
stc
fcomps
or
sahf
inc
cld
mov
and
add
ja
insl
add
clc
pop
pop
or
mov
gs
add
sub
inc
sub
lock
ret
in
movsl
pop
pop
mov
lds
mov
fdivrs
test
jbe
xor
add
clc
pusha
push
mov
jno
or
pop
cmp
cmp
jmp
ljmp
lea
sub
hlt
push
jne
int
or
mul
pop
or
and
pushf
xlat
xchg
aad
adc
jo
xchg
push
pop
mov
in
call
push
lahf
mov
jne
jae
mov
inc
repnz
lods
mov
push
mull
fildl
sahf
movsb
adc
jge
test
outsb
sub
sbb
xlat
mov
xor
sub
in
ljmp
lods
out
and
iret
sbb
xchg
xlat
je
aaa
and
lds
push
add
das
adc
adc
bound
fyl2xp1
daa
cmp
push
sarb
mov
int3
js
cmc
mov
sahf
into
mov
xor
dec
sbb
dec
sub
mov
insl
fsubs
ljmp
push
repz
fcompl
or
mov
clc
cmp
in
hlt
bound
sub
fists
mov
and
or
orb
js
scas
mov
into
mov
dec
ret
je
and
rorl
arpl
mov
or
push
cmp
bound
mov
inc
arpl
js
lds
imul
pop
xor
jecxz
add
idivl
jns
jecxz
adc
add
loopne
sbb
dec
xor
mov
mov
icebp
and
decl
add
sub
leave
pop
or
xor
xor
inc
sub
or
sub
inc
sub
loope
bound
sub
inc
loopne,pn
out
push
int
dec
out
xchg
cmpsl
testl
pop
or
movsb
jmp
sahf
sbb
dec
mov
stc
rcrb
lock
mov
out
push
std
xchg
mov
sti
xchg
pop
cs
dec
lock
fildll
push
xor
pop
inc
lods
xor
addr16
or
push
sahf
lods
mov
push
and
push
into
xlat
push
test
xor
xchg
insb
sbbl
in
repz
insl
fistpll
sarl
jo
jge
pushf
dec
cvtpi2ps
cmpsl
loope
xchg
mov
test
lods
adc
xor
pushf
cmp
ss
cwtl
cli
loopne
nop
int3
pop
xchg
dec
sbb
sub
mov
outsl
cmp
mov
mov
xor
fs
sbb
lret
incl
out
mov
pop
fwait
mov
out
enter
rorl
int
push
pop
fs
mov
mov
stos
mov
or
hlt
pusha
ljmp
xchg
add
xchg
mov
cmp
lea
jo
sub
cs
jle
cmpsl
lods
mov
jae
adc
in
mov
mov
pusha
jmp
or
out
fwait
jmp
mov
je
fsts
dec
ljmp
aaa
popa
mov
jmp
fsubl
mov
adc
dec
mov
mov
fdiv
gs
mov
push
jl
loop
out
sbb
std
dec
sub
cli
bound
mov
fwait
nop
add
sub
mov
mov
daa
push
test
outsl
ret
jmp
frstor
ljmp
es
lret
mov
and
insl
xorl
loop
mov
lock
ret
repz
cmp
inc
scas
cld
jnp
mov
hlt
or
jl
and
push
xchg
dec
in
sbb
aaa
lods
iret
mov
cmpb
negb
icebp
lret
cmp
and
pop
pop
jns
fnstenv
addr16
dec
pop
jo
dec
mov
jae
adc
xor
jmp
movsl
stos
cmp
sub
sub
pop
and
ds
jle
jl
xor
gs
ds
fwait
andl
in
jl
jg
pusha
lret
cli
sub
and
xchg
jne
imul
or
cld
mov
pcmpgtb
test
push
pop
mov
aad
jg
ljmp
mov
mov
out
or
outsl
pminsw
je
jg
and
jnp
jge
bound
cmpsl
mov
jno
push
inc
outsb
in
ljmp
rolb
popf
scas
mov
addb
mov
shl
dec
jge
pop
testb
stos
leave
cmp
cmp
or
jnp
cmpsb
fistps
or
pop
push
pop
popa
sub
dec
insl
popa
rcrl
cli
xchg
out
push
dec
mov
adc
ss
xchg
jae
loop
outsl
cwtl
mulb
dec
arpl
push
cltd
loop
stos
xor
rorl
xor
sbb
xchg
stos
xorl
jno
mov
xchg
and
adc
pop
dec
mov
inc
adc
adc
jle
jns
call
outsb
popf
inc
xor
notb
aas
add
xor
lods
push
int3
sbbb
lods
clc
jbe
gs
lahf
mov
hlt
sub
pop
mov
popf
data16
jae
fildll
push
lret
sbb
jnp
out
dec
adc
rolb
lods
push
outsl
mov
stc
fsubrs
cmp
pop
mov
sahf
mov
mov
scas
mov
mov
fdivr
push
mov
pop
stc
ljmp
pop
loope
fldenv
cmp
xchg
dec
and
scas
popf
xchg
adc
sar
aaa
in
in
scas
push
push
movsl
jae
push
lret
rol
sti
cld
and
shlb
pop
aas
add
fwait
sti
loop
sbb
dec
out
and
lahf
xor
leave
lcall
cmp
push
rcrl
std
add
sub
pop
ja
idiv
inc
mov
mov
scas
movsb
pop
jno
sbb
mov
xor
add
push
arpl
adcb
inc
sbb
cmp
test
inc
sbb
xor
lahf
imul
jp
xchg
mov
inc
imul
pop
cld
popf
daa
push
cli
loope
xor
shr
icebp
xchg
add
movsb
inc
jle
dec
insl
adc
ficoms
xchg
xor
or
scas
lahf
sub
mov
lock
mov
sbb
loope,pt
cltd
movsb
loop
xor
sub
sub
mov
loope
test
mov
mov
xchg
adc
jnp
dec
push
lock
leave
mov
mov
cmpsb
inc
shll
je
or
mov
xchg
aam
jp
fimuls
loopne
and
mov
rolb
pushf
or
jne
add
push
inc
push
fists
out
cld
shl
pop
jge
adc
mov
and
jmp
fldcw
sbb
gs
sarl
call
xor
add
subl
ds
xchg
aam
or
repnz
insl
mov
xlat
fcmovne
popf
mov
gs
stos
fdiv
popa
jle
mov
daa
sub
out
add
sahf
mov
movsl
and
and
cmpsb
jb
orl
push
iret
aam
xchg
fldenv
xchg
xchg
orl
adc
shll
loop
pop
mov
scas
fidivs
repz
or
lock
cmp
inc
cmpsl
cmpl
scas
and
outsl
mov
fnsave
xchg
lahf
jno
push
lret
mov
lret
jae
iret
jl
mov
loop
sub
test
sub
repz
loop
xor
mov
fistpll
notb
stos
pop
stos
std
aad
ss
lods
mov
mov
je
lods
insb
repnz
cmpb
or
lock
and
xchg
push
xor
add
repz
mov
ret
inc
jae
negb
xchg
or
cmp
or
andb
pop
pop
adc
jmp
push
mov
sbb
andl
push
aas
ficompl
enter
pop
dec
push
sbb
mov
cmp
movsl
icebp
and
fwait
out
fidivs
mov
es
enter
and
or
es
pop
clc
les
jbe
div
nop
cmp
or
mov
add
cltd
add
test
adc
cmpsl
insl
sbb
call
fs
aaa
arpl
popa
in
aam
sub
outsl
add
jge
inc
out
mov
sbb
lret
mov
pop
out
sarl
clc
popa
pop
arpl
loope
jle
aaa
or
xchg
jns
pop
push
out
mov
add
fwait
xchg
or
imul
data16
sbb
jp
xchg
mov
cltd
idivl
cwtl
mov
in
xor
nop
lock
lds
jne
fs
add
fcompl
sahf
std
in
lahf
push
mov
xchg
test
inc
cmp
sbb
mov
inc
shlb
adc
inc
mov
mov
push
push
imul
inc
cmp
push
cmp
loopne
jbe
sahf
testb
shrb
aam
leave
loop
cmpsb
pop
loop
and
out
xor
cltd
pushf
mov
mov
fsubrs
sbb
test
out
movsl
mov
sti
outsl
mov
mov
cltd
mov
xor
enter
in
sbb
push
and
lret
inc
mov
cltd
add
je,pt
cmp
cmpsl
shll
and
out
push
mov
inc
mov
fsubr
fiaddl
ficomps
pop
scas
cmp
mov
std
insb
dec
push
movsb
lods
mov
sub
cmpsl
dec
insb
movsl
pop
les
inc
or
add
loope
add
sub
loope
shl
std
in
rorl
mov
add
mov
in
movsl
popf
sub
les
pushf
push
dec
dec
sarb
test
add
divl
loopne
les
loope
fisubl
jl
test
push
scas
call
or
enter
cwtl
xor
adc
mov
jb
push
aas
pop
jecxz
xchg
ss
adc
add
js
inc
xorl
push
sub
in
add
cmpsb
outsl
cld
sti
mov
out
in
mov
test
es
jmp
scas
ss
sbb
cwtl
jb
pusha
push
inc
repnz
leave
mov
std
out
inc
jbe
xor
push
scas
outsl
cmc
rcrl
xchg
mov
loop
cmp
xchg
lods
ljmp
xor
in
movsb
icebp
mov
and
loop
add
mov
repnz
pushf
cmp
fcoml
sub
shlb
cmp
fs
push
ss
rep
dec
mov
insl
shrl
xor
inc
dec
cmp
sbb
insl
sub
outsl
push
push
xchg
into
adc
xor
inc
sarb
bnd
mov
xchg
cmpsb
inc
iret
xor
testb
push
int
mov
lods
mov
dec
rcll
in
jmp
push
mov
mov
mov
aas
jg
sti
push
insb
das
leave
and
pusha
sub
push
sbb
mov
mov
iret
xor
ds
jmp
repz
dec
cmp
inc
adc
jecxz
addr16
push
sar
mov
sbbl
mov
add
in
cli
mov
inc
xchg
sbb
mov
add
lret
xor
mov
jge
sbb
push
scas
repnz
imul
sbb
in
xchg
inc
rolb
hlt
pop
int
push
sbb
test
or
sub
jmp
inc
mov
dec
je
out
mov
scas
test
out
lret
arpl
mov
xor
scas
int
sarb
cmp
in
shlb
pushf
xor
decl
mov
negl
jl
mov
mov
iret
popf
xor
dec
or
pop
mov
data16
inc
popf
fisubl
clc
mov
push
hlt
jecxz
push
and
xor
in
xor
in
scas
adc
jne
cmpsb
clc
mov
aas
pop
cmpsl
pop
int3
and
sub
sub
pop
call
jmp
mov
fcoml
movl
rorl
dec
cmp
add
adc
fmuls
insb
jno
into
inc
idivl
ret
pop
mov
push
jmp
addl
mov
pop
fsubrl
or
out
jmp
aad
jae
lcall
push
inc
jp
dec
or
cmp
daa
xor
mov
and
stos
aad
inc
jae
xor
xchg
lret
lods
mov
scas
mov
mov
xor
mov
mov
inc
xlat
mov
imul
bound
test
xor
or
push
shrd
sub
push
inc
fildl
mov
cmp
into
fists
add
test
mov
jmp
cmp
jecxz
push
in
stos
pop
adc
aad
outsl
inc
movsb
int
std
xor
fistpl
inc
clc
inc
sbb
and
sub
mov
pop
mov
mov
mov
or
lahf
mov
cmp
jnp
and
jnp
rcll
fsub
mov
out
push
ljmp
clc
fstpl
jne
sub
fwait
inc
xchg
push
pop
xor
fwait
andl
xor
andb
in
mov
fcoml
adc
insb
ss
mov
inc
repnz
and
loop
pop
jno
inc
sub
push
in
pop
push
mov
inc
lea
daa
cmp
add
int
iret
jno
cmp
mov
push
xchg
lahf
pop
fcoms
mov
cmc
daa
stc
xchg
ficoms
push
lods
sub
pop
pop
xlat
push
dec
cmp
mov
mov
mov
jne
fsubrs
pop
lods
mov
repz
lock
in
aad
inc
mov
mov
lods
inc
sahf
push
xchg
lods
pop
sbb
xor
fldl
int3
out
out
pop
jbe
aas
dec
test
sub
out
xorl
inc
jnp
insb
pop
ret
aaa
int3
frstor
popf
push
inc
mov
icebp
repz
jns
xor
in
xor
xchg
lods
repnz
xchg
jmp
ficomps
mov
xor
rcr
iret
jecxz
shl
push
mov
sti
daa
leave
pop
data16
jns
decb
mov
mov
pushf
fildll
cld
in
subb
lahf
xchg
outsl
mov
jo
popf
dec
adc
pop
cmp
or
fucom
or
add
lea
ficomps
adc
repz
jno
insb
inc
mov
add
imul
jecxz
push
stos
cli
xchg
mov
xchg
iret
mov
rcl
unpcklps
pop
insl
jns
mov
pop
mov
and
insb
fidivrs
xor
xorl
adcl
xchg
iret
cmp
movsl
mov
ljmp
sbb
jg
outsb
push
out
roll
cmpsb
or
adc
mov
mov
cmpsb
pusha
push
or
push
cmp
inc
jmp
sbb
mov
pop
hlt
jmp
iret
les
xor
test
push
out
cmp
int
mov
inc
in
repz
pusha
and
sbb
loopne
mov
mov
cwtl
adc
push
jbe
mov
jmp
cmpsl
bound
ds
clc
out
aad
pop
xor
xlat
mov
jl
mov
inc
divl
pushf
lahf
fdiv
xchg
inc
lock
gs
mov
and
in
pushf
nop
cli
mov
jecxz
stos
shll
add
sbb
mov
inc
dec
cwtl
xor
fisttps
pop
mov
fucomip
rorl
sbb
mov
xchg
sbb
add
je
mov
insl
in
movsb
inc
movsb
and
mov
cmc
xor
adc
pop
add
xchg
jmp
out
jge
push
int3
cmc
fwait
mov
jecxz
or
stos
push
gs
push
add
mov
test
cmpsl
loop
hlt
sub
out
mov
sbb
adc
push
arpl
xor
scas
jo
jecxz
and
xchg
lods
enter
xchg
adc
frstor
sub
test
jo
inc
sub
int
out
add
mov
xchg
adc
sub
add
popf
add
cmc
jl
mov
data16
dec
sub
mov
hlt
push
sbb
push
clc
add
test
out
and
xchg
xchg
jge
jnp
sub
push
push
xchg
and
and
jne
pusha
cmp
mov
sbb
mov
jo
aaa
mov
xchg
xor
xlat
gs
andb
mov
cltd
ds
sub
mov
in
dec
aam
sbb
je
mov
mov
xchg
dec
cmp
imul
dec
out
cmp
and
mov
xchg
xchg
jno
or
aas
test
negl
jne
or
xchg
push
mov
jne
inc
jae
adc
push
in
sbb
add
mov
xor
je
dec
pusha
shll
lods
push
loope
mov
in
call
sub
loopne
xor
dec
xor
adc
std
std
mov
mov
ret
xchg
addr16
cmpsb
inc
mov
xor
and
inc
lret
jg
out
sbb
rclb
push
add
aas
sbb
imul
in
lds
ja
movsb
loopne
js
rcll
movsl
and
movsl
mov
cmpsl
inc
ss
data16
xchg
outsb
mov
imul
jo
inc
dec
xor
in
jo
xor
sub
pop
and
lret
sub
cmpsl
fiadds
pop
jne
imul
push
or
mov
pop
add
pop
dec
or
stos
xor
mov
shr
push
push
cmc
mov
dec
and
cmpsb
mov
movsb
stos
push
mov
fsubs
xor
mov
xor
xchg
mov
jmp
sub
das
rcrl
dec
stos
pop
popf
cmpsl
jge
cmp
test
imul
jns
cli
push
jp
sub
ljmp
aam
or
add
leave
daa
xchg
shr
sbb
arpl
xchg
faddp
mov
add
dec
or
push
xlat
pusha
in
scas
fdivr
repnz
inc
inc
and
push
xchg
push
shll
and
push
mov
lcall
and
push
rcrb
mov
fsubs
scas
aad
cmp
arpl
insb
mov
icebp
imul
std
xchg
icebp
mov
dec
fwait
lret
stos
inc
es
es
mov
movsb
jns
aaa
mov
jnp
jg
sub
pop
jae
enter
mov
fnstenv
push
test
js
out
xlat
pop
and
or
cmp
cmp
outsl
int3
dec
jmp
sub
add
adcl
mov
lret
cmp
sub
cmpsb
jl
subl
iret
aam
inc
fldt
test
lods
lea
push
xor
in
push
mov
pop
push
xor
inc
aad
add
mov
or
push
mov
sub
mov
mov
jne
or
cmp
xor
cmpsb
jns
js
mov
add
les
or
out
ficompl
push
dec
mov
fwait
addr16
test
enter
hlt
aaa
inc
jno
clc
fcoms
sub
lock
xchg
out
fs
lret
lcall
adc
std
icebp
fwait
xchg
int3
repz
loop
push
mov
leave
gs
jge,pn
iret
popa
mov
lfs
test
mov
roll
and
shr
mov
push
cmp
xorl
aam
push
repnz
rclb
mov
push
mov
int
push
test
pop
xchg
mov
frstor
push
push
and
pop
pop
xchg
push
mov
mov
fs
icebp
fistpll
push
fnstsw
or
fldcw
das
das
fistpl
cs
mov
jmp
stos
push
inc
out
adc
aam
adc
push
addr16
and
nop
and
add
movsw
scas
xor
sub
lods
cltd
xchg
jecxz
lahf
mov
fidivs
jg
cmc
ret
lea
jp
pop
mov
dec
std
jbe
sub
push
clc
in
int
ret
insb
mov
push
mov
pop
scas
clc
pop
mov
bound
loop
xchg
xlat
push
fldt
sbb
mov
push
xor
mov
add
mov
fdiv
push
rclb
ret
mov
mov
sbb
imul
icebp
arpl
add
icebp
aas
gs
notl
xchg
xchg
sub
icebp
fisttpll
mov
push
sub
sbb
jbe
mov
xchg
inc
mov
push
loopne
lds
dec
shrb
divb
push
cmpl
ljmp
daa
in
fsts
sbb
jp
mov
xchg
sub
enter
sub
dec
jg
fwait
mov
mov
push
push
in
sbb
leave
xchg
mov
aam
ljmp
xlat
loope
inc
mov
push
scas
lcall
pusha
stos
popf
fs
movsb
dec
xchg
adc
dec
sub
js
cwtl
push
lcall
xchg
dec
adcl
and
decb
xchg
and
pop
lock
sbb
mov
aaa
sub
and
inc
jbe
ds
loopne
xor
je
shr
push
aaa
inc
enter
adc
jl
or
cmpsb
das
or
jp
cltd
pop
xor
pop
stc
jne
inc
out
jp
sbb
call
mov
dec
xor
push
stos
push
mov
xchg
jne
pop
xorl
lods
call
push
or
jne
push
mov
pusha
rorb
lock
sbb
sbb
scas
push
fwait
sbb
sbb
dec
ds
lock
loope
sbb
push
mov
jmp
adc
and
mov
mov
cld
cmp
shr
int
leave
fstps
pushf
xchg
arpl
push
sbb
inc
bswap
jmp
movsb
call
aad
jo
lcall
add
in
or
jmp
mov
or
inc
push
icebp
lock
sbb
jo
pusha
movsl
sub
or
pop
test
insb
idiv
mov
and
xlat
out
push
xchg
insb
add
pop
push
inc
je
lock
and
mov
sub
scas
call
sub
int
lahf
fs
sarl
or
dec
fsubrs
cmpsl
sahf
test
xchg
sub
mov
lods
int
lods
ficompl
test
push
xor
sub
add
jmp
call
mov
or
xchg
or
jge
icebp
icebp
lods
pop
push
in
push
ror
inc
add
adc
mov
aaa
mov
cmp
cmpsl
mov
cmp
jge
inc
repnz
inc
das
lcall
jae
xor
leave
mov
mov
lods
cs
pusha
in
inc
mov
repz
jno
ret
jmp
jge
aam
test
arpl
cmc
push
incl
enter
jg
js
aaa
jb
ror
mov
sub
stos
and
cmp
pop
inc
mov
xchg
outsl
push
pop
lcall
lock
aad
mov
sub
sahf
adc
xorb
and
ss
jb
push
icebp
ja
mov
es
sbb
dec
jbe
jle
pop
flds
lahf
movsl
lcall
lock
test
loope
gs
outsb
stos
sub
stos
int
mov
test
sbb
mov
mov
ja
lcall
dec
lods
jbe
ss
adc
add
cmpsl
test
mov
sbb
out
pop
fsubrl
or
adc
push
xchg
xor
mov
mov
js
mov
sti
pop
test
mov
das
stos
adc
add
mov
call
mov
aas
mov
test
jecxz
or
arpl
xchg
or
leave
xlat
sbb
or
rclb
dec
dec
adc
lcall
mov
adcl
nop
sub
mov
or
aad
into
mov
mov
sbbb
lret
std
jg
inc
movsl
mov
pop
push
or
jp
cmpsb
cmp
xchg
stc
aad
mov
cmp
movsl
cld
fwait
xchg
mov
adc
jl
xchg
xchg
mov
imul
fwait
push
and
popf
sub
je
dec
jne
into
xor
jle
daa
addl
jge
jo
adc
xor
push
cs
popa
js
lcall
lods
adc
dec
pushf
rclb
call
mov
jo
lcall
push
data16
test
dec
jmp
or
jns
pop
loop
ja
loop
inc
pop
movsl
or
nop
jg
lds
xchg
sarb
dec
stos
push
fiaddl
mov
jecxz
pop
sahf
rcrb
inc
mov
add
xchg
aaa
adc
stos
and
lock
push
lock
ljmp
jo
repz
and
push
test
push
fmuls
mov
add
je
and
push
fistpll
mov
imul
jmp
xchg
mov
sub
clc
popf
data16
adc
loope
pop
aam
cmp
imulb
testl
ret
sub
jle
sbb
loop
jp
sbb
je
xchg
add
sub
mov
sti
repz
out
pop
and
mov
push
dec
in
loope
shlb
inc
or
or
xchg
and
das
and
sbb
out
xorl
sub
pushl
push
xchg
shrl
cmp
iret
in
addr16
rcr
test
and
out
lcall
jmp
adc
dec
inc
sbb
mov
inc
jnp
sbb
xor
pop
push
push
jbe
vpackssdw
mov
cmp
push
gs
cmpsl
jecxz
xor
popa
imul
inc
orl
test
xchg
stc
repz
push
adc
pusha
mov
ds
cmp
div
popa
mov
int
je
das
lods
inc
pop
sbb
scas
cmp
lcall
sub
call
mov
xor
cmp
mov
xlat
sub
pop
push
nop
jb
push
push
cld
jge
inc
xchg
dec
packsswb
les
pop
jae
imul
jmp
rorl
leave
jmp
sahf
pop
and
fstl
repnz
dec
in
icebp
inc
std
popf
cs
loope
frstor
mov
or
shr
push
jl
pop
pop
orb
test
ds
imul
in
pop
fisubl
xorl
in
pushf
sbb
and
mov
push
mulb
jb
movsb
jbe
pop
cmp
sub
dec
sti
pop
test
bound
bound
mov
fisttpll
out
or
popf
push
data16
cmpl
jnp
xchg
jmp
adc
sub
dec
mov
test
xor
jl
jmp
out
mov
leave
mov
push
shll
add
sbb
and
sub
div
out
test
cmpsb
inc
adc
adc
testl
pop
sti
inc
jl
and
jl
add
xor
pop
dec
cmp
lods
or
xorb
das
in
sahf
mov
jbe
xchg
hlt
lahf
stos
jmp
dec
push
sub
adc
sbb
out
or
mov
mov
or
fsubl
rolb
mov
jl
pop
jns
pop
stos
movsl
test
mov
out
add
dec
movsl
daa
aaa
cmp
sbb
jge
mov
xor
loope
pop
lret
scas
jp
mov
js
push
sahf
pop
das
insb
or
test
in
cltd
mov
imul
cmp
in
or
outsl
hlt
aam
leave
pop
dec
int3
hlt
jg
jno
leave
ret
jo
jns
mov
sub
jno
in
into
and
sti
or
and
push
das
sbb
flds
and
push
mov
xchg
mov
push
cld
inc
fists
push
add
mov
fidivl
testl
mov
out
orl
nop
mov
sub
and
nop
sti
jb
cmp
inc
fists
clc
and
sub
pop
lds
stos
shl
mov
sbb
sub
sbb
cmp
xchg
pop
adc
jb
repz
fdivl
mov
movsb
flds
cmp
ficoms
push
out
pop
rol
shlb
jne
rcl
inc
test
pop
cmp
push
xor
lock
pop
std
mov
mov
mov
into
sbb
out
mov
jg
fcoms
xor
jecxz
pop
sbb
leave
push
cltd
dec
inc
pop
sbb
cmp
mov
das
push
pop
movsb
cltd
cmpsb
out
je
les
leave
mov
cmc
sahf
xchg
fsts
out
loope
push
fimull
xlat
imul
inc
idiv
mov
jle
mov
dec
jmp
push
adc
adc
or
int3
push
mov
jae
nop
outsb
xor
cmc
xchg
xor
loope
loope
cmp
test
js
pop
in
xchg
cmp
xchg
fs
ret
loopne
sbb
jo
cmp
dec
mov
sub
xchg
mov
add
and
scas
mov
sbb
jge
push
loopne
dec
mov
push
inc
dec
inc
push
int
push
jge
xchg
lock
cmp
scas
mov
sar
rorb
insl
gs
nop
outsb
xchg
loope
ds
clc
dec
push
sub
outsl
test
fcmovbe
ljmp
mov
rcrb
dec
push
loopne
jge
arpl
popf
cmp
test
and
jge
mov
jmp
outsb
test
aam
xor
call
add
jns
cmp
ss
cmc
negl
ds
or
out
fisttpll
negl
iret
lds
in
xchg
fmuls
lcall
dec
mov
mov
testl
sbb
push
adc
push
fbld
xor
push
lcall
sti
cmp
xchg
into
aaa
push
push
mov
or
pop
ss
mov
addr16
cmpsl
mov
lret
fisubs
pushl
mov
inc
jp
test
dec
xchg
lret
cmp
dec
pushf
cmpsb
aas
lahf
lods
dec
xor
dec
or
sbb
iret
repz
ds
dec
ss
jge
jg
aaa
pop
stc
fisttps
pop
xchg
outsl
mov
adc
es
and
loopne
fsubr
push
ret
xchg
call
mov
and
jnp
sbb
jecxz
pop
inc
shll
dec
cmp
mov
push
cmp
mov
ja
jne
out
dec
xor
cltd
dec
or
bound
aam
loopne
sti
mov
add
push
sbb
cmp
call
pop
rorb
jno
mov
je
leave
test
jl
scas
pop
addr16
sbb
test
ret
adc
push
daa
cmpsb
inc
ljmp
mov
mov
xor
inc
xor
push
dec
pop
cld
push
loop
mov
push
jbe
imul
cmp
mov
cmp
jb
xchg
mov
jp
mov
call
add
fists
das
into
stos
movsl
cld
insl
sbb
jo
jp
dec
addps
lret
jle
fcomi
scas
repnz
sbbl
cwtl
lock
test
jmp
dec
sbb
cmp
sub
xchg
imul
and
xor
test
cmpb
or
sahf
das
sub
je
sbb
pop
inc
xlat
mov
and
or
jge
xlat
lea
mov
outsb
push
int
popa
cmc
outsl
push
xchg
lds
mov
sub
ja
arpl
mov
test
xchg
arpl
push
icebp
ja
or
cmp
pop
fidivl
cld
jno
dec
cmpl
pop
mov
mov
mov
mov
pop
ret
shll
fstpt
fs
mov
push
imul
aam
shl
cmp
fwait
sub
iret
sahf
add
ss
cmp
in
mov
in
xchg
lods
and
push
inc
mov
in
pop
cli
popf
pop
sbb
ds
fmulp
sarb
sbb
sub
cmp
fwait
sub
outsb
pop
or
jge
sbb
dec
push
jbe
sub
push
mov
adc
push
push
cmp
jl
sti
fbstp
mov
pop
push
sbb
arpl
mov
in
sbb
sbb
shl
int3
adc
mov
or
jg
mov
xor
mov
add
test
sbbl
aas
imul
shlb
aas
dec
scas
repnz
int
jae
xlat
out
sub
mov
xchg
mov
sbb
add
or
mov
or
testb
lcall
mov
mov
mov
add
dec
xor
mov
sarb
or
ljmp
mov
and
cmp
xor
push
iret
push
in
sti
inc
dec
insl
add
sub
cld
stos
fildll
mov
sahf
mov
push
lods
call
push
lods
outsl
stc
fdiv
pop
pop
leave
push
stc
cmp
adc
xchg
enter
sbbb
dec
xchg
test
fs
outsl
mov
adc
daa
cmpsl
iret
lea
pop
repnz
push
insb
in
add
test
inc
iret
and
jg
dec
sar
add
jne
lods
out
sub
outsl
pop
jmp
xchg
or
sbb
add
dec
or
adc
mov
jecxz
push
adc
divl
push
mov
inc
push
xor
call
out
mov
or
inc
xchg
jge
sahf
mov
mov
cld
mov
jg
sbb
mov
sbb
jle
call
in
in
sbb
cmp
fmull
push
je
and
push
cwtl
xchg
xorb
mov
dec
jb
mov
outsb
xchg
xor
lcall
pop
outsl
sahf
adc
mov
movsb
in
fbstp
out
pop
jecxz
mov
sub
aaa
out
or
mov
mov
lods
mov
sbb
mov
fbstp
jno
movb
dec
pop
rcrl
xchg
stos
xor
fcompl
or
or
in
xor
jnp
sbb
xchg
cmp
in
sub
iret
pop
xchg
and
jne
dec
adc
xchg
pusha
arpl
mov
lahf
pop
in
dec
push
or
push
inc
or
sti
pop
push
loope
popf
repz
in
lret
ret
mov
sti
stc
inc
inc
xor
jnp
mov
push
movsl
movsb
loop
ljmp
les
mov
movsl
pop
cli
cmpsl
mov
std
stos
and
push
into
je
out
sahf
aam
push
out
icebp
es
mov
in
dec
fidivrl
das
sbb
xlat
adc
inc
ret
repz
jmp
pop
arpl
iret
movsl
or
fidivrs
fsts
mov
in
pop
inc
and
mov
inc
lret
mov
and
sub
sub
jnp
ljmp
ss
xor
adc
subb
leave
pop
cld
dec
add
add
and
or
inc
adc
inc
xchg
js
inc
sub
hlt
mov
cwtl
ret
xchg
adc
inc
es
sbbb
jnp
xchg
or
mov
add
or
inc
sahf
std
loopne
or
sbb
fbstp
cmpsl
das
fdivr
cmp
icebp
adc
loopne
testl
imul
xor
xorb
ret
dec
ja
xchg
cwtl
sahf
addl
cmp
lods
div
stos
inc
popf
cltd
jle
or
sbb
dec
test
arpl
pop
dec
jecxz
jb
jns
imul
orb
insb
dec
mov
mov
mov
rolb
inc
repz
ret
fistl
test
add
xchg
cltd
out
sbb
jg
sbb
mov
std
mov
bound
lret
jne
pop
jle
stos
jp
enter
enter
pop
jmp
es
inc
dec
mov
jp
cmp
xchg
jge
sbb
frstor
mov
push
js
adc
xor
js
inc
rclb
mov
ret
push
sbb
xchg
cmp
push
push
or
or
test
push
int
jecxz
les
jle
aaa
xchg
les
mov
push
and
mov
xchg
repnz
les
xchg
sub
push
fsubp
mov
xor
cmc
lock
mov
stc
mov
jno
mov
lret
push
movsb
xchg
mov
js
xchg
scas
lds
in
loop
jp
sbbl
fdivrl
repnz
mov
jbe
mov
notb
popa
inc
ss
pop
sub
add
cltd
cmpsb
pop
testl
cmp
loop
pop
push
mov
mov
hlt
jne
call
or
sbb
pop
ficompl
ja
mov
fwait
rclb
mov
cmpsb
lods
cs
or
mov
xchg
fisttps
mov
push
call
mov
cld
and
xor
decb
cld
mov
adc
sub
mov
pop
xor
outsl
jmp
mov
imul
sahf
fidivs
push
xor
pop
sti
mov
jae
iret
xchg
nop
pop
sub
std
repz
out
sarb
repz
mov
icebp
add
gs
cld
in
xchg
xchg
mov
sbb
push
jae
pop
mov
mov
and
stos
dec
mov
inc
in
xlat
enter
push
jmp
int3
inc
loopne
mov
popf
sbb
insb
rcrl
add
fsubp
cs
gs
lret
cld
leave
in
mov
popf
mov
mov
adc
rolb
aaa
add
lret
addr16
scas
or
out
lcall
stos
mov
inc
sarl
sbb
mov
in
mov
mov
shrl
mov
icebp
xchg
sub
mov
mov
sarl
sarl
test
fldt
stos
insl
bound
js
pop
cs
mov
lahf
cmpsl
sub
push
shlb
ljmp
xor
cmp
or
lea
mov
es
push
stc
into
jne
loop
inc
std
and
sbb
mov
and
idivl
jmp
lret
enter
loop
xchg
jb
jns
jmp
das
aad
mov
jmp
cmpsb
in
jb
add
mov
jmp
data16
jo
xor
lret
xor
inc
inc
jl
stos
test
popa
mov
sub
and
cmp
in
popf
mov
ficomps
pop
ja
xor
sbb
dec
dec
add
adc
cmpsb
mov
push
stc
mov
addb
push
out
popf
lock
insl
push
jp
pop
outsb
popa
mov
pop
shll
lcall
sbb
dec
in
pop
repnz
imul
mov
lock
mov
inc
jae
xor
insb
cmp
lock
or
sub
or
sti
lds
aas
cwtl
lcall
pop
out
lahf
inc
lods
nop
mov
inc
das
test
cmp
push
jne
int
cmc
jmp
and
mov
mov
adc
sbb
mov
cmc
insb
dec
adc
std
call
push
push
or
rol
push
mov
out
dec
mov
sub
cmpb
mov
mov
fcomps
and
test
lret
je
in
pushf
pop
inc
xchg
mov
mov
outsl
xchg
xchg
inc
and
adc
add
rolb
repnz
loopnew
ret
sub
mov
push
pop
adc
call
imul
rcr
inc
push
lahf
int3
lods
xchg
pop
mov
sub
sarl
mov
fidivrl
pop
mov
mov
insb
ret
orl
outsl
inc
adc
mov
sub
addr16
sbb
mov
mov
ds
mov
push
aam
inc
stos
repnz
sub
inc
and
ret
pop
andb
cltd
lds
and
pop
adc
testb
inc
sar
mov
cmp
mov
imul
add
push
rcr
loope
das
out
push
test
pushf
pop
mov
mov
jns
xchg
das
pop
adc
adc
setbe
add
lret
mov
push
add
jge
sub
sbb
lds
outsl
ja
in
out
stos
pop
fwait
rcrl
dec
das
cmp
insb
mov
add
mov
sub
mov
push
je
fstl
jmp
cmp
or
imul
and
fcompl
xchg
dec
out
scas
push
mov
jns
jne
xor
movsl
rep
das
sub
mov
aam
pop
jmp
xchg
outsl
mov
jae
call
xor
or
test
pop
lock
mov
or
xchg
stos
jg
cmpsl
mov
jbe
mov
mov
jle
mov
inc
jmp
in
jp
push
fs
je
std
or
add
aam
sbb
xor
ret
mov
jae
fwait
mov
cmpsb
nop
mov
aas
inc
data16
sbb
aas
test
loopne
out
sti
popw
xchg
push
pop
dec
in
mov
sub
adc
cmpsb
pop
std
roll
sbb
push
add
scas
mov
ds
fidivrl
adc
arpl
lds
incl
inc
cmp
jmp
sbb
jg
mov
sarl
scas
push
in
dec
call
sub
mov
push
notb
cmp
add
push
lret
loop
rep
xchg
loop
cltd
fnstsw
out
pushf
stos
fnstcw
adc
mov
mov
mov
sub
xchg
mov
jnp
cs
or
mov
popa
mov
lret
repnz
jns
mov
sub
pop
jnp
fisubs
jo
jmp
loop
sbb
adc
dec
jg
cmp
sarb
xlat
push
es
dec
push
pop
jmp
push
cmpsb
mov
mov
xorb
sub
mov
icebp
lock
cld
scas
loop
in
ficomps
sub
push
into
sti
push
mov
pop
push
cs
lcall
jle
mov
xor
and
adcl
cmpsb
sub
fdivp
push
in
lret
ret
aas
fs
ljmp
data16
adc
test
sahf
add
rorl
rol
int3
aaa
pop
stos
int
or
shlb
add
cwtl
and
inc
push
clc
push
xchg
mov
movsl
fsubs
int3
inc
pop
jge
outsl
push
pusha
mov
dec
or
loope
mov
cmpsl
imul
mov
aam
xorl
adc
pop
mov
mov
dec
mov
jp
loope
test
sbb
out
les
fwait
daa
shlb
out
ljmp
into
adcb
sbb
mov
cli
ja
aam
out
mov
cmp
pop
hlt
mov
mov
or
shl
fcmovbe
lock
jmp
xchg
push
inc
mov
idivl
hlt
mov
shll
adc
inc
aas
lret
jp
mov
mov
std
jns
push
push
xchg
mov
cmp
ljmp
lret
jge
and
stc
scas
push
loopne
pop
xor
popl
insl
hlt
in
in
sub
add
sbb
movsl
inc
jecxz
test
push
outsb
add
fistpl
repnz
stc
jbe
cmpsb
sbb
mov
push
cltd
mov
mov
pop
inc
sub
lods
cmp
mov
arpl
sahf
jmp
sub
mov
adc
and
push
mov
sar
pusha
mov
repz
inc
inc
fs
jae
xor
fisttps
clc
xor
cmp
jns
gs
lret
scas
out
cwtl
lret
sub
call
adc
divl
adc
and
xchg
or
jb
rorl
aad
stos
sub
mov
mov
ljmp
aas
icebp
add
fsubl
scas
scas
out
fs
jmp
movsl
sbb
sub
dec
pop
cltd
dec
testl
and
xchg
jbe,pn
push
jp
js
aaa
xchg
je
adc
stos
shl
ss
jns
divl
bound
mul
inc
add
mov
xchg
mov
decl
out
call
repz
push
mull
jns
sbb
stc
jns,pt
out
iret
fsubrp
lock
ret
popf
mov
adc
shrb
mov
and
stos
dec
add
pop
mov
into
add
push
mov
adc
repz
insb
ss
mov
daa
mov
lret
mov
lock
dec
and
out
cmpsb
fsubr
cs
jb
stc
mov
iret
dec
mov
lret
adc
adc
test
ds
inc
in
cs
mov
fcomps
out
push
xor
jmp
add
mov
jno
test
loope
out
lret
dec
sub
call
cli
lcall
fists
adc
jns
pusha
ds
xchg
ficomps
dec
inc
push
test
xchg
inc
sbb
add
stos
xchg
pop
push
cmp
pop
loop
pusha
push
std
fwait
call
xlat
sbb
mov
inc
mov
lods
xor
mov
xchg
inc
inc
out
jmp
rcr
cmc
fimuls
dec
popa
fcomps
mov
mov
jo
out
dec
bnd
mov
out
stc
rol
sbb
mov
daa
dec
mov
mov
adc
in
fidivs
jbe
lahf
xchg
sub
repz
cmp
shrb
lea
repz
test
mov
add
adc
es
clc
or
outsb
dec
int
popa
lret
das
movsb
cmp
mov
cmp
leave
lods
pop
xchg
fsubrs
out
arpl
stos
andb
dec
pushf
fcoms
roll
sub
into
xchg
repnz
pop
cmp
popf
inc
loope
imul
scas
inc
js
lods
mov
xlat
mov
aam
pop
insb
lret
jl
mov
fcoms
jl
xor
loop
or
cmc
sub
inc
aaa
pop
sbb
lret
cwtl
mov
mov
push
cli
push
mov
mov
dec
shrb
int3
xchg
fstl
cwtl
adc
testb
pop
subl
lret
push
mov
jl
pusha
fsubl
lret
and
sub
xchg
or
lret
gs
ja
gs
xor
daa
cmpsb
jns
inc
mov
jmp
and
cltd
lcall
popl
or
out
xor
cmp
call
sahf
out
lahf
pop
add
dec
dec
fdivr
and
repnz
lds
mov
int3
push
mov
push
mov
test
cmp
ljmp
hlt
fsubl
lret
repz
pop
insl
adc
pop
test
sahf
sbb
dec
testb
and
mov
clc
push
fsubrs
mov
aas
out
in
add
push
mov
stc
cmc
jo
push
sbb
shlb
push
loope
das
lcall
idiv
jns
fimull
je
repnz
xchg
ds
rdtsc
mov
push
dec
add
aad
pusha
in
leave
push
push
or
in
cwtl
mov
sub
pop
push
push
aam
or
mov
push
int
movsl
pop
cmp
mov
mov
inc
push
imul
pop
mov
movsl
adc
int
inc
popa
mov
jg
fldt
jg
xchg
mov
fsts
mov
cmpsb
pop
dec
sti
dec
pop
mov
clc
movsl
adcb
iret
sti
inc
push
push
popa
aam
sbb
in
divb
pop
cmp
insb
push
pushl
ret
pop
jb
int
fistps
jns
test
xchg
mov
push
in
jle
pushl
test
add
cltd
inc
pxor
cli
xchg
es
daa
cmp
insb
ss
mov
jns
rclb
iret
inc
fisubs
pop
adc
stos
data16
enter
cmp
jb
jns
jecxz
fildl
lods
xchg
or
pop
mov
push
fdivs
mov
cmp
mov
fnstsw
fs
insl
add
adc
pop
ret
push
fcompl
cmp
call
out
rolb
clc
xchg
std
popa
inc
es
mov
push
sub
repz
mov
lret
add
or
mov
rcl
adc
lcall
jo
std
outsl
inc
sarl
mov
push
pop
sub
sbb
pop
aas
cmc
cmc
das
cmp
jge
dec
outsb
jge
cmp
adc
inc
add
les
lds
mov
mov
cmp
jmp
cmp
xchg
shr
jno
jno
inc
xchg
jne
rorl
adc
aam
mov
rcl
dec
adc
out
in
inc
jo
cs
mov
test
add
cmp
sbbb
or
lret
lods
call
int3
enter
les
mov
cli
push
adc
inc
popa
call
jp
stos
pushf
in
cmc
aas
sbb
sub
add
jmp
lea
pop
test
repz
cltd
xor
xchg
or
in
adc
lea
and
lock
jns
fcompl
mov
shll
outsb
xchg
sarb
jmp
mov
test
cld
lcall
ja
mov
inc
out
in
xchg
or
ret
cmp
faddl
cmp
call
mov
mov
cs
xchg
outsb
shlb
and
jnp
mov
adc
pop
pushf
lods
adc
inc
clc
jo
sub
mov
mov
movsl
xchg
pushf
sub
push
jl
sub
cmpsl
add
dec
push
push
pop
mov
jl
sub
jmp
jge
cmpsl
pusha
add
es
xchg
imul
aaa
lods
ljmp
cmpsl
leave
andb
cmc
scas
mov
sub
sahf
mov
lahf
pop
xchg
in
dec
lds
mov
mov
pop
jecxz
lret
sub
jl
mov
shrl
jnp
pushf
sub
stos
jp
and
add
fildl
pop
lret
jo
pop
sub
adc
ljmp
or
das
xchg
mov
push
inc
pusha
or
dec
iret
adc
xchg
jnp
xchg
push
xor
out
mov
ret
adc
cmc
inc
cmp
pop
outsb
xor
push
rorb
in
cld
lods
mov
sub
xchg
dec
ret
inc
jne
pushf
stos
aam
and
mov
xor
cmpsl
lods
pushf
in
orb
fs
leave
rcl
faddp
andb
jl
inc
and
push
adc
cmp
xor
loope
mov
mov
cli
inc
pop
lods
subl
cli
leave
fnsave
movsb
arpl
inc
sbb
in
int
js
int
inc
push
in
mov
fisubrl
filds
push
xchg
inc
je
add
hlt
mov
ss
fwait
out
addr16
lock
mov
adc
and
arpl
sub
mov
hlt
cli
ret
je
jecxz
ljmp
jae
call
and
insb
fisttps
inc
mov
es
inc
roll
arpl
lcall
shrb
add
pop
sarl
punpckhdq
cli
dec
xor
mov
lret
frstor
ret
or
jl
pop
daa
xorl
mov
xchg
cmp
je
dec
aad
dec
and
loope
adc
inc
leave
mov
mov
loope
mov
enter
fwait
add
shr
stc
push
dec
jg
jecxz
sti
xchg
xor
mov
fcmovnb
inc
jmp
mov
jecxz
in
ret
jmp
sub
sub
mov
pop
mov
in
orl
xchg
xchg
xchg
pop
and
imul
call
xor
push
out
call
clc
push
es
ret
inc
pop
test
out
rcll
and
loope
shl
add
add
pusha
test
insl
or
hlt
add
xchg
or
pop
add
and
int3
or
pushf
ds
cmp
sarb
xor
jecxz
insb
pop
xchg
xchg
aas
js
loopew
pop
mov
and
stc
or
xchg
xlat
scas
rolb
leave
mov
cs
insl
pop
shl
xchg
jb
jns
popf
in
mov
xor
pop
dec
and
add
cmp
adc
xchg
mov
in
leave
mov
mov
jg
out
aaa
mov
je
xchg
popf
pop
nop
xchg
imul
sub
jecxz
or
add
popf
pop
ret
mov
repnz
pop
mov
cmpsb
cltd
xchg
mov
in
xchg
in
cmpsb
jo
out
jae
dec
xor
ret
scas
sub
fisttpl
push
and
mov
in
xor
add
mov
inc
sub
xor
fxch
push
cmp
jle
jb
aad
jno
push
pop
dec
and
push
inc
sub
es
in
mov
mov
push
loope
xor
jnp
and
mov
push
fdivrs
dec
and
dec
mov
addl
fs
ja
pop
xchg
push
arpl
mov
test
pop
je
lahf
outsb
xor
cld
jb
inc
lcall
dec
int
jno
orb
push
inc
mov
jns
lea
in
les
mov
lods
loopne
xlat
mov
cmpsl
inc
mov
pop
ss
insl
jg,pt
ss
out
ss
arpl
dec
loop
int
enter
ds
je
cmp
rcll
pop
jnp
xor
pop
xlat
mov
arpl
mov
xchg
or
or
jne
test
push
pushf
sarb
sti
push
dec
shlb
es
pop
mov
jp
movsb
dec
popf
dec
mov
repz
lahf
das
movl
lret
jmp
sub
xchg
in
adc
scas
fmull
push
and
enter
fidivl
in
xchg
ret
mov
test
mov
xchg
dec
outsl
xor
popa
js
jg
dec
cmp
pusha
fildll
sub
or
arpl
mov
xor
jbe
pop
sub
das
cmpsb
jp
sub
or
pop
jg
in
testb
mov
les
outsb
cs
xchg
inc
cmp
jae
mov
xor
sub
loop
mov
dec
push
das
test
mov
fs
dec
leave
scas
popa
gs
lahf
sbb
ret
jmp
aaa
testb
push
push
xlat
push
test
adc
cli
mov
loop
sub
arpl
xor
imul
das
mov
movsl
loop
ljmp
push
jbe
cmp
xchg
rcrl
inc
add
add
gs
and
push
adc
mov
cld
insl
or
icebp
push
mov
sti
lret
enter
movsl
icebp
incb
fimull
xor
add
xchg
ffreep
cmp
push
push
mov
andl
aad
xchg
mov
sbb
adc
vsubps
dec
ficompl
inc
in
mov
xor
lds
aaa
rol
addr16
or
dec
sbb
lahf
sbb
sti
mov
int
mov
stos
and
sub
les
mov
jmp
loop
push
stos
movsl
push
dec
jbe
push
repnz
sub
jno
jbe
xor
and
mov
push
incl
mov
mov
shrl
sahf
jg
call
pop
or
stc
dec
push
sbb
and
adc
cmp
push
inc
cmpsl
mov
and
push
mov
addb
imul
rcrb
and
cmp
xchg
jp
jb
jno
into
adc
mov
jg
fimuls
mov
jecxz
mov
enter
icebp
mov
sub
adc
and
sub
sub
shlb
sbb
cmp
adc
pop
test
cmp
push
and
in
cli
lock
push
add
iret
push
inc
mov
pop
lea
add
mov
xor
xchg
clc
mov
jecxz
into
mov
pushf
mov
xor
sbb
and
test
sub
xchg
add
insl
mov
xchg
mov
pop
ficompl
rorb
cmp
pop
jnp
sbb
aam
mov
or
add
mov
imul
int
insl
inc
je
stc
adc
cmpsb
mov
sti
add
adc
sub
aam
mov
jae
outsl
mov
addl
dec
outsb
lods
mov
dec
xchg
cmc
or
sbb
add
fistpll
push
out
mov
jne
mov
std
cmpsb
jnp
xor
mov
cltd
jp
adc
test
cmp
adc
test
and
dec
arpl
hlt
je
sti
pop
or
xlat
movsb
pop
sub
cmp
es
adc
fsubs
inc
mov
shll
mov
dec
pop
mov
mov
lods
cmc
add
or
std
mov
dec
ljmp
sub
push
sahf
cmp
pop
mov
xchg
add
sub
push
ret
add
dec
jge
add
push
cld
push
data16
xlat
cltd
push
add
pushf
jmp
js
iret
in
fs
sub
mov
jp
mov
test
test
repnz
jno
leave
cmp
adc
sub
js
pop
aam
out
or
mov
cmp
outsl
dec
cmpsl
jno
sbb
int
sbb
cmpsb
js
jnp
ficoms
insl
mov
xchg
jb
mov
cmp
dec
inc
ds
stc
jb
add
lret
fisubs
js
scas
or
test
or
or
mov
in
imul
dec
sbb
fucom
jge
mov
dec
mov
clc
pop
pushf
xor
jbe
ret
and
hlt
jecxz
mov
es
push
loopne
test
and
in
popf
sar
aad
cmc
add
mov
nop
add
mov
mov
sub
repnz
mov
sbb
cmpsl
je
cmpsl
push
fadds
fwait
push
je
sbb
push
xor
cmp
cld
movsb
mov
sti
mov
pop
ret
pop
outsb
push
lds
inc
clc
fs
mov
subl
aam
jmp
sbb
add
mov
xchg
cmp
shll
ficoms
and
fidivrl
inc
outsb
nop
inc
add
outsb
fisttpl
xor
and
cwtl
fucomi
inc
out
or
scas
mov
jb
inc
xchg
out
or
leave
xchg
shrb
xor
ret
jge
adc
test
cmp
pop
lea
pop
mov
add
int3
mov
dec
xor
out
sbb
movl
sti
pushf
jg
test
movsb
dec
add
sub
xchg
pop
dec
in
data16
scas
into
inc
in
sti
jecxz
enter
cmp
push
or
adc
inc
or
ljmp
mov
shlb
movsb
inc
inc
sub
mov
test
xchg
and
cli
out
xchg
clc
scas
sbb
lret
mov
inc
inc
mov
push
lcall
add
lcall
jge
and
movl
dec
sbb
push
rcr
iret
mov
bound
loopne
outsl
dec
iret
fwait
jbe
mov
stos
mov
mov
insb
add
lods
mov
int
mov
pushf
pusha
push
sbb
in
mov
mov
call
jnp
into
xor
and
andl
and
pusha
adc
lea
in
fs
icebp
xor
ror
aad
sbb
mov
jae
mov
movss
pop
adc
cli
mov
into
lcall
sbb
mov
lahf
lret
aad
stc
or
push
shrl
inc
mov
adc
outsl
inc
dec
xlat
inc
outsl
pop
ja
leave
std
xchg
jl
shl
int3
rolb
xchg
cmp
xchg
push
xchg
or
inc
lfs
jle
add
mov
fstpt
xor
push
push
outsl
xchg
mov
xchg
xchg
aas
mov
fcompl
mul
xchg
cmp
mulb
xor
sahf
incb
push
cmpsb
arpl
cmpsb
sti
sub
sub
es
xchg
shrb
mov
sbb
in
fcoms
mov
scas
xchg
rcrl
mov
pushf
mov
ljmp
sar
or
mov
pushl
push
into
iret
gs
pop
lods
dec
cmp
leave
mov
xchg
pop
daa
push
push
data16
sbb
jg
inc
fsubl
push
cmpsl
sbb
mov
dec
popa
test
test
jg
xchg
stos
popa
popf
imul
test
mov
jp
inc
data16
pop
mov
shll
cmp
xchg
arpl
jnp
inc
xchg
adc
data16
lods
mov
jg
js
subl
sub
xor
int
sti
and
int3
mov
or
pop
mov
fistpll
mov
sti
shr
xchg
jb
xorb
mov
and
lret
or
loope
ljmp
in
mov
pushf
mov
call
out
fincstp
icebp
push
jnp
cmc
pop
in
mov
lds
dec
popf
testb
xchg
jnp
sbb
enter
fnstsw
jo
cmp
xchg
dec
mov
add
popf
test
mov
rolb
xchg
js
faddl
imul
sbb
cmp
inc
arpl
orl
frstor
ret
push
dec
hlt
cltd
icebp
mov
inc
ds
mov
jecxz
loopne
or
cmp
pop
adc
adc
enter
lock
in
rsqrtps
in
push
cmpsl
lahf
in
lcall
jle
fstps
pop
xchg
mov
popf
pushf
sbb
ficoms
mov
pusha
xor
and
mov
dec
xor
push
stos
pop
in
dec
jmp
movsb
rcr
push
and
pushf
movzbl
in
lods
mov
test
ss
sub
jge
aam
mov
lahf
insb
push
lock
sbb
push
push
sub
cmp
jl
pop
push
aad
sub
add
pop
leave
jle
daa
push
lods
std
sbb
adc
sub
mov
cld
xor
nop
cmp
test
mov
cli
loop
jecxz
test
cmpsl
xchg
iret
mov
lods
movl
mov
cwtl
fists
push
jp
mov
jp
sbb
pop
xchg
faddl
addb
jbe
aam
das
mov
push
add
cli
aaa
jg
adc
sarb
xchg
mov
mov
imul
ret
aaa
jge
or
pop
dec
jmp
xor
pop
pop
jnp
int3
testl
push
and
sbb
and
jmp
cmp
cmp
mov
xchg
xchg
dec
xchg
shll
je
dec
call
lret
xchg
push
mov
cmp
jl
or
lods
mov
xchg
dec
dec
std
jge
mov
dec
pop
loopne
mov
jmp
cmp
sbb
ljmp
ja
jmp
lods
sbb
dec
jbe
mov
cmc
pop
clc
mov
add
sbb
andb
addr16
inc
lret
push
mov
dec
lret
adc
sub
rorb
or
jl
repnz
in
insb
aas
lahf
movb
mov
and
cwtl
sub
lcall
sbb
mov
add
dec
jg
pop
adc
jo
aad
mov
cmp
and
cld
mov
ja
das
es
xchg
fisttpll
sub
mov
dec
arpl
rclb
inc
pop
insb
test
inc
inc
sub
dec
dec
cmp
icebp
int3
add
or
sarl
bound
jnp
in
cwtl
test
es
or
call
inc
outsb
in
pop
and
sub
pop
xchg
push
push
adc
fimull
sar
ja
orl
jnp
lret
out
mov
jp
subl
stos
pop
arpl
mov
mov
mov
shl
daa
filds
push
rorl
or
jg
mov
and
lock
and
es
cmp
sub
mov
loop
lods
scas
out
xchg
shll
jmp
cs
hlt
pop
jb
popf
jo
inc
outsl
fwait
adc
pop
scas
pop
rcrb
inc
mov
xor
scas
insb
test
cmpsb
sbb
ret
call
sbb
gs
cmp
push
stos
fistpl
lcall
aaa
negl
stc
or
pop
lea
imul
cmpsb
push
dec
mov
daa
jne
out
xchg
out
push
push
lret
or
stos
pop
data16
iret
jne
sub
xchg
ficoms
popa
jnp
cmpl
jo
mov
jb
or
cmp
and
shrb
insl
lret
jb
aaa
jle
jo
int
cld
sbb
je
xor
sbb
cmp
daa
ficoml
push
notb
in
jecxz
ret
outsl
push
fcomps
push
movsl
xor
xor
lods
pusha
aaa
rcrb
mov
outsb
popa
pusha
mov
js
pop
mov
mov
jge
mulb
dec
adc
jge
push
add
jp
lcall
mov
testb
es
and
es
in
nop
mov
in
push
cltd
popf
popa
adc
or
ret
mov
xchg
mov
sti
jecxz
pushf
imul
mov
gs
fistps
or
mov
lock
mov
xor
and
mov
push
pop
movsb
lcall
fwait
sbb
adcb
scas
or
push
pop
test
or
jge
push
mov
enter
jle
xor
sbbl
xchg
xor
xchg
ljmp
xchg
mov
pop
mov
ljmp
scas
aaa
aas
mov
pcmpgtw
mov
mov
mov
dec
pop
hlt
xorb
add
cmpsb
fcompl
add
loopne
jnp
aad
fnstenv
xor
pop
pop
pop
js
je
mov
cmp
addr16
shll
in
lods
scas
movsb
cmc
je
pop
loop
fistps
sbb
int3
push
mov
dec
mov
mov
aaa
icebp
mov
out
pop
pop
iret
jle
int
or
ss
xchg
add
das
out
pop
push
cmp
enter
aam
es
sbb
add
adcb
push
je
stc
xchg
int
mov
in
add
ret
push
xor
pop
ljmp
mov
int
es
scas
cltd
sbb
cmp
cmp
aam
fdivrl
push
addb
pop
mov
jne
ds
cmp
and
jnp
sub
mov
dec
imul
and
outsl
imul
add
arpl
and
and
fidivrl
outsb
adc
push
daa
fidivs
inc
and
add
mov
das
loop
dec
lock
fbstp
das
mov
or
int
jno
fcomp
jnp
mov
out
push
jae
mov
iret
or
outsl
xor
cmp
pop
lret
cld
push
sbb
add
lds
xlat
fsubrs
ds
das
mov
mov
adc
push
and
out
fstps
aam
mov
mov
subl
push
mov
fisttpll
daa
or
jecxz
xor
je
in
cmc
sbb
cld
pop
in
and
cmp
nop
divb
incb
mov
push
push
fimuls
sub
ja
sbb
pop
pop
pop
stos
and
dec
in
mov
xor
jp
enter
sbb
cmp
fmul
ljmp
adc
cmc
lahf
and
adc
or
insl
setl
add
jmp
cmpsb
dec
sub
mov
cmpl
adc
jmp
push
loopne
std
and
fcoml
bound
push
fisubl
pop
test
jne
popf
out
and
jb
mov
std
in
int
mov
sub
push
into
adc
adc
lock
sub
or
andl
adc
icebp
aaa
jge
fdivs
pop
xchg
in
dec
in
lcall
lret
leave
or
sbb
add
fildl
pop
mov
and
mov
int
out
xchg
pop
js
int3
cld
jnp
gs
pop
arpl
xchg
dec
insb
aad
sbb
pop
inc
sub
enter
push
fstpl
adc
adc
jle
and
sub
add
mov
jp
xor
pop
sahf
mov
popf
mov
pop
and
mov
pop
jno
cmp
xor
sahf
pop
push
cmp
pop
pop
fs
into
jbe
lret
lods
jp
mov
jecxz
pop
stos
xorl
sbb
mov
out
mov
inc
pop
bound
out
mov
pop
shlb
mov
xor
pop
push
xor
xor
mov
stc
fistps
sbb
inc
mov
sbb
or
lods
mov
adcb
dec
mov
inc
pop
jmp
xchg
xchg
rep
movsl
pop
mov
dec
or
lahf
inc
adc
cmpsl
insb
fcmovnb
push
roll
jno
pusha
adc
ret
out
mov
mov
fcomps
push
lock
jmp
jnp
leave
push
cmpb
and
push
dec
dec
cwtl
out
cmp
push
push
repz
mov
jns
lea
insb
push
sub
push
push
adc
data16
mov
jle
mov
icebp
adc
pop
xchg
add
jle
mov
cmp
dec
sbb
sbb
andb
lret
pop
aad
cwtl
aam
ljmp
xor
pop
popf
pop
iret
cmp
add
lret
clc
fsubp
jl
outsb
xchg
popf
outsb
sub
add
imul
xchg
dec
sbb
and
rcl
sbb
dec
add
push
mov
lock
push
loop
loopne
cltd
pop
adc
aaa
outsb
decl
xchg
inc
inc
and
jge
lods
pop
xchg
mov
sub
push
fnsave
cld
sti
mov
cli
add
lret
push
std
add
popa
aam
mov
push
int
testl
cmp
dec
pop
mov
dec
mov
insb
mov
or
mov
xor
ret
arpl
xchg
jl
sub
dec
push
push
insb
jbe
and
mov
mov
les
fildl
lea
xor
pop
cmc
xor
stos
mov
ss
dec
inc
push
and
jns
cmp
iret
loope
jns
addr16
shl
sub
mov
repnz
lods
push
into
addr16
inc
sarb
je
jge
test
inc
rcrl
sub
jne
xchg
mov
imul
sub
mov
shl
filds
mov
and
dec
xor
cmc
lock
xchg
xor
inc
cmpsb
pop
jecxz
aaa
push
fisttpll
jecxz
call
sbb
or
mov
lret
pop
out
xor
fildll
test
jg
cmp
cmp
push
negl
nop
add
faddl
mov
xlat
cltd
cld
jp
les
std
int3
add
jo
and
or
jg
xlat
std
insl
jmp
pop
push
mov
rolb
scas
decl
call
xchg
push
iret
jne
mov
aad
or
dec
xor
insl
icebp
iret
adc
sub
jae
fcom
sbb
jae
sub
neg
sub
push
and
inc
movsl
jle
repnz
sbb
jg
xchg
loop
arpl
mov
jae
adc
insl
lods
fs
push
inc
add
cs
loop
inc
stc
or
pusha
push
negb
mov
daa
inc
rcll
popa
hlt
adc
rclb
aam
xchg
repz
in
xchg
sti
push
fsubrs
xchg
and
push
hlt
inc
mov
mov
subl
test
push
xor
sbb
add
aas
fdivl
add
xchg
xor
ljmp
mov
stos
inc
mov
pusha
add
mov
mov
sbb
mov
or
fstpl
pop
ja
lods
fcmovbe
jne
jle
mov
test
push
icebp
jp
loopne
sahf
jmp
leave
xor
enter
push
shl
int3
xorl
mov
sbb
sub
repz
add
or
and
bswap
cmp
fwait
call
xor
sub
xlat
mov
sbb
cltd
mov
icebp
clc
xchg
adc
icebp
dec
scas
lods
cld
mov
mov
or
popa
int3
pop
iret
mov
popa
and
out
nop
sub
mov
ficoml
lods
mov
adc
xor
mov
xor
xor
mov
fsubr
sub
fs
jb
int
out
cmp
mov
test
fbstp
scas
pop
lcall
in
mov
pushf
xchg
adc
stos
mov
xchg
mov
imul
gs
push
mov
int
jnp
sub
push
sub
sbb
fs
add
push
repnz
mov
jmp
out
xor
and
pushf
push
ret
sbb
pop
shl
cmp
cmp
inc
xchg
jmp
mov
rorl
js
pop
daa
fidivrs
cmp
mov
lret
push
inc
enter
out
aam
add
dec
mov
fdivs
popf
jge
shll
pop
add
pop
pop
pushf
leave
xor
stc
cli
std
fs
mov
fs
les
sete
mov
xor
out
mov
ljmp
negl
mov
stc
test
icebp
sub
cs
mov
data16
pop
mov
sbb
mov
adc
lcall
adc
imul
xchg
xor
inc
jns
data16
mov
and
cld
sbb
mov
in
mov
mov
xchg
mov
dec
sti
ret
dec
insb
and
dec
inc
jb
pop
addr16
mov
insl
daa
std
cmp
popf
es
rorb
shlb
fisubl
inc
or
jnp
ret
or
rol
sarb
jge
mov
mov
lods
xchg
jno
sub
and
mov
imul
je,pn
mov
mov
inc
mov
xor
xchg
int3
in
add
xchg
jns
cmpsb
jle
dec
adc
movsl
mov
mov
arpl
out
rcrl
add
xchg
mov
aas
pusha
movsl
in
imul
jae
js
jns
jo
sbbb
dec
jne
jmp
aam
pop
push
pop
or
pop
notb
int
test
stos
clc
psrad
cmp
sub
stos
mov
fdivrs
mov
sbb
add
lea
jo
sahf
lds
fsubp
xor
mov
lock
cli
jl
mov
dec
sbb
jo
pop
in
pop
pop
adc
mov
or
into
adc
in
inc
loopne
sbb
sub
iret
daa
xor
jno
push
not
pop
xchg
add
push
repnz
cwtl
xor
ret
repnz
pop
sbb
inc
and
adc
sbb
push
xchg
xor
and
pop
nop
cs
insb
add
xchg
inc
shlb
rcr
mov
jnp
scas
gs
and
mov
and
and
loop
rorb
addr16
mov
push
sub
xor
mov
jge
jne
lahf
repz
pushf
in
or
daa
sarb
xor
ljmp
lahf
out
xchg
fadd
adc
ljmp
shl
stos
loop
aam
in
mov
mov
scas
mov
adc
movsl
xchg
in
in
data16
aaa
aad
add
adc
jl
mov
add
cmp
jmp
in
push
mov
out
gs
pop
add
jne
jae
xchg
shlb
and
cmp
lock
add
xchg
jmp
xchg
in
fstpt
adc
stc
inc
mov
inc
ljmp
mov
rolb
and
or
dec
pop
es
sbb
inc
imul
add
imul
adc
sti
and
inc
dec
jge
jb
movsl
inc
jbe
push
lock
and
es
xchg
push
lret
sbb
add
push
jp
jmp
sub
imul
xchg
pop
sbb
das
mov
into
push
and
sbb
icebp
cmpb
xchg
lods
outsb
lods
xchg
jmp
pop
leave
loopne
or
jne
mov
lods
sub
add
xchg
jns
popf
dec
shrl
gs
std
pusha
aad
lea
mov
das
jo
fnsave
jge
add
pop
sar
add
xchg
pinsrw
mov
popf
repz
mov
jne
add
sub
xchg
or
lods
or
popf
ds
sbb
dec
and
jo,pn
js
hlt
js
inc
xlat
xor
ljmp
les
pop
stc
adc
cwtl
lods
push
loope
cli
adc
sub
xor
push
ljmp
fstpl
xchg
dec
mov
sub
mov
mov
add
add
in
mov
inc
adc
sub
test
mov
or
adc
inc
and
adc
mov
gs
mov
mov
dec
and
js
jl
mov
lahf
idivb
lods
in
lock
into
in
ds
jae
js
in
jl
push
mov
lahf
mov
or
cld
adc
xor
into
jecxz
pop
adc
ja
mov
in
or
and
pop
fwait
rol
push
cmc
and
nop
test
iret
and
pop
push
fs
push
in
mov
dec
iret
push
sbb
mov
pop
adc
popa
js
je
pop
push
stos
cmp
lea
outsb
sub
adc
lcall
and
inc
mov
pop
enter
mov
sarb
pop
outsb
jmp
mov
add
pop
mov
mov
imul
fwait
movl
ds
lds
mov
int
xchg
xchg
into
lea
or
mov
sbb
fdivs
sub
sbb
cmc
mov
fisubrl
fs
mov
adcb
mov
inc
shrl
pop
xchg
or
dec
or
mov
pop
addb
adc
loop
xchg
xchg
pop
das
jno
jg
or
jbe
sub
inc
push
test
fisubs
or
aaa
out
stos
mov
and
dec
dec
jle
cmp
or
loope
punpckldq
xor
xor
push
cmp
popa
or
push
inc
dec
outsb
sub
inc
inc
push
push
xchg
push
adc
sub
sub
mov
mov
call
or
int
or
jmp
inc
popa
jne
mov
cmp
pop
inc
and
js
cmp
lcall
ljmp
or
push
aaa
arpl
jne
mov
rolb
and
int3
ja
sahf
movsb
ret
pop
adc
in
pusha
outsl
scas
sar
or
pop
das
push
icebp
xor
outsb
xor
jmp
cmp
das
mov
mov
in
imul
pop
test
cli
xchg
or
cmpsb
push
ljmp
or
mov
ret
and
outsl
push
fidivrl
testb
movsl
xor
jg
loop
add
decl
push
fs
mov
pop
int
pop
sbb
jo
xor
enter
dec
fiadds
push
mov
pushf
jge
inc
xchg
faddl
cli
lret
xor
pop
cwtl
jecxz
outsb
push
jns
in
loope
nop
out
ss
mov
lods
sub
cmp
sbb
scas
leave
cltd
xor
mov
repnz
ror
lret
push
scas
addb
xor
inc
je
popa
stos
add
push
pop
lock
stc
mov
xor
mov
mov
icebp
mov
arpl
test
das
mov
sub
and
inc
xorb
jl
cmp
fcomp
mov
inc
push
imul
sbb
add
inc
in
push
and
leave
xchg
sbbb
or
dec
and
xchg
inc
lods
inc
push
lock
stos
ljmp
mov
imul
mov
xlat
cmp
call
or
loopne
add
int3
fs
or
pushf
mov
push
sbb
sahf
lea
adc
cmc
cmp
les
addr16
ds
adc
ficoms
push
out
popf
jecxz
mov
xor
adc
decb
mov
mov
hlt
add
dec
adc
orb
or
stos
outsb
outsl
add
cmp
hlt
pop
push
sbb
mov
add
fwait
loop
add
outsl
popa
inc
out
lea
xor
and
xchg
pop
cmp
fldl
fldt
lahf
xchg
and
ror
fdivrp
lret
sub
dec
movsb
enter
sub
int3
mov
pushf
inc
jp
cmp
pop
or
sahf
cmp
mov
cmpsb
rcll
xor
in
stc
in
and
out
cwtl
push
arpl
cmp
cmpsb
ss
orl
addr16
clc
adc
jp
cli
inc
out
test
mov
aas
and
pop
aaa
sub
mov
mov
jge
push
cltd
xchg
inc
dec
imul
ret
hlt
ficoml
add
setp
out
shll
jmp
pandn
inc
adc
xchg
mov
fbld
jo
inc
push
repz
cli
dec
adc
leave
cmp
ficoms
dec
pop
lods
or
add
xor
mov
dec
int
jnp
mov
xchg
test
sub
sbb
call
icebp
jg
mov
andb
adc
inc
cmp
mov
movsl
mov
mov
or
fistpl
bound
fimull
fidivl
jmp
imulb
repnz
adc
xorl
pop
pop
lahf
push
xor
into
testb
mov
lret
loopne
jle
lods
inc
cli
push
leave
sub
sub
xor
xchg
mov
cmp
sbb
xlat
popa
ror
xchg
mov
cmpsb
lods
test
sarb
mov
lods
cmp
mov
mov
adc
and
repz
sbb
sarb
test
lock
inc
push
mov
lods
ficoml
sbbb
mov
cmp
jge
mov
push
xor
dec
lods
daa
or
shr
inc
imul
cmp
add
add
push
sbb
sarl
sbb
sbb
sbb
add
in
outsb
fwait
mov
pop
jnp
lahf
add
xchg
xchg
fidivrl
and
dec
jnp
sti
ficompl
xor
lahf
xor
sub
or
fs
dec
imul
pusha
or
or
call
xor
add
lods
adc
enter
cmp
pop
mov
sub
xlat
ret
sub
dec
sbb
leave
mov
repz
test
jmp
push
or
bnd
xchg
inc
out
sbb
cmp
popw
pop
mov
jno
cwtl
inc
ret
or
xor
out
sub
iret
pop
mov
mov
std
std
dec
dec
stos
dec
mulb
cs
lcall
fdivp
add
pop
mov
addr16
loope
mov
mov
insl
sbb
cltd
or
cli
sahf
mov
mov
out
je
cmpsb
ljmp
cmc
daa
addr16
cli
xchg
lahf
testb
fwait
lret
mov
popl
mov
les
xchg
xchg
mov
stc
aaa
add
sub
dec
pop
lcall
shl
fwait
mov
mov
add
sbb
stc
fs
mov
into
lods
test
cmp
sub
ret
test
jno
add
int3
dec
adc
sub
cli
push
cli
mov
push
mov
jbe
adc
jp
lret
out
add
jl
and
addr16
mov
ljmp
into
mov
fsubrp
lds
mulps
dec
mov
mov
mov
imul
jnp
inc
roll
test
sub
cmp
mov
jmp
add
adc
cs
ja
addr16
test
aas
data16
cmp
out
adc
fsubrs
sub
pop
les
sub
neg
pop
iretw
outsb
and
sarl
stos
inc
fsubl
pop
push
mov
xor
ljmp
ja
mov
je
aad
cmp
repnz
out
mov
cmp
stos
add
jb
mov
test
mov
les
mov
push
rcll
mov
cmc
inc
insb
ljmp
aad
aam
lds
inc
divb
outsb
inc
es
push
gs
lcall
pop
jno
cltd
xchg
inc
dec
xchg
into
xor
out
imul
xchg
lock
push
je
mov
pop
xor
in
mov
jp
std
jmp
cmpsl
inc
mov
cli
dec
imul
xor
jmp
dec
push
fdivl
bound
mov
daa
push
stos
pop
inc
or
or
in
add
arpl
sbb
fiadds
mov
addr16
sarl
inc
insb
cld
jae
leave
loope
in
xchg
sub
fisubl
adcb
sarl
add
mov
test
sbb
adc
pop
js
sub
pusha
mov
je
psrlw
jecxz
or
mov
jmp
rcrl
ss
xchg
call
dec
xchg
mov
aam
mov
mov
gs
jno
iret
sbb
mov
add
mov
fs
mov
cs
js
pop
popf
inc
aad
and
adc
pop
push
mov
sti
dec
test
dec
pop
nop
icebp
push
xlat
into
sbb
lret
cltd
dec
cmp
jge
mov
setle
int
hlt
mov
cmpsl
xor
or
fistl
sbb
or
lahf
mov
daa
test
shrb
mov
pop
cmp
lret
mov
repz
imul
or
and
lret
xor
outsl
mov
dec
xchg
cld
add
sub
sti
idivl
mov
nop
fmuls
jno
push
ret
mov
lds
xchg
sub
add
stos
push
sub
sub
push
push
adc
push
or
mov
add
push
add
adc
mov
vmread
das
stos
test
pop
push
ja
loop
sub
xor
push
pop
pop
test
inc
cltd
stc
jne
daa
adc
xchg
sub
inc
xlat
sbb
mov
mov
and
sbb
cmpsb
sbb
mov
mov
push
mov
cmp
sbb
nop
lds
mov
shl
notl
inc
popf
mov
cmp
xlat
mov
ljmp
pop
into
repnz
jmp
stc
call
mov
call
sbb
decb
mov
aam
scas
rcrb
mov
outsl
daa
mov
xor
shlb
ss
and
mov
add
cmp
cmp
rclb
popa
dec
in
sbb
in
cmp
jo
outsb
xor
dec
imul
movsb
xchg
adc
add
and
popa
stos
cmp
shlb
dec
imul
xchg
sbb
subb
sbb
mov
stos
lret
xchg
and
xor
cmp
cwtl
xlat
scas
mov
push
out
dec
fwait
cmp
dec
push
adcb
cld
cld
push
sub
jp
into
repnz
mulb
adc
out
mov
test
daa
ret
clc
loopne
ljmp
add
loope
mov
adc
push
xlat
out
outsl
in
inc
mov
loope
mov
pop
fsts
cmpsb
or
jno
popf
and
mov
sub
jp
scas
ret
ret
imul
ljmp
ss
loopne
repnz
outsl
cmp
jno
inc
and
xor
add
cs
push
xchg
into
xchg
frstpm(287
and
insb
ficoms
dec
data16
faddl
xor
call
pop
aaa
cwtl
sti
shl
xchg
rcr
pusha
mov
int
imull
scas
dec
mov
mov
imul
pushl
sbb
movsb
or
inc
or
jmp
imul
push
adcl
inc
subl
sub
daa
dec
shlb
pop
xchg
clc
std
rorl
mov
clc
sbb
xchg
stc
sahf
pop
mov
push
dec
shlb
push
shrd
imul
imul
xchg
cwtl
idivb
loope
movsl
scas
inc
cli
mov
mov
push
fsubp
out
pushf
mov
and
inc
sub
xchg
pushf
mov
fcompl
push
add
or
sti
ret
data16
test
jecxz
test
jbe
mov
inc
ficomps
cmp
add
and
mov
adc
in
testb
outsb
xor
mov
or
mov
movsl
int3
jmp
cli
je
aaa
fs
pop
xchg
scas
jle
cltd
xchg
push
pushf
pop
addb
stc
in
pop
cmp
adc
movsl
lods
aad
adc
ret
das
dec
mov
dec
xor
fs
fs
pop
dec
icebp
fs
or
push
ss
jnp
je
outsl
xchg
inc
test
dec
loop
jb
and
xchg
jl
push
and
pop
push
jecxz
push
jns
sub
test
cmp
out
std
flds
negb
jnp
sbb
xor
loope
js
sbb
cmp
xor
cwtl
imul
and
int
sub
dec
in
fsubs
jns
in
in
clc
hlt
xchg
jge
repz
cmp
lcall
test
and
or
and
inc
mov
lock
aaa
push
scas
lea
mov
pushf
cmp
jbe
fwait
xchg
mov
pop
rorb
pop
rcr
mov
push
clc
fidivrs
pop
xchg
sarl
pusha
sub
mov
push
fdivrl
jnp
les
jbe
mov
xchg
lods
inc
fistps
aam
pop
inc
pop
cmpsb
bound
or
cmp
in
add
or
jle
inc
and
mov
rep
std
mov
out
cs
inc
stos
andb
cltd
push
pop
lea
lcall
cmc
les
aaa
or
sub
fs
push
pop
in
test
shlb
push
jo
into
arpl
movb
ja
jmp
bound
mov
in
sarb
mov
mov
dec
jle
jnp
in
stos
outsl
adc
mov
lahf
add
jle
mov
outsb
mov
loopne
movsl
push
push
sbb
mov
cmp
cmpsl
push
and
mov
cld
mov
lock
dec
ret
xor
add
movsb
fidivs
inc
out
push
aas
adc
xor
fs
addr16
jbe
dec
stc
lea
lret
sub
xchg
loopne
pop
lds
jmp
dec
jle
and
mov
imul
sti
in
sbb
aam
addr16
inc
mov
lds
xor
leave
addr16
out
nop
js
les
lods
arpl
sub
add
mov
icebp
xsha1
cmpsb
bswap
fstl
or
inc
sub
mov
cmp
xchg
je
aad
mov
mov
outsl
or
or
jmp
inc
imul
scas
js
xlat
and
out
dec
lret
fs
subl
sahf
cltd
dec
inc
popa
dec
shr
clc
es
xor
inc
push
push
shrl
hlt
push
mov
dec
mov
iret
ss
cli
arpl
stc
jae
ds
push
cmc
xchg
cli
or
nop
in
insb
in
inc
shlb
jmp
adc
xchg
mov
adc
psrad
rcrb
in
sbb
aam
outsb
sti
fmull
add
fcompl
nop
sbb
pop
imul
pop
pop
fidivs
lods
inc
mov
enter
subb
scas
sbb
cmc
xlat
fidivrs
in
mov
lret
aas
inc
aas
hlt
mov
sar
sbb
cmpb
mov
push
xchg
sahf
jnp
xor
push
mov
xchg
mov
sbb
mov
cmp
xor
jmp
icebp
out
pop
cmpl
xchg
repnz
push
jnp
pop
imul
fists
inc
and
sub
andl
pop
sub
jns
mov
and
adc
cmp
mov
negl
fs
sbbb
movsl
pop
lods
add
sbbl
into
inc
cwtl
and
test
js
bound
cwtl
test
iret
cs
imul
and
push
push
loopne
ja
mov
int3
adc
sahf
push
sbb
add
xchg
push
or
int3
jmp
es
add
ss
mov
cmpsb
sbbl
pop
loope
jge
aas
cmp
hlt
into
pusha
arpl
jns
dec
nop
daa
ds
rcl
cli
inc
in
icebp
prefetch
in
sbb
xchg
push
fwait
enter
shr
sbb
fwait
xchg
js
xchg
adc
inc
mov
add
je
jge
sbb
bound
dec
daa
inc
je
adc
sub
mov
outsl
mov
rcl
rclb
test
imul
pop
fs
inc
roll
nop
add
pop
mov
ds
jg
pushf
outsb
in
jg
add
aam
loopne
aad
and
js
cld
and
ror
mov
outsb
orb
dec
cmpsb
in
cmp
ret
cli
mov
pop
jg
cli
addps
sub
dec
mov
loop
mov
mov
testl
pop
dec
std
shll
mov
inc
pop
fwait
andb
jge
and
loope
adc
mov
loope
out
gs
test
fucom
jp
js
adc
adc
mov
pop
mov
xor
mov
add
mov
jge
sbb
sbb
rcrl
xlat
repz
leave
notl
repz
cmp
push
bound
fcomi
outsb
inc
xlat
pop
cli
mov
pop
sahf
adc
pop
cmc
sbb
cmp
sti
lods
cltd
mov
inc
cmp
leave
mov
mov
push
cmp
inc
cmpsl
push
dec
test
jb
pop
jbe
loopne
sbbl
push
or
clc
jmp
adc
mov
nop
mov
or
test
jmp
movsl
aas
adc
xchg
jno
shll
aaa
cwtl
pop
xchg
clc
ss
fisttpl
push
cmp
mov
or
push
cli
inc
mov
ljmp
sahf
or
test
mov
jl
mov
xorl
and
cmp
inc
sub
sbbl
sub
aaa
mov
fwait
xchg
inc
adc
pop
xchg
leave
adc
xlat
jne
into
inc
sbb
mov
mov
sbb
mov
or
ds
and
add
mov
push
mov
insl
pop
inc
jb
dec
xorb
sub
xchg
inc
dec
rorb
popa
pop
pop
dec
sub
cmc
add
repnz
cmpsl
dec
imul
xchg
mov
sbb
out
outsl
and
mov
cmp
or
xlat
in
sub
push
fldt
jg
das
mov
or
xchg
mov
xlat
mov
cmp
scas
in
and
sahf
sbb
gs
xchg
jmp
inc
movsl
aaa
arpl
mov
adc
jle
lods
jecxz
jnp
pop
xlat
in
repnz
xlat
dec
imul
mov
ret
adc
dec
rolb
push
pop
adc
int
into
cmpsl
adc
xchg
rol
scas
rorb
pop
sti
enter
mov
jno
js
loop
inc
and
mov
inc
daa
mov
jb
cmp
dec
pushf
pop
scas
shlb
mov
mov
pop
cmp
pop
xor
mov
das
mov
dec
hlt
aad
mov
cwtl
inc
loope
xchg
mov
pushf
insb
sub
cld
jbe
push
gs
outsl
xchg
ljmp
xor
push
hlt
fldenv
mov
je
pop
ljmp
mov
jnp
les
adc
jge
mov
jecxz
mov
sbb
dec
sub
dec
xor
es
test
or
inc
sarl
add
ds
inc
sti
into
push
cltd
inc
sti
jp
mov
enter
push
in
mov
or
add
repnz
in
adc
out
jp
fiadds
push
adc
add
pop
inc
lock
setne
inc
pop
adcl
adc
fwait
jae
dec
push
je
xchg
arpl
push
jne
aas
or
xlat
cld
jl
add
lret
sub
cmp
cs
test
mov
sub
mov
inc
daa
inc
add
test
push
xchg
cmc
cmpsb
cs
test
cmp
mov
cmpsl
lahf
pusha
push
add
add
sub
mov
mov
rclb
xchg
outsb
fs
fwait
hlt
stc
jle
jp
lret
mov
and
inc
out
shll
and
or
imul
jo
enter
xchg
int3
cmp
rcrl
call
sbb
lods
jb
out
movsl
xchg
stos
lret
and
xor
dec
fmull
insb
lahf
push
sbbl
jecxz
cli
mov
outsb
cs
sbb
cmp
mov
outsb
outsl
cmpsl
out
sarb
lret
xlat
call
imul
mov
sub
test
jns
pop
test
divl
cwtl
outsb
scas
insb
mov
call
rolb
mov
dec
xchg
bound
jno
movsl
sbb
push
push
cwtl
jae
mov
mov
cmp
or
add
dec
sub
mov
call
cs
lods
rcrl
push
pusha
in
dec
repz
nop
xchg
clc
inc
sbb
pop
std
and
scas
fimull
clc
cmpsl
test
add
jle
movsb
fnstsw
gs
jnp
popf
test
xchg
lock
cmp
std
dec
add
xchg
ljmp
or
out
fsubs
cmp
out
adc
pusha
aam
mov
clc
movb
mov
rorl
fisubs
xchg
sahf
ljmp
jnp
js
enter
ss
pop
add
loop
fidivs
push
mov
cli
mov
add
mov
int3
das
adc
adc
and
lahf
stos
xor
clc
adc
dec
adc
test
jg
pop
sub
pop
fsubrs
lcall
and
xchg
and
fs
lret
lahf
dec
jne
bound
lock
or
bound
cmp
mov
cli
lahf
pop
mov
add
pushf
jge
pusha
push
jg
xchg
or
jb
call
cmp
loope
xchg
aaa
jmp
sub
dec
pop
and
or
mov
sahf
int
ret
sbb
add
loope
pushf
inc
pusha
loopne
mov
sahf
stos
adcl
idiv
and
lahf
sahf
and
movsl
frstor
std
scas
lea
inc
jo
jge
mov
xor
in
inc
addl
or
outsb
sbb
cwtl
mull
insb
lods
fistl
jmp
pop
or
addl
dec
cmpsl
roll
and
xchg
sarl
fwait
mov
fs
xchg
fisttpl
adc
xlat
cli
aas
xchg
dec
mov
xor
loope
inc
pop
mov
xchg
mov
in
ja
bound
jg
arpl
sub
mov
repnz
popa
fs
and
je
mov
int
pop
pusha
int
pop
jnp
inc
cmc
push
insb
sarb
xor
xchg
out
jl
inc
out
aad
shl
mov
sub
fisubrs
pop
js
jl
movsb
cmpsl
mov
pop
jle
xchg
lea
fwait
xchg
push
fsubl
inc
repz
into
daa
lcall
les
repz
sub
sub
scas
mov
adc
sysenter
out
xor
push
jo,pt
mov
cmp
lock
icebp
imul
jne
rolb
loopne
rcll
push
dec
or
les
push
fwait
test
lods
cltd
mov
fcompl
rclb
jmp
sbb
mov
ss
sub
lock
jns
aaa
ud2
imul
sbb
fneni(8087
xchg
pop
jmp
sub
cmp
xlat
aad
add
cmp
mov
mov
mov
fisubl
adc
mov
dec
push
rol
std
cmp
int
sbb
or
fcompl
pop
inc
out
push
cmpsl
je
loop
scas
iret
mov
mov
sbb
mov
cmp
add
mov
insb
sahf
rcr
test
xorl
sarl
xchg
repz
lods
jbe
and
into
push
sub
mov
sbb
push
dec
mov
mov
repnz
loopne
int3
push
pop
mov
leave
or
push
push
mov
cs
shrl
inc
push
aam
inc
inc
mov
cmp
xor
pop
sub
mov
pop
push
stc
xchg
fadds
xlat
mov
ret
lcall
arpl
mov
unpcklps
mov
mov
adc
icebp
pop
push
mov
loop
adc
aam
stos
pushf
push
mov
out
adcb
xor
ljmp
lea
pop
or
inc
stos
and
add
jl
sub
es
mov
call
mov
xor
push
iret
orb
stos
sub
ss
mov
fldenv
scas
into
push
sbb
dec
xor
adc
ret
fwait
sar
add
int3
or
hlt
inc
xchg
dec
clc
xor
xchg
xor
cs
mov
imul
cwtl
inc
adc
outsl
fisttps
ftst
hlt
jecxz
jmp
pop
lock
or
scas
inc
mov
je
inc
pushf
cmpb
call
bound
pop
push
int3
jno
pop
lcall
dec
lea
jne
imul
xchg
loop
dec
stos
cmp
mov
lds
mov
inc
or
shlb
inc
out
add
jle
push
aam
sbb
enter
mov
ds
jge
xor
lods
jmp
or
out
mov
std
sub
pop
test
shll
repz
int3
out
pop
mov
adc
fistl
in
add
inc
insb
mov
dec
lret
hlt
pop
xor
jno,pn
jle
sarl
mov
leave
pop
xorl
pop
pop
gs
jmp
pop
jns
out
idivl
scas
hlt
inc
jp
pop
mov
and
data16
fmul
sub
xor
or
mov
shll
ficoms
dec
je
adc
addr16
fldcw
adc
fnstsw
aas
pushf
ljmp
hlt
shrl
sub
les
jnp
das
mov
rcll
daa
xor
push
adc
add
sub
mov
cmpb
rcrl
int3
lret
sub
sarb
push
ljmp
popa
iret
mov
cmp
fadds
int
gs
into
test
push
lea
add
fwait
js
mov
out
cltd
stos
aas
jae
mov
push
mov
leave
mov
out
mov
ds
cmp
jns
jb
imul
jg
icebp
mov
jbe
lret
xchg
cmp
cmp
jge
push
jmp
sti
and
in
jns
pusha
stos
cmp
push
sarl
lcall
lret
jo
cmp
in
xchg
fcompl
cmp
mov
sub
add
lret
js,pn
cmp
dec
sub
sub
pop
aas
fdivs
cli
stc
je
les
cmp
mov
jle,pn
icebp
cltd
into
insl
adcl
push
scas
sbb
add
mov
in
cmp
icebp
mov
movsl
jae
sbb
pop
cmp
outsb
prefetchwt1
sbb
lahf
hlt
mov
pop
cmp
cmp
mov
cmovle
cmp
or
call
cmp
clc
dec
das
aaa
cmc
lret
add
sub
fnstsw
jmp
pop
cmp
int
imulb
pop
outsb
loop
or
rolb
orb
jae
xor
xchg
dec
shlb
push
dec
adc
or
push
or
sbb
lret
xchg
or
mov
repz
xchg
push
sahf
leave
add
dec
popf
arpl
mov
push
inc
insb
jmp
or
add
mov
xor
popw
mov
mov
jo
xchg
adc
shll
add
pop
dec
pop
cmp
int3
sub
pop
into
faddl
test
adc
push
mov
push
out
nop
cmc
and
imul
xchg
gs
dec
outsl
lret
int
daa
insl
jnp
shll
in
pop
mov
test
lcall
xchg
int
test
adc
scas
push
jb
ljmp
lcall
push
addb
jne
push
imul
and
lods
push
adc
cwtl
mov
outsl
sub
sbb
in
push
psubsw
sbb
push
jo
adc
adcb
inc
cltd
pop
mov
repz
rolb
sahf
jg
insb
mov
orb
add
lods
inc
mov
add
cmp
xor
and
out
scas
cmp
ja
xchg
lea
add
add
aas
cmp
loopne
fsub
pop
ljmp
mov
inc
orl
pop
cli
fadd
mov
test
int
negb
jecxz
dec
mov
mov
inc
adc
sub
push
cmpsl
mov
fstpl
fwait
mov
out
dec
add
jp
push
out
pop
or
stos
movsb
call
inc
out
outsb
addr16
lret
std
jb
xchg
fimull
mov
adc
and
inc
movsl
push
rcrl
js
mov
cmp
push
xchg
cli
jo
mov
into
int
aaa
xchg
fwait
xchg
and
hlt
add
dec
lods
cmp
ret
out
outsl
test
and
shrl
js
test
pop
lds
aaa
mov
clc
fbld
add
dec
nop
mov
rcll
cmp
mov
cwtl
stos
loope
imul
or
clc
push
or
sub
push
movsl
adc
jecxz
sub
sub
adc
negl
popa
rol
iret
mov
js
pop
mov
cltd
fldl
push
imul
negb
rorb
and
cmpsb
and
mov
cmpsb
or
imull
push
popf
xchg
push
jle
in
dec
mov
ds
jge
xor
les
mov
cli
push
lea
or
cmc
mov
mov
xchg
aaa
mov
sahf
rol
mov
outsb
inc
test
xor
sti
out
sub
mov
rcrl
sti
mov
sbb
rcll
dec
or
aam
pop
or
push
mov
fwait
inc
fs
jmp
xchg
pushl
mov
xchg
or
scas
ja
test
test
sub
popf
in
cmpsl
shll
cmp
pushf
mov
arpl
inc
lret
nop
int
push
ljmp
sbb
sbb
xchg
mov
jne
cli
sbb
sti
push
xchg
mov
adc
stos
mov
jbe
lcall
push
xchg
hlt
push
lret
mov
mov
dec
pop
arpl
out
pop
fnsave
pushf
mov
dec
push
notl
and
inc
inc
rcrl
cmp
dec
sub
loop
jmp
dec
or
dec
mov
jb
mov
loopne
pop
push
addr16
xor
mov
out
jecxz
mov
sahf
int3
nop
gs
jge
xchg
mov
add
call
call
dec
int3
push
subb
das
fldt
inc
cmp
push
movsb
jecxz
sub
call
ror
outsl
xor
mov
pop
out
xor
icebp
push
shll
inc
mov
pcmpeqd
cltd
iret
popl
xchg
clc
fst
or
cmpb
pushl
clc
pop
stc
stos
sbb
loope
pop
rorl
mov
test
pop
int3
inc
fbld
pusha
rclb
iret
je
push
cmovns
insb
sbb
mov
out
pop
in
jg
push
pop
sub
addl
test
add
sbb
int3
jmp
mov
dec
xchg
sub
pop
rol
es
inc
mov
sub
and
push
mov
pushf
sarl
aam
sarl
cmc
inc
mov
enter
fcomip
fsubr
xor
push
outsl
loop
push
aaa
je
mov
mov
ret
mov
xor
lds
out
stos
out
mov
popf
mov
je
mov
push
imul
adcb
outsl
pop
movsl
mov
xchg
in
cltd
test
loope
inc
test
xor
push
mov
shlb
push
cmp
daa
outsb
loop
enter
cld
das
xchg
fcomi
ss
lds
jmp
cld
cmp
push
jp
inc
mov
mov
xchg
psubusb
mov
or
cmp
sbb
mov
inc
imul
xchg
pop
xchg
dec
jnp
cmpsb
test
jnp
inc
out
add
das
mov
cmp
xchg
pop
adc
add
out
dec
pusha
push
pop
lea
xchg
or
jp
add
lahf
inc
jo
push
mov
loop
mov
aaa
pop
mov
fchs
sbb
cld
aaa
addb
dec
jecxz
mov
movsl
adc
xchg
movsb
hlt
test
fwait
jmp
arpl
pop
mov
sub
push
sti
cmp
dec
roll
mov
mov
jg
stc
xor
mov
push
dec
xchg
push
cs
ja
call
inc
push
popa
es
popa
lret
fs
xor
imul
lcall
jo
das
lahf
ficomps
test
mov
dec
sub
mov
xor
rcrb
mov
ret
add
adcl
lods
adc
dec
sub
xor
dec
inc
dec
in
fisubs
ja
test
negl
cmpsl
sahf
mov
dec
popf
push
popf
repz
call
rcl
out
dec
popf
cmp
std
shr
dec
rcl
into
jg
daa
dec
iret
cmp
cmc
dec
push
sbb
push
jl
lret
enter
dec
and
push
into
sub
pop
sbb
aas
dec
cmp
stos
xchg
cmp
divl
xchg
aaa
jo
das
jns
adc
jp
jecxz
sar
fdivl
movsl
dec
cmp
push
movsb
mov
push
dec
add
imul
callw
pushf
cmp
lea
ret
pop
pop
lea
xchg
jno
ds
mov
nop
or
inc
inc
add
mov
adcl
xchg
mov
pop
stc
add
repnz
sbb
adc
outsl
shll
xchg
in
mull
loopne
ds
test
push
fisubrl
add
inc
je
stc
hlt
test
sbb
loope
loopne
mov
mov
jb
call
loopne
jnp
sbb
xchg
jbe
cmp
dec
xchg
in
jp
add
mov
pop
and
jno
in
dec
cmp
aas
cmpsb
cwtl
pop
adc
lret
adc
jno
mov
push
cmp
std
fwait
push
dec
cmp
or
jmp
insl
adc
pushf
adc
shl
xchg
mov
cmpsb
gs
mov
mov
dec
jl
incl
xchg
or
aaa
adc
cmpsw
sub
jg
cmc
mov
add
cmp
add
sahf
sub
lret
sbb
pop
insb
scas
sbb
call
sbb
out
fdivl
or
mov
je
lcall
or
inc
imul
mov
push
push
cltd
js
xor
fcom
sbb
sbb
push
pop
cmp
inc
xchg
mov
dec
addl
repnz
nop
and
mov
mov
sbb
xchg
sahf
and
jmp
subb
sbb
mov
ds
or
fsubp
sub
xchg
stos
lahf
lods
inc
cmp
xor
int
lcall
mov
xchg
imul
stc
ja
sbb
movsb
pop
stos
imull
mov
and
push
lret
sbbb
loope
stc
insl
loopne
jle
adcb
fistl
out
dec
cwtl
pop
mov
cli
xor
out
jne
es
push
mov
push
je
mov
insb
ja
inc
push
xor
cli
sub
lret
mov
movb
in
aad
cltd
and
test
adc
lds
sub
and
or
pushf
sbb
addr16
sbb
push
mov
inc
inc
fs
jge
stc
xchg
rclb
in
test
cltd
int3
mov
fisubrl
add
jb
les
callw
jbe
lcall
sub
pushf
divl
xor
push
cli
negl
ret
sahf
mov
mov
imull
mov
inc
inc
rorl
jp
leave
call
and
repz
fsubl
rcrb
in
cmp
pop
add
unpckhps
or
xor
jg
iret
hlt
xor
pop
push
pop
pop
add
fisubs
out
mov
ficomps
lock
pop
data16
pop
loopne
xor
repz
lcall
add
insl
adc
sbb
mov
and
sub
ror
jns
arpl
aas
test
mov
stos
scas
mov
or
clc
decl
subl
mov
pop
mov
push
bound
jne
jbe
sbbl
filds
add
cltd
gs
stc
dec
ds
lahf
pop
pop
notl
es
ret
and
adc
fsts
cmp
iret
mov
cmpsl
shll
lods
lods
outsb
cmp
xchg
inc
aaa
int3
add
adc
dec
outsb
jecxz
rcrb
pop
xor
daa
or
cmp
xchg
mov
lea
cmp
sahf
imul
je
cmp
fisubrs
xchg
jecxz
imul
jno
stos
pushf
mov
loope
mov
icebp
mov
loopne
cmp
mov
inc
gs
cmp
add
inc
stos
test
or
mov
mov
sbb
outsl
push
lahf
xor
lods
outsb
mov
ret
push
in
ret
cltd
push
add
add
imul
cmp
stos
scas
js
lret
repnz
inc
out
jae
jle
iret
shrb
loop
sub
jl
mov
sbb
dec
mov
dec
pop
test
pop
pop
add
stos
dec
out
fdivl
pop
lret
imul
std
sub
out
jge
stos
xchg
xchg
push
mov
mov
imul
mov
sub
fmul
push
mov
or
lods
roll
xor
adc
sbb
cmp
mov
add
lea
inc
std
xorl
out
xor
clc
imul
test
jb
ss
or
popf
mov
inc
sti
stos
jo,pt
sbb
cmp
xchg
push
lds
rolb
movsb
push
dec
in
leave
jmp
arpl
cwtl
jno
call
std
xchg
sbb
and
shll
sahf
and
ds
xchg
mov
loope
jecxz
lahf
sbb
or
dec
cld
jo
test
das
mov
stos
pop
dec
movsl
push
dec
adc
icebp
cmp
loop
and
aam
out
and
jp
and
sarl
inc
scas
lods
jecxz
jns
add
outsb
push
sbb
jp
ja
sub
in
mov
jecxz
mov
cs
iret
push
call
pushf
add
sbb
hlt
mov
pop
arpl
inc
sbb
imul
leave
rcrw
test
push
push
mov
push
ljmp
xchg
push
lret
dec
repnz
dec
mov
adc
push
clc
and
dec
lods
jae
sbb
addb
or
sub
inc
push
subb
filds
out
jns
rcll
add
in
fdivl
ds
jg
test
mov
les
mov
xchg
inc
repnz
mov
mov
jae
mov
ret
mov
insb
add
dec
aad
aam
pop
and
push
jbe
push
cld
leave
pop
icebp
lret
xchg
pop
xchg
xchg
enter
repnz
jmp
rorb
mov
mov
insl
cmp
test
ja
ret
fisttpl
push
xchg
jnp
mov
mov
lcall
repnz
and
jb
jl
int
cs
add
push
jbe
jecxz
jnp
dec
sub
pop
outsl
fdivs
lock
sub
setle
aaa
jae
push
mov
xchg
mov
in
rorb
pop
imul
repnz
push
cwtl
add
cmp
adc
cmc
jno
and
push
imul
test
mov
out
sbb
sbb
inc
or
mov
push
mov
notl
pop
mov
push
push
pushf
sub
out
les
xor
xor
insb
ljmp
ficoms
and
imul
inc
aaa
add
fimuls
pop
fisubl
leave
mov
adc
loope
aaa
sub
shl
mov
stc
hlt
ret
pop
test
xchg
mov
call
xchg
cmpsb
add
arpl
jno
mov
and
stc
icebp
add
pushf
add
test
and
push
mov
or
pop
inc
call
sub
sub
rcr
mov
stc
cs
insb
bound
pop
fnstenv
aaa
push
cmp
jo
push
je
jecxz
push
push
andl
insl
arpl
pop
test
sbb
add
sub
adc
xor
jmp
ret
jae
js
addr16
inc
lret
inc
push
stos
pop
mov
vhsubpd
xchg
loop
jae
fcomps
mov
push
inc
imul
push
adc
and
mov
cmpsl
jo
mov
xchg
ficoms
std
mov
sub
std
xor
fstp
adc
inc
cs
loopne
int
xchg
and
dec
decl
jb
sahf
jge
rcrl
mov
out
jbe
sbb
xor
cmc
xchg
iret
mov
mov
rorb
mov
ss
xchg
aaa
pushf
sbb
out
inc
push
aam
aam
add
cmp
int3
jmp
cmc
mov
mov
mov
pop
orl
mov
push
xchg
into
pop
mov
push
ljmp
ja
testl
and
cs
push
cmp
lea
outsb
and
mov
jge
jae
arpl
mov
fs
add
cmpsl
dec
imul
push
aad
repnz
mov
and
ss
popa
jno
sbb
sahf
and
xor
dec
sub
fisubrs
push
jne
add
test
ficomps
mov
test
add
pop
repnz
push
les
repnz
gs
addr16
pop
in
xor
mov
mov
mov
and
push
jnp
inc
fldcw
xlat
lods
sar
inc
leave
mov
sbb
mov
xchg
mov
push
out
sub
cltd
insb
add
cmp
movsb
ljmp
out
dec
xchg
imulb
fisubrs
scas
adc
scas
push
jae
into
xchg
xor
hlt
cmp
in
mov
into
movl
gs
stos
aad
dec
dec
scas
xchg
sarl
js
test
aas
add
inc
push
mov
sub
mov
fistl
inc
push
adc
popf
push
mov
test
jmp
mov
daa
lods
in
cmp
cmp
fstl
lea
xor
dec
sbb
xor
or
jae
lods
mov
jle
pop
adc
les
es
lret
std
and
cmp
ljmp
cli
leave
add
shlb
pushf
jbe
pop
sub
inc
push
pop
and
fsubr
loopne
inc
loope
inc
push
xchg
mov
push
push
cmpsl
ficoml
lds
and
push
pop
xchg
mov
aaa
add
mov
and
addr16
mov
test
mov
int3
idivb
xlat
sbb
jl
mov
sti
daa
cld
lods
jecxz
in
inc
mov
mov
jmp
xor
flds
clc
dec
sub
jge
in
xchg
sub
push
outsb
add
pop
dec
arpl
int
mov
rorl
mov
xchg
insl
shlb
es
lcall
mov
test
notb
adcb
jno
popf
xor
adc
xchg
test
jns
jno
add
or
push
in
mov
js
or
xor
and
xor
idivl
movsl
xorl
cmpsl
ret
add
add
je
jmp
sub
mov
repz
sub
xlat
or
mov
xchg
mov
inc
cli
js
jno
cli
loope
insl
fsubrs
xor
pusha
ret
addr16
push
cmp
dec
sbb
push
aas
rorl
dec
push
or
mov
into
xchg
jle
adc
fwait
and
in
movsb
sub
mov
rcr
dec
push
mov
fnstcw
iret
repnz
and
mov
shlb
mov
daa
mov
femms
inc
mov
cmp
mov
pushf
jo
or
cwtl
fcoms
jne
ja
sbb
fstps
add
ffree
cmpsb
cmp
mov
adc
jmp
pop
mov
mov
jmp
xor
out
arpl
dec
mov
gs
jns
jmp
pushf
scas
xchg
sbb
cmp
push
mov
add
outsl
xor
rcll
xchg
pushf
and
lods
fists
std
push
cwtl
je
decb
or
sahf
sbb
mov
ljmp
pop
sub
jmp
and
xor
fs
push
fsubl
imul
out
icebp
out
inc
in
mov
sub
or
aam
out
xor
mov
rorb
insb
aas
bound
push
test
iret
or
xchg
xor
jge
es
test
outsb
xor
mov
push
pop
addl
add
in
in
dec
adc
and
mov
mov
popf
xorl
sbb
xchg
mov
dec
mov
inc
rclb
adc
leave
mulb
push
jne
outsl
test
and
cs
aad
cmpsb
dec
pop
xchg
cmpsl
or
notl
cli
aas
xchg
in
cld
je
cltd
push
push
mov
mov
push
dec
fdivr
add
jo
jno
outsl
pop
push
mov
push
sbb
leave
clc
jle
ficoml
push
mov
daa
xchg
push
movsb
push
loope
js
bound
mov
mov
lds
cmpsl
pop
stos
sub
pushf
jecxz
bound
push
enter
jl
out
shlb
pop
mov
sub
xchg
js
shlb
ljmp
add
sub
imul
lds
xor
rorb
test
ss
bnd
aad
inc
and
shlb
mov
dec
inc
push
subb
inc
sub
jbe
push
insb
inc
and
pop
jp
test
mov
sti
repz
or
ror
fs
loopne
jge
or
adc
jno
pop
dec
rorl
ror
mov
push
das
push
inc
sub
dec
push
shrl
add
pop
call
stc
lret
call
enter
ja
js
cmpsl
or
rcll
test
xchg
jb
popa
inc
mov
ret
jle
sub
int3
ret
mov
rcl
push
and
in
inc
push
dec
insl
sub
imul
jmp
pop
or
cltd
push
lcall
sub
js
pop
and
ljmp
inc
sti
and
in
xchg
scas
mov
iret
adc
popf
xchg
out
sbb
xor
cld
popf
nop
fdivrl
lcall
mov
dec
sub
xor
and
sahf
adc
loope
sbb
mov
push
or
dec
movups
repz
les
mov
icebp
adc
out
mov
out
shl
test
lock
into
shlb
dec
pop
dec
add
das
fimuls
jmp
cmc
stos
sbb
mov
push
mov
lea
mov
in
sbb
daa
or
mov
dec
jmp
mov
lcall
clc
xor
jp
fwait
movsb
inc
cld
pop
adc
mov
icebp
fiaddl
xlat
add
add
pop
inc
out
and
pop
in
jecxz
jo
push
nop
or
mov
addr16
pop
mov
insl
lea
cmpsl
icebp
insb
jmp
cmp
and
and
stc
cltd
sub
cli
mov
or
cmp
jp
ror
inc
insb
mov
mov
lock
cmp
jo
cmpsb
dec
jecxz
mov
push
cmp
outsb
xor
loopne
dec
imul
movsb
mov
sahf
jb
xchg
rep
xor
pop
div
or
and
and
xor
push
rol
mov
push
out
xchg
add
in
mov
jge
idiv
aad
leave
test
pop
and
scas
ficomps
popa
shlb
or
jae
xlat
rorl
cwtl
sub
test
fs
push
pushf
ja
std
cmp
ja
inc
or
xor
xlat
arpl
mov
pop
mov
mov
in
movb
popf
mov
xor
nop
mov
int3
push
fisttpl
jae
ljmp
cmpsb
les
jmp
and
sub
cmpsb
sbb
fistpll
pushf
aam
fsubr
cmp
pop
lahf
xchg
dec
adc
xchg
repnz
jl
jno
or
and
mov
pop
std
stc
push
roll
cltd
mov
roll
je
push
rcl
in
insl
jbe
out
jle
ljmp
lock
dec
imul
out
iret
sub
movsb
test
and
mov
mov
lods
mov
sbb
sub
push
or
nop
xchg
loope
ljmp
dec
jg
fsubrs
push
out
mov
mov
pop
pop
xor
mov
int
sbb
cld
mov
sub
sahf
jle
es
lods
cmp
add
pop
inc
mov
into
fisubrs
mov
out
and
rcrl
jmp
cmp
std
pop
pusha
mov
adc
lock
mov
sbb
stc
add
mov
shrl
outsb
xchg
scas
mov
cmp
test
push
adc
fs
call
dec
mov
scas
xchg
mov
adc
fnstcw
cmp
jg
sbb
adc
test
jle
or
ud2
mov
fmulp
pushf
pop
pop
addr16
cmp
loop
mov
stos
rolb
loopne
inc
jecxz
lods
jmp
mov
mov
shl
test
dec
fnstcw
mov
cwtl
jbe
int
sar
and
inc
pushf
cs
push
popf
stos
xor
icebp
popf
je
insb
fnstenv
push
inc
shll
repnz
inc
push
mov
lret
sbb
repz
in
push
push
mov
shlb
int3
push
or
xor
stc
and
push
loop
sbb
stc
js
sub
lret
testb
aad
mov
and
adc
cmp
pop
xor
or
mov
fwait
mov
mov
dec
push
scas
dec
test
lret
fldcw
pop
scas
mov
je
dec
and
negb
dec
mov
xlat
add
jmp
add
ds
test
push
mov
je
ret
mov
xor
sub
ja
xchg
jns
lock
add
std
test
push
inc
jae
daa
roll
out
pop
sbb
enter
lahf
xlat
jnp
jge
xchg
mov
jae
sub
pop
mov
ficomps
repz
pop
push
mov
call
in
jle
mov
and
fildl
and
mov
jns
add
loop
iret
dec
cmp
loopne,pt
repnz
in
push
and
pop
test
xchg
insl
sbb
xchg
pushf
mov
mov
mov
xor
lret
scas
lds
cmp
cmpsb
stos
enter
push
or
fcmovnb
enter
pop
repz
adc
jmp
ss
push
mov
out
push
sbb
call
xchg
aas
loop
pop
scas
lret
or
and
ds
pop
dec
and
and
inc
les
mov
out
add
out
test
idivl
cltd
aas
xchg
mov
mov
icebp
shl
inc
push
outsb
sti
lds
mov
inc
daa
test
pop
pop
roll
or
ror
mov
jl
cmp
and
int
std
push
imul
inc
cmp
mov
add
or
mov
cmp
imul
inc
lds
dec
rolb
and
test
scas
idiv
sbb
hlt
aaa
mov
xchg
mov
enter
inc
sub
xor
jle
shlb
pop
push
insl
movsl
cmp
pusha
mov
idivl
fwait
adc
fcoml
inc
inc
adc
ljmp
mov
and
daa
mov
nop
repnz
daa
je
adc
mov
fidivrs
shrl
sub
adc
mov
jno
inc
insb
pop
mov
je
dec
push
add
scas
mov
mov
les
dec
cmp
or
fistl
hlt
sbb
pop
adc
jb
push
mov
stos
inc
pop
push
mov
or
repz
insb
dec
sub
cwtl
jnp
data16
dec
pop
and
neg
icebp
inc
mov
inc
add
cmp
loop
jae
jg
enter
int
adc
lods
hlt
icebp
cli
popa
mov
xor
std
cmpsl
lock
lret
movsl
fimull
sbb
push
out
dec
cmp
fsubr
and
addr16
jno
popf
pop
pop
clc
mov
sub
outsb
call
dec
fsubr
lock
pop
fildll
enter
push
sub
mov
js
and
insb
xchg
arpl
leave
push
mov
lcall
in
cmp
sahf
jb
jae
sbb
lcall
push
out
stos
fistpll
mov
cmc
dec
cwtl
mov
push
cld
loope
jno
jae
dec
loop
aad
lret
ret
push
mov
cmpsb
out
popa
dec
sub
jl
sti
xor
ss
mov
xchg
pop
lods
cld
mov
bound
mov
pop
imul
push
xchg
fcoml
mov
fldlg2
faddp
ret
fwait
adc
fldenv
jmp
xor
mov
xor
sub
xor
or
mov
push
ret
push
mov
ret
sub
mov
sub
jnp
addl
int
xchg
and
sub
push
shl
movsl
fcomp
imul
in
mov
inc
jns
lahf
dec
adc
outsl
push
scas
and
ficomps
sub
sti
pop
or
imul
inc
inc
or
xor
add
inc
xchg
cmp
loope
pusha
jae
je
cs
and
cmp
push
test
ds
scas
xor
fwait
inc
push
iret
xor
ss
cwtl
or
mov
fcoml
mov
insl
aam
push
imull
mov
add
lret
jno
enter
stos
lret
adc
rcrb
pop
mov
rcr
stos
mov
cmp
adc
push
cmp
cmp
inc
int
xchg
mov
pop
dec
cmpb
dec
push
sub
cmc
and
push
icebp
push
cli
jmp
push
sbbl
bound
ja
test
outsb
bound
dec
mov
out
sahf
movb
cmp
ja
jne
fstpt
ficompl
cmp
dec
cmp
fmuls
pop
aad
dec
and
out
pop
adc
xchg
hlt
sub
je
lods
js
xchg
xor
mov
sbb
jae
jle
push
insl
push
es
scas
lea
push
sbb
mov
sbb
movsb
mov
inc
pop
or
xchg
push
pop
adc
xorb
pop
xchg
roll
jo
mov
pop
add
and
push
std
and
ljmp
sbb
cmpl
addr16
negb
or
adc
inc
push
inc
aad
call
sub
sub
push
sarb
ss
xchg
loopne
out
mov
out
addr16
inc
mov
addl
and
pushf
push
mov
inc
mov
xor
decb
call
adc
test
adc
pop
mov
jne
jae
insb
dec
mov
pop
push
dec
adc
imul
push
int
dec
sub
mov
andb
lock
pushf
rorl
pop
pop
pop
cmp
aam
push
jp
ss
movsl
in
add
add
pop
cmp
nop
and
mov
pusha
aaa
sahf
stos
dec
mov
sbb
sub
arpl
mov
cmpsb
sub
insl
mov
push
adc
sbb
fisubs
and
cmp
push
and
mov
jle
pop
std
cli
stc
inc
inc
pop
fldt
adc
test
jmp
mov
inc
xor
mov
inc
leave
xor
in
mull
loope
subb
fucom
enter
push
push
adc
push
loop
jbe
cltd
fadds
out
inc
stos
or
pop
push
ljmp
or
jo
je
xchg
fwait
add
push
fprem1
movb
pusha
subl
xor
in
cli
repnz
enter
dec
xor
pop
mov
lods
addr16
mov
pop
jbe
add
mov
mov
fwait
daa
ret
or
dec
dec
jg
out
ss
insl
jns
mov
lret
lret
sbb
jmp
xchg
push
adc
xchg
cmp
push
add
xor
jae
repnz
sbb
dec
mov
or
sbb
test
test
repz
cli
dec
jle
cs
sbb
call
cmc
inc
movsl
test
jb
cmp
mov
cmp
mov
je
and
push
xchg
jns
lods
xor
pop
adc
sbb
push
inc
xchg
sub
popf
daa
push
mov
jno
fnstenv
sub
popa
cld
loope
mov
jb
test
out
mov
cltd
fdivp
leave
in
cltd
out
inc
js
dec
bound
divb
cmp
or
xlat
leave
leave
insb
mov
popf
sbb
rol
xchg
sub
inc
sti
adcl
cmp
jle
adc
out
popa
cmp
stc
lahf
in
iret
xor
cmp
cli
or
jbe
xchg
outsl
out
inc
out
pop
xor
loope
xchg
ret
jns
pop
in
movsb
mov
mov
into
push
jne
mov
cmp
fwait
cmp
dec
sub
dec
cmpsb
add
sti
add
outsl
jp
mov
roll
pop
fldl
roll
or
xlat
cmp
pop
data16
fbstp
mul
mov
mov
test
mov
lods
testb
jl
dec
gs
daa
mov
inc
sub
xor
scas
aam
enter
bound
mov
ljmp
xchg
call
cmp
inc
cmpl
test
sub
movsl
and
dec
pop
mov
pop
outsl
jb
mov
stos
sbb
std
and
jnp
xor
pop
jmp
sub
popa
push
ja
adc
lret
mov
test
adc
test
ss
adc
jg
jnp
jle
scas
leave
ljmp
in
ret
sbb
pop
call
mov
mov
hlt
pushf
loopne
inc
subl
popa
mov
das
cmc
mov
sbb
lock
ss
push
stc
sub
add
xchg
je
sbb
adcl
mov
cs
repnz
cmp
lcall
xor
xor
mov
fwait
mov
into
mov
jmp
dec
inc
out
sbb
adc
dec
push
or
jbe
cmpsl
cmp
lret
and
cmc
inc
ljmp
adc
and
jmp
adc
fnstenv
cli
or
cs
xchg
add
ret
je
adc
in
cwtl
sbb
cmp
jp
inc
push
int3
mov
pop
shll
les
adc
cmp
push
and
xchg
int
adc
mov
cmp
mov
jge
hlt
fldenv
lret
mov
inc
ljmp
adc
inc
or
arpl
std
pop
movsl
push
xorl
daa
add
xchg
dec
mov
outsl
push
clc
sub
popf
into
pushf
dec
mov
in
push
adcl
imulb
loopne
cmpsl
mov
js
aam
into
mov
sti
adc
mov
test
aaa
fcomps
cld
bound
mov
cmp
pop
inc
popf
sbb
cltd
cwtl
popf
cmpsl
daa
add
pop
movsb
mov
push
mov
outsl
mov
movsl
or
dec
negl
loopne
add
in
xchg
rolb
adc
cmp
mov
inc
daa
inc
inc
add
pop
pop
stc
sub
xlat
cs
into
sub
add
hlt
or
mov
xchg
or
outsb
repnz
cwtl
jl
jmp
adc
fisttps
ret
pop
test
fadds
lahf
inc
mov
push
stos
outsb
rorl
sahf
xchg
mov
pop
xchg
out
dec
fsubs
cmpsl
addl
mov
std
mov
sbb
imull
add
dec
shll
rorb
cld
scas
jo
lea
mov
frstor
mov
sub
repz
xor
mov
mov
mov
ss
mov
testl
fildl
test
movsb
cmpsl
pop
cmp
sti
lods
ja
mov
pop
push
mov
mov
lods
divb
jle
pmaddwd
into
icebp
pop
jle
cs
mov
add
and
inc
push
jne
mov
rorl
jno
pop
jg
mov
or
mov
xchg
cmp
add
or
rol
push
xor
test
daa
sub
mov
test
movsb
jbe
push
inc
sbb
enter
mov
inc
xchg
add
jle
dec
inc
mov
je
push
jo
jno
xor
push
fdivr
jecxz
cmpl
xchg
pop
fcomi
push
inc
in
xor
dec
add
sbb
lret
or
cmp
jecxz
mov
mov
data16
push
rcrl
insl
loopne
aad
mov
cld
cmpsl
pop
mov
cmp
aas
add
mov
jne
push
adc
adc
xchg
inc
or
fdivr
dec
sub
mov
aas
inc
sub
jb
lea
popa
stos
jne,pt
mov
in
pop
add
pop
and
jnp
testl
push
pop
imul
cwtl
in
sbb
fcomps
scas
jecxz
out
rcl
jbe
enter
or
stos
fiadds
mov
cmp
sbb
adc
in
aaa
mov
or
xor
add
arpl
ret
flds
push
das
clc
add
int3
cld
insl
cld
mov
xor
inc
lea
mov
xchg
setl
sub
adc
mov
add
jns
std
pop
xlat
jmp
outsb
mov
cs
ljmp
pop
mov
stos
out
xchg
test
test
or
push
pop
cmp
ja
cmp
imul
mov
jmp
call
mov
mov
xchg
insb
or
jle
mov
mov
xor
push
faddl
leave
in
adc
fisubs
pop
jp
mov
add
into
daa
mov
aad
rcrb
adcl
mov
mov
or
out
ljmp
es
call
mov
mov
pop
jnp
jns
sub
lock
sbb
subl
mov
inc
insl
mov
push
sbb
xchg
pop
mov
and
xor
mov
mov
jae
sub
push
and
repz
in
aam
add
lock
loope
cmp
dec
xchg
in
stos
jnp
and
mov
arpl
or
pop
mov
mov
pop
inc
mov
sub
iret
out
cltd
lcall
cmpps
ret
popa
outsl
arpl
push
fwait
subl
pop
fiadds
fildl
test
and
xor
pop
imul
push
push
fisubl
int
cmp
repnz
loop,pt
push
mov
jge
movsl
mov
ja
std
xchg
jae
add
mov
push
xor
shl
jl
test
dec
int3
rcrb
mov
cmp
mov
inc
inc
mov
push
pop
pop
jg
cli
jns
mov
mov
push
mov
jmp
inc
dec
enter
popa
aam
addr16
gs
and
into
inc
fsubs
sbb
scas
sarl
mov
or
cmp
pop
call
repz
pop
movsl
jne
repnz
lods
inc
rorb
xchg
lea
mov
leave
cmp
lret
sbbb
push
cmp
lahf
cmp
shl
enter
int
es
into
stc
out
daa
rorl
xlat
out
call
out
ret
bound
dec
mov
out
mov
insb
dec
jbe
adc
fadds
daa
ljmp
pop
push
enter
xchg
outsb
scas
leave
cmc
out
mov
cmp
mov
xchg
ja
sub
fdivrl
lahf
ficoml
faddl
pop
jge
push
mov
xchg
addr16
jmp
aad
stos
lock
or
and
dec
mov
push
outsl
xor
add
stos
stos
jle
ret
js
and
xchg
pop
ljmp
dec
flds
inc
push
jmp
push
mov
movsb
mov
pusha
movsl
and
outsb
mov
push
fnsave
xchg
inc
add
dec
aaa
rolb
cltd
jae
fs
gs
sbb
jb
sub
jno
push
inc
dec
stos
inc
mov
or
iret
jo
xchg
xchg
xchg
cmpsb
jns
ljmp
jl
icebp
aas
jmp
push
xor
lock
inc
jge
inc
mov
fstpt
insb
or
ret
lret
inc
xor
test
repnz
xor
and
popa
arpl
add
lret
cmpb
mov
jge
shlb
pusha
lea
xchg
fisttps
jge
imul
aaa
mov
pop
cmc
pop
dec
mov
inc
sub
or
fmull
addr16
fnstsw
push
mov
xor
loope
ror
pushf
add
mov
das
dec
and
cmp
outsl
mov
mov
jno
and
lret
jnp
mov
lret
into
lods
dec
scas
iret
shlb
xor
and
out
sbb
jb
rorb
rclb
mov
jle
lods
mov
jp
test
push
inc
cs
cltd
sub
xchg
add
bound
jge
aaa
or
shrl
fisubl
add
loopne
repnz
test
pop
arpl
dec
in
andb
pop
lods
incb
sar
mov
lret
les
aad
sub
repnz
mov
inc
mov
shll
aaa
loopne
rcrl
mov
mov
cltd
dec
fistpll
sahf
mov
cld
xchg
mov
arpl
rolb
sbb
lods
ljmp
cli
pop
call
push
fcomps
jp
cli
sbb
cwtl
jle
and
pop
inc
cwtl
and
hlt
pushf
sub
in
push
pop
inc
mov
push
mov
mov
stos
mov
lahf
push
shll
or
insb
jg
push
mov
pop
aam
mov
cmovne
in
jno
xchg
pop
ficoml
enter
scas
rolb
lock
loopne
data16
xchg
fnsave
dec
add
sub
mov
out
cmc
jl
xchg
push
inc
dec
xchg
xchg
aas
jle
xor
outsb
fmull
ret
in
mov
xchg
sub
jne
cmp
mov
test
ljmp
pop
add
scas
rol
lods
sbb
push
loopne
adc
mov
or
push
stos
stc
out
mov
inc
pop
xor
lcall
or
stc
scas
imul
enter
fs
add
loope
out
gs
shll
adc
mov
inc
lcall
inc
outsl
rolb
bound
pop
adc
enter
aam
mov
inc
or
jle
sbb
ret
addr16
dec
pop
jbe
xor
frstor
xor
mov
sbb
push
cld
out
xor
xor
iret
sub
gs
fnsave
repnz
lret
or
sub
call
push
insb
jbe
in
cmpsl
push
push
add
pop
and
scas
popa
push
sub
pushf
lahf
pop
add
insb
xchg
movsb
xchg
jg
sbb
mov
xor
in
ja
inc
mov
fwait
std
xchg
or
les
imul
and
enter
rorl
daa
mov
imul
xchg
fisubl
sbbl
popf
dec
lahf
sahf
jmp
sub
ffree
jmpw
call
bound
mov
inc
das
jle
rcll
out
arpl
call
repz
cmp
jl
test
adc
rolb
push
mov
push
and
mov
pop
push
fistpl
add
ret
lock
mov
pop
pop
fmul
fbstp
and
lcall
pop
pop
fdivl
stos
movsl
loopne
jbe
mov
sti
mov
test
inc
xchg
stos
sbb
enter
aam
fdiv
xchg
iret
mov
dec
push
mov
ret
jns
outsl
addb
lods
mov
adc
out
jl
push
outsb
aad
pop
sarl
mov
adc
cmc
mov
xchg
xor
ficoml
add
enter
sub
fdivs
orl
jp
sub
push
scas
popa
fsubl
in
adc
fwait
insb
leave
nop
pop
lods
adc
and
or
add
in
pop
ret
sahf
repnz
in
icebp
pop
push
add
aas
cmpsl
pop
adc
xor
inc
push
pop
pop
icebp
jmp
xor
xor
pop
push
mov
popa
fnstsw
push
mov
xchg
xchg
xchg
push
repz
sbb
out
mov
cmp
jmp
stc
lcall
or
out
mov
or
adc
mov
inc
insl
cmpsl
cli
jo
iret
lcall
mov
dec
adc
jno
aam
cmpsl
adc
mov
inc
cmp
jl
dec
out
mov
xor
outsl
cmpb
push
das
xchg
fldenv
dec
mov
xchg
add
nop
out
dec
inc
cwtl
popf
loopne
jg
jecxz
enter
inc
or
sub
xchg
daa
xor
jnp
movsl
out
xor
popf
jp
ljmp
sub
hlt
cld
mov
in
loop
das
pop
push
les
mov
js
sbb
mov
arpl
pop
test
aam
cmp
jecxz
aas
ja
loope
push
jge
outsb
lcall
jb
movsb
insl
mov
mov
mov
dec
std
gs
xchg
aaa
cmp
xlat
call
test
pushf
iret
mov
sbb
inc
dec
insb
pop
sar
pop
mov
arpl
in
jo
jb
pusha
into
adc
addr16
cmpb
xor
cmp
lcall
test
sahf
int
or
pop
aas
push
mov
rorb
mov
fbstp
xor
daa
das
and
cmpsl
fildll
lret
jle
dec
sar
jnp,pt
ds
and
sub
loopne
sub
or
inc
jno
movsl
pop
mov
dec
push
inc
test
jge
and
notl
cmp
xchg
pop
mov
popf
lcall
test
lea
push
jbe
jns
and
idiv
mov
push
mov
add
lret
inc
dec
pusha
mov
imul
orb
arpl
mov
xor
shl
arpl
cmp
xlat
jne
or
jb
pop
pop
daa
xor
test
scas
sbb
fwait
in
jle
sti
xor
pop
jge
sti
jecxz
push
lret
das
push
sbb
or
pop
mov
adc
mov
add
sub
lea
pop
test
mov
mov
adc
fnstcw
pop
inc
mov
sbb
and
stos
sbb
test
movsb
cmp
cs
xor
mov
push
inc
lcall
push
and
fmul
mov
push
icebp
dec
xor
or
test
sbb
mov
inc
imulb
xorl
add
sub
repnz
aas
mov
add
push
pop
mov
dec
je
or
out
sbb
push
push
imul
mov
dec
cmpsl
loop
lds
les
outsb
jns
in
aad
push
xlat
lods
shrl
retw
or
les
or
push
dec
gs
xor
add
mov
std
and
jecxz
fs
mov
sub
adc
loop
stos
jmp
push
mov
sub
inc
fnstsw
std
imul
ds
lods
ja
outsb
leave
cmp
jle
mov
adc
daa
bswap
adc
ljmp
jecxz
addl
jp
xchg
fisubs
test
xor
xor
push
dec
sub
ret
stos
xchg
jne
pushf
insb
mov
xchg
cmp
leave
add
inc
push
sti
mov
repz
mov
pop
inc
sbb
int
dec
loopne
imul
insb
mov
mov
and
sub
jbe
xor
lcall
sub
push
push
or
push
ficomps
jecxz
adc
ss
and
push
aam
jp
out
out
in
dec
test
loopne
arpl
outsl
xchg
adc
inc
and
in
xor
divl
mov
inc
cmp
pushf
data16
sub
xchg
add
mov
pop
push
loope
dec
xor
insb
int3
daa
adc
add
adc
out
mov
or
imul
mov
idivl
outsl
dec
orb
and
imul
push
out
pop
mov
rcrl
xchg
movsl
lock
filds
mov
cmp
inc
pop
xchg
pop
jns
movsb
fdivrl
enter
test
add
movsl
stos
lcall
mov
pop
inc
xchg
jae
idivb
ja
jle
inc
popa
rcl
lret
or
lods
cmc
mov
daa
cld
push
inc
pop
pop
cmp
add
push
js
popf
negl
jge
and
cli
inc
jmp
scas
mov
aas
enter
das
es
repz
adc
loope
push
adc
mov
ret
push
mov
out
lret
dec
xor
mov
dec
inc
shll
inc
ss
addr16
idivb
pusha
gs
mov
pusha
sbb
loopne
push
leave
and
scas
insl
dec
out
cmp
sbb
out
jb
and
roll
xor
js
out
add
arpl
jle
fucom
out
les
cmp
push
pop
dec
out
xlat
xlat
mov
je
ljmp
je
cmp
jmp
jp
lret
insl
stc
adc
jne
sar
stc
mov
je
inc
arpl
jle
idivl
cli
js
and
daa
imul
mov
movsl
loopne
nop
and
mov
xchg
or
inc
lret
mov
ss
push
pop
daa
cwtl
fs
xchg
pop
insb
out
and
popf
in
mov
xchg
and
outsl
push
inc
outsl
sarb
jne
out
cwtl
jmp
movsb
outsl
xor
pop
cmp
sbb
mov
add
mov
fbstp
sub
cmp
daa
lods
dec
xchg
jmp
push
push
jb
mov
insb
imul
sarl
mov
mov
jns
gs
iret
es
cmp
sub
or
aas
ficoml
filds
sub
daa
add
nop
add
mov
mov
push
mov
push
push
shll
inc
xor
mov
cwtl
es
aaa
in
ret
dec
add
mov
mov
xchg
dec
inc
or
jns
and
xchg
mov
mov
jo
and
pop
lods
js
or
repnz
jmp
aaa
mov
bound
push
lds
mov
xchg
push
push
icebp
xacquire
push
test
fcomps
ljmp
in
push
out
mov
lret
loope
add
rep
int
cmc
mov
mov
insb
test
loop
push
mov
gs
pop
cltd
aam
xchg
dec
dec
sahf
repz
aas
sarb
stos
mov
fcoms
jmp
mov
ds
xchg
fsubs
push
add
and
cmp
mov
inc
dec
loop
sbb
adc
push
movsl
or
xchg
pop
xchg
and
xchg
push
ds
stc
into
adc
dec
sbb
fistpl
pop
in
out
and
shrl
cmc
repz
mov
pusha
out
add
repnz
jo
cmpsb
pusha
mov
pop
arpl
data16
pop
cs
pop
or
fnstcw
xlat
icebp
jnp
sub
inc
enter
les
inc
xor
jp
shr
sub
or
fistps
idivb
jmp
mov
or
mov
fdivrs
cwtl
xor
cltd
inc
mov
sarb
mov
push
setge
jo
cli
sbb
push
repnz
and
adc
adc
adc
or
mov
xor
lahf
pop
mov
xchg
xor
call
push
pop
mov
fidivrl
imul
popa
jge
fidivs
push
fistps
nop
movsb
into
mov
jl
cltd
stos
pmaxsw
je
ficompl
sub
out
pop
into
mov
push
pop
sbb
loop
ds
je
push
ret
push
and
popf
mov
data16
bound
pop
cmp
out
nop
adc
int3
cmp
xchg
lods
in
sahf
int3
xchg
adc
dec
xchg
js
mov
pop
push
dec
xchg
push
mov
in
mov
mov
pop
pop
mul
jge
in
mov
sahf
mov
mov
js
jb
pop
shll
in
leave
mov
loop
call
push
push
sbb
sbb
fwait
push
jns
jecxz
jno
mov
inc
popa
int3
mov
jl
popa
jae
repnz
test
out
int
out
test
mov
ljmp
pop
xchg
lods
fs
dec
out
push
subl
mov
in
and
lahf
nop
out
lcall
xchg
rcrl
mov
lahf
inc
push
movb
bound
in
popf
pushl
xor
test
jne
rcrb
mov
rolb
push
sbb
mov
xlat
add
cmpsb
scas
xchg
imul
mov
sbb
push
cmp
into
std
ret
scas
xchg
add
mov
mov
and
jns,pt
fwait
xchg
and
xorb
in
test
lret
testb
mov
adc
fnstcw
insb
fstpl
pop
cwtl
int
cwtl
clc
mov
js
or
shlb
je
lods
imul
or
xchg
push
push
xchg
dec
xor
inc
popa
add
in
inc
jecxz
lcall
clc
hlt
lds
lahf
xchg
cwtl
fcoml
mov
aaa
bswap
divb
lahf
loop
in
lret
insb
test
jle
clc
orb
loop
lea
mov
cmpxchg
push
stos
aad
inc
xchg
loopne
lock
cld
les
or
xchg
pop
in
inc
push
dec
xchg
jo
je
mov
dec
mov
repnz
aam
mov
movsb
arpl
sub
addr16
dec
iret
and
sub
jo
mov
sub
repz
add
lret
popf
xchg
sti
sbb
cld
in
imul
sub
xchg
es
fbld
pop
push
dec
rcll
mov
addr16
push
mov
cmp
and
mov
lods
les
sbb
bound
std
lea
mov
pop
loope
stos
lods
push
sub
addr16
mov
stc
cmpsb
push
mov
jno
lods
dec
mov
adc
xchg
fidivrs
jns
out
shlb
mov
dec
test
lret
sbb
mov
addl
cwtl
mov
mov
add
push
ret
das
push
mov
xchg
mov
sub
add
xor
pop
testb
ja
mov
clc
inc
push
jg
xor
mov
inc
test
inc
mov
pop
xchg
aam
ss
jge
pop
das
int
push
lock
cmpsl
loop
cld
rcrl
inc
out
stc
pop
xchg
dec
xchg
jb
ret
std
negb
shll
xchg
filds
aaa
mov
adc
push
in
pushl
int3
movsb
cli
in
mov
ljmp
and
enter
subb
dec
mov
fsqrt
and
push
and
roll
ja
lahf
cmpsb
outsl
cmp
push
dec
test
xor
cmp
divl
mov
cwtl
hlt
ja
pop
in
pop
mov
sarl
mov
xor
push
jnp
pop
dec
sbb
and
out
pop
cwtl
imul
sub
scas
push
mov
movsl
in
adc
mov
mov
aad
loop
psubq
and
frstor
mov
mov
add
mov
cmp
mov
lret
scas
shr
cmpsb
jge
mov
dec
pop
out
inc
cmp
inc
inc
push
inc
mov
out
lods
sub
dec
lods
out
daa
cmpl
out
add
call
test
sbb
cmp
xchg
add
dec
and
cmp
mov
add
cmc
aas
insb
out
adc
loop
push
dec
imul
loope
inc
fildll
sbb
repz
sub
mov
outsb
mov
dec
lcall
lret
dec
jge
xchg
lcall
pop
testb
push
je
jg
out
mov
hlt
test
sbb
fwait
mov
push
mov
lds
jecxz
sahf
insb
imul
aas
into
aad
outsl
ret
pushf
leave
in
inc
pop
dec
popf
adc
dec
push
sbb
or
jl
xlat
pop
seto
cmp
add
int
mov
cmpsl
in
push
popf
dec
xchg
pop
mov
imul
mov
fists
mov
xor
call
cmp
xchg
xor
jae
xchg
sub
jle
rclb
into
test
add
mov
cmp
pusha
popa
cld
ds
fs
sub
cmp
mov
add
sarb
xchg
mov
mov
cld
mov
shlb
inc
mov
lea
adc
int
ss
add
je
xor
call
xchg
pop
cld
sub
aaa
into
imul
or
dec
fldl
mov
dec
dec
push
jecxz
mov
or
stos
pop
and
rorb
lods
adc
cmp
aam
mov
inc
mov
pop
sbb
imul
ds
negb
mov
int3
rcr
xor
arpl
aas
ss
aas
and
fstpt
pop
push
insb
dec
jne
or
popf
jbe
push
lds
mov
psubb
das
out
mov
pop
dec
push
into
jecxz,pn
dec
outsl
stos
test
xlat
pop
test
push
dec
mov
pusha
lds
rcrb
mov
push
pcmpeqw
xchg
or
leave
fisttpl
cltd
xor
daa
inc
aad
or
inc
pop
sarl
ss
fiaddl
cmpsl
jle
mov
mov
push
lret
push
out
sub
gs
int3
sbb
flds
cmp
rcrb
leave
std
jl
or
mov
popf
in
and
imul
adc
push
iret
mov
cmpsb
inc
sub
sahf
jns
out
insb
in
das
mov
mov
out
sahf
lret
hlt
movntq
mov
mov
sub
jmp
pop
cltd
mov
lahf
lret
into
push
popf
dec
movsl
int3
call
jge
add
mov
pop
rcr
dec
je
xlat
lcall
imul
adc
out
mov
push
cmpsb
inc
sub
hlt
test
ret
inc
popa
xor
sbb
pop
out
cmp
lret
xor
lods
ret
mov
adc
test
rorb
call
ja
xchg
mov
loopne
and
jp
and
nop
cmp
lahf
cmp
ret
push
and
ret
jle
xor
pop
sub
add
scas
push
push
aam
mov
cmp
daa
mov
cli
loope
js
cmc
cwtl
in
xor
je
pop
mov
mov
dec
jns
push
movb
andl
pop
outsl
int
call
push
test
push
sub
xlat
mov
scas
xchg
cmp
test
sbbl
subl
push
xor
or
lods
fsts
pop
adc
cli
push
or
push
sub
jle
mov
mov
and
mov
aam
stos
dec
es
xchg
dec
jb
sub
xchg
mov
les
ljmp
push
loopne
sti
xchg
xchg
int3
cli
movsl
sub
mov
lds
pop
movsb
fcomp
sub
sbb
add
imul
iret
mov
dec
inc
adc
daa
dec
jge
in
stos
cmp
pop
adc
ficoms
out
and
mov
and
pop
pop
sahf
cmc
mov
sub
ret
mov
sbbb
or
xchg
adc
iret
cmc
in
dec
mov
pop
fildl
arpl
lods
sbb
shrl
mov
orl
and
inc
movsb
aam
rorb
xor
in
pop
or
sti
inc
inc
xor
repz
inc
pop
or
in
pusha
scas
cli
mov
xchg
dec
rorl
addb
mov
fcompl
jge
mov
jae
mov
aaa
or
or
test
inc
push
push
stos
lcall
std
neg
sub
rcll
arpl
mov
xor
pop
daa
cmpsl
inc
sbb
mov
push
pop
jne
sahf
jne
ret
test
divl
sub
pop
fwait
sarb
sub
mov
mov
jecxz
cld
jecxz
and
das
fldt
dec
sub
out
data16
mov
sub
dec
ret
xor
mov
icebp
sbb
push
out
push
cmpsl
inc
mov
cltd
cmp
push
mov
lods
ret
bound
lods
cli
xor
popl
stos
out
mov
lds
movsb
mov
icebp
orl
ljmp
jg
insb
imul
icebp
ja
ds
xchg
ljmp
or
scas
or
jo
leave
aaa
lea
push
cmpsb
dec
lret
arpl
gs
cwtl
stos
push
xchg
pushf
fsubl
xchg
push
lcall
out
sub
sbb
popa
inc
xor
sbb
cmpl
rorl
jo
add
mov
loope
push
gs
jmp
add
loop
out
fimuls
mov
rclb
cmp
call
jo
jle
mov
inc
push
adc
xchg
or
lcall
hlt
mov
aas
add
inc
mov
mov
cltd
fs
out
and
jecxz
cmp
in
mov
mull
push
adc
jg
js
ljmp
jne
mov
pop
loope
xchg
mov
lret
mov
add
subl
lret
stos
mov
push
clc
sub
lock
inc
mov
cmpb
mov
xor
jne
out
sbb
enter
or
xchg
addl
mov
add
sub
mov
pop
lods
push
pop
jbe
icebp
sub
inc
or
mov
dec
int
mov
inc
jno
mov
or
in
dec
push
pop
mov
mov
movsl
nop
cmp
scas
jb
faddl
jle
and
ret
sbb
and
mov
add
inc
fisttpll
loope
fwait
aas
movl
daa
mov
xchg
or
mov
fnstenv
lds
idivl
imulb
sti
lock
cmpsb
push
hlt
ja
ret
pop
cli
jae
cmp
addr16
sbb
fidivs
dec
cmp
shll
rcrl
std
pop
fnstenv
je
xchg
lret
cmc
subb
adc
push
pop
ds
gs
mov
mov
xor
or
cmp
test
mov
cli
pop
sbb
xlat
push
mov
fcomp
frstor
std
fldcw
std
xchg
dec
sti
pop
pop
mov
xchg
leave
jp
lock
push
cmp
xor
add
repz
lds
add
push
sub
lret
cld
push
dec
add
push
js
clc
bound
sub
push
mov
inc
dec
rcrb
js
mov
sti
pop
loop
pop
or
enter
addl
and
daa
cmp
sub
mov
adc
pop
sbb
xchg
mov
out
sub
ret
sarb
jb
fidivrs
mov
xor
mov
push
sub
lock
cmpsl
std
repz
cmpsl
dec
insb
ret
and
push
loopne
inc
xlat
jno
and
mov
fdivs
dec
jno
jbe
out
mov
add
jno
push
jne
cmp
faddl
jne
mov
jge
cmp
sbb
and
ret
push
lods
test
add
stc
mov
inc
jl
jle
inc
stos
sbbb
add
cmp
mov
out
aam
sub
mov
push
mov
xor
jge
shlb
push
inc
mov
pusha
movsl
in
incb
test
lea
jp
popf
insl
and
sbb
repz
subl
in
or
pop
inc
std
fistps
mov
lods
stos
sahf
jae
push
in
dec
je
adc
daa
js
icebp
sbb
orl
adc
and
out
lret
push
add
hlt
inc
push
outsb
xchg
fidivs
add
repz
xor
cwtl
mov
mov
shrl
aaa
xchg
xor
dec
in
jbe
sarb
sbb
cmp
jg
dec
sti
and
dec
je
jne
jb
nop
pop
jmp
mov
jecxz
out
xchg
mov
and
pop
push
into
and
fistps
popa
test
addr16
stos
jg
sub
sahf
dec
addr16
cmp
jno
adc
in
xchg
rcr
mov
sarl
push
test
sub
cltd
aas
push
sbb
lret
insb
mov
add
sbb
je
scas
mov
std
cmp
mov
pop
je
xchg
stos
loop
mov
data16
mov
cwtl
in
iret
mov
mov
and
sbb
mov
js
add
push
push
loop
xchg
and
loope
pop
pop
ret
inc
in
jge
xor
fbld
mov
mov
cmpsb
popw
repz
push
scas
mov
xor
jnp
rclb
or
cmc
jecxz
and
ret
push
jne
mov
pop
lahf
mov
or
loope
or
adc
push
nop
je
or
mov
ret
add
pop
sarl
and
dec
lret
adc
push
or
sbb
call
vmulsd
add
sar
push
mov
addr16
or
fabs
decb
gs
jl
mov
sbbl
sbb
cmp
lahf
icebp
xchg
adc
push
cmp
xchg
xchg
in
fildll
mov
idiv
mov
cmp
xchg
mov
pop
jb
rcrb
pop
loope
pop
adc
cmpsl
lds
notl
mov
mov
xlat
cmpsb
jne
or
int3
xchg
mov
jl
xchg
cld
jl
dec
dec
pushf
dec
or
push
mov
mov
fdivrs
add
fdivp
fcmovnb
fldt
mov
or
cmpsb
testl
cmp
and
cmp
adc
cmp
push
adc
sbbb
push
pushf
push
and
ret
push
pop
bound
pop
sbb
pop
push
jbe
mov
mov
mov
pop
scas
fisttpll
enter
insl
insl
cmp
adc
push
imul
xchg
cmp
xor
outsl
bound
dec
stc
lods
scas
sbb
mov
hlt
shll
fcoml
imul
xchg
ljmp
cmp
mov
xor
mov
popf
push
and
movsl
addl
pop
ja
jo,pn
and
je
and
jne
test
jecxz
mov
incl
mov
test
pop
fiaddl
and
push
cmp
pop
add
fwait
popa
test
sub
xor
pop
lock
inc
idivb
imul
sbb
mov
or
inc
jge
loop
dec
fcmovb
les
cld
fcomip
jbe
and
pop
mull
add
lahf
mov
leave
clc
subb
and
ljmp
push
cli
dec
pop
ud2
jg
xchg
push
ficoms
and
xorl
dec
clc
out
pop
push
popf
bound
int3
add
ret
lcall
in
dec
xchg
adc
pop
inc
ja
push
sub
jno
mov
lret
push
push
fsubl
icebp
push
incb
cltd
dec
scas
jno
mov
mov
loopne
dec
movsl
jbe
scas
adc
dec
push
xchg
xor
fadds
sarl
cmp
sarb
cmp
ja
cmp
dec
sti
data16
push
push
ffreep
test
mov
test
dec
arpl
fwait
pop
jb
pop
rolb
jne
leave
xor
jne
push
decb
push
cmova
xchg
xchg
dec
cld
frstor
pop
dec
push
cli
fimuls
pusha
sub
mov
outsl
in
mov
cmc
cli
ret
lods
pop
push
inc
cmpsb
jecxz
xor
dec
aaa
orl
push
mov
mov
cmpsb
int3
testl
jge
leave
adc
stc
shrl
dec
xor
setne
jno
out
sub
mov
sub
outsl
scas
push
cmc
fstps
xchg
outsl
fwait
push
iret
and
mov
fnstenv
call
cmpsb
push
inc
enter
out
int
xor
pop
mov
cmp
lahf
jg
and
jge
lods
orb
bound
mov
add
imul
fcomip
inc
test
and
nop
push
lds
pusha
ds
cwtl
mov
enter
bound
mov
das
cmp
inc
bound
fbld
pop
cld
pushf
outsl
mov
loope
jl
xchg
sub
out
js
jge
in
cmc
pop
inc
fistpl
sbb
mov
and
in
dec
jbe
xchg
bound
movsb
push
mov
xchg
push
loop
and
gs
sbb
inc
fsubl
testl
ljmp
add
jg
mov
insl
pop
xor
mov
in
add
jge
dec
stc
addl
cmp
jle
cld
jns
push
ret
fmul
sub
xchg
aas
das
addl
sbb
das
arpl
fldcw
movsl
pop
mov
cwtl
lahf
xchg
cmpsb
push
ficoms
es
cmp
adc
jns
push
mov
fcmovnb
sub
push
adc
mov
sub
in
pop
jno
jl
ja
arpl
push
inc
inc
xchg
stos
sub
scas
inc
stc
sub
out
fdivrl
out
xor
enter
push
xchg
movb
adc
cltd
mov
or
in
or
push
adc
jg
xchg
test
mov
aaa
aaa
lea
lock
mov
ror
lds
pop
ds
sahf
aas
dec
xor
rclb
loopne
push
sarl
mov
dec
xchg
sbb
sbb
or
xlat
lods
fldl
subl
lods
pop
stos
ljmp
adc
rclb
fldt
popa
shll
pusha
lcall
scas
push
gs
fs
js
add
int3
out
mov
dec
push
es
mov
inc
xor
hlt
cmp
jmp
es
lret
dec
mov
fists
sub
repz
and
cmpsl
out
dec
dec
mov
xchg
push
inc
xchg
jae
and
mov
out
xchg
push
movntps
push
pop
sbb
adc
pusha
cmpsb
rcrb
adc
xchg
mov
jle
out
or
dec
xchg
sbbb
imul
scas
inc
lcall
xchg
outsb
fldln2
cltd
fwait
push
hlt
jo
mov
xlat
out
and
jnp
clc
pop
scas
cmpsl
add
int3
cmpsb
jmp
jp
lret
fiadds
popf
sub
jnp
rcrb
or
xchg
lea
push
xor
mov
dec
jno
mov
push
xchg
mov
pop
call
add
mov
push
mov
and
lahf
outsl
and
dec
fiadds
leave
xchg
into
ret
fsubl
loope
xchg
fsubs
xor
pop
pop
les
pop
aam
inc
jge
xor
bound
jl
push
mov
sbb
adc
fstpl
push
leave
stc
adc
repnz
adc
add
mov
dec
fnsave
xorb
inc
mul
xchg
xchg
ret
or
sarb
lret
mov
and
push
or
cmp
pop
ret
lret
fidivrs
and
dec
lock
aaa
imul
popa
push
daa
daa
data16
mov
cld
mov
xchg
mov
xchg
mov
dec
mov
and
xchg
inc
pop
lahf
or
and
lods
or
push
or
popf
or
push
adc
inc
sub
paddq
adc
daa
clc
fcmove
into
stos
sbb
inc
sarl
scas
fdivrl
lods
loopne
popf
mov
sub
inc
rcr
sub
add
pop
pop
popf
inc
pushl
sub
xchg
int3
out
lret
iret
cmp
pop
sbb
mov
sub
inc
aas
fisubl
fwait
rcrb
lock
cwtl
fmull
int
cmp
inc
pusha
xor
push
inc
aad
dec
popa
and
scas
cmp
sub
fistps
fistl
pop
pop
rorl
lcall
dec
xchg
add
lahf
mov
or
lcall
add
lods
or
or
jnp
dec
mov
mov
jne
mov
std
pop
jl
mov
popa
imul
je
mov
in
inc
out
push
imul
sub
jl
daa
test
js
and
dec
or
sub
inc
pop
and
xor
push
jnp
adc
mov
gs
pop
fnstsw
scas
cmpsl
xorb
cmpsl
int
imul
dec
pop
pop
pop
xchg
ss
pop
leave
ja
in
xchg
pop
adc
inc
shll
ja
dec
jle
sbb
and
rcrb
ficoml
mov
es
das
push
sub
inc
cmc
sub
jl
adc
xchg
out
out
repz
inc
push
push
or
xchg
jp
orl
cmc
lods
mov
scas
shl
jmp
adc
cmp
xlat
xchg
ljmp
sub
sti
ficoml
lods
xchg
mov
out
sub
adc
rcll
ror
lahf
mov
jg
aad
and
jb
jne
test
je
xlat
test
push
fisubrl
mov
push
push
lcall
xorb
ljmp
xor
or
cmc
inc
nop
jns
xchg
cmp
or
fdivs
in
xor
cmp
test
roll
sub
cs
jmp
sbb
ret
in
shl
out
cmpsb
iret
enter
dec
xor
cmp
mov
imul
pop
pop
sahf
dec
fwait
add
cli
push
mov
sti
bound
inc
aaa
pop
fsubs
sarl
aas
push
sub
cmp
add
dec
outsl
hlt
scas
jl
mov
enter
push
add
cmp
popa
mov
pop
mov
addr16
filds
adc
mov
nop
pop
frstor
pop
mov
push
xor
dec
fldt
jmp
push
sarl
addb
xchg
push
daa
inc
pop
mov
out
and
mov
enter
fldenv
fadds
fdivl
lods
insb
and
ret
mov
in
xchg
or
sbb
jb
xchg
dec
enter
or
out
mov
shll
and
in
es
js
inc
or
xchg
div
fwait
cs
pop
gs
mov
cmp
fcompl
mov
mov
scas
scas
je
cld
jno
mov
in
stc
int
or
ds
adc
call
mov
dec
mov
gs
out
das
pop
inc
mov
pop
mov
loope
scas
jge
mov
hlt
cmc
mov
mov
rcl
aas
cmp
rorl
out
sbb
dec
pusha
in
lds
fldl
cmpsb
push
pop
xchg
push
cmp
adc
or
in
cmp
sahf
and
rol
sub
lret
cmc
lret
xchg
pop
xor
scas
ficompl
dec
jp
dec
or
adc
call
icebp
in
jae
das
out
sbb
lcall
sub
mov
jb
in
movsl
gs
pop
addr16
and
aaa
add
hlt
cmp
inc
or
or
push
in
fyl2x
lods
div
out
mov
icebp
pushf
dec
mov
mov
enter
jnp
pop
mov
repz
jns
sub
icebp
insb
xchg
bound
jl
dec
insb
pop
outsl
sahf
sbb
sub
pop
jg
pusha
fisubs
mov
lret
movsb
add
xor
mov
sub
jle
out
cmpsb
sti
sbb
mov
jnp
mull
xor
out
fsubrs
inc
dec
mov
les
cmp
or
popa
mov
ljmp
add
push
mov
outsb
ds
inc
jns
fsubrl
movsb
jbe
jno
fwait
xchg
fdiv
aaa
dec
arpl
pop
inc
nop
stos
movsb
popl
cmp
push
in
mov
shrb
push
sbb
push
inc
sahf
cmpsb
cmpsl
inc
cwtl
in
enterw
push
push
ds
sub
out
out
dec
aam
lahf
pop
xchg
cs
adc
mov
repz
lods
aaa
adc
lock
test
inc
and
cmc
pop
xor
fbld
or
aam
pop
mov
and
daa
jle
lcall
sbb
adc
mov
cld
adc
xchg
and
jo
push
and
jp
cmc
inc
mov
mov
sbb
jno
xchg
adc
sub
xchg
mov
push
push
mov
cmpsl
adc
mov
lods
cmp
orb
mov
xor
add
fcmovu
dec
sbb
lret
cmpsb
into
push
decb
sahf
inc
ss
xchg
out
insb
dec
xorl
jb
push
iret
ds
adc
fnstenv
add
add
stos
cwtl
outsb
scas
mov
inc
mov
subl
in
sti
js
pop
lahf
inc
jo
enter
lods
xor
cltd
test
mov
scas
pushf
frstor
xor
mov
ficoml
lcall
pop
xchg
pop
or
push
cld
lock
xlat
bound
cmpb
push
or
arpl
mov
xor
aad
fs
gs
stos
mov
mov
outsb
lods
jg
jge
push
insl
inc
add
rcrb
icebp
pop
xchg
ljmp
sbbb
icebp
xchg
xor
sub
mov
mov
nop
mov
xchg
mov
pop
mov
in
jle
adc
add
mov
into
scas
or
xlat
scas
and
or
adc
sub
add
mov
sahf
mov
push
lret
lea
cli
sahf
in
lods
mov
pop
ljmp
inc
cmp
sub
aam
ds
jmp
movsl
sub
outsb
sti
outsl
js
in
push
dec
test
imul
jbe
sub
xchg
dec
pop
add
adcb
loop
scas
inc
mov
xlat
add
cld
call
mov
push
and
pop
sti
clc
adc
mov
mov
addr16
sub
mov
add
and
sub
push
fdivrs
js
popl
popf
mov
xlat
pop
inc
jg
test
sub
adc
ss
jns
sbb
xor
ret
dec
sub
ss
mov
sub
adc
fucomi
mov
inc
imul
add
jle
into
xlat
pusha
aad
mov
addw
aad
cld
es
mov
loop
cmp
inc
popa
jl
and
push
add
rcrl
popa
fisubl
cmp
jne
sub
inc
les
inc
mov
andb
xchg
sbb
lds
add
imul
das
mov
cmp
sbb
jmp
das
jge
add
adc
push
pop
inc
cwtl
lods
add
xor
inc
mov
jp
lea
pop
jno
push
push
stos
loopne
scas
pop
push
fisubs
in
popf
test
mov
lock
lods
jo
pushf
sbb
cmp
mov
push
outsb
fsts
xor
imul
xor
push
mov
sbb
adc
adc
push
sbb
adc
orl
jg
cld
popf
add
push
leave
ret
push
out
fmul
data16
inc
and
addr16
in
rorl
and
shlb
std
push
cwtl
jmp
seto
mov
in
pop
lods
and
hlt
add
pop
ret
cmp
std
jbe
push
push
sub
punpckldq
cli
dec
mov
push
add
imul
add
in
rcrl
cmp
orl
insl
cmc
push
add
hlt
aad
lret
sbb
dec
lcall
mov
jl
flds
mov
adc
ds
ljmp
popf
pop
jp
mov
sti
subb
mov
sub
gs
out
mov
adc
add
inc
xchg
and
fistpll
insb
shr
dec
and
dec
rclb
int
xchg
out
mov
dec
xchg
mov
adcb
dec
lahf
adc
or
fld
sub
cmpsl
gs
popa
stc
push
xchg
xor
stos
bound
jg
and
out
sbb
dec
scas
loope
mov
sbb
inc
ret
insb
int3
adc
ljmp
ljmp
call
out
push
sbb
mov
fstpt
in
dec
push
xchg
pop
arpl
pop
movsl
jbe
out
xchg
jg
stos
rcrl
xor
or
fisubl
movsb
push
stc
mov
jle
fidivl
into
cmp
sbb
sahf
hlt
sarb
movsb
ljmp
xor
movsb
mov
in
xchg
je
movsb
ljmp
inc
xchg
adc
stos
bnd
sbb
xchg
pop
fcomi
xor
test
pop
pop
jb
mov
lods
or
jl
bound
adc
sbb
pop
fbld
stos
xchg
scas
cmp
jae
or
dec
outsl
andb
int
fnsave
neg
ds
mov
cmp
cmpsl
fwait
ret
jecxz
adc
scas
jnp
jmp
sbb
flds
inc
jns
or
push
stos
jno,pn
xchg
mov
inc
arpl
cmc
mov
jbe
xor
mov
aad
ja
fsubrs
xchg
xchg
mov
fstpl
or
mov
adc
sub
cmpsl
movsl
bound
int
jg
outsl
mov
jnp
jmp
sub
test
xchg
mov
stc
aas
out
pop
jae
gs
xchg
lods
ss
sub
pop
dec
out
xchg
push
jns
push
or
xorl
scas
dec
nop
pop
clc
out
lds
sub
jp
shlb
pop
inc
and
dec
loopne
sar
jae
and
jbe
xchg
stos
add
lahf
mov
aad
cmp
push
daa
pushf
jge
xor
mov
std
jae
xchg
stos
imull
ljmp
push
mov
aam
addr16
in
xchg
or
mov
insb
test
cs
xchg
dec
ljmp
adc
insl
pminsw
mov
push
sub
pop
in
pslld
sub
adc
negl
fcomps
mov
test
jno
jnp
les
bound
shll
adc
fildll
push
enter
mov
fldt
xchg
add
push
in
scas
jo
sbbl
mov
inc
pop
pop
cwtl
push
add
xchg
stos
cmp
xor
add
add
les
cmp
stc
sbb
das
mov
jg
xchg
and
ljmp
xor
aas
fsubp
mov
jle
push
andl
ds
sub
mov
xchg
mov
inc
xor
pop
movsl
push
cld
in
cmpsl
cwtl
sbb
vmread
in
and
push
cld
dec
xor
lds
out
dec
xchg
fxch
sbb
jle
add
add
insl
stos
inc
sti
mov
add
xchg
add
push
je
cmp
and
stc
or
sarb
mov
aas
jae
pop
hlt
sbb
arpl
in
insb
push
rorl
out
add
xor
iret
clc
in
movsb
and
pop
ljmp
cmp
dec
and
push
add
repz
outsl
in
pop
pop
mov
push
popf
addr16
push
push
adc
xchg
imul
inc
aas
rol
fiadds
mov
and
testb
inc
xchg
xchg
cld
and
sbbl
xor
inc
repnz
xor
pop
push
add
adc
dec
mov
jne
es
hlt
pop
ret
mov
adc
mov
andb
and
add
cltd
std
push
sbb
xchg
push
jae
mov
int3
imul
leave
fldt
or
fs
shrb
pop
leave
sub
es
data16
push
jle
xorb
aad
pop
mov
xor
dec
mov
push
mov
in
insb
fldl
and
xor
mov
pop
nop
fildl
stos
cmpsb
mov
inc
repnz
mov
mov
js
enter
pop
push
and
rolb
js
jno
mov
mov
bound
jmp
adc
push
mov
pushf
popa
mov
mov
enter
cmp
mov
gs
cli
cmc
add
mov
sub
xor
out
fimuls
push
inc
lods
add
xchg
lock
mov
into
ljmp
shll
xchg
das
cli
mov
jp
in
pop
sbb
cmc
int
xchg
sub
int
pop
mov
mov
push
fwait
add
lea
call
xchg
loope
mov
xor
xchg
or
sub
ss
adc
mov
adc
mov
and
enter
xor
les
mov
mov
mov
testb
lcall
std
push
in
aam
test
enter
xor
insb
sbb
lods
scas
arpl
cs
xchg
adc
pop
inc
divl
pop
push
dec
aam
out
jae
mov
icebp
xor
gs
jbe
dec
hlt
and
inc
xor
xchg
mov
loope
push
scas
mov
loopne
dec
out
cmpsb
ja
sub
jno
popf
and
xlat
arpl
stc
cmc
xor
push
aas
pop
repz
pop
fmuls
fcoms
leave
pop
pop
rcrb
loop
jp
push
mov
mov
or
hlt
and
inc
insl
mov
or
mov
dec
imul
cmpsl
movsl
mov
sti
dec
out
out
and
mov
add
jg
repnz
jno
sbb
or
pop
push
push
inc
and
mov
insb
xlat
sub
popf
jne
fs
pop
leave
sbb
push
sub
jnp
pop
out
shlb
stc
test
iret
orw
cmp
push
xor
stc
roll
adc
mov
and
sub
popf
ret
inc
shll
inc
pop
and
mov
xchg
jb
cmpsl
cmc
adc
sub
js
xchg
xor
add
shl
sbb
adc
insl
and
shll
add
call
test
sbb
mull
push
out
xor
roll
or
sbb
enter
or
leave
jne
mov
lcall
nop
cld
mov
xor
mov
into
iret
shl
jmp
int
and
push
adc
sub
das
mov
les
mov
ja
lds
lea
rolb
fildll
mov
lahf
push
cmpsl
add
daa
stos
jno
push
outsb
xchg
xchg
aaa
iret
sbb
sti
mov
lahf
lock
loop
add
pop
mov
xchg
push
cwtl
xor
pushl
testb
xchg
addb
mov
outsl
cltd
jge
cltd
dec
aam
data16
push
jg
clc
mov
dec
shlb
je
aas
push
bound
xchg
xorl
daa
adcl
pusha
movb
sbb
or
lock
fbstp
jmp
xor
outsl
dec
dec
sub
jo
nop
add
mov
out
inc
adc
adc
mov
repnz
add
jnp
or
sbb
inc
push
outsl
std
sub
fcmovnb
mov
fmul
push
das
and
cmp
movsb
or
stos
or
sahf
shrb
outsl
cmp
mov
les
out
out
sub
and
psrlq
movsb
bound
jo
dec
and
addr16
ljmp
stos
pop
cs
cmp
test
pop
inc
daa
or
xchg
push
ret
loope
mov
adc
mov
fmul
out
and
xor
xlat
inc
mov
push
jg
add
lcall
push
or
sub
mov
mov
or
jns
into
enter
loop
push
fs
ljmp
test
out
pop
sar
jp
das
xor
hlt
pop
and
push
mov
and
sbb
aas
ljmp
sub
inc
ljmp
mov
mov
enter
test
inc
int3
es
pushl
sub
lret
rcrb
insb
jbe
jle
pop
mov
gs
lods
cmp
mov
loop,pt
cmpsb
fs
icebp
jge
push
inc
push
mov
filds
inc
and
or
insl
movsl
mov
adc
bound
sbb
jmp
in
inc
outsb
insl
adc
incb
data16
lods
xchg
fidivl
jl
mov
and
or
push
icebp
gs
pushf
shrb
negl
push
mov
enter
jmp
jmp
decl
cltd
inc
and
rcrb
loope
mov
jge
and
test
aad
daa
adc
sbb
fwait
imul
jbe
es
pop
jno
inc
in
mov
cmpsl
call
cs
add
mov
mov
jp
lea
incl
cmp
push
rcrb
lcall
out
sahf
add
xchg
test
xchg
mov
loopne
sahf
lret
ljmp
jmp
and
lret
mov
add
les
xor
cld
mov
pop
xchg
mov
filds
cwtl
aas
insl
out
pusha
cmc
sysexit
popa
jge
in
xor
mov
stos
sub
sub
shrl
cmc
mov
cltd
cwtl
inc
push
xor
enter
mov
aaa
cmp
mov
loope
and
xor
shlb
dec
movsb
or
fwait
push
inc
xlat
in
dec
xchg
xchg
mov
bound
das
pop
mov
cmp
out
test
adc
rcrl
gs
and
mov
inc
test
jno
fxch
dec
mov
sub
fwait
pop
adc
in
sbb
xlat
push
pop
sbb
repnz
jns
adc
lcall
and
cwtl
pop
rcll
pop
test
orb
lods
mov
pop
jns
cli
pop
cmp
push
fnstsw
xlat
adc
mov
push
push
mov
pop
jmp
ficompl
enter
imul
add
and
dec
shrl
fwait
adc
sub
or
inc
adc
sbb
stos
and
mov
pop
in
mov
les
out
js
notl
sbb
popl
or
idivl
shl
cmpsl
testl
shl
mov
jg
add
loope
cli
lds
loop
sarb
in
pop
lock
sub
pop
jno
xor
bswap
add
mov
outsb
je
or
mov
jmp
std
push
xchg
push
pop
adc
int3
jne
jl
scas
leave
daa
ljmp
ss
sbb
adc
dec
int3
lahf
stos
out
sub
xchg
clc
loopne
inc
pop
mov
adc
fiaddl
popf
xchg
or
inc
dec
or
jmp
or
icebp
pop
mov
jp
adc
xchg
insb
and
shrb
jbe
test
add
repz
rorb
repz
pop
pusha
lahf
jmp
loope
xchg
jmp
stc
mov
sbb
xchg
cmp
movsl
add
xor
or
jmp
cmp
xor
cmp
les
outsb
lret
pop
jecxz
mov
xchg
ja
test
cwtl
ds
inc
add
sbb
gs
clc
imul
mov
mov
aas
pop
add
test
repnz
sarl
jecxz
jb
inc
sbb
mov
xor
mov
lods
mov
out
mov
sub
push
sbb
sti
adc
lret
xchg
add
enter
lret
mov
cmpb
das
repnz
inc
scas
popa
in
insb
mov
aas
push
test
mov
jne
popf
mov
push
mov
imul
mov
mov
js
int
push
pushf
dec
fistps
cmp
aad
loop
add
dec
icebp
inc
int
or
lcall
pusha
ja
stc
lock
daa
stos
sarl
and
fnstcw
xorb
fmuls
insl
xor
das
sbb
or
addr16
push
mov
xor
aaa
jo
sbb
insb
cmp
and
pop
ret
mov
fcoml
pop
dec
or
xchg
imul
mov
sarl
inc
fxch
aam
xchg
psubsw
les
push
pop
outsl
push
fidivs
mov
dec
xor
add
stos
xchg
out
ljmp
or
std
sbb
in
dec
dec
push
jp
xchg
push
inc
add
fists
pop
popf
inc
js
int3
mov
xor
enter
xor
aad
inc
sub
dec
iret
fwait
les
fisubrl
lret
movsl
imul
adc
mov
clc
aaa
cmc
js,pt
es
std
dec
fdivp
cli
xor
dec
das
and
add
xchg
mov
jb
mov
xchg
cmpsl
gs
cmp
mov
xchg
mov
and
mov
or
add
das
jecxz
mov
adc
fwait
pop
inc
pop
out
jns
pop
pop
add
es
fst
push
icebp
add
xchg
push
ret
push
int
sti
push
inc
dec
mov
sti
cmp
gs
mov
movsb
and
roll
inc
mov
test
xchg
jno
xchg
lock
mov
add
dec
fdiv
scas
cmpb
clc
dec
daa
xor
jg
xchg
shll
scas
notl
aas
loopne
mov
call
test
mov
mov
aas
addr16
iret
xor
push
cmp
bound
sub
std
jle
mov
pushf
stc
pop
dec
jmp
ret
jno
mov
enter
out
mov
in
pop
mov
push
arpl
mov
sub
mov
adc
insl
lods
cmpsb
cmc
ljmp
xchg
popf
subl
cwtl
pop
inc
ljmp
push
outsb
push
mov
dec
rclb
int
adc
rorb
fidivrs
aas
and
xor
mov
cmpsl
jns
mov
pop
fidivs
cmp
ret
mov
setle
cmpb
inc
add
dec
test
ljmp
lcall
mov
cmc
jns
fdivrl
mov
icebp
dec
lcall
adc
mov
adc
in
fisubrs
clc
fdiv
dec
cltd
lret
mov
mov
sub
popf
popa
sahf
movsb
sbb
popf
int
in
push
push
sub
cmp
fbld
sub
sbb
jmp
rclb
nop
int
push
inc
mov
lret
loopne
aam
jp
mov
push
movsb
sbb
aad
out
lahf
jmp
jl
dec
add
cmp
in
jmp
pop
mov
xchg
mov
push
lods
push
je
sub
out
cmp
xchg
mov
jle
test
xchg
adc
dec
push
jae
pop
popa
ds
add
ret
jo
add
in
stc
xchg
xchg
int
lahf
push
rcr
mov
in
cli
push
adc
in
mov
nop
aad
pop
loopne
shrb
or
andb
jns
jmp
sbb
repnz
jo
repz
cli
mov
fstpl
mov
fcomps
pop
mov
gs
xchg
scas
mov
push
xor
xchg
fwait
adc
and
fldenv
arpl
jae
xor
or
jl
lods
xchg
cmp
cmpsl
rcr
enter
sub
mov
in
idiv
dec
faddl
dec
std
fidivrl
push
jp
jae
imul
dec
and
pop
xchg
test
loope
ds
jp
ret
dec
rclb
jo
loope
mov
lahf
test
repnz
scas
jae
and
sbb
sbb
outsl
sub
cmp
shlb
leave
es
cmpsl
cmp
and
aad
mov
push
xor
mov
in
cmp
inc
jmp
pop
xchg
aas
movb
in
cmpb
js
push
or
push
outsb
pop
and
or
test
cbtw
cli
push
popf
rcl
mov
jne
push
jecxz
cwtl
mov
rcrl
push
aas
clc
loopne
sbb
xchg
rorl
into
aas
int
cld
cltd
repz
aas
mov
push
cs
hlt
push
sarl
dec
add
je
push
into
lret
popa
sub
jl
jle
adc
mov
pop
in
sbb
sti
inc
std
aam
ret
cli
test
push
stos
xor
jge
dec
mov
test
mov
out
and
mov
arpl
and
lcall
fwait
push
cld
adc
es
push
push
mov
pop
fistpll
mov
mov
jg
xchg
movsb
mov
pop
outsb
cmp
gs
or
movl
mov
inc
call
mov
mov
dec
imul
int
fidivl
mov
bound
pop
test
xchg
add
sahf
rorb
cmp
mov
cmp
push
aam
mov
add
fcom
mov
jl
mov
mov
repz
cmp
lea
scas
movsl
test
push
pop
cli
lahf
cs
push
addb
dec
sub
rcrl
or
shll
mov
adc
mov
lds
test
mov
scas
push
push
inc
sub
cmp
hlt
dec
out
ljmp
scas
int3
daa
loope
fstpl
cwtl
les
and
cli
shrl
mov
cli
sahf
and
dec
pop
dec
repz
add
xor
xchg
ret
pop
inc
jno
push
or
icebp
xchg
in
shl
jmp
xchg
dec
cmpsb
sbb
push
push
aam
insl
sti
and
inc
jae
dec
push
dec
pop
lods
jle
or
mov
pusha
jbe
out
nop
sbb
jne
xchg
dec
mov
stos
and
adc
ljmp
daa
imulb
sbb
nop
xchg
dec
rcrb
sub
mov
ret
in
stos
adc
scas
and
fsub
lret
test
adc
popf
cmp
xchg
pop
ffree
cwtl
ret
arpl
andb
pop
adc
ficoml
jns
aad
jmp
cmp
jmp
jmp
sahf
or
cmpsl
test
jnp
aam
mov
fdiv
mov
mov
push
inc
das
sub
notl
rcll
fucomip
sub
pop
loope
adc
sub
movsb
test
scas
pop
or
lcall
push
inc
pop
shl
testb
cwtl
mov
mov
push
das
adc
or
arpl
leave
pop
lahf
mov
leave
xchg
mov
loopne
lock
das
ljmp
xor
fadd
adc
daa
push
in
inc
popf
dec
pop
in
pushf
rorl
or
push
imul
adc
jbe
rcll
fbld
roll
sbb
loope
sbb
aam
cli
leave
jbe
jnp
mov
out
loop
jno
sub
inc
xchg
shlb
cmpsb
xor
cmp
pop
shlb
test
inc
fwait
dec
inc
clc
sub
imul
dec
fldenv
lcall
xchg
aaa
mov
jnp
test
lock
sbb
fists
dec
fisubs
test
sbb
jb
loopne
mov
in
pop
inc
mov
scas
jo
add
out
xchg
jle
xchg
jl
out
pop
mov
mov
mov
jae
pop
fdivrl
test
cld
in
xor
mov
lods
repnz
or
hlt
sbb
cmp
add
sub
push
arpl
mov
test
jmp
pop
sub
mov
lret
sub
xchg
mov
ret
and
cmp
or
call
pop
adc
imul
jge
roll
outsb
xor
dec
xor
add
cmp
sbb
inc
and
adc
sbb
movsl
loopne
mov
push
andl
faddl
and
ja
gs
orl
js
decl
xchg
in
pop
cmp
inc
cltd
lds
adc
sahf
std
dec
repnz
xchg
pop
mov
into
push
loope
lret
mov
cmp
nop
aam
mov
mov
and
stos
and
xchg
inc
pop
outsl
sub
mov
repz
outsl
jo
sub
jecxz
rcr
and
mov
push
cmp
pop
pusha
sub
sub
and
nop
pop
and
lcall
xchg
or
fisubrl
jle
jo
dec
and
xorl
bound
mov
lret
xor
ljmp
sub
daa
push
icebp
insl
out
clc
jne
cmp
daa
jo
ja
cmpsb
push
pusha
dec
jnp
push
xchg
sti
sbb
or
ja
mov
sub
sti
dec
and
push
jp
dec
sbb
mov
xor
mov
mull
das
cmp
movsb
int
shl
adc
call
icebp
in
cmpl
add
push
fistps
call
cmpsb
mov
and
cmp
mov
out
jecxz
sub
or
test
fwait
test
loopne
out
inc
mov
out
aas
cmp
xor
sub
clc
popa
xor
clc
mov
mov
pop
rol
aas
fisubrl
ss
stos
shr
clc
outsl
sbb
fsubl
aam
jnp
rol
scas
icebp
push
pop
mov
iret
push
jo
fucom
push
fldt
jecxz
rorb
pushw
popf
ja
adc
mov
mov
sbb
rclb
lea
and
or
shll
adc
sbb
fistpl
sbb
ficoms
rcrl
imul
cs
iret
mov
sub
xchg
mov
into
repz
xchg
dec
pop
je
mov
test
pop
jl
or
int
outsb
imul
dec
cmpsl
mov
repnz
and
mov
nop
stc
call
je
fstpt
mov
push
mov
cmp
sbb
pushf
cs
lock
stos
dec
cmp
icebp
xchg
in
jb
call
inc
sub
dec
xchg
pop
outsb
push
add
inc
and
add
mov
ret
rorb
arpl
imul
scas
jge
fldt
inc
daa
ds
imul
jae
mov
mov
fwait
pop
sbb
inc
jbe
ret
insl
pop
xchg
xchg
cld
mov
andl
shll
cmp
xor
rolb
sub
adc
mov
scas
mov
pop
outsl
in
lret
cwtl
cli
mov
mov
inc
xor
mov
and
lret
ja
add
std
outsl
cmpsl
fdivs
or
mov
or
sti
push
loop
std
out
inc
into
ret
sahf
insb
push
scas
jl
or
jae
mov
adc
sub
push
add
sub
imul
push
and
insb
xlat
insl
push
push
sub
cmpb
adc
jg
int3
cld
push
lahf
jl
jae
sbb
pop
nop
jnp
or
pop
fwait
and
rolb
xchg
pop
mov
sbb
sbb
jl
push
cmp
clc
xor
jo
fistpll
insb
fnstenv
adc
push
neg
adc
add
scas
cmp
ret
daa
or
cmp
lret
jle
out
cld
pushf
pop
or
outsl
jae
es
cmc
sbb
movsl
mov
sub
dec
lahf
ljmp
pop
push
dec
std
icebp
cmp
jle
in
mov
mov
aad
mov
repz
loopne
imul
add
sbb
lahf
fisubrs
xor
and
stos
mov
dec
mov
mov
test
sub
dec
adc
incl
or
setg
fidivl
subl
cmp
push
in
lock
add
or
inc
mov
pop
rcl
and
dec
int
adc
push
dec
lods
rorb
xor
cmp
jo
lea
add
xor
sahf
sahf
popl
mov
xor
xor
mov
dec
lock
in
ss
aaa
push
jl
mov
orl
sub
call
nop
daa
and
cmc
les
cmp
push
xchg
dec
sbb
inc
mov
loopne
in
es
mov
inc
sub
push
mov
lods
push
subb
jmp
xchg
and
divl
clc
mov
dec
xchg
pop
imull
cmpb
jl
fwait
clc
idivb
inc
jle
je
in
push
int3
fmull
lds
mov
repz
fcmove
pop
xchg
lcall
add
xor
jecxz
rol
std
les
and
data16
movsb
adc
sti
cmp
ret
call
jmp
jbe
add
in
aam
sub
scas
add
shrl
notl
dec
outsl
and
add
lret
push
jg
call
pop
mov
jae
or
aam
aas
fildll
idiv
sub
pop
and
push
movsb
les
into
enter
test
lock
scas
mov
mov
xor
mov
test
add
std
and
repz
lock
int
mov
pop
in
mov
loop
xchg
add
mov
dec
icebp
mov
faddl
jnp
ljmp
js
inc
inc
cmp
into
nop
bound
cmp
lods
leave
add
fcmovne
or
adc
aaa
loop
out
xchg
or
push
sub
or
sub
imul
xor
or
sub
sahf
push
or
test
ja
add
cmp
mov
les
fdivl
jnp
aaa
add
in
outsl
jnp
jae
mov
sub
and
add
jns
fadds
push
lret
pop
fildl
inc
inc
or
out
jl
xor
pop
leave
orl
mov
push
aad
outsb
test
das
neg
into
push
push
jge
filds
pop
sbb
shll
aam
jns
fistpll
push
xor
lods
sbb
pop
inc
dec
mov
mov
jae
xor
cmc
jne
push
dec
pop
add
pop
test
and
js
cmp
das
addr16
outsl
push
xlat
in
push
popf
mov
loopne
enter
or
or
cs
cmp
outsl
data16
pop
pop
mov
inc
fbld
push
pop
jg
lds
xor
xor
and
shll
jb
fxch
setge
fimuls
pop
xchg
or
enter
mov
jbe
or
push
cmp
mov
popf
lods
or
icebp
ret
mov
enter
or
lea
int
popa
icebp
mov
or
inc
dec
lret
hlt
testl
cs
inc
sub
rorl
jae
scas
je
cli
sti
ljmp
std
add
mov
adc
lret
ljmp
push
push
pop
mov
adc
popa
jo
jnp
lahf
orb
pop
movb
subb
cmpb
jmp
xor
addl
adc
loopne
xchg
adc
repz
andl
inc
mov
push
sbb
adc
jne
xor
sbbb
vprotq
xchg
je
mov
mov
xor
shll
mov
xchg
insl
push
pop
inc
lcall
out
sarl
dec
mov
dec
mov
mov
das
enter
mov
or
inc
inc
mov
dec
jae
push
cmp
add
push
adc
mov
jno
xor
leave
sbb
inc
dec
ljmp
and
push
in
adc
adc
popl
in
test
cmc
push
add
dec
in
das
nop
inc
sbb
in
repnz
push
pop
scas
or
mov
push
xchg
es
jns
xor
inc
xchg
and
loope
outsb
out
fidivrl
cmp
fistl
andl
cwtl
lods
mov
sbb
push
inc
dec
insl
pop
jp
outsl
sbb
imul
pop
pop
movsb
fsts
xchg
fcmovnbe
ja
inc
lret
mov
js
lahf
movsb
inc
jl,pn
ss
xchg
add
push
lock
inc
xchg
jbe
loopne
addr16
mov
int
xor
fcmovnu
xchg
test
jecxz
pop
sbb
and
orl
push
or
aad
mov
jo
adc
aam
call
inc
arpl
test
pop
mov
add
aam
add
fldt
sub
sbb
out
cmpl
push
jne
pop
out
mov
mov
jno
fwait
leavew
ret
sar
cs
nop
outsl
fcmovbe
lahf
adc
sub
xchg
mov
mov
sbb
adc
mov
test
jg
sub
jg
adc
test
aaa
push
ds
jbe
aad
xchg
and
icebp
je
push
jb
aad
pop
push
test
sti
roll
dec
mov
subb
hlt
mov
int
xor
or
inc
pop
jecxz
inc
fists
fidivs
add
adcl
xchg
lods
and
mov
lds
pop
out
xor
cmovl
rorl
std
pop
mov
jp
aad
nop
adc
in
xlat
cmp
mov
inc
arpl
xchg
mov
xchg
cmp
jmp
jns
mov
and
stos
or
cltd
test
xchg
inc
mov
ficoml
dec
orb
sub
push
xor
xchg
dec
in
mov
test
repnz
daa
rcl
inc
mov
out
sbb
xchg
aam
push
or
leave
push
ljmp
cmp
ds
decb
icebp
pop
repnz
push
aam
call
jmp
sub
aas
inc
lret
iret
mulb
mov
jae
decl
rolb
rolb
rolb
xchg
mov
dec
sub
and
inc
mov
cmpl
and
sub
or
xor
push
jbe
pop
cmpsb
xchg
out
ljmp
dec
cld
jo
xchg
test
adc
sbb
xchg
cmp
sbb
ficompl
out
lret
fcmove
xor
stc
or
inc
jne
out
mov
pusha
int3
adc
dec
lret
fistl
mov
movsb
or
cmpsb
dec
psrlw
or
push
push
push
call
add
aad
sbb
or
aaa
in
sbb
push
mov
lock
es
sub
cli
sub
dec
daa
mov
aas
stos
ljmp
enter
mov
jo
xchg
mov
dec
sub
inc
push
stc
faddl
pop
xlat
pusha
int3
bound
rcll
xchg
jl
int
lret
je
pop
loopne
enter
into
mov
or
pop
fdivl
cmp
out
push
xchg
repnz
imul
xchg
pop
into
fisttpll
andl
jae
ss
xchg
idivb
pushf
lret
jecxz
adc
adc
bound
dec
cmp
xchg
in
ds
sbb
cltd
test
arpl
pop
scas
es
dec
mov
inc
ret
mov
iret
pop
jg
ret
lret
lods
aad
xor
dec
out
es
lahf
call
push
cld
dec
add
xchg
mov
cmc
mov
jp
jno
xor
sbb
mov
loopne
push
lret
out
push
adc
jb
ret
cmc
loop
sbb
mov
push
inc
jg
xor
inc
xlat
mov
and
outsb
sub
shlb
xchg
je
push
mov
cmp
adc
scas
loopne
adc
inc
xorb
fcomi
imul
and
loope
push
or
dec
sahf
fcomi
xchg
jbe
in
sbb
leave
loope
insl
addr16
pop
ret
filds
push
sub
ret
pop
dec
mov
mov
addr16
mov
pop
mov
pushl
in
fnstenv
adc
add
outsb
xor
fsubrl
push
js
inc
jmp
mov
and
daa
sbb
jo
test
imul
cli
push
pop
sub
push
mulb
pop
sub
aam
and
andb
std
sbb
ds
daa
mov
sbb
or
mov
loopne
inc
loope
mov
dec
lock
or
mov
xorb
sahf
xor
outsl
flds
mov
test
and
pop
dec
add
or
sbb
mov
xor
insb
fimuls
pusha
adc
into
rcrb
xchg
sbb
mov
mov
iret
pop
pushf
and
mov
mov
jmp
fadd
sarb
aad
cmpl
cld
mov
loop
aam
bnd
inc
adc
addr16
test
cmp
stc
jl
push
ja
sub
add
xor
adc
push
aas
jecxz
sarl
push
stos
dec
hlt
dec
ret
ret
mov
xchg
or
loope
scas
pop
mov
iretw
ja
fcompl
sub
sarl
jp
test
adc
push
inc
push
xchg
outsb
or
repz
adc
sub
mov
jnp
pop
dec
pop
cli
mov
jo
mov
lea
mov
push
std
cltd
mov
pop
jbe
aad
dec
adc
lock
sub
sub
inc
imul
insb
ret
xor
mov
mov
out
adc
lock
cmc
sahf
jecxz
enter
adc
into
push
adc
and
jno
jecxz
ret
or
js
btc
notb
cmp
jmp
cs
cwtl
inc
je
das
inc
jb
mov
jb
jecxz
lock
mov
xor
dec
out
and
daa
mov
adc
or
mov
and
xchg
fmulp
fdivrs
and
jno
mov
fidivs
cmp
insb
inc
popl
push
lret
fcoml
jle
test
pop
adc
shrl
or
ja
lock
mov
xchg
int
dec
mov
fdivr
mov
ret
dec
mov
xchg
daa
lahf
int3
xor
ds
add
inc
cmp
cs
jae
add
jnp
test
out
pop
mov
mov
shll
hlt
cmc
lods
into
pop
jne
push
sub
pop
jp
and
cld
xchg
inc
jge
push
imul
ja
lcall
adc
mov
mov
cmpsb
jbe
jg
test
dec
add
movsl
fsubr
xor
negb
and
clc
sub
loop
pusha
shl
xchg
mov
popf
push
mov
jno
jns
jp
movsb
cld
in
cs
xchg
pop
push
ljmp
lret
inc
test
pop
and
add
bound
repz
repz
and
and
pop
pop
stc
cmp
pop
inc
out
out
ret
sub
or
mov
repz
ljmp
inc
dec
mov
fisttpl
mov
sub
fwait
neg
add
es
shll
out
xchg
mov
aas
inc
das
push
movsl
fs
repnz
push
pop
in
pop
jnp
cmp
cs
jne
loope
mov
imul
mov
jl
aam
sub
aam
or
sub
dec
cmp
fmull
shlb
insb
push
loopne
jmp
pop
std
cwtl
in
push
sbb
xchg
and
mov
mov
adc
fs
xchg
lret
mov
repnz
xchg
fcomip
jmp
sub
pusha
lahf
cmp
int
in
cltd
fisttpll
mov
mov
push
jnp
shrl
imulb
hlt
pop
addr16
cmpsl
push
fstl
lods
jb
mov
imul
lock
lcall
sti
mov
cwtl
outsb
cltd
int
sbb
sub
mov
lcall
out
xlat
sub
or
cwtl
dec
jnp
cmp
out
xchg
out
ljmp
or
arpl
xor
cmpsl
outsl
mov
pop
mov
gs
xchg
rolb
adc
out
hlt
ret
fcomps
mov
lods
outsb
aaa
push
push
test
xor
push
inc
aas
cmpsl
or
add
outsl
cmp
cmpsl
cmp
dec
psrlq
sub
cmc
sub
sbb
enter
sbb
sub
out
push
loopne
adc
xor
into
scas
mov
add
sub
test
ja
mov
stos
mov
jns
shrb
test
xor
xor
pop
pop
or
sbb
or
lahf
inc
jno
in
inc
jp
and
sub
mov
dec
xchg
jge,pn
xor
or
mov
xchg
repz
mov
xchg
mov
mov
movsb
mov
int
mov
push
movsb
xor
inc
sub
jge
mov
fcmove
pushl
mov
and
sarl
in
loope
into
push
or
out
sub
or
mov
rorl
or
js
mov
inc
iret
out
pop
and
adc
out
sahf
pop
stc
pop
addl
mov
test
pop
mov
jae
mov
pop
dec
dec
in
mov
xor
loopnew
in
call
push
xlat
aaa
adc
fadds
fidivrl
add
dec
scas
sub
out
cld
repz
cmp
push
xchg
int3
out
dec
imull
aam
mov
dec
sbb
sti
mulb
sbb
cmp
lret
jae
fcomps
lret
xchg
orl
fldenv
adc
movsl
aas
fxam
fbstp
pop
hlt
jae
repz
add
ljmp
or
les
ds
ja
or
mov
add
bound
in
out
pop
jns
or
sub
test
mov
data16
dec
sbb
mov
test
cmpsb
cmc
in
rcrl
ret
outsb
xchg
insb
jno
lcall
mov
iret
enter
adc
fsubp
cwtl
ja
adc
xchg
mov
mov
mov
pop
mov
divl
lahf
les
xlat
add
push
aam
fwait
jg
das
sarl
cmpsb
jbe
in
gs
mov
cmpsl
je
lret
xchg
cmp
cmpsb
mov
shr
sarl
int
jge
xchg
jp
je
aam
xor
insl
jns
imul
adc
dec
lea
sbb
js
sahf
xlat
fsts
jmp
cmp
adc
lret
outsb
outsb
mov
imul
mov
dec
jge
push
dec
fisubrs
pop
repz
push
fiadds
push
data16
imul
mov
add
jns
jl
mov
ss
xor
loop
jp
je
pop
push
xor
push
pop
sub
adc
push
into
adc
loope
mov
xchg
jns
stos
jns
cmpsl
imul
insb
leave
xchg
rcl
out
mov
adc
das
or
daa
sub
les
stc
hlt
mov
out
xchg
and
in
or
xchg
call
jp
add
cmc
gs
int
jno
lea
lahf
mov
pop
seta
inc
les
sub
mov
popa
xor
and
jl
int3
icebp
push
cmp
or
push
paddusb
insb
push
pusha
mov
hlt
push
loope
lods
sti
in
aaa
dec
repz
sub
lret
dec
sub
into
fldlg2
fnstsw
stc
lahf
sub
cmc
out
inc
lods
mov
mov
jne
mov
in
or
mov
and
fimuls
lea
xchg
dec
stc
scas
pop
std
int
cmpl
stc
in
pop
scas
sub
xchg
pop
movsb
sbb
push
xchg
or
xchg
lds
sbb
sub
ret
movsb
mov
les
push
or
mov
lods
mov
fdiv
ret
mov
aam
js
push
ds
clc
xor
cmp
lea
scas
loop
pop
rol
cmp
sarl
lcall
pop
xor
add
shll
pushf
fidivl
movsl
adc
xchg
test
and
sbb
ja
pushf
out
or
imul
push
iret
or
aaa
mov
or
mov
aas
cmp
mov
jns
out
cmp
pusha
sti
daa
pop
rorl
inc
out
popf
jmp
xor
outsl
push
mov
outsl
arpl
jl
push
mov
mov
imul
fstl
adc
add
gs
adc
pop
addr16
or
lods
or
jbe
inc
push
mov
imul
fisubrl
std
leave
jg
or
outsb
cwtl
ret
xorl
push
dec
pop
out
loope
xor
xchg
clc
hlt
enter
bswap
push
adc
shrl
inc
movsb
test
and
jo
sub
pop
shlb
out
cmp
jae
push
ds
cmp
outsl
sub
stc
inc
js
scas
push
insb
jbe
inc
jno
gs
jl
and
jp
fs
jl
ja
ret
cmpsb
mov
inc
mov
xchg
jb
xor
popf
clc
inc
nop
xor
mov
sub
les
or
ret
mov
cwtl
push
pop
adc
sub
and
in
mov
imul
and
sbb
mov
xor
sub
cld
sub
sbb
add
addr16
add
cli
shrl
hlt
push
dec
inc
ret
test
dec
mov
jge
loop
jmp
xor
and
push
addr16
mov
mov
inc
sbb
sbb
push
push
jg
mov
dec
or
mov
xchg
out
rcll
jge
or
imul
rcll
shll
mov
add
push
sbb
sahf
mov
pop
imul
repnz
fprem
std
pop
inc
aam
xchg
mov
addr16
mov
push
cmp
bound
cwtl
lret
push
sub
outsl
mov
cltd
jp
cwtd
into
ret
enter
mov
xorl
cmp
imul
inc
lret
sub
adc
xchg
mov
jns
aam
cmp
mov
pop
push
jge
push
cmpsl
and
cwtl
addr16
test
subl
mov
aad
jo
sti
mov
sub
cmp
mov
mov
scas
mov
imul
cmp
aas
xchg
jns
push
sbb
push
pop
shl
push
testb
jl
jae
inc
inc
repz
insb
adc
jo
lcall
sbb
je
fistps
les
jo
fwait
jb
and
outsl
add
inc
mov
mov
fcoml
insl
loop
frstor
pop
stos
sub
mov
xor
cld
loopne
cmp
adc
es
sarl
out
jae
or
push
out
xchg
pop
clc
xor
out
and
cmp
testl
enter
movsb
loope
subl
push
out
inc
push
int3
test
xchg
adc
testb
fisttpll
cmp
or
fimull
mov
push
or
sub
repz
andb
push
sub
stc
sar
cwtl
loop
lret
push
mov
sbb
lret
in
mov
cmp
das
ss
add
or
sub
xchg
dec
jp
imul
fimuls
in
sbb
xchg
xchg
aaa
jmp
rol
pop
add
adcl
pop
mov
xlat
cltd
cs
and
xchg
insb
inc
add
push
sub
out
fucomip
sar
cmp
fnstsw
test
xchg
shlb
xchg
bound
shrb
cmpsb
jle
pop
stos
cmc
fwait
rcr
mov
jbe
mov
jge
inc
je
xchg
call
gs
bound
out
and
aad
adc
add
push
mov
mov
push
ret
jp
cld
mov
mov
loope
lea
cmp
movb
dec
mov
push
out
mov
loop
mov
pop
fabs
sbb
in
dec
xchg
repz
sub
add
jne
outsl
sub
or
push
pop
and
repnz
push
mov
pop
push
shl
inc
lcall
mov
sbbb
xchg
sub
and
imul
jmp
pop
dec
mov
push
addr16
aaa
lods
cmpsb
jae
mov
sub
jmp
or
or
or
cltd
xchg
xor
mov
inc
int
aaa
mov
ds
adc
jge
test
mov
push
inc
inc
pop
bound
cmc
dec
ds
loopne
sarb
add
les
loope
pushf
mov
pusha
daa
icebp
jmp
jbe
xchg
mov
call
ds
ja
cwtl
mov
and
xor
xchg
cmpxchg
mov
sub
xor
outsb
ret
xchg
icebp
mov
shrl
push
xchg
mov
js
outsl
subb
ret
shrb
sbbl
bound
fcmovb
test
and
dec
cmp
or
mov
dec
and
mov
fstpl
ss
dec
lods
lret
jnp
ljmp
loopne
icebp
shrb
pusha
inc
push
loop
ljmp
arpl
testl
movsl
loop
in
sbb
and
adc
cmp
cmp
sbb
shll
fsubs
aas
fldl
lds
jae
or
jae
stos
arpl
sub
mov
pop
fnstenv
aaa
lahf
jg
jl
xor
mov
and
push
test
stos
xchg
addr16
push
add
shlb
mov
mov
inc
mov
outsl
mov
pop
jecxz
or
mov
cli
aas
lds
bound
rorl
pop
jmp
dec
fiaddl
repnz
xchg
je
insb
dec
fs
cs
cltd
idivb
pop
jns
mov
lahf
push
cmp
inc
das
xor
popf
inc
adc
js
call
and
sarl
pop
loopne
jo
dec
ljmp
aas
xor
out
stc
fdivrs
call
arpl
cwtl
lea
push
xor
or
ds
cmp
popa
push
inc
add
jg
sub
sbb
mov
lahf
sahf
fistpl
enter
adc
inc
sbb
popf
testl
hlt
popa
leave
mov
in
adc
int3
scas
adc
sub
xchg
scas
pop
in
mov
repnz
mov
repnz
ret
movsb
inc
or
add
inc
and
jge
outsl
daa
mov
test
adc
icebp
bound
sti
out
lods
leave
insl
jle
stc
ja
inc
stos
xor
jae
roll
jno
xchg
in
xor
ja
repz
xchg
push
mov
dec
push
jae
sub
cmp
cmpsb
or
sbb
mov
mov
lret
rol
lods
inc
arpl
fstpt
repnz
gs
subb
xor
add
test
pop
rorl
xor
frstor
stc
in
jmp
pop
mov
inc
sub
push
adc
popf
jle
xor
cmp
inc
push
pop
xor
loop
leave
cwtl
jmp
pop
adcl
mov
sub
xchg
scas
test
sbb
sbb
cmpsb
jle
cs
or
sbb
cld
fucom
loopne
test
rcrl
push
enter
arpl
sub
dec
dec
sbb
add
adc
jle
inc
push
aad
xchg
aas
xor
daa
addr16
inc
cmpsl
lahf
hlt
lahf
fildl
outsb
jmp
fstps
sbb
mov
add
push
sbb
xor
and
pop
jbe
pushf
sub
mov
fstl
mov
push
push
lcall
or
jle
fdivs
in
imulb
sbb
enter
lea
jmp
icebp
call
sbb
mov
xor
mov
push
push
mov
idiv
out
sarl
divl
dec
mov
popa
je
mov
inc
push
and
or
sbb
cmpsb
push
jae
int3
inc
push
icebp
out
popf
pop
clc
rcll
dec
subl
push
push
out
jge
call
int3
ret
rcll
mov
push
sbb
push
and
movb
cmpsb
cmp
xchg
dec
notb
mov
push
sub
inc
mov
addl
xorl
lock
movsb
xchg
cli
mov
add
jae
movsb
sub
out
and
cmpsb
adc
inc
fsts
cs
mov
into
mov
xchg
sbb
mov
xor
xchg
sub
popl
push
icebp
sub
data16
leave
into
shrb
mov
xchg
pop
jg
push
iret
movsl
xor
mov
xchg
in
pop
sbb
push
or
out
ja
cmc
and
jno
cmp
mov
or
lods
idiv
enter
data16
cmp
fwait
sub
pushl
push
sub
stc
or
cld
push
xorb
lcall
mov
cmp
pop
testl
inc
sahf
sub
mov
int
mov
mov
jae
push
dec
stc
insb
sbb
fmull
jmp
cwtl
pop
insl
dec
fidivrs
and
xchg
fidivl
idivl
jle
js
ret
cwtl
pop
repnz
cmp
mov
jae
inc
jge
push
fwait
ret
rolb
pusha
add
nop
iret
add
sahf
stos
ja
lock
mov
mov
sbb
hlt
ljmp
lahf
in
or
clc
pop
les
rcrl
cmp
cs
pop
sti
loope
inc
push
pop
cmp
hlt
or
test
pop
loope
int
insl
test
xor
int
pop
es
lret
dec
aad
ljmp
imul
pop
repnz
lcall
rcll
enter
fwait
test
jne
mov
scas
rolb
mov
stc
push
cmp
es
cmpsl
add
fcmovnb
or
outsb
or
cmp
xchg
dec
push
dec
cmc
hlt
dec
insb
repnz
adc
jmp
or
call
push
sbb
sub
popf
cmp
cld
in
lods
adc
bound
mov
mov
cwtl
sub
arpl
mov
dec
mul
andl
jle
pop
push
mov
or
rcll
xchg
imul
cmpsb
cmp
stc
loope
jmp
sub
jp
inc
mov
jg
mov
adc
sarb
data16
dec
mov
lds
int
add
cmp
in
xlat
loope
jmp
dec
dec
lahf
iret
xorl
xchg
or
fldcw
and
mov
xchg
das
sti
lcall
inc
pushf
mov
jmp
jle
testl
negb
or
sarl
mov
xchg
or
das
loope
mov
xor
in
jmp
test
dec
mov
add
mov
dec
xor
pop
push
insb
out
cs
add
xor
mov
insb
cmpsl
int
mov
sub
data16
jns
stos
cmp
jmp
lods
addr16
jo
inc
movsl
mov
mov
adc
into
push
iret
xchg
cmc
inc
sbbl
lret
or
xor
loopne
popa
data16
rcrl
lock
call
jnp
sar
mov
loopne
stc
lods
inc
xchg
flds
pop
add
out
dec
pop
jp
pop
outsl
xor
mov
inc
fcomps
push
dec
cmc
xor
pavgw
aad
pushf
into
sub
pop
jo
ss
shrb
dec
mov
sahf
dec
or
cmp
mov
xchg
out
mov
mov
mov
fiadds
or
lret
jecxz
jnp
jmp
insl
out
iret
or
scas
mov
loopne
xor
data16
pop
pop
cmpsl
mov
test
xchg
mov
pop
pop
pusha
das
jle
insl
stos
out
inc
lea
xchg
iret
fisttpl
cmp
xchg
jle
push
into
jle
push
xlat
push
lret
fs
adc
cmp
adc
inc
test
out
sub
fsubl
cmc
jne
repnz
das
xchg
mov
dec
daa
sub
leave
add
or
mov
sbb
loopne
push
imul
xor
pop
fisubrl
jp
sbb
fsubl
pop
into
mov
or
jmp
xlat
push
dec
ss
jnp
iret
cmp
divb
jl
ljmp
and
fwait
les
dec
jno
xchg
icebp
stos
stos
mov
ret
stos
fldl
test
shll
mov
mov
scas
jmp
jo
add
and
shlb
add
push
testl
mov
test
lea
adc
jb
jecxz
sbb
mov
ret
das
dec
in
js
lock
dec
mov
inc
out
aaa
dec
rcl
jge
std
int
jge
repz
sti
add
js
jg
add
xchg
mov
scas
sbb
sbb
ficoms
mov
dec
dec
sub
sarl
pop
mov
mov
mov
insb
lret
lds
mov
pop
mov
jae
fidivrl
dec
out
xor
leave
call
out
call
call
dec
idiv
pop
push
mov
push
ss
hlt
popf
push
in
xlat
fwait
ljmp
outsb
mov
jae,pt
mov
das
dec
xchg
sbb
or
adc
mov
jle
mov
or
adc
test
mov
insb
stc
push
sub
jg
mov
ret
negb
imul
mov
out
clc
sbb
fnstcw
sub
push
pop
and
lds
test
pusha
push
int3
in
add
in
cmp
xchg
inc
insb
sbb
push
sbb
mov
jecxz
push
jnp
js
xor
and
insb
lret
cli
jl
insl
push
sbb
cmp
lea
addr16
adc
stos
sbb
pop
nop
cmpb
pop
sub
cmpsb
test
data16
bound
adc
sti
mov
pop
sbb
sbb
xchg
mov
and
mov
lcall
and
jmp
dec
sarb
or
jmp
ret
pop
leave
popf
or
iret
push
sub
mov
mov
adc
xchg
movsb
fsubrs
adc
dec
and
dec
mov
push
aas
lret
fcmovnbe
out
stos
sbb
sahf
and
sbb
inc
cmp
xor
push
les
mov
js
ss
push
js
mov
pop
cwtl
addr16
ret
vpunpckhdq
hlt
mov
outsl
jg
cmpsl
hlt
test
dec
sub
mov
xor
xor
adc
jae
sub
pop
inc
in
jmp
es
xor
jge
jle
xchg
dec
sbb
inc
jb
jns
pusha
cmp
aas
test
inc
mov
fidivl
out
lock
je
test
add
aas
mov
and
fldenv
icebp
les
dec
aam
aaa
jmp
jecxz
imul
cmp
mov
lock
fcmove
inc
popf
pop
xchg
dec
cmc
mov
push
xlat
mov
int3
shll
leave
not
lcall
mov
out
lods
cs
out
jmp
gs
movsb
outsb
movsl
cmp
insl
sub
push
int3
mov
cwtl
push
iret
ret
add
pop
or
dec
test
lods
push
mov
xor
and
cwtl
mov
fnstenv
lock
mov
fs
xor
adc
cld
lret
and
imul
ficoml
or
xchg
cmp
js
frstor
es
fbld
xlat
xor
jg
test
push
xor
repnz
mov
stos
jmp
int3
jge
push
xchg
add
fs
push
mov
mov
in
pop
and
dec
ljmp
and
pusha
and
lods
mov
rcrl
hlt
mov
push
cmp
gs
dec
in
sbb
jne
aad
xlat
xchg
push
rolb
sbb
test
fiadds
shlb
or
push
sub
inc
jo
xchg
outsl
sbb
movl
hlt
repnz
bound
enter
pushf
or
repnz
mov
imul
fildll
lds
jl
adc
or
sbb
inc
jecxz
mov
movsl
jno
sbb
addr16
jmp
dec
aaa
std
outsl
cli
insl
mov
out
or
mov
push
repnz
fstpl
mov
es
shl
sbb
adc
insb
cmp
and
int
mov
bound
mov
sahf
add
adcb
jae
clc
sti
mov
adc
pop
push
dec
aad
push
sahf
enter
sub
ljmp
xor
cmp
jnp
stc
vpmacswd
dec
movsb
mov
mov
nop
movsl
or
jnp
sub
add
dec
push
sbb
mov
into
repz
or
stos
les
cmpb
dec
gs
mull
pop
mov
xchg
cltd
pop
cs
sub
jae
mov
out
lods
data16
fwait
and
mov
xchg
xchg
pusha
nop
mov
stc
sub
popa
outsl
bound
inc
jne
push
xchg
in
fchs
lds
ret
fisubrl
dec
sti
pop
jge
cmp
scas
stc
xor
jl
push
sahf
in
xchg
fsubs
cmp
push
inc
mov
push
mov
popa
cld
xchg
leave
lods
mov
mov
adc
sbb
clc
cli
sbb
dec
dec
decl
test
and
aas
jl
jae
js
out
or
dec
add
jns
fwait
sub
jne
loop
jle
ds
jl
inc
mov
sub
jl
outsl
pop
sub
dec
insl
popf
bound
mov
test
stc
or
bound
rcrl
fdivrp
repz
cmp
sub
mov
and
xchg
jmp
shll
mov
jle
adc
push
jne
int
hlt
pop
insb
push
dec
or
in
insb
stos
arpl
jb
lahf
cli
bound
push
push
sub
jno
push
iret
addr16
cmpb
shrl
mov
aas
fstps
mov
add
mulps
ret
xor
enter
pop
lods
adc
gs
push
dec
sbb
sbb
cmc
stc
lds
push
icebp
add
imul
lods
jecxz
cld
imul
mov
xor
orb
bound
lahf
iret
cmpsb
out
pop
mov
in
inc
test
dec
sbb
inc
arpl
mov
int
sub
das
roll
ja
aam
imul
pushf
cmc
dec
jbe
scas
jle
ja
nop
loope
or
sbb
sub
add
in
in
lea
shrb
pop
call
lea
add
es
cmp
fcmovne
or
or
mov
jb
lds
outsl
or
iret
std
adc
inc
mov
push
push
imul
inc
mov
lcall
dec
or
orb
ds
and
inc
sub
and
mov
adc
cmp
mov
bound
inc
jp
ret
aad
pop
push
cmp
adc
xor
dec
xchg
mov
hlt
jmp
xchg
fcmovnb
call
or
int
int3
mov
push
imull
adc
test
out
faddl
cmp
xlat
sarl
in
mov
mov
jbe
andb
repnz
xchg
adc
scas
sub
addr16
popa
mov
ljmp
das
and
pop
sahf
sub
mov
fdivrl
adcb
nop
push
test
add
mov
or
push
mov
lea
add
rclb
rorl
sub
ret
mov
mov
mov
mov
prefetch
fsts
mov
sub
shr
in
adc
xchg
fcoml
movsb
add
daa
scas
std
jle
sbb
jmp
sarl
xchg
fldt
push
movsl
mov
cmp
jnp
jle
jae
icebp
add
and
mov
nop
pop
arpl
push
dec
scas
test
lss
jg
arpl
gs
sbb
je
mov
pop
hlt
sub
or
sbb
mov
pop
enter
xor
pop
scas
popf
aas
aas
aam
int
add
imul
mov
xchg
popf
add
fs
pop
sub
mov
mull
popf
cld
or
fisubs
cld
sbb
jbe
mov
scas
mov
aaa
xchg
push
sbbl
lcall
inc
pop
cmp
ret
int3
inc
rorl
push
outsb
test
jne
adc
fcoms
das
jecxz
rorb
loope
mov
xor
imul
mov
jns
or
xchg
mov
jno
lds
jne
stos
xchg
dec
and
lods
data16
rcrl
push
pop
mov
aad
mov
cmp
pop
lea
arpl
xchg
aam
stc
cmp
lahf
clc
iret
enter
xchg
xchg
adc
outsb
inc
xchg
xchg
scas
cld
popf
inc
xlat
es
es
out
mov
testb
mov
and
xchg
jbe
push
mov
and
cli
mov
lret
mov
stos
xor
stc
jns
pusha
adc
cmp
or
fsubr
daa
push
cmpsl
pop
cmp
fnstenv
dec
mov
jge
popf
out
loop
addr16
ljmp
test
dec
in
xor
dec
mov
mov
and
or
mov
out
int3
je
dec
pop
call
adc
nop
sbb
out
imul
or
rdpmc
punpckhwd
inc
jae
mov
icebp
incl
in
dec
xchg
cmc
push
jno
mov
test
pop
cmp
mov
insl
jno
mov
xchg
out
and
sbb
xchg
popf
sbb
xor
nop
sub
pushf
sbb
cmp
loop
fucomi
push
pop
jne
jle
cwtl
mov
add
cs
dec
xor
jne
push
pushf
dec
xlat
fisttps
sbbb
jns
lods
leave
and
adc
mov
xor
shrb
add
idivb
mov
aam
mov
jne
into
inc
xor
xchg
ret
xchg
and
int3
xchg
out
gs
mov
sti
inc
xor
xchg
cmp
xchg
aad
icebp
jle
jecxz
push
cmpsl
icebp
je
rcll
jbe
repz
inc
xchg
xor
sub
lret
dec
xchg
cmp
push
mov
sahf
popf
xchg
ja
pop
jge
pusha
test
jae
ds
mov
lods
xchg
daa
mov
fnstcw
or
aas
mov
push
or
mov
mov
jno
stos
lods
fincstp
lret
icebp
pop
and
out
test
and
pop
adc
fsub
fldt
aas
mov
jnp
push
outsb
loope
insb
mov
aad
mov
mov
jne
mov
mov
cmp
sbb
dec
ret
jge
xchg
mov
js
stos
imul
lahf
movsb
idiv
js
xchg
xor
lea
pop
mov
mov
pop
cmp
gs
cmp
lock
leave
dec
mov
mov
mov
mov
rcrb
mov
out
xchg
mov
mov
or
push
hlt
lods
stos
inc
mov
stc
pop
es
dec
mov
mov
sub
xchg
outsb
pop
push
adc
add
insb
lahf
jns
sar
xchg
pop
nop
pop
cld
push
push
int
repz
into
mov
loopne
movb
mov
in
or
xchg
mov
inc
fstpl
fwait
popa
aas
arpl
ja
mov
hlt
jns
mov
cltd
pop
pop
pushf
pop
pop
mov
and
xor
xor
xchg
sbbl
inc
imul
mov
mov
sbb
call
lret
jo
pop
mov
xor
rorl
pop
fsubrs
xor
in
push
rcll
push
jle
mov
jo
or
sub
adc
mov
adc
push
xlat
lcall
jl
leave
mov
rorl
testb
and
pop
sbb
pop
fs
out
and
rcrb
push
xchg
jb
cmp
stc
ljmp
or
xor
testl
mov
mov
mov
mov
dec
mov
adc
icebp
into
pop
pushf
lds
cltd
rol
movl
inc
shlb
filds
push
je
or
adc
add
cmp
cld
push
les
mov
mov
invd
cmc
cmpsb
js
mov
xchg
push
imul
std
or
adc
call
or
xchg
outsl
xchg
mov
sbb
imul
outsb
stos
shll
cmp
je
int3
fisubl
mov
ss
cmp
addr16
arpl
adc
test
or
addl
jp
jge
cmp
into
or
aaa
pop
adc
loopne
les
xor
xor
jle
mov
test
jae
mov
frndint
lcall
jns
je
xchg
inc
sbb
repnz
bound
out
adc
int
mov
in
dec
add
fstpt
popf
loop
pop
jge
push
aaa
imul
insb
ror
ds
and
int3
fildl
mov
ljmp
mov
sarl
jno
daa
fstps
cmp
mov
mov
sbb
scas
mov
push
outsl
ja
notl
adc
cli
sbb
out
scas
cli
mov
stc
testb
mov
cmp
xchg
in
push
jmp
dec
dec
cmp
sbb
and
insb
sub
jb
sub
adc
fs
lods
call
scas
push
sbb
cmp
push
pusha
mov
daa
hlt
out
or
jae
negb
clc
sti
outsb
insb
ds
daa
fwait
inc
imul
subb
adc
lcall
xchg
adc
pop
xor
fs
cmp
xor
cmp
icebp
and
xor
aad
push
inc
stc
imul
add
out
cmp
adc
scas
dec
and
pop
std
or
push
or
mov
and
ret
cmc
adc
cli
pop
sub
maskmovq
mull
jns
add
sub
call
xchg
dec
sahf
and
xchg
rolb
jmp
lret
cmp
lods
out
into
shl
mov
cltd
sbb
xor
int
dec
sbbb
cli
sbb
xchg
xor
inc
cmp
ret
sahf
mov
ljmp
pop
lea
pop
rcrl
pop
stos
or
inc
push
sbb
xchg
pop
popf
insl
movsb
mov
sub
int
lea
or
pop
inc
add
xchg
jge
mov
dec
mov
jge
mov
lea
push
jl
sub
ljmp
mov
leave
or
mov
int3
mov
jge
mull
dec
das
mov
ja
mov
das
std
icebp
add
pop
push
inc
cli
cmp
les
xchg
add
cwtl
mov
jo
and
push
xor
and
lret
mov
bound
mov
pop
inc
push
mov
adc
jbe
enter
cli
pop
push
lret
test
fildll
in
out
jnp
xchg
cmpsb
mov
jge
dec
mov
jle
add
int3
int3
fnstsw
repnz
repnz
pop
lods
int
lret
add
ror
xchg
clc
mov
push
je
loop
outsb
xchg
mov
mov
in
fwait
rorl
mov
or
lods
jl
fistpll
jmp
mov
inc
mov
das
sti
cs
mov
fdivp
ret
daa
movl
pop
pop
sahf
and
adc
lahf
xor
xor
cli
testb
fdivs
repnz
roll
sahf
adc
rcrb
incl
push
imul
repnz
outsb
out
inc
xor
sub
mov
jge
push
cwtl
loopne
push
cli
inc
mov
or
adc
or
xchg
fstpl
lock
sub
pop
jne
icebp
pop
dec
xchg
lds
rorb
pop
xlat
cmc
cli
adc
sti
and
sbb
orl
jnp
dec
xchg
push
pop
jge
jnp
xor
ds
ret
lods
inc
test
dec
sbb
out
xor
pop
push
sub
loop
pop
sbb
in
jb
push
sub
clc
inc
out
pop
popf
movsl
push
lahf
jl
iret
mov
mov
stc
jp
jmp
arpl
std
push
repz
push
icebp
subb
sbb
subb
xor
cmpsb
leave
lods
or
jns
in
pop
imul
dec
jae
iret
les
mov
sbb
shl
or
dec
gs
cmp
cli
dec
inc
or
fiadds
sub
sti
mov
test
stos
push
and
push
mov
fmul
stos
mov
into
push
scas
insl
xchg
xchg
lds
shll
mov
ss
enter
mov
loop
push
xchg
pop
mov
push
or
xor
fidivrs
vmovhpd
jl
fwait
addr16
sub
pop
in
mov
push
int3
imul
jb
fnstsw
and
inc
repz
lds
dec
dec
xchg
inc
out
sbb
shrl
in
jmp
mov
pop
mov
stos
sub
xchg
mov
cld
mov
leave
cmpsb
fsubs
cmpsl
mov
sbb
testl
dec
xor
sub
int3
adc
fcos
push
out
insl
aam
sti
or
jle
sbb
inc
jp
push
mov
mov
jle
sbb
mov
push
cwtl
in
and
cmp
and
int3
cli
sub
popa
push
neg
icebp
cmp
cmpsb
insl
jne
std
sub
mov
out
pusha
xchg
adc
fcoms
mov
dec
test
xchg
xchg
outsb
jno
negb
cmpsb
dec
out
xor
xchg
adc
xor
or
xor
dec
out
sub
outsb
and
pop
lret
adc
add
ja
int
inc
fisttpll
mov
and
mov
stc
xor
adc
jge
sub
lret
andl
bound
lock
rorb
negl
iret
icebp
mov
cmp
pop
es
arpl
and
and
push
cmpsl
inc
push
push
stos
mov
push
aad
mov
add
addr16
test
call
mov
repnz
lods
bnd
add
popf
cmp
mov
insl
inc
mov
fwait
pop
call
scas
mov
pusha
push
sub
fimull
or
mov
inc
pop
into
mov
sub
lds
or
sub
dec
call
imul
ds
adc
push
in
mov
insl
fwait
call
and
push
subb
mov
testb
xor
add
les
cltd
dec
ds
lret
sub
ja
fs
xor
mov
xor
sub
addl
stos
das
jb
cs
cmp
mov
pusha
jae
jne
leave
pop
loopne
lds
sbb
test
insb
adc
je
sarb
sub
and
mov
pop
call
orl
and
das
in
mov
sbb
jmp
jae
mov
xchg
int
shlb
stos
lods
pop
filds
push
repnz
jae
imul
mov
imul
ret
div
mov
adc
adc
pusha
fsub
in
xor
outsl
ja
lods
inc
aas
lea
sti
lret
pushf
sbb
mov
sub
or
xor
xchg
jg
ret
es
rcrb
xchg
nop
and
sti
sub
fs
jne
xor
in
inc
cmp
and
lcall
push
repz
outsb
push
inc
jle
aaa
out
in
mov
int
pop
testb
pop
dec
inc
inc
push
loope
dec
or
icebp
es
into
sti
jns
xchg
xchg
dec
dec
lock
pop
out
xchg
mov
mov
and
mov
mov
lahf
ret
mov
sub
cmp
test
fcmovne
pop
sub
pop
cltd
sbb
fwait
inc
sbb
cmc
push
cmc
cmp
sub
pop
lret
rcl
add
movsl
inc
movsb
mov
sub
ds
lods
out
xor
lret
sahf
dec
mov
int3
pop
sbbl
push
in
xor
inc
pop
popf
inc
lods
inc
pop
shrb
or
aaa
mov
hlt
add
or
loop
fisubrl
jno
in
xchg
add
push
jnp
out
sub
loope
bound
das
repz
imul
inc
fwait
adc
aam
xchg
xor
sti
aam
and
out
je
pop
js
inc
cmp
cli
lock
sbb
stos
jns
push
daa
loopne
lock
push
dec
jae
jg
out
push
xchg
cmpsl
inc
std
mov
xchg
inc
xchg
xchg
and
pop
mov
add
sbb
adc
pop
sbb
imul
lahf
inc
fistps
pop
lds
divb
std
adc
faddl
stos
xchg
push
add
push
out
test
push
pop
mov
cmpsl
outsl
test
ja
test
and
sarb
push
movsb
loopne
ja
and
jge
int3
ljmp
adc
sub
pushl
xor
push
test
and
sub
cmp
scas
movsl
mov
mov
out
pop
cmp
push
daa
inc
or
mov
xchg
cmp
lods
lds
jg
jns
mov
sarb
pop
sub
bound
pop
cs
inc
and
mov
ret
aad
loope
pop
das
and
out
iret
dec
jg
mov
imul
or
call
mov
inc
lret
std
add
mov
movsb
sub
dec
cwtl
lahf
and
jo
xchg
xchg
jnp
lods
push
dec
repnz
pop
out
orb
test
add
pop
enter
popf
in
sbb
andl
adc
adc
jecxz
xor
pushf
testl
leave
int
add
sub
mov
hlt
or
xchg
call
sub
in
insl
inc
push
cmp
add
call
pop
sbb
push
pusha
aam
movsb
dec
mov
clc
xchg
int
pop
ret
hlt
mov
pusha
dec
popf
test
cmp
dec
mov
jae
xchg
fnstcw
leave
int3
xchg
icebp
outsl
add
fcomp
test
xchg
sbb
inc
fdivrl
pop
adcl
dec
dec
jb
cmpsl
mov
mov
and
xchg
mov
push
shrl
shrb
jae
shlb
cmp
push
push
data16
int3
jge
jl
mov
cmp
inc
dec
lret
jge
pushf
lahf
pop
das
dec
mov
sbb
mov
and
dec
jns
fldl
faddl
mov
repz
lret
scas
xor
mull
dec
dec
dec
cwtl
pop
ret
xchg
cmp
cmc
mov
cltd
repz
popa
icebp
dec
fst
icebp
mov
loopne
out
test
pop
mov
jg
aaa
jp
pop
push
test
sub
inc
into
jnp
aaa
push
orl
inc
xchg
ljmp
xchg
sub
inc
xor
dec
mov
aaa
loop
popa
xor
jp
fnstenv
jge
in
addr16
loop
sub
push
fisubrl
sahf
push
jg
dec
repz
icebp
loope
sbb
mov
stc
js
mov
sub
fldl
mov
mov
loope
dec
rcr
jns
xor
cltd
xlat
lock
fsubr
imul
subb
or
xchg
xorb
dec
in
push
in
pop
aad
mov
inc
fld1
addr16
leave
pop
ja
jmp
mov
push
frstor
pop
adc
or
ret
push
sbb
sbb
cmp
test
addr16
dec
and
mov
andl
push
les
cltd
pop
sbb
adc
mov
ljmp
sub
mov
push
rcr
nop
xlat
pop
ficoms
movsb
push
gs
and
mov
mov
sub
and
lahf
inc
rcrl
xchg
mov
pop
fbld
into
fucomi
loop
mov
div
repnz
adc
fnsave
adc
add
hlt
dec
cmp
out
test
push
or
in
inc
or
sub
inc
mov
out
adc
bnd
sbb
mov
adc
mov
out
mov
data16
xchg
dec
sbb
ljmp
lret
sbb
push
and
mov
int3
adc
add
stos
sahf
xchg
mov
dec
cmp
setp
clc
push
testl
pusha
lcall
sarb
test
ds
imul
rorb
nop
subb
cltd
jp
out
adc
mov
aad
pushw
sub
sbb
hlt
xchg
out
jo
cltd
and
cld
and
sti
das
fnstcw
cmp
sub
cmc
lods
andb
dec
fwait
aas
cltd
std
mov
out
in
xchg
sub
out
cmp
imul
pop
fbstp
cs
inc
xchg
popf
cmp
movl
inc
and
cli
jb
inc
mov
inc
sbb
daa
mov
dec
sbb
add
jb
and
cli
fwait
cmpsb
and
out
outsl
test
daa
jae
mov
fmul
or
mov
xchg
add
push
jae
out
fisubrs
sbb
xor
stos
xlat
jb
adc
test
idiv
mov
hlt
or
jl
mov
and
cli
or
mov
ja
mov
pop
loopne
mov
xchg
enter
inc
rclb
jns
xchg
mov
mov
mov
icebp
mov
cmp
imul
scas
push
sbb
popa
loopne
fs
mov
into
jb
xchg
out
test
inc
pop
scas
dec
fs
xorl
fcomi
cmc
cmpsl
inc
and
push
flds
add
xor
push
fisubrl
mov
adc
leave
adc
sbb
jg
mov
inc
add
jge
xchg
ljmp
sub
sub
mov
cmp
out
in
call
stc
es
add
cltd
push
cmc
cld
int3
xor
call
scas
pop
out
inc
jbe
mov
test
cmpsl
outsl
ljmp
and
fcoms
test
xlat
or
inc
mov
lahf
lcall
mov
cmpl
das
mov
inc
sub
adc
cltd
jae
or
push
in
push
mov
stos
out
idivb
daa
mov
sub
jle
jmp
and
cmp
fcmovnb
hlt
mov
pop
add
fstpl
xlat
push
ret
loop
dec
mov
pop
inc
push
lret
pop
mov
movl
insl
mov
jle
fcmovnu
xchg
inc
stos
movsb
sarl
test
dec
subb
iret
sub
pop
inc
pop
popa
dec
inc
xchg
out
pop
mov
icebp
jne
push
lods
cmp
add
mov
pusha
push
shll
add
and
pop
sub
lcall
fdivrs
pop
cs
popf
xchg
cmp
push
fdivrl
adc
gs
push
das
lret
lds
push
insl
or
aam
pop
cmp
cli
aad
fwait
movsl
fidivrl
movsb
insl
sahf
inc
jns
xor
dec
mov
jnp
or
xchg
cltd
inc
mov
sti
fiaddl
cld
push
mov
push
xchg
pop
sub
stos
cmp
cmp
xorl
scas
xchg
ds
fcmovnb
es
and
mov
sbb
int3
fidivs
xor
mov
adc
mov
lods
sbb
push
or
loopne
js
jb
mov
pop
repnz
loope
add
mov
cmpb
mov
and
fistl
pop
pushf
jmp
cld
add
mov
inc
ja
sub
sub
aad
cs
dec
push
xor
mov
dec
dec
lea
fs
cs
pop
aad
fidivrl
adc
outsl
imul
inc
xor
jno
rclb
popa
and
xor
sbb
jp
in
inc
and
lods
jns
or
imul
jg
test
gs
dec
push
ss
sarl
add
stc
adc
fstl
stc
and
andl
mov
add
or
dec
scas
sub
cmp
scas
jl
pop
jno
sub
cli
ds
xchg
xchg
inc
lods
jnp
jg
sbb
pop
push
jno
sbb
decl
inc
push
adc
in
pop
sub
clc
jns
aad
fcmovnbe
fimuls
pop
out
idivl
push
movsb
dec
xor
stc
dec
fadds
pop
pop
inc
xchg
insl
rorb
aas
cmpl
repz
and
jae
jb
adc
jl
lret
je
lahf
inc
in
inc
aam
and
loopne
out
int
pop
mov
bound
andb
or
fstl
dec
in
inc
push
aad
xor
pushf
add
and
ret
mov
out
enter
loopne
mov
fwait
ret
mov
pop
insl
icebp
fimuls
gs
mov
movsb
ljmp
repnz
push
arpl
and
xor
xor
pop
xchg
cld
sub
mov
lea
sarb
cmp
divl
dec
add
loop
das
lods
dec
out
shll
xchg
mulb
clc
imul
sub
xor
and
dec
lret
shll
sbb
push
roll
call
enter
jg
mov
repz
cmc
lods
xchg
cli
or
aaa
add
inc
inc
mov
sub
movsl
jbe
lock
test
fisttpll
lock
enter
lcall
subb
sub
movsb
mov
xor
sub
jg
xchg
jbe
xchg
fcoms
ret
xchg
lods
push
mov
cmp
int3
call
cs
rcr
mov
movsb
pop
add
inc
das
cmp
mov
sarb
cmpl
imul
lds
sbb
in
loop
mov
jecxz
push
js
shlb
cld
jnp
inc
lea
je
jno
sbb
ss
adc
xchg
fisttpll
sbbb
cmpsb
into
cltd
lahf
faddl
sbb
repz
sbb
stc
mov
push
aaa
lahf
mov
iret
les
data16
mov
pop
mov
test
arpl
call
dec
xchg
divb
sahf
sbb
std
repnz
inc
sub
sub
bound
out
add
push
jno
xor
repnz
in
fdivp
inc
jbe
in
push
cmc
jecxz
or
nop
mov
or
fisubs
mov
scas
cltd
int
mov
inc
nop
dec
js
pop
and
lods
mov
iret
sbb
xchg
add
mov
mov
imul
lsl
insb
test
das
call
pusha
push
sbbl
add
mov
cltd
js
lcall
hlt
adc
out
adc
mov
dec
pop
xlat
int
pop
lods
dec
fstp
ret
data16
lds
pop
fnstcw
sub
jb
negl
xchg
pop
cmp
popa
ljmp
popf
mov
fwait
sbb
icebp
xor
outsb
test
xorl
ja
aad
int3
push
xor
clc
stos
idivb
push
push
sbb
test
xchg
pop
ret
cwtl
cmp
inc
std
pop
out
push
mov
stos
scas
lods
push
sbb
sbb
mov
xor
inc
mov
loop
cmp
insl
xchg
mov
xchg
pop
movsb
hlt
sbb
sbb
movsl
push
ret
pushf
add
lahf
xor
cld
dec
icebp
loop
mov
xchg
adc
gs
inc
push
sbb
jbe
mov
nop
dec
in
inc
div
mov
push
outsl
mov
dec
insb
adc
xchg
push
sahf
ret
flds
cmp
pushf
pusha
cmp
int
or
cltd
mov
cmp
jno
sub
inc
pop
cs
imul
push
pop
enter
roll
push
jge
rcrl
xchg
mov
in
es
mov
stos
imulb
push
mov
pop
clc
mov
movsb
xor
jp
push
aam
stc
push
cltd
in
les
jne
sahf
sbbb
jne
pop
cmp
fs
dec
mov
jl
aaa
cmp
cmp
inc
scas
inc
cs
pop
sub
fidivs
sbb
dec
arpl
mov
fldcw
push
mov
idivl
sahf
test
mov
or
inc
or
sar
push
out
test
aaa
iret
loope
jo
in
jg
sbb
mov
mov
mov
stos
clc
mulb
xchg
xchg
test
pop
or
dec
std
mov
xor
cli
ret
sbb
ret
cmpsb
dec
test
out
pushl
mov
add
pop
ds
bound
push
stos
mov
inc
lret
push
jg
test
cmc
pop
test
movsl
xorb
das
jle
gs
fsubs
movsl
jg
sbb
pop
ja
pushw
mov
int
out
imul
andl
inc
sbb
ds
daa
out
mov
push
xchg
popa
pop
clc
sub
hlt
adc
je
mov
jg
xlat
loopne
stos
jbe
std
ja
xor
sbb
xchg
pop
insl
in
lds
stos
sahf
pop
dec
imul
cwtl
xor
outsb
cmp
dec
ret
mov
insl
xchg
pop
mov
jns
enter
jle
xchg
or
nop
repz
dec
jge
es
and
pushf
jb
leave
ss
jo
xor
fsubrp
mov
imul
std
mov
stos
movsb
pop
cmpsb
movsb
popa
sti
inc
mov
mov
rcrl
sbb
xlat
lahf
push
inc
enter
mov
inc
iret
ja
pop
fstl
adc
ret
popa
arpl
dec
shlb
call
jmp
cld
jo
mov
rsm
je
adc
sbb
xor
fsubrs
sbb
cmp
out
ja
sub
mov
popf
icebp
mov
cld
push
lock
test
adc
pop
adc
pushf
popf
dec
lods
stos
dec
lds
icebp
repnz
cmp
cmp
adc
sub
push
xchg
rcl
mov
cmp
inc
mov
jnp
test
xchg
lds
jecxz
and
std
jecxz
dec
sahf
cwtl
out
push
jge
xor
lcall
loopne
dec
mov
xchg
adc
xor
scas
fldt
cmc
mov
bound
iret
push
in
nop
inc
ror
jle
and
sub
push
jmp
lock
fists
or
jbe
fisttpll
jecxz
cwtl
sbb
int3
ret
mov
sbb
fiadds
sahf
cmp
clc
lds
push
outsb
cld
mov
mov
push
fwait
in
bound
out
sbb
sub
mov
sbb
nop
fnstenv
pop
adc
loopne
push
icebp
and
in
cmp
stos
fldl
cld
testl
add
inc
scas
fistpll
jecxz
xchg
xor
cs
inc
stc
mov
pop
xchg
jne
jne
outsl
adcb
fstpl
jecxz
fstpl
lahf
call
inc
jb
ljmp
add
ret
mov
pop
pop
push
cwtl
lcall
and
push
fsubs
xchg
sub
jo
jmp
jbe
pop
scas
dec
jbe
adc
pop
xor
lcall
jnp
xlat
pop
sub
pop
int
test
cmp
push
repz
mov
mov
js
add
nop
inc
sbb
pop
das
js
in
adc
push
icebp
stc
jle
into
inc
or
filds
jo,pt
clc
pop
xchg
jp
in
mov
out
jo
bound
cld
xor
add
imul
cltd
cwtl
pop
add
adcb
daa
loopne
adc
dec
push
repnz
fistpl
popl
dec
cmpsb
repnz
sbb
leave
lea
fcomip
stc
je
or
out
shll
mov
mov
aad
and
mov
cmp
sub
pop
lods
fmull
dec
sub
aaa
dec
jge
loopne
mov
test
cmp
aad
test
cltd
mov
xlat
in
jns
jne
pop
fistps
lods
imul
jae
shl
add
sbb
fmul
fisttps
mov
fisubl
mov
pop
xorb
scas
aas
test
add
jbe
lds
cs
add
jmp
aaa
sbb
jg
sub
dec
jl
mov
stc
inc
das
ret
negl
cmp
shlb
hlt
and
ret
into
inc
dec
pop
xchg
out
mov
jl
jmp
int
imul
cmp
fcmovnu
adc
sbb
sbb
in
mov
aad
mov
mov
jecxz
dec
mov
out
cmp
mov
xchg
cmp
sahf
nop
add
fbstp
pop
imul
push
dec
negb
and
rcrl
xchg
fdivl
test
inc
test
jbe
imul
lret
cmpsb
aaa
mov
loop
arpl
mov
popa
pop
outsb
ror
sub
in
add
dec
cld
lods
mov
jge
cwtl
xchg
shl
jmp
xchg
mov
mov
mov
xchg
add
shlb
std
push
xor
loop
imul
xlat
jp
je
outsb
mov
push
mov
data16
outsl
push
lods
jnp
repnz
ljmp
push
rorl
test
sub
mov
imul
mov
loop
stos
popf
push
lock
das
mov
dec
mov
adc
cs
mov
js
cltd
mov
mov
inc
xchg
bound
sub
int
loopne
lea
xlat
dec
push
sbb
xchg
out
push
scas
add
jo
fistpl
jge
add
adc
jnp
shll
js
sti
imul
rcl
aam
fistpl
jmp
push
pop
fistpl
out
push
pop
pop
inc
xor
mov
loop
sbb
out
mov
dec
lods
movsb
jnp
sbb
dec
sti
icebp
xchg
or
cmp
mov
add
sahf
or
dec
sarb
ficomps
mov
inc
xor
inc
xor
xchg
clc
cmp
mov
je
das
or
and
rorl
cltd
rolb
and
mov
shll
in
es
lahf
inc
and
shr
lret
add
lods
lret
fdivl
and
mov
into
jp
adc
adc
dec
das
add
push
in
lea
adcb
imul
lods
mov
mov
xor
out
mov
imul
xchg
xor
xchg
jno
cmp
push
push
imul
call
push
sbb
sarl
push
popf
sub
and
push
dec
mov
imul
dec
and
sbb
push
int
cmp
fdivl
pusha
mov
xchg
dec
cld
aas
ret
out
aas
ja
cs
xlat
add
rcll
xor
fwait
cmp
mov
mov
mov
cmp
adc
lret
push
adc
cmp
pop
outsb
mov
movsb
cmp
fcoms
mov
enter
and
adc
inc
sidtl
and
lods
pop
lods
push
test
jecxz
pop
mov
shrb
pop
test
movsb
cltd
xchg
rcl
mov
pop
stos
jg
and
inc
push
and
pop
cld
divb
adcl
loopne
lahf
mov
insb
test
xor
dec
mov
hlt
imul
shr
fwait
js
xchg
jp
mov
movsl
pop
push
push
das
je
xor
shrl
push
aaa
sbb
movsb
xor
gs
pop
loope
lods
sub
das
mov
mov
lods
and
fwait
push
xchg
mov
xchg
sti
ret
xchg
lret
rorb
call
xor
jmp
pop
es
sbb
mov
vprotb
xor
sahf
je
in
push
mov
scas
adc
call
lea
push
jl
aam
xchg
scas
test
fistl
cmp
movsb
fcomps
mov
jo
insb
scas
xorl
cmpsl
xor
push
mov
xor
repz
frstor
neg
arpl
add
pop
arpl
push
test
sbb
hlt
sahf
adc
das
in
outsb
testl
xor
dec
push
xchg
inc
ss
aam
into
adc
mov
sbb
das
push
js
fs
mov
dec
lock
in
repz
inc
mov
inc
sub
add
dec
mov
scas
ret
daa
jg
psrad
dec
or
xor
dec
push
xor
cmp
mulb
mov
lcall
lock
ds
scas
loop
dec
xor
adc
xor
xor
adc
pop
mov
out
mov
push
daa
rcr
or
cmp
jg
mov
sbb
jmp
xchg
popf
mov
movsb
inc
std
insl
test
fadds
test
sub
imul
fisttpll
pop
mov
inc
sub
enter
push
mov
add
sub
lock
andb
push
test
lds
inc
rorl
mov
sahf
sub
das
push
lcall
push
adc
aaa
jmp
xlat
add
xchg
loopne
xor
mov
sub
loopne
xchg
xor
add
orb
add
jecxz
shll
sbb
mov
cmp
mov
insb
xor
mov
cwtl
imul
fiaddl
push
fiaddl
aam
sbb
orb
test
into
std
out
insb
mov
jno
pop
sbb
aad
sbb
ficoms
push
or
cmp
dec
out
xor
and
fwait
xchg
sub
fsubp
insl
cmc
mov
dec
fcompl
jp
jge
pop
ror
and
pop
lea
mov
cmp
ss
dec
sbb
xor
stos
dec
call
mov
mov
rcrl
cmp
jle
rolb
mov
mov
xor
mulb
mov
imul
xchg
ss
push
mov
add
add
add
insb
push
test
and
les
jnp
lds
push
mov
adc
push
nop
add
test
xchg
mov
test
and
repz
push
mov
jge
out
and
jmp
and
pushl
call
dec
xlat
out
add
idiv
and
loop
imulb
fwait
dec
mov
ret
ss
jns
outsl
mov
fidivrs
cmp
pop
push
je
lret
scas
jmp
mov
add
sbb
jecxz
jge
fwait
jb
into
insb
and
mov
lret
xor
aam
or
xor
popa
cmp
into
jbe
xchg
xor
lods
cmp
daa
push
cld
in
pop
dec
mov
fildll
mov
and
daa
fwait
out
cmp
test
lock
fisttpl
ljmp
dec
insb
ja
and
adc
mov
ja
adc
inc
aam
imul
fiaddl
lea
rorl
mov
ficomps
mov
sub
loop
and
sarl
aad
mov
jae
faddl
pop
or
vpshuflw
sub
add
aam
sbb
or
mov
jle
mov
adc
call
iret
add
pop
cwtl
jg
adc
or
sbb
mov
int3
outsl
loopne
push
lds
fcomi
cmp
imul
shrb
fwait
jg
fistl
or
mov
fs
and
insb
adc
jp
jmp
lahf
test
push
add
xor
shrb
mov
xchg
mov
test
dec
cmc
stc
je
jg
jae
inc
fsubs
pop
pop
ljmp
sbb
mov
bound
jbe
in
cmp
pop
js
push
aam
loope
fistpl
xlat
fimull
jno
jo
shrl
outsb
mov
std
sbb
js
xor
and
fsubl
sub
pop
jmp
out
jno
in
mov
jno
dec
fisttps
gs
add
pushf
pop
push
in
inc
ret
dec
sub
ja
xor
push
ss
movsl
into
dec
lock
enter
inc
jge
pop
cmpsb
loop
xor
vcvtps2dq
pushf
lods
rcrl
mov
push
aas
stos
sbb
addr16
stc
push
call
orb
movsl
dec
cs
rolb
sti
js
cmp
push
dec
lret
sahf
push
outsb
imul
mov
cmpsb
lcall
gs
cmpl
test
cltd
push
mov
icebp
js
jl
test
inc
mov
cltd
jns
stos
ja
in
xor
pop
stc
cmpsb
mov
ret
in
icebp
lret
xchg
or
or
sarl
in
inc
orl
and
pop
dec
bound
mov
adc
lret
mov
push
in
adc
add
pop
movsl
cmp
adcl
sbb
and
ja
pop
aaa
pop
fstps
or
hlt
lds
fstps
clc
clc
lods
js
inc
cli
movsl
std
movb
jmp
int
xchg
loope
and
mov
lods
mov
jo
imul
pop
push
insb
decb
sbb
jbe
inc
xlat
fs
icebp
sbb
or
mov
lret
pop
les
orl
mov
push
mov
mov
lret
test
inc
xlat
and
dec
bound
sbb
loope
xchg
cmp
adc
cmp
or
pop
push
jae,pt
loope
rorb
outsb
imul
repz
and
jo
or
dec
sub
jge
lret
jo
out
sub
xor
clc
push
xor
rclb
lret
push
test
out
fdivr
add
xor
or
and
xor
mov
mov
xorps
xchg
cwtl
repz
fimuls
sarl
shr
jnp
lods
movsl
push
in
stos
scas
xchg
stos
and
popf
pop
push
pop
jae
inc
daa
mov
gs
loop
xor
ss
inc
lea
sub
jnp
adc
xor
out
inc
clc
cmp
dec
incb
pavgw
sub
pop
rol
movhps
mov
mov
sbb
lea
cmp
sbb
movsl
mov
xchg
pusha
mov
mov
jns
test
adc
cmp
push
pop
rorb
out
and
inc
xchg
pop
pop
jae
mov
out
daa
mov
adc
xor
sub
movsb
stc
inc
dec
jp
pop
out
jmp
test
mov
pop
xor
and
leave
or
mov
pop
and
mov
ss
sbb
test
mov
inc
pop
rcrl
sarl
out
or
dec
inc
cmp
mov
xor
icebp
aaa
dec
test
mov
addr16
and
xchg
push
pop
sub
push
lods
mov
imul
dec
jmp
inc
adcb
xchg
sub
pop
pop
in
xor
xlat
xchg
push
repz
xchg
mov
mov
nop
rclb
sahf
dec
push
cmp
in
push
mov
test
dec
loop
push
pcmpgtw
cmc
data16
scas
adc
mov
xchg
xor
loope
mov
addr16
push
lret
movsl
pop
mulb
in
lods
mov
xlat
mov
popaw
gs
xchg
mov
adc
lret
test
lds
dec
sub
repz
mov
fwait
mov
xor
imul
bound
jmp
mov
push
push
rorb
mov
adc
repz
cmpsb
mov
repz
je
hlt
sti
gs
ljmp
stos
stc
xchg
aaa
in
repz
pop
int3
loop
iret
sarl
out
push
push
sbb
jecxz
mov
sub
shrb
inc
sbb
out
cmc
fidivrs
push
negl
js
mov
inc
and
inc
ret
fdivl
pop
mov
xor
lds
fmull
test
dec
inc
pop
sub
push
imul
iret
and
jle
xchg
loope
push
and
inc
lods
stos
aaa
sub
lock
or
fstps
mov
pop
mov
sahf
sbb
mov
cwtl
mov
arpl
mov
dec
xchg
inc
ss
out
cltd
mov
jmp
test
cmp
dec
call
or
jge
sarl
iret
or
popf
mov
jl
pusha
sarl
inc
insl
std
adc
mov
mov
in
xchg
enter
sbb
imul
dec
sbb
ds
xchg
jge
pop
ret
jle
adc
nop
jbe
mov
xchg
sti
cmp
push
push
xor
mov
fists
xor
rolb
scas
cmpb
dec
shll
adc
push
xor
jae
xor
dec
data16
iret
lret
push
loop
fsubs
lret
stc
jmp
mov
clc
mov
sbb
iret
je
xor
cmpsl
inc
stc
int
pop
into
addl
xchg
pop
sbbb
negl
adc
arpl
ljmp
dec
int
frstor
and
fdivl
clc
jmp
mov
stos
aaa
pop
aad
and
dec
mov
fnsave
iret
gs
bound
test
xchg
scas
xchg
mov
cs
inc
subb
push
pop
xor
ds
in
out
sub
ret
sarl
ds
pop
popf
subl
mov
data16
jno
sarl
cwtl
pop
nop
adc
sbb
aas
test
cmp
jbe
mov
aam
mov
fidivrs
into
xchg
mov
xor
and
mov
jnp
enter
cmc
jle
rorl
sub
in
ss
insb
icebp
cmp
push
cmovs
stc
aam
xor
mov
and
outsl
ja
jecxz
push
jmp
leave
imul
notl
and
pushf
xchg
adc
in
xor
loopne
stos
aaa
push
int3
adc
sbb
push
cli
icebp
imul
xchg
mov
fwait
repz
sahf
dec
movsb
leave
in
push
push
add
jge
pop
pop
dec
in
aad
out
ljmp
addl
stos
orl
lods
mov
decl
pop
mov
xchg
adc
mov
jge
push
adc
inc
mov
out
jnp
pop
stos
call
sub
data16
addr16
mov
mov
rcr
shll
repnz
jne
jns
flds
and
hlt
push
dec
dec
push
mov
aas
mov
xchg
dec
or
sub
cmovl
iret
adc
fdivrs
aam
scas
mov
push
mov
sahf
jae
or
popf
mov
pop
in
clc
lret
xchg
andl
shrl
ret
cmp
push
imul
sbb
mov
fadds
cmp
es
jns
mov
out
stc
xor
sbb
sbb
pop
iret
jno
fidivs
cli
mulb
xchg
pop
in
lahf
idivl
dec
mov
shlb
repz
jne
ljmp
loopne
popf
mov
test
lods
add
cltd
cwtl
add
cmp
pop
jge
testb
in
or
sbb
jb
ss
cmp
cltd
shrb
lahf
mov
add
jg
jb
ret
mov
faddp
or
cli
mulb
pushl
je
xor
cmp
pop
ficompl
data16
ss
xor
adc
fsubl
out
fsubs
sbb
icebp
adc
mov
aas
ja
cs
lock
xor
inc
push
sbb
sbb
out
xchg
imul
jg
test
cld
inc
incb
ret
xchg
jl
jecxz
sbb
cld
imul
add
xchg
mov
movsl
hlt
loopne
sbbb
sub
rorl
xor
inc
and
sahf
push
push
movsl
cltd
adc
lods
inc
dec
popf
call
adc
popf
add
pop
lods
sub
popf
fbstp
xchg
lock
sub
in
add
enter
or
pusha
les
sbb
cld
rorb
cltd
push
int
loopne
xor
rcrb
dec
mov
or
or
repz
rclb
aas
pop
xchg
lea
sbb
pop
mov
jecxz
sbb
lahf
in
pop
push
mov
aas
ficoml
pop
pop
es
xlat
movsb
cmpsb
pusha
add
shll
out
dec
jmp
mov
sub
lods
jle
pop
xchg
fldt
test
sbb
cs
mov
es
add
sbb
jno
xchg
fnstsw
rcll
ret
jmp
cmp
into
test
adc
out
test
mov
inc
imul
mov
bound
dec
in
pop
cmp
add
mov
inc
or
add
and
ret
push
or
pop
jae
imul
dec
jge
fidivl
inc
subb
pushf
cmc
adc
inc
mov
jmp
xchg
dec
cmp
lods
mov
push
pop
stc
xchg
in
jge
aas
mov
sti
push
and
repz
cmp
push
test
xchg
cmp
sub
mov
xchg
sub
faddl
xchg
mulb
out
cmp
cli
cmp
jb
int3
aam
lahf
addr16
xchg
out
sbb
arpl
xor
lcall
cmp
sbb
stc
pop
mov
lock
aas
call
jle
mov
lods
jns
aaa
rolb
insl
scas
or
das
sub
mov
data16
out
movsb
fwait
sub
mov
mov
mov
adc
std
ja
pusha
jmp
jmp
loopne
sub
or
in
sub
sarb
cli
xor
cmpps
jmp
loopne
or
cmp
lret
xor
arpl
test
in
pop
outsl
fs
loope
or
hlt
sbb
aas
fcmovnbe
mov
mov
fstpt
in
cmc
clc
push
dec
pop
rol
add
out
mov
mov
push
and
mov
jne
jo
mov
jle
and
add
push
xchg
inc
js
dec
push
test
push
pushf
fists
mov
iret
sti
or
pop
repnz
adcb
jmp
mov
sub
push
negl
nop
cmc
pop
sub
push
pushf
xchg
sbb
mov
and
ja
cmp
mov
arpl
call
outsl
and
cmp
scas
outsl
movsb
repnz
dec
fcoml
js
mov
mov
mov
jg
jne
dec
fbld
mov
imul
xor
and
mov
fsubr
je
xchg
mov
mov
and
stos
es
mov
push
mov
push
jb
lods
mov
loopne
out
pop
lahf
sbb
lock
in
sbb
or
sar
iret
xor
adc
cmpl
les
and
rep
lahf
jns
and
icebp
and
pushf
out
sbb
sbb
mov
mov
dec
pop
int3
sarl
test
adc
lods
pop
ljmp
int3
mov
sbb
scas
mov
pop
ret
inc
cmp
sbb
pop
lds
shlb
aad
adc
ret
movsl
repz
pop
xor
call
test
adcb
std
popf
sub
out
pushf
push
jbe
sti
test
xor
cmp
icebp
pusha
jb
pop
je
js
call
adc
pop
loope
push
mov
int
imul
pop
and
bound
inc
inc
push
cmp
xchg
in
ss
xchg
push
add
sub
jge
xor
push
mov
das
jns
xchg
int
aaa
ret
mov
mov
rclb
pop
out
insl
or
jnp
sbb
mov
jge
xor
in
cmp
mov
push
subl
xchg
jb
shl
jbe
je
dec
push
icebp
fdivrl
cltd
insb
mov
cmp
cltd
xchg
jg
mov
filds
xchg
add
dec
jno
in
fmuls
std
push
cmpsl
test
cltd
int3
sub
mov
xchg
push
aaa
jp
xor
out
imul
fsubr
xor
add
shr
stc
jmp
inc
inc
jle
ds
inc
ret
or
pushf
arpl
in
aad
mov
rcl
pusha
sbb
lods
push
mov
sbb
in
pop
stos
xchg
push
ss
das
aas
add
jno
daa
jno
mov
cmp
hlt
and
jge
sbb
shlb
inc
mov
sahf
push
cmp
pop
jae
andl
pop
xor
xorl
das
pop
in
xchg
sti
popa
push
cwtl
cmc
repnz
aaa
jecxz
insb
cld
push
hlt
fdivr
loopne
sbb
sub
jb
sub
addr16
pmulhuw
sahf
cmpsl
and
xlat
addr16
push
and
mov
int3
pop
sub
adc
aaa
and
lcall
sbb
xchg
les
lret
popa
cmpb
xor
xchg
mov
sbb
or
ror
rorl
nop
push
jmp
out
dec
stos
sub
shlb
iret
pop
cmp
sbb
ljmp
lahf
fistpll
mov
jns
mov
lret
imul
inc
test
dec
sub
adc
mov
push
and
stos
loop
push
add
popa
int
xor
loopne
fnsave
ss
mov
loopne
in
stos
jo
test
cli
jnp
cmp
lahf
ret
lds
lcall
jbe
loope
nop
pop
sub
enter
mov
sti
ret
test
std
stos
mov
int
xlat
fucomp
dec
sub
cltd
ja
movsb
mul
mov
mov
jp
lds
push
ret
xchg
scas
jnp
dec
cmp
push
push
inc
dec
notb
mov
mov
xchg
enter
stc
cmpsl
rcll
and
rcl
movsl
inc
or
jmp
ds
mov
imul
push
cmp
pop
test
inc
test
jmp
or
or
sub
mov
cwtl
int3
and
pop
inc
dec
dec
inc
mov
mov
jno
push
xchg
fsubrl
int
data16
inc
mov
jmp
daa
les
and
int
sbb
sub
pop
inc
lock
das
pop
aas
ficomps
dec
dec
loope
in
sbb
test
ffree
adcb
inc
mov
movsb
call
ficompl
sub
push
divb
cmp
out
nop
ljmp
clc
mov
arpl
shlb
pusha
jns
out
inc
out
and
dec
or
mov
loop
pop
cld
jns
pusha
ljmp
mov
or
jae
jecxz
add
mov
lea
in
adc
sbb
outsl
adc
stos
cmpsb
xchg
add
fsub
jbe
mov
xchg
inc
movsb
jp
icebp
add
sub
ljmp
pop
daa
mov
cmp
adc
insb
scas
cmp
push
dec
sub
mov
push
aad
leave
xchg
enter
mov
roll
in
or
mov
lahf
repnz
ds
xor
inc
lea
stos
add
filds
cmp
sub
push
xlat
sub
push
jne
sub
pushf
scas
xchg
jecxz
xchg
out
jo
imul
ds
mov
pop
dec
jno
ret
sarb
imul
stos
mov
or
lcall
add
jo
adc
adc
cmpsl
push
mov
imul
push
popa
pop
insl
pop
out
inc
cmp
push
xchg
push
out
push
cmc
daa
lahf
sti
or
in
imul
ret
scas
mov
in
test
lret
dec
and
ja
push
in
test
out
and
add
sbb
mov
sub
ljmp
lret
sub
mov
movsl
mov
push
xchg
lea
dec
addr16
filds
xor
pop
or
dec
xor
bnd
fbld
in
xor
jno
mov
int3
jg
inc
mov
les
ficompl
push
sti
mov
lahf
test
inc
shrb
jns
cmpsb
in
fwait
mov
mov
test
lds
jne
xor
dec
cli
push
mov
cltd
jl
imul
jl
push
xchg
pop
jl
cmpsb
sbb
loopne
sub
lds
mov
xor
push
jge
ret
sbb
adc
jnp
cwtl
mov
or
sub
movsb
xchg
aam
arpl
fwait
sbb
fistps
std
lds
cmp
add
adc
cmp
repnz
push
aam
push
les
pop
xchg
adc
add
adc
xor
or
in
mov
pop
out
inc
popa
mov
jmp
int
mov
jg
loope
mov
fidivrs
inc
clc
cld
sbb
sti
stos
call
sbb
xchg
sub
xor
and
es
adc
pushf
adc
aad
pop
dec
cmp
xchg
mov
cmp
out
insl
popf
int
dec
bnd
dec
cmp
push
dec
push
inc
jp
mov
lret
dec
xlat
jne
jnp
outsb
pop
es
dec
in
int3
jbe
xchg
sbb
xlat
push
arpl
mov
nop
dec
icebp
mov
mov
test
addb
mov
sub
pop
mov
sub
xor
xor
insb
push
fs
aas
jnp
cltd
inc
push
lret
and
xlat
clc
outsl
push
jbe
lods
in
clc
shlb
ljmp
sub
insl
jecxz
mov
push
sahf
pop
jmp
push
test
scas
aad
pop
lock
adc
adc
pop
jle
mov
or
bnd
adc
lods
sbb
push
sub
test
push
mov
sub
ret
sub
mov
loopne
int
jmp
mov
cmpsl
outsl
xchg
sbb
dec
ja
leave
and
jo
jmp
sbb
mov
xchg
nop
or
mov
xor
rcll
mov
pop
in
aam
xlat
cli
pop
bound
mov
cmpsb
mov
ss
cmpsb
in
push
mov
dec
popf
cmpsb
pop
adc
or
in
jle,pt
xor
add
pushf
adc
add
movsl
mov
rcr
test
add
cmpsl
popa
mov
pop
cmc
jp
inc
bound
push
pop
pop
pop
or
mov
and
mov
adc
pop
aas
push
fs
imul
mov
ljmp
cmp
lods
repz
int3
dec
pop
cmc
mov
stos
jo
inc
imul
adc
ss
jge
testb
push
add
sbb
dec
xor
out
lahf
fdivl
mov
push
mov
and
insb
inc
mov
sti
pop
jecxz
jmp
sub
cmp
mov
mov
cli
and
cmpsl
sub
rcll
insb
pop
mov
push
sub
test
test
les
repnz
pushf
aad
cmp
mov
test
pop
fwait
pop
fcmovu
mov
test
fs
in
pop
sub
xor
imul
popa
pop
inc
adc
push
jg
fwait
cmpsl
sub
cwtl
cmc
pop
aaa
fidivl
daa
xchg
mov
scas
xor
and
xchg
jp
scas
or
push
mov
adc
push
cmp
mov
outsb
pop
mov
fadds
outsl
ljmp
or
cmpsb
mov
test
das
adc
xor
cmpsb
push
add
aaa
lahf
push
lret
mov
stc
nop
ficoms
mov
and
mov
cmp
xor
arpl
cmp
push
movsl
imul
out
xchg
pop
cmp
lock
xor
das
popf
or
push
jns,pn
lret
sbb
shrb
jl
add
dec
hlt
daa
xchg
cmp
mov
inc
stc
lret
push
sub
int3
rol
ds
inc
xlat
fbstp
push
push
push
jl
sbb
stc
mulb
and
jecxz
test
inc
lea
nop
loopne
ret
outsl
mov
push
add
mov
jle
dec
cmp
lods
cld
aas
sub
mov
lret
pop
dec
lcall
idiv
dec
xor
jmp
aam
inc
iret
pop
cmpsb
inc
push
mov
xor
les
ret
out
fwait
mov
dec
call
lods
clc
push
cmpb
adc
hlt
jp
xor
dec
sqrtps
and
and
xchg
outsl
and
fbstp
mov
xchg
nop
dec
sub
pop
out
pushf
dec
orl
pop
jns
mov
popf
enter
cltd
or
int3
mov
xor
test
or
xchg
fdivrs
and
mov
add
or
lods
cmp
rcll
or
cmp
sbb
inc
ret
mov
or
out
bound
cmpsb
jl
mov
mov
icebp
pop
mov
dec
or
mov
sbb
lcall
stos
fdivrl
xchg
jno
mov
pop
sbb
xchg
outsl
cmp
mov
sbb
pop
jno
mov
xchg
ljmp
cs
movsl
mov
wbinvd
mov
inc
adc
mov
mov
scas
incl
push
sbb
add
and
mov
mov
push
sub
adc
inc
xor
xchg
stc
xor
lahf
xchg
int3
mov
mov
ja
pusha
sub
aaa
les
and
call
push
mov
mov
lahf
rorl
insb
mov
pop
lods
lahf
jmp
adc
mov
int3
inc
or
and
cmp
outsb
inc
pusha
imul
out
sbb
insl
push
cli
xlat
mov
mov
popa
xor
jp
push
lahf
push
fmull
mov
stos
adc
pop
mov
push
hlt
xchg
loopne
xor
rorb
add
pop
outsb
cmp
push
js
in
jle
out
data16
sbb
add
pop
adc
adc
out
mov
push
pushw
adc
cmp
jmp
lcall
xchg
stos
loope
jg
cmpsb
adc
outsb
inc
test
mov
cmp
xchg
pop
and
mov
xor
call
xchg
sar
bnd
xchg
test
jp
xchg
arpl
push
sarb
cmp
leave
sahf
mov
xor
sbb
add
imul
sbb
or
fadd
addr16
xchg
jp
cltd
stos
xchg
or
and
cmp
xor
out
jno
xor
out
shl
pop
test
int
jecxz
push
out
xor
sub
or
shrb
lods
add
rclb
mov
sti
bound
xchg
jg
push
iret
addr16
adc
les
jns
xchg
pop
mov
pop
popf
jecxz
cmpsl
negl
mov
jns
pop
push
jmp
inc
jmp
cmp
pop
je
add
neg
adc
cmp
dec
cmpsl
push
int3
dec
test
out
repnz
jo
pop
scas
add
nop
cmpsl
ss
lahf
push
cmp
lret
aaa
and
dec
dec
or
sbb
or
push
mov
xchg
pop
xchg
pop
fnsave
inc
mov
fstl
arpl
mov
lock
adc
mov
test
or
testl
cli
jmp
insb
clc
fisubl
ret
mov
fbstp
js
jbe
xor
cli
adcb
mov
hlt
inc
sbb
fwait
sbb
push
jg
arpl
xchg
push
movsl
pusha
popf
std
mov
aas
pop
xor
pop
cmpsb
dec
in
outsb
inc
cmp
mov
into
subb
push
lods
mov
or
jno
into
movsb
push
mov
pop
sub
fadd
cmpsb
pop
mov
lea
dec
ret
xchg
or
call
sub
sbb
pop
cld
cli
inc
out
mov
dec
fimuls
cmp
mov
pop
js
sub
repz
xor
jp
mov
pop
adc
repz
insl
in
xlat
jnp
enter
lock
mov
mov
scas
fstpl
ret
aad
sti
and
dec
fs
ror
movsb
pop
sbb
call
or
inc
and
push
ficomps
out
jl
cmpb
mov
add
ror
lods
shr
mov
es
cmp
hlt
out
mov
loope
push
roll
push
sar
movsb
push
cmp
pop
pop
mov
subb
sub
mov
stc
loopne
enter
insb
arpl
mov
ret
lcall
testl
sub
movsl
xchg
mov
push
ss
cwtl
pop
mov
aam
inc
movsb
je
daa
xchg
shll
sbb
stos
std
jmp
arpl
clc
lcall
dec
ror
pop
imul
shrb
xchg
dec
pop
and
or
cmc
bound
leave
icebp
sub
and
push
addr16
jp
adc
movsl
mov
add
cld
xchg
pop
jne
mov
lahf
aam
mov
test
cmp
stos
xchg
jmp
sarb
dec
rcrl
push
inc
and
lcall
inc
cli
shr
mov
insb
ret
fucomi
push
imul
fs
jns
movsl
loope
in
cmp
xor
fadd
add
xchg
and
mov
jae
lret
inc
inc
leave
sub
ret
pop
push
sub
mov
xor
cmp
jnp
push
mov
jb
push
mov
sbb
or
pop
mov
arpl
jg
insb
and
push
adc
out
adc
mov
add
mov
fs
add
xchg
jae
jg
inc
mov
call
test
popf
pusha
leave
leave
out
in
and
fmul
dec
mov
gs
jl
iret
orb
sbb
clc
repnz
in
scas
out
data16
dec
jnp
pop
sbb
lret
sar
out
imul
and
out
jmp
adc
xchg
insb
cmp
clc
adc
push
adc
nop
xor
dec
dec
call
insl
stos
sbb
ss
fdivrp
cwtl
dec
push
imul
adc
push
pop
pop
vmcall
pmulhuw
pop
sbb
xchg
cmp
fistpll
cmp
popf
push
mov
std
aad
push
int3
aad
xchg
lret
sub
pop
rcrb
jns
aam
test
popa
mov
jno
cld
and
rolb
mov
scas
insl
mov
cli
inc
xchg
adc
out
aaa
insb
out
lock
cmc
stos
adc
pop
sarb
fildll
mov
into
or
add
dec
pushf
cmp
add
sbb
loope
or
pop
adc
enter
pop
mov
inc
aad
push
push
bound
je
arpl
aas
es
mov
outsb
mov
lret
clc
cmp
bound
push
fimuls
int3
popl
pop
and
out
ret
mov
cmpsb
rcrb
fsubr
xor
mov
cmp
loope
lret
dec
imul
cmpl
and
dec
cmpsl
inc
jae
adc
xor
sub
je
fldt
popf
sbb
mov
sbb
cwtl
insb
mull
icebp
subb
popa
sbb
sub
push
adcb
lea
push
xor
aad
mov
aas
and
mov
push
sbb
dec
filds
stos
pop
call
jle
arpl
bound
notb
movsl
movsl
fucomp
dec
sbb
call
sar
xchg
inc
ljmp
call
adc
inc
pop
push
mov
fcoml
sub
sbb
mov
mov
add
mov
insb
addr16
xchg
addl
pop
dec
or
jno
stc
jae
mov
mov
mov
jmp
mov
xchg
lock
dec
jno
or
test
sub
mov
out
sub
stos
push
xor
sub
rcrl
mov
pop
pusha
xlat
mov
insl
ds
add
in
inc
scas
or
xlat
cwtl
movsb
inc
adcl
je
mov
jge
hlt
mov
mov
inc
or
sub
jmp
sub
add
pop
pop
insl
adc
orl
mov
jbe
mov
sbb
push
stos
and
in
aam
ffree
das
dec
loopne
hlt
lods
pushf
jl
push
mov
in
mov
push
and
sahf
les
fsubl
shl
loop
mov
add
ljmp
jnp
mov
inc
imul
lods
lahf
icebp
rolb
jmp
int
pop
xor
imul
adc
in
inc
mov
mov
pop
lret
mov
xor
push
adc
cmp
sbb
sub
sbb
andl
ret
jle
xorl
push
cmpsl
sbb
xchg
notl
sar
fwait
in
push
test
or
mov
dec
test
sti
divb
inc
and
int3
mov
out
into
test
enter
shlb
adc
lea
jno
push
rcr
roll
icebp
jp
adc
mov
adc
jp
cld
scas
jp
loop
loop
pop
les
mov
pop
jo
jbe
movl
inc
add
leave
ret
jno
mov
or
xchg
data16
sbb
push
inc
rolb
aad
in
fisubrs
xor
popa
out
inc
adc
push
mov
stos
jp
test
dec
ljmp
cmp
fadd
sahf
push
stos
ljmp
fcompl
paddsw
int
adc
fcmovu
hlt
and
fimull
inc
push
cmp
bound
mov
fs
sub
lods
icebp
inc
inc
aas
ljmp
sub
out
dec
inc
add
adc
add
aam
pop
pop
dec
pop
add
or
mov
cmc
les
mov
add
test
imul
icebp
fs
lods
aam
fisttpl
push
cmpsl
cmp
and
inc
mov
mov
stos
gs
iret
inc
mov
jge
out
jae
cmp
lret
sahf
push
into
fisttpll
sbb
jns
cmp
lds
mov
inc
int
sbb
cmp
fistl
jnp
cmp
jmp
sbb
sbb
out
data16
sti
je
fwait
mov
sbb
xchg
cwtl
inc
dec
mov
je
sahf
add
jne
push
cld
mov
mov
insl
xchg
push
jb
fcompl
int
xor
cmp
gs
adc
lds
das
dec
push
cltd
sub
fisubrs
in
scas
add
sti
shrl
xorw
movsl
lcall
and
cmp
jge
ss
dec
and
and
pusha
rorl
lock
movsb
shlb
popf
mov
push
sahf
xchg
inc
in
ss
pop
test
push
xchg
sub
std
jl
mov
mov
push
rcl
cmpsl
push
sti
insb
mov
shr
dec
pop
pusha
clc
push
push
xchg
ja
pop
add
jmp
add
push
ds
lea
loopne
add
cmc
xor
int3
cs
jb
and
inc
cmpsb
adc
jecxz
push
out
in
outsl
scas
sub
decl
xor
nop
sbb
std
sbb
push
lcall
loopne
cmpsb
pop
lods
aad
pop
mov
into
mov
sbb
int3
into
jns
popf
dec
mov
add
imull
insl
mov
add
push
inc
fdivrs
add
pop
push
push
xor
pusha
nop
sub
sbb
test
push
subb
shlb
mov
and
sbb
lea
sbb
icebp
notl
fnstcw
js
cmp
cmpl
iret
std
xchg
mov
lods
iret
add
loope
mov
outsl
in
xor
adc
jne
or
inc
cmp
jne,pt
pop
hlt
sarb
jns
iret
ljmp
aad
idivb
stos
sbb
rcll
xor
adc
pop
xor
dec
dec
fs
or
stos
push
mov
mov
in
sbb
mov
lods
mov
jno
sbb
add
test
addr16
out
xchg
icebp
test
in
bound
sbb
pop
jne
cmpsl
xor
sarl
pop
adc
or
add
jns
dec
mov
pop
xlat
loope
orl
lret
outsb
dec
xchg
and
js
dec
and
fwait
adc
add
mov
mov
int3
pop
jnp
xor
into
repnz
add
inc
sti
int3
hlt
adc
addb
mov
fdivrs
dec
dec
aaa
dec
cwtl
fsubrs
sub
push
push
sbb
pusha
imul
xchg
push
or
xchg
fadd
and
add
int
mov
ljmp
dec
dec
mov
push
iret
cmp
push
sbb
decl
int3
inc
sbb
or
inc
push
fstps
inc
jmp
fisubl
insb
cmp
inc
add
dec
xor
loope
sub
frstor
and
insl
mov
int
aaa
mov
loopne
pop
adc
popa
lret
shr
rol
loop
nop
ljmp
sub
aad
sti
pop
movsl
lods
push
push
mov
out
xchg
lock
popf
lahf
lds
ss
cmp
and
add
pusha
or
out
popf
outsl
repz
xchg
mov
dec
sbb
add
dec
pushf
jecxz
outsb
or
cmp
cmpsl
das
stos
repz
mov
xchg
and
ficoms
movsb
ja
imul
adc
sahf
push
mov
mov
jne
aam
pop
aam
dec
inc
adc
xlat
int
lea
stc
mov
and
stos
push
addr16
popa
jp
xchg
pop
xchg
xchg
insl
sub
call
repnz
push
cld
cwtl
and
mov
leave
mov
jge
mov
push
cmp
adc
pushf
jne
aam
mov
movsl
adc
ds
mov
add
popf
inc
dec
cmp
movsl
iret
and
outsb
fs
fmul
adc
pop
add
pop
lcall
shll
les
stos
mov
mov
repnz
adc
mov
fstpt
ljmp
loope
repz
aaa
push
test
inc
clc
xchg
call
in
dec
cld
pop
shlb
arpl
xor
popa
dec
cmp
dec
jae
pop
xchg
es
fldenv
cld
jmp
cltd
adc
mov
cmpsb
in
outsb
call
in
fisubs
xor
cltd
adc
adc
mov
arpl
adc
add
cmc
loop
mov
out
daa
rcl
adcb
add
mov
mov
add
mov
scas
outsb
cltd
pusha
jae
aad
xchg
iret
push
lret
js
pop
mov
shlb
adc
mov
mov
loop
fwait
inc
lock
sub
sahf
push
mov
cmp
cs
iret
push
inc
jbe
or
clc
jne
scas
cmp
popa
ljmp
jge
enter
sahf
mov
test
shl
mov
movsb
jmp
lds
push
inc
or
sbb
ror
cmp
adc
inc
popa
sub
mov
xor
mov
addb
pop
cmc
jmp
sbb
dec
aas
cld
adc
rcl
dec
scas
sub
jne
add
std
sub
add
rcll
insb
or
xchg
roll
jnp
outsl
loopne
lods
mov
aas
jnp
pop
fsts
test
mov
jge
and
fidivl
dec
add
std
and
jbe
fdivrl
aam
insb
or
mov
xchg
adc
cmp
sbb
push
xchg
divb
pop
mov
lcall
fcmovnb
imul
or
movb
sbb
add
inc
sahf
call
jge
inc
addr16
fdivr
xchg
pop
jno
mov
jg
loope
dec
arpl
pop
add
pop
sbb
test
cmp
fldenv
ret
sub
fisubs
mov
arpl
xchg
je
push
dec
inc
add
push
negl
aaa
in
outsb
pop
movsl
dec
xchg
es
fdivs
movl
adc
mov
sub
push
frstor
mov
dec
sbb
xchg
bound
test
dec
push
repnz
gs
mov
mov
mov
xchg
cmp
or
in
ss
notb
xchg
sti
fwait
dec
lea
inc
out
jnp
jg
cmp
ret
push
mov
cld
cltd
mov
add
lcall
xadd
mul
rolb
enter
add
push
sub
push
int3
cmp
cwtl
jo
in
xor
lahf
iret
sub
imul
pop
dec
xchg
dec
sub
enter
pop
int
fcoms
pop
popl
lcall
aaa
add
leave
pop
or
scas
into
or
fmul
jmp
movsb
jne
inc
movsb
or
cmpsl
test
andl
or
mov
movsb
pop
push
ja
or
and
fadds
mov
insl
scas
push
ds
leave
imul
and
rorb
and
fisubl
out
iret
cmp
adc
mov
sbb
jge
xchg
jnp
lods
movsl
dec
aam
add
pusha
xor
ret
xchg
pop
cmp
mov
xchg
adc
fwait
dec
inc
lret
cmp
pop
sbb
sbb
push
jg
movsl
cmc
dec
xchg
mov
loopne
scas
pop
sarl
ficomps
or
scas
push
and
inc
jnp
pop
aad
xor
out
xchg
cmp
test
mov
cltd
rclb
jns
dec
cmpsl
jmp
pop
push
xchg
cld
aas
dec
aas
ljmp
loope
push
cli
cmp
sub
xchg
sub
fstl
mov
and
stos
roll
jp
push
iret
jne
loope
or
mov
jg
repz
push
jl
and
push
push
jo
lcall
push
dec
sarl
clc
imul
fisttps
jg
outsl
push
inc
or
leave
mov
movsb
jne
mov
shll
pop
loope
sbb
xor
mov
add
gs
xor
lds
pop
xor
jns
mov
inc
lds
mov
jl
adc
mov
mov
sbb
pop
in
push
fldcw
cwtl
cmp
data16
xchg
add
xchg
inc
sarl
xchg
in
jb
jg
or
ljmp
jmp
aaa
incb
pcmpeqb
out
cmpsb
sbb
sub
xchg
cld
or
popl
xchg
xchg
aam
push
xchg
lods
pop
jmp
cmpsl
inc
xor
incb
and
xchg
aas
lods
outsb
jnp
jle
dec
bound
gs
out
shl
mov
sahf
push
mov
xor
push
cmp
pop
cmpsl
inc
repnz
std
push
cwtl
popf
and
scas
cli
ljmp
int
inc
ret
and
mov
push
lahf
lods
pop
mov
dec
jbe
movsl
pop
sbb
lds
and
inc
pop
leave
fildll
lock
pop
mov
cld
fldl
loopne
int3
enter
inc
shlb
outsb
loopne
and
lods
cmp
jns
sarl
xchg
mov
jno
setnp
mov
pushf
lods
fnstsw
or
cmp
sbb
mov
cld
fs
leave
hlt
push
jp
out
insl
cld
hlt
mov
add
mov
sub
mov
shlb
lcall
cmpsl
loopne,pt
mov
push
add
mov
sub
and
outsb
fidivrl
imul
jns
mov
xor
lret
xchg
out
cmp
dec
dec
lods
or
fsubl
sbb
inc
cwtl
into
shlb
cmp
mov
popf
pop
ret
pop
sbbl
popa
inc
adc
cmp
clc
icebp
cmp
nop
icebp
xor
loopne
cs
inc
xchg
gs
js
jl
inc
mov
inc
sbb
cltd
es
popa
sub
lcall
mov
aad
icebp
lret
xor
jge
xchg
call
lcall
lret
inc
cmp
sar
test
sub
mov
popa
mov
mov
pop
dec
js
popa
cmp
call
push
fsubrl
fimull
sti
shl
fs
jecxz
push
inc
xchg
arpl
jg
lahf
shlb
test
or
inc
jnp
mov
pop
js
fistpll
jmp
inc
mov
mov
sub
xchg
subl
pop
xor
popf
add
ficoml
sbb
cmp
out
lahf
push
loopne
rcrl
mov
mov
jge
and
repnz
or
lret
pop
arpl
sbb
test
shlb
dec
pop
out
jg
or
test
xor
sbb
jo
divb
mov
inc
inc
mov
aad
mov
xchg
add
push
jmp
stos
mov
pushl
push
push
jno
push
call
shlb
xchg
in
lea
cmp
cmpsb
sub
pop
jne
cmpb
xor
inc
inc
shll
js
stos
mov
push
push
lock
inc
jns
dec
out
add
sub
in
outsb
icebp
mov
adc
and
dec
pushf
xor
and
cld
adc
daa
xchg
ss
insl
add
pop
in
daa
sub
jp
jb
mov
pusha
sarl
enter
insb
mov
out
jp
adc
push
sub
mov
cmpsl
inc
mov
mov
jae
pop
int
add
push
movsl
stc
test
pop
scas
adc
or
and
mov
xchg
leave
mov
jbe
lea
inc
inc
lret
psubsw
jmp
or
cmp
test
je
xchg
test
mov
pusha
or
subl
mov
dec
inc
iret
cwtl
out
jmp
adcl
inc
inc
push
orl
es
jmp
or
or
mov
jle
std
dec
idiv
adc
popf
js
leave
sahf
scas
movsl
ret
inc
adc
sub
daa
push
cmp
xor
xor
inc
aaa
jle
std
mov
lahf
inc
pop
popa
mov
icebp
mov
in
scas
stos
lahf
cld
mov
ret
pusha
scas
push
push
lret
dec
jl
xchg
cli
xor
shlb
mov
insb
add
dec
daa
xor
addb
mov
or
bound
cmp
pop
xchg
or
lahf
and
cmp
subl
dec
adc
push
fdiv
or
inc
pushf
adc
jbe
pop
xor
jnp
or
sbb
jne
jge
lods
cmpl
inc
insb
and
xor
cmpsl
xchg
mov
adc
addr16
stos
pop
sbb
sahf
outsb
bound
les
dec
aas
jb
out
pop
xchg
push
enter
push
call
inc
cmpsb
inc
popf
dec
cmp
mov
add
inc
loop
fs
pop
xchg
dec
lods
pop
cltd
bnd
lds
imul
cmp
inc
shl
xor
cmp
data16
sbb
push
js
popf
mov
or
xchg
imul
mov
add
ror
adc
cmpsl
mov
idivb
mov
xchg
or
xchg
mov
push
or
faddl
loope
rcrb
into
inc
sbb
push
aam
inc
je
out
push
sbb
xor
jl
and
cmp
ja
cli
ret
subl
mov
mov
lods
push
inc
stc
mov
insb
es
sub
pop
dec
sub
into
dec
sbb
clc
add
imul
into
mov
xor
fists
push
sbb
nop
inc
cmp
outsl
cmp
xlat
cmpsb
mov
dec
mov
push
cmpsb
idivl
sbb
or
inc
clc
clc
push
inc
mov
popl
mov
fbstp
in
push
out
lret
pop
xlat
lock
inc
fs
arpl
fstp
lret
test
lret
pop
div
adc
or
repz
sub
sbb
movsl
lret
sub
xor
and
lret
stc
lds
adc
lds
cmp
sti
xor
pop
dec
jp
xchg
pop
test
stos
push
std
inc
inc
xor
scas
cmp
mov
sbb
rcr
pop
in
or
test
rorl
fisubrs
rol
mov
pop
lods
inc
lcall
jg
jp
pop
vmovlps
push
lret
jb
lcall
adc
lds
mov
faddl
cmp
xchg
xor
dec
xchg
adc
lds
mov
xor
pop
andb
xchg
or
cmp
insb
ret
lods
and
adc
and
loopne
xchg
test
push
imul
adc
das
fsubrl
daa
jno
push
int
roll
fnstcw
xchg
dec
out
push
icebp
inc
test
push
ret
cmc
inc
push
addr16
jne
shrd
pop
int3
and
dec
cli
cli
push
lods
mov
fucompp
test
aad
loope
loopne
xchg
xchg
out
sub
and
pop
std
je
jg
sbb
js
scas
out
mov
xlat
cmp
nop
push
or
sub
sete
jmp
in
jecxz
cltd
imul
and
or
adc
push
sbb
js
xchg
mov
mov
into
xlat
mov
or
ja
lea
xor
mov
sub
lock
lods
aad
add
out
into
popl
ds
push
mov
aaa
adc
popa
cli
add
dec
mov
dec
gs
jne
sbb
fdivp
in
fs
jmp
and
mov
cmp
inc
fldt
pop
pop
adc
adc
jl
iret
dec
fdivr
xor
daa
cmp
sub
xor
jl
jbe
nop
scas
pop
rcrb
daa
int
xlat
push
fsubrs
sti
sahf
xchg
sti
hlt
jb
push
dec
cmp
ljmp
xor
pop
pusha
out
mov
lock
sbb
xor
push
mov
and
in
jge
xor
jecxz
aad
repnz
imul
push
inc
jnp
sub
sti
repnz
adc
int3
mov
cwtl
push
mov
xor
xchg
mov
clc
or
loopne
xor
ret
pop
cs
mov
mov
or
jno
sbb
mov
icebp
or
lock
scas
arpl
mov
dec
aas
cmpsb
in
jg
jecxz
and
cwtl
jecxz
lds
add
jno
mov
ss
xor
outsb
out
lea
in
imul
mov
dec
push
push
adc
roll
mov
es
je
dec
ja
repnz
dec
stos
es
sbb
lds
mov
bound
repz
push
cmc
add
xor
mov
cmpsl
shrl
test
mov
xlat
lea
out
cmpsb
xor
add
xchg
pop
roll
xchg
jecxz
test
lret
jg
cmp
lds
cltd
push
mov
and
enter
push
pop
lea
enter
cli
pop
stos
dec
cmpsb
enter
pop
inc
pop
arpl
in
inc
lock
jnp
clc
xor
xchg
addb
mov
repz
pop
aaa
inc
cwtl
jecxz
test
cli
cmpsl
outsl
dec
inc
dec
inc
push
js
gs
fsubrs
testl
jno
fmull
pop
mov
push
shll
adc
shrl
pushf
xor
ljmp
xlat
mov
mov
push
add
cmp
sbb
scas
pusha
xor
ljmp
push
mov
jl
jp
leave
sbb
call
add
cwtl
fbstp
mov
aaa
or
mov
fnstsw
imulb
jmp
popf
jmp
adc
cs
xlat
fadd
fsts
or
xor
and
icebp
xchg
pop
adc
fisttps
insb
shll
movsb
xor
or
push
dec
and
xchg
out
call
and
mov
popf
xchg
sbb
subb
mov
shr
pop
mov
scas
push
hlt
jbe
jmp
into
jb
in
mov
sbb
icebp
push
dec
xlat
cmp
dec
repz
jns
cmpsb
or
arpl
inc
jle
xchg
xor
mov
in
xchg
cmc
movsb
sbb
bound
data16
dec
xor
dec
aas
arpl
movsl
cmpsb
push
bnd
sub
mov
push
cwtl
cltd
std
lcall
xchg
sub
scas
stc
pop
ds
cmp
dec
or
lret
mov
mulb
clc
movsb
cmp
dec
clc
mov
ret
lods
add
lock
push
outsl
nop
idivl
clc
insb
pushl
xchg
adc
pop
mov
pop
cmpsb
mov
mov
mov
std
test
stos
push
fisubrl
sarb
hlt
sub
push
das
negl
dec
xor
dec
sub
mov
push
fsubrl
fdiv
sbb
push
test
gs
fsubr
orb
in
fdivl
test
and
jp
lret
sub
nop
fsubr
push
sbb
xchg
xor
shrb
push
pop
cmp
cmp
repz
lret
sub
loopne
pop
inc
or
xor
jg
icebp
pop
mov
ljmp
fpatan
lds
out
jne
iret
sbb
dec
mov
inc
push
pushf
fisttpl
mov
notl
int3
cmp
hlt
dec
and
int3
xorb
enter
cmc
push
movsb
mov
in
pop
cwtl
fbstp
sub
jb
cmpsl
or
jb
aam
jne
loope
and
fmull
inc
cld
jp
mov
lahf
sub
in
jnp
nop
into
jmp
nop
mov
xor
xchg
jo
sbbb
cs
pop
lds
outsl
fsubr
hlt
cmp
leave
aam
mov
iret
adc
fsts
lods
sar
stc
xchg
and
jmp
lock
adc
sbb
flds
sbb
xchg
mov
push
jnp
mov
xor
fdivrp
stos
aam
add
mov
repz
push
push
xchg
inc
adc
adc
loopne
cli
mov
push
pop
cld
inc
or
adc
stc
inc
imul
inc
stc
xor
addr16
lock
jae
jb
xchg
lret
loope
imull
stos
insl
mov
push
push
pop
sti
rclb
fs
mov
sbb
call
xchg
xchg
cmpsl
stc
test
js
sbb
jb
sub
scas
mov
lods
jg
movsl
jg
test
xor
ja
inc
xor
jp
flds
push
rol
add
mov
push
jnp
std
subl
aaa
ja
adc
add
cwtl
outsb
ret
add
mov
push
fstpl
xlat
addb
repz
sbb
cltd
stos
sbbl
push
mov
ds
jg
push
or
cs
icebp
out
jecxz
jb
loop
mov
pop
add
in
push
lods
jp
out
ss
mov
inc
mov
mulb
std
mov
push
out
pop
xor
and
xchg
xchg
xchg
ljmp
out
stos
add
subb
popa
jle
jge
xchg
mov
mov
sbb
add
int
cmp
pop
xchg
lods
adc
lock
jge
lcall
pop
icebp
sub
push
roll
lret
repnz
das
push
mov
pop
sub
insb
adc
adc
aad
xchg
xor
sub
bound
hlt
cltd
imul
inc
addr16
cli
out
out
lock
mov
iret
rol
mov
sbb
je
or
lods
add
xor
lret
nop
push
push
push
push
mov
or
jae
or
push
jmp
xchg
aaa
sub
pop
lret
add
jne
cld
xor
mov
loope
repnz
fsubrl
xchg
and
cmpsl
repnz
dec
mov
jne
cld
xchg
fisubs
dec
icebp
mov
lods
insl
push
xor
inc
pushf
cmp
sub
jge
inc
repz
scas
insl
mov
jnp
es
outsb
mov
xchg
sar
leave
test
sub
pop
inc
js
imul
setp
les
rcr
rcrl
int3
cmpsl
pop
bound
stos
js
mov
aad
jbe
mov
lock
jg
call
loope
dec
insl
pop
mull
pusha
dec
pop
mov
das
xchg
imul
aas
arpl
mov
test
mov
adc
cltd
inc
jbe
inc
scas
cmp
mov
leave
push
fistpl
mov
ljmp
xorl
imul
iret
icebp
mov
sbb
lock
dec
fists
stc
mov
fwait
dec
shl
mov
decl
shll
and
mov
mov
fisttpl
sbb
scas
xor
jb
push
push
js
cmp
cmp
fcompl
mov
call
test
jmp
sbb
cmp
sti
fbld
es
jne
xlat
sub
stos
push
xchg
pop
dec
add
mov
adc
pop
pop
add
js
test
jp
fbld
mov
popa
cmp
dec
jo
mov
aas
imul
mov
or
daa
push
and
jns
xchg
mov
adc
jo
popf
jno
in
out
pushf
jae
add
not
dec
xchg
xchg
ds
test
mov
gs
xchg
inc
int3
mov
rol
repnz
jg
mov
mov
jg
imul
jae
or
sbb
cmp
or
pop
push
mov
jns
mov
sbb
lods
hlt
or
ret
sub
icebp
popf
and
jge
mov
mov
cmp
pop
clc
in
add
imul
popa
or
jl
les
dec
loop
stos
pop
cmpsb
pushf
xchg
push
in
clc
push
jbe
add
pop
mov
mov
sub
in
scas
in
xor
xchg
jne
xor
push
out
repnz
in
push
push
popa
int3
mov
sti
int3
pop
aam
test
mov
aas
sub
xchg
out
cmp
in
xor
aas
push
xchg
inc
sti
sub
sbb
jge
popf
popf
xchg
iret
sub
jg
push
test
ljmp
mov
xchg
inc
iret
mov
cmp
inc
add
dec
mov
pop
add
insb
mov
push
orb
xchg
dec
fnsave
and
es
dec
addr16
lock
adc
lods
inc
push
sbb
pop
clc
stc
mov
push
add
push
jg
lret
mov
adc
dec
and
xor
or
dec
arpl
xchg
inc
pmaxub
sbb
lods
mov
xor
jecxz
in
cli
mov
loope
test
xchg
mov
jmp
jg
mov
adc
mov
mov
mov
test
stos
or
mov
negb
xchg
ljmp
and
jle
fnsave
sahf
jb
iret
push
sbb
addb
aaa
loopne
mov
out
addr16
jae
sub
div
ljmp
leave
les
lahf
addr16
pop
popf
dec
ret
inc
icebp
movsb
xchg
aam
push
jecxz
cmp
loope
shlb
pusha
add
push
stos
jl
sbb
test
nop
aad
out
pop
mov
adc
into
cmpsb
push
add
xor
inc
add
bound
pop
pop
add
stc
sub
sub
adcl
mov
and
mov
stc
push
aad
xor
bsf
repnz
lods
int3
adc
sbb
add
fwait
repz
add
dec
mull
jle
lods
cltd
scas
mov
sub
call
pop
jae
push
pop
mov
jae
and
loopne
int
ret
add
jg
jge
lret
xor
mov
and
push
or
adc
push
stc
inc
pop
push
out
in
mov
mov
sbb
clc
sbb
mov
and
fistpll
and
scas
pop
dec
or
int
std
sarl
jp
push
leave
ficoms
stos
and
imul
in
mov
dec
and
add
xchg
cmp
push
sub
ljmp
sub
mov
dec
lods
cmp
sub
repnz
add
pop
addr16
imulb
es
mov
mov
scas
sahf
xor
clc
jle
xor
xor
jno
insb
xchg
outsb
pop
sbb
ljmp
stc
imul
popf
lret
dec
dec
cmc
xchg
sub
and
int
push
adc
popf
jecxz
hlt
int
out
mov
inc
ss
frstor
ret
pop
push
fistpll
test
fisttpl
xor
xor
push
fnstenv
lret
popa
xchg
dec
push
add
inc
sbb
mov
test
mov
pop
pop
idivb
cltd
xor
nop
lods
pop
jo
cmp
mov
or
mov
gs
in
xor
adc
iret
repnz
mov
add
std
add
xchg
xchg
mov
sbb
mov
jno
gs
arpl
jp
xchg
pop
pop
in
daa
jnp
xor
and
rcll
das
mov
mov
divl
or
sub
sub
jle
inc
cmpsl
lock
setp
fcompl
pop
cmc
jnp
mov
int3
fmull
std
xchg
and
adc
inc
jmp
je
stc
jae
add
mov
in
test
movsl
das
add
aaa
es
pop
sbb
adc
mov
jae
xchg
jne
std
orl
jge
pop
int3
pop
push
push
rcll
stc
popl
cmp
sub
shlb
out
cmp
mov
mov
jp
rcrl
jle
push
scas
or
and
fists
or
imul
mov
icebp
pop
fs
pushl
jmp
xchg
mov
cmp
in
lahf
sub
jl
imul
xchg
lods
in
mov
call
scas
mov
loop
and
mov
xchg
or
imul
scas
iret
jge
insb
repz
sti
test
dec
lods
imul
sub
daa
push
fmul
iret
sarl
cwtl
loop
mov
dec
repnz
loope
stos
aam
mov
daa
repz
adc
mov
push
cmc
addb
ss
push
pop
sub
addr16
add
aaa
push
sub
sarl
inc
shrl
mov
xor
inc
mov
mov
dec
cmp
inc
fldl
fwait
adc
jge
adc
mov
arpl
mov
daa
bound
stos
rcrl
push
popf
scas
rorl
addr16
dec
jmp
push
adc
mov
inc
into
sbb
xor
push
mov
loop
or
inc
loopne
repnz
jno
sti
loope
sub
inc
ficoml
mov
ret
hlt
or
ret
inc
imul
sbb
or
sub
and
dec
ret
xchg
je
push
mov
mov
mov
in
dec
xor
push
lahf
inc
jg
ret
sub
xchg
push
arpl
lods
cmp
jecxz
mov
fistl
les
sarb
lea
idivl
enter
pslld
mov
pop
mov
call
push
fildll
push
fwait
sahf
bound
push
faddl
cmp
push
mov
fdivrs
subb
addr16
xchg
ret
aas
xor
pop
pop
adc
push
shr
lds
push
pop
push
out
jb
push
cmpsb
imul
pop
rcl
movsb
mov
dec
pop
dec
sub
shrb
pop
ficoms
lret
inc
pop
mov
in
in
jns
cmp
inc
andb
xchg
arpl
mov
cmp
movsl
dec
movsb
dec
dec
fld
je
jne
push
mov
adc
mov
pop
jnp
jg
arpl
mov
and
mov
jle
insb
fwait
stos
adc
adc
pusha
push
insb
and
into
pop
std
mov
push
inc
adc
push
cmpsb
or
sbb
or
xchg
or
in
xchg
test
xchg
mov
jg
dec
mov
jnp
pop
add
push
pop
mov
loop
and
sbb
cltd
ss
mov
cmp
fidivrs
jbe
nop
cmpsb
dec
int3
cmp
xchg
lret
cmp
or
in
mov
imul
mov
cmp
xor
in
dec
jnp
imul
or
outsl
loopne
jp
cmpsb
inc
movsl
test
loop
mov
mov
mov
cmpsl
xchg
jmp
popf
in
or
mov
enter
stos
stos
fwait
imul
push
and
stos
mov
outsb
jnp
or
add
dec
lods
cmp
cmpsb
mov
in
pushf
xchg
fs
int
stos
cld
into
stos
dec
or
adc
movb
pop
lea
test
sbb
call
jle
aaa
dec
xor
leave
push
and
lods
inc
pop
out
movsl
adc
sub
scas
adc
cmpsl
jge
adc
cmp
or
mov
ds
imull
dec
scas
movlps
cld
cmp
sbb
lret
jns
lods
push
xorl
xchg
xchg
shl
pusha
add
add
cltd
lahf
aaa
add
lods
sbb
xchg
push
mov
sahf
inc
int3
mov
mov
fucomp
mov
mov
fcoms
repnz
dec
addr16
fstps
shlb
in
xchg
sbb
std
daa
pop
aas
sub
mov
mov
jle
sub
xorl
scas
add
cmp
ss
push
testb
ss
inc
and
sub
scas
outsl
add
clc
sbb
and
mov
xlat
fs
or
bound
pop
sbb
inc
mov
pop
xorb
push
and
mov
pop
test
rclb
mov
pop
mov
xlat
dec
fwait
iret
ret
mov
mov
insb
inc
fisubrl
jp
jle
mov
xchg
xchg
or
sub
lret
into
or
inc
enter
scas
aad
jne
into
mov
fstps
push
test
jno
int
inc
dec
icebp
cmp
fsubr
mov
xchg
arpl
test
or
fidivrl
adc
inc
mov
out
push
fisubs
imul
dec
or
js
std
rclb
dec
rcl
jbe
enter
cmp
sub
dec
inc
inc
std
pop
pop
stos
shlb
sti
push
xchg
jae
out
and
pop
inc
add
aas
push
cli
popa
dec
fisttpll
sbb
pusha
cmp
dec
add
aas
fsubs
out
insb
or
out
jge
in
hlt
imul
xchg
mov
jl
pusha
pop
into
cmpl
jae
push
mov
jecxz
js
push
adc
fcmovnu
inc
ja
mov
test
jo
push
fisubs
fs
xor
fcoms
fs
mov
out
rcrl
fcoms
lret
cmp
lock
cltd
ret
inc
stos
loope
jp
or
pusha
and
fists
outsl
push
cmpsl
pop
xor
fldl
call
inc
or
mov
mov
push
mov
fisubrl
mov
push
cwtl
movb
sub
xchg
addb
or
jmp
sbb
inc
stos
cmpsb
lock
jg
sbb
repz
dec
cld
push
or
fildl
dec
std
pop
aas
push
in
shlb
popa
cld
inc
inc
insb
fcmovnu
test
loopne
inc
push
push
add
cwtl
out
xor
das
lret
mov
stos
xchg
out
or
jmp
lods
pop
mov
inc
jecxz
imul
nop
int3
rorb
nop
lods
push
mov
leave
push
jge
mov
lcall
test
das
roll
imul
bound
mov
mov
dec
decb
or
push
leave
push
jge
add
cmp
not
and
adc
xor
fidivl
mov
shl
jb
test
pop
pop
cmpsb
cmp
sbb
adc
xor
in
jnp
ds
outsb
sbb
jg
int
int
imul
fucom
stc
popa
dec
in
sbb
inc
aas
ds
mov
fidivrl
daa
and
and
jp
fs
fwait
sarb
roll
bnd
pop
sahf
loope
jp
mov
movsl
xchg
lea
cmp
mov
push
insb
jge
mov
aam
add
and
push
popf
mov
push
arpl
sbb
mov
mov
nop
inc
mov
movsb
mov
sub
mov
mov
xor
jmp
es
jae
repnz
xor
or
out
popa
push
iret
xor
loopne
sbb
push
ja
mov
jge
fs
shll
dec
jae
arpl
int
inc
repnz
loope
aaa
orl
je
sbb
jmp
pusha
and
push
out
int
movsl
dec
addr16
add
add
aas
push
test
sub
and
jno
imul
xchg
js
movsl
xchg
pop
aaa
sahf
push
xchg
cmp
dec
or
mov
xchg
xor
dec
sub
adc
icebp
rcrl
pop
jbe
leave
xchg
es
pop
sbb
sub
add
test
cmp
insb
jnp
sbb
pop
ss
test
test
das
jne
iret
std
inc
jae
dec
mov
call
pop
push
inc
int3
ret
roll
xor
das
lea
clc
jne
jnp
sbb
mov
push
sar
fucomi
dec
cmp
stos
mov
mov
gs
dec
rolb
add
lret
test
cwtl
hlt
fwait
lds
subl
popf
inc
rcrb
dec
pushf
bound
xchg
mov
sbb
or
adc
subb
sarb
mov
xchg
and
popa
das
jecxz
hlt
pop
adc
add
stc
jle
mov
rep
repz
mov
pusha
nop
mov
cmp
cltd
add
inc
scas
addl
lods
mov
jbe
test
push
mov
xchg
ret
adc
cmp
mov
pop
sub
ljmp
lcall
lods
int
mov
das
call
cmc
arpl
jge
push
push
mov
mov
dec
ss
int3
push
mov
mov
mov
hlt
cld
cmp
cmpsb
js
xor
mov
pusha
xchg
jp
lcall
fwait
mov
mov
sub
mov
lcall
outsl
lret
mov
jbe
repz
icebp
mov
rcr
stc
sub
mov
inc
or
ds
out
jge
pushf
jg
xor
neg
mov
push
sbb
push
andb
cli
pusha
and
mov
mov
pop
pop
xchg
sbbl
adc
sub
les
dec
shrb
cwtl
lock
cli
daa
imul
mov
push
outsl
cmovo
jl
and
addr16
mov
loop
imul
imul
fs
mov
outsb
push
add
shlb
in
lret
outsl
mov
mov
fmuls
imul
xchg
jl
addr16
cmc
mov
xchg
or
mov
movb
pop
xor
cmpsb
int3
ljmp
fwait
mov
pop
das
addl
test
dec
pop
adc
loope
clc
mull
out
aaa
push
mov
xor
adc
in
jbe
jno
xor
mov
inc
clc
sbb
sbb
sbb
shr
scas
mov
push
xchg
fistpll
aas
xchg
dec
lcall
xchg
cld
retw
aam
and
icebp
shll
mov
and
in
repz
dec
adc
rolb
mov
mov
add
lods
inc
push
mov
mov
push
pop
in
mov
cmp
xor
pop
sub
xchg
jmp
mull
xchg
sub
ret
dec
jnp
jb
out
cmpsl
ficompl
and
clc
movsb
add
sbb
mov
cmp
adc
imul
inc
add
sub
repnz
pop
outsl
xor
cbtw
lcall
cmp
sbb
push
pop
fcomps
data16
stc
mov
and
out
mov
jmp
mov
cvtpi2ps
jnp
cmp
sub
mov
xor
inc
mov
xchg
jae
mov
test
test
mov
dec
inc
sbb
xor
sub
aam
xchg
sub
mov
repz
inc
jle
mov
mov
or
jnp
mov
add
jg
mov
jb
dec
fwait
push
movsl
std
aam
scas
notl
jne
or
jb
mov
jne
pushf
fstl
pop
jge,pt
repnz
stos
xor
movsb
movsb
and
add
fwait
aam
pushf
movsb
mov
lcall
jmp
aaa
push
je
popa
push
inc
iret
and
or
jp
inc
push
or
int
mov
mov
lods
jp
jae
and
test
outsb
pshufw
push
jmp
cmp
and
lret
imul
andb
outsb
lahf
icebp
fs
mov
lret
inc
or
pop
cmc
aas
leave
rep
jno
das
mov
xchg
call
and
mov
mov
cmp
xor
adc
sub
in
lahf
inc
subl
mov
jge
into
adc
mov
xchg
fiaddl
je
loop
adc
lods
xor
out
mov
mov
xchg
and
cli
repnz
adc
cmp
dec
xchg
add
js
testb
ret
and
xchg
scas
scas
and
movsb
push
es
call
push
gs
fs
and
adc
cwtl
test
mov
xchg
pop
push
dec
daa
in
jno
and
lods
cwtl
aam
cmp
pop
imul
dec
cmp
push
data16
lret
dec
loope
mov
mov
mov
mov
jae
jmp
pop
xchg
in
jmp
mov
icebp
pop
insb
pop
cmc
ds
mov
test
fadd
sub
not
xchg
andl
jmp
jg
ljmp
push
in
sbb
fcmovb
data16
in
xchg
pusha
out
fwait
mov
scas
fdivrp
adc
xchg
popf
adc
xchg
ja
pop
arpl
mov
je
repnz
sbb
add
rclb
adc
push
push
movsb
int
sarb
insb
mov
pop
test
inc
in
dec
cltd
insb
xor
out
xlat
pop
ljmp
inc
loope
in
daa
movsl
ja
dec
xchg
enter
push
mov
or
push
mov
sahf
mov
jecxz
and
idivl
adc
add
mov
fbstp
mov
inc
push
jnp
or
jle
mov
mov
fstps
pusha
jmp
int
mov
daa
popf
inc
push
ja
aad
adc
xor
xor
push
push
sub
fcoms
push
icebp
cmpsb
push
imul
xchg
xchg
xor
lock
xor
cltd
push
mov
adc
cmpl
ret
or
mov
test
inc
adc
filds
js
inc
mov
pop
and
fcmovnb
dec
push
adc
sbb
inc
nop
arpl
jno
xchg
jg
xchg
push
jno
dec
add
fwait
push
adc
test
jne
or
push
sub
imul
jmp
mov
xchg
int3
sarl
mov
pushf
enter
pop
jle
outsb
lcall
push
adc
bound
test
mov
daa
lods
cli
int
stc
add
sti
push
ret
adcb
add
push
xor
xchg
shlb
out
mov
out
sahf
dec
jl
jmp
lret
mov
out
and
adc
divl
data16
mov
jno
call
shll
aaa
jle
push
pop
sub
pop
cmc
mov
ljmp
jecxz
out
sbb
ljmp
addr16
mov
jno
mov
enter
push
dec
and
std
push
stos
incl
bound
test
mov
and
adc
mov
add
and
cmpl
inc
call
in
push
jo
call
shll
pop
sub
dec
neg
pop
clc
pop
movl
cmp
arpl
lods
fmul
cmpsl
push
dec
lock
ds
jge
inc
std
push
push
xor
lret
aaa
sbb
shrl
push
fdivs
push
cmpsb
aaa
adc
fistps
push
ja
out
jle
aas
and
inc
cmp
inc
inc
adcl
jbe
mov
js
pop
aas
push
fs
daa
mov
sbb
jb
lret
cmp
xlat
sub
test
frstor
fldenv
jge
mov
mov
cmp
mov
mov
sbb
xlat
mov
cmp
shrb
in
lret
or
xchg
inc
loop
shrl
int
lea
add
mov
cmc
dec
jecxz
cmpb
cmp
sbb
pop
cmp
lahf
shlb
dec
or
pusha
ss
leave
push
jmp
cmpsl
insb
mov
push
xorl
jmp
pusha
pop
push
rol
outsl
jmp
imul
mov
sub
dec
pop
test
add
addb
cmpsb
popl
test
movsl
add
or
adc
sub
xchg
dec
data16
test
mov
loop
das
adcl
or
clc
cwtl
inc
add
cmp
mov
subl
loope
dec
scas
adc
mov
dec
addl
mov
jnp
movsb
pop
adc
out
jp
pop
fistpl
out
iret
insb
jo
fcoml
fcoml
adc
add
sbb
cmp
lods
fcmovbe
neg
adc
sbb
lahf
ss
jmp
cld
fbstp
mov
testb
testb
loop
outsb
xchg
rol
sub
mov
dec
fldl
out
jecxz
cmpsl
xchg
and
xorl
push
rorl
push
jle
or
jl
cltd
shrl
sti
cli
pop
aam
lods
and
arpl
inc
pop
dec
stc
sbb
imul
sahf
xchg
insb
in
fdiv
adc
cmpsb
scas
roll
push
inc
inc
mov
cmp
rorl
adc
jo
xor
and
inc
fsts
mov
mov
aaa
push
jp
cltd
std
mov
mov
cmpsb
jg
or
dec
faddl
je
xor
dec
lea
pop
xor
sub
dec
fnsave
and
add
sub
push
xor
dec
jns
notb
jmp
push
js
jae
ljmp
cs
push
cmp
decb
aaa
scas
test
insb
mov
pop
mov
dec
lock
adc
mov
adc
inc
push
xchg
scas
inc
insb
and
iret
test
int
test
clc
cltd
repz
push
sti
adc
cmp
int3
inc
sub
or
push
adc
jmp
xchg
jo
pop
ss
out
insb
hlt
std
push
pop
jae
cmp
sub
out
sub
jbe
aam
cmpsl
inc
sarb
test
outsl
jle
rorl
pop
bound
rcrb
insb
mov
ret
jb
aas
ror
pop
cltd
data16
sbb
fimuls
fwait
lock
ds
clc
loopne
lea
dec
cltd
add
xor
cmc
xlat
jmp
cmp
ret
push
jmp
add
pop
sbb
lds
movsl
nop
jmp
daa
rorb
movsl
inc
fmuls
cld
leave
push
outsb
scas
xchg
movsl
inc
iret
aas
sbb
adc
xor
dec
cld
cwtl
cwtl
movsl
sub
movsl
nop
and
push
xchg
test
and
mov
fdivrl
xchg
fsubs
es
push
ds
sbb
call
lahf
pushl
loope
sub
aam
leave
push
ja
jge
sub
jns
ljmp
inc
test
mov
or
adc
xor
dec
jmp
ret
sub
sbb
add
lods
cltd
adc
cmp
cli
es
rcll
adc
dec
mov
mov
ljmp
pop
mov
cmp
pop
daa
out
repz
in
mov
push
jb
xchg
mov
add
cli
pop
lret
add
movsl
push
mov
lahf
inc
loope
cmp
push
fs
test
std
pop
and
and
sub
pop
push
sti
cld
xor
inc
sbb
dec
xchg
inc
adc
out
mov
add
xchg
scas
xchg
loop
push
push
aas
std
icebp
iret
mov
xchg
jl
lds
pop
or
xor
loop
lcall
adc
fwait
xor
mov
mov
bswap
jp
lcall
scas
dec
xchg
lock
in
inc
adc
aaa
mov
mov
imul
xor
rorb
dec
cmp
loopne
movsb
push
xor
stos
cmc
dec
imul
js
cltd
add
xor
out
cmc
fs
cmp
and
dec
in
xor
pusha
cs
sub
jno
push
iret
bound
add
shrb
jns
mov
push
scas
mov
mov
mov
adc
inc
addb
mov
fildll
or
mov
cmp
xor
inc
mov
movsb
stos
dec
in
inc
ret
pop
dec
xlat
outsb
in
sti
and
mov
add
pop
sti
lret
std
ficompl
in
rolb
or
test
adc
add
sar
xor
sub
lret
aad
scas
mov
jge
add
repnz
dec
icebp
inc
cmp
sahf
xor
daa
push
popa
fadds
mov
xchg
lea
xchg
test
in
cmpb
rcll
push
mov
lds
stc
mov
pop
rcll
icebp
cs
inc
dec
and
xor
push
mov
ja
daa
sbb
jo
add
movsb
outsb
inc
xchg
ds
lock
xchg
mov
mov
xchg
shlb
lret
stc
sbb
add
je
cmp
int3
and
gs
xor
sbb
inc
xchg
sbb
mov
and
or
dec
rorb
in
pop
fisubrl
sti
arpl
aaa
and
in
insb
mov
add
mov
js
stos
mov
mov
lret
cmpsl
pop
push
lds
scas
faddl
in
insl
xorb
jno
cmpsl
out
mov
adc
test
pop
xchg
pushf
sub
mov
push
fbstp
aas
gs
add
aad
dec
inc
mov
mov
jg
gs
mov
xchg
xlat
mov
add
mov
das
stc
xchg
popf
test
dec
cmp
inc
sub
out
sub
lea
call
cmp
jge
mov
mov
mov
pushf
adc
cld
push
xchg
cwtl
dec
mov
aaa
lods
ret
in
rol
sahf
js
sub
out
shl
push
mov
mov
imul
insl
bound
add
pop
cld
mov
cmp
sbb
sbb
pop
pop
pop
addr16
pop
cmp
decb
jnp
js
out
mov
cmpsl
leavew
pop
push
inc
cmp
xor
cmp
fwait
mov
es
xor
sbb
lea
mov
iret
test
fmuls
std
fimuls
mov
mov
xchg
jae
and
jle
lret
pop
sub
pop
lds
iret
jl
sbb
lods
ret
xor
pop
xlat
xchg
jmp
xchg
add
call
mov
cmp
rorb
xchg
cmp
xchg
aam
or
mov
fiaddl
fmulp
inc
pop
loope
add
mov
scas
dec
stos
and
js
lds
out
push
or
add
scas
mov
ficoml
cmp
lret
pop
add
xchg
loope
lahf
mov
mov
mov
sbb
xlat
pop
mov
pop
fimuls
out
lret
jp
or
mov
insl
out
add
nop
fdivl
daa
mov
xlat
xor
pop
inc
sbb
test
push
stos
mov
push
add
inc
mov
daa
xchg
jge
pop
inc
mov
test
jmp
cld
dec
or
xor
jnp
aas
mov
inc
mov
popa
sbb
fwait
and
das
sub
lcall
push
jne
and
rol
les
inc
push
add
cmp
bound
sub
inc
es
mov
insl
lcall
rolb
push
pop
xor
inc
mov
mov
pop
andb
pop
incl
subl
push
lods
sub
mov
lcall
xor
sahf
pop
lcall
aaa
sbb
mov
lcall
imul
std
dec
and
je
gs
or
mov
mov
cs
cltd
insl
push
and
mov
fisubrs
adc
imul
ljmp
outsb
cmp
mov
push
das
lods
test
xchg
testl
or
cmpsb
cmp
inc
arpl
outsb
jge
shl
jg
lds
dec
lret
fcmovbe
das
push
push
shrl
flds
or
sub
add
clc
cld
xchg
jno
enter
addr16
gs
iret
cmc
ror
or
outsl
inc
jle
xchg
in
push
xor
mov
movl
test
in
pop
lret
push
dec
dec
stc
jne
or
addr16
pop
mov
jb
hlt
jne
jns
pusha
mov
in
sbb
es
movsl
lret
in
subb
xchg
fiaddl
xor
xchg
and
out
cltd
sahf
sub
sbb
cmp
in
data16
in
cmp
movsb
sti
or
mov
rcrb
arpl
mov
cli
scas
loope
out
or
ja
sbb
nop
sbb
std
xchg
aad
mov
jmp
ja
pinsrw
outsb
sub
xlat
jno
cs
jge
xchg
jle
xchg
test
addb
jo
sbb
mov
inc
nop
xor
imull
std
sbb
fnstsw
movsl
adc
andb
jecxz
sub
xchg
stos
clc
stc
and
sub
cs
pop
test
pop
pop
adc
cld
arpl
push
pop
test
jne
sbb
jbe
xchg
jo
xchg
pop
and
das
push
jae
daa
fs
mov
mov
lret
leave
std
clc
mov
daa
pop
lahf
xrelease
xchg
cltd
sub
cmpsb
jmp
cli
leave
fcomip
adcb
add
lds
cmp
or
mov
fsts
jp
test
loop
rcrb
pop
jne
xor
inc
cmpsl
loopne
adc
dec
in
adc
mov
mov
fbld
mov
cmp
dec
or
push
jne
mov
cmp
bound
out
inc
push
push
ds
push
xor
fs
jbe
cli
sub
addr16
clc
mov
pop
pop
cmp
jns
sbb
xor
adc
add
sahf
mov
fcompl
leave
jmp
inc
push
jns
imul
and
bound
mov
mov
cmp
mov
mov
dec
adc
xor
mov
fdivr
jle
sub
mov
sub
add
push
cmp
pop
dec
mov
adc
in
pop
inc
mov
and
xor
push
jo
inc
cmpsl
cmp
sub
es
das
cmp
in
adc
jecxz
lods
cld
setns
push
mov
add
sti
repz
test
fists
pop
enter
jne
xor
in
adc
jnp
mov
cld
aaa
aam
xchg
bound
lods
add
cmc
jle
iret
in
lret
ds
inc
jmp
mov
lcall
mov
or
stos
jne
xchg
jne
sbb
and
dec
adc
sub
outsl
jg
jg
fimull
rclb
push
in
adc
and
sub
sti
aad
jecxz
popl
jge
dec
in
decl
and
xchg
sub
fs
adc
fisubl
xchg
stos
int3
sti
out
sub
push
add
shrl
fwait
arpl
push
not
rcll
xor
mov
push
dec
adc
lods
dec
test
and
mov
divl
data16
push
out
push
mov
mov
aam
aad
xorl
xor
xor
pop
mov
dec
xor
jo
mov
cld
add
push
adc
mov
in
repnz
out
iret
pop
lret
in
sbb
xor
push
ficoms
rorb
pop
stos
mov
mov
jg
mov
xorl
push
frstor
jmp
test
int3
mov
loop
cltd
xchg
sbb
lods
fistps
jge
mov
popf
adc
mov
sub
leave
test
flds
outsl
idivl
std
nop
outsl
pop
xor
fcoml
ror
test
ja
mov
test
xlat
in
movsl
inc
flds
push
adc
xor
mov
mov
fcmovnb
xchg
inc
xor
fimull
dec
mov
cmp
arpl
nop
adc
cld
jb
cs
repz
add
popf
inc
loope
and
sub
xchg
loope
jp
xchg
add
mov
push
mov
rolb
lahf
lods
sbb
cli
mov
insl
cmc
xadd
xor
pop
jge
xor
outsb
jl
insl
mov
mov
iret
outsb
add
dec
sbb
or
fsubl
mov
push
stos
imul
cmpsb
in
cld
inc
cmpsl
repz
lcall
sub
mov
jp
and
nop
dec
add
ss
insl
int
cwtl
push
mov
cmpl
int3
dec
push
or
outsl
fidivrl
mov
stos
sti
sbb
stos
scas
mov
xchg
jo
fidivrl
xchg
inc
xchg
mov
sbb
inc
stos
pop
and
mov
pop
hlt
sahf
and
daa
inc
xlat
js
dec
and
out
out
push
jnp
add
jl
pop
int3
pop
xor
and
in
mov
push
popf
push
lret
inc
inc
ss
push
xor
ss
imul
mov
and
jl
mov
movsl
or
inc
icebp
or
jnp
mov
pop
push
sarb
mov
push
mov
div
jg
push
pop
cmp
push
pop
or
dec
mov
ret
inc
push
das
lret
fildl
push
push
mov
xchg
scas
int
push
push
and
cli
or
fsubs
imul
and
sub
ret
out
push
daa
push
fidivrl
jns
stos
sbbb
mov
xor
lahf
imull
icebp
popa
gs
insb
std
fsubrp
arpl
or
es
adc
ljmp
pusha
mov
or
pop
dec
mov
out
jge
andb
repnz
je
mov
daa
movsb
cmp
out
scas
jb
push
in
shl
test
leave
imul
dec
int
pop
push
jmp
in
into
cld
lea
pop
dec
pop
cwtl
lock
lahf
inc
cli
push
andl
out
repnz
pop
fwait
pop
iret
add
inc
shrl
ja
loop
or
cmpsl
sub
sbb
lahf
xchg
push
leave
imul
icebp
mov
sti
mov
xchg
shl
cld
xchg
mov
and
cmpl
leave
aad
xorl
lahf
cmp
jbe
mov
push
cmp
mov
fisubs
das
and
adc
push
cltd
lahf
mov
fwait
sub
rorl
popa
jg
sub
les
pushf
sbb
xor
adc
hlt
sbb
jns
sub
xlat
shll
loop
imul
sbb
lea
std
inc
mov
cmp
push
inc
push
dec
sub
jmp
daa
xor
push
dec
jbe
jl
xor
pop
js
xor
cmp
mov
mov
pop
dec
and
add
cld
jno
push
adc
push
sahf
je
ret
rcll
inc
decl
icebp
mov
flds
imul
in
add
jae
mov
jne
inc
xchg
xor
aad
nop
inc
adc
cwtl
pushf
aam
adc
notb
adc
inc
imul
cmp
pushf
add
cltd
mov
push
xor
lcall
push
in
and
sbb
movsl
pop
out
push
sbbl
roll
leave
pop
jmp
mov
pop
ja
cmp
or
lahf
out
pop
sub
mov
xor
cmpsl
mov
addr16
test
sbb
jle
adc
mov
f2xm1
test
jecxz
dec
adc
sbb
mov
cmp
fnstsw
mov
mov
clc
clc
imul
in
cmp
mov
aaa
xchg
jmp
test
pop
inc
mov
add
dec
mov
into
sub
and
test
out
inc
ret
das
mov
insb
mov
inc
scas
mov
rorb
jb
jnp
out
or
movsl
jl
cltd
xchg
mov
aas
mov
mov
pop
repz
dec
and
jno
mov
push
fists
inc
dec
sbb
ret
or
fcmovnu
gs
inc
xor
inc
out
adc
imul
sbb
iret
xor
add
repnz
push
leave
xor
div
ss
jns
inc
cwtl
push
push
jg
int
dec
sub
imul
mov
in
mov
mov
repz
stc
fs
mov
or
shr
xchg
test
mov
xchg
scas
push
js
mov
xchg
and
lcall
cmp
adc
fwait
lcall
push
xchg
and
inc
mov
dec
cli
fcompl
sub
rcll
imul
sbb
lock
repnz
pushf
xchg
pop
je
dec
sbb
cmp
cli
fcompl
jmp
or
dec
clc
mov
test
movsb
ret
sbb
cmp
sahf
jae
aam
sarb
cmpsb
mov
leave
movl
test
mov
mov
sub
fsubs
cltd
ffree
xor
and
mov
clc
pop
dec
insb
inc
lock
insb
mov
inc
or
fnstsw
mov
adc
into
push
mov
cmp
push
or
cmp
add
scas
cmp
out
ljmp
jo
cmp
push
or
scas
cli
clc
jb
dec
lods
adc
xchg
cmp
mov
loope
fisttps
movsl
call
dec
bound
movsb
mov
xor
std
daa
adc
xlat
xchg
mov
mov
mov
add
scas
test
aaa
je
ret
mov
pop
xor
jmp
rolb
aam
ret
into
pop
and
loop
add
popf
jmp
cmp
sbb
aam
jle
cltd
outsb
pop
mov
scas
in
negl
mov
push
bound
ror
lds
aad
mov
push
shlb
and
mov
loope
repz
adc
mov
cli
jns
xchg
pop
xlat
iret
pop
je
xchg
inc
hlt
adc
mov
push
fdivs
hlt
repz
ja
or
in
int3
add
xchg
jns
sub
mov
mov
shl
jg
es
pop
xor
stos
sbb
shll
nop
jo
es
sbb
clc
or
enter
dec
nop
dec
dec
outsb
dec
test
add
lds
sub
xor
mov
sbb
jecxz
push
pop
sub
pop
aam
and
test
pop
fwait
stos
movsb
push
mov
inc
leave
pop
je
imull
orl
pop
test
xchg
sub
mov
stc
xchg
test
inc
pushl
mov
rorl
add
mov
mov
gs
addr16
xchg
sahf
mov
sub
in
daa
jns
pop
cmp
pop
les
sub
mov
orb
scas
int
pop
push
insb
shrl
mov
sbb
xor
or
cli
mov
push
outsb
lock
adc
or
nop
dec
cwtl
arpl
xor
mov
lret
push
inc
xchg
jle
adc
add
fdivr
dec
int
js
dec
push
pop
or
cs
pushl
mov
lds
and
sbb
mov
out
mov
jb
loopne
cmp
push
cwtl
stos
sbb
lods
mov
pop
xchg
fwait
and
pop
outsl
js
mov
xchg
test
mov
cwtl
mov
popa
jo
jle
ret
lea
fmull
cmp
cmp
adc
mov
xchg
fsubl
mov
mov
loope
in
test
mov
fldl
dec
rcrl
insl
cli
shl
rcll
jg
adc
jb
ret
std
inc
jecxz
in
shr
mov
push
xor
test
div
pop
adc
jbe
cmp
fs
es
inc
adc
push
inc
out
gs
push
lods
sbb
lods
adc
cmp
sbbb
fwait
mov
sub
add
dec
stos
push
or
fildl
aad
pop
mov
or
and
push
push
mov
lds
das
or
xchg
xor
sub
sbb
leave
and
repnz
dec
push
mov
xor
inc
inc
sbb
and
lock
and
sub
adc
subb
inc
sub
and
hlt
add
dec
imul
mov
mov
hlt
mov
ds
push
and
inc
insb
pop
cmpsl
fbld
out
pop
adc
sti
jae
mov
lahf
jmp
or
xor
mov
sub
stos
cmp
inc
adc
mov
iret
pushf
and
lret
mov
nop
aad
pushf
cmp
aaa
jecxz
fwait
push
mov
sarb
inc
xchg
out
push
jmp
test
sub
je
jle
inc
add
jmp
ret
cmp
je
pop
ret
dec
hlt
pop
dec
lcall
jmp
sti
jno
outsl
cmpsb
rclb
ljmp
inc
insl
das
test
mov
rcrb
dec
jb
mov
or
cwtl
push
test
mov
xor
int
fstpt
lret
stos
outsl
pushf
bnd
or
pop
pushf
dec
sbb
push
ja
pop
mov
push
pop
fdivr
jmp
sub
fdivrl
imul
add
daa
and
or
jmp
cmp
iret
mov
enter
stos
or
sub
aaa
adc
in
fidivrl
into
test
adc
cmp
aaa
sub
mov
jns
and
add
push
sub
or
xchg
cld
loop
lret
je
pop
adc
cmc
mov
aas
cli
xchg
inc
or
jge
mov
shl
sbb
mov
stos
xor
mov
cmp
add
pop
pop
shr
mov
fadd
xor
les
stos
mov
xor
test
adc
test
cs
into
lods
loope
insl
cmp
fldl
psllq
pop
addr16
and
xchg
or
rcrb
jne
pop
or
lods
ja
shrb
add
push
or
push
popa
fidivl
dec
jg
cmp
sub
je
cld
gs
scas
and
inc
stos
jg
fistpl
sbb
outsl
push
icebp
push
inc
cmpsl
pand
mov
push
pusha
les
inc
mov
jns
into
leave
test
xor
insl
jnp
test
lret
xchg
push
jle
xchg
add
jo
hlt
sub
out
in
xor
es
repz
in
jbe,pt
je
adc
push
pop
sahf
xor
icebp
aaa
mov
sbb
inc
cmc
xor
cmp
adc
push
inc
jp
insb
inc
test
jp
mov
mov
mov
minps
jg
movsl
pop
shll
call
fisubs
push
std
adc
dec
mov
ss
xor
cld
out
cmp
das
adc
ret
xor
xchg
mov
test
test
orb
stos
unpckhps
andb
xchg
mov
repnz
xchg
or
cmpb
mov
popa
mov
pushf
in
loopne
rclb
sub
fcompl
addr16
ret
pop
ret
inc
int
push
adc
inc
push
and
xchg
xchg
es
ss
mov
mov
jnp
cmp
inc
sahf
js
pop
addr16
insb
jmp
popa
ret
insb
cmp
es
fbstp
inc
in
in
test
sahf
hlt
mov
and
addr16
or
fldl
bound
call
das
idivb
sarl
repz
aaa
lcall
mov
dec
jae
adc
jb
in
xor
aad
mov
js
mov
bound
or
pop
movsl
cmp
mov
scas
test
xlat
mov
dec
orb
int3
push
int3
dec
stc
daa
mov
out
mov
rorb
rcrb
jp
cli
dec
rol
sbb
negb
cli
xchg
test
xlat
adc
jmp
inc
xlat
cltd
insb
cmpsl
push
fwait
cmp
rorl
fildl
enter
jmp
adc
clc
out
mov
and
push
pop
aas
inc
push
rorl
testb
cli
lock
dec
xchg
xor
ljmp
fdivrs
mov
or
mov
xor
cmp
jno
cmp
repnz
jmp
sub
andl
jmp
dec
aad
sbb
cmc
push
sub
bound
pop
ret
mov
std
dec
adc
jl
push
sbb
testl
das
jnp
fs
adc
inc
mov
nop
sub
jg
push
sbb
scas
movsl
fwait
pusha
jge
and
xor
mov
ror
andl
fwait
mov
enter
jbe
fmuls
std
vprotq
insb
dec
gs
add
push
adcl
or
test
push
cmp
aas
sbb
and
adc
cli
jle
jge
xchg
xor
or
out
jle
dec
not
dec
sahf
sbb
loopne
xor
fldt
in
sub
rclw
pusha
jl
dec
inc
pop
jae
stos
xchg
mov
stos
push
lock
mov
xor
mov
pop
mov
cltd
pop
sub
push
add
and
cli
xchg
iret
data16
fcmovnu
nop
mov
ss
out
or
aam
roll
xlat
mov
adc
mov
jg
and
test
subl
xor
les
dec
arpl
imul
fcomp
mov
mov
add
shl
out
add
and
test
push
ljmp
imul
jbe
outsl
test
out
notl
loope
and
data16
and
mov
inc
push
sti
out
popf
push
sarl
sub
jne
lods
jbe
jne
aam
les
or
xchg
push
xchg
mov
adc
adc
jg
loope
insb
cmp
adcl
or
mov
dec
repz
lahf
mov
inc
movsb
test
fadds
pop
lcall
and
sub
aaa
mov
cmp
jbe
xchg
movsb
pop
push
adc
int
data16
mov
sub
out
mov
ficoml
push
hlt
xor
push
pop
out
sbb
arpl
pmulhuw
pop
das
out
pushf
sub
int3
inc
jge
lcall
daa
js
lods
ljmp
and
test
or
adc
lods
pop
push
sbb
scas
and
rcrl
jmp
xor
call
out
movsl
iret
mov
test
repnz
nop
inc
xor
and
ret
cmpsb
mov
xchg
imul
sbb
pop
jb
xchg
sub
pushf
faddl
lcall
clc
sbbb
inc
mov
cmpsl
push
push
xlat
in
add
mov
or
in
mov
test
andl
and
clc
sub
and
inc
popf
push
jecxz
pop
mov
adc
sbb
loope
push
dec
adc
es
dec
incl
in
std
loop
ja
ljmp
push
pop
sbbb
daa
inc
sahf
in
xchg
in
mov
mov
and
xchg
jbe
enter
lods
fs
ds
decl
mov
cmp
addr16
shrb
push
pop
fiadds
push
cmp
fcmovne
or
and
push
push
arpl
sbb
cmp
mov
pop
subl
and
dec
push
sbb
dec
aaa
push
sbb
adc
jle
mov
inc
mov
mov
loope
orb
imul
pop
adc
or
int
aaa
inc
enter
call
std
push
test
mov
cmpsb
ljmp
dec
aas
dec
inc
icebp
fisttpl
xchg
push
lds
lea
pop
les
sub
shll
in
outsb
sub
aad
jl
xchg
adc
and
dec
jmp
mov
push
cltd
dec
push
movsb
imul
and
adc
adc
jb,pt
sahf
sbb
out
out
stc
dec
adc
das
push
lods
mov
mov
lods
mov
in
xchg
jne
xor
xchg
aad
mov
push
jmp
mov
aas
ds
out
add
inc
stc
sahf
das
xchg
and
aad
in
xchg
mov
xchg
push
bswap
out
in
pop
mov
loope
pushf
pop
mov
popf
xor
in
cld
inc
jmp
loope
xchg
jnp
pushf
mov
or
shr
jbe
push
bound
mov
cltd
mov
xchg
out
daa
test
mov
hlt
inc
inc
lea
jp
xor
mov
stos
fcmovnbe
aaa
scas
sub
into
dec
sbb
fadds
loopne
popf
subb
xor
loope
test
into
jecxz
jae
inc
out
or
sbb
rorb
loopne
mov
jnp
shl
push
aam
hlt
pushf
jo
pop
and
sbb
sbb
and
les
dec
push
decl
fisubrs
mov
insl
sti
inc
mov
in
nop
xor
fnstcw
fsubp
sbb
loop
aam
pushl
mov
scas
pop
movsb
int3
xlat
push
fdiv
hlt
jl
aad
xchg
sbb
pop
scas
daa
xchg
cmp
jne
xor
dec
jg
pop
and
std
jbe
adc
or
bnd
jns
daa
out
jge
xchg
dec
leave
sub
cmc
repnz
mov
or
ret
mov
inc
cmpsb
add
test
mov
cmp
jmp
repnz
popf
sti
jo
jno
repnz
cwtl
js
cmp
cmc
sub
std
pop
pop
or
sbb
insb
cmp
pushf
and
pusha
or
test
fcmovnu
mov
fiadds
xor
push
add
icebp
jp
nop
cwtl
in
adc
or
dec
js
cmpsl
add
int
insl
icebp
add
jno
lahf
mov
mov
add
mov
es
mov
dec
xor
ljmp
orb
adc
or
xchg
cmp
pushf
pop
xchg
mov
lods
arpl
adc
loopne
push
insl
fsts
xchg
add
xor
rorb
popf
jae
in
popf
lea
adc
lret
addr16
inc
lock
lahf
sub
fadd
in
xor
lods
inc
sbb
jns
fcomi
mov
cli
or
leave
sub
popf
nop
push
cld
cmc
fs
out
jb
mov
pushf
cld
rcll
insb
jae
sbb
sete
jge
xlat
aam
or
lahf
dec
add
dec
shl
or
mov
cmpsb
aaa
lods
add
pop
js
sbb
and
xor
pop
leave
fstpl
sbb
cmp
push
repnz
cmp
jle
cmpb
pop
and
cli
push
ss
push
cli
lret
out
pusha
iret
test
or
adc
xchg
and
into
xlat
cmp
sub
aas
mov
xchg
movsl
mov
mov
inc
outsb
rcl
push
int
jle
dec
js
cld
sbb
in
xchg
mov
es
mov
out
cltd
scas
outsb
mov
rcr
mov
sti
inc
mov
lock
mov
jmp
sub
cmp
jo
ja
stos
repz
push
mov
daa
mov
dec
sahf
mov
aas
xchg
sbb
enter
mov
mov
sbb
cmp
push
push
loope
push
cmpsl
fbstp
mov
dec
pop
fcoms
loopne
and
enter
jl
inc
popa
cld
int
mov
cld
xor
mov
out
addb
mov
aas
xor
or
js
mov
add
xchg
dec
jns
outsb
adc
push
adc
and
mov
imul
movsl
adc
es
jg
xchg
out
xor
or
lahf
andb
xor
inc
cmp
and
jp
or
mov
int
adc
push
or
pop
inc
sahf
hlt
xor
sub
or
repz
test
ljmp
loopne
gs
fs
pop
sub
adc
and
test
out
mov
push
or
jae
pop
loope
into
or
cld
pop
and
mov
andl
adc
insl
andb
inc
jns
cmp
out
adc
mov
enter
jmp
lea
pop
add
xchg
pop
aaa
rcll
or
sub
push
je
imul
js
movsl
or
call
xor
pop
pop
jnp
test
mov
dec
sbb
cmp
ret
xor
sub
imul
fwait
pop
imull
cld
fisubl
mulb
mov
xchg
push
loope
cmp
mov
jne
int
adc
mov
and
jg
mov
fistpll
icebp
sub
sbb
jne
ljmp
arpl
jns
mov
int3
jne
or
stos
icebp
push
dec
xchg
enter
mov
xchg
ret
pop
push
data16
jmp
cmpsl
mov
jmp
lods
mov
adc
push
sbb
add
sahf
movsl
dec
pusha
jno
add
push
sub
mov
and
sbb
roll
outsl
clc
sub
adc
popl
loop
out
cwtl
xchg
cmp
and
outsb
xchg
push
cld
mov
fldpi
push
mov
aas
jle
ds
outsb
mov
fsub
sbb
sbb
sbb
mov
rcr
out
shrl
and
jb
pushl
in
cwtl
inc
addr16
js
push
jns
push
out
inc
mov
out
xor
pushw
and
jae
adc
into
sbb
les
ja
jmp
out
sbb
xchg
inc
pop
jg
insb
fwait
add
test
xchg
arpl
inc
das
movsl
adc
ficoms
pop
inc
mov
addr16
mov
jecxz
sub
dec
loopne
push
dec
rclb
shrl
std
mov
andb
lcall
notl
orl
popf
mov
adc
int
mov
jns
cltd
movsl
lahf
cmpsb
mov
daa
repz
sbb
jne
sbb
jg
fsubl
in
push
cwtl
and
push
sub
addl
inc
cmp
mov
and
jo
loop
arpl
and
ret
das
cmpb
pushf
scas
push
fildll
movsl
out
sbb
cs
jge
adcl
xchg
lods
push
mov
shlb
inc
ffree
push
add
imul
into
cmp
adc
mov
pop
ds
in
mov
jns
sub
mov
enter
jae
xlat
dec
push
loope
lods
cmc
clc
int3
mov
je
adc
sub
pop
jns
ja
nop
insl
mov
jbe
clc
imul
fwait
bound
jnp,pt
pop
jne
dec
xchg
cli
mov
push
push
mov
fwait
dec
pop
scas
and
test
push
push
insl
or
jb,pt
cmp
adc
lods
push
dec
push
mov
pop
jae
scas
xor
aas
mov
cmp
jp
adc
mov
iret
mov
mov
aam
in
mov
sbb
pop
cli
fnstcw
sub
add
nop
inc
pushf
or
das
mov
mov
push
fstpt
ds
in
pop
mov
pop
xor
or
test
fistpl
push
push
ret
mov
test
mov
and
inc
fsts
imull
mov
cmpsl
cld
mov
fildll
fistps
and
jo
fcomps
push
lods
hlt
movsl
jbe
call
xor
push
add
into
xchg
xchg
hlt
push
stos
hlt
jmp
pushf
imulb
xor
imul
mov
rol
enter
call
jae
das
jg
pop
xor
movb
xchg
xchg
or
sar
xchg
lcall
xchg
decb
adc
sub
addr16
inc
xor
add
mov
inc
add
cwtl
cli
xchg
in
test
lcall
push
outsb
pop
sbb
not
addr16
pushl
sbb
xor
lock
pushf
jo
scas
aam
add
fsubrs
xchg
mov
or
add
popf
inc
roll
ja
les
mov
sbb
sbb
mull
xchg
inc
jbe
aaa
or
lds
ds
stc
lahf
pop
push
fldt
iret
jle
or
int3
pop
pop
and
sub
mov
test
mov
mov
xchg
je
xor
shlb
les
cld
fidivl
or
inc
lods
imul
pusha
loopne
add
outsb
cmp
sbb
icebp
jle
dec
mov
mov
or
pop
cld
cmp
dec
and
xchg
fstpl
mov
js
xor
jle
pop
mov
adc
push
pop
sub
rcll
dec
lea
loopne
push
push
insl
mov
mov
jmp
dec
data16
xor
lcall
pop
test
inc
xchg
fdiv
pop
std
repnz
cmp
push
dec
stos
pandn
mov
xlat
jmp
jp
xchg
or
mov
mov
add
mov
pushf
imul
repz
inc
les
loopne
pop
fistps
or
add
call
push
imul
ret
icebp
or
std
xchg
pop
inc
jno
popa
negb
dec
sbb
in
push
mov
sub
mov
mov
and
aas
sub
int3
sub
pop
xor
jmp
js
pop
jbe
cs
mov
jo
mov
rcr
pusha
add
xor
jmp
test
mov
hlt
jae
or
jbe
sti
sahf
out
cmpsl
cld
fsts
fs
cld
loope
and
int3
pop
inc
push
fistpll
out
dec
shr
sbb
pushf
test
arpl
cs
add
stc
cs
pop
lcall
in
gs
popf
sbb
aad
arpl
jns
out
cmpsl
dec
pop
pop
cld
aas
adc
fisubrs
fldl
fistpl
test
xor
rorl
mov
gs
cmp
dec
lahf
aad
cmc
push
lea
pop
mov
xchg
leave
mov
insl
push
sub
jle
gs
push
imul
mov
xchg
dec
mov
fwait
arpl
divl
sub
test
xchg
stos
jnp
mov
cs
sbb
inc
mov
mov
in
aam
fdivp
xchg
xchg
int3
jo
sbb
mov
je
mov
adc
mov
pop
lods
dec
sbb
ret
loopne
ds
ret
jle
jecxz
not
jge
stos
sub
lds
wrmsr
mov
jmp
shlb
add
lds
cmp
cmp
stos
pusha
push
pop
hlt
movsl
sarl
fdivrs
jge
lods
loopne
mov
jo
lcall
add
icebp
ljmp
sbb
pop
mov
cmp
xchg
std
and
call
push
adcb
lods
mov
ja
inc
adc
sbb
mov
mov
jno
arpl
fcmovnbe
mov
inc
scas
pop
leave
and
jae
and
popf
and
jp
shlb
mov
lock
jle
pop
das
mov
call
sub
xchg
xor
ja
out
lods
insl
aas
jne
mov
insb
imul
push
pop
aad
call
dec
add
cmp
inc
ja
outsb
ljmp
push
fisubrl
cmp
fbstp
sub
or
rorl
sub
stos
dec
gs
bound
add
pop
outsl
dec
or
rolb
push
pop
fidivs
jo
arpl
jns
inc
or
mov
lds
js
sub
js
and
jge
ret
pop
or
sbbb
out
iret
in
cli
inc
lock
jl,pt
in
fsubr
jg
sbb
jae
jp
xchg
sbb
stc
dec
fldl
mov
xchg
and
loop
mov
pop
mov
xchg
insl
jne
iret
ss
sahf
mov
pop
inc
leave
pushf
jbe
adc
cmc
jo
jp
dec
into
lahf
jne
add
jne
pushl
ja
out
fldcw
test
pop
into
adc
push
js
mov
inc
jecxz
aad
or
mov
pushf
in
repnz
inc
push
push
pop
movsb
sub
sarl
xor
lret
inc
int
aaa
fdivs
inc
lods
rcll
lods
dec
cmpsb
xchg
jge
xchg
dec
loop
jmp
adcb
mov
jge
hlt
mov
in
adc
fwait
adc
imul
test
mov
and
inc
in
movsl
mov
call
or
cs
cmp
dec
in
in
aaa
jno
les
repz
nop
stos
hlt
loope
mov
xor
das
mov
jb
jmp
xchg
insl
int
jg
iret
rcr
gs
adc
jp
and
std
mov
sub
shld
cmp
stc
loop
rcr
mov
scas
push
xor
dec
mov
xlat
push
push
xor
xor
arpl
push
dec
test
jns
xlat
loopne
inc
jge
ror
inc
or
xor
push
orl
and
sahf
mov
and
sbb
mov
adc
and
mov
sti
pop
xchg
mov
push
jp
popa
imul
ds
pop
lock
pop
dec
xchg
ja
das
jo
lea
and
shl
and
mov
in
jno
pop
stos
and
hlt
out
lcall
ljmp
ss
stc
test
mov
dec
inc
bound
push
cmpsl
mov
leave
ss
sub
lods
data16
ds
es
movsb
xchg
xlat
out
mov
fcomip
movb
addr16
cld
and
aaa
stos
into
fistl
enter
pop
mov
push
out
icebp
out
mov
in
sub
negb
nop
mov
adc
mov
outsb
lcall
icebp
or
mov
ret
je
pusha
xlat
loop,pt
mov
add
adc
sbb
cmpsl
pop
mov
cld
fidivrl
adc
popf
gs
dec
movsb
lahf
cmp
scas
inc
xor
sub
adc
das
jo
js
addb
mov
add
inc
jnp
lea
mov
pop
mov
jno
dec
arpl
push
mov
jbe
pmuludq
pop
adc
sarb
push
jge
jl
fsubs
stos
mov
loop
add
add
int3
lret
clc
dec
adc
fsubr
int3
iret
xor
imul
test
inc
arpl
mov
inc
mov
or
ret
add
sbb
les
and
movsl
insb
insb
sti
addr16
cmp
insl
lahf
insb
rep
pop
or
test
addr16
cmp
pop
negl
mov
adc
lock
sti
or
sbb
shlb
push
add
sbb
and
sub
inc
sti
jge
mov
lcall
test
shlb
add
pop
jp
sbbl
paddq
sub
mov
add
pop
jge
cli
mov
loopne
lea
outsl
je
icebp
das
mov
push
jg
jp
fisubrl
xlat
adc
inc
inc
into
or
sahf
gs
cs
aam
inc
fnstcw
out
fstpl
mov
sarb
pop
fs
scas
leave
pop
jecxz
xchg
pushf
aaa
out
fisubs
gs
andb
mov
adc
add
lods
sbb
push
loop
push
xchg
ss
pop
cmp
and
movsl
xchg
test
xchg
xchg
mov
dec
rorl
add
jp
mov
jge
insl
push
lret
mov
dec
fimuls
shr
dec
xchg
sub
aad
iret
andl
jb
ret
mov
mov
call
jbe
shlb
sbb
loop
cmpsb
stc
inc
mov
dec
lahf
and
adc
movsb
or
clc
pop
mov
mov
lret
xorl
lods
adc
jno
jl
jmp
mulb
sub
out
and
lcall
lods
xchg
cmp
xchg
or
out
inc
xchg
std
andl
push
xchg
cmpsb
and
fdiv
sbb
push
xor
gs
dec
xchg
fldl
fildll
sbbl
imul
mov
cmp
fldt
push
cmp
mov
jns
mov
vpminsw
fwait
sbb
add
daa
inc
mov
pop
mov
js
fdivl
addr16
aam
xor
notl
gs
or
fsubs
fdivrl
cs
fisttpl
cmp
mov
jle
int3
aad
leave
cmpsb
addl
out
mov
rolb
cld
pushl
std
pop
jne
and
aad
mov
cmp
xchg
xchg
pop
mov
movsb
add
sahf
repz
mov
dec
mov
sub
dec
fdivrp
test
les
push
xor
fnsave
ret
jmp
daa
dec
add
dec
in
mov
les
ret
mov
fwait
pop
dec
vmaxps
cmp
add
testl
and
loop
xlat
and
icebp
repz
add
jg
xor
xchg
push
lcall
fbstp
push
std
insb
or
lds
call
mov
out
int
fsts
mov
and
addl
stos
iret
out
and
into
mov
lock
enter
inc
dec
and
popa
das
cs
push
in
mov
adc
shll
stc
and
xchg
pop
fdivr
and
scas
xchg
jno
dec
push
mov
mov
push
pop
xor
repz
mov
lret
ror
jmp
adc
push
shl
stos
out
dec
mov
and
popf
add
mov
in
adcl
push
rcr
leave
or
int3
xlat
in
xor
pop
inc
xlat
jle
and
pop
sbb
lcall
dec
xchg
and
jmp
xlat
sbb
cs
push
mov
call
stc
nop
mov
mov
mov
ljmp
inc
jb
add
test
mov
xchg
aaa
in
fucomip
stos
jnp
lea
mov
xchg
xchg
xchg
inc
cltd
xor
lock
sub
aaa
sbb
jp
sbb
pop
ret
xor
into
push
mov
jmp
pop
jnp
stos
or
jmp
jge
and
push
pop
decb
test
cmpsb
pop
and
mov
jp
mov
out
ja
xchg
ss
std
cwtl
aam
icebp
sbb
test
imul
cs
popf
les
mov
xor
xor
xor
les
and
je
lahf
or
pop
outsl
pop
ds
xor
jg
frstor
sbb
loop
mov
jmp
sub
cwtl
stos
fcmovnbe
outsl
sub
and
scas
adc
adc
xchg
sti
and
jnp
mov
push
push
icebp
faddl
xchg
outsb
xchg
adc
popf
mov
jno
imul
adc
dec
leave
push
xchg
mov
std
cmp
lcall
add
pusha
sub
jno
lock
inc
aad
pop
dec
icebp
add
adc
andb
js
imul
fidivl
xor
pusha
xchg
lods
dec
xchg
sahf
sub
cmp
daa
adc
mov
dec
stc
pop
insl
push
mov
es
incb
pop
lods
in
cmp
fsubs
sub
inc
jb
mov
scas
and
mov
pop
cwtl
xlat
fiaddl
pop
js
call
fnstcw
imul
mov
test
mov
test
adc
mov
cmp
xchg
shr
push
xchg
daa
mov
adc
in
lret
dec
xor
call
out
sub
or
andb
les
imul
sbb
in
test
div
pop
jnp
and
mov
scas
test
sti
cmpsb
cmp
stos
mov
gs
dec
loope
not
mov
or
mov
cmp
aam
idivl
daa
and
cli
push
mov
adc
ss
loope
jnp
xchg
mov
negl
dec
popf
xchg
fsubrs
xor
jl
insl
adc
mov
jbe
dec
adc
test
pusha
sub
push
enter
inc
outsb
sahf
or
fidivl
xor
out
daa
jg
cmp
mov
xchg
mov
cltd
dec
ret
aad
imul
mov
xchg
cmpsl
aam
jae
mov
push
lds
mov
loope
cmc
imul
sub
fdivrl
das
dec
addr16
or
mov
bound
popf
out
scas
stos
push
sub
aas
cmpsb
imul
loopne
cmpsl
hlt
fimull
xchg
push
cmp
cwtl
xchg
xchg
pop
sbb
pop
idivb
clc
sub
pushf
xchg
sarb
cmpsl
mov
push
int
subb
sahf
addr16
or
sbb
xchg
fisttps
jb
mov
popa
fdivrl
jo
fwait
sahf
fstpl
adc
bnd
stc
ds
cmp
out
mov
dec
out
ds
cli
jle
stos
negl
jmp
fidivs
sahf
stos
sub
push
movl
or
mov
jns
pop
mov
push
popf
subl
stc
cld
sub
xlat
push
sbb
xchg
cmc
jl
outsb
out
pop
jg
mov
push
cmp
mov
sbb
pop
mov
popl
push
sbb
gs
jae
push
or
mov
xchg
ljmp
clc
out
xlat
inc
jp,pt
mov
popf
xchg
dec
pop
add
jne
fldenv
or
or
jle
xchg
loopne
and
mov
pop
fidivs
stos
adcb
sub
or
pop
inc
insb
push
mov
lret
shlb
std
xchg
cmp
ja
repz
xchg
fisttps
in
lods
sub
xchg
gs
test
aad
fbstp
cmp
pop
mov
jns
fstps
cwtl
test
cmp
movsb
int3
inc
lret
xor
add
sub
cmp
mov
loop
and
adc
xchg
outsl
mov
pop
adc
lahf
ds
xlat
sbb
ljmp
xor
out
mov
inc
mov
lcall
mov
inc
jecxz
jecxz
lock
and
sub
es
out
divl
arpl
pop
mov
lahf
mov
mov
mov
sbb
imul
mov
push
addr16
popa
stos
lahf
xchg
inc
cmp
shlb
nop
inc
sbb
in
xor
stos
pop
mov
dec
mov
sbb
jnp
in
pop
inc
xchg
push
subl
mov
lods
push
mov
mov
scas
sub
dec
std
in
mov
shlb
inc
pop
or
inc
xchg
cmp
add
icebp
iret
mov
lret
scas
scas
insb
es
jmp
mov
xchg
jbe
in
andl
cwtl
ljmp
mov
mov
aad
pmulhuw
adc
in
int
xchg
and
ss
mov
push
xor
test
pusha
mov
mov
lds
cmpsl
cwtl
sbb
dec
jl
scas
cmp
mov
fwait
movsb
inc
mov
pop
sbb
dec
or
mov
push
mov
xor
inc
mov
jp
lods
cmp
addr16
adc
jo
in
xor
clc
jns
and
jle
rorl
daa
xor
sub
sti
mov
xchg
inc
pop
arpl
jg
pop
mov
jno
loope
xor
pop
jo
mov
rclb
dec
fsubr
dec
hlt
cli
out
sub
in
aam
mov
mov
mov
jl
sub
popf
aaa
outsb
nop
addr16
push
arpl
cli
cltd
add
movb
sub
xchg
xor
pop
jl
mov
adc
mov
add
fildll
push
movsl
and
lret
mov
call
jbe
jl
cmp
jl
mov
sub
pop
imulb
sbb
push
push
and
loope
lods
xchg
mov
mov
push
insb
mov
push
jp
xor
rclb
divl
xchg
adc
or
ja
push
insb
loopne
fmul
fidivrl
jne
cmp
sbb
movsb
loopne
jl
sbb
imul
cwtl
aaa
jno
mov
rorl
mov
movsl
add
cltd
pusha
pusha
xchg
jb
ja
adcb
mov
jmp
pop
push
test
mov
aaa
cmp
and
out
sub
mov
out
sub
cmp
jmp
std
sub
frstor
movsb
or
cwtl
mov
sub
dec
ss
pop
push
ja
sub
xor
mov
mov
into
cmp
test
pop
push
and
out
int3
ficoml
call
mov
popl
loope
loop
stos
mov
mov
hlt
jbe
shrl
adc
pop
sbb
out
dec
insb
divl
xchg
addr16
pop
push
or
mov
lock
mov
pop
jge
add
push
mov
mov
mov
popf
mov
cmp
lods
shr
mov
xor
xor
rcl
dec
cmpsl
aas
jge
popf
test
push
jmp
inc
mov
dec
fs
stos
jbe
loop
jne
mov
mov
cmp
pop
jmp
bound
xchg
cwtl
mov
jbe
push
jg
and
inc
jecxz
pop
scas
and
push
lahf
cmp
inc
dec
in
dec
cmp
cltd
fiadds
lods
arpl
ret
daa
sub
addr16
flds
mov
mov
call
or
jns
mov
gs
mov
jge
mov
pop
in
sbb
mov
bnd
ljmp
and
xlat
mov
fwait
mov
shlb
in
mov
cmp
mov
push
xor
pop
and
into
into
and
mov
call
and
push
push
es
or
es
fbld
inc
in
dec
xchg
lahf
push
xor
ljmp
lahf
fistpl
cmpb
mov
shrb
sbb
imul
jno
lea
adc
pop
scas
push
jae
and
rorl
sub
xchg
xor
pop
ljmp
lods
int3
dec
orl
jl
mov
mov
dec
jo
sbb
and
pop
mov
scas
and
inc
and
test
sahf
pop
cmpsb
pop
dec
mov
es
push
dec
jae
jae
out
lods
push
mov
or
sahf
out
mov
sub
sti
out
nop
lahf
lds
xlat
rorl
scas
test
lods
mov
lret
cli
push
ret
cli
cmpsl
outsb
inc
cli
mov
popf
lahf
cld
jp
rorl
pusha
fidivrl
dec
dec
loopne
pop
cld
mov
daa
scas
xorl
inc
xor
inc
and
cmpsl
je
ret
add
adc
cmp
push
mov
adc
movsl
jne
out
sti
scas
lods
jmp
mov
push
jecxz
js
insb
ljmp
or
test
out
out
stos
lea
out
jns
push
push
mov
xlat
mov
cld
mov
hlt
jnp
inc
cmp
jmp
mov
mov
cli
ret
int3
subl
inc
dec
test
std
nop
mov
ja
cwtl
xchg
aaa
cmpsb
sub
push
lds
aaa
bound
fistl
jp
enter
adc
mov
dec
xchg
pushl
ds
inc
dec
sbb
rol
push
sahf
insb
jae
ss
dec
adc
mov
inc
push
repnz
and
popf
iret
das
jg
loope
push
push
stos
cmpsl
cmp
divb
xchg
pop
bound
add
sbb
cwtl
mov
in
in
push
and
js
data16
testb
fst
adc
lds
sub
cld
fcmove
jne
rorb
pop
gs
in
movsl
cmp
xor
fcom
adc
dec
sub
mov
xor
xchg
mov
jge
lret
add
cmpl
cmp
inc
inc
das
sub
sbb
cmp
lds
loopne
test
jecxz
ja
sbb
gs
cmpsl
shr
mov
cmpsl
mov
cli
push
jbe
ljmp
jae
xchg
mov
push
or
xchg
iret
jo
cmpsb
inc
and
mov
sbb
xchg
inc
shl
push
cmc
pop
stos
dec
pushf
movsb
and
test
jle
lahf
aam
push
xchg
data16
and
pop
push
fimull
add
mulb
or
mov
adc
movsb
jmp
cmpsb
xchg
stos
dec
add
scas
popa
test
push
push
das
repz
ss
das
enter
ds
ljmp
cmc
xchg
popa
push
mov
sub
lcall
mov
cmp
push
adcl
call
rcrl
dec
mov
pop
std
sbb
mov
stos
dec
mov
imul
cmp
ljmp
add
into
mov
cmp
shll
ret
loope
rolb
pop
lds
fwait
lret
cmp
aas
and
xor
or
stos
dec
loop
in
cld
add
into
xchg
stos
add
lret
ret
ljmp
or
outsl
call
cmpsb
stc
push
adc
sub
inc
or
sarb
pop
mov
div
lock
inc
mov
mov
cmp
out
add
stc
jmp
roll
sub
stc
xchg
gs
insb
scas
cmp
lahf
mov
movsl
push
sub
jp
or
cmp
add
stc
mov
push
fdivr
into
addr16
jl
inc
jle
mov
div
mov
cmp
sub
lods
bound
mov
xchg
sub
test
mov
ljmp
mov
mov
adc
dec
adc
les
inc
jg
fisttpl
inc
rcrl
adc
jle
jl
cmp
aam
ret
scas
pop
arpl
sbb
sub
bound
data16
loope
push
cmc
jl
mov
dec
les
mov
iret
bswap
int
jnp
cmc
pusha
jle
push
and
adc
popa
test
cmp
inc
pop
or
push
jg
test
xchg
dec
pop
inc
pop
out
inc
cmpsb
push
outsl
xor
or
jo
inc
loopne
ret
adc
fxtract
int3
es
cmp
lret
insl
xlat
xchg
ds
xchg
sbb
repnz
and
and
push
xchg
pop
sub
push
sete
push
mov
es
les
push
inc
bound
pop
jp
and
pop
mov
fldenv
lret
inc
ficoms
jge
cld
add
mov
cli
add
jecxz
sub
xchg
xor
fwait
dec
cmp
xor
jno
int
andb
lea
out
mov
sbb
jo
push
xchg
dec
push
inc
mov
sub
and
xor
insl
dec
in
aas
repnz
pop
jne
in
mov
jmp
jmp
pop
sub
out
popf
sub
inc
rcrb
std
jno
fs
fs
loop
mov
mov
mov
loop
iret
pop
add
repnz
add
xor
fists
sti
cwtl
cmp
das
pushf
loopne
lods
clc
fnstsw
lea
repz
rcrb
scas
jb
ret
out
fcoml
insb
jo
ja
out
push
mov
lock
inc
jge
and
shrl
out
mov
fbstp
sti
cli
clc
fistpl
bound
je
nop
xchg
and
push
stc
adc
lock
popa
adc
jne
push
cwtl
and
loope
cli
xchg
clc
pop
and
pop
inc
stos
stos
andb
cld
std
mov
ret
and
out
aam
repz
cmp
nop
sbb
cmp
int3
xchg
clc
adc
nop
sbb
lods
frstor
mov
sub
ret
ljmp
dec
push
addr16
enter
push
es
sbb
fsub
mov
call
mov
pushf
nop
cmp
cmp
clc
cmp
cmp
stos
mov
lret
lret
ret
nop
jle
shrl
jne
dec
cmp
ljmp
in
pushl
mov
bound
push
addr16
mov
push
dec
test
add
jns
adc
cmp
or
mov
sahf
nop
outsb
pop
lret
mov
xchg
jge
out
mov
movsl
add
testb
pop
cmpsl
push
adcb
notb
retw
mov
xchg
testb
mov
fisubl
jns
adc
pop
testl
mov
aad
int3
bnd
push
push
dec
push
or
adc
ret
repz
mov
and
movsl
jp
loopne
movsl
cmpsl
jb
repnz
outsl
sbb
adc
sbb
btr
ljmp
dec
daa
adc
xchg
sub
and
dec
inc
jge
shll
subl
std
jl
leave
push
jge,pn
ret
popf
ja
pop
cld
dec
lock
adc
sti
sahf
and
gs
cmpsb
lret
pop
inc
jne
cmpps
call
shlb
out
jge
xor
sbb
xor
shl
pusha
jno
lahf
cmp
ret
lock
pop
sbbb
into
dec
or
enter
subb
sbb
jmp
mov
cmp
dec
mov
mov
xchg
cmp
push
pop
add
and
jno
ja
sbbl
pop
test
jb
scas
jno
or
gs
mov
fisubl
pop
mov
dec
mov
stos
lods
mov
jg
inc
dec
arpl
sarb
mov
xchg
pushf
adc
dec
out
divb
sbb
mov
hlt
sbb
mul
cmpsl
cmp
pop
int
mov
cmp
in
jge
lea
iret
jae
loope
adc
jne
sbb
mov
stos
mov
popa
testb
ljmp
and
and
inc
test
shr
inc
cs
xor
roll
pushf
cld
push
mov
mov
jle
and
mov
je
mov
sbb
int
and
pop
ret
add
pop
dec
mov
js
scas
xchg
and
les
sbb
jb
jne
mov
and
and
pop
add
fistpll
test
pusha
and
nop
mov
xlat
addl
out
mov
and
mov
cmpsb
in
std
xor
out
xor
movsb
pop
ds
pop
add
ss
sbbl
sbb
push
insb
lahf
idivb
test
adc
test
test
jmp
out
insl
inc
std
pop
outsb
dec
cld
push
movsb
mov
pop
dec
int3
push
push
ret
xor
mov
cmp
lret
es
testl
inc
pop
clc
add
push
sbb
mov
je
pop
test
cli
dec
and
push
loopne
xchg
cmp
jl
and
push
sbbl
sarl
cmp
daa
js
shrl
enter
daa
jne
lret
cmp
sub
test
or
imul
xlat
mov
mov
dec
or
cmp
mov
clc
out
std
addr16
out
sbb
sub
jns
xor
push
jge
clc
xor
cmp
and
testl
mov
out
aas
jle
mov
in
stc
sahf
enter
xchg
inc
mov
dec
cs
mov
push
js
cld
mov
mov
pop
push
push
imul
jmp
repnz
add
pop
fidivs
inc
popf
ja
mov
or
inc
mov
pop
imul
aas
rcrb
icebp
jmp
jo
mov
xor
cmc
aaa
mov
pop
push
xchg
add
mov
enter
ficoml
jbe
cmp
sbb
ja
sbb
mov
out
dec
repnz
jbe
mov
insb
cmpsb
iret
outsl
cmp
lock
mov
inc
mov
incl
pop
clc
stc
xchg
cs
lahf
push
sub
sbb
and
dec
jp
xchg
out
pop
cwtl
cwtl
and
xor
mov
les
int
fistpll
and
pop
shlb
jnp
flds
fistl
and
mov
xchg
std
mov
sarl
jns
push
pop
push
dec
and
cmp
imul
xchg
cmp
adc
push
out
cmpsb
xor
and
dec
jge
aaa
cmpl
dec
jae
nop
in
mov
and
pop
mov
xlat
aad
in
je
jne
mov
inc
scas
sbb
xchg
mov
scas
fdivl
xor
mov
adc
dec
pushf
add
outsb
mov
sarb
daa
mov
xchg
into
dec
cwtl
out
pop
xor
or
sub
lahf
dec
das
xlat
xchg
xor
push
es
xchg
enter
cmp
pop
jp
in
mov
rclb
jl
mov
dec
mov
jne
sarb
insl
subl
dec
adc
dec
ljmp
aad
int
jmp
inc
loop
popa
push
adc
jns
fwait
out
movsb
cmpsb
repnz
movsb
sbb
pop
mov
fsubp
xchg
loop
cmpsb
cmpl
mov
fbld
dec
cmp
xchg
mov
adcl
jns
mov
mov
mov
mov
ds
jl
or
jns
jae
adc
call
mov
cli
inc
ljmp
cli
and
jge
enter
pop
test
or
cmp
xor
cmp
ljmp
test
test
cs
jg
mov
popf
testl
sub
cmpsb
push
inc
push
jle
inc
lods
adc
xor
sar
insl
cmp
or
insl
mov
pop
dec
push
icebp
lods
mov
outsb
jp
or
adc
pop
sarl
cmp
dec
or
loope
jno
and
cs
stc
jp
les
or
loop
adc
shll
mov
ss
loope
arpl
xor
hlt
jbe
mov
mov
test
cmp
stos
fxch
fs
repnz
mov
mov
stos
fistps
jl
das
pop
repnz
loopne
or
xchg
aad
adc
mov
lret
stc
sti
sarl
sbb
cmovno
and
sti
adc
pop
inc
push
jp
push
mov
cmp
lahf
cld
inc
sub
fists
push
outsl
xlat
stos
scas
xchg
push
mov
adc
and
and
add
and
gs
sub
add
repnz
pop
and
in
mov
ret
js
sub
xor
xor
or
fdivrl
xchg
fmuls
in
adc
jae
mov
and
cmp
mov
es
lret
hlt
or
adc
pop
fsubrs
test
inc
jbe
sbb
pop
lret
inc
sahf
xchg
stos
mov
push
gs
cmpsb
bound
jmp
cwtl
mov
and
ljmp
jns
clc
mov
mov
insl
ret
xor
jg
outsl
adc
mov
movsb
pusha
or
inc
aas
stos
push
notrack
push
rol
mov
outsl
fs
jo
movsl
adc
movsb
loopne
adc
popf
xchg
fcmovu
xchg
or
mull
or
cmp
movsb
scas
push
idivb
aad
add
dec
inc
or
cmp
sbb
push
in
cmp
mov
cmp
jg
pop
dec
push
scas
cld
test
in
test
mov
incl
sahf
pop
fists
xchg
mov
add
jno
in
fwait
test
out
sub
sub
pop
bound
enter
mov
mov
push
cmp
adcb
scas
lahf
fisubrl
fwait
mov
mov
inc
hlt
ja
in
ret
adc
and
inc
push
fidivrl
jb
pop
or
insb
fisttpll
adc
repnz
dec
ffreep
in
rol
or
stos
xcrypt-ofb
cmpsl
test
mov
add
icebp
popf
arpl
ja
fmuls
movsl
pop
mov
sub
mov
pop
sbbb
fdivrl
sbb
mov
ficoms
rcrb
bound
xor
xor
mov
sbb
inc
mov
mov
stos
mov
push
lahf
adc
push
jl
pop
popa
iret
mov
push
xchg
stos
movb
mov
push
sahf
shrl
inc
out
xchg
xor
adc
rorl
stos
cmp
push
pop
adc
xchg
loopne
fadds
fwait
enter
fwait
shl
fstpl
mov
mov
push
mov
movsb
movsl
fld
pop
cmpsl
fidivs
push
data16
sarb
loopne
andb
cmp
cmc
shl
inc
xchg
cmp
fcoms
push
pushl
xchg
data16
dec
data16
fs
subl
cli
test
in
pushf
sub
xor
mov
das
or
insb
aas
cltd
mov
mov
mov
inc
xlat
insb
arpl
adc
ljmp
outsb
aas
pusha
test
insb
sahf
pop
ret
mov
in
push
xchg
pop
in
fwait
jbe
push
jno
pusha
pop
lock
xlat
mov
fldl
bswap
xor
xchg
adc
or
jne
es
ficoml
nop
jno
adc
xchg
add
adc
loop
das
icebp
std
dec
out
inc
rcll
das
imul
sub
orb
adc
leave
in
cmp
test
cmp
daa
dec
js
int3
mov
lcall
mov
sub
repnz
inc
adc
mov
je
pop
es
lret
xor
or
pop
stos
adc
shlb
sub
lahf
xchg
ss
in
pop
xchg
sbb
cmpb
aas
adc
jmp
jns
mov
rcl
cmp
ljmp
sub
mov
aaa
mov
and
dec
ficompl
push
cmp
daa
or
sbb
mov
cmc
xchg
ds
lock
adc
fcoms
and
movsl
mov
cltd
xor
int
xor
sbb
xor
xchg
jle
mov
pop
sbb
adc
negb
mov
stc
lcall
pop
push
popa
enter
iret
test
push
or
mov
xor
cltd
sti
and
ret
testl
imul
lds
movsb
push
dec
outsb
and
add
loope
mov
mov
das
push
xchg
pop
push
jo
or
movsl
test
inc
fisttpll
flds
cwtl
addr16
mov
imul
test
addr16
pop
mov
dec
rcrl
fsubrl
fs
lahf
mov
fadd
cmp
add
ljmp
es
add
pop
notl
add
dec
pop
pop
aam
lret
loopne
insb
xchg
int3
testb
out
sub
inc
cltd
jmp
jle
sarb
or
xchg
xor
push
xchg
loopne
testl
test
and
cmpsb
adc
fisubrs
push
dec
adc
int3
repz
xor
sbb
push
lods
cmp
fs
arpl
sub
daa
fs
sbb
push
push
loopne
int
insl
add
jno
sbb
shrl
sbb
ret
jb
fsub
enter
aam
test
mov
sub
or
std
clc
pushf
cltd
ss
mov
mov
loop
lret
leave
subb
push
repz
xor
test
mov
leave
jb
test
jbe
cmc
rorl
sbb
xor
inc
outsb
test
es
in
ret
inc
inc
int
aad
jge
sti
mov
sbb
ficompl
cmp
aas
xchg
or
inc
lds
sbb
add
loope
mov
leave
xlat
pushf
or
or
pop
mov
mov
daa
pop
mov
adc
lcall
in
call
inc
lods
jo
popa
clc
daa
add
call
adc
mov
mov
jno
inc
addb
dec
add
test
enter
push
or
push
fsubrs
inc
icebp
daa
jl
std
mov
jb
lds
out
mov
fildl
rorl
xor
sbb
icebp
pushf
pop
lods
dec
lods
push
add
ret
jbe
cmp
je
aaa
loope
pop
push
jmp
aaa
jmp
popf
or
mov
imul
mov
or
inc
add
out
sub
mov
mov
pusha
xchg
push
imul
sbb
pop
in
xlat
xor
mov
pop
repnz
les
sub
mov
daa
repnz
ja
pop
cmp
mov
dec
mov
aad
addl
mov
jl
adc
adc
pusha
pop
sbb
add
or
pop
lods
jbe
loop
lret
imul
dec
inc
cli
xor
insb
ja
std
inc
mov
or
cltd
lock
je
adc
xlat
dec
add
repnz
jno
mov
scas
mov
repnz
pop
jp
aas
cmp
mov
sti
shl
ror
mov
bound
sar
ja
dec
adc
in
push
and
add
std
fwait
jge
leave
pop
mov
cld
jno
out
or
test
divl
cltd
mov
pop
test
or
cmpsb
ss
dec
cltd
inc
cltd
or
clc
mov
imul
fwait
jno
bound
into
jmp
dec
push
sahf
mul
dec
icebp
inc
adc
popa
xchg
es
ss
cld
push
shl
idivl
mov
shrb
mov
inc
jnp
jbe
jmp
mov
das
insl
xor
xor
jne
xchg
sbb
xor
jp
inc
xchg
shrl
les
mulb
ffree
cmc
cmp
xchg
push
mov
int3
mov
inc
xorl
int
pop
jp
and
or
fucomp
aas
nop
ficomps
dec
loop
fldenv
rcr
arpl
push
out
add
mov
pop
fstl
pop
add
mov
push
mov
insb
add
imul
mov
testb
mov
mov
addr16
jl
dec
outsl
rolb
push
jge
scas
out
jo
lods
icebp
mov
jp
inc
pop
es
and
mov
jne
cmp
pushf
mov
lock
pop
mov
sub
lahf
sub
push
or
shrl
cli
xchg
es
rcrl
sub
inc
outsb
in
ror
mov
adc
das
repz
imul
ja
push
in
xor
cmp
in
sbb
or
dec
int3
adc
test
out
add
cmp
out
dec
mov
mov
lods
add
add
enter
xor
sti
fnstsw
outsl
lahf
mov
jecxz
in
call
xlat
pop
insb
aad
mov
dec
test
nop
push
cmp
lret
push
cmpsl
xor
mov
cli
adcl
cmp
mov
dec
inc
cmc
jae
mov
and
ficomps
mov
lock
outsb
rolb
or
push
cmc
inc
push
lcall
cmpsb
jne
cmovbe
dec
add
push
shrb
jle
das
inc
dec
and
xchg
movsb
fidivs
pop
add
sub
cltd
loopne
cld
cmpl
dec
mov
jecxz
js
mov
movsl
or
mov
jmp
add
fwait
cmp
pop
lock
mov
or
and
out
sarb
pusha
pop
out
lret
in
push
int
push
xor
jae
push
dec
mov
stos
xchg
jge
inc
pop
xor
adcl
imull
sub
aaa
popf
mov
stc
xchg
mov
test
ret
cwtl
adc
push
out
loopne
or
push
or
xchg
inc
fld
and
pusha
xor
and
pushf
xchg
xor
dec
test
xchg
push
or
sbb
jecxz
add
sub
bnd
outsb
pop
orb
mov
mov
mov
inc
sbb
subb
pop
enter
mov
lahf
in
mov
xor
xchg
sbb
jl
ljmp
mov
dec
and
mov
mov
pop
adc
or
xor
lahf
es
push
dec
cmp
inc
roll
mov
cmp
stos
ret
jp
ds
cmpsb
cmp
inc
and
cmc
pop
jecxz
pop
mov
mov
mov
dec
sarb
popf
sub
cltd
xchg
sbb
andb
lcall
lods
sti
or
lock
test
cmc
enter
call
add
test
push
and
mov
jmp
cmp
ret
ss
aam
cmpsb
or
pushl
data16
or
adc
dec
mov
movsl
add
pop
pop
mov
mov
mov
jbe
pop
scas
inc
xchg
call
add
clc
mov
aas
outsl
xchg
stos
out
mov
not
push
add
pop
out
in
fwait
loop
mov
stos
test
pextrw
fs
mov
jno
jno
rcll
sub
mov
sbb
shlb
jge
sbb
loop
sbb
enter
ljmp
push
or
jecxz
roll
cmp
cld
mov
dec
add
cmp
pop
mov
push
das
or
mov
push
push
in
pop
mov
lock
nop
jae
sbb
jl
repnz
cs
mov
nop
sub
fstpl
sar
and
push
xchg
push
in
imul
xchg
subb
pop
or
data16
ss
cltd
shl
ficoml
mov
pop
fst
das
daa
cmp
and
xor
mov
ss
popw
jmp
jns
jbe
add
jo
sub
int3
lahf
std
repnz
jge
fisubrs
jae
stos
push
jl
pop
or
ds
cwtl
cwtl
mov
enter
out
sub
fstpt
mov
cmp
clc
push
sti
lods
and
aas
jns
dec
xchg
or
adc
mov
mov
mov
pop
or
lcall
cmp
cmp
aam
push
and
mov
std
test
mov
mov
daa
jl
mov
mov
fwait
push
enter
xchg
addb
add
dec
or
fisubs
pop
push
add
and
into
stc
int3
sbb
xor
jb
and
fs
rorb
out
cmc
aam
clc
shlb
in
ret
push
shlb
xchg
mov
adc
pop
sbbl
ret
sahf
pop
fsts
add
outsb
notb
in
jg
ficompl
subb
xor
xor
out
pop
fwait
sbb
insl
xchg
or
lret
cmpsl
or
out
pusha
fnstenv
cld
enter
enter
int
js
dec
daa
scas
dec
enter
push
sarb
adc
cli
aaa
xchg
push
jp
in
mov
sbb
lds
jne
mov
inc
jbe
cli
leave
mov
repz
nop
rcr
iret
inc
jle
mov
bound
repz
lods
shlb
stc
push
idivb
repz
cld
test
or
cli
dec
inc
push
and
rcrb
aaa
movsb
mov
loop
or
lahf
add
push
hlt
rorl
jbe
scas
inc
push
pop
stos
or
xchg
test
iret
insb
sub
adcl
inc
sbb
out
lcall
sbb
jbe
inc
xor
lret
jge
push
dec
dec
test
out
add
xor
scas
sbb
adc
into
and
mov
in
push
mov
xlat
push
cmp
fsubr
aaa
imul
xlat
lret
pop
jle
ja
lcall
pushf
mov
incl
int3
pusha
dec
jg
ss
push
sar
inc
adc
fidivs
das
jge
out
push
aaa
lea
lcall
inc
fwait
or
pop
or
int3
xchg
js
mov
lret
xor
push
mov
xchg
out
stos
insb
cltd
cld
or
imul
fsubrp
and
mov
ret
fldl
cmp
mov
call
jae
dec
cwtl
cli
and
adcl
ds
inc
push
jae
ja
xchg
pop
inc
mov
rcll
lcall
or
ret
adc
adc
and
add
jns
mov
jmp
repnz
aad
mov
and
mov
movsl
pop
aas
xor
jge
sti
add
mov
pop
inc
fmul
call
xor
pushf
stc
gs
sub
push
adc
pop
addr16
test
dec
cwtl
dec
cmp
dec
mov
in
cmp
mov
jbe
jnp
pop
divl
pop
push
push
movsl
in
cwtl
es
adc
jb
fwait
xchg
shrb
test
cmp
stos
or
ljmp
mov
mov
sbb
jo
jne
push
push
inc
sub
push
sbb
repz
mov
daa
add
jns
aad
xchg
mov
sub
inc
mov
or
jno
and
mov
push
and
jmp
fs
rclb
cmp
xor
jne
sbb
cmp
add
shll
push
hlt
pop
mov
mov
cmp
xchg
jae
sub
scas
or
scas
outsl
ret
ret
fbstp
into
jge
xor
or
int3
cmpsl
cmpsb
fstl
icebp
lret
dec
sbb
jmp
shrl
aad
dec
push
sub
xchg
or
ja
loopne
mov
mov
movsl
sbb
cli
mov
arpl
inc
jg
daa
xor
lcall
sub
aam
push
mov
jle
test
jmp
xor
mov
mov
mov
ja
int3
pushl
hlt
sub
inc
cmp
and
fs
jmp
lods
cld
leave
xchg
sbb
imul
mov
cmp
cwtl
aas
jmp
push
frstor
mov
xor
sbb
stc
pop
xchg
fsubrs
push
xchg
fwait
adc
push
loop
xchg
ret
fnsave
je
lret
int3
popf
repnz
scas
cmp
mov
ljmp
jmp
cmp
nop
out
lock
xchg
cli
movsb
and
test
sahf
mov
int
or
or
shrb
pop
in
mov
mov
movsl
pop
cmpsl
lds
pop
in
leave
lss
push
xchg
cmp
ret
stos
das
mov
test
incb
out
pop
sbbl
xchg
lahf
inc
les
or
fldcw
add
sbb
stos
mov
fldt
lds
les
dec
das
add
mov
cs
dec
dec
dec
stos
je
icebp
jne
enter
scas
push
popf
adc
sub
dec
mov
xlat
imul
int3
jmp
div
mov
int
ja
into
jo
cmp
inc
cmp
xor
inc
xchg
xor
aas
mov
adc
and
fs
adc
pop
jb
loopne
jle
mov
sub
inc
inc
cs
push
jns
mov
outsl
pop
jb
lea
mov
in
push
outsl
push
clc
negb
push
and
test
jp
push
mov
popf
lret
and
jmp
jge
shrb
mov
sbb
movb
mov
xchg
stc
and
mov
repz
adc
movsb
cmp
js
in
and
arpl
cmp
sarb
mov
and
xchg
pop
inc
psubusb
movsb
fcmovne
mov
push
icebp
mov
cld
out
lahf
popf
outsb
pop
or
in
adc
cwtl
orb
inc
dec
xchg
popf
pop
std
add
push
xchg
mov
addr16
add
cmpsl
xor
std
xor
pop
cwtl
aaa
sbb
xchg
roll
pop
xchg
fistpl
iret
jbe
cltd
test
adc
cmp
sbb
xor
pop
inc
xchg
and
mov
aas
xchg
stos
add
addl
clc
cwtl
add
add
sub
and
or
push
or
iret
sub
and
inc
sbbb
addr16
dec
pop
int
lret
dec
movb
xchg
add
add
or
data16
popa
insl
xchg
ret
fs
cmp
mov
pop
lea
add
adc
mull
fdecstp
lret
mov
ds
xorb
jle
cli
imul
repnz
add
iret
gs
into
shl
out
mov
aam
dec
out
mov
loope
xor
pop
daa
mov
sti
jnp
rcrl
cs
in
push
sub
pop
sbb
gs
popa
in
pop
adc
xchg
hlt
xor
movsb
sbb
sub
clc
imul
movsb
add
jmp
sbb
scas
xchg
rorb
lods
sbb
fidivl
enter
nop
sbb
xchg
cmp
adc
inc
and
mov
xor
je
testb
mov
insl
xor
int3
mov
inc
mov
dec
mov
pop
ss
pop
dec
xchg
dec
cmp
gs
outsb
lds
add
gs
stc
lds
les
sub
mov
pop
out
jle
outsl
outsl
xchg
cld
addr16
mov
shrw
and
mov
pusha
test
shrl
or
sahf
sarb
fadd
ret
pop
mov
pop
andl
adcb
int
test
dec
xor
aad
imull
test
fwait
jle
mov
sub
test
dec
push
sbb
and
lock
inc
xor
jmp
lahf
inc
pop
cs
call
outsb
ja
mov
mov
pop
imull
pushf
inc
nop
hlt
push
lcall
xor
int
and
es
lahf
andl
aam
push
cmp
xor
or
inc
jge
sub
pop
add
arpl
cmc
adc
mov
insb
ja
icebp
ljmp
mov
scas
xor
jb
mov
ljmp
addb
xor
inc
aam
cmc
xchg
lret
ss
or
fs
clc
dec
lea
int
add
stc
lea
aam
add
jne
jnp
mov
inc
xchg
or
dec
fldcw
popa
or
xor
and
mov
js
xchg
mov
pop
adc
movsl
mov
push
xor
les
out
mov
pusha
mov
enter
push
inc
pop
in
mov
aad
cmp
pushf
inc
imul
adc
jp
pop
dec
sbb
loopne
push
call
pop
ja
push
ret
out
pop
mov
and
jb
jl
imul
dec
into
xor
ljmp
cmpsb
add
cmp
popf
addr16
dec
insb
insb
jmp
jnp
test
push
insb
pop
add
push
mov
mov
mov
sub
ret
push
adc
and
shlb
push
push
push
int3
mov
sub
mov
jb
aas
xor
inc
cmp
insb
aaa
xchg
loopne
dec
lods
push
pop
into
insb
xchg
scas
inc
test
stc
cmp
in
fsubs
adc
test
add
fidivrl
jmp
lret
lahf
dec
push
or
or
aad
ja
cmpsb
and
push
or
sbb
cmpl
scas
test
xchg
jg
fs
xor
ret
adc
daa
mov
sahf
push
pop
jo
outsl
in
cmpsl
in
out
cmp
push
jmp
jmp
shl
cmp
or
add
sbb
sbb
cltd
xchg
stos
mov
les
cmc
xchg
test
sbb
push
cmp
fldt
or
push
sub
ja
fnstcw
std
outsb
pop
imul
aaa
lods
mov
cmp
mov
and
icebp
mov
and
shll
addr16
notl
cmp
inc
push
movsb
mov
xchg
fisubrl
aad
enter
sub
jae
jle
negb
pop
out
in
and
cmc
push
and
sahf
shl
outsl
daa
jg
fwait
inc
sub
arpl
adc
cmc
push
clc
jnp
xchg
hlt
mov
pop
cmpsb
outsb
sbb
add
dec
lods
insb
inc
pop
sti
mov
fistl
cmpl
enter
mov
xchg
xor
xlat
pushf
xchg
ret
sti
cmc
jg
xchg
and
ficoml
cmpsb
mov
mov
test
rcrl
jmp
jno
push
js
xchg
cmp
jo
and
cmpb
cmc
inc
xor
or
vmread
xchg
xchg
sbb
and
cmpsb
xchg
shll
push
out
jmp
or
push
add
push
inc
jb
xor
mov
xchg
in
cs
popa
pcmpeqd
sarb
mov
mov
ficomps
or
lea
popf
rcl
imul
xor
sbb
cld
sarb
insl
pop
incl
iret
enter
pop
addr16
sub
mov
jle
jnp
xorb
inc
xchg
jle
movsb
push
sbb
inc
mulb
add
jge
push
sbb
adc
adc
jge
jae
jbe
dec
push
aam
inc
cli
add
sarb
mov
cmp
or
and
loopne
daa
es
fwait
xchg
cmp
in
sti
js
cs
push
or
mov
xor
out
xchg
lock
jnp
push
ret
push
pop
cmpsl
insb
inc
sysexit
xor
pop
jecxz
xor
pop
fwait
icebp
xor
int
mov
mov
repz
adc
insb
lahf
dec
add
sbb
movsl
outsl
dec
std
mov
pushf
pop
loopne
out
xor
stos
mov
aad
jnp
push
mov
stc
lock
mov
jp
test
scas
dec
jns
ljmp
xor
mov
clc
jnp
fdivrs
adc
inc
mov
mov
mov
dec
pusha
loopne
xor
scas
add
clc
faddl
jg
arpl
pop
adc
push
loopne
in
jle
sbbb
jnp
scas
push
add
ret
push
mov
in
mov
out
jge
inc
dec
bound
xor
mov
push
push
aam
insl
lods
cmp
sbb
mov
mov
into
filds
push
outsb
dec
pop
and
push
rdpmc
dec
int
jmp
loop
cld
cmpsb
sub
mov
push
mov
sub
sti
es
lahf
jb
lret
leave
mov
jp
inc
sahf
sbb
scas
cld
fs
dec
enter
ss
cli
rcr
sarl
mov
lcall
fstp
adc
bound
or
cmpsl
dec
stos
mov
adc
push
sbb
push
xchg
popa
ror
sti
cmp
dec
mov
pop
or
jg
and
int3
fcmovb
lock
ret
insl
mov
mov
roll
sbb
aam
jnp
jae
pop
fwait
and
rclb
int
jb
mov
and
je
jns
pushf
and
je
xchg
cs
sbb
lods
hlt
mov
dec
fisubs
dec
aad
jno
push
sub
aas
inc
test
mov
push
das
inc
sar
jge
mov
xchg
ljmp
adc
ja
pop
pop
add
add
push
sub
cmp
mov
aas
or
xchg
mov
lods
adc
jge
pop
test
fldl
or
loop
dec
movsl
sbb
dec
aaa
sbb
lock
test
adc
daa
loope
imul
cmp
and
imul
dec
fstpt
or
push
mov
xorl
icebp
or
fdivrs
inc
invd
sarb
test
jns
outsb
mov
je
jle
test
jmp
enter
dec
aas
stc
std
popf
lea
les
push
pop
insb
call
fs
pop
mov
pushl
inc
jae
ret
pushf
xor
sbb
daa
fcmove
and
and
scas
aas
outsb
in
cmp
stos
std
dec
addl
inc
push
cmp
scas
sub
ss
xor
push
xchg
mov
rcrl
ret
adc
outsl
or
jbe
mov
add
xchg
cmpsb
fists
xchg
insl
push
push
sbb
sbb
push
pop
jne
not
push
xor
pop
mov
add
loop
jo
mov
mov
enter
les
adc
jmp
pop
lcall
xlat
sbb
popa
movsl
les
in
xchg
dec
scas
adc
lea
cmp
cmp
test
xchg
movsl
xchg
fdivr
xor
or
data16
dec
ffree
and
mov
mov
sbb
sbb
adc
mov
fs
lcall
test
subl
mov
jg
mov
call
stos
rcrl
mov
jecxz
push
sub
jp
pop
inc
inc
nop
xchg
jle
dec
fstl
fildll
mov
lret
sub
xchg
and
mov
mov
push
adc
cwtl
hlt
lcall
mov
and
ja
push
add
and
cmc
ja
out
jl
pop
jno
pinsrw
cmp
insb
daa
jne
mov
push
lea
dec
push
jle
push
dec
nop
sbb
cli
or
push
test
cmp
adc
dec
aas
popa
movsl
pop
add
push
jmp
int
aad
out
pop
ds
mov
inc
mov
pop
pxor
pop
push
shll
in
pop
push
add
inc
out
es
test
int3
es
inc
loop
aad
sbbl
and
pop
cld
adcb
push
mov
sub
ds
mov
cltd
ja
push
ret
jp
dec
call
jge
jo
pop
mov
fsubl
out
lods
mov
repnz
and
dec
mov
jle
lea
pop
das
lds
pop
mov
jo
sbb
cmc
stos
sub
fldenv
sbb
addr16
jg
pop
shlb
mov
int3
push
dec
add
fcmovbe
pop
stc
xor
inc
fwait
mov
fldt
loop
mov
xchg
sub
or
inc
sbb
fstpt
into
push
clc
mov
pop
mov
ljmp
add
xor
repnz
std
fidivs
inc
fdivrl
cmp
sarl
or
scas
push
in
daa
and
dec
and
dec
inc
lahf
out
pop
pop
push
adc
lods
adcb
adc
pop
dec
pop
mov
push
sarl
pop
xchg
pop
es
inc
lahf
mov
dec
mov
add
xchg
xor
arpl
mov
pop
dec
mov
push
mov
lds
out
sbb
out
mov
int3
sahf
add
cli
xchg
clc
mov
call
lret
es
mov
gs
or
clc
mov
push
mov
sbb
sub
out
jo
je
arpl
jle
pop
adc
xor
xorb
xor
cmp
sub
jbe
dec
sarl
mov
adc
ret
mov
and
mov
or
cmp
pop
fwait
cmp
sbb
jnp
imul
popf
xchg
into
mov
jmp
sbb
jae
jl
mov
cmp
mov
dec
dec
or
mov
dec
bound
jle
insb
out
sbbl
cmp
testl
adc
jecxz
insl
jmp
das
or
and
loopne
mov
sbb
andb
pop
and
xchg
or
or
call
cmpsb
mov
mov
add
jb
xchg
add
mov
lret
xor
lahf
addr16
jmp
add
mov
stos
fucomp
push
shl
jo
jne
mov
xchg
xor
in
push
nop
push
fildll
push
imul
mov
adc
ror
cld
pop
in
lea
into
and
sbb
fwait
leave
sarl
gs
cmpsb
push
dec
into
aas
fmulp
cltd
jb
aam
lock
idivb
xor
outsl
imul
aas
jg
add
inc
mov
in
xchg
mov
xchg
icebp
in
xchg
cmp
sarl
inc
xchg
loope
cwtl
test
rclb
fcompl
scas
jnp
pushf
stos
dec
imul
es
inc
xor
nop
in
imul
daa
cmc
inc
stos
repz
dec
popf
adc
sub
iret
mov
enter
adc
mov
mov
fsubs
xor
mov
and
jnp
sub
mov
xorl
sbb
lcall
in
imul
enter
call
sbb
rcrl
adc
aam
int
ret
lods
cmp
stos
lcall
aas
ja
pushf
gs
push
xchg
mov
mov
dec
jo
les
leave
push
xor
shrl
fwait
fs
mov
and
loopne
pop
and
lock
sub
adc
mul
jb
addl
cmp
pop
pop
aad
out
xchg
out
inc
sbb
out
inc
add
scas
xchg
iret
ljmp
mov
dec
fisttpl
and
jg
or
je
sub
cli
push
mov
mov
xchg
or
popa
inc
cmc
mov
xchg
stc
push
jmp
mov
test
dec
ja
pop
mov
fistpll
sub
je
push
mov
imull
jb
mov
or
imul
mov
pop
jnp
test
icebp
adc
js
or
fcomip
jbe
sbb
ss
sbb
lcall
pushf
aas
mov
mov
xchg
or
or
ret
mov
addr16
jo
cmpsb
cmpb
sbb
shrl
mov
add
fwait
mov
out
dec
std
ds
shlb
or
mov
repz
enter
lret
loope
pusha
mov
roll
es
fistps
push
je
ret
xor
call
repnz
xchg
sbbl
and
jp
ror
add
lock
push
xor
out
out
dec
flds
and
cltd
sbb
mov
dec
sti
scas
xor
mov
inc
sbb
mov
mov
cltd
fstps
inc
lock
cmp
mov
xlat
jecxz
lret
shl
mov
sub
inc
lods
add
ds
inc
xor
sub
mov
mov
cmpsl
incb
mov
mov
aam
fsubrs
push
and
mulb
imul
shrd
xchg
jae
js
push
jle
push
ret
adc
dec
outsl
push
aaa
js
or
fs
mov
repz
adcb
pop
ljmp
push
push
sbb
mov
imul
mov
fcmovnu
mov
fstl
aas
inc
frndint
mov
mov
imul
lahf
call
sbb
mov
fucomip
setle
xchg
xchg
mov
cli
mov
imul
mov
inc
out
std
sub
push
pop
popf
pop
insl
cs
sub
das
mov
outsb
and
jb
fcmovnbe
mov
into
add
out
inc
nop
testb
mov
and
rcll
pop
daa
out
mov
pop
inc
cmp
enter
enter
xchg
nop
je
sbb
cs
adc
dec
mov
inc
iret
jle
add
xchg
and
int
pusha
dec
xor
jne
shr
cmpsl
xchg
shlb
add
push
mov
fnsave
lcall
ret
adc
mov
fbld
les
mov
ljmp
outsb
jg
jmp
imul
mov
pinsrw
xchg
sub
movsl
repz
sub
or
notl
cli
in
icebp
mov
in
jle
mov
dec
addr16
mov
arpl
push
test
data16
or
or
js
adc
inc
stos
or
pushf
sbb
int3
lea
mov
xor
and
adc
shrb
lods
call
cmp
out
xchg
jno
jle
inc
negl
lret
push
jmp
dec
xor
sti
mov
addb
pop
push
mov
lret
ficompl
cmp
adc
push
outsb
pop
in
mov
arpl
call
or
lret
cmpsl
outsl
jl
inc
add
lahf
mov
ljmp
jb
pop
inc
cmp
push
xor
cld
hlt
add
pop
int3
out
pop
mov
cmpsb
push
jo
gs
or
imul
dec
aam
jg
dec
sti
lock
sub
nop
adc
and
adc
mov
shll
outsb
std
scas
cmpsl
xor
sbb
inc
xor
rcrb
dec
popa
adc
and
testb
push
sub
dec
aad
sbb
adc
rcrl
fwait
or
roll
mov
insb
pushf
mov
gs
sbb
dec
testb
jae
mov
mov
cltd
frstor
xchg
jl
lahf
and
pop
pushf
sub
add
mov
je
ret
xchg
lods
xchg
repnz
lods
negl
call
add
sbb
outsl
add
mov
mov
popa
add
in
pusha
mov
mov
mov
and
adc
sub
xchg
repz
jecxz
ret
mov
dec
adc
test
test
arpl
fisubs
ret
sub
add
sub
out
and
cmp
mov
add
test
pop
loope
daa
mov
mov
bound
mov
or
roll
mov
and
ds
adc
stc
sub
xchg
outsl
mov
hlt
mov
xor
out
jo
jge
aaa
inc
in
ret
push
stos
jg
add
and
xor
dec
adc
out
mov
mov
fwait
jo
outsb
hlt
pop
in
std
jg
jp
push
inc
push
icebp
scas
inc
dec
sbb
loop
cmpsl
pop
or
adc
jno
sbb
lret
xor
daa
shlb
pop
sbb
xlat
push
mov
test
mov
jmp
sub
push
repz
xor
sub
pop
into
cmp
shld
sbb
xchg
mov
shrl
shll
jecxz
xchg
cmp
cmc
icebp
ss
jmp
push
xchg
push
shl
or
mov
and
roll
testl
rcr
ljmp
dec
jg
pusha
cs
arpl
stos
push
sub
mov
fcoms
test
aaa
hlt
dec
out
jbe
mov
or
jne
into
shlb
push
mov
mov
lods
cmpsb
add
arpl
insl
inc
sub
ds
fdivrl
pop
pop
in
and
mov
sbb
lds
mov
push
or
pop
aas
xchg
mov
mov
jp
dec
push
push
push
sarb
sbb
cmp
dec
addr16
cli
popf
xor
inc
hlt
adc
pop
mov
dec
jmp
out
mov
pop
pop
sti
lods
xor
push
adc
inc
aaa
inc
pop
adc
in
add
mov
dec
andb
and
jmp
adc
add
lret
push
mov
in
fidivrs
mov
leave
push
ret
mov
add
mov
jno
mov
and
jmp
jp
cltd
bound
jge
add
ja
jne
movsb
gs
and
jecxz
shl
xor
mov
cmp
jbe
insl
and
push
out
bound
xchg
movl
mov
inc
lods
imul
std
cs
cltd
scas
inc
xor
lock
mov
inc
int
sti
adc
sbb
or
and
adc
rcll
pop
jg
sahf
sbb
mov
push
adc
pop
xchg
jmp
and
mov
adc
seto
je
dec
or
dec
push
jmp
inc
jb
mov
mov
xor
fxch
xor
lea
aaa
cmp
scas
xor
cmpsb
and
cmp
int
jmp
and
and
mov
push
push
jbe
ja
int
xchg
add
inc
fidivl
shrl
and
in
xchg
adc
aaa
xchg
ja
dec
mov
nop
sub
mov
jg
orb
push
shll
ror
popf
push
ret
shlb
out
lahf
mov
and
outsb
push
dec
jmp
jb,pn
popf
xor
jb
xchg
xor
lcall
and
test
aaa
xchg
les
xchg
jecxz
dec
pop
pop
pop
scas
add
arpl
add
inc
cmp
cltd
mov
loope
jns
mov
and
bound
mov
imul
bswap
mov
popf
jle
dec
lods
jge
scas
lcall
cmc
xchg
sub
movsb
jmp
push
popf
shrl
aas
dec
inc
pop
lret
xchg
adc
mov
adc
lcall
mov
js
push
push
mov
nop
filds
dec
sbb
xor
es
mov
push
xchg
or
xor
mov
adc
mov
sub
xchg
push
jle
cmpsb
push
or
sbb
sbb
fidivrs
loop
xchg
mov
in
shll
fnstenv
repnz
stc
inc
insl
push
imul
mov
pop
cmp
sub
jg
and
ret
pop
jmp
push
sbbl
test
mov
and
xchg
push
push
stos
dec
pop
call
js
aaa
inc
icebp
movsb
lods
in
repz
jg
or
movsl
popf
adc
sahf
push
test
je
mov
std
aaa
or
addr16
adc
mull
adc
test
test
push
xlat
rolb
cmp
movsb
loopne
iret
stos
sarl
jne
mov
mulb
jae
loopne
xor
and
rclb
gs
aaa
stos
mov
sbb
addr16
mov
and
scas
jle
cmc
fcmovbe
je
jae
dec
sbb
aaa
insb
nopl
ja
xchg
je
pop
and
pop
mov
push
scas
or
or
ret
test
shl
xor
subb
cs
ljmp
pop
rcl
jae
mov
lea
dec
jecxz
mov
mov
lea
lds
cmp
fwait
mov
cs
mov
jns
jmp
inc
leave
test
inc
mov
dec
cmp
js
push
sub
xor
call
stos
icebp
sarl
into
rclb
mov
out
pushw
push
cmp
shl
mov
shlb
cmp
lret
aad
pop
cmp
popf
xchg
add
cmp
mov
cs
cwtl
insb
cmpsb
jne,pn
mov
in
aam
jge
jns
clc
or
push
movsl
ficompl
test
popa
dec
divb
adc
mov
lds
int3
imul
lods
xor
push
rolb
loope
cmp
push
and
push
add
arpl
sub
lcall
mov
repz
divl
clc
mov
cli
cmp
fs
adc
and
push
sar
mov
mov
incl
lock
fiadds
mov
jno
rolb
mov
sbb
fwait
stos
push
adc
xchg
cld
stos
xchg
hlt
add
mov
or
iret
pop
test
cltd
cli
xor
jae
xchg
push
loop
mov
or
pop
mov
or
mov
mov
cmp
cmp
cmp
rcrb
rclb
das
and
jno
mov
lods
pushf
pusha
push
push
aaa
popa
scas
and
inc
inc
cmp
push
mov
push
jno
repnz
jmp
out
rclb
jo
xchg
filds
pushf
icebp
adc
roll
pop
inc
jae
push
out
loop
cmovns
cli
add
loope
andb
test
imul
outsb
pop
inc
pop
xchg
jle
xor
aad
enter
lret
loop
sbbl
or
lret
test
mov
aam
ret
or
ficompl
pop
add
out
or
rcl
dec
nop
bsf
mov
stos
cli
pop
gs
pop
push
mov
jne
test
dec
sahf
lock
lods
dec
lahf
push
fisttps
or
push
lahf
mov
cmp
mov
cmp
popf
sbb
pusha
mov
lret
clc
dec
mov
popl
dec
jne
fldt
lock
xor
je
jecxz
inc
ljmp
scas
rolb
push
loope
push
dec
sti
popf
int
adc
or
adc
decl
xor
sti
lds
stc
insl
add
fwait
jecxz
add
pop
or
push
pop
mov
jae
lods
hlt
pushf
lods
jl
jmp
frstor
add
mov
jbe
ficompl
shlb
out
mov
imul
cmpsl
or
inc
mov
cmp
xchg
adc
aas
and
inc
and
adc
xchg
lcall
pop
and
lcall
inc
lock
push
je
lods
daa
push
lock
in
repnz
adc
cmp
data16
fsubl
in
sub
mov
outsl
xor
stos
aam
in
arpl
dec
out
shrb
les
and
pop
je
pop
jg
add
mov
sub
adc
mov
or
adc
sar
dec
mov
scas
sbb
xchg
subb
enter
push
imul
mov
xchg
sbb
adc
iret
xlat
cltd
add
cmp
cli
pop
jl
fidivrs
add
pop
loop
nop
adc
stc
mov
sbb
sub
sahf
lahf
fst
bound
add
mov
xchg
fidivrs
and
xchg
in
iret
les
ja
sub
out
lahf
cmc
pop
cmp
lahf
jl
xor
xchg
clts
cmpsb
lret
jge
popf
push
mov
sub
sti
add
lret
add
mov
pop
lret
movsb
xchg
mov
ret
rcrl
and
ret
hlt
inc
jmp
popa
faddl
aaa
sbb
sbb
fnstcw
mov
pop
sub
jmp
pop
hlt
smsw
and
xchg
cmpsl
lahf
lret
dec
inc
cmp
mov
jl
ficomps
movsb
loopne
fxch
jns
lahf
xlat
ljmp
ss
mov
mov
fs
mov
sub
outsb
xor
icebp
addr16
popf
and
gs
std
adc
loopne
cmp
stc
sub
fistpll
mov
sbb
stos
mul
jae
repnz
mov
push
out
mov
cmp
and
push
pop
mov
test
out
add
mov
inc
scas
mov
push
mov
jnp
fwait
shrl
mov
jno
dec
pop
in
dec
sub
mov
jb
or
cmp
insl
imul
lea
add
dec
into
push
mov
cltd
cmp
cmp
lret
push
sti
mov
xchg
cmp
adc
mov
xchg
fldt
hlt
xlat
pop
dec
cmp
into
jo
sub
inc
mov
mov
leave
mov
testl
sbb
mov
fisubrs
subl
dec
sub
ljmp
jne
out
push
cwtl
and
and
leave
or
push
jle,pt
xor
xor
daa
adc
dec
adc
xorb
jnp
test
xchg
pop
stos
xchg
in
rorl
out
bound
sti
ja
ret
mov
adc
jno
stos
jl
inc
push
out
add
inc
cltd
loopne
pop
repz
jns
pop
jmp
subb
cmc
xor
push
cmp
or
jp
sub
scas
call
test
push
pop
dec
outsl
push
shll
dec
xchg
es
ds
adc
or
gs
pop
aaa
xchg
push
jnp
push
jno
pop
push
mov
jecxz
mov
lahf
cmp
adc
sbb
jnp
xorb
xchg
inc
fistl
lock
jne
bound
xchg
mov
mov
stos
bound
adc
lcall
sbb
xor
jl
scas
rorl
add
push
fwait
orb
cmc
das
xchg
and
pop
ja
scas
mov
pushf
lea
add
mov
filds
pop
scas
outsl
cmp
jmp
xchg
jb
or
mov
mov
in
cld
mov
ret
inc
push
out
xchg
sbb
lods
es
mov
add
scas
mov
je
jl
repz
pop
ret
xchg
mov
inc
push
idiv
mov
in
sub
cmpsl
in
xchg
pop
shll
jp
lods
mov
mov
mov
je
and
jbe
sbb
jbe
pop
fildll
add
movsb
push
jno
mov
testb
sbb
xchg
mov
jmp
dec
dec
mov
insb
mov
xchg
fisttps
cli
inc
lods
ret
inc
xor
js
stos
arpl
mov
mov
pop
or
cmp
sub
inc
insb
daa
pop
or
mov
sub
fistpl
jns
mov
jno
pop
loopne
sub
data16
sbb
adc
lcall
mov
lods
int3
or
fldl
in
stc
ss
inc
repnz
push
push
cmp
xor
push
and
es
shl
dec
xlat
or
lods
or
add
fsub
int3
pop
aaa
push
cmp
jns
xchg
inc
movsb
push
mov
sub
andl
loopne
and
movsb
sti
pop
sbb
das
cmpsl
stos
xor
leave
jne
pop
adc
and
push
lods
xor
sahf
sub
adc
cld
popa
jns
das
lahf
pusha
push
cmp
mul
add
adc
daa
fildl
push
xchg
ljmp
inc
es
dec
sub
jmp
xchg
cmpsl
test
xchg
mov
push
jns
loop
insb
fistl
sti
sahf
adc
mov
dec
mov
inc
in
sub
popf
push
adc
lods
inc
subb
gs
sarl
outsl
sbb
cmp
sub
push
cltd
sub
dec
mov
dec
stos
aam
test
mov
xchg
jo
fcoml
inc
dec
sbb
ds
pop
fcomps
jae
dec
test
cmp
clc
xchg
mov
mov
mov
inc
dec
push
xadd
push
scas
push
mov
sti
shll
stos
adc
jne
adc
aam
cmpsl
mov
mov
lret
orl
sbb
aas
je
sgdtl
pop
jo
xchg
mov
aam
ret
push
inc
iret
push
aad
imul
mov
mov
loope
jge
push
inc
cmp
inc
and
iret
or
xchg
or
jbe
fimull
mov
sahf
mov
or
std
sbb
push
mov
cmp
test
sub
shr
test
or
mov
fidivrl
mov
repnz
pop
insl
out
dec
jge
mov
mov
xor
fmuls
sbb
pop
les
aad
add
in
lcall
push
xchg
jmp
mov
sbb
mov
inc
int3
ret
jo
pop
sbb
mov
test
cmp
stos
xchg
fs
adc
sbb
mov
bound
lea
addl
mov
xor
mov
pusha
ja
jnp
mov
enter
xchg
or
pop
mov
ret
andb
pop
test
fcomi
pop
fistpll
add
push
mov
or
lcall
xor
mov
adc
push
sbb
jl
or
addr16
push
jecxz
pop
jmp
fcoml
out
mov
pop
cmp
fistpll
push
mov
adc
dec
xchg
fdiv
cmp
jmp
inc
fadds
lea
es
dec
adc
mov
sub
hlt
and
fbld
add
jmp
mov
je
adc
add
cmpsl
outsb
jnp
dec
repnz
push
mov
outsl
pop
adc
add
je
sar
inc
cmpsl
jo
xor
ficoms
push
jae
ja
lods
and
repnz
or
shll
pop
dec
xchg
shl
jo
cmpsl
mov
out
or
scas
outsl
lret
cltd
xor
das
mov
es
mov
mov
lcall
xchg
mov
xchg
aas
loop
enter
mov
loopne
sbb
lcall
cmp
cmc
lods
fstpt
xchg
outsl
adc
outsl
lcall
xor
daa
in
inc
mov
adc
clc
xchg
lea
movsb
lods
notb
add
gs
push
dec
mov
lea
shrb
push
out
iret
sub
movsb
test
les
nop
roll
sub
and
push
push
xor
mov
mov
ljmp
xorb
data16
cmp
sbb
into
mov
cmpsb
adcl
lods
jae
pop
ror
sbb
leave
sub
js
mov
aaa
cmp
loope
push
jmp
pop
pop
cs
add
movsl
cwtl
push
outsl
xchg
mov
mov
leave
icebp
in
adc
insb
pushf
and
mov
xchg
jle
jae
lds
adc
xchg
mov
lods
ret
xchg
cmp
cmp
jb
aas
inc
stc
hlt
js
xorb
or
cmc
divl
mov
pop
ljmp
jo
test
jge
lock
sbb
divb
ds
flds
jb
xor
dec
pushw
test
stos
outsl
adc
and
movsl
jbe
sub
movsl
movsb
adc
adc
cld
iret
in
fists
fcmovne
mov
mov
push
dec
cltd
ljmp
and
add
add
and
out
lods
ret
test
lcall
es
sbb
cli
cmp
mov
cmp
arpl
mov
dec
popf
repnz
rclb
cmp
jge
mov
inc
xor
in
or
push
lahf
mov
test
insb
iret
shll
and
adc
outsb
cmp
inc
cmp
xchg
mov
hlt
clc
pop
add
repz
std
aam
outsb
xchg
shll
out
dec
push
and
in
jg
test
jmp
or
adc
and
sbb
jmp
mulb
jg
pop
dec
repnz
adc
mov
dec
adc
mov
lcall
ret
push
push
hlt
jb
push
shrb
dec
push
and
sub
mov
lea
adc
xor
push
push
pop
mov
dec
adc
ret
xchg
ss
mov
pop
stc
lcall
outsb
loope
test
sub
pop
mov
jno
pop
daa
inc
into
repz
std
mov
inc
jmp
pop
inc
mov
jno
push
or
push
jmp
icebp
ds
or
repnz
mov
xor
outsb
into
sub
hlt
jnp
jbe
xor
rorb
pop
in
aam
mov
and
std
xchg
sub
jg
jmp
in
pop
cwtl
push
or
insl
lods
mov
xor
xchg
repnz
mov
jecxz
out
jg
xor
dec
add
xchg
enter
inc
ljmp
jno
xor
enter
out
and
ffreep
lods
pop
adc
xchg
sub
pop
out
in
push
xchg
mov
jge
ds
ja
xchg
sahf
pop
jbe
mov
and
sub
cmp
cli
inc
call
push
ret
push
call
mov
fsubrs
leave
cld
inc
cmpsl
mov
lods
stos
adc
sbb
mov
mov
je
xor
or
clc
pop
movsl
inc
movsb
mov
jge
adc
add
rcrb
xchg
mov
in
mov
and
popf
xchg
ss
pop
outsb
or
pop
out
dec
adc
push
icebp
sti
pusha
or
pop
fldl
lock
out
ret
addr16
push
sbb
jge
mov
xchg
arpl
or
loopne
and
stc
pop
mov
pop
lods
mov
mov
xchg
loope
xchg
xor
mov
add
sub
jecxz
mov
add
add
jae
pop
mov
mov
filds
xchg
mov
in
pop
mov
pop
cmpsl
pop
mov
pop
push
mov
pushf
or
mov
stos
fwait
in
xchg
mov
mov
pop
test
inc
add
add
jnp
and
sbb
sbb
add
icebp
mov
or
fs
push
movsb
call
mov
call
xor
aas
add
fs
test
lods
ficomps
add
ja
in
mov
in
mov
or
popa
mov
dec
pop
repz
sbb
ror
push
bound
iret
int
out
add
ficoms
filds
mov
xchg
add
pop
lods
mov
or
cltd
subl
sub
and
js
div
outsl
lret
shl
xchg
cmpsb
mov
popf
adc
pop
add
test
add
jno
jle
int
clc
add
pushf
cs
or
xchg
push
cmp
inc
movsb
rorb
mov
xlat
jo
mov
and
and
and
dec
push
data16
or
cld
lahf
push
mov
dec
add
and
lods
adc
insb
cmp
mov
xchg
aad
and
xor
jo
dec
xchg
cmp
push
pop
add
data16
jbe
dec
aas
fcmovnb
rorl
or
neg
mov
lods
dec
lret
add
idivb
cmp
pushf
adc
aad
fcomps
xchg
scas
jnp
cmp
inc
cld
add
outsl
mov
in
clc
xor
inc
sub
jns
fbstp
icebp
xor
iret
inc
jno
lcall
mov
dec
je
push
inc
fildll
inc
out
in
faddl
adc
aam
jmp
dec
ss
sbb
adc
sbb
ud2
inc
addl
xchg
xchg
jbe
sbb
orb
inc
jnp,pn
movb
into
inc
loopne
push
dec
aam
int
sbb
out
mov
xchg
push
sub
pop
xchg
mov
xchg
cmp
test
dec
xchg
push
cs
lods
js
sub
jno
mov
ret
cmp
je
inc
xorb
pop
jb
jbe
lods
loope
or
push
inc
xor
lds
lahf
stos
rcrb
mov
cs
dec
mov
aad
lock
mov
shrb
shrl
mov
dec
jp
into
xchg
mov
and
xchg
cli
je
sbb
cwtl
das
xchg
sahf
cmp
repz
insl
arpl
push
xor
scas
or
imul
scas
popf
cwtl
leave
and
jmp
xlat
clc
fsubrs
rcrb
jnp
jl
stc
les
ljmp
sti
xlat
out
xlat
and
fwait
imul
and
scas
cmp
rcr
push
int3
pop
mov
ss
movb
aam
add
movsl
xlat
xor
fwait
in
pop
ss
enter
sti
and
mov
scas
ds
jnp
cmp
in
mulb
or
inc
lret
aam
popf
jg
scas
shr
inc
adc
mov
andb
clc
aam
pop
adc
mov
pop
scas
add
pushf
ja
and
push
jg
test
test
fildl
out
sub
adc
xchg
push
push
out
popf
xor
mov
adc
pop
sarl
popa
in
inc
dec
std
shl
sbb
out
push
sti
inc
sub
cmp
lods
int
or
pop
sub
popa
cmp
adc
inc
fdivrs
dec
mov
test
push
lods
mov
iret
sub
fisttpll
movsb
cmpsl
iret
push
pop
mov
dec
loop
lods
test
dec
in
pusha
jp
cli
pop
subb
xchg
jbe
xchg
xor
adc
cmp
or
fiaddl
sub
pandn
rol
and
mov
xor
lret
lahf
cltd
push
mov
pop
or
shlb
popf
jae
les
aam
in
mov
jge
adc
scas
mov
mov
lea
mov
push
or
pop
cld
mov
sbb
out
das
jbe
popa
fsubl
leave
sbb
xor
adc
push
fistps
mov
adc
call
jnp
jmp
add
ds
dec
cmp
movsl
rorb
jg
lret
adc
sbb
repz
outsb
lods
cmp
inc
outsl
mov
es
inc
into
jmp
cmp
insl
hlt
leave
stos
mov
xchg
push
cmpsl
ret
sbb
loopne
call
xor
lret
cmp
ja
sarl
xchg
adc
out
lcall
mov
out
add
sbb
sbbl
sti
jb
add
push
jae
iret
dec
enter
pusha
int3
mov
leave
stos
dec
in
jl
and
shll
push
mov
push
mov
int3
add
inc
lods
sbb
enter
cmp
xor
enter
outsl
xchg
loopne
or
popf
test
pusha
ss
ja
aas
add
popa
shrl
ret
cs
dec
bound
mov
cld
mov
add
fsubr
js
pop
in
je
popf
or
outsb
inc
testl
pusha
repz
nop
loopne
cmpsb
outsb
push
test
cmp
or
out
pop
mov
aas
scas
add
stc
mov
sbb
push
push
movsl
mov
fsubrs
nop
mov
add
rorl
push
sub
add
cwtl
outsb
mov
push
mov
test
repnz
stc
adc
fldl
sub
pop
mov
mov
fldt
adc
mov
push
cli
jecxz
cmp
inc
je
rorw
loope
mov
js
jnp
out
fnstsw
add
test
add
cwtl
lcall
cld
push
and
add
pop
mov
pop
add
mov
ret
xchg
mulb
outsl
ljmp
sbbl
ret
test
jo
inc
insl
mov
fdivs
decl
add
or
testb
mov
xor
js
inc
enter
sub
sub
or
jp
int3
xchg
xchg
pop
cltd
jl
add
int
orb
xchg
addr16
mov
lahf
mov
loopne
cltd
mov
iretw
ss
jmp
jmp
cld
mov
mov
and
faddl
mov
push
cmpsb
shrl
pop
cwtl
inc
cmp
and
adc
push
mov
mov
dec
and
shll
add
jb
and
aam
daa
xor
cltd
fisubs
add
mov
push
xor
rcr
jle
sub
jns
mov
cmp
in
rorb
imull
push
in
mov
lock
cmp
and
push
and
push
and
les
adc
cmp
jg
mov
outsl
test
das
sbb
enter
dec
out
test
js
jmp
and
adc
add
mov
sbb
into
mov
and
lret
mov
xor
xchg
adc
pop
adc
jg
and
cmpsb
inc
cmp
jb
lds
mov
fs
sub
fisubrs
test
out
pop
push
mov
jecxz
mov
insl
subb
ljmp
pop
or
fcmovb
icebp
aas
aaa
dec
inc
inc
lret
in
lods
push
pop
jbe
andl
je
cmp
xchg
mov
jns
mov
aad
mov
xchg
adc
dec
nop
out
popf
adc
cmp
sub
or
push
or
push
mov
sbb
js
mov
fwait
jae
in
sti
das
cmpsl
idivl
aaa
enter
das
fwait
popf
jae
nop
fimuls
xchg
gs
inc
cmp
gs
sub
outsb
clc
aad
push
push
mov
jno
divb
jae
shrl
into
xchg
cmp
fs
push
fcompl
scas
sbb
mov
fmull
clc
and
xor
dec
loope
in
test
mov
insb
sbb
jo,pt
orb
jmp
shll
ret
inc
stos
sahf
jne
add
int
mov
stos
aas
mov
mov
dec
sti
jg
out
out
arpl
cltd
mov
cmp
pop
out
in
inc
call
mov
adc
sbb
andl
insl
adc
pop
hlt
int3
es
mov
addr16
sub
int
pop
mov
push
repnz
jnp
daa
cmp
sti
xchg
mov
aam
jmp
stos
imulb
add
pop
stos
xchg
push
lret
xor
iret
into
push
or
cli
push
movsl
or
and
xchg
lds
xor
outsl
inc
mov
movsl
lret
adc
add
sti
data16
mov
sub
jl
add
jg
ja
testl
ret
popa
sub
sbb
and
or
cmp
subb
pop
int3
arpl
mov
dec
add
xor
popf
sahf
popa
and
xchg
inc
mov
mov
ret
jb
aas
dec
xchg
clc
sti
mov
or
add
mov
enter
fcmovb
stc
dec
fnstcw
andl
cld
add
push
or
push
mov
repz
add
dec
add
std
pop
jg
mov
xor
stc
or
push
cld
cmpsl
test
xchg
jbe
sbb
xor
adc
sete
icebp
aaa
ja
lret
stc
imul
ret
xlat
insb
pop
fadd
testl
pop
jno
mov
arpl
mov
pop
mov
xor
or
mov
dec
imul
jl
mov
mov
decl
pop
push
mov
adc
jg
stos
lcall
mov
push
pop
nop
leave
jmp
testb
mov
and
xchg
in
mov
loop
rclb
mov
cs
mov
shrl
adc
mov
cmc
test
xor
ret
fcom
popa
shrl
push
inc
cmp
push
adc
mov
and
inc
jmp
ret
outsl
ror
movsb
pop
push
mov
push
jmp
into
ss
pushf
or
lods
bound
dec
xor
dec
push
pop
mov
lea
pop
lods
call
sbb
inc
loop
outsb
mov
ja,pt
sub
bound
mov
popa
jno
mov
subb
inc
cmp
pop
mov
jp
and
lods
mov
fs
cltd
outsb
mov
ljmp
sbb
repnz
mov
mov
cli
push
cmp
test
fisttpll
mov
andl
pop
mov
add
stos
adc
push
push
push
mov
xor
lret
lahf
lret
add
mov
iret
cmp
imul
ret
xchg
and
sub
test
dec
shl
push
xchg
or
test
nop
lret
jbe
ror
fwait
pop
mov
and
cmc
inc
cmp
ror
ficompl
mov
dec
push
clc
adc
movsb
out
movsl
or
jp
aas
inc
sbb
dec
push
mov
xor
jnp
or
jne
pop
ret
movsb
dec
mov
ret
aaa
cli
fdivr
int3
leave
and
jns
mov
loopne
mov
arpl
out
mov
xor
loope
and
and
stc
vmovdqu
movsb
or
frstpm(287
push
xchg
lock
mov
out
push
icebp
jb
aam
mov
bound
cli
shlb
shl
and
inc
sub
and
xchg
add
add
sbb
inc
aas
jl
lahf
scas
add
cmp
out
dec
dec
mov
adc
push
cmp
xlat
cmp
adc
mov
je
and
rcrb
xor
jecxz
dec
jmp
jae
xchg
es
lods
pop
mov
mov
push
test
ss
leave
insb
jmp
push
push
fadd
lcall
lcall
jecxz
lcall
lock
test
jl
push
subl
xlat
lea
inc
pop
lods
inc
or
cs
jo
adc
push
jae,pn
shlw
je
dec
fwait
adcl
pop
rcrl
rorb
faddl
aaa
out
xlat
push
sbb
mov
mov
out
mov
mov
addr16
xor
into
inc
cmp
jle
lds
imul
jecxz
shrb
xor
push
imul
or
mov
pop
xlat
pop
sub
mov
outsl
das
out
out
xchg
arpl
pop
lea
cmp
leave
adc
dec
int3
es
jne
cld
mov
and
xchg
xchg
pop
lea
mov
or
cld
fidivs
or
pop
movb
push
div
lea
ds
aaa
jae
jne
sarl
mov
jne
js
subl
sub
adc
bound
cmpsb
andnps
and
and
jae
or
ret
mov
jecxz
push
sub
cli
dec
jns
adc
nop
ljmp
cmc
test
pop
dec
jge
mov
cmp
lret
cld
repz
jge
lret
imul
pop
push
rcr
jb
xor
gs
inc
stos
mov
mov
mov
inc
sbb
stc
cmp
mov
lret
into
or
mov
aad
ja
inc
sub
in
adc
cwtl
scas
je
fstpl
add
cld
test
loop
cld
aaa
pop
jnp
lea
popf
mov
add
repnz
pop
sbb
addr16
push
stos
inc
es
jmp
lea
nop
lock
xchg
cli
inc
cmc
int
jle
int
mov
push
cli
icebp
add
test
ss
jl
push
movsl
pop
cmpsb
dec
xchg
es
lea
xchg
sbb
push
out
sub
lret
stos
jns,pn
xor
imul
lret
mov
pop
xchg
xchg
sub
int
mov
xchg
cmpl
mov
fdivrs
push
bound
and
pop
cmp
sub
icebp
push
mov
fwait
sub
js
or
push
dec
test
sub
cli
mov
dec
add
pop
sti
xchg
cmp
push
or
dec
xchg
pop
gs
inc
cmc
lret
movsb
test
std
fstl
int
fcompl
sbb
or
aam
das
or
int3
and
loop
or
mov
push
push
popf
lds
jp
icebp
fwait
xchg
cmpsb
sub
ds
testb
sbb
call
adc
decb
fmulp
push
lcall
push
jl
or
stc
jg
or
call
popa
push
sub
pop
mov
sarb
jmp
pop
shlb
xchg
jl
adc
or
fimull
test
add
mov
mov
movsb
scas
sbb
insl
cmp
or
leave
and
push
mov
lods
popa
jmp
or
or
mov
es
cmp
test
sahf
mov
leave
cmp
movsl
test
int3
pop
jg
cmpsl
mov
out
sti
inc
jle
je
or
push
add
mov
je
adc
sub
shrl
xchg
and
rol
ss
sbb
in
xchg
in
out
mov
shlb
daa
pushf
sbb
stos
push
lret
iret
insb
adc
inc
out
bound
ds
xchg
mov
repnz
push
fs
orl
bound
scas
rclb
mov
xchg
outsl
cmpl
adc
rcrb
jle
inc
mov
mov
addl
inc
in
mov
mov
jnp
int
jno
fistl
or
imul
inc
sbb
std
mov
pop
std
aas
adc
mov
fidivl
int
adc
cmpsl
dec
btl
cltd
and
shll
jle
sub
sbbl
dec
aas
lahf
push
loopne
add
stos
das
jp
cmpsb
out
sbb
lods
test
das
mov
gs
xchg
int
test
sbb
out
jp
aas
adc
jne
rol
cwtl
or
inc
adc
ret
and
inc
inc
cmpsl
filds
sbb
push
mov
add
repnz
jae
push
ljmp
lret
test
mov
movsl
cmpb
repnz
scas
adc
lock
in
cmc
mov
xchg
push
mov
push
xchg
xlat
or
int3
push
out
add
aas
scas
loop
scas
dec
and
and
add
cmp
sti
shrl
stos
repnz
fimuls
and
std
inc
mov
ss
lods
push
push
popf
int3
clc
dec
fs
scas
sbb
rorl
xchg
add
testb
cltd
cmc
pop
js
xchg
xchg
js
mov
cmc
cmp
negl
fsub
mov
cwtl
in
xchg
ret
out
push
inc
das
add
jge
sub
cmp
cmpsb
or
shll
popa
shlb
adc
mov
and
leave
mov
sar
or
dec
push
jbe
rolb
cltd
popf
jl
repz
cmc
and
jecxz
stc
hlt
gs
or
fstpl
push
adc
jle
mov
in
push
and
jbe
and
stc
pop
mov
popf
outsb
pop
or
pop
adc
jecxz
cmp
push
mov
hlt
pop
adc
stos
cwtl
pop
ret
jno
jp
imul
jns
or
push
out
sub
out
pop
and
imul
lods
outsl
nop
push
push
jnp
cmp
jnp
jecxz
fdivr
mov
xchg
push
dec
cld
fisubs
fldcw
cli
and
jns
pop
je
mov
sub
jl
add
lds
sub
push
pushf
xlat
cltd
sbb
pop
cld
loop
ja
iret
outsl
stos
and
pop
inc
mov
dec
push
jmp
loop
sub
xchg
and
cmp
cmp
ret
jmp
adc
loopne
sbb
dec
sub
lret
push
jmp
xlat
jno
insb
rcrl
jmp
in
sbb
sub
cmp
sub
sbb
xchg
mov
xchg
fwait
xor
test
lods
xor
sti
sbb
pusha
and
loop
add
push
shl
imul
cmp
aas
xor
inc
dec
movsl
pop
and
in
xor
jg
cmp
dec
lahf
sub
aad
mov
movsl
ds
dec
leave
mov
fistpl
dec
mov
dec
sub
negl
jle
cli
xlat
adc
jne
sub
inc
std
lods
mov
lods
and
sub
and
scas
xchg
mov
cmc
idivl
into
lods
int
test
adc
push
add
sub
icebp
cmc
fldenvs
mov
fldl
inc
lods
mov
cmp
aas
mov
out
xor
lret
and
std
dec
mov
mov
rorb
fldl
and
out
adc
icebp
pop
jne
jo
in
add
push
inc
jb
repnz
shrl
hlt
xchg
je
dec
ret
out
mov
scas
lds
inc
mov
leave
setns
imul
jne
push
jmp
out
es
cmp
inc
movsb
cmc
ss
push
insl
int3
data16
orl
xor
pusha
movsl
add
ss
and
nop
fstps
into
cs
jmp
std
ret
jp
xor
pusha
into
cmp
leave
add
jnp
push
call
pop
hlt
loope
mov
jns
scas
dec
repz
push
mov
xchg
sahf
in
inc
pop
pop
or
mov
push
jns
xchg
vprotq
jnp
outsl
imul
dec
inc
fbstp
test
push
push
stos
push
mov
popa
hlt
int
fsub
mov
sbb
mov
push
inc
scas
pop
insl
das
in
xor
into
nop
mov
mov
imull
xchg
dec
cltd
xchg
pushf
inc
xchg
and
divl
cmp
add
and
in
add
xchg
pushf
pop
xchg
aas
sub
pusha
out
inc
adc
pop
clc
fnsave
lock
je
jno
push
ja
mov
push
dec
sbb
fs
cmp
adc
icebp
daa
sbb
int
dec
mov
addr16
xor
cmc
ret
shl
ret
punpcklbw
repnz
xchg
jne
sub
cmpsl
mov
jp
das
in
inc
pop
jp
divb
in
pop
test
cmp
dec
or
scas
jnp
push
cmp
sub
push
aad
jl
out
xchg
addr16
addr16
xor
daa
in
aaa
push
pop
push
cmp
push
sbb
push
cmp
adc
pop
mov
mov
andl
in
cld
mov
mov
mov
mov
xchg
dec
inc
movl
pop
outsb
jecxz
stos
inc
pop
mov
jle
pop
ja
outsl
cmp
sub
dec
sub
dec
mov
frstor
and
js
addl
jae
mov
in
call
jb
sbb
sbb
mov
cmpsb
inc
xor
add
frstpm(287
pop
cli
out
nop
cltd
inc
dec
adc
das
lret
mov
in
jne
std
adc
aad
fcompl
insb
fistpll
push
xor
sbb
cltd
mov
inc
test
adc
jge
popa
sub
fiadds
jg
mov
push
adc
sti
jg
fs
dec
aad
lcall
xchg
ljmp
sub
pop
add
cmp
lret
cli
in
aaa
mov
outsb
mov
dec
enter
arpl
sbb
stos
cmp
dec
dec
jmp
sbb
dec
loope
jnp
inc
fmul
jb
add
add
fstl
faddl
int3
lock
mov
or
xchg
xchg
mov
shll
adc
vpxor
mov
fwait
add
popa
outsl
adcl
movsb
pop
ret
and
pop
push
inc
xor
xor
inc
pop
ss
mov
xchg
xchg
loope
insl
sub
sbb
inc
mov
adc
cmpsb
push
scas
mov
mov
jmp
jnp
cmpsb
push
flds
inc
icebp
in
inc
pop
hlt
xchg
sbb
jne
push
inc
aas
mov
xchg
addr16
popa
pop
sbb
and
movsl
dec
and
fiaddl
repz
repz
or
insl
shll
mov
mov
cwtl
mov
lret
nop
out
mov
cmpsb
outsb
mov
push
enter
stc
pop
dec
push
xor
and
pop
mul
outsb
mov
fs
mov
imul
idivb
cmovge
xchg
push
add
outsb
or
es
inc
xchg
pop
and
jmp
lahf
movsl
jp
leave
add
data16
into
add
in
cmp
data16
bound
imul
pop
xchg
fisubl
inc
inc
add
push
jl
hlt
fldenv
shrl
xchg
ljmp
mov
pushf
ljmp
and
cmp
dec
mov
push
xchg
in
adc
inc
pop
repz
xor
into
pusha
out
out
mov
cld
addr16
lcall
aaa
arpl
leave
js
flds
mov
fiaddl
out
fmulp
in
insl
xchg
in
adc
cld
mov
adc
pop
cmc
add
cmp
loop
cmc
sti
clc
lock
xor
mov
sbb
repnz
stos
adc
adc
imul
pop
mov
add
dec
aaa
fwait
inc
movsb
pop
sub
mov
mov
adc
mov
cmc
test
inc
shrl
ss
push
mov
int
pop
jbe
testb
leave
and
cmpsb
dec
push
mov
pop
add
add
xchg
les
xchg
cwtl
push
cmp
insl
ret
aas
add
cld
repnz
out
push
pop
sbb
jbe
arpl
dec
push
inc
test
addr16
add
movsb
mov
jge
push
mov
add
pusha
filds
repnz
cld
sub
mov
pop
cli
outsb
xchg
cld
jne
xor
pop
adcb
pop
sub
xor
ja
mov
xchg
shrl
mov
repz
fidivrs
push
fsubp
fimuls
testl
push
sub
loop
loopne
sbb
xor
lods
loop
fimuls
sub
incl
sub
pusha
mov
xor
push
stos
push
and
orl
gs
pop
mov
lock
test
shlb
adc
inc
inc
outsb
loopne
and
pmuludq
cmpsl
rolb
adc
mov
xchg
mov
mov
mov
push
icebp
cmp
jo
mov
mov
loop
jge
lds
pushf
outsl
pop
mov
adc
sbb
dec
lea
andl
sub
dec
dec
mov
ljmp
mov
inc
mov
cmc
jb
bound
mov
pop
andb
movsl
in
fidivrl
inc
test
mov
rcll
sbb
xlat
mov
mov
xchg
pop
mov
fimuls
stos
xchg
push
jnp
stc
addb
ljmp
or
jne
mov
pushf
rorb
out
adc
push
shlb
push
adc
lods
dec
pop
cmpsb
arpl
das
psllq
das
mov
flds
cmp
add
mov
sub
inc
movsl
mov
sbb
cmp
sahf
mov
jmp
xor
stos
push
orb
pop
rorl
frstor
pusha
ds
or
push
sub
lock
movsl
mov
inc
out
shll
add
pop
xchg
in
test
mov
std
dec
xor
sub
sub
add
clc
push
repz
cmp
fwait
push
sub
sub
xor
push
mov
out
xor
cmp
jecxz
lods
push
imul
sahf
in
sub
dec
call
push
mov
test
mov
push
jge
dec
ret
jo
lds
adc
mov
jp
push
sbb
dec
and
std
into
push
dec
cmp
int3
sub
daa
cmpb
sbb
stos
cmp
mov
data16
jg
dec
insl
fsub
sub
push
pop
idivl
adc
aaa
daa
adc
or
pop
mov
xchg
fnstenv
jg
clc
inc
mov
repz
jecxz
adc
pop
pop
fsqrt
xchg
insb
mov
inc
pop
sti
jmp
ret
out
add
cmpsl
inc
ljmp
inc
dec
fwait
shl
cld
lcall
out
adc
push
push
mov
arpl
push
pop
lret
cmpsl
xor
inc
mov
test
aam
pop
movsb
movsb
and
sarl
test
outsb
mov
test
push
push
jne
mov
icebp
mov
dec
pushf
dec
xchg
fistpll
cli
shrb
xor
cs
push
xchg
xchg
xchg
bound
jl
dec
jo
push
imul
in
aas
enter
mov
dec
popa
fnstsw
jb
addr16
and
cmp
lahf
insb
jp
repnz
and
lods
or
cmc
icebp
xchg
xchg
cmp
fiadds
or
pop
xchg
and
jno
inc
pop
jg
inc
cmpb
jle
add
dec
pop
hlt
insl
sahf
jne
pop
imul
fs
mov
icebp
add
mov
ja
cmc
push
cmp
mov
cltd
fildll
inc
xchg
xchg
or
inc
mov
cmp
xchg
out
ret
test
xchg
inc
hlt
neg
adc
fmuls
sub
fs
in
push
push
and
mov
and
mov
fiadds
fwait
mov
mov
nop
jae
sbb
and
es
jo
fidivs
rcl
xchg
in
xlat
adc
sti
lea
fnsave
push
shrb
push
adc
fwait
ja
cmp
dec
and
jns
mov
xor
jo
jns
cmp
jae
or
mov
xor
cmp
andb
aam
add
imul
xchg
sbb
xchg
aas
inc
movsl
jbe
pop
std
pop
jmp
cmp
loop
cwtl
mov
jmp
xchg
lea
lret
shrb
js
jae
pop
push
data16
ret
ds
stos
ds
push
lea
push
sti
dec
xchg
sub
jne
push
xor
cmp
xchg
jo
lcall
inc
mov
loop
sub
xchg
pop
mov
dec
jns
cli
scas
pop
pop
and
mov
aas
pop
int3
and
push
outsl
imul
push
sub
leave
sbb
movsb
cmp
sub
mov
es
or
inc
bound
and
jmp
adc
jns
mov
xor
pop
sti
jnp
lods
add
loop
out
and
mov
push
lcall
push
inc
cmc
negb
fcomps
test
fildl
xor
pop
icebp
lret
sbb
hlt
dec
out
ret
testl
adc
leave
and
jge
adc
pop
mov
in
loop
cmp
cmpsl
and
xor
rcll
fcoml
test
mov
xchg
jg
mov
insl
push
lods
lods
and
ljmp
sbb
test
gs
jg
sub
aam
xchg
les
aas
sub
xchg
fs
imul
pusha
ja
mov
lock
inc
ja
jne
mov
mov
xor
jp
xchg
push
in
in
jecxz
test
daa
xchg
jb
roll
lcall
popf
hlt
xchg
pop
mov
imul
jmp
or
icebp
sub
xchg
mov
movsl
adc
xorl
sbb
xor
shlb
adc
lret
xor
mov
xchg
aad
shrl
lret
dec
mov
mov
xchg
in
cmp
mov
pusha
and
fsubl
insl
or
aas
push
cmp
repnz
sbb
mov
repz
jo
mov
pop
aas
stos
pop
in
rclb
dec
push
repnz
cmp
jg
dec
scas
xchg
fiaddl
sub
push
inc
and
outsb
repnz
xchg
sbb
lea
sub
push
in
test
jle
mov
lock
pop
xchg
test
mov
lret
pop
inc
je
sti
add
sbb
jl
rcll
push
inc
mov
fadds
insl
in
dec
pop
dec
andb
or
jg
ds
mov
out
or
cmp
pop
bound
movsb
sarl
ret
cmp
push
sarb
jae
in
enter
enter
scas
push
xor
xchg
mov
lock
and
mov
xor
jo
insb
sbb
aad
xor
jp
cmp
mov
sti
sbb
ss
notl
or
or
lock
sbb
pop
ja
clc
cmp
fs
clc
loopne
ja
cmpsb
sahf
ret
pusha
xlat
adc
fs
mov
insb
clc
xchg
ss
incl
cmp
dec
jmp
cmpsb
dec
hlt
cmpsl
inc
dec
pushf
mov
repz
in
jl
gs
fwait
rorl
push
js
fucomip
xchg
out
mov
fwait
xor
mov
cmc
or
les
into
hlt
mov
push
lahf
adc
sarb
inc
sub
sbb
mov
sbb
adc
xchg
ret
lret
pop
sbb
bound
mov
push
popf
push
int3
rcrb
jmp
loop
fdivl
inc
push
mov
scas
pop
xchg
out
or
sbb
push
adc
mov
ret
gs
lods
aaa
icebp
ja
imul
dec
add
shl
lea
cmp
mov
mov
fs
lds
mov
enter
xchg
stos
ljmp
aaa
pop
mov
sbbl
int3
enter
stc
repnz
aam
call
je
or
jg
lods
insb
pop
movsb
dec
daa
cltd
clc
cs
sbb
dec
sbb
fwait
mov
out
mov
rorb
mov
hlt
clc
push
jl
arpl
outsl
iret
cmp
jge
inc
scas
lea
push
orl
daa
out
inc
cmp
out
fstpl
lods
jle
pop
jge
pop
insb
dec
inc
aas
data16
add
inc
popf
in
out
std
icebp
mov
inc
in
inc
cmp
xchg
cmpsb
jl
or
insb
or
movsl
out
mov
out
push
push
cli
cmp
and
cs
pop
pop
scas
mov
out
hlt
daa
or
int
sbb
shrb
pop
outsl
inc
cmp
cli
push
lock
test
fnstcw
std
or
fwait
leave
jge
adc
inc
ret
xchg
jmp
pop
xchg
sub
push
out
cmovnp
cmp
inc
dec
imul
pop
lret
in
and
arpl
and
scas
xor
shll
xor
lcall
xor
mov
cmp
inc
loop
and
xchg
iret
pusha
mov
int3
sub
xchg
xor
mov
push
dec
repz
in
fildll
test
jecxz
addb
xchg
mov
inc
arpl
mov
mov
outsb
sti
inc
jo
jae
stos
lods
out
lahf
daa
push
jns
sub
out
test
jo
jl
lret
addr16
cltd
popf
scas
or
sub
mov
imul
pusha
iret
icebp
fwait
mov
and
sub
jae
je
inc
aam
in
test
add
loopne
leave
dec
cltd
push
xor
hlt
and
xchg
outsl
pushf
pop
cmc
into
lods
or
into
cmp
leave
movsb
mov
push
push
lock
jmp
jb
call
ret
adc
rcrl
sub
stc
pop
xor
shll
and
jno
pcmpeqw
test
xchg
mov
dec
push
mov
fwait
iret
cmpb
js
sub
leave
mov
fdivr
cld
daa
andl
scas
loop
mov
dec
repz
lcall
into
and
call
ljmp
or
mov
scas
cmp
lock
gs
pop
mov
lea
repz
pop
loope
push
mov
push
jno
cmpsb
pop
ficomps
cmp
loopne
push
aas
xchg
push
inc
test
adc
or
bound
out
adc
or
mov
dec
jne
loopne
xchg
test
aas
pop
fwait
pop
add
shl
mov
int3
add
pop
movb
cmp
cli
das
lods
mov
ja
cmp
jmp
or
push
inc
mov
outsb
adc
nop
push
inc
jmp
imul
hlt
adc
sub
xchg
fs
fwait
mov
jge
loope
out
adc
sub
pusha
or
in
stos
and
push
in
clc
popf
jmp
dec
dec
into
rorl
insb
inc
fstps
adc
fnstenv
nop
cs
gs
lods
shl
in
xor
pop
xor
and
mov
imul
not
in
mov
ss
xchg
mov
pushf
mov
xlat
inc
push
push
arpl
scas
add
movsb
out
in
cmpsb
das
or
int3
ljmp
mov
loopne
sbb
xchg
jae
ljmp
cmpsb
or
cmp
cmp
std
shlb
cwtl
mov
xor
cmp
inc
scas
pop
gs
xor
jno
aam
inc
fidivl
imul
hlt
fst
shlb
inc
sub
jl
iret
cmc
cld
push
jo
nop
dec
std
pop
bound
cld
imul
inc
test
ja
int3
orl
fwait
xchg
or
adc
insl
out
sbb
outsl
daa
test
mov
sbb
pop
xchg
imul
idivl
inc
outsl
mov
clc
nopl
sub
sbb
test
mov
xor
mov
out
jle
pop
insb
loope
out
fs
inc
dec
xchg
push
xor
cmc
pop
int
sbbl
jnp
add
cmc
xor
orb
popf
das
ljmp
pop
xchg
iret
pop
xor
loopne
inc
je
and
xor
in
xchg
movsb
mov
movsl
leave
or
mov
loop
add
xchg
sub
mov
cmp
cmp
mov
int
mov
or
mov
lret
cmp
mov
dec
sub
into
jns
cld
lock
pop
stos
test
repz
pop
mov
fcoms
inc
mov
imul
or
mov
mov
add
out
js
out
je
scas
cmc
dec
ret
jg
popf
pop
mov
sub
xor
xchg
push
add
loope
push
and
mov
in
jns
xchg
out
fwait
scas
jae
jmp
mov
aam
es
or
scas
mov
lods
push
outsb
mov
nop
xor
jl
pop
es
xor
lret
leave
and
addr16
mov
xchg
mov
stos
cmpsb
test
je
insb
stos
data16
sub
push
mov
sub
inc
add
out
test
dec
push
enter
shlb
mov
jl
lcall
add
insb
push
sbb
inc
pop
push
xor
insl
ror
sub
popa
adc
test
icebp
xlat
into
adc
fbld
and
das
cli
xor
shrl
in
add
test
and
loop
test
dec
jbe
jl
jo
mov
cmp
mov
and
xchg
mov
pop
cmp
in
dec
xor
jbe
push
push
cmp
sub
cld
mov
outsb
movsl
inc
int
idivl
inc
aaa
xor
test
jp
xor
lea
jmp
jo
dec
push
stos
push
push
xorl
mov
dec
int3
push
ja
fcompl
cwtl
and
push
pop
nop
pop
xor
pop
call
jo
std
mov
push
pusha
mov
mov
repz
aaa
sbb
stos
jmp
cmp
clc
addr16
pop
in
ljmp
dec
xorb
pop
fdivs
mov
lret
or
test
lahf
sub
sub
adc
and
hlt
push
outsl
in
fdivrl
jge
push
mov
popf
and
leave
dec
dec
or
dec
enter
in
dec
jmp
sbbl
mov
sbb
push
cmp
aam
inc
or
ds
les
adc
mov
ljmp
mov
in
sub
pop
xchg
ljmp
popa
push
cwtl
stos
sub
out
jl
and
pop
mov
cmp
jmp
add
mov
scas
xchg
mov
call
pop
jmp
sub
mov
imulb
fdivrs
es
and
sub
aaa
in
adc
sbb
addl
pop
pop
cmc
cmp
mov
inc
push
sub
fnsave
push
lea
mov
aas
jle
cmp
movsl
push
mov
fucom
cmpsl
jns
push
xor
shrl
in
add
cmpsb
cmc
or
popf
idivb
inc
mov
cmc
out
jnp
push
or
mov
lds
pop
dec
insb
ds
mov
pop
pop
cltd
sbb
lret
in
out
in
push
subl
adc
sbb
add
hlt
mov
mov
push
inc
pusha
push
pop
test
sub
xchg
xor
mov
add
sti
cmpsl
ja
rol
mov
pop
mov
jp
push
inc
das
pop
test
jno
dec
fwait
iret
and
aas
push
ret
jo
push
fstl
clc
cmp
pop
fwait
mov
sbb
lea
mov
rclb
adc
jo
pop
inc
or
xchg
fistpll
inc
test
push
je
add
inc
inc
xor
cmc
lea
pop
jbe
leave
jb
jp
pop
xor
out
and
rorl
scas
cwtl
addr16
dec
sarb
ds
lods
sbb
cmpsl
push
jo
cmpsb
fstpt
stos
enter
outsb
adc
ds
insb
in
insl
pop
repnz
ret
into
mov
push
cs
inc
call
jg
insl
hlt
sbb
stc
stc
or
sub
cmc
mov
ret
jns
cwtl
hlt
mov
xchg
and
or
in
mov
mov
add
jp
or
pop
insb
mov
xchg
test
push
push
imul
in
in
inc
mov
push
je
push
ds
sub
nop
mov
imul
pop
xor
mov
cltd
xchg
ja
xchg
lret
sahf
sbb
ret
jno
loopne
mov
mov
mov
jno
mov
cmpsb
test
xchg
imul
mov
mov
shl
lret
jmp
mov
jae
mov
inc
or
adc
inc
add
push
mov
sbb
cmp
lret
and
add
push
xchg
push
inc
fsubl
jns
push
mov
push
or
add
out
outsb
cmp
jmp
in
enter
pushf
jg
pop
sbb
mov
adc
mov
xchg
orb
xor
add
call
sub
mov
adc
xchg
aas
mov
stos
aas
sub
call
in
dec
jle
cmp
in
sub
dec
inc
jmp
adc
mov
inc
add
push
xchg
loopnew
adc
cmpsl
xchg
aam
cli
shrb
sub
add
add
adc
add
idivb
and
call
ljmp
xchg
aad
push
into
arpl
mov
jmp
dec
dec
popa
data16
sti
out
jno
arpl
inc
inc
xchg
insb
adc
dec
add
xchg
adc
shll
push
out
shrb
jns
sub
mov
cmc
sub
faddl
stos
sahf
and
xchg
sbb
jno
leave
shlb
xchg
mov
lret
jns
iret
adc
xchg
lods
jae
loopne
mov
pop
jge
push
movsb
test
jge
and
jbe
add
inc
cli
jmp
popf
sahf
test
lret
cmpsb
jae
test
into
movl
sbb
cmp
movb
lret
fisubs
popf
dec
enter
jge
xor
dec
negl
fstl
pop
data16
shl
lret
push
push
mov
sub
popa
stos
das
push
sahf
loope
sbb
movsb
test
ja
outsb
jmp
xchg
ds
xchg
cwtl
adc
push
push
xchg
mov
sbb
mov
xchg
jecxz
push
sub
or
mov
dec
cld
or
cli
xchg
sub
div
dec
dec
test
loopne
sbb
cmp
aam
rcl
mov
push
in
inc
push
js
pop
mov
popf
xchg
cmp
inc
pushf
in
jbe
sub
xchg
fs
stos
push
ja
sbb
jnp
jecxz
outsb
mov
adc
push
sti
int3
mov
fsubrl
lock
out
jo
sti
test
sti
inc
adc
xchg
movsb
imul
into
ss
test
out
sub
stc
sti
mov
xor
lods
pop
ja
repz
inc
cmp
adc
xchg
adc
jle
loope
stos
daa
sub
loopne
jae
mov
inc
ljmp
movsl
test
icebp
jg
adc
fwait
mov
mov
out
aam
test
adc
and
insl
cli
scas
aam
jmp
lods
mov
mov
cli
testb
in
jnp
push
stos
pushf
pop
jecxz
cmp
nop
mov
aam
pop
cltd
sbb
mov
dec
fnstsw
test
push
scas
and
dec
xchg
sub
mov
outsb
inc
mov
fidivrs
cmp
shll
aaa
mov
pop
sti
ret
xchg
lods
sbb
lock
ljmp
adc
push
in
divl
xor
test
stos
or
and
mov
repnz
pop
pop
inc
xor
jle
sub
fwait
test
call
in
aam
cmpl
out
nop
mov
pop
mov
test
arpl
icebp
loopne
fsubs
cmc
lods
push
and
jnp
mov
add
cmpsl
jp
dec
test
imull
xchg
sarb
ja
loope
push
imul
dec
add
adc
push
xor
push
mov
mov
xchg
icebp
loopne
inc
inc
pop
xor
and
ja
dec
nop
in
sbb
aam
xor
mov
jecxz
pop
popf
arpl
push
dec
imul
cmp
loopne,pn
movsb
push
in
lcall
les
int
outsb
cwtl
imul
sub
mov
xor
rorl
sub
ficoml
pop
add
out
loopne
cmpsl
fs
xchg
jmp
adc
xchg
cmpsb
cmp
push
fs
push
xchg
push
js
lods
repnz
mov
xchg
loop
xchg
mov
pop
inc
xadd
arpl
cmpsb
push
add
xchg
decl
shlb
mov
push
sub
frstor
stc
dec
loop
sub
xchg
js
idivl
out
inc
or
or
dec
dec
aam
addr16
into
or
or
rcl
inc
rorl
mov
or
push
push
add
les
pop
bound
jp
cld
or
mov
ss
sub
and
pop
mov
cmp
in
imul
or
outsl
adc
push
push
sub
in
jle
xor
jmp
ret
cmpsb
jge
or
jecxz
push
loop
push
mov
mov
sub
inc
jno
ret
js
scas
aas
lcall
ret
loop
add
test
dec
sbb
rol
mov
sahf
xchg
cmp
sbb
and
das
scas
or
mov
dec
popa
adcl
lret
inc
and
jp
xor
and
into
std
mov
test
cmp
cli
and
dec
scas
imul
xlat
out
sbb
fists
cmp
jne
jl
adc
push
jmp
iret
mov
fists
sbb
or
push
pop
sbb
mov
sub
jp
pop
lock
sarl
stos
leave
test
push
mov
add
xor
jno
sub
and
dec
mov
xor
cmpsb
aad
mov
sahf
push
lods
push
push
mov
insl
das
cltd
add
leave
sub
dec
push
test
sbb
lds
jle
test
lret
scas
aaa
inc
or
push
adc
out
push
sub
and
addr16
or
movsl
mov
mov
inc
lock
push
lret
or
aad
jae
adc
std
aad
movsb
out
pop
sub
movsb
sub
dec
loop
fnstenv
xor
sub
test
out
cmpl
jecxz
hlt
cmpsb
sub
cwtl
inc
inc
adc
mov
and
movsb
mov
pop
jmp
and
ret
xor
sahf
frstor
add
and
test
jns
sub
out
cmp
ds
bound
les
daa
fstl
jae
mov
fwait
psubw
push
arpl
imul
out
stc
dec
mov
cmpsb
test
adc
sbb
mov
fdivrp
jmp
roll
mull
xlat
sbb
or
push
cmpsb
xor
push
lret
jne
adc
loop
dec
test
mov
and
mov
xor
es
mov
push
dec
inc
cmp
aad
and
std
stos
jno
enter
adc
data16
cltd
orl
cmpsl
xchg
leave
rcr
aaa
cmpsb
in
or
outsb
xor
add
jle
cmc
dec
and
out
dec
fists
mov
pushf
dec
sub
aaa
mov
xor
jecxz
ja
pop
sti
insb
inc
into
stos
aad
aas
rol
out
xchg
out
pop
fs
sahf
push
movsb
enter
lds
fsubl
aas
call
or
jae
pop
enter
lds
or
lret
jo
jp
xor
xchg
adc
and
and
pop
xor
inc
test
inc
lret
jg
sti
cmpsl
jmp
jmp
or
add
mov
xchg
movsl
jmp
std
rcl
jge
cld
pop
xchg
fnstsw
shlb
cld
fsubs
pop
daa
mov
mov
xchg
mov
and
cmp
dec
sbb
cmpsb
xchg
push
or
sub
pop
push
or
in
xchg
push
ja
xor
xchg
xor
repnz
gs
xchg
cmp
jae
sub
xchg
push
push
inc
outsb
popf
arpl
add
adc
push
pop
aas
pushf
xor
movsb
sahf
cmp
movsb
add
adc
imul
xchg
sbb
mov
data16
lds
mov
js
int3
push
sahf
jg,pt
pop
rcrb
add
mov
das
sbb
inc
je
cmp
imul
mov
std
fnstcw
and
js
jge
pop
pop
jp
icebp
dec
in
cmc
pop
sub
push
mov
add
sbb
jmp
fsubrl
aaa
and
jne
jle
push
jnp
decb
mov
jne
push
lods
and
aad
mov
jno
rcrl
add
push
test
daa
push
and
mov
push
shl
nop
sbb
cld
pop
mov
mov
jge
xchg
sub
arpl
movsl
shlb
jmp
sbb
pushf
sbb
leave
dec
inc
xor
cmp
addr16
sbb
push
push
mov
ret
lods
pop
dec
stos
addr16
test
cltd
mov
sub
xchg
sub
shll
aad
repnz
shrl
add
imul
xchg
lods
outsl
test
fsubs
dec
out
or
outsl
jg
iret
pop
add
in
fcmovb
xor
pop
jns
pop
lods
outsb
xchg
aaa
out
imul
movsb
and
iret
sahf
xor
ficomps
mov
jb
fisttpll
pop
xor
ret
shrl
and
in
cmpsb
shl
jle
pushf
iret
inc
mov
enter
sbb
inc
mov
lds
fsubrp
fs
add
movsb
inc
or
loop
adcl
mov
jl
mov
int
rcrb
out
shrl
fadds
jecxz
mov
or
mov
xor
dec
xchg
xor
jno
ja
jmp
mov
cmp
icebp
notl
mov
test
sub
xor
xchg
ljmp
outsl
sbb
pop
pop
shrb
stc
mov
daa
enter
xchg
adc
add
mov
test
and
inc
add
jnp
xchg
and
rdmsr
out
cld
jae
das
lods
jecxz
mov
sar
xchg
mov
adc
rcrl
hlt
popf
je
add
pop
mov
popa
fmul
fstpl
pop
andl
data16
popf
lea
jbe
pop
mov
cmp
loopne
xchg
adc
sbb
mov
aam
mov
repnz
or
fimull
test
cmp
sbb
lret
lret
cmp
das
lds
sub
add
dec
lcall
or
hlt
mov
lcall
lahf
or
xchg
inc
lahf
lret
mov
scas
negl
les
ret
stos
lcall
in
sahf
inc
mov
sub
repnz
sbb
rcrb
mov
stos
xor
icebp
std
and
cmp
aaa
push
jnp
enter
aam
sbb
andps
fldt
or
add
jecxz
es
add
mov
push
push
xchg
lea
mov
bndldx
hlt
pop
sbb
or
popa
sub
xchg
mov
mov
pusha
cmp
xor
cmp
inc
push
stos
call
jne
adc
fwait
out
popa
adc
adc
fisubrs
push
call
cmp
jle
mov
xchg
pop
mov
minsd
push
test
cmc
pushf
add
jge
sbb
fldt
scas
push
repnz
icebp
mov
repnz
into
iret
divb
push
or
jo
popa
xchg
sub
hlt
or
ret
loopne
outsb
mov
dec
and
inc
mov
imul
dec
insb
pop
dec
push
push
ja
fsubrl
sbbb
jb
leave
mov
lods
xor
pop
cmp
xchg
add
push
pop
das
add
jg
rol
cmpsl
shlb
scas
clc
gs
push
sbb
std
pushf
add
jae
sub
or
ja
dec
or
pop
or
sub
mov
arpl
add
outsl
and
ja
loopne
xor
test
mov
fiadds
cmp
je
push
clc
in
inc
push
and
xadd
inc
outsl
adc
stos
and
ret
nop
or
or
mov
ror
cmp
or
add
mov
push
lock
sub
add
and
lods
out
pop
ret
outsb
loopne
pop
loope
out
loop
jbe
push
add
test
das
andl
or
or
cmc
shlb
lock
pop
int
inc
js
push
mov
not
repz
loopne
stc
out
dec
xor
into
dec
adc
ss
jb
and
lcall
pop
call
test
jb
add
xor
mov
xor
and
xchg
mov
jg
add
sbb
insb
data16
mov
cmp
inc
sbb
dec
into
js
lock
sbb
adc
lock
mov
loopne
negb
std
mov
cltd
pop
in
jp
ficomps
xchg
lds
sub
jae
pop
push
add
test
add
shl
sbb
xor
xchg
mov
lock
es
lahf
insl
fcmovbe
cmc
mov
lret
lock
pop
jp
outsb
rolb
scas
call
addr16
out
xchg
pop
popa
out
incb
lcall
aas
outsl
or
add
cmp
adc
jle
or
inc
and
loopne
mov
sub
jno
fidivs
mov
mov
pop
jns
iret
cmpb
shll
stc
pop
lcall
pop
shll
lahf
lcall
cmp
mov
outsb
and
sbb
adc
movsb
cmp
inc
out
aaa
out
mov
pop
add
jns
push
ret
xor
push
sbb
or
and
fmull
jnp
nop
aas
rcr
outsb
push
add
mov
mov
or
enter
push
dec
pusha
jp
inc
cmp
jnp
ljmp
popf
stc
notl
pushf
mov
enter
je
lds
xchg
cmp
jg
int3
inc
outsl
mov
stos
rorb
mov
imul
clc
mov
ret
loope
sub
add
xchg
int3
mov
cmpl
repz
jmp
mov
clc
jle
ret
fcoml
mov
int3
inc
cwtl
mov
idivb
cmp
or
dec
add
movsl
js
test
cltd
cwtl
push
sub
ja
inc
sub
sahf
inc
mov
cmp
es
xchg
jne
dec
aaa
fbstp
sbb
jb
testb
ljmp
dec
int3
cs
bound
insl
fcoms
std
cmp
jne
pop
je
push
scas
cld
movsb
fimuls
lds
sbb
cwtl
sbb
sbb
in
xor
sbb
es
je
sub
fwait
leave
inc
jne
insl
lahf
mov
adc
sahf
mov
cli
mov
pop
mov
rcrb
in
popa
jmp
out
mov
lods
daa
xchg
fisubrs
lds
jecxz
lret
inc
pop
adc
les
ds
mov
in
mov
push
push
ret
sub
adc
fnsave
cmp
addr16
leave
push
and
add
imul
push
mov
xchg
pop
jb
imul
mov
sub
call
or
pop
add
enter
add
mov
mov
pusha
xor
mov
loope
addr16
out
ret
mov
test
call
lcall
sbbl
movsb
jb
lret
insb
add
leave
insb
or
pop
sahf
imul
pop
ret
jnp
inc
or
das
xchg
mov
adcb
clc
std
es
scas
in
xchg
cmp
push
cmp
aam
push
pusha
sti
jp
das
mov
std
les
pop
dec
test
pusha
ffreep
inc
sahf
jb
push
shll
lahf
inc
cmpsb
adc
movsb
cltd
roll
repnz
ds
shrl
push
cmpsl
roll
das
test
testl
jae
icebp
bound
sbb
rcrl
sete
out
lods
loopne
jl
in
arpl
cmp
mov
xchg
push
je
cmp
js
cld
mov
inc
pop
lret
xchg
aaa
push
cltd
push
jp
jb
add
insl
pop
out
add
fs
daa
pop
sub
pop
stos
sbb
add
mov
aas
mov
ret
into
cmp
shrb
sbb
loope
repz
cwtl
adc
push
and
shrl
leave
add
sbb
pop
in
inc
lcall
das
jp
xor
mov
inc
shrb
inc
movsl
imul
mov
mov
out
jge
scas
mov
mov
ss
jo
repz
lds
add
xlat
in
jle
jns
mov
mov
pop
mov
aaa
jp
inc
xchg
test
jl
xor
push
xor
jl
fnsave
and
hlt
lcall
push
xchg
sub
bound
gs
xchg
mov
inc
pusha
dec
xchg
jo
adc
filds
cwtl
sub
mov
mov
test
in
push
lods
sarb
mov
sub
sbb
adc
mov
mov
data16
sbb
cltd
xchg
adc
xor
inc
push
icebp
leave
xorb
arpl
in
pop
jecxz
loopne
mov
or
pusha
pop
nop
lret
xlat
pop
sarl
mov
mov
push
out
inc
jmp
jne
clc
sub
ljmp
data16
in
adc
inc
cmc
lds
adc
flds
in
xchg
aam
dec
add
out
bound
popl
scas
or
outsb
mov
arpl
push
sub
mov
inc
lcall
loop
or
lock
std
jecxz
sbb
call
fimuls
sbb
xor
lahf
mov
cmpsl
cmp
dec
ret
mov
or
incb
fwait
xor
addb
dec
and
mov
cmp
and
shl
pop
sbb
inc
shl
mov
mov
add
push
push
mov
xchg
mov
sbb
mov
scas
jae
dec
cmp
lock
cltd
inc
popf
mov
mov
je
pop
push
xchg
outsl
loop
push
mov
xor
fisttpl
pop
sbb
ret
pop
test
cli
sub
out
sbb
das
dec
movsb
fprem
cld
or
cld
cmpsl
xor
dec
jl
push
mov
add
push
jmp
rcll
mov
xor
inc
pop
lock
or
rep
sbb
cli
jae
jb
bound
jge
cmp
inc
jmp
nop
lea
pusha
test
cmc
xchg
xor
dec
movsl
mov
pop
jmp
std
or
xchg
gs
jmp
sbb
cli
outsl
inc
fidivrs
lds
mov
outsl
adc
mov
inc
pushf
imul
jae
dec
fbstp
mov
loopne
fwait
aad
lcall
add
insb
ret
jmp
imul
jge
mov
add
push
jnp
push
or
test
jp
sub
and
push
or
pusha
testl
cmpsb
lcall
ja
test
pushf
push
jle
andl
pop
add
cmp
enter
enter
fbstp
cmpsl
jne
xchg
xorb
fs
push
jne
loop,pn
addr16
or
fnstsw
cmp
xchg
test
pusha
sub
dec
dec
lods
xchg
xchg
jb
or
inc
out
movsb
addb
xchg
mov
or
lods
in
add
mov
pop
hlt
das
push
inc
stc
lods
sti
mov
add
fmuls
lock
jns
and
lods
cmp
push
int3
mov
sub
jl
add
push
divl
xchg
and
inc
jle
jo
insl
clc
mov
mov
mov
mov
imul
out
sbb
push
int
andl
sbb
aaa
jle
sbb
out
xchg
sti
sti
lcall
imul
and
ret
mov
dec
mov
or
add
mov
out
jmp
mov
in
pop
and
int3
mov
rclb
xor
jle
out
fsubs
xchg
lds
scas
in
idiv
pop
je
rorb
pop
push
dec
pop
mov
cmp
or
cmp
lahf
push
dec
iret
lea
inc
jmp
stos
cmpb
hlt
aas
sahf
int
rcrb
movsb
push
jnp
cmc
arpl
dec
stc
lret
pop
xchg
mov
fsubrs
into
test
mov
xchg
repnz
testb
nop
xchg
dec
popf
mov
add
cltd
push
mov
aam
rorb
setne
cmp
sub
push
in
mov
jge
iret
aas
fdivs
xchg
dec
inc
and
jecxz
pop
push
addl
mov
test
inc
popa
insl
mov
cmp
xor
xor
jecxz
pop
dec
dec
xor
idiv
mov
adcl
cmpsl
mov
add
dec
xor
xor
jno
adc
std
repz
or
cld
mov
call
sahf
out
xor
add
fmul
out
xchg
dec
add
outsl
fbstp
cltd
popf
gs
and
rcr
and
or
mov
pop
add
pop
aad
inc
ficomps
cld
sub
insl
cmpb
jb
out
aad
pusha
or
sarl
add
pop
pushf
mov
cmpsb
cvtps2pi
add
scas
cmpsl
dec
push
or
xchg
leave
sub
xor
adc
sahf
js
clc
cltd
dec
inc
and
loopne
mov
rolb
leave
dec
cmpl
mov
insb
jle
jnp
loopne
sub
daa
jmp
aaa
pop
mov
lcall
mov
jecxz
out
sub
xchg
subb
mov
jne
bound
xor
outsl
push
cmp
pop
and
xchg
mov
push
xorb
outsb
sti
push
pop
xchg
ljmp
push
sub
ret
rcll
xor
pop
push
daa
test
ffreep
pop
inc
sub
loopne
in
gs
push
mov
stc
dec
or
xor
inc
xor
aaa
cmp
lea
push
sbb
cwtl
pop
les
loope
add
mov
pop
hlt
test
add
in
int3
push
xchg
lahf
aas
mov
inc
stos
push
mov
mov
mov
sub
clc
jae
adc
dec
mov
mov
mov
push
add
lret
leave
subb
fnsave
and
cmp
mov
scas
cmpsb
dec
daa
jae
sub
mov
xchg
jl
adc
jne
adc
push
add
mov
call
insl
jg
xor
mov
jmp
cmp
test
sbb
push
pop
addb
shll
lods
leave
xchg
iret
imul
xchg
test
inc
pop
sti
jecxz
and
push
test
jb
fwait
inc
stos
xchg
stos
scas
pop
and
adc
xor
mov
scas
cld
or
xchg
fadds
std
movsl
add
shlb
aam
mov
xorl
xor
mov
sub
negb
mov
repz
adc
inc
shl
pushf
xchg
repz
popf
xor
sbb
popa
jp
cmp
add
pop
or
and
add
pop
clc
pushf
xchg
cmp
push
stos
js
lock
cltd
jns
andb
ret
jl
jl
jp
push
push
push
xchg
enter
xor
aam
sbb
arpl
sbb
xchg
xor
mov
lahf
mov
add
add
das
rcrl
or
add
les
cmp
xor
xchg
icebp
mov
sub
cld
loop
inc
xchg
ds
dec
dec
lret
or
push
into
stc
add
clc
imul
cmp
inc
cs
push
adc
aaa
pop
nop
adc
or
push
in
mov
fwait
inc
pop
das
in
test
mov
movsb
loop
xchg
mov
int3
pushf
add
xchg
mov
pushf
add
cmp
xor
add
sbb
arpl
psubsw
jmp
or
rolb
xorb
out
gs
lock
adc
in
shrb
xchg
jns
or
adc
fsubs
push
pop
jp
cmp
daa
pop
not
mov
movsl
and
adc
mov
stc
ret
je
cmp
xorl
or
cwtl
les
stos
mov
cmp
or
add
sahf
dec
fucomi
push
imul
pop
jmp
or
test
shll
cmp
pop
and
sbbb
xor
fcomp
addr16
inc
inc
cltd
add
adc
test
inc
je
mov
mov
pop
out
mov
mov
cwtl
mov
cmp
bound
sbb
adc
xchg
insl
push
outsb
test
fstps
inc
jno
movsb
jbe
or
ljmp
in
and
jle
pop
cmp
or
push
in
sbb
negl
xlat
in
in
jne
shrb
out
je
dec
repnz
add
dec
mov
xchg
pusha
lds
int
orl
subl
lahf
cs
arpl
push
mov
loope
xor
loope
fucom
xlat
movsl
and
push
push
push
or
cmpsb
xchg
xchg
jmp
loop
idiv
aam
out
nop
outsl
scas
clc
pop
jnp
cmpsb
or
mov
mov
pop
cli
loop
jns
lods
dec
cwtl
inc
cmp
or
sbb
dec
shll
xchg
push
ja
sub
mov
fs
jle
daa
push
sbb
or
adc
push
fldenv
pop
jo
mov
mov
mov
cmp
clc
int
jnp
or
mov
lcall
and
bound
clc
leave
int
jle
cmp
insb
jp
ljmp
ja
cmp
mov
pop
lds
xchg
scas
jge
rcl
fstl
mov
sub
pushf
pop
fcoml
push
shl
dec
fldenv
je
push
push
xchg
lods
sub
xlat
aaa
adc
and
mov
das
xchg
rolb
mov
dec
push
and
rclb
nop
aad
pop
test
xchg
dec
lock
dec
sbb
xchg
imul
movsl
sub
pop
cmp
lds
or
sbb
mov
jg
mov
je
mov
stos
fmuls
mov
mov
xchg
jecxz
sar
push
jmp
loop
test
add
popf
mov
lahf
cmp
hlt
decb
sahf
lret
xor
inc
xlat
cs
mov
int3
fadds
lea
jnp
jl
pop
out
lock
sbb
jecxz
shl
jb
xor
cmp
sbb
pop
cmpb
jecxz
popf
pop
and
nop
out
das
lods
imul
bound
add
cli
or
test
pop
filds
pushl
in
repnz
scas
filds
mov
mov
jmp
into
rorb
fisttps
cmovl
in
and
mov
xor
pop
subb
push
outsl
cmpl
jno
add
add
imul
mov
sti
lock
or
mov
ja
sti
add
sbb
mov
pop
jo
mov
xchg
std
cli
lahf
inc
inc
cwtl
add
out
bound
idivl
mov
and
call
lret
sub
cs
push
jg
test
or
adc
push
push
sbb
pop
jns
inc
jp
stos
mov
mov
out
sbb
mov
cmpsl
or
add
ret
sbb
cld
movsb
punpckhwd
data16
cltd
push
xorb
xchg
jmp
ficoms
mov
clc
mov
rclb
call
rcl
std
cmpsb
inc
jmp
sub
mov
mov
xchg
xchg
incl
inc
testl
sbb
test
pop
xor
push
cmp
sub
mov
sti
gs
mov
lds
into
cmp
mov
or
mov
mov
or
and
hlt
outsb
xchg
int3
jns
push
jp
test
test
pop
mov
push
pop
ljmp
xor
out
shlb
sbb
pop
fwait
pop
insb
inc
insb
sbb
mov
cmp
fdivp
lock
aas
push
aam
lahf
adc
je
icebp
jns
pushf
adc
cmp
push
mov
add
stos
cmp
fs
mov
movsb
rcll
movsl
cmpsb
movsl
ljmp
pushf
sub
cli
testl
mov
cmp
mov
jg
cmp
push
in
in
cmpb
insl
rol
fdivrp
push
shlb
jg
stos
cli
pop
adc
lock
sbb
push
js
mov
xor
lods
adc
xchg
outsb
fildl
push
fcomp
inc
or
cmp
ja
out
mov
cmpsl
jg
pop
pop
fildl
ds
inc
cmp
clc
sahf
call
repz
push
inc
ss
mov
push
cmp
xor
cmp
cmp
sbb
cmp
out
nop
mov
mov
mov
cs
inc
add
add
xchg
jbe
push
mov
test
xchg
movsb
adc
lds
jb
rorb
je
and
push
jbe
bound
sti
adc
lock
and
je
popa
shrb
lods
push
mov
push
pushl
jmp
add
aas
jle
mov
clc
cmp
jb
mov
pop
mov
xor
mov
pusha
arpl
in
jo
incl
jmp
negl
mov
push
xchg
bound
rcrb
jae
aas
ss
mov
test
or
or
dec
lahf
inc
scas
mov
xchg
jb
xchg
cmpsb
shrb
out
test
cmpsl
or
mov
dec
and
pop
cmp
lods
pop
aas
mov
add
cmpsl
jnp
sbb
sub
rcrl
fnsave
inc
lds
sbb
repnz
arpl
loopne
mov
mov
stos
aaa
pop
fidivrs
les
pop
jle
scas
mov
fistl
into
sub
dec
mov
push
jno
std
push
mov
xor
jg
or
ror
push
push
loop
inc
add
in
xor
cltd
rorb
ljmp
in
and
add
shlb
int
jne
inc
or
fs
addr16
cmp
mov
imul
pop
xlat
xchg
and
push
sarl
aam
mov
sbb
jo
add
xchg
imul
jmp
sbb
xchg
enter
shlb
lret
les
ljmp
in
pop
std
xchg
mov
lds
and
test
cmpsb
push
bound
jecxz
cmp
fmuls
mov
push
sti
pop
jl
les
add
dec
out
add
and
fmull
xor
cli
push
sub
bound
js
sub
fdivs
inc
jne
das
jb
xlat
xorb
jmp
and
leave
add
int3
sub
jae
cmp
jo
xchg
jne
mov
ss
fbld
leave
out
push
fs
lock
movsl
adc
add
je
sti
loope
add
sub
stos
rolb
jmp
xor
xor
cld
inc
imul
cmp
jmp
je
test
jl
gs
add
cmp
inc
cmc
jge
inc
orb
jno
jnp
frstor
stos
pop
mov
xor
sbbl
repnz
test
fsubrs
xchg
cs
loope
outsl
inc
repnz
mov
inc
aaa
sbb
adc
and
xor
or
sahf
dec
xor
xorb
sub
or
inc
idivl
push
or
xor
mov
pop
fisttpl
xorl
sub
jns
adc
xchg
mulb
adc
int3
inc
xchg
out
das
xorb
inc
shll
push
leave
push
add
push
mulb
mov
jnp
ret
out
test
mov
jp
push
pop
inc
mov
or
pushl
cmc
jb
sahf
ljmp
cld
add
mov
lds
dec
sub
int3
push
pop
jne
jle
jg
cmp
insb
sub
mov
test
imul
or
pusha
dec
test
fwait
mov
cmp
inc
mov
jmp
enter
add
jle
int
jno
xchg
pop
ds
neg
arpl
mov
addr16
test
mov
sub
mov
add
cltd
ds
orl
sbb
mov
sub
jp
sbb
popf
cmp
adc
sub
jle
xchg
adc
sub
mov
pop
jecxz
xor
xchg
sub
into
jbe
inc
mov
cmpsl
test
add
test
shll
loopne
cli
jp
push
jno
xchg
int3
inc
sub
push
fwait
sbb
scas
leave
jmp
pop
jb
xchg
jno,pt
adcl
lahf
mov
pop
fsubl
nop
jne
dec
imul
in
leave
adc
cmpsb
push
orb
cmp
aas
out
je
mov
or
xchg
jo
cmp
call
iret
sub
inc
fistps
addr16
lea
pop
insb
dec
pop
adc
push
inc
jb
fsts
cmp
shll
mov
adc
mov
sub
out
jecxz
addr16
jge
sti
push
sbb
sub
dec
inc
frstor
push
bound
fisttpll
sub
cmp
rolb
mov
dec
test
aam
sbbl
dec
out
xchg
mov
loop
je
popf
ljmp
adc
aam
cmc
sub
fistps
pop
mov
stc
ret
or
xchg
sub
cwtl
push
repnz
cmc
dec
addb
dec
aaa
lret
inc
loop
push
push
nop
push
cmp
xor
aam
sbb
xchg
pop
sub
push
or
pusha
mov
mov
out
pop
mov
mov
mov
pop
inc
jecxz
and
fnstenv
ret
fdivl
mov
pop
sahf
add
or
jge
sahf
stos
push
xchg
jno
sbb
shll
std
dec
in
in
test
test
test
stos
mov
cmpsb
ffreep
add
mov
mov
js
fldenv
inc
enter
push
hlt
or
lret
cmp
cs
gs
jns
push
jp
xor
imul
in
push
test
cmp
mov
mov
pop
int3
xor
push
cmpsl
and
sub
jge
scas
movsl
leave
int
dec
arpl
jge
mov
mov
xchg
or
stc
scas
sub
push
inc
jmp
addr16
and
pop
adc
aas
ret
cmp
add
mov
pop
das
xchg
test
dec
inc
fsub
rcrb
or
cs
xchg
dec
out
mov
cs
loopne
mov
push
adc
aas
lret
mov
sbb
sub
aad
push
cmpsl
push
mov
or
loopne
jb
sub
dec
adc
lea
into
ljmp
out
popf
inc
out
test
push
xor
pop
jno
aam
adc
mov
out
pop
jge
leave
inc
pop
cld
frstor
in
rcrl
pop
sub
xchg
in
sti
add
loope
mov
icebp
enter
adc
inc
inc
shll
mov
shlb
pop
fisubrl
pop
mov
loopne
rorl
ds
rclb
cmpsl
xchg
mov
scas
stos
fst
dec
sbb
mov
jmp
rolb
stos
je
dec
inc
js
stc
or
stc
mov
mov
fwait
cmpsl
xor
jp
dec
dec
xchg
lcall
or
sti
jno
push
in
dec
jmp
jnp
test
imul
lret
cld
add
fsubs
add
and
jmp
cs
popf
jg
scas
lea
popf
mov
inc
enter
andl
dec
lret
mull
je
jmp
sarl
or
push
gs
shlb
and
lds
ret
push
in
xchg
and
lcall
mov
cs
dec
lods
insw
imul
fs
push
daa
push
mov
add
and
xchg
popf
sbbb
daa
mov
test
cmp
mov
jae
push
jmp
xchg
adc
mov
stos
cmp
negb
xchg
pop
int
lock
imul
aam
pop
ret
mov
sbb
mov
fs
mov
loope
xchg
out
popa
adc
movsb
push
mov
addr16
mov
push
lock
cmc
stos
mov
xchg
shlb
cmpsl
jp
in
int3
cmc
test
mov
frstor
pop
dec
dec
sub
xlat
dec
mov
fadd
out
and
mov
stos
and
hlt
icebp
addr16
js
xchg
xor
sarb
add
mov
push
imul
test
daa
repz
pop
push
mov
mov
cli
xor
cld
inc
adc
bound
inc
inc
dec
out
mov
movsb
lods
test
adc
mov
mov
aam
push
xor
adc
sub
addr16
out
add
ret
add
sar
sbb
ret
xlat
or
in
or
pop
adc
shrb
loope
mov
push
hlt
rclb
test
ret
imul
xchg
and
call
imul
popa
add
inc
jo
pop
fsubl
push
xor
sbb
cmpsl
out
push
ss
jecxz
add
outsl
add
dec
js
lods
divb
nop
cmpsl
out
push
or
fidivs
jmp
xor
loop
sub
orl
mov
hlt
std
imul
sbb
or
add
add
xchg
push
imul
cmpsl
int
sarl
dec
dec
fs
fsub
stc
push
or
cmove
fistpll
call
mov
dec
sbbl
popf
add
mov
xor
int
je
and
jl
mov
lods
cmc
dec
cmp
fwait
pushf
push
xchg
dec
das
jno
addb
shlb
and
jmp
fwait
out
adc
mov
pushf
aaa
jns
aas
xor
mov
ja
mov
adc
xchg
movsb
ja
mov
hlt
cmp
daa
loope
sti
sbb
into
mov
stc
popa
clc
loope
cmpsb
dec
movswl
enter
subl
stos
incb
repnz
cwtl
xor
fiadds
imulb
lcall
nop
outsb
mov
into
orb
jl
adc
std
cmp
sbbl
jp
inc
cmp
daa
rcrl
rcl
ret
mov
and
and
xor
stos
mov
ds
add
inc
and
ret
cmp
test
test
xchg
mov
roll
out
bndstx
xchg
xlat
adc
lods
subb
mov
push
dec
jle
xor
ficoms
sbb
xor
and
inc
sbb
shll
pop
jmp
cmc
ja
pop
pop
add
popw
rcrb
dec
pop
xor
xor
or
stc
loope
outsb
push
fnstcw
sbb
inc
mov
lock
mov
stos
popf
addb
aad
testb
out
sbb
adc
push
mov
out
adc
mov
or
cmp
ja
shll
cmp
loop
add
adc
insl
mov
shrb
pop
mov
out
jl
ret
xchg
xchg
clc
hlt
push
mov
fistps
stos
adc
lock
sbb
jns
aad
movsl
add
call
add
fldl
hlt
inc
xor
cli
inc
in
adc
jbe
cmc
dec
scas
mov
into
bound
bound
mov
and
outsb
popa
int3
jbe
jb
imul
lahf
mov
scas
sub
cmp
arpl
movsb
hlt
fcmovu
iret
ret
sub
push
pushf
aas
fsubr
jo
jl
push
pop
bound
mov
and
or
jb
pop
scas
inc
adc
cwtl
setle
mov
daa
jmp
popa
mov
in
pop
xchg
mov
popf
add
fmull
insb
fs
xor
jae
loope
addr16
pop
inc
inc
jae
xchg
mov
shlb
pop
xchg
mov
mov
fsubrp
adc
in
mov
cmc
inc
xchg
nop
fcomp
rcll
aam
and
xor
pop
jne
cmpsb
jne
add
lret
and
rorl
lahf
and
mov
or
in
repnz
outsl
pop
add
jnp
sbb
pop
adc
lcall
and
mov
flds
jo
dec
add
cwtl
out
xchg
outsb
shrl
sti
jmp
xchg
add
push
nop
adc
or
xchg
mov
push
lock
cmp
jl
inc
rcrl
mov
dec
es
sub
push
dec
add
jb
fisubrs
jne
or
rorb
lods
mov
cmpsl
xchg
push
frstor
adcb
and
jge
fwait
dec
pop
dec
pop
imul
das
sbb
sub
inc
loopne
xor
lahf
lret
cmp
adc
jg
mov
adc
dec
popl
sub
dec
jb
dec
pop
inc
dec
ljmp
leave
or
mov
or
or
rcrb
xor
mov
clc
cmp
lret
jne
das
into
popf
mov
mov
push
push
xor
lods
dec
imul
mov
mov
mov
dec
pop
or
repnz
mov
pop
xchg
pop
or
popf
xchg
and
cmp
xor
jge
pop
push
sbb
mov
test
test
dec
and
icebp
bound
jo
aas
outsl
in
dec
sbb
mov
das
icebp
pop
cmp
push
jnp
arpl
out
repnz
scas
or
jo
js
enter
sub
xlat
in
add
add
rclb
loop
pushf
and
cmpsl
sub
outsb
or
and
xlat
xchg
std
pusha
pop
ret
ljmp
jecxz
test
lahf
jnp
cmpsl
jmp
and
scas
daa
das
jmp
and
jl
popf
inc
jecxz
repz
shlb
xchg
push
in
pusha
icebp
stos
in
ja
adc
push
pop
fsts
cmp
mov
fildll
add
adc
scas
insb
ds
dec
inc
dec
fisubrs
mov
clc
sub
inc
mov
or
xor
test
nopl
jbe
test
xchg
mov
and
jo
mulb
push
cmp
push
jmp
mov
cmpsl
shll
jecxz
in
pop
out
idivb
push
test
orb
ss
out
inc
and
or
rcl
sbb
dec
jb
inc
pop
mov
in
dec
mov
bound
mov
xor
std
stos
jo
test
enter
mov
adc
xor
cmp
mov
aam
pop
loopne
adc
push
popf
repz
hlt
mov
sahf
or
in
cmp
enter
sub
xchg
mov
sub
ds
jns
lahf
clc
cmp
or
sbb
fdivrs
out
xor
popa
pop
pop
add
cmpsb
pop
in
and
ljmp
aas
or
jbe
jne
xor
push
cmp
inc
jae
xor
cmp
mov
xchg
push
lds
cmpsl
clc
dec
vshufps
in
je
je
fstpl
aaa
stos
test
pusha
rep
in
addr16
mov
movq
adc
pop
in
popf
push
outsb
movsl
fnstsw
inc
stos
leave
cmp
enter
outsl
xor
dec
cmp
dec
into
pop
fbstp
rcrl
pop
popf
and
cmpsl
les
arpl
cltd
cmpsb
imul
popa
ljmp
stos
ret
xchg
fidivs
or
test
popf
jb
or
xlat
int
sub
pop
cmp
les
mov
scas
sbb
scas
cmpsl
xor
outsb
test
inc
lret
sti
push
xchg
jno
jnp
arpl
or
outsl
stc
push
pushf
bound
popf
fnsave
sbb
cmpsb
xchg
insb
test
push
mov
push
add
pop
js
jmp
mov
stos
cmp
out
das
push
addr16
push
push
psubw
mov
lahf
xchg
mov
xchg
cmc
dec
xchg
cmp
xlat
out
add
sbb
pop
sahf
mov
mov
jecxz
call
test
cmpsb
sbb
leave
add
test
jne
pop
mov
loopne
push
push
fdivl
xchg
enter
or
dec
sbb
es
ret
mov
rorb
pop
loopne
pop
fistps
adc
fistps
pop
movsb
mov
fidivl
xchg
jnp
mov
lret
sahf
into
stos
push
addl
insb
out
popf
les
add
push
fbld
fists
addr16
sub
fidivl
pushf
rolb
push
or
rcrl
out
in
int3
push
call
cs
scas
jno
mov
push
sub
lret
dec
cmc
daa
jp
mov
out
shll
leave
out
test
add
lret
int3
jge
mov
sbb
sub
mov
xor
arpl
test
fdivs
imul
jle
mov
test
jle
scas
push
loopne
adc
fs
mov
push
icebp
push
jns
outsb
add
mov
sub
jmp
sub
jl
stos
ret
sub
mov
lahf
mov
cld
mov
add
mov
je
dec
sbb
sub
daa
popf
inc
adc
mov
shll
rorb
loopne
loope
and
pop
xchg
mov
and
or
outsl
cwtl
loopne
aaa
outsl
loope
std
cwtl
or
or
loop
mov
out
cmpsb
lcall
popa
cmc
mov
les
subl
sbb
in
adc
sti
fnstsw
dec
push
pop
out
movsl
leave
and
inc
cmpsl
inc
push
mov
cltd
lds
sbb
iret
cmp
stos
push
cld
out
lea
enter
aas
mov
inc
cli
imul
out
sub
cmp
inc
or
xchg
cmpsl
in
xchg
push
popf
shll
mov
lcall
jg
push
ficoms
roll
mov
sub
aam
mov
in
mov
jno
cltd
dec
les
inc
jp
loope
jle
xlat
sub
cmp
mov
push
jb
rcll
or
add
daa
call
mov
mov
test
xor
es
or
stos
adc
in
push
mov
jne
pop
xorl
test
dec
outsl
pop
push
lcall
icebp
mov
mov
jnp
sub
add
cld
inc
cli
cmpsl
ljmp
mov
cmp
xchg
lret
mov
insb
cwtl
xchg
and
xchg
and
icebp
bound
repz
xchg
popa
or
mov
dec
nop
cltd
cmp
outsb
pop
push
rcll
data16
mov
out
addl
push
jmp
scas
mov
neg
push
and
les
lds
pop
mov
add
lahf
mov
and
mov
inc
les
and
cld
push
add
mov
das
and
sbb
pop
cs
into
cmpsb
inc
xchg
lcall
inc
mov
rclb
mov
or
ror
cmp
repz
rcll
mov
shl
nop
sbb
out
mov
lods
sub
call
mov
dec
ror
and
out
dec
push
lods
enter
inc
jae
jae
mov
nop
cwtl
inc
cmp
fs
sbb
add
or
sbb
addr16
rclb
inc
mov
jno
mov
adc
in
dec
in
lock
in
or
sub
cltd
movsl
loop
fwait
or
daa
push
arpl
mov
outsb
stos
jo
test
fdivrl
insb
clc
fdivr
xchg
outsl
std
xor
out
and
repz
xor
mov
insb
cmp
shl
xor
sbb
push
ret
add
adc
int
es
scas
and
add
fistpll
cld
inc
pop
push
aad
iret
ljmp
es
test
inc
mov
sub
mov
imul
sub
fwait
scas
insl
push
dec
and
cmp
pop
sub
adc
mov
jns
test
cmp
fwait
mov
xchg
adc
lret
mov
sub
dec
mov
inc
out
in
xchg
xchg
lret
stc
std
leave
aaa
mov
add
adc
dec
jmp
jne
mov
mov
jp
popf
inc
ss
mov
pmuludq
insb
js
xlat
pop
or
aad
clc
in
movsb
sub
add
insl
adc
je
sbb
cmp
push
xor
jmp
arpl
push
and
cmp
push
dec
jae
incb
add
fstpl
cmpsb
sbb
gs
mov
cs
test
es
subb
pop
mov
bound
sub
movsb
mov
adcl
xor
cmpl
out
iret
jbe
ja
mov
out
into
testb
std
xchg
arpl
insl
lahf
mov
mov
decb
loopne
jae
xor
and
ss
cmc
xchg
out
inc
sub
movsl
and
xchg
dec
push
testl
insl
jno
out
add
in
sbb
jge
cmp
fwait
cld
fsubrp
push
or
out
shrl
mov
mov
jl
lret
cmp
add
xor
das
xor
xchg
or
inc
dec
out
jne
loopne
adc
sbb
pushf
and
pop
cltd
pop
arpl
mov
inc
mov
repnz
into
ja
sbb
int3
adc
jl
push
dec
in
jb
into
lret
push
cmp
xchg
adc
jmp
inc
out
add
mov
sbb
add
out
mov
fwait
sbb
mov
add
fcoml
xor
dec
clc
in
addr16
inc
lds
adc
out
pushf
cmp
imul
mov
sbb
xchg
shl
mov
orb
jns
jns
pop
sbbl
push
test
lock
mov
mov
cmp
sarl
add
inc
dec
adc
inc
fwait
push
inc
ds
mov
or
xchg
cmp
test
sbbl
sub
sub
shrl
pop
jp
jbe
cli
inc
xor
push
repnz
mov
mov
rclb
fwait
add
loop
popf
cli
inc
jbe
inc
sub
mov
jns
in
in
xor
lea
fwait
sahf
jne
call
inc
das
pushf
jo
pop
mov
incl
fimuls
jne
dec
pop
inc
loopne
xchg
out
cmc
pop
dec
testb
push
and
jns
cld
popa
sarl
xchg
inc
int3
popf
jp
add
or
push
push
ja
arpl
stos
pop
push
ja
jl
fcoml
jmp
mov
xchg
fnstsw
fimuls
nop
cld
xchg
cmp
mov
call
pop
inc
fwait
or
xchg
jmp
and
arpl
add
paddsb
adc
cld
popf
data16
mov
mov
cli
push
mov
xor
test
or
pop
hlt
lahf
adc
cs
fcom
hlt
pop
arpl
pop
test
fistpl
pop
cmpsb
and
data16
fstpt
fcmovnu
loop
ljmp
cmp
popf
cmp
and
cmp
jnp
cmpsb
test
inc
in
add
scas
cmp
data16
out
sub
mov
mov
push
add
ret
mov
ss
dec
loopne
mov
ja
clc
xor
xor
scas
sub
shll
xchg
xchg
dec
push
ljmp
mov
out
ds
add
movaps
xchg
jno
call
cmpb
mov
cmp
mov
pop
push
bound
out
imul
cmp
test
add
icebp
lret
xchg
xor
inc
jbe
xchg
popf
cmp
popa
adcb
sbb
xor
adc
aaa
int3
xchg
push
lcall
fiadds
pusha
clc
push
mov
adc
pop
loopne
and
stos
mov
xor
xchg
notb
ds
sbb
adc
cmpsl
idiv
or
xchg
xlat
add
filds
in
cmp
scas
lahf
insb
pop
or
loopne
aas
add
fisttps
or
aas
shlb
call
sub
pop
fwait
dec
xchg
or
mov
fisttpll
pop
pop
ljmp
es
lcall
inc
xchg
xchg
test
adc
in
mov
mov
mov
leave
enter
in
mov
hlt
wbinvd
inc
pop
ds
pop
rclb
pop
mov
lods
push
xchg
lea
mov
out
pop
int3
add
xchg
jl
pop
pop
popa
mov
dec
jnp,pt
mov
xorl
add
out
stos
aad
mov
cli
mov
in
insb
cltd
shrl
mov
sarb
fists
xchg
inc
mov
data16
popf
lds
cmp
jl
sbb
dec
inc
mov
xor
dec
lahf
push
jns
inc
dec
nop
jle
inc
sub
int
xchg
add
js
mov
xor
scas
ret
hlt
xor
sub
std
xchg
jl
movsl
jle
xchg
cmp
jno
mov
arpl
and
out
ds
pop
sbb
leave
dec
add
fstpl
movsl
push
sbb
lock
pop
jne
pop
mov
push
jge
xor
add
mov
xchg
cmp
push
mov
aaa
test
mov
loope
pop
das
mov
mov
scas
xchg
hlt
lock
pop
and
in
movsl
sbb
adc
stos
test
mov
fistpll
adc
dec
push
std
inc
inc
lahf
jb
rol
adc
lahf
jge
jb
loope
sbb
push
add
ret
sti
inc
sub
mov
icebp
mov
ja
push
mov
cwtl
enter
jp
frstor
or
mov
jnp
xchg
xor
lahf
cmp
jnp
fnsave
pop
push
imul
hlt
jmp
lcall
add
fisttpl
adc
pop
mov
pop
pop
mov
out
jp
outsl
repnz
sbb
rcrl
gs
fsubrs
dec
mov
jns
aaa
sbb
fisubl
and
ds
xor
sub
hlt
lahf
test
push
in
scas
arpl
add
insl
adc
decl
dec
xchg
push
pushf
sarb
aam
sbb
adc
popa
xchg
imul
pop
cmp
adc
imul
lahf
pusha
out
out
mov
nop
mov
rcrb
movsl
xor
mov
adc
aas
and
add
fwait
lods
fisubs
dec
jo
aaa
pop
mov
mov
inc
lahf
xchg
jge
dec
clc
and
call
scas
mov
xor
mov
mov
sbb
add
loop
lock
and
cmp
push
cmp
scas
mov
adc
dec
or
pusha
lods
jb
xchg
data16
jnp
stc
push
in
add
jbe
ds
addl
ds
push
lahf
mov
pop
stos
nop
sub
cmp
xorl
inc
push
stos
cpuid
daa
xor
dec
inc
xor
xchg
mov
xchg
popl
pop
dec
or
cs
into
scas
jge
mov
xlat
shrb
repz
sbb
cmp
push
jp
xchg
and
int3
stos
hlt
imull
jo
mov
add
aad
lock
mov
loop
push
fmulp
outsl
pop
addr16
cmp
test
jl
mov
into
pop
mov
xchg
je
lods
js
adc
daa
mov
fisttpll
add
adc
mov
push
xor
fistpll
dec
outsl
cmp
cld
add
lea
fcmovnb
dec
popw
movl
scas
cmp
loopne
daa
lcall
cld
nop
jl
sub
loopne
cmp
or
pop
xchg
fisubrs
sti
cmp
incl
push
out
or
ret
pop
fmulp
xchg
lret
ljmp
jp
jne
pop
out
dec
lods
dec
cltd
inc
sbb
xchg
jmp
sbb
cmpsb
adc
daa
push
xchg
adc
mov
xor
push
mov
add
mov
fwait
jl
add
pop
test
xchg
subl
int3
fwait
std
dec
pop
jg
repnz
fimuls
std
int
lds
mov
add
popa
pushf
xchg
mov
out
mov
aaa
xor
push
xor
sti
cmp
inc
mov
adc
inc
loopne
add
in
dec
or
nop
cltd
sub
push
call
in
push
pop
clc
sbb
pop
xor
adc
ds
ficoms
jp
mov
out
in
jno
mov
add
jge
sbb
lahf
or
iret
adc
dec
sahf
mov
xor
xchg
hlt
in
jo
xor
inc
es
rorb
int3
push
test
movsl
lock
inc
jge
stos
pop
rorl
in
sbb
adc
push
sub
push
scas
pop
push
aas
jge
xchg
inc
jecxz
fdivrl
pusha
and
punpcklbw
xor
idivl
dec
scas
mov
jbe
inc
hlt
stos
adc
imul
xlat
data16
js
lock
jae
mov
push
cld
leave
inc
xchg
push
ficoml
loop
or
lds
push
jns,pt
iret
fldl
mov
rcrb
mov
xchg
jle
cmpsl
sub
fptan
dec
out
int3
leave
pushl
daa
jmp
cmpsb
push
cmp
es
cwtl
add
cmp
mov
xchg
into
fwait
or
mov
rcr
popa
add
xchg
or
repz
je
std
dec
sub
mov
mov
mov
push
notb
pop
push
cmp
inc
sar
lret
lods
mov
pop
push
jnp
lret
aas
movl
jo
dec
cltd
dec
repz
adc
lods
sbb
push
adc
push
push
mov
mov
mov
in
ficoml
loop
icebp
aad
lret
adc
mov
int3
xchg
mov
pop
jb
les
cld
mov
test
in
pop
mov
add
addr16
iret
pop
inc
mov
sbb
mov
cmp
out
lahf
aam
mov
jg
adc
push
sub
inc
jo
repnz
scas
jle
mov
inc
pop
mov
in
fstl
mov
jle
jp
adc
adc
xchg
or
loope
int
cmovs
addr16
sub
outsl
mov
jl
mov
out
in
mov
push
int3
cli
pop
vpsignd
popa
test
jno
enter
push
cmpsl
jl
ret
mov
shrl
and
ss
hlt
loopne
mov
int
pushf
mov
fwait
cmp
enter
stos
push
and
inc
push
xchg
inc
subl
roll
add
mov
repnz
scas
insl
and
sbb
cwtl
xchg
and
mov
stos
mov
pop
fs
test
dec
and
daa
rep
push
lret
xor
rcl
xor
dec
pop
adcb
inc
aaa
mov
outsl
jae
cmp
in
adc
push
cmp
cmp
mov
adc
or
in
test
xor
es
and
lock
aad
sub
imul
shll
test
push
sbb
in
int
rcrl
adc
icebp
pop
stos
add
movsb
dec
xchg
imul
fstps
into
mov
fistpll
fsubrl
inc
loop
in
jmp
rcll
mov
bound
pop
in
or
jbe
clc
sbb
fnstenv
adc
js
lock
jo
and
xchg
shl
add
hlt
or
add
or
fstpl
stc
andb
fisttpl
jp
cltd
mov
push
aaa
outsl
out
add
inc
outsl
xchg
push
stc
imul
mov
or
lahf
cmp
ds
push
pop
inc
push
push
pop
cli
pushf
loope
outsl
pushf
and
lods
jle
mov
and
mov
xchg
push
sub
pop
mov
imul
sub
aas
and
cmp
adc
fstpt
xchg
cs
out
cmp
js
das
jns
xor
nop
jge
loope
pop
lea
lret
inc
xchg
or
push
mov
scas
loope
les
jl
mov
xor
add
mov
cli
mov
adcl
adc
int
dec
lods
add
dec
loope
aas
cmp
xchg
or
stc
je
cmp
loop
cmp
addr16
les
mov
push
xchg
aam
xorl
insb
cmp
daa
insb
clc
out
lods
sbb
dec
add
xchg
inc
decl
adc
popl
fnsave
cmp
gs
divl
bound
test
aad
push
and
add
lock
or
xor
mov
xchg
adc
sbb
xchg
call
fidivrl
mov
add
repnz
ret
jbe
jge
mov
push
xlat
xchg
inc
mov
pop
lret
xor
push
ds
pusha
sbb
inc
je
cmp
mov
cmp
mov
gs
loopne
xlat
dec
out
xor
xchg
jle
pop
inc
insb
sub
mov
or
loop
outsb
and
add
adcb
mov
mov
dec
jae
pop
enter
insb
xor
outsl
add
int
test
or
fsub
xor
mov
inc
out
or
sbb
cmpsb
jl
adcl
out
popf
pop
jecxz
xchg
std
inc
push
mov
loope
out
mov
jns
xchg
mov
ss
mov
add
dec
push
mov
xor
lea
inc
jno
in
xchg
mov
aas
ror
sti
xchg
pop
into
pop
popl
outsl
dec
subl
out
lds
xor
lock
aad
ret
fdivs
cltd
decl
sbb
sarb
cmc
cmp
lods
sbb
pusha
pushf
es
sbb
jo
aad
stos
pop
or
add
wbinvd
sti
mov
mov
mov
pop
mov
inc
ja
xchg
jno
jle
push
stos
jle
pop
jae
repz
jl
or
or
jge
lret
xor
lods
ja
bound
call
movb
sbb
add
sbb
push
mov
out
lahf
notb
xor
shll
pop
inc
aad
sub
mov
mov
icebp
adc
nop
repz
push
cmp
jle
scas
dec
movsb
imul
xor
dec
in
sub
cmp
popa
fsubrs
fstpl
push
fimuls
mov
je
into
lret
stos
and
loopne
pusha
movsl
jp
sub
mov
push
daa
insl
sub
and
loopne
pop
lret
or
dec
addl
jle
mov
pop
std
and
pop
xchg
je
int3
sub
xlat
dec
imul
mov
jns
in
jle
cmp
inc
ret
lret
out
lahf
pushf
jmp
xlat
test
out
jo
mov
popf
jmp
push
shll
pop
or
dec
xor
das
dec
stos
jne
push
divl
inc
iret
std
mov
arpl
or
jecxz
aas
dec
ror
push
das
scas
mov
xchg
pusha
jno
mov
movsb
je
dec
or
pop
jl
sub
adc
xor
fldenv
lds
ret
and
push
mov
xor
pop
inc
je
repnz
jge
in
push
roll
hlt
sar
jmp
test
lock
xor
and
cmp
xchg
test
pusha
testl
xchg
out
or
mov
lods
jmp
mov
out
push
jnp
outsl
repnz
add
push
sbb
mov
out
and
rcrl
ljmp
lcall
cwtl
bound
dec
mov
lods
cmp
sbb
sti
cmp
push
inc
std
sbb
jns
or
cmp
enter
fcoms
sub
push
mov
addr16
test
add
shr
test
cmp
fsts
aam
xor
das
inc
lds
mov
add
mov
xor
sahf
and
xchg
int
ret
push
sub
out
jge
push
out
inc
test
popf
into
pop
pop
xorl
stc
fucomi
pop
addl
or
or
test
imul
movsb
jnp
push
dec
cmp
or
testl
add
xor
test
xlat
pop
xchg
push
loopne
inc
sbb
xor
negl
pop
into
mov
dec
shll
jns
sub
sbb
cli
cltd
dec
popa
cld
aas
adc
jg
or
mov
sbb
or
mov
fistps
adc
xchg
jg
or
lds
es
repnz
fisubl
outsl
adc
cmpsb
cmp
mov
shr
push
repnz
cmp
pop
add
mov
mov
pop
stos
and
jmp
jno
sbb
clc
push
inc
cmp
outsl
imul
push
daa
popf
jnp
rclb
cmp
adc
sbb
inc
sub
leave
ret
cmp
fldcw
js
add
xor
cld
sub
mov
push
mov
mov
fmulp
dec
cmc
pusha
repnz
push
and
sub
pop
cltd
sti
jmp
lahf
lret
std
aam
jnp
in
jns
push
push
in
inc
jnp
scas
xorl
xchg
jg
mov
xor
push
cmp
push
pop
push
and
jne
nop
iret
cmp
pop
pop
lahf
test
outsl
pop
sub
imul
hlt
push
xor
call
mov
jb
insb
in
mov
loope
fldenv
movsb
jbe
out
call
fwait
and
jb
adc
loopne
jge
mov
stos
ljmp
mov
cmpb
push
mov
jne
push
push
pop
jg
mov
fsubrp
loope
test
cld
and
and
rolb
push
mov
in
add
ja
jge
jne
push
inc
in
fldenv
jno
les
cld
loopne
and
js
in
outsb
frstor
test
mov
lea
in
movsw
mov
popa
incb
repnz
lea
mov
les
js
shlb
shlb
int3
cmc
mov
stos
inc
in
aam
mov
inc
pusha
cmc
sbb
jo
fbstp
push
xchg
and
xchg
inc
mov
pusha
add
mov
sub
jmp
push
push
push
mov
xlat
mov
dec
push
jg
roll
inc
mov
add
pop
ja
in
cs
xor
xor
aaa
jns
pop
mov
push
xor
mov
jp
jmp
adc
jle
mov
cltd
lea
inc
pop
xchg
mov
lods
shll
hlt
xchg
pop
insb
loopne
sub
and
fs
adc
jl
pop
scas
or
and
les
jne
sbb
mov
addr16
pop
pop
pop
movsl
fisubrs
lods
in
cwtl
lcall
ret
xchg
lock
add
imul
pusha
jno
incb
lahf
and
shll
fisttpl
popf
cld
cmp
cmp
test
cmp
out
or
push
mov
popf
mov
xchg
imul
popf
adc
insb
ljmp
jge
push
and
scas
pop
mov
ficoms
xor
insl
adc
mov
out
stos
mov
push
call
mov
jg
sbb
push
mov
jb
sbb
lcall
or
cmp
je
dec
pop
xchg
js
adc
jp
repnz
jmp
pop
fs
sti
int
inc
xchg
rcll
push
jnp
ljmp
mov
fstps
mov
pop
ficomps
nop
mov
mov
dec
jle
cmp
mov
cmp
jmp
inc
push
inc
lods
and
mov
push
scas
or
and
cmp
lret
adc
loopne
jmp
pop
dec
jmp
pop
std
mov
adc
mov
jb
add
jge
jnp
repnz
jbe
adc
rcrb
gs
pop
aam
jle
cltd
push
xchg
or
push
push
mov
andb
push
call
cmp
mov
push
inc
push
dec
xchg
icebp
and
dec
push
jnp
cltd
shlb
xor
gs
imulb
jp
inc
adc
loopne
test
sub
loop
sub
dec
pop
stos
and
test
aam
aaa
rcr
jecxz
cmpsl
ss
test
pop
fwait
add
ret
add
jg
out
sub
scas
enter
pusha
ret
scas
pop
adcl
mov
repnz
les
cli
cmp
xor
bound
ja
jmp
cs
sbb
adc
jno
js
xchg
lock
jge
jp
adc
ds
add
add
jl
es
in
dec
inc
and
sub
fcoml
imul
addl
or
out
arpl
mov
cmp
cld
xor
ljmp
jmp
fdivrs
addr16
jno
mov
lret
mov
dec
jmp
sbb
sti
aad
pop
pusha
sub
fldl
jbe
fwait
mov
mov
push
or
cmp
sub
movsb
sub
fs
mov
cli
repz
add
xchg
insl
orb
add
in
xchg
fwait
repnz
inc
ret
fmuls
jge
jg
sub
push
pop
mov
pop
loopne
and
push
sbb
stos
xchg
movsl
adc
add
aad
pop
out
adc
sub
popf
push
out
inc
inc
int
push
add
int
pop
ds
pop
xorb
or
clc
mov
stos
cmp
mov
aad
jmp
fs
push
repnz
sub
lret
xchg
int
insl
jno
pushf
jmp
sub
stos
sbb
and
ljmp
movl
jge
dec
arpl
cmp
push
dec
daa
out
cmp
pop
lret
call
movsl
data16
dec
cli
push
sub
pop
out
xchg
loop
jo
pusha
loopne
or
lods
pop
push
pop
inc
xorb
stc
inc
xor
arpl
mov
mov
loopne
push
pop
out
push
daa
outsw
nopl
hlt
inc
imul
pusha
pop
and
popf
into
aam
movsb
aad
add
mov
in
push
xlat
pop
cmpsl
loope
aad
sub
jno
sti
dec
inc
xor
jl
sahf
mov
mov
adc
aas
xor
fsubrl
pop
scas
mov
aas
mov
jmp
mov
xor
or
ja
or
jp
xchg
mov
popf
fadds
push
ds
xorl
ret
orl
mov
xor
dec
cmp
push
push
scas
incb
fistl
ret
pop
sub
ja
in
cmp
jp
xor
xchg
jecxz
sbb
or
cmp
add
xor
cmp
shl
push
xor
sbb
out
test
inc
jge
adc
adc
sahf
addr16
add
int
inc
push
or
mov
leave
icebp
imul
outsl
cmpsb
das
aas
mov
pop
add
mov
cmpsl
stos
repnz
loope
icebp
jns
movsl
mov
inc
mov
pusha
pop
pop
cmp
push
sbb
mov
insb
bound
addr16
jecxz
faddp
push
inc
dec
xlat
jae
std
jbe
test
out
push
mov
sub
inc
movsb
sub
scas
call
mov
divl
mov
mov
push
cld
inc
stc
data16
xchg
aam
lods
int
push
mov
movsl
xor
cmp
jne
repnz
mov
xchg
push
icebp
mov
cmc
and
mov
lock
icebp
out
in
negb
sub
shl
mov
jae
adc
fwait
arpl
and
cmp
adc
xor
mov
lods
addr16
and
xchg
xlat
in
add
mov
inc
sar
lcall
push
adc
pop
mov
sbb
arpl
rcll
jnp
into
cld
scas
insl
push
and
or
cmp
add
in
test
sbb
movsl
clc
cwtl
xor
or
inc
mov
jns
stos
and
cld
jno
std
jb
or
fnstsw
inc
ret
xchg
push
or
cli
loope
mov
nop
stos
std
mov
mov
movsb
xor
xchg
xchg
push
repz
jmp
outsl
mov
lret
pop
mov
push
hlt
out
push
addr16
and
js
mov
xlat
out
dec
inc
test
dec
mov
push
push
arpl
jb
push
and
cs
insb
inc
adc
js
and
push
cmpl
aad
cmp
cmc
cltd
icebp
xchg
push
mov
mov
aad
addr16
lock
rcll
movsl
loop
push
adc
sub
jnp
jg
xchg
mov
in
mov
pop
cmpsl
pushf
clc
push
dec
sbb
jmp
mov
decl
popa
inc
shlb
call
js
xor
pop
inc
inc
andl
loopne
jp
movsb
test
add
int
mov
push
mov
hlt
pop
jnp
in
lret
push
fsubrl
cmp
mov
mov
dec
dec
lahf
mov
in
xor
pop
cmc
or
les
mull
add
pop
xchg
lret
jae
push
sarb
jb
push
dec
cltd
pop
ds
lock
sbb
fnstenv
xchg
lahf
jge
fadds
sbb
xor
rcrl
iret
xlat
int
and
sbb
insb
xor
or
mov
ja
js
xor
adc
in
xchg
icebp
push
pop
dec
std
add
jb
fwait
jo
jmp
jle
jmp
popa
int3
sti
scas
dec
cmc
movsl
sbb
and
sub
ljmp
sub
dec
fmull
jge
sarb
mov
int3
mov
dec
sahf
mov
mov
imul
fcomps
jg
sbb
xchg
push
sub
lcall
les
xor
aas
fwait
mov
sbb
jns
aas
push
jmp
mov
jp
gs
mov
sub
cmp
gs
push
sub
daa
insl
xorl
fcoms
mov
popf
std
int3
test
xchg
and
dec
jae
sti
xor
cmp
dec
ljmp
fnstenv
mov
xor
cmc
push
push
mov
outsb
insl
ja
cmpsl
aad
mov
xor
lahf
sbb
aas
lahf
icebp
aad
arpl
lock
dec
jae
lcall
in
mov
push
lea
mov
xor
data16
rorl
adc
jecxz
sub
bnd
sbb
repz
push
fstpt
movsl
push
mov
or
fcompl
inc
push
mov
xchg
mov
and
clc
push
push
lds
pop
dec
leave
fld1
dec
sub
pop
stos
push
pop
add
leave
stc
sub
notb
sub
arpl
pushf
sbb
in
in
test
js
ret
movsl
adc
mov
mov
jae
xchg
shlb
jle
ret
ja
dec
add
mov
hlt
je
xchg
out
mov
jb
push
mov
hlt
daa
das
shr
out
fisubl
enter
cmp
cmc
or
pop
sbb
mov
roll
push
outsl
mov
sahf
add
xchg
imul
adc
arpl
das
mov
cmc
out
dec
pop
jae
jecxz
xchg
rcrb
mov
add
mov
sub
push
sti
stos
test
xlat
sub
aaa
dec
jns
add
test
push
pushf
dec
cmpsl
mov
ror
cmpsl
fsubs
sbb
out
sub
push
lea
imul
inc
xor
clc
mov
jno
roll
loopnew
out
mov
adc
inc
jp
xor
mov
fimuls
dec
xor
scas
lret
sbb
and
lds
insl
test
mov
jmp
sarl
andl
mov
stc
jle
jl
pop
pop
xchg
pusha
push
repnz
nop
inc
inc
shrb
decb
add
pushf
mov
stos
stos
mov
mul
out
sbb
push
mov
jl
data16
stos
and
adc
dec
pop
sbb
out
jno
sbb
xorb
std
aas
pop
test
rcrb
dec
sbb
pop
iret
je
inc
repz
mov
mov
imul
divl
jle
cmp
call
movsb
ds
mov
das
and
adc
sahf
rorb
mov
shrl
mov
lret
arpl
xor
inc
cmp
pop
cmp
or
or
sub
test
addr16
out
inc
incb
sqrtps
jl
cltd
enter
pop
dec
mov
add
adc
call
rcrl
pop
pop
dec
sub
rcrb
cmp
test
lds
xchg
mov
mov
test
adc
fcmovne
jbe
cmp
sbb
add
ret
lods
test
jmp
incl
loope
cmpl
and
mov
and
out
adc
push
mov
stos
pop
aas
and
adc
pop
rcrl
mov
adc
cli
jg
push
imul
or
in
stos
push
jbe
inc
add
out
hlt
cmp
stc
aam
xor
xor
out
lods
and
jp
inc
push
dec
cmp
pop
jl
push
cmc
mov
leave
mov
xorb
cmp
inc
mov
xchg
test
and
sub
sti
lods
sbb
rcrl
pop
shll
stc
bound
out
sbb
add
jnp
daa
sub
fwait
mov
xor
and
es
mov
icebp
cwtl
js
clc
cmp
sbb
stos
or
mov
cmp
sbb
les
inc
push
lods
and
or
adcb
pusha
xchg
or
movsb
ljmp
push
ljmp
mov
dec
leave
scas
mov
fldenv
daa
icebp
push
sahf
aad
dec
pop
xchg
lcall
inc
jnp
ret
cmp
mov
adc
fucompp
jge
xlat
adc
mov
dec
daa
adc
sub
jmp
repz
mov
aam
cwtl
test
icebp
aam
scas
and
pop
mov
push
insl
cmp
pop
dec
outsb
jmp
cmp
xor
mov
xchg
sbb
jbe
clc
fwait
add
sbb
fbstp
xor
mov
push
jb
ljmp
push
push
dec
clc
leave
sub
pop
test
mov
mov
inc
jmp
fisttpl
add
mov
pushf
sbb
adc
mov
cli
add
mov
ds
lods
fs
sbb
mov
dec
and
mov
cmpsl
out
shlb
testb
mov
push
inc
add
jle
test
out
out
add
push
pop
sar
insb
pushf
xlat
push
inc
les
data16
hlt
dec
push
shlb
cld
sbb
xchg
cmc
stc
mov
repnz
scas
insb
aas
jae
sub
jle
jnp
pop
mov
rclb
sub
xchg
in
xchg
arpl
fdecstp
xorl
popa
xchg
mov
mov
xchg
push
pop
pop
jo
sbb
adc
outsb
jno
lock
mov
sub
xchg
or
pusha
into
insb
repnz
es
push
and
out
sub
mov
in
push
add
js
in
mov
lea
into
inc
and
out
adc
jne
btrl
ja
negl
pop
cmp
fistl
push
loopne
cmp
dec
iret
xchg
ds
sti
loop
loop
into
adcb
mov
arpl
or
neg
push
ljmp
xchg
mov
add
and
add
jnp
cmpsl
adc
push
fwait
mov
inc
or
out
and
jle
lea
mov
call
int
sub
ret
dec
cli
negb
sbb
clc
pop
xor
arpl
stos
jl
scas
lock
gs
mov
push
ss
and
dec
in
mov
sahf
pop
cmp
testl
push
daa
pop
repz
in
adc
out
inc
pop
mov
inc
arpl
pop
push
dec
jmp
test
or
mov
test
popa
fldt
add
sub
cmp
xstore-rng
cmpsl
add
lods
mov
fistpll
dec
cmp
xchg
sbb
ljmp
sub
daa
lret
inc
xchg
pop
push
pop
xor
aas
in
mov
mov
imul
pop
add
xchg
xor
repz
ret
imul
clc
jns
cmp
inc
sbb
jae
test
xor
push
and
push
pop
ss
dec
xchg
inc
inc
sti
icebp
les
fs
andl
stc
jl
xchg
sub
cmpsb
dec
lcall
scas
aam
popf
pop
in
in
andl
test
arpl
repz
subl
mov
inc
mov
jb
sbb
aad
scas
jo
cmp
push
call
mov
or
mov
sub
cmp
lods
je
mov
ljmp
push
test
jmp
test
push
stos
mov
mov
gs
in
scas
fstl
dec
dec
pop
inc
sbb
mov
mov
xchg
arpl
pop
ret
shrb
mov
scas
lahf
ret
push
and
test
sub
cwtl
lret
pop
cmp
mov
mov
loope
cmp
fwait
mov
mov
dec
push
sub
sbb
mov
sub
imul
push
jge
lds
data16
mov
mov
mov
xchg
and
lds
pop
in
push
cmp
dec
mov
loop
into
xchg
test
dec
xchg
pushf
in
nop
push
mov
jle
imul
add
pop
stc
shll
xor
stos
jg
xchg
and
mov
adc
fldt
xor
daa
pop
mov
jg
shrl
notl
jnp
jecxz
xor
and
lret
mov
pop
emms
stc
push
dec
sub
inc
insl
movzwl
iret
je
into
mov
inc
int3
repz
sbb
inc
adc
fistpl
add
popl
sti
in
in
loop
cmpsb
mov
push
fisubrs
xor
jno
sub
add
movsb
inc
repnz
inc
jle
mov
das
out
mov
or
mov
xchg
sti
push
push
xor
mov
shrb
mov
pop
xlat
add
scas
aad
inc
repnz
mov
sbb
cmpsl
mov
add
jnp
and
xchg
add
push
sti
rcll
nop
mov
cld
cs
xchg
outsb
lods
inc
getsec
out
in
imul
stos
or
mov
inc
lahf
aaa
mov
test
xor
mov
xor
mov
mov
xchg
sub
shrl
and
and
cmp
sbb
mov
pushf
popa
popa
out
punpckhdq
lret
sarb
xchg
xor
jnp
inc
testl
out
popf
mov
xchg
stos
cmp
add
xchg
nop
cmp
in
mov
pop
mov
sti
enter
out
jecxz
testb
stos
add
in
aas
jb
lahf
fistpl
into
sbb
mov
cld
imul
xor
push
mov
mov
adc
lcall
pop
jecxz
js
das
xor
add
mov
cmp
fbstp
cmpsl
jbe
sub
dec
repnz
loop
and
lods
pusha
cli
cmpsl
scas
gs
lds
mov
dec
jne
das
mov
mov
add
inc
mov
out
mov
or
aaa
clc
and
aas
sub
shll
test
push
movsl
xchg
dec
mov
and
xor
inc
dec
loopne
insl
outsl
xchg
lds
es
push
mov
scas
lea
inc
fists
outsb
js
fsubr
jnp
push
pop
imulb
add
xor
mov
in
xchg
jl
mov
fiadds
sub
cmp
xlat
cmp
mov
outsl
add
jecxz
lret
cld
adc
rorl
cmp
les
add
scas
mov
sbb
fs
imul
call
push
icebp
adc
outsl
mov
lea
bound
cmp
pop
dec
loop
flds
cmpsb
mov
out
push
inc
xchg
into
sbb
add
cmp
andl
je
cmpsb
out
cmpsb
test
mov
imul
add
ljmp
lret
inc
lods
mov
push
pop
mov
xor
in
cli
mov
scas
cmp
jp
test
xchg
test
or
mov
cmp
jmp
mov
inc
push
lahf
test
int3
push
mov
mov
lret
in
xchg
movsb
add
pop
inc
inc
add
into
das
lea
mov
fs
mov
inc
push
inc
cld
sbb
test
push
test
repnz
dec
pop
pop
lcall
xchg
cmp
bound
cmp
rcrl
mov
mov
mov
xlat
add
jg
les
sbb
cs
xchg
inc
test
xor
out
ljmp
inc
mov
test
cld
sbb
es
inc
jno
mov
and
out
fistpll
cli
push
imul
lret
std
sub
int
mov
scas
arpl
jp
push
xchg
fcom
test
clc
ret
xchg
xor
fwait
push
out
mov
cltd
xor
xchg
imull
or
fsubl
xor
sub
loop
mov
dec
lods
pop
pop
cmp
insl
mov
lds
es
lods
xor
and
mov
lea
xchg
mov
nop
in
int3
ljmp
mov
xlat
xchg
out
xchg
push
push
cwtl
fs
inc
add
shrl
scas
cmp
test
dec
and
or
jl
jmp
aad
movsl
jle
jp
outsl
cli
pop
aas
dec
ret
pop
test
or
dec
repnz
pop
rclb
call
lock
in
inc
in
mov
mov
popa
push
in
jle
gs
das
mov
aaa
iret
rcll
insb
push
fisubrl
adc
mov
inc
jb
fldenv
add
es
aaa
jbe
test
inc
pop
or
xchg
lds
fucomp
xchg
fisttpll
push
dec
cmp
sarb
push
sarl
in
jmp
add
and
out
lods
or
or
xchg
pop
xchg
lret
push
sbb
hlt
add
call
mov
push
aas
and
and
sub
add
movsl
xor
sub
mov
inc
in
fmulp
cld
cwtl
clc
cmpsb
xchg
daa
dec
sub
lahf
addr16
push
shrb
add
push
insb
sub
mov
or
or
mov
pop
pusha
lods
or
pusha
loope
inc
mov
mov
aas
sahf
dec
sub
and
and
mov
mov
xor
and
inc
stos
mov
test
popa
mov
jge
push
jno
cmpsl
jnp
add
pop
mov
incb
and
gs
orb
rorb
sahf
sub
inc
dec
jae
pop
pop
jge
or
cmpb
push
add
xor
movsb
enter
movsl
inc
jb
and
cli
ret
and
mov
rorl
ror
dec
adc
or
inc
ss
or
data16
inc
mov
mov
test
mov
fsubr
jp
test
mov
jp
out
iret
adc
xor
inc
mov
push
popf
jg
and
sub
jmp
outsl
adc
push
out
mov
and
push
mov
xchg
cmc
imull
lds
aaa
add
cli
iret
xchg
andb
mov
mov
dec
jns
inc
mov
imul
out
jge
idivl
cmp
mov
inc
push
gs
mov
test
fs
sti
enter
jne
push
fwait
or
inc
ret
lods
and
cmpb
dec
sbb
nop
daa
lcall
dec
enter
pop
ret
insb
mov
adc
mov
jg
or
sub
push
in
sbb
mov
sbb
pop
mov
imul
xchg
insb
stos
out
inc
adc
adc
inc
xor
sub
dec
push
xchg
cmp
lcall
adc
lahf
jno
arpl
shl
fldl
insb
mov
aad
xchg
shr
pusha
int
cmc
sahf
cltd
pop
rcll
sbb
sub
mov
adc
shll
cmpsb
lcall
mov
jb
dec
test
aaa
pop
lahf
mov
aam
sbb
inc
ds
xchg
mov
sbb
movb
daa
sbb
cmpsb
mov
cmc
xor
jno
repz
xchg
repnz
xor
shr
pop
mov
adc
and
leave
stos
fsubrs
ss
push
and
sbb
in
jmp
pop
pop
ljmp
xchg
sbb
mov
push
jge
jns
je
inc
pop
xor
rcll
imul
dec
imul
and
mov
jb
and
inc
sub
into
xor
xor
sar
mov
or
stc
lock
dec
loopne
ja
sub
es
fbld
stos
push
sub
push
out
or
jbe
das
lret
inc
push
sti
call
call
dec
mov
shufps
xchg
fisubl
dec
arpl
hlt
cmp
push
mov
popa
rcr
and
lods
pop
popa
pop
das
mov
mov
push
xchg
pop
lret
mov
pop
jno
push
dec
mov
jle
out
pop
sbb
or
adc
dec
sbb
imul
lods
pop
dec
push
sbb
or
ds
cmpb
bound
mov
mov
ret
sti
sti
lret
inc
loopne
xchg
dec
mov
dec
inc
in
or
mov
mov
inc
push
xor
pop
gs
adc
fs
ret
sbb
js
test
test
sbb
adc
xorl
inc
sub
add
inc
add
repnz
clc
movsb
fnstenv
aaa
mov
jge
inc
jne
scas
in
pushf
out
mov
in
out
fnstsw
int
xchg
gs
cmp
orb
jmp
insl
out
scas
xchg
sbb
ljmp
sbb
sub
shl
ret
shll
insb
cmc
sub
mov
test
jg
mov
mov
fisttpll
sbb
jg
icebp
mov
xor
aaa
and
insl
leave
je
dec
mov
arpl
lret
lret
jmp
mov
int3
ret
xchg
add
lcall
fnstcw
mov
push
dec
xchg
adc
mov
ja
mov
mov
inc
cmpsl
xchg
and
loope,pn
cmpsl
rorl
daa
xchg
jge
adc
aam
mov
je
pop
jp
ret
fidivrl
shrl
sub
enter
dec
repnz
dec
push
outsb
loop
inc
lods
or
pop
pop
jb
push
sbb
stos
or
fs
ror
sub
loope
mov
sub
jae
stos
and
mov
sbb
daa
mov
inc
iret
ret
mov
das
inc
and
leave
mov
dec
loopne
fisttps
push
test
dec
and
add
mov
and
loopne
mov
or
lods
fisttps
jl
testb
dec
jne
inc
mov
adc
push
lods
arpl
lret
adc
cmp
mov
mov
xchg
jns
lret
or
into
ret
pop
ja
jno
jns
rcrl
mov
push
cmc
cli
out
cli
test
sub
ja
xchg
mov
ljmp
stc
inc
dec
fidivl
mov
mov
sub
ds
in
mov
add
shl
scas
sbb
cli
mov
xor
dec
jg
cld
loope
cmc
lahf
je
sti
push
xchg
mov
test
and
ds
test
pop
pop
inc
and
inc
cwtl
ds
in
add
jns
mov
fwait
cwtl
clc
call
in
xchg
cmp
jb
out
loope
jp
add
sbb
jnp
lea
aad
jnp
inc
popa
xor
enter
icebp
inc
xor
jge
jl
test
data16
inc
fnstsw
push
stos
push
sub
jg
lods
add
xor
aad
and
and
fcomip
out
lea
push
pop
mov
adc
pusha
enter
sub
mov
mov
push
mov
lods
outsb
jae
pop
xchg
pusha
jp
daa
lds
mov
dec
lds
lret
aam
inc
in
ss
in
int3
jo
or
es
fcmovnbe
xor
mov
aas
and
xchg
sub
ret
std
add
sbb
and
dec
aam
mov
pusha
mov
inc
scas
jno
pop
aam
or
add
pusha
fs
sti
cld
into
fwait
cmc
sbb
jno
and
aas
std
push
inc
xor
sub
xchg
sbb
pop
inc
stos
add
pop
shll
mov
jbe
pop
popf
pop
xor
aam
test
shl
or
add
nop
inc
cld
mov
roll
mov
jbe
ficoms
cmp
mov
jbe
out
popa
cs
mov
xchg
inc
xlat
leave
add
int
pop
mov
jle
mov
sbb
add
adc
mov
ds
push
loopne
popf
mov
pop
bound
lea
cli
pop
test
test
movsl
jp
cld
mov
cwtl
iret
or
stc
addr16
in
pop
xlat
dec
fsubl
add
jnp
inc
clc
pop
rclb
xchg
xchg
rcl
rclb
ja
jb
pop
or
xchg
and
sbb
stos
test
jb
mov
sbb
stos
lea
jp
je
bound
int
daa
pop
outsl
or
add
dec
daa
repz
mov
dec
mov
jb,pt
negb
jecxz
aas
xchg
mov
mov
hlt
add
idivb
in
int3
mov
mov
jb
pop
cltd
fisubrs
das
mov
pusha
das
nop
mov
add
mov
add
push
mov
push
dec
sahf
fidivrs
sti
mov
mov
cmpsl
imul
lret
mov
add
in
lock
sbb
test
jno
inc
jnp
loope
inc
inc
lods
sub
test
push
mov
mov
xchg
xchg
pop
ficoml
test
out
sbb
fdivrl
sbbb
lods
scas
pop
clc
mov
xlat
cmp
adc
daa
rolb
fisubrs
push
cs
dec
inc
dec
cmp
or
pop
push
out
fiadds
lds
jmp
jb
mov
or
sub
popa
jno
and
sub
xchg
xchg
jno
lock
lret
jecxz
dec
in
lcall
mov
inc
or
repz
mov
stos
insl
fcompl
sbb
adc
xor
movsl
xchg
lock
jo
xchg
cmp
dec
ret
repnz
xchg
mov
les
movsb
mov
mov
add
nop
xchg
xor
lret
mov
sub
inc
insl
dec
lcall
pop
jbe
push
shll
pop
aaa
pusha
stos
xchg
repz
adc
incl
sbb
cmp
mov
call
pushf
sub
in
shrb
xchg
adc
pusha
fbstp
lods
das
hlt
cmpsl
scas
cmp
push
inc
add
jns
gs
adc
cltd
ss
imulb
push
loope
test
add
stc
stc
das
inc
jmp
mov
sbb
repz
push
divb
adc
dec
cld
mov
sar
pop
mov
lret
mov
enter
mov
jmp
into
movb
mov
dec
stos
sbb
aas
addr16
enter
cmpsb
sbb
cmp
dec
lcall
data16
xor
mov
out
repz
and
cmp
xor
in
es
rcrl
pop
das
mov
mov
jbe
leave
enter
xlat
ds
stos
xor
adc
mov
and
cmp
pop
insb
decl
mov
sti
mov
fldenv
sbb
mov
leave
cmpsb
sbb
pop
jg
in
imul
adc
jns
lcall
or
jmp
ja
movsb
insl
sarl
cmp
push
shrb
in
int
das
jae
pop
scas
test
fsts
mov
lds
out
xchg
test
outsl
sbb
iret
xchg
push
mov
inc
mov
jp
pop
xor
push
xor
add
adc
jbe
xor
push
push
dec
imul
xor
loope
inc
pop
push
inc
or
lcall
inc
ja
jb
leave
fld
inc
test
ror
mov
jb
pop
scas
mov
stos
sti
xchg
inc
mov
sbb
out
mov
outsl
mov
sti
cmpsb
aas
pushf
add
xlat
fisttps
pop
orl
outsl
test
xor
lea
adc
lahf
xor
insb
mov
inc
lods
pop
xchg
lds
in
jg
in
test
push
hlt
cltd
divl
mov
xor
inc
adc
xor
xor
mov
pslld
hlt
jns
scas
in
jl
dec
loopne
xchg
repz
mov
rcll
sti
mov
mov
add
fbstp
jge
push
cmpsb
xor
popf
pop
in
out
shlb
push
mov
outsb
call
xchg
and
jg
cltd
cmpl
lock
das
mov
arpl
in
pop
jae
mov
mov
clc
shr
lock
sbb
or
outsl
mov
insl
push
dec
dec
aas
dec
cli
adc
cmp
mov
das
xor
std
call
sbb
sbb
push
jl
stos
push
inc
in
repnz
jp
pop
dec
mov
mulb
movsb
aas
adc
inc
mov
pop
dec
call
out
mov
addr16
outsl
dec
pushl
lcall
xorb
cs
adc
lretw
mov
mov
sub
jae
and
cmp
adc
add
mov
aas
mov
sub
addr16
or
jo
scas
gs
jp
and
lock
push
push
enter
cmp
imul
adc
mov
lods
lea
cltd
idiv
lret
pop
mov
push
sahf
clc
mov
or
loope
mov
xchg
xlat
shlb
jge
enter
adc
inc
sbb
dec
mov
xchg
jbe,pt
in
mov
lahf
nop
ret
mov
mov
outsb
xor
jg
cmp
shll
addl
lods
sub
inc
ror
stos
or
jb
mov
and
cmp
sub
nop
jecxz
ds
vpmacssdql
movzwl
test
mov
dec
sub
leave
ficoms
push
mov
sub
mov
xchg
addr16
adc
pop
ljmp
mov
or
in
lods
out
lods
push
push
mov
cmp
aaa
cmpsl
push
faddl
sub
cltd
sub
in
and
arpl
jne
xor
adc
mov
fisttpll
mov
add
aam
int
pop
mov
jl
cld
mov
fnsave
imul
rcr
jns
mov
mov
rorb
jmp
mov
dec
xor
lret
mov
jns
jae
sub
mov
je
insl
inc
ljmp
pop
loop
and
and
ljmp
lock
fstpt
fistpl
sub
xor
adc
mov
cmovnp
shrl
jne
mov
mov
sbb
out
fistpll
loop
or
sahf
xchg
cmpsb
ret
push
orb
das
cmp
jnp
xor
cmpl
sub
mov
lds
push
es
mov
mov
and
sarl
loop
xor
push
arpl
jb
inc
mov
pop
mov
jns
and
mov
pop
fs
negb
and
push
je
ret
imull
dec
rol
and
sbb
and
mov
insl
inc
push
ljmp
icebp
xor
adc
add
test
inc
into
mov
dec
jge
adc
in
add
adcl
outsl
imulb
lods
shlb
mov
jmp
cmc
rcrb
or
mov
in
in
iret
mov
shll
adc
arpl
test
jnp
enter
roll
jno
cwtd
imul
lock
out
dec
das
inc
scas
test
add
mov
mov
jnp
sbb
pop
and
cltd
daa
cmpl
cmp
out
mov
outsl
out
jge
lret
aaa
scas
sbb
mov
pop
pop
cmp
pop
push
add
out
mov
sub
fidivs
andb
mov
and
mov
xlat
or
jmp
jae,pn
faddl
clc
test
mov
mov
jmp
mov
sub
cmpb
lea
adc
test
cmp
lret
add
pop
and
mov
insl
sub
mov
cs
mov
jno
jle
jmp
push
pop
cltd
mov
movsb
push
inc
dec
lret
outsb
mov
lock
mov
or
jecxz
jmp
lret
js
out
les
cmp
fnsave
xlat
sbb
stos
or
push
lret
inc
mov
cs
mov
sbb
inc
mov
sbb
icebp
fbld
sub
das
xor
das
mov
push
int3
nop
pop
and
loopne
jnp
push
add
or
mov
lret
pop
mov
adcl
adc
popa
sti
stos
xor
push
addb
icebp
dec
cli
xor
dec
inc
adc
or
mov
cld
cmpsl
aad
inc
jnp
sub
outsb
and
xchg
mov
cmp
dec
cmp
aad
dec
test
push
inc
dec
leave
adc
pop
mov
xchg
es
popf
mov
test
jl
sbb
push
jl
mov
popa
dec
jl
cmpsb
add
ja
dec
mov
outsb
call
inc
sub
in
imul
inc
jo
jno
loope
push
in
sub
dec
jge
lea
outsb
xor
lods
fbstp
mov
xor
aam
jecxz
stos
cld
sbb
mov
jmp
pop
in
fs
inc
xor
jne
test
loope
subl
lret
xor
imul
enter
inc
mov
or
inc
inc
adc
xor
ds
xchg
push
cltd
ficoml
aas
bound
pop
test
ret
pop
inc
push
pop
jmp
xchg
jnp
repz
fs
insl
jno
sub
loope
jp
sbb
xchg
sub
int
adc
nop
xchg
cmp
movsl
xchg
stos
inc
loope
popf
xchg
pop
cmpsb
stos
add
cs
mov
loop
sub
aam
and
outsb
xchg
sbb
sub
adc
jbe
fstps
dec
in
pushf
and
sti
add
out
aam
pop
inc
xlat
cmpsl
icebp
jo
cwtl
sbb
jb
mov
fmull
testb
and
negl
vpcmpgtd
add
scas
ja
rcr
add
out
scas
jp
sahf
fnclex
lock
inc
jle
xor
mov
cmc
movaps
sub
clc
addr16
enter
mov
mov
jge
or
mov
pop
cmp
lret
je
jg
gs
iret
cmc
sti
cmp
dec
outsl
cmpb
pop
pop
fimuls
inc
roll
jb
outsl
pop
loop
mov
xor
push
xchg
mov
enter
add
pop
jnp
iret
mov
adc
jbe
daa
movsl
lods
shl
push
push
sbb
stos
mov
jmp
fxch
jmp
lret
dec
insb
jp
sub
sbb
inc
std
xchg
xlat
mov
dec
dec
xor
loope
xor
pop
test
outsb
icebp
and
lret
aas
test
push
sub
dec
xor
movsb
mov
lret
les
int3
xor
std
dec
mov
dec
ds
lcall
cltd
pusha
shrl
rcll
outsb
jbe
loopne
adc
mov
in
dec
mov
lret
pop
ror
dec
fdivrp
loope
pop
sub
adc
mov
iret
sub
pusha
mov
mov
jmp
lcall
adc
bound
jl
push
and
jae
mov
mov
data16
clc
stc
sbb
mov
mov
fbstp
push
adc
mov
loop
sti
data16
jno
enter
loopne
dec
mov
push
mov
xorl
std
jg
jbe
and
lcall
outsb
in
stos
xlat
int
stc
outsb
psllq
outsb
cld
push
xor
pop
jge
pop
add
push
pop
mov
dec
mov
mov
pop
dec
test
jb
mov
ss
sbb
sbb
les
insb
dec
popf
js
int3
in
mov
je
jmp
xchg
or
mov
sub
ss
in
popl
xor
xchg
enter
and
inc
jnp
dec
dec
lock
outsl
xor
in
int3
jb
stos
repnz
and
cmp
hlt
ret
imull
jno
mov
adc
push
sbb
lods
mov
xchg
test
adc
jbe
push
and
dec
jg
lods
daa
fs
pushf
loop
cli
sbb
inc
mov
out
adc
xlat
mov
sbb
sub
push
cld
xchg
movb
add
pop
push
push
mov
aaa
fistps
andb
imul
mov
pop
sub
fiadds
ret
les
mov
pop
and
push
kxnorb
out
pop
sbb
cltd
mov
popa
xchg
pop
js
roll
xchg
out
adc
push
into
mov
mov
inc
vmwrite
std
js
push
jmp
inc
push
shr
imul
dec
icebp
jecxz
sbb
pop
leave
loope
test
std
mov
pop
data16
xor
sbb
add
into
inc
test
ret
xor
dec
jmp
mov
sbb
aaa
push
ficompl
jnp
lret
inc
mov
addr16
sub
mov
push
xorb
cmp
inc
fsubrl
mov
push
aad
xor
out
fiaddl
fdiv
fnstenv
lret
xchg
shll
jmp
hlt
imul
or
push
cmp
jne
aad
lods
xchg
sub
out
mov
mov
push
jmp
sbb
adc
or
sbb
fimuls
or
outsl
mov
pop
leave
cld
jl
into
rorb
mov
push
dec
sbb
bound
jb
test
jmp
push
lcall
xchg
sbb
lcall
imul
inc
xor
jb
push
mov
popa
or
dec
loopew
mov
out
fisubs
sub
sbb
out
add
les
fs
cmpsl
xor
sub
movq
imul
ret
xor
aad
jmp
inc
push
mov
out
ljmp
scas
mov
jno
repz
pop
orb
gs
stc
ds
adcl
scas
and
pop
jp
aad
mov
sub
int3
cmp
xor
and
lods
push
jge
mov
fwait
dec
push
sub
mov
inc
jle
enter
mov
mov
mov
out
gs
stos
stc
mov
sbb
xchg
pusha
pop
pop
sub
cwtl
test
mov
inc
and
pop
push
pop
loop
cli
adc
push
add
xlat
mov
jl
lret
mov
imul
sbb
mov
add
and
xchg
and
gs
test
fistpll
in
mov
nop
aas
js
pop
stos
mov
jle
sub
and
or
fwait
stc
mov
xchg
jo
dec
xor
in
add
jno
add
mov
cmpsl
mov
cmp
pop
fisttpll
dec
cmp
xchg
mov
cwtl
fwait
pop
mov
js
push
ljmp
mov
bound
out
jo
mov
ss
fwait
insl
adc
sub
cltd
orb
test
outsl
mov
xchg
int3
sbb
sub
mov
push
cmp
movsb
mov
push
and
lock
sbb
loopne
leave
nop
es
fisubs
adc
xchg
call
cmc
mov
push
hlt
fs
cmp
adc
call
jp
inc
leave
imul
mov
aam
out
add
notl
dec
and
sub
push
popl
sarl
xchg
sub
repz
jp
pop
popa
mov
fstps
into
cmp
mov
mov
dec
dec
leave
sti
and
mov
decb
jl
mov
add
jge
pop
mov
shll
shlb
das
loopne
mov
cli
pop
int3
adc
lret
ss
adc
mov
insl
lock
repnz
mov
and
mov
lcall
jge
sbb
xchg
in
mov
jne
lock
pop
dec
jl
xlat
fwait
cld
shrl
push
hlt
dec
mov
adc
outsb
in
adc
sahf
cmp
fs
popa
gs
pop
decb
cmp
mov
ja
cmp
in
aas
xor
mov
xchg
sarl
pop
mov
in
test
dec
ror
and
in
cs
pop
sti
mov
shll
sbb
ret
xchg
xchg
mov
xchg
lcall
sbb
les
lret
cltd
in
lcall
icebp
sub
filds
push
in
jecxz
negb
sbb
cmp
dec
loopne
push
xchg
stos
mov
jnp
mov
sbb
adc
pop
adc
arpl
push
mov
scas
fdivs
xlat
or
mov
sub
mov
lock
mov
cli
test
movlps
pop
dec
pop
sub
jle
sbb
popa
rcl
cmpl
push
cmp
pop
push
cmp
fimull
test
or
test
push
push
mov
jmp
mov
rcrb
std
mov
adcb
xchg
outsb
mov
push
lea
movsl
pusha
cmp
out
lcall
data16
mov
ficoml
xor
aaa
data16
aaa
mov
pop
imul
gs
sbb
push
mov
mov
mov
mov
loopne
and
or
fdivl
xchg
popf
mov
outsl
in
lcall
fisubrs
stos
lea
adc
fistpl
movaps
cmpb
inc
or
add
aam
mov
pushw
ret
push
dec
jge
out
fdivr
mov
jmp
mov
loopne
imul
subl
and
jl
fbstp
xchg
sub
xchg
mov
mov
imul
sti
or
leave
jae
push
outsb
dec
xor
insl
xor
jg
mov
cmp
out
test
pop
pop
xor
and
mov
inc
leave
jecxz
into
repnz
and
add
inc
shll
mov
insl
mov
jae
lock
int3
in
xor
cltd
outsb
mov
rclb
mov
inc
inc
sahf
gs
pop
icebp
push
sbb
push
adc
fwait
sarb
outsl
dec
shl
lret
leave
nop
lds
rcll
movsb
shll
fstpl
faddl
xor
sub
insl
and
jns
mov
xchg
inc
jge
adc
inc
cmp
inc
push
xor
fidivrs
push
ds
daa
xchg
jle
jmp
dec
sub
dec
mov
ret
in
mov
aaa
dec
cmp
decl
pop
jge
movsb
out
movsl
sub
push
xchg
int3
sub
and
xor
inc
das
fwait
cmc
in
mov
and
iret
or
iret
jp
pop
dec
add
sti
js
sti
and
sub
dec
jb
cli
xchg
fcmovne
call
rclb
inc
lret
repz
mov
mov
mov
add
popf
rep
jmp
rclb
stc
xlat
and
pop
pmuludq
adc
dec
js
push
adc
mov
and
sahf
pop
lock
lret
pop
push
xlat
loope
or
or
pop
sti
int3
pop
jle
push
pop
negb
popa
ds
ljmp
jae
xorb
adc
mov
jg
lcall
out
rclb
add
adc
inc
push
les
call
lds
cmp
cmp
adc
xchg
sub
leave
mov
push
call
dec
dec
int3
mov
insl
and
xchg
push
jno
mov
jecxz
std
jecxz
cmpsl
aaa
jbe
inc
jo
pop
xor
pop
xchg
movsb
nop
add
lods
sti
pusha
xor
mov
add
stc
xchg
inc
and
aaa
mov
cld
sbb
stos
call
rcr
decl
ret
sbb
ss
add
sub
inc
xor
jbe
test
hlt
insl
subb
bound
mov
aaa
dec
inc
cli
add
pop
mov
pushf
xor
mov
adc
lret
fs
movsl
dec
mov
insb
ds
mov
outsl
roll
push
iret
cmc
out
xor
pop
std
pop
fcomps
ds
punpckhbw
fwait
push
in
popf
mov
mov
out
mov
dec
jnp
test
int
xor
and
sbb
stos
lock
shrl
std
inc
adc
jge
cwtl
push
test
fs
subl
push
repz
aaa
inc
push
lock
sti
sarb
cmpl
dec
ljmp
lods
arpl
sbb
mov
fprem
sar
jo
mov
fidivl
lock
fistps
popf
clc
fldl2t
or
leave
mov
cwtl
add
out
mov
push
out
ja
sahf
lret
divb
xchg
loope
adc
das
inc
and
shlb
sbb
mov
sti
xchg
daa
cld
outsl
add
icebp
loop
add
push
nop
xor
lods
and
movsb
xchg
sbb
sub
jo
sbb
data16
arpl
stc
fsubrl
push
mov
es
jmp
inc
jg
loopne
ja
std
pop
in
xor
int3
clc
inc
lret
xchg
test
inc
out
ljmp
ja
stos
mov
sub
popa
std
ds
adc
push
inc
dec
mov
mov
fbld
stos
test
pop
xchg
mov
cmc
rorl
aam
insl
push
push
fistps
enter
jno
hlt
xchg
sbb
ljmp
mov
inc
jns
ja
mov
pusha
xchg
lds
xor
xlat
and
mov
lds
idiv
negl
rcl
push
adc
negl
xchg
mov
ss
inc
xorb
sarb
sub
adc
cmc
data16
push
scas
lret
cmp
and
sub
enter
push
bt
js
push
sbb
and
out
std
xorl
into
mov
test
mov
pop
jmp
lods
pop
push
xchg
pop
xchg
jmp
push
lods
stos
xor
fdivrs
pop
insl
pop
push
in
ss
mov
sbb
subl
sbb
pushf
in
mov
or
jp
sbb
aad
inc
filds
pushf
rcl
ja
mov
cwtl
push
fs
cmp
pushf
sub
repz
xchg
inc
bound
testb
xchg
pop
lods
repnz
cmp
jecxz
icebp
push
fcmove
push
push
jl
push
ljmp
in
daa
data16
cld
add
xor
mov
push
movsb
cld
jns
adc
push
repz
pop
into
movsl
aad
adc
lret
dec
rcrb
jp
insl
and
xor
jbe
out
adcl
jge
outsb
shll
adc
test
loopne
lods
imul
pop
mov
repz
pop
cld
cltd
and
jle
cmp
jg
mov
mov
mov
adc
bound
sbb
clc
jmp
test
hlt
push
pop
cmpsb
mov
jl
int
ficompl
or
xchg
divb
jae
sti
add
and
xchg
aas
or
ds
push
mov
int3
cli
pop
sbb
inc
rclb
call
data16
xor
xchg
cs
imul
arpl
cmp
daa
clc
in
cwtl
stos
xchg
clc
andl
aas
and
sbbl
fnstcw
roll
icebp
out
out
cld
sbb
shrl
adcb
pop
xchg
dec
sahf
or
ret
cmpsb
adc
adc
in
je
jecxz
imul
std
inc
movsb
sbb
jmp
inc
jp
pop
push
fiaddl
hlt
push
inc
shrb
push
les
inc
pop
mov
jg
loope
icebp
imul
sahf
mov
dec
pop
mov
mov
enter
sti
cmpsb
mov
sbb
movsl
sub
adc
imull
and
fwait
inc
sbb
adc
and
loopne
movsb
jb
and
or
sub
sub
daa
ss
ret
sub
hlt
mov
shrb
pusha
das
push
ds
daa
push
orl
iret
sbb
fcmovnbe
cmp
mov
lods
pop
push
popa
jae
mov
in
aaa
ljmp
sub
sbb
insb
push
push
jns
sub
xor
jg
lcall
jnp
xlat
enter
and
ss
pop
mov
jg
cmpsl
fs
sbb
jecxz
ss
inc
and
mov
cwtl
push
mov
stos
sbb
sbb
ficomps
or
fs
cwtl
sahf
pop
inc
ret
andl
cmpsl
imull
sbb
mov
popa
cltd
std
cmp
adc
lret
pop
mov
jl
mov
sub
jne
pushf
cmpsb
loopne
popa
xchg
ds
sbb
ret
jp
subl
xor
xor
ja
mov
mov
cmp
cmpsb
add
sbb
dec
pop
sub
jge
in
xor
mov
xchg
cltd
out
ss
pop
lahf
iret
ror
cmp
lock
imul
out
jnp
adc
jne
fldl
or
in
jno
lea
lds
insl
cmp
leave
test
cmpsl
pop
pop
aam
jp
mov
sbb
mov
push
fwait
notl
mov
clc
incb
aas
cwtl
ljmp
sbb
stos
or
and
adc
push
repz
cmp
jmp
inc
jp
jnp
je
stos
nop
mov
push
and
push
jae
dec
mov
loop
int3
mov
pop
daa
xchg
jo
jle
std
add
adc
mov
pop
shl
jg
jmp
sub
fchs
sub
xchg
adc
mov
jno
push
or
push
loope
adc
adc
jno
adc
ja
xor
mov
loop
cmp
js
movsl
jbe
push
iret
in
in
adc
mov
addb
inc
xchg
je
rol
or
iret
pop
mov
or
sbb
mov
sub
mov
leave
pop
inc
lahf
in
pop
es
hlt
or
and
cmp
pop
mov
aas
aam
dec
mov
mov
loope
jmp
out
movsl
and
inc
jg
fisttpl
cmp
sbb
subl
rorb
push
enter
adc
data16
xchg
test
adc
xchg
cltd
push
out
sbb
mov
fdivrl
ds
sti
std
bound
cmp
and
sub
jno
and
push
xchg
or
lahf
aaa
sbbb
jbe
jg
cwtl
popa
dec
fcos
cmp
mov
das
cmpsl
ficompl
inc
fisubrs
push
ljmp
loope,pt
jmp
stos
sbb
pop
adc
or
push
lods
int
aaa
lcall
pop
mov
cmp
lahf
add
test
aaa
pusha
inc
loop
and
stc
add
pop
inc
dec
sub
push
mov
sbb
pop
rorb
hlt
sbb
xor
inc
push
iret
fadds
jne
pop
out
cmp
mov
push
xlat
hlt
dec
push
mov
xchg
jbe
popl
sbb
and
mov
jle
or
imulb
add
jl
mov
push
outsb
sarb
fiaddl
ljmp
jle
js
mov
inc
xchg
repnz
or
xchg
clc
fwait
pop
jp
js
insl
loopne
lret
cmpsb
mov
ja
add
sub
daa
or
and
mov
or
in
cmp
jl
orl
js
cmpsb
bound
enter
je
mov
imul
mov
sub
dec
stos
rcrb
test
or
loop
call
mov
lock
int
insl
jnp
lock
lret
sub
arpl
aas
push
cmp
cmp
bound
add
or
sahf
fcomp
dec
mov
add
shlb
cs
xor
dec
adc
push
movsb
add
dec
jecxz
xchg
scas
lods
es
imul
or
rorb
loopne
in
mov
ljmp
scas
lods
repnz
in
inc
lods
pop
xor
insl
sbb
stc
movsb
aad
imul
pop
scas
push
shlb
dec
lahf
adc
jecxz
cmp
fs
aad
repnz
adc
xor
mov
sbb
pop
ljmp
inc
sbb
and
push
pop
cli
jecxz
inc
mov
push
out
mov
rcrl
call
cmp
sub
in
push
dec
sbbl
or
arpl
fwait
in
das
mov
jg
xchg
and
in
or
int
dec
inc
adcb
mov
sub
or
push
or
mov
jae
dec
sbb
pop
push
sub
gs
dec
xchg
lcall
lret
fstps
test
cmc
mov
mov
jge
sbb
and
jnp
bswap
lahf
jmp
shll
mov
pop
mov
js
add
cmp
lret
mov
pop
and
call
aas
or
xor
imul
or
int
mov
adc
iret
sub
sti
andl
into
push
movsb
test
in
les
sbb
jg
mov
mov
ret
insl
in
and
mov
mov
test
insl
push
or
push
fmull
adc
xchg
jl
push
out
or
adc
fiadds
inc
jge
addr16
imul
insb
das
div
mov
jp
push
push
fidivs
xchg
into
jecxz
pop
push
mov
in
data16
call
mov
jbe
ljmp
mov
add
push
into
shlb
xchg
sbb
dec
outsl
pop
insl
dec
movsb
jle
gs
hlt
das
cmpsb
fadds
pop
mov
and
lods
jb
inc
std
enter
das
mov
scas
xchg
rcll
mov
dec
rclb
out
add
cmpsl
insl
std
negb
fistpl
das
mov
push
xchg
mov
xchg
mov
shll
pop
outsb
icebp
sbb
popf
leave
rcl
cli
xchg
lods
adc
icebp
in
divb
mov
add
pop
cli
outsb
push
jg
jmp
mov
and
and
scas
dec
or
scas
fisttps
stc
das
je
test
shll
call
jno
mov
test
mov
mov
fsubs
enter
outsl
in
in
cli
sbb
pop
add
dec
mov
out
test
sbb
sub
push
aam
sbb
iret
mov
xor
jnp
push
or
adc
jmp
addr16
adc
aam
and
ret
push
push
xchg
mov
cld
mov
repz
dec
add
adc
idivb
mov
in
mov
sbb
in
jl
sbb
fcoml
inc
xchg
sub
mov
xchg
mov
mov
fsubl
sub
push
cmc
dec
pop
lret
cmpsb
jecxz
mov
filds
dec
sub
int3
push
adc
mov
ljmp
dec
sub
out
ret
mov
sbb
mov
rcr
or
xor
pushf
shll
xchg
push
or
les
ja
mov
cmp
inc
aaa
sahf
cmpsb
or
imull
out
into
mov
addr16
addr16
xor
pop
cmp
insl
insb
sub
push
jne
cld
out
sbb
das
test
cmpsl
js
jno
lock
mov
adc
mov
jnp
cmp
out
popa
insb
jbe
mov
insb
mov
popf
ljmp
int
jp
scas
jae
push
sub
jno
in
into
subb
sarl
fldenv
pop
xchg
sub
jmp
pop
cmpsl
push
out
cwtl
adc
test
out
jns
push
mov
cmp
mov
je
sub
jle
mov
out
mov
cltd
in
inc
and
mov
inc
lahf
das
sbb
push
rcl
mov
inc
xor
add
inc
jp
pop
pop
fsub
pop
in
out
out
push
insl
sub
pusha
xor
mov
out
push
push
out
mov
sbb
mov
push
sub
xor
or
mov
and
cmp
cmpsl
gs
lea
out
mov
xchg
pushl
fwait
sbb
in
lret
push
dec
mov
mov
push
bound
pop
test
into
aaa
fsubs
mov
pop
lock
inc
hlt
xchg
lret
xor
cli
fdiv
cmp
rclb
subl
sbb
jg
std
lret
outsl
pop
ficoms
in
mov
pop
jns
lcall
loop
lea
dec
movsb
loopne
adc
rolb
push
aas
add
add
pop
push
ret
ret
adc
adc
inc
arpl
ss
dec
add
jp
adc
ja
add
cld
xchg
inc
data16
pop
mull
and
imul
or
out
ss
dec
xchg
add
fnstcw
xor
dec
dec
repz
xlat
mov
cmpsl
add
jnp
push
jo
decb
popa
mov
fldenv
add
mov
shll
lret
scas
jne
mov
fwait
mov
push
dec
adc
adc
fstps
lock
enter
lock
lods
test
repnz
aas
pop
dec
std
pop
jle
repnz
aad
andb
addr16
lcall
incb
adc
mov
pop
pop
shll
test
sahf
inc
inc
mov
std
jl
lret
lods
push
mov
sub
push
xor
scas
jl
ss
mov
cld
add
jne
roll
inc
sbb
jnp
ja
mov
fiadds
imul
sbb
idivb
fmull
cli
mov
mov
and
dec
xor
mov
sbb
mov
mov
mov
sub
or
sub
push
pushf
frstor
xor
test
mov
fs
sbb
in
xchg
lret
mov
das
leave
shrl
jb
aas
int
icebp
cltd
xor
shrl
and
mov
mov
adc
mov
nop
les
fisttpll
and
in
push
int
out
and
mov
mov
sbb
inc
ret
ss
cmp
push
or
sbb
ja
adc
mov
push
cmpsb
out
cmp
sbb
in
dec
jp
xor
jecxz
mov
xchg
push
or
dec
ja
pmuludq
fwait
dec
in
iret
rcl
ficompl
mov
xchg
add
cmpsl
mov
cmp
popf
scas
fwait
dec
mov
jmp
cld
sub
jne
inc
lea
or
mov
fisubs
xchg
mov
pop
push
hlt
add
repnz
inc
or
cld
jo
sbb
outsl
das
xor
and
adc
jle
out
or
mov
repnz
inc
sub
cmc
insb
or
dec
cmp
pop
jecxz
push
pop
hlt
arpl
movsb
sarl
inc
xor
jnp
repz
dec
mov
out
inc
pop
inc
ret
pop
arpl
pop
into
jne
out
jmp
fwait
adc
das
pop
or
sbb
aaa
scas
lret
lahf
or
sub
and
xor
xchg
iret
les
push
xchg
lret
repnz
cmp
stc
cmp
lahf
test
xor
std
ret
seto
jb
add
fwait
scas
inc
test
adc
nop
and
out
cli
je
dec
xor
pushf
out
jb
pop
pop
clc
std
movb
add
mov
xlat
mov
xor
pop
dec
and
loopne
scas
sbb
imull
pop
mov
movsb
dec
popa
jb
inc
icebp
xor
inc
loope
test
aaa
loopne
addr16
jp
push
inc
aas
push
push
add
cmp
sbb
js
in
je
lahf
cmc
insb
jno
js
movsb
dec
jne
ljmp
add
sub
shl
out
xchg
jmp
popa
not
std
out
int
pop
sbb
out
out
dec
out
movsl
in
push
addr16
pop
call
pop
add
rorb
data16
xchg
pop
lods
in
lea
mov
adc
aam
jmp
and
je
mov
pop
mov
sahf
sub
out
jg
mov
clc
out
cld
mov
sbb
out
pop
sahf
sahf
mov
popl
fmull
xchg
fwait
jns
leave
cmc
fwait
xchg
sub
dec
jge
dec
shlb
mov
and
pop
test
or
xor
jg
inc
cmp
inc
xor
cmp
pop
add
adc
adc
jno
xchg
data16
es
test
inc
adc
lock
shl
cmp
mov
push
incl
lea
add
out
mov
and
mov
xor
mov
fs
mov
inc
psubsb
adc
cmp
dec
in
and
ja
fstl
sub
sbb
inc
jmp
fcoms
sub
and
lahf
stos
aaa
cmp
movsl
adc
popf
add
mov
xchg
into
in
loop
cwtl
loope
jnp
testb
lcall
or
test
ret
cltd
aad
arpl
ds
pop
pop
sub
insb
daa
sub
out
jae
cmc
push
lock
rorl
sub
cltd
push
adc
rcll
xchg
xchg
sbb
out
push
in
cmpsl
or
ss
fstl
ja
aam
stos
call
inc
pop
lock
inc
dec
dec
inc
fwait
mov
stos
sub
jns
test
and
sarl
add
sbb
int
xchg
roll
push
mov
mov
mov
xor
out
mov
mov
cli
mov
adcb
lods
ja
fisubl
idivb
fldcw
push
out
push
dec
mov
push
sahf
dec
jmp
cmp
push
ja
add
and
pop
push
push
cmp
inc
stc
movl
sbb
pop
dec
jle
xor
nop
mov
inc
insl
and
push
lods
inc
pusha
insl
mov
dec
sbb
aam
xor
pop
mov
adc
push
subl
bound
adc
sbb
mov
dec
jle
cli
fsubrl
sti
gs
cs
jne
jecxz
cmp
adc
mov
jg
mov
mov
jne
outsl
sbb
dec
ret
outsb
lods
mov
daa
xor
sub
inc
xchg
hlt
xchg
int3
outsl
cmp
lds
iret
enter
lods
fcomp
outsb
mov
pop
test
pop
sar
fimull
mov
ljmp
cs
or
push
int
xchg
or
loop
push
add
loope
stos
push
pop
outsb
js
jns
inc
and
sub
sub
stos
or
add
add
adc
xchg
pop
lock
adc
pop
mov
aas
idivb
stc
mov
into
stc
das
jl
loopne
xchg
addr16
mov
mov
mov
lahf
jns
jg
lods
mov
idivl
outsb
push
rcll
xor
and
int3
mov
test
cmp
sub
cmp
incl
push
fnstcw
cmp
mov
in
popf
lock
dec
ret
jg
ret
mov
rcrl
stos
lret
setb
insb
push
fwait
out
or
inc
mov
push
push
xchg
ljmp
pop
gs
xchg
pop
and
fnstcw
cmpsl
add
std
movsl
sbb
push
aad
mov
lea
cmp
lret
mov
repz
mov
lods
dec
test
mov
jns
scas
mov
mov
jnp
sbb
stc
mov
adcb
mov
pop
addr16
push
inc
ret
add
idivb
dec
pop
aas
mov
push
and
fsubrl
int
loope
jl
loope,pt
scas
jmp
bound
iret
cltd
sbb
cmp
int3
out
repnz
pop
mov
xchg
push
mov
dec
cs
andl
adc
jmp
dec
in
insb
and
or
loop
xor
divl
je
stos
cmc
push
or
dec
enter
xor
insb
mov
cmp
push
xchg
xchg
xchg
push
icebp
mov
jae
rcr
mov
mov
xchg
test
mov
mov
fwait
add
inc
or
push
fst
mov
or
stc
xchg
and
xor
cmp
outsl
frstor
sub
cmp
jno
sarb
aad
mov
xor
addr16
push
push
cmp
stc
mov
mov
inc
test
mov
pushf
adc
das
imul
std
dec
and
lcall
pop
cmp
inc
jp
ror
es
sub
pop
stc
mov
loope
sub
cmp
lret
out
xor
xchg
shrl
dec
inc
sti
cld
std
xor
jo
stos
aaa
xchg
xorb
jns
cmp
mov
loope
rcrb
sar
push
pop
clc
sbb
sbb
call
jecxz
cmpsl
push
mov
fwait
and
fmulp
mov
dec
ja
insl
imul
ja
mov
dec
push
sbb
inc
fnstenv
shll
dec
sub
mov
or
rorl
out
sbb
or
das
xchg
loop
xlat
pushf
test
cs
icebp
xor
or
lods
push
push
and
icebp
ret
ret
jge
popf
or
shlb
jle
data16
lahf
imull
jle
cs
lret
xor
icebp
mov
aaa
and
adc
add
arpl
jno
scas
push
push
lret
inc
ja
push
pop
pop
out
mov
cmc
jae
mov
add
ret
dec
jne
sarb
imul
bnd
fistps
ss
fistl
pop
repz
cmpsl
int3
out
adc
adc
xchg
mov
push
mov
adc
push
mov
addr16
pusha
push
sub
add
adc
test
jne
jmp
ret
pop
ss
dec
xor
mov
jge
xor
pusha
mov
or
std
pop
mov
xor
and
les
jmp
mov
inc
mov
inc
push
inc
xor
pop
fildll
sub
inc
je
mov
loope
pushf
xor
xor
shrl
ljmp
inc
xor
add
lahf
int
mov
push
fwait
ljmp
je
dec
cwtl
push
mov
dec
lock
jg
into
popf
jg
in
adc
sar
jl
xor
inc
outsl
xchg
push
add
in
xor
test
les
test
popa
adc
stos
cmp
jnp
dec
out
lock
add
out
aaa
out
bound
sbb
lret
shll
adc
ljmp
rcll
mov
cmpsb
fwait
xchg
adc
xchg
imul
jnp
mov
xor
mov
fisubrl
cmp
sub
dec
addb
shlb
dec
in
in
inc
int3
sbb
enter
orb
lock
repnz
mov
pop
and
mov
dec
bound
cwtl
fstl
mov
mov
adc
dec
loopne
mov
loopne
or
fs
xor
call
sub
or
mov
and
shll
aaa
xchg
jle
jb
adcb
cmp
pop
mov
cmp
rcrl
in
adc
push
fistps
and
cltd
adc
jns
mov
jmp
int3
popa
js
loop
and
pop
cli
call
push
or
jbe
jnp,pn
fisttps
lods
test
shlb
dec
scas
mov
pop
sbb
and
stos
scas
aad
into
dec
setne
ficompl
stc
and
bnd
xchg
mov
dec
outsb
out
pop
mov
jmp
cltd
mov
decb
sbb
outsb
lret
add
cli
mov
fs
push
mov
in
data16
adc
or
loop
lods
mov
mov
mov
and
xor
bound
es
xchg
and
stc
test
adc
mov
das
mov
loope
xchg
dec
or
or
cmp
and
lock
sub
mov
mov
inc
dec
testb
push
mov
xchg
call
sub
pop
jp
movsl
out
cmpsl
test
push
cmp
sti
out
nop
push
jo
mov
pop
xor
lea
stos
call
sub
or
mov
outsl
sub
and
dec
mov
mov
aam
add
sbb
sbb
xor
cmp
inc
aaa
movsl
jb
cs
mov
jl
pop
rclb
test
push
aam
shrl
mov
add
or
cmp
push
dec
fsubrs
test
cltd
bound
outsb
mov
xchg
sbb
mov
ja
movsl
mul
dec
cli
push
xchg
mov
mull
xchg
out
add
adc
ja
dec
adc
loop
enter
popa
or
ljmp
sub
push
pop
fcoms
test
ffreep
jle
jmp
xchg
inc
push
cltd
ds
mov
dec
movsl
jne
sahf
jae
push
jae
lret
nop
call
ret
popa
nop
mov
cltd
dec
jo
in
xchg
cmpsl
lds
ja
sub
mov
test
rcrb
xchg
cmpsb
idivl
in
rolb
adc
mov
adc
cmp
pop
mov
sahf
sub
ss
jp
xchg
jge
push
lcall
out
mov
in
cmp
cmp
sbb
arpl
loopne
es
nop
popf
test
rcl
jno
jo
sub
movl
cmp
insl
sbb
mov
je
pop
mov
xchg
movsb
sub
int3
idivl
push
jge
jmp
es
mov
cmp
call
jge
inc
sbb
xchg
sub
ss
or
mov
outsb
cmc
je
inc
daa
or
cmp
mov
cmp
cmp
sbb
aam
bound
repnz
mov
mov
js
cmp
cmpsb
aam
repz
into
fdivrs
int
mov
lret
jbe
mov
test
push
xor
jecxz
or
xor
pop
ja
or
hlt
adc
shl
stos
inc
gs
add
mov
jae
cmpsl
ficomps
push
sahf
aam
or
sbb
mov
out
mov
mov
jp
lret
leave
fucomip
mov
xchg
lods
and
sbb
jecxz
test
mov
xchg
aam
divl
popf
out
or
jmp
and
dec
negl
sbb
cmovl
je
lret
int3
imul
int
into
mov
scas
pop
ret
cmp
xchg
mov
sarl
aaa
mov
repnz
jmp
jnp
xchg
std
mov
push
in
jge
test
lock
out
stos
test
mov
pop
mov
push
mov
fsubrp
popf
insb
add
adc
jle
jae
push
imul
and
test
push
mov
enter
bound
push
lret
cmp
or
push
jae
and
or
stos
rorb
sbb
xchg
xchg
mov
and
push
and
or
mov
mov
adc
aad
sahf
out
push
pop
scas
push
cli
ljmp
jmp
mov
mov
inc
fwait
push
mov
sub
inc
jle
xor
cmp
leave
xchg
mov
lock
imulb
fbstp
in
call
fidivrs
loope
cmp
filds
mov
fs
cmc
mov
push
mov
fldcw
xchg
in
in
in
dec
jnp
leave
or
and
dec
push
ja,pt
dec
xor
hlt
lods
fidivs
fadd
sub
imul
fwait
sub
fildll
daa
push
cmp
ja
push
and
jge
notl
jp
mov
mov
insb
dec
sti
fdivr
sbb
adc
jl
push
cli
or
pop
js
push
sti
sbb
xor
mov
mov
lock
sub
cmp
push
imul
sbb
push
jns
fistpl
loope
mov
inc
loop
repz
pop
mov
imul
icebp
in
and
xchg
push
aam
dec
inc
and
sarl
cli
pop
jo
std
fidivrl
int3
jb
push
lret
mov
jmp
mov
mov
in
push
xchg
inc
push
addb
sti
mov
and
jbe
fwait
mov
sbb
adc
pop
mov
arpl
int3
xchg
jns
ficomps
dec
fsin
cmp
test
jno
sti
sub
fwait
push
aad
sarl
mov
mov
negb
inc
loopne
push
push
push
mov
sahf
sbb
and
inc
or
adcl
enter
mov
sarl
mov
lahf
xchg
test
pop
cmp
pushf
decb
call
lahf
shll
pop
fwait
cltd
iret
pushf
lret
cmp
stos
lds
pop
out
fistl
jl
cltd
mov
dec
pop
push
dec
pop
aas
jle
lds
bound
or
or
test
push
arpl
xchg
dec
pop
pop
lods
push
push
adc
std
sbb
jge
cmp
jmp
xor
xchg
sbb
js
int
mov
and
divl
aaa
fs
arpl
test
or
push
pusha
sbb
icebp
adc
stos
movsb
in
dec
lret
rolb
inc
ja
push
jge
repnz
dec
cmp
dec
and
aas
xor
insl
cs
or
mov
rcrb
jmp
xor
das
test
in
cs
jne
mov
xchg
add
xor
lcall
and
pop
leave
ljmp
push
data16
lock
mov
lahf
sbbb
test
dec
popf
icebp
cmp
fbstp
cli
iret
inc
jge
icebp
add
repz
xchg
in
dec
repnz
adc
scas
push
loope
xlat
clc
shll
pop
inc
jae
lret
lcall
jns
fcmovu
outsb
sub
fcomi
inc
mov
xor
fmuls
mov
loopne
cld
incl
cmp
sti
ret
jno
popl
push
int3
fs
test
sub
cmp
lcall
xchg
lds
inc
push
in
sub
sbb
in
sbb
adc
aam
je
jp
or
arpl
cmc
add
lods
aam
push
nop
mov
fdivs
push
lea
or
jecxz
push
dec
std
mov
ret
mov
add
and
pop
fwait
xchg
or
inc
adc
in
mov
int
mov
dec
mov
and
test
sbb
dec
xchg
jle
sub
jnp
mov
int
mov
pop
xor
adcb
push
jp
xor
sub
xorl
and
xor
jmp
mov
add
aaa
inc
arpl
jno
loopne
push
cltd
aam
jle
movsb
pop
push
clc
cwtl
add
cmp
mov
adc
cmc
int3
gs
pop
lahf
fcmovnu
xchg
fmuls
xlat
lock
jae
bound
add
repz
cmp
ljmp
sar
fstps
add
cmp
inc
jg
stos
fnstenv
jecxz
les
mov
or
mov
insl
sub
jnp
jb
sub
les
adc
jno
inc
das
in
leave
cmp
add
sbb
inc
push
sahf
repz
mov
loopne
mov
push
pusha
xor
js
loope
in
jge,pn
clc
rcr
sbb
loope
xor
dec
inc
cmp
notl
aaa
fistpl
xchg
pushf
sbb
lock
nop
dec
sub
xchg
nop
dec
stos
push
ljmp
filds
pop
sbb
movsl
ja
call
arpl
and
jecxz
hlt
idivb
nop
push
ljmp
popf
mov
pop
out
nop
out
mov
mov
into
rorl
mov
cwtl
dec
pushf
mov
fdivl
loopne
mov
pop
adc
dec
and
push
prefetch
or
add
mov
sbb
test
mov
xchg
pop
sub
out
sub
icebp
pop
pop
aas
test
sub
push
mov
es
sbb
xchg
adc
fistps
test
popa
neg
mov
mov
sub
dec
std
and
repnz
pop
push
in
push
xor
push
jae
push
addb
sbb
mov
ss
xor
sub
shrl
mov
push
iret
inc
dec
push
out
clc
cld
sbb
mov
mov
cmpsl
push
pop
sub
adc
pop
rsm
in
pop
imul
inc
jle
stc
loope
aad
out
imul
mov
mov
xor
sub
xor
lret
mov
push
daa
add
pop
add
xor
mov
lods
or
stos
push
rclb
clc
call
gs
into
test
shll
cltd
sti
je
repnz
lock
in
lock
out
pop
popl
in
popl
aad
xchg
adc
mov
pushf
adc
mov
cmp
mov
out
lret
into
fsubl
xchg
rcrl
xor
or
cmp
add
and
xchg
xchg
adc
cmp
cmp
dec
inc
inc
pop
or
push
or
mov
xchg
aaa
repz
fmuls
enter
adc
mov
ss
scas
or
mov
f2xm1
jp
cwtl
stc
adc
mov
add
and
dec
sahf
shl
mov
inc
dec
and
scas
pop
push
xor
push
mov
xor
xchg
sbb
lret
in
pop
cli
sbb
inc
loopne
jnp
addr16
mov
jle
mov
outsb
adc
ljmp
push
fstps
inc
cmp
or
push
mov
clc
jbe
xlat
fmuls
arpl
inc
aaa
and
mov
push
dec
dec
xchg
add
push
jecxz
scas
rcll
jb
insl
mov
shrl
pushf
jns
cli
scas
mov
mov
mov
popf
bound
das
mov
pushf
dec
aaa
sbb
or
out
add
leave
mov
dec
inc
fdivl
push
sahf
mov
xor
pop
adc
shlb
imul
pop
lcall
pusha
stos
sub
js
sbb
push
outsl
int3
lea
pop
sbb
out
jmp
testl
xchg
jnp
cmp
mov
or
mov
test
cltd
daa
jp
addb
pop
jo
test
pop
xor
cmpsl
mov
xchg
mov
dec
or
movsl
sbb
cld
mov
orl
sbb
cmp
cmp
xor
aam
dec
mov
xor
inc
jno
push
xlat
cmp
inc
inc
lahf
and
cmp
addr16
pop
mov
jecxz
push
mov
enter
hlt
jmp
repz
les
push
les
jge
add
into
loop
or
shl
push
push
iret
add
mov
push
fmul
jnp
jecxz
xor
xor
xor
adc
add
push
pop
cmpsl
pop
icebp
cmpl
sbb
pop
adc
inc
xchg
ret
ja
add
popa
repz
jg
mov
and
stc
push
repz
nop
push
xchg
sbb
sbb
pop
fmulp
inc
lock
mov
fcomp
and
mov
dec
movsbl
loopne
pop
cmp
lcall
jbe
stos
dec
jg
cmp
pop
imul
mov
mov
dec
lcall
data16
xchg
jle
cmp
fidivl
mov
jmp
jae
pushf
cmpsb
xor
xchg
push
shrl
push
mov
push
push
movsl
lds
dec
out
dec
mov
imul
mov
xor
mov
xchg
pop
mov
and
mov
cmp
mov
cmc
loopne
enter
dec
mov
push
lods
xchg
jo
push
mov
test
mov
dec
xchg
scas
ret
test
out
pop
hlt
insl
mov
movsl
mov
jo
imul
cs
ds
es
lods
shrb
enter
mov
push
ror
in
fstps
mov
lret
into
movsb
adc
daa
mov
aaa
repnz
xchg
sub
xchg
jnp
mov
and
fucomp
push
rcll
dec
dec
shlb
cmp
out
imul
pushf
cmpsb
mov
or
scas
jp
inc
icebp
repz
inc
xor
add
lods
sbb
or
cmp
rcrl
or
loope
movsl
stos
inc
aaa
jnp
flds
js
mov
popa
test
adc
ficomps
dec
addr16
hlt
and
mov
push
jle
ds
stc
pushf
push
and
icebp
sahf
icebp
dec
out
pop
cmpsb
or
push
mov
sub
sarb
push
call
lcall
subl
hlt
mov
push
push
mov
mov
inc
repz
xchg
and
mov
nop
sbb
loop
jno
ss
je
pop
roll
pop
xchg
cmp
mov
xchg
add
jle
and
ret
pop
xchg
adc
add
addr16
scas
xchg
xchg
fucomip
aas
cmc
fnstcw
loop
jecxz
pop
inc
and
test
cmp
jae
mov
in
xchg
push
xor
aaa
push
cmp
mov
movsl
subb
sub
rcrl
cltd
std
dec
push
cld
test
movsb
xlat
lahf
movsb
cwtl
iret
in
and
or
mov
mov
movsl
inc
push
push
pop
call
push
mov
inc
ljmp
js
push
mov
cltd
sub
jbe
stos
dec
dec
outsb
mov
push
ret
push
aas
jae
inc
xor
out
xor
pop
pop
push
fimuls
mov
aad
popa
loope
mov
rorl
gs
and
daa
test
xlat
scas
mov
ds
add
dec
push
and
and
lret
ja
lock
push
mov
push
popf
pop
ds
cmp
xchg
add
in
mov
push
cmp
cwtl
cmp
into
in
mov
cmpl
or
mov
lahf
sahf
insl
fwait
cmp
cmp
insl
xchg
nop
and
push
dec
addr16
stos
aaa
push
fidivs
cmp
aas
imul
xchg
push
test
pop
cli
and
push
dec
or
xor
mov
shr
fcoml
mov
daa
and
aas
mov
lahf
scas
ret
rcrb
test
pop
aam
cmpsb
xchg
lahf
in
pop
stos
or
adc
mov
jl
jl
pop
pop
imul
sbb
jne
pop
fstp
sbb
inc
pop
nop
jge
jo
rcrb
iret
jg
stc
xchg
mov
pushf
clc
cmp
imul
xchg
addl
adc
adc
fadd
pop
dec
xchg
mov
out
sbb
and
adc
and
ss
cld
mov
aam
aam
or
lcall
or
cmc
pusha
mov
add
aam
test
or
movsb
iret
addr16
pushw
push
in
push
lock
int
aad
je
lret
lahf
mov
pop
cwtl
add
xchg
cmp
shrl
insl
aad
stc
lea
mov
cmp
pop
push
shrl
les
mov
lret
push
sub
mov
ds
sub
inc
push
jns
shll
ficomps
xlat
mov
mov
mov
cmp
push
clc
jmp
inc
int
scas
sub
mov
shl
stc
insl
xor
mov
inc
push
and
mov
test
mov
xlat
bound
add
push
dec
call
fmulp
inc
pusha
jae
mov
rorl
adc
and
sub
and
inc
dec
pop
xchg
fsqrt
lcall
adc
or
mov
jl
push
or
xchg
mov
aam
out
dec
out
shll
jae
mov
push
aad
xor
sub
test
cmp
shll
aam
xchg
pushf
aad
mov
xchg
repz
jbe
mov
jae
sub
rorb
mov
mov
fwait
arpl
xor
cld
xor
mov
popa
and
jb
ret
call
fstpt
xor
sub
hlt
push
cmp
int3
mov
adc
lods
cmp
loopne
inc
or
and
or
insl
arpl
jne
sub
sub
dec
lahf
cli
jmp
lea
and
or
mov
lcall
fimuls
adc
inc
shrl
push
push
pop
das
push
xchg
push
or
xrelease
hlt
sub
lea
mov
jecxz
sbb
in
and
idivb
push
fnsave
dec
add
nop
cwtl
clc
cltd
mov
aas
pop
inc
sub
sbb
pushl
jle
sbb
subb
in
iret
push
dec
jl
fsubrl
add
xchg
mov
nop
js
or
pop
repz
sub
pop
pushf
mov
jp
or
es
lret
int3
pop
and
pop
mov
sbb
dec
pop
mov
inc
sarl
mov
in
sbb
dec
fsubs
cmp
cltd
cmc
mov
pushf
mov
clc
ds
dec
push
shlb
xchg
out
testl
pop
out
push
scas
inc
pop
xor
notb
xor
int3
xor
pop
jb
sbb
add
pop
push
aas
imul
sub
mov
xor
not
cmp
cmp
and
lcall
adc
jmp
push
or
jne
popa
inc
stos
jnp
xrelease
inc
adc
scas
cs
jge
jb
cwtl
insb
sub
rorl
lahf
dec
dec
and
xchg
in
cld
jns
shrb
mov
xchg
sarb
xchg
xchg
lret
mov
popa
dec
fimull
push
add
sbb
sub
out
xlat
inc
push
mov
mov
and
outsb
je
repz
mov
scas
pop
pop
pop
xchg
icebp
dec
ljmp
mov
jg
xchg
sahf
addr16
add
cltd
lahf
les
cld
andl
je
mov
shr
or
push
xchg
imul
push
pop
or
movsl
sub
xchg
xchg
bound
rorb
jne
push
movsb
push
xor
mov
rcl
add
js
repz
push
push
popa
mov
pop
fimuls
ja
and
les
leave
cmp
and
lret
repnz
mov
jmp
arpl
lcall
fildl
stc
jb
inc
testb
dec
movsl
mov
popf
lahf
cmp
pop
lods
shr
popa
and
lcall
xor
outsb
jp
lock
fsubrl
mov
push
pop
xchg
or
lcall
inc
lock
test
js
adc
jns
xor
test
fwait
popa
lret
mov
cmp
inc
push
mov
xchg
nop
out
adc
mov
cmpsl
out
pop
pop
rcr
out
insb
gs
in
mov
or
in
and
adc
js
sti
ds
faddl
xchg
aaa
jecxz
pop
push
pop
xchg
xor
mov
sbb
cmp
sbb
aas
jle
fdivrl
clc
test
and
xchg
lret
es
jl
in
fistps
sbb
add
cmp
cmp
rolb
ds
data16
aaa
stc
inc
mov
xlat
jmp
jge
mov
sbb
sbb
stos
enter
mov
lods
cmpsb
mov
dec
repz
xchg
xor
mov
pinsrw
cmp
or
shrb
pop
out
shlb
mov
add
and
fisubrl
push
push
lods
sub
inc
xor
fcmove
jmp
or
dec
xor
lret
or
fidivrl
xchg
rol
das
pop
imulb
inc
xor
add
repnz
sahf
mov
insb
add
out
adc
jbe
lret
cmp
into
insb
pop
jne
mov
addl
add
jae
sti
dec
ret
push
dec
fsubr
cmpb
rclb
shl
ds
cmp
call
std
sbb
mov
cmc
or
push
adc
movsb
sub
push
xor
mov
stc
fdivrp
dec
adc
insl
test
mov
enter
mov
sti
pop
push
repnz
mov
and
stos
fwait
add
ret
cmc
pushf
push
jmp
icebp
movsb
pop
std
push
fnstenv
call
jnp
pushf
in
andb
aam
push
push
mov
inc
test
rcrb
ret
shlb
dec
add
mov
fildl
icebp
testl
orl
sarl
dec
sub
imul
mov
test
xchg
cld
cs
iret
sbb
xchg
adc
jbe
adc
push
cld
popf
dec
sbb
mov
mov
cmp
test
or
addr16
loopne
dec
push
rclb
sub
push
xchg
out
jle
addb
mov
push
sub
shrb
mov
mov
mov
mov
lock
jle
movl
jge
dec
pop
jo
sub
fcmovu
sbb
int3
ret
pusha
xor
push
add
mov
and
lret
jle
sbb
xor
mov
xor
test
jle
push
xchg
imul
dec
push
sub
sahf
xlat
rcr
jge
in
mov
mov
push
add
push
lahf
push
filds
aad
mov
sub
dec
iret
fidivs
mov
mulb
inc
cmpsl
arpl
sub
je
stc
fwait
push
shll
mov
repz
movsb
mov
repz
imul
aad
xchg
daa
pop
sub
lret
xchg
inc
popa
cmp
cmc
add
je
subb
pop
ljmp
pop
ret
lock
pop
mov
clc
mov
push
push
imul
pop
cmpsl
cmpsl
rol
lcall
bound
mov
inc
das
push
mov
ja
inc
outsl
mov
push
lret
test
std
inc
pop
fdecstp
push
jecxz
push
test
add
inc
add
pop
pop
push
xor
call
sahf
mov
or
lea
cmpsb
dec
push
pop
cmc
xchg
les
hlt
out
call
cmpsl
insb
or
in
imul
inc
push
mov
adc
jl
out
mov
xchg
pop
mov
add
xchg
push
jbe
loop
rcrb
push
push
xchg
insl
dec
repz
jg
add
dec
pop
ret
scas
mov
xchg
xor
or
push
pop
outsl
fisubs
dec
stos
rorb
and
bound
cmp
push
cmp
incb
jo
aas
sub
repz
stos
out
shll
mov
idivb
imul
shl
jo
std
loop
lcall
xchg
jno
pop
lahf
xor
or
jne
dec
sbb
addl
ss
call
push
xchg
je
push
loope
stos
mov
sahf
fdivp
mov
mov
xor
and
xchg
adc
out
sub
or
xor
xchg
loop
mov
outsb
shll
push
cmp
dec
jle
xchg
sahf
cmp
ficoml
cli
in
clc
sub
rclb
iret
sbb
mov
or
mov
sahf
pop
addb
pop
cmc
sahf
mov
sbb
mov
xchg
mov
or
mov
xchg
adc
loop
jb
shrl
cmpsl
cmpb
dec
mov
dec
jae
inc
and
push
dec
jmp
nop
divl
mov
hlt
mov
sbb
add
sub
insl
cld
adcb
jno
pop
arpl
aad
jno
sub
or
adc
fnstcw
rorb
jo
jmp
cmc
ficoml
in
adc
sub
xchg
out
das
cmp
add
out
loop
fistpll
sbb
push
push
icebp
dec
imul
faddl
ja
jbe
stos
sub
and
cld
cmp
bswap
mov
idivb
aaa
fildll
popf
lods
mov
pop
mov
call
jmp
lcall
sbb
test
adc
push
xchg
add
mov
jmp
cmp
dec
mov
push
mov
mul
push
mov
inc
into
popa
mov
cltd
mov
lcall
out
test
xchg
adc
cs
cmp
loopne
pop
mov
rcrl
push
mov
int
jbe
inc
je
pop
imul
adc
push
scas
push
xchg
sub
pop
xchg
jp
mov
xchg
add
gs
and
push
cs
iret
push
dec
stc
mov
lea
jno
ja
into
and
bnd
mov
sbb
fwait
out
inc
mov
mov
scas
pop
repnz
pusha
mov
rol
xlat
add
jl
outsl
gs
sbb
jl
cwtl
jo
clc
in
adcl
xor
mov
rcll
into
lcall
stos
sbb
add
pop
mov
xchg
mov
mov
lret
cmp
push
mov
jo
cmp
or
mov
xchg
or
lods
mov
xor
sbb
jns
pop
mov
test
pop
arpl
mov
jp
fwait
repnz
sub
inc
push
insl
or
dec
cmp
mov
xchg
andb
mov
cmp
ss
inc
or
sub
cmp
adc
and
and
in
mov
je
lret
jo
jmp
cmp
das
dec
roll
inc
push
out
sbb
adc
inc
loopne
sahf
pop
repz
fs
push
je
fsubrs
add
mov
and
cs
enter
inc
xchg
dec
xchg
shlb
adc
inc
mov
das
cmp
in
dec
in
movsb
cmp
lods
lahf
mov
push
leave
cmp
push
xor
mov
and
ret
shrl
adc
push
loop
out
fsubs
jecxz
sbbb
xchg
cmp
adc
or
fdivr
jg
cmpsl
push
jge
and
jae
inc
and
cs
ljmp
pop
xor
in
jle
clc
sub
jecxz
incb
rorb
nop
pop
cmp
cmp
stos
lock
nop
int
inc
bound
push
pushf
in
lcall
sbb
jne
lods
jge
incl
dec
ss
es
mov
dec
mov
cltd
push
enter
dec
add
mov
mov
sbb
push
dec
cmp
push
rcrb
cmp
cmpsb
iret
das
mov
adc
cli
arpl
cmp
inc
jne
ja
cmc
inc
sbb
mov
mov
and
fiaddl
and
push
jl
gs
pop
cli
add
pop
and
mov
cmpsb
dec
mov
in
add
fwait
add
dec
popa
test
loop
mov
adc
lea
es
and
xor
rolb
mov
sahf
adcb
scas
mov
leave
sbb
addl
dec
clc
loope
jbe
les
xchg
enter
sub
out
adc
sbb
mov
xor
insb
mov
insl
mov
out
push
fadds
pushf
aas
fldcw
adc
cmp
jmp
jb
lock
imulb
mulb
daa
adc
int3
lock
mov
push
sbb
aad
into
sub
mov
pop
and
pushf
inc
hlt
mov
cld
inc
js
jnp
clc
andb
in
arpl
pop
call
stos
and
xchg
scas
and
sbb
pop
outsl
arpl
mov
lea
jmp
jecxz
lret
mov
mov
pop
sbb
push
mov
mov
dec
scas
and
das
js
jp
dec
mov
fiaddl
rorb
subb
pop
adc
cmp
aaa
test
and
in
fs
add
cmp
xchg
jp
mov
mov
adc
dec
pop
pop
xor
or
mov
sbb
mov
cld
mov
xchg
ja
add
inc
sub
jmp
fldt
test
sub
inc
mov
enter
sub
iret
das
sub
cmp
cmp
fldl
dec
push
xchg
mov
mov
and
popa
je
aas
mov
xor
push
aam
xchg
lahf
mov
jno
movsb
std
cwtl
cmp
inc
and
sbbl
imul
int
into
dec
psllw
ficoml
mov
popa
subb
dec
cmp
and
imul
fwait
jbe
jnp
pusha
movsb
imul
mov
cmpsl
or
das
ja
and
loop
jo
pop
cmpsb
les
out
jg
gs
rcrl
out
sqrtps
adc
push
push
cmc
add
ss
jnp
loopne
xchg
or
adc
daa
mov
fcomps
bound
in
dec
add
cwtl
jnp
lds
in
andl
hlt
jnp
rcr
ret
adc
jae
sub
cmp
dec
jb
sbb
xor
ja
sub
out
xor
aam
lods
repnz
into
mov
xchg
mov
mov
pop
sbb
adcb
push
dec
push
xor
rorl
std
cs
cltd
shll
and
inc
pop
iret
inc
push
jge
jb
or
test
ss
out
insl
imul
in
bound
pop
scas
lahf
or
sarl
scas
loop
mov
les
inc
aam
and
push
pop
sti
js
aaa
add
inc
sub
dec
in
mov
pop
adc
cmpsl
shl
loop
cli
mov
dec
pop
and
ret
or
sub
pop
out
rclb
mov
cmp
js
fildll
xchg
adc
lock
je
lock
xlat
iret
xor
decl
push
mov
les
mov
es
data16
xchg
pop
lret
call
mov
adc
sub
and
mov
xor
pop
pop
add
cmp
bound
inc
ret
sub
pop
push
xor
xor
xor
lds
add
pop
push
icebp
push
ljmp
inc
jns
or
std
sahf
add
xor
mov
orl
inc
je
enter
xchg
dec
lock
aad
inc
loopne
mov
pop
fldt
movsb
enter
push
xor
cmp
iret
add
mov
jb
cs
mov
dec
dec
adc
xor
cmp
sub
cld
lahf
ret
scas
xchg
mov
mull
xor
xrelease
cmp
out
and
rcll
pop
mov
adc
ret
xchg
lods
xor
push
es
sub
orl
les
inc
or
inc
sub
and
fadds
inc
pop
decl
xlat
fdivrs
fs
andl
dec
movsl
nop
test
cld
call
sub
fcompl
fcmovb
sti
ret
jmp
and
mov
adc
push
into
adc
test
push
fsub
int3
addl
sub
pop
jmp
clc
dec
sub
stos
dec
inc
out
lahf
mov
push
add
repnz
fidivrl
jmp
insl
sbb
hlt
or
and
pop
adc
mov
dec
repnz
adc
mov
pop
add
fldcw
in
pop
mov
adc
mov
adc
sbb
int3
iret
push
outsl
cmpsb
hlt
ja
jno
push
aad
sub
push
bound
jbe
sahf
dec
das
data16
sub
dec
dec
inc
lahf
dec
iret
inc
lds
setge
js
stos
push
sub
jmp
cs
sbb
mov
jae
xorl
cmp
jl
mov
push
subl
jp
decb
hlt
mov
xor
addr16
in
sub
in
push
or
sbb
daa
cmp
inc
inc
mov
into
jnp
ja
lds
pop
jne
fs
xchg
xor
loope
dec
dec
pushaw
into
test
inc
flds
adc
dec
sbb
push
ror
inc
fiadds
pop
xchg
scas
daa
xchg
andl
xchg
pop
fadd
test
fs
push
mov
sbb
imull
addr16
cs
les
mov
popf
jo
mov
pop
imul
test
push
xchg
cmp
jmp
sbb
fnstsw
mov
gs
jmp
jge
cmp
mov
dec
cmc
daa
add
mov
insl
out
mov
iret
pop
test
jbe
int
add
add
ss
insb
add
or
pop
outsb
push
dec
sbb
add
scas
fsubs
mov
pop
mov
fistpl
dec
push
fisttpl
sub
add
lods
mov
shll
and
mov
jo
or
int3
in
push
adc
pop
sbb
jae
xor
sub
lahf
fldenv
mov
jle
push
cld
cmpb
push
in
sbb
jnp
mov
add
sbb
rorb
popa
int
mov
loope
mov
call
cli
loopne
shl
dec
mov
andl
push
out
xacquire
rclb
push
and
daa
movsb
adc
inc
imul
xchg
xchg
jo
inc
add
js
add
cli
mov
xchg
lcall
pop
hlt
pusha
sub
daa
jbe
out
and
fnstsw
cmp
mov
jno
insl
ja
dec
test
pusha
stc
sti
ds
addr16
repnz
xchg
or
les
imul
xor
push
mov
in
push
loop
mov
inc
and
sbb
jl
sub
sbb
bound
xor
pop
pop
or
xchg
sub
imul
iret
add
push
divl
and
xor
dec
push
roll
fldt
inc
sub
add
daa
pop
jge
add
dec
in
das
test
pusha
push
inc
mov
inc
sbb
sbb
or
leavew
push
mov
pop
and
jno
insl
lock
bnd
fbstp
push
and
addr16
push
xchg
push
test
sub
mov
sbb
xchg
sub
adc
cmp
loop
add
or
cmpsb
pop
add
add
decb
inc
ds
sbb
in
loop
repnz
sbb
std
sub
cs
lcall
push
es
adc
or
and
push
test
cwtl
pop
xchg
dec
sbb
sbb
out
dec
jo
inc
aad
xchg
dec
enter
sub
pop
cli
add
pop
out
lahf
sbb
test
mov
js
cmpsb
and
leave
adc
dec
jg
jg
and
outsl
bound
hlt
or
pushf
scas
fcmovbe
scas
movsl
aad
fs
arpl
add
movsb
xacquire
sbb
movsl
icebp
sub
xchg
clc
pop
data16
call
pushf
icebp
push
sub
jb
and
sub
sbb
push
pop
pop
mov
aas
adc
add
insb
mov
loop
mov
bound
inc
addr16
movsl
jae
and
jl
add
fldl
or
push
test
and
xchg
mov
push
or
xlat
push
jo
fldl
pop
xor
pop
int3
in
xlat
xchg
aam
fs
jle
lds
outsl
cld
movsb
push
or
mov
aas
out
pop
pop
pop
cmp
iret
jno
faddl
pop
pop
ljmp
sub
jns
scas
sahf
push
push
push
xchg
cld
lods
and
popf
cltd
ret
movb
fisubs
xchg
dec
mov
fs
mov
and
dec
scas
jae
ja
jo
out
in
hlt
inc
movl
sbb
std
mov
in
sahf
cmp
repnz
cwtl
stos
mov
jnp
std
addr16
es
insb
pop
lock
xchg
jns
cmpsb
jecxz
pop
arpl
mov
inc
out
adc
jecxz
lods
and
pop
sbb
imul
inc
jmp
xchg
jbe
cmp
push
and
idivl
sbb
scas
aam
fcmovbe
scas
or
cmp
mov
sahf
das
adc
je
xchg
xchg
lret
xor
mov
dec
mov
scas
inc
xchg
xor
loopne
pop
push
mov
inc
scas
es
push
jns
add
cmp
into
fisubrs
dec
mov
icebp
cmp
inc
fildl
orl
or
jp
ficompl
insl
sti
pop
push
add
add
pusha
xor
and
movsb
add
es
jb
or
dec
xor
or
loopne
or
out
fsubrs
nop
xchg
adc
mov
in
fstpl
clc
daa
mov
clc
and
lret
ljmp
mov
arpl
mov
in
add
push
icebp
fnstsw
xor
sti
add
mov
sbb
nop
cmp
push
lods
xchg
mov
mov
or
jo
enter
mov
cmpsb
incb
out
inc
daa
cmpsb
pop
mov
xlat
out
jb
pop
push
sbb
stos
or
sti
pavgb
cld
jmp
lret
scas
add
rcrb
scas
outsb
jl
imul
clc
jp
and
jns
inc
jb
cmp
shrb
div
div
pop
cltd
and
inc
clc
hlt
sbb
js
cmpb
mov
jg
xchg
push
mov
mov
popf
call
scas
xor
ja
scas
fnstsw
in
pop
sub
sbb
test
aad
sub
clc
jg
ja
arpl
mov
sbb
mov
jmp
daa
loope
xor
pop
add
std
mov
std
mov
adc
mov
inc
mov
adc
pop
push
or
sbb
sub
insb
xchg
inc
ret
inc
ret
mov
sub
mov
and
xchg
push
imul
int
xchg
pop
fwait
inc
xchg
shl
fcompl
nop
jecxz
or
movsl
pop
inc
jb
icebp
mov
test
mov
xor
jecxz
fs
test
mov
aas
xchg
lret
dec
pop
leave
mov
aas
stc
lret
push
sbb
popa
dec
dec
mov
xchg
test
pushf
or
jb
clc
push
stos
sbb
leave
mov
mov
fbstp
je
cmp
and
inc
push
lods
push
sbb
in
xor
js
and
test
or
andb
lahf
mov
data16
or
jge
add
pop
and
pop
mov
je
lods
pop
inc
sahf
cmp
loopne
and
lcall
pop
popa
sarb
xor
adc
daa
mov
sub
aas
loope,pn
ror
cs
jb
negl
push
mov
insl
movsb
cmp
push
outsl
adc
push
lcall
iret
mov
cmp
leave
push
fdivrs
ret
into
mov
cld
and
fstl
cmp
int
jl
aam
dec
adc
push
or
ret
jle
cmpsb
rcrb
add
data16
pusha
xchg
movsl
jg
pop
dec
icebp
xor
pop
imul
pop
outsl
cltd
mov
add
cmp
push
lret
and
insl
adc
or
inc
pop
daa
jl
jns
inc
mov
mov
add
or
vpmovwb
dec
pop
mov
fildll
movsl
xchg
cmp
mov
jno
iret
out
push
mov
xchg
xchg
sbb
inc
xchg
insl
test
xlat
movsl
and
aam
cmpsl
mov
jl
lcall
cmpsb
ja
jecxz
lds
add
jno
push
or
imul
hlt
stos
mov
aaa
push
sbb
repnz
add
mov
ret
in
stos
xchg
push
mov
clc
into
mov
mov
lret
jb
inc
outsb
push
dec
mov
pop
dec
mov
pop
push
pop
clc
outsl
add
jg
mov
lahf
dec
add
xlat
cmpsb
inc
mov
sub
inc
push
and
test
mov
cld
xchg
sub
xor
add
shll
mov
cmpsb
je
sbb
scas
jge
sbbl
sub
out
mov
int3
or
divl
jmp
inc
ror
and
pop
cmp
ss
xor
inc
les
pop
xchg
mov
mov
mov
or
jmp
scas
dec
mov
js
cmp
subb
les
and
push
xor
cmpsl
ss
adc
stos
dec
enter
cmpsl
imul
addr16
cld
add
shll
js
clc
mov
stos
cmp
andb
mov
xchg
insl
xchg
sub
rorl
inc
dec
clc
dec
shrb
push
into
xchg
push
mov
inc
pop
fmull
sbb
ss
lds
ficomps
push
push
pop
push
xor
xor
dec
popa
sbbb
loopne
ds
xchg
adc
jge
lods
mov
ficoms
daa
rcr
jbe
jns
sub
xor
lret
xchg
add
and
les
add
shlb
mov
cwtl
shll
lret
sub
mov
sbb
dec
adc
aam
enter
hlt
push
js
jmp
pop
inc
cmp
ret
mov
mov
push
cs
mov
mov
xor
ljmp
add
and
fmulp
and
in
cmpsb
pop
push
pop
clc
adc
inc
ljmp
fmul
sub
loopne
pushf
pop
out
out
ficoml
mov
test
adc
cltd
sub
shlb
shlb
adc
hlt
stos
imul
xchg
cmc
nop
jecxz
fistpll
orb
jne
ss
mov
or
sub
gs
add
mov
arpl
mov
push
or
repz
ljmp
sbb
sub
out
movsb
es
pop
xor
and
push
sbb
mov
jns
mov
and
or
xor
inc
jle
imul
cmp
jno
dec
mov
xchg
inc
adc
xchg
out
cmp
or
xchg
mov
or
mov
cmpsl
movsb
ljmp
in
pop
push
jmp
xchg
sbbl
lods
xor
mov
rorb
aas
mov
xchg
push
mov
xchg
popf
dec
add
rcll
fisubs
lret
ret
aad
popf
xchg
jne
imul
sti
pop
dec
mov
sub
xor
icebp
loopne
movsb
pop
out
lds
ret
in
movl
sub
shll
sbb
aas
push
jo
aad
sub
mov
inc
ja
mov
mov
mov
jmp
adc
loop
cli
and
mov
jp
gs
pop
cmp
cmp
nop
xchg
pop
xchg
lock
int
inc
and
shr
mov
imul
int3
lahf
fbstp
inc
push
idivb
adc
mov
fnstenv
stos
pop
ds
cmp
push
pop
jne
rorb
scas
notl
mov
js
mov
lods
fdiv
es
stc
xchg
mov
imul
and
cmp
aas
or
push
lahf
inc
mov
cmpsl
cwtl
outsb
sbb
xchg
stc
mov
push
sbb
adc
into
xchg
pop
mov
lcall
mov
add
lock
push
sub
insl
push
and
test
lds
out
sub
dec
test
mov
lea
adc
into
push
xor
and
aad
testl
push
xchg
dec
bound
inc
xchg
or
ret
es
and
push
aaa
lcall
je
push
xchg
data16
or
push
sbb
mov
mov
mov
or
mov
mov
dec
fsubrs
pop
inc
imul
notl
mov
adc
push
pop
sbb
popf
lcall
add
xchg
int3
mov
loop
xlat
inc
jnp
xchg
lret
mov
or
gs
mov
dec
pop
cltd
pop
jnp
and
and
pop
add
lds
xchg
xor
filds
and
or
inc
sbb
ret
mov
push
test
push
xor
push
sub
loope
ljmp
mov
sbb
inc
push
lret
jmp
inc
mov
rclb
not
jle,pn
ljmp
notb
pop
adc
mov
in
outsb
and
or
dec
push
mov
les
fwait
popa
mov
jmp
loop
pusha
lock
mov
xor
pop
rorl
aaa
fidivrl
cmpsb
jge
insb
mov
repz
and
and
loopne
scas
data16
cli
jns
decb
ds
inc
sub
imul
out
in
add
xchg
sbb
mov
clc
sbb
or
jg
div
movb
out
xor
sub
jae
test
pop
in
sbb
test
test
or
negb
jo
and
stc
sbb
inc
mov
xchg
push
scas
dec
xor
rclb
cmp
stc
jnp
xchg
mov
push
mov
inc
push
lea
out
xchg
add
jl
out
std
jp
mov
dec
xchg
aam
int3
lea
insl
repz
xchg
add
jle
inc
sti
and
dec
sub
mov
or
aam
xor
into
jg
push
xchg
add
mov
xorb
push
mov
jne
out
loop
dec
dec
or
sti
and
test
jnp
pop
pop
fnstcw
lock
js,pn
sbbb
insl
sahf
mov
movsb
xchg
cmp
cmc
data16
push
sbb
and
outsb
xchg
icebp
in
insl
pop
push
das
push
ror
popa
sahf
cwtl
insl
addr16
xchg
jmp
loop
pop
icebp
inc
mov
jnp
sbb
jne
js
mov
insl
pop
repz
xchg
fcmovnbe
xor
pop
lods
mov
test
jnp
loope
add
bound
adc
mov
add
insb
pop
inc
push
sbb
pushf
lahf
lret
inc
lea
lahf
jl
add
adc
into
scas
and
mov
cs
mov
loope
cwtl
int3
fnop
add
jg
xor
jle
inc
and
sub
fs
cmp
shl
fcompl
pop
jno
inc
pop
and
fstpl
cli
or
and
in
leave
js
pop
lds
or
jb
xor
test
jb
jno
fbld
lds
inc
dec
addr16
cmovns
mov
shlb
int3
out
jecxz
das
incb
push
daa
dec
negb
lods
loop
test
inc
out
inc
test
mov
mov
scas
dec
sarb
ret
pcmpeqw
mov
adc
ret
lds
mov
addb
lret
fidivl
ja
add
jne
xor
mov
in
test
sti
xchg
icebp
pop
sub
cmp
and
inc
aam
xchg
and
stos
and
cmc
test
or
sbb
icebp
loop
xchg
cltd
xchg
sbbl
dec
loope
and
lds
pop
pop
mov
call
add
xchg
jp
pop
jmp
pop
pop
sbb
scas
pusha
or
jl,pt
int3
cld
mov
push
out
push
je
xchg
pop
loopew
push
or
loopne
lret
stc
lret
je
clc
inc
adc
rolb
mov
push
lock
mov
ds
int3
sub
jge
pop
stc
or
scas
ficoms
dec
mov
jne
mov
xor
inc
push
fimull
xor
xchg
mov
ret
fwait
iret
xchg
sub
push
inc
call
push
sub
pop
pop
sub
jne
in
cld
inc
call
test
dec
adc
mov
scas
jno
and
cmpsb
jl
aas
push
inc
xor
pop
sbbb
lcall
dec
jns
inc
pop
mov
jp
lahf
adc
adc
mov
mov
adcl
push
cmpl
xchg
jge
cs
jbe
cwtl
dec
ret
or
int3
fs
scas
testl
shl
es
std
adc
stos
iret
push
enter
sahf
leave
inc
jae
clc
pop
je
xlat
ljmp
sub
sbb
loop
lret
packssdw
dec
mov
mov
lcall
divl
add
and
dec
jae
fs
enter
stc
fwait
pop
mov
aam
std
mov
das
rolb
rorl
into
push
jmp
lahf
fsubrs
aas
adc
daa
sarb
pop
scas
mov
mov
jge
cmpsl
mov
lret
mov
mov
xlat
mov
movsb
movsb
daa
scas
jecxz
stos
cmc
cmp
mov
inc
and
xlat
pop
and
loopne
repz
xor
jge
mov
cli
sub
push
sti
imul
and
mov
xchg
arpl
fdivrl
iret
xchg
in
push
inc
je
mov
mov
outsl
ss
out
es
arpl
jnp
sub
ljmp
adc
icebp
jnp
xchg
js
mov
loope
call
cmp
inc
sbbl
push
orb
into
pop
aam
pop
pop
outsl
inc
ss
sub
add
pop
jns
mov
pop
jmp
in
sub
loope
dec
cmpb
xchg
sbb
and
dec
dec
into
int3
push
pop
jle
adc
xchg
dec
cmp
xchg
imul
pop
rcl
out
lea
mov
pop
shrb
ja
in
je
sub
icebp
mov
je
pop
shrb
mov
das
leave
push
jg
xor
lret
popf
out
imul
and
and
je
mov
es
test
insl
push
dec
jecxz
dec
enter
shlb
fs
jle
cmpsl
bound
sbb
fdivs
pop
cmpsl
push
xchg
loope
outsb
mov
ds
mov
sahf
hlt
jmp
scas
xlat
cmp
xor
mov
fisubs
xchg
xchg
adcb
out
push
sub
sbb
dec
jnp
sbb
pusha
cmp
push
mov
lss
sbb
dec
dec
add
imul
inc
jmp
ret
insb
xor
mov
jb
mov
mov
hlt
mov
push
xchg
sbb
push
sub
jno
fsub
and
push
dec
sbb
lcall
leave
rorb
adc
or
jnp
call
fldt
cltd
inc
sbb
push
adc
stos
outsl
jle
jb
aad
mov
loop
rorl
lea
jp
mov
loopne
pop
lea
mov
add
and
int3
jmp
mov
or
aam
jmp
loope
fidivl
imul
inc
xchg
in
push
test
pop
adc
sub
flds
xor
cmp
push
mov
mov
leave
lods
aas
sub
aad
add
mov
repz
es
andb
mov
pop
cs
sub
xchg
inc
mov
movsb
insl
jmp
push
scas
mov
sbb
mov
dec
js
aam
cmpb
mov
xor
fwait
adc
popa
fs
add
jnp
xchg
cmp
sbb
das
lock
gs
push
sub
mov
or
fcomps
xor
orb
xchg
jb
push
xor
cmp
and
xor
mov
out
push
jne
fdivrl
mulb
ja
mov
nop
mov
mov
lcall
pop
fidivrl
pop
lret
inc
mov
jns
push
stos
jae
pop
mov
js
popf
stos
mov
mov
std
jl
das
faddl
popf
sbb
rclb
cs
xor
and
fwait
xor
xchg
mov
sbb
outsl
xor
cltd
iret
xchg
and
lea
in
xchg
add
fstps
fldcw
fsubl
std
and
fwait
cwtl
jl
rolb
or
lahf
xchg
mov
popa
shll
gs
js
sbb
in
push
stos
pop
ds
mov
push
push
out
test
mov
pop
or
sub
cld
jp
cmp
sbb
sbb
add
inc
testb
ret
pop
outsl
sbb
jo
xchg
clc
sub
mov
mov
icebp
arpl
out
pop
sub
jmp
add
fwait
jnp
jbe
cmp
and
add
movsb
sub
add
cmc
and
xchg
ja
mov
loop
cmp
mov
push
lods
movsl
push
pop
inc
push
sbb
sub
dec
jle
dec
mov
jecxz
scas
dec
loope
xchg
int3
hlt
or
ret
pop
aam
add
ret
sbb
lea
xor
ljmp
aaa
call
sbb
outsl
push
sbb
decl
jnp
jo
fnstenv
and
add
and
mov
xor
stc
jecxz
aas
push
xor
adc
inc
or
cmc
out
pop
or
and
xor
mov
xor
ficoms
into
mov
jmp
mov
push
sub
xor
jno
pop
bound
pop
mov
mov
dec
insb
and
jo
mov
pop
ret
push
xor
repz
xchg
out
mov
push
pusha
and
ret
insl
daa
adc
xor
decl
sti
jne
xchg
mov
outsb
dec
iret
cmp
sbb
outsb
sub
mov
inc
fdiv
cmp
into
add
and
xor
cmpsb
adc
dec
lds
jae
or
int3
sub
xchg
xchg
sti
push
or
sub
das
pop
pop
int3
cmc
inc
popf
test
or
outsl
and
mov
pop
inc
xorl
lahf
aad
push
push
sub
lret
test
pop
and
fsubr
js
sbb
outsl
aas
pop
xchg
arpl
adc
adc
fsub
fwait
test
pop
jl
push
mov
cmp
inc
sub
xlat
adc
ljmp
xchg
ds
sub
sub
out
aam
lods
adc
jge
sub
adc
sbb
pop
outsb
testb
aas
dec
xchg
sbb
jp
lret
sub
loope
xchg
in
divl
cmp
mov
add
inc
leave
arpl
pop
icebp
inc
dec
into
ret
insb
mov
icebp
int3
shll
pop
sub
pusha
test
xchg
cmpsb
mov
int
mov
xchg
or
hlt
in
pop
jg
repz
lods
push
shr
cli
add
cmc
sub
or
or
push
insl
movsb
movsb
mov
dec
aam
mov
xchg
loope
push
nop
xor
cs
jnp
xchg
sbb
arpl
insl
cmp
out
cwtl
repz
lret
push
outsb
or
jno
js
sbb
mov
das
mov
push
sub
jmp
nop
push
aaa
push
pop
mov
jne
rcrl
hlt
ret
lcall
cld
adc
pop
cmpsl
pop
xor
pop
pop
pop
in
mov
xchg
xchg
fsubrl
sub
push
xchg
stos
jbe
lcall
out
sub
fdiv
call
test
dec
cmp
push
out
inc
push
fdiv
mov
mov
push
or
shl
sub
repnz
je
aaa
lcall
cmc
adc
jne
jmp
and
movsl
dec
pop
sub
xchg
mov
daa
sbb
cmp
and
imul
mul
js
int3
inc
cmp
stc
push
cli
in
push
fistpl
mov
movsb
cmp
pop
jmp
popa
jp
jns
roll
aaa
inc
mov
inc
adc
adc
dec
xor
cmp
pop
dec
mov
dec
stos
sahf
mov
daa
leave
mov
adc
rcrl
and
cmp
lcall
xor
jp
jg
sub
xor
and
cmp
js
popf
repz
xchg
fidivrl
repnz
aam
dec
pop
out
mov
repz
mov
jne
sbb
xchg
leave
and
pop
fidivrs
jmp
subl
jg
or
push
inc
sub
rcrb
mov
jl
xlat
call
mov
sbb
pop
mov
idiv
rcrb
add
or
in
rclb
or
icebp
lods
shll
inc
pop
mov
test
les
push
decb
fstps
push
shlb
shlb
int
inc
jno
dec
dec
sub
stos
sbb
cs
push
in
sub
fcomps
in
sub
push
xor
push
movsl
mov
cmp
stos
mov
cmpsb
fidivs
scas
xchg
sub
add
mov
cwtl
movsl
sahf
pop
daa
mov
xlat
clc
jae
sub
xor
mov
pop
repz
sbb
xor
mov
or
loope
mov
push
cmc
orl
imul
push
test
jmp
pop
loop
sbb
xchg
or
cmpsb
mov
inc
mov
test
xchg
pop
xchg
add
roll
ljmp
mov
jmp
mov
push
pop
push
fnstcw
jp
pop
pop
pop
push
jg
pop
pop
add
mov
in
jl
ret
xchg
xchg
shlb
imul
test
mov
int
or
je
xchg
rorl
jb
or
mov
addl
push
js
mov
test
mov
xchg
push
lret
icebp
fdivrl
mov
into
dec
jecxz
pop
pop
dec
jge
add
ja
js
inc
sub
leave
xchg
mov
rol
mov
ficompl
data16
insl
xchg
dec
shll
sub
ja
aad
mov
push
add
xchg
outsb
daa
push
or
dec
daa
adc
dec
jo
cmp
xchg
mov
scas
xor
imul
cld
or
bnd
je
pop
pop
pop
fbstp
sbb
movsb
mov
jbe
bound
test
jmp
mov
push
xor
std
inc
sub
aas
cmpsl
push
cmpsb
jmp
cmp
xchg
jnp
xor
jl
outsl
test
addr16
arpl
sbb
mov
xchg
mov
pop
xchg
imulb
idiv
mov
hlt
add
cmc
icebp
stos
jge
leave
iret
mov
cmp
inc
insb
shrb
mov
ret
cltd
in
lods
xchg
jo
inc
fdivrs
aad
jb
mov
adc
pop
aas
add
pop
mov
add
inc
aas
mov
fs
adc
xchg
mov
testl
negb
lret
call
test
inc
fstpt
pop
xchg
scas
mov
and
inc
pop
imul
mov
ja
push
and
pushf
inc
mov
sbb
xchg
dec
xchg
int
and
mov
xchg
dec
out
or
icebp
in
sub
dec
inc
mov
ret
pop
lahf
xchg
xor
stos
sahf
sub
ficoml
std
sbb
sub
mov
pop
fwait
mov
fwait
inc
sbb
cmp
xor
je
jns
jp
in
cld
inc
lock
popf
jo
inc
movsl
ds
xor
lds
je
inc
jno
icebp
jge
out
push
inc
push
outsl
rclb
hlt
push
ss
cltd
pusha
jo
js
test
mov
lock
cmp
scas
push
aam
mov
mov
push
in
mov
test
cmpsl
int3
sub
mov
cwtl
mov
cmpsl
subl
xchg
push
add
decl
idivl
jns
lods
sahf
fdivrs
xor
lds
pushf
movsl
cli
or
xchg
aam
add
jno
jae
inc
dec
mov
add
jne
and
or
sbb
xchg
xchg
fmul
data16
jne
fidivs
xchg
gs
adc
inc
into
pop
mov
sar
pop
aad
xor
sbb
mov
mov
testb
lea
push
aas
mov
popa
jmp
inc
mov
mov
pop
ljmp
jmp
mov
pop
movsl
pop
shrl
inc
push
and
add
in
mov
xchg
sbb
testb
push
test
scas
xor
inc
xchg
inc
xlat
maxps
push
add
mov
jl
xchg
inc
fisubrl
arpl
rorl
xor
sub
lret
add
movsb
stos
out
push
push
pop
add
cmpsb
xchg
push
hlt
lock
mov
fwait
inc
inc
xchg
push
ret
pushf
cmp
sbb
pushf
scas
cli
xor
enter
sarb
mov
aaa
ficoml
ljmp
jmp
xor
mov
ret
aaa
fs
jbe
ficoms
pop
or
xchg
push
ret
fwait
add
inc
scas
pop
je
push
pop
test
pop
mov
cwtl
inc
testl
mov
int3
mov
push
fidivs
int3
insl
jns
pushf
leave
mov
jb
pop
sub
ret
and
pop
adcb
cmc
out
imul
mov
mov
shlb
test
mov
enter
push
cmp
xchg
insl
leave
js
cmc
jle
push
pop
fimull
cs
cmpb
xor
pop
aas
pushl
jecxz
insb
mov
sbb
aaa
mov
cld
push
mov
mov
jmp
fdivrs
push
cs
jle
jmp
xor
call
out
xor
movsl
add
push
and
cmp
cmpsb
sbb
cld
push
dec
pop
adc
popa
insb
lcall
test
fidivs
xchg
popf
inc
xor
test
inc
push
stos
adc
imul
mov
sbb
and
in
xchg
jle
fiadds
fldcw
rorb
cs
inc
test
pop
nop
shll
mov
repz
cld
imul
movsb
cmp
adcl
pop
mov
jae
jecxz
mov
fnstcw
inc
pop
decb
cmp
sub
mov
shll
test
aaa
js
out
sbb
push
add
outsl
ja
int
fmul
loope
cwtl
and
jae
sahf
in
mov
shlb
xchg
dec
std
ror
adc
hlt
xor
inc
push
in
ds
sbb
data16
jecxz
fists
divb
xor
push
pop
xchg
sub
push
pop
mov
test
jae
xchg
repz
outsb
repz
ljmp
testl
cld
test
adc
nop
test
aas
movsb
std
mov
fsubs
jb
jecxz
loope
push
or
adc
push
mov
jmp
xlat
aaa
out
and
into
test
decl
lahf
pop
cld
add
sbb
push
pop
out
add
mov
insl
loop
mov
sarl
push
or
push
push
int3
and
mov
fsts
mov
push
into
push
vmread
jno
or
imul
jmp
sub
xor
mov
and
add
mov
adc
mov
add
add
dec
pop
jge
adc
xchg
mov
int3
lds
xor
movsl
std
jb
stos
jle
inc
and
lcall
fldenv
sub
cld
ss
or
test
pop
arpl
cmp
arpl
sub
rcrb
jbe
scas
xor
jge
sbb
jle
imul
xchg
cld
insb
cmpsl
loopne
ffree
sbb
std
cmpsl
aaa
es
daa
add
mov
jl
hlt
or
sub
mov
push
adc
and
lret
jne
sbb
fwait
dec
pop
pop
dec
or
xor
das
imull
inc
push
xchg
das
push
mov
push
cmp
add
pushf
xor
mov
and
jl
loope
adc
or
outsl
call
cmc
scas
fisttpll
add
sbb
stos
jecxz
mov
jb
mov
outsl
and
jae
inc
xchg
lahf
jae
pop
cmpsb
in
mov
outsl
fsts
rcrb
lret
out
movsl
mov
inc
mov
fstpt
and
notb
clc
testl
outsl
sbb
cmp
adc
aam
cmp
push
dec
cli
pop
dec
in
dec
push
xlat
jno
fdiv
push
dec
cmp
mov
fnstenv
sub
out
cwtl
mov
fs
movsb
imull
out
mov
inc
test
mov
or
lahf
xor
xlat
clc
add
xchg
stc
pop
mov
mov
sbb
es
jno
js
cltd
jecxz
xor
pop
xor
aad
fisttpll
or
jno
movsb
adc
mov
bound
cmp
mov
push
mov
xlat
sbb
mov
pop
pop
enter
lds
xchg
leave
mov
pop
and
mov
popa
out
lds
pop
jae
ljmp
in
and
pop
push
sbb
xorl
xchg
lret
mov
ljmp
sub
or
out
das
cmp
push
in
outsb
push
dec
out
jle
sbb
lock
xchg
mov
fwait
lret
dec
jae
sub
aaa
mov
jmp
add
jg
es
mov
xor
in
pop
mov
pop
push
sbb
stc
popf
inc
sub
sub
ret
adc
push
cld
fdivl
aad
xor
add
mov
and
das
mov
rcll
scas
fstpl
mov
jmp
in
stos
add
jns
neg
clc
or
out
mov
pushf
xchg
inc
xor
daa
shrl
insb
or
popa
leave
inc
aam
outsb
xchg
mov
es
repz
add
inc
pop
cmpb
dec
pop
push
fxch
or
and
pop
dec
or
popa
and
mov
push
and
or
adcl
adc
imul
stos
cld
out
mov
icebp
pushf
cs
fwait
lds
xchg
out
push
and
mov
lds
add
fcmovbe
adc
adc
shl
fcmovnb
jne
into
popf
xchg
in
and
ret
lea
sti
fldcw
hlt
lock
clc
mov
cld
mov
pop
int
add
add
inc
das
cmp
imulb
lahf
adc
subl
ds
jge
pop
notl
xor
xor
lahf
mov
mov
xchg
xor
dec
aam
enter
aad
xor
or
jge
lret
lods
in
data16
xor
fucomip
pop
aas
aas
fbstp
pop
stc
imul
xchg
sub
movsl
iret
dec
xor
dec
fnstenv
xchg
in
cmpsb
pusha
int3
cmp
or
push
push
nop
daa
daa
cmp
push
and
imul
mul
das
es
pushf
push
xchg
adc
xor
mov
loop
jmp
loopne
pop
fiadds
ja
mov
loopne
jb
or
push
adc
iret
mov
mov
lret
ds
decl
mov
push
shlb
adc
pop
shlb
cmpsb
jge
insl
ret
sbb
push
stos
ret
subl
out
mov
leave
xor
scas
xchg
push
push
xchg
bswap
jp
dec
arpl
ficompl
popf
imul
jb
out
movsb
cltd
stos
mov
ds
test
sti
bound
jge
mov
mov
jecxz
stc
xor
addr16
sub
sbb
push
inc
rcl
aad
xor
stc
mov
icebp
or
lahf
mov
sahf
inc
dec
or
jl
popa
xor
icebp
lret
cmp
adc
das
jne
mov
popa
cs
inc
or
lcall
scas
cmp
out
sahf
mov
test
jnp
push
leave
cs
adc
mov
pop
jnp
cld
mov
sar
or
jns
mov
int3
in
out
pop
push
les
iret
pop
inc
push
sub
std
cltd
mov
jb
icebp
aad
cmp
shrl
jo
jle
leave
push
lret
mov
xchg
lods
sbb
push
mov
out
fimuls
aas
fsubr
dec
sarb
pop
pop
sub
mov
or
cmp
hlt
pop
ds
les
push
sbb
test
xor
cmp
jo
cs
jge
scas
mov
fcompl
std
fnstcw
jp
xlat
ret
jb
push
std
sbb
inc
jmp
push
inc
outsb
dec
inc
mov
in
inc
xor
test
lret
cwtl
and
leave
adc
cld
or
sub
xor
mov
inc
sbb
fldl2e
ret
call
jp
mov
jns
pop
not
movb
nop
test
mov
sub
xchg
pop
push
add
fistpll
outsb
fnsave
idivl
mov
sub
dec
inc
outsb
mov
mov
cmp
imul
ror
fisubs
sub
imul
sub
in
int3
in
xchg
call
pusha
mov
push
fadds
hlt
in
or
cmpsl
jns
mov
jae
inc
sbb
add
loop
pop
mov
xchg
inc
push
test
push
mov
push
cmpl
cld
jns
stos
pusha
cld
movsl
iret
mov
xor
push
out
xor
sub
gs
jp
packsswb
sbb
pop
sub
push
fisubrs
cmc
std
out
imul
xor
popa
mov
mov
dec
fwait
jns
mov
cli
mov
mov
cmpsl
sub
popw
out
outsl
cmp
xor
xor
adc
je
fs
sub
scas
pushf
out
mov
call
test
hlt
mov
lea
sub
cli
or
adc
cwtl
cmp
mov
and
mov
sub
xchg
and
dec
jb
xorb
or
cmp
pushf
adc
push
and
rol
test
xchg
mov
inc
mov
clc
test
inc
imul
inc
xorl
stos
es
loopne
popf
mov
dec
outsl
adc
push
shrl
jmp
fldcw
test
sub
imul
xor
mov
ficomps
rcll
or
or
jnp
mov
adc
jl
aas
pusha
add
pushf
jge
mov
imul
shrl
sti
cld
inc
push
xchg
jge
inc
mov
xchg
loopne
or
lods
scas
shl
mov
mov
adc
push
lret
jbe
xchg
pavgb
pop
mov
sub
cmpsb
push
push
iret
andb
lods
mov
jne
lods
add
push
out
repz
jns
int3
push
inc
sub
adc
push
jge
xor
mov
hlt
lcall
mov
mov
cmp
xor
sti
fidivs
jns
xor
cmp
xor
lods
scas
imul
mov
sti
sub
out
fistps
dec
daa
inc
cmpsb
or
loope
lcall
add
int3
aad
rclb
clc
mov
inc
mov
ja
daa
push
les
fisubrs
pop
nop
aaa
hlt
cmp
outsb
jmp
call
sbb
mov
dec
mov
push
pop
xchg
mov
mov
mov
or
lcall
cmpsl
sbb
sub
sub
cli
pop
hlt
or
jb
sub
and
out
adc
mov
rorb
xor
xchg
lret
fs
mov
add
or
out
pop
scas
fbld
lods
ret
lret
incl
pop
ljmp
scas
data16
and
jns
cmc
fnstenv
jo
push
movsb
mov
loope
imul
dec
daa
and
mov
mov
xchg
bound
or
out
jl
dec
inc
mov
idiv
mov
pop
push
out
lds
and
into
mov
es
mov
lret
xlat
imul
push
jle
xlat
mov
mov
mov
js
ja
pop
loopne
cmc
pop
dec
push
out
sub
push
add
je
lret
jno
fldenv
sbb
mov
xchg
dec
insl
int
inc
xlat
jmp
rcll
pop
xchg
or
out
jns
cmp
push
scas
inc
test
inc
popf
mov
int
cmp
aam
dec
loope
adc
inc
in
dec
insl
mov
push
movsl
adc
outsb
test
les
rorl
jns
mov
roll
stc
adc
out
outsb
ds
cs
cmp
popf
and
cmp
loop
jp
xor
cld
dec
or
xchg
mov
sub
test
insb
fsubr
inc
popf
push
mov
xor
mov
lcall
filds
ja
fwait
out
ret
jg
xor
stos
out
jne
popa
push
das
sbb
loopne
adc
in
sbb
push
xchg
ds
inc
xlat
xchg
inc
jle
hlt
sbb
add
sbb
pop
outsl
adc
xchg
mov
in
xchg
push
int3
stos
fidivrs
jb
sbb
shlb
dec
pop
fsubrl
mov
imul
xor
leave
or
in
ja
or
lcall
scas
out
and
mov
bound
xchg
bnd
scas
test
adc
push
aam
or
lods
out
data16
sub
imul
fwait
gs
fwait
shll
inc
out
out
test
mov
cli
add
adc
jae
add
sub
jle
pop
sbb
cmpb
jbe
or
pop
mov
iret
out
cmp
popf
adc
jne
fwait
push
add
daa
pop
pop
cli
adc
and
fnstsw
mov
xor
fwait
jno
stos
sbbb
adc
cli
push
xor
fst
xchg
push
rol
mov
xchg
pop
jb
and
int
loope
xchg
inc
stos
test
pop
pop
mov
mov
inc
ret
add
fnstcw
jecxz
inc
aad
aad
push
dec
and
jb
popf
lcall
fadds
pop
push
sbb
loopne
jns
pop
fs
arpl
jge
push
out
mov
in
aam
addr16
cmp
mov
mov
mov
test
adc
dec
xor
push
jno
cmp
or
in
fwait
aam
cltd
mov
aaa
dec
repnz
mov
repnz
lock
cmp
adc
mov
push
xchg
adc
mov
test
add
mov
into
inc
cld
test
pop
mov
outsl
dec
cli
cli
sub
shr
xchg
jb
add
sub
mov
cmp
xchg
dec
jnp
arpl
lods
add
jl
loop
push
jg
lcall
int
fists
rorl
cmp
bound
out
dec
mov
outsb
add
pop
sub
mov
adc
notb
les
cmp
dec
out
xor
inc
adc
xchg
fninit
addr16
add
mov
adc
xchg
xor
dec
adc
aam
jae
pop
mov
cs
pop
in
fcompl
orb
xor
arpl
dec
dec
scas
stos
setl
rcr
and
mov
mov
sbb
mov
inc
insb
mov
cmp
push
pop
out
jg
fldt
sar
clc
add
xchg
ret
stc
into
xor
mov
imul
popa
push
xchg
push
subb
jge
mov
inc
jns
fdivrs
loope
push
mov
cmp
popl
mov
nop
mov
add
jno
jmp
mov
fdivr
add
fisttps
cs
jno
mov
or
inc
cmp
fisttps
clc
lods
xorl
out
inc
ret
or
lret
lods
js
loopne
cli
daa
test
cld
lds
xchg
fisubs
fwait
push
push
cld
pop
pop
xchg
pop
pop
lahf
lret
rorb
loop
push
jo
push
and
ds
mov
adc
jmp
jno
xchg
movb
arpl
jae
js
adc
lods
jmp
loopne
dec
cmc
ja
insl
jno
jns
push
sarb
lahf
xchg
push
cmc
stos
jbe
xlat
push
mov
outsl
aad
int3
ss
mov
fists
sub
cmp
shrb
inc
shlb
js
xchg
popf
cmpsl
cmp
cmp
pop
jl
fisubrs
and
mov
mov
addr16
mov
es
inc
mov
mov
icebp
mov
mov
ljmp
fwait
lock
push
hlt
shll
sbb
and
cmc
push
inc
jg
mov
sarb
or
fwait
rcll
jl
sub
in
shlb
imul
or
sarb
clc
std
or
sbb
call
out
pop
push
cmpsl
or
xchg
push
and
popa
mov
or
mov
inc
dec
mov
pop
push
xlat
mulb
xchg
and
mov
insl
fcmovu
movl
pop
addr16
sbb
repz
stos
jmp
push
aas
jmp
je
into
jmp
shlb
rclb
jb
cmp
or
adcl
scas
sbbb
stc
in
stos
out
test
stos
rclb
and
pop
insl
repz
popf
cld
lock
push
inc
mov
ss
frstor
hlt
out
gs
cmp
test
and
pop
xor
ja
mov
add
jae
mov
add
xchg
aaa
imul
dec
addr16
or
movsl
into
push
adc
push
push
lods
js
ds
das
jne
mov
xchg
jg
fsubrp
jge,pt
aam
dec
sbb
xchg
sub
sbb
and
ret
stos
or
dec
stc
sub
ja
jnp
inc
fistl
xlat
shlb
add
adc
js
pusha
out
mov
dec
ja
mov
xchg
in
in
sbb
fistpll
hlt
mov
sbb
enter
in
int3
stos
fsts
mov
xor
xchg
cmp
rolb
lods
mov
je
jno
jo
fnsave
add
mov
jbe
scas
mov
aam
pusha
imul
ds
jns
pop
cmp
enter
out
cmc
jg
cwtl
stos
jns
add
sub
sti
dec
pop
rolb
xor
sub
loop
cmp
fstl
test
fsubrs
or
adc
inc
divb
push
fwait
cmp
in
repz
inc
inc
ljmp
fs
xchg
scas
dec
xchg
into
aam
mull
test
adc
bsr
out
lods
xchg
stc
sahf
jmp
mov
cmpsl
push
test
cmp
push
mov
clc
popf
mov
add
dec
jns
pop
or
rcrb
icebp
pop
sbb
jns
shlb
loop
mov
hlt
cld
fwait
mov
xor
fs
pop
lret
jle
xor
sub
lods
xor
or
add
add
cmp
sbb
inc
filds
or
push
bound
push
inc
jle
insl
pop
and
push
and
mov
repz
sahf
test
call
stc
jmp
inc
jge
daa
decl
out
rcl
mull
jae
rorb
idivb
bnd
in
xchg
cmp
mov
pusha
add
dec
or
clc
jbe
pushf
aas
cmp
pop
aaa
orl
icebp
js
aas
mov
iret
cltd
movsl
and
or
adc
dec
addb
push
fadd
test
mov
out
fadd
cmp
push
push
cmp
inc
fimull
cmpsb
push
andl
repz
mov
movsb
cmc
inc
pop
fimuls
popa
iret
inc
push
and
js
add
inc
push
popf
movsb
fimuls
hlt
or
add
pushf
push
push
push
sbb
sub
icebp
insb
popa
dec
ret
push
test
cmpsb
stos
push
das
das
jae
pop
ret
or
lods
add
push
data16
mov
xor
insl
addl
push
inc
or
xor
push
cmp
add
lds
sbb
insb
lea
push
jae
dec
scas
jns
cmpsl
mov
ficompl
xor
xchg
mov
sub
push
test
jnp
lods
lret
aaa
ss
loop
sub
and
aas
push
lahf
xor
push
adc
add
or
xor
xchg
movsl
xor
sub
sbb
add
clc
xchg
add
negb
mov
int3
push
loop
pop
push
pop
js
out
sub
dec
push
sti
shlb
inc
adc
es
fsubrs
push
bound
mov
pushf
xchg
xor
push
inc
xor
scas
bound
adc
js
hlt
popl
pop
xchg
rorl
aad
jb
jae
and
addr16
and
popf
cmpsl
in
jne
loope
int
aas
cs
xchg
or
sbb
push
mov
popa
daa
cltd
loopne
adc
in
jl
lret
stc
dec
addr16
xor
mov
pop
dec
dec
pop
cmp
jl
ss
jmp
or
fmull
xchg
loop
xor
mov
popa
fcmovu
outsl
mov
xchg
adc
sub
mov
out
stc
inc
jnp
aad
mov
inc
ds
inc
sub
push
arpl
sahf
cmp
inc
xor
pusha
lret
out
ds
fsubr
add
aaa
jp
jle
xorl
dec
lahf
loope
popa
inc
push
xor
movsl
pop
push
outsl
sbb
sbb
ret
xchg
out
sub
mov
icebp
test
jb
add
mov
movb
add
cwtl
pop
dec
loope
push
mov
push
jbe
inc
mov
xchg
imul
xlat
daa
jg
in
shl
xor
inc
js
or
nop
sub
jmp
add
outsl
xor
cmpsb
mov
adc
adc
ret
movsl
test
aas
add
adcl
je
push
dec
lahf
xor
out
jge
out
sub
jae
pop
lds
mov
arpl
push
sbb
ja
dec
lcall
mov
xchg
jo
imul
sub
incb
rorb
ds
mov
sub
jae
cmp
push
and
shll
jo
add
adc
vdivpd
dec
lods
popf
ds
cmp
dec
pop
push
into
int3
or
lret
fwait
hlt
jecxz
inc
aam
cmp
inc
out
xchg
adc
in
dec
mov
xchg
das
mov
out
sub
jg
push
movsl
push
mov
push
ror
mov
mov
enter
push
dec
jo
dec
sub
sbb
mov
lods
out
mov
test
fwait
sub
loope
pop
sub
xchg
in
fmull
add
jg
mov
sbb
dec
repnz
pop
in
jno
cmp
mov
mov
test
out
fdivrs
es
insb
mov
pop
sahf
fbstp
lcall
bound
icebp
cwtl
jecxz
push
inc
loopne
pop
push
shrb
add
int3
insl
mov
cmp
out
pop
stos
ja
jge
pop
addr16
push
pop
pushf
es
pop
jns
sub
shrb
bndstx
fldenv
fmulp
gs
int3
and
mov
push
mov
movsl
sub
movsb
adc
xchg
stos
xchg
lcall
insb
sub
lret
jb
ret
add
mov
roll
lret
add
push
leave
xor
mov
aam
push
push
dec
adc
mov
and
or
iret
inc
shll
fisttpl
and
jne
cmpsl
lret
cwtl
aaa
push
dec
xchg
mov
arpl
psrad
add
int
imul
outsb
dec
sbb
lret
shrb
jbe
repnz
fldenv
push
mov
scas
fnstenv
mov
in
test
shll
push
in
cs
push
xchg
push
mov
cmc
and
mov
inc
inc
ficompl
nop
lea
js
inc
out
xchg
mov
addr16
inc
stos
into
xchg
add
inc
out
sub
or
or
lret
push
out
push
int
pop
xor
add
dec
rclb
cld
punpckhbw
pushf
shlb
insl
orb
imul
outsl
xor
adc
mov
in
pop
adcl
movsl
jbe
aas
and
jne
imul
imul
xor
test
pop
and
cmp
arpl
sahf
ret
mov
xor
out
mov
test
push
scas
out
and
jo
or
inc
xor
pop
stc
in
add
mov
pop
lods
lret
ficoml
mov
cltd
push
movsb
mov
inc
sbb
mov
sbb
jecxz
cmpsb
dec
jns
sarl
pop
pop
sti
clc
decl
jmp
sbb
addr16
das
add
mov
add
es
insb
in
dec
xchg
aas
mov
adc
sbb
pop
and
scas
cmpsl
hlt
roll
fnstenv
inc
and
fistpl
mov
jo
sbb
jle
adc
add
push
dec
imul
in
fistpl
shlb
xchg
aas
je
pop
xor
xchg
mov
jnp
add
jns
lods
dec
sbb
ret
leave
lds
jecxz
lods
insb
inc
and
loopne
loope
sub
xchg
shlb
hlt
filds
insl
outsl
mov
ljmp
ss
popf
in
lods
ljmp
cmpb
dec
movsl
xor
stos
add
pop
or
out
mov
pop
sar
mov
or
aad
rclb
pop
movsl
gs
cmp
dec
xor
stc
fidivrs
std
sahf
lods
les
out
inc
mov
loop
or
out
push
in
mov
test
pop
pop
cld
dec
addb
pop
scas
mov
cltd
and
test
lahf
push
nop
inc
imul
aas
in
sub
mov
cmc
pusha
movsl
mov
fisubrs
mov
xchg
dec
add
jne
adc
pop
sbb
test
inc
sbbl
mov
test
movsb
jo
aam
inc
lods
hlt
pop
cltd
pop
mov
xlat
lea
pop
stc
add
jmp
in
enter
lock
push
xchg
mov
imul
cmp
das
clc
cli
iret
pop
repz
cwtl
mov
rorb
adc
jmp
lods
int3
in
shll
stc
dec
rorb
flds
mov
and
test
andps
int3
jae
outsl
lret
ret
insb
adc
loop
stos
dec
int
insb
cmc
jecxz
lods
cmp
je
gs
cmp
sbb
rclb
repz
fldt
stc
xchg
iret
loope
cmp
jns
negl
sbb
mov
in
lcall
xor
add
fs
mov
pop
in
mov
push
or
jl
lea
pop
jnp
or
mov
addl
fisubrs
inc
push
xor
shrb
out
cmpb
push
xchg
adc
cs
jbe
or
mov
jl
js
pop
loopne
mov
gs
mov
inc
pop
sbb
movsl
push
push
rcrb
ss
or
aaa
lret
adc
mov
mov
icebp
test
cs
cltd
adc
xor
sbb
push
lret
outsb
cwtl
movsl
inc
cmc
and
dec
add
loope
in
add
mov
mov
xlat
mov
mov
out
xchg
loop
pop
push
adc
into
les
sbb
call
add
pop
cmp
cmp
rcrb
cli
sbb
test
rcl
mov
int3
pop
inc
add
shl
sti
ds
and
mov
add
lock
sbb
dec
dec
adc
imulb
pop
pop
popl
out
cmp
in
xchg
dec
mov
jb
add
dec
push
scas
fsubrp
je
jae
mov
xchg
out
lahf
adc
into
imul
xor
testl
aas
aad
adc
roll
jne
push
enter
sbb
lcall
sbb
fcomi
dec
xor
out
js
cmpsl
iretw
add
adc
cmp
data16
sub
push
pop
xchg
into
mov
into
xor
aad
jle
jno
std
fcomi
pop
std
fildl
push
in
or
dec
adc
inc
stos
mov
out
jo
jecxz
xor
in
sub
add
loopne
clc
xchg
jo
xchg
push
add
arpl
test
ljmp
xchg
std
push
insb
cmpb
gs
mov
sub
cmp
imul
cmp
into
clc
cmp
lods
or
xchg
jl
fmuls
loope,pt
mov
xor
stos
into
add
shlb
dec
enter
pop
ret
movsb
pop
sub
mov
fcomps
sbb
popa
insb
fisubl
lret
add
aaa
or
sub
dec
shll
add
sbb
adc
sub
push
aaa
call
or
in
xorl
pop
mov
lahf
lcall
mov
pop
fwait
lods
inc
insb
ja
jns
or
pop
lds
xchg
push
jecxz
xor
jmp
push
jbe
xchg
imul
adc
xor
sbb
sbbb
fbld
das
push
jno
mov
cmpl
adc
mov
negb
andb
or
inc
int3
mov
mov
leave
add
sarb
enter
dec
cmpsl
adc
aad
cmc
cmp
and
out
mov
js
ljmp
aad
shll
fldcw
inc
mov
bound
sub
jecxz
outsl
cmp
psubw
inc
imul
aas
test
push
push
mulb
jle
cmp
mov
push
repz
dec
adc
and
dec
add
pop
leave
mov
add
lods
ljmp
cmp
wrmsr
add
sub
ss
push
paddw
cmp
pop
loop
dec
outsl
fisttps
in
dec
sti
mov
mov
filds
fldenv
push
rol
jb
dec
cmp
or
push
fwait
adc
inc
pusha
adc
sbb
pusha
push
mov
mov
rclb
rcrl
xchg
mov
inc
in
mov
les
pop
push
add
dec
xor
jno
punpckhdq
cmp
push
std
roll
aam
pop
push
addr16
push
xor
push
xchg
cmpsl
mov
ret
cltd
aad
aad
cmp
mov
push
xorl
add
push
popa
int
lods
test
cmp
push
je
lods
and
popl
and
dec
pop
jge
pop
and
es
jo
or
dec
mov
int
sbb
in
cwtl
pop
inc
pop
dec
cmp
push
out
rcrl
add
mov
test
dec
movsb
mov
push
inc
aas
adc
xchg
jge
mov
sbbl
andb
sub
inc
in
dec
and
rcr
in
xlat
jbe
jb
cmp
jnp
mov
cli
mov
jae
fsubl
jmp
repnz
mov
jae
xor
ret
add
mov
ljmp
adc
mov
inc
iret
cmp
or
fadds
mov
daa
lods
jns
int
or
or
xchg
push
rolb
sbb
mov
cli
pop
fnstcw
xchg
js
sbb
push
cmpsl
les
dec
shll
mov
outsl
out
or
mov
loop
pusha
pop
fst
mov
sub
in
or
mov
daa
jl
std
adc
dec
cmp
cmc
lret
push
fldl
subb
mov
pop
stos
inc
nop
in
rclb
testl
sbbl
or
sbb
push
cmp
ds
mov
inc
lock
jmp
or
daa
in
out
jmp
jl
and
out
sti
outsb
jge
popa
nop
ljmp
or
pop
in
mov
xchg
ds
jmp
xlat
leave
or
outsb
insb
jge
push
pop
sub
int
xchg
insb
mov
mov
xor
sti
dec
jl
cwtl
pop
sbb
js
mov
gs
cmpsl
jb
pop
adc
cmpl
push
and
lcall
ja
adcl
bound
mov
xchg
or
rorl
xor
js
jl
lds
lock
cmpsb
jmp
sub
popa
sub
sahf
mov
ret
xor
or
jmp
xchg
es
mov
in
or
cmp
dec
mov
dec
mov
push
dec
push
shrl
mov
inc
and
in
rcr
xor
cmpsb
in
je
loope
jl
ret
and
insl
iret
mov
sbb
jmp
iret
sbbb
ret
xchg
imul
sub
roll
daa
mulw
std
jle
not
xchg
scas
sub
in
cld
xchg
jle
test
cmp
aas
call
jg
nop
add
inc
mov
mov
or
mov
movb
lret
pop
adc
push
aaa
sub
outsl
mov
jge
and
and
lahf
inc
cmpsl
xor
jbe
dec
bswap
dec
jecxz
mov
sbb
mov
dec
xchg
dec
dec
out
xchg
sub
popf
hlt
movsl
adc
push
mov
int
lods
sbb
or
cmp
push
and
subl
xor
in
test
mov
and
gs
cmpb
mov
addr16
dec
add
xchg
out
lock
aad
sub
push
mov
push
fcom
jecxz
jno
xchg
fmuls
dec
mov
int
cmpsb
push
fwait
lret
inc
int
sahf
jg
in
jp
cwtl
subb
popf
dec
or
cmp
mov
sub
loope
js
mov
clc
cmp
push
call
adc
int3
sbb
adc
hlt
xor
repz
adc
xchg
jle
test
push
enter
loopne
mov
or
xlat
sarb
mov
adcb
adc
pop
cs
sti
mov
push
imul
ret
aas
inc
aad
daa
mov
nop
xchg
xchg
js
lea
aaa
ljmp
xchg
stc
mov
jne
leave
dec
aas
xchg
push
sbb
pop
mov
js
cmp
push
scas
adc
pop
push
xchg
rolb
push
jno
pop
sbb
jl
hlt
les
popf
stos
xor
sbb
push
mov
push
mov
and
insl
pop
shrl
lods
jae
jp
fwait
xor
ret
int
pop
jmp
jp
aaa
stos
jns
jle
arpl
ljmp
gs
mov
cmp
mov
daa
or
sti
subb
dec
or
mov
outsb
jbe,pn
cmp
out
xchg
sahf
sub
pop
jle
popf
addl
xor
popa
cmp
mov
inc
shlb
cmpb
cli
mov
loop
test
mov
cmp
dec
clts
or
nop
hlt
mov
push
jmp
pop
sub
push
and
sbb
movsl
push
add
or
call
call
inc
add
lods
dec
repz
inc
lret
jb
das
mov
fsubrs
int3
lods
sub
int
jne
lds
stc
dec
cmc
inc
adc
cmp
mov
rcr
add
inc
cmp
xchg
cld
clc
jge
rclb
jo
gs
adc
movsb
lea
mov
ss
dec
push
push
jns
xor
mov
push
sub
and
xor
ds
inc
mulb
push
sub
mov
ret
insb
push
push
mov
js
stos
sti
cltd
mov
lea
push
incb
lods
xchg
stc
aaa
cmp
cltd
pop
aad
fwait
pusha
sub
mov
pop
je
int
aas
in
pop
rcr
and
imul
shrb
stc
imul
sbb
adc
push
data16
daa
into
cld
mov
mov
xchg
inc
jno
jmp
das
addr16
adc
stos
int
lret
outsb
jge
gs
popf
xchg
pushf
add
adc
ret
jo
rclb
mov
cmp
mov
decl
das
lahf
loope
pop
jmp
int
int3
dec
add
ror
add
das
jecxz
and
inc
je
cwtl
xchg
getsec
cmp
lds
inc
cmpsb
lock
lret
cmp
mov
or
pop
stc
ret
adc
in
stc
outsl
loopne
shlb
pusha
jge
in
xchg
out
lods
add
mov
aas
dec
dec
in
jl
sbbl
cmpsb
mov
div
inc
mov
and
adc
addr16
mov
push
cli
and
jb
and
loope
xchg
mov
mov
adc
jbe
sbb
sbb
jecxz
jb
rorl
pop
loopne
dec
mov
cli
bound
jmp
dec
int3
cmp
sahf
pop
xor
sarl
stos
jbe
jmp
jne
pop
ffreep
je
ret
mov
mov
or
cs
xchg
sub
cwtl
es
cmpb
mov
dec
add
in
inc
scas
lret
sub
add
lods
in
xchg
pop
pop
ljmp
out
cli
mov
das
sbb
repnz
mov
and
add
jg
mov
jmp
scas
les
sub
adc
ja
imul
jae
in
test
repnz
push
push
cmpsl
or
inc
in
and
int
popa
or
testb
sarb
not
sbb
in
int3
push
jg
cmp
push
inc
fldl
test
popa
outsl
and
xchg
jg
ja
mov
mov
xor
dec
xchg
sbb
jne
out
cli
cmpsl
fistps
jno
out
mov
and
test
jle
xchg
outsb
inc
xor
mov
fs
mov
fsubl
lock
push
sub
mov
cmp
adc
js
xchg
mov
insb
lods
dec
cmp
test
test
lret
jb
aad
sbb
mov
iret
jae
inc
pop
imul
addl
ja
fisubs
xchg
jge
bnd
aaa
jg
add
repz
sub
in
test
loope
test
push
sub
and
sub
hlt
frstor
xor
aaa
and
data16
or
or
sbb
jno
xchg
dec
scas
inc
aas
xchg
jno
insb
test
stos
in
scas
jb
fldl2t
daa
push
imul
loope
cmp
cmp
xlat
adc
dec
xchg
call
fstps
sub
adc
gs
jp
sub
popf
pop
xchg
jg
pop
aas
insl
icebp
xchg
cld
shl
ja
arpl
sub
xor
imul
jp
js
xor
and
test
addr16
stos
popa
add
lret
xchg
sub
mov
push
xchg
xchg
shlb
aas
jge
or
mov
mov
fwait
addl
cmc
and
adc
in
cmp
push
inc
sti
dec
mov
mov
cwtl
and
jle
es
in
push
push
sub
rorb
jecxz
hlt
jmp
cli
stos
dec
pop
hlt
in
or
cmp
addr16
lcall
loope
fs
incl
aaa
mov
stos
mov
neg
scas
mov
adcb
xchg
jnp
add
dec
fisubs
xchg
inc
add
movaps
ffreep
shrb
popa
xchg
orb
cltd
cmc
imul
sub
sub
xchg
xor
mov
sub
push
xchg
cmp
sbb
flds
jne
ret
fisubl
mov
int
test
stos
dec
sub
jl
out
add
dec
mov
cli
mov
sub
lds
das
in
nop
or
add
xchg
mov
or
daa
jmp
sub
mov
sub
ljmp
or
push
mov
in
lret
xor
mov
divl
test
xchg
xchg
out
fstl
inc
cmp
mov
cmp
push
movsb
int
jmp
pop
jecxz
clc
fadd
add
icebp
imul
pop
jp
outsl
xchg
hlt
push
adc
add
ljmp
xchg
mov
adc
test
call
adc
sbb
loop
cltd
clc
roll
mov
cmp
add
dec
andl
xchg
int
add
mov
mov
push
adc
outsl
add
stos
mov
sbb
test
push
imul
test
adc
imul
mov
inc
mov
mov
ljmp
or
fsubrs
shlb
rcrl
pop
jmp
mov
movsb
popf
mov
and
inc
and
iret
lret
shlb
nop
sub
dec
mov
insb
sarl
jbe
into
shl
add
je
pop
sarl
jg
mov
inc
outsl
xchg
push
insl
clc
mov
and
dec
dec
and
and
sub
lds
inc
push
lahf
mov
lods
test
pop
dec
and
les
cmpsl
cmpsb
dec
xlat
pushf
fistpl
pop
xchg
mov
ljmp
mov
data16
dec
xor
jns
popf
mov
es
pusha
push
in
push
mov
adc
mov
push
mov
mov
pusha
inc
popa
sbb
mov
sbbb
mov
or
pop
mov
nop
ljmp
popa
inc
add
data16
adc
aas
out
mov
pop
popa
push
ret
xor
adc
mov
cltd
push
cs
mul
or
arpl
sub
rcl
push
xchg
lret
jmp
enter
mov
jo
daa
sbb
out
test
pop
mov
xlat
inc
and
adc
xor
cmp
dec
xchg
xlat
push
push
jg
sub
inc
mov
sbb
inc
aaa
sti
and
push
clc
icebp
inc
pop
dec
xchg
adc
test
out
ror
inc
and
dec
je
xor
in
ficomps
movsl
add
movsb
fistl
rcll
sub
cld
je
gs
xor
ret
push
xor
push
fwait
test
inc
mov
out
shl
inc
cs
cli
test
es
icebp
sbb
jb
pop
in
js
orb
jbe
cs
sub
les
dec
negl
daa
jae
lahf
dec
mov
lret
inc
pop
xchg
ljmp
inc
xchg
xor
pop
and
divl
mov
dec
dec
int
rcll
das
jne
sub
movsl
cs
or
pushf
stos
jge
nop
cwtl
cmp
jp
stos
rcrb
pushf
loop
sbb
adc
ret
mov
and
and
adc
xchg
jp
cwtl
out
sbbl
movb
mov
dec
lds
test
stc
mov
ja
hlt
cmpsb
test
add
das
adc
fdivrp
enter
outsb
cmp
push
cmpl
mov
sub
movb
add
inc
sbb
loopne
inc
pop
mov
in
adc
sbb
stos
add
lret
fwait
cmp
lods
fcmovb
cmp
pop
ja
fstps
insb
in
adc
lods
mov
mov
and
cmpsb
mov
repnz
push
aad
rorb
push
sahf
lahf
mov
xchg
cwtl
push
notb
pop
inc
ss
out
aaa
jecxz
inc
test
loop
cmpsb
fimull
cmp
pop
push
fldt
sti
out
dec
sbbl
fdivrl
jb
outsb
scas
cmp
push
xchg
test
push
mov
fcomp
jbe
loope
cmpsl
push
lcall
fisttpll
push
lahf
or
mov
adc
xchg
dec
je
rclb
jmp
mov
mov
mov
jmp
mov
and
aas
cmp
jp
fwait
pop
jl
insl
fbstp
sbb
jl
jnp
jle
out
cmp
ret
ror
jb
cmp
rolb
push
popf
in
mov
loope
mov
in
lods
sub
fisttpll
xor
xor
mov
mov
mov
push
imul
mov
adc
adcb
popa
jl
clc
stc
negl
add
inc
jmp
dec
fadds
push
ret
mov
pop
aam
xor
cmp
or
sti
ret
stos
cmp
and
cmpsb
jle
hlt
inc
xchg
or
jb
xchg
mov
jp
scas
dec
outsl
orl
aad
sub
int
or
orb
inc
xadd
or
xor
gs
shlb
lahf
push
fdivrl
xor
cmp
push
jg
data16
into
sbb
xchg
pop
jmp
leave
sub
mov
pop
sub
arpl
cmp
repnz
mov
xchg
fldt
xlat
hlt
xchg
sbb
lea
loopne
ficoms
xchg
dec
and
xchg
jge
pop
mov
pcmpeqb
insl
shl
cmp
mov
lret
ss
addl
mov
dec
jl
dec
sbb
mov
pushf
inc
insl
int
test
imul
cwtl
or
fiadds
data16
mov
pop
sti
cli
imul
jno
mov
inc
adc
clc
add
jae
icebp
lods
cs
push
jbe
push
mov
xor
jns
sahf
push
lock
push
es
repnz
inc
sub
popf
sub
ja
mov
lock
dec
adc
cwtl
shrb
das
int3
out
sub
cmp
loopne
xor
aad
je
sub
adc
in
in
mov
jae
inc
and
std
sub
mov
ficoms
lock
inc
jnp
cmpsl
jb
add
push
popf
shll
mov
adc
mulb
jne
stos
jmp
loopne
and
repz
mov
push
adc
or
mov
mov
stos
mov
xor
cwtl
xor
outsl
fwait
mov
int
push
ret
cmp
lock
test
and
fwait
in
mov
lret
out
clc
scas
mov
jg
frstor
out
inc
cmpl
adc
inc
lret
scas
jg
push
je
addl
cltd
push
xchg
push
data16
mov
push
cltd
jl
push
mov
cmc
sub
sbb
sub
or
bound
frstor
mov
pop
ss
jge
insl
aaa
and
mov
and
sbb
fnstcw
cmpsl
xor
push
push
pop
movsl
mov
inc
push
cltd
and
jle
aas
mov
mov
test
mov
pop
mov
mov
sub
sbb
fisttps
shl
ret
jl
out
test
jmp
inc
pop
push
imul
xchg
mov
cmp
mov
push
push
cs
dec
add
fsubrs
mov
and
mov
mov
and
mov
pop
jnp
imul
dec
cmp
jnp
cmc
jbe
dec
shll
pop
test
bound
push
rorb
fstpl
push
incl
adc
sub
fnsave
loopne
mov
lret
or
pop
xchg
and
mov
filds
test
ficoms
dec
sub
jns
xchg
or
ja
mov
adc
insl
xor
rorb
jge
mov
inc
int
cmpsb
lock
inc
or
imul
leave
cld
mov
and
jle
repz
repz
adc
xchg
pushf
insb
cmc
loopne
daa
adc
jl
and
mov
loopne
add
mov
sahf
adc
xor
sti
dec
mov
push
mov
xchg
je
add
enter
cwtl
mov
rcrb
xor
and
lret
dec
movsb
pop
jo
stc
jg
shl
jnp
outsl
adc
arpl
out
js
insl
adc
fwait
popf
sub
aaa
push
arpl
stc
sbb
fisubrs
sub
imul
jb
adcl
test
hlt
shlb
cmp
std
les
notb
cmp
leave
sbb
jmp
outsb
imulb
or
cwtl
js
test
test
dec
pop
cltd
and
lds
and
data16
mov
stc
dec
and
mov
subl
jns
imul
popa
idivl
loop
popf
xchg
cmp
enter
cwtl
call
mov
pop
mov
adc
xchg
fsubrs
xchg
dec
xchg
lcall
out
and
jbe
stos
dec
sub
mov
pop
ss
mov
out
mov
mov
xchg
das
shrb
ret
mov
mov
movl
adc
xchg
fistpll
mov
lock
push
mov
in
bswap
and
pusha
adc
in
cwtl
lcall
pop
xor
data16
shl
test
jecxz
stos
mov
adc
je
cwtl
push
xor
xchg
ret
iret
pushf
stos
lods
in
out
cmpsl
jb
sti
dec
fs
out
mov
stos
mov
shll
cmc
push
je
dec
lock
loope
fs
mov
jno
nop
call
les
das
clc
imul
gs
or
sbb
dec
mov
ja
mov
inc
std
mov
hlt
or
fs
rep
mov
mov
push
xor
push
xor
mov
frstor
or
lods
mov
xor
shlb
jle
and
jmp
test
cmp
or
clc
movb
jae
icebp
or
jns
pusha
or
divb
mov
pop
mov
jg
xor
jg
sub
and
sbb
jl
mov
ljmp
inc
movsl
das
es
int3
cld
dec
pusha
cmp
pop
test
lock
faddl
cmp
test
push
test
lret
ljmp
pop
dec
ret
roll
fidivrs
js
mov
mov
leave
mov
rcrw
mov
xchg
pushf
mov
mov
ret
ljmp
xchg
xlat
and
mov
cld
mov
push
push
lcall
idivl
faddl
mov
stos
mov
daa
js
xor
push
fisubrl
dec
mov
ret
shl
add
out
push
cmpsb
xchg
pop
lahf
or
lods
loop
pop
sub
sbb
pop
lcall
mov
dec
arpl
enter
aas
arpl
xchg
and
into
testl
faddl
rolb
lds
inc
pop
xor
and
mov
or
mov
int
and
dec
mov
bound
cmpsb
mov
xchg
mov
mov
mov
xor
or
mov
jl
pop
mov
sub
push
dec
enter
scas
jnp
jecxz
xor
in
mov
and
out
mov
repnz
mov
sbb
shll
shl
rcll
fsubrl
stos
add
insb
sub
xchg
adc
mov
ds
push
cld
fs
aam
lcall
inc
adc
arpl
push
xorl
dec
push
hlt
into
jo
lods
or
jno
imulb
andl
pop
mov
les
nop
cli
out
ret
jbe
jbe
push
mov
dec
push
xor
jl
jecxz
mov
pusha
mov
es
mov
dec
and
rcrb
cmpsb
add
outsb
xor
push
cltd
stos
lcall
arpl
das
push
cltd
and
negb
mov
decl
lea
pop
loope
cmpb
arpl
fs
xchg
add
cwtl
insb
xchg
push
jecxz
fisttpl
and
and
repz
loope
jne
mul
nop
xchg
push
mov
xrelease
and
out
cmpb
inc
mov
out
add
mov
push
sub
movsb
pop
lds
fnstcw
add
jecxz
stc
cmp
popa
pop
test
sub
mov
xchg
cs
insb
push
xor
popf
mov
add
xchg
mov
fwait
vpunpckldq
sub
mov
lret
jb
sbb
xchg
mov
jbe
outsb
adcb
pusha
imul
ret
add
leave
mov
ficoms
push
dec
ds
jmp
inc
cmpsl
sbb
out
out
inc
rcrl
lds
inc
cmp
sahf
outsl
lret
ljmp
add
adc
ds
imul
sub
and
and
sbb
in
pop
ss
mov
mov
lock
push
hlt
pop
add
cmpsb
popf
std
icebp
out
daa
test
pop
sub
outsl
cli
and
add
adc
sarb
aaa
iret
out
fisubs
adc
fidivrs
or
xor
jmp
clc
mov
test
and
pop
xor
fdivrs
push
ds
rcrb
mov
repz
lea
popa
insl
sahf
stos
sti
sub
stos
jb
dec
push
lods
jecxz
fmull
lds
cltd
insb
mov
popa
data16
or
int3
dec
pushl
adc
mov
rorb
shrl
pop
nop
sbb
test
pop
test
int3
inc
jne
movsb
push
arpl
loopne
and
mov
mov
out
pop
push
mov
gs
lods
xchg
add
mov
and
movsb
loop
push
jmp
mov
gs
int
inc
inc
mov
adc
mov
shrl
hlt
pop
test
in
lds
push
lret
insl
adcl
inc
or
aaa
test
insl
loop
pop
repnz
fisttpll
add
sbb
cmc
out
out
clc
jo
push
sbb
xor
jmp
shrb
sbb
imul
push
jbe,pn
call
pop
repz
mov
imul
push
jns
mov
xchg
je
fildl
pop
sub
dec
lret
loop
imul
dec
or
fwait
xor
out
push
jmp
fiadds
outsb
negb
push
pop
cltd
ror
jecxz
and
rolb
data16
cmc
jl
inc
ja
icebp
mov
xchg
pushf
jno
jbe
stc
push
mov
je
scas
leave
mov
pop
adc
mov
or
mov
cmp
push
sarl
ja
dec
or
pop
hlt
shrb
stos
scas
sub
std
out
ljmp
xchg
cmp
jp
jecxz
dec
mov
sarb
insl
cmp
jg
aas
scas
loop
repz
push
push
mov
jno
repnz
loope
inc
pop
in
mov
and
lds
jnp
push
sub
push
mov
jg
scas
lods
push
out
in
stos
jb
mov
ret
xor
js
lret
mov
sahf
ss
and
test
xchg
pushf
pusha
rorb
cmp
xchg
std
das
call
push
adc
out
mov
leave
jo
iret
and
loopne
loope
test
jnp
jnp
mov
int
sub
movsl
mov
push
ret
in
imull
or
clc
je
and
cmp
push
aas
and
outsl
inc
mov
add
mov
adc
add
out
xorb
insb
sbb
inc
push
xlat
cmp
movups
push
lea
sahf
imul
push
cmp
mov
sub
es
push
ficompl
icebp
pop
sbb
mov
xor
mov
mov
mov
mov
jge
test
jbe
sbb
dec
jns
jmp
xchg
mov
xchg
stc
rcrb
cmp
icebp
cmovg
nop
pushf
es
lcall
jle
dec
jns
jg
shl
hlt
jle,pn
or
adc
push
jmp
lds
mov
pop
mov
fcmove
mov
add
push
jecxz
aas
push
fcompl
mov
dec
movsb
sbb
cwtl
and
mov
jge
cmpsl
arpl
jp
sarl
mov
lods
das
sbb
repz
add
sbb
and
ds
cwtl
and
pushf
shll
push
je
and
dec
orl
push
sti
fidivl
mov
adc
mov
sbb
mov
call
lret
movsl
ja
dec
dec
cmc
imul
jno
insl
mov
scas
push
cmp
fadds
nop
shrl
cltd
mov
sub
jp
pop
pop
call
cmp
or
fiadds
cmp
adc
fwait
std
mov
and
out
es
es
loope
cmp
aam
push
scas
fwait
imul
popa
jp
out
imul
negb
out
and
push
jg
movsl
shll
in
cmp
dec
outsl
repz
sub
pop
sbb
stos
sub
mov
inc
mov
add
mov
dec
pop
lcall
xor
mov
push
scas
mov
mov
arpl
push
push
std
jge
mov
in
mov
jae
inc
adc
dec
and
and
out
js
testb
push
scas
insl
adc
ja
bound
imul
hlt
and
fwait
xchg
push
test
dec
xor
out
xchg
mov
leave
mov
in
adc
or
jno
enter
inc
and
cmc
ret
stos
sub
mov
inc
fidivrl
fcoms
popa
inc
stc
sub
in
fcompl
sub
and
aad
pop
mov
pop
mov
imul
aad
mov
add
icebp
aaa
xchg
cmp
push
mov
or
inc
leave
dec
fists
mov
push
and
adc
ss
jecxz
mov
mov
mov
fists
dec
mov
pop
loope
dec
in
aad
call
stc
or
jno
mov
jb
pop
mov
jb
sub
mov
dec
pushf
sbb
fmuls
push
push
mov
and
inc
add
jp
jmp
xchg
out
lahf
cmp
das
lods
push
mov
icebp
loopne
xchg
add
push
mov
adc
or
mov
mov
jmp
pop
inc
sub
pop
lcall
push
adc
push
push
lcall
jae
xchg
das
nop
and
push
xchg
add
in
cmp
adc
dec
mov
mov
aaa
out
nop
mov
lret
fucomi
and
fsubrl
dec
cmp
push
roll
mov
stc
mov
adc
dec
loope
and
add
mov
or
inc
sbb
stc
mov
cwtl
cmp
fnstsw
pop
jnp
test
jmp
mov
std
dec
xchg
mov
or
fcompl
adc
push
jmp
add
adc
pushf
dec
pop
cmp
repnz
mov
daa
cs
inc
push
mov
sbb
iret
pop
in
sbb
push
icebp
add
jmp
sbb
sahf
out
cmpsb
jo
pop
sub
push
sub
repz
cmpb
icebp
and
or
or
add
loopne
mov
fisubl
into
mov
and
cmp
imul
add
mov
add
arpl
popf
add
ret
xchg
std
mov
pop
sub
pushf
stos
adc
fucomp
mov
leave
push
adc
aam
je
testb
aam
xchg
shrl
pop
test
cmp
mov
push
mov
jb
das
pop
cli
cmp
sub
ret
lahf
cmp
jp
sbb
pop
out
or
sbb
daa
lock
bound
jg
mov
loop
les
stos
xor
and
jmp
outsl
mov
loop
jp
inc
decb
and
mov
bound
jle
in
sbb
shrb
xchg
push
pop
dec
in
mov
icebp
int3
inc
inc
mov
loope
int3
mov
mov
jne
jnp
pop
dec
jmp
xchg
hlt
cmp
jmp
add
or
sub
mov
outsl
xor
sub
cmp
icebp
xor
mov
inc
sub
out
cmc
mov
dec
sbb
movsb
stos
imull
or
xlat
dec
inc
adc
stos
push
imul
xor
jno
and
ror
dec
lahf
mov
mov
lods
push
pop
mov
fcomps
push
mov
push
cmp
repnz
inc
inc
inc
out
cmpw
jae
lock
and
push
sbb
push
popa
jne
pushf
in
aad
xchg
xor
in
movsb
int3
andl
mov
fisttps
divb
mov
sub
pop
mov
push
cmpl
pop
mov
lods
subl
and
shll
xlat
mov
adc
mov
xor
jno
repz
popl
push
test
ljmp
mov
mov
xchg
sub
testb
sbb
jl
sbb
mov
jne
icebp
lret
stc
leave
or
repz
and
push
mov
xlat
ffreep
mov
mov
mov
pop
repz
fs
imul
or
jmp
sub
push
adc
mov
dec
and
pop
push
mov
pop
rcr
jg
and
cld
dec
add
add
sbb
adc
or
mov
xchg
mov
inc
add
mov
loopne
add
daa
sub
dec
je
push
add
inc
pop
lret
test
adc
cmp
pop
in
cmp
xor
cld
xchg
mov
fcos
imul
es
divl
jnp,pt
cmpsl
xchg
dec
in
fistpll
and
hlt
lcall
cmc
xor
mov
scas
adc
jns
call
push
cmc
push
aad
sub
push
scas
xchg
ljmp
je
jg
dec
fisubs
lcall
push
fs
lret
and
in
fcoml
xor
imul
cs
jp
xchg
lods
cmp
sbb
int3
mov
scas
xor
jge
push
inc
cmpsl
adcl
pop
je
test
addr16
cmp
mov
push
fmull
mov
sub
addl
xorl
and
inc
es
xchg
std
sahf
lods
sub
call
pop
clc
sub
sbb
sbb
test
je
lret
sub
hlt
pop
pmaxsw
in
mov
fldl
jp
xor
pop
pop
and
mov
mov
in
mov
cmpsl
inc
mov
enter
jl
add
popf
les
xor
mov
aam
fsubr
push
xor
icebp
sbb
push
das
cld
mov
adc
xchg
rol
jbe
push
sub
push
das
push
cmp
movsb
cmp
lea
ss
jmp
xchg
pop
xchg
mov
pop
pop
ja
push
int3
xchg
add
lods
inc
mov
add
push
popf
add
xchg
xor
insb
jno
sbb
and
inc
popa
xchg
repnz
sub
xor
out
jl
aas
or
add
add
inc
jl
mov
mov
mov
mov
sub
xor
ljmp
mov
repz
sar
add
inc
out
inc
rcrl
aam
and
cmp
inc
lods
hlt
icebp
cmpb
popa
xor
out
jnp
mov
or
and
dec
sahf
cltd
cmp
mov
xrelease
stc
mov
mov
lods
push
pusha
es
std
ficoms
mov
arpl
sbb
push
cmp
jmp
jecxz
les
dec
mov
mov
movb
inc
mov
push
xchg
fidivrl
push
in
sub
lea
cli
jg
dec
loop,pn
aaa
sbb
gs
pop
mov
sbb
mov
inc
call
aam
sub
lock
mov
das
in
notl
xor
or
adc
add
ret
shrb
lcall
sub
aaa
push
sub
cmp
mul
jb
test
mov
jno
popf
sbb
mov
data16
jmp
cs
inc
jge
mov
xor
test
xlat
mov
push
pop
pop
mov
jns
rcrl
push
jmp
adc
xchg
mov
pop
nop
mov
sub
cmp
ds
arpl
inc
mov
fidivrl
or
adc
into
test
arpl
cmp
push
xlat
out
pop
jne
inc
or
and
sbb
sub
cmpsl
jecxz
das
enter
push
in
adc
cmpsb
nop
xchg
jecxz
xor
xor
adc
lahf
out
jle
loope
jmp
jle
aas
mov
push
pop
aas
dec
cld
fcoms
fcmovnb
mov
inc
or
sbb
and
ljmp
or
loope
rorb
nop
jecxz
pop
jecxz
xor
rcl
mov
mov
ds
mov
xor
in
lcall
loopne
bound
xor
pop
mov
in
mov
outsb
call
in
push
subb
sbb
mov
mov
lea
jmp
lea
test
dec
gs
mov
xor
popa
push
lds
push
enter
jl
cld
and
push
fistl
cmp
jecxz
scas
repz
sbb
and
es
mov
lret
xchg
adc
xor
shll
add
mov
test
mov
les
lcall
jb
lds
popf
push
inc
xchg
mov
mov
jb
clc
xlat
and
rclb
dec
das
cli
add
test
cmpsb
xchg
adc
mov
idiv
stos
shll
ret
sub
or
hlt
mov
addr16
xchg
leave
sub
shlb
sbb
hlt
cwtl
ret
jmp
in
mov
xchg
aad
shlb
mov
movsl
int3
sarb
stc
add
arpl
cld
mov
out
arpl
add
daa
lahf
and
cmpsl
arpl
outsb
frstor
imul
mov
sbb
cmp
adc
inc
push
and
push
xchg
mov
shlb
push
lret
ds
mov
cs
roll
mov
inc
in
in
push
add
in
inc
mov
adc
scas
leave
cmpsl
aad
mov
jne
push
push
in
jmp
mov
xor
fimuls
mov
push
lock
sub
mov
mov
inc
jge
into
pushf
shlb
xchg
pushl
mov
pop
inc
lcall
lcall
cmpsb
jno
inc
imul
mov
mov
xchg
gs
inc
cmc
mov
ret
gs
cmpsl
addr16
cmp
out
sti
repnz
repz
dec
stos
mov
nop
gs
inc
outsb
mov
pop
or
mov
fidivrl
jae
cmp
pop
mov
lods
mov
mov
scas
pusha
xor
das
push
jo
cltd
push
pop
add
pop
bound
add
dec
ljmp
ljmp
xor
ds
cmpsl
sub
mov
or
out
sbb
into
loope
lds
jg
or
and
sbb
mov
daa
push
mov
bound
jno
je
scas
inc
and
pop
or
aam
xor
insb
lock
sub
test
hlt
in
fs
outsb
fdivs
mov
xchg
cld
mov
mov
insl
sbb
std
ficomps
pop
xchg
jge
test
insl
fs
cwtl
push
cld
lods
pop
jecxz
in
in
dec
xchg
repnz
pop
and
bnd
pop
mov
pop
ljmp
rol
jle
push
scas
mov
mov
sub
pop
fdivrs
xchg
movsb
std
js
dec
fists
add
sbbb
out
dec
add
aam
out
sbbb
xlat
pop
arpl
loop
std
enter
inc
mov
xchg
fdivrl
das
lahf
fdivs
mov
cmp
sbb
outsb
scas
popf
outsl
out
out
push
jns
mov
pop
lea
addr16
icebp
int3
pop
repnz
pushf
push
or
into
jmp
adc
sub
and
insb
jmp
loop
fisttpl
or
inc
stos
outsb
scas
or
js
lahf
adc
test
push
dec
mov
push
mov
sub
insl
cmpl
jns
notb
arpl
aas
popa
mov
lea
cmc
adc
cmp
les
sbb
out
lea
ret
out
push
testl
mov
ja
mov
sub
inc
pop
dec
xchg
hlt
add
daa
mov
jge
icebp
cmp
test
data16
cs
pop
idivb
add
jne
cld
jne
inc
sub
lahf
add
aam
aas
lret
sbb
push
push
add
push
fs
movsb
mov
icebp
lock
dec
sbb
mov
test
lods
or
lret
cs
push
xchg
fildll
insl
add
ds
ret
loope
outsl
insl
call
pop
lahf
arpl
and
mov
daa
mov
out
lea
inc
test
xlat
rclb
sub
cmpsb
push
xchg
xor
dec
cmp
lock
jecxz,pn
add
mov
rcrb
fs
jge
xchg
aas
stos
mov
cmp
pop
out
cmp
and
out
mull
lret
dec
addr16
imull
push
jge
pop
sbb
add
subb
or
out
clc
loope
push
sarb
push
pop
inc
add
adcl
ss
mov
bound
and
push
pop
ret
mov
fmull
inc
andl
jge
jl
lock
mov
insb
mov
out
dec
rcrl
pop
shlb
ss
test
rcl
mov
push
mov
cmp
shlb
addr16
pusha
add
mov
push
mov
lret
shrl
mov
sub
mov
adc
sbb
dec
icebp
lods
add
pop
sub
dec
add
mov
lods
fsubrs
xchg
lret
mov
int3
fcomip
or
movsb
in
xchg
dec
out
xor
loopne
enter
out
movsl
stc
aaa
push
jae
add
fucom
add
cmp
add
sub
xor
pop
sarb
mov
push
pop
cmp
xlat
mov
insb
jbe
fsubl
je
and
cmp
inc
sub
xchg
mov
repz
fdivr
pop
cmp
lds
mov
int3
push
dec
cmpsl
in
sub
cli
lret
jns
inc
loope
inc
arpl
pop
push
and
mov
in
dec
stos
xchg
inc
inc
jbe
dec
pop
popf
adc
jge
in
repz
clc
push
arpl
pop
cmp
jmp
xchg
lea
add
jno
push
mov
fstps
inc
test
inc
ret
scas
test
test
dec
ss
rorb
int
xchg
jo
out
xorb
or
mov
cld
mov
jle
dec
dec
cmp
mov
push
cmp
test
gs
cmp
sub
push
inc
movsb
or
test
add
jg
movsb
add
sub
pop
inc
cltd
movsb
arpl
sbb
out
nop
or
pushf
push
std
or
js
into
push
mov
mov
xor
iret
aas
mov
inc
outsb
bound
divb
cmp
lahf
js
fmul
xchg
aam
push
or
shrb
mov
sahf
out
mov
test
jnp
and
in
js
pshufw
lods
pop
loopne
out
pop
xchg
nop
cmc
mov
sbb
xchg
enter
xchg
and
ret
lods
add
dec
xchg
test
imul
lea
leave
cli
aad
dec
xchg
dec
sub
gs
arpl
xor
adc
les
outsb
lock
out
popf
push
jns
push
loopne
mov
push
in
or
cmp
cli
cwtl
jmp
xchg
popf
add
cltd
mov
js
xor
cmp
cli
xchg
imul
lahf
sbb
xlat
ljmp
mov
std
nop
jge
addr16
daa
push
jl
fiaddl
imul
sub
push
xchg
jbe
repnz
push
add
jmp
enter
popa
call
int3
in
sub
ret
xchg
sahf
jecxz
sbb
int
repnz
imul
mov
push
insb
xlat
dec
sub
shlb
xchg
adc
mov
mov
push
out
pop
pop
push
hlt
sbb
rorl
mov
ds
lds
mov
fidivrs
and
loopne
andl
lock
lds
test
jns
push
or
push
movsb
out
cli
cmpsb
push
pop
clc
mov
pop
push
push
and
dec
into
mov
jne
repnz
pop
aad
call
sar
dec
loope
sub
scas
mov
repz
add
fdiv
xor
push
pop
pop
and
shll
and
in
fcoms
xorl
in
mov
lods
jg
outsl
jo
out
xor
or
stc
sub
sub
ficoml
cli
inc
inc
lcall
outsb
out
pop
push
xlat
cwtl
lahf
and
cmp
xchg
add
sti
jg
clc
dec
jno
jae
push
push
stos
repnz
insb
js
jge
cmp
xchg
out
stc
or
daa
out
arpl
cmp
sbb
aam
decl
or
or
cmp
test
sti
dec
pop
push
jae
loop
ret
shlb
xor
cmp
cmp
addl
xchg
dec
mov
lds
aas
cli
mov
lods
fldt
xor
fdivrl
pop
push
jb
mov
xchg
xor
push
jp
mov
iret
cmp
inc
jb
leave
out
pop
xor
xchg
add
lret
dec
outsb
cmp
inc
sub
out
dec
jle
test
fucomi
mov
cmp
mull
je
les
enter
or
orb
sbb
ret
add
lods
fisubl
xlat
mov
loopne
enter
and
push
push
lods
stc
jmp
sub
pop
dec
pop
push
repnz
jmp
iret
les
pop
xchg
push
fisubrl
xor
outsl
pop
mov
lock
cmp
andl
push
fldcw
imul
jns
push
sahf
fcomi
sub
pop
and
and
lods
sti
adc
push
pop
gs
xlat
push
push
repz
push
pop
shr
data16
leave
or
push
das
jbe
jb
cld
mov
adc
cmp
popa
pop
out
fsubrl
mov
mov
lea
out
ljmp
dec
xor
fists
add
mov
cltd
mov
fdivrl
std
dec
js
adc
test
sub
xchg
push
mov
js
in
cmp
rol
insb
mov
sbb
sbb
mov
push
rorl
fdivp
xchg
call
cmp
test
enter
sub
addr16
adcb
jb
cmpl
or
push
rcrb
das
cmp
jnp
mov
fstp
xor
sub
dec
push
jle
add
mov
loop
mov
cmp
cmp
jnp
imul
test
xor
fldt
mov
or
mov
jne
jg
sti
sub
sub
mov
call
pop
fildll
add
ss
mov
mov
mov
sbb
movsb
div
dec
inc
loope
lea
pop
popf
aad
lds
aam
push
iret
push
jecxz
mov
fdivr
fs
mov
imul
std
loopne
sub
add
fisttpl
lods
jae
repnz
cmp
pop
movsl
pop
ja
cld
pop
movb
inc
callw
insl
sbb
mov
stc
jmp
ret
jge
inc
incl
subb
or
and
inc
add
ja
adc
and
inc
in
fstp
ret
sti
dec
jae
pop
dec
sbb
in
stos
mov
xchg
out
loop
ja
and
inc
or
mov
add
push
add
lcall
push
pop
icebp
cmp
dec
pop
push
mov
arpl
popf
fidivrs
mov
sbb
push
pusha
sbb
sub
out
sbb
jg
imul
bnd
xchg
test
xlat
test
mov
test
xor
adc
das
or
fs
or
inc
or
sub
add
and
rcll
push
push
aad
in
popf
xchg
cmp
xlat
cltd
in
clc
dec
imul
jb
push
ljmp
inc
and
insl
popf
lods
je
lds
cmpsl
and
dec
into
pop
xor
loope
mov
dec
pop
and
fmull
insl
dec
mov
aaa
cld
push
xchg
mov
test
lret
cmp
xchg
ja
cmp
sub
test
int
aaa
xchg
add
or
adc
scas
xor
cmp
fs
call
or
popl
fsubs
dec
dec
pop
adc
neg
sti
mov
pushf
push
rolb
adc
dec
jmp
outsb
ficompl
adc
popa
lea
and
cmp
inc
pushf
iret
xor
out
cmp
aad
mov
xor
aad
ds
xchg
mov
sub
dec
jecxz
mov
mov
mov
stc
dec
movsb
inc
dec
lock
or
not
xchg
xchg
icebp
mov
movsl
test
iret
add
push
stos
aam
rdtsc
enter
hlt
je
sub
dec
add
sbb
dec
scas
jg
ret
sarl
jb
lea
ds
jae
call
mov
cmp
jns
xor
scas
inc
add
arpl
pop
inc
dec
out
add
int
push
mov
push
jge
pop
add
cli
xor
popa
push
popa
clc
inc
and
push
pop
lods
imul
pop
xor
adc
inc
mov
push
rcr
and
pop
test
jg
sti
sbb
data16
enter
pop
pop
and
fimull
out
mov
dec
je
xor
loop
rorl
inc
push
jecxz
mov
loop
jl
push
cvttps2pi
push
iret
pop
imul
jae
test
clc
sbb
pop
orb
fmulp
js
pushf
aam
add
push
cmc
mov
loop
cwtl
subb
mov
lods
mov
or
mov
loopne
xor
or
loop
xchg
push
pop
cmp
push
xchg
push
lcall
loopne
clc
rcr
aam
jl
popa
cmp
fdivl
movsl
insl
fs
leave
lahf
ds
push
les
in
lods
pop
faddp
cmpl
and
mov
sbb
pop
jl
out
mov
mov
and
in
xchg
cmp
rolb
sahf
rcll
aaa
mov
jge
lods
shlb
push
sbb
or
inc
imul
and
jp
fs
and
inc
push
sbb
pop
xor
lock
out
insb
push
rorl
xchg
push
in
rolw
lret
mov
mov
paddd
mov
jmp
push
and
lahf
cmp
xchg
mov
loop
fwait
push
add
cmovbe
xchg
loop
mov
stos
imull
cmp
subb
enter
push
pop
pop
lret
push
add
out
pop
pusha
enter
mov
dec
pop
iret
icebp
repnz
sub
mov
lahf
js
aaa
xchg
mov
lret
ret
jae
adc
cmc
jo
stos
in
xlat
mov
adc
leave
in
repnz
inc
inc
xchg
outsl
cld
xchg
pop
pop
xor
icebp
jns
repnz
pop
jnp
pop
bound
in
jb
inc
in
mov
xchg
loopne
inc
cltd
push
out
lcall
inc
push
inc
mov
push
xchg
mov
fbld
loopne
dec
cmp
xchg
decl
sbb
test
maxps
add
cmpsl
aam
push
movsl
xchg
mov
jb
rorl
repnz
idivl
xchg
aad
dec
movsl
call
aaa
lcall
fldt
mov
add
push
jmp
push
or
test
test
repnz
insl
cmp
ret
lret
jne
enter
mov
outsl
shrl
or
mov
jno
sbb
outsb
into
or
mov
dec
xchg
inc
imul
orl
lock
adc
lcall
scas
add
lret
aaa
sub
lcall
test
jg
int
xchg
add
enter
out
xchg
dec
cmp
popf
and
incb
aaa
xchg
loope
lods
mov
mov
push
inc
adc
mov
push
imul
push
push
add
scas
test
cld
pushf
jecxz
cmp
or
mov
fimuls
push
sbb
dec
push
data16
mov
scas
sub
mov
pop
adc
out
scas
sub
push
mov
inc
loopne
jge
mov
movsl
pop
out
in
lret
in
dec
push
imulb
mov
test
mov
out
pop
stos
lret
mov
fisubs
jbe
xor
add
shlb
repz
mov
gs
imul
lahf
xchg
call
das
aas
cld
jg
jp
or
mov
test
fwait
aam
hlt
cwtl
int3
out
popa
jge
add
insb
daa
in
stos
lret
outsl
loop
and
adc
sub
mov
mov
sub
mov
cmp
jne
mov
cmp
sbb
lret
jmp
mov
lods
loop
cmp
push
add
lea
mov
cmpsl
xchg
lods
pop
pop
adc
cmp
sti
mov
lods
cli
jmp
stc
sbb
ljmp
clc
outsb
dec
add
out
jns
sti
or
pop
sub
push
jle
test
jo
push
mov
sti
add
and
jnp
stos
mov
lahf
adc
dec
loopne
lret
data16
jae
iret
loop
inc
add
jnp
out
and
lret
faddl
mov
dec
lds
mov
dec
into
iret
push
shrb
sbb
xchg
sbb
pop
xlat
scas
sub
arpl
push
shl
push
int3
shrl
ret
movsl
jmp
and
ret
sub
or
loope
cwtl
pop
mov
push
fldcw
mov
in
imul
jmp
mov
inc
aas
jns
sbb
cmp
or
enter
pushw
adc
adc
mov
hlt
test
dec
test
sbb
loopne
scas
aad
mov
lahf
lock
hlt
and
hlt
add
dec
pop
scas
bound
pusha
bound
aaa
gs
aam
sub
push
add
js
push
scas
dec
clc
jl
or
lcall
jle
jge
cmp
sar
stos
cmp
ret
in
iret
mov
or
mov
daa
fildll
push
pushf
lods
loop
push
mov
xchg
xor
dec
ja
std
or
leave
aas
cmp
leave
and
mov
xlat
pop
cmp
inc
scas
fnstenv
adc
xlat
sub
xor
mov
pop
jnp
push
push
mov
sbb
jbe
add
fistps
adc
mov
les
call
mov
xchg
mov
jb
loop
shlb
add
orb
sbb
mov
pusha
repnz
out
lock
js
je
mov
int
je
sarb
or
sub
mov
in
sarl
add
insl
pop
test
mov
jne
jbe
hlt
xchg
cmp
mov
popf
or
cli
ficompl
loop
outsl
ret
xchg
fcomi
xor
cmp
jp
jp
jg
je
jb
test
stc
enter
sub
stc
or
sbbb
mov
lea
dec
shrl
scas
sbb
out
cmp
sbb
movsl
jns
jns
insl
cmpsb
pop
mov
mov
clc
outsl
mov
xor
mov
cli
jp
add
add
in
rclb
cmpsb
dec
cmpsl
es
inc
insb
icebp
mov
mov
mov
mov
gs
inc
lds
mov
cmp
ja
cmpsb
jge
push
sarl
cmc
xchg
std
mov
mov
int3
insb
jbe
lods
xor
and
xchg
inc
cmpsb
notl
ret
jne
lock
pop
cli
mov
test
mov
outsl
lcall
xchg
xor
loop
add
insl
fldcw
pop
iret
add
push
pop
push
lcall
sti
dec
xchg
ret
rcrl
xchg
dec
stos
psrlq
test
lock
addb
sub
imul
sub
sbb
pop
mov
stos
inc
sbb
lods
dec
xchg
iret
or
ja
aas
stos
adc
popf
or
pop
fnclex
mov
cmc
or
cmp
imul
mov
sub
xor
fwait
stc
fwait
cmp
rolb
out
loope
test
push
push
leave
dec
stos
xchg
cmp
mov
loopne
gs
out
and
sub
sub
or
dec
dec
outsl
jo
fisubs
sub
stos
xor
in
rol
or
jge
add
cvtdq2ps
pusha
repnz
add
sti
and
pop
loop
dec
jmp
jp
adc
jl
stos
mov
cmp
mov
and
mov
mov
jl
xor
sahf
pop
dec
lock
aas
pushf
cli
lods
push
mov
pop
sub
cmp
adc
in
outsl
dec
loop
pop
dec
mov
in
cmp
sbb
faddl
jns
xchg
and
addr16
xchg
or
shrl
dec
mov
fbstp
jne
pop
out
add
stc
les
xchg
cmp
or
ret
cmp
jle
mov
mov
outsl
sbbb
mov
and
cmp
int3
js
in
push
mov
mov
ror
xchg
lea
imul
test
inc
xor
push
mov
out
out
mov
mov
mov
scas
push
xchg
hlt
mov
xchg
stos
ret
jns
mov
xor
sub
nop
addr16
fwait
xchg
add
int3
decb
orl
inc
popf
inc
add
push
inc
cs
outsb
xor
and
frstor
jg
lea
pop
xor
incl
push
orl
pop
inc
aad
ds
inc
xchg
repz
test
xchg
dec
or
das
adcl
int3
dec
call
icebp
push
add
xchg
and
adc
loopne
mov
inc
test
cmp
inc
ret
add
aaa
dec
sub
paddusb
push
or
outsl
sti
pop
repnz
mov
mov
inc
data16
adc
in
adc
xor
imul
std
movl
imul
xchg
mov
shrl
push
xchg
faddl
cmp
mov
or
std
sub
jns,pt
cmp
bound
mov
push
out
push
insb
sarb
or
mov
mulb
inc
stc
bound
dec
iret
mov
sub
xchg
cwtl
daa
lret
jne
popa
xorl
lcall
mov
jne
mov
outsl
jnp
push
ror
jb
dec
flds
bound
sbb
sti
fucomip
adc
xor
sub
aas
enter
sti
cld
xor
fdivrl
dec
into
add
mov
xchg
in
jmp
mov
sub
and
pop
popa
aam
les
test
sbb
enter
aas
push
pusha
and
jl
lret
jp
adc
rorl
mov
dec
lahf
inc
out
adc
sbb
push
push
scas
int3
add
mov
xlat
setae
xor
jle
inc
lret
cmp
mov
pop
test
in
out
inc
sbbl
jge
or
out
push
push
push
mov
jmp
mov
testb
or
add
dec
mov
and
xor
or
popa
fistps
cmpsl
test
out
ss
loop
mov
mov
cmp
xchg
out
mov
aas
xor
cmp
jb
lcall
mov
add
lds
rcrl
jge
shlb
test
imul
jmp
cmp
bnd
loop
into
cmp
xor
cmp
mov
repnz
add
ja
jl
in
or
adc
sti
jne
xchg
add
mov
xor
sbb
and
jl
jecxz
adc
movsl
imul
clc
pop
or
or
outsb
cltd
shlb
test
arpl
cmp
sbb
test
push
das
cmp
pop
out
mov
lret
repnz
inc
insb
mov
test
je
aaa
fsubl
test
sub
jne
mov
aas
mov
cltd
and
loopne
dec
xchg
sar
cli
cmpsl
mov
push
xchg
imul
fdiv
or
or
jns
sbb
mov
das
mov
pop
xchg
jne
aaa
fsub
fst
and
mov
sbb
dec
xor
mov
out
jb
in
fwait
les
cmp
jge
sahf
pusha
shrl
int
xchg
inc
cmpsl
imul
push
int3
aaa
xor
xchg
loopne
sbb
dec
xor
add
cld
xor
ja
aaa
pop
pushl
add
mov
inc
in
in
add
sti
xor
insb
mov
imul
bound
loop
outsb
xchg
testb
xor
aad
or
imul
aaa
ret
lcall
jb
int
adc
sub
shll
cltd
fistpll
mov
cs
jns
pop
shl
jb
mov
lahf
getsec
adc
add
mov
push
jmp
adc
pop
sbb
cltd
orl
pop
lods
fs
and
sbb
rolb
push
test
cmc
sbb
mov
ds
and
fisttps
dec
pop
add
and
xorl
mov
stos
xchg
jne
repz
push
lea
pop
repnz
mov
aam
xchg
mov
jne
leave
dec
out
or
pushf
rorl
subb
mov
stos
mov
repz
fwait
inc
add
lcall
jle
in
mov
adc
aam
jg
dec
outsb
loope
test
fildll
inc
cmpsl
cli
repnz
shlb
in
pop
fildl
repz
jbe
fs
lods
outsl
inc
add
inc
mov
sub
fildl
jecxz
mov
roll
repnz
xchg
lods
mov
pop
rclb
dec
outsl
fwait
ret
repz
pop
pop
loopne
sar
stos
add
into
dec
mov
xor
std
in
jo
sti
cltd
mov
aaa
lds
sub
enter
outsb
add
out
in
or
cli
xor
out
cmp
and
lret
mov
cmp
mov
cmpsb
clc
repz
outsb
dec
cmpsl
xor
sub
ror
or
add
stos
lret
int
daa
xchg
pop
nop
add
lods
and
xor
addr16
imul
std
cmp
inc
sub
jnp
add
adc
aad
cmp
and
or
sbb
dec
insb
jb
push
outsb
lea
repz
jecxz
mov
pop
mov
lea
bound
sub
cmpsl
in
scas
out
out
lahf
shrl
addr16
mov
xor
inc
or
fisttpl
jmp
dec
ret
out
sub
jg
lods
jecxz
add
nop
sbb
pop
jnp
mov
adc
cmp
int3
testl
es
adc
cmpsl
es
mov
push
in
js
dec
dec
or
pop
shl
push
mov
dec
and
clc
mov
inc
in
loope
cmpsb
loopne
adc
inc
pushf
in
ret
fcomi
or
in
mov
ja
cmp
mov
pop
in
sub
cld
in
inc
shlb
cmp
ret
sbb
and
mov
or
adc
inc
pop
fmull
xchg
sub
test
mov
std
faddl
flds
or
stos
cwtl
test
rorl
stos
stc
inc
adc
cwtl
and
test
mov
pop
jb
ret
inc
and
insl
dec
leave
mov
rcll
or
cwtl
xchg
cmc
lahf
incb
jb
in
mov
jmp
add
repz
imul
mov
jl
fcmovu
jmp
sbb
cmp
xchg
and
mov
aaa
lock
in
scas
ficoms
lods
das
cmpl
in
mov
cmp
data16
pop
loop
mov
dec
inc
icebp
or
or
jle
xchg
jle
rcrl
fisubl
outsl
movl
xlat
rcrb
ffree
sub
xchg
pop
jmp
lret
xor
pop
dec
xor
dec
repz
out
push
out
sub
xchg
fildl
das
pop
adc
push
cli
cmpsl
sti
outsl
rcll
pop
and
jne
jg
add
daa
xchg
leave
insl
out
insl
stos
sub
insl
cmp
inc
ret
push
rcll
sub
mov
loopew
ja
pop
popa
pop
rep
and
popl
movsl
filds
sub
cmp
fnstsw
xchg
popa
or
jno
sbb
jg
imul
lock
xor
pop
fs
add
xor
in
sarb
cltd
cmp
loope
ret
loopne,pt
sub
push
mov
mov
adc
fcompl
xor
movsb
lahf
or
lea
sub
sbb
dec
lods
icebp
inc
ljmp
mov
lods
pushl
jnp
pop
add
jnp
mov
mov
lret
push
pop
es
fistps
ds
jle
mov
xchg
xchg
int3
popa
data16
data16
psubq
leave
ss
cmp
jl
mov
cmpsb
push
xchg
jg,pt
xchg
ss
mov
fnstcw
adc
mov
xchg
sbb
ljmp
ret
inc
pop
loop
insl
pop
out
push
jae
mov
jge
dec
adc
jo
pop
and
jmp
mov
cmpsb
in
xor
jle
ja
inc
sti
out
test
ja
add
add
incl
ss
gs
subl
ficoml
sub
sub
loop
arpl
iret
sahf
mov
inc
das
pushf
or
movsl
movsl
in
shlb
jmp
push
loop
jne
imull
xchg
sbb
jg
mov
mov
and
dec
js
int
xchg
pop
aad
enter
cmp
sarl
mov
daa
xor
mov
pop
es
aad
mov
fistps
adc
jle
jle
cmp
mov
roll
daa
xor
dec
dec
pop
jl
push
pop
inc
adc
dec
shrl
aam
jb
sti
fwait
cs
lahf
into
sbb
outsl
cmp
mov
mov
push
cli
push
enter
insb
add
lods
scas
rol
rcl
ret
sbb
aam
sti
jmp
push
repz
scas
dec
inc
push
stc
xchg
fwait
sar
or
push
add
jo
addr16
adc
loop
and
ljmp
mov
mov
jb
jb
insl
mov
lahf
js
imul
enter
mov
mov
mov
jg
xlat
cltd
sbb
jp
in
insb
es
mov
push
decl
push
sahf
ds
mov
lds
fsubs
ja
mov
sahf
sub
popf
push
mov
aas
pop
dec
shrl
cmc
jbe
sahf
adc
pop
ss
inc
fucom
and
clc
sub
xor
push
or
mov
lds
push
sub
push
jnp
jo
jmp
call
jmp
popf
pop
pusha
test
fmuls
int
leave
rorb
gs
sbb
jmp
loop
jecxz
sub
fidivrl
mov
addl
ljmp
jne
push
push
inc
and
gs
addr16
inc
cmp
mov
push
aas
cmc
adc
xchg
xor
lahf
cmpsl
jns
dec
fwait
mov
sbb
push
push
mov
icebp
inc
outsb
ja
add
notl
cmp
jbe
pop
dec
inc
aam
xor
inc
stc
sub
pop
repnz
mov
js
das
arpl
movsl
inc
mov
push
push
mov
ret
push
sub
test
cmp
pop
jne
or
sar
clc
xchg
faddl
mov
pop
inc
cmp
mov
mov
dec
mov
lds
or
lahf
xlat
add
xchg
leave
out
imul
cmp
mov
add
insl
xchg
and
and
jg
icebp
pushf
in
stos
insl
mov
movsl
mov
cs
pop
sar
adcb
pop
fwait
in
adc
sarb
adc
aas
pop
mov
jbe
or
fchs
inc
scas
in
mov
popf
mov
imul
jg
sti
mov
rcrb
insl
jns
lock
jge
fs
or
or
test
stc
ja
cmp
clc
stc
aas
or
sub
dec
pop
cmp
cmpsl
testb
fbstp
push
mov
aam
push
in
adc
sbb
push
sub
push
ret
mov
sarb
clc
rcr
cmp
lods
jbe
fiadds
adc
cltd
lahf
jo
or
icebp
cltd
fnstsw
mov
mov
insb
lcall
inc
repnz
mov
cmp
movsb
out
pop
ret
or
jns
or
and
inc
xor
jns
jmp
aaa
jle
cmp
xor
push
pop
sub
popl
outsl
test
test
xchg
jae
fmull
dec
jg
dec
movl
roll
mov
xor
scas
mov
xchg
dec
loope
cmp
iret
stos
dec
fstp
xor
adc
and
push
shlb
mov
adc
out
shrl
or
scas
addl
hlt
xor
cmp
clc
jne
fsubs
inc
int3
fimuls
fcompl
jecxz
loope
mov
lods
add
ja
jo
pop
div
xchg
push
repz
es
add
push
jmp
hlt
dec
frstor
or
and
fwait
dec
clc
jae
mulb
mov
cs
les
les
in
ret
arpl
mov
addb
cmc
dec
les
adc
cmp
dec
cmp
outsb
xorl
mov
jne
push
aaa
loop
adc
stos
mov
xlat
mov
push
imul
popf
shll
or
xchg
sti
mov
pop
roll
ret
pop
sub
and
ja
dec
lds
ja
insb
xchg
mov
push
rcr
faddl
fbld
push
xchg
hlt
jl
sbb
jo
frstor
jb
adc
push
outsl
js
xchg
mov
inc
pop
xlat
jae
mov
xor
outsb
je
jnp
jne
jl
js
rclb
js
jmp
dec
arpl
jle
cmp
sub
jo
cmpsl
mov
hlt
add
jl
sub
push
int3
xlat
aam
scas
xor
jbe
cld
into
mov
sub
ds
inc
jl
jb
mov
pop
cmp
dec
in
ret
mov
int
inc
dec
lods
sahf
inc
mov
and
in
xchg
cli
mov
insl
rcll
inc
lret
pop
xchg
inc
loope
mov
shrb
pop
or
cmp
sbb
pop
push
jno
mov
loopne
jns
cmp
nop
mov
jne
rcrb
push
stc
shll
and
and
add
insl
test
movb
stos
je
loope
adcb
mov
ss
andb
jns
sub
shll
jle
js
cli
in
jo
test
dec
pop
dec
and
out
ret
jbe
mov
mov
stos
mov
sub
mov
fwait
fwait
jmp
out
adc
dec
xor
adc
xchg
dec
sub
mov
mov
enter
pop
popf
sbb
fcmovnu
std
xor
test
add
dec
lods
lea
dec
das
in
lds
out
sub
or
cmp
shll
mov
lcall
mov
stos
pop
mov
cs
mov
fsubrp
daa
mov
es
movsl
or
sti
pop
outsb
fwait
clc
sub
push
scas
sbb
mov
cmc
cltd
enter
popf
push
fwait
xor
jl
pop
push
ljmp
rcl
ficompl
xchg
or
je
mov
mov
dec
into
sub
fidivs
cmpsb
push
inc
xor
outsb
std
xchg
int3
jge
dec
push
push
mov
enter
shl
jl
jle
sbb
inc
aam
add
in
hlt
inc
jnp
adc
loop
jne
addl
mov
dec
cmp
arpl
mov
push
push
popa
mov
shrb
adc
add
movsl
cli
jne
iret
loope,pt
cmp
xchg
xor
fimull
push
fcomp
fcompl
repnz
das
push
jne
nop
ficomps
enter
out
add
pop
pop
add
and
adc
aas
mov
outsb
and
pop
pop
cmp
sarb
sahf
test
xchg
mov
push
out
popf
aas
fidivl
jl
ljmp
int3
mov
push
sar
js
jne
inc
mov
xchg
sbb
lret
jle
xor
mov
pop
inc
sti
jge
pop
sbb
cmp
repz
jns
jo
fwait
jno
movsb
sbb
aas
loop
ja
aaa
adc
mov
ds
mov
jo,pt
loop
add
hlt
xor
mov
mov
mov
xchg
push
lods
insb
shlb
sub
lea
cmp
inc
popa
or
pusha
std
dec
xor
scas
dec
int3
paddd
adc
sub
fwait
ret
fs
dec
test
mov
ficomps
fiadds
or
cs
xor
stc
repnz
cld
pusha
iret
sbb
add
sbb
jmp
adc
pop
call
inc
push
cs
inc
jmp
mov
mov
pop
pop
inc
dec
sub
ja
sbb
ds
into
add
mov
cmp
jne
outsl
adc
xor
js
jle
f2xm1
subl
cmp
movsl
pop
cmpsb
inc
pop
fdivrs
mov
sti
test
inc
xchg
mov
mov
sub
addr16
jge
idivl
or
mov
lret
test
xor
cli
test
cmp
cmp
movsb
jecxz
les
stos
or
inc
mov
pop
jne
lods
bound
push
and
shrl
dec
jecxz
addb
rcrb
sarb
jbe
and
mov
scas
mov
inc
les
icebp
rcrb
pop
outsb
mov
clc
mov
int
dec
and
sub
mov
clc
cmp
mov
idivl
sahf
mov
negl
push
icebp
punpcklwd
lcall
jne
lahf
hlt
mov
dec
push
sub
popa
sarl
jp
mov
mov
dec
sub
jge
mov
movsb
call
outsl
dec
ficomps
mov
int3
jb
fsts
mov
out
repz
aad
or
lds
jge
or
out
int
hlt
mov
clc
pushf
inc
add
add
cmp
jnp
insl
jbe
mov
jb
mov
mov
pop
add
pop
jno
mov
pop
and
add
adc
repz
xchg
shll
shr
cmpsb
mov
inc
inc
dec
shl
int
mull
out
out
jnp
push
add
sub
lahf
push
lcall
test
cmpsl
or
jne
std
inc
push
pop
int3
daa
out
lds
sub
xor
fstpt
and
pop
mov
inc
ret
jp
mov
rorl
ljmp
fstl
in
add
cmp
push
mov
mov
xor
data16
push
mov
aad
cmp
mov
cld
imul
jmp
jne
or
shll
stos
fisubrl
xchg
rclb
int3
in
out
mov
jl
push
cmp
loop
sub
movsl
pop
xor
loop
jmp
mov
cmp
mov
jns
lock
pushf
icebp
imul
lock
push
outsb
pop
ss
fldenv
cmp
mov
pop
xor
push
mov
repz
adc
xor
icebp
outsl
adc
test
addr16
aaa
mov
jne
scas
lcall
xor
inc
xchg
in
sub
adc
push
ljmp
jbe
loop
cs
cmp
adc
clc
stos
fs
dec
mov
mov
pushl
in
mov
clc
cltd
outsb
dec
ja
push
mov
sub
inc
popf
daa
jb
ss
aas
add
add
enter
into
sti
mov
orl
lahf
xchg
cmp
outsb
push
lret
lds
jg
xlat
inc
jbe
add
pop
fwait
es
jmp
in
mov
push
mov
mov
lods
xchg
sbb
pushf
test
mov
xchg
cwtl
jle
rcrl
gs
xchg
addr16
jl
test
movsb
dec
lcall
test
xchg
syscall
mov
decb
push
pop
cli
mov
out
frstor
push
loop
cmp
xchg
inc
sub
jl
cmp
out
mov
test
xchg
ljmp
inc
aas
data16
mov
out
xchg
push
ss
shrb
push
cmpsl
jo
xchg
mov
xor
in
xor
stos
adc
aad
jns
sub
cmc
xor
int
mov
imul
push
aam
aaa
adc
xchg
std
loop
xchg
xchg
mov
push
test
les
push
inc
pop
and
jnp
adc
xchg
jne
arpl
test
sti
add
iretw
pop
push
mov
dec
xor
js
mov
lret
pop
stos
cld
out
cli
jle
mov
sbb
mov
test
inc
idivb
mov
push
shlb
jmp
stos
dec
xchg
rcrb
sub
out
dec
jb
pop
in
cli
push
mov
cmc
mov
addb
outsb
fdivrl
xor
std
dec
outsb
mov
sti
hlt
sub
lock
fstps
rorb
subl
xor
sub
lret
cwtl
sbb
cltd
mov
cmpsl
pop
dec
mov
push
cmp
cmpsl
mov
cmp
cltd
pop
dec
push
sbb
cmpsb
cs
inc
in
ja
pop
sbb
add
repnz
pop
and
test
pop
movsl
inc
out
cmp
cwtl
out
fnstcw
fwait
lret
out
or
xchg
push
sub
push
in
aam
insl
jle
cli
data16
cmpsb
mov
or
pop
out
push
pop
stos
mov
fstl
xchg
push
push
adc
enter
cmpsb
push
jnp
and
fs
rcr
fildl
cld
xchg
mov
popf
fsub
cmc
or
mov
sub
fucom
push
fs
sbbb
xor
aaa
je,pn
lds
mov
cmp
cmp
inc
popf
xlat
pop
xchg
stos
jecxz
jae
shll
xchg
or
lods
fmuls
out
call
fwait
xchg
loop
push
jmp
repnz
mov
sbb
xchg
stc
pop
mov
sbb
xchg
jne
cmp
add
xor
aad
adc
add
push
and
push
pop
out
test
xchg
mov
mov
and
adc
in
mov
aas
insl
push
orb
jp
insl
mov
ja
jg
imul
jp
les
fisttpl
ja
pop
sbb
jge
into
mov
adc
pop
pop
push
ret
push
shrl
sbb
stos
mov
adc
push
loope
lea
adc
test
mov
insb
jle
jecxz
jbe
jae
xor
mov
sbb
jnp
adc
jne
jne
xchg
xor
jmp
xor
inc
sub
adc
int
fidivl
jnp
pop
pushf
vmaxps
xchg
dec
and
ret
jg
cmp
int
loopne
mov
push
xor
test
popf
in
add
pop
dec
xchg
mov
and
das
jo
test
rclb
adc
jg
xor
mov
jo
lods
daa
in
pop
pop
push
pop
in
int
inc
xor
xorl
and
aas
push
jo
push
sbb
fwait
and
fnstcw
or
pop
pusha
mov
shlb
loop
mov
cmp
lds
movsb
mov
xor
mov
push
jmp
dec
fwait
mov
hlt
jmp
sbb
out
ror
cmp
push
jle
iret
push
and
mov
pop
pop
xchg
scas
cmp
lahf
insl
fnsave
sbb
xchg
push
mov
arpl
inc
sub
fldenv
jge
add
push
jle
je
ja
in
xchg
loop
lcall
stos
adc
pop
mov
jns
fldt
fwait
mov
mov
inc
fldcw
imul
rcl
adc
xor
mov
adc
cld
jg
dec
pop
mov
mov
dec
adc
add
and
aad
or
xlat
xor
icebp
or
aas
iret
add
mov
inc
ret
inc
push
xor
in
cmp
scas
test
lods
jge
adc
xor
mov
gs
es
sar
mov
mov
mov
dec
into
shlb
xor
xchg
pop
add
insl
jl
xor
std
jmp
xchg
mov
jge
out
dec
jl
pop
fidivs
dec
jne
repnz
in
stc
adc
cmp
pop
sbb
push
jmp
add
mov
mov
cmp
das
mov
ljmp
jo
adc
add
xor
pop
jge
jg
stos
push
xchg
jge
jge
inc
and
int3
xlat
mov
xlat
ljmp
xlat
inc
repnz
and
cmp
push
xor
xchg
data16
mov
ljmp
je
insl
fimull
ljmp
fldcw
test
cwtl
and
push
out
push
sbb
add
xchg
jle
xchg
jmp
sub
and
popf
ret
dec
leave
pop
stos
fnstsw
mov
sbb
add
out
adc
jns
push
sub
sub
xchg
xlat
mov
out
sbb
stc
or
ljmp
stos
repz
sbb
rolb
mov
aad
mov
ret
ds
sub
inc
sti
cmp
fstps
and
or
sbb
lret
lret
mov
pop
bound
stos
faddl
cltd
test
sbb
cmpsb
inc
cmp
push
lea
pop
jge
leave
mov
add
jge
inc
das
cwtl
lcall
mov
jge
dec
xlat
mov
in
jge
jle
sub
push
dec
mov
aam
sub
sub
adc
pop
cli
add
sub
mov
insb
xchg
jecxz
push
repz
ja
adc
jg
mov
xchg
cli
mov
mov
movsb
mov
push
call
and
inc
pop
cld
mov
mov
add
movsb
inc
test
cmp
outsl
jmp
mov
gs
lds
lahf
and
jg
pop
pop
sub
movsl
sub
sbb
stos
sbb
pop
gs
icebp
xchg
and
dec
pop
xor
icebp
lret
dec
mov
std
push
cs
ljmp
les
mov
testb
out
adc
jb
fsts
bound
sahf
push
dec
mov
cmc
mov
clc
xchg
sti
or
and
outsl
lret
mov
cmp
sub
mov
xor
loope,pt
inc
mov
je
mov
push
idivb
jp
mov
jns
andl
cmp
pop
xor
add
sti
out
and
rcrb
adc
pop
dec
cmpsb
je
sbb
jae
mov
fstpt
dec
das
xchg
and
sub
adc
dec
xor
out
lds
jmp
cmpb
lret
fmulp
mov
js
cmp
loope
sub
aam
stc
test
call
ss
sub
jge
sub
aad
mov
adcb
inc
xorb
imul
pop
inc
cwtl
mov
lea
cmpsl
pop
jbe
out
lods
inc
dec
ror
mov
dec
xlat
subb
repnz
repnz
or
imul
inc
repnz
outsl
inc
jbe
push
sub
dec
inc
mov
arpl
popf
jecxz
sarb
xlat
push
rcrb
mov
mov
mov
inc
test
lock
enter
mulb
mov
inc
xchg
sti
pushf
sbb
test
rcll
inc
cmp
movsl
jmp
or
icebp
and
dec
xlat
out
mov
xorl
xchg
call
xchg
lods
in
mov
sub
cltd
pop
sbb
cmp
mov
test
dec
jo
add
stos
stos
sbb
test
add
mull
pop
inc
mov
mov
dec
pop
xor
ja,pt
xchg
mov
and
bound
jo
sti
ljmp
fildl
sub
add
inc
jg
out
shll
xchg
pop
cld
les
xlat
xchg
sub
jno
mov
out
ljmp
mov
push
jle
adc
cwtl
xchg
mov
and
mulb
jne
jo
xchg
out
shrl
and
inc
lods
sbb
call
jg
pop
clc
lret
cmpsb
xchg
test
jge
mov
sub
mov
ja
add
or
pop
push
xchg
int
repz
fstl
lret
movsb
lods
bnd
outsb
pop
dec
out
xor
fldl
adc
mov
jb
mov
cmpsb
cmp
into
push
and
rorb
lock
movsl
je
ret
out
in
dec
fcoml
and
in
xchg
leave
fwait
cmpsl
mov
ja
or
and
mov
mov
cmp
cli
jae
xlat
aam
fiadds
dec
mov
inc
and
inc
rorb
mov
sbb
cmpsb
jne
xlat
loope
imul
dec
lods
and
aam
jne
int
std
adc
fisubrl
adc
cmp
push
mov
ss
mov
mov
mov
movsb
inc
jnp
dec
insl
sbb
jge
mov
divl
add
or
jge
and
aas
fldt
stos
insl
or
jno
int3
pusha
mov
mov
daa
pop
fstpl
sub
adc
xor
pop
cmp
fwait
jae
repz
ss
into
jno
ja
mov
jbe
inc
movsl
test
andb
testl
movsl
xchg
mov
orl
les
jp
adc
xchg
idiv
inc
cltd
adc
pop
loop
outsb
inc
imul
mov
sub
mov
lahf
push
jmp
add
sub
cmp
fsubr
fists
shlb
xchg
pop
shl
pop
outsl
jg
fsubrs
inc
jne
mov
icebp
and
fsub
repnz
decb
ret
aas
jb
add
sbb
dec
mov
push
cmp
mov
out
add
pushf
xchg
pop
mov
and
mov
sbb
or
shrb
cmp
and
or
push
jne
mov
ljmp
xchg
fisttps
mov
push
mov
jo
cmp
or
add
jmp
cmpsb
int3
bound
popl
or
cmp
mov
add
jbe
mov
push
pop
je
dec
push
lret
pop
imul
jle
mov
sub
repnz
jo
rclb
enter
movsb
mov
mov
push
aam
add
sub
scas
fsin
loope
loopne
int
repnz
pop
xchg
mov
stos
cmp
cmp
mov
cmp
mov
xchg
dec
pop
jb
fs
mov
lods
xchg
outsb
xchg
inc
bound
xchg
cwtl
lds
shlb
int
mov
mov
mov
push
xor
shll
fisttps
inc
bound
aaa
into
xor
fnstsw
dec
cmp
push
loop
or
mov
inc
shl
jns
mov
sub
repnz
bnd
lods
mov
jno
jmp
add
xchg
orl
int
jae
xor
push
daa
inc
or
and
lods
or
xchg
pop
imul
sub
pop
add
ret
dec
stc
ds
xchg
test
mov
pop
mov
add
hlt
xchg
xchg
sbb
xor
hlt
xchg
cwtl
add
cmpsb
fidivrs
or
jnp
or
enter
mov
sub
jno
pop
call
ja
shl
mov
sub
scas
fistpl
mov
cmp
xchg
movsb
loopne
mov
mov
roll
xchg
mov
dec
sbb
jge
icebp
mov
insl
fcoml
std
ret
mov
icebp
push
mov
fists
sbb
mov
out
mov
mov
outsb
push
cmpsb
xchg
or
nop
xor
mov
sbb
ret
inc
sub
cmp
int
fsubrs
adc
xchg
daa
sarb
sbb
mov
test
and
pop
xchg
dec
arpl
loop
outsl
addr16
roll
xor
adc
fnsave
ds
pop
mov
sub
mov
hlt
sahf
pop
scas
in
or
mov
jecxz
mov
repz
cld
call
sbb
mov
adc
xchg
popa
in
out
dec
cmc
jl
xchg
mov
sahf
in
leave
std
mov
aaa
fstpl
into
pop
push
std
adc
sti
lods
test
inc
lret
and
push
imul
sahf
jle
adc
cli
sub
xor
mov
sti
lods
cmp
sahf
add
in
sub
ret
ja
xchg
mov
jp
push
jg
or
cli
mov
pop
popa
js
mov
arpl
xchg
rorb
out
or
in
clc
mov
add
jbe
push
add
cmpl
mov
mov
cmp
mov
mov
xlat
clc
int3
jmp
inc
int
dec
or
in
xchg
pop
mov
in
add
cmp
jecxz
and
lods
mov
sub
fwait
sub
xchg
inc
repz
sbb
xchg
data16
ds
loop
dec
idiv
sub
pusha
lcall
iret
clc
sub
inc
fists
stos
mov
mov
xor
sub
loopne
outsl
negb
out
xchg
nop
lods
cmpsl
adc
push
out
loop
xchg
repz
xchg
ficoml
cli
jmp
movsb
inc
decb
dec
mov
mov
mov
cwtl
pop
arpl
stos
add
cmp
sub
mov
stc
scas
add
popf
test
jp
cli
xor
adc
cs
push
mov
fnstenv
mov
adc
aas
cli
pop
jne
dec
loopne
add
les
imul
inc
adc
xor
pop
xlat
nop
test
mov
mov
mov
adc
dec
test
sbb
jo
mov
stos
pushf
mov
jp
cmpsb
cmp
or
dec
stc
jecxz
mov
pusha
dec
addr16
notl
push
cmpb
ret
or
jmp
stos
jbe
sbb
mov
pop
xor
test
xchg
jne
out
movsl
pop
fstpt
sub
ficompl
mov
mov
or
push
clc
sti
adc
pop
fldenv
stc
movl
scas
rcrl
mov
push
add
or
pusha
dec
cmp
sub
jp
cmc
jbe
fsubs
jnp
sub
jo
jno
loop
cmp
mov
push
call
push
pop
mov
test
iret
jg
fldenv
ds
insl
xchg
lods
xor
das
add
push
lcall
int3
arpl
pop
addr16
mov
sbb
addr16
sbb
jg
sub
aaa
out
dec
test
dec
dec
loop
dec
xchg
mov
das
cmp
hlt
loope
inc
pop
mov
sbb
outsl
sbb
ja
bnd
pop
mov
jge
add
lahf
xchg
cltd
pop
mov
mov
or
xchg
das
jl
jge
ror
jb
ja
call
or
fwait
jns
jbe
xchg
and
pop
push
pop
in
sti
cmp
dec
push
push
mov
call
inc
lret
ret
pop
jg
ret
nop
inc
or
mov
cmpsb
lahf
stos
imul
dec
pop
das
jno
nop
mov
push
fsubs
ljmp
xchg
adc
fidivrl
push
push
in
jbe
hlt
shl
mov
cwtl
mov
es
dec
dec
outsl
dec
push
pushf
js
jle
cmp
shl
cmpsl
dec
xchg
pop
adc
adc
outsl
pop
and
fcoml
and
mov
test
fstpt
or
xchg
aam
sub
outsl
jecxz
push
gs
addr16
rol
mov
outsb
cmp
dec
imul
pop
aas
jecxz
or
mov
add
ret
or
add
inc
sub
lods
push
and
lret
inc
out
je
enter
mov
outsb
mov
fwait
cli
push
push
dec
into
xchg
add
das
movsl
mov
jae
repnz
test
sub
cld
pop
aad
pop
jo
rolb
mov
ja
xor
ljmp
lods
push
jae
push
movsl
push
insb
adc
sub
stc
cmovo
pop
xchg
jb
cmp
fmull
fcmovb
outsl
sti
or
mov
mov
mov
clc
and
int3
into
sbb
into
int3
cltd
pop
adc
mov
and
nop
fstpl
enter
xchg
roll
cmp
popl
cmp
cmp
aas
mov
jecxz
jge
adc
push
shrb
dec
out
call
in
lods
push
sub
ljmp
call
out
mov
gs
xchg
sti
aas
xchg
add
fstpt
xlat
add
imul
and
sbb
das
rcrl
shlb
js
outsl
sub
test
das
dec
lcall
push
and
cmp
andb
pavgw
mov
cmp
jl
or
mov
push
and
fwait
push
add
repz
insl
ret
inc
sbb
xchg
fdivs
sahf
lahf
inc
dec
out
mov
xchg
imul
notb
pop
sarb
inc
ss
add
mov
fsts
lds
js
xchg
xchg
insb
imul
jns
dec
or
mov
rcrb
sub
sti
dec
data16
jecxz
les
adc
in
xchg
sbb
or
or
mov
out
arpl
pop
sahf
in
hlt
aaa
shll
jns
mov
jno
inc
les
push
jae
cld
dec
stos
pop
stos
out
add
pop
adc
pop
xchg
jns
ret
adc
lds
fs
cmpsb
xchg
loopne
pop
cli
sub
subb
mov
add
pop
sti
mov
dec
test
xor
pop
cmp
call
in
das
nop
imul
cmp
adcb
gs
pop
dec
sub
jecxz
das
in
inc
or
sub
cmp
in
cmpsl
inc
xchg
push
xchg
int
lret
mov
test
dec
mov
shrb
icebp
xchg
inc
jns
xchg
arpl
inc
nop
add
dec
mov
adcb
sub
outsl
int
jmp
cmp
out
rolb
test
xchg
add
popf
mov
das
les
decb
jmp
xor
shlb
sbb
repz
mov
xor
ja
in
pop
movsb
inc
addb
adc
imul
out
andl
rcrb
cmpsb
cs
jg
xor
fmulp
push
ljmp
cmpsb
and
sub
test
je
and
pop
popw
pop
jl
cmp
fimull
cmpl
imul
stos
andl
xor
out
fcomps
mov
std
movsl
xchg
adc
mov
xor
push
lcall
fildl
xchg
test
movsl
mov
xor
adc
pop
shlb
and
ds
cmc
mov
pushf
pop
addr16
sbb
jge
movl
jge
mov
pop
adcb
cmp
out
in
fstps
icebp
pop
imul
aam
fmull
rcrb
xlat
ja
and
int
sbb
pop
or
push
cld
lock
cmp
mov
imulb
cld
int3
dec
dec
test
pop
mov
lahf
loop
sti
test
movsb
popf
subb
sti
xchg
adc
decb
lret
lods
aam
or
sbb
push
lock
mov
adc
adc
fimull
enter
testl
dec
cli
loop
mov
lret
mov
imull
pop
inc
repnz
out
sub
es
aaa
popf
jge
sti
jecxz
test
repz
jnp
push
lea
sar
mov
fistps
test
dec
into
pushf
cmc
xor
add
pushf
mov
mov
jp
cltd
mov
sarb
add
pusha
mov
orb
lock
sti
cs
rorb
push
jle
push
dec
cmp
rcr
fsubrs
adc
jne
ds
inc
xor
sub
adc
cmp
hlt
dec
xorl
cmp
xchg
inc
pop
icebp
nop
and
mov
sbb
pop
aam
jge
subl
ficoml
sti
pop
mov
ljmp
pop
outsb
sub
js
call
aas
or
add
test
loopne
xchg
mov
mov
sbb
dec
dec
ds
ret
bound
loopne
out
arpl
add
fildll
lahf
ljmp
dec
mov
out
push
and
jns
cmp
mov
sahf
sbb
mov
fnstenv
bound
fadds
xchg
jmp
dec
xchg
mov
cli
or
in
sbbb
sbb
push
pop
sti
into
pop
and
xchg
mov
out
inc
inc
or
pop
or
mov
cmp
jns
pop
inc
mov
test
xor
mov
popa
inc
cld
dec
jg
out
pop
push
repz
add
jnp
dec
loopne
cmpb
mov
sub
dec
bound
into
xchg
sbb
inc
adc
push
cmp
pop
imul
fists
mov
out
mov
add
adc
xchg
xchg
mov
js
xchg
inc
icebp
subb
pop
xchg
mov
or
cmp
mov
test
cmpsl
in
mov
or
icebp
inc
mov
mov
pushf
cli
aam
cmp
add
mov
addr16
divl
inc
xor
call
jecxz
lea
inc
mov
mov
mov
xchg
sbb
test
mov
inc
out
in
pusha
xor
loopne
cmpsl
sub
dec
push
sahf
imul
jecxz
insl
test
adc
jns
je
insb
std
mov
inc
xchg
add
imul
lods
add
jmp
mov
shlb
add
fldl
xchg
xchg
jnp
cmpsb
leave
test
lahf
adc
pusha
das
int
dec
mov
cmc
or
jns
mov
shr
push
jo
stos
repnz
cmp
lock
pop
decl
and
cli
je
add
data16
xchg
xor
xor
xor
mov
mov
add
pop
cmc
sbb
sti
sub
jg
push
out
aaa
lea
mov
loope
fwait
jno
fbstp
push
mov
shll
arpl
sub
inc
push
int
or
and
or
adc
pop
jns
mul
jge
adc
enter
stos
inc
xchg
ret
movsb
sub
sar
cmp
sub
testl
push
test
sub
test
push
or
ss
cmc
mov
xor
ljmp
mov
in
data16
xchg
das
lret
pusha
sbb
movsb
aad
js
lret
adcl
cld
fiaddl
xchg
vpshufd
mov
mov
in
mov
jo
push
adc
fmuls
xchg
fsts
aam
sub
insb
ss
outsb
pinsrw
mov
iret
or
adc
insl
jns
pop
outsl
cmc
push
and
ret
cmp
lret
add
adc
ss
loopne
mov
dec
test
pop
jnp
fiaddl
mov
imull
test
push
and
and
rorb
jae
cwtl
les
ror
sbb
push
xchg
and
and
inc
mov
rcrl
jae
fwait
popf
jg
cmp
mov
out
lock
xor
inc
push
xchg
cwtl
sub
dec
and
and
scas
cld
xchg
shlb
jge
and
dec
fimull
push
pushf
cltd
js
pop
pop
je
out
imul
adc
add
push
arpl
fistl
add
mov
sub
pop
xchg
movl
fsubs
xchg
int
jle
sub
mov
pop
test
stos
sahf
jae
pop
xchg
mov
and
xchg
imul
lret
gs
or
mov
xlat
outsb
xchg
push
jnp
lock
rcrb
jns
push
sbb
outsl
xchg
push
fcomps
cmp
pop
cwtl
pop
xchg
filds
jmp
mov
add
lret
fnop
push
stos
and
cmp
dec
orl
mov
scas
enter
cmp
test
rclb
xchg
lret
andb
call
inc
loopne
inc
popf
in
sbb
jbe
in
test
fisttpl
adc
adc
or
insb
xor
stos
xchg
cmpsl
jmp
leave
aam
push
xchg
mov
pop
cltd
js
jp
jno
mov
mov
xor
lret
std
mov
jae
imul
push
push
pop
pusha
push
and
pop
fsubl
pop
mov
out
jns
pop
repnz
repz
popa
adc
fisubl
adc
sbb
mov
xor
push
cld
push
xor
adc
test
lods
mov
mov
lods
sbb
jo
fdivrs
nop
push
pop
mov
sbb
mov
iret
add
popf
stos
lret
pop
out
or
sub
loopne
push
nop
loop
push
leave
sub
ficompl
sub
xor
into
in
mov
pop
jge
mov
lea
sbb
int3
test
mov
imul
aas
mov
mov
iret
out
xor
xor
addr16
iret
and
lahf
jg
enter
mov
or
jp
mov
pop
push
pusha
xchg
stos
shrl
scas
jo
int
jmp
icebp
xchg
popl
xchg
mov
sbb
in
sub
out
push
xor
sbb
sti
into
dec
insl
or
or
cmp
gs
push
cltd
int
and
pop
and
aaa
jge
sbb
jo
inc
lahf
fsincos
dec
enter
jo
movsl
xchg
loope
mov
ds
dec
mov
ficomps
mov
xchg
lcall
enter
andl
jge
mov
jmp
arpl
sbb
outsb
sbb
lods
cmpsl
push
pop
cmpsl
dec
js
xchg
ja
iret
and
idiv
inc
cmp
pop
test
fistpl
lret
mov
push
call
sbb
nop
xor
and
out
mov
ret
fstl
mov
mov
push
mov
cmp
sub
ret
or
push
mov
ret
cmp
sub
xlat
cmp
cltd
xorl
jns
xchg
loopne
cmp
inc
cwtl
out
in
adc
in
rcr
sub
add
pop
stos
xor
or
imulb
mov
mov
adc
iret
fildl
mov
adc
xchg
pushf
into
jmp
or
cmc
add
gs
std
push
xor
xor
outsb
push
lret
mov
ret
sahf
mov
and
lahf
out
sahf
and
pop
jge
inc
aaa
ret
pop
xchg
fnsave
out
add
dec
mov
push
push
jo
mov
jno
jmp
xor
mov
pusha
lahf
out
push
lcall
and
sti
jnp
mov
cltd
mov
inc
mov
sti
cltd
in
xrelease
test
cmc
mov
pop
inc
shrb
sahf
scas
mov
mov
add
dec
xchg
mov
mov
push
dec
sar
enter
aaa
xor
das
add
push
sbb
and
je
or
movsl
test
mov
loope
pop
jbe
ds
mov
mov
xchg
icebp
and
in
and
fldenv
mov
mov
mov
repnz
loopne
stos
aas
mov
lret
mov
and
pop
shll
fcoms
incb
push
sub
push
dec
enter
popf
cmp
aas
push
enter
sbb
adc
xor
mov
rcrb
mov
cmp
ja
imul
insb
sub
jbe
js
idivb
int
cwtl
sbb
ret
insl
pop
movsb
xor
jg
xchg
jle
jnp
mov
jnp
sbb
inc
mov
mov
pop
mov
aam
push
scas
lahf
pop
xor
in
mov
iret
jo
ljmp
xchg
xchg
cmp
pop
lret
arpl
jge
xchg
add
insl
cmp
xchg
sbb
inc
sbb
sub
dec
xchg
pop
cmpsb
xchg
cmp
push
mov
hlt
jae
cmp
jo
cmp
shlb
and
aam
movsl
aas
push
cmc
call
xchg
mov
add
xorb
inc
xchg
and
sbb
jbe
cmpsl
imul
xchg
mov
adc
dec
leave
mov
cmp
or
aaa
push
add
ds
in
push
or
imul
enter
fldt
mov
test
shlb
fnstsw
ss
jmp
sub
push
ret
negl
dec
push
mov
test
scas
loope
stos
imul
sub
int
adc
push
sub
outsb
pop
je
in
fucomp
pop
xchg
pusha
test
add
test
and
xchg
mov
lcall
pop
and
lahf
xchg
in
dec
enter
clc
arpl
or
mov
js
sbb
mov
xchg
movb
push
push
xchg
movsl
sub
jb
or
sbb
loopne
test
mov
cld
push
gs
cmp
seto
mov
cmovns
or
cltd
pop
mov
loopne
lods
ljmp
cs
hlt
adcl
iret
or
lret
and
jg
fimull
out
xchg
lret
add
scas
scas
stc
aas
inc
pop
push
sub
loopne
xor
test
jmp
scas
xor
jmp
add
notb
add
mov
jmp
jne
inc
push
sbb
lret
and
cmp
jno
test
stos
scas
push
and
mov
jp
sub
iret
dec
and
je
dec
cmc
in
push
pop
popa
xchg
inc
gs
dec
test
outsl
sub
add
pop
fwait
stc
jb
stos
adc
mov
mov
xorb
fsubs
add
or
xchg
movsb
adc
xchg
pop
sbb
adc
xor
xchg
mov
fcomps
and
mov
jle
testb
jns
mov
les
sub
pop
std
mov
ds
adc
push
js
jl
xchg
mov
daa
cld
andl
test
jnp
mov
andb
inc
mov
lret
scas
xor
iret
mov
movsl
pop
push
jp
cmp
shrb
pop
loopne
add
or
xchg
leave
leave
out
test
mov
repz
js
scas
add
dec
mov
inc
insl
popf
jp
iret
mov
fcoml
sbb
jp
mul
rol
push
sbb
out
cltd
push
hlt
mov
pushf
aam
mov
inc
sub
faddl
testl
adc
cmpsl
jo
mov
dec
cmpsl
adc
xchg
mov
jmp
and
fsubs
add
negb
lcall
push
xchg
mov
adc
inc
sbb
xchg
pusha
stos
fsubs
sahf
mov
sbb
scas
pop
cmove
push
adc
icebp
repnz
out
xchg
test
jbe
jae
lock
mov
xor
cld
or
adc
dec
cmp
stos
add
loop
sub
jae
xor
decl
mov
rol
insl
jb
arpl
sbb
push
fmul
cmp
mov
imul
clc
imul
cwtl
dec
notb
test
call
push
dec
test
add
movsb
and
insl
dec
mov
fldl
sbb
rorl
out
xor
jle
shrb
fwait
xchg
cld
push
xchg
enter
fnsave
mov
imulb
mov
xchg
lret
popa
test
shl
data16
mov
adc
cmpsl
aaa
call
cwtl
rclb
mov
dec
mov
dec
mov
nop
out
insb
jp
push
mov
jns
xchg
cld
mov
push
add
gs
in
xchg
stc
or
fwait
jmp
jg
das
push
mov
or
lret
xor
out
push
fwait
mov
sahf
ret
jmp
pusha
push
push
push
ret
or
decb
or
out
mov
nop
jb
nop
xchg
add
lret
and
arpl
fstpt
pop
and
mov
dec
cmp
stc
out
test
aad
sbb
loop
notb
std
rorb
js
test
jl
mov
cltd
mov
outsb
cli
loop
shr
pop
cmpsl
js
inc
mov
icebp
push
push
push
add
dec
movsb
cmp
sub
and
pop
cmpl
in
test
dec
inc
sub
inc
mov
out
and
daa
loope
inc
xchg
pusha
push
test
mov
fwait
cmp
or
out
pop
pop
maxps
mov
iret
mov
adc
ljmp
and
repnz
sbb
loope
add
or
test
jmp
dec
ja
and
mov
int
inc
and
sti
lea
push
aaa
mov
pusha
xor
out
scas
pop
xor
shll
mov
xchg
out
ss
xorb
dec
test
ret
xchg
mov
jnp
negl
fnstsw
jp
cmp
inc
popa
mov
shrb
test
fcomps
aad
mov
xchg
repnz
cmp
test
xor
pop
mov
pop
pop
sub
or
lcall
dec
sar
xor
and
lret
cmpsl
jle
imul
insb
lock
or
lahf
adc
sub
popf
rorb
into
fmul
pusha
out
or
stc
jge
idivl
stos
pop
pop
mov
cmp
sub
push
lods
add
sub
push
dec
adc
movsl
loop
add
mov
pop
mov
mov
dec
lds
sub
sub
test
sbb
sbb
inc
lock
jg
lret
repz
mov
test
jbe
xorb
cmpl
adc
sbb
or
xchg
adc
addr16
test
rcll
out
add
movsb
and
add
das
jecxz
cltd
test
push
bound
xchg
mov
jno
jp
dec
adc
subb
fadd
jmp
outsb
test
push
scas
es
lock
mov
testb
push
xor
cs
sub
sbb
or
xchg
fnstsw
lock
test
int3
rolb
in
or
add
jbe
rcr
arpl
xor
testb
xor
scas
nop
lds
fs
push
cmp
leave
mov
push
pop
movsb
xlat
aas
movsb
subl
aad
fistps
ljmp
and
mov
mov
jp
xchg
ret
aam
nop
mov
and
leave
les
out
jb
int
sub
and
fs
shlb
js
mov
test
les
es
gs
rorb
xchg
test
jg
shll
rcrl
fdivl
stos
repnz
mov
push
xchg
inc
loop
cmp
imul
sub
lods
fildll
and
mov
and
cmp
cli
inc
mov
mov
jle
xor
push
fldl
xor
dec
push
and
xchg
test
jge
in
ljmp
sub
pop
mov
xchg
mov
cmp
jns
cltd
sub
mov
aam
mov
pop
push
and
xor
xchg
dec
fdivrl
hlt
sub
pop
pusha
pushw
push
inc
xchg
mov
and
cmp
pop
ds
jecxz
xchg
xchg
les
xchg
xchg
add
or
hlt
dec
sbb
aad
dec
sub
sbb
jnp
enter
mov
scas
push
mov
decl
faddl
dec
sbb
adc
aad
jg
and
shll
in
add
test
and
push
jnp
adcl
xor
loope
jle
mov
mov
rorl
dec
jmp
xchg
jne
inc
cmc
out
dec
mov
sbb
adc
xchg
test
xchg
and
nop
mov
out
jecxz
stc
xchg
rorl
iret
sub
push
out
out
add
repz
pop
add
sbb
xor
inc
and
imul
jle
loop
cmp
pop
inc
inc
cmc
mov
pop
stc
mov
stos
nop
mov
ffree
lret
push
add
inc
shll
aad
xor
hlt
pop
int3
scas
pop
test
push
repnz
sub
xor
jp
data16
scas
pop
and
shrb
jnp
popa
push
xchg
and
jl
inc
inc
movsb
cmp
lahf
mov
push
test
adcl
test
mov
insb
lret
popa
sub
dec
mov
inc
push
adcb
je
jge
sub
jne
cmpsb
jl
in
xchg
push
pop
in
xchg
and
mov
pop
mov
dec
jp
jno
adc
pop
int3
pushl
out
sbb
push
pop
ret
shll
xchg
mov
xlat
data16
ret
adc
js
dec
pop
arpl
adc
jmp
ds
sub
xor
ds
jecxz
jb
inc
push
xlat
fdivp
adcl
pushl
and
aaa
push
loope
insl
fdivl
cmpsl
mov
fwait
hlt
sbb
dec
mov
and
adc
pop
jmp
dec
mov
xchg
xor
mov
xchg
push
push
enter
adc
les
jecxz
inc
push
mov
jmp
cmpl
pop
lret
ds
fisttpl
lcall
arpl
es
push
dec
adc
cmpb
inc
pusha
aaa
movsb
fucom
js
sub
cmp
out
jmp
mov
cmp
int3
sbbl
pop
arpl
add
mov
daa
add
clc
addr16
inc
inc
fisttpll
xchg
loop
arpl
push
mulps
insl
adc
jbe
mov
sbb
mov
loopne
loope
xlat
add
xchg
and
out
jnp
aas
test
push
mov
cmp
incl
clc
push
push
cwtl
mov
dec
dec
jg
cmp
lea
jmp
data16
pop
loop
loop
mov
gs
inc
fnstenv
sbb
adc
xrelease
jb
aam
inc
xchg
mov
orl
mov
dec
rorb
mov
and
aas
mov
sbb
or
jmp
mov
es
cltd
xchg
rcrb
push
mov
popa
inc
mov
aas
rcr
adc
or
jmp
ds
repnz
push
cmc
das
cmp
xlat
test
adc
fdivp
cmp
test
dec
mov
sbb
sbb
fcmovbe
jmp
push
popf
pop
lahf
adc
mov
aad
negb
dec
rcrb
inc
sahf
inc
dec
adc
jl
insl
jecxz
subl
adc
add
mov
xor
xlat
push
das
lods
rcrb
push
cltd
push
cwtl
or
popf
mov
lds
loope
shrl
fmuls
imul
lret
lea
jl
xorb
outsb
decl
add
orb
inc
inc
and
bound
dec
mov
dec
inc
movsb
mov
lods
add
out
sbb
movsb
and
inc
add
faddp
and
or
mov
mov
insb
test
iret
insb
jo
ret
jge
cmp
cmp
cmpb
fstps
mov
lahf
insb
std
fpatan
addr16
xor
mov
cmpsb
outsb
mov
inc
lock
and
jb
jl
push
mov
das
enter
jl
jle
sbb
test
or
sub
push
add
pop
dec
add
fists
mov
hlt
cld
mov
push
cmp
mov
push
lcall
int
scas
test
in
ljmp
cld
les
cld
xchg
push
mov
mov
in
adc
inc
xchg
cwtl
test
or
add
aaa
and
sub
cmpsl
cmp
dec
ja
adc
insl
lcall
in
insl
out
xchg
jmp
js
movsb
sahf
xchg
and
push
movsb
movsl
inc
jle
push
dec
fadds
cmp
xchg
out
xor
push
mov
out
mov
in
push
out
jne
jp
cmp
aaa
rol
inc
divl
sti
jno
mov
xchg
adc
mov
mov
cmpsb
and
lcall
ret
es
sbb
add
sub
add
icebp
std
ljmp
jne
stos
cmp
test
mov
adc
repnz
std
aam
inc
push
icebp
sbb
sub
xor
xchg
and
scas
xchg
scas
inc
and
push
sbb
test
ljmp
or
add
icebp
inc
push
cltd
icebp
mov
or
std
jb
leave
iret
add
and
aas
mov
lock
jp
and
sbbb
test
iret
jge
and
imul
imul
clc
jl
loopne
stos
scas
data16
shlb
push
push
test
or
idivb
fistl
lods
mov
sub
daa
cwtl
adc
leave
xchg
xchg
aas
aaa
xchg
in
adc
jmp
pop
xchg
sbb
sub
dec
or
sbb
ret
sub
cmpsl
lea
jmp
jge
mov
fld
addr16
cmpsl
in
mov
mov
add
pop
cld
sub
test
dec
andl
mov
aam
arpl
jp
jb
or
xchg
arpl
jmp
cmp
aas
push
pop
or
cmpsl
js
test
or
xor
jo
xor
leave
push
or
in
pusha
stos
sahf
test
sbb
pop
call
pop
aas
sub
push
inc
and
push
jp
movb
cwtl
pop
cwtl
push
adc
out
call
inc
add
or
push
mov
cs
insb
adc
out
xchg
ret
jge
push
cmpsl
xchg
xchg
xor
test
xchg
cmp
cmc
cmpsl
je
push
roll
and
push
inc
jno
stos
out
adc
outsl
pop
mov
cwtl
and
loope
gs
mov
pushf
cwtl
jnp
cmc
test
adc
enter
or
ss
push
cld
fnstenv
mov
stos
bound
arpl
loopne
push
in
add
neg
mov
adc
lea
pusha
imul
lret
push
add
stc
nop
lods
xchg
jo
shlb
jo
into
loopne
lcall
sar
cmp
insb
sti
push
out
or
shl
cmpsb
test
or
js
sbb
jp
out
imul
in
dec
mov
fisubs
shll
ja
sbb
in
jne
lock
ds
mov
mov
dec
add
test
lret
jg
xlat
lcall
sub
pop
in
xchg
and
mov
dec
mov
fs
adc
cld
js
cmp
jecxz
and
pop
sbb
cld
push
mov
loop
sub
xchg
jo
push
out
cltd
cmp
inc
sub
mov
xor
incl
fwait
adc
lahf
add
push
cmp
jo
sbb
dec
inc
pop
jge
add
mov
fwait
push
pushf
jnp
lret
pop
test
xor
shll
mov
jbe
xchg
xlat
or
xor
cmpsl
pop
int3
fdivs
dec
xorl
cli
sub
mov
fnsave
mov
adc
inc
adc
cs
aam
mov
mov
std
dec
push
mov
outsl
in
sub
jbe
out
mov
dec
outsl
or
add
add
pusha
enter
fistl
mov
cmpsl
inc
cmpsl
iret
test
outsb
add
or
mov
lret
cmp
inc
jb
fwait
dec
cli
mov
add
fistpl
mov
push
adc
mov
fcmovnu
iret
icebp
add
inc
stos
ljmp
xchg
stos
in
inc
lahf
cmp
ret
hlt
and
aad
divb
jmp
mov
std
adc
and
sbb
lock
rclb
out
push
daa
sbb
fbstp
ja
ss
es
repnz
outsl
xchg
fcomps
jge
push
sbb
and
add
adc
movb
xchg
fwait
in
lds
dec
in
in
imul
xchg
arpl
jge
adc
hlt
pop
push
dec
mov
scas
cmpb
dec
fnsave
sbb
inc
mov
mov
cmp
iret
inc
outsl
push
sbb
add
mov
inc
lret
movsl
jnp
fidivs
ljmp
mov
dec
in
fcoms
orl
dec
dec
fwait
xchg
or
push
outsb
lea
dec
frstor
push
push
decl
jecxz
sbb
xchg
sbb
fidivs
movsl
out
popw
je
jecxz
adc
sahf
add
insl
and
testl
les
arpl
sahf
subl
push
jp
lcall
mov
xor
push
outsb
pop
fs
mov
sub
movsl
rcl
add
mov
sti
shrl
add
out
lret
pushf
sbb
lock
inc
mov
mov
xor
stos
inc
jns
sahf
add
fwait
insl
repz
push
inc
sbbl
es
in
or
std
jno
ret
push
mov
imul
cltd
insl
cmp
rolb
cli
mov
inc
xchg
sar
push
leave
xchg
mov
aas
in
inc
sti
xchg
jae
outsb
or
fistl
sbb
dec
or
cltd
lds
sahf
insl
andl
leave
xchg
mov
rclb
push
iret
insb
bound
fcompl
inc
ss
sub
inc
mov
pop
cwtl
xchg
jge
stc
xor
adc
jle
jno
or
add
push
xor
xchg
and
fmull
inc
mov
jns
loopne
lcall
mov
loope
les
mov
lods
and
inc
xchg
xlat
jns
inc
cmp
sbbl
clc
xchg
nop
mov
cmp
imul
jl
and
aaa
pop
mov
xchg
mov
lret
sub
push
cmp
or
ljmp
or
inc
jl
mov
lea
insl
adc
push
in
push
cmp
inc
xchg
jne
sub
adc
push
mov
jmp
adc
loop
je
lea
dec
push
nop
mov
int
jp
inc
loopne
xchg
adc
dec
in
push
int
sub
xchg
int3
mov
inc
pusha
jmp
dec
iret
and
push
js
mov
sysret
jbe
lea
fnsave
lahf
xor
rcll
inc
jnp
lcall
jge
cmpsb
aas
arpl
subb
mov
sbb
mov
mov
xchg
aaa
and
sub
dec
push
xor
out
scas
push
jb
dec
lods
pop
mov
out
or
sub
fidivs
das
mov
push
insb
test
mov
ljmp
imul
scas
jb
dec
cld
andb
cmp
and
pop
pop
in
jl
mov
leave
jae
xchg
push
pop
jb
out
dec
inc
and
inc
jo
xchg
dec
outsl
mov
addr16
xchg
cmp
mov
xor
sub
mov
dec
int
stos
inc
cmovo
sti
data16
and
sbb
mov
dec
xchg
fstps
in
jo
ja
xorl
mov
mov
repnz
pop
fnstsw
mov
add
rcll
or
jmp
inc
mov
mov
dec
das
mov
mov
lret
leave
add
gs
arpl
and
mov
xchg
shll
out
cwtl
add
outsb
xor
push
mov
inc
inc
pop
pop
or
fs
fldenv
sar
dec
popf
and
xor
mov
xor
xor
jae
push
or
pop
xor
loop
test
int3
pcmpgtd
loop
add
xchg
shrb
stos
lcall
les
sbb
push
rol
pop
jecxz
shll
adc
sbb
xchg
add
insb
lret
cmp
xchg
sbb
adc
cmp
lret
jbe
lds
icebp
jge
fs
enter
jae
mov
lods
pop
es
out
jo
push
negl
xor
mull
pop
sarb
iret
inc
sub
xor
scas
sub
aad
lcall
cmp
les
push
sbb
call
aaa
outsl
les
sbb
test
sub
aaa
lea
cmp
and
shl
or
fcmove
repz
sub
xorl
xor
jle
lock
pop
mov
shll
xor
popf
pop
jb
jle
repz
sbb
fdivrs
and
addr16
loop
pop
ds
addl
cmc
inc
movsl
shr
inc
fisubrl
jbe
mov
pop
aaa
jbe
sbb
sub
add
adc
test
sub
push
in
sub
mulb
xor
fldl
push
rcrb
cli
iret
mov
data16
aaa
inc
sahf
aas
xor
popf
iret
xor
and
pushf
jecxz
add
outsb
push
jo
push
aaa
daa
jnp
push
fsubrs
iret
lods
dec
repnz
test
lods
test
insb
mulb
push
gs
clc
and
in
nop
in
add
xchg
andb
ret
jmp
cwtl
sbb
sub
insb
adc
xlat
and
pop
dec
push
fwait
sarb
outsl
test
sbb
sbb
dec
icebp
fsubrl
pop
mov
shlb
popf
push
sub
mov
or
rclb
pop
push
lea
jo
dec
or
ret
cmpb
sub
or
shlb
pop
pusha
mov
outsb
in
push
mov
sti
jnp
sub
sub
es
mov
fadds
aam
shll
mov
xchg
jnp
or
cmp
int
push
or
shrb
es
fdivs
xchg
adc
popa
aam
incb
cmp
lods
inc
mov
mov
add
in
mov
lcall
jns
icebp
mov
cld
mov
out
xchg
adc
mov
loopnew
js
sti
xor
xor
cmp
pop
mov
cmova
jecxz
fsubl
jb
lods
xor
call
mov
adc
sbb
mov
add
icebp
int
dec
push
stos
decb
out
leave
and
int
cmpsl
pop
fadds
sbb
hlt
cmp
jmp
jne
sahf
pop
pop
mov
in
mov
testl
shrb
sbb
orl
into
xchg
mov
lret
repnz
lretw
ret
out
jg
adc
daa
js
push
icebp
mov
rorb
enter
mov
aas
nop
jnp
push
jp
rolb
es
lret
adc
inc
sub
fcompl
ljmp
fs
xor
mov
pusha
testl
popf
mov
scas
cmp
cmp
andb
inc
sub
clc
pusha
sbb
cwtl
enter
adc
outsb
cwtl
xor
popf
mov
sbb
push
mov
sbb
lock
pop
cli
out
int3
sub
sbb
pop
jo
pop
mov
sahf
jmp
hlt
sub
mov
pop
jg
mov
xor
in
inc
mov
fneni(8087
xchg
pushf
mov
sahf
add
jg
pop
out
out
add
sti
push
jnp
pusha
adc
sarb
jge
inc
dec
add
lea
add
clc
sahf
adc
xor
push
cmp
inc
fistps
fs
repnz
pop
fsub
lea
jnp
stos
popf
lods
sbb
xor
cli
gs
mov
dec
test
movsb
cmp
xchg
mov
inc
pop
sbb
and
fisubl
rdtsc
dec
xor
push
mov
cmp
sbb
pop
and
mov
xchg
inc
mov
jl
out
adcb
adc
mov
cmpsl
imul
divl
inc
les
incl
push
data16
in
lcall
and
adc
out
aaa
cmp
mov
rcrl
aaa
add
pop
in
cltd
xchg
sbb
jmp
daa
cmc
mov
jge
xor
pop
sub
jno
xor
inc
jnp
shr
outsb
mov
out
loopne
push
jmp
pop
jno
cmp
jmp
fmul
jmp
cltd
inc
mov
push
hlt
adc
pop
jns
daa
push
xchg
out
icebp
pop
xchg
ja
sub
aas
addr16
cli
arpl
stos
sub
mov
add
out
cltd
dec
push
jae
xor
out
push
test
lock
inc
arpl
sbb
test
or
sbb
pop
xor
cmp
test
outsl
ret
insb
fisttps
mov
jp
test
out
pusha
mov
loope
mov
jp
aas
out
inc
push
add
decl
ret
pop
in
sbb
jmp
jne
jle
test
shrb
push
pop
jmp
inc
iret
xor
outsl
divb
lods
call
popf
imul
test
call
mov
sbb
push
add
pop
mov
push
mov
iret
and
cmpsb
cmp
out
outsb
ljmp
inc
mov
das
jbe
fsubr
adcl
divb
in
inc
pop
sub
cmp
outsl
cwtl
mov
pandn
add
ret
rcll
insb
cmc
mov
mov
movsl
sbb
aam
and
or
stos
adc
jne
scas
shl
aad
adc
push
pusha
les
mov
inc
out
jl
jb
cmp
fiaddl
push
int
sub
sbb
test
daa
nop
lea
sbb
inc
orl
xor
jle
dec
negl
insl
lahf
sub
mov
xor
mov
mov
bound
in
test
cwtl
mov
or
or
out
and
mov
mov
push
jns
or
xchg
es
adc
lret
jl
cmpsl
cld
cltd
push
pop
pop
jo
add
cs
arpl
flds
xlat
pop
sub
je
jp
mov
or
or
rclb
in
in
pop
rcrb
sub
mov
cmpsl
jb
xchg
cli
jl
rcll
add
xlat
and
cmp
adc
sub
ficompl
sar
mov
call
push
sbbb
push
mov
mov
adc
insb
movq
das
nop
in
bound
cwtl
ds
jo
mov
jl
lds
push
daa
aad
or
jge
lds
out
adc
add
mov
mov
cmc
mov
cmpsb
xchg
inc
incb
mov
mov
leave
push
add
dec
fs
inc
test
call
idivb
fistps
push
pop
mov
je
sub
cmpsl
cmp
xchg
shrl
in
fnstcw
cmpsl
and
mov
fmul
dec
push
sub
popa
jge
pop
pop
xchg
cmpsl
and
test
ja
inc
popf
fcoms
xchg
sbb
sbb
rcrb
mov
push
lods
outsl
jl
mov
mov
sub
and
vrsqrtps
jne
pop
loop
int3
sarb
hlt
sub
ret
sarb
mov
and
add
mov
xor
or
sbb
dec
jmp
push
nop
push
mov
imul
pushf
decl
scas
xchg
sbb
pop
and
cmp
data16
fiadds
rolb
aaa
dec
push
mov
mov
xor
stc
fs
stos
inc
pop
shrb
xor
outsb
or
mov
jl
test
loopne
fxam
push
lret
inc
mov
dec
mov
shll
xchg
leave
cmp
dec
gs
push
dec
xor
sbb
mov
pop
repnz
push
inc
mov
lret
mov
xor
fmuls
push
pop
add
jbe
dec
inc
sbb
pop
leave
jp
scas
aam
add
test
push
sbb
div
mov
adc
lods
jne
outsb
clc
cmp
pusha
mov
xor
popf
xchg
push
jecxz
and
out
out
cmp
xchg
sbb
xchg
enter
mov
jl
in
mov
mov
xchg
andb
pop
xchg
add
cli
add
fwait
jns
and
mov
adc
jge
sbbl
in
out
fiadds
jmp
rcrl
fwait
mov
lods
das
jecxz
inc
pusha
ror
xchg
ret
pop
xor
mov
decb
add
pop
inc
and
push
or
aam
sub
cmp
pop
add
decl
and
fisubs
sbb
mov
or
mov
out
xchg
out
jne
dec
scas
adc
or
fwait
pop
and
test
lods
cmpsl
cmp
hlt
clc
enter
mov
enter
mov
sbb
xchg
pusha
ss
mov
incb
in
cmp
mov
stc
push
cld
loop
push
outsb
lea
sub
and
cli
pop
and
pushf
xor
add
popa
jecxz
sub
jne
or
sbb
dec
cli
xor
jno
lea
test
mov
pop
repz
push
mov
xchg
gs
cmpsl
lods
fsubrs
roll
insl
pop
inc
mov
or
jge
cld
mulb
roll
push
mov
in
loope
outsl
dec
xchg
outsl
adc
dec
add
dec
sar
gs
stc
cltd
aam
or
xchg
out
repnz
inc
mov
ret
push
jae
and
and
xchg
push
sahf
mov
lahf
jg
pop
leave
mov
adc
fwait
cmp
movb
hlt
movsb
pop
inc
xor
jg
dec
icebp
adc
cmp
pop
and
jbe
das
push
mov
adc
dec
cltd
and
out
mov
test
push
mov
xchg
sbb
jle
inc
mov
insl
pop
push
jle
mov
dec
lcall
js
jg
test
mov
in
push
mov
bound
iret
and
mov
andb
nop
mov
jae
dec
sbb
mov
cmp
insl
dec
shll
movsb
push
adc
mov
lcall
jg
push
add
lcall
cmc
xor
filds
inc
jb
mov
outsb
push
enter
inc
mov
inc
pop
mov
dec
test
ds
xchg
jne
inc
or
fistps
dec
and
sbb
pop
out
fisttps
sti
dec
aas
mov
aam
mov
rorl
gs
and
jmp
jge
aas
gs
push
ljmp
mov
outsl
aaa
mov
push
mov
fisubrl
out
enter
xor
mov
jb
sub
sbb
mov
hlt
cld
xor
mov
jb
push
stc
xlat
add
lods
insl
das
fcoms
js
lods
insb
daa
xchg
mov
bound
xchg
mov
std
mov
add
movsb
aam
and
mov
jecxz
push
les
push
fdivrs
arpl
pop
pop
push
outsb
imul
dec
lods
out
xchg
xchg
and
cpuid
sbb
xor
xchg
pop
mov
andb
fs
cld
push
jl
pop
arpl
dec
movsb
cmc
push
test
sub
popf
add
cmp
pop
std
cmp
mov
add
pop
pop
cmpsb
xchg
aad
dec
mov
jmp
mov
fldenv
in
fsubs
push
test
loopne
mov
mov
call
mov
pop
inc
je
rolb
lret
inc
lods
fst
in
or
mov
jmp
mov
out
repz
mov
adc
inc
imul
int3
or
xchg
insl
test
insb
ja
xor
repnz
out
mov
fiadds
cmp
sbb
push
les
lcall
inc
xchg
pushf
gs
in
data16
rorl
mov
aad
push
mov
xor
mov
adc
cmc
arpl
das
stc
mov
or
push
dec
jno
gs
lods
rcrl
inc
mov
mov
repz
cmp
addl
rcll
outsl
and
sub
add
test
out
jl
dec
inc
ret
push
mov
mov
xchg
sti
xlat
cmpsl
dec
lods
lods
rcrb
movsl
into
mov
mov
cmp
fwait
pop
lret
lcall
shr
xor
dec
pop
pop
pushf
mov
mov
dec
jnp
lods
mov
loop
fcmove
jo
pop
mov
cltd
mov
adc
or
or
icebp
es
mov
lock
pop
adc
jp
cmp
leave
hlt
scas
cwtl
or
add
mov
dec
fwait
popf
mov
dec
mov
xchg
or
xchg
xchg
sub
dec
xchg
test
xchg
add
pushf
jecxz
jge
pop
stc
pop
push
addl
jnp
cltd
les
stos
push
mov
mov
xchg
repz
mov
jbe
adc
int
cmp
xchg
jns
push
adc
pushf
int3
push
inc
test
pshufw
out
push
pusha
out
lret
movsb
pop
mov
mov
out
push
or
fnsave
push
add
jo
imul
stc
cmp
test
xchg
mov
cmc
ret
pop
add
pop
mov
jae
sti
insb
and
repz
fs
mov
cmp
mov
stc
mov
fsubrs
cmc
out
std
rcpps
mov
call
cwtl
andl
jno
movsb
push
jb
into
sbbl
sbb
aaa
sbbl
inc
hlt
out
push
inc
mov
pop
vphaddubw
fcomps
pop
lods
jle
add
lahf
add
mov
jmp
std
outsb
jge
sbb
cltd
cmc
push
stos
mov
mov
xchg
adc
jmp
fdivrs
cli
xchg
inc
or
hlt
loopne
stc
cmpsl
and
push
fdivs
xchg
push
sub
clc
xchg
fdivrl
test
push
xchg
push
popf
ljmp
stos
ljmp
ljmp
mov
enter
aas
mov
xor
leave
add
dec
push
push
sub
aad
fstps
scas
testb
dec
adc
cmp
inc
xor
push
inc
xchg
or
insb
leave
and
push
stc
pop
rcrb
call
sbb
fwait
ljmp
mov
test
push
ja
mov
shlb
addr16
add
repz
mov
iret
js
mov
std
xchg
push
fildll
sarb
aaa
fidivl
cmp
jbe
sub
cld
mov
aam
aam
fidivrs
call
addl
mov
adc
in
div
push
pushf
sub
les
xchg
fisttpll
and
icebp
shr
cmc
cld
add
lock
or
pop
outsl
out
dec
unpckhps
xor
and
pop
mov
outsb
cmc
add
inc
cmpl
add
mov
jl
fst
mov
push
mov
xor
add
mov
and
in
test
push
rcr
out
std
test
mov
test
dec
jns
or
push
push
leave
push
gs
fs
negb
jmp
fdivrl
mov
neg
push
xor
movsl
jmp
sbb
stos
loopne
inc
rcl
and
lcall
or
mov
sbb
fwait
cmp
lock
jno
aaa
jnp
loopne
inc
add
incb
inc
adc
mov
hlt
mov
adc
lods
rcrb
fstpl
bound
mov
mov
mulb
subl
jp
jbe
repz
add
orl
fwait
pop
mov
ss
lods
xorl
scas
stos
pushf
movsb
xchg
pop
mov
sbb
test
popf
xchg
push
lahf
push
aas
mov
orl
ja
bound
dec
fldenv
iret
iret
mov
adc
in
pop
sub
push
fwait
or
je
inc
sub
insb
push
pop
jp
mov
arpl
inc
xchg
clc
testb
cmc
shrl
stc
mov
inc
jg
cmp
daa
test
out
leave
xchg
jl
adc
hlt
xchg
xor
pop
cmc
jmp
push
mov
and
out
add
xchg
or
cmp
add
sub
cmpsl
ret
push
out
jne
lock
lret
cmc
jb
pop
push
mov
lea
aas
out
push
cmp
iret
in
lcall
and
shlb
cmpsb
add
mov
lahf
mov
jmp
fstpt
push
add
fists
das
mov
push
fidivrs
adcl
mov
mov
scas
pop
adc
and
xchg
push
repz
into
in
or
push
mov
jecxz
mov
mov
mov
mov
push
mov
push
pop
into
addl
jns
loopne
daa
lods
inc
fidivrs
jl
inc
lret
push
stos
out
push
clc
mov
mov
arpl
out
jmp
stos
stc
cmp
mov
insl
out
sbb
in
or
js
addl
sbb
sarl
mov
pusha
mov
insb
mov
adc
subl
pop
test
adc
mov
and
sub
in
push
fdivl
call
pusha
xor
or
pop
repnz
push
jge
es
shlb
arpl
sbb
cmp
and
mov
idivl
pop
mov
xor
lea
js
fsubrl
push
cmc
push
lock
and
enter
jge
add
sbb
push
pusha
adc
test
sbbl
divb
pop
push
sbb
sub
fldcw
dec
sbb
fucomi
sub
pop
jbe
jl
fmull
in
out
imul
cmp
xchg
ljmp
inc
mov
test
cmp
shll
mov
std
bnd
xchg
pop
test
cmpsb
negb
mov
push
icebp
test
pop
fists
dec
jnp
mov
ja
out
test
add
in
call
jo
pop
and
mov
push
xchg
inc
xor
pop
fisttpl
mov
mov
and
inc
in
ss
les
outsl
popf
push
inc
ja
ds
nopl
bound
push
sbb
pop
adc
les
aad
sub
addr16
shlb
xchg
inc
out
mov
cltd
push
mov
adc
outsl
movsb
aaa
loope
jge
in
xor
push
or
movsb
pop
mov
mov
mov
jno
xor
sbb
sub
iret
add
xchg
fdiv
test
jno
add
shll
lret
mov
inc
xorb
das
je
fucomip
cmpsb
push
or
shlb
scas
leave
jns
into
push
inc
rcll
in
cmp
xchg
lds
repnz
xchg
frstor
imul
sbb
mov
or
fisubl
adc
lahf
and
sub
inc
mov
push
mov
xchg
mov
push
adc
push
ds
aad
movsl
int
fstpt
outsl
fildl
sbb
sub
aas
rorl
xor
repz
negb
dec
mov
test
int
nop
pop
sti
cmp
call
test
lcall
loopne
and
xorl
cmc
hlt
fimull
mov
lcall
pop
leave
push
pop
in
loope
aad
jge
es
mov
cmpsb
mov
scas
jbe
or
pop
push
mov
xor
std
jmp
dec
sub
push
lds
pop
icebp
jo
adc
cmp
sti
out
jg
stos
xchg
xchg
cltd
daa
dec
and
lods
ljmp
sti
rcll
mov
push
insb
jbe
clc
jecxz,pn
scas
mul
mov
inc
mov
inc
sbb
xchg
xchg
fmul
arpl
pushf
outsl
mov
pusha
add
or
in
or
loop
xchg
push
dec
fs
push
sarl
fmul
ret
sbb
les
xchg
cmp
xchg
mov
sbb
call
sub
jo
or
push
ljmp
mov
adc
repnz
fcos
bound
and
ljmp
addb
in
adc
add
stos
sub
adc
aas
or
xchg
add
xor
repz
aam
movsb
cs
arpl
pop
add
and
test
sbb
mov
jnp
leave
adcl
adcb
call
jne
out
scas
adc
push
jecxz
add
sub
cmpsb
ja
mov
or
inc
pop
xchg
or
sub
xchg
xor
jmp
inc
in
sub
push
push
add
in
xor
pop
push
add
mov
pop
int
sbb
mov
cmpsb
cli
jecxz
add
scas
inc
jmp
loope
rclb
add
adc
dec
add
cmpl
mov
scas
imul
push
sti
and
push
test
mov
add
scas
pusha
cmp
jb
push
stos
pop
addr16
mov
addr16
sti
push
clc
or
xchg
sahf
mov
xor
mov
fidivs
inc
xchg
mov
out
int3
stos
popf
fldcw
and
js
sub
arpl
mov
push
out
dec
add
xor
jnp
xchg
jp
add
mov
push
pop
shlb
lahf
out
lods
repnz
repnz
das
jb
xor
scas
mov
add
inc
add
mov
nop
adc
inc
and
mov
sbbl
scas
cmc
or
xchg
cwtl
sub
je
sarb
mov
das
in
lahf
mov
adc
mov
xchg
ret
mov
sbb
push
mov
lret
hlt
push
fcoml
ja
je
add
lret
fs
dec
test
stc
rorb
cmp
cmc
je
inc
pop
movsl
inc
stos
popf
lock
dec
inc
or
into
mov
xchg
or
pop
sarl
push
test
repz
notl
out
scas
test
xor
sbb
push
mov
mov
lret
out
test
pushl
mov
xchg
bound
sub
cmc
dec
pop
dec
cmp
popa
push
arpl
jge
rcrl
push
addr16
mov
push
ficoms
or
add
pop
mov
xlat
xchg
nop
jno
cmpsb
dec
in
sbb
jne
lahf
mov
mov
lock
lods
and
mov
cltd
imul
mov
lret
push
ljmp
sbb
stos
jge
add
xchg
in
dec
idivb
adc
mov
push
adc
cmp
mov
je
stc
shrb
sub
xlat
sub
push
dec
pop
inc
sbb
inc
repz
jns
aad
adc
cmp
scas
in
mov
xor
cmp
mov
pop
dec
sbb
jb
insb
adc
inc
fisubrs
scas
lods
ret
inc
sub
xchg
jl
mov
lods
push
cli
jns
adc
mov
push
jbe
push
pop
je
push
jb
bound
sahf
dec
xor
cmc
xchg
pop
sbb
xor
ds
ja
inc
wbinvd
out
hlt
lea
pop
fmuls
pop
lret
in
cmpsl
push
inc
test
cmp
int3
xorb
mov
inc
aad
loope
xor
enter
mov
xchg
adc
dec
sbb
push
dec
jmp
cmpb
push
outsb
cltd
loope
ficoml
mov
rorl
repz
outsl
cmc
mov
mov
lock
pop
adc
arpl
adc
movsb
repz
add
ss
or
sub
add
testb
xor
insb
cltd
cli
cmp
pop
push
mov
mov
inc
stc
adcb
outsl
test
movsl
test
push
push
idivl
test
ljmp
fs
push
mov
lret
xchg
cmp
pop
aas
push
or
insl
inc
cmpsl
adc
xchg
rcll
cmc
or
and
ja
ror
mov
int
add
jg
jle
ja
in
faddp
adc
jae
jmp
addr16
sbb
dec
dec
push
and
ja
sub
mov
mov
jbe
daa
jo
add
sbb
xchg
mov
fimull
jmp
lahf
lret
pushf
dec
shll
fisttpl
nop
fcoms
sbb
mov
mov
fldenv
test
sarb
mov
mov
ret
adc
xchg
mov
mov
adcl
jne
sbb
in
xor
mov
dec
mov
mov
mov
lret
popf
mov
mov
xor
test
pop
aam
lods
cmp
dec
popa
outsb
ljmp
sarb
dec
inc
clc
test
and
lds
lahf
and
in
adc
jo
pop
sbb
sbb
aas
cltd
pop
lds
jns
add
out
or
or
je
xor
lea
in
loope
inc
shll
jne
aad
pop
xchg
imul
jnp
push
lcall
push
jbe
inc
mov
mov
sub
and
loop
ret
lret
pop
or
or
dec
sub
xchg
and
jno
mov
pop
pop
jno
iret
int3
loopne
das
xchg
xchg
push
jns
dec
fcompl
cmc
sbb
ja
fcmovu
repz
xchg
and
dec
data16
aaa
mov
jp
and
sbb
xchg
jne
xor
pushf
dec
add
mov
imul
xor
jl
sbb
scas
shlb
xchg
and
lret
das
mov
jecxz
pop
sti
inc
mov
mov
ja
and
mov
and
xlat
jnp
fnstcw
xor
mov
or
push
dec
mov
and
push
push
cwtl
icebp
orb
jo
mov
jge
and
xor
xor
lods
js
test
sbb
add
push
test
adc
xor
adc
jbe
jne
jnp
push
insb
jmp
shll
mul
sarl
rcl
xor
and
fadds
mov
mov
xchg
mov
lock
icebp
push
out
and
xor
icebp
fstps
cld
mov
cltd
adc
movsb
scas
jbe
dec
push
in
cmp
pop
clc
cmpsl
jecxz
mov
dec
mov
loop
xor
or
fcmove
adc
and
lock
or
in
pop
sub
push
ljmp
fidivs
outsl
mov
ja
popf
mov
mov
imul
ja
jb
push
popa
sti
mov
daa
ret
jle
decl
sahf
fsubrl
sub
enter
int3
push
push
xchg
pop
adc
ret
and
jp
das
test
xchg
jp
das
push
or
cmpsl
jmp
cmp
jge
fidivs
adc
lock
int3
imul
shr
ret
mov
addr16
fisttpl
jge
out
dec
aad
cmpsb
fldenvs
aam
sub
scas
push
adc
push
xchg
cmp
dec
jne
and
mov
imul
sbb
ret
mov
orl
cmpsl
lcall
mov
std
pop
push
inc
imul
scas
cmp
insl
mov
arpl
rorb
adc
add
add
insl
jmp
out
mov
hlt
es
and
mov
mov
or
enter
aad
stos
push
inc
movsl
push
or
in
cmp
or
push
adc
jb
out
cmp
adc
and
sub
fldenv
xor
test
stos
dec
pop
int3
dec
out
sbb
xchg
in
dec
and
leave
scas
scas
jl
xorb
xor
cmpsb
fimull
jmp
mov
icebp
sbb
stos
push
mov
inc
lret
mov
dec
mov
push
fwait
ret
pop
xlat
into
pop
rcl
shr
lret
fcoms
test
mov
sahf
fdivl
sub
les
xor
pop
ljmp
mov
pmaddwd
fsubrp
stc
popa
lds
push
adc
and
aas
adc
rolb
fists
xchg
jg
inc
dec
test
in
lret
outsl
cmpsb
das
shr
arpl
or
xchg
dec
daa
loopne
mov
xor
xor
hlt
popf
sti
mov
into
inc
mov
xchg
mov
call
rolb
pushf
cmp
pop
xchg
cwtl
dec
mov
and
test
cmp
or
insl
fdivl
cltd
repz
jb
cmp
cltd
fldl2t
outsl
repz
lcall
mov
push
test
sbb
shrl
dec
ljmp
sub
cmp
sbb
cs
int3
inc
imul
insb
jp
rorl
add
xchg
mov
push
xor
pop
js
dec
sbb
rol
xchg
sbb
mov
cmp
add
stc
ret
push
dec
cmp
jp
sub
mov
or
pop
sub
xor
nop
out
add
je
pop
loopne
fiadds
fisttpl
dec
inc
sti
xchg
adc
movsl
pop
push
jecxz
or
sbb
enter
mov
jns
outsl
ret
repz
out
fcmovb
int
scas
mov
sub
adc
ffreep
in
faddl
lcall
mov
mov
push
jbe
test
mov
jp
jae
out
mov
jecxz
sub
dec
mov
cwtl
lcall
adc
ljmp
mov
jne
data16
cwtl
xor
repnz
xchg
mov
cltd
xchg
pushf
mov
pop
lds
push
dec
dec
or
int3
jae
jae
pop
or
data16
inc
jnp
test
adc
mov
xchg
or
movsb
mov
lret
pop
jne
lahf
mov
mov
bound
sub
adc
add
adc
fbld
mov
out
pop
mov
sbb
bound
lock
loop
jno
xchg
mov
test
cwtl
mov
jecxz
test
inc
and
loope
gs
das
xchg
call
in
icebp
pop
sub
add
outsl
ja
jecxz
fs
test
sbb
push
dec
push
mov
rcll
lret
clc
cmpsb
daa
mov
dec
adc
lds
cmp
push
fidivrl
xchg
fldt
imul
push
cmp
pop
iret
ja
ret
inc
test
lahf
jl
dec
scas
insb
sahf
xor
ljmp
pop
mov
push
cmp
gs
fldt
in
cmp
dec
push
jg
mov
cmpsl
stc
xchg
daa
sahf
jl
nop
and
popa
not
outsb
and
jo
test
sarl
xchg
pop
cld
xchg
loopne
mov
jg
dec
adc
jp
pushf
je
push
dec
inc
mov
in
jbe
sar
icebp
ficompl
out
sub
jno
push
jecxz
adc
mov
test
popf
sbb
sub
jae
in
xchg
mov
sti
or
push
jmp
xchg
lods
out
add
jnp
push
dec
dec
jl
push
pop
pushf
or
imul
js
pop
jnp
xchg
adc
imul
and
push
xchg
add
aaa
mov
movsb
aad
cmpsl
mov
xor
xor
push
mov
adc
ret
adcb
or
das
es
inc
lcall
xchg
mov
cwtl
pop
dec
lea
loope
xchg
ret
movsl
fcoml
jecxz
push
inc
test
fistpll
inc
fists
pop
mov
jle
add
mov
xchg
push
or
fnstenv
xor
pop
xor
xchg
test
arpl
jg
sbb
shrl
xchg
imul
divl
jo
xchg
stc
and
jbe
adc
xlat
repz
lds
fmuls
les
push
mov
shr
std
ficompl
mov
push
cmp
in
mov
inc
adc
stc
sbb
mov
data16
xor
test
jbe
push
push
inc
xlat
leave
out
cmc
push
insl
dec
adc
fidivrl
jae
xor
and
push
cmp
sub
inc
pop
xor
js
sub
pop
dec
mov
xchg
cltd
mov
lret
pop
in
lds
xlat
test
movsl
push
arpl
movsb
push
push
inc
rcrb
clc
icebp
notl
dec
js
enter
shrb
dec
sbb
xchg
jmp
push
mov
dec
fcoms
subb
fisubs
mov
mov
xchg
test
arpl
or
cmp
ret
pop
sti
adc
adc
and
cwtl
int3
imul
dec
inc
add
add
and
mov
mov
or
das
mov
xchg
add
add
jp
mov
dec
out
loope
addr16
imul
test
fistpl
jmp
ss
fstpt
jg
push
push
mov
ja
ret
std
stc
xchg
add
cs
xor
gs
mov
ret
in
negb
mov
aad
and
rorb
enter
sub
arpl
pop
sub
pop
movsb
mov
in
lds
jns
sarb
repz
in
sbb
sbb
jo
cmp
push
movsb
inc
mov
pop
ret
rcrl
ljmp
out
hlt
xchg
in
gs
inc
mov
int
ret
in
sbb
xchg
outsl
dec
into
mov
mov
jl
test
push
mov
dec
mov
stos
aas
cltd
hlt
jae
xchg
jp
mov
mov
ljmp
rcr
xor
mov
mov
xchg
push
data16
cmp
mov
repnz
inc
shr
mov
sbb
iret
lcall
sub
data16
xor
pop
sbb
add
jno
mov
adcb
push
jge
sti
pusha
add
popa
lret
and
shrl
rclb
mov
xor
sub
sahf
xchg
fwait
mov
xorl
aas
les
jg
outsl
cmp
rcl
inc
xchg
push
shr
pusha
out
xor
es
lods
imul
cmp
sub
imul
imul
test
mov
or
mov
icebp
inc
in
sbb
bnd
mov
arpl
aaa
add
aaa
out
pop
push
xor
jno
xlat
xlat
mov
in
sbb
pop
inc
mov
aam
in
out
fcomps
fnstcw
subb
push
ficoml
lahf
outsb
xchg
inc
pop
cwtl
inc
mov
cli
push
pop
add
add
enter
sbb
aas
in
mov
ja
and
mov
or
andl
mov
pop
test
mov
sarl
cs
xchg
xlat
sbb
cmpsl
xor
xlat
gs
mov
jns
test
lods
into
dec
pop
ljmp
cmpsb
push
mov
jns
jp
ret
add
xor
pop
fwait
subb
repnz
inc
orl
inc
das
lahf
cld
xor
pop
cmp
jp
call
xchg
repz
adc
aam
pslld
mov
scas
mov
sbb
sahf
mov
jb
inc
mov
cmp
xor
dec
negl
shll
insl
jle
into
sbb
stos
daa
mov
or
pop
jg
push
jge
out
dec
mov
je
jle
in
iret
lret
ret
movsb
addb
lods
push
mov
std
and
jnp
mov
mov
xor
stc
adc
sbb
cmpsl
loope
daa
call
dec
out
out
and
mov
push
pop
into
jp
dec
adc
xchg
daa
mov
jg
mov
jp
cmpsl
xchg
inc
mov
dec
pop
dec
pop
mov
emms
adc
lock
cmpsb
mov
int3
in
shrl
mov
jmp
or
sub
stos
mov
adc
mov
in
adc
mov
enter
mov
jmp
mov
cwtl
subl
scas
call
mov
shlb
adc
pop
dec
pop
jecxz
and
and
mov
popa
ret
xchg
sub
jo
test
data16
or
sbb
nop
push
call
mov
push
stos
ja
add
xlat
xlat
push
jge
mov
pop
test
add
xchg
push
cmpsb
cwtl
mov
mov
fisubs
repz
inc
jle
cltd
push
or
xchg
repz
jp
fucomi
icebp
mov
sbb
clc
shrl
mov
dec
mov
or
ror
or
test
and
fldt
inc
sub
arpl
push
cmp
ljmp
inc
jno
fldenv
cmc
xchg
xchg
pop
cli
arpl
fwait
aaa
lods
pop
inc
data16
and
addr16
lods
lret
js
inc
jl
cmpsb
js
sbb
addb
ja
ret
push
inc
pop
jle
lret
cs
popa
ret
inc
loopne
jae
push
mov
aaa
std
fiadds
push
adc
mov
in
insl
in
fsubl
xor
mov
add
divb
lcall
nop
pop
mov
dec
inc
jns
outsb
popa
jno
js
cwtl
push
lock
dec
outsb
ja
mov
loopne
test
js
ret
mov
stos
xor
sbb
rcr
push
sahf
adc
mov
pop
cwtl
rcr
jp
cmpsb
repz
imul
sbb
xor
adc
xor
jno
adc
insb
push
call
lret
mov
sbb
loop
push
jne
pop
lcall
jle
fsubrl
inc
clc
sub
leave
push
jnp
rorl
fiadds
insl
cltd
mov
pop
or
lea
ja
das
sbb
call
iret
incb
sub
lock
jne
les
cmp
stc
or
or
out
pop
mov
jecxz
sbb
xchg
imul
dec
aam
adc
cwtl
je
ret
std
sahf
jmp
or
and
mov
imul
orl
sbb
lea
push
mov
sahf
scas
scas
xchg
push
adc
xchg
push
inc
mov
ja
cmc
popf
cmp
loopne
dec
sub
inc
mov
push
mov
stc
pop
mov
aaa
cmp
jl,pt
pop
arpl
cmp
icebp
sbb
push
in
stos
leave
pop
sbb
js
jae
in
stc
push
hlt
sub
dec
loopne
jmp
cmp
daa
xor
loope
lds
lods
inc
sahf
xchg
pop
popa
sahf
pop
je
repnz
dec
push
out
xchg
andb
stc
add
cmp
inc
sbb
jo
cli
jle
in
mov
lds
jge
inc
dec
sbb
dec
fisubs
sub
clc
add
cmc
lahf
mov
sub
sub
inc
mov
jnp
mov
dec
or
push
fmuls
lahf
mov
lahf
aaa
mov
xor
pop
mov
push
jno
pop
iret
test
xchg
enter
add
aad
and
lea
mov
push
cli
out
dec
loop
push
outsl
cwtl
push
outsb
and
xchg
inc
jae
sbb
push
rcrl
mov
sub
xchg
clc
ret
jmp
bound
aaa
clc
ds
jno
xor
leave
mulb
fldenv
inc
gs
mov
xchg
adc
in
subb
cmp
out
testb
dec
insl
mov
adc
jp
xchg
xor
xchg
push
add
mov
cld
jp
or
and
fwait
subl
sub
push
insb
fwait
cmp
shll
imul
dec
push
mov
out
pop
xor
jno
clc
mov
xchg
and
mov
dec
icebp
mov
inc
or
xor
dec
movsl
icebp
negl
popa
in
fistpl
fldl
inc
dec
sarb
add
xchg
sub
into
pop
pop
fbld
into
les
pop
sahf
lds
in
in
daa
inc
adc
ficomps
jo
push
and
mov
in
mov
sub
jmp
mov
mov
add
xchg
and
add
imul
xor
mov
fs
mov
je
imul
stos
sbb
lret
pop
mov
and
jp
pop
je
iret
sahf
shrl
test
inc
jnp
jns
adc
mov
popf
mov
cmp
movsl
jb
pop
or
ficoms
out
pop
rcr
add
ret
jmp
sub
mov
and
sub
and
adc
xchg
int3
into
into
out
xchg
daa
dec
mov
mov
imul
popl
and
mov
adc
cmp
pop
leave
xor
xlat
cs
and
nop
adc
stos
icebp
in
jecxz
andl
or
mov
testb
loopne
shl
pop
push
mov
movsb
xchg
jnp
fadds
out
fistpll
push
leave
jle
leave
mov
ret
or
fdivrs
repnz
adc
push
adc
dec
movl
dec
xor
xchg
jge
mov
lds
push
cmp
mov
push
inc
xor
gs
scas
adc
mov
cmpsb
sbb
jg
roll
loopne
fs
cmp
pop
pusha
jmp
mov
inc
lock
adc
add
sbb
jecxz
psadbw
push
out
mov
push
xor
jb
and
jae
or
subps
daa
and
mov
jns
ds
ss
mov
pushw
subb
out
jl
jnp
pop
cld
xchg
rcrb
roll
mov
fsts
hlt
mov
je
lods
sub
lock
cltd
cmp
cld
sub
adc
loopne
repz
and
stc
dec
or
std
adc
lods
movsb
lods
ja
pop
shll
adc
test
jp
arpl
or
faddp
adcb
shll
stos
inc
sub
icebp
repnz
fdivl
sub
jl
adc
imul
mov
inc
into
jle
mov
jge
sbb
es
shl
les
ret
mov
lods
rcrb
or
or
cltd
cmpsb
pusha
adc
xchg
in
sti
adc
pop
add
mov
inc
xor
js
call
push
arpl
mov
into
cwtl
xchg
push
movsl
jle
xor
jae
out
js
xor
aam
jo
aaa
xlat
jns
jg
aad
jbe
adcb
push
dec
in
test
push
loopne
popa
xchg
jecxz
sbb
daa
jmp
dec
xchg
mov
popa
js
test
jle
mov
pop
jb
sbb
sahf
cli
shll
jge
andl
pop
ret
aad
push
aam
movsb
loope
and
and
arpl
sbb
js
int
cld
pop
test
cmc
pushf
adc
add
ret
push
mov
daa
rol
fcmovb
daa
bound
fmull
seto
jnp
dec
push
repz
and
pop
cmp
sahf
fiadds
jmp
adc
in
xor
dec
mov
test
es
pop
cwtl
add
add
jecxz
fsts
clc
ret
dec
dec
fistpl
loop
bound
sbb
test
roll
mov
xchg
rorb
jb
sahf
dec
adc
mov
and
push
mov
into
xor
stos
dec
push
add
mov
mov
cmp
mov
push
mov
mov
std
cmp
fldenv
popf
loop
inc
lahf
or
test
adc
push
xor
fbstp
daa
shlb
je
lock
pop
cmpsb
mov
xchg
add
ret
push
xor
sti
lds
cmpsl
ja
push
fildl
dec
pop
jg
push
aad
sub
imul
lods
mov
outsl
xlat
jge
lcall
jne
or
jmp
mov
repnz
push
out
gs
push
pusha
fmuls
stc
mov
sub
cmc
addb
cmc
arpl
stc
xchg
dec
mov
xchg
ret
daa
idivl
aad
cmp
or
push
adc
negl
inc
aaa
jmp
mov
aas
cli
loop
rcl
pop
pop
lock
jg
dec
popa
pop
inc
mov
jmp
push
ljmp
pushl
pushf
dec
push
lods
mov
pushf
mov
xchg
mov
push
hlt
jp
int3
leave
nop
jmp
mov
shll
aam
pop
adc
mov
xchg
or
mov
jb
mov
xchg
and
cltd
pop
mov
icebp
enter
mov
cltd
pop
xchg
cmp
negb
addr16
mov
outsb
jno
or
push
nop
rcrb
pushf
jnp
dec
xor
in
mov
fcomps
sahf
push
dec
mov
ja
mov
inc
mov
imul
mov
pop
bound
jl
es
adc
mov
dec
or
loope
dec
push
sbb
push
pushf
xchg
shrl
pop
mov
ds
pushf
cmpsl
popf
mov
rcrl
dec
push
xchg
mov
negl
arpl
mov
xor
inc
popf
mov
push
xchg
or
mov
lock
jne
pop
fistpl
in
mov
pop
ror
mov
add
adc
ss
enter
test
fisubrs
ret
xor
jb
in
mov
xchg
add
sahf
out
fs
sub
sbb
fimull
cmpsl
je
cmpsb
mov
fstl
and
jne
fwait
scas
xchg
xor
fmull
adc
jecxz
ja
mov
je
movhlps
dec
cltd
insb
push
imul
sti
aas
xor
add
arpl
and
fidivl
cmpsb
lods
loop
cmp
out
xor
dec
in
add
das
mov
push
lds
xchg
mov
push
mov
gs
pop
pop
shrl
repnz
xchg
mov
lds
xor
outsl
aad
popa
aas
sbb
add
and
sbb
gs
and
imul
data16
arpl
in
pop
add
es
iret
jb
and
out
test
scas
inc
iret
lcall
add
in
pop
cmp
and
and
and
jl
cli
jmp
sub
inc
adc
fmuls
fs
push
imul
test
sbb
dec
lcall
aas
mov
mov
jmp
add
into
mov
dec
sub
adc
and
pop
pushf
test
loopne
sbbl
mov
fwait
ret
mull
cmp
push
rcrb
ljmp
dec
or
pop
jg
pushf
and
jg
xor
pop
stos
or
lret
cmc
in
cmp
and
dec
out
xchg
adc
lock
mov
pop
pusha
movsl
sahf
mov
adc
xchg
xchg
shlb
or
dec
cmpsl
fcmovnb
and
push
push
lret
adc
addr16
xchg
divl
shlb
mov
cmc
dec
xchg
or
mov
mov
imul
sub
pushf
lods
fldt
cmp
mov
or
in
adcb
push
or
vpsraw
cmp
and
mov
mov
adc
cmp
xchg
pop
mov
cli
push
push
sbb
stos
and
dec
cld
jae
xlat
push
jno
aad
pop
push
je
mov
push
inc
cmp
xchg
pop
jl
stos
push
sbb
xchg
dec
test
setb
push
cs
hlt
std
es
push
jmp
das
adc
mov
daa
adc
push
dec
lods
add
inc
dec
add
and
enter
ss
arpl
repz
iret
bound
movsb
mov
pop
pop
xchg
adc
dec
lds
cmpsl
mov
cmp
les
in
add
xor
popf
jae
jne
ljmp
fnsave
cmp
sub
mov
loopne
aam
or
cmovs
les
xor
cmc
pop
inc
pop
jb
cmp
xchg
lods
ss
sub
aaa
add
jnp
push
scas
sti
jbe
repnz
push
sub
adc
xor
movsb
pop
pop
xlat
push
fisttpl
int3
ret
jae
inc
mov
loope
xor
dec
ffreep
xbegin
cs
jbe
rorb
ret
popa
and
xchg
rolb
mov
xor
cmp
and
jmp
cli
jo
push
loop
pop
andb
stos
mov
and
dec
int
loopne
movsb
dec
push
push
out
push
and
xchg
out
xor
lock
mov
lret
pop
test
pop
imul
clc
pop
jp
inc
pop
jne
xor
jno
lret
sbb
sbb
mov
mov
in
add
dec
mov
std
inc
in
mov
and
ss
xlat
aas
pop
fucomi
push
insl
dec
outsl
push
cli
push
jg
in
lds
jp
mov
and
and
imul
das
loopne
and
and
mov
daa
test
inc
xchg
dec
mov
or
xor
sub
add
mov
iret
dec
daa
daa
insb
pop
cmc
cmp
xchg
sub
cmp
outsb
insb
fs
pop
insl
pop
sbb
loopne
xchg
flds
mov
into
rcll
scas
loope
cmp
mov
fsubs
loope
pop
jmp
sub
faddp
ljmp
add
push
mov
out
mov
out
int
test
push
push
xchg
mov
repz
repz
ret
pop
push
xchg
clc
sub
sahf
mov
cli
aad
or
shll
les
cmp
std
push
xorl
ret
imul
add
mov
jmp
inc
iret
les
sbb
jb
lods
clc
pop
fildl
sub
add
cli
mov
xchg
testb
aam
into
rcrl
test
jno
mov
out
daa
loop
xchg
sbb
sub
ret
push
aaa
test
cmp
insl
xor
pop
scas
test
jg
roll
sbb
addr16
mov
xchg
aas
and
mov
pop
fidivl
pop
fwait
push
or
in
xchg
add
in
out
std
out
cltd
lock
repz
and
push
add
scas
scas
pop
jp
push
mov
in
cltd
pop
jb
cmpb
loopne
call
cmp
mov
fs
mov
mov
push
loope
adc
call
aad
or
xor
mov
sbb
outsl
adc
mov
xchg
push
add
jnp
repnz
sub
xchg
jmp
inc
mov
sahf
and
cmpsl
adc
pop
stc
jp
mov
hlt
stc
mov
dec
ret
adc
jnp
lret
aas
cmpsb
sbb
ss
subb
sub
pop
inc
push
cmpsl
imul
mov
in
or
hlt
mov
shrl
sub
lds
dec
ss
push
sbb
jp
cmpsb
cmc
aam
aas
adc
rolb
cmp
mov
test
rcrl
fcoml
push
test
jmp
sbb
mov
les
clc
push
addl
jmp
int3
and
dec
push
out
or
aam
mov
jge
nop
jne
sbb
add
insl
fisttps
aaa
orl
jle
cmpsl
aaa
push
adc
mov
mov
int3
jp
add
jp
mov
popl
scas
js
popf
shll
mov
pop
fnsave
repz
lcall
xor
sti
in
repz
mov
lods
sub
jle
dec
std
mov
mov
add
loopne
push
xor
test
lods
pop
mov
adc
int
out
mov
cmp
ss
xor
sbb
and
mov
arpl
dec
ljmp
xchg
jne
jnp
bound
dec
movl
sti
sbb
outsb
setg
stos
jle
and
jbe
dec
mov
push
stos
fwait
loop
jmp
arpl
aad
pop
jecxz
cmp
test
or
xchg
sbb
mov
or
dec
mov
cmp
mov
and
jno
sub
dec
jmp
push
mov
push
imul
insl
push
je
push
mov
dec
movsb
pop
mov
mov
xchg
lock
and
mov
cli
fcomi
stos
arpl
std
fwait
adc
add
cld
or
mov
nop
cmp
mov
pusha
inc
cmp
mov
test
mov
rolb
push
imul
test
xor
mov
fdivs
jb
cmpsl
pop
cmp
mov
fsubs
leave
repnz
aas
std
add
pop
add
loop
insl
sbb
shlb
pushf
lea
adc
hlt
xchg
shll
loop
push
pop
cmp
cmp
imulb
adc
push
sub
or
adc
adc
mov
xchg
jo
das
fsubrs
mov
pop
sahf
clc
xlat
or
pusha
xchg
pushf
pop
pop
jnp
stos
rcrl
gs
xor
sarb
jle
cmc
and
mov
pop
adc
repz
imul
lret
mov
aas
cmpl
setb
or
sbb
int
fwait
loopne
cmpsl
mov
jb
mov
das
adc
cmp
in
add
pop
xchg
sbb
out
je
imulb
sbb
inc
mov
dec
addl
pop
les
test
mov
push
mov
xor
mov
int3
inc
jecxz
or
gs
inc
leave
fnstenv
or
sub
xchg
pop
inc
cmp
test
pop
addr16
mov
aaa
pop
shrl
xor
xor
xor
sub
mulps
jg
dec
into
adc
test
xchg
sub
dec
test
add
mov
cmp
pop
adc
pop
insl
leave
adc
scas
dec
xor
inc
add
xchg
xorl
rcrb
or
or
test
hlt
push
fimull
jmp
in
insb
dec
jnp
outsl
push
dec
das
cmpsl
ret
push
jb
or
sbb
and
mov
lcall
dec
inc
sub
dec
xchg
cmp
rorb
xor
pop
test
sub
cmc
lcall
pop
sub
inc
push
into
add
xchg
lret
in
and
in
mov
test
mov
add
out
mov
jg
push
mov
fs
xchg
lods
push
clc
sbb
adc
movsl
sbb
adc
in
xor
cmovs
out
sbb
movsl
popa
fstl
cld
and
dec
iret
inc
add
frstor
pop
adc
inc
cmp
das
mov
jae
sbb
mov
icebp
mov
pop
mov
push
aad
sahf
mov
std
and
push
decb
mov
nop
lods
pop
add
fadds
xchg
fmull
imul
jne
xchg
sbb
pop
aas
push
cwtl
pusha
test
sahf
mov
or
cmp
adc
fildll
out
addr16
loope
pop
imul
sub
xchg
sub
out
xchg
hlt
jg
lea
mov
mov
lret
push
les
sahf
ljmp
jb
sbb
inc
mov
cli
cmp
jb
xchg
dec
adc
mov
movsb
sbb
mov
mov
dec
popf
add
ret
and
pop
ds
scas
mov
mov
mov
cs
shlb
and
es
xchg
push
call
xor
add
sub
scas
rolb
push
xchg
sub
fisubrs
add
cltd
sub
adc
adc
ror
fnsave
lahf
popa
enter
push
push
push
dec
mov
pop
sbb
iret
inc
mov
cmpsl
or
sbb
subb
mov
in
test
testb
pop
jl
sub
addr16
jbe
mov
pop
rclb
stos
dec
pop
int
fbstp
in
sub
cs
mov
jl
stos
dec
xchg
and
js
test
fnstenv
adcl
mov
sti
pop
andb
jmp
xchg
test
sbb
test
int3
sub
leave
pop
shll
test
xchg
in
push
lea
sbb
faddl
aas
test
lahf
or
lds
addr16
in
sarb
movsl
out
sbb
and
ror
jns
jmp
jbe
mov
sarl
pop
pop
out
shll
xor
stc
add
leave
testb
pop
mov
jg
enter
popf
test
leave
pop
movsl
xchg
call
mov
dec
or
ja
inc
mov
or
jb
cmp
mov
add
out
dec
leave
sahf
cmp
lods
popf
rclb
jo
pop
mov
ret
inc
xor
lods
push
cltd
cwtl
das
jo
clc
jo
pusha
aam
mov
pop
add
enter
rolb
ret
jns
mov
setns
imul
insb
in
xchg
pop
lcall
mov
dec
pop
and
pop
es
movsb
data16
adc
xchg
push
mov
push
add
xchg
ret
pop
xor
sub
in
cmp
add
repz
mov
das
xlat
lea
jmp
xor
sub
fists
push
xorb
iret
mov
mov
movsb
andb
xor
add
idivl
decl
add
pushf
out
icebp
xor
add
lds
pop
aas
jmp
or
lds
in
int
sbb
xchg
ljmp
xchg
cmp
out
adc
inc
iret
push
stc
js
mov
pusha
or
mov
hlt
cld
and
aaa
add
push
or
mov
and
jle
icebp
mov
inc
lea
into
es
push
pop
lret
cld
mov
test
jns
enter
aas
inc
and
mov
mov
push
mov
mov
test
loop
and
insb
out
push
lahf
inc
sbb
pop
dec
mov
cmp
ja
mov
rorl
repnz
mov
jmp
sub
daa
stc
dec
in
mov
lds
int
in
jae
pushf
aaa
mov
arpl
ret
sbb
dec
addl
loope
push
out
mov
mov
je
push
and
adc
dec
movsl
lds
push
xor
shll
minps
push
mov
jle
jecxz
mov
xchg
inc
push
fbstp
xchg
mov
xchg
jg
sarb
mov
pop
push
movsl
int3
bound
push
mulb
jl
push
pop
push
lock
addb
out
aas
xor
sbb
mov
shrb
xchg
dec
mov
mov
and
insb
adc
int3
add
jp
adc
sbbl
mov
sbb
pusha
or
outsb
movsb
jns
and
fidivl
and
test
ret
ljmp
daa
xchg
out
jge
roll
inc
andl
add
sbb
or
jnp
int
sub
mov
iret
out
in
dec
shll
int3
fnstcw
inc
xchg
push
xchg
scas
hlt
add
mov
pop
jns
stos
adc
lahf
shl
push
adc
inc
pop
cmp
jp
ds
or
mov
stos
pop
gs
das
dec
sub
cmp
push
aas
andb
xlat
lods
dec
call
push
imul
les
lods
jbe
adc
mov
idivl
fildll
push
repz
sahf
jbe
push
pop
out
adc
jl
lods
sahf
dec
aad
cli
dec
cs
adc
ss
rcr
dec
in
push
imul
int
stos
sub
mov
pushf
adc
fisttpll
dec
jno
rorb
xchg
add
dec
xlat
je
repz
dec
push
mov
pop
mov
cmp
jl
jae
sbb
jbe
out
push
jp
out
repz
mov
jb
in
cs
push
mov
fstps
jg
movsl
adc
stc
push
mov
jb
cmp
cs
and
sub
cmp
push
lcall
pop
roll
popa
ljmp
mov
and
jb
push
pop
jo
pop
sahf
push
jnp
mov
add
jle
aad
xor
in
popf
jo
or
cmp
fsubl
dec
iret
bound
push
push
sbb
ja
push
lods
adc
xor
sbb
push
enter
pushf
loopne
daa
stc
ja
inc
pop
push
jae
mov
out
mov
inc
std
fidivl
icebp
test
bound
mov
xor
push
fwait
mov
lret
mov
xlat
sbb
pop
mov
xor
cmc
into
imul
mov
insl
stos
jo
sub
repz
out
cmpsb
popf
add
fiaddl
in
scas
stos
in
jnp
andl
ljmp
mov
aaa
mov
dec
jno
out
les
adc
adc
jecxz
jnp
aam
out
nop
push
xlat
les
movsl
xchg
jmp
xchg
xchg
repnz
xor
in
pop
or
push
stos
mov
stos
andb
ss
sbb
stos
dec
adc
lods
sub
movsb
dec
push
sub
xchg
in
jmp
ficompl
xor
not
and
add
fsubr
mov
mov
clc
sbb
out
jl
push
jmp
mov
mov
ja
or
fptan
popa
push
xchg
mov
jo
mov
sub
lahf
aam
cs
outsl
iret
sub
jge
insl
jae
sub
xorb
sbb
sub
mov
cmp
mov
sbb
loope
cmp
xchg
cmp
lods
into
mov
xchg
js
dec
and
jb
aaa
adc
mov
or
pusha
repz
mov
pop
movsl
incb
scas
jle
shll
cld
scas
mov
and
int3
cli
mov
jp
mov
push
je
loope
mov
add
scas
sub
xchg
in
out
cmpsl
or
sub
inc
aam
lret
stos
adc
push
mov
push
dec
and
rolb
das
adc
fisttpl
sarb
call
fisttpl
in
shll
clc
and
dec
idivb
mov
std
xchg
xor
ret
sbb
cmpsl
xchg
call
push
sub
mov
xchg
ds
scas
push
adc
mov
je
outsl
jo
pop
pop
jp
outsl
push
rorb
fisubl
cld
ret
jnp
stos
je
add
inc
dec
push
and
lock
aas
adc
push
fldenv
add
push
jo
test
sub
xlat
out
push
ret
lcall
push
push
jne
pop
jns
mov
xchg
jns
nop
pop
xchg
daa
std
idivl
sub
mov
popa
enter
mov
js
incb
shll
sti
jp
push
not
add
mov
adcl
gs
scas
aaa
dec
outsb
shll
add
movsl
mov
cmp
or
pop
clc
rcrl
rcrl
repnz
inc
mov
jecxz
jge
pop
xlat
es
iret
jmp
cli
jg
into
or
popf
pop
daa
ljmp
ret
cmp
push
clc
testb
and
sub
or
inc
add
mov
out
mov
xchg
lcall
arpl
cmc
pushf
pop
lods
std
dec
sarb
les
pop
xchg
nop
cld
sbb
jmp
mov
bound
subl
cli
adc
sbb
stos
out
sub
or
mov
sub
aaa
lock
idiv
or
mov
call
push
mov
nop
imul
xor
push
adc
jo
sbb
mov
mov
loopne
jb
cli
sbb
repnz
ficoms
rorl
push
pop
fldcw
lret
jb
insl
mov
aad
int3
aad
jmp
add
dec
xor
cmp
test
mov
mov
xchg
fdivp
add
add
loop
into
add
dec
pop
loope
push
pop
and
ljmp
ljmp
xchg
cmp
sbb
clc
add
es
sbb
sahf
dec
xchg
movsb
addr16
hlt
push
lret
adc
in
xor
mov
sbb
fsubrl
dec
shlb
cmpsb
add
fistps
push
cmc
ror
les
lea
pushf
sbb
add
out
movl
sbb
stos
divl
sub
cmp
xchg
dec
mov
fmull
pusha
add
leave
sarl
and
lock
dec
xchg
sub
adc
fistpll
or
fimull
jmp
or
hlt
cli
test
cmpsb
and
pop
xchg
jbe
insb
aas
std
hlt
mov
mov
test
stos
add
mov
clc
cmpsl
add
jmp
add
or
sbb
mov
xor
pop
pushf
sub
enter
aas
push
rolb
std
dec
lea
xor
sub
outsl
push
fstpl
mov
out
sti
fmuls
and
pop
dec
test
push
dec
pop
mov
jecxz
insb
mov
push
sub
and
mov
jb
rolb
jle
shrl
fchs
dec
movsb
insl
les
nop
in
or
mov
fstps
in
or
les
dec
and
loopne
stos
fidivl
jmp
push
xor
xor
mov
mov
ret
mov
xor
test
out
and
fsubrs
aaa
lahf
mov
call
push
inc
ss
shlb
add
insl
push
mov
lds
xor
pop
hlt
pop
push
and
scas
in
test
and
fs
imul
sub
add
aam
or
xor
sbb
test
cmp
aas
bound
adc
xchg
fwait
push
loope
xchg
rorb
pop
mov
jno
js
incb
das
imulb
and
cmpsl
and
out
lock
lds
icebp
push
clc
sbb
dec
and
xor
or
sahf
adc
mov
mov
ljmp
jecxz
mov
mov
hlt
iret
cltd
cltd
jl
pusha
or
stos
fwait
sub
std
and
inc
sbb
bound
popa
push
nop
push
mov
jae
ss
pusha
and
in
mov
jnp
lret
push
cmp
imul
mov
and
mov
fsubrs
pop
fcmovb
clc
sbb
stos
pop
rcrl
and
fbstp
dec
aam
xlat
bswap
xor
fnstenv
in
imul
lods
or
pop
lock
cld
xlat
and
jne
cmpsl
ret
push
bound
mov
dec
test
add
push
dec
add
and
sbb
dec
sbb
test
movsb
jne
in
fcomps
pop
xchg
pop
aas
js
movsl
imul
push
in
data16
jmp
sbb
jl
out
gs
cmp
cwtl
cmp
or
push
lcall
jbe
or
clc
call
inc
xchg
jmp
push
xchg
sbb
sbb
cmp
add
pop
pushf
xor
sbb
xor
adc
inc
cmpsl
jns
push
push
dec
hlt
jge
aad
push
mov
xor
int3
mov
xor
or
rorl
xor
inc
jae
adc
inc
ret
mov
test
xchg
cltd
or
je
add
push
jae
xchg
add
lock
out
sub
insl
xchg
and
dec
mov
dec
adc
push
jns
mov
push
adc
push
mov
faddp
shl
push
pop
filds
lds
cltd
stos
aam
pop
repz
faddl
adc
sub
leave
aas
lods
movsb
or
daa
pop
fmulp
imul
mov
mov
lret
pop
es
adc
pop
out
pusha
jg
jne
cs
arpl
pop
xchg
pusha
xor
mov
jle
pop
data16
das
loopne
es
cmc
movsl
mov
or
icebp
dec
fadds
push
nop
xchg
std
dec
fs
xchg
add
jecxz
cmc
xchg
fildl
push
iret
sbb
push
shlb
adc
sub
pusha
push
movsb
ss
idivl
jne
add
push
test
pop
out
pushf
inc
iret
fs
pop
lcall
or
nop
cwtl
or
push
sbb
xor
push
mov
idivb
pop
dec
pop
or
cmp
or
or
cld
push
mov
in
sbb
sahf
mov
mov
and
mov
pop
xchg
or
xor
data16
inc
mov
sbb
int
jb
sbb
sub
mov
out
sbbl
xor
in
int3
pop
fs
inc
mov
xchg
sahf
pusha
aad
xor
es
mov
push
andl
jo
add
mov
roll
cmp
fwait
pop
dec
mov
stos
cli
or
jbe
rclb
xchg
je
pop
sahf
ficoml
cld
inc
mov
repz
push
scas
out
mov
popf
adc
xor
adc
outsl
ja
xor
ds
imul
rolb
sbb
negb
cmp
mov
fiaddl
clc
in
out
or
ret
daa
jmp
mov
inc
xor
xor
cs
pop
xchg
or
movsl
jecxz
pop
mov
fwait
lret
imul
xor
push
inc
push
flds
pop
mov
cmp
sub
push
movsb
stos
push
pop
and
mov
push
in
ss
dec
jae
pop
mov
fucom
and
daa
lds
pop
jno
mov
inc
push
mov
test
leave
popa
faddp
and
adc
mov
jge
jb
rcl
fprem
repnz
dec
and
stos
in
outsl
out
addr16
jne
xlat
cmc
mov
xor
inc
adc
dec
xchg
outsb
shrl
in
mov
or
cltd
sub
in
mov
lret
movsb
lret
lcall
cmp
inc
mov
stc
faddp
inc
pop
sub
in
aas
fisttpl
push
sahf
push
scas
lods
leave
adc
push
jae
xlat
ret
sub
aas
leave
sti
sarb
ds
pop
xor
or
and
xchg
cmp
and
repnz
lahf
std
ds
fnstenv
lock
movsl
push
mov
pusha
dec
test
jbe
jge
cmp
dec
lods
jecxz
jl
dec
ds
adc
iret
sub
push
in
or
sub
or
iret
and
sbb
pop
push
and
dec
or
jmp
loope
dec
xor
adc
rorl
dec
icebp
or
pop
lea
ja
not
ljmp
bnd
out
pushf
cmp
pusha
sbb
test
xchg
add
pop
mov
inc
add
sar
jmp
sub
pop
fiaddl
inc
mov
mov
shll
pushf
jecxz
popf
fs
pop
orl
dec
leave
add
jnp
and
add
idivb
lret
pusha
dec
dec
movl
imul
ljmp
xchg
stos
in
mov
dec
pop
leave
or
xchg
ljmp
loopne
xorb
mov
sahf
js
pusha
icebp
cld
cli
adc
lahf
nop
adcb
sti
xor
sub
sbb
xchg
cs
or
sti
or
in
fdiv
fcoml
into
repnz
das
arpl
jns
inc
cld
movb
in
repnz
or
rcll
adc
sbb
inc
call
add
mov
jns
cmp
out
into
andb
sub
push
enter
push
adc
cltd
xchg
sarl
ss
ja
mov
cs
out
fisttps
adc
movsl
mov
pop
lret
lret
std
ret
adc
lds
jp
mov
jnp
pop
insb
cltd
xor
scas
int3
adc
ja
flds
sahf
jmp
imulb
sldt
loopne
das
loopne
cmp
mov
adc
cmp
int3
xchg
jg
andl
cmp
aas
jae
aad
pop
push
popf
pop
xchg
stc
loopne
add
bound
aas
mov
test
out
inc
dec
ret
out
jge
std
sbb
jbe
sub
add
shrl
leave
subl
rolb
jle
cmp
sub
push
mov
pop
dec
sahf
mov
sbb
xor
mov
clc
inc
pusha
jp
mov
jg
fdivr
ss
push
in
stc
js
dec
inc
es
fwait
sub
dec
push
push
inc
fisubrs
or
push
jno
cli
and
and
icebp
mov
inc
mov
mov
jp
add
repnz
xor
pop
xchg
adc
mov
cmpsb
add
scas
sbb
jmp
stos
inc
mov
mov
das
imul
repnz
jp
inc
and
push
push
and
xor
jnp
pop
fdivrs
cli
hlt
mov
iret
les
and
cmp
gs
aas
sbb
gs
mov
sub
stc
pushf
jmp
pop
enter
addb
icebp
xor
nop
testl
adc
xor
mulb
jl
and
and
loop
pop
fstps
or
repz
out
sahf
repz
mov
sbbb
test
data16
aaa
pusha
push
ljmp
enter
nop
hlt
jle
mov
cli
aad
and
and
adc
pop
shrb
xchg
push
jbe
movl
jecxz
mov
xor
js
mov
testl
movsl
shll
dec
push
push
add
mov
sub
adc
cmp
mov
int
data16
add
mov
adc
cmp
push
lcall
add
xor
lahf
xchg
pop
or
and
cwtl
sbb
test
mov
cs
test
clc
mov
sbb
jae
jae
jns
arpl
ljmp
jl
xchg
mov
shlb
clc
jle
ss
lcall
in
lea
scas
push
jae
insl
lds
enter
decl
add
sbb
mov
push
das
add
mov
lds
mov
add
shrb
mov
ss
push
push
sub
add
push
nop
rclb
mov
fimuls
xor
ds
jecxz
loop
loopne
mov
je
sarl
out
inc
xchg
pop
mull
ret
loop
or
push
fdivs
inc
lret
data16
cli
cmpsl
addr16
or
dec
stos
std
xor
add
jne
sub
fwait
inc
cmp
bound
mov
push
loop
int3
dec
loope
stos
loopne
testl
sahf
dec
fldenv
sbb
adc
out
push
in
call
mov
inc
add
imul
fsubl
das
mov
push
lret
xor
dec
sbb
jge
je
jae
cmp
aam
mov
lret
add
rcrb
cmp
test
mov
xchg
inc
mov
cmpsl
push
xchg
hlt
cmpsb
imull
mov
mov
aam
jg
lahf
add
pushf
pop
cmpsl
or
lock
imul
jno
imul
cli
jmp
es
sbb
fisttps
in
inc
push
jo
loop
dec
cmp
aas
sub
mov
ljmp
xor
rcrb
pop
ja
outsb
mov
push
inc
and
das
jecxz
cmp
dec
mov
inc
dec
movsl
aaa
mov
adc
ret
mov
xor
push
cmpsb
int3
sub
dec
inc
in
fptan
ror
add
xchg
and
in
int3
cld
sarb
jmp
sbb
sar
xchg
xchg
das
das
std
stc
pop
outsb
movsl
popa
push
sub
xor
loop
aas
and
dec
jbe
ret
shrb
push
jbe
cmpl
insl
adc
aas
imull
lret
xor
clc
lock
popa
xchg
lods
dec
pop
pop
enter
xchg
pop
add
mov
sbb
mov
jnp
sbb
shlb
shr
or
loopne
add
lret
fildl
mov
shll
dec
jecxz
mov
lock
fucom
aad
movsl
stos
cli
shl
cmp
pop
dec
jae
andb
out
pop
jl
ret
sahf
test
push
out
les
mov
xchg
repz
test
push
push
fsts
cmp
popa
aad
scas
lods
adc
or
js
push
test
pop
pop
and
test
mov
push
out
in
and
iret
add
pop
push
adc
pop
mov
and
sub
fidivrs
mov
aad
loope
add
push
test
ss
or
dec
scas
sub
xor
or
out
xor
cmp
add
js
stos
out
test
cmp
mov
pushf
call
mov
addr16
fisttpll
int
ss
movups
mov
push
aam
int
sub
mov
jb
out
xor
cmp
ds
adc
xor
lds
fwait
int
ret
pop
pop
pop
inc
push
or
adc
mov
sarl
xchg
or
cmp
aam
dec
sub
loopne
pop
xchg
cmpsl
dec
mov
iret
pop
les
cld
fwait
inc
cmp
loopne
loope
jb
jo
shlb
shl
mov
mov
pop
out
int3
adc
mov
into
lret
xor
in
imul
pop
pushf
cmp
sub
mull
add
arpl
pop
dec
fdiv
sub
xor
or
mov
addb
outsb
push
insl
sub
out
xchg
andb
xor
loop
xchg
imul
or
jmp
jo
dec
push
pop
ret
adc
lods
fs
test
dec
jp
sub
and
xor
movsb
jnp
aad
mov
mov
jmp
cmpl
mov
dec
adc
mov
push
cli
pop
jb
dec
mov
mov
push
iret
lock
fwait
xchg
aad
das
lods
scas
std
test
inc
inc
mov
mov
jb
mov
cmp
outsl
jno
lods
popf
xor
lods
dec
pusha
hlt
iret
push
mul
mov
test
adc
cmp
pop
sub
pop
orl
pop
cs
adc
bnd
scas
and
jmp
test
lods
jl
add
pop
mov
mov
mov
outsl
lea
xchg
push
mov
js
inc
adc
dec
pop
mov
and
scas
iret
push
jmp
xchg
fldl
imulb
in
inc
ja
or
jmp
add
add
dec
gs
pop
or
movsb
adc
xchg
ret
cli
ret
xor
ljmp
js
out
test
or
gs
cmpsl
sbb
imul
cmpsl
xor
negb
cmp
adc
into
leave
sbbl
adc
mov
mov
xor
pop
cwtl
mov
int
rcll
shll
or
xor
insb
call
les
mov
andl
int
outsb
mov
or
hlt
cmp
es
dec
jp
ljmp
imul
js
cs
or
cli
int3
pop
movsb
push
pop
push
hlt
cmc
fisttpl
or
push
test
push
pop
sub
and
and
mov
loope
insb
dec
cmc
lods
sub
and
jnp
movsb
jnp
push
xor
and
push
bound
mov
hlt
in
pop
push
mov
sbb
aad
nop
mov
leave
xor
inc
or
scas
icebp
pusha
cwtl
cli
push
js
mov
test
jno
pop
orl
mov
inc
push
clc
xor
cwtl
jmp
je
ret
mov
cmp
ss
xor
push
sbb
popa
dec
lods
loop
and
dec
int
test
negl
mov
aad
bound
lret
lods
std
subl
inc
jo
cmp
insl
pop
sub
mov
pop
popf
cmp
mov
inc
dec
insb
movsb
xchg
or
xchg
mov
fs
in
sub
cmc
cmp
stos
loopne
cmp
lret
ja
ja
loop
push
sbb
push
rcl
pop
and
aas
adc
rcl
pop
aas
cli
ljmp
pop
cmpsb
jecxz
push
and
add
mov
add
inc
mov
loopne
mov
push
push
hlt
lds
and
adc
scas
dec
cmp
or
jmp
jb
mov
int3
addr16
jmp
cli
xchg
insl
mov
lcall
pop
repz
push
aad
add
push
add
inc
icebp
insb
jmp
mov
mov
dec
outsb
leave
shl
and
dec
lahf
inc
push
insb
add
xor
pop
push
cld
dec
xchg
mov
jge
je
adc
shrb
stos
out
sbb
lahf
inc
sti
push
sub
push
mov
mov
mov
push
cmpsl
inc
dec
jns
mov
aam
ret
mov
mov
pop
adc
cmp
outsb
imul
cmp
sbb
fistps
scas
adc
in
js
mov
lods
stos
std
lea
dec
outsl
movsl
mov
cmp
add
aad
loopne
cld
inc
insl
inc
insl
pop
insb
xor
mov
pop
scas
test
test
stos
aam
fsubl
dec
gs
js
dec
xchg
out
add
jp
pop
push
xor
divl
hlt
cmp
scas
pop
mul
and
and
adc
sub
cwtl
scas
je
jecxz
ficompl
or
test
mov
dec
test
sbb
jp
lcall
repz
adc
mov
aam
cmc
ljmp
lock
push
fcmovnu
je
mov
ret
sbb
data16
clc
stc
bound
pushf
pop
cmp
jg
sbb
dec
pop
inc
aam
decl
xchg
mov
dec
leave
jnp
in
inc
es
mov
les
and
xor
in
out
lcall
mov
lret
cltd
mov
outsl
testl
inc
xchg
loope
jp
xchg
cmp
sbb
imul
sbb
fildl
xchg
scas
xor
add
ficompl
or
fcomps
lock
mov
in
ret
mov
xchg
mov
push
lcall
shrb
dec
cmpsl
jmp
jbe
dec
jbe
adc
test
loop
int
jl
out
adc
mov
inc
imul
and
lret
mov
inc
cwtl
stc
sbb
mov
jmp
sub
dec
cmp
and
icebp
push
mov
adc
adc
fcoml
dec
inc
cli
xor
inc
subb
sub
xorl
xchg
xor
js
cmpb
jle
lea
mov
ss
out
clc
push
leave
cs
xor
cmp
insb
cmp
inc
xchg
es
inc
sbb
adc
and
mov
xchg
imul
enter
push
lods
das
test
cmp
sti
lea
scas
fs
xchg
pop
jne
mov
mov
lcall
por
outsl
push
out
push
and
pop
in
sti
cmp
popa
loope
inc
lret
xor
xchg
call
push
fnstcw
and
lret
dec
ds
cmp
lret
mov
jl
int3
sub
sub
mov
cmc
fwait
out
sub
cmc
shl
push
pop
adc
or
jnp
jno
pop
jp
pop
pop
dec
pop
pop
lret
dec
mov
dec
jns
pop
mov
scas
leave
push
inc
in
or
sti
jb
mov
cmp
daa
aam
pusha
xor
sbb
fwait
insb
loopne
int
jmp
push
pop
stc
jg
in
cmp
xchg
jecxz
xlat
mov
aaa
in
insb
add
in
mov
pop
lret
cmp
clc
das
jmp
xor
push
test
mov
lret
ror
sbb
andl
xchg
fxch
frstor
xchg
call
test
cmp
cltd
shl
ja
jne
mov
pop
aaa
fsub
cmc
mov
addr16
ja
roll
popa
pushf
je
mov
movsl
cmc
xchg
or
sub
inc
inc
jecxz
decl
or
dec
pop
das
mov
xor
xor
stos
fcomp
lea
insl
inc
and
test
aas
or
jo
lahf
bound
in
ret
nop
in
xchg
pop
mov
out
xchg
mov
push
inc
and
jo
clc
rdpmc
in
test
loop
dec
fbstp
ljmp
orl
ljmp
or
sbb
push
mov
xlat
rcrb
lock
iret
xor
mov
out
push
je
mov
pop
not
pop
push
pop
lcall
inc
sbb
addr16
iret
cmp
cmpsb
pop
pop
push
dec
adcl
mulb
pop
sub
or
sbbl
pop
xor
int3
xchg
sub
adc
push
lods
mov
shll
ss
orl
lcall
inc
sar
or
shlb
int
stc
pop
loopne
adc
xlat
pop
push
push
test
ja
test
pop
xchg
sub
push
pop
mov
sar
insl
mov
pop
in
ret
imul
aas
daa
or
les
data16
test
movsb
pop
ja
pop
jl
ljmp
movsl
add
and
bswap
jp
or
andl
xlat
insl
mov
fstps
mov
lods
sbb
inc
xchg
pusha
sbb
or
loopne
in
jecxz
mov
aam
sub
insl
sbb
nop
mov
mov
ds
inc
mov
ljmp
andb
iret
cmpsl
fxch
and
pop
aad
push
inc
adc
xchg
ret
cmp
repz
repz
xchg
jne
pop
int3
mov
pop
and
push
push
mov
or
xor
inc
sti
loopne
out
shlb
jecxz
mov
out
xchg
mov
xchg
out
mov
in
test
fs
inc
adc
fcmovnb
sti
sahf
mov
sbb
mov
sub
je
mov
ret
dec
push
ret
jmp
fistpll
cmc
jmp
adc
shll
loopne
call
cmpsl
lds
or
test
loope
sub
ret
fcompl
sbb
data16
pushf
cmp
or
push
idivb
dec
xchg
ret
decl
fidivrs
mov
mov
popf
in
clc
add
push
pop
lret
lods
push
shrl
add
out
in
and
sub
jne
imul
push
sub
pop
lahf
push
xchg
movsl
sub
jo
mov
mov
pop
add
adc
test
cmp
js
loope
and
push
push
mov
inc
pop
inc
pusha
push
jmp
imul
pop
mov
xlat
leave
out
mov
cmp
repz
nop
faddl
cld
icebp
test
cmpsl
xor
mov
pop
mov
les
in
sbbb
clc
insb
add
imul
and
daa
jg
cld
lret
or
cs
inc
sbb
jae
cmp
fisttpll
pusha
sbb
lock
mov
lret
les
pop
pop
pop
insb
xlat
xchg
loope
and
jne
test
mov
mov
clc
xchg
ja
mulb
push
jbe
jecxz
sub
sub
jmp
pop
jecxz
xchg
fildll
push
rcll
in
bound
dec
xorl
leave
flds
mov
lcall
pop
inc
movsb
scas
xor
cmp
addr16
push
jmp
xlat
and
shlb
xor
inc
mull
mov
cmp
insl
xor
inc
adc
jmp
roll
pop
flds
fsubrs
pop
mov
icebp
movsl
outsl
push
push
xorl
fisttps
mov
sbb
idivb
out
mov
mov
andb
dec
add
not
dec
fs
lahf
or
stos
xchg
mov
fcomps
xchg
in
sub
shlb
rorb
and
push
sbb
cld
rorl
jg
fisttpll
fadds
mov
in
jecxz
mov
add
cmc
popa
xchg
push
das
mov
ljmp
pushf
out
mov
clc
push
mov
lods
xor
iret
sub
push
add
or
push
insb
mov
jbe
lcall
cs
loopne
push
inc
push
and
or
ret
loope
clc
mov
icebp
mov
adc
sbb
test
iret
ret
popa
pop
xchg
sub
enter
xchg
mov
cld
arpl
fs
xchg
mov
jg
inc
sahf
and
xor
xchg
adc
mov
inc
bound
insl
test
mov
stc
jmp
shlb
pop
dec
mov
sti
sti
aas
lods
pop
mov
int3
rcll
aas
inc
adc
dec
lods
inc
add
fs
sub
scas
mov
ror
xor
xor
imul
sbb
sbb
idivb
pop
adc
sbb
das
and
xchg
xchg
jo
insb
addr16
push
aaa
dec
icebp
add
sbb
pop
jns
lods
adc
sarb
test
mov
out
sbb
loope,pn
pop
dec
add
push
data16
pop
cli
stc
xor
fists
sahf
xchg
cltd
loop
xor
shrl
mov
ljmp
lock
lret
push
inc
scas
inc
popf
or
stos
ljmp
xchg
sbbb
push
push
daa
jae
outsl
repnz
inc
lds
stos
js
daa
out
and
or
sahf
call
je
pushf
or
add
stc
cli
fwait
cmp
cli
and
adc
out
data16
add
dec
push
fdivr
xchg
or
and
inc
das
rorb
xchg
mov
les
mov
push
dec
scas
fcoml
in
sub
imul
punpcklbw
jnp
adc
pop
fs
fnstsw
or
sbbb
movsl
insb
fsubr
scas
mov
divb
test
or
in
data16
and
enter
pop
icebp
xor
ljmp
cmpsl
xchg
out
shr
dec
push
push
mov
jno,pt
jo
test
cmp
repnz
fwait
pushf
adc
insl
js
mov
add
sub
lock
xor
inc
mov
int3
mov
mov
stos
ffreep
inc
test
jno
jae
mov
sbb
mov
mov
mov
movsb
mov
cli
cwtl
mov
out
and
jp
iret
flds
pop
jl
fs
sarl
jne
sub
in
dec
push
mov
mov
fdivrl
in
or
ret
fsubs
pusha
sub
adc
mov
in
lods
xlat
and
or
dec
out
hlt
pop
popa
pop
cmpsl
in
sub
cld
inc
roll
loopne
popf
js
xchg
fwait
pop
dec
cmp
xchg
movsl
xchg
inc
xor
sahf
jae
cmp
fistps
push
arpl
shl
test
jb
mov
xor
mov
push
mov
jecxz
lods
aad
rcrl
daa
jg
ss
in
sbb
inc
push
addr16
push
xchg
hlt
addb
mov
jne
inc
shll
xchg
inc
sbb
pusha
mov
inc
push
jmp
arpl
mov
clc
cmp
gs
xchg
repnz
push
sbb
call
fsts
mov
and
out
xchg
mov
pushf
push
push
mov
cmc
mov
into
mov
movsl
gs
jno
flds
adc
xor
das
pop
fsubrl
out
scas
cmp
jnp
jle
icebp
lahf
or
dec
xchg
adc
cwtl
dec
loopne
clc
es
pop
push
in
xchg
stos
std
jle
addr16
addb
adc
inc
cltd
out
fucomi
or
add
ds
jp
loop
jne
lock
mov
negb
leave
inc
sub
mov
push
cmp
mov
cli
dec
out
cld
fcoml
call
mov
inc
out
push
sbb
bts
sub
push
dec
jnp
outsl
ljmp
mov
lea
mov
dec
gs
jmp
outsb
push
pop
inc
data16
add
shl
lret
in
pop
out
inc
in
jp
popa
into
jge
imul
das
mov
push
in
das
leave
nop
imul
push
loop
sbb
mov
sahf
movsb
mov
mov
loop
test
lcall
mov
dec
mov
mov
fs
testl
rcl
ljmp
iret
pop
stos
push
adc
adcl
sub
lock
xchg
sub
inc
fwait
cmp
push
xchg
adc
repz
adc
inc
loop,pn
cld
dec
mov
nop
test
xchg
push
xor
pushf
sbb
scas
mov
ret
lds
jno
dec
stos
jle
jo
xchg
mov
shll
dec
jg
shrb
jle
stc
cmp
imul
repz
outsb
shll
push
insb
popl
ljmp
outsl
xchg
cmp
add
in
jno
mov
pop
out
sbb
outsl
or
arpl
fistpl
and
icebp
lret
adcb
sbb
fstpl
icebp
sub
mov
int3
mov
xchg
jge
repnz
out
inc
mov
mov
xchg
scas
inc
lret
stos
js
mov
repnz
mov
popf
adc
dec
jnp
fsubrl
push
movsb
sbb
lret
cld
mov
popa
add
mov
cmp
popa
dec
cmc
pushl
push
daa
daa
and
movsb
clc
push
daa
imul
pop
mov
mulb
hlt
sbb
or
jns
gs
xor
aam
xor
xor
mov
mov
inc
sahf
cmpsb
xchg
mov
xor
push
jl
in
es
sub
insb
cmp
rol
inc
cld
ljmp
fistl
stos
xor
push
movsb
sbb
or
xor
test
xor
in
dec
xchg
xchg
dec
inc
pop
psrlw
mov
daa
xor
out
cmpsl
xlat
or
mov
xor
lds
imul
aas
push
loope
neg
lock
scas
pop
das
mov
out
or
mov
inc
cmp
mov
and
mov
loopne
hlt
sbb
pop
cmc
cmp
or
sub
mov
sbb
xor
clc
or
stc
addl
nop
int3
in
dec
mov
dec
pop
rolb
adc
xchg
data16
xchg
inc
inc
pop
in
clc
std
jge
jecxz
xor
and
lret
add
mov
in
cmp
xchg
and
imul
lods
outsl
jne
xor
mov
loopne
in
sbbl
and
or
jecxz
and
or
aas
mov
movsl
daa
jmp
pop
xchg
pop
ret
cmp
mov
pusha
pop
std
lods
pop
and
push
fs
mov
and
pusha
adc
inc
sahf
pop
or
and
push
jnp
not
push
jno
inc
jo
sub
sahf
movsl
lds
outsb
push
ret
xchg
popf
xor
pop
xchg
scas
mov
xlat
push
jp
enter
mov
test
cmc
sbb
fdivrl
stc
pop
ficoms
adc
addr16
iret
jae
in
pop
lret
and
push
stos
les
mov
mov
xor
lods
or
or
push
jnp
incb
repz
in
loop
out
aad
or
sbb
or
or
ss
into
sbb
jge
jne
sbb
aam
jge
loopne
stos
popf
cli
imul
xchg
push
aad
mov
mov
bound
ljmp
mov
or
das
mov
mov
fwait
pop
popa
dec
shll
lods
iret
jmp
add
es
lret
jl
jae
rcrb
jns
xchg
in
xor
daa
or
mov
out
push
test
adcl
sub
gs
dec
adc
insb
pushf
out
jns
pop
jecxz
xor
bound
popa
xor
jns
inc
and
leave
insl
push
nop
enter
insb
jmp
mov
push
sub
dec
lods
je
adc
dec
out
xor
mov
mov
adc
std
jae
stos
jno
inc
mov
adc
cltd
mov
push
shlb
out
inc
movsl
out
sahf
inc
addl
addr16
pop
aas
xchg
mov
dec
shrl
jns
dec
jb
add
xchg
js
scas
mov
loopne
pop
jns
mov
xchg
cmp
or
push
mov
mov
jae
fsts
sub
ret
mov
cs
popa
movlps
sbb
mov
addr16
lods
flds
mov
shl
scas
leave
cwtl
cmc
xchg
repz
jle
js
jmp
mov
ds
ja
sti
shl
shlb
and
push
push
mov
and
negl
add
jmp
cmp
int3
sub
imul
mov
loop
ss
sub
mov
aad
cltd
jp
cmp
dec
sbb
dec
sarl
ftst
rorb
mov
mov
push
mulps
stos
add
inc
sbb
lods
ret
leave
bound
inc
pop
leave
enter
xor
in
add
call
xor
bound
or
lock
jne
repz
adc
jns
sub
pop
roll
ljmp
insl
hlt
aaa
cwtl
jp
cwtl
pop
dec
les
aad
fldcw
decb
stos
ja
and
pop
mov
sbb
das
add
ret
loop
lret
sbb
popf
or
stc
mov
xor
sbb
jge
adc
idiv
popa
ret
cld
push
testl
ficomps
adc
in
or
fdivrl
outsl
les
test
jp
test
mov
cli
jge
adc
sub
xchg
sub
popa
insl
lea
pop
push
mov
pushf
jg
rcrb
les
xor
ja
pop
int3
rol
mov
out
test
sbb
cld
or
iret
mov
push
out
sub
adc
mov
clc
fcoms
xchg
ss
cmp
inc
lods
jb
xor
lret
fsubrl
lods
jno
cmpl
repz
jo
pushf
sbb
decb
lret
fbld
dec
push
sahf
mov
jbe
add
bound
jle
cmp
mov
push
adc
mov
gs
jl
repz
enter
idivb
rorl
fisubrl
arpl
test
cld
and
add
sub
stc
or
mov
cmp
in
push
popa
idivl
mov
leave
or
fucom
xor
mov
mov
dec
jno
sti
xchg
xchg
data16
loopne
dec
push
in
pushf
jae
push
jns
pop
sbb
add
clc
or
and
dec
cmp
xorl
mov
xchg
ljmp
out
dec
or
mov
cli
inc
sbb
jl
inc
test
sub
data16
das
jl
push
xchg
and
data16
pop
cltd
hlt
out
rolb
or
mov
lods
push
aas
jle
daa
movsl
xchg
bound
vphaddwq
mov
pusha
inc
scas
daa
das
cli
in
icebp
call
xchg
fisubrs
and
into
dec
in
push
xchg
arpl
jnp
arpl
mov
fists
enter
jns,pn
stos
movsl
nop
stos
lods
roll
add
aaa
mov
push
cmp
and
sbb
int
sub
sahf
cld
sar
mov
push
mov
mov
push
jns
popf
xchg
mov
pusha
mov
mov
movsb
daa
cwtl
fucom
jl
jnp
loop,pt
sub
or
je
inc
imul
lds
bts
outsl
sub
or
pusha
inc
imul
call
jmp
push
out
ss
rcl
jl
ret
mov
jnp
add
lret
into
push
mov
js
ljmpw
jno
pop
inc
inc
mov
xor
inc
jmp
call
out
mov
popa
xchg
cmpsl
call
out
rcrl
lcall
fcoms
pop
aad
sahf
scas
mov
sub
mov
les
push
ret
stos
aas
sub
sub
pop
sbb
xchg
and
fmul
fwait
popf
test
repnz
lock
sub
scas
inc
aad
aad
xor
addr16
sub
mov
rcrl
dec
push
enter
jle
roll
repz
addr16
push
mov
mov
aaa
or
cmc
jno
stos
adc
les
dec
pop
jo
mov
adc
push
cmp
sti
sbb
pop
jmp
and
pop
sub
pusha
jae
cmpsb
lret
push
into
mov
data16
add
leave
dec
shll
outsl
int3
inc
cmpsb
lds
fimuls
mov
test
leave
lea
stos
sbbl
scas
adc
jle
movups
mov
scas
lret
loope
mov
push
int
aaa
xchg
mov
repnz
ljmp
mov
dec
pushf
inc
imul
mov
dec
mov
jne
jmp
aam
ljmp
fcmovnb
sbb
popf
jp
inc
mov
dec
adc
ss
jl
cmc
jbe
push
pusha
jae
xchg
cmp
jno
addb
push
ljmp
jg
dec
lock
imul
je
popa
fisubrs
xorl
and
pop
inc
cwtl
mov
pop
push
cmpl
jmp
out
dec
push
xor
out
mov
sub
dec
out
inc
jnp
ja
jns
adc
inc
dec
adc
in
push
std
mov
fisttpll
repnz
sub
add
shr
ds
pop
cmpsl
loop
inc
fldcw
out
cmp
cmp
lock
pop
dec
sti
dec
lahf
test
fwait
stc
jo
loope
add
mov
cmc
inc
pop
cmp
lods
cs
outsl
mov
imul
adc
out
stos
jbe
cs
pop
cmp
xchg
jecxz
psrlq
adc
jp
out
dec
push
daa
jmp
iret
in
and
incl
jae
push
jnp
xchg
lahf
push
and
fisubl
or
xor
push
in
subl
pop
fcom
push
ret
std
pop
cmp
push
rorl
das
xor
xchg
mov
test
and
or
jnp
repz
sti
call
push
or
mov
test
inc
divl
jae
scas
lret
cmp
aaa
jp
mulb
push
jne
cmp
dec
es
lea
dec
mov
mov
cmc
inc
fdiv
in
jg
mov
inc
mov
push
jl
pop
jp
xor
ja
add
in
jno
jae
adcl
shlb
cmp
jnp
int
mov
adc
sahf
inc
sbb
inc
mov
jecxz
gs
mov
push
aas
sub
dec
pusha
sarb
mov
and
pop
push
mov
cmp
sbb
cltd
pop
or
loopne
mov
in
lcall
xchg
bnd
xor
xchg
xor
push
mov
mov
jg
divl
aam
or
or
push
out
js
ljmp
test
jnp
in
lock
dec
cmp
fwait
das
ss
mov
jo
xor
adcl
dec
cs
add
pop
xchg
pop
pop
in
xor
pop
xlat
jbe
sbb
outsb
dec
not
in
out
dec
nop
or
pusha
subb
cmc
das
or
fstpl
lret
pop
jp
fadds
fisubrs
sub
xchg
cwtl
mov
lahf
pop
push
je
inc
mov
in
jnp
mov
insb
jae
sub
movsb
lods
mov
or
mov
xor
leave
das
fisubl
jo
enter
xchg
jg
fs
std
dec
fcompl
or
mov
jnp
loop
push
adc
inc
shlb
xchg
icebp
or
xlat
std
pop
mulb
mov
movsb
adc
cld
test
out
out
ja
mov
cmpsl
xchg
mov
out
cmp
mov
pusha
fcmove
fadds
xchg
push
popa
imul
es
iret
pop
pop
pop
jecxz
pop
clc
or
test
mov
ja
mov
scas
popf
cmpsl
stos
pushf
mov
jb
xor
sar
mov
inc
scas
jp
out
mov
roll
loop
shll
sub
test
enter
inc
lock
popf
pop
scas
fiaddl
leave
adc
add
gs
cmp
stos
cmp
addl
test
ret
mul
add
inc
mov
ds
lcall
std
inc
sub
dec
int
dec
jbe
or
xor
mov
pop
ss
fidivrs
insb
icebp
popf
and
popa
imul
pop
hlt
xor
xlat
ja
add
adc
repz
sbb
and
cmc
inc
fwait
out
scas
in
rorb
scas
out
jmp
push
jno
out
movsb
negl
iret
shr
arpl
jl
mov
cmp
and
stc
test
push
lahf
enter
out
data16
mov
cmpsl
or
adc
cli
test
mov
xor
mov
aam
mov
into
pop
mov
cwtl
push
scas
or
in
sarl
loope
in
sub
fstl
xlat
rcl
nop
adc
push
aas
insl
mov
aam
cmp
push
ret
test
popa
popf
dec
and
movsb
loopne
sub
cmp
sarb
pusha
jmp
scas
ret
icebp
mov
insb
ds
jl
mov
or
inc
stos
cmp
push
enter
add
das
push
stos
mov
sbb
sbb
cmp
adc
clc
inc
mov
out
repnz
maxps
sub
lret
je
jae
inc
je
cmp
mov
push
or
lret
jle
push
sbb
mov
mov
pop
add
arpl
pop
dec
mov
sub
sbb
pop
cld
xchg
pop
sub
dec
jae
or
fidivl
out
mov
lcall
xor
aaa
movl
in
dec
xchg
push
add
mov
sbb
daa
lea
push
iret
mov
imul
std
pop
or
insl
cmc
sub
xor
push
mov
aas
pop
jmp
stc
dec
cld
idivl
xchg
xor
inc
out
insl
fisubrl
cmp
aam
imul
jae
cmp
leave
xchg
xchg
push
mulb
cmp
das
and
leave
jl
in
lcall
sbb
out
add
jl
arpl
wrmsr
ljmp
jle
iret
adc
jge
outsb
ljmp
lds
mov
scas
xchg
or
cmp
popf
bound
nop
adc
int3
adc
repnz
xlat
ljmp
jno
lods
test
xchg
frstor
fisubrl
addr16
mul
mov
adc
imulb
pop
stc
loopne
movsl
dec
pop
imul
mov
xor
lea
add
add
mov
pop
pop
mov
sub
jmp
test
fidivrs
dec
js
pusha
or
arpl
scas
jg
iret
adc
mov
sbb
loop
out
push
cwtl
fs
jno
aad
lods
insb
add
push
push
xor
and
cmp
into
scas
fbld
pop
testb
bound
pusha
cmpsb
mov
or
mov
in
jbe
loope
and
xchg
outsl
fsubl
adc
js
dec
push
mov
lret
ja
cli
pusha
xchg
sub
rorl
sarl
ja
add
cmp
int3
scas
xor
fbld
fcompl
lea
add
testb
sub
int
je
push
mov
insb
push
sbb
cmpsl
fldl
pop
cmpsl
adc
dec
and
sar
jne
mov
out
dec
gs
aaa
jnp
lds
mov
imul
out
das
ss
jle
mov
mov
adc
mov
ljmp
adc
or
cmp
ss
lcall
pushf
sub
or
dec
mov
mov
or
sbbl
add
lods
jg
icebp
cmpsl
cmp
pop
and
in
repz
rorl
dec
nop
stc
clc
lahf
jb
shrl
xlat
pop
xchg
sti
xchg
lock
xor
fisttpl
xor
cmp
jp
mov
jb
mov
sbb
daa
mov
mov
movsl
and
jno
mov
sbb
jge
cld
jecxz
mov
shl
scas
andb
adc
inc
xor
dec
lahf
dec
push
cli
mov
les
jg
dec
and
dec
sbb
jg
cmc
lcall
xor
xchg
push
imul
into
cltd
gs
cmpb
sbb
add
loope
inc
scas
xchg
sub
dec
pop
inc
test
jge
mov
int3
sbb
jl
test
and
mov
xor
push
jnp
movb
shll
xchg
mov
ret
sbb
ret
pop
add
jl
sub
fs
sub
loopne
push
pushf
jo
adc
lret
jb
add
in
in
fistpll
fimull
movsb
pushl
cmp
mov
xchg
jmp
push
das
repz
mov
push
adc
xchg
decl
mov
cwtl
sti
icebp
pop
mov
rcrl
push
xchg
rcrl
inc
dec
jbe
xor
icebp
jns
inc
je
dec
add
mov
jle
in
lcall
adc
jns
lods
lret
out
icebp
popf
mov
jge
or
shr
fbstp
clc
sti
out
movsb
jno
cmpsb
jge
mov
jb
mov
inc
addr16
je
popa
cmp
aam
stos
push
add
std
cld
push
push
cld
xor
clc
jg
aas
add
sub
xchg
sub
jns
mov
push
test
jnp
cmp
out
gs
arpl
sub
pop
jl
push
mov
movsl
add
idivb
sbb
jle
mov
fcom
movsl
or
xchg
mov
dec
lcall
int3
inc
data16
inc
std
mov
pop
ds
jl
enter
ljmp
sar
out
pop
pop
jecxz
das
push
add
or
mov
and
pop
or
rorl
and
jmp
insb
mov
test
pop
xlat
jbe
inc
jnp
icebp
inc
or
push
cmp
cmp
xor
xor
inc
imul
or
and
adc
jb
cmpsl
fimull
xor
in
fsts
and
lods
dec
xchg
jne
lahf
call
xor
mov
inc
ds
aam
aad
sbbb
pop
pop
iret
inc
jle
lcall
dec
sarb
pop
imul
std
data16
frstpm(287
shrb
ja
sti
stc
xor
in
inc
xchg
outsl
mov
stc
pop
popf
loope
in
mov
inc
jl
mov
movsl
inc
stc
mov
adc
leave
lcall
ja
xor
cld
sub
or
xchg
mov
xor
lahf
dec
mov
xchg
test
fucom
jp
and
fdiv
fisubrs
sbbl
int3
out
inc
xor
and
jecxz
push
and
sbb
stc
sbb
arpl
test
push
xorl
lods
enter
arpl
pop
icebp
mov
add
shl
sbb
std
add
inc
cmpsb
jmp
cltd
int3
inc
or
jbe
adc
jne
pushf
addr16
iret
cmc
sbb
cmc
dec
jl
dec
orb
xlat
jnp
lods
insl
pusha
adc
xchg
xchg
mov
xor
push
aad
mov
or
out
adcl
ret
jnp
add
adc
out
adc
pusha
mov
mov
dec
rolb
jle
in
sub
xchg
inc
es
cld
mov
test
mov
pusha
push
imull
movsl
out
lds
shll
std
je
lret
jge
sbb
aaa
sbb
jne
repnz
cwtl
mov
pop
loop
outsl
mov
mov
cmp
mov
outsb
add
rorl
ljmp
daa
and
sub
adc
mov
sub
pop
fst
cwtl
xchg
mov
xor
pop
cmp
mov
cmpsl
lcall
movsl
aas
or
xchg
jnp
dec
xor
sbb
push
movsb
sub
sbb
jbe
push
mov
inc
movsl
xlat
sbb
cmp
ja
pop
je
sti
inc
ss
add
push
popa
mov
dec
aad
or
in
lods
loop
xlat
jge
arpl
nop
xor
pushf
mov
and
xor
or
mov
testb
pop
faddl
cltd
dec
aas
jmp
jge
imul
ljmp
testl
arpl
xor
neg
sub
adc
sti
or
cmp
shrl
cmpsl
cli
inc
popa
mov
test
inc
xor
sbb
je
push
sbb
roll
pop
scas
xchg
xor
mov
sbb
jns
repz
fnstsw
xchg
pop
cmp
mov
sub
dec
add
daa
mov
cmp
pop
nop
or
or
push
xor
arpl
and
std
mov
fildll
sub
pop
enter
stos
into
jo
shl
push
les
cli
jp
lods
sub
cmp
rolb
addr16
loope
mov
out
mulb
xorb
and
push
mov
jne
loope
adc
jo
inc
xchg
push
out
scas
add
jo
shlb
push
je
arpl
fwait
adc
idivl
gs
mov
mov
sbb
iret
dec
xor
push
pop
cmpsl
inc
cmp
pop
xchg
loop
out
push
gs
lea
cmp
shr
mov
fistpl
push
jb
into
jecxz
lcall
cmp
mov
or
lahf
pop
iret
test
cmp
mov
xor
in
push
pop
rorb
inc
js
mov
mov
ret
test
sub
and
dec
xchg
sbb
xor
das
mov
push
xor
mul
out
xor
mov
imul
or
jbe
pop
data16
mov
add
ljmp
push
xor
jnp
dec
divl
repnz
jl
pop
push
xchg
out
int
dec
and
add
fildl
xor
test
movsl
movsb
and
dec
or
mov
pushf
ja
lret
mov
ja
and
lea
fiaddl
leave
fcmovnb
insl
dec
inc
jmp
and
mov
ja
inc
out
aaa
iret
sbb
in
movsb
in
push
test
hlt
shrl
or
fldenv
xchg
in
jae
jno
nop
nop
aas
mov
and
addr16
imul
icebp
dec
outsb
push
jo
ret
out
idivb
and
pusha
jmp
in
inc
add
pusha
push
xchg
jo
mov
lock
mov
out
mov
sti
data16
shll
add
mov
mov
pop
icebp
jo
imul
inc
jl
sbb
dec
or
mov
and
in
sarb
movsl
mov
rcl
dec
addr16
push
mov
clc
sub
xchg
shll
mov
popf
std
or
shl
mov
mov
les
sub
jecxz
xlat
sbbl
cs
movsl
scas
jp
pop
inc
and
mov
adc
add
cmpb
pop
adc
xchg
jmp
xchg
stos
scas
loope
shrl
xor
and
sub
pop
loop
jge
push
xor
dec
add
mov
inc
in
outsl
pop
dec
call
fwait
cmp
dec
sahf
pop
popf
aas
je
aas
je
cltd
sarl
cmp
xor
loopne
jp
jg
je
out
cld
pop
xchg
and
cld
leave
pop
xchg
movsb
pop
and
xchg
inc
xor
jno
movsb
dec
out
add
mov
pop
mov
sbb
lahf
jle
ss
mov
aad
add
inc
cwtl
push
fmul
add
into
movsl
in
pop
fnstenv
ja
dec
popa
dec
lock
repz
sub
cli
pushf
insl
xchg
or
or
push
cmp
sbb
add
repz
mov
in
shrl
in
dec
sbb
lahf
aaa
movsb
cmp
jmp
adc
sarb
and
and
xchg
loopne
cli
sti
fwait
les
aas
lahf
add
cmp
sub
xchg
arpl
sbb
pop
sub
cmp
mov
pusha
mov
and
cmc
jne
and
les
pushf
mov
in
das
dec
dec
jle
push
ljmp
cmpsb
sahf
mov
mov
jl
in
int
add
fsubrl
sbb
int
push
push
jge
stos
lods
jb
sbb
jo
add
mov
dec
aaa
mov
add
daa
jnp
cmp
cld
or
bound
lret
jnp
in
call
mov
pusha
push
mov
negl
sbb
mov
outsl
loopne
dec
jle
xchg
pop
and
outsb
movsl
loopne
aas
loopne
xlat
sbb
add
xor
add
lea
xchg
sti
les
pop
and
dec
out
cli
mov
xlat
shl
push
push
outsb
push
aaa
popf
jbe
sub
stos
dec
xchg
daa
xchg
inc
lgs
in
adc
xchg
sub
or
push
pop
jge
cmp
sbb
push
mov
aad
sar
movsb
mov
jne
cmp
inc
jbe
mov
es
dec
mov
add
jnp
arpl
rep
in
stos
jbe
fidivl
test
adc
jb
mov
data16
dec
push
dec
jp
push
push
xor
cmp
lds
or
add
fs
cmpl
mov
xor
popa
or
jno
out
out
sbb
pop
jne
ja
in
xor
loope
daa
push
hlt
pop
mov
daa
ljmp
nop
push
stc
push
jnp
mov
push
mov
xor
imul
mov
xchg
repnz
dec
pop
lcall
test
repz
jne
xchg
mov
cmp
xchg
mov
cwtl
adc
in
or
lret
aas
sub
sbb
cmp
mov
mov
lea
fldl
jge
or
or
xchg
mov
dec
imul
cmpsb
test
js
popa
sbb
jecxz
insl
cmp
push
mov
in
outsb
push
jl
sub
shlb
pop
and
imul
sbb
pusha
push
stc
add
test
cli
cli
shrl
cvtps2pd
mov
inc
test
leave
popa
push
sbb
mov
out
sbb
test
adc
inc
mov
add
shrb
jo
insb
testl
xchg
lret
lds
jae
mov
test
add
inc
xor
mov
stos
cmpsb
cli
xchg
rolb
add
push
test
cwtl
scas
mov
test
sub
or
filds
mov
insl
or
pop
inc
sub
imul
jns
test
int3
xlat
in
filds
ret
or
xlat
mov
in
pusha
sub
xor
lret
lret
movsb
adc
lret
sbb
xchg
jo
mov
fdivl
popf
or
les
jb
and
jmp
lret
jne
mov
adc
and
std
dec
mov
outsb
es
pusha
or
andl
jnp,pt
mulb
pop
xchg
inc
sarb
mov
dec
test
fildl
jge
or
lods
lods
sbb
jmp
loopne
stc
add
call
test
cmp
add
jmp
jb
movsl
add
cmpsl
ds
mov
jp
mov
mov
inc
or
and
lods
and
faddl
cmpsb
xorb
test
dec
mov
repnz
std
cmpl
adc
jg
xchg
inc
test
sbb
ja
xchg
cmp
push
movsb
mov
jl
mov
shr
dec
dec
add
sub
hlt
xor
jns
sar
popf
fisubrs
mov
xorb
cmp
mov
and
and
gs
loopne
mov
pop
das
xchg
add
push
rolb
dec
lock
lcall
scas
jno
sbb
fstl
adc
cs
std
push
data16
js
cmp
lods
pop
andl
cmp
add
test
testl
xor
test
jmp
daa
adc
lods
pop
and
lock
xor
sub
sbb
shlb
xchg
jge
rcrb
push
cmp
lcall
rol
mov
push
mov
popa
clc
scas
imul
stc
sub
sub
imul
rorb
repnz
jnp
mov
call
stos
cmp
lock
fstpl
cltd
cmp
lea
aaa
mov
call
out
mov
in
xchg
adc
mov
inc
add
mov
xchg
in
add
in
clc
xchg
push
ret
iret
jae
lret
mov
sub
in
cmp
add
cli
rol
or
add
frstor
popa
inc
fwait
scas
adc
inc
pop
pop
add
inc
mov
gs
imul
lea
aaa
mov
cmpsb
push
icebp
inc
hlt
add
jge
popf
or
or
lcall
inc
movsl
mov
sub
mov
xor
scas
enter
pop
cmc
cmp
mov
cmp
fists
sbb
and
or
les
movsb
das
or
jno
push
sbb
cmp
xor
mov
das
sti
lahf
push
andb
dec
xchg
filds
imul
inc
jae
adc
mov
insb
mov
sarb
inc
or
les
test
lock
test
sub
addr16
and
cmpsl
inc
clc
sbb
dec
int
stc
mov
inc
mov
les
jne
seto
jp
jmp
imul
jbe
pop
and
jecxz
fidivl
aaa
ljmp
loope
xlat
icebp
dec
inc
outsl
pop
mov
cmp
mov
xchg
rcl
jg
push
outsb
xchg
lcall
out
test
mov
cmp
dec
in
mov
push
outsb
clc
mov
add
xchg
repnz
adc
popf
add
insb
xchg
xor
daa
fistps
scas
jae
add
mov
inc
sub
mov
pusha
movsb
call
shrw
ja
sub
jne
add
fidivs
insl
dec
sarb
out
cli
sti
pop
jmp
xor
xor
sub
loope
shrb
lock
or
mov
or
pop
mov
jp
fwait
shll
leave
int3
sti
xchg
xchg
mov
ret
cmp
out
arpl
imul
xchg
bound
add
out
jne
mov
mov
sbb
sub
insb
xchg
xchg
or
fsubl
hlt
loopne
frstor
sub
or
and
cli
jb
jmp
mov
out
jbe
xchg
dec
mov
mov
cmp
or
stos
mov
dec
clc
inc
sbb
enter
mov
mull
fldcw
xor
movsb
mov
add
push
test
std
repz
adcl
push
lret
scas
sbbl
dec
lcall
mov
roll
div
cltd
test
addr16
out
mov
push
push
jge
shl
xchg
jle
dec
aaa
mov
in
inc
je
ds
repz
mov
xor
aam
stos
lods
ret
jge
dec
xchg
sahf
cwtl
outsb
sti
pop
add
fsubr
repnz
and
lret
mov
andl
inc
and
mov
cmpsl
sbb
jno
mov
aam
shrl
clc
movsl
sub
or
xchg
push
xchg
dec
mov
mov
out
mov
pop
dec
push
jle
add
sbb
jnp
add
cmpsb
adc
jge
mov
imul
loopne
and
ljmp
or
pop
rorl
movl
ret
scas
inc
vsubpd
leave
mov
std
sarb
lods
imul
xchg
repz
dec
mov
and
lods
xor
inc
pusha
notl
adc
cmpl
or
push
and
inc
into
mov
and
mov
ret
test
rolb
inc
call
add
xor
dec
sar
push
enter
or
mov
jns
sbb
sbbl
leave
movsl
adc
xchg
bound
insl
outsl
mov
cmpsl
xor
mov
mov
shrl
enter
dec
ja
std
movb
insl
pop
mov
add
jmp
imul
mov
adc
jecxz
add
test
pusha
xor
mov
adc
sbb
jno
sub
pop
push
pop
dec
add
add
out
cmp
push
xchg
inc
xchg
jb
cli
in
jns
mov
ds
or
push
push
iret
cmpsb
fnsave
pushf
inc
push
dec
adc
std
shr
nop
mov
sub
dec
cmp
fimuls
es
inc
aaa
mov
xor
movl
mov
lds
std
or
mov
cmp
ss
int
adc
rorl
mov
insb
lods
aam
adc
incl
test
cmp
call
cmc
mov
out
js
or
push
mov
cmc
jg
bound
je
pop
jnp
into
mov
pushf
pop
lret
jecxz
daa
test
popa
and
add
push
cmpsl
ja
sub
xchg
int3
jl
je
jno
scas
sub
inc
ljmp
lcall
pop
cld
fldenv
jae
jns
and
and
cmp
aaa
aas
cmp
push
shl
das
push
push
lods
es
lcall
in
shlb
pop
je
jmp
ret
iret
push
add
mov
xchg
pop
fsubrl
dec
and
stos
test
cmc
xlat
xlat
cmp
outsl
out
dec
jae
leave
inc
jbe
mov
xor
sbb
jns
bts
xor
fimull
icebp
lds
loopne
std
stos
push
dec
sbb
clc
push
enter
xchg
mov
lods
stc
mov
je
test
push
mov
loope
mov
ficoml
fistpl
xchg
mov
stos
mov
adcl
int3
adc
add
push
jo
mov
adc
xor
sub
add
mov
cwtl
imul
cwtl
push
hlt
inc
mov
test
pop
incl
daa
rorl
lcall
mov
idivb
fisubs
les
xchg
movsl
inc
mov
cmp
sti
pop
insb
leave
xor
push
aaa
sarb
das
xchg
fsubrl
inc
in
mov
jmp
stos
out
add
push
push
sbb
push
divps
nop
jo
ljmp
push
gs
push
push
test
and
pop
test
mov
push
sub
push
arpl
xchg
repz
cmp
or
push
or
mov
cltd
inc
xor
mov
movsb
or
pusha
jmp
sbb
sbb
pop
in
sbbl
mov
movsb
and
dec
and
sub
add
adc
xchg
or
sbb
dec
sbb
pop
jg
mov
pop
imulb
xor
inc
not
test
xchg
pop
fisubrl
push
iret
jmp
xor
pop
sbb
js
xor
adc
push
cmp
insl
push
sbb
fildll
pop
mov
xchg
pop
mov
scas
push
pop
and
fcompl
mov
cmpsb
test
movl
mov
shll
mov
or
out
pop
leave
mov
jns
je
pushf
or
add
test
push
jg
test
push
mov
or
jno
shll
jno
inc
cmp
or
mov
sbb
aad
and
ret
test
lods
push
int3
dec
int3
int3
mov
push
mov
cmc
lahf
fcomp
cmp
jle
das
cmc
jg
adc
outsb
data16
leave
lahf
push
add
sub
pop
icebp
out
jle
inc
dec
pushf
xchg
jne
test
imulb
jl
mov
scas
xlat
cmpl
rorl
sahf
and
dec
out
mov
and
mov
jmp
sub
loop
cmpsb
push
inc
add
and
imul
mov
pusha
mov
push
pop
repnz
out
adc
andl
lcall
add
mov
out
dec
cld
rol
cld
add
jp
sarb
int3
mov
or
adc
nop
fdivl
fadds
fmulp
xor
cmpsb
and
lds
or
or
xor
aam
inc
rorb
xchg
nop
xlat
inc
or
jl
add
dec
in
cld
jge
sbb
test
fdiv
int
int3
loopne
loopne
out
xchg
test
push
cmpsb
pusha
lret
rcll
dec
mov
scas
int3
mov
xor
rcll
dec
ror
or
int
xchg
loop
jl
mov
adc
outsb
test
mov
inc
sbb
pop
fcmovnu
das
mov
in
adc
inc
sahf
push
es
and
es
push
adc
iret
stos
push
dec
push
jne,pn
jmp
mov
push
fs
mov
jg
arpl
jnp
negl
sub
mov
add
into
inc
mov
or
test
and
divb
push
lahf
or
inc
cmp
int
hlt
fiadds
lret
sub
dec
mov
aam
xor
and
js
cmp
ljmp
ljmp
sti
sub
mov
packsswb
movb
subl
sbb
test
mov
test
std
xchg
xor
outsl
clc
mov
jnp
add
subb
push
push
mov
fcompl
insl
adcb
fwait
ss
push
arpl
mov
sub
call
lods
dec
xchg
out
pusha
inc
and
lods
fisttpll
stos
in
arpl
mov
mov
pop
rcl
popa
loope
aam
mov
and
and
fdivl
mov
xor
nop
lods
cmpsl
shll
cld
mov
lock
sub
pusha
inc
cwtl
fistl
in
sbb
pop
bound
mov
pop
adc
dec
aam
out
ljmp
in
cli
out
mov
jmp
movsl
fists
icebp
pusha
les
inc
mov
inc
sub
sub
and
add
fnstcw
js
shr
jl
lcall
lock
lret
inc
dec
sbb
fdivrl
xor
hlt
dec
mov
enter
int3
push
cmp
outsb
sub
dec
icebp
push
mov
mov
jno
negb
sbb
sbb
or
xchg
push
inc
dec
push
test
out
xor
aas
or
push
sahf
fbstp
arpl
imul
les
jne
in
iret
jp
arpl
cmp
movsb
xor
fdiv
leave
mov
xlat
bound
mov
divb
xchg
scas
fwait
push
scas
cmp
mov
pop
inc
movsb
insl
popa
arpl
adc
jo
xlat
dec
loope
cmp
into
mov
mov
das
push
jp
xchg
xchg
inc
adc
xor
pushw
jb
js
stos
stos
push
adc
push
loop
mov
adc
aaa
push
outsl
lods
ljmp
ss
push
stc
fmulp
aad
in
adc
xchg
ja
mov
sub
or
add
mov
mov
jne
inc
mov
pop
popa
adc
adc
or
mov
adc
pop
adc
dec
adc
pop
test
pop
rclb
dec
or
lar
hlt
jne
or
js
add
gs
rcll
pusha
aas
mov
das
lods
push
outsl
addb
icebp
ss
fwait
stos
rcrb
xchg
mov
adc
pushf
popa
add
push
out
lahf
or
and
mov
pop
jecxz
loopne
ljmp
fs
ljmp
notb
cli
stc
lods
pop
das
data16
add
pop
xchg
popf
jge
scas
xchg
in
rcll
das
hlt
ds
and
dec
mov
movsl
stc
or
mov
mov
mov
clts
push
in
and
fistl
jnp
clc
ds
xor
sbb
fisttpll
cli
stc
out
mov
iret
popf
push
fdivr
add
icebp
adc
push
xchg
cmp
fistps
pusha
dec
xor
sub
and
test
jno
or
or
jge
xor
xchg
adc
insb
mov
xor
adc
push
pop
mov
loopw
or
jl
adc
sar
ja
in
sbb
aaa
mov
push
rorl
lcall
xor
add
jo
mov
daa
das
call
xchg
and
les
mov
sub
mov
mov
pop
sarb
shll
cmp
push
mov
aaa
scas
fidivrs
out
jns
add
loopne
ds
cli
pop
insb
movsl
xchg
jns
add
nop
popf
and
icebp
loope
int
fstpl
xchg
pusha
mov
xchg
mov
lahf
push
add
inc
jae
hlt
fistl
cmp
sbb
adcb
push
ljmp
les
fistl
notb
push
mov
dec
cs
or
lods
rclb
inc
adc
cli
xchg
sub
sar
cmp
mov
push
outsl
push
jg
loope
xor
ja
mov
inc
std
add
push
sub
enter
jle
imul
cmp
mov
data16
push
hlt
popf
pop
dec
fs
in
mov
xor
ret
mov
cwtl
out
adc
lahf
push
mov
xchg
sbb
push
pop
jae
mov
lods
mov
xor
mov
scas
jne
gs
mov
cmp
push
lods
stc
dec
cltd
popf
cmpsb
jo,pt
mov
lods
mov
push
orb
push
jne
adc
repnz
cmpsl
adc
push
mov
or
push
cs
jl
jo
pop
or
fsubrs
and
jle
jo
jnp
cmp
xorb
push
ret
sbb
xor
call
push
call
and
xchg
dec
xchg
test
out
jmp
cmp
xor
cs
xor
ss
sub
mov
fdivrl
lahf
cmp
cmp
lcall
pop
dec
scas
rcrl
inc
pop
rcl
jnp
dec
add
mov
rcll
jae
jle
daa
cmpsl
or
icebp
into
aas
bound
push
das
xor
leave
mov
mull
sarb
stos
jnp
jmp
pop
mov
and
test
dec
jp
and
pop
je
out
sti
sarb
aaa
inc
jmp
mov
pop
xor
dec
aad
lea
nop
pushl
js
jae
inc
cs
jle
nop
mov
xchg
push
icebp
notb
fistpll
xor
fsts
or
into
sub
add
subl
dec
dec
faddp
ljmp
lcall
insl
out
fwait
inc
jle
and
cmp
push
inc
movsb
push
push
dec
es
shrl
jnp
in
push
push
and
push
mov
cmpsb
xchg
jle
jp
fldenv
into
xchg
push
fwait
add
in
mull
jbe
jbe
leave
cli
and
jns
sub
inc
insl
dec
inc
jbe
add
rcrl
sub
adc
pusha
mov
xor
jbe
mov
imul
nop
mov
sbb
fidivrs
lea
add
fadd
xlat
inc
jno
arpl
cwtl
ja
lds
xchg
jae
cmc
add
or
loop
cmp
data16
mov
mov
add
lods
into
imul
rcr
mov
xchg
xor
frstor
jmp
fmull
test
pop
push
enter
mov
and
pop
fs
js
test
cwtl
aam
adc
jl
xchg
icebp
pop
inc
in
mov
out
mov
ret
int3
dec
pop
sbb
fs
cmp
jle
add
filds
push
repz
lods
jp
inc
mov
dec
push
pushf
iret
dec
add
inc
sbbl
fiaddl
jle
and
ficoml
popl
test
sub
add
sbb
push
jns
aad
cmp
pop
and
outsb
cmp
cmp
inc
or
or
stos
andl
icebp
dec
data16
pop
xchg
movsl
add
fdivrp
add
arpl
pop
and
sbb
cmc
loop
addl
adc
mov
pushf
aas
call
lock
mov
mov
lock
dec
daa
outsl
loop
or
jno
in
les
rcrl
rclb
jo
mov
pusha
rclb
cmpsl
cmp
pop
cmovo
in
mov
pusha
sti
sahf
repnz
sbb
cmp
nop
adc
repnz
orb
add
add
pushf
xor
lea
cld
mov
mov
test
cmpb
lea
jp
inc
mov
mov
xor
out
push
jecxz
gs
or
jge
cmp
mov
dec
mov
sub
test
sub
xchg
cmpb
sarl
jecxz
jbe
je
cmp
cmp
xor
xchg
and
cltd
and
sbb
nop
dec
inc
cli
jnp
test
cmp
inc
inc
mov
and
inc
sbbl
and
faddl
outsl
or
mov
cmp
fstpl
lret
into
dec
and
inc
hlt
shlb
pop
sub
fadd
sub
push
cmp
jle
push
test
data16
mov
or
pop
xor
push
fiadds
dec
stc
inc
xchg
shrl
repnz
adc
scas
pop
jle
fsubrs
in
pop
cmp
cmpsl
stos
or
xchg
sbb
pop
jbe
into
or
and
jnp
enter
nop
mov
and
lds
sub
cmp
fiaddl
dec
stc
mov
stc
jne
mov
fwait
push
mov
ret
mov
aas
xor
sub
loopne
add
addl
arpl
ror
mov
cmp
pop
inc
dec
add
insl
fdivs
nop
mov
or
push
mov
test
push
sub
mov
adc
xchg
sahf
xchg
jcxz
mov
dec
sub
pusha
mov
sub
outsl
xor
inc
cmp
das
lret
in
xchg
in
inc
jp
sarb
call
and
imul
and
and
ficoml
addr16
shl
cld
lret
repz
push
outsl
scas
xor
mov
push
int3
jl
call
dec
loop
pop
stc
insb
repz
cltd
popl
inc
jmp
jge
fimull
shlb
imul
jg
dec
ja
test
jbe
sarl
sbbl
fiadds
jns
ljmp
bound
or
fsubs
push
xor
cltd
jmp
loope
fistpl
mov
ljmp
std
jge
lret
lret
dec
cwtl
clc
xchg
gs
test
hlt
nop
lret
cltd
adc
cs
in
mov
fwait
or
loop
push
ret
xor
mov
insl
pop
adc
or
pop
mov
les
dec
aas
sub
into
xor
pushf
ss
push
inc
sahf
push
push
ds
jbe
in
int
mulb
les
jb
mov
mov
pop
adc
stos
cmp
icebp
push
mov
sub
sbb
cmp
bound
sub
inc
xor
or
push
push
jno
sub
mov
cmp
jmp
add
pop
aaa
cltd
std
sbb
push
lds
test
cmpsl
sbb
out
or
lods
ds
popa
push
dec
mov
sahf
xor
daa
aad
lods
inc
add
jbe
or
xor
jmp
pushf
xchg
cmpsb
dec
mov
ret
les
clc
add
and
xchg
das
notl
pop
std
jb
jp
jns
scas
cmp
fcomi
add
daa
mov
lcall
das
ret
xlat
inc
xchg
jae
and
xchg
fisubs
out
cmovg
add
xor
and
lods
dec
jne
ds
pusha
sub
mov
mov
fcoms
mov
out
test
mov
clc
out
test
mov
mov
cmp
adc
test
lds
cmp
pop
lock
sub
sarl
cmp
inc
jae
popf
xacquire
cmp
fs
mov
lahf
in
adc
xlat
ja
mov
and
in
sahf
inc
rclb
lret
sbb
roll
stos
mov
or
or
je
xchg
or
popa
cmp
push
sub
push
outsl
hlt
cmp
movsl
add
mov
mov
sub
test
stos
dec
push
xor
cmp
out
aad
push
xor
dec
adc
arpl
push
mov
loopne
sub
aaa
add
into
sbb
xacquire
cmp
jo
xchg
ss
jge
cmp
xchg
sarl
mov
imul
pushf
and
stc
ss
in
notb
dec
sbb
or
mov
fcompl
cmp
inc
je
push
js
loopne
repnz
jne
inc
push
mov
inc
xor
cmp
loope
pop
dec
das
mov
jmp
pop
cld
out
das
mov
mov
inc
ljmp
cmp
cwtl
clc
pop
mov
nop
dec
push
mov
stos
pop
sub
pop
test
pop
and
aas
cli
imul
dec
cwtl
inc
jo
popf
sbb
or
pop
sbb
faddl
int3
and
xlat
std
sub
leave
push
loop
xchg
adc
leave
adc
movsl
in
call
and
stos
fildll
adc
push
fldcw
mov
insl
sbb
roll
mov
scas
sub
dec
sbb
push
pop
adc
repz
add
mov
flds
ss
xor
mov
das
dec
mov
mov
test
dec
dec
sbb
fdiv
arpl
lret
fdivrs
add
xor
push
add
cmp
stos
les
sbb
push
pop
mov
mov
ret
and
ja
add
xchg
mov
inc
xorl
mov
mov
push
and
fwait
mov
lods
jl
pop
sti
outsl
rolb
add
inc
inc
fdiv
test
mov
stc
mov
mov
stos
ret
aaa
mov
cmp
shl
scas
xchg
sub
sbb
push
cmp
fwait
cs
and
loopne
fildll
mov
sahf
js
test
xor
aaa
and
rcll
in
push
sbb
mov
adc
jmp
mul
inc
dec
je
mov
js,pn
dec
or
jge
push
loopne
mov
sbb
push
push
jg
and
mov
arpl
lret
mov
mov
jmp
dec
adc
add
scas
lret
push
test
and
inc
decb
xchg
ss
mov
add
mov
cmpsl
popf
and
cwtl
ret
xorb
loopne
arpl
jge
aas
and
dec
xchg
dec
cld
push
xchg
out
jb
std
push
cmpsb
icebp
repz
mov
mov
fsubrp
cwtl
adc
jecxz
sbb
mov
fisubrs
gs
lret
lods
pop
mov
in
addb
sub
lods
mov
dec
iret
xchg
cld
sub
lds
mov
aaa
ja
je
xchg
dec
int3
and
mov
cmc
jbe
ja
fldenv
jle
addr16
sub
mov
enter
shlb
jecxz
ja
sub
aas
push
jg
jg
sbb
inc
rol
rorl
cmp
cmp
cmpsl
pop
stc
inc
and
dec
mov
bound
mov
mov
in
fwait
sbb
mov
mov
shl
fisubs
adc
insl
fnstcw
out
pop
lcall
ja
cwtl
push
call
sub
out
push
inc
repz
cmp
cmp
pop
ret
inc
mov
icebp
mov
sub
or
popl
push
mov
test
cld
or
pop
scas
sub
or
mov
into
inc
cmp
or
mov
mov
shlb
insl
fstpl
jnp
mov
xchg
ds
push
imul
jge
or
jnp
or
in
add
xor
jno
mov
mov
dec
add
ficoms
jo
dec
pop
inc
mov
xor
pop
mov
push
shl
xchg
imul
inc
mov
xchg
cmc
imul
stc
test
stos
lret
mov
xchg
dec
pushf
aam
out
mov
mov
in
je
dec
mul
or
aam
movsl
loopne
lahf
fmuls
xchg
and
push
fsubp
inc
imul
xor
hlt
dec
add
lret
and
lds
je
xor
pop
mov
and
test
mov
stos
inc
mov
cmpsb
imull
xor
faddl
push
add
lret
mov
addl
push
jne
pop
bound
das
inc
pop
jl
adc
pusha
rcrb
cmpsl
xchg
push
imul
stos
outsb
pushf
bound
aam
xor
mov
lods
or
test
mov
mov
and
cmpsl
test
out
adc
out
xchg
icebp
push
and
outsl
xor
and
mov
lock
pop
pop
add
add
sbb
scas
adc
iret
call
mov
scas
push
rorb
cld
stc
lock
out
push
and
pop
frndint
and
and
ret
sbb
xchg
cmp
popa
and
jo
cs
nop
es
push
enter
loope
ret
in
out
fcompl
inc
xchg
mov
lcall
mov
js
in
pop
mov
push
daa
arpl
das
lea
mov
imul
stc
xor
mov
sub
lret
or
mov
divb
sub
mov
cmp
call
jne
pop
ljmp
cmp
sub
or
cwtl
aaa
or
lods
int
test
js
jp
mov
or
in
mov
insb
fnsave
cwtl
test
je
push
adc
mov
sub
loope
ljmp
cs
mov
inc
add
cltd
cmpsl
cmp
and
sub
pop
mov
sub
outsl
fcoml
outsb
popa
mov
adc
out
jnp
test
jmp
stc
arpl
mull
inc
xor
mov
pop
mov
jo
faddl
ret
sbb
call
cmpsl
int3
repnz
xor
arpl
push
popf
or
jno
mov
mov
jle
stc
imul
cmpsl
call
mov
ljmp
loop
ds
mov
mov
xor
xor
nop
adc
shl
psubsb
mov
push
push
pop
mov
sbb
repz
xchg
imul
jbe
mov
sub
addr16
imul
add
cmc
imulb
ficoms
in
and
stos
cmp
int
imul
aas
aad
jge
aas
xchg
jecxz
in
jmp
cmpl
cltd
jae
pop
in
shrl
inc
inc
mov
sub
xor
sbb
cld
inc
mov
push
call
addl
scas
sbb
add
test
lods
in
fmull
inc
js
mov
jo
outsl
and
cwtl
pop
xor
lret
sbb
dec
jno
testl
cs
out
pop
push
push
jle
add
outsl
xorl
fidivs
jo
cmp
daa
dec
mov
call
push
call
cwtl
addr16
std
or
leave
adc
andl
or
mov
dec
mov
push
aas
pop
in
mov
sbb
jae
mov
ja
popf
push
dec
mov
aas
mov
shl
jo
add
dec
fnstsw
test
mov
repz
push
mov
repz
insl
sbb
stos
call
jo
mov
cmp
cwtl
shrl
adc
ds
pop
xchg
push
and
ret
mov
test
out
in
mov
iret
jp
neg
lods
repz
fs
cmp
add
movsl
dec
mov
sub
ja
lods
imul
or
enter
and
lock
loopne
sub
mov
out
add
arpl
add
mov
xchg
push
fldt
push
and
mov
iret
in
sbb
xchg
cmpl
add
out
cmp
aad
insl
mov
call
add
gs
add
cmp
and
pop
lret
or
lods
mov
lahf
push
loop
rcll
in
fdiv
lods
in
enter
mov
jp
or
sbb
dec
ss
bound
mov
jno
inc
icebp
decl
sbb
dec
pop
add
in
or
and
mov
pop
mov
test
lcall
stos
pop
push
repnz
pop
js
loop
add
inc
btr
dec
add
jecxz
xor
and
and
ret
add
dec
nop
call
loop
stos
popa
mov
std
xchg
xor
or
lea
nop
jb
fadds
jecxz
iret
repnz
lods
and
lret
roll
add
push
mov
pop
test
sub
orl
mov
out
or
outsl
ret
out
cmp
fstps
lock
sub
lcall
lods
addl
addr16
dec
scas
lds
in
sub
cli
leave
jo
jnp
adc
loopne
scas
nop
call
xchg
push
lock
pop
fwait
popf
cwtl
pop
and
loope
push
inc
repz
add
dec
data16
scas
movsl
test
daa
inc
add
jae
pop
insl
sbb
mov
xor
pop
ret
dec
inc
je
sbb
jge
cld
ljmp
jns
dec
imul
in
ljmp
jbe
mov
imul
mov
imul
daa
int
stc
jg
lret
sub
jae
les
sub
js
sbb
int3
dec
inc
mov
mov
mov
jae
pop
dec
test
adc
cmp
sbb
out
sbbl
jp
mov
sub
mov
mov
lds
xor
push
dec
inc
lret
movsl
bound
outsb
mov
lahf
pop
push
ret
add
pop
test
ja
mov
and
lret
cmp
in
incl
sbb
mov
pop
mov
adc
inc
clc
fistps
loopne
gs
sub
repnz
mov
enter
rcl
fisttps
out
mov
imull
xor
jmp
or
xchg
sbb
mov
mov
sbb
push
iret
sarb
insl
jl
movsb
in
dec
cmpsl
adc
dec
or
int3
outsb
cltd
dec
push
sub
xchg
jb
into
cmp
jae
scas
mov
lds
or
mov
pop
shl
lret
mov
das
xchg
insl
imul
fcoms
repnz
mov
dec
mov
cmpsl
xchg
inc
in
hlt
or
jns
push
jo
imul
insl
neg
cmpl
xchg
pop
pop
in
mov
les
out
sub
fs
les
outsl
push
pop
stc
test
or
add
data16
cwtl
sahf
add
movsb
push
ds
push
jge,pt
repnz
insb
stc
aas
lcall
in
pop
outsl
fisubl
imul
addr16
lahf
cmpsb
lods
pushf
mov
mov
and
jo
cmp
out
mov
scas
inc
ret
das
mov
cltd
dec
dec
mov
lea
out
movsb
sbb
addr16
mov
hlt
or
sub
mov
push
fstl
adc
out
mov
push
loop
mull
sbb
insl
fildll
jne
sub
sahf
inc
movsb
cmp
xrelease
filds
imull
inc
inc
sub
test
push
mov
in
push
mov
jmp
mov
or
sub
aad
lcall
dec
es
into
shll
cwtl
es
call
jns
scas
aam
dec
sub
sbb
popf
or
fst
ficoms
lret
pop
pop
dec
jle
add
fnstenv
jo
adc
fldz
mov
jne
call
sub
in
push
mov
mov
mov
push
xlat
and
mov
out
in
mov
add
pusha
xchg
adc
cmpb
lcall
test
sub
dec
xchg
loop
mov
sbb
hlt
sbb
cmc
adc
cs
imul
dec
std
cmp
cmp
or
loope
push
xchg
sti
mov
icebp
imul
inc
sub
adc
arpl
jge
test
add
sub
mov
push
xor
cmpsl
fimull
shl
or
rcr
adc
ljmp
jnp
adc
lcall
cmp
in
inc
cmp
cmp
xchg
cmp
and
cs
nop
icebp
mov
xor
in
xor
push
cmpsl
dec
adc
movsl
jmp
adc
and
push
imul
jp
in
cwtl
loop
jge
sbb
inc
addr16
inc
addr16
pop
movsl
push
sti
popa
xchg
lock
pop
jnp
fwait
ljmp
jp
stos
jno
popf
movsl
ret
das
push
mov
test
mov
sbb
fildll
clc
icebp
inc
jmp
mov
or
out
sbb
les
dec
mov
out
and
lret
fistpl
in
push
fiaddl
pop
mov
adc
pop
sbb
jae
inc
das
fstl
mov
js
rcll
push
movsb
push
or
xlat
stc
adc
int3
inc
insl
inc
pop
sub
in
out
push
popa
rorb
mov
jge
test
jecxz
inc
sub
scas
imul
mov
insl
in
or
xor
xchg
lock
sub
push
mov
insl
out
inc
ret
pop
call
xchg
mov
cmp
call
mov
nop
push
in
rorb
cmp
push
dec
popf
movsb
jge
or
xor
imull
out
cli
cmp
mov
call
or
add
inc
lock
std
or
pop
fidivl
mov
jne
add
push
fidivrl
dec
push
jnp
rorb
push
jmp
lods
mov
xchg
adc
adc
xchg
sub
int
leave
mov
dec
dec
ja
dec
mov
outsl
cltd
lcall
icebp
and
addr16
dec
pop
cs
mov
adc
add
push
in
js
and
xchg
js
mov
lods
inc
movsl
rol
sub
shrl
aad
fidivl
pop
fisubrl
std
into
std
pusha
sarb
pop
shlb
pusha
je
jle
or
inc
in
clc
popf
out
mov
daa
dec
mov
fxtract
fldenv
dec
xchg
sbb
and
in
xchg
sub
in
xor
adc
iret
neg
stos
and
psllq
sub
push
push
sahf
dec
js
std
jle
cs
aam
dec
in
aas
icebp
cmpsl
push
stc
invd
mov
sub
incl
pop
mov
cmpsl
xchg
int3
mov
pop
mov
cmp
call
in
mov
push
pop
lahf
fcomi
out
xchg
mov
dec
into
lcall
cmpb
es
pop
sub
and
sbb
mov
mov
xchg
jbe
ja
cmc
and
or
adc
mov
add
cmp
in
rorl
adc
in
push
pusha
aam
jmp
sti
out
out
dec
dec
mov
pop
mov
sub
sbb
into
jecxz
test
lcall
or
jl
adc
cld
lods
ds
or
out
cmp
xor
int
into
jae
or
loop
out
and
mov
add
cmp
lcall
hlt
inc
adc
or
adc
andb
inc
sbb
and
mov
pop
and
mov
add
mov
les
xor
cmp
xchg
repz
or
out
iret
mov
jns
sti
mov
cmp
out
iret
out
jne
into
mov
fimuls
iret
jae
xchg
push
in
or
scas
mov
xchg
loopne
sub
test
negb
adc
imul
mov
mov
inc
dec
xchg
int
cmp
pop
iret
or
cltd
push
cmp
into
dec
movsb
xor
and
les
sub
leave
ss
loop
push
out
nop
fldcw
idiv
stos
scas
or
lock
je
push
xlat
fcompl
jle
cmp
dec
push
push
ja
mov
jmp
cld
popl
stos
mov
ret
dec
aas
mov
sub
cmp
inc
repnz
pop
mov
inc
shll
nop
in
js
imul
adc
mov
dec
js
lcall
mov
jno
cmp
mov
inc
addr16
test
in
sbb
fcomip
mov
sub
les
loopne
test
sahf
xor
pop
adc
jp
lds
fnstcw
scas
inc
lret
jo
inc
in
movl
int
add
cmpsb
lret
out
mov
inc
lcall
cld
jno
imul
lods
and
insb
jns
sub
and
adc
or
shll
dec
cmpsb
mov
pusha
in
adc
cld
pop
test
xchg
pop
pop
dec
outsl
fildl
pop
imulb
fadd
out
inc
push
cmp
loope
sbb
mov
dec
imul
or
push
scas
mov
lds
jnp
ja
loop
test
pop
scas
aas
mov
das
and
loopne
sbb
mov
repnz
cmp
into
fisttpl
int3
popf
push
lahf
andb
mov
pop
std
add
mov
push
mov
cs
pusha
lret
out
iret
dec
jecxz
mov
fisttpll
cwtl
push
inc
fisubl
cld
jecxz
mov
pushf
lods
das
movsl
xchg
pop
addr16
in
and
inc
ss
std
jns
inc
mov
jae
and
mov
arpl
xchg
jb
imul
push
jle
outsl
xchg
les
popf
mov
imul
rorl
inc
cmpsb
fcomps
or
out
aam
nopl
inc
mov
cmp
push
cmpsb
and
dec
mov
jae
lahf
sahf
ds
outsb
incl
imul
adc
ret
stos
cli
xor
pop
int
leave
fadds
fwait
stos
fidivl
xlat
mov
repnz
bound
push
inc
dec
cmp
hlt
dec
pop
pop
push
and
ds
flds
adc
ljmp
and
js
and
jle
cltd
mov
test
jp
mov
fs
test
ret
xchg
cli
ja
inc
pop
dec
loop
mov
imul
ljmp
cmp
sub
add
mov
sbb
pop
pop
mov
sub
mov
push
aaa
mov
dec
cmp
imul
mov
push
push
jbe
cltd
pop
aaa
shll
xchg
and
mov
dec
sub
int3
andb
hlt
dec
pop
cltd
dec
xor
jle
inc
in
or
and
push
mov
xor
loop
mov
xchg
sub
cltd
dec
hlt
push
adc
fcoms
mov
mov
push
push
les
outsl
sarl
in
add
inc
leave
mov
icebp
and
push
es
loopne
test
lea
movsl
or
fmuls
imul
mov
cmp
mov
inc
adc
call
ret
lcall
les
fcomps
pop
pop
rcr
mov
sbb
mov
jb
shl
stos
shlb
fstl
sbb
rsm
xchg
subl
xchg
insl
std
pop
adc
aad
pop
inc
or
mov
lods
pop
ja
xor
mov
loope
jge
mov
adc
hlt
ret
jno
mov
xchg
sub
test
cltd
mov
cmp
push
in
cld
xchg
aaa
and
sahf
inc
aas
sbb
out
inc
lahf
cmp
mov
mov
push
inc
jb
movsb
fwait
add
outsl
mov
and
imul
jmp
mov
push
and
fdivl
pop
fwait
divb
dec
lods
lock
push
out
rolb
sub
hlt
cltd
and
push
test
mov
xchg
xor
lds
inc
adc
ficoms
aad
call
pop
jmp
xor
je
inc
xor
or
sub
mov
js
xor
popa
or
inc
xchg
sbbb
pop
and
sti
ret
xchg
mov
lods
lds
mov
and
push
rcrl
inc
orl
int
sbb
inc
dec
scas
leave
jne
jbe
jge
add
dec
cld
cmovno
lods
setnp
pushf
jne
or
fs
aaa
dec
mov
dec
sbb
ljmp
into
xchg
clc
bound
data16
jno
dec
xor
mov
sbb
cmc
ret
cltd
bswap
js
xchg
cmp
insb
mov
lahf
sub
lods
jle
xor
fisubrs
adc
shr
mov
xor
lret
cld
arpl
scas
ljmp
mov
stos
movsl
outsb
mov
pop
ffreep
loopne
or
xchg
pop
inc
inc
and
and
pop
fstl
loopne
fmuls
xor
rolb
push
adc
and
roll
cli
outsl
xor
mov
je
lret
push
call
lods
rcll
pop
jne
mov
jp
cli
cmp
add
sub
stos
cmp
adc
fwait
pop
adc
pop
mov
outsl
lahf
ds
call
mov
lahf
int
clc
xor
movsl
push
aam
adc
movsb
xor
adc
xchg
test
mov
add
or
enter
sti
pop
xor
mov
mulb
xor
dec
push
popa
iret
jb
daa
xchg
movsl
sbbl
add
dec
xchg
adc
aaa
loop
lock
mov
incl
shrl
jbe
lock
xor
out
popf
adc
rclb
lahf
popa
aam
pop
xor
sub
dec
mov
push
pop
xchg
lea
push
mov
add
cmp
stos
inc
out
or
mov
std
sub
cltd
ret
sbb
mov
popa
shl
xchg
ja
pop
dec
and
dec
dec
ds
jbe
push
roll
pop
adc
dec
je
cmp
jae
cmp
push
inc
jo
in
loopne
xorb
cli
cmp
mov
xor
xor
sahf
and
roll
xor
lret
adc
lods
ss
imul
mov
ret
push
and
add
ret
shrl
imul
push
out
jo
aas
mov
mov
xchg
pushf
dec
cmpsl
push
and
mov
cmpsl
sahf
cs
mov
jle
sbb
call
add
mov
mov
ret
sbb
add
sbb
out
test
push
loop
add
ja
mov
test
lret
ljmp
ficoml
xchg
push
arpl
pop
or
popf
sbb
jns,pt
call
int
inc
pop
xchg
jns
in
hlt
sbb
adc
fisubrs
push
cmp
mov
not
jo
popw
hlt
ds
in
jl
push
mov
ret
imul
sbb
pop
sar
cmpsl
push
lret
leave
ret
sub
jnp
iret
sbb
sub
pop
out
pop
cmp
lret
movsl
xchg
mov
pop
bound
mov
dec
int
inc
adc
js
mov
mov
loopne
stos
dec
fisubl
cli
dec
mov
cmpsl
sahf
jmp
push
in
xor
jae
fs
lock
inc
pop
inc
add
das
cltd
rorb
xor
sar
paddw
add
fisttpll
mov
push
cwtl
sub
sub
mov
pop
leave
jecxz
or
stos
rcrl
mov
aam
xor
stc
shrb
orb
popa
jb
cmp
aam
xchg
mov
cmp
xor
clc
out
stos
daa
clc
ds
xchg
sti
mov
fwait
lds
fidivs
mov
lret
push
stc
lods
push
fs
jmp
lea
push
hlt
repz
in
adcb
cmc
clc
push
xchg
pop
roll
jecxz
pushf
icebp
xchg
push
pop
inc
test
xor
lret
das
sahf
dec
push
sbb
or
dec
data16
cld
sub
nop
adc
clc
jmp
fsubl
mov
jnp
clc
pop
int
int
and
in
adc
shrb
out
sbb
dec
arpl
jecxz
pushf
or
daa
mov
inc
or
push
adc
scas
outsb
pop
sub
movl
nop
ljmp
dec
push
xor
pop
dec
loop
clc
sbb
pop
and
addl
in
gs
in
arpl
xor
xor
mov
std
jne
mov
aas
jle
leave
pop
mov
mov
sbb
ja
fmull
jb
ljmp
icebp
lods
cmp
adc
imulb
mov
int3
shlb
jge
cld
inc
pop
iret
adc
mov
repnz
loopne
pop
and
jl
les
cmpsl
out
push
lock
mov
push
inc
inc
jmp
lods
jl
push
jmp
and
in
jae
inc
and
imul
inc
cmpsb
arpl
out
mov
pop
mov
test
std
aad
inc
jecxz
and
xchg
sti
icebp
or
jge
add
sbb
xor
mov
test
das
mov
adc
add
int
repz
dec
cmp
rcrl
loope
push
xchg
pop
and
ret
and
fistl
js
mov
inc
aas
icebp
sarb
pop
fistpl
inc
aaa
lods
pop
jns
mov
mov
popa
cli
push
dec
bound
ret
movb
fmul
sub
loope
fstp
xor
rcrl
in
out
inc
ret
scas
pushf
inc
int
test
xchg
push
xchg
out
repnz
repz
cwtl
aas
jb
fnstenv
mov
imul
or
dec
scas
aaa
aad
push
xor
push
add
mov
js
push
pop
or
mov
cld
or
push
sbb
das
jo
cs
fwait
inc
adc
xchg
sub
mov
or
xlat
cs
or
stos
xor
loope
fbld
add
sub
mov
enter
pusha
es
or
out
push
push
movsl
fnstsw
hlt
or
and
jmp
push
jecxz
rcll
call
adc
or
inc
lea
mov
loope
and
daa
cmp
insb
fcmovu
dec
mov
sbb
je
inc
orb
adc
rclb
and
in
add
jecxz
inc
mov
mov
call
in
sub
push
daa
pop
into
lcall
fisubs
int
aad
xor
mov
xchg
int3
mov
sbb
jno
push
inc
ret
pushf
adc
add
ljmp
xchg
sti
pop
jnp
inc
loopne
push
adc
mov
pop
jmp
adc
adc
dec
push
cmp
mov
mov
icebp
jg
in
or
dec
sub
sbb
mov
push
popa
jg
jb
push
xchg
push
insb
cwtl
jbe
jg
int
pause
push
push
inc
inc
rclb
popf
cmp
cmc
xlat
lock
repz
pop
rorl
dec
in
pop
pushf
push
mov
pop
hlt
loope
mov
mov
and
cmp
testl
loopne
mov
cmp
test
and
xchg
scas
divb
and
fs
mov
adc
sbb
jle
cmc
std
insb
jp
inc
push
in
cltd
popa
out
push
add
mov
iret
mov
sbbl
aad
sub
jmp
xchg
cwtl
in
adc
inc
dec
call
jnp
inc
mov
into
mov
or
push
add
pop
xchg
add
pushf
loope
cmpl
in
dec
daa
mov
cmpl
into
sbb
fstps
mov
add
xlat
ret
mov
or
jmp
mov
insb
repz
add
sub
shr
into
jl
es
in
enter
and
out
or
popf
xchg
jmp
xlat
jnp
into
scas
and
mov
aam
cmovns
mov
xchg
test
sub
fucomip
mov
aas
aad
jp
add
ds
xlat
fisttpl
adc
stc
push
adc
sbb
in
xchg
sar
mov
mov
cmp
pop
mov
sub
out
pop
adc
aam
push
mov
lods
call
sub
cld
mov
sbb
fwait
sub
mov
shl
outsl
ret
shll
int
xchg
mov
xchg
xor
cltd
je
roll
nop
cmp
call
and
cmp
lds
sbbl
imul
mov
adc
dec
jl
lods
call
and
outsb
pushf
cltd
sub
movsl
xor
in
cmp
xor
lret
leave
xchg
scas
mov
xor
out
lret
sbb
movsl
cs
mov
sub
outsl
mov
stos
jb
lods
jmp
or
push
lret
ret
xchg
jmp
xor
and
notl
test
xor
cmp
in
ljmp
mov
lods
incb
mov
lods
dec
inc
inc
jmp
in
pop
dec
inc
xorl
gs
adc
cmp
jecxz
or
ret
gs
insl
and
loope
mov
dec
test
sbb
lahf
or
dec
inc
and
sbb
sbb
mov
pop
jg
fldl2e
xor
xor
sbbl
mov
dec
push
cmpsb
ret
dec
je
xchg
push
jns
sahf
or
fisttps
rcrb
xchg
ret
cld
push
aas
into
sbb
fdivrl
xchg
jle
jae
xchg
fsub
out
cmpsl
jbe
inc
push
cmc
xchg
dec
mov
dec
xor
adc
daa
iret
add
movsb
mov
and
dec
cmp
xor
cmpsb
sub
inc
ret
dec
sahf
ret
mov
loop
mov
ds
pushf
dec
cmp
dec
jne
jmp
push
mov
fstps
clc
jle
insl
in
negl
out
loope
decl
push
jmp
repz
push
push
xchg
std
dec
stc
xchg
loop
cs
mov
mov
inc
fisttps
or
popa
add
std
dec
inc
push
popl
jmp
pop
sbb
scas
adc
and
das
xor
mov
bound
add
movsl
dec
adc
insb
xor
pop
dec
inc
adc
mov
rorl
mov
loop
sahf
mov
add
loopne
out
movsb
jae
hlt
fnstsw
nop
pop
and
popa
sub
or
mov
hlt
lock
nop
addr16
loope
mov
negb
jnp
rcl
mov
faddl
mov
outsb
jl
cli
xchg
jae
pop
adc
jne
and
adc
int
jno
xor
fadd
sbb
pusha
push
test
aaa
pop
push
or
sub
idivb
mov
mov
pop
inc
and
push
xchg
mov
lahf
aas
xor
enter
and
xor
decl
dec
daa
les
insl
and
lcall
pop
lea
mov
push
lahf
fsubp
repnz
adc
pop
mov
leave
inc
repz
jbe
mov
jg
pop
into
mov
rcrl
mov
repz
mov
lods
mov
add
jmp
and
xor
lahf
insl
movsl
loope
pop
fiaddl
jns
fwait
pop
sub
ret
jg
sub
and
jg
cltd
mov
inc
mov
rsqrtps
sbb
js
fldcw
xchg
sahf
push
dec
pop
rorb
lahf
inc
push
mov
aam
dec
sarb
push
divb
imul
cld
daa
shll
ja
int
pop
cmp
arpl
fnstsw
mull
lret
stc
pop
push
inc
lea
jae
filds
jbe
in
fcoml
push
lods
inc
dec
ja
lock
fdiv
cs
pop
daa
adc
pop
push
data16
lds
xchg
mov
aad
or
xchg
sahf
gs
xchg
test
inc
dec
ljmp
pusha
xchg
pop
cmp
cmc
ds
std
lock
popa
test
and
adc
sbb
jle
push
iret
std
push
or
sbb
insl
jo
cmpsb
lds
and
lock
scas
jno
xchg
or
mov
nop
test
icebp
cli
sti
jge
or
sbb
mov
sbb
mov
xor
orl
xchg
dec
push
outsl
movsb
in
adc
aad
jmp
pop
int
ja
adc
jb
mov
xchg
lcall
sahf
mov
lret
leave
loope
mov
mov
inc
scas
xchg
inc
arpl
push
jbe
lahf
push
repz
cmp
and
xor
adc
jne
decb
lahf
dec
jne
aam
cs
inc
xchg
mov
aam
adc
cmp
int
lock
lcall
nop
sub
xor
aas
sbb
in
decl
jae
mov
in
lret
fidivl
inc
or
mov
loopne
shlb
orl
xor
imul
mov
mov
sbb
mov
mov
in
std
cmp
mov
les
notl
jb
call
dec
pop
xlat
in
cwtl
aam
mov
sbb
push
cltd
mov
sbbl
stc
pop
rorl
gs
and
jnp
aas
or
push
push
xchg
pop
dec
jb
les
aad
rolb
push
in
push
adc
pop
or
mov
cld
call
icebp
outsb
arpl
pop
fwait
cld
lret
filds
xchg
lcall
arpl
adc
sub
xchg
cmpsl
mov
imull
sbb
xchg
add
ffreep
mov
xlat
push
jp
mov
xchg
movsb
inc
xchg
adc
js
shr
sub
mov
pop
pop
xor
fs
mov
xchg
pop
and
adc
ja
pop
dec
repz
cmp
sub
inc
popf
addr16
inc
jp
mov
xlat
lods
sahf
push
mov
mov
adc
mov
ljmp
pusha
mov
out
sub
xor
lea
push
jnp
lahf
in
mov
dec
nop
inc
cmc
jno
sbb
adc
cwtl
mov
pop
adc
sbb
scas
push
ficomps
loop
lret
iret
bound
mov
into
inc
outsl
stos
pop
mov
movl
mov
cmp
adcl
pop
pop
cmp
jle
inc
ss
xchg
inc
je
ss
inc
ficoms
js
loope
inc
add
jmp
mov
inc
mov
lock
mov
in
mov
xchg
es
fadd
jecxz
fsubs
dec
js
push
fsubrl
enter
mov
xchg
test
mov
inc
sbb
inc
repz
cmc
fs
mov
inc
or
and
int
lock
stc
add
js
loopne
popf
mov
push
inc
dec
fbld
jg
push
mov
leave
pop
loopne
xchg
scas
arpl
pop
daa
popa
cmp
negb
rdpmc
fisubs
stc
jecxz
scas
dec
adc
lahf
pop
sbb
jbe
fildll
mov
mov
mov
incl
scas
fadds
xchg
aaa
cmp
xor
mov
add
fs
std
ljmp
aam
hlt
mov
adc
xor
inc
push
xor
pop
mov
aas
jge
fdivrl
mov
pop
adc
shrl
cmpsl
mov
add
push
loopne
push
lock
addr16
std
clc
inc
jg
out
shll
push
loop
adcb
or
xchg
push
jl
mov
gs
popf
mov
sbb
cltd
cmpsl
jo
ja
ja
stos
cltd
ljmp
ret
fildll
fucomi
pop
adc
adc
pop
lret
jns
mov
enter
in
jb
mov
paddsb
out
imul
cwtl
sti
andl
pusha
pop
mov
outsl
xor
in
sbb
pop
lcall
and
dec
out
movsb
enter
les
dec
push
dec
outsb
cwtl
push
jbe
xor
lret
shld
arpl
pop
add
sbb
dec
fsubrp
add
xchg
xchg
je
mov
cmc
lea
mov
mov
jb
jns
sub
mov
and
cmpsb
daa
ret
xor
dec
movl
push
clc
sub
or
lods
lret
dec
dec
les
lea
pop
pop
repnz
lea
arpl
mov
outsl
movsl
xor
xor
out
cmc
xor
cmp
push
push
jbe
loopne
jp
dec
adc
and
fdivs
sub
in
test
mov
insb
scas
cmp
shrb
stos
cwtl
imul
or
lock
adc
lods
je
xchg
cmpsl
js
ret
sub
pop
adc
mov
shll
xchg
stc
pop
jne
adcb
pop
ja
cltd
stc
pop
adc
ss
fiaddl
xchg
cmpsl
lea
push
mov
pop
repz
xlat
aas
shrb
pop
test
out
stos
sub
test
pop
xchg
imul
mov
shrl
pop
adcb
ret
std
fists
aad
add
dec
fwait
int
scas
xchg
jle
jecxz
mov
popa
test
xor
cmpsl
aaa
movsb
es
jmp
filds
mov
or
lahf
fmuls
sti
shll
repz
or
in
mov
scas
out
mov
xchg
or
scas
daa
xor
pop
mov
xor
out
dec
imul
daa
lds
inc
add
ret
inc
lcall
aas
out
fisttps
rolb
sahf
or
cmp
repnz
fnstsw
dec
outsl
jl
and
adc
add
and
sbb
mov
ljmp
sub
mov
sbb
add
insb
jne
xchg
xchg
sbb
or
dec
jno
outsl
inc
add
sub
pop
push
jecxz
dec
lea
stos
cmp
imul
pop
ficoml
test
lock
inc
xchg
add
aam
iret
mov
cmc
pop
xchg
mov
xlat
mov
aas
outsb
stc
cli
cmp
jecxz
mov
std
inc
sub
pop
mov
loop
pop
mov
xor
ljmp
shlb
mov
mov
cld
pop
mov
lea
daa
jae
daa
test
out
xchg
sarl
mov
jmp
adc
pop
mov
mov
sbb
mov
xchg
push
movsb
loopne
xor
push
mov
xchg
adc
pop
and
ljmp
inc
and
insl
xchg
xchg
loopne
rcrb
ret
sub
lret
fildll
xchg
pop
xor
jge
push
push
call
push
mov
jl
popf
sti
lock
adc
mov
cmp
add
leave
xchg
sbb
and
mov
rcrl
out
inc
and
iret
in
jb
fildl
xlat
cmp
sbbl
cli
hlt
mov
aas
add
lahf
ljmp
nop
lock
int3
push
repz
jl
fs
loopne
or
push
movsb
mov
xchg
aaa
mov
cwtl
mov
cmp
adc
stos
or
cltd
and
push
aad
or
stos
popf
mov
cmp
bound
mov
sub
and
and
xor
push
lret
pop
and
mov
xor
in
dec
test
into
flds
cmp
and
jg
mov
mov
outsb
push
in
xor
inc
cmpsb
xchg
orl
std
xchg
rsm
sbb
pop
scas
dec
scas
das
lahf
mov
xor
inc
daa
subb
das
inc
test
stos
dec
add
push
loop
sbb
fsubrl
enter
xchg
fstl
xlat
pop
cmpsb
mov
jmp
cmp
movsb
inc
inc
fsubs
inc
and
test
daa
cli
dec
or
cmc
in
filds
jg
int3
and
add
in
xlat
mov
ja
xor
lods
cmc
stos
scas
jp
inc
mov
pop
and
aaa
imul
bound
mov
call
fldenv
arpl
adc
xor
insl
mov
insb
and
das
jg
jmp
jle
cmp
inc
push
sbb
stc
inc
mov
rclb
or
scas
ljmp
mov
xor
add
cmc
inc
push
lods
hlt
add
pop
leave
mov
jecxz
cmp
sub
mov
and
popa
aas
or
adc
mov
mov
popf
out
jecxz
cltd
mov
test
sub
mov
mov
test
lret
sti
stos
hlt
negl
popf
sahf
leave
pop
xchg
jne
dec
jmp
std
fmul
imul
push
aaa
push
mov
mov
cmp
stc
mov
js
or
push
ds
je
cmp
pop
lret
pop
lahf
xor
nop
xchg
inc
xor
lcall
mov
scas
push
loop
int
add
xlat
outsl
push
mov
sub
cltd
pop
jg
sbb
jmp
outsb
in
insl
push
ss
xor
sbb
scas
roll
xchg
xchg
daa
cltd
pop
bnd
mov
sub
std
adc
add
imul
ja
int3
push
mov
clc
jae
lea
and
or
cmp
jl
divl
push
movsl
sbb
xchg
inc
mov
arpl
cltd
push
testb
sarb
daa
jne
add
sbb
pop
sub
xor
pop
nop
jge
ds
push
jb
scas
testl
popl
push
cs
sbb
in
movups
pushf
popf
cmp
jp
stc
aad
cltd
adc
out
loop
xchg
mov
push
aas
out
icebp
or
dec
seta
fsubrs
mov
lods
mov
push
cmp
mov
ds
cmpsl
jle
pop
mov
shlb
sub
int3
pop
cld
ljmp
pop
jne
mov
cmp
imul
cwtl
adc
inc
test
push
cmp
xor
push
les
int3
fsubrl
cwtl
dec
int
pop
pop
sti
sbb
or
inc
insl
lea
in
popf
mov
std
shl
les
in
iret
adc
addl
fwait
insl
dec
stos
adc
lret
adc
fwait
push
push
lock
xchg
fs
xor
out
test
mov
push
pop
sub
es
pop
iret
add
cmp
out
fwait
stos
rcrl
adc
lea
iret
je
dec
repnz
dec
xchg
push
popa
dec
gs
notb
push
adc
aad
adc
in
repz
idivl
stos
inc
jecxz
in
mov
das
or
inc
jecxz
aaa
lods
es
out
inc
mov
push
jg
imul
in
push
mov
int
popa
iret
jo
jno
mov
mov
scas
xchg
lock
push
ja
lea
jmp
cld
out
ljmp
push
adc
lcall
and
mov
lret
mov
jge
push
icebp
or
loopne
push
pushf
test
and
lods
adc
pop
push
inc
cmpsl
mov
stc
jbe
mov
cmp
mov
xor
and
dec
mov
push
maxps
sub
in
roll
push
std
arpl
int
outsb
pop
movsb
cli
pushw
push
sbb
cmp
cltd
dec
movsl
scas
pushf
shll
push
lock
mov
jmp
pop
pop
add
out
and
cmpsl
push
jg
and
movsl
aas
call
mov
scas
out
mov
sub
cli
jns
push
pop
andl
inc
dec
push
mov
push
pushf
mov
xor
inc
xor
dec
bound
shlb
sbb
xor
movsl
add
js
aam
or
mov
dec
insl
pop
mov
or
add
stc
sbb
fistl
mov
subb
lds
out
stos
fs
and
and
addr16
or
push
mov
xchg
lods
cmpsl
jecxz
jle
xlat
dec
repz
add
xor
xchg
push
cmp
mov
ret
push
imul
rolb
xlat
inc
mov
nop
filds
push
push
loopne
aam
sub
subl
pop
sub
outsb
jo
add
addr16
jb
stc
xchg
cmpsl
sbb
mov
fsubs
jmp
xchg
out
icebp
mov
xchg
lret
add
ljmp
and
rcrb
cmc
out
sbb
dec
call
gs
ret
and
cmp
dec
in
xor
aaa
or
idivl
jne
jo
ss
gs
jmp
push
push
bound
jnp
lret
cmp
shlb
inc
mov
stos
mov
aaa
mov
gs
cmpsb
or
xor
adcl
rorb
push
les
add
lahf
ljmp
lock
pop
inc
mov
stos
pop
out
sbb
gs
add
cs
jno
mov
push
lock
insl
and
jo
divl
xor
clc
inc
js
inc
cmc
roll
outsl
fistpl
xchg
mov
xor
mov
lahf
ret
dec
rcll
dec
in
imul
jno
loope
int3
scas
push
stos
lcall
jo
or
inc
sarb
xchg
ja
mov
dec
lock
icebp
jae
pop
mov
mov
call
xor
xchg
cmpsl
ret
ret
int
test
pop
xor
inc
push
jge
jecxz
push
stc
sahf
pop
push
jb
jnp
repnz
xor
fwait
aas
decl
cmp
mov
es
scas
repnz
cld
push
sti
mov
fistpll
mov
jnp
in
cmc
or
sbb
in
jg
cltd
xor
lahf
mov
test
aaa
mov
repz
xchg
fs
movsl
push
xor
fdivr
das
xlat
test
and
cmpb
mov
cmpsb
pop
gs
and
addr16
mov
add
pop
cmp
mov
sbb
cwtl
mov
pop
enter
mov
mov
test
push
dec
xorl
lods
jno
jnp
adc
push
dec
ret
movsl
push
sahf
inc
sbb
movsb
js
bound
insb
in
cmp
or
mov
jl
fiadds
lods
inc
xor
mov
push
bswap
xchg
jg
mov
push
and
and
or
jnp
add
cmp
data16
mov
xchg
adc
mov
add
int3
xchg
shll
lea
push
inc
mov
or
lret
jecxz
or
ja
fstpt
fwait
or
jg
sbb
mov
mov
pop
imul
bnd
cli
pushf
scas
test
outsb
xor
ds
lea
xor
lcall
push
in
mov
leave
mov
cmpl
add
xchg
daa
xor
ret
jns
nop
push
pop
dec
mov
cwtl
pop
mov
hlt
push
jbe
pop
jmp
test
jo
repnz
out
sbb
popf
ret
repz
pop
dec
sub
out
mov
ficoml
or
out
push
je
rcrl
std
repz
push
inc
daa
push
out
xchg
cli
test
lods
in
aaa
repz
mov
repz
dec
jns
mov
mov
je
push
mov
xchg
ret
sahf
cmp
pop
xchg
sti
pop
aad
rorl
sub
cmpsb
xor
mov
mov
iret
xchg
mov
shlb
adc
addl
loopne
mov
mov
aaa
test
pop
hlt
jl
jg
jo
daa
insb
xlat
stos
std
cmp
stos
icebp
jns
xor
push
dec
inc
lods
inc
xor
clc
adc
loop
pusha
in
test
push
mov
mov
jne
or
movsb
jnp
adc
daa
repz
cmp
enter
jae
sbb
pop
out
js
clc
fdivr
jo
ds
jo
add
mov
ljmp
mov
and
fldl
pop
add
jl
insb
add
lods
lret
movsl
push
test
cmp
and
mov
pop
jg
mov
cmp
addr16
inc
push
test
and
or
cld
mov
fdivl
mov
sbb
int3
in
enter
push
negl
movsl
jmp
dec
adc
push
mov
addl
xor
fbstp
sbb
xchg
shrl
repnz
std
sub
xor
inc
sub
dec
cmp
ret
add
xchg
mov
cmp
sbb
rclb
ftst
loopne
shrb
jnp
in
cmc
push
or
pushf
and
jl
pop
gs
std
mov
nop
mov
fists
pop
popf
mov
jmp
andl
lock
outsl
push
dec
jns
sbb
mov
movsb
cmp
shlb
aaa
pop
mov
bound
jp
movsl
mov
aas
mov
aas
je
movl
push
test
imul
cld
loop
andl
add
lds
out
jp
in
cwtl
ja
sbbl
leave
fucomi
loope
out
mov
and
fsub
cmp
icebp
jg
jne
mov
pop
add
mov
push
jmp
xchg
jbe
inc
jecxz
inc
mov
mov
repnz
xchg
imul
mov
cmp
sbb
enter
adc
fbld
jecxz
dec
push
lret
inc
cld
jb
je
pop
jp
cwtl
sub
add
ds
cmp
popl
inc
scas
imul
decb
cmp
pop
mov
test
mov
jno
mov
push
sbb
shll
fs
fcmovnbe
jae
lds
fwait
cs
xor
push
sbb
lahf
dec
xlat
out
adc
aam
outsb
adc
mov
lcall
inc
jp
ficoml
shrl
ficoml
cmp
cmp
lods
and
mov
bound
das
mov
add
fstl
imul
nop
mov
sub
mov
xlat
andb
popf
ret
das
mov
cmc
faddl
aaa
lds
lea
lahf
or
pop
and
xor
imul
and
adc
inc
mov
std
adc
movsb
lea
aad
xor
cld
cmp
test
and
pop
push
mov
add
pop
jo
and
dec
mov
popa
fwait
cwtl
xchg
outsb
inc
movsb
imul
int3
and
push
cmp
inc
aas
mov
and
ss
and
or
mov
data16
out
dec
inc
incb
ljmp
mov
xor
cmp
mov
adc
imul
loope
sbb
jo
ss
decl
ja
mov
jle
xchg
sahf
jo
fisubrs
mov
fs
jae
mov
or
aas
icebp
push
jnp
mov
xchg
mov
ja
xor
push
cmp
dec
pop
or
nop
mov
ljmp
sbb
test
test
mov
mov
ljmp
in
divb
xchg
adc
mov
repz
test
or
aam
ds
adc
jae
insl
pop
rclb
mov
mov
xor
in
fiaddl
call
xor
dec
movsb
mov
jge
ds
jnp
imul
sahf
push
orl
repnz
sub
cmpsb
fstpl
push
adc
mov
sahf
mov
out
cli
imul
push
icebp
cmpsl
inc
dec
dec
sub
cld
xchg
jnp
into
dec
in
scas
cwtl
xchg
dec
or
or
imul
adc
mov
popa
sbb
xchg
or
lods
sahf
rol
sbb
lret
clc
cmp
cmp
sbb
dec
lret
stos
push
cmp
push
out
leave
adc
imul
or
sbb
mov
ja
dec
sub
subl
rorb
pushf
inc
dec
insl
dec
and
and
stos
das
cmovo
xlat
add
mov
mov
xchg
jg
and
dec
shll
jmp
pop
int
subss
cltd
mov
adc
sub
jbe
rcrb
push
and
mov
bound
sub
mov
mov
dec
pop
cli
add
out
out
jl
sbb
cmp
xor
jo
mov
shrl
movsb
adc
ljmp
jae
xchg
sbb
test
jae
pop
bound
cmp
push
jb
icebp
lods
jmp
sbb
and
fists
rorl
and
pop
imul
je
dec
mov
mov
cmp
mov
loop
aaa
movsl
and
mov
lea
fisubl
mov
fmuls
stos
add
movsl
pop
sbb
stc
es
pop
testl
sub
out
mov
push
xor
stos
loope
dec
out
sbb
mov
pop
mov
mov
sbb
dec
icebp
mov
test
pop
push
pop
iret
push
pop
xchg
dec
aad
subb
inc
cld
sti
aam
mov
fnstenv
cltd
xor
out
into
stc
adc
ret
ret
push
lea
dec
sbb
js
dec
outsl
loope
es
push
out
lock
jge
add
pop
push
mov
jmp
lods
orl
jmp
or
aaa
fsubl
lcall
scas
mov
jo
cmp
outsl
push
xchg
enter
les
int
or
fbld
or
push
sarl
clc
pop
icebp
aas
mov
add
inc
fidivs
sub
out
mov
test
repnz
push
sub
jl
push
or
scas
jmp
push
out
leave
mov
push
mov
addr16
push
popa
pop
push
sub
popf
jnp
sub
sahf
dec
ret
scas
lahf
push
jg
mov
in
int
rcrb
or
sub
popaw
js
xchg
and
and
das
pop
add
cmp
mov
sbb
dec
mov
fistpll
out
fcoml
adc
inc
loope
call
sub
or
pop
rcrb
je
leave
into
mov
stc
fstl
xchg
or
cli
jno
mov
cmp
push
lea
test
sub
dec
adc
lcall
push
push
pop
mov
divl
inc
mov
or
xchg
loopne
mov
push
aad
inc
mov
loopne
sub
iret
push
jb
inc
dec
sbb
std
negl
push
fildl
test
mov
aaa
in
rorl
mov
imul
cltd
shll
repnz
mov
mov
mov
js
cmc
les
mov
inc
jns
xchg
fnstenv
aaa
and
and
push
or
out
std
push
adc
sahf
sub
es
push
fsubl
lahf
inc
lret
adc
femms
sub
xchg
xor
cltd
leave
stc
jl
add
xchg
mov
or
mov
movsl
loopne
mov
mov
mov
xchg
imul
xor
les
sub
add
aaa
xchg
pop
mov
lea
inc
cmp
mov
das
scas
sub
mov
mov
iret
stc
mov
push
shl
xor
mov
cmc
ret
fdivrs
pop
scas
cltd
movsl
imull
arpl
dec
leave
fwait
icebp
add
xchg
incl
outsl
or
xor
mov
fwait
jg
loopne
xor
arpl
fucomi
shrl
rcl
dec
add
clc
sahf
fs
decl
cltd
imul
or
and
pop
dec
pop
aas
adc
jg
repnz
negl
nop
stc
je
loop
inc
fmuls
mov
push
sbb
xchg
dec
clc
push
mov
mov
jmp
nop
xlat
jnp
inc
sahf
scas
and
mov
pop
les
shrb
mov
push
jmp
popa
sbb
mov
jecxz
jno
bound
pop
out
pop
xor
nop
adc
dec
mov
bound
cmp
aaa
nop
sbb
mov
xor
or
xor
cmp
xchg
jmp
div
outsl
data16
subl
add
dec
dec
adc
cmc
ja
arpl
push
rol
outsl
xchg
pop
inc
aad
pop
test
xor
vcomiss
cwtl
push
xlat
ja
aad
shl
rep
jne
bound
das
add
mov
xchg
fnstsw
pushf
dec
mov
dec
pop
pusha
into
jo
in
cmp
pop
out
sub
mov
or
push
sub
cmc
mov
mov
jo
and
jnp
jge
roll
mov
notl
sub
lcall
arpl
shll
pop
mov
pop
pop
insl
cld
dec
rolb
add
es
push
mull
or
dec
jbe
inc
mov
push
pop
aam
or
fs
stos
outsb
xor
jecxz
lock
fstl
out
rcrl
jl
js
in
jae
out
mov
addr16
cmp
mov
clc
inc
and
cmc
sbb
lcall
add
into
lret
fldl2e
pop
ud2
mov
add
pusha
sar
in
ds
push
cmpsl
jge
std
into
mov
in
mov
pop
mov
mov
fnsave
add
push
aad
or
mov
insl
inc
cmp
scas
mov
pop
jns
xlat
inc
jl
pop
xor
sbb
inc
sub
shlb
popf
into
fwait
sti
dec
fisttpll
inc
lret
in
or
lcall
and
push
fsubrp
out
sbb
hlt
pop
popa
or
push
xchg
dec
int
cltd
jmp
inc
movsb
push
es
push
inc
arpl
aaa
push
sbb
pop
add
push
jne
sbb
test
jns
push
shlb
push
ja
push
stos
inc
jae
mov
sbb
clc
lahf
fisubrs
pop
jb
addr16
xchg
push
adc
cwtl
pop
dec
stos
or
dec
dec
jns
fldt
clc
jne
or
or
cmc
idivl
and
in
es
test
jg
xor
push
cld
sahf
ja
cli
mov
insl
loope
mov
pop
mov
inc
scas
pop
sbb
outsl
aad
movsb
dec
pop
sub
xor
add
add
lock
fidivrs
adc
xchg
cmp
test
fs
mov
inc
pop
cld
inc
arpl
jge
outsb
out
or
ja
xchg
jae
imul
pop
addl
fbld
ss
inc
loope
or
mov
jle
and
in
sbb
negb
push
in
rcl
sbb
dec
out
fldenv
jb
sub
mov
cmp
into
pop
ja
adc
lock
popa
fcomi
push
movzbl
loopne
mov
cmp
sub
movsl
push
imull
or
inc
lods
lahf
mov
mov
cmp
cmc
loope
push
loope
jb
ja
mov
mov
pop
cmp
xchg
ret
jae
inc
mov
cwtl
push
cmp
cld
mov
hlt
arpl
mov
test
loopne
mov
pop
pop
fiaddl
clc
xorb
jge
jae
pop
lock
xchg
inc
hlt
clc
loop
xchg
inc
rcrb
mov
adc
pop
mov
loope
cmp
or
and
jae
mov
cmpb
cmp
jp
and
pop
aad
push
dec
in
push
jp
in
enter
repnz
xchg
aam
orb
adc
mov
jb
repnz
test
jmp
ficoml
push
loop
xor
cmp
adc
jmp
ret
ficoms
cli
mov
push
stos
push
lea
lcall
cmpsl
mov
xor
inc
or
lds
xor
fwait
int3
cmpsl
and
fdivl
js
dec
xchg
cmp
pop
lret
cmp
clc
jge
sbb
push
and
rcr
mov
xchg
mov
into
jnp
jnp
xchg
test
fsubrl
sub
or
jmp
test
mov
xor
sbb
addl
or
enter
mov
sub
mov
negb
pushl
push
fisubl
into
sahf
pusha
inc
addr16
push
std
or
ja
fxch
enter
ds
push
pop
stos
push
push
push
mov
inc
adc
daa
icebp
hlt
xchg
mov
scas
and
dec
mov
xor
fimuls
sahf
in
mov
arpl
fidivl
shlb
gs
jecxz
cmp
popa
sub
add
lret
or
into
arpl
jo
hlt
adc
aaa
jb
ljmp
shr
addr16
das
xchg
mov
cmp
mov
loop
ljmp
dec
aam
sub
ljmp
aad
jno
mov
arpl
mov
dec
daa
rol
cli
sub
push
mov
lcall
pop
cmpsb
lahf
mov
xchg
scas
cmc
mov
pop
mov
addr16
xor
push
dec
ljmp
in
cmp
mov
imul
out
mov
xor
jnp
inc
jp
xor
lock
cmp
aas
icebp
outsb
in
pop
adc
lret
push
mov
jg
sarl
ds
mov
sbb
pusha
lcall
fcmovu
lret
mov
out
in
test
pop
inc
push
jl
mov
je
mov
and
popa
adc
ljmp
jp
idivb
jl
mov
push
xor
pop
lret
fsubr
sbb
pop
xlat
mov
or
push
pop
dec
les
jge
add
mov
lretw
sub
sub
stc
add
adc
movsb
jae
pop
add
scas
or
adc
dec
aam
inc
outsl
add
aam
sub
imull
mov
das
mov
and
int3
inc
cmp
insl
ja
sub
jo
iret
lds
xchg
fwait
cmp
inc
fcmovu
dec
mov
pop
sahf
imul
xor
lret
cwtl
mov
fs
pusha
in
jl
mov
xchg
sub
push
sub
mov
lods
fistpll
ds
push
push
int3
jnp
jmp
icebp
or
sub
loope
int
popf
stos
mov
and
daa
xor
inc
jb
repz
adc
rcll
clc
inc
ljmp
xchg
inc
or
mov
mov
and
leave
scas
mov
jnp
mov
xor
pop
lcall
mov
cmpsb
aam
repnz
ljmp
lods
data16
xchg
push
jne
outsl
clc
insb
push
cmp
push
ret
and
bound
mov
cld
sub
scas
and
imul
sub
insb
push
or
jmp
jle
mov
ret
scas
push
jg
test
aam
cltd
nop
add
cmp
mov
cmp
or
pop
daa
xor
jge
in
aas
ja
adc
pop
fisubl
aad
add
mov
jle
pop
fs
push
jns
dec
sarb
ret
cmp
inc
cmp
xor
push
nop
cmp
push
sub
push
scas
and
cmp
sub
mov
or
pushf
inc
mov
xlat
pop
sbb
ss
mulb
cmp
or
out
mov
sbb
aas
jp
cltd
or
cmp
popl
fdivs
mov
adc
mov
cmp
push
mov
jmp
idivb
pop
icebp
lret
das
lret
stos
jo
jg
push
scas
mov
lret
mov
out
sbb
shll
lock
aad
icebp
mov
fsubrs
jns
cmp
fnstenv
inc
popf
mov
es
addr16
add
inc
in
sbb
ret
jg
xchg
fcoml
mov
xor
sub
idivl
adc
ret
addr16
and
iret
cmp
or
negl
jo
jae
sarb
movsl
push
and
cmp
sub
mov
es
sub
cli
pop
mov
loopne
cmp
les
push
mov
out
imul
mov
testl
stc
dec
push
jb
xchg
xor
cmpsb
push
lret
push
leave
ds
in
adc
int3
mov
scas
shlb
icebp
xlat
js
pop
leave
lret
jb
add
aas
xor
xor
cmp
xchg
dec
dec
mov
sub
sbb
mov
jp
sub
sbb
call
mov
xor
call
mov
pusha
xlat
mov
pop
jg
adc
dec
xchg
out
mov
jg
cmpsl
mov
add
sbb
adc
movsb
push
imul
mov
and
or
cli
nop
mov
push
jnp
sahf
mov
call
dec
jmp
or
jl
aam
cmp
mov
into
leave
out
xchg
cmp
mov
xor
dec
mov
xor
sti
inc
or
out
ja
jmp
out
or
jnp
lahf
and
loop
inc
ret
fisttpl
ret
adc
ret
or
rcll
xor
cli
cmp
dec
cmp
out
xchg
jbe
mov
shll
dec
mov
popf
das
rcrl
stos
cmp
mov
cmp
out
pushf
adc
sbb
and
mov
test
jb
mov
rcll
cmpsb
jb
push
inc
and
xchg
and
adc
dec
lret
inc
nop
stos
adc
gs
jge
cmp
inc
mov
int3
inc
iret
jecxz
xchg
jmp
jae
in
adc
daa
call
push
and
rclb
cli
test
in
xchg
pop
cltd
clc
inc
mov
cmp
cmp
stos
and
inc
adc
or
mov
ret
aad
mov
mov
cmp
aas
add
or
enter
shrl
jge
mov
stos
invd
out
jg
push
mov
movsb
xchg
lahf
data16
out
mov
push
jle
andl
jb
inc
stc
push
ds
adc
loop
inc
outsb
loop
out
dec
repnz
stc
cmc
xchg
jbe
add
push
iret
push
cwtl
inc
inc
mov
sti
je
inc
pop
dec
pushf
ret
xor
dec
pop
mov
call
test
add
add
inc
pusha
push
dec
mov
mov
dec
push
sbb
cmc
sbb
out
aad
push
xchg
ficoms
push
in
in
xchg
ret
sahf
xchg
pop
sbbl
and
outsl
sub
sub
or
mov
aaa
jnp
shll
dec
xor
mov
xchg
ret
jge
out
mov
sub
ret
lea
lahf
into
or
roll
adcl
es
mov
push
insb
insl
jl
sub
nop
jge
rclb
sar
mov
mov
lcall
mov
or
mov
pop
push
push
sti
repz
or
outsl
sub
decl
repz
stos
fistpll
ljmp
and
fst
cmp
rcr
dec
imul
mov
es
add
cli
popa
mov
xor
jne
cmp
sub
test
and
sbb
or
push
dec
mov
rcll
push
iret
rcpps
aaa
and
popa
in
push
arpl
cwtl
jbe
jecxz
mov
dec
repnz
aam
mov
ds
fists
cmp
adc
sbb
iret
jge
push
cmp
dec
jmp
clc
movaps
ret
pop
pop
mov
push
stos
test
cmpsl
fmull
insb
sub
cld
repnz
and
push
inc
divl
stc
adc
addl
or
insl
mov
add
inc
or
adc
sub
mov
mov
sbb
cld
mov
out
pop
ret
pop
pop
inc
daa
jecxz
mov
inc
inc
mov
enter
and
jmp
push
sahf
scas
leave
data16
push
lock
push
shl
sbb
inc
pop
stos
mov
mov
in
cwtl
jmp
data16
lahf
push
and
xchg
test
and
ss
mov
out
sbb
in
loopne
push
movb
outsl
insl
sbb
add
mov
xchg
test
or
cmpsl
hlt
xchg
cmp
inc
rolb
sbb
jp
xlat
inc
test
cmp
jmp
sub
jg
fistpll
aad
inc
lock
adc
xchg
stos
das
fwait
mov
andl
push
xchg
inc
adc
sahf
push
xchg
sti
push
fs
and
pop
mov
sahf
mov
cmp
mov
in
dec
push
gs
mov
les
loope
and
pop
mov
mov
inc
or
push
mov
jae
daa
mov
call
test
sub
inc
xchg
shl
cwtl
bound
cltd
mov
in
sub
js
or
popa
mov
pop
aad
cmp
pop
aad
inc
sahf
mov
ret
mov
cmpl
and
and
in
and
or
sub
sub
cmp
xchg
xlat
cltd
addr16
repz
dec
jg
daa
cmpsl
ss
inc
jo
inc
dec
lds
icebp
subl
enter
mov
pop
rcl
cmc
jp
dec
fstpt
call
cmp
and
negb
xor
sbb
lar
lret
jo
nop
mov
adcl
fdivs
jge
ss
mov
jmp
xchg
pop
sbb
fs
jns
js
inc
xchg
imul
scas
jl
dec
xlat
xor
ds
add
mov
bnd
mov
inc
subb
cli
fisubl
loop
pop
cmp
jecxz
push
xchg
cltd
dec
js
and
push
jae
sbb
aam
mov
push
outsb
pop
mov
mov
mov
loop
pop
sbb
adc
movsl
mov
loope
jns
pop
dec
xchg
mov
je
decl
cwtl
sti
shl
or
insl
fcoms
ficoml
inc
inc
imul
pusha
and
adc
xchg
push
fisubrs
mov
add
xchg
clc
sub
xchg
add
xor
dec
jbe
mov
pop
push
adc
sub
int
cmp
pop
push
popa
lds
aam
mov
sbb
sar
mov
in
pop
pop
ja
rorl
movsb
sbb
in
jae
iret
or
cmpsb
push
mov
iret
stc
lret
es
not
dec
or
mov
push
or
mov
fcompl
or
jne
cli
inc
pop
mov
test
mov
je
add
ja
lock
aaa
add
jb
inc
js
cmp
sub
sbb
fisubrl
clc
mov
scas
sbb
dec
es
pop
mov
mov
jmp
ficomps
cwtl
mov
or
dec
inc
movsl
rolb
xchg
arpl
jb
xchg
std
mov
loopne
insb
cmc
push
mov
sub
testb
xor
mov
adc
cmpsl
popf
mov
inc
jmp
and
and
cmp
mov
and
inc
xchg
sbb
jmp
xlat
xor
iret
jle
dec
iret
mov
cmp
repz
mov
decl
ljmp
xchg
mov
push
mov
lds
shll
xlat
test
cmp
loopne
imul
pop
mov
jecxz
mov
fld
out
fwait
lahf
cwtl
mov
loopne
push
jmp
es
xor
cltd
cwtl
and
adc
fs
inc
ljmp
mov
sub
adc
cwtl
leave
or
pop
push
mov
jo
lds
aad
push
xchg
mov
mov
cmc
push
dec
mov
data16
add
mov
mov
sti
test
arpl
jmp
push
and
scas
sub
int3
and
push
inc
outsb
mov
jns
pop
sbb
mov
pop
push
dec
inc
out
shrb
repz
jg
movb
gs
adc
cmp
addr16
mov
pop
pop
mov
xlat
out
adc
xor
lcall
lahf
imul
dec
out
test
inc
es
das
sub
dec
xor
mov
std
inc
adc
push
pop
imul
jne
adc
mov
xchg
mov
sub
or
arpl
ficoml
mov
lret
fisubrl
rclb
sub
sub
imul
test
or
mov
aaa
sahf
xor
pop
jne
mov
add
xchg
pop
sahf
hlt
dec
pushf
fmuls
into
lahf
jbe
clc
cmp
push
cmp
jb
das
dec
jg
fwait
gs
xchg
outsl
sahf
adc
or
push
cmp
jns
test
cwtl
xor
dec
xor
fsubl
test
fsubp
sbb
mov
pusha
fisubrl
dec
gs
test
pushl
mov
test
sti
gs
movsb
pop
daa
and
cmp
inc
cmp
mov
dec
stos
pop
movsl
xor
rorl
test
cltd
sahf
dec
mov
add
imul
lock
push
stc
jb
lret
add
jbe
sahf
mov
es
testb
sbb
jmp
sarb
adc
imul
stos
cwtl
cmp
pop
fsubrl
out
cmpb
in
mov
mov
xor
push
pop
mov
scas
aaa
jns
add
cld
lods
xor
cmpsl
outsb
sbb
std
gs
imul
add
jbe
jae
jno
pop
mov
dec
popa
and
loop
fistps
pusha
jae
and
aaa
add
pop
dec
pop
cmp
out
ds
cmp
into
dec
mov
cmp
and
cli
mov
cmpsb
lea
mov
push
xor
or
imul
mov
lock
sbb
movsl
jb
add
ret
mov
mov
pushf
icebp
inc
ds
subb
inc
sub
sbb
js
jp
lret
js
orl
jp
pop
lcall
sbb
sbb
and
push
dec
or
push
lahf
cmp
pop
jo
mov
dec
arpl
int
jno
xchg
inc
and
cltd
iret
jnp
movsb
mov
jl
pushf
mov
fldenv
sahf
mov
lods
pop
and
testl
cmpsb
loopne
xchg
cmpb
icebp
push
xchg
sbb
dec
mov
out
cmc
sub
mov
mov
ds
test
sbb
aaa
cmp
inc
add
lahf
sub
sbb
push
call
movsb
mov
cmp
test
and
ja
push
insb
ret
cmp
iret
mov
aad
pop
sub
shrl
inc
mov
call
xchg
push
lret
je
sbb
xor
or
in
lods
add
mov
xchg
loopne
rcrb
jg
inc
push
cli
adc
rcrb
xor
push
pop
mov
pushf
imul
iret
out
mov
test
or
mov
das
pop
cmp
jp
dec
fiadds
inc
inc
ds
xchg
pushw
jb
xchg
mov
xchg
xor
andb
dec
std
or
or
sub
jle
cs
jo
xor
push
repnz
fistpl
push
push
out
out
jb
and
pop
into
and
push
lods
sbb
jmp
cmc
rorl
out
lods
jbe
or
addr16
mov
push
xchg
jo
aaa
xchg
in
ds
cmc
daa
adc
lock
xor
clc
mov
aam
jmp
stos
inc
jns
push
int3
fcomps
popf
dec
ret
bsr
xchg
dec
mov
pusha
xor
fidivl
inc
sub
jbe
xchg
daa
xchg
push
outsb
dec
fists
loopne
in
mov
mov
sub
dec
std
mov
xor
push
mov
xchg
cmp
lods
push
stos
lcall
mov
loop
movsl
rorb
jo
push
out
sbb
dec
jecxz
mov
add
stc
xchg
aas
imul
sti
out
test
decb
sbb
cmp
aad
mov
mov
ds
inc
sbb
rcrl
dec
push
and
jns
fabs
sbb
movsl
ja
outsl
imul
adc
outsl
or
and
int
jo
cmpsl
nop
cmc
mov
enter
fcmovne
pop
xor
adc
jp
movsb
roll
sub
push
imul
dec
nop
push
repnz
mov
push
bnd
and
ret
jb
repz
ret
sub
cltd
or
inc
mov
jg
mov
mov
mov
sbb
dec
cltd
and
rolb
sti
gs
imul
setno
pusha
repz
enter
mov
jo
cmc
cmp
pop
test
popa
das
pop
or
mov
jno
adc
xabort
xchg
fwait
inc
mov
jge
dec
fimull
aas
rcrb
mov
imul
push
or
xor
popa
cli
mov
inc
mov
mov
iret
fdivrp
lock
in
sbb
aam
mov
jb
add
mov
jo
mov
push
and
add
imul
das
lahf
dec
jnp
enter
xchg
movsb
test
scas
or
arpl
shll
sbb
dec
mov
test
pop
inc
xchg
mov
cmp
lods
mov
sub
lods
push
mov
mov
pop
sub
in
aas
into
std
push
pop
and
mov
inc
xor
mov
sbb
int
cmpsb
dec
sub
xchg
test
jbe
fisubs
outsl
pop
mov
outsl
fwait
mov
lret
or
mov
fstl
sub
cmpb
roll
mov
insl
xchg
add
dec
cwtl
fwait
inc
icebp
xor
xor
and
out
or
vpcmpgtw
fwait
adc
jmp
or
insl
jecxz
adcb
sbb
inc
jmp
mov
sub
testb
inc
jmp
shlb
repnz
jp
dec
mov
mov
or
jnp
out
cmp
jnp
ja
cli
cmc
icebp
insb
jge
addr16
inc
cmp
push
outsb
adc
test
bound
fldl2t
aad
jns
sbb
or
out
lea
and
sbb
lods
subb
xchg
jp
xchg
lret
jecxz
adc
push
add
sbb
adc
test
mov
cmp
or
rcrl
mov
jnp
insl
cmp
dec
addr16
fiadds
ds
mov
push
mov
xor
es
js
sbb
mov
sbb
mov
call
inc
sbb
mov
add
popa
icebp
jo
xor
shlb
or
iret
mov
cltd
decb
push
les
shrb
pop
shlb
xchg
iret
pop
dec
loopne
imul
or
fcomp
dec
shr
cmp
jle
repnz
xchg
call
clc
mov
dec
sub
push
adc
dec
in
aaa
xchg
push
loopne
xchg
cli
lds
mov
xchg
ljmp
outsb
ds
or
add
mov
xchg
pop
pushf
shrl
sti
xor
daa
mov
or
in
xorb
xor
mov
jbe
push
stos
cmpsl
fdivp
mov
pushl
mov
test
sub
xlat
add
je
lea
in
addr16
jmp
cs
and
pop
bound
loope
pop
pop
sub
aam
or
lahf
xchg
je
aas
ljmp
sbb
data16
pop
mov
mov
fmuls
cmp
inc
xor
lds
loope
sub
xchg
in
les
pop
pusha
dec
cmc
push
je
fs
sti
adc
mov
cs
push
das
les
lea
pop
lods
ret
xchg
lods
mov
xchg
and
aaa
xchg
xor
xchg
inc
dec
push
lahf
out
leave
ljmp
ficomps
sahf
adc
cmp
movsb
push
les
mov
decb
flds
cmp
mov
ljmp
jno
cmp
pop
pop
into
add
cmp
movsb
mov
lea
pop
mov
sbb
stos
mov
cmp
dec
movsl
fs
fcmovnu
inc
mov
inc
fwait
pop
daa
jnp
sbb
jb
std
ss
test
pop
pop
outsl
and
dec
js
cld
push
pop
mov
loop
mov
dec
scas
std
push
xor
inc
ljmp
lea
jmp
ljmp
push
pop
mov
ret
lcall
mov
xorl
jecxz
add
sbb
mov
shrb
xchg
into
into
jl
and
pop
xchg
add
insb
aaa
push
pop
arpl
rorb
or
test
mov
sbb
nop
call
and
cmp
sti
fstpl
xchg
xchg
mov
mov
push
sub
push
cmc
mov
xchg
faddl
push
mov
dec
jne
cmp
or
jno
or
xchg
xchg
cltd
out
dec
outsl
mov
push
sub
push
and
repz
aaa
pushf
rep
test
scas
mov
inc
push
push
inc
pop
or
inc
es
cmp
imul
mov
mov
movsl
cmpsb
out
subl
cmp
xor
repnz
dec
adc
sub
jne
push
outsb
mov
jge
icebp
mov
in
ret
out
aaa
inc
nop
clc
pop
jne
adc
jl
fisubs
pushf
filds
mov
mov
mov
lahf
sub
cmp
add
fistps
dec
add
cwtl
mul
iret
xchg
jg
pop
push
adc
mov
push
repnz
cli
out
punpckhdq
pop
notl
dec
ret
cld
jl
nop
mov
pop
add
cmc
stos
jecxz
inc
push
xor
rcll
imul
mov
popa
jle
fisttpl
cli
cmp
push
pop
mov
xor
insl
inc
and
pop
cmc
lahf
iret
pusha
insb
icebp
add
fcoms
repnz
inc
pop
xchg
jecxz
stos
loope
fiadds
dec
packsswb
cs
shrl
addr16
loope
ja
cmp
add
dec
dec
bound
out
cltd
rcr
inc
push
mov
test
stc
sahf
insb
icebp
lret
sti
sub
fidivrs
inc
fistpl
cs
pop
inc
cs
mov
and
adc
test
jnp
jns
xchg
pop
lods
fisubs
pop
or
sahf
jns
mov
mov
insb
inc
pop
leave
xchg
fidivrs
dec
aam
fs
loop
data16
imul
cld
mov
int3
push
lret
lahf
test
bound
cmp
xor
dec
mov
jge
xor
adc
nop
and
dec
xor
lahf
out
cmp
inc
cmpsl
test
lret
cmpl
mov
jb
mov
sbb
pop
cmp
jae
insb
imul
pop
sub
clc
xchg
or
lcall
push
sahf
sub
les
inc
hlt
lret
pop
jno
pop
ss
mov
popf
test
sbb
and
jbe
jns
pop
adc
or
int
sahf
xor
bound
leave
hlt
mov
fadds
stos
adc
push
lahf
roll
gs
jge
sahf
jno
push
adc
jge
rcl
je
test
test
jae
in
rorl
and
imul
icebp
pop
mov
inc
scas
cmpsl
fwait
in
or
or
sub
dec
push
jbe
push
cmp
cmp
ficoms
or
mov
mov
outsb
cmc
mov
repnz
mov
nop
stos
jg
fisubs
xor
jl
and
int3
mov
enter
inc
xlat
outsl
adc
adc
xor
sbb
and
xchg
pushf
dec
int
and
jle
lahf
push
in
sbb
adc
sub
arpl
fisttpll
je
jb
inc
ja
inc
in
or
icebp
sub
push
cmp
fwait
jnp
dec
sub
les
cmpsl
ror
lret
in
lock
out
lods
xchg
jp
dec
mov
daa
cld
in
imul
repnz
jnp
leave
xchg
test
push
lret
enter
sbb
or
ret
fidivrs
fadds
aad
imul
sbbl
mov
test
xor
stc
mov
fwait
test
xchg
out
out
in
fisttps
or
int3
dec
js
sbb
ds
push
aas
push
mov
nop
aad
insl
hlt
ss
bound
xor
lcall
push
dec
rol
push
scas
aas
sub
lahf
stos
aam
and
stos
push
loope
or
scas
pushl
mov
and
mov
pop
incb
xchg
cmp
stc
mov
mov
mov
popf
dec
xchg
mov
lahf
sbb
lods
mov
fbstp
inc
cmp
cmc
adc
cmp
jp
stos
mov
adc
and
lcall
jg
jecxz
sbb
mov
mov
inc
rcl
push
outsb
inc
adc
je
out
stos
cmp
or
sbb
and
and
arpl
jo
outsl
adc
loop
in
xchg
scas
lret
dec
add
or
mov
adc
cmp
sbb
adc
enter
pop
mov
push
mov
fwait
std
into
scas
cwtl
loopne
ss
sub
filds
mov
and
lahf
push
dec
cltd
dec
mov
nop
enter
jmp
in
lea
sbbl
lds
pop
xchg
dec
testl
inc
xor
push
addb
push
fs
icebp
dec
push
ret
add
adc
call
cltd
aas
pop
mov
fstpt
arpl
cltd
push
neg
data16
mov
scas
or
adc
sarb
xchg
cmpsb
xchg
adc
inc
ja
ret
dec
jbe
cld
jmp
mov
fstl
mov
mov
hlt
jmp
sbb
jg,pn
xchg
adc
test
and
pop
push
sbb
push
aad
cmp
mov
ja
shrl
cwtl
ficoml
outsl
pop
outsl
push
adc
push
out
dec
sbb
push
xchg
adc
lret
and
xchg
sbb
cmp
sbb
lahf
mov
pusha
push
repz
pop
inc
jb
loop
push
xchg
popf
or
xchg
cltd
cli
push
orl
std
clc
push
mov
add
pop
mov
sar
jge
stc
push
outsb
pop
push
xorl
js
pop
movsl
out
cmp
jae
sbb
adc
pop
cmp
sub
iret
xchg
jl
cli
jecxz
xor
sbb
icebp
bound
lods
mov
adc
aaa
stos
sub
aas
pop
pop
clc
add
ficompl
xor
xchg
call
fsubrl
aam
mov
rclb
jmp
dec
ja
dec
lods
out
jl
and
inc
in
lret
fsts
rorb
imul
push
jo
push
stos
ss
sub
xchg
mov
mov
mov
movsb
push
push
cmp
dec
pushf
movsb
div
xchg
loope
insl
or
fadds
out
xor
int
xchg
loop
insb
ljmp
xchg
filds
lret
stc
sbb
out
pop
ds
dec
adc
shrl
mov
xor
andb
es
mov
xchg
xor
mov
jl
in
pop
pop
imul
mov
jbe
inc
and
lds
lahf
push
lcall
in
xchg
ret
aam
inc
adc
jmp
cmp
movsb
jmp
and
jmp
ret
das
fcmovnu
test
xorl
sahf
jae
lcall
gs
sbb
mov
cmp
mov
add
cmpb
push
mov
sub
shl
in
pushf
notl
insl
cmp
sahf
push
or
xchg
jg
and
les
cmp
jo
icebp
mov
lea
sub
cmp
js
mov
push
scas
aaa
push
idivl
imul
cmc
arpl
push
gs
or
bound
test
loope
jno
mov
xlat
ret
jp
or
xchg
ja
and
push
insl
and
fsts
jg
jl
mov
loopne
or
popa
or
repnz
dec
adc
dec
push
mov
cmp
fbld
fisubrs
inc
sbb
aaa
repnz
repnz
rol
rcll
push
mov
test
xorl
jge
popf
daa
xor
popa
cmc
jecxz
lock
cmp
push
popf
les
mov
jge
movsb
addr16
fcos
mov
jmp
jle
hlt
in
dec
testb
movsl
and
pop
movsb
lods
imul
dec
ss
mov
sub
shlb
int3
dec
iret
mull
mov
insl
icebp
cli
movsl
pop
ret
pop
lahf
out
add
inc
clc
ret
jbe
ficoms
or
sub
stos
sub
cmc
movsb
mov
bound
sbb
mov
hlt
in
cmp
xor
inc
dec
cli
and
arpl
les
mov
aad
lock
sarl
jle
dec
lret
push
cmc
xor
stos
jns
jmp
ds
add
push
or
pusha
enter
jp
xor
mov
fisubrl
add
movb
sbb
pop
icebp
jmp
enter
mov
imul
and
lahf
insl
lock
or
das
loopne
dec
jnp
into
iret
scas
jl
jl
jp
adc
fwait
hlt
ret
lock
insb
pop
fldt
cs
jns
or
scas
in
pop
test
outsl
inc
int3
int3
inc
out
jmp
push
jo
xor
int3
jle
jmp
out
stos
and
stos
inc
or
mov
jo
jp
xlat
lret
sbb
popw
movsb
mov
push
mov
nop
mov
or
mov
das
xor
mov
xchg
mov
or
inc
xchg
mov
dec
mov
sahf
jge
pusha
push
jg
cmp
inc
test
imul
lods
mov
mov
mov
mov
nop
pop
ja
gs
pop
outsb
ret
mov
cmp
xorb
incb
repnz
ljmp
mov
mov
or
mov
fisttpl
pushf
or
and
ljmp
mov
addr16
dec
and
fcmovb
sbb
data16
rclb
pop
inc
inc
xchg
lahf
jnp
and
int
push
aaa
es
mov
test
scas
push
cmp
test
xchg
icebp
inc
cmp
mov
and
cmp
ja
mov
pop
outsb
and
scas
test
add
aad
aas
xor
leave
xchg
add
scas
fwait
mov
jmp
sub
mov
mov
jne
ror
test
mov
sub
push
std
mov
mov
push
test
pop
enter
adcb
cmc
jecxz
mov
shrb
pop
and
and
enter
mov
mov
test
insb
loope
adc
addr16
call
aam
pop
mov
call
mov
fnsave
xchg
mov
int
push
jb
jmp
adc
and
and
vpsllw
lods
xor
add
in
push
pop
xor
sbb
imul
push
fsubr
sub
and
cwtl
inc
call
aas
pop
mov
mov
mov
cmp
adc
push
dec
mov
jns
fsubrs
mov
push
and
leave
cmp
jp
dec
lods
rorb
les
pop
test
dec
test
dec
adc
lret
bound
call
pop
lret
push
daa
sub
test
idivl
pop
ds
pop
aad
xchg
pushf
ss
xor
sub
outsb
jmp
shrd
push
xchg
repz
lret
mov
adc
mov
mov
xor
mov
adc
lret
mov
pushf
cmp
xor
sub
in
pop
cmp
cmp
dec
sbb
rcr
test
rorb
stc
add
push
mov
pushf
and
scas
pushf
icebp
lock
aam
push
dec
loopne
and
or
xor
fstl
cmc
cmpsl
mov
jg
jne
cltd
jl
push
cld
cmp
push
loopne
pushf
test
bswap
pop
push
int
and
jae
or
pushf
ljmp
push
push
out
mov
jbe
adc
push
mov
hlt
aad
and
mov
mov
mov
aaa
jmp
in
push
sbb
js
shrl
and
jle
out
cmp
mov
mov
mov
sbb
cld
mov
sbb
repz
mov
or
rclb
pop
loope
and
mov
movsb
mov
and
push
ffreep
movsl
xor
add
cltd
push
fdivrl
inc
xor
mov
dec
mov
pop
pusha
lret
adc
lock
cmp
dec
arpl
sbb
mov
push
lahf
dec
inc
enter
imul
push
lcall
xor
aam
je
orb
ljmp
call
clc
movsl
loopne
push
aad
ja
xchg
xchg
xor
lds
xchg
shlb
lahf
pop
popf
jmp
pop
and
mov
cmp
and
repnz
jl
mov
adc
mov
push
mov
sbb
cwtl
in
xor
pop
sub
imul
ret
sti
or
rcl
jle
pop
jns
clc
xchg
fnstsw
cmc
into
inc
iret
imull
lret
inc
dec
cmc
pop
xchg
cs
or
inc
scas
stc
in
imull
mov
cmp
mov
sbb
or
imul
das
rep
and
int3
lock
mov
push
xchg
mov
mov
push
push
ljmp
pop
aas
sub
sahf
lcall
and
mov
lret
jmp
sub
add
pop
jle
lds
divl
lock
mov
iret
and
mov
xchg
cmc
xor
pusha
cmp
lret
clc
ds
xchg
inc
insb
iret
leave
shlb
mov
cwtl
cmp
aad
xor
fdivrl
ljmp
mov
sub
jg
in
jnp
jns
popa
std
jle
cmc
jae
nop
call
test
stc
stos
jecxz
scas
add
and
jg
adc
xor
mov
sub
das
add
and
cli
xor
push
decl
adc
aaa
outsl
sbb
stc
lock
mov
push
loope
in
and
cwtl
fnstcw
adc
jmp
mov
jl
push
into
in
mov
jmp
jle
daa
mov
adc
cmpsl
dec
cmp
jecxz
bound
or
sahf
cmp
xlat
dec
push
mov
push
outsb
into
icebp
aad
cmp
xchg
mov
xorb
out
and
in
mov
mov
iret
sbb
cmp
cmp
or
xchg
push
popf
push
xor
arpl
inc
mov
popf
xlat
and
cmp
cld
dec
aaa
movl
scas
add
cld
loop
test
cmp
jecxz
mov
xchg
cmpsl
aam
hlt
dec
jecxz
stos
sub
inc
jecxz
loopne
xchg
out
sbb
lret
jecxz
push
inc
fnstsw
addr16
enter
pop
add
inc
es
dec
rcrb
mov
fmul
insb
aam
inc
mov
arpl
shlb
sbb
cmp
jbe
out
xor
ret
or
pushf
cwtl
loopne
sahf
outsb
out
or
sub
sub
or
cltd
xchg
ljmp
int
jb
sti
cld
js
add
rcll
pop
iret
andb
add
cs
andb
js
sti
mov
pop
xchg
jns
inc
jae
pop
fwait
inc
decb
testl
stos
inc
or
hlt
jge
or
mov
sub
push
xor
cmp
mov
jp
pusha
push
cmp
jecxz
pop
aas
mov
std
scas
lret
sub
jmp
shlb
mov
xchg
mov
out
loop
out
mov
xor
xchg
or
int3
mov
push
or
sti
pop
test
mov
sbb
leave
imul
sub
sbb
cmp
mov
leave
sbb
cli
add
xlat
andl
jo
pushf
roll
and
lods
dec
incl
jp
push
sarl
jle
pop
int3
cltd
js
jecxz
lods
test
cwtl
jbe
sbb
insl
sbb
movsl
sbb
int
push
addb
stos
cmp
inc
addb
testl
xchg
pop
sub
push
xchg
sbb
dec
mov
push
sub
or
cmpsl
outsb
dec
rolb
mov
pop
jmp
jnp
mov
data16
data16
cmp
cmp
inc
pop
xchg
scas
dec
in
dec
push
mov
xor
sub
mov
jl
test
and
or
test
xchg
pop
xchg
outsl
out
repz
sbb
mov
pop
jnp
adc
into
cld
sbbb
std
imul
dec
movsl
fmuls
cmp
rcll
nop
adc
mov
leave
jbe
fnclex
sbb
leave
stos
dec
ret
jp
inc
test
loope
inc
mov
add
mov
xor
xchg
iret
add
test
sbb
dec
rclb
cmp
lock
mov
mov
mov
loop
cmp
bound
push
fdivrl
js
inc
cmp
loope
fmul
mov
imul
add
in
sarl
adc
push
xchg
sub
sbb
or
mov
dec
shlb
popf
cli
xchg
push
call
leave
loopne
inc
inc
jmp
andb
mov
sbb
jg
push
int
call
aad
outsb
jnp
data16
sub
ret
cmpsl
and
movsl
addr16
jmp
inc
jle
inc
adc
xchg
scas
pop
jae
sbb
jae
sbb
adc
fsubs
repnz
lea
jno
sar
pandn
repnz
aas
outsl
ja
push
push
mul
mov
and
into
sbb
sti
xchg
jne
dec
or
ss
or
push
lcall
mov
or
pusha
in
jae
mov
scas
mov
inc
sbb
sub
jmp
outsb
jns
mov
aad
xor
pop
fwait
pushf
push
dec
sbb
xchg
cmp
mov
xor
cwtl
mov
nop
push
inc
inc
mull
mov
adc
jae
lock
jo
adc
mov
mov
sbb
lods
cltd
shrb
rclb
push
popf
cmp
push
mov
cmp
out
iret
cmp
je
mov
insl
lahf
idivb
into
sbb
sub
scas
test
sub
sahf
lods
leave
mov
xchg
stos
jo
mov
in
popa
shl
fiadds
ret
repz
std
pop
inc
add
insl
or
fbstp
sahf
ret
push
in
push
cli
loope
and
out
lock
loopne
lea
ja
xchg
outsb
repnz
in
popa
mov
cmpsb
cmp
stos
pop
out
int
cmpsl
push
out
add
ja
fs
fdivs
adc
into
in
mov
inc
pop
js
push
testb
xchg
xor
int3
pop
mov
xor
loop
aas
or
and
xchg
cmp
and
mov
mov
pop
xchg
subl
sbb
in
inc
xor
fs
std
adc
inc
sarl
jnp
push
iret
stos
xchg
int
and
push
rolb
mov
aam
pop
es
jns
cmp
scas
jl
jle
mov
cmp
shl
mov
xchg
xor
std
push
insb
inc
sub
sub
mov
cmovno
inc
jmp
int
out
adc
pop
add
mov
push
push
mov
scas
jns
movsb
cmp
push
fcmovne
jne
jno
cmp
sbb
jns
loope
and
cmp
clc
mov
and
cmc
mov
push
and
pop
adc
push
push
cmc
xchg
aas
negb
lock
mov
stos
enter
fs
cmp
rcll
fdivs
jle
sti
sub
loopne
subb
andb
movsl
pop
push
loop
fs
and
lretw
fldln2
cmpsb
movsb
insl
int3
push
xchg
cs
lock
or
js
rolb
test
mov
add
push
int3
leave
stc
sbb
enter
test
mov
jb
in
fs
jge
lahf
mov
movsl
aad
mov
mov
sbb
orb
mov
sub
cmp
xchg
mov
and
mov
lret
fdivr
push
in
mov
and
mov
dec
xlat
bound
inc
test
push
icebp
popa
mov
sub
fucom
mov
add
mov
xchg
in
mov
xor
or
dec
jnp
add
outsb
lods
nop
fsubrl
out
data16
add
sub
or
clc
inc
mov
sti
add
push
loop
out
scas
jne
cwtl
sbb
pop
or
cmp
xchg
inc
outsb
pusha
int3
xchg
adc
test
sub
shlb
imul
inc
dec
pop
mull
test
sbbl
mov
jl
repnz
popf
mov
xlat
mov
cwtl
clc
lret
push
int3
sub
out
std
or
sbb
stos
pop
dec
mov
jne
and
pop
xor
sbb
jb
popa
andl
sub
lock
lea
xor
xor
or
les
push
sbb
dec
les
repz
data16
mov
mov
add
pushf
mov
ja
bound
xor
test
mov
sub
xor
loopne
out
gs
jo
shlb
inc
fldt
xlat
xchg
andl
adc
sub
jae
mov
and
mov
faddl
mov
inc
cs
inc
or
push
lahf
push
and
les
lahf
mov
mov
dec
test
shll
and
xchg
sub
adc
dec
je
add
sub
jbe,pt
jg
divb
cmp
fstl
imul
inc
xchg
addr16
add
fnstsw
pop
cmpsl
js
jnp
jge
int3
push
dec
or
fsubp
adc
adc
and
js
cld
fistps
add
or
xor
test
out
push
pop
out
scas
jno
inc
xchg
pop
fsubrs
dec
inc
jecxz
int
cmc
icebp
pop
or
or
out
xadd
mov
pop
jl
std
xchg
jl
and
push
inc
push
lods
xor
mov
ja
push
and
pop
pop
out
and
add
sahf
inc
mov
outsl
cmpsb
add
ja
sub
sub
les
add
movsb
loop
jo
adc
movsb
push
repnz
or
loopne
push
enter
out
or
push
adc
ror
sub
ds
loop
rcl
out
cs
pop
sub
hlt
adc
outsl
and
in
pop
divl
mov
mov
xor
shlb
std
pop
jge
jnp
test
mov
stos
cmp
es
divl
sbb
xor
pop
pop
dec
loopne
je
xlat
mov
movsb
sbb
sub
ljmp
neg
adc
mov
lock
shlb
rcr
pop
xchg
movsl
adc
pop
test
sbb
testl
rcr
nop
mov
lds
fwait
xchg
int3
or
arpl
lahf
mov
ljmp
pushf
xchg
mov
popa
icebp
outsb
dec
repz
or
adc
pop
add
nop
xchg
cmp
xor
enter
push
fbld
pop
mov
jge
fildl
scas
lret
pop
js
cld
or
js
rcll
das
insb
cmp
repz
fs
imul
mov
repnz
inc
into
jno
or
add
outsl
and
cld
cmp
sahf
fcmovnu
test
arpl
sti
imull
icebp
movsl
inc
dec
pop
pop
cmc
cmp
cmp
xchg
and
and
mov
mov
mov
mov
cmp
xor
jnp
or
xchg
and
mov
adc
jle
dec
and
xor
lock
aam
insb
xor
movb
sbb
sub
add
jb
jge
mov
inc
xlat
sbb
aad
loope
sti
stos
pop
inc
pop
inc
aas
dec
lret
fistpl
add
daa
cmp
xor
insb
scas
push
mov
inc
cmc
adc
inc
stos
roll
std
xchg
sub
and
leave
sar
sahf
mov
stc
xor
aaa
push
int
pushf
arpl
push
and
mov
in
scas
test
int
fucomip
cmpsl
nop
mov
pop
xchg
push
int
mov
es
fnsave
add
adc
pop
inc
lds
test
adc
sbb
push
and
mov
mov
jnp
aas
subb
xchg
pop
pop
inc
pushf
mul
jmp
scas
mov
mov
mov
dec
loopne
sub
or
in
ljmp
subb
testb
imul
lret
nop
mov
adc
pop
test
cwtl
fcmovbe
cmp
les
adc
popa
mov
fdivrp
andb
fs
lock
mov
arpl
scas
xor
xchg
lahf
pop
movsl
cmc
xchg
adcl
out
test
pop
add
lahf
imul
xlat
scas
mov
les
clc
test
popa
sbb
sub
scas
aam
mov
sub
fidivrs
inc
add
mov
mov
ljmp
out
gs
movl
stos
inc
lret
push
sbb
adc
test
jmp
fiaddl
popa
push
bound
idivb
push
pop
cmp
jecxz
clc
subb
dec
pop
mov
outsb
js
pop
cmp
fcomps
hlt
sti
jae
push
cmc
pop
mov
add
mov
jmp
cmp
mov
mov
add
dec
jp
shrl
sub
addr16
cltd
bound
push
pop
ds
mov
mov
mov
jp
and
pop
movl
in
roll
xchg
mov
pop
jae
jno
mov
out
in
arpl
xlat
lret
mov
iret
mov
pop
push
out
sub
inc
pushf
test
aad
int
fnstcw
andb
sub
jae
idiv
leave
mov
stos
lock
shll
adc
xchg
mov
hlt
mov
icebp
inc
push
fcmovb
cmp
int
fstpl
dec
les
push
mov
cmc
fwait
adc
push
add
test
pop
mov
add
insb
jb
ret
push
popa
mov
aaa
shl
sarb
call
cli
xchg
mov
pusha
ret
sbb
mov
imul
xor
mov
les
mov
pop
das
sbb
fwait
add
test
mov
mov
test
pusha
sub
push
scas
jp
mov
mov
je
sub
pusha
mov
mov
gs
fcmovne
sub
sub
dec
and
cltd
fadds
jecxz
repnz
in
js
repz
push
or
shll
popf
jae
lret
icebp
ja
insb
in
add
jns
cmp
movsb
test
loope
mov
in
mov
cmp
adc
push
imul
jp
gs
ret
sub
ret
shrl
and
dec
insl
mov
and
pop
adcl
xchg
shll
jno
xchg
shll
cmp
fistl
cmc
xchg
fdivl
add
popf
push
ror
rclb
jnp
loop
test
aad
testb
shlb
outsl
into
sbb
fildll
mov
loope
add
inc
mov
pop
and
push
and
inc
sti
fwait
and
sub
add
mov
leave
bound
jae
insb
aam
cmp
lret
inc
sbb
add
movsl
repz
xor
xchg
popf
into
or
in
mov
cvtpi2ps
mov
cli
test
jo
imul
push
sti
dec
sbb
out
push
in
lahf
addb
adc
test
dec
sub
lret
shl
stos
and
mov
cmp
pop
ret
lods
xchg
add
in
xchg
shr
xor
loop
ret
sub
test
aaa
bound
adc
and
or
mov
lods
sti
or
es
movsb
cld
jp
shll
xor
loop
mov
lods
cmp
imul
rorb
mov
outsl
out
pop
sub
cld
pop
imul
mov
mov
rorl
xchg
mov
pop
incb
iret
or
xchg
faddp
xor
mov
dec
cltd
xchg
icebp
sub
out
cmp
xchg
popf
jecxz
mov
lds
pop
nop
jp
mov
imul
mov
pop
loopne
mov
xor
sub
mov
leave
test
mov
cmp
push
jge
popf
out
push
insb
pop
and
mov
mov
stos
arpl
daa
ja
xchg
call
dec
sub
roll
add
pop
outsl
insl
or
push
cld
sbb
xchg
aam
inc
dec
aam
xchg
fwait
icebp
cmpsb
repz
add
and
mov
inc
insb
cmp
xchg
xlat
fildll
mov
repnz
sarb
insl
or
mov
cmp
inc
les
aad
dec
inc
ljmp
icebp
push
jns
push
xor
cwtl
outsl
insl
pop
cltd
xchg
ss
mov
adc
outsl
cmpsl
dec
movsl
popf
pushf
jae
pop
mov
xchg
adc
xchg
jbe
sub
std
inc
jnp
push
push
fwait
cmp
movsl
xchg
cmp
sub
cmp
lahf
pop
out
xor
rolb
mov
decl
xchg
dec
lcall
arpl
int3
mov
inc
pop
fsubs
dec
cli
or
jle
outsl
adc
rcll
cmpsb
das
jle
push
cmpsb
mov
jns
push
jno
sbb
ljmp
cmp
imul
lods
dec
push
xlat
sbb
leave
inc
imul
push
mov
leave
fsubrl
repnz
jb
inc
ret
jns
cld
inc
imul
lret
shll
cmp
jns
pop
fiaddl
jne
inc
or
sahf
pop
cmp
enter
or
popa
mov
push
and
out
dec
sub
mov
adc
inc
sbb
out
pushf
stos
push
dec
sub
and
shl
clc
xchg
lds
das
sbb
aad
cmp
xchg
cwtl
rep
and
inc
dec
inc
or
mov
xor
push
test
pop
call
adc
add
stos
mov
fisubrl
dec
cmpsb
xchg
push
sbb
sti
mov
aad
cmp
and
push
addr16
lcall
lods
ds
lods
cmpsl
push
inc
jns
fnsave
cmc
mov
lods
jge
xchg
pop
popf
xchg
in
sbb
cmc
lret
ss
pop
scas
sbb
add
sbb
mov
std
inc
jne
jle
nop
push
mov
in
aas
push
sbb
lock
call
xchg
jo
lock
aad
or
aas
jle
jnp
movsb
pop
or
in
lahf
xor
fcoml
fnsave
out
mov
es
add
mov
push
pushf
pop
insl
cmp
into
xor
mov
jg
jb
lcall
pop
jno
in
movl
add
shlb
fisubrs
pop
sti
xor
xchg
xchg
jl
in
dec
push
mov
lret
icebp
or
mov
int
mov
fwait
push
aaa
sbb
mov
out
lcall
push
cmp
dec
repz
ret
push
movsb
jg
out
cmc
in
xchg
xor
enter
add
xor
scas
push
dec
rcll
pop
jmp
lcall
in
cli
pop
test
daa
jbe
push
sub
push
push
nop
cltd
adc
mov
pop
lods
in
cwtl
mov
enter
stc
xchg
adc
dec
arpl
in
push
inc
inc
rcrb
es
jns
stc
sbb
dec
test
jle
add
lods
mov
cmp
xchg
pop
dec
add
rolb
jecxz
push
push
xchg
aam
imul
fdivr
xor
ret
addr16
shlb
dec
cmpsl
insb
sbb
inc
aaa
sub
push
ja
pushf
loopne
xlat
add
popa
jns
push
mov
mov
pusha
arpl
push
fidivl
cmpsb
mov
lock
ja
fdecstp
psubusb
leave
int3
pop
mov
cmp
sub
hlt
cmp
mov
andl
push
xchg
mov
push
inc
pushf
cmp
xor
dec
stc
jno
je
add
hlt
mov
xchg
pop
clc
lods
and
jl
mov
inc
dec
mov
jb
pop
insl
jg
ficomps
icebp
xchg
push
cwtl
aam
add
call
mov
aaa
push
clc
push
mov
adc
mov
addr16
dec
daa
lods
hlt
and
out
jae
inc
in
mov
xor
dec
mov
movsl
cld
lahf
xchg
add
sbb
mov
clc
data16
sub
fimull
js
cltd
sub
cmp
ffree
out
imul
out
ret
or
add
xlat
divb
dec
adc
mov
leave
push
popa
push
outsb
jnp
mov
insb
scas
cld
rorb
lahf
sbb
out
add
rcrl
arpl
cs
ds
sbb
das
ljmp
add
push
mov
push
dec
pusha
jl
pop
sub
rclb
mov
rcr
sub
or
lret
dec
inc
mov
gs
daa
xor
or
xchg
push
adcb
rcrl
sbb
push
or
mov
sbb
dec
mov
outsb
ljmp
je
inc
add
push
and
cmp
add
and
dec
mov
out
cmc
shr
div
mov
lods
js
mov
je
out
lea
pop
pop
sub
movsl
mov
test
into
push
jnp
es
sub
mov
or
dec
outsb
ret
xor
fwait
std
scas
push
cmc
ret
ds
push
inc
push
mov
outsl
iret
jp
mov
test
sub
inc
pop
pop
nop
adcb
icebp
dec
push
and
shll
xor
pop
pusha
int3
cs
in
xchg
stos
inc
push
sub
adc
movb
mov
dec
inc
loope
pop
or
push
add
lret
inc
popa
js
lods
xor
popf
and
insl
lds
or
mov
neg
icebp
and
shlb
aaa
xor
call
mov
shll
push
insl
xor
jg
cmp
mov
div
int
mov
clc
jne
cltd
jmp
jle
or
and
ret
loope
enter
mov
cld
adc
sub
jno
sub
inc
and
xchg
dec
xor
int3
adc
adc
mov
mov
and
mov
das
mov
mov
pop
ror
cmovle
adc
je
sbb
fsts
mov
shlb
lods
lea
push
daa
mov
sub
push
lds
js
sbbl
inc
xchg
call
inc
adc
inc
sbb
inc
sbb
data16
push
sub
cli
mov
repz
shll
jg
cmp
and
xor
xchg
rorb
cmp
mov
lret
lods
push
sahf
out
dec
in
adc
jnp
mov
je
pushf
out
pop
lret
fsts
or
pop
jo
mov
dec
arpl
xchg
and
ja,pn
mov
pop
sbb
in
pop
pushf
dec
bound
cmp
xor
sbb
jmp
jnp
outsb
pusha
dec
sti
call
movsl
orb
xchg
in
stos
scas
mov
shll
scas
mov
mov
inc
adc
mov
popa
xor
jge
fidivrs
mov
cmpsb
add
pop
es
xchg
imul
push
mov
movsl
enter
mov
xchg
icebp
xlat
insl
pop
popf
stos
aas
cwtl
mov
xor
ljmp
dec
mov
ret
jne
cld
fdivs
mov
lahf
pop
pusha
pop
out
xor
xchg
loop
ret
int3
sbb
and
inc
add
add
lea
push
cmp
pushl
call
cli
gs
outsl
xor
movsl
pusha
or
imul
iret
inc
pop
cmpsb
sahf
dec
out
fprem
out
lcall
lahf
lret
mov
aad
scas
mov
in
sahf
int
mov
jecxz
sahf
adc
movsb
into
fs
cmpsb
jg
xchg
iret
inc
inc
sub
andb
cmp
repnz
cmpsl
inc
add
addr16
cmpsb
or
sbb
lahf
xchg
and
xor
out
mov
rolb
cwtl
scas
enter
jns
xor
fdivrs
cmp
mov
scas
jp
shlb
popa
je
shlb
dec
push
js
inc
jp
dec
mov
hlt
roll
iret
addb
data16
jge
in
xchg
jns
sub
aad
loope
fstl
je
and
dec
push
jmp
repz
jecxz
xorb
pop
jns
dec
test
out
pop
popaw
aam
mov
jg
mov
xor
xor
xchg
divb
cmpb
std
mov
mov
adc
das
sub
pop
lock
mov
push
daa
loopne
je
xlat
icebp
pushf
pop
std
mov
pop
adc
orb
push
arpl
gs
mov
int3
pop
addr16
fisubrs
dec
lret
mov
popa
mov
rcrl
push
and
push
push
cmp
sub
out
or
jae
cmp
jb
mov
lahf
jns
das
xchg
jg
mov
cmpsl
cmpsl
pop
ret
push
shlb
lock
jecxz
in
jg
mov
adc
es
cmpsb
jo
sbb
or
rcll
idivb
mov
movsb
mov
push
sbb
les
pop
sbb
mov
sub
arpl
test
cwtl
mov
in
adc
mov
sbb
sbb
and
notb
push
sysret
dec
inc
jl
push
inc
ret
ret
lea
shrb
jge
and
ljmp
mov
adc
and
fs
jge
xchg
dec
mov
cld
aas
mov
shr
js
xor
cmpsl
sub
mov
xchg
inc
or
add
xchg
push
jb
subl
mov
mov
popf
jno
inc
add
rorb
ficoml
and
dec
mov
int3
rcll
ljmp
bound
les
shlb
sbb
jb
inc
cmpsb
jecxz
fnsave
inc
mov
jnp
hlt
xor
shll
jp
push
or
sub
into
insl
or
pextrw
jns
jg
cli
push
mov
ja
push
xor
sub
pop
or
or
cmp
pop
xor
imul
stc
aad
lcall
outsb
sti
cwtl
hlt
aas
mov
lcall
cmp
leave
and
jmp
je
or
jge
test
jge
js
or
inc
sarl
pop
rorb
adc
pop
push
roll
mov
jmp
push
mov
js
rcl
sbb
cmp
jae
scas
and
xchg
mov
stos
or
cmp
rorb
cwtl
lret
mov
push
sbb
and
mov
cmp
mov
sahf
fmull
adc
xchg
pop
jle
inc
xchg
push
das
ret
lods
sbb
pusha
xor
sub
lods
clc
sbb
add
jbe
ja
popf
out
cld
push
xchg
aam
jb
mov
mov
dec
inc
mov
xorb
icebp
pop
or
jmp
xchg
cmp
test
push
jo
std
inc
xchg
pop
gs
jnp
pop
test
lods
std
insl
lods
loopne
scas
and
aam
incb
std
jae
pop
xorl
adc
mov
pop
adc
cmp
rolb
inc
mov
shl
and
cli
push
jmp
mov
mov
mov
xchg
adc
fs
adc
aaa
pop
jno
and
fmul
push
lret
dec
std
in
inc
ja
test
and
repz
xchg
cmp
outsb
inc
cmp
cld
and
jg
fdivl
insb
sbb
test
add
movsl
mov
fiadds
in
mov
xchg
fdivl
hlt
jbe
inc
movsl
jmp
mov
push
mov
sti
xor
and
enter
cmp
pop
sbb
arpl
dec
mov
lret
aad
mov
movsb
push
sub
test
ret
cwtl
inc
sub
mov
xlat
and
cwtl
inc
mov
ss
xor
jno
arpl
lods
jecxz
dec
fmul
or
add
and
cltd
mov
cld
out
inc
mov
jle
push
addr16
movsl
loope
push
aad
add
popa
jp
mov
stc
movsb
aaa
pop
xchg
jmp
rcll
jg
or
divl
lret
ret
mov
mov
mov
scas
mov
rorl
jbe
out
jle
sbb
andl
bound
jecxz
push
and
fwait
test
lahf
in
test
push
aas
ret
enter
shll
xor
je
xchg
fldenv
jl
out
addb
out
and
bound
lock
xor
in
mov
push
pop
data16
aad
xlat
mov
adc
mov
pushl
int
loopne
push
xor
ds
fldl
sarb
lods
imul
stos
pop
mov
jae
sub
xor
jl
inc
xchg
js
les
dec
and
gs
sub
pop
ret
xchg
pop
ret
scas
dec
mov
aam
sub
out
rorl
in
or
pop
lret
add
mov
push
xchg
inc
out
dec
dec
push
jno
and
xchg
scas
stos
enter
and
aad
loope
ss
mov
sbb
mov
cmp
jmp
push
movsb
inc
out
insb
enter
mov
lock
lock
outsb
cmp
or
cmp
dec
jle
rol
xchg
dec
cmp
xchg
aam
or
mov
jae
adc
sub
push
sub
lcall
cmp
fnstenv
push
lcallw
xchg
jno
icebp
nop
ret
sar
call
clc
inc
fimuls
or
test
xor
in
ret
cmpsb
sbb
nop
int
sub
mov
arpl
int
dec
rcr
test
shr
test
scas
mov
push
inc
out
lods
ds
mov
inc
das
lea
arpl
cmp
pop
cltd
add
inc
inc
stos
cli
popa
add
add
jbe,pt
mov
mov
adc
jle
xor
scas
sahf
lods
mov
mov
or
mov
inc
pop
cli
rcrl
xor
out
dec
add
mov
push
pusha
ja,pn
sub
mov
dec
add
out
lods
pop
movb
ljmp
or
sub
pop
hlt
add
out
sub
lds
jne
push
leave
fs
in
pop
test
fstpt
jae
test
push
cmp
or
xchg
jmp
dec
add
and
lret
jg
and
xchg
jno
ja
and
rolb
adc
les
pop
dec
jge
cmpsl
xlat
dec
movsb
cmc
in
ret
jp
loop
or
ret
xor
sbb
cmp
or
ljmp
icebp
repz
dec
nop
add
cmp
jns
sub
lds
test
or
or
dec
sub
roll
and
int3
lret
shrb
addl
xorl
loope
mov
xor
cmpsb
popf
push
adc
sbb
and
xor
fbld
ds
xor
sti
std
inc
adc
add
and
repnz
or
adc
addr16
xchg
push
inc
movsl
jno
shlb
cltd
jp
mov
adc
dec
stos
fisubl
xlat
lret
dec
pop
add
mov
push
or
or
mov
pop
push
jo
push
push
das
or
lods
js
imul
jnp
inc
fimuls
aaa
ja
jmp
adc
push
jns
mov
mov
loope
idivb
jle
mov
mov
jnp
push
or
sbb
sub
addb
in
and
fsub
xchg
pop
test
xor
mov
div
pop
sbb
dec
mov
push
lds
popf
push
xor
mov
daa
notl
cwtl
sti
jl
imul
and
outsb
push
inc
mov
sbb
cmp
mov
push
out
test
mov
stc
jecxz
jne
sbb
jo
push
movsl
or
jb
mov
in
and
repz
sub
xorb
ret
jne
cmp
scas
inc
and
jge
push
cwtl
push
popa
xor
popf
sub
ret
mov
sbb
jo
jb
dec
ret
cmp
add
jb
push
int
stc
testb
sub
jnp
push
xchg
cli
dec
out
movl
shrb
and
pop
aas
je
iret
bound
jg
out
mov
push
inc
push
xor
pop
xchg
rcl
call
sbb
clc
cld
aaa
icebp
mov
imul
mov
test
fucom
add
inc
movsb
or
pop
jle
in
cmp
movsb
jae
pop
mov
loop
lahf
lods
cmp
inc
test
out
ja
jle
sbbb
lds
pop
dec
not
cmp
mov
dec
sti
sbb
lret
ja
jle
mov
iret
dec
push
pushl
mov
cmp
add
xchg
pop
cwtl
iret
push
pop
jecxz
pop
mov
xchg
shll
insb
dec
dec
inc
jno
ja
jp
xchg
jbe
and
xor
subb
inc
dec
out
xchg
sbb
pop
mov
aas
xlat
cmp
bound
out
insl
shll
cltd
sub
cmp
adc
xor
mov
stc
fstpt
push
mov
rcl
aam
or
dec
mov
dec
cmp
test
xor
adc
mov
push
jb
loopne
sbb
stc
xlat
push
mov
push
mov
lock
dec
inc
mov
mov
lea
jb
pop
mov
fldenv
inc
leave
xor
icebp
out
mov
sub
movsl
adc
jno
mov
mov
mov
jmp
cld
addr16
sub
cmp
hlt
shlb
jae
mov
and
dec
sub
pop
xchg
pop
ljmp
dec
mov
add
mov
das
in
aas
popa
test
out
out
mov
sbb
shl
xor
cs
imul
adc
cs
jle
pop
sbb
dec
jae
cs
or
mov
jae
mov
sub
insl
adc
es
sub
mov
cwtl
scas
sahf
cmp
xor
je
add
sub
cmp
push
mov
fmuls
notl
call
pop
mov
mov
cmp
sub
jo
outsl
fwait
jp
mov
push
cmp
outsl
enter
adc
jbe
in
add
imul
packssdw
sbb
clc
xchg
cmpsl
cmpsb
cmpsb
incb
inc
inc
mov
mov
lock
xchg
cmp
das
push
clc
mulb
in
stc
mov
ljmp
enter
mov
scas
imul
xchg
mov
stc
xlat
cmp
jp
das
nop
fcompl
cmp
aas
inc
test
pop
xor
sahf
and
jle
scas
mov
ss
cwtl
sub
add
mov
adc
xor
cld
xchg
daa
rolb
cwtl
mov
adc
shl
jo
jmp
add
add
idivl
fldenv
inc
mov
pop
popa
popf
ja
leave
test
jecxz
aaa
dec
inc
mov
jg
pop
sub
sbb
mov
dec
das
push
rorl
popf
out
test
dec
pop
enter
pop
in
push
imul
jle
jbe
jb
push
push
pushf
leave
in
cmp
inc
int
xchg
sub
mov
push
arpl
or
ret
call
lahf
mov
fs
sbb
repz
mov
jb
and
jns
loop
push
adc
sbb
cmc
and
jge
pmulhuw
inc
ret
call
and
mov
cmp
or
jnp
aam
in
rorl
add
repnz
xor
add
aam
out
mov
mov
mov
xchg
int
jle
xor
lds
movsb
lret
or
mov
rclb
iret
hlt
sar
sbb
jp
xchg
sti
adc
xchg
jnp
daa
xchg
inc
pop
bnd
cwtl
cli
inc
mov
lahf
xchg
js
or
repz
stos
adcl
jmp
repnz
scas
jp
jle
mov
and
mov
movsl
lock
test
cmp
mov
flds
fidivrl
jle
xlat
mov
xchg
sub
xchg
sti
mov
out
call
loopne
pop
stos
xchg
pop
inc
lret
icebp
pop
cmp
mov
push
mov
cmp
mov
test
cmp
pop
xchg
xor
or
pop
cmp
mov
or
pop
scas
mov
sbb
int
push
mov
hlt
inc
lods
xchg
xor
mov
movsl
push
icebp
les
inc
jns
outsb
roll
push
cmp
mov
repnz
inc
jae
sbb
dec
cmp
test
or
pop
fimuls
aam
cmp
pop
add
dec
in
mov
insb
imul
lock
jmp
aas
inc
xchg
shl
ljmp
mov
mov
mov
jmp
cmpsl
idivl
outsl
add
mov
mov
inc
outsl
mov
sub
loop
jnp
clc
cli
jp
popa
adc
xchg
lcall
push
inc
dec
mov
insl
jne
cli
sti
jle
enter
add
xchg
add
add
aad
ja
jb
fstps
mov
ds
lcall
cltd
add
stos
or
pop
fadds
add
aad
add
xor
and
aas
add
ss
jge
std
out
jle
aam
ret
lods
pop
mov
scas
ds
mov
scas
jle
inc
out
imul
fbld
fisttpll
imul
call
mov
popa
out
jne
sahf
dec
xchg
jae
nop
aas
cmp
imul
sub
sbb
inc
inc
hlt
cmp
repz
xor
and
je
or
out
lods
js
aas
rclb
push
enter
dec
sub
push
sbb
pop
fsubrl
lds
xor
cmp
cmp
mov
push
fists
mov
scas
sbb
clc
inc
jle
insl
push
test
fildll
xchg
mov
out
or
stc
jbe
inc
insl
movsl
xor
push
pop
mov
in
adc
dec
adc
fdivrs
cmp
pop
cmp
push
pop
sbb
scas
cmp
sub
cltd
sub
sbb
push
mov
xchg
cmpsb
push
lods
pop
mov
fmul
xchg
out
xchg
jp
xchg
hlt
test
test
and
cmp
xorb
test
inc
xor
xor
xor
les
ljmp
cmpsl
mov
add
cmp
push
or
cli
mov
vprotw
or
cmp
mov
pushf
and
jmp
jae
shll
lea
xchg
mov
add
hlt
adc
mov
lcall
outsl
mov
mov
push
sahf
shufps
jb
jns
fwait
out
test
fstpl
xorb
aad
call
popf
ja
mov
cmp
das
negb
shlb
dec
mov
fdivl
and
loope
xchg
mov
jnp
mov
xchg
bound
stos
daa
or
jmp
mov
adc
js
sbb
pop
push
ja
hlt
and
cmc
pushf
push
adc
sbb
jb
pop
add
mov
pop
cwtl
aam
xor
int3
and
push
sbb
shll
add
xchg
fwait
imul
aaa
es
xor
mov
mov
cld
in
push
rorl
pusha
insb
lock
pop
pop
add
andl
jg
cli
aas
mov
aad
bound
out
sti
mov
pusha
xorl
or
dec
pop
nop
cmp
jg
lret
mov
mov
divl
push
xor
mov
mov
pop
adc
into
mov
xor
sahf
pop
je
aam
mov
outsb
lcall
xchg
pusha
cmp
ss
pop
jno
ljmp
xchg
es
jne
out
fwait
in
or
lcall
push
push
lods
push
lods
add
mov
stos
cmp
in
fwait
mov
dec
xor
and
cmpl
pop
daa
bound
lret
mov
push
pop
add
sbb
js
icebp
xor
sbb
cmc
inc
add
inc
cmpsl
les
add
iret
add
sti
pop
or
dec
inc
add
adc
push
cmp
xchg
sbb
xchg
push
mov
inc
mov
mov
cmp
shll
cs
fildll
push
js
mov
in
jg
mov
popf
sbb
iret
roll
iret
dec
pop
mov
mov
ss
cs
xorb
movsb
imul
sbb
sbb
push
pushf
jle
inc
shl
mov
xchg
loopne
pusha
push
xchg
popf
inc
push
cwtl
adc
lahf
inc
push
mov
mov
or
mov
imul
cmp
mov
mov
inc
xorb
fwait
ljmp
ja
fucom
dec
ja
int
jle
bound
inc
out
xor
lods
ret
aad
aas
lea
out
mov
daa
xor
and
cmp
mov
mov
or
std
roll
sahf
out
or
je
cmpsl
mov
mov
pop
sub
cmc
mov
lock
pop
stos
xor
loopne
xor
popa
hlt
push
cmp
sbb
hlt
and
imul
scas
push
mov
cmp
pusha
into
je
clc
out
shrl
cmc
sub
pop
inc
in
adc
das
push
outsl
xchg
in
lds
sahf
movsb
sbb
jb
or
das
mull
ss
ds
hlt
and
and
aad
sbb
cli
ja
push
mov
push
xchg
add
xchg
movsl
jb
outsb
cmp
jge
pop
fs
shlb
ret
sub
cwtl
fcomip
jp
loop
scas
int3
test
xor
outsl
in
push
mov
jl
ret
mov
in
fidivrl
or
push
dec
xchg
movl
sub
pop
mov
ds
shrb
leave
pop
inc
push
pushf
inc
inc
adc
das
sub
ret
pop
int3
jle
sbb
ficomps
and
loopne
push
imul
mov
out
fisubrl
or
add
shrl
and
jg
lods
cmpsb
ret
idivl
lods
lret
mov
jg
movsb
cmp
lret
adc
mov
cmpsl
imulb
test
inc
icebp
shlb
lods
ds
jge
sub
xor
mov
xor
lea
and
pop
pop
addr16
sbb
cmp
push
or
sbb
xchg
cmp
or
out
sub
outsb
and
sub
xor
mov
cmpsl
cs
mov
enter
push
pop
in
inc
jecxz
xchg
xor
mov
pusha
xor
fsts
scas
sbb
jno
sbb
clc
das
mov
out
movq
add
push
push
push
pop
cmp
lods
ja
pop
sbb
cmc
data16
push
inc
mov
pop
call
adc
mov
add
rorb
xchg
jne
das
popa
lock
mov
cli
jo
test
lret
cmpsl
pop
cwtl
pusha
inc
dec
or
ficoml
or
cmp
cmp
mov
fcmovnu
sub
insb
push
mov
adc
adc
add
dec
sub
xchg
mov
jle
imul
inc
pop
and
leave
and
xchg
scas
outsb
mov
cwtl
cmp
push
push
fadd
cmpsl
mov
out
mov
or
mov
add
mov
cmpsl
xor
and
pushf
popa
sbb
add
cmp
jbe
inc
out
dec
lods
fsubr
cmp
notb
repnz
sahf
aad
sub
das
xchg
pop
dec
mov
iret
pusha
inc
call
mov
xor
mov
inc
adc
out
jno
lea
sahf
movsb
lds
mov
inc
push
push
lret
insl
addr16
repnz
lcall
stc
adc
xor
jge
pushf
mov
adc
nop
push
jne
jmp
jmp
in
sti
xchg
xchg
and
xor
repnz
add
lahf
push
mov
xor
inc
cli
mov
mov
mov
popf
or
push
into
jne
adc
loope
sbb
mov
ljmp
sub
int3
push
gs
roll
popf
jb
outsl
jbe
add
and
out
hlt
ss
mov
ss
cli
inc
jp
jb
daa
cli
and
add
arpl
shr
rcl
and
xchg
fsubrl
inc
pusha
push
lds
aad
outsl
xor
or
xor
out
enter
pop
push
push
fadd
std
push
f2xm1
icebp
push
in
nop
fisubl
pop
ror
pop
pop
inc
and
out
cmp
cwtl
lahf
push
sti
aam
hlt
loop
push
and
es
andl
xor
icebp
mov
lahf
cli
or
int
arpl
mov
xor
hlt
mov
sbb
and
loopne
aad
pop
or
mov
xchg
inc
imul
xchg
sarb
mov
jbe
pop
cwtl
mov
jo
xchg
mov
loopne
jecxz
mov
and
in
test
loopne
aad
addr16
sub
push
fbld
enter
mov
sub
inc
and
scas
xchg
jns
cmpsl
pop
push
dec
test
pop
sbb
cmp
ret
xor
jle
cmp
mov
sbb
scas
pop
jg
enter
jmp
idivb
mov
mov
scas
imul
pop
mov
insb
xchg
cmp
push
int3
or
mov
out
sub
fiaddl
xor
push
or
mov
mov
mov
insb
lods
adc
in
pop
xor
orl
lret
mov
jb
jno
test
mov
mov
arpl
mov
or
pop
das
lds
int
popf
pop
mov
and
jp
in
test
js
testb
out
xchg
sbbl
inc
adc
popf
or
dec
popf
mov
sbb
inc
js
and
sbb
mov
outsl
dec
pop
repz
adc
pop
pop
aam
or
cmp
jnp
sbb
stc
xor
mov
add
adc
popf
ja
adc
pop
cmpl
xor
jle
int
pop
cld
lcall
xor
fsts
movb
pop
orb
andb
std
sarb
test
mov
inc
add
mov
cmp
xchg
xchg
scas
xchg
aam
add
pop
jg
mov
idivl
cld
xchg
sub
lock
inc
mov
add
jns
es
push
push
lods
repnz
hlt
xor
stos
repz
xchg
inc
inc
dec
cmp
mov
push
aas
decl
add
lcall
pop
cs
and
ss
and
sub
adc
dec
test
pop
in
or
adc
or
mov
jnp
out
call
mov
jmp
leave
repz
sahf
bnd
dec
rorb
cmp
insb
pop
jg
and
hlt
mov
adc
xchg
xchg
loopne
sbb
daa
jg
daa
adc
push
fisttps
push
adc
pop
iret
adc
mov
mov
out
add
fyl2x
mov
addr16
imul
orl
cmpsl
mov
mov
insb
sbb
pop
pop
enter
hlt
aam
sub
scas
push
dec
mov
sbb
scas
cmpsb
mov
cld
jg
sbb
pop
mov
and
adc
push
adc
cwtl
dec
push
ds
pop
das
push
sbb
aas
mov
dec
rorl
dec
cmp
lahf
sbb
gs
pushf
xlat
mov
lcall
mov
call
adc
loopne
sbb
xor
cmp
jns
push
movsl
cmp
inc
mov
sbb
sbb
adc
push
outsl
push
sub
addr16
xor
mov
jmp
inc
jle
jb
leave
notb
pusha
lcall
jb
stos
aad
mov
ss
mov
or
lret
pop
cld
mov
repnz
nop
pop
arpl
fldl
andl
mov
mov
cmc
mov
cmp
imul
div
outsb
push
adc
mov
int3
repz
mov
insb
xchg
xchg
pop
test
jbe
or
mov
xor
adc
xchg
push
clc
sbb
out
sbb
out
insb
sub
lret
sbb
or
pushf
outsl
jno
mov
xchg
mov
mov
adc
xchg
xor
inc
pop
jecxz
mov
cmpl
xchg
mov
mov
loop
cs
rclb
jb
aam
cmc
jns
cltd
lock
and
push
fiadds
sbb
jecxz
fmul
sub
add
add
fwait
imul
cs
dec
xor
dec
cmpsl
add
pop
adc
sarb
mov
sub
sbb
sbb
mov
mov
rcll
push
xor
ja
dec
and
mov
fsubp
fildll
lods
jo
sub
out
or
rcrb
rorl
shl
jnp
pop
je
mov
orb
inc
and
hlt
mov
lods
pop
dec
loop
test
sahf
pop
dec
call
ret
into
push
dec
inc
dec
es
and
mov
xor
add
mov
les
das
inc
pop
sbb
inc
jge
rcll
psrlw
loop
mov
dec
insl
xlat
push
aas
add
pop
popl
ficomps
mov
cmp
sahf
xchg
mov
adc
adc
pop
and
jmp
daa
mov
jg
push
add
dec
cmp
jge
jno
push
sbb
jne
movsl
dec
pop
fucomp
or
in
popl
jno
or
bnd
push
or
ffree
lahf
sbb
sub
cld
aas
mov
rclb
in
outsb
xchg
lret
ja
mov
stc
cmc
dec
pop
aaa
test
aaa
push
cltd
xchg
xorb
out
imul
sbb
popf
enter
mov
ror
push
xor
js
ljmp
sub
cwtl
push
xor
cltd
lret
icebp
stos
push
inc
int
ss
or
add
xchg
pop
fiadds
mov
sub
fsubrs
mov
jmp
movsl
xchg
in
pop
xchg
test
jp
and
hlt
and
push
lret
xchg
loope
sbb
xor
out
cmpsl
sbb
inc
mov
dec
add
loopne
xchg
xchg
loopne
lahf
cld
dec
sub
lock
mulb
call
lret
in
push
adc
or
aaa
aas
mov
sahf
adc
pop
ret
rcll
xor
jmp
or
adc
insb
inc
outsb
imul
inc
imul
popa
enter
iret
leave
ret
mov
mov
cmp
mov
or
in
mov
mov
push
jp
pop
cwtl
bound
mov
mov
scas
adc
lret
pop
rcrl
cmc
ud2
enter
int
stc
mov
cvtpi2ps
loopne
cmpsl
add
and
pop
loopne
repnz
rclb
cli
ret
test
je
cwtl
call
push
int
sti
mov
mov
push
mov
addr16
and
push
pop
jecxz
aaa
fsubrs
ss
inc
into
jns
outsb
std
popa
movsb
sub
mov
adc
jmp
fstpt
jne
cltd
sbb
les
sub
inc
mov
in
adc
mov
adc
outsl
sub
cmp
sbb
inc
jle
add
fsubl
bound
in
mov
neg
pushl
dec
add
mov
xor
mov
xchg
test
adc
into
mov
jnp
aad
adc
lret
mov
stos
adc
push
sbb
fidivl
mov
divl
cmp
pusha
mov
ret
push
add
insb
inc
fistl
xor
jnp
or
xor
fwait
loopne
xchg
cs
arpl
mov
inc
add
ja
xorb
xchg
mov
test
inc
shl
stos
test
add
cli
xlat
cld
xchg
mov
int3
rcll
adc
loope
rorl
sub
int3
inc
dec
ds
jns
sub
sarb
repnz
outsb
lcall
sarb
ss
cmpsl
cltd
mov
xlat
stos
push
lcall
pop
ficoml
mov
jnp
cltd
add
sub
hlt
in
rcll
xchg
xor
inc
out
out
mov
dec
out
pop
out
inc
lret
in
mov
fwait
pop
mov
or
jo
in
xor
cmp
xchg
cwtl
dec
pop
insb
mov
dec
add
xchg
mov
inc
lahf
decb
sub
int3
lcall
and
xchg
cwtl
subb
scas
test
orl
xchg
add
aaa
pop
inc
outsl
sbb
pop
xor
cmpsb
stos
pop
int
sbb
insb
push
mov
xchg
inc
jle
pop
fs
outsl
jp
in
lret
add
outsl
pop
movsb
imul
pop
daa
inc
sti
das
negl
or
sbb
sti
icebp
or
add
movsb
ss
mov
out
into
in
test
iret
ljmp
rorb
out
push
loop
inc
or
or
or
imul
mov
xor
jg
in
fcom
xchg
push
stc
mov
loopne
xlat
sbb
shlb
ljmp
xor
mov
or
mov
jl
jb
ljmp
xchg
cmp
jg
idivl
mov
jmp
xchg
push
sub
arpl
pop
pusha
cmpsl
jb
stos
jecxz
test
stos
dec
bound
rorb
and
xor
sbbb
call
mov
push
inc
push
mov
data16
addr16
test
mov
sub
ja
xor
fnstcw
push
adc
sahf
xor
and
shlb
adc
imul
icebp
xchg
pop
stos
inc
orl
adc
mov
rol
add
or
ds
pop
and
sub
push
pop
repz
push
test
call
or
test
adc
sub
int
outsl
jle
loopne
lods
cmp
rorb
ret
cli
gs
lea
fucom
dec
push
imul
mov
pushf
xor
fistps
push
ret
scas
xor
stos
fnstcw
cmp
mov
fisubl
adc
cmpsl
test
mov
cmpl
pop
mov
loopne
xchg
dec
aam
and
fcoms
aam
scas
add
inc
fucom
cmpsb
adc
scas
cmp
cmp
icebp
dec
fildl
mov
mov
loop
out
sub
iret
sbb
push
les
jl
push
mov
jmp
sub
dec
shrb
idivl
div
sbb
gs
push
or
or
adc
fwait
dec
andl
test
mov
dec
mov
cmp
repz
mov
dec
add
out
adc
es
and
jbe
fxch
jecxz
xor
iret
or
stos
mov
addr16
ret
adc
push
subl
or
leave
ja
push
push
int
or
sub
orl
jl
lock
add
das
cmpb
bound
repz
lahf
idiv
cmc
popa
xchg
jl
xchg
imul
sub
js
hlt
iret
bound
flds
cmpsl
ret
sub
xchg
call
out
mov
outsb
loop
xor
int3
inc
xchg
fcomi
cld
fwait
iret
cli
das
add
mov
int
pop
js
jno
lcall
and
cmp
movsl
cs
nop
sbb
ja
or
lahf
jnp
test
ja
sarl
loope
jnp
lds
out
inc
mov
mov
sbb
fst
xchg
xchg
rorb
test
mov
mov
test
test
insl
inc
or
pop
nopl
ss
or
mov
bound
mov
push
adc
cmpsb
fcomps
ja
add
shrb
push
out
hlt
ret
std
fldt
jae
cld
push
insb
pop
adc
push
aaa
lcall
into
ja
bound
adc
and
lock
add
sbb
sbb
mov
sahf
daa
mov
and
lret
repz
sti
inc
mov
dec
fst
rclb
pushf
mov
add
das
outsb
push
and
testl
adc
test
cmpsb
popf
pop
pop
dec
stc
xchg
imul
or
cmp
insb
sti
dec
dec
fmull
cltd
xchg
adc
mov
jmp
fidivl
mov
jne
cmpsb
ljmp
outsl
aam
call
inc
xor
pop
pop
std
mov
sti
stc
add
mov
inc
fucomip
addr16
lods
jns
push
aas
mulb
leave
sub
add
jnp
cmp
sbb
cmpsb
enter
sahf
sbb
mov
pop
cmp
rorl
aad
xchg
jge
bound
mov
icebp
scas
xor
pop
lahf
fyl2x
rorl
icebp
cmp
mov
sub
out
mov
cld
pop
push
sahf
inc
repz
fwait
jecxz
mov
mov
xor
mov
xchg
fldenv
loopne
into
cli
dec
out
out
push
test
push
sbb
inc
pop
sub
pop
ljmp
arpl
xchg
icebp
jg
adc
jmp
push
dec
les
cld
sub
mov
adc
fs
insl
jmpw
jae
stc
dec
jnp
adc
lds
jne
ret
push
imulb
add
loope,pn
lcall
fld
sarb
pop
fidivs
cmpsl
insl
hlt
daa
dec
xor
adc
add
xor
sarl
push
in
ds
pop
jne
jle
mov
gs
mov
dec
mov
and
cmp
cmp
pop
mov
xor
sbb
sbb
jmp
iret
fadds
je
mov
dec
inc
sbb
repz
out
mov
and
adcl
cmp
sti
mov
loop
push
jle
jl
push
push
loopne
mov
ret
cmp
cmp
mov
pop
test
notl
lret
sarl
cs
sbbl
add
dec
jg
push
xchg
repz
pop
jle
cmc
int
cmp
out
lods
inc
lods
pusha
mov
cmp
pop
adc
rcll
mov
movsl
mov
mov
mov
inc
cmp
xor
push
inc
xchg
xor
dec
mov
add
subl
pop
sub
negb
je
scas
lcall
imulb
pop
shlb
pusha
leave
sub
or
fadds
xchg
pop
cltd
call
adc
cld
jae
movsb
in
or
mov
sti
mov
ss
not
inc
sub
fldt
push
inc
push
stc
xlat
in
and
dec
pop
or
lcall
es
jg
jmp
popa
hlt
nop
jo
push
sub
xchg
sub
inc
ljmp
lea
imul
loopne
fstps
in
dec
inc
add
dec
mov
and
arpl
xor
dec
int
sub
out
stc
jp
xchg
mov
sub
imul
mov
mov
jp
mov
scas
icebp
out
lcall
dec
imul
mov
outsb
addr16
fidivrl
stos
cli
add
push
aas
and
jae
or
repz
jno
into
xor
xor
lahf
cmp
xchg
sbb
jl
loop
testb
fwait
popa
out
xchg
xorb
dec
or
pop
dec
mov
inc
or
push
pop
imul
jb
mov
mov
sahf
push
in
or
pop
inc
out
gs
pusha
loop
fwait
leave
mov
and
stos
push
mov
or
sbb
and
test
or
mov
lods
inc
push
int3
aad
adc
inc
xchg
xor
aaa
movups
insb
pop
out
int3
cmp
ja
iret
rorl
mov
shrl
dec
pop
subl
popa
fdivrs
or
push
xchg
cwtl
cmpsb
std
push
orb
pop
stc
dec
out
mov
mov
jle
in
shl
jbe
fwait
and
sub
pop
das
js
int
movsb
fimull
dec
mov
je
cmpsl
ja
dec
aas
lret
mov
sbb
pop
adc
push
pop
push
sub
push
mov
xchg
or
inc
cmc
jno
repz
mov
xor
cmp
cmp
inc
inc
and
inc
adc
add
sub
ret
out
ret
loop
fcomps
xchg
mov
inc
lods
jg
xchg
jbe
int3
dec
cld
in
pop
ret
fcmovb
out
push
mov
adc
lock
adc
xchg
iret
xor
loop
popa
arpl
cltd
lea
sbb
stc
cmp
mov
out
jg
cmpsb
mov
in
or
in
dec
sahf
loop
ljmp
xchg
pop
inc
pushl
xchg
mov
or
xor
test
inc
fmuls
inc
mov
mov
mov
addb
leave
sbb
scas
mov
inc
or
adc
sbb
data16
or
ret
and
test
mov
pop
sub
jg
dec
cmpsb
rorl
repnz
and
jb
and
mov
add
or
cwtl
fwait
pop
dec
or
mov
cltd
add
or
imul
xchg
mov
push
lods
fdivrl
add
mov
jg
and
push
inc
dec
test
mov
popf
fcomps
pop
or
xor
add
mov
iret
dec
dec
repz
mov
dec
orb
out
dec
leave
inc
sahf
add
add
gs
lahf
pop
lret
mov
xor
fcompl
out
xchg
dec
dec
jecxz
jmp
cmp
xchg
clc
test
mov
fs
outsb
cmp
sti
ficoms
or
push
adc
pop
push
leave
pop
std
mov
loopne
jmp
pop
dec
mov
or
dec
fisubl
outsb
sbb
cmc
jp
imul
push
sbbl
mov
ret
mov
mov
lds
ljmp
cs
pop
nop
xchg
int3
loopne
mov
xor
jbe
mov
xor
insl
lret
mov
or
push
jae
mov
sahf
stos
test
mov
or
dec
in
inc
stc
fwait
clc
mov
mov
add
hlt
add
push
lods
icebp
xor
pop
xchg
inc
mov
mov
fimull
mov
pop
inc
in
leave
popa
fucomp
movsb
scas
jno
negl
cmp
sub
jbe
movsb
dec
dec
fxch
sbb
push
xchg
popa
push
mov
in
inc
iret
out
fstl
mov
mov
inc
pop
imull
push
pop
or
cmp
jle
decl
test
and
popf
sub
addr16
adc
inc
rdmsr
adc
push
stos
ja
sbb
fisttps
mov
int3
or
xchg
fldt
call
in
pushf
lock
inc
test
cmp
pop
aas
inc
insb
gs
xchg
ljmp
jns
pop
adc
inc
xchg
jnp,pn
cmp
rclb
ja
out
push
mov
into
movsb
movsl
push
push
cmp
mov
lret
sahf
jo
ret
daa
push
cmpsb
inc
mov
orb
mov
lds
jmp
jmp
mov
inc
test
and
dec
sbb
std
adc
aas
sub
nop
ret
lods
dec
popf
push
sbb
mov
cmp
jle
fwait
lods
dec
xchg
aam
push
mov
in
mov
popl
aad
cmpsb
lahf
xchg
push
mov
adc
lcall
push
cs
aam
xor
iret
jno
pop
cli
pop
rorb
outsl
pop
push
inc
xchg
jecxz
inc
stos
push
ds
int
lret
shlb
sti
or
jmp
and
sar
pop
jns
and
pop
aad
clc
shl
loop
cld
cmp
dec
push
mov
pop
leave
dec
xor
ret
and
push
xor
std
cld
inc
pushf
ret
xorb
push
or
lock
repnz
or
sub
adc
or
and
inc
lods
mov
loopne
pop
xor
add
xchg
adc
adc
inc
jle
jno
pop
lea
pop
adc
cmc
test
aad
mov
fst
push
xchg
inc
shrb
cltd
mov
lds
stos
movsb
or
sub
test
or
sbb
ljmp
popf
xchg
fxch
jbe
and
stos
insl
inc
or
cli
push
sbb
mov
jns
adc
sti
push
fs
inc
mov
rorl
mov
ss
xchg
pop
sub
add
pop
sub
xor
pop
repz
push
daa
lahf
fstl
xchg
jp
movsb
jg
inc
sub
inc
push
mov
sbb
sbb
push
pop
inc
mov
clc
shll
cmp
popf
notb
pop
mov
cmp
imul
dec
adc
icebp
fisubl
push
es
push
das
andl
cmpsb
push
daa
cmp
xor
sbb
mov
jle
test
movsl
xchg
ret
xor
insb
push
incb
push
xor
xor
lret
mov
jmp
xor
add
aaa
shrb
pop
movsl
fmul
xchg
mov
prefetch
or
mov
xor
sbb
test
jb
mov
and
sbb
dec
fldcw
pop
mov
stos
aas
sub
push
cmpsl
call
sub
inc
sbb
adc
sti
das
adc
hlt
insl
jmp
fmull
xchg
hlt
and
sbb
lcall
mov
xor
scas
das
cmpsb
js
xor
sarb
jno
mov
or
dec
sbb
stos
pop
leave
jo
inc
push
or
xor
rcll
subl
or
rclb
cli
or
mov
sbb
sbb
mov
mov
bound
adc
xchg
push
mov
in
pop
pop
mov
push
mov
xchg
out
insl
sbb
bound
pop
out
cli
jno
popf
icebp
dec
rorb
mov
jns
add
jge
or
pop
xchg
add
adc
orb
loop,pn
pushf
sub
lea
pop
dec
jbe
cli
fcmovu
into
add
popf
fsubrs
pop
mov
fisubs
sub
jg
jb
xor
jp
hlt
cmpsl
jmp
fildl
add
out
loopne
jecxz
dec
pop
das
jle
cld
sub
sbbl
pushl
cmp
dec
sub
xor
mov
lods
lret
out
mov
or
scas
mov
cmp
or
test
in
sahf
loop
lcall
je
stc
xchg
ja
enter
insb
adc
notb
xchg
sbb
fisttpll
mov
sub
cmpl
sahf
inc
dec
fidivs
pop
andl
sbb
jg
dec
cmp
out
add
ja
insl
xor
mov
dec
dec
adc
cmp
mov
or
pop
mov
js
lock
xor
sti
and
push
into
dec
mov
pop
mov
int3
cmp
aaa
in
dec
notb
push
sub
inc
loopne
cld
insl
js
rcrb
loopne
inc
dec
push
and
add
mov
dec
mov
in
jmp
cmpsb
cmc
mov
out
arpl
jp
xchg
xor
xlat
sub
int
add
scas
cwtl
pop
popf
jae
int
mov
or
pop
fs
mov
or
push
and
mov
arpl
call
loope
popa
and
loopne
out
or
sti
lods
shlb
cmp
mov
in
ljmp
pusha
movups
stc
ret
xor
mov
mov
insb
shr
xlat
cmpsb
fldl
arpl
mov
pop
dec
push
test
xchg
push
lret
cli
inc
mov
xor
adc
xchg
cltd
lock
dec
inc
sbb
int
mov
loope
xchg
ljmp
dec
cmpsl
scas
inc
sub
ljmp
push
scas
mov
dec
jecxz
and
std
mov
push
aaa
scas
xor
loope
cmp
ljmp
mov
inc
adc
push
bound
inc
test
mov
jge
jp
or
adc
mov
jns
stos
rcrl
cmp
mov
xchg
subl
into
test
fmull
loope
jb
cmpsb
mov
outsb
clc
or
pop
scas
orb
and
dec
mov
jmp
je
dec
push
daa
ret
shll
mov
jp
sub
cli
sar
cwtl
push
push
das
stc
lret
mov
xchg
shl
popa
mov
pop
test
and
imul
mov
mov
out
rcl
lcall
fldcw
int
cmc
in
pop
adc
stos
or
mov
lea
imul
lds
inc
and
shrl
sbb
mov
pop
ret
inc
dec
pusha
out
and
lret
jmp
andl
pop
lahf
or
dec
xchg
sbb
cmp
mov
or
and
dec
lret
fs
mov
lcall
nop
test
sub
xorl
push
adc
mov
xchg
mov
mov
rcl
lcall
cmpsl
ljmp
cs
je
cwtl
jno
pop
cmp
lods
loop
adc
out
in
cmp
pop
pop
push
test
aad
in
idivb
mov
cltd
sbb
fisttpll
sbb
xchg
or
cmc
xchg
and
ljmp
adc
add
jle
cli
jae
cmp
stos
fwait
add
and
mov
and
mov
push
arpl
subb
mov
mov
mov
push
inc
lods
push
pop
shlb
pusha
les
adc
mov
in
fcmove
lret
movsb
push
aaa
push
or
xor
fwait
ret
imul
lock
bound
and
and
jno
loopne
fwait
iret
mov
adc
dec
stc
popf
inc
sbb
shll
ja
dec
aaa
loopne
inc
jnp
lahf
push
xor
outsl
push
fldenv
jge
jns
cli
loope
arpl
xchg
xor
fs
cmpsl
stos
dec
fistl
sbb
jp
icebp
pop
das
jne
jnp
adc
xor
pop
insb
mov
scas
jns
dec
stos
mov
rorl
adc
xchg
jns
sbb
push
push
aas
andl
push
pop
lds
cmp
mov
int
sub
inc
out
cld
fs
add
push
dec
out
call
scas
mov
fldenvs
test
int3
arpl
loopne
aad
scas
add
and
jno
inc
pop
mov
faddl
ffreep
xlat
dec
into
imull
dec
xchg
shl
or
fsubs
jnp
fs
xchg
test
arpl
adc
cmpl
mov
mov
mov
test
mov
roll
outsb
sbb
mov
jno
fbld
jge
fcomps
mov
jbe
pop
inc
adc
or
aad
jno
mov
fstl
jmp
nop
mov
or
sti
mov
add
xchg
ss
pop
inc
jnp
pop
jecxz
and
xchg
call
xor
adc
cs
inc
xchg
repnz
fiaddl
mov
xchg
inc
pop
jbe
loope
mov
mov
shll
int
jb
or
stos
popf
and
movsb
sbb
fcmovne
mov
dec
jmp
test
mov
pusha
clc
xchg
out
idivb
pop
fiadds
pop
int
sub
iret
pop
jae
jge
sub
jne
sarb
xor
inc
jge
data16
into
loop
push
addb
push
cmp
push
cmp
xchg
cmp
sub
insb
roll
ljmp
mov
insl
clc
cs
xchg
jge
sti
inc
stos
popf
xor
iret
mov
mov
xchg
pop
pop
mov
popa
inc
aad
pushl
pop
insl
xor
mov
mov
pushl
popa
icebp
insb
pop
jp
aas
test
cs
setle
sbb
dec
xorl
pop
rcr
ljmp
js
cli
ret
sbb
sbb
pop
aad
js
inc
lods
adc
mov
push
mov
das
ret
pushf
imul
pop
sub
push
fnsave
xor
xchg
mov
jl
js
push
push
or
jns
clc
xchg
loope,pt
repz
or
add
dec
popf
cmp
icebp
stc
xchg
js
fs
mov
push
call
cltd
cs
push
mov
inc
shl
hlt
in
adc
xchg
lea
shlb
mov
fs
mov
mov
or
leave
cli
in
pop
imul
xchg
int
fcomps
pop
es
fimull
sahf
inc
add
fidivrs
cltd
enter
daa
mov
fnstenv
or
lret
cli
lcall
jne
push
jnp
out
cmp
rolb
das
out
insb
push
xchg
jge
mov
jb
pop
daa
jmp
adc
cmp
mov
ret
loop
aad
cmp
push
cmpsb
mov
cmc
adc
sub
xchg
pushf
cltd
cmp
nop
sbb
cmpl
cld
dec
jecxz
add
xor
inc
mov
and
fucompp
out
ljmp
xchg
jecxz
rorb
js
test
or
xchg
cs
cmp
cmp
fwait
cwtl
pop
jnp
mov
mov
scas
sbb
lret
sbb
jmp
shlb
xchg
jge
mov
sarl
aam
rorl
jb
dec
fbstp
inc
inc
ja
insl
lahf
xchg
jns
imul
iret
lds
sbb
testb
rcll
scas
push
test
cmpsb
ret
in
fmuls
out
out
mov
movl
inc
fs
cld
sti
mov
call
cmp
jne
pop
imulb
pop
bound
push
cmpsb
mov
fwait
inc
les
xchg
dec
aas
notl
faddl
ret
clc
into
adc
loopne
cmpsl
jmp
mov
adc
sbb
adc
flds
mov
nop
dec
ss
jae
js
xchg
lcall
xchg
push
movsl
je
ljmp
inc
add
loope
mov
cmp
aas
jae
scas
bound
mov
and
ss
inc
pop
mov
mov
pushl
cmp
push
push
jmp
scas
xlat
xchg
jg
cmp
lea
cmp
cmp
jne
push
daa
aaa
add
push
dec
xchg
repnz
xlat
cltd
add
sbb
sti
dec
adc
xchg
add
adc
inc
mov
lods
dec
test
pop
mov
outsl
mov
fnsave
imul
clc
ljmp
mov
mov
insb
pop
pop
adc
cli
dec
loop
and
mov
into
jmp
mov
mov
lcall
mov
testl
adcb
dec
test
push
cmp
rcrl
mov
inc
xchg
adc
mov
xchg
lods
repnz
mov
lret
ds
mov
pop
jno
arpl
push
cmp
mov
scas
dec
xor
add
mov
lock
in
ret
dec
push
call
dec
jecxz
sub
shl
mov
or
cmp
and
inc
cmp
ret
aad
sbb
imul
stos
mov
icebp
stc
test
ljmp
jnp
imul
cld
or
iret
inc
add
sub
movsb
jecxz,pt
push
pop
lds
jg
test
xlat
dec
ret
insl
int3
xor
shlb
gs
or
push
cmc
ja
mov
pop
sbb
insb
push
mov
pop
push
lea
xor
mov
mov
mov
ljmp
int3
js
enter
out
pop
inc
cmpsl
jne
int
insb
sbb
pop
inc
pushf
fdivrl
and
xchg
inc
repz
mov
loopne
adc
in
or
pop
mov
dec
pusha
sarb
shl
pop
aad
push
loopne
lock
and
dec
pop
pop
lods
mov
leave
mov
mov
xor
or
insb
xchg
lock
shll
adc
push
lahf
mov
imul
mov
arpl
iret
and
mov
jns
clc
stos
push
xor
mov
cld
lock
pop
ret
inc
inc
mov
mov
mov
mov
call
pop
lcall
out
mov
sbb
popf
pop
addr16
rorb
jmp
sahf
or
das
jl
mov
pop
xor
sub
jbe
nop
fstps
lock
pusha
push
ret
jmp
mov
mov
test
xor
mov
out
jb
add
adc
adc
cmp
jmp
jne
cld
inc
test
inc
pop
arpl
in
jne
xchg
into
cmpsl
mov
add
arpl
jmp
addr16
xor
shrl
mov
fdivrs
fsin
mov
rcrb
mov
mov
test
push
sbb
cmp
cmp
mov
orb
and
popa
packuswb
mov
cmp
enter
inc
mov
loop
mov
pop
outsb
push
cli
dec
dec
xor
and
pop
mov
ja
test
jns
dec
dec
movsb
leave
pop
adc
add
aas
lea
dec
leave
inc
mov
ds
sbb
jmp
jg
scas
inc
jb
and
dec
int
push
sbb
jbe
mov
add
jnp
sti
fisttpll
lret
negb
xor
dec
dec
ja
or
je
push
lret
icebp
out
daa
jl
pop
in
fidivrl
test
clc
inc
cld
push
test
or
arpl
repnz
std
lods
pop
fsts
cwtl
stos
mov
sarl
fldl
ljmp
inc
and
sub
mov
add
dec
push
neg
aas
lods
push
cvtps2pi
ja
mov
dec
imull
mov
sbb
pop
cmp
xor
cmpsl
push
sub
leave
lret
add
xchg
xchg
lds
lret
cmc
pop
adc
ds
lock
cmp
xor
jmp
mov
and
pop
xchg
mov
call
sahf
fmull
mov
addr16
imulb
mov
or
stos
xchg
cmp
sti
imul
mov
lods
lods
stc
add
mov
mov
jno
adc
push
mov
adc
in
movsl
clc
movsl
stc
adcl
rorl
xor
sbb
xchg
stos
mov
xchg
mov
aad
std
jnp
dec
int
in
jae
mov
xchg
enter
sbb
push
data16
movsb
loope
aas
inc
jp
fnstsw
icebp
cltd
push
push
push
jno
mov
push
lods
mov
scas
outsl
or
push
mov
call
mov
das
xchg
js
jecxz
int
ret
out
and
loope
adc
test
out
orl
dec
mov
imulb
push
cwtl
mov
icebp
test
iret
or
std
pop
mov
pop
push
mov
mov
loopne
xor
cs
dec
cltd
sar
negb
outsb
pop
insb
dec
sub
cmp
dec
push
xchg
jecxz
push
inc
test
mov
call
push
insb
push
movsb
mov
fisubs
or
add
mov
scas
je
xor
or
or
hlt
push
repnz
test
inc
adc
mov
push
jp
in
mov
and
xorb
xor
cmc
dec
daa
pop
inc
and
je
adc
sub
adc
pop
mov
fidivs
sbb
jno
rol
jnp
xor
in
lods
dec
xor
outsl
lods
les
push
sbb
jge
mov
jbe
icebp
sub
jbe
scas
or
pushf
jge
xor
cld
dec
faddl
add
arpl
add
inc
lds
mov
inc
xor
arpl
mov
sub
mov
and
mov
jmp
mov
mov
out
movl
int
je
fwait
cmp
repz
jae
into
mov
fbld
fcomip
aas
stc
ret
out
push
fstl
sbb
add
mov
out
push
lret
test
pop
or
push
bsf
cmc
dec
jb
mov
es
fbld
mov
insl
jl
adc
sarl
out
cmp
sbb
fstl
popf
mov
sub
lahf
fnsave
inc
inc
aam
sarl
sub
hlt
into
loopne
dec
fidivrl
test
xchg
fdivrl
scas
arpl
xchg
fidivrl
repz
in
xor
fistl
adc
push
test
add
cmc
pusha
pop
adc
pop
loopne
xor
mov
shr
out
aad
cmpsb
je
push
or
dec
sti
mov
pop
pop
adc
pop
cmp
mov
cli
lahf
dec
movsl
push
inc
clc
mov
or
hlt
es
ret
adcl
hlt
lret
test
popf
pop
stos
mov
adc
lock
mov
int
lds
or
rol
lcall
sbb
mov
inc
loop
mov
cld
in
adc
mov
fists
testb
sbb
cmp
sbb
dec
adcl
sbb
aas
fwait
jl
ljmp
add
xchg
sbb
lods
leave
fwait
fadd
add
repnz
add
mov
je
and
or
mov
or
stos
lret
xchg
pop
xor
xchg
jns
stos
jle
mov
lea
adc
outsl
sbb
inc
dec
lds
sub
mov
cli
and
loope
adc
rcr
sub
xlat
je
out
mov
ljmp
or
aad
rcll
mov
mov
fisttpl
sbb
mov
xlat
and
cmp
pop
subl
fsubr
shl
les
notb
pop
clc
insl
mov
pop
sub
std
mov
mov
cmp
lods
mov
pusha
jbe
push
loop
data16
inc
mov
add
fcomi
pop
stos
or
loope
test
mov
mov
and
out
mov
cmp
push
je
pop
dec
and
add
jo
loop
rcr
cld
in
cmp
push
test
sarl
inc
imul
add
shlb
es
mov
sti
aam
dec
outsl
nop
dec
mov
xor
push
pusha
lods
sbb
stos
mov
inc
inc
outsl
jmp
call
es
mov
sub
mov
nop
mov
fstpl
or
rorl
add
sub
add
cmp
test
xchg
push
push
mov
sbb
pop
push
xor
pop
pop
jnp
leave
adc
and
roll
sbb
cmp
lahf
shll
in
shlb
mov
lea
fdivr
add
sahf
cltd
test
add
push
mov
daa
or
ljmp
aas
data16
jnp
jg
jno
dec
icebp
mov
mov
sub
aas
loope
dec
xchg
mov
iret
mov
dec
nop
mov
add
xchg
fiadds
outsb
test
pop
pop
mov
or
mov
jecxz
dec
sarb
mov
outsl
pusha
sub
fwait
test
mov
sub
push
add
pop
mov
sub
push
push
sbb
fistl
out
adc
das
ret
adc
in
and
test
mov
shlb
add
insb
mov
mov
rcrl
dec
arpl
inc
add
xlat
inc
lods
je
cmp
gs
jg
mov
xchg
ljmp
in
mov
int3
mov
lret
mov
addr16
jnp
sub
idivl
les
shlb
inc
lds
loopne
outsl
loop
xor
xchg
fwait
mov
add
inc
nop
dec
imul
push
popf
subb
cmp
in
mov
scas
dec
sarl
scas
out
imul
dec
dec
jp
repz
inc
addb
stc
mov
jno
mov
test
test
xor
xchg
push
or
lar
cmpsb
dec
sbb
sub
push
pop
aam
mov
pop
scas
test
add
shll
les
add
loopne
leave
jl
stos
mov
mov
xor
sub
xchg
push
int
pop
sub
fisttpll
sarl
cmpsb
pushf
test
add
push
ficomps
test
jno
fcmovnbe
sbb
add
push
aam
shll
aas
xchg
cmp
aas
addr16
roll
mov
mov
test
fidivs
xchg
lods
mov
rcr
add
test
pusha
call
xchg
aaa
or
pop
push
movsl
mov
push
shl
adc
and
fbld
aaa
jp
aas
mov
shrb
cmp
lahf
shl
scas
jne
push
cli
test
nop
push
mov
popf
xor
cmp
adc
mov
movntq
inc
pop
movsl
inc
xor
rcrb
scas
jns
and
sbb
jg
ss
inc
mov
sbb
sbb
out
daa
in
loop
das
pop
movsb
jo
test
jg
pop
scas
jne
ss
xchg
adc
ds
cmpsl
xchg
or
aas
je
lret
dec
ret
mov
xor
cmp
lds
or
or
lock
sbb
inc
ss
xor
repz
jno
xorb
testb
xor
sbb
inc
fcmove
mov
movsl
or
pop
cmp
rol
mov
xor
and
mov
data16
mov
sub
inc
add
mov
and
sub
xchg
mov
cli
lock
ljmp
jg
xor
push
loop
jbe
xchg
xorb
fstpt
xor
daa
mov
xchg
loop
repz
dec
scas
add
mov
test
out
pop
mov
jne
inc
mov
sub
outsb
icebp
push
mov
test
mov
fidivrl
cmp
es
neg
mov
pop
pop
jg
xchg
rcr
jp
adc
js
mov
dec
sub
pop
popf
and
dec
mov
xchg
andb
loope
mov
dec
and
jbe
notb
mov
mov
push
lret
fisubl
outsb
mov
pop
and
scas
stos
lcall
sbb
mov
leave
lods
in
jbe
data16
movsl
jo
lahf
inc
jecxz
div
mov
shll
xchg
pusha
xor
dec
dec
adc
repz
xchg
shlb
ja
add
mov
pop
stc
push
inc
mov
lods
lret
repz
imul
xchg
sub
xchg
pop
popf
jnp
in
mov
in
mov
or
add
add
mov
loope
xchg
and
mov
and
cwtl
out
repnz
add
jne
jg
pop
xor
das
pop
leave
pop
fisubrs
ret
adc
ror
testb
push
enter
mov
or
testl
cmpsb
sbb
adc
and
daa
jge
inc
cs
ficoml
mov
daa
int3
xchg
insb
ret
push
mov
cmp
loopne
or
adc
pusha
pop
cmpsb
sub
cmp
mov
jle
pop
cmp
push
and
cmpsb
and
xor
imul
dec
mov
fsubl
in
fidivl
pop
xchg
in
popf
into
jae
mov
movsb
or
int
daa
pop
fidivs
push
and
repnz
adc
and
cmpsl
adc
xchg
jle
nop
dec
adc
mov
test
loopne
dec
rclb
jg
mov
loopne
adc
inc
or
scas
jle
sahf
cmp
cmp
imul
mov
out
shlb
leave
rcrb
hlt
or
call
fsub
jnp
push
dec
cmp
jno
dec
call
jne
dec
xor
mov
shll
lret
fstl
pushf
incb
add
sbb
mov
jecxz
std
std
stc
xor
jl
das
jns
js
xchg
stc
hlt
faddl
dec
mov
pop
and
dec
inc
pop
mov
fldenv
pop
rcll
test
lds
mov
bound
fnstcw
mov
xor
mov
aad
gs
push
or
sub
in
push
and
imul
pop
add
or
enter
std
inc
mov
cwtl
arpl
xlat
data16
pop
dec
xchg
jle
sub
ds
inc
add
sub
xor
push
pop
dec
ds
es
mov
mov
mov
and
out
or
pop
mov
cmp
mov
push
into
icebp
je
test
popa
add
cmp
and
imul
mov
int
std
push
mov
mov
sti
lret
ja
inc
dec
dec
movsl
ds
sarl
add
add
test
cmp
dec
mov
add
shll
sub
jecxz
sub
shll
mov
add
sarl
inc
or
add
scas
xor
jo
std
jecxz
xchg
dec
ss
test
jns
dec
movsl
mov
mov
popf
sbb
fs
dec
lods
sbb
sbb
fcomi
mov
dec
add
and
pop
repz
sub
pop
jp
dec
lcall
xchg
movsb
and
pop
psrlq
stc
mov
dec
sbb
mov
cli
in
hlt
sub
iret
stc
jg
mov
enter
je
inc
clc
bound
inc
push
xchg
ja
push
enter
out
cli
dec
je
sub
push
mov
mov
stc
mov
leave
dec
cmpsl
imul
pop
xchg
pop
mov
cli
popa
lret
nop
cmpsb
or
fidivrl
fwait
dec
call
jecxz
xor
cmp
xchg
jl
in
mov
add
movsl
out
in
sbbb
aam
cmp
sub
rcr
test
cmp
call
and
outsb
ja
push
and
cmp
std
mov
fsubr
sbb
xor
test
insl
aaa
jle
mov
add
popa
or
cmp
into
dec
mov
setge
das
push
out
cmpsb
xor
loope
add
icebp
jno
sub
cmp
pop
lea
pop
inc
pop
sbb
test
push
fidivrs
ss
repnz
arpl
mov
mov
cmp
jb
jge
lds
cltd
mov
cmp
icebp
icebp
and
jecxz
pop
loopne
ds
insl
pop
mov
in
cmp
fsubr
insl
loopne
imul
mov
sub
or
cs
sbb
jne
adc
roll
in
std
cwtl
jae
fmull
mov
sub
loope
out
sbb
mov
pop
fistps
and
nop
inc
ja
cmp
imul
cmpl
test
push
dec
xor
add
sub
loope
repnz
out
loop
add
mov
clc
cmp
xor
push
push
pop
adc
leave
shrl
and
jmp
fwait
cltd
xor
test
xor
fildll
inc
in
jg
notb
popfw
xor
aad
cmp
adc
jl
mov
pop
and
jl
pop
outsl
jmp
ja
mov
sub
push
pop
jge
test
outsl
jmp
jo
inc
pop
mov
je
lods
xchg
test
dec
push
sub
iret
icebp
call
shll
std
cmp
lock
cmc
cld
rorl
loopne
push
dec
mov
mov
push
dec
sbb
mov
mov
fiaddl
xchg
lods
lods
cs
jo
push
add
out
jb
les
jp
mov
push
mov
mov
decl
mov
dec
xor
leave
jp
xor
push
or
std
mov
pop
into
fs
test
lods
mov
mov
out
les
push
cmp
mov
mov
aaa
mov
or
or
jge
xor
and
xchg
inc
mov
sbb
mov
xchg
add
mov
testl
mov
xor
or
jae
mov
pop
roll
sbb
bound
and
push
outsl
inc
xchg
insl
imul
sub
xchg
sub
fmul
inc
popf
outsb
or
in
ret
add
dec
cmp
jo
test
jns
mov
sbb
xor
and
fildl
mov
push
jmp
ret
in
jge
adc
add
and
int
sbb
daa
cmpsb
pop
jp
jnp
cmp
cmpsl
sbb
mov
inc
enter
adc
ja
out
je
mov
add
fwait
xchg
mov
jns
fs
pop
mov
push
lcall
out
dec
push
lods
lahf
lock
in
popf
adc
xchg
cmp
inc
imul
imul
out
add
js
cmpsl
mov
push
cmp
call
int3
outsl
popa
mov
stos
mov
arpl
mov
xchg
sub
dec
lods
mov
cltd
add
in
dec
jecxz
in
push
xchg
mov
mov
jge
mov
out
insl
inc
pop
jno
lea
stos
push
lret
mov
pusha
ja
cmovnp
xor
lods
sub
dec
lods
push
mov
sbb
rorl
mov
adc
or
fstpt
fs
pop
mov
cmp
jg
loopne
jmp
in
neg
clc
xor
mov
jmp
fidivrl
pushl
mov
jp
out
jecxz
mov
jle
jae
mov
xchg
mov
xchg
cmp
mov
jb
inc
jecxz
sub
stc
adc
mov
xchg
adc
test
jno
std
fmull
mov
iret
ret
inc
dec
idivl
popl
jns
cli
xchg
dec
jl
pop
xchg
inc
or
loope
in
int
jnp
sub
dec
push
and
aas
pop
clc
add
popa
sbb
cmp
out
enter
push
out
add
push
fucom
fldenv
adc
outsl
popfw
aas
jmp
daa
fmuls
int
std
pop
outsl
insb
out
arpl
mov
or
lods
aas
add
mov
enter
and
int3
hlt
inc
mov
stos
je
and
dec
pop
loop
xchg
je
jnp
dec
dec
shll
insb
rol
jnp
fldenv
fisttps
push
leave
psubusw
push
iret
mov
push
mov
mov
testb
shrb
xchg
mov
cmp
rorl
sbb
adc
dec
jg
shll
push
push
hlt
test
jne
mov
popa
fs
and
jbe
sahf
pop
bound
movsl
popa
sub
out
ret
fmuls
ljmp
int
cwtl
imul
lds
cli
into
lahf
cltd
in
push
cmpsb
aas
jecxz
pusha
dec
dec
pop
sub
sahf
fs
xchg
add
cld
mov
inc
movsb
pop
pop
repz
call
shrb
or
leave
push
data16
out
jne
mov
data16
adcb
pop
pop
enter
add
add
shl
jp
lret
or
and
mov
int
xor
pop
notrack
scas
out
icebp
sub
call
mov
rorb
inc
mov
xor
aam
dec
cld
sub
stos
mov
sahf
pop
and
mov
pusha
cmpsb
into
arpl
outsb
mov
out
cmp
jnp
push
add
stos
add
in
dec
inc
mov
mov
mov
cmp
push
in
lods
fldl
repnz
xchg
or
ljmp
adc
and
add
xor
inc
mov
jle
and
pusha
out
adc
sbb
rol
sub
sub
xchg
mov
cmp
cmpsb
into
notl
in
dec
mov
and
pop
cvtps2pi
add
pop
je
in
cmp
in
dec
stos
cmpsl
xchg
mov
repnz
and
sti
push
or
xchg
in
sbb
sub
xchg
mov
bound
inc
xor
scas
std
sub
fisttpll
out
out
inc
pop
cld
rcl
mov
out
insl
mov
mov
in
pop
pop
mov
sbb
mov
test
ds
pop
jge
mov
mull
mov
lahf
adc
pusha
popa
ret
cmp
jmp
mov
imull
icebp
pop
imul
je
add
mov
add
add
pop
cld
or
je
xchg
jg
enter
add
repnz
jge
shl
push
insl
aaa
add
and
add
pushl
sbb
dec
pop
mov
xchg
mov
iret
mov
jnp
xchg
stc
or
std
adc
rcrb
mov
dec
pushl
pushl
xchg
les
push
smsw
cs
cmp
loopne
pop
dec
dec
mov
call
ret
es
xchg
jge
cmp
nop
mov
cmp
imul
in
adc
mov
add
bound
call
into
int
cltd
jecxz
sbb
not
push
pusha
lds
cmpsl
add
std
push
sahf
cmp
jp
in
mov
pop
add
fdivl
pop
and
imul
sub
sbb
imull
fcmovnbe
shlb
dec
add
cmc
sub
jns
xchg
fisubl
mov
fistps
pop
ficompl
or
stos
adc
mov
or
push
add
repnz
pusha
inc
mov
adc
shll
dec
rcll
shr
loop
pop
lret
cmpsl
xchg
lds
lret
push
mov
push
shr
cmpb
pop
rorb
push
imul
mov
or
xchg
test
popl
inc
pop
push
pop
dec
push
out
and
test
push
push
xchg
jg
out
jo
cltd
mov
dec
mov
loopne
xor
mov
test
mov
or
shrl
lock
addr16
clc
add
hlt
mov
out
jne
mov
cmpsl
dec
sbbb
lret
testb
shrb
xor
aaa
mov
repnz
jne
adc
push
rcrb
insl
jno
inc
addr16
dec
or
xchg
pop
inc
in
xor
mov
mov
push
mov
pop
test
test
jo
dec
and
cltd
imul
std
insb
mov
xor
cmp
cmc
dec
lea
fidivrl
vzeroupper
pop
std
mov
add
xor
or
push
mov
clc
pop
lret
pop
mov
and
sub
cmp
inc
push
mov
mov
orb
ror
dec
test
push
xorl
int
jl
mov
js
sub
test
sub
iret
dec
mov
int
xlat
out
out
jge
xchg
xor
dec
sbb
xchg
cmp
mov
dec
jmp
mov
or
jo
imul
xor
xor
sbb
aam
jno
mov
cmp
cmp
pop
or
push
dec
in
jbe
mov
idivl
fxch
cwtl
inc
or
int3
cs
clc
adc
mov
arpl
and
imul
pop
shll
outsl
xorb
or
xor
in
push
push
data16
sub
pop
adc
or
divl
push
mov
shlb
sbb
int
inc
push
and
push
jmp
daa
and
mov
std
mov
cmpsb
mov
mov
ficompl
add
sbb
insl
mov
inc
lods
jmp
add
outsb
repnz
lahf
xor
stc
stos
sarl
inc
push
pop
fistpll
jb
fisubrs
fldt
mov
fwait
cmc
add
int3
ljmp
push
inc
mov
out
sbb
xor
pusha
ror
push
mov
xchg
xchg
sti
mov
mov
das
jg
mov
dec
loope
add
in
mov
shlb
fdivrs
push
mov
ja
add
cltd
xor
and
push
mov
jge
es
popa
ss
test
lahf
scas
push
add
pushf
mov
int
pop
loopne
es
push
je
repnz
push
mov
sub
cmpsb
jno
arpl
jmp
dec
mov
test
mov
test
ss
sbb
mov
adc
sti
pushf
xlat
push
icebp
cmp
dec
aaa
insl
out
mov
add
xchg
pop
sbb
or
outsb
cmpsl
shlb
push
data16
cltd
outsb
daa
ja
or
adc
clc
fwait
or
jae
or
adcb
ret
jbe
scas
scas
repz
push
and
bound
mov
div
cmp
pop
adc
mov
scas
sbb
push
cmp
or
sarl
inc
mov
arpl
rsm
dec
and
pop
imul
aad
pushf
movsl
mov
out
lret
push
ret
fdivrs
cmp
jno
testb
dec
sbb
lret
xchg
test
inc
xor
jb
xor
dec
xor
les
pop
xor
movsb
inc
iret
into
psrlw
xlat
or
push
sbb
test
outsb
adc
int3
sub
xlat
lret
jb
ds
sbb
adc
out
jg
pop
int3
fmulp
xor
push
add
pusha
jle
cmc
dec
shlb
inc
xor
call
out
rol
clc
mov
inc
loopne
popf
push
jne
mov
nop
jbe
jl
es
mov
fisubl
das
mov
mov
imul
mov
pop
lret
mov
mov
mov
xchg
xchg
push
sarl
or
fdivr
add
outsb
ljmp
mov
jno
es
sbb
jecxz
mov
mov
ficompl
rol
cmp
in
mov
sub
out
cmp
jge
push
sub
mov
xchg
sbb
cli
mov
sar
test
cmp
mov
pop
push
pusha
or
imul
inc
repnz
or
mov
cmpsl
pop
les
gs
sub
add
push
jle
sbb
adc
fs
dec
jns
xor
into
out
pop
mov
xor
clc
mov
jecxz
out
add
add
mov
in
xchg
dec
inc
jp
mov
enter
jmp
dec
mov
fadd
out
insl
std
repnz
or
fmuls
lcall
add
call
call
cmpsl
mov
testl
xor
mov
loop
dec
inc
jns
cmpsl
mov
mov
sub
inc
inc
push
out
pop
add
fwait
pusha
iret
xchg
in
dec
mov
cs
inc
lret
add
and
pop
rcrb
rcl
and
mov
inc
inc
stc
add
int
mov
add
outsb
int3
inc
outsl
add
xor
jmp
dec
pushf
add
mov
sbb
pop
int3
roll
xchg
jne
dec
sbb
mov
inc
xchg
pop
mov
negb
push
xchg
in
pop
outsl
push
in
mov
and
ss
movsl
rorl
pop
add
and
fcomp
add
into
mov
mov
jge
adc
push
fwait
jo
add
aas
sbb
push
jmp
ja
sub
push
fcoml
xor
cmp
loope
out
dec
in
test
movsl
xchg
jns
xor
test
insb
push
jno
aaa
mov
xor
dec
lea
inc
fwait
shr
sub
in
pop
push
mov
bound
sub
mov
jnp
out
and
repz
dec
ja
mov
loope
insb
or
inc
inc
adc
jmp
insb
add
sbb
adc
push
std
adc
mov
or
sahf
mov
pushf
js
dec
xlat
sub
or
sarl
jo
xchg
jae
adc
mov
fwait
roll
jmp
je
es
outsb
sub
jb
push
loopne
andl
xor
add
lods
orl
or
inc
hlt
cmp
fidivrl
iret
lahf
ljmp
ss
and
cmpb
scas
jl
inc
jecxz
mov
sub
outsb
push
in
add
aas
xorb
jp
insl
clc
loopne
cli
xchg
xor
js
rcll
jnp
sub
mov
mov
je
pop
mov
fists
mov
push
movsl
jmp
or
lods
and
push
jb
test
sbb
push
lods
inc
outsb
and
cld
inc
lea
into
iret
push
cmp
shl
incb
jns
popf
adc
std
push
or
cmp
jmp
outsb
subl
sbbl
mov
push
jle
push
test
mov
dec
push
dec
sbb
sbb
ret
divb
or
mov
adc
and
and
sub
cmp
xchg
push
push
cmp
inc
je
bound
mov
mov
mov
ret
cmp
shll
sub
cmp
scas
enter
lret
es
fldl
xchg
adc
stos
cs
nop
mov
fldt
ja
test
dec
mov
or
fdivs
add
popf
or
pop
mov
jmp
push
dec
nop
push
movsb
xor
sub
push
sub
mov
lahf
xchg
loop
cs
fcmovu
shr
imul
movsl
xchg
or
stos
mov
push
push
roll
negb
add
sbb
xchg
je
mov
xchg
dec
mov
dec
push
outsl
in
push
pop
mov
push
jle
lods
cmc
xchg
mov
xlat
jmp
and
push
sbb
adc
loope
jecxz
mov
lds
imul
fisttpll
mov
xchg
inc
push
cli
sub
adc
sbb
jo
dec
pop
aaa
aas
pop
push
xchg
fstpt
rorb
mov
lcall
movsb
fldt
jne
int
pop
nop
add
dec
pop
mov
mov
add
imul
seta
jle
rclb
jle
cltd
push
xlat
push
iret
int
imul
sub
mov
mul
in
add
sti
inc
jmp
dec
mov
repz
in
cs
repnz
cmp
and
das
inc
mov
xchg
rcl
adc
in
insb
or
fs
imull
subb
pop
in
pop
add
pop
cmovae
xor
fadds
leave
movsb
inc
sub
mov
xor
imul
adc
push
scas
push
jnp
jns
pusha
mov
inc
push
push
pop
xchg
imul
sub
push
sub
das
test
or
jmp
idivb
popa
jae
idivb
adc
jge
dec
jge
in
or
bound
aas
das
jno
movsb
jmp
sbb
adc
aas
gs
int3
mov
or
shl
xor
outsb
cli
mov
push
roll
mov
mov
or
pushf
xor
in
fs
adc
sub
mov
pop
pop
sbb
mov
mov
test
loope
add
mov
in
pop
je
aas
aaa
bound
fidivrs
daa
movsb
push
pushf
mov
sub
outsb
movsl
cmp
xchg
cmp
cmc
pop
push
sarl
adc
nop
in
and
add
mov
loope
xchg
out
inc
cmpsb
stc
mov
icebp
mov
push
xor
sahf
mov
inc
add
lahf
mov
mov
pop
enter
ljmp
or
xchg
xlat
add
test
mov
ss
cwtl
arpl
daa
call
or
xor
dec
jge
sbb
insl
pop
lahf
fsubl
insb
cmpsl
shll
jo
sbb
sbb
leave
sbb
loopne
push
jnp
jg
dec
mov
les
rcll
imull
mov
cli
hlt
xchg
lock
adc
sahf
pusha
dec
cmpsl
hlt
mov
test
lahf
pop
or
mov
lret
inc
ljmp
jg
mov
dec
test
imul
repz
push
or
pushf
arpl
into
filds
add
int3
fs
push
fcompl
jbe
les
stc
ret
das
test
mov
sub
inc
adc
mov
shr
xchg
pop
push
mov
inc
push
push
jecxz
pop
ds
ss
ret
scas
xor
insb
out
jns
dec
cmpsb
mov
xlat
and
mov
in
and
loop
push
mov
movl
mov
fwait
mov
pop
xlat
mov
mov
jge
or
pop
jne
repnz
dec
cli
adc
jg
lods
roll
xchg
jne
cli
popf
sub
jno
aam
mov
xchg
jae
or
push
jmp
lret
xorl
bnd
add
jg
sub
push
sbb
xlat
mov
shl
nop
inc
jnp
pop
mov
cmp
rcl
arpl
mov
pop
jecxz
mov
outsb
lahf
sbb
inc
xchg
aas
sub
add
mov
dec
movsl
rcrb
sbb
fwait
xchg
aad
shlb
jae
fists
shrb
rolb
out
es
ja
jg
add
rcrl
dec
lcall
ret
jp
pop
repnz
sub
mov
daa
xchg
pop
xchg
stos
hlt
mov
sub
sbb
xchg
pop
xchg
pushf
pop
push
xchg
mov
xchg
jmp
inc
fstps
roll
pop
mov
iret
fistps
cs
jo
ja
xlat
dec
or
jno
pusha
test
sbbb
lahf
xchg
mov
in
mov
test
xchg
mov
test
push
sub
and
push
ja
lahf
shrb
mov
sbb
insl
jmp
and
cwtl
or
pop
sti
cld
outsb
xor
mov
xor
mov
sub
lds
adc
sbbb
daa
add
in
mov
cmp
movsb
mov
mov
std
fisubl
add
fldenv
scas
lret
push
xchg
cld
or
ds
fiaddl
add
adc
sbb
jg
rep
enter
xor
int3
jne
and
adc
ljmp
dec
enter
jle
pop
cmpsb
cli
jmp
and
test
icebp
aad
cmp
cld
cmp
repz
mov
cmp
mov
das
jg
lahf
push
inc
stos
mov
push
xchg
or
xor
xor
add
xlat
and
pop
mov
xchg
mov
jb
stos
shlb
outsb
mov
sahf
int3
subb
rorb
lret
xlat
and
inc
aam
add
insb
cltd
pop
test
xchg
xchg
icebp
cwtl
cmp
xlat
push
lret
cmp
aas
fsubrs
jecxz
cmp
iret
out
push
xor
dec
adc
mov
xchg
pop
fdivs
sub
ret
sahf
arpl
jo
out
fcoms
sbb
scas
or
nop
push
popf
jne
and
push
sub
mov
pushf
xor
jo
adc
push
sub
add
pop
ja
jns
push
jg
inc
stos
adc
xor
pop
pop
test
and
xor
inc
out
pushl
xchg
dec
jbe
pop
pop
or
and
mov
into
dec
or
xor
in
mov
imul
dec
les
and
push
imul
mov
ficompl
mull
mov
mov
test
dec
sbb
into
cltd
repz
and
xchg
movsb
adc
test
jns
xor
pop
sbb
jae
movsl
pushf
adc
dec
lret
mov
rcll
pcmpgtb
fidivrs
cmpsl
xchg
dec
sub
pusha
dec
push
mov
cmp
sub
add
fbstp
push
cmp
insl
sub
mov
jb
cmp
movsb
adc
jno
xor
aam
push
iret
mov
sbb
xchg
daa
or
and
repz
push
jbe
lahf
es
mov
dec
icebp
jmp
test
jb
fs
jnp
fnstcw
push
push
test
cmp
mov
into
addb
cld
xchg
push
nop
inc
xor
push
js
adc
push
sub
sbb
shl
loop
fsub
fs
sbb
or
popf
cmp
cmpsl
mov
fsubs
mov
add
dec
stc
aaa
fnstsw
xor
rorb
mov
cmc
mov
pop
cmc
xchg
aas
sbb
cmp
cli
out
rcrl
fbld
loopne
push
leave
cmp
pmulhw
out
inc
cltd
xchg
lret
jbe
lods
pop
fcoml
sarl
xor
roll
std
loope
imul
faddl
iret
jmp
push
jns
dec
lcall
in
bound
shlb
outsb
bound
popf
loop
mov
mov
lret
push
cmp
pop
inc
fs
dec
and
mov
push
lahf
dec
xchg
pop
insb
sub
adc
fdivrl
mov
rolb
or
out
xchg
imul
cmp
fldl
sbb
loopne
mov
or
testb
dec
or
xchg
data16
outsl
xchg
js
rorb
mov
dec
cltd
fpatan
roll
lret
mov
xlat
sbb
subb
mov
cld
cmp
dec
sub
xor
frstor
jle
cmp
jmp
xchg
imul
in
pushl
fisttps
or
lret
xor
fcom
xchg
rcrl
js
pop
aam
jns
xor
push
lods
mov
cld
xor
and
sub
orb
sub
or
cmp
cld
nop
and
into
xchg
movsb
jns
xlat
jo
mov
fwait
cmp
outsl
sbb
mov
push
ret
stos
add
fsubrl
lret
into
pop
mov
add
fwait
mov
or
or
xor
pop
movsb
or
mov
dec
mov
loope
cltd
xor
int3
cmp
mov
push
int3
outsb
out
jg,pt
pop
mov
jno
data16
hlt
sarb
add
adc
push
jae
insl
loop
cmp
lcall
push
fwait
pop
inc
jecxz
les
fninit
imul
adc
mov
xlat
cs
add
mov
aam
add
bound
arpl
lcall
jnp
rcl
add
push
push
push
fs
int
setg
loop
pop
fsts
xchg
pop
push
jbe
scas
mov
xchg
mov
lret
mov
fwait
cwtl
fcmovnbe
push
hlt
popf
cmpl
lret
mov
pop
aas
lret
jmp
cmp
xor
gs
xchg
xchg
pop
sbb
jo
push
mov
out
cwtl
pusha
test
lock
aas
inc
sub
adc
mov
add
push
mov
lock
outsb
adc
imul
pop
inc
leave
aaa
adc
out
mov
add
bound
push
push
and
cwtl
push
sti
cmp
cmp
aad
push
ljmp
push
push
iret
xor
in
dec
jp
cmp
lock
dec
movsl
pmaxsw
jo
sbb
sbb
pop
jb
xchg
xor
jmp
inc
jmp
fcmovb
pusha
lret
rorl
jge
lahf
in
leave
mov
adcb
cmp
mov
sub
mov
cmp
call
mov
iret
in
jecxz
je
jns
lds
jns
pop
adc
rcl
xchg
pop
sub
add
outsl
inc
cmp
stos
mov
ror
aad
sahf
jnp
xor
mov
jne
aam
leave
loop
fmulp
arpl
lahf
and
inc
enter
dec
xor
sti
mov
pop
test
push
insb
mov
das
cmp
fsubrl
fsub
mov
pop
push
std
mov
jns
jo
cmp
loopne
and
call
xor
out
lret
add
dec
pop
pushf
sti
popf
fstpl
mov
fbld
sbb
and
insl
cmp
xor
jl
and
test
xor
outsb
push
or
dec
push
sub
dec
adc
sbb
ljmp
mov
icebp
into
push
xchg
or
add
xchg
ljmp
xor
adc
popf
dec
out
mov
mov
pushf
mov
int
jns
push
mov
push
stc
imul
mov
scas
push
mov
push
adc
outsl
sti
jno
sbb
or
and
test
fdivs
cwtl
mov
jne
sub
or
mulb
and
test
and
jle
outsl
aaa
sub
test
pop
pop
out
ja
sti
sbb
xchg
lahf
movsb
call
bound
adc
mov
data16
shlb
cli
adc
jp
xchg
shrl
cmpsl
push
xchg
aaa
out
dec
cmpl
sub
test
mov
aas
or
mov
test
pushf
fsubrl
lret
adc
sub
mov
jno
dec
sbb
es
inc
pop
add
inc
cld
repz
enter
cmp
xchg
mov
cli
pop
sbb
sbb
pop
cmp
cmp
loop
cmp
cmp
xchg
push
cmp
aam
inc
and
imul
push
setb
mov
lahf
push
dec
test
pushf
add
mov
or
shrb
jge
into
pop
pop
and
or
push
cwtl
lods
stc
dec
inc
pop
in
add
jae
pusha
sub
popa
jno
sbb
and
or
sub
mov
call
adc
push
sub
mov
jmp
push
sti
movsl
sti
dec
jp
jmp
cmpb
loopne
jns
enter
jecxz
xlat
mov
add
jp
mov
testb
ljmp
out
inc
or
push
dec
push
out
scas
xchg
packsswb
mov
leave
jmp
orl
fs
mov
in
jb
test
jne
and
loop
jp
or
pop
test
xor
xchg
inc
fidivrl
jo
push
std
cmp
hlt
rclb
out
int
pop
inc
push
sbb
gs
test
in
sahf
xor
jae
xor
or
lahf
push
inc
ja
nop
mov
fadds
jne
daa
testl
lods
arpl
repz
mov
in
mul
mov
xlat
fwait
clc
repz
shll
sbb
rcll
mov
pop
scas
jns
adc
scas
pop
mov
inc
cs
scas
add
and
std
jns
inc
lahf
xchg
push
clc
mov
xor
js
sti
subb
andl
shl
sub
sub
lahf
xor
sahf
shrl
test
roll
xchg
addr16
mov
clc
adc
movsb
push
andb
adc
subb
nop
shr
mov
and
inc
ficoms
cmp
es
mov
ret
cld
mov
lret
orb
sbb
inc
xor
sahf
jmp
bound
dec
hlt
ret
mov
sarb
inc
subl
push
mov
outsb
cs
xchg
es
inc
aad
add
hlt
sub
cwtl
cmp
push
cmp
popa
dec
push
xchg
bound
mov
fisubl
fstps
and
leave
cmp
inc
xor
pop
in
inc
out
loope
test
data16
cmp
push
mov
mov
ds
mov
add
mov
sub
lahf
fs
mov
movsb
mov
lods
mov
fprem
add
mov
inc
pop
xor
movsl
xor
test
pushf
ds
xchg
leave
inc
push
pop
xchg
sub
js
mov
sub
push
push
dec
jecxz
addr16
outsb
jnp
movsb
xor
out
push
subl
push
ds
out
cltd
aas
mov
popa
mov
adc
ficoml
ss
fiadds
imul
sub
adc
sar
xchg
dec
sub
popf
clc
nop
push
or
jmp
andl
jge
sub
mov
or
or
ss
adc
pop
and
cmpsb
xchg
fmull
or
sbb
out
imul
sub
adcb
cwtl
push
jne
push
ss
repz
in
push
imul
inc
mov
out
xchg
xor
hlt
pop
jo
jge
mov
fwait
aas
push
test
push
xor
outsl
subb
sub
or
daa
dec
shr
cmp
gs
loop
push
xchg
add
pop
cmp
mov
pop
jg
test
mov
into
lods
mov
cwtl
lcall
sbb
fidivl
add
std
push
shr
adc
jne
pop
leave
mov
das
add
push
pop
add
mov
xchg
je
adc
jl
jmp
mov
outsb
mov
sbb
les
adc
repnz
hlt
fnstsw
test
mov
ss
fcmovne
mov
sub
cmp
jecxz
xchg
in
pop
mov
mov
and
jne
pop
dec
push
xor
lahf
sbb
ljmp
dec
dec
sbb
stos
mov
loope
cwtl
dec
jecxz
xchg
or
ds
test
xchg
loop
xlat
aam
fcompl
mov
cmp
aad
pop
in
add
out
push
test
cwtl
inc
stos
pop
push
xchg
cs
dec
cmpsb
cmp
add
add
push
or
mov
sbb
dec
pusha
and
xor
and
cwtl
lret
adc
cs
inc
xorb
dec
dec
dec
arpl
adc
sahf
fldz
or
fcmovu
adc
add
test
fwait
daa
add
mov
insb
mov
sarl
mov
imul
fcos
fadd
cmpb
rolb
andl
loope
dec
xchg
jnp
pop
push
sbb
push
or
into
ljmp
jmp
out
adc
mov
and
cli
in
xchg
lock
or
mov
outsb
ja
mov
ret
or
rcr
ret
ljmp
enter
insb
shl
in
inc
mov
mov
mov
fcmovnbe
notb
xchg
xchg
clc
loopne
out
popf
imulb
or
cli
mov
leave
stos
jo
cmpb
jmp
test
leave
or
nop
into
adc
mov
movsb
lret
pusha
push
mov
das
es
lods
xchg
cli
ja
dec
xor
sub
sbb
add
loope
aaa
xchg
push
dec
pop
sbb
test
mov
pop
mov
fs
in
or
inc
add
imul
je
mov
sub
jg
mov
test
adc
jns
sub
xchg
stc
cld
pop
dec
mov
adc
add
aad
fcoml
call
sub
xor
mov
add
jge
cmp
mov
xor
xchg
cmp
ret
add
nop
mov
lods
test
inc
fs
icebp
dec
xchg
pop
xchg
pcmpeqw
sub
rclb
xchg
cs
sbb
mov
cld
add
mov
notl
adcb
pusha
sbb
daa
jbe
lcall
fwait
roll
xor
sub
aas
loop
fs
filds
movsb
or
negb
mov
test
inc
dec
mov
gs
xor
pop
sti
push
inc
cld
cmpsl
mov
aad
fwait
or
or
jmp
nop
sbb
mov
in
andl
add
add
or
fsubl
imul
outsl
sarl
adc
jbe
mov
lea
jge
call
int
hlt
jecxz
push
aad
pop
jp
and
nop
inc
dec
arpl
fs
and
inc
xlat
xchg
lcall
outsl
sbb
dec
add
enter
in
adc
int
lods
inc
jbe
jg
mov
les
inc
push
jge
cli
xchg
inc
ds
nop
pop
push
sub
data16
mov
mov
or
cmpsl
and
bound
outsl
popa
loopne
dec
jns
into
mov
incl
gs
dec
lret
sbb
dec
push
jns
in
es
aam
or
mov
cld
adc
jnp
fdivr
shrb
insl
jb
pushf
test
out
or
loope
cmp
add
or
fldt
pushf
shrb
mov
scas
xor
lods
push
mov
in
xchg
dec
aad
clc
dec
pop
push
into
add
cmp
and
movsb
lahf
into
arpl
sbb
scas
and
jns
xchg
dec
or
sub
push
aam
test
jl
out
cmc
xchg
or
jns
xchg
mov
pusha
jae
inc
adc
mov
loope
or
push
xchg
dec
test
repz
test
add
je
jo
xorb
es
pushf
add
push
scas
loope
jmp
mov
xchg
pop
call
mov
cli
fdivp
xor
icebp
pushf
pop
adc
ss
pop
int
icebp
mov
lods
mov
cld
adc
mov
xlat
adc
add
hlt
mov
mov
in
push
loope
or
insl
pop
mov
inc
sbb
repnz
ss
repnz
mov
movsb
test
pop
push
aas
mov
and
fistl
add
pop
out
inc
mov
leave
outsl
sub
in
xchg
scas
adc
push
cwtl
sub
xchg
std
pop
popf
inc
hlt
push
adc
pop
addr16
outsl
mov
inc
test
je
mov
jmp
xor
rcrb
int
pop
mov
or
jb
ja
adc
scas
mov
in
xchg
jne
arpl
fcmovnu
and
xchg
jmp
gs
pop
les
or
addb
push
mov
mov
dec
pop
out
pop
daa
push
inc
lret
xchg
test
into
loop
fdivrl
fisttpll
jg
lods
cmp
pop
outsl
mov
fnstenv
or
and
or
pusha
sar
jno
inc
jle
ret
add
lahf
addr16
movb
xchg
sbb
std
out
enter
pusha
push
xchg
out
inc
out
add
pop
mov
and
push
call
and
mov
clc
sbb
sarl
incl
out
jmp
movsl
mov
mov
cmp
notb
sub
add
jb
mov
popa
cwtl
push
repz
pop
arpl
mov
jno
ljmp
inc
mov
imul
mov
outsl
mov
mov
scas
into
sub
jmp
add
dec
pop
stos
cmp
inc
ja
ja
out
mov
mov
ret
fcomps
testl
sbb
fsts
in
aaa
lods
sub
fdivrs
sarb
cld
sbb
dec
push
insb
outsl
adc
jae
jb
mov
or
rorl
jl
shl
sub
jo
jg
xchg
push
pop
jbe
mov
mov
xchg
loope
adc
repz
andl
jo
stc
jp
jle
jl
inc
mov
inc
inc
push
enter
in
add
out
xchg
aas
push
jmp
jp
call
mov
cmp
dec
inc
mov
or
mov
lret
divl
dec
add
or
sub
cs
mov
mov
js
xchg
push
sbb
out
mov
rol
loop
popa
and
mov
mov
lret
push
hlt
call
add
repz
bound
mov
aam
xchg
into
fisubs
adc
scas
and
sub
dec
and
adc
add
mov
cmp
lcall
lods
aam
jo
fisubl
nop
hlt
daa
adc
adc
pop
cmp
clc
shll
dec
add
test
mov
push
out
push
mov
orb
push
mov
adc
lock
push
in
std
mov
inc
das
sbb
lods
idivl
dec
and
and
mov
lock
fsubr
jns
sbb
sbb
loope
ss
cmp
test
nop
arpl
pop
jns
and
out
dec
dec
stos
es
cld
ljmp
cmp
cmpb
scas
push
push
sub
es
sahf
xchg
sahf
inc
push
aas
out
in
in
add
sbb
sub
inc
sbb
xor
sbb
rcll
jne
lods
sbb
add
jmp
out
mov
fsubp
jl
mov
mov
popf
sbb
mov
jne
daa
rorl
sub
rorb
cmp
mov
fists
sti
jle
sub
xlat
jg
int3
test
rclb
insb
out
dec
test
pusha
xor
fsubrs
xchg
add
and
adc
test
pusha
mov
mov
push
scas
fdivr
lods
or
jns
test
ss
cmc
bound
fsubr
scas
loop
add
inc
popa
jo
jnp
hlt
pop
add
imul
shll
les
mov
call
adc
divb
push
xchg
jle
mov
loop
sub
mov
jp
test
mov
adcl
dec
sub
ret
clc
ficomps
xchg
mov
and
add
jno
mov
jp
out
and
add
push
mov
loop
pop
push
inc
addr16
or
or
jnp
cs
inc
mov
scas
pop
mov
mov
pop
adc
mov
in
pop
pop
mov
or
jp
mov
cmpsl
ljmp
outsb
push
and
add
mov
scas
and
push
dec
and
scas
push
test
push
xchg
jp
ljmp
sarb
test
popa
in
dec
mov
push
mov
push
mov
mov
xchg
repz
in
xchg
stc
sarb
xor
sub
xchg
push
ret
xor
xchg
stos
dec
push
outsl
cwtd
dec
push
push
push
pop
inc
inc
jae
sub
les
or
lret
mov
inc
cld
and
addr16
fwait
pop
push
or
add
ret
or
or
add
lahf
je
mov
pop
insl
lods
daa
mov
lods
push
imul
xor
jge
jo
push
test
xchg
jl
test
out
sbbb
mov
xor
fcoml
xchg
repnz
insb
data16
int
push
push
cmp
das
in
or
loopne
lods
sub
repz
cmp
adc
mov
ds
jle
xchg
jbe
cmp
hlt
mov
test
sbb
inc
xchg
cmp
and
wrmsr
ds
es
daa
mov
adc
mov
add
fstp
sub
mov
xchg
rcl
mov
hlt
and
subb
xor
dec
xor
bndldx
pusha
daa
inc
mov
jmp
push
lock
aas
dec
mov
push
cmp
pop
sbb
sar
jns
pop
popa
popa
hlt
icebp
mov
in
scas
mov
jne
sbb
fsubrl
std
push
loopne
mov
push
jmp
adc
in
or
popa
or
add
lea
out
mov
jmp
dec
or
or
push
or
adc
adc
mov
cs
cmp
fisubs
es
add
pop
movsb
aaa
mov
lret
xchg
fimuls
popl
xchg
cwtl
xchg
add
and
jns
inc
push
addb
mov
xor
pusha
inc
lods
xchg
rorl
dec
pop
ret
rclb
sbb
data16
ds
jg
mov
and
sub
out
lret
testl
adc
jle
mov
adc
jne
adc
in
jp
scas
sub
mov
and
fisttpl
mull
and
test
and
outsl
mov
data16
cli
xchg
imul
push
jnp
sbb
ljmp
push
jns
rcl
lock
dec
dec
clc
sub
je
xchg
outsl
jae
movsl
dec
aam
aas
pop
hlt
fldenv
cmpsb
inc
clc
aad
inc
out
lahf
push
mov
sub
movsb
push
aad
cmp
adc
pop
cld
pop
xor
lea
shrb
jg
and
inc
sti
rolb
in
or
sbb
mov
out
inc
pop
movsb
dec
adc
int3
or
into
int
add
leave
je
cmpsb
fmull
cmpsb
out
lods
mov
and
add
jo
cmp
ret
movsb
es
arpl
sub
xchg
ljmp
mov
jbe
sbb
repz
aad
daa
out
mov
pushf
mov
addb
xor
mov
addr16
mov
pop
mov
jle
adc
push
xor
jge
pop
jbe
fldenv
mov
scas
stos
sub
gs
sarb
push
enter
movsl
scas
testl
cwtl
pop
pop
ds
int
sarb
stc
shll
ljmp
xchg
in
jne
test
push
test
loop
or
jl
in
cwtl
imul
std
add
movsl
stc
mov
sbb
and
mov
call
stos
dec
push
aaa
outsb
imull
push
sti
or
stc
mov
nop
rclb
lcall
iret
stos
sbb
mov
loopne
sbb
outsb
ds
scas
mov
jge
or
es
pop
mov
ret
dec
rcrb
stc
popa
pop
sub
xchg
or
mov
je
dec
stos
sbb
cmp
cmp
jne
sbb
inc
or
mov
lret
data16
jl
lcall
scas
mov
mov
sub
ljmp
lds
push
stos
aaa
gs
iret
cmp
xchg
inc
adc
fdivrs
push
mov
sbb
stos
jo
repnz
lret
lret
mov
cmp
lcall
cmc
sbb
mov
jbe
sub
jmp
mov
add
push
jae
sub
ja
or
sbb
insb
cli
cltd
mov
push
hlt
xchg
aaa
rolb
mov
cld
cmp
pop
push
push
test
push
adc
push
fs
sti
jle
divb
sbb
lods
jge
imull
mov
dec
mov
sub
test
call
sub
shl
pop
sbb
int
in
shlb
cmpl
fisttps
mov
ljmp
jb
jl
or
mov
fstl
xchg
in
xchg
into
into
jge
ljmp
adc
ficomps
stc
inc
adc
push
out
xchg
mov
mov
adc
iret
jnp
add
rcl
pop
lret
aad
fimull
mov
arpl
dec
repz
sbb
adc
faddl
cmpsl
insl
sbb
sbbb
outsb
das
js
mov
ret
and
jns
test
ja
push
lods
inc
repz
lock
addr16
push
and
push
rolb
out
int3
fdivs
pop
jbe
out
and
adc
xor
lcall
aas
jp
or
in
pop
add
jle
mov
loop
gs
loop
cld
in
shr
mov
jmp
xchg
jb
clc
sti
sbb
mov
loope
xchg
sbb
inc
sub
or
faddl
jo
jb
mov
inc
xchg
mov
cmpsb
jecxz
fimuls
sarb
adc
lds
and
enter
pop
daa
add
movsb
sbb
stos
sbb
push
xchg
mov
add
sar
and
loope
repz
inc
mov
rolb
mov
mov
gs
jnp
mov
add
mov
mov
pop
aaa
add
mov
add
lahf
sti
loopne
lret
ret
add
cld
or
cld
mov
insb
cmpsl
data16
jbe
pop
mov
mov
adc
leave
push
push
inc
mov
sbb
or
pop
and
and
jo
jmp
insb
jg
imulb
pushw
fldenv
jmp
out
negl
adc
fwait
sbb
cmp
or
pop
rcll
ret
push
mov
push
shlb
mov
pop
hlt
nop
testb
aam
cltd
and
mov
jl
lahf
and
pop
jno
stos
and
out
subb
or
fwait
leave
test
jp
cmpsl
xchg
daa
push
dec
loopne
shll
xor
hlt
std
loopne
dec
ret
sahf
xlat
dec
push
leave
inc
mov
xor
pop
jmp
fcmovne
in
sbbb
xchg
pop
push
dec
push
or
mov
stos
xor
aaa
adc
push
mov
mov
hlt
pop
stos
fbstp
enter
pop
lods
daa
jae
sbb
and
lds
push
aam
inc
and
cli
jmp
ror
cmp
mov
adc
addr16
xor
and
push
mov
jb
popa
jae
and
mov
js
jnp
xor
into
sub
andl
pop
adc
rorl
xchg
sbb
mov
sbb
pop
and
and
ja
clc
icebp
lahf
shrl
out
cmpsb
iret
add
cmp
fcoml
bound
imul
lods
stos
das
les
pop
xor
inc
xor
add
jp
lret
testb
pop
in
jb
mov
xchg
sbb
add
cmp
or
push
daa
cmp
push
imul
shlb
adc
out
cmp
ficoml
and
orl
jns
movsl
ljmp
jg
xor
cld
push
ds
push
and
mov
or
fmuls
adc
xor
aad
and
dec
test
sahf
test
enter
loope
inc
jge
push
mov
jp
add
jp
lods
push
pop
faddl
lock
ljmp
and
int3
sahf
out
out
aas
xor
add
push
fldenv
mov
fimull
inc
adc
aas
mov
xchg
loopne
cmp
mov
dec
jb
into
mov
pop
xchg
inc
hlt
aam
mov
subb
jns
test
sub
inc
loopne
sub
addb
imul
pop
movsl
lret
stos
add
and
addr16
pop
pusha
jnp
pop
or
xor
fwait
jns
loopne
pusha
pop
fwait
sbb
jmp
push
sub
insb
push
inc
inc
mov
hlt
rcr
cmpsl
pop
push
inc
arpl
xorl
int
and
dec
mov
rorb
mov
or
sub
movsl
mov
cltd
mov
pop
push
pop
jb
inc
push
les
inc
jp
sbb
adc
inc
mov
sbb
clc
jle
mov
inc
push
lds
enter
loop
add
sub
dec
in
pop
mov
mov
push
adc
dec
cmpsl
in
into
andl
mov
sbb
btc
jb
push
push
sbb
scas
cld
mov
ror
imul
jecxz
js
xor
mov
and
xchg
cmpsl
jnp
lods
xchg
jmp
in
inc
jae
cmc
outsb
inc
iret
les
popl
add
pop
lock
or
jge
mov
inc
mov
dec
loopne
pop
xchg
dec
and
insl
mov
out
sub
aad
jno
cmp
inc
dec
dec
cwtl
or
cltd
add
xchg
push
imul
mov
ds
xchg
iret
cmp
ret
mov
xchg
sub
lcall
lock
inc
push
scas
pop
mov
js,pt
loop
cltd
sbb
or
cmc
stc
pop
into
mov
mov
mov
cmp
fucomip
cmp
or
cmp
inc
mov
lods
mov
add
test
jecxz
fwait
jne
mov
jmp
sub
dec
xchg
xchg
xor
mov
pop
mov
xor
xchg
sbb
cmc
ret
insb
rolb
adc
inc
push
jne
loope
decl
sbb
push
jmp
pop
cmpsb
test
dec
mov
and
jge
or
jno
dec
or
dec
jno
test
aaa
stc
in
cmp
or
xor
cmp
std
mov
popa
dec
pop
jns
pop
mov
hlt
sub
sbb
xchg
dec
imul
rcll
lahf
pop
aaa
into
sub
push
add
lds
out
cmp
dec
inc
sarb
out
adc
fidivs
scas
int3
xlat
fldt
adc
repnz
mov
std
ror
pop
mov
clc
xor
clc
ja
daa
push
xchg
dec
or
add
std
pop
or
testb
movl
dec
loopne
into
xor
int3
cwtl
lds
pop
or
jg
insl
loopne
fmulp
ret
adcb
pusha
add
xor
mov
orb
sub
mov
jge
cld
and
psadbw
dec
shrb
out
jecxz
les
lods
or
testl
cmp
in
mov
pop
mov
ficompl
xor
xchg
outsl
hlt
fisubrs
jmp
adc
push
push
dec
jmp
ret
or
scas
ret
icebp
loope
negl
je
mov
test
repz
scas
aad
inc
push
fistpl
cld
jge
fdivr
cmp
aad
notl
out
nop
adc
mov
fsubs
push
mov
mov
sbb
int
imul
pop
mov
movsl
leave
sub
or
lods
out
sub
xchg
nop
mov
jp
mov
mov
xchg
xchg
cmpsl
pop
je
push
lea
or
not
mov
hlt
mov
fld
cmpsb
xor
xor
cmp
in
andl
inc
mov
iret
mov
gs
xchg
pop
and
gs
and
jnp
add
jbe
jl
popf
inc
dec
imul
dec
mov
inc
cwtl
xchg
xchg
into
push
dec
dec
ja
sbbb
ficoms
mov
jmp
cltd
stos
lea
outsb
xchg
mov
jp
stos
sbb
xchg
pop
inc
fdiv
jne
cmpsb
jae
rcll
leave
adc
hlt
and
adc
cmp
mov
and
outsl
and
int3
mov
xchg
lods
sub
aaa
test
popf
push
pop
std
sbb
subb
hlt
sti
outsl
adc
xchg
and
sbb
inc
rcrl
testb
out
inc
mov
cmc
mov
push
or
mov
push
push
inc
inc
mov
bnd
pop
shr
inc
cmp
or
mov
ret
ret
shrl
mov
out
pusha
stos
sbb
mov
sbb
or
pop
xor
in
cmp
jns
mov
add
jecxz
mov
lds
fnstcw
inc
xor
es
loopne
imul
std
adc
mov
out
mov
cmp
sahf
fwait
and
sbb
shl
mov
fwait
icebp
sarb
mov
mov
add
dec
nop
dec
mov
mul
std
iret
stc
push
fdivrl
ficoml
inc
sub
loopne
add
in
jne
scas
mov
fbstp
jecxz
rdtsc
outsb
mov
ljmp
insl
jmp
and
add
or
or
pop
insb
sub
loopne
out
cmp
add
jl
dec
orb
cmp
inc
fnstsw
cli
cmp
lret
insl
test
sub
inc
div
mov
hlt
cld
iret
ds
inc
fwait
shrl
cmp
xor
push
dec
mov
les
mov
sahf
mov
sub
roll
stc
or
pop
xlat
test
loopne
lahf
push
mov
ret
inc
xchg
sub
arpl
movsb
out
add
incb
insb
rcr
xor
pop
mov
mov
stc
mov
pusha
mov
pop
pop
daa
xor
sub
pop
inc
push
in
adc
fidivl
lret
out
sahf
daa
popf
je
xchg
int3
mov
das
adc
cmp
shl
or
out
hlt
cmc
push
pop
and
pop
in
inc
push
pop
jle
in
add
mov
pop
decb
mov
pop
pop
inc
pop
mov
movsl
jge
cld
xchg
adc
out
or
push
jnp
pushf
cmp
mov
repnz
add
pop
popf
inc
jbe
imul
lgs
adc
repz
sahf
iret
fiadds
out
push
lea
test
push
imull
je
ficoms
mov
adc
stos
movsl
pop
sub
inc
mov
lahf
movsb
scas
mov
xor
aaa
push
mov
bound
jnp
movsl
cli
jae
sti
xchg
sbb
repnz
test
aad
int3
clc
rcll
shll
xor
lret
dec
adc
mov
repz
loop
loop
adc
mov
test
rolb
imul
sahf
aaa
cmp
mov
or
sti
or
lea
or
stos
xchg
xchg
push
jnp
lret
xchg
add
fs
sbb
insb
add
insl
jl
pop
outsb
push
adc
ja
jmp
sub
inc
xorl
mov
cmp
xlat
mov
push
out
push
add
xlat
icebp
pop
sbb
aaa
stos
pop
arpl
call
add
jle
mov
add
sbb
in
cmp
pop
dec
xor
and
mov
arpl
test
in
and
or
sub
leave
pop
loopne
xor
daa
inc
jp
sbb
sub
cli
test
pushf
xlat
fistpl
imul
cltd
dec
inc
test
jb
test
call
hlt
inc
fs
test
sub
cli
adc
pushf
fistpl
xchg
pop
xchg
jp
in
in
xchg
inc
xor
aam
add
nop
aam
jg
roll
out
int
xchg
ret
jne
fnstenv
rcll
popf
arpl
in
add
std
adc
sbb
push
jecxz
repz
add
dec
pop
out
jmp
push
orl
into
cmc
mov
ja
push
sub
enter
sbb
cmp
daa
loopne
decl
je
mov
dec
push
add
lahf
mov
orl
mov
ret
stos
pop
add
add
icebp
rcr
jbe
fstl
add
fs
fisttpl
fs
or
xchg
in
outsl
out
add
pop
jg
sahf
icebp
fs
in
pop
mov
or
add
sti
or
movsl
cmp
iret
lods
shlb
inc
lock
dec
into
jl
imul
fs
jle
push
pop
les
jge
stos
nop
inc
push
fsubs
push
sub
mov
in
inc
adc
pop
mov
shlb
testl
push
xor
lret
ret
dec
pop
mov
outsb
call
jbe
call
iret
lahf
and
cmpsb
push
mov
add
pushf
in
lahf
sub
pop
daa
push
mov
xor
das
std
dec
lret
push
dec
sbb
mov
mov
dec
mov
pop
aas
xchg
mov
stos
cmp
leave
imul
dec
aam
xchg
mov
cmpsb
insl
fiaddl
aam
test
adc
mov
ja
mov
leave
in
ret
mov
cld
or
mov
inc
xor
mov
pop
jl
cmp
xchg
pop
ja
mov
ffree
sti
out
xchg
or
mov
notl
imul
jp
shl
xchg
lods
std
push
dec
and
jno
jl
sub
xchg
arpl
enter
repnz
ss
or
nop
sti
mov
insl
lods
test
mov
cld
xlat
rolb
repz
push
int3
and
test
rcr
rol
dec
mov
loop
fsubl
fstl
iret
rorl
jmp
add
pop
cmp
imul
add
lods
lret
add
lods
mov
cmpsl
add
enter
in
repz
test
call
and
arpl
dec
in
xor
out
jbe
out
outsb
ret
ret
sub
mov
xor
cmc
stc
sbb
enter
in
dec
dec
loopne
pop
mov
cwtl
mov
or
cmpsb
xor
xor
fldenv
xchg
mov
push
and
mov
jle
repnz
mov
mov
jecxz
stos
adc
add
dec
pop
jbe
sbb
scas
stos
pop
gs
or
out
or
jb
int3
pop
lret
scas
push
aas
imul
xchg
cld
dec
push
idivl
fisttpll
arpl
inc
xor
mov
jge
in
mov
inc
faddp
pop
push
pusha
pop
hlt
imul
add
sbb
ljmp
sub
orb
and
pop
sbb
int
add
pop
leave
pop
stc
iret
loop
cltd
adc
push
push
popa
dec
aas
push
jns
ds
push
sub
add
pop
ret
add
fchs
mov
shll
insl
fsubrl
lds
lcall
jmp
or
fwait
mov
fildll
les
arpl
jmp
lock
or
fcomi
mov
imul
xor
ret
xchg
out
lods
push
call
bound
lea
or
xlat
sub
pushf
cli
mov
in
fidivrs
sbb
cld
push
add
xorb
call
sbb
shr
or
movsl
or
enter
jge
or
mov
inc
fwait
cli
sub
jo
cmpsl
lahf
inc
inc
or
xchg
into
xor
mov
push
dec
ds
ds
fdivp
and
jnp
jg
push
lods
insb
mov
je
ja
dec
loop
movsl
mov
mov
popa
je
std
jae
iret
bound
sbb
cwtl
scas
mov
orb
mov
pushf
and
jecxz
loopne
sti
push
and
mov
jmp
ret
pop
scas
sbb
ljmp
insl
or
gs
and
pop
jp
push
and
xchg
fiadds
test
enter
insl
ret
lret
sbb
push
movhps
lcall
out
out
xchg
lods
insl
and
mov
bound
pop
fldt
inc
mov
insb
jnp
xchg
sub
out
filds
cmpb
out
nop
sub
or
jnp
jb
outsb
add
and
push
and
inc
jno
addr16
scas
jae
jg
jbe
or
push
ss
mov
shll
fidivl
sahf
jae
jl
pop
push
or
mov
sub
xchg
js
push
cs
push
test
int
sbb
adc
add
aaa
fs
sahf
stos
stc
leave
xor
push
cli
fs
xchg
movsb
imul
scas
call
push
jge
imul
dec
scas
pop
push
jp
in
sbb
cmpsb
xchg
das
jecxz
cmp
mov
movsl
js
and
mov
in
into
dec
mov
cmpb
ds
mov
mov
push
pop
xchg
push
add
dec
fcmovnb
pop
xor
roll
cmp
xchg
jns
jl
mov
sbb
xchg
mov
ficompl
xor
iret
std
inc
jecxz
push
mov
jns
inc
or
mov
rcr
inc
adc
pop
mov
jae
andb
and
inc
negb
jmp
pop
lea
dec
movaps
pusha
sbb
sar
gs
push
add
push
je
pop
call
xchg
arpl
lret
jg
jae
jbe
subl
jmp
push
or
stc
rorb
adc
pusha
in
int
repnz
fiadds
addr16
mov
mov
call
push
jo
or
or
jecxz
js
push
mov
mov
lock
pusha
pusha
enter
or
out
nop
jb
cmp
shlb
mov
loopne
fst
test
je
jmp
sbb
or
sti
push
and
pop
add
sarb
arpl
imul
xchg
enter
rcll
jmp
push
stc
cmc
loopne
pushf
push
cmc
push
popa
scas
inc
add
sub
cmp
add
xorb
comiss
or
cmp
cmp
jnp
or
scas
sarl
xchg
xor
fnclex
pop
sti
mov
jge
cli
sbb
and
adc
hlt
add
sahf
xorl
and
mov
add
xchg
add
cmp
repnz
cmp
sti
shlb
or
stos
cltd
addb
repz
mov
jbe
mov
and
int3
repnz
push
xchg
cmp
cmp
pop
fisttpl
xchg
in
insl
lret
mov
cwtl
add
movsl
xor
pop
mov
and
cmp
fistpll
xor
mov
and
jo
insl
test
pop
inc
popf
or
sub
mov
mov
and
int
insb
jmp
icebp
jmp
setnp
mov
jno
loopne
sbb
xchg
push
js
or
shll
ds
and
jbe
mov
xchg
test
xchg
ret
mov
rcrb
adc
xor
push
loopne
fidivs
gs
scas
or
daa
clc
mov
test
and
jne
dec
jo
jbe
jno
rolb
jmp
movsl
sbb
ret
xlat
sbb
fsubs
pop
mov
pop
cmp
mov
stos
and
nop
int
pusha
pusha
jle
movsb
out
xchg
push
in
jg
xor
testl
mov
or
arpl
adc
jnp
mov
xchg
pop
mov
xor
jo
mov
push
mov
pop
and
cld
push
les
repnz
pop
popf
popf
inc
mov
ljmp
in
shlb
jns
ljmp
lods
mov
shll
std
inc
jne
lds
or
mov
in
jecxz
jae
sub
jbe
jae
addr16
mov
xor
mov
push
mov
and
cwtl
cmp
dec
xchg
dec
jae
add
inc
out
adc
xchg
xchg
out
mov
or
clc
xchg
rorl
icebp
or
mov
mov
dec
jns
lea
arpl
addr16
push
and
cwtl
mov
sub
fwait
pop
and
das
mov
add
fwait
stos
mul
scas
hlt
pop
mov
and
jle
in
cmp
sub
sbb
or
inc
mov
stos
xchg
shrl
rcrb
jp
bound
cmp
lret
mov
cmp
fucomi
sbb
pop
cmp
jnp
int3
cmp
push
int
daa
je
call
sub
outsl
inc
lahf
and
sub
test
and
add
xlat
add
sbb
inc
pop
mov
xchg
xor
dec
rolb
push
js
mov
test
outsl
sub
jg
adc
fwait
lret
mov
cli
pop
push
out
and
push
pop
pop
clc
idiv
stc
push
cmp
mov
das
cmpsl
ret
mov
push
in
adc
mov
fisubs
js
cmc
test
mov
lret
in
out
push
jecxz
mov
cmp
dec
loop
lahf
push
loopne
pop
pop
dec
cwtl
pop
repz
push
cwtl
dec
push
sub
sub
mov
inc
inc
neg
jecxz
jge
cmpsl
rolb
int3
xchg
sbb
loop
hlt
add
push
popa
repnz
fcom
loope
andl
int
popa
cmpl
or
icebp
sub
cld
adc
jge
jmp
sub
das
movsl
sbb
aad
ds
mulb
rorb
mov
test
mov
adc
imulb
addr16
jae
aaa
jp
dec
test
dec
xchg
fists
mulb
jo
pop
rcr
in
insl
mov
sub
inc
loopne
movq
mov
push
rcr
stos
adc
push
out
sbb
fcomip
xchg
mov
jae
ss
sarl
and
cli
rcrb
xor
sahf
jl
popa
sbb
addr16
dec
sti
fnstcw
into
jg
mov
xor
loop
setae
push
les
xor
jb
insl
pop
dec
stos
movsb
inc
or
jle
loop
clc
aas
add
aam
lfs
fmulp
sub
ficomps
sti
sbb
mov
dec
out
movsb
sbb
imul
pop
sbb
sub
arpl
dec
add
jne
or
xchg
adc
mov
mov
cmp
ds
fcmovnu
xchg
test
pop
leave
mov
and
repnz
jnp
and
add
loopne
loop
xchg
inc
mov
mov
in
and
mov
in
sub
add
pop
aas
cmp
add
xchg
push
mov
xchg
dec
out
dec
lret
or
and
jmp
icebp
or
mov
mov
call
imul
enter
fldl
inc
jl
test
fwait
sahf
push
cmpb
inc
xlat
mov
movsb
push
jae
bound
out
push
push
sbbb
and
ret
xor
xchg
nop
pushf
shl
or
jo
pop
jnp
mov
jbe
js
cmp
push
shrb
int
rclb
dec
shll
cmpsl
sub
popf
lds
and
or
add
stc
push
pop
icebp
mov
icebp
shlb
aad
aad
push
ret
call
iret
or
test
popf
push
jbe
dec
gs
xchg
cwtl
cld
sti
xor
fidivl
out
clc
xor
shrb
repz
xor
mov
aas
mov
xor
jb
loope
pop
jne
cmp
dec
les
xchg
lods
clc
stos
jl
aad
test
scas
movsb
mov
out
pop
pop
bound
aam
mov
rolb
adc
dec
test
jl
or
jmp
insb
xchg
jae
and
lea
pop
or
scas
cltd
arpl
stos
rorl
or
andl
inc
dec
das
lock
ss
sbb
pop
imul
into
or
aad
ljmp
pop
scas
xor
xchg
cmpsb
mov
mov
lret
xor
lea
lahf
adc
fsub
sbb
adc
add
ds
xor
sbb
scas
mov
mov
je
add
sub
cmpb
add
fldl
je
adc
outsl
fcmovbe
out
push
int
add
add
lock
sar
xchg
lds
mov
mov
inc
cmp
lods
outsb
movsl
xchg
jg
jmp
call
jecxz
inc
and
stc
push
jle
adc
xor
mov
push
loope
adc
adc
xor
pop
test
xchg
push
xchg
mov
fisubl
cs
and
jmp
add
insb
and
das
mov
inc
fwait
imul
or
je
adc
mov
es
cltd
push
rcrl
loopne
in
mov
dec
jecxz
and
fidivs
inc
dec
rol
add
hlt
push
sarl
inc
inc
xor
sub
mov
xchg
sub
mov
movsl
push
xchg
int
jg
insl
sbb
push
mov
test
cwtl
pusha
pop
mov
add
mov
cltd
es
mov
adc
popf
dec
cmc
test
sti
adc
insb
dec
scas
adc
xor
rorl
adc
add
xchg
andb
cmp
addr16
push
test
mov
test
lods
cli
mov
das
xor
push
and
push
nop
or
cmp
in
xchg
jp
ficoml
add
hlt
adc
mov
mov
lcall
loop
mov
xor
ja
sahf
inc
mov
mov
lahf
mov
add
dec
jmp
mov
jecxz
adc
mov
test
int3
jge
mov
jae
jle
aas
mov
adc
stos
sbbl
dec
jne
in
test
pop
dec
rcrb
mov
dec
jg
xor
cmp
and
sub
imul
sbb
popw
fistps
jmp
lcall
add
fdivl
clc
xchg
cmpsl
fcmovnbe
mov
hlt
or
sarb
fnsave
push
and
push
out
xlat
xchg
sbb
push
mov
cmp
jo
andl
stc
icebp
xchg
sbb
push
mov
jno
hlt
sti
je
std
xlat
outsb
jmp
stc
dec
push
bound
xchg
pmaxub
push
xchg
mov
shll
push
mov
xor
test
inc
or
insb
mov
loopne
sub
call
jecxz
xlat
cmp
lock
and
mov
loopne
out
enter
mov
shlb
pusha
adcl
jle
lock
test
rclb
sbb
mov
push
mov
adc
out
aad
mov
in
mov
fs
gs
addr16
ds
bound
or
pusha
sbb
stc
jo
dec
or
xchg
cmp
inc
mov
or
nop
jo
adc
mov
adc
add
jne
lds
data16
jb
arpl
mov
daa
sub
aad
outsb
fsubl
scas
or
in
arpl
and
jae
cmpsl
les
je
movsb
cmpsl
mov
repnz
inc
push
sub
jne
int3
push
ds
call
cmp
lret
call
pop
inc
pop
pop
aam
xor
xor
mov
sbb
inc
cmp
cwtl
dec
add
pop
sub
mov
pop
pop
add
mov
imul
pushf
lahf
popa
test
pushf
inc
dec
jl
mov
mov
inc
or
cmp
sbb
pusha
dec
loopne
jne
or
roll
inc
sbb
pop
ds
loope
and
cltd
in
lret
push
sub
push
jg
sub
aas
and
and
lret
dec
mov
pop
mov
fsubs
inc
mov
push
add
cli
sub
pop
add
jl
cmp
stc
out
mov
lcall
adc
pop
push
mov
push
adc
dec
or
outsb
into
add
mov
sahf
sahf
mov
mov
add
pop
xor
test
pop
lods
mov
ret
icebp
enter
xor
ret
mov
add
ja
lods
sbb
mov
lcall
popl
mov
stc
fistpl
fcompl
mov
je
push
les
pop
es
fsubs
push
jae
mov
xchg
lcall
lods
lahf
pop
sbb
sbb
fisubl
jle
inc
push
and
and
xchg
push
jl
pop
dec
jb
inc
xchg
xrelease
adc
add
inc
mov
push
out
mov
scas
cs
shll
or
lock
jnp
xor
lahf
inc
and
fwait
pushf
dec
push
adc
movsl
mov
aas
mov
mov
arpl
push
jo
dec
lret
xchg
jecxz
roll
shll
hlt
ret
repz
mov
popa
cmp
inc
jns
adc
adc
addr16
lsl
stos
sti
mov
lret
stos
inc
test
mov
fisttpl
or
mov
mov
popa
add
pop
xchg
aad
and
stos
ds
jns
cmpsl
fbld
mov
pop
test
pop
dec
sbb
adc
ljmp
mov
add
jnp
fmuls
mov
rol
adc
into
addr16
arpl
sbb
add
add
adc
stos
or
bound
fdivp
andb
inc
test
jo
loop
inc
add
cltd
je
xchg
dec
mov
adc
xchg
lret
test
add
inc
das
jl
dec
movsb
iret
out
sbb
mov
ss
daa
int
repz
movl
or
into
pushl
fistpll
aas
fwait
sbb
dec
jmp
stc
out
arpl
flds
es
mov
mov
nop
xchg
jnp
sub
cmp
jns
popa
loope
push
cmc
sub
notl
ret
loop
sub
and
and
aad
pop
cmp
pop
imul
adc
inc
call
mov
fsubs
pop
aaa
nop
inc
jmp
push
ret
xor
js
mov
aam
mov
mov
daa
sub
sahf
mov
rorl
sahf
cltd
nop
xchg
lret
test
push
mov
jo
in
das
xchg
cmp
lods
jae
jg
xchg
xchg
xchg
std
xchg
mov
cmp
bound
xor
jbe
divl
call
push
mov
repz
cmp
ret
daa
bnd
mov
xchg
fbstp
addr16
push
jg
shlb
sbb
pop
loopne
cmpsb
push
sub
je
push
add
call
stos
in
inc
outsl
repz
sbb
and
inc
mov
jne
sbbb
dec
push
adc
daa
mov
es
int3
call
ljmp
xchg
repnz
sub
jo
scas
fisttpll
dec
mov
pusha
push
fcmovbe
arpl
sbbb
cli
ficompl
test
in
sub
adc
jo
sbbl
add
test
mov
aas
hlt
mov
push
repz
pop
push
inc
mov
js
mov
mov
xchg
arpl
shll
cwtl
outsl
ds
sub
je
loope
divl
jno
arpl
jo
and
hlt
cmp
xchg
and
pop
pop
or
in
mov
xchg
repnz
and
adc
lcall
fadd
repz
ljmp
dec
or
adc
jne
mov
and
lahf
cmpsb
mov
pop
rclb
xlat
pop
mov
movsl
cwtl
stos
inc
sub
loope
and
pop
xchg
mov
add
dec
stc
sub
mov
loope
adc
inc
mov
sub
out
push
dec
mov
stos
jl
cmp
lods
ds
sar
notl
xor
fmull
mov
repnz
pop
cmp
gs
sub
mov
lock
cmc
xor
cs
xchg
test
int3
out
scas
and
cmp
add
mov
rorb
shll
jae
mov
loopne
fists
dec
or
scas
mov
sub
mov
int
jo
jge
xchg
cli
mov
popf
pop
push
pop
cmpb
leave
dec
lret
sbb
xor
inc
jmp
fld
inc
mov
lret
aam
add
les
adc
cmp
clc
jle
sahf
pop
xchg
mov
dec
add
enter
loop
pop
inc
hlt
mov
or
int
pop
out
inc
cmpb
xchg
mov
inc
fsubs
mov
ja
bound
dec
xor
in
dec
and
ljmp
sti
fdivr
add
mov
cmp
dec
fsts
mov
add
xchg
or
sub
outsb
loop
cmpsl
fidivrs
nop
leave
cmp
mov
cmp
lret
ss
mov
movsl
fs
shlb
sahf
fidivrs
lock
lock
or
out
pop
cld
mov
mov
jp
xor
sub
jno
fwait
lret
repz
fcmovnbe
cmpsb
pop
pushf
movsb
int
jecxz
ror
xchg
sub
pop
pop
cmpsl
push
sbb
stos
in
movsb
inc
and
ffree
stos
mov
pusha
mov
mov
adc
popf
cmp
adc
push
pop
cmp
pop
jle
icebp
into
mov
aas
jmp
test
mov
add
cmpsb
mov
scas
xchg
add
adc
jb
inc
test
push
int
mov
ljmp
cwtl
jl
pop
repz
bound
sti
clc
xor
mov
pop
push
or
add
push
cvtdq2ps
fnstenv
xchg
sub
or
push
push
ja
outsb
imul
xlat
out
mov
and
setp
push
push
in
loopne
enter
test
sub
ja
jmp
int3
push
jae
in
mov
enter
sub
mov
mov
scas
ljmp
dec
mov
icebp
aam
jp
sahf
outsl
dec
ja
cmp
xor
sbb
inc
xorl
xor
pushf
push
dec
push
sbbl
jne
xor
mov
and
add
insb
shrl
pop
jle
jnp
sbb
push
out
xchg
add
insl
mov
adc
cmp
dec
pop
icebp
test
pusha
dec
add
jns
add
dec
dec
xor
dec
repnz
in
lret
int
adc
sub
rdpmc
test
daa
insl
lret
movsl
mov
lahf
iret
loopne
ja
lret
js
mov
or
pop
loop,pt
lods
ret
or
sub
mov
iret
xor
mov
icebp
insb
in
cld
sti
les
adc
add
sub
xlat
xchg
push
jae
xor
outsb
dec
ja
xor
insb
ss
dec
in
pushf
neg
lods
adc
testb
dec
fimull
xor
xlat
stc
ror
cwtl
jl
addr16
sarl
xor
jbe
jne
add
ss
inc
roll
std
cltd
dec
pop
ret
lret
mov
xchg
pushf
pop
in
psubusb
adcl
imul
jbe
xorl
sbb
outsb
push
mov
or
adc
or
ret
and
mov
adc
ljmp
and
ss
xchg
dec
cwtl
sbb
rcll
imul
adcb
pop
fwait
inc
cmpsb
cmp
jp
hlt
mov
or
sub
pop
aas
inc
sub
je
mov
ja
lret
pop
pop
or
sahf
adc
scas
aam
enter
icebp
int
andb
xor
mov
mov
push
inc
mull
xchg
hlt
sbb
loope
in
or
movsl
aam
aam
jne
das
xor
insb
lods
lds
pop
adc
inc
sbb
in
fistpll
push
cld
jae
jo
xchg
dec
int3
sbb
pop
test
xchg
mov
and
mov
push
in
outsl
cmp
imul
add
imul
cmp
and
xchg
xchg
add
inc
push
cmp
cmp
jl
shlb
mov
fisubl
mov
jae
dec
pop
xchg
mov
jns
pop
cmpsb
in
out
xchg
pop
adc
inc
xchg
cmp
jno
jo
and
jmp
adc
movsb
adc
icebp
mov
pop
cmp
mov
and
mov
xchg
in
pop
mov
fstpl
xor
fs
pop
dec
cmpsl
mov
andl
cmp
lcall
sahf
mov
cmpsb
push
adc
cmp
xchg
loopne
cmp
jle
add
cmc
mov
add
ret
inc
sbb
push
cmp
cmp
scas
out
dec
pop
pop
mov
and
ret
xchg
aam
ret
mov
in
mov
mov
test
lret
lock
mov
lock
icebp
dec
sub
neg
scas
out
mov
loopne
movsl
mov
jo
push
in
adc
lods
jl
daa
ds
aad
cwtl
repnz
enter
sub
out
dec
rcll
xor
out
xchg
out
jae
mov
and
imulb
jnp
xchg
xchg
mov
mov
fidivl
cmp
fs
push
and
mov
xor
lea
enter
push
ja
add
adc
sti
xlat
frstor
sub
mov
sarl
and
jg
dec
repnz
rorl
pop
in
sbbb
movsb
add
inc
push
cmp
jp
and
ljmp
es
repnz
pop
in
jl
add
cld
or
push
inc
sti
xchg
aad
lea
neg
arpl
jo
sbb
push
push
std
mov
sbb
and
es
insb
shll
and
aaa
lea
jae
pop
inc
enter
cli
clc
test
mov
push
inc
jge
int3
jmp
and
sub
add
xchg
pushf
fcoml
mov
rcrb
in
sub
xchg
out
cmc
inc
adc
cmp
das
dec
insl
cmp
xchg
in
mov
imul
mov
imul
mov
push
mov
jmp
dec
and
aam
cmp
xchg
lods
xchg
add
push
dec
dec
xchg
pop
sub
aaa
cmpl
out
cli
in
inc
pop
or
cmp
stos
hlt
pop
mov
mov
xchg
fcomps
jb
sub
dec
adc
ja
inc
adc
aas
in
push
idivl
in
dec
mov
and
push
adc
in
test
loope
out
push
mov
jo
xor
add
inc
fstpl
or
or
inc
sarl
out
cmp
xchg
divb
ss
pop
nop
scas
test
push
or
std
dec
roll
cmp
mov
push
imul
fdivs
adc
xchg
imul
dec
adc
jno
call
nop
xor
cmp
out
dec
in
das
pop
sub
test
cli
mov
test
insb
cmpsl
cmp
sahf
imul
ret
mov
jae
out
cmpsb
and
dec
scas
mov
mov
sub
push
push
cmp
xchg
rol
int3
cmp
fimull
xchg
mov
jp
jl
jecxz
lds
stc
mov
pusha
mov
int3
pop
pop
into
cmp
push
cwtl
adc
lock
jo
test
and
mov
add
js
js
insb
jns
ret
incl
out
ret
cmp
in
call
sbb
mov
adc
ljmp
pushf
fldl
mov
cmp
dec
in
aad
pop
mov
xchg
xor
mov
out
ljmp
pop
out
jo
stc
cmp
lods
ret
mov
or
push
mov
mov
lahf
aaa
push
aam
aaa
mov
mov
cmpsl
clc
mov
fcompl
cmp
sub
out
js
inc
movsb
sbb
ret
sub
aad
insb
sub
xor
rcrl
or
loop
fstp
mov
leave
push
outsl
jmp
ret
outsb
jnp
xchg
or
ja
inc
loop
xchg
jae
test
sar
out
jae
xchg
xchg
mov
pop
iret
mov
je
or
es
loope
out
adc
jp,pn
xchg
and
in
out
jns
jne
pop
int
int3
xor
xlat
jecxz
lahf
push
icebp
and
dec
jnp
mov
cmpsl
pop
adc
fs
jg
aas
addr16
lret
xchg
fsubr
xchg
es
sbb
lahf
dec
lock
cmc
cmp
jle
and
data16
mov
jg
rclb
shll
mov
mov
adc
popf
mov
nop
xor
cwtl
dec
adc
dec
rcrb
int3
add
das
dec
nop
aad
in
cld
cmp
pop
adc
jmp
push
and
push
das
xor
sbb
pop
and
daa
out
aaa
jecxz
popa
adc
loope
cmpsl
icebp
mov
lock
andb
push
clc
gs
mov
lahf
dec
ljmp
xchg
mov
inc
push
aad
inc
mov
jmp
nop
outsb
jl
xchg
cmc
mov
aam
fldenv
or
push
stos
and
repnz
xchg
arpl
imulw
cmp
fistpl
xchg
hlt
xchg
pop
js
xor
pop
cwtl
mov
push
fsubrs
pop
jnp
sub
mov
out
and
sahf
adc
out
push
imul
sub
int
or
cmpsl
cmp
and
push
in
xchg
bound
push
popa
mov
cwtl
arpl
push
jmp
std
in
push
loope
mov
sub
shll
xor
push
xor
mov
inc
xchg
adc
add
inc
loopne
push
out
ficoms
add
xchg
jg
cltd
arpl
jmp
mov
hlt
mov
sbb
jae
es
mov
mov
add
push
mov
lret
sub
aas
aad
xchg
add
mov
cmp
enter
fstl
das
sarb
jnp
and
mov
mov
sbb
mov
xchg
inc
out
test
imul
in
dec
stos
imul
xchg
add
iret
sub
mov
ret
mov
in
scas
loop
pop
mov
mov
mull
mov
sti
or
ljmp
daa
mov
insl
negb
rcrl
fistpll
movsb
xor
inc
sub
sbb
gs
xor
push
data16
xchg
iret
push
loopne
int
or
les
iret
fidivs
hlt
shrd
xor
repnz
aaa
adc
cwtl
xchg
and
mov
push
dec
ljmp
fs
mov
and
aam
frstor
sbb
into
sbb
cmpsl
xchg
clc
jnp
mov
pop
inc
or
mov
mov
stos
mov
scas
sbb
das
in
push
push
cmp
cwtl
jns
shll
pop
add
mov
rcr
mov
xchg
popf
outsb
das
ljmp
add
adc
mov
pusha
jb
cmpsl
jbe
adc
push
out
cmpl
inc
int3
xchg
pop
mov
mov
or
repz
ds
fildl
push
into
adc
sub
scas
in
sbb
repz
pop
int
or
outsl
test
jle
sub
pop
mov
idivl
hlt
pop
aas
xlat
dec
inc
clc
adc
sub
movsb
in
pushf
addb
je
jp
cld
aad
in
dec
pop
pushf
in
sbb
stos
pushl
sub
ror
js
cmpsl
adc
adc
popf
out
aad
loop
mov
cmp
mov
adc
imul
lea
push
ds
pop
and
subb
inc
andl
xchg
into
push
andb
test
mov
cmp
sub
push
dec
popa
movsb
jl
in
pop
pop
lret
mov
inc
jl
mov
adc
imul
cmpsb
scas
rcll
cmp
std
fsubrs
adc
sub
xchg
inc
test
xchg
cmpsb
inc
repnz
inc
int3
mov
out
inc
cmp
divb
enter
push
popa
cli
pop
jle
sub
sub
pop
pushf
inc
fsubs
insl
fists
js
stos
popa
mov
and
mov
cld
inc
sbb
jno
jo
xlat
nop
shl
or
pop
aad
push
jne
cwtl
add
andb
pop
mov
into
dec
inc
add
cmpsl
mov
and
add
adc
leave
adc
pop
ja
popf
iret
push
fnstsw
fldenv
imul
mov
rcll
push
mov
nop
pusha
dec
or
mov
xchg
daa
scas
adc
insb
int
sahf
aas
jge
ret
jnp
xor
in
movsb
pop
insb
shlb
faddl
addr16
mov
int
in
add
dec
xchg
xchg
or
fldt
dec
mov
add
fbstp
in
inc
ret
int
clc
dec
out
rcl
loope
sti
scas
jp
push
mov
shrb
shrb
pop
es
cli
andl
xchg
inc
cltd
mov
fcoml
xorb
in
push
jo
jp
out
push
add
dec
rclb
mov
push
roll
inc
repz
mov
inc
mov
sbb
push
jbe
shrl
sub
or
jecxz
add
lock
mov
add
xchg
jmp
out
arpl
sti
or
jnp
jmp
xor
dec
and
dec
mov
insl
inc
arpl
ja
fsubrs
aam
cmpsl
inc
ret
stos
jle
push
push
dec
fwait
arpl
jge
push
mov
iret
jno
test
add
call
add
ret
adc
pop
in
aas
xor
pop
adc
imul
xchg
xchg
jb
mov
adc
jb
cmp
cmp
test
in
pop
fisubl
les
jae
icebp
shlb
mov
outsb
pop
adc
push
dec
xchg
dec
jge
mov
cli
jge
les
clc
into
xchg
cmp
movsl
lahf
fisubrs
scas
mov
push
je
mov
xchg
test
rol
push
cltd
push
mov
outsl
scas
mov
fists
xchg
enter
mov
fldt
or
sahf
loope
daa
xchg
out
jp,pn
or
or
add
iret
aaa
cmp
or
cmp
lret
add
jl
mov
std
cs
arpl
dec
cmp
out
mov
mov
jl
inc
sub
es
xor
ret
test
ja
lods
lods
mov
dec
sbb
aas
mov
cltd
cli
test
movsb
sti
rorl
mov
and
xor
push
das
xor
in
dec
mov
xlat
pusha
repz
fdivrp
or
pop
xchg
popa
sti
nop
adc
pop
out
sbb
xchg
jb
xor
and
inc
fnsave
pop
xchg
pop
adc
adc
test
mov
test
lcall
mov
lods
test
jbe
icebp
outsb
mov
pop
dec
lret
scas
xor
rcrl
xchg
incb
push
in
jg
mov
cmp
rclb
movsb
ljmp
in
sbb
adc
adc
jmp
jne
cmp
shlb
and
ss
test
adc
or
pop
jp
fbstp
pop
pop
out
pushf
lods
xor
sbb
inc
or
divb
mov
push
clc
mov
cmp
mov
or
jmp
lea
mov
sarb
push
cld
jmp
cmova
push
xchg
stos
movsb
mov
movsl
inc
shll
cmp
dec
mov
into
scas
es
icebp
jge
pop
jmp
add
iret
cmpsl
int
ljmp
int
out
inc
mov
or
dec
or
adc
mov
dec
or
sti
jae
jmp
mov
test
pop
pop
lahf
xor
ljmp
fnstcw
push
cmp
mov
pop
or
push
adc
xor
or
push
mov
shrl
movsl
mov
fsubs
ljmp
push
lcall
xchg
xlat
inc
lahf
and
mov
adc
adc
std
fistps
lcall
lea
cmp
mov
psubq
add
adc
push
mov
call
in
shlb
pop
or
dec
iret
pop
cmpsl
hlt
addl
rcrb
lret
repnz
mov
test
sahf
mov
push
xchg
sbb
cld
aas
bound
or
movd
cmp
push
cwtl
pop
mov
pusha
fs
inc
movsl
sub
pop
pop
or
je
and
mov
cltd
cmc
lock
fs
lret
jle
mov
sbb
into
mov
dec
insb
das
sub
pop
std
push
dec
lret
sbb
nop
cltd
nop
inc
inc
scas
dec
js
mov
out
adc
mov
enter
mov
pop
push
mov
mov
jecxz
inc
cmp
in
pop
mov
jb
scas
call
iret
fisttps
xorl
fsubrl
mov
add
stos
loop
mov
shll
sbb
leave
pushw
sahf
sbb
pushf
xchg
shlb
add
js
inc
lcall
orl
int3
jg
dec
xchg
scas
cmp
xor
addr16
test
inc
or
adc
enter
pusha
push
push
jmp
dec
fimull
dec
imul
and
pop
int3
fildll
mov
das
cltd
pop
sbb
lods
out
add
mov
adc
cmpsb
cmp
in
xor
dec
testl
jo
and
std
fnsave
and
movsb
adc
jge
adc
inc
jb
loopne
les
outsb
scas
xor
jnp
out
cmp
dec
or
adcl
mov
add
and
inc
jg
mov
out
jp
mov
lret
pop
cltd
dec
ljmp
and
push
xchg
pop
sub
leave
mov
push
push
sub
xor
out
stc
and
lods
cmp
cmp
sbb
pop
add
adc
mov
push
add
xchg
sbb
or
sub
arpl
andl
out
addl
jno
loope
cs
lods
shll
push
xlat
cltd
add
adc
mov
stos
insb
add
sar
cmpl
xchg
sub
jno
push
out
sbb
pushf
and
mov
das
rcrb
xchg
icebp
mov
inc
push
loop
popf
dec
iret
fistpl
cmp
cmp
hlt
inc
jmp
mov
sbb
inc
cmp
or
aam
insl
cmp
or
dec
push
push
fsubl
sahf
or
jb
and
ret
mull
sub
aas
push
xor
sub
mov
pop
out
stos
add
pop
aas
rcll
and
dec
adc
mov
sub
insl
pop
push
orb
or
stos
cmp
mov
xchg
or
fstps
pop
fs
push
cmp
sub
scas
and
std
dec
push
hlt
in
dec
incb
lds
mov
push
mov
rcrb
jge
ja
or
mov
test
mov
or
pop
cmp
adc
sbb
sbb
sbb
push
mov
mov
aaa
push
mov
sti
and
mov
pop
lds
jle
or
or
rorl
mov
xor
add
sahf
xlat
jae
sub
fstpl
loopne
pop
mov
lock
dec
inc
xchg
push
loop
into
inc
test
aas
jae
jg
shl
or
dec
notb
push
cmp
push
push
and
adc
jns
xchg
in
sub
mov
imul
test
adc
adc
es
jl
and
dec
fstps
loope
cmpsl
jmp
pop
movl
cmpsl
inc
addl
fidivrs
out
mov
mov
push
shrb
add
loopne
fs
mov
xor
mov
dec
add
nop
cmpsb
das
loop
insl
jb
mov
rcrl
push
lods
mov
xor
sbb
jmp
mov
jle
fstps
mov
mov
js
or
mulb
jo
jno
aaa
addr16
adc
pushl
popf
dec
orb
dec
xchg
call
xor
ret
outsl
clc
mov
mov
mov
pop
js
gs
and
loope
pushf
cmpsb
shr
out
hlt
xlat
insb
flds
dec
lds
dec
or
jge
sti
imul
fnstcw
rorb
repnz
jae
cmpsb
aam
icebp
and
xor
mov
mov
adc
aam
cmp
and
jle
inc
push
outsl
sbb
push
push
jle
xchg
iret
mov
popa
xor
pusha
dec
and
xor
push
loop
je
ljmp
pop
adc
lods
inc
pop
pop
ss
jg
stc
daa
mov
cmp
adc
push
mov
mov
sti
shll
sub
cmp
movsb
shrl
and
loop
fdivrl
dec
mov
in
push
push
hlt
loope
jp
out
jnp
add
mov
push
inc
or
jnp
pop
out
inc
outsl
fbstp
in
push
push
cmp
pop
sub
fdivp
out
repz
roll
fisubl
bound
jns
mov
mov
jp
push
orl
out
lahf
pop
sti
mov
lea
xchg
fistps
lret
insl
lahf
cli
inc
mov
fsub
jne
xor
mov
js
jmp
adc
testl
cmp
insl
xchg
ret
xor
pop
sub
jl
frstor
push
fstpl
jns
fmuls
lods
fsubrl
and
mov
je
xor
jl
dec
jle
adc
mov
jmp
cwtl
inc
roll
pusha
mov
xchg
pop
xchg
mov
pop
mov
fcomps
sbb
sub
imul
leave
shlb
sbb
jle,pn
mov
pop
xor
fisubs
push
mov
nop
and
nop
into
out
mov
rcrl
jecxz
ret
add
dec
hlt
xor
dec
dec
pop
jne
xchg
mov
adc
scas
cmpsb
jp
mov
stos
sbb
mov
pminsw
fs
jg
shrl
fmuls
adcl
mov
int
rcrl
mov
sbb
add
popf
int3
xchg
sub
in
mov
test
das
mov
ss
mov
mov
mov
or
fs
lods
mov
xchg
aas
mov
pop
and
and
cmp
xchg
sbb
push
add
jo
and
ret
popf
mov
xlat
adc
lcall
mov
ss
ds
daa
cli
fmuls
cmpsb
mov
shll
xor
out
loope
ljmp
scas
dec
test
lret
movsb
push
and
sbb
in
dec
jl
ljmp
ja
mov
outsl
cmp
jle
push
sub
je
int
lret
or
cmp
nop
xchg
jmp
or
lret
icebp
jmp
add
and
push
mov
inc
mov
into
outsb
mov
or
mov
jae
add
rcll
cli
sarl
mov
flds
or
es
xchg
call
ror
icebp
ret
int3
jl
stc
dec
mov
and
out
addr16
adc
in
icebp
push
and
sbb
js
pusha
and
into
push
frstor
cmc
push
xchg
int3
icebp
lods
dec
pop
jnp
call
pop
in
lahf
push
dec
and
mov
xchg
arpl
xchg
sahf
push
xchg
pop
aad
cmp
test
ror
inc
sbb
adc
xchg
pop
call
and
inc
adc
mov
cli
or
sbb
mov
fcmovb
xchg
or
rcrb
pushf
ret
dec
lods
pop
sarl
nop
mov
mov
push
test
or
adc
xchg
add
mov
push
int
pop
jle
xor
mov
pop
fucom
push
out
je
fs
inc
int
outsb
sbb
xlat
aam
mov
cltd
and
pop
neg
inc
add
lret
daa
sbb
adc
stc
cltd
pop
and
inc
aaa
insl
fs
cmp
xor
sub
cltd
pusha
dec
xchg
sbb
dec
pop
subl
into
insl
scas
cmpb
pop
mov
push
cmp
mov
adc
arpl
pop
mov
cmc
in
mov
test
insb
cwtl
cmp
subl
repnz
dec
push
cli
cmp
clc
mov
adc
mov
add
inc
fldt
lock
adc
mov
rorl
fadd
sub
add
adc
mov
pushf
mull
jnp
or
and
test
nop
or
sahf
mov
lret
sete
mov
sti
movsb
add
lret
pop
inc
loop
testl
inc
xlat
push
cmc
xchg
sarb
out
mov
lds
sbb
mov
clc
jno
adc
shll
jae
je
mov
jl
pop
gs
lods
inc
sub
push
mov
jno
mov
jle
mov
ss
push
xchg
je
rcr
xor
lahf
dec
cmpsl
jnp
daa
cmc
jp
cmpsb
mov
cltd
insb
xor
xor
js
jg
movsb
jp
hlt
xor
jns
mov
push
aas
add
mov
in
stc
xor
roll
or
and
sbb
int
dec
in
aad
pop
or
int3
ljmp
and
xchg
sub
sbb
xchg
dec
fnsave
xchg
loope
inc
mov
sbb
nop
xchg
data16
imul
insl
movsb
mov
iret
jne
xchg
stc
jp
out
dec
or
aad
mov
mov
xlat
pop
loop
ss
cmp
mov
rcll
rep
push
pusha
jg
dec
inc
fldenv
ljmp
jg
hlt
mov
push
sbb
out
fld
jg
pop
out
cld
in
or
sub
cltd
cld
std
jge
les
mov
sbb
fnstcw
and
jnp
repz
adc
fs
cli
xchg
mov
add
int
and
shlb
cltd
outsl
add
insb
pop
fs
jo
cs
std
mov
add
cmp
popf
add
add
jb
lock
xlat
jge
fwait
movsl
fwait
shrl
jg
mov
sub
cmp
jb
mov
shlb
jo
fcomps
xor
dec
aas
ds
cmp
dec
mov
gs
outsl
xlat
adc
pushf
adc
jge
add
pushf
push
jg
xchg
cli
cmp
cmp
stc
xchg
push
sti
lcall
sub
test
in
and
das
xchg
sarl
lods
test
popa
out
fisubrs
cmp
fistpll
and
sub
mov
pop
out
add
xor
lahf
or
addr16
jge
push
rol
pop
fwait
test
jae
aad
inc
mov
adc
cmp
add
jecxz
ja
or
push
lods
push
and
sbb
mov
jns
mov
xchg
ljmp
nop
std
cmpsb
inc
pushf
fcompl
int3
enter
in
incb
push
out
movsb
xchg
daa
das
daa
sub
xchg
test
fadds
jmp
mov
adc
or
mov
aas
addr16
aaa
adcl
cmpsl
mulb
fucomip
push
lods
mov
pushf
bound
inc
subb
cmpsl
adc
mov
and
adc
jle
sar
sti
arpl
pop
push
jp
or
out
insb
mov
addb
imul
mov
lret
xor
jnp
mov
add
sbb
and
push
jl
adc
rcrb
mov
in
test
insl
mov
dec
fistpl
add
xchg
lock
mov
pop
mov
shrb
movsb
scas
arpl
aaa
adc
and
fisubrl
lret
in
cmpl
call
push
movsl
dec
in
movsl
add
insb
mov
in
je
inc
sub
out
inc
sub
dec
sti
popl
daa
sarb
jg
ss
lahf
adc
sti
xchg
imul
hlt
mov
test
pop
mul
aad
cmp
icebp
xorl
cltd
or
cmpsb
popf
in
imul
pop
sbb
lods
aad
inc
or
movsb
pop
rcrl
es
mov
enter
cmpsl
sub
fisttpll
jle
addr16
dec
or
ds
jno
aaa
gs
ret
and
iret
out
push
jb
pop
jecxz
ret
in
add
pop
insl
xor
jg
lea
mov
test
ret
loop
fwait
pop
push
jp
out
mov
in
push
movsb
and
das
cld
and
mov
fisubrs
sarl
xchg
enter
or
test
out
pop
lds
pop
iret
incl
call
in
shll
repnz
mov
pop
sahf
leave
movsl
ja
mov
rcrb
pop
lods
dec
mov
mov
fsubp
sub
jbe
loop
mov
push
cmp
add
pop
repz
pop
in
inc
sbb
adc
inc
fdivr
push
inc
fwait
shlb
aad
out
mov
pop
test
xchg
movsl
sub
mov
or
jmp
repz
xchg
cmp
xchg
inc
add
loop
out
jp
sbb
lret
pop
sub
dec
jp
jns
scas
out
lds
sbb
mov
adcb
cltd
lods
dec
mov
test
insb
and
ljmp
cltd
stos
jmp
ror
addb
jb
push
adc
cmpsb
inc
je
test
inc
sbb
sub
lret
push
pop
out
mulb
push
lock
xor
stc
add
pop
dec
jne
inc
sbb
or
insl
scas
outsb
int3
inc
insb
sub
sbb
stos
in
dec
xor
mov
push
xor
inc
les
cmp
or
imul
outsl
or
les
push
push
shrb
cmp
fnsave
loop
mov
push
icebp
sarl
pop
add
mov
push
outsb
pushf
loopne
addl
cld
bound
test
outsl
into
pop
adc
push
sbb
mov
fbld
test
in
xor
arpl
mov
cmpsb
pop
xchg
shrb
iret
jo
fidivrs
or
xor
add
lret
sarl
dec
or
adc
jg
psrlq
jg
add
push
cli
lds
shr
cltd
orl
inc
mov
adc
mov
subl
or
and
out
pushf
fbstp
pop
jae
jne
in
sarl
push
shl
and
nop
jp
xor
mov
jne
push
push
das
or
aas
popf
mov
push
sahf
ds
aad
aam
pop
sbb
xchg
push
mov
pmuludq
cmpsl
je
nop
mov
mov
and
inc
pop
sbb
mov
mov
mov
mov
inc
cld
xchg
and
mov
or
dec
xchg
iret
jl
repnz
arpl
pop
jnp
and
cmpsl
push
mov
or
sub
cmp
je
outsb
loope
arpl
mov
jb
in
repnz
daa
pushf
push
imul
inc
push
call
repz
inc
in
addr16
sbb
fs
out
or
fld
std
icebp
jo
cld
fldl
dec
jnp
or
lahf
ret
lds
gs
xchg
mov
andl
xchg
cmpsl
add
daa
adc
mov
std
and
xchg
pusha
xor
adc
push
jl
data16
sub
test
add
push
mov
in
xorl
insb
pusha
out
in
push
movsl
aam
mov
and
roll
insl
xchg
dec
xchg
mov
jno
inc
lods
cmp
mov
push
push
cs
into
repz
hlt
sbb
addr16
or
or
lcall
call
jecxz
jmp
add
rcrl
add
aad
mov
mov
or
popf
push
push
cmp
fidivrs
clc
loope
cmp
movsl
lcall
xchg
test
jle
push
jnp
stos
fistl
nop
adc
xor
imul
jp
ja
stos
and
enter
or
jmp
lock
gs
sbb
test
inc
stos
testl
insb
orl
adc
push
fadd
mov
pop
loope
int3
js
scas
adc
iret
dec
fsubrp
cmp
lds
stc
jp
lea
pop
mov
mov
lcall
out
data16
subl
push
add
jbe
enter
sbbl
add
add
repz
dec
jmp
add
fildll
inc
stc
xchg
dec
aam
pop
mov
lcall
and
aas
das
outsl
mov
sahf
dec
fildl
cmpsb
cmpsb
sbb
xor
lret
addr16
mov
enter
mov
cwtl
xchg
dec
jg
jmp
adc
out
outsb
jge
xchg
into
push
mov
lret
bound
inc
and
xchg
mov
ss
pop
pop
cmpsb
cmp
ja
pop
je
mov
mov
mov
ficoms
out
shrl
push
les
cmpsl
loop
jbe
xor
pop
lahf
dec
js
fs
cmpsl
mov
adc
mov
arpl
pop
and
call
mov
mov
aas
cld
pushf
inc
cmp
cwtl
and
pop
xchg
cmpsb
int
and
mov
push
pop
sbbl
pop
and
dec
jae
inc
sub
lahf
inc
and
insb
xchg
sub
scas
fs
sbb
adc
ficoms
fwait
mov
sbbb
movsl
push
dec
adc
pop
inc
add
int
and
push
dec
sub
push
add
mov
cltd
and
mov
aad
iret
cmp
pop
ret
popf
adc
sbb
dec
pop
mov
jl
xor
sbb
push
dec
pop
test
add
or
push
sub
setge
xchg
xchg
lret
mov
dec
out
ds
pushf
sbb
loopne
icebp
or
scas
push
std
das
pop
test
nop
cmpl
xchg
inc
loope
adc
scas
push
pop
mov
or
push
mov
cmc
or
lods
fdivr
icebp
mov
out
or
decl
out
mov
mov
jle
movsb
data16
mov
mov
out
ljmp
stos
pop
mov
adc
adc
mov
call
iret
pop
shr
jp
pop
push
fsubr
mov
or
jecxz
notl
cmc
jo
cmp
sti
jg
add
test
inc
mov
outsb
aaa
inc
push
fwait
scas
sti
fildll
shlb
adc
mov
inc
and
es
test
sti
jg
movsb
dec
int3
out
mov
shl
inc
jmp
fisttpl
call
lds
icebp
add
in
ret
std
lea
rcrl
adc
and
jg
lcall
pusha
orb
fcmovb
aas
mov
xor
js
dec
nop
inc
jnp
subb
mov
pop
repnz
dec
xchg
out
mov
sub
mov
and
cmp
addr16
fwait
js
xchg
cmp
sahf
stos
jecxz
fnsetpm(287
das
pop
fildll
jae
xchg
sahf
jmp
push
cmp
or
jnp
sub
sbb
icebp
pop
xor
pop
push
mov
rcrb
mov
sbb
pop
cmp
jns
or
add
mov
cwtl
mov
hlt
adc
mov
adc
into
stos
cmpsb
and
out
dec
pop
lods
subb
nop
mov
test
pop
repnz
loope
push
jnp
ds
cmc
jle
pop
leave
xchg
cmp
sbb
fiaddl
insl
cltd
loope
jne
adcl
inc
arpl
sbb
adc
sbb
jge
into
jmp
incb
sbb
push
popa
and
int3
std
enter
aam
mov
mov
jno
xor
stos
lahf
rorb
stos
xchg
sbb
jae
or
pop
loopne
gs
rcrl
mov
xchg
lds
pop
pusha
cmp
jmp
push
dec
xor
pop
sbb
jb
out
jp
dec
mov
popf
or
jecxz
out
dec
mov
mov
call
adc
mov
ljmp
cmp
cmpsb
push
and
and
cmpsb
inc
in
push
cmp
jg
pop
xor
mov
iret
push
sbb
cltd
std
sarl
mov
push
out
push
xchg
pop
xchg
or
mov
hlt
cmp
shr
mov
insb
imul
sub
movsl
clc
mov
xchg
daa
push
fistpl
gs
in
out
adc
sub
push
popf
push
dec
jle
cmp
or
mov
nop
jno
rclb
mov
aad
test
cmp
dec
dec
jbe
ret
test
mov
hlt
pusha
mov
xor
xor
pushf
fidivs
into
insb
out
pcmpeqd
sub
fwait
cltd
addr16
mov
adc
icebp
push
popa
mov
rcll
clc
xor
test
mov
fldenv
lds
dec
lahf
fwait
mov
mov
xchg
stc
inc
dec
inc
push
and
lahf
je
mov
repz
xlat
stc
dec
mov
call
or
loope
lods
fsubl
pushf
jg
loope
and
push
dec
dec
add
aaa
sbb
pop
ja
pop
pop
jecxz
popf
push
es
fbstp
sbb
sub
lods
jnp
lods
push
xor
push
fs
dec
enter
aaa
xchg
xchg
ja
aam
scas
mov
inc
or
loopne
inc
sbb
cld
pop
dec
xor
pop
fisttps
xor
adc
jnp
scas
int3
dec
dec
and
pop
int3
sbb
mov
push
jae
push
sub
push
ret
rorl
aas
push
cmc
add
lea
call
xchg
shl
pop
dec
pop
or
inc
pushf
imul
in
pop
add
fdivrl
cmpsl
pop
fdivr
xlat
ljmp
movl
in
clc
cmpsl
sub
pop
call
hlt
ret
add
leave
inc
fsts
and
stos
add
gs
pop
incl
negl
mov
js
icebp
push
dec
jno
xor
adc
inc
push
xchg
loope
and
and
mov
dec
mov
aaa
js
shr
mov
into
lahf
pusha
mov
and
cld
xor
testb
mov
adc
jecxz
scas
cmp
je
dec
jecxz
xchg
aam
ret
push
sbb
xor
loop
call
in
jne
and
les
sahf
xchg
lret
sub
cwtl
cmp
cmp
pop
call
sahf
xor
mov
mov
fbstp
inc
cwtl
sbb
jle
push
pop
sti
out
pop
addr16
sahf
fldt
push
xor
js
inc
inc
andb
loop
pop
idivl
js
das
inc
leave
and
add
xor
adc
push
inc
cmc
add
adc
les
sub
ds
fstpt
mov
lahf
sti
cmp
xchg
mov
inc
dec
lea
fdiv
fisubl
xor
xlat
daa
inc
int
xlat
int
notl
dec
dec
cltd
loop
add
loopne
cmpsl
pop
xor
add
ljmp
jecxz
mov
inc
push
nop
shr
sub
pop
xchg
mov
sub
xchg
loop
daa
sub
je
mov
loope
dec
out
mov
sub
add
or
inc
negb
mov
sti
xchg
add
out
pop
into
cmpsl
inc
inc
stos
xor
clc
dec
outsl
mov
cwtl
cld
cmp
popf
js
dec
das
cmpsb
subb
rcr
sti
loop
mov
push
pop
sub
stos
xchg
shlb
pop
xchg
add
and
xchg
xor
inc
dec
inc
aas
orb
cmp
hlt
jb
int
or
ljmp
mov
aad
inc
sbb
lcall
mov
lcall
push
pop
jmp
mov
mull
sahf
push
push
call
inc
and
aas
sub
push
pop
push
ds
stc
add
lods
mov
mov
jbe
xlat
jecxz
outsb
sbb
jnp
cs
les
and
inc
sub
insb
insl
test
jle
fwait
xchg
and
pushf
nop
movsl
mov
xor
aad
xchg
aam
cli
and
or
xchg
and
jb
fimull
dec
in
push
ds
cmpsb
inc
pop
loop
mov
fsubl
or
lret
xor
jecxz
adc
addr16
adc
stos
enter
jmp
test
jl
adc
lock
or
ss
popf
cmp
xchg
jnp
jne
je
lock
pop
fmuls
or
inc
sarb
pop
xorl
repz
jle
loop
sub
mov
add
or
test
mov
sbb
jb
icebp
rol
inc
mov
mov
repz
mov
fisttps
fistpll
dec
loop
mov
push
mov
inc
leave
lahf
jmp
push
bound
ss
fs
cmp
gs
fisubrs
push
pop
mov
adc
enter
aad
repnz
mov
add
pop
lods
and
in
pushf
mov
sub
xor
pop
pop
mov
xchg
gs
repz
push
pop
mov
jbe
cwtl
push
jg
jne
jl
addl
xchg
imul
cltd
imulb
aad
lea
sub
or
cltd
jecxz
push
dec
mov
or
std
adc
xchg
xchg
and
lds
mov
adc
cmpl
jmp
adc
shll
inc
gs
sbb
xchg
jno
pop
cltd
jb
and
repz
inc
mov
ds
add
sbb
or
cmp
lock
pop
sub
cmp
mov
sub
jb
jne
xchg
popf
insl
pop
cmp
sub
lods
repnz
arpl
sbb
lret
mov
out
push
shlb
jnp
std
xor
and
add
enter
stos
inc
pop
pop
mov
cmpsb
dec
scas
imul
inc
dec
outsb
dec
or
and
test
fists
scas
mov
call
stc
mov
sbb
jp
mov
movsb
stos
push
cmp
or
push
mov
mov
das
or
test
xchg
push
jle
xchg
inc
xchg
ljmp
jle
imul
pusha
incl
mov
jecxz
xchg
and
pop
cld
push
or
xorl
xor
lret
xor
cmp
fsubl
jno
insl
loope
mov
inc
xchg
roll
pop
xchg
jecxz
lret
pusha
aam
xbegin
scas
shlb
loopne
lret
es
inc
lock
sbb
mov
pop
jnp
xor
dec
mov
ret
xor
and
mov
mov
jnp
ret
loope
ds
or
inc
mov
bound
jge
pop
inc
sarb
cmc
mov
push
xchg
leave
daa
daa
pop
sub
pushf
cltd
xor
sub
or
cld
push
jnp
xchg
jmp
mov
test
shl
cmp
add
imul
add
sti
cs
cwtl
cmp
out
out
cld
inc
push
adc
lcall
mov
jae
andl
xlat
xchg
inc
cmp
leave
push
push
jp
mov
cmp
addr16
out
popf
dec
pushf
lahf
lds
mov
inc
test
adc
enter
icebp
adc
roll
inc
pop
pop
xchg
mov
and
cld
xchg
ds
gs
rol
xchg
mov
mov
jmp
pop
push
mov
nop
mov
mov
jmp
inc
inc
adc
bound
pop
sub
test
aas
incb
pop
cs
out
sbb
repnz
sub
cmpsb
and
lds
sbb
fcomi
mov
mov
or
pop
push
xor
daa
aas
add
mov
js
icebp
adc
push
addl
mov
pop
movsb
cmp
push
xor
scas
push
sbb
xchg
shlb
adc
ret
stos
arpl
je
push
sbb
leave
push
mov
lock
jo
cmpsl
cmp
rcrb
jecxz
incl
xor
fistpll
ja
pop
jg
sub
xchg
adc
lods
lahf
jge
adc
inc
btc
daa
cmp
scas
iret
or
mov
out
inc
jne
fwait
nop
push
xchg
push
xor
jns
and
dec
xchg
mov
outsb
lods
loop
mov
lods
push
inc
push
ret
pop
lcall
dec
hlt
jle
mov
sbb
jae
xor
and
jbe
loope
pop
inc
leave
add
sti
lret
push
std
sub
fldl2t
jp
push
jp
imul
arpl
sub
rep
or
mov
cli
test
inc
movsl
sbbb
cltd
sti
jmp
dec
xchg
ret
sbb
mov
aas
movsl
or
dec
cmp
scas
push
push
clc
fildl
sbb
mov
cmp
fldenv
pop
add
dec
cmpsl
dec
fidivrs
mov
mov
test
daa
fs
test
pop
in
xor
cs
leave
cmc
xor
jle
pop
lea
sbb
mov
addl
insb
dec
bnd
pop
add
shll
in
push
sbb
mov
xchg
lret
push
repz
mov
aaa
push
aas
jmp
insb
xor
sub
outsl
movb
inc
out
mov
cli
cmp
xor
lret
es
jbe
push
imul
fidivrl
or
push
cltd
mov
mov
mov
xchg
pop
orb
mov
ror
pop
iret
or
sub
shlb
mov
mov
daa
inc
insb
popf
aad
sbb
xchg
jmp
jge
out
in
xorb
cli
and
mov
and
loop
jle
cwtl
jl
addr16
mov
push
test
xchg
pop
mov
xor
mov
push
insb
dec
push
mov
add
cmp
xor
stc
sbb
ljmp
scas
popf
movzwl
fwait
cmpsb
mov
test
mov
push
std
daa
mov
sub
mov
xchg
mov
and
mov
gs
or
dec
add
cli
xor
jns
gs
mov
or
je
xor
insb
add
sbb
scas
add
outsl
repnz
pop
lcall
test
push
sbb
icebp
pusha
mov
out
jae
push
mov
xchg
out
mov
ss
insb
jl
jmp
in
mov
sub
aas
cwtl
in
enter
lcall
lea
and
xorb
data16
aaa
and
sbb
cs
xchg
loope
and
popa
fcoml
inc
push
dec
and
lds
movsb
add
add
pop
cltd
push
pushf
ficompl
dec
push
xor
mov
std
pop
xlat
shrb
xchg
and
leave
xchg
or
mov
out
shrl
xchg
xor
jge
add
lahf
leave
inc
inc
mov
mov
push
jo
mov
roll
dec
dec
fbld
push
and
out
std
in
cmc
and
and
or
jecxz
ss
cmp
or
stc
cmp
pop
stc
xor
mov
pop
xchg
or
mov
sbb
jno
cltd
shlb
movsl
test
sbb
insl
aad
testl
push
or
cld
xor
fs
add
sbb
jae
mov
mov
mov
jbe
lret
scas
filds
push
push
dec
mov
ficoms
sti
sub
xor
in
dec
shlb
andl
cli
pushf
incb
sub
jbe
cwtl
and
ja
adc
cmp
std
and
add
mov
pop
mov
test
leave
and
aas
mov
pop
push
int3
mov
enter
and
test
js
mov
push
and
test
inc
loopne
add
rorb
sbb
jae
jns
jecxz
out
inc
jecxz
xchg
idivl
cmp
sahf
or
xor
sbb
pop
add
loopne
and
test
enter
orb
mov
pop
cmp
idivl
inc
mov
ret
popa
mov
sub
xchg
cmp
jle
push
ret
pop
faddp
sbb
jns
add
mov
test
dec
lods
push
imul
int
cmc
mov
in
sbb
clc
xor
dec
cld
cmp
mov
lds
rclb
loop
notb
dec
or
pop
push
ljmp
xor
xchg
popf
mov
push
sbb
leave
dec
pushf
xchg
fdivs
loop
jae
or
adc
cs
push
inc
mov
mov
xchg
clc
xlat
loopw
push
jo
push
cmp
fistl
popa
adc
ret
leave
lea
sbb
push
not
das
loope
and
imul
ds
xor
jl
mov
mov
scas
sbb
push
fstps
ror
call
adc
inc
leave
sbb
aaa
cmp
out
scas
push
out
sbb
call
int3
stc
xchg
sbb
dec
push
mov
jbe
mov
jns
shll
jo
xchg
movsl
jae
out
sti
roll
sbb
jnp
xlat
icebp
mov
aaa
cmp
xor
sbb
cmpsb
iret
imulb
add
pop
pusha
stos
loop
pop
lahf
repnz
adc
inc
add
fistpl
mov
add
xor
je
adc
push
jle
mov
cmp
lods
inc
inc
mov
iret
push
out
pmaxub
sub
pop
dec
loope
add
fwait
pop
jp
nop
neg
add
test
mov
fldcw
xchg
mov
sbb
inc
test
iret
movsl
mov
xchg
lcall
cli
call
add
cld
jb
mov
movsb
outsl
hlt
sbb
xchg
cmp
mov
stos
jl
in
lods
int3
add
or
test
enter
sub
loop
fldenv
jecxz
sbbl
sub
and
aad
inc
and
divb
pop
in
in
data16
imul
pop
jg
stos
inc
mov
dec
sub
lods
mov
insl
lods
sub
inc
push
inc
or
es
sbb
cli
pop
test
fisubl
cmp
sub
dec
jle
cmp
xor
xor
pop
mov
inc
xchg
pop
popa
cmpsl
push
aad
pop
or
aam
mov
scas
inc
pop
push
xor
pop
dec
mov
scas
test
jno
mov
cli
clc
stos
mov
jp
sub
sub
fdivrs
lods
ror
aas
mull
add
insl
or
pop
lcall
lret
adc
jns
daa
xchg
xchg
sbb
scas
scas
call
inc
pop
and
pop
aad
iret
insl
pop
push
push
dec
cmc
nop
mov
les
push
add
imul
out
lret
aad
jge
mov
mov
sti
jb
mov
sub
test
mov
lock
or
adc
pop
xor
cs
dec
scas
ljmp
add
out
jns
fwait
pop
jo
sub
std
and
mov
pop
inc
aad
push
pushf
fistpll
mov
out
push
sub
ret
inc
test
sbb
pop
mov
xor
mov
push
stos
push
push
imul
scas
pop
pop
int3
aas
xor
imull
and
pop
add
cmpl
and
mov
push
lahf
fs
mov
ret
xchg
scas
push
xlat
jns
fs
fcomps
aas
mov
stos
add
push
insb
jl
lahf
adc
aad
pop
cwtl
lds
push
push
mov
sbb
push
repz
ss
mov
ret
aad
sub
pushf
mov
push
mov
push
test
pusha
xor
jmp
cmp
inc
fnstenv
mov
push
dec
inc
mov
pop
adc
dec
mov
cmp
sbb
jmp
xlat
je
inc
adc
sub
sub
in
mov
dec
adc
push
xlat
movsb
cmpsb
xor
mov
lea
jge
mov
in
bound
sbb
adc
cs
mov
or
jno
call
pop
xchg
jge
sub
push
inc
adc
cli
shlb
inc
leave
pop
cmp
int3
jne
push
lods
ljmp
insb
movaps
popa
push
mov
cmp
cmpsl
shll
jns
stos
jbe
outsb
push
out
stc
cmp
je
int3
dec
inc
xchg
mov
leave
test
dec
jp
dec
int
das
dec
das
les
push
outsl
out
xchg
mov
jl
sbb
mov
mov
mov
arpl
add
inc
cmp
push
pop
cmp
stos
inc
sub
xchg
lret
fnsave
jnp
and
mov
adc
push
pop
loope
das
rolb
mov
mov
bsf
dec
inc
imul
jae
movl
mov
stos
loope
lahf
push
hlt
push
leave
inc
and
cmp
push
in
sbb
and
jp
and
ret
mov
or
pop
xor
mov
out
push
nop
arpl
adc
fcoml
enter
test
aad
cmp
fwait
mov
test
jg
adc
add
lock
push
or
es
mov
mov
jo
dec
clc
inc
jle
add
ja
stc
int
loopne
lods
inc
add
cli
sub
enter
jns
loope
add
neg
pop
shrb
fisubrs
xor
xor
in
dec
cwtl
mov
leave
jl
iret
xchg
cmp
mov
push
mov
jae
mov
cwtl
icebp
cmpb
xchg
xchg
cs
out
add
mov
stos
and
mov
or
inc
pop
scas
adc
and
pop
aaa
inc
aam
pop
xchg
pop
dec
movsl
fs
jmp
loope
iret
cltd
insl
jecxz
jnp
in
inc
mov
hlt
sbbb
sub
push
insb
mov
dec
stc
test
into
mov
inc
sub
add
fwait
div
fnstenv
arpl
xchg
jb
xchg
call
mov
dec
mov
shrl
jnp
insl
xor
out
pop
xor
xlat
in
jmp
por
jmp
xchg
fs
orb
xlat
mov
scas
repnz
mov
push
adc
add
test
cmp
out
ja
adc
inc
xchg
shll
inc
lods
sub
dec
sbb
daa
xor
and
adc
pop
sbb
scas
lock
sbb
das
icebp
jg
xchg
mov
mov
loopne
dec
inc
mov
lods
mov
dec
imul
push
push
lret
xchg
shll
rclb
xor
or
cltd
sahf
clc
int3
lret
jg
adc
into
shll
stc
fistpll
pop
push
jmp
int3
cmp
mov
mov
das
leave
std
jae
imul
cmp
sub
xor
jp
mov
sub
push
xchg
sti
pusha
inc
and
repz
ss
push
mov
sahf
jb
xor
adcb
les
rorl
imul
fildl
dec
sahf
or
xchg
dec
lock
js
xchg
xchg
mov
pushf
push
and
imul
repnz
rolb
dec
sahf
add
and
mov
pop
cld
mov
sub
sub
cltd
xchg
xor
add
jmp
mov
jge
aas
out
xor
insb
push
out
in
test
ja
jns
or
pusha
imul
movsl
mov
lods
pusha
sbb
enter
jae
bound
xchg
add
push
pop
repnz
pop
popa
mov
ss
jno
cltd
or
push
or
add
dec
lret
cmp
or
testl
insl
mov
mov
jg
lret
jb
ftst
cmp
add
xor
jg
sbbb
adcb
and
dec
mov
inc
jle
ret
iret
xchg
imul
pop
and
xchg
les
imul
lret
pop
daa
pusha
sbb
shll
fbld
and
sbb
jb
fildll
or
xchg
pop
das
add
enter
inc
out
sbb
int3
mov
cmp
sub
orb
shrl
ret
jno
sahf
imul
sbb
sbb
outsl
inc
sub
mov
andl
pop
sub
shrb
mov
daa
mov
xchg
xchg
jo
or
inc
pop
add
jnp
insl
fistpll
mov
xchg
dec
push
push
fistps
hlt
pop
inc
cmp
dec
out
push
adc
js
cmp
sbbl
cld
das
sub
pop
mov
add
call
jle
mov
icebp
cld
pop
pop
dec
in
out
lahf
out
lcall
int3
sahf
addr16
mov
das
dec
rcr
mov
or
mov
nop
lds
fisubs
clc
fs
add
dec
jg
outsb
mov
mov
cltd
push
ret
sub
fsub
jl
negl
lods
push
lods
jge
adcb
push
and
lock
movsb
jmp
movsb
push
stc
jnp
addr16
arpl
xor
test
cmpsl
pushf
ret
pusha
and
insl
jle
adcb
add
enter
out
jge
sub
xchg
pop
inc
or
div
adc
lcall
push
pop
adc
lods
leave
add
ljmp
cs
xchg
fwait
sbb
loopne
fwait
sti
or
das
mov
or
inc
scas
jns
or
imul
leave
aaa
aam
movsb
lods
pop
movsl
pop
lahf
sbb
fwait
stos
mov
dec
mov
and
jmp
int
add
jmp
repz
cltd
pop
cmc
loope
popf
jno
test
mov
pop
pop
or
scas
hlt
cmc
in
ret
aam
mov
adc
inc
fsubrl
in
and
jae
cmp
inc
mov
jle
imul
sub
sahf
cltd
hlt
push
sub
cwtl
ljmp
dec
aas
inc
add
add
sarb
dec
adc
or
push
mov
mov
fstpl
lret
mov
arpl
sbbb
dec
cmp
xchg
pop
mov
mov
push
bound
imul
gs
dec
add
adcl
popa
das
and
test
xchg
sub
lods
xchg
out
mov
xor
loopne
stc
pop
mov
fwait
mov
xor
mov
enter
stc
mov
shlb
push
dec
push
and
dec
cmp
jo
xchg
push
dec
loope
loope
and
lods
xor
mov
test
sub
adc
xchg
push
cmp
addl
pop
adc
cli
js
aad
sub
lret
call
cmp
inc
push
aam
cwtl
mov
xchg
push
sbb
push
jge
stc
mov
xchg
insl
xor
mov
xchg
or
inc
dec
and
xor
rcrl
data16
bound
add
repz
lea
idivl
push
out
pop
rclb
xchg
adc
inc
fisttpl
mov
and
addr16
jg
inc
adc
mov
xchg
int
out
pop
push
int3
xor
dec
repz
mov
rcr
pushf
shl
hlt
push
adc
pusha
test
repz
fsubrl
xchg
mov
add
sub
dec
add
push
or
iret
push
mov
lret
ret
lods
xor
xor
dec
andb
fwait
out
mov
gs
jb
mov
mov
inc
test
sbb
insb
jbe
inc
ss
movsl
pusha
scas
popf
adc
xchg
shll
popl
in
pop
jbe
aaa
scas
add
mov
push
lret
stos
ret
pop
fcompl
insb
xchg
enter
mov
xchg
mov
lods
add
cmp
cli
dec
push
insl
push
dec
jbe
or
push
ret
jns
xlat
sub
cmp
xchg
in
jecxz
dec
mov
adc
test
push
jg
jg
dec
xchg
lods
stc
pop
lea
jl
and
jmp
xchg
fldenv
repz
mov
iret
jb
and
mov
lock
sahf
cmp
mov
hlt
ficoml
fnstcw
cmp
fs
jb
jae
test
xor
lret
stc
cmpsb
add
sbb
call
scas
aaa
sbb
fidivrs
jecxz
out
inc
fnstsw
jge
loopne
out
dec
lahf
xchg
je
icebp
sub
and
ret
xorb
push
xchg
jb
js
insl
lods
in
outsl
sub
popf
xor
sar
cmp
aam
sti
xchg
lcall
cs
inc
xor
mov
and
add
adc
mov
adc
lods
cmp
or
push
lahf
pop
add
sar
sub
pop
dec
int3
mov
loopne
add
add
mov
push
iret
push
xchg
and
pushf
mov
int3
cwtl
xorl
shrl
sbb
outsb
shr
je
movsl
faddl
jecxz
sti
or
addr16
lods
ret
stos
dec
jbe
fdivp
dec
and
enter
das
sbb
leave
leave
loope
out
subb
inc
aas
or
and
mov
jne
mov
jae
mov
mov
into
fwait
push
jbe
loop
or
adc
lea
test
fldenv
mov
jb
inc
fwait
mov
and
sub
xchg
inc
sti
xchg
nop
lds
dec
mov
fadds
jmp
aaa
aad
mov
pop
in
mov
dec
inc
and
jae
xor
jnp
add
pop
ret
sub
mov
dec
sbb
add
dec
outsb
xor
mov
pop
add
movsl
or
mov
dec
xchg
sub
dec
xor
sub
and
dec
imul
ficomps
jmp
call
cltd
or
rclb
sbb
jle
xchg
test
mov
paddusb
xor
insb
stc
shrb
inc
sti
sub
cmp
or
mov
pop
and
push
addl
inc
cmp
mov
jb
pop
xchg
les
stc
sbb
pop
std
xchg
enter
addr16
push
dec
ja
jp
rcrb
and
pop
dec
cmp
arpl
xchg
add
stos
xchg
add
scas
lods
sbb
mov
outsl
out
dec
stos
imul
dec
jbe
hlt
add
aad
outsb
xor
test
jecxz
mov
sub
sbb
jo
mov
pushf
dec
mov
aaa
mov
push
xor
mov
push
int3
outsl
test
adc
xlat
dec
xor
pop
cli
mull
inc
push
mov
add
xlat
pop
pop
cmp
fdivl
jle
or
or
sahf
jmp
jl
je
mov
cmp
cwtl
lahf
jb
clc
cmp
push
andb
xlat
sahf
or
add
mov
mov
or
jae
mov
and
aad
xchg
inc
xor
lock
fdivrp
push
sbb
mov
inc
test
fldt
xchg
cld
dec
sti
jl
out
sub
shr
push
rcrb
jne
fwait
dec
clc
cmp
in
adc
dec
lock
aam
fcoms
movsb
jle
sub
outsl
outsb
xlat
mov
dec
rclb
inc
std
daa
and
lret
inc
push
pop
lcall
stos
push
ret
jge
push
scas
jb
sub
je
mov
and
mov
fsubs
dec
rcl
sahf
xchg
mov
mov
fcmovnb
pop
in
push
xor
mov
add
fwait
xor
test
gs
pop
orb
cmp
sub
jns
jge
push
and
out
jg
aam
push
mov
call
dec
jle
cmp
mov
mov
jno
enter
fldenv
daa
popf
xor
cmp
mov
mov
fdivrp
fnstcw
xlat
xchg
mov
dec
xchg
sub
xchg
xor
mov
test
stc
pop
cmpsl
cltd
push
imul
ds
fs
or
sub
xchg
mov
outsb
mov
pop
xor
hlt
in
pop
dec
cmp
frstor
enter
xchg
cmpsl
or
cmp
push
cld
inc
xor
das
sub
daa
mov
xor
jno
mov
repz
jle
jg
mov
lahf
sub
mov
out
sbb
scas
icebp
cmpsl
iret
jmp
and
xor
mov
lcall
ror
push
test
or
sub
xchg
imul
push
jne
and
mov
hlt
adcb
out
pop
cmp
lcall
cmp
test
push
jne
or
and
insl
fxch
dec
add
sub
aam
add
test
das
mov
adc
jo
mov
jecxz
pop
repnz
sbb
inc
insb
roll
lret
rcll
xor
lods
andl
sbb
lret
add
mov
cmp
dec
movsb
out
out
bound
mov
hlt
jl
and
loopne
xchg
orl
or
or
jge
ja
xor
fucomi
inc
cmp
or
adc
popa
cmp
cmp
sub
cmpsb
jo
inc
inc
pop
xor
jle
jle
jg
inc
out
aam
fiaddl
mov
push
or
xor
inc
loop
pop
enter
and
mov
jb
inc
sbb
insl
mov
rorb
jns
dec
pop
lcall
pop
push
cld
fistl
mov
jno
movsl
int3
iret
into
das
mov
frstor
xchg
adc
mov
push
mov
inc
mov
or
ss
arpl
lods
icebp
dec
pop
fldl
fwait
aas
or
jo
repnz
mov
icebp
clc
daa
and
mov
inc
cmpsb
adc
lahf
scas
vpaddsw
fucompp
adc
and
shrl
jno
cltd
into
mov
fsts
scas
jb
mov
add
cmp
mov
loope
int3
jnp
je
sbb
dec
shrb
in
sub
aas
jl
inc
mov
fs
cmp
orb
mov
js
sbb
push
cmpl
out
arpl
pop
addl
pop
jg
cmp
scas
lahf
pop
or
les
and
xchg
insb
stos
movsb
push
cld
jecxz
rorl
and
pop
inc
jnp
mov
mov
insl
lret
popa
lods
lock
add
pop
or
pop
fidivrl
rolb
aam
aaa
adc
xchg
cmc
stos
sbb
or
mov
fcoml
loope
movsl
pop
pushf
pop
jp
loope
rol
cmp
dec
repnz
dec
inc
sub
fistpl
lret
xor
arpl
xchg
stc
pop
lods
mov
jle
ficoml
loope
sbb
js
outsb
inc
fwait
sbb
jb
jmp
lcall
jns
mov
scas
pop
cli
dec
jae
jmp
or
pop
dec
ljmp
pop
mov
fld
ss
movsb
mov
mov
lret
les
scas
out
enter
shr
movb
dec
cld
lret
or
stos
negb
outsb
outsb
orb
scas
sub
jmp
ja
cld
subb
aad
sub
and
test
jae
jle
adc
lods
cmp
add
mov
sbb
inc
sub
adc
orl
lds
das
jo
cmp
mov
add
dec
fmuls
mov
pusha
out
sbb
jae
mov
outsl
test
add
bound
and
les
mov
int3
sub
pushf
sbb
notl
dec
xchg
cltd
outsb
pop
xchg
mov
inc
outsb
xchg
adc
pop
fucomi
mov
fsts
loope
cmp
dec
insb
jp
or
mov
icebp
mov
hlt
aas
testb
enter
pop
fstpl
push
fadds
shr
inc
popa
mov
push
jge
xchg
mov
aaa
adc
outsb
push
movsb
or
mov
pop
push
cld
popa
inc
loopne
es
dec
add
mov
cmp
out
daa
pop
repz
mov
add
jae
jge
mov
or
idivb
mov
sarb
cltd
sub
jmp
lds
sbb
mov
cmp
mov
lret
or
push
out
stos
arpl
leave
inc
movsb
sbb
inc
mov
cmp
jno
lahf
movb
xchg
jns
lcall
out
mov
add
ficompl
push
addr16
dec
out
jp
hlt
add
bndstx
int
mov
pop
aad
outsl
fs
inc
mov
lcall
repnz
lret
insl
or
ss
lret
hlt
sarb
sbb
sub
lret
push
adc
xchg
sti
xchg
and
ret
pop
adc
cs
mov
xor
adc
shl
flds
addb
inc
sub
sub
dec
adc
cmp
sbb
add
sub
pusha
push
sbb
rorl
mov
jmp
imul
xchg
cmp
push
psubsb
jmp
mov
add
les
dec
and
addr16
je
xchg
lcall
sbb
mov
jg
imul
dec
mov
repz
ficomps
out
call
testl
subl
cmp
jb
es
enter
sbb
inc
fcoms
in
mov
and
ljmp
pop
fcoml
jmp
sti
in
int
test
push
dec
lea
mov
and
leave
dec
push
mov
dec
adc
bound
inc
pop
and
in
faddp
mov
repz
mulb
lea
mov
mov
xchg
icebp
dec
cmp
pop
jg
lret
sbb
xor
and
mov
repz
inc
sbb
xlat
fadd
sbb
loopne
subb
push
pop
xor
dec
lcall
ljmp
fiadds
jne
repz
push
jge
repnz
xor
ljmp
mov
pushl
mov
cmp
push
xor
popf
xor
mov
orb
stc
test
jb
xchg
adc
inc
ljmp
in
loope
jns
lea
push
inc
xchg
push
lods
sti
dec
jp
inc
jge
and
sbb
incb
adcb
into
je
mov
add
out
int
popa
subb
and
add
imul
sbb
pushf
pop
and
notl
sub
stos
das
outsl
mov
in
mov
jle,pn
lock
cmp
call
and
scas
loope
and
ficomps
bound
das
loope
mov
mov
test
popf
rorl
xchg
aaa
lret
add
sti
push
mov
mov
movsl
test
test
lods
js
mov
sub
jge
ljmp
push
loopne
leave
mov
lahf
ljmp
test
arpl
imul
je
int3
inc
and
outsb
jne
dec
loopne
mov
das
addr16
in
stos
xor
mov
pushl
arpl
fnsave
out
or
jns
dec
loope
movsb
push
dec
loop
shll
out
jne
lcall
jno
jecxz
jp
sub
lahf
hlt
shl
push
push
sbb
pop
jb
inc
adc
int3
add
jl
pop
es
inc
push
lret
popf
xchg
sbb
shll
cmc
cmpsb
cmpsb
outsb
push
pusha
repz
xchg
jo
push
jnp
fnstsw
or
in
push
and
add
and
mov
insl
push
add
inc
faddl
in
cmpb
push
clc
jno
andb
pop
jo
inc
inc
xchg
je
fstpt
mov
imul
push
clc
xchg
fisttps
push
jns
jb
adc
mov
inc
mov
dec
mov
repnz
sbb
adc
xor
sti
andl
dec
mov
cmp
dec
pop
fnsave
jno
mov
xor
jnp
daa
push
adc
cld
dec
cmpsl
das
cs
or
xor
sub
int3
push
xchg
adc
mov
xchg
dec
mov
dec
hlt
test
pop
in
out
push
cs
pushf
mov
test
add
rcll
lret
outsb
or
dec
xchg
testl
pop
in
jl
movsl
or
sbbb
add
push
xlat
sub
jne
mov
and
jbe
nop
les
lcall
jge
xchg
sub
mov
ja
adcl
sbbl
and
pop
fcmovnu
pop
inc
sarb
and
or
cmp
out
out
lret
xor
or
jbe
aam
lods
dec
out
sub
pop
pop
sub
lea
lcall
adc
daa
testb
lods
push
rolb
xchg
dec
sbb
mov
pop
fadd
cmpsl
in
jl
add
cwtl
mov
rcll
out
push
push
test
mov
pop
xor
mov
push
pushf
pop
les
mov
lods
mov
cmp
ret
mov
das
push
add
jno
push
mov
in
cmc
or
jle
or
movsl
test
and
sbb
in
jl
xor
jge
enter
push
jo
and
jle
roll
rcr
aad
xor
and
cwtl
fnstenv
mov
sbb
hlt
mov
shlb
lret
dec
sahf
fwait
dec
mov
lods
jae
dec
in
cmp
or
loop
ja
mov
inc
das
add
scas
fcompl
pop
clc
pop
adc
sub
or
sbb
pop
iret
bound
js
xchg
bound
pop
rcrl
roll
sbb
cmp
cmp
and
jg
clc
xchg
xchg
push
ret
xchg
aas
ja
pop
mov
shll
or
ffreep
or
dec
mov
orl
cmp
loope
and
pusha
mov
jp
pushl
cmp
je
xchg
push
pop
lret
out
leave
arpl
push
xchg
dec
adc
jo
aas
mov
and
cmpsl
lock
adc
and
sbb
mov
xchg
insl
inc
or
ds
or
cwtl
cmp
icebp
arpl
xchg
sbb
and
dec
stos
cmp
lds
inc
inc
loope
das
push
aaa
jns
popf
xchg
push
in
sub
mov
and
pop
imulb
ljmp
pop
mov
mov
mov
lahf
inc
stos
fsts
adc
ret
adc
dec
jg
inc
sar
bound
xchg
jl
in
test
pop
in
jbe
sub
xor
jle
cmp
inc
dec
push
ja
lods
inc
or
clc
lret
lods
inc
arpl
scas
pop
mov
cmp
dec
cmpsl
cmc
hlt
xchg
nop
call
inc
sub
in
out
sarb
call
addr16
xchg
lock
xchg
or
inc
adc
mov
pop
je
aad
xchg
lret
mov
fimuls
sti
adc
dec
sbb
sbb
in
jecxz
rorl
into
cmp
stos
mov
das
and
inc
pop
adc
test
rorb
or
test
pop
add
addr16
sub
add
push
add
cmp
jb
and
test
in
shrb
ret
cmpsl
sbb
add
pusha
mov
in
dec
push
mov
mov
or
lahf
mov
fidivrl
mov
mov
xchg
mov
scas
xor
jbe
inc
in
xor
rclb
push
cs
mov
and
cmpsl
incb
mov
mov
movsb
jae
in
jg
pop
jg
push
out
push
pop
jle
iret
mov
lds
test
pusha
mov
add
push
pushf
cs
mov
int3
add
xchg
test
and
cmp
dec
pop
sbb
mov
or
in
insb
outsl
push
arpl
popl
daa
xchg
pop
jbe
aaa
jge
xor
movsb
cmpsb
test
push
sti
fucom
jns
lahf
push
test
mov
cli
push
mov
out
inc
pop
mov
push
or
insl
dec
imul
lea
mov
nop
daa
sub
adc
xchg
dec
dec
jp
sahf
mov
push
hlt
ret
xlat
mov
faddl
push
mov
ret
jl
xchg
inc
scas
push
jne
mov
lret
test
fsubs
sub
into
vdivss
gs
jecxz
roll
call
ficoml
adc
pop
out
xor
test
sbb
cmp
cmp
xor
jb
scas
adc
popa
rclb
out
and
adc
clc
pop
and
outsl
pop
push
shrl
fimuls
fsincos
shlb
gs
cs
mov
sbb
std
push
sub
cmp
in
pop
xchg
xlat
cmp
testb
mov
loopne
nop
adc
in
jmp
cltd
out
cmp
data16
mov
mov
pop
xor
inc
test
dec
sub
mov
jne
movsl
lods
in
sbb
lahf
int
or
sarl
sub
jbe
pop
lock
sbb
stc
stos
ja
mov
outsb
push
inc
or
add
push
test
adc
stc
and
pop
ret
shr
push
or
push
in
pop
cmpsl
pop
scas
or
stos
and
pop
xor
test
pop
jb
addr16
stos
fs
daa
aas
lret
leave
icebp
ret
and
or
ja
in
or
or
xchg
loope
push
mov
movsb
ret
mov
push
enter
into
ljmp
mov
lock
sbb
mov
sbb
add
jbe
insb
mov
aas
inc
ljmp
clc
mov
mov
adc
xor
call
mov
popf
outsl
jl
lds
pop
sub
andb
lods
dec
cmp
cmp
push
mov
jmp
mov
movb
call
clc
daa
sti
sbb
pop
jp
and
movsb
inc
sub
inc
les
jo
or
rcr
sbb
add
out
pop
push
add
push
sbb
sub
mov
arpl
scas
sbb
dec
inc
leave
push
or
out
addr16
adc
pop
jb
mov
mov
scas
in
jg
subb
pop
iret
lea
jle
cmp
dec
jne
and
or
cmp
mov
inc
out
add
pop
sti
aas
xchg
in
jl
xchg
sbb
fcompl
nop
out
push
sub
pop
shrb
xor
sbb
inc
mov
cmpb
mov
stos
dec
inc
push
in
out
add
mov
ljmp
loope
out
jle
fnstcw
out
and
push
in
jno
cmp
mov
cmp
ret
pop
lods
jecxz,pn
shlb
fnstcw
imull
je
or
out
add
into
sbb
cmpsb
fimuls
jae
cmpsb
and
push
in
enter
out
xor
dec
lock
decl
push
sbb
sub
inc
repnz
jnp
clc
and
pop
mov
xchg
mov
adc
pop
and
movsb
testb
inc
out
shlb
es
add
lret
fdivr
or
fwait
pusha
aam
pop
sub
outsb
pop
fnstenv
mov
cmpsl
filds
loop
xor
jmp
add
fsubr
icebp
adc
jge
dec
lock
lcall
cmp
imul
lock
subb
mov
sbb
stc
pop
repz
inc
ljmp
push
inc
out
mov
dec
xor
dec
mul
mov
xchg
mov
pop
sbbb
sahf
pop
test
pop
mov
fldl
fcompl
sahf
mov
bound
lock
and
or
mov
imul
sbb
es
popa
dec
inc
jg
xor
mov
sbb
scas
cltd
mov
dec
popf
xor
mov
les
add
xchg
inc
sbb
cmpsl
mov
pop
adc
xchg
mov
sti
pop
push
pop
jno
std
test
sbb
xlat
je
mov
pop
adc
mov
ss
ss
and
xor
or
lcall
out
fnsave
cmovbe
mov
and
andl
add
or
shll
pusha
subl
fdivrl
clc
std
mov
or
lahf
insb
or
pop
ret
push
jge
insl
fmuls
loopne
test
dec
sbbb
add
lea
imul
push
jns
inc
and
adc
mov
sbb
mov
and
mov
adc
cmp
cmp
or
test
iret
ss
mov
ss
popf
or
test
pop
xchg
fs
into
mov
arpl
sahf
negl
rcr
dec
sbb
xchg
adc
pop
dec
push
push
lret
or
fsubrp
pop
jne
mov
aad
and
dec
add
mov
push
faddl
xlat
push
insb
cli
mov
cld
add
dec
scas
push
scas
pushl
inc
adc
jb
test
cmpsb
mov
push
imul
jp
add
popf
sbb
cld
xchg
or
pop
popf
sbb
and
into
rolb
mov
shl
shll
cmpsl
mov
mov
rep
loope
xor
push
sub
outsb
inc
jg
xor
jl
lcall
popf
mov
fisubl
fs
mov
push
hlt
pop
mov
inc
mov
nop
fsubs
loope
fcmovnu
adc
insl
lret
out
testl
push
arpl
push
and
out
aas
in
arpl
dec
mov
sub
fists
jle
into
jge
sbb
sub
xor
cs
leave
mov
jmp
push
and
fcoml
push
mov
shl
dec
mov
cmp
pop
inc
mov
xchg
and
pop
xchg
stc
dec
mov
lods
stos
addl
xor
pop
icebp
test
dec
shrl
popf
dec
std
mov
sbb
jnp
dec
das
dec
xchg
mov
cmp
clc
push
int3
imul
mov
fldcw
movsl
incb
mov
dec
int3
cmc
pop
pop
loopne
inc
idivl
shl
mov
adc
sbb
add
add
rcrb
mov
adc
pop
sbb
lods
inc
movsl
in
pusha
fwait
sbb
mov
out
cmp
pushf
lahf
dec
pop
popa
push
pop
lret
push
mov
popa
hlt
fcoml
mov
inc
je
cmc
fs
es
mov
xchg
out
xchg
push
and
mov
mov
lods
mov
and
testl
and
sub
dec
mov
push
bound
lods
int3
insl
mov
jne
push
fistpl
bound
xchg
jg
lahf
xchg
fcoml
stc
insb
test
mov
jp
fistps
outsl
mov
stos
icebp
pushf
gs
and
jecxz
es
add
popf
or
mov
dec
jb
adc
int3
add
in
or
cli
mov
or
sbb
fidivs
and
push
les
sti
sub
cmpsl
iret
cmpsl
aam
sub
push
or
popa
mov
inc
cltd
or
mov
mov
push
cmp
push
daa
fisubs
in
js
inc
test
mov
fisubl
add
lods
or
push
in
fdivp
jle
out
sti
fwait
loope
call
testb
and
push
dec
arpl
fs
inc
mov
mov
out
inc
sbb
adc
xchg
lock
sub
push
mov
cmp
mov
and
mov
jne
and
sub
out
dec
mov
jp
sbb
add
mov
test
ret
adc
push
push
jle
rolb
int3
push
push
fwait
inc
xor
cli
push
pop
sbb
repnz
lds
or
mov
clc
sti
inc
sub
rep
jp
cmpsl
fdivrl
mov
jae
fiadds
leave
cltd
or
sub
cmc
inc
mov
clc
add
and
or
jns
loop
xchg
into
repz
test
dec
loopne
mov
cmp
dec
or
sbb
icebp
push
sbb
lds
jo
fwait
stc
and
aas
rorb
mov
sbb
add
fcmovb
loope
jle
mov
xchg
push
mov
jb
cmp
insl
xchg
jle
dec
mov
test
push
testl
fidivrl
push
leave
fildl
test
inc
or
add
mov
sub
mov
inc
popf
adc
test
add
shl
mov
lods
pop
or
sub
push
push
scas
sti
xchg
mov
in
scas
and
test
push
sahf
jb
je
fs
jmp
push
jnp
repz
or
arpl
pop
jmp
push
xor
in
mov
or
push
push
sbb
jne
lret
xor
sub
add
imul
fisttpll
xor
test
aas
mov
out
mov
cld
jp
add
lea
call
sbb
xchg
dec
sub
cs
xchg
pop
test
loopne
cwtl
mov
stc
cmp
mov
lret
sbb
fwait
in
cmp
in
jb
mov
cmc
or
cmp
push
jno
sbb
cmc
push
adc
mov
mov
daa
data16
cmp
dec
push
adc
xor
lea
sahf
or
repnz
mov
fdivrl
xchg
dec
fadd
sahf
mov
cmpsl
cmp
mov
xor
sbb
push
mov
mov
jno
sub
andb
jle
jle
mov
adc
cmp
test
dec
xor
fucomi
jmp
cmpl
sub
icebp
fwait
cmp
repnz
shlb
jle
cmp
inc
popa
outsl
and
mov
adc
stos
mov
and
sahf
insl
jge
int
adc
mov
imul
clc
sahf
pop
or
ret
lods
in
mov
cli
sub
insb
aad
jno
push
ljmp
mov
scas
mov
mov
and
repnz
cmp
xchg
cmc
xchg
sbb
faddl
fcompl
sbb
leave
es
sbb
nop
jne
push
mov
xchg
fsubr
out
lods
mov
or
adc
cmp
bound
pop
and
mov
loopne
mov
mov
sti
fsub
icebp
js
add
cmc
jle
and
addr16
sbb
pop
dec
and
sbb
mov
rcll
adc
pop
pop
stos
mov
mov
shl
pextrw
mov
push
ret
xchg
and
fsub
fsubs
pop
aam
xchg
add
xor
dec
pop
and
out
dec
mov
movsb
push
es
inc
clc
lea
sbb
or
xor
das
les
cmpsb
xchg
dec
xchg
mov
int3
adcb
jb
pop
hlt
sub
mov
or
pop
outsb
mov
pop
repz
daa
data16
mov
dec
xchg
nop
mov
dec
cwtl
sbb
int3
inc
les
fwait
enter
pop
pop
push
stos
mov
adc
jne
dec
sbb
pop
cmc
out
inc
repnz
mov
cltd
fcoms
lahf
push
xchg
adc
cmp
cld
pop
adc
jb
shl
inc
inc
adc
aas
xor
push
lds
ja
lock
jge
pop
xor
jge
push
cmc
arpl
insb
and
mov
dec
mov
xchg
adc
dec
gs
lret
mov
mov
lods
das
mov
mov
dec
fs
test
or
gs
dec
mov
xchg
sbb
push
fdivs
pop
addl
addr16
adc
sbb
fwait
xor
cwtl
cwtl
push
push
mov
lods
cmp
cmp
sub
cli
ja
mov
jmp
dec
mov
jge
je
aam
xchg
xchg
add
cmp
arpl
xor
movsb
clc
pop
cli
push
clc
inc
dec
int3
cmp
adc
fidivl
sub
inc
xchg
xchg
in
pushf
sarb
adc
lods
lahf
push
sbb
pushf
ficompl
mov
lret
es
dec
in
and
mov
popa
hlt
cmp
aad
mov
adc
push
arpl
add
in
loopne
outsl
jno
outsl
and
rclb
je
les
and
ljmp
and
sfence
pop
dec
xchg
lods
data16
cld
ja
out
jno
sti
outsb
xor
adc
lret
call
std
enter
pop
xchg
dec
pop
inc
insl
fwait
mov
cltd
aam
lds
jne
and
xchg
and
test
jmp
insb
insb
stos
shrb
pop
sbb
ret
cwtl
dec
and
ljmp
pop
lock
and
in
push
imul
adc
cwtl
ljmp
mov
adc
xor
jg
aas
xor
jmp
dec
xchg
outsb
adc
xchg
jmp
and
mov
loopne
fsubrl
adc
pop
ljmp
hlt
bound
aas
shrb
jns
scas
or
mov
imul
in
lock
loopne
js
jmp
dec
push
std
mov
add
push
es
push
sti
adc
test
jg
xor
mov
adc
or
sub
mov
fidivs
scas
daa
aaa
push
sbb
jae
cmc
mov
ljmp
xchg
xchg
mov
cwtl
pop
dec
leave
popa
std
dec
aad
or
in
stos
outsl
popa
adc
mov
fwait
jmp
dec
pop
test
cmp
dec
pushf
stos
andl
dec
fcomps
adc
inc
sub
mov
jl
pusha
push
les
mov
out
dec
sub
mov
fsubrl
gs
sbb
mov
xor
into
xchg
ss
mov
aas
add
lock
shrl
inc
push
sub
outsb
add
jp
jecxz
mov
push
dec
frstor
xchg
pop
push
pusha
push
in
sbb
das
sbb
scas
clc
stos
cmp
cmp
pop
std
mov
enter
mov
lea
movsb
pop
push
dec
repnz
mov
push
add
icebp
mov
jb
sub
push
sbb
xchg
insb
push
jb
cmp
jl
fs
add
mov
arpl
fwait
mov
loop
adc
jecxz
hlt
and
mov
push
xor
and
jmp
stos
push
lods
inc
mov
sub
cld
push
xchg
cwtl
mov
dec
nop
imul
xchg
sub
pop
lods
mov
xchg
leave
aad
xor
pusha
mov
pop
push
pop
mov
gs
xchg
sbbl
inc
pop
fidivs
jle
sub
cmp
mov
jmp
cmp
jle
jne
sub
mov
test
mov
mov
imul
push
adc
aam
stos
sbb
dec
mov
xor
mov
cmp
xchg
push
sahf
mov
lahf
out
cmp
jmp
mov
lcall
pop
mull
cmp
sahf
jno
in
add
in
inc
je
pop
mov
jp
pop
dec
aad
cmc
fwait
popf
push
pop
or
xchg
mov
cmp
imul
and
ljmp
neg
popa
arpl
fnstsw
and
add
and
fstl
cmp
fucom
push
dec
inc
and
frstor
rcll
outsl
insl
sub
movsb
ss
fiadds
xlat
call
xchg
sbb
push
add
inc
lret
xchg
or
pop
add
add
call
repz
jge
mov
gs
pop
inc
nop
loopne
cmp
jne
ja
sbb
jge
jp
cmpsb
je
ja
icebp
xor
mov
in
imul
jae
dec
sbbb
sti
mov
sub
xor
or
pushf
cmp
inc
cmp
mov
inc
xchg
jle
xor
mov
mov
bound
lret
subl
jge
dec
stc
iret
addr16
mov
fcoml
mov
fadds
aas
cmpsl
cmp
ret
fwait
jne
mov
sub
sbb
sbb
xlat
cltd
or
loope
cld
xchg
je
minps
gs
setl
fidivs
adc
cs
or
pop
mov
das
dec
inc
mov
cltd
jp
or
ljmp
cwtl
jns
inc
push
add
into
insb
jae
cli
or
cmp
std
push
sub
jo
push
scas
jno
stos
stos
ret
iret
mov
icebp
mov
les
mov
push
inc
cmp
jne
sti
scas
stos
aam
or
fisubl
nop
cmp
xor
adc
jge
lea
add
xchg
or
dec
xchg
cmp
inc
jo
rorb
or
pop
and
data16
shr
push
inc
testb
jne
adc
stos
hlt
mov
bnd
sbbb
mov
loopne
gs
mov
movsb
jl
cld
or
in
pop
setbe
mov
sarb
sub
or
xor
outsb
ja
cwtl
xorl
xchg
or
mov
filds
pop
icebp
jnp
xorl
mov
rcrl
jmp
punpcklwd
xor
fmull
shrl
lods
mov
icebp
lods
inc
pop
push
pop
sub
retw
lds
mov
cli
cmpsl
scas
int
inc
shrl
mov
mov
sbb
pop
mov
pop
fldl
jg
ffree
mov
xchg
push
or
pop
sub
adc
aaa
add
sahf
jl
cmp
nop
and
shrb
mov
push
jle
or
lods
adc
or
mov
repnz
lock
sub
dec
movsl
mov
sub
je
jbe
or
scas
jmp
push
or
push
xor
dec
cmp
pop
lea
leave
aam
repz
bound
ja
out
stc
pusha
imul
fs
mov
adc
out
dec
jnp
jle
mov
ss
or
inc
adc
cmp
mov
sub
stos
popa
mov
mov
pusha
cli
cmp
pop
mov
ljmp
mov
dec
push
cmpsl
js
mov
pusha
adc
sub
mov
mov
jnp
mov
shrb
iret
test
sub
push
sub
in
mov
push
mov
mov
arpl
push
stos
and
or
mov
sub
and
mov
add
clc
pop
pop
inc
test
xchg
jge
stos
hlt
inc
dec
dec
mov
push
fcmovnu
pushf
sbbb
sbb
mov
cmpsb
adc
mov
call
repz
and
jns
das
out
push
ljmp
mov
nop
cmp
rol
jp
push
sub
sbb
aad
mov
jl
pop
imul
lock
push
testb
outsl
test
daa
aad
adc
js
adc
or
adc
test
sarb
inc
cmpsb
sbb
lret
sbb
loopne
jb
scas
mov
and
andl
sub
stos
divl
aad
lock
popa
jne
adc
jno
pop
imul
and
sbbb
movsl
inc
es
imul
fidivrs
negl
fisubrs
pop
nop
dec
mov
mov
arpl
add
pop
cld
adc
xchg
pop
in
dec
mov
movsl
imul
lcall
jae
cmc
push
lds
cmp
mov
sub
lcall
lods
push
fistpl
pushf
dec
pop
sub
mov
mov
aad
inc
add
xor
push
scas
orb
xchg
fiaddl
stc
adcb
es
jl
or
sbb
xchg
mov
test
push
std
mov
lods
sbb
inc
gs
call
cmp
lahf
xchg
mov
adc
add
jbe
jl
icebp
popa
mov
test
daa
jmp
push
hlt
bound
in
inc
xorl
call
sbb
add
xlat
push
jb
int3
nop
sbb
jg
pop
or
push
mov
xor
daa
dec
rcl
add
imul
push
outsl
push
dec
mov
add
andb
xchg
lds
test
in
pop
or
data16
sub
lcall
out
xor
add
cmpb
stos
outsl
mov
ds
or
ficompl
pusha
and
xchg
repnz
pusha
sbb
jb
push
xor
and
inc
mov
cmp
jle
mov
pop
movsl
mov
leave
dec
add
xchg
mov
jnp
mov
mov
or
sub
push
mov
cltd
adc
fistpl
push
hlt
fs
or
sahf
mov
cmpsl
lahf
and
es
out
sbb
mov
xor
loop
ds
iret
add
lahf
inc
aam
into
int
lods
cmpsl
hlt
loope
iret
popf
mov
cmp
sub
sti
mov
push
outsl
mov
mov
ja
pop
scas
push
mov
lock
pop
xchg
stc
imul
sbb
lcall
cmp
mov
fiaddl
cmp
int3
mov
data16
and
add
mov
jl
mov
dec
int3
fidivrs
idivb
mov
mov
pusha
pusha
ds
push
addr16
mov
mov
test
out
out
jb
xchg
push
push
test
adcl
pop
add
inc
push
xchg
xchg
mov
mov
add
xor
push
xor
push
enter
jns
lods
std
mov
ss
in
dec
lahf
push
lods
std
xchg
nop
xchg
mov
xchg
adc
inc
jae
ja
enter
std
xchg
xchg
and
and
testb
scas
adc
push
mov
movsb
cmp
inc
push
mov
xor
daa
clc
std
xor
ljmp
adc
sub
leave
mov
fwait
sub
dec
lret
add
xchg
mov
movsl
sbbl
insl
and
sub
cmp
cmp
cmp
imul
dec
inc
insl
arpl
ret
adc
test
mov
icebp
ret
jge
lahf
loop
fucom
hlt
aam
mov
jno
inc
xorl
jae
shll
adc
mov
jmp
mov
cmpsb
xor
sub
mov
test
jle
push
adc
divb
pop
mov
repz
data16
andb
ds
xchg
sti
in
push
bound
inc
loop
sahf
xor
inc
lcall
call
lods
and
dec
jmp
mov
dec
cltd
xchg
cmpsb
in
adc
mov
xor
into
test
cmp
pop
adc
fs
stos
sarl
dec
std
test
push
xor
cs
cmp
adcb
into
jbe
mov
xchg
fsub
iret
push
mov
adc
in
mov
cld
jge
jno
jmp
cmpsl
addr16
test
cmpsb
inc
cs
adc
mov
enter
shrl
or
insb
int
ss
inc
test
or
pop
jp
pop
ljmp
sbb
cmpl
aad
mov
cmpsb
push
hlt
rolb
xor
mov
gs
pop
outsb
sub
and
and
cli
in
mov
es
shr
mov
mov
popa
jnp
loopne
in
scas
jecxz
out
shl
lret
dec
jno
mov
xor
cwtl
imul
inc
sbb
sub
mov
sahf
aas
dec
jmp
popf
ja
test
pop
xor
sbb
mov
jnp
movsb
xor
int
and
sbb
jb
out
jg
ficomps
xchg
xchg
aas
push
push
dec
or
jb
sbb
sub
mov
pop
mov
movsl
push
dec
jg
out
pop
or
mov
jno
dec
jp
fwait
insb
je
adc
push
fdivs
xchg
cmp
mov
cmp
jae
or
lahf
xor
sub
jns
icebp
lds
mov
pop
mov
testl
sub
stos
mov
dec
dec
sbb
pusha
push
jp
mov
cs
inc
xchg
imul
add
daa
ss
shrb
jecxz
in
movnti
loop
shl
insl
std
mov
lret
cli
inc
xorb
cmp
daa
pop
imul
mov
out
adc
lret
faddl
cltd
lret
pop
cmp
mull
test
sbb
aas
inc
add
into
maxps
jbe
rcrl
rolb
insb
into
inc
lods
push
mov
insl
scas
flds
dec
popf
aad
pop
mov
hlt
mov
clc
pop
sub
jl
xor
pop
data16
lds
imul
cmpsl
addl
or
mov
push
add
in
punpckhdq
or
pop
lods
adc
cltd
xchg
js
fiaddl
test
cld
xor
and
lds
jb
cmp
stos
push
lret
je
sti
jno
imul
jne
das
dec
aas
push
cs
sbbl
test
cld
shrl
stc
insl
add
sub
ds
loope
cmpsb
xchg
inc
movb
mov
fimuls
mov
aad
mov
fisubrl
fcomip
inc
and
mov
fisttpll
dec
ss
pop
xchg
inc
mov
fcomps
pop
inc
and
dec
and
aas
push
or
ja
in
adc
in
jge
aad
out
loopne
mull
lcall
dec
cmpsb
mov
adc
add
outsb
push
mov
hlt
add
je
cmp
mov
sti
add
dec
push
dec
add
out
sub
sar
pop
xchg
leave
ss
sahf
add
aad
incb
jbe
int3
iret
cmp
jns
dec
pop
sub
int3
fstpt
out
mov
or
outsl
mov
loop
xchg
adc
lret
icebp
push
test
pop
emms
mov
fs
fidivs
fildll
add
es
call
je
lea
mov
sub
scas
icebp
or
or
xchg
lods
cmc
pop
scas
sbb
or
xor
jb
dec
jle
jb
mov
add
sbb
pop
cmp
or
and
cmp
aad
cmp
adc
pop
movsl
imul
daa
std
mov
push
dec
cmpsl
sub
pushf
pop
out
aam
cmp
rep
xchg
push
mov
lods
int
inc
lcall
jle
dec
lds
pop
xorl
mov
cmpsb
cmp
jge
lret
or
mov
cmp
arpl
pusha
mov
aam
push
sbb
inc
mov
pop
lods
jmp
insl
loop
pop
les
push
xor
hlt
mov
ret
add
pusha
sbb
and
cmp
cmp
and
out
pushf
cmpl
mov
lcall
push
mov
outsb
or
notb
fistpll
mov
xlat
or
icebp
lea
push
ret
pop
ja
dec
repnz
sbb
dec
nop
mov
and
inc
mov
notb
mov
addr16
shll
xchg
test
xchg
loopne
in
lahf
jg
outsl
mov
mov
push
add
aas
sbb
cmp
rcrl
ds
inc
jmp
push
repnz
imul
in
dec
jbe
xor
ja
rorb
imul
inc
iret
or
sbb
sti
jecxz
scas
add
roll
ljmp
scas
xor
sub
mov
mov
cmp
lret
xchg
inc
cmc
cmc
aas
stos
add
mov
cmpsb
cld
pop
inc
and
addb
cltd
mov
push
imul
les
jecxz
outsl
sahf
fsubrl
pop
int3
test
std
dec
imul
inc
and
shrb
and
stos
sub
xor
sbb
loop
mov
lret
xorw
and
push
add
jnp
in
pop
push
xor
jle
mov
adc
fiadds
shrd
jns
add
aam
inc
push
sbb
addr16
cmpsl
popf
jnp
cs
adc
stos
jbe
shlb
jecxz
fimull
divb
std
adc
mov
sbb
cltd
sbb
mov
imul
jle
or
sub
ds
jo
sbb
cmpsb
mov
push
popf
adcb
repnz
lret
add
inc
outsl
mov
jge
xchg
xlat
popf
mov
push
fdivs
push
sub
rolb
mov
das
jmp
push
pop
sbb
popa
movsl
cmp
lahf
into
jecxz
fistps
add
jnp
push
fwait
push
fwait
loop
shl
or
add
jns
lcall
aam
insb
out
lods
pop
xor
mov
jne
cmp
shlb
mov
dec
dec
out
cmp
dec
sbb
jle
into
outsl
dec
loopne
mov
mov
sub
xor
bound
inc
inc
or
jg
add
pop
iret
mov
sub
rcll
push
inc
mov
das
rorb
fcomps
jns
mov
je
lods
and
fs
adc
push
push
push
in
mov
xor
and
or
icebp
shlb
mov
jl
mov
push
lcall
out
pop
xchg
push
jge
cld
scas
pop
iret
cmpsl
mov
loope
ss
ljmp
xchg
mov
loopne
repnz
addr16
pop
cmc
pop
test
lcall
lods
fimuls
pop
cmp
iret
jmp
out
les
sbb
pop
lods
inc
push
mov
ljmp
cmp
arpl
and
mov
bound
decb
in
leave
push
out
inc
xor
lret
pop
inc
or
mov
mov
cmp
sub
sahf
rorb
cmc
test
leave
sbb
jecxz
and
jne
pusha
mov
clc
mov
push
mov
xor
adc
pop
jecxz
cli
push
js
push
jo
adc
adc
cmp
adc
icebp
xchg
add
vcomiss
adc
add
pop
xor
out
lods
movsb
std
pop
rorl
aaa
cld
movsl
jl
shrl
out
xor
paddq
jg
pusha
orl
xchg
dec
out
or
idiv
leave
xorl
call
shrl
mov
push
sbb
ficoml
jne
notb
push
mov
cmp
lock
subl
sbb
lods
aas
jb
sbb
cmpsl
icebp
data16
gs
push
adc
xchg
sbb
mov
push
push
mov
stos
stc
lret
or
mov
test
mov
les
jmp
push
jg
dec
add
roll
neg
push
and
insl
adc
lret
xchg
andb
cmp
sub
test
testl
inc
and
pop
leave
pop
addr16
jo
lea
mov
movsl
fstpl
loop
popa
nop
sub
scas
popa
fs
fidivl
push
xor
inc
shll
adc
popf
dec
mov
dec
cltd
mov
pop
sbb
mov
in
and
jb
push
ljmp
pop
xor
outsb
sarb
dec
sub
mov
xchg
xchg
sbbb
int3
lock
cltd
sbbb
cld
mov
cmc
outsl
ja
cmp
or
push
ret
add
ljmp
adc
pop
jae
adc
xor
icebp
add
into
popa
out
inc
push
sbb
sbb
daa
adc
jnp
aaa
cld
xchg
sbb
addr16
xorb
das
pop
fldt
sbb
sbb
push
mov
xchg
inc
aaa
xor
mov
sub
mov
ds
lea
cmp
dec
ljmp
sbb
sbb
pop
add
loopne
test
xchg
sbb
mov
adc
add
lret
dec
fwait
mov
addr16
jp
sub
mov
aaa
stos
push
repz
aas
std
enter
and
leave
nop
call
lock
inc
cmp
add
scas
sub
pop
das
ficomps
sar
adc
adc
mov
test
cmpl
pop
call
xchg
cmp
and
xchg
mov
daa
popf
pop
out
jp
add
cwtl
jecxz
or
clc
test
adc
pop
sbb
inc
pop
dec
adc
ljmp
xor
dec
cmp
mov
add
imul
mov
fwait
notl
or
mov
xchg
inc
fcomp
cwtl
jg
cmc
add
dec
adc
and
iret
jmp
cmpsb
push
push
fwait
mov
ljmp
outsl
jge
push
push
stos
pop
add
or
xor
mov
imul
cmp
cmp
push
in
loope
pushf
inc
subb
push
and
add
and
outsl
shl
mov
add
sbb
mov
rorb
js
adc
idivl
lret
popf
lds
add
aas
lahf
xor
fstpt
dec
sbb
push
jns
cmp
pop
jns
xlat
test
adc
imul
out
pushf
cli
out
push
dec
mov
aam
cmp
inc
and
addl
xchg
sub
or
test
int3
dec
add
in
cltd
mov
and
xchg
mov
mov
mov
pop
cmpsb
out
sub
dec
cmc
mov
jne
xor
pop
and
not
mov
inc
pop
aaa
jmp
roll
lock
inc
out
cmpsl
jge
dec
in
cs
push
out
in
out
mov
lahf
movlps
or
frstor
iret
ja
pop
or
sbb
les
or
das
push
ss
jge
pop
sahf
mov
out
xchg
imul
test
ffree
mov
and
fs
fldl
out
add
push
ja
cmpl
add
scas
insb
mov
inc
xchg
mov
adc
or
js
in
xor
call
dec
fimull
imul
pushf
adc
stos
sbb
push
mov
mov
call
mov
pop
cmpl
mov
ret
es
dec
ret
cmp
lea
das
mov
ds
mov
cmp
dec
hlt
mov
push
cmpsb
mov
push
pop
mov
lock
push
pop
out
mov
dec
push
icebp
xchg
cmp
jno
lret
jmp
and
cmpsl
inc
sarb
lods
dec
les
notl
scas
cmpsb
dec
xchg
lcall
push
cmp
sbb
xor
sahf
jle
pop
mov
stc
aam
jno
jnp
shr
jb
movsl
insl
flds
sti
jecxz
dec
stc
inc
lahf
inc
adc
incb
pop
inc
int
fisttpll
icebp
push
mov
in
cmp
mov
inc
mov
jp
jno
cmpsb
lods
mov
push
push
sub
jne
and
mov
mov
arpl
imul
push
and
mov
push
in
lds
in
add
pop
pop
adc
sbb
icebp
cld
add
jmp
ret
push
add
pop
pop
mov
call
fmuls
cmpb
mov
sub
pop
jmp
iret
adc
inc
dec
push
notl
stc
and
mov
call
or
iret
mov
mov
dec
repnz
inc
adc
ficomps
push
mov
xor
add
divb
decb
xchg
in
sbbl
inc
xor
lock
les
cmp
inc
fcmovnb
mov
popa
adc
and
cld
movsl
xor
pusha
pop
xchg
call
cmp
inc
xchg
in
fimuls
cmp
fnstenv
sbb
mov
xchg
inc
fildl
mov
addr16
out
push
pop
scas
and
jno
jle
lret
or
dec
cld
ljmp
dec
loope
jmp
sub
inc
adc
es
inc
dec
repnz
cli
dec
gs
aad
ss
cmp
iret
inc
aad
mov
repz
ret
mov
mov
cmpsl
repz
fildl
xchg
mov
call
leave
mov
jge
popa
repz
ljmp
pusha
inc
jg
fwait
mov
lea
cmp
or
popa
jbe
movsb
sahf
out
mov
and
jmp
mov
pop
mov
leave
sub
pop
mov
and
call
in
jge
dec
mov
xor
push
jmp
and
call
pop
insb
test
dec
out
test
mov
push
cli
popf
sahf
pop
push
sub
ljmp
sbb
bound
into
les
dec
cmovg
mov
cld
sbb
and
or
ljmp
mov
enter
mov
dec
inc
push
lahf
cmp
xor
ss
sub
mov
and
jne
shll
push
cmp
arpl
xor
out
add
pop
mov
cmp
int
pop
cwtl
out
xchg
add
xchg
cmp
adc
ret
jle
mov
in
xchg
pop
xchg
jp
add
fstps
jg
out
mov
loopne
shl
push
enter
imull
mov
mov
aaa
popa
aam
ficomps
shrb
inc
out
lock
enter
mov
and
jb
imulb
pop
roll
dec
popf
cmp
cltd
mov
adc
xor
scas
adc
inc
jo
in
jae
xchg
lcall
xor
dec
push
xor
dec
jbe
ret
inc
xchg
punpckhbw
and
sub
sbb
fbstp
stos
and
mov
cmovb
mov
daa
jmp
adc
ja
sti
xor
jo
in
repnz
mov
clc
mov
movsl
call
adc
scas
jnp
add
sub
testl
adc
addr16
mov
test
out
and
stc
mov
aam
inc
mov
adc
lods
mov
or
je
xchg
or
adcl
push
adc
filds
mov
jmp
shll
add
ds
pop
xchg
pop
inc
fildl
push
sub
mov
push
jmp
and
lret
pop
out
and
loopne
ret
and
xor
filds
daa
cmp
inc
mov
aaa
mov
or
push
in
sub
sti
push
test
rcll
subl
mov
sbb
jb
xchg
push
xchg
je
pop
inc
jnp
into
testb
xchg
lcall
out
out
sahf
inc
sub
jbe
push
inc
in
push
pop
fimuls
imull
cmc
int
or
sbb
mov
xchg
loope
inc
mov
outsl
sbb
xor
mov
xchg
aaa
ja
rolb
mov
iret
jg
sbb
stos
out
dec
aas
aad
dec
daa
jnp
addl
mov
and
cld
out
cmp
shll
pop
sub
stos
and
dec
stos
inc
stc
sub
and
adc
ret
out
sbb
and
jne
and
ss
mov
cltd
xor
mov
cmp
mov
pop
cld
or
inc
ss
inc
pop
in
bound
in
cld
ror
push
cmp
add
cmp
mov
cmp
push
sub
aas
sbb
xor
add
lds
roll
lcall
xor
cmp
adcb
inc
lret
data16
or
inc
mov
or
xchg
loopne
adc
cmp
std
sub
sub
fsubrl
xor
fiadds
jno
lahf
mov
mov
sbb
jg
dec
cmp
mov
push
mov
cltd
cli
je
adc
mov
jo
jmp
iret
mov
and
inc
xchg
rolb
sbb
popf
jbe
push
scas
jns
xchg
push
out
test
sub
xchg
pop
imul
jecxz
or
pop
data16
lahf
sbb
push
xor
xchg
fistps
fs
add
fwait
push
setb
add
and
mov
insl
sbb
xchg
mov
insl
inc
jmp
adc
jb
imul
cmp
mov
loopne
roll
mov
mov
xchg
mov
dec
nop
gs
sub
jecxz
pop
incb
imulb
stos
roll
mov
mov
push
int
in
loopne
xchg
dec
mov
neg
daa
mov
int3
mov
popf
inc
ds
xchg
lcall
lret
leave
lods
push
or
push
push
jg
fistpll
xchg
push
inc
in
sub
orb
sahf
or
mov
in
xchg
stos
adc
fisubrs
inc
dec
loop
mov
sub
pop
aaa
iret
pusha
mov
sub
mov
enter
insb
mov
jb
mov
adc
mov
xchg
push
bswap
fnstenv
dec
adc
iret
loop
insb
jg
or
push
xchg
addr16
in
ss
mov
stos
cmc
out
jmp
xor
lods
insl
cmpsb
das
xchg
hlt
xchg
insb
shll
adc
push
cli
js
push
xchg
mov
ja
dec
jle
sbb
jge
xchg
and
adc
gs
sti
jmp
fdivl
jbe
inc
mov
mov
pop
adc
cmpsb
dec
xchg
and
ds
mov
ss
mov
adc
roll
fst
jmp
adcl
mov
shll
push
lock
inc
mov
dec
fstpl
adc
xchg
xchg
mov
cli
jne
sahf
sub
lods
cmpsl
jne
cwtl
dec
mov
sbb
loop
or
inc
dec
jecxz
inc
dec
xchg
or
outsb
testb
divl
imul
repz
add
mov
jo
stc
cwtl
shr
cmp
stos
add
sub
dec
xchg
inc
out
test
mov
sbb
ljmp
int3
adc
in
sti
enter
scas
pop
dec
les
lea
add
arpl
nop
add
pop
mov
mov
mov
lret
or
jge
fildll
leave
xchg
push
sbb
xlat
mov
loop
bound
sti
mov
cld
int3
mov
pusha
sbb
xchg
xorb
xchg
gs
les
add
push
daa
mov
mov
ds
and
lret
clc
rolb
hlt
push
cmp
xchg
sbb
inc
cwtl
daa
xor
inc
arpl
fiadds
dec
loopne
call
cmp
mov
push
hlt
inc
xor
insb
sbb
addr16
push
mov
add
cmp
mov
xchg
mov
iret
mov
stos
cmp
stc
jbe
cmp
ja
out
pop
lahf
add
lea
pushf
lahf
push
sbb
pop
cmp
adc
lea
int3
adc
imul
pushf
sbb
js
in
pop
aaa
dec
xor
pop
sahf
pop
jmp
mov
popf
gs
cmpsb
jg
add
and
ret
lret
xor
fcmovnb
scas
push
xor
aad
sbb
loope
pop
enter
and
cmp
cwtl
cs
cli
xchg
mov
aas
out
xor
pop
cld
pusha
dec
daa
adc
jle
jl
add
push
mov
hlt
add
lea
lods
or
mov
sub
mov
in
xor
dec
ret
sub
cmp
mov
in
clc
or
push
jg
movsb
push
push
xchg
aam
mov
adc
mov
jmp
shll
pushf
idivb
dec
jns
test
jbe
pop
adc
rorb
push
mov
testl
inc
or
push
lret
xchg
outsl
pop
outsb
loop
fs
aam
int3
jb
je
pushf
xchg
dec
xor
mov
mov
inc
shl
aaa
pop
jbe
in
pop
arpl
add
pop
adc
add
cli
std
les
sar
jbe
inc
pop
nop
adc
push
je
jbe
xchg
mov
xor
adc
sub
loope
mov
movb
pop
daa
fsts
je
sbb
sarl
stos
jp
subb
cs
cmp
mov
push
fwait
test
out
push
mov
fwait
push
je
out
lock
lods
out
jns
iret
and
out
orl
push
xchg
jg
stos
xchg
shl
pop
xchg
ds
mov
ds
xchg
daa
pusha
mov
sub
mov
fisubs
cmp
jecxz
out
outsl
out
out
jo
mov
push
mov
and
scas
mov
xlat
bound
push
push
mov
repnz
popl
cmc
inc
add
das
pop
cmpsb
out
fldt
dec
out
int3
or
lcall
dec
xchg
jge
mov
cmp
lods
fcompp
push
push
shlb
hlt
pop
or
mov
xchg
sub
jo
cltd
repz
rcrb
scas
or
subl
sub
fs
repnz
or
cmp
cmp
sub
icebp
mov
aam
jno
ss
and
mov
stos
dec
insl
les
fidivs
cld
jle
and
insl
lret
fldcw
push
or
dec
and
into
mov
pop
in
mov
das
ficomps
cmpsl
mov
mov
mov
fiaddl
mov
aaa
out
mov
and
cmp
add
das
adc
jmp
test
insb
add
adcb
pop
jns
mov
push
inc
mov
arpl
inc
iret
addr16
add
jmp
clc
xor
xchg
clc
push
adc
mov
dec
cmp
xor
sbb
mov
jge
lods
cmp
add
cmp
fwait
and
or
jno
mov
mov
mov
add
add
push
stos
push
bound
sbb
push
test
or
test
inc
adc
xchg
lods
xor
dec
movsb
mov
and
and
cmp
and
clc
pop
iret
sbb
sbbb
es
ja
out
into
js
sbb
int
std
xlat
int
jnp
add
leave
mov
cs
std
lea
loopne
xchg
js
neg
outsb
imul
xchg
cmp
mov
sti
test
ret
pop
sub
mov
xchg
cmp
loop
out
pop
test
insl
lahf
leave
popf
das
mov
adc
mov
pop
sub
je
pusha
iret
cmpsl
mov
sbb
stos
movsb
stc
loope
ret
data16
lock
aad
sbbb
inc
test
add
data16
adc
fmuls
sub
xchg
xchg
ja
cmpsl
in
rol
push
fnsave
movsl
and
mov
mov
sti
stc
outsl
cs
xchg
dec
aad
outsb
and
sbb
pushf
mov
pop
dec
jbe
sbb
sub
pop
mov
test
xlat
mov
sbb
movsl
fs
add
push
pop
or
adc
dec
xchg
xchg
hlt
mov
pop
xor
add
dec
mov
ret
jne
jno
movsl
mov
mulb
repnz
sbbb
mov
shlb
push
into
mov
mov
addr16
inc
ljmp
sahf
aas
leave
jnp
lods
add
adc
adc
mov
std
xchg
movsl
sbb
jnp
xor
push
jo
mov
pop
pop
icebp
pop
scas
pop
mov
dec
jecxz
and
popf
sub
sbb
cmp
push
or
fs
jnp
cmp
sti
stos
fsubrs
pop
ss
or
hlt
ror
jmp
scas
mov
lea
sub
dec
xchg
lock
mov
jae
lahf
sbb
jo
adc
rcll
mov
cmp
inc
jl
fsts
rcrb
pop
lock
ret
push
push
xor
loopne
xor
pop
mov
and
jae
out
aad
xchg
jnp
outsb
lahf
ljmp
and
inc
fiaddl
ret
mov
pushf
or
pop
mov
push
or
cmp
xchg
mov
cltd
out
dec
nop
lock
xor
xchg
into
test
mov
jb
cmpl
clc
xchg
or
cmc
cmp
das
lahf
xchg
movsl
mov
pop
dec
jp
push
sarb
jp
sbb
aam
adc
daa
popf
jns
repnz
mov
ss
lods
mov
xchg
jb
add
stos
scas
push
bound
and
xor
fsubrl
mov
mov
sti
cmp
je,pn
outsl
pop
mov
in
out
and
pop
ljmp
dec
mov
mov
xor
ror
push
leave
jge
jmp
cmpsb
sbb
xchg
mov
push
sub
xchg
cli
mov
mov
sbb
or
push
xor
mov
rcrb
cli
push
add
rcrb
cmp
lds
popf
cld
jp
leave
add
xchg
addl
mov
jp
inc
mov
lret
pop
add
dec
cmc
loopne
add
push
testb
dec
nop
call
xlat
pushaw
in
das
iret
in
add
mov
xchg
sbb
adc
lret
neg
arpl
or
out
push
out
xlat
lods
ret
add
insl
xchg
push
cwtl
incb
fstpt
push
mov
mov
aad
fcomps
cmpsl
loopne
adc
jne
push
mov
in
insl
pusha
jmp
dec
jne
or
mov
fisubs
sahf
add
idivl
dec
pop
xor
in
mov
xor
mov
push
mov
sub
cmc
xor
int
in
movsb
add
out
nop
fadds
orb
jge
inc
call
fs
cmc
dec
jp
push
adc
das
xchg
xchg
cmpsl
mov
ljmp
js
dec
lods
mov
ret
scas
ljmp
sub
cmp
pop
hlt
dec
dec
jle
cs
jb
jp
mov
sub
push
mov
fisubs
ja
lods
inc
loopne
mov
add
push
inc
pusha
loope
pop
mov
ljmp
gs
dec
mov
mov
mov
mov
cld
dec
xor
les
into
inc
mov
adc
jmp
in
mov
dec
mov
inc
or
cli
insl
test
mov
xchg
repz
mov
xchg
dec
addl
mulb
xor
push
pusha
or
push
xorb
mov
roll
add
movsl
outsl
xor
sti
jbe
and
and
int
cmpsl
lret
adcb
andl
xchg
fbstp
cwtl
cmp
out
cmp
xchg
mov
shlb
fidivl
xchg
lock
cmp
mov
push
xchg
xchg
push
loop
xchg
push
mov
lods
sub
sub
int
notb
movb
inc
loop
sahf
dec
inc
inc
aaa
mov
call
xor
add
ficomps
popf
fs
lret
mov
add
sbb
test
inc
mov
mov
data16
push
mov
cmp
mov
inc
xchg
aaa
lods
mov
bts
and
in
adc
add
lea
jmp
add
int
dec
out
or
xchg
insl
cmp
or
pusha
movsb
xchg
scas
pop
aaa
pop
out
sti
cmpsl
mov
xchg
lahf
mov
dec
adcb
jge
pop
mov
pop
mov
int3
imul
xchg
or
jl
ljmp
das
rolb
out
mov
xchg
notl
or
cs
adc
adc
dec
movsl
leave
popf
gs
loopne
pop
cli
and
ret
dec
loop
xchg
push
ret
scas
test
adc
sbbb
push
adc
push
pop
in
push
sti
pusha
scas
mov
mov
sbb
mov
cmp
lret
pop
mov
mov
mov
mov
in
jmp
insb
inc
stos
inc
pop
cli
fisttps
mov
sub
rorl
jno
nop
jbe
insb
dec
sbbb
fcomps
lret
outsl
sub
rcl
pop
iret
loopne
fwait
les
daa
or
ret
sti
sti
or
movsb
nop
xlat
fbstp
add
jle
jle
jmp
add
and
subl
jmp
fidivrs
cli
ret
mov
or
pop
and
loope
add
or
mov
dec
cld
daa
lods
cmpsl
jno
xchg
add
addb
add
jge
xor
adc
xchg
out
and
mov
rolb
into
lret
scas
mov
mov
pop
in
jns
mov
mov
jno
clc
cmp
mov
inc
iret
insb
pop
outsb
dec
ds
cmp
rclb
imul
jmp
repz
bound
stos
movsb
inc
bound
adc
bound
sbb
repz
sub
test
lcall
pop
js
or
jp
pop
add
ret
jp
sbb
push
dec
xchg
mov
sahf
insb
sbbl
push
je
mov
cli
add
int
test
nop
add
sti
lods
ret
je
add
shl
or
stos
pushf
les
popf
jl
aas
mov
loope
mov
sti
dec
mov
shl
in
fs
arpl
and
out
icebp
fldl
xchg
fisubrs
subb
cmc
or
push
fwait
xorl
iret
stc
or
xor
mov
xchg
mov
jl
jl
shlb
clc
mov
into
imul
pop
adc
jecxz
pushf
cmp
outsl
aas
daa
mov
dec
int3
push
subl
pop
cli
jp,pn
xchg
mov
add
xor
xchg
push
mov
jmp
push
insl
fsubl
repz
jl
rolb
out
pop
sub
dec
mov
leave
add
aam
cmp
popf
in
pop
mov
pop
das
fwait
jecxz
out
subb
mov
das
pop
in
rcrl
sbb
jne
lock
idivb
pusha
je
hlt
add
inc
jg
push
mov
mov
sbb
adc
icebp
lods
push
lea
push
test
ret
mov
sbb
pop
dec
jbe
inc
outsb
aam
xchg
out
clc
aaa
leave
xchg
mov
cmp
sti
jo
sahf
jle
bound
dec
pop
sbb
and
inc
in
or
mov
inc
popf
add
cmpb
dec
loopne
fidivs
jecxz
gs
mov
ret
pop
andb
je
test
lcall
ljmp
paddsw
scas
pushf
nop
arpl
nop
jne
sbb
sbb
mov
and
gs
inc
into
jns
test
call
and
cmp
or
add
dec
popa
aad
cmp
insl
inc
ds
dec
pop
imul
ljmp
test
sahf
cmp
insb
andb
xchg
jb
pop
lods
inc
mov
addl
mov
fistpll
xor
jl
aam
adc
and
outsb
fsubs
jno
sub
pop
xor
cmp
aad
out
xor
jb
mov
push
ds
shll
push
xchg
out
hlt
cmp
shrl
xchg
cwtl
rcr
subl
sbb
pop
cltd
shl
lea
and
out
mov
adc
pop
stc
dec
popa
ss
fistps
inc
loopne
pop
fidivs
adc
push
sbb
js
gs
ja
mov
or
add
pop
jae
mov
sub
dec
lea
dec
mov
outsl
xor
filds
imulb
pop
lcall
dec
or
inc
inc
add
jae
inc
fnstenv
out
stc
loopne
orb
jge
push
xabort
pop
xchg
pop
sub
lret
rcrb
inc
xor
push
jns
pop
cmp
in
movsl
jecxz
jmp
xlat
sub
xor
int3
sbb
cwtl
sbb
mov
sub
sti
aaa
and
pop
xor
push
jmp
push
cmp
mov
mov
lcall
out
test
add
add
pop
or
lcall
jne
cmp
mov
ret
inc
bound
inc
mov
mov
pop
or
xchg
decb
fistpl
xchg
jge
inc
sub
lock
sbb
xchg
insl
pushf
lahf
loopne
sub
jecxz
xchg
mov
shlb
inc
in
fstpt
sub
dec
cs
xor
divb
lcall
loope
dec
jns
test
push
shl
mov
ja
dec
mov
jns
out
loop
addr16
sub
js
jb
imul
shl
in
jecxz
mov
add
in
cwtl
cmp
ss
dec
jae
in
cmp
nop
xor
push
scas
inc
js
jle
aaa
in
repnz
push
add
and
loope
mov
out
je
test
gs
and
sub
and
dec
js
call
inc
out
jb
xchg
mov
imul
add
pop
addb
push
hlt
test
stc
movsb
lahf
pop
testb
das
adc
xor
je
cli
or
les
lret
add
or
or
movsl
aas
mov
mov
popa
in
sahf
xchg
in
jo
add
pop
and
repz
shrb
mov
add
es
ljmp
clc
push
xor
je
pop
loopne
inc
pop
aas
test
fisttpl
xor
cmpsb
lahf
jns
outsl
sbb
pop
mov
xorb
cs
out
push
pusha
clc
adc
sbb
and
sbb
xor
or
out
call
mov
pushf
ja
mov
adc
sub
adc
fidivrl
dec
fucomip
sub
xlat
adcl
and
pop
ja
adc
fdivrl
xchg
lods
cmp
cmpsb
xchg
mov
push
fdiv
sub
pop
ret
adc
jbe
mov
push
mov
out
sub
arpl
cmp
adc
jp
add
stc
and
mov
stc
xchg
enter
hlt
test
hlt
lods
pop
stc
stc
ss
push
stc
cli
or
jnp
int3
push
test
push
cmp
outsb
lods
inc
mov
mov
pop
adc
test
mov
lret
ss
push
repz
sub
adc
pop
xorb
test
insb
xor
das
and
aad
jl
mov
lds
roll
push
mov
lods
jp
adc
mov
mov
jp
stc
cmp
pop
iret
or
dec
adc
add
and
mov
lret
imul
push
xor
mov
xlat
inc
into
lahf
daa
adcb
mov
or
ja
movsb
pop
add
xchg
shl
push
fildl
xor
jns
mov
andl
or
cmp
out
cmp
cmp
fstl
test
in
jno
add
mov
fidivs
jo
imul
rorb
xor
movsl
daa
push
dec
adc
sub
mov
mov
sbb
imull
or
bound
lea
out
xor
shll
inc
dec
out
mov
clc
into
xor
jns
loopne
out
cs
ljmp
push
xor
xor
xlat
addr16
inc
sbb
and
add
pop
out
lcall
cli
loopne
fldt
adc
ja
ficomps
test
xchg
pop
sahf
cli
and
sbb
fildll
aam
out
int
aaa
out
inc
mov
add
mov
repz
outsl
inc
push
andl
rcll
inc
out
push
jp
mov
xor
ja
addr16
iret
sbb
in
pushf
pop
pop
or
sub
sbb
idivb
pushf
add
adc
xor
push
jmp
out
xor
xor
dec
lahf
mull
imul
dec
je
rcrb
cmpsb
cltd
insl
mov
jp
mov
mov
sbb
loope
lret
add
cltd
lods
fsubrs
mov
jno
push
or
xlat
jecxz
jg
xchg
push
jnp
push
dec
mov
push
push
shll
xor
out
adc
scas
insb
pop
test
jmp
add
test
jno
sahf
repz
mov
fimuls
daa
jo
mov
jg
mov
pop
and
sahf
push
mov
leave
gs
fsubrs
lea
les
lea
jp
dec
nop
cmpsl
lahf
addl
or
in
mov
mov
jno
pop
dec
mov
shrb
and
push
push
mov
not
lcall
inc
add
enter
xor
inc
sarb
mov
cmp
and
ficoms
inc
sbb
pop
ret
sahf
imul
sbb
ret
push
push
jo
sbb
pop
aaa
lahf
jle
push
xor
cld
test
jp
dec
xor
pushf
push
mov
xchg
add
shl
sahf
ja
subl
mov
pop
lods
lcall
cmpsl
push
mov
add
push
stc
pop
mov
int
fdivs
push
popf
int
add
pop
mov
jne
and
out
lock
jbe
add
push
out
or
dec
sbb
jg
mov
xor
fcompp
test
cmp
dec
mov
imul
popa
add
push
out
dec
fmull
loop
add
push
ficoms
aad
xor
xchg
push
mov
shlb
and
push
sti
cwtl
sbb
mov
fwait
clc
test
add
orb
push
inc
rcl
test
fildll
jnp
test
adcb
xor
aas
mov
imul
inc
jb
xchg
stos
bnd
call
sahf
mov
jge
xchg
in
adc
adc
mov
jbe
hlt
int3
into
mov
in
loop
in
add
lcall
push
mov
fildll
jno,pt
jle
push
xchg
push
sbbb
push
iret
aad
jno
inc
leave
loope
cmc
iret
fsts
mov
dec
sub
addb
inc
sbb
xlat
insl
sbb
dec
lahf
cmp
xchg
push
cmpsl
inc
cmp
outsl
leave
pop
xor
fwait
les
inc
mov
jle
iret
pop
in
sbb
add
scas
cli
inc
add
xor
pusha
stos
mov
sti
mov
call
fwait
popf
inc
pop
jge
mulb
int3
mov
push
mov
jbe
xchg
push
stos
or
cmp
add
jae
in
xchg
xchg
rclb
testl
jge
inc
repz
out
out
or
xor
roll
daa
lods
push
insb
xchg
xor
in
xor
sti
or
jb
out
sub
mov
cmpsb
data16
test
sbb
insl
pop
dec
cmp
leave
pushf
push
push
pop
fidivrs
or
jl
cwtl
in
push
pop
add
dec
incb
nop
addl
cwtl
mov
sbb
jecxz
outsl
lret
icebp
adc
sarl
sar
imul
mov
std
pop
jo
ret
jp,pt
xchg
sbb
dec
int
sbb
xor
jge
mov
sub
out
cltd
push
das
sti
loope
mov
divb
jbe
or
sub
mov
rorb
push
dec
cmp
loope
pop
repz
xorl
inc
xchg
shrb
push
rcrl
cs
mov
cmpsl
orb
lea
iret
mov
bound
pop
sti
xchg
add
std
imul
sub
int
movsb
subb
mov
inc
gs
push
outsl
or
mov
aam
mov
fldl
dec
sub
scas
mov
out
cwtl
out
ret
pushf
add
roll
xor
repnz
mov
lahf
js
mov
inc
mov
xor
dec
cltd
pop
hlt
popa
ret
mov
sub
lahf
and
cltd
sub
enter
add
jne
adc
xor
jge
jno
jle
cmp
leave
ds
mov
fwait
nop
test
sbb
or
jae
cld
add
mov
xchg
or
icebp
pop
add
jne
or
lret
jns
add
or
lock
sbb
clc
fmuls
int
adc
sub
into
das
jmp
adc
mov
std
xor
mov
sbb
push
dec
ret
cmpsb
cmp
sbb
jge
or
mov
lret
and
sbb
sbb
dec
inc
mov
cmp
in
addr16
in
xor
inc
mov
jmp
pop
cmp
cmpl
lock
stos
inc
iret
xchg
push
xchg
or
mov
mov
xor
sub
mov
out
or
xchg
jmp
add
outsl
sbb
mov
and
mov
jae
shr
adc
arpl
pop
xchg
dec
push
fwait
aaa
mov
mov
ret
iret
lahf
mov
xchg
push
cmp
dec
add
rcll
push
add
push
sub
aas
push
outsb
call
mov
repnz
dec
pop
stos
push
stc
xchg
push
aaa
cld
pop
pop
enter
vpperm
sub
rorl
pop
enter
xchg
xor
outsl
add
fcmovbe
adc
sbb
dec
mov
loope
icebp
and
and
stc
inc
lds
xchg
mov
test
push
adc
pop
das
push
imul
lods
jne
or
aas
add
aas
jne
pop
bnd
fisubrs
dec
jecxz
cmpsl
lret
inc
dec
rolb
sti
sbb
cmp
push
pop
sbb
ja
cmp
fstpt
or
dec
addl
mov
dec
dec
out
out
cmp
outsl
ss
imul
insb
jmp
mov
lahf
add
je
add
mov
test
jmp
loopne
adc
in
mov
push
adc
mov
loopne
sub
in
popf
mov
sbb
cmp
in
jmp
movsb
mov
mov
aad
adc
mov
mov
xor
in
adc
sbb
ds
fadd
mov
lock
nop
cli
push
outsb
sbb
and
xor
cmpsb
add
fildl
push
mov
addr16
fcoml
cmpl
dec
out
inc
iret
xchg
mov
push
lods
test
sub
cmpl
mov
fisubrl
and
shll
test
inc
aam
pop
jae
jge
das
cmp
or
lahf
dec
adc
sbb
adc
jnp
movsb
add
in
ret
fsubl
xchg
fsubrs
out
xor
sub
sub
xchg
sub
je
adc
lret
out
mov
push
dec
sbb
iret
or
es
sub
dec
jbe
xchg
ficoms
outsb
mov
lea
inc
mov
sub
es
mov
loope
jbe
in
xchg
sbb
orl
push
push
das
push
adc
popa
fisubl
ret
lahf
aam
and
xchg
lods
cmp
aas
add
jnp
test
cwtl
pop
jne
add
nop
mov
fisubrl
cmpsl
mov
movsl
mov
sbb
imul
xchg
rclb
sub
fwait
ds
shlb
movsl
lds
sti
push
aas
inc
add
xor
cli
sbb
lds
sbb
bound
sbb
frstor
dec
pop
ja
fstl
cmp
daa
test
inc
pop
hlt
mov
inc
or
out
cld
mov
or
xor
mov
pop
mov
cwtl
idivb
fcmovnb
mov
dec
xor
fadd
mov
stos
sbb
dec
fwait
or
cli
adc
mov
fisubs
popl
jle
dec
mov
out
sbb
push
out
outsb
loopne
rol
and
nopl
mov
movsl
push
xchg
popf
push
jo
call
cmp
pusha
cmpsb
or
jle
mov
test
les
ja
inc
and
inc
inc
test
inc
lcall
inc
insb
jp
into
daa
xor
into
inc
xor
pop
inc
inc
dec
in
mov
mov
std
jne
bound
adc
aaa
popa
insl
xchg
roll
popa
aad
or
test
inc
pop
jns
sbb
fisubl
adc
out
mov
add
cld
mov
and
repnz
dec
aaa
pop
mov
mov
dec
rorl
int3
pop
push
and
lods
cmp
je
out
fisttps
ljmp
mov
and
or
test
or
aaa
and
clc
cld
movsb
lock
fistl
cmp
sbb
jecxz
imul
idivb
fstpl
aaa
fsub
notl
and
into
mov
jecxz
mov
imul
xorb
jle
xor
call
test
mov
gs
test
dec
xchg
mov
and
in
insb
mov
dec
loopne
pop
cld
aam
dec
loop,pt
bnd
push
xchg
addr16
scas
call
in
cmp
fisttpll
xor
sub
cmp
std
or
add
scas
mov
pop
pop
xor
mov
and
ret
clc
xor
lahf
stc
inc
push
fnstcw
or
xchg
mov
lea
aas
sbb
fstpt
lret
aas
cld
cli
lcall
or
fcoms
add
rcrb
stos
dec
jae
repnz
stc
sbb
cmpsb
rcr
xor
jmp
jne
jae
and
sbb
cmpsb
rorb
lcall
cmpsb
std
sub
loope
xchg
and
xor
mov
int3
cmp
in
xchg
cmpb
pop
adc
outsb
push
mov
inc
inc
cwtl
lds
lock
scas
movsl
push
pop
xchg
cld
addr16
pop
push
mov
mov
mov
mov
push
xor
call
jnp
pop
cmp
loop
jp
cmc
push
mov
fnstcw
inc
and
add
hlt
cli
bound
push
adc
dec
adc
adc
jge
dec
arpl
int3
cmp
inc
stos
cmp
rorb
cmp
or
addr16
pop
push
or
cltd
push
cmp
in
lret
inc
pop
out
mov
les
inc
or
cmp
push
cmp
or
mov
sub
adc
sbb
xlat
popf
add
push
pop
testb
or
xchg
or
xor
mov
stos
xor
repz
daa
push
imul
push
repnz
movsl
and
out
iret
mov
jo
in
add
test
sub
cmp
arpl
push
in
rcrl
out
push
sbb
push
pop
pop
jg
pop
jno
push
mov
jg
or
pop
mov
mov
jo
ret
cs
mov
pop
fcmovnb
fs
repz
xchg
mov
int3
popf
popa
stos
lcall
pop
out
push
jnp
xor
in
inc
mov
out
inc
popf
movsb
mov
es
mov
mov
xchg
jp
inc
movsl
popa
movsb
pop
addl
scas
add
fwait
jge
cmpsb
xor
jge
movsb
mov
xchg
fwait
jae
or
std
mov
faddl
xor
lock
rorl
cld
sbbb
jnp
mov
imul
ja
xchg
mov
mov
jle
pop
jbe
xor
xor
mov
add
inc
pop
cmp
or
lcall
fs
fildl
pop
pop
mov
or
mov
lret
addr16
lea
fs
jo
insl
aas
dec
inc
mov
popa
add
jnp
ret
lcall
sub
sbb
cmp
fbstp
mov
mov
shlb
pop
testb
clc
and
dec
push
aad
or
int
inc
rcrw
pusha
push
out
mov
jne
pop
int
addr16
shlb
stos
cmp
cmp
inc
rorl
jge
in
push
pusha
sahf
lret
aad
gs
dec
adc
out
mov
scas
das
imul
dec
je
call
mov
add
mov
addr16
testl
aas
sub
or
or
sub
fistl
or
ja
stc
jle
jge
or
stos
sub
jns
pushf
loope
sbb
or
or
mov
in
das
jecxz
nop
sbb
mov
fwait
jae
dec
into
dec
repz
sbb
std
add
sub
test
imul
mov
ret
adc
dec
out
sbb
imul
leave
mov
js
inc
int
stc
pop
dec
icebp
lods
popa
sbbb
shlb
aam
outsb
inc
fldl
xor
adc
pop
jns
insl
fnstenv
mov
hlt
loopne
jp
pop
lods
and
stc
std
cmp
test
sub
int
sbb
dec
sbb
jno
push
sbb
icebp
mov
sahf
add
dec
pop
and
adc
push
xchg
dec
mov
nop
je
rcr
adc
repnz
fistpll
mov
push
pop
stc
jnp,pn
dec
sub
or
cmc
fxch
lea
or
push
into
je
mov
add
cmpsb
dec
mov
mov
call
gs
jecxz
or
cli
push
pop
mov
adc
icebp
lcall
mov
in
int
sarb
int
cwtl
cltd
addl
js
addr16
mov
cld
lock
mov
dec
lods
mov
aad
dec
xor
in
xlat
and
mov
jl
fwait
insl
repnz
and
outsb
shrl
ds
outsb
push
gs
push
xor
push
fldenv
xchg
adc
ret
sub
sub
inc
pusha
test
cmp
stos
inc
das
icebp
movsl
mov
mov
lret
add
xchg
sub
xor
test
jbe
mov
and
cltd
push
and
jmp
aam
ljmp
jo
mov
push
inc
dec
int3
pop
pop
inc
iret
xchg
cmp
scas
jle
mov
jl
repnz
rorb
sbb
addr16
and
es
inc
lcall
mov
insb
shl
dec
icebp
enter
subl
jp
mov
pop
testb
sbb
mov
divl
test
xor
xor
xchg
aaa
mov
cwtl
outsl
inc
repnz
jmp
add
sahf
ss
and
pop
or
and
loope
mov
sahf
xchg
sbbl
aaa
mov
fs
les
pop
cmpsl
iret
xchg
cmp
push
pop
mov
fisubrl
jae
into
or
jno
clc
aas
sbb
sub
xor
dec
aaa
cmc
lods
or
mov
je
js
push
sbb
sbb
sub
xlat
jne
mov
mov
or
fiadds
out
lock
xor
inc
xchg
jge
aad
sbb
stc
das
push
je
xor
lods
sarl
push
or
mov
mov
outsl
pop
stos
sub
sbb
fsubrs
icebp
mov
in
hlt
out
cmp
popf
pop
mul
sbbl
les
popl
push
adc
xchg
cmc
xor
push
stos
xchg
in
std
repnz
sbb
xchg
sub
push
leave
add
ljmp
adc
push
jno
mov
ret
pop
ss
cmpsb
sbb
inc
pop
ja
in
jns
jbe
push
sbb
dec
cmp
push
dec
popf
mov
jge
and
push
xor
xor
into
addl
movsb
adc
mov
push
outsl
loopne
test
fiadds
add
es
inc
xor
movzwl
xchg
lock
sub
lahf
pop
jne
push
adc
or
xchg
cwtl
in
push
mov
daa
sub
push
xchg
lret
cmp
and
call
testb
or
push
repnz
jg
xor
mov
pop
xchg
aad
outsb
sbbb
cld
inc
and
jns
inc
scas
jmp
pop
cmpb
lea
in
sub
idivb
data16
inc
jno
or
fwait
xchg
fwait
xor
xorb
mov
and
push
test
hlt
jg
push
out
and
jp
cwtl
aaa
ljmp
test
les
mov
aaa
inc
pop
data16
stc
or
push
jl
jg
and
jb
clc
dec
mov
mov
jns
or
mov
sbb
cmp
bound
movsb
loopne
sbb
loope
in
push
fmuls
dec
out
mov
inc
lods
adc
jecxz
bound
jp
pushf
pop
jmp
ret
jb
or
xchg
push
xchg
jge
fidivrs
arpl
pop
dec
movsl
shll
cmpsb
mov
jecxz
dec
rolb
stos
xchg
movb
js
enter
add
push
addr16
sbb
dec
cmp
insb
lret
mov
scas
shlb
dec
mov
sbb
cmp
insb
jo
jmp
and
ja
jmp
dec
xor
add
or
push
xor
loop
pop
enter
andl
addr16
inc
stc
sub
and
insl
add
xor
sbb
cmc
stos
dec
dec
push
es
cmp
loopne
sbb
mov
leave
test
outsb
rcrb
orl
cmc
inc
mov
jns
popa
popf
pop
daa
shlb
fs
mov
movsb
insb
pop
nop
dec
mov
and
orb
roll
and
icebp
sbb
mov
add
lret
sbb
in
adc
cmpb
inc
out
jmp
inc
push
xchg
adc
or
mov
repz
push
in
mov
push
dec
xor
mov
lret
les
and
mov
pop
sbb
and
mov
or
xor
and
lock
pop
push
cmpsl
mov
and
pop
mov
adc
pop
add
cmp
push
push
shl
jle
aad
and
movsl
mov
cmpsl
stos
lds
aaa
mov
sbb
jae
pop
mov
xchg
cs
mov
push
pop
jnp
push
fwait
lods
add
jp
inc
mov
inc
jne
mov
std
nop
into
xor
nop
leave
jne
lret
adc
inc
jbe
push
cmp
mov
icebp
or
stos
adc
adc
mov
xchg
jecxz
scas
fcmovbe
mov
fdivrl
push
pop
jbe
mov
dec
pop
arpl
jne
or
sbb
arpl
sahf
cmp
push
pop
pop
jno
xchg
rolb
das
jge
jnp
fstpl
jecxz
ror
mov
ficoml
adc
adc
icebp
test
mov
fldcw
iret
lock
inc
sbb
add
pop
scas
and
mov
mov
cwtl
repz
sbb
jns
shll
inc
xchg
jl
sbb
pop
sbb
dec
xor
cmp
gs
mov
sbb
xor
adc
fnsave
fsubl
leave
out
ret
jmp
adc
inc
sbb
add
pusha
push
and
add
les
in
insl
xchg
jle
iret
inc
cmp
and
or
test
push
mov
lahf
sti
pop
and
push
adc
cld
dec
cs
mov
add
push
sahf
xor
push
icebp
inc
pop
pop
clc
mov
stos
mov
jo
pop
xchg
fistl
mov
je
mov
jg
in
popf
sbb
mov
fildll
filds
and
or
clc
or
sub
xchg
movb
out
push
aad
std
jbe
jl
jecxz
mov
cli
popf
shll
mov
loopne
mov
aas
mov
leave
xchg
sub
shlb
jne
outsl
orb
popa
ret
testb
push
ret
xchg
inc
mov
arpl
dec
es
mov
hlt
and
lods
lret
mull
imul
sahf
sarl
pop
and
cmp
push
mov
aas
test
xlat
and
push
and
cmpsl
fwait
rcrb
push
jp
int
scas
decb
push
inc
in
lret
scas
iret
addr16
out
hlt
js
jno
out
mov
inc
mov
cli
push
fs
pushf
and
je
pop
insl
jne
call
pop
mov
xor
push
pop
fists
cs
test
or
lds
adc
movsb
and
mov
addr16
and
sarl
sub
mov
cmp
int
sbb
xchg
stos
out
or
test
adc
popf
loope
jg
jp
inc
sub
scas
fcmovne
movsb
enter
fdivr
fs
pop
aas
icebp
mov
and
mov
lret
movsb
testl
mov
sub
cmp
pop
or
lods
cmp
jp
mov
and
inc
iret
xchg
sbb
insl
fsub
mov
push
pop
xchg
adc
cmpsl
xor
xchg
xor
mov
cmp
mov
pop
xchg
push
pop
inc
xor
clc
mov
jbe
xchg
push
lds
shlb
push
xchg
dec
or
stos
shlb
sbb
dec
pusha
icebp
lea
out
xchg
mov
mov
mov
ja
loopne
ds
sbb
orb
lods
fisttpl
mov
jae
ret
mov
fisttps
fmull
popf
out
frstor
mov
mov
push
xchg
dec
xor
jae
lds
sub
pushf
xlat
fisttpll
sti
xchg
rcr
dec
in
std
add
sub
out
push
or
std
jmp
inc
data16
mov
mov
cmp
push
subb
in
fisttps
cld
mov
push
mov
out
negl
insl
outsl
mov
scas
les
insl
xor
xchg
sbb
lock
ret
xor
cmp
dec
hlt
xor
xchg
es
lahf
rcll
sub
add
jmp
ret
and
das
clc
cmp
sub
jne
outsb
lock
mov
jno
stc
adc
fxch
neg
icebp
fistl
ds
pushf
ja
faddl
stos
stos
sub
add
cmc
jecxz
xchg
jbe
dec
inc
loop
cmc
jl
in
aad
test
xor
std
aaa
outsb
outsb
add
jno
lahf
mov
and
adc
mov
pop
add
icebp
xor
sti
sbb
loope
stc
push
popf
push
jno
aas
sarb
fdivrp
lds
loopne
out
cmc
mov
pop
dec
int
scas
jno
cmp
in
aaa
cltd
sar
call
rcl
in
outsl
jo
adc
lahf
out
push
mov
ficompl
mov
rep
jg
mov
mov
push
in
and
les
in
adc
or
cmp
adc
pop
fdivr
or
aaa
clc
lret
sti
jb
lcall
sub
add
or
test
push
pop
xchg
jmp
push
shll
xor
outsb
lock
stos
in
bound
mov
lods
cmp
jne
std
mov
imul
sbb
imul
into
mov
fmuls
ja
fisubrs
ret
cmc
xlat
and
mov
cwtl
lahf
mov
mov
sub
fnstenv
jecxz
sub
ret
std
test
pop
adc
sub
and
test
popa
into
scas
call
xlat
pop
adc
aas
lock
int
cmpsb
xchg
cmp
mov
push
std
adc
push
inc
movsl
and
xchg
push
jns
shlb
movsl
out
test
scas
addr16
or
lret
in
pop
push
jp
pop
ds
into
add
decb
jmp
repz
dec
int3
sbb
leave
xor
insb
jg
add
xor
cmp
in
ret
push
or
sbb
push
and
in
mov
call
js
imull
adc
fstps
inc
xlat
leave
cld
insl
repnz
push
mov
and
repz
adc
dec
mov
enter
cwtl
inc
push
fsubrl
mov
in
test
xchg
jmp
sti
dec
test
pop
pop
jg
push
pop
clc
stos
mov
out
jbe
aas
xor
fimuls
sbb
jbe
out
push
lahf
fisubrs
leave
cli
stc
or
std
inc
pop
inc
fmul
mov
sbb
orl
into
loopne
outsl
hlt
xchg
insb
testb
push
jle
cwtl
mov
mov
mov
jmp
push
adc
and
cmpsl
jge
adc
mov
jge
in
xchg
scas
adc
leave
cwtl
pushl
pop
mov
cli
mov
cli
into
pop
sub
mov
mov
into
lds
xchg
pop
shll
push
fs
movsb
ret
mov
and
std
mov
gs
lds
ret
push
sub
push
xlat
xor
ret
clc
fcmovnu
stc
jp
es
add
add
out
inc
std
shrb
mov
cli
fsub
mov
es
rcrl
in
add
mov
cs
fsubrl
int3
jp
pop
imul
dec
fscale
cs
imul
clc
rcl
mov
or
dec
inc
imul
or
das
stc
dec
nop
sti
std
jl
dec
push
dec
rorb
lock
cs
std
call
addr16
loop,pt
hlt
xchg
mov
dec
mov
and
pop
mov
or
loope
ficompl
pusha
xchg
or
ljmp
mov
jb
out
mov
out
cmp
xchg
sbb
inc
inc
cmp
repnz
xor
push
int
push
mov
lahf
pop
je
test
and
inc
pop
mov
in
mov
add
es
or
imul
daa
pop
cli
cmp
cmp
fxch
les
mov
cmpsb
adc
xchg
adc
inc
cmp
lds
adc
fnstenv
and
loop
add
repnz
push
mov
mov
stc
sbb
stos
jbe
adc
mov
jmp
scas
out
or
jmp
jns
sbb
loop
sbb
bound
cmp
ds
mov
pop
pop
lods
sbb
pop
or
cmp
js
cmp
jmpw
jg
dec
out
mov
pop
inc
rcl
mov
add
or
dec
mov
bound
aam
icebp
gs
out
mov
mov
data16
decb
or
lea
pop
ret
jmp
mov
adc
xlat
mul
sbb
jg
les
cmc
hlt
pop
in
xor
mov
outsl
rolb
sub
mov
xchg
mov
jo
ret
into
xchg
adc
lret
std
inc
sbb
outsb
mov
insb
add
cmp
mov
mov
outsl
dec
push
arpl
imul
loop
mov
out
mov
jmp
scas
lods
cmpl
adc
js
test
mov
ret
imul
push
fisttpll
inc
mov
subl
jno
jp
into
ds
mov
mov
xor
jae
jg
insl
jns
sahf
aam
lret
mov
daa
xchg
xchg
adc
mov
addr16
jmp
sub
shlb
dec
loopne
sti
xchg
cmp
fwait
sbb
scas
push
enter
decl
mov
adc
sub
lahf
push
cmp
jbe
add
cwtl
in
mov
je
add
call
ja
pushf
sbb
xchg
and
pushf
push
xor
and
test
loope
in
adc
mov
xor
shl
dec
movsl
rcrb
push
sbb
mov
repz
movsl
shl
xchg
out
insl
ds
lahf
fidivrs
jp
addb
adc
dec
mov
mov
jecxz
cmp
sub
jbe
mov
adc
mov
repz
jae
and
fcomi
pushf
lahf
push
sub
dec
mov
cmp
aad
jp
ficoml
dec
jecxz
mov
in
xchg
adc
dec
les
sbb
mov
out
push
jg
data16
xlat
mov
dec
jae
xchg
imul
lret
aas
es
shlb
cli
movsl
cmpb
es
rol
scas
aas
jp
and
lock
sub
insl
shrb
sti
jl
sbb
mov
clc
std
out
ret
mulb
in
loop
dec
test
int
mov
out
dec
adc
cmc
xchg
xchg
dec
lods
scas
fdivr
imul
je
xchg
sbb
out
pop
popa
inc
out
rorb
bound
fs
filds
cmp
test
mov
fsubrl
and
cmp
int3
in
nop
out
xorl
pushf
push
cmp
cmp
add
outsb
jb
inc
push
jns
or
out
fnstsw
cli
mov
es
icebp
inc
or
mov
subb
dec
mov
lcall
inc
mov
mov
dec
stos
or
sbb
lods
testl
into
nop
lcall
jecxz
movsb
cmp
jp
aam
ret
add
pop
mov
daa
les
scas
mov
mov
bound
pop
mov
xchg
pop
imul
mov
ss
lods
pushf
inc
stc
jbe
mov
rorb
pop
imul
mov
cli
inc
movsb
cli
adc
push
scas
popf
mov
pop
pusha
ljmp
scas
js
or
and
mov
and
mov
jecxz
dec
inc
sub
daa
xchg
movsb
jg
mov
mov
pop
inc
jg
repz
cs
pop
incl
jo
cmp
jp
test
lea
and
loopne
rcr
cwtl
int
je
xlat
out
ljmp
sub
lret
xor
sbb
fs
cwtl
mov
lock
add
fcompl
inc
das
insb
std
movsl
and
push
mov
mov
shrl
push
dec
lods
sbb
mov
pop
xor
aas
ss
loope
stos
in
cmp
jl
test
sbb
pop
xchg
ror
xchg
cmp
inc
aam
mov
pop
mov
cmc
mov
out
cmp
insb
xlat
sbb
stc
mov
or
test
pop
inc
test
pushf
push
pop
cmpsb
scas
cld
inc
daa
mull
or
arpl
fnstenv
and
sbb
mov
loop
fcomp
jns
inc
and
push
faddl
mov
sub
ficoml
sbb
push
out
push
stos
mov
pop
push
sub
lret
popa
jecxz
addr16
fyl2x
xorb
xchg
mov
mov
in
popa
mov
cs
lods
or
push
cmp
hlt
xchg
inc
mov
test
adc
ficoml
push
xor
sbb
cmpsl
vmulss
shlb
push
push
out
cltd
and
inc
xchg
push
in
test
aas
jnp
jnp
hlt
in
addr16
out
nop
xchg
mov
lahf
cli
lods
in
xchg
aas
cli
and
sar
rclb
daa
lahf
das
ficoml
test
xchg
hlt
pop
and
jle
push
xor
ja
popa
sub
xchg
loope
xchg
inc
test
jle
rolb
and
pop
mov
call
sub
pop
je
out
jmp
lcall
cmpsb
jns
lea
out
sbb
adc
pop
pop
cltd
test
inc
cs
pop
xchg
das
inc
jae
xchg
cmp
mulb
cmp
bound
cld
cwtl
mov
mov
mov
and
fcmove
imul
aaa
sub
and
jecxz
cs
and
lods
jmp
mov
popa
add
xchg
iret
pop
mov
xchg
clc
pushf
ror
dec
dec
andl
dec
or
mov
repnz
loope
loopne
pusha
popf
xchg
movl
cmp
rorl
jno
mov
sub
imul
add
push
push
jle
test
jno
add
insl
jp
xor
test
xchg
mov
popa
jae
stos
lret
cmp
stos
aad
sbb
int
pop
incb
enter
ds
mov
and
repz
repnz
pop
sbb
mov
mov
push
test
andl
test
pop
fsts
js
aad
cmp
es
cld
dec
xor
pop
cmp
movb
or
ficompl
mov
sbb
movsl
cmp
jae
push
andl
call
popa
mov
cs
pop
and
incb
lods
mov
iret
stc
jno
xchg
popa
cltd
adc
mov
roll
push
xor
dec
int3
testl
jle
daa
std
push
aad
dec
mov
inc
cmp
shrb
out
in
jnp
jns
movsb
cmc
push
dec
pop
xor
cmpsb
cmp
cmpsl
iret
shll
mov
cmp
fwait
xor
pop
stos
cwtl
popf
pusha
push
cmp
stos
xor
les
sti
push
xchg
mov
pop
pop
and
outsb
les
pop
cwtl
inc
xor
mov
sub
mov
into
inc
gs
add
xor
rorb
adc
mov
iret
fstpt
call
stc
jo
or
xor
cltd
je
push
iret
lcall
lods
sub
lods
push
jnp
cmp
aad
int3
in
lods
movsb
xchg
xchg
xor
sbb
push
sbb
pop
or
imul
call
cwtl
pop
mov
insb
jg
xor
out
or
sbb
loop
push
ret
decb
ds
sti
lcall
mov
xchg
cmp
fmull
add
shll
or
mov
jmp
cmp
fcoms
pop
cmc
inc
ret
fcmovnbe
sub
mov
test
loope
mov
pop
add
xchg
pushf
lds
insl
dec
pop
sahf
arpl
pop
pop
lret
jecxz,pn
mov
mov
in
xor
xor
pop
insb
jg
or
xchg
repz
or
push
mov
mov
loopne
sbbb
cmpl
enter
mov
add
sub
ret
in
xchg
repz
loope
sbb
or
pop
mov
xor
adc
mov
pop
xchg
pop
or
mov
mov
inc
popf
sbb
and
incb
push
outsb
es
xorb
cmp
cmc
pop
and
push
jl
in
sub
enter
xchg
push
pop
mov
mov
decl
jno
lcall
push
push
cmp
jmp
add
rorb
fcom
fwait
pop
repz
js
dec
clc
dec
push
inc
and
rol
sbb
adc
pop
or
push
inc
or
fsubs
cltd
icebp
mov
dec
cmc
push
pop
loop
pause
and
mov
js
mov
xchg
mov
sub
gs
pop
outsb
shl
push
es
pop
mov
sbb
or
jl
leave
push
std
pushf
or
mov
lahf
stos
sbb
mov
out
or
imul
popf
or
dec
adc
fidivs
xor
or
xchg
adc
xlat
add
jno
in
add
divl
scas
inc
mov
shl
rorb
das
ds
pushf
test
es
mov
xchg
jge
mov
fdivr
mov
cli
pop
and
jmp
sub
jo
xchg
sbbb
in
pop
and
stos
outsl
push
mov
pop
inc
out
push
subb
mov
cmp
lret
arpl
xchg
stos
or
jg
push
ss
xor
pop
je
add
scas
das
into
jp
leave
ret
or
xor
mov
dec
insb
sub
sub
push
stc
roll
jmp
mov
or
in
fcmovb
in
in
mov
dec
cwtl
les
es
jne
out
or
inc
xlat
movsb
sbb
xor
push
dec
and
mov
dec
incb
cld
and
jle
and
or
mov
pop
push
sub
mov
mov
imul
mov
add
ljmp
or
pop
or
sub
mov
rclb
testl
subb
movl
idiv
adc
mov
movsb
lods
testb
ret
ret
or
jno
lds
push
xchg
popa
loope
pop
mov
loop
mov
add
and
jb
adc
mov
mov
mov
inc
das
push
jle
push
ja
inc
add
inc
faddl
mov
dec
fiadds
pop
mov
cmp
fsqrt
add
push
cmpsb
mov
stos
mov
pusha
or
movsb
jne
pop
push
idivl
jl
data16
jge
dec
adc
jge
inc
daa
repnz
stc
mov
outsl
sub
sub
ds
add
jge
or
xor
sti
pop
sbb
rcll
pop
lock
push
cmp
inc
pop
mov
or
cmp
stos
popf
rolb
clc
sbb
das
rol
das
lds
cmp
push
fnclex
xor
push
or
cli
mov
movsb
out
jg
andl
dec
pop
mov
stos
sbb
popa
jo
push
push
data16
mov
stos
fimull
faddl
jecxz
or
cmp
mov
cmp
lahf
jg
je
ljmp
out
mov
or
inc
out
pop
jmp
dec
pushf
push
fcoms
add
idivb
jne
jecxz
sub
out
leave
inc
sahf
es
add
mov
leave
mov
add
cmpsb
int
xor
popf
pop
pop
in
shrb
mov
pop
imulb
aad
push
jp
adc
xchg
mov
pop
mov
dec
sub
sbb
ljmp
cs
jnp
ret
cmp
jb
pop
inc
xor
lret
fiadds
or
hlt
fucomip
pushf
push
insl
xlat
loope
inc
pop
cmpsl
push
flds
push
xchg
dec
pop
andl
add
add
test
ret
mov
cmp
mov
or
inc
inc
push
das
xor
pop
adc
mov
test
fstpl
inc
push
sbb
aaa
je
mov
dec
xchg
sarb
fdiv
outsl
out
nop
or
int
pop
dec
push
xchg
ds
and
add
loope
jne
adc
xchg
xchg
arpl
cmp
mov
lock
mov
push
es
outsb
xchg
cmp
ret
pop
cmpsl
loopne
push
or
and
leave
mov
mov
push
xor
lcall
push
jecxz
sbb
leave
sub
add
mov
cld
in
adc
mov
pop
dec
loope
cmpsl
in
add
icebp
imul
inc
push
add
jbe
in
dec
outsl
and
pop
and
into
in
mov
aam
push
aas
in
inc
out
repnz
sub
std
mov
rcll
aaa
idivb
idivl
lock
lret
popf
jno
sbb
push
jge
adc
dec
jp
mov
xchg
pop
mov
lahf
jmp
outsl
ljmp
pop
ret
movsl
outsl
jp
in
stos
push
divb
or
mov
shlb
scas
sub
gs
cmpsl
mov
lret
sbb
test
orb
inc
nop
dec
sub
outsl
sub
mov
sbb
inc
mov
cmp
pop
mov
xor
fistl
call
jge
lret
ja
mov
loope
gs
jb
pop
int3
push
jbe
lret
xor
jmp
sti
iret
mov
les
daa
sub
add
aaa
push
jae
cmp
pminub
and
and
mov
inc
aam
sarb
pop
mov
pushf
fcomp
and
cwtl
pop
lods
arpl
jb
lret
jns
pop
call
pslld
jmp
mov
mov
aam
xchg
push
out
movsb
in
inc
out
pop
insl
inc
je
les
jnp
push
adc
pusha
cmpb
adc
add
cmc
incb
jb
scas
loope
push
pop
and
add
jne
test
or
xlat
xor
adc
sub
das
test
jnp
and
movq
xchg
aam
data16
adc
sahf
xchg
in
pop
sbbb
and
loopne
test
movsl
pop
repnz
jle
or
fs
jecxz
xchg
xchg
fs
cwtl
pop
push
jecxz
inc
inc
lret
fstl
cli
add
sbb
adc
jg
cmp
ds
sbb
jge
jnp
pop
mov
add
mov
mov
mov
pop
or
fnstenv
ret
add
inc
push
add
mov
dec
cmpsl
fwait
push
fimull
bound
cld
dec
mov
cli
arpl
xlat
push
fistpl
sbb
pop
movsb
mov
addr16
hlt
push
imul
in
inc
insb
roll
stc
leave
xchg
sbb
loope
cmp
pop
in
stos
push
mov
ficoms
lahf
fistpl
int
push
aad
sbb
sbb
cmp
cmp
in
or
outsl
fldt
pop
data16
sbb
loope
pop
fbld
imul
and
adc
js
push
xchg
rcrl
cmp
jp
das
and
dec
fs
lods
aam
xchg
movsl
test
pop
inc
cmc
xlat
jo
and
jno
push
pop
ror
scas
dec
clc
lods
xor
inc
ret
dec
sub
lds
sbb
lret
cmp
cmc
or
repz
xchg
sbb
push
jae
fstps
addr16
ret
cmp
in
cmp
mov
fbld
cwtl
push
gs
les
sub
add
stos
fsubrl
push
dec
cmp
pushf
cmpsb
out
ret
inc
int
es
cli
jge
sahf
sub
sti
das
inc
jno
scas
dec
sub
add
mov
mov
stc
shlb
cmp
jg
pusha
sub
out
sar
push
out
pop
mov
sbb
inc
xchg
sbb
icebp
mov
sub
decl
je
aad
stos
and
pop
fidivrl
aaa
fldcw
test
sub
jle
mov
loope
hlt
inc
arpl
inc
scas
dec
push
orb
popf
out
push
dec
pop
and
or
jmp
cmp
jg
and
push
adc
sbb
ret
mov
xor
push
sar
xor
rorb
push
rol
push
push
loop
icebp
inc
scas
push
data16
pop
jle
in
sbb
mov
dec
cmc
or
inc
cmp
inc
cmp
ret
xchg
sar
pushf
lret
sti
inc
test
outsl
incl
sahf
movsb
movsb
loop
lret
jno
scas
faddl
iret
cmp
xchg
sbb
push
dec
loopne
fiaddl
cltd
repz
bswap
es
xchg
mov
pushf
stc
lahf
ds
add
sbb
push
popf
stc
fucomi
push
push
int3
out
and
dec
cltd
inc
mov
adc
ljmp
and
xor
test
sub
cmpsl
mov
inc
rcll
mov
movb
push
fwait
shrb
cmpsl
pop
and
cmp
xor
ret
cmp
ret
mov
nop
insb
aas
ds
xchg
inc
leave
popa
jl
and
in
icebp
std
les
rcl
data16
dec
push
sbbb
push
mov
mov
imul
mov
test
mov
stos
bound
sbb
adc
inc
and
ja
shrl
and
fnstcw
pop
ja
popa
push
sbb
out
les
adc
out
leave
sarl
push
jl
jle
push
cmp
push
in
rcrb
test
push
cmpsl
je
xchg
pop
inc
faddl
adc
jp
or
shr
mov
sbb
cs
aam
pop
clc
dec
jle
fnstenv
add
push
sbb
mov
pushf
inc
lahf
lahf
xchg
push
add
out
sub
daa
push
push
int3
aas
mov
mov
or
inc
ret
and
ljmp
call
push
mov
fcomps
cmp
dec
push
jno
xorl
jge
mov
jae
mov
pop
dec
mov
je
mov
sbbb
add
into
mov
ja
mov
push
lret
fstpl
jae
mov
dec
mov
test
movsl
sbb
insb
into
ficomps
inc
shll
pop
vpsrld
jl
jmp
cmpsb
mov
xchg
outsl
lret
fimull
sbb
pop
out
push
jo
das
mov
adc
movsl
push
sbbl
mov
push
movl
push
pop
movsb
mov
loopne
jg
jno
xor
sub
mov
enter
fists
call
fwait
jno
jae
cmp
cwtl
mov
cld
orb
cltd
push
mov
push
mov
mov
mov
push
fimuls
pop
dec
adc
std
mov
stos
adc
insl
movsl
xchg
adc
aad
stc
fimull
jg
sbb
mov
dec
xchg
and
pop
in
ja
xchg
into
and
jnp
xor
inc
jae
sub
pushw
jae
out
xor
mov
test
popf
testb
imul
pop
pusha
mov
rcrl
mov
sti
xor
scas
mov
dec
nop
adc
ror
mov
mov
mov
in
icebp
xlat
int3
cmp
cs
lea
or
sub
push
aad
jae
xlat
inc
jecxz
and
fucomi
sub
popa
fwait
sbb
dec
pop
rcl
es
jg
push
cli
outsb
fists
aad
xor
push
sbb
mov
in
ficoms
fistpll
inc
push
adc
cs
or
push
jo
into
lret
mov
sbb
push
lret
push
xor
sub
xor
pop
jno
ficoms
and
pop
loop
jae
dec
in
jmp
arpl
mov
mov
adc
nop
xchg
es
add
jo
pop
push
pop
sub
xor
sbb
fbstp
add
mov
or
mov
outsb
sbb
adc
xchg
sub
push
cld
xor
imul
insl
roll
sahf
sti
popa
inc
jno,pn
hlt
cs
aaa
pop
mov
push
sti
mov
jge
dec
sbb
mov
pop
dec
mov
movsb
pop
hlt
das
in
aam
out
enter
xchg
insl
lret
jp
outsl
ror
adc
cmp
ds
out
push
cwtl
add
lcall
loope
or
popf
xchg
cmpl
add
ds
movsw
ja
ljmp
dec
xor
aas
mov
incb
jp
in
mov
or
out
lret
pop
push
jl
and
fnstenv
leave
ljmp
loope
repnz
mov
lods
adc
clc
rclb
mov
aad
xchg
sub
jmp
call
add
mov
rolb
pop
push
mov
mov
data16
hlt
aas
sbb
push
xchg
jecxz
cltd
pop
cmp
stos
jb
pop
fcoms
pushf
jp
and
jmp
mov
clc
adc
and
mov
popa
sub
jl
lds
rorb
sub
sub
mov
outsb
hlt
daa
pop
adc
fwait
push
cs
xchg
adc
jnp
faddl
fwait
push
sub
in
push
leave
add
out
adc
sub
or
call
test
fildll
psllw
xorb
rcrb
adc
dec
push
mov
mov
inc
push
mov
lahf
das
pop
pushw
ret
and
xor
add
shr
sbb
sub
and
mov
pop
inc
mov
ret
dec
xor
add
fbstp
sahf
cmp
lods
es
adcl
pop
sahf
jecxz
aaa
inc
mov
pop
jae
pushf
nop
push
xchg
test
inc
call
mov
sbb
lahf
roll
fdivl
insl
mov
fildl
divb
pop
jno
mov
lcall
pop
rcrl
pop
and
push
sbb
ret
fidivrl
adc
outsl
jnp
jo
xorl
dec
jmp
not
mov
inc
test
mov
movsl
sti
add
add
aas
ror
sarl
inc
in
into
push
fisubrl
int
scas
adc
sub
fildl
mov
add
mulb
arpl
pop
cmp
mov
jo
sub
sbb
repnz
loope
xchg
add
pop
daa
repz
sti
aam
mov
mov
or
je
leave
jg
lret
xchg
and
mov
cwtl
das
scas
loopne
mov
xor
jnp
aaa
mov
std
pop
mov
push
push
or
iret
push
in
jge
push
pop
add
out
mov
jle
dec
cmp
mov
xor
cmp
in
and
mov
sbb
dec
out
mov
cmpsl
jg
xchg
add
call
add
jp
pop
rcl
add
movl
lock
or
ss
cltd
lahf
rcll
nop
rcrb
adc
jns
mov
push
and
xchg
pop
pop
mov
ss
mov
xor
test
fdivrl
lcall
pusha
jl
sti
aam
push
insl
ja
aad
adc
int3
or
stos
xchg
dec
mov
add
cmpsl
add
mov
add
ljmp
inc
xchg
cmp
imul
pop
loopne
loop
and
rcrl
lea
cmp
cmp
or
addr16
cltd
ror
xchg
dec
push
iret
inc
or
xor
lahf
in
loop
addl
insl
or
inc
inc
pusha
cmp
movsb
push
mov
dec
xlat
xchg
adc
icebp
mov
or
in
sahf
lret
xchg
mov
data16
sbbl
fistpll
cmp
outsl
popa
inc
imul
insb
nop
push
xchg
aaa
js
pop
xchg
out
addr16
mov
jae
enter
and
mov
out
outsl
lock
repz
sub
test
mov
fnstcw
xor
leave
out
jbe
xchg
cmp
jmp
cwtl
push
xchg
hlt
fldt
jne
mov
pop
div
xchg
xor
xor
rcrl
ret
jb
mov
ret
aam
cmpsb
jno
pusha
xchg
test
xor
out
outsl
pop
fwait
jmp
addb
out
cwtl
es
imul
loope
hlt
mov
push
or
inc
push
inc
dec
jp
stc
inc
test
les
sub
into
dec
or
loope
cmp
dec
xor
and
adc
pop
call
xchg
mov
or
call
xor
fisubs
lahf
lahf
test
push
fwait
std
lcall
popa
insl
xor
mov
mov
push
push
sub
mov
movsl
adc
into
test
ljmp
int
out
sbb
stc
iret
fwait
call
mov
sub
movsb
inc
lret
stc
cmp
push
push
shrb
stos
fs
lret
xorl
push
or
js
adc
add
call
mov
pop
in
fisttps
xchg
ja
adc
push
mov
in
fnstenv
mov
sahf
mov
cli
mov
frstor
fs
cmc
xchg
push
cmp
push
push
mov
cli
sahf
add
xlat
out
jbe
ja
or
and
cmc
pop
jbe
sbb
inc
push
mov
and
call
adc
mov
movsl
cld
fldcw
addl
lods
addr16
rcll
push
adc
pop
add
xor
xor
mov
push
fiaddl
lods
scas
push
add
test
xor
mov
fstps
nop
sub
stos
xchg
lods
enter
fwait
pop
pop
fldenv
mov
xor
xchg
cmp
mov
xchg
lret
movsb
push
cld
or
pop
leave
aad
nop
adc
ja
les
cmpsl
mov
fwait
dec
out
xor
cmc
leave
and
or
or
fstpl
cmp
xor
bound
dec
xchg
adc
call
arpl
cmp
xorb
push
mov
mov
jb
jmp
test
push
or
push
int
sbb
inc
outsl
mov
pop
sbb
sub
movsl
cmp
inc
ja
fcoms
jl
pusha
mov
sbb
mov
imul
mov
call
sbb
pusha
outsl
inc
fnstcw
or
xchg
shrl
adc
cwtl
scas
xor
fwait
jge
loop
ljmp
insb
lods
nop
nop
push
xor
xor
dec
cmp
sub
pusha
dec
repnz
pop
js
ret
and
outsb
ss
hlt
loope
sahf
or
data16
dec
mov
cltd
sub
lds
loopne
enter
icebp
xchg
lcall
iret
dec
jae
lahf
mov
fdivrs
sbb
inc
pop
mov
and
ljmp
enter
inc
dec
cmp
dec
test
outsl
xchg
dec
dec
dec
mov
jno
jo
and
aad
stc
adc
inc
jb
loop
ftst
cmc
divl
dec
push
mov
adc
pop
cmp
dec
xor
jo
and
jae
inc
icebp
andl
arpl
outsl
cmpsl
push
adc
mul
xor
or
sbb
xor
movl
movsb
stos
lea
test
dec
xor
loope
loope
je
add
xchg
mov
jg
mov
add
rorl
inc
div
int3
leave
jl
cmp
mov
sbb
dec
mov
scas
out
and
rcl
push
jge
test
clc
dec
iret
mov
mov
and
rorl
xchg
mov
pop
andb
out
in
sub
add
xchg
mov
shrl
xor
bnd
adc
mov
repz
fxch
inc
enter
xchg
push
out
mov
pop
fdivs
lcall
mov
cs
or
test
lds
inc
jnp
add
xor
pusha
xor
mov
loope
inc
lock
pop
push
push
fisttpll
sti
mov
dec
int3
inc
mov
mov
and
push
inc
and
dec
inc
in
data16
add
adc
push
fs
mov
cmp
test
mov
bound
mov
xchg
inc
mov
inc
jecxz
fidivs
rcrl
sub
jmp
js
rcl
mov
xchg
movsl
jbe
clc
enter
push
pop
aaa
or
mov
jae
in
cmc
adc
xchg
mov
pop
cmp
mov
dec
rclb
in
push
and
adc
push
loopne
ljmp
push
fs
sbb
aas
movsb
and
xchg
or
mov
dec
lods
pop
fbstp
dec
call
inc
int3
in
pop
or
cmpsb
aad
jo
mov
stos
popa
jmp
stos
subb
and
lcall
mov
lock
jb
enter
shlb
arpl
repz
pop
daa
cmp
mov
icebp
leave
dec
add
fs
aam
data16
inc
sbb
adc
in
insb
jecxz
js
inc
push
jge
cmp
add
adc
push
xchg
pop
adc
mov
add
lock
inc
and
insl
dec
daa
jno
int
in
add
cli
jb
mov
mov
xchg
add
mov
pop
xlat
cmp
mov
hlt
rolb
and
adc
scas
adc
std
cwtl
mov
mov
ja
aam
push
sub
mov
add
add
jg
psrlq
fsubrs
iret
cli
dec
pop
mov
mov
iret
orl
dec
jmp
call
adc
out
xchg
cmpsl
sub
repz
cmpsl
imul
push
push
call
ret
xchg
aad
daa
xchg
mov
ja
out
sub
sub
test
movsb
sub
mov
scas
jp
xchg
push
in
sbb
inc
cwtl
xor
fdivs
mov
xor
call
scas
pop
stos
stos
lods
add
pushf
inc
daa
int
cld
add
je
inc
sarb
icebp
xchg
add
inc
jl
inc
xor
fwait
cmp
daa
lock
das
and
and
dec
mov
fisttpll
daa
test
in
pop
inc
fwait
xchg
jne
push
shll
lahf
cwtl
insb
or
ficomps
bound
adcl
pop
jecxz
out
clc
shll
mov
test
pop
lock
pop
flds
sbb
push
into
testl
shrb
lcall
fnstenv
ss
jmp
out
jne
push
dec
jp
sbb
mov
ljmp
pop
cmp
mov
movsb
lcall
pop
out
and
stc
sub
std
in
cmp
out
call
ds
cmp
and
mov
cmp
aad
lret
stos
shrb
dec
out
jmp
mov
int
or
ret
mov
int
aaa
enter
aam
fsubs
repnz
xlat
rcrb
sbb
mov
xchg
call
mov
dec
inc
mov
filds
popf
pushl
xchg
jmp
cmc
sbb
mov
xlat
ficompl
or
and
add
push
jecxz
addr16
xchg
lods
dec
out
adc
ret
jecxz
jo
cmc
jl
inc
fs
inc
addb
jg
adc
imul
lahf
adc
inc
fdivrl
adc
into
idivb
mov
push
ljmp
in
xor
insl
divb
xor
jb
ljmp
jp
das
fwait
popf
scas
dec
dec
mov
scas
mov
xlat
out
sahf
or
cmp
push
xor
cs
ljmp
adc
adc
mov
icebp
sti
arpl
mov
pop
add
add
mov
shr
adc
arpl
cmpsb
insb
or
fadds
push
lods
loop
in
sar
xchg
and
mov
adc
mov
sbb
jbe
pop
jl
rclb
fmull
xor
push
insb
out
add
mov
mov
push
ljmp
jae
decl
inc
sub
gs
pop
or
lock
xlat
cmc
or
xchg
pop
push
ja
inc
dec
xor
sar
rolb
mov
test
jnp
out
cmp
mov
leave
hlt
push
xchg
adc
jle
jne
js
pop
lret
insl
adc
push
add
and
push
mov
inc
iret
pop
cmp
cltd
lods
xlat
add
dec
mov
dec
testl
add
lcall
or
jge
xchg
call
push
mov
lcall
and
jge
int
xchg
mov
cwtl
cmp
test
shr
jns
lods
sub
sbb
cmpl
ja
mov
mov
jmp
ficompl
pop
xor
fucomp
push
ret
cmp
fadds
and
mov
mov
or
jl
stc
daa
pop
xor
movsb
lds
je
push
in
icebp
fdivl
enter
outsl
xchg
cld
popa
mov
mov
cmp
mov
test
adc
loope
adc
mov
sub
adc
je
aad
sarb
push
pop
jns
cmp
rcl
add
xor
inc
sub
in
cltd
aad
cmp
and
xor
jo
enter
fdivp
push
jg
or
das
mov
ret
or
sbb
xor
mov
xor
jo
jo
mov
push
lock
shl
int
mov
out
and
xor
shll
int
push
stc
jb
rorb
inc
sub
iret
cmp
add
add
scas
loopne
lea
inc
in
or
jns
into
add
adc
adc
mov
mov
sbb
jb
fwait
xchg
repz
xor
fwait
add
xor
add
adc
jecxz
es
xor
ljmp
movsb
add
dec
ror
popf
add
lea
sti
push
inc
nop
fnclex
in
fdivl
push
dec
cli
xlat
push
loop
cwtl
pop
cli
scas
add
xor
dec
inc
mov
outsb
negl
jbe
xor
inc
or
cwtl
inc
mov
mov
cld
mov
jns
or
loope
cltd
movsb
out
mov
mov
mov
mov
out
pop
sub
sbb
fstl
fwait
rorl
pop
inc
leave
les
cwtl
sbb
les
mov
test
fldenv
dec
fiaddl
sub
sbb
mov
cli
repnz
mov
in
mov
jb
lods
je
ret
xor
jl
arpl
xlat
ds
and
sbb
jl
push
pusha
cmc
cld
out
bnd
sbbb
in
jae
and
mov
fcomps
shrl
mov
pushf
or
js
into
fcoms
std
mov
call
sbb
cmpsb
inc
shl
mov
addl
das
pop
and
sbb
stos
insl
sub
cmc
sbb
lret
stos
in
sbb
mov
pusha
packsswb
adc
lods
mov
cmp
out
call
insb
test
test
cmc
ret
xchg
xor
adc
add
xor
rorl
aam
adc
ret
std
xor
loope
mov
add
ljmp
in
test
lods
jl
js
ret
xor
lcall
jbe
jae
mov
jge
lret
stos
out
pop
cmp
fists
jmp
dec
mov
dec
cld
into
sub
mov
leave
add
in
jno
mov
popa
mov
mov
cmp
and
dec
cmp
jp
popf
add
jbe
in
rolb
aaa
imul
dec
out
jbe
pop
testb
mov
pushf
inc
cmp
sbb
adc
fbstp
out
cmp
inc
dec
clc
or
push
lock
mov
jl
push
xchg
vandnps
and
cmp
cwtl
sbb
rcrb
ljmp
and
push
dec
mov
adc
imul
inc
pop
mov
lds
das
pop
push
repz
in
mov
ds
in
cmp
dec
add
cmpl
xchg
ljmp
pop
in
xchg
test
xchg
into
and
lahf
icebp
xlat
das
push
cmp
loope
cmp
mov
and
xor
push
or
sar
pop
imul
imul
mov
lcall
mov
mov
inc
sub
cmp
andl
hlt
adc
std
xor
mov
outsl
sub
sahf
sub
imul
jnp
jg
loopne
repz
std
xor
add
loopne
fcmovnu
sbb
jge
clc
add
cmpsb
outsb
leave
add
xorl
mov
pop
push
into
cmp
cld
or
aad
and
test
adc
jge
fs
jno
out
sbb
lahf
add
jmp
inc
adc
dec
int3
das
xor
jle
xor
lea
int3
out
int3
mov
xor
mov
lds
lods
aad
addr16
aaa
sub
sti
mov
dec
sub
cmpsl
cmp
xor
leave
mov
pop
sub
push
fcompl
sti
dec
mov
pusha
pop
push
fcompl
xor
hlt
popa
movsb
xor
sahf
test
ss
xchg
fs
xor
sahf
add
adc
ja
orl
mov
cmc
or
and
cmp
cmpsb
or
push
sarb
sahf
in
hlt
push
mov
dec
movl
xchg
pop
mulb
popa
and
in
push
test
xor
xchg
jmp
push
mov
adc
mov
inc
pop
or
cmp
sbb
xchg
xchg
sti
inc
mov
inc
flds
pop
insb
adc
loope
pop
lds
sub
push
inc
sahf
bound
subb
push
cmp
lods
mov
mov
shll
loopne
movsb
jno
out
rcll
cmp
adc
jmp
das
sub
testl
add
and
push
push
dec
push
mov
rolb
and
mov
jle
inc
and
cli
loope
add
pop
popf
test
adc
sar
push
loop
ror
in
lcall
jnp
jmp
or
je
mov
or
xor
fiaddl
sbb
inc
cld
les
fiaddl
stos
or
lock
das
pop
or
mov
xchg
push
jb
xor
lds
bound
jle
outsl
add
jns
adc
clc
or
ja
mov
mov
cmp
out
jmp
ret
fisubl
lock
pop
test
std
lds
sbb
cwtl
pop
add
jecxz
mov
imul
lods
inc
iret
pusha
cmp
sbb
inc
cwtl
or
pop
mov
cmpsb
sbb
cmp
outsb
jno
shrb
inc
mov
fcmovu
das
push
push
repnz
or
lret
lret
or
add
lea
inc
ja
xlat
adc
xchg
mov
stos
pop
rcrl
in
or
loopne
sbb
cmp
into
orl
mov
jp
mov
scas
shrb
jo
jge,pt
pop
mov
loope
sahf
addr16
sti
mov
enter
fwait
add
mov
adc
arpl
lea
jb
daa
xor
mov
adc
int
xor
inc
shrb
xchg
push
fcomps
int3
add
icebp
pop
dec
shll
sbb
or
pop
sti
adc
mov
setg
outsl
pushf
or
mov
xchg
aas
pop
hlt
rcll
loopne
lock
mov
add
mov
cmpsl
add
push
or
shll
pop
or
movd
add
fldl
xchg
dec
sbb
jbe
adc
loop
or
fstps
fiaddl
in
pop
jp
sti
pop
mov
hlt
jae
or
cmp
fdivs
and
test
cmp
cs
cmp
xor
push
mov
jns
sub
mov
jb,pn
popf
mov
loope
negb
sahf
sub
mov
xorb
es
cmpsb
push
bound
dec
mov
jne
out
std
inc
pop
push
sub
xchg
xchg
cmp
pop
sbb
mov
dec
xor
add
out
jge
les
push
dec
sbb
je
cld
or
pusha
inc
hlt
ror
or
stos
out
sub
push
cmp
lds
lcall
test
dec
and
ret
mov
add
divl
popf
jecxz
inc
lods
xchg
xchg
out
mov
or
fdivr
dec
imul
dec
out
sbb
sub
push
push
push
push
sub
rol
mov
jecxz
sti
and
lods
psrld
mov
mov
fwait
xchg
std
mov
dec
test
xchg
mov
inc
das
sbb
sub
lds
inc
aad
xor
mov
dec
pop
inc
adcb
enter
pop
push
repnz
pop
sbb
or
dec
stc
cwtl
icebp
test
sahf
add
dec
test
pop
mov
stos
add
push
mov
xorl
xchg
or
stos
dec
or
iret
push
and
out
nop
test
push
jns
xor
ret
xor
adc
popf
xchg
mov
mov
aam
setp
loop
popf
sbb
data16
adc
add
call
repz
inc
imul
icebp
roll
and
rolb
ret
stos
push
aam
pop
mov
imul
cltd
and
pop
mov
cwtl
and
xchg
sub
dec
fcomps
mov
pop
cmp
sbb
push
mov
push
xchg
fldl
or
ljmp
pushf
test
sahf
in
mov
movsl
icebp
repnz
and
pop
sub
xlat
jl
cmp
or
push
jp
mov
insb
cmpsb
incb
pop
lds
jle
pop
or
fnstsw
inc
lret
mov
pop
xchg
repnz
lods
sbb
fbld
cmpsl
or
out
lret
dec
repz
aam
dec
loopne
xor
mov
ja
sub
lds
movb
sbb
xor
dec
movsl
or
mov
out
adc
movsb
dec
push
jp
xor
dec
clc
aas
xchg
out
sub
mov
pop
or
inc
leave
lea
test
cmp
sbbl
loop
push
je
fcoml
push
popf
gs
xchg
imul
aad
popa
mov
enter
pop
cwtl
cmp
sarl
das
mov
dec
or
shrb
xchg
fdivs
leave
loope
fstl
daa
inc
jmp
jb
mov
call
push
stos
mov
adc
cmp
mov
or
mov
adc
mov
outsb
add
sti
std
loopne
inc
daa
lock
or
lret
xchg
cmp
clc
sub
adc
add
test
insl
dec
dec
incl
out
cmp
sub
jne
cmp
mov
dec
mov
cld
dec
mov
sbb
xlat
xor
cmp
nop
adc
dec
dec
mov
dec
push
fsubr
mov
sbb
inc
and
enter
add
les
and
xchg
loopne
jl
cld
ss
fnstsw
dec
movsb
shll
imul
jg,pn
cmp
cld
imul
xchg
or
mov
out
lods
adc
rcr
aas
mov
mov
int
das
int
mov
mov
inc
adc
stos
mov
jo
test
mov
lcall
std
cwtl
jl
pop
cmpl
xchg
fwait
iret
sarb
mov
sbb
xchg
push
push
mov
xchg
call
loop
cmp
adc
fldl
aaa
dec
inc
out
jg
nop
inc
test
leave
notl
jae
adc
mov
es
movsl
fwait
fsubrl
lods
sbb
pop
lods
pop
shl
aas
sbb
fists
mov
aas
dec
push
push
js
arpl
in
movb
pushf
rcrb
add
pop
cmp
push
aam
jno
and
or
sbb
icebp
xchg
mov
int
repnz
mov
lods
cltd
lods
outsl
sete
popa
fldenv
cmp
pop
into
icebp
mov
leave
popaw
dec
and
mov
xchg
shrl
arpl
jg
cwtl
jno
rcrl
inc
scas
push
fsts
jae
movsl
xchg
loop
mov
es
mov
mov
insb
inc
sbb
adc
mov
adc
lret
mov
sub
xor
cwtl
rcrl
loop
mov
je
cmpl
fildll
and
add
mov
cmp
jne
xchg
jmp
mov
pop
inc
and
iret
cmp
jmp
sub
sbbb
mov
xchg
or
pop
dec
push
mov
pushw
clc
pop
adc
jns
rorb
in
fstps
xorb
xor
lods
loope
loope
dec
es
and
mov
push
rorl
mov
mov
in
push
inc
xor
mov
fsubrp
sbb
mov
cld
pop
lcall
jp
out
jnp
jae
xchg
jbe
lret
sbb
pop
xchg
push
jmp
and
fwait
push
mull
inc
dec
pop
jp
pop
mov
and
out
sqrtps
push
call
mov
jno
rcll
repz
mov
and
lcall
aad
and
cs
shll
sub
pop
and
in
and
pop
pop
inc
inc
xor
cld
mov
mov
push
sbb
movsl
mov
iret
test
jne
or
lret
or
scas
jo
ds
or
ljmp
cmp
cmp
or
pop
clc
in
sbb
out
ja
and
adc
xor
jge
or
insb
scas
aas
jle
nop
jo
dec
aad
sub
enter
sub
ss
dec
or
outsb
ret
out
jb
cs
nop
test
pop
cmp
push
mov
push
or
outsl
rolb
mov
mov
out
add
or
sub
loop
cmp
es
sub
cmp
adc
iret
mov
xchg
fistpll
mov
sub
pop
repz
cmp
and
dec
aad
mov
xchg
leave
or
std
bound
and
mov
enter
inc
mov
pop
dec
add
pop
pop
enter
int3
push
inc
and
dec
scas
pop
xchg
mov
and
jbe
ret
push
mov
sbb
fbstp
cwtl
icebp
data16
cmp
ja
ss
adc
pushf
dec
das
mov
xchg
or
aaa
mov
xor
mov
fdivrl
add
test
and
fdivrl
push
stos
pop
mov
or
pop
in
test
jge
jg
notl
out
rorl
cmpsb
push
and
js
fs
mov
jecxz
jg
xchg
aas
shlb
jo
out
push
mov
xlat
jecxz
adc
pushf
hlt
mov
lret
mov
int
mov
stos
outsl
lahf
sub
push
hlt
ja
pusha
and
scas
lret
shll
pop
sbb
jo
outsb
sub
cmpsl
popa
pop
dec
ja
out
jne
mov
and
js
mov
pop
or
push
pusha
in
cmp
ss
adc
lock
pop
adc
add
push
in
rorb
cmp
in
xlat
add
ja
adc
gs
xor
mov
call
adc
ljmp
xor
lods
mov
cli
ret
mov
adc
mov
or
mov
mov
dec
push
push
pop
push
xlat
xchg
inc
xchg
incl
shll
add
ljmp
xor
int3
adc
lock
leave
sahf
bound
hlt
test
and
adc
scas
pop
out
std
adc
das
outsl
pop
push
xchg
cmp
jb
fldt
mov
sbb
stos
jp
in
jp
outsb
push
xor
and
lcall
cmp
sub
ja
xchg
mov
or
cld
xchg
enter
popf
pop
sbb
xchg
insb
inc
mov
inc
sbb
sbb
adc
cmp
movsb
sahf
mov
pop
jmp
ret
ret
inc
mov
ret
lcall
sbb
push
in
push
into
dec
push
push
fs
pop
inc
and
fdivr
ljmp
adc
addb
dec
jle
je
mov
cmpsb
jnp
adc
test
inc
push
andb
cmp
adc
push
pop
inc
mov
mov
adc
push
jo
dec
add
jno
arpl
and
aaa
out
in
pop
daa
std
pop
into
push
jns
push
jnp
or
add
cmc
ljmp
jmp
mov
clc
and
out
sbb
xchg
lods
enter
cmpsl
push
push
lock
je
push
inc
mov
cmp
das
xchg
jecxz
fisubl
cmp
hlt
inc
test
push
dec
xchg
jno
mov
xchg
out
lret
pop
cmp
jae
xchg
cmp
in
cmp
bound
cmp
push
cmp
sub
icebp
and
sbb
mov
repnz
xchg
pop
cmp
jl
insl
pop
fidivrl
jmp
out
push
mov
cmpsb
mov
negl
bound
inc
in
sub
xchg
sbb
das
daa
sub
mov
ret
cmc
mov
pop
in
push
adc
iret
push
ret
xchg
or
scas
js
and
test
movsb
adc
stos
pushf
mov
push
aas
pop
ret
xchg
xchg
or
mov
jp
cmp
mov
xchg
ret
adc
jecxz
daa
pop
test
mov
jno
dec
aad
pop
xchg
out
xor
cmpsl
pushf
and
out
stc
incb
test
fwait
xor
bound
ffree
cwtl
dec
out
or
pop
scas
sub
cmc
sahf
inc
aas
jae
sbb
ret
mov
cli
cmp
cltd
leave
sbb
pop
ret
sbb
in
rorb
les
or
rclb
icebp
out
add
push
cmpsb
jbe,pn
rclb
sbb
stos
adcb
or
pop
mov
cs
ret
sub
fdivs
test
notb
lods
iret
cmp
es
xor
add
pop
shl
sub
icebp
loope
aaa
adc
push
xchg
or
cs
lds
notl
lods
leave
jno
dec
inc
jmp
jo
xor
fsubrp
and
inc
mov
insl
pop
push
xor
sbb
adc
mov
mov
mov
movsb
dec
sahf
stos
dec
aad
mov
fbld
fldcw
out
into
pop
mov
mov
push
cltd
cmp
fidivrs
hlt
bound
xchg
imul
popf
pop
mov
dec
mov
out
shr
dec
decl
dec
pop
jp
sbbl
cmp
nop
mov
orl
dec
mov
adc
xor
jno
pop
xchg
rcrb
mov
shrb
sbb
jg
rcrb
leave
xor
or
sub
test
add
push
xchg
xchg
in
and
mov
lahf
jno
into
jecxz
dec
icebp
push
fcmovne
aad
aas
and
or
icebp
inc
lret
push
cwtl
icebp
lret
mov
dec
subl
or
xlat
and
push
xchg
dec
rorl
test
cmpsb
xlat
fs
aam
xlat
and
test
cmpsl
je
add
cmp
push
lea
out
push
push
icebp
adc
call
std
xchg
scas
int3
pop
push
pop
push
les
mov
repnz
in
loopne
dec
xchg
pop
and
enter
gs
aad
cmp
dec
mov
inc
pusha
lret
jae
and
pop
sti
loope
rcrl
mulb
sub
mov
dec
dec
shll
fs
arpl
bsr
xchg
mov
inc
pop
mov
testb
and
dec
pop
cwtl
jmp
jle
imul
jo
sub
sub
arpl
adc
cmp
testl
xchg
sarb
jl
fsubs
cltd
mov
dec
mov
mov
sarb
mov
test
inc
pop
in
pop
and
call
pop
jbe
jne
mov
jle
iret
sbb
xchg
inc
mov
imul
or
jnp
xchg
or
or
ljmp
adc
jge
mov
jns
push
add
in
hlt
mov
xchg
mov
fcmove
scas
aas
or
inc
in
sub
rep
aad
sbb
int
roll
mov
mov
cmp
stos
jb
fwait
out
cmpsb
mov
push
aaa
inc
lods
dec
ret
mov
cltd
es
jecxz,pt
inc
xor
ljmp
xchg
jb
cmp
outsl
aaa
fmuls
decb
xchg
push
je
xlat
in
movsb
in
fbstp
insl
std
cmp
fcomp
mov
cmc
les
xchg
xchg
dec
pop
subl
mov
test
pop
fcompl
dec
inc
scas
cmpsl
sbb
jp
or
xchg
mov
xchg
mov
mov
sub
lock
iret
repnz
bound
push
push
mov
out
push
insl
xor
loop
xlat
fldl2t
into
adc
inc
sti
push
sbb
mov
out
int3
inc
mov
jg
ja
and
lds
shll
cld
add
pop
or
mov
push
xchg
push
xor
ljmp
cmp
dec
int3
xor
sti
hlt
xchg
cwtl
sti
or
pop
jmp
dec
data16
test
aaa
das
push
dec
mov
dec
jmp
cmp
mov
rcr
inc
rol
jns
inc
push
cltd
sbb
jnp
sbb
mov
pop
ret
or
push
xchg
dec
das
mov
out
stos
sbb
aad
or
pop
pop
jl
jp
jg
inc
sbb
lahf
adc
out
movsb
stos
dec
in
mov
mov
pop
fidivs
in
icebp
add
cvtpi2ps
xor
or
xor
stos
cmp
lcall
add
xor
pop
pop
in
arpl
adc
stos
inc
sti
jne
fcmovb
xlat
in
cmc
sub
rorb
xor
push
popf
fisttpll
cs
cmp
negl
out
insb
stc
adc
icebp
push
inc
mov
into
and
ret
fwait
push
ja
mov
lock
cmp
push
jno
jne
sbb
fwait
scas
inc
test
testb
stos
and
cmp
lea
sub
sbb
adc
std
mov
xor
repnz
insb
fs
push
mov
imul
inc
and
xchg
fcmovnbe
cld
xor
ja
js
or
out
jle
sub
sbb
movsb
sahf
ja
arpl
roll
mov
rcrb
sbb
mov
push
cmpsb
rorl
fbstp
add
fsubs
cmp
jmp
fisttpll
std
ret
and
mov
pop
sahf
enter
jno
dec
xor
aaa
and
fiadds
jge
lcall
add
jmp
inc
dec
test
aas
orl
rol
aas
and
not
rorb
mov
pop
ds
mov
sub
xorb
nop
mov
in
mov
add
cltd
int
jp
add
cmp
or
push
jno
inc
ret
dec
mov
repz
int3
push
leave
aaa
ljmp
das
fmuls
ret
mov
insb
shlb
imul
popf
test
mov
movsb
daa
inc
lock
int
and
or
jecxz
mov
push
push
pop
and
roll
mov
cmp
sub
mov
in
ljmp
adc
adc
out
mov
js
int3
fwait
add
sti
adc
push
adc
cld
mov
loope
sbb
cmpsl
push
xor
rcrl
xchg
arpl
push
add
mov
hlt
stos
mov
out
jle
shll
out
jne
mov
dec
mov
out
outsl
push
dec
mov
or
jmp
inc
xchg
das
inc
sbb
fnstcw
data16
fisubl
test
mov
mov
xchg
fbstp
xor
cmp
and
push
test
cmp
mov
addb
mov
mov
stc
lcall
daa
call
fistpll
or
cmp
mov
inc
pop
dec
and
imul
je
cmp
faddl
mov
stc
inc
mov
testb
lcall
xchg
sbb
or
in
mov
lods
idivl
xchg
hlt
cmc
pop
popa
imul
nop
or
fdivp
cwtl
xchg
push
addb
add
pop
xor
mov
pop
out
lea
push
test
jnp
loope
and
mov
sbb
fistpl
xchg
leave
xchg
push
mov
pop
in
hlt
fldt
and
inc
cld
mov
in
fs
imul
sbb
jmp
aam
repz
push
popf
jbe
lret
lret
rcrl
aaa
inc
pop
stos
cmp
scas
or
adc
cltd
imul
inc
add
clc
popa
mov
arpl
xor
pop
dec
cli
xor
dec
and
and
sub
jg
jp
nop
stc
xlat
out
dec
jle
adc
add
sub
scas
add
jne,pt
pop
cmp
dec
push
mov
push
lahf
xchg
jle
std
leave
push
enter
xor
cmpb
lods
jecxz
js
das
jp
adc
mov
stos
sbb
push
test
shrl
sbb
lock
pop
inc
mov
std
fwait
les
dec
test
aam
ret
or
test
or
or
pop
mov
inc
iret
push
ja
sub
cmp
out
or
and
xor
nop
cmc
push
gs
jbe
ret
cli
addr16
por
fsubr
leave
mov
adc
repnz
xchg
sbb
cmp
push
xor
mov
aad
popa
loopne
mov
jecxz
imul
cmp
lea
pop
out
mov
js
jp
lcall
mov
jns
sbbl
cmpl
mov
xor
dec
dec
or
cmp
push
bound
inc
aad
mov
shrl
clc
push
ja
jge
sub
je
push
jmp
cwtl
pop
pop
xchg
lock
lods
xchg
rorl
fnstcw
test
mov
mull
mov
outsl
add
jmp
pop
sti
test
or
push
and
out
adcl
insl
dec
push
xor
jbe
jg
push
xchg
into
ss
dec
mov
pop
and
xchg
mov
sub
lea
scas
and
cli
in
cmp
adc
mov
cmpsl
outsb
sbb
jp
xlat
fldl
cli
sbb
sarl
rcr
jle
dec
aam
arpl
mov
jmp
or
push
out
dec
es
sbb
jl
jp
jge
stos
cmp
cli
sbb
add
cmp
lret
ret
and
cmpsb
jl
jmp
in
loope
mov
lret
shrl
in
shll
shl
aas
jnp
popa
dec
jb
pop
sbb
inc
push
sar
sub
adcl
lods
adc
jb
imul
xchg
in
out
fmul
invlpg
or
es
inc
or
dec
les
inc
and
pop
sbb
mov
arpl
into
cmp
xorb
repnz
hlt
inc
sbb
mov
leave
push
out
les
dec
out
pop
test
push
outsl
enter
aaa
sub
push
add
movsb
loopne
jle
mov
push
pop
dec
inc
dec
int
popa
and
jge
cmp
sahf
test
push
out
inc
loope
push
les
push
xchg
dec
and
and
sub
test
and
add
pop
lcall
decb
loope
pusha
mov
pop
push
jmp
inc
lret
insb
mov
leave
out
ja
push
inc
subb
in
mov
mov
mov
push
or
ljmp
lahf
fidivrs
dec
cmp
push
in
rcl
dec
push
imul
adc
cmp
cmp
sub
xor
lods
mov
mov
adcl
ror
inc
mov
rcrl
aad
sub
aaa
int3
mov
cmp
int
mov
ljmp
sti
xchg
xchg
cmp
mov
test
jl
jp
lret
cli
pop
fistps
mov
adc
adc
xchg
push
icebp
loop
hlt
fcmovne
cmp
rolb
xor
cmp
insl
repnz
in
mov
loopne
repnz
jnp
mov
enter
pop
outsl
mov
mov
xor
mov
mov
aam
movsl
add
add
in
pusha
dec
sbb
test
inc
add
icebp
sub
outsl
mull
bound
pop
fsubrp
cmp
lods
shlb
or
add
pop
repnz
daa
jp
imul
lods
fdivr
lods
pop
sub
shlb
dec
loopne
lds
mov
jmp
stos
push
sub
mov
pop
adcb
fwait
push
mov
jmp
ss
sub
mov
or
jns
xor
cmp
test
mov
inc
insl
and
pop
popf
call
int
inc
icebp
ljmp
xor
push
scas
inc
movsb
mov
sub
mov
push
push
pusha
insb
imul
mov
in
xchg
inc
jg
enter
mov
jmp
jg
imul
shr
lock
cmp
into
push
and
in
sbb
push
cwtl
inc
outsb
inc
cmpsl
lods
or
inc
mov
add
mulb
inc
pop
movsb
sub
pop
fnstcw
ud1
mov
fisttps
call
cltd
sbb
pop
dec
ret
xchg
scas
fiadds
push
and
push
outsb
test
addr16
rol
les
int
cmc
pop
xchg
sbb
lcall
inc
mov
inc
pop
scas
mov
adc
leave
cmc
or
and
cmc
mov
shll
xchg
imul
test
out
mov
popf
add
call
incb
jne
test
xor
fnsave
andl
or
xchg
cld
ja,pn
jp
ficomps
fsubrl
fwait
mov
mov
bound
xchg
mov
mov
dec
popa
hlt
push
cmp
xor
dec
lret
in
adc
mov
mov
sarb
adc
cmc
add
mov
jns
sti
adc
loopne
scas
cmp
pop
popa
int
add
xchg
dec
mov
ds
jmp
push
pop
js
mov
and
mov
clc
call
xor
loope
in
cltd
mov
inc
jnp
sarb
lret
loopne
pop
pop
xorb
cmp
or
mov
dec
movsb
jecxz
orl
dec
shrb
inc
jge
aas
imul
andb
pop
xor
or
and
lock
fs
inc
jecxz
or
sbb
mov
inc
xchg
xchg
or
sbb
xor
std
adc
xor
sarb
icebp
hlt
inc
aas
or
mov
inc
loopne
mov
scas
sub
lock
jne
mov
push
repz
test
popf
mov
mov
inc
test
sahf
shll
mov
lcall
inc
mov
test
into
aam
mov
push
or
movsl
scas
push
punpckhdq
jecxz
mulb
in
ror
ja
aad
ret
dec
add
rorl
lret
mov
fists
inc
add
xchg
xchg
pop
rol
ret
ret
mov
ret
cwtl
aam
add
bsr
or
xlat
add
fisttpll
outsl
ss
gs
mov
lock
sub
out
push
pushf
movsl
fidivs
pop
xor
lret
fstpt
loopne
sarb
xlat
pop
push
and
sbb
push
push
test
inc
pandn
cli
lods
daa
aad
and
loopne
std
jl
sub
ja
mov
cmp
mov
push
jle
sbb
or
test
inc
scas
cli
imul
cmpsl
sarb
xchg
ds
cmc
fcoml
push
add
and
mov
xor
ret
das
stos
push
js
mov
mov
stc
xor
push
dec
sub
jno
andb
aam
fst
and
mov
add
das
mov
xchg
mov
sti
fistpll
lea
loop
cld
les
ret
outsl
sahf
pop
shll
int3
ds
inc
cmc
cs
in
mov
call
out
xchg
mov
arpl
cmc
add
ret
shrb
push
int
add
call
dec
dec
out
cmp
filds
aas
lds
xor
div
pop
add
add
scas
add
and
std
cli
int3
fidivs
adc
pop
pop
sarl
pop
sbb
sti
sub
pop
je
je
xchg
mov
int3
jb
mov
add
mov
out
lcall
cmp
sbb
pop
out
jnp
inc
movsl
jle
sbb
test
out
imul
cmp
das
popa
lods
dec
lea
ret
cmp
leave
insb
push
clc
inc
pop
jle
push
outsl
clc
cmp
subb
sbb
sbb
mov
aad
aam
repnz
lock
pushf
stos
ret
call
data16
sbb
pop
fistps
aaa
test
add
ja
push
sub
enter
pop
or
es
pop
dec
dec
iret
push
js
cmp
pop
sub
stos
sub
pop
pop
sub
pop
jb
mov
inc
mov
sbbl
mov
mov
add
test
js
xchg
xchg
aad
loopne
test
test
inc
jb
hlt
mov
and
mov
int
xor
popf
cmp
out
aaa
lock
or
mov
and
stc
jne
int
insl
dec
rol
imul
jmp
sti
repnz
pop
lcall
ss
inc
scas
andl
cs
out
cvtps2pd
imul
testb
ffreep
clc
add
xchg
enter
bound
cltd
xorl
sbbb
mov
cmp
dec
mov
inc
sarb
je
adc
pop
shll
dec
sub
ljmp
adc
add
dec
sbb
push
sbb
insb
bnd
imul
jg
mov
andl
idivb
int3
inc
xor
xor
roll
addr16
insl
les
aam
ss
pop
mov
mov
or
dec
test
test
pop
lods
and
punpckldq
xchg
mov
cmp
add
mov
lods
stc
cmp
adc
and
inc
shlb
aaa
repnz
clc
in
sbb
int
in
mov
sbb
adcl
movsl
lds
sbb
push
pop
jae
test
outsb
mov
cmp
dec
test
lret
lock
lea
imul
call
mov
xor
repz
fwait
in
xor
mov
pop
shlb
fadds
xchg
and
lgs
or
adc
dec
jb
dec
nop
inc
ret
fisttps
ret
adc
lods
push
mov
out
ficoms
mov
sbb
loopne
icebp
lret
test
hlt
lret
out
cmp
pop
xchg
stos
popa
sub
test
outsl
mov
imul
xor
jns
adcl
jle
xchg
in
mov
mov
jmp
int3
push
mov
lods
jmp
mov
xchg
push
dec
scas
repz
add
scas
push
arpl
sahf
mov
sub
sub
mov
mov
sbb
cmpsb
sarl
dec
jp
das
pusha
pop
aad
dec
mov
add
pop
rorl
xor
mov
push
out
aam
cli
or
pop
out
arpl
jle
lea
cltd
push
lret
push
mov
jb
xchg
add
lret
hlt
adc
mov
push
out
xchg
mov
xor
adc
test
and
add
hlt
aam
test
jno
dec
outsl
mov
idivl
adc
or
pop
adc
pop
mov
lret
cmpsl
js
rcl
lahf
loopne
jnp
and
ljmp
pop
jg
dec
or
lea
adc
lods
sub
int3
mov
pop
gs
adc
or
test
or
bndstx
sbb
shll
or
pop
insl
enter
xor
inc
inc
xchg
rcll
sub
adc
or
jg
dec
das
gs
and
sarl
subl
je
mov
popf
ja
sub
jl
leave
in
jnp
pop
scas
cmp
cmp
mov
pop
lret
sub
adc
pop
bound
pop
pushf
scas
arpl
cmpsl
push
push
pop
mov
push
mov
rcrl
in
xchg
lock
popl
lock
movsl
rclb
mov
xchg
pop
adc
or
ss
test
jbe
add
xchg
jecxz
inc
sbb
pop
cmp
jne
pop
aaa
loope
mov
out
add
arpl
push
inc
mov
jl
repnz
lea
sub
test
mov
lahf
lods
sbb
add
cs
scas
add
es
push
mov
lret
dec
mov
out
nop
imul
into
push
into
ljmpw
add
cmp
aam
sarl
xchg
or
mov
enter
lea
in
add
arpl
or
rcll
or
or
cmp
fs
cmp
fnstcw
out
popf
leave
inc
aas
sub
mul
shll
mov
into
mov
pop
lret
inc
mov
mov
mov
inc
and
xor
xchg
jo
lcall
add
lcall
xor
mov
cmp
push
push
mov
dec
push
pop
mov
pop
or
rorb
lcall
dec
ret
cmp
add
inc
and
into
vpshaw
xor
sub
out
enter
inc
add
imul
adc
mov
push
mov
lret
lea
ret
and
mov
test
jbe
aam
pop
push
jl
add
scas
les
sbb
roll
xchg
mov
loope
xchg
ret
mov
xorl
xor
jecxz
in
rcl
cli
pop
bound
mov
mov
mov
out
addr16
mov
fstpl
test
out
nop
jo
int3
mov
je
cwtl
add
jae
movsl
fdivl
jle
inc
adc
mov
mov
lods
data16
jmp
xchg
cmp
and
ret
pop
push
mov
fdivl
ljmp
idivl
popf
test
jo
mov
sub
ja
adcl
filds
in
sahf
nop
pop
cmp
into
sub
movsl
out
xchg
mov
in
add
ljmp
adc
mov
sbb
or
fwait
mov
sahf
daa
mov
outsl
dec
inc
jecxz
jb
dec
outsb
cmp
pop
mov
jnp
jmp
ja
jne
mov
xchg
fldt
jnp
fidivrl
sarl
in
rolb
arpl
fidivs
lds
mov
addr16
pusha
xor
sbb
add
movsl
inc
cli
outsl
aad
pop
or
in
mov
mov
inc
push
jl,pn
insl
fisubl
aas
mov
jae
subb
xor
cwtl
sub
mov
or
and
mov
out
scas
mov
cltd
jno
pop
icebp
add
adc
aam
jge
push
into
push
push
fdivs
js
imulb
mov
add
ret
jge
pop
lods
mov
in
sub
sbbl
push
out
inc
ja
add
ffree
arpl
sahf
sahf
sarb
and
in
lahf
inc
hlt
mov
imul
scas
dec
add
iret
aas
mov
movsl
rorl
jmp
push
jae
imul
and
cmpsl
push
jnp
sub
jmp
jge
adc
lea
sub
jae
pop
cs
into
inc
cwtl
cs
popl
in
pop
xchg
test
inc
cwtl
mov
bnd
loope
ljmp
lahf
xor
addr16
and
sahf
sub
scas
ret
divb
inc
lret
adc
int
inc
ljmp
mov
into
negl
shll
or
dec
xlat
mov
or
sub
xor
inc
xor
in
mov
sahf
sub
cmc
stos
lods
or
lret
scas
test
stc
test
mov
sbb
mov
fsubrs
sbb
and
loop
ret
jne
insl
xor
mov
lcall
lock
gs
or
dec
mov
in
out
xor
lcall
nop
fbstp
test
xorl
adc
outsb
lea
lcall
cmp
adc
push
cmp
add
xor
dec
lds
mov
outsl
sbb
or
mov
jp
popa
mov
push
out
rol
or
or
sbb
js
adc
fs
sahf
push
sub
sbb
jecxz
mov
fstps
jle
in
adc
movq
mov
cmpsl
out
mov
mov
push
loopne
inc
scas
arpl
push
mov
fildll
mov
jnp
clc
enter
push
leave
fnstsw
popa
test
xchg
movsl
fisubl
sub
mov
xchg
or
popfw
jo
popf
ss
jne
cmp
adc
jge
push
into
pop
add
xchg
adc
daa
hlt
pop
subl
roll
insl
cld
js
mov
sub
mov
dec
fistpll
idivb
cmp
pop
cwtl
lods
cmp
sub
push
pop
pop
mov
leave
roll
loop
rorl
jne
stc
rorl
dec
ret
sbb
push
mov
xchg
adc
sbb
ret
push
insb
xor
sub
bound
mov
daa
mov
mov
les
xor
adc
mov
mov
repz
pop
xchg
mov
xor
jmp
imul
dec
negl
jb
movsl
loop
int
add
aam
int
or
fisubl
scas
mov
lret
push
repnz
push
push
sub
stc
push
jnp
shlb
xor
idivl
insl
jmp
mov
dec
imul
xchg
mov
cmp
or
push
sub
arpl
xchg
mov
xlat
decl
icebp
out
dec
inc
pminub
adc
lods
and
nop
je
add
rcr
sub
or
arpl
pop
imul
push
mov
xor
inc
mov
iret
mov
or
lea
stos
out
mov
push
arpl
ret
mov
roll
cs
leave
popf
lods
lock
pop
stc
outsb
pop
ror
mov
daa
rolb
dec
inc
dec
xbegin
mov
fcomps
popf
xchg
cmc
push
call
xlat
cmpsb
jmp
pusha
push
sbb
or
push
sbb
scas
enter
and
shl
pop
adcb
cld
push
mov
push
push
mov
cmpl
data16
cld
ret
jg
mov
fcoml
ds
mov
loopne
aam
imul
dec
add
cmc
std
std
fisttpl
jae
sbb
mov
ret
pop
movsl
addr16
adc
movsb
bndstx
dec
popa
mov
inc
push
lea
mov
jmp
pop
fiaddl
pop
cld
stc
mov
and
in
mov
pop
push
xorb
mov
cltd
je
add
fmul
int
add
repnz
mov
shlb
sub
and
mov
data16
push
or
dec
mov
mov
jnp
fisubs
ss
mov
aaa
inc
lock
mov
mov
pop
fcoms
das
aaa
sub
js
push
repz
cli
idiv
in
pop
pop
add
xlat
dec
jge
leave
cmp
in
xchg
and
clc
xor
lret
je
imul
adc
jg
and
rclb
xor
jbe
push
cmp
add
out
cld
jb
rcl
adc
cmp
push
outsl
jb
cmp
pushf
xchg
mov
in
add
imul
mov
push
push
push
mov
and
rorl
test
hlt
dec
pop
int
mov
repnz
ret
mov
test
add
xchg
in
loopne
fdivs
jp
int
dec
in
inc
mov
stc
outsl
xlat
mov
and
cmp
add
ljmp
jp
jl
sbb
push
add
xchg
cwtl
xchg
loope
out
cmpsl
mov
or
sub
adc
aas
dec
push
mov
pop
fmulp
daa
out
ret
jl
add
add
mov
xlat
fidivs
call
imul
mov
shll
ffreep
gs
xchg
movsl
enter
les
data16
leave
jno
jnp
sbb
loope
sub
pop
in
clc
cmp
mov
dec
cmpb
jnp
sub
int
sub
jne
fcoms
ss
hlt
fisubrl
mov
pop
dec
and
jne
jae
mov
inc
push
jae
push
popa
sub
xchg
es
int3
mov
fildl
lret
out
adc
imul
fbstp
scas
sbb
scas
adc
mov
in
pushf
cmp
jnp
inc
jle
pop
jl
daa
xchg
rcrb
sub
push
or
in
xor
dec
adc
inc
orb
xchg
jmp
mov
or
call
mov
popf
cmp
repz
jmp
enter
mov
arpl
push
ljmp
jae
call
imul
jle
sbb
clc
push
into
int
mov
jns
mov
and
idivl
enter
lret
out
mov
lods
dec
jmp
div
mov
cmpl
push
push
ljmp
out
int
stos
jbe
lret
mov
rol
sub
pop
shrb
xor
cmc
pop
cmp
adc
loope
sub
dec
shr
adc
aas
mov
dec
pop
in
icebp
sbb
out
sub
ja
out
mov
mov
icebp
ljmp
repnz
pop
daa
mov
ja
cmp
mov
movsb
sbbl
scas
mov
xor
cld
stc
ja
push
in
iret
mov
and
in
hlt
mov
movsb
and
enter
or
pop
mov
orl
jge
cmc
mov
enter
jle
mov
mov
dec
adc
pop
vcvtpd2dqx
ja
mov
fmul
aam
lds
xor
outsb
jmp
cmp
std
pusha
and
popa
jb
cwtl
sqrtps
cmpsb
inc
adc
cmp
daa
lock
ljmp
cmp
cld
mov
cmp
sbb
lret
xor
cmpl
loop
jl
inc
pop
aam
nop
pop
cmp
jmp
or
addr16
test
fdivrl
inc
lcall
in
xchg
push
addr16
leave
add
inc
pop
notl
movsb
pop
cmp
add
arpl
aad
imul
imul
and
cld
mov
jge
mov
std
xchg
pop
mov
lock
sub
ror
and
bound
dec
jl
fdivrl
imul
scas
ret
mov
ret
adc
aam
arpl
mov
cmp
data16
push
pop
sbb
ret
hlt
fs
lods
arpl
jb
cmp
cmp
jmp
inc
orb
push
push
cmp
test
dec
pop
testl
testl
push
push
adc
and
popa
push
pop
push
sub
dec
movsl
mov
push
mov
push
dec
in
leave
call
jle
or
xchg
pop
sub
orl
outsl
stos
mov
lds
mov
mov
sub
add
cmp
push
in
cmp
or
movsl
jl
cmp
js
jmp
add
jae
xchg
pop
jmp
jnp
adc
cmp
jno
cwtl
lock
and
adc
fmuls
fcomi
addr16
push
lahf
mov
imul
aam
mov
mov
arpl
mov
scas
scas
push
mov
jo
lret
add
mov
inc
sbb
inc
jnp
mov
das
cmpsl
jbe
popf
adc
mov
out
nop
jne
mov
push
shl
js
mov
pop
inc
fwait
out
int
pop
je
jne
in
aam
je
ljmp
adc
pop
jb
cmpl
pop
mov
in
aam
push
pavgb
rclb
divl
nop
bound
enter
rep
sti
mov
rcrb
fnsave
and
sub
xchg
jbe
fsubp
lcall
call
test
dec
aad
out
arpl
int3
sub
sub
xchg
pop
mov
scas
inc
pop
sbb
test
inc
xor
sbb
sarb
adc
push
insb
sbb
in
ljmp
lock
mov
inc
pop
sub
push
stos
mov
push
sub
out
in
add
gs
in
jmp
inc
adc
sub
sbb
out
insl
fnstsw
sbb
stos
cmp
adc
enter
scas
mov
stos
adc
in
in
inc
int3
push
mov
adc
pop
pop
aas
shr
aad
add
xor
jg
sarl
jmp
das
mov
std
imul
js
ret
sub
out
js
dec
pop
shlb
push
es
push
dec
push
stos
aam
xor
stos
push
sbb
mov
sub
ret
sub
mov
inc
and
inc
jo
shll
and
hlt
and
stc
adc
jno
xchg
mov
cli
ss
and
mov
lret
cmp
in
dec
gs
shl
scas
movsl
cmovge
push
lgs
in
adc
xor
test
xchg
out
adc
xor
xlat
dec
outsb
lock
cwtl
mov
clc
sub
sbb
outsb
imul
imul
adc
inc
out
into
xor
aaa
negb
inc
rcll
mov
stc
adc
pop
mov
js
push
nop
push
ss
inc
push
lret
mov
adc
movswl
imul
filds
dec
dec
pop
sti
cmc
sub
sbb
ljmp
ds
cmpsb
popa
idivl
cmp
sbb
xor
jmp
push
mov
pusha
or
jae
shrl
sub
sbb
push
inc
pop
and
jne
dec
mov
pop
loope
or
test
sahf
push
ljmp
in
out
test
es
pop
mov
popa
int
mov
or
pop
mov
addr16
add
test
bound
mov
pop
sbb
aas
jne
push
push
filds
int3
jo
mov
ss
cmp
stos
pusha
cmp
mov
scas
jnp
shll
and
push
sbb
add
jmp
clc
gs
add
pop
xchg
push
add
pop
cmp
sbb
enter
jmp
cld
xor
sub
or
add
movsb
xchg
push
fucomip
mov
add
arpl
sbb
test
ret
jmp
inc
or
pusha
lea
loopne
mov
jbe
dec
jg
cwtl
pop
popf
push
sti
test
in
pop
xchg
cmpsb
adc
pop
scas
shr
add
sub
add
pop
fucomi
cmc
cmp
int
stc
in
inc
fucomip
std
leave
add
adc
push
push
push
daa
andb
out
add
mov
pop
jl
mov
xor
js
adc
cwtl
dec
test
loop
ss
xchg
and
movq
jns
mov
xchg
xor
push
aam
cmp
jecxz
repz
call
or
cmp
in
pushf
and
sarl
push
repz
jecxz
or
xlat
pushf
pusha
xorl
repz
pop
cltd
nop
mov
mov
jmp
sub
ja
or
xchg
cld
jb
adc
pusha
rolb
lds
outsl
movb
pop
jg
mov
ja
add
ja
xor
divl
push
das
inc
mov
add
or
sub
mov
movsl
leave
add
orb
inc
mov
pop
or
cmp
mov
inc
pop
stc
and
sbb
popf
int
rcrl
dec
call
aas
mov
push
push
sbb
popf
and
shlb
mov
cltd
xchg
sbb
jmp
pop
jae
outsl
dec
mov
pusha
fisttpll
and
mov
xor
add
lret
xor
hlt
ret
pop
fiadds
cmp
pop
enter
mov
lds
cmpsl
and
xchg
or
cmp
loopne
mov
mov
add
fisttps
dec
ficompl
adcb
pop
mov
jmp
sub
adc
adc
mov
push
je
mov
fidivl
push
adc
es
dec
fldenv
imul
pop
je
sbb
outsb
cmp
cmc
aas
mov
jnp
movsb
push
pop
push
sub
sub
movsl
aaa
aad
in
bswap
pop
int
jmp
xchg
out
cwtl
ret
pop
arpl
mov
iret
mov
data16
xor
frndint
lods
leave
push
push
mov
mov
hlt
pop
mov
mov
mov
adc
insl
shlb
cmp
hlt
int3
jnp
dec
add
sbb
popa
scas
in
mov
test
sbb
lret
mov
and
or
push
push
lahf
and
sbb
ja
fdivrs
js
leave
sahf
loopne
mov
pop
inc
mov
pop
push
xor
popf
cs
pop
rcl
movsl
lcall
sbb
lret
aas
and
repnz
jno
inc
ljmp
xchg
lcall
out
or
jae
mov
popl
out
xchg
or
subl
ss
add
xchg
mov
movsb
mov
inc
repz
dec
cmp
pop
testb
fdivr
into
jns
sub
xor
jl
or
and
hlt
lea
repnz
out
cltd
and
lret
test
mov
clc
test
out
lock
cmp
repz
jmp
jns
and
push
fidivl
xor
cmp
mov
adc
int
jae
xlat
call
mov
cmp
pop
jo
ss
jmp
cmp
aas
cwtl
outsl
cmpsl
and
cmp
cwtl
mov
fidivrs
mov
hlt
dec
pop
xchg
dec
sub
cmp
sbb
cmp
push
dec
loop
cld
mov
lahf
add
loop
test
int3
shl
cmp
rorb
push
or
sub
filds
int3
stc
testb
push
sbb
mov
shl
fucomi
inc
les
sub
xor
int
outsb
aad
pop
inc
divb
mov
mov
mov
and
push
inc
in
stos
daa
mov
cli
out
scas
shrb
out
shll
sbb
xchg
dec
dec
sbb
rcrl
jno
scas
push
mov
or
fildll
jmp
je
mov
push
fimuls
mov
cld
mov
mov
fstp
mov
sahf
insl
add
int3
dec
nop
cmp
test
test
iret
sub
test
mov
test
inc
mov
adc
push
mov
jne
inc
jmp
and
lock
mov
lods
mov
fwait
pop
repz
or
mov
pop
pop
jg
decl
lcall
pop
pop
repz
mov
pop
loopne
sub
push
cmc
les
pop
pop
ja
xor
jns
mov
xor
call
pop
dec
js
cmp
scas
arpl
cmp
divb
ljmp
pop
adc
movsb
or
int
mov
aad
test
test
mov
and
ret
std
jno
cmp
icebp
mov
psubusb
mov
mov
mov
andl
fisttpll
mov
or
push
sub
repnz
dec
test
add
dec
dec
repz
jno
push
popa
mov
icebp
dec
push
mov
cmp
aas
add
jle
adcl
fiaddl
jne
jge
or
sbb
out
dec
push
repz
fmul
idivb
fstps
pop
ja
aam
ds
roll
pop
push
cmpsb
rclb
scas
push
js
test
ret
sub
pop
push
sbb
mov
fwait
mov
stos
adc
call
lods
cmpsl
sarb
icebp
xchg
inc
inc
jae
push
out
lret
push
movsb
mov
std
mov
int
push
push
mov
in
dec
mov
adc
sub
sub
in
out
jge
outsl
jecxz
xchg
mov
mov
xor
mov
pop
xor
mov
dec
repz
fdivrp
mov
push
out
negb
xchg
and
loopne
fsub
std
test
cmpsl
adc
cs
movsl
jbe
jnp
xchg
cmp
mov
inc
xchg
pop
mov
mov
mov
mov
cs
mov
pop
ret
fdiv
clc
cmc
jle
popa
push
loop
sub
fcompl
pop
dec
xchg
das
clc
xchg
jne
mov
xchg
inc
ja
sbb
cmpsl
in
push
add
fs
pop
jno
mov
fidivl
scas
push
rcll
jns
mov
dec
enter
test
loop
repz
or
aad
sbb
jl
je
jno
jae
mov
out
test
sahf
mov
push
dec
fstps
jne
adcb
addr16
inc
addr16
jge
push
inc
in
sar
adc
cmp
adc
fldl
mov
xor
repnz
jne
xchg
mov
sbb
dec
jmp
lcall
pop
hlt
enter
mov
repz
hlt
add
fwait
cwtl
scas
sbb
and
mov
jnp
incl
icebp
dec
repz
add
jmp
out
bound
xor
jbe
or
out
sub
ljmp
cmp
lds
movsb
cmp
mov
jmp
lahf
test
mov
xchg
aas
add
dec
inc
and
lods
push
xchg
mov
or
dec
pushf
shll
mov
inc
das
adc
aam
rol
xchg
cmp
shrl
sbb
pop
and
pop
dec
mov
mov
sbb
nop
cli
xlat
movsl
loop
mov
adc
popa
repnz
jno
fmul
pusha
bound
rclb
in
mov
cmp
scas
push
mov
adc
jo
fnstenv
ss
imul
push
mov
fldcw
mov
cltd
push
xchg
imul
cmp
cmp
sub
out
push
lods
movsb
fnstsw
mov
cmpsb
ss
adc
sbb
das
daa
lods
push
jp
gs
push
mov
cmp
jp
es
repnz
lock
add
jns
out
rcrl
pop
pop
mov
dec
les
cmpsl
sbb
jns
insl
imul
and
cmpsb
fwait
add
sub
test
pop
cmp
ret
sub
inc
adc
popa
or
mov
mov
add
ss
cli
push
enter
jns
addr16
adc
out
mov
xor
cmp
cmc
lods
cmpsl
pop
fdiv
pusha
mov
les
in
xor
and
insl
cld
leave
cmp
lea
loopne
cmp
push
xchg
pop
rolb
rcrl
sub
jmp
and
mov
adc
or
popl
cltd
in
test
push
dec
mov
push
sbb
jg
jle
idivb
jo
xchg
jle
insl
jmp
pop
xchg
sbb
mov
and
pop
cmpsb
out
pop
xchg
lods
in
xchg
mov
ds
xchg
outsb
imul
adc
rcll
loopne
aas
push
fcoml
vunpcklpd
push
leave
mov
testl
and
lods
xchg
and
push
stc
sbb
iret
jg
cmp
int3
cltd
inc
sbb
cld
icebp
aam
xchg
fsubl
popf
movsl
mov
mov
into
sub
jae
lret
pop
rorl
sbb
in
test
decb
xlat
push
lahf
mov
out
mov
lea
out
pop
inc
sub
push
push
mov
gs
fwait
sbb
mov
adc
dec
lds
in
fsubl
mov
dec
adc
nop
rol
mov
xor
fstps
pop
inc
sub
dec
roll
aaa
cmp
xchg
jne
cmp
aam
test
lcall
push
and
dec
jnp
test
test
sub
js
pop
loop
sub
pop
pop
shll
mov
in
pop
cmp
sbb
int3
and
or
lcall
aam
aaa
aad
cmpsl
stos
daa
negl
jns
xchg
or
enter
mov
sti
rcl
outsb
dec
push
xor
dec
jp
jmp
jmp
icebp
xchg
jecxz
es
adc
cld
sub
mov
outsl
mov
int3
sub
ss
lds
lods
pop
rclb
xchg
jp
iret
gs
dec
or
imul
mov
lret
push
jg
and
enter
adc
test
push
cwtl
push
movl
and
sbb
mov
les
ds
jne
rolb
inc
movsl
cld
lcall
dec
adc
pop
out
sbbl
popa
aaa
jo
out
imul
or
and
lods
or
add
dec
cwtl
or
inc
sbbb
add
cwtl
inc
or
xchg
mov
jp
pop
jp
and
cmc
bound
dec
sbb
mov
stc
add
hlt
je
push
jnp
xchg
mov
inc
movsl
sarb
lret
pop
jo
add
mov
inc
add
sub
ror
outsl
push
aad
out
jbe
std
jp
es
xchg
scas
xchg
ret
add
scas
dec
mov
and
loop
jnp
imul
addl
mov
lods
out
mov
mov
jle
sbb
or
xchg
jl
sbb
jp
or
mov
mov
cwtl
out
jl
pop
lcall
dec
jecxz
jle
jb
in
roll
mov
je
in
cmp
mov
sahf
mov
lahf
xor
xor
sbb
pop
mov
push
jns
into
mov
fmull
and
sub
enter
jg
sub
bound
rcrb
xor
sbb
dec
sub
mov
andl
arpl
outsl
test
popf
inc
imul
xchg
loope
mov
movsl
add
mov
or
ljmp
fs
fists
inc
mov
inc
cmpsb
in
adc
adc
xor
lods
lods
cmp
add
shl
cld
xchg
movl
sti
cmp
mov
dec
sub
mov
mul
shrb
pop
imul
imull
xor
iret
ror
mov
in
and
adc
or
xor
fbstp
cmc
adc
and
sub
loope
movb
sub
repz
fildll
sub
fdivs
jbe
mov
adc
jl
sub
fidivl
stc
pop
sub
ret
gs
ret
mov
decl
fcomip
jmp
lret
mov
jmp
inc
int3
jno
jb
pop
adcb
mov
xchg
mov
imull
insb
or
dec
jae
adc
adc
sub
adc
mov
pop
mov
outsb
in
je
inc
out
enter
cmpsl
out
stc
les
in
aas
mov
test
add
mov
inc
stos
jmp
sbb
repnz
and
inc
and
pushf
cmp
dec
into
mov
int3
js
jge
imul
stc
pop
jns
pop
lret
or
xchg
fwait
or
sub
pop
mov
scas
movsl
enter
xchg
into
dec
xchg
mov
addl
stos
dec
aas
xor
scas
push
lret
mov
xchg
push
mov
xchg
jge
jg
lret
push
sub
dec
roll
loopne
mov
sbb
fcomps
outsb
nop
pop
lahf
add
cwtl
pusha
push
scas
into
fsubl
jp
ret
jbe
pop
mov
ljmp
int3
push
data16
ficompl
xchg
js
and
inc
ret
push
call
scas
fdivs
lret
div
les
popf
inc
add
mov
inc
jb
stos
or
out
jge
mov
gs
jmp
jno
dec
adc
mull
mov
popf
in
push
jnp
pop
xchg
push
stos
jb
into
out
xor
dec
jge
int
mov
cwtl
cmc
loope
add
out
iret
add
jle
in
mov
cmp
xor
dec
sbb
testl
or
movsl
stos
push
scas
mov
mov
mov
cmp
mov
cmp
cld
mov
cmp
mov
mov
jp
sub
fsubrl
hlt
jae
imull
add
push
lret
dec
popa
push
icebp
shl
dec
sub
adc
int
lea
mov
push
out
jp
adc
jo
sbb
xchg
imul
ficoml
js
cmp
aaa
and
adc
testl
popf
cmp
mov
outsb
sbb
jp
daa
lret
pop
faddl
cmc
push
adc
inc
lds
call
mov
pop
scas
sahf
mov
out
test
sub
push
sahf
lret
scas
jnp
xchg
adc
mov
inc
pop
cmp
lahf
mov
fidivrl
pop
iret
push
pop
add
xor
cmpsl
inc
sbb
add
int3
dec
fisttpll
xchg
inc
fcmovnu
cmc
cmpsl
sbb
addr16
add
fstl
or
sub
jnp
mov
das
icebp
push
pop
dec
mov
in
fbstp
es
sub
xchg
andl
arpl
daa
bound
insb
scas
jne
pop
fnstsw
xchg
cmpsl
lcall
int3
fldenv
xor
and
dec
sbb
bound
xchg
insl
jns
or
sbb
shll
repnz
inc
in
mov
push
je
loopne
aam
pop
cwtl
lcall
and
xchg
int
fs
inc
fcmovb
icebp
movsb
or
ss
add
mov
sbb
into
das
leave
cmp
cmpsl
adc
imul
imul
and
xchg
in
inc
or
std
cmp
adc
out
ss
sbb
mov
inc
xchg
leave
jnp
xchg
cld
cmp
arpl
iret
push
mov
aam
out
fndisi(8087
cmp
and
aaa
cli
imul
xchg
mov
lret
pop
scas
pushf
mov
mov
test
mov
xchg
and
and
lock
enter
ljmp
ret
in
fnstcw
pop
add
inc
pushf
dec
push
testb
je
sub
clc
ja
add
mov
mov
and
adc
jae
test
or
scas
inc
pop
jmp
sbbl
cld
mov
jp
sub
aaa
sbb
mov
xor
in
pop
and
loop
sbb
jno
mov
stc
int
push
xchg
ljmp
movb
push
jnp
jle
repz
les
out
xchg
outsb
in
mov
cmp
in
ja
fwait
out
sub
dec
test
test
xor
in
ficoms
out
les
cmp
add
mov
push
daa
fistps
in
ret
adc
fwait
cmp
mov
lods
leave
negl
pushf
imul
and
fwait
mov
stc
stos
lret
enter
repnz
insl
jecxz
xlat
sbb
mov
inc
push
inc
jp
dec
jp
fcoml
xor
sbb
icebp
aas
jns
movsb
mov
out
adc
lret
sbb
adc
jmp
insl
imul
xor
aas
mov
mov
cmc
sbb
sbb
roll
mov
in
mov
movsl
jp
rep
pop
mov
or
popa
adc
jno
and
jl
and
jg
mov
hlt
dec
test
or
mov
mov
mov
aam
leave
and
cli
or
sub
jne
rcrl
fmul
push
mov
adc
cwtl
pop
scas
pop
push
mov
mov
pop
push
jbe
lds
push
xor
cmp
mov
or
push
scas
sbb
cli
cmc
mov
mov
insb
test
in
rep
xchg
lea
adc
fisubrs
mov
cmpsl
push
mov
xor
std
fisubs
pop
and
dec
mov
lahf
ds
pop
push
lret
jno
push
js
sbb
fld
pop
es
pop
xchg
adc
scas
stos
or
adc
jae
out
or
aas
mov
out
xchg
inc
mov
aam
sub
mov
fnsave
xchg
sub
ficompl
sbb
mov
sahf
call
and
add
lcall
lahf
outsb
mov
shlb
xchg
jae
lods
lds
inc
fimull
lret
and
push
mov
mov
mov
jne
jne
push
mov
mov
mov
xchg
cltd
cmc
maxps
adc
lea
pop
mov
repz
test
stos
hlt
cmp
push
rorl
fsubl
pop
call
pop
popf
pop
test
lahf
aas
push
ret
fst
sbbb
testb
repnz
sub
lret
pop
test
inc
mov
mov
sub
in
xchg
xlat
jns
adc
es
lret
icebp
repz
cmc
cmp
sub
rorb
loop
icebp
pushf
add
push
mov
pop
sub
daa
ja
jnp
or
jae
and
aaa
pushf
dec
sbb
dec
jb
pusha
mov
enter
mov
pop
jmp
cmp
in
cmc
shl
stos
notl
sub
int
sbb
cmpsb
lods
pushf
pop
popa
ret
mov
std
daa
add
jg
cli
push
sbb
sub
cs
fnstcw
ja
jecxz
push
add
sbb
loope
or
push
ret
les
and
cmp
lcall
aaa
push
loop
in
cmc
fstpt
xor
and
add
shrl
or
incb
es
in
cli
ja
cmc
dec
add
fwait
hlt
scas
add
mov
jmp
dec
push
sahf
enter
je
mov
cmp
lret
int
jl
movsb
cmpsl
sbb
ret
nop
mov
mov
push
imul
cmp
fiaddl
cmp
jb
mov
fistpll
inc
or
jl
and
in
push
push
sbb
cmp
sub
fsubrs
fnstcw
insl
cmp
fstps
sahf
into
inc
jo
xchg
jl
inc
jnp
clc
sbb
xor
ret
test
mov
push
or
std
xor
ljmp
lods
imul
cmove
xor
jnp
sbb
iret
fbld
pop
aaa
shl
sbb
xchg
push
or
cmp
scas
lock
movsl
data16
cmc
add
das
mov
shl
shl
iret
jl
ds
push
push
mov
sub
lods
push
pop
push
jle
inc
int
push
aas
cmpsl
fimull
roll
test
pop
out
mov
add
mov
cmpsl
int
mov
fwait
xor
xor
jne
mov
inc
in
out
inc
fwait
xchg
sbb
cmpsb
testb
sbb
aaa
xchg
loop
sbb
test
sbb
nop
jl
lret
divb
ret
das
rorb
cmp
lods
adc
sbb
nop
cmp
les
lea
nop
pop
mov
xor
lret
lahf
rorl
les
cmp
cmp
cmp
stos
push
cmp
test
lds
mov
fisubs
inc
mov
xchg
jnp
neg
ljmp
jnp
idiv
ja
mov
and
fs
orl
mov
test
int
push
popf
addl
out
push
cmp
sti
enter
mov
pop
push
inc
pop
mov
mov
adc
lcall
sub
fimull
mov
fidivl
ljmp
dec
adc
xchg
sbb
xchg
inc
adc
cwtl
lods
fndisi(8087
aaa
in
and
decl
xor
xor
jg
insl
xor
push
stos
call
aas
pop
out
shrb
adc
and
push
adc
mov
jae
es
xchg
push
out
imul
cmp
sub
aaa
imulb
lcall
dec
sub
imul
scas
jmp
and
fistpl
pop
jecxz
mov
es
loopne
mov
in
sbbl
aad
or
movsb
xor
or
or
inc
add
repnz
mov
lcall
mov
js
subb
arpl
sub
test
test
inc
mov
jo
std
xchg
mov
pop
sub
sbb
ds
jecxz
sbb
lret
cmpsb
cmp
add
jns
aas
push
das
cmp
xor
test
fisubl
fldcw
mov
test
and
mov
scas
stos
repnz
sub
mov
mov
push
mov
xlat
jne
xor
push
jmp
pop
pop
push
fdivs
jbe
add
test
mov
leave
mov
jns
dec
cltd
es
fimuls
push
xchg
jg
shlb
mov
push
dec
push
jl
call
sub
mov
mov
mov
imul
jae
imul
xchg
out
push
xlat
aad
push
call
repnz
mov
mov
enter
pop
pop
xchg
sub
test
jbe
and
xchg
fisubs
dec
mov
cmp
cmp
or
popf
stc
mov
pop
movsb
xchg
xlat
push
pop
and
mov
mov
jecxz
outsl
sub
je
shlb
push
pop
bnd
leave
and
mov
adc
js
lock
cwtl
mov
data16
imul
stos
sub
dec
add
mov
pop
out
jl
or
out
adc
mov
mov
jl
pop
sbb
push
push
push
adc
and
cwtl
push
jns
in
loop
repz
ret
mov
roll
push
sub
pushl
inc
or
or
dec
inc
mov
pop
mov
ljmp
fwait
push
adcb
ret
or
sub
xchg
js
pop
or
pop
std
mov
xchg
rorl
mov
jecxz
clc
scas
sbb
mov
fistpll
shrl
rcl
cmp
js
mov
inc
jg
movsl
sbb
jae
cmp
add
cmp
lret
and
push
cmc
add
scas
ja
cmc
movsb
daa
hlt
push
aam
sbb
pop
lahf
mov
jmp
inc
adc
adc
add
jae
iret
cli
push
sub
ja
out
test
sbb
mov
ljmp
jns
xchg
daa
test
adc
pop
mov
sub
fstp
fldt
jae
mov
sub
pop
outsl
dec
dec
jae
in
inc
lahf
jecxz
mov
or
jb
fnsave
das
insb
sbb
sbb
adc
ljmp
mov
dec
inc
jecxz
pop
jp
jb
imull
dec
out
fwait
cld
adc
push
imul
daa
xor
mov
sbb
into
xchg
ficompl
sbbl
push
out
out
xchg
aad
adc
inc
xchg
repnz
sub
sbb
pushf
fcompl
dec
cmp
xor
add
add
xchg
enter
pusha
mov
push
push
sbb
adc
ljmp
lds
push
scas
cmp
adc
mov
inc
aad
sbb
cli
add
idivb
faddp
cmpsl
cmp
xor
movntq
out
mov
inc
jge
jae
mov
cmp
shrb
jge
pushf
push
outsb
into
mov
pusha
sub
jo
mov
rcrb
xor
loop
repz
bound
fidivs
imul
dec
pop
in
inc
push
fdivrl
mov
faddp
lock
rclb
jns
lock
sbb
xchg
lahf
ljmp
dec
inc
add
test
mov
and
ret
mov
mov
and
test
adc
cwtl
dec
xchg
mov
mov
daa
movsl
push
push
xor
in
daa
cwtl
fisubrl
fwait
mov
scas
pushl
fsts
jmp
sti
cld
pop
out
or
leave
decl
mov
loop
sub
adc
sti
pop
clc
fidivl
sub
pop
insl
push
pop
xchg
loope
cmp
je
jo
inc
cmp
dec
xchg
push
add
ret
mov
out
xchg
pop
rcl
inc
dec
jnp
xchg
mov
outsl
adc
movsl
std
add
fisubs
cli
push
sbb
test
stos
cmp
mov
adc
ljmp
into
sbb
and
pop
outsb
mov
pop
cs
adc
adc
mov
dec
sahf
inc
xor
ret
gs
or
jl
inc
mov
stos
pop
mov
scas
add
into
cmp
mov
or
insl
sub
sti
mov
flds
aaa
in
test
stos
mov
push
push
xor
push
push
lock
shr
scas
mov
call
mov
xor
push
jg
mov
jmp
mov
jnp
adc
popa
daa
and
mov
int
sub
xor
cmp
call
xor
inc
and
pop
xchg
push
aas
mov
mov
xorb
dec
add
dec
pop
movsb
cld
inc
xchg
inc
jg
jg
mov
loopne
mov
in
mov
or
rolb
push
mov
xchg
sbb
xchg
add
pop
sahf
mov
sbb
and
jb
mov
bound
imul
hlt
mov
sub
pop
sub
sub
mov
sub
inc
adc
mov
daa
jne
ds
cmp
loop
mov
jge
inc
sub
out
ret
xor
adc
out
cwtl
jg
pop
pop
or
shr
xor
es
mov
bnd
jp
mov
pop
stos
arpl
ss
xor
ret
mov
add
nop
imul
ret
sbb
sahf
cmc
ljmp
or
push
bound
cmp
or
repnz
dec
dec
div
jmp
rolb
adc
push
fcoms
gs
lds
pop
jle
cmp
push
iret
cwtl
movsb
sub
add
das
mov
gs
fildl
jl
js
incb
jb
pop
aam
pop
xchg
push
dec
cmp
or
pop
adc
jo
lcall
aaa
lods
pop
inc
daa
negb
call
fstpt
imul
mov
stos
cld
cmp
inc
orl
fdivr
add
pop
testb
js
add
outsl
je
test
mov
push
pop
sub
fmull
sbb
fs
mov
sbb
repz
jb
or
cltd
enter
out
xchg
add
out
in
cld
mov
push
and
aas
xor
out
js
je
fucomp
pushf
je
das
loope
push
ds
push
jnp
inc
mov
jbe
call
loopew
in
mov
xchg
cmp
jne
subl
cli
mov
inc
sar
and
xor
inc
iret
push
jmp
cs
mov
gs
pop
daa
fnstenv
out
push
xlat
mov
add
push
adc
ss
adc
out
in
mov
inc
in
pop
dec
cli
and
mov
stc
inc
sbb
fstl
and
adc
jb
fsub
ja
adc
push
js
dec
mov
xor
inc
fbstp
les
add
mov
addl
lea
pop
fcmovu
in
adc
pop
mov
jae
xchg
ja
or
fimull
pushf
imul
shrb
sub
popa
cmpsl
sbb
push
repz
add
mov
sub
mov
add
repz
xor
fistpll
push
jno
test
popa
icebp
aad
xchg
stos
xor
in
jne
aas
inc
test
fldt
jne
jno
leave
fs
pusha
int3
sbbl
jbe
jne
and
jne
sbb
sbb
adc
adc
xor
sbb
sub
mov
out
testb
jae
mov
sbb
out
fnstcw
daa
mov
push
aam
int
loop
sbb
xchg
fnstenv
scas
ds
push
dec
mov
cmpsl
loope
lods
icebp
sti
jne
sub
dec
adc
add
xchg
mov
pop
iret
int
lds
out
jno
daa
sbb
imul
jp
clc
mov
jo
mov
push
mov
xchg
jge
mov
popa
xlat
inc
je
xchg
add
popa
loope
pop
stos
mov
sub
movsb
std
mov
push
mov
sub
xchg
push
fs
loopne
ret
call
in
mov
loopne
aaa
test
stos
xor
jb
aas
in
pop
fisubrl
ljmp
icebp
pop
cmpsb
int3
sti
sub
add
test
mov
subb
imul
loope
lds
aam
push
div
rcl
cmp
fucomi
ftst
nop
je
test
cmc
inc
rcrl
jae
fdivrl
xor
mov
pop
inc
xchg
jg
outsb
out
adc
inc
or
lds
mov
fisubl
rorl
imul
rol
mov
ror
push
mov
lea
scas
push
mov
and
lcall
cmc
jne
mov
or
mov
insl
popa
out
jno
dec
lock
sbb
and
out
test
rcrb
sti
inc
jae
cli
push
push
xchg
addl
fwait
pop
sbb
cli
dec
ja
push
jmp
jl
loopne
jg
es
mov
iret
mov
int
flds
int3
adc
insl
cmp
in
mov
pop
test
lahf
aaa
rol
mov
or
ljmp
aam
jns
mov
mov
aaa
in
pop
lret
mov
lret
imul
repnz
aaa
mov
fistpll
and
pop
addr16
scas
dec
leave
mov
push
sub
sbb
aas
repz
pop
mov
imul
adc
js
in
adcl
and
push
loope
ret
cmp
mov
adc
pop
mov
pop
add
adc
je
cwtl
xlat
icebp
jmp
out
mov
mov
mov
add
es
xlat
fstps
jle
nop
fsubs
xor
jmp
lret
sub
addl
pusha
dec
rorb
imull
mov
clc
inc
sbb
mov
dec
sub
call
push
xchg
mov
loop
sbb
jb
outsl
int
lods
lods
mov
into
pop
lock
loope
xchg
pushf
or
cmp
dec
lock
gs
add
dec
xorl
idivb
cld
dec
in
test
leave
adc
jns
xchg
mov
icebp
sub
out
lret
cmp
lods
add
cmp
or
out
pop
stos
mov
int3
sbb
dec
stc
mul
inc
push
int
push
xchg
ljmp
jg
mov
mov
pushl
popa
lahf
movsl
mov
mov
lret
xor
push
jo
je
mov
and
jecxz
sub
cmp
lock
ret
fs
call
test
jae
shl
loop
fidivrs
not
repz
bound
push
ja
add
push
imul
adc
cmpsl
pop
pop
popa
mov
clc
fwait
inc
jns
xor
dec
js
sbbb
in
add
aam
dec
mov
rcrb
jno
inc
sahf
push
icebp
not
cltd
push
xlat
add
out
sbb
xor
outsl
inc
mov
imul
int
sbbb
xlat
cltd
ffree
mov
inc
ss
add
mov
mov
sbb
out
enter
inc
jle
xchg
xlat
adc
xlat
and
mov
pop
leave
imul
add
push
jb
xchg
fdiv
popf
push
xchg
jns
int
mov
mov
cmp
aaa
mov
fwait
insb
imul
cmp
lcall
mov
in
pop
push
dec
pop
cmpsb
inc
mov
xchg
loop
jne
in
cmpl
jns
pusha
inc
push
out
dec
jmp
mov
xchg
jl
shll
sbb
and
sbb
sbb
in
std
sub
sbb
test
cs
jge
idivl
and
xor
mov
jb
push
xor
and
inc
dec
sub
adc
fwait
out
add
push
push
dec
test
lcall
addr16
sbb
mov
mov
aas
jmp
fcmovnb
jo
mov
xchg
es
cld
xchg
xchg
pop
fisubs
test
je
pop
hlt
cmpsb
push
inc
cmp
loop
dec
push
xchg
lahf
int3
cmp
out
push
std
into
inc
inc
inc
mov
mov
in
jmp
aam
pop
les
push
mov
xchg
test
jne
jp
mov
mov
pusha
or
xor
bt
push
or
push
xor
les
mov
add
adc
stos
out
out
mov
shll
xchg
aaa
daa
mov
inc
xchg
mov
outsb
std
rcl
inc
inc
push
sbb
out
ljmp
hlt
out
adc
xorb
inc
jecxz
mov
sti
sbb
testb
adc
lods
out
mov
push
and
pop
mov
fildl
pushf
xor
leave
in
int
inc
pop
jl
add
test
lahf
lea
psubq
xor
ret
shl
sub
test
repnz
cwtl
inc
adc
stc
cmp
mov
rol
mov
dec
hlt
lock
add
lret
aas
outsb
xchg
pusha
nop
stos
idivb
ljmp
jno
xor
xor
outsb
cmp
in
pop
sarl
rcrl
in
cmpl
jecxz
outsl
leave
mov
push
push
pop
dec
or
and
or
cmp
push
ficoms
jl
add
jno
nop
in
push
inc
cmp
and
fnstenv
push
mov
push
ja
jmp
xor
pop
xchg
roll
xchg
out
ror
cmp
sbb
stos
mov
es
call
mov
fucomip
int3
lret
mov
lds
inc
sbb
mov
cmc
sti
xchg
fstl
pushf
fildl
movsl
fstl
adc
inc
inc
test
push
mov
call
imul
imull
sub
ficoms
and
pop
ror
insb
ss
or
lret
cmp
pushf
cmp
cmp
sbb
mov
stc
mov
push
dec
idivl
cmpsl
xor
filds
inc
mov
loopne
sbb
sbb
push
jae
mov
mov
insl
rolb
loope
jno
lock
jb
dec
mov
popf
ja
jecxz
scas
ret
inc
and
addl
dec
inc
push
mov
sub
dec
push
scas
aam
repz
sbb
popa
testb
loopne
mov
test
dec
cmp
sbb
pop
int
ret
push
rcll
js
jne
mov
leave
stos
adc
dec
imul
adc
sbb
bound
mov
stos
cmpsl
mov
out
aaa
pop
xchg
sbb
arpl
into
cli
js
jmp
loope
xor
cld
addl
in
xchg
test
dec
pop
jno
xlat
push
jnp
mov
ds
in
and
inc
cmp
hlt
ja
mov
sbb
jno
aas
cwtl
pop
push
push
fidivrs
ja
loope
cmpsb
inc
and
clc
arpl
scas
jmp
sbb
setno
mov
shl
xchg
and
addr16
data16
dec
jo
inc
mov
andb
sbb
stos
das
mov
fdivs
mov
jp
and
xor
sahf
jge
add
dec
pop
in
xchg
loope
loopne
aaa
mov
mov
xor
shll
insb
test
cmp
data16
enter
jae
loope
xchg
dec
fs
lds
faddl
sbb
std
scas
push
adc
sub
lock
js
imul
mov
jmp
lea
cltd
jbe
xchg
loop
aaa
shll
stos
mov
aaa
pop
arpl
jae
out
or
cmp
ret
inc
mov
xor
lods
sub
mov
push
and
aaa
xor
mov
jns
popa
lock
mov
fwait
mov
cmp
leave
adc
in
stos
xchg
push
pop
ljmp
lods
aas
pop
jnp
pop
loope
mov
les
lcall
sbb
gs
jl
aaa
flds
insb
sti
stos
mov
in
add
cs
loope
test
setnp
cmc
aad
test
cmp
enter
jne
loopne
out
inc
mov
xchg
mov
add
movsb
sbb
movsl
mov
cmc
out
pop
idiv
out
dec
add
cs
div
insl
jo
mov
mov
xor
pop
dec
inc
lret
test
pushf
xor
adc
sahf
mov
xor
jg
in
push
inc
adc
xchg
inc
jnp
mov
pushf
adc
adc
out
scas
and
into
test
add
jle
push
inc
mov
aaa
and
and
ja
dec
insb
or
testb
and
stc
bound
cli
std
push
les
lock
jp
mov
hlt
sbb
mov
addb
add
cs
ret
out
push
lahf
dec
inc
iret
mov
out
and
xor
mov
cld
addb
mov
out
xchg
scas
dec
lahf
lahf
sbb
cld
les
and
pop
or
jge
jle
dec
fmull
and
jnp
mov
mov
push
js
pop
xor
ss
jbe
sbb
and
or
sbb
and
mov
repz
inc
mov
pushf
cwtl
push
scas
dec
mov
ds
iret
ret
lods
pop
lock
fldenv
and
and
jb
ffree
mov
xor
repnz
mov
mov
xor
dec
cmp
push
push
pop
jno
xchg
mov
jl
xchg
xor
outsl
and
enter
cs
cwtl
ficoml
pop
in
clc
pop
fistl
lret
repnz
movnti
xor
push
jno
and
sbb
int3
dec
fucomip
mov
or
cmpsb
mov
cmpsl
les
xchg
xor
xor
shr
das
xchg
mov
scas
add
gs
iret
mov
in
out
out
fwait
subb
pushf
test
push
xor
adc
pop
les
stc
fidivrl
scas
xchg
clc
test
inc
mov
and
dec
les
pop
enter
out
push
jmp
add
xchg
aaa
xor
loope
enter
push
sub
jns
push
mov
fstl
lock
fsubr
cld
ljmpw
sbb
cmpsb
inc
cld
xor
cmp
mov
outsl
inc
pop
sbb
pop
and
or
cs
mov
pop
cmp
push
repnz
push
jmp
xor
aad
cmp
sbb
cwtl
cmc
fisubrs
xchg
hlt
loopne
add
fisttpll
sar
cmp
pop
lret
dec
icebp
mov
sar
adc
mov
leave
pop
dec
int3
xor
jne
lret
sub
push
in
push
adc
jo
jbe
ds
dec
inc
dec
int
push
fsub
xchg
and
shrb
inc
das
aad
sar
dec
gs
push
xor
cli
faddl
mov
repz
cmp
lock
push
xor
and
xor
and
dec
movsl
adc
imul
and
add
or
xchg
pop
stos
pop
dec
loopne
data16
push
push
fcos
sbb
bound
psrlw
adcl
pusha
jne
push
test
ret
hlt
shll
aam
mov
and
jae
or
jge
popf
jp
sti
roll
dec
mov
js
jns
std
fucomp
negl
add
mov
mov
rcrb
sbbb
push
dec
jle
sbb
sar
aas
call
loope
or
dec
mov
outsb
mov
mov
daa
stos
sbb
push
mov
add
push
lock
in
popf
sub
xlat
xchg
sahf
inc
xchg
jo
jge
mov
pop
jg
mov
gs
mov
inc
adc
stc
imull
insb
sbb
into
repz
stc
xor
rorl
repz
les
daa
push
cmp
cmp
xchg
add
jmp
mov
push
popf
ret
mov
fisttpl
out
popa
mov
jnp
inc
orb
test
xor
pop
lods
inc
stos
pop
dec
push
insb
divb
push
xchg
pop
jmp
mov
rorl
mov
pop
xchg
mov
aas
leave
mov
mov
insl
into
test
push
push
arpl
insb
jg
and
jne
shll
in
jb
lods
xchg
test
and
inc
push
data16
xchg
loopne
mov
out
jmp
inc
xor
es
bound
xor
xchg
xchg
and
stc
mov
lcall
cwtl
std
push
out
sbb
imul
xor
rolb
inc
les
cltd
mov
cwtl
fisubs
addb
add
xor
inc
mov
mov
int3
inc
inc
push
sbb
fsubrl
push
js
shl
mov
mov
out
dec
shl
pushf
jmp
mov
cmp
jp
cmc
mov
movq
int3
in
std
adcl
pop
in
cmpsb
pop
cli
add
test
add
fidivs
jne
into
imul
mov
xchg
jb
outsb
loop
and
cmpsl
in
and
neg
pusha
iret
lds
xchg
cltd
sub
out
xchg
pop
data16
dec
mov
adc
mull
outsl
aas
loopne
adc
mov
pop
cld
xchg
mov
or
aas
pop
ja
sbb
les
adc
adc
pop
les
xlat
cmp
jnp
or
jmp
bnd
inc
lret
xchg
sub
aam
daa
mov
jo
bound
sub
scas
or
leave
outsl
dec
cwtl
repz
push
es
enter
mov
test
mov
push
mov
andb
jmp
push
bound
out
mov
lret
loopne
xlat
cltd
cltd
jp
rcr
dec
pushf
pop
or
imull
or
mov
shr
stc
addr16
mov
add
icebp
out
inc
aad
add
scas
xchg
int
call
in
popf
push
aam
lock
ret
mov
ljmp
jl
scas
repnz
shlb
cmc
mov
shrb
adc
lahf
jns
in
jo
loopne
nop
mov
inc
push
jp
lcall
push
scas
in
add
mov
jb
jae
ds
cli
jl
loopne
push
fs
mov
push
jecxz
repz
mov
scas
add
and
or
dec
scas
and
xor
push
fimuls
mov
int
or
iret
jmp
push
lcall
js
lret
mov
rorb
or
cld
pop
and
hlt
shl
sub
ds
sub
inc
fsts
inc
fldt
mov
xor
mov
dec
sbb
dec
ljmp
sbb
enterw
inc
outsl
and
pop
xor
sahf
test
mov
mov
and
fs
mov
addr16
xlat
cmpsb
cmp
cltd
inc
sub
outsb
pop
fnstsw
xchg
gs
adc
cs
imul
adc
mov
push
xor
loope
push
lods
push
xor
push
xor
jge
jb
test
ds
imul
cltd
insl
sbb
ja
pop
hlt
jbe
stc
mov
je
sbb
xor
out
jnp
scas
lock
pop
js
push
gs
push
aas
pushf
mov
jns
mov
add
cld
sub
cmp
mov
loope
adc
add
jl
repz
sub
sarb
pop
es
jbe
test
xor
in
outsl
push
icebp
std
shr
mov
roll
adc
enter
std
call
andl
jo
fsubrs
sbb
ds
push
push
aad
js
or
sbb
es
in
dec
push
mov
mov
mov
or
pop
adc
jp
daa
sbb
cwtl
mov
adc
pop
add
xchg
dec
sbb
jne
push
lcall
adc
lds
insb
pop
hlt
or
leave
sbb
push
iret
jge
fistl
rolb
pop
lods
loop
stos
sbb
notb
loopne
xchg
mov
loopne
ljmp
mov
push
mov
faddl
cld
mov
aam
adc
pop
bound
xchg
add
and
xchg
mov
xorl
mov
push
mov
adc
outsb
jle
fs
adc
fidivs
cmp
inc
in
imul
add
rolb
inc
push
xor
and
js
repz
dec
and
sub
push
in
jno
mov
call
ror
idivb
adc
sbb
adc
cmpsl
shrb
xchg
and
sbb
mov
xchg
pop
mov
insb
or
rcrb
orb
dec
fistps
xchg
mov
mov
push
jl
sub
sub
pop
sarl
rcl
hlt
out
imul
popf
push
gs
mov
shlb
pop
push
and
iret
cmp
jecxz
or
cmp
inc
out
repz
arpl
add
leave
test
push
std
cld
movsl
insb
xor
push
outsl
cs
adc
dec
mov
jecxz
pop
xchg
cmpsl
subl
xor
jne
out
lods
imul
xor
repnz
insl
mov
outsl
nop
cli
sbb
mov
scas
and
neg
jno
pop
fwait
cs
sarl
mov
mov
in
pop
xchg
xchg
and
es
inc
cld
adcb
les
inc
notb
lahf
inc
mov
jnp
add
shrb
sti
pusha
jo
fldln2
les
stos
add
bound
scas
mov
lret
ljmp
ljmp
sbb
jae
push
rcrl
ficoms
mov
es
push
ja
scas
or
sbb
aas
je
pop
pop
outsl
lds
movsb
int3
test
out
inc
movsl
aas
mov
or
sub
dec
cmpsb
and
bnd
and
test
fimull
mov
push
mov
sub
sbbl
dec
imul
outsb
jo
sbb
stc
mov
jno
ret
in
bound
sub
dec
stos
aad
ds
or
push
or
mov
jmp
iret
mov
les
mov
lea
push
test
fld
cmp
dec
jno
imul
fnstcw
ljmp
rcrl
dec
test
movsb
sub
sbb
shll
inc
sbb
inc
and
test
sbbb
push
lods
imul
stc
loopne
jb
popa
add
fistpl
pop
xor
fiaddl
jbe
push
outsb
mov
fsub
cli
or
add
popf
inc
pusha
shrl
hlt
push
cmp
or
or
inc
ljmp
inc
inc
mov
test
fsubr
jl
out
and
test
xor
rolb
leave
adc
xor
add
fs
cwtl
xchg
aad
or
mov
outsl
ja
xchg
bound
pop
enter
std
push
and
jns
sbb
ficoms
jmp
mov
cli
pop
sti
pop
or
push
or
stc
xchg
scas
leave
imul
mov
or
fdiv
pushl
sub
jmp
rcr
sub
ror
pushf
mov
xor
xchg
cmp
xchg
mov
xchg
mov
sub
jp
sub
ljmp
int3
xor
mov
mov
pop
rcr
insb
imul
aad
addr16
out
xchg
or
inc
std
cmpsb
jns
xor
repz
jmp
sub
lret
fnstenv
add
imul
mov
loope
mov
cs
push
loop
in
icebp
scas
mov
dec
push
ffreep
fcomip
sbb
pop
mov
dec
pop
lds
push
mov
iret
cli
movsl
mov
dec
aad
pop
shrb
cmp
test
push
or
pop
push
lret
ljmp
add
ret
ds
and
sbb
sub
aad
fiaddl
push
outsl
fldenv
cmp
nop
cmc
in
jbe
and
push
pop
je
dec
mov
pushw
clc
and
das
mov
cmpsl
adc
js
clc
adc
jmp
mov
in
js
ror
push
fidivrl
pop
cmpsl
neg
xchg
test
add
ss
jg
aam
int3
imul
mov
outsl
pusha
repnz
xchg
and
sbb
aad
mov
mov
insl
adc
lds
push
push
out
adc
inc
enter
mov
imul
lds
xor
pop
insb
add
dec
jmp
sub
out
cwtl
xchg
outsb
testl
lcall
loope
rolb
adc
mov
iret
sbb
push
andb
inc
aas
stc
xor
fwait
jp
jo
sub
lods
lret
movsl
ds
je
stc
cmp
out
shll
mov
push
jbe
jmp
test
cli
movsb
pop
add
pusha
sbb
and
fcomi
cli
push
and
ljmp
xchg
outsb
nop
ret
cmp
mov
push
test
ret
fs
push
xlat
push
les
hlt
mov
cmp
xchg
lock
cmp
in
jle
and
mull
mov
push
push
sub
pop
pop
orl
loopne
test
pop
ds
sarl
arpl
add
and
pop
inc
jecxz
out
pop
test
iret
dec
push
add
and
mov
fwait
ror
outsb
movsb
lret
mov
lret
inc
stos
test
out
hlt
out
lret
sub
push
or
sub
xchg
adc
cltd
shrl
aaa
out
pop
ret
subl
pop
popf
je
mov
loope
xor
mov
aas
pop
es
jnp
fadd
pop
pop
rcl
inc
scas
xor
movb
inc
add
mov
cli
xor
xchg
add
push
jecxz
jae
sub
shll
fwait
sbb
sti
xchg
cmc
dec
out
adc
sti
cwtl
daa
or
fistpl
adc
push
mov
aad
push
add
sarb
movsl
and
lcall
daa
fcomps
mov
mov
andb
xchg
xchg
xor
les
dec
aaa
jno
pop
ss
mov
addl
sahf
in
add
repnz
cmp
push
aaa
pop
repz
icebp
sti
or
adcl
mov
dec
lret
sti
jle
adc
xchg
dec
loop
inc
and
cld
jne
popf
jno
in
fsubrl
je
pop
xor
mov
jle
pop
out
movsl
dec
fnstenv
dec
add
mov
pop
repnz
fdivrp
push
mov
dec
test
lock
mov
cmp
lods
je,pn
cld
mov
adc
fildl
xchg
and
movsl
subl
sarb
xor
cli
flds
or
dec
lock
push
mov
and
popa
mov
lock
pop
pusha
fstp
jle
jns
sarb
pop
cmp
test
test
lahf
out
fwait
inc
sub
clc
mov
mov
rclb
sub
or
ficompl
in
or
fsts
or
sbb
cs
xchg
lds
lret
mov
dec
pop
ljmp
call
lods
test
iret
jno
push
ss
mov
sub
pop
out
adc
adc
stos
push
sub
leave
dec
gs
pop
iret
mov
fsubr
dec
pop
jl
loope
imul
dec
push
pop
gs
iret
mov
jge
stos
les
fstpl
aad
pop
rolb
out
addr16
mov
mov
sahf
cmp
mov
test
lret
jne
mov
xor
lods
cmp
xor
adc
int
add
mov
lods
xchg
lea
sub
fdivrl
dec
cld
mov
shlb
adc
sbb
xor
pop
inc
sbb
jmp
cmp
dec
lea
testl
arpl
jnp
cwtl
movsl
adc
imul
fstpt
sub
jg
shll
and
cmp
mov
and
dec
cmp
push
sbb
lods
frstor
add
lock
pushl
pop
shll
fcoms
sbb
or
jg
mov
int3
lret
popw
sbb
jmp
nop
xor
cmp
sub
cmp
push
sub
add
xor
push
add
fwait
lods
xor
stos
rcl
imull
mov
push
sbb
ret
mov
xor
xchg
jno
fs
sbb
or
dec
aas
cmp
div
sub
ret
jmp
movsl
loop
test
repnz
mov
xor
sti
mov
sbb
sti
pop
pop
es
repnz
lret
push
sbb
mov
sub
data16
clc
pop
push
mov
adc
rcrl
js
mov
in
or
int
push
or
push
xorl
jmp
js
aam
mov
inc
cmc
pop
sarb
or
repnz
popa
pop
jae
sub
jecxz
sub
mov
dec
and
mov
les
fidivl
outsl
in
scas
clc
jbe
inc
mov
iret
pop
xchg
out
jns
jmp
faddl
iret
rcll
enter
dec
adc
inc
cmp
xlat
add
xchg
push
stos
mov
pop
mov
jno
jge
mov
cmp
lea
add
cmp
push
aam
cmp
adc
ss
push
enter
dec
cmp
test
stos
mov
scas
pop
fmuls
sbb
test
xchg
pusha
mov
mov
dec
add
jle
adc
cmp
test
idiv
repz
push
push
push
rcrb
movsl
adc
adc
mov
in
loop
mov
imul
and
out
adc
shr
mov
and
outsl
cmp
lret
fs
cmp
cmc
test
mov
hlt
dec
push
xor
mov
fdivs
dec
leave
or
aam
jns
shr
cli
lods
popf
cmpsl
push
sbb
inc
add
cmp
stos
inc
push
push
rcrl
orl
pop
std
mov
push
fwait
je
imul
cmp
clc
fcmovne
adcl
push
fdivl
push
and
mov
xchg
fisttps
pop
sbb
sbb
iret
lds
sub
leave
pop
and
mov
and
fstpt
and
sub
and
xchg
dec
mul
ror
push
sub
test
loopne
cmp
fsubrl
testl
adc
repnz
cmp
rcr
negl
ret
and
jp
pop
aas
mov
in
imul
cmp
and
jl
mov
call
inc
leave
push
out
and
das
dec
cmp
sti
add
jmp
cltd
xchg
sti
popf
fwait
out
mov
test
sub
adc
pop
das
push
scas
mov
cli
sub
enter
dec
push
inc
stc
dec
ret
dec
ffree
ret
subl
mov
jp
xchg
lds
shll
cmp
ret
mov
imul
push
pusha
xlat
lcall
adc
push
in
rcll
inc
aas
inc
pop
test
shll
jns
push
adc
outsb
mov
push
add
jle
ret
pop
sbb
out
add
xchg
scas
aas
cs
rcll
lock
cmpsl
into
imul
sbb
dec
jmp
stc
pop
adc
pop
insl
loop
stos
gs
les
mov
lea
inc
cs
lock
out
mov
shrb
addr16
cmp
insl
pushf
sub
int
sub
cmp
inc
mov
ror
xchg
mov
ljmp
das
and
xchg
mov
dec
ds
das
cwtl
jl
pop
out
inc
pop
loope
jnp
popf
xchg
cmc
xor
mov
jg
stos
aaa
rolb
mov
fildll
movsl
or
js
sub
add
and
fwait
dec
insb
cld
insl
push
cmp
ret
lret
in
outsl
lds
notb
mov
sub
jmp
rcl
lret
xor
mov
and
mov
push
sahf
fimull
dec
or
fmul
ljmp
jp
pop
push
cld
fcoml
mov
adc
popf
push
pop
lahf
fs
jp
test
fs
pop
decl
test
dec
dec
jns
lret
xor
mov
in
dec
dec
xchg
inc
in
call
cmc
mov
pop
adc
jle
scas
jno
out
pop
fdivl
jns
sahf
jle
or
les
fistl
jmp
jl
outsl
adc
rcrl
sub
push
lret
cli
in
into
mov
daa
xor
pop
xor
divl
and
push
shll
fnstenv
jns
pop
mov
popl
mov
jnp
push
iret
dec
push
pop
xor
adc
in
in
and
mov
outsl
stos
cmp
outsb
and
call
scas
ret
push
shr
adcb
pop
xor
outsl
lods
xor
sub
leave
loopne
push
mov
jb
add
addr16
cld
test
outsb
push
push
mov
and
cmpsl
sbb
and
mov
ja
mov
stc
pop
inc
sub
inc
inc
js
mov
cli
push
adc
stos
sub
xor
das
inc
gs
popf
jne
push
aas
inc
out
fdivs
movsl
lret
cmp
cmpsb
stos
rcrb
xchg
dec
jns
addr16
sbb
push
daa
add
shlb
push
fsubrs
fstpl
pop
repz
push
cmp
mov
add
pop
gs
decb
jg
pop
push
into
dec
inc
imul
scas
add
mov
inc
ret
add
test
cmp
int
mov
xchg
movsb
mov
aad
sbb
xchg
adcl
int3
lcall
push
pop
out
inc
mov
xchg
mov
xor
movsb
mov
push
imul
mov
imul
xchg
pop
mov
jle
into
add
adc
fstpl
in
pushl
leave
in
fadd
mov
add
xor
cmpsl
sbb
push
nop
das
ret
movntps
dec
lods
cmp
dec
sub
pop
arpl
mov
fmuls
nop
xchg
mov
mov
xor
inc
leave
push
shr
insl
jbe
add
mov
insl
sbb
clc
mulb
sbb
inc
popa
jmp
push
sbb
mov
movsb
cld
jne
dec
stos
mov
inc
xchg
pop
addr16
shll
les
and
out
es
test
jns
arpl
adc
imul
and
adc
add
and
sbb
cmp
ljmp
xor
cwtl
inc
mov
mov
add
push
sti
xchg
jl
xor
jbe
add
xchg
and
fisubrs
or
dec
lds
jecxz
cli
add
data16
or
sub
repz
mov
add
cmp
sub
pop
out
imul
sbbl
sub
mov
jns
inc
subl
outsb
movsb
add
into
xchg
out
jecxz
loopne
bound
inc
ljmp
pop
xchg
pop
and
sub
or
inc
mov
test
pop
clc
pop
xor
mov
fwait
mov
sub
inc
popa
in
inc
push
dec
ds
push
aas
xchg
jecxz
ss
pop
pop
mov
inc
sahf
fwait
stos
test
clc
or
sub
lahf
sahf
jns
fiaddl
adc
jmp
sbb
ja
xor
and
gs
pop
xchg
sbb
inc
mov
cmc
shrb
mov
jl
outsl
jns
daa
jno
je
sbb
inc
testb
mov
mov
jmp
mov
dec
xor
pop
popf
and
mov
rorl
std
popa
xor
and
gs
out
mov
pop
ljmp
push
pop
xor
call
or
mov
jno
mov
mov
fmull
lock
aad
sub
idivb
push
leave
sub
lahf
jns
adc
cli
pop
fistps
and
aad
stc
cwtl
test
fisubrl
jns
jbe
stc
sub
push
pop
xor
test
sub
sub
cmpb
adc
cmp
mov
jae
xor
pop
dec
adc
mov
sti
mov
sub
fmuls
icebp
push
xchg
sbb
lret
xchg
lret
mov
xor
pop
stc
and
xlat
mov
sbb
jge
mov
sub
cmp
mov
scas
call
adc
enter
leave
sbb
and
push
test
adc
loopne
add
push
push
pop
fisubs
dec
es
pusha
mov
fdivs
packuswb
pop
repnz
lcall
repnz
adc
jmp
fsubrl
mov
sub
push
and
daa
and
adc
ja
std
mov
cmovs
inc
enter
xchg
pop
or
ja
and
iret
mov
pop
cmp
and
iret
xor
jbe
imul
add
inc
lea
std
sub
sbb
hlt
leave
adc
sbb
loopne
mov
sbb
test
xor
cltd
das
and
sub
ret
fbld
mov
mov
adc
and
test
int3
cmp
repz
data16
arpl
pop
xor
sbb
mov
cmp
xchg
inc
insl
sbbl
sub
sub
mov
push
lea
in
jns
mov
stos
pop
pop
or
repz
adc
sti
data16
in
cld
push
ret
lahf
fbstp
xchg
cli
mov
lea
lret
pop
cmp
ret
stos
push
xor
inc
test
mov
mov
mov
pusha
sbb
insb
jmp
enter
or
cmc
ds
les
push
lea
sarw
lret
aad
out
icebp
mov
xchg
cltd
add
call
xchg
mov
stc
loope
pop
cmp
or
xlat
fiadds
loope
cld
dec
fs
cmp
push
cmpsb
cmp
mov
sub
jecxz
outsl
fists
or
jmp
inc
sbb
dec
icebp
push
test
and
adc
pop
fstpl
jge
and
dec
aam
shlb
or
mov
pop
test
test
das
nop
ss
xor
data16
aam
dec
add
test
pop
jmp
fstpt
sbb
outsb
jecxz
xor
out
lea
mov
aas
cmpsl
mov
stc
andl
scas
xchg
sti
pop
jg
sbb
jns
es
enter
fisubrs
lahf
nop
stos
cmpsb
ret
sbb
jmp
sbb
mov
loope
or
orb
ja
jbe
mov
lcall
xchg
inc
adc
and
cltd
add
pop
dec
lea
insb
add
cmp
sbb
inc
xor
dec
dec
xchg
imul
mov
out
xor
sub
mov
orb
cmp
mov
lea
subb
in
loope
test
mov
es
and
jmp
mov
mov
push
nop
scas
sbb
mov
cwtl
arpl
shl
cmp
mov
cmp
xchg
daa
jbe
or
inc
fwait
dec
mov
orb
and
std
xor
cs
sets
shl
jb
sub
push
push
sbb
sbb
ljmp
das
outsl
lods
push
pushf
jg
in
pop
loope
push
fsubrl
inc
loopne
sahf
shll
ja
xchg
dec
pop
psubusw
pusha
add
idivb
add
and
inc
ljmp
or
cwtl
insl
add
in
push
inc
mov
mov
jns
mov
dec
incb
inc
and
cmp
push
fcoml
std
mov
cltd
mov
cmc
pop
inc
roll
lods
mov
xchg
mov
gs
jbe
scas
jae
negl
dec
stc
sub
pop
lods
test
sub
into
cwtl
repz
lret
jnp
inc
xchg
repz
sub
xchg
fdivl
or
les
negl
or
fs
das
sub
std
ret
push
sbbb
sbb
cmp
dec
pop
int
sbb
jno
pop
pushf
loopne
pop
cs
shlb
leave
jmp
into
pop
dec
leave
test
sub
xor
rcrb
pop
icebp
push
cmp
je
adc
sbb
insb
repz
xacquire
mov
jnp
les
xor
pop
mov
movsb
popa
xchg
js
inc
fistpl
xchg
rcll
sbb
pop
cs
mov
addr16
jae
decl
sbb
movsl
xor
add
lea
pop
sbb
dec
loopne
lock
mov
negb
js
mov
jbe
mov
shl
shlb
ja
nop
in
xchg
enter
movsb
jg
mov
lahf
jnp
in
cwtl
ds
jb
xor
fiaddl
pop
jb
sub
and
jns
mov
sub
mov
ret
mov
daa
icebp
test
xchg
mov
push
jbe
cmpsl
sbb
xorl
xchg
fucomi
aad
pop
jmp
sub
ret
push
cmp
jle
sub
loop
jp
shl
add
push
negb
xor
jge
jo
lret
out
jb
cmpb
aad
adcl
aaa
loopne
std
movsl
or
mov
push
jb
cmp
mov
xorl
lock
sub
call
mov
fistps
inc
pop
arpl
and
jle
mov
jmp
mov
pop
ds
scas
or
leave
pop
movsb
lea
add
jmp
imul
xchg
shl
mov
inc
aam
mov
sub
pop
jmp
push
push
xchg
int3
mov
inc
jmp
push
sbb
pop
xchg
cmp
pushf
xor
aas
imul
in
push
ss
mov
xor
xor
sbb
and
jmp
or
sbb
cmp
and
popf
jg
fnstenv
inc
xor
or
in
imul
cli
or
cli
push
aad
mov
jno
in
test
xlat
fadd
data16
sbb
jbe
push
imul
neg
in
dec
sub
xor
mov
repz
mov
sbb
adc
xchg
cld
push
sti
movsb
mov
mov
sbb
pop
push
xor
add
pop
add
in
cmpb
cmp
dec
jmp
outsb
lcall
ss
aaa
cmp
or
movsb
ja
jb
ja
push
cmpsb
fcmovbe
pop
dec
jg
test
lcall
js
movsl
orb
add
jg
jecxz
loope
adc
jne
pop
clc
fisttpl
mov
mov
or
fcoml
push
and
cmp
jb
or
cmp
mov
cwtl
or
pop
data16
mov
cmp
lahf
adc
scas
stos
lret
pusha
mov
push
leave
popf
and
inc
jne
movsl
out
fcomps
icebp
and
ljmp
fsubrs
mov
int3
decb
inc
test
push
mov
inc
movsb
xchg
call
sarl
push
daa
popl
mov
popf
sub
mov
or
stos
add
rcll
pop
fld
rcrb
pop
movsb
cmpb
or
mov
loop
aaa
xchg
loope
inc
dec
repnz
ret
fsubrp
cmp
pop
rcl
xor
leave
adc
sbb
sub
iret
xchg
xorl
inc
mov
adc
xchg
aas
insl
aam
outsb
cmc
sti
dec
cmp
mov
dec
or
and
pop
aam
cs
sti
jecxz
test
lahf
test
fisubrl
dec
xchg
xor
mov
mov
inc
les
rcrl
testb
icebp
sub
jne
xchg
int
mov
into
xchg
cmp
pop
cli
lret
jecxz
lahf
movsb
les
out
hlt
insb
xor
mov
pop
jne
in
addb
fwait
mov
bound
push
cmpsl
ja
lahf
push
lret
jae
das
inc
outsb
insl
mov
popf
in
idivl
sti
mov
repz
mov
pop
push
xor
adc
dec
popf
dec
iret
scas
cld
xchg
mov
in
les
cmp
ret
push
ss
lret
jo
sbb
mov
xchg
aaa
dec
mov
dec
test
mov
pop
pop
xor
out
mov
or
stos
mov
inc
jmp
jg
movsb
and
outsb
pop
cmc
xchg
rcr
pop
xlat
hlt
cmc
pop
add
cs
xchg
or
or
push
pusha
js
xchg
inc
pushf
push
call
roll
add
or
push
dec
icebp
into
inc
aad
pop
movsb
xor
and
cmovne
in
sahf
inc
daa
fcompl
mov
xchg
or
call
pop
call
pop
mov
dec
incl
add
js
inc
arpl
paddd
lahf
cwtl
hlt
or
adc
dec
and
lret
int3
jae
add
dec
jne
cld
shlb
and
mov
push
loop
mov
lcall
loop
mov
int3
jnp
cltd
outsl
mov
inc
xchg
cmp
inc
push
push
outsl
imul
mov
loopne
arpl
aaa
pop
das
cmpsl
cmp
in
mov
cli
xchg
xchg
inc
loope
movsb
jmp
sub
and
cmp
cmp
pop
es
sub
jne
mov
sub
cmp
daa
cs
aam
jo
jae
in
sub
mov
aas
pushf
adc
cmpsb
xchg
adc
cld
and
dec
lods
adc
mov
xor
sbb
bound
push
addr16
test
arpl
mov
adc
sbb
mov
push
mov
xor
incl
cmp
clc
push
cld
push
loope
test
lea
push
inc
loop
rorl
xor
in
sarb
mov
scas
mov
xchg
rorb
push
fiadds
mov
cli
cmp
sub
add
jecxz
jl
cmpsb
cmpsl
dec
lret
push
mov
adc
aas
enter
or
pop
fbstp
out
aas
inc
push
lods
out
sub
mov
inc
pop
stos
mov
and
in
pop
xchg
inc
out
leave
adc
pop
in
das
cli
pop
stos
stos
fimuls
andl
mov
shr
xchg
jecxz
adc
pop
mov
mov
push
add
xchg
inc
js
pusha
cmp
xchg
cmp
jno
lods
push
inc
adc
jmp
fs
sbb
idivl
sbb
pop
loop
push
adc
or
lret
cld
add
ret
inc
ljmp
inc
xchg
cmpsb
jnp
test
cmpl
push
cld
sti
int3
js
add
addr16
xor
jl
std
inc
hlt
ds
stos
push
lahf
lea
and
mov
test
mov
mov
aas
adc
fists
add
and
scas
out
cmp
jge
cmc
sahf
into
xchg
mov
bound
jl
push
pop
cmpsb
fwait
addb
int3
fwait
mov
hlt
push
sahf
cmp
dec
dec
inc
mov
subl
scas
lods
pop
push
add
insb
ret
aad
outsb
ss
les
outsl
iret
insb
xor
adc
bnd
xchg
shl
daa
adc
xchg
push
or
xor
popa
stos
jno
rcr
in
inc
xchg
andl
mov
xchg
jb
fldl
mov
call
adc
mov
xchg
cld
data16
pop
in
sub
daa
mov
fs
dec
xor
mov
cmc
cli
pop
and
rorb
loop
cmp
rclb
stos
push
out
lock
inc
jae
outsb
rolb
pushf
xor
iret
inc
and
stos
push
test
mov
ss
pop
xor
faddl
ja
pop
push
mov
or
fimuls
repz
xchg
loop
mov
jg
xor
ss
loope
add
or
add
sarb
clc
mov
sbbb
lret
mov
sahf
add
sub
fdivl
jge
xlat
mov
fcompl
mov
jmp
add
lods
lea
mov
dec
shlb
pop
mov
pop
cmp
sbb
adc
mov
xchg
inc
hlt
aad
sbb
cmp
cmp
jmp
popl
inc
mov
pop
adc
or
or
xchg
xchg
jg
add
adc
dec
pop
jae
aad
xor
dec
addr16
inc
cmp
mov
jmp
xchg
and
movsl
cmp
and
call
cmp
lcall
hlt
fcoms
ss
sbb
fdivl
mov
sub
add
mov
stc
xor
ficompl
add
aad
in
cli
adc
mov
mov
into
cli
cmp
cmp
cmpl
dec
rcrb
inc
int
clc
fsubs
sbb
fsubrs
shr
mov
and
pop
jo
cmp
mov
cmp
push
cmpsl
cmc
push
sbb
and
subl
sub
push
insb
xor
movsl
push
out
cmc
ret
mov
jl
pop
sti
adc
jl
fsubr
dec
dec
jns
mov
roll
aas
mov
or
mov
ret
jp
jmp
divl
nop
adc
sub
std
clc
push
cmp
dec
pushf
cmp
push
inc
xor
lods
push
in
pop
decb
push
and
jecxz
ljmp
mov
add
mov
pop
push
push
sub
cmpsl
mov
pop
shrb
iret
and
shrl
je
pop
imul
and
sub
adc
hlt
jbe
push
lods
in
and
xchg
ja
out
shrl
stc
jb
push
xor
jg
movsl
jp
xchg
pop
out
sub
ffreep
fldt
mov
mov
mov
mov
mov
sti
pop
sbb
mov
fdivr
clc
xchg
and
insl
fisttpll
ja
push
jnp
insb
ret
add
cmp
ljmp
test
cmpsb
fistps
aad
int
push
jmp
sbb
push
mov
jnp
fdivrs
fsubl
lock
es
lret
imul
xchg
and
push
jecxz
fldl
adc
mulb
jge
mov
imul
out
jae
sbb
xor
shl
xchg
cmp
add
fdivrs
push
out
addb
cmpsl
addr16
jnp
into
mov
lcall
outsl
lahf
ja
test
in
push
adc
jecxz
jle
dec
inc
sub
repz
cmp
xor
pushf
jo
mov
lock
ret
push
loop
dec
aam
adc
sbb
add
fs
add
addb
sti
cmp
cli
inc
ror
pop
movsl
xchg
dec
fwait
cmp
ja
or
mov
cmp
mov
cmp
out
push
lretw
divb
cmp
mov
adc
loop
xchg
or
mov
jmp
dec
xor
and
dec
xlat
mov
and
mov
pmaxsw
popf
scas
jne
arpl
inc
sahf
stc
lea
sub
sbb
jb
sub
rcr
mov
dec
dec
adc
lea
popf
je
mov
lock
sub
and
not
or
ja
push
mov
aaa
out
jae
arpl
loop
push
cmovne
mov
bound
jno
out
movsb
add
inc
subl
bound
repz
stos
and
sbb
push
add
pushf
ret
xor
cli
cmp
mov
les
lahf
es
pop
es
insl
or
repz
js
mov
aad
lock
mov
jno
ljmp
and
pop
cwtl
leave
ja
and
mov
fnstcw
test
les
loope
pop
jmp
andl
mov
cmp
mov
out
sub
pushl
mov
neg
or
push
adc
popa
pop
dec
cmp
and
sbb
call
loopne
mov
dec
jmp
scas
lock
xchg
cmc
inc
add
ss
pop
cmpsl
mov
push
ds
push
jne
mov
clc
icebp
mov
mov
loop
dec
mov
sarb
repz
cltd
push
inc
xor
lods
mov
jle
testl
dec
stos
add
push
and
inc
fnstsw
xchg
test
adc
test
repnz
push
adc
aaa
push
es
das
adc
mov
sbb
fcmove
sub
aam
sub
out
nop
jg
mov
pop
xor
repz
fisttps
out
lods
in
ja
shrb
pop
push
mov
add
xchg
cli
inc
shl
jno
xchg
inc
pop
repz
stc
lea
pop
inc
test
jne
pusha
cmp
das
and
cmp
dec
ljmp
adc
adc
adc
lcall
sbb
mul
or
and
nop
rcll
jne
loop
addl
int3
repnz
add
in
adc
imul
stos
movsb
std
cmpsb
push
jno
cmp
ljmp
push
pushf
or
jne
push
pushf
and
aam
lds
mov
clc
ret
cltd
sub
incb
lret
leave
insb
xlat
pop
inc
loop
bound
add
sub
jmp
test
mov
data16
jnp
jb
scas
xor
jle
and
lds
mov
push
jg
fsubl
scas
jmp
mov
aad
fldcw
mov
aas
jmp
cwtl
cmp
cmp
dec
in
in
adc
mov
pop
adc
pop
mov
sbb
sub
orl
and
cmp
inc
fistpl
lea
adc
loop
mov
stos
push
dec
jnp
outsb
or
leave
loopne
clc
jp
push
sub
in
dec
dec
push
ret
in
pop
int3
in
jo
mov
mov
pop
push
inc
push
xchg
jg
aas
add
call
and
inc
adc
sbb
in
sbb
stc
ret
add
popa
call
cwtl
sbb
lea
jno
add
mov
sub
imull
subl
out
jne
mov
push
and
mov
or
adc
leave
flds
ss
jae
std
pusha
fsubl
shlb
and
ljmp
or
insl
xchg
je
decl
jl
push
outsb
fisubl
cmp
push
scas
daa
in
loopne
jno
mov
mov
out
pusha
and
cs
rcl
mov
push
inc
xchg
hlt
xor
jge
lahf
in
in
mov
jp
pop
repz
iret
sbb
xchg
xor
lods
and
in
inc
dec
fists
and
je
cli
push
and
sbb
mov
idivl
sbb
sub
movsb
pop
cmp
xchg
addr16
fisttpll
sbb
mov
movsl
adc
lock
fcmovbe
cmp
loopne
outsl
mov
dec
mov
sbb
out
push
ja
cli
pushf
jle
dec
mov
das
pop
adc
stc
adc
dec
ss
out
xorb
decb
mov
je
lcall
add
cmp
xor
pop
fnstsw
push
nop
lahf
xlat
sbb
sub
stos
rcrl
call
je
std
mov
fcompl
repz
pop
pop
nop
inc
mov
pushf
pop
sbb
xchg
int3
scas
test
aam
cmp
fs
and
inc
pop
and
dec
jnp
push
mov
das
cmp
scas
sub
cmp
inc
enter
push
stc
or
mov
add
scas
sti
stc
lret
inc
xchg
bnd
test
ss
sbb
ljmp
out
int
sbb
in
test
jno
cmpsb
sbb
sub
push
pop
je
in
cmp
mov
mov
mov
adc
sbb
int
jbe
outsl
push
stc
lods
mov
mov
and
dec
pushf
cmp
sahf
rcll
xor
movsb
add
xlat
icebp
pop
mov
add
xchg
cli
xchg
mov
std
xchg
sti
and
add
add
nopl
mov
mov
loope
frndint
xor
inc
inc
jmp
je
sbb
xchg
jns
sbb
xchg
sbb
dec
int
mov
or
les
xor
xor
test
aam
push
fisubrl
lahf
stc
ljmp
dec
stos
int
addr16
dec
fidivl
jmp
out
sahf
mov
cmp
test
fnsave
sub
aam
xor
xor
xorl
inc
jo
mov
adc
sti
mov
inc
repnz
or
cmp
in
xor
movsb
les
ret
aaa
xor
fs
cmp
mov
sub
hlt
cmpsl
inc
hlt
cmpsl
mov
sbb
jns
je
in
push
clc
pop
xchg
add
pop
sub
outsl
stos
add
negb
mov
mov
mov
inc
or
inc
loopne
arpl
push
mov
scas
xor
cmpsl
aam
push
inc
dec
cmp
mov
adc
mov
stc
push
cmpl
xchg
je
xor
mov
cmp
push
xor
int
add
out
int3
repnz
xchg
and
out
dec
jl
push
pop
sbb
or
das
jo
jmp
adc
adc
push
fs
push
push
mov
hlt
fisubl
stc
ss
mov
push
dec
cmpsb
es
int3
mov
mov
mov
xor
mov
add
inc
fwait
sbb
and
pop
fiadds
das
fisttpll
testl
decb
aas
cmp
jge
imull
or
out
inc
jne
inc
mov
test
insl
fldenv
scas
jge
push
ret
test
test
cvttps2pi
xchg
imul
push
mov
xchg
out
xchg
in
adc
cmc
ds
adc
mov
dec
sub
fxch
out
xor
scas
sub
in
scas
int
cli
xchg
adc
faddl
ret
in
cmp
sbb
xor
leave
push
push
mov
pushf
mov
jne
rolb
pop
or
fs
mov
lret
int3
mov
shlb
mov
pusha
or
adc
pop
movsl
push
add
int3
cli
mov
divl
xor
ret
lahf
cwtl
ljmp
or
mov
jbe
dec
mov
xchg
mov
dec
xor
call
roll
or
std
jmp
pop
inc
dec
mov
cwtl
sub
mov
mov
and
rdmsr
xchg
sub
loopne
push
add
pop
push
add
stos
mov
xchg
xor
jp
inc
inc
in
fwait
mov
mov
hlt
dec
or
mov
inc
jo
data16
push
test
sub
inc
mov
add
cli
dec
push
andl
and
cld
hlt
clc
or
lods
out
cmp
add
mov
cmp
xchg
mov
mov
data16
jne
fists
add
pop
xchg
jo
movsb
sub
inc
ljmp
mov
push
fs
frstor
enter
pop
mov
dec
pop
dec
adc
mov
aad
add
aas
adc
cli
cld
mov
outsb
lea
fimuls
addr16
in
inc
mov
push
into
cmpsl
mov
jo
sbb
frstor
mulb
xchg
fdivrp
clc
jnp
xchg
lods
cmp
test
pushf
cmpb
inc
push
xchg
xchg
in
cmp
and
in
xor
xchg
pusha
int3
xchg
xor
popa
loope
mov
iret
jp
nop
shll
jmp
in
popa
nop
pop
out
adc
dec
and
test
push
adc
imul
popf
out
iret
jno
or
add
adc
gs
in
sub
popa
rcll
cmp
loope
mov
scas
js
add
notl
addl
aad
out
xchg
sbb
pop
cmp
in
das
rolb
incl
pop
mov
pusha
adc
jae
arpl
mov
bound
cmpsb
sti
push
cmp
pop
testb
and
xchg
popf
mov
push
ds
test
mov
adc
jbe
nop
lcall
test
pop
mov
es
lret
loop
inc
sbb
mov
cmp
xchg
xchg
jg
adc
mov
lret
cmpsb
push
sar
jge
cmpb
sbb
push
and
or
fiadds
sbb
mov
jmp
sbb
mov
jno
mov
xchg
push
iret
cmp
sti
inc
test
dec
lahf
sahf
outsl
mov
cmp
out
jmp
push
cmc
jo
lods
jne
js
subb
mov
orb
and
data16
mov
push
bnd
mov
loop
test
es
xor
pop
ret
push
fsub
rcrb
pop
out
pop
adc
fwait
and
es
or
sahf
adc
add
push
sub
xchg
mov
pop
adc
add
push
stos
js
bound
mov
ljmp
mov
fimuls
sub
push
fucom
and
lret
mov
test
dec
jmp
popw
cmc
notb
and
fnsave
lods
ret
mov
pop
repz
repz
test
idivb
sti
imul
outsb
and
cmp
jg
or
jmp
arpl
je
push
push
jmp
pop
lods
addb
inc
sub
push
stc
aas
fldenv
imul
test
jecxz
pop
daa
mov
popf
xor
pop
subl
cmp
das
ss
outsl
mov
into
in
push
andl
ja
ret
inc
cmp
sarl
lods
add
mov
xchg
movsl
es
ret
aaa
cmpsl
std
inc
fldcw
jnp
das
mov
mov
jp
lods
lea
fs
mov
and
imul
mov
sub
in
nop
push
adc
imul
add
push
and
mov
dec
lret
js
lret
subb
je
sub
int3
mov
mov
outsl
lock
xchg
jo
adc
sub
pop
repnz
nop
mov
and
inc
testb
sub
iret
xchg
cmpsl
jp
out
ss
jecxz
loope
sub
test
mov
call
movb
lock
cmp
jg
out
sub
cmp
popa
inc
lds
rcrb
pop
aad
popf
ror
fs
sti
lock
xchg
pushf
mov
mov
jl
jl
xchg
lea
and
ds
rcrl
mov
sub
out
adc
and
and
aas
nop
xchg
mov
std
ret
in
das
and
test
cmp
mov
mov
imul
repnz
mov
fwait
aad
nop
stc
sub
ljmp
fwait
outsb
cmp
sub
jae
dec
cmc
enter
jge
jnp
fldl
dec
loop
test
inc
pop
xchg
xchg
fbld
sahf
mov
ret
lea
jb
add
mov
sbb
cmpsl
push
popa
loope
gs
add
mov
sahf
push
adc
cmc
out
addl
loopne
movsb
test
dec
subl
lea
fistps
add
xchg
scas
das
lcallw
fidivs
loop
ljmp
or
mov
mov
push
cltd
test
popf
xchg
jb
rorb
pusha
test
addl
jl
mov
imul
xor
pusha
push
es
jae
enter
dec
clc
xchg
in
sahf
lret
pushf
lret
cmpb
ljmp
adc
lret
cmpxchg
xor
into
lds
inc
iret
mov
xor
inc
mov
fildl
aas
sub
pop
adc
jbe
mov
scas
mov
pop
sbb
and
lcall
inc
xchg
pop
push
and
fwait
in
or
dec
int
int3
stos
js
out
mov
inc
xchg
mov
pop
lcall
or
pop
mov
pop
aaa
test
jle
and
lcall
shlb
and
cld
hlt
push
xor
aas
inc
xchg
add
push
cli
js
jbe
mov
out
gs
repz
lods
popa
mov
insl
mov
add
mov
sbb
sub
dec
into
sbb
mov
in
jno
test
shrb
xchg
ds
idiv
fsubrs
js
jns
scas
fistl
cwtl
popf
mov
jnp
push
xchg
xchg
and
cmp
hlt
mov
sub
inc
imul
cld
pop
out
ja
mov
mov
or
inc
lret
adc
add
adc
mov
test
sbb
imul
insl
jecxz
push
lea
cmc
fmuls
out
cmpb
lods
xor
push
lret
test
mov
hlt
cs
ret
pushf
dec
dec
sub
ds
cmp
adc
ficomps
cmp
sbb
bound
jecxz
sub
aas
xchg
mov
and
xchg
je
sbb
lods
or
cli
fsubs
mov
sub
movsb
inc
icebp
sahf
fiadds
andb
pop
mov
sbbl
popf
adc
jg
insl
mov
mov
decl
add
jns
out
icebp
adc
call
add
fimuls
lods
std
sub
stos
jnp
cwtl
imul
mov
pop
dec
out
mov
clc
cmp
lea
fmuls
sub
repz
loopne
in
cs
fildll
cmc
imull
popa
adc
mov
and
sub
mov
jne
or
jae
cwtl
sbb
lods
pop
into
xor
or
sbbl
inc
imul
push
int
inc
or
inc
lea
cmpsb
daa
push
rcrb
mov
mov
pusha
out
push
ja
cltd
je
jl
popf
in
sub
fstl
dec
sahf
jne
inc
lcall
mul
or
cli
repz
jno
xor
shlb
or
cmpsb
clc
push
dec
add
push
jge
and
sub
ficompl
add
mov
sbb
clc
pushf
xchg
xchg
mov
jge
mov
fsubrl
xchg
fcompl
sub
pusha
das
and
bound
jns
mov
dec
mov
ret
pop
test
jl
clc
inc
xor
pop
gs
add
mov
push
pop
enter
lahf
sbb
lods
adc
je
mov
sbb
out
cmp
adc
add
addb
repnz
sti
pop
and
daa
sub
lret
cmc
in
mov
or
mov
jnp
xchg
sti
popf
inc
loope
or
pop
cmc
add
mov
arpl
call
jb
sbb
cmp
pop
push
mov
fxch
mov
repz
cmpsb
loop
jg
ja
cltd
mov
or
push
out
ror
in
aad
cmpl
in
testl
adc
nop
xor
cmp
jg
ja
outsb
inc
pop
mov
call
xorb
push
push
vpsubd
dec
sbb
xchg
scas
ds
repz
aam
negl
xchg
dec
pop
in
mov
add
outsl
adc
lock
popf
out
out
out
test
call
stc
inc
xor
mov
jb
fisubrl
loope
jnp
fs
inc
xchg
jp
fwait
jle
add
lea
icebp
push
push
jno
mov
pop
cli
insl
test
pusha
mov
ror
out
pushf
push
loopne
or
or
mov
sti
pusha
dec
fwait
inc
inc
dec
loope
sub
rorb
sarl
outsb
jne
aad
cltd
lcallw
cmp
aaa
xor
jg
push
sub
lret
rclb
pop
or
adc
sbb
pop
xchg
xchg
jae
aas
jp
or
dec
test
scas
sbb
mov
aaa
jecxz
adc
das
push
fdivrl
je
in
aam
into
lcall
aaa
mov
jbe
sbb
cmp
es
insl
inc
frstor
add
mov
leave
mov
pop
push
cltd
push
and
aaa
in
aas
test
ss
mov
and
mov
sub
pushf
inc
cmpsl
cltd
fistpll
and
push
andl
mov
ficoml
clc
or
pop
notb
xchg
inc
push
mov
cwtl
hlt
mov
dec
sbb
push
cmp
rclb
xlat
divb
into
sbb
adc
pop
outsl
in
repz
dec
xor
jbe
pop
mov
pushf
test
insb
cmp
daa
dec
jmp
addl
jl
lds
inc
lods
ss
mov
in
xchg
addr16
or
pop
mov
outsb
pop
and
ffreep
dec
pop
sbb
dec
xchg
sub
mov
fimull
data16
push
stos
push
dec
sub
lahf
mov
repnz
dec
add
out
sub
ljmp
dec
or
sub
popa
ja
cmp
adcl
test
pop
cwtl
add
movsl
jo
xchg
in
cmpsb
adc
nop
je
jge
pop
fwait
adc
outsl
out
hlt
lods
or
mov
add
adc
dec
into
pusha
ss
in
inc
sbb
jp
jbe
mov
shrl
loope
testb
mov
insl
jnp
sti
repnz
jo
jns
lea
lock
push
pop
jmp
sub
rorl
pop
and
mul
rolb
popf
enter
aad
fwait
push
and
mov
push
xchg
jle
mov
cmp
outsb
inc
cmp
jmp
stos
pop
enter
das
stos
mov
cli
xor
cmpsl
mov
fs
adc
inc
rol
fildl
push
push
or
fsubp
rolb
and
push
hlt
imul
or
mov
pop
arpl
push
jns
nop
lss
cmp
jle
aam
sbb
mov
pop
pushf
repnz
gs
divb
push
or
dec
movsl
inc
rolb
subb
notl
out
jp
popa
loope
int3
je
add
in
mov
icebp
stc
push
pop
rorb
adc
cli
out
push
jns
sub
xchg
fwait
push
and
es
popf
push
add
mov
mov
pop
or
je
nop
fucom
test
adc
fs
in
ret
xchg
mov
add
cld
xor
imul
fs
clc
and
mov
inc
mov
ja
add
icebp
dec
lea
mov
xchg
adcl
or
mov
xor
cmp
test
xchg
jg
or
cwtl
lods
ljmp
test
push
shl
bnd
das
ficomps
mov
mov
negl
repnz
xchg
call
outsl
adc
sub
loope
inc
xor
andb
fmulp
jae
mov
add
and
int
repz
dec
ret
adc
jge
adc
mov
cmp
cmp
mov
xor
or
sub
icebp
jge
inc
das
daa
sbb
push
or
subb
aas
add
and
dec
push
push
movsl
lret
clc
and
fidivrs
cmpsb
add
add
sbb
cs
xor
push
pop
fsubs
outsl
stos
pop
fsubl
outsl
ljmp
enter
lods
int
stos
sti
add
movsb
xor
dec
adc
clc
ss
and
fcoml
cmp
adc
dec
mov
cmp
pop
jo
je
push
pop
dec
pop
clc
push
jo
jmp
rcl
mov
pop
mov
leave
fcmovnu
pop
push
daa
aad
lds
popa
xchg
pop
pop
pop
daa
mov
in
je
and
nop
aas
movsl
jne
scas
push
pop
mov
dec
jl
mov
dec
scas
and
mov
inc
sbb
sub
test
jne
pop
movsb
xor
pop
nop
je
mov
fiadds
stc
pop
sbb
pop
xor
test
dec
xchg
adc
lahf
lret
push
adc
xor
test
hlt
cli
mov
adc
int
pop
int3
stos
inc
cwtl
cmp
mov
dec
jo
lock
sbb
clc
lcall
ds
adc
xchg
pushf
xor
and
dec
xchg
xchg
dec
lret
push
scas
mov
pop
je
das
jle
xchg
aaa
sbb
aas
cwtl
shrl
or
hlt
je
push
ret
mov
out
and
pop
fwait
into
sar
es
xor
pop
jp
call
subl
shll
sub
xchg
jle
aad
or
push
movsl
repz
or
sub
stos
pop
in
rorb
or
ja
mov
add
xchg
push
inc
jno
stos
add
or
sarl
mov
mov
mov
loope
ljmp
enter
mov
mov
xor
cs
jge
and
outsb
std
lods
das
and
mov
pushf
out
dec
mov
push
cmp
fisttpll
jbe
dec
jno
push
sarb
mull
lcall
testb
jle
fdivrs
push
add
cmp
jnp
xchg
rclb
pop
aaa
gs
jl
test
push
gs
ffree
cmp
adc
inc
sbb
jge
mov
mov
shll
cli
les
dec
push
mov
push
jbe
inc
fstl
jb
ret
lods
add
add
popa
cmp
popf
dec
roll
nop
into
dec
adc
push
or
aad
and
cli
repz
inc
push
dec
mov
mov
sbb
mov
mov
aas
pop
mov
rclb
idivl
cmp
cmp
fmuls
and
lret
jno
jbe
jns
out
imul
xlat
mov
dec
lods
pop
mov
push
or
cmpl
cmpsl
cmc
xor
mov
test
stos
mov
out
adc
cmp
sbb
xchg
sarb
cltd
jle
cmpsb
test
sub
cmp
sbbb
sbb
xor
sub
add
das
inc
gs
xor
cmp
inc
in
arpl
out
test
cmp
adc
or
cmpsl
scas
setl
lret
fidivl
dec
punpcklwd
mov
sbb
fmul
jle
ret
loop
movsl
mov
js
xlat
jge
orl
lret
xchg
mov
add
push
ds
pop
fld
adc
aad
cmpsb
dec
adc
mov
cli
xchg
and
mov
adc
mov
test
lea
pop
xor
in
add
push
mov
outsl
adc
push
cwtl
xchg
jmpw
xor
out
sahf
popa
fnstenv
aaa
pushf
jne
call
icebp
mov
mov
movsb
mov
mov
inc
fmul
out
test
add
int3
cli
cmp
imul
gs
lcall
enter
add
iret
test
push
rcl
bound
insl
fbld
mov
cmp
mov
andl
sub
mov
add
add
dec
clc
cmp
lds
ds
mov
adc
stc
mov
outsl
push
arpl
sbb
fcom
push
or
ljmp
xchg
xor
sti
sbb
fadd
push
or
mov
or
xor
cmpsb
pop
sub
mov
adc
mov
js
arpl
pop
cmp
aam
cmp
imul
outsl
filds
xchg
or
push
addr16
jp
cmp
loop
and
lods
into
fldt
or
fdivrs
ja
cld
icebp
pop
jne
ss
xchg
or
dec
cmp
loope
negb
cmp
pop
ss
jae
sti
sbb
jge
outsl
rcr
rolb
iret
mov
xchg
mov
loop
outsb
dec
inc
mov
sbb
lcall
dec
mov
addr16
cld
fbstp
in
jecxz
out
in
and
call
jmp
sub
mov
pop
xchg
out
adc
repnz
pop
sub
pop
push
lds
cmp
jmp
and
mov
push
xor
xchg
xchg
lods
fdivl
adc
xchg
popa
icebp
inc
mov
movsb
repnz
push
dec
loop
xor
ss
stc
out
loope
pop
sub
mov
jnp
mov
cmp
cmp
pop
mov
mov
sbb
sarl
lret
std
orl
mov
inc
pop
xor
faddl
inc
mov
and
dec
fs
push
pop
std
dec
leave
inc
sbb
pop
sbb
add
jne
test
insl
loopne
cwtl
lahf
mov
adc
sub
fildll
pusha
adc
jne
lds
cmp
push
push
add
fwait
out
add
pop
inc
push
cld
in
mov
fwait
mov
bound
mov
outsb
push
dec
rcl
and
xor
in
in
cld
mov
inc
inc
mov
loope
xor
push
pushf
or
xchg
mov
adc
fdivrs
je
sbb
cmc
ds
addr16
adc
xlat
cmovge
bound
sub
out
push
mov
mov
mov
fcoml
into
or
stos
neg
ds
mov
xchg
enter
xor
adc
xchg
push
imul
sub
sbb
adc
adc
ret
sti
pop
xchg
jb
bnd
pop
xor
mov
daa
and
pop
enter
sub
sbb
test
movb
scas
pop
out
mov
int
sub
sub
pusha
inc
movsb
in
test
xchg
int3
jmp
sub
or
and
mov
outsl
mov
insl
hlt
mov
mov
xor
aam
idivl
inc
outsb
ret
xor
or
mov
outsb
adc
push
mov
xor
xchg
mov
sub
pop
mov
push
imul
dec
xor
lea
out
add
jmp
clc
js
loopne
inc
adc
add
call
fbstp
mov
mov
pop
ds
xor
sbb
pop
std
lock
repnz
mov
sbb
sti
mov
movsb
xor
sub
cmp
arpl
mov
fldenv
jge
arpl
repnz
and
into
mov
sub
fwait
push
pop
mov
push
xchg
pop
cmp
xor
inc
pop
das
inc
cld
jnp
add
and
mov
filds
push
adc
push
pop
les
mov
clc
lds
pop
outsb
dec
hlt
push
dec
push
js
das
sbb
mov
iret
mov
in
sbb
gs
sub
imul
jne
or
inc
xlat
loopne
cmp
mul
and
in
pop
stos
pop
jmp
lahf
dec
and
jp
fs
mov
adc
fldl
inc
cmp
mov
pop
adc
imul
imul
pop
push
aaa
mov
frstor
fmuls
push
jl,pn
lahf
fadd
add
and
hlt
add
jp
mov
xchg
push
je
repz
xor
cmp
mov
inc
movsl
pushf
repnz
jno
je
into
mov
pop
cmp
cmpsl
out
loopne
les
adc
stc
fisttps
inc
pop
mov
imul
js
jb
adc
add
mov
add
out
ljmp
push
fnsave
jmp
xchg
push
sbb
pop
xchg
and
jbe
je
mov
orb
mov
popf
mov
mov
int3
mov
js
lret
dec
xchg
fwait
sbb
or
sub
mov
mov
int
fcoms
movsl
dec
bound
insl
stos
hlt
or
andl
sbb
out
in
xchg
jne
sbb
dec
dec
fstpt
repz
cmp
int
inc
mov
mov
iret
cmp
xor
push
sahf
fldenv
into
mov
pop
jg
jnp
xorps
push
xlat
movsb
xchg
fcomps
sub
sub
cld
test
mov
inc
push
fs
lret
leave
aas
fisubs
fstl
out
cmc
inc
inc
mov
sti
mov
sub
std
xor
aad
lods
decb
aad
rcl
jle
es
dec
xor
fwait
mov
mov
xor
pop
cmp
inc
mov
pop
jns
js
xchg
js
cld
lock
sbb
sbb
pushf
movsb
sti
xchg
popa
xor
jae
jns
mov
mov
adc
push
mov
fwait
add
stos
inc
aaa
jecxz
fcmovnbe
jno
jo
adc
daa
in
nop
push
outsb
call
jb
shl
imul
lea
inc
mov
iret
jo
fsubrs
add
jp
data16
mov
daa
mov
aas
in
xchg
or
sbb
sti
lods
bound
scas
sbbb
dec
push
mov
jne
adc
sub
lahf
sub
cmp
ja
popf
outsl
or
ss
lea
inc
negb
clc
inc
in
popa
cwtl
fidivl
sbb
xchg
les
mov
movsb
push
lea
lock
xor
mov
mov
or
testb
and
xchg
popf
insb
loopne
jne
mov
in
xchg
pusha
push
lcall
cmp
mov
mov
and
pop
rcr
cltd
sub
xchg
xchg
xchg
rorb
push
sbb
jne
push
sti
push
add
cli
mov
ss
mov
sub
or
dec
and
fcmovne
sub
pop
repnz
jns
jo
enter
stos
sub
mov
inc
inc
repnz
stc
nop
xlat
dec
les
in
mov
xchg
and
adc
les
loope
jo
lds
popa
loopne
dec
xor
pusha
div
sub
shrl
cld
xor
mov
add
iret
in
dec
fistps
adc
movsl
mov
testb
dec
les
sbb
test
xor
adc
and
adc
adc
push
mov
mov
cli
sbbl
adc
adc
call
inc
mov
mov
xor
sub
aad
mov
jne
jno
and
out
stos
pushf
arpl
inc
cld
xchg
jmp
orl
ss
jae
sub
pop
fisubrl
popf
sbb
js
push
ror
cmp
xor
dec
sub
lods
jge
stos
or
jae
gs
leave
mov
lcall
lods
cld
mov
sub
push
aam
sub
sti
add
dec
fcomps
call
pop
out
test
dec
lea
bound
add
cmp
aad
xchg
insl
lret
lret
scas
mov
mov
sahf
sbb
aaa
xor
mov
jo
sub
jno
add
pop
mov
jp
jbe
mov
mov
test
pusha
enter
mov
fistl
data16
jne
mov
dec
je
or
ljmp
in
fdiv
pop
and
js
cmpl
or
ret
xchg
mov
pop
mov
ror
mov
shll
cltd
and
or
les
jge
insb
xor
cmp
in
jbe
mov
jp
fwait
lcall
sbb
int
loop
in
sbb
jae
sub
sub
stc
out
pop
jle
inc
xor
jge
cmp
insl
xchg
add
inc
les
jnp
cmp
cmc
cmp
js
inc
add
gs
sti
js
sub
sub
cmp
stos
xchg
hlt
gs
cmp
nop
jo
addr16
imul
xchg
push
add
data16
icebp
pop
pop
xchg
rsm
addr16
jle
mov
sbb
lods
inc
mov
cmp
push
push
cmp
mov
xchg
dec
xor
mov
inc
xorl
jmp
mov
cmpsl
mov
cli
and
sti
xchg
in
xor
aam
ret
clc
fsubrl
pop
mov
cli
vcvttss2si
mov
rorb
in
inc
xchg
cmp
sub
pop
aaa
in
test
pop
mov
imul
inc
ror
xor
or
push
jmp
mov
dec
in
lock
mov
imulb
pop
mov
je
stc
repz
fstpt
aaa
idivb
pop
jbe
push
inc
popf
cmp
pop
inc
stc
mov
aaa
cltd
aas
in
adc
insl
js
into
mov
shlb
cltd
push
sbb
sti
xchg
jbe
aam
ds
push
jmp
jne
gs
aam
push
pop
or
cmp
hlt
adc
add
mov
loopne
mov
mov
pop
push
mov
es
fmuls
test
push
mov
push
jne
mov
sbbl
fs
das
xor
movsl
jnp
mov
imull
aam
inc
addr16
push
cmc
jo
and
adc
fisubrs
inc
mov
sub
jo
cmp
inc
stc
xchg
popf
jl
pop
add
cmpsb
rcl
mov
jg
xor
xchg
mov
cmp
into
cmp
push
jmp
stos
std
xorl
lret
pushf
fldl
movsb
push
xchg
jbe
sbb
push
call
daa
out
mov
cmpsl
orb
sbb
hlt
les
mov
xor
dec
int
repz
dec
insl
lods
mov
lds
imul
mov
loope
in
xchg
cmp
jle
pop
mov
movsl
sub
ret
dec
in
loop
icebp
xchg
jle
push
out
mov
dec
sub
sarb
fists
pop
cli
push
cmp
inc
add
sub
xchg
test
aad
cli
jbe
dec
pop
shll
push
add
push
and
and
sbb
aas
test
fisubl
sbb
adc
adc
les
in
out
dec
int3
adc
negb
int3
jns
shl
in
add
xor
icebp
ljmp
push
dec
push
cwtl
nop
or
fisttpl
mov
push
addr16
dec
rcr
dec
mov
mov
aam
imul
pop
and
fmull
and
pop
pop
andl
sti
dec
push
push
sahf
cmpsl
sub
mov
fisttps
jp
xchg
and
int
test
sbbl
out
and
pusha
cld
cli
cmpsb
loopne
xor
inc
mov
in
shl
and
rcrl
inc
jp
or
xchg
cwtl
shll
mov
mov
jns
iret
and
leave
or
hlt
test
dec
adc
ds
fwait
adc
mov
xor
mov
mov
insb
push
daa
sub
ss
pop
scas
cli
and
fnsave
cltd
into
sub
mov
mov
fs
stos
scas
cs
mov
ljmp
jno
cmp
add
fisubrs
dec
xor
add
cmpsb
loope
je
dec
cmp
imul
add
cltd
cmp
push
cmp
xchg
xorl
jns
xor
out
fs
xchg
jmp
dec
out
mov
pushf
test
mov
push
jmp
sti
in
cld
lcall
jmp
fcoml
cmp
popf
leave
sahf
jbe
pop
icebp
outsl
mov
jne
cmp
lea
fdivrl
jnp
mov
repnz
jne
pop
imul
push
push
cltd
iret
addl
lahf
xchg
adc
rcrl
xchg
in
fs
fiaddl
adc
pop
or
int3
inc
xlat
imul
pop
out
test
rcrl
push
pop
rclb
lea
or
loope
push
xchg
stos
inc
jne
gs
cmpsl
mov
das
mov
mov
sub
inc
lea
arpl
push
adc
pop
into
sub
mov
inc
xchg
or
cmp
stos
les
imul
mov
pop
mov
xchg
out
enter
mov
sub
or
rcll
fildl
mov
inc
in
cmc
add
fistpl
dec
jnp
aas
and
cmpsl
je
pop
xchg
mov
jl
mov
jnp
mov
roll
jp
fdivl
xor
popf
push
shl
movb
mov
pop
in
scas
push
sbb
nop
cli
adc
dec
mov
test
jge
push
push
lret
gs
repz
pop
pop
sbb
jno
inc
in
push
mov
gs
jns
adc
call
sub
roll
fnclex
push
pop
movsb
cmpsl
loope
mov
jns
shrb
ficomps
xor
pop
pop
daa
in
mov
and
jle
sbb
xchg
and
shr
into
bound
sub
mov
fwait
jns
cmp
adc
pop
or
dec
sub
fdivrs
shll
cmp
repnz
data16
xchg
add
fnstcw
fadds
xor
jp
lahf
jmp
xchg
ja
cmp
add
shl
jmp
sbb
mov
dec
mov
push
jae
jp
or
stos
sarl
icebp
into
mov
fcomp
push
loopne
xchg
jg
sbb
push
lcall
loope
mov
rclb
sbb
pop
jle
mov
in
push
adc
loopne
outsb
fs
leave
push
pushf
mov
push
cmc
jns
push
jge
push
jne
test
outsb
cmpsl
mov
in
ljmp
push
pusha
mov
sub
mov
call
inc
lea
dec
mov
lea
fimuls
pop
mov
iret
lock
movsb
andb
cwtl
shlb
and
fwait
sbb
and
adc
add
dec
mov
mov
jne
push
cwtl
xor
jns
lds
sti
repnz
mov
sub
jo
pop
sub
mov
mov
stc
ret
mov
mov
mov
and
addr16
fwait
add
add
xchg
sub
in
fisttpl
mov
jb
inc
mov
pop
outsl
in
or
push
repnz
adc
sub
loopne
ss
ret
int3
jns
cmc
test
xor
inc
jnp
mov
rcll
ljmp
dec
sbb
mov
jg
imul
test
gs
std
push
dec
or
int3
jb
mov
add
ror
dec
call
enter
imul
jg
fsubp
dec
cmp
lahf
lcall
xchg
fsubr
jle
add
mov
mov
xchg
daa
and
jnp
mull
mov
or
mov
inc
mov
loop
out
faddl
lret
rolb
cwtl
addr16
inc
dec
cld
test
cmpsb
jecxz
add
enter
sub
pop
stos
stc
leave
ret
aas
fildl
negb
pop
in
push
cmc
push
jo
jecxz
adc
pop
pop
test
cmp
cmpsb
pop
loop
cmp
jge
orb
push
pop
xlat
flds
xor
call
mov
xchg
cmp
jle
inc
mov
inc
xor
push
test
loope
sbb
int
cli
mov
mov
push
pop
insb
push
fldl
cmp
addr16
cmp
dec
sahf
pusha
sub
out
xchg
js
pop
lahf
jge
push
rorb
and
xchg
icebp
adc
mov
icebp
inc
fwait
push
in
pop
sbb
mov
aaa
cmp
mov
jb
enter
pop
cmpsl
xchg
dec
out
imul
xchg
cmpsb
imul
push
loopne
xchg
and
lret
in
push
jns
adc
pop
mov
leave
pop
test
in
sbb
or
test
inc
in
stos
xor
xor
xchg
in
cmp
inc
inc
scas
mov
push
and
aad
cmpsb
jbe
adc
mov
push
and
adc
inc
push
mov
arpl
sahf
pop
or
and
scas
movsl
pop
mov
jp
mov
shll
test
icebp
clc
lret
repz
xchg
aam
es
outsb
in
mov
icebp
add
add
sbb
jbe
xor
adc
jne
sbb
jnp
pop
iret
loopew
jbe
pop
mov
cmp
in
cmp
add
minps
or
dec
dec
mov
repnz
int
int
fmull
mov
cwtl
and
dec
jl
pop
or
dec
push
and
fisttps
jo
mov
mov
and
xchg
pop
mov
shl
aaa
add
sbb
add
iret
pop
popf
ss
loop
lods
arpl
mov
fdivs
mov
stc
inc
incb
or
imul
mov
pop
ljmp
je
add
lret
in
mov
ds
gs
cltd
dec
and
test
outsb
xchg
adc
out
divl
test
cld
jne
sbb
fldenv
sub
rolb
out
data16
sbb
pop
push
pop
lret
cs
decl
lcall
mov
loope
and
add
xor
cmp
jnp
repnz
xchg
jno
pop
jns
or
ljmp
xor
les
and
lcall
inc
popa
aaa
xor
adc
jno
dec
mov
adc
push
js
arpl
xor
insl
jns
int3
imul
xor
lods
pop
adc
out
pop
int
inc
je
std
sbb
lods
pop
sub
push
gs
test
pop
sbb
pop
and
into
or
mov
jo
push
into
outsl
mov
or
outsl
and
sub
cmp
jne
cmpl
jnp
ja
mov
mov
mov
andl
outsl
jne
jns
push
xor
jne
fs
sbbl
sbb
mov
lret
pop
or
loope
ljmp
rcl
jle
popa
and
adc
xchg
or
push
xchg
mov
std
push
addb
popa
in
fdivs
sahf
xchg
daa
adc
jne
out
popf
out
fisttpll
push
enter
dec
mov
adc
loop
std
mov
js
jle
fsubs
xor
leave
xchg
push
idivl
or
fcmovne
ficompl
mov
jmp
sbb
jns
adc
lock
and
jmp
and
xchg
lea
nop
addr16
popf
aam
fnsave
add
sbb
or
fst
xchg
dec
xchg
subl
jb
cs
sbb
push
movsl
cmp
mov
lods
out
cld
dec
enter
cmpsl
xlat
xchg
dec
pop
jae
cmp
cmp
jb
lods
movsb
xor
int
enter
cmp
mov
lods
jbe
fs
sbb
add
sbbl
push
ss
mov
fisttps
sbb
cmpsb
scas
jnp
inc
mull
mov
xchg
sub
lcall
in
in
adc
popa
int
adc
out
push
inc
fwait
sub
rcl
xchg
sub
popf
aad
jl
jle
add
sbb
mov
aaa
jle
xorl
add
sub
sbb
int
into
pusha
sti
cld
adc
pop
aam
fsubs
cltd
out
xor
pusha
lret
sarl
cmpsl
pop
and
iret
subb
std
lret
and
test
mov
mov
in
sub
icebp
in
shrl
sub
imul
lods
sbb
xor
data16
aas
push
je
or
lock
add
push
les
fnclex
push
rclb
xchg
cmpsb
xor
adc
enter
pop
mov
into
mov
xchg
aam
xchg
cmp
les
out
xchg
lcall
mov
lds
aas
clc
xchg
sbb
roll
repz
sbb
jae
jmp
mov
rcrl
push
add
shl
cmpb
inc
fnstcw
dec
pop
pop
stc
adc
movsl
sub
shll
mov
or
dec
fistpl
loop
lock
push
out
pop
dec
dec
fimuls
xchg
xchg
mov
jp
lret
jp
pop
xor
pop
mov
push
loop
mov
push
and
xor
fidivl
or
into
push
push
es
out
mov
gs
enter
movsl
imul
jge
inc
out
mov
pop
mov
or
imul
sub
nop
mov
dec
test
jmp
mov
xchg
fnstsw
inc
int
push
test
mov
push
addl
and
scas
out
xchg
enter
dec
inc
mov
xchg
xor
aaa
sbb
popf
xchg
jbe
jbe
jno
insb
sbb
jg
and
je
inc
inc
jge
out
lea
push
hlt
insb
std
insb
dec
add
lcall
mov
mov
hlt
jno
cmp
cmp
out
sbb
jg
xchg
push
xor
sub
mov
inc
mov
push
sub
jb
pop
iret
inc
mov
xor
insb
pop
rcll
orb
pop
rorl
pusha
push
in
mov
lret
jmp
jb
repz
hlt
cs
cmpsl
mov
and
cli
es
mov
inc
xor
mov
aaa
mov
fstl
jmp
repnz
pop
sahf
test
or
sbb
loopne
scas
pop
jne
mov
xchg
test
imul
aad
in
xor
mov
inc
adc
mov
pop
dec
xlat
imul
mov
pop
push
xchg
sbb
cmp
jmp
cmp
adc
sub
out
out
in
sub
cmp
insb
mov
push
and
jge
aas
loopne
shll
mov
fmuls
ss
movsb
hlt
sti
fmuls
inc
les
into
xchg
sahf
cmpsb
mov
leave
fbld
aas
jne
sub
xor
lret
xchg
push
xchg
cmp
imul
jnp
push
mov
ret
push
inc
sahf
int
xor
pop
mov
lods
jne
inc
and
sub
cmp
pop
sbb
repnz
jae
push
inc
gs
icebp
mov
stc
neg
sbb
pop
jo
lcall
add
xchg
mov
faddl
fnstcw
out
push
in
adc
cltd
mov
incb
fistpll
jp
jae
pop
adc
int3
dec
mov
dec
mov
outsb
neg
sub
cmp
push
and
cmpl
or
sub
add
adc
or
or
adc
adc
inc
mov
in
xchg
lods
cmc
lea
xor
inc
cs
pop
or
sub
nop
and
pop
mov
sub
inc
adc
in
iret
mov
cmp
hlt
sti
int
shll
daa
dec
loopne
cmpsb
je
mov
scas
neg
addr16
dec
int3
loopne
add
or
jnp
lock
mov
es
cmp
cmp
std
aas
pusha
adc
cmpsb
mov
sub
nop
insl
cmc
jl
xlat
push
fnstenv
stc
dec
push
mov
xor
pop
and
mov
int
xchg
negl
pop
add
bound
mov
dec
clc
mov
test
repnz
sbb
push
stos
popf
inc
out
insl
pop
test
nop
cli
cmp
aad
pop
daa
mov
dec
pand
add
xchg
lock
mov
je
lahf
scas
or
in
cmp
lret
notl
cmp
orl
pop
lds
pop
arpl
cld
dec
or
sar
cmp
mov
xchg
insb
inc
negl
jae
aad
and
sbb
lea
loope
lahf
dec
xchg
int
negl
pop
pop
jns
dec
fcmovu
repnz
dec
mov
mov
sti
dec
jb
xchg
cld
lcall
lds
add
loope
dec
ret
xchg
sub
into
cvtdq2ps
insb
adc
std
cltd
fisttpll
sarl
jge
test
mov
in
icebp
adc
insl
lods
mov
movsl
out
popa
fisttpl
aaa
add
daa
cs
into
dec
out
add
arpl
pop
and
fwait
fwait
jns
sub
mov
push
cmp
mov
dec
dec
hlt
xchg
or
adc
jmp
pop
popa
fwait
scas
dec
adc
push
pop
sti
dec
adc
adc
cmpsl
mov
or
cmc
lret
sub
sbb
sbb
in
jg
insb
xchg
idivb
inc
das
test
lea
lret
jns
push
test
dec
lock
bound
fcmovb
pop
lahf
jno
cwtl
ds
mov
inc
cmp
gs
jno
or
outsb
jns
push
jmp
cld
push
rcr
mov
scas
loope
mov
sub
pop
loope
ja
or
fdivs
push
stos
sbb
xor
fcmovbe
adc
stos
xlat
pop
cli
roll
sbb
out
test
push
sti
sub
sbb
jns
adc
fsubrp
jbe
daa
fildl
bswap
adc
imul
pushf
cltd
xlat
cmp
cmp
dec
dec
addr16
or
jecxz
mov
movsl
adc
popf
jb
jne
aad
jl
stos
daa
sahf
movsb
sub
or
ret
cmp
lahf
js
jp
jne
out
mov
loopne
push
sbb
fldl
adc
xchg
jo
insb
leave
js
es
idivb
fs
cmp
out
mov
cmp
xchg
test
adcb
nop
cmp
jp
sub
into
and
mov
lds
or
pop
sub
xor
js
insb
inc
das
push
outsb
jne
inc
sbb
push
test
adc
aam
in
jo
jae
jecxz
shlb
insl
inc
jle
mov
pop
test
sub
jle
xchg
out
cmp
ja
cld
movsb
shrl
sub
pop
push
xchg
rolb
and
and
icebp
ret
xchg
in
mov
int
lds
xor
push
pusha
stos
pop
adcl
leave
setl
mov
andl
jno
push
push
push
jno
mov
fsubl
xchg
mov
adc
xor
and
or
lods
mov
jp
pushf
sahf
mov
arpl
ljmp
cmp
xchg
cmp
pop
pop
adc
ljmp
addr16
data16
mov
inc
push
or
inc
sarb
mov
pop
jae
adc
shl
jecxz
lcall
pop
mov
pop
fnstenv
xchg
jb
push
lods
loope
push
out
lods
lcall
xor
or
mov
mov
sarl
xor
add
push
in
das
mov
adc
inc
pushf
sahf
stc
adc
lock
cmp
rorl
mov
in
dec
sbb
out
mov
aad
scas
test
aas
and
lds
xor
mov
and
push
lahf
pop
addr16
outsl
sub
pushf
aad
sbbl
mov
adc
fmuls
movsl
and
sarb
imul
xchg
cmp
lcall
stos
sahf
sbb
push
lock
and
or
pop
mov
std
mov
loopne
fisttpll
xor
adc
les
in
push
mov
jnp
gs
pop
jecxz
lret
inc
rol
and
loope
sarl
daa
cmc
jns
sti
repnz
xchg
xchg
add
xchg
xchg
pop
mov
or
pop
inc
bound
insl
push
inc
lcall
ljmp
xchg
and
and
push
lods
cmpsb
les
into
sahf
jnp
adc
inc
in
inc
hlt
pop
add
mov
mov
out
movsl
jns
into
inc
pop
scas
jbe
dec
sahf
add
bound
lds
daa
fists
cmpsl
fsubrl
mov
mov
mov
inc
pusha
loope
inc
shl
std
ret
out
xchg
cmc
jne
xchg
in
addb
in
lret
or
int3
lcall
fiadds
rorl
xor
add
sbb
and
jno
loope
notl
jecxz
jmp
icebp
and
mov
push
scas
sbb
push
adc
cld
lds
mov
add
test
test
ret
add
adc
mov
mov
sahf
pop
pop
add
int3
cli
js
ret
int3
inc
cmp
jecxz,pn
push
or
fbld
loopne
dec
pop
idivl
fwait
or
jp
and
cld
fstp
dec
mov
js
jae
fcom
leave
cmp
lahf
mov
aaa
xor
mov
or
shlb
out
ja
xchg
jo
fwait
xor
inc
dec
cmp
mov
mov
push
and
pop
xor
fcompl
das
jno
sbb
xor
mov
movsl
xor
dec
dec
dec
cmpsb
or
inc
ss
cmp
fmull
clc
into
fcmovb
daa
xor
lods
xchg
and
fisubrl
inc
inc
fldcw
xchg
or
dec
ljmp
jmp
jae
cli
int3
popa
mov
stos
xchg
or
lods
mov
sub
xchg
jb
inc
fwait
out
in
inc
in
mov
or
push
icebp
gs
inc
jne
cli
stos
inc
int
sub
std
xor
out
mov
adc
sub
pushf
inc
fistps
lret
dec
cwtl
cli
cmpsl
or
dec
pushf
jle
subb
mov
xlat
ret
jns
inc
ljmp
pop
mov
jne
sub
out
scas
cmp
mov
out
adc
les
cmp
mov
outsb
test
dec
mov
test
xchg
sarb
jg
dec
push
cmp
fnstsw
push
outsl
lods
push
jge
mov
lock
icebp
ret
mov
mov
rcrl
sbb
add
repz
pop
aaa
repz
xchg
ljmp
out
test
mov
pop
cmp
lock
inc
push
mov
mov
push
mov
jnp
outsb
push
xchg
shrl
jmp
gs
and
push
icebp
fs
repz
xor
cmp
cmp
xchg
xchg
rol
add
inc
cs
cmp
sbb
jns
jg
das
aam
cs
mov
shll
iret
push
lea
jp
jmp
pop
cld
lret
sti
push
mov
sti
int3
xor
test
testl
dec
cli
mov
push
cld
les
push
repnz
int
mov
je
inc
xchg
ret
mov
imul
xlat
dec
into
sbb
ficoml
pop
adc
sub
stos
push
push
insl
jmp
jne
in
ficoms
xor
icebp
std
in
pop
aam
mov
jge
cmp
mov
ret
addb
in
jns
or
mov
out
jmp
enter
sbb
adc
mov
xorb
xor
es
inc
dec
push
repnz
aad
mov
and
clc
add
jle
cli
stc
test
daa
pop
sbb
nop
and
sahf
rclb
bound
lods
jns
xchg
adc
xchg
inc
mov
fadds
sub
pop
fs
test
adc
in
in
imulb
sbb
icebp
cld
fisubrl
in
loop
dec
gs
pushf
xchg
ret
mov
icebp
add
ds
out
push
es
pop
mov
or
lret
jb
mov
ror
jecxz
mov
push
adc
insb
and
por
push
fbstp
dec
out
fistps
sti
xorl
mov
add
mov
lods
adc
ret
cmp
mov
fadds
and
or
push
mov
cld
outsl
iret
xchg
clc
and
lods
xchg
push
dec
inc
or
lea
ret
movsl
pop
lds
ljmp
in
daa
into
sbb
mov
mov
idivb
push
dec
mov
add
dec
sbb
adc
icebp
cmp
js
test
mov
movsl
cmp
cmp
mov
jb
rolb
push
and
ljmp
xchg
imul
push
xchg
loopne
push
in
out
andl
inc
jmp
std
popa
mov
inc
and
mov
mov
cmp
fsubl
icebp
lods
scas
or
daa
out
scas
outsl
insl
enter
cmc
cltd
movsl
xor
dec
fnstcw
je
ss
in
stos
out
adc
pop
sbb
loopne
jmp
jb
cmpsl
pop
imul
or
and
out
mov
fsubrs
and
divb
adc
jmp
and
aas
pop
lret
or
imul
inc
insb
mov
mov
xchg
pop
mov
ret
mov
lods
sbb
aam
mov
out
mov
insl
icebp
inc
inc
iret
jp
int
out
insl
dec
adc
xlat
outsb
mov
in
or
test
lret
in
fidivs
shlb
dec
lods
lods
insb
icebp
daa
popf
sub
mov
push
fninit
lahf
mov
and
divl
lret
lock
mov
fcmovbe
shlb
dec
in
pop
int
lock
adc
lea
outsl
pushf
mov
pop
shr
cmpsl
push
pusha
ret
mov
jmp
push
leave
push
bound
cltd
jmp
inc
hlt
add
hlt
mov
mov
cmp
xor
js
hlt
xchg
dec
in
adc
imul
jb
ja
ja
mov
push
sub
adc
fdivl
cmp
rcrb
addr16
inc
push
sub
outsb
add
pop
jle
scas
pop
and
aas
cmp
jecxz
push
mov
mov
inc
out
mov
sbb
iret
sarb
adc
adc
jno
daa
outsl
ret
cmc
cltd
hlt
sub
mov
mov
lcall
push
les
xchg
ss
xor
subl
sub
ss
int
aad
test
rorb
sub
ljmp
test
or
lds
je
out
add
ljmp
push
mov
shrl
test
xchg
loop
loopne
in
lds
fimull
pushf
push
arpl
mul
shl
jle
sbb
pop
xor
test
xchg
xchg
push
xchg
sbb
mov
mov
pop
xchg
ficomps
jo
imul
xor
movsl
out
insb
or
mov
test
add
cmp
add
cmp
js
out
arpl
and
xor
les
jnp
ljmp
inc
icebp
lods
mov
es
jb,pn
lret
sbb
mov
dec
sbb
shl
icebp
push
jmp
ja
decb
out
pop
xor
mov
or
sub
dec
pop
jmp
insl
orb
fnstcw
cli
push
movsl
xor
cmp
jmp
rol
clc
adc
push
push
daa
dec
pop
rcl
js
fistps
dec
mov
into
dec
sub
test
js
cs
jmp
sub
jmp
lret
adc
movsb
cmc
jne
jae
jg
cltd
call
inc
cmpsl
jo
pop
mov
push
scas
dec
sub
sbb
pop
cli
cltd
sbb
push
mov
mov
cmpsb
dec
out
fisubl
aas
out
test
jl
loope
aas
mov
movsl
pop
lock
adc
mov
scas
jmp
inc
jne
roll
and
xlat
push
sahf
mull
loope
mov
sub
dec
popf
adc
rcrb
insl
imul
push
jb
xchg
xor
mov
out
cmp
fistpll
mov
inc
jmp
lods
cmp
fidivrs
dec
cmp
cmp
push
js
push
mov
fsub
fisubl
stos
outsl
mov
inc
aam
pop
push
cmp
shrl
cld
mov
lcall
mov
rolb
push
bound
nop
push
mov
xchg
scas
sbb
xchg
sub
or
insb
push
pop
mov
dec
push
sub
inc
addr16
push
xchg
ds
cld
and
add
xchg
dec
ficomps
dec
push
push
mov
mov
sarb
xor
push
xchg
orb
sbb
push
add
mov
into
and
aam
or
in
int
into
aaa
or
ss
jecxz
adc
es
sub
xor
inc
and
nop
cmc
bound
jmp
cmpsl
fistpl
jecxz,pn
mov
sahf
adc
jne
cmp
hlt
aad
call
cmp
mov
ds
and
cld
idivb
scas
mov
pop
call
inc
push
shlb
sbb
sub
out
mov
push
mov
data16
sbb
push
ret
fbstp
mov
jmp
out
loope
or
xchg
jns
mov
sbb
cmp
clc
inc
aaa
fiadds
xchg
fwait
cmp
jae
jecxz
sub
inc
xor
das
jmp
inc
insl
jecxz
loop
mov
adc
and
movsl
and
into
popw
adc
fistpl
cld
fcoml
adc
add
and
aas
adc
sub
push
scas
push
testb
fabs
mov
lret
fimuls
js
adc
cmp
xchg
pop
mov
outsl
out
and
add
jnp
xchg
shrb
dec
cs
lods
cli
int3
mov
ds
and
je
and
mov
mov
loope
add
loop
xchg
loop
sbb
cmp
add
leave
fcoms
ftst
mov
lea
pushf
add
ja
mov
orl
sbb
add
out
xchg
adc
out
addr16
leave
aaa
scas
sbb
pop
jle
cmpsb
mov
xchg
lcall
fidivrs
xlat
clc
rol
xor
aaa
pop
imul
push
inc
mov
add
pushf
jle
shlb
insb
dec
or
inc
inc
mov
pop
movsb
and
mov
jp
ror
jno
les
or
xchg
fwait
les
test
mov
aad
movsl
push
xchg
les
push
lods
sub
stc
rcll
scas
aam
dec
out
je
sub
jmp
inc
testl
mov
les
dec
sti
ret
dec
mov
pushf
xchg
out
dec
dec
ds
adc
cmp
gs
and
divb
and
fistl
adc
out
inc
or
stos
adc
rcl
mov
xor
push
jge
or
outsb
imul
or
push
pop
es
mov
fsubrp
inc
out
xchg
xchg
es
ds
mov
push
shl
xchg
cmp
add
xchg
insb
jae
mov
repz
fsubl
push
adc
dec
shl
xchg
and
fisubs
or
push
add
push
aaa
inc
fsubs
cmp
scas
inc
pop
in
fsts
addr16
mov
cmp
lahf
mov
cmc
cmp
push
add
loope
sti
ss
push
fnstsw
pop
icebp
jo
mov
xchg
mov
add
push
jne
mov
and
and
in
jmp
jne
loope
lcall
shll
dec
dec
mov
lahf
ret
mov
jb,pn
dec
sti
sbb
sbb
aaa
and
fiaddl
pop
push
flds
mov
mov
push
and
sbb
inc
cmp
add
stc
fcomip
and
pop
jo
dec
insl
dec
imul
and
in
mov
stos
pop
or
add
add
and
negb
or
jno
fsts
cmc
cmp
sbb
gs
lcall
cmp
jg
mov
into
push
xor
pop
clc
pop
out
or
dec
arpl
or
iret
shr
pop
mov
dec
loope
popf
test
push
xchg
dec
shll
xlat
jl
pusha
out
add
mov
icebp
xor
pop
in
es
dec
mov
and
add
xor
jo
cmp
hlt
ds
sti
hlt
rcl
int3
into
lds
mov
cmpsl
cld
xor
xor
xchg
int3
test
mov
jno
sub
imul
sbbl
sub
scas
jmp
clc
cmpsb
jno
pop
mov
lret
inc
mov
in
call
inc
xor
shl
aad
lret
pusha
lock
pop
call
popf
dec
jl
push
mov
clc
out
xor
jg
aaa
adc
dec
mov
inc
jp
adc
pop
sub
jg
jbe
pop
fs
lcall
add
mov
sbb
mov
out
xor
cld
dec
testl
aaa
rcr
shr
int
push
js
incl
jnp
jmp
push
add
dec
shrl
mov
cmc
sbb
mov
cmp
xchg
stos
cwtl
js
or
mov
jmp
imul
mov
ja
shr
in
jns
pop
aaa
adc
popf
xor
das
movsb
inc
rol
or
ret
pop
sub
fwait
call
shlb
fsub
loopne
cs
leave
test
mov
orl
repz
ljmp
aad
mov
or
stos
dec
dec
scas
sbb
dec
rcrl
cmp
sbb
gs
pop
clc
sbb
stos
std
lock
in
or
dec
or
orl
add
adc
int
jae
imul
mov
mov
shll
testl
dec
nop
cmp
imul
or
mov
faddl
inc
leave
xchg
sbb
bnd
jno
pop
test
pop
jnp
cmp
int
cmp
jg
into
loope
inc
call
mov
add
shll
fimuls
cs
mov
pushf
push
xchg
int3
int3
lahf
ret
mov
inc
mov
bound
xor
lea
lcall
movsb
loopne
xchg
clc
xchg
insb
into
mov
or
adc
enter
enter
repz
movsl
repz
nop
int
dec
jnp
xor
scas
push
add
pop
dec
je
imul
negb
movsl
call
roll
clc
stos
bnd
sbb
and
xchg
jns
loopne
insl
pop
sti
jae
sbb
sbb
inc
lods
insl
mov
clc
jmp
xchg
mov
sbb
or
outsl
lcall
push
mov
scas
fldenv
popa
in
int3
sahf
jg
rorb
add
bound
js
inc
push
xchg
inc
add
xchg
vcvtdq2pd
push
gs
negb
mov
lods
jb
push
add
jae
rclb
xchg
gs
push
movsl
out
cmp
pop
icebp
xor
xchg
mov
push
xchg
dec
or
add
xchg
scas
notb
pop
and
movsl
enter
ret
sub
mul
jp
imul
xchg
xchg
out
cmp
pushf
enter
push
lods
out
cmc
xor
or
stos
cmp
cmp
pop
insb
adc
sahf
pop
adc
sti
es
movsl
inc
jae
push
inc
sub
pop
insb
cs
jge
ss
xlat
sbbl
mov
sub
mov
fmuls
imul
pop
mov
sbb
aad
nop
or
je
std
push
sti
dec
fsub
loop
xchg
ds
es
subb
ficomps
mov
es
mov
jae
xchg
sbbb
dec
cld
daa
js
cmpsb
cld
xor
lret
in
add
and
adc
shll
daa
aas
fists
or
pop
cs
sub
je
add
dec
test
inc
popf
arpl
jno
mov
mov
mov
mov
push
in
pop
sub
mov
xchg
cwtl
sbb
mov
mov
in
jae
xor
sbb
scas
inc
adc
cmp
or
and
aaa
mov
mov
shl
add
push
pushf
push
pop
fsubrs
sbb
sub
data16
or
or
dec
stc
pop
xor
and
inc
push
jg
sbb
lcall
add
icebp
call
lock
hlt
fs
adc
sbb
mov
lods
out
jno
subl
cmpsb
mov
cmp
sbb
daa
imul
stos
mov
imul
aad
dec
pop
enter
loope
mov
stos
sub
lds
sarl
pushf
sti
ss
push
pop
dec
pop
jbe
xor
in
in
sti
popf
jno
pop
pop
push
data16
pop
adc
stc
out
jecxz
loopne
fcompl
jp
sub
movsb
cmpsb
sbb
fisubs
cmp
lret
mov
incl
pushf
mov
mov
hlt
int
pop
jmp
add
xlat
push
ss
ret
adc
cwtl
pop
and
call
jns
xchg
rcl
push
xchg
mov
sub
pop
adc
ljmp
sub
rcr
cmp
pop
push
lods
mov
mov
ss
sub
cmc
call
std
mov
mov
jmp
je
pop
add
xorb
fst
xor
xchg
and
add
mov
nop
sti
fimuls
stos
push
shr
jg
jl
jae
fcoms
dec
dec
dec
cli
pop
not
rclb
jmp
xor
adc
cmp
mov
inc
sbb
in
jbe
dec
mov
lcall
adc
enter
out
cmp
jmp
jg
test
call
cmpsl
sub
in
sub
push
pop
or
subb
nop
push
push
mov
cmpsb
jno
cmp
jnp
pop
stos
xor
stc
scas
popl
xor
jno
inc
clc
mov
add
in
arpl
lret
jae
inc
mov
cs
xor
test
cmp
pop
cmp
lea
pushf
pop
cmp
push
pop
xchg
lcall
inc
nop
test
or
mov
lock
and
jbe
add
sbbb
jno
sub
mov
inc
inc
jo,pn
ljmp
mov
inc
inc
shrb
dec
enter
push
jp
mov
pop
dec
mov
fisubl
rcrb
fidivs
push
or
adc
lret
and
sti
pop
adc
jg
xchg
stos
out
into
test
leave
je
inc
fiadds
ror
cmp
jle
lcall
push
out
imull
push
mov
cmpsl
xor
cmp
xor
mov
lcall
inc
cmp
mov
dec
out
mov
jle
inc
push
int
mov
adc
les
insb
pop
add
cmp
stos
sub
lock
pop
invd
pop
les
mov
mov
and
mov
push
add
aad
mov
jg
push
pop
sbb
ret
xchg
mov
pop
stos
rcrb
aam
into
dec
mov
movsb
pop
sub
out
add
jg
fstpt
test
pop
sub
or
adcl
in
icebp
lea
cmpl
ja
fisttpl
add
dec
inc
jecxz
dec
jecxz
mov
mov
lcall
and
cmp
popf
sub
sub
int3
or
outsb
int3
push
lcall
push
sub
cs
cmpsl
ljmp
cmp
popa
out
jo
cwtl
cld
pop
ds
lcall
sbb
dec
or
hlt
aam
cmpsb
lds
andl
and
push
cld
mov
or
dec
outsb
xor
aaa
cld
js
jp
pop
push
mov
jns
in
fwait
jne
and
mov
adc
mov
push
aas
test
mov
and
dec
mov
jmp
addr16
aam
lret
mov
cmpsb
aam
jge
dec
lea
xchg
mov
cmp
pushf
lret
scas
push
sub
pop
mov
sub
inc
sbb
adcl
scas
into
cmpl
and
jne
hlt
mov
daa
bswap
dec
xchg
push
pop
shll
stc
sahf
or
lahf
int
sbb
bound
jbe
cmp
push
hlt
call
andb
nop
jmp
and
dec
push
and
jae
mov
jns
popa
mov
pushf
jns
add
push
cmp
adc
push
or
jg
pop
lahf
or
dec
call
xor
jmp
push
mov
ds
cwtl
rol
jg
lods
int
cmc
stmxcsr
cli
bound
pop
xorl
mov
cmp
and
jb
shll
icebp
repz
sarl
mov
mov
pop
mov
xor
in
push
lea
add
sub
rcl
mov
aaa
inc
mov
jecxz
std
push
mov
sub
lea
mov
repz
mov
movsb
loopne
std
out
or
ja
mov
in
popf
scas
push
jmp
inc
xor
sub
negb
pop
sub
mov
popf
out
popf
or
add
mov
cmp
jmp
clc
pop
js
insl
inc
int
in
sahf
ret
pop
aaa
dec
and
fsubrl
xor
mov
push
out
test
push
jbe
and
test
push
mov
pusha
lock
je
jg
sahf
mov
inc
sbb
and
jmp
pop
or
push
ds
pop
mov
stc
pop
xchg
sub
rol
loopne
mov
lods
cmp
test
enter
xor
repnz
jg
adc
pop
mov
mov
xchg
cltd
insl
cmp
scas
ret
push
scas
data16
inc
mov
xchg
push
sbb
jmp
cli
fadds
xor
inc
jmp
in
addb
jnp
sub
repnz
in
sbb
inc
xchg
ds
mov
pop
cmp
cmp
jno
je
adc
sbb
or
xorl
imul
repnz
lock
std
push
or
lret
sti
inc
lock
test
xchg
aaa
adc
xchg
or
push
add
test
movsb
mov
loope
dec
lods
jle
cld
stc
jo
add
fcmovnb
ja
imul
xchg
jl
adc
mov
dec
stc
shlb
pushw
jl
inc
cmp
xchg
out
fisubrs
add
or
push
push
add
js
fs
cmp
inc
hlt
mov
pop
or
negl
addr16
push
cmp
test
xacquire
stc
fdiv
fmulp
rclb
xchg
test
ret
xor
push
stc
aam
mov
pop
imul
sub
idiv
jle
adc
or
lods
inc
testb
jmp
call
or
jo
out
fidivs
cmpb
push
fsubl
xlat
mov
enter
dec
pop
int3
mov
pop
or
lods
repz
ljmp
push
imull
je
sub
pushf
test
cmc
mov
xchg
in
lock
out
data16
mov
inc
push
pop
test
lods
sub
je
xor
push
lcall
mov
test
sbb
div
sbb
mov
cwtl
insl
mov
dec
or
dec
jmp
push
scas
jl
mov
fidivl
xorl
adc
xlat
push
ds
ret
call
push
mov
xor
add
imul
cmp
jnp
mov
xchg
dec
jno
es
roll
roll
xor
pop
mov
xor
add
lret
sub
pushf
or
cli
jo
sbb
test
xor
fstl
leave
loopne
repnz
stos
stc
shll
in
pop
jb
stc
mov
lret
add
jno
jecxz
ds
sbb
sub
mov
xor
sar
ja
jns
mov
or
xchg
pop
into
adc
pop
repnz
repz
decl
pop
cld
imul
lock
xchg
ret
in
loopne
scas
jp
mov
ja
xor
push
or
shrb
lahf
stc
je
pop
inc
in
mov
mov
call
lahf
or
lds
out
add
notb
mov
xor
sub
popa
push
in
int
push
js
mov
xchg
sbb
dec
push
sahf
nop
iret
mov
stc
inc
repnz
in
add
clc
cmp
xchg
nop
ss
xor
in
cmp
cwtl
adc
dec
outsl
cltd
adc
xchg
push
shr
push
aaa
pop
and
lock
sti
mov
mov
lahf
push
outsb
jbe
cmp
jp
subb
mov
inc
insl
adc
das
cmpsl
aas
mov
loop
sub
push
jns
xor
add
mov
aaa
mov
jbe
leave
gs
mov
and
cmc
cli
push
and
jno
fwait
imul
insl
cs
mov
enter
and
inc
push
fwait
mov
aad
shlb
lea
adc
mov
and
add
mov
mov
cltd
sub
dec
inc
xchg
shr
sub
nop
fistpll
push
add
and
jle
lret
inc
push
inc
cmp
in
and
sar
cmp
push
ja
jmp
pushf
push
xor
je
in
adc
mov
or
cmp
ja
mov
pop
pop
and
xlat
push
cmp
mov
jae
inc
repz
or
push
mov
in
or
jne
in
leave
int
mov
lret
rcll
push
insb
xlat
ret
adc
sbb
sahf
pusha
fcomip
mov
mov
ret
loope
into
dec
adc
nop
or
idivb
rcrb
insb
cmp
mov
cmp
in
add
pop
adc
aad
fmuls
pop
inc
stc
clc
push
daa
int
jbe
sbb
pop
cmpb
dec
insb
scas
jbe
aaa
pop
cltd
outsl
or
xor
push
mov
mov
add
push
mov
jae
jge
sbbb
lret
sbb
sub
mov
std
inc
scas
cwtl
pop
mov
cmpl
mov
mov
in
push
pop
inc
cmp
push
clc
cmp
repnz
ja
aad
stos
pusha
and
scas
inc
cmp
insb
out
xchg
decb
jae
orl
test
loop
xor
je
js
aaa
jnp
fnstenv
jne
push
mov
ds
ljmp
aaa
mov
cwtl
aaa
pop
psubq
in
xchg
cmpsb
pop
fisttpll
stc
lods
and
popl
xchg
push
dec
andl
mov
shl
dec
xchg
aaa
inc
push
shl
cmp
jle
scas
int3
arpl
sti
jae
inc
inc
repz
rep
je
cli
test
fisubrs
sub
add
pushf
mov
cmp
lods
mov
add
sub
xor
or
es
inc
pop
push
addr16
cmpsl
cmp
lret
add
lea
aas
scas
rolb
sti
xchg
pop
ss
fwait
add
cmpb
in
nop
faddl
cld
sub
int
or
push
mov
scas
cmpsl
push
adc
pop
lds
je
inc
and
inc
jne
xor
or
xchg
cs
lret
push
add
jbe
jb
shr
shll
and
lods
fdivrl
mov
ds
mov
xchg
outsb
mov
adc
mov
sbb
cs
loope
or
jge
inc
lods
dec
push
dec
and
xor
or
mov
cli
pop
dec
jnp
push
das
lock
out
push
fs
test
jl
pop
mov
cmpsb
xchg
sub
fcmovnbe
and
fnstenv
mov
and
jo
add
stos
in
sub
xor
cs
push
icebp
add
sub
insl
pushf
movsl
cmp
std
push
and
sub
push
daa
pop
jns
lds
aad
mov
jmp
loope
add
not
jmp
loopne
xor
pop
loop
les
dec
cwtl
out
orb
shll
pop
and
cli
in
call
sbb
fsubrs
addr16
sub
test
movsb
adc
fldl
add
jnp
inc
jle
pop
lock
xchg
insb
mov
and
outsl
mov
push
in
out
pusha
fistps
adc
fcmovb
sbb
fildll
inc
in
scas
mov
out
mov
or
mov
cmp
mov
fldcw
xchg
push
addr16
in
push
cld
cmp
adc
ret
dec
ss
flds
mov
into
popa
cmpl
fcmovnbe
jp
jb
pop
dec
sbb
testb
cmp
cmpsb
and
xchg
cwtl
lret
out
pop
cmpsb
adc
shl
retw
pop
popf
or
cmp
xchg
sbbb
cmp
addr16
repz
xor
repnz
pushl
jns
idivb
adc
dec
cmc
scas
decl
lahf
cld
pop
enter
int3
ljmp
daa
cs
movsl
adc
arpl
sub
adc
adc
mov
mov
pmaxsw
mov
pop
mov
adc
hlt
int
xchg
es
pop
jp
add
dec
cmpsl
outsb
out
pop
loop
fisttpll
pushl
xchg
mov
push
in
dec
repnz
dec
in
sahf
loopne
popf
adc
mov
and
push
je
mov
cmp
xor
jl
ds
shl
movsb
int
shl
inc
outsb
jmp
cmp
adc
jmp
xor
mulb
cli
xchg
repz
xchg
inc
jecxz
ljmp
lea
and
popa
repnz
sub
ss
xchg
loop
iret
xchg
jno
mov
mov
add
ds
add
pop
int
and
sub
sti
xor
scas
adc
cwtl
mov
cmpsb
fimuls
mov
and
xor
push
push
cli
pop
sbb
sub
cmc
cmpsb
pop
cmp
push
push
jl
pop
push
mov
jbe
add
xchg
mov
or
dec
fsubrl
mov
pop
jge
andl
insl
insl
stc
sbb
mov
mov
stc
inc
sbb
cli
pushf
sub
mov
testb
hlt
pushl
inc
aas
ds
sbb
mov
aaa
sub
xchg
icebp
lcall
xlat
mov
adc
jge
jb
push
add
stos
inc
mov
lds
xchg
ret
fistpl
xchg
call
insb
das
scas
cli
ds
adc
dec
mov
and
int3
inc
or
repnz
test
mov
or
cli
push
es
mov
add
pop
incb
repz
sti
push
call
popa
xchg
mov
pop
lods
sub
ljmp
inc
ret
into
inc
pusha
push
shr
mov
stos
aam
push
scas
xor
cmp
dec
xlat
sbb
sbb
dec
into
lods
in
add
sbb
cmc
das
pop
sbb
inc
incl
in
mov
inc
cli
pop
shrl
nop
mov
jnp
test
fsubs
das
adc
cltd
hlt
ret
pop
cmpl
mov
pop
arpl
cld
inc
xchg
inc
aas
in
imul
mov
xor
stc
js
jle
dec
or
popf
push
adc
sbb
pop
daa
sub
mov
push
stos
pop
cmpsl
cld
jo
loope
mov
inc
outsl
xchg
xor
cs
or
jp
xor
mov
xor
mov
mov
mov
aam
icebp
leave
in
inc
ja
cli
xchg
daa
movsb
pop
push
adc
test
pop
das
cld
ljmp
cld
addr16
pop
jg
out
icebp
and
mov
in
xor
imul
inc
mov
inc
push
adcl
jnp
dec
leave
jp
icebp
test
cltd
lcall
fwait
popf
shrb
std
ret
das
sbb
jo
stc
jns
jecxz
push
mov
mov
ret
xchg
jmp
inc
xchg
cmp
lcall
jns
mov
xchg
stos
addr16
inc
lcall
cmp
xchg
inc
sahf
sbb
mov
xchg
cmp
repnz
iret
repz
jae
cmpsl
ret
jns
xchg
mov
and
sub
sub
mov
fisubl
xor
push
in
adc
adc
xchg
xchg
dec
sbbb
int
mov
mov
in
je
cmpsl
mov
in
cmpsb
jo
inc
in
dec
cmp
sbb
mov
daa
xchg
int
jne
insl
cmp
aas
or
fs
push
pop
cmpsb
add
push
cs
or
jne
fbld
sub
ljmp
dec
adc
sbb
mov
stos
mov
adc
pop
jnp
sbb
sub
popf
inc
add
and
into
push
hlt
jge
ljmp
push
xchg
add
scas
xchg
movl
stos
cmp
push
sbb
xor
icebp
in
pop
loop
mov
add
imull
xchg
outsb
lea
cmp
inc
lea
and
hlt
sbb
gs
xchg
je
dec
cmp
cltd
push
fcmovu
rcr
dec
jae
std
fcomps
cmp
insl
in
jns
in
test
enter
in
ds
add
pop
mov
leave
aas
mov
outsl
ret
push
iret
adc
push
fiaddl
mov
aam
aas
int3
mov
in
shrb
sub
xorps
sbb
loopne
pop
cmpsb
pop
mov
clc
and
data16
push
sub
daa
fisubl
fsts
jnp
or
cmp
stc
scas
push
fsub
jl
addr16
insl
fnstcw
stos
inc
jns
lret
sub
mov
jmp
les
mov
mov
push
shll
test
mov
or
lods
sbb
push
es
sbb
fwait
and
adc
test
dec
in
enter
popa
lahf
xchg
jb
or
out
sbb
aad
icebp
jle
fidivs
test
iret
leave
cmpsl
aad
jmp
jmp
pop
xor
or
mov
inc
jecxz
in
insb
jnp
pusha
js
data16
mov
outsb
jne
repz
lea
aad
add
xchg
in
mov
and
jne
movsl
das
and
cs
cmc
out
movb
cmp
sub
push
fstpt
cli
jp
fbstp
cmp
pop
enter
mov
int
cmpsb
and
xchg
jl
xchg
xchg
in
or
cmpsb
sbb
iret
mov
sub
xchg
jno
cmp
add
mov
inc
mov
pusha
data16
add
divb
icebp
pop
jmp
inc
out
mov
jbe
in
sbb
into
pop
fdivp
mov
push
sti
mov
popf
shll
fsubl
mov
mov
aad
dec
dec
test
in
popf
add
fs
repnz
sbb
loop
cwtl
stos
rep
nop
sti
out
mov
dec
mov
cmp
sbb
mov
xor
adc
inc
mov
out
mov
jnp
fcoml
fldenv
sub
xchg
jne
icebp
pop
xchg
sbb
shlb
inc
jns
add
dec
cld
add
fistpl
lods
adc
in
insl
je
pop
lret
aam
push
fistl
adcl
sbb
scas
inc
shrl
xorl
mov
cmp
sbb
mov
add
pop
mov
xchg
sahf
stos
in
mov
nop
cs
cmp
fidivrs
rcrb
lea
scas
xchg
test
mov
adc
popa
inc
jmp
push
cld
mov
mov
push
in
push
dec
ret
xor
jle
mov
loop
imul
push
cmpsl
inc
cmpsb
cwtl
aad
adc
mov
mov
shll
in
inc
mov
insb
in
clc
add
fiadds
or
scas
xchg
fildl
xchg
or
mov
and
mov
sub
mov
push
mov
sub
cmp
idiv
in
or
aaa
add
pusha
out
pop
push
mov
dec
mov
es
mov
orb
in
data16
jae
jl
in
lds
inc
lret
call
xor
data16
fs
ss
in
mov
maxps
es
xchg
pop
and
cmp
xchg
jp
in
jle
mov
pop
decb
sahf
in
js
xchg
xor
cld
addl
lret
inc
call
addb
js
arpl
sahf
jns
or
or
gs
rolb
and
or
adc
or
js
add
mov
push
fnstsw
int
hlt
daa
ss
xchg
addr16
sbb
pushf
out
mov
xchg
arpl
or
rcll
cld
loope
dec
xchg
out
mov
mov
std
out
mov
cmpsl
inc
iret
cmpb
mov
cmp
dec
out
lret
fs
push
mov
cmp
inc
icebp
push
inc
and
xor
ss
sbb
sbb
mov
push
push
jbe
stc
in
int3
test
mov
jmp
jecxz
cmp
and
icebp
jne
push
push
adc
jo
movsb
pushf
gs
jecxz
mov
call
cmp
ret
es
cmp
decl
movsb
dec
aaa
sub
pop
cmp
jnp
shlb
ljmp
into
inc
jns
in
lahf
jle
les
addr16
mov
add
mov
dec
or
xorl
jmp
mov
xchg
and
scas
movsl
out
loop
lahf
dec
mov
push
clc
repz
insl
call
bound
xor
jo
jmp
int
test
sbb
xor
fildl
mov
into
pop
xor
mov
lcall
cmp
sbb
mov
addr16
mov
push
jecxz
cmp
decb
inc
jnp
sarl
inc
jl
sub
add
bound
scas
repz
dec
mov
or
mov
xchg
jg
std
ss
jo
jae
jns
jp
cli
int3
and
pop
and
mov
inc
lods
imul
outsl
xor
cwtl
push
enter
pop
add
mov
enter
push
add
jg
es
sub
cltd
aam
inc
xor
push
jp
xor
cmp
lods
imul
mov
loopne
mov
cli
hlt
jb
aad
mov
xchg
inc
int3
jne
fsubs
outsb
lock
popf
xor
sub
xchg
or
test
or
dec
bound
jb
or
lahf
into
les
scas
das
push
dec
xchg
pop
shlb
stos
out
movsb
xor
shrb
fldenv
pushf
and
out
jle
jbe
out
sbb
push
jge
into
adc
jmp
mov
mov
lret
or
xor
push
adcb
jecxz
add
cmp
mov
into
fwait
add
cmc
sbb
or
out
cmpxchg
ljmp
fbstp
sbb
insb
jnp
push
sbb
adc
fisttpll
stos
dec
pusha
enter
dec
jl
pop
xor
jecxz
andb
xchg
outsb
add
and
xor
enter
push
xor
scas
jae
add
out
std
pop
mov
out
mov
imul
xchg
or
mov
fwait
insl
add
adc
scas
loopne
clc
inc
mov
lret
scas
insl
movsb
imul
push
mov
ljmp
subb
jae
push
inc
fbstp
fadds
mov
jecxz
cwtl
dec
fld
lods
jle
or
sarl
adc
pop
clc
orl
push
lea
adc
lahf
pop
lcall
pop
and
repnz
jecxz
add
add
dec
call
mov
fwait
and
imul
or
push
or
cmp
xor
popf
es
test
add
sbb
cmp
dec
shl
aaa
xor
out
ljmp
aam
in
das
fdivrp
ror
lret
popa
pop
ficoml
mov
sub
pop
lcall
cmp
add
cmp
or
scas
xor
ljmp
cld
pop
ljmp
adc
push
mov
pop
test
cmp
fstp
or
ja
orb
inc
lods
or
fcmovnu
imul
xchg
xchg
and
imul
subb
sub
add
insb
std
popa
and
mov
rorl
lods
pop
inc
push
or
insl
jae
mov
xchg
jo
test
push
addb
sub
jecxz
push
inc
xchg
popa
scas
test
popf
lcall
push
mov
adc
lret
lcall
hlt
std
out
bswap
test
mov
sbb
mov
jo
ret
out
ret
or
out
fnstsw
add
mov
cld
lods
lds
in
push
mov
or
or
cmp
add
sub
pop
rcll
mov
inc
cmp
imul
xchg
add
mov
repz
or
andl
sbb
cmpl
imul
dec
test
fsubl
or
flds
hlt
repz
mov
lock
sbb
and
xor
repz
mov
shlb
orb
jge
dec
enter
inc
cmp
cmp
std
repnz
pop
out
int
aas
xchg
cmp
lret
sbb
adc
dec
es
pusha
jne
fcomi
fwait
ja
jg
jmp
jmp
inc
jno
jne
cmpsb
xor
loope
shl
xor
movzbl
pop
dec
out
enter
pop
ljmp
in
in
cmp
fcompl
outsl
or
push
dec
enter
add
add
pop
xchg
add
imul
pop
test
xor
jns
adc
fucomi
xchg
test
cld
test
sbb
fcmovb
cwtl
sub
je
add
icebp
xlat
int3
or
xchg
push
lock
mov
and
out
pop
negb
icebp
xchg
and
fdivrs
mov
inc
in
outsl
in
and
mov
pusha
rcrl
jne
pop
jmp
sbb
mov
mov
push
xchg
mov
or
inc
cltd
or
out
nop
fisubs
xor
outsb
outsl
sti
out
dec
push
loope
adc
xorb
insb
push
and
shrb
push
and
enter
andb
add
outsb
stos
and
sbb
es
xchg
dec
loopne
or
orl
stc
jne
mov
or
repnz
jecxz
adc
or
fsubl
out
jmp
pop
add
in
cmp
lret
repnz
xchg
mov
jl
xor
xchg
add
and
mov
movsl
call
cmc
pop
pop
sub
xor
dec
test
rorb
movsl
pop
shll
orb
xchg
std
shrb
icebp
jmp
daa
xchg
icebp
adc
pmuludq
out
or
cmp
mov
mov
inc
sahf
in
sbb
inc
xor
add
fmuls
fcoms
lock
movsb
sub
or
icebp
inc
das
into
cmc
cld
aad
xlat
fdivp
lahf
mov
in
bound
jmp
mov
mov
jl
fistl
popf
lahf
sbb
mov
pop
aaa
insb
add
sub
jne
jae
icebp
sub
and
xchg
mov
mov
enter
mov
lret
jmp
shlb
out
or
pop
sbb
scas
mov
sbb
sbb
popf
andl
adcl
movsl
dec
and
les
jno
das
and
in
push
mov
cltd
insl
aam
lret
adc
in
cwtl
mov
pop
ret
mov
std
pop
call
cltd
and
pop
sub
pop
jae
outsb
es
push
xor
mov
jbe
stos
or
push
jo
and
pop
outsl
pop
movb
xchg
mov
pusha
je
mov
enter
mov
pusha
imul
outsl
xchg
rcr
jle
sbb
or
xor
push
mov
push
fisubs
shrb
test
mov
ss
push
mov
fisttpll
ja
clc
pop
test
mov
clc
rclb
and
push
dec
shr
cmp
mov
rclb
xor
sbb
cmpsl
pop
addr16
mov
xchg
sarl
push
mov
add
sbb
out
ljmp
movsl
mov
jbe
bound
jns
add
or
jbe
aam
aas
clc
adc
sahf
add
mov
jp
xlat
int3
inc
cmpsb
cli
iret
loopne
xchg
sti
notb
aaa
and
sarb
jle
test
adc
into
jbe
dec
and
out
push
push
sub
adc
ljmp
xchg
cli
dec
mov
ja
inc
stc
jle
inc
mov
in
dec
dec
sbb
pop
out
sbb
sub
pop
mov
jp
out
push
movsb
stc
xchg
lock
scas
sahf
fbld
push
push
movsb
sub
cmc
fs
jl,pt
jl
push
mov
idivl
add
fsubr
jl
sbb
fucomi
xchg
outsb
mov
fisttpl
cs
cs
arpl
or
call
lret
pop
flds
xchg
or
cmc
and
rcl
push
pop
pop
sub
in
jl
pop
test
lret
test
lods
dec
fmul
mov
or
mov
sti
push
push
mulb
adc
xor
mov
jns
xchg
test
adc
pop
aas
jl
jae
repz
rol
icebp
pop
jl
fmuls
mov
outsb
push
popa
mov
add
ret
mov
push
out
sti
push
nop
mov
std
jbe
sbb
icebp
in
jb
dec
lods
dec
xor
push
loope
mov
push
int
and
loopne
stos
leave
dec
mov
adc
jmp
cltd
inc
push
mov
into
in
mov
xor
lock
lds
xchg
call
xor
cld
scas
lea
jns
cmp
aaa
jnp
xor
add
pop
lock
fmull
lods
nop
add
movsb
data16
jb
es
repnz
mov
fstpt
cmpl
jo
push
and
fimuls
loop
rorl
jg
lret
dec
aaa
daa
cs
pop
out
loope
pop
add
rcl
roll
push
pop
mov
stos
add
std
pop
lcall
sarb
jp
out
xorl
jle
stos
pushf
mov
es
dec
fsubrp
sub
xor
jns
jl
cltd
xchg
adc
imul
pop
mov
or
lcall
pusha
xchg
outsb
jns
xor
push
sbb
lret
mov
push
inc
xorb
fs
push
push
or
cmp
dec
fdivl
stos
mov
mov
cmpsb
shll
scas
jae,pt
sahf
pop
addr16
jno
sub
inc
ret
je
cltd
pushf
push
mov
push
xlat
je
adc
mov
or
mov
inc
xchg
or
call
mov
lret
sahf
push
mov
sbb
js
sbb
gs
scas
pop
dec
stos
aas
jns
mov
mov
mov
xchg
pop
mov
iret
arpl
lret
cmp
inc
mov
mov
loope
jns
icebp
dec
adc
out
out
cs
sahf
jbe
mov
dec
or
xchg
jg
roll
js
cs
xor
stos
jl
add
pushf
xchg
xor
add
xchg
aad
and
lods
or
jl
mull
add
es
scas
push
scas
loopne
andl
aas
je
lret
jnp
cli
inc
dec
out
imul
push
jne
mov
rcll
or
or
cmpsl
sub
repnz
fmull
mov
inc
stos
sarl
jnp
jne
js
lcall
or
xchg
mov
shlb
jge
adc
mov
push
or
pop
push
fwait
out
sbbl
jg
lods
les
test
xor
dec
push
and
aaa
cmp
inc
mov
jp
add
push
loop
in
push
ljmp
dec
push
xor
adc
iret
fcmovne
xor
mov
out
jg
or
sub
in
in
leave
das
aas
xor
ja
das
in
inc
mov
cs
icebp
dec
add
insb
adc
jnp
les
popl
mov
push
arpl
push
cmpsb
jns
and
cltd
sysexit
bound
jl
in
mov
leave
pusha
gs
cmp
adc
cmp
call
sub
push
add
inc
mov
cmpsb
aam
add
add
adc
clc
push
imul
sub
daa
push
cmpb
xor
in
idivl
xchg
sub
lahf
sbb
aaa
lock
mov
xchg
stc
shll
clc
and
sub
lds
arpl
xchg
xchg
je
aam
xchg
push
pop
jne
jge
dec
mov
xchg
jge
pop
cltd
roll
pop
xchg
sub
adc
repz
mov
test
lods
push
cmp
xchg
or
nop
sbb
jnp
mov
cmp
sub
ret
sub
leave
jbe
or
mov
xchg
leave
cmpsl
xor
jmp
jl
adc
into
lahf
imul
mov
push
pop
lods
and
lcall
loopne
mov
sub
fidivs
jne
ret
cltd
add
push
adc
jle
imul
cmp
scas
xor
jge
in
cltd
fwait
sbb
mov
xor
not
cmp
mov
imul
nop
pop
or
gs
push
and
push
imul
fwait
clc
fimull
aam
dec
arpl
and
pop
jo
lcall
int
mov
cmp
lea
rol
and
xchg
stos
jae
pop
adc
dec
mov
into
loopne
cmc
and
lods
sub
mov
sahf
dec
ljmp
fisttpl
mov
cmpl
popa
cmpsl
dec
mov
pop
insl
data16
sub
mov
test
lahf
or
mov
mov
cmp
push
outsb
adc
out
jb
jb
or
cltd
icebp
and
inc
sbb
adc
fnstcw
pop
imul
rclb
sbb
jae
lret
and
cltd
pop
cwtl
outsl
sidtl
mov
cmp
dec
sbb
xchg
lret
sub
lahf
mov
rcrb
push
and
xlat
call
xchg
adc
inc
fnstcw
imul
pop
std
and
mov
ljmp
mov
fimull
nop
pop
scas
lret
push
xor
xor
icebp
ds
nop
lea
add
sbb
loopne
mov
xor
jle
data16
je
lcall
mov
push
dec
addl
and
jmp
ret
test
in
out
cmp
rcrl
pop
adc
inc
bt
jmp
jo
sub
push
lds
mov
and
mov
addr16
jmp
outsb
ja
stos
sarl
inc
sbb
xchg
cmp
pushf
lods
adc
and
cmp
xchg
lods
mov
and
mov
jb
inc
rcrl
push
cli
pop
sbb
sbb
xlat
xchg
in
addl
ja
incb
xor
dec
xchg
mov
lods
scas
lret
insl
arpl
into
jg
ss
mov
fdivl
xchg
jp
mov
push
cwtl
xor
mov
jge
arpl
cmpsb
movsl
jo
iret
mov
in
jb
xor
jb
mov
data16
fwait
clc
inc
lret
lds
pop
inc
roll
xor
pop
pusha
bound
aas
mov
lret
push
cld
mov
scas
dec
cli
jnp
fcmovbe
jo
aas
mov
xor
jge
shll
scas
push
cmpsl
sbb
mov
jnp
fistpl
sbb
inc
scas
std
and
pop
jno
mov
icebp
cmpsb
mov
or
xor
icebp
lock
dec
ja
dec
add
jg
jne
mov
push
jge,pn
jecxz
adc
sti
cltd
lock
loopne
insw
add
push
lret
out
insl
insb
mov
lock
mov
sbb
orl
adc
out
inc
out
mov
and
mov
imul
xchg
fnsave
ja
cwtl
data16
fldenv
scas
dec
test
scas
in
movsb
add
xchg
dec
mov
and
mov
push
cmpsl
dec
shrb
loopne
enter
add
add
sbb
adc
mov
loopne
mov
add
jmp
enter
mov
stos
out
pushf
aaa
stos
dec
cmp
stc
pop
xor
sub
fistpll
jle
mov
adc
into
mov
es
test
sub
adc
xor
pusha
mov
out
push
mov
bound
inc
lods
scas
nop
sbb
cmc
nop
pop
push
inc
fadds
push
xchg
loop
lret
add
mov
mov
xchg
add
aaa
daa
aam
or
ss
inc
cmovge
dec
cs
inc
fldpi
lcall
sub
pop
movsl
scas
aas
mov
dec
sbb
or
imul
loop
inc
jle
sub
ret
call
in
out
fildl
mov
adc
repz
pop
push
ja
sbb
push
out
dec
imul
test
xchg
cmp
xor
inc
mov
inc
or
xchg
push
fcomps
leave
sub
mov
mov
in
lods
mov
lahf
in
adc
pop
call
les
shlb
mov
sbb
xlat
imul
std
xor
sbb
call
pushl
lret
inc
les
mov
lret
pop
mov
fildl
or
or
clc
xor
lods
inc
loope
and
sbb
ds
test
mov
mov
lods
xor
adcl
and
fwait
loope
ja
sbb
adc
xchg
imul
jecxz
xor
mov
fdivs
jmp
mov
int
loopne
dec
aas
dec
bound
rorl
mov
or
dec
out
adc
and
cmpsl
adc
sub
addr16
js
movsb
add
out
sbb
push
jl
es
nop
mov
jp
cmc
andb
xchg
hlt
call
pop
rol
jae
jno
push
mov
les
arpl
pop
movsb
test
and
arpl
das
jp
mov
xor
fidivl
mov
dec
fidivrl
mov
xchg
jl
ljmp
ja
pop
stc
xor
fnstcw
add
sbb
dec
xor
xchg
sub
push
pop
mov
in
pop
mov
jecxz
or
cmp
push
fimuls
rcrb
clc
mov
inc
mov
stc
inc
lods
out
cmpsl
nop
loope
sarl
pop
xchg
adc
mov
inc
push
xchg
insl
call
xchg
xchg
test
mov
roll
or
mov
ss
mov
sti
push
inc
out
jge
inc
pop
cwtl
jnp
jle
mov
cltd
mov
pop
dec
dec
push
fsub
clc
sub
leave
sahf
lods
sarb
iret
xchg
dec
add
test
insl
pop
xchg
loop
xor
add
mov
hlt
xor
out
dec
popa
dec
cli
mov
out
cmpsl
xchg
fcmove
andb
inc
pop
cmp
out
stc
cwtl
aas
and
mov
cs
sub
loopne
das
or
pushf
js
ds
sti
clc
sub
sub
mov
sti
xchg
jb
movsb
out
push
scas
adc
mov
cmpsb
xor
pop
aas
hlt
sub
out
lcall
loopne
jnp
out
outsl
inc
out
or
loop
imul
pop
jl
cs
test
leave
fisubrl
or
imul
mov
mov
adc
mov
pop
imul
in
repz
cwtl
xor
fnstsw
or
addr16
lods
sub
lret
enter
dec
popf
add
adc
iret
or
and
lret
sub
xor
jg
es
xchg
xlat
inc
push
inc
push
push
pminsw
cli
xchg
pop
cmp
jp
dec
xchg
jmp
je
mov
cmp
adc
sub
xor
addr16
sbb
aaa
dec
stos
aad
mov
pushf
xchg
nop
push
movsl
mov
hlt
std
jb
data16
daa
jmp
xor
stos
dec
arpl
sbb
mov
mov
mov
mov
icebp
ret
scas
sti
push
jne
gs
test
push
adc
aad
or
add
test
cld
loopne
daa
shlb
std
mov
mov
popa
pop
les
jmp
pushl
fidivrl
and
add
cmp
daa
test
iret
cmc
lods
adc
shlb
cmc
into
sarl
daa
add
rcrl
ja
fsubr
push
mov
dec
sbb
cmp
dec
aad
test
cmp
cmp
loope
notb
add
fisubs
jle
and
fldl
push
out
jl
shlb
insb
pop
mov
sbb
ds
cmp
in
mov
add
popa
icebp
jo
adc
aam
and
ret
pop
mov
mov
mov
cmpsb
lahf
std
xchg
cmp
dec
test
mov
xor
sub
shr
sahf
leave
inc
aas
pop
addr16
xchg
push
pop
dec
cmp
push
adc
fs
and
mov
lea
sub
push
outsb
decl
adc
loopne
xchg
jno
add
ljmp
scas
push
ss
or
enter
into
pop
cltd
cmc
sarl
sub
test
xor
xlat
imul
call
loope
jl
mov
ljmp
xchg
inc
push
fcompl
cltd
lock
ja
lods
lret
xchg
movsb
pavgw
das
out
enter
cli
imul
cmp
sbb
inc
gs
sub
or
pop
push
test
xchg
pop
lods
mov
xchg
ret
outsb
std
out
imul
mov
push
push
jmp
jmp
lret
mov
shrb
cmpsb
cmc
push
iret
movsl
rolb
cvtps2pd
movb
add
inc
test
stos
sar
xchg
add
pop
jno
inc
clc
sbb
dec
or
test
mov
scas
mov
pop
daa
mov
or
jne
add
add
loop
mov
push
push
pop
sahf
pusha
shll
out
mov
sbb
dec
or
inc
and
sahf
mov
dec
lock
std
dec
fcmove
and
push
gs
xchg
mov
into
dec
cmpsb
inc
xor
pop
add
jae
std
ret
mov
idivb
jecxz
pop
add
jnp
lcall
or
jbe
jle
mov
mov
test
push
jge
jo
into
mov
mov
add
xchg
pop
out
enter
ret
lea
xor
and
push
pop
adc
lds
dec
insl
add
lock
pushf
xchg
outsl
mov
ret
sbbl
inc
std
int3
dec
ss
insb
in
punpcklwd
and
mov
xchg
push
push
xor
fs
pop
sar
dec
or
gs
in
rcl
imul
test
sbb
dec
pop
jae
mov
xor
mov
adc
cmp
push
dec
lock
push
sbb
mov
ds
int
lods
and
into
das
test
jbe
sbb
lcall
in
ss
push
adc
inc
jl
mov
mov
xor
add
lods
in
inc
cmp
dec
lods
push
and
sbb
popa
mov
add
out
mov
repz
dec
icebp
outsl
out
or
sbb
pushf
shlb
stos
aaa
sub
push
outsl
js
sub
dec
mov
std
fs
pop
xor
jnp
mov
fidivrs
mov
cmovl
test
adc
test
push
pusha
ds
lahf
xchg
adc
pop
xchg
out
sbb
push
mov
or
in
add
inc
mov
jo
movsb
clc
mov
xlat
cmp
pusha
jecxz
sti
movsb
inc
add
inc
xlat
cmpsb
out
jno
mov
icebp
cmp
test
jmp
outsl
jge
lret
sbb
leave
aaa
enter
mov
stc
enter
jg
aas
push
movsb
sub
lea
mov
in
or
inc
mov
or
les
lahf
rorl
push
push
xchg
lret
or
fmuls
dec
ret
cmp
cli
xlat
mov
dec
loop
push
and
imul
push
or
in
xor
adc
out
lea
and
or
push
sbb
mov
xchg
in
mov
sub
xlat
out
jmp
or
add
and
or
xchg
sbb
cld
data16
add
xchg
in
ss
scas
push
rcr
or
sub
ret
pop
xchg
daa
mov
rol
cmpsb
sub
cmp
mov
mov
sbb
into
or
jno
mov
sbb
xchg
syscall
sbb
adc
push
sarb
xor
outsl
mov
jne
fcompl
pushf
xor
add
dec
lods
mov
inc
pop
test
mov
push
ficompl
mov
jae
or
imul
pop
jmp
or
and
test
mov
cmp
out
mov
mov
stos
subb
js
xlat
movsl
sbb
nop
mov
dec
pushf
push
cli
test
insb
or
fidivs
push
or
inc
dec
ret
push
dec
push
jnp
jo
test
inc
xor
mov
sbb
out
sub
js
pop
pop
sbb
idivb
sub
dec
xchg
push
int3
dec
mov
jmp
sbb
cmp
fnstsw
insb
ror
jl
mov
push
or
jno
cmp
mov
sub
addr16
mov
cmc
cmp
inc
lods
lds
xchg
cmp
inc
lea
jbe
and
iret
int3
rcl
and
cmc
jne
push
or
int3
inc
negb
mov
decb
aam
adcb
xor
or
adc
lea
jbe
xlat
mov
mov
test
mov
jg
je
arpl
hlt
mov
push
stc
mov
push
sbb
repnz
std
iret
mov
cmpsl
cmp
mov
pop
movsb
mov
mov
sbb
xchg
cwtl
test
jnp
mov
lcall
xchg
sarl
xchg
mov
or
add
xor
fsubrl
xor
inc
push
sbb
jle
ljmp
jnp
mov
mov
pop
psraw
mov
in
sbb
je
fstpt
mov
mov
jmp
loopne
and
fmul
ja
aas
out
mov
dec
aam
shrl
push
out
sub
in
push
mov
cli
pop
mov
and
and
mov
sbb
dec
mov
int
jmp
sbb
repnz
and
xchg
bound
js
or
in
mov
jge
push
pushf
enter
xchg
movsl
lock
xchg
rcrb
jne
add
aas
cltd
out
out
sbb
sub
out
xchg
test
inc
sbb
xchg
jg
pushf
xor
xchg
dec
movl
sbb
loopne
inc
popa
call
sub
sub
inc
repz
lods
addr16
arpl
jle
sti
es
dec
test
push
cwtl
aam
and
bound
mov
sbb
dec
and
stc
push
and
gs
popf
dec
std
clc
mov
enter
xor
pop
mov
mov
adc
sub
imul
push
xor
pop
xor
xor
mov
sub
mov
fistps
ficoml
mov
mov
and
mov
pop
xlat
jmp
jnp
inc
negb
leave
aaa
psrad
sub
xor
xchg
stos
add
loopne
pusha
andb
cli
push
jecxz
stos
mov
xchg
orb
xchg
test
out
jns
push
notl
xor
imul
adc
sbb
jae
into
sub
sbb
fs
inc
je
mov
imul
je
push
xor
imul
addb
fadd
and
in
movsb
mov
mov
js
cld
mov
sahf
push
fcmovu
pusha
lcall
out
dec
cwtl
roll
stos
xor
in
dec
pop
push
sahf
lock
stc
ljmp
mov
xlat
aam
add
fmull
outsl
into
push
mov
lea
mov
dec
jns
cwtl
int
gs
pusha
gs
sub
repnz
imul
hlt
repnz
jo
adc
lods
xor
fnstcw
dec
in
std
mov
icebp
cmp
daa
cltd
scas
xor
out
jno
dec
cmc
mov
mov
notb
cmp
mov
and
mov
cmp
lea
mov
fs
xchg
push
std
out
pop
mov
or
pop
stc
addr16
cwtl
mov
fdivrl
shrb
sub
pop
inc
xor
aaa
sbb
repz
leave
sbb
cmpsb
arpl
cmp
int
mov
cmp
dec
gs
mov
pop
leave
icebp
loop
xchg
imul
lods
leave
push
popf
cvtdq2ps
insb
jmp
lds
daa
stos
mov
push
sub
and
pop
lods
inc
cld
lods
adc
fs
mov
inc
test
add
repnz
mov
adc
mov
sbb
cmp
xor
cmp
inc
pop
jbe
xchg
fs
add
dec
cmp
dec
decl
movsb
adc
gs
lods
cmpsb
pop
fildl
dec
movsb
out
jge
xor
jmp
outsl
sub
cli
mov
imul
cmp
pop
nop
decb
push
stos
jl
push
roll
and
je
out
scas
sub
in
jb
and
jle
mov
aad
cmp
add
mov
es
lods
insl
cmp
clc
or
sti
mov
andb
inc
mov
int
ss
inc
rcll
stos
lea
out
pushf
jge
insl
add
push
mov
pop
mov
ret
data16
mov
daa
negb
sub
mov
js
push
sti
xchg
inc
and
adc
lods
daa
jl
push
pop
leave
je
or
pop
mov
lods
jmp
subl
or
xchg
xchg
lret
sti
mov
lods
rcrl
and
roll
xchg
in
fidivs
cs
fsubr
push
fcoms
jl
lret
xor
mov
mov
sahf
dec
jl
pop
push
lods
jbe
mov
mov
add
mov
ljmp
or
ljmp
mov
hlt
gs
into
xor
ret
jle
cmpsb
adc
xor
add
and
cmp
push
mov
fld
pop
cltd
inc
mov
repz
daa
mov
cmp
dec
pop
add
loope
push
nopl
mov
inc
cmp
jg
dec
sub
dec
cmp
cmp
sbb
jnp
pop
push
imul
pop
dec
loop
cmp
mov
cmpsl
pop
xchg
bound
mov
pop
sbb
imul
enter
in
sti
mov
adc
mov
scas
cmc
fdivrp
pop
ret
fmull
std
outsb
mov
repz
stc
add
and
sbb
scas
into
incb
mov
stos
add
mov
jl
mov
std
mov
adc
imull
add
cmpsb
push
and
ret
lea
cmp
in
sarb
and
or
movsl
adc
pop
scas
fdivrl
aad
test
cmp
outsb
mov
mov
mov
xor
pop
fwait
pop
dec
cs
popf
xchg
lock
mov
clc
cmp
push
inc
stos
add
repnz
mov
pop
dec
clc
xchg
cmp
xchg
cltd
fs
push
jecxz
faddp
out
adc
push
adc
pushl
repnz
repz
push
shlb
push
cmp
arpl
adc
mov
pop
mov
and
cmp
xchg
mov
xchg
xchg
vaddsubps
adc
scas
imul
pop
cmp
pop
in
mov
aam
in
pushf
cmp
rep
push
jge
es
inc
cmc
addb
cmp
nop
add
mov
sub
fs
sub
lea
paddsw
add
mov
xor
mov
je
je
inc
js
jns
fidivl
push
xchg
mul
and
fstl
jge
mov
nop
adc
adc
pop
outsl
jno
loope
outsl
shlb
mov
ds
pop
push
xlat
xchg
push
pop
xor
cmpb
icebp
mov
popf
sarb
inc
shll
dec
daa
std
push
cwtl
je
test
mov
add
lods
loopne
or
std
stos
inc
sbb
sub
daa
into
out
into
daa
shrb
shlb
lds
push
aaa
mov
or
mov
push
jecxz
inc
push
inc
fmull
lret
gs
mov
xlat
push
jge
cmpsb
cmovl
hlt
das
insl
je
adcl
stos
sub
inc
push
xor
lahf
cltd
push
int3
aad
and
mov
js
xchg
xchg
ss
sahf
cmp
loopne
add
push
inc
out
adc
data16
rcll
jge
sbb
jb
fs
mov
lret
push
pushf
mov
ljmp
subb
cmp
sbb
or
loope
pushf
fisubrs
mov
cmp
int
and
mov
push
mov
imul
sbb
je
mov
lahf
das
out
fsubrs
ror
cwtl
mov
fcoms
movsl
push
sbbb
mov
ss
decb
addr16
rclb
addl
add
aad
add
jge
push
test
das
mov
mov
mov
add
mov
stos
ljmp
adc
rclb
add
push
ds
xchg
jne
cwtl
jg
nop
outsb
cmp
add
pop
aad
pop
jg
stc
loop
out
jge
fsubs
in
lea
pop
xlat
insb
xor
test
pop
adc
jo
iret
cmpsl
fbstp
fists
sub
xchg
fwait
test
jp
mov
xor
cmp
in
push
and
lret
lock
ds
jno
xchg
ja
dec
jno
xor
ficoms
cs
scas
adc
pop
adc
aam
shrb
ret
cwtl
push
call
iret
cmp
and
xchg
pop
mov
dec
push
push
pop
pop
push
sub
or
pop
push
test
xchg
jl
stos
scas
mov
xchg
testb
sarb
lods
jnp
aad
fsubrl
sahf
mov
imul
mov
incb
loopne
jne
xor
test
loopne
loope
idivb
inc
sbb
xchg
and
push
push
push
pop
insl
jl
movsb
jb
cli
xor
into
xor
aad
jne
push
jle
push
xchg
or
dec
push
fnstcw
push
mov
out
dec
cmp
stos
mov
xorl
xchg
sbb
push
ret
test
iret
push
into
pop
jns
jb
push
mov
mov
mov
sbb
xor
xchg
daa
add
incb
daa
cmp
and
in
insb
sti
inc
jbe
cmc
nop
inc
mov
push
aas
push
pushf
cld
sti
xchg
inc
or
inc
xchg
gs
lock
pop
add
pop
lea
cld
pop
mov
cli
cmp
mov
and
xchg
cmp
xchg
je
jne
stos
stc
pop
push
xor
xorl
dec
popa
in
cmp
in
mov
add
sbb
daa
fisubs
es
adc
jmp
jmp
pop
cmp
pop
jae
fidivs
jne
push
dec
mov
dec
aas
mov
jmp
ja
mov
lahf
outsl
sahf
jmp
test
pusha
ret
sarb
or
or
sub
jp
pop
xlat
outsb
and
shr
pcmpeqw
es
popa
dec
mov
and
mov
rcll
into
nop
sahf
pop
jb
dec
pop
bound
cli
pop
jge
add
add
rcr
cmpb
push
fwait
movsb
fldenv
sahf
sahf
imul
push
inc
fnsave
and
or
mov
aaa
paddb
mov
adcb
lcall
or
pop
xchg
pop
lahf
push
icebp
and
xor
shlb
xchg
jae
sbb
cmc
gs
cmpsl
leave
push
cmp
popf
and
fldt
movsb
or
sahf
mov
mov
jl
ja
leave
fwait
dec
outsb
and
nop
adc
lock
add
pusha
in
fcoml
jp
xchg
jae
mov
cmpl
jmp
sub
mov
sub
add
xor
dec
and
or
mov
jnp
xchg
and
inc
outsb
inc
xchg
adc
dec
stos
ja
jg
push
jl
adc
jp
stos
lds
icebp
dec
push
lret
xor
jp
imul
fs
ret
movsl
in
cmp
adc
inc
js
insb
lock
adc
push
in
pop
and
adc
lahf
aaa
std
jp
xchg
nop
hlt
cmp
xchg
sbb
rclb
jg
dec
jge
push
movsb
cmp
cmp
mov
in
pop
js
xchg
in
es
add
pop
arpl
xor
lds
pop
mov
bound
inc
or
dec
std
push
lcall
sbb
lret
popf
scas
push
int3
std
jae
push
pop
sti
or
movsl
sbb
sti
and
jbe
test
mov
add
cmp
or
rclb
push
xor
pop
cmp
xchg
mov
and
mov
bound
pushf
je
cmp
mov
dec
and
test
xor
pop
xchg
mov
pop
mov
in
xchg
sub
xorl
leave
xor
push
sub
lock
jl
jecxz
jbe
bound
cli
popa
ret
mov
dec
dec
enter
iret
inc
cmp
xchg
sub
mov
das
jp
sete
and
inc
mov
outsl
roll
shlb
xor
cmp
push
xor
lret
in
sbb
sub
lcall
xchg
out
jecxz
pop
sub
iret
iret
sub
lea
test
jno
sbb
je
nop
cmc
scas
mov
ljmp
fadds
fwait
stos
cmc
sub
test
insb
loopne
dec
pop
leave
sub
rol
sarl
jnp
lods
insl
icebp
cmp
jns
scas
xor
subl
or
push
jge
sub
push
sbb
sub
js
call
cmp
mov
add
xor
push
or
fcmovnbe
imul
in
js
sbb
int
mov
stos
mov
sbb
add
pop
in
jne
test
aas
movsl
mov
lret
mov
rcr
or
adc
mov
xor
fs
push
daa
mov
adc
mov
rclb
div
divb
ffree
hlt
xor
std
pop
jl
shlb
jp
mov
pop
loope
mov
out
pop
les
cld
xor
xor
hlt
cltd
in
sbb
push
sub
ret
sub
xchg
jne
push
pop
and
fwait
pop
jmp
insb
jae
call
push
sti
test
clc
js
ja
xor
imul
xchg
cli
sti
adc
and
das
lcall
inc
cli
inc
addr16
cli
scas
push
mov
ja
mov
fildll
fcomps
sub
add
jae
jbe
pushf
into
idivb
inc
mov
xchg
ss
cli
aam
icebp
cmp
mov
jl
mov
jae
or
pusha
out
jno
adc
rorb
pop
and
mov
mov
jl
pop
lds
and
xchg
lret
es
mov
clc
jge
inc
sub
loope
sub
and
mov
cmp
mov
test
and
sub
jmp
repz
jle
xor
dec
jbe
fs
aam
dec
das
push
mov
shrb
pop
push
mov
cs
dec
addr16
dec
cmpsl
mov
dec
and
mov
pushf
xor
enter
aad
inc
xor
data16
add
stc
xchg
cmp
les
add
andl
adc
inc
icebp
inc
aas
mov
fcompl
fstl
mov
lcall
ficomps
xor
jb
jnp
sbb
dec
flds
pushl
iret
cmp
andb
xor
or
imul
imull
sbb
dec
jb
mov
call
pushf
jne
lea
xor
or
jb
lock
int
fistpll
lods
push
mov
fs
dec
test
dec
or
dec
jae
stos
sub
mov
popf
popf
scas
ja
ljmp
cmp
inc
pop
insl
outsl
push
and
jbe
inc
sbb
push
js
mov
push
push
jno
pop
push
pop
stc
mov
stos
push
jno
pop
push
or
scas
stc
inc
enter
shrl
iret
cmovb
mov
ljmp
or
clc
sahf
inc
aad
cmpsl
out
and
stc
sarl
xor
aam
in
sbb
mov
pushf
sbb
pminsw
mov
or
nop
push
and
outsl
cltd
or
mov
jae
imul
pop
adc
dec
insl
mov
sarl
test
lods
jns
lods
dec
push
movsb
mov
push
cmpl
cs
or
ret
push
jecxz
pop
std
mov
lds
lahf
rclb
sbb
mov
inc
out
insb
into
ja
sbb
sub
dec
mov
addb
push
test
enter
int
cmp
or
lcall
inc
fdivr
sarl
jp
mov
leave
mov
jo
out
inc
pushf
ret
push
xor
xchg
inc
adc
xor
or
and
adc
and
and
push
push
shlb
inc
ret
pop
movsl
xchg
jb
push
out
inc
adc
orb
dec
or
mov
addr16
fistpl
stos
int
xchg
arpl
ds
lahf
fstpt
mov
xchg
lcall
pop
ljmp
out
leave
in
jo
repnz
xchg
push
lahf
fidivrl
dec
and
mov
sub
pop
push
sub
call
inc
std
shr
lret
out
cmp
mov
fistpll
jmp
bound
test
inc
mov
inc
je
jns
add
mov
jmp
mov
xchg
bound
dec
cmpsl
popa
mov
and
cmpl
mov
or
das
lcall
shll
inc
sar
xchg
sub
ss
movsb
xor
das
jmp
fcoms
push
mov
push
fisubrs
jne
loop
in
cli
imul
movsb
std
test
add
xor
jp
mov
xlat
dec
fimuls
mov
ljmp
mov
cmpsb
add
pop
cmp
mov
adc
cld
xchg
push
les
jne
test
push
pop
and
mov
and
fnstsw
lods
int
lods
mov
mov
push
jo
ret
pop
mov
and
in
daa
jno
dec
cmp
push
adc
mov
push
push
fisubl
lods
mov
add
pusha
mov
leave
pop
or
mov
xchg
imull
scas
xchg
ss
mov
mov
mov
jnp
inc
mov
mov
shll
outsb
lcall
mov
cmp
lcall
mov
icebp
je
add
push
mov
sub
mov
pop
mov
mov
data16
into
cli
testl
jne
aad
add
icebp
dec
movsl
repz
mov
cwtl
loope
mov
mov
test
es
repnz
push
rorl
stos
jbe
cli
lea
test
adc
cmpsl
sub
cmc
mov
iret
das
int
push
sub
lods
comiss
dec
or
andl
mov
jae
fsubrs
jae
fildl
dec
mov
das
mov
mov
inc
and
cmpsb
in
inc
cwtl
pop
mov
pop
lods
into
lock
and
or
mov
and
xchg
mov
or
mov
xor
lods
xchg
into
subl
out
fwait
sub
aad
cmp
lock
adc
out
lahf
ret
mov
jbe
mov
ss
sub
out
je
orb
adc
mov
pause
inc
cltd
jno
sub
repz
into
and
and
and
xchg
and
jb
pushf
shlb
push
sub
out
out
cwtl
xchg
cmp
daa
clc
lcall
add
ds
outsb
popf
xor
or
cmp
mov
sbb
es
outsb
adc
mov
and
mov
mov
xlat
in
fs
call
sbb
inc
sahf
test
je
nop
ljmp
in
out
and
dec
pop
pop
cltd
in
daa
lahf
pushf
pop
xor
and
pusha
mov
pop
imul
cmp
jg
push
out
in
or
lock
out
mov
adc
sbb
lret
int3
bound
imul
lcall
pop
int
aam
mov
out
cmp
daa
xchg
inc
push
lods
jnp
sbb
negb
insl
cli
pop
data16
adc
sarb
scas
out
sbb
fnstsw
pusha
subl
push
mov
into
bound
in
inc
test
pushf
icebp
inc
incl
xchg
cmp
sub
pop
adc
addl
jge
cmp
les
cs
sbb
adcl
mov
dec
push
repnz
push
movsb
pop
sbb
pusha
fcmove
fcompp
adc
sub
pop
mov
dec
and
push
pop
mov
shll
repnz
aam
rorb
into
icebp
inc
mov
cwtl
movsl
push
xchg
jb
push
mov
xchg
inc
cmpsb
test
and
pop
adc
ljmp
xorb
out
scas
fsubl
xor
daa
lds
clc
mov
pop
cmp
out
bnd
adc
jg
xchg
push
xor
push
xchg
inc
aas
jb
sbb
push
iret
and
add
pusha
cmp
adc
imul
dec
incl
and
or
fdivrp
adc
jb
daa
xlat
movsl
inc
xor
sub
adc
cmp
loopne
and
fildl
mov
add
int
mov
lods
mov
jno
idiv
imul
notl
xor
mov
push
dec
test
fwait
mov
movq
out
sbb
mov
popa
cmpsl
jnp
or
sarb
dec
outsb
into
cwtl
outsl
int3
pop
jnp
mov
data16
ljmp
cmpsb
in
popf
jp
aas
prefetchwt1
or
xchg
pusha
cmp
adc
je
or
adc
repnz
sub
add
push
inc
xor
lods
and
xor
dec
add
mov
ljmp
add
or
ret
repz
jb
insl
push
int
ds
call
enter
push
loope
aam
aas
shl
aaa
push
adc
and
loope
loop
push
mov
mov
sti
cmpsb
or
adc
scas
jmp
mov
mov
lock
movsl
xor
test
mov
xor
inc
or
orl
loop
mov
scas
sbb
mov
inc
mov
imul
cs
sahf
cmp
jp
push
imul
into
cmp
imul
and
adc
test
jecxz
push
mov
pop
push
pop
adc
xor
pop
xchg
or
ret
fisttps
pop
hlt
aaa
gs
mov
into
mov
jecxz
rolb
lods
pop
inc
jle
inc
das
sbb
insb
sbb
fidivrs
inc
mov
les
push
sarb
cmpsb
sbb
sub
add
push
sub
daa
ds
rorb
gs
cli
jb
adc
add
aas
les
ficomps
jno
andb
movsl
adcb
daa
push
out
sub
out
movsl
jns
dec
enter
cltd
aad
jb
lock
aad
mov
arpl
aaa
inc
push
dec
nop
push
pop
sbb
ds
push
cs
lds
xchg
fwait
mov
jmp
test
lea
or
das
jb
adc
push
inc
data16
inc
shrl
fmulp
sbb
std
scas
mov
es
cmp
xor
mov
inc
jne
or
add
adc
sub
fsubrs
outsl
xbegin
push
sub
pusha
imul
adc
enter
fiadds
call
jg
or
aam
push
sub
shll
fldcw
ja
cli
sbb
inc
mov
add
fmull
xor
mov
mov
es
gs
and
stos
icebp
out
mov
lahf
shr
or
mov
xor
adc
xor
xchg
ja
xor
lcall
sub
lock
arpl
xchg
icebp
mov
xor
push
movsl
decl
mov
pop
loop
sbb
pop
mov
fwait
cmovb
bnd
int
test
inc
xchg
mov
dec
pop
pop
xchg
push
fdivs
shlb
inc
rcrb
sbb
orl
pop
sbb
adc
xor
bound
nop
dec
cmp
inc
mov
sub
pop
lret
scas
inc
fsubl
pop
sahf
lcall
jbe,pn
movsb
lods
adc
test
rclb
std
sub
and
jp
lret
cmp
push
mov
mov
cld
xchg
fsubrp
mov
mov
lock
adc
push
ja
insb
outsb
push
in
rdtsc
enter
pop
sbb
cwtl
xor
rcll
cmpsb
out
mov
and
and
xchg
push
jb
mov
ret
aad
add
mov
mov
pop
pop
mov
icebp
jno
add
mov
leave
je
paddusw
movsb
inc
cmp
mov
xchg
pushw
dec
imul
test
mov
inc
subb
dec
adc
pop
mov
add
push
je
mov
and
pop
test
jmp
xor
mov
roll
pusha
repnz
xorl
cmp
mov
icebp
cmp
cld
xchg
push
mov
mov
stc
je
dec
aad
xchg
mov
shll
xchg
and
dec
jns
push
or
pushf
cwtl
cmp
ja
imul
mov
cmp
outsb
mov
or
sbb
ja
call
popa
ret
fldcw
lcall
pop
sbb
xchg
cmc
sub
cmp
xchg
arpl
jno
mov
push
xchg
pop
into
loope
movsl
jne
xlat
enter
enter
and
adc
mov
jmp
les
dec
adc
stos
ds
clc
cmp
jbe
and
hlt
fcomps
sub
arpl
dec
add
dec
in
loop
sbb
mov
xchg
loopne
in
lock
or
sti
fwait
mov
shlb
sahf
bound
imul
jp
test
rolb
cmp
es
sarb
mov
mov
aad
stos
xor
lods
movsl
ds
jno
orb
inc
test
inc
mov
and
je
mov
call
and
scas
aaa
int3
jecxz
add
sub
loop
test
shll
mov
sahf
daa
mov
ja
xchg
ret
sti
adc
jmp
cld
dec
mov
mov
ficomps
cs
cmp
pop
js
in
loopne
addr16
inc
es
and
push
pusha
adc
cmp
jmp
mov
andl
movd
and
pusha
adc
jnp
outsl
leave
and
adc
ficoml
xor
cmc
test
je
mov
hlt
adc
roll
ret
leave
jbe
loope
loope
push
sbb
fsts
sahf
jmp
mov
mov
sub
daa
adc
sub
ret
jmp
sbb
jae
adc
dec
in
pop
data16
mov
sbb
pushf
push
shrb
dec
sti
loop
push
sarl
test
call
jecxz
xor
sbb
fstpl
inc
jmp
insl
test
mov
jns
lods
idiv
push
cmp
adc
loope,pt
inc
lds
add
int3
and
loope
xchg
fdivrl
dec
lcall
jbe
ljmp
mov
and
sub
push
data16
pop
and
lds
mov
imul
mov
dec
iret
cmp
xchg
pusha
call
mov
inc
cmp
mov
sahf
in
and
ja
ret
inc
clc
push
jecxz
push
fs
pop
bnd
inc
push
cmp
sarb
std
adc
sbb
sbb
popa
jnp
shlb
out
arpl
mov
addr16
loopne
pushl
cmp
xchg
mov
ja
repnz
sub
cmp
push
pop
mov
xchg
repnz
repnz
cwtl
inc
mov
imul
jp
test
jbe
mov
pop
mov
push
jg
xchg
rcll
mov
je
pop
jae
std
fdivrs
fisttpll
arpl
das
sbb
fwait
sbb
daa
xchg
in
inc
adc
nop
cld
xor
rolb
sbb
in
sub
stos
movsb
je
jmp
or
int
jne
cmp
es
push
into
jp
and
dec
inc
rcrl
cmp
int3
mov
and
or
inc
adc
inc
or
and
sub
jge
mov
inc
mov
insb
mov
scas
xor
inc
ret
aam
pushf
mov
xor
and
xchg
mov
xchg
decb
xor
inc
sub
fisttpll
lret
jo
clc
adc
xchg
xor
mov
and
and
xor
aas
mov
jmp
cmp
fldt
bound
vunpcklps
ss
scas
jecxz
xor
xchg
and
mov
xchg
jge
dec
inc
scas
mov
push
stos
sbb
mov
aas
bound
xor
fiadds
push
push
jno
jne
inc
cwtl
sbb
icebp
out
movsl
roll
mov
jge
cli
jo
test
arpl
sahf
fldenv
iret
inc
dec
sub
loop
sub
sbbb
aas
dec
nop
dec
insb
std
pop
pop
push
jg
adc
dec
sbb
xchg
sbbl
and
stos
fimull
ja
hlt
xchg
adc
push
mov
jmp
movb
loopne
das
ljmp
inc
xor
sbbl
push
pop
sti
mov
pop
iret
out
mov
and
loop
xchg
cmc
ss
daa
or
mull
cmc
ljmp
jl
mov
mov
cmp
mov
pop
cmp
dec
inc
mov
push
loop
or
cmp
popa
fwait
gs
ret
loopne
in
into
out
cltd
popf
cmp
stos
pop
mov
push
icebp
push
mov
or
jbe
jge
fldl
scas
adc
or
sahf
subl
pusha
test
incb
flds
mov
xor
mov
out
add
mov
mov
dec
outsl
iret
enter
jno
mov
or
int
xchg
mov
push
inc
shr
cmc
popf
mov
testl
std
mov
mov
pushf
jle
add
sbbl
or
mov
push
test
cmp
and
push
shll
scas
daa
sub
jae
xor
add
xchg
sbb
aaa
dec
inc
popf
aad
fstl
xchg
out
push
or
in
enter
or
mov
mov
data16
enter
jnp
and
dec
mov
mov
sub
xor
clc
mov
out
shl
pop
ret
pop
in
mov
test
add
ficoms
test
cli
insb
out
aas
xor
xchg
push
inc
inc
adc
push
popf
std
cs
leave
ret
xchg
enter
popf
es
inc
aas
inc
es
xchg
shll
fimull
in
add
add
ljmp
adc
push
int
jge
mov
out
mov
mov
ret
je
lds
cwtl
pop
jp
rcrl
push
enter
inc
aam
jns
fisubrs
sbb
stos
fisubl
clc
lock
mov
jecxz
stos
mov
shrb
dec
shll
lea
push
sbb
mov
push
cmp
push
call
popl
shl
test
jge
mov
pop
mov
adc
jg
sbb
lods
insb
and
repz
sub
adc
pop
or
mov
fadd
pusha
push
addr16
dec
clc
scas
cld
sbb
add
aaa
mov
lods
xlat
and
movsb
sbb
xor
sub
loope
int3
jge
clc
push
jnp
icebp
ds
cli
daa
sbb
imul
cld
jge
mov
in
sarb
movsb
sti
adc
sahf
shrl
sbb
js
jecxz
xchg
sub
cli
mov
jne
sbb
mov
push
mov
js
repz
pop
mov
sahf
adc
inc
push
pop
jle
and
push
call
add
cmp
mov
sbb
jbe
imul
cltd
cmpsl
in
dec
out
jne
mov
int3
mov
and
fsubs
push
out
std
lret
jbe
mov
lock
stc
xchg
ret
out
int3
sub
jae
jne
push
mov
loopne
push
insl
jmp
jbe
pusha
rorb
dec
repz
mov
cmp
push
cltd
add
test
add
cmp
pop
inc
aad
xor
and
data16
in
mov
sbb
mov
sub
sub
jecxz
xchg
pop
cwtl
scas
adc
xchg
add
pop
mov
lods
movsb
in
jnp
jne
mov
cmpsb
push
mov
pop
test
data16
and
xchg
insb
xchg
imul
or
xor
leave
icebp
inc
cwtl
inc
inc
cmc
fmul
mov
andl
insl
jno
hlt
movsl
movsl
out
test
or
aad
mov
push
int
sbb
mov
mov
sub
push
mov
into
rorb
lea
push
arpl
or
enter
or
bound
sub
mov
add
jb
ds
dec
jb
fsubrs
jge
mov
nop
lds
hlt
adc
in
scas
mov
int3
and
jns
push
and
ss
xorb
jae
dec
das
sbb
mov
mov
mov
mov
jb
jb
mov
dec
sbb
out
push
sbb
fildll
cmp
push
pushf
pop
cmp
push
pushf
pusha
push
int
test
sahf
pop
ljmp
cmpsl
int3
fsubs
aad
push
jbe
out
or
outsl
test
sbb
inc
push
xor
shrb
jbe
stos
mov
cmp
aas
test
imul
hlt
int
xor
xor
lods
sub
xchg
out
cmp
fisubs
movups
std
scas
adc
push
dec
ja
xor
lahf
adc
aaa
inc
shll
mov
jecxz
and
or
cmc
andl
push
and
leave
cld
xchg
inc
jge
sub
add
scas
daa
sub
mov
sbb
pop
push
mov
pop
out
lret
sbb
mov
testb
mov
mov
sub
dec
xchg
cli
lret
and
mov
jno
dec
es
xor
push
imul
push
inc
push
negl
adc
or
std
mov
fstpt
out
cmp
lret
pop
lods
adc
mov
dec
test
and
sub
push
add
push
mov
fnstsw
cltd
andl
int3
dec
dec
addr16
outsl
cmp
mov
call
nop
push
adc
jne
lcall
loopne
ja
xlat
pop
inc
mov
mov
mov
pop
repz
xor
mov
mov
sbbb
enter
cltd
jb
add
testl
cmp
stos
xlat
inc
cmp
lcall
leave
jb
jge
and
jae
xchg
mov
addr16
out
jmp
push
out
mov
mov
lods
lcall
seta
cld
cmp
pop
int3
xchg
fcmovne
loop
in
add
push
cli
dec
inc
es
lcall
jge
test
addr16
xchg
push
sbb
and
ja
shrb
pop
notb
cwtl
in
aad
and
movsb
mov
icebp
pusha
loop
cmpsl
jmp
shll
xchg
xor
sub
int
pop
inc
fmuls
fbstp
jne
loopne
mov
fs
jae
std
mov
cmp
imul
adc
inc
repnz
push
incl
fsubl
cmp
ret
mov
imul
sub
mov
pop
jns
dec
imul
jle
mov
insb
jae
xlat
pop
cli
xchg
jne
pop
fidivrs
xlat
sub
inc
push
rcrb
call
stos
add
adc
das
mov
pop
loope
rolb
fcmovb
mulb
jb
dec
roll
add
inc
xchg
inc
dec
std
xchg
int
cmpb
pop
mov
sub
bound
mov
cwtl
pop
xchg
sahf
jle
sub
pop
mov
inc
pop
mov
cmp
divl
jmp
cltd
out
lahf
roll
mov
lods
pop
sbb
insl
mov
xchg
je
jns
dec
shl
xchg
or
rcrl
dec
dec
cli
stos
loop
cltd
adcb
and
in
push
jae
xor
repnz
stc
mov
cmc
das
mov
jae
lahf
xchg
frstor
xor
nop
push
jmp
jb
ljmp
jge
xor
lcall
sub
sbb
add
enter
xchg
div
sub
dec
push
das
int3
push
adc
das
cmp
xchg
and
imul
ljmp
jnp
or
adc
dec
push
jbe
and
frstor
cmp
adc
jns
xchg
jns
dec
mov
and
nop
pop
sub
inc
mov
add
lods
lock
imul
cwtl
sbb
out
ret
addr16
pop
lahf
lods
xor
ljmp
ja
adc
push
mov
repz
push
pop
pushf
push
push
add
mov
in
in
jo
inc
repnz
push
jmp
sub
movsl
or
mov
mov
shlb
adc
push
mov
lea
daa
scas
mov
xor
pop
lods
imul
movsl
loop
pop
stc
sbb
jmp
repnz
adc
mov
std
mov
adc
mov
lds
push
daa
fistps
jmp
lea
test
add
jbe
dec
lds
push
xchg
jle
lahf
mov
fs
sbb
fsubl
lret
dec
leave
push
out
jg
push
shll
cmp
movsb
mov
addb
mov
cwtl
or
es
sub
es
mov
jg,pn
jp
nop
jne
inc
in
push
iret
iret
adc
ss
jp
add
mov
cld
fdiv
hlt
inc
xchg
or
jecxz
push
lods
cmp
sbb
rcll
loop
jl
aam
or
test
lods
movsl
hlt
adc
inc
dec
xor
aaa
repnz
inc
jae
dec
pop
push
adc
test
pushf
push
les
jae
out
movsl
adc
jge
test
mov
xchg
sarl
mov
jne
std
hlt
inc
sbb
bound
pusha
stos
dec
ja
loop
idivl
fcomp
sbb
inc
xchg
iret
mov
stc
push
sub
push
hlt
pusha
mov
movsb
les
aam
repnz
movsb
ljmp
cmp
sbb
or
orl
lods
jo
push
lret
cmp
or
jns
out
lods
and
mov
outsl
and
lahf
jno
sbb
std
mov
mov
stc
ret
lfence
xchg
dec
xor
inc
pushf
call
mov
cmc
mov
pop
loopne
and
jl
popf
clc
aad
fsubrl
add
push
decl
inc
insb
cmc
push
push
mov
jnp
dec
mov
int3
jnp
xchg
shrw
mov
arpl
push
dec
insb
popa
repnz
int3
add
jl
cmpsl
test
cmpsl
fnstsw
pop
mov
andb
xchg
cmp
cs
push
loop
cltd
je
inc
imul
mov
sbb
or
xchg
fucomip
dec
add
mov
fdivs
sahf
xchg
mov
loop
and
inc
in
scas
adc
sbb
insb
and
jmp
addr16
xchg
mov
in
shl
stos
cmpsl
push
xor
pop
addr16
adc
roll
ds
movsb
cmp
mov
sub
addr16
sahf
inc
in
stos
shrb
sti
xchg
stos
insl
xlat
xor
push
and
mov
or
lods
lahf
fsubs
fwait
imul
iret
pop
mov
andb
mov
subl
movsl
mov
out
xor
into
pop
and
sub
dec
test
stos
xorl
sti
add
pop
sub
shrb
repz
xchg
rolb
lea
pop
or
popf
dec
loope
clc
fistpl
frstor
jl
mov
xcrypt-cbc
scas
mov
test
xor
sti
mov
mov
mov
std
bound
xor
cmp
aas
daa
cmpsb
cmc
mov
lret
pop
scas
roll
shrl
inc
aad
add
pop
lods
sub
inc
sub
fsubp
jmp
lcall
dec
xchg
push
mov
and
int
out
cmp
pop
adc
aaa
adc
ja
xchg
jb
jb
add
and
xor
dec
iret
push
push
sbb
xchg
test
jae
xchg
push
mov
fstpt
jne
ret
jo
xchg
js
lods
int
push
inc
ret
dec
and
mov
dec
or
jp
pop
ss
lds
test
test
mov
fidivrl
sbb
and
push
call
ret
in
out
xchg
fsubs
jp
jae
iret
push
dec
repnz
adc
fsubrs
ja
jmp
inc
xchg
call
shll
cmpsl
push
cmp
jb
and
and
bswap
cmp
push
sti
popf
call
or
mov
stc
insb
jo
nop
mov
shrb
dec
pop
enter
out
push
orb
jecxz
mov
lods
insl
ret
jmp
push
int3
and
cmpsb
jno
and
stos
stos
push
in
ficompl
mov
dec
cmp
into
inc
mov
or
jp
popl
adc
push
and
lock
inc
mov
push
out
loope
sbb
mov
lock
js
adc
jnp
sub
and
dec
fdivl
pop
lret
mov
ret
mov
mov
int3
adc
aaa
mov
mov
mov
test
xor
mov
fs
and
pop
push
and
fwait
clc
pop
lock
mov
popa
and
add
sbb
in
push
repnz
push
outsl
dec
movsl
adc
lods
sub
rcrl
sub
xchg
imul
ja
insl
or
jecxz
add
sbb
adc
mov
adc
pop
and
iret
cwtl
mov
mov
sbb
cli
pusha
out
sub
psubsb
add
shlb
loopne
mov
rcr
cvtpi2ps
shl
push
push
iret
fsubrl
ror
xchg
pop
mov
add
jne
das
pop
sti
fwait
lret
xor
stc
push
and
roll
jp
fisttpl
aaa
mov
push
xchg
inc
push
inc
stos
inc
add
pushf
clc
inc
cmp
js
out
push
mov
imul
jp
lock
sbb
cmpsb
insb
mov
cmpsb
and
mov
sbb
lahf
cmpsl
in
lods
lods
aam
sarb
aad
or
enter
push
hlt
out
movsb
xchg
test
pop
stos
dec
jg
lret
jae
scas
out
ljmp
pop
push
arpl
clc
dec
mov
sbb
cwtl
mov
out
sub
push
cld
xor
pushf
and
jp
xor
xor
push
mov
lret
sbb
xor
imul
add
jnp
fninit
enter
pop
repz
gs
ljmp
push
jecxz
xchg
insl
xor
or
les
or
mov
int3
and
or
fisubl
ficomps
mov
lds
xchg
testb
addr16
adc
das
xchg
je
cld
es
outsl
mov
pop
or
and
pushf
dec
cmp
fsubrs
mov
sub
inc
pop
cltd
iret
lcall
add
and
add
mov
dec
fisubl
adc
cmpl
out
hlt
jl
andl
dec
ljmp
sbb
mov
sbb
jns
ljmp
push
or
lcall
lods
add
and
aaa
xor
inc
pop
cmp
fwait
lret
out
cmp
fsts
lcall
mov
xlat
repnz
xor
mov
fldt
sahf
aas
jg
mov
mov
mov
inc
out
sub
xchg
outsb
insb
fstl
jg
sub
outsl
scas
add
das
stc
outsb
out
and
inc
mov
int3
jno
cld
sahf
outsl
movsb
dec
xorl
mov
and
mov
mov
mov
in
dec
cmpl
jb
inc
add
pop
mov
sub
bound
lahf
and
xlat
sbb
mov
jo
in
daa
xlat
in
pop
pop
lret
loopne
inc
cmpl
inc
hlt
insl
sbb
repz
js
cmpl
pop
add
and
ja
pop
lret
lret
mov
shl
pushf
shlb
cmpsl
sub
push
andb
xchg
mov
xchg
ret
jecxz
cmp
mov
cmp
mov
mov
add
std
adcl
enter
inc
shlb
enter
push
sbb
xchg
lods
xlat
ss
imul
shl
dec
clc
sub
pop
cmp
mov
addl
push
add
das
sbb
pop
push
fists
jnp
xor
dec
cmp
scas
hlt
imul
iret
jns
daa
xchg
push
inc
daa
iret
iret
add
cltd
hlt
xor
mov
cmp
xor
dec
out
pop
test
pusha
scas
mov
lods
push
ljmp
dec
cmp
aaa
shll
movsb
push
testb
clc
sub
js
xor
ficomps
das
es
dec
int
ret
add
iret
sub
xchg
add
inc
notl
and
enter
dec
push
les
in
push
cmpb
js
cmpsl
repnz
add
lcall
loopne
push
clc
inc
fptan
test
xlat
movsb
cmp
cld
cltd
or
dec
xchg
and
xchg
sbb
dec
cmp
sub
dec
mov
out
cs
insb
sub
rorb
out
repz
scas
jb
scas
cli
cld
outsl
add
call
ja
push
pop
adc
es
adc
sbb
adc
push
andb
hlt
mov
stos
cs
jl
enter
std
into
cmp
scas
pop
mov
aaa
ds
mov
cli
sbb
notl
out
pop
mov
sbb
dec
mov
xchg
cmp
sti
and
icebp
sar
movsb
mov
lcall
std
xor
in
repnz
enter
jns
mov
std
aam
inc
loopne
loope
std
or
divl
cld
mov
jnp
cwtl
addr16
sub
sarl
push
lcall
repz
js
in
fdivr
push
and
mov
call
outsl
sbb
xchg
mov
adc
pop
repz
dec
leave
das
sub
hlt
mov
or
sub
lcall
push
xchg
js
mov
xor
sbb
and
in
sbb
dec
pop
mov
pop
ds
push
add
ret
hlt
jne
sub
out
pushf
dec
test
ja
mov
xchg
sub
int
insb
inc
pop
icebp
imul
push
stos
or
scas
pop
mov
xlat
adc
add
call
or
sarb
int3
mov
add
jne
mov
inc
pop
jge
stc
xor
ljmp
cmpsl
fbld
mov
lret
jecxz
xchg
xchg
jne
loope
or
mov
je
pop
aaa
add
data16
iret
stos
push
pop
mov
mov
xorb
xchg
push
loope
jge
fiaddl
daa
jge
sbb
popf
pop
jmp
test
pop
cmp
jae
inc
out
jg
push
icebp
in
adc
dec
leave
add
mov
pop
inc
mov
sub
scas
dec
movb
in
or
xchg
pop
je
add
mov
cltd
push
stos
ficompl
stos
hlt
ret
push
mov
orl
xor
cmp
int
fisubrs
gs
imul
rclb
daa
enter
dec
addr16
pop
jns
popa
mulb
scas
mov
pop
rcr
lods
inc
out
sbbl
js
sahf
dec
insb
icebp
push
hlt
jbe
pop
push
cmp
hlt
into
pop
rolb
xchg
mov
enter
enter
sti
dec
fsts
jl
push
sbb
xchg
adc
loop
cmc
fisubrl
mov
pusha
movsl
aaa
pop
sub
lret
leave
fildl
mov
push
mov
or
inc
cmp
sbb
sti
jp
daa
adc
lea
lock
fsubrs
ss
ljmp
movsl
mov
cmp
fistps
dec
js
lea
ljmp
les
jp
scas
shll
jb
mov
push
push
jnp
xlat
push
bound
aad
mov
andl
aad
inc
idiv
inc
sub
sub
repnz
test
fisubs
mov
or
test
xor
push
sub
inc
lcall
mov
push
in
test
sbb
out
xor
into
jp
sub
es
mov
insl
imul
mov
out
xchg
out
lods
enter
push
aas
mov
dec
adc
sbb
in
setbe
orl
xchg
insb
mov
test
adc
or
sbb
cmp
xchg
popa
test
shlb
and
mov
dec
loopne
dec
addr16
jnp
pop
fmuls
imul
cmpsb
cltd
push
daa
mov
xor
outsl
mov
in
xor
push
push
orl
pop
pop
fucomi
mov
fwait
pop
je
dec
pop
sbb
xchg
cmp
test
aam
sub
adc
jne
scas
test
push
cwtl
mov
and
adc
sub
cmp
enter
movsb
loop
xor
push
fdivs
rol
cmp
faddl
jp
pop
push
enter
popa
pushf
fs
xchg
push
mov
cmp
call
mov
cmpsl
and
sub
or
lcall
subl
lret
int
inc
xor
mov
jmp
pop
and
lcall
mov
or
cmp
call
pop
ret
enter
add
sbb
sub
or
dec
mov
lret
out
int3
sub
pushl
xchg
aas
test
imul
mov
mov
test
inc
or
cs
pop
leave
fadds
aaa
clc
icebp
scas
lods
sarl
and
shrl
movsl
or
es
sbb
fldlg2
stos
and
test
out
push
add
push
xor
enter
aam
push
iret
pop
push
in
cmp
inc
imul
shlb
jne
shl
add
hlt
dec
xor
icebp
in
repnz
stos
movsl
mov
test
xlat
int3
stos
movsl
adc
push
shl
mov
int
jno
mul
sub
push
pop
mov
inc
xchg
cmp
push
div
test
dec
pop
mov
xchg
cmc
mov
roll
outsl
cli
ficomps
cld
mov
repnz
stc
adc
sub
getsec
divb
cltd
mov
mov
cmp
cmc
xchg
hlt
out
es
jmp
jp
jbe
mov
mov
inc
mov
sub
and
inc
bnd
or
or
dec
loop
push
jb
adc
std
add
cmp
fwait
sub
push
js
dec
aaa
mov
fimuls
sub
cmc
iret
mov
das
sbb
and
mov
sbb
cs
aas
sub
push
xor
cwtl
dec
arpl
mov
mov
cmpsl
xchg
fstps
popa
dec
pop
mov
mov
xchg
pop
push
dec
out
mov
aad
adc
add
jmp
mul
jnp
sub
push
loop
lcall
rorb
fildl
push
or
push
rorl
push
int
lret
and
aas
subl
int
add
das
dec
ret
shl
mov
fwait
xor
lods
inc
push
comiss
pop
dec
inc
cld
sbb
add
fdivs
ret
sub
dec
xchg
push
sbb
pop
push
xchg
lret
and
pop
and
fstpt
dec
int
stc
rclb
push
lock
mov
scas
int3
push
xlat
aas
pop
es
fdivl
lds
shl
cmpsb
hlt
daa
ret
test
pop
mov
sbb
push
mov
push
pushf
xlat
je
test
push
sar
addr16
xchg
clc
mov
xor
adc
dec
mov
mov
repz
inc
xor
es
jge
jo
repz
and
mov
fwait
xchg
xchg
test
jecxz
nop
movsl
adc
jmp
out
pop
rorb
inc
and
imul
mov
jle
rolb
mov
cmpsl
ds
push
outsl
nop
jecxz
call
sub
jbe
les
orb
sarl
sbb
mov
lds
sbbl
pop
pop
jge
sub
sarb
dec
push
in
nop
sbb
cmp
mov
loope
cmc
cmp
mov
das
insb
xchg
xchg
loope
mov
hlt
shl
xchg
lret
mov
xchg
inc
inc
xchg
mov
adc
arpl
movsb
lods
scas
test
pop
push
in
sbb
std
push
xorb
sub
adc
xchg
push
mov
ljmp
jge
negb
mov
lea
ja
sbb
stos
mov
pop
inc
icebp
adc
mov
mov
insb
mov
or
adc
addr16
aaa
dec
sub
lret
add
dec
test
dec
cmp
out
adc
loopne
fwait
cmp
mov
sub
push
fs
xchg
decb
adc
pop
pop
lock
xchg
cmpsb
dec
mov
in
mov
jne
jnp
sahf
mov
inc
in
add
fistl
dec
or
jecxz
inc
addr16
sbb
lds
pop
loope
fdivrl
mov
mov
mov
out
sub
xchg
dec
cmpsb
out
xchg
xor
dec
cwtl
das
cmp
js
or
push
lret
dec
adc
mov
or
int3
enter
cltd
add
adc
sbb
or
mov
jle
jge
int
jo
sahf
add
jmp
xchg
dec
xor
and
mov
lret
pop
fdecstp
pop
cmp
js
out
scas
stc
sub
ret
cmp
test
fisubl
and
cwtl
xor
in
cld
mov
fstp
jle
imul
rcrb
fcomps
insl
push
loop
jb
stos
add
cmp
jp
imul
or
in
xor
cmp
pop
xor
cmp
or
push
imul
mov
dec
mov
lret
mov
sub
xchg
jo
jbe
lret
jge
mov
test
pop
test
je
inc
in
adc
jo
stc
imul
pop
xchg
push
cmpsl
sub
je
jp
mov
jb
iret
push
mov
mov
out
sub
out
push
xchg
mov
add
test
inc
jp
in
mov
mov
lret
out
aad
sbb
cmp
sub
jns
fistpl
dec
add
cmpsb
add
aad
mov
push
mov
push
sbb
into
add
stc
sti
or
cmp
daa
mov
and
insl
jmp
shl
jge
inc
adc
fwait
add
dec
call
fistl
test
xchg
clc
je
rcrl
mov
pop
dec
cmc
cmpsb
mov
inc
fsubr
and
pop
subl
out
pop
mov
aas
mov
pop
mov
lcall
add
sbb
iret
cli
cltd
jbe
outsl
jno
mov
adc
jne
stos
sti
pop
and
lds
jp
xor
xorl
cmp
aaa
lahf
fs
data16
pop
inc
push
lret
and
pop
jl
mov
and
testl
aam
inc
das
push
dec
jno
addr16
sarl
inc
iret
and
cmpsl
rorb
sti
mov
ljmp
dec
cld
mov
pop
adc
clc
aaa
pop
ret
sti
dec
xlat
sti
pop
je
mov
xchg
push
sub
test
gs
in
pop
ss
inc
sbb
fdivs
ret
mov
add
jle
or
out
adc
rcrb
imul
mov
ss
pushf
jg
jmp
cmc
or
mov
lock
fsubp
arpl
cmpsl
push
scas
cld
jno
loop
int
jp
lcall
lds
push
rcll
push
jae
inc
cmp
adc
dec
lret
out
mov
jnp
aad
add
mov
aam
out
jge
cs
mov
jno
push
inc
inc
std
adc
leave
test
in
stos
inc
arpl
das
lods
loop
push
xchg
adc
test
gs
pusha
in
in
popa
adc
mov
cmc
add
inc
push
jg
jp
cmpsb
cmp
js
and
sub
add
jmp
xchg
leave
mov
or
outsb
in
mov
dec
jmp
sar
icebp
xchg
nop
sub
adc
jecxz
loopne
mov
lock
ja
adc
outsb
mov
fnstenv
fbstp
xchg
mov
cmp
rcrl
or
push
sbb
cmc
iret
test
dec
mov
or
sub
aad
xchg
push
mov
sub
insb
xchg
insb
inc
in
and
inc
sarb
adc
fdivs
out
shrb
mov
cmp
mov
sbb
cmp
in
dec
cmp
xchg
cmp
xchg
xor
addr16
faddl
sub
sahf
shrl
pushf
nop
xor
inc
add
les
jne
push
roll
push
adcl
bsr
mov
adc
in
mov
xchg
and
jecxz
aas
mov
mov
subb
sub
out
js
cltd
inc
repnz
cli
aad
jecxz
pop
test
xchg
cmp
sbb
idivl
cmpsl
rol
inc
ficoml
mov
imul
mov
jbe
clc
popf
jbe
or
pop
cmpsl
test
jae
testb
into
jno
out
or
sub
sbb
xlat
je
xor
jno
sub
mov
into
rorl
outsl
loop
std
add
adc
iret
pop
mov
xor
lahf
jl
and
imul
shr
push
ret
mov
fs
daa
ja
sti
daa
and
fdiv
fldt
ret
xchg
push
repz
cmc
fldt
adc
inc
cmp
test
in
pop
jnp
loope
cmpsl
daa
jp
in
gs
pop
fsubr
lds
stos
test
add
or
xchg
mov
mov
jno
inc
jmp
insb
add
adc
out
lods
xchg
mov
inc
fs
inc
loop
inc
mov
jbe
sub
sub
mov
xor
push
inc
les
and
xchg
dec
cmp
cmp
cmp
out
push
repz
fstl
insb
int
rcrb
out
std
sahf
xlat
es
jae
int
mov
test
nop
shrl
push
jo
xor
call
fimuls
lahf
mov
call
mov
enter
cmp
dec
cmp
jge
sahf
mov
adc
jbe
sbb
cmpsb
mov
cmp
push
ss
xchg
mov
mov
cli
sarl
mov
xchg
ret
movsb
cmpsl
pop
mov
fs
jns
mov
inc
das
ljmp
loopne
mov
sub
mov
push
or
aad
xchg
test
or
cmp
jg
xor
dec
cmp
cmpb
sbb
pop
jno
cltd
lods
arpl
shll
shr
xchg
rcll
adc
popf
push
add
jne
mov
test
jne
sub
stos
rolb
push
mov
outsl
mov
repnz
push
sbb
or
or
lret
mov
xlat
push
mov
sub
adc
adc
mov
mov
add
daa
das
dec
jg
les
jle
add
lcall
pop
insl
out
xor
je
repz
or
sbb
mov
dec
cld
popw
cmp
sbb
dec
cmp
imul
cmp
jae
inc
js
fdivr
xchg
scas
mov
sbb
or
cli
push
hlt
mov
and
hlt
sbb
ss
ds
out
out
pop
shrl
roll
sahf
ja
and
dec
aam
mov
stos
cmp
push
mov
dec
aas
je
xchg
mov
shl
adc
lock
mov
shrb
adc
adc
out
mov
xor
fs
jg
add
jp,pt
dec
sbb
jno
sbbb
rcr
xchg
jns
add
push
or
or
cmp
jp
testl
fstl
outsl
pop
into
out
xchg
idiv
xchg
pushf
insb
js
add
mov
icebp
jecxz
sub
adc
in
mov
scas
mov
or
sbb
and
in
fwait
sahf
sub
add
adc
in
cmp
outsb
les
and
cli
pop
adc
loopne
mov
stc
adc
pop
or
fcoml
jns
mov
push
jns
repz
xchg
lret
stos
xchg
addb
stos
fcoml
xchg
lcall
cltd
cmpsl
decl
inc
jae
stc
fmulp
jl
fwait
or
gs
sbb
pop
imul
push
mov
inc
fisubrs
imul
pop
adc
shlb
pop
sub
std
push
jo
gs
push
and
std
sub
cmp
nop
mov
push
movsl
fstpt
pop
inc
jp
or
jl
xor
je
scas
popa
fcoml
mov
dec
mov
xchg
inc
negb
sarb
fldenv
push
mov
mov
xchg
mov
pop
sarb
stos
arpl
jecxz
stos
adc
loop
pusha
mov
pop
sub
sub
and
arpl
in
mov
int3
shr
xchg
je
aas
jbe
lea
mov
imulb
roll
in
hlt
sub
out
mov
in
xchg
mov
les
xchg
jl
push
outsb
cmpsb
ds
pushf
popa
inc
int
mov
mov
mov
add
jns
jns
dec
lahf
lea
mov
mov
pop
daa
xchg
gs
pop
and
jg
cmp
push
icebp
or
push
ja
mov
cmpl
paddsb
and
out
dec
adc
dec
xor
mov
data16
pop
xor
dec
push
stc
sub
mov
xchg
push
push
clc
sti
outsb
fimuls
push
xor
or
cmc
dec
mov
jae
sbb
add
fwait
jecxz
les
mov
es
push
sahf
mov
iret
mov
push
and
inc
jl
xchg
lret
shlb
sarb
orl
jbe
notl
movsl
iret
jmp
test
outsb
jns
dec
fsubr
xchg
std
sub
pusha
sbb
inc
add
cmc
jo
mov
pop
pop
sub
inc
cmp
js
fisttpl
lahf
mov
cmp
gs
movsb
sbb
js
leave
push
adc
icebp
pop
xchg
sub
repz
arpl
xor
int
add
or
ficoml
mov
pop
stos
adc
lret
adc
in
fldt
jmp
mov
inc
jns
xchg
iret
or
dec
repnz
pusha
stos
xlat
jp
mov
sub
mov
lea
cmpsl
sub
test
mov
loopne
dec
sub
jle
ret
xor
stc
stos
cmp
inc
mov
stc
sub
and
add
cmp
xor
mov
sbb
xchg
daa
xor
imul
cltd
test
jmp
jnp
into
outsb
enter
adc
pop
loop
dec
push
fs
rcll
or
push
jb
leave
cmp
xchg
rcrb
stos
icebp
in
xor
inc
or
push
cmp
cmpsb
std
jno
xchg
test
or
popa
and
iret
add
sbb
imul
mov
cld
and
adc
jp
xchg
adc
sub
adc
fcompl
adc
icebp
ja
cltd
dec
mov
jp
push
cld
mov
sub
dec
js
xchg
push
jl
adc
scas
test
mov
jmp
lock
aam
pop
jg
inc
nop
push
pop
jg
jp
inc
push
fnstenv
movsb
jae
ret
out
xor
push
dec
sub
jl
jmp
arpl
mov
out
iret
adc
cwtl
movsb
lods
test
repnz
or
movsl
sarb
pop
lea
stc
sbb
les
ret
xor
mov
pop
sub
adc
xchg
call
mov
addr16
mov
bswap
lods
push
mov
push
pop
cmpb
pop
jbe
xchg
pop
add
out
icebp
jne
cmpsb
sbbl
push
fcmovnbe
clc
notb
push
xor
cmp
jle
in
arpl
insb
and
bound
ds
leave
in
cs
ljmp
lea
sub
pop
sub
aaa
das
mov
mov
outsl
std
lods
sub
push
xor
add
lret
xchg
dec
lods
sbb
xchg
stc
stc
pop
out
sbb
call
mov
jbe
push
sub
fiaddl
int
inc
sti
xchg
xor
dec
jns
push
jae,pt
out
cmp
shrl
das
adc
cmc
fbld
lcall
dec
jb
mov
ret
adc
paddsb
adc
sub
pop
dec
dec
out
jge
test
jecxz
es
mulb
jl
pop
xchg
fisubrl
stc
imul
fisubl
or
jp
mov
into
pop
out
loopne
jb
enter
push
and
sbb
out
and
add
pop
popf
adc
repz
or
xor
pushf
mov
and
cmp
jmp
nop
mov
sub
stos
push
data16
hlt
sub
sbb
int
out
fnstcw
pop
xchg
ljmp
divl
cmp
mov
imul
gs
bound
cmp
adc
lret
outsb
pop
mov
jecxz
fcoml
sub
cmpsb
fadds
sbb
fisttpll
adc
popa
loope
jbe
testb
pop
mov
cld
mov
movsb
int
lds
cmc
fcmovnu
fisttpll
pop
in
dec
into
and
push
in
test
inc
push
sbb
out
int3
push
lret
into
add
mov
push
enter
jge
and
sub
out
sub
mov
mov
jg
jnp
jnp
xchg
fldl
sbb
xor
cmp
enter
inc
into
clc
push
cltd
out
enter
sub
mov
and
jmp
ret
jecxz
cmp
xchg
mov
jmp
cmp
dec
mov
xor
arpl
fbld
jae
pop
dec
push
iret
mov
push
mov
mov
sbbb
stc
jle
and
dec
sub
xor
test
movsb
mov
pop
fstpt
fiaddl
mov
scas
clc
lcall
mov
inc
or
clc
jecxz
movsb
xor
data16
fsubrl
cmp
sbb
add
daa
hlt
std
cmp
push
jb
inc
mov
mov
and
xchg
mov
lods
ljmp
jge
leave
xor
stc
shrl
lret
je
test
inc
daa
stos
and
dec
dec
fnsave
push
flds
mov
roll
dec
xchg
mov
int3
push
pop
push
pop
in
pusha
aam
das
mov
jl
mov
inc
repnz
test
jno
fildll
scas
dec
pusha
sarl
imul
push
cmp
mov
insl
or
ljmp
jle
push
pop
in
es
imul
scas
push
jno
jns
rcl
addr16
in
hlt
mov
leave
repz
dec
and
add
lret
pop
sbb
mov
jge
cmp
lock
xchg
or
or
mov
das
lret
lock
test
sti
fstps
mov
sbb
out
repz
xchg
mov
shl
les
jnp
cmp
dec
jnp
pop
cli
arpl
adc
clc
dec
sub
movsb
add
fistl
pop
lcall
sub
mov
adc
xor
sti
xor
in
fiadds
mov
movb
push
cwtl
popf
repz
cmp
dec
pop
stc
pop
jmp
sbb
testb
dec
dec
fstl
sbb
mov
mov
xor
stos
cltd
push
das
xchg
mov
xchg
jmp
xor
jg
dec
in
test
ret
arpl
fwait
jp
cmp
jae
push
and
cli
xor
arpl
out
shll
arpl
imul
dec
adc
out
dec
pop
mov
sar
xchg
inc
xchg
and
add
sub
cmp
call
cmp
addb
xchg
loopne
je
scas
cmp
push
add
push
fucomp
mov
dec
jmp
sub
mov
pop
inc
fildll
push
jge
fisubl
lea
out
add
pop
adc
inc
mov
subb
leave
ljmp
into
sub
ficomps
sbb
popa
jge
jo
push
cmpsb
shl
imul
iret
xor
mov
pushf
sti
mov
xchg
test
popf
pop
pushf
mov
sub
lret
jns
aas
xchg
test
stos
adc
lods
or
and
sbb
les
xchg
idivb
dec
jg
jb
fsts
mov
in
mov
xchg
push
adc
out
loope
fisttps
std
stc
dec
sbb
inc
data16
jns
sub
or
xchg
jg
mov
ret
jne
add
repz
push
pop
xchg
pop
aaa
xor
cld
jnp
sub
mov
jo
aaa
out
dec
aaa
fisubrl
mov
xor
fnsave
testl
int3
pop
outsb
roll
sbb
cmp
cmpb
je
mov
fcompl
test
ja
jecxz
mov
or
into
push
test
mov
insb
mov
pop
mov
jg
mov
mov
cmp
mov
push
addr16
ret
dec
cli
stc
mov
les
out
lods
cld
mov
mov
flds
pop
cli
stos
int3
loope
ficoml
inc
pop
in
clc
xor
lock
inc
pusha
inc
cmc
jecxz
xchg
cld
ss
repz
hlt
js
repz
xchg
sub
dec
cmc
push
push
dec
and
jbe
rcr
out
out
les
lret
adc
int3
bound
mov
add
and
cmpsb
mov
add
iret
arpl
push
ror
push
push
push
mov
mov
dec
test
xor
jno
mov
inc
pop
jno
mov
mov
dec
mov
gs
clc
adc
out
cmp
xchg
sbb
adc
cmc
notb
data16
repz
cmp
out
in
xchg
rolb
jne
xor
dec
or
lcall
xchg
pusha
ja
mov
jnp
iret
add
clc
addr16
int3
out
cmp
iret
in
xchg
movsb
xchg
mov
incb
xchg
loope
bound
stc
std
shl
hlt
jbe
pop
sahf
sbb
sub
mov
jb
mov
cmp
xchg
rcrb
xchg
pop
rcrl
and
jmp
mov
vcvtsi2sdl
dec
movsb
inc
ret
data16
fdivs
scas
mov
add
scas
xlat
stos
jg
mov
ret
ret
scas
mov
lret
dec
mov
imul
leave
pop
loopne
out
mov
rcrb
fadd
jge
mov
movsl
rclb
clc
scas
test
outsb
movsl
pop
inc
call
push
and
jmp
aaa
ljmp
mov
in
popf
pop
inc
rolb
mov
adc
adc
in
push
mov
test
mov
mov
mov
fsubs
xchg
mov
mov
push
xor
ds
add
add
outsb
shll
imul
ret
jb
mov
dec
mov
dec
test
mov
dec
dec
cld
mov
lods
jle
and
jmp
scas
movsl
add
cltd
nop
and
and
pushf
xor
mov
call
outsb
dec
cmp
fwait
dec
daa
pop
mov
dec
adc
mov
push
stos
xor
mov
inc
push
shll
mov
out
pop
fsubs
push
pop
xor
lcall
inc
inc
test
leave
ret
cwtl
xor
mov
jns
das
imul
lret
movsl
daa
push
lcall
and
lds
sar
test
clc
mov
out
out
leave
scas
nop
mov
mov
cmp
adc
je
notb
gs
cmp
xchg
nop
in
add
ljmp
fistpl
xlat
or
sbb
dec
xchg
jno
pushf
cmpsb
xchg
sub
lock
jae
push
sahf
push
xchg
or
in
sarb
cmp
popa
mov
scas
insb
in
cld
push
jno
jmp
cmc
imul
ja
lock
push
mov
sub
imul
jnp
outsl
jle
add
push
mov
jl
sub
or
cmpsb
popa
mov
push
icebp
sbb
mov
mov
add
jnp
mov
pop
cmp
mov
sbb
je
inc
ljmp
ja
sbb
jle
cmpsb
jp
lds
mulb
xor
jg
call
nop
fldt
clc
adc
pushf
lret
rorl
orb
scas
dec
test
lods
mov
push
mov
and
jg,pn
cmp
or
test
cmpb
leave
fidivs
jnp
sub
sarb
mov
rcr
out
dec
mov
hlt
xor
xlat
bound
inc
mov
jg
xor
and
dec
and
xorl
movsb
fmuls
add
mov
scas
scas
xor
sbb
inc
or
jmp
loop
xchg
adc
and
jp
xor
cmp
jno
adc
lcall
divb
pop
cmp
cmp
dec
enter
and
loope
sbb
aad
hlt
mov
xor
add
pop
mov
mov
fs
mov
leave
sbb
in
mov
mov
test
and
fadd
repnz
subb
and
mov
push
int
pop
int
nop
lcall
in
sub
lock
leave
std
push
nop
in
ljmp
add
ret
push
fwait
pop
xchg
mov
dec
das
roll
flds
in
ficomps
ror
push
cmp
aad
js
mov
ljmp
cltd
adc
or
cmp
in
jnp
in
loop
pop
or
lcall
js
stos
in
mov
or
mov
cltd
repnz
xchg
mov
mov
jo
jno
pop
jge,pn
in
out
jnp
jle
push
hlt
dec
je
movsb
negb
mov
imul
repnz
daa
pop
addr16
call
xchg
fistl
mov
push
xor
dec
addr16
insb
pop
sbb
test
mov
push
loope
push
fcomps
test
lcall
xor
xchg
stc
cmpsl
inc
push
cmp
jecxz
xchg
pop
pop
aas
and
imul
mov
inc
iret
out
or
xchg
fst
in
sub
pop
imul
std
iret
mov
pop
cmp
ja
add
sub
loope
mov
push
xchg
pop
clc
stos
leave
push
fidivrs
fld
sub
out
dec
or
iret
test
sub
dec
or
aaa
scas
aad
xchg
enter
xchg
cmp
xchg
xor
pop
cmpsb
xchg
jnp
fsubs
test
pop
pusha
addr16
mov
sarl
xlat
xchg
mov
dec
test
jl
xor
push
hlt
dec
push
dec
xor
jle
clc
in
mov
inc
stc
jns
sysret
dec
fiaddl
dec
xchg
jmp
xchg
aaa
test
push
pop
and
daa
push
jbe
popf
push
xor
jp
xor
jnp
call
addl
int3
mov
lock
fcoml
jge
jb,pt
xchg
not
ljmp
lcall
or
push
mov
xor
adc
cltd
inc
sbbl
sbb
push
mov
jmp
fmull
cmp
push
xor
mov
lret
and
fisttps
mov
pop
mov
fsubl
push
jp
or
insb
out
mov
les
cmp
pushf
mov
mov
cld
in
out
cmc
sub
into
add
mov
call
inc
fildll
ss
push
in
hlt
shlb
repnz
hlt
lcall
mov
mov
mov
xchg
ret
cltd
sbb
inc
xchg
dec
shlb
dec
mov
mov
enter
sub
fs
test
or
popf
or
rorb
movsb
mov
ret
sahf
leave
pop
sbb
test
jg
xor
dec
or
cmpsb
xor
dec
jl
test
stos
jae
std
lahf
xchg
pop
pop
jle
lcall
lret
mov
into
mov
sub
in
movsb
sbb
fisttpl
cmpsl
mov
xchg
stc
mov
xchg
cmp
or
sub
mov
dec
mov
rorl
sub
lcall
cltd
neg
stos
lret
jp
xor
sbb
fcompl
adc
xchg
adc
or
outsb
push
xchg
mov
cmp
pop
mov
mov
lret
fidivs
test
mov
mov
les
fsubrl
int3
int3
push
push
ljmp
cli
imul
mov
mov
shrb
nop
sbb
int
push
dec
pushf
sahf
mov
inc
mov
adcl
or
adcb
call
insb
dec
adc
mov
mov
jne
ja
call
push
das
push
cmp
sbb
mov
push
xchg
push
js
push
andl
xchg
push
into
xor
cmp
lret
push
jl
outsb
add
dec
mov
cmp
pop
ret
lods
sub
xlat
sbb
insl
ljmp
rcll
pop
mov
aaa
mov
push
repnz
add
add
xor
cmp
adc
repz
jb
inc
or
arpl
lahf
inc
clc
or
test
jl
push
mov
hlt
pushf
repz
jbe
cmpsb
aam
push
cmp
xchg
sahf
xor
add
mov
pop
out
int3
out
mov
adc
imul
out
lcall
sti
cltd
jmp
out
shrl
js
cmp
adc
fisttpll
std
xor
fidivs
xor
push
std
cmc
jg
ja
jg
loop
pop
mov
jl
or
push
mov
mov
adc
clc
repnz
scas
push
subl
lock
rcll
data16
jne
cmp
cld
pop
lods
shll
sbb
mov
adc
mov
in
mov
std
mov
fwait
repnz
mov
orl
and
adc
and
popf
stc
adc
or
imul
fimull
dec
in
test
repnz
cmp
pop
mov
ss
out
adc
inc
xor
popa
mov
sbb
pop
sub
out
xor
dec
int
std
push
lret
icebp
movsl
into
pop
jecxz
jg
jecxz
inc
sub
mov
jno
push
lahf
movsl
sub
jbe
sbb
push
push
add
out
pop
es
mov
lock
movsb
cli
loope
adc
sbb
pop
stc
clc
or
lods
ret
mov
rolb
fiaddl
mov
jmp
stos
fisttpll
and
push
rorl
loope
std
in
dec
js
xor
jb
mov
fadds
lds
push
sub
sub
jmp
and
cmc
testl
sbb
cmp
inc
mov
xchg
lods
jp
sbb
popa
aas
loopne
dec
xor
and
sub
nop
shrb
daa
pop
push
sbb
mov
pop
sub
pop
or
sbb
lret
cmpsb
mov
fdivl
jmp
fcmove
lahf
mov
or
fsubrl
xor
lods
pop
cmpsb
stc
leave
sbb
mov
adc
mov
out
movsb
in
pop
add
ret
cmp
or
call
lods
mov
pop
imul
out
daa
push
xchg
or
mov
shrb
adc
and
jg
push
gs
xchg
sbb
mov
cmc
inc
or
mov
sar
lahf
sti
pop
popa
sbb
xchg
mov
sbb
fmull
lea
int3
enter
lods
enter
push
repnz
and
adc
bound
inc
ret
add
mov
jmp
nop
pushf
popa
repnz
rclb
ss
mov
pop
clc
adc
lods
jbe
push
pop
mov
cld
fldl
je
push
lock
or
jmp
ljmp
cwtl
jle
out
movsb
insb
fcoms
je
push
push
sbb
cmp
sbb
lods
aas
xchg
rcrb
jae
lds
jecxz
push
div
leave
push
int
inc
pop
xor
loop
and
adc
lods
mov
mov
xchg
xchg
or
push
inc
mov
cmp
xor
xor
enter
int3
or
jp
xchg
dec
es
notb
fistl
ds
lret
mov
jnp
jge
loop
xchg
ja
xchg
dec
push
sti
lock
mov
test
jecxz
xor
mov
int
or
mov
xor
sbb
lret
enter
std
call
mov
mov
outsb
ljmp
mov
jle
cmp
cmpsb
stos
pop
xchg
dec
adc
ss
js
iret
inc
mov
adc
jge
fisttps
xchg
adcb
xchg
jmp
mov
sbb
xchg
ja
pushf
outsb
inc
out
ficoml
cmp
sub
xor
mov
sti
test
sbb
and
cmp
mov
add
out
adc
sbb
test
xor
ss
cmc
adc
mov
test
hlt
inc
cmp
bound
scas
add
test
outsb
mov
and
pop
push
neg
shll
xchg
mulb
andl
popa
or
pop
push
mov
pop
loop
das
pop
adc
or
dec
xchg
nop
xchg
and
mov
stc
out
mov
daa
push
insl
ja
pusha
and
dec
adc
xor
fwait
mov
imul
call
pop
sub
xor
push
cmp
or
mov
push
fisubrs
jle
enter
outsl
sub
sbb
hlt
add
lea
mov
pop
mov
in
add
popa
cwtl
outsb
pop
out
or
ficoms
or
cmp
lahf
and
in
add
ret
rcl
dec
movsb
pop
cmp
repz
mov
xchg
sahf
mov
sarl
test
iret
jnp
aaa
pusha
enter
inc
jp
inc
scas
in
xor
sub
mov
mov
xor
rclb
loope
jmp
in
xor
lea
dec
aaa
xchg
daa
mov
les
sbb
scas
pop
mov
std
scas
pop
dec
jge
pop
dec
xchg
dec
mov
xchg
nop
jnp
lods
daa
mov
mov
test
and
sub
lock
sahf
lods
cmp
sbbl
jle
sub
arpl
jmp
xorl
mov
adc
mov
das
xchg
cmp
cmp
icebp
test
sbb
or
dec
cmp
mov
fsubl
into
lcall
enter
pop
add
inc
dec
imul
cmc
mov
xchg
cmpl
mov
xor
lahf
fwait
fs
dec
movsl
jbe
pop
test
mov
push
dec
stos
fisubl
xchg
dec
neg
rorb
loopne
pop
push
hlt
cmp
ds
dec
push
bound
xor
mov
cmp
popf
or
mov
insb
sub
sbb
pop
adc
mov
jne
jmp
xor
xor
adc
dec
fldenv
pop
lds
outsl
test
inc
sub
jns
cli
popa
mov
mov
jecxz
sti
add
xor
mov
aaa
ret
lret
xor
and
cmp
inc
xchg
add
ds
push
mov
lea
mov
daa
and
ds
cmp
add
mov
and
insl
outsl
fstpl
or
mov
or
cmp
loopne
sub
icebp
mov
ja
in
ret
inc
sbb
std
stos
add
ret
test
std
mov
cmc
dec
push
pop
out
push
jo
addr16
ret
repnz
mov
pop
xchg
xor
push
push
cwtl
les
dec
xor
pop
idivl
std
fcmovne
or
sbb
imul
test
adc
dec
push
ds
enter
cmp
pop
lds
mov
push
jo
stos
push
dec
imul
jne
imul
call
mov
pop
das
in
pop
aad
lahf
xchg
loopne
mov
arpl
or
mov
in
cmp
fiaddl
subb
sarl
cmp
mov
mov
xor
pushf
inc
lcall
out
xchg
mov
push
movsb
sbb
cmp
xchg
or
xor
push
pusha
push
sbb
add
and
scas
mov
pop
mov
push
imul
jge
call
iret
or
mov
dec
jle
pop
sub
mov
push
pop
imul
fldl
ja
add
jnp
cmpsb
scas
push
test
or
movsb
fucomp
xchg
or
aas
jp
pushf
scas
push
sub
pop
and
and
mov
fnstenv
ret
dec
mov
jbe
out
fadds
fwait
jp
in
or
push
stos
push
push
daa
cli
sub
rcrl
cld
enter
movsb
mov
cmp
call
sub
data16
outsl
inc
outsl
sub
ds
test
or
push
sbb
cmp
mov
mov
scas
add
xchg
or
popa
lea
aad
sbb
aaa
xlat
jnp
out
cmp
ja
sbb
push
int
inc
mov
sub
insb
aaa
xor
pop
lods
fisttpll
mov
add
or
loope
and
js
mov
div
ret
or
sbb
pop
loopew
cmc
sub
pop
fldpi
or
mov
and
repnz
pop
or
ret
out
jo
int3
lahf
in
dec
mov
jns
testb
dec
aad
mov
fdivrl
mov
inc
jno
icebp
fs
loope
rcrb
cmp
xor
dec
xchg
jbe
pop
stos
inc
jg
mov
fs
inc
icebp
sub
and
jle
bound
sub
jl
pushf
hlt
shl
call
stos
cmpsl
cli
scas
pop
sbb
add
xor
dec
fiaddl
add
loopne
popa
inc
push
xchg
xchg
xchg
test
xchg
mov
repz
imul
pop
mov
pop
add
xor
push
jge
ja
adcl
push
cmpsl
pop
cmp
jg
cmpsl
outsl
mov
aas
dec
jl
mov
pop
into
sub
loope
add
dec
das
lods
xchg
pop
xor
xchg
rol
or
cmp
out
mov
mov
adc
sub
pcmpgtw
push
dec
jmp
or
das
push
aam
ja
rol
and
movsl
cmpsb
pop
xor
and
mov
xor
data16
scas
inc
xchg
push
mov
sub
pop
cmpsl
mov
dec
xor
not
shlb
sti
or
sbbb
hlt
or
mov
out
dec
mov
test
aad
fwait
idivl
mov
add
hlt
cmp
push
emms
xor
outsl
leave
add
add
pop
loope
addl
jno
ret
repnz
movl
and
pushf
dec
call
and
xor
cmp
mov
scas
es
jae
icebp
push
xchg
pop
jg
aas
pop
pop
add
or
xor
jb
fildll
leave
pushf
inc
pop
xor
xor
pop
cltd
pop
fisubrs
cmp
lock
inc
dec
lods
arpl
fistpl
aad
jp
jl
out
in
and
jp
push
jp
xor
sbb
add
push
jno
mov
jns
mov
mov
int
gs
inc
into
mov
sub
lods
int
in
dec
jae
push
mov
movsl
cwtl
cs
movsl
dec
outsl
sub
inc
sub
inc
xchg
xchg
fdivr
imul
nop
pop
leave
scas
scas
movaps
mov
jl
inc
dec
pop
int
popa
loopne
cltd
js
out
mov
lds
add
popa
test
fcomps
jb
out
push
aaa
lds
daa
mov
add
mov
ficomps
xchg
lahf
inc
cmp
cld
cwtl
xchg
push
push
imul
fistpll
mov
js
inc
sub
int
mov
lds
jge
movsl
adcb
test
int3
fwait
add
sarl
mov
lret
sar
add
loop
cmp
shrl
ja
std
in
hlt
cli
nop
jno
sbbl
fildll
mov
fidivs
pusha
nop
gs
addl
or
jge
mov
outsl
insb
flds
and
loop
cmp
mov
jo
lahf
sub
adc
and
call
cmp
cmp
push
sub
mov
mov
stc
and
mov
sarl
lods
cwtl
add
and
or
push
pop
inc
sub
std
push
shll
ss
xor
and
xchg
dec
or
mov
sub
ja
cmpsl
je
stc
cwtl
mov
mov
ljmp
jbe
fmull
shr
lock
xchg
sti
inc
ljmp
fcmovnbe
mov
jle
addr16
mov
leave
mov
cmp
lods
xchg
cmc
adc
xchg
stos
jle
push
add
loopne
jo
xchg
pop
daa
mov
enter
cmpsb
scas
push
adc
in
imul
loope
xor
repz
cmc
push
fidivrs
insb
cmp
movb
and
push
pop
in
repz
mov
mov
xchg
fmull
mov
sub
and
addr16
adc
lds
pop
ret
movsb
mov
popf
test
int3
dec
sbb
push
push
lea
sti
into
icebp
es
xchg
sub
loopne
movsl
test
outsl
gs
outsl
popa
fnstcw
xchg
xchg
fst
hlt
iret
and
pop
lock
gs
mov
mov
push
xor
pop
xor
popa
jae
movl
pop
pushf
and
cmp
dec
jne
dec
js
adc
leave
cld
xchg
test
push
cmpsb
push
je
push
or
repnz
jnp
inc
jp
pushf
in
call
push
divb
xor
mov
mov
push
out
ret
jp
push
jl
jp
push
aaa
lods
mov
repnz
mov
fcomps
lret
mov
cmp
sar
mov
nop
xor
inc
fisttps
out
fistl
push
mov
jne
lcall
mov
mov
adc
pop
sbb
mov
cltd
aam
cltd
dec
pop
lock
cltd
pop
mov
adc
addr16
mov
jno
cmp
cmpsl
data16
loope
adc
jmp
mov
and
sti
repnz
jl
das
add
out
inc
cmp
add
mov
xchg
cmp
js
in
data16
sub
pop
pop
push
adc
gs
mov
ja
roll
sti
xchg
clc
mov
sbb
xchg
mov
test
dec
aam
fisttpl
cltd
icebp
bound
sbb
aaa
push
xchg
loope
adc
pusha
orb
xor
nop
ds
cmc
arpl
ds
ja
arpl
mov
imul
lea
pop
jae
push
or
mov
inc
cmp
loop
and
fadds
xchg
fisttpll
push
test
cs
je
add
test
ljmp
sarl
out
xchg
sub
popa
mov
stos
xchg
push
loopne
test
mov
imul
inc
in
or
scas
cmp
xlat
mov
loop
pop
pop
movsl
popf
push
lret
fstpl
mov
cmc
dec
out
and
in
and
mov
outsb
in
test
sub
or
mov
movsl
fs
pusha
aad
std
mov
and
sub
sub
mov
leave
repz
nop
gs
addr16
aaa
jo
fs
dec
mov
cmpl
outsl
inc
pop
scas
mov
push
mov
jbe
loope
mov
add
out
or
cmp
inc
sbbl
push
outsb
mov
add
inc
fbld
or
arpl
push
pop
cmp
cmp
nop
mov
mov
sti
sahf
shlb
imul
push
imul
adc
adc
xor
push
test
test
es
hlt
jmp
mov
jns
xchg
and
inc
jbe
ds
xor
sbb
lods
test
lret
orb
xor
mov
jp
mov
test
add
mov
xchg
ret
jge
das
inc
xor
pop
cmc
test
stos
lds
bound
adc
pop
leave
xor
sub
inc
les
mov
lcall
sub
dec
adcb
mov
sub
call
pop
mov
sbb
orl
dec
sub
jno,pt
adc
ja
sbb
mov
lds
popf
inc
and
pop
jecxz
push
data16
or
xor
mov
aaa
test
xchg
mov
jp
ret
pop
pushf
xchg
insb
lods
lret
ds
movsl
lret
sub
cli
sub
movsb
ret
and
hlt
sub
pop
cmp
je
bnd
mov
lcall
test
dec
jge
and
cmp
dec
add
lret
loop
in
out
pop
mov
dec
int3
aaa
mov
rorl
leave
xor
out
mov
leave
pusha
dec
xor
adc
add
cmp
ds
sub
or
pop
mov
add
inc
rcrb
mov
pop
pusha
call
mov
adc
sbb
inc
repnz
gs
sar
sub
add
pop
cmpb
or
sbb
test
and
jmp
out
jmp
mov
and
xor
lahf
sti
cmp
ljmp
jne
lods
arpl
mov
xchg
xchg
clc
xor
ret
in
out
pusha
jb
cli
aad
sbb
loope
pusha
push
cmp
ret
pop
xchg
or
and
call
cli
stc
inc
jnp
in
subl
mov
push
fsts
fwait
pop
lret
ret
xchg
add
or
ret
mov
mov
and
lea
lahf
enter
mov
xor
and
push
int3
push
cmp
pop
mov
fsub
jp
mov
out
lahf
sbb
cmp
or
popa
xchg
jg
xor
loop
daa
cld
aas
add
enter
dec
pop
ljmp
je
pop
shrl
test
push
iret
ret
jg
push
cmpb
popa
ljmp
cmp
xchg
scas
push
in
push
es
shlb
out
repz
pusha
jg
mov
push
dec
adc
in
std
lds
ss
sti
add
push
mov
push
aas
ljmp
sbb
mov
lret
testb
loopne
lahf
push
out
adc
enter
fnstsw
cmp
xchg
or
mul
call
jnp
cld
aam
lods
mov
inc
std
mov
gs
xlat
enter
sbb
outsl
jnp
cli
cli
sbb
in
push
repnz
xlat
or
stos
popa
fisttpll
jle
mov
hlt
cs
insl
pop
jbe
fsubp
cmp
pop
push
shll
xchg
xor
jecxz
outsl
dec
or
dec
movsl
imul
push
add
adc
cwtl
ja
push
repnz
lahf
arpl
out
cmpsb
repnz
cmpl
movsl
mov
or
fdivl
push
and
inc
mov
adc
cmpsl
mov
pop
mov
idivb
scas
add
pop
xor
dec
xor
or
aas
adc
out
cmpsl
in
jae
mov
cmp
or
arpl
mov
cmp
pop
mov
and
pop
repnz
movb
stos
stc
mov
jo
lahf
stos
inc
push
iret
ret
enter
adc
inc
or
mov
or
das
rorb
sete
rcl
roll
sub
ja
outsl
shrl
xchg
mov
mov
xchg
ds
or
leave
lds
test
mov
rorb
test
sbb
dec
movsl
add
iret
mov
pop
push
xor
push
push
fabs
mov
push
orb
lret
xchg
cltd
int3
mov
lea
and
inc
int3
mov
fsubrl
mov
jle
dec
pop
ds
mov
pusha
cmpsl
daa
stc
stos
push
dec
dec
mov
out
ja
out
mov
rorl
gs
outsl
add
aam
rorl
out
lea
pop
movswl
pop
jl
cmpsb
shl
repz
sub
mov
ficoml
adcb
cmp
ja
imul
in
sti
dec
shrb
imul
mov
not
pop
pusha
lcall
pop
add
cltd
fwait
out
adc
stos
bound
lret
sub
xchg
push
jl
enter
loop
dec
movsb
cmpsb
and
add
xchg
add
fisttpl
pop
mov
inc
ljmp
inc
jl
dec
mov
push
xorb
push
repz
push
pop
cwtl
ret
xlat
sbb
mov
scas
stos
push
and
add
mulb
xchg
xchg
xchg
sub
test
in
jmp
repz
jle
mov
call
je
jge
shlb
pop
fnclex
dec
inc
mov
pop
ja
jmp
inc
add
and
testb
popf
jmp
test
mov
in
imul
mov
mov
sub
dec
or
call
mov
mov
add
pop
jp
pop
orl
and
cmp
call
inc
inc
xchg
in
aaa
popa
mov
addl
aam
cli
dec
push
mov
xchg
faddl
xor
rorl
fcom
sub
cld
xchg
pop
sub
loopne
add
stc
sbb
inc
inc
mov
cmp
mov
out
adc
fmull
pop
inc
mov
loop
aaa
inc
out
fstp
inc
fs
inc
lcall
xchg
jecxz
pusha
and
sbb
mov
lret
or
idivb
std
xchg
sub
mov
jl
adc
xor
cmp
and
xor
mov
loop
enter
mov
cwtl
and
xchg
aam
or
sub
insb
cmp
xor
nop
call
lea
jae
popf
in
push
xchg
mov
xchg
ret
adc
jp
rcll
push
pop
ja
pop
pop
stc
cmc
push
sbb
adc
cld
imul
pop
add
ss
dec
add
dec
xor
push
inc
insb
push
in
and
push
mov
sti
lahf
or
mov
fadd
xchg
cmpsb
data16
adcl
cltd
push
sub
repz
sbb
cmp
repz
stos
add
loopne
loop
pop
maxps
add
jae
divl
sub
xlat
insb
add
fwait
lea
shll
std
mov
sub
jl
mov
in
xor
xchg
leave
xor
subl
jno
push
into
push
mov
cmc
xchg
clc
fwait
sahf
xor
add
mov
sub
push
jnp
cmp
xchg
pop
cmp
sub
fisttpl
nop
scas
mulb
xchg
inc
scas
jmp
das
pop
popa
inc
mov
in
xor
jp
and
shll
test
inc
mov
loop
testb
ret
xchg
ret
js
xor
mov
lahf
adc
dec
loop
jecxz
nop
fucom
fwait
and
loop
loopne
add
out
scas
push
add
mov
sbb
and
xchg
gs
inc
addr16
xchg
enter
ret
pusha
inc
or
and
sub
inc
inc
xchg
arpl
fxch
xchg
popf
or
mov
inc
ss
out
test
mov
jge
jbe
xchg
addr16
fsubrs
mov
mov
sbb
rorl
adc
mov
gs
push
pop
add
popw
inc
push
stos
add
inc
sahf
into
jno
sub
outsb
ret
pop
mov
orb
aaa
adc
jb
test
fstpl
loop
out
nop
testl
rolb
push
jno
es
aas
xor
aas
mov
adc
dec
bts
loopew
iret
mov
inc
mov
inc
adc
in
jbe
arpl
ds
adc
xor
add
mov
xor
xor
mov
xchg
add
addr16
mov
push
js
inc
push
push
lods
xor
adc
pusha
dec
push
faddl
inc
fcmovnb
loop
dec
add
jne
gs
or
cmpsl
jl
insl
out
inc
jl
pop
fistpll
pop
cmpsl
test
jno
mov
xor
int
push
or
mov
pop
xchg
pavgb
negl
sbb
mov
test
sti
xor
mov
fidivrl
pop
or
pop
rorl
cmpsl
insb
lcall
push
ljmp
jl
mov
jno
or
and
and
aaa
lea
pusha
mov
inc
gs
fwait
imul
mov
xor
addr16
ret
inc
clc
outsl
in
popa
arpl
fs
jnp
test
push
push
mov
xor
out
sbb
stos
xchg
cli
or
mov
jmp
add
and
call
test
xor
ret
mov
mov
vpunpckhqdq
fdivs
push
lods
jp
leave
mov
jno
jmp
pop
cmp
nop
ret
push
outsb
dec
in
push
cmpsl
fidivs
and
or
mov
mov
or
imul
repz
ja
lods
sub
fstl
adc
repz
push
add
mov
xchg
js
jae
inc
xor
adc
popf
jne
and
jno
rcll
and
popf
out
push
loope
ucomiss
pushf
and
or
and
xchg
aam
std
dec
ljmp
in
sbb
repnz
mov
cmp
lods
lcall
sti
mov
lret
sahf
test
js
adc
out
les
lods
jmp
jae
call
jecxz
mov
mov
inc
lea
sbb
outsl
outsb
cmpsb
pop
dec
mov
mov
mov
push
test
pusha
cli
rol
and
add
mov
sbb
popf
jns
add
lret
sar
lds
std
nop
xor
dec
jnp
mov
add
cld
xchg
and
es
mov
jp
loope
and
xchg
lret
add
into
hlt
call
mov
push
aas
lret
fbld
mov
dec
xchg
xchg
stc
scas
push
xor
stos
jmp
mov
xor
mov
push
or
sbb
mov
cs
out
fcomps
sarl
xor
cmc
add
loope
repz
sti
in
jge
jl
or
repz
sub
cld
js
jns
push
cwtl
rcrb
mov
inc
lock
stc
sbb
sar
jmp
das
push
dec
je
xlat
push
enter
jnp
add
mov
rorl
or
mov
mov
mov
in
or
add
adc
lret
js
sbb
daa
das
aam
cmc
stos
movsb
cld
mov
jne
cmp
pop
mov
cvtdq2ps
mov
push
stc
sub
jnp
les
addr16
sub
inc
and
dec
and
cmp
add
pushf
jb
inc
push
mov
dec
or
in
lahf
lcall
das
jnp
popa
and
jmp
xchg
fnsave
and
pop
xchg
jle
or
cmp
cld
ljmp
rcrb
pop
and
movsbl
dec
fst
jnp
dec
lcall
mov
loopne
lock
outsb
jns
nop
add
add
lods
imul
mov
lds
pop
roll
pop
cld
ss
push
sbb
mov
lock
push
ret
loope
xor
cmpsl
or
cmpsb
setnp
fstpl
push
movsl
mov
icebp
fldcw
into
leave
push
hlt
pop
das
sub
lcall
mov
cmpsb
js
mov
scas
rclb
sbb
inc
or
inc
data16
push
mov
test
xchg
and
and
scas
mov
xor
mov
cmp
repnz
or
lahf
mov
cltd
xor
fists
push
add
mov
jp
mov
cmp
push
into
rorl
mov
xor
xor
pop
inc
mov
or
xor
cmc
hlt
pop
fnstsw
jbe
jp
out
or
testl
data16
push
pop
scas
fisttpll
jnp
jo
aaa
daa
inc
outsb
rcr
push
aam
push
scas
fisttpll
pusha
push
mov
test
jmp
fcomip
inc
push
iret
test
dec
pop
arpl
pop
xor
push
scas
int
loope
mov
add
jno
add
fucomip
jne
xchg
je
sub
gs
mov
es
jle
xchg
pop
dec
or
inc
xchg
xor
xor
mov
sub
negl
test
lcall
cltd
cli
jg
lar
shl
pushf
call
or
mov
test
jbe
imul
js
jo
loopne
cs
fwait
repnz
jb
mov
mov
inc
add
dec
cwtl
jmp
lea
mov
xchg
jns
pop
jmp
jns
fsub
push
jae
test
sub
pusha
rcrb
xlat
push
loop
fadds
inc
cmp
pop
push
sub
sub
adc
pop
aad
imul
mov
les
jno
jmp
cmpsb
inc
cmp
mov
cltd
inc
movsl
sbb
inc
addl
lahf
xor
bound
xor
xor
lods
in
shll
jb
push
and
cmp
add
dec
dec
push
inc
pusha
hlt
lret
rorl
push
sbb
imul
pop
out
lods
push
fcomi
lock
xchg
mov
xlat
test
adc
fnstenv
push
fistl
iret
mov
mov
cmc
mov
andb
lea
arpl
xlat
fimull
sbb
pop
mov
cs
addb
cmpsl
icebp
test
sub
pop
pushf
cmpsl
pop
je
add
push
lds
out
ss
cwtl
mov
bound
jnp
dec
shrl
push
mov
es
fmuls
sahf
or
dec
fsubs
iret
sarb
jl
xlat
cltd
out
push
push
adcl
dec
loope
mov
mov
loope
jnp
call
lcall
mov
jecxz
mov
rcll
bnd
inc
xor
sub
mov
movsb
add
outsb
mov
ror
bswap
dec
pop
mov
push
clc
outsl
sahf
pop
adc
jne
xor
dec
ret
mov
sarl
gs
jge
orb
popa
gs
sbb
into
out
and
stos
lcall
cmc
pop
ds
push
inc
enter
mov
fiadds
call
push
or
mov
enter
xlat
daa
jbe
fisttps
clc
mov
jg
push
dec
push
or
sti
popa
adc
mov
add
out
pop
fwait
int3
rcrb
out
negl
loop
iret
out
jecxz
addl
xor
push
dec
mov
mov
dec
jae
scas
push
mov
adc
sub
fcmovnu
out
jp
into
aas
push
dec
ljmp
sti
loop
mov
daa
aas
fidivrs
xor
dec
cli
jle
das
cwtl
sub
push
jo
icebp
loope
data16
cmc
loopne
add
das
stc
and
decb
push
je
pop
call
xor
movsb
mov
xorl
test
push
mov
and
scas
push
push
inc
iret
xchg
xchg
or
pop
fsubr
add
popa
jnp
negb
dec
shrb
cmp
movsl
push
push
cmp
popf
ljmp
xor
pushf
in
iret
mov
mov
out
dec
push
mov
pop
popa
test
adc
nop
iret
dec
push
dec
or
pop
push
mov
ljmp
mov
aad
mov
or
idivb
jbe
push
sbb
jne
push
cmp
and
jmp
dec
arpl
movsl
cmp
clc
ss
push
aaa
ret
aaa
fcmovne
fst
adc
movsl
int3
nop
xchg
lods
jle
xorl
aad
pop
xchg
sbb
aam
inc
xor
xchg
xchg
push
inc
into
cmpsb
jb
cli
adcb
jp
mov
mov
inc
std
cmp
fldt
daa
outsb
lods
mov
cmp
sub
enter
jge
jne
push
push
fcmovnb
add
adc
mov
inc
out
add
mov
push
insb
insb
cmp
scas
fimuls
mov
imulb
js
mov
and
xchg
push
push
lock
rolb
outsb
mov
jno
sbb
sahf
sub
mov
in
push
loopne
or
and
or
stc
jle
sbb
ficoml
repz
dec
movsl
test
sbb
push
xor
lods
xor
cmp
data16
mov
fiadds
sbb
sub
or
in
enter
jne
gs
nop
xor
js
aad
mov
dec
loopne
rcll
fdivrs
enter
inc
out
mull
cld
lods
insb
in
xchg
or
or
sub
adc
mov
push
mov
mov
mov
popf
mov
fisttpll
test
cs
mov
cmp
sub
cmp
add
ja
aas
ss
in
pop
test
add
xchg
sub
fwait
or
js
pop
bound
fidivl
loop
dec
fdivl
or
addl
aaa
add
in
stos
add
xchg
sbb
adc
ret
cmpsb
fcoms
pop
test
cmc
or
sbb
mov
jge
lret
mov
sbb
adc
mov
sbb
repz
and
pop
jbe
sub
test
out
ficoml
sbb
xor
loop
push
mov
lret
hlt
in
fcmovu
icebp
mov
cmp
dec
and
stc
out
adc
dec
inc
fimuls
out
add
aaa
loopne
ds
dec
les
aad
test
js
cmp
inc
dec
or
das
and
mov
push
xchg
mov
mov
mov
popf
adc
hlt
mov
xor
and
decb
sub
mov
mov
jo
inc
lret
jmp
pop
mov
stos
fstl
imul
lea
sbb
fiaddl
mov
inc
sub
xor
jns
js
add
jecxz
xor
sbb
xchg
rcll
xor
push
cmc
adc
mov
or
mov
ljmp
xor
push
inc
adc
push
mov
das
jmp
lock
mov
push
pop
cmc
mov
sub
mov
fsts
inc
fs
les
int3
outsl
ja
mov
les
dec
sub
push
cmc
dec
into
lret
sahf
inc
dec
mov
xchg
xchg
mov
andb
or
in
aad
cmp
xchg
add
shrl
xlat
cmpsb
xor
xchg
lea
jecxz
push
scas
test
scas
outsl
into
in
mov
pushf
in
nop
sti
es
xor
lret
pop
popl
inc
cltd
divb
movsl
scas
mov
out
pop
inc
pop
int
and
adc
shll
pushf
insl
push
out
cmp
das
xchg
and
in
push
mov
shll
push
push
iret
outsl
mov
les
xchg
cli
xor
jmp
ret
ljmp
movsb
mov
test
push
ja
inc
mov
nop
xchg
dec
sbb
fadds
into
imul
sub
mov
dec
cmp
mov
push
fists
test
stc
scas
sbb
sarb
xor
xor
xchg
push
ret
xchg
push
dec
lds
loopne
inc
roll
inc
pop
jo
call
shrb
aam
pusha
xor
sarb
shll
cld
outsb
mov
vphaddubw
xchg
aad
cld
or
mov
push
rcr
jg
scas
std
jg
pusha
cmp
mov
and
insl
mov
fdivs
or
out
movsl
ss
lret
sub
insl
push
inc
stos
mov
inc
outsl
adc
pop
and
sbb
sub
adc
push
lret
add
pop
pop
or
mov
enter
sbb
jmp
cmc
dec
adc
data16
repnz
mov
jo
jmp
loopne
popf
mov
out
mov
push
dec
rol
or
jg
jb
and
push
inc
dec
cmp
arpl
daa
enter
cmc
pop
pusha
ss
mov
xor
jae
dec
jne
rcl
sbb
subb
notl
inc
mov
mov
adc
dec
movsl
mov
idivl
cmp
sarl
jecxz
inc
mov
or
push
mov
or
jo
orb
orb
pop
pop
cmp
jmp
lock
jg
notl
aam
fidivs
push
mov
rcll
outsb
mov
add
movsl
dec
out
sahf
fnsave
loop
sbb
cmc
adc
cmpsl
xchg
cwtl
jno
lock
pop
roll
xchg
fldl
arpl
or
cli
clc
add
repz
movsl
cmp
popf
iret
insb
add
hlt
xchg
loopne
insl
or
xor
iret
lods
cs
jge
shll
fcomps
jae
mov
mov
fldcw
lods
xor
outsb
cmp
mov
and
jp
mov
jge
hlt
imul
pop
fwait
in
and
jae
and
arpl
test
or
ds
je
or
cltd
ljmp
in
mov
clc
test
push
ret
ja
gs
xchg
xor
add
jl
ret
cmc
cld
rorl
popf
pop
pop
test
and
out
pop
shr
rorl
sbb
add
lret
out
push
jo
scas
jg
shrl
dec
mov
in
mov
shrb
popf
ss
sbb
imul
cld
ss
add
add
shll
add
xor
rolb
cld
int3
push
and
fs
clc
clc
ficoms
mov
pop
imulb
add
mov
test
mov
xor
inc
add
jno
xchg
ror
sbbl
idivl
inc
and
jecxz
xor
leave
mov
movsl
xchg
xor
and
lret
outsl
push
sbb
lret
hlt
outsl
js
rcll
mov
mov
in
test
sub
repz
push
inc
or
lret
pusha
insb
mov
leave
loop
std
test
movl
cmpsb
inc
mov
mov
repz
aas
xchg
out
add
xchg
adc
inc
sbb
call
addr16
jno
mov
and
hlt
outsb
sahf
mov
mov
jbe
mov
stos
scas
cmp
daa
pop
lret
cmp
inc
dec
ror
and
mov
jl
xchg
jne
mov
lock
push
int3
inc
dec
cld
icebp
jmp
sub
or
jne,pn
clc
lock
scas
cmpsb
js
jne
mov
and
das
mov
arpl
xorl
les
mov
test
push
loope
xchg
cmp
inc
push
outsl
push
push
ret
and
hlt
cmp
inc
mov
xchg
push
cmpsl
and
jecxz
nop
mov
inc
push
add
mov
iret
adc
sbbl
loop
xor
movsl
xchg
std
or
mov
frstor
inc
nop
xor
push
dec
mov
pop
pop
dec
out
jle
pushf
dec
es
int3
rcl
stos
add
cld
cmpsb
xor
imul
jle
dec
movsb
shrb
adc
sbb
dec
pop
movsl
je
or
dec
daa
sub
mov
test
add
in
rolb
je
sbb
ret
pusha
push
ljmp
xchg
cmpb
popf
lods
xchg
sub
pusha
outsb
cmp
jae
rcrl
mov
push
insb
dec
jnp
add
std
fldl
cmp
and
pop
sbb
insb
int
pop
pavgw
mov
xchg
cs
in
xor
push
inc
add
push
call
ss
in
sarl
mov
movsb
xchg
jge
in
jmp
xchg
stc
shl
or
out
jb
insl
loope
add
xchg
enter
push
add
push
dec
cld
mov
cmp
xlat
sahf
jbe
and
and
insb
sub
sbb
sbb
xor
sub
pop
mov
test
sbb
outsb
xor
jne
and
xor
cld
andl
in
and
movsb
mov
aad
repnz
sub
sub
call
sti
inc
jns
test
cld
xlat
sti
mov
xchg
inc
push
mov
cmc
andl
push
push
mov
mov
xchg
push
mov
into
xor
and
lock
inc
loop
push
sti
cmp
cli
cmp
adc
cli
sti
sbb
mov
lods
and
mov
cmpsb
aaa
aas
loopne
pop
lcall
push
mov
sub
lea
scas
shl
ret
mov
xlat
je
aas
adc
dec
jno
pop
outsl
fwait
push
es
sahf
fistpll
jle
inc
loopne
xor
xlat
pop
insl
fstpt
daa
mov
popf
sbb
dec
adc
out
sarl
inc
cmpsl
rcrb
push
jae
gs
pop
or
jb
clc
pop
cmp
dec
sbb
jl
sbb
dec
jo
ret
insb
push
jbe
mov
push
inc
movsb
cmp
outsb
xchg
test
sbb
pop
daa
xchg
or
inc
mov
clc
mov
cmp
sti
cmp
xor
xor
cmp
mov
or
xchg
pop
inc
pop
mov
aas
sbb
lds
pop
mov
adcl
adc
fisubs
mov
adc
jge
pop
out
into
adc
repz
cmpsb
imul
je
jmp
add
xchg
cwtl
iret
xor
xor
pusha
mov
repz
pop
mov
filds
movsb
push
cmp
cltd
mov
sbb
ljmp
in
dec
dec
mov
inc
out
pop
mov
jecxz
cmp
adc
cmp
mov
outsb
ja
inc
cmpsb
sbb
pop
fbld
or
loop
mov
ret
loope
jecxz
sub
cmc
push
mov
sub
aad
push
cltd
or
mov
add
mov
xor
movsl
pop
enter
insb
push
jne
fiaddl
cmp
dec
pushl
cltd
mov
cmp
in
outsb
aad
sbb
test
pop
fnstcw
ljmp
lea
xor
mov
in
mov
aas
mov
mov
lods
stos
xor
stos
loopne
and
jmp
dec
adc
lahf
das
cli
cmpsb
push
lret
in
testl
mov
insb
add
jg
pop
outsb
push
sbb
lods
mov
insl
dec
nop
xchg
push
lahf
lcall
loope
xchg
arpl
dec
mov
sub
xchg
frstor
push
cmp
xlat
ss
sbb
ret
pusha
pop
ret
dec
fsubl
dec
lods
mov
cmp
mov
push
add
imul
pusha
push
notb
push
arpl
sti
fdivp
or
daa
xor
sub
ds
pop
sahf
mov
cmpl
insb
test
rcr
mov
je,pt
out
jp
mov
cs
fisttps
dec
cmp
mov
filds
notl
rorl
fnstcw
clc
lods
ret
imul
mov
out
or
out
mov
shl
or
movsb
dec
jns
rolb
test
scas
jle
mov
or
outsb
and
fwait
aam
aas
xchg
sahf
fwait
or
and
inc
lods
fcoml
adc
mov
mov
test
fstps
or
mov
cld
xor
dec
sbb
inc
fldl
inc
pusha
lcall
and
aad
jae
add
jg
int
sub
cmp
pcmpgtd
mov
enter
fs
dec
gs
cs
mov
int3
ja
ss
pop
push
xor
lahf
rcrl
aad
js
lds
push
mov
jns
jbe
sbb
stc
mov
cmp
push
mov
fisubrl
lds
outsl
jge
inc
cmp
pop
mov
out
add
hlt
inc
fcomps
push
mov
cmp
dec
push
loop
pop
mov
push
mov
lds
ret
insl
addr16
pop
inc
mov
into
mov
dec
faddl
push
mov
dec
cmp
nop
lret
mov
clc
mov
stc
or
push
imul
inc
adc
pop
sub
test
es
adc
fistpl
aaa
packuswb
push
inc
or
int
and
out
add
add
neg
mov
dec
fists
or
insl
mov
inc
xchg
mov
xchg
mov
pmaxsw
leave
xchg
lcall
pop
sub
minps
dec
jb
mov
xor
in
xor
push
dec
insl
or
lock
shlb
cld
insb
enter
in
es
mov
ss
jno
scas
inc
loope
pop
rorb
or
cwtl
and
ss
sbb
jbe
sar
fwait
jb
fstpl
flds
mov
jl
rcrb
dec
jecxz
push
fldl
jb
jbe
inc
sti
test
add
sarb
out
std
sti
push
orb
sub
xchg
fwait
push
icebp
pop
outsl
cltd
pop
std
ss
mov
scas
jae
daa
in
push
and
sarl
ds
mov
inc
lock
pop
sbbb
mov
or
ss
je
fwait
mov
xchg
sbb
mov
or
push
inc
stos
out
sub
ss
dec
pop
mov
sbb
mov
stc
sbb
stc
ret
cmpsl
dec
in
mov
popf
sbb
jno
sbb
xlat
mov
int3
mov
lcall
loopne
pop
scas
fisubrl
and
clc
push
or
pop
fwait
in
out
jns
aam
lret
call
mov
sub
dec
scas
push
stc
fisttpl
add
fwait
cmp
push
mov
aas
scas
in
xor
dec
add
mov
xor
mov
xor
sbbl
repz
xchg
jns
add
jl
int3
pop
xchg
jns
stos
fs
sub
and
dec
mov
jbe
xor
nop
cmp
loope
cmpsb
cld
sti
enter
push
or
int
pusha
xchg
mov
add
ror
jae
adc
pop
idivb
imul
fadd
jbe
and
pop
add
jno
dec
ja
mov
add
mov
and
xor
cmp
push
pop
popa
insb
sbb
daa
pop
push
jle
cmp
cmpsb
enter
mov
inc
fcomi
notb
and
popa
fistpl
in
das
and
int3
gs
loope
sbb
jns
dec
test
ret
mov
repz
xor
lcall
adc
lock
pusha
test
into
mov
jge
cmc
lret
iret
mov
pop
rclb
jae
push
cld
jmp
and
dec
movsl
xchg
notb
jne
fists
xchg
fsub
out
dec
jle
sti
mov
pop
inc
mov
jecxz
adc
mov
fsts
lcall
std
outsl
lahf
cmp
or
mov
pop
xor
loope
cmp
mov
sbb
repz
adc
cld
mov
pop
popa
mov
addr16
call
add
xchg
fldt
adc
jb
jmp
jmp
ja
leave
mov
adcb
cmp
xor
xor
ss
test
loope
add
xor
pmuludq
pop
inc
xchg
dec
jl
jecxz
mov
arpl
popa
sub
fadd
leave
int
cmp
mov
xor
mov
ret
daa
fcmovu
and
xchg
fdivrl
popf
lea
add
jmp
dec
add
ror
nop
xchg
rcll
imul
xor
cmc
xchg
jle
test
into
push
jo
adc
stos
shlb
in
push
mov
loopne
jecxz
int3
out
xchg
adc
cmp
xchg
cmp
xchg
dec
addb
sbb
pop
or
aad
rorb
pop
fistps
xchg
imulb
clc
dec
jl
ljmp
jo
xchg
ret
mov
out
cmp
xor
shrb
dec
dec
push
pusha
push
or
mov
cmc
or
push
sbb
ja
das
rcrl
pop
mov
sub
in
mov
push
mov
mov
cmp
push
and
fwait
lcall
cmp
subl
pop
push
mov
enter
test
lcall
das
dec
and
test
mov
pushf
shl
jl
fcoml
scas
in
ret
mov
xchg
jmp
or
pop
aad
xor
outsb
lea
cmpsb
push
call
fdivr
mov
out
cmp
mov
cmc
cli
hlt
sbb
neg
jb
xchg
push
fistpll
out
ret
loop
xchg
mov
xor
xor
fs
sahf
subl
ss
sbb
ffree
cmp
fstps
mov
sub
mov
scas
inc
xchg
or
cmp
sbb
popf
adc
sub
das
mov
popa
imul
das
adc
js
and
and
call
outsb
xchg
movsb
add
cmpsl
inc
dec
xchg
mov
inc
repz
popa
xor
fistps
pop
out
scas
sbb
pop
cmp
test
sbb
lods
pop
mov
pop
mov
jg
in
dec
stc
mov
mov
sbb
insb
and
cmp
push
test
lea
insl
adcl
into
and
xlat
enter
pop
xchg
fstpt
ficompl
dec
mov
test
out
jae
push
mov
adc
push
jge
shll
insb
leave
daa
je
jle
or
icebp
or
negb
movsl
nop
sbb
xchg
jae
cs
cmp
xchg
cmp
add
insb
pop
fdivr
mov
sbb
add
pop
sub
mov
inc
rorl
stc
mov
call
and
jbe
shrb
ljmp
add
gs
push
movsl
arpl
sub
inc
mov
adc
push
mov
jnp
lret
xchg
inc
adc
pushl
aas
cmc
mov
lock
in
cmpl
notl
mov
mov
jmp
mov
push
test
add
imulb
push
dec
xchg
clc
xchg
mov
cmc
xchg
jne
sbb
inc
mov
dec
add
les
adc
pop
lahf
mov
outsl
mov
mov
and
sbb
lea
lds
test
sbb
mov
and
int
xor
loopne
sbb
shrb
jae
or
push
inc
and
scas
lods
roll
xchg
add
js
and
adc
int3
cmc
loopne
test
scas
movsl
data16
lds
out
sti
insb
mov
jp
das
xor
test
push
ds
push
pop
std
ret
sbb
je
ficoml
jbe
cltd
or
addl
loope
pop
push
jecxz
loop
stc
rcrl
movsl
leave
mov
clc
inc
mov
ret
xor
fldenv
add
sub
mov
push
icebp
fs
inc
jbe
test
inc
scas
mov
mov
add
dec
mov
inc
jo
out
cmp
mov
pop
fisttpl
int3
je
or
adc
and
xlat
movsb
jmp
xor
jg
and
rolb
ret
mov
repz
mov
imul
bound
xchg
jnp
jmp
jo
jbe
jmp
stos
pop
popf
lret
jmp
fwait
cmp
daa
mov
roll
push
or
mov
ror
pop
repnz
jp
adc
push
push
dec
repz
or
cmpsl
out
push
leave
or
push
mov
xor
pop
add
xchg
push
ret
icebp
cltd
xchg
sub
pop
inc
sbb
hlt
dec
or
lods
lds
or
dec
fs
lahf
adc
dec
leave
jbe
iret
cmp
or
daa
popf
mov
push
js
mov
pushf
pop
inc
xor
pushf
mov
xor
xor
imul
lock
cld
jne
insl
cmp
ret
clc
rcr
aaa
loope
xor
and
sqrtps
jle
jb
cwtl
int3
mov
push
jae
shr
adc
push
adc
inc
in
cmp
jge
repnz
out
mov
scas
jae
insl
mov
les
and
pop
int
cmpsl
int3
push
or
cltd
lods
cmc
jne
xor
adc
je
push
jne
sbb
sbb
fistps
idivb
dec
jecxz
sub
iret
adc
mov
pop
cmp
clc
xor
mov
mov
jecxz
push
dec
imul
loopne
cmp
addr16
outsl
add
pop
jb
dec
imul
pop
call
mov
aaa
pop
les
push
outsl
out
push
mov
loop
jne
sbb
into
clc
mov
sti
call
stos
sub
iret
lods
int
xor
ret
out
dec
mov
negl
add
and
scas
or
xchg
add
push
imul
mov
imull
cmp
nop
repnz
or
sbb
addr16
xor
shlb
xor
insb
mov
adc
adc
daa
fidivrl
mov
test
xchg
addb
int3
xchg
add
outsl
divl
sahf
insb
xorl
shll
in
dec
jno
rorb
mov
movsl
mov
push
repnz
lret
pop
inc
push
xchg
cmc
jp
jg
dec
push
negl
mov
xor
adc
mov
add
jecxz
push
cmpsb
add
divb
in
out
sti
add
jmp
sbb
cmpsl
sbb
lock
jnp
jne
cmpsb
mov
dec
outsl
in
addr16
sub
test
push
cmp
mov
pop
test
inc
movlps
mov
push
cmp
jnp
cwtl
pop
mov
loopne
mov
xchg
mov
ja
xchg
ret
in
fcomip
testb
jle
in
jnp
cs
cs
jns
xchg
cmp
ret
xchg
dec
mov
test
bswap
arpl
xchg
xchg
mov
mov
or
out
add
leave
sbb
mov
push
sub
adc
push
in
push
mov
sub
add
jno
loop
aam
icebp
and
dec
in
and
ja
and
mov
push
mov
add
fs
sub
shl
andl
sbb
shrl
dec
lret
mov
mov
push
stc
mov
adc
test
cmp
lds
outsl
es
in
in
sbb
cmp
jmp
jb
fcompl
in
das
mov
mov
aas
sti
jo
out
jne
mov
es
pop
dec
fwait
cmp
dec
xchg
fs
dec
sbbb
sub
int3
sbb
rclb
pop
mov
outsb
idivl
ljmp
out
push
or
add
jl
neg
fbstp
xor
outsb
cmc
push
push
mov
lret
mov
rorl
lods
pop
mov
mulb
jmp
mov
popf
out
test
or
pop
mov
out
dec
xchg
leave
dec
jmp
popa
out
out
add
dec
push
lods
xor
ret
popf
ds
pop
imul
fcmovb
sub
fcmovnb
daa
xchg
ss
fstps
fstl
ljmp
or
push
hlt
test
add
sub
enter
jno
xor
inc
cmp
cli
xor
cmp
insl
pop
rcrl
repz
jo
mov
out
enter
add
imul
xor
sbb
sub
andl
sbb
push
pop
scas
pop
movsb
mov
shll
jno
mov
leave
xor
iret
xchg
in
inc
in
shlb
lods
dec
add
xor
arpl
in
pop
add
mov
jne
rcll
push
cld
pusha
inc
daa
ss
cmp
mov
push
xor
icebp
ss
inc
mov
roll
insb
sbb
sub
inc
movsl
cmp
pop
fs
adc
stos
divl
fidivrs
cmpsb
nop
push
inc
pop
add
jo
inc
pop
or
loopne
fistps
adc
sbb
ss
cld
mov
push
xor
sub
sub
daa
push
jle
in
shlb
add
mov
adc
adc
mov
imul
mov
dec
lds
mov
dec
mov
aas
sub
hlt
jbe,pn
xor
cmp
es
pop
mov
test
dec
pop
push
inc
cmp
out
lds
subb
mov
enter
pushf
ja
cltd
sbbb
bound
loopne
cs
mov
inc
adc
jg
inc
or
sahf
int3
arpl
std
scas
cmc
pusha
arpl
sub
or
out
fcoms
in
je
cmc
lret
in
movsb
imul
mov
sbbl
jl
xchg
xchg
mov
pop
push
add
jl
xor
fwait
sarb
cmp
or
mov
lds
lret
mov
call
cmp
nop
les
iret
dec
popa
sbb
mov
or
adc
cs
add
repnz
leave
repnz
and
cmp
aas
outsl
int
hlt
aam
add
enter
mov
push
add
js
sbb
mov
cmpsb
xchg
shlb
cmpsl
and
rolb
inc
mov
mov
mov
sub
cmp
xchg
rorl
sbbb
xchg
cmpsb
add
call
int
or
daa
loop
stc
aam
subb
cmpsl
and
pop
mov
pop
repnz
add
orl
repnz
orb
fisttps
xchg
mov
and
pop
push
mov
mov
movsb
popa
outsl
adc
fbld
dec
mov
stc
and
gs
mov
aas
adc
in
pop
test
mov
clc
ss
pushf
out
loope
xor
cli
pop
sbb
stos
inc
sub
mov
add
iret
scas
pop
push
stos
outsl
js
jo
sub
push
pop
mov
push
jo
sub
fisttps
cmp
loope
pop
arpl
pop
ja
pop
and
pop
insb
or
jle
incl
daa
test
lods
arpl
pop
push
imul
repnz
sub
rolb
xchg
jno
cmp
mov
xor
inc
xchg
cmpsb
imulb
les
and
push
sbb
ds
rol
or
ficomps
pop
addl
mov
or
daa
jmp
loopne
mov
cmpsl
jle
sti
std
movsl
idivb
das
sbb
adc
cmp
mov
inc
add
cli
jmp
movl
or
test
push
rol
lock
popf
mov
xor
mov
jmp
cli
xor
fnsave
repnz
xchg
je
add
fimuls
xlat
std
test
pop
pop
adc
jno
jbe
xchg
into
fisttpl
mov
cmc
mov
movsl
flds
cmp
add
shll
mov
fwait
out
imul
mov
xor
jge
mov
fisubrl
insb
mov
mov
lods
std
and
mov
fs
jae
gs
and
mov
aam
scas
lcall
inc
outsl
xorl
add
jmp
addr16
jno
sub
jbe
stos
inc
xlat
mov
dec
fldcw
xchg
lcall
fdivp
xor
cmpsl
cld
out
ffreep
fisubl
loop
imul
xchg
ljmp
push
aaa
js
mov
cmp
mov
push
outsb
cwtl
jae
sub
mov
xchg
add
jecxz
mov
aas
sahf
mov
fisttpl
aaa
stc
je
in
pop
lds
jle
mov
inc
daa
icebp
pusha
push
ljmp
jne
xchg
dec
js
lahf
test
cmc
fadd
push
ficoml
push
test
outsl
aaa
test
ss
pop
cmp
outsb
arpl
sbb
cmc
clc
pop
cltd
cmpsl
jae
adc
loopne
fnstcw
mov
sub
or
xchg
lcall
mov
mov
insl
sar
and
adc
xor
push
mov
in
in
ja
test
inc
jmp
mulb
xor
es
je
mov
out
loope
add
add
pop
cli
pop
or
mov
pop
je
out
rcll
call
xor
xor
loopne
aam
pop
sub
cmpsl
testl
bound
or
std
addr16
pop
bound
arpl
faddl
or
ljmp
insl
sahf
into
sub
adc
sub
dec
pushf
xor
push
jns
ss
sbb
mov
sub
into
inc
and
sub
jmp
and
addr16
xchg
imul
pop
mov
cmpb
hlt
pop
ret
in
xchg
aam
and
xor
jnp
addl
add
out
or
mov
pop
xorb
mov
and
cltd
cmc
js
lods
mov
cmpsb
and
lods
rcl
xchg
aas
das
mov
rorl
push
aam
cld
imul
adc
add
cli
push
push
or
jns
lret
mov
jle
xchg
scas
jnp
aaa
ds
imulb
imul
lret
bound
add
test
pop
imul
scas
dec
lods
in
movsb
pop
fsubrs
je
push
fsubrs
sbb
inc
jnp
test
pop
mov
mov
push
mov
inc
dec
jmp
inc
cmp
fdivp
lret
adc
fimull
jmp
js
push
lret
std
pop
mov
jno
add
mov
pop
mov
push
shl
add
dec
popa
cmp
jmp
lock
lea
cmovae
dec
add
lods
xor
mov
lcall
hlt
cmp
jg
fwait
xor
out
ljmp
pop
hlt
loopne
or
sub
xchg
lahf
insb
add
outsb
iret
imul
sub
je
scas
add
add
add
add
stc
push
ret
push
sbbl
sbb
ljmp
mov
xchg
cmp
into
add
popf
jmp
cmpsb
mov
stos
fistps
mov
cmpsl
scas
pop
mov
mov
rcl
insl
or
dec
ss
sbb
aam
or
xchg
push
mov
mov
rol
pop
mov
jae
mov
idivl
or
sub
or
testb
dec
stc
pop
mov
rcrb
jp
mov
into
xorb
fildl
jp
stos
mov
lret
jle
rclb
sub
pop
dec
jmp
inc
and
dec
stos
in
daa
xchg
mov
xchg
test
dec
rorl
aaa
mov
js
dec
mov
into
shll
mov
xchg
pop
pop
jge
push
mov
xchg
cmp
and
scas
push
push
repnz
cmpb
out
fdivr
push
mov
xchg
call
jmp
mov
mov
xor
jecxz
inc
jbe
insl
xlat
inc
sarb
rol
mov
div
jb
jo
cli
adc
mov
mov
pop
dec
mov
sbb
push
mov
ja
pop
xchg
mov
jl
xor
dec
sub
cmp
mov
call
push
push
fsubrs
pushf
jmp
test
pop
adc
sub
es
test
fs
mov
mov
adc
sbb
shlb
xor
pop
add
lods
push
adc
in
lahf
jecxz
push
ljmp
out
daa
dec
aad
adc
in
imul
push
ss
or
cmpsb
or
das
mov
sbbb
inc
xchg
add
sbb
mov
hlt
mov
adc
cli
or
xor
in
push
out
in
dec
scas
push
and
push
jp
insb
pop
out
lret
push
shrl
mov
xor
mov
outsl
sahf
mov
fcoms
sub
and
cmp
je
pop
adcb
ficompl
mov
push
pop
cs
daa
adc
bound
insl
inc
adc
sub
jecxz
add
jbe
icebp
roll
adc
into
ret
sbb
inc
pushf
adc
cld
sbb
or
mov
lods
xor
out
inc
mov
jge
lods
mov
lea
mov
mov
xchg
dec
aad
mov
mov
scas
sbb
lea
mov
aam
movsb
jl
outsl
push
adc
dec
inc
jg
ret
mov
call
adcl
aaa
mov
orl
add
push
mov
fs
outsb
imul
inc
pop
jp
mov
add
aad
in
dec
pop
fldenv
shll
enter
add
inc
push
xor
filds
test
mov
sub
xor
pop
aam
negb
push
test
ficoml
adc
and
lret
push
in
xchg
ds
rolb
lahf
xor
push
pop
inc
or
or
int
pop
jae
add
outsl
xor
mov
xchg
mov
xchg
shll
fsubr
loope
xor
out
mov
out
divb
inc
fbld
ret
arpl
in
fwait
xchg
into
jo
cltd
ror
repnz
cmp
leave
xor
leave
mov
cmp
idivb
xlat
into
mov
cmp
gs
mov
aaa
scas
imulb
call
xlat
ja
xchg
leave
std
sti
in
mov
mov
std
std
stc
std
std
stc
sti
cli
mov
les
cli
push
lea
adc
pop
push
fldt
test
fistl
movsl
loop
xchg
cmp
mov
xor
pop
pop
mov
mov
add
mov
outsb
nop
jne
jmp
dec
mov
jnp
test
arpl
jg
push
mov
inc
aaa
mov
inc
mov
cld
int
sub
add
stos
lret
les
dec
movsb
cmp
das
adc
leave
and
mov
fs
sub
jecxz
int3
std
dec
add
mov
mov
dec
bound
push
stos
pop
cs
ret
lods
adc
xor
mov
or
sbb
xchg
push
pop
loop
pushf
fstpt
scas
xchg
xor
sbb
mov
fimull
mov
gs
mov
xor
pop
sbb
jbe
leave
lds
mov
hlt
xor
jecxz
fsts
test
xor
nop
mov
sub
mov
testb
or
inc
xchg
hlt
adc
push
sbb
scas
data16
jecxz
popf
lcall
jge
sbb
xchg
cmpsb
mov
je
jecxz
inc
dec
push
cmp
xchg
fsubs
pop
sti
push
push
iret
and
xor
stos
pop
ss
pop
aaa
xchg
dec
add
push
cmpsl
scas
in
mov
or
outsb
mov
pop
subl
imul
dec
das
pop
sub
sub
mov
iret
cmpsl
pushf
pop
divb
bswap
iret
adc
or
loopne
jmp
fistps
mov
pop
enter
jmp
xchg
dec
insb
stos
mov
and
hlt
add
sub
xor
inc
lret
pusha
cmp
bswap
movsb
add
mov
sbb
or
iret
xchg
stos
push
loopne
sub
fcoml
in
sbb
xor
ja
push
pop
imul
stc
out
movsl
popa
or
inc
mov
sub
adc
xchg
xchg
xor
adc
lds
rol
mov
xchg
lret
cs
xor
mov
push
jne
lods
shll
or
fadds
inc
sbb
fwait
xchg
inc
mov
mov
popf
xchg
sub
mov
jle
mov
push
dec
mov
stos
hlt
mov
lcall
sub
lcall
popf
ljmp
add
sti
lcall
ljmp
lret
xor
out
lahf
fs
dec
out
test
xchg
xor
dec
daa
xchg
pop
mov
in
pop
jmp
dec
lea
and
iret
cwtl
adc
and
jnp
xchg
cs
outsl
cmp
mov
sbbl
push
push
lds
or
leave
or
lods
or
lea
ss
sub
lods
adc
outsb
call
cmp
aam
lock
cmp
jae
imul
cmp
push
mov
lcall
int3
popa
xchg
push
gs
or
lcall
daa
aas
sub
adc
fwait
cld
xor
jnp
daa
or
and
xchg
stos
push
mov
push
push
jbe
mov
cmpsb
sub
push
push
and
pop
or
sbb
dec
mov
popa
dec
ret
mov
stos
dec
data16
int3
insb
xor
rcll
outsb
mov
push
xchg
int
hlt
xor
xchg
mov
aad
mov
icebp
mov
scas
cmp
mov
pop
fcoml
jae
out
or
js
arpl
and
jnp
mov
and
pop
shl
xchg
sbb
xor
into
cmc
mov
add
shll
sbb
mov
mov
js
imul
mov
dec
insb
out
sti
mov
pop
sbb
pusha
jmp
scas
jne
inc
xor
sbb
ss
push
sub
lea
pop
add
loope
cmpsl
ret
sub
adc
add
pop
mov
into
push
insb
mov
and
popa
mov
xchg
stos
lods
stos
sbb
sarb
fwait
sub
xor
data16
adc
xor
push
gs
iret
cmp
data16
test
enter
push
push
mov
adc
jo
je
mov
dec
fisttpl
xchg
add
adc
orb
in
out
jnp
jno
mov
jg
shl
xchg
jnp
dec
out
testb
ljmp
jb
mov
xor
pop
sbb
mov
push
push
imul
mov
dec
aas
scas
rolb
pop
xchg
fsubrs
adc
inc
cmp
fs
sbb
sub
mov
hlt
mov
add
mov
pushf
add
dec
xlat
push
outsl
jnp
movsb
ds
pop
and
and
mov
pop
xor
out
mov
inc
push
imul
fnop
mov
cmpsl
mov
mov
or
cmpsb
scas
mov
mov
jne
idivl
cmp
push
mov
divl
jmp
mov
cmp
nop
xchg
inc
js
cmp
cmp
movsb
fnstsw
fwait
and
movq
jbe
aad
pop
sbb
cmp
push
and
pop
sub
cmpsb
adc
mov
pop
mov
aam
nop
rcll
mov
or
or
ret
xor
xchg
and
dec
xchg
and
push
jmp
or
mov
imul
pop
xor
pusha
sbb
cmp
cmp
or
jmp
pop
mov
sti
add
lds
adc
sub
mov
pop
sbb
mov
fwait
xlat
hlt
adc
jns
loopne
mov
rcrb
xchg
and
mov
jae
jge
or
dec
xchg
cmp
sub
orl
sahf
pop
xor
sahf
in
or
mov
outsl
ret
jae
jl
fwait
jmp
enter
cli
xchg
fisubl
adc
dec
xchg
out
mov
jo
shlb
fldenv
test
lods
mov
add
test
push
mov
pushf
sbb
js
rol
mov
mov
pop
pop
movsl
test
sbb
lret
test
into
sbb
jo
nop
es
pop
js
out
clc
ds
orb
icebp
addr16
aas
popf
ret
mov
adcb
jb
lret
fwait
and
sti
pop
pop
inc
cmp
into
jge
arpl
insl
cmpsb
insb
cmp
sub
insl
inc
scas
xor
mov
mov
in
mov
pop
clc
cvtpi2ps
jo
xor
jns
xchg
shrl
sbb
daa
mov
out
rcll
aas
stos
nop
mov
inc
stos
pop
in
inc
movsb
xor
fidivrs
ds
push
xor
pop
xchg
fsts
cmp
dec
sub
xor
xchg
mov
pop
lcall
cmp
mov
sbb
dec
lret
mov
pop
cmp
and
mov
lahf
push
cmp
lods
into
add
lods
fisttps
idiv
xchg
ds
push
sub
fdivr
inc
inc
mov
cs
mov
es
cmp
fdivrs
and
test
adc
cmp
bound
push
mov
mov
inc
adc
pop
das
pop
cmp
pop
jno
int3
sbb
inc
mov
lock
xor
xchg
arpl
mov
xchg
cmp
lds
mov
add
jp
mov
outsl
out
inc
das
xchg
imul
or
mov
or
push
xchg
mov
fwait
shll
mov
jo
jb
stos
push
sub
xchg
movsb
ret
jae
jg
xor
js
dec
jb
mov
lret
dec
sbb
cs
xor
inc
inc
loop
lock
repnz
mov
xor
ret
inc
mov
xor
sub
mull
loop
dec
cld
cmp
stos
hlt
jle
mov
jne
sub
sbb
test
icebp
cmp
add
rclb
dec
add
aaa
mov
xor
or
das
leave
cli
mov
imul
cmc
dec
cltd
mov
push
sub
jno
mov
outsb
push
sbb
add
cmp
fadds
and
inc
jbe
and
fldt
push
mov
sub
xchg
inc
pop
sbb
jl
push
clc
mov
lret
xchg
leave
bound
push
fisttpl
lods
lea
imul
cltd
lret
mov
cmp
add
insb
adc
jg
negb
xchg
dec
and
aas
sbb
fildll
push
sbb
xor
xchg
aad
mov
mov
or
jb
outsl
mov
inc
fs
xchg
and
pop
lds
inc
xchg
jbe
pusha
loopne
in
xchg
test
cmp
cmpsl
les
push
push
pop
jge
cmp
push
mov
mov
inc
std
adc
mov
arpl
jp
sub
mov
mov
mov
sbb
add
jecxz
mov
mov
or
mov
sarl
xor
ret
mov
mov
outsb
out
push
push
mov
test
xor
fs
xchg
dec
cltd
add
push
jle
mov
arpl
lret
push
out
sbb
add
mov
cmpsl
mov
out
dec
imul
adc
fistl
add
cmp
xor
enter
push
lea
xlat
fsubrs
xchg
test
jmp
pop
leave
inc
push
pop
fldlg2
fcoml
pop
addr16
repnz
jbe
cld
in
mov
xchg
ja
data16
mov
cld
test
mov
mov
sub
jge
adc
dec
xchg
push
jmp
fnstsw
cmpsl
and
scas
lret
dec
jnp
rol
and
xchg
and
push
pusha
fcmove
adcl
sti
notl
dec
loope
clc
jo
mov
sub
pop
out
xchg
mov
popf
imull
mov
xchg
dec
lods
lret
and
cmp
xchg
rorb
add
sbb
je
add
mov
cmp
mov
jo
mov
xchg
ljmp
push
imul
jae
add
adc
idivl
addr16
or
or
nop
mov
data16
les
imul
mov
lods
inc
xchg
rcll
outsl
mov
lcall
rorl
push
pop
enter
add
adc
mov
pop
mov
pop
sbb
mov
push
stos
stos
xchg
mov
scas
arpl
in
aam
fstl
inc
movsb
scas
push
cltd
fsubrl
adc
or
int3
lret
jl
outsb
push
pop
jns
pop
adc
lret
jge
dec
mov
jecxz
repz
mov
stos
xchg
fcmovu
and
ljmp
pop
push
rcll
jo
inc
stc
cmp
jl
lds
push
push
sub
dec
cmp
inc
stos
ret
bound
jecxz
jnp
stos
xor
nop
push
lods
dec
mov
ja
add
addr16
cltd
or
and
adc
into
popa
int3
stos
cmp
jp
in
jns
pushf
lret
int
jecxz
push
mov
gs
adc
call
sub
cmc
sbb
or
stos
int3
mov
lret
dec
lcall
inc
cwtl
mov
inc
cld
jmp
sarl
pop
sbb
movsl
inc
inc
mov
or
insb
fstp
ds
leave
test
movsl
cmpsb
mov
ljmp
mov
out
arpl
mov
popf
arpl
lock
push
mov
add
sti
jne
cmp
ljmp
cmpsl
mov
testb
xchg
mov
dec
lds
fldcw
stos
rcpps
insb
jbe
lds
push
xlat
ss
subb
das
push
xlat
jg
pop
mov
aas
test
shll
inc
sub
inc
cmp
sub
addr16
push
imul
inc
addr16
inc
scas
rol
lret
lcall
outsl
dec
jb
jno
dec
scas
test
lock
push
push
cmp
sub
xor
jno
popa
mov
arpl
stos
shll
movsl
jg
dec
dec
mov
adc
test
add
imulb
or
pop
ret
pop
jne
sub
mov
rorl
cltd
daa
mov
ss
iret
imul
jmp
data16
push
loope
mov
in
cs
and
xchg
pop
xchg
icebp
push
add
add
inc
cmp
stos
lret
test
mov
pop
lea
outsl
or
mov
leave
gs
movsl
adc
rcll
sbb
daa
inc
mov
mov
cmpsl
jmp
push
cmp
cwtl
dec
stos
int
jge
push
xor
sarl
mov
add
sahf
vlddqu
add
and
pushf
int3
sub
push
mov
fsubrs
xor
pop
xchg
xor
add
lret
sti
repz
fiaddl
mov
scas
addr16
jne
jne
mov
cmpsl
mov
in
stc
mov
dec
push
fwait
inc
add
cmp
gs
or
adc
cmp
ret
lock
and
cmpsl
and
nop
outsl
cs
sbb
fwait
push
popf
es
dec
dec
jns
rcl
xchg
cwtl
jae
data16
jecxz
pop
mov
cmp
push
xor
mov
mov
mov
xchg
or
dec
mov
enter
in
hlt
adc
sub
mov
fsubrl
std
int3
out
iret
in
pop
pop
fsubr
shll
xor
pop
aad
daa
jae
mull
inc
sahf
je
cltd
xchg
pushf
xchg
pop
xlat
mov
sub
mov
sbb
movsl
dec
lods
cmp
jb
add
dec
lds
out
test
jo
inc
jnp
pop
sub
or
add
rcl
push
test
aas
mov
mov
int
cmpsb
dec
push
clc
fnsave
mov
mov
arpl
sbb
popl
inc
jns,pt
sub
lcall
xchg
mov
cltd
fmuls
push
sbb
into
xor
scas
clc
aad
arpl
jb
push
mov
sub
xchg
lret
jg
ficomps
mov
insb
pop
mov
mov
dec
ljmp
outsl
insb
imul
adc
int3
stos
mov
lret
sbb
stos
rcl
mov
insl
adc
dec
divl
or
lret
loope
in
sub
and
adc
pop
mov
arpl
jge
scas
mov
data16
xchg
push
or
add
sub
xchg
outsl
sar
mov
cmpsl
dec
fbstp
jo
xchg
xchg
adc
sahf
push
cs
es
fs
xor
mov
pop
xor
mov
movsl
push
fwait
fs
push
popa
xor
ss
fildll
dec
mov
jo
ljmp
jecxz
addr16
fwait
xchg
jnp
cmp
dec
out
pop
xchg
inc
aaa
and
push
test
mov
jge
dec
push
fiadds
aaa
je
and
iret
data16
je
mov
push
lods
or
daa
sbb
leave
fstps
das
mov
mov
ja
cmc
jo
gs
pop
fwait
cmp
adc
jb
pop
sub
sub
pop
popf
addr16
aam
pop
push
nop
push
xor
into
aad
arpl
insl
stc
xchg
out
call
dec
jae
sub
and
xchg
loop
push
sub
fs
inc
cmp
push
outsb
mov
out
xor
jecxz
and
jno
movsl
imul
dec
adc
outsb
inc
add
mov
jnp
dec
imul
loope
pop
movsb
mov
jge
jecxz
test
add
notl
mov
ret
scas
iret
fdivs
sbb
sbb
fwait
xchg
ret
add
push
xchg
dec
lahf
hlt
mov
test
jp
inc
mov
xchg
das
ret
jb
push
inc
mov
incb
add
icebp
test
pop
out
mov
popa
lret
lock
fwait
mov
push
add
cs
mov
fs
mov
fxtract
mov
inc
xchg
xchg
jecxz
adc
in
sbb
mov
ja
adcb
shl
push
stos
ljmp
dec
and
mov
jae
sbb
and
popa
pop
clc
mov
daa
adc
fisttps
xchg
mov
cmpsl
mov
jno
sub
jbe
inc
nop
pop
adc
imul
mov
lret
dec
lods
xchg
in
pop
stos
pop
testb
inc
outsl
shr
pop
pop
aad
xorl
js
cmpb
dec
jle
mov
out
dec
in
js
mov
jl
cmpsl
lcall
cld
ret
xlat
lods
ret
lds
arpl
xlat
into
shrl
test
xchg
add
pop
sti
xlat
inc
sub
sahf
adc
popf
loop
sahf
shrl
xor
dec
outsb
xor
mov
inc
mov
pop
pop
lods
bound
xor
jecxz
push
cld
jb
cmp
outsb
xchg
sub
inc
cs
repz
shrb
insb
lds
cmp
sahf
xor
repz
mov
push
lods
int
xchg
addr16
push
fisubl
cwtl
cmpsl
fsubs
dec
xchg
and
mov
test
lods
roll
lahf
push
xchg
aad
xor
loope
leave
mov
mov
xor
repz
outsl
sbb
cmp
push
out
jmp
into
lcall
dec
lock
in
lods
and
xchg
sarb
shlb
sahf
cmpsl
andl
pop
add
out
adc
mov
movsl
js
inc
aas
pop
lcall
jnp
or
and
mov
lret
mov
jp
cmpsl
stos
cltd
pop
in
ror
mov
icebp
jmp
xor
mov
sahf
push
jmp
fisttpll
mov
sub
pop
dec
in
stos
cltd
mov
cmp
scas
std
ror
xchg
mov
jmp
hlt
ret
pop
mov
stos
push
stc
outsb
lahf
in
shll
push
mov
jl
cli
lock
mov
insl
paddsw
inc
jns
mov
loopne
ds
fsubrl
xchg
scas
punpckhbw
and
scas
inc
mov
inc
mulb
enter
jmp
stos
pop
in
cmpsl
fadds
scas
pandn
jae
negl
mov
adc
rorl
test
mov
cmp
sti
sub
pop
cmc
dec
testb
dec
cld
adc
movsb
les
ja
push
mov
xor
sbb
stos
push
xor
test
xor
sub
outsb
enter
sbb
sahf
xor
std
inc
scas
add
xcrypt-ecb
cmpsl
lea
dec
and
push
scas
jl
dec
adc
in
outsl
push
pop
mov
dec
mov
cli
push
mov
mov
out
cmp
xchg
mov
xor
jp
jb
dec
jp
adc
nop
addr16
mov
xor
fcoml
mov
sahf
adc
inc
xchg
sub
int3
test
and
mov
cmp
rorl
lret
push
inc
xchg
dec
cltd
inc
fsubrs
cmp
add
inc
inc
jg
sub
lret
in
daa
pop
loope
stos
mov
or
rcll
and
or
out
inc
and
inc
xor
jb
ret
mov
mov
cmp
mov
mov
out
lds
inc
adc
in
jns
into
dec
loopne
mov
mov
enter
test
jg
dec
js
and
jl
test
imul
sbb
cli
add
scas
scas
cmpl
stos
mov
mov
xchg
mov
mov
jl
dec
sbb
int
enter
pop
push
sbb
push
add
inc
stos
js
fbld
and
xchg
mov
lds
or
out
cwtl
mov
loopne
pop
stos
push
stos
mov
cmpsl
adc
testl
mov
pop
rol
push
mov
cmpsb
adc
and
imul
cmp
push
out
imul
cs
mov
lret
jmp
mov
dec
push
pop
hlt
cmpsb
les
repnz
cmc
dec
push
xchg
into
sub
je
or
or
imul
jge
cwtl
mov
popf
mov
dec
outsl
pop
inc
std
mov
lock
push
hlt
icebp
dec
icebp
test
lahf
ds
call
and
dec
leave
scas
loopne
test
in
sahf
sub
arpl
js
filds
stos
mov
sbb
stos
imul
push
insl
les
xchg
pop
mov
jo
xor
in
xor
aad
int
adc
pushf
push
pop
push
out
push
mov
imul
xlat
inc
jb
fistps
rclb
mov
repz
not
insb
inc
push
push
adc
hlt
xchg
and
sub
cmc
lret
adc
out
stos
enter
cli
dec
push
testl
subl
loopne
pop
sbb
inc
leave
out
add
in
shrb
enter
xchg
adc
adc
add
scas
jns
insl
insl
rclb
js
pop
sbb
negb
mov
sahf
jge
arpl
repz
inc
pop
repnz
mov
jb
inc
push
inc
mov
sub
stos
and
cmp
fcomps
jge
lock
mov
and
xor
stos
cmp
mov
das
mov
mov
popw
push
std
mov
mov
xchg
insl
xchg
mov
out
lahf
fidivs
adc
pusha
ds
dec
dec
sub
pop
shrb
testb
mov
hlt
add
test
repnz
insl
push
fistpl
mov
js
mov
hlt
aas
inc
jp
pop
adc
aad
in
push
push
ret
out
inc
popa
add
adc
fisttpll
mov
cmc
stos
inc
testb
and
cmp
popa
adc
in
add
fdivs
xor
fisubrl
sbb
call
dec
sbb
ficoms
jg,pn
stc
ss
mov
inc
sahf
ljmp
mov
out
add
popa
xorl
jbe
add
mov
test
dec
xor
mov
mov
mov
mov
pushf
add
and
sbb
clc
enter
jecxz
jp
mov
out
cwtl
test
ja
sub
mov
ljmp
jbe
jecxz
aam
mov
pop
ljmp
and
fwait
icebp
inc
xlat
jmp
lods
sti
cmp
pop
mov
dec
xor
lock
cmpb
out
jae
xchg
jnp
jmp
pop
push
out
rcr
pop
pop
jmp
repz
adc
adc
push
aas
cs
fistpll
xchg
enter
mov
inc
cmp
out
cmpl
loopne
loope
or
sbb
xor
arpl
fcomps
mov
jg
out
xchg
push
and
call
loopne
dec
ljmp
popf
cmc
test
adc
pop
or
pop
sbb
pop
and
jle
inc
push
sbb
mov
xor
scas
mov
test
pop
int3
fildl
in
mov
and
inc
and
jp
cld
jmp
sub
arpl
lret
test
shr
into
sbb
cmc
lahf
cmp
insb
mov
rcll
pop
mov
mov
and
out
mov
sahf
mov
ja
rorb
fs
and
scas
insl
cmpsl
cmp
xlat
mov
and
mov
cs
mov
test
pop
pop
stos
shll
inc
insb
add
add
adc
ret
inc
stc
or
mov
push
ss
popf
jbe
mov
lret
sbb
mov
sub
out
mov
ljmp
icebp
lret
rclb
aas
mov
jle
lock
add
jno
loope
sti
dec
pop
mov
sub
sub
sub
mov
inc
add
push
sti
xchg
or
setp
jo
mov
out
dec
adc
or
or
imul
jecxz
or
adc
pop
addl
jg
push
rcl
pop
inc
inc
mov
sbb
mov
loope
test
mov
fistps
dec
mov
addr16
xchg
loop
fs
xchg
inc
push
pop
jp
addl
mov
pop
sub
inc
out
cmc
setae
cmp
jl
ficomps
adc
fstpl
imul
push
jno
aam
dec
add
sub
imul
mov
mov
mov
shr
adc
cmp
jns
popf
xchg
data16
or
xchg
ret
je
xor
cld
aad
lret
ret
in
popf
and
or
sbb
and
cmp
outsl
aas
xor
rcll
push
cltd
xchg
cli
in
in
mov
rorb
fidivl
shrl
je
mov
in
pop
cmc
xor
jle
sub
jb
movlps
sbb
inc
test
shll
push
add
jg
pop
jns
mov
je
or
inc
xchg
movl
sub
nop
lds
mov
test
add
adc
shl
sbb
add
sbb
test
test
cmp
js
sti
aaa
mov
sbbb
fists
pop
mov
mov
xchg
jne
fsubp
ficoml
loopne
cmp
jne
cli
inc
mov
ljmp
jb
sbb
andl
btc
cmp
gs
jno
dec
pop
and
cmpl
pop
xor
aam
imul
jb
jp
outsb
cmp
push
mov
rolb
not
daa
rcrb
mov
clc
mov
pop
sti
inc
iret
test
shr
jg
cmp
pop
mov
rcll
adc
mov
pusha
ret
and
xchg
adc
jne
je
andl
movsb
add
sbb
lock
sub
mov
pop
or
nop
repz
jge
loop
sbb
jge
push
dec
inc
push
pop
hlt
fwait
and
lret
cmp
mov
inc
sbb
pop
adc
add
sbb
icebp
in
mov
adc
mov
sbb
in
jae
test
nop
outsl
mov
mov
adc
icebp
fldl
fdivs
int
shll
xchg
sbb
and
in
imull
popf
nop
call
sub
lds
xlat
fimull
stc
cltd
je
push
inc
lock
add
mov
jns
pop
mov
push
mov
pushf
scas
mov
add
cld
insb
hlt
test
sub
mov
cmpb
adc
clc
or
out
push
pushl
lcall
mov
into
or
in
sbb
or
mov
dec
sbb
test
cmpsb
movsl
das
add
push
mov
imul
jnp
inc
imulb
int3
clc
loopne
out
scas
pop
xor
in
mov
int
sahf
jb
sub
gs
aam
add
enter
or
push
xor
mov
js
int
test
pop
je
mov
sub
insb
jge
lock
mov
inc
aas
mov
roll
jecxz
punpckhbw
push
mov
xchg
pusha
xchg
mov
adc
mov
sbb
sub
js
or
add
test
in
inc
adc
sub
cld
adc
rorl
cltd
rolb
repz
xchg
icebp
fdivrs
sti
in
add
pop
sbb
call
subl
ficoms
sbb
mov
inc
or
and
jg
inc
js
jge
xchg
push
xchg
xor
xor
sbb
xor
inc
lock
shll
xchg
test
rorl
push
inc
xchg
ds
ds
stc
xor
xor
enter
out
jbe
loop
push
outsl
mov
popa
movsb
or
xchg
ja
test
rclb
push
push
test
test
out
sbbl
std
fwait
ja
inc
adc
and
adc
icebp
pop
inc
inc
movsl
jne
mov
jge
jne
fidivl
stos
push
adc
or
mov
das
xor
out
fucomp
js
ds
mov
and
data16
fdivrl
add
adc
lock
sbb
mov
pop
or
mov
adc
outsl
push
fsubrs
and
push
inc
movsb
mov
imul
push
pop
mov
and
test
stc
les
or
jge
shl
xchg
inc
sub
inc
jecxz
mov
push
inc
cltd
mov
pop
mov
pop
popf
push
in
adc
movsb
sub
fcmovne
fstl
mov
rcrl
sbb
cmp
or
mov
in
cmpsl
pushf
adc
arpl
mov
mov
push
in
mov
mov
add
sarb
xchg
pushf
js
jns
adc
mov
dec
out
int
or
sub
dec
das
xchg
dec
mov
test
mov
dec
jbe
sub
cmpsl
xor
push
or
shlb
popa
sub
xor
loopne
aas
ja
rol
sub
adc
jecxz
icebp
test
rolb
adc
ljmp
mov
sbb
dec
cmp
enter
inc
jge
cmp
cmp
jbe
push
lods
test
inc
mov
jo
xor
hlt
adc
push
jo
fisttpl
push
adc
ja
inc
dec
and
aas
sub
xchg
inc
pop
aas
mov
rclb
out
mov
xor
jecxz
cmp
out
imul
call
add
push
mov
add
jnp
sbb
mov
out
push
inc
stos
mov
mov
push
dec
and
cmpsl
dec
jnp
sub
jne
dec
and
jl,pn
ret
jecxz
mov
aad
jns
cli
mov
sahf
cmp
loope
fcoms
out
test
loopne
outsl
mov
stos
lock
jp
xor
inc
mov
pop
loopne
out
jne
or
add
sub
and
and
test
mov
xor
sbb
testb
mov
xor
push
dec
adc
aas
xor
and
pop
push
push
lcall
ret
lret
adc
mov
add
popf
loopne
cmp
repz
or
je
jle
sbb
sbb
cli
cmp
test
mov
mov
push
stos
adc
cmp
ljmp
loope
test
ret
repnz
inc
out
mov
dec
lcall
inc
jmp
sub
repz
dec
leave
mov
je
daa
data16
xchg
cmpsl
insb
or
aas
push
sar
jle
les
scas
test
cmpsb
and
ja
andb
in
je
xrelease
push
add
iret
cmp
movsl
and
hlt
repnz
pop
subb
dec
xor
adc
popa
push
jmp
ss
mov
push
pop
test
aas
test
int3
mov
into
xchg
xorb
xchg
xor
cmp
push
pop
int
adc
aam
inc
lcall
inc
xor
pushf
dec
sub
sar
dec
mov
ja
lods
into
aad
inc
mov
inc
mov
sahf
mov
inc
das
int
mov
lds
cmp
push
and
call
push
jp
shrb
cmp
xabort
mov
jo
ror
lcall
cld
add
clc
inc
rolb
popf
idivl
popf
mov
sbb
and
inc
jne
cmp
mov
push
cwtl
mov
sbb
mov
xchg
ss
push
mov
cli
mov
jmp
cli
fcomps
push
jns
and
dec
inc
sub
xchg
sarb
cmc
cmpsl
dec
jbe
mov
mov
pop
push
pusha
in
push
into
and
sbb
dec
sub
xor
cmc
dec
xor
add
fwait
sub
ja
fnstsw
popa
test
jnp
andl
xchg
push
test
push
sub
insb
pop
cmc
jecxz
negl
xor
sub
das
dec
out
pop
adc
loop
pop
jl
mov
stos
cmp
lods
cmp
outsl
rorb
xchg
rcrl
xor
adc
jg
cld
xchg
dec
sbb
inc
or
jno
dec
and
push
test
ds
sahf
daa
fs
test
movntps
call
adc
mov
in
or
lahf
xchg
into
je
sub
mov
xchg
jo
mov
out
out
decl
jb
adc
hlt
xchg
dec
sbb
mov
out
std
and
sbb
cmc
fwait
ret
test
sub
push
sbb
xchg
and
push
sub
popa
ret
icebp
fldl
dec
push
mov
pop
imul
cmp
mov
js
imul
and
sub
popa
mov
xchg
sub
dec
ret
fstpt
xor
icebp
clc
pop
xchg
push
test
outsb
aas
loopne
sub
jl
push
sub
mov
cmp
sbb
add
loopne
adc
shlb
sub
or
inc
imul
or
push
stos
push
jbe
ds
scas
pop
xor
lea
xor
jb
fwait
out
scas
mov
mov
pop
and
aaa
xchg
pop
inc
int3
imul
push
cmpl
adc
pushf
gs
push
lcall
pop
aam
xchg
int
sbbl
inc
or
out
icebp
jle
jg
shr
sbb
clc
adc
mov
mov
mov
clc
xchg
dec
push
mov
and
pop
sbbb
xchg
js
and
inc
aas
movsb
adc
push
ja
cmp
inc
xchg
loop
cmp
mov
or
out
jnp
push
cltd
pusha
scas
cli
xchg
sub
push
movsb
movsl
inc
cmpsl
jmp
cmp
jne
adc
ljmp
mov
fbld
jl
dec
popl
aaa
cmp
dec
mov
mov
pusha
lret
add
std
testl
pop
push
sbb
add
jo,pn
cmp
xchg
imul
sbb
push
subb
test
mov
sbb
int3
and
dec
xchg
sbbb
ret
scas
jns
int
int
mov
jo
mov
in
xor
add
lea
aaa
jmp
outsl
lret
std
lcall
pop
mov
jae
das
jecxz
icebp
ret
and
add
xchg
jg
inc
xlat
dec
loopne
fadds
jg
xchg
push
call
dec
adc
lock
inc
stos
dec
les
jo
mov
jo
loop
ret
cmp
and
push
aas
lock
adc
mov
jecxz
push
push
inc
in
mov
sub
in
mov
mov
jl
pop
mov
sbb
cmp
add
loope
scas
jo
push
jb
sbb
jecxz
adc
cmp
ret
adc
sti
sti
mov
scas
fisttpl
mov
les
out
rcrl
jmp
popa
repz
cwtl
insb
and
mov
fdivrs
push
mov
xor
insb
fdivrs
into
rclb
addb
insl
stc
xorl
adc
dec
mov
jbe
lcall
aam
out
lds
mov
push
aas
lods
jle
cmpl
popf
jge
fldenv
out
cli
popl
jmp
jns
push
add
shll
enter
dec
sbb
mov
pop
das
pushf
lcall
or
test
inc
loope
rolb
mov
loopne,pt
fimuls
in
mov
mov
clc
or
push
jp
mov
mov
push
nop
dec
fists
lods
sbb
cmp
inc
and
movsb
push
je
aaa
imul
incl
cmp
inc
jg
mov
adcl
jbe
cmp
push
adc
icebp
pushf
imul
jnp
test
and
and
or
das
lock
enter
or
ficomps
cmpsb
outsb
push
out
sbb
jecxz
dec
cli
or
dec
sub
fsubs
icebp
aad
adc
stc
add
js
rolb
mov
out
aas
lcall
mov
lahf
out
xor
push
dec
aas
xlat
xchg
sbb
xor
jle
sarl
out
jbe
adc
pop
mov
inc
pusha
das
pop
hlt
sbb
out
xor
scas
xchg
out
inc
sbb
xchg
jne
fs
fcomps
or
jnp
imull
push
add
lahf
sbb
ds
subb
mov
cmp
mov
ljmp
dec
pop
cmp
in
lret
or
out
pop
add
test
sub
and
ret
xor
jecxz
or
or
jo
cltd
das
sbb
rolb
int
ret
inc
sbb
push
and
cmp
rclb
js
movups
iret
push
jp
icebp
loope
inc
popa
inc
dec
mov
clc
jno
jmp
clc
inc
adc
jecxz
jge
into
daa
inc
cld
lock
pop
loope
mov
push
popa
jns
cmp
negl
sbbb
repnz
jbe
mov
lods
sbb
cli
fstl
cmp
inc
jg
cmp
mov
sbbb
xchg
push
xchg
jb
xor
aam
mov
sarb
jo
ficoml
xchg
sbb
outsb
pop
cmp
cltd
lock
jno
insl
rcrl
rcrb
popa
je
add
mov
add
push
sbb
aas
sub
lock
mov
mov
push
ret
loope
popf
decb
movsl
dec
push
loope
inc
in
shll
lahf
movsl
pusha
movsl
sar
sub
jmp
sbb
push
mov
data16
xchg
in
mov
or
jne
cmp
add
inc
fwait
push
subb
mov
jmp
sbb
pop
hlt
imul
cmp
hlt
pop
shll
mov
sbb
jle
dec
out
imul
pop
arpl
jnp
out
inc
inc
arpl
pushf
cmp
fmuls
loopne
mov
and
je
imul
xchg
xor
xor
rorl
mov
mov
ret
mov
fldl
int
jl
and
in
out
jns
push
movsb
ret
js
add
xorl
fnsave
sbb
inc
stc
fildll
pushf
int3
or
repnz
jbe
fs
sti
test
adc
or
lret
andl
xchg
cmpsb
mov
mov
mov
inc
add
ret
shl
xor
in
pop
je
movsb
xchg
and
movsb
xor
cmpsl
and
and
jmp
push
push
jl
xchg
sbb
je
test
andl
gs
ret
scas
xor
mov
andl
push
sti
enter
das
sbb
mov
seto
add
iret
sub
xor
in
cmp
call
test
mov
and
cltd
pmaddwd
and
cltd
mov
bound
lahf
cmp
add
cwtl
dec
push
ds
movsb
loope
subl
popa
lcall
or
add
cld
push
jge
mov
mov
nop
mov
cli
or
loopne
enter
daa
andl
ds
push
outsb
lahf
jns
shll
ficoml
pop
jne
lcall
adc
sbb
cmp
nop
push
pop
push
test
into
push
roll
jge
leave
or
push
sbb
push
xchg
pcmpgtw
in
push
in
mov
cmpsb
nop
cmp
dec
push
mov
ds
sub
nop
or
inc
ret
inc
pop
jg
inc
roll
inc
xor
cmp
out
movsb
or
nop
pop
pop
ficoml
scas
pop
xor
call
gs
shl
gs
adcb
dec
dec
aas
call
addb
hlt
test
xor
or
or
in
adc
mov
int
daa
jl
sub
xchg
movsl
inc
adc
fwait
int
loop,pt
ret
cmp
popa
mov
push
pop
lods
and
xchg
fldenv
mov
inc
xor
mov
and
xor
js
inc
sahf
lahf
cmpsl
xchg
jge
rolb
mov
sub
nop
add
inc
das
lahf
je
inc
rolb
fbld
or
repnz
mov
and
mov
inc
aaa
es
pusha
mov
adc
fsubrp
popa
push
adc
lods
adc
lea
xlat
sub
movsl
dec
ljmp
js
out
jbe
cld
xchg
jbe
inc
dec
dec
aas
inc
cli
mov
jae
pop
add
dec
outsl
cmc
jne
pop
and
mov
fisttpll
sub
add
push
push
cld
outsb
push
cwtl
loope
jo
popf
xor
lea
cmp
popa
jle
sti
popa
mov
push
cmp
daa
arpl
dec
and
mov
xchg
iret
scas
pop
iret
push
or
add
push
push
aas
fwait
add
jb
fstps
xchg
pop
jno
ds
or
sub
std
nop
xor
jecxz
ret
in
xlat
jecxz
push
rorl
fwait
dec
sbb
mov
xchg
test
sub
repnz
sbbb
out
dec
cmpl
loopne
sahf
xor
mov
pop
dec
pop
push
push
inc
xchg
aad
shll
and
inc
mov
dec
cwtl
lret
cwtl
pop
stos
out
dec
outsb
in
loope
in
mov
movsl
jbe
jecxz
mov
cmc
filds
and
push
jbe
jno
ret
xchg
jno
jg
pushf
push
fnstenv
adc
push
add
addr16
aas
push
sub
repz
mov
dec
adc
outsl
notl
scas
loope
aad
cmpsb
adc
mov
stos
pushf
jmp
es
jmp
es
mov
das
inc
sub
js
mov
xchg
popf
xchg
cmp
mov
pop
bound
mov
inc
mov
outsl
repz
scas
pop
inc
rdmsr
stc
mov
cli
mov
sub
jbe
dec
dec
mov
mov
cltd
dec
push
mov
inc
mov
xchg
fwait
xchg
ja
daa
mov
adc
pop
int3
jns
lock
mov
int3
lock
sub
mov
jmp
nop
pop
fistpll
fdivrl
arpl
xchg
push
leave
adc
xchg
addb
stos
aad
xor
cmp
lds
rol
jecxz
mov
enter
xor
pop
push
dec
mov
and
mov
scas
inc
mov
sbb
fnsave
xchg
mov
xor
icebp
push
add
in
cmp
jnp
jae
pop
and
push
dec
in
inc
ret
mov
stos
lea
cmc
mov
jb
lods
nop
jge
loop
jnp
hlt
mov
mov
or
dec
das
jne
add
push
addl
cmp
pop
ss
inc
jg
xlat
pop
xor
lods
es
pop
cltd
pop
xchg
xchg
inc
xlat
stc
mov
pop
mov
mov
adc
mov
inc
rcr
mov
orb
fildll
arpl
xor
std
inc
dec
pop
sub
mov
fnstsw
test
jbe
mov
push
lret
dec
stos
outsb
out
xchg
mov
dec
pusha
fildl
shl
xchg
mov
and
and
rclb
ss
aam
flds
out
rcrl
daa
adc
test
sub
out
jo
icebp
mov
and
jb
mov
cmp
dec
cmp
pop
arpl
imul
setb
iret
jae
enter
or
enter
out
adc
insb
nop
loopne
cmp
dec
imull
xor
lods
in
test
lds
push
shrb
mov
daa
ljmp
mov
in
leave
ja
aaa
xchg
mov
and
out
sub
cwtl
shrd
fcomps
test
outsb
mov
sub
popa
xor
fidivrl
mov
loope
fs
cld
rcrl
call
pusha
jmp
fbstp
inc
mov
test
stos
mov
sub
sti
push
arpl
outsl
adc
pop
movsb
xlat
ja
fwait
mov
cmp
xchg
xchg
sub
pop
in
test
mov
cmc
push
xchg
mov
fistpll
popf
enter
decb
cmp
xor
imul
stos
push
xor
mov
sbb
lods
ljmp
mov
mov
mov
xchg
dec
icebp
insl
mov
pop
xchg
shrb
or
lcall
fstpl
mov
jle
fwait
js
shlb
xor
call
sbb
xor
adc
push
push
cmpsb
test
add
cmp
inc
cmpsl
popf
ljmp
lods
gs
daa
imul
jae
mov
xchg
push
mov
pop
push
popa
enter
into
pusha
dec
jnp
adc
jb
mov
jecxz
xchg
testb
push
stc
std
jp
mov
xor
push
adc
clc
jle
cmp
sbb
stos
lds
xchg
stos
inc
jecxz
sub
mov
scas
loop
xor
mov
pop
pop
addr16
jbe
inc
lea
fs
jne
xor
mov
xor
mov
loope
push
lret
xchg
sub
popa
fwait
or
adc
and
in
jmp
insb
rol
sbb
adc
cmovl
jmp
push
dec
jo
fldcw
clc
outsb
mov
and
fimuls
dec
or
outsb
mov
jno
clc
insl
rol
push
sbb
outsb
xchg
sbb
cmp
mov
xchg
push
cltd
xor
movsl
xchg
pop
inc
fwait
mov
leave
xchg
inc
jecxz
imul
leave
daa
adc
xchg
ret
sbb
mov
mov
popa
or
insb
rol
sbb
push
dec
mov
fldl
shll
cmpsb
int
xor
cld
adc
inc
mov
sbb
fnsave
cmc
jnp
xor
ficoms
sbb
and
popa
ljmp
iret
fidivrs
xor
std
mov
and
xchg
outsb
rol
pop
int
or
sbb
inc
repz
adc
and
daa
cltd
push
jmp
xor
push
dec
les
je
leave
xchg
cltd
ds
mov
aas
ficompl
ret
jne
repz
fldenv
in
inc
mov
or
outsb
mov
pop
sub
rcr
movsl
xchg
call
stos
dec
jns
mov
mov
addr16
shll
and
sbb
fucomp
adc
loope
cmp
xchg
shrl
aaa
xor
add
push
imul
sbb
push
out
xchg
or
jmp
xlat
movsl
xchg
stos
push
dec
les
dec
or
outsb
jae
xchg
mov
leave
bound
shll
sbb
leave
xchg
cmp
pop
lock
mov
repnz
js
xchg
mov
aam
jae
xchg
sbb
cmp
call
or
mov
or
outsb
arpl
or
jmp
pusha
xchg
mov
sbb
popf
int
xor
mov
es
stos
aaa
imul
xor
enter
cwtl
es
xchg
popf
mull
ret
mov
xchg
jne
and
js
pushf
ret
jle
and
fcmovne
or
jb
ss
ljmp
bound
cmp
rep
xchg
sbb
lahf
dec
or
jp
ret
xchg
xor
lret
xchg
pop
push
in
dec
pop
in
mov
jmp
mov
dec
add
cs
dec
into
imul
jmp
decb
dec
scas
mov
mov
and
bound
mov
lret
popa
xchg
or
jno
or
add
adc
xor
sbb
repnz
mov
or
outsb
out
popf
cmc
sbb
xchg
jae
sbb
push
rcl
sub
cmp
shll
xlat
repnz
je
add
dec
test
data16
xor
sahf
out
test
xchg
mov
and
sub
cli
pop
js
outsb
arpl
out
sbbb
push
jg
fwait
in
xchg
fcomip
xchg
shl
sbbb
jb
sbb
in
loopne
add
cld
cmp
aaa
pusha
outsl
call
mov
dec
outsl
fwait
xchg
inc
jge
sub
repnz
popl
mov
mov
aam
cmp
or
ja
inc
shr
add
cmpsl
or
test
mov
fwait
sti
cmp
cmpsl
adc
fistps
and
inc
or
mov
out
outsl
in
lahf
sbb
aam
sbb
ss
sar
mov
lods
shl
mov
pop
arpl
jno
cld
out
or
aaa
fsubl
icebp
mov
cmpl
push
mov
jl
xchg
aaa
fisubs
lock
clc
sarl
pop
js
pop
or
mov
xchg
loopne
sbb
cmpl
sysret
xchg
cmp
inc
cmpl
mov
js
add
cli
clc
fisttps
cmp
cmpl
lar
fistpll
pop
mov
and
inc
or
push
js
loop
test
insb
sbb
xorl
inc
nop
cwtl
or
enter
xor
add
jge
mov
mov
jb
cs
cmp
mov
adc
fdivl
js
jno
jl
loopne
inc
or
inc
insl
and
cs
mov
cltd
mov
and
dec
mov
les
addb
jp
outsl
mov
mov
jbe
mov
fnstsw
and
sub
mov
loop
xor
fmull
xchg
adc
xchg
out
jbe
cmpsb
fcompl
jmp
push
sarl
jl
cmpsb
cli
outsl
cmpsb
out
in
mov
out
cmp
mov
mov
lahf
lahf
push
jo
or
or
mov
shll
iret
push
cli
sub
cmp
fists
cmp
loopne
xchg
add
roll
sub
cld
pop
jo
pop
in
sub
cld
pop
outsl
mov
jl
pop
loop
loopne
movsl
rorl
dec
sbbl
xchg
or
mov
sub
or
call
cld
mov
lds
mov
roll
in
dec
mov
and
xchg
loop
jge
pop
clc
mov
inc
push
cld
mov
lds
pop
jo
lret
jge
pop
or
sub
icebp
inc
shrb
sbb
cld
pop
outsl
lret
or
pop
or
sub
adc
mov
add
jo
push
loope
mov
pop
or
mov
cld
pop
jo
mov
pop
add
mov
gs
outsl
loop
jle
pop
loop
loopne
mov
pop
add
filds
add
in
dec
sbbb
mov
loopne
or
cmp
mov
adc
jo
lds
mov
xchg
sub
adc
clc
and
je
push
gs
jo
lret
adcl
mov
lds
or
or
jl
pop
loop
loope
movsl
mov
outsl
mov
loop
fists
push
cli
sub
xchg
in
add
adc
mov
scas
inc
jae
and
das
sub
mov
jae
push
jns
out
pushf
cmp
xchg
mov
jns
movsb
dec
rcll
push
jecxz
inc
lret
jmp
adc
rcll
popf
aas
xor
mov
inc
fwait
mov
xchg
ret
icebp
or
leave
add
adc
aaa
mov
push
pop
mov
jnp
clc
test
jno
ret
out
xchg
int
jl
mov
xrelease
pop
inc
sbb
xor
out
scas
inc
cmp
gs
fsubrl
xor
dec
jne
inc
arpl
push
push
stc
int3
repnz
mov
push
stc
addr16
lret
dec
mov
mov
add
xor
adc
scas
lret
cs
fbld
add
fnstcw
jnp
movsl
xor
jno
xchg
aas
xor
xchg
das
mov
out
hlt
xchg
push
ja
aas
ss
sbb
fwait
movsb
stos
mov
dec
dec
sub
arpl
test
adc
js
loop
inc
push
or
cltd
mov
dec
divl
push
jne
ret
jae
fs
xchg
dec
aas
adc
sbb
pop
or
lcall
sub
xor
loop
inc
testl
cwtl
sbb
fmull
cmp
add
mov
aaa
lcall
lret
inc
push
mov
mov
out
add
pop
jl
gs
leave
dec
cmpsb
jl
out
pop
mov
sub
push
jle
scas
decb
pusha
xor
addr16
mov
push
aas
jge
pop
stc
push
sub
idivb
mov
idivb
shl
movsl
test
add
jle
mov
adc
sub
mov
lods
jecxz
movsl
pop
xor
fstl
outsl
into
cwtl
jmp
mull
cmpsb
das
dec
lock
lcall
add
jl
mov
mov
imul
aam
jl
xchg
mov
out
loop
mov
and
mov
jns
jns
in
xchg
es
jg
pop
push
cli
dec
mov
popa
jno
lock
fdivl
mov
popa
xor
fsubrp
jg
hlt
jge
xorb
mov
sbb
xchg
popf
sub
addr16
movsb
loop
adc
mov
mov
jg
notl
add
fisttps
cld
inc
clc
mov
pop
loop
les
mov
inc
repnz
cwtl
roll
pop
fidivl
je
stos
sbb
jecxz
jne
dec
push
or
test
mov
sub
and
mov
je
sub
sub
and
inc
mov
enter
xor
por
pop
lods
ret
mov
addr16
pop
adc
popf
inc
jo
movsb
xchg
test
sub
movsl
jbe
les
lock
xor
loope
lods
jb
shl
xchg
cli
xchg
test
mov
dec
sti
or
mov
push
rcrb
sbb
outsb
push
xchg
cltd
inc
xor
and
imul
xchg
outsb
leave
mov
jg
pop
test
test
cs
inc
mov
fwait
add
push
daa
push
pop
xchg
sbb
xor
push
dec
cmp
cmp
ds
jle
pop
push
mov
in
jp
ja
cmpb
jno
sbb
es
loope
mov
shrl
loope
mov
popa
sub
lds
insb
and
dec
in
jg
pusha
sub
mov
dec
inc
popf
pop
and
sarb
lahf
xchg
inc
mov
aam
neg
sub
or
mov
sub
jmp
outsb
sarb
mov
popf
jb
pop
adc
dec
xor
sub
ds
cmp
ss
std
fs
sub
std
or
cmpsb
cwtl
fs
cmpsb
aam
push
jo
sub
in
mov
imul
neg
cmp
inc
arpl
test
xor
outsb
out
ja
mov
clc
cmp
jae
inc
pop
cwtl
inc
add
cmpsl
es
cmc
repz
xchg
adc
add
mov
test
push
cmp
ds
xlat
push
sub
or
sbb
adcb
out
jp
add
mov
dec
leave
scas
movsb
mov
mov
cmp
daa
adc
mov
mov
push
pop
pop
ja
loope
aam
and
and
jecxz
xchg
enter
clc
leave
adc
inc
cltd
jno
aam
sub
push
mov
gs
adc
mov
repnz
sub
adc
pusha
shll
sbb
cltd
mov
or
xor
arpl
jge
roll
xchg
sub
clc
or
das
mov
fisubrl
sarb
fwait
inc
mov
xor
sbb
fistpl
pop
daa
jle
pmulhuw
and
test
xor
xchg
outsb
popf
lock
ljmp
out
mov
sti
test
shl
cmp
jecxz
popa
push
lea
push
call
fwait
xchg
push
out
aam
and
cmpsb
cmp
push
aaa
jg
fmuls
bound
pop
shl
out
inc
cmpb
ret
cmp
xchg
js
sbb
adc
in
or
fs
outsl
or
mov
sub
es
sbb
inc
pop
roll
adc
lcall
in
sub
jl
add
mov
and
xchg
mov
fdivrs
jne
fs
add
test
rclb
xchg
xchg
subb
cmp
fcom
mov
and
xchg
or
addr16
sbb
nop
sub
daa
inc
pop
lret
mov
mov
int3
cmpsb
dec
xchg
cmp
call
sub
addr16
lods
fnstenv
mov
dec
xchg
out
insl
sbb
insb
sub
ss
fsubrs
outsl
rorb
push
mov
enter
fpatan
pushf
jmp
adc
fsubrl
pop
add
cmc
adc
pop
pushf
outsl
cltd
cmpsl
jns
push
movsb
scas
sub
cmc
push
cli
sbbl
sbb
sbb
cmpsl
push
das
cli
and
cmpsb
daa
sti
sbb
mov
xchg
data16
cmp
xor
repz
fisttpl
int3
or
adcl
and
adc
cmp
inc
jb
push
mov
xchg
dec
loope
int
movb
sub
add
cmp
xor
xor
jnp
inc
push
cli
push
scas
and
mov
enter
dec
cmpsb
sbb
jmp
fldenv
jae
push
xchg
out
test
mov
or
shrb
jmp
inc
cmp
xor
iret
mov
movsl
aam
fisubrl
fucomip
add
cmp
cmp
inc
xchg
xor
adc
loope
fbld
jb
mov
mov
adc
pop
in
pop
jne
push
adc
cmp
mov
and
hlt
sbb
outsb
add
sbb
or
popf
add
cli
hlt
movsb
out
hlt
cmp
or
mov
push
pushl
xor
in
and
out
inc
imul
push
cld
nop
icebp
mov
shrb
jle
dec
repz
jo
sub
rcll
sbb
cwtl
cmpsb
pop
jl
sbb
dec
and
inc
test
bndldx
lods
adc
ret
mov
js
insb
popa
scas
int
xor
aas
out
and
mov
pop
mov
and
add
cmpsb
repz
jmp
mov
push
aaa
mov
ret
aaa
daa
lods
xchg
cmpsb
xor
xchg
andl
push
xchg
daa
mov
mov
decl
out
or
mov
add
dec
xorb
mov
mull
pusha
cs
or
hlt
fiaddl
fbstp
sub
push
pop
sub
lock
and
mov
inc
nop
mov
inc
test
sahf
pop
cwtl
cmc
shlb
fwait
jp
dec
in
pop
pushf
add
ret
cli
and
xchg
call
xchg
pop
pop
sahf
out
das
stc
aam
jbe
inc
rcrl
xor
negl
mov
subl
addb
repnz
push
or
nop
xor
pop
dec
scas
fsubrs
fs
adc
stos
shlb
jmp
jns
pop
xchg
aas
push
inc
inc
mov
mov
popf
insl
cld
imul
call
mov
and
dec
xor
jge
pop
sbb
adc
pushf
push
movsl
cmc
lcall
andb
push
lcall
and
les
stos
insb
mov
fs
mov
and
inc
ror
sbb
subl
and
hlt
mov
adc
hlt
clc
push
clc
daa
repz
ret
and
dec
and
rorb
into
and
bound
add
push
dec
xor
ljmp
cmp
out
xchg
mov
jge
mov
sbb
dec
nop
in
ret
sti
repz
sbb
mov
mov
mov
mov
movsl
push
mov
sub
mov
clc
imul
xor
sub
push
decl
idivb
mov
cltd
sub
jle
daa
pop
adcb
stos
cmp
in
push
mov
xor
mov
inc
cmp
jge
push
rcl
sbb
or
in
or
xchg
or
fildl
mov
insl
add
cmp
ret
lea
dec
inc
and
inc
dec
mov
inc
outsb
shlb
ss
imul
loopne
jg
xor
or
sub
inc
outsl
inc
jg
int3
or
mov
ss
pop
das
jae
pop
cwtl
cli
les
mov
pop
inc
cmp
adcb
push
add
addb
or
ds
xchg
negl
ljmp
jle
rcrb
jle
insl
or
and
xor
addr16
mov
aad
xchg
insl
xor
jno
test
dec
adc
aad
inc
orb
cmc
mov
fmul
adc
movsb
push
xor
mov
or
pusha
into
clc
and
add
or
mov
pop
adc
outsl
popf
jae
mov
imul
dec
xchg
or
mov
cmp
mov
imul
or
mov
je
mov
cmp
mov
pop
lock
sar
popf
sbb
int
xchg
xchg
jo
jne
or
mov
inc
arpl
push
call
add
je
push
lods
inc
sub
adc
pop
xor
inc
pop
shlb
shrl
repnz
stos
stos
loopne
movsb
stos
xorl
das
ljmp
fwait
in
cmp
xchg
cmp
cmpsl
lret
sub
sub
ds
lea
stos
pushf
inc
pop
mov
push
dec
in
daa
dec
lret
hlt
mov
pop
dec
in
repz
cli
jne
ret
fucomip
mov
push
aad
jge
adcl
pop
cld
jge
mov
push
push
rorl
std
js
lock
mov
icebp
lock
pop
filds
pminsw
test
rcl
ret
lods
fnsave
sbb
sbb
mov
movsb
adc
repz
xchg
adc
and
lret
cmp
cwtl
jle
sub
loopne
test
out
cltd
bound
test
movsb
pop
inc
jbe
dec
jge
lea
xor
repnz
jle
push
push
inc
fisttpl
xchg
or
xchg
movsl
stos
push
cmpsl
addr16
or
ds
daa
xorb
mov
mov
add
pop
add
fs
lods
push
add
push
or
jecxz
mov
jo
sarl
mov
scas
addb
int
mov
fldt
aaa
stos
mov
pop
push
icebp
add
or
repz
push
aas
sub
icebp
xor
or
xor
mov
in
lods
inc
inc
dec
cs
xor
inc
jge
movsb
flds
clc
adc
adc
pop
mov
test
loop
pop
or
in
movsb
xchg
xchg
fs
dec
add
imul
and
jne
lret
lret
popa
pop
jne
jno
and
xchg
verr
outsl
xchg
mov
out
cmc
xor
or
in
cltd
adc
xchg
es
mov
jb
daa
adc
sbb
push
push
data16
dec
fs
dec
mov
cmp
pop
dec
cltd
pushf
xchg
mov
dec
cli
adc
fwait
pop
cmp
xchg
loopne
and
sbb
adc
shl
sub
sub
pop
pop
out
lds
aad
and
es
xchg
mov
sbb
mov
gs
aas
mov
dec
xchg
mov
int3
rcl
int3
imul
fwait
xchg
mov
mov
sub
mov
xor
inc
jmp
js
add
push
xchg
bound
xchg
jae
or
ret
int3
lods
sbb
adc
push
adc
jno
movsl
sub
and
div
adc
fisttpl
test
mov
icebp
pop
adc
jnp
xor
and
inc
or
sub
cld
mov
mov
inc
mov
adc
jno,pn
loop
cmp
pop
faddl
inc
iret
out
jmp
or
add
sub
pop
sub
jge
gs
or
icebp
nop
or
or
stos
xchg
add
mov
rorb
xchg
sahf
into
mov
test
add
stc
mov
jb
mov
push
je
sbb
movsb
std
cmp
popf
cmpsl
ja
sahf
mov
xchg
push
enter
push
int
adc
mov
xchg
and
imul
push
sbb
repnz
sub
maxps
std
mov
jae
stc
sub
xchg
sti
dec
adc
insb
push
inc
mov
pop
cwtl
sbbb
xor
xchg
add
movsl
call
inc
adc
arpl
pop
movsb
loopne
scas
push
or
mov
stos
lods
test
cmp
jns
mov
xor
adc
xchg
or
ror
and
test
mov
mov
xchg
inc
sbb
xchg
out
mov
xchg
insl
or
push
add
mov
lahf
add
or
daa
in
in
mov
mov
cltd
loopne
leave
cmp
sbb
fisttpll
mov
cltd
fs
jbe
push
fwait
sub
sbb
ja
or
out
jmp
fsubrl
dec
and
lret
dec
repnz
dec
pop
iret
insb
inc
out
dec
fdivs
push
sbb
push
div
icebp
xchg
push
adc
loopne
sahf
and
push
enter
adc
push
in
adc
stos
push
sbb
sbb
clc
add
inc
pop
movsl
mov
xor
or
imulb
or
sub
inc
push
mov
imulb
xor
aad
pop
imul
imul
sub
mov
das
outsb
mov
pop
fsubr
xlat
inc
das
scas
lock
xchg
and
call
mov
jmp
ftst
pop
xor
in
mov
aas
mov
out
xor
repnz
and
inc
push
aaa
mov
mov
ja
stos
sbb
out
jmp
out
mov
data16
dec
sbb
add
cmp
pop
sbb
mov
xor
mov
push
orb
mulb
ret
pusha
add
es
mov
cli
in
dec
sbb
xchg
cmp
sub
pop
and
ret
hlt
sbb
lahf
inc
sbb
adcl
out
cmc
jp
hlt
repz
nop
je
sub
dec
mov
adc
sbb
pop
push
pop
in
jae
daa
cmp
adcl
gs
ss
jne
inc
in
or
cs
cmp
fwait
movsb
daa
cmp
and
dec
adc
cwtl
inc
inc
ret
xchg
cmc
pop
lds
sahf
or
in
jmp
push
push
sbb
dec
jo
aaa
mov
add
out
mov
cltd
xorb
sub
mov
and
mov
adc
mov
lahf
mov
or
push
mov
repz
test
lds
add
movsl
pop
adcl
cmp
shl
xor
lods
sub
mov
scas
mov
pop
movsb
in
sub
xchg
push
lds
out
pop
mov
add
int
dec
sub
sbb
or
and
stc
add
xacquire
repz
push
mov
push
push
jmp
lcall
js
mov
jno
jne
mov
push
orb
aas
scas
add
mov
mov
inc
fsubrl
dec
adc
mov
mov
mov
push
mov
push
push
sbb
lds
xchg
loope
push
xchg
out
push
je
fs
inc
call
mov
mov
mov
cltd
stc
aam
pushf
ljmp
push
jmp
pushf
sbb
mulb
cmpsb
movsl
and
leave
xchg
out
std
out
fldt
pop
ud0
lret
fsubr
add
push
add
gs
mov
cli
push
std
insb
jg
inc
adc
es
inc
dec
xor
mov
jge
aad
sbb
jl
insl
and
inc
pop
sarl
sbb
mov
imul
push
xor
inc
hlt
bound
push
ss
loope
push
dec
loope
aaa
mov
push
push
jb
clc
addb
add
jbe
repz
pop
xor
sbb
cmp
dec
leave
popf
test
lea
enter
pop
movsb
jns
mov
or
push
bound
mov
xchg
push
lret
mov
lahf
test
or
mov
fnclex
inc
cmp
cmc
mov
xor
ss
jbe
popa
xchg
dec
xchg
daa
mov
cmp
pop
mov
lahf
jp
sbbl
test
xor
jp
mov
je
inc
daa
fwait
xchg
rcrb
arpl
push
dec
cltd
insl
dec
jns
add
shlw
shl
cmp
xchg
pop
pop
orl
insl
and
notl
xor
xlat
in
cltd
loopne
pop
mov
sbb
inc
push
fmul
mov
or
icebp
push
dec
push
sahf
ret
dec
lahf
jmp
loop
lods
sahf
cmp
cmpsb
mov
iret
test
jae
push
lcall
sub
push
xlat
pop
and
jns
xchg
ljmp
or
mov
das
in
insb
pop
sub
dec
inc
add
sbb
lods
imul
add
sub
mov
push
sti
add
push
pop
pop
nop
adc
rep
pushl
mov
mov
adc
or
push
or
cld
in
mov
notb
inc
sbb
mov
ret
mov
push
and
jb
rcll
fwait
pusha
mov
xchg
push
sbb
push
stos
mov
mov
push
rcr
add
leave
cld
cmp
insb
mov
rol
in
xor
data16
pop
mov
mov
lret
fld
mov
mov
adc
add
cmp
xchg
les
sbb
ljmp
push
ds
xchg
mov
stos
cld
cld
addr16
cwtl
push
lea
fsubrs
pop
dec
mov
jns
loope
jmp
mov
jle
aam
aaa
repz
nop
push
fsts
testl
cmp
popa
jo
mov
inc
xchg
iret
mov
xor
adc
mov
sub
stc
jecxz
adc
xor
push
and
incb
aas
and
je
gs
sti
and
sbb
mov
inc
daa
inc
bnd
arpl
push
insl
sub
inc
add
dec
ja
push
aad
aaa
xor
jmp
mov
mov
push
aaa
sub
sub
jecxz
sbb
and
das
pop
nop
test
notb
fcmovnbe
ja
jl
es
int
pop
hlt
or
add
and
pop
loope
push
and
dec
mov
data16
xor
pop
lcall
cld
lcall
xchg
lds
fwait
mov
mov
xor
pop
repnz
jb
and
pop
pop
xor
push
xchg
pop
xchg
cmc
mov
cmp
push
pop
xchg
loop
adc
inc
ss
movaps
lret
data16
mov
arpl
std
out
insl
out
jecxz
lahf
imul
cmp
enter
xor
push
mov
dec
aas
jg
popf
cli
dec
ss
add
inc
gs
sti
js
mov
lock
inc
dec
arpl
add
fisttpll
pop
cmp
repz
mov
xor
or
dec
sbb
inc
or
fchs
cltd
pop
loope
scas
adc
ficoms
xor
push
adc
nop
push
and
fadd
ja
divb
outsl
xchg
sub
fistpl
pop
xor
cltd
mov
lods
out
mov
xor
out
lods
inc
loopne
sub
cmpsl
daa
xchg
ljmp
jnp
mov
test
mov
pop
pop
aam
cli
mov
in
imul
jmp
aaa
out
jnp
mov
test
aas
out
sti
ret
cld
xchg
popf
xchg
sti
inc
int
cld
decb
or
or
dec
insb
sbb
icebp
shll
xor
in
add
mov
lret
adc
test
sub
or
sub
xchg
sub
and
xchg
cmp
movsb
pop
cmp
leave
push
inc
sbb
sbb
in
sbb
jp
js
stos
sub
sub
dec
in
mov
mov
xlat
popa
push
sub
rolb
pop
imul
jg
pop
ret
lcall
jecxz
push
pushf
pop
leave
idiv
movsb
jecxz
ss
movsb
push
mov
ret
cmp
out
mov
xchg
int3
adc
gs
mov
push
pusha
xchg
cltd
add
daa
mov
les
data16
cmp
hlt
jecxz
int
cmp
je
shrl
mov
sahf
jno
fsubrs
into
inc
jno
mov
stos
icebp
pop
sbbb
jne
test
dec
mul
insl
popf
mov
push
inc
roll
jne
sub
gs
add
jle
jp
jnp
scas
insl
adc
and
fsubp
jle
sbb
push
inc
push
icebp
aam
jno
shll
and
dec
mov
inc
cmp
rclb
cmc
jo
dec
mov
in
aas
mov
test
pushf
std
ljmp
enter
roll
sbb
cmp
scas
push
out
gs
lods
loopne
add
push
sarb
out
mov
popl
cmp
or
into
loopne
add
xchg
mov
sar
sahf
sub
jmp
inc
jno
nop
mov
fnstenv
int
and
ljmp
mov
xchg
push
push
xchg
hlt
push
scas
aas
dec
adc
add
push
rcrl
sbb
icebp
aas
push
cmpsl
pop
ja
jg
mov
jns
cmp
lods
pusha
jmp
ficoms
test
rclb
sbb
stos
mov
stos
ds
add
sbb
mov
pushf
xchg
movl
repz
adc
clc
int
mov
cmp
and
aam
test
and
sahf
and
bound
pop
das
clc
mov
into
inc
sbb
test
cmp
ljmp
out
mov
pop
add
xchg
pushf
xchg
sub
push
jge
jnp
or
in
mulb
jae
cmp
inc
adc
in
cmp
xor
test
and
stos
mov
jle
pop
jle
pop
pop
push
xchg
add
mov
or
add
cli
iret
cmp
jl
mov
cli
cmp
arpl
mov
je
cmpsl
push
ds
js
imul
daa
fisubrl
mov
pushf
mov
cmpsl
mov
bound
adc
clc
mov
dec
inc
insb
dec
mov
jmp
out
jle
aas
dec
leave
rolb
loopne
sub
mov
sub
pusha
adc
je
add
dec
jnp
out
dec
outsl
in
jle
cmp
sbb
sbb
push
arpl
cmpsl
pop
subb
jl
insl
rcll
pusha
add
push
enter
movsl
fcmovne
ds
je
cmp
int
iret
cmc
lret
loop
ja
sub
loopne
fwait
sub
std
inc
lea
lahf
xor
and
cmpsl
test
pop
mov
xor
lahf
jo
out
and
cmp
fmul
loope
ja
lret
cs
jnp
lods
js
aas
int3
pop
fisubs
push
jp
cmp
lock
jl
das
adc
dec
out
je
movsb
push
cmp
out
lods
inc
mov
jo
dec
out
dec
imul
jnp
out
stos
aas
xor
movsb
add
popa
lret
jne
jl
insl
pop
outsl
and
mov
cmc
add
mov
pusha
lahf
or
mov
push
add
push
push
lahf
les
jns
pop
xor
scas
insb
pop
inc
inc
mov
xor
jne
notl
lock
out
cmc
fdivs
or
dec
mov
icebp
xlat
out
mov
mov
cmc
ljmp
add
mov
mov
repz
jecxz
xor
fdivrl
aaa
mov
loop
push
aaa
push
imul
leave
dec
jb
stc
addb
jl
test
mov
std
jns
sahf
scas
jmp
jge
adc
pop
mov
inc
sbb
es
ror
iret
dec
pop
add
push
in
outsb
jge
push
ja
divb
insl
lods
int3
jo
stos
xor
sahf
aas
es
jg
adc
inc
push
push
sub
pop
xchg
int3
inc
sub
aam
sub
ficoml
pop
push
fnsave
mov
fwait
or
push
lods
pushf
cmpsb
dec
adc
xchg
popl
gs
subl
adcb
ret
inc
stc
test
dec
jl
test
cltd
out
mov
dec
popf
fistps
sti
adc
cli
ja
sahf
jle
cltd
fwait
leave
mov
cmp
add
or
jg
or
pop
mov
lret
int3
and
and
lds
adc
fwait
mov
rorl
push
push
and
pop
hlt
fidivrl
push
mov
es
cmp
and
jg
cs
add
adc
nop
loope
sarb
mov
lahf
je
jne
fs
cwtl
sub
in
lods
adc
and
push
les
add
add
jmp
inc
push
pop
xor
subb
cltd
jecxz
pop
jmp
loop
imul
fldt
adc
cmc
test
adc
jne
scas
push
push
adcl
add
gs
adc
mov
xor
test
dec
faddp
imul
lea
pop
jnp
insl
inc
arpl
sbb
xchg
out
adcb
subl
xchg
rcrl
mov
insl
mov
inc
pushf
lods
clc
cmpsl
pop
mov
pusha
stos
or
cld
divb
mov
sbb
sub
cwtl
enter
sbb
or
mov
lods
pop
mov
fcompp
aad
out
inc
imul
xchg
sbb
cli
lret
pop
shr
jnp
hlt
and
adc
aad
adc
xchg
cltd
pop
jmp
ljmp
in
pop
scas
mov
lock
lcall
ss
sub
mov
lock
fisttpl
data16
and
jo
pop
fistpl
addr16
gs
pop
push
xchg
push
les
mov
dec
subb
icebp
imul
mov
mov
or
mov
push
and
les
fldcw
mov
pop
jge
mov
push
pop
int3
push
and
and
stos
mov
mov
dec
mov
es
test
ljmp
inc
xchg
xchg
outsb
push
mov
insb
fs
or
sahf
jle
sbb
fistps
outsb
add
mov
pop
and
fwait
push
movlps
mov
push
icebp
mov
loope
pop
xchg
in
mov
pop
and
or
mov
es
lcall
mov
fildll
push
mov
pop
and
nop
shll
scas
unpcklps
ja
push
cs
push
adc
pop
in
sbb
xorb
cmp
imulb
pop
sub
mov
xor
or
xchg
jno
add
movsl
inc
xchg
outsb
and
adc
sbb
je
or
outsb
aam
mov
push
jns
imul
out
xchg
jns
xor
add
push
rclb
pusha
mov
mov
xor
xchg
inc
inc
popf
test
and
pop
jb
ja
dec
dec
xchg
jo
insl
fs
call
inc
mov
jmp
sti
frstor
jmp
sbb
call
in
addr16
lahf
sbb
gs
cld
add
sub
frstor
in
jle
data16
dec
or
lcall
lods
jg
jns
repnz
sub
mov
adc
cmpsl
xchg
inc
cld
mov
fldl
jnp
xchg
mov
fldt
and
mov
sbb
adc
and
mov
adc
xchg
adc
or
mov
or
or
xor
mov
jecxz
add
stos
xrelease
bound
jae
jmp
rorb
sarl
mov
jne
jl
xchg
int
adc
and
cmp
and
aad
cmc
adc
and
xchg
pop
fimull
push
add
daa
gs
jo
lock
push
loopne
outsb
hlt
xchg
arpl
test
xchg
jge
outsb
jmp
insb
test
xor
outsb
or
inc
jp
jg
int
dec
xchg
and
xor
xor
call
pop
or
mov
pushf
adc
mov
loope
sub
jae
push
push
cmpsl
mov
inc
dec
ficoml
sarl
cmc
sub
adc
repz
cmp
mov
js
addb
mov
icebp
add
movsb
rcrl
mov
iret
xchg
roll
pop
cmp
adc
lret
fistps
mov
sub
mov
mov
orl
pop
je
and
sbb
js
sbb
mov
cwtl
sbb
add
hlt
xchg
jne
dec
ljmp
jl
and
push
push
fimuls
push
test
mov
int
mov
outsb
ja
rcr
inc
nop
or
pop
cmp
mov
lods
in
jo
int
mov
mov
adc
loopne
jns
cmpsb
adc
mov
lcall
pushf
or
cmp
ret
dec
aam
or
fadd
xchg
cmpl
jg
setge
lcall
sub
hlt
xchg
jecxz
js
dec
adc
loope
test
pusha
xchg
lock
jns
sbb
out
pop
jle
inc
arpl
sub
adc
or
loop
ja
call
or
aaa
add
loope
fistl
mov
lret
jge
dec
mov
mov
fincstp
sbb
popf
mov
sub
push
xchg
lods
faddl
pop
dec
stos
push
jl
push
or
xchg
aaa
or
shlb
aas
sub
inc
jo
inc
pop
pop
dec
cmp
rol
std
adc
mov
cmp
sub
mov
adc
push
and
clc
sarl
fstps
imul
and
ljmp
sbb
mov
jmp
pusha
sbb
jns
dec
jo
pop
jmp
sbb
rcrl
or
cmpsl
add
mov
repnz
or
loopne
cmpsb
ret
dec
sahf
adc
aad
dec
dec
xchg
pusha
repz
cwtl
int
mov
xor
std
loop
rcl
jae
mov
dec
idivl
mov
cwtl
repz
push
imul
push
jnp
into
xor
mov
ljmp
cmp
and
and
mov
push
sahf
cmpl
mov
push
loopne
jbe
pop
xor
fisttpll
rcrl
add
jbe
hlt
fmuls
inc
sti
in
jo
xlat
mov
inc
hlt
fisubrs
nop
loope
cmp
scas
sub
decb
js
add
cmc
and
inc
aad
inc
push
cmp
int3
iret
lods
mov
xchg
lahf
ret
jecxz
jo
scas
adc
sbb
push
test
pop
jbe
ret
cld
test
hlt
sahf
sub
inc
lods
iret
mov
sbb
outsl
lcall
inc
push
aam
lods
rcrl
jno
mov
add
mov
movsl
or
in
loopne
arpl
push
into
xchg
rclb
inc
mov
ja
pop
sahf
out
push
cmpsb
test
lods
std
jae
js
adc
push
les
fwait
adc
lahf
jb
cld
pop
dec
std
xor
icebp
inc
lahf
ret
cli
leave
fistpll
scas
cwtl
cmpsb
mov
jl
test
lcall
jmp
jmp
aas
in
inc
sbb
xchg
int
ret
rol
hlt
add
inc
addr16
addl
and
dec
rorl
inc
test
negl
mov
and
stc
cmp
rol
mov
cmp
insb
and
daa
rorl
sbb
test
cli
ret
xchg
mov
daa
ja
dec
dec
and
push
in
scas
popa
lods
push
fcoml
jge
jp
pop
iret
ret
mov
mov
xchg
dec
sarb
sbb
test
fldl
inc
aas
mov
sbb
sarb
dec
adc
pusha
cmpsb
add
xor
adc
jae
cltd
mov
or
loope
cmp
outsl
mov
imul
cmp
cmp
insl
add
mov
inc
cmc
ss
mov
js
repnz
loopne
xor
in
dec
lods
jp
jl
clc
jle
cmp
test
adc
mov
jecxz
outsl
jno
fwait
inc
jg
sub
notl
jle
inc
dec
push
int3
in
or
dec
stos
mov
push
mov
sub
mov
jecxz
cmpsb
and
repz
jle
fsubl
push
inc
xor
addr16
jle
daa
subb
insl
mov
fsubr
scas
scas
test
loop
icebp
ja
push
cld
jmp
ficoms
repnz
std
adc
pop
adc
cmp
adc
and
in
clc
cs
sti
fstpl
mov
stc
std
push
popf
jnp
ljmp
push
push
xchg
lea
adc
lds
imulb
xchg
dec
ljmp
and
scas
aad
stc
rcr
inc
ljmp
xchg
mov
fiaddl
repz
lods
pop
popf
and
cwtl
in
test
dec
sub
sahf
iret
pop
ss
sbb
xchg
xor
inc
jno
fisttpll
popf
enter
subb
daa
outsl
insb
and
hlt
add
pop
jne
xor
or
cmc
cmp
popa
repnz
out
and
or
pop
cmp
mov
jae
inc
sahf
std
mov
loope
fdivrl
or
sahf
imul
pop
lea
testl
cmp
cli
sub
push
cltd
xor
in
cmp
aas
fcomp
fsub
out
inc
rcrl
pop
pop
jns
or
test
mov
and
insb
add
jecxz
xor
mov
sbb
jno
dec
shll
xor
daa
cmpsb
add
enter
jne
mov
mov
divl
pop
xchg
je
or
and
add
mov
std
xchg
clc
inc
fcoms
data16
mov
call
push
shr
mov
mov
aad
call
std
in
sub
jg
xchg
int
rcll
pop
cmc
adcb
repz
daa
xchg
rorl
jno
iret
loopne,pt
cli
ja
mov
xchg
cmp
jnp
xor
in
cmp
push
repz
fiadds
cld
divb
xor
ja
xchg
lahf
xor
jge
adc
or
or
call
ja
cmp
cs
push
pop
xor
mulb
mov
cmp
call
cmp
ja
lret
and
test
pusha
mov
push
mov
ss
mov
outsb
inc
mov
or
pusha
pop
xchg
mov
es
sbb
dec
aas
xchg
outsb
jle
movsb
xlat
in
icebp
rorb
mov
mov
mov
fmuls
enter
lock
pop
sti
loopne
imulb
sub
push
subb
and
enter
mov
cmpsl
add
sub
lret
push
in
sahf
adc
movsb
mov
dec
or
and
lock
mov
fcoms
outsb
and
mov
pop
sub
push
jp
push
jge
sub
movsb
test
rcr
or
or
xor
hlt
xchg
fidivrs
aam
sbb
mov
negb
imul
jge,pt
xor
dec
add
shrl
or
int
subl
insb
out
dec
flds
xor
test
inc
aad
lahf
sbb
scas
mov
mov
mov
test
out
pop
mov
dec
xor
in
pop
lds
clc
fucomi
rcr
enter
mov
lret
mov
mov
push
into
xchg
pusha
sbb
jbe
les
fsubrs
aas
jns
cmp
test
mov
cwtl
negb
pop
rcl
fimuls
mov
mov
scas
fwait
insl
dec
dec
pusha
dec
sbb
hlt
push
adc
inc
ret
loopne
jp
jbe
dec
cmp
pcmpeqb
pop
hlt
xor
push
lock
push
sahf
adc
adc
xor
scas
sbb
fbstp
xchg
jecxz
pop
mov
fcompl
push
inc
outsl
insl
out
cmp
push
sahf
daa
inc
sti
ret
jo
or
sti
ret
into
out
xchg
sbb
or
sub
mulb
pushf
js
xchg
xchg
iret
test
ret
icebp
push
mov
pop
and
int
aaa
or
push
xor
addr16
aaa
js
and
test
fldt
arpl
push
adc
sub
add
pop
lret
jne
mov
inc
xor
and
pop
or
lods
mov
clc
push
insl
aad
in
lcall
jecxz
push
cmp
pop
and
pushf
mov
pop
outsb
popf
dec
insb
jnp
mov
in
mov
sbb
lahf
pcmpgtb
hlt
and
adc
fwait
xchg
adc
jno
in
movsl
dec
dec
clc
lret
lea
shll
pushf
pushf
fsubr
sub
popf
pop
inc
pop
ljmp
into
jne
add
stc
pushw
in
jmp
js
jns
fistpll
mov
xchg
cwtl
data16
xor
idivb
xor
jge
in
jge
inc
addr16
push
jl
fstpt
out
out
push
cmp
icebp
out
and
lods
cmp
pushf
adcb
xchg
push
aaa
lahf
cs
mov
add
das
mov
aad
in
mov
adc
pop
shl
addr16
ds
lods
sub
int3
mov
pop
sbb
mov
mov
sti
imul
push
xchg
pop
les
jb
cltd
test
pop
addr16
pop
repz
pop
inc
cs
cmp
or
mov
loope
and
movsl
mov
stos
loope
arpl
pop
dec
push
xchg
sbb
int3
inc
psubq
int3
push
push
pop
in
jo
sbb
fwait
mov
insl
add
pop
jl
outsb
dec
pop
mov
inc
les
xchg
xchg
in
mov
ja
cmp
jbe
data16
mov
call
pushf
pop
mov
or
enter
lods
sbb
lcall
fistps
or
adc
dec
cmp
negl
cs
adc
lods
push
dec
imul
xorb
test
push
insb
inc
outsl
pop
test
push
cmpsl
rdtsc
mov
rcrl
jo
dec
sub
add
in
mov
xchg
popa
loopne
ret
xchg
cmp
cli
shrl
xor
scas
jge
sbb
dec
ds
ds
int3
pop
cmc
icebp
out
inc
dec
mov
pop
call
and
imulb
dec
push
jno
mov
js
popa
and
mov
inc
outsb
fwait
stos
mov
sub
jbe
mov
scas
dec
xor
lods
pop
xor
lahf
repnz
ficoms
popf
cmp
aaa
ss
pushf
lods
cwtl
jns
aad
push
fisubrs
insb
push
stc
in
imul
lret
jge
sub
aas
jnp
xor
bound
jmp
mov
cmpsb
test
lods
pop
mov
mov
decl
in
mov
rolb
jo
mov
popf
ret
imul
jmp
pop
mov
jecxz
out
fisubrs
movswl
mov
cwtl
gs
xor
pop
ja
lds
cwtl
ja
mov
xor
pop
mov
insl
outsb
inc
cmovo
stos
iret
jb
shrl
jbe
test
shrb
mov
testl
js
inc
fdivr
push
sahf
mov
jge
int3
mov
push
cld
js
mov
insl
addr16
xorl
sbb
mov
pop
sub
jns
cltd
pushf
adc
lea
adc
adc
hlt
shlb
popa
push
fs
fbstp
shlb
jae
dec
inc
add
addr16
cltd
sbb
add
incb
mov
cmp
cmp
jl
mov
imul
cmp
and
and
pop
mov
daa
mov
bound
lcall
mov
sahf
mov
pop
das
pop
adc
insb
in
leave
cmpsl
outsl
dec
sbb
fnsave
or
lcall
mov
adc
sub
pop
imulb
mov
jmp
into
bound
jnp
cli
scas
leave
ret
pop
es
mov
lfs
jbe
inc
ljmp
xor
pop
and
mov
mov
test
or
psubw
frstor
out
push
sub
test
sub
cltd
bound
popa
or
inc
push
and
test
lcall
mov
mov
idivb
mov
rcl
daa
sbb
ss
mov
jnp
push
iret
repnz
cmp
aaa
js
lcall
ja
jmp
je
add
sub
add
sub
loopne
pop
mov
cld
ret
cld
int
popf
sahf
outsb
add
sbb
dec
lahf
fdivl
fistpl
scas
je
cmc
cmp
arpl
mov
mov
xor
xor
mov
aas
adc
mov
arpl
shll
push
aam
shll
enter
mov
outsl
out
jge
push
push
xchg
scas
ret
jno
adc
mov
fisttpl
adc
push
inc
insl
jl
enter
mov
jge
sub
andl
dec
into
aaa
jae
inc
int3
stc
mov
and
jno
jmp
mov
and
fs
fisubl
lcall
and
fsubs
inc
pop
inc
jb
sahf
std
pusha
or
mov
test
jecxz
out
mov
out
mov
sbb
xchg
or
xlat
cmp
call
outsl
inc
pop
and
arpl
jbe
xchg
and
aam
int3
call
mov
cmpsl
mov
fsts
testl
cmpsb
out
lods
into
fwait
or
daa
pop
aas
loope
scas
cmp
fdivrs
xor
outsl
movsb
sbb
or
inc
jmp
ss
mov
pop
mov
fwait
xor
ret
add
cmp
insl
pop
sbb
shrb
jnp
out
rcrl
xor
dec
out
int3
xchg
int
test
xor
aad
sub
out
xor
idivl
push
or
fs
adc
add
cmp
into
mov
xlat
out
sbb
sahf
inc
jecxz
sahf
or
cmp
mov
xchg
pop
dec
fwait
insb
cmpsb
outsl
mov
jnp
sbb
enter
call
pop
jmp
stos
inc
xor
jp
fisubrl
pop
pop
mov
test
jbe
add
imull
mov
mov
xorl
jmp
enter
lret
mov
pop
dec
xor
ret
xchg
lcall
dec
fcomi
enter
mov
outsb
cmp
iret
fsubr
pop
in
pushf
ret
fildl
jns
decl
mov
xor
mov
jmp
repz
imul
and
hlt
pop
xchg
sahf
je
inc
jns
leave
cmp
and
ffreep
in
jl
pop
xchg
xchg
rorl
dec
popa
cmpb
xchg
mov
inc
lret
icebp
sub
push
cmp
ret
cmp
jb
fiaddl
and
mov
ja
out
rcrl
icebp
push
popf
lds
and
xor
lcall
mov
mov
push
mov
mov
test
out
pop
or
and
mov
out
stos
ds
and
pop
inc
cmpsb
ds
loope
push
add
push
sbbb
add
dec
and
out
mov
xchg
bound
fwait
xor
outsl
and
insb
push
fmull
xchg
mov
in
xchg
inc
ret
mov
orl
pop
and
out
shrb
push
subb
sub
jge
in
jp
dec
push
mov
stc
frstor
in
loopne
call
in
sahf
sub
or
sbb
jne
das
popa
cmp
fwait
cmp
lods
imul
pushf
mov
pop
jecxz
xchg
pop
push
adc
fildll
jns
jo,pn
int3
test
iret
sub
test
cmc
adc
xor
je
and
dec
fsin
int
icebp
push
mov
daa
out
jno
out
loop
xor
push
jbe
mov
or
popf
out
leave
fstl
jae
pushf
push
lock
shlb
mov
pop
fadd
shll
outsb
ret
sbb
mov
sbb
xchg
lods
cmp
cmp
sahf
jns
les
das
int3
fimuls
popf
push
add
mov
mov
jno
sbb
xor
loop
enter
push
in
dec
mov
cmp
mov
cmp
aad
xor
test
mov
push
cmpsb
out
ret
push
into
fisttps
jp
shll
push
outsb
bnd
cli
outsb
jecxz
mov
mov
pop
shl
out
into
xchg
in
iret
mov
add
xor
test
lahf
jno
or
fldpi
test
cli
addb
push
hlt
xor
pop
and
shrb
push
sub
xor
push
ret
inc
lock
lcall
jg
into
les
repz
ss
mov
jae
in
sbbl
ljmp
insl
sbb
mov
mov
fwait
xchg
mov
sar
pop
xor
cmp
bound
jg
mov
fs
push
jbe
into
mov
sbb
bound
mov
push
fmuls
ds
cli
lods
rcrb
clc
sbbl
mov
cmovo
aam
dec
xchg
xor
cmp
sarl
into
or
repz
pop
inc
push
insb
xor
sbb
bnd
imul
test
sub
push
sub
int
push
dec
inc
stos
cmpsb
mov
cmpsl
aas
push
jecxz
ret
loopne
int
xor
xor
mov
fdivrp
add
je
sti
fsubrl
std
mov
xlat
test
cmc
push
mov
cmpsl
dec
testb
and
aam
sub
push
cmp
push
loope
xor
fmuls
inc
pop
inc
mov
push
shl
fwait
fs
faddl
sbb
mov
push
jo
outsl
int
sahf
call
sahf
cwtl
in
addr16
dec
mulb
push
cmp
sbb
push
pop
fstpl
cmp
mov
clc
fisubrl
daa
dec
loope
popf
cld
pusha
mov
inc
jae
shr
xor
popa
pop
psubd
add
ret
mov
scas
and
rcll
es
scas
out
insb
push
pop
push
mov
std
sbb
or
lods
jp
mov
clc
jl
sub
mov
mov
pop
outsb
arpl
ljmp
call
std
push
dec
cmpsb
cmp
or
bound
xchg
jnp
insl
out
mov
setl
pushf
jno
xor
push
dec
push
sub
adc
lahf
test
daa
loope
or
dec
ret
lock
test
jnp
aaa
adc
add
jge
xor
or
sbb
inc
fildl
fimuls
adc
cmpb
clc
add
inc
sbbl
adc
call
mov
shlb
pop
lds
lods
push
subl
xor
dec
repz
and
mov
jo
xchg
rorb
and
repz
cmp
push
daa
or
adc
push
addb
adc
into
popa
sub
push
sbb
mov
outsb
mov
jecxz
mov
iret
lcall
xchg
dec
mov
test
outsb
sub
sbb
stos
aam
pop
or
fstps
push
xor
push
sbb
test
flds
stc
movsb
mov
fnsave
dec
test
movsl
adc
cli
and
and
xor
sbb
cltd
ss
pop
mov
ljmp
sbb
xchg
xchg
xor
and
fisubrl
lcall
push
outsb
scas
mov
inc
jmp
cmpsb
jbe
mov
push
out
int3
push
movsl
cmp
stos
mov
sub
mov
orb
lret
jl
xlat
jmp
loop
lea
xor
stos
xchg
and
mov
add
add
xlat
shrl
push
test
daa
mulb
or
mov
loope
mov
pop
movsb
jmp
cs
adcb
cmpsl
mov
ljmp
daa
scas
std
push
adc
xchg
push
jbe
test
imul
scas
lds
dec
mov
call
lret
outsl
scas
and
movsb
mov
outsl
fimull
fildl
adc
pop
xchg
mov
push
mov
mov
or
or
push
xor
xor
hlt
lds
es
sarl
std
out
popa
lret
pop
imul
xchg
jo
jle
mov
mov
in
cmpsb
dec
fistl
je
mov
mov
shrb
cld
dec
sub
inc
mov
jne
test
jns
lret
je
adc
pop
imul
push
xlat
lods
or
mov
mov
shlb
or
mov
in
sti
out
out
test
in
mov
cmp
mov
dec
or
popa
inc
es
jge
pop
xchg
test
pop
stos
sub
mov
push
inc
mov
inc
scas
je
and
sahf
divl
sbb
or
or
gs
nop
hlt
ret
ljmp
xchg
sub
fistps
inc
dec
push
fcmovne
les
mov
jp
push
xor
int3
lea
enter
xor
test
xchg
jno
sbb
mov
xchg
cmp
ret
ficoms
cmpsb
cltd
aas
je
pusha
cmpsb
adc
inc
cmp
int3
js
xchg
jmp
xor
loope
jmp
jp
adc
test
push
dec
sarb
and
rorl
fs
fs
in
dec
lcall
data16
subb
es
stos
xor
add
shll
sbb
or
sub
mov
out
sarb
xor
jmp
dec
xor
push
cmp
mov
jp
push
stos
xchg
mov
mov
pop
movsb
or
js
push
jo
push
iret
pop
xor
cs
jecxz
jg
jl
mov
jae
lret
mov
iret
jge
dec
push
testb
push
arpl
add
mov
repz
call
dec
fucom
lock
arpl
loop
mov
fdivl
jae
push
add
fistpl
push
dec
jno
enter
mov
pop
mov
sub
es
push
mov
out
push
cmp
fwait
repz
cltd
movsb
loop
icebp
push
ret
repnz
pop
imul
cmpsb
lcall
int3
aas
mov
jo
lcall
popa
sbb
pop
push
xor
fisubl
dec
int3
mov
xchg
mov
fsubs
xchg
xchg
or
pop
sub
aam
cwtl
ljmp
cmp
push
movsl
xchg
inc
clc
xchg
jl
xlat
in
cmpsb
sbb
int
test
inc
sub
hlt
ljmp
and
outsl
sbb
test
cmp
push
jns
cmp
jne
mov
mov
inc
cwtl
jp
mov
mov
mov
rorl
xor
es
pop
xchg
pop
test
add
ret
pop
pop
pop
outsb
mov
ret
inc
xor
lds
adc
adc
lea
mov
mov
aad
jne
push
iret
pushf
mov
push
das
in
lods
mov
icebp
lret
xchg
mov
mov
dec
mov
fs
xor
mov
mov
cmpsl
ss
jo
lret
push
movsl
cltd
lods
push
movsl
xlat
loope
add
scas
xchg
pop
ds
stc
mov
jg
push
mov
sti
pop
cwtl
mov
jp
inc
nop
cmp
xor
add
pusha
stos
jle
push
shll
addr16
loop
dec
mov
mov
pusha
mov
cld
aas
rcr
test
push
pop
call
sbb
lods
popf
loopne
mov
imul
dec
cmp
scas
push
fwait
in
cmp
popf
ja
test
loopne
mov
jle
mov
pop
sti
push
sub
inc
or
jmp
cmp
mov
addl
call
sub
add
lods
add
pop
hlt
push
orb
mov
fmull
add
loopne
add
jmp
movsb
mov
ja
add
aas
cld
jle
lods
or
jne
dec
adcb
push
adc
inc
inc
nop
jne
adc
push
dec
sub
stos
cmp
adc
ja
mov
call
sub
push
cmp
cmp
cltd
or
ret
popa
aaa
inc
stos
mov
pop
mov
add
sub
xorb
dec
pop
inc
sub
fisubrs
push
dec
or
stc
enter
idiv
push
mov
testl
xorb
out
aas
cmp
adc
mov
cwtl
and
lret
addr16
mov
insb
mov
xchg
bound
cmp
mov
xchg
mov
push
addr16
into
addl
mov
inc
push
out
push
jae
nop
lahf
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
mov
dec
xchg
xor
fnsave
add
je
nop
dec
inc
xchg
add
sbb
clc
adc
xlat
cmp
iret
daa
jnp
cmp
idiv
out
jl
nop
mov
lock
test
sahf
fs
mov
mov
inc
or
mov
stc
sbb
xchg
dec
das
lds
adc
outsb
lock
or
mov
bswap
add
push
rclb
inc
sub
mov
bound
xchg
cmp
outsl
fiaddl
bound
add
or
pusha
or
push
add
int3
lahf
jle
call
sarb
inc
ja
aam
loopne
add
scas
mov
rcr
push
fimull
shlb
push
add
xorb
ret
jle
mov
divb
jns
in
or
mov
cmp
sbb
enter
cli
mov
adc
mov
shlb
cmp
cmp
add
xor
loopne
and
inc
scas
add
sub
ror
mov
je
mov
dec
inc
scas
andb
stc
or
dec
ret
ret
loopne
test
inc
adc
sub
bound
out
push
dec
sbb
ljmp
inc
sbb
add
adc
mov
fisttpl
enter
test
outsb
add
xchg
sbb
pusha
or
fs
aad
aad
jnp
movsl
ja
ja
jp
sub
dec
push
fildl
jmp
shlb
scas
adc
imul
ficoml
test
xchg
cmpsb
xchg
test
test
xor
adc
sub
jb
dec
cmp
cld
repz
jb
jb
int3
mov
pop
xchg
sub
dec
das
out
mov
fimull
mov
fisttpll
jb
repnz
cld
dec
jnp
ja
div
jmp
aaa
pop
les
fisttpl
jbe
mov
stos
or
push
mov
mov
es
mov
test
dec
push
or
inc
imul
dec
pop
dec
jno
push
movsl
pop
mov
adc
and
imul
pop
mov
adc
cld
add
testb
mov
mov
adc
int3
mov
push
sbb
push
scas
xor
jg
data16
mov
leave
ljmp
dec
popf
in
hlt
sahf
add
movsl
movsb
xchg
lods
jns
insl
imul
xchg
lods
mov
lods
aad
jmp
push
sub
sub
adc
inc
xchg
repnz
push
mov
adc
jp
fdivrp
mov
push
ficoms
xchg
rclb
stos
pop
push
inc
ja
mov
jmp
mov
mov
adc
fndisi(8087
imul
pop
loopne
sub
add
mov
or
in
test
mov
jl
cmp
out
loop
shrb
xchg
out
inc
jnp
pop
in
scas
jmp
fwait
jmp
movsl
sbbl
sub
pop
xchg
sbb
push
and
insb
inc
aaa
rclb
xor
push
cmp
sub
mov
aaa
subb
jns
xor
jp
mov
fists
insb
fs
stos
sbb
lds
mov
pop
pop
jb
fstl
ja
popf
stc
fldt
sti
test
mov
dec
sarl
cmp
rclb
mov
cmc
add
jno
dec
lahf
mov
jbe
mov
pop
fisubl
xor
push
sub
sub
mov
adc
or
cmp
push
fistl
into
int
data16
in
fidivs
mull
sbb
inc
loopne
in
cmc
lds
lds
out
mov
jo
in
jae
pop
out
jmp
push
and
and
lods
mov
push
fcoml
push
loopne
subb
push
sub
jno
repnz
dec
outsb
test
test
xchg
or
pushf
fiadds
aam
mov
rcll
pop
aad
jno
imul
jb
or
adc
pusha
and
dec
int3
xchg
fmull
and
dec
andl
and
pop
dec
aas
xchg
sub
jns
mov
jns
jl
cmp
imul
aad
push
push
xor
rcll
mov
xchg
mov
jb
dec
in
xor
and
pop
outsl
test
pop
jecxz
jp
cs
lcall
stos
mov
mov
jp
into
push
jo
pop
and
push
push
mov
addb
cwtl
push
das
out
icebp
or
loop
in
jbe
mov
cmp
jns
jp
mov
mov
iret
in
les
or
sti
das
fs
and
dec
aad
mov
fisttps
cli
xchg
cmp
adc
ljmp
jp
mov
pop
xchg
xor
outsb
and
outsl
imul
lcall
inc
fmul
aad
mov
scas
xchg
xor
int3
dec
je
outsl
daa
lds
fcos
xchg
dec
stos
aam
mov
and
sahf
lods
movsl
shlb
push
cld
push
and
das
pop
jl
mov
mov
outsl
xchg
cwtl
repnz
pop
fisubl
cmp
xchg
add
mov
mov
or
mov
movsl
pop
dec
mov
pop
test
movsl
stos
test
and
xlat
add
adc
xlat
cmp
xor
mov
movsb
mov
mov
clc
pop
loope
in
jno
mov
xchg
jbe
rorl
mov
lret
pop
pop
pop
fisubl
pop
pushf
ret
mov
xchg
xor
mov
xchg
jmp
lds
test
rclb
lods
sbb
icebp
cld
jle
xor
in
imul
or
cmp
mov
mov
mov
addr16
insb
mov
or
sub
sub
lods
gs
les
or
adc
mov
inc
mov
cmp
jmp
daa
mov
aam
lods
adc
dec
sub
push
sub
mov
dec
roll
push
lds
dec
sub
movsb
adc
out
fidivl
out
subl
xor
ficoml
test
insb
add
sub
mov
dec
pop
enter
in
push
xlat
loopne
dec
jp
xchg
ja
jne
ja
cmp
sbb
daa
loope
or
dec
ret
lock
test
daa
loope
scas
lret
jmp
sub
jo
push
ja
in
mov
sub
pop
outsl
push
push
jg
roll
mov
clc
sub
jnp
shrl
add
movq
xchg
lret
in
into
cld
sarb
ljmp
loop
mov
or
mov
inc
sbb
mov
sbb
lock
xchg
decb
xor
adc
sub
ror
pop
mov
scas
xchg
pop
decl
fs
push
sbb
outsb
or
add
adc
in
sub
xor
loope
ss
fists
fsubrl
dec
popl
dec
imul
pop
int3
test
mov
or
adc
ficompl
rclb
push
jl
mov
mov
stos
enter
hlt
imul
incl
fstl
dec
mov
stos
daa
int3
pop
and
shl
lea
cli
mov
xor
push
mov
fsubrs
mov
movsb
fsubs
vandnpd
lahf
call
out
scas
les
cmp
outsl
repz
mov
test
push
dec
jmp
fstpt
mov
jne
cli
jae
pop
fidivrl
popf
sub
inc
sub
int
xchg
mov
cmp
in
insl
cmp
or
push
dec
and
popa
adc
shll
clc
jne
jne
dec
adc
jae,pt
aam
adc
push
jo
loop
jmp
insb
xorb
push
and
cltd
pop
dec
adc
bound
jmp
pushf
cli
popf
sub
mov
jno
sub
jmp
lock
pop
mov
cmp
inc
jnp
test
sub
or
in
and
sbb
sbb
es
call
or
hlt
mov
ret
push
jb
pop
movsl
cmp
loop
sbb
xor
cmc
in
xchg
sbb
mov
cmp
jmp
ja
mov
mov
bound
sbb
pop
lds
in
notl
ret
repz
stc
and
sbb
insb
mov
ret
pop
cmp
cmp
xor
cltd
xor
jmp
out
cmp
jmp
sbb
popa
mov
adc
dec
dec
clc
mov
xchg
and
lds
xchg
mov
ficomps
mov
mov
out
dec
push
nop
hlt
dec
mov
ret
into
inc
cmp
nop
mov
out
push
imul
lods
and
mov
sti
adc
cwtl
dec
inc
ss
or
mov
add
int3
jno
subb
lcall
jge
movl
or
cmp
cwtl
lcall
jg
enter
sub
fmuls
fwait
cld
adc
nop
daa
push
insl
push
push
pop
ret
fsubr
enter
sub
pop
add
dec
ljmp
sbb
add
sbb
stos
add
mov
subb
and
and
ret
fdiv
jmp
cltd
mov
or
cli
in
cmp
pop
hlt
mov
int3
cmpsb
or
lret
mov
clc
insl
dec
xlat
pop
pop
lahf
stos
dec
xor
mov
xlat
cli
xchg
out
add
dec
clc
xchg
ss
jo
pop
xchg
jg
es
arpl
mov
or
lock
adc
pop
push
ja
xlat
ja
xchg
into
inc
scas
jbe
and
in
cwtl
rorl
movsb
pop
push
pop
aad
jb
dec
mov
push
dec
outsl
int3
push
and
dec
out
cmp
xor
mov
ret
mov
sub
outsb
inc
sbb
jnp
cmp
mov
or
mov
add
andl
or
mov
jecxz
xlat
inc
mov
add
fsub
inc
xor
jno
jbe
popa
aas
les
add
adc
idiv
xor
jmp
mull
cmc
mov
fldcw
clc
jl
aaa
sbb
out
fs
or
adc
sbb
add
int
cmp
aad
or
fldcw
fsubl
ret
push
sub
cli
sbb
lea
loope
or
int3
jae
ja
cwtl
inc
cmc
out
push
mov
mov
in
les
scas
in
arpl
movl
in
sbb
jae
add
lea
in
pushf
imul
enter
and
test
mov
dec
lock
jg
call
ljmp
fsubs
lods
out
sarl
push
mov
ja
pop
icebp
and
jl
clc
sub
outsb
cs
loop
pop
loopne
fbld
pop
add
xchg
xlat
into
cmpsl
js
icebp
repz
das
sahf
shrb
dec
sbb
in
xchg
xor
ds
shlb
cs
sub
leave
push
cmp
dec
xlat
dec
in
stos
lcall
test
jmp
jo
pushf
xor
icebp
pop
fs
mov
mov
out
lds
popf
dec
jmp
loop
jb
pushf
mov
in
jle,pn
push
fbstp
sbb
mov
and
mov
pop
mov
imul
pusha
insb
adc
xchg
aas
sahf
inc
add
push
daa
imul
pop
fsubrl
mov
fisubrs
cs
pop
orb
cltd
jns
nop
in
and
mov
rcrl
mov
adc
cld
or
ja
loope
cld
and
int
daa
adc
jmp
pop
or
adc
cmp
adc
bound
lock
dec
jle
imul
stc
sbb
mov
adc
test
cli
dec
jecxz
inc
cmp
mov
test
cmp
scas
pop
mov
jmp
popf
sub
leave
pop
mov
ds
jecxz
sub
rcr
adc
add
sbbl
test
xor
cmp
std
mov
dec
ss
arpl
inc
repnz
out
in
mov
adc
icebp
cs
jecxz
and
mov
addr16
jge
and
cs
mov
inc
or
push
icebp
mov
std
dec
les
cmpsb
push
and
jno
decl
cs
sub
jae
push
sti
xor
dec
cltd
xor
sti
ja
cld
push
in
fucomp
pop
adc
pushf
out
outsl
scas
aaa
mov
cs
aaa
adc
cmpsb
add
mov
fdivrl
shlb
dec
mov
dec
imul
cmp
hlt
sbb
jnp
addr16
sti
sub
mov
outsb
push
xchg
lods
aaa
push
mov
loop
cmp
sbb
test
aaa
lcall
jecxz
inc
fnstcw
out
sbb
sbb
mov
je
sahf
xor
sbb
lock
mov
test
inc
sbb
ljmp
in
pop
jecxz
pushf
das
es
in
cmp
inc
loopne
add
int3
and
mov
and
ret
iret
into
xchg
and
das
hlt
sbb
dec
dec
in
lcall
jnp
inc
arpl
test
mov
cmp
xchg
xchg
add
scas
xchg
jmp
je
icebp
cmp
jg
jae
fldl
lcall
mov
out
xor
aas
lcall
scas
sub
sub
push
pop
pop
jae
push
cmc
sbb
mov
push
orb
dec
aam
je
sub
sub
jmp
push
aaa
in
jl
inc
fs
fdivrl
xor
push
mov
das
aaa
mov
lahf
fisubrl
ljmp
xchg
lret
fisubl
lahf
das
mov
into
stc
cmp
call
imul
mov
mul
out
jb
jnp
aam
or
test
jne
xor
cmpsl
mov
sbb
push
xchg
adc
cmp
fisttps
arpl
in
shlb
sarl
ret
mov
cmp
loope
jo
push
sub
loope
aaa
dec
sbbl
xor
fbld
daa
cs
cmpsb
fwait
sub
dec
jle
jle
jns
out
push
aas
fs
jmp
hlt
dec
cmp
dec
das
in
jno
add
sub
fidivrl
jae
jae
jae
add
pop
jge
ror
popf
dec
push
mov
sbb
jecxz
in
leave
pop
mov
push
mov
xchg
or
inc
sbb
adc
mov
dec
enter
pop
xchg
mov
loopne
dec
daa
fsubl
lock
lcall
dec
fdivl
mov
dec
outsb
mov
mov
je
cpuid
jmp
push
mov
xchg
scas
stc
pop
js
xor
imul
mov
sbb
pop
push
js
test
in
out
push
or
mov
jmp
mov
xchg
mov
and
into
cwtl
adc
xor
aam
cmp
mov
mov
mov
aam
inc
repz
push
xchg
adcb
cmp
adc
aam
add
jl
fbld
loopne
sbb
addl
frstor
in
imul
sbb
mov
sub
aaa
int
push
cmpsb
jl
adc
mov
test
shlb
or
sbb
inc
addr16
das
jge
jp
clc
xchg
clc
ret
push
in
inc
jns
repz
cld
jg
ret
or
pop
xor
cmpsl
xor
xor
dec
mov
ret
into
xlat
adc
test
or
cltd
popa
mov
inc
in
in
loop
popa
pop
cmp
ds
lahf
cli
add
aam
cmp
push
aad
imulb
add
aam
push
cltd
xor
das
xchg
scas
cmp
je
sbb
das
test
aad
es
in
sbb
jp
mov
pushf
dec
sahf
push
dec
stos
add
int3
icebp
xchg
lret
pusha
jecxz
call
push
and
add
pop
or
and
inc
mov
and
add
or
adcb
add
push
or
mov
shrb
mov
push
punpcklwd
or
push
push
add
push
sub
or
rclb
jl
jne
lea
popa
gs
loope
dec
xchg
imul
mov
loope
jo
adc
mov
ss
je
xchg
adc
adc
mov
pop
enter
sbb
or
sbb
pusha
rclb
jno
cmc
aas
xor
test
add
or
jg
mov
mov
loopne
in
sub
hlt
inc
rorl
pushf
or
add
xchg
loop
mov
pop
jnp
sahf
in
dec
mov
popf
mov
pop
sahf
or
and
sar
daa
cwtl
cmp
push
mov
adc
loope
int
pop
push
dec
ss
outsl
cmp
in
dec
addr16
lret
out
pop
push
mov
pushf
movsb
add
mov
out
xor
stos
jne
xor
push
andl
sbb
jbe
mov
mov
fldt
cmp
std
jae
psrad
xchg
imul
xchg
pop
sbb
jo
pusha
sti
rcll
lahf
xchg
fsubr
shll
mov
movsb
and
sti
or
in
pop
cmpsl
stos
add
orb
mov
push
mov
fcmovb
sub
fstpl
mov
mov
ja
sbb
hlt
sbb
push
push
inc
sub
add
xor
xor
cmp
jb
imul
aam
insl
xor
mov
add
aad
shlb
dec
negl
mov
push
mov
xchg
ss
inc
jp
adc
xchg
jae
insb
xor
mov
and
lea
and
xor
xor
test
sbb
inc
mov
adc
inc
test
mov
lock
cmp
lahf
inc
jno
mov
mov
call
xor
xor
jb
mov
jp
imul
fdivrp
sbb
rclb
push
adc
or
js
push
hlt
sbb
xor
add
inc
xor
adc
jo
inc
ret
pop
adc
cld
dec
push
pop
jp
or
pop
je
and
mov
pop
xchg
cmp
or
or
daa
sub
dec
or
ficomps
repnz
fs
fdivs
pop
or
inc
test
push
xor
xchg
pop
mov
int
movb
push
fmull
cwtl
adc
mov
push
jle
inc
cvtdq2ps
testl
sarb
mov
jno
inc
out
sbb
or
and
mov
cli
xchg
rcll
jl
pop
repz
or
add
nop
lahf
adc
pop
or
mov
or
pop
jg
sbb
cmp
faddl
in
sub
pop
test
or
pusha
jmp
insb
or
sbb
insl
sub
sub
pushf
or
out
inc
or
iret
ret
pop
std
into
push
mov
outsb
loopne
sbb
aad
movsb
adc
sub
imul
xchg
nop
mov
loope
adc
mov
push
inc
xchg
pop
scas
fists
mov
jle
inc
cwtl
xchg
les
xlat
es
or
in
in
sahf
stc
ret
jns
ret
jne
push
imul
sbb
sti
lret
js
shl
jae
mov
leave
test
pushf
adc
push
jbe
or
adc
in
xor
jmp
xor
jbe
xchg
jno
add
or
cmp
add
add
mov
and
add
and
mov
xor
or
mov
adc
leave
xor
xor
sahf
xchg
sbb
mov
adc
and
addb
and
mov
out
in
das
add
sub
sub
mov
icebp
or
push
and
cmpsl
shrl
je
rcrb
push
xchg
xchg
pop
push
inc
xor
pop
add
shr
adc
pusha
adc
shlb
push
out
mov
imul
pop
xor
sti
daa
fwait
out
lock
cmpsb
insb
das
pop
mov
fimuls
fwait
cmp
jle,pn
push
and
add
add
xchg
or
jae
mov
adc
or
les
add
icebp
out
mov
pop
mov
pop
inc
cld
in
divl
sti
pop
sbb
xchg
sub
cmp
ret
call
jl
das
adc
aas
jns
push
ja
nop
sti
pop
les
test
sar
mov
mov
aas
cli
movsb
out
rcl
rorb
mov
hlt
mov
daa
pop
int3
dec
test
sti
add
lock
xor
jo
pushf
sub
and
cmp
shlb
xchg
or
fnstcw
jno
int
mul
fcompl
pop
sbb
xchg
jl
imul
aas
arpl
rclb
adc
seto
pop
fidivrs
in
or
cld
jle
jl
dec
mov
xor
loope
pop
xor
jecxz
lock
clc
pop
or
movb
shl
jmp
jns
repz
in
imul
sahf
std
idiv
mov
imul
jle
sbb
jge
popf
sti
push
call
stos
push
out
jmp
or
clc
daa
in
jl
test
jg
ret
xor
jne
fs
hlt
xor
cmp
stos
jnp
scas
dec
sbb
daa
or
test
popa
mov
in
roll
sbb
pop
xlat
sub
dec
mov
mov
cmp
add
fucomi
mov
testb
sbb
sbb
imul
or
add
out
mov
loopne
xchg
mov
mov
sahf
shrb
lcall
or
push
in
sub
or
faddl
pop
ficomps
mov
fildl
push
mov
mov
jmp
ret
dec
fistpll
dec
and
cltd
orb
sbb
aad
dec
jge
dec
adc
cld
mov
mov
repnz
add
pop
sub
neg
dec
sub
cs
popf
loop
lock
xchg
jne
push
jo
cmp
pop
test
stos
xor
xchg
mov
sub
adc
dec
pop
inc
ja
mull
loop
jle
inc
mov
dec
and
and
fisubs
jbe
dec
loop
cmpsl
cli
imul
add
xor
js
mov
les
roll
sbb
mov
mov
adc
jecxz
or
jl
mov
or
jle
data16
and
aas
or
idiv
jae
loope
xor
jle
out
xlat
xchg
les
xor
cmp
add
lret
leave
icebp
out
jno
xchg
sbb
cmp
xchg
pop
adc
cmc
cmp
mov
fadds
call
test
cmp
cwtl
mov
sti
adc
sti
lahf
mov
es
mov
mov
pushf
dec
or
mov
rcll
mov
pop
outsl
pop
cmp
comiss
cmp
xchg
dec
stos
shll
cmpsl
inc
sbb
pop
cmp
out
jno
add
in
jno
push
das
jecxz
loop
idivb
jo
into
add
dec
xchg
and
adc
dec
and
imul
pop
insb
out
and
mov
pop
data16
outsl
psrad
cmp
test
leave
sar
xchg
popf
lock
cmpsl
xorb
jo
loop
mov
mov
pop
pop
popa
std
mov
lock
inc
add
pop
pop
cs
inc
ljmp
scas
cltd
mov
push
cwtl
sub
inc
lcall
lea
jo
pop
pusha
push
je
push
les
xchg
or
lret
das
bound
push
cs
fcompl
aaa
cmpsl
or
loope
and
mov
or
loopne
or
daa
adc
shrl
inc
push
jl
sub
shlb
jbe
iret
xor
sbb
pusha
stc
jl
mov
dec
lds
hlt
pop
lahf
stos
xor
inc
push
cmp
movsb
sbbb
mov
ds
sub
mov
push
jle
sysenter
mov
aaa
gs
xchg
insb
sbb
cs
stc
test
in
dec
ret
repz
and
xor
jg
pushf
cmp
pusha
lock
dec
sbb
lea
jecxz
les
xchg
or
testb
ret
add
shl
js
jno
push
jle
mov
ret
xchg
push
cli
cld
insb
xor
popa
fwait
add
mov
std
rcr
test
into
xor
sbb
pop
mov
dec
std
sbb
hlt
and
hlt
inc
mov
arpl
inc
pop
sbb
out
xor
xchg
lahf
mov
sbb
out
xchg
cltd
mov
sbb
ljmp
fdivrl
jb
xor
sbb
mov
lcall
outsl
mov
out
loopnew
xchg
jge
sub
enter
xacquire
cmpb
inc
fstl
ljmp
sub
add
mov
fiadds
mov
jae
adc
dec
xchg
jne
pop
pop
jae
jle
inc
pop
sbb
sub
mov
inc
jns
ret
push
clc
insl
inc
repz
xchg
jle
loopne
repz
xor
mov
mov
lahf
xor
jl
xchg
test
les
pop
jb
dec
std
jmp
dec
shrb
sti
test
mov
pop
mov
adc
xor
pushf
pop
lret
jg
push
jge
std
add
mov
lods
xchg
mov
sbb
xchg
mov
cmp
jo,pt
in
clc
xchg
lds
call
icebp
stc
scas
xor
pop
mov
dec
rcll
mov
mov
and
lcall
insl
fadds
fadds
in
cld
inc
xor
loope
cmc
mov
fcmovnb
xlat
into
test
test
loope
call
pop
addr16
mov
call
das
adc
jmp
push
lfs
sub
inc
roll
push
scas
and
or
repz
cmpsl
push
shll
push
clc
cli
push
orl
mov
mov
jle
lock
lea
pop
ja
ja
xchg
pushl
cwtl
loop
fdivp
cld
add
mov
ja
test
mov
mov
push
push
inc
rorl
es
dec
lock
orb
adc
mov
push
push
inc
jge
add
cmp
xor
inc
or
lahf
aaa
sbb
popf
mov
dec
add
xchg
adc
adc
pop
ret
in
loopne
shll
test
dec
and
shll
leave
or
andb
jne
idivl
orb
push
and
push
cmp
lcall
stos
adc
jecxz
movsl
cmc
fisttps
in
insl
adc
mov
addr16
mov
cmpsb
mov
shrb
adc
add
outsl
pop
add
or
add
inc
push
rcll
stos
subb
shrb
push
push
add
or
sub
ljmp
add
add
push
mov
mov
inc
adc
sbbb
mov
add
pop
add
and
and
add
mov
inc
cmpl
nop
jae
mov
mov
insl
add
adcb
add
pop
xor
add
jne
test
adc
fldl
hlt
aaa
adcl
dec
and
adc
xor
sti
sbb
das
pusha
mov
xlat
rcrb
testb
add
cmp
shr
roll
add
loopne
inc
addb
or
scas
dec
and
dec
fcoml
mov
push
and
add
xor
ljmp
push
or
add
pusha
jmp
mov
cwtl
push
jmp
mov
xor
mov
or
aam
and
sahf
stos
xchg
test
into
cmpsl
jmp
jnp
inc
andl
fiaddl
mov
push
loope
insl
inc
xchg
pop
outsb
or
pusha
adc
xor
mov
loopne
andb
mov
push
push
sbb
in
pop
rcr
adc
xor
sarl
out
stos
call
imul
jmp
leave
jl
rcl
mull
add
ret
push
mov
notl
mov
insl
push
lods
add
xor
add
or
lods
push
ret
cld
and
ss
jge
jle
add
or
inc
fsts
aas
filds
xchg
ss
pushf
cld
mov
loope
mov
not
out
xchg
cmp
sbb
ss
push
mov
fbstp
sub
fldl
jl
mov
adc
jns
decb
das
je
sub
and
adcb
mov
xor
movsb
push
adc
add
push
push
push
inc
push
add
pop
mov
push
xchg
not
pop
push
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
ret
lock
faddp
loopne
xor
addl
xorl
dec
add
dec
add
dec
add
dec
add
dec
add
sbb
add
popa
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
inc
adc
push
orb
popa
inc
adc
adc
subl
push
mov
iret
sbb
dec
adc
mov
mov
adc
sub
jb
push
test
test
test
test
test
sbb
sbb
sbb
sbb
subl
subl
subl
subl
stc
add
or
xlat
xor
cmp
or
mov
inc
xchg
or
or
or
or
or
fs
mov
add
dec
add
dec
add
loop
mov
sub
movsl
add
add
push
test
push
test
mov
int
andb
out
out
fbld
sub
mov
orb
sbb
adc
faddl
xor
call
add
dec
add
xchg
mov
mov
cmp
push
scas
jmp
jnp
clc
mov
jp
cld
stc
cmpl
jmp
imul
pop
movq
mov
int
in
sub
adc
jnp
fucomip
push
scas
fwait
mov
inc
inc
shl
loope
mov
aas
pop
iret
nop
or
xor
std
lods
xchg
sti
mov
push
movsb
pop
out
andl
ret
inc
pop
add
jg
adc
jle
lods
mov
jmp
hlt
arpl
cwtl
fwait
pop
clc
aaa
mov
cli
in
addr16
adc
das
inc
loope
mov
push
push
mov
imul
mov
test
jns
cmc
mov
insl
jge
stc
jl
fldcw
fimuls
enter
mov
ret
xchg
mov
mov
out
pop
clc
dec
test
jecxz
cmp
rcrl
fisubrs
jg
fdivs
fisttps
lahf
aas
leave
or
popf
mov
or
shrb
jp
xchg
out
out
icebp
daa
xchg
jecxz
scas
mov
push
push
push
pusha
push
loope
mov
inc
testb
in
sbb
xchg
je
xor
inc
push
lds
ljmp
and
mov
xor
enter
lods
das
jbe
test
mov
mov
or
push
les
scas
and
data16
pusha
shrl
xor
fsubs
clts
ficoms
lock
fisubrs
adc
jecxz
sub
cmp
cmc
cli
mov
rcrb
pop
mov
sub
mov
mov
fdivrl
mov
mov
inc
out
sti
ja
jp
arpl
int
xor
jmp
idiv
hlt
cmc
jl
jl
pop
stc
pusha
inc
sbb
jle
iret
mov
aas
enter
aas
jge
fwait
dec
add
idiv
popf
aad
std
in
pushf
mov
clc
test
sbb
cmc
push
mov
lods
icebp
rolb
subb
xlat
movsb
repz
fadds
fcomip
fiaddl
add
sub
stos
mov
shr
fsubrs
sti
jae
jl
cmc
push
dec
mov
mov
mov
mov
xchg
in
xchg
roll
xchg
or
test
cltd
or
nop
stos
pop
loope
mov
test
sub
push
pop
in
lret
mov
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
dec
ret
lock
test
daa
loope
or
gs
enter
ret
cs
out
mov
into
cmc
jmp
int3
push
enter
inc
mul
or
scas
inc
js
inc
idivl
jbe
lahf
xchg
xor
lcall
mov
test
orb
and
xchg
andb
adc
inc
and
pop
test
push
inc
ja
fadds
sbb
outsl
adc
or
and
mov
in
push
divb
es
adc
jmp
repnz
leave
outsl
out
popl
adc
sbb
xor
inc
aas
or
jg
xchg
adc
sub
xchg
adc
inc
or
push
stc
dec
inc
dec
pop
inc
add
or
popa
stc
inc
add
adc
adc
sub
lods
mov
jl
mov
mov
mov
repnz
imul
mov
inc
xchg
in
mov
push
or
dec
xchg
and
mov
movsl
into
pop
mov
subl
idivb
mov
xchg
cmp
pushf
and
add
cmp
mov
xchg
mov
js
pop
in
pop
lods
sub
inc
pop
mov
mov
fstps
mov
inc
dec
sbb
int3
fisttpl
jnp
adc
push
addr16
xchg
arpl
mov
adc
cli
addl
subl
push
int
outsb
xorl
dec
adcl
scas
leave
push
roll
and
rcrb
or
pop
aam
add
adcb
push
fs
adc
test
call
sub
sub
test
pop
mov
rclb
insb
lds
dec
xchg
sub
mov
fs
in
lock
imul
or
xchg
aaa
xor
fsubp
fldl
mov
sbb
lock
cli
jae
jae
cmp
pushf
cmc
daa
xor
xchg
lcall
into
repz
push
sbb
jmp
popf
xor
in
lds
loopne
push
cmp
jnp
jnp
cmp
stos
lahf
lods
lahf
ss
idivb
jmp
jg
jge
add
subl
fbld
fldenv
inc
pop
dec
cmp
pop
inc
mov
push
ficoms
cmp
jb
in
nop
insb
stc
push
cwtl
push
cltd
loop
rclb
and
jae
ljmp
sub
cmpsb
xorb
jb
movsl
ljmp
mov
sarl
clc
cli
inc
mov
movsl
enter
in
hlt
adc
cmp
outsb
arpl
stos
xchg
jl
andl
fxch
in
iret
jb
jno
xor
push
push
dec
pop
dec
pop
dec
pop
lea
cmpsl
xor
and
dec
sbb
pushf
popf
cmp
into
and
fldt
fistl
xchg
jno
cld
jecxz
push
fcoml
shr
fsubs
imul
nop
inc
mov
push
mov
inc
stos
inc
sub
movups
jmp
cmp
ss
cs
jae
pop
xchg
cmp
and
adc
aam
xlat
and
inc
mov
lods
inc
xlat
mov
shlb
ss
inc
inc
daa
aad
mov
jns
mov
sub
push
cwtl
mov
push
lods
pop
mov
mov
mov
fstps
pop
xor
or
addr16
addr16
addr16
ficoml
push
lock
inc
ljmp
cmp
cmp
call
cmpsl
aad
es
jae
cmp
lahf
mov
lcall
js
mov
push
fisubrs
mov
xchg
idivb
test
je
xor
xchg
daa
std
or
test
sub
cmp
xor
mov
pop
push
push
shll
mov
cmp
fmull
fs
enter
outsb
push
sub
jnp
xchg
js
cmpsl
adc
inc
test
jp
mov
mov
sbb
dec
flds
sub
mov
xor
sub
push
xchg
xchg
sub
pop
pop
mov
dec
mov
xor
into
sbb
mov
xor
or
jecxz
out
cmpsb
in
inc
out
out
inc
dec
outsb
insl
clc
fidivl
push
icebp
push
sti
mov
xchg
imul
into
cmp
sbb
jb
out
xchg
out
loope
stos
inc
dec
popf
pusha
cmp
jne
jmp
subl
jg
std
dec
add
xchg
negl
sbb
iret
outsb
dec
sbb
idivb
adc
cmp
decl
xchg
loope
pop
into
jmp
test
push
xchg
inc
sbb
jns
jne
xchg
push
xor
inc
insb
inc
testb
int
popf
incl
push
scas
int
sub
push
or
cmp
dec
adc
test
ret
fisttps
xchg
mov
lret
pop
mov
dec
js
mov
bound
add
repnz
cwtl
xor
jl
mov
xor
mov
mov
stos
push
out
push
jno
xor
sbb
hlt
pushf
cmp
xchg
xchg
movsl
dec
mov
push
out
xor
jmp
aam
shll
aaa
xchg
jno
call
lds
sub
adc
xchg
add
push
lret
dec
xchg
xchg
movsb
mov
xor
pusha
mov
pop
sarb
mov
pop
sbb
loop
pop
mov
fwait
ss
in
adc
popa
cwtl
ret
dec
xchg
jecxz
xchg
push
xchg
popa
clc
les
mov
adc
and
cmp
mov
sbb
inc
les
mov
lahf
movsb
sbb
gs
aaa
mov
or
sbb
jecxz
xor
pop
mov
sbb
int3
inc
cwtl
xchg
xor
or
sbb
fwait
repnz
and
adc
lcall
adc
imul
cmp
dec
imul
push
mov
xor
jno
adc
movsl
dec
dec
lcall
mov
fmul
mov
imul
push
fisttpl
call
xor
inc
loope
ret
fwait
mov
adc
fsubl
jecxz
es
and
fwait
lcall
test
xor
loope
mov
aaa
sbb
cmp
jno
jecxz
xchg
mov
cmp
sbb
inc
enter
and
inc
sbb
movsl
ret
sub
in
xor
inc
pop
xchg
lods
addr16
or
jne
jmp
xlat
inc
scas
aam
test
push
and
xor
es
data16
jno
adc
popf
lcall
inc
mov
and
movsb
repz
in
fwait
aaa
sahf
jno
call
in
lahf
mov
popl
mov
popa
call
iret
dec
sahf
xchg
cmp
stc
loop
leave
lahf
arpl
inc
mov
imul
cli
add
fcmovne
mov
jge
cli
arpl
loopne
shll
stc
adc
lahf
xchg
imul
cld
cltd
stc
push
repnz
into
lahf
lahf
movsl
cmp
pop
and
xlat
and
enter
outsl
inc
loop
roll
mov
xchg
or
nop
inc
jl
sub
or
mov
pop
add
or
adc
xor
rcrl
adc
xchg
dec
je
push
cmp
dec
enter
addb
sbb
xor
inc
mov
xor
mov
aam
call
lea
xor
xchg
dec
push
mov
dec
mov
mov
adc
sub
mov
inc
sbb
push
into
mov
xor
push
imul
add
aam
mov
fstl
mov
sbb
cmp
dec
loope
ret
mov
sub
and
inc
sbb
cmp
out
adcb
aas
sub
cltd
inc
xor
xor
fcoml
mov
movsl
jns
push
insb
subb
push
sbb
mov
mov
repnz
xor
mov
pusha
mov
adc
daa
xchg
pop
mov
sbb
inc
lods
cltd
pop
pop
imul
mov
dec
push
es
mov
mov
insb
cmpsb
add
cmpsb
add
mov
fsubs
dec
push
xor
mov
mov
inc
push
pop
push
cmp
jp
push
xchg
data16
lahf
mov
xchg
pop
cmp
out
adc
in
cmp
cmpsb
jecxz
inc
mov
icebp
fwait
add
cwtl
rorb
fiaddl
call
hlt
shrl
fsubrl
pop
cmp
dec
and
push
cld
jmp
dec
dec
and
and
lret
ljmp
dec
xlat
repz
or
mov
ds
js
dec
sti
push
push
inc
mov
orl
loope
or
push
sar
daa
loope
or
dec
ret
lock
xchg
aas
sti
jnp
sbb
and
xchg
int
stos
fs
fwait
inc
inc
cmc
insl
ljmp
sub
adc
xchg
clc
or
rol
xchg
mov
xor
jb
sbb
cmp
repz
xchg
daa
mov
addr16
fwait
leave
jg
and
xchg
dec
cmp
push
cmpsb
inc
aas
pop
pop
jmp
stc
loopne
aad
decl
stc
call
outsl
fsubrl
mov
xchg
mov
sub
mov
adc
mov
aam
notb
sti
ljmp
push
pop
test
xchg
mov
in
cmp
insl
mov
mov
and
xor
cli
xchg
frstor
jne
push
adc
aam
popa
and
xchg
inc
xchg
lret
mov
pop
pop
aam
imul
fucom
push
stos
aad
loopne
repz
pop
sti
cmp
mov
xor
xchg
iret
arpl
mov
in
clc
cmp
xlat
ss
es
xor
fbld
mov
sbb
out
mov
mov
pop
mov
mov
ja
fldt
out
cmpsl
push
mov
push
leave
dec
mov
ja
jns
loopne
push
xchg
pop
leave
push
outsb
lock
mov
stos
sti
inc
test
aaa
imulb
lcall
inc
push
je
add
lods
int3
stos
inc
lods
pop
xor
lret
xor
jne
lods
push
jmp
mov
push
insl
fs
ret
cmp
cmp
pop
ss
or
shlb
enter
cmc
pop
fstp
dec
mov
adc
add
in
test
mov
jb
mov
out
pop
sahf
repz
jae
fs
and
mov
fucom
fwait
push
xlat
mov
adc
inc
repnz
jp
hlt
fstl
imul
jl
in
es
imul
jae
adc
arpl
mov
ja
sub
and
sub
pop
aad
jbe
shll
pop
fbstp
ss
mov
pop
mov
jge
push
and
mov
arpl
xlat
in
out
and
cmp
fldenv
adc
jmp
mov
arpl
ret
cli
cmp
sahf
mov
push
push
xchg
push
push
cmpsl
inc
and
cli
dec
mov
in
das
ss
inc
sbb
sub
arpl
lods
adc
lods
adc
dec
stos
push
add
xchg
mov
cmpsl
hlt
sbb
and
lods
imulb
loopne
mov
push
lret
fcomi
cmc
xor
daa
cs
in
jo
das
sbb
mov
adc
inc
pop
xchg
and
jb
jecxz
movsl
scas
sti
cmp
mov
addl
pop
loope
jb
bound
stos
jbe
pushf
cmc
lret
mov
dec
cmp
xor
dec
shrb
push
mov
stc
repnz
and
mov
cli
rcrl
sti
xor
adc
aam
int3
pop
ss
sbb
jp
outsl
cmp
mov
mov
fwait
popf
sarb
dec
xchg
xorl
scas
xchg
jns
ljmp
cli
les
ljmp
dec
adc
push
xor
or
test
lds
flds
sub
inc
xchg
dec
pop
xchg
in
push
cmp
xor
insl
pop
rcrb
sahf
inc
sar
nop
sarb
inc
ret
in
fistpl
loope
cltd
xchg
sti
mov
lods
and
adc
mov
xchg
cmpsb
adcb
add
clc
mov
jl
daa
scas
test
shr
sbb
lcall
xchg
push
fcmovu
jmp
add
sub
sti
mov
pop
mov
xlat
push
mov
sub
insl
cmp
inc
xchg
aaa
into
fwait
test
ret
adc
xlat
test
xor
jns
mov
cmc
ljmp
jecxz
or
jecxz
xchg
sti
rcl
mov
or
repz
fwait
outsl
pusha
repnz
iret
xchg
test
test
mov
pushf
push
push
push
es
int
mov
add
popf
jg
insl
inc
out
xor
push
mov
hlt
movsl
push
and
push
dec
int
jmp
or
xor
scas
out
nop
loopne
cmp
cmp
jnp
test
xchg
mov
sbb
cmc
or
inc
fldt
sti
sbb
mov
mov
fsubl
sbbl
sub
push
sbb
cpuid
out
negl
mov
int3
or
mov
pop
insl
aaa
sbb
inc
pop
bound
xchg
push
and
lahf
xchg
jecxz
sub
in
imul
stos
es
and
lcall
lock
sbb
push
adc
mov
mov
xchg
mov
aas
rcl
hlt
sbb
sub
mov
jno
fcoms
out
sbb
mov
int3
dec
push
cli
scas
ss
stc
mov
notb
xchg
cmp
subb
movsl
xchg
mov
pushf
ret
lods
insl
insl
add
vdivsd
inc
mov
mov
mov
push
jno
das
mov
or
pop
inc
aad
pop
push
in
loope
jecxz
push
lret
mov
or
xchg
jne
xor
inc
xor
js
mov
stc
cmp
pop
jnp
mov
sub
sub
mov
popa
cmp
lds
inc
inc
addw
push
das
sub
sub
jle
in
jae
lock
xchg
enter
shrd
rol
leave
jle
adc
jmp
mov
xchg
mov
mov
push
xchg
mov
pop
insb
out
pop
sti
cmp
pop
push
mov
and
adc
test
rol
jae
cltd
lahf
pop
loop
jmp
push
or
lods
aaa
pop
rcrb
sub
in
dec
test
push
mov
jg
insl
push
xor
and
insw
push
std
mov
push
adc
pushf
test
xor
pop
mov
sub
fdivl
inc
outsb
mov
sub
vpmullw
mov
dec
mov
lods
data16
scas
lds
push
push
fidivrl
lods
aas
mov
xlat
lock
lret
ss
xor
mov
imul
jecxz
push
scas
fnstenv
iret
pop
mov
xor
sarl
cmp
shr
test
sub
arpl
andb
stos
sub
fwait
push
rcrb
sub
repnz
xchg
je
cmp
data16
dec
stos
xchg
fistl
rcll
imul
cmpb
aad
cwtl
int3
sbb
dec
jnp
arpl
jg
dec
aam
mov
out
mov
xor
frstor
lahf
cwtl
and
mov
mov
sub
mov
aaa
adc
fldcw
aad
into
cmp
aam
loopne
fs
ljmp
jge
sahf
out
ja
shlb
iret
xor
xchg
add
push
inc
mov
xor
pop
xor
xor
test
divb
push
lea
pop
or
imul
pop
in
cli
aad
loope
test
pop
dec
lods
addr16
sbb
push
jle
lds
pushf
pushf
das
in
inc
jnp
pop
jo
xchg
idivb
adcl
inc
data16
fwait
hlt
cs
outsb
je
cmp
inc
divl
push
sub
fwait
dec
pop
mov
scas
insl
or
adc
cmp
sarb
std
fldpi
cmp
fistpl
jl
mov
jnp
cmp
push
cmp
scas
mov
xchg
ret
xor
pop
xchg
mov
out
lds
push
out
ljmp
popa
in
rcrb
sti
in
jbe
cmp
andb
fwait
ja
sarb
adc
in
xor
in
imul
andb
fidivs
jb
sub
repnz
push
test
lret
push
dec
popa
ror
sub
aas
mov
in
sbb
ret
adc
jle
cltd
cltd
scas
mov
pusha
je
or
pop
aam
js
int3
ficompl
lahf
shr
gs
outsl
xchg
xchg
pop
call
xor
fsubs
fadds
fisubl
aam
aad
lret
inc
pop
ss
arpl
sbb
scas
cmp
cmc
sbb
dec
mov
outsb
mov
mov
push
lea
xor
cmp
cmpsl
ss
push
jmp
mov
dec
push
push
dec
xchg
ljmp
jns
dec
movb
cmp
loop
cltd
in
xor
test
stos
aam
shl
dec
cmp
test
js
jl
sbb
in
fst
stos
out
test
lea
int3
sub
lods
out
adc
test
mov
pushf
cmp
xor
lcall
push
daa
and
pushf
in
sbb
adc
insb
clc
iret
jo
jecxz
loop
stc
mov
out
test
jge
push
int3
inc
inc
imul
fidivrl
out
addr16
loop
jns
jmp
out
lahf
in
adc
pop
stos
add
repz
jns
ja
add
leave
xchg
and
scas
adc
lds
das
insb
xor
or
push
xor
push
pop
out
scas
jae
mov
mov
sub
mov
xchg
xchg
pop
sbb
adc
inc
insb
cwtl
pop
cli
xchg
or
push
or
mov
ja
in
repz
popf
sti
jb
out
out
clc
mov
sub
xchg
lods
lcall
lods
aam
rolw
ss
ja
or
xor
or
cmp
je
adc
gs
fmul
xor
lock
hlt
xchg
das
lret
xchg
dec
push
pop
cmp
mov
imul
fwait
jecxz
mov
enter
xchg
push
not
push
je
cli
popf
jge
jmp
das
cld
aas
xor
fstp
and
cs
out
sbb
ss
xchg
je
lods
shl
sbb
xor
adc
pop
mov
outsb
mov
arpl
dec
jmp
stc
jne
pop
repz
mov
pop
cmpsl
outsb
mov
fbstp
ret
jge
andl
mov
fstps
cmp
cli
xor
lret
sub
xchg
cmpsb
ja
out
out
aaa
push
sahf
mov
mov
jp
pop
lods
pop
push
fmul
sub
adc
cmp
adc
incl
imul
or
mov
jns
push
aaa
std
lret
lahf
stos
outsl
nop
test
setg
dec
hlt
inc
stc
dec
insl
stos
shll
pop
leave
mov
nop
sarb
into
push
inc
jecxz
call
sbb
xor
pop
nop
dec
fwait
push
mov
lret
insl
arpl
cs
jmp
cmpsl
and
pop
pop
cmp
cmc
pusha
test
frstor
mov
out
and
sbb
add
fs
lret
add
into
xchg
shrb
mov
mov
movsl
sub
sub
push
push
outsb
add
lcall
pop
mov
jmp
cmp
add
aad
sti
cmpsl
lret
dec
pop
cmp
imul
jne
pop
xchg
jmp
cmp
scas
xchg
scas
sub
xchg
int3
fistl
dec
xor
mov
iret
int
jo
pop
mov
into
adc
sbb
xor
cmp
sahf
lods
bound
outsb
dec
mov
mov
ds
scas
cmpsb
jmp
mov
xor
cmpsl
outsb
sub
adc
into
lods
jb
out
lods
cmp
imul
movsb
xor
outsb
pop
mov
pop
addr16
cmp
je
mov
pop
dec
fcmovu
leave
data16
push
lods
aaa
mov
insb
inc
aas
push
push
mov
shrb
pop
cwtl
xchg
mov
push
stos
scas
pop
out
cmp
xchg
mov
cmc
or
cmp
pop
lock
adc
arpl
lret
shll
cmp
aad
mov
xchg
mov
and
aam
mov
aaa
xor
mov
xor
js
and
pop
add
xor
jp
or
and
pop
insb
pop
sar
pushf
dec
jmp
xlat
ss
mov
xchg
into
fldl
bound
in
ljmp
cs
add
fpatan
mov
jmp
jmp
aad
mov
in
inc
jo
lret
push
ja
xchg
push
xchg
or
jl
pusha
aad
aaa
mov
pushf
sbb
dec
fisttpll
lds
cmp
or
sub
fsts
repnz
sub
push
mov
jle
unpckhps
dec
insb
test
rcll
xchg
fists
lods
pop
push
jno
mov
imul
push
mov
in
fimull
jl
xchg
inc
in
movsb
mov
cmp
and
or
xor
or
ss
sbb
lods
out
sbb
adc
pushf
mov
nop
sub
lea
pop
or
imul
sub
xor
push
mov
lahf
aad
daa
xor
scas
inc
mov
cmpl
adc
adc
mov
es
push
push
popf
dec
cltd
or
cmc
data16
arpl
in
ja
jae
les
pop
xor
lods
jp
addr16
jns
cmp
dec
pop
push
sub
mov
cmpsl
jecxz
les
mov
outsl
mov
sub
lcall
jae
repnz
sbb
sub
insb
push
lds
mov
fidivrs
out
pop
sahf
rcll
imul
insl
outsb
neg
adc
int
in
cmpsl
push
stos
hlt
std
lods
sti
dec
out
gs
lahf
call
add
mov
rclb
lds
ja
pop
push
nop
es
nop
in
out
mov
adc
aam
xor
add
fwait
and
push
roll
ret
pop
xor
cmpl
mov
inc
inc
lock
addb
add
sti
pop
arpl
out
ds
lret
cmp
rclb
xchg
into
mov
rclb
xchg
jnp
scas
dec
jp
cmp
lret
push
test
pop
mov
mov
add
jmp
imul
shl
dec
cmp
loopne
mov
push
pop
or
jmp
popa
mov
add
int
out
mov
adc
ljmp
adc
in
arpl
inc
push
lock
adc
aam
and
cmp
or
clc
fcmovnb
jl
movsb
nop
dec
loopne
sarb
mov
push
enter
sbb
adc
jbe
cs
outsb
fnstcw
lret
repnz
scas
pop
and
stc
outsb
testl
push
push
outsl
jns
xor
aam
pop
xchg
sub
xchg
mov
fdivl
lods
insl
inc
shrl
icebp
movsl
mov
ja
nop
sub
mov
fistl
mov
psadbw
dec
dec
mov
cltd
push
adc
push
inc
mov
and
cmp
inc
dec
popa
sbb
mov
test
xchg
fstpl
lret
dec
push
lods
repnz
sub
sahf
and
hlt
and
inc
lods
stos
xor
shll
stos
cmp
lcall
imul
pop
mov
cmpsb
mov
addl
lds
push
and
mov
jp
sbb
shll
shll
dec
outsl
mov
ficoml
jp
test
dec
jno
pushf
mov
mov
pop
rorb
fisubrs
stc
xchg
shl
add
jp
sbb
rcrb
negb
mov
fcomps
lds
dec
jl
and
std
sbb
or
pop
pop
cs
cmpsb
push
mov
xor
mov
ret
test
mov
mov
pop
xchg
popa
jmp
leave
mov
mov
stc
int
fwait
call
and
xor
out
mov
clc
pop
xor
lret
jno
insb
popa
mov
outsb
insb
sbb
outsb
lock
jmp
sbbb
dec
call
aaa
lcall
pop
add
xchg
gs
jbe
add
rclb
lods
cmp
das
xlat
imul
cld
or
subl
push
lret
sbb
pop
sbb
adc
mov
les
sbb
xchg
decb
mov
roll
nop
sub
out
add
mov
in
push
xchg
and
cli
test
das
popf
repz
js
loopne
repz
int
push
js
cmp
into
fimuls
add
and
les
pop
test
jmp
push
cmc
iret
inc
out
push
sbb
mov
gs
stc
sbb
imul
lea
gs
into
pop
stos
iret
cmp
cmpsb
out
int
scas
adcl
loopne
or
jb
pushf
cmc
jb
lds
jno
xor
hlt
xchg
xor
sub
inc
sub
jp
aam
and
jp
insb
push
cmpsb
js
dec
insl
test
fucompp
ret
ds
xlat
outsb
inc
arpl
inc
shlb
pushf
pop
loop
jnp
test
jg
mov
out
xor
jo
mov
lret
repnz
in
out
gs
ss
and
mov
dec
cmp
stos
dec
mov
mov
cmp
repnz
outsl
adc
daa
outsb
inc
out
call
iret
and
scas
mov
adc
pop
mov
mov
push
test
jno
mov
xchg
int3
lea
sub
pop
sbb
adc
mov
sub
fmull
fists
sbb
push
bound
out
mov
imul
jo
or
in
mov
sbb
xor
mov
mov
movsl
lock
xlat
insb
rcrb
loope
cltd
push
les
clc
sti
fildll
mov
jp
adc
insb
jmp
add
shr
pop
inc
addr16
in
rcrb
pop
jmp
fdiv
hlt
scas
stos
pop
lea
and
fsubrp
xchg
testb
pushf
or
push
mov
inc
mov
fisttpll
jo
imul
jb
pop
mov
jl
and
enter
jmp
inc
fcmovu
jecxz
xchg
push
jb
sar
lds
fcompl
sub
xor
arpl
jl
pop
mov
inc
and
and
outsb
pop
out
xor
insb
fdivp
notb
ds
lods
push
pop
lahf
push
cld
push
pop
mov
rcr
push
lahf
js
sti
fwait
loope
subb
xchg
gs
ljmp
loope
inc
hlt
mov
aaa
pop
inc
xchg
adc
jbe
jo
mov
movsl
lock
xchg
pop
inc
sbb
and
imul
pop
xlat
adc
rorl
jl
mov
aam
mov
adc
add
fnop
xchg
mov
lea
dec
inc
sahf
push
sub
add
outsb
xor
bound
les
fs
cli
mov
jno
xchg
sub
aam
xor
js
mull
loop
jno
aam
je
cld
aas
dec
imul
inc
rorb
fdivrs
and
jp
inc
or
std
ficompl
dec
shlb
rcl
fists
xchg
loopne
fnsave
xor
imul
cld
fcompl
insl
repnz
add
inc
mov
and
ss
ror
fistpl
addb
mov
insl
or
mov
sbb
in
scas
sbb
mov
mov
mov
push
cmc
dec
xchg
ret
jnp
std
xor
xchg
push
dec
mov
scas
pop
fs
lea
rcrb
xlat
push
repz
test
sbb
fiaddl
add
mov
mov
fisubl
sbb
cwtl
xor
jg
xor
imul
js
mov
mov
dec
std
xchg
xlat
push
inc
inc
sti
ret
jge
push
outsb
insl
sbb
or
shll
stos
xor
cmp
pmuludq
xchg
mov
cltd
scas
jo
sti
pop
mov
jo
pop
das
int
push
push
out
pop
stc
adc
and
fcmovnb
in
mov
movsl
xor
mov
mov
fidivrs
sub
call
sti
xor
cld
mov
inc
xchg
int3
mov
push
inc
jbe
jae
ja
dec
imul
jl
mov
rclb
xor
pop
or
aaa
stos
cmpsl
xchg
jae
and
scas
adc
mov
ret
mov
mov
pop
repz
call
sub
ud0
es
mov
mov
mov
rorl
repz
adc
leave
or
cmp
mov
sbb
scas
mov
lods
and
cvtps2pd
jb
test
mov
test
xor
add
sahf
jns
or
cmc
inc
movsb
jmp
and
cmp
add
popa
stos
mov
lahf
lea
and
aad
mov
insl
cli
jnp
jecxz
pop
aam
lret
cltd
mov
pop
or
mov
mov
insl
inc
in
inc
insb
int
ret
pop
aas
jns
or
jmp
out
xor
std
test
or
xchg
cmp
jae
inc
sbb
jo
mov
test
cmp
pavgb
lds
or
push
mov
aam
cmp
stos
das
into
test
sbb
mov
inc
repnz
mov
push
push
add
out
out
insb
outsb
push
cli
cmp
popa
pop
push
push
es
push
and
cld
jne
sti
std
pushf
std
adc
out
movzbl
fnstcw
frstor
dec
sub
sbb
dec
outsb
push
out
outsl
leave
mov
dec
and
icebp
cwtl
xchg
jg
mov
sti
inc
pop
sbb
fs
mov
stc
dec
cmp
sbb
mov
push
inc
fidivrs
jge
fsubl
mov
popa
jo
xchg
out
inc
jbe
cltd
ret
lods
jno
pop
pop
test
inc
xchg
cmc
and
je
popf
pop
out
inc
xchg
scas
xor
int
aad
push
fisubs
mov
or
outsb
clc
dec
sub
dec
or
test
push
mov
cmp
push
jo
std
jb
and
mov
hlt
mull
sbb
in
ret
dec
sar
pop
inc
mov
daa
scas
pop
addb
mov
repz
not
repnz
cmp
cmp
mov
iret
mov
loopne
push
mov
sti
loop
mov
dec
call
ja
test
pushl
ret
lea
fisubs
call
adc
xchg
push
sub
arpl
loope
inc
aaa
jno
and
stos
sub
fadds
inc
pop
mov
lock
and
adc
cs
pop
lods
shl
ret
rcrl
inc
sub
inc
dec
adc
ret
mov
pushf
addr16
xchg
push
mov
mov
sbb
lret
or
daa
call
leave
lock
stos
adc
sti
fs
fsubs
outsb
sahf
ret
daa
test
mov
cmpsb
rol
in
jne
mov
jb
pop
inc
ljmp
or
sahf
lahf
aam
cmp
sub
xor
mov
and
aaa
scas
xchg
insl
jb
lahf
orl
pusha
cs
ds
jnp
sbb
in
dec
testb
xor
js
dec
mov
cmpb
fstpl
clc
xchg
add
pop
xor
ficompl
lods
adc
je
test
cwtl
int
mov
sub
or
xchg
xchg
cmp
push
add
push
sub
cmp
cltd
push
lret
or
ds
fwait
mov
push
sub
sub
stos
cmp
push
xor
cmp
idivb
lret
xchg
ret
pop
movsb
in
push
dec
dec
lods
lock
cli
outsb
push
sbb
popa
xor
dec
adc
sbbl
pushf
xor
xor
in
push
lds
std
or
cmp
or
lds
mov
jnp
xchg
stc
xchg
enter
pop
jb
mov
adc
dec
in
adc
pop
fsubrp
jno
jg
dec
movsl
cmpsl
shlb
loope
in
sub
mov
jle
nop
vpcmov
lods
mov
ljmp
test
imul
xorl
inc
jl
inc
mov
mov
repnz
call
xor
insb
test
fiadds
outsl
clc
sahf
testl
jle
xor
addl
push
movb
pop
imulb
cwtl
sbb
inc
jecxz
cltd
pop
stos
mov
fmull
sar
pop
pop
xorl
add
into
inc
cmp
bswap
sbb
pop
movb
or
lods
jg
cmpsl
xor
jge
ss
sar
mov
pop
call
inc
dec
pop
sbb
popa
testb
xchg
lret
pop
xor
in
xchg
aam
inc
pop
sbb
xchg
in
loopne
and
lods
adc
jno
ja
aas
mov
sti
xchg
sub
dec
aaa
mov
pop
nop
push
jl
pop
out
outsb
jl
xchg
stc
pushf
hlt
decb
mov
loop
icebp
mov
mov
cmc
stos
sahf
adc
adcb
mov
out
outsl
repz
and
xor
dec
inc
xchg
hlt
or
push
test
aaa
fistps
cwtl
push
incb
mov
mov
adc
xor
xchg
xchg
mov
xlat
add
jmp
sub
rclb
mov
mov
inc
into
cs
fcomi
lock
incl
xor
pop
xor
jns
lret
jl
pop
mov
mov
inc
mov
fmulp
sub
xor
mov
imul
daa
and
sbb
mov
inc
mov
rorb
aas
push
xchg
aas
test
cmp
sbb
mov
orl
push
add
push
adc
gs
rorl
fdivp
stos
loopne
icebp
call
lods
and
mov
pushf
inc
or
push
push
int3
xchg
fs
xor
pop
jns
insb
pop
sub
shl
push
stc
loopne
enter
jecxz
add
xchg
scas
ret
mov
sub
cmp
pop
lcall
aas
adc
lds
dec
or
lods
jno
sbb
sub
std
xchg
mov
sahf
xor
ljmp
cwtl
out
call
pop
mov
sbb
push
xchg
adc
pop
cmpsl
jbe
divl
popf
jge
dec
dec
xlat
stos
inc
add
xor
mov
je
xchg
adc
add
movsl
pop
push
mov
pop
mov
xchg
inc
stos
orl
fdiv
xor
pushf
test
cli
popf
lahf
data16
cmp
mov
jnp
dec
inc
mov
sub
je
xchg
push
push
adc
or
jns
or
cmp
jmp
call
fistps
lcall
mov
xchg
cmpb
fmull
aad
add
push
sub
cmp
insl
aam
mov
dec
fwait
ss
push
movsb
pop
pop
das
ffree
pop
sbb
jge
or
xchg
jge
sbb
or
xor
and
shrb
and
mov
std
ret
mov
xor
jbe
dec
or
add
sbb
adc
or
xor
dec
test
cmp
out
adc
jmp
inc
dec
cltd
fnstenv
mov
xchg
or
push
jp
sbb
aam
sbb
shll
iret
jns
xchg
and
enter
mov
imul
out
xor
loopne
inc
test
adc
dec
inc
inc
lret
fnstsw
mov
pop
xchg
fisttps
fisttps
mov
jns
jmp
sub
rcll
fistpll
nop
pop
daa
std
cs
jle
inc
xchg
popl
jp
nop
mov
in
jg
out
idivb
mov
inc
in
insl
jbe
xlat
lock
out
mov
rol
imul
inc
lea
jnp
icebp
lahf
fisubrl
and
std
lds
or
aaa
fisubrs
inc
mov
xchg
sub
jb
or
movsl
in
icebp
imul
jne
outsl
negb
pop
xchg
sahf
rol
ret
push
pop
mov
or
push
call
mov
add
jg
xor
outsl
xlat
idiv
push
dec
lret
push
sub
pop
jnp
xor
je
sub
adc
sub
or
out
mov
lods
jne
lahf
xorb
movsl
xorl
push
scas
adc
jne
sarb
pop
pop
mov
in
icebp
adc
rol
or
ss
sub
ficomps
sub
mov
add
add
leave
adc
pop
add
ret
decb
je
dec
xchg
inc
dec
sahf
fwait
and
pop
stc
sub
mov
ss
lods
mov
or
sub
mov
icebp
xchg
insb
jle
dec
push
xchg
cs
dec
pop
outsb
mov
sub
outsl
dec
inc
aas
push
lahf
movsl
sbb
repz
mov
mov
addr16
inc
fnstsw
xchg
mov
dec
inc
fucomi
cli
mov
jno
adc
cmc
out
mull
dec
ja
popf
in
leave
dec
in
scas
xchg
pop
incb
das
mov
stos
std
sbb
jl
pop
push
xorb
pop
and
push
mov
push
in
and
cmp
or
dec
rolb
mov
lods
dec
mov
movsb
pop
out
cs
mov
xchg
mov
jle
pop
adc
dec
pop
mov
in
mov
sub
xlat
mov
sbb
mov
push
icebp
dec
out
adc
cld
js
dec
xor
mov
popa
mov
stos
test
out
xor
adc
scas
lcall
mov
sti
mov
into
rcrb
add
movsl
das
cwtl
dec
xchg
dec
fisubrl
pop
push
inc
cli
jecxz
push
cltd
cs
je
xchg
sbb
jg
cmpsl
xchg
push
imul
dec
lods
shl
rolb
fwait
lds
fcomps
sub
lds
sub
lds
inc
pushf
aas
sbb
jae
movsb
je
dec
fwait
adc
mov
sub
ljmp
pop
aas
stos
xor
shll
into
leave
lret
les
sub
jae
and
xor
sbb
mov
push
jge
hlt
dec
jge
push
mov
lcall
pop
aas
cmp
daa
dec
mov
xor
push
in
inc
jmp
inc
and
mov
stos
ja
in
std
xor
cmp
adc
mov
add
int
mov
in
loop
pop
add
xchg
gs
cs
sub
sbb
mov
out
out
scas
movsb
cmp
push
pop
sub
cmpl
sti
push
cmpl
rolb
cmp
sbb
es
mov
cmp
into
stos
ficomps
pushl
xchg
cmp
mov
aaa
jb
sbb
mov
jmp
jl
arpl
cmpsb
sub
leavew
aad
ffree
imul
pop
and
inc
pop
lahf
lock
fs
out
mov
and
test
les
daa
addr16
aaa
jl
mov
cmp
add
xchg
mov
xor
lahf
adc
sbb
inc
mov
ret
mov
dec
data16
inc
mov
mov
imul
jno
test
lock
mov
enter
scas
cmp
cli
in
mov
lds
shrl
sbb
inc
in
test
outsb
jne
mov
addr16
pop
adcb
sub
insb
or
rol
insb
mov
mov
idivb
pand
into
xor
push
push
xchg
adc
in
add
push
andb
sbb
stos
inc
xchg
jge
xor
pusha
cmp
loope
inc
add
out
out
orl
test
popa
mov
xchg
ret
sahf
test
mov
lods
adc
mov
fisubrs
and
or
jo
pusha
mov
jne
outsl
daa
out
loopne
dec
pop
mov
pop
mov
xor
daa
popa
lods
and
xchg
inc
testb
test
ja
sbb
sub
jb
lahf
cmp
hlt
push
sbb
outsl
popa
mov
icebp
pop
or
ret
push
fisubs
cmp
jmp
sub
inc
movsb
inc
and
push
xchg
iret
ret
ret
lds
xor
mov
pop
inc
xor
outsb
dec
and
jae
jbe
push
mov
jne
adc
sub
shll
pop
lods
jge
push
cmpsl
leave
sub
jl
inc
jo
mov
daa
stc
mov
pop
out
sub
push
rcll
pop
push
push
xchg
mov
xchg
ljmp
int3
ficoml
xor
iret
cmp
adc
cmpsl
mov
jnp
adc
ret
mov
mov
mov
or
cmp
lahf
out
sub
xchg
adc
sub
jne
xchg
jne
in
pop
xchg
mov
insb
cltd
or
cmpl
nop
jle
jae
jae
push
out
jno
pop
jae
js
addr16
jnp
shrb
jo
xchg
or
icebp
std
sahf
outsb
mov
gs
add
sbb
out
jo
inc
mov
test
push
hlt
popf
lea
jge,pt
rorb
or
add
mov
subl
xor
lcall
jne
cmp
leave
mov
sahf
mov
repnz
icebp
pop
scas
pop
push
sub
jno
cs
push
lret
cmpsl
sub
xor
out
dec
cmp
xchg
es
movsb
adc
ljmp
cmp
push
jl
sbb
das
mov
cwtl
pop
jmp
push
or
and
jbe
add
cmpsl
dec
mov
repnz
mov
loop
out
mov
pop
pop
shll
sub
mov
mov
mov
mov
dec
jle
xchg
sti
ljmp
mov
mov
dec
or
mov
lcall
mov
mov
ret
mov
cmp
cmp
pushf
rolb
pinsrw
inc
mov
xor
xor
jge
xchg
mov
cli
jns
xchg
xor
dec
dec
in
notb
je
adc
mov
sub
adc
push
add
xchg
jno
mov
or
jns
jo
mov
push
or
arpl
mov
aas
std
xchg
cmp
iret
jo
stos
mov
sub
or
inc
mov
loopew
xor
aas
cmp
cmpsb
pop
int
rorl
or
mov
int
int3
adc
mov
and
inc
int3
jl
mov
fwait
jne
lcall
push
or
into
cmc
push
insb
and
subl
xchg
sub
dec
stos
fucomi
out
repz
pop
imul
mov
lods
and
mov
adc
cmpsb
cwtl
fs
xchg
xor
mov
in
push
ljmp
xchg
data16
jp
mov
jno
push
mov
les
mov
mov
push
fcmovnu
ss
fisubs
cmc
clc
pop
and
jmp
lret
cmp
jge
pop
xchg
decl
mov
jnp
sahf
sahf
imul
cmp
push
mov
xchg
imul
daa
das
fiadds
mov
mov
or
adc
xchg
sbb
fisttps
push
sub
jg
pop
mov
in
cmc
mov
or
pop
xchg
ss
fimuls
cmp
daa
in
inc
pusha
pop
add
inc
mov
and
jl
loop
andl
rcrl
shrb
fidivs
dec
cmpsl
bound
jbe
ja
xchg
imul
int
rcr
add
push
shll
or
push
inc
pop
imul
jp
pop
sbb
ss
icebp
xorl
inc
shlb
mov
cli
push
cs
pop
int
in
jge
rcl
es
ror
and
mov
pop
hlt
sti
xlat
fsub
adc
cmp
adc
arpl
mov
add
stos
mov
lods
dec
pop
hlt
fdivr
lock
and
imul
cmp
or
ror
dec
sahf
xchg
push
mov
push
mov
nop
add
jle
aas
sahf
inc
std
xlat
add
jg
shlb
xchg
xor
mov
in
fwait
inc
icebp
les
cltd
test
pop
dec
jae
iret
flds
mov
mov
add
adc
mov
mov
lret
pop
mov
rcll
xorb
dec
inc
sub
pop
shl
popf
push
in
adc
adc
mov
mov
std
pop
and
cmp
jbe
ja
cmp
or
test
std
mov
cmp
inc
in
insb
cmc
mov
add
data16
jp
cmc
jae
inc
int3
es
cmpl
mov
mov
pop
dec
push
cmp
lcall
or
sub
fcomi
fcmovne
test
icebp
inc
push
nop
xor
jns
in
aas
out
and
xchg
pop
outsb
iret
cltd
cmp
xchg
inc
in
cwtl
addl
sti
mov
xchg
cmpsl
insl
sbb
inc
test
adc
mov
add
xchg
jno
jmp
je
jecxz
insl
orb
push
xchg
aad
insl
mov
jo
jae
mov
cltd
jne
and
shll
leave
or
clc
test
bound
jge
jo
ret
xor
or
xchg
push
dec
fldt
sbb
dec
xchg
dec
pop
loop
sub
xchg
das
mov
ror
fadds
jns
xor
add
stc
push
sub
pop
mov
jmp
xchg
xor
push
inc
int3
stc
push
dec
cmc
fildl
out
and
sbb
scas
test
mov
cmp
jne
dec
sbb
cmc
daa
bound
cmpsb
xlat
aas
or
mov
inc
cli
jnp
and
test
cmp
pop
mov
and
xchg
or
mov
mov
les
jne
jecxz
add
movsl
push
test
cli
cmp
pop
inc
jno
cs
and
fs
push
test
push
xor
xchg
sub
cmp
ret
pop
mov
repz
mov
jle
test
mov
aam
daa
push
xchg
cmp
testb
popf
mov
ret
loopne
cmp
and
push
or
aad
sub
test
xchg
aam
popf
nop
fiaddl
outsb
jmp
mov
std
or
js
fwait
mov
scas
or
into
iret
mov
das
and
dec
es
xchg
jecxz
int3
mov
nop
inc
popf
outsb
aaa
sbb
enter
and
adc
inc
das
sub
test
or
out
and
inc
jb
push
cmp
js
cmp
icebp
and
loop
xchg
or
es
xor
jno
sub
xchg
push
xchg
push
and
test
iret
ret
shrl
xor
add
mov
sar
icebp
cmpsl
pop
pop
lods
and
mov
jecxz
jno
sti
fucomip
adc
sahf
pop
pop
faddl
mov
jnp
push
pop
cmp
icebp
pop
pop
dec
js
mov
xor
outsb
pop
insl
jmp
gs
or
dec
cwtl
cltd
jle
cmp
out
sar
std
imul
ret
mov
dec
xchg
lahf
lock
and
addr16
jnp
xchg
outsb
popf
xor
xchg
xchg
mov
pop
lcall
arpl
loope
sub
call
hlt
ljmp
test
push
or
mov
xchg
xorb
arpl
adc
sbb
test
in
pop
jmp
push
sahf
inc
push
in
sub
jo
mov
sub
cmp
jbe
add
orw
lea
mov
push
shl
dec
lret
inc
push
lods
mov
iret
in
or
xor
ss
shrb
lahf
icebp
cmp
xor
sbb
rcr
call
mul
leave
cs
inc
fs
je
rolb
add
mov
cmp
jo
sbb
nop
jae
cwtl
sub
jns
out
lods
add
or
lret
insl
inc
mov
imul
cli
and
fldl
xchg
xor
loope
movsl
mov
outsb
cmp
daa
stc
sbb
icebp
data16
adc
inc
data16
in
hlt
clc
call
pusha
mov
rclb
comiss
xchg
sbb
or
mov
xchg
add
pop
sbb
lret
mov
into
loopne
dec
in
mov
insb
mov
imul
mov
pop
mov
outsl
int
dec
adc
pop
jg
jp
leave
dec
jno
jo
and
pushf
popf
insb
mov
mov
imul
xor
and
in
ljmp
test
push
adc
int3
jns
je
push
xchg
inc
pop
dec
scas
ret
mov
inc
mul
xor
mov
aam
les
sti
je
hlt
xchg
pushf
insl
rcl
loopne
andl
leave
insb
jno
mov
aam
jecxz
loop
pushl
xor
je
in
push
addr16
mov
inc
jmp
xchg
je
aaa
int3
fisttpl
xor
jnp
adc
hlt
shrb
leave
push
scas
je
outsl
jae
and
rorl
pop
cltd
test
shll
cwtl
int
inc
xchg
stc
aaa
int3
or
xchg
adc
ljmp
je
jbe
mov
mov
mov
cmp
jge
mov
test
jae
pop
xor
adc
outsb
pop
inc
push
add
xor
push
pusha
mov
lret
xor
aad
mov
scas
ja
cmpsb
xor
enter
movsl
std
stc
fnstenv
jo
or
add
stos
pop
in
insl
movsb
jmp
jne
pusha
push
loopne
jb
sub
arpl
mov
add
fwait
popa
dec
pop
orb
movsb
loopne
dec
cmc
int
jo
cli
adc
pushf
xor
mov
jae
mov
add
jns
mov
js
das
adc
mov
mov
xlat
popf
shr
enter
and
jns
sub
sahf
ja
rdpmc
mov
sahf
adc
out
and
jmp
inc
fwait
outsl
std
js
inc
add
add
daa
sub
stos
stc
test
jge
in
push
push
add
xchg
xor
and
pop
pop
cld
sub
mov
mov
pop
js
mov
cmp
fcoms
pop
push
fisttpl
mov
jmp
xchg
mov
mov
dec
mov
outsl
xor
ret
imul
lock
loope
adc
push
je
sub
xlat
les
and
adcl
mov
loopne
mov
mov
pusha
out
sbb
pop
popa
cs
lds
and
push
adc
push
inc
addr16
jns,pt
ficompl
or
sub
outsl
lea
pushl
rol
mov
cmp
inc
adc
mov
sub
lahf
les
gs
sbb
cmp
xchg
xchg
popf
adc
inc
inc
dec
cmp
hlt
mov
jae
dec
ja
push
lods
and
negl
cmp
subw
mov
cs
movsl
inc
jns
fldcw
xchg
lock
jo
or
push
push
xor
fidivl
pop
cmp
icebp
loop
sbb
notb
repnz
cmpsl
jns
ljmp
pop
lret
jmp
ljmp
jns
xor
dec
lock
shl
cmc
add
xor
sub
cmp
cmpl
std
push
loopne
xlat
jae
jle
cmpsb
xchg
mov
mov
inc
adc
ret
push
xchg
out
sbb
cmp
insb
ror
andb
lods
imul
scas
mov
jns
fisttps
fldcw
lock
mov
les
mov
cmpsl
lock
sub
xorl
and
pusha
adc
or
in
movsb
fnstenv
jb
sbb
pand
scas
and
mov
add
dec
mov
mov
mov
jnp
sbb
popf
mov
mov
shlb
mov
mov
pushf
cmp
jecxz
adcl
mov
adc
cmpsl
out
mov
pop
inc
lcall
les
shll
dec
mov
stos
jns
cs
cmpsb
sbb
cmp
ss
dec
sub
lods
das
in
popf
insl
inc
test
push
or
js
inc
sbb
insb
mov
dec
andl
jno
loopne
inc
mov
inc
pop
loopne
fistpl
push
fidivs
cmp
or
test
pop
add
cmp
dec
and
fidivrl
mov
pop
fcmovbe
mov
aam
jecxz
mov
pushf
sub
add
inc
xchg
arpl
stc
jae
sbb
dec
adc
decb
lcall
ret
cmp
jp
mov
inc
in
push
repnz
ds
pop
and
and
and
aad
mov
rorb
sub
inc
mov
ja
pop
jbe
sub
dec
sub
popa
lret
mov
rorb
adc
loopne
cmpsb
cmpsl
push
in
hlt
jno
xor
push
into
jge
mov
adcl
or
jmp
fld
xchg
push
dec
and
adc
lcall
pop
inc
fcmovb
pusha
je
sub
call
adc
and
mov
sbb
lds
mov
ror
in
pop
ret
sub
mov
mov
leave
sbb
push
mov
notb
mov
mov
or
mov
neg
xor
test
jne
sahf
inc
cmp
ficoms
imul
outsb
lret
cmpsb
aad
add
testb
mov
or
cmp
sbb
mov
lret
jl
pop
int
dec
mov
pop
gs
pop
pop
pop
fstpl
ret
push
sbb
mov
pop
pop
cmp
inc
adc
in
and
sbb
dec
cmp
test
repz
adc
pop
sbb
or
sub
mov
pop
xchg
dec
push
cmpsb
push
xor
jno
loop
pop
in
fimuls
push
xor
repnz
xor
xor
lret
xchg
jecxz
movsb
mov
adc
push
int
int3
xchg
sbb
icebp
or
fwait
sarb
mulb
mov
mov
xchg
xchg
jecxz
pop
pop
aad
loopne
xor
mov
mov
fnsave
cwtl
fcomp
xchg
sub
cwtl
pop
inc
dec
lret
lods
shll
jl
cld
xchg
hlt
popa
ja
out
ret
lea
or
cltd
dec
xchg
lahf
mov
enter
pop
fstl
dec
lods
inc
ror
inc
jge
cwtl
jge
mov
fsubrs
mov
scas
adc
fwait
pop
lea
push
mov
pop
cmp
mov
inc
mov
mov
repz
push
lods
pushf
add
out
in
mov
repnz
mov
fadds
popa
out
and
cs
inc
das
and
push
pop
pop
and
lret
or
lods
addb
cmp
sub
jns
es
out
les
stc
mov
push
sub
testl
jecxz
add
or
imul
imul
mov
jnp
inc
insb
sbb
or
xchg
pop
ret
call
mov
cmc
lods
xchg
inc
es
push
add
push
out
in
cmc
lahf
sahf
add
shrl
push
shlb
test
outsb
fnsetpm(287
mov
cwtl
jno
pushf
aam
adcb
jb
mov
mov
cs
jge
lock
mov
fwait
aas
xchg
popa
rclb
jae
xchg
mov
popf
call
fistpl
pop
addr16
movsl
push
mov
or
incl
cltd
in
scas
gs
add
add
jbe
popa
push
inc
push
sarb
lret
dec
mulb
xor
sub
and
inc
and
dec
jnp
sub
and
out
rorb
stos
in
lcall
repz
jbe
int3
cmp
mov
pop
and
xlat
mov
rcr
pushf
lock
inc
outsl
incb
mov
insl
inc
jno
xlat
pop
test
pop
cmpsl
loopne
jl
sub
pop
das
cmp
mov
push
out
nop
pop
inc
notl
xchg
pop
push
rol
sbb
sub
add
jo
sarl
sub
shrl
out
ljmp
mov
insl
subl
adc
mov
les
rcll
cmp
out
dec
js
sbb
or
lcall
xchg
in
inc
dec
mov
dec
cmp
adc
push
mov
adc
sub
mov
hlt
loopne
dec
test
xor
cmpsb
shlb
iret
mov
inc
dec
popf
and
and
not
js
pusha
dec
cmpsb
mov
jbe
jmp
enter
adc
inc
fs
xorl
add
cli
insb
xchg
stos
mov
xchg
fistl
dec
test
jmp
test
out
out
int3
enter
cli
cwtl
push
ds
xor
pop
mov
mov
std
cli
cmp
cmp
inc
jb
test
test
int
jge
fld
jecxz
cmpsl
jno
js
dec
les
scas
mov
out
repz
push
dec
adc
jle
xchg
mov
int
loopne
hlt
adcb
sub
aas
mov
dec
incl
push
or
hlt
cwtl
cmp
rcr
mov
pop
mov
shrb
mov
outsb
stc
cmp
mov
fdivs
lds
add
push
fisubrs
adc
mov
push
inc
or
inc
and
sbb
add
imul
out
jae
clc
push
pop
mov
dec
cmp
idiv
or
int3
adc
sbb
int3
adc
cmc
cs
mov
sbb
sbb
out
fwait
mov
fst
rcll
insl
push
pop
into
adc
xchg
push
inc
xor
loopne
xchg
jg
movsb
adc
mov
xlat
mov
push
lahf
sti
add
mov
adc
push
aas
dec
clc
sbb
xchg
subl
or
push
arpl
sub
stc
cli
aad
les
aaa
adc
mov
jnp
rolb
adc
pop
or
out
fs
mov
jl
jecxz
addb
mov
xchg
push
sub
push
ret
and
mov
pop
shlb
adc
in
movl
inc
stos
addl
inc
int3
dec
jb
push
jns
lret
inc
das
gs
out
sub
aaa
mov
lock
mov
push
lods
or
mov
dec
add
push
ret
sahf
out
stos
pop
cmpsb
add
or
dec
xor
sbb
cmp
arpl
mov
push
cli
clc
xchg
push
dec
sub
cs
sbb
scas
test
out
add
push
outsb
les
inc
enter
outsl
ret
dec
fimuls
xchg
mov
push
mov
inc
iret
enter
adcl
xor
adc
and
mov
adc
add
push
or
xor
aam
clc
bound
sarb
gs
ficomps
jae
arpl
mov
aas
jmp
popa
mov
mov
inc
lea
sar
fbstp
push
dec
sti
jno
push
pop
aas
xchg
pop
push
push
push
imul
and
out
lret
pop
into
cmp
dec
data16
pop
fsubs
aas
les
cmp
test
mov
sub
xchg
pop
int
jno
mov
stc
mov
mov
fidivrs
in
mov
dec
inc
sub
xor
and
out
dec
add
push
stos
or
mov
sub
leave
addr16
dec
adc
mov
cmp
repz
ss
shrb
mov
fimuls
xor
adc
add
aas
stos
cmpb
cmp
cmp
stos
xor
imul
cmpsl
inc
sbb
stos
aaa
in
fsubrs
jnp
popf
std
aaa
fcoml
pop
cmp
add
ds
push
out
pop
jo
and
jle
or
rcrl
or
pop
jl
js
test
mov
out
aam
cmp
jnp
jg
cmp
stc
lea
loopne
gs
jecxz
fnstsw
nop
fdivrl
cld
sbb
nop
push
movsl
in
enter
loopne
fcmovu
mov
fnstcw
xlat
mov
add
ret
pushf
jecxz
mov
popa
loop
rcr
adc
scas
fistpll
icebp
inc
or
enter
pusha
cmp
xor
lcall
jbe
fcomps
or
pushf
ja
loopne
nop
fdiv
sbb
subl
pop
push
and
adcl
stos
push
xor
mov
pop
xor
cmp
aad
imull
mov
clc
jg
je
aas
dec
movsl
rol
mov
xchg
hlt
cwtl
mov
idivl
jo
dec
ficoml
jae
xor
push
popa
clc
push
cmp
jl
test
hlt
aam
mov
stc
push
inc
cmp
ss
push
or
mov
pop
add
or
jl
pop
sub
and
filds
jmp
dec
ja
mov
push
push
je
fiadds
scas
mov
ja
mov
lods
std
loope
xchg
pop
lods
out
add
sub
sar
btc
lret
pop
dec
mov
out
dec
mov
daa
repz
inc
aad
mov
mov
out
int
xchg
pop
dec
mov
pop
jp
and
sti
jge
repnz
pop
aad
adc
out
mov
addr16
or
sbb
es
aam
stos
push
call
push
cmp
xor
jne
in
or
jbe
out
shrl
cmp
or
adc
add
jmp
cmpsb
sti
jmp
mul
rorb
push
jb
and
jnp
jmp
mov
fistl
mov
outsb
mov
adc
loop
sbb
cmp
imull
or
repnz
arpl
or
xchg
loope
leave
in
js
dec
lcall
pop
cmp
enter
dec
pop
out
cmpsb
pop
cmp
jae
js
and
dec
mov
cs
lahf
sahf
cmp
jb
pop
sub
ret
shlb
mov
nop
jnp
mov
pop
sti
out
xor
out
mov
mov
imul
cmp
aaa
pop
lret
outsb
mov
mov
mov
dec
jae
xlat
mov
xchg
or
and
arpl
mov
push
je
fwait
insb
sub
add
daa
fcmovbe
cmp
cmp
aad
mov
in
jg
and
rclb
mov
scas
testb
sub
mov
mov
lcall
add
hlt
stc
rclb
jno
pop
cmpsb
cmp
push
out
inc
jno
cmp
xchg
lods
pushf
adcl
or
leave
inc
pop
sbb
and
add
ljmp
ds
mov
add
movsb
ret
std
mov
in
icebp
and
jbe
into
shrb
and
lret
or
add
aaa
or
inc
mov
inc
and
cmc
in
push
aas
mov
sti
sub
insl
xchg
adc
push
mov
push
ss
jnp
inc
and
inc
mov
data16
jne
push
mov
sub
and
xchg
scas
stos
pop
jb
pop
shlb
pop
jns
or
scas
sub
out
push
aam
daa
std
lret
adc
sahf
jae
aaa
sub
inc
mov
call
mov
inc
inc
pop
mov
test
lcall
imul
add
fiaddl
fistpll
push
inc
movsb
or
adc
nop
and
lret
filds
iret
mov
outsb
jae
call
shrl
cmpb
adc
addr16
jmp
pop
xchg
mov
icebp
pop
mov
addr16
out
lock
pop
cmc
mov
pop
cmc
out
popf
mov
insl
dec
mov
mov
lahf
inc
lret
jl
xor
pop
push
cmp
lods
shl
push
mov
ret
pandn
add
icebp
lea
inc
inc
jb
lret
or
jno
mov
scas
test
movb
xchg
push
jns
xchg
mov
jo
dec
mov
sub
sbb
clc
mov
push
inc
aaa
push
int
mov
cmc
inc
jmp
imul
cmp
adc
inc
jge
ret
adc
cmp
es
push
adc
ret
ffreep
cld
inc
call
mov
or
or
mov
dec
test
push
xor
das
cli
push
xor
adc
push
jmp
fwait
loop
mov
imul
jmp
cmp
pop
xor
cmp
sub
push
sarl
pop
mov
and
fwait
psubw
xchg
in
or
loop
sub
cs
dec
xlat
movsl
and
push
cli
mov
dec
movl
mov
pushf
sub
stos
cmpsl
cld
jbe
gs
aas
fistl
sbb
or
pop
jns
int3
pop
imull
data16
outsb
jge
mov
stc
dec
or
nop
dec
dec
and
or
dec
ljmp
pop
cmp
outsl
sbb
xor
cmpsb
xor
add
les
outsl
sbb
fs
lds
adc
shrb
sub
jmp
cmpsl
arpl
enter
daa
in
test
and
popa
inc
jp
aas
les
cmp
out
jb
mov
sbb
aad
and
xchg
sbb
jae
fsubrp
out
mov
pop
test
sbb
ja
mov
mov
negb
and
push
dec
jl
adc
int3
jns
insl
insb
testb
jle
jnp
fisubs
stc
inc
adc
ja
xor
in
add
sub
pop
fsubrs
add
enter
fsubl
fs
out
xor
push
cmpsb
xorb
out
jne
ljmp
movsb
sbb
push
aaa
fildll
cmpsl
sub
mov
lret
xchg
mov
imul
jne
je
mov
cmp
cmp
imul
ss
orb
pop
sbb
in
push
push
dec
stos
pop
adc
cld
imul
jnp
in
imul
jb
mov
mov
push
pop
xchg
push
add
and
mov
jne
ret
cld
or
cwtl
jp
hlt
repnz
test
pop
cmp
jno
sti
mov
push
mov
inc
je
mov
mov
mov
inc
inc
pushf
mov
scas
cmp
mov
inc
in
mov
hlt
inc
sbb
xchg
mov
xor
out
out
jno
fs
sbb
scas
scas
into
into
aam
push
fmuls
push
movsl
push
jae
sahf
insl
fs
cmp
inc
fdiv
and
popa
out
mul
in
insl
loop
mov
mov
outsl
fistpll
int
rorl
dec
mov
cs
push
jne
inc
lret
test
add
pop
mov
loope
test
fsubr
jnp
pop
shll
cmp
pushf
jne
mov
std
imull
sub
ja
cli
push
inc
pop
fisubs
mov
in
jg
dec
movsl
jle
jmp
sub
mov
rcrl
mov
loopne
fmul
fmuls
push
jo
inc
xchg
cmpsb
or
dec
aam
gs
jo
add
ret
jmp
mov
lret
lds
lods
adc
inc
lods
aam
test
jl
cmp
sbb
xor
xchg
push
inc
mov
cmp
pop
jmp
mov
mov
dec
adc
pop
rcl
and
cwtl
jl
lret
cmp
or
stc
addl
lods
xchg
xlat
mov
adcb
mov
cmc
pop
ror
mov
inc
mov
mov
xor
or
and
sbb
sbb
ja
inc
pop
mov
and
in
jl
push
clc
imul
xchg
inc
inc
sahf
das
xchg
mov
scas
ljmp
call
std
andb
inc
push
std
andb
js
ror
mov
mov
bound
adc
inc
sub
sub
ss
mov
outsl
inc
daa
mov
outsb
mov
mov
cmp
ja
dec
pop
stos
in
in
cmp
lret
mov
mov
mov
imul
loopne
xchg
nop
mov
leave
mov
mov
pop
or
inc
mov
push
xchg
add
inc
cs
test
push
jns
ja
adc
mov
or
fcomi
sbb
cli
inc
adcb
push
popf
lods
test
pop
das
aam
mov
push
ret
and
mov
or
movsl
add
and
inc
lea
fstpl
push
xchg
pop
push
aaa
push
call
test
xchg
inc
sub
and
adc
mov
sub
lea
lods
cmpsl
xor
pushf
jg
loop
adc
fildll
push
aam
push
aam
ret
inc
mov
insb
mov
pop
xchg
ds
call
popl
loop
mov
out
mov
test
xor
roll
stos
xor
pop
mov
mov
jmp
movsl
xchg
push
mov
mov
jb
into
pop
pop
vcvtdq2pd
sub
add
xchg
pop
mov
adc
jl
clc
lahf
or
xchg
jne
fsubp
xor
mov
std
dec
pop
lret
adc
sub
aas
adc
jge
in
pop
inc
out
clc
fstl
add
cmp
jns
sti
jge
decl
sti
and
fdivs
aas
mov
lds
push
es
adc
mov
lret
clc
push
sbb
outsl
push
rcll
les
pushf
or
lds
add
inc
fisttpll
dec
mov
je
mov
xlat
fs
sbb
mov
pop
dec
jp
stos
arpl
test
or
or
sbb
dec
add
mov
arpl
lahf
push
and
sbb
outsb
aam
push
out
jne
mov
loopne
imul
fildll
add
scas
movsl
push
js
jne
in
pop
rcrb
push
mov
pop
in
jbe
and
adc
xlat
xchg
lods
adc
add
insb
mov
xchg
push
sub
fistpl
movsb
xchg
dec
mov
sbb
xchg
lds
repz
pushf
stc
imul
mov
leave
mov
insl
loope
pop
jno
stos
sbb
mov
adc
out
pop
sub
and
push
xor
sub
pop
jl
add
and
into
test
cwtl
pusha
sbb
out
and
inc
fsubl
cmpsl
ljmp
pop
repz
scas
push
lods
jnp
xchg
nop
ret
or
inc
mov
into
mov
inc
clc
mov
test
lock
push
sub
xor
shlb
lret
xchg
imul
addb
and
enter
push
jge
inc
ljmp
xor
and
xchg
or
mov
or
add
xchg
pusha
test
in
fwait
and
pop
in
xlat
mov
inc
jmp
mov
mov
ss
adc
call
dec
scas
outsb
icebp
mov
pop
leave
xor
dec
push
sub
loop
sub
inc
loope
lret
dec
lods
mov
cmp
add
cld
cs
add
mov
cld
loopne
jp
gs
jl
inc
insl
pop
mov
mov
out
fimull
int3
shr
int
inc
cltd
push
popa
lcall
pop
adc
pusha
jae
ja
loope
fidivl
xchg
lret
mov
cmc
popl
insl
lods
sbbl
sbb
push
sub
xchg
xchg
dec
or
xchg
lret
jg
into
pushf
mov
lret
jmp
mov
xchg
or
lods
xor
in
scas
jle
dec
cmp
repz
xor
adc
mov
mov
xor
jp
in
fisubrs
addr16
jg
int
jo
cltd
sub
les
stos
stc
fiadds
fs
mov
outsl
sahf
sbb
sbb
xchg
dec
cld
dec
and
out
sbb
xlat
jg
test
lahf
fsubr
xlat
ljmp
or
sbb
aas
outsl
pushf
out
jge
fwait
sbb
mov
xor
ja
adc
push
mov
mov
sub
js
inc
pop
jne
inc
jno
popf
movsb
shrl
cmp
add
ja
or
sbb
push
dec
lea
or
testb
fdivrp
mov
shr
mov
sbb
cmp
pushf
cmp
lods
sbb
mov
dec
jne
jmp
mov
out
int3
stos
xor
fsubl
pop
enter
or
jp
sub
inc
and
data16
daa
arpl
inc
jmp
roll
pop
sub
insw
repz
xor
sti
call
out
cld
mov
adc
and
lahf
and
out
jp
ja
cmpsl
test
sub
xor
arpl
lock
mov
jns
xor
arpl
cmp
inc
push
xor
pop
or
mov
lds
and
lock
rcl
insl
add
lods
repz
mov
imul
pushf
outsl
add
lods
sbbl
mov
and
aaa
adc
bound
inc
xor
cmp
cmpsb
les
rcl
jmp
mov
inc
and
pop
mov
and
insb
jo
orl
repnz
lds
or
movd
jns
inc
push
and
lds
add
mov
inc
stc
divl
dec
aam
in
or
or
add
add
xor
out
adc
cs
in
xchg
sub
inc
aas
jno
ret
or
or
daa
popf
mov
dec
dec
mov
pop
jo
ja
pop
push
in
jp
adc
in
cmp
data16
fbstp
inc
cmpsb
icebp
push
arpl
inc
mov
mov
jnp
push
in
sbbb
loop
sub
loope
dec
dec
pop
cmp
sbb
sti
lret
xor
jle
xchg
mov
jbe
sbb
and
sub
fdivl
jmp
clc
sub
pop
bound
imul
xchg
mov
pop
xchg
les
cltd
cmp
cmpsb
xchg
mov
push
mov
cmpb
in
sbb
xchg
xor
inc
push
jae
ja
fcmovb
adc
lahf
inc
cmpsl
popf
xor
js
loope
push
out
dec
mov
fs
pop
nop
push
mov
sbb
insb
ret
sahf
in
pop
dec
xchg
push
int
scas
adc
add
js
lcall
jnp
bound
adc
sbb
jae
out
add
sbb
pop
mov
pop
jg
fnstsw
lret
mov
aaa
push
mov
mov
daa
and
fsts
jne
fs
nop
mov
jle
arpl
dec
mov
std
movsb
push
clc
pop
dec
mov
insl
dec
cwtl
cmpsb
pushf
repz
inc
dec
jecxz
xor
js
shrb
lret
aas
mov
in
leave
mov
mov
sbb
lds
xlat
cmpsb
sbb
cmp
cmpsb
cmp
test
scas
xchg
mov
dec
jne
jno
rcrl
or
cltd
fmull
inc
jno
mov
sbb
call
adc
lret
jl
inc
jbe
mov
push
ret
fs
add
push
stc
jecxz
outsl
notl
scas
mov
push
aad
scas
fwait
xor
xchg
adc
push
pusha
call
sub
dec
pop
xor
jp
pop
jp
inc
dec
test
mov
push
jae
mov
in
and
dec
cmp
xor
out
repnz
inc
out
xchg
xchg
out
sti
push
jnp
mov
mov
loopne
leave
mov
inc
jl
mov
jb
out
cltd
adc
hlt
addr16
fwait
loope
push
je
inc
pop
mov
out
je
lahf
in
test
rorb
pop
xor
lret
lock
in
into
pop
mov
int
jns
mov
sbb
mov
outsl
sub
jns
movsl
pop
mov
mov
xlat
call
pusha
lds
stos
cs
stos
and
mov
stos
dec
lods
lret
movsl
pop
jg
adc
loope
ljmp
pop
arpl
inc
addr16
shr
cmp
cmc
inc
pop
xor
jge
xchg
xor
rcll
cmp
adc
mulb
xor
sbbl
jns
movsl
je
popf
dec
xor
cltd
push
add
jnp
movsb
inc
aas
dec
pop
inc
jmp
setns
add
cwtl
mov
mov
ljmp
xchg
mov
ds
dec
fcoms
jnp
cmc
je
dec
jmp
jae
daa
mov
dec
arpl
or
es
mov
sti
popa
cmp
or
lret
andl
inc
push
adc
jns
repz
mov
push
xor
icebp
xchg
pop
arpl
popf
nop
sbb
leave
insb
addr16
and
movsl
sbb
lea
or
pop
dec
mov
jmp
inc
xchg
and
sub
inc
repnz
inc
jp
cmp
dec
fwait
outsl
xchg
lds
inc
in
push
jmp
push
xor
test
xchg
pop
fnstcw
xor
aad
rorb
and
push
cmp
ret
out
rorb
xchg
daa
sub
push
sub
ret
in
sarb
sub
in
xchg
in
shl
shrl
sbb
test
movsl
jp
sbb
adc
inc
lods
in
insl
push
aad
dec
and
push
scas
fisubrl
hlt
popf
out
movsb
push
xlat
push
pusha
loopne
repz
and
lret
and
push
jge
push
jae
ret
jae
loop
lahf
jo
add
in
pop
scas
scas
shlb
and
xlat
out
fxch
dec
adc
push
adc
dec
jae
add
pop
xor
sub
push
das
imul
or
cmp
sub
xchg
movsl
lds
lcall
fmull
outsb
jp
push
mov
ret
mov
sbb
add
dec
push
stos
loope
imull
cmp
or
or
mov
mov
scas
xor
mov
inc
cs
sbbl
xchg
je
and
jmp
add
lcall
mov
dec
jnp
arpl
jmp
jno
in
gs
mov
ljmp
pop
shr
xchg
lods
roll
adc
push
ret
mull
mov
pop
lock
mov
jbe
dec
fsubr
stc
xchg
mov
inc
cmpsb
ret
adc
fstpl
hlt
bound
test
add
push
lds
adc
pop
add
and
adc
sbb
popa
add
pop
lock
popa
add
imul
mov
mov
jbe
out
ss
inc
divb
lcall
andl
jno
mov
int
add
lods
out
int
std
movsl
mov
and
cmc
and
pushf
out
shlb
bound
inc
and
imul
or
int
adc
cmp
pop
sub
jnp
pop
enter
push
adc
mov
sbbb
push
adc
sbb
std
push
jno
cmc
ljmp
mov
adc
add
push
ss
push
daa
mov
adc
call
aad
cmp
imul
and
jle
xor
jae,pt
mov
sahf
in
repnz
jp
mov
push
or
in
and
xchg
mov
addr16
jmp
aaa
mov
outsl
in
cmp
and
push
pop
out
repz
cwtl
sub
cmp
and
push
jle
mov
xor
add
ret
lret
xchg
sbb
mov
sarb
test
sbb
jle
cs
imul
pop
clc
lcall
jns
je
xor
mov
mov
sti
jo
sub
fldl
mov
push
stos
cmp
cltd
xlat
push
popf
push
sub
mov
fsub
sarb
imul
xorb
xlat
and
mov
pop
jmp
push
cmp
adc
sbb
sbb
iret
mov
push
or
and
inc
dec
mov
sahf
jne,pt
jmp
jnp
stos
and
cli
and
cmp
das
fwait
mov
xchg
ja,pn
popa
sti
inc
mov
aam
test
rorl
arpl
mov
sbb
popf
pop
inc
pop
adc
and
add
jge
fsts
push
sub
jle
lods
pop
orl
xchg
das
enter
mov
shrl
cmp
int3
ljmp
lods
rcl
insl
adc
mov
push
mov
push
jecxz
loope
cmpsl
pop
push
or
dec
pop
push
fdivs
adc
fnstenv
xchg
cmp
fstpl
inc
outsl
sarb
fists
test
scas
fs
sbb
jge
push
cmp
jmp
jg
addr16
stos
js
cmpsl
stos
jns
adc
or
vmovsd
sbbb
cmp
pop
arpl
cmp
lcall
mov
lock
lods
lret
ljmp
pop
xorb
clc
and
inc
mov
dec
fmull
repnz
pop
push
jae
imul
std
mov
sub
pop
add
ret
jge
mov
xchg
dec
mov
mov
out
or
cmp
xor
loop
cmp
in
mov
lahf
cmp
jg
aam
pop
or
mov
shl
js
clc
mov
xor
mov
mov
out
in
dec
and
std
mov
fwait
cmp
add
jmp
and
roll
les
adc
push
xchg
ja
mov
scas
push
mov
jge
xchg
cld
cmp
inc
pop
jmp
push
fwait
mov
jo
jae
xchg
cld
mov
add
or
pop
push
dec
add
pop
test
sbb
adc
lret
and
inc
push
jge
adc
adc
and
inc
cli
adc
or
lahf
das
push
lock
in
xchg
push
mov
jbe
xor
dec
jl
xlat
cmpsl
or
in
fistpl
sub
push
in
dec
mov
inc
mov
push
popa
mov
pusha
xor
sub
xor
sub
adc
or
lcall
bswap
inc
sbb
scas
cmp
loopne
outsl
mov
stos
or
outsl
jecxz
push
dec
mov
icebp
mov
leave
mov
xchg
mov
xchg
jo
in
sbb
movsl
insl
jb
stc
int
add
adc
leave
jl
mov
adc
push
jbe
or
fistpl
adc
pop
mov
shlb
mov
enter
fidivrl
cmp
cli
leave
cmp
lods
movsl
loopne
inc
lods
push
dec
xchg
adc
dec
jl
mov
aad
call
jecxz
adc
test
and
ljmp
aas
sbb
in
hlt
pop
mov
int
test
sahf
pop
push
arpl
gs
shrl
ljmp
lcall
mov
xor
xlat
pushf
inc
lea
icebp
loopne
arpl
xor
test
in
das
into
nop
fwait
pop
ret
lret
dec
cli
inc
test
and
pop
int3
pop
mov
sbb
cmp
lahf
jns
scas
stc
mov
aad
leave
xor
mov
push
pushf
mov
repz
xchg
rcrl
cli
pop
leave
and
push
aaa
lret
jbe
mov
out
sahf
adc
xchg
insl
cmp
jecxz
fidivrl
cmp
xchg
push
xor
shr
xor
add
xchg
ss
aas
daa
icebp
push
repz
movsb
scas
iret
bound
outsb
mov
rorb
sahf
dec
psllq
sbbb
pop
dec
stos
sbb
je
sbb
xchg
dec
jg
fildll
pop
fabs
ds
sahf
sbb
mov
push
dec
addr16
jg
aam
or
insb
add
lret
pop
sub
push
adc
jge
les
into
cmp
lods
loope
lea
jbe
fdiv
lret
outsl
xor
outsb
test
jecxz
push
and
sbb
movsl
push
cmp
sub
pop
or
mov
inc
aad
pop
ds
in
jne
adc
fimull
xor
mov
sbb
aas
hlt
xchg
add
mov
cmpsb
call
and
imul
adc
in
inc
pop
inc
test
sub
xchg
aam
jle
dec
call
fldt
xor
hlt
sub
inc
sbb
ja
push
or
inc
pusha
mov
pop
inc
lds
jnp
repz
and
ret
fmull
push
or
pop
fcmovnb
adc
out
xor
ret
pop
vprotd
aaa
mov
adc
or
std
xchg
imul
inc
pop
imul
clc
shl
cmp
enter
outsl
icebp
insb
inc
aas
clc
adc
and
sub
inc
sahf
pop
mov
repz
movsl
jge
test
xor
cmc
sbb
dec
push
dec
or
mov
xor
push
jne
iret
add
mov
cmp
fstp
shll
shl
popf
add
add
sbb
adc
les
test
ljmp
pop
ror
ja
mov
jg
inc
jo
lea
negw
jb
adc
dec
mov
mov
nop
popf
jl
mov
or
cmpsb
aam
fs
push
jmp
jnp
add
add
adc
mov
test
je
adc
pop
daa
mov
push
and
dec
out
cmp
adc
push
pop
fstl
scas
call
mov
lret
outsb
cmp
shll
in
shl
ja
push
test
repnz
sub
inc
dec
xor
into
xchg
frstor
in
aam
divl
mov
cwtl
inc
bound
push
mov
sub
and
aaa
jb
adc
cmp
addr16
icebp
frstor
mov
adc
cmpsl
lcall
xor
mov
mov
xor
jb
pop
iret
sbb
pop
skinit
sbb
jecxz
adc
shll
rolb
test
adc
xor
repnz
xor
adcb
subl
repz
js
xchg
nop
cmp
pop
sbb
cmp
rcrl
sahf
sar
fiaddl
cs
fcomps
outsb
push
jp
syscall
icebp
mov
pusha
andb
jmp
xorb
in
mov
dec
mov
mov
mov
out
lret
in
mov
mov
sub
aad
jo
es
sarb
lret
mov
je
lock
lea
rcr
ljmp
mov
sbb
pop
pop
sbb
pop
inc
rolb
xor
mov
adcb
dec
lea
inc
sar
push
fsubrs
aam
pop
pop
mov
nop
dec
add
adc
and
xchg
imul
push
stos
loop
sbb
mov
cltd
sub
shrd
jecxz
aas
pop
mov
lea
inc
lcall
sbb
sbb
ret
ljmp
and
iret
xlat
mov
adc
xor
shl
fnstcw
xchg
xor
add
int
fnstenv
pop
test
fisttps
push
test
aaa
inc
mov
icebp
cmpsb
call
test
cmp
mov
gs
lods
ljmp
sbb
int
xor
and
push
out
mov
je
xchg
sub
aam
xor
sub
pop
out
xchg
movsl
je
mov
arpl
pop
sub
push
or
arpl
hlt
push
mov
rcr
lock
mov
and
mov
jne
jo
sub
and
inc
mov
stos
aaa
sub
jne
jmp
out
cmp
jmp
jmp
pushf
aad
sbb
and
xchg
popf
mov
mov
xlat
ret
add
ret
gs
lcall
aam
mov
test
fstl
xchg
sub
test
mov
push
and
jne
stos
cld
jge
rcrl
mov
push
sub
mulb
jns
mov
leave
jp
push
mov
addl
test
jne
ret
aaa
inc
mov
pop
daa
fsubl
fwait
xchg
es
jle
mov
outsb
insb
pop
bound
push
mov
and
hlt
ss
hlt
cwtl
shlb
lock
lret
jbe
test
cmp
mov
movsb
in
mov
dec
fistps
ljmp
out
and
ret
lahf
adc
xchg
sub
pop
jne
inc
xor
sbb
arpl
inc
adc
pop
repnz
jno
inc
movsb
and
sbb
pop
cmpsl
inc
jl
mov
out
dec
cmp
cmpsl
adc
and
add
jb
and
ret
lds
inc
out
fstps
jae
insb
nop
pop
dec
sbbb
sbb
leave
in
and
cmp
repz
mov
testb
popa
and
push
aas
xor
adc
movsl
pop
adc
add
jbe
shlb
rol
jae
xor
add
ret
movsl
insb
cmp
add
add
mov
dec
and
push
xor
aam
push
or
sub
std
mov
mov
sti
popf
jne
movsl
push
cwtl
jl
xchg
mov
gs
stos
in
mov
not
lahf
cltd
lods
aaa
in
icebp
sar
dec
out
outsl
push
idiv
push
adc
mov
mov
das
sbb
mov
mov
out
push
and
aam
xor
xchg
mov
out
push
cmp
out
jnp
jne
sub
xchg
push
or
idivl
mov
and
loope
jns
dec
push
fwait
pusha
lcall
ret
push
aaa
mov
out
mov
in
ja
leave
xchg
jmp
lods
mov
shll
psrad
mov
loope
push
loope
dec
mull
enter
mov
xchg
add
push
mov
dec
sbb
imul
mov
fldenv
cmp
fstps
xchg
inc
add
push
inc
mov
stos
push
rcrb
popl
test
enter
shll
and
pop
mov
bound
sbb
mov
out
jle
mov
pusha
lret
out
sbb
mov
xchg
and
sub
iret
sbb
and
jmp
mov
add
insl
ss
mov
nop
cmp
sub
jae
or
lret
sub
jle
ds
fxch
push
iret
or
jno
sub
pop
jecxz
push
adc
in
fimull
mov
rorl
enter
inc
vcvttsd2si
inc
mov
out
sbb
sbb
dec
lds
add
nop
inc
or
std
adc
fstpl
iret
loopne
lahf
cld
add
or
mov
lock
dec
mov
and
sub
ja
and
jecxz
inc
sub
fwait
stos
cmpb
subl
mov
jns
mov
push
outsb
push
bound
ficompl
mov
jne
and
lds
mov
lds
les
xchg
out
push
pop
fiadds
xchg
cwtl
imul
sbb
mov
or
xor
inc
cmp
sbb
nop
testl
push
and
sbb
fs
lcall
lret
sub
and
xlat
or
mov
push
cmc
fcmovu
xchg
push
loop
lcall
lret
jno
aas
push
adc
ss
das
xor
out
inc
rcl
jg
xor
cmp
fbstp
hlt
adcb
cmp
std
outsb
push
nopl
js
mov
jae
in
data16
fistl
dec
jl
sbb
sub
xor
pop
mov
sahf
fnstsw
jg
out
enter
testl
rcrl
ja
sti
add
push
mov
sbb
out
aaa
push
pop
out
in
pop
arpl
in
cwtl
ficompl
cmp
clc
aad
adcl
ret
pop
push
or
ss
gs
sbb
jmp
mov
arpl
lcall
sub
push
addl
mov
or
mov
lret
out
mov
sub
dec
mov
xchg
call
pop
dec
xchg
xchg
push
mov
repnz
and
nop
imul
mov
jb
or
jne
insb
and
mov
jnp
sbb
es
sbb
lea
leave
sbb
out
inc
rcll
or
loop
fs
push
pop
test
inc
les
loope
imull
inc
and
aaa
adcl
cmpsl
jmp
jle
aam
out
test
pushf
push
ret
rclb
stc
test
aas
shll
fmulp
adc
mov
cld
adc
leave
cmp
dec
push
xorl
xor
sub
hlt
inc
push
xlat
xchg
push
inc
push
push
ret
jb
divb
sub
inc
add
add
and
adc
lock
push
mov
cmp
call
lcall
pusha
repnz
lods
mov
out
mov
je
lods
cltd
push
push
insb
icebp
jo
push
push
adc
jg
mov
mov
xchg
mov
imul
inc
into
mov
mov
sub
test
push
cmc
mov
or
aad
arpl
push
adc
cmp
call
mov
xchg
add
xorb
in
inc
sub
in
js
lock
jnp
sti
mov
lret
jnp
hlt
xchg
orl
cld
cmp
movsb
ds
loop
sbb
cmp
iret
out
xor
pop
push
cltd
or
scas
pop
ja
pop
pushf
ss
push
sbb
int3
pop
arpl
loop
mov
and
lahf
andl
loopne
sti
imul
xor
push
adc
and
cmp
rcll
mov
orl
pop
inc
and
mov
js
aaa
pop
cmc
adc
sbb
cmc
pop
bound
in
insl
mov
ret
lret
xor
test
addr16
mov
in
push
sar
into
adc
in
repz
out
or
iret
jae
or
out
movsb
xchg
dec
cmp
and
sti
cmp
sbb
mov
inc
pop
push
sarl
push
mov
pushf
ljmp
adc
leave
ret
dec
xor
lcall
mov
icebp
xchg
notb
mov
je
test
ljmp
popf
fldenv
nop
outsl
insl
and
inc
out
mov
mov
sub
je
daa
dec
push
stos
lret
test
adc
fsubs
inc
pop
xchg
inc
push
mov
adcb
call
loopne
scas
clc
or
andb
scas
test
cli
push
jmp
leave
jnp
push
enter
or
fs
into
mov
test
mov
dec
pop
xchg
fildll
mov
aaa
pop
or
les
or
cmc
xchg
aad
sub
adc
cmp
in
or
jecxz
not
stc
mov
jno
in
mov
xor
shrl
mov
scas
enter
sub
jl
aaa
jle
add
icebp
adc
pop
xchg
xchg
push
dec
daa
xchg
cmp
aam
inc
stos
imul
sbb
leave
xchg
add
push
imul
jns
mov
inc
sahf
fdivl
aas
shll
inc
sub
push
push
sbb
dec
test
sbbb
stos
negb
fwait
mov
mov
movb
movl
shll
jns
sub
sub
test
mov
or
cltd
pop
je
xor
xchg
push
lods
jle
add
dec
jmp
inc
or
pusha
mov
push
mov
lea
sarb
pusha
fistps
int3
cmp
lcall
xchg
and
jl
ds
ds
pop
push
mov
sarb
cmp
inc
arpl
into
jg
in
fldenv
sbb
jbe
sti
sbb
mov
sbb
lock
paddusb
mov
test
divl
xchg
push
fs
cwtl
mov
xor
sub
mov
scas
xor
xchg
push
mov
ret
xchg
jb
dec
dec
or
mov
aad
cld
push
int3
mov
je
test
or
push
sub
addr16
movsb
or
lcall
jns
sub
jl
adc
mov
ret
mov
adc
push
cmpb
in
dec
adc
adc
push
in
sbb
add
lods
push
int
cld
jno
push
insb
cmp
rcrl
inc
iret
adc
fwait
xor
testb
ds
iret
xor
or
es
rorb
push
js
pop
gs
adc
mov
mov
stc
pop
sbb
aam
push
sbb
mov
fidivrl
repz
ret
and
test
lret
fcoms
in
mov
dec
mulb
push
inc
insl
punpcklwd
ficomps
icebp
sub
or
ret
leave
fdivs
xchg
jge
push
int3
jle
jecxz
clc
nop
adc
and
outsl
mov
aam
mov
arpl
clc
test
jo
jle
inc
adcl
sarl
push
mov
mov
ds
mov
loope
call
cmp
sarl
mov
jmp
push
or
sbb
or
in
xchg
and
cmp
movsl
mov
movsb
pop
inc
arpl
jle
lahf
aas
nop
mov
jb
js
jmp
xor
or
mulb
call
bnd
jl
loope
loop
sti
cmp
arpl
cli
inc
xchg
std
aaa
adc
repz
out
mov
xor
jle
pop
xor
jne
in
jmp
xchg
pop
dec
arpl
xor
xlat
jae
in
insl
add
push
ret
enter
dec
icebp
test
mov
pop
pop
call
iret
cmp
inc
mov
jae
push
outsl
icebp
cwtl
cmp
rcl
mov
sub
sub
in
test
mov
pop
stos
sub
ficompl
mov
mov
ljmp
hlt
and
out
sbb
into
lock
dec
mov
loop
cmp
or
or
cmpb
clc
enter
vphaddudq
inc
ja
add
mov
xor
int3
push
adc
push
leave
lahf
ret
enter
and
xchg
popf
aam
jnp
jo
es
inc
jne
and
mov
inc
push
repnz
push
div
xor
xchg
cs
jo
mov
mov
test
jns
int3
rcrb
dec
ffreep
std
fisubl
movsl
cmpsl
shl
cmp
movb
iret
out
jno
sti
xlat
out
rol
dec
je
fisubrs
call
sbb
aad
mov
or
and
mov
lods
sbb
cmc
jle
outsb
jge
push
xchg
push
loopne
push
js
in
into
pop
dec
or
push
xor
loope
sub
cmp
cltd
aam
sbb
sub
sysret
sahf
in
repnz
and
test
mov
xchg
push
sarl
dec
mov
pop
cli
pop
mov
pop
enter
add
push
in
jne
jp
fistpll
jmp
pop
and
fadds
push
movsb
mov
lcall
stos
loope
lcall
xorb
movsl
in
and
pop
push
cmp
lahf
cmpsl
push
jmp
dec
sbb
in
fs
call
jb
mov
xor
or
mov
mov
or
push
das
or
push
repz
and
sti
inc
popf
loopne
cmc
xlat
jno
enter
dec
addr16
add
inc
xor
jno
push
movsb
mov
mov
push
push
sub
nop
sahf
lock
or
add
shlb
mov
dec
es
mov
ret
ja
scas
sub
jne
push
mov
movsb
jbe
into
sti
jnp
push
test
jle
adc
pop
dec
rorl
push
sub
adc
jecxz
pop
sti
jae
movsl
add
ret
enter
jecxz
in
pop
lea
xchg
push
sti
and
jns
mov
out
test
and
dec
xor
mov
and
mov
ss
popf
outsb
sbb
sti
sbb
xchg
mov
adc
sti
lds
into
stos
lcall
int
sub
mov
adc
or
sub
or
jle
push
inc
or
mov
inc
inc
xchg
sbb
mov
and
jns
pop
push
gs
cmp
das
pop
loopne
pop
movl
xor
jnp
lret
loope
fnstenv
xor
rclb
adc
fs
pop
test
jns
push
lods
into
daa
xchg
jbe
outsb
out
stos
mov
jnp
sub
rcl
in
fmulp
jne
inc
dec
ret
push
fnstcw
sarb
xor
push
sbb
jmp
jne
shll
pop
test
ret
push
mov
xchg
mov
lods
test
pop
insl
mov
out
or
fs
dec
loop
cmp
jno
sbb
mov
sbb
cltd
push
jae
sbb
aad
insl
lods
and
lods
ljmp
fildl
cltd
sbb
push
add
or
or
cmp
lds
popa
push
mov
push
test
fsubrs
int
repnz
repz
shl
or
inc
xor
push
repnz
in
sarl
cmp
sti
loop
bound
sbb
mov
into
pop
aad
adc
or
je
jmp
mov
out
mul
cmp
sub
sarl
mov
adc
xchg
aad
jne
in
in
fst
insl
aas
jecxz
lea
enter
cmp
cwtl
test
jnp
mov
shll
ror
repz
outsl
mov
scas
ret
fnstsw
inc
mov
into
aam
repz
movb
mov
setne
add
repz
lods
int3
pop
xor
inc
add
dec
adc
mov
pop
mov
xchg
int
mov
lods
inc
xchg
xchg
fldcw
jecxz
ds
push
rcrb
popf
out
aas
rorb
jg
jo
cld
pop
jno
mov
scas
pop
add
int
jnp
adc
loop
repnz
insl
add
sbb
or
xor
bound
repnz
mov
sbb
push
enter
leave
mov
push
ret
gs
leave
mov
test
jb
pop
sub
push
xchg
push
mov
sbb
jbe
mov
sub
lds
adc
jnp
add
push
sub
or
hlt
xchg
cmp
lock
cmp
arpl
sbb
call
pop
xchg
cld
jns
out
ds
popa
sub
inc
scas
jp
mov
push
push
js
sub
fs
lock
inc
sbb
daa
fs
and
out
roll
fs
out
jmp
pop
shl
jno
pop
fistps
adc
cmp
clc
ret
repz
xchg
push
pop
jae
shlb
sbb
cmp
popa
add
sub
push
pop
inc
lea
jo
mov
xchg
xchg
xor
xchg
push
sbb
fbld
xchg
cli
enter
scas
mov
jle
jno
adc
enter
jle
cmp
out
inc
mov
add
or
sbb
out
xor
scas
arpl
and
imul
push
cli
insb
cmp
lea
or
or
cmpsl
mov
mov
push
sbb
fdivrl
mov
cwtl
aad
cmp
rcl
push
xor
sub
mov
ljmp
or
fcompl
je
dec
xor
push
jge
mov
out
mov
pop
fs
mov
inc
jb
xor
aas
int3
ljmp
push
xor
inc
jns
dec
icebp
test
inc
mov
or
testl
mov
cltd
xchg
push
outsl
jg
jno
dec
bound
outsl
cli
xchg
xchg
mov
sub
mov
icebp
sti
mov
or
xor
cmp
ss
in
les
clc
add
push
outsb
mov
push
insb
sbb
addr16
daa
or
fsubl
add
sbb
jo
inc
in
scas
sahf
ljmp
pop
scas
test
aaa
sub
mov
mov
shll
fwait
mov
nop
pop
loop
mov
incl
out
test
lret
xchg
cmpsb
push
gs
scas
stos
adc
push
rol
cmp
or
out
icebp
leave
loopne
fiadds
scas
xlat
pusha
das
and
in
dec
cmc
inc
jecxz
sar
outsb
test
and
std
mov
jg
mov
jp
rcrb
jo
test
rclb
outsb
sub
pop
xor
icebp
not
incb
cli
adc
or
std
popf
add
mov
andl
mov
xor
xchg
movsb
stos
es
scas
sub
or
movl
lea
cmp
push
out
jne
xor
jo
fmull
loope
fistps
fidivrl
pop
add
rcl
push
test
int3
aam
sbb
imul
sarb
lock
jno
pop
xchg
cmp
and
xor
sub
fwait
cmp
cmp
test
test
push
sub
inc
mov
sahf
pop
lods
ret
jne
or
icebp
xchg
sbb
xlat
out
fucomi
or
jp
loope
sbb
or
dec
clc
stos
lcall
mov
orl
repz
decl
mov
cmp
stos
jl
push
add
cltd
xchg
mov
push
sti
cwtl
fbld
lcall
mov
adc
aaa
xchg
aaa
aam
shlb
add
xchg
push
or
test
std
pushf
mov
sub
inc
dec
mov
xor
xchg
lds
sub
rcrl
cli
mov
std
rcrb
mov
rorl
fmull
jnp
fisttps
popa
shl
mov
fnclex
idivl
gs
mov
into
cli
movsl
repz
mulb
mov
dec
inc
daa
pop
inc
push
sti
cmpsb
outsl
inc
shrl
sbb
loope
imul
lock
mov
mov
cmpsb
lods
mov
push
inc
test
hlt
ss
mov
push
outsl
ret
mov
pusha
je
push
repnz
in
hlt
data16
adc
or
mov
cwtl
jp
or
fstpl
mov
cmpsb
rorb
dec
mov
aad
aam
mov
cmpsb
bound
insl
dec
or
in
shlb
loope
sbb
outsl
xor
adc
je
lods
rcrb
cltd
add
add
mov
xchg
shrl
add
and
and
push
cli
sub
mov
pusha
cs
mov
repnz
loop
and
iret
mov
cmp
in
jae
add
ss
movlps
add
pop
cmp
lahf
or
cmp
add
imul
lret
inc
movsb
push
sbb
inc
dec
add
xchg
addl
push
gs
in
add
lock
lock
mov
mov
cli
xor
rcrl
cltd
xchg
sahf
pop
scas
iret
arpl
roll
or
pushf
mov
inc
xor
inc
and
sarb
dec
sub
lods
imul
stos
xchg
imul
sub
daa
xor
lret
xor
insb
or
push
popl
icebp
loop
xchg
push
sub
xor
mov
mov
inc
fdiv
xchg
nop
dec
ficoms
aas
out
sbb
in
xchg
jne
adc
and
dec
and
daa
rcr
add
mov
push
jnp
call
mul
shll
cmp
mov
push
jae
je
and
mov
mov
jns
mov
aas
dec
mov
into
add
outsl
sbb
std
sbb
pop
mov
and
bswap
mov
xlat
ficoms
call
add
push
and
pop
push
imul
mov
aad
jo
pop
and
jne
data16
adc
jnp
pop
pop
xor
decb
and
js
test
xor
jno
jo
xchg
repz
lahf
lcall
and
iret
sbb
inc
inc
ljmp
push
cmp
mov
data16
idivl
push
sbb
jle
mov
ljmp
mov
inc
addr16
out
sti
push
leave
fdivl
fdivs
add
jp
jbe
jmp
and
dec
and
jge
lret
test
or
mov
int
push
xchg
iret
mov
and
mov
jmp
jno
adc
xor
cli
in
arpl
les
in
dec
lahf
jne
sbb
in
shlb
cmp
inc
dec
rorl
mov
repz
xor
ret
add
outsb
out
std
or
xor
sbb
mov
jae
fs
inc
or
mov
testb
jle
xchg
xor
aam
and
jb
int
shll
jle
dec
repnz
lcall
sbb
lahf
push
add
in
scas
aaa
out
gs
fscale
fisubl
mov
int
push
mov
call
xor
mov
add
cltd
xchg
in
lret
and
dec
sub
add
sbb
and
addb
dec
mov
mov
je
cltd
jmp
out
jle
sar
lcall
xor
sbb
shll
mov
aas
outsl
test
sbb
add
inc
pop
es
clc
sahf
jae
inc
lahf
bsf
stc
test
add
mov
xchg
mov
push
xlat
push
enter
inc
scas
test
lods
rol
xlat
in
xchg
mov
jmp
mov
push
ret
lahf
out
movsl
leave
inc
and
pop
cmp
adc
adc
dec
or
adc
sarb
dec
aaa
xchg
mov
pop
xor
jmp
jge
outsl
cmp
xor
stc
imul
mov
push
push
in
pop
std
sbb
push
addr16
in
jne
inc
testb
sub
int3
gs
shlb
pop
mov
inc
push
ret
pushf
popa
add
cltd
test
adc
sbbl
pusha
fisttpll
shlb
mov
loop
imul
loope
push
push
ljmp
nop
stos
jno
in
je
sahf
out
cmp
into
jecxz
sbb
js
sbb
jl
mov
fdivrl
nop
inc
inc
mov
cwtl
cs
shrb
mov
stos
mov
cmp
neg
out
xor
or
leave
dec
fnstenv
add
jecxz
lea
cmp
fimull
pop
jno
or
cmp
clc
stos
jle
mov
inc
cmp
dec
pop
xor
int
loopne
lret
and
faddl
movsl
ljmp
pop
addr16
aad
imul
cld
inc
outsb
xor
sbb
ja
ljmp
push
aaa
sbb
mov
dec
arpl
jmp
iret
clc
pop
mov
hlt
pop
xor
ret
mov
and
and
cli
lea
xor
pusha
cmp
in
das
and
sub
sbb
cli
icebp
pop
xchg
in
dec
sub
mov
pop
add
ss
inc
xchg
movb
add
mov
enter
cmp
cld
mov
aas
mov
out
cld
lcall
mov
xor
sub
inc
inc
fucomi
jmp
xor
clc
inc
mov
add
fstpt
push
imul
pop
push
cmp
loopne
pop
loopne
add
ljmp
mov
or
push
mov
cmp
xchg
push
sti
dec
or
scas
mov
jl
xchg
or
and
mov
shrb
lock
ds
out
aaa
mov
inc
fidivrs
or
sbb
add
jnp
stc
js
ja
rorl
cmc
lcall
lods
cwtl
push
dec
mov
xchg
in
pop
les
inc
mov
aaa
pop
pop
sbb
pop
dec
pop
in
stc
jmp
cmp
das
push
loopne,pn
or
push
dec
and
dec
fs
xor
mov
xchg
pop
cmp
sbb
pop
pop
hlt
xchg
inc
adc
aas
mov
dec
add
or
push
push
dec
adc
mov
in
inc
scas
adc
push
jl
enter
imul
or
cmp
inc
add
lods
add
add
in
std
pusha
xchg
mov
sub
enter
insl
xchg
ret
xchg
ret
cwtl
jle
sbbl
push
pop
fsts
jge
adc
xor
mov
lcall
pusha
data16
adc
add
js
inc
sub
push
fisubrl
mov
cmp
mov
and
imul
pop
mov
add
enter
insb
sahf
enter
sub
jne
add
fdivrs
sbb
mov
mov
jle
mov
lret
dec
lea
mov
pushf
rorb
in
sbb
rcr
fcmovne
iret
lahf
imul
push
cli
data16
std
aam
pop
fsub
mov
scas
pop
pop
xchg
xor
fildl
in
push
or
xor
fistpll
stos
mov
jmp
pinsrw
lcall
popa
adcl
stc
fwait
jae
std
pop
pop
out
int
inc
mov
sahf
icebp
dec
jbe
hlt
inc
fs
push
enter
push
jbe
pop
inc
leave
xchg
jbe
xchg
sub
stos
mov
cwtl
je
push
xchg
or
les
dec
push
int
inc
int3
mov
jbe
cwtl
scas
cli
dec
jbe
lods
rorl
les
outsb
sub
jae
arpl
adc
xor
xchg
and
dec
mov
ljmp
sbb
shll
lret
xchg
jecxz
sub
adc
cld
mov
ljmp
cmpsl
outsb
lret
cmp
sti
inc
out
outsb
and
test
ja
sub
xchg
repnz
sbb
lahf
pop
push
cmpsl
daa
cmp
add
xchg
xor
pop
xchg
fsts
xchg
mov
dec
sub
mov
push
jg
shrl
mov
sbb
lods
dec
pop
cmp
call
stc
push
xchg
jns
scas
sarb
sbb
jnp
out
cmp
cld
dec
icebp
pop
nop
std
ja
mov
inc
dec
and
subl
push
adc
je
jmp
ss
ficoml
bound
mov
ret
jecxz
xor
sahf
adc
jl
mov
orb
and
add
pop
fidivrs
out
mov
ds
into
into
cmc
ja
inc
mov
and
out
mov
and
mov
xchg
mov
jnp
mov
cwtl
xor
ljmp
imul
loope
test
out
xchg
jae
rol
xor
jmp
notb
cld
and
movl
mov
fcom
arpl
ja
xor
adc
add
jns
push
and
rcr
cmpsb
sbb
dec
incl
inc
adc
arpl
xor
flds
orl
inc
jae
jmp
jp
dec
es
lods
and
xchg
ret
push
dec
push
sbb
out
add
subl
adc
jae
push
dec
shl
push
adc
fbstp
push
fs
das
xchg
scas
mov
clc
jbe
and
lock
scas
xchg
dec
adc
cmp
mov
and
inc
push
bnd
pop
pop
data16
cltd
sbb
xchg
bound
mov
jle
mov
lock
and
inc
cs
mov
stos
jno
dec
test
cld
imul
mov
xchg
push
push
mov
pop
fbstp
lds
mov
fiaddl
subb
scas
push
jecxz
js
push
and
dec
ficompl
clc
push
rolb
xchg
outsb
aad
pop
pusha
xor
aam
push
dec
lcall
lcall
mov
je
or
push
or
jb
add
push
daa
test
fadds
mov
mov
xor
mov
popf
out
sbb
cmp
out
stos
and
lcall
cmpsl
lea
dec
mov
inc
sti
ljmp
mov
stc
movsl
outsb
movsl
fs
sbb
jecxz
jp
xchg
test
ljmp
aad
inc
sbb
loopne
js
les
loope
popf
gs
pop
push
xchg
sti
jg
inc
add
inc
xchg
dec
lds
ds
inc
lret
jns
sub
scas
xor
mov
out
lods
outsl
imul
clc
xor
or
xchg
insl
mov
outsb
xchg
int3
and
mov
xor
push
hlt
iret
add
cltd
xlat
fcomp
sbb
aad
mov
mov
cmpsl
mov
aaa
xor
icebp
pop
jl
cmc
and
xchg
pop
ljmp
lods
adc
fistpl
fs
dec
incb
cltd
in
xor
lret
out
or
lds
ficomps
add
rclb
jecxz
jnp
adc
xor
leave
push
sbb
dec
rcll
xorb
nop
dec
imul
leave
leave
repz
inc
cld
adc
xlat
or
dec
lret
or
add
dec
loopne
sbb
sbb
jo
ljmp
shrl
xchg
cs
addr16
ja
testl
repz
xlat
mov
sub
xor
ljmp
cmpsb
mov
lods
ljmp
aam
mov
sub
push
jnp
push
add
pop
cmpsb
adc
mov
pop
nop
dec
and
push
daa
xchg
push
or
cmp
jge
dec
sbbb
inc
shll
push
das
data16
cltd
push
inc
movsb
or
or
mov
lea
out
adc
jns
mov
adc
notb
movsb
mov
lcall
shll
mov
jmp
lcall
cli
std
rol
inc
lods
mov
bound
addl
xchg
jns
jnp
or
or
mov
adc
mov
roll
roll
fwait
lret
test
mov
mov
fdivrs
lods
mov
add
das
popf
pop
xchg
sbb
int3
jbe
add
inc
jbe
cmp
xchg
xchg
jl
xor
imul
push
or
pusha
shrb
adc
insl
sbb
fcmovnbe
sarl
xor
mov
push
popf
add
add
and
add
cmp
pop
loope
int3
int3
mull
outsl
bound
xor
lock
adc
jne
sbb
pop
nop
imul
in
cmc
aas
pop
pop
and
loop
push
and
pop
pusha
mov
cld
mov
dec
ret
bnd
repnz
ljmp
pusha
adc
addr16
inc
out
mov
mov
add
inc
push
push
rcll
xchg
push
mov
inc
mov
push
xchg
cmc
int
xchg
add
sub
sbbb
sub
xchg
or
mov
push
and
and
es
jmp
stc
push
xchg
das
aaa
and
xchg
scas
xor
jge
pop
les
push
xchg
rcrl
or
repnz
mov
repnz
out
out
insb
into
stc
outsl
jl
cmp
pop
repnz
jp
out
and
xchg
cmp
jl
jle
imull
enter
test
mov
lcall
arpl
inc
and
xlat
dec
ds
clc
cmp
iret
cld
gs
in
jno
cmpsb
jb
hlt
lret
push
push
jae
dec
push
pop
lret
shll
stos
push
fdivrs
mov
mov
or
mov
icebp
push
push
push
in
xchg
enter
test
aad
dec
hlt
lahf
push
mov
jno
dec
lock
test
in
and
jle
xor
cs
das
pop
das
or
lret
shr
dec
aas
cld
cvtdq2ps
cld
sahf
in
mov
mov
xchg
sbb
enter
push
xchg
jle
icebp
lret
pop
or
push
out
pop
xlat
dec
lgs
outsl
cmpsb
icebp
mov
sbbb
mov
fnstenv
dec
add
push
fwait
js
data16
mov
ljmp
aad
stc
mov
pusha
ja
aad
xchg
mov
iret
push
les
and
in
and
or
pop
dec
push
and
imul
loopne
sarb
int3
out
push
pusha
mov
push
call
inc
or
lret
push
lea
mov
subl
mov
fisttpl
inc
pop
les
mov
popaw
ret
std
jbe
ds
mov
cmp
enter
loop
clc
bound
jle
cmp
jle
fldt
dec
clc
sub
iret
daa
cmp
sub
cmp
jp
stc
push
adc
lods
ret
inc
loope
pop
jo
adc
pop
mov
mov
mov
aas
pop
push
jle
cmpsb
mov
and
add
jnp
cs
rol
testb
test
and
jns
rsqrtps
bswap
mov
pusha
xchg
mov
arpl
ret
std
and
jo
push
ret
or
out
dec
dec
inc
test
and
in
js
sbb
je
fnstenv
mov
xlat
xchg
xor
popf
sbbb
das
push
fsubs
pop
pop
mov
popa
and
icebp
aam
std
inc
int
adc
add
xorb
mov
inc
inc
ja
add
push
xlat
mov
jle
ljmp
js
pop
hlt
cmc
sbb
inc
sub
mov
je
pop
jge
negl
mov
movsb
and
inc
scas
scas
jg
jnp
jle
das
mov
mov
dec
loopne,pn
stos
sub
xor
xor
loopne
and
rcll
mov
lcall
outsb
ds
adc
dec
pushw
hlt
cmp
arpl
and
addr16
xor
sbb
je
lock
into
xchg
cld
int3
sahf
jns
add
cmpsb
add
testl
sbb
lea
les
icebp
and
sub
mov
jg
andb
sbb
call
mov
mov
xor
cmp
mov
andl
or
aaa
fsubrl
mov
add
xorl
inc
ljmp
imul
mov
mov
mov
push
test
push
pusha
jno
fdivrs
sbb
pop
pop
jl
data16
sub
sbb
cmp
js
lock
xor
mov
adc
jnp
and
aaa
aam
mov
scas
push
aam
pop
mov
lea
mov
cmp
aaa
xchg
jae
cmp
jb
sbb
pop
push
xchg
mov
cwtl
aad
xchg
push
cmp
jecxz
xor
pop
xor
sub
or
or
cmp
fdivrl
xor
push
popa
ds
jp
xchg
cmpsb
pop
jns
cltd
and
jnp
adc
ss
rclb
scas
std
je
imul
cltd
jmp
aam
pop
enter
decb
pop
adc
xor
outsb
mov
lahf
jle
sub
orb
jp
cmpsl
mov
daa
add
mov
jo
mov
mov
inc
fidivs
mov
xor
xchg
scas
mov
ret
mov
push
lcall
dec
push
insl
idivb
adcl
fdivl
and
lret
mov
jne
dec
stos
jo
add
or
arpl
and
inc
aam
push
nop
pop
mov
xor
out
mov
out
xchg
ds
xor
pop
nop
inc
arpl
adc
loop
add
mov
inc
shlb
es
dec
decl
pop
or
push
lods
pop
aam
xchg
adc
imul
das
add
or
jmp
adc
mov
cli
cmc
out
sub
mov
in
fyl2xp1
ja
ja
addl
and
and
sar
mov
or
cmp
or
aas
dec
je
pushf
jo
push
xor
push
lods
es
add
dec
push
sbb
sarl
mov
jnp
mov
int3
ljmp
jno
rorl
jle
cmp
xchg
mov
inc
mov
int
cmp
mov
imul
add
and
push
jo
jae
mov
subb
js
ja
movsl
add
fcompl
ljmp
dec
leave
mov
imul
pop
pop
cs
or
and
cmpsb
in
call
mov
cmp
faddl
fmul
mov
lcall
outsl
into
inc
lahf
les
repz
mov
fwait
adc
add
and
cs
lods
add
shrl
adc
shll
mov
aaa
mov
push
add
or
imul
sub
cmpsb
rorl
adc
lods
or
sahf
mov
dec
icebp
xchg
push
fsubl
and
or
ds
xor
push
xor
inc
pusha
jecxz
xor
mov
jae
movsl
cmp
faddl
mov
repz
cmp
lock
mov
movsb
std
or
mov
mov
movsl
push
andl
fwait
and
call
push
pusha
fnstenv
lods
leave
out
fistl
adc
xchg
cmp
adc
scas
test
mov
cs
imul
inc
mov
cmp
push
xor
clc
fisttps
jnp
in
sbb
add
ljmp
shl
xchg
lret
icebp
ret
aad
mov
cmp
faddp
mov
mov
dec
stos
lcall
dec
cltd
gs
dec
add
insl
pop
lods
cltd
mov
cmpsb
add
loope
cmp
in
fisubrl
dec
test
pop
in
addr16
lret
mov
ja
mov
xchg
push
adcl
aas
lds
fwait
add
aad
cltd
add
test
cmp
pushf
inc
and
sbb
ja
pop
mov
push
leave
dec
push
cmpsl
test
xorl
jecxz
sbb
and
aaa
icebp
stc
adc
mov
cld
lret
lock
push
cli
out
jo
cmp
daa
xor
lret
ret
popf
scas
fadds
pop
pushf
jg
loope
sbb
mov
popf
shll
adc
sti
call
pop
subl
loope
popf
popf
bound
int3
ds
pusha
sbb
pop
push
inc
xchg
imul
rcr
imul
pop
push
pop
cmp
mov
imul
mov
adc
cli
adc
ret
insb
jb
cmc
jle
xor
fwait
xor
mov
fbstp
rclb
jmp
push
hlt
and
out
sub
stos
jge
sbb
mov
std
jmp
fmuls
repnz
pop
loop
sbbl
xor
push
roll
dec
in
lret
lahf
mov
add
xor
inc
in
mov
clc
or
xchg
push
sub
orb
and
in
cmc
mov
lods
pop
bound
xchg
push
iret
dec
shlb
repz
xchg
aad
dec
xchg
cmc
imul
xchg
roll
imul
sub
imull
cmp
sub
mov
lea
mov
inc
add
mov
aam
rorb
mov
cmp
fcoml
ret
lods
push
pusha
clc
jae
sub
lock
sbb
jg
mov
mov
gs
sbb
outsl
add
sahf
pushl
pop
and
dec
scas
in
fistps
pop
in
aad
jl
mov
mov
jmp
aad
lcall
mov
sti
xchg
xchg
aam
and
cmp
outsb
inc
stos
in
xchg
push
subl
add
stos
mov
loop
pop
mov
and
loop
arpl
push
popa
fstpl
xchg
add
inc
adc
stos
fsubrs
sbb
jmp
mov
fnstcw
and
xchg
testb
mov
ret
push
or
ret
push
and
pop
fwait
shlb
fcoml
aam
cmpsb
sub
pop
xchg
filds
mov
jmp
in
iret
dec
xchg
and
loopne
ror
int
insl
jno
xchg
push
pop
test
sbb
and
fmulp
sub
stos
pop
push
mov
outsl
mov
decb
iret
pop
xor
test
out
cmp
xor
sbb
mov
sub
mov
or
push
push
jmp
cmp
aad
fisttps
jmp
in
inc
pop
sbb
jno
rcll
cmp
pop
mov
in
iret
lea
in
push
into
in
hlt
lods
stos
int
adc
jmp
dec
mov
loope
icebp
sarl
popf
add
cltd
mov
push
outsl
and
inc
inc
push
jl
dec
loopne
in
je
in
mov
dec
filds
xchg
mov
orb
ficoms
cs
stos
pop
leave
into
adc
xlat
aam
out
mov
and
aaa
shlb
mov
dec
aas
sub
in
dec
dec
pop
xchg
scas
test
sbb
stos
xor
lahf
lds
lret
test
inc
int3
pop
inc
fs
push
out
and
and
mov
in
inc
and
lods
push
push
dec
dec
icebp
xor
icebp
mov
push
xor
lcall
pop
pop
bound
or
in
repnz
xchg
mov
ja
jg
dec
and
lcall
leave
sarb
xor
repnz
imul
xchg
xchg
add
insl
pop
or
imul
push
and
xlat
xor
fsts
mov
jae
cmp
in
fbld
cmp
cmpsl
addr16
inc
icebp
scas
cld
sub
rcrl
movsl
test
mov
push
out
lods
int3
fdivr
jecxz
dec
xchg
arpl
push
mov
faddl
add
cmc
popa
sub
loopne
xlat
addr16
scas
arpl
mov
in
rol
mov
outsb
lcall
insl
cmp
faddl
loop
cwtl
cmp
fsubrs
call
push
xor
movsb
adc
ret
adc
loop
xorb
filds
mov
daa
pop
jle
add
fldcw
mov
outsb
xchg
add
insb
lret
mov
mov
xor
and
dec
xchg
bound
loop
testb
jle
stc
sub
cli
nop
pop
adc
test
movsb
pushf
push
mov
mov
mov
rcr
pop
mov
cltd
cli
les
clc
inc
lock
mov
push
pop
or
push
cmpsb
or
add
mov
out
or
sbb
out
sbb
xchg
dec
sub
xchg
mov
sbb
xor
add
pop
dec
lock
iret
idivl
mov
xor
cmp
aad
stos
ficompl
out
clc
rcl
mov
insb
mov
mov
fnstcw
fsubrl
shlb
cmp
hlt
in
or
gs
pop
out
cld
int3
pop
mov
mov
add
or
loop
dec
jmp
je
hlt
cmp
test
imul
js
sbb
lods
cmp
push
ss
jmp
pop
cwtl
lret
mov
xor
cli
xchg
subb
lahf
mov
pop
or
fwait
sub
popa
jae
rorb
outsl
in
mov
xor
sti
jl
or
push
mov
pushl
fisttps
ljmp
jb
mov
mov
mov
dec
cmpsb
xchg
pop
lea
stos
jae
xchg
shll
or
iret
jmp
push
lods
movsb
jecxz
hlt
cmc
jg
push
dec
jmp
lock
ljmp
xchg
insl
xchg
dec
xor
lcall
mov
inc
adc
scas
movsl
xchg
loopne
aam
sub
lret
push
xchg
push
loope
sbb
or
jo
xor
mov
addr16
in
repz
adc
sbb
mov
popf
hlt
xchg
and
mull
sahf
loop
mov
pop
jecxz
enter
mov
sbb
push
push
mov
es
and
pop
shl
cmpsb
mov
rclb
lret
inc
mov
cmp
mov
jno
insb
pop
insb
scas
add
adc
mov
daa
pop
clts
xor
aam
arpl
and
dec
mov
jecxz
mov
mov
add
dec
inc
mov
frstor
push
fcompl
pop
loopne
mov
pushf
sbb
or
pushw
and
fadds
xorl
xchg
push
xchg
ficoms
negl
ret
test
jbe
jmp
pusha
icebp
aaa
mov
or
dec
dec
rolb
call
inc
cmc
mov
out
aad
add
pop
mov
jmp
push
dec
sbb
fstpt
sub
push
adc
dec
icebp
jnp
xlat
movsl
lods
adc
std
push
loopne
divl
dec
and
xor
test
mov
in
scas
sub
stos
jbe
aas
in
popa
enter
add
mov
lods
xchg
jnp
pop
adc
call
pop
adc
imul
dec
sti
es
int
mov
xor
add
jmp
jno
and
xchg
popa
sbb
push
pop
andl
ficompl
dec
or
out
dec
sub
mov
cmc
dec
dec
inc
or
pop
cmp
stos
test
sbb
test
mov
cmp
int
aam
std
pop
movl
lahf
dec
push
push
dec
xchg
in
outsb
or
fdivl
pop
pop
icebp
sti
arpl
sub
cld
aam
xchg
xchg
or
pop
inc
mov
in
pop
dec
sbb
ret
aaa
sbb
sarb
repnz
mov
insb
movd
or
or
fld
adc
clc
or
jmp
movsl
je
dec
and
xchg
jne
subl
fbstp
add
sbb
pop
mov
jmp
stos
push
mov
adc
aas
mov
in
js
gs
sbb
jne
sti
daa
add
adc
pop
pop
push
jle
jle
test
push
adc
ljmp
outsl
add
in
or
mov
psubusw
xchg
ret
negb
inc
jo
xchg
je
in
popa
adc
lahf
out
lods
xchg
push
add
outsl
hlt
mov
sub
and
adc
cmp
popa
push
inc
shrb
imul
loop
mov
into
pop
jg
andb
mov
jl
push
movsl
sbb
in
fs
add
adc
push
loopne
jle
cmpb
sbb
cmp
push
shlb
js
cmc
cmp
pop
mov
jbe
js
popf
leave
loop
imul
iret
call
aad
cmp
jae
shlb
insl
or
les
fmul
inc
enter
inc
dec
pop
and
insl
and
pop
loop
scas
pop
fdivs
loop
push
lods
int
cwtl
xchg
test
pop
adc
adc
inc
pusha
jne
sbb
loope
push
inc
cltd
push
sbb
mov
ja
sbb
fmulp
mov
addr16
add
test
in
call
sbb
sbb
xchg
in
int
fsts
cmpsb
cmp
push
xchg
inc
jmp
aas
pop
or
adc
pop
mov
lahf
int
jne
push
adcb
pop
xor
test
pop
aas
inc
int
test
mov
cmp
cmp
push
stc
inc
mov
outsb
adc
rcll
out
jp
andb
jg
adcl
mov
arpl
out
inc
in
mov
xor
add
lcall
movsl
je
loopne
cwtl
sbb
ljmp
adc
sbbl
es
jmp
divl
push
scas
sub
jge
cwtl
adc
movsl
cmp
int
dec
jne
mov
sub
icebp
sar
cmp
ljmp
popf
inc
jae
xchg
push
movl
fptan
mov
adc
mov
xchg
rcl
and
jg
in
stc
jnp
add
mov
aaa
mov
or
cwtl
mov
jg
push
cltd
or
mov
repz
ret
mov
lret
pop
push
pushf
clc
gs
rclb
dec
pop
int3
add
add
push
mov
loopne
inc
aaa
sub
xor
enter
jnp
mov
adc
dec
mov
push
mov
and
mov
scas
outsb
xor
xchg
dec
xchg
ss
and
cmp
cmp
dec
ret
jo
cmp
aas
cmp
push
push
imul
push
negl
aam
insl
lret
test
std
pop
lret
notb
movb
and
push
inc
mov
pop
lds
xchg
cmp
mov
dec
sti
mov
mov
mov
xor
dec
aaa
outsl
adcb
in
pop
sub
lret
xor
cli
ja,pt
pop
push
cltd
inc
mov
xchg
lcall
sbb
lods
movsl
pop
xchg
mov
incl
lds
mov
gs
add
int3
push
mov
mov
push
add
mov
addr16
pop
jge
fidivs
push
sti
leave
call
test
jo
xchg
sub
lret
jo
and
mov
jo
push
push
popl
push
rcr
add
pop
mov
adc
cltd
push
jae
jb
fwait
sub
mov
pop
rolb
stc
pushf
in
xchg
and
aad
lock
and
inc
outsl
mov
mov
mov
out
add
fsqrt
push
insb
dec
ss
inc
mov
xor
sbb
mov
push
arpl
cltd
push
xchg
add
lods
push
outsl
inc
inc
jbe
lcall
push
sub
lret
mov
mov
aaa
fcomps
mov
repnz
lods
sbb
mov
lods
mov
lds
mov
push
dec
in
pop
fdivrl
je
push
hlt
fmuls
or
sar
cmpsl
js
xor
repz
cpuid
mov
jo
pop
ficoms
ffree
or
fstl
jl
jmp
add
imul
and
imulb
nop
adc
add
push
fistpll
or
push
fdivrl
ret
xor
cmc
popa
add
jbe
cwtd
into
movsl
sub
outsb
mov
push
ss
fs
fucom
imul
sub
jo
mov
lods
insb
jae
lcall
std
mov
lcall
push
xchg
lds
pop
xchg
mov
stos
mov
into
popf
cmp
repnz
pop
js
shll
jae
loop
pushf
cmp
adc
clc
loope
or
jecxz
sub
sub
ja
nop
cmpsb
adc
and
inc
xchg
pminub
mov
xchg
pop
or
push
mov
sarb
pushf
add
in
mov
ja
scas
rorb
jmp
pop
dec
in
test
ret
loopne
mov
cli
add
cmpb
repz
stc
mov
lods
gs
gs
loope
pop
dec
mov
lret
push
jmp
das
inc
xchg
add
push
cli
xchg
and
xor
cltd
and
in
push
add
les
mov
jle
mov
cli
jbe
inc
inc
test
xor
mov
inc
imul
sbb
pusha
std
and
and
inc
stos
inc
add
movl
xlat
mov
dec
movsb
nop
nop
addl
sbb
call
add
lods
cmp
sub
inc
fcomps
andl
jecxz
das
adcb
out
cmp
xchg
mov
test
jmp
push
jmp
jmp
push
movsb
fistps
adc
adcl
hlt
aas
repz
inc
lea
inc
inc
mov
and
jle
mov
sti
das
cmp
push
or
add
jnp,pn
sbb
fs
js
or
mov
ljmp
inc
jle
push
pop
out
cmp
xor
sbb
lcall
inc
and
xchg
repz
mov
cmp
mov
cs
mov
repz
mov
test
das
js
mov
dec
in
imul
loope
mov
xor
in
lret
loope
xchg
jno
jp
push
aas
dec
jne
mov
fildl
inc
jno
cmp
hlt
sub
rcrb
cltd
or
mov
in
inc
movsb
add
imul
adc
adc
dec
pop
out
xchg
std
fdivl
test
and
jae
mov
movsb
lret
xlat
scas
dec
sbb
and
add
push
cwtl
in
stos
cmp
mov
pusha
mov
or
xor
rcl
loop
or
xor
mov
lahf
sub
or
les
cmpsl
add
outsb
ret
fs
xor
int3
and
ja
fcomi
pop
rclb
xor
lret
outsb
xchg
out
stc
xchg
jl
ja
dec
add
cmp
test
cltd
add
mov
xchg
out
arpl
mov
dec
mov
add
mov
ret
xchg
mov
sbb
inc
jle
aam
pusha
push
lea
and
mov
mov
sbb
mov
jns
call
dec
xor
out
mov
mov
cmp
pop
inc
lock
or
movb
mov
cmp
nop
lret
mov
data16
add
mov
dec
loopne
mov
in
adc
mov
inc
xor
test
aaa
sti
scas
and
sahf
push
sbbb
mov
loopne
jne
jge
call
cmp
and
fs
push
cmp
addr16
jge
test
fdivl
pop
mov
scas
sbb
pop
leave
rcrl
xchg
mov
int3
mov
cmp
inc
subb
cli
xchg
jle
xor
inc
aam
or
jnp
outsb
fs
testb
es
les
out
sahf
jo
and
mov
dec
mov
popf
pusha
xchg
push
adc
fdivrl
rol
ds
in
add
lods
int
dec
adc
cwtl
sti
mov
or
sbb
aaa
lds
pop
fidivl
popa
cmc
mov
loop
and
sbbb
sub
jg
rclb
dec
nop
cmp
clc
xchg
or
test
push
rorb
jae
testl
add
fs
dec
cmp
bnd
imul
fildll
out
xchg
cli
sbb
gs
cmpb
ja
cmp
jnp
gs
movsl
dec
adc
lret
sub
xor
inc
div
clc
cmp
adc
push
pop
adc
mov
int
ss
imul
fs
sub
ret
lods
in
addb
xor
fs
aad
and
loopne
dec
xchg
jmp
mov
lds
jnp
fnclex
outsl
lods
lea
push
push
enter
xor
arpl
sub
outsb
jle
xchg
imul
int
fildl
add
xor
or
js
cmp
xor
push
push
push
int
sub
stc
scas
xorl
cmp
lds
mov
jno
xchg
pop
push
inc
jmpw
imul
push
and
scas
push
stc
push
sbb
inc
addr16
out
mov
mov
mov
inc
int
inc
dec
insb
imul
cld
aam
adc
cmp
lahf
push
sahf
notl
sbb
iret
mov
mov
inc
cmpsl
js
lcall
mov
out
stos
lret
xlat
push
je
xlat
arpl
sbb
mov
sbb
lret
in
enter
cwtl
add
or
inc
xor
mov
mov
in
test
insb
add
pop
test
inc
push
dec
arpl
dec
stc
pop
mov
fsubrl
pusha
fnstsw
aam
inc
pop
add
mov
inc
add
iret
je
in
sbb
mov
sbb
dec
sub
loop
cwtl
cmp
jns
or
xchg
out
mov
lea
or
mov
mov
xor
adc
sbb
sbb
paddusw
sbb
dec
push
jns
pop
inc
sbb
clc
insl
ljmp
arpl
jmp
add
jbe
test
dec
inc
inc
mov
dec
fs
or
insb
xlat
fstpt
jno
rclb
pop
mov
push
or
adc
std
sbb
mov
inc
ret
fcmovnb
xor
jmp
les
les
mov
roll
sub
mov
mov
push
in
xchg
clc
fucomp
adc
adc
aaa
or
add
and
pop
cli
pop
cwtl
cmp
pop
andl
xchg
or
loope
ds
scas
mov
movsb
xchg
clc
data16
jg
mov
inc
addr16
iret
dec
mov
mov
popa
mov
lcall
rol
addr16
out
in
jbe
mov
cli
bound
push
pop
sbb
ret
test
test
jp
dec
mov
pop
jge
out
cmp
imul
cmp
push
insb
xor
pop
or
mov
aam
fildll
movsl
mov
mov
add
fsub
movsb
sbb
ret
push
lods
test
add
jae
cltd
mov
cmpsb
inc
mov
out
xor
or
fiaddl
dec
hlt
push
mov
dec
ss
mov
fistpl
xor
pop
cmc
mov
outsb
icebp
jmp
mov
add
sbb
cmp
leave
ljmp
popf
mov
adc
dec
cmc
mov
or
jnp
inc
xchg
pop
and
aas
stos
inc
pop
or
orb
mov
dec
mov
jecxz
fildl
xor
mov
push
mov
lret
popf
push
lret
pusha
lock
mov
mov
sub
lods
mov
aas
cmp
les
call
inc
pop
push
sbb
adcb
js
fsubr
movb
lcall
mov
cmp
cmp
xchg
jae
pop
bound
incl
jne
mov
xchg
mov
dec
fisttps
jmp
bound
inc
pop
or
sub
popa
mov
and
incl
rcll
cmp
adc
jmp
pusha
in
pop
or
movsl
sahf
fldcw
dec
rcll
std
and
sub
in
adc
cmc
xor
clc
pop
jge
imul
fsts
mov
ss
mov
pop
push
pop
pop
test
push
mov
cld
add
or
sarb
and
pop
dec
dec
hlt
enter
mov
mov
adc
adc
pop
pusha
inc
jb
inc
mov
adc
ljmp
movsl
adc
jg
icebp
aaa
xchg
add
mov
inc
adc
addr16
sahf
imul
push
mov
addl
add
int3
mov
push
push
and
mov
test
jl
insb
out
leave
mov
popf
imul
in
out
sahf
jnp
adc
mov
addr16
int
icebp
fldt
loopne
fnstcw
mov
jge
push
pop
mov
aam
lahf
mov
dec
loop
int3
xchg
jmp
pop
mov
mov
add
cmp
mov
in
aam
aad
aaa
pop
shll
rcll
push
popa
out
jae
cld
lea
xchg
fadds
sub
dec
pop
loopne
out
mov
or
xor
mov
sbb
stos
mov
xor
inc
mov
sbb
out
std
les
shlb
or
sbb
inc
xchg
out
imul
stos
cs
out
dec
out
andb
loope
mov
jmp
movsl
add
js
pop
sbb
ja
xchg
aaa
imul
jbe
push
lret
xor
out
out
je
es
lods
xor
ljmp
imul
loop
lds
fcmovnb
mov
test
insb
scas
test
xor
jnp
and
bound
fnstcw
stos
outsb
jbe
or
mov
xchg
inc
push
and
mov
xchg
xchg
insl
mov
stos
movsb
insl
or
ss
or
enter
imul
push
xchg
cmp
cpuid
mov
push
cld
xchg
add
cs
inc
stc
fwait
rcrb
mov
and
loop
xchg
xor
nop
mov
push
cmp
xlat
sbb
xchg
jnp
cld
pop
clc
mov
mov
add
push
movsb
lock
es
subb
cmpsl
xchg
pushf
in
push
aam
sub
pushf
pop
sbb
out
test
lea
push
xor
scas
dec
sub
cmpsb
sbb
mov
mov
add
and
push
cmp
pushf
mov
lahf
lahf
jo
pusha
mov
icebp
subb
adc
in
jne
cld
cmp
icebp
jae
xor
mov
lock
sub
sti
jb
push
dec
movhps
popf
push
clc
test
into
lahf
les
test
cwtl
jmp
testl
push
sbb
cmc
inc
push
call
or
out
inc
loopne
es
insl
and
out
lds
cmpsl
and
out
jo
push
mov
aam
adc
cs
sbb
xchg
jmp
ljmp
testb
lods
mov
pop
rorb
sbb
in
or
mov
jo
fnstenv
xor
pop
test
mov
jne
mov
jb
je
push
mov
xchg
mov
xlat
sub
adc
cmpsl
push
xchg
jnp
push
int3
pushf
std
mov
lret
or
inc
inc
pop
shr
ss
stos
js
sbb
mov
out
pop
pop
mov
mov
xorl
ljmp
mov
mov
rcrb
int
jbe
in
jl
outsb
out
nop
into
inc
mov
in
sbb
sub
pop
fimuls
jmp
mov
pop
pop
mov
mov
pop
in
jne
out
lds
mov
jnp
inc
jge
enter
sbb
test
xchg
xchg
xchg
jge
lret
dec
jae
add
outsb
ds
fs
xchg
lock
cmpl
stos
int3
bound
and
mov
clc
cmpl
dec
mov
test
fmull
in
cmpl
jmp
xchg
jo
lcall
lcall
jmp
mov
add
push
jbe
jno
mov
adc
adc
daa
fstps
push
nop
movsl
dec
ret
add
cmpsl
lock
mov
adc
cli
out
and
mov
pop
sbb
ret
add
adc
insb
jno
fiadds
mov
pusha
outsb
lods
cmp
pop
sbb
int3
fcom
adc
popa
andl
jecxz
clc
cmc
cmp
pop
lea
movsl
cld
insl
fcomps
sbb
fwait
ja
lahf
mov
xor
lock
sbb
cs
sub
mov
and
jecxz
push
dec
lods
xchg
and
pop
mov
sbb
xor
fbstp
mov
daa
clc
lahf
ret
mov
adc
xchg
stos
or
cwtl
aam
iret
mov
mov
sub
inc
fldt
mov
movl
and
jns
xor
sub
sub
sahf
jge
inc
xchg
insb
out
cmp
fidivs
insl
dec
ds
mov
out
jns
cmp
shl
sbb
push
sbb
push
imul
push
cmpsb
xchg
push
pop
pop
aas
pop
mov
jne
lock
mov
loopne
fcomps
or
fs
insb
sar
pop
inc
jnp
inc
xlat
add
mov
jb
fsubrp
add
repz
and
xchg
and
andps
push
fcoml
fsub
jle
push
insb
add
cmp
pop
mov
testb
shll
xor
data16
mov
add
xchg
pusha
and
push
and
sbb
fcompl
les
loop
mov
pusha
mov
mov
cmp
dec
push
mov
cltd
loop
iret
cmp
das
sbb
and
mov
push
ret
sbb
cs
int
nop
push
xor
jo
cmp
mov
or
divb
jg
fsubl
movsl
shrl
or
inc
sahf
dec
clc
cltd
xor
pop
cmpl
je
lock
lock
arpl
xchg
cwtl
pop
xor
hlt
stos
mov
rcll
push
out
fcmovu
pop
push
sub
adc
ret
mov
cs
lock
mov
sub
mov
adc
mov
test
test
xchg
aam
fcomps
cmpsl
test
mov
cmp
mov
clc
insb
sbb
push
pop
test
xchg
aad
xor
cmp
leave
push
adc
jecxz
adc
dec
movsl
sub
cmpsb
js
orb
push
push
pop
mov
mov
test
sub
dec
call
mov
enter
mov
push
int
mov
sub
out
and
insl
mull
cmp
in
jno
rol
scas
shl
mov
outsb
ljmp
jae
fmull
push
out
in
pop
xchg
sahf
xchg
inc
cli
mov
xor
push
mov
dec
inc
pop
imul
loope
std
pop
cmpsb
int3
leave
cld
fldl
sbb
outsl
pop
jle
dec
mov
cwtl
inc
add
cmp
adc
mov
mov
cmpsb
popf
std
mov
jp
movb
jmp
jl
sbb
sbb
push
fwait
mov
sbb
fucom
xchg
jmp
mov
dec
ljmp
cmpsb
pop
mov
dec
addr16
add
lea
loop
push
daa
mov
pusha
bound
lds
mov
dec
sub
add
xor
or
mov
fnsave
or
or
inc
aam
and
push
adc
mov
repz
test
lds
pop
jmp
js
mov
mov
cld
int
inc
sub
sbb
test
pop
adc
cmpsl
shrl
push
lcall
adc
in
mov
sub
cltd
sub
xchg
and
jbe
adc
pushf
dec
stos
subl
mov
roll
or
xor
out
js
or
imul
in
adc
mov
adc
hlt
or
sbb
loopne
pop
enter
aam
sbb
pop
insl
add
xor
push
hlt
push
imul
jecxz
jnp
mov
fimull
or
in
rorl
pmaxub
lods
pop
push
xor
fistpl
test
sbb
popf
mov
mov
lods
cltd
inc
loope
jecxz
pop
inc
stos
ja
imul
divl
outsb
xchg
cmpb
out
ja
test
mov
dec
sbb
pusha
jnp
inc
jo
add
movsb
mov
notl
add
add
scas
dec
fidivrl
arpl
dec
aad
pop
sbb
adc
or
movsb
pop
mov
call
nop
outsl
sbbl
in
repnz
mov
hlt
xchg
stos
hlt
roll
jl
sbb
mov
mov
pop
mov
push
mov
ret
add
addr16
push
stc
dec
xchg
fcoml
push
xlat
push
in
adcb
mov
iret
cld
les
idivl
js
test
cmp
push
jnp
add
fstpt
idivb
insl
inc
pop
mov
mov
mov
mov
lea
dec
aas
or
dec
xlat
jecxz
mov
lret
subl
pop
andl
mov
in
mov
out
mov
repz
icebp
je,pn
enter
and
repz
cmc
aas
icebp
and
pop
xchg
test
repz
push
sub
mov
jae
enter
mov
daa
mov
ret
lret
inc
pop
nop
dec
xchg
icebp
inc
lock
sbb
cltd
adc
fwait
std
mov
daa
jne
out
movsb
outsl
insl
xchg
mov
add
mov
mov
xchg
out
mov
and
aas
popa
aaa
cld
pop
mov
arpl
pop
cmc
rcrl
push
addr16
mov
sar
and
add
sub
fldl
mov
loope
movsb
into
xor
pop
sbb
shlb
jbe
and
sbb
popf
adc
adc
mov
inc
mov
mov
mov
cmpsl
inc
jb
sub
test
fistps
add
lods
rolb
xor
mov
xor
mov
inc
xchg
mov
jecxz
sbb
sub
in
testb
or
loope
mov
dec
stc
mov
and
mov
popa
stos
aaa
fsubrs
mov
ja
fimull
outsl
pop
scas
and
out
fdivp
mov
cmpsb
xchg
push
lea
push
xchg
cmpsl
test
aam
xchg
test
pop
mov
jne
shrd
jae
and
outsb
scas
imul
test
xchg
inc
xor
insl
ds
pop
addr16
adc
cmp
stos
jb
shlb
outsb
mov
cmp
aam
ja
rcll
cmpsb
push
out
in
adc
push
add
mov
loopne
add
aas
xor
in
out
ds
icebp
adc
sub
ret
stos
mov
push
pop
ret
sub
sahf
iret
enter
hlt
movsb
inc
xchg
test
mov
dec
int3
and
gs
inc
hlt
lods
and
fxch
mov
cmp
pop
jns
fcomip
adc
or
and
jns
movsb
cli
adc
inc
ret
jl
add
inc
push
and
rclb
adc
xchg
pop
xor
out
xchg
aaa
dec
sub
mov
sub
push
pop
push
iret
xchg
in
cmpsl
sub
adc
or
outsb
sbb
dec
xchg
mov
push
popf
rorb
xchg
aas
popf
xchg
jle
xchg
in
mov
and
arpl
pop
loope
add
jo
push
dec
stos
cs
negl
pop
les
dec
ja
lea
fidivrs
gs
ljmp
inc
popf
xlat
emms
push
icebp
lds
jmp
push
mov
sub
sub
mov
pop
or
or
adc
jae
sub
movsb
lret
dec
adc
scas
inc
enter
jbe
scas
ds
jns
int
xor
call
or
rcrl
xchg
jbe
sbb
pop
stos
fadds
push
mov
pop
xchg
mov
jo
xchg
and
push
addb
xchg
negb
or
xor
xchg
mov
pop
jo
cmp
jnp
jo
dec
stc
lahf
xor
add
mov
shr
fldenv
xchg
push
int3
test
test
push
xor
mov
pushf
add
aaa
mov
int
fwait
xor
push
push
shrl
pop
call
outsl
and
imul
roll
add
jle
mov
mov
sub
mov
scas
ja
out
repz
mov
push
jge
icebp
sub
addb
cmp
or
movsb
pop
sbb
inc
jmp
bound
ljmp
inc
std
push
adc
pusha
cmp
in
in
outsl
dec
movsb
jmp
and
int3
cmc
xor
add
stos
xlat
or
test
jg
lds
sahf
imul
mov
adcl
test
loop
lahf
ficoml
jmp
jnp
push
mov
clc
dec
ret
cmp
aaa
and
mov
xor
sbb
lahf
xchg
outsb
xor
pop
and
aaa
rcrl
repnz
xlat
sub
cld
inc
push
and
cmp
jae
les
lahf
outsb
js
mov
lahf
push
add
add
jb
test
push
push
and
fwait
les
leave
icebp
sub
les
ret
inc
or
popa
lods
push
jl
mov
aad
xchg
outsb
imul
aad
push
mov
stos
mov
mov
lea
lahf
cmpsl
aam
mov
pop
adc
in
xchg
lods
jae
sar
ret
mov
fnstenv
push
incl
xor
ss
mov
or
dec
mov
or
lea
stos
mov
outsl
sti
mov
aad
adc
adc
outsl
shll
mov
pop
dec
es
ret
inc
inc
in
dec
inc
lcall
and
sub
sub
lret
inc
scas
xchg
data16
xchg
fdivrs
pop
popa
mov
mov
in
mov
jg
jmp
ds
repz
ja
rcrl
mov
daa
mov
ficoml
in
arpl
mov
dec
clc
rorb
stc
in
fldenv
imul
jl
push
xor
out
dec
inc
movsb
jo
jne
popf
rcrl
pop
or
dec
xor
fcoml
out
data16
or
push
imul
xchg
outsl
stos
mov
jo
xor
mov
push
sbb
rol
xchg
scas
or
xchg
push
movsb
arpl
mov
dec
and
in
out
aam
mov
repz
mov
imul
mov
fs
enter
lret
mov
push
sub
ljmp
sti
dec
adc
sahf
inc
mov
cmp
dec
dec
and
push
fisubrs
jno
dec
out
cmp
leave
jbe
mov
mov
ret
sbb
cmp
aad
jb
push
aaa
lock
push
cmpsb
jmp
sarl
sbb
clc
ja
cmp
push
cwtl
or
movsb
sbb
movsb
jbe
xor
or
sub
jo
inc
mov
inc
mov
arpl
loop
ret
pop
push
icebp
test
call
scas
test
push
push
add
insl
test
and
cmp
loop
cmp
xchg
and
loope
or
cmp
test
es
cmp
cld
and
jbe
sti
fwait
xlat
fistpll
aas
popf
sbb
mov
ljmp
and
testb
mov
mov
jne
insl
pop
in
movsl
test
or
scas
and
gs
sub
mov
or
mov
lods
pop
lock
jecxz
pop
nop
jmp
sahf
cwtl
inc
enter
push
decl
push
and
and
jecxz
fst
pop
jg
sbb
xor
arpl
pop
call
xor
add
xlat
cli
jns
sahf
js
clc
lds
loop,pt
mov
pop
fnstcw
pop
cli
xorl
jae
mov
adc
out
jno
mov
xchg
inc
dec
jp
push
fcos
and
jbe
std
mov
mov
movsb
xchg
jge
push
stos
pop
mov
scas
idivl
rcll
mov
pop
insl
in
addr16
fcmovnu
testb
lock
aas
mov
adc
ja
stos
imul
in
cmp
sub
adc
jo
cltd
popf
es
dec
popf
jp
shlb
lods
aam
dec
test
add
rcl
or
xchg
xor
into
cmp
aas
xor
mov
out
jnp
mov
xor
rol
and
pop
sbb
fdivrl
add
xchg
xorb
mov
cmpl
popa
push
js
int3
xchg
imul
rorl
leave
daa
lahf
jl
inc
in
or
cmp
leave
pop
jmp
mov
jo
flds
inc
std
mov
aaa
lods
sbb
bound
rclb
push
enter
push
xchg
jo
addr16
or
cmp
push
incl
push
fistps
outsb
or
outsl
add
lea
jno
push
and
inc
stos
lods
fsts
inc
mov
add
sahf
push
cmpsb
orl
pop
fadds
pop
xor
or
icebp
leave
mov
dec
add
inc
mov
xchg
stos
shl
jge
sti
test
adc
jae
shll
shr
cmp
mov
shll
fxch
and
mov
call
mov
and
inc
movsl
test
inc
mov
push
je
stos
in
sub
mov
lret
mov
jle
mov
jmp
test
or
dec
cld
mov
movsl
xchg
cld
pop
fbstp
rclb
fidivl
and
fistpl
add
pop
or
out
sbb
jbe
and
sub
push
push
push
mov
or
imul
insl
jmp
cltd
iret
sarb
dec
cmp
lret
popf
mov
incb
mov
xchg
jl
adc
iret
dec
xor
sbb
and
movsb
mov
cmp
movsb
and
adc
or
mov
xor
pop
jno
and
adc
mov
call
test
jo
jmp
in
add
cld
cmpsl
or
xor
jg
fsubl
pusha
popa
inc
jb
xor
jae
jp
scas
pop
test
lods
andl
push
iret
das
cmp
mov
or
shll
xlat
mov
js
jmp
orl
mov
insb
push
xchg
fwait
scas
and
dec
cmp
mov
and
mov
cmpsb
cltd
inc
sbb
or
jns
mov
clc
call
xor
push
push
mov
add
push
outsl
loop
push
xor
lock
cmpsb
aaa
scas
test
push
popa
mov
xchg
in
adc
pushf
adc
je
fbld
push
xchg
xchg
inc
adc
pop
je
adc
jne
adc
xor
leave
sub
pop
jne
mov
adc
arpl
rclb
cmp
in
add
es
ljmp
movhps
mov
test
pop
popa
inc
add
jno
addr16
dec
pusha
adc
pop
aaa
jo
in
inc
add
dec
pop
in
mov
movsb
and
lea
add
mov
neg
adc
aad
lds
sub
push
test
push
and
mov
arpl
repz
xchg
inc
mov
inc
std
fsubrl
daa
jl
pusha
adc
in
popf
js
in
mov
or
mov
enter
or
and
sub
shr
pushf
outsl
push
loope
int3
pop
and
add
lods
cld
imul
aam
stc
scas
out
into
xchg
les
mov
cld
jle
push
add
clc
imul
inc
jo
shll
cmp
in
test
jns
add
enter
push
and
test
shrl
sub
andb
sbb
and
xor
cld
cmp
movsl
das
stc
sar
push
mull
bound
pop
shll
imul
xchg
gs
or
dec
fdivrs
mov
pop
xlat
in
pop
lea
dec
outsb
sbb
cs
push
jg
arpl
jb
shl
lods
repnz
adc
sub
jmp
rcrl
xor
addr16
fistpl
insl
jl
jae
pusha
and
negl
ja
cs
lcall
addl
dec
ss
cmp
lcall
push
iret
clc
and
cmp
mov
or
insb
add
mov
xchg
jmp
insl
in
fs
jge
rclb
shll
xchg
aad
mov
lahf
add
cmp
fisttpll
jo
and
mov
cmp
xchg
aaa
pop
gs
jmp
in
popf
push
stc
mov
cmp
cwtl
out
inc
sbb
sbb
cltd
scas
and
fimull
inc
xchg
mov
dec
push
push
jns
inc
mov
out
js
movsl
push
das
leave
lret
das
scas
loopne
icebp
pop
adc
pop
xor
pop
scas
mov
xchg
test
inc
ds
je
incl
push
loopne
fsubrs
orb
adc
push
in
jmp
sbb
inc
mov
inc
lock
pop
pop
push
jmp
fidivs
lods
jl
popf
adc
insl
loopne
out
ljmp
sbbb
mov
cmp
imul
mov
inc
mov
adc
ss
pop
inc
pop
mov
sub
stc
push
and
in
inc
fsubrl
and
push
in
fs
lock
outsl
jle
call
adc
push
out
test
xchg
mov
cmpb
andb
xchg
les
jnp
xchg
fildll
dec
dec
test
jo
pop
into
sahf
shlb
mov
loopw
ljmp
mov
lock
popa
in
lret
pop
mov
sub
not
pop
or
adc
ljmp
pushl
sbb
xor
mov
inc
dec
sahf
test
mov
add
dec
jbe
into
out
mov
sbb
and
lds
mov
insb
lds
inc
or
jecxz
inc
xchg
mov
jge
test
xor
gs
mov
cmp
cs
out
pop
and
jle
cltd
mov
pop
xchg
movsl
push
pop
icebp
jb
fstp
sar
in
inc
outsb
mov
adc
addr16
pop
cld
adc
rorb
adc
or
orl
dec
ljmp
add
adc
xchg
mov
or
cmc
leave
fildll
popf
mov
ret
icebp
xor
aas
lret
jns
mov
push
sbbl
sbbb
jmp
dec
es
out
jmp
inc
lea
sbb
sbb
lods
int3
jno
cld
dec
xchg
xchg
cmp
out
stos
cs
scas
pop
cmp
and
cli
sbb
adc
sub
roll
mov
mov
imul
addr16
and
lcall
pavgw
push
or
and
jge
pop
out
or
mov
aas
mov
std
test
inc
das
leave
add
outsl
jbe
inc
and
cmp
dec
pop
fstpl
stc
out
push
enter
jge
mov
xchg
sbb
insb
and
push
lcall
in
xchg
sbb
add
mov
push
ret
jne
add
fnsave
fnsave
fsubp
add
shl
dec
insb
mov
inc
test
xor
fwait
insb
iret
shrl
addr16
stc
pop
int3
cmp
pop
out
orb
or
fmull
enter
dec
leave
cwtl
out
adc
lahf
jns
mov
lock
mov
mov
xchg
dec
jnp
xorl
out
or
stc
addr16
dec
outsl
or
xorb
ja
pop
inc
add
imul
dec
inc
or
mov
daa
sahf
jnp
cmpsl
mov
sarl
xor
xor
iret
push
pop
cmp
ljmp
cmp
outsb
dec
xchg
lods
pushf
rcrb
xchg
and
js
xor
imul
ja
rcrl
mov
les
add
cmp
inc
and
xchg
cmp
negl
fmuls
lcall
ret
inc
pop
aaa
fisttps
idivl
stc
push
icebp
ja
fcmovne
inc
cmp
jnp
jg
adc
dec
and
sete
inc
ss
cli
mov
jmp
daa
xor
hlt
push
mov
mov
jns
jge
xor
xor
or
sub
addr16
cmpsl
mov
mov
scas
mov
test
push
test
pop
ss
sbb
in
and
fstpl
cmpsb
je
std
andl
loopne
lahf
inc
jae
jp
and
mov
dec
push
loopne
pop
xchg
scas
ds
inc
pushf
data16
std
sbb
fstl
add
outsb
out
jb
scas
sbb
in
out
mov
popf
or
jns
loopne
mov
mov
or
out
xor
rorb
lahf
cmpl
dec
xchg
xor
cmc
mov
add
mov
and
inc
nop
or
mov
and
push
ljmp
mov
mul
and
fdivrs
mov
dec
subl
mov
xchg
rolb
cmp
movsl
pop
sub
rcl
ljmp
xlat
outsb
aam
xchg
inc
call
and
pop
or
push
mov
push
ss
notb
jmp
jb
pop
add
jbe
adc
mov
add
aaa
pop
push
mov
loopne
mov
sub
jns
ud1
scas
in
lea
mov
ficoml
mov
pusha
fisubs
mov
add
inc
mov
add
pop
push
data16
adc
out
imul
and
pop
ljmp
test
rorl
ds
orb
mov
fisubl
nop
bound
shll
fisubrs
outsb
jbe
in
jae
lods
daa
rep
xchg
push
push
push
pop
xchg
movsb
fstpt
dec
je
pop
mov
in
repz
xchg
cli
sub
pop
mov
sarb
cld
loop
cmp
push
inc
xor
ror
pop
or
xchg
in
pop
bound
mov
mov
mov
push
lahf
loop
hlt
in
mov
in
aas
pop
pop
mov
fwait
jecxz
pop
pop
or
inc
mov
mov
mov
cwtl
cmp
mov
mov
enter
mov
int
add
popa
sub
xchg
bound
jecxz
sbb
inc
pop
cwtl
aad
dec
data16
test
mov
mov
mov
mov
je
repz
inc
push
je
in
and
call
popf
pop
sbb
mov
in
int3
insb
int3
into
push
rol
pop
sbb
dec
movsb
mov
mov
xchg
data16
fstl
xchg
push
jbe
dec
mov
cmc
pusha
push
xchg
xchg
sub
adc
lahf
icebp
mov
dec
jnp
insl
and
xchg
sbb
jmp
sub
mov
and
mov
test
adc
xorb
mov
jne
repz
orl
test
nop
pop
sub
popa
inc
scas
jge
repz
inc
test
rolb
fisubl
push
pop
aas
adcl
aam
outsb
adc
test
dec
or
out
xchg
lods
pushl
call
in
add
js
pop
or
xchg
dec
push
mov
gs
jmp
rorb
jb
xchg
mov
sbb
repz
cmpsb
js
push
rcr
push
xor
sbb
lret
gs
add
mov
sbb
bound
out
lret
cli
loop
andnps
cwtl
in
roll
lret
and
paddsb
lock
sub
div
mov
adc
cs
stos
adc
cmp
cmp
mov
cmpsb
aad
in
jecxz
aaa
stos
sub
mov
cmp
movsl
mov
stc
leave
ds
pop
in
into
jmp
aas
xor
fcoms
add
or
push
mov
cwtl
shufps
and
outsl
mov
addl
call
cmp
pushl
mov
movsl
mov
fistpl
xor
idivb
leave
arpl
dec
popf
cmp
pusha
ror
dec
testb
push
es
lods
xlat
and
arpl
pop
loope
push
es
cmpsb
adc
lahf
dec
mov
loopne
addl
jnp
cmpsb
sbb
mov
pop
movsl
and
aas
fdivl
cmp
lret
xchg
fidivrs
decl
pop
cmp
push
lods
popf
imul
adc
dec
jns
ret
push
mov
hlt
ret
pushf
xor
cmpsb
out
pop
mov
and
ficompl
imul
mov
mov
int
subl
andl
xchg
test
cmp
inc
sbb
lret
mov
lret
push
adc
pop
das
je
ret
sbb
test
mov
loope
dec
in
cmp
test
gs
inc
lea
add
mov
push
dec
test
jle
push
xorl
lods
mov
lret
orl
add
jo
mov
and
jno
pusha
mov
mov
out
mov
mov
lods
xchg
dec
rcrl
pusha
dec
arpl
cli
add
dec
test
adc
cmp
outsb
mov
push
cmp
leave
add
decb
and
pop
stos
pop
lea
cmpsb
in
inc
mov
pusha
pop
inc
dec
inc
sbb
mov
push
add
arpl
sub
fstpt
notb
or
test
stos
pop
ljmp
lods
imul
sarl
sub
xor
aad
lret
xchg
scas
std
leave
add
jae
jb
in
sbb
ss
movsb
and
or
imul
in
ret
addr16
mov
fcmovnbe
clc
pushf
jnp
mov
mov
pop
pop
sub
aas
iretw
in
call
mull
inc
mov
or
idivl
sbb
test
rcr
sbb
sub
dec
in
mov
ficoms
sbb
mov
and
dec
cmp
inc
push
rcrb
xchg
xchg
imul
mov
out
stc
mov
call
call
mov
shlb
jae
popa
push
pop
popf
and
or
and
leave
leave
adcl
xor
and
sub
outsl
push
roll
sti
dec
dec
hlt
pop
push
push
pushf
je
mov
dec
sti
jbe
rclb
mov
mov
ja
pop
dec
jecxz
or
xchg
mov
jb
or
mov
push
out
xor
les
ds
aas
push
mov
cmp
inc
mov
sub
call
dec
pop
popa
add
out
lods
clc
xchg
or
int3
inc
popf
jo
adc
in
in
push
ljmp
scas
jecxz
fs
rclb
push
lcall
gs
cmc
insl
add
or
sbb
mov
add
cmp
push
mov
mov
addl
lods
xchg
cli
lret
mov
xchg
lea
popf
andb
cmp
jno
cmp
cmp
cltd
xchg
ds
stos
out
mov
jno
test
sub
in
dec
cmp
test
sub
cltd
cmpb
in
mov
fmulp
clc
ja
dec
push
mov
or
loopne
or
aad
lret
daa
or
dec
fxch
stos
into
xor
mov
add
add
data16
stos
cmpsl
jg
xchg
mov
fisubs
pop
mov
push
xchg
repnz
mov
add
ds
scas
jnp
pop
mov
int3
push
out
test
and
test
imul
ds
pop
push
inc
and
ret
sub
dec
inc
mov
xlat
mov
lcall
sbb
or
fists
hlt
sbb
mov
gs
jg
jbe
jmp
xchg
lahf
js
fs
lods
mov
andl
adc
je
xor
sub
out
out
mov
xchg
ja
jmp
dec
testb
dec
loope
js
andl
push
nop
push
sbb
and
cli
insb
call
inc
mov
cmpsb
dec
ds
iret
push
cmc
addb
jnp
fdivrs
cli
mov
jb
cmp
sbb
ja
inc
or
pop
mov
jmp
pop
nop
jo
in
mov
mov
push
jp
testb
loope
test
bound
lods
mov
or
das
mov
jecxz
and
cltd
mov
rorb
mov
loopne
lcall
movsb
xor
fsubp
jbe
cmc
pushf
push
xchg
and
sbb
imul
or
jmp
repz
mov
jle
add
cltd
xchg
jnp
add
or
mov
mov
fsubr
mov
mov
xlat
mov
or
arpl
movsb
addb
pushf
dec
pop
testl
mov
cs
fcompl
adc
sub
aaa
js
ficoms
lds
call
imul
imul
in
cmp
pop
sbb
std
shlb
lods
adc
out
loopne
dec
adc
idiv
sbb
fisttpll
mov
es
cld
adc
mov
aas
push
data16
xor
sub
mov
fldl
insl
leave
xchg
cwtl
add
dec
mov
dec
daa
mov
and
xchg
mov
in
push
xor
add
dec
outsb
xchg
mov
shr
out
clts
pop
out
testl
lahf
jg
shr
ret
fstps
arpl
mov
stc
ret
sub
pop
mov
popl
adc
xadd
lods
cld
adc
adc
xor
cld
movsb
loop
shrb
dec
addr16
repnz
mul
loope
ja
xor
fiaddl
pop
xlat
xor
pop
test
lods
jmp
sub
adc
sbb
out
lods
je
cmc
adc
popf
div
mov
mov
jp
and
dec
dec
pushf
inc
bnd
mov
mov
leave
lods
xor
lcall
cmc
iret
adc
jo
sti
mov
or
ffree
sarl
shrb
mov
xor
adc
sbb
cmpsb
cmc
nop
fs
shr
sub
lret
mov
push
inc
or
pushf
inc
jl
ret
sbb
lods
jb
inc
adc
loope
loopne
lret
std
rcll
arpl
mov
xchg
fsubl
pop
roll
mov
mov
sub
popa
sbb
scas
stc
cmp
shl
ror
and
jmp
mov
adc
push
push
mov
mov
jle
rol
jl
dec
pop
fnstsw
repnz
adc
fdivrl
and
icebp
pop
clc
inc
mov
pop
frstor
mov
mov
inc
mov
jg
mov
inc
jne
sbb
lds
pop
inc
dec
popf
out
daa
insb
loopne
jae
sub
pop
sbb
ror
pop
divb
shr
aam
adc
push
aam
or
mov
sub
mov
inc
mov
xchg
lcall
scas
ljmp
lahf
scas
fisubl
std
jo
sub
and
jg
aas
and
cltd
adc
fxch
dec
gs
icebp
es
mov
push
mov
mov
pop
mov
xchg
add
or
jge
xorb
sub
push
inc
movsl
jmp
cld
rorl
jle
xor
repz
mov
pop
vmovntpd
adc
xchg
or
and
or
out
ljmp
pop
fildl
inc
push
jno
add
arpl
imul
mov
rcll
ljmp
mov
addr16
adc
jecxz
cmpsb
stc
mov
clc
rorb
mov
mov
inc
lods
repnz
scas
popf
gs
fistpll
movsb
xor
sbb
sub
mov
lods
add
push
pop
dec
int
out
add
dec
adc
sub
stc
pushl
mov
mov
aad
xor
mov
add
lret
cmp
div
xchg
arpl
xor
pop
sbb
lea
sarl
push
filds
mov
jmp
push
xlat
out
cmp
dec
out
xchg
push
jg
mov
lcall
or
or
iret
or
mov
xchg
test
js
push
pop
cmp
sbb
push
sbb
fwait
ds
gs
orl
jp
cli
inc
jb
call
je
adc
sub
mov
hlt
lcall
jnp
sbb
out
stos
movsb
fwait
int
cmp
mov
inc
cmpl
pop
adc
movl
sbbb
xor
push
jae
faddl
mov
sti
shrb
sub
shrl
test
cmpsl
cmp
shlb
out
je
test
orb
mov
cmpb
rcll
lds
into
lock
dec
fistps
shrl
pop
xor
les
and
imul
repnz
test
xor
call
push
push
dec
ja
fs
or
mov
les
mov
xchg
dec
push
shlb
loope
sub
sub
cmp
fdivp
aam
push
push
es
je
in
pusha
or
adc
or
jge
jp
mov
mov
add
xor
adc
rolb
push
inc
out
outsb
ja
mov
ret
inc
dec
cmp
inc
stc
mov
sub
inc
hlt
fistps
mov
xchg
jne
mov
in
shlb
xchg
or
les
xchg
cltd
push
js
mov
sti
mov
mov
dec
rolb
pop
fs
dec
xchg
fidivrs
mov
and
lcall
cld
cli
or
andb
push
in
hlt
xor
outsb
movsb
mov
fst
ret
cmp
mov
jl
pop
lods
xchg
stos
js
or
lahf
ja
sub
rorl
in
push
inc
inc
cmp
nop
fisubs
fucom
adc
in
adc
dec
mov
aas
lret
pop
icebp
xor
push
icebp
mov
mov
into
int3
cld
add
xlat
jb
mov
stos
lods
add
test
insl
inc
icebp
mov
xor
adc
stc
or
hlt
in
xchg
jae
negb
stos
adc
fwait
push
lods
push
out
adcl
mov
adc
fmul
mov
and
iret
cmpsl
xor
and
pusha
iret
mov
mov
jnp
js
lret
mov
jg
jge
fildll
push
ffreep
push
xor
test
or
inc
aam
ror
mov
pop
into
lcall
outsl
adcb
stos
add
gs
pop
sub
sbbl
test
mov
mov
loop
out
cld
insl
mov
xchg
lcall
cmpb
or
jmp
testb
sub
bound
pop
add
bound
cmc
or
add
xor
xchg
mov
ljmp
pushf
xlat
sub
jmp
sbb
inc
mov
fisubrl
insl
xor
insb
adc
clc
sub
inc
out
dec
fnstsw
add
push
inc
imul
sub
lods
pusha
xchg
dec
mov
dec
push
out
cs
push
jmp
fiadds
dec
and
mov
loope
dec
test
xchg
js
add
cmovae
rcr
dec
push
add
fcmovnb
adc
pop
sub
cmp
mov
mov
mov
icebp
push
js
outsb
lahf
lea
dec
push
adc
cmpsb
rcrb
jg
shrb
shl
jmp
out
test
fisubl
inc
mov
fprem1
xlat
sysenter
stc
aas
push
jmp
xor
sub
or
or
sbb
or
lods
push
inc
xchg
pop
pusha
unpckhps
jnp
idivb
sbb
dec
sbb
out
jb
aam
das
mov
nop
repz
stos
stos
sub
dec
and
adc
jbe
mov
mov
push
mov
addr16
js
cmpsl
test
sbb
call
jne
ds
enter
loopne
scas
add
loop
repz
std
add
lcall
or
orl
dec
lock
jbe
mov
gs
insl
stc
xchg
xchg
mov
inc
mov
xor
pop
int3
shll
and
aam
and
shlb
and
adc
mov
test
lcall
cmpsl
mov
adc
add
mov
xchg
mov
popa
add
mov
push
jb
rolb
sub
lods
add
scas
cmp
int
int
push
pop
pusha
and
pop
jecxz
dec
imul
xor
pop
mov
add
jbe
and
outsl
insb
or
add
cmp
mov
push
lods
or
sub
aam
fisubrl
subb
lahf
and
sub
out
sbb
enter
pop
dec
sub
dec
int3
insb
mov
hlt
aas
mov
and
decb
cmp
cld
cmpl
inc
mov
std
fnclex
gs
inc
jo
dec
add
jp
push
loopne
inc
xor
push
add
rorb
js
mov
push
fsubrl
sbb
into
or
das
insl
mov
sub
sub
das
jns
aas
popa
test
lahf
js
call
ljmp
in
clc
lret
lea
dec
mov
xchg
add
sub
out
outsb
repz
sub
mov
cmpb
cmp
push
in
lds
loop
push
push
add
loopne
xchg
mov
pusha
inc
pop
mov
out
or
add
adc
jo
xchg
add
test
je
push
and
mov
cwtl
leave
sarb
fxch
imul
inc
cmp
mov
fstpl
lcall
pushf
call
lcall
inc
mov
pop
inc
add
dec
sub
outsb
inc
sub
popa
pop
arpl
test
das
loope
mov
rcrb
mov
jae
mov
iret
xchg
leave
loop
int
cmp
mov
add
jae
or
pop
cmc
mov
ss
movsl
out
lret
ljmp
stos
fcmovnb
je
or
jecxz
cmp
outsb
pop
sti
fwait
pop
dec
jecxz
sar
push
cmpsl
xchg
sbb
ret
pop
cmp
negl
iretw
icebp
push
xchg
bound
fdivs
testb
mov
adc
pop
fiaddl
add
push
dec
dec
dec
pop
pop
mov
mov
cmc
mov
mov
or
repz
es
mov
sti
jg
clc
mov
clc
lock
lret
push
pop
es
adc
fcomi
cmpsl
loope
mov
ret
pop
sub
adc
push
aad
or
and
clc
das
xor
sbb
cmp
iret
mov
dec
sbb
push
cmp
cmc
lds
xor
into
pop
sub
or
xor
sub
xor
pop
push
cmpl
in
hlt
adc
arpl
pop
jo
xlat
mov
pop
repnz
add
movsb
pop
mov
xchg
mov
movsb
jns
pushf
imul
pop
or
add
or
jecxz
ds
jmp
mov
xor
push
dec
es
fidivs
pushf
mov
jecxz
jg
js
or
xchg
loope
ror
js
mov
mov
insl
aam
test
cmp
inc
fwait
in
and
data16
cmp
rcr
aaa
jae
daa
sub
mov
aaa
push
xchg
lahf
lahf
out
repnz
jle
fidivl
shl
jp
mov
stc
mul
lret
pop
push
cmc
shlb
pop
ss
int
dec
xchg
push
out
adc
jo
push
movsb
pop
fldenv
sbbb
rclb
popf
jbe
pop
inc
xchg
mov
bswap
cmp
sub
mov
inc
ret
divb
popf
mov
stos
jmp
adc
roll
xchg
bound
ss
or
repz
xor
clc
es
pop
sub
dec
and
pop
xchg
add
push
mov
pop
mov
pop
pop
and
inc
pop
repz
mov
in
push
and
xor
mov
inc
jb
sbb
cmp
jg
out
pop
mov
adc
dec
jge
dec
addr16
jo
and
in
daa
cmp
stos
sub
mov
push
addr16
fcmovne
stc
in
mov
push
jmp
out
test
pushl
int
je
push
rcrb
pop
and
dec
insl
dec
mov
inc
cltd
in
add
sbb
add
and
call
sub
jns
mov
cmpsl
jg
xchg
gs
add
sbb
cli
xchg
popf
push
clc
sbb
inc
mov
in
mov
pop
fiaddl
xor
mov
xchg
and
shlb
lea
push
jnp
push
hlt
sbb
inc
jnp
imulb
pop
or
pop
push
rolb
xchg
fwait
imul
xchg
pop
mov
jae
dec
push
jle
lock
cld
enter
jb
arpl
cmp
fsubr
xchg
rclb
cmp
push
add
adc
rcrl
add
ljmp
mov
sbb
es
xchg
and
dec
inc
jne
mov
andb
pop
mov
nop
mov
xchg
popa
adc
mov
iret
out
lret
jno
jp
out
pop
das
rcll
mov
pop
xlat
movsl
push
lods
and
aam
pop
mov
ja
add
sub
ljmp
cli
xchg
mov
jp
lret
adc
fnsave
lock
test
stos
inc
lods
jl
mov
mov
scas
push
xor
sub
push
lea
loop
push
mov
mov
pop
ja
inc
test
and
or
jno
gs
sub
mov
lds
aad
fldl
adc
ds
or
pop
mov
cmp
cmp
sbb
fwait
ljmp
in
pop
sbb
or
sar
jge
sub
lods
mov
sbb
sub
je
sub
pop
mov
mov
mov
sbb
out
fisubl
cmpsb
dec
test
in
xchg
lock
jle
mov
jle
xor
in
adc
or
push
les
into
mov
pop
push
out
std
inc
imul
aad
repz
and
xor
movsb
dec
rol
xor
xlat
sbb
cmc
add
stc
adc
push
sahf
mov
fdivrs
mov
fs
or
mov
push
andl
and
mov
add
and
rolb
xchg
sub
pop
hlt
xor
sbb
outsb
es
pop
mov
sbb
sarl
mov
loope
inc
mov
mov
dec
inc
xlat
fcoms
lret
movl
mov
jae
mov
push
adc
xor
cli
aas
adc
sbb
push
pop
rorb
dec
xor
mov
sub
test
fstpt
xor
jmp
rol
add
int3
or
lahf
mov
pop
rcrb
pop
dec
loopne
push
arpl
shr
inc
cmpsl
jns
sub
rol
cmp
dec
pop
scas
push
sub
adc
pop
inc
sub
cmp
repz
xlat
stc
mov
in
popf
mov
sub
lea
mov
jmp
out
jb
repz
mov
popa
dec
lods
dec
xchg
out
xchg
xchg
sub
addr16
inc
and
insb
mov
in
imul
pop
fists
das
lock
and
cmp
mov
mov
mov
pop
hlt
mov
cmovbe
sub
cmc
mov
lds
and
lret
xchg
and
sub
ljmp
xlat
sbb
jp
mov
jnp
jmp
lods
jmp
push
stos
ds
clc
subb
mov
call
or
add
pop
cld
scas
std
jmp
in
and
popa
push
push
fisttpl
adc
xchg
cs
mov
jne
mov
pop
xorl
aam
mov
jo
outsl
xor
adc
mov
sbb
xorl
cli
scas
cli
jmp
mov
fdivs
bnd
scas
or
cmc
sbb
mov
dec
out
aas
push
mov
gs
mov
jg
nop
cmp
add
dec
dec
fs
push
sti
jb
pushf
ss
shll
stc
cmp
mov
jmp
sub
jl
incb
push
push
mov
loope
sahf
xchg
dec
mov
ljmp
iret
ja
or
in
inc
lock
icebp
and
adcb
inc
mov
outsb
and
and
lock
adc
divl
test
sbb
ss
dec
loop
addl
out
xor
push
hlt
in
mov
pop
sbb
mov
add
fisubl
loopne
mov
inc
scas
add
lret
mov
mov
pop
sbb
bt
jmp
jle
jno
jns
and
lds
notb
frstor
push
leave
ret
or
cmpsb
daa
xor
repnz
xlat
pop
fs
or
sub
subb
cmp
data16
xchg
or
in
lret
xlat
xor
jle
pop
mov
lret
lods
sub
or
cmpl
sub
dec
js
or
cmp
add
movsb
push
test
and
decb
mov
pop
fs
dec
adc
push
or
sub
adc
jbe
movsl
push
testb
lds
jbe
aas
add
mov
xor
dec
aas
pop
mov
push
cmpsl
cltd
repnz
out
or
sub
and
push
xor
pop
add
fbstp
dec
lods
inc
xchg
ds
addr16
pop
in
xor
sahf
push
add
sbb
int3
nop
test
dec
cmp
add
aad
or
jno
sbbl
scas
sbb
and
fdivrl
in
cmp
cmp
add
mov
out
pop
push
pop
push
xor
popf
dec
jns
adc
xchg
and
sbb
ficompl
int
rcrb
sub
xor
lods
jecxz
mov
jne
dec
les
pop
outsl
xchg
xchg
icebp
lods
cli
ss
insl
cmpsl
sub
jo
lds
push
xlat
push
mov
pop
test
push
or
cli
or
sbb
aad
out
dec
stos
mov
and
mov
xchg
fcoml
rcrl
test
or
mov
xor
in
adc
ljmp
jbe
jne
xor
or
pusha
mov
lea
rclb
out
jb
mov
mov
mov
movsb
mov
fisubrs
imul
pop
mov
aas
adc
add
nop
mov
and
and
xchg
in
push
into
adc
xchg
cmp
outsb
stos
cmpxchg
data16
div
lods
stc
ljmp
pop
cmp
or
mov
es
subb
pop
jp
stc
ljmp
loope
dec
sbb
jne
xor
icebp
adcl
bound
pop
cmp
cmpsb
pusha
outsb
das
aas
add
jl
push
popf
dec
inc
data16
ret
xchg
addr16
dec
inc
jno
cmc
pusha
clc
mov
mov
icebp
dec
cmp
scas
into
jnp
das
lea
add
outsb
xor
ret
xchg
dec
insb
icebp
cmp
movsb
inc
mov
mov
fiadds
pop
jmp
xchg
mov
pusha
dec
or
aam
mov
into
outsl
mov
stos
or
dec
rcl
popf
jecxz
fmull
xchg
cmpsl
cltd
gs
movl
les
aad
inc
stos
outsl
mov
mov
jg
push
mov
fmull
call
fsubrl
mov
mov
in
mov
inc
stc
adc
mov
popf
movsl
loope,pn
inc
gs
dec
lock
or
cwtl
insl
or
movsb
push
fsubp
mov
lods
addr16
daa
xchg
xor
or
insb
pop
mov
lea
mov
jl
jg
lds
mov
lea
mov
mov
xor
dec
push
scas
xor
pop
adc
cmp
rol
lock
ss
sbb
setge
fiaddl
lret
pop
push
fwait
outsl
jle
ret
cwtl
test
xor
data16
addr16
push
dec
jns
stc
mov
test
int
in
test
jp
stc
mov
adc
sub
lret
push
cmp
in
jle
cmp
xor
adc
movsl
or
xchg
es
mov
ds
lock
push
nop
mov
mov
sbb
outsb
cltd
std
push
or
jae
jo
cmp
rcrb
sti
test
jo
xchg
or
test
cmpsb
mov
enter
xchg
sub
inc
inc
inc
mov
inc
mov
out
repz
out
push
in
jle
cmp
cli
ljmp
int3
inc
xchg
mov
mov
mov
cmpb
mov
adc
test
push
repz
sahf
or
sbb
jge
inc
push
inc
je
sub
sbb
gs
pop
adc
in
and
jmp
cmpsl
push
push
aam
xchg
faddl
push
add
jl
testl
ret
shrb
adc
mov
loope
or
loop
loope
cwtl
mov
es
test
cld
push
lret
xor
in
xor
jge
xor
cmpsb
icebp
push
out
out
add
movsb
fdivs
mov
sub
fidivl
rcrb
sub
lret
and
clc
dec
std
mov
ret
cwtl
imul
popf
adc
test
mov
out
mov
pop
repz
in
push
out
cli
popa
loopne
pop
test
in
iret
out
testl
jno
in
cmp
outsb
xchg
jo
or
in
outsl
mov
fiadds
rcll
sbb
mov
pop
jge
jns
in
test
dec
testl
push
lcall
mov
add
adc
pop
push
mov
mov
insb
shr
xchg
scas
cmp
inc
jae
int
mov
mov
addl
adc
pop
jns
adc
mov
inc
and
push
mov
xlat
fs
sarl
dec
dec
cmp
pop
in
cmp
aas
jg
push
ja
rcrb
jg
adc
pop
adc
dec
sub
andl
mov
cld
adc
imul
adc
lods
into
and
ljmp
lock
packsswb
inc
pushf
mov
dec
dec
sub
or
jns
test
jns
adc
xchg
push
popa
sarl
scas
lcall
bound
popa
out
inc
gs
cmp
pop
or
js
xchg
mull
daa
mov
test
insl
fidivrs
and
jne
xchg
bound
add
add
dec
pusha
gs
and
div
bound
and
push
push
loope
sbb
push
das
stc
xlat
popf
lcall
add
std
push
les
push
inc
sub
push
mov
int3
fucomip
in
mov
call
pop
xchg
sbb
push
outsb
into
sbb
mov
shl
enter
testb
out
pop
mov
lea
xor
fwait
mov
fisttpll
bound
pop
sub
and
fchs
in
dec
sub
lret
loope
jle
sbb
jge
ret
sbb
shlb
jb
cmpsl
mov
dec
xchg
mov
ficoml
sub
mov
xchg
fwait
imul
and
arpl
stc
mov
jae
decl
mov
movsb
jp
mov
cltd
dec
mov
mov
xchg
jns
aad
inc
and
ret
insl
pop
dec
clc
aam
adc
push
add
push
lcall
js
sub
in
sbb
cld
mov
jno
and
js
cmp
loope
inc
dec
adc
out
inc
aaa
notb
dec
mov
call
sub
push
pop
or
shll
cmp
hlt
dec
sbb
mov
dec
cmp
stc
cmp
idivl
outsb
sar
pop
mov
imulb
adc
xchg
sbb
call
push
xchg
jmp
lds
cmc
les
shl
das
jns
inc
push
push
lea
loopne
jae
cli
imul
mov
mov
test
icebp
std
pop
lock
stos
fisubrl
ja
out
std
ret
cmp
pop
ret
js
fs
cmp
les
push
test
test
and
or
in
mov
cmp
cwtl
cli
pop
jp
xlat
mov
jns
ljmp
pop
sub
sti
add
dec
xchg
mov
lds
sahf
cli
int
lds
mov
loope
and
sbb
imul
ret
cmpsb
fs
push
mov
nop
clc
dec
aam
int3
cmp
dec
jb
or
cmp
jge
jecxz
scas
add
call
mov
xchg
inc
push
cmpsl
and
cmp
getsec
dec
pop
cld
popa
clc
jo
pop
adc
fsubrs
mov
jae
ret
les
stos
xchg
sahf
hlt
mov
out
testb
addb
fs
iret
pop
sbbb
xor
sub
ljmp
adc
mov
dec
into
adc
dec
pop
and
pop
test
fistpl
push
fistpl
and
add
stos
jo
cs
inc
insl
jns
inc
sbb
cmpsb
negb
icebp
enter
dec
das
mov
mov
xchg
lahf
lret
xchg
test
out
gs
pop
icebp
jbe
lret
inc
push
jle
jbe
push
dec
cmpsb
leave
sub
add
pop
sahf
addr16
adc
jb
sbb
jnp
xchg
imul
inc
fldt
insl
jl
mov
jb
adc
call
push
lods
jne
nop
mov
push
jle
sbb
mov
aas
cwtl
popf
cmp
cmp
fidivs
lea
mov
nop
mov
mov
fldl
outsb
outsl
out
mov
mov
cwtl
lcall
add
xlat
rorl
aam
pop
xchg
movsb
push
movsb
adc
add
jl
push
in
pop
ret
dec
add
xor
mov
mov
mov
popf
rclb
test
adc
mov
cltd
je
adc
ds
pop
jle
inc
roll
push
fnsave
dec
jns
pop
mov
sti
popf
pop
cmc
sub
mov
addr16
clc
and
push
and
outsb
jns
shl
jmp
mov
pop
jg
adc
xor
xlat
sbb
cmpsb
in
lcall
das
mov
imul
shrl
mov
imul
movsb
jle
sub
dec
ret
ja
cwtl
cs
dec
movsl
sbb
mov
cld
or
pop
jmp
mov
sub
addr16
mov
lcall
ljmp
adc
and
mov
jb
pop
fmull
fdivrp
ds
imul
fmul
out
loopne
dec
push
jns
sahf
xor
mov
inc
jnp
mov
add
aad
mov
mov
inc
sbb
rcr
cmp
push
int3
pop
dec
inc
les
test
mov
ret
push
push
cmp
or
inc
dec
adc
inc
push
es
jbe
push
pop
arpl
mov
test
sbb
hlt
jo
mov
sbb
std
xor
in
lcall
xor
mov
jle
cmpsb
iret
mov
hlt
pop
out
cmp
mov
loop
out
cwtl
mov
sub
ljmp
addr16
xadd
jnp
adc
fdivrl
and
add
das
mov
sti
notl
fnstenv
rorl
add
add
std
xchg
js
push
mov
or
mov
imul
aam
inc
jmp
fnstenv
xlat
mov
dec
add
int
ret
cli
pop
out
add
test
push
push
aad
push
in
cmp
sbb
dec
mov
popf
lods
mov
outsl
popa
fs
lds
inc
or
sbb
test
aad
mov
mov
xor
inc
lea
xor
adc
sbb
mov
or
mov
daa
orb
enter
les
pushf
js
cmp
jp
xor
cltd
int3
outsb
fmul
jo
roll
cmpb
sbb
xchg
mov
stos
je
jecxz
jnp
adc
inc
js
lahf
mov
mov
cmp
xchg
cmp
push
sub
mov
pop
xlat
test
outsb
sbb
jno
out
in
add
int
andl
lock
aas
cmpl
push
rorb
addl
xchg
ret
cmp
iret
mov
fidivl
lods
stc
push
dec
xlat
inc
or
inc
pop
sbb
das
pop
loopne
insb
mov
dec
mov
test
and
addr16
mov
jp
or
push
sub
mov
ficoml
fldcw
negl
movsl
mov
imul
lea
fdivr
mov
sub
cmpsb
mov
add
shrl
mov
orb
add
mov
push
push
cmp
cmp
mov
lret
fisubs
push
jno
les
fcmovnb
mov
fstl
stc
jbe
icebp
push
push
jbe
or
scas
mov
add
test
or
xchg
test
sub
pushf
call
xchg
rclb
jns
xor
out
sub
inc
mov
mov
inc
lret
popf
leave
fisubs
fildll
lret
shrl
xorb
pop
sarb
ss
jmp
scas
outsb
lcall
adc
dec
stos
adc
xchg
sub
inc
in
and
jmp
popf
pop
cmp
push
paddusw
cli
pop
cltd
mov
daa
cltd
bound
lods
mov
or
fstl
mov
mov
jae
bound
sbb
in
add
insl
insb
lock
mov
and
aam
pop
cmpsl
addb
sahf
dec
or
jg
adc
lock
sbb
adc
push
repnz
pop
movsb
jg
sbb
icebp
pop
popa
pop
call
fndisi(8087
sbb
daa
das
jle
das
out
or
out
sbb
sarb
pop
push
or
xlat
ds
outsl
scas
push
mov
int
out
push
fs
insl
xchg
lret
out
sbb
mov
fstpt
xchg
mov
stc
vmread
sbbb
or
jne
jl
notb
xorl
adc
add
shrl
xchg
sbb
cmp
cmp
sahf
sub
mov
bound
sbb
sbb
adc
and
push
and
jge
outsb
cmp
sbb
sti
cmpsb
cmp
leave
add
outsb
bswap
sbb
stc
sahf
shl
jns
mov
mov
jg
add
push
dec
lret
les
insb
xchg
lds
sub
cmpl
jecxz
dec
sarl
aaa
jle
int3
test
cs
ss
rorb
addr16
inc
das
or
aam
dec
jp
cmpl
pop
push
jmp
fcompl
sub
je
clc
mov
pop
mov
mov
popa
mov
sub
data16
sbb
push
fs
in
outsl
cmpsl
push
sub
or
or
stc
jmp
pop
push
ret
pusha
cld
xchg
inc
lret
mov
scas
mov
int3
and
lds
mov
cmpsl
mov
jmp
pop
mov
push
push
int
cmpsb
jae
mov
dec
push
add
jp
fadd
data16
push
sbbl
sahf
jge
es
xor
sbbl
data16
xor
xor
lods
movaps
inc
stc
push
cmp
inc
in
fildll
fwait
push
lea
aaa
lea
jmp
push
xchg
sar
jns
repnz
cmpsb
mov
negl
js
leave
cmp
jbe
and
out
push
mov
je
lahf
push
push
popf
scas
loope
fildl
inc
aas
or
add
mov
pop
sbb
xor
sti
cli
scas
mov
adc
dec
cmpsb
and
or
lret
cli
icebp
and
stc
lret
push
popf
mov
push
pop
out
pusha
push
lahf
out
sub
mov
add
mov
inc
cmp
clc
loope
jg
jne
cmp
add
sbb
mov
mov
inc
and
dec
movb
xor
adc
mov
push
enter
jl
push
jmp
cmpps
aas
xchg
push
loope
rcrb
adc
and
out
xchg
imul
push
movl
push
xor
ret
inc
cmp
jle
mov
add
dec
cmpsb
inc
test
pop
call
pop
lds
enter
xchg
lds
fsubrl
icebp
mov
ret
and
pop
hlt
cmp
cmp
jmp
iret
rolb
cld
inc
jae
ret
roll
movsl
and
fistl
mov
sti
sub
leave
pop
adc
mov
test
dec
sarb
hlt
add
icebp
sub
adc
xor
push
mov
aam
lds
xchg
arpl
xchg
add
insl
popa
mov
je
out
sub
jmp
xchg
cmp
fisubl
jbe
in
cmpl
pop
fsts
dec
ss
sarb
scas
sub
stos
xchg
call
xchg
add
mov
es
xchg
mov
imull
inc
pop
cmp
push
rcrl
imul
jle
js
adc
mov
aaa
xchg
in
lcall
fcmovnb
mov
pop
rolb
clc
mov
movntq
rol
cmp
sti
jmp
std
scas
nop
out
mov
inc
into
jmp
mov
pop
les
cmp
imul
js
ss
jmp
gs
stos
dec
cmpsl
xchg
outsb
in
mov
clc
inc
leave
jecxz
inc
aad
xchg
dec
inc
ret
ret
jmp
int
daa
outsb
mov
lret
std
stc
inc
insb
mov
mov
mov
sub
out
test
aad
mov
call
shlb
push
add
xor
fwait
push
adc
xchg
icebp
mov
repz
loop
fprem1
xchg
js
mov
mov
popf
fisubrs
and
int3
outsl
cmp
ret
out
ret
pop
inc
add
scas
test
adc
dec
add
mov
scas
out
fs
mov
xchg
mov
jecxz,pt
aad
and
mov
ja
in
adc
mov
mov
fcompl
js
push
outsl
rorl
roll
lea
pop
ficompl
movb
mov
mov
lahf
jp
and
mov
mov
mov
dec
push
inc
mov
cltd
lock
mov
mov
mov
xor
mov
xchg
cmp
mov
and
js
in
sbb
shl
call
xchg
jae
jns
push
test
cmp
sub
sub
jne
adc
push
or
lret
loope
mov
in
sub
sub
loopne
or
scas
mov
hlt
xor
mov
cmp
in
xor
test
nop
dec
cli
out
jge
xchg
xchg
fbld
sarb
lahf
pop
ret
out
mov
repz
rcrb
hlt
push
cli
loope
fidivs
dec
xor
add
and
dec
xchg
in
jb
bound
gs
cli
hlt
add
shll
aas
mov
popf
and
add
pop
push
pop
jle
aaa
mov
mov
add
aam
lea
adcb
lods
bound
mov
jmp
mov
xchg
js
and
jge
mov
idivl
adc
divb
push
cli
hlt
xchg
push
mov
fwait
cmp
push
scas
rcrl
inc
fsts
xlat
xchg
out
xchg
int3
fdivs
daa
loop
icebp
mov
cmp
mov
pop
push
insb
jp
jge
insl
mov
out
jge
or
adc
mov
cmc
xchg
dec
jb
xor
dec
mov
notb
add
adc
addr16
dec
bound
inc
sahf
and
dec
fldcw
dec
scas
or
bound
mov
jo
sahf
out
aaa
mov
inc
cmp
or
mov
jmp
call
filds
loop
enter
icebp
mov
pop
into
cmp
mov
das
js
mov
es
xchg
aas
mov
cmp
lret
ja
sbb
sbb
imul
jl
imul
xchg
fsub
in
push
cltd
xlat
mov
cmp
pop
xchg
cmp
push
pop
fld
fsubrl
test
sbb
aam
loop
mov
xchg
pop
add
insb
call
pop
jo
dec
ss
cld
mov
mov
inc
nop
mov
cld
movsl
daa
je
mov
mov
or
sbb
dec
lret
sbb
pop
push
mov
rcrl
pusha
jne
mov
repz
sub
vcvtss2sd
inc
xchg
jae
lcall
insb
and
repz
dec
lahf
mov
in
orb
jecxz
sbb
adc
xchg
jae
mov
cmp
xchg
xor
inc
jo
aas
out
push
xorl
fucomi
stos
pusha
fcoms
mov
pop
xor
mov
shlb
cmp
pop
test
sti
jns
dec
mov
cmpsl
imul
movsl
ret
cli
mov
inc
jg
ret
cs
jae
insl
sub
pop
cmp
rcrb
lahf
dec
hlt
addr16
sbb
std
inc
ds
xor
xorb
push
jbe
fcmove
cmpsl
xchg
or
sbb
lds
pop
mov
fcomps
mov
out
adc
stos
pushf
lahf
iret
ficompl
std
cld
inc
and
and
fdiv
add
xor
lret
cmp
cmpsl
xlat
sub
sbb
push
in
dec
and
xchg
push
sbb
or
lret
popa
fmull
mov
adc
xor
cs
jae
idivb
pop
lahf
negb
imul
xchg
out
push
xchg
lock
or
movsl
dec
mov
mov
pusha
int3
xchg
test
pop
imul
out
outsl
ds
cmpsb
ficoms
mov
jg
cwtl
imul
adc
sbb
pop
adc
daa
and
in
dec
idiv
mov
popf
out
mov
inc
adc
pop
outsl
dec
sahf
jno
xchg
pop
pusha
or
cs
into
scas
inc
lock
jne
addr16
ja
test
or
inc
int
mov
push
nop
cmp
jl
push
in
pop
stos
test
sbb
xlat
and
push
or
mov
mov
lods
in
mov
daa
scas
pop
shrl
aam
jno
repnz
mov
jp
loop
mov
adc
pop
push
pop
xor
jg
ss
mov
adc
test
fildll
xchg
ljmp
cmp
fsubrs
lods
mov
or
jbe
jns
jl
inc
stos
add
push
jbe
dec
ret
or
out
inc
mov
arpl
ret
orb
adc
cmpb
std
jge
sahf
in
jno
sbb
sahf
push
daa
mov
inc
adc
leave
andl
and
in
shlb
push
jb
dec
or
jp
out
cld
pusha
add
sbb
cmp
push
push
sub
jl
or
pushf
dec
mov
cmpsl
pop
scas
fs
jl
sbb
push
dec
cld
push
adc
shlb
ja
jns
xor
and
out
mov
dec
and
fistpll
jne
and
xchg
daa
mov
ret
fs
xchg
lds
nop
ret
stos
or
lahf
stos
sub
test
sub
into
aam
pop
sahf
inc
xor
arpl
add
jae
sbb
out
imul
jmp
adc
add
push
out
pop
pop
js
outsb
mov
sbb
aad
jmp
lea
jne
testl
rcrl
xchg
mov
mov
cmp
rcrb
jne
int3
push
rclb
mov
sbb
outsl
negb
cmp
jmp
notb
push
repz
maskmovq
jle,pn
mov
cmp
jb
inc
lret
jecxz
jp
or
or
hlt
lock
stc
xor
icebp
fldenv
mov
add
add
cmpsb
or
cltd
out
jns
fdivrs
jle
aam
add
sub
sbb
cld
or
or
fnstcw
xchg
add
jnp
test
add
or
scas
mov
mov
je
in
jge
mov
aad
adc
adc
inc
movsb
imul
out
ljmp
dec
push
int3
outsl
pop
mov
jge
ljmp
cltd
jg
sub
fldenv
mov
scas
jo
xchg
fisttpll
scas
ss
fcompl
push
lahf
mov
mov
repz
fisubrl
addr16
leave
ja
add
cs
mov
add
out
popf
or
sub
fsubs
cmpsl
in
push
cmp
arpl
mov
cmp
mov
mov
jne
sbb
mov
push
jp
ds
dec
jae
mov
fdivrs
aad
insb
adc
mov
test
into
rcr
inc
jnp
cmovb
loopne
adc
and
frstor
fwait
sbbb
jmp
pop
in
clc
rolb
mov
pop
jle
jbe
jmp
pop
cmp
cmc
jge
xchg
lahf
lahf
and
imul
das
je
pop
fsubrl
test
jne
adc
daa
sub
stc
int3
mov
mov
cmpl
lcall
movsb
inc
jge
pop
pop
and
fsubr
pop
imull
or
hlt
jnp
sti
test
xor
pop
xor
xchg
jge
inc
movsl
insl
mov
or
test
sbb
or
push
add
into
lcall
push
out
pusha
lods
repnz
cmp
cli
iret
sbb
add
ret
int
testb
mov
jg
icebp
test
sbbl
cmp
rorl
fstpt
dec
mov
ffreep
add
dec
xor
addr16
mov
push
nop
cli
mov
cmc
outsl
mov
in
insb
sbb
and
and
push
push
jp
mov
sarl
xor
add
pop
lahf
and
mov
incb
pop
fadds
xchg
sbb
mov
push
test
cmpsb
or
push
cli
push
mov
mov
mov
scas
add
pop
jl
insl
icebp
aaa
push
leave
in
and
cmc
add
mov
sub
rolb
outsl
std
es
and
imul
push
push
or
lods
aaa
cmp
push
mov
lods
jo
fcmovu
jle
mov
adc
mov
jns
inc
mov
aaa
imul
pushf
pop
loope
add
mov
jl
xor
shrl
mov
mov
pop
inc
adc
jmp
adc
scas
dec
inc
add
shlb
fcomps
fidivl
fs
ret
dec
test
fs
fdivl
sbbl
push
cld
sbb
sbb
int3
aaa
sub
xchg
mov
add
clc
xchg
popa
lds
adcl
sbbl
inc
jl
push
lods
in
adc
jnp
adc
jge
das
xor
lcall
ret
out
lea
iret
inc
xchg
mov
mov
test
out
and
dec
cmp
inc
gs
jbe
fwait
outsb
mov
cmp
fadd
ret
adc
cmp
in
inc
repz
fcoml
dec
fidivs
js
mov
mov
fcomi
es
jmp
shll
pop
push
push
aad
fsubr
decl
jbe
in
jp
inc
jmp
cmc
std
hlt
shrl
xor
popl
or
fsubs
push
int3
inc
out
in
push
int3
xor
imul
lock
leave
leave
and
mov
fadd
mov
jge
pop
jne
ret
mov
push
ds
jecxz
lods
ficompl
rorl
outsb
enter
mov
push
repz
test
cld
cmp
adc
inc
sbb
push
add
inc
jl
outsb
push
xchg
adc
jno
out
ds
fistl
ficompl
out
mov
popa
loope
lcall
js
xor
call
decl
pushf
pop
inc
xchg
xchg
xchg
rcll
mov
cli
inc
roll
ja
bound
pop
mov
mov
faddl
mov
dec
push
jg
jb
lods
and
jg
xchg
filds
seta
sarb
mov
call
cmpl
stc
sbb
and
pop
or
pop
inc
xor
mov
orb
scas
xchg
inc
push
add
xor
inc
fsub
dec
call
lcall
inc
mov
mov
push
pop
mov
lea
popf
mov
add
mov
test
mov
aad
and
sub
jge
pop
cli
scas
imul
std
or
jns
mov
cli
jl
filds
mov
popa
fisubrs
in
lea
pushf
sbb
mov
add
rcrl
jmp
sbb
inc
mov
cmpsb
out
push
sti
mulb
shlb
cltd
mov
out
xor
or
xchg
mov
mov
push
je
sub
dec
imul
push
aad
fisubrl
dec
push
mov
loopne
inc
xor
dec
test
add
push
cmpsb
and
add
add
mov
sbb
pop
mov
je
insb
adc
loop
imul
loop
pushf
aad
daa
pop
andl
mov
xchg
jmp
js
dec
cmp
aas
jbe
sahf
cmpsl
shl
cmpsb
movsb
mov
outsl
cmp
jge
xchg
arpl
pop
add
and
jbe
sbb
jmp
loope
xchg
ja
lock
mov
aas
cltd
jl
nop
or
nop
sbb
pop
stos
lcall
and
test
or
test
sub
push
cld
imul
ja
pop
sahf
xlat
and
xorl
mov
imul
xchg
leave
add
jp
in
pop
push
and
sbbb
mov
repz
push
sub
gs
xlat
sub
push
xor
das
lods
cld
test
rcrb
push
or
dec
jp
mov
stos
cmp
add
insl
jno,pn
shll
pop
or
xorl
lea
lcall
test
inc
lret
sub
dec
notb
pop
cli
cltd
lods
mov
jl
push
pop
dec
xor
xchg
push
jno
jo
pop
sarl
or
out
cmp
or
mov
mov
mov
sbb
inc
enter
js
adc
jl
div
adc
dec
in
test
jae
rcrl
mov
xchg
lret
stos
cs
xchg
fidivs
ss
repnz
or
dec
jle
sti
notl
stos
in
sahf
xchg
adc
mov
sub
ds
dec
daa
loop
pop
loope
fdecstp
test
inc
mov
rorl
sbb
mov
mov
sbb
xchg
imul
inc
fisttpl
aas
mov
pop
lds
mov
aaa
adcb
pop
mov
xchg
or
jno
out
mov
adc
add
or
iret
por
into
and
fsubl
mov
adc
xchg
fcomp
movsl
mov
adc
in
aam
test
les
test
xor
test
xchg
dec
loopne
dec
inc
lock
and
mov
xchg
pop
cmp
in
aad
inc
xchg
rorl
fcoml
jo
mov
mov
pop
jns
vmovaps
js
aas
in
fdivrl
ljmp
pop
sub
in
mov
in
xchg
cvttps2pi
pop
shll
push
push
test
pop
movq
sub
jbe
cli
mov
xchg
into
or
rolb
es
imul
add
pushf
popa
and
mov
push
adc
gs
jmp
fisubs
cwtl
mov
xchg
mov
cwtl
sbb
inc
in
mov
push
mov
jns
ja
jns
into
lods
mull
or
inc
xchg
inc
pop
shl
lea
jmp
push
shll
mov
ror
lods
out
xor
inc
and
iret
in
lret
pop
fwait
mov
and
xlat
loopne
add
outsl
cmp
sbb
loope
lcall
push
or
mov
cmp
cmp
loop
dec
jae
and
bnd
call
aad
mov
insb
mov
iret
data16
push
push
pop
outsb
call
xor
gs
jns
hlt
dec
xor
cmp
fbld
test
jo
inc
mov
rclb
out
or
and
push
mov
repz
mov
insb
stc
inc
outsb
scas
cmp
cs
mov
loope
push
cmc
pop
push
pop
shll
lcall
cmp
mov
mov
dec
popa
push
mov
xor
aad
mov
je
jmp
out
push
sti
mov
popa
inc
setne
pop
in
enter
add
mov
xchg
cmp
aas
push
js
fdivl
lcall
ret
adc
push
testb
xor
inc
test
lret
pop
loope
push
jge
jp
cmp
xor
mov
pop
mov
xchg
xor
cs
rorl
or
dec
fst
repnz
pop
xor
inc
dec
mov
sub
fucomp
aaa
xchg
sbb
aam
pop
outsl
pmaddwd
dec
pop
or
mov
dec
inc
addr16
pop
push
lock
pop
add
call
cmp
mov
enter
mov
and
fildll
jne
xchg
mov
call
adc
aam
jno
insl
mov
in
mov
mov
cmp
pop
ds
rcrb
xor
clc
mov
push
or
dec
cmp
popf
pop
mov
in
pop
gs
adc
jle
dec
call
ffreep
lret
jnp
scas
outsb
inc
pop
adc
or
in
dec
cmc
insb
cmpsb
lret
pop
lret
sti
lock
cmp
sub
adc
aas
movsb
std
mov
pop
repz
mov
mov
jae
jno
cli
dec
or
stc
xchg
jo
jl
mov
lock
ret
jne
cltd
arpl
xchg
push
mov
xchg
les
pop
xor
jle
daa
daa
inc
mov
xchg
ficoml
sub
push
dec
add
or
ja
jo
add
mov
mov
mov
fbld
cmp
cmp
mov
cmp
test
popa
cmp
jns
pushf
jo
add
lret
add
add
scas
jmp
or
enter
pop
mov
xchg
imul
jl
jl
insb
xchg
sub
lds
aaa
imul
dec
mov
lock
mov
mov
sahf
mov
jmp
pop
shll
pop
add
stc
cwtl
pop
aas
loop
cmp
mov
ret
jmp
daa
outsl
fs
sbb
push
jecxz
test
inc
add
insl
loop
jp
aas
int3
pop
out
mov
jne
mov
cmp
mov
pop
lods
in
lock
lods
dec
call
or
rcr
mov
fcom
xchg
mov
loope
jb
aaa
sub
in
lea
daa
mov
jnp
pop
in
outsb
xchg
mov
sub
adc
test
test
cwtl
add
jge
lea
or
add
push
sub
addr16
cmp
int
in
sbb
dec
pushf
pop
scas
push
jmp
push
xchg
ror
and
leave
sbb
mov
xchg
rcr
fcmovnbe
mov
scas
mov
ss
ljmp
lds
pop
mov
cmp
sbb
sbbl
out
cwtl
shr
cmpsl
clc
imulb
aas
in
dec
lock
sbb
sbb
ss
dec
scas
lret
mov
out
aad
or
xor
loopne
popa
push
jmp
push
lds
int3
xor
push
mov
stos
cmpb
ficompl
insl
cmpsl
inc
rol
push
ret
adcl
cmp
in
fists
adc
fneni(8087
adc
inc
push
mov
inc
insl
cwtl
orl
jno
push
aad
or
sarb
loopne
pop
dec
jae
mov
sub
dec
enter
xor
std
cmc
mov
add
xor
popa
cmp
rolb
int3
lea
enter
pop
aam
outsl
repz
jo
shll
out
inc
add
push
leave
stos
jb
in
movsl
or
incb
dec
pop
mov
fstps
mov
mov
fwait
xlat
and
mov
addr16
rclb
xor
pop
test
std
xchg
and
call
fadd
push
sarb
pop
in
out
xchg
cmpsb
iret
aaa
cmp
addr16
sbb
push
fldt
lock
push
inc
mov
xchg
xchg
insb
mov
adc
iret
loop
pushf
jmp
stos
aaa
in
aad
or
mov
movsb
iret
sub
sbb
in
int
add
call
scas
xor
iret
push
mov
and
daa
rcrb
adc
dec
mov
movsb
ffreep
lret
out
sbb
outsb
ret
mov
lods
push
mov
jmp
mov
outsl
pop
push
jle
aaa
popf
imul
push
pop
out
adc
xorl
mov
xor
mov
in
das
ja
sar
sahf
mov
or
xchg
xchg
sbb
inc
and
daa
loopne
xchg
jne
loope
inc
and
pop
bound
pop
xor
scas
and
sbb
xchg
scas
adc
imul
or
aad
xor
inc
fldt
subl
mov
je
inc
pusha
ljmp
jge
sarb
hlt
in
or
add
scas
xor
ss
dec
pop
loop
lock
inc
cmp
mov
or
fsubl
jns
xor
mov
push
add
adc
sbb
mov
sub
pusha
pop
jae
popa
adc
add
int3
mov
fsub
daa
or
mov
mov
je
dec
fs
mov
cmp
fdivrs
adc
adc
xchg
je
in
mov
popf
faddl
inc
jp
push
pop
push
adc
test
push
es
xchg
pop
jl
or
movsb
push
ror
jo
pop
in
shrb
pop
mov
rolb
scas
pushf
and
cmovg
scas
inc
pop
shrl
pop
jae
lea
addr16
sub
cmpsl
arpl
ficoml
scas
lahf
lea
mov
in
mov
cwtl
int3
jecxz
sbb
lret
mov
aam
test
xlat
add
push
push
jns
mov
jp
adc
xchg
lea
mov
mov
mov
sub
lock
cmpsb
and
mov
jle
xchg
push
stos
xchg
sti
std
call
pop
xor
subl
dec
iret
xor
xor
xchg
cmp
pop
sub
mov
loopne
mov
cmp
mov
adc
or
and
daa
sub
xchg
ret
addr16
mov
cmp
push
push
hlt
stos
es
lea
dec
shrl
pop
add
iret
dec
push
mov
dec
aaa
mov
arpl
sbbl
leave
and
xor
lcall
adc
sbb
insl
popf
je
sub
imul
fldl
popa
lret
fldl
nop
lret
mov
xchg
lret
pop
fwait
aaa
jl
adcl
jg
outsl
sbbl
pop
push
jge
xor
inc
xor
push
adc
ffreep
pop
sar
sar
push
mov
pop
push
inc
hlt
add
mov
mov
cmpsb
sbb
insb
stc
ss
fimull
popf
dec
inc
in
cmp
or
scas
jecxz
ja
xchg
jl
dec
leave
jbe
jae
ficoml
mov
mov
or
out
dec
cmp
pop
dec
mov
mov
push
push
mov
cmpsl
and
or
out
inc
mov
jg
add
scas
ret
adc
in
lods
test
shl
jae
rcrl
int
inc
stos
jle
push
add
cwtl
xchg
scas
cs
out
dec
jb
cmp
rcll
enter
pusha
cmp
ja
lahf
bound
popa
out
dec
loopne
jge
aaa
pushl
pop
test
outsl
test
ret
les
inc
mov
es
in
xchg
jae
loopne
fdivp
pop
xchg
cmc
stos
stos
lcall
lahf
adc
push
cmp
call
and
fs
cmp
hlt
pop
mov
stos
adc
es
popa
sbb
stos
dec
cs
jmp
mov
data16
jno
sbb
cmp
dec
adc
mov
add
fdivrl
and
ret
sbb
mov
pop
mov
cltd
or
adc
sub
mov
dec
repz
cwtl
or
unpcklps
mov
movl
call
xchg
adc
loope
jnp
shlb
les
cmpl
jno
inc
sub
mov
cmp
xchg
stos
inc
mov
rorl
add
add
shrl
pop
mov
xchg
inc
xchg
aas
pusha
stos
sub
add
push
mov
std
lock
jl
hlt
adc
incb
mov
xlat
sub
call
jbe
jge
pop
movb
mov
push
pop
out
mov
in
or
pop
mov
mov
or
pusha
adc
push
jp
or
lea
andl
inc
xchg
mov
sahf
repz
jbe
lret
subl
aaa
mov
sbb
pop
in
sahf
dec
dec
inc
pop
and
adc
xchg
mov
ja
mov
and
jns
inc
mov
lea
mov
das
test
mov
inc
mov
mov
pop
hlt
test
sbb
jo
sbb
adc
dec
jns
sub
or
jge
and
jbe
nop
and
sub
std
mov
and
push
mov
ret
xor
sub
xor
and
out
and
icebp
call
lea
xchg
push
es
in
jl
xchg
scas
movsl
and
xor
pop
adcb
jbe
sbb
scas
jb
in
imul
rclb
mov
pop
mov
lahf
jl
lea
lret
rolb
into
leave
adc
adcl
aad
lret
inc
adc
iret
shrb
cwtl
mov
mov
in
aaa
xchg
ds
jns
adc
cli
sbb
fstpl
fisubl
psubsw
test
inc
push
cmp
stos
aas
add
clc
lcall
test
test
and
cmp
fpatan
and
jmp
inc
outsb
push
pusha
int
mov
ret
aas
pop
jge
push
cmp
faddl
mov
or
arpl
mov
imul
and
nop
int3
xchg
test
jo
stc
cld
int3
imul
test
insl
dec
imul
push
je
ljmp
sahf
or
outsb
cmpsb
int3
rcr
and
les
mov
sub
mov
lds
movsl
pop
mov
push
arpl
loopne
pop
aas
orl
sub
enter
jecxz
mov
dec
xchg
fs
sub
imul
mov
sbb
mov
xchg
iret
negl
pcmpgtd
out
and
add
ret
out
ds
int
add
push
mov
jecxz
lahf
shrl
sar
lds
push
adc
or
mov
or
push
mov
fwait
cmp
mov
or
jge
mov
jns
dec
fmuls
in
pop
sti
mov
add
cmc
fwait
mov
in
add
xorl
dec
adc
sbb
test
stos
adc
dec
dec
loop
sahf
int3
ret
add
fs
ds
out
sti
movsl
mov
jg
outsb
pop
add
gs
ss
ficoml
iret
rorb
inc
mov
jns
pusha
dec
das
push
adc
repnz
xor
push
pop
pushf
xchg
pop
dec
loope
in
and
rclb
in
mov
pop
or
xchg
mov
dec
pusha
dec
and
out
sub
lea
lea
popa
or
mov
orl
push
pop
movsb
stos
mov
orb
or
fisubs
lahf
pop
jae
jns
outsb
xchg
mov
push
mov
fwait
or
int
or
xchg
les
mov
loopne
cmp
insb
xor
push
shrb
in
stc
mov
mov
out
pop
push
cmpl
jne
outsb
dec
pop
aas
mov
cmpsb
sbb
mov
mov
mov
add
lods
add
pop
pop
add
jg
repz
cli
cmp
roll
jg
and
inc
adc
cmp
insb
out
add
mov
movsb
push
or
mov
pushf
out
insl
jmp
jmp
push
xor
icebp
addb
loop
sub
fcoml
inc
mov
add
jp
pop
and
jecxz
cmp
xchg
fwait
pop
jne
ret
icebp
and
ret
inc
or
stc
mov
adc
cmp
daa
or
xlat
mov
incb
sbbl
xchg
jmp
daa
sbb
xchg
xchg
sub
xchg
and
xor
push
push
mov
jle
jmp
aaa
insb
dec
inc
inc
shlb
outsb
jne
push
adc
mov
mov
cmc
mov
push
sbb
inc
jae
mov
sbb
mov
stos
pushf
add
lock
pop
inc
jg
push
sub
lods
outsl
in
sub
pusha
pop
jl
fcomps
incb
das
adc
mov
xchg
ret
rcrl
add
mov
mov
pop
imulb
cmpsb
xchg
arpl
push
clc
cmp
and
add
lods
mov
or
loopne
std
xor
test
arpl
pushf
push
lret
mov
sub
push
push
pop
inc
test
add
cmp
movsl
out
lcall
xor
inc
xchg
mov
xor
cmpsl
sti
decl
or
push
aam
fcmovnbe
outsb
and
hlt
jle
lock
push
rol
aas
push
push
sub
gs
jmp
icebp
and
jae
xlat
les
sub
int
or
xchg
out
into
mov
mov
push
adc
fwait
mov
xorb
add
ret
lods
pop
les
push
std
cmp
aad
js
stos
scas
and
mov
fs
inc
aad
mov
enter
popl
push
jl
ljmp
sbb
dec
hlt
jge
cmp
test
push
cmp
les
fisttpl
mov
pop
gs
jb
mov
aas
add
or
dec
or
xchg
or
mov
pop
dec
dec
adcb
and
pop
loop
inc
cmpsl
mov
add
mov
mov
test
mov
push
lret
mov
out
or
inc
lret
mov
int
add
sub
call
xor
jae
xchg
test
adc
xchg
leave
mov
push
out
adc
rcl
lret
negl
pcmpgtb
movb
jae
in
sbb
dec
lahf
add
arpl
ficompl
adc
sarl
mov
insl
rcr
mov
lock
adc
push
out
mov
fiadds
ficoml
dec
movb
xchg
mov
sbb
cmpsb
add
sub
xor
ret
fwait
mov
dec
and
cmp
in
cwtl
andl
jl
xchg
out
sbb
aas
sub
inc
icebp
cmp
sub
jmp
gs
inc
dec
push
dec
or
or
and
insl
scas
xchg
ljmp
or
fdivrl
push
leave
mov
in
test
sub
xchg
pop
fabs
sub
and
cmp
insb
add
or
cltd
mov
xor
jo
mov
mov
xchg
inc
popa
arpl
jecxz
lret
sub
pop
lods
fwait
push
int
sbbb
dec
mov
stos
imul
mov
imul
jge
mov
dec
lret
jp
pop
mov
or
or
stos
rcll
mov
xchg
mov
mov
cmp
dec
insb
mov
repnz
gs
cs
sub
sub
and
in
les
stos
mov
fwait
mov
ljmp
pushf
and
mov
xor
add
daa
push
ja
lds
cmp
stos
sbb
or
fisubs
rdmsr
je
out
mov
pop
sbb
push
out
popa
xor
hlt
jp
jmp
cltd
fcoms
rclb
xchg
popa
lock
lret
outsb
les
mov
pop
push
sbbb
dec
jl
sub
mov
pop
lds
push
loope
testl
push
xor
inc
mov
inc
and
das
es
adc
gs
lock
pushf
cmc
push
divps
jmp
incb
popf
adc
jae
cmp
lcall
mov
in
pand
jo
lahf
jnp
pop
lcall
out
loopne
push
xchg
jp
push
jns
popf
xchg
mov
rep
stc
jp
jg
jl
jp
inc
daa
ret
mov
pushf
in
cmp
lea
pushf
adc
stc
repnz
add
inc
fxch
lds
ficomps
lock
pop
xor
sub
pop
add
std
jns
cmp
hlt
lods
fwait
jbe
iret
cmpsl
inc
stc
mov
pop
pop
lret
addr16
mov
fwait
inc
xlat
aad
jne
out
jo
mov
cmp
mov
and
insb
test
and
fxch
inc
mov
pop
es
cmp
in
sub
sub
dec
call
in
dec
add
aaa
loopne
push
xchg
or
dec
push
adc
and
out
sbb
lea
mov
dec
or
xlat
add
pop
outsl
sti
xchg
enter
lds
outsl
dec
shlb
xchg
add
add
mov
xor
dec
outsb
lcall
sbb
outsl
jmp
cmc
pop
mov
pop
roll
hlt
scas
iret
out
iret
mov
pop
push
in
lea
xchg
aaa
shr
jecxz
lret
repnz
mov
pop
jno
movsb
sub
pop
xchg
lods
mov
imul
fsts
or
sbb
cmp
xor
dec
mov
out
adc
push
mov
xlat
aaa
leave
aaa
or
dec
lahf
ret
mov
lret
and
push
sbb
cmp
ljmp
popa
add
sbb
sbb
cld
out
jmp
in
mov
fdivrl
and
stos
fsubr
dec
xor
int3
fdivrs
emms
cmp
into
stos
ja
adc
mov
xchg
fisubrl
mov
div
dec
xchg
jmp
loop
fmull
push
push
jge
cmpsb
jno
mov
and
xchg
xchg
cmp
addr16
lret
xchg
mov
mov
mov
mov
arpl
jnp
and
orb
adc
in
sub
jmp
sbb
call
lods
mov
xor
xor
lret
jg
push
inc
xchg
xchg
ja
in
mov
pop
push
push
pushl
das
mov
test
insb
dec
test
dec
mov
inc
cmp
out
mov
repz
jp
cmp
addr16
xchg
loope
loopne
push
cli
push
add
mov
out
hlt
xor
into
mov
arpl
insl
leave
lock
fsubs
shrb
xor
sub
filds
sahf
out
pop
loope
pop
pop
push
ret
lret
arpl
or
cmp
outsl
mov
pop
int
mov
loope
jne
or
add
mov
sub
push
mov
mov
mov
lods
add
jecxz
loope
mov
cmc
xor
dec
ffreep
lahf
arpl
pop
cmpsl
jg
sti
sub
test
jmp
popl
jle,pt
lret
fxch
out
repz
pop
mov
out
mov
mov
dec
in
cld
jae
pmaxub
cmp
mov
jp
jl
mov
xchg
cmp
call
scas
inc
int
rcrb
mov
mov
es
outsl
stc
pop
rorb
xor
mov
mov
xchg
jmp
jnp
or
fidivs
cmpsl
xchg
scas
nop
or
jns
cmp
or
inc
mov
xor
or
gs
pop
ficoml
mov
and
pop
pushf
test
xor
out
mov
fildl
sahf
test
movsl
sub
mov
pusha
jb
push
ljmp
shlb
add
std
cmp
in
addr16
push
mov
leave
repnz
sub
enter
ja
mull
mov
jg
lock
subl
ljmp
mov
std
push
shlb
xchg
fcom
inc
pop
int
into
dec
jecxz
mov
int3
fnstenv
sbb
jg
pushf
jge
sub
sub
mov
jnp
out
stos
outsb
cmp
inc
lock
and
sbb
sub
jo
aam
idiv
out
fucomi
mov
cmp
mov
jae
adc
jp
fwait
sbb
push
fildll
aad
test
jl
add
flds
pop
aas
xor
test
shll
js
lret
push
cmp
dec
xchg
or
jo
adc
cmp
and
xchg
cmp
push
mov
xchg
and
mov
push
push
dec
addr16
xchg
adc
popa
scas
addb
enter
pop
addb
push
and
es
mov
jo
addl
enter
lds
das
mov
jne
add
or
or
lock
popf
inc
mov
push
adc
pop
hlt
test
lret
or
cmc
mov
jmp
adc
cld
fdivrs
mov
adc
scas
and
mov
cmp
loope
sub
pop
pop
je
adc
inc
sub
int3
das
data16
xchg
out
adc
xchg
imul
inc
xorl
cmp
ds
leave
in
popf
fs
add
cltd
loope
in
xchg
push
inc
into
pop
xor
pop
dec
inc
add
xchg
test
addr16
sti
sbb
in
or
cmpsl
mov
or
in
fidivl
out
dec
adc
outsb
cld
mov
mov
in
and
mov
sub
xor
ds
incb
xor
pop
adc
nop
shlb
jno
mov
adc
mov
icebp
jb
jns
pop
ja
adc
pop
mov
pop
inc
out
add
repz
xchg
sbb
mov
adc
icebp
aaa
out
jmp
imul
dec
mov
rolb
pop
pop
sbb
pop
aam
mov
push
scas
aad
lods
pop
jmp
scas
loop
outsl
adc
sbbl
inc
jbe
insl
fs
sub
or
out
int3
rclb
add
in
hlt
adc
cmp
add
xor
cmpsb
lret
icebp
adc
adc
mov
cltd
adc
cmpsl
testl
mov
out
sbb
das
in
daa
push
mov
push
in
imul
inc
cmp
iret
and
dec
int
pop
cmpsb
mov
repnz
sub
fldenv
add
xorb
lods
cmc
pop
int3
div
out
jns
test
pop
xchg
cmp
add
mov
insl
add
or
loop
jnp
fsubl
jge
outsb
sbbl
cli
dec
repnz
inc
and
ds
in
xchg
mov
push
sub
adc
jg
dec
rcrl
inc
sahf
loope
ret
addr16
mov
pop
ljmp
xor
pushf
in
push
pop
in
jnp
xor
inc
int3
les
inc
leave
hlt
outsl
rorl
stos
xchg
sub
cmp
inc
dec
xlat
popf
pusha
push
sub
push
or
fldt
js
mov
mov
lea
mov
popa
cmpsl
addr16
in
int
psubw
jge
mov
mov
imul
data16
mulb
jg
add
inc
movsb
data16
rcrl
lret
xor
or
rolb
insl
fsubl
push
xchg
push
call
add
jb
xchg
or
rcll
lods
lret
jae
xchg
fistps
mov
adc
shlb
pop
outsl
into
xor
and
mov
sub
inc
or
mov
push
xor
icebp
test
adc
dec
loope
popf
lock
fstpl
lds
sub
lret
xchg
clc
lods
aam
xor
sarb
push
es
les
xchg
sub
aam
imul
inc
loopne
jp
jno
xor
lret
mov
mov
stos
mov
fisubrl
pop
fists
pusha
mov
rcrb
and
mov
xlat
out
data16
mov
xchg
icebp
pop
cltd
sbb
and
or
es
stos
or
inc
inc
out
mov
lahf
or
repz
pop
xor
pushw
fwait
cmp
bound
dec
rclb
jno
sub
popf
es
les
cmp
mov
xor
ss
inc
adc
rol
push
dec
add
out
xchg
inc
cltd
sbb
or
mov
insl
or
cmpsl
dec
inc
mov
out
insb
out
sub
mov
jge
mov
fnstsw
xchg
nop
dec
sbb
dec
in
adc
mov
xchg
mov
adc
add
lret
jmp
mov
fwait
aaa
sub
dec
in
outsl
fiaddl
shlb
inc
dec
sbbb
and
pop
cmp
ljmp
sub
jecxz
push
xchg
js
into
push
pop
xchg
sub
fidivrl
or
mov
clc
lahf
in
dec
popa
cmp
mov
adc
cmp
fwait
mov
ret
and
inc
cmp
xchg
push
add
call
bound
inc
lret
xchg
sub
push
lds
add
aad
add
cmp
dec
out
or
aam
sbb
xchg
sarb
lds
sbb
adcb
in
loopne
inc
and
enter
sbb
or
push
xchg
adc
orb
add
lea
mov
out
sti
jl
ret
fcompl
mov
test
std
inc
lret
and
fdiv
repz
sbb
pop
aad
mov
xchg
mov
push
stos
xor
sub
sub
das
adc
push
pop
or
je
xchg
outsl
xchg
fwait
adc
xor
test
fwait
out
les
pushf
out
xchg
mov
xchg
or
push
mov
sbb
and
mov
jp
inc
fildl
sbb
es
pop
ljmp
mov
xor
jmp
insl
loope
stc
xchg
cmp
daa
adc
into
mov
shlb
xchg
add
dec
pop
sub
jl
sub
cwtl
in
jnp
sub
xchg
mov
ret
mov
jb
adc
xchg
mov
fistl
repz
add
outsb
push
fistpll
movsb
jb
jno
jp
dec
fldl
jmp
mov
xor
rcll
mov
push
and
inc
repnz
lea
adc
dec
das
xchg
sbb
jbe
cld
arpl
adc
push
in
push
iret
rolb
ret
icebp
cmp
jae
test
popf
dec
add
jge
sarb
pop
popf
lea
jb
sbb
adc
xor
inc
add
scas
std
mov
fdivrp
push
or
jp
xor
push
call
lcall
mov
xchg
jno
push
and
jno
xchg
shlb
iret
sub
shrb
cli
or
mov
lds
pop
rclb
dec
dec
adc
popa
push
mov
cmc
lcall
push
sbb
daa
jae
sub
repnz
xor
xchg
inc
in
popl
mov
repz
inc
jne
mov
push
lret
mov
shrl
xchg
inc
adc
jl
in
idiv
jp
scas
rorb
pxor
lcall
rcrb
sub
mov
insl
pop
rorl
push
scas
ds
fdivrl
xchg
cli
push
jg
sbb
push
xor
add
inc
mov
lret
sbb
mov
dec
dec
dec
mov
bnd
mull
lcall
jnp
push
cmp
addr16
lret
push
or
adc
std
mov
outsl
repnz
push
xchg
stc
jo
mov
stos
sub
mov
xchg
iret
jg
mov
fst
gs
popf
push
sbb
inc
add
push
ficoms
clc
aaa
xchg
jae
mov
std
mov
mov
jmp
add
add
jns
add
cwtl
dec
popf
int
mov
enter
sbb
outsl
sbb
push
jnp
aad
lcall
xchg
sbb
aaa
popa
mov
stos
xlat
stc
cmp
mov
adcb
scas
out
cmp
or
jno
pop
popf
sub
pop
shrb
cltd
test
sub
dec
out
sahf
les
add
stos
sub
dec
add
lods
loopne
std
notl
dec
fstl
adc
mov
fchs
mov
cmp
mov
mov
fisubs
popf
jp
inc
flds
lock
sahf
dec
add
into
je
lea
inc
xchg
jbe
std
mov
les
sahf
sub
outsb
dec
sub
fwait
push
mov
mov
cwtl
leave
dec
idivb
sbb
je
xchg
aaa
lret
repz
mov
pop
fidivrs
clc
xor
adc
arpl
and
xchg
jge
jb
pop
lcall
inc
and
mov
cmp
clc
dec
push
add
jge
fcmovnu
pusha
inc
xchg
icebp
pop
mov
or
test
pop
pop
mov
push
fwait
cmp
mov
jge
inc
loopne
loope
adc
cmp
push
push
je
jno
adc
mov
cmp
add
jno
sbb
adcl
ret
in
les
dec
ss
ja
jle
sarb
dec
push
fldl
into
mov
add
adc
cltd
ds
repnz
jmp
jbe
sub
jne,pt
pop
dec
stc
pcmpeqb
xlat
das
pop
lahf
dec
roll
jmp
cmpsb
in
xor
inc
sbb
cmp
cmpsl
cmpb
xor
adc
inc
dec
ss
push
pop
std
dec
ffreep
dec
jne
sub
inc
sub
out
jbe
sbb
and
mov
pop
call
xlat
or
arpl
lret
mov
xchg
or
into
jbe
jecxz
cli
xchg
in
cmp
mov
shl
cmp
fwait
mov
inc
mov
jmp
or
cmpsb
sub
mov
adc
hlt
bound
in
imul
jns
addb
adc
xchg
fadds
test
popl
push
aad
arpl
cltd
push
adc
or
mov
and
pop
in
cmp
ret
mov
popa
add
lret
dec
js
jno
mov
inc
in
inc
test
push
jo
into
pop
out
daa
xor
lods
ss
cmc
aaa
mov
push
addb
mov
dec
inc
dec
cmp
aas
int3
xchg
mov
stos
lods
ret
jle
lds
pop
icebp
push
sti
inc
enter
push
aas
sub
ja
mov
test
jecxz,pn
or
inc
dec
stos
mov
and
outsl
cwtl
mov
jl
adc
repz
or
orb
and
sbb
add
repnz
mov
cmpsb
inc
cltd
xor
fadd
lea
mov
push
ficomps
or
je
ds
dec
push
fidivrl
leave
or
sbb
dec
subl
nop
lds
pop
ss
js
data16
pop
rclb
jo
mov
ljmp
jae
or
adc
jnp
jge
push
push
loopne
xor
sbbl
xor
jp
aad
pop
pop
sub
mov
inc
outsl
cmpb
cmp
inc
into
div
xor
out
jmp
fldt
outsb
xchg
in
sbb
sub
das
xor
call
test
cwtl
insl
add
sbb
mov
and
leave
cmp
cmp
jb
mov
mov
adc
imul
push
bound
std
repz
xchg
call
scas
jbe
scas
out
mov
jns
mov
adc
pusha
jb
push
cld
movsl
call
shl
ja
adc
dec
pushf
add
push
loopne
sub
push
cli
int
adc
mov
testl
mov
pop
cmpl
inc
jge
push
lret
popa
push
xchg
pop
mov
or
push
es
test
repnz
jo
icebp
idiv
mov
xchg
inc
ljmp
test
fldlg2
xorl
jmp
fistpl
movsb
adc
cmpsl
dec
add
pop
xor
rclb
lcall
lahf
sub
ds
lret
mull
repz
adc
fnstcw
push
std
add
testb
xchg
or
dec
out
dec
adc
jns
adc
xlat
and
xor
fnstsw
cmp
mov
push
insb
pushf
rcrb
xchg
and
push
in
add
sbb
fistpl
enter
outsb
jae
ss
sbb
fucomi
imul
push
mov
mov
jl
lock
leave
inc
jl
pop
xchg
xorl
or
sarb
xlat
jae
ljmp
dec
mov
and
sbb
mov
add
inc
bnd
je
pop
pop
sbb
xchg
loope
inc
xchg
daa
cmp
sbb
jle
repnz
lods
popa
pusha
push
jmp
data16
xlat
mov
jno
mov
lods
cmpxchg
mov
lods
cmpsb
dec
mov
pop
aas
cwtl
inc
sub
into
dec
popa
hlt
jnp
inc
push
shlb
enter
repz
ret
repz
dec
inc
xchg
in
outsb
ficoml
cmpsl
out
jmp
cmc
mov
sub
inc
ja
xchg
push
dec
dec
xor
jno
dec
lret
popf
adc
mov
dec
push
sub
mov
clc
das
ds
cmpsl
inc
or
int
push
icebp
cmp
test
aad
dec
rcr
inc
mov
dec
adc
ret
xchg
sbb
push
push
adc
push
inc
pushf
repnz
xchg
add
pop
add
push
je
enter
je
sbb
xor
mov
testb
pop
and
cmp
stc
add
cmp
fnsave
add
xchg
jno
icebp
xchg
jge
xchg
nop
mov
and
imul
mov
sbb
fs
xchg
cld
mov
aas
outsl
aam
fwait
pop
mov
pop
ret
test
rcrb
sbb
jmp
popf
xor
jo
pop
imul
sbb
and
inc
cltd
and
xchg
in
mov
cmp
sub
out
pushf
push
call
jns
mov
cwtl
inc
gs
sbb
and
xor
sub
movsb
jg
addr16
push
jns
std
cltd
dec
push
jo
mov
pop
push
pop
cmc
inc
jg
cmovg
test
pusha
jle
imul
and
popa
inc
fcoml
add
stc
cmp
ds
xchg
cltd
push
dec
sub
mov
or
pop
sbb
enter
lods
movsb
insl
mov
push
out
std
adc
xchg
push
aad
pop
or
jle
adc
cmc
sub
or
cmp
loope
or
movaps
aad
cmpsl
xchg
lds
enter
and
pop
leave
sub
adc
adc
inc
jp
cld
mov
push
sbb
scas
or
push
mov
aad
and
cmp
cwtl
loop
add
divl
jge
xlat
fists
out
xor
lods
jbe
mov
loope
fwait
ret
pop
push
dec
xchg
stos
add
out
jbe
sbb
dec
pop
mov
mov
fsubrs
add
xor
sbb
pop
cmp
jae
mov
sub
and
jbe
in
xchg
sbb
gs
adc
in
mov
sub
jb
jno
ds
in
mov
gs
notl
mov
adc
jbe
outsl
into
nop
dec
in
mov
xchg
push
pop
std
ficoml
ret
stos
gs
dec
mov
and
call
mov
jecxz
push
aas
les
or
ljmp
fildl
xor
subl
pop
cmpsl
push
push
mov
xor
ficompl
or
int3
xor
pop
mov
std
and
fs
xchg
inc
mov
xchg
or
out
jecxz
stos
lahf
aad
inc
aad
sti
in
inc
adc
jb
xchg
cmpb
pop
mov
pop
mov
xlat
push
movsb
and
sbb
or
and
add
sbb
in
mov
test
inc
out
fisttpl
or
add
xchg
orb
mov
lret
mov
sbb
lret
inc
sahf
xor
test
inc
xchg
stos
inc
imul
and
sarb
xchg
inc
aad
fsts
jmp
mov
aaa
push
mov
or
loope
jo
mov
es
mov
pop
dec
xor
jne
push
adc
fwait
xorb
lds
mov
test
gs
aam
dec
cld
xchg
xchg
mov
lods
repz
aad
pop
mov
jg
mov
imul
xchg
mov
fwait
mov
jnp
xchg
jl
pop
jp
sub
sahf
cmpl
xchg
add
sub
sti
xor
adc
add
gs
cmp
pop
jnp
inc
pop
add
mov
push
inc
xor
lret
js
cli
jecxz
pop
pop
xor
cmp
mov
xchg
mov
cmp
sub
jg
mov
daa
and
lret
sbb
cmp
out
out
inc
pop
mov
rcrl
insb
aad
les
fwait
adcl
mov
xchg
mov
ja
icebp
imul
fnstenv
push
lret
mov
jmp
out
dec
call
dec
jo
outsl
lods
repz
pop
stc
pop
sbb
push
mov
scas
push
in
pusha
ljmp
in
rorl
imul
lret
pop
mov
fstpt
and
cmp
lock
push
mov
loope
rorl
dec
enter
popf
dec
icebp
rcr
inc
int3
fsubrl
pop
sahf
adc
ret
xchg
push
sbb
pop
pop
dec
dec
test
sub
imul
movb
sahf
out
stos
mov
dec
pop
jo
fnstcw
jbe
adc
push
lock
jge
testb
enter
mov
icebp
xlat
push
mov
mov
xchg
rcrl
jae
xchg
sahf
aad
sbb
ficompl
mov
push
mov
out
pop
pop
dec
sub
and
push
test
clc
ret
mov
test
lret
sub
sub
pop
adc
shrb
jbe
aas
or
aas
xchg
fcmovb
push
adc
inc
jg
push
dec
adc
aad
je
dec
aaa
add
popf
add
xorb
sub
add
xchg
cmp
js
js
push
push
xlat
sbb
xchg
popf
testl
in
loope
loop
sbb
pop
lods
xor
enter
xor
push
outsb
inc
push
mov
bound
sub
bound
add
leave
adc
imul
divl
movsl
roll
add
mov
jbe
fs
sti
push
push
aaa
ss
xchg
jb
test
add
mov
out
adc
mov
and
adc
ret
popf
ret
out
push
jp
lahf
movb
add
mov
pop
jp
loopne
jnp
mov
arpl
cmc
dec
sti
mov
imul
pop
xor
pushf
sub
pop
test
add
in
add
pop
cmp
loop
dec
iret
jle
mov
sub
push
popf
adc
mov
aam
jb
xchg
push
dec
mov
aad
mov
pop
mov
sbb
das
and
jle
ror
jno
xchg
imulb
aaa
push
roll
test
sbb
push
sub
jecxz
dec
push
lods
jmp
scas
push
dec
sbb
sbb
jl
repnz
fidivrl
jne
mov
ss
mov
cltd
pop
mov
xchg
sahf
mov
xchg
fsubrl
es
test
sub
sub
cmp
sbb
mov
out
pusha
sbb
jecxz
cltd
dec
mov
cmpsl
sti
arpl
cmpsb
je
jbe
or
in
sbb
imul
mov
ficompl
pusha
in
shll
test
bound
push
icebp
dec
icebp
jno
adc
push
jo
call
sar
pop
inc
test
shl
ret
jnp
mov
inc
xchg
mov
clc
test
inc
cmp
aaa
aad
pop
and
icebp
push
cs
aam
mov
fwait
loop
push
xchg
in
addr16
push
and
cmp
fildll
test
ja
push
leave
or
mov
es
fs
popf
mov
jns
addr16
sar
sarb
or
pushf
dec
or
cmp
xor
mov
pop
adc
mov
test
dec
inc
mov
lretw
in
int3
cltd
in
mov
frstor
adc
dec
sbb
aaa
pop
xchg
push
mov
or
loopne
ljmp
xor
pop
pop
data16
mov
pop
dec
and
pop
xchg
sbb
jne
imul
sub
mov
xor
cmp
shll
mov
jae
cmpsb
iret
add
mov
out
aaa
cmovne
aad
inc
xor
mov
ret
test
xchg
movsl
mov
sub
cltd
xor
int
mov
dec
adc
int
rcll
shl
dec
addr16
lock
mov
int3
push
lds
push
xchg
pop
mov
pop
push
icebp
pushf
mov
inc
ja
dec
pop
pop
bound
or
enter
jae
inc
dec
pminsw
out
push
stc
mov
cmp
cmp
daa
dec
repz
cld
sub
jb
mov
and
mov
and
jns
jnp
push
dec
mov
jns
mov
and
movsb
cmp
pop
aam
sub
jge
xchg
pop
xor
addl
shlb
insl
outsl
jmp
rcll
outsb
int
mov
lcall
gs
jp
cmpsb
popf
popl
dec
cli
pushf
add
enter
push
cli
in
ljmp
es
mov
adc
aaa
aas
xchg
lret
pop
push
jo
movsb
push
cmpsb
sti
ret
jmp
xor
out
out
inc
dec
lock
mov
sub
mov
stos
adcl
data16
mov
iret
push
sub
push
rcl
add
aad
or
inc
sbb
stos
insl
pop
popf
mov
cwtl
cmp
sbb
sub
je
testb
repz
ljmp
loop
cmc
jo
sbbb
add
push
or
mov
popf
gs
cmp
rcrb
push
shr
and
mov
popf
int
fnstenv
int3
fdivrs
repnz
in
movsl
repnz
ja
outsl
push
dec
jns
jecxz
aam
mov
push
pop
insl
jnp
jecxz
mov
test
sbb
lock
lret
pop
mov
adc
jmp
popf
mov
cwtl
loop
movsb
mov
sbb
dec
sub
jle
das
dec
cmp
mov
inc
rcrl
je
inc
ret
pop
movb
jo,pt
stos
ret
mov
sahf
jle
pop
nop
out
add
shrl
push
mov
je
cmp
imull
sti
cmp
cmp
dec
je
pop
lea
mov
pop
cmp
lcall
adc
cs
xchg
lcall
icebp
mov
dec
adc
je
dec
dec
addr16
js
data16
mov
add
ja
push
inc
pop
add
ret
inc
or
xchg
adc
add
rolb
push
xor
dec
adc
add
test
inc
mov
inc
xor
or
ret
jne
loop
sbb
push
adc
push
jge
push
pop
mov
stos
dec
cld
mov
test
int3
lret
or
sahf
fldz
push
pop
gs
push
pop
hlt
daa
lret
cmp
xor
push
cmp
mov
call
call
inc
repz
and
repnz
xchg
pop
aam
inc
sub
xor
mov
nop
jb
call
pop
fsubp
and
pop
jle
xor
jmp
sahf
cmp
dec
dec
dec
scas
xor
xchg
xchg
push
rorl
push
jg
inc
xor
cmpsb
stc
cmp
aaa
sub
lret
popf
inc
jle
xchg
lahf
adcl
xchg
inc
insb
rcrb
jle
test
addr16
cmp
or
mov
stos
bnd
clc
imul
cmc
inc
and
adc
jg
cmc
and
loope
dec
es
mov
mov
jo
xor
sbbl
into
mov
jle,pn
push
mov
in
mov
call
xchg
shrb
jge
dec
mov
imull
das
call
cld
jb
stc
push
dec
rcrl
ja
ds
adc
fwait
or
aas
dec
dec
in
es
leave
cli
sub
jns
fcomip
mov
mov
mov
ret
cltd
mov
jmp
jmp
dec
enter
icebp
pop
in
mov
mov
stos
mov
mov
or
adc
std
rcrb
in
sbb
out
ljmp
sbb
add
sub
lea
xor
xchg
stc
lock
imul
fs
jl
loopne
dec
mov
pop
push
test
sub
inc
mov
fucomi
mov
add
jno
xchg
sahf
fwait
insl
stc
pop
fidivl
cmp
out
or
shrl
xchg
pop
pop
cltd
movsb
inc
aad
push
push
inc
and
repz
cld
add
inc
sbb
fs
pop
xchg
pop
lahf
sbb
add
jne
inc
cmp
fwait
lds
clc
push
in
shlb
das
fstpt
mov
pop
and
push
inc
addr16
fs
mov
popa
sbb
xchg
rcr
xor
sub
xchg
mov
dec
sti
loop
xchg
inc
rcrb
in
bound
mov
test
fsubp
mov
insb
add
mov
xchg
movsl
or
lods
enter
mov
insb
or
fisubrl
fdivrs
stos
stos
stos
xchg
push
enter
jne
pop
mov
jbe
dec
push
cs
iret
inc
aaa
lcall
lret
pushl
out
push
sbb
fbstp
sbb
leave
ljmp
dec
mov
enter
dec
pop
pusha
ds
cwtl
daa
stos
xchg
sub
inc
lcall
movups
sbb
jecxz
pop
jno
int
clc
cmp
jne
scas
shrb
scas
xchg
test
push
sti
mov
lahf
xor
xchg
bound
mov
inc
aaa
fdivp
in
arpl
movsb
sbb
push
push
xorl
fstpt
pop
shrl
aad
fadd
jp
ljmp
ret
adc
repz
mov
mov
movsl
jo
mov
jno
mov
cmpsb
sub
imul
dec
dec
mov
stos
in
hlt
ds
sub
jl
fidivs
out
dec
mov
fildll
lods
outsl
sbb
rcrb
loope
lcall
pop
lds
push
cli
push
sbb
mov
outsl
xorps
xchg
aam
jge
jl
scas
out
lret
mov
psrlq
dec
cmp
and
je
mov
pop
pop
or
cmp
gs
pop
push
rolb
add
push
jae
cs
js
push
sarl
or
add
xchg
lock
cwtl
fisubrl
popa
xor
inc
stc
pop
rcl
fildl
and
sbb
cmp
jae
pop
lock
repnz
xor
add
int
mulb
les
inc
mov
stc
mov
adcl
mov
fisubrs
dec
and
add
repz
stos
decl
rcrb
clc
inc
dec
in
aas
test
dec
icebp
pop
mov
movsl
ljmp
shl
inc
jge
sub
xlat
gs
jmp
lds
or
orb
xor
popa
jg
std
push
mov
or
cmp
push
mov
sbb
dec
pop
dec
les
inc
xchg
xchg
mov
xchg
push
sbb
insb
sarl
dec
xor
sub
xor
add
sbb
scas
ror
int3
lret
adc
popf
xchg
arpl
in
dec
xor
push
pop
sbb
adc
testb
xchg
cltd
mov
xchg
jmp
gs
mov
pop
push
or
sub
push
cltd
sahf
push
mov
jae
and
sub
xchg
test
or
sub
sbb
dec
mov
js
fildll
dec
cmp
loope
in
mov
fcomps
jb
inc
jmp
ret
inc
add
loop
pop
push
in
mov
inc
shrl
pop
sub
lret
ljmp
mov
mov
jnp
dec
mov
mov
movsb
mov
mov
mov
add
lcall
nop
xor
and
xchg
xor
jnp
mov
mov
mov
or
roll
hlt
adc
pop
dec
testb
jge
cmpsb
or
inc
repnz
dec
mov
mov
addr16
fs
push
xchg
ljmp
in
push
add
cwtl
cmp
xor
sub
pop
mov
enter
add
jns
cmp
out
pop
lret
out
fistpll
cmp
sub
mov
adc
pop
stc
dec
jmp
lahf
imul
xchg
icebp
clc
stc
pop
ret
mov
dec
adc
ret
jl
dec
jg
mov
pop
sbb
ljmp
insl
addl
lods
xlat
cltd
inc
jp
mov
add
scas
ret
jg
in
mov
adc
xchg
lds
jle
or
data16
mov
in
jmp
dec
lcall
sub
mov
mov
clc
cs
and
lock
sti
es
pop
ss
leave
mov
int
jns
movsb
imul
cmp
jbe
insl
mov
into
push
data16
xor
and
adc
fsubrs
or
cmp
pop
out
pop
pop
push
add
shll
cmp
mov
jl
test
cwtl
sbb
es
pusha
add
ret
lods
adcb
mov
sub
addr16
ds
sbb
fld
cmp
cld
xchg
xchg
stc
aam
sub
fs
pop
add
es
iret
out
adc
hlt
cmpsb
sub
mov
adc
pushl
shlb
jo
push
outsb
mov
aam
push
mov
test
cmp
addr16
mov
pop
mov
push
mov
add
repnz
mov
xchg
mov
xor
jbe
cmp
imul
dec
ret
fnstcw
out
adc
or
addr16
push
sbb
cmp
mov
out
ret
sbb
push
add
fisttpl
add
jnp
sub
test
xchg
int3
lods
mov
fcomp
pop
nop
fildl
inc
jmp
sbb
rol
xchg
dec
jle
es
xor
push
xor
pop
cmp
mov
jecxz
lea
cli
and
inc
or
loope
sar
and
fistps
iret
call
push
nop
sub
mov
cmp
inc
mov
mov
stos
out
ret
cmp
imul
and
jl
test
mov
js
push
dec
cmp
push
adcb
mov
mov
es
pop
test
bound
scas
stos
in
or
sarb
test
scas
jl
sbb
dec
push
pop
xor
cmp
add
shll
fwait
cmp
mov
push
cmpsl
mov
test
sbb
aad
mov
push
add
pop
adc
inc
in
incb
mov
shrb
aaa
imul
pop
mov
sub
mov
sbb
loop
cmp
and
movsb
add
fwait
incl
jge
ds
cmp
iret
or
cmp
sar
sub
aad
xchg
xchg
lret
push
and
outsl
add
and
inc
ret
mov
push
dec
dec
leave
jmp
xchg
cmp
add
cmp
inc
and
clc
movsb
shlb
loope
imul
pushf
adc
loopne
inc
push
lcall
fistl
push
and
or
fidivrs
negb
aam
repnz
jle
mov
ret
cmp
fsubrl
mov
jle
imul
add
ljmp
push
gs
mov
adc
test
dec
test
lods
mov
hlt
mov
jae
push
mov
in
sbb
mov
lret
mov
inc
in
sbb
sbb
ljmp
test
out
xchg
cs
sbbb
and
out
jmp
pop
stc
sbb
arpl
mov
mov
mov
xor
adc
pop
adc
test
lret
or
push
mov
outsb
xchg
loope
pop
sbb
jo
push
aad
cmpxchg
in
ljmp
nop
nop
push
out
or
xchg
push
clc
mov
push
dec
hlt
aad
xor
xchg
mov
mov
adc
out
mov
dec
test
dec
push
pop
mov
stos
mov
and
pop
add
popa
punpckldq
in
xchg
fisttpll
dec
pop
inc
std
ret
lods
xchg
fmul
lea
lret
lea
jmp
push
xor
sub
stc
mov
jle
lods
push
fildl
sti
pop
ljmp
push
movsb
pop
jg
or
mov
clc
sbb
int3
cmp
mov
js
test
pop
jo
pop
fidivrs
sbb
mov
mov
or
inc
daa
fimull
add
stc
ja
mov
or
lods
lods
jge
nop
cmpsb
rol
sub
mov
or
fcmovbe
pop
lods
push
inc
jge
lock
imul
and
test
push
data16
shlb
ljmp
mov
dec
pop
fsub
dec
idiv
mov
rclb
adc
test
loopne
cs
pusha
pop
and
outsb
rcl
sbb
stc
bswap
inc
pop
sbb
sub
cmp
add
in
rorb
lret
mov
jno
pop
fidivrs
mov
lock
mov
lods
mov
push
sti
fidivrs
lret
shll
mov
adc
jg
inc
mov
test
cli
gs
outsl
push
jae
movsl
mov
in
sti
xchg
test
adc
js
cmpsb
push
mov
jle
xchg
jecxz
cmp
fs
loope
ret
iret
mov
test
jbe
or
loop
rcl
lods
in
or
add
sbb
mov
xor
inc
out
or
cmpb
lret
mov
hlt
lods
ja
dec
push
pushf
and
mov
in
push
push
popf
push
arpl
jbe
aad
mov
enter
rol
mov
jnp
dec
test
adc
xchg
jbe
xlat
mov
jmp
in
pop
fidivrs
xor
mov
in
xchg
iret
leave
je
cs
mov
in
xchg
sbb
sub
push
or
ds
pop
mov
cmc
sub
and
dec
frstor
in
xchg
mov
int3
sbb
xor
xorb
sbb
jmp
in
xchg
idivl
mov
ss
and
and
xor
lods
or
mov
in
jne
lods
ja
mov
dec
aam
pop
repnz
es
mov
lea
movl
sahf
xor
inc
cmp
in
in
push
outsl
addr16
stc
mov
es
cmc
push
jge
xchg
mov
fldt
mov
push
adc
lods
xchg
mov
xor
jbe
bound
cmp
xchg
push
out
jmp
adc
sub
push
sbb
mov
jb
push
pop
fs
xlat
lods
movsb
cmp
rcr
adc
out
inc
faddp
inc
or
jae
xchg
xchg
cmp
xchg
sbb
inc
pop
insl
sub
add
lahf
mov
mov
push
cmp
sub
mov
xchg
outsl
jmp
or
add
andb
lods
in
jns
aas
cmp
hlt
cmp
pop
inc
repnz
xor
pop
int3
fnsetpm(287
movsl
inc
cmp
xor
ja,pn
insb
mov
xchg
xor
lret
xor
ljmp
lret
subl
cmp
rolb
push
xlat
out
mov
xchg
aas
and
mov
leave
aas
push
js
push
or
dec
dec
adc
add
push
push
mov
sahf
movsb
cwtl
xor
xor
dec
fldt
outsb
push
xchg
and
les
aam
jbe
lret
add
shlb
sub
and
in
popf
jmp
cmp
fbstp
fwait
mov
mov
out
mov
test
mov
mov
cmpsb
xor
mov
rcr
loopne
aad
sub
xor
nop
and
aaa
in
lcall
in
jmp
lock
jp
jl
jle
das
add
testl
push
ret
cltd
pop
xchg
fisubrl
rcll
xor
mov
std
push
out
mov
push
pop
ja
dec
dec
dec
dec
mov
aad
stos
aaa
cmc
mov
xchg
lods
mov
rcr
dec
mov
vpmovmskb
ja
jnp
fbstp
stc
sbb
push
push
push
pop
das
cltd
mov
out
jecxz
icebp
cli
sbb
xchg
mov
pop
dec
scas
pop
scas
fsubr
in
mov
int3
mov
jg
mov
fisttps
mov
in
repnz
mov
ds
mov
fmulp
outsb
xchg
mov
movsb
xlat
ja
repz
sti
scas
cmp
pushl
clc
jl
mov
push
and
push
xchg
jecxz
hlt
cltd
test
or
cwtl
adc
scas
cli
xor
int3
cmc
xchg
scas
shrb
pop
adc
notb
decb
xchg
scas
loope
cltd
lods
stos
jns
xchg
mov
push
mov
out
mov
in
adc
out
std
mov
fninit
in
and
icebp
fdivp
andb
fcom
std
jne
daa
lahf
rsm
stc
push
stos
push
xchg
aam
inc
inc
fldcw
xor
inc
xchg
jae
cmp
fwait
es
xchg
rolb
popf
fcmovb
cmp
cmc
and
lock
dec
or
jbe
mov
sbb
push
lret
mov
add
lahf
lgdtl
adc
xchg
or
addr16
repnz
jne
sub
pop
aam
enter
and
insl
mov
lods
add
in
in
sbb
push
xor
aaa
fstpt
loop
inc
addr16
jo
aaa
test
jae
ret
rcr
arpl
cli
fdivs
mov
mov
movsl
iret
or
or
lret
pop
out
ja
push
sub
call
inc
ja
xchg
pop
addb
add
movsb
sahf
push
lds
xchg
movsl
aaa
jmp
mull
int3
aam
push
mov
jnp
ret
jns
xchg
mov
lods
gs
xchg
out
cmp
div
mov
sbb
mov
scas
pop
pop
ret
ds
xor
out
repz
jne
filds
jmp
pop
pop
jmp
mov
mov
cmc
loopne
fisttpll
dec
scas
lods
jae
jae
push
aaa
jb
and
mov
cwtl
adc
imul
lahf
adc
jmp
fldt
jge
je
std
mov
test
bswap
bound
test
and
adc
or
xor
scas
mov
xor
arpl
decl
pop
stos
or
sbb
sbb
lds
insb
push
inc
and
push
pop
mov
call
test
add
sbb
push
outsl
insb
push
adc
out
outsb
aas
sahf
data16
dec
shll
ror
and
popf
in
xor
mov
out
dec
in
test
pop
and
add
stos
mov
std
ss
mov
sub
lods
sbbl
xlat
and
fldcw
mulb
jb
loop
fcom
cltd
mov
mov
pop
pop
mov
mov
jge
sub
loope
fcmovnu
stos
cmp
push
dec
icebp
or
icebp
fs
mov
test
cmp
int3
add
cs
mov
addr16
ret
test
xchg
pop
xchg
cmp
js
fwait
jns
popf
test
dec
insl
rcrl
out
jbe
jbe
popf
add
xor
inc
pusha
mov
scas
cwtl
pop
jge
jp
jne
cmp
inc
in
pop
fimuls
lods
ja
inc
push
imul
popf
inc
xchg
cmp
add
jbe
out
cltd
inc
inc
dec
inc
mov
jb
inc
mov
leave
xchg
xor
ret
sub
jle,pn
iret
mov
adc
mov
idiv
xor
inc
ljmp
pushf
mov
orb
lret
repz
pop
cmp
adc
in
adc
cli
in
cld
push
mov
lret
in
pop
pusha
sbb
mov
nop
stc
jb
lea
pop
rcrl
add
cmpsb
cmpsb
pop
call
adc
inc
add
jp
loope
movsl
add
ffree
ret
hlt
mov
fsubrs
pop
cmp
jecxz
jno
mov
and
or
mov
inc
lahf
pop
add
ret
test
cwtl
adc
and
add
scas
push
add
sbb
pop
jno
pop
ret
add
dec
insl
jnp
lret
lock
cmpsb
pusha
add
xchg
jmp
je
shrl
mov
push
mov
stos
mov
xchg
jecxz
cld
sbb
repz
inc
inc
lret
jp
popa
xchg
jno
add
lahf
iret
lds
mov
add
or
stos
repz
add
push
std
xchg
pop
push
adc
xor
jle
loopne
push
popa
xor
pop
aas
mov
popa
mov
and
fdivl
lods
pop
push
and
xchg
mov
jae
xchg
mov
adc
mov
fistpl
out
push
lahf
in
push
push
js
cmp
inc
push
clc
popf
inc
mov
jbe
ret
and
mov
lret
xchg
xor
es
movsl
fwait
or
xor
pop
jecxz
xchg
inc
int3
xchg
mov
repnz
cmpsb
mov
push
rcrl
push
mov
sub
sarb
stos
shll
mov
xor
push
pop
mov
test
sub
and
fcmovnb
dec
subl
cld
xchg
pop
lds
iret
xchg
pop
fldt
xchg
mov
les
repz
les
pop
inc
out
mov
push
mov
daa
fldt
push
mov
pop
and
loop
pop
sbb
push
in
pop
ljmp
daa
and
cmp
movsb
movsb
pushf
mov
push
jl
rcrb
mov
imul
jbe
push
mov
outsl
dec
xchg
test
adc
lods
xchg
jns
mov
jbe
xchg
lret
popf
sbb
push
imul
cmp
jmp
and
jo
in
push
cmp
cmpl
lcall
rclb
imul
sarb
and
xchg
xor
bound
rcll
in
mov
xchg
ds
out
adc
mov
jno
jl
mov
bound
test
in
xchg
subl
cwtl
jmp
pop
addb
xchg
call
ret
jl,pt
mov
mov
out
cmp
mov
dec
push
cmp
xor
adc
push
xor
push
inc
mov
mov
push
ret
add
jbe
push
mov
test
adc
xchg
sbb
xchg
push
in
add
push
xor
adc
or
sahf
ljmp
pop
insl
cs
xor
push
lret
mov
jecxz
and
pop
das
roll
frstpm(287
cmp
hlt
in
cmpsb
push
cmp
adc
les
pushf
lods
sub
jb
mov
lcall
push
jbe
icebp
push
mov
pop
mov
insb
insl
jecxz
in
into
xchg
inc
or
or
xchg
add
xchg
fimuls
pop
mov
push
mov
lods
mov
adc
and
inc
jp
inc
es
std
icebp
add
repz
mov
aam
pop
pop
std
imul
int3
push
shrl
bound
and
xchg
pop
pop
pop
push
popf
sarb
xchg
repz
subb
jae
push
shrb
pop
outsb
cli
lock
mov
ret
or
int
shll
sbb
movb
roll
imul
mov
dec
call
inc
leave
or
adc
out
out
mov
sbb
insl
cmpsb
sahf
out
mov
je
aam
add
or
inc
sbb
pop
stos
and
cmp
pop
out
inc
and
repz
lcall
or
dec
jle
mov
push
into
in
lret
add
mov
push
adc
push
sub
and
popa
cmp
push
test
push
out
dec
cmp
fsub
cmpxchg
daa
dec
out
jg
sbb
int
push
repnz
cli
or
js
imul
out
in
cld
xchg
push
mov
fwait
mov
xchg
idivl
test
pop
ja
clc
stos
cltd
xchg
inc
xorps
xor
das
es
lock
and
pop
jmp
sbb
pop
or
push
or
mov
fimull
jl
mov
and
int3
in
xchg
loop
sub
xchg
mov
aam
fadd
addr16
mov
push
fsubrl
mov
ret
push
lret
aam
dec
inc
mov
jno
add
jmp
xor
loop
mov
adc
sbb
insb
aas
xchg
sbb
pop
insl
lock
xchg
mov
insb
mov
gs
adc
sub
adc
es
fstpl
arpl
bound
mov
jae
add
and
lds
orl
jg
lahf
mov
xor
hlt
loopne
add
and
pop
pop
mov
popl
int
sub
arpl
rcll
adc
test
mov
sbb
fsubrl
xchg
pop
icebp
out
sarb
dec
jb
into
call
dec
and
popf
test
pop
imul
pusha
push
cwtl
fcom
jl
stos
je
icebp
add
daa
adc
jg
fisubrl
and
js
inc
xor
movsl
vpinsrw
hlt
lcall
jne
fnstsw
push
push
mov
sub
orl
xchg
adc
sbbb
pop
jp
in
clc
push
stc
mov
push
mov
push
xor
das
xchg
pop
dec
out
mov
mov
pop
clc
mov
es
or
mov
pop
sbb
inc
stc
push
jmp
sbb
stc
test
add
pop
xchg
mov
mov
xchg
sub
xchg
and
push
sbb
xchg
xchg
jmp
push
les
les
inc
mov
in
subl
test
jmp
gs
hlt
pop
pop
das
mov
sub
lret
xchg
dec
lret
aaa
mov
loop
orb
xchg
cmpsl
rcll
xchg
xor
inc
jl
sbb
add
add
popf
jmp
mov
jge
pop
mov
iret
inc
sub
jmp
repz
mov
xchg
vandnps
lret
lret
inc
push
inc
sbb
jno
or
repz
int3
enter
cmp
idivl
cmp
sub
push
jne
in
orl
rolb
rol
and
stos
push
fwait
lds
jle
in
and
sub
ror
mov
fisttps
cltd
pop
cmp
xor
pop
dec
push
subl
mov
jno
in
dec
outsb
cmp
cmp
sahf
daa
pop
in
xlat
cs
bound
inc
jno
imul
mov
mov
jp
inc
loope
jb
xchg
add
jno
cs
loope
mov
adc
push
mov
popa
fldcw
into
mov
sub
pop
sbb
mov
push
xor
lcall
xlat
jno
xor
pop
enter
cmpsb
frstor
pop
out
xor
pop
mov
xchg
dec
and
adc
mov
pop
test
xchg
sub
push
icebp
and
out
movl
loop
std
jno
push
adc
pop
sub
repz
rorl
cli
inc
push
pop
mov
xor
sub
dec
imul
int
cmp
in
ljmp
jae
mov
dec
mull
leave
mov
fidivrl
xor
loope
dec
push
mov
outsl
or
sbb
inc
cmp
inc
push
addl
std
mov
das
mov
jmp
sub
ret
push
dec
imul
pop
fsubs
push
test
cmc
jbe
imul
add
mov
lcall
cmp
pop
xlat
mov
std
jle
lret
mov
stc
shrb
or
cmp
mov
xor
ficoms
sbb
xlat
pop
jns
inc
idivb
movsb
std
and
mov
gs
hlt
dec
sub
sbb
mov
push
lret
dec
cli
xor
mov
push
adc
rcrl
ja
pop
fdivs
sahf
dec
sbb
imul
fidivrl
scas
fmuls
or
sahf
fisubs
mov
in
loope
push
sbb
aas
test
ss
sbb
xchg
xor
inc
stos
fwait
push
out
cmp
push
push
jo
mov
xchg
sarb
popf
dec
mov
pop
das
aaa
xchg
mov
jne
sub
mov
push
cmp
int3
out
aad
add
mulb
cmpsl
xchg
aaa
push
and
mov
ret
test
cmp
mov
inc
push
sahf
jbe
jno
movsl
push
and
ja
mov
xchg
arpl
inc
into
xchg
jo
mov
cmc
in
nop
fsubrs
xchg
xchg
jge
enter
inc
scas
xor
cld
dec
mov
mov
movsl
ljmp
sub
aaa
movsb
xchg
aam
mov
push
nop
push
dec
pop
test
sub
push
push
cli
dec
scas
adc
rclb
sub
lret
dec
sub
ret
cmpsl
push
jbe
dec
pop
or
rolb
xchg
mov
ds
mov
nop
daa
rorb
scas
dec
idivb
and
dec
ds
jle,pn
fcoms
fwait
adc
mov
mov
out
lret
je
lret
ss
mov
push
or
cmp
in
fmuls
in
cmp
mov
cli
push
or
inc
enter
dec
sarb
js
add
test
xchg
xor
or
mov
mov
sbb
dec
xor
ret
sahf
dec
pop
sbb
ja
add
cmp
mov
push
insl
hlt
mov
mov
outsb
cmpsl
mov
and
inc
mov
mov
mov
sub
cmp
orb
jl
mov
rclb
cmp
pop
dec
lock
lea
frstor
data16
call
xchg
jno
gs
xchg
lea
jns
mov
xlat
dec
dec
jae
jl
jp
mov
pushf
mov
dec
es
stc
ret
js
loop
adc
and
repnz
cmp
and
cwtl
inc
daa
popa
dec
shlb
xchg
jns
mov
push
movsl
sbb
jno
jg
sub
call
fs
pop
std
xor
int3
inc
test
mov
ret
xchg
jmp
dec
mov
pop
pop
mov
stos
jmp
rcrl
xchg
dec
push
xor
adc
dec
sbb
add
cmp
fisubrs
mov
icebp
std
in
and
add
out
mov
rolb
sub
push
outsb
mull
ss
inc
xchg
cmp
in
mov
adc
adc
stos
xchg
testl
jno
pop
ds
or
mov
xlat
and
or
and
lret
pop
xor
push
ja
xchg
out
cltd
or
insb
arpl
jl
in
imul
shr
push
mov
add
imul
inc
jae
cwtl
int
and
xor
mov
outsb
push
add
ja
shlb
or
mov
sbb
mov
mov
ljmp
ljmp
adc
lock
popf
cli
fbld
push
xchg
repnz
aam
cmpsb
or
pop
imul
cmc
leave
push
gs
mov
sti
push
adc
imul
imull
dec
inc
add
cmpsb
pop
jno
jl
pop
jns
push
mov
lds
or
scas
sbb
cmp
xor
add
dec
cmpsb
js,pt
or
xor
lret
sub
and
sbb
cmpsl
add
lods
mov
xchg
ljmp
out
in
scas
xchg
mov
jge
sahf
mov
push
sbb
push
add
out
loopne
cmp
enter
mov
cmpsl
mov
mov
movsb
or
insb
xchg
xchg
mov
sbb
sub
xchg
dec
or
pop
ficompl
lods
pusha
xchg
sbb
mov
enter
push
or
push
je
and
stos
push
push
pushf
hlt
push
inc
pop
sahf
pop
cwtl
imul
xchg
dec
fldcw
outsb
stos
and
adc
es
fwait
stc
leave
in
scas
pop
jmp
sub
push
pop
pop
in
push
push
lret
addr16
jbe
ljmp
jnp
stos
cmc
lret
xchg
pop
ror
ret
les
ljmp
rcr
mov
push
and
push
lds
xchg
bound
mov
cmp
stos
xorb
aaa
sti
pop
jnp
mov
scas
mov
sbb
enter
dec
mov
push
shll
popf
in
arpl
or
je
lcall
bnd
jno
inc
and
jp
mov
mov
jnp
inc
ss
arpl
or
dec
scas
call
pushf
test
dec
jae
in
push
insl
mov
push
pop
jns
xchg
push
xchg
mov
or
push
insb
pop
dec
dec
mov
cmpsb
je
mov
adc
pop
icebp
xor
js
push
push
pop
push
mov
inc
adc
xor
sar
fmuls
or
sbb
xor
or
and
das
ret
lods
in
and
ljmp
pop
mov
jns
mov
iret
sub
and
test
mov
les
scas
push
nop
push
lret
or
scas
mov
lcall
stos
shll
in
push
or
jo
mov
jg
push
pop
pushf
mov
data16
or
gs
mov
aad
rorl
dec
shl
repnz
fcomps
fwait
mov
inc
and
mov
stc
dec
nop
inc
addr16
xchg
jp
cmp
das
xor
mov
mov
out
xchg
daa
jb
jb
in
cmp
inc
pushf
mov
cmp
in
sub
insl
dec
cld
imul
xor
jg
xor
arpl
jo
xchg
pusha
lahf
es
insb
loopne
add
dec
rcrb
aas
dec
dec
rorb
pop
in
sub
cltd
jecxz
inc
aaa
fs
je
nop
cmp
loope
frstor
leave
mov
orl
aas
mov
mov
push
add
arpl
mov
xchg
xchg
cld
or
push
push
popf
dec
shlb
cmp
cmp
or
mov
addr16
ds
sbb
in
in
add
mov
mov
imull
mov
aaa
roll
sub
push
outsl
adc
lret
pop
imul
adc
adc
push
pop
or
subb
je
imul
fdivs
je
dec
ds
aam
jp
or
sbb
aam
xor
ja
sbb
inc
fsubl
inc
inc
outsl
mov
jmp
fiadds
cmc
sub
xchg
sub
jge
mov
jb
sub
nop
or
and
jmp
fadd
fldl
jp
mov
in
ljmp
dec
loop
mov
mov
dec
rep
mov
xor
int
scas
sub
int
int
pop
insb
xchg
fbld
mov
outsl
xchg
mov
xchg
inc
inc
insl
adc
out
sub
dec
add
jnp
and
push
rolb
or
loop
push
inc
int3
std
in
popl
loope
imul
dec
mov
and
jge
pop
mov
xchg
jae
cwtl
loop
fstpl
mov
xchg
pusha
xchg
and
dec
je
movsl
ja
push
in
mov
pushf
aaa
or
jb
js
js
xor
movsl
insb
cmpsl
adc
in
cmp
fildll
pop
push
outsl
push
jmp
xor
fs
push
rorb
shr
and
bound
xchg
pop
lea
out
cs
xchg
cmpsl
lcall
enter
ja
push
mov
and
out
jnp
mov
push
inc
or
xchg
pop
adc
sub
adc
mov
jns
pop
fnstsw
int
lea
xor
push
sbb
push
add
aad
fidivrl
lds
lea
push
aad
repnz
aad
enter
jmp
fmul
in
ret
dec
pop
in
xor
mov
mov
sbb
xor
dec
lret
or
andl
clc
jae
push
ja
xchg
cmp
xlat
dec
mov
scas
dec
adc
push
cmpsl
jae
mov
mov
imul
sbb
scas
pop
nop
sbb
iret
cwtl
jecxz
xchg
movsl
dec
mov
data16
or
cmpsl
scas
adc
daa
fidivrs
orl
cmp
gs
xlat
cli
in
mov
fwait
xchg
lcall
mov
dec
or
int
scas
jecxz
sbb
jae
icebp
test
in
pop
xor
fstp
ficomps
jmp
sbb
adcl
add
int3
xor
xchg
lret
dec
mov
std
in
out
cmp
xor
sti
fadds
mov
roll
aad
cmp
push
or
in
or
ljmp
add
js
out
inc
and
cmp
push
ret
enter
mov
addl
je
les
jb
inc
out
or
adc
mov
pop
int3
clc
fsubrp
jne
enter
or
push
dec
mov
fidivrs
js
push
push
xchg
scas
jae
lahf
xchg
mov
test
aad
mov
cmpsl
test
gs
push
aad
loop
add
ja
data16
sarb
jg
jns
ret
push
push
sbb
push
int3
push
sub
push
sti
aam
xor
xchg
xor
pusha
inc
jge
dec
inc
stc
jmp
lahf
mov
dec
push
sbbl
ds
add
rcll
xor
test
push
adc
jmp
vxorps
idivb
insl
or
cltd
adc
and
jae
cmp
lret
call
psrld
aas
jl
call
adc
adc
mov
sub
outsl
xor
std
mov
daa
xchg
push
arpl
insl
imul
sarb
fucom
mov
cmp
xor
mov
test
rorb
pop
je
out
inc
sarl
idiv
aam
dec
mov
adc
xchg
pop
xchg
fisubrs
dec
jecxz
xor
xchg
inc
das
bound
jg
adc
cmp
out
xchg
jb
scas
jb
jecxz
push
icebp
sub
add
cli
mov
push
aas
gs
mov
sub
outsl
push
jle
rcl
popf
jle
jnp
push
push
lds
out
pop
jecxz
ficomps
or
xlat
mov
ret
andl
xor
sub
push
lock
mov
imul
insl
xchg
cmc
inc
mov
adc
push
mov
cli
cs
lods
pop
jge
mov
mov
in
push
push
cmpsb
cmp
ljmp
repnz
dec
jge
jmp
sti
js
scas
xor
xchg
add
sub
inc
call
adc
mov
xchg
mov
insl
dec
out
adc
or
std
jae
into
pop
pop
popa
cmpsb
leave
adc
out
mov
inc
adc
lods
adc
std
loope
cmpsb
cmpsl
mov
in
data16
out
jb
and
mov
ds
mov
int3
jbe
jl
pop
sbb
add
adc
cmp
mov
push
in
push
cmpsl
scas
or
jns
dec
push
dec
inc
ss
int
sbb
add
adc
mov
adc
adcb
out
add
pop
iret
or
je
cmpsb
cmp
add
imul
mov
push
hlt
loope
rcll
cmp
fdivl
mov
daa
repz
ds
into
clc
es
dec
cmp
loope
das
mov
test
add
mov
outsl
xor
lret
aam
push
fiadds
push
push
stos
lcall
in
test
xor
es
push
fldl
inc
arpl
mov
push
mul
lcall
xor
and
cmp
and
sahf
push
daa
scas
cmp
fisttpll
xchg
add
mov
sub
mov
movsl
xchg
adc
mov
lret
sarl
iret
lret
pop
adc
xchg
push
mov
pop
fisttpll
rcrl
jnp
or
in
pusha
stos
mov
outsb
inc
add
sbb
xor
and
xor
sarl
cmp
sub
lcall
ljmp
cmp
add
push
iret
gs
icebp
mov
pop
push
ljmp
mov
push
jbe
jmp
add
pop
ret
mov
dec
cmpb
dec
fisttps
mov
aam
fimull
imul
pop
in
out
sbb
pop
adc
and
cmp
int3
fdivrs
xor
pop
outsl
xchg
jne
aaa
loopne
fcmovbe
and
fldcw
cmc
add
xor
stos
test
jmp
fnstsw
lods
outsl
xchg
add
xor
mov
fxtract
fidivl
cmp
dec
shlb
and
test
out
and
mov
sbb
add
rcrl
mov
out
pop
movsl
int3
ret
push
xchg
mov
pop
sub
mov
stos
repnz
pop
lret
pop
mov
mov
xor
rcr
xchg
cmp
jmp
add
ret
add
mov
stos
dec
test
lds
outsb
movsb
mov
pushf
cli
mov
ds
lret
outsb
test
inc
add
pop
fmuls
push
das
sarl
out
sub
mov
or
rorl
sbb
sbb
push
jnp
shr
loope
fists
mov
sub
popa
orl
in
shlb
inc
pushf
cmp
sub
jge
out
cmp
sbb
xor
fnstenv
jmp
scas
jo
jge
cld
xor
std
inc
call
movsb
xor
jns
jge
or
xchg
sbb
mov
mov
in
or
incb
loope
rcpps
pop
out
imull
ret
dec
outsb
xor
daa
lock
sbb
mov
cmpsl
mov
lock
mov
inc
icebp
mov
lcall
mov
push
repz
jbe
push
mov
mov
inc
push
insl
repnz
aaa
aam
pop
pop
cmp
pusha
ret
sub
outsb
lea
insl
adc
dec
lret
jecxz
xchg
in
jo
sub
scas
cmp
fmull
mov
jne
cmp
jns
lock
dec
stos
dec
mov
pop
mov
pop
ret
jae
inc
test
mov
bound
mov
pusha
call
pop
pop
es
push
pop
mov
dec
enter
pop
and
adcl
mov
xchg
vaesdeclast
dec
xchg
movsb
in
ja
in
add
xchg
icebp
cmpsb
fsubrl
enter
stos
inc
mov
jbe
mov
fnsave
push
ret
add
xchg
pop
xor
stos
fidivrs
xchg
int
in
mov
cmp
mov
add
xchg
cmpsb
push
imul
stos
ljmp
cmp
pop
lret
lret
notb
in
pusha
arpl
lahf
jbe
call
mov
mov
inc
xor
sahf
sbb
clc
clc
pop
in
setle
rorb
ds
sbb
xchg
or
sbb
pop
sar
loop
test
adc
shrl
ret
ljmp
ss
ficompl
jbe
pop
lods
cmp
fimull
lods
mov
sub
in
movsl
xchg
iret
dec
inc
aaa
stos
sub
clc
ss
sub
pop
outsb
iret
out
test
or
ret
sbb
cltd
xchg
enter
lcall
xor
mov
sbb
or
hlt
insb
hlt
mov
punpckhbw
xor
movsb
insb
sbb
sbb
or
mov
or
inc
rolb
andl
push
xor
ret
aad
or
and
fisttpl
stc
iret
cmp
xchg
js
lret
pop
data16
aad
pop
ja
xchg
outsb
push
xorl
xor
fistl
xor
fs
xchg
scas
insl
and
cmp
mov
pop
data16
cs
push
inc
dec
fmuls
mov
jne
adc
mov
ja
pop
or
aad
std
aaa
jmp
fstp
xchg
fmull
in
xor
decl
jge
xchg
decl
aaa
xchg
cmc
shr
mov
aas
jns
pop
out
into
mov
cmp
idiv
div
out
mov
xor
dec
sahf
sbb
xor
and
sbb
pop
mov
xchg
xchg
jmp
stos
mov
inc
mov
mov
in
push
sbb
mov
test
mov
pop
push
icebp
cmpsl
into
dec
push
adc
adc
mov
jae
cmpsb
int3
mov
mov
ds
cmp
mov
push
ret
dec
add
insl
or
push
das
pusha
cld
fists
push
out
mov
mov
icebp
jmp
sub
xchg
mov
andl
ljmp
jecxz
loope
xchg
iret
imul
jg
push
and
inc
cmp
sub
dec
sahf
icebp
adc
push
insb
stos
pop
repnz
sub
cmp
stos
sarl
inc
xor
pop
push
pop
push
dec
stos
cmpsb
dec
push
jns
pop
or
insl
mov
fisubrs
add
sub
push
jnp
loope
jno
pop
cwtl
fisubs
xor
xor
xor
inc
lret
jne
das
pop
fcmovb
mov
push
dec
mov
push
adc
mov
push
cmpsl
das
jno
inc
xchg
mov
push
pop
stos
xchg
add
xorb
insl
nop
mov
insl
mov
mov
decb
ss
stc
gs
je
scas
add
pushf
call
lahf
outsl
shr
shrb
mov
ret
cs
out
cmc
into
cltd
scas
bound
loope
xchg
pop
stos
out
out
nop
ss
sub
jge
in
fwait
shrb
sub
cmp
push
aaa
xor
pop
imul
xor
push
gs
out
aam
test
inc
adc
repnz
cmp
stos
dec
dec
aam
mov
mov
enter
sub
xchg
out
pop
sub
xchg
push
sbb
push
gs
jle,pn
fisttps
aaa
jno
xlat
popf
inc
pop
cmp
in
leave
push
or
int
and
imul
mov
movsl
xor
das
dec
dec
adc
ljmp
dec
sbb
cld
inc
sub
and
fwait
push
out
mov
or
out
ljmp
inc
xchg
int3
lock
in
sbb
or
aad
lea
pop
mov
insl
mov
xchg
inc
lahf
cmp
arpl
lock
dec
mov
push
or
jle
add
sarb
mov
test
xlat
and
aam
push
mov
xor
imul
jmp
lcall
jns
mov
xlat
lods
dec
mov
repz
mov
ret
sub
push
imul
insb
cmc
xchg
and
xchg
fistps
push
push
mov
push
sbb
orb
mov
xchg
sbb
push
sahf
les
mov
inc
xchg
xor
sub
or
pop
xor
jbe
test
imul
adc
lahf
xor
js
pop
bound
imul
push
dec
xchg
xor
push
pop
ds
sub
cmp
lods
ss
inc
pop
dec
inc
mov
xor
add
cs
add
into
fisubrs
enter
pop
popf
xchg
pop
rep
cmp
or
data16
outsl
pushf
fstpt
push
int
xor
fs
pop
arpl
or
xor
cs
test
cld
sti
lcall
mov
jecxz
inc
mov
mov
stos
in
xor
aas
lgs
mov
inc
pop
jg
jo
pop
xor
js
xor
xchg
adcl
push
test
inc
in
sbb
jmp
sub
pop
lea
mov
lahf
cltd
stos
xor
mov
push
outsb
hlt
rclb
shlb
push
pop
mov
push
int3
mov
loopne
nop
pop
cmp
sub
loop
push
sbb
inc
repz
xchg
sub
inc
push
ds
lods
stc
bound
movsl
mov
jns
lds
in
mov
and
movsl
sub
adc
pop
inc
les
push
jge
int
push
mov
fwait
adc
outsl
outsb
jns
pop
xchg
fsubr
repz
sub
test
pop
sbb
insb
pop
sbb
cltd
movsb
lods
pop
ficoms
dec
xor
scas
popf
push
popa
dec
dec
xchg
sub
psubw
lret
push
mov
sarl
dec
cmp
aas
aas
pop
outsb
insb
out
fisttpl
cmpsb
icebp
sub
push
dec
hlt
cmp
xchg
into
stos
lds
push
cltd
cmp
sarb
mov
fstpl
cmpsb
pop
pop
sbb
sub
lret
and
push
adc
sub
cli
sbb
and
pop
gs
xor
push
jb
clc
pop
ret
dec
mov
ficoml
push
push
or
lahf
pusha
sub
sahf
lods
dec
enter
xor
outsl
mov
push
ficoms
inc
ret
es
push
and
gs
push
inc
inc
leave
pop
stos
lret
cwtl
mov
mov
arpl
cmp
aad
jno
rep
sbb
jno
add
inc
ds
dec
scas
push
sbb
pop
insl
jl
jnp
mov
jp
mov
sbb
lret
fsubrs
not
pop
data16
fwait
pop
mov
lret
jmp
out
adc
sub
stos
inc
xor
push
aad
in
lret
or
mov
mov
mov
and
sahf
cltd
lods
jno
lret
sub
stos
je
or
xorb
xor
sub
imul
dec
sarl
ss
pmaddwd
xchg
lds
push
mov
mov
and
sahf
xor
sbb
pop
inc
dec
xlat
fsubs
pop
xor
adc
pop
push
pop
sarl
or
push
jmp
stc
xchg
in
pop
adc
pop
aas
testb
pop
pop
cmc
mov
xlat
mov
aad
mov
pop
ret
cmpsb
jb
or
lods
mov
outsb
ret
stos
nop
mov
cmp
js
fidivl
imul
push
enter
add
out
enter
testl
jmp
cmpsl
cmp
adc
jge
data16
add
daa
add
mov
ljmp
jae
xchg
les
loope
pop
inc
or
pushf
sbb
sub
gs
mov
mov
xor
into
stos
push
push
ret
push
push
out
aam
sub
push
cs
sub
xor
cmp
pop
pop
icebp
sbb
or
ret
mov
mov
sbb
test
pop
xchg
push
push
and
outsl
push
jle
xchg
fistpll
push
cwtl
mov
or
push
mov
int3
insl
and
jae
mov
test
hlt
fildl
adc
sbb
push
int3
cmpsb
mov
pushf
mov
dec
cmp
cli
cmp
into
dec
fdivrs
mov
mov
jne
cwtl
mov
dec
dec
jl
ljmp
fwait
mov
aam
xchg
xor
icebp
fwait
xlat
jnp
cmpsl
lea
and
pushf
xchg
cmpsb
rcl
cmp
mov
mov
cwtl
sub
and
std
xchg
sbb
mov
mov
shl
inc
stc
arpl
fldcw
mov
movsl
mov
push
pusha
mov
pop
push
lahf
in
leave
and
outsl
imul
xor
xchg
gs
add
xchg
or
jmp
sbb
out
xchg
cmp
sbb
mov
sub
sarl
imul
jmp
icebp
jb
push
aad
dec
ljmp
xchg
and
cwtl
sub
xchg
in
xchg
mov
fwait
and
iret
aad
stos
cmp
push
xchg
add
jecxz
filds
push
fwait
aaa
inc
dec
cmpsl
xor
inc
pop
pop
ret
movsw
xchg
cltd
aad
mov
push
out
dec
lds
shrl
push
inc
andb
sti
mov
xchg
sub
mov
test
mov
and
sub
ficoml
sub
dec
orb
in
or
mov
inc
dec
imul
bound
test
adc
xlat
icebp
adc
ret
int3
std
fwait
mov
mov
out
mov
insb
aad
inc
movsl
push
xchg
xor
push
xchg
lret
sbb
daa
dec
ljmp
scas
fcmovu
xchg
aad
test
jl
pop
push
pop
fcompl
outsb
fisubl
xlat
xor
popf
mov
test
sbb
lock
jle
mov
jp
jae
pop
jnp
pop
lcall
in
dec
cli
mov
or
mov
les
cld
lods
dec
test
inc
aad
sub
adc
aad
lret
cmp
fsubrs
in
xor
and
cmpsl
daa
aam
xchg
push
imul
sub
mov
sub
sub
xor
dec
add
loop
jge
mov
mov
mov
imul
stos
int
push
sbb
testl
pop
ficoms
mov
int
mov
cmp
scas
cmc
push
cmp
dec
stos
push
aaa
nop
mov
adc
fmulp
dec
andl
inc
ficoml
dec
loope
mov
add
clc
cwtl
dec
cmp
pop
divb
inc
sbb
mov
dec
shrl
mov
je
add
mov
xchg
out
mov
lds
xor
xchg
push
adc
test
pusha
xchg
clc
fldl2t
ljmp
insl
sub
adc
clc
out
ficoml
add
push
jb
cmp
push
or
pushf
dec
lods
arpl
adc
cmp
das
jmp
outsb
and
daa
pop
repz
or
aas
int3
outsb
mov
cmc
add
pop
pop
pop
and
xchg
rclb
mov
pop
push
sahf
mov
mov
out
jns
push
dec
stos
dec
adc
fs
stos
aad
and
inc
dec
xchg
cmp
stos
xchg
scas
jne
mov
mov
andl
push
in
pop
jl
push
cmpsb
mov
int
mov
scas
rorb
dec
mov
inc
repz
repnz
xchg
arpl
push
movsb
imul
adcl
outsb
push
aad
xor
ljmp
addr16
movsb
fs
jle
sbb
shll
cmc
insl
scas
fdivr
mov
int
dec
test
jp
cld
int
add
aad
ss
cmpsl
nop
test
std
test
sbb
cmp
mov
pop
cmp
adc
push
outsl
add
rcl
ficoml
sub
outsb
mov
mov
fisttps
dec
xchg
imul
iret
xchg
xchg
outsl
sbb
stc
xchg
jns
mov
sbb
sbb
notb
pop
leave
scas
xor
or
dec
arpl
fnstcw
test
fcomps
in
mov
cmp
sub
push
aam
and
inc
cli
fimull
into
fwait
inc
pop
mov
data16
imul
xchg
in
dec
gs
pop
adc
popf
push
stos
push
inc
pop
mov
lods
addr16
hlt
dec
sbb
idivl
aad
repnz
add
lea
leave
cmp
push
dec
push
push
loop
popa
loop
add
jne
jp
push
imul
jo
push
into
pusha
sbb
and
push
sbb
stos
fs
mov
adc
lret
push
test
ret
scas
insb
jno
jecxz
loopne
pop
stc
pop
jle
icebp
ret
fnstsw
leave
stos
fnstsw
dec
loop
loop,pn
mov
lds
pop
and
lcall
in
popf
xor
iret
rcl
cltd
sub
fidivrs
dec
add
hlt
mov
sarl
icebp
idivb
push
lock
dec
rclb
repz
jb
xor
aad
stos
movsb
lods
xor
dec
dec
mov
and
jae
fcoms
gs
ljmp
xor
in
sub
in
sbb
cld
mov
jg
bound
inc
cmp
inc
bound
imul
daa
enter
les
mul
test
mov
mov
mov
mov
daa
inc
ja
push
fs
inc
cmp
pop
jecxz
mov
fisttps
and
test
and
jb
or
push
lods
adcl
sbb
pop
les
js
pop
popa
jnp
movsb
jmp
and
jmp
dec
je
das
jb
xchg
aam
xchg
cli
loope
call
jae
clc
subb
sbb
cmp
dec
adc
cltd
push
or
aad
lahf
inc
ds
mov
in
pop
pop
or
stc
or
jbe
jmp
fcomps
std
pop
gs
sahf
iret
cltd
loope
cltd
jbe
cmp
icebp
negb
lcall
xor
pop
out
test
inc
clc
insl
stos
cmp
scas
fs
pop
and
or
mov
mov
sbb
push
pop
pusha
lahf
xchg
cmp
cmc
les
adc
mov
xor
xlat
jbe
ljmp
loope
mov
lahf
mulb
icebp
sbb
inc
int
xchg
int3
xchg
mov
add
mov
sahf
push
ss
mov
leave
lcall
jge
cmc
mov
fisttps
and
jo
jo
fimull
in
divl
xchg
jge
cmp
xor
push
cmpsl
xchg
dec
or
adc
out
jnp
or
idivb
inc
cmpsb
and
pusha
mov
xor
and
cmc
shl
dec
pushf
mov
add
and
inc
pop
and
mov
aaa
repz
xor
xchg
pop
inc
pop
cmp
lahf
sbb
jmp
stos
ds
lock
and
enter
xchg
and
or
lock
call
lret
push
cmp
push
lock
icebp
mov
inc
lds
or
mov
lret
mov
and
mov
daa
scas
sbb
push
insb
test
add
jecxz
xchg
sbb
test
insb
push
or
cli
icebp
mov
inc
int3
xchg
sysexit
adc
or
mov
or
cmp
stc
push
cli
clc
movsb
inc
push
adc
lahf
and
push
js
pop
mov
bound
adc
js
rol
mov
xchg
imul
test
add
mov
loope
push
sahf
fnstcw
and
sbbb
add
shll
dec
pop
or
cmpsb
test
mov
cmp
test
adc
nop
mov
add
adc
lfs
test
ss
repnz
jae
mov
nop
lock
and
sbb
push
lods
bound
and
lahf
addr16
loope
lcall
orl
mov
push
cmp
and
add
push
dec
cmpsb
and
push
dec
push
rorl
dec
addb
jp
ret
add
int3
and
cmp
xchg
xchg
inc
push
xchg
add
cwtl
push
mov
and
icebp
and
xor
in
dec
adc
inc
jne
add
daa
jns
add
inc
dec
lds
and
and
and
sahf
test
add
or
push
cmp
sbb
pop
mov
sub
jmp
mov
xchg
and
cs
sbb
frstor
and
xchg
ss
sub
ret
push
cmp
nop
cli
dec
nop
dec
inc
test
or
loope
adc
push
xor
shlb
daa
testb
adc
jne
mov
add
xor
xchg
and
loope
dec
insb
fdivl
adc
pop
cmp
out
leave
mov
mov
sbb
push
dec
bound
mov
movsb
push
add
cmpl
bnd
add
out
push
sbb
lds
push
sbb
add
out
push
xchg
push
test
insl
mov
orl
ret
inc
and
jne
mov
pop
popa
dec
test
sbb
test
scas
loop
and
in
jae
xchg
inc
test
jp
mov
pop
xchg
add
or
mov
adcl
sbb
popa
loopne
rorb
test
mov
daa
mov
orb
mov
pop
adc
mov
sub
push
pop
xchg
adc
dec
mov
xor
enter
js
xor
sbb
push
mov
sbb
inc
mov
xor
pop
adc
bound
sub
sub
jo
stos
dec
xchg
add
push
cmp
pop
add
test
out
shld
push
xor
and
pop
pop
out
xchg
test
sbb
das
in
mov
scas
in
into
daa
stc
and
mov
xlat
pop
pop
jg
cs
cmpsb
xchg
mov
cmpsb
sahf
jb
pop
lods
push
jecxz
pop
add
push
call
mov
test
pop
sbb
fisttpll
inc
adc
mov
pusha
or
push
jne
sub
fwait
das
bound
in
negb
stc
andb
ret
ret
loope
loop
inc
loope
popa
inc
cmp
add
inc
or
cmpb
andl
push
sbb
pop
xor
mov
orb
dec
aas
sub
imul
lock
push
push
sbb
add
mov
add
jmp
subl
pop
out
cmp
or
mov
iret
sbb
jo
jle
sbb
andb
das
jno
pushf
aad
adc
push
mov
inc
pop
stc
cld
adc
dec
jae
lcall
inc
out
popa
loope
cmp
xorb
mov
rcrl
or
cmp
repz
adcb
test
mov
dec
push
add
and
daa
les
push
div
lock
xorb
icebp
or
lods
xchg
clc
clc
jle
add
cmp
cmp
dec
out
fwait
dec
lahf
sbbb
sbb
pop
push
inc
pop
clc
mov
repz
xchg
fs
std
call
mov
mov
jecxz
mov
xchg
je
and
sub
insl
test
mov
pop
push
jecxz
lret
ds
aam
mov
inc
lods
test
inc
repz
inc
ret
movsb
add
rorb
ds
ficompl
mov
dec
jge
movsb
jnp
iret
loopne
add
fdivrs
iret
inc
xor
js
sub
jne
mov
and
mov
or
push
sub
inc
cmp
fwait
int
stc
out
int3
pusha
bound
stos
aaa
ljmp
lcall
cli
clc
pop
or
ret
add
sbb
dec
pop
lock
lods
or
addb
cltd
sub
cltd
sarb
das
iret
bound
fcomps
insb
sub
repz
stos
inc
orl
add
scas
jb
jl
inc
mov
cmc
dec
jno
push
into
xor
lock
jb
push
jae
push
or
push
jmp
bound
push
pop
imulb
filds
add
fidivrl
jg
cwtl
clc
xchg
xor
mov
jne
stc
mov
idivb
das
xchg
jnp
cwtl
inc
push
xchg
cli
jp
sbb
sar
ret
ljmp
gs
jb
adc
call
mov
mov
cwtl
imul
inc
call
outsb
inc
pop
insl
in
cld
adc
fadd
adc
out
pop
js
xchg
jmp
insb
loope
mov
xchg
clc
std
sbb
lret
and
fstpt
mov
cltd
int
adc
pusha
dec
icebp
sbbb
movsl
aad
sub
mov
add
inc
adc
icebp
ss
push
test
dec
je
fmuls
push
fiadds
inc
mov
ffree
and
fucomip
dec
jg
ja
shrb
popa
insb
push
fdivrp
aaa
push
iret
fisubl
sub
mov
xchg
mov
xchg
mov
mov
outsl
pop
mov
ret
scas
dec
movsb
loop
sbb
test
adc
mov
ret
or
jl
fstpt
sti
jge
vxorpd
sbbb
int
aas
inc
dec
inc
cmpsl
adc
pop
fildll
cmpsb
mov
lret
cli
testb
cwtl
stos
and
repz
insb
into
or
pushf
xor
jge
push
int3
dec
push
fldcw
sub
movsl
dec
aaa
lret
push
clc
sar
mov
xor
pop
imul
jbe
cwtl
outsl
insb
enter
and
pop
jecxz
xchg
xchg
lcall
loop
addb
fwait
cs
jbe
aad
sbb
xchg
inc
lds
scas
xor
xchg
mov
or
adc
rolb
jnp
cmpsl
xor
cmp
push
or
mov
fdivrs
sbb
mov
sbb
push
sbb
andb
dec
pop
sti
clc
jg
xor
mov
subb
outsl
pop
ljmp
cmp
mov
mov
mov
pop
out
mov
data16
mov
pop
jo
ja
cs
add
mov
test
cwtl
insb
fimull
pop
daa
ds
xchg
mov
dec
ficoml
jne
sbb
sub
ds
and
sti
insl
frstor
gs
je
lret
insl
lahf
clc
sub
fmuls
popa
lods
jmp
mov
out
pop
push
sbb
imulb
jg
mov
les
pop
jbe
inc
out
sbb
test
cmp
addr16
xor
push
fadds
not
pop
sbb
xchg
push
sub
push
sub
jg
shrb
faddl
popf
adc
fucomip
pop
pop
fwait
notb
ljmp
mov
sbb
add
sbb
add
mov
cmp
faddl
sub
xchg
in
inc
loop
jnp
add
add
and
mov
in
test
rolb
lcall
out
mov
push
cs
mov
insb
mov
add
addr16
std
int3
mov
add
je
mov
enter
fdiv
or
push
stos
sti
adc
pushf
out
xchg
andb
cmp
dec
jg
inc
and
dec
out
fistpl
mov
js
in
insb
mov
out
mov
xor
dec
cmpsl
loope
cmp
mov
fmul
sbb
mov
imul
jl
ja
jle
dec
shlb
out
in
push
cmc
stos
dec
adc
pop
daa
sbb
sbb
or
movsb
shl
or
adc
xlat
fidivrl
test
dec
ret
sti
mov
or
into
add
mov
test
inc
inc
sti
test
ret
mov
inc
push
or
scas
xchg
push
mov
mov
je
out
mov
adc
repnz
adc
bound
js
ss
mov
sub
nop
or
inc
pop
pop
repz
aaa
lahf
and
call
test
sbb
or
inc
cmp
pop
dec
call
call
or
cli
sub
int
add
or
incl
and
add
mov
mov
cmp
inc
movl
or
inc
push
and
adc
call
out
push
imul
jecxz
cmp
js
mov
sub
imul
sbb
lds
xchg
roll
sub
and
loop
sahf
aas
fildl
sbb
dec
cltd
js
pop
loop
jne
mov
sahf
nop
in
imul
jge
sbb
pop
jmp
test
shll
jg
mov
xchg
xor
rcll
loope
ret
jmp
loope
push
cmp
sbb
loopne
testb
ds
iretw
mov
cmc
lods
lods
cmp
cli
push
xor
pop
or
add
pop
subb
add
hlt
aas
jecxz
dec
out
adc
xchg
push
lea
popa
loopne
sub
je
into
cld
push
mov
adc
roll
lds
mov
repz
psubsw
decb
cmp
fistps
xor
insb
adc
shll
sub
cmpl
unpcklps
and
push
es
cmc
mov
inc
and
cs
or
cmp
test
mov
mov
pop
add
aas
push
mov
shrb
add
hlt
cld
loope
sub
mov
or
jecxz
testb
nop
mov
dec
xchg
mov
adc
loope
sbb
cwtl
lock
int3
test
ljmp
mov
jecxz
lea
sbb
das
aaa
push
pop
fidivs
jo
mov
add
mov
cltd
pop
xor
notb
repnz
stc
dec
cmp
or
sub
mov
fnstcw
dec
pusha
mov
lret
mov
lock
sub
addr16
inc
or
shr
jno
inc
test
repz
jp
sub
out
push
add
sbb
mov
loopne
mov
sub
sti
sub
int3
out
mov
iret
bound
sbb
xchg
dec
mov
jmp
dec
mov
jb
mov
outsl
gs
xchg
pushf
jnp
pop
mov
mov
int3
fists
mov
inc
popf
sahf
fdivrp
jp
or
add
loopne
push
data16
jae
cmp
push
jnp
push
mov
xchg
ds
fwait
mov
and
int
mov
mov
add
fdivs
lcall
cmp
outsl
cmp
xor
pushf
movsb
dec
scas
cmp
imul
inc
daa
push
stos
out
imul
bound
sbb
sub
jecxz
xor
mov
mov
pop
fwait
iret
or
mov
push
test
daa
fnstenv
mov
mov
lea
sbb
lock
mov
pop
push
or
clc
pop
out
cmpsl
sbb
sub
cmpl
push
in
pop
xchg
dec
ljmp
stos
out
cmp
xor
xchg
scas
xchg
cmp
in
stc
cltd
js
xchg
and
push
in
jae
and
or
mov
scas
iret
repz
fbld
cmp
std
pushf
pop
sub
lods
inc
lods
mov
mov
pop
movsb
insl
icebp
mov
pop
xlat
negl
sbb
movsb
xor
scas
lods
lods
repz
out
and
mov
ljmp
push
iret
pop
imul
outsl
fdiv
iret
push
xchg
insb
dec
mov
call
jne
mov
mov
adc
roll
push
hlt
and
sbb
mov
pop
add
push
sbb
outsb
jmp
jb
popa
mov
cmp
mov
cmc
std
jns
cmp
push
mov
inc
enter
lock
cwtl
int
cwtl
rcrl
jmp
push
sub
clc
int3
xor
and
or
jbe
xor
test
subb
add
mov
dec
push
dec
push
stos
mov
rorb
repnz
xorb
jecxz
shl
cwtl
out
push
lea
and
loopne
insb
inc
rcr
mov
repnz
sti
jbe
add
cmp
mov
sti
rcrl
or
cmc
mov
pop
fadds
sub
xchg
rolb
call
add
jae
jle
arpl
cmp
dec
out
ss
pop
mov
xchg
jecxz
fsubrp
repz
cmpsl
xchg
xchg
cwtl
out
pop
cmpsb
or
in
jmp
fdivp
jns
or
lods
mov
mov
out
das
roll
icebp
mov
xchg
xor
or
sbb
fidivrl
stos
jge
cmp
fnsave
jge
bound
pop
mov
hlt
call
inc
inc
inc
aaa
add
add
xchg
fldl
xchg
xlat
imul
nop
mov
pop
ret
jmp
mov
dec
mov
inc
mov
xor
pop
mov
ficompl
xchg
arpl
into
lcall
cs
sub
xchg
pop
inc
xor
mov
add
and
push
mov
adc
mov
hlt
out
push
mov
cld
out
jle
sbb
or
jle
push
enter
int
cmp
dec
xchg
repz
and
hlt
adc
lret
aaa
repnz
in
jnp
call
ret
shlb
push
std
pop
scas
hlt
mov
aaa
repnz
sahf
jo
shlb
jge
stos
insl
fwait
mov
mov
add
arpl
mov
daa
push
out
xor
xlat
sub
jae
hlt
lret
xchg
int
shrb
xchg
mov
mov
and
stc
add
and
nop
add
sbb
add
jns
pop
mov
pavgb
cmp
jp
add
les
shl
lea
cmp
lods
dec
mov
lret
pushf
xor
mov
into
or
lcall
pop
adc
pop
xor
push
jns
xlat
aam
mov
daa
hlt
decl
shll
out
ds
jl
xchg
or
insb
ret
enter
cmpsl
xchg
or
je
dec
mov
test
jno
cli
das
or
or
push
add
dec
push
hlt
pop
adc
test
adc
cli
push
stos
sbb
imul
jmp
xor
ds
cwtl
sub
push
std
pop
xchg
inc
mov
push
pop
lret
mov
push
jecxz
aaa
jle
test
in
icebp
adc
jnp
sbb
pop
xor
push
sub
and
inc
mov
lahf
cmp
inc
mov
dec
or
sbb
ss
in
bound
and
in
mov
imull
adcl
and
mov
iret
movsl
and
aaa
sarb
out
jecxz
inc
pop
loop
jmp
pop
jno
jmp
adc
xchg
repnz
filds
shrb
data16
pushf
push
mov
lds
int3
jp
inc
cld
cltd
in
stc
mov
push
loop
data16
jb
insb
sub
mov
test
mul
int3
mov
push
scas
dec
xchg
push
mov
add
lods
in
dec
fmuls
test
push
sub
test
std
pop
movsl
inc
sub
mul
stos
mov
aaa
loope
pusha
fwait
lods
shll
shlb
insl
aam
dec
test
mov
clc
cmp
xchg
xchg
jno
and
dec
std
lods
out
sbb
loop
imul
push
loope
xchg
testl
repz
out
dec
push
fldenv
out
add
mov
fdivs
push
ja
add
addr16
cmpsl
sub
ja
or
retw
dec
dec
push
ss
cmpsl
shl
std
cmp
xor
cld
movsl
aaa
repnz
stc
dec
cld
in
pop
pop
push
decl
jmp
xorl
rcr
xchg
jle
mov
sub
adc
add
push
add
adc
push
inc
mov
mov
jl
shlb
cwtl
add
jb
inc
mov
add
int3
xor
inc
js
pop
add
jb
int3
out
aas
lahf
int
hlt
jns
aaa
or
test
lcall
xor
pop
xchg
into
out
nop
jo
push
xor
push
pop
pop
xchg
lret
jns
call
rcll
fs
cwtl
in
jae
daa
adc
inc
mov
shll
jno
sbb
not
lock
int
jne
sbb
xchg
out
outsl
mov
les
ret
xor
cmpsl
push
inc
in
je
xlat
mov
pop
dec
jae
dec
sbb
xchg
test
clc
lret
push
das
xlat
imul
lret
pusha
les
and
imul
inc
shlb
inc
cltd
sbb
cmp
sub
sub
out
mov
xchg
mov
in
sbb
xlat
arpl
xorb
imul
cwtl
mov
mov
icebp
pop
fdiv
stos
repz
clc
in
cltd
jecxz
scas
out
ds
sub
loopne
ljmp
xor
cmp
repz
sbb
xchg
cmpsb
xchg
scas
jp
mov
push
xchg
sbb
mov
dec
jae
push
loopne
mov
fisubrs
out
push
cmc
jg
lahf
shll
push
lahf
fnstcw
iret
hlt
cmp
inc
fwait
lret
out
lcall
push
pop
div
repnz
push
out
ret
cwtl
mov
add
add
xlat
call
sbb
mov
or
cmp
in
cmc
adc
push
push
je
test
push
xchg
gs
rolb
mov
cmpsl
ljmp
inc
sub
cmp
lret
aad
fldl
add
pushf
pop
jns
xlat
int3
mov
popf
mov
gs
cmp
je
arpl
icebp
popa
push
push
sbb
xor
mov
pop
or
loop
aas
mov
pushf
and
or
leave
jle
add
roll
mov
adc
dec
cltd
mov
mov
xchg
mov
sti
hlt
mov
ds
pop
lahf
shll
sbb
and
mov
decb
inc
lods
stos
ss
jne
loopw
sbb
cmp
sub
sti
cmp
sarb
jg
xor
setno
cwtl
ficomps
xchg
rcrl
icebp
and
mov
cli
push
sar
scas
call
jae
xchg
std
or
xlat
hlt
pop
mov
aaa
xchg
or
inc
loopne
fmul
out
inc
lds
repnz
push
mov
jns
in
xlat
jns
inc
jae
fsubrs
xlat
pop
outsb
inc
lahf
mov
daa
insl
mov
aaa
mov
negl
cmp
pop
pop
test
mov
sarl
pop
lcall
push
repnz
inc
insb
lea
cmp
mov
push
xchg
lret
pop
push
push
push
in
jg
mov
std
cli
jb
sbb
sti
mov
cltd
jmp
outsl
out
in
shrb
mov
in
ret
pop
push
mov
sub
int3
popa
dec
mov
and
out
xchg
mov
repnz
jnp
arpl
mov
insl
push
shll
imul
pusha
lret
in
aad
cltd
cmc
hlt
jns
scas
pop
cli
addr16
dec
movsb
mov
das
pop
in
stc
inc
adc
xor
shll
sub
jge
xorb
daa
xchg
push
mov
outsb
mov
jmp
aas
fcmovnbe
push
dec
lods
xor
repz
lret
test
test
jp,pt
int3
mov
pop
cmp
into
inc
ja
das
fists
fucomi
and
stos
mov
and
push
into
jb
es
push
cltd
push
mov
cmp
and
popf
push
mov
out
adc
fadd
aam
or
mov
sti
sub
or
xlat
push
int3
shll
sbb
push
push
cmpl
fiadds
aas
push
inc
jbe
xor
jle
cmpl
dec
daa
icebp
or
dec
dec
jge
out
or
and
ja
scas
cli
xchg
xor
add
jnp
mov
aam
mov
mov
and
mov
and
mov
inc
flds
jge
mov
mov
dec
dec
shlb
dec
clc
xor
roll
pop
add
inc
pop
insl
out
ja
jne
inc
testl
mov
cltd
cmpsb
hlt
loopne
push
testl
push
popa
leave
mov
pop
push
rol
push
or
or
aas
fidivs
pop
push
incb
ffreep
cmp
popf
arpl
inc
mov
xchg
popa
mov
inc
in
ss
pop
dec
cmp
scas
xor
stc
jp
xor
loop
cmpsb
jge
mov
test
jbe
cmc
xchg
pop
dec
fucomi
movsl
jecxz
push
pop
arpl
aam
pop
sub
fistps
mov
clc
sti
loopne
adc
test
pop
addr16
popf
scas
pop
cs
or
push
pop
jg
add
arpl
sbb
mov
call
rcll
notrack
xor
cmp
adc
leave
add
insb
popa
ja
inc
add
or
add
or
cmp
jo
add
xor
and
xor
push
outsb
mov
cmp
cwtl
mov
cmp
push
add
and
pop
sub
lods
fdivl
loopne
sbb
nop
xchg
cwtl
xor
pop
push
lahf
add
jge
sub
fwait
xlat
sub
sbb
fildll
enter
jbe
enter
and
call
out
cwtl
inc
adc
jg
inc
ss
lret
or
adc
popa
or
lret
inc
or
cld
adcl
mov
stos
sbb
cmp
inc
mov
punpcklwd
adc
call
sub
out
pop
adc
adc
in
push
xor
outsl
jle
xor
fistpll
lods
jnp
pop
imul
hlt
xchg
adc
int3
mov
mov
sub
mov
or
sbb
ss
mov
mov
cmp
dec
outsb
lock
sub
or
and
inc
and
rolb
pop
xor
stos
gs
fwait
dec
in
jle
pop
loope
loope
pop
jle
push
in
outsl
test
cmp
jb
out
incw
jp
mov
jae
outsl
fwait
decl
jl
jle
iret
mov
loope
shlb
out
das
mov
sti
dec
sarl
pushf
int3
dec
adc
ds
rorb
adc
push
insl
loopne
fcmovbe
loope
notl
aaa
jns
pop
xor
cmp
pop
lahf
mov
arpl
sub
jae
repnz
out
cmp
cwtl
mov
aad
imul
xor
jo
push
pop
mov
fwait
ljmp
negl
cmc
cld
add
flds
std
sti
pop
std
mov
or
cld
push
lock
xchg
sbb
dec
std
fsubrl
stos
testb
and
mov
mov
pop
adc
cmp
xor
add
in
inc
adc
pushf
ret
cmp
repz
add
es
add
adcb
xor
popa
push
pop
aaa
jle
push
int3
sub
mov
mov
sti
pop
mov
cs
or
xchg
and
lock
sbb
dec
out
fdivp
stos
roll
and
imul
xor
mov
scas
lret
adc
stos
sbb
push
mov
movsb
pmaxsw
loopne
mov
jmp
sbb
mov
or
mov
adc
aam
lds
dec
pop
jecxz
mov
inc
out
xchg
mov
jo
mov
mov
push
pusha
or
dec
cmpsb
xchg
dec
cmp
nop
inc
add
or
add
cmp
xchg
push
adc
cwtl
push
fmuls
adc
jbe
mov
adc
dec
sti
ret
mov
jle
jbe
jg
xor
sbb
imul
in
movsb
sbb
cmpsl
jle
jns
push
out
xchg
mov
mov
add
add
mov
sub
out
mull
enter
pop
mov
cs
push
jae
jnp
xor
int
imul
lock
addr16
xchg
cmp
sti
out
mov
int
inc
hlt
ret
push
das
sub
pushf
jl
scas
dec
jg
sti
mov
xlat
daa
xchg
lcall
bound
ror
jbe
imul
daa
aas
fisubrl
into
shlb
rclb
xor
imul
lcall
xchg
mov
push
imul
push
pop
mov
fmuls
pushf
imul
movsb
out
cmc
dec
fcmovnb
jecxz
aas
inc
lods
test
mov
adc
and
mov
or
sbb
sub
rcr
xchg
jge
aas
pop
add
nop
and
jmp
add
scas
or
jnp
pushf
pushw
jno
ds
mov
shlb
lds
pushf
push
mov
sbb
in
jmp
xchg
out
call
xor
out
enter
repnz
xor
mov
mov
mov
inc
pushf
es
mov
push
bound
xchg
scas
lcall
adc
ss
jp
or
mov
nop
mov
fwait
insl
push
int3
sbb
push
and
jp
adc
sbb
cmpsb
xchg
jg
mov
imul
imul
addl
xor
fwait
mov
dec
rclb
aam
cmp
cwtl
ds
push
mov
fcmovnb
sub
add
inc
cs
push
cltd
fwait
jnp
pusha
mov
dec
cmpsl
outsb
movsb
dec
aad
rcrb
mov
dec
xor
fwait
adc
add
and
test
pusha
cmpb
cmpb
and
jo
nop
fisubl
push
mov
fcmove
mov
xchg
cli
in
pop
push
fcmovnbe
add
dec
cmp
cmp
into
adc
push
dec
daa
jg
cltd
int
insb
pusha
insl
bound
sti
jmp
subl
pop
push
ficompl
popa
mov
fnstsw
and
into
inc
xor
cmp
int
bound
mov
lods
push
lret
add
mov
push
jmp
jl
outsb
sbb
fwait
mov
cmpsl
sub
lods
xor
call
or
iret
int
dec
cmp
cmp
cwtl
push
lods
sbb
cmp
fcoml
outsb
jae
add
or
add
les
or
lcall
dec
iret
jno
int3
adc
ja
mov
mov
adc
add
dec
popa
xchg
mov
pop
push
or
and
cmc
mov
xchg
rcr
jo
push
and
lods
or
xchg
fidivl
arpl
mov
outsb
loop
xchg
pop
pushf
lret
mov
insb
push
icebp
push
icebp
in
xchg
pop
in
push
sbb
dec
jp
loopne
jae
repz
jno
iret
dec
dec
xchg
out
or
pop
jae
decl
lret
xchg
mov
idivb
ja
sbb
jmp
xchg
cmpsb
js
sub
cltd
daa
mov
mov
or
pop
push
mov
js
push
xorb
faddl
mov
push
sbb
loop
xor
repnz
dec
pop
scas
mov
cmc
inc
fcoml
icebp
jae
fists
mov
clc
mov
add
push
lcall
sbb
aaa
sarb
nop
pop
leave
xchg
popf
mov
dec
outsl
xchg
push
addr16
les
mov
jl
lcall
jno
movsl
pop
mov
xor
jge
mov
jp
adc
test
adc
rclb
cmp
sti
mov
inc
loope
popf
bound
std
stos
push
mov
xor
dec
repz
push
insl
jae,pn
int3
test
jecxz
fwait
xor
mov
dec
loope
out
pusha
push
or
sbb
les
loop
mov
xchg
jge
sbb
mov
push
jbe
cwtl
fisubrs
sub
mov
scas
add
pushf
into
push
fistps
xor
out
cs
add
pop
jecxz
out
mov
xchg
or
rolb
mov
out
cmp
jb
movsl
fstp
or
vpxor
mov
jge
inc
fstps
in
mov
aaa
pusha
icebp
fs
in
outsl
jmp
pop
inc
xchg
cmpb
mov
and
int
push
xchg
mov
mov
aaa
iret
jge
push
arpl
cmp
inc
push
shl
lock
stc
inc
mov
dec
movb
outsb
in
imulb
data16
addr16
jle
pop
xor
or
push
xor
ds
sub
shrb
les
inc
sbb
add
mov
jb
ret
mov
xchg
sub
push
push
and
inc
add
mov
rorl
jnp
je
in
fnstsw
inc
outsb
stos
ja
xorl
jl
add
jl
sbb
mov
call
or
ret
xlat
js
xchg
or
addr16
adc
aas
add
add
cld
push
addr16
jns
xlat
jae
xchg
outsl
das
dec
sub
lods
loop
and
cli
aaa
outsl
arpl
ds
sbb
lahf
mov
xor
mov
fbstp
xor
pop
mov
mov
aad
xlat
arpl
mov
or
arpl
add
stos
int3
mov
inc
push
add
test
sti
aaa
xchg
data16
jae
pop
mov
js
adcl
lret
cmp
arpl
outsb
push
arpl
ja
jle
ds
pop
mov
lret
push
repnz
add
xor
xchg
pop
pop
out
mov
cmp
jecxz
std
jo
repz
shl
outsb
sub
shlb
jo
mov
or
add
stc
out
cs
rorb
out
xor
adc
out
or
les
data16
pop
mov
dec
sub
and
dec
out
add
pop
rcrb
sbb
ja
ret
mov
push
out
aad
pusha
inc
xchg
jae
iret
mov
les
xchg
xor
cmpb
mov
add
mov
or
insb
popf
in
hlt
pop
negb
and
inc
and
push
aaa
mov
daa
je
je
fscale
hlt
rclb
pop
xchg
cmp
test
fsubp
push
inc
mov
cmp
lds
rolb
lret
xchg
mov
pop
test
in
enter
sbb
in
xchg
mov
int3
xchg
xchg
jnp
mov
xor
xor
add
xchg
sub
mov
or
xchg
mov
adc
add
inc
aaa
out
xorb
mov
jae
pop
imul
pusha
dec
fildll
mov
decb
iret
dec
xor
cmp
inc
lcall
js
jle
or
loopne
xor
stc
mov
ds
pop
aas
mov
xorb
scas
xor
fwait
pop
ds
pop
jle
sahf
out
pushf
pop
sub
decb
pop
cltd
push
lret
arpl
fnsetpm(287
mov
and
pop
test
nop
es
mov
mov
orl
sub
sbb
pusha
mov
xchg
cmpsb
out
cmpsl
lods
mov
mov
jmp
hlt
test
test
movsl
mov
sar
push
sbb
clc
movl
mov
adc
push
orb
jmp
fs
sahf
stos
leave
dec
mov
jge
cmp
and
inc
sbb
push
icebp
adc
cmp
flds
rcll
pop
pusha
sti
int3
loopne
loopne
and
xchg
jg
push
pusha
pop
jbe
cs
scas
push
scas
mov
mov
push
ret
pop
in
loop
jb
notl
mov
fcmove
add
pop
mov
and
je
leave
dec
mov
xchg
cld
cmp
addl
jns
rorb
and
in
bound
or
adc
shl
cmp
cmp
push
ret
aas
out
xor
std
mov
sahf
addl
out
nop
mov
mov
hlt
mov
fcmovbe
jge
sub
sbb
jae
fldt
addr16
shl
fldl
and
and
out
jecxz
shll
and
fwait
xchg
ss
sub
sti
and
xor
and
imul
shr
imulb
icebp
int3
inc
in
mov
outsb
cmpsb
mov
mov
or
scas
mov
or
adc
ret
cmp
pushf
xchg
mov
cltd
icebp
ret
and
ficoms
mov
mov
fistps
jne
repz
add
cmpsb
pop
out
dec
jb
rclb
pushf
dec
pop
dec
mov
dec
jb
stc
dec
test
xlat
mov
dec
outsl
aaa
cld
lds
dec
adc
imul
xor
data16
arpl
test
lret
repz
fstps
cmpsl
sbb
in
xor
xchg
mov
fwait
popa
lret
mov
dec
jecxz
add
addr16
ja
sbb
mov
cmp
and
xor
cmp
arpl
nop
aaa
and
sti
rcll
stos
sbb
cltd
sub
cli
sub
je
push
fwait
inc
pushf
scas
dec
and
movzwl
mov
lods
push
sbb
das
sbb
mov
bound
mov
call
mov
inc
pop
ret
cmp
lock
add
mov
mov
adc
ss
popa
jle
insl
je
inc
sbb
xchg
jmp
mov
sub
stos
cmp
add
inc
jge
mov
push
fisttpl
int3
das
inc
pusha
mov
cld
xchg
iret
jecxz
sub
outsl
push
nop
popf
dec
push
jae
add
pusha
dec
mov
mov
inc
and
loope
mov
loop
cmp
mov
or
dec
test
ret
add
pusha
adc
adcl
test
or
xchg
jg
sbb
es
and
mov
out
jle
cwtl
mov
fisttpll
or
xchg
mov
ljmp
xchg
mov
pop
adc
movsb
pop
xor
fadds
xchg
rep
and
inc
or
cmp
add
repnz
xlat
dec
mov
xor
add
loopne
les
push
pop
sahf
sbb
std
adc
jno
cmpsb
les
out
loopne
stos
jb
mov
cmp
rorl
xor
jge
lahf
imul
sub
arpl
fadds
pop
mov
jne
movl
inc
and
fistpl
dec
scas
int
jp
push
mov
inc
or
fcompl
enter
adc
mov
jle
loopne
xlat
outsb
cmp
xor
scas
push
ficoms
push
jno
sub
loopne
pop
test
lods
jne,pt
js
adc
dec
jecxz
andb
sbb
in
dec
sbb
out
or
xor
push
pop
dec
mov
mov
icebp
dec
cmp
pop
jecxz
adc
test
dec
icebp
mov
mov
lcallw
mov
pop
shrb
jp
adc
mov
or
stos
push
add
sub
jb
outsb
mov
xchg
and
cmc
stos
lea
add
jo
sub
cmp
movsl
out
movsl
fcmovne
sbb
jle
in
cs
cmp
xor
and
pop
es
ret
add
cli
push
dec
addr16
lods
divl
pop
jnp
pushf
fcom
xchg
test
fwait
xor
call
movsb
sti
cmp
loop
imull
pop
inc
add
dec
mov
repnz
mov
sub
pop
cmp
xchg
out
and
js
xor
mov
loop
xchg
std
cmp
subb
test
mov
movsl
lock
xlat
pop
xorb
lret
jge
fs
out
push
sub
adc
pop
lcall
movsb
icebp
xorl
rorb
sub
fstpt
lea
dec
lret
inc
xchg
fsubl
pop
inc
out
mov
jl
adc
dec
lock
inc
test
xlat
pshufw
lds
dec
test
mov
sarl
ret
jns
mov
inc
loop
sti
dec
push
lock
inc
call
jbe
add
test
insl
cmp
pop
mov
lea
shll
cmpl
lcall
xlat
xor
cmc
pop
addr16
xor
mov
mov
sub
in
movsb
arpl
aad
daa
mov
mov
dec
and
das
fs
pop
in
ret
dec
clc
lahf
jmp
add
push
jmp
lcall
aaa
sub
subb
imul
mov
mov
ret
inc
jl
or
out
fs
mov
imul
push
mov
push
sub
push
repnz
outsl
shlb
cmpsb
insb
inc
and
in
jae
and
xchg
repnz
push
xchg
movb
ret
adc
xor
fisubrl
and
inc
cltd
mov
push
outsl
ds
in
ss
lods
mov
push
pop
push
jp
outsl
loop
fstps
xor
mov
mov
inc
ss
leave
mov
ljmp
aas
fmull
and
clc
icebp
add
lock
pop
jb
aam
pop
inc
lock
out
or
and
outsl
add
fisttps
fwait
and
jnp
outsl
ja
repnz
mov
mov
xor
sub
scas
cmpsb
hlt
and
ja
mov
pop
mov
or
jo
js
imul
aas
jl
shrb
mov
int
icebp
jmp
hlt
mov
sbb
in
xchg
sub
jg
or
mov
repnz
push
or
sub
push
mov
outsl
movsl
lods
aaa
das
stos
outsl
sub
pop
adc
xchg
sub
lods
add
mov
shll
cmpsb
mov
je
hlt
loop
xor
aaa
repnz
cmp
loop
out
lods
std
bound
mov
loop
add
sub
ljmp
into
mov
ja
scas
stos
inc
jns
dec
mov
sub
mov
fnstenv
or
movss
imul
insl
mov
inc
jl
mov
popa
addr16
jp
mov
or
insl
iret
jle
pop
dec
movsb
inc
pop
fstl
sbb
dec
sahf
outsl
insb
jl
insb
adc
mov
and
js
stos
mov
xlat
mov
sbb
call
in
es
pop
xchg
mov
pop
lea
xchg
cmpsb
mov
xchg
or
cmpsb
lds
push
shr
sti
fisttpl
fsubrs
cmpsl
sub
sbb
call
pop
mov
and
jle
insb
add
std
or
cmp
jno
fcomi
enter
add
fldl
mov
loop,pt
add
movsb
js
out
xor
inc
or
leave
insl
xchg
cltd
ret
xchg
int3
ds
dec
sbb
scas
cmp
jmp
into
xor
jb
add
dec
inc
outsl
lret
jo
jne
clc
jne
enter
sub
lock
push
push
adc
push
test
adc
test
push
std
loop
push
andl
repnz
pop
dec
fildl
mov
in
loop
dec
mov
sti
in
stc
pop
pop
mov
dec
repz
mov
xlat
outsb
int
in
and
loope
cld
rclb
sub
out
sarb
shrb
pop
push
and
xchg
adc
xchg
popa
mov
loope
adc
scas
loope
push
adc
add
sub
fildl
adc
repnz
sub
rep
imul
loop
push
xor
out
pop
loope
push
in
inc
fdivl
push
push
std
mov
or
out
xchg
lea
push
mov
lock
mov
xor
mov
shll
dec
push
dec
xor
enter
xchg
add
add
call
and
ds
insw
inc
or
mov
loope
or
movsb
int3
mov
fstpl
pop
jp
pop
jbe
adc
or
xlat
or
testb
rcll
or
xchg
mov
jl
mov
repnz
xchg
cmp
dec
mov
add
cmpsl
and
sub
sub
jp
decl
mov
pusha
dec
add
adc
mov
jne
jle
sub
xchg
in
loop
xor
cmp
std
adc
ret
clc
mov
mov
loop
daa
inc
push
jecxz
int
add
jae
pop
inc
clc
inc
and
mov
jg
es
fnsave
mov
gs
mov
add
fsubrs
xor
lsl
add
or
xchg
and
push
adc
and
lea
mov
or
inc
aam
fnstsw
fwait
nop
test
neg
push
sub
or
or
mov
inc
xchg
cmp
and
test
pusha
test
push
mov
sub
test
mov
xor
fistpll
dec
aaa
cld
xlat
scas
loopne
inc
rolb
idivb
fcom
push
cltd
pop
sbb
dec
mov
mov
push
rolb
push
mov
lret
push
bound
int3
movsb
test
fs
ds
in
inc
leave
sahf
std
aad
jnp
dec
aas
add
ds
or
mov
ret
cld
daa
repz
aaa
repz
xor
xor
adc
mov
inc
bound
adc
jecxz
xchg
movsb
outsb
sbb
mov
add
inc
push
xchg
lret
scas
inc
add
dec
popf
mov
in
pop
dec
lcall
out
frstor
fs
aam
lds
inc
lea
xchg
xchg
xor
jnp
cmp
leave
rorb
es
pop
in
push
divl
pmaddwd
push
movsb
pop
fistps
xchg
fildll
popa
pushf
inc
ja
aam
xor
test
loope
push
sub
mov
jle
sbb
insl
lahf
test
fwait
inc
dec
push
xlat
jnp
into
jbe
mov
push
and
jb
sbbl
je
jmp
roll
test
jmp
cmp
inc
sub
aas
xchg
aad
lock
bound
push
dec
inc
jno
xor
mov
cmpsl
mov
call
add
push
mov
or
ds
mov
cmp
out
jle
jb
mov
sub
daa
sbb
dec
stc
adc
push
pop
ljmp
xchg
push
fsub
fisttpl
out
out
out
lods
rcrl
fs
mov
mov
jl
and
pop
push
std
in
cmp
dec
stos
and
adc
je
and
inc
mov
xchg
sub
loope
jecxz
dec
sbbb
int
shl
cmp
fildll
arpl
imul
cltd
stc
jbe
mov
and
pop
cmp
dec
fdivrl
clc
jge
mov
cmp
jecxz
dec
ret
or
adc
repnz
daa
jmp
lcall
lock
mov
ds
outsb
cwtl
in
fistpll
out
mov
and
jnp
jmp
pop
adc
xchg
inc
jo
rcrb
subb
dec
fidivs
or
jae
xchg
push
clc
test
mov
or
in
push
test
dec
shlb
mov
rcl
mov
in
lods
cwtl
jmpw
sahf
outsl
iret
mov
addl
out
ss
jg
jne
adc
mov
insb
sbb
iret
loopne
psubsb
jae
cmp
pusha
icebp
mov
into
and
outsl
push
or
jecxz
cmp
iret
and
dec
fisttpl
movsl
add
cli
mov
rcrb
cmp
inc
adc
mov
mov
fcmovb
test
push
jne
mov
lods
dec
mov
mov
pop
sub
test
jb
ds
addl
sbb
mov
paddb
push
sbb
cmp
insl
mov
xchg
xchg
out
jl
pop
add
pop
sti
std
lcall
test
dec
adc
frstor
mov
mov
push
adc
test
inc
loopne
test
lea
sub
xor
and
not
ss
mov
dec
xchg
jmp
das
add
leave
movsl
sub
mov
or
or
jg
jg
xor
pop
clc
dec
or
ds
or
pop
movl
dec
test
xchg
scas
jl
xor
mov
ss
lock
clc
into
js
and
and
lahf
enter
mov
mov
push
or
or
xor
daa
dec
xlat
jge
clc
inc
cltd
cmp
pop
mov
iret
pop
sbb
clc
into
mov
dec
pop
rorb
jp
repz
in
iret
fistps
lods
pushl
cld
fsubrs
int3
pop
clc
mov
aas
adc
xor
pop
jae
jecxz
fiadds
mov
push
mov
sbb
decb
iret
fimuls
cwtl
imul
loope
in
ret
push
pop
ret
hlt
dec
jl
call
cmp
and
std
sbb
push
push
mov
out
es
add
out
in
add
push
icebp
rcrl
xor
jb
jp
das
popf
mov
lahf
es
sbb
gs
std
shll
mov
xchg
dec
out
jbe
leave
sbb
enter
mov
enter
xchg
rorl
loop
mov
cmp
xor
scas
stc
bound
inc
add
push
in
pusha
andl
popa
lock
sti
and
dec
or
push
mov
loope
mov
add
fldt
sti
stos
and
flds
mov
sbb
adcl
dec
jp
je
xlat
push
jl
inc
mov
inc
add
cmpsl
jns
add
int3
add
icebp
mov
outsl
lret
rcrb
je
pop
mov
pop
adc
sti
cmpsl
lock
ljmp
fdivrl
arpl
ret
and
push
fmul
push
rolb
fisubl
and
cli
jecxz
xchg
pop
push
push
pop
lods
imul
pop
adc
pop
xchg
cmp
popa
clc
dec
lock
cmp
ds
push
push
add
xchg
loopne
xchg
xor
xchg
clc
adc
jg
addr16
push
clc
test
add
mov
shl
aas
adc
shlb
cltd
loopne
fistps
fwait
xor
pushf
hlt
cmp
mov
sub
sbb
inc
inc
out
repz
arpl
aam
mov
lock
leave
stc
sbb
orl
ffree
cmp
arpl
into
loope
sti
push
mov
movl
xchg
dec
jns
cmp
loope
aas
mov
push
push
repnz
out
mov
push
xchg
rolb
cmp
and
movsl
gs
imul
repnz
pop
push
mov
mov
sbb
arpl
rclb
pop
mov
jle
add
testb
xor
mov
imul
and
push
mov
rcl
or
sub
xor
cwtl
lock
int
add
idiv
pop
orb
movsb
inc
outsl
mov
pusha
sub
ds
xorb
and
mov
xchg
adc
cmp
ret
ret
fcoml
loope
iret
js
push
mov
aam
movsl
jo
repnz
mov
pop
jne
daa
sbbl
clc
mov
pop
les
clc
ja
xchg
cltd
pop
push
and
mov
adc
dec
mov
ffreep
icebp
or
gs
cld
sti
insb
lods
imul
lock
shlb
dec
movsb
jmp
enter
hlt
push
les
and
insl
pop
icebp
aas
mov
inc
pop
pop
sti
pop
mov
ret
dec
and
decl
and
es
test
mov
adc
xchg
das
mov
in
ret
repnz
subb
pop
dec
lret
cli
andb
inc
push
push
bound
adc
hlt
inc
ret
xor
loope
inc
push
les
inc
out
mov
jg
je
sbb
push
mov
ss
filds
inc
sub
push
jne
es
cmpsb
loope
ds
dec
sbb
xorb
mov
mov
jno
sub
fbld
sub
and
in
hlt
xchg
adc
jnp
adcb
mov
sbb
fadds
add
jg
cmp
sub
movsl
orl
mov
jge
in
fidivrl
clc
and
jg
mov
and
dec
loope
ficomps
aas
mov
jmp
inc
inc
jns
gs
sub
push
adc
ljmp
icebp
inc
stc
lret
icebp
cmp
test
test
xchg
jno
or
int3
ret
addb
dec
loope
test
mov
or
xchg
clc
xor
cld
and
cmp
mov
cmc
fcoms
clc
sub
dec
push
call
sub
lea
shrb
sarl
xor
movsb
add
mov
cmp
xor
mov
or
jg
xlat
insl
sarb
les
xchg
and
jmp
jns
sbb
mov
daa
lods
fnstcw
fistpl
data16
nop
jp
jmp
push
test
inc
push
int3
out
js
pop
xchg
push
sbb
aam
xchg
fs
sbb
out
mov
pushf
movsl
ror
mov
and
xchg
dec
int3
repz
pop
and
cmp
sub
cmp
lahf
pop
int3
push
adc
push
jns
xchg
call
xchg
mov
mov
add
jne
jno
in
iret
or
jg
push
into
jp
inc
inc
lret
jmp
nop
push
jmp
xchg
shlb
insb
jl
xor
outsl
popa
fwait
inc
test
mov
and
int3
out
push
mov
lods
notb
xchg
push
xor
sbb
cmp
daa
data16
test
int
pushl
aad
filds
pop
lds
adc
in
in
jle
push
adc
xchg
fmul
pushl
mov
stos
cwtl
cwtl
dec
gs
dec
cmp
clc
xchg
xchg
lret
cmpsb
loopne
nop
arpl
sub
push
sbb
dec
jp
inc
dec
mov
aas
cmovb
sahf
add
dec
scas
mov
movsb
std
add
popf
pop
push
leave
pop
cmp
out
lahf
daa
mov
jmp
arpl
adc
cmc
xor
adc
and
cmp
sti
js
cmp
shl
stos
add
fcmovu
gs
imul
jp
push
add
or
push
mov
jb
inc
adc
mov
in
sbb
lea
xlat
shr
xor
in
pop
jp
cmp
dec
jb
push
mov
add
bound
scas
jae
fisttps
or
cmp
fmulp
xor
mov
daa
dec
pop
push
imul
test
enter
outsl
xor
and
mov
adc
sub
mov
hlt
add
jmp
pop
inc
inc
aaa
push
clc
loope
or
jb
daa
xor
sbb
mov
enter
sbb
push
daa
into
pop
adc
xchg
adc
xchg
scas
stos
lods
sarb
xor
stos
xchg
cld
es
fidivs
aas
aam
and
movsl
cmp
aam
dec
sbb
pop
mov
sub
mov
sub
jne
repz
sahf
push
sbb
jo
pop
lret
xor
and
xchg
push
enter
adc
xchg
inc
lock
lods
mov
fstpt
mov
sbb
mov
cmp
in
pop
xchg
ret
negb
mov
ror
and
adcl
test
lcall
adc
adc
loope
dec
lea
dec
mov
daa
popa
mov
adc
sbbb
mov
add
mov
pop
cmpsl
out
cmp
jmp
mov
sahf
push
mov
imul
mov
jbe
rclb
inc
pop
shrl
imul
mov
pop
ficoms
jae
push
fwait
inc
mov
fdivrs
xchg
out
cmp
movsb
out
js
mov
iret
mov
mov
and
out
pop
or
lret
xor
sub
cli
jle
addl
push
jl
jne
jns
test
lock
and
sbb
aas
and
mov
inc
mov
or
arpl
loopne
movsl
push
xorb
cs
sub
cmp
rol
pop
jp
xor
aas
out
mov
mov
cmpl
cmc
jbe
pop
ret
or
pusha
daa
imul
dec
push
in
dec
icebp
xchg
dec
into
inc
sti
xchg
mov
sub
xchg
pop
jmp
sbb
mov
inc
mov
mov
fwait
int
lret
icebp
adc
fwait
int3
cmp
mov
aas
mov
out
in
nop
push
nop
or
in
cmc
mov
into
jae
ds
hlt
mov
insl
push
inc
sub
and
cmpsb
and
mulb
sub
fldcw
cli
inc
sub
pop
add
loope
cmp
mov
dec
sub
jecxz
sub
jno
pop
outsl
mov
fsubrl
stos
mov
mov
fistpl
aas
movsl
sahf
adc
jnp
das
pop
inc
mov
movsb
mov
push
or
test
push
movsl
jae
aad
lods
cmp
sti
adc
divl
xchg
mov
xchg
cmc
ljmp
jns
inc
sbb
dec
rorl
or
lds
mov
hlt
out
inc
pop
cmp
hlt
and
aaa
and
inc
jge
lods
mov
inc
push
addr16
add
dec
aad
mov
fcompl
out
sub
inc
jne
stos
push
movsb
add
enter
jne
jecxz
ss
inc
cmp
test
jl
aam
jmp
fwait
shll
popf
ja
call
orb
xor
mov
ja
pop
mov
clc
fildll
and
nop
sbb
xchg
and
add
test
nop
int
push
test
adc
cwtl
or
adcl
js
mov
cltd
jg
pop
outsl
xchg
pushf
or
inc
mov
jns
ret
or
loope
and
xchg
cltd
inc
cmp
sbb
jo
cmp
pusha
mov
inc
test
cmpsl
mov
push
and
jns
movsl
or
fwait
mov
mov
repz
rcl
push
jo
mov
add
or
scas
dec
inc
push
outsb
scas
lret
push
movl
pop
mov
jb
shll
push
dec
mov
lret
scas
in
mov
into
movsb
leave
jnp
dec
jne
out
scas
sahf
xlat
adc
xchg
test
mov
adc
push
push
push
mov
stos
out
adc
xor
sub
js
inc
mov
ja
ret
inc
gs
inc
sub
loop
inc
mov
aaa
mov
shll
pop
inc
xchg
in
xchg
adc
sub
mov
movsb
pop
mov
dec
adc
out
lock
xor
aad
int3
popaw
es
test
xchg
fstl
cs
xchg
or
imul
aam
sbb
shlb
vaddsd
cltd
mov
xchg
dec
push
je
adc
dec
xlat
pop
mov
push
adc
shr
push
nop
push
cmp
iret
sbb
inc
ret
das
adc
sbb
stc
leave
and
push
pop
addr16
sub
pushf
movl
stos
fidivl
lret
jge
fmuls
insb
inc
fs
enter
icebp
adc
xchg
fsubl
and
dec
lcall
lret
fstpl
sub
adc
call
mov
mov
add
pop
mov
cmpsb
xchg
push
xor
arpl
lods
pop
xchg
inc
xchg
mov
xchg
sub
adc
es
dec
out
and
pop
adc
loop
xchg
and
decl
testb
or
fnstsw
dec
scas
mov
in
stos
les
lea
cmp
lds
adc
xor
fnstsw
gs
cltd
ja
sub
push
inc
sbb
pop
cmp
lcall
dec
inc
fsub
xor
dec
lds
into
popa
inc
cmp
xchg
inc
out
sub
jl
lcall
push
adc
xor
lret
ljmp
fisubs
pop
lcall
and
xor
push
dec
jo
test
xchg
sahf
pop
pop
or
sub
sbb
lods
in
cmpsl
push
pushf
fisttpll
addr16
cltd
aam
jecxz
sbb
aam
iret
int
out
jo
repnz
jo
push
movl
sbbb
mov
inc
jl
adc
dec
lcall
push
test
dec
inc
stos
rol
or
shlb
jns
mov
dec
sbb
jnp
mov
adc
cmp
or
and
xor
mov
inc
popa
rorb
jp
xchg
pop
push
cltd
shrl
jb
jns
and
pop
jmp
imul
mov
mov
outsl
lcall
cli
fadd
bound
jge
ljmp
ljmp
push
test
xor
in
jo
mov
jnp
push
inc
iret
push
shrb
mov
pop
faddp
pop
adc
mov
jae
popf
movsl
push
push
movsl
lret
push
pop
xor
cmpsl
leave
sub
pop
cmp
mov
test
insw
adc
into
jg
test
in
mov
cmp
ss
mov
lds
mov
mov
and
cmp
stos
inc
mov
stc
fwait
and
nop
pusha
ret
xor
repz
bound
rol
cmovns
roll
inc
movsl
push
cmp
cmp
mov
mov
fnstcw
push
push
ja
out
jo
push
scas
xor
je
jno
xor
pop
mov
pop
mov
push
xor
lods
adc
push
repnz
roll
add
sub
and
xor
loopne
stos
mov
adc
in
scas
arpl
imul
push
mov
inc
inc
data16
fiadds
mov
lret
sub
mov
aas
clc
cld
in
cwtl
pop
data16
mov
lcall
jp
aas
mov
out
mov
mov
xchg
movsl
adc
pop
cmp
fimuls
jne
scas
sarl
or
test
sbb
shl
mov
pop
adc
stos
push
mov
jge
in
jo
test
roll
lret
test
add
cmc
inc
mov
aas
inc
enter
mov
gs
fwait
inc
fstps
lahf
jmp
jp
sub
adc
adc
mov
sbb
push
movsl
pop
cmpsb
dec
cmp
push
arpl
cltd
pop
jb
out
je
dec
mov
xor
jmp
out
jnp
lods
sub
mov
lods
sub
lcall
negl
imul
fidivl
and
test
adc
and
mov
mov
add
pop
lea
xchg
sbb
mov
jns
bound
jb
dec
test
stc
mov
addr16
lods
fmul
jo
int3
in
imul
lods
push
push
xor
ret
and
daa
mov
mov
test
or
dec
popa
mov
pop
aad
bound
push
and
xorl
cwtl
scas
in
xor
mov
mov
sarl
lea
int3
dec
lock
push
jne
loop
push
xchg
loope
popa
sub
pop
inc
xchg
std
mov
fsts
loop
stc
jge
and
scas
push
lahf
sub
xchg
mov
stc
ret
push
cmc
sub
cli
outsl
ds
fldt
push
mov
sahf
xchg
pop
xor
and
pop
mov
cmpsb
ljmp
mov
mov
loop
adc
mov
pop
jmp
scas
aam
fcomps
cwtl
orb
mov
mov
stos
jp
insl
movsl
inc
mov
sub
mov
dec
mov
pop
xor
or
mov
sub
xor
movsl
dec
cwtl
xchg
xor
push
repnz
adc
pop
dec
pop
lds
imull
andb
xor
push
lods
xchg
mov
pop
jno
sub
cli
pop
adc
pop
mov
mov
in
ficoml
mov
sti
inc
ja
nop
or
aaa
stos
in
stos
aas
cmp
mov
pop
xor
aaa
fstps
jmp
mov
out
stos
out
ds
push
mov
push
xchg
stos
aam
andb
jnp
lods
scas
and
jecxz
sub
cmp
add
dec
pop
lret
push
test
stos
ret
mov
cltd
out
stc
pop
inc
cmp
out
dec
insb
idivb
mov
adc
ret
sbb
decb
leave
sahf
call
lods
dec
pusha
cmc
jns
cmc
pop
mov
mov
fsubp
ficoms
rorl
cmp
lcall
inc
mov
mov
cmpsl
sahf
inc
pop
mov
push
mov
xlat
jno
jo
loopne
aad
insl
push
ss
rorl
scas
sub
loope
outsl
jne
mov
pop
sub
xchg
int
fldl
bound
pop
lcall
mov
xchg
pop
inc
das
xor
adcl
rcll
sbb
mov
insl
mov
inc
test
push
jno
sub
mov
add
addr16
push
aam
inc
into
cltd
inc
lret
add
jecxz
jmp
pop
imul
outsb
testb
in
cltd
popa
loopne
jae
jne
pop
sub
jae
jbe
xlat
sbb
pop
mov
adc
movsl
mov
subb
jl
jbe
and
adc
xor
scas
cs
aad
aaa
sbb
or
sub
pop
mov
push
shl
push
les
call
stos
dec
add
fsubrs
daa
mov
jae
sub
loope
mov
data16
shlb
daa
fs
mov
or
lds
adc
dec
sbb
sub
out
jb
bound
out
mov
or
popa
jg
push
push
roll
mov
mov
xor
xchg
sub
mov
and
pop
sub
jge
out
aam
leave
pop
dec
jne
popf
add
pop
shrl
sub
xor
and
xchg
test
testb
sahf
ret
adc
data16
jmp
inc
push
pop
repz
loop
pusha
mov
lret
fwait
adc
push
sub
in
push
add
cmp
jo
lcall
cmp
pop
xlat
mov
rcrb
and
push
add
addr16
adc
sub
movsb
push
ficompl
mov
fimull
fldl
pop
arpl
xchg
sbbb
pop
ret
jg
dec
mov
pop
adc
cwtl
inc
stos
push
xor
xchg
push
mov
loope
or
mov
andb
mov
shll
ljmp
shll
test
js
fnstcw
pop
mov
sub
push
insl
test
cmp
aaa
mov
in
daa
mov
ljmp
stos
sub
mov
das
mov
push
outsb
arpl
jmp
jecxz
inc
xor
movb
cmp
je
cli
jmp
adc
fmull
mov
pop
add
jecxz
sti
cmc
pop
cs
addr16
xchg
dec
push
test
call
cwtl
int3
popf
fldt
xchg
sbb
gs
popf
and
jbe
mov
xchg
push
jnp
in
scas
mov
ss
push
insb
push
sti
repnz
add
movsl
jbe
ja
dec
ljmp
push
pop
pop
jne
cmc
dec
xchg
or
mov
nop
mov
js
test
repz
into
leave
push
jmp
jae
leave
cmpsb
sbb
js
push
scas
jno
pop
pop
mov
sbb
push
mov
adc
and
pop
addb
pop
decb
or
xchg
pop
es
fildll
jno
gs
jo
cltd
cltd
movb
sub
mov
and
mov
scas
dec
mov
mov
repz
mov
cmp
aad
movsl
xchg
bound
pop
icebp
jo
inc
cld
fldenv
inc
shlb
sahf
setb
lahf
cmpsb
inc
jecxz
imul
outsb
jns
lds
cmp
adc
mov
mov
addr16
pop
in
ljmp
cld
or
xor
mov
cmp
and
sahf
imul
movsl
jne
imul
pop
sbb
dec
dec
in
jne
pushw
xchg
rcr
lahf
lds
push
mov
loopne
and
mov
outsb
cmp
repz
out
add
scas
cli
pop
popa
cmp
ret
movsl
xchg
sub
jo
cmp
dec
pop
lahf
push
dec
or
pop
sbbb
push
mov
mov
add
cli
cld
cmpsb
push
icebp
xchg
das
mov
in
popf
sub
or
mov
mov
imul
imul
mov
lret
insl
mov
cmp
push
jp
fs
dec
mov
repz
inc
fldl
lds
push
mov
xchg
cli
in
lods
in
out
neg
xor
fcmovb
or
inc
nop
inc
and
push
mov
mov
sub
pop
in
in
insb
cli
outsl
adc
imul
nop
js
mov
ljmp
mov
mulb
test
sub
and
dec
ljmp
cmp
adc
sub
cwtl
push
sbb
add
sub
lods
pop
bound
or
loop
rcrb
jae
hlt
enter
mov
sti
jg
xorb
push
push
lods
pop
push
xchg
pop
cmpsb
jae
test
jge
mov
mov
mov
mov
pop
fiadds
or
xchg
jmp
das
aaa
adc
and
jle
insb
mov
push
imul
sbb
test
insl
out
arpl
or
dec
test
jle
jle
jbe
sbb
outsl
adc
pop
xchg
cmc
repz
push
and
sarl
mov
outsl
adc
pop
das
mov
mov
aad
fldcw
sbb
mov
mov
addr16
add
xor
pushf
out
int
add
jo
out
push
addb
jae
daa
xor
into
jno
hlt
dec
dec
pushf
rcll
imul
or
int3
jne
mov
in
jne
sub
push
repz
push
fnstsw
lret
jb
pop
mov
pop
inc
cmp
mov
mov
cmpsb
pop
stos
adc
xlat
fimull
sahf
jns
mov
mov
out
cmp
mov
pop
inc
ljmp
jno
imul
xor
mov
out
pop
les
mov
fmull
sub
movsl
sahf
stc
inc
and
sbb
cmp
push
stos
adc
movsl
xchg
mov
pusha
ds
ds
dec
mov
lcall
pop
fldcw
pop
lods
ds
jno
jae
mov
sbb
push
cmp
mov
cmc
xchg
jecxz
das
adc
jle
in
adc
sub
mov
jmp
inc
lods
repnz
mov
popa
add
frstor
sbb
push
ja
js
in
xchg
in
adc
mov
lret
xor
jp
pop
out
mov
sub
call
sbb
aam
mov
mov
mov
sbb
mov
inc
xchg
mov
adc
push
and
adc
outsl
sbb
out
ljmp
lock
jns
in
hlt
push
stos
cmpsl
rcrb
push
inc
fisubl
xchg
mov
inc
or
adc
xchg
mov
fidivrs
ds
jmp
pop
leave
mov
aam
ss
sub
push
dec
repz
xchg
add
fwait
jle
pop
mov
add
sbb
add
les
lcall
sbb
mov
repnz
loopne
mov
mov
out
ret
inc
fs
fimull
sahf
xchg
jbe
test
sbb
daa
cwtl
nop
push
adc
imul
push
jge
fisttpll
mov
fnstsw
mov
mov
nop
mov
push
mov
insb
push
pusha
imulb
cmpsl
dec
jle
in
xchg
or
cmp
ja
daa
add
adc
dec
inc
ja
in
mov
sub
lds
mov
mov
xor
pop
cmpsb
fcompl
test
cwtl
xchg
addr16
xor
push
or
jbe
call
pop
mov
add
dec
leave
in
inc
dec
imul
jle
dec
gs
mov
xchg
pop
inc
mov
je
add
jnp
push
dec
roll
outsb
adc
int
enter
test
mov
frstor
push
adc
xor
sarb
xchg
pusha
mov
popl
arpl
xlat
cmp
popf
insb
cs
jae
push
push
lock
dec
add
dec
xor
cmpsb
pusha
push
lret
pop
add
pop
dec
ficompl
xchg
cmpsb
cmpsl
sbb
mov
loope
jecxz
fisttpll
sub
xchg
xchg
call
sub
addl
cmc
add
pop
out
or
mov
pushf
xchg
lcall
pop
cmovb
ret
jle
sbb
test
mov
pop
dec
pop
jg
mov
mov
addb
fbld
movsl
mov
jg
push
fdivs
xchg
xor
add
push
and
out
inc
scas
movsl
mov
mov
ret
rolb
movsl
xor
adc
cs
jecxz
cmpsl
pop
gs
jle
push
je
jae
jnp
test
sahf
clc
lret
dec
cmp
stc
sbb
ret
xchg
stos
push
outsb
cli
adc
mov
pop
fwait
repnz
sbb
rcll
jmp
inc
and
mov
gs
jne
sarb
mov
inc
or
call
mov
aad
fs
in
std
pop
mov
ss
icebp
cmpsb
push
jnp
into
and
out
addr16
sbb
mov
lods
sbb
loopne
cmp
jnp
iret
cld
push
xchg
cmp
mov
add
adc
dec
dec
rcr
fldt
sarb
mov
insb
dec
movsb
mov
mov
daa
faddl
mov
lods
sub
fdivl
mov
xchg
imul
mov
jmp
std
mov
inc
notb
inc
comiss
push
sub
sbb
dec
cs
out
sub
jecxz
xlat
divl
ja
push
push
icebp
add
daa
inc
outsl
push
add
lea
out
mov
js
repz
adc
sahf
pop
push
iret
test
mov
mov
adc
fs
out
xchg
mov
popa
xor
dec
rclb
mov
push
das
pop
pop
dec
or
xchg
sbb
shl
mov
or
and
xor
insl
cmp
sbb
rorl
cmp
inc
mov
or
and
ficoml
fld
xchg
mov
movsb
jge
lea
push
lea
shl
lahf
jnp
cmp
xor
inc
iret
or
jnp
repnz
sub
inc
xlat
jo
mov
inc
push
cmp
fdiv
cld
add
cmp
or
dec
les
xor
jnp
cmp
daa
mov
ss
jle
fsubl
inc
sub
fwait
cmp
cli
jnp
test
lds
mov
push
subl
dec
das
mov
mov
emms
cmp
or
jae
mul
and
sarl
push
lds
cs
scas
in
fimuls
ficomps
fs
sbb
iret
inc
xchg
test
sbb
ret
das
shr
aaa
nop
cld
or
ja
aas
dec
pushf
ja
sahf
lods
out
add
push
movsl
jne
and
cli
add
imul
xchg
dec
test
fsubrl
pop
adc
test
adc
aad
inc
and
mov
rorl
xor
int
fwait
mov
test
pop
push
orb
jae
outsb
jbe
jns
mov
hlt
and
mov
stc
loop
clc
jmp
addl
ret
out
vrsqrtps
dec
mov
mov
add
cmp
cmp
xor
adc
iret
pushf
mov
mov
push
iret
jmp
add
daa
and
mov
cmp
addr16
adc
hlt
sarb
sub
jo
in
cmp
jle
in
orl
cmpsl
cmp
add
add
sub
subl
push
stos
jo
jle
mov
test
popf
int
negl
mov
lods
and
data16
out
shrd
cmp
push
cmp
mov
imul
rol
nop
test
fisubrl
fsts
xor
outsl
in
mov
mov
ja
mov
pop
mov
rcll
or
movsb
push
mov
sbb
stos
jnp
insb
cs
xorl
aam
push
lcall
add
dec
jge
xchg
lods
lock
out
pop
push
and
sub
dec
popa
sub
xchg
lret
out
jle
repnz
insb
jg
imul
push
push
push
in
add
movsl
cwtl
je
cmp
jnp
ret
or
repz
xlat
scas
mov
xor
js
mov
fisubl
movsb
mov
push
loopne
mov
aaa
lahf
sub
in
mov
into
xchg
xchg
and
bound
xor
fcoms
in
loop
dec
das
pop
push
cmp
outsb
ret
test
sbb
js
add
sti
cmp
mov
add
movsb
das
jbe
fwait
adc
rcll
insl
dec
and
jecxz
jnp
cmp
or
movsb
jl
fs
xor
pop
jo
cs
inc
jnp
push
ja
inc
rcll
xchg
shll
mov
rcl
mov
inc
sub
popf
inc
and
cmp
xchg
nop
ds
fwait
movsl
xchg
cmp
aas
xor
jno
sub
mov
adc
sub
imul
aam
mov
rorb
rcr
icebp
xor
in
and
out
dec
xchg
jge
or
push
pushf
pusha
faddl
dec
pop
fwait
test
shll
lret
andb
jae
or
stos
jg
outsb
dec
fstp
push
arpl
mov
data16
push
and
jns
jnp
inc
nop
out
pop
pop
sub
or
ds
pop
dec
lcall
xor
sub
lods
xor
sarl
add
int3
clc
mov
scas
out
out
cmp
iret
xchg
jle
cmc
lock
dec
icebp
dec
in
adc
pop
lret
movsb
pop
and
out
mov
popf
dec
lock
icebp
mov
mov
in
xor
insl
pop
inc
in
or
add
jne
cmp
mov
js
push
lea
in
lods
ret
lcall
pop
sbb
mov
cwtl
sub
aad
xchg
gs
or
adcl
or
enter
stc
xchg
mov
fildll
adc
rcrl
mov
xor
cld
xor
inc
xor
in
mov
xchg
sbb
and
bound
aaa
call
mov
test
arpl
outsb
mov
and
enter
sub
pop
insb
subl
mov
lret
aad
or
lret
fs
aam
mov
dec
test
bnd
aad
jne
jp
and
mov
dec
sahf
aad
pop
mov
fsts
ret
cltd
movsl
cmpsl
jmp
inc
xchg
jl
sbb
test
push
push
pop
je
sbb
shlb
das
arpl
push
or
scas
add
iret
push
andl
and
mov
jb
inc
dec
pop
cmpsl
imul
mov
sub
pop
in
sbb
repnz
add
mov
xchg
loopne
xor
jo
xor
hlt
cmc
jnp
mov
cmpsb
pcmpeqd
mov
movnti
lods
dec
in
dec
add
scas
out
xchg
sti
repz
push
rcrb
xchg
cs
loopne
stos
stos
int
ret
int
jnp
mov
test
iret
mov
sbb
mov
cld
rolb
inc
roll
int3
push
les
add
aas
adc
jp
and
pop
cmp
mov
pop
int
sub
int3
in
mov
xor
fwait
adc
fildl
jle
mov
xchg
mov
inc
cwtl
call
cli
inc
enter
mov
sub
scas
pushf
fwait
je
pop
xlat
aad
mov
xor
test
ret
inc
jns
popa
dec
in
mov
fiadds
aam
sub
in
ffreep
push
arpl
outsl
mov
lods
add
out
sub
movsb
xor
or
sub
insl
xor
cmp
iret
adc
adc
mov
jb
fstpt
daa
enter
push
add
jnp
faddp
cmpsl
mov
testb
mov
js
jne
add
xor
popa
subl
shlb
jg
in
adc
mov
pop
insb
loope
xor
movsl
push
adc
mov
add
movsl
xor
add
sub
adc
pop
sub
jnp
in
imul
pop
mov
ud0
rorb
push
pop
xchg
loope
inc
inc
xor
in
imul
in
in
mov
pop
in
negb
xchg
imul
mov
mov
adc
or
lods
xlat
xchg
ja
fnstcw
std
dec
je
ret
je
cmp
sub
and
mov
inc
jp
mov
out
mov
push
test
mov
rol
ljmp
adc
jno
pop
mov
xchg
inc
test
ret
add
shl
cmp
lret
jmp
andb
dec
orb
inc
and
ret
in
in
rcrl
fistps
lcall
push
xor
jmp
hlt
jns
out
and
mov
xor
adc
stos
xchg
dec
xor
cmp
jo
mov
and
sub
adc
cli
repnz
pop
mov
lcall
popa
mov
fildl
fdivrl
dec
push
leave
cwtl
sbb
inc
push
movsb
or
push
fmuls
lods
mov
fsubrs
imul
adc
mov
pop
jb
lret
xchg
xor
mov
ret
push
inc
pop
nop
fisubrl
pop
loope
or
aad
pop
pop
push
negb
rclb
pop
add
push
ja
hlt
mov
push
adc
add
pop
or
repnz
cmpsb
xchg
xor
shll
es
std
ret
rep
outsb
jb
jge
or
ss
test
data16
sbb
je
pushf
fsub
hlt
lret
cmp
cs
jmp
or
bound
shrl
into
outsb
imul
divb
movsl
fcmovbe
es
out
dec
enter
adc
pop
daa
dec
jbe
rorb
pushf
sbb
pushf
popf
xor
and
jge
add
das
mov
mov
pushf
test
or
mov
fists
stos
dec
int3
fucomip
fucompp
mov
pop
and
mov
ss
sar
push
add
add
aaa
inc
imul
lret
icebp
imul
out
mov
jae
popa
and
push
adc
push
in
jmp
jne
cmp
dec
fldt
cmp
data16
cmp
and
cmp
aaa
push
mov
mov
sahf
clc
sarl
movsl
inc
lret
andb
movsl
pop
push
movsb
mov
ja
das
xor
scas
test
add
cmp
test
int3
or
int
mov
mov
test
notb
les
xchg
gs
cmp
sbb
mov
pop
cwtl
push
and
fistl
pop
xchg
and
test
shr
mov
in
mov
mov
xchg
int3
lods
mov
lds
mov
cld
int3
cwtl
xchg
data16
xor
cmp
xor
jne
push
sbb
pop
push
dec
bnd
push
dec
sar
and
jbe
imul
pop
or
loopne
xlat
lret
add
mov
pop
out
mov
push
js
test
iret
jge
stos
sbb
data16
scas
mov
or
cli
push
push
mov
arpl
xchg
mov
sar
adc
sbb
aad
xchg
jp
sub
jo
cs
icebp
addr16
push
mov
es
xchg
and
pusha
jns
xor
pop
js
jno
fs
arpl
das
cmpsb
lret
xor
push
jb
dec
xchg
push
push
gs
pop
add
incb
mov
xorl
out
xor
pusha
lahf
cs
lods
sub
mov
popa
jae
fs
jmp
fisttps
loop
pop
imul
adc
cmc
inc
int
ret
pusha
inc
iret
rcll
push
inc
lret
ret
sub
adc
adc
push
push
out
and
push
cmp
xor
sahf
lcall
fldenv
enter
xchg
mov
dec
mov
dec
dec
adc
test
sub
mov
shrb
in
xor
cmovge
ret
xor
test
cmp
jg
dec
xchg
dec
pop
repz
adc
adc
mov
push
mov
cmpl
shlb
fldt
push
mov
mov
pop
loope
pop
sbb
int
imul
pop
lcall
inc
cmp
sub
cmpsl
and
aam
adc
mov
pop
imul
outsb
xchg
test
cli
xchg
fdivrl
xor
les
push
inc
cld
mov
stos
push
sbb
sahf
aam
jb
addl
jge
or
idivl
dec
leave
lret
xlat
sbb
cltd
or
xor
and
and
in
xor
iret
imul
cwtl
xor
jne
mov
cmp
mov
leave
je
aam
icebp
cli
insb
sbb
lods
popa
mov
addl
pop
push
outsl
add
adc
adc
lcall
jl
xchg
scas
mov
add
out
fwait
enter
or
xchg
xorl
xchg
cmp
mov
push
inc
adc
data16
dec
mov
xchg
mov
loopne
aaa
ret
and
dec
jecxz
mov
mov
invd
mov
mov
add
mov
loop
arpl
imul
ss
pcmpeqb
pop
jb
cmp
fs
mov
mov
stc
rclb
fbld
pop
popa
push
dec
loop
std
gs
enter
enter
mov
es
lahf
or
mov
out
sbb
cmp
cmp
pop
push
loopne
mov
stc
aas
and
aam
pop
jmp
shlb
shlb
cwtl
pop
mov
push
xor
push
mov
jns
repnz
popa
das
fwait
sub
loopne
push
jb
outsl
pop
pushf
lcall
test
cmp
outsb
les
vpmaxsw
or
hlt
in
rorl
add
xor
push
adc
xchg
jnp
jb
add
into
dec
dec
mov
fs
push
orl
fwait
sub
out
orb
test
rorb
roll
neg
xor
jle
inc
bound
xorb
fwait
cmp
adcb
dec
dec
aaa
int
jo
bound
imul
mov
daa
mov
hlt
mov
jns
adc
pop
insb
xchg
mov
rolb
testb
shrl
mov
sbb
cltd
stc
test
cmp
or
pop
adc
fldln2
ja
xor
mov
leave
imul
pop
movsb
ret
testb
pop
cmpsl
add
pop
rcr
or
sbb
mov
push
mov
pop
fs
add
lea
ljmp
adc
test
or
rolb
fnstenv
mov
mov
xchg
push
clc
mov
xor
mov
jp
test
mov
repz
add
mov
cmp
xchg
jae
sbb
sbb
mov
rcrb
mov
nop
lods
nop
jno
hlt
dec
pusha
dec
inc
xchg
pop
aaa
sbb
fbld
jo
mov
mov
int
pop
jo
mov
addr16
add
stc
pop
push
dec
aad
add
mov
add
lcall
sub
lds
inc
cld
jge
addr16
outsb
movsl
sub
les
rorb
push
adc
inc
mov
mov
push
jmp
out
inc
push
mov
stc
or
lahf
shl
xchg
mov
gs
mov
jmp
mov
hlt
fldt
jle
push
cwtl
push
or
lods
xor
shrl
shll
ljmp
popf
outsb
jae
or
cmp
and
sbb
js
nop
mov
daa
mov
loope
jmp
andb
adc
pop
fcmovne
push
fiadds
pop
mov
les
dec
test
jmp
es
pop
mov
adc
aas
sarb
jl
cld
push
xor
adc
mov
rorb
push
push
es
in
pop
mov
xor
pop
push
hlt
or
mov
xor
mov
adc
sub
xor
ds
mov
jno
jge
push
jae
adc
imul
or
xchg
adc
sarb
pop
fisttpl
repnz
ror
xor
jnp
adc
sahf
cmp
lret
loope
adc
icebp
dec
test
mov
mov
shl
out
inc
popa
mov
sbb
dec
or
in
data16
test
lcall
pop
and
xor
and
dec
cmpsb
jb,pn
dec
mov
and
cmp
or
outsl
int3
pop
fcomps
and
rcl
dec
insl
in
and
andb
push
or
xorb
xor
in
and
ss
add
and
lods
out
jnp
push
xchg
mov
xchg
cmpsb
hlt
pop
movd
rcrl
orl
enter
out
ret
fimuls
out
cmp
jge
lret
and
fucomp
mov
ds
adc
push
mov
stos
enter
sbb
pop
mov
icebp
jmp
add
and
mov
sub
dec
popf
fistl
js
pop
sub
lret
out
inc
inc
int3
and
push
lods
pop
pop
add
mov
or
cltd
repz
mov
iret
xchg
or
inc
jl
adc
fs
rcrb
int
mov
ss
jge
inc
rorb
cmp
cwtl
jne
js
adc
insl
das
dec
dec
or
xchg
stos
arpl
test
xchg
push
lods
xchg
adc
and
mov
mov
pop
outsb
pop
insb
iret
mov
icebp
add
pop
mov
push
sahf
sahf
imul
xchg
test
pop
xchg
into
and
pop
adc
fisubrs
inc
adc
push
pop
xor
or
inc
mov
les
test
insb
dec
mov
ret
daa
dec
mov
movsb
or
sbb
push
mov
faddl
adc
push
mov
leave
addr16
aaa
scas
and
ret
pop
stos
out
adc
data16
push
mov
fcmovnu
lods
mov
mov
ss
and
mov
cmp
mov
stos
cmp
ficompl
inc
fldcw
mov
push
pop
pop
mov
hlt
test
sub
lret
lahf
push
xor
mov
shlb
outsl
cmpsl
xchg
add
jl
lods
nop
xor
add
dec
pusha
rcr
in
outsb
cmp
subb
mov
clc
pop
jb
mov
sbb
or
push
andb
mov
jle
mov
xor
add
mov
aam
and
pop
push
push
fwait
cltd
push
data16
adcl
stos
push
into
repnz
push
mov
pop
pusha
sub
adc
add
mov
lahf
rol
bnd
inc
inc
lret
bound
adc
dec
dec
mov
pop
push
lret
jmp
popa
push
mov
outsb
cs
stc
pop
xchg
jl
sub
push
out
lods
ficoms
ds
jae
push
mov
jp
push
mov
mov
push
add
dec
loopne
notb
loopne
test
jne
jae
ja
movsb
xor
xchg
adc
sbb
xor
cs
outsl
mov
femms
pop
ret
xor
into
pop
inc
dec
test
pop
push
addb
xchg
clc
lods
clc
jnp
sub
cmpsl
shl
outsl
js
mov
push
cmp
add
and
push
mov
pop
add
fildll
inc
add
fcoms
dec
or
dec
movsb
mov
outsb
pushf
xor
and
rcrb
inc
sub
leave
add
pop
cmpsb
or
sti
pop
cmp
xchg
inc
enter
mov
mov
mov
scas
mov
inc
mov
mov
jecxz
inc
jo
arpl
mov
cmp
mov
int
jp
pop
mov
mov
xor
stos
inc
ja
testb
push
cmpsb
andb
mov
mov
jae
cmp
mov
push
fs
jecxz
cmp
leave
jno
jp
outsl
pop
popf
xorb
dec
hlt
aad
dec
lcall
xchg
imul
sbb
out
cmp
addb
sbb
sbb
mov
in
inc
cmp
fstpt
cwtl
xor
mov
lcall
addr16
ss
jo
cmp
dec
sbb
in
insl
jmp
xor
movl
ret
and
imul
push
xchg
pop
iret
ret
jg
es
cmp
mov
pop
mov
aam
cmpsb
pushf
out
sbb
push
xchg
push
sarb
movl
mov
out
nop
adc
cmp
stos
rcrb
mov
add
ss
or
repnz
les
je
repnz
mov
cmp
cmpsb
jecxz
add
stc
insl
data16
out
sub
xlat
jnp
sbb
imul
fisubrl
cmp
and
testl
pop
inc
lcall
insl
sub
mov
pop
mov
loope
jecxz
dec
es
inc
out
cmpsl
jno
and
xchg
addr16
cs
test
and
das
inc
mov
sarb
push
scas
add
cmc
pop
dec
sub
rol
pop
mov
les
or
mov
repz
add
xchg
sahf
inc
fsub
test
and
sti
inc
cmp
xchg
pop
aam
adc
push
push
pushf
decl
dec
sub
loopne
neg
mov
inc
cwtl
mov
les
in
jb
je
xchg
push
fs
dec
andl
inc
js
jle
rol
and
subb
sarl
ljmp
inc
dec
andb
mov
rorb
loopne
movsb
jge
shll
mov
mov
mov
xor
out
cli
inc
jmp
xlat
push
xchg
jns
add
dec
mov
and
and
add
or
loope
xchg
mov
ss
sbb
movsb
or
lea
mov
pop
mov
and
sub
repz
filds
sbb
dec
xchg
mov
add
lock
pushf
lcall
cli
jne
push
aas
in
in
dec
xchg
mov
add
xchg
test
or
pushw
pop
push
mov
leave
roll
stos
fisttps
xor
adc
and
xlat
mov
sub
and
push
mov
mov
ret
adc
flds
loope
bound
bnd
enter
lods
mov
pushf
es
mov
xlat
fstps
lret
mov
and
mov
test
int
mov
mov
add
mov
lcall
mov
inc
rolb
in
ret
into
jbe
stos
pop
jecxz
js
sub
fs
out
enter
pop
xlat
fwait
dec
fildl
xchg
jnp
and
sti
fidivs
test
daa
ret
xor
fisttpl
dec
addr16
negl
imul
pop
data16
or
push
rolb
nop
pop
mull
xor
inc
pop
sti
jno
jmp
fisubs
fstpl
inc
pop
fdivl
inc
xor
mov
mov
aad
jge
sbb
iret
push
bound
shr
fcmovnb
adc
je
test
pop
cmp
and
or
adc
clc
pop
pop
inc
mov
inc
gs
addr16
fcmovne
mov
shrl
xor
or
nop
jl
jno
rcll
stos
into
sub
dec
cmpsl
lods
mov
pop
push
lret
scas
mov
pop
push
inc
push
movsl
int3
shl
pop
imull
mov
iret
outsb
add
push
movsb
sub
xor
dec
push
fs
and
sub
sub
fisubrs
mov
movsb
sti
cld
icebp
mov
push
addr16
jae
rcll
leave
das
push
xchg
push
mov
hlt
push
mov
cmc
mov
pusha
adc
ja
inc
mov
jno
mov
mov
outsb
es
ds
xor
add
or
in
incl
iret
data16
in
scas
add
mov
repz
xchg
pop
imull
mov
xor
lods
push
dec
insb
mov
loop
mov
sub
imul
sbb
adcb
int3
addl
imull
sub
cmp
push
ja
push
or
jbe
cmp
lock
ljmp
mov
out
pop
divl
sub
sbb
in
lret
mov
test
xor
jle
icebp
mov
sub
in
pushf
sbb
xlat
aad
xchg
es
pop
dec
loop
xchg
xchg
cmc
or
sahf
and
mov
mov
flds
imul
gs
pop
jns
jl
data16
daa
cld
das
lods
lea
push
push
mov
jb
xchg
rorb
lret
cmp
cmp
mov
jecxz
mov
in
xor
ljmp
or
loope
mov
adc
and
inc
out
arpl
xlat
push
orb
stos
mov
mov
push
adc
cmpsb
data16
pop
and
push
push
inc
pop
jb
insb
jbe
mov
scas
mov
xor
xchg
mov
lock
and
xchg
push
aad
sbb
sub
out
pop
ja
pop
or
les
mov
insb
and
and
xchg
shlb
xchg
mov
addr16
shr
add
mov
mov
push
jb
int3
dec
call
cmp
sti
xor
mov
xchg
jmp
test
and
dec
mov
mov
bound
xor
mov
mov
test
jecxz
sarb
dec
into
mov
pop
mov
xchg
mov
dec
push
mov
pushf
adc
jmp
adc
test
xor
aaa
sub
out
push
dec
jecxz
pushf
xchg
bound
hlt
mov
jae
mov
rorb
pop
inc
and
cltd
dec
mov
lahf
stos
or
lret
push
adcb
out
les
jmp
push
or
sahf
fstl
testb
mov
fstl
cmp
dec
int
ret
fnstcw
sbb
loop
in
pop
adc
push
aad
jp
mov
and
xchg
cmp
jne
stos
jns
push
pop
imul
popa
mov
pop
shr
enter
mov
lcall
pop
mov
in
dec
ss
ja
or
outsb
xchg
cmp
daa
cwtl
dec
jp
inc
xor
lods
push
or
das
cmpb
inc
mov
inc
fisttpl
cmp
in
test
push
rclb
mov
mov
push
push
mov
sbb
loop
and
rcl
xor
das
arpl
mov
push
repnz
cli
push
loop
inc
test
adc
lcall
loopne
sahf
es
loop
or
or
test
test
cmp
sbb
adc
mov
and
cld
inc
cli
and
aaa
mov
sbb
sub
cmp
mov
out
out
cltd
jae
mov
jmp
adc
or
repz
popa
enter
mov
and
xor
ljmp
xchg
jno
movsb
loope
pop
jae
out
pop
xchg
mov
or
mov
ss
lcall
push
cs
cmpsb
icebp
sbb
or
movsl
mov
add
repz
lods
imul
icebp
xor
jmp
dec
xor
cmp
iret
stos
fnstsw
or
into
shrl
and
sub
lods
pusha
shll
test
js
out
lds
sub
sub
push
repz
jg
mov
mov
sarl
sbb
sbb
data16
out
aas
push
fldl
sti
out
mov
fwait
cmp
in
int
enter
mov
xor
jg
xchg
mov
imul
cmc
xchg
jae
pop
mov
pop
jmp
sbbb
or
add
repnz
dec
test
sti
mov
cmp
shrl
xor
sbb
clc
ficompl
into
mov
and
and
scas
jno
add
bound
shlb
cltd
sub
loop
cmp
mov
sbb
outsb
jno
sbb
add
outsb
or
stc
popa
xchg
adc
arpl
jmp
sbb
and
sbb
ss
and
dec
mov
pminub
jne
xchg
sbbb
pop
and
push
xor
iret
inc
fwait
out
sbb
addr16
lret
sahf
or
scas
sbb
sub
add
fstpt
sub
es
cmc
fsubrl
dec
sahf
lcall
rol
mov
je
lahf
dec
out
jmp
mov
jp
mov
cmp
sub
xor
lds
pop
push
cmp
mov
ljmp
add
lods
push
into
pushf
shlb
scas
sub
pop
fnstenv
pop
ss
and
mov
lods
inc
adc
sarb
je
pop
cmp
test
mov
std
xchg
das
cmp
imul
dec
dec
adc
push
sarl
into
mov
sub
popa
jge
adc
js
cmp
and
aaa
mov
movsb
mov
aas
inc
and
data16
addr16
clc
mov
sbb
sbbl
pop
adc
sbb
cmp
lcall
loopne
out
xor
cmp
mov
stos
cmp
xor
repnz
push
xor
in
lret
je
xor
dec
aaa
les
pop
push
sub
mov
push
pop
stc
js
xchg
dec
sarl
adcl
ret
divl
adc
stc
lret
inc
mov
outsl
sbb
push
lcall
dec
ret
push
popl
sbb
dec
inc
jbe
cmp
shll
arpl
add
les
adc
test
cmpsb
xor
inc
je
mov
mov
sahf
and
inc
mulb
mov
adc
cmc
dec
nop
sub
lcall
ljmp
into
sub
scas
arpl
pop
mov
xchg
sbb
fsubp
mov
mov
pop
inc
insb
jne
nop
mov
dec
push
dec
ficoml
push
mov
pop
xchg
movsl
lock
and
push
dec
lods
adc
pop
add
lock
xchg
popa
enter
cmpsb
adc
lods
jl
dec
jns
mov
sub
lret
mov
xor
inc
lds
xor
fnstsw
xor
scas
xor
mov
pop
add
or
pop
adc
scas
mov
and
cld
jnp
ss
push
inc
popf
call
test
sbb
outsb
ja
pop
jae
stos
sbb
jg
inc
push
jmp
mov
lcall
dec
test
outsl
imul
mov
sbb
sub
sub
jle
jg
or
adc
xor
mov
jp
sub
mov
loop
insb
in
inc
xor
dec
mov
mov
push
int3
inc
xchg
jnp
sti
andl
cwtl
insl
outsl
out
sub
out
lcall
cmpsl
cmp
bnd
mov
ret
les
pop
sub
into
pop
sti
jg
mov
lock
ljmp
fistl
enter
xlat
mov
hlt
adc
fnstsw
repnz
std
pop
fwait
or
js
es
xchg
lahf
mov
stc
mov
or
mov
jmp
lea
test
mov
je
test
das
out
mov
sti
xchg
xor
mov
stos
dec
fwait
mov
cmc
das
xor
repnz
and
cmc
and
dec
inc
in
ret
xchg
or
iret
ret
cmp
loop
adc
jns
mov
stc
mov
fnstenv
sbb
mov
xchg
mov
scas
mov
lods
pushl
call
fcomp
test
mov
sub
lret
xor
dec
test
mov
fdivrl
fdivrs
xchg
xor
pop
clc
mov
mov
stos
pmaddwd
xor
std
jmp
scas
mov
mov
andb
imul
mov
cmpsl
jmp
lret
adc
lock
xor
push
call
test
imul
pop
ret
mov
sti
cmp
clc
fdivr
mov
testl
fcoms
mov
inc
xchg
hlt
imul
fs
daa
inc
ret
je
fstpl
std
les
push
mov
stc
sbb
clc
jg
add
xchg
repnz
sti
mov
leave
stc
outsl
sub
stc
icebp
mov
mull
mov
pop
out
aaa
addr16
ljmp
mov
aaa
lahf
fcmovnu
mov
lea
sbb
xchg
loop
jne
or
aas
lods
out
and
mov
fldenv
je
pop
fwait
pop
jb
jg
jecxz
add
out
into
push
paddb
mov
scas
icebp
sbb
or
inc
sti
out
mov
sahf
xor
in
or
shl
inc
lret
fmuls
mov
in
sub
cmc
hlt
fisttpll
jp
inc
scas
stc
jae
cwtl
inc
ja
gs
ja
jg
fisubrl
xchg
clc
stc
ds
cld
pop
jecxz
mul
or
jle
aas
fcmovu
dec
mov
cltd
call
inc
push
cltd
push
imul
cmc
fistpl
scas
jb
clc
pop
mov
jmp
popa
movsl
lahf
js
sbbl
dec
cmc
xchg
int3
call
call
in
aaa
incl
sti
pop
outsb
cmpsl
divb
jl
ficoml
push
fcomi
movsl
pop
arpl
jecxz
xlat
mov
cmp
cltd
add
sbb
mov
icebp
add
andl
or
mov
lods
xor
lahf
push
out
xor
add
in
sub
in
and
pop
mov
lcall
addr16
adc
aas
dec
shl
push
mov
hlt
and
fsubs
out
cmpsb
andl
hlt
jmp
xlat
arpl
in
mov
and
popf
jg
fbld
dec
aas
and
xor
into
and
in
push
xchg
lds
cmp
jp
aas
leave
bnd
xchg
fldcw
sbb
lret
lahf
dec
sbb
inc
mov
pop
inc
jmp
imul
inc
out
clc
jnp
sar
lock
mov
mov
ja
mov
in
iret
in
jo
sahf
aam
mov
aas
rorl
call
inc
mov
xchg
sbb
xchg
outsl
leave
jne
mov
imul
ret
sbb
imul
fmuls
add
insl
sarb
ret
xlat
jl
push
xchg
orl
add
mov
xchg
ja
fldln2
lret
outsl
add
out
neg
xchg
sbb
je
cmp
and
sahf
fdivrp
xchg
dec
sbb
jb
or
add
out
inc
pop
cmp
imul
cli
or
rolb
inc
mov
test
sub
jbe
cmp
stos
fld
scas
xchg
add
jo
fcompl
cmp
or
sarl
aad
and
dec
stos
call
ffreep
add
push
outsl
mov
leave
xchg
loop
rolb
sbb
leave
loope
sbb
lock
mov
shl
xchg
mov
dec
into
sti
cvtdq2ps
xlat
sub
fs
fdivrl
sbb
gs
sub
roll
jb
push
push
adc
stc
sahf
and
dec
fucomip
lcall
pop
pushl
xchg
sbb
push
subb
sbb
stos
and
ret
push
push
pop
add
jle
xor
scas
inc
lret
insb
sub
test
inc
push
lock
mov
mov
xchg
std
addr16
out
outsb
daa
push
in
clc
dec
es
mov
ret
stos
and
lret
jnp
test
mov
andb
loope
in
rcr
loopne
repnz
das
lds
sub
push
adc
fcom
cmp
pop
movswl
mov
pop
pop
ret
dec
js
pop
jb
jle
mov
into
push
insl
sbb
push
bound
xchg
push
jecxz
push
flds
arpl
or
cmc
adc
movsb
ss
enter
mov
xchg
testb
mov
loope
lea
mov
rolb
lea
popa
into
mov
testl
lea
ja
jl
jne
leave
dec
cli
pushf
lret
xor
mov
clc
subl
pop
or
lahf
jnp
fcomps
pop
rorl
scas
sahf
ret
popa
dec
mov
dec
mov
lds
stos
pop
and
mov
mov
or
dec
std
mov
adc
loop
enter
jo
pop
xchg
mov
and
push
cltd
es
addr16
icebp
addl
jns
inc
sbb
add
adc
addb
xchg
popf
lods
aad
ret
mov
dec
jg
and
popl
jle
test
ja
mov
xor
inc
or
or
mov
leave
inc
adc
push
push
pop
xor
hlt
xchg
pop
or
fs
rcrb
dec
cmpsl
call
xchg
xchg
push
je
lahf
ret
dec
push
pusha
cmp
dec
xchg
push
ret
dec
test
lock
push
or
pop
pop
loopne
jb
jl
jnp
add
fldt
loopne
test
pop
jne
clc
mov
mov
dec
aas
inc
stos
push
cmp
sbb
xchg
sub
mov
jbe
int
pushf
mov
xchg
xlat
pop
aas
adc
adc
testb
test
push
xor
jno
cld
movsb
rcrb
add
xchg
sub
xchg
fidivrl
sub
sar
inc
je
sbb
push
add
sar
lcall
adc
mov
sbb
xchg
inc
mov
fwait
pop
in
test
pusha
jno
outsl
fnstcw
in
xchg
push
mov
xchg
ja
int3
loope
pop
fdivp
aas
push
pop
sub
iret
mov
scas
rcrb
inc
out
jp
xchg
test
je
pop
mov
aaa
iret
outsl
loope
jo
into
mov
adc
adc
cmpsl
and
into
and
repz
sti
sar
jmp
dec
pop
loope
mov
push
mov
incb
lock
test
xchg
xor
fistps
add
ret
pop
gs
in
jo
push
jno
xlat
loope
inc
les
sbb
js
push
fcoml
push
daa
xchg
mov
jnp
fwait
ljmp
andl
jg
decb
call
jno
mov
imul
sub
shll
ret
fisttpl
dec
pop
pop
xchg
call
adc
cmp
xor
addl
xchg
dec
adc
or
xchg
data16
mov
iret
xor
or
mov
or
add
xor
mov
fcos
mov
jle
cmp
lret
cmp
insl
test
scas
pop
scas
pop
into
je
cmp
sarb
fwait
lods
mov
or
xchg
mov
mov
lods
fwait
in
mov
out
sbb
jl
pop
push
xor
dec
jbe
out
ja
out
jp
xor
mov
cltd
cmp
sahf
ljmp
jb
adc
push
sub
rorb
sbb
in
cmp
addb
hlt
popa
loop
test
stc
std
sbb
push
push
leave
cli
stos
mov
push
arpl
pop
dec
or
xchg
inc
ljmp
loop
imul
fmull
push
movsb
out
clc
repz
cmp
sub
xchg
mov
adc
scas
lret
es
orl
fucomp
data16
add
push
clc
fmul
adc
lea
jge
test
mov
dec
pop
aas
test
mov
jbe
gs
jmp
loop
mov
mov
dec
ljmp
dec
repnz
loope
test
jge
cmp
or
mov
lods
add
lcall
hlt
xor
adc
icebp
mov
out
mov
mov
add
pushf
xchg
push
mov
xlat
out
pop
push
ret
xchg
sahf
push
mov
push
cwtl
lcall
add
stos
call
pop
inc
mov
mov
push
loope
divl
sti
lcall
in
and
inc
and
adc
ret
jno
xor
dec
lret
shl
fstpt
sub
test
shll
testb
sbb
andl
mov
iret
inc
popa
iret
mov
mov
mov
outsl
fisubl
gs
fistpll
mov
movl
jnp
hlt
int
jns
shll
call
sti
mov
pop
ret
sbb
xchg
adc
mov
xor
pop
xchg
dec
out
xchg
stos
mov
inc
movsb
and
adc
mov
jnp
lret
xchg
jl
pushf
shrb
jle
sti
imul
cmpsl
aas
ret
xlat
mov
cmp
lods
cmpsb
or
sbb
out
adc
iret
mov
nop
cmpsb
aad
test
mov
in
cmp
call
fstl
mov
cld
dec
jns
cmp
incb
cs
lahf
jmp
loop
inc
lret
outsl
cmpsb
jo
lock
ja
pop
imul
mov
aas
les
adc
nopl
cmp
nop
add
aad
les
test
shl
push
pop
data16
dec
or
int
adc
fisubs
push
lock
or
sub
mov
push
jmp
ds
or
inc
pop
add
fistpll
fcoml
test
cmp
sbbl
roll
mov
idiv
test
adc
push
push
jmp
mov
stos
popf
mov
xor
pop
and
push
mov
xchg
scas
dec
rclb
pop
or
push
mov
jo
xlat
fs
imul
mov
adc
and
addr16
inc
dec
sub
mov
into
mov
enter
jmp
test
xchg
movsl
cld
scas
mov
shl
cltd
mov
adc
jae
arpl
adc
lahf
ret
sub
inc
stos
into
lock
into
push
dec
fld1
fistps
lcall
and
std
xor
pop
or
ljmp
dec
jle
cmc
mov
cld
scas
mov
inc
cmp
xchg
daa
rorl
bound
xchg
xchg
fnstsw
in
and
dec
aam
pop
jp
es
pop
or
data16
xor
xchg
jno
out
out
sahf
mov
cmp
sarl
movsl
in
jns
inc
insl
add
xchg
dec
xchg
jbe
bnd
jmp
into
adc
xor
repz
and
fstps
cmp
test
add
fidivrl
out
inc
ror
adc
gs
sub
xchg
mov
or
fistl
xchg
ja
test
nop
popf
data16
sbb
cmp
icebp
outsb
xchg
xchg
mov
fbld
pop
negl
sti
daa
std
add
lret
push
icebp
mov
sbb
jae
and
outsb
mov
add
pop
sahf
pop
ret
sub
pushl
popa
aas
mov
lock
imul
fs
dec
mov
jnp
cmp
push
cltd
aas
popl
dec
dec
std
je
xchg
xchg
rcl
xchg
sub
push
pushf
es
jge
adc
jbe
aad
pop
test
xchg
xorl
pop
push
fmuls
imul
jbe
mov
mov
mov
jle
iret
cs
cltd
mov
rolb
fstpt
sbb
fwait
pop
xchg
mov
jmp
jecxz
mov
aaa
and
add
out
and
push
out
jecxz
rcll
sbb
aad
int
cld
xchg
sahf
mov
movsl
dec
and
xor
nop
test
mov
loopne
ret
loope
add
repz
das
push
xchg
mov
stos
ja
sbb
pop
jne
mov
push
mov
xchg
ret
and
push
imul
jge
pop
or
mov
add
fs
mov
pop
icebp
inc
loopne
shlb
arpl
and
jmp
add
pop
aas
subb
shl
pop
out
cmpsb
cld
pop
mov
add
jns
cld
sub
imul
pop
clc
loopne
les
dec
popa
fildll
and
cmpsb
ds
aas
pop
jae
fisubrs
xlat
adc
cld
stos
jp
push
pop
inc
dec
xchg
adc
push
xor
xchg
lcall
pmullw
rorb
jbe
ja
scas
mov
scas
pop
fbld
jae
jecxz
psrlw
std
pop
push
sti
out
cmp
pop
push
fistps
pop
mov
mov
push
bound
cmp
push
mov
int3
rorl
add
lahf
jns
cmp
imul
mov
xlat
cmp
push
je
repnz
lret
push
dec
fsub
fidivrl
xor
or
out
shll
aam
test
test
add
data16
enter
in
and
mov
icebp
jo
mov
es
cmp
roll
xor
jae
enter
push
aaa
or
divl
mov
or
adcb
jno
ss
mov
cltd
mov
int
mov
jle
mov
and
rorb
test
mov
loop
ljmp
aad
rcl
push
test
lods
xchg
fnstcw
jno
pop
es
out
lret
sbb
lea
nop
mov
xchg
out
add
cmp
imul
pusha
adc
nop
adc
popa
pop
loope
aas
sub
insb
xor
sub
fcompl
xor
adc
out
xchg
andb
jp
mov
mov
sub
aad
pop
sub
sub
cli
lret
daa
hlt
adc
lds
call
push
cmpxchg
subb
mov
lock
fdivs
mov
loop
lret
dec
push
ljmp
out
subb
pop
inc
pop
es
dec
je
dec
scas
imul
xchg
cwtl
daa
sbbb
dec
arpl
push
in
inc
mov
decl
dec
and
loop
jo
ljmp
mov
scas
adc
adc
sub
movsb
and
scas
clc
mov
outsb
inc
pop
mov
or
std
push
sbb
lea
inc
insb
das
mov
push
mov
int
xchg
xchg
jl
cmc
fcmovbe
bound
push
cmpsl
dec
adc
pop
sbb
sub
xchg
add
decb
iret
in
mov
jmp
pop
inc
adc
cli
lcall
daa
fildl
inc
push
add
jne
xchg
push
mov
addr16
movl
pop
out
mov
fucomp
pop
xor
daa
xor
push
scas
xchg
jnp,pn
cmp
mov
lret
repnz
cmc
sub
lret
in
scas
mov
push
dec
jmp
adc
stos
pushf
push
dec
cmp
jae
rcll
lret
add
movsb
cmc
sbb
xchg
out
iret
pop
cld
mov
js
cmpsb
mov
dec
inc
dec
ljmp
sub
xchg
aad
xor
xor
xor
cld
sbb
and
movsb
pop
loopne
ret
repz
iret
lds
cmp
cmp
add
fdivl
and
pop
movb
xlat
std
mov
mov
mov
push
xorl
cltd
fdivl
inc
negl
fstpt
pop
mov
fnstcw
loope
cmpsb
in
out
dec
or
aam
inc
fstpt
adc
mov
ja
mov
xchg
adc
and
outsl
pop
push
sbb
cld
and
xchg
lret
clc
int
mov
scas
out
mov
cmpsb
les
dec
movsl
cs
add
xchg
addr16
lret
dec
orb
test
dec
icebp
test
nop
push
stos
dec
insl
or
jbe
popf
fdivrl
mov
push
lahf
test
jo
pushf
test
adc
push
jl
call
sub
mov
mov
sbb
dec
sbb
popf
into
and
add
js
adc
mov
shrb
mov
adc
shll
pop
cmp
inc
mov
flds
cmc
pop
inc
rclb
or
or
push
lahf
mov
pop
sub
outsb
sbb
xchg
cmp
movsl
int3
inc
fwait
call
pop
xchg
test
testb
pop
adc
inc
rolb
or
std
insb
les
xor
stc
mov
xor
testl
fsts
sub
push
mov
sub
lock
stos
pop
ja
dec
cmp
lds
inc
idivb
clc
repz
lock
stos
or
sub
arpl
or
imul
xor
leave
pusha
icebp
xchg
jbe
dec
fiaddl
pop
jl
rclb
add
sub
xchg
push
dec
dec
xor
icebp
inc
cli
sbb
ficompl
loop
jno
fnstcw
popa
mov
jle
pop
push
pop
xchg
sbb
add
xchg
nop
rcrb
nop
hlt
xchg
inc
mov
cld
jns
test
das
mul
out
push
lahf
les
pop
jmp
aad
and
xchg
push
test
mov
dec
push
mov
aas
ja
dec
sub
mull
sub
jo
push
pop
repz
mov
cwtl
rol
test
add
pop
sbb
mov
mov
cmp
call
aaa
jg
jnp
pop
mov
addr16
insb
or
mov
xor
leave
jnp
jbe
mov
test
repnz
js
push
daa
mov
out
popl
mov
je
jno
jo
jecxz
loopne
mov
jl
push
insl
outsb
or
xchg
pop
notb
mov
pop
jge
aad
lahf
sub
sub
or
cs
jns
mov
jge
lods
gs
aad
xlat
xchg
roll
repz
push
pushf
in
movsl
mov
xor
pop
jge
enter
jbe
into
sub
push
xor
pop
push
shrb
inc
pop
in
incb
xchg
xchg
cwtl
cli
xchg
stos
pop
sbb
out
push
inc
mov
add
xchg
push
pushf
xor
flds
shr
mov
and
mov
decl
dec
dec
dec
mov
test
mov
scas
pop
inc
enter
daa
mov
pusha
jbe
add
gs
repz
imul
imul
cmp
adc
scas
je
arpl
mov
loope
cld
cmp
movsl
pusha
fdivp
decl
xchg
pop
inc
fucom
lds
cmp
es
dec
into
rcll
div
jmp
and
mov
mov
add
iret
xor
iret
bound
test
fldenv
jg
iret
mov
rcll
hlt
sbbb
loopne
iret
fimull
inc
popa
sub
or
mov
fs
arpl
in
dec
insl
dec
std
lea
push
popa
mov
add
cli
stos
sbbb
xor
nop
pop
es
dec
cld
jecxz
push
xlat
xchg
inc
sub
jp
mov
and
xor
sub
push
pop
pop
movb
jnp
in
mov
sarl
in
lea
xchg
and
xchg
fldt
decl
arpl
enter
daa
xchg
daa
fnsave
dec
and
rorl
jo
lret
lret
cmpsl
insb
jns
aaa
and
mov
sub
or
lds
ss
test
cmpsb
ds
repz
fwait
arpl
and
xchg
cli
out
loop
dec
cld
test
call
rolb
jmp
and
mov
mov
jle
mov
out
mov
mov
lock
jno
cli
test
xchg
or
sub
add
fcoms
out
sbb
hlt
cmp
jno
stos
test
mov
int
int
and
pop
out
cmp
mov
lcall
or
seto
xor
or
dec
sbb
cmp
icebp
mov
push
push
mov
xor
inc
jo
xchg
xchg
data16
adc
xchg
int
and
push
jl
or
mov
pop
or
pop
fnstcw
sbb
push
push
pop
in
xor
add
mov
out
sub
imul
jno
cli
pop
inc
rorb
dec
fisttpl
jl
push
test
dec
outsb
mov
xchg
sub
inc
mov
add
es
mov
out
fwait
cmpsb
sarb
or
sbb
inc
mov
mov
sub
pop
lock
shr
data16
imul
cmpsb
dec
xlat
jle
push
popa
adc
inc
mov
xor
stc
hlt
push
sbb
inc
jnp
fildll
mov
mov
ret
subl
cmpb
xor
and
cli
jbe
jl
rorl
int3
add
ret
aad
push
cmp
int3
stc
fistps
sub
shrb
sbb
mov
pop
loopne
in
ffreep
sarb
cmp
and
js
mov
xor
daa
gs
nop
xor
mov
aam
inc
in
mov
xchg
in
xor
or
pop
jo
daa
clc
shll
sbb
test
mov
xchg
inc
aam
mov
and
or
cmp
add
lods
pushf
sahf
movsb
ds
fisubs
jo,pt
clc
lcall
andl
mov
mov
repnz
mov
jg
cli
rcrl
dec
fistl
fs
mov
add
call
pop
or
shlb
and
arpl
fs
pop
in
nop
pop
es
es
je
jo
adc
cmp
or
jns
push
push
loop
shlb
in
xlat
jne
jg
jbe
pusha
mov
lds
aad
pop
nop
sahf
dec
popa
cmp
aas
push
pushf
cmpl
sub
sbb
das
pop
or
je
out
lret
xchg
or
aad
push
xchg
out
dec
stc
mov
push
cmp
ja
or
jp
out
outsl
pop
jb
decb
mov
pop
ret
inc
orl
jecxz
xor
outsl
int3
int
xchg
jle
dec
pop
push
inc
mov
out
pop
outsb
lods
lods
jno
fsubrs
imul
xchg
sub
sub
push
arpl
int
xlat
jg
lods
dec
sbb
cmp
leave
cmp
les
mov
mov
loop
xchg
pop
repz
cs
decb
out
scas
ljmp
jg
pop
fistl
jp
pop
mov
jae
sbb
jbe
stos
or
ljmp
filds
jl
test
cmpsl
sti
dec
sbbl
xchg
xchg
sbb
sbb
in
lret
and
scas
ljmp
test
lds
es
mov
cmp
sbb
xchg
xchg
fimull
or
cmpsb
sbb
push
dec
aam
aam
jo
leave
lods
mov
xchg
jmp
mov
or
dec
rcrl
std
fimuls
push
jne
sub
addr16
fstpl
add
aaa
leave
xchg
jb
fdivrl
movb
rorb
lock
test
jne
add
sti
jb
aad
jmp
test
cltd
xchg
jp
or
fdivrs
cltd
enter
add
jl
and
lcall
pop
sti
loopne
movsl
cwtl
scas
push
sbb
inc
mov
loop
fcomps
outsl
mov
hlt
rol
mov
les
cltd
call
roll
out
dec
mov
mov
xchg
cmp
loope
mov
adc
and
pop
jg
inc
lret
jecxz
fimuls
cmpsl
ror
mov
xorb
cmp
sbb
cld
cmpsl
cltd
xor
jns
cmp
cwtl
call
ret
sbb
imul
inc
dec
rclb
or
or
mov
jp
test
outsb
jg
add
sarb
or
jb
mov
jnp
sbb
mov
aad
sbb
mull
sbb
mov
mov
inc
loop
add
inc
pop
sbb
add
cmpsl
jb
cltd
mov
int3
jg
in
ret
dec
lahf
lcall
cmpsb
ds
sbb
stos
or
add
mov
sbb
pop
dec
std
ds
xchg
pushl
adc
sub
or
adc
adc
sub
loope
adc
dec
xchg
jo
arpl
lds
int3
ja
fistpll
jle
push
shll
repnz
jmp
das
outsl
mov
xlat
xor
ds
jecxz
xchg
cli
sbb
cmp
lea
pop
xor
stos
std
push
sbb
dec
sub
addr16
daa
loopne
sar
es
sub
movsb
js
bound
out
jge
dec
fistpll
add
idivl
stos
mov
pushf
lds
jns
mov
ret
xchg
mov
int
mov
hlt
int
testb
iret
and
int
pop
inc
xlat
repz
lcall
aaa
pop
inc
or
jno
cltd
imul
mov
mov
loopne
push
push
jge
es
add
movsl
popa
mov
mov
es
enter
mov
xlat
mov
sub
inc
jg
jb
nop
xlat
call
fadd
pop
leave
sti
test
sbb
lahf
arpl
fisubs
xchg
fisttpll
in
inc
scas
mov
not
stos
in
loop
mov
scas
fldpi
into
jge
notb
push
mov
cmpsl
cmp
scas
xchg
jae
push
push
cld
lods
stos
mov
or
mov
and
or
repnz
pop
or
cmp
leave
jle
roll
mov
out
cmp
mov
loop
push
cmpl
mov
cltd
sbb
mov
adc
sar
fsubr
pop
mov
ror
out
adc
mov
push
sub
subl
or
mov
cmpsb
push
inc
and
xchg
push
adc
fsubrp
ret
sub
sub
mov
sar
ljmp
lret
jmp
push
int
and
and
aas
pop
in
jo
in
rcr
les
cmpsb
subb
imul
cwtl
mov
or
fdiv
pop
imul
xchg
mov
mov
or
cmp
cltd
clc
xchg
scas
xchg
inc
test
subl
push
cli
push
push
sbb
jmp
jbe
aas
mov
cmp
push
mov
add
dec
hlt
scas
sbb
jbe
aaa
pop
mov
out
ds
lret
mov
push
out
or
inc
push
sti
leave
out
jbe
mov
mov
and
add
xchg
mov
inc
jne
int
and
jae
mov
mov
mov
jno
mov
jecxz
into
int
js
jl
xchg
xchg
jno
pop
xor
adc
push
or
filds
cmpl
adcb
std
push
dec
jnp
adc
in
add
pop
jne
icebp
pop
xor
aam
stc
aam
xor
ds
mov
mov
loope
stos
jg
adc
push
stos
add
mov
mul
push
enter
xor
test
inc
cltd
mov
jle
sbb
or
std
push
mov
rcrb
mov
loop
mov
ljmp
jb
mov
xchg
add
push
lret
cs
lods
dec
mov
dec
mov
out
iret
lea
push
mov
mov
lahf
or
aaa
imul
cmp
xchg
out
repnz
jle
xchg
int
dec
mov
je
jne
test
lcall
clc
xchg
fs
stos
jmp
insb
and
mov
imul
xlat
cmp
sbb
or
lds
jecxz
icebp
jno
add
mov
icebp
enter
and
jbe
in
jnp
adc
lret
inc
insl
jmp
lea
push
fcmovbe
and
jnp
daa
push
and
mov
sbbb
movsl
lahf
mov
xor
and
aaa
push
hlt
sahf
add
sub
mov
in
aas
jno
out
xchg
adc
enter
sbb
jno
mov
mov
in
mov
xor
loop
push
movsb
pop
rcr
into
in
and
xor
insb
push
test
adc
daa
negl
js
push
sub
xchg
aas
or
mov
sti
push
sar
lods
add
ss
test
dec
adc
icebp
push
dec
jl
push
pop
or
mov
push
ss
inc
sbb
adc
add
mov
jo
subl
aaa
stos
fs
or
shll
push
jle
cmp
les
cld
jg
or
out
int3
outsb
lds
ret
mov
popf
and
ljmp
rcrb
jne
lods
ficompl
test
in
push
pop
data16
cmp
out
int3
push
mov
and
mov
xchg
adc
inc
popa
idivb
out
test
cmc
inc
dec
test
lods
dec
lods
cmp
gs
out
aaa
push
lret
push
or
xor
xlat
lea
repz
xchg
jno
jecxz
arpl
scas
cmpsl
imul
mov
add
jmp
mov
adc
int3
add
mov
in
jg
xchg
scas
movd
cmp
xchg
dec
pop
jmp
cld
fisubrs
add
out
or
sbb
fstpt
xchg
sarb
cmpsb
pop
fsubrp
fbstp
and
jae
in
rorb
sbb
xchg
mov
inc
in
jge
ret
jle
pop
je
or
loopne
lea
pop
sub
or
lods
stos
mov
movsl
jmp
pop
jg
aaa
cmp
and
orl
mov
or
xor
fwait
lea
dec
mov
and
mov
mov
pop
push
adc
jle
dec
xchg
adc
pushf
sub
sbb
cld
out
cmp
pop
inc
push
push
jnp
movsb
or
sbb
jnp
outsl
push
mov
push
out
pop
jle
jg
jg
mov
mov
inc
lret
mov
adc
insl
and
inc
rcll
adc
scas
pop
mov
push
push
scas
movsl
mov
cld
and
dec
aam
cltd
outsl
or
jecxz
push
iret
push
or
push
loopne
cmp
jmp
inc
cwtl
lret
aaa
and
std
es
outsl
sahf
adc
out
mov
dec
dec
sbb
lds
pusha
fisubs
add
movsl
std
mov
add
sbb
jns
mov
daa
inc
xchg
jge
cmpsb
fidivrl
push
jbe
cmp
xchg
and
cs
pusha
adc
in
cmc
outsl
nop
add
rcl
mov
ret
sbb
outsb
repnz
out
cmp
mov
mov
dec
ret
fnstcw
inc
push
sub
insl
ds
and
push
in
clc
mov
into
es
stos
lods
sub
cmp
pushf
sbb
push
push
hlt
loope
cmp
ljmp
movsb
and
in
lret
adc
sub
sahf
movsb
test
mov
fwait
mov
rcrb
fs
jno
inc
xor
aas
sub
xchg
pop
push
pop
and
jb
xchg
xchg
scas
data16
and
xchg
ret
iret
decl
fistl
add
cli
cli
sbb
sti
imul
mov
je
cmpsb
pusha
dec
xlat
dec
in
mov
scas
test
mov
negl
lret
sub
and
jge
icebp
dec
xchg
in
jb
jae
jb
stos
push
xor
negb
insb
fadd
loop
dec
sbb
push
adc
sbb
pop
loop
lret
lods
adc
cld
add
xchg
aad
cmp
xchg
sub
addr16
out
cmpsb
jle
aad
pop
repz
mov
cmpsl
jp
push
xchg
and
mov
pop
lret
jae
repz
dec
fcompl
push
inc
out
xchg
cmpsb
add
sti
aad
iret
outsl
ja
mov
cltd
rcll
call
out
mov
adc
jg
sti
dec
and
test
adc
add
add
xchg
mov
pop
adc
fwait
arpl
or
mov
movsb
divl
ret
addb
fwait
imul
sbb
inc
fiaddl
lock
int
bswap
in
sbb
loopne
mov
stos
mov
push
lock
out
jbe
mov
ljmp
xor
sbb
addr16
adc
jne
ja
fneni(8087
arpl
sbb
inc
lret
test
shrl
mov
sbb
xchg
jecxz
sub
xchg
mov
ret
mov
shr
sbb
pop
cld
push
int3
nop
cli
test
sub
cltd
dec
pusha
adc
mov
cld
mov
lahf
fs
ret
insb
mov
inc
mov
mov
xchg
xor
stos
decb
mov
mov
mov
push
dec
cmc
cmp
jecxz
loop
lret
jne
fdivr
imul
sub
sti
push
outsl
cs
sbb
jecxz
xor
movsb
ret
out
ja
mov
in
data16
add
mov
mov
push
dec
dec
lods
repnz
inc
out
fistps
rorb
out
movsb
jg
jecxz
stc
mov
sub
cmp
and
shlb
pop
div
jge
test
push
pop
xchg
push
xchg
xor
ret
fimull
aaa
pop
sub
shlb
jmp
sbb
cmc
pop
xlat
fisubrl
push
mov
push
cmp
cld
and
adc
sub
cld
push
clc
fidivrs
cmp
mov
clc
test
je
mov
and
popl
cmp
xor
movsl
adc
test
jp
cwtl
sbb
es
jne
pop
and
adc
cmp
xlat
add
ljmp
in
cmp
mov
jge
lcall
test
ret
mov
cmpsl
and
sbb
mov
cmp
inc
outsl
and
outsb
push
dec
add
dec
fnstcw
nop
add
sub
fidivl
mov
jmp
mov
push
movsb
pop
mov
insb
and
sub
shl
repnz
inc
je
lods
jecxz
aad
iret
mov
enter
jge
dec
sbbb
fwait
mov
dec
dec
orb
clc
xor
test
dec
sbb
mov
add
clc
aad
jl
cli
and
mov
mov
out
in
adc
test
dec
sbb
insb
xor
pop
mov
cmc
mov
jg
dec
pop
hlt
push
xchg
in
cmp
mov
or
je
jns
push
push
rcrl
pushl
leave
pop
adc
inc
adc
xchg
in
repz
cmp
outsb
mov
pop
jge
xchg
xchg
pop
mov
mov
cmp
test
cli
pop
js
sarb
inc
outsb
mov
call
outsb
jg
daa
fnstsw
arpl
jb
sub
mov
push
into
sbb
xor
xchg
pop
sub
out
fs
xchg
in
mov
mov
daa
lock
push
lods
stos
daa
add
xchg
sub
imul
xchg
mov
push
mov
jb
les
fdivs
shlb
cmp
icebp
and
dec
clc
mov
cld
das
sti
jp
pop
xor
pop
pop
lods
mov
lret
or
sub
push
jge
push
fs
leave
xor
sub
lcall
inc
sub
or
adc
dec
or
dec
mov
lret
adc
fnstenv
inc
dec
dec
in
jl
or
add
mov
lret
jno
dec
rcl
mov
mov
sub
inc
lahf
mov
cli
cld
and
testl
jg
sbb
pop
adc
addl
dec
push
push
mov
repnz
std
and
jp
cmp
sbbb
mov
pop
int3
mov
push
nop
in
jb
cmc
adc
adc
add
jae
sbb
maxps
adc
ljmp
pusha
out
aam
cmp
jmp
ljmp
mov
stos
push
je
push
lds
cmp
jl
out
lods
xor
in
dec
stos
cwtl
push
mov
dec
cmp
mov
mov
test
test
push
scas
and
shrl
add
jne
or
dec
mov
ss
fnstenv
inc
push
add
movsb
fildll
xchg
in
insl
xor
insl
mov
scas
cmp
push
xor
stc
cld
sti
lahf
xor
push
sti
inc
aas
sbb
and
xchg
jg
or
dec
aas
inc
mov
fmull
mov
inc
and
adc
cli
les
fxch
xchg
outsb
cmpsb
cmp
imul
adc
dec
orb
pushf
int3
fwait
push
sub
sbb
sarb
cmp
adc
insb
rolb
inc
sbb
lcall
mov
sub
mov
mov
incb
sbb
xchg
sub
mov
pop
jnp
inc
daa
call
push
adc
in
mov
sahf
sar
js
push
std
xchg
mov
push
and
pop
sub
roll
mov
loop
andl
movsl
js
mov
mov
lcall
dec
cltd
adc
jae
xchg
sti
ds
push
xor
mov
dec
inc
adc
lret
cmp
xchg
mov
stc
lcall
jb
inc
and
inc
inc
jg
push
and
adc
jecxz
xor
or
cld
decb
movsl
mov
inc
mov
push
or
adc
jo
push
jns
sub
sub
fildll
pop
rcrl
mov
outsl
push
scas
push
jp
lods
fwait
xlat
inc
loopne
pop
dec
les
lcall
imul
push
and
out
xor
xchg
xor
adc
jge
lods
insl
popf
jmp
rcll
adc
push
jae
adc
or
pop
test
cwtl
inc
xchg
popf
mov
cmpsl
cwtl
testb
popa
std
dec
mov
inc
in
in
adc
in
cmpsl
loop
fcomps
jo
leave
fstps
xchg
inc
inc
xor
inc
repz
inc
daa
pusha
lods
and
popa
jnp
push
mov
sbb
shrb
out
xorl
arpl
mov
popa
dec
icebp
fs
cltd
adcb
and
sahf
push
or
mov
and
push
push
lea
mov
xchg
jne
cmpsb
lods
mov
or
sar
bound
mov
fistpll
out
and
push
out
loopne
dec
jnp
sub
pop
hlt
sub
clc
inc
dec
outsb
cmp
mov
pop
lods
pop
jbe
jns
mov
cmpsb
pop
fwait
cli
sub
cmp
mov
outsb
jnp
push
mov
imull
fidivs
dec
daa
jns
mov
sub
enter
add
sahf
ss
or
ljmp
into
les
push
push
movsl
mov
mov
mov
es
cmp
in
lea
inc
fdivl
dec
iret
icebp
mov
fstl
pop
xor
cltd
lock
mov
sub
or
je
es
add
and
adc
clc
push
sbb
mov
imul
cwtl
fcmovnbe
add
inc
ljmp
clc
and
xor
cli
pop
mov
and
loope
xchg
xor
inc
mov
sti
insb
pop
or
jg
add
pop
sbb
into
aam
gs
adc
fsubrs
js
ss
jp
decb
jl
jecxz
adc
mov
mov
add
inc
inc
and
mov
fsubrl
xchg
fsubr
popf
jne
or
mov
lea
pop
out
js
dec
dec
or
inc
push
sbb
shlb
sbb
int
out
stc
int
or
lods
mov
mov
push
mov
pop
push
inc
das
xchg
imul
jnp
pop
and
ret
dec
mov
mov
fistps
call
neg
imul
sub
lods
push
aas
push
lret
popf
lahf
insl
ljmp
fcoms
cmc
xchg
adc
xlat
rcrl
jno
jbe
and
mov
cltd
cmpsl
rcl
test
xchg
cmpb
pop
and
ljmp
cmp
pusha
fldl
ror
lock
insb
sbb
xchg
jmp
sub
inc
push
xchg
push
sub
cmp
dec
pop
cmp
rol
lods
sarl
mov
sub
or
jb
arpl
lods
dec
dec
out
stos
push
icebp
leave
cli
jns
call
cmpsl
jae
jge
iret
dec
inc
xor
push
movsl
out
cmp
into
xor
xchg
std
and
pop
jge
sbb
popa
cli
xchg
add
xor
dec
rcrl
pop
icebp
repnz
mov
std
dec
cwtl
in
mov
mov
cmp
mov
out
popa
mov
mov
out
xchg
fdivl
iret
dec
test
cli
mov
inc
push
jo
inc
decl
aam
xchg
pop
lock
fnstenv
sahf
push
jae
mov
out
ret
out
shlb
inc
cs
mov
lods
sub
cmpsl
out
pushf
or
test
ffree
pop
icebp
push
mov
inc
jmp
dec
xor
mov
mov
xor
lock
add
sbb
scas
sub
dec
repnz
dec
inc
lahf
movsl
in
mov
repz
cltd
dec
inc
adc
inc
mov
cmc
imul
testl
in
fdivp
xor
ljmp
cwtl
cltd
dec
cmpsl
mov
je
addr16
stc
jecxz
je
push
loope
jnp
je
pop
inc
aad
add
jo
aad
jb
add
data16
and
sbb
mov
mov
in
imul
stos
scas
jge
sar
rolb
sbb
icebp
rcrl
mov
iret
sahf
cmp
out
ret
jae
testl
pop
imul
je
sub
mov
pop
ja
push
daa
inc
dec
int
adc
int
mov
push
pushf
add
js
push
push
adc
mov
mov
push
jmp
xor
popa
fdivr
sbb
sub
js
xor
divb
sbb
fs
ljmp
jno
or
hlt
inc
stos
incl
cwtl
push
push
inc
adc
inc
out
dec
cs
insl
pop
rcl
pop
cmp
inc
dec
mov
aaa
push
fisubl
stc
nop
dec
pop
in
leave
mov
clc
lods
jnp
lock
mov
movsl
lcall
test
stos
loop
aad
insb
aas
fcmovb
fldcw
aaa
lahf
shr
push
xor
jbe
jp
inc
xor
loop
sahf
mov
sbb
and
cld
in
popf
sbbl
or
std
or
ffree
scas
jle
repz
jns
add
jbe
push
add
push
pop
dec
cmp
into
cs
fwait
push
or
lods
inc
iret
sti
inc
sbb
mov
fldl
out
adc
mov
icebp
loope
xor
xor
pop
je
adc
inc
ja
es
test
push
dec
xchg
cltd
adc
dec
loop
in
sub
fdivr
js
xchg
xchg
jmp
cltd
mov
aaa
adc
daa
cs
xchg
js
lahf
xchg
stos
je
dec
mov
pop
mov
pushf
sbb
in
daa
leave
lds
xor
gs
mov
sarl
sbb
jb
icebp
shrl
sub
pop
and
pop
add
mov
int3
fwait
insb
ficomps
pop
das
xchg
or
add
push
sahf
rcll
push
push
popf
sti
mov
outsl
sbb
dec
sub
and
shlb
mov
cs
xchg
ds
mov
imul
adcb
jb
gs
mov
sub
adc
cmp
jl
shrl
push
jne
stc
sub
xchg
adc
clc
pusha
or
fidivrs
daa
inc
xchg
dec
pop
mov
or
xor
mov
bnd
xor
sub
adc
data16
fiaddl
repz
mov
out
mov
lret
jp
stc
sub
mov
js
and
rcrb
cmp
pop
cmp
stos
sbb
or
mov
js
pop
test
adc
xchg
mov
xchg
je
or
xchg
cmp
aad
xchg
stos
repz
leave
pop
popa
cld
cld
out
lock
pop
jg
sti
mov
push
lcall
cmp
aaa
jno
jae
jno
lds
xchg
mov
add
cld
in
hlt
je
cmpsb
cmpsl
xor
lods
paddq
shlb
jle
inc
inc
dec
dec
cltd
hlt
popa
mov
dec
cwtl
loop
xchg
in
adc
push
ds
xorl
or
ret
pop
mov
jae
mov
dec
jne
lretw
mov
mov
es
xor
scas
cli
cwtl
call
add
incl
insb
cli
cwtl
lret
sahf
push
lds
sti
lds
cmp
fsubrp
mov
addb
ja
aam
inc
jae
sbb
fisubrs
xor
lea
cmpsb
lea
adc
mov
adc
addr16
shlb
adc
stos
ds
fadd
push
imulb
or
pushf
cmp
and
bound
jne
xchg
fcomi
sbb
rcll
dec
pop
ss
inc
ljmp
sub
lock
icebp
mov
xor
push
mov
dec
jo
int3
pushf
int
pop
in
pop
loop
push
lcall
imul
mov
ret
lea
mov
scas
daa
lret
popa
or
dec
xchg
add
push
sub
xchg
mov
adc
pop
insl
sti
aaa
mov
mov
mov
mov
xor
jns
xchg
out
xchg
xchg
shlb
lea
adc
sahf
popa
push
mov
add
cmc
dec
arpl
pop
sbb
xchg
lods
cmc
int3
add
daa
mov
popf
call
jecxz
cmp
es
lods
js
addr16
xchg
loopne
leave
jge
mov
mov
jae
xchg
push
mov
dec
sub
std
mov
jb
pusha
inc
xchg
out
dec
cmpb
xchg
xchg
lods
xchg
sti
xor
push
cmp
inc
cli
sti
jp
mov
push
jl
out
ret
mov
icebp
push
dec
outsb
movsb
add
lahf
cmp
icebp
jle
jnp
stc
cltd
jae
mov
jle
push
iret
xor
xor
int3
das
imul
int3
and
nop
mov
push
mov
or
sbb
aaa
ret
or
mov
pop
pop
push
jge
in
icebp
xor
pop
pop
sbb
xchg
adc
pop
sub
aam
cmp
in
ljmp
sar
mov
scas
lret
fs
cli
pop
fcoms
push
adc
adc
std
out
lods
icebp
dec
jg
fsts
hlt
push
enter
int3
into
push
mov
sbb
insl
nop
add
outsb
adc
ja
push
adc
xchg
out
xor
jne
aam
cmpsl
cli
inc
sub
jl
movsl
lret
pushf
lret
pop
jno
bound
or
mov
cld
sbb
aam
mov
pop
push
divps
clc
mov
mov
and
xchg
ret
cmpsl
mov
ja
pop
mov
dec
mov
scas
add
sbb
lods
sbb
ja
sub
jns
push
loope
dec
clc
movsb
and
pop
ja
outsb
add
mov
shlb
xchg
mov
inc
push
cmp
mov
lcall
push
xor
dec
les
or
or
mov
cltd
mov
sub
inc
mov
fs
int
movsb
cmp
push
lcall
jb
repz
dec
adc
pop
fsubrs
outsb
loope
repz
call
imul
hlt
cltd
sbb
test
jne
fsubl
popa
push
inc
mov
and
sti
adc
xchg
pop
or
bound
pop
lret
jp
mov
stos
add
dec
incb
or
mov
cmc
leave
xchg
popl
imul
lret
inc
adc
xchg
adc
xor
daa
mov
jle
cmp
bound
ror
je
out
imul
mov
pop
insb
nop
jo
mov
push
push
and
mov
cld
sub
jne
xchg
add
push
addr16
push
xchg
and
into
pop
es
mov
mov
xchg
cmp
aas
cwtl
fstpt
out
pop
sub
testb
data16
sbb
jno
loop
fidivrs
mov
js
inc
mov
pop
aas
pop
in
add
mov
loope
xchg
sub
loop
xor
stos
jle
mov
adc
inc
inc
loope
cltd
adc
addr16
lock
mov
cmp
cmovl
sarl
ds
enter
inc
sti
sbb
dec
xchg
iret
jns
stc
xor
stc
inc
or
or
in
loopne
add
test
push
sbb
mov
push
or
inc
adc
stos
and
xor
mov
inc
andb
push
lahf
nop
and
cmpsb
enter
add
ss
jge
sar
sahf
jns
xor
jnp
mov
and
pop
mov
out
jae
xor
lret
pop
push
fidivs
add
lret
ja
xchg
mov
dec
insl
shll
in
xor
leave
pop
mov
mov
or
push
fstpt
lock
pop
adc
sub
xchg
stos
aas
lahf
add
sbb
cmc
and
pop
push
repnz
lods
jne
xchg
xchg
repz
lds
mov
jle
dec
add
or
das
dec
scas
das
adc
sarb
fildll
fsub
dec
dec
arpl
shll
fwait
add
dec
int
sbb
adcb
pop
cmp
test
outsw
xor
jnp
cld
and
inc
lods
inc
mov
int
push
push
cmp
xchg
mov
adc
cmp
int3
and
sahf
outsb
mov
sarl
test
dec
fimull
xchg
inc
mov
xchg
mov
movsl
push
sub
ljmp
iret
push
test
aaa
push
mov
pop
add
cmc
jl
cmp
jg
push
xorb
sbb
mov
dec
push
test
cmp
cwtl
mov
mov
push
dec
adc
popfw
div
jl
cld
mov
scas
lods
mov
sub
mov
jae
or
xchg
add
lods
int3
aaa
jnp
add
sti
and
add
shlb
jg
les
pop
mov
sbb
jno
xorb
adc
ret
bound
fistps
mov
popa
fidivs
loopne
gs
or
inc
pop
jmp
test
push
mov
xor
sbb
jecxz
in
pop
negl
shll
pop
cmp
mov
out
filds
sub
sub
fidivrl
movsb
pushf
and
out
xchg
notl
mov
sbb
shlb
cmp
mov
lods
sub
int3
aad
scas
push
imul
lea
or
dec
cwtl
fstpl
divl
scas
clc
xor
mul
js
rcrl
popa
test
aam
xor
adc
jbe
adc
leave
add
and
xlat
movsb
mov
and
test
pop
shlb
out
xchg
mov
ret
into
repz
mov
not
sub
leave
or
mov
push
mov
pop
hlt
mov
jp
push
sub
popf
jne
shld
mov
pusha
ret
push
cmp
repz
sub
sahf
repz
ror
aaa
xchg
mov
jle
aad
xchg
data16
rcrb
jbe
outsb
or
ret
sub
clc
mov
and
pop
sbb
aad
cmp
xor
js
mov
inc
pop
dec
pop
shll
xchg
loop
and
bound
aas
sbb
insb
and
cmp
imul
mov
stc
or
ljmp
add
add
adc
jae
shll
xor
stos
pusha
or
js
adc
leave
inc
scas
movl
dec
arpl
mov
adc
inc
push
pop
push
ret
xor
jmp
pop
cmp
jb
inc
in
aad
jno
xchg
cmpsl
mov
in
xor
push
push
int3
and
inc
push
sarl
xor
fldcw
sbb
mov
daa
pop
push
adc
in
jecxz
sar
dec
mov
rclb
fsubp
dec
cmp
rclb
pop
in
flds
int
mov
sub
jecxz
xor
movsl
dec
jb
cmp
scas
rolb
sbb
push
push
mov
and
push
pusha
iret
and
pop
cmp
push
orl
xchg
into
mov
mov
loopne
adc
sub
sbb
adc
mov
loopne
mov
adc
fidivrs
cmp
outsl
loopne
xchg
jb
ret
xor
dec
pushf
mov
adc
lahf
push
es
mov
inc
in
dec
testb
add
pop
push
movsl
bound
push
test
pop
xchg
dec
dec
int3
fidivrs
or
gs
shlb
sbb
sbb
sahf
mov
rcr
mov
ds
mov
inc
xchg
jmp
xchg
pop
dec
hlt
add
and
cmp
imul
mov
and
jmp
xchg
add
xor
mov
test
push
mov
in
add
test
push
pop
les
cmp
mov
push
ljmp
lret
push
je
xchg
scas
repz
ds
ret
cs
leave
mov
mov
push
lods
xchg
xchg
xor
ffree
loop
jecxz
mov
pop
xchg
sub
pop
ss
inc
add
sti
mov
sbb
leave
push
sub
mov
test
ss
repnz
ret
mov
ja
fisttpll
insb
sahf
push
in
sub
push
dec
and
sahf
and
jae
sub
aad
out
scas
push
pop
call
xlat
push
and
scas
rclb
sub
jl
in
mov
sub
jl
lahf
ret
jp
mov
jns
xor
mov
jecxz
xchg
mov
subb
shlb
roll
out
cs
xor
mov
ljmp
mov
push
repz
jo
mov
test
add
daa
dec
jecxz
adc
pop
and
or
lret
mov
shll
flds
sarl
and
jmp
or
cmpsl
pop
mov
jecxz
cmpsb
das
pop
dec
insb
cmp
or
mov
cmp
mov
push
js
loopne
xchg
je
les
cmp
gs
loope
loop
xlat
cmp
mov
enter
and
mov
or
mov
add
sub
pop
cmp
imul
push
sbb
je
fnstenv
jg
sbb
inc
mov
fdivrl
je
fcmovne
outsb
add
mov
andl
push
mov
das
sub
push
jae
mov
dec
movsl
cmc
repnz
inc
aam
jecxz
aam
stos
popf
int3
jns
adc
aad
adc
sub
sahf
adc
pop
gs
and
daa
stos
in
mov
movsl
jo
jge
sbb
xchg
pop
xchg
pop
cmp
push
sub
pusha
dec
push
lods
fst
cmp
repnz
sub
xchg
lret
cmp
in
fistl
imul
add
lret
xchg
ljmp
out
out
popf
push
jecxz
sti
jbe
outsl
mov
lcall
mov
sbb
adc
and
setp
sub
sti
rorl
xorb
stc
inc
cs
pop
pop
cmpsb
lret
dec
popl
mov
das
test
lret
out
cmpsb
cmp
or
cmpsl
xchg
jl
or
scas
add
xlat
sub
push
inc
pop
shr
punpcklbw
aas
jbe
and
in
xor
cmpsb
rcr
dec
out
repnz
xchg
push
ret
lret
fstps
sbbb
out
pusha
clc
sub
bound
jo
mov
and
and
pushf
insb
dec
fistps
add
pop
adc
push
cwtl
lock
mov
les
cmp
push
movsl
mov
rolb
inc
mov
bound
in
nop
repnz
mov
clc
mov
js
mov
ja
mov
mov
dec
jg
jmp
pop
add
mov
scas
xchg
xchg
xchg
cs
adc
push
cmc
test
pop
sahf
nop
in
pop
or
loop
inc
cli
mov
xor
icebp
xor
shlb
leave
inc
cmpsl
les
push
cmp
in
loopne
or
cld
sub
lods
pop
jge
add
ds
xchg
mov
not
mov
jne
push
mulb
test
push
call
pop
sub
cmp
cld
cmp
rorb
xorb
movsl
pop
or
pop
push
jae
sbb
or
and
mov
scas
cmpsb
push
iret
add
dec
add
mov
sti
das
pop
bound
jns
das
rep
mov
mov
cmc
and
xor
test
loopne
insl
or
ljmp
push
psrlq
iret
and
jbe
or
ja
mov
mov
stos
fwait
xchg
repz
jle
sub
pushf
sbb
aad
mov
inc
in
jnp
inc
pop
jle
aam
fiaddl
mov
sbb
in
or
jmp
out
fistl
popa
sarl
loope
dec
inc
dec
sub
out
out
mov
and
insb
pop
out
in
jmp
ret
push
pop
mov
fdivrl
cs
cld
and
leave
loopne
jns
icebp
jb
or
jne
sbbl
add
dec
clc
mov
ljmp
aaa
shlb
inc
jo
in
cmp
inc
mov
jns
jmp
dec
jp
mov
mov
outsb
mov
mov
xchg
xchg
pop
sub
sub
orb
mov
outsb
loopne
pop
cltd
mov
jo
shll
js
imul
sub
xor
adc
or
xchg
lret
adc
jbe
push
scas
mov
xchg
inc
movsb
or
push
pusha
push
inc
xchg
pop
mov
sbbl
adc
jns
mov
in
andl
xchg
mov
movl
inc
fisubrl
test
ss
xorb
dec
xchg
and
cmp
jo
insl
and
xor
imul
jb
dec
inc
leave
lret
call
sbb
rcl
sub
repz
es
mov
test
adc
pushf
and
mov
add
pop
jnp
imul
sti
and
lods
cmpb
adc
stos
add
adc
rcl
fdiv
scas
jg
mov
mov
pop
leave
lcall
stos
ret
fxch
add
fadds
or
jbe
outsl
cmp
mov
test
and
xlat
data16
sahf
xchg
into
dec
sub
dec
jbe
or
jne
add
dec
enter
andb
cmp
outsl
inc
and
jo
pusha
push
mov
xchg
movl
outsb
pop
inc
sbb
imul
ds
test
in
inc
adc
out
jge
sbb
sub
shlb
pop
jge
add
inc
inc
or
dec
pop
and
stos
push
and
xchg
lock
xlat
insl
cmp
add
inc
push
cmc
pop
sbb
filds
test
jb
mov
pop
xchg
sub
roll
mov
dec
pop
mov
adc
je
add
xchg
or
mov
lods
lret
sbb
sbb
mov
lods
or
je
imul
pop
dec
mov
insb
gs
adc
mov
pop
sub
rol
shll
outsb
xor
pushf
adcb
push
in
hlt
xchg
adc
mov
and
inc
iret
xor
jno
jp
mov
mov
sbb
cli
fcoms
lods
in
mov
inc
jo
lcall
std
leave
mov
inc
pop
cmc
sbb
mov
push
pop
jae
adcb
mov
movaps
sub
movb
adc
sub
cwtl
xchg
pop
cmpsl
test
dec
mov
jno
and
int
and
fcomi
dec
dec
or
add
mov
xor
rclb
mov
xor
mov
movsl
aaa
pop
pop
jns
aad
imul
and
jne
ror
dec
outsb
cmpsl
mov
popf
pop
test
mov
jle
dec
scas
lcall
movsb
cmp
pop
mov
jae
fildl
aam
insb
xchg
and
and
js
rcll
aaa
dec
dec
xchg
mov
mov
add
or
sbb
jo
int
cmp
ss
iret
pop
fiaddl
pop
je
nop
xchg
mov
jl
ficompl
xor
test
test
sub
push
ss
xchg
push
jns
or
pop
dec
fs
xchg
pusha
xorb
add
dec
fs
mov
mov
xchg
icebp
adc
push
xor
add
push
xchg
mov
int
or
mov
xchg
or
pop
mov
mov
movsl
movsl
fldt
mov
outsl
mov
stos
mov
or
cmpl
sbb
popf
movsb
xlat
fcoms
sbb
das
sbb
iret
xor
arpl
aaa
push
in
stos
inc
xor
aas
rcrl
fmuls
inc
adc
jns
fsubrs
pop
loope
jecxz
into
adc
or
aas
roll
pop
adc
orb
mov
push
fstl
adc
imul
mov
push
jmp
adc
fldcw
inc
sub
xchg
arpl
or
mov
xchg
je
cmc
rol
iret
push
inc
inc
xor
jno
sbb
mov
pop
ljmp
pop
jle
and
scas
aaa
jmp
mov
xchg
sbb
cmp
mov
cmp
xchg
inc
inc
andb
jb
into
mov
in
scas
fbstp
rcl
pop
addr16
in
out
fwait
rcrl
inc
push
or
scas
jb
fmull
inc
dec
dec
add
movsb
push
jne
lret
insb
push
dec
shrl
jno
inc
inc
xor
cmpsl
xlat
stos
aam
iret
int
aam
push
xor
lahf
fwait
xchg
rol
icebp
cmp
lahf
imul
cmp
rorl
xor
mov
rcl
add
pushf
mov
inc
ret
push
dec
push
loopne
push
scas
or
jecxz
test
lret
lods
pop
pop
adc
inc
lea
cmp
inc
mov
fstpt
in
movsb
mov
inc
dec
stc
dec
mov
jbe
sub
daa
inc
push
sbb
nop
inc
roll
inc
inc
jl
pushf
out
test
js
sbb
adc
daa
les
test
xor
or
mov
ljmp
mov
jg
add
imull
mov
mov
and
fwait
stos
push
ljmp
filds
in
jns
jl
lods
inc
mov
or
xor
popa
inc
mov
mov
xchg
test
popf
dec
iret
dec
push
jno
sub
pop
faddl
pop
std
dec
cli
mov
icebp
call
jb
inc
mov
xor
rol
mov
lcall
enter
mov
push
push
fwait
shll
inc
mov
outsb
lcall
popa
hlt
jbe
or
pop
stos
cwtl
pop
or
imul
pop
ds
int3
sub
add
sbb
aaa
mov
lcall
test
outsb
inc
imul
pusha
jg
pop
and
in
or
cs
shrb
leave
fisttpl
jo
in
sub
or
and
dec
push
jnp
mov
cmp
dec
cmp
jno
lret
mov
sbb
cmp
stos
push
xor
loope
pushf
xchg
mov
or
add
push
cmc
in
mov
stos
in
dec
negl
mov
add
es
xor
fadds
das
sti
imul
jno
fwait
xchg
fidivs
cmp
sti
sbb
in
cmpsb
imul
sbb
rcrb
dec
push
cli
cwtl
insl
fwait
repz
xchg
adc
mov
mov
leave
add
clc
jge
push
mov
cli
ds
testl
mov
inc
js
cmpsb
insl
sbb
cmp
xchg
dec
les
mov
cmp
dec
cvtpi2ps
enter
xchg
push
negl
mov
xor
pusha
stos
outsl
das
mov
mov
jl
jne
test
arpl
adc
sbb
lret
rorl
mov
push
dec
push
add
aad
add
fbstp
test
jne
or
cmc
test
adc
xchg
mov
jmp
xchg
testl
aaa
sbb
jle
addl
pop
xor
cmp
pop
xor
cmp
pop
pop
imul
xchg
mov
xchg
xor
xchg
or
cmc
lock
ljmp
es
push
cmpsl
jl
mov
out
negl
push
jbe
dec
in
cli
sub
jno
adc
es
cmp
cli
push
xor
je
in
xchg
inc
das
data16
pop
stos
sbb
dec
sub
dec
and
adc
lods
lcall
ja
imul
mov
nop
rcl
jge
xchg
jmp
mov
cmp
ljmp
cwtl
insl
mov
std
xor
leave
cmpsb
aaa
divb
mov
stos
jne
aad
stos
jmp
pusha
out
mov
hlt
pop
push
mov
popf
arpl
in
int3
lret
ret
call
icebp
mov
dec
lret
xchg
sub
adc
mov
mov
push
iret
xchg
outsb
jg
push
cmpl
inc
add
add
mov
sub
adc
aas
dec
mov
scas
ds
lahf
mov
and
mov
adc
xchg
mov
cs
push
sub
sahf
push
lahf
lahf
je
fwait
adc
push
cmpb
pushf
or
pop
lds
jge
orb
clc
mov
ss
sub
jl
and
push
andb
hlt
mov
xor
les
cmp
movsb
lds
or
imul
ret
adc
and
push
cmp
pop
jns
repnz
pop
mov
outsl
xor
jmp
inc
xlat
test
or
xchg
push
mov
or
imul
jl
and
lahf
gs
loopne
jnp
out
push
mov
mov
aam
sub
pop
iret
mov
xchg
mov
fs
clc
push
arpl
inc
fcomps
aas
sbb
popa
sub
dec
inc
imul
stos
jbe
lea
sub
push
and
sub
fdivl
outsb
je
imul
shlb
xchg
dec
mov
stos
mov
das
lcall
int3
add
dec
pop
imul
lock
pop
jo
bound
cmp
adc
push
out
notb
mov
xchg
lods
sahf
pop
ja
xchg
add
mov
sub
cli
xor
mov
dec
pusha
xor
call
addr16
pop
lahf
popf
test
jecxz
jns
sub
lods
movsl
mov
lret
gs
dec
inc
or
out
loop
fidivs
test
cmp
inc
sub
hlt
sub
mov
out
fs
adc
or
mov
aam
bound
or
daa
pop
pop
mov
rclb
xchg
test
leave
sbb
cmc
aaa
mov
roll
sub
sbb
xor
mov
or
jg
cmp
dec
pop
cmp
mov
xor
pop
in
xchg
jg
mov
xor
aaa
stos
add
mov
aaa
sub
lock
std
aad
ja
cmp
pop
sti
les
mov
pushf
out
les
shll
add
push
dec
pop
movsl
lret
and
out
es
emms
pop
mulb
daa
movsb
jmp
cmp
iret
jno
out
mov
fcoms
mov
add
mov
xor
inc
mov
int
sahf
dec
subb
jnp
sbb
jno
imul
repnz
lods
and
xor
push
dec
push
insb
mov
fucom
sub
push
cmp
mov
imul
pop
int
arpl
inc
call
imul
gs
sarb
xlat
or
fsubp
inc
rcrl
lea
int
iret
lcall
fs
stos
scas
inc
or
outsb
fcoms
xlat
scas
loope
mov
jb
or
adc
xchg
mov
mov
mov
mov
xchg
and
iret
jb
scas
stos
xor
push
mov
fiadds
rcrb
fs
lds
inc
mov
inc
out
cltd
mov
push
lock
adc
xor
lods
jne
pop
shrb
pop
jp
popf
push
cwtl
in
pop
das
xor
cmp
jge
adc
inc
mov
mov
jo
xchg
fcompl
adc
incb
and
repnz
dec
arpl
mov
cmpsl
stc
mov
add
fdiv
in
mov
xor
cmp
setne
and
sti
sub
adc
icebp
push
andl
xorb
push
test
xlat
dec
mov
cmp
das
mov
hlt
cmp
jmp
xchg
cltd
or
sahf
lock
inc
in
mov
adc
pusha
jb
mov
daa
add
cltd
popa
mov
loop
cmc
sbb
rep
xor
mov
into
frstor
sbb
jne
insb
scas
xor
mov
ret
lcall
xchg
cmp
sbb
or
xchg
repnz
push
pop
int3
mov
aam
push
out
aam
fnstsw
dec
mov
pop
fiadds
sti
xchg
fstp
xchg
sub
out
xchg
mov
and
lret
addl
out
mov
into
or
insl
lcall
jecxz
mov
rcrb
jns
sub
mov
les
shrb
aad
lock
or
jecxz
dec
jle
cli
loop
pop
popf
sub
adc
mov
bound
je
movsl
int3
enter
xor
inc
mov
dec
sub
xchg
mov
xchg
push
mov
jb
inc
push
jp
ds
xor
and
push
add
pop
cmp
adc
and
and
ds
addr16
mov
inc
mov
lods
sar
les
inc
dec
test
imul
int3
nop
and
sbb
int
and
aad
out
mov
aad
imul
cmpsl
mov
jb
repz
nop
adc
mov
adc
in
ret
xchg
mov
int3
es
sbb
and
push
xor
fldenv
stos
shlb
inc
cmpsl
jb
mov
mov
enter
mov
inc
cmc
xor
cmp
sub
roll
popa
cmp
in
out
pop
sbb
sub
jl
mov
jge
sub
xchg
sbb
mov
or
inc
push
and
rolb
lahf
test
adc
cmpsb
jns
fwait
pushf
repnz
dec
xorb
and
jo
popf
add
dec
cld
mov
popf
mov
xchg
add
sub
leave
scas
mov
push
icebp
lcall
nop
mov
mov
je
stos
or
push
aas
daa
in
inc
lret
stos
mov
and
add
aas
std
xor
adc
int3
out
and
inc
inc
cmp
jno
jg
scas
sbb
test
outsl
or
xor
jno
aad
neg
rorb
pushf
add
mov
faddl
in
sub
enter
leave
rep
fadd
mov
ja
push
test
mov
mov
fistpl
in
cmp
sub
adc
push
xor
in
sti
and
inc
adc
mov
cli
pop
and
out
add
fidivs
cmpsl
nop
fcomip
push
fs
push
mov
ljmp
nop
arpl
jle
sbbb
jg
push
lahf
mov
mov
cmp
int3
iret
lods
into
xorb
mov
cld
clc
mov
ret
adc
cmp
test
aas
test
jge
mov
add
ret
push
testl
imul
dec
jns
jg
inc
std
lods
iret
pop
sbb
fxtract
cld
movsb
mov
or
in
or
into
jg
push
push
cmp
test
adc
leave
jl
fbld
pop
xlat
cmc
out
push
or
lock
mov
mov
pop
jmp
sub
push
adc
repz
repz
out
xchg
fistps
jbe
jno
push
idivb
lods
or
out
mov
cmp
add
mov
ret
adc
cwtl
mov
jl
incl
std
idivb
mov
ror
pop
push
movsl
fidivrs
jmp
fisubs
pop
cli
cld
xor
add
xchg
cmp
rcll
popa
add
popf
fstpt
add
push
and
adc
fs
insb
sar
pushf
xchg
clc
xchg
xchg
dec
lcall
int3
xchg
and
inc
test
lahf
jecxz
stos
lods
mov
or
sub
sbb
cmp
out
mov
out
popf
in
mov
in
sub
testl
fistps
imul
movsl
imul
lods
jle
jo
pop
pop
pop
sbbl
push
imulb
cmp
mov
inc
or
pop
pushf
pop
sti
push
pop
divb
jno
in
jns
add
fucomi
adc
aas
sbb
inc
or
std
pusha
icebp
iret
fstps
mov
pop
repz
lahf
cltd
sbb
stc
loopne
mov
aam
into
xchg
push
sti
aam
xchg
pop
fsubrs
sar
popf
fs
pop
xlat
stos
xor
sub
cli
sub
std
jg
dec
imul
mov
mov
sub
out
mov
aad
xlat
mov
jmp
stc
lea
sahf
push
ljmp
push
sar
jno
scas
insl
nop
shrl
inc
movsb
je
jno
push
mov
push
lods
mov
notb
mov
inc
gs
ret
ds
into
mov
jg
pop
xchg
xor
mov
ss
and
mov
push
mov
push
scas
cli
or
xchg
aad
stos
cmp
std
sbb
sbb
xchg
and
cmp
out
clc
fisubrl
dec
inc
divb
sub
lock
aam
jo
pop
and
xlat
sub
xchg
popa
repnz
lahf
xor
and
movsb
outsb
pusha
loope
ret
iret
rolb
lock
ss
mov
test
and
lret
hlt
xor
aam
cli
mov
ss
inc
int3
sarl
das
rorl
out
sti
xchg
fisttpll
iret
out
dec
movsl
sub
push
jecxz
icebp
imul
add
cmp
sti
stos
jle
dec
fwait
mov
inc
sbb
sti
lea
ds
int
int
pushf
out
ja
xchg
lret
add
data16
leave
out
jge
add
mov
dec
pop
sub
lret
inc
push
mov
mov
negb
or
pushf
jle
call
repnz
test
cs
pop
push
dec
sub
mov
jg
sbb
insb
movsb
repnz
aam
cltd
stc
sub
les
sti
inc
cmp
pop
aas
cmpsb
jmp
repnz
std
push
or
outsb
dec
add
lods
out
aad
mov
std
dec
mov
adc
inc
insb
pop
push
test
int
fistps
xor
into
jnp
testl
int
mov
das
shlb
mov
mov
nop
sahf
mov
outsl
lods
jg
lret
adc
and
ja
stos
lock
sub
leave
stc
jne
mov
jl
repz
jp
popf
jp
ljmp
lcall
jl
mov
jmp
cld
xchg
mov
or
test
cmp
fbstp
pushf
scas
fidivrl
adc
leave
push
lds
mov
adc
in
cld
test
jmp
add
icebp
jno
filds
movsl
jmp
mov
test
lret
scas
mov
sub
sbb
mov
es
xchg
lcall
iret
movsb
dec
push
sub
dec
mov
pusha
mov
and
jle
das
leave
popf
adc
jge
jp
rcl
fcmovne
leave
out
dec
sarb
pop
lds
push
das
dec
or
inc
aaa
dec
mov
inc
xor
jle
and
movsl
jl
stos
stc
mov
adc
pop
mov
aas
xchg
jge
mov
repnz
push
pusha
test
jp
gs
adc
fcmovnb
clc
cmp
cmp
and
lahf
add
ret
xor
cmpsl
adc
test
icebp
adc
jo
loope
mov
xor
out
xor
sbb
sub
add
std
ds
jb
jl
push
test
and
mov
cmpb
xor
out
dec
scas
jo
imul
lret
outsb
les
jecxz
push
repz
enter
sahf
insb
pop
inc
jmp
fldcw
enter
imul
adc
iret
outsl
mov
in
add
jns
push
pop
mov
jbe
fs
or
push
add
mov
aad
mov
xchg
mov
mov
push
xchg
xlat
nop
sbb
lods
adc
inc
movsl
add
dec
cmp
daa
cmpsb
or
push
inc
lahf
push
cmpsl
es
jo
scas
adc
aaa
cmp
out
mov
jo
es
test
addb
and
repz
leave
fdivl
test
and
fdivrl
stos
add
dec
rclb
xor
mov
cs
fldl
sub
inc
add
cmpsl
mov
jnp
dec
jnp
jg
imul
push
mov
push
mov
pop
ss
out
jecxz
cmp
cmp
mov
push
jnp
pop
jnp
adc
fldenv
aas
stos
test
cs
xor
out
jle
js
sbb
dec
sub
jno
jl
ret
sub
loopne
out
xchg
lret
mull
divb
dec
pop
out
addl
insl
push
mov
xlat
cmpb
in
popf
insl
mov
mov
mov
push
add
or
loope
xchg
in
fwait
xchg
lret
dec
mov
in
adc
push
ss
adcl
push
xchg
aaa
push
dec
sbb
add
mov
sbb
pop
sub
push
pop
jbe
jae
add
cmp
lods
jmp
push
cld
dec
aaa
push
push
jae
mov
lea
testl
pop
lret
dec
push
jb
cmc
add
and
cmpsl
dec
xorb
addr16
xor
xlat
sbb
cmp
mov
sub
cld
js
adc
mov
jae
jp
pop
mov
jnp
stos
push
je
std
sti
cmp
mov
push
or
jmp
sbb
xor
sahf
popf
insl
xor
xor
and
jmp
fmul
cmpsl
loop
sbb
mov
stos
xor
xor
mov
stos
movsb
xor
imul
ror
into
mov
push
aad
scas
sub
and
jl
loop
cltd
pushf
add
mov
loop
pop
push
mov
xchg
lahf
add
adc
out
jo
inc
jae
cmp
enter
scas
and
xchg
jl
leave
xlat
and
inc
or
inc
adc
jp
in
sar
pcmpgtd
xchg
gs
das
dec
xor
dec
sub
jle
test
cmp
repnz
lcall
cmp
jl
nop
lods
lods
xchg
arpl
adc
int
mov
loope
xor
test
loopne
sbb
out
fisttpl
imul
mov
out
mov
cmp
mov
nop
dec
push
ja
inc
push
add
cmp
push
add
dec
sub
pop
and
addr16
mov
dec
loope
push
pop
fdiv
pop
imul
cmp
mov
int
insl
fcmovbe
out
mov
mov
push
adc
fsubrl
imul
push
sbb
shl
stc
aad
out
push
insb
cmc
lea
shrb
cmp
mov
mov
mov
outsl
pop
shll
insl
dec
fsts
mov
or
popf
lds
mov
push
iret
hlt
movsl
popf
cmp
push
stos
mov
inc
mov
lea
fidivrl
test
mov
cmpsb
lret
cmp
push
loope
cli
outsb
jecxz
lock
int3
in
mov
push
popf
test
mov
cmp
sbb
inc
jge
loopne
jl
jmp
sbb
xchg
sbb
dec
fldl
dec
pop
or
xchg
jbe
pop
or
or
dec
sub
nop
std
ret
push
out
lret
or
imul
fsubrs
xor
push
lea
fsubs
pop
xor
jne
in
sub
iret
lock
sbb
pop
xor
jbe
pop
imul
mov
cld
aad
out
mov
jnp
stos
cltd
jle
cmc
ret
dec
cli
cli
dec
jle
cmp
sbb
mov
cmc
mov
sbb
xlat
icebp
dec
pop
cli
lds
ljmp
xchg
lods
iret
mov
stos
jmp
cli
fisubs
push
outsl
out
sbbl
xchg
ljmp
out
xchg
push
dec
hlt
rcl
and
jnp
sbb
xchg
leave
jae
scas
dec
shll
std
mov
aaa
pop
push
outsb
call
sbb
mov
addr16
shll
scas
sub
lds
aad
repnz
push
into
hlt
jl
cmp
xor
fcmovne
lods
iret
aad
mov
js
xorl
xchg
sub
mov
mov
test
out
xchg
cmpl
dec
lds
dec
and
dec
jae
sub
and
cvtpi2ps
sbb
out
jp
xor
out
pushf
sub
ja
aam
cs
mov
push
das
push
xchg
xchg
cmpsb
orl
push
push
aad
mov
cwtl
movb
je
rorb
sbb
imul
push
scas
dec
inc
dec
shrb
cwtl
mov
es
mov
add
fisttps
adc
xchg
inc
cwtl
mov
mov
aad
pop
imul
cmp
mov
fnstenv
cmpsl
insb
lret
adc
mov
dec
jns
rcrb
mov
insb
cmp
inc
sbb
test
pop
add
nop
test
sub
insl
out
fwait
icebp
scas
add
mov
pop
iret
mov
cwtl
dec
into
shl
dec
sub
pcmpeqw
je
mov
mov
jae
cmp
mov
adcl
mov
out
jp
xchg
incb
fstl
mov
jns
std
pop
fadds
jp
cmp
popf
xor
pop
dec
out
ret
or
pusha
fbld
fwait
add
aad
xchg
push
mov
xor
sbb
icebp
and
sub
sbb
jnp
scas
in
iret
ds
lods
fimull
jno
hlt
addb
jmp
cmp
xor
pop
ret
dec
adc
inc
out
lock
negb
jl
jp
imul
mov
xchg
into
test
subl
pop
lcall
daa
jb
fsubs
ss
jae
jle
jb
aaa
pop
in
enter
mov
test
lret
add
inc
call
repz
xchg
mov
cmp
push
ud1
mov
bound
mov
dec
fildll
ja
sahf
or
push
orl
outsb
inc
rclb
and
lahf
pop
mov
pop
mov
mov
xor
pop
adc
imul
mov
loopne
cmpl
cltd
cmpb
arpl
scas
pushf
pop
scas
jmp
cltd
or
dec
sbb
mov
outsb
pcmpgtd
ret
pop
popa
aas
inc
cmpsb
cmc
stc
mov
adc
mov
push
icebp
arpl
sti
loop
fildl
nop
sub
loope
mov
call
and
mov
ret
in
out
hlt
std
iret
push
lahf
pop
push
mov
sub
movsl
mov
xchg
sub
pop
xlat
andps
flds
mov
cmp
jbe
sti
pop
adc
inc
jg
jl
addr16
mov
sub
loop
mov
push
out
sub
sub
into
inc
sbb
mov
sbb
fs
lret
adc
sbb
cmpsl
xchg
es
jle
shlb
xchg
lock
push
fstps
dec
pop
dec
aam
mov
dec
in
mov
or
scas
divb
cmp
push
shll
pop
in
cmc
jns
mov
ret
ljmp
fimull
push
jo
inc
imul
jo
aad
jmp
rol
clc
jno
push
cmp
mov
sub
sub
pop
sbb
adc
cltd
mov
js
adc
fisubrl
insb
clc
fdivs
inc
rol
lods
cli
movsl
or
sub
pop
xchg
movsb
mov
jae
movsb
in
sahf
arpl
jns
push
addr16
mov
xchg
push
sbb
push
leave
sub
imul
test
push
adc
std
cmp
xchg
fidivrs
data16
dec
mov
adc
jne
int3
jecxz
stos
mov
jne
rcrl
int
cmpsb
cs
mov
mov
clc
mulb
fistpl
push
pop
int3
repnz
mov
and
jb
outsl
clc
mov
lock
jnp
roll
jb
xor
pusha
xor
mov
dec
push
push
mov
mov
movsl
std
iret
xlat
movsb
push
jb
in
jle
into
loop
xchg
jne
mov
es
adc
lods
adc
xchg
push
lret
sarb
and
xchg
pop
flds
jmp
sub
test
or
pop
incb
cmp
out
fdivl
and
into
mov
mov
or
pusha
cmpsb
pop
in
loopne
fidivrl
or
xor
xchg
cmp
adcl
inc
daa
xor
pop
dec
or
fs
add
xchg
push
push
xchg
jle
shll
lahf
bound
inc
ds
jg
mov
dec
vorps
jl
es
out
add
in
sbb
pusha
mov
pusha
js
lret
mov
cli
lea
inc
bnd
mull
lret
repnz
cli
push
stos
sub
cmp
sbb
shl
inc
lret
into
cmp
mov
cmp
inc
repnz
push
pop
and
pop
imul
subb
xchg
pxor
mov
inc
mov
mov
sbb
add
cwtl
cmp
and
mov
in
xchg
scas
aaa
stos
pmaxub
and
fimull
add
test
ds
xchg
dec
cli
mov
mov
inc
neg
lock
cmpsl
pop
jne
sbb
xor
mov
sub
inc
fstpt
push
mov
sbb
outsl
lret
cld
in
adc
adc
out
or
orl
jle
inc
fisubs
cltd
add
adc
inc
cli
pusha
test
and
lods
jl
or
jae
xor
fiaddl
mov
call
inc
pop
pop
cmp
sub
xlat
push
xor
pop
jl
arpl
pop
dec
push
jnp
jbe
jmp
add
fs
cmpsb
xchg
mov
aaa
mov
xor
adc
mov
arpl
loopne
testl
in
xchg
addb
or
stc
rolb
fdivl
ret
mov
sub
inc
enter
in
xchg
and
pop
sub
mov
mov
jge
cmpsb
icebp
xchg
push
loope
mov
sbb
xor
in
sbb
cmp
mov
cmp
jno
lods
ja
dec
loop
sbb
sbb
pop
icebp
fisubs
rorb
and
fbld
or
and
adc
add
jmp
jbe
pop
xor
repnz
jne
addr16
mov
sub
xor
lcall
cmp
jne
add
mov
fwait
in
ja
jmp
outsb
femms
mov
dec
xchg
out
fdivrl
jo
out
xor
dec
subl
lahf
rorb
xchg
shll
orl
dec
cmp
inc
bound
cmp
xor
insb
adc
out
insb
repnz
sub
fidivrl
cmp
test
jbe
lret
movsb
std
fimull
mov
and
fsubrs
mov
add
dec
or
nop
hlt
insb
cmp
out
jl
cltd
test
outsl
jbe
loopne
jecxz
scas
rcrl
clc
adc
ljmp
dec
in
lahf
daa
xchg
push
aam
stc
sbb
inc
add
mov
push
rorl
les
adc
mov
or
push
xorb
arpl
andb
cmpsl
xor
inc
shlb
and
cmp
and
pushf
in
mov
xchg
lcall
jne
pop
popf
insl
pop
mov
bound
incb
add
jne
ret
adc
or
jle
lea
mov
outsl
fwait
cmpsb
fstp
mov
or
mov
cmpb
pop
sub
insl
cmp
pop
lahf
or
iret
cmp
cmc
xor
push
call
inc
mulb
cltd
push
pushf
ret
add
sbb
mov
pushl
ret
mov
xchg
and
insb
cld
jmp
mov
sub
and
bound
clc
jbe
inc
jmp
shll
outsb
xlat
dec
or
and
xchg
call
dec
xor
xchg
je
mov
jmp
adc
outsb
cltd
sti
notl
xchg
push
add
scas
dec
push
daa
and
cli
outsl
or
nop
xchg
jge
inc
pop
xchg
jo
xor
sbb
lods
sub
adc
cs
ds
mov
ja
sub
shrb
std
fmul
jmp
lret
and
adc
ljmp
rcl
jb
xor
push
or
shrb
mov
mov
popa
jnp
out
mov
mov
sbb
sbb
inc
icebp
addr16
fstpt
adc
aam
sbb
shlb
mov
int3
lahf
dec
adc
and
or
div
arpl
int
jb
ss
jmp
jmp
loop
repz
ja
pop
loope
shll
cmp
xor
lret
imul
adc
lock
loop
imul
jp
sub
loope
or
push
scas
xchg
outsl
sub
insl
sbbb
jp
out
push
gs
ja
cs
outsb
mov
xchg
push
push
outsb
icebp
xchg
push
std
fwait
mov
repz
shlb
push
insl
add
push
sbb
push
cmpsb
inc
js
add
mov
scas
jmp
sub
push
repnz
repnz
in
pop
shrl
pop
jae
imul
stos
sbb
imul
push
mov
scas
lods
push
or
int
cmp
dec
lret
inc
push
cld
outsl
nop
cwtl
jae
xchg
ds
cld
push
xchg
xor
sbb
push
push
mov
lret
xchg
inc
cmp
fwait
xor
and
inc
xor
outsb
mov
dec
xchg
pushf
mov
dec
cmp
sub
jmp
pusha
and
int
iret
repz
inc
adc
and
or
inc
mov
flds
inc
push
scas
aas
clc
dec
mov
mov
mov
inc
mov
gs
pop
fstpl
sub
mov
mov
jle
sub
sbb
push
xor
jbe
mov
nop
fwait
push
int3
imul
and
mov
sti
push
test
fwait
das
arpl
call
and
nop
int
mov
push
cmp
sbb
push
popa
outsb
loopne
cs
jne
pop
imul
lcall
iret
mov
xor
mov
push
leave
mov
lds
mov
sub
mov
push
idivl
push
adcb
xor
fs
adc
mov
fimuls
mov
pop
dec
xor
cmp
mov
or
ret
imul
and
jo
aam
cmp
fcmovbe
ljmp
inc
sbb
loopne
push
and
outsb
add
push
in
cs
stos
pop
jne
test
stos
adc
push
test
addr16
xchg
in
lahf
sub
hlt
ffree
stos
cmpsb
outsl
inc
jns
mov
jbe
push
incb
popa
sub
in
xchg
sbb
mov
push
sbb
out
dec
rep
adc
sahf
or
jle
aad
int3
mov
clc
inc
ja
movsl
aaa
push
dec
sub
inc
mov
popl
es
sbb
jle
out
loopne
and
mov
cltd
xor
dec
dec
and
jb
lock
xchg
inc
sub
sub
daa
xor
mov
and
ds
loopne
pop
mov
lock
jns
add
dec
ja
stos
mov
aaa
cmp
pop
xor
mov
and
repz
dec
inc
lods
clc
aaa
pop
in
inc
cmpsb
cmp
stc
add
mov
mov
inc
fnsetpm(287
adc
cmpsb
lret
enter
fcompl
jne
push
scas
xchg
gs
loop
cmpsb
stos
and
mov
and
sbb
jle
sub
lock
scas
pop
scas
lea
mov
cwtl
dec
dec
mov
lock
lods
pusha
sahf
xor
pop
xor
outsl
ds
mov
int3
fildll
cmp
mov
sbbb
jne
and
mov
xor
sbb
cld
cmp
sahf
loop,pn
enter
pop
inc
enter
dec
add
out
aas
les
incb
data16
pop
int3
es
iret
jno
xchg
lcall
mov
mov
cmp
rorl
cmp
pop
faddl
or
in
add
popa
mov
inc
insb
shlb
inc
andb
repz
pop
out
xchg
ror
and
dec
ret
in
xchg
add
inc
mov
sub
mov
outsb
loop
enter
inc
iret
pop
lock
loopne
lds
xchg
popa
cld
fbld
test
pop
stos
dec
out
add
add
cmpsl
in
and
in
and
adc
popa
rcll
pop
sub
push
mov
mov
lea
inc
cltd
mov
push
nop
jl
sub
es
ljmp
add
sub
fists
cli
fnstcw
fwait
negl
pop
fsin
cmp
pushw
jnp
xor
daa
mov
cmp
loop
fsubrs
insl
jecxz
icebp
std
fstps
in
push
lds
ficomps
fisubl
sub
mov
add
push
sbb
inc
hlt
push
imul
out
xchg
xor
cs
hlt
dec
dec
in
out
jg
testl
mov
and
cmc
in
rorb
sbb
sub
pop
jle
aaa
pop
sub
sub
push
jne
leave
add
lds
nop
ljmp
xchg
je
in
aaa
jmp
popa
pop
push
add
call
pusha
xlat
mov
or
lock
xchg
lret
dec
push
imul
int
sbb
push
incb
test
test
xor
fisttpl
or
or
xor
jne
mov
push
xor
mov
mov
fs
push
loop
sbb
sbb
sbb
or
nop
mov
iret
cmpsb
sti
idivb
xchg
pusha
test
repz
pop
arpl
cmpsb
cmp
mov
pop
cmp
push
loop
imull
mov
int3
jno
mov
out
cmc
pop
and
or
push
mov
jne
and
sub
ljmp
pop
lret
cmp
orl
dec
push
adc
pop
adc
mov
xor
inc
jmp
or
adc
mov
pop
and
bound
inc
outsl
mov
sarl
aam
aad
and
xchg
mov
push
push
mov
mov
out
std
push
and
jns
dec
test
imul
mov
add
fs
sahf
lock
testb
fsubp
fmul
cwtl
mov
stos
out
xchg
push
scas
and
fcomp
stos
in
insb
scas
test
insl
movsl
sbb
sub
mov
add
mov
xchg
sbb
add
cltd
mov
pop
imul
push
lds
test
jae
push
inc
mov
add
mov
dec
jle
enter
movsl
dec
cmpl
adc
mov
das
lds
lods
mov
xchg
fbld
aaa
sub
movl
push
insl
sbbb
stos
aas
mov
repz
das
adc
add
dec
dec
out
add
lock
sahf
cmp
cmp
cmp
dec
push
out
xchg
lret
push
pop
cmpsl
xchg
lret
jge
lods
or
repz
fdivrp
cli
xor
inc
hlt
push
jnp
in
add
xchg
jmp
outsb
jne
mov
mov
jne
fs
add
nop
jno
scas
mov
arpl
popa
daa
mov
jae
movsb
push
add
scas
movsb
adc
arpl
and
and
hlt
inc
mov
sub
das
mov
jnp
aad
out
movsb
stc
popa
push
orl
scas
or
push
adc
sub
mov
ror
cld
pop
lock
data16
loop
jecxz
inc
cmpb
push
xlat
cmc
xlat
add
loop
mov
push
in
mov
dec
out
in
das
cmp
lods
fcmovbe
jge
fmuls
jno
in
lock
cltd
push
cmpl
and
fsubrl
or
sbb
jge,pt
mov
mov
xchg
arpl
es
mov
int3
in
das
mov
xlat
out
dec
and
sbb
and
jecxz
arpl
pop
add
mov
cmp
lds
xchg
out
cmp
test
cmp
ss
push
xchg
outsl
dec
enter
mov
pop
and
sbb
scas
scas
andb
mulb
or
sbb
in
fs
mov
mov
ds
hlt
je
lcall
mov
add
jmp
pushf
xor
dec
xchg
cmp
sub
dec
sbb
mov
jb
aas
addr16
push
add
and
leave
lret
mov
dec
ds
adc
subb
xlat
jnp,pt
push
pop
jne
aaa
icebp
pop
mov
into
adc
ret
cmpsb
int
ror
sub
lahf
ret
jecxz
sbb
lods
or
stc
push
not
aas
dec
and
and
fucomip
add
hlt
inc
jp
repz
xor
iret
xor
incb
repz
lahf
sub
xor
scas
dec
lock
push
out
pop
add
cmpsl
js
rcl
and
adc
rorb
xor
sub
fnstsw
inc
imul
xchg
xchg
popa
addr16
sub
sbb
das
push
mov
js
mov
icebp
inc
xchg
ljmp
loop
loope
mov
lcall
lds
hlt
imul
stc
fldt
test
mov
lret
cmpsb
frndint
sbb
mov
out
add
aaa
movnti
fld
add
sbb
ret
fsubs
inc
iret
push
stc
xor
jmp
shll
aam
pop
lret
cld
sysret
aam
roll
out
lret
jmp
mov
lret
cmp
hlt
psrlq
out
lods
sub
xor
and
jl
test
jno
insl
inc
add
outsb
loope
push
adc
ret
xchg
shlb
sub
std
mov
add
shll
mov
test
fsubrp
push
or
mov
cli
or
dec
add
xchg
jae
jle
test
cli
inc
ja
lret
insb
jns
cld
push
leave
out
cwtl
xchg
std
push
movsl
hlt
xor
add
xor
and
sarl
call
icebp
stos
icebp
adc
sbb
xchg
lock
lock
push
lods
repnz
cld
sub
cmp
xchg
mov
xchg
cld
xor
xchg
inc
xor
lret
mov
xor
pop
fwait
in
dec
fisttpl
jns
mov
cmp
inc
inc
in
push
rclb
loopne
xchg
sbbl
inc
divl
sti
lret
lret
fnsave
push
sti
mov
pop
jb
idiv
jl
outsb
movl
adc
enter
mov
lahf
mov
imul
or
add
xchg
mov
sub
test
push
xchg
sti
fidivs
int3
jnp
cli
adc
push
xchg
xor
and
push
rolb
mov
jne
fwait
loope
push
jl
cmc
cli
cmpsl
dec
sbb
pop
out
ss
cmp
xchg
push
sbbb
mov
cmc
sbb
xor
out
fdivs
adc
or
mov
xlat
gs
les
mov
nop
add
loopne
jae
loop
jb
loopne
insl
xor
pushl
or
imul
sbb
pop
aaa
cmc
aas
ds
mov
xchg
jl
out
subb
lods
jnp
mov
sub
dec
mov
push
xor
test
pop
inc
sub
out
insl
imul
jb
cmpsl
lock
shl
jge
into
mov
ds
pop
adcb
orb
test
hlt
out
sub
icebp
enter
cwtl
adc
scas
pop
fld
in
sub
mov
sahf
jns
xor
push
mov
icebp
js
out
and
adc
or
dec
mov
jns
push
shll
inc
out
fsubs
dec
fsubr
push
xorl
cmp
popa
js
out
lea
fs
loop
loope
ret
movsb
pop
out
jnp
dec
mov
sub
outsl
sbbb
adc
or
xchg
cmc
jle
fidivs
mov
jo
fistpll
push
imul
lea
icebp
sbb
stos
cmp
sbb
inc
jne
subl
cmp
aaa
iret
es
xchg
jp
loop
lret
cmc
cmpsl
mov
fcoms
jno
loop
push
ret
lods
cmp
sub
imul
shrb
lds
sbb
pop
lods
ja
mov
ficoms
repnz
enter
sbb
dec
fidivs
stc
ud2
pop
mov
sbb
pop
adc
mov
jmp
in
mov
les
sbb
dec
fs
pop
jb,pt
cli
or
and
stos
xor
push
test
ds
jnp
xchg
idivb
cmp
cmpsb
call
sub
inc
or
dec
or
mov
lea
pop
ja
subl
pop
mov
sub
dec
fwait
int
xchg
add
push
xor
push
jge
in
add
push
mov
inc
sub
add
jno
ds
in
pushf
aas
das
arpl
sahf
xchg
arpl
sbb
xchg
mov
lcall
sti
lret
mov
int3
push
jns
insb
mov
and
sysret
loope
inc
jns
mov
mov
loop
scas
and
push
popl
testb
jae
mov
in
aam
or
sahf
shll
cmp
idivl
or
adc
leave
setnp
fstl
pop
sbb
stc
stos
stos
mov
cmpsl
clc
js
mov
fwait
daa
stos
sbb
dec
push
sbb
std
or
leave
hlt
sub
outsl
dec
cmp
lahf
mov
inc
jb
jnp
push
bound
int
pushf
dec
push
mov
fsts
jo
addr16
mov
mov
xorl
mov
push
mov
sti
enter
nop
je
jno
add
pop
ret
in
imul
aad
cmp
push
pushl
jg
in
jae
mov
leave
ret
adc
mov
clc
sbb
inc
cltd
icebp
cmp
push
xchg
aam
lret
or
sti
xchg
add
cmpsb
and
cmp
fs
imul
in
lcall
jg
pop
clc
push
push
mov
adc
push
xchg
dec
frstor
jp
push
ficompl
leave
or
stos
or
gs
fwait
aam
mov
pop
xchg
adc
or
add
adc
jl
add
rorl
adc
movsb
lret
mov
pop
inc
nop
ja
jp
sub
cmp
clc
push
mov
in
lea
xchg
mov
out
hlt
mov
popf
iret
xchg
inc
push
fldcw
cld
lcall
dec
pop
xor
mull
es
xor
jnp
adc
das
das
int3
icebp
mov
subb
scas
sub
clc
data16
insb
into
mov
mov
daa
push
push
faddl
xor
mov
pop
pop
inc
xchg
sub
xlat
push
fwait
test
jb
sub
ja
pop
call
sbb
les
hlt
das
cmc
xor
fucomp
jmp
cmp
and
iret
sbb
cmp
aaa
jmp
int3
inc
dec
lods
std
out
into
fcmovnu
mov
mov
add
aad
mov
push
jp
outsl
in
xor
call
adc
ret
push
cli
mov
push
inc
js
sub
xchg
sub
call
xorl
es
lods
insl
pop
andl
adc
adc
add
out
arpl
ret
aas
test
mov
push
jg
movsb
mov
pushf
jg
cmp
sub
ret
jmp
xchg
xor
add
or
xchg
jmp
jmp
sub
test
sti
push
pusha
push
dec
add
pushf
and
imul
mov
loope
sub
fbstp
daa
push
push
add
adc
and
imul
and
dec
mov
cmp
push
lahf
add
pop
pop
jp
jge
jle
inc
adc
jmp
rcll
ficoms
push
imul
test
push
scas
mov
fbstp
mov
jnp
inc
shlb
jecxz
xor
mov
enter
fstpt
std
xchg
jp
insl
dec
xor
and
inc
push
sub
int3
adc
lock
arpl
icebp
stos
hlt
int
dec
mov
icebp
xor
push
pop
cmpsl
mov
lret
lret
into
push
in
xchg
ds
push
mov
mov
adc
jne
out
cmpsb
out
adc
cli
out
mov
repz
lret
icebp
into
push
lahf
aaa
pushf
xor
inc
fdivs
das
insl
sub
aaa
sbb
xchg
std
inc
cmp
add
sbb
dec
leave
arpl
cwtl
movsl
arpl
imul
add
cmp
call
js
push
leave
fsubrl
push
add
shll
out
movsl
and
ds
insl
xor
les
repz
int3
add
hlt
repz
mov
js
cmp
jae
xor
je
push
ljmp
scas
sbb
xchg
pop
jg
jae
push
repnz
enter
iret
cmc
xorl
idivl
mov
enter
cmpsl
cmp
and
pushf
mov
shlb
bound
dec
or
sbb
pop
dec
inc
pusha
imulb
mov
pop
push
pop
and
lret
inc
mov
xor
sbb
dec
out
xchg
stos
mov
shll
xchg
pop
sub
cli
dec
idivb
jo
dec
sbb
jns
or
push
cmp
xorl
cmp
adc
rorb
inc
adc
inc
shrb
mov
movsl
sbb
jecxz
cli
jb
mov
or
adc
out
and
lahf
shl
or
lret
pop
xchg
stos
adc
inc
mov
andb
cmp
movsb
and
inc
cmpsl
into
clc
movsl
in
xor
int3
insl
push
xor
stc
pop
add
mov
and
inc
jnp
sub
les
fstl
sbb
loop
fwait
arpl
add
movsb
sar
cmp
std
push
add
xchg
loop
push
jecxz
mull
push
jg
lret
lods
cmp
loope
dec
sub
or
cmpsb
mov
mov
dec
jne
rclb
fbstp
mov
or
jle
movsb
xchg
je
test
test
lods
clc
loopne
ss
or
adc
out
sbb
or
sbb
fistpll
pcmpeqw
addb
fbld
dec
out
add
jb
fistl
mov
insb
cli
in
loope
sub
pop
push
mov
roll
jnp
pop
fmull
les
sub
aam
mov
push
pop
inc
adc
pop
outsl
in
xorl
or
push
xorb
ja
outsb
mov
fstl
push
je
mov
or
mov
xchg
adc
xor
aad
call
outsb
dec
add
outsl
mov
aad
add
or
or
dec
push
push
pop
addl
into
popf
jp
insl
movsb
push
in
jno
inc
cmp
dec
fcomip
into
pushf
cmp
les
pop
inc
adc
clc
xlat
pop
push
xchg
pop
rolb
int3
aaa
fmull
mov
cmp
hlt
lahf
and
pop
xchg
xchg
jo,pt
arpl
popa
pop
xlat
jmp
mov
data16
clc
inc
in
aaa
jle
xor
stos
cmp
cld
jmp
daa
or
dec
sbb
das
push
ret
adc
and
sbb
push
xlat
sbbb
jmp
pop
inc
ret
mov
inc
pop
addr16
xor
add
das
outsb
lahf
rcl
xor
cmp
movsl
xchg
dec
mov
add
adc
xchg
push
out
dec
sahf
push
les
pop
rcrb
sbb
repnz
and
ret
into
mov
dec
outsl
mov
ss
pop
enter
in
dec
stos
xlat
or
jmp
fs
aam
cld
push
int
pop
mov
dec
push
sub
pop
andb
scas
roll
or
test
add
mov
pop
sbb
dec
mov
push
jbe
xor
aad
stos
push
lret
and
scas
ss
cltd
jno
dec
imul
xor
sbb
mov
pop
aaa
jne
stos
jno
and
mov
mov
or
mov
and
pushf
je
mov
or
cmp
push
int3
jg
or
insl
sub
sbb
scas
pop
dec
inc
xchg
cmp
lahf
xchg
in
jae
pop
pusha
hlt
push
mov
fbstp
es
outsb
pop
mov
in
mov
or
shl
jno
sti
jae
or
cld
xor
cs
dec
jbe
push
jg
test
or
sub
xchg
insb
pop
mov
or
sti
adcb
dec
sub
sbb
mov
and
cmp
jecxz
dec
dec
sbb
adc
rol
or
adc
dec
or
aam
dec
pop
xchg
pusha
jae
cmpsl
dec
sbb
outsb
psubusb
les
jg
add
cmpsb
and
int3
mov
mov
loopne,pt
pusha
or
testl
add
stc
mov
mov
clc
dec
fcompl
xlat
es
ret
mov
cmp
push
testb
nop
data16
notl
cmp
lret
fsubrs
xor
leave
addb
rcrb
xchg
addl
add
mov
sub
lret
xchg
jmp
inc
nop
xchg
loope
test
lods
scas
dec
movsl
lea
mov
mov
cwtl
cmp
cwtl
and
out
dec
rcl
or
jg
scas
psubq
push
cwtl
fstpt
sarl
fidivrs
sbb
add
repnz
mov
mov
aad
test
ss
pop
or
push
jno
jmp
popf
pop
mov
movsb
cmpsb
jle
outsl
jbe
scas
push
mov
lds
mov
out
dec
ret
mov
in
jne
adc
inc
and
popa
outsb
xchg
int
jb
mov
out
sub
push
xchg
cld
int3
xchg
cmp
jmp
pop
and
xor
dec
lcall
dec
loope
inc
test
push
sti
insb
sti
pop
imul
and
out
cltd
xchg
push
push
xorps
out
cmp
ds
push
pop
xchg
mov
sub
sahf
fidivrs
pop
clc
cmp
pop
ss
lods
stos
pop
push
sbb
cs
and
test
xchg
fistpl
dec
outsb
movsl
sub
jg
ja
cli
push
push
repz
or
cmp
ffreep
cli
out
adc
cld
mov
cmc
repnz
imul
lock
and
ds
or
mov
mov
test
xlat
dec
lcall
stos
add
push
push
adc
sub
ret
addr16
cmp
popf
cli
lret
scas
les
mov
add
mov
jg
ficoms
push
js
test
scas
pop
loopne
or
negb
dec
ret
cld
add
in
ds
repnz
add
stc
sub
mov
inc
jp
lods
cmp
pop
cmp
ljmp
out
inc
inc
test
les
mov
insb
cmpsl
ss
push
inc
or
jmp
dec
mov
sub
pushf
aam
push
faddl
mov
int3
mov
jo
jecxz
test
jb
ds
movsl
sbb
fisttps
filds
jns
jae
pushf
lods
mov
into
lret
or
dec
in
sbb
push
sbb
out
fcoms
jnp
sbb
add
jge
dec
sbb
sub
aaa
dec
dec
in
insb
xlat
jge
sub
test
ljmp
or
cmp
inc
cmp
add
test
scas
stos
cmp
cmc
xor
fnstsw
xchg
outsl
mov
mov
ret
cmc
sub
sub
sub
pop
xchg
add
or
or
sarb
cwtl
lods
push
test
les
jo
fs
mov
lock
mov
addr16
inc
js
jmp
jmp
fisttps
mov
test
fldt
ja
cmc
cmp
cmp
sahf
int3
bnd
cmp
adc
push
repz
test
or
mov
pop
jbe
pop
and
lret
inc
xchg
stc
fs
clc
movsl
add
cmpsl
xchg
das
mov
and
lret
push
movsb
or
dec
and
adc
xchg
jae
jmp
ljmp
dec
xor
cwtl
xchg
xchg
dec
jl
icebp
inc
mov
hlt
idiv
jns
jecxz
cmp
cmp
int3
xchg
jp
jb
aas
iret
xchg
pop
push
shl
xor
push
aad
mov
fdivrl
jmp
daa
stc
jo
jl
shll
inc
cmpb
std
sub
subb
popa
jmp
ja
lea
xor
mov
sti
sar
aam
dec
push
es
mov
movsb
mov
jmp
jns
shll
pop
aaa
fwait
cmp
add
and
mov
cltd
lock
mov
mov
add
xorb
decl
sub
pop
test
lods
mov
outsb
push
pop
stc
or
shr
lret
push
aad
hlt
push
add
sbb
jns
jg
mov
push
sub
ss
jg
jmp
cmc
mov
jl
sbb
mov
lds
addr16
sbb
pusha
sahf
in
pop
fdivrs
mov
cmc
inc
bound
cmc
insl
push
mov
mov
fists
jb
sahf
and
xchg
xchg
andb
in
jns
mov
or
out
add
cwtl
xchg
pop
inc
sbb
dec
cmpsl
or
jl
ja
push
fcompp
fdivrs
push
out
iret
bound
push
mov
outsb
ljmp
lcall
jbe
jne
or
and
nop
ss
pop
pop
ror
xchg
xor
pop
mov
mov
inc
xlat
jle
bnd
xor
cmp
repz
pop
cmc
out
mov
adc
bound
adc
cmp
pop
xchg
mov
jo
push
cmp
imul
pop
das
mov
das
xor
ficoml
daa
test
inc
out
pop
mov
stos
mov
es
shlb
mov
movsb
jae
js
or
std
pop
cmp
xchg
add
gs
mov
cmp
pop
test
jmp
inc
shrl
adc
stc
in
insl
pop
inc
push
push
xchg
cmp
pop
cmp
push
pop
std
fcomps
das
jno
in
adc
je
mov
pop
lds
pop
int
push
jmp
dec
in
or
jecxz
fistpll
lds
nop
sahf
jmp
or
cmpsl
xchg
pop
dec
sahf
jge
push
test
fwait
add
mov
push
xchg
jo
push
cmp
call
ret
shlb
mov
jl
adc
and
testb
push
fisttpll
pop
out
and
or
sub
into
andb
mov
push
dec
cmp
pushl
xlat
adc
std
lahf
popf
xor
mov
dec
inc
or
jmp
outsl
outsl
faddl
mov
int
adc
or
mov
test
xchg
cmp
cmc
stos
lea
mov
jo
or
pop
lahf
repnz
ljmp
dec
ljmp
mov
cmpsl
mov
cli
icebp
push
inc
sub
xchg
sahf
stos
out
pop
lods
push
cmc
xchg
dec
lret
cs
cmp
int
sbb
ja
sub
xor
cmp
mov
and
xchg
test
dec
adc
ds
sub
negb
sub
sahf
jge
aas
xor
insl
insl
dec
or
je
mov
pop
cld
adc
scas
aam
lock
insl
mov
nop
loope
mov
push
pop
push
push
or
mov
call
daa
lret
dec
lret
enter
shl
out
sbb
aaa
mov
cmp
dec
dec
jae
adc
add
push
sbb
int
sahf
scas
cmpb
iret
pop
xor
dec
nop
inc
dec
sti
mov
pushf
pop
jo
xchg
and
dec
lret
mov
js
sub
std
jbe
std
loop
aaa
pop
or
or
fists
icebp
mov
or
lock
enter
push
pop
mov
loope
mov
cld
add
xchg
cs
outsb
pop
call
inc
and
jns
push
in
cmc
sub
lret
cmp
loopne
gs
push
loop,pt
xchg
out
cmpb
fdivs
pop
test
push
std
xchg
push
sub
aas
xchg
sbb
dec
sbb
rolb
ja
and
int
imul
pop
subb
stc
gs
imul
add
xor
imul
orl
mov
jle
sbb
push
and
push
arpl
dec
jae
xor
sub
repnz
add
adc
outsl
cmp
movsb
stc
add
and
aas
cmpsl
das
sub
not
in
mov
stc
jmp
int3
add
or
pop
cmpsl
aam
mov
fists
adc
jge
inc
jmp
outsb
sahf
jne
mov
sbb
aas
aam
mov
fstps
mov
cmp
add
push
arpl
cld
pop
sbb
scas
dec
test
notb
cmp
mov
push
test
mov
or
mov
pop
and
sub
lods
sbb
mov
lret
das
mov
xor
sbb
shr
pusha
sub
push
push
xchg
sub
add
aas
xor
mov
sub
mov
aam
mov
pop
fcmove
jno
add
fidivs
and
jns
clc
adc
test
add
xchg
xchg
stc
xor
sbb
jnp
mov
cltd
xchg
push
test
and
xor
mov
sti
push
into
mov
imul
lret
dec
pop
jecxz
out
out
add
orl
mov
stos
aam
jb
dec
dec
push
jl
rol
xchg
sub
sti
push
or
mov
or
popa
fdiv
shl
jl
in
in
prefetcht0
mov
pop
pushf
aas
sub
pusha
inc
cli
cmp
pop
loop
or
cmpsb
daa
cmp
cli
dec
cmp
mov
xchg
xor
out
sub
sbb
mov
neg
dec
xchg
test
out
out
aad
mov
xor
xor
or
pop
adc
scas
sarl
mov
into
push
ret
gs
lods
add
inc
aad
and
cmp
fwait
out
in
imul
lds
push
mov
fsts
je
adc
stc
cwtl
inc
jmp
dec
adc
fstpt
frstor
enter
push
xchg
nop
jecxz
dec
fwait
xor
sbb
push
bound
xchg
mov
les
outsb
outsl
shrb
dec
push
and
lods
sub
xor
call
sub
rcr
cli
outsl
push
inc
mov
mov
xchg
jmp
out
shlb
shll
test
hlt
pusha
lret
push
dec
sbb
ss
cli
inc
nop
rcll
stos
lret
call
push
mov
es
outsb
and
inc
icebp
sub
dec
sbb
loop
and
dec
fdivs
lods
call
and
and
push
mov
pop
pop
je
xor
iret
mov
sub
out
sti
insl
inc
pop
push
cli
inc
je
stos
push
loope
jle
stc
inc
push
lods
push
mov
in
aaa
xchg
mov
lods
mov
dec
pop
pop
test
pusha
rorb
jmp
pushl
cld
jge
pop
jl,pt
scas
add
das
sarl
mov
mov
andl
jno
xlat
mov
cmc
pop
dec
aad
sbb
dec
and
jg
imul
cmp
adc
test
cmp
jbe
cli
das
cwtl
sahf
mov
mov
lods
mov
fsubs
rcll
in
cwtl
sbb
mov
push
adc
in
das
fisttpl
mov
stos
cmp
and
aad
jl
push
xchg
or
mov
xchg
fs
out
lret
je
xchg
and
push
lcall
insl
dec
es
popa
daa
mov
add
push
pop
je
mov
nop
out
movsb
mov
stos
sub
lret
push
fwait
in
xor
ss
cli
pop
jnp
cmp
jae
mov
scas
mov
aad
lea
push
jb
pop
jne
test
mov
cmp
roll
repnz
add
sub
mov
ds
arpl
xchg
cmc
dec
pusha
inc
stc
inc
inc
pop
sahf
bound
cmp
mov
stos
pop
jne
add
and
cmc
stos
mov
and
push
mov
dec
xchg
jns
data16
lcall
or
xchg
aaa
push
xchg
retw
and
rcrl
xchg
add
orl
popa
psubw
push
add
cmpl
or
div
mov
jecxz
das
cmovs
movsb
bnd
inc
fsubs
dec
mov
mov
pop
rcll
mov
xchg
fwait
test
dec
cs
ds
jnp
into
mov
fnsave
addr16
ja
fs
mov
cmp
xor
xchg
cltd
pop
cmp
cld
popa
fisttpll
dec
pop
mov
movsl
ret
sarb
cmp
dec
imul
mov
scas
pusha
repz
mov
xchg
and
xchg
and
xchg
pop
xchg
push
dec
shr
aas
lea
jns
int3
inc
cmp
sbb
movsl
js
push
lock
jns
ja
outsb
pushf
js
cmp
mov
push
mov
imul
mov
in
mov
test
dec
sbb
pusha
mov
testl
pop
fldt
aaa
mov
sub
cmp
xor
pusha
dec
cmp
js
movsb
nop
pop
filds
in
push
data16
add
test
inc
sub
imul
jmp
loopne
movsb
inc
bound
cmc
fnstcw
loope
mov
in
subb
mov
pop
mov
xlat
hlt
add
scas
pop
int
je
in
int3
mov
subl
lods
cmp
cli
jns
repz
adc
xchg
mov
xchg
aas
imul
cmpsl
pop
push
lret
stos
inc
das
sub
dec
dec
inc
mov
mov
xor
jae
mov
imul
mov
push
shl
xchg
pop
dec
and
lods
jmp
cmpsb
bound
mov
xor
sub
repnz
cli
pusha
mov
or
pusha
test
and
cwtl
cs
lahf
cmp
cmp
into
add
mov
pop
fucomip
xor
negl
xchg
mov
cltd
dec
int3
push
loope
test
sbb
insb
mov
jle
sbb
inc
mov
dec
or
sbb
repnz
lcall
xchg
leave
pop
lock
jecxz
dec
loop
fstpt
jecxz
mov
cli
pop
in
loop
mov
xchg
sbb
out
fsubrs
std
in
out
mov
arpl
out
and
mov
cmp
outsl
mov
incb
sbb
loop
mov
js
sbbb
jge
into
xchg
dec
inc
mov
aad
xchg
mov
inc
stos
arpl
int3
or
mov
test
xor
inc
fs
xor
shll
pop
dec
stc
mov
lods
mov
push
repnz
scas
push
jp
push
inc
daa
mov
addr16
pop
bound
mov
jae
cltd
mov
lods
fcoms
mov
scas
loopne
sub
jl
xor
sub
push
ret
ja
sti
in
cmpsb
jmp
cmp
enter
fiadds
ror
es
jae
or
mov
jnp
xor
or
pop
push
mov
pop
js
sahf
lods
add
dec
outsl
and
xor
mov
push
jnp
ret
je
push
fldcw
rcll
ret
xor
push
mov
pop
out
jmp
push
cmpsb
ds
cwtl
sub
mov
test
mov
ss
std
in
add
push
dec
xor
dec
ret
stos
scas
push
mov
mov
clc
mov
stc
pop
movsl
or
inc
test
scas
push
leave
scas
push
leave
sub
jmp
dec
fmuls
iret
jnp
movnti
sbb
xchg
cmpsl
fs
movups
xchg
xchg
add
fmull
jp
xor
stos
push
jb
or
xchg
sub
push
sbb
inc
mov
fsubr
and
mov
shr
test
jbe
lds
dec
test
sub
lods
mov
dec
xchg
mov
jae
test
cltd
push
xchg
mov
add
fcmovu
les
insl
push
xchg
pop
mov
push
and
lds
addr16
xchg
test
hlt
negb
sub
in
repz
popa
or
sub
sahf
loopne
adc
cmpl
ja
push
adc
das
jae
pop
mov
loope
dec
mov
test
imul
sbb
push
shrl
fdivs
pop
lea
imul
mov
les
lret
insb
testl
in
push
jnp
imul
lock
jge
aas
les
mov
idiv
in
loopne
insl
xchg
sbb
test
dec
lods
pop
adc
inc
jl
loope
test
sbb
push
int3
inc
mov
int
fldt
dec
pop
addr16
add
cmpsb
xchg
and
inc
add
aam
ror
stos
addr16
sarb
call
insb
push
sub
mov
mov
rolb
into
inc
lcall
test
test
sarb
gs
add
inc
f2xm1
or
andb
inc
jns
mov
xchg
das
jb
daa
pop
dec
cmpsl
sbb
sarl
sub
faddl
xchg
xlat
push
in
loop
jne
push
dec
aam
imul
lods
loop
adc
and
xchg
mov
inc
mov
mov
lods
iret
and
inc
fnstenv
test
push
clc
jbe
pop
shlb
test
dec
out
push
call
lea
sarb
les
push
mov
add
dec
add
cmpsl
outsl
mov
decb
sub
and
loop
shl
repnz
push
mov
push
inc
cmp
xchg
loop
ds
xor
outsl
mov
cmp
inc
dec
mov
dec
idiv
out
div
jno
mov
jle
adc
xor
dec
divl
dec
pop
inc
sub
adcb
inc
movb
das
xchg
mov
fs
mov
push
inc
lahf
dec
fs
mov
nop
cmp
lret
sbb
in
div
adc
mov
push
out
mov
movsl
mov
add
int3
push
add
xchg
jae
xor
ret
out
or
test
mov
outsb
dec
aam
push
add
daa
inc
cltd
fwait
cmpsb
fbstp
xlat
ret
adc
adc
in
scas
movsl
and
sub
xchg
lahf
xlat
mov
inc
dec
lcall
cmp
into
jecxz
mov
enter
dec
in
repz
or
dec
andb
insl
sbb
daa
xchg
lea
xchg
pusha
and
and
aaa
xchg
dec
and
popf
add
fdivr
mov
stos
push
xor
dec
dec
pop
xlat
or
popa
and
jo
xor
out
arpl
pop
add
in
movsb
pop
iret
clc
cmp
mov
insl
repnz
repnz
push
inc
add
imul
fwait
outsl
inc
mov
push
jno
loope
xchg
aam
out
xchg
pop
hlt
lods
adc
leave
call
mov
and
call
sbb
xchg
pop
push
cli
xchg
mov
aad
cmpsb
cmpsb
dec
pop
xchg
add
add
jbe
mov
xchg
fidivs
rcr
ja
jg
stc
shlb
inc
push
addl
dec
dec
nop
lock
push
add
scas
sub
jmp
leave
dec
fbld
jmp
lods
mov
iret
loopne
push
dec
in
rcl
xchg
xchg
imulb
cmpsl
and
xchg
jmp
push
pusha
add
jo
xor
push
sbb
into
or
xor
test
shll
pushf
out
and
cmp
rorb
adc
inc
xor
ret
dec
in
cmp
fistpl
les
adc
movsl
loopne
aad
add
bound
jge
adcb
dec
iret
clc
call
fisttpll
pop
je
aad
or
jle
cmp
lock
fimuls
pop
sti
std
jl
inc
aam
outsl
xorl
push
dec
out
mov
cmpsb
mov
xchg
mov
aam
xchg
cmpsl
pop
and
movsb
sub
sub
jmp
cmp
in
ljmp
arpl
or
pop
dec
gs
xchg
pop
and
pusha
jp
outsl
div
ja
cltd
loopne
loope
pop
inc
sub
imul
in
jae
pop
out
imul
stos
sti
das
cmp
mov
imul
mov
mov
add
jb
jp
lock
dec
scas
jns
cwtl
mov
dec
or
imul
imul
cmp
mov
je
inc
or
pop
divl
pop
ret
shll
out
xchg
es
loopne
enter
xchg
mov
or
mov
imul
mov
roll
jmp
xor
lahf
dec
mov
or
jge
fwait
cmp
dec
cmpsl
push
clc
pusha
and
pop
int3
outsl
pop
fwait
inc
ljmp
adc
div
mov
int3
add
fst
sbb
in
loopne
jmp
xor
adc
mov
mov
std
mov
sahf
mov
clc
cwtl
dec
enter
cmpsb
cmpsb
mov
hlt
xlat
fwait
shll
enter
pop
adc
in
lock
dec
daa
call
push
mov
mov
leave
fisubrs
jmp
lods
test
push
int3
sbb
es
out
or
shll
cwtl
mov
mov
lret
push
sub
mov
sub
shrb
aad
aam
movsb
dec
and
ljmp
shlb
mov
mov
xchg
cmp
sbb
jle
cmpsb
into
test
jl
xchg
int
loopne
add
xor
jae
or
icebp
cmp
add
and
andb
adc
push
fwait
xchg
or
repz
cmpsb
lcall
mov
adc
xchg
pop
dec
ret
cltd
cmpsl
fcoms
xchg
adc
scas
cwtl
lahf
or
aam
bound
popf
es
pop
sbbb
outsb
xor
js
out
je
fstps
out
movb
add
mov
and
lods
ja
push
jmp
push
popf
sub
lock
and
outsb
or
dec
mov
xor
sbb
popf
mov
sbb
sub
test
dec
jg
xchg
test
test
lods
xor
pop
push
daa
loopne
cs
xor
and
push
outsb
mov
inc
mov
or
mov
mov
sub
mov
jo
push
inc
pop
stc
out
xchg
mov
divl
adc
mov
xor
sub
cltd
cmp
lahf
jecxz
jbe
push
hlt
addb
scas
test
out
in
out
sub
ror
loope
or
mov
insb
adc
sbb
test
push
mov
ss
sbb
ret
aas
sarb
ds
pop
arpl
loopne
lea
xchg
test
lods
xlat
push
mov
aaa
scas
outsl
cmp
bound
sbb
cltd
pop
adc
lcall
es
insl
pop
out
ljmp
cmp
arpl
pop
ja
dec
push
clc
push
mov
cmpsl
aam
aas
jecxz
push
push
aas
imul
sub
jl
insl
addr16
fprem1
cmp
imul
repnz
fwait
nop
and
jecxz
mov
lahf
sahf
mov
outsl
xorb
lods
mov
cmp
out
push
pmulhuw
jle
lods
into
jecxz
cmp
mov
data16
loop
mov
xchg
inc
insl
xor
clc
stos
incb
daa
and
pop
xchg
xor
fwait
mov
mov
fildll
test
fs
outsb
add
mov
out
ret
fs
push
fs
dec
inc
testl
mov
scas
sub
or
or
cmp
xchg
inc
cmp
sub
out
sbb
or
addr16
repnz
lods
dec
arpl
lds
jmp
pop
cmp
cmc
fs
in
repz
xchg
inc
or
jecxz
out
cmc
pop
cmp
push
lahf
jp
and
cltd
lahf
and
fnstsw
lock
mov
inc
subb
js
loop
mov
cmp
sub
xchg
pushf
sub
push
loopne
in
test
test
insl
scas
push
and
pop
outsl
cs
xchg
push
mov
pop
add
enter
into
mov
jb
in
ret
movsl
nop
add
fimuls
sub
in
pop
push
mov
adc
decb
sub
push
rcl
ud1
add
push
jae
push
cs
cwtl
rorl
mov
xor
and
add
jge
addr16
ss
push
xchg
enter
mov
lods
cmpsb
je
dec
cld
leave
sub
mov
negb
sub
mov
shufps
incl
add
dec
jne
push
cmp
xchg
es
les
repz
add
mov
aaa
repz
push
dec
popa
or
cmp
inc
pop
xor
shl
cmp
mov
or
mov
fistpl
mov
cmc
enter
repz
cld
add
aas
xchg
mov
cmp
clc
dec
call
mov
mov
sti
sub
cmp
int3
cmpxchg
jmp
mov
aam
or
adc
mov
adc
lcall
dec
mov
rolb
outsb
scas
inc
lret
pop
pop
xchg
std
shl
sarb
out
int
mov
xchg
xchg
insb
cmpl
sub
lods
cltd
test
push
jbe
loop
pop
fsubrl
jg
jge
xor
add
ss
sbb
icebp
add
pop
add
jg
ja
mov
stc
aam
mov
add
shlb
ja
lods
push
mov
push
das
pop
fst
lods
aaa
cmp
dec
adc
cmp
imul
movsl
addr16
add
in
push
adc
xchg
cmp
mov
scas
lcall
and
test
fld1
frstor
shlb
inc
add
sub
js
adc
out
movsl
iret
repz
imull
adcb
fildl
or
loope
arpl
adc
jmp
ja
es
scas
pop
adc
outsl
or
inc
ret
test
repz
lcall
es
cmpsl
push
std
dec
loop
xchg
lahf
xlat
jnp
cmp
sub
scas
inc
jo
mov
adc
ficoms
decb
popa
into
push
addr16
jg
shlb
js,pn
sub
sahf
xchg
add
rcl
es
fsubl
aaa
or
adc
mov
and
jp
jnp
mov
sub
mov
iret
insb
das
pop
inc
inc
pop
test
ficomps
push
pop
test
icebp
xor
enter
adc
mov
pop
clc
mov
inc
arpl
cmp
mov
adc
repz
ret
shlb
daa
bound
sti
movsb
inc
jne
dec
pop
test
insb
dec
adc
loop
fwait
jl,pn
outsl
fcomps
dec
mov
out
xor
xchg
repz
sbb
outsl
sbb
sbb
jg
xchg
dec
pop
and
mov
dec
sbb
xchg
mov
pop
mov
mov
inc
jmp
adc
cmp
pop
sbb
jne
and
imul
push
and
in
test
cmp
fs
mov
movsl
xlat
leave
sbb
addr16
jb
or
sbb
push
mov
int
addr16
push
xchg
cmc
adc
ds
inc
cmp
add
movsb
inc
mov
cli
lcall
inc
inc
sub
mov
out
movl
pop
mov
mov
test
xchg
insl
pop
or
inc
fs
enter
pop
arpl
test
fldenv
fs
push
jne
fldt
and
adc
mov
jmp
enter
out
mov
mov
xchg
inc
mov
xchg
mov
and
ds
or
cmc
push
mov
cmpsb
pop
jbe
popa
imul
pop
in
je
or
sahf
mov
insb
sbb
pop
push
mov
imul
mov
cmp
xor
addb
ljmp
sbb
js
inc
movsl
fcmovnbe
sar
mov
and
popf
loop
pop
mov
fsub
pop
sahf
pop
mov
pop
js
outsb
mov
out
punpckhwd
push
filds
fisubs
test
std
rolb
dec
aas
lret
dec
cmp
arpl
mov
daa
clc
sti
sahf
repnz
sbb
sub
das
repnz
dec
adc
adc
stos
std
add
pop
jge
xor
inc
xor
lods
add
stos
mov
push
push
imul
addl
pop
pop
divl
cmpb
pop
mov
ret
adc
mov
adc
fdivl
xchg
lods
pushw
cmpsb
stos
mov
out
or
sbb
movsb
sti
jmp
sub
je
push
sbb
cmp
mov
rcl
push
mov
mov
xchg
add
icebp
inc
and
test
cmp
inc
outsb
aaa
inc
lret
insl
repz
sbb
jne
loop
int
dec
leave
cmpsb
dec
xlat
pop
dec
gs
jp
test
fisubl
inc
pop
inc
adc
or
loope
ucomiss
in
jae
jb
cwtl
ja
inc
addr16
shll
pusha
loop
or
fwait
push
in
out
sub
sbb
push
cmp
enter
xchg
shlb
loopne
dec
sbb
pusha
je
stos
inc
sub
adc
lahf
sub
or
mov
imul
es
aas
jge
loop
xlat
lea
lret
es
xchg
xor
mov
mov
dec
gs
pop
sub
gs
cmp
lret
adc
push
and
scas
sub
fstpt
decb
xor
jge
pusha
jge
inc
pop
xlat
adc
jmp
push
push
loopne
mov
jmp
das
rolb
sub
cs
pop
das
ret
fsubrp
mov
cmp
pop
cmp
mov
sub
xor
xchg
popa
cld
cwtl
xchg
rorl
cli
loope
push
lahf
out
ret
adc
das
xor
mov
shrl
add
mov
fbstp
adc
or
mov
lret
mov
in
pop
test
lahf
sub
fists
jl
lods
pop
push
mov
andb
push
pop
mov
nop
test
shll
sbb
jg
xchg
pop
in
std
lods
aas
jge
negb
into
jle
mov
mov
arpl
idivl
push
dec
inc
scas
push
imul
sub
jnp
enter
mov
mov
adc
ret
fiaddl
lret
dec
and
push
pop
mov
adc
add
jl
into
push
mov
mov
and
int3
insl
pop
push
mov
pop
cmp
xchg
push
inc
xor
int3
repnz
xor
mov
les
es
sub
dec
jno
cli
int
lea
adc
and
testb
mov
add
mov
add
daa
cmpsl
xorl
or
fsubrs
lcall
lret
in
sbb
mov
sub
cmpb
dec
mov
jb
push
aaa
lret
push
ss
ret
push
adc
sub
dec
ror
and
repz
and
divl
test
dec
mov
daa
cmpl
cltd
pop
in
jno
mov
jb
lds
jmp
dec
adc
popf
les
inc
and
in
in
outsl
mov
scas
inc
lret
ss
out
mov
or
enter
fs
push
cmc
inc
mov
jl
inc
xchg
and
cmp
lahf
adc
cltd
scas
mov
adc
cmpsl
ret
aam
inc
fcomp
mov
xchg
cmpsb
mov
fbstp
test
sub
std
xchg
mov
inc
repz
lcall
mov
bound
mov
imul
clc
mov
xor
out
xchg
mov
sub
ss
inc
dec
mov
lret
out
xlat
lea
sahf
std
sahf
sbb
sub
xchg
lahf
inc
cltd
mov
or
pop
push
pop
lret
scas
pushw
jbe,pn
push
xor
jg
mov
int3
in
dec
test
xlat
lods
fs
lods
mov
in
push
imulb
jle
sbb
inc
rcrl
sub
cwtl
cld
inc
add
jb
cmp
fstl
fnstenv
mov
fcompl
add
cmc
aam
pop
das
roll
pop
sbb
xor
sub
mov
mov
mov
add
stos
push
jmp
push
jb
ljmp
mov
fistl
repnz
aam
adc
cld
pop
add
sub
jno
cmp
or
mov
out
loope
cmp
or
lret
xor
jo
xchg
sbb
jo
and
mov
imul
ficomps
add
sub
xchg
xor
dec
push
sbb
pop
fidivrl
in
aam
test
imul
push
iret
fbstp
js,pt
loop
inc
movsb
loope
cmp
std
sbb
test
popf
movsl
pop
cmc
adc
fs
inc
xchg
test
bnd
lea
push
cmpsl
unpckhps
cmc
stos
sub
stos
adc
jo
jge
cmp
xor
fimuls
sub
add
cmc
push
movsl
sbb
dec
repnz
or
std
push
inc
out
lret
in
push
das
pop
repnz
pop
cwtl
icebp
fwait
sub
mov
pop
inc
aaa
aas
adc
adc
add
pushaw
std
fsincos
sub
add
stos
xor
cmp
ret
mov
cmp
popf
pushf
dec
sub
cltd
fstl
repnz
popa
fcoml
mov
adc
lods
or
pop
fdivs
add
cmpsb
inc
xchg
jnp
mov
lods
in
mov
sub
adc
stos
inc
sub
xchg
cli
or
jl
xchg
jae
push
xorl
fcompl
mov
mov
ret
fs
pop
fisubrl
dec
jge
xor
pushf
ret
xchg
outsb
pop
mov
push
addr16
int3
sub
insl
dec
punpckhdq
dec
pop
xchg
or
lods
dec
in
decb
jle
fcos
jle
xchg
in
mov
popf
xchg
pop
inc
scas
icebp
test
outsl
dec
nop
test
fwait
lods
xor
push
nop
testl
loopne
push
dec
sub
xor
jp
insl
mov
outsb
pop
dec
jo
rorl
xlat
aam
lea
scas
jecxz
sti
cmp
insb
pop
xchg
shrb
inc
pop
lods
pop
mov
pop
movsb
pop
arpl
movsl
test
pop
pop
je
pusha
jmp
in
jl
inc
sti
fidivrl
pop
pop
mov
fstps
lea
push
push
imul
popf
div
or
adcb
xchg
push
mov
mov
xchg
call
cmp
sbb
lret
aad
fadds
icebp
stos
mov
xchg
adc
sub
mov
ljmp
fadds
lcall
adc
testb
push
jg
mov
imul
or
mov
dec
jp
push
xor
xor
mov
cwtl
xor
add
and
lcall
dec
stc
jo
cmp
popf
mov
dec
jmp
fidivrl
cmp
in
mov
mov
das
in
int
ljmp
push
mov
or
xor
sbbb
lods
add
insl
adc
lds
notl
pop
cmp
and
arpl
dec
push
lods
je
add
push
push
out
pop
daa
loop
push
leave
sbb
popf
lahf
push
mov
roll
in
out
dec
sar
and
jmp
dec
adc
push
push
iret
js
adc
cld
inc
scas
pop
xor
cmpsb
in
fbstp
and
imulb
cmp
movsl
or
jo
out
sti
dec
int3
lret
sti
ret
jl
daa
xchg
mov
arpl
pop
ret
inc
call
dec
outsb
xchg
pmulhuw
xchg
out
inc
fs
jns
push
xchg
pushf
cmpsl
cld
xchg
mov
push
shlb
push
pop
gs
sub
mov
jo
mov
ret
xchg
xlat
fwait
push
insl
sbb
icebp
xchg
movsb
aaa
in
add
jo
insb
push
rcrb
mov
fucomp
mov
xor
xchg
stos
ja
in
xchg
fsts
lret
push
jp
lcall
and
stc
testl
mov
aam
push
xchg
mov
and
xchg
mov
push
mov
xor
and
scas
mov
xchg
mov
scas
sahf
dec
mov
outsb
movsl
xor
or
adc
push
push
int3
fisttpl
inc
xor
push
xor
pusha
in
nop
jno
xchg
inc
jl
decb
aam
pop
ret
push
dec
pop
inc
jl
cmp
cmp
cmc
out
mov
mov
mov
xchg
ficompl
cltd
cwtl
push
lods
hlt
mov
ret
push
cld
addr16
out
ja
mov
fwait
cmp
sub
test
test
or
adc
mov
test
loopne
sahf
iret
roll
sub
xorb
mov
or
push
ret
cmpsl
fwait
hlt
fistpl
mov
in
and
in
enter
stc
xor
pop
pop
into
popa
xchg
cmp
and
jl
mov
dec
test
lret
stos
aam
or
sub
imull
loopne
loop
into
movsl
ret
dec
std
add
push
mov
test
iret
or
mov
or
insb
jmp
rcrl
in
adc
sti
mov
fnstcw
jo
mov
int
mov
xchg
cli
mov
cmp
int
and
dec
rcrb
addr16
fucomi
fnstenv
cli
dec
push
push
fildl
jmp
jmp
xchg
addr16
lods
imul
cld
lods
mov
sbb
stos
jae
inc
repnz
cmp
lds
xorb
es
mov
add
mov
push
inc
cmp
fiadds
js
les
inc
push
divb
dec
push
imul
mov
or
and
insb
jno
jp
je
push
clc
jl
mov
mov
cwtl
cmp
mov
out
insb
dec
imul
sbbb
push
and
sub
mov
push
popf
pop
adc
aaa
cmp
test
push
push
cmpsb
mov
out
scas
std
mov
add
cli
or
aaa
add
mov
dec
es
in
inc
add
cltd
xor
xchg
in
ret
dec
and
pop
mov
dec
and
test
add
jle
mov
cwtl
cltd
push
cs
jno
cmp
jae
mov
pop
call
add
icebp
mov
sahf
lea
dec
les
fiaddl
mov
stc
ss
adc
stos
cli
mov
pop
xor
or
dec
cmpsb
es
fs
xchg
pop
mov
sar
and
hlt
ret
lret
hlt
mov
pop
shl
mov
cmp
icebp
pop
loop
adc
fs
mov
in
mov
pop
jno
pop
jae
sub
inc
xchg
std
sub
fs
sub
adc
cmpsl
xor
insb
out
xor
jmp
scas
xor
xorb
or
in
sbb
mov
das
lock
cli
sub
std
dec
xchg
fdivl
pop
das
mov
dec
jo
addr16
cmp
int
push
cli
pop
sbb
cli
push
pop
in
loope
cwtl
roll
or
lds
mov
fldenv
dec
or
sbb
mov
sahf
sub
cwtl
loop
insl
mov
push
jg
xchg
popa
in
adc
pop
jg
sub
cmp
mov
lods
inc
inc
jae
out
inc
std
mul
in
pop
xor
mov
mov
push
xchg
int
mov
pop
lds
adc
pop
enter
push
mov
and
dec
bound
sbb
data16
sub
dec
push
das
push
mov
dec
pop
insb
inc
lock
sub
iret
fldln2
ret
std
mov
in
repz
pop
push
cli
sub
dec
in
fbld
and
pop
push
sbb
xchg
out
push
push
xlat
nop
mov
dec
pop
dec
sub
mov
repnz
sbbb
cmp
cmp
loop
and
pop
aaa
xchg
cmp
and
aad
add
jmp
sbb
ret
andb
push
and
jbe
mov
js
xchg
shrl
add
shl
sub
jg
lods
pop
scas
fstpl
sub
pushf
hlt
push
test
jo
dec
mov
mov
hlt
enter
mov
scas
cs
mov
mov
stc
cld
lock
adc
cmp
ljmp
out
inc
out
xor
mov
push
cmp
dec
mov
cltd
pop
push
popa
adc
mov
mov
scas
bound
mov
adc
ds
test
push
mov
inc
outsb
pushf
test
roll
fsubl
outsl
loopne
cld
jle
push
lret
movsl
shlb
cmp
cmp
nop
lcall
scas
insl
push
aas
adc
jmp
test
lds
fidivl
mov
rorb
jge
cld
push
push
jo
sub
data16
mov
push
xor
bound
sub
mov
rorl
and
xorb
pop
mov
or
ret
icebp
out
mov
xchg
dec
mov
int
pop
sarb
or
rep
iret
push
es
popa
popf
scas
add
mov
and
dec
mov
mov
stos
addr16
frstor
push
add
sub
inc
xor
movsb
push
fcmovbe
shl
cmp
xor
dec
mov
fcoms
xor
out
loopne
or
mov
jnp
push
insb
add
jp
xchg
sub
cmp
add
adc
insb
push
pop
adc
mull
int
jp
in
xor
jle
mov
lret
xchg
clc
inc
dec
shrl
lea
mov
xchg
push
mov
sub
inc
in
mov
sbb
cmp
push
xlat
add
mov
jnp
mov
sub
xor
loop
xorl
pushf
les
mov
xchg
xor
sbb
xchg
lods
mov
enter
aad
pop
stos
push
mov
sub
lret
ds
cmc
jg
dec
jge
les
shlb
arpl
adc
scas
pop
jae
gs
lods
scas
mov
or
xor
dec
push
aaa
or
icebp
ss
cmp
sub
cwtl
nop
mov
enter
sbb
push
or
pop
movsb
add
mov
in
test
cmp
nop
xor
inc
pusha
cltd
push
push
aaa
mov
cli
mov
ret
push
add
xlat
sbb
xlat
pop
push
repnz
int3
xor
out
wrmsr
fldl2e
out
jo
jecxz
cmp
out
xor
ret
add
mov
sbbl
and
vpxor
mov
adc
ljmp
gs
sbb
or
xor
cmp
jo
pop
sbb
sbb
in
sbb
cmp
fdivrl
ficomps
jne
cmpsl
cmc
mov
pusha
dec
and
jb
push
icebp
enter
dec
loop
add
fdivrl
pushf
loop
adc
or
sub
ljmp
mov
sub
mov
lock
lods
and
arpl
test
jp
idiv
out
rorl
or
push
jns
ds
push
cmpb
dec
stos
outsl
and
mov
adc
jo
push
add
dec
jge
int
pop
int3
out
in
mov
xchg
sbb
in
leave
xlat
fiadds
pop
xchg
in
movsl
push
scas
mov
sbb
pop
jo
jno
outsb
ret
push
mov
push
dec
jle
dec
xor
fwait
jns
fwait
cld
pusha
inc
dec
jg
jbe
adc
test
hlt
pop
lods
push
lcall
in
mov
loop,pt
leave
addr16
sahf
popf
adc
and
cmp
call
sub
add
fsub
dec
pop
cmp
imul
dec
shll
cmp
mov
mov
sahf
lods
movsb
push
dec
jg
scas
pushl
lcall
push
insl
lea
inc
mov
mov
lret
jno
xchg
adc
stos
push
push
faddl
mov
insl
push
dec
popa
jmp
cmpsb
push
test
icebp
fsts
ljmp
mov
mov
pop
imul
aas
enter
test
mov
int
rolb
adc
sub
pusha
stos
aas
shll
inc
test
out
dec
divb
push
cmpsb
xor
and
pop
insb
insl
cmc
sbb
dec
cs
mov
and
pushl
shll
mov
mov
popa
inc
mov
jbe
xor
inc
cmp
jg
loopne
mov
sti
add
mov
sar
jge
loop
mov
pop
outsl
mov
sbb
cmc
pop
dec
je
sbb
adc
fsubl
sub
inc
outsb
in
sbb
ret
pop
repz
fsub
lret
sbb
push
stos
in
movsb
mov
inc
pushf
xchg
cmp
stc
lret
adc
mov
cwtl
or
sbb
pop
adc
frstor
int
cmc
sbb
int3
data16
jb,pn
aam
das
or
add
or
int3
movsl
je
repnz
adc
adc
sub
insl
testl
or
jns
xchg
xchg
out
data16
dec
xor
rcl
pop
or
ljmp
sub
xchg
adc
ljmp
test
sahf
insb
adc
pop
dec
mov
and
out
popf
adc
imul
outsb
or
int3
mov
sub
push
fcmovnb
cmp
adc
stc
jle
sti
lret
jl
pop
fs
xchg
or
xchg
dec
fnstcw
or
inc
jge
mov
outsl
dec
inc
iret
outsl
out
lods
fidivl
popf
ficoml
inc
cmpsb
fstpl
xor
imul
push
sti
inc
outsl
cmp
inc
loope
pop
lods
cmp
sar
aad
mov
xor
leave
push
or
in
mov
shlb
xor
inc
int
ret
call
xor
test
rcrl
xchg
mov
test
push
lcall
pop
add
cvtps2pd
imul
shl
sbb
push
aas
inc
loopne
mov
pusha
sbb
outsb
leave
cli
ss
ss
inc
stc
and
and
fnstcw
push
neg
test
iret
cli
push
jl
and
cmp
inc
xchg
pusha
aas
clc
push
idivl
jnp
push
cmp
pop
adc
int3
aam
or
test
mov
adc
lret
mov
shr
aad
and
lahf
fimuls
inc
mov
xchg
cmp
out
lahf
mov
lret
call
jae
nop
andl
fmulp
scas
or
cmpsl
shll
daa
push
xchg
in
scas
in
call
movsl
stos
into
or
lds
jecxz
aas
xchg
dec
pop
lea
or
std
or
xchg
pop
pop
add
movsl
iret
leave
outsl
iret
rclb
test
scas
imul
orb
popa
popa
imull
subb
js
sub
movsb
inc
dec
pop
cmp
cmp
movsl
adc
rcl
popf
jp
cmp
pop
jne
cmp
insb
dec
call
imul
push
loop
fstpt
mov
mov
test
add
cmpb
cld
repnz
xchg
jg
or
add
rclb
jbe
std
testb
mov
lret
add
xorb
loopne
dec
fdivl
push
mov
inc
rcl
add
mov
or
insb
mov
and
sub
roll
loopne
xchg
insl
addr16
pop
mov
rol
mov
fisubl
nop
xor
rcll
mov
cli
inc
fwait
arpl
fwait
or
adc
jae
cmp
std
in
int3
outsb
movsl
cwtl
cmpsl
aas
xor
dec
enter
addr16
or
push
dec
mov
xchg
loopne
pop
sub
inc
sub
cmp
pop
fdivrp
mov
stos
lret
stos
cmc
les
mov
loopne
mov
out
aaa
xlat
inc
das
or
gs
subb
or
les
test
sub
fidivrl
mov
daa
flds
clc
inc
mov
js
sbb
add
xchg
lret
sbb
ds
and
sub
out
popf
sti
leave
mov
or
xor
rorb
xchg
inc
imul
lea
addr16
test
movsb
int3
jg
jns
shlb
out
sarl
mov
nop
rcll
fsts
mov
mov
pop
push
test
or
mov
imul
jg
push
std
add
or
test
inc
inc
push
add
movsl
cmpsb
jmp
mov
in
jnp
dec
jecxz
jae
test
sbb
xlat
daa
dec
shlb
icebp
dec
scas
aas
nop
push
adc
imul
sub
aam
aaa
in
fcomps
cmp
pop
mov
jge
movups
sar
iret
mov
adc
xor
mov
pop
pop
jmp
outsl
xor
mov
icebp
gs
sub
inc
sbb
push
dec
shr
push
call
push
jge
insl
lock
icebp
mov
push
mov
pop
aad
mov
jne
testb
dec
push
and
aas
rorl
into
adc
add
pop
int3
ret
add
add
push
lods
jg
aaa
mov
push
lods
std
push
insl
jne
stc
imul
add
out
cmp
sbb
xlat
icebp
pusha
addr16
js
test
stos
mov
fs
in
sbb
sahf
xchg
xor
xchg
push
cld
xorl
lret
stos
inc
out
xor
cmp
sbb
xor
test
mov
sbb
dec
aad
roll
xor
pop
mov
loop
sub
insb
loop
xchg
fadds
test
ljmp
mov
into
jl
push
jo
loopne
push
inc
in
and
fwait
mov
cs
xor
xor
int
cmc
gs
push
jae
push
std
shl
push
mov
and
mov
fisttpl
jge
push
stc
test
push
xor
popf
popa
inc
add
lock
xchg
xor
mov
cld
jg
fxch
mov
cmp
or
imul
jne
cld
jbe
or
or
push
pop
mov
mov
in
aas
pop
sbb
and
inc
xchg
pop
pop
push
test
ljmp
jge
aad
sub
cmp
jae
add
hlt
nop
jns
fimuls
ret
dec
mov
cmp
cmp
adc
std
xchg
addr16
loope
cs
addl
mov
divl
adc
popf
insl
insl
out
jns
bound
adc
outsb
into
js
loopne
xor
cmp
std
adc
sub
or
das
das
pop
sarb
insl
xchg
sub
pop
ljmp
stos
lods
xchg
dec
out
mov
popf
movsl
outsl
push
dec
rorb
xor
rcrb
fstpt
and
lea
jno
mov
ret
loopne
push
std
ud0
push
mov
lds
cmpsl
xor
mov
imull
mov
mov
rcll
dec
sbb
iret
pop
icebp
push
push
xorb
xchg
sub
mov
jl
jge
add
out
cli
adc
push
mov
das
jns
shr
incl
ret
ljmp
inc
mov
outsb
jg
push
xor
mov
xchg
lods
bound
xchg
add
pop
cmp
lods
push
fldt
sub
sub
lahf
cli
addl
popa
inc
cmp
aad
cmp
daa
dec
jl
ljmp
xorl
test
ja
add
cld
sbb
popf
cmc
decb
dec
imul
fimuls
aaa
dec
fldl
sub
mov
gs
xchg
jge
lcall
out
cmp
cwtl
in
mov
rclb
adc
cmp
push
push
movsb
push
ret
cli
adc
into
sahf
sub
out
sbb
dec
loop
imul
mov
cwtl
les
push
push
mov
outsb
sub
pop
int
out
xchg
sbb
lods
ss
aam
addr16
jecxz
mov
ja
jge
cld
inc
or
ja
jmp
push
in
cmp
mov
push
sub
jbe
pushf
xchg
mov
push
and
pop
icebp
outsb
push
push
sub
lods
fdiv
adc
jns
fbstp
adc
bound
imul
xchg
movsb
mov
repz
adc
lea
lods
xchg
xchg
out
sbb
mov
mov
fstpl
push
mov
xchg
inc
movsl
loopne
rclb
mov
test
and
mov
mov
ret
filds
test
xor
xchg
mov
sarb
jg
data16
mov
xchg
adc
sub
xor
jne
jb
ret
fdivrl
ret
jg
in
into
outsl
mov
idiv
jno
adc
cs
jns
mov
mov
pop
ljmp
mov
out
mov
mov
scas
int3
mov
mov
movsl
pop
pop
shl
dec
add
cmp
pop
insb
cltd
shlb
cwtl
leave
xor
jmp
cmp
mov
ss
ss
jecxz
and
decb
lock
xchg
aaa
loope
cld
fimuls
outsb
inc
xor
push
xchg
xchg
ret
mov
inc
aaa
aam
insb
js
mov
das
jmp
loop
repz
cmpsl
sub
xor
xor
mov
jp
xchg
lock
es
mov
lods
test
popf
stos
jmp
add
mov
xchg
mov
fdivs
ficoml
into
inc
mov
cmp
mov
jo
jle
ja
push
push
fdivrl
mov
sarb
fistl
cmp
dec
jmp
jbe
inc
in
das
scas
push
mov
cmc
int
ljmp
jle
mov
inc
sub
neg
dec
insb
in
mov
mov
loop
and
mov
and
xchg
in
test
enter
loopne
and
rorb
sahf
sub
push
test
pop
mov
fdivs
hlt
imul
aam
cmc
inc
dec
inc
rcr
loop
mov
leave
xchg
mov
fisttps
jl
add
cwtl
mov
push
js
jns
fsubrp
push
and
mov
lret
xor
and
or
and
mov
pop
mov
xlat
repnz
and
mov
jg,pt
repnz
inc
hlt
movsl
dec
cmc
repz
inc
lahf
fdivl
adc
xchg
mov
push
frstor
mov
mov
popf
mov
pusha
push
jp
addr16
dec
jnp
jbe
sbb
push
jno
sub
cmp
or
fdivrs
add
test
xchg
and
enter
pop
shrl
pop
pop
fwait
push
push
sbb
fiadds
mov
je
lock
syscall
mul
add
mov
add
mov
sub
inc
pop
xchg
xor
movsb
rorb
mov
decb
mov
push
aam
and
lods
jbe
mov
adc
xchg
xchg
adc
xor
imul
jl
test
inc
mov
mov
mov
cmp
in
mov
xchg
adc
lds
out
inc
mov
mov
inc
jp
fs
dec
mov
lahf
add
mov
xor
pop
cmp
and
mov
scas
std
mov
rcrb
xchg
das
aam
test
xchg
ret
pop
data16
loope
outsl
jl
cmp
mov
jae
cmp
push
or
mov
cmp
lea
adc
push
inc
push
mov
inc
pushf
xchg
xor
arpl
push
or
xor
fildll
push
push
sahf
adc
je
flds
ret
ja
insb
inc
push
push
out
outsb
fistpl
repz
idiv
test
cs
out
pop
int
daa
jno
out
and
push
fwait
xchg
aas
popf
lret
inc
xlat
push
push
into
out
loopne
in
loopne
insl
in
loopne
sub
mov
mov
loopne
dec
mov
jno
ljmp
lret
ret
scas
mov
pop
jnp
dec
fdivl
sbb
jmp
sub
hlt
fists
jle
mov
pushf
cmovo
test
jge
push
push
mov
lahf
fsubrl
insl
pop
in
imul
fsts
or
xchg
dec
sub
loopne
cmpsb
jge
push
push
mov
mov
mov
sbb
js
xlat
jg
mov
cmpsb
and
mov
inc
jns
mov
push
test
dec
and
mov
dec
pop
cli
call
call
dec
and
lcall
arpl
dec
iret
mov
mov
lret
xchg
pushf
pusha
push
dec
imul
out
sbb
das
adc
sub
inc
mov
jne
repz
mov
stc
pop
mov
loopne
les
jecxz
out
or
mov
push
adc
sahf
or
and
bound
gs
pop
xchg
in
jne
das
ss
std
outsl
xchg
xor
test
push
mov
ds
xchg
jno
jo
sub
arpl
out
xorb
jmp
rcll
cmp
mov
jnp
stc
push
lea
jne
das
mov
aaa
mov
push
out
sbb
jmp
lret
pop
adc
cwtl
xor
jbe
repz
sub
cmp
mov
mov
xor
in
mov
inc
xor
pop
mov
xchg
and
jo
push
sub
ret
inc
fstpl
xchg
cmp
mov
xchg
push
xchg
and
fistps
into
and
sub
iret
jns
js
adc
cs
or
std
lahf
loope
loop
js
ret
repnz
pop
sub
lcall
insb
cmp
popa
push
sub
mov
arpl
mov
mov
lret
lret
in
inc
test
mov
sub
sbb
lds
mov
mov
mov
pop
pop
xchg
xchg
push
push
ja,pn
das
sbb
pusha
aas
in
xorb
push
pop
cmp
cmp
pop
cmpsb
test
cmpsl
xorl
mov
imul
test
iret
adc
sub
aas
mov
mov
push
jnp
js
aaa
or
ret
sti
into
xchg
test
fs
adc
vmread
idivb
jns
outsl
or
cmp
fwait
bound
stos
cmp
xchg
mov
jae
push
adc
cltd
add
mov
lods
xchg
fbld
mov
fsubs
sub
punpckhwd
outsl
fisttps
movsl
imul
adc
scas
jbe
ror
call
push
fwait
mov
sub
insl
and
call
imul
shll
fidivrl
pop
mov
pop
mov
mov
stos
in
mov
popf
and
pop
ljmp
daa
push
lea
scas
dec
fwait
cmp
out
pop
mov
outsl
sub
lret
sbb
test
or
repz
mov
cmpsb
in
in
adc
cmp
fcomps
dec
aam
in
push
xor
jb
rcrl
push
pushf
mov
ljmp
inc
stos
mov
dec
add
xchg
jmp
push
movsb
movsb
cmp
dec
shlb
dec
mov
outsl
xchg
cmpb
xchg
ja
cli
into
dec
jl
pop
pop
daa
dec
ret
popf
rcrb
push
mov
insb
sahf
outsb
pusha
xchg
insb
cmpsb
mov
rorb
adc
or
inc
leave
shlb
dec
adc
popa
push
and
pop
fsubrl
popf
add
cmp
push
clc
push
imul
ja
cmp
cli
inc
fldt
dec
or
cmp
jge
imul
cmpsl
cmp
mov
jge
lcall
dec
jge
cli
clc
cmp
icebp
icebp
dec
je
int
sbb
js
jne
jmp
movl
call
loope
pop
leave
icebp
jecxz
push
pop
test
cmpsb
in
xor
mov
rep
je
mov
inc
xchg
jmp
sub
xor
jecxz
cs
dec
add
gs
sub
jae
lar
divps
xor
push
xor
sar
xor
adc
sbb
fwait
mov
in
pop
jp
jne
mov
jo
js
imul
or
add
cmp
call
popf
mov
mov
cmc
int3
cld
mov
push
cld
dec
dec
jne
into
stos
push
add
sub
in
jg
test
or
mov
imul
or
fbstp
icebp
jp
sbb
mov
push
xor
arpl
add
sbb
in
xor
adc
or
mov
pushw
or
adc
inc
fidivl
scas
les
sbb
mov
and
mov
bound
push
ds
mov
addr16
test
push
xor
fcoms
dec
cmp
cmpsl
jmp
ror
outsb
jp
and
cmp
js
popl
dec
inc
inc
xor
dec
mov
dec
and
jmp
xchg
dec
jb
sub
pop
mov
imul
fwait
xchg
sub
pop
cmp
sub
fcos
dec
stc
push
idivb
fstpl
adc
dec
and
adc
push
dec
cwtl
cwtl
clc
pop
fdivs
iret
push
rcrl
cmp
mov
shrb
adc
pushf
mov
popf
dec
imul
cmp
xchg
clc
scas
push
lds
adc
mov
and
inc
pop
mov
test
ss
fldt
je
pop
hlt
jae
inc
enter
lret
andl
add
xchg
dec
ljmp
mov
mov
test
lods
xor
loope
add
jns
pop
push
add
jno
or
and
stos
bound
and
cmp
mov
dec
clc
mov
aas
pop
push
xchg
pop
xor
xor
pushf
or
push
mov
and
mov
out
push
rcl
push
lock
lret
pop
inc
jno
stc
dec
icebp
mov
or
int
insb
imul
mov
mov
sbb
lcall
test
and
adc
mov
leave
stc
jns
lods
sbb
dec
push
cld
push
xchg
in
ljmp
push
fidivs
xchg
je
adc
out
sbb
lock
fldt
sahf
jo
dec
add
add
fcmove
mov
inc
aad
sub
pop
mov
sbb
cmp
shll
adc
scas
mov
jae
jns
adc
notl
and
dec
inc
xor
fstl
pushf
xchg
in
and
xor
adc
mov
add
or
mov
cmp
sti
pop
mov
xor
sahf
setp
inc
mov
jmp
inc
or
inc
xchg
shlb
test
sbb
loope
sub
loop
push
mov
insl
cmpsl
pop
fsubrp
hlt
clc
pop
fcmovbe
test
dec
int
xchg
push
daa
outsl
sti
pushf
adc
cltd
pop
andb
addr16
mov
aas
jge
jecxz
sbb
jae
sub
fucomip
stos
lods
sub
sbb
sbb
rolb
fimull
jg
add
jae
inc
lret
push
and
mov
push
adc
mov
or
and
pop
icebp
lea
and
push
xor
insl
scas
rcrb
push
dec
mov
sub
xchg
mov
cmp
mov
fstps
out
mov
pop
insb
mov
fdivrs
or
inc
pop
repz
mov
imul
add
xchg
xor
jecxz
pop
bnd
adc
mov
xor
call
shl
enter
in
cmp
pushf
ja
rcr
movsl
arpl
inc
xlat
lock
push
cmp
mov
lret
stos
lcall
adc
sbbl
mov
mov
loopne
cli
fadd
imul
in
mov
xor
bound
cwtl
cmp
dec
adc
pop
popf
lds
test
adc
lcall
dec
sub
xor
and
push
lods
pop
push
in
fadds
lea
dec
jno
xchg
push
push
mov
sahf
sbb
jno
scas
test
imul
push
jb
and
lahf
addb
inc
lods
int
jnp
call
sub
add
xlat
jmp
inc
lock
mov
xchg
mov
addr16
sti
push
cmp
mov
cltd
scas
xor
mov
movsl
push
xor
arpl
ljmp
inc
fwait
mov
inc
add
test
sbb
cmpsl
or
pop
lret
pop
cs
je
pop
sbb
cwtl
fisttps
insb
mov
fwait
out
adc
pushf
dec
arpl
arpl
add
fildll
push
cmpb
push
xchg
push
sub
icebp
and
fdivrs
clc
pop
fwait
cmc
cmp
pushf
jmp
mov
mov
pop
movsb
lea
stos
jle
aaa
push
out
add
test
fcmovb
jne
cwtl
shrb
sti
xor
int
out
mov
clc
jmp
hlt
adc
pop
sbb
imul
mov
ja
fwait
das
pop
gs
int
or
pop
je
xchg
aas
dec
xchg
ljmp
pop
push
jns
enter
inc
add
cmp
scas
adc
push
jle
in
lods
loope
jae
pop
ja
lcall
xchg
xlat
repz
arpl
js
pop
pushf
ficoml
push
ret
fwait
mulb
ds
push
xor
mov
pushf
sbb
dec
shlb
dec
xlat
and
ljmp
pop
jp
daa
push
mov
mov
loope
add
xor
fisttpll
je
imul
push
sub
and
cmp
sbb
or
enter
popa
jmp
out
dec
cli
pop
sti
mov
mov
std
xorb
pop
xor
jb
ret
xor
mov
pushf
add
sub
test
cmp
cmc
out
jecxz
dec
xchg
scas
or
mov
cmp
lahf
push
das
or
into
jo
sub
leave
pop
or
fnstsw
cmp
mov
mulb
clc
cmpsl
dec
sbb
mov
or
shll
leave
popa
ret
lea
lea
mov
cmp
movsb
pop
mov
pop
popa
clc
pushf
jecxz
push
push
das
in
cmp
sub
xlat
das
aas
in
push
ljmp
cltd
jecxz
dec
xchg
shll
mov
sbb
dec
bound
dec
je
fcompl
inc
cs
fistpll
int3
or
push
addb
insl
cs
mov
arpl
les
inc
push
and
sbb
ret
and
jg
sub
mov
sbb
pop
lret
in
mov
lahf
mov
cmpsl
xor
sbb
sub
ret
repnz
cmpsl
lcall
idiv
cmpsb
aas
xchg
lea
repnz
or
stc
lahf
hlt
loopne
pop
sbb
mov
mov
enter
iret
cmp
sub
mov
int
lea
cld
test
sahf
cmpsb
imul
repnz
imull
jge
and
xchg
jg
mov
test
xchg
push
cwtl
cmc
xchg
aam
aam
and
js
mov
xor
ficoms
icebp
xchg
xor
imul
mov
in
shll
push
dec
xchg
bound
push
subb
aas
pop
shl
xchg
sbb
int
gs
lcall
pop
xchg
xchg
bound
mov
mov
or
dec
sahf
push
out
cs
sahf
push
ss
inc
sbb
movsb
iret
inc
pop
sub
fists
rcll
or
cmp
gs
gs
pushf
test
or
push
push
lahf
push
sub
cs
pusha
add
push
ss
jge
push
mov
push
cltd
and
gs
adc
gs
stos
mov
cmp
jge
xor
mov
adc
or
cmpsb
mov
mov
cli
adc
cmp
jmp
mov
or
repz
sahf
xor
jbe
cmp
je
push
mov
xchg
jg
lods
insb
lcall
jne
jl
repnz
ja
ja,pt
movsl
xor
and
js
cwtl
pushl
scas
sahf
xor
mov
outsl
pop
inc
sarb
mov
jnp
dec
mov
xor
imul
in
lods
cmp
in
sub
xchg
add
mulb
loop
mov
leave
adc
int3
push
out
push
rorb
iret
lcall
jbe
cmpsb
mov
cmp
movsl
pop
repz
pop
loope
imul
das
pop
je
push
in
ror
push
add
fildl
divb
dec
repnz
lret
enter
mov
sub
xchg
out
imul
jle
mov
jno
in
mov
dec
and
push
ljmp
fmulp
aaa
mov
leave
out
pop
lret
aas
dec
lret
je
adc
push
ffree
mov
sub
scas
and
cmp
jle
adc
aam
testl
push
fcomps
dec
pop
xchg
jle
mov
pop
sbb
inc
xor
jg
jo
xchg
mov
loopne
mov
push
cmp
inc
test
cmc
push
in
push
rorl
imulb
mov
shlb
add
push
and
ljmp
dec
pushf
xor
sbb
mov
movsb
xor
clc
out
dec
das
sahf
stos
push
scas
mov
inc
int3
bound
xchg
pop
dec
call
and
jae
hlt
sub
xchg
jns,pn
pushf
mov
mov
jmp
mov
xor
popf
push
lea
daa
xchg
xor
ja
mov
mov
ljmp
in
in
cmp
test
pop
rclb
lahf
test
inc
ljmp
cmp
xor
jle
mov
dec
popa
and
testl
add
inc
cmp
inc
movsb
jns
xlat
jbe
xchg
pop
push
mov
jp
jp
mov
faddp
jae
lods
add
lea
xlat
jge
leave
push
pop
sbb
outsl
dec
icebp
push
push
sub
mov
fistpl
cmp
jle
popf
jb
in
sub
lahf
sbb
test
ja
inc
outsb
clc
xor
negl
lret
mov
mov
shl
jmp
xchg
pop
call
jb
jo
xchg
pop
rclb
pop
sbb
xor
enter
loopne
or
sub
sub
jb
cmc
loop
mov
mov
pop
adc
jge
xor
pop
or
jo
xor
inc
lds
lret
out
pop
neg
push
sbb
jecxz
mov
out
aas
and
jmp
mov
cmp
mov
lahf
sub
jge
xor
outsl
aaa
add
cmp
mov
stc
push
notl
lcall
push
push
dec
xor
cmp
inc
test
adc
mov
pusha
or
test
xor
sbb
lods
cmp
jne
inc
ret
es
jmp
mov
adc
push
movsb
push
jb
mov
aas
test
push
xchg
cmpsb
lea
hlt
pop
in
push
mov
fildl
fdiv
cs
loop
scas
push
fs
hlt
mov
sbb
movsb
jnp
aaa
mov
xchg
cmpsb
test
dec
sub
or
test
mov
or
ss
imul
std
out
inc
fstpl
xchg
mov
aad
fmull
dec
inc
ja
mov
push
movsl
pop
mov
nop
push
push
fildll
jp
mov
fstpl
hlt
cmpsl
out
pop
adc
sub
ficompl
hlt
subb
stc
stos
in
xor
xor
sbb
or
arpl
cs
xchg
sahf
sarb
mov
xor
jg
call
push
xlat
xchg
sti
push
sbb
imul
pusha
lods
jne
pop
rcl
mov
subb
push
mov
lret
mov
sbb
call
jb
mov
fsubrl
leave
push
cmpsb
mov
pop
push
sahf
insl
ds
aad
out
mov
mov
mov
adc
dec
scas
scas
mov
mov
iret
xchg
xchg
xor
pop
jl
adc
mov
je
aad
js
mov
sub
adc
jle
ljmp
sub
cli
in
xor
repz
in
ss
popf
xor
cmp
fcoml
xchg
cmp
jecxz
ss
das
or
pop
xchg
sbb
lods
je
in
dec
dec
test
dec
fimuls
and
fildll
lcall
sbb
pop
jnp
or
imul
stos
cmpsl
pop
loopne
sub
ja
popf
inc
jp
andb
mov
push
xlat
les
xchg
sbb
jl
ss
adcb
ret
adc
outsl
test
jecxz
or
dec
hlt
inc
in
cmp
fs
xor
lods
push
inc
pop
or
cmp
push
inc
je
enter
jecxz
xchg
xchg
clc
jecxz
in
fcmovu
mov
inc
adc
lods
jo
filds
pop
jg
inc
jns
pop
xchg
popa
pushf
dec
push
rolb
xchg
xchg
rcr
xchg
adc
and
nop
dec
dec
add
sbbb
pop
lds
fsubrs
cwtl
jbe
pusha
flds
outsb
xchg
xchg
add
xchg
ret
xor
pop
pop
fcmovnu
das
xor
mov
jns
sub
stos
push
cmp
out
les
inc
in
test
fwait
push
adc
xchg
out
cmpsl
and
push
in
mov
xchg
addr16
das
lds
in
adc
ds
xchg
clc
xlat
xchg
push
pop
pop
mov
icebp
loopne
cli
pop
loope
lea
aas
cmpl
or
nop
nop
jns
mov
call
sbb
in
cmpsb
rol
cwtl
icebp
movsl
ss
call
loop
xchg
imul
sar
and
xlat
stos
inc
pushf
and
subb
and
lods
stos
xchg
add
xchg
xchg
cs
hlt
and
and
mov
adc
roll
subb
and
fildl
mov
popf
pop
inc
xor
mov
insl
pop
mov
arpl
xor
cltd
mov
mov
icebp
fidivs
stc
push
jl
int
dec
ja
stos
adc
mov
inc
in
in
xchg
fucomi
sub
sbb
mov
xchg
es
popw
add
aam
push
scas
ja
test
mov
adc
sub
icebp
add
ret
frstor
aaa
and
mov
scas
enter
jmp
inc
movsl
pop
cs
mov
cmp
or
mov
popa
dec
push
push
mov
iret
cmp
jp
das
imull
push
inc
into
and
ja
mov
inc
nop
lret
pop
clc
shll
into
add
jl
ja
mov
fs
out
sub
rclb
push
xor
stos
add
and
loop
mov
inc
and
mov
cmp
and
mov
push
cmp
pop
nop
leave
and
sbb
jge
inc
xchg
fcmovu
add
and
mov
xchg
xor
mov
xorl
adc
sbb
lea
sub
repnz
mov
inc
cmpsb
xchg
sbb
dec
popf
push
adcb
outsl
aam
pop
test
ret
xor
fwait
addr16
mov
push
icebp
jmp
scas
push
pop
xchg
sbb
push
dec
jp
popf
add
repz
leave
dec
add
sbb
sti
jnp
add
mov
jo
mov
or
pusha
fnstcw
adc
add
outsb
shlb
inc
mov
sbb
pop
data16
cmp
mov
push
pop
or
cld
notb
orb
shll
mov
xchg
ss
test
or
pusha
andnps
cwtl
lahf
test
fprem1
push
and
xchg
mov
aad
mov
mov
cmp
in
rolb
add
mov
sbb
inc
movsl
inc
test
pusha
jno
xor
add
cwtl
inc
xor
sti
inc
cld
push
and
add
cmp
test
add
mov
dec
inc
mov
ret
inc
in
jmp
das
testb
or
dec
aad
inc
dec
imul
sub
stos
add
test
addl
insb
mov
addl
cmpsl
aas
add
cmpsb
jp
mov
mov
push
jle
cltd
cmp
pop
ljmp
loopne
fmul
ss
add
loop
push
shr
cmp
xchg
and
repz
xchg
dec
jo
jmp
aaa
popa
insl
idivl
into
orb
push
dec
mov
dec
in
sbb
push
mov
mov
pop
xchg
pop
fldenv
les
pop
lods
bound
fcmovnbe
add
sbb
jle
add
lret
aas
lods
jecxz
and
push
je
xor
add
mov
mov
divl
in
fcompl
in
cli
cwtl
movl
mov
mov
sub
andl
es
lret
fisubrl
cld
je
cwtl
insb
xlat
aaa
and
jl
sbb
scas
push
mov
sbb
cmc
mov
rcrb
xlat
test
popa
jecxz
jmp
ljmp
movsb
inc
pop
pop
jl
fnstsw
aas
push
dec
jecxz
push
lret
lcall
out
cwtl
inc
push
push
sub
dec
in
das
push
xor
aaa
bound
sti
leave
jns
out
movsl
mov
pop
jno
or
lcall
call
lock
or
pop
push
into
cli
gs
ljmp
cmc
jno
xchg
mov
loopne
push
inc
dec
icebp
enter
pop
sub
xchg
aad
stos
int3
dec
or
xorl
cmp
mov
leave
mov
pop
pop
in
xchg
rorl
xchg
jb
dec
dec
pop
jno
lods
test
lods
lret
mov
adc
or
stos
inc
jb
es
jbe
movl
outsb
sub
cmp
stc
mov
push
sti
inc
ret
sub
jmp
pop
pop
sbb
add
ds
or
pop
jle
ret
sub
mov
sub
aad
adc
or
lds
mov
rcrb
mov
ret
mov
push
rcl
jne,pt
stos
mov
jecxz
test
mov
sarl
cmpsb
cmpsl
push
jo
jo
adc
push
adc
mov
idivb
xor
cmpsl
xchg
cltd
lret
rcll
pop
cmpsl
or
xchg
aam
jle
mov
pop
sarb
pop
mov
loopne
xchg
xchg
jae
aad
movsl
leave
adc
mov
cmp
lds
addb
cli
push
cmpsl
xchg
stos
dec
stc
in
shr
rolb
inc
test
push
dec
scas
sbb
insl
lds
bound
and
sub
andb
cmpl
adc
int
push
xchg
std
mov
adc
jg
int3
into
rolb
call
out
out
sbb
xor
mov
dec
cmp
and
mov
push
jmp
fs
cwtl
mov
xor
lret
bound
mov
out
or
fisttps
push
jle
test
cmp
jnp
std
in
mov
push
xlat
push
les
xchg
jmp
fstl
into
loop
addr16
dec
dec
enter
jecxz
div
push
lods
and
adc
lock
fwait
lret
fwait
sbb
in
ljmp
mov
lcall
popf
push
cmpsl
aam
inc
outsl
xor
mov
scas
mov
pusha
repnz
mov
mov
xchg
aad
inc
push
pop
xchg
sub
sahf
add
or
mov
mov
dec
mov
sub
xchg
enter
inc
lret
mov
cmp
cs
add
pop
mov
add
popw
lea
mov
cmp
aam
mov
xor
cwtl
mov
cmpl
mov
cmp
cmpb
and
cmc
mov
jo
push
stos
pop
in
addr16
pop
adc
and
cmp
or
cmp
push
cmp
enter
jo
push
cmpsl
xor
mov
rcrl
ja
ret
pop
out
pop
clc
sbb
out
cmp
mov
call
xor
cmp
lcall
in
cs
hlt
xor
sar
xchg
jae
xchg
xor
es
cld
mov
jmp
add
in
mov
push
repnz
lock
ss
xlat
insb
fdivrl
rol
das
sbb
pop
sti
ret
mov
mov
and
sarl
cmp
das
dec
jne
jno
sub
add
out
sbb
loopne
cwtl
pop
int3
mov
cltd
addl
cltd
lds
scas
loop
push
inc
xor
andb
adc
mov
adc
loop
adc
lods
sbb
lea
imul
mov
inc
jae
pop
je
and
xlat
mov
jg
neg
out
adc
add
les
pop
xchg
or
or
js
push
or
lds
mov
mov
dec
gs
sub
rclb
xchg
mov
sahf
sarb
lea
je
iret
aam
mov
xor
and
dec
fisubrs
adc
jb
fistpl
aas
gs
and
outsl
arpl
pusha
movsl
add
sbb
or
mov
js
call
pop
icebp
test
push
adc
sbb
sbb
push
cli
movsb
add
mov
lds
jl
and
lea
lods
mov
add
add
aad
adcb
ljmp
fnstsw
pop
imul
xchg
mov
jmp
test
and
mov
pop
lods
xchg
lods
lock
cmpsb
inc
xchg
out
jno
js
out
dec
push
fistpl
faddl
movsl
add
movb
mov
mov
mov
roll
rorb
jo
es
or
push
popf
pop
adc
sbb
and
or
stc
clc
add
push
cmp
aad
out
in
fs
cwtl
mov
lahf
pop
pop
push
jge
xchg
or
mov
cmp
mov
lret
xchg
mov
pop
clc
add
jnp
out
jnp
insl
sub
cmp
hlt
pusha
fistps
and
dec
mov
dec
push
push
js
jecxz
imull
xchg
and
push
in
and
xchg
or
or
clc
dec
cmp
or
inc
jge
jnp
dec
push
cmc
lret
aaa
pop
cltd
jno
in
fildl
aas
xor
cs
xchg
sbb
leave
imul
sahf
and
sbb
fsub
or
xchg
or
adc
inc
add
sbb
xchg
fcoms
jo
std
loope
adc
bound
cmp
pop
in
or
jne
inc
lcall
pop
imul
inc
fisttps
int3
sbb
xchg
fcoml
lahf
cmp
sbb
rcrb
lock
inc
stc
je
ds
ljmp
popa
sbb
mov
mov
dec
push
enter
scas
and
loop
in
loopne
cmp
cmc
xchg
jns
imul
rol
int
fwait
in
mov
inc
add
cmp
adc
xor
mov
daa
imul
adc
mov
addb
pop
mov
imul
xchg
fidivrl
lock
xorl
std
fcoms
sbb
sbb
movsb
xchg
movsl
jecxz
aam
add
lock
aaa
out
clc
or
mov
add
int
push
mov
sbb
mov
xchg
mov
adc
mov
sub
mov
mov
mov
mov
cmp
fidivrs
mov
ja
cmp
push
in
cmp
push
lcall
adc
jbe
imul
jl
add
adc
ret
inc
rorb
jp
das
xor
dec
pop
jecxz
xlat
shrl
int
jae
aam
dec
leave
adc
fsubl
fnstenv
xchg
imull
rcl
cli
add
add
fs
or
mov
adc
sbb
aad
repz
test
jecxz
stos
hlt
hlt
fs
enter
xchg
lret
mov
outsl
cmp
add
in
aad
dec
mov
pop
sbb
adc
mov
cmp
xor
pop
ja
cmc
dec
sub
jo
mov
aaa
cmp
je
inc
inc
adc
movsl
hlt
xchg
push
add
push
xor
dec
mov
ret
es
stc
and
iret
cmpsl
aaa
cmp
sarl
cmp
shll
cld
push
iret
add
xor
and
ja
dec
repz
ret
mov
adc
mov
add
sub
lahf
insl
rcll
leave
nop
mov
cs
jne
inc
inc
mov
adc
push
arpl
fistps
sub
sub
cmpl
outsb
sti
aaa
insb
push
adc
sbb
or
call
ficoml
int
fimuls
mov
lahf
dec
pop
loope
mov
dec
mov
push
movsb
inc
cmp
push
lcall
enter
add
inc
mov
lock
cmpb
xchg
out
dec
mov
or
imul
cmpsb
loopne
mov
enter
pop
dec
in
bound
gs
sub
push
pop
push
mov
rcr
mov
movsl
pop
mov
out
pop
add
fildl
push
ja
int
lds
dec
xchg
cwtl
pop
repz
js
outsb
les
push
leave
sarb
outsb
stc
mov
xor
icebp
test
js
rcl
or
pop
mov
xchg
xor
fld
dec
pop
aam
inc
xchg
shlb
insb
dec
sub
gs
xchg
inc
adc
nop
das
mov
cmp
mov
je
cmpsl
mov
stos
sahf
or
rcll
lods
fs
sbb
jnp
inc
xchg
lods
mov
cmp
lock
cld
push
cld
ljmp
xchg
ficompl
mov
in
dec
shll
andl
les
es
add
out
cmc
jge
pushf
loop
cli
mov
aam
mov
sahf
and
loope
stc
jno
sub
inc
mov
xchg
cmpsb
push
scas
lods
outsl
push
mov
sub
cmp
inc
pop
dec
xchg
addb
and
rcl
clc
xor
mov
sub
mov
and
lock
lods
cmc
mov
add
inc
in
sub
ja
mov
popf
scas
sbb
dec
push
dec
mov
std
test
rolb
sahf
mov
xor
jle
inc
jecxz
cmp
inc
test
lods
sub
call
leave
cmp
xor
repz
lods
fs
sahf
jg
test
dec
jmp
xor
jnp
inc
pop
xchg
sub
imul
mov
sub
pusha
fistpl
xor
sub
or
and
sub
sbb
add
fs
xchg
rcr
loopne
test
mov
je
jb
scas
cwtl
test
inc
or
sub
mov
es
insb
xchg
pop
push
pop
push
les
mov
push
sbb
lock
or
fmuls
fstl
xor
fistl
adc
adcl
dec
push
gs
scas
sbb
movb
xchg
in
jne
scas
rcrb
mov
sub
pusha
outsl
pop
add
jne
mov
sbb
push
inc
dec
jmp
fidivl
jns
cli
adc
out
xor
sbb
jg
lock
adc
dec
jp
sbb
cltd
cmpsl
adc
stos
mov
adc
pop
pushf
lret
shrb
cmp
and
jae
shlb
rclb
sbb
inc
pop
mov
arpl
and
add
push
sti
lds
loope
or
movsl
mov
mov
cmp
out
sub
push
aad
and
aaa
sub
dec
out
dec
push
push
mov
mov
imul
xchg
inc
ds
ret
in
push
insl
mov
sahf
or
aam
rcrl
pushf
repz
stc
pop
loope
or
test
clc
xchg
cmp
bound
mulb
xchg
repnz
ljmp
mov
mov
push
repnz
xchg
scas
movsl
jg
out
push
test
lea
inc
leave
push
xchg
andl
ret
adc
mov
prefetcht2
in
lret
outsb
jmp
and
sub
daa
and
jns
loopne,pt
or
adc
aas
cmc
ss
sti
mov
scas
xor
pusha
cmc
jmp
idiv
mov
mov
mov
adc
jbe
std
mov
popf
sub
add
les
ss
fisubs
push
mov
aam
sub
sbb
popf
xchg
push
pop
outsb
imul
mov
sbb
adc
out
cwtl
cmp
pop
xchg
xor
dec
ljmp
xchg
repz
lahf
sbb
cmp
clc
ret
cmp
dec
push
push
mov
sbb
lods
sbb
scas
push
arpl
mov
xchg
push
sahf
dec
insl
jo
pop
scas
mov
pusha
dec
jno
xlat
mov
icebp
sub
fwait
ja
xchg
push
cmpsw
mov
out
iret
sub
lods
sub
clc
stos
nop
pop
aas
cmp
and
sar
rorb
cmpsl
jl
leave
movsb
and
jp
cmp
inc
mov
mov
jecxz
sub
sbb
xor
gs
outsl
mov
cmpsb
int3
lcall
mov
inc
orb
insb
mov
push
sub
inc
icebp
or
jp
or
jns
testl
cmc
dec
lock
pop
or
pop
imul
cmp
sub
rorl
leave
sub
adc
pop
testb
dec
mov
mov
lcall
cltd
fildll
jmp
mov
mov
mov
and
pusha
xchg
push
enter
sahf
push
pop
sbb
lock
pop
xor
lds
push
lock
fwait
ja
stos
dec
xor
sub
or
cmpsl
mov
pop
pop
pop
ficompl
es
mov
lods
dec
mov
or
dec
cmp
hlt
mov
ds
xchg
in
dec
pusha
pop
or
xchg
sahf
add
dec
and
dec
mov
pop
out
scas
xchg
cmovns
insb
lret
lcall
cmp
push
jo
adc
mov
sub
cmp
adc
testl
jns
add
cmpl
add
cli
mov
es
jns
pop
jp
testl
out
das
mov
pop
sbb
push
xchg
mov
leave
xorb
cmp
jl
ja
shll
notb
and
pop
sub
jae
enter
stos
xor
fstpl
aam
lret
cmpl
pop
mov
jae
fcompl
je
push
and
xchg
ja
dec
push
shlb
sbb
dec
and
in
les
movsl
scas
adc
out
mulb
jnp
mov
mov
push
xchg
fwait
mov
subl
and
push
stos
pushf
adc
insl
jb
mov
cmp
dec
xor
mov
xor
fistl
or
push
jl
and
xor
jl
cmp
lods
fcoms
inc
mov
add
sub
jmp
or
enter
jecxz
adc
or
lahf
pushf
das
subb
es
mov
or
mov
in
mov
inc
aaa
stos
fmull
lret
mov
jne
fcmovnbe
cli
sub
leave
mov
cmc
cmc
out
mov
push
jecxz
mov
mov
scas
pop
imul
lods
shrl
cmp
adcl
jmp
sbb
lods
or
push
movsl
jp
lahf
rclb
and
sub
pop
adc
mov
mov
aam
je
push
mov
movsb
stos
cmp
loop
inc
lods
mov
ror
mov
lcall
sahf
lcall
jg
push
xchg
es
pop
dec
push
push
inc
scas
rorl
mov
xchg
xchg
jle
xchg
shrl
inc
or
popa
jmp
je,pt
lods
les
pop
mov
rcrb
dec
dec
pop
loopne
jge
scas
xor
and
push
hlt
sub
mov
arpl
jp
cmp
ror
inc
jmp
notl
mov
imul
outsb
adc
or
icebp
das
sbb
scas
push
sti
call
push
iret
out
lea
cmp
loop
into
adc
dec
loop
out
iret
lea
pop
lock
pop
and
cld
into
stos
add
pop
das
jle
cld
popa
std
mov
adc
push
push
call
mov
cld
dec
add
sbb
jle
imul
aas
dec
dec
cld
or
incl
lods
inc
enter
fisubs
jmp
push
mov
lock
xchg
cld
mov
sub
jmp
mov
loope
mov
lock
cmpsb
data16
aad
push
daa
stc
leave
jge
pop
mov
call
cld
shl
outsl
hlt
repnz
and
data16
outsb
dec
outsb
incl
mov
xor
lahf
enter
out
out
cld
out
int3
sub
xor
sbb
popf
ljmp
repnz
std
imul
lahf
shrb
ss
and
mov
iret
lret
pop
repz
shl
rcrl
je
std
btc
cmp
loop
sbb
cmp
call
ja
stos
lahf
in
out
call
or
sub
stos
call
xchg
hlt
add
scas
xchg
scas
clc
xchg
sbb
jne
mov
test
cwtl
fadd
pushf
inc
outsl
aam
stc
cs
lock
pushf
addr16
mov
insb
jge
pop
fmuls
stc
jo
ljmp
cmc
lcall
dec
cltd
loop
je
mov
loopne
jae
bnd
pushf
mov
push
std
mov
and
pop
in
shll
mov
pop
shlb
std
lods
pop
cmpsl
insb
or
pop
adc
out
stc
lock
mov
movsb
pop
mov
push
pop
rorb
pop
mov
and
cmp
jl
mov
adc
jle
or
test
psubb
in
in
and
xchg
rclb
push
js
jbe
inc
xor
negb
jb
or
add
adc
or
xchg
mov
adcb
int3
or
add
xchg
inc
pop
in
popa
adc
dec
test
lods
mov
fistpll
jns
mov
or
add
sub
and
mov
push
add
xor
jp
xchg
rcll
xorb
add
out
mov
imul
mov
jecxz
mov
pop
stos
aaa
sbb
xchg
sbb
sub
push
or
daa
sbb
into
dec
mov
mov
leave
fucomip
popa
cmpsb
cvtps2pd
inc
pop
sub
cmp
add
push
xchg
inc
and
dec
pop
loop
ss
dec
loop
cmp
add
scas
repnz
leave
jo
mov
std
sbb
pop
pop
fisttpll
mov
or
adc
or
sbb
incl
ret
jge
test
insl
aas
lock
in
push
jae
iret
stos
or
lds
nop
into
sahf
sbb
clc
adc
xchg
ret
or
mov
pop
inc
cmp
mov
push
fsubp
cmpsb
jle
popf
inc
rolb
cld
movsb
lahf
stos
sbb
sbb
loope
cmp
rorb
addr16
movsb
push
sbb
shlb
xchg
or
xlat
add
push
cmp
shlb
gs
cmp
das
imul
movl
sahf
enter
dec
mov
cli
icebp
adc
push
jle
or
mov
inc
ds
mov
or
cli
mov
pop
fimull
cli
fwait
loopne
inc
ljmp
adc
clc
pop
stos
andb
ljmp
and
iret
cwtl
xor
aas
cmp
pop
enter
fcomps
inc
mov
cld
xchg
and
or
ffreep
ja
inc
out
into
jno
pop
scas
fstpt
inc
iret
ljmp
hlt
or
jle
scas
cmpl
idivb
lahf
popf
jo
jo
out
icebp
mov
xchg
cld
rcll
ret
daa
mov
xchg
mov
leave
into
sti
jle
fisttps
pop
daa
loop
clc
call
orb
jmp
shll
mov
sbb
les
inc
ja
iret
mov
out
mov
daa
mov
stc
mov
std
lea
mov
lahf
xchg
and
pop
arpl
iret
ljmp
aam
pop
stc
dec
insb
jnp
push
or
out
dec
lea
dec
lahf
mov
mov
testl
in
arpl
imul
push
cmp
mov
mov
push
pop
rcrb
sti
jne
fs
xchg
cmp
mov
les
inc
gs
jle
jp
push
lret
inc
jge
jp
inc
push
ljmp
jp
sbbl
lcall
pop
and
cmpsl
iret
add
xor
or
pop
mov
in
inc
dec
push
lea
pop
mov
in
fnsave
mov
mov
jns
imul
je
scas
pusha
hlt
roll
fs
jnp
repnz
dec
mov
popf
aam
orl
xor
xor
jbe
xor
mov
bound
hlt
mov
xchg
test
cmp
mov
int3
rcr
mov
dec
add
xchg
insl
jg
iret
movsl
sub
xor
xor
pminub
je
mov
repnz
xor
das
jbe
cmp
sti
push
inc
aam
aas
std
orl
mov
aas
addb
jle
mov
inc
mov
jno
out
aaa
testl
fmuls
lret
dec
jno
jb
sti
inc
jge
pop
into
push
out
jno
repz
sbb
stos
xchg
fs
sti
fisubrl
cld
mov
ja
add
add
ds
jb
xchg
mov
push
cmpsl
test
repz
xchg
movsb
fsubl
mov
shl
and
inc
daa
mov
in
fmull
add
in
or
repz
daa
fistpl
gs
enter
dec
not
in
lods
mov
xchg
rorl
pop
mov
gs
sti
cvtdq2ps
icebp
cmp
push
sbb
jnp
mov
xchg
jmp
sub
inc
pop
or
hlt
insb
add
sbb
push
sbb
mov
out
xchg
xlat
pop
fcomps
jne
fwait
das
lret
popa
scas
add
dec
inc
cmp
hlt
cmp
cmpsb
inc
inc
jg
push
daa
call
push
mov
add
jp
add
aam
lcall
jb
gs
les
out
push
fnstenv
aas
pop
adc
jo
dec
xor
rol
mov
in
cld
test
xor
daa
lds
lret
add
and
cld
jmp
aam
jb
dec
push
xor
popa
sarb
sbb
lock
ja
lahf
cmp
xor
adcl
push
pop
mov
pop
in
int
xchg
xor
sti
outsl
add
jle
iret
test
pop
call
sub
out
mov
pop
cli
push
pop
mov
jmp
pusha
jg
sbb
icebp
clc
push
clc
stc
test
xchg
testb
and
pop
jle
pop
das
mov
jae
popa
lret
xchg
push
or
push
mov
cmpsb
cmpsb
sbb
jnp
aad
xchg
es
dec
int3
fs
add
sub
pop
cmpsb
push
sbb
jecxz
add
imul
std
xlat
pop
dec
in
movsl
pop
cmp
int3
xor
ss
filds
add
testb
or
imul
fstpt
fsubrs
sbb
nop
lods
cld
leave
cmc
xor
fisubs
inc
popf
test
addb
into
lret
xchg
push
inc
mov
test
mov
dec
xor
cld
mov
notb
popa
mov
sti
jg
sarl
mov
mov
out
or
xor
mov
cmp
iret
mov
arpl
leave
and
adc
jmp
mov
fbstp
xchg
std
inc
sbb
ds
mov
lods
das
mov
loope
fbld
mov
ret
daa
mov
xchg
mov
cwtl
loopw
test
jns
sbb
pop
xor
repz
add
hlt
outsb
int3
mov
mov
mov
pop
test
mov
sbb
popw
xor
push
mov
lea
inc
imul
mov
iret
les
subl
stc
mov
ljmp
or
popf
ret
jle
and
pop
and
out
scas
adcl
cli
ljmp
fcmovne
call
jl
lods
inc
cld
lret
sub
aad
jmp
mov
cld
add
add
xorb
mov
mov
mov
pop
stc
loope
mov
jg
and
and
xor
test
movsb
test
xchg
cwtl
push
cmp
mov
outsb
rol
test
mov
or
jno
bound
movb
jb
leave
jne
ret
pop
jp
lds
int
push
test
mov
jg
negl
addb
adc
incb
cmovl
call
jle
dec
das
lret
cmp
scas
mov
and
and
bnd
outsl
repnz
orb
inc
mov
xchg
js
inc
jae
fnstcw
mov
fdiv
out
mov
cmp
mov
aam
out
mov
imull
imul
lcall
lret
sar
aad
jle
push
hlt
jnp
push
ret
out
xor
cmp
repz
loop
fstl
fstl
mov
add
mov
mov
pusha
aas
mov
push
sbb
test
sbb
xchg
inc
shl
js
fnstenv
fdivr
stos
pop
inc
pop
js
push
popa
mov
mov
jbe
out
jl
lcall
pop
mov
jecxz
lret
sbb
cmc
ds
adc
clc
enter
fsubs
pop
dec
lods
dec
jg
leave
pop
push
and
sbb
xchg
push
test
jae
xor
inc
lcall
das
and
popa
outsb
std
jg
and
push
and
lea
leave
cwtl
inc
xchg
jae
loopne,pt
or
call
pop
ja
jae
out
cmp
adc
divl
sbb
pop
add
push
scas
notrack
jp
addl
xchg
lahf
jae
sbb
in
adc
aaa
lcall
sub
out
addr16
xlat
movsl
lods
sub
jo
in
daa
jb
mov
jns
pop
aam
adc
jno
xchg
add
fsubl
ljmp
sti
bnd
loop
stos
jno
das
sbb
pop
adc
je
nop
lods
stos
fsubrl
jo
lcall
xor
sahf
jge
and
xchg
and
loopne
and
jne
stos
stos
cmpsb
movsl
pop
imul
out
xchg
or
leave
scas
andl
push
mov
adc
loope
mov
fsub
xor
mov
add
or
test
cmp
imul
pop
arpl
fs
popf
jo
xlat
xchg
xor
pop
lea
das
adc
aam
inc
jno
scas
cmpsl
lods
sbbl
dec
jbe
fcmovbe
addr16
les
adc
cmp
sbb
cmp
scas
push
sub
lds
fstl
pop
js
add
sbb
push
push
pop
xchg
fsubrl
lea
subb
add
dec
jo
cmp
idivb
sbb
data16
stos
and
ljmp
push
iret
into
xchg
mov
sbb
ds
mov
xor
fs
jnp
xchg
push
inc
jecxz
loop
or
dec
or
das
or
inc
lods
pop
sahf
xchg
inc
ret
aas
mov
popf
lods
pop
mov
ljmp
mov
pop
jmp
daa
xchg
dec
pop
mov
mov
loope
mov
movsl
cmpsl
push
sub
dec
and
scas
jns
cli
jb
mov
imul
leave
mov
jmp
in
js
leave
adc
add
cli
inc
push
and
pop
or
inc
add
and
mov
and
repnz
daa
icebp
xor
out
cmp
jb
loop
fldcw
repz
jmp
jecxz
into
or
ljmp
adc
flds
push
sbb
xorb
dec
mov
lcall
sahf
insb
jbe
in
dec
xchg
mov
jle
rclb
jecxz
dec
sbb
mov
aad
dec
or
push
push
jmp
xchg
stc
mov
or
xorb
push
adcw
sti
lahf
push
out
icebp
xlat
jl
ficoml
fidivrl
adc
lock
inc
mov
stc
pop
repnz
push
scas
pop
jo
inc
addr16
or
sbb
pop
clc
inc
push
dec
xchg
movlps
xorl
insb
pop
inc
jne
dec
add
inc
mov
shll
aaa
sti
sub
xchg
cwtl
aas
pop
pushf
outsb
data16
push
popf
mov
or
nop
mov
test
fld1
movsb
mov
es
ret
outsl
inc
or
push
sbb
or
sub
out
xor
cltd
ret
pop
jns
jmp
lea
adc
sub
or
adc
mov
xor
cmp
data16
mov
sub
sbb
xor
pop
inc
inc
lret
push
add
loopne
ss
push
daa
mov
add
inc
xorl
jne
fidivl
xchg
mov
xchg
addr16
orb
and
xchg
and
bound
je
in
testb
add
pusha
mov
int
mov
ljmp
cmp
pushf
addr16
and
adc
test
arpl
shll
rcr
test
in
in
pop
xchg
out
push
cld
pushf
dec
cli
cld
nop
cld
add
mov
xchg
fxch
cltd
cwtl
call
leave
jnp
loop
mov
lret
aas
and
fstpt
sbb
scas
sbb
and
jne
push
inc
aam
mov
inc
hlt
ret
mov
xchg
imul
aaa
mov
xchg
sub
cmpsl
fnsave
adc
addr16
push
adc
mov
mov
inc
ss
mov
mov
mov
xchg
xlat
dec
out
fld
stc
push
hlt
scas
xor
add
mov
mov
test
in
fsqrt
or
mov
push
pop
popa
add
sbb
push
mov
ss
mov
adcl
icebp
cmc
sbb
dec
pop
xor
sub
jb
fcoms
push
ficompl
xor
pop
pop
nop
mov
dec
movsb
adcl
addr16
cmpsl
mov
jmp
cmpsb
paddq
mov
mov
test
add
out
inc
and
mov
int
aam
jge
mov
pop
nop
dec
adc
jbe
pushf
into
sbb
push
mov
lret
ljmp
aam
repnz
lcall
pusha
mov
xchg
stos
roll
fsubl
cs
shll
out
xchg
pshufw
jbe
sub
adc
or
pop
mov
sahf
test
movsl
or
scas
lret
loopne
push
or
sahf
push
mov
pop
call
clc
stos
repz
mov
scas
mov
inc
add
scas
ljmp
aaa
jle
nop
test
arpl
or
movsl
into
mov
inc
xor
stos
cmpsl
enter
gs
insb
pusha
dec
ljmp
lods
xchg
aad
dec
xchg
hlt
stos
sub
push
pop
add
push
dec
dec
cli
mov
mov
and
pop
andb
loope
pop
lods
sub
jo
test
and
inc
cmp
mov
xor
pop
or
aaa
sub
sub
call
sbb
pusha
scas
imull
push
dec
push
xor
push
sub
push
icebp
push
sub
xchg
or
inc
call
xchg
cs
add
push
cmp
push
inc
mov
add
js
ja
cltd
cmp
or
jne
push
imul
inc
ss
pop
xchg
inc
sbb
mov
jns
pop
push
mov
inc
dec
testb
in
mov
mov
xchg
rclb
iret
mov
out
stc
rorb
ljmp
and
xor
divb
test
adc
subl
or
cwtl
add
mov
sub
adc
imul
lea
xchg
add
jb
mov
lret
jmp
dec
outsb
mov
pop
push
xor
sti
mov
mov
in
clc
aam
pop
movsl
xor
lods
in
push
push
gs
mov
idivb
and
rorl
mov
push
inc
push
mov
or
out
into
lret
cmp
cmp
jmp
cmp
ss
lds
mov
xchg
and
cmpl
leave
mov
loope
sub
xor
nop
adc
jno
outsl
lret
in
repz
daa
mov
dec
push
cmp
xorb
subl
test
lock
adc
push
push
pop
mov
cmp
daa
call
add
fs
hlt
scas
mov
into
jne
push
mov
daa
cs
out
loopne
push
mov
inc
or
ds
jg
scas
mov
fsubr
push
incl
mov
cmp
pop
pop
adc
ficoms
and
jb
insb
sub
leave
xchg
and
mov
mov
flds
fldl
and
lcall
ret
outsl
mov
push
outsb
xlat
daa
fildl
mov
xor
imul
push
ljmp
cmpsb
mov
cmp
and
mov
int3
push
cmp
mov
fadds
jae
leave
cmpsb
and
insb
es
mov
dec
stos
ret
icebp
jae
pop
insb
fcmovnu
cmp
xor
or
sbb
mov
sbb
or
sub
out
cmp
jbe
insl
dec
xlat
dec
je
mov
pop
mov
icebp
loop
xor
jle
clc
or
ljmp
int
arpl
ror
inc
aas
scas
ss
lahf
fsub
lea
cmpsl
bound
mov
dec
cmp
rorb
mov
in
xchg
fwait
ja
mov
push
pop
icebp
push
cmp
stos
imul
pop
sbb
pop
adc
push
loope
mov
pop
popf
gs
arpl
popa
fs
sub
dec
lods
cmp
mov
pop
popa
in
mov
mov
mov
repz
xor
icebp
stos
ss
loope
mov
repnz
in
testl
into
add
and
add
into
mov
in
push
stos
enter
mov
cs
jo
xchg
hlt
out
mov
andl
and
mov
or
movsb
ss
in
je
mov
rolb
add
out
stos
shlb
notb
pop
out
sbb
mov
imul
mov
cmp
subb
push
in
push
aam
outsb
or
enter
das
daa
mov
aad
cmpsb
sub
adc
les
fsubrs
jecxz
mov
insb
cs
mov
sbb
popf
ja
sti
movsl
sub
mov
lcall
orb
pusha
std
mov
push
pop
js
xchg
inc
xchg
enter
inc
push
dec
sub
out
outsb
jnp
lret
mov
mov
pop
dec
in
mov
cmp
lods
adc
imul
mov
add
insl
test
sti
leave
sarb
fcoms
push
loopne
aam
adc
fsubl
test
inc
adc
push
mov
xor
push
clc
inc
pop
ret
mov
mov
sbb
in
adc
mov
imul
inc
pop
jmp
sub
sub
pop
cmp
mov
out
cmpsl
in
lock
into
pop
scas
and
filds
sbb
out
insl
aam
int
mov
or
cmp
and
xchg
mov
xchg
xchg
cwtl
in
xor
subl
mov
adc
pop
sbb
dec
repnz
sub
add
ss
and
mov
in
xlat
cld
pop
mov
and
jo
sarb
enter
cmp
mov
pop
iret
insl
push
push
mov
xor
mov
mov
pop
subl
cmp
jl
lret
cmp
or
xchg
loopne
push
out
pop
mov
aad
loop
xchg
jo
sbb
add
leave
sbb
pop
mov
xchg
ret
icebp
out
xor
pop
pop
xchg
push
or
push
cmp
push
leave
add
add
lods
push
jnp
sbbb
bound
arpl
xchg
ds
imul
xchg
cmc
mov
imul
lock
into
mov
std
call
push
aaa
ss
sub
cwtl
int
or
loop
adc
jb
inc
mov
push
jns
ljmp
iret
jno
int
fstpl
push
sub
or
pop
out
and
fstpl
sbb
shl
mov
outsb
jbe
bound
in
jnp
ja
lcallw
push
ja
cmp
cmp
test
sbb
sub
push
inc
xchg
mov
or
mov
loop
push
push
jnp
lea
dec
sbb
cmp
lcall
pop
lock
aas
mov
and
insb
mov
push
scas
mov
inc
fwait
dec
cld
outsb
sbb
push
mov
aad
xchg
pop
mov
and
sub
and
das
dec
aam
sbb
insl
sub
out
inc
pusha
push
sub
inc
jge
outsl
add
addr16
outsl
lods
jge
jne
adc
push
cmp
and
mov
roll
mov
adc
gs
or
add
movsl
fwait
test
pop
cltd
dec
cmp
pusha
leave
inc
clc
cmc
jne
sbb
adc
cmp
addr16
or
fs
cmp
mov
sub
dec
addr16
sub
bound
fwait
adc
hlt
in
push
or
lea
sahf
mov
insl
ljmp
mov
daa
xor
sub
sbb
ret
sub
sbb
sbb
sub
mov
lods
cltd
jl
cmp
push
cltd
cli
add
stos
and
xchg
pop
push
aam
adc
das
outsb
sbb
mov
in
adc
adc
push
call
xchg
xchg
mov
cmpl
popf
push
sub
pop
enter
jne
xor
jle
inc
mov
iret
and
cmpsb
mov
fcmove
pop
imul
push
or
inc
stc
or
out
adc
test
jmp
and
lcall
cltd
ret
sbb
mov
outsl
push
mov
mov
aas
mov
push
js
mov
xor
mov
popa
lods
xchg
mov
fnstenv
outsl
xor
dec
push
inc
mov
push
lods
push
cmp
popa
jp
aaa
xor
cwtl
cwtl
je
push
and
push
sti
in
mov
jae
mov
insb
sbb
xorb
ja
popa
ljmp
mov
fistpl
inc
es
inc
divl
sbb
pop
xchg
add
aaa
lea
mov
rolb
mov
xchg
sbb
dec
or
push
popa
mov
mov
clc
sti
in
or
inc
cmp
xchg
clc
ljmp
ficoml
into
inc
jo
aad
out
lret
inc
add
enter
mov
and
or
mov
inc
xchg
dec
push
aaa
inc
nop
out
inc
aaa
repz
cwtl
push
xor
fwait
es
mov
pop
mov
icebp
rcll
int
inc
push
dec
repnz
les
add
aad
int
aas
arpl
fbld
js
inc
or
xchg
mov
sbb
punpckldq
sbb
popf
repnz
testb
xor
dec
add
rcr
sbb
push
sbbl
insl
pushf
ficoml
lods
test
test
bound
in
int3
jne
add
icebp
out
cmpsl
xchg
push
adc
mov
xor
dec
out
repz
int3
push
cli
dec
aaa
pop
adc
ds
aaa
push
out
mov
mov
pop
rcr
mov
notb
push
mov
pushf
dec
repz
cmp
fwait
out
test
mov
sbb
inc
lods
push
jg
fidivrs
dec
jns
jle
hlt
int
leave
pushf
mov
jmp
xcrypt-ctr
cmpsl
pop
fstps
jb
jmp
push
cli
cs
in
mov
daa
adc
cwtl
xchg
mov
insb
jecxz
mov
inc
jge
roll
xchg
pop
loop
lock
aaa
loope
stos
repnz
ficompl
out
push
pop
aas
inc
pop
pop
xchg
mov
xchg
inc
pop
test
jne
sub
cmp
sbb
xchg
or
cmp
mov
sub
stos
rcll
test
ss
mov
xchg
pop
sub
mov
inc
in
sub
scas
pop
test
addr16
and
mov
jae
jo
dec
ret
addl
inc
jmp
test
xor
mov
sub
ds
push
jno
pushf
mul
cmp
shrl
inc
js
inc
ja
pop
sarb
cs
cmp
push
hlt
popf
mov
int
push
push
push
sahf
push
lods
cli
scas
aas
pop
sbb
xchg
sub
into
jno
pop
or
fcmovbe
xchg
popf
adc
cmp
js
imul
pop
sub
repnz
jnp
aad
or
xchg
fimull
ja
pop
je
or
lcall
dec
stos
mov
dec
pushf
test
mov
dec
cmp
xor
enter
jb
repnz
shrb
mov
dec
pop
mov
es
dec
les
shlb
jno
sti
or
sbb
pop
subl
add
rsqrtps
imul
add
or
push
xchg
enter
aam
test
nop
mov
mov
ret
mov
mov
std
pusha
fmull
and
xlat
push
cmpsb
loope
test
push
movsl
pop
divl
in
xchg
lea
xchg
cli
in
stos
mov
movsb
xchg
aad
dec
out
xchg
sub
sbb
mov
jnp
mov
repnz
adc
and
orb
ss
out
lea
dec
scas
popa
xchg
rclb
jno
push
arpl
hlt
jle
mov
mov
out
jno
fldenv
jbe
dec
inc
dec
pop
adcb
jne
jp
jbe
mov
push
lds
push
add
outsb
mov
mov
xlat
ja
sub
es
shr
cmpsb
push
cmpsb
sahf
xor
or
push
mov
mov
sbb
in
xchg
mov
call
jo
or
sub
xchg
rcll
int
jmp
bound
test
jp
aaa
xchg
ret
mov
jge
das
scas
fistpll
pop
push
sub
leave
jp
push
cmp
inc
pop
or
or
das
push
decb
test
fstps
ss
test
sbb
jae
cmp
push
faddp
leave
jmp
mov
mov
or
or
mov
lods
jp
xchg
fcoms
xchg
daa
jae
pop
cmpsb
adcl
lds
aaa
fiadds
lock
sbb
lcall
and
popf
xchg
hlt
inc
fsubrp
adc
in
out
xchg
stc
loope
jecxz
dec
pop
fwait
adcl
and
pop
xor
mov
dec
aas
xor
cmovs
dec
jne
dec
dec
dec
std
imul
jp
xor
jns
push
aas
ja
in
jl
sub
mov
out
mov
or
stos
xor
push
push
je
loope
xor
and
jo
xor
jl
and
cmp
mov
insl
jmp
mov
xchg
iret
aam
dec
add
jne
and
add
mov
js
xchg
das
lods
movsl
inc
jecxz
popa
jne
sbb
jbe
xchg
mov
movsl
xorl
sarl
and
mov
je
mov
xor
sub
jnp
mov
push
jl
add
test
cmpsl
test
fnstsw
mov
iret
inc
push
jo
sbb
test
dec
ss
cmp
xchg
or
mov
fdivs
out
aas
cmp
mov
pop
jne
scas
dec
adc
insl
add
loope
mov
jbe
mov
mov
adc
pop
addb
and
and
mov
imul
adc
cmp
jb
pop
rcrl
cltd
cmpsb
outsb
lods
imul
das
mov
iret
jns
adc
inc
sub
stos
icebp
add
mov
cltd
test
hlt
andb
inc
pop
mov
bound
inc
mov
mov
xchg
adc
jmp
dec
sub
cmp
mov
or
jnp
sub
push
repnz
pushf
movsl
sub
mov
adc
mov
mov
loop
jle
dec
cmpsb
lock
imul
movsl
pop
stos
cltd
repnz
cmc
lret
cwtl
or
sbb
xor
dec
fistpll
pop
mov
adc
in
jmp
hlt
push
in
inc
fs
dec
insl
adc
dec
sti
dec
sub
loope
mov
mov
pop
dec
fldl
inc
mov
ret
sbb
rcll
fstl
add
pop
inc
cltd
inc
stos
and
jecxz
in
mov
adc
push
xor
mov
in
jmp
and
mov
into
dec
ret
push
push
inc
lret
pop
data16
lods
xchg
daa
mov
mov
pop
and
dec
jecxz
cmp
loopne,pt
mov
dec
scas
nop
jecxz
fcomps
mov
push
pop
adc
or
lahf
out
stc
push
movsl
xchg
inc
and
addr16
shl
fbld
xchg
shll
mov
push
inc
and
push
nop
popa
mov
sbb
jecxz
lock
xor
xor
sarl
mov
push
out
mov
cmp
aad
enter
pop
xchg
sbb
jl
daa
mov
add
add
sub
jl
add
jl
add
insl
dec
and
dec
fisttpl
cmpsl
mov
mov
in
dec
sbb
test
cld
rorl
lock
xor
sti
rol
cli
sbb
pop
xchg
xchg
push
inc
aas
and
mov
repnz
cmp
popa
mov
fstpt
xchg
in
xor
or
int
push
idivb
adcl
adc
adc
or
mov
xorb
movsl
cmp
in
pusha
add
jl
and
testl
xchg
insl
ret
inc
fsubl
inc
imul
mov
mov
fldl
stc
sub
int
fisubrl
loopne
loopne
pop
jns
mov
dec
push
stos
mov
jmp
sbb
jl
or
push
mov
mov
movsl
pop
push
jne
sti
fnstsw
xchg
sti
stos
ret
add
sbb
lcall
add
mov
aas
rcl
inc
insb
inc
lock
lock
add
stos
mov
mov
dec
pusha
stos
aam
pop
out
cmp
dec
mov
or
pop
cmp
arpl
inc
shrb
lcall
sub
mov
pop
push
and
rclb
xchg
xchg
sub
push
andl
and
jl
push
xchg
hlt
ds
pusha
adc
or
cmp
lret
adc
in
bound
cli
cmp
xor
sti
mov
inc
clc
and
pop
lahf
addl
adc
pop
xor
sahf
inc
push
add
and
out
icebp
jae
in
pushf
dec
jns
xor
sub
shl
es
lods
jno
add
adc
and
in
loope
movsl
shll
mov
dec
fwait
or
sub
inc
cmp
ss
popf
push
rolb
mov
cltd
push
divl
xchg
add
and
mov
sub
out
mov
jnp
inc
mov
sbbl
pusha
int
or
fs
lret
mov
icebp
dec
sub
fildll
xor
sub
inc
mov
loop
shll
mov
mov
push
mov
fiadds
xchg
mov
or
xchg
test
sub
mov
cmp
mov
int3
outsb
add
xlat
ret
stos
test
pop
add
fsubrs
and
dec
xor
je
incl
cmpsl
and
add
mov
lret
mov
add
loope
jg
shrb
adc
inc
cli
test
inc
cmpsb
sub
sub
or
cld
lahf
movsl
jno
cmp
jmp
pop
insb
dec
fs
add
add
sbb
and
sbb
jecxz
js
leave
ds
js
or
cld
mov
and
mov
and
pop
aad
cld
xchg
push
mov
mov
push
insl
movsb
pop
mov
push
test
mov
push
xor
movsl
inc
repnz
jmp
imul
out
mov
cmc
inc
gs
dec
push
dec
pop
test
jo
mov
jmp
sti
push
add
pop
inc
push
fwait
push
xchg
aam
pop
and
lea
aas
mov
xlat
sbb
jg
inc
push
shl
stc
ss
mov
inc
push
pop
push
jecxz
mov
rcl
xchg
sbb
ds
call
xchg
mov
adc
enter
push
mov
fcmove
jns
push
iret
push
imul
lret
or
jae
sti
imul
and
das
lret
sbb
xor
xchg
loope
lock
jae
notl
fs
je
in
insl
shr
jl
dec
add
sbb
repz
dec
or
sahf
int3
pop
movb
or
dec
dec
dec
daa
and
mov
lods
es
pop
push
mov
aam
mov
insl
negb
mov
mov
sbb
jnp
out
out
gs
cmp
cwtl
jns
je
ret
jb
adcl
call
outsb
test
and
or
and
scas
js
cmpl
ljmp
cwtl
inc
mov
divb
cmp
outsl
xor
mov
movsb
hlt
les
adc
orl
and
sarb
fs
mov
out
pop
cmpb
or
mov
mov
xor
mov
sub
bound
pop
or
pop
push
insb
xor
repz
cmp
dec
cmp
lds
mov
mov
je
push
push
xor
push
pop
push
jae
dec
cmp
movsl
sbb
sahf
or
out
or
es
pop
shr
and
dec
mov
or
dec
dec
add
push
or
cmc
mov
test
mov
ja
das
jns
loop
sahf
cli
mov
sti
jb
xchg
lret
dec
sbb
das
dec
sbb
je
shrb
insl
jle
lds
ror
bound
jle
inc
inc
ffreep
rorl
xor
xchg
lahf
call
xor
test
and
inc
add
into
bound
cwtl
orb
jo
or
and
mov
jb
xor
cmp
and
fsubs
movsb
dec
dec
orl
in
pop
or
sahf
xchg
jg
sarb
shlb
mov
enter
mov
cmp
lret
mov
xor
sub
jge
lock
into
push
filds
fstp
push
adc
adc
rorb
pop
adc
jle
iret
loope
mov
out
inc
push
adc
cmp
cmp
xchg
rcrb
in
fistpll
cmp
push
outsl
orb
jnp
xchg
dec
jo
mov
pop
in
or
insl
pop
out
mov
cmp
mov
sbb
pop
or
shll
mov
rcrb
adc
mov
and
loopne
push
mov
ljmp
pop
into
lea
lods
xchg
adc
xchg
cmp
bound
addl
fdivs
movsl
mov
cs
sub
push
dec
pop
jnp
jns
dec
mov
cmpsb
push
outsl
mov
rorb
add
add
inc
fs
lret
data16
bound
jl
pushf
lahf
sub
loope
push
cmp
je
mov
xor
cmp
mov
cmc
inc
jno
dec
sbb
mov
pusha
loopne
mov
insb
push
lods
pop
adc
ja
add
aam
fldcw
xor
roll
and
lods
push
xchg
sub
mov
xchg
insb
or
cmpl
inc
mov
mov
imul
pop
mov
jl
or
movsl
push
jbe
testb
sbb
loope
popa
and
pop
mov
jo
cltd
loop
push
or
imul
daa
pop
scas
addr16
jb
scas
mov
pop
mov
jns
stc
cmp
push
push
pop
ja
or
jl
jp
pop
sub
lahf
jbe
shlb
jb
rorb
jg
cmpsl
sub
andl
pusha
imul
inc
js
pop
sub
ficomps
inc
pop
loop
sbb
dec
push
cmp
push
xchg
lds
push
inc
ljmp
mov
repz
mov
push
push
jcxz
cmpsb
cltd
rcrb
xchg
cli
push
aam
adc
dec
xchg
pop
mov
cwtl
popa
pop
int
movsl
xchg
fstps
fwait
jo
cmp
push
and
jae
mov
lcall
xchg
dec
add
shll
push
xor
xchg
sbb
sbb
ja
dec
ja
sbb
ja
outsl
popf
or
push
dec
outsb
push
in
addl
sbb
push
mov
cmp
pop
adc
addr16
mov
out
add
mov
aas
adc
dec
mov
sub
push
ja
cmpsb
cmp
inc
mov
jb
jae
dec
sti
sbb
jb
adcl
xor
iret
inc
cmp
push
or
in
call
adc
adc
jle
xor
cmp
int
inc
dec
pop
aaa
sub
in
xchg
and
push
das
mov
fstpl
test
mov
cwtl
rorb
sbb
mov
pop
bound
xchg
push
repz
sub
lds
mov
cld
adc
mov
push
lret
jl
pop
push
iret
jne
cmp
pushf
add
lcall
lret
das
test
sti
inc
pop
sub
addl
leave
jmp
mov
inc
nop
dec
sub
mov
mov
ja
xchg
sub
pop
dec
icebp
aad
icebp
inc
push
push
push
lds
inc
scas
rclb
cli
add
movsb
pop
pop
push
adc
xor
cmpsb
sarl
repnz
fstps
adc
sub
pop
mov
push
sbb
dec
test
sbb
jmp
bound
lods
je
fs
pusha
or
jb
ret
mov
dec
clc
and
cmp
push
push
adc
pop
add
mov
imul
cld
push
xchg
mov
and
jae
into
sub
and
outsb
xchg
subb
mov
ficoml
sbb
pushf
lret
jecxz
mov
out
fstpt
mov
icebp
dec
ljmp
aaa
sbb
jle
add
push
mov
xchg
push
jo
add
dec
mov
mov
or
push
mov
popf
stos
and
pop
mov
dec
outsb
fstpl
adc
pusha
fwait
jne
mov
mov
mov
dec
push
cmp
push
out
sub
jge
cltd
jnp
mov
rcrb
stos
enter
rorb
outsl
je
cwtl
jae
push
add
jmp
lret
sub
pop
dec
ss
fsubl
pop
jb
not
and
jns
aam
mov
dec
scas
lcall
sti
adc
lret
cmp
cli
cmp
xchg
push
push
pop
out
mov
addl
ds
mov
mov
mov
out
ficoms
pop
inc
inc
push
call
inc
jmp
lods
out
test
push
hlt
lds
in
sbb
mov
aam
sub
lcall
push
jbe
fcompl
scas
loop
mov
shrl
bound
stos
push
test
sbbb
fcompl
jb
dec
sbb
mov
dec
lea
sub
add
out
pcmpeqb
into
mov
in
inc
cwtl
and
push
xor
int
fwait
js
lock
xorb
sbb
sub
xor
cld
cmpsb
lahf
dec
push
insl
inc
jae
ja
adc
ret
lods
and
test
pop
lret
sti
pop
sti
sub
mov
cs
cmp
test
out
xor
push
push
enter
dec
call
add
aad
lcall
pushf
lfs
pop
sbb
jae
aaa
jp
push
sbbb
jns
jns
mov
gs
jle
int
aam
idivb
push
std
sbb
and
dec
cld
adc
xlat
sbb
or
push
sbb
pop
sub
or
mov
stos
pop
push
mov
sahf
pop
mov
movsb
pop
push
std
or
cwtl
mov
out
test
pop
sti
mov
in
leave
sbb
loop
and
sbb
or
pop
inc
or
add
insb
pop
pop
das
dec
fldenv
dec
outsl
aad
sbb
cmp
stos
lcall
cmp
pop
int
lods
out
mov
push
int
and
call
jo
jmp
mov
adc
mov
cmp
or
xchg
dec
popf
adc
es
inc
or
cwtl
mov
mov
daa
xchg
inc
ret
divl
rorl
xorb
push
in
jnp
lods
scas
xor
pop
pop
es
mov
xchg
imul
outsl
es
je
mov
pop
xchg
addb
ret
mov
adc
cmpsb
jg
testl
dec
xor
fisubrl
cltd
push
xor
jno
lahf
pushf
xchg
mov
jmp
test
mov
stos
fdivrl
addr16
sub
ret
mov
shlb
jns
jb
xchg
dec
inc
or
or
cmp
mov
rcrl
shr
cmp
rorb
shrb
jmp
and
iret
push
repz
push
sti
or
aam
or
in
int3
mov
lret
dec
paddusb
outsl
add
ds
mov
push
test
incb
sbb
push
and
pop
cmp
push
mov
jb
bnd
mov
not
scas
insb
fistps
fnstenv
mov
add
sarb
imul
inc
into
jae
aas
cmp
jl
scas
andl
adc
es
cmp
gs
inc
add
pop
jbe
xor
rcr
enter
cmp
call
mov
mov
jmp
xor
sahf
push
mov
mov
outsl
rolb
out
icebp
cmc
in
std
insl
imul
push
inc
lahf
mov
cmp
stos
pop
mov
cltd
pop
cmp
test
out
stos
cs
js
push
mov
sub
mov
rolb
loop
dec
inc
dec
adcb
test
mulb
add
dec
jo
fs
insl
push
push
fsts
xchg
sub
push
lcall
je
aad
sar
rorb
scas
dec
push
outsl
push
pop
mov
inc
push
insb
imul
or
xchg
into
stc
les
pop
sbb
adc
imul
sub
call
outsb
arpl
cmp
stos
mov
lret
add
adc
and
push
adcb
add
into
divb
loopne
nop
sub
lods
dec
shrl
pop
dec
lods
dec
aad
mov
add
mov
adc
stc
call
add
lods
ljmp
arpl
mov
push
std
cwtl
sti
jno
inc
cmp
xor
xchg
and
mov
imul
xchg
imul
xchg
inc
ja
or
xlat
mov
imul
mov
push
les
inc
pop
dec
push
sbb
add
fadds
mov
fistl
in
loopne
pop
mul
ja
adc
fstl
push
test
dec
push
sub
enter
cmpsl
mov
ret
xor
cmp
in
jo
mov
pop
clc
dec
repz
loop
test
sub
fwait
adc
dec
cmp
sbb
xor
xor
xchg
xor
or
pop
std
push
dec
jne
stc
adc
adc
push
cmp
jmp
pop
cmp
aaa
divb
inc
lret
xor
cli
jo
mov
xor
ss
faddp
notl
fdivr
pop
mov
pop
iret
sub
das
sub
add
add
clc
push
or
pop
or
xchg
lods
sbb
push
mov
jg
or
dec
aas
push
test
aad
mov
test
or
lahf
jge
dec
iret
xchg
subb
mov
mov
mov
or
fisttps
rol
stos
adc
aad
sti
stos
sahf
insb
lcall
sbb
inc
xor
sub
xlat
dec
fsubrl
cld
jbe
push
pop
nop
ja
sbb
mov
mov
mov
dec
lea
cmpsl
inc
mov
xlat
addr16
imul
pop
or
or
dec
sbb
enter
loopne
idivb
push
sbb
mov
jp
sbb
andb
sbb
test
xlat
outsb
pop
test
push
scas
sbb
cld
xorb
jl
sahf
out
cmp
jae
mov
xchg
jl
or
shll
add
in
mov
mov
mov
inc
jg
roll
mov
xchg
add
cli
inc
loope
fwait
lret
and
les
mov
lods
mov
cmp
fiadds
jo
lahf
imul
fwait
or
jmp
stos
sti
jbe
stos
sbb
mov
aad
jg
or
scas
sub
push
dec
cli
cmp
in
xchg
iret
mov
sahf
shrl
pop
mov
lret
mov
lahf
mov
adc
outsb
and
jns
repz
sub
dec
adc
or
lods
fimull
adc
jno
cs
call
repnz
jmp
pop
lret
push
and
or
adc
cli
outsb
cmc
push
mov
ljmp
clc
es
inc
dec
and
lret
inc
mov
ds
jno
enter
fnsave
sbb
push
dec
adc
outsb
jae
pop
inc
mov
mov
in
ds
mov
mov
pop
jae
inc
jbe
inc
or
notl
cmc
out
add
js
inc
dec
hlt
bswap
adc
fistl
sbbb
int3
mov
xor
cmpsl
test
test
ret
sub
pop
push
jecxz
push
aad
shlb
lea
packssdw
mov
aas
cmp
movsl
xchg
mov
mov
hlt
fs
in
xchg
add
push
idivl
mov
pop
out
pop
fldenv
pop
aad
js
popf
dec
or
clc
jb
mov
pop
or
pushf
nop
lods
adc
in
shlb
negb
rol
outsb
enter
into
scas
lret
outsl
xlat
sbb
fistpl
std
test
xchg
mov
leave
add
mov
shl
call
ret
push
dec
out
inc
mov
clc
iret
repz
sti
inc
pop
pop
push
jecxz
jno
imul
push
ror
xor
in
leave
mov
jns
xchg
or
in
frstor
jge
or
repz
xchg
lcall
ja
sbb
jbe
lock
popa
cmpsl
cmpsl
les
dec
lods
imul
fdivs
cmovle
mov
xlat
popa
lcall
pushf
mov
rcrl
mov
inc
je
sub
jae
mov
jno
sub
xor
jns
decb
in
mov
int3
dec
xchg
imul
jge
decl
out
sub
cmp
xor
jae
xchg
movsl
cmp
mov
fnstcw
push
jge
push
inc
mov
pop
iret
shll
shll
lods
mov
test
mov
iret
sbb
sub
jne
aam
push
cmp
sbb
sub
and
xorl
cld
dec
fwait
gs
adc
adc
inc
dec
loopne
movups
call
pop
hlt
ret
mulb
mov
mov
mov
shrb
lock
inc
jge
add
push
addr16
or
rorb
dec
in
js
stc
das
aas
idivb
add
mov
arpl
mov
loopne
adc
or
push
adcb
jbe
push
dec
sub
mov
insl
pop
lcall
gs
mov
sbb
dec
scas
iret
into
loop
inc
int
add
movsl
hlt
sarl
mov
enter
lock
mov
mov
jns
loope
jb
jle
shll
xorb
add
pop
stc
cmp
aaa
rorl
popf
stc
divl
mov
xor
or
inc
pop
rcr
cld
jle
inc
or
outsb
je
xlat
decl
test
bnd
cmp
push
pop
cmp
shlb
xor
mov
jl
loope
jmp
test
lret
xor
fisttpll
xchg
ror
cmpsb
fucom
std
sub
cmp
shlb
lcall
scas
fsubrp
sub
pop
push
pop
cmp
enter
enter
lret
pop
sub
cmp
mov
mov
test
mov
add
sahf
pop
iret
jns
ljmp
ljmp
xor
dec
and
inc
push
notl
adc
loope
insb
lahf
mov
popa
jg,pt
adc
jae
mov
dec
and
sub
push
jle
out
push
sub
jecxz
mov
xor
inc
push
mov
xchg
sbb
js
stos
lock
mov
xchg
pop
mov
inc
cld
lret
and
rcrl
push
sbbl
mov
cmp
jl
aam
jbe
and
jo
test
jp
rcr
jecxz
dec
mov
movsb
inc
div
jg
mov
push
mov
mov
cmpsl
sahf
mov
icebp
jge
pop
pop
sub
xlat
jae
int3
mov
push
int3
adc
mov
sub
jo
into
bswap
mov
jbe
outsl
lcall
repnz
push
sub
sbb
fcomps
scas
loop
enter
mov
lock
and
insl
mov
fcomi
sarb
rclb
idivl
inc
cmpsl
lods
fmul
imul
cmp
mov
ljmp
jmp
pop
cmp
push
mov
pop
daa
xor
jg
cmp
fiadds
call
aaa
movsb
lahf
fcoms
pop
add
or
cmpsb
pop
pop
fldcw
je
andl
in
adc
jbe
cmpl
rcll
push
xor
fisubs
test
in
int
mov
pop
jmp
xchg
dec
mov
pop
notb
outsb
mov
aas
mov
add
mov
inc
inc
es
aad
insb
xlat
hlt
or
mov
aas
ficompl
cmp
mov
xor
outsb
adc
movsb
pop
das
dec
xchg
rolb
int
loopne
flds
inc
and
cs
push
sbb
push
jg
int3
ds
and
pop
movsl
ljmp
in
inc
scas
add
fprem
and
out
adc
aaa
cld
jmp
xor
jp
jb
mov
inc
xchg
mov
cs
push
push
shrb
push
call
outsl
popf
aad
cmp
fstl
aaa
popf
repnz
movsl
and
jne
movsb
jmp
pop
push
jp
and
push
fisubl
cmp
mov
shlb
ljmp
lret
xchg
push
mov
xchg
lods
nop
hlt
shrl
or
into
lahf
mov
cltd
cli
movb
jno
ds
sbbb
hlt
mov
pop
inc
fsts
adc
dec
cs
fdivrs
and
movsb
fcomi
lock
int3
dec
mov
cmpsl
out
leave
pop
mov
stos
ret
mov
cmp
in
in
push
jp
fisttpl
jo
fsubrs
lods
xchg
iret
mov
mov
xor
cli
mov
int3
js
pop
push
cmp
push
mov
nop
jp
inc
cmpsl
lods
add
push
jecxz
aaa
mov
jns
loopne
push
xor
mov
stc
xchg
out
movb
push
lret
lret
hlt
inc
mov
daa
outsb
outsb
mov
scas
fmuls
or
mov
mov
out
or
adc
je
ss
mov
lea
clc
imul
shll
mov
xchg
stc
out
dec
lahf
dec
mov
and
mov
and
xchg
ja
hlt
jnp
and
adc
int3
fsubrl
out
xor
sbb
aas
lahf
into
and
cld
cmp
sbb
lds
and
lods
movsl
mov
cmp
push
ljmp
in
cmp
cmp
mov
jge
icebp
cmc
movsb
push
xchg
xor
stos
inc
or
inc
aad
insl
out
js
loopne
xchg
fiadds
cmp
pushf
mov
mov
jmp
dec
sub
mov
adcb
and
popa
mov
fimull
call
sbb
pop
jns
les
stc
int3
repz
arpl
jns
clc
je
lcall
insl
add
or
lods
iret
int
aaa
sbbb
pop
mul
loop
dec
fs
dec
mov
dec
lret
or
xchg
icebp
xchg
xor
dec
mov
xchg
popf
xchg
movsl
cmp
dec
gs
or
mov
sub
xchg
adc
mov
xor
and
mov
imul
ja
into
dec
mov
addb
sub
mov
adcl
inc
cmp
fidivrl
xor
in
ds
mov
jg
fistpll
adc
sub
jmp
jne
cltd
leave
out
push
fsubrs
cmp
jecxz
fistpll
jmp
jbe
stc
inc
xor
data16
jns
mov
lcall
pop
fsubrp
jnp
sahf
xchg
cld
or
and
and
popa
fisubl
cwtl
mov
adc
inc
lock
add
std
push
arpl
into
es
test
jae
icebp
bound
fimuls
mov
dec
mov
enter
test
sbb
and
push
stc
add
jo
adc
subl
cmp
aaa
push
push
xorb
jne
push
das
xor
jns
sbb
imull
mov
mov
popa
ds
sbb
add
cmpl
test
mov
fimull
sbb
fs
mov
mov
mov
mov
into
addw
ds
dec
xor
leave
inc
mov
lret
in
ds
jns
inc
sub
jge
pop
loop
jo
ds
lock
sbb
ror
cmc
rolb
sti
in
std
pop
or
inc
pop
out
push
test
rcrl
std
ror
jmp
pop
jnp
hlt
rorb
scas
in
cmp
filds
sbb
sub
inc
push
sti
mov
outsl
cmpsb
mov
icebp
loope
jmp
lret
lret
sbb
out
lea
mov
shll
xor
std
leave
aas
dec
test
jne
xor
mov
jo
mov
xchg
loope
dec
in
jle
notl
nop
xchg
out
cmp
arpl
jp
and
mov
xor
inc
push
out
cmc
mov
jns
mov
cmp
push
sbb
or
ret
leave
xchg
push
sbb
sub
push
addr16
hlt
jbe
call
pop
pop
fistps
jo
idivb
lods
dec
pop
scas
xchg
pop
push
xor
mov
inc
sbb
jb
leave
insl
in
shlb
adc
cmp
std
dec
push
and
add
jmp
inc
popa
repnz
into
sbb
sub
push
dec
fldenv
mov
mov
pusha
or
scas
mov
xchg
xchg
daa
jns
add
xor
xor
out
cmpsb
xchg
jl
push
sub
aas
ret
es
aaa
sub
cmpsl
add
mov
mov
jmp
add
sti
inc
cld
int3
stos
repz
mov
xlat
jno
sbb
sahf
cmp
lds
jae
pop
aas
dec
je
rcll
pop
adc
mov
cmc
shlb
nop
fcoml
pusha
push
movsb
mov
inc
mov
mov
inc
imulb
or
rcrl
jae,pn
mov
mov
jl
push
ret
mov
pop
arpl
or
cmpsl
test
lods
xor
add
xor
hlt
enter
adc
pop
fmuls
ja
dec
cmc
clc
sub
bound
adc
movl
push
xchg
jnp
inc
jae
jge
xor
xchg
push
xor
dec
push
lods
icebp
mov
and
xchg
mov
daa
xor
cmp
push
pop
adc
inc
inc
push
fmul
adc
popa
test
jns
rcrb
dec
movsl
cmp
bound
movsl
leave
ss
xchg
and
pandn
or
xchg
cwtl
aad
cmp
inc
hlt
idivl
les
jmp
pop
mov
push
fstps
xchg
add
jle
in
pop
xlat
pop
fisubs
jns
xor
gs
mov
lea
scas
pop
gs
or
cmp
mov
fdiv
cmc
sbb
enter
inc
mov
add
sbb
leave
ror
shrl
xchg
sti
jb
cli
js
jbe
mov
or
adc
push
push
adc
in
xchg
xchg
mov
repz
push
fildll
adc
int
out
sub
sub
dec
arpl
fmull
cs
xchg
or
mov
dec
imul
notb
mov
push
loop
push
clc
fildll
pushf
inc
sarw
pop
push
call
shl
xorb
cmp
stos
es
pop
insl
test
push
xor
lcall
mov
testl
mov
mov
insl
lahf
xchg
popf
mov
in
cmp
popa
push
mov
jb
mov
sub
mov
and
popa
add
scas
or
hlt
jb
adc
loop
js
lret
and
jmp
and
jo,pt
add
dec
adc
xor
std
rcl
pop
dec
cs
in
cmpsb
dec
jnp
add
pop
loop
push
cmp
sbb
arpl
push
into
in
xchg
out
aad
dec
jb
cmc
xor
fstpl
push
pop
xor
jg
add
mov
push
daa
and
pop
pop
das
jmp
cmp
call
mov
or
fsubrp
xchg
idivb
iret
popa
jmp
popa
jecxz
stos
mov
int3
add
add
dec
sub
mov
adcb
jle
dec
dec
xchg
add
out
mov
adc
dec
int
das
dec
filds
clc
aad
test
test
call
decl
fidivs
inc
out
mov
jl
push
push
mov
orb
xchg
mov
div
sbb
test
jae
test
xlat
lds
mov
cmp
shlb
sub
jb
aad
sbb
out
arpl
cld
cwtl
iret
sti
int3
or
mov
ficomps
adc
push
andb
incb
push
dec
add
ja
addl
insl
inc
mov
adcl
mov
adc
inc
mov
mov
mov
pop
cmp
adc
repz
loope
lods
call
jbe
arpl
sti
pop
and
out
mov
push
xor
lods
stc
sbb
sub
sti
inc
inc
adc
mov
imul
scas
loopne
in
aad
fmull
adc
adc
scas
mov
mov
jecxz
add
or
arpl
sub
pop
rol
repnz
addl
icebp
pop
adc
sbb
xchg
mov
sbb
in
pushl
test
sbbb
sahf
xor
andb
cwtl
insl
enter
mov
mov
or
sub
les
pop
adc
cmp
popl
nop
lahf
fisttpl
pop
push
fisttpll
mov
adc
jb
adc
lods
in
mov
mov
xchg
imul
dec
pop
push
roll
inc
add
stos
xchg
fimull
adc
push
pop
aad
adc
cltd
add
stos
out
xor
pop
inc
shrl
sbb
popa
mov
xchg
mov
arpl
lea
mov
cmp
loopne
loopne
jecxz
orb
push
int
jbe
sti
popa
mov
sbb
and
lret
popw
imul
icebp
cmp
loopne
lret
push
mov
loope
ficompl
mov
xchg
sub
sub
sbb
jae
xorb
loop
das
scas
mov
sahf
sub
inc
mov
jecxz
scas
cltd
shrl
daa
pop
dec
sub
lods
jae
cs
add
push
push
sar
pushf
mov
arpl
jle
xchg
mov
push
cmp
inc
movsb
jb
pop
cmp
fidivrs
pop
push
or
sbb
or
in
call
sub
testl
push
pop
stc
dec
shll
cld
enter
enter
pop
mov
pusha
jne
dec
xchg
jge
jb
pop
xchg
pop
sub
std
dec
cmp
loop
sub
and
xor
mov
pop
inc
xchg
mov
jle
mov
jbe
adc
push
sbb
jge
or
stos
subl
addr16
in
cmp
xchg
js
inc
mov
mov
imul
dec
js
dec
adc
fcoml
nop
jg
pop
jns
push
mov
lcall
leave
addr16
cwtl
icebp
adcl
jmp
mov
scas
stos
mov
lcall
idivl
and
pushf
pop
dec
pop
je
shlb
push
mov
or
xlat
mov
rorl
xchg
dec
add
pusha
lret
je
out
inc
and
jg
pop
mov
fistpll
adc
cmp
inc
xor
stc
pop
add
insl
cli
or
mov
fs
jb
jo
stc
scas
clc
push
cli
loop
pop
adc
push
xchg
icebp
push
fistpl
and
jns
lods
pop
out
mov
push
pop
dec
pusha
xchg
das
pop
test
les
inc
shl
shlb
jecxz
fucomp
sub
mov
aaa
mov
pop
iret
mov
cmp
pop
and
das
push
sbb
xchg
in
jo
ss
icebp
sti
mov
xor
mov
xor
adc
jb
test
lahf
aas
mov
std
push
and
shr
fdivp
xchg
popa
icebp
cmp
fistl
ret
jo
jp
jo
loope
addr16
add
leave
sbb
mov
xlat
out
mov
push
outsl
xorb
shr
dec
sbb
mov
mov
adc
stos
lcall
pop
loope
cmp
jb
pop
stos
ds
enter
insb
mov
stos
or
jge
icebp
cmp
xabort
lahf
cmp
cmc
sarl
mov
jno
dec
adc
add
lcall
or
cld
push
scas
lods
pusha
push
sub
and
aad
sub
and
mov
aad
mov
nop
int
dec
mov
and
push
jecxz,pt
out
pop
outsb
jbe
and
lods
mov
stos
mov
shr
rcrl
or
addl
sahf
adc
jno
orb
mov
icebp
out
cmp
cmpsb
cli
aaa
test
fs
push
in
mov
hlt
mov
repz
int
lods
cli
fdivl
pushf
loope
push
hlt
aam
shrb
mov
mov
in
clc
icebp
aaa
insb
adc
cs
mov
in
js
dec
jl
xchg
mov
xchg
mov
pop
pop
iret
pop
mov
popf
jb
dec
mov
xchg
js
and
imull
fdivr
movsb
test
add
sbb
cmpsb
cwtl
loope
aad
or
xchg
push
mov
repnz
push
insb
add
cmp
cld
jle
push
fs
jp
lods
cmpsb
inc
leave
mov
add
adc
inc
lahf
adc
out
push
xchg
cltd
inc
add
xor
test
jb
call
aad
bound
outsl
mov
ja
sbb
mul
mov
fsubrs
loop
adc
xchg
cmp
hlt
add
xchg
adc
popl
push
loop
lcall
mov
fs
adc
dec
mov
sub
jecxz
xor
pop
pop
enter
push
ss
xchg
or
popa
ret
inc
cmpl
mov
pop
fidivrl
test
cmp
dec
mov
js
aad
clc
daa
or
outsl
jbe
or
aas
bound
mov
inc
cld
xchg
mov
scas
int3
jp
cmp
gs
das
xchg
ja
popf
jecxz
out
fldz
int3
sbb
mov
xor
aaa
pop
pusha
fimull
push
xchg
cmc
sbb
lret
cli
fbld
jbe
int3
or
das
fimull
xor
inc
repz
sub
js
pop
jle
test
mov
mov
repnz
sub
jl
addr16
lods
push
rcrb
xor
cmp
aad
fwait
jecxz
jb,pn
leave
pop
cmp
mov
cmp
fnstsw
stos
cmp
jnp,pn
pushf
das
hlt
mov
dec
lods
ret
sti
sti
arpl
iret
cmp
and
or
inc
stos
ljmp
or
pop
xacquire
mov
in
vpsubsw
in
iret
imul
lret
fs
outsb
fcompl
cmp
std
lock
jo
dec
mov
icebp
lahf
jg
jmp
inc
xchg
movsb
dec
sbb
jne
orb
sbb
mov
test
scas
mov
jg
mov
lret
or
sub
bound
mov
shrl
mov
arpl
push
xchg
movsb
pop
add
mov
ficoml
dec
xor
leave
xchg
xchg
ret
and
dec
mov
mov
jb
mov
cmpsl
iret
sbb
jnp
sbb
mov
inc
mov
jl
mov
nop
data16
and
pop
das
mov
rcll
sahf
pop
popa
add
push
cltd
mov
mov
xorb
shrl
mov
enter
out
push
dec
test
push
mov
bound
xchg
jne
push
jo
xchg
fcompl
mov
daa
adc
and
mov
and
andl
xchg
insb
ror
pop
push
or
insb
and
inc
ss
jb
pop
sub
dec
xchg
adc
xchg
dec
test
mov
xor
gs
push
xchg
pop
pop
cld
push
inc
xchg
test
mov
notl
lods
xchg
sahf
jae
mov
test
push
enter
sub
out
leave
inc
mov
mov
movd
cmovl
mov
bound
pop
sbb
push
jbe
pop
mov
sbb
ficomps
cmpsb
sahf
lret
add
fstps
adc
popa
stos
xor
dec
cmc
dec
in
clc
adc
int3
push
sti
push
xchg
mov
addr16
in
imul
pop
ss
bound
aaa
and
inc
cmp
outsb
dec
cwtl
scas
dec
inc
pushf
das
and
repnz
ret
movsb
ss
popf
sub
repz
leave
and
lods
lret
popf
mov
addr16
clc
mov
pop
test
cltd
iret
or
in
sbb
and
loope
push
mov
and
sub
pop
mov
mov
jo
jg
out
mov
fs
icebp
stc
in
pushf
mov
mov
pushf
pop
rorl
pop
sub
test
adc
pop
js
jg
outsb
fwait
lcall
mov
jb
xor
addb
xor
loope
mov
mov
and
std
mov
mov
daa
addb
call
pop
add
movsb
adc
stc
call
ss
aas
xchg
cmp
cld
xor
inc
std
sbb
xor
push
das
out
push
jo
cmp
inc
xor
sbb
dec
bound
dec
cwtl
inc
outsb
mov
sahf
lods
adc
inc
mov
push
push
lret
movsl
inc
outsb
sbb
or
rcll
lea
andl
cmp
push
pushf
das
push
out
in
mov
negb
outsl
test
xchg
lds
loopne
jno
ret
sub
mov
inc
test
ss
iret
pop
and
xchg
dec
ja
jnp
cld
xor
adc
pusha
fwait
sbb
cmpsl
test
inc
outsb
push
xchg
inc
mov
add
mov
pop
jnp
fistl
xchg
mov
jge
mov
push
cld
push
insl
orb
sti
push
lahf
lds
in
mov
sbb
outsb
mov
in
fidivrs
pop
sbb
sbb
mov
fisubl
sti
pop
in
xchg
mov
fcmove
jmp
inc
jae
mov
int3
pushf
and
xchg
outsb
and
inc
rcpps
cmpsl
lret
in
sbb
xchg
pop
mov
fnstcw
into
mov
xchg
add
into
in
mov
pop
aaa
cs
jne
jmp
stos
jbe
xor
cmp
enter
or
int3
fmull
and
daa
enter
je
cli
or
fimuls
push
xchg
inc
dec
sbb
rcr
pushf
dec
mov
and
insl
sbb
mov
in
dec
mov
cmp
dec
movsl
cltd
into
bound
imul
movsl
out
sbb
sti
push
xor
sbb
je
inc
test
mov
mov
jmp
in
mov
jns
insl
pop
lods
mov
daa
call
mov
int
dec
sub
fcmovne
popf
adcl
pop
add
int
xchg
xorb
shlb
xor
inc
lret
cltd
sub
clc
aaa
inc
jb
mov
into
fidivrl
cmc
mov
xchg
scas
jne
insl
cmpsb
dec
cmp
jecxz
adc
test
stos
out
xchg
sbb
sbbl
mov
inc
sbbl
lds
pop
icebp
scas
test
and
sbb
out
push
bound
add
adc
mov
aad
shrb
hlt
push
rcr
addb
inc
shrl
mov
adc
xchg
loope
inc
jmp
stos
xchg
jg
xchg
loopne
jbe
out
test
ja
dec
cwtl
fisubrl
sbb
scas
loope
xchg
sbb
dec
ret
addb
xchg
sbb
xchg
xor
push
in
fs
fs
ljmp
xor
dec
aad
imul
fs
js
pop
jg
lods
inc
test
sub
cmp
je
psubusw
xchg
cmp
lods
shll
insl
pop
inc
mov
shrb
dec
mov
cmp
andl
or
jno
cmp
lahf
lret
push
ss
sahf
dec
rcrl
adc
gs
stc
mov
jo
adc
outsl
out
dec
das
sbb
add
xchg
lcall
fmulp
or
stos
popa
jp
ss
dec
sbb
pop
dec
fcoml
out
cld
hlt
cmp
js
mov
push
jbe
fadd
shr
ja
int3
clc
cwtl
jp
data16
jmp
push
mov
lea
adcl
xchg
mov
cmp
outsl
xchg
xchg
adc
cwtl
mov
push
mov
test
dec
mov
stos
jns
push
sub
mov
pushf
mov
gs
shl
dec
loope
or
lret
push
mov
inc
pop
mov
dec
imul
mov
jmp
jmp
lods
xchg
not
xor
and
sti
test
divb
dec
jle
ds
pop
jbe
bound
jo
icebp
cli
and
cmp
shll
lret
sub
add
mov
mov
stos
dec
sub
mov
aad
pop
rorl
insl
sub
or
arpl
adc
lcall
and
loope
lahf
cmpsb
sbb
ljmp
shlb
adc
into
mov
leave
int3
adc
shlb
cmc
ja
mov
adc
out
add
cmp
lret
rol
inc
ja
sub
sbb
mov
sub
and
add
shlb
or
mov
std
adc
xchg
ret
dec
sub
mov
ljmp
jl
push
and
dec
jns
mov
mov
outsb
mov
adc
mov
push
aas
fsubl
mov
inc
data16
mov
mov
xchg
loop
shrl
int
jno
je
mov
mov
mov
pop
jae
mov
jbe
popa
mov
mov
mov
test
int3
shl
mov
scas
inc
mov
cmc
insl
and
imul
cs
outsb
rorl
popa
cwtl
scas
mov
or
clc
ljmp
jmp
lret
sub
data16
jp
fistl
js
stc
pop
ret
test
jae
jg
and
sti
iret
and
cmp
pop
jl
out
dec
lds
in
popa
inc
pop
lahf
in
inc
dec
out
iret
std
stos
jmp
ljmp
pop
add
cmp
stc
lods
incl
sbbl
sub
dec
jl
inc
jns
push
xor
push
or
sbb
pusha
fnstcw
jmp
mov
sub
faddl
lds
pop
int3
call
dec
sbb
dec
ret
sbb
rcrl
inc
adcl
push
arpl
adc
ljmp
movl
ljmp
cmp
add
mov
inc
mov
mov
jo
add
lock
pop
les
sub
inc
sub
cmp
pop
sub
push
sub
leave
sub
cmp
out
imul
xchg
movsb
dec
repz
stc
cmp
mov
and
and
fnstenv
rcrb
sbb
daa
sub
pop
in
sarb
inc
mov
jnp
jae
mov
and
mov
lds
aad
addr16
fs
or
pop
mov
inc
sub
jbe
inc
fstp
mov
ret
std
mov
fdivr
loop
outsb
ds
aam
cmpsl
mov
mov
push
les
xlat
lock
aam
mov
mov
jp
adc
js
out
stos
sbb
or
pop
out
mov
mov
push
gs
xlat
in
sahf
mov
push
pop
daa
mov
mov
jl
sub
pusha
aad
inc
xor
popf
lods
mov
std
and
push
repz
mov
adc
dec
inc
rorb
popf
leave
lods
and
insl
ss
sub
xchg
or
and
scas
cmp
cmp
imull
jbe
cli
or
sbb
adc
cli
rorl
and
stos
xchg
push
jmp
fmull
fwait
cli
icebp
arpl
mov
sbb
add
jp
inc
pop
gs
pushf
add
inc
or
rcrl
aam
daa
mov
mov
decb
jno
bound
add
cmpsb
out
pop
or
pusha
faddl
cwtl
in
imul
sub
out
sbb
cld
xchg
inc
cmp
sub
iret
jo
fsubrs
mov
xor
pop
add
or
je
mov
call
pop
not
mov
mov
mov
or
adc
adc
push
stc
xor
sbb
aam
repnz
and
push
cvtdq2ps
lea
clc
cmpsl
push
jmp
jecxz
pop
repz
xchg
xor
sbb
loope
sbb
fstl
add
add
shlb
out
add
adc
popa
mov
add
inc
rcrb
and
sub
or
or
shlb
jae
out
fwait
mov
clc
and
xchg
je
dec
mov
sbb
xchg
mov
jno
pop
or
mov
xor
je
cmpsb
ljmp
rcr
loopne
cmp
mov
mov
lods
mov
dec
hlt
or
jne
jne
pop
arpl
sub
out
js
out
orl
aad
ljmp
xor
xor
ja
test
aaa
aam
and
jp
mov
jmp
mov
dec
aam
sbb
out
nop
lea
or
inc
shl
add
and
aas
ss
mov
cs
jg
jne
mov
push
out
cltd
dec
jnp
enter
iret
or
inc
xchg
enter
adc
jo
orl
xchg
xor
loopne
rcrl
lret
pop
push
aad
lahf
jmp
nop
jecxz
inc
push
int3
negl
dec
data16
cli
pop
insb
dec
xchg
add
mov
sub
aam
adc
xchg
xor
lret
jge
in
mov
inc
andb
mov
jnp
das
push
mov
xchg
pop
mov
std
push
or
adc
xchg
pop
dec
jae
scas
jns
outsl
pop
rcrl
and
and
xor
dec
add
mov
lcall
jns
or
testl
lock
pop
xchg
dec
pop
jl
inc
push
fdivrs
cmp
imul
popf
lds
pop
xor
inc
mov
dec
and
cmp
add
sub
fnstcw
ja
sbb
jg
gs
arpl
shll
lds
jnp
cmpsl
clc
loope
pushl
push
jg
jmp
leave
mov
cmc
fwait
push
stos
cmc
ret
les
jmp
sar
push
adcl
jae
iret
and
pop
mov
ljmp
inc
pop
mov
cmp
sti
mov
jle
test
mov
cmpl
jb
jp
por
and
cmc
les
push
inc
mov
and
mov
xor
inc
push
adc
pop
out
out
jmp
out
adc
or
pop
lods
js
adc
sbb
inc
nop
jp
into
sub
mov
aad
aad
push
out
iret
mov
out
mov
addr16
jge
stc
mov
call
dec
out
icebp
sbb
lea
xor
in
jbe
jae
lods
push
mov
inc
ja
lret
sub
imul
cmp
fidivrl
xchg
xor
rcrb
dec
pushf
lods
cmp
mov
pop
or
add
cmp
in
insl
mov
lahf
add
push
clc
fcoml
push
sub
out
cmpsb
ds
popa
outsb
out
pop
pusha
pushf
divl
or
and
pop
sarb
mov
fldcw
ficoms
pop
inc
xor
cmp
dec
mov
fcom
popf
in
dec
add
call
add
or
arpl
sbb
xor
aam
adc
and
lahf
dec
loope
or
mov
int
mov
popf
arpl
pop
mov
push
dec
xor
mov
add
sbb
xchg
sbb
mov
mov
sub
iret
fs
xchg
fwait
adc
out
cmp
sbb
cmp
out
cmp
lock
inc
adc
push
dec
sub
pop
pop
sbb
and
mov
mov
mov
pop
jmp
push
xor
jbe
addr16
jmp
into
aaa
jne
pop
shrl
lea
imul
imul
add
hlt
outsl
jno
out
mov
or
mov
cs
icebp
dec
adc
sub
push
cmp
cmp
xor
sub
adc
jno
mov
sti
push
mov
or
push
sub
imul
or
or
and
xchg
es
dec
mov
adc
push
test
mov
sbb
pop
or
pop
rorl
rcl
xor
jl
enter
xchg
push
jecxz
lock
mov
cmpsl
inc
into
jne
push
jp
jp
mov
jp
mov
sbb
adc
stc
subb
je
mov
mov
jb
dec
ror
arpl
cmp
mov
sbb
lcall
sahf
sub
in
mov
pop
add
sub
outsl
outsl
out
inc
mov
or
xchg
rcrl
pop
mov
pop
das
sbb
push
push
cwtl
cmpsl
jns
xchg
addr16
aad
fsubl
out
stc
adc
pop
sbb
inc
sbb
inc
cld
mov
xchg
mov
pop
fcmove
addb
in
aam
mov
jle
loope
and
ret
lds
add
scas
cmp
loop
xchg
stc
or
xor
pusha
mov
div
xchg
hlt
adc
sarl
and
loope
push
jne
movsb
jo
mov
je
lret
pop
sbb
xchg
pop
or
xchg
inc
inc
cmp
stos
stos
push
imul
bound
sub
xlat
sub
xor
inc
loope
pop
cmp
xor
mov
shlb
lahf
mov
loop
sbb
pop
testb
stc
xor
jmp
icebp
pop
cwtl
popf
xor
ret
mov
int3
shrb
test
imul
mov
cltd
or
gs
mov
in
xchg
cld
ficoml
insb
cmpsb
sub
jge
push
fstps
jmp
lahf
fbld
movsl
or
in
dec
repz
stos
scas
or
out
fisubrs
daa
stos
pop
repz
sbb
cmp
dec
mov
jp
andb
sub
push
loop
xor
push
outsl
mov
or
dec
mov
jg
xchg
mov
ror
fidivrs
mov
lods
insl
test
mov
xor
call
call
add
or
jae
loopne
push
shll
mov
fisttpl
scas
lcall
loope
lret
frstor
les
push
dec
or
into
popa
mov
mov
outsl
pop
add
cmpsl
inc
sub
ss
fidivl
pop
int
sbb
fcom
stos
xchg
cltd
ja
dec
add
rcl
and
lret
push
inc
cmpsb
enter
adc
pop
jno
fisubs
adc
hlt
cmp
xchg
dec
adc
ret
dec
fwait
adc
sub
add
mov
jo
fsubrs
xor
xchg
push
mov
stos
adc
rclb
rclb
test
in
test
pusha
div
ljmp
js
rcl
cli
dec
rorl
or
mov
rcr
test
push
dec
fstpl
jnp
out
out
push
cld
pop
mov
hlt
je
enter
cwtl
sbb
mov
aad
jmp
mov
dec
xlat
xor
or
sbb
cvtps2pd
decb
and
push
add
fadds
fstps
movsb
stos
addl
inc
and
jnp
mov
mov
xchg
clc
xchg
daa
punpckhdq
popf
jl
adc
out
lock
repnz
pop
xor
dec
call
test
xlat
clc
ss
imull
jae
sub
cmpsb
sub
sbb
pop
push
addb
push
popf
dec
mov
mov
dec
add
mov
jne
adc
and
sti
dec
inc
jecxz
sbb
addb
sbb
repnz
xlat
jecxz
xor
fdivrs
daa
or
sbb
nop
enter
pop
jmp
mov
js
fcompl
inc
out
jecxz
push
or
pop
cmpsl
pop
jne
mov
clc
fisttpll
add
adc
dec
rclb
fisttpll
aas
loope
mov
xchg
add
ss
arpl
loop
push
and
sub
loopne
push
add
pop
inc
mov
xchg
push
xor
je
into
jbe
pop
rcrl
mov
mov
loop
sub
cmp
lret
paddusw
bound
mov
xor
andl
ror
clc
pop
inc
adc
outsb
icebp
push
test
push
cwtl
popl
nop
or
lods
loopne
fidivs
push
clc
push
sub
adc
enter
sub
push
fmull
sbb
mov
pop
aas
les
pushf
inc
bound
xor
arpl
push
dec
cmc
jbe
movsb
pop
add
bound
ret
popa
test
mov
jbe
cmp
movsb
js
push
setl
ss
in
xor
pop
or
push
aaa
xchg
std
fwait
mov
leave
add
call
in
cmpsb
cmp
sub
movsb
or
cli
movsl
nop
shll
cmp
mov
imul
and
es
fs
loop
imul
pop
mov
adc
mov
and
cmp
inc
sbb
in
scas
push
mov
pop
cmp
push
repz
pop
mov
adc
cmp
mov
cmp
sub
ficompl
mov
lret
sub
jno
sub
mov
repnz
mov
jno
test
out
push
dec
mov
ret
rcll
mov
fistps
cmp
cmp
mov
push
pop
scas
pop
xchg
insl
mov
test
loop
and
xchg
mov
mov
adc
and
sbb
ror
or
mov
pop
push
lods
fld
daa
gs
xchg
add
adc
clc
cld
cs
pusha
mov
mov
and
or
dec
pop
dec
pop
imulb
add
lock
sub
mov
add
shll
xchg
pushf
out
xchg
or
add
xchg
and
stc
popa
sub
mov
or
insb
imul
cmp
sahf
repz
int3
aam
icebp
jb
movsb
in
jbe
jp
cmp
nop
daa
add
into
xchg
sbb
rcrb
sbb
mov
fdiv
and
enter
fldl
lret
outsb
das
or
bound
aaa
rcll
cli
pop
addb
ret
and
cmp
and
inc
out
xlat
inc
stos
pop
fdivr
popf
jge
xor
leave
xor
fcmovne
gs
xchg
dec
out
daa
hlt
fiadds
inc
xorb
mov
mov
jg
and
push
sub
ds
mov
rorl
sub
xchg
dec
mov
fsubs
mov
push
dec
enter
ror
push
or
sarb
insb
cmp
xor
push
xchg
cmp
lock
jbe
jle
aam
dec
mov
or
inc
pushf
sub
iret
mov
mov
adc
and
push
mov
cmp
lret
jl
or
ja
testb
pop
nop
pop
fcmovnu
dec
pop
int
jno
or
inc
fwait
popf
cmp
pop
test
pop
test
lock
das
mov
xor
mov
push
sub
ror
xlat
fisttpll
rolb
pop
mov
lahf
dec
xor
dec
ret
loopne,pt
scas
arpl
imul
pop
daa
ret
sub
mov
imul
inc
fsubl
pop
popa
pop
sbb
dec
adc
sbb
sbb
add
aad
les
sub
popa
push
ret
outsl
push
jae
mov
fidivrl
sbb
subl
sub
mov
mov
cmp
push
push
test
inc
adc
cmp
shlb
imul
adc
jge
or
lcall
iret
xor
andl
enter
jb
enter
inc
inc
ljmp
ljmp
aad
imul
and
jp
inc
mov
cmp
adc
xor
xor
cs
out
cmpsb
loopne
repz
xor
out
cltd
pop
cld
xor
in
xor
ljmp
xor
in
xchg
fimuls
stos
inc
jecxz
inc
cmp
cmpsl
notb
xor
mov
ss
jge
sub
mov
add
dec
and
pop
jno
pop
scas
in
js
sub
cld
inc
addr16
mov
dec
or
xor
test
pop
test
pop
loop
xchg
icebp
subb
inc
fcmovu
jbe
stos
or
mov
stos
dec
jb
mov
daa
loop
inc
out
add
in
xlat
mov
notb
cmp
cmp
dec
mov
xchg
cwtl
and
rcrl
add
int
rcll
mov
sub
imul
inc
int
add
mov
xor
pop
sub
mov
or
fnsave
dec
mov
jmp
loopne
js
xor
cmp
adc
sub
cmp
push
test
xchg
jae
mov
leave
pop
push
sub
fsubrs
fldcw
mov
aam
rorb
lock
lods
sub
mov
or
js
roll
fld
and
leave
sti
outsb
mov
fidivrl
test
jb
jae
dec
push
push
imull
rcrb
jp
and
fstps
sbb
fs
popf
movsb
or
sub
adc
icebp
xor
mov
xchg
fldl
push
mov
mov
jo
fisttps
lea
sahf
fidivrl
add
fdiv
inc
icebp
mov
adc
mov
sbb
cmp
ret
cli
push
daa
mov
or
mov
and
shl
add
sub
ja
fildl
or
cmpsl
and
cmp
mov
jl
xchg
pop
jmp
cs
push
fcmovb
add
rolb
xchg
imul
or
lock
jecxz
cmc
dec
mov
sub
into
xor
push
pusha
inc
push
pop
inc
cmpsl
pop
dec
and
loop
fsubrl
mov
stos
std
cmp
mov
mov
and
push
or
in
pop
xchg
push
push
bound
iret
xchg
mov
and
in
lahf
mov
sub
dec
lods
mov
ret
dec
sarb
pop
call
and
mov
mov
adc
xchg
push
movsb
add
adc
jle
cmpsl
mov
fildl
xor
subb
xlat
or
and
sub
xlat
xchg
shll
hlt
test
xchg
xor
lret
cld
mov
scas
cmp
mov
mov
mov
sub
dec
jge
aaa
insb
imul
out
mov
mov
dec
xchg
lahf
mov
outsl
imul
pop
insl
cs
pushl
aas
mov
xchg
push
pop
lds
cmp
std
out
nop
push
stos
push
loope
push
aad
push
int3
cmp
enter
or
scas
fildll
inc
test
call
xlat
jle
cld
stos
or
sbb
mov
xchg
add
sub
mov
stos
sbb
in
mov
in
xchg
rclb
jno
mov
mov
aas
daa
jns
mov
loop
aas
pop
dec
jl
fmull
roll
cmp
sbb
sti
stos
dec
jb
pop
outsb
inc
xor
cltd
in
fsubr
test
push
js
mov
pop
mov
call
sub
pop
xor
addr16
imul
jecxz
out
fists
jno
rcrl
data16
and
and
sbb
das
jge
rol
rclb
add
xchg
pop
lea
inc
pop
cmp
repz
mov
jno
popa
mov
pop
mov
mov
and
test
aam
scas
imul
hlt
sbb
arpl
test
jecxz
notb
cwtl
fs
push
or
xchg
and
out
pop
js
shll
cmc
mov
or
fimull
rolb
popa
add
add
mov
cmp
fildll
movsl
mov
out
xor
je
push
pop
data16
out
add
jp
ret
xchg
xchg
inc
arpl
scas
mov
in
dec
bound
push
idivl
mov
cltd
pop
lods
push
mulb
sti
shrb
jbe
rcrl
jns
jno
ror
out
fiaddl
mov
pop
lock
mov
lcall
adc
inc
adc
testb
xchg
xchg
xchg
mov
xchg
push
adcb
cld
mov
mov
addl
adc
mov
mov
add
sahf
shlb
jg
dec
daa
mov
cmpsb
mov
mov
adc
mov
cmp
pop
dec
js
fnstcw
in
leave
mov
jb
pop
mov
scas
xchg
push
cltd
scas
adc
jae
inc
pop
gs
add
aad
and
pop
outsb
hlt
jbe
enter
lcall
sbb
jge
inc
test
xor
rcl
test
insb
xor
xor
stos
bound
std
mov
aam
popa
push
ret
sarb
mov
fwait
adc
inc
jnp
cmp
pop
mov
std
hlt
lret
fcmovnb
cmpsl
cmp
sbb
inc
or
mov
dec
jno
lock
hlt
xor
aad
cmp
popf
fwait
push
fnstenv
std
daa
push
les
std
rclb
repz
outsl
mov
and
sub
daa
out
xchg
push
pop
les
push
xor
je
roll
aam
fdivrs
les
ljmp
ret
lods
sbb
pop
mov
icebp
mov
sbb
cmp
pop
jp
sub
mov
testb
mov
hlt
outsb
jmp
lahf
jg
pushf
fisttpl
and
push
lret
call
pop
push
movsl
xchg
xor
dec
push
jmp
xor
jns
pushf
adc
popf
mov
xchg
pop
jle
dec
lds
cmp
jne
pop
push
rclb
push
in
pop
xor
cmp
clc
testl
dec
xor
or
adc
mov
sahf
dec
out
mov
loopne
mov
cmp
lahf
nop
mov
insl
mov
lods
jns
push
je
and
dec
mov
out
fisttpl
pop
stos
cmc
es
dec
pop
in
aam
jmp
mov
repz
mov
mov
push
hlt
stos
dec
clc
cld
iret
push
pop
addr16
xchg
push
inc
xor
sbb
sub
cmpsl
inc
dec
mov
aaa
cwtl
jae
arpl
jle
xor
mov
or
push
out
and
push
stos
icebp
inc
jns
xchg
cmpsl
mov
lods
mov
cmp
xchg
add
add
xchg
aad
adc
div
sti
into
cmp
mov
and
sti
xchg
lret
test
mov
xor
aaa
jecxz
mov
cmp
mov
mov
es
cmpsb
pop
xor
iret
or
ja
pop
xor
sarl
ljmp
push
mov
sub
xorl
loope
mov
aad
sbbl
mov
adc
add
mov
xor
xchg
ljmp
cs
mov
push
in
clc
sub
xchg
xor
xor
cli
adc
inc
dec
sarb
popf
and
inc
and
mov
adc
and
fdivr
add
push
or
jecxz
sarl
lds
inc
and
outsb
leave
jne
dec
ror
js
mov
adc
xchg
cmp
and
in
mov
and
jns
or
clc
push
mov
sub
and
pop
in
leave
and
jo
mulb
das
mov
testb
dec
and
xor
xor
icebp
addb
add
ljmp
pop
jnp
cmp
sbb
mov
mov
xor
mov
dec
dec
xor
add
stos
sub
jg
ds
cmp
pop
outsb
lret
shrl
add
shlb
cmc
movsl
mov
faddl
sub
jle
push
and
sbb
sbb
inc
out
ret
dec
daa
pop
xchg
sub
xor
dec
shr
jl
cld
jmpw
ss
fisttpll
jmp
xchg
push
xbegin
mov
cwtl
jae
jge
pusha
bound
fdivrl
insl
inc
mov
pusha
jge
push
repz
inc
and
in
adc
pop
xlat
pop
enter
imul
loop
mov
shr
ret
addl
dec
xor
clc
mov
mov
loop
lea
xchg
push
sub
aad
pop
jle
outsb
pop
xor
or
ficompl
ljmp
es
fwait
rorb
out
in
rcrl
mov
inc
pop
shl
or
jnp
stos
movsb
mov
xchg
and
fcom
add
jecxz
ret
addr16
mov
rorl
mov
dec
xchg
push
mov
lcall
rol
icebp
sub
out
pusha
mov
mov
mov
out
lods
loope
cmp
cli
inc
fiaddl
cmpsl
push
sub
inc
stos
cli
hlt
cmp
xor
mov
adcl
mov
arpl
xchg
sbb
jno
fcoms
loope
dec
push
lcall
ret
xchg
movsb
mov
jmp
clc
mov
xlat
lock
push
dec
inc
lret
out
mov
loopne
mov
xchg
mov
imul
sub
push
cmp
gs
int
cmpsl
push
stc
sbb
stos
push
leave
add
xlat
repnz
sbb
adc
movsl
ljmp
sub
jmp
leave
inc
mov
mov
pop
lcall
imul
ljmp
in
lods
outsl
test
imul
scas
dec
jmp
jo
pop
leave
jge
cmc
jo
adc
ret
push
and
in
clc
jae
call
data16
adc
cmp
stos
mov
loopne
mov
in
test
adc
mov
pushf
fnstcw
dec
std
notl
not
pop
sbb
aas
push
push
push
pop
pusha
ret
mov
mov
aad
ss
lods
inc
lock
cmp
enter
loop
fisttps
es
mov
gs
mov
mov
sbb
xor
mov
push
iret
sub
std
mov
rorb
fidivl
mov
es
mov
mov
push
cmp
dec
or
jecxz
cmpsb
cld
mov
adc
jmp
stc
and
sbb
pop
push
or
out
inc
aas
clc
push
popf
inc
mov
xor
dec
in
jne
cmp
xor
xchg
scas
scas
sarb
push
addr16
in
lock
xchg
jge
xor
mov
mov
push
add
testl
jg
add
dec
xor
dec
mov
stos
mov
lock
stc
mov
jmp
fidivs
pop
xchg
cli
sbb
dec
notl
inc
mov
xor
lock
mov
sti
jmp
adc
mov
xor
out
pop
mov
or
lea
js
xor
xchg
and
mov
add
and
mov
lret
imul
inc
dec
les
loop
rorb
add
xor
cmp
push
inc
fwait
mov
xchg
jecxz
test
and
iret
outsb
ds
xor
jge
pop
or
pop
loope
push
mov
imul
adcb
mov
pop
out
add
cmpsb
pushf
mov
and
mov
cmp
rcr
jmp
xchg
repnz
dec
sbb
sub
outsb
leave
adc
out
adc
imul
fidivs
rol
imul
out
xchg
push
mov
insb
popf
or
mov
inc
jecxz
cltd
imul
test
lods
inc
loop
add
xlat
js
in
ret
sub
jp
pop
mov
xchg
ret
sub
andl
and
or
xchg
jno
nop
in
popf
jl
and
or
scas
das
call
jae
outsl
xor
stc
arpl
idivb
inc
cli
mov
loopne
shll
and
mov
xor
pop
sbb
inc
out
imul
test
fadds
rclb
jne
mul
inc
fstl
jno
cmp
fistl
test
pop
call
icebp
adc
or
inc
jae
inc
mov
mov
sub
xchg
mov
cs
xor
xchg
mov
xchg
xlat
addb
sub
pop
mov
push
das
xchg
and
repz
fnstsw
adc
lods
fwait
dec
push
mov
or
sub
outsb
ja
xchg
pop
cwtl
pop
add
rcll
pusha
pop
dec
add
ljmp
mov
cmpb
mov
lcall
insb
push
cltd
cmc
jb
adc
or
mov
daa
dec
pop
fcoms
or
mov
je
sub
sub
sub
sub
push
and
popa
filds
add
outsl
add
lret
loopne
mov
and
stc
dec
outsl
lea
out
mov
cltd
lret
xor
mov
pop
push
cmp
jge
out
dec
inc
sub
cli
popa
ja
inc
pop
sub
stc
ljmp
cmpps
mov
jecxz
arpl
lcall
mov
mov
dec
inc
push
xlat
loop
sbb
cld
into
dec
push
mov
jp
loop
lcall
cmp
in
inc
jl
fildll
repz
mov
inc
gs
in
stc
xchg
or
loop
xchg
mov
jne
lock
inc
push
mov
sub
je
xchg
sub
xor
and
ds
push
add
push
push
pop
and
sbb
fidivs
stos
push
inc
jb
pop
dec
mov
outsb
enter
cmp
punpcklwd
fcomps
scas
jne
ds
rcrb
pop
adc
push
pop
sbb
adc
push
addl
aas
push
dec
jecxz
stc
sbb
in
hlt
ss
shrl
push
cld
pop
jne
inc
jle
jb
xchg
sti
jno
cmpb
loopne
outsl
scas
outsl
sub
sbb
mov
jbe
aad
daa
pop
mov
dec
das
sub
xlat
mov
les
in
hlt
pop
xchg
cld
mov
sub
xchg
in
mov
xchg
leave
enter
jecxz
xor
dec
xchg
and
adc
jns
imul
pop
push
movsb
push
mov
das
push
cmp
push
and
leave
int
cmp
shrl
pop
clc
pop
pop
push
add
negb
pop
stos
push
inc
xor
and
sbb
daa
jnp
dec
mov
sbb
dec
xlat
sarl
dec
mov
in
enter
mov
insb
clc
sbb
pop
movsl
add
adc
jne
pop
jne
and
cltd
push
sbb
and
pop
je
cmp
dec
and
mov
out
mov
adc
jb
idiv
sub
rorl
out
push
dec
fbld
popf
mov
mov
data16
cmp
jp
pusha
lods
push
das
or
pusha
into
or
ret
sub
pop
enter
mov
xchg
cltd
scas
inc
pop
push
and
xor
jmp
and
mov
xchg
out
fwait
lds
shrl
dec
in
jle
es
icebp
xor
and
call
aaa
inc
push
xchg
ja
aam
cli
and
lret
stos
aaa
jne
and
out
mulb
bound
xor
ss
jno
fsubl
fiadds
lea
inc
xchg
xor
cmpsb
fdivs
cmc
dec
lods
jmp
inc
sbb
mov
push
jmp
pop
int3
cld
mov
lret
divl
cmp
jbe
test
inc
into
sbb
fisubl
out
and
sti
js
jnp
inc
cli
mov
sti
ficomps
add
and
arpl
cld
mov
dec
fcoms
jns
pop
scas
in
and
lods
push
or
xchg
and
bound
xor
xchg
rolb
insb
push
sub
mov
mov
stos
sub
sbb
idivb
jcxz
or
jns
inc
push
jo
leave
sbb
mov
hlt
push
faddl
sub
aaa
xor
adc
cmovae
les
sub
or
bound
in
jne
sti
out
int3
mov
push
ss
sub
stc
cmp
inc
lock
testb
mov
jne
and
mov
jle
pop
ja
push
call
popa
push
lods
or
mov
lahf
xchg
jle
adc
sbb
mov
in
ret
push
xchg
cli
sbb
in
scas
fsubs
sahf
dec
add
fdivrl
mov
sbb
sub
icebp
cmc
cmp
jg
cmpsl
stos
pushf
out
enter
cwtl
sub
push
dec
pop
test
rcr
cmp
mov
shll
mov
insb
lods
pop
and
pop
int
out
rcrb
add
xchg
gs
scas
push
test
mov
push
adc
mov
or
lahf
xchg
pop
shll
jo
adc
xlat
pusha
mov
jle
sbb
rcr
mov
cmp
mov
and
inc
cmp
pop
mov
or
jle
in
mov
int3
xorl
xchg
jmp
mov
pusha
sub
lret
xchg
les
dec
les
xlat
mov
inc
cmp
mov
ds
jge
lahf
popf
sbb
or
xor
sbb
jmp
je
mov
adc
aad
xchg
out
mov
js
and
out
push
and
movb
and
movsl
sub
xor
add
lret
push
jmp
testl
cmp
push
xchg
sub
mov
dec
mov
and
inc
mov
dec
in
cmpsb
mov
inc
cwtl
addr16
xor
cltd
push
add
in
adc
ffreep
insl
aas
cmp
rcrb
jmp
sub
cld
jle
lods
mov
loop
inc
adc
lods
das
mulb
xchg
imul
je
lock
xor
mov
or
cmp
add
je
lret
xchg
sti
hlt
mov
js
scas
sbb
imul
cwtl
dec
in
and
insb
xor
repnz
cmpsb
cmpsb
adc
push
pop
or
subl
jg
sub
cmpsb
int
jmp
adc
mov
shl
mov
pop
sti
xchg
sub
std
out
loopne
in
sbb
aam
mov
shll
popa
adc
dec
adc
xchg
xchg
cmp
loopne
jb
push
xchg
les
mov
test
add
imul
fistpl
stos
fildll
rorl
repnz
or
adc
ficoml
push
aad
xchg
or
push
fldcw
jb
add
xchg
push
filds
test
cmpsb
xor
fildll
popa
xor
hlt
jae
xor
lock
cmc
stc
dec
jns
das
std
xchg
jbe
aam
aaa
hlt
sbb
dec
lcall
mov
imul
adc
pop
lock
clc
mov
lods
in
mov
or
and
test
mov
in
fimuls
test
dec
sub
movsb
inc
adc
push
add
test
add
sbb
cmpsl
jge
ror
cmpsb
andl
xchg
cltd
shlb
arpl
pop
sbb
mov
adc
xor
popf
fcoml
and
xchg
arpl
rcr
sbb
fistpl
sbb
imul
pop
nop
adc
xor
bound
xor
sbb
addr16
xchg
xor
add
fstl
push
out
testb
jl
mov
jbe
test
sub
pop
mov
sbb
jae
imul
xchg
inc
mov
scas
sbb
les
negb
rcrl
popf
push
pop
mov
data16
cmp
mov
cli
in
pop
cmp
test
loop
mov
and
stc
pop
and
lret
xchg
adc
mov
and
ljmp
sub
clc
jno
lock
cld
pop
pop
fmull
xchg
jmp
data16
sbb
xor
ss
jle
data16
mov
testl
je
push
fldl
jno
xor
sbb
dec
testl
dec
cld
in
add
fsts
jmp
das
stos
jne
push
outsb
mov
xor
mov
cmp
fstp
or
cmp
or
out
out
mov
or
sti
pop
js
dec
lds
cmpl
mov
jae
xor
sbb
lods
inc
inc
mov
insb
lcall
mov
fwait
jle
int3
add
mov
pop
push
pop
out
ror
adc
adc
lret
stos
lcall
lahf
cmp
or
lcall
call
idivl
pop
aad
mov
adc
or
push
inc
or
adc
push
mov
test
imull
aaa
jbe
add
jb
hlt
jl
nop
out
push
xchg
pop
mov
dec
daa
jg
mov
mov
stos
in
and
adc
fnsave
adc
dec
dec
in
outsb
lret
test
xchg
mov
or
pcmpeqd
out
dec
inc
shlb
lds
jo
push
and
push
mov
loope
insb
xor
cld
mov
leave
cmp
xor
fnclex
clc
jne
mov
xchg
pop
scas
xor
in
rclb
jbe
lods
jl
cmp
cmp
mov
dec
add
cmpsl
ss
repz
jl
jo
rorb
je
aam
out
xchg
xor
test
pop
mov
testl
imul
clc
ja
inc
mov
lea
add
in
in
cmp
jnp
push
out
sbb
and
mov
cmpsb
pop
ljmp
fldl
insl
es
stos
ret
push
orb
cli
xor
je
insb
jl
push
mov
ja
jbe
es
idiv
and
add
jle
dec
fistpll
movsb
mov
mov
sub
test
divl
xchg
cld
push
mov
sbb
mov
imul
push
test
push
aaa
mov
mov
inc
jmp
je
adc
add
or
pop
js
mov
inc
push
push
iret
cmc
jae
test
popf
push
sub
add
cmp
push
ss
bnd
xchg
pop
ss
idivl
dec
sbb
mov
sub
pop
outsb
xchg
test
xchg
push
jbe
mov
stos
lret
cld
movsb
xchg
sbb
jnp
push
leave
in
test
ucomiss
dec
push
sub
adcl
insl
pop
cmp
ret
lret
ret
push
sbb
cmp
out
mov
test
mov
jb
inc
or
in
iret
jbe
aad
mov
test
mov
scas
pop
jae
xlat
push
leave
decl
xor
push
mov
xchg
jle
std
jmp
jmp
icebp
aaa
data16
test
inc
xor
adc
inc
xor
mov
or
pop
leave
jns
and
xchg
lea
in
inc
jns
inc
inc
js
push
insb
repz
mov
cmp
sti
jb
or
mov
cld
jnp
aam
mov
pop
pusha
pop
cmp
mov
call
into
push
push
jbe
adc
mov
sub
xlat
pop
mov
repz
fcmovnbe
fcomp
jnp
mov
pop
cmp
ss
lods
sahf
insb
cli
std
sub
mov
mov
in
cltd
mov
testb
cs
in
inc
cmpsb
push
fsubl
mov
pusha
xchg
call
repnz
int3
jae
dec
mov
xchg
test
jbe
dec
mov
cmp
cmp
nop
xchg
insb
push
loop
sbb
into
pop
mov
lods
fmuls
xchg
adc
addb
adc
mov
xchg
enter
mov
or
and
lods
jns
xchg
push
mov
mov
mov
or
bound
sbb
push
aas
or
jae
imulb
ret
cmp
dec
out
lret
push
fcomps
cli
neg
add
mov
xchg
lret
mov
movsb
or
add
ficomps
daa
gs
mov
cmp
pop
test
adc
enter
dec
fldenvs
jecxz
sbb
leave
cmp
lods
lret
dec
and
push
mov
mov
test
jnp
fbld
pop
or
cwtl
out
cltd
movl
pop
mov
test
mov
mov
call
out
and
adc
enter
movsl
outsb
out
ret
bound
fs
aam
mov
add
mov
lds
push
arpl
mov
add
out
and
dec
ss
dec
mov
pop
adc
mov
inc
fwait
imulb
mov
ret
lock
jge
bound
xor
sti
and
push
cmc
mov
and
inc
or
mull
sub
dec
cwtd
addr16
dec
les
sub
dec
cmp
cmp
stc
xchg
fidivrl
rorb
lods
xor
repnz
sbbl
adc
js
popf
fadd
xlat
sbb
jmp
sub
pop
or
daa
ss
js
push
or
mov
dec
xchg
jecxz
xor
adc
int
je
out
jmp
jb
cmp
mov
jl
sbb
sub
sti
xchg
mov
ficoml
jp
dec
std
cli
loope
push
imulb
inc
ja
xor
iret
stos
xchg
sti
test
jl
cmpsb
pop
into
dec
add
shrl
repz
push
mov
pop
in
aas
xchg
loop
sub
pop
movsb
ficoml
jmp
mov
mov
pop
inc
mov
mov
fnsave
test
fisttpll
pop
fsub
cmp
mov
xchg
pop
aaa
testb
inc
push
fiaddl
fildl
cmp
cwtl
movsl
std
shr
mov
xchg
out
pop
pop
std
sar
fdivr
rcrb
mov
dec
dec
xor
leave
jecxz
out
gs
inc
subl
push
inc
ret
fs
mov
jb
lock
mov
pop
popa
imul
xchg
add
adc
and
push
das
mov
mov
xchg
rcrb
movsl
jbe
shl
add
daa
dec
add
js
rorb
int
sub
pop
cmp
addl
popa
pop
aam
outsb
adc
jnp
add
sarb
iret
lcall
mov
sub
xchg
nop
push
push
pop
lahf
loopne
cs
add
test
fistpll
xchg
mov
pop
push
fwait
inc
sbb
xchg
cmp
ja
loop
xor
mov
fcom
call
and
sub
push
cli
adc
call
xchg
arpl
push
lret
push
sbb
mov
push
xchg
rcrl
aam
push
mov
test
mov
bound
adc
es
sub
pop
stos
iret
push
out
cli
pop
lret
leave
lcall
mov
aam
lret
xchg
andl
in
xchg
cli
or
fdivr
push
xor
cmp
dec
cmpsl
add
mov
lods
push
mov
cmp
cmp
ja
fs
or
pop
idivb
mov
scas
arpl
pusha
push
jmp
push
mov
into
loope
jge
inc
push
mov
and
aad
xor
in
movsl
inc
sarb
push
jl
sbb
mov
fisttpl
cmp
ret
sarb
fsubl
dec
and
cltd
idiv
insl
jae
pop
dec
mov
aaa
es
fstl
scas
xlat
call
call
cmp
ret
xor
or
sbbl
cltd
jo
pop
std
xor
dec
fildl
inc
int
sbb
jg
push
mov
imul
cmc
push
jecxz
xor
and
sbb
adc
push
sub
push
push
sbb
or
in
xchg
cmp
test
test
das
jge
add
adc
aas
outsl
push
sti
int
rorb
icebp
rorb
loope
rcl
pop
cmp
pop
ds
or
cmp
movsb
mov
mov
or
movsb
pop
insb
sbb
dec
out
popa
pop
push
mov
dec
jne
std
repz
loope
scas
xor
jle
xlat
inc
mov
pop
jle
imul
leave
lcall
adcl
inc
xor
aad
xor
cmpsb
icebp
bound
pop
add
mov
bound
sub
jb
mov
inc
lret
mov
insl
xchg
cmc
lea
lret
arpl
loop
push
mov
push
movsl
fdivl
pminub
push
sahf
mov
addr16
mov
ret
jg
dec
fmuls
lahf
arpl
in
fs
gs
sbb
mov
inc
add
xchg
jne
xor
push
test
popa
aas
mov
icebp
or
xchg
or
pop
out
dec
imul
lahf
or
sbb
sub
xor
out
cmp
mov
not
cmp
sub
inc
aaa
incl
xchg
mov
pop
push
mov
jge
mov
addb
in
inc
inc
rdmsr
das
or
cmc
mov
jmp
pop
push
movl
jle
xchg
daa
cmpsb
mov
dec
dec
aad
movsb
cmpsl
pusha
sbb
enter
arpl
lock
outsl
adc
aas
stos
mov
and
jno
xchg
sub
add
daa
push
add
gs
pop
mov
nop
scas
daa
loop
mov
clc
gs
mov
add
push
jb
or
jae
mov
inc
xchg
jecxz
gs
bound
push
sub
mov
arpl
inc
imul
or
sti
adc
or
adc
imul
test
scas
mov
pop
push
mov
inc
mov
out
and
fbld
pop
push
lea
sbb
insl
or
fldl
lahf
je
cli
lret
xor
movsl
dec
rcrb
fistpll
inc
sub
jno
inc
jp
and
jb
gs
lret
mov
ljmp
das
scas
or
lcall
loopne
filds
ret
mov
dec
lea
rclb
insl
jb
dec
in
shll
add
sub
xor
jne
mov
mov
pop
mov
pop
insb
push
xchg
mull
cmpsl
xlat
xor
pushf
mov
outsb
jb
ret
aas
fdivl
xchg
gs
add
xchg
mov
xchg
ret
scas
pop
pop
mov
jmp
mov
jle
sub
lret
xchg
hlt
cld
sbb
sbb
aaa
arpl
push
fiaddl
jl
mov
push
xchg
leave
xchg
in
mov
mov
pop
popf
fwait
jge
cmp
or
and
imul
pop
hlt
xchg
push
adc
sub
ror
aaa
xlat
push
movsl
jl
cmp
fnsave
out
xor
push
dec
into
into
mov
pop
in
int
and
xchg
mov
sti
xor
or
insl
sub
push
mov
loope
aas
and
cmpsb
xor
jecxz
mov
sbb
adc
xchg
test
push
in
cmp
or
dec
push
test
xor
insl
pop
sbb
adc
mov
imul
adc
imul
xchg
pop
pop
out
out
repz
in
ret
hlt
js
push
add
js
mov
xor
scas
sbb
fnsave
rcrb
addb
cmpsl
xchg
test
mov
mov
loope
data16
pop
mov
pop
in
rcl
add
test
xlat
jns
scas
aas
xchg
test
test
rcl
cli
lods
xchg
mov
fucomi
out
int3
mov
cltd
inc
rcrl
bnd
push
rclb
xor
mov
xchg
mov
pop
stos
stc
dec
imul
and
sbb
loope
fdivl
or
mov
and
cld
cmc
xchg
out
repz
inc
cmpl
xor
xchg
push
mov
jae
in
negl
xchg
xorl
or
mov
cmp
clc
fcoml
mov
in
test
mov
jb
sub
pop
push
repnz
xchg
inc
lcall
fnstenv
ja
mov
inc
call
mov
cmp
sub
adc
pop
xlat
or
repnz
clc
jp
adc
outsb
addr16
mov
xor
les
mov
xchg
jbe
scas
mov
dec
outsb
inc
dec
fisttpll
pop
cmp
sbb
add
in
filds
inc
jne
or
das
and
out
jl
negl
sbb
ss
xor
or
ret
pop
push
ret
add
mov
in
mov
insl
adc
mov
sbbl
movsb
mov
out
jb
sbb
mov
mov
or
fidivl
adc
inc
pop
bnd
call
aad
leave
or
aaa
in
inc
test
and
cli
jae
inc
notb
jns
daa
sbb
scas
xchg
push
or
les
inc
shll
jnp
push
sub
or
pop
cmc
loop
xor
stc
sub
push
xchg
fucomp
pop
mov
rcrl
push
xor
mov
dec
push
dec
aad
and
adc
stos
repnz
cli
pop
ret
loop
sub
in
cmp
jg
pop
das
cmp
repnz
movsb
out
cld
in
jle
xchg
push
push
xlat
and
add
popf
sti
data16
insl
lods
imul
add
mov
ja
in
cld
mov
sar
adc
push
imul
xor
and
sbb
sbb
fmull
sahf
dec
test
cmpsb
pop
mov
sti
fnstcw
mov
pop
in
jns
dec
or
repnz
and
fcmovu
cmp
jbe
xchg
mov
add
or
std
mov
and
mov
sbb
cmp
mov
mov
push
stos
push
push
jp
add
popf
push
dec
test
and
das
cmp
out
jmp
jle
or
cmp
push
jg
cwtl
in
insb
pop
in
mov
and
popa
add
jno
out
sub
daa
jnp
lahf
stos
cltd
mov
clc
lods
daa
aaa
loop
rcrb
push
pop
and
sub
jbe
dec
and
aas
hlt
mov
lret
ret
xor
xchg
cmp
wbinvd
imul
dec
ret
clc
inc
jno
pop
loope
push
xor
mov
fdivs
testb
data16
shlb
lods
jp
jmp
ja
adcl
sar
out
jmp
add
imul
pop
cltd
into
mov
sub
scas
sti
cmpl
enter
mov
sub
xchg
jnp
sub
dec
mov
aam
jb
jns
mov
mov
mov
jbe
shr
test
lcall
mov
hlt
and
jns
cmp
and
inc
and
sub
das
mov
pop
mov
pop
pop
mov
mov
shr
into
sub
ficoml
push
cmp
mov
sub
out
pop
add
add
xchg
test
sbb
fstpt
aam
pop
shlb
mov
ret
add
lret
nop
mov
aas
fs
outsb
scas
sbb
fstl
pop
push
pop
pop
in
out
push
mov
mov
sbb
fs
in
xor
dec
mov
imul
imul
mov
jmp
fimuls
mov
push
adc
subl
out
dec
lret
xchg
jmp
cmp
int3
shl
push
jne
sarl
shrb
and
add
sbb
lods
ds
sub
or
loopne
push
sbb
xchg
repnz
lea
mov
cwtl
xchg
shl
fwait
data16
xor
ljmp
nop
sti
dec
adc
arpl
xchg
adc
fistpl
mov
data16
xchg
mov
movb
cmp
movsl
cmp
sbbl
sti
stos
ss
pop
xor
or
int3
xchg
pop
test
sbb
xor
cmp
or
dec
jge
cmp
movsb
push
jg
jmp
mov
scas
mov
lret
dec
jno
pusha
cwtl
or
lret
add
lods
aam
dec
out
mov
insb
push
out
sub
cmp
repz
mov
scas
cmp
sub
dec
imul
movswl
sarl
xchg
jmp
inc
push
adc
mov
mov
inc
jg
icebp
mov
jno
pop
dec
lds
lcall
push
fildl
stos
enter
xlat
cmp
mov
inc
xor
jns
dec
pop
cmp
adc
les
movsb
mov
pushf
push
mov
js
test
sub
int
enter
test
aaa
pop
and
dec
pop
push
fcompl
shll
aaa
push
ljmp
rcl
jp
xchg
adc
es
lcall
pop
in
outsl
or
repnz
aaa
fmuls
cmp
pop
cli
inc
movsb
xor
sub
mov
aas
cmpsb
and
xchg
inc
pop
ret
jns
xor
cwtl
lcall
jno
and
dec
xchg
insl
sub
wrmsr
test
mov
pop
call
enter
fdivrl
leave
testb
cmpsb
add
sub
adc
xchg
mov
pushf
iret
bound
fnsave
and
aad
xchg
mov
stos
pop
add
jae
aaa
popa
aam
mov
push
xchg
dec
sub
fwait
scas
rcl
jb
das
std
leave
aas
cld
pop
loope
adcb
inc
push
add
xchg
fldcw
cli
inc
push
aas
push
adcl
std
push
jno
call
mov
and
aaa
xchg
xchg
mov
fwait
xchg
mov
push
movsb
mov
inc
paddb
push
ljmp
idivb
mov
aaa
ficompl
or
xor
sbb
xor
cli
rorb
add
xor
in
mov
clc
orl
and
cli
sub
push
test
fcmovu
dec
add
xor
rclb
outsl
pop
ljmp
sbb
mov
inc
icebp
push
mov
and
mov
xchg
fbld
cld
pop
push
mov
xor
add
push
dec
or
xchg
push
jbe
inc
xor
inc
cmp
mov
mov
ret
pop
mov
stos
cld
mov
arpl
out
shll
into
sub
mov
adc
adc
popa
mov
aas
mov
cmp
lds
outsb
lods
loopne
sahf
das
les
js
imul
scas
xor
or
or
inc
add
fs
jb
lcall
jmp
cli
cmp
jns
inc
lods
sub
sbb
mov
cltd
inc
adc
out
push
inc
adc
sub
inc
push
xor
shll
mov
cmp
clc
sahf
sub
cmp
leave
mov
or
mov
xchg
divl
iret
add
push
repnz
xorb
adc
movsl
xchg
inc
arpl
pop
inc
outsl
or
sti
andl
in
or
jae
and
testb
cmp
dec
js
mov
js
add
js
or
out
loope
mov
and
mov
fdivl
xchg
jb
movsb
aas
push
or
pop
inc
cmp
leave
sahf
or
mov
sub
lds
ss
pop
sbb
push
mov
add
jbe
out
and
mov
data16
mov
add
fs
jmp
cmpsb
xchg
xor
fstpt
hlt
icebp
inc
imul
mov
or
inc
add
jmp
mov
sbb
dec
rcrb
sbb
mov
mov
mov
cmp
jne
mov
dec
jae
push
xor
mov
ret
dec
repz
lret
push
test
jg
xchg
outsl
sub
fiadds
add
jne
out
jmp
push
pushf
sti
pop
cmc
sarb
mov
fcoml
cmp
push
xchg
dec
mov
pop
lods
cmp
fildl
ss
nop
dec
adc
fsubs
addb
in
mov
cmp
and
dec
push
sub
scas
xlat
push
inc
mov
lret
lods
jno
dec
fistpll
popa
in
fnstsw
cmc
xor
bound
dec
setns
out
test
enter
fs
enter
dec
aad
jl
rep
sbb
xchg
aaa
xor
repz
lock
adc
outsb
lds
cwtl
imul
popf
cmp
xchg
or
xchg
and
adc
sarl
sbb
push
iret
popa
inc
jo
iret
fimuls
pusha
xchg
test
in
aas
icebp
ret
pop
int
sarl
mov
aad
out
xchg
fidivl
sti
and
jle
push
mov
loop
call
pop
shlb
ss
leave
jae
adc
xor
xor
xchg
mov
pop
sbb
jl
lock
out
orb
cmc
cmp
ret
rclb
cmpsl
push
outsb
dec
jbe
jae
sbb
inc
push
test
test
push
in
loope
pop
movsl
pop
or
jmp
aas
sti
out
clc
mov
cld
add
insb
ret
jp
cld
aaa
jne
test
bound
cmp
fisttpl
inc
scas
jle
fildl
mov
rcrb
movsl
sub
fnsave
adcl
lds
popf
pop
inc
jmp
cwtl
sbb
xorl
mov
test
scas
cmp
icebp
xor
dec
pop
and
flds
insb
ljmp
lcall
fisubrl
cmp
pop
cwtl
std
outsb
scas
push
outsl
iret
push
jno
daa
adc
or
jle
je
xor
push
mov
mov
and
into
and
adc
stos
fmull
shl
adc
int3
xor
mov
mov
out
fcoms
inc
mov
scas
push
mov
outsl
sub
shll
add
es
iret
sti
cmp
inc
inc
outsb
outsl
adc
mov
inc
fists
jbe
mov
add
push
sbb
inc
pop
fldcw
inc
cmp
adc
out
movsb
call
test
pop
test
push
in
pop
orb
inc
cmp
mov
jmp
jge
jg
jle
int
lret
jmp
mov
or
adc
or
shr
add
icebp
ret
jg
adc
pop
jle
in
mov
rep
loope
pop
mul
pop
adc
ljmp
nop
fwait
xor
jo
inc
cmp
jmp
jge
faddl
aaa
repnz
movsb
jg
cmpsb
jg
dec
arpl
inc
push
mov
loopne
cld
jmp
cli
jo
mov
mov
dec
cmp
sbb
mov
scas
jle
jecxz
jg
jmp
out
push
push
shl
cld
mov
and
jnp
mov
xchg
clc
sub
cmp
jne
addl
jno
out
mov
inc
jne
aas
mov
repz
jle
pop
in
jno
sbb
lods
mov
adc
cmp
inc
mov
adc
repnz
lock
and
jp
es
js
push
cld
movsl
pop
icebp
outsb
scas
sahf
int3
mov
sarb
scas
loope
bound
outsb
stos
xor
mov
jg
push
imul
cmp
lcall
mov
sub
shll
les
pushf
leave
push
dec
mov
movl
ret
jmp
out
in
jb
fstl
std
stos
mov
mov
fcoml
mov
cmc
mov
push
scas
adc
lahf
in
sbb
add
xchg
hlt
and
icebp
mov
sbb
mov
xor
fiadds
mov
mov
inc
cltd
cmpsb
push
fwait
sub
sbb
mov
inc
mov
pop
mov
sahf
pop
push
xor
subb
jo,pt
pop
inc
enter
push
scas
sbb
or
fisubl
dec
lock
aad
push
jbe
push
lock
sub
insb
cmp
inc
xchg
adc
inc
add
leave
cmp
cmp
shl
mov
mov
mov
mov
xchg
push
push
cmp
aad
in
adc
or
scas
aaa
test
bound
pop
ret
insb
popf
xlat
enter
stc
xchg
rclb
std
jecxz
mov
daa
mov
push
mov
jg
mov
stos
mov
rcrl
mov
mov
mov
repnz
cmc
scas
jno
repz
out
xchg
mov
stos
sub
sbb
add
xlat
and
add
inc
mov
movhlps
jo
push
xchg
jno
xchg
data16
faddl
mov
or
shl
push
or
shr
inc
jns
push
lods
aam
jb
or
fidivrl
xor
mov
call
xlat
or
mov
mov
cmp
inc
loope
fucomip
pushf
ja
rol
cmp
mov
movsb
xchg
dec
sbb
stos
mov
stos
add
sahf
or
repnz
fs
jno
dec
jne
mov
in
pop
dec
sarl
and
push
pop
popf
pop
mov
loope
outsl
arpl
push
dec
outsl
in
nopl
dec
jge
adc
sbb
scas
pop
enter
ds
insb
mov
sbb
dec
push
mov
xor
ljmp
xchg
add
cmp
fstl
test
pusha
push
insb
pusha
push
sahf
add
pop
xchg
mov
enter
out
fadd
les
push
mov
fimull
mov
ja
int3
mov
roll
sti
or
xchg
sbb
xchg
bound
mov
shll
es
into
pusha
sub
jp
mov
jae
mov
mov
and
movsl
ljmp
cmp
xchg
push
xor
push
aad
push
sbb
lods
sahf
cmp
push
xlat
frstor
std
pop
sahf
out
and
xor
call
cltd
add
aaa
inc
push
leave
stos
popf
insb
cmpsl
adc
arpl
lods
int
inc
fs
sub
xor
mov
pop
jae
mov
jne
push
addr16
pop
in
mov
and
mov
cmp
outsb
rol
pop
add
lret
xchg
ljmp
cmp
shlb
cmp
mov
pop
outsb
jp
cmp
xor
xlat
xchg
jle
fstl
pusha
mov
sbb
ja
scas
pop
leave
je
jecxz
out
in
push
adc
lock
dec
in
cmc
int
push
dec
inc
ja
pop
pusha
pop
mov
jecxz
movsl
adc
fisttps
shlb
inc
cmpsl
and
in
mov
loopne
cmp
sarl
add
fsubrl
and
dec
pop
fwait
mov
icebp
and
lods
gs
sbb
lods
or
mov
xlat
xchg
lea
inc
in
popa
mov
pusha
call
pop
out
xor
scas
mov
cmp
push
sbb
mov
icebp
popf
ljmp
jne
jae
cmp
mov
push
jns
fs
sub
ds
inc
inc
out
jo
mov
ja
cmp
inc
icebp
sub
jmp
in
jmp
stos
inc
fidivl
fcmovbe
inc
orb
pop
mov
jmp
shlb
adc
scas
cmpsl
adc
test
xor
and
aam
lea
imul
dec
inc
fistl
enter
inc
std
mov
jl
int3
jg
inc
cmpsb
sub
lock
nop
shr
outsl
mov
push
insb
and
aam
lock
and
mov
or
in
jno
clc
push
pop
dec
ljmp
cmpb
xor
insb
out
xchg
inc
outsl
lret
pop
jae
lcall
inc
sbb
icebp
sbb
jl
adc
xor
decl
xchg
lods
xor
call
xor
bound
xchg
js
inc
je
xor
mov
imulb
or
add
hlt
insl
cmp
das
out
xor
sub
sbb
outsl
and
push
pop
sbb
jnp
mov
jae
push
adc
pop
nop
in
test
mov
int
outsb
aad
pop
popf
jne
jb
cmpsb
dec
mov
push
pop
fstpt
and
pop
in
popl
shl
cmp
and
insb
in
sbb
and
jle
movsl
lcall
jle
push
imul
pop
and
std
jecxz
jecxz
jae
in
jmp
xchg
lcall
sbb
mov
lds
cmc
or
sub
mov
lret
stc
jp
jae
dec
cmpsl
cmpsb
push
je
in
jmp
leave
movsb
push
mov
jg
or
adc
or
scas
movsb
jmp
cs
push
aaa
jnp
mov
jns
mov
aam
iret
mov
add
jecxz
cli
sub
and
push
movsl
sbb
xchg
out
subl
fwait
cwtl
fbld
and
xchg
xlat
sub
loop
or
mov
mov
mov
jecxz
mov
jecxz
std
ds
adc
mov
arpl
lahf
mov
pop
or
jno
adc
hlt
fldcw
test
push
jg
mov
push
add
mov
jnp
jae
cltd
jmp
adc
jp
movsl
xor
out
jo
and
push
adc
clc
nop
xor
xchg
pop
das
ljmp
out
push
xchg
cmp
mov
fsubrs
sub
dec
cs
adc
push
iret
push
push
data16
sub
fnstsw
ror
xor
movsl
sub
push
sbb
add
inc
insl
imul
dec
xor
jge
daa
xchg
rcll
aam
mov
in
notb
imul
hlt
les
xlat
les
movsb
ja
int3
dec
and
xchg
lret
int
adc
pop
adc
movsl
push
inc
or
cmp
push
insl
ret
imul
mov
fwait
mov
rcrl
inc
test
push
xor
cmp
sahf
and
fwait
push
add
dec
dec
in
lea
addr16
aaa
push
mov
lcall
scas
adc
and
aas
lret
pop
lea
cltd
movsl
lahf
iret
outsl
imul
inc
jb
ds
mov
cltd
cmp
sbb
push
bound
repz
jmp
bound
mov
in
push
int3
xor
imul
inc
mov
test
xchg
and
das
sub
sahf
ja,pt
mov
sti
sub
int3
arpl
cmpsl
pop
fstl
das
xor
lcall
adc
or
fnstsw
jb
xchg
into
stos
roll
mov
loop
ja
mov
sub
fisttpll
popa
dec
aam
mov
hlt
push
pop
jmp
inc
mov
pop
jp
fdivr
mov
jmp
pop
adc
jae
push
leave
sbb
ja
push
enter
inc
fdivrl
inc
test
aad
cltd
loopne
adc
push
jo
scas
or
sub
cld
mov
retw
pushf
mov
pop
mov
or
aad
repz
mov
js
mov
mov
andb
xchg
sub
fidivrs
out
mov
and
adc
fs
notl
inc
pushl
adc
dec
gs
xor
mov
and
and
pushf
inc
popl
int3
es
sbb
lea
cmp
xor
das
inc
lcall
mov
out
js
out
sub
inc
repz
add
mov
inc
mov
ja
sub
fsubp
push
or
sbbb
in
aaa
push
or
ss
pop
shr
add
fstl
stos
xor
clc
and
inc
mov
fistpll
arpl
imul
mov
mov
icebp
mov
mov
lcall
mov
scas
int
pop
push
jge
imul
or
cmp
mov
mov
xchg
packssdw
sbb
fnstsw
inc
cmpsb
push
dec
inc
cmpsl
xchg
cltd
pusha
xchg
jae
jl
lea
or
mov
mov
xor
mov
pop
les
sbb
sbb
push
outsl
dec
ja
jmp
adc
popa
outsb
mov
scas
and
mov
lahf
iret
inc
out
adc
push
jno
test
cwtl
notb
dec
outsl
push
in
fdiv
add
jmp
jo
fisubs
push
imul
sub
subl
push
jo
sub
std
jp
push
mov
rep
xrstors
xor
xor
pop
cli
pusha
mov
xlat
add
mov
mov
fildll
add
data16
dec
sbb
dec
jnp
dec
jl
ja
pop
xor
xchg
cmp
or
cmc
xor
fidivrl
push
xor
inc
push
and
rol
xlat
scas
data16
jb
xchg
xchg
add
orb
sahf
aaa
sub
loop
sub
rcrb
lret
aaa
sub
push
xchg
fistps
xor
cmp
xchg
sub
pop
js
ljmp
imul
rcll
into
les
sub
pop
xchg
xlat
ss
flds
jno
in
cmpsl
scas
jns
ss
movsl
jp
dec
pusha
mov
pushf
sbb
gs
aam
jle
mov
in
imull
rclb
movsl
xchg
mov
ds
shll
sub
loopne
adc
out
test
mov
pop
xchg
mov
mov
or
cmp
sahf
sbb
push
and
pop
bnd
push
shrl
pop
push
mov
fidivl
xchg
push
mov
fwait
insb
adc
and
or
xor
test
add
out
push
sub
fs
pop
lods
mov
dec
dec
gs
jae
das
jmp
insl
cwtl
stos
fs
fsubs
in
lea
xor
lret
popa
fnstcw
pop
jno
pop
inc
pop
jmp
dec
xor
dec
gs
bound
rolb
inc
idiv
cwtl
xchg
lret
push
loop
push
add
xchg
shrl
xchg
out
inc
outsb
rcrb
dec
cmp
mov
cltd
add
xor
inc
mov
dec
jb
inc
outsb
jle
movsb
les
pop
push
or
mov
pop
aaa
insb
rcl
fiaddl
xor
mov
push
fucomip
int
mov
lret
add
insl
xlat
movsb
lret
daa
and
xor
push
pop
mov
dec
dec
push
mov
mov
push
pop
aas
insl
lock
add
movsl
jbe
hlt
jl
xchg
inc
mov
mov
mov
test
add
xchg
pop
mov
cmp
push
add
sbb
pushf
fsubs
fcmovne
push
insl
dec
pop
stos
es
or
enter
fstpl
xor
cmp
sub
lcall
mov
and
ds
in
xchg
mov
out
repz
jmp
xor
dec
mov
push
inc
shll
shrl
xor
movsb
fcom
into
mov
movsl
sub
bound
push
and
adcb
jg
popf
das
out
sbb
in
fisttpll
outsl
mov
inc
adc
ret
int
mov
pop
pop
dec
pop
sbb
shlb
insb
mov
mov
fstpl
sub
aad
mov
aas
repnz
imul
mov
pop
sbb
aas
mov
lds
cmp
in
xchg
test
cmpsb
aas
sbb
ss
test
or
shlb
inc
cwtl
scas
mov
push
stos
dec
movsb
push
push
fisttpl
bound
mov
xor
setl
sbb
das
icebp
or
mov
pop
decb
rolb
bound
lret
hlt
jle
adc
mov
xor
inc
aas
pop
mov
pop
pop
add
and
xchg
leave
lahf
into
dec
add
fsts
out
sar
int
hlt
or
mov
cmp
in
push
fbld
xlat
dec
out
leave
shlb
sub
jno
push
xchg
out
add
push
clc
rcrl
ss
push
test
fildl
add
call
stos
enter
pop
paddsw
mov
subl
out
xchg
jg
gs
mov
push
push
rcrb
sti
stc
mov
js
int
fldl
lods
imul
cld
pop
xor
addr16
fiadds
outsb
test
xchg
lret
inc
jle
dec
push
mov
pop
aas
pop
add
inc
pop
cmp
rcrb
cmp
movsb
es
scas
in
pop
mov
fwait
out
jl
fcoml
data16
hlt
sub
in
sbb
test
push
fidivs
fsubrp
pop
xlat
jne
int
ret
add
and
fsub
ret
std
and
push
mov
insb
lahf
xor
sub
pop
add
test
mov
xchg
test
in
push
push
and
ja
test
xor
jg
sub
dec
sub
lods
jo
sbb
jg
xor
pop
popf
mov
push
fdivs
aas
in
mov
cmp
sub
stos
jae
shll
add
rorl
jne
stos
pop
xor
jno
xchg
and
jge
cmpsb
xchg
fucomp
xor
or
lock
lret
addr16
push
sti
es
push
sahf
or
mov
jl
enter
adc
dec
stc
adc
movsb
add
std
or
ss
addr16
and
cmp
fmuls
enter
cmp
sbb
fidivrl
mov
in
push
sub
jnp,pt
movsb
push
aas
aad
push
jmp
lahf
pop
ja
lea
pop
cwtl
ficompl
pop
mov
mov
lret
ret
mov
scas
scas
adc
movsb
mov
mov
popf
add
adc
pop
sahf
mov
cmp
lods
cmp
nop
sahf
jmp
jno
push
lcall
fisttpl
xchg
pop
sub
xlat
loop
mov
es
adc
pop
pop
icebp
lods
dec
data16
sbb
mov
sub
dec
loope
dec
or
out
rorl
cli
pop
sub
in
mov
pusha
insl
xchg
pop
rclb
mov
and
cmp
adc
sub
add
loope
call
push
mov
mov
mov
add
mov
push
in
push
andl
pop
jb
pop
fstp
fstp
xor
call
sahf
fnstenv
fwait
addr16
push
sbb
and
test
cltd
pop
lret
fs
cmp
imul
sub
ljmp
pop
mov
mov
test
lret
leave
push
je
loopne
jp
cld
mov
stc
out
icebp
push
add
mov
sub
sbb
mov
scas
cmc
outsb
push
iret
mov
push
aas
mov
out
stos
std
fisubrs
xlat
jmp
loopne
stos
add
mov
xlat
int3
mov
aam
decl
sub
decb
outsb
mov
imulb
mov
xchg
bound
lahf
xchg
lret
mov
aam
imul
adc
test
adc
inc
fildll
stos
std
repnz
mov
fcomip
loopne
rcr
adc
jo
inc
loop
pop
pop
shrb
leave
or
mov
xor
sbb
push
sub
mov
dec
cmpsl
sub
jno
in
popa
clc
lcall
cltd
mov
scas
pop
cmp
xor
das
ja
dec
lcall
sub
mov
cld
in
sub
push
je
mov
xchg
popf
or
add
mov
hlt
rcrb
out
xlat
xchg
lods
jb
pusha
mov
addr16
cmp
inc
push
popa
std
sbb
hlt
lcall
and
inc
jb
inc
fld
cld
test
sahf
or
ss
dec
push
repnz
rcll
in
fisubrs
or
enter
outsb
mov
cmpsl
xchg
and
test
scas
leave
jp
jb
in
and
xchg
test
cmp
mov
jbe
add
jno
in
mov
cs
popf
test
mov
xor
lret
scas
lret
inc
adc
int3
push
gs
cmpsl
enter
mov
or
pop
hlt
scas
xor
add
pop
adc
mulb
xchg
sbb
xchg
mov
lock
in
sub
cmc
mov
fistpl
cmp
mov
cmpb
sub
inc
push
add
std
pop
leave
push
jg
pusha
xchg
xlat
popf
pop
sub
sub
add
xor
push
fadds
bound
or
xchg
clc
jp
aas
mulb
popf
andl
xchg
mov
lock
cmp
cli
push
xor
in
in
xorb
adc
cmp
ret
hlt
stos
adc
or
dec
xlat
lret
cmp
insb
inc
lahf
movsl
or
mov
loope
enter
imulb
popa
outsb
xor
jb
in
jge
cmc
sub
rcll
shlb
mov
dec
dec
lret
mov
shlb
faddl
sub
jno
dec
test
jecxz
mov
mov
mov
mov
add
addl
cld
xor
xor
call
cwtl
icebp
push
js
mov
rolb
mov
shrl
sbb
loop
punpckldq
jbe
or
cmp
sbb
add
jnp
push
pop
arpl
cmp
cmp
testl
clc
mov
sbb
xchg
or
test
stos
xor
mov
daa
push
int
cmpsl
pop
mov
push
lret
mov
push
lods
or
leave
pop
adc
cmp
imul
jp
and
cwtl
jnp
jg
aas
adc
outsb
int3
jne
mov
nop
cmp
push
jnp
cmp
inc
inc
pusha
pop
dec
bound
mov
inc
push
jle
sub
xchg
push
sbbb
cwtl
scas
nop
adc
sbb
push
imul
sbb
jp
cmp
adc
shl
enter
cmp
ss
jmp
mov
cmp
data16
push
pop
cld
pop
inc
xor
loop
dec
pop
popa
aaa
int
mov
mov
add
gs
and
xor
shll
push
mov
sarb
rcll
jno
mov
je
add
hlt
xor
movsl
ss
cmp
std
push
loope
stos
rcll
mov
lret
jg
int
lahf
xor
pop
in
mov
xchg
xchg
adc
popf
sbb
pop
jmp
loop
pusha
dec
addr16
aaa
sbb
sbb
out
fstpl
mov
mov
cmp
cmp
roll
push
jbe
inc
jb
insl
test
cmp
out
jecxz
repz
in
bound
cld
sub
sub
adc
mov
adc
mov
add
addb
movlps
ds
mov
cmpl
cmp
int
dec
call
ret
pop
mov
push
push
movsl
dec
cwtl
ss
out
dec
inc
jbe
cmp
data16
std
inc
pop
mov
shrl
pop
stos
lock
mov
and
mov
xchg
test
jmp
test
popf
pop
push
mov
leave
mov
inc
xlat
sti
push
out
mov
mov
pop
xor
fwait
data16
mov
insl
pushf
mov
ljmp
out
cmc
imul
add
mov
cmp
ss
xor
dec
push
daa
shl
adc
mov
xor
mov
mov
stc
push
or
in
xchg
pop
xlat
outsb
push
ds
gs
lret
pop
pop
gs
stos
in
dec
scas
xor
in
call
sub
mov
cmpsl
rolb
sub
dec
je
mov
xchg
lods
mov
in
xor
cwtl
insl
push
fs
gs
rcll
gs
mov
jle
scas
inc
lods
test
push
push
fidivrl
les
stos
inc
sbb
and
cmp
mov
sub
jb
jmp
sarw
js
adcb
pop
sub
xor
fstps
insb
mov
sahf
scas
cmp
test
arpl
inc
mov
lret
dec
fsubl
pop
testb
sbb
inc
xor
repz
outsb
ret
stos
ret
jmp
and
into
push
jmp
push
xchg
test
sbb
dec
xchg
pop
cmp
xchg
bound
push
xlat
enter
or
push
inc
mov
cmp
mov
xchg
mov
stc
icebp
enter
cmp
push
sbb
jns
sbb
mov
mov
xor
pop
scas
mov
std
ffreep
shlb
dec
movsb
movsb
rclb
xor
loopne
in
dec
xor
scas
sti
aas
lcall
fmull
mov
les
ret
mov
xor
add
xchg
mov
jl
xchg
adc
fsubr
inc
insl
cs
cmpsb
in
push
add
es
mov
dec
aad
pop
cmp
jmp
repnz
xchg
jae
and
lret
jnp
in
stos
lret
dec
or
xchg
mov
cmp
dec
divl
mov
aad
adc
cmp
and
jmp
sub
test
jb
repz
push
mov
cmp
es
cmp
mov
cmpsl
mov
aas
ss
fisttps
and
sarb
jno
or
stos
iret
and
add
adc
cmp
enter
popa
cmp
lret
shrb
adcl
ja
pop
cmp
int3
sarb
sbb
call
ret
cmp
fs
into
lcall
dec
mov
cmc
outsb
sbb
mov
mov
insl
mov
sub
lea
hlt
scas
daa
lret
mov
inc
lcall
dec
push
in
sub
push
orb
test
jnp
mov
pop
xor
sbb
out
cli
mov
clc
cmp
addr16
or
xchg
dec
sub
sbb
pop
out
dec
pusha
pop
dec
push
xchg
fisubrl
lret
aam
les
arpl
push
stc
mov
push
pop
lds
fs
cmp
jmp
aad
into
dec
adc
pop
sar
fwait
mov
cwtl
out
dec
adc
xchg
movsl
inc
call
or
dec
push
mov
mov
and
subb
add
dec
mov
in
fs
add
mov
dec
lds
jo
flds
adc
jg
insl
push
add
gs
icebp
sub
xchg
sbb
adc
negb
fdivrs
mov
jbe
mov
push
sub
arpl
lock
sub
adc
imul
nop
fistps
pop
js
out
mov
mov
idivl
sbb
loopne
out
inc
out
or
jb
jne
mov
push
pop
loopne
mov
mov
mov
call
push
mov
or
es
es
inc
aam
fcmovu
sbb
mov
ja
cld
fistl
jl
pop
pop
insl
int
pop
hlt
cmp
push
cltd
mov
xchg
jb
and
jb
movsb
mov
mov
sarb
dec
fwait
int
sub
inc
xchg
insl
jl
imul
push
lds
pop
sbb
inc
cmp
inc
stos
in
int
mov
push
mov
in
clc
mov
cmp
pop
pop
ljmp
imul
and
and
xchg
in
fnstcw
adc
enter
lea
dec
pop
xchg
mov
out
mov
push
shlb
xchg
leave
add
xchg
jmp
fcmove
mov
outsb
sbb
jle
mov
inc
loope
cltd
push
dec
or
cmp
clc
jmp
int
stos
stos
popa
stos
bound
pop
ja
outsl
inc
or
data16
jne
shl
lahf
mov
or
clc
cmp
xchg
mov
test
sbb
pop
inc
insb
mov
cmp
mov
dec
pop
sbb
cmc
add
and
inc
es
xchg
test
mov
cmp
inc
clc
rcl
rorl
mov
bound
dec
std
and
cmc
dec
push
push
or
lret
daa
push
adc
out
in
stos
xchg
and
sbb
push
or
add
lret
and
jne
inc
in
arpl
xor
int3
push
pop
and
push
lods
or
sbb
lret
xchg
maskmovq
testl
rolb
mov
into
ljmp
add
xlat
sub
xchg
lds
inc
mov
data16
test
mov
fistpl
rorb
aas
mov
add
ds
mov
xchg
pop
jle
clc
test
ret
fstps
and
iret
repz
cs
ss
outsl
fs
xchg
clc
cltd
push
sub
std
and
sub
pop
pushf
xchg
xchg
mov
push
jne
push
jo
and
xor
hlt
jbe
popa
pusha
sub
dec
hlt
call
cmp
inc
popa
jl
jbe
and
push
sbb
mov
xor
mov
gs
lods
push
stc
xor
bound
mov
lock
mov
jae
cmp
inc
or
sub
int
js
orb
mov
bound
stos
cmovg
pop
shll
xchg
jl
and
bound
dec
stc
adc
cmpsb
out
adc
pop
dec
fsubrl
jns
dec
mov
test
outsl
repnz
push
into
mov
imul
adc
out
cmp
popf
call
pop
pop
cmpb
pusha
imul
les
inc
je
lods
jno
lods
cmp
and
fwait
add
add
popa
dec
xchg
out
mov
iret
inc
xchg
sub
mov
mov
ret
xchg
es
adc
stos
fnstsw
fs
in
fstps
pop
scas
dec
mov
sbb
dec
nop
pushf
cli
jmp
fstps
sub
sbbl
les
jg
out
sub
pop
mov
mov
xchg
lock
lahf
push
jb
leave
test
and
jle
repz
addr16
add
lock
sti
sub
aaa
inc
mov
mov
push
xor
cmp
std
clc
int
aam
pop
adc
arpl
sbb
bound
sbb
arpl
nop
mov
mov
mov
or
mov
xchg
nop
ret
xchg
stos
sub
in
mov
mov
pop
out
lea
or
xor
lret
shlb
test
sub
push
fstl
fs
fnsave
xor
cmp
lds
sbb
cmp
neg
adc
xorb
jne
inc
cltd
addb
push
es
sbb
jnp
or
push
cli
pushf
into
fnsave
sbb
push
cmp
aaa
rcr
cmp
xchg
sub
xor
mov
sub
push
out
jecxz
push
pop
or
sub
lds
cltd
je
pop
adc
pop
push
pop
pop
mov
pusha
push
out
cmp
fmuls
xchg
pop
cltd
sbb
test
or
repz
mov
fldt
mov
mov
dec
inc
cs
ret
or
das
sbb
xchg
hlt
cmp
or
lret
mov
jae
cmpsl
mov
test
xchg
jo
sub
das
lods
pop
js
mov
xchg
jne
lods
cltd
into
mov
or
cli
mov
test
movsl
orb
sub
mov
push
sahf
gs
adc
push
lcall
adc
sbb
pop
inc
add
add
fucomp
mov
xlat
adc
loopne
js
xchg
mov
mov
fst
gs
daa
movsl
aaa
adc
push
loopne
fnstcw
aas
aam
fildll
jno
mov
enter
nop
xchg
lods
sbb
mov
mov
xor
adcb
xlat
jne
sbb
jp
nop
scas
call
mov
push
jp
clc
cmp
das
and
xor
int
pop
mov
mov
dec
fildl
out
jbe
xor
stos
dec
mov
add
xchg
ror
mov
or
repnz
cmc
ds
xchg
fcmovnu
sar
sti
outsb
das
inc
add
into
std
lret
adc
scas
fucomi
mov
adc
das
mov
xchg
cmp
mov
xchg
push
push
and
movsb
cli
out
mov
lods
dec
cs
add
insb
mov
or
mov
add
mov
movsl
filds
mov
jb
or
repnz
stos
fcmove
push
iret
int3
rclb
mov
imul
jae
inc
jg
jnp
aad
sbb
in
cmp
andb
test
test
mov
and
fs
gs
inc
add
jmp
fcompl
jns
femms
ret
add
aaa
repnz
orl
pusha
js
mov
stos
add
fstpl
nop
ss
jne
loopne
pand
jp
outsb
mov
cmp
rcll
and
popa
bnd
pop
and
xchg
adc
push
js
xchg
testl
jno
or
mov
aas
sbb
dec
popa
cli
xor
loopne
push
sbb
pop
xor
out
sub
and
enter
stc
push
out
test
fistpl
adc
repnz
jl
into
ffreep
inc
xchg
lret
push
pop
fisubrl
push
mov
adcb
cld
lret
imul
xor
and
and
dec
pushf
sbb
test
rcll
jo
jnp
push
jnp
xchg
repz
in
sbb
call
scas
pop
jg
dec
sbb
in
sub
fwait
cld
int
or
addr16
pop
pop
xor
push
fimuls
cmp
es
dec
hlt
jge
and
cmp
inc
push
rolb
sahf
adc
jg
pop
lcall
add
mov
jle
sbb
mov
nop
subl
inc
xchg
pushf
pop
add
ficoml
pop
pop
stc
mov
and
lds
mov
xchg
jg
xchg
mov
add
adc
mov
pop
ja
lahf
cs
sti
or
mov
imul
jge
sbb
cld
jp
mov
lahf
mov
xor
into
jb
xchg
dec
xor
and
data16
adc
rorl
les
xchg
or
mov
pushf
inc
push
xchg
pop
add
xor
cmpsl
adc
mov
adc
lods
data16
sbb
rcrb
cmpsb
movb
aam
fcoml
lock
outsl
mov
cmpsl
dec
insl
xchg
movsl
not
mov
pushf
pop
mov
adc
mov
das
inc
aam
cmpsb
mov
jp
inc
push
std
push
lods
insl
gs
ret
rcrl
loope
or
outsb
rcrl
neg
fdivl
cmp
jg
xorb
lret
dec
mov
stos
xchg
push
and
divb
xchg
cmp
shrl
sub
cmp
enter
jl
cmp
jl
lcall
push
lcall
jb
int3
cmp
push
cmc
ja
and
jl
cmp
or
push
push
sub
int3
add
and
movsl
and
push
push
mov
test
cmp
push
js
push
sbb
pop
int3
cld
inc
sahf
cli
push
pop
mov
ret
push
popa
cltd
jmp
xorl
xchg
mov
scas
pop
pop
inc
arpl
mov
inc
xchg
xchg
in
ret
pop
inc
ss
push
push
shll
jb
add
mov
pushf
or
push
push
ljmp
add
ja
xlat
loope
jno
mov
and
jno
push
inc
cmp
cmp
lahf
sbb
xor
xchg
and
inc
loope
lahf
test
adc
add
sti
push
std
push
pushf
aam
jle
cmc
test
pusha
test
and
pop
mov
sub
ret
push
mov
lock
push
inc
mov
fnsave
xchg
dec
mov
popf
popa
out
dec
insl
inc
int
mov
das
jnp
jb
stos
dec
pop
pop
adc
mov
fs
xchg
pop
mov
iret
xchg
adc
jbe
es
mov
dec
lcall
mov
jle
xchg
pop
jge
and
movhps
clc
xor
push
xchg
cmpsb
insb
cmpsl
push
arpl
jno
dec
fsubrl
es
rol
cmp
mov
cmc
stos
mov
sub
sbb
mul
imul
call
mov
data16
pop
pop
add
mov
das
pop
scas
out
mov
adc
xchg
sarb
push
jbe
mov
in
adc
popa
xor
fldcw
mov
call
push
xor
cmp
mov
ret
adc
pushl
sbb
cmc
mov
rcl
cmpw
cmp
cmc
inc
jecxz
sub
adc
das
shll
leave
inc
cs
into
adc
cmpsl
dec
mov
pop
sti
lret
push
rcrl
repz
jle
jae
push
add
sbb
pushf
int
push
outsb
clc
cmp
push
mulb
cs
scas
xor
popl
mov
cmp
in
jmp
or
push
iret
subl
std
xor
enter
jnp
and
cltd
lcall
pop
jnp
int
mov
mov
inc
test
pop
iret
sbb
cmpb
jg
pop
movl
fucomp
and
pop
out
sub
das
shlb
data16
in
jo
imul
push
sbb
add
mov
jmp
pop
adc
stos
add
mov
xor
in
and
sbb
fcoms
fists
sbb
iret
pop
cmp
mov
sbb
adc
repz
xor
fdivp
inc
sub
int3
lock
xlat
or
movsb
push
rcl
leave
cmpsb
insb
ret
push
hlt
push
inc
popf
adc
dec
pop
rorl
cmp
adc
shll
jmp
test
stos
mov
push
jmp
int
adc
in
cwtl
pop
fs
fbld
sub
push
inc
mov
mov
push
mov
jl
sub
inc
in
aam
aad
imul
sub
push
add
mov
and
sahf
xchg
fists
stos
cmp
rcrl
cmp
in
scas
imul
cs
shlb
int
xlat
jno
xlat
in
std
mov
out
xchg
adc
jmp
fimull
scas
ds
jp
lahf
fisubs
mov
dec
pusha
or
adc
daa
add
ficomps
sub
in
test
mov
inc
jne
pushf
dec
xor
lret
lahf
cmp
mov
movsl
sub
nop
cld
daa
lret
sbb
scas
xor
stos
jmp
cmp
out
aam
jno
jg
cmc
xor
sahf
lods
dec
dec
mov
lcall
imul
jns
int
rol
mov
test
push
das
mov
xchg
das
lods
mov
push
xor
xchg
mov
ljmp
mov
into
outsl
mov
mov
xor
push
cmp
imul
insl
dec
imul
icebp
pop
mov
jmp
jbe
scas
lcall
inc
cmovle
push
inc
cs
sub
nop
xor
fcmovb
cmpb
cli
add
sbbl
out
mov
add
shll
sub
out
lret
inc
cmp
inc
xor
daa
das
fidivl
sti
lods
inc
sub
mov
mov
and
ret
rcl
and
inc
lea
pop
into
stos
sub
shlb
imul
cmp
cmpsl
push
dec
fsubp
xchg
xchg
rcrb
fldcw
pop
xchg
jns
cmp
es
nop
cmpb
inc
add
cmc
sti
adc
call
pop
add
cmc
cwtl
or
scas
and
sbb
push
aad
loop
mov
xchg
imul
push
push
inc
xchg
mov
sub
pop
test
fs
pop
pop
lods
adc
movsb
shlb
lret
insb
sub
repz
inc
push
cmc
mov
popl
stc
mov
xchg
aam
mov
pushf
jg
pop
lret
cmp
inc
popf
sbb
jmp
inc
xchg
mov
pop
inc
jne
mov
adc
and
or
sbb
jae
std
es
addl
sarl
or
pop
dec
lret
stos
stos
ja
xchg
add
fidivrl
ret
adc
rcrl
sbb
dec
int
dec
adc
lahf
sbb
ficoml
or
shlb
nop
jecxz
cli
popf
outsl
dec
scas
lods
inc
jo
ss
lock
and
pop
and
out
loopne
inc
cmpsl
xor
jecxz
pop
fcoms
jl
push
sbb
cmovs
jb
dec
push
mov
repz
xchg
icebp
imul
popa
adcl
adc
cmp
sbb
jne
mov
cmpsb
add
sarb
adcb
loope
sbb
mov
lods
cmpsb
movsb
mov
sbb
fsqrt
jbe
sub
sub
dec
xchg
popf
out
jnp
stos
outsl
mov
cmpsl
enter
xchg
sub
pop
inc
ds
sar
push
sub
xchg
xchg
pop
xchg
int
mov
xor
xchg
out
adc
xchg
outsl
cltd
out
mov
push
adc
daa
push
jmp
leave
push
inc
or
push
and
adc
xorl
outsl
xor
xchg
sahf
mov
jecxz
push
sub
inc
fldz
push
sbb
pop
add
cld
data16
loope
jmp
jo
dec
xor
sbb
adc
cmp
test
and
je
cmp
jecxz
pop
out
arpl
stos
sub
push
sbb
add
pushf
mov
out
jmp
cmp
jle
or
fst
je
xchg
lret
jbe
mov
neg
ljmp
xchg
xor
sarl
cmp
fisttpll
mov
push
jbe
push
sub
xchg
ret
xchg
in
push
mov
sbb
or
jge
faddl
icebp
cmpl
or
shlb
mov
inc
cmp
mov
adc
test
xor
xchg
xchg
and
jo
pop
jge
ja
and
sbb
xor
pop
push
pop
add
jne
mov
imul
mov
cmc
pop
ret
or
mov
imul
push
dec
lea
outsb
popf
fldl
xchg
lea
or
addr16
mov
pop
add
rcpps
in
ds
es
mov
repnz
dec
dec
xor
scas
push
pusha
mov
cmpsb
imul
push
mov
dec
mov
jnp
mov
mov
notb
aad
cmp
gs
jmp
or
in
pop
add
dec
dec
jo
cs
fstl
mov
dec
rorl
add
andl
push
hlt
xchg
mov
cmp
pop
lahf
jge
xchg
jne
fcomps
adc
xchg
cmpsb
data16
adc
sti
inc
jne
sahf
adc
inc
inc
mov
push
test
add
out
fists
mov
cmp
in
xor
or
arpl
xchg
cmp
les
mov
movsl
push
rep
and
fldcw
push
test
stc
cltd
cmpsb
outsb
add
pop
insb
shrb
stos
jne
dec
push
xor
mov
pop
jg
sbb
mov
cmovne
es
mov
test
repz
mov
lret
sbb
stos
pop
sbb
data16
push
sub
sti
mov
lret
xchg
mov
mov
mov
addr16
xorl
mov
cltd
addb
add
jae
jg
xchg
sarb
hlt
xchg
fsubs
jmp
and
shlb
sub
dec
scas
mov
in
shll
pop
or
mov
inc
inc
in
push
or
pop
jg
lcall
rorl
shll
push
mov
les
sahf
xor
and
cmpl
ret
mull
in
or
shll
int3
jle
out
hlt
push
push
shll
lcall
push
sbb
cmp
mov
adc
mov
add
lock
xlat
fldenv
addr16
ds
cmp
ret
push
xchg
mov
pop
cmp
fnstenv
pop
in
or
mov
sub
xor
push
repnz
or
dec
xchg
fwait
pop
outsb
pop
and
jl
pop
jb
jg
in
orl
and
mov
cmc
clc
jp
or
push
sub
adc
movsb
out
mov
xchg
sub
xchg
cld
addr16
mov
arpl
fdivrp
pop
lcall
loopne
inc
add
fisttpl
cmp
sbb
hlt
and
and
aad
inc
xchg
std
adc
sbb
mov
jbe
sub
jns
and
jae
les
xchg
fimuls
push
into
ret
jo
rclb
aas
mov
mov
dec
mov
mov
and
dec
xor
shl
xchg
and
jae
movsl
adc
xlat
int
ds
jbe
inc
es
xchg
test
add
xchg
cmp
pop
je
jl
or
xor
ljmp
jo
push
incw
call
push
aas
jmp
ficomps
stos
xchg
imul
cmpsb
push
out
rcrl
insb
fnsave
or
outsl
in
les
cmpsl
icebp
lods
dec
jae
sub
sub
int
mov
aaa
dec
out
jo
adc
in
stc
push
dec
push
adc
xor
push
xchg
insb
push
outsl
inc
fisttpl
jl
mov
xor
fwait
mov
pop
add
fdiv
cmc
mov
test
xchg
dec
adc
xlat
pop
es
fisubrs
cs
cmp
subb
lret
mov
inc
pop
jb
xchg
mov
jge
jge
lods
shlb
mov
mov
jp
rorb
js
insl
out
mov
mov
xchg
fidivl
jg
imul
in
mov
mov
orb
rorb
andb
cmp
inc
cmpsl
dec
cld
sub
mov
dec
aas
cmpl
xchg
or
test
jl
popf
xor
rep
movsl
stos
jp
or
xorb
xchg
leave
insb
sub
mov
jle
loop
xor
lea
incl
fcoms
mov
mov
add
xchg
jno
dec
lret
stos
daa
loope
loop
adcl
stc
xchg
push
xlat
jae
aam
ret
and
lods
enter
idivl
mov
lock
popf
sub
lds
in
pop
inc
xchg
add
mov
inc
dec
lea
adc
xchg
mov
fldenv
pop
in
pop
inc
mov
inc
rcll
sahf
call
nop
adc
andl
out
mov
aas
dec
iret
fcmovnb
adc
ret
enter
cmp
push
sbb
test
inc
push
rorl
stos
stos
movsl
aam
push
aas
push
push
and
clc
or
sbb
pop
cmc
dec
ret
imul
cli
mov
or
and
and
mov
or
js
call
imul
cs
dec
cmp
dec
call
mov
sub
jbe
andl
stc
cmpsl
outsb
mov
xchg
lock
arpl
stos
test
mov
push
call
in
sbb
dec
pop
jb
push
icebp
cmp
mov
push
jle
scas
jo
inc
gs
mov
arpl
lcall
movsb
inc
or
ret
adc
or
adc
dec
int3
mov
stos
leave
push
xor
sub
sub
and
mov
cmc
and
mov
xor
mov
ret
in
mov
movsl
es
movsb
popa
push
push
jne
rcll
mov
out
fs
test
mov
mov
jp
and
jno
stos
js
pop
xchg
addr16
adc
pop
mov
add
jle
daa
add
pop
push
xchg
jo
mov
jge
jmp
mov
aaa
fdivl
and
lods
lcall
nop
rcl
shr
xchg
push
xor
ljmp
mov
leave
clc
repz
cmp
dec
cmp
sub
mov
jae
xor
bndstx
movsb
adc
testl
pusha
je
mov
andb
xor
aad
fcmovb
out
jbe
mov
aam
jle
mov
orb
mov
jnp
mov
jmp
stos
pop
pop
addr16
and
test
stos
mov
lahf
or
adc
rol
xchg
inc
push
daa
xorl
jnp
lds
mov
lret
lret
mov
imul
xchg
push
aam
jmp
inc
outsb
push
shlb
popl
popf
jecxz
inc
pop
jle
dec
sub
add
and
and
ja
mov
arpl
adc
add
push
push
shrd
push
pop
mov
jne
xlat
daa
scas
nop
lcall
rcl
mov
iret
adcl
iret
pop
loop
cmpsb
jo
mov
lret
subb
xlat
xor
lret
aas
sbb
ds
cmpsb
jecxz
cltd
aaa
push
or
movsl
dec
push
mov
dec
push
int
ret
pop
cmp
adc
jns
xorl
je
push
cld
pop
lret
add
loope
in
pop
mull
ja
call
cmpsl
xchg
cmpsb
popl
add
xchg
in
xor
inc
jecxz
das
dec
out
or
andl
sbb
mov
xchg
lret
cmc
xorl
mov
pop
inc
test
pop
mov
shll
dec
push
loopne
sub
push
in
loope
xorb
rol
dec
les
jbe
and
cmpl
xchg
arpl
lods
dec
cmp
addr16
sbb
xchg
iret
loop
stos
mov
sub
int
psrlw
xor
insl
clc
scas
imul
aas
lret
mov
sub
nop
imull
dec
ds
add
xchg
insb
pushf
cli
stos
xor
les
add
lds
mov
jmp
movsb
mov
xchg
icebp
fidivs
xor
cwtl
pop
arpl
testl
pop
or
ljmp
xor
test
or
stc
sbb
push
mov
fimuls
dec
ret
enter
cltd
sbb
stos
enter
xor
fildl
clc
push
pop
mov
and
fisttpl
adc
push
mov
adc
outsl
scas
jge
pop
lret
xor
out
adc
insb
call
add
mov
fwait
inc
xor
push
pop
mov
outsb
lds
es
sti
cmp
jae
lret
pop
xor
cli
jp
jp
push
popf
cmova
mov
jmp
mov
push
push
and
dec
sbb
cmovns
aam
aad
xchg
fcmovbe
push
das
add
jo
nop
mov
movsb
hlt
icebp
mov
mov
jae
mov
cmp
rcrb
jg
in
enter
push
sub
ret
popf
jg
cmp
adc
xor
ljmp
add
mov
cmpsb
xor
lods
enter
xor
xchg
icebp
jl
jae
in
and
mov
mov
rcrl
cmp
sbb
xor
or
mov
pop
cli
push
nop
notl
pushf
push
ja
inc
or
sti
cmpsl
fucomp
fmulp
out
popa
ror
cs
std
sti
leave
add
jmp
aad
pop
mov
repnz
add
leave
dec
lods
repnz
jge
and
icebp
xorb
int
mov
sbb
rol
or
stos
adc
mov
mov
adc
mov
nop
in
icebp
or
sbb
shr
inc
or
inc
add
and
insb
hlt
or
xor
cmp
repnz
dec
fs
xchg
jnp
mov
xchg
jbe
ja
push
mov
mov
jmp
movsl
out
testb
adc
lret
test
pop
fstpt
push
lock
or
push
xchg
and
mov
adcb
inc
or
movsb
jl
jns
add
jle
in
and
xor
mov
add
cmp
push
jge
pop
fstpt
sarb
out
jno
cwtl
repz
ret
adc
aas
movl
fwait
dec
mov
mull
das
cs
mov
aaa
cltd
jb
frstor
aam
lcall
or
hlt
shlb
testl
insl
loopne
cli
cmp
and
push
dec
dec
sub
jnp
sub
bound
or
and
aad
add
dec
dec
jbe
add
outsb
dec
je
jg
jge
mov
xchg
inc
cld
xor
sub
cld
loopne
ret
add
popa
sub
je
adc
xchg
push
inc
mov
fidivrs
mov
and
test
xchg
insb
arpl
icebp
lods
jbe
xorb
sbb
sti
lret
idivl
out
jnp
je
sar
scas
and
add
sub
test
test
aaa
jg
mov
out
dec
test
adc
mov
les
pop
fmulp
fisubrl
insb
aas
stc
add
xor
or
fadds
int
aas
pop
cmp
testb
hlt
shrb
xor
pusha
bound
sahf
mov
cmp
fidivl
mov
or
movsl
jns
sti
add
fistpl
aas
pop
push
mov
mov
xchg
jecxz
cltd
rcrl
cltd
mov
leave
lea
jmp
mov
mov
addr16
iret
mov
adc
sub
divb
lods
add
sar
mov
aad
add
pop
mov
cmpsb
adc
mov
lahf
mov
outsb
fisttpl
lea
shll
mov
adc
fstpt
sub
divb
je
xchg
mov
mov
clc
sbb
and
xchg
sub
jb
sub
and
fsubrs
loop
sub
and
mov
push
lock
jb
adcl
adc
ljmp
leave
hlt
bound
aam
dec
mov
shlb
loope
sbb
sbb
add
cmc
addl
insl
incb
in
pop
jae
out
mov
sub
je
and
jg
mov
dec
xchg
xchg
mov
fistpll
add
mov
es
sbb
mov
gs
jle
sbb
cmp
pop
jns
jb
sar
cli
and
dec
adc
ffreep
ss
mov
jnp
adc
data16
mov
fsts
xchg
push
push
out
lret
dec
pop
jb
mov
rorb
adc
int3
or
pushf
jae
popl
mov
lahf
xlat
xchg
mov
inc
test
leave
mov
mov
jmp
or
lods
es
lods
inc
inc
in
ljmp
jmp
sbb
mov
ficomps
fdivrl
mov
add
jns
mov
out
jle
test
mov
call
ds
mov
lds
jl
ficomps
jbe
lea
scas
xor
pop
sahf
out
adc
mov
cli
sub
fmul
je
out
ret
jae
mov
stc
arpl
and
fdiv
rclb
aam
add
pop
shl
push
in
push
ss
bound
insb
pop
pop
jle
lods
push
cltd
mov
fidivrl
test
pushf
xchg
xor
push
jg,pn
fcomi
sahf
sub
mov
or
stos
jecxz
pop
mov
pushf
fbld
sbb
pop
mov
cmpsl
lods
iret
and
rcrl
mov
ret
mov
mov
dec
out
test
xchg
cmp
fdivl
mull
nop
das
jb
ds
ret
mov
addr16
stos
xchg
jbe
adc
jecxz
clc
sbb
mov
mov
pop
push
mov
inc
rolb
xchg
stos
jae
int
dec
jg
or
add
aad
pop
cmp
push
jae
fistpll
xchg
dec
out
add
sbb
dec
mov
inc
and
lahf
into
mov
mov
adc
lahf
arpl
out
mov
lods
xchg
dec
out
xor
mov
imull
aam
sbb
mov
mov
or
lds
jle
idivl
insl
sbb
jbe
push
ret
sbb
mov
decb
jecxz
cmp
push
or
test
jg
das
mov
pop
dec
mov
push
mov
or
cli
loop
dec
test
mov
xchg
cmp
fisttpl
insb
dec
sub
and
xor
lods
jae
mov
inc
cmp
ljmp
mov
adcb
push
inc
and
out
xchg
por
or
xchg
lret
mov
xor
fdivrl
testl
ljmp
sti
movlhps
fsubrs
jp
sub
adc
jg
xor
inc
push
test
xchg
xchg
xchg
fsubrs
orl
mov
fwait
lret
sub
cmpsl
filds
inc
sbb
xchg
inc
and
pop
mov
jnp
sbbb
dec
xchg
aad
test
ljmp
add
fisubl
xor
fsubrl
sub
inc
pushf
stc
pop
subb
pusha
rolb
jae
mov
loope
or
addr16
mov
xchg
push
je
cmpsl
pop
mov
in
ss
int3
mov
not
in
ljmp
sarl
shlb
lea
add
int
sub
psubsw
pop
dec
xchg
scas
xchg
jmp
jbe
loopne
jno
ljmp
and
xchg
inc
sub
icebp
imull
push
fwait
inc
push
adc
mov
add
pop
inc
push
inc
or
xchg
xchg
sbb
fwait
shrl
add
cmp
xor
mov
cmpsl
mov
ret
js
pop
push
rolb
mov
sti
push
ljmp
cld
int
jnp
aaa
stos
push
push
push
test
sub
cmp
nop
sahf
add
mov
mov
jle
pop
push
push
mov
pop
ret
aad
and
into
push
loope
inc
test
mov
dec
jo
or
add
out
outsb
adc
push
inc
cld
xor
push
or
stos
lods
les
mov
cmp
jg
mov
popf
mov
test
mov
aad
push
pop
xor
mov
fidivl
scas
adc
bound
dec
notl
dec
pop
mov
dec
pushf
es
sub
dec
push
xchg
in
mov
push
ss
push
cmpsb
xchg
dec
cmp
and
pop
push
test
mov
cmpsl
fadds
in
ljmp
decb
xchg
in
dec
outsb
out
sub
test
mov
repnz
out
cmp
sbb
pusha
ds
mov
outsl
push
sbb
andw
fwait
arpl
rorb
inc
test
in
sbb
push
shlb
mov
lods
lret
pop
out
and
int
mov
scas
xor
roll
jo
jp
out
mov
cmpsl
pop
push
in
in
inc
pop
pop
dec
jne
push
fwait
fs
and
stos
sti
shr
lock
into
xchg
dec
push
mov
adc
jb
hlt
loopne
pop
xchg
loop
jns
or
cmp
daa
mov
fdiv
repz
or
lahf
outsb
stc
imul
call
lahf
inc
adc
and
aam
or
cmpsl
or
jo
fwait
or
jno
adc
out
or
fldl
daa
lods
dec
adc
int
js
daa
mov
jecxz
insb
lret
xor
pushf
in
jnp
mov
ret
aas
ljmp
std
addr16
cmp
stc
stc
fidivl
sub
jmp
sub
loopne
fimuls
mov
pop
pop
cmc
lahf
jbe
mov
mov
lcall
pop
and
sub
lcall
sub
push
push
lret
pop
cmp
xor
mov
jg
movb
incb
rcrb
stc
icebp
mull
scas
repnz
mov
sti
lods
jmp
mov
xchg
mov
std
pop
clc
sub
sbb
mov
loope
gs
cmpsb
sub
cmp
mov
push
jns
shr
repz
pop
repnz
jp
daa
dec
xor
icebp
push
cs
test
test
scas
aas
jp
and
pop
ret
xchg
pop
sub
and
or
std
bound
add
mov
mov
cld
cmp
aad
jnp
popa
lcall
loopne
sub
sub
jmp
xchg
test
xchg
push
ds
out
xchg
mov
les
mov
fwait
pop
data16
cltd
mov
fldt
jg
mov
dec
dec
nop
rcr
mov
mov
inc
pop
sahf
mov
test
jecxz
and
xchg
sbb
push
dec
movl
jb
xchg
xor
mov
cs
stos
nop
dec
mov
testb
xor
pop
fnstcw
cmp
pop
mov
rcrb
xchg
pop
out
sub
fcom
cmp
in
cmc
stos
mov
mov
lret
add
xor
dec
jno
mov
popf
push
rorb
jae
pop
adc
scas
lahf
stos
sbb
mov
pop
dec
scas
push
pusha
aaa
aaa
je
arpl
loope
adc
dec
xor
sti
jecxz
mov
mull
mov
mov
ffree
inc
jg
add
pop
adc
pushf
ja
jae
pop
repnz
mov
lods
lods
push
mov
loope
loop
cmp
push
mov
cltd
adc
ds
or
mov
mov
adc
pop
cmpsl
std
push
sbb
add
stc
daa
sahf
xor
jmp
jb
bound
pushf
cmp
dec
daa
mov
je
shll
xchg
add
stc
mov
aas
or
test
adc
jmp
iret
push
sub
adcl
sub
pop
xchg
sahf
add
jo
xor
mov
out
dec
lcall
inc
or
fbstp
xchg
xchg
imul
mov
scas
or
lds
in
leave
adc
add
in
out
imul
xchg
mov
inc
js
out
cmp
sub
inc
xlat
addr16
std
dec
lret
ret
push
cwtl
cmp
and
xchg
inc
jbe
js
stos
pop
sub
jecxz
mov
jg
repnz
inc
sub
test
inc
aad
repnz
mov
dec
jb
in
int3
test
add
dec
jb
xor
inc
pop
sbb
add
repz
and
out
dec
push
mov
mov
js
popf
xor
dec
xorl
cmpsl
out
cmp
mov
rcrl
pop
je
aad
pop
sbb
push
scas
push
int
sub
das
out
adc
orb
push
flds
add
and
cmp
fs
adc
mov
mov
sub
push
popa
inc
fldt
dec
push
lret
insl
pop
mov
rclb
pop
push
pop
cwtl
loop
push
jae
das
data16
std
sbb
mov
xchg
xor
hlt
test
xchg
cmp
jb
cli
jno
in
popa
cmp
inc
inc
inc
add
pop
xchg
xchg
mov
add
mov
rcll
fcoms
bound
or
ja
or
scas
cld
jp
scas
mov
push
rclb
out
adc
pop
jne
pushf
nop
adc
out
push
lods
cmc
xchg
fdivrs
lahf
xlat
cli
xor
test
outsb
push
jp
test
mov
adc
stos
jp
jg
push
stc
xorb
and
enter
lds
xor
shr
stc
and
lds
fimuls
leave
cmpsl
adc
push
mov
repnz
repz
testl
repz
scas
cwtl
addr16
lods
jne
int3
adc
cmpsb
lret
sub
sahf
ja
repnz
push
add
insb
rorl
ficompl
fsubrs
cmpsb
xor
push
and
mov
lahf
cmp
mov
out
in
add
xor
inc
mov
jmp
cltd
repz
test
mulb
jns
sub
js
rorb
inc
sub
mov
fiadds
lods
popf
jl
jae
and
dec
pushf
lret
lcall
sub
add
xor
xchg
and
std
enter
ret
fwait
xor
mov
leave
sub
cmp
xor
inc
sub
dec
fnstenv
mov
jl
add
add
push
sbb
and
cld
sub
jmp
cli
aad
jns
sub
outsb
std
ret
mov
add
push
pop
popf
sbb
xchg
mov
loope
sub
cwtl
mov
shlb
push
pop
loopne
mov
cmp
xchg
ret
lret
or
adc
cli
loop
aam
xor
mov
test
inc
mov
cmpl
mov
xor
in
jl
in
inc
test
call
fldt
in
loope
inc
fsubl
iret
jmp
xor
pop
fwait
xor
shll
dec
mov
mov
aad
or
movsb
mov
leave
out
push
xchg
mov
pop
adc
mov
loop
daa
mov
fwait
lcall
pop
fwait
shll
ds
andb
push
in
lea
leave
or
jnp
arpl
xchg
xor
mov
xchg
gs
jl
pop
dec
cmpsl
and
and
loop
mov
pop
mov
inc
sub
inc
and
outsb
jb
repnz
push
cmp
jl
push
imul
push
jae
lret
int3
push
or
xchg
iret
leave
xchg
push
daa
int3
pusha
cmpsb
and
mov
mov
cwtl
clc
mov
mov
push
ljmp
adc
outsb
adc
cmp
push
movsb
stos
cmp
popa
enter
cmp
js
fdivp
movsb
push
xchg
dec
mov
das
mov
cmp
test
mov
lds
fdivs
pop
int3
push
aaa
mov
int3
dec
je
clc
pop
or
or
sub
cmp
popf
dec
sbb
xor
out
pop
dec
mov
je
aam
pop
fucomp
mov
shlb
jp
mov
pop
or
xchg
sbb
mov
fdivs
int3
out
jno
xchg
ret
xor
mov
imul
stos
outsb
sub
fsubs
fcompl
jns
sti
sub
push
aas
dec
inc
je
and
add
test
pushf
xor
stc
mov
stc
lock
aam
shll
clc
cmpsb
cmpsb
scas
loopne
adc
mov
iret
cmp
test
nop
movl
out
hlt
lock
adc
pop
mov
inc
stos
xchg
push
in
mov
js
ljmp
pushf
jbe
pop
repz
movsb
out
popf
cmp
jb
aad
sbb
jmp
popf
pop
xor
pop
dec
dec
enter
int
out
mov
loopne
ds
int
ret
adc
movsl
or
dec
fnstenv
mov
dec
xlat
outsb
leave
in
daa
std
clc
dec
lahf
inc
mov
sub
dec
push
sub
mov
jge
push
xchg
mov
es
daa
jae
mov
inc
sub
cmp
mov
pop
pop
jne
push
sbb
jmp
iret
mov
jg
dec
inc
xchg
adc
push
incl
dec
sbb
aas
xchg
stos
dec
mov
andl
insb
ret
stos
mov
iret
mov
rorl
inc
fildll
jno
sub
jns
mov
pop
popa
pushf
lods
fstpt
int
jge
pop
or
sub
frstor
outsb
iret
jb
or
cld
xchg
call
arpl
sbb
dec
mov
jbe
mov
push
pop
aas
insl
mov
adc
clc
mov
insb
xor
inc
lcall
and
inc
dec
subb
mov
xchg
xchg
xor
andb
xor
jge
out
inc
shll
lods
jo
xor
mov
mov
ficompl
mov
into
adc
addb
decl
mov
cmc
sub
lea
jo
push
push
mov
xor
faddp
int
into
mov
mov
gs
cltd
ljmp
cmp
inc
addb
inc
je
aas
mov
mov
idiv
jns
or
add
mov
aam
mov
sbb
add
mov
cmpl
bound
adc
and
decl
and
repnz
stc
xchg
push
xchg
and
and
mov
adc
mov
movsb
pop
mov
mov
pop
inc
rcrb
adc
fucom
shrb
xlat
stos
mov
dec
inc
dec
inc
mov
pushf
int3
xchg
aam
data16
icebp
lahf
xchg
sub
or
stos
pop
or
arpl
add
pop
sbb
dec
fildl
test
and
mov
ss
mov
cmp
cmp
pop
mov
dec
in
repnz
stos
rclb
pop
xor
mov
dec
jns
aas
int3
xchg
out
ret
rorl
pop
pop
xchg
rcr
mov
fs
dec
cmc
pop
inc
xchg
scas
dec
into
shlb
insb
dec
es
and
ljmp
add
jl
sub
push
int3
popf
mov
in
ss
inc
popa
in
bound
aaa
xchg
popa
cli
gs
xor
sahf
mov
and
push
push
pop
fcoml
std
into
test
xor
xor
shl
or
stos
ljmp
mov
sub
cmp
cmpsl
jne
pop
push
shrl
out
cs
mov
shrb
adc
ss
or
and
inc
mov
les
mov
sbb
pop
pop
xchg
dec
xchg
into
cwtl
sti
sbb
rcr
ja
add
popa
cwtl
lea
leave
and
xor
shr
cmp
cmp
sbb
outsl
pop
jns
sub
or
xchg
dec
scas
jle
fwait
dec
xchg
add
test
mov
xor
shll
fiaddl
ja
cmpps
cltd
pop
pusha
pop
int
popa
fiaddl
pop
pop
mov
mov
je
rclb
movsb
scas
imul
xchg
push
mov
add
fidivs
mov
aad
pop
fdivp
adc
sbb
test
test
mov
jle
push
xchg
pop
pop
cmp
xchg
scas
ja
fsubs
fcom
scas
icebp
or
in
enter
imul
cmp
cmp
je
fneni(8087
dec
xor
ret
rol
mov
mov
repnz
in
push
cmp
ds
pushf
loope
lret
data16
sub
outsl
ljmp
enter
sbb
push
movsl
jmp
pushf
mov
dec
out
mov
call
into
popa
or
jb
push
movsb
dec
fwait
jp
aas
pop
pop
and
push
xor
push
inc
mov
call
push
xchg
mov
in
jae
pop
and
lcall
or
pop
shl
jmp
sbb
mov
cmp
mov
and
aad
xor
scas
test
xor
icebp
repz
rclb
xchg
cli
repnz
mov
sahf
out
leave
push
cmp
loopne
xchg
pop
enter
in
xchg
rcrl
dec
shlb
aam
mov
insb
in
js
mov
pop
imul
negl
std
sub
inc
push
xchg
mov
arpl
or
pop
repnz
jecxz
and
xor
jmp
add
jb
mov
fcoml
xor
out
stos
push
ret
scas
lahf
add
mov
xchg
ds
mov
sub
scas
inc
mov
fiaddl
movsl
mov
mov
repnz
sbb
jnp
sbb
jne
stos
out
xchg
lods
stc
xchg
pop
aad
stos
pop
jl
fwait
smsw
fiadds
ss
cmp
or
into
or
cmpsb
mov
cmp
loope
andl
in
sub
adcb
mov
ss
or
jle
stos
in
aam
movsl
ja
xlat
push
jo
push
aas
push
push
xlat
cmp
shll
push
jge
arpl
into
mov
sbb
fidivl
adcb
xor
fwait
sahf
cmp
fsubrl
xchg
iret
sbb
push
loopne
adc
stos
and
sbb
lcall
hlt
jge
mov
jae
loop
inc
dec
aad
dec
hlt
dec
gs
outsb
adc
lock
imul
adc
addr16
incl
mov
and
cmpsb
inc
sbb
hlt
cmp
xor
xchg
cmp
enter
inc
adc
movsw
pop
xorb
pop
ljmp
out
ja
repnz
fsubrp
inc
out
push
stos
sbb
mov
inc
ljmp
ljmp
cmp
jmp
or
sbb
insl
pop
sub
decl
test
xchg
lahf
repz
or
in
mov
sbb
cld
mov
sub
inc
dec
mov
jb
xor
or
test
mov
enter
mov
dec
pop
fildll
out
xchg
jno
lds
sub
pop
repz
int3
test
cltd
sbb
inc
pushf
out
orl
pop
pusha
into
hlt
or
outsl
push
push
mov
jmp
jg
and
mov
ds
fldl
pop
push
popa
out
inc
adc
and
loope
in
pop
sbb
icebp
mov
mov
sbb
mov
xchg
mov
cmp
pusha
add
pop
leave
in
mov
pushf
jmp
call
mov
cltd
xor
mov
push
insb
orl
push
inc
and
subl
in
mov
inc
clc
addr16
push
in
adc
push
aaa
popf
sbb
movsb
mov
jle
addr16
dec
or
jnp
ds
and
inc
aam
jle
fwait
mov
cmpsb
mov
sub
fists
les
jb
out
out
push
pusha
sbbl
mov
insb
sbb
sti
jo
lcall
fdivs
cmc
jnp
dec
shll
iret
scas
xor
clc
push
fimuls
cmpsb
lods
call
dec
mov
mov
and
into
pusha
push
jne
and
movsl
xchg
mov
mov
dec
mov
popf
pop
pop
out
cmp
hlt
adc
sub
cmp
lcall
movsb
repz
xor
iret
sub
xchg
inc
je
push
sub
mov
dec
mov
inc
pop
cmpsl
pop
stos
fsubrl
inc
jbe
pop
ss
add
jns
scas
or
mov
and
jnp
cmpl
mov
mov
repz
fdivrs
sbb
nop
add
ja
pop
jmp
cmp
hlt
or
popa
subb
xchg
xlat
mov
jno
jno
iretw
cmpsl
nop
dec
cs
mov
add
mov
loope
or
mov
push
inc
pop
neg
stos
jl
cld
mov
in
pop
xor
pop
sub
iret
jbe
rorb
mov
lret
push
adc
pop
rol
aas
jnp
mov
jge
and
mov
shll
jecxz
mov
sub
les
fstps
mov
rcrl
jae
repnz
cmpsb
bound
cmpsb
pop
dec
push
push
movsb
push
push
pop
or
pushf
mov
sbb
sub
xor
add
mov
sub
inc
add
adc
mov
loopne
or
mov
inc
pop
xchg
mov
and
cld
mov
mov
add
pop
vandnps
popf
iret
inc
lds
shll
arpl
pop
mov
lcall
out
mov
stc
stos
add
fists
lock
hlt
jno
jg
les
lret
pop
fwait
stc
outsb
jne
fsubl
mov
mov
lock
cmpsb
insb
pop
jmp
xchg
sti
lods
mov
lahf
sti
stos
cwtl
and
aam
fisubl
xchg
push
addr16
inc
mov
and
insb
out
pop
sbb
mov
dec
pop
ds
xor
pushf
jg
or
jl
movsb
pop
sti
movl
push
inc
sbb
jg
add
jo
jle
rcl
fcoms
mov
mov
mov
out
dec
pushf
repz
pop
jmp
ss
xchg
clc
mov
out
adcb
adc
mov
out
xor
fs
mov
xchg
mov
and
fidivs
enter
mov
fwait
mov
xor
fcomps
testb
or
mov
imul
pop
js
aas
inc
mov
out
mov
mov
insb
mov
add
push
fprem
xchg
cmp
mov
cmp
sti
or
dec
pushl
daa
mov
push
push
xlat
cld
mov
or
mov
imul
popa
pop
sub
imul
xchg
cmc
mov
lret
out
aam
leave
sbb
popf
pop
pop
dec
ds
push
jno
fildll
insl
imul
xchg
xchg
mov
dec
mov
jmp
jo
mov
ss
fwait
jo
stos
das
add
or
js
mov
dec
stc
sti
inc
jne
movl
sbb
cld
adc
xor
out
lea
push
xor
sub
aam
in
leave
mov
pop
mov
lock
shll
jo
push
xor
xchg
add
jle
aad
inc
jmp
xlat
cmp
imul
push
inc
mov
mov
mov
sarb
xchg
outsb
stos
inc
insl
push
cwtl
jg
adc
dec
mov
ljmp
sbb
stc
mov
xor
popf
pop
in
test
lods
shl
and
jg
outsl
pop
inc
mov
in
jle
rcrl
add
mov
stos
leave
inc
xchg
dec
xchg
adc
sub
inc
jae
push
sahf
sub
ret
dec
lret
out
sub
xchg
filds
jmp
fstp
ret
xlat
push
jg
pusha
mov
pop
decl
lds
cmp
shrb
mov
mov
inc
mov
mov
test
leave
inc
je
gs
push
jmp
push
pop
sub
jl
cmpb
imul
inc
sbb
cmpsb
adc
sti
out
movsb
aas
addl
filds
push
out
inc
pop
adc
inc
rcll
mov
mov
je
push
lods
call
pop
xadd
filds
int
mov
test
sub
repz
mov
movsb
mov
jge
stc
lret
stos
fwait
and
and
mov
adc
jae
cli
cwtl
roll
mov
jmp
mov
xchg
and
out
outsl
xor
das
jmp
dec
xor
cli
xorl
mov
and
loop
inc
push
fsubs
rep
ds
push
jnp
scas
movb
lods
dec
mov
inc
xor
xorl
iret
inc
xchg
cmp
lahf
mov
nop
ret
or
loop
jge
cltd
hlt
clc
cmpsl
jge
jl
dec
fnstcw
mov
int3
or
dec
cltd
mov
movsb
sbb
imul
ljmp
dec
xchg
push
pop
sub
mov
imul
stos
add
jo
clc
mov
into
push
push
mov
dec
xchg
dec
imul
fsubp
movb
jbe
inc
ljmp
sbb
insl
xchg
icebp
je
jb
fisttpl
cmovo
mov
sarl
inc
sbb
add
mov
push
push
push
sub
push
xor
cmpb
inc
int3
mov
cmp
adc
fwait
or
lret
mov
cmpsl
mov
inc
sub
dec
jl
leave
pop
ret
in
xchg
adc
push
test
ja
in
cwtl
cs
aas
dec
mov
mov
jne
cmpsl
pop
cmp
loopne
inc
bound
repnz
lods
mov
mov
adc
fsubrl
push
sub
xor
add
loope
xchg
dec
je
xchg
inc
ficompl
aam
ret
shrb
test
jmp
sbb
out
ret
fsub
xchg
dec
cmp
pop
addl
and
repnz
sbbl
xchg
cmp
xchg
dec
mov
xor
imul
dec
popa
mov
add
imul
mov
xor
out
gs
icebp
xchg
lock
or
cld
xchg
or
sub
adc
sahf
pushf
or
or
mov
jle
adc
icebp
sbb
adc
cli
shlb
pop
mov
dec
inc
xor
imul
mov
and
dec
xor
aaa
xchg
xchg
mov
sbb
iret
xcrypt-ecb
cmpsl
dec
sbb
nop
imul
enter
hlt
xchg
movsl
adc
jg
mov
ret
fidivl
mov
xchg
xlat
lods
test
sbbb
cmp
rol
test
aad
mov
push
imul
fdiv
loop
in
daa
jne
inc
int
dec
testb
cmp
mov
cmpsl
out
mov
cmp
jmp
shll
movb
ret
ds
imul
mov
or
hlt
xchg
or
lods
push
mov
pop
adc
loopne
or
pop
cmpl
lahf
hlt
jnp
mov
aad
or
cmp
mov
cmp
lock
repnz
push
xchg
lea
mov
movsl
repz
lods
pop
jno
jle
cmp
in
out
push
dec
into
xchg
lods
xchg
addr16
fisttpl
adc
jns
sub
lds
ret
fsubs
ja
jg
mov
repz
lods
sbb
test
loopne
push
imul
mov
std
push
xor
and
mov
enter
fimull
sub
mov
nop
jmp
mov
and
je
cmp
adc
sub
ljmp
in
mov
lods
daa
xchg
or
ds
out
and
add
xchg
xorb
outsb
sub
movsb
mov
in
fcoms
in
gs
fimull
sub
lock
les
lods
fisttps
das
mov
imul
adc
pop
pop
sub
cmpl
xlat
pushf
add
sbb
inc
adc
sti
xchg
mov
clc
shlb
jns
push
pop
adc
std
shr
shrb
outsb
dec
out
fmul
sub
mov
mov
rcll
aas
adc
push
mov
nop
mov
or
bound
mov
xbegin
and
cmpl
imul
mov
cwtl
mulb
pop
es
inc
hlt
mov
or
xor
test
push
mov
stos
or
push
movsl
fwait
adc
xlat
inc
mov
or
xchg
sub
pop
push
fs
jp
flds
aaa
mov
lea
push
fidivrl
scas
ja
mov
arpl
jmp
and
es
add
inc
rcrl
mov
test
clc
adc
add
jne
cmp
add
pop
aad
or
xchg
into
adc
mov
cmpb
sub
add
out
pop
add
lea
js
call
imul
xlat
adc
hlt
enter
xchg
stc
push
scas
int3
mov
sbb
jno
not
call
adc
inc
xchg
pop
add
pop
jge
mov
jge
rorl
adc
aas
cmp
lahf
jno
mov
sbbb
add
or
xor
push
insb
sti
mov
or
cltd
movsl
mov
jns
roll
faddl
add
xor
add
cs
stc
movsl
mov
jbe
adc
shlb
jge
and
adcl
add
int
sbb
add
mov
xor
bound
xor
test
notb
mov
test
push
or
sbb
xchg
push
pushl
sahf
loop
sbbb
cld
mov
sbb
mov
stc
fidivrl
jp
jl
daa
fnop
jb
sbb
sub
xor
repz
mov
pop
ret
lahf
and
cmpb
pusha
fldt
cmpsl
adc
addb
or
inc
imul
ja
dec
arpl
mov
mov
roll
jne
cmp
jecxz
cmpb
push
pusha
jns
daa
mov
add
xor
dec
mov
and
dec
cmp
repz
dec
cmp
adc
leave
sbb
fistpl
or
inc
es
aas
add
pop
xchg
pushf
or
jb
jae
and
in
pop
icebp
xlat
decl
mov
xor
inc
jge
xor
insb
mov
jg
push
aaa
mov
push
mov
push
addb
cmpsl
leave
cmc
cli
es
xchg
into
es
sub
xchg
popl
subb
mov
out
imul
cmpl
repnz
lock
int3
mov
pop
xor
push
fwait
fs
adcl
ja
int
rep
jns
jge
xor
add
bnd
lcall
into
pop
stos
jbe
jge
subl
loope
cmp
dec
or
loopne
scas
jmp
sub
mov
nop
cs
dec
test
out
or
jecxz
inc
cmp
xor
cltd
inc
jnp
pop
jo
adc
icebp
and
mov
ficoms
inc
mov
jb
inc
sbb
je
cltd
addr16
cmpsl
test
imul
cmc
mov
inc
adc
adc
daa
dec
jmp
das
cmp
sbb
push
mov
test
es
aad
cmp
stc
and
jne
inc
and
lods
jle
xchg
les
push
cmp
mov
out
mov
sahf
aad
mov
repnz
xor
dec
xor
sbb
mov
xchg
cmc
into
repz
mov
pop
ds
test
fisttpl
loope
and
mov
inc
add
mov
bound
push
xchg
push
icebp
int3
inc
jns
popa
xchg
test
mov
addr16
and
loopne
jbe
xor
mov
mov
cld
adc
mov
dec
jae
jno
cmp
xchg
xor
or
scas
aad
fstps
cltd
fnstsw
sbb
inc
xchg
jecxz
iret
or
dec
in
int3
repnz
cmp
mov
pop
sahf
fisubs
mov
lret
xchg
cmp
daa
mov
and
ja
dec
fidivs
shll
pop
pop
stc
aad
jae
or
push
mov
or
xchg
mov
xor
mov
mov
icebp
and
pushf
xor
fsubrs
inc
int
jle
mov
aam
xchg
sub
inc
hlt
iret
jno
mov
lcall
mov
imul
popa
add
jns
or
inc
push
dec
jo
or
movsb
sub
lods
sbb
push
mov
mov
imul
test
xor
clc
pop
std
pusha
mov
shlb
push
push
bound
cmp
rolb
sbb
cli
mov
lods
popf
push
stos
mov
dec
in
ds
xchg
and
movsl
dec
sub
inc
test
mov
pop
insl
sbb
jno
mov
out
das
jo
stos
leave
xor
repnz
add
mov
clc
sub
xor
push
out
enter
cmp
adc
movsb
fists
mov
arpl
pop
dec
xor
incb
in
adc
push
js
cs
mov
cmpsb
mov
clc
push
cmp
sbb
xchg
sbb
pop
nop
pop
loopne
xor
enter
adc
imul
daa
jns
xchg
jmp
data16
int3
and
sbb
sbbb
xorb
shl
dec
pusha
jns
pushf
lahf
sub
pop
inc
int3
aad
dec
mov
insl
rep
out
data16
pop
push
notb
pusha
xor
imul
in
dec
jecxz
xchg
mulb
mov
xor
pushf
inc
dec
int
cmp
lods
cmc
fs
ljmp
cmp
mov
divl
cltd
xor
mov
pop
in
cld
test
add
sbb
sbbb
mov
jne
ja
mov
das
sbb
fs
jne
incl
aaa
jge
ja
sbb
mov
mov
or
inc
test
pop
bnd
dec
stos
loope
mov
loope
mov
mov
jb
gs
arpl
mov
lea
incl
or
dec
dec
fsubr
sbb
loop
mov
inc
idivb
enter
inc
scas
and
xor
pusha
mov
aaa
dec
movsl
psadbw
mov
into
push
aam
push
sub
jbe
push
push
daa
cld
inc
dec
inc
mov
sbb
mov
scas
orb
mov
test
jle
jb
mov
arpl
prefetcht1
adc
sbb
ficompl
in
aam
or
push
rcrl
sub
ss
add
mov
loop
fidivrs
adc
idivb
inc
out
dec
cmpsb
dec
inc
leave
push
mov
test
inc
lahf
push
xor
or
cli
xchg
jmp
lds
loopnew
loop
aam
cmpsb
jo
fstpl
inc
mov
scas
dec
pop
int3
or
xchg
fisttps
jnp
adc
inc
mov
adc
imul
xor
icebp
repz
mov
push
mov
das
outsl
popa
add
xchg
xlat
lahf
adc
add
sahf
inc
sub
dec
xor
or
cmpsl
scas
ret
cltd
popf
lods
cld
inc
cmp
out
lods
popf
fstpl
mov
mov
sti
xorl
cwtl
pop
dec
cli
mov
pop
or
xchg
dec
cmpsl
xor
xchg
mov
fidivs
pop
pop
jp
movsb
pop
mov
cwtl
stc
dec
sahf
mov
loope
call
shlb
push
cmpsl
jnp
aad
mov
add
std
je
int
cli
sub
xchg
sub
jp
aam
aas
mov
pop
xchg
jecxz
adc
cs
dec
adc
es
iret
lea
out
addl
out
sub
dec
pop
jg
outsl
nopl
std
push
ss
xor
mov
mov
imul
popf
cmpsl
lcall
enter
popf
push
pop
dec
and
xchg
xor
pop
add
pusha
xchg
insl
cmpsb
scas
insb
cld
mov
push
cmc
ds
dec
movsl
addb
stc
movsb
cmp
jmp
xchg
sarl
shlb
out
sub
jb
push
adc
cwtl
jne
incl
jnp
sbbb
push
das
xchg
pop
mov
add
pop
jb
iret
add
xchg
lods
lcall
adc
std
outsl
inc
xlat
jg
cmc
cmpsl
add
leave
or
add
lods
and
test
add
xchg
and
repnz
jecxz
or
jns
add
and
inc
inc
xor
lea
frstor
jnp
lahf
mov
pop
jo
popf
loopne
jmp
or
jb
scas
xor
fmuls
ret
pop
and
and
bnd
pop
push
pop
pusha
sbb
js
dec
loop
cs
rcr
lods
xchg
test
das
bnd
and
out
imul
add
sub
cmp
jg
clc
lahf
fcomi
fimuls
adc
out
lcall
imul
adc
mov
cmp
dec
xchg
js
rclb
in
dec
fwait
loop
hlt
sub
loope
mov
imulb
pop
stos
mov
shl
add
ss
push
out
mov
sbb
iret
sbb
addr16
sub
or
fwait
sbb
adc
mov
dec
cmpsb
pusha
sti
sub
xorps
pop
iret
push
divb
mov
das
mov
push
loope
fcoms
jl
mov
push
pop
and
int3
pushf
vmread
add
loopne
xchg
xor
sub
rolb
mov
sub
xchg
movsb
jp
xor
xor
mov
jg
xchg
hlt
lods
es
xor
lods
push
sahf
mov
in
int
out
dec
gs
mov
ds
or
dec
push
pop
mov
cld
fiaddl
add
fildll
popa
iret
dec
cld
xchg
push
test
jl
and
cmpl
les
xor
inc
jle
mov
popa
and
pop
aas
lret
aas
xchg
push
lahf
cwtl
stos
mov
push
sub
lods
mov
sbb
popa
aaa
sub
hlt
cmp
enter
fcmovne
dec
out
xchg
or
mov
mov
sub
dec
mov
fstps
test
bound
cmp
adc
mov
adc
fs
aam
mov
ret
push
pop
aas
push
xchg
pop
cmp
jmp
xchg
nop
rolb
inc
xchg
ret
in
push
xchg
stos
neg
roll
std
and
xchg
std
movsl
ja
enter
sub
sbb
cltd
movsl
or
sub
inc
jmp
pop
inc
imul
pop
es
xor
mov
lds
mov
outsl
and
add
dec
jns
lret
sbb
add
xchg
div
dec
push
mov
scas
xchg
shrl
dec
push
outsb
imul
add
outsb
jmp
out
ret
sub
mov
lods
ja
es
push
push
nop
adc
mov
mov
cmpsb
mov
cld
in
xchg
jnp
jo
cli
aaa
mov
jnp
cmp
or
fsubs
fsubs
lock
pop
int
mov
cltd
pop
xor
mov
and
sub
test
ljmp
mull
enter
sbb
jno
bound
cmp
bound
sbb
stc
pop
es
jecxz
xchg
cmpsb
mov
fcoml
outsb
adc
adc
pop
add
repz
lock
loope
or
in
xchg
pop
pop
push
dec
ss
inc
pop
and
movsl
aas
rclb
xchg
out
and
sti
jmp
mov
leave
mov
lahf
dec
out
sbbb
notl
jg
xchg
leave
pop
gs
push
test
xchg
push
sub
int
pushf
repz
xchg
sarb
push
inc
adc
imul
roll
pushf
mov
mov
add
outsb
cli
mov
inc
add
sbb
xor
sbb
shll
add
jle
push
jne
mov
adc
mov
lea
shlb
push
movsb
test
stc
adc
push
xor
sbb
daa
int
js
fldl
dec
pop
js
cwtl
clc
cmp
mov
test
dec
int
jp
cwtl
dec
sbb
leave
add
and
xchg
pop
aad
sbb
mov
fnstsw
and
inc
mov
push
mov
test
or
stc
xor
dec
stc
lods
mov
pop
iret
inc
das
adc
jmp
pop
mov
loope
je
insb
gs
pop
or
loopne
stc
jge
mov
scas
call
and
ljmp
aam
out
sub
out
and
mov
je
dec
mov
test
inc
rcrl
loopne
inc
out
xchg
rclb
fmul
enter
or
xchg
inc
ret
fwait
adcb
mov
inc
mov
test
and
cmp
sahf
adc
test
ficomps
mov
call
mov
out
xchg
mov
cwtl
jb
adc
fdivs
dec
rorb
movsb
dec
jne
or
aaa
repnz
sub
xchg
sub
jae
or
sbb
and
imul
sub
and
xor
sbb
mov
and
mov
mov
mov
and
mov
insb
ror
loopne
xchg
fmull
mov
arpl
pop
push
pop
addr16
ffreep
xchg
sub
insl
negb
loop
int3
inc
add
or
pop
aaa
aad
in
and
divb
jmp
je
mov
xor
cmp
andl
sarl
xor
cmp
lea
out
pusha
stos
sbb
and
fldcw
test
rol
mov
cmpsl
shl
mov
mov
jo
mov
lock
jne
jnp
jb
jg
push
cltd
out
cmpsb
loope
jle
or
iret
fildll
xchg
mov
adc
push
lcall
ror
cmp
jle
mov
dec
bnd
lds
ja
inc
popa
rclb
popa
adcl
test
adc
popf
push
pop
xor
jne
xor
leave
pop
daa
call
fsubs
enter
sub
inc
rorb
insl
sbb
scas
sbb
cmp
cmp
adc
xchg
jb
add
into
lea
nop
dec
ss
sub
jb
pop
adc
inc
push
and
jb
addr16
xor
lret
mov
dec
fmuls
ds
mov
arpl
sub
sub
scas
push
sbb
or
test
cmp
dec
rcl
and
jnp
out
xor
pop
shll
mov
cwtl
decb
xchg
adc
cltd
jl
mov
test
xchg
push
add
mov
jno
std
pop
jp
mov
imul
dec
adc
repnz
popf
dec
jecxz
jns
mov
mov
mov
cmpsl
mov
adc
mov
popa
push
outsb
dec
pop
jmp
sub
sbb
sbb
dec
gs
gs
mov
rcll
xor
dec
jnp
in
lret
fisubrs
adc
mov
lods
lea
out
out
icebp
add
mov
xchg
xchg
cli
clc
pop
in
add
pushf
push
push
add
cmp
cmp
lock
aam
jecxz
xchg
aad
mov
add
xor
mov
jo
out
sub
pusha
pop
cmp
push
ss
pop
add
fs
mov
icebp
xchg
lcall
fbld
repnz
scas
fidivl
xchg
enter
dec
ljmp
arpl
les
sbb
pop
mov
pushl
leave
jecxz
mov
xor
sbb
fdivs
test
adc
mov
mov
cmp
mov
int
jecxz
jb
mov
and
jge
lods
fwait
aam
pop
sbb
les
or
sub
fmull
add
scas
repnz
daa
or
pop
data16
adc
inc
sbb
pop
fwait
xor
popf
enter
repnz
pop
xchg
ja
lea
pushf
sub
scas
mov
jp
sub
dec
xlat
jp
rorl
scas
xor
mov
andb
imul
je
or
add
jge
cmc
rolb
mov
sub
sub
das
mov
mov
lock
mov
fisttps
scas
inc
mov
arpl
pop
pop
aas
fwait
cmp
rcr
sete
adcb
pushf
xor
aas
lods
fwait
cld
and
mov
mov
jb
adcb
out
lcall
or
inc
and
ljmp
sbb
mov
push
stos
fs
fidivl
lods
add
js
shlb
ss
arpl
sbb
enter
jb
mov
lds
mov
fwait
xchg
cld
loopne
xlat
dec
lea
aad
or
loop
scas
adc
sub
and
xor
xchg
push
cmp
cmpxchg
mov
sub
inc
pop
test
mov
ret
bound
fcmovnbe
inc
jns
movsb
in
cmp
push
mov
stos
lods
mov
push
mov
add
jno
mov
push
insb
or
lods
push
dec
adc
inc
inc
or
jne
leave
mov
and
dec
mov
loope
nop
ss
out
and
jae
xchg
das
out
mov
out
add
lahf
and
sti
xor
dec
call
ficomps
faddl
dec
out
jl
dec
mov
ficoms
and
lods
mov
cmpsb
xchg
mov
scas
adc
call
push
aam
mov
lret
ficoms
xchg
arpl
sub
stos
xchg
jne
sti
xchg
sub
gs
int
jb
sti
mov
sbb
outsb
sub
sub
int
xchg
xor
sbb
out
ret
or
pop
cmp
fnsave
cmp
cmp
pop
jne
mov
jle
push
subb
mov
ss
xchg
out
mov
mov
xor
xchg
clc
mov
push
sbb
daa
and
adc
bound
call
enter
sub
add
mov
ret
xor
hlt
mov
sub
dec
mov
cmp
popf
add
or
sub
push
push
inc
sbb
cmp
clc
mov
or
sub
fisubrl
call
imul
aaa
dec
pop
mov
fildl
ret
in
xchg
or
arpl
jecxz
pop
cmc
push
test
ljmp
xchg
push
into
out
out
xlat
loopne
push
ljmp
out
mov
pop
sub
mov
inc
xor
mov
jno
dec
or
adc
pusha
mov
pop
inc
jnp
test
call
sub
pop
inc
adc
pop
mov
adc
pop
add
ss
arpl
mov
inc
test
xor
in
cmp
or
mov
mov
sbb
lods
mov
xor
inc
dec
pop
lcall
cltd
or
imul
fxch
mov
pop
cld
adc
fimuls
insb
jo
aas
hlt
inc
sbb
mov
xor
outsl
repz
std
sub
out
out
call
pop
jbe
xlat
pop
jmp
outsb
lahf
sbb
dec
dec
imul
lods
mov
pop
push
jmp
inc
sub
mov
int
cwtl
add
lcall
ja
xor
or
int3
cli
sub
testl
inc
lret
lret
pop
enter
lret
bound
cmp
mov
cmp
ffreep
int3
sbb
js
xchg
outsl
add
mov
xorl
or
arpl
test
dec
jecxz
jb
xor
push
or
jae
mov
mov
mov
shl
test
aaa
push
fisubl
out
pop
pop
xorb
lcall
sahf
xor
pushf
jno
or
imul
cmp
in
or
mov
scas
mov
repz
xor
jecxz
scas
xor
insl
sub
imul
sub
lret
mov
sub
jle
push
cmp
cmp
je
pop
mov
insb
sahf
mul
add
xchg
xchg
or
mov
aad
cmp
rcl
pop
add
aad
aaa
add
xchg
dec
xor
cltd
pop
push
shrb
outsb
mov
mov
push
into
and
adc
mov
inc
inc
jno
out
sbb
aam
xchg
mov
xlat
mov
les
dec
mov
sbb
push
jns
xor
lcall
cs
adc
or
arpl
dec
repnz
call
repz
lds
mov
ds
repz
adcl
xchg
mov
loopne
rcrb
lds
jbe
add
jl
stos
adcl
sub
out
iret
ss
sub
roll
outsl
cmp
das
xor
dec
cwtl
sub
cli
sbb
and
je
fdivrs
mov
lahf
and
shlb
inc
lock
insl
inc
push
adc
add
cmp
add
adc
dec
pop
mov
xor
sub
insl
lods
push
xor
es
outsb
sbb
sti
xor
sub
fwait
adc
cwtl
lods
xlat
or
sub
pop
push
and
mov
imul
lret
pop
or
sbb
jo
or
dec
push
loop
test
xor
dec
sbb
xor
push
ja
roll
jge
and
sahf
sbb
sbb
cmp
push
adcl
inc
lcall
inc
enter
js
xchg
xchg
sub
mov
imul
and
mov
nop
jnp
scas
fstps
cmpxchg
out
int3
sbb
jne
dec
movsl
lods
int
add
fcmovbe
xlat
int3
test
sub
pop
icebp
lock
out
mov
pop
insb
ljmp
jae
mov
je
sbb
xlat
mov
cmp
jmp
add
pop
cmc
mov
or
test
and
addr16
sbb
movsb
sahf
aaa
xor
push
sbb
pop
fdivs
fwait
push
and
mov
xor
push
mov
jae
mov
std
fsub
adc
push
push
cld
add
mov
sti
add
cmpsb
xor
rcrb
ja
enter
add
mov
fisubrl
push
push
leave
push
push
ljmp
jne
pop
pusha
gs
inc
stc
ja
pop
dec
call
pop
mov
ljmp
aad
inc
movsb
in
xor
xchg
sub
mov
or
add
sahf
cs
xchg
test
sarl
push
test
lret
jnp
insl
add
arpl
add
in
sub
or
pop
push
pop
mov
push
lret
addl
int3
adc
ss
enter
hlt
adc
test
inc
shll
in
in
sahf
arpl
out
pusha
shl
mov
dec
lock
inc
jecxz
out
xchg
ret
lds
outsb
shlb
mov
js
push
dec
or
dec
mov
sahf
adc
push
add
imul
or
pop
mov
or
add
ja
aam
xchg
jnp
imul
mov
sbb
fstps
xor
or
aam
mov
pop
hlt
repnz
popa
inc
fmuls
aad
push
jb
sub
insl
mov
aam
jle
and
mov
add
push
cmp
scas
sbb
dec
push
out
mov
xor
pop
loop
jmp
stos
jbe
addl
push
pop
adc
cmp
or
jno
daa
mov
xchg
hlt
jle
aad
adc
fsubl
xchg
cmp
sub
jns
out
mov
cmp
xchg
push
mov
loopne
push
mov
pop
and
cs
mov
mov
lea
sub
push
xchg
mov
xchg
into
sub
sub
xchg
das
mov
push
mov
xchg
in
push
sub
out
inc
xor
dec
js
mov
inc
xchg
ljmp
xlat
sbb
mov
ds
dec
leave
lret
cmp
cmp
scas
cmp
dec
loopne
ds
cmc
enter
pop
inc
rcll
lds
sbb
mov
mov
pop
sbb
shll
jl
pop
movsl
int
cltd
mov
jl
and
aam
push
dec
mov
cmpsb
pop
out
dec
sub
cmp
sub
fidivrl
test
sub
xlat
mov
xchg
jo
or
cld
mov
mov
dec
daa
mov
mov
scas
xor
or
mov
inc
add
add
fldt
add
fstl
jne
jbe
pop
enter
adc
and
jbe
test
xchg
mov
shll
pop
xchg
aam
mov
jecxz
inc
insb
aam
mov
add
test
stos
adc
and
jge
rcll
idivb
repz
mov
push
shrl
mov
jae
mov
lods
inc
push
sub
loop
shr
xchg
movsb
xchg
cmp
fnsave
mov
adc
jne
jecxz
cmp
lds
je
movsb
fsub
test
loop
insl
push
mov
xor
inc
pop
dec
leave
jnp
je
xchg
add
push
punpckhdq
and
inc
adc
jnp
mov
jno
hlt
pop
push
sub
stos
adc
cs
dec
lret
lds
shrl
jns,pn
or
sbb
cli
mov
insl
nop
bound
pushf
pop
pop
sbb
jo
mov
xchg
out
cmp
rcr
out
mov
and
sar
cwtl
dec
inc
test
xor
mov
sbb
sbb
sbb
sbb
xchg
loope
stos
jnp
into
cmp
xlat
mov
lret
or
mov
push
jno
inc
mov
jle
aas
and
fs
ds
adc
fcoms
int3
xor
and
xchg
or
inc
outsl
sti
dec
bound
iret
lret
cmp
mov
jecxz
inc
pop
aam
fwait
sub
pop
test
sahf
dec
jnp
push
push
iret
pop
mov
inc
cs
pusha
loop
cmp
pop
out
pop
sbb
sub
cmp
push
xlat
dec
leave
and
inc
lock
js
and
jne
and
or
adc
mov
inc
pushf
mov
cmp
mov
mov
mov
out
mov
call
adc
dec
and
rorb
sub
flds
mov
int3
xchg
push
jnp
and
shlb
mov
in
xchg
push
in
xor
inc
test
lcall
shlb
push
push
mov
mov
xchg
lock
daa
mov
sbb
nop
into
ss
fbstp
fbld
popa
test
fidivl
xor
icebp
ror
adc
mov
push
xchg
ficoml
lret
data16
jl
and
ds
fisubs
pop
daa
or
rcll
dec
das
inc
ja
cmp
push
nop
mov
dec
in
test
add
adc
nop
xor
add
ja
imul
adc
in
inc
dec
stos
adc
data16
data16
xlat
cmp
in
jnp
sbb
sbb
notb
bound
or
stc
cs
add
stos
ja
and
push
lret
jb
outsb
mov
jmp
mov
jg
sbb
flds
test
insb
out
into
mov
shlb
push
and
xchg
xchg
mov
cmc
sbb
pop
pushl
mov
jle
push
sub
jne
push
push
mov
mov
or
adc
pushf
aaa
lds
loop
test
ljmp
xchg
xchg
sub
les
add
push
jmp
sub
cs
fsubr
jo
mov
mov
cmp
cmp
pop
out
dec
mov
dec
call
cmp
push
jnp
dec
outsl
nop
adc
xor
movsl
pop
lret
out
cmc
add
adc
jp
xchg
jae
mov
cmp
enter
push
pop
cmpsb
xchg
inc
cmp
pop
pop
sub
sub
fldcw
adc
popa
inc
xor
push
enter
sub
inc
fnstsw
cmp
sub
dec
jge
pop
test
xlat
push
adc
pop
lods
xchg
out
xor
dec
ds
clc
fldl
sub
xchg
pop
jmp
pop
fisttpll
mov
scas
js
das
nop
mov
lods
or
push
arpl
mov
mov
sbb
scas
sbb
inc
mov
jle
push
loop
js
aam
mov
imul
sbb
sbb
mov
loopne
std
lret
dec
sbb
shlb
jge
mov
mov
scas
pop
pop
fpatan
pop
inc
adc
pop
cld
mov
ss
outsb
in
not
popa
dec
lret
nop
add
jne
jl
pop
aas
mov
shrl
cmp
push
mov
push
or
and
mov
rclb
fs
imulb
ds
sbb
sbb
hlt
add
or
cli
inc
popf
push
outsb
mov
push
shrl
orl
xchg
movsb
cmp
aam
cmp
cmp
lds
lret
les
jo
loopew
into
cmpl
ficoml
push
rclb
inc
sbb
mov
in
in
push
dec
leave
sub
xlat
lds
xchg
or
mov
test
daa
mov
in
push
repnz
and
dec
insb
or
and
cmp
leave
xchg
lock
jp
xorl
sub
xchg
adc
sbb
incb
nop
mov
out
and
or
imul
push
mov
and
or
cmc
push
movsb
adc
mov
mov
push
sub
jg
outsb
inc
lea
mov
mov
loop
cmp
sbb
mov
sbb
mov
sub
mov
sub
mov
pop
adc
adc
dec
js
or
mov
mov
dec
outsl
call
insb
jmp
js
dec
xor
out
decb
and
push
imul
jge
cli
pop
arpl
enter
es
out
mov
xchg
movsl
js
shl
push
xor
in
push
or
cmc
jo
xchg
mov
mov
jo
daa
sub
mov
loopne
daa
jns
mov
push
mov
test
or
std
lea
push
push
rcll
jae
cmc
xor
imul
icebp
and
js
push
pop
cmp
push
pop
add
or
add
stos
add
mov
cmp
mov
adc
imul
or
sub
sbb
xlat
ret
push
js
xchg
add
cmc
xchg
xchg
mov
insb
out
bound
pop
imul
mov
pop
mov
fstpl
adc
sbb
dec
mov
adc
sbb
in
jno
push
jecxz
inc
int3
jmp
or
lds
aaa
sbb
xchg
pop
fdivr
addb
lcall
mov
dec
mov
pop
imul
sbb
mov
mov
sti
push
hlt
dec
pushf
mov
cmp
dec
pop
add
push
repz
out
outsb
mov
and
cld
and
testl
pop
push
insl
fsub
popf
movsl
mov
stc
mov
imul
jb
or
xlat
pop
nop
fistpll
or
in
out
sub
push
adc
cmpb
or
sub
xor
sub
mov
mov
and
push
xor
movsb
repz
inc
pop
mov
sarb
mov
xchg
aaa
pop
pusha
loope,pn
cmpsl
stc
adc
jb
rcl
jge
pop
mov
pop
sbb
loope
mov
mov
mov
lods
push
scas
sub
cmc
sbb
subb
adcl
shlb
sbb
outsb
mov
repnz
fstps
pushf
std
add
inc
lods
dec
aad
xchg
lret
out
imul
add
in
imul
data16
add
in
pop
mov
pop
inc
fbstp
jle
push
fistps
sub
pop
in
xchg
icebp
sarl
jne
shrl
sbb
out
sti
xor
jo
stos
dec
inc
xchg
cmpsl
roll
movd
dec
jbe
mov
mov
popa
push
mov
je
jl
and
add
outsb
int
movsl
sahf
sbb
sbb
cld
rclb
adc
mov
data16
ljmp
push
dec
xchg
repnz
add
adc
pop
dec
push
and
lock
sbb
xchg
xchg
dec
into
cmpsl
int3
pushf
sbb
and
pop
imul
jbe
outsb
push
jns
inc
nop
mov
lret
mov
outsb
pop
vmovupd
cmpsb
test
hlt
cmpsb
leave
loopne
jle
mov
add
jne
add
lods
or
cwtl
push
mov
cwtl
pop
cmpl
jle
xchg
jnp
lods
mov
mov
nop
imul
sbb
mov
adc
sahf
xchg
and
xor
shll
cmp
sahf
xor
je
or
jne
mov
sbb
push
iret
jecxz
scas
push
orl
xchg
mov
data16
rorl
or
sub
adc
add
insb
mov
lret
dec
pop
dec
sbb
cmpsl
ret
dec
jns
std
adc
xchg
and
xchg
jo
call
lock
stc
cld
jnp
imul
shl
stos
jg
inc
cmp
mov
mov
sub
imul
addr16
popa
inc
aaa
jl
mov
xor
and
in
or
es
cmp
sub
jae
mov
cmp
cmp
mov
adc
add
adc
xchg
inc
mov
lret
in
insb
push
daa
xor
dec
mov
sub
cmpsb
bound
and
lods
cmp
jg
and
mov
lock
hlt
mov
ljmp
adc
dec
das
lret
jp
sub
add
or
mov
popf
aam
outsl
or
cmp
dec
jns
sahf
sbb
test
mov
sub
mov
xchg
das
rorl
into
cmpsl
clc
cmp
shl
cmp
cmp
ret
cwtl
cmc
popf
clc
les
mov
jnp
mov
add
mov
xchg
ljmp
daa
add
cmpl
push
xlat
mov
scas
rol
hlt
aad
xchg
enter
add
les
shrl
mov
xor
and
lret
lret
mov
stos
jl
movsb
and
shlb
scas
rol
adc
ljmp
popw
nop
push
pushf
adc
enter
loop
ret
adc
jo
dec
sbb
and
adc
push
int3
jbe
clc
repnz
xor
xor
bndstx
or
xchg
push
add
movsl
mov
or
sub
mov
sbbl
out
fbld
bound
jbe
pop
mov
cmpsl
mov
aaa
pusha
inc
jecxz
loopne
sub
mov
jmp
sub
mov
and
jmp
test
adc
and
repz
stc
mov
xor
dec
pop
pop
hlt
rol
mov
pop
cmpsb
or
mov
loope
inc
inc
add
pop
insb
mov
jnp
pop
inc
sub
cmp
mov
and
sbb
pop
adc
dec
iret
cmp
and
orl
das
dec
jmp
inc
inc
icebp
stos
stos
jno
pop
sbb
inc
jge
fildl
outsb
sub
jmp
xchg
fisttpll
sbb
dec
mov
cmpsb
pop
mov
aam
jne
or
cmp
in
dec
pop
ds
ss
pop
je
sub
int
cmpsb
xchg
push
inc
push
add
dec
sbb
outsl
push
xor
mov
sub
sbb
jae
call
loope
mov
mov
or
mov
fidivrl
jecxz
or
mov
inc
mov
add
cwtl
push
gs
popf
or
mov
mov
fsts
jb
or
or
sub
repz
lcall
nop
and
jmp
xor
pop
cmpsb
cwtl
xchg
rcrb
mov
test
inc
xchg
mov
or
and
dec
fldl
jmp
in
dec
sub
jp
stos
mov
xchg
leave
fadds
mov
mov
adc
loopne
and
mov
repnz
jae
xchg
stos
pop
gs
add
or
add
into
arpl
dec
pop
pop
push
xor
cmp
inc
pop
push
test
mov
mov
xchg
aaa
xor
and
test
jl
gs
clc
std
xor
test
mov
das
mov
dec
test
mov
lret
sahf
xchg
sub
hlt
cli
enter
lods
fcmove
sub
sbb
je
pop
xor
sbb
cwtl
jne
mov
shrl
add
xor
dec
out
popf
xchg
inc
scas
lret
mov
and
ret
js
aam
pslld
mov
pop
icebp
pop
sbb
test
in
rol
pop
mov
stos
enter
stos
cmp
mov
fistpl
ja
push
jmp
xchg
std
inc
out
sbbb
and
mov
test
sub
cmpsb
dec
xchg
je
dec
adc
addl
aad
adc
cmpl
xchg
ret
fwait
rcrb
sbb
scas
in
push
push
imul
cmp
xchg
cmp
insb
dec
mov
mov
nop
les
fcomps
add
pushf
jl
dec
xorl
dec
and
pop
and
adc
mov
push
aaa
and
fs
pop
lret
or
daa
orb
fisttps
sbb
je
aad
sbb
sbb
rcrl
dec
sub
mov
push
leave
cmp
enter
pop
mov
xor
lea
into
inc
jecxz
sbb
mov
das
xchg
xchg
mov
xchg
addr16
hlt
mov
pop
mov
mulb
cmpsb
rol
in
test
mov
mov
push
outsb
lret
mov
jl
xchg
outsb
cmpsb
lahf
movsl
inc
loope
mov
push
stc
pop
add
test
bnd
add
push
sbb
sub
shll
fstpl
dec
inc
outsl
push
inc
cs
push
mov
orl
cld
mov
stos
jb
mov
das
rep
das
iret
andl
and
es
jno
jge
idiv
jne
fdivl
or
imul
jle
push
mov
dec
ljmp
sbb
mov
cs
jmp
aam
scas
in
lods
jl
mov
sub
xchg
adc
cwtl
cmc
fstp
rclb
push
ret
xor
sbb
repz
mov
mov
arpl
mov
push
cmpsl
pop
mov
les
sbb
adc
or
addr16
int3
hlt
push
out
xor
test
jmp
lahf
rcr
outsl
dec
punpckldq
subl
shrb
addr16
sbb
ficoms
adc
test
pop
or
adc
addr16
lods
inc
out
xor
aas
in
pushf
adc
xor
push
cwtl
repnz
push
jb
or
adc
int3
xchg
repz
fnstsw
inc
out
push
xor
lret
mov
and
mov
scas
mov
sti
imul
pop
xchg
icebp
adc
outsl
dec
xor
leave
cmp
sbb
cwtl
xchg
sub
xor
mov
out
jl
xchg
in
popa
mov
mov
mov
bound
sub
lods
in
scas
cmpb
movsb
add
aaa
pop
cmp
fwait
cmp
sbb
mov
mov
pop
into
das
cmova
jb
sub
lea
jp
and
icebp
jg
inc
push
add
jo
mov
into
jbe
insb
scas
jnp
dec
pop
fdivs
mov
jle
stc
pop
xchg
push
mov
sbb
add
pop
shrb
xlat
jecxz
out
pop
mov
iret
sbb
fs
ljmp
xor
adc
fdivrs
fstpt
cmp
or
pop
pop
jmp
ja
or
jl
out
pop
push
jecxz
cmp
xor
jnp
pop
out
insl
mov
mov
add
jo
pop
ds
clc
bound
fcmovnbe
inc
cltd
stc
add
pop
fcoms
adc
sub
pop
addr16
gs
into
movsb
mov
pop
sbb
lock
stc
mov
mov
cmp
ja
imul
inc
fists
outsl
sub
jecxz
testb
xor
mov
sub
enter
js
dec
or
pop
mov
scas
fs
int
cmp
lods
cmp
fwait
add
jecxz
xchg
mov
jmp
mov
sub
out
in
inc
xchg
mov
insl
and
inc
sbb
inc
clc
cmp
movsl
test
sub
push
int
sbbb
int3
push
dec
adc
sbb
fidivl
fisubl
fwait
push
ret
cmp
stos
dec
sbb
sub
jbe
sub
cld
sub
sbb
cld
in
out
add
dec
imul
xlat
loopne
lds
inc
sbb
jecxz
lcall
leave
dec
mov
or
std
movsl
jb
mov
and
push
lcall
push
push
xchg
mov
scas
and
mov
notl
stos
cmpb
add
push
cmc
mov
push
ret
insb
mov
mov
xor
dec
adc
fcom
and
sbb
push
sub
aad
xchg
scas
lcall
dec
daa
int
jmp
les
sub
sbb
mov
mov
arpl
ss
movsb
sub
outsb
jns
push
mov
into
adc
push
push
fcmovb
in
mov
or
outsb
add
sbbl
jle
stc
add
adc
pop
pop
add
mov
in
repnz
mulb
repnz
jg
adc
and
iret
inc
lahf
inc
je
loope
jne
shlb
int3
mov
sub
inc
popf
aaa
fidivs
sarl
lret
icebp
cmpb
inc
sub
push
add
pop
push
out
or
scas
push
push
cmp
sub
bound
xchg
lcall
inc
xchg
pop
test
adc
fisubrs
in
ret
push
xchg
test
sub
sahf
xlat
push
movsb
jo
jno
outsb
aas
aaa
push
mov
test
mov
xlat
call
pushf
pop
cwtl
lcall
enter
mov
xchg
mov
decb
fwait
jno
scas
cli
popa
pop
mov
mov
stos
push
mov
lds
cmpsl
int
mov
scas
xchg
cltd
fdivrs
jle
dec
repz
sub
sub
mov
stos
xchg
mov
cmpsb
sub
cli
jp
fsubl
pop
mov
lea
mov
xchg
aad
aad
out
mov
and
leave
or
jb
mov
mov
scas
xchg
inc
sbb
push
push
call
dec
das
arpl
cld
jle
adc
xor
out
es
xchg
fsubl
inc
cwtl
lods
std
mov
adc
cwtl
adc
sbb
gs
mov
mov
sbb
push
xor
ljmp
int
inc
fidivrs
rclb
cs
in
cmpsl
pop
add
adc
shll
or
add
add
mov
sub
jecxz
test
jae
adc
sub
cmp
aas
movsl
dec
iret
jnp
stos
enter
stos
gs
cli
jmp
out
outsl
push
pop
pop
and
mov
sub
dec
adc
mov
mov
pop
push
fsubs
aas
cmc
sbb
aam
sub
mov
or
nop
std
lods
lds
sahf
jbe
dec
jmp
js
cmp
call
mov
leave
lock
das
sbb
sub
cs
jno
push
data16
sub
mov
imull
lcall
mov
out
push
fadd
pop
adc
test
jp
ja
mov
test
neg
inc
mov
jg
dec
push
arpl
sbb
in
adc
mov
lret
mov
dec
cli
scas
xchg
cs
fs
ss
repz
pop
sbb
or
test
jge
inc
into
fucom
scas
adc
dec
mov
xlat
aaa
imul
pop
pusha
mov
and
jle
xor
fmuls
sub
hlt
hlt
dec
aaa
sbb
adc
cmc
fs
subl
adc
add
int3
lea
xchg
outsl
cmpsl
inc
cmp
mov
hlt
xchg
lret
push
mov
int3
into
dec
lret
repz
add
add
mov
outsb
lods
repnz
mov
dec
lcall
repnz
test
out
sub
dec
out
jb
jae
lods
dec
in
movsb
xor
adc
movsl
mov
push
js
xor
nop
or
xchg
inc
and
pop
xchg
out
aad
cmp
lods
cmp
xchg
shl
pop
mov
or
jg
mov
adc
dec
sbbb
pop
push
iret
sqrtpd
xchg
adc
iret
fadds
mov
sub
lods
enter
sahf
adc
sbb
push
arpl
xor
lea
sahf
push
sub
jnp
aam
xorl
stos
dec
pop
mov
sbb
pop
aam
push
pop
loopne
in
stos
sbb
mov
filds
sub
adc
daa
roll
push
jg
xor
inc
addb
std
pop
push
iret
call
jp
sbb
add
lcall
lcall
dec
mov
adc
xchg
mov
mov
addr16
iret
mov
mov
pop
test
dec
xchg
aas
jecxz
scas
loop
xor
popa
cmpsl
inc
in
mov
fimull
adc
and
popf
pop
push
testb
sub
pop
xchg
in
inc
shlb
push
lret
arpl
jb
sub
test
sub
cmp
outsb
jne
add
mov
outsb
pop
into
movsb
int
cmp
adc
xchg
push
inc
push
add
aad
std
js
or
clc
add
mov
sbb
mov
sti
pop
das
repnz
std
push
scas
cmp
outsb
insb
or
jmp
sub
or
and
cmpsb
call
roll
iret
repz
fisttps
cmpl
sub
mov
fnstcw
fcompl
cwtl
aam
js
or
repz
jbe
in
add
inc
outsl
std
pop
stos
jl
sbb
lds
mov
loop
repz
pop
jmp
pop
sbb
das
dec
inc
lret
sub
popf
jne
shll
mov
popa
or
adc
or
aam
cli
jns
and
shlb
imul
vshufpd
cmp
lcall
rclb
mov
loop
out
cltd
fstpt
cmp
mov
xchg
xchg
fstpt
jecxz
sbb
mov
mov
movsl
jp
mov
xor
cmp
lcall
push
pusha
adc
sbb
cmc
stos
mov
scas
xchg
cltd
xchg
movsl
mov
daa
xor
imul
daa
cld
push
cltd
rorb
mov
das
into
inc
in
cmp
rorb
cmpb
sahf
jns
lret
inc
cmpsb
out
pop
popf
mov
shlb
sub
cmp
adc
in
sub
xchg
sub
test
movsb
sbb
mov
loope
or
in
and
lock
leave
sti
sbb
or
adc
das
and
ss
or
std
mov
test
psubd
loop
sub
jge
sti
aam
loopne
pop
lret
mov
lea
cmc
inc
jp
out
outsl
inc
cld
enter
mov
lds
or
das
fimuls
jle
pop
mov
mov
inc
adc
adc
aas
jp
jnp
jbe
pop
mov
mov
fidivrs
cmp
into
or
cli
inc
mov
push
push
push
push
push
inc
mov
cs
stc
dec
cmp
sub
pop
in
sub
lds
negl
negl
pop
movl
fbstp
aam
aas
iret
test
mov
mov
decb
mov
sbb
dec
fldcw
imull
push
mov
roll
aaa
imull
adc
test
inc
xor
mov
cli
pop
incl
data16
mov
and
and
pop
pop
cmpsb
cld
or
pop
pushf
mov
repnz
aad
call
xchg
arpl
sbb
xor
std
xchg
xor
xor
daa
outsb
mov
in
orb
out
std
pop
dec
add
pushf
mov
mov
inc
add
jp
lock
pop
and
xor
sarb
or
mov
je
jne
into
jg
clc
loope
rolb
xor
decb
sar
shlb
cli
std
dec
loope
sarb
aas
sarl
jae
ja
idiv
stc
imul
clc
push
and
and
fbld
call
xchg
cmc
out
scas
sar
jle
clc
repz
jle
mov
in
stc
xchg
jle
iret
lcall
pop
xchg
mov
popf
lods
sub
ds
inc
mov
lds
enter
repnz
pop
in
pushf
dec
scas
das
push
sub
cld
dec
ljmp
xchg
jge
pop
sbb
das
stos
std
adc
test
loope
cmp
jl
lahf
mov
sbb
cld
outsl
pop
ja
jmp
cmc
stc
push
stc
std
inc
out
jle
jnp
push
inc
mov
out
dec
jle
mov
sbb
inc
mov
pop
jle
mov
aas
je
cmp
inc
inc
xor
rcl
xor
xor
dec
loop
hlt
or
or
pop
mov
subb
scas
or
loope
or
adc
aas
enter
stc
cmp
ja
std
mov
mov
pmullw
and
stc
cli
push
push
pop
mov
jmp
rcll
pop
cmp
sti
clc
mov
xchg
xchg
mov
pop
js
jle
push
iret
push
jg
dec
lock
mov
push
sub
insb
pop
test
ret
adc
loopne
idivl
cld
dec
jnp
cmc
testb
cmpsl
adc
add
out
das
in
test
inc
rcl
jecxz
ja
push
js
jl
outsb
divl
mov
loop
repz
stc
loope
es
inc
dec
dec
dec
xor
pop
inc
in
and
and
xor
repnz
sub
xor
ficompl
xor
add
fwait
lret
iret
roll
jo
jae
add
stc
add
add
cmp
cmp
je
hlt
out
out
out
scas
aas
fadds
push
push
xchg
jp
jnp
loopne
lock
mov
je
aaa
aaa
outsl
push
fisttpl
dec
dec
fstp
jp
xor
pop
outsl
ja
pop
popf
loope
icebp
mov
out
out
scas
sahf
mov
cmpsl
cmpsl
jbe
push
in
jle
jle
popf
cmp
mov
jge
mov
jmp
aas
add
cs
jno
push
jg
testl
das
rcrb
ss
jnp
clc
std
adc
aas
loopne
clc
outsl
mov
das
inc
rolb
pop
sbb
xchg
jle
loope
or
iret
je
cmp
shl
fsub
rcl
fdivl
push
cwtl
lcall
nop
push
push
adc
sti
xor
std
push
mov
popf
jnp
test
cmp
jbe
ljmp
jecxz
xor
adc
gs
ret
pop
pop
movsb
enter
fidivrl
ret
mov
mov
jnp
mov
mov
jnp
insb
insb
fildll
in
pop
pusha
shlb
dec
hlt
lods
dec
pop
out
xchg
cs
xor
push
insl
sub
movsb
movsl
test
mov
lret
andl
push
pop
inc
lret
jnp
dec
repnz
lock
pop
imul
test
dec
jo
imul
hlt
xor
xor
mov
call
fistpl
loopne
xor
inc
scas
sbb
mov
cmp
mov
inc
dec
rclb
mov
push
jns
cli
daa
leave
cmp
mov
sub
adc
pop
pop
jb
in
mov
push
rcl
push
dec
lea
shlb
lods
add
xadd
pop
lods
rcrb
jo
pop
pusha
push
aas
repnz
dec
dec
push
iret
adc
cmpb
jae
jns
mov
dec
hlt
push
flds
jnp
movsb
and
and
xchg
pop
fdivr
pop
mov
out
fwait
cmp
push
sbb
or
pop
sahf
test
subl
loope
push
xchg
shlb
pop
out
add
sti
fs
pop
push
push
and
pop
mov
icebp
mov
decb
out
aaa
mov
out
inc
enter
stos
mov
xor
add
icebp
sbb
adc
mov
push
and
sbb
and
sub
repnz
sti
pushf
cmp
jg
loop
ljmp
rcr
fcomps
push
adc
lds
in
push
out
xchg
leave
leave
lret
cli
rcl
rolb
popa
nop
addl
dec
dec
push
push
push
push
fldlg2
sti
ret
mov
mov
cmp
xchg
xchg
adc
addl
or
sahf
xor
or
orl
jmp
hlt
cs
in
pop
imul
mov
add
pop
push
out
in
inc
fmuls
sub
dec
dec
ret
addl
sub
or
out
and
pushf
mov
insl
push
xchg
pop
xchg
rol
cmpb
jb
inc
stc
mov
xor
jne
ficoml
mov
pop
subb
repz
das
inc
sbb
negb
negl
outsl
shrl
testl
mov
pop
repz
mov
sbb
in
rclb
aaa
xchg
push
popf
xor
xchg
es
push
push
fidivs
push
or
hlt
jle
je
sub
rorl
gs
dec
push
aam
xor
les
push
inc
xchg
xor
test
vdivps
or
in
mov
xor
push
adc
adc
les
aad
cld
test
iret
arpl
incb
adc
movsb
push
and
xchg
sub
xor
jmp
add
outsw
inc
inc
enter
mov
mov
push
and
jecxz
popa
repnz
jmp
mov
jo
mov
into
outsb
popa
mov
and
jns
pop
pop
ja
imul
pushl
mov
add
cmp
mov
xor
rorb
into
mov
pop
es
ss
mov
mov
gs
sub
mov
dec
mov
insl
insb
add
cmp
movsl
and
or
js
aam
xor
mov
pop
mov
cmpsb
sbb
outsl
sbb
jmp
add
and
inc
or
mov
aad
lcall
push
cmp
test
xor
stc
xor
xor
nop
adc
faddl
sub
mov
adc
pop
and
mov
pop
movsb
pop
sbb
cmpb
mov
xchg
adc
push
push
ds
mov
call
movsb
call
sti
ret
out
xchg
fistpll
and
loopne
lea
mov
ss
dec
dec
sti
dec
sub
rolb
fmull
jne
adc
add
addl
call
in
sbb
stos
pop
push
les
cmp
enter
lcall
in
sub
inc
je
cmp
leave
enter
testb
xor
xor
dec
lea
xorb
lret
lahf
adc
push
push
aaa
mov
ljmp
xchg
jb
or
arpl
addl
test
xchg
sar
enter
sub
leave
leave
aad
pop
mov
movsl
hlt
jb
push
push
mov
sbb
int
pop
outsb
int3
int3
shrb
jnp
addr16
insb
je
out
mov
out
daa
clc
mov
jp
ficoms
or
mov
xchg
xchg
pop
jp
and
mov
imul
mov
lods
into
pop
mov
xchg
int3
data16
push
addr16
lea
lds
test
pop
and
hlt
jb
lods
jl
mov
push
enter
or
pop
cmp
xchg
push
dec
or
repnz
and
scas
scas
mov
cwtl
shll
xorl
fsts
in
dec
mov
jns
rol
adc
xchg
adc
das
int
stos
stos
data16
mov
leave
cmp
adc
dec
stos
add
gs
in
lcall
stc
add
aam
mov
in
fistps
lea
andl
hlt
and
iret
jp
sysexit
adc
inc
stc
mov
xor
dec
cmp
out
in
outsb
sub
scas
mov
or
mov
cli
dec
shr
xor
outsb
and
enter
fs
cmpsb
push
dec
xchg
adc
add
push
sub
sbb
repz
adcl
out
cmp
adc
out
outsl
outsl
cld
inc
inc
adc
xlat
lret
iret
sarl
cmpb
outsb
dec
pushf
subl
xchg
push
out
mov
mov
jnp,pt
jae
clc
scas
mov
jle
mov
inc
push
push
lahf
bound
arpl
cltd
jp
pop
mov
mov
ja
jb
jecxz
scas
sbb
cltd
xchg
sbb
add
cs
mov
je
adc
daa
imul
insb
xor
into
pop
and
sbb
mov
fimuls
push
dec
ror
pop
fcompl
scas
mov
push
ficomps
push
int3
pop
mov
pushf
repnz
mov
jge
cmp
rol
jno
movl
fs
and
xchg
push
push
or
xorb
push
ljmp
pop
std
pop
jo
fsubp
cmp
jmp
and
sub
out
push
sti
out
stos
dec
jnp
bound
jno
fstp
sub
fldenv
mov
in
lods
loop
je
cmpsb
lret
jae
orl
sti
xchg
sbb
sub
js
mov
nop
int3
mov
cli
cmpxchg
stos
xorb
pop
out
das
push
lret
fdivr
ret
sbb
je
mov
lds
mov
or
decb
cmp
mov
xor
repz
or
loop
jle
cltd
xchg
mov
pop
mov
sbb
sbbb
aad
out
adc
fwait
and
je
jl
cmp
push
add
shlb
jmp
xor
or
dec
adc
sbb
ret
xchg
addr16
into
repz
cltd
sbb
cmc
or
cwtl
mov
inc
retw
dec
std
jecxz,pt
mov
stc
ret
inc
mov
sub
adc
fwait
mov
cmpsl
adc
jecxz
call
push
push
mov
mov
out
hlt
arpl
arpl
jge
enter
in
mov
ljmp
add
inc
pop
push
xor
push
int
sbb
jecxz
in
cwtl
std
fcoms
cli
mov
out
fwait
cli
mov
cltd
push
ja
out
mov
out
pop
jmp
dec
iret
push
dec
dec
push
or
ss
cli
xchg
xchg
into
mov
sub
into
xor
pop
leave
xchg
push
push
fcomp
cmpsl
adc
mov
test
imul
arpl
call
das
je
aas
lcall
dec
out
cltd
shl
movsb
sub
stc
insb
mov
add
jmp
inc
shlb
aas
call
insb
out
out
gs
mov
rolb
shlb
mov
call
sbb
mov
jnp
push
xchg
call
push
bound
mov
add
popf
cmpb
sbb
mov
push
repnz
xchg
mov
imul
sbb
in
xchg
push
mov
shlb
adc
in
xchg
out
lds
jns
lods
jae
jmp
jns
adc
fdiv
lea
jmp
in
fwait
or
push
jmp
in
out
mov
xor
dec
mov
sbb
inc
cld
xchg
popf
xor
stc
test
call
pop
cli
pop
mov
bound
cmp
jnp
xchg
or
aam
jmp
cmp
stc
int3
pop
xor
push
xor
bnd
pop
lahf
xor
rsm
lret
xchg
jecxz
pop
cld
sbb
popf
and
out
stc
outsl
iret
in
pop
jb
sahf
xlat
mov
stc
test
int3
loope
push
out
mov
mov
sbb
sahf
xchg
pusha
mov
and
push
and
movsl
cmpsb
out
adc
or
mov
pop
rolb
cli
xchg
lcall
xchg
inc
imul
inc
int
push
xlat
pop
xlat
xlat
xchg
jns
dec
inc
inc
dec
adc
cmp
inc
psadbw
adc
adc
cmp
loope
pop
mov
inc
and
leave
int
addb
push
cmc
fistps
shlb
ss
ja
push
call
cmp
adc
xor
outsb
stos
mov
sbb
push
arpl
jl
push
xchg
adc
cmp
cmp
jmp
pop
cmc
sub
push
xor
leave
enter
lret
leave
mov
lods
leave
cmp
cmp
jb
jl
insl
add
repnz
data16
std
mov
cmpsl
cmp
cmp
scas
inc
out
sub
jae
fistpl
jae
inc
or
xor
jb
xor
push
aam
fistpl
push
daa
in
out
adc
xchg
jno
fcmovu
loope
imul
xor
inc
lods
leave
jp
xor
sti
outsb
pop
dec
mov
ljmp
filds
lret
in
fmul
dec
dec
pusha
enter
mov
cmp
and
iret
roll
sub
mov
inc
sbb
push
sub
dec
int3
cli
sbb
jmp
push
out
adcl
and
out
push
inc
je
ljmp
stc
loope
xlat
fldl
lret
xor
hlt
inc
dec
cmp
dec
push
stos
popa
stos
aad
cs
hlt
js
fisubl
imul
dec
push
mov
and
clc
mov
inc
pop
inc
push
scas
shl
les
leave
or
nop
push
dec
rolb
dec
sub
xor
out
mov
and
jp
lcall
dec
inc
or
shrb
mov
mov
hlt
push
cmp
aad
gs
cld
out
scas
jne
je
in
jecxz
sbb
movsb
mov
adc
repz
cs
adc
cmpsl
push
sahf
pusha
mov
pop
in
adc
and
cmpsl
push
dec
mov
inc
mov
daa
addr16
xor
sbb
push
cmpsb
inc
mov
sbb
cmp
jge
ret
dec
mov
dec
pop
gs
xorl
in
das
in
pop
in
adc
lcall
dec
mov
adc
imul
dec
push
sub
jecxz
push
inc
mov
js
sub
sub
mov
or
adc
sbb
js
aad
cmp
into
dec
shrb
icebp
cmc
into
cmp
cmp
imul
or
mov
imul
xchg
cltd
ret
or
inc
xor
sahf
mov
xor
rorl
aas
push
pop
push
pop
outsl
cmpsl
aad
and
shl
lret
push
inc
ss
cmp
mov
test
push
sub
inc
or
fimull
sbb
sti
xchg
mov
test
push
xchg
fbstp
push
cmp
xchg
cwtl
sahf
scas
scas
mov
scas
mov
rcrb
push
xor
xchg
cli
lret
mov
inc
gs
dec
jb
shrl
jns
jbe
xchg
data16
mov
mov
scas
mov
cwtl
jle
call
in
adc
xchg
xchg
test
mov
les
and
lock
push
aam
jae
cltd
mov
push
icebp
mov
xchg
push
pop
lock
jns
adc
lock
jmp
or
cmp
divb
push
nop
pop
aaa
pushf
mov
sahf
movsl
push
xor
jl
aam
movsl
and
adc
mov
jl
out
sub
movsl
jmp
arpl
xor
cwtl
jns
ja
xchg
lahf
orb
mov
xorb
and
hlt
test
push
test
mov
lock
mov
dec
loopne
cwtl
xchg
es
fstpl
adc
adc
dec
int
leave
dec
dec
es
arpl
pop
push
push
mov
mov
pop
loopne
js
mov
test
push
xchg
pop
pop
imul
dec
jg
divl
jb
push
xchg
mov
cmc
add
mov
mov
or
js
les
sbb
fsubrp
call
xor
dec
pop
or
mov
push
push
rol
inc
inc
adc
loop
das
int3
xor
lretw
ja
lods
cmc
cltd
lods
lods
movsl
jmp
arpl
jge
lods
mov
ja
jns
mulb
mov
and
not
jae
js
xor
and
add
xor
dec
outsl
rorb
popl
loopne
dec
rcl
xorl
add
push
testb
fdivrs
jns
inc
lock
fsts
cmp
cwtl
filds
mov
das
imul
dec
cmpsl
and
pop
sub
repnz
addr16
aad
dec
or
leave
lods
loopne
xchg
out
arpl
xchg
sub
xchg
cmpsl
clc
mov
in
scas
inc
daa
imul
and
int3
int3
into
fsub
in
dec
jns
loopne
xor
clc
aas
or
testl
loopne
jle
pop
pop
out
sub
neg
xor
sbb
cmp
fildl
imul
xor
add
shl
xor
subl
xchg
mov
mov
subl
add
cmpsb
mov
xor
adc
push
ja
inc
add
pushf
mov
add
sub
xor
fmuls
mov
hlt
loope
mov
and
shr
movswl
aas
push
popa
push
insl
filds
lcall
jp
or
or
imull
js
cmp
add
xor
inc
cld
in
xchg
push
test
inc
enter
pop
push
enter
push
jg
add
inc
loopne
jle
cmp
enter
fdivr
gs
pop
xchg
mul
lcall
out
scas
jge
mov
add
xsaveopt
sbb
xlat
decl
das
std
xchg
aaa
push
jbe
adc
pop
sti
jmp
loop
fdivr
in
jae
mov
inc
test
inc
cld
out
scas
cmpb
out
push
cs
sti
push
mov
inc
cmpsl
js
clc
adc
lock
dec
sbb
and
mov
pop
add
icebp
adcb
mov
dec
bound
call
icebp
xor
in
nop
rcrl
fdivs
sbb
sbbb
lcall
cli
loopne
test
jns
adc
cmp
adc
lock
clc
push
pop
or
pop
rol
clc
addb
cmpb
xchg
xor
push
cmp
pusha
loopne
fwait
andb
aad
mov
dec
add
ret
lret
dec
inc
inc
mov
push
mov
mov
cmp
push
mov
sbb
aad
or
cltd
xchg
xchg
nop
mov
inc
mov
adc
or
cmpsb
or
gs
pop
xchg
imul
cli
xchg
or
enter
test
xor
mov
outsl
jo
adc
inc
cmp
or
inc
cmpb
sahf
daa
les
outsl
push
cmp
push
xlat
aam
and
cmp
sbb
lock
inc
ret
xorb
push
dec
andb
push
cs
xlat
popa
in
cmpsb
pushf
sbb
cmp
mov
ret
mov
cld
xchg
adc
pop
nop
xor
pop
ret
pusha
movsl
dec
sbb
cwtl
call
bound
and
dec
jno
cmp
arpl
rcrl
orb
test
pop
xchg
inc
mov
adc
stc
es
addr16
mov
sub
push
test
push
and
aaa
mov
pop
call
and
call
stos
pop
es
add
out
mov
sub
push
adc
xor
ret
lret
jmp
add
sbb
push
xchg
daa
and
jo
iret
push
lock
bound
lahf
or
add
cmpsb
or
jo
gs
xlat
lock
mov
ja
add
adc
cmpsb
cli
adc
add
leave
mov
mov
xor
xchg
out
in
in
into
movsl
mov
pop
pop
and
and
in
js
jecxz
adc
jg
out
adc
and
arpl
inc
sti
inc
add
add
mov
dec
rcll
mov
add
or
cmpb
call
sub
inc
lcall
mov
cmpl
add
cwtl
adc
lret
mov
pusha
cltd
scas
shlb
push
and
push
scas
sub
push
into
fmull
lcall
sub
jns
int
cli
enter
xchg
and
es
adc
and
add
dec
adc
sar
les
loop
push
sbb
and
stos
outsb
sti
lea
add
inc
mov
popa
loop
adc
test
sbb
sbb
push
push
js
mov
mov
jecxz
das
pop
cmp
icebp
xor
pop
xor
orl
ret
out
in
pushw
or
dec
push
stos
outsl
mov
sahf
xlat
icebp
int3
pop
adcb
test
cwtl
js
popf
popf
cli
mov
jnp
ror
lgs
cmp
sub
stos
stos
ds
stos
insb
pop
cmc
pop
int3
cmp
imul
fildll
adc
pop
cmpsl
out
fnsave
mov
mov
and
sbb
aaa
fwait
into
out
std
pop
mov
fimuls
imul
sti
pop
mov
loop
sahf
bound
mov
add
les
push
fucom
cmovae
and
lods
sbb
loope
sbb
push
push
fstpl
inc
out
adc
push
loopne
in
dec
fnstcw
ret
dec
mov
repz
shlb
inc
mov
jmp
lock
dec
adc
dec
stc
xor
mov
lods
iret
pop
pop
push
outsb
mov
lret
imul
jmp
push
lods
mov
jbe
test
repnz
test
adc
mov
in
add
xor
aad
jg
outsl
dec
sbb
mov
cmp
pop
sub
xor
xchg
mov
out
mov
push
dec
xor
xchg
push
push
jns
hlt
cmp
insl
lahf
shr
cmc
jnp
mov
dec
sub
adc
sub
sbb
or
lcall
shll
test
sub
mov
lahf
add
xor
movsl
movsl
cmpsl
dec
and
fdivr
inc
mov
xchg
lds
addl
loop
and
push
pop
int
test
testb
pop
andb
sbb
or
push
nopl
mov
testb
lock
or
js
sbb
sahf
es
addr16
mov
in
sub
adc
mov
cmc
push
movsb
ficompl
xchg
cmc
fstl
push
push
addr16
dec
or
out
xchg
fwait
adc
fldt
xchg
sub
data16
xor
scas
hlt
mov
jb
loopne
out
xchg
mov
sbb
or
cwtl
repnz
add
in
shlb
stos
insl
out
in
out
mov
js
popa
push
mov
mov
nop
and
and
sub
movsb
push
ret
imul
mov
cmp
add
push
enter
call
ja
test
mov
icebp
test
in
pop
push
add
push
sahf
mov
mov
cmp
push
repnz
xchg
xchg
xchg
jb
je
mov
pop
fdivl
push
mov
mov
nop
adc
mov
mov
dec
addb
push
out
outsb
xor
dec
mov
xchg
clc
aam
cld
lret
into
nop
sbb
dec
iret
aam
fimull
iret
clc
add
fwait
lea
in
shll
cltd
and
cmpsb
cld
mov
mov
test
jg
mov
test
mov
test
cmpb
shl
bound
pop
addr16
mov
cmpsb
fcmovne
jbe
mov
jl
lcall
cmp
sti
or
sbb
gs
mov
pop
fdivrs
lea
jo
lcall
lahf
imul
dec
not
xchg
mov
aam
jg
jnp
mov
inc
ret
sbb
and
or
adc
scas
ficompl
idiv
push
fstps
adc
sub
cwtl
aas
jg
add
mov
loopne
repz
jg
fists
inc
xchg
xor
adc
mov
sub
sbb
rcl
adc
mov
fwait
out
outsl
js
test
jmp
pop
cmc
ret
mov
sub
js
jnp
xchg
push
jmp
ds
jge
sar
outsl
fidivl
xchg
mov
into
dec
inc
push
aam
repz
fstl
out
xlat
sub
out
mov
ljmp
jg
jge
fdivrl
pop
fldenv
inc
test
cld
and
xor
arpl
cmc
repz
int3
mov
stc
loope
push
mov
mov
imul
lahf
clc
mov
inc
push
sub
jecxz
and
cmpsl
adc
or
mov
jp
lahf
stos
in
cmp
xlat
idivb
lods
jmp
or
inc
and
mov
xor
xor
jae
jmp
mov
lahf
mov
das
adc
retw
push
fwait
jmp
mov
xor
or
fs
repz
insl
pop
mov
ljmp
pop
dec
movsl
shr
mov
sbb
rcrb
xlat
in
shrl
push
xchg
sahf
out
or
sbb
fimull
fcoms
movsb
das
dec
push
and
ss
sbb
cmp
adcl
pop
xchg
enter
lods
repz
dec
in
adc
jg
sub
ja
test
push
mov
dec
dec
in
xchg
jb
add
push
xchg
cmp
adc
mov
push
and
mov
ds
cmp
pushf
pop
or
fucom
cmpsl
xor
mov
or
jmp
mov
out
mov
push
xchg
fidivrl
loop
jge
lea
adc
jp
xchg
rorl
push
loop
cmp
pop
mov
imul
out
xchg
mov
pop
loope
fidivs
inc
dec
jl
push
adc
pop
adc
shll
imul
test
cmp
fidivrs
out
movsl
test
ret
fwait
or
adc
cmp
ss
popf
shr
mov
sub
mov
scas
lret
cmp
divb
lods
sbb
leave
mov
adc
insl
dec
mov
cmpsb
aad
jmp
mov
push
movsl
push
cmpsl
enter
iret
cmp
lcall
dec
pop
mov
dec
xchg
or
sbbb
mov
das
xor
sbb
imul
mov
xchg
mov
push
fwait
mov
xchg
push
arpl
pushf
dec
mov
mov
inc
and
sbb
sub
inc
daa
lock
or
inc
sbb
adc
and
or
push
mov
dec
mov
sbb
fcmovu
fistl
cwtl
in
mov
cmp
pushf
mov
and
and
push
lcall
dec
inc
mov
in
pusha
pop
xchg
mov
sbb
shl
ds
cmp
xchg
popf
cmpsl
or
das
pop
push
mov
inc
mov
bound
cld
gs
inc
push
and
xlat
mov
ret
adc
push
aaa
push
enter
mov
sbb
xchg
xorl
inc
xor
xchg
in
fld
inc
pop
pop
pop
add
adcl
dec
leave
test
dec
imul
jb
xor
add
cwtl
jno
xor
adc
loop
pxor
incb
lods
out
into
int
push
test
xchg
add
inc
lahf
mov
mov
stc
mov
push
mov
xor
loope
insb
jae
ret
inc
out
mov
pop
loop
inc
notl
and
mov
fwait
mov
out
mov
sub
push
popf
fistps
jle
inc
mov
out
int3
leave
std
add
rcrl
jno
hlt
xor
jmp
pop
xor
mov
pop
xchg
inc
ss
cmpsl
cltd
jmp
lahf
imull
repnz
push
js
test
scas
call
das
popf
into
cli
loopne
xor
mov
mov
cmp
jno
shl
stos
loop
out
ds
cmp
or
push
cwtl
adc
xchg
rcrl
test
dec
icebp
nop
jle
jo
movsb
mov
scas
cli
int3
mov
ja
fcomp
jg
out
sahf
and
dec
add
add
ret
mov
mov
dec
jle
mov
jns
jg
xor
and
aaa
mov
loop
xor
shll
filds
cmp
frstors
mov
dec
push
or
inc
pop
or
sbb
xor
test
xchg
pop
dec
pop
into
into
lret
into
out
lret
jge
jne
mov
and
pop
push
mov
cmp
inc
and
mov
push
clc
add
sbbl
add
pop
shrb
pop
mov
popa
inc
adc
stos
arpl
clc
mov
adc
fs
xlat
shrl
mov
call
ljmp
pop
sbb
mov
shlb
cmpb
fs
adc
push
lret
mov
test
shrl
daa
sbb
addb
and
push
xor
sub
sub
sbbl
fwait
pop
in
sbb
sbb
ljmp
lahf
cli
and
push
int3
and
clc
mov
pusha
dec
pop
inc
imul
inc
push
pop
push
xchg
lret
pushw
pop
sub
outsb
dec
add
cmp
pop
or
out
ja
lret
add
aad
xor
fimuls
pop
jle
push
or
cmp
addr16
xchg
cmpb
xchg
xchg
xchg
mov
faddl
adc
popf
call
popa
xchg
adc
and
inc
mov
jno
shll
bound
out
cmp
and
push
mov
xchg
mov
in
sub
stc
jl
inc
mov
inc
mov
iret
push
jmp
aam
rolb
mov
pop
or
jno
out
sarl
push
sub
js
aad
push
into
xor
cmpsb
jae
shr
push
arpl
ja
mov
inc
lock
bound
insb
cmp
adc
lahf
and
movsl
aam
mov
xor
and
and
aaa
or
mov
cli
hlt
out
add
adc
and
sub
ljmp
out
fidivrl
hlt
xchg
leave
pop
push
and
xchg
add
out
lret
clc
jg
xor
addr16
and
mov
in
int
push
sbb
sarb
call
add
sahf
mov
stos
pop
adc
lods
icebp
rcrb
call
push
dec
movsl
in
push
sbb
repz
pusha
int
dec
aas
mov
or
and
mov
jl
cmp
xchg
out
xchg
sub
add
mov
popa
fnstsw
jp
arpl
cmp
adc
push
andb
cld
push
and
push
inc
clc
scas
mov
daa
daa
xor
jl
dec
push
adc
bound
popf
mov
add
out
xchg
inc
xor
xor
sbbl
sub
pop
outsb
imul
add
xchg
pop
test
fwait
push
pop
fldt
push
adc
push
and
aaa
jmp
data16
or
cli
inc
adc
add
call
aad
adc
jecxz
sub
jno
and
stc
adc
pop
dec
cmpsl
and
ja
fcomp
loop
ret
inc
xchg
lods
subb
cli
mov
xor
jle
loope
xchg
popa
mov
pop
xor
nop
mov
jne
adc
mov
dec
sbb
stos
aas
mov
jg
add
add
test
cld
dec
xor
adc
cwtl
mov
pop
mov
jb
jns
sub
outsl
xchg
out
inc
mov
push
jmp
cwtl
adcl
push
push
push
cmp
mov
push
mov
or
inc
aas
test
pushl
mov
xor
test
push
cmp
es
daa
cmpsl
test
sub
mov
push
fsubrs
lods
std
cmpsl
scas
pop
jecxz
sub
sbb
fnstcw
fildll
and
cmpl
movzbl
int3
adc
shr
inc
push
pop
jle
push
mov
jmp
pop
inc
enter
insb
jnp
int3
sub
xor
sbbb
addb
lea
je
imul
push
std
xchg
aaa
inc
inc
dec
lahf
mov
pushf
mov
lods
stos
sub
les
aas
test
bound
movsb
dec
mov
dec
lcall
mov
lock
push
shrb
xor
mov
xrelease
and
jb
cmpsb
enter
sar
xchg
xchg
and
xchg
stos
sahf
in
hlt
rorl
jmp
mul
lret
mov
dec
push
push
push
or
sbb
loopne
sbb
xor
push
mov
jl
mov
fistpll
inc
cwtl
inc
icebp
test
adc
mov
pop
cs
mov
imul
jge
push
inc
fcompl
repnz
jecxz
lret
loop
aad
dec
jecxz
inc
cwtl
and
or
stos
out
mov
jb
outsb
inc
mov
inc
js,pn
sub
sub
mov
data16
adc
sub
adc
cmp
inc
push
jmp
add
icebp
adc
inc
dec
push
sub
repz
pop
mov
mov
ljmp
xor
mov
mull
xor
icebp
fcom
divl
mov
mov
jecxz
jne
push
fxch
dec
int3
dec
push
shrb
out
jp
cmp
cmpsb
adc
xchg
gs
rolb
add
call
shl
and
dec
push
lea
pop
push
test
fwait
cli
fists
sub
enter
jmp
stos
mov
outsb
insl
inc
mov
push
add
xchg
lods
stos
cs
sbbl
add
add
in
inc
and
pusha
nop
mov
imul
cli
shll
sbbb
dec
xchg
xchg
mov
sbb
cmp
jno
js
sbb
bound
pusha
cmp
incl
lret
hlt
adc
iret
out
lock
inc
push
cmp
push
cmp
mov
out
mov
lahf
in
inc
xchg
mov
mov
xchg
push
xchg
sarl
cmp
aas
arpl
out
sti
mov
aad
pusha
sbb
mull
fcomip
in
xor
fldcw
imul
loop
fs
xchg
pop
xchg
dec
dec
push
or
dec
sahf
arpl
orl
and
sub
test
cld
and
push
subb
mov
xorl
test
ss
repz
xor
pavgw
push
adc
lcall
enter
push
lds
dec
cmp
das
xor
xchg
push
jge
pop
lahf
stc
data16
mov
xchg
add
hlt
push
je
aad
dec
add
loope
and
and
and
xchg
addr16
les
xchg
cs
adc
repz
mov
add
and
adc
les
sub
add
in
test
daa
cmc
inc
ljmp
or
test
mov
and
rcrl
sbb
sub
sbb
shlb
inc
dec
std
imul
inc
cwtl
mov
rclb
or
lret
adc
fwait
ret
mov
das
push
pop
jle
mov
xchg
xor
push
pop
cmpsw
addr16
clc
adc
adc
mov
sahf
flds
push
stos
stos
clc
or
lcall
inc
dec
mov
cmpb
dec
dec
mov
and
imul
ljmp
add
mov
fldt
xor
cmc
shl
jb
push
xchg
cmp
sti
push
out
xchg
and
mov
fmull
pop
jp
shlb
repz
mov
mov
sbb
fdivrp
mov
int
clc
sub
leave
mov
mov
and
cwtl
lahf
sub
pushf
mov
dec
dec
dec
add
mov
cmp
sarb
push
mov
jp
cmp
xor
int3
leave
mov
das
xor
repnz
adc
xor
dec
bound
ret
sbb
repnz
outsl
dec
inc
ret
nop
mov
or
jmp
inc
or
xchg
scas
iret
clts
mov
loopne
adc
adc
pop
jle
add
xchg
inc
mov
mov
add
xchg
pop
push
xchg
jg
push
bound
repz
test
scas
sbb
adc
out
lock
dec
add
mov
fldt
in
pop
sti
ret
cs
or
mov
cmp
pusha
fstpt
fisttps
nop
lret
push
cs
mov
roll
rorb
fldl
xor
loope
jl
pop
fimull
stc
nop
inc
sub
cmp
sbb
daa
arpl
psubusw
inc
std
out
mov
mov
cltd
scas
mov
push
inc
inc
loopne
outsb
dec
mov
jno
es
dec
xor
mov
mov
cmp
mov
mull
in
cmp
rcrb
and
in
sti
subb
insl
lret
cmpsl
push
movsl
jmp
jge
mov
xchg
and
loop
leave
push
pop
loopne
mov
sub
add
pop
push
in
sub
es
aad
lcall
sbb
pop
push
pop
mov
repnz
xchg
addl
mov
sub
mov
mov
out
je
xor
adc
clc
adc
std
stos
es
out
and
imul
adc
cmpsl
or
lahf
sub
mov
push
and
or
in
cmp
cmpsb
inc
push
pop
in
and
nop
loope
push
cli
sub
imul
pop
dec
jge
cmpsb
pushf
add
ret
aas
data16
call
xchg
loopne
mov
push
adc
iret
inc
mov
mov
cmpsl
ja
test
test
in
and
add
pop
pop
jmp
addr16
inc
sub
dec
std
jmp
fmull
outsl
jbe
jo
xor
setns
add
mov
xchg
sti
lea
sbb
negb
loop
mov
shl
sub
or
lock
rorb
into
leave
mov
xchg
xchg
sub
ficoms
addb
pop
mov
and
push
sub
inc
leave
enter
pushf
dec
xchg
rcll
out
out
hlt
push
add
bound
rol
out
jecxz
stc
outsl
fstpt
xor
std
sub
clc
dec
leave
xlat
hlt
loop
addb
fbstp
xchg
lret
fwait
mov
fimuls
inc
out
inc
std
cltd
test
nop
cwtl
inc
inc
pop
pop
and
xchg
das
jmp
and
xchg
mov
mov
fucomp
jecxz
xchg
mov
inc
jle
push
test
test
rcl
imul
ja
dec
push
loop
lods
sub
test
fs
add
out
mov
shl
xor
pop
aad
sub
sub
xchg
loope
sbb
mov
xchg
xor
push
or
dec
iret
test
add
imul
xchg
push
cwtl
push
or
pop
lret
jae
mov
mov
jno
repz
insl
es
pop
ror
sbb
and
pop
jo,pt
pop
popa
ret
inc
add
cmc
push
loop
inc
cmp
pop
fisubl
out
push
push
arpl
sub
sbb
insb
loopne
test
addr16
adc
test
add
dec
stos
icebp
xor
cwtl
push
nop
es
push
sbb
hlt
mov
push
icebp
dec
jno
aam
adc
adc
shrb
mov
mov
roll
xchg
hlt
mov
and
fildll
dec
push
adcl
nop
jmp
xchg
mov
mov
mov
pop
mov
push
sti
lgs
mov
push
sti
lgs
mov
push
sti
lgs
mov
push
sti
lgs
mov
push
sti
lgs
mov
push
sti
lgs
mov
push
lcall
rcr
mov
mov
push
xor
subl
mov
in
mov
sahf
jo
loope
insl
sbb
mov
dec
cmpsb
pop
inc
lods
dec
inc
ss
lds
mov
leave
ret
ja
mov
ss
lods
aad
aam
add
xchg
mov
cltd
popa
mov
inc
pop
push
jmp
xchg
inc
xchg
lret
cmp
and
jp
xor
aas
mov
bound
lcall
cmp
test
es
jnp
inc
cltd
adc
enter
imul
inc
test
fsubr
leave
fsubrp
insb
loope
ret
dec
jo
stos
insb
insl
mov
cli
test
push
jecxz
loop
in
out
and
jno
je
and
pop
add
mov
lods
lods
xchg
mov
sub
fsubrl
xchg
wbinvd
add
mov
xchg
mov
hlt
dec
rorl
jbe
jge
jae
mov
pop
xchg
cmp
adc
bound
stos
xchg
mov
in
sub
gs
in
in
push
sbb
dec
push
or
sub
cmp
call
add
ret
xor
in
shlb
sub
mov
lcall
jmp
or
pop
shlb
xchg
leave
mov
pop
add
aam
bound
cmc
add
and
add
dec
jnp
popf
cmp
inc
push
push
and
das
ret
and
stc
jge
add
aad
adc
and
aad
push
iret
lods
xchg
xor
mov
jl
cmp
addr16
adc
xchg
cwtl
cmpsl
mov
pushf
movsb
mov
and
mov
popf
daa
xchg
sbb
out
sti
subb
insl
lret
jmp
dec
jmp
cmp
xor
clc
cmp
add
in
push
adc
push
js
push
mov
mov
pop
push
hlt
and
push
dec
repnz
xor
mov
cld
ja
cmp
enter
cmp
cld
pmaddwd
decb
aad
pop
getsec
test
ja
insl
stc
cmc
fsubl
jmp
mov
mull
out
in
mov
jmp
ljmp
ret
mov
cli
inc
jnp
mov
out
cmpsl
cmpsl
jmp
jmp
das
jp
idiv
out
cltd
pop
adc
mov
enter
and
out
and
aas
adc
test
dec
mov
push
lahf
aas
mov
dec
pop
shl
pop
push
in
clc
jge
rol
add
shrl
insb
in
mov
jno
aam
dec
int
std
js
das
rcll
mov
adc
fnsave
testb
lahf
push
lahf
sub
fadd
mov
fldl
popa
out
lret
pusha
nop
xchg
mov
jge
inc
popf
pop
mov
push
rcll
test
jmp
dec
mov
and
ljmp
mov
push
mov
cli
dec
int
cli
inc
cld
inc
jne
sti
pop
jnp
das
jle
ljmp
pop
je
inc
xor
xchg
imull
or
adc
xchg
rcrb
neg
cmc
mov
jle
xchg
fucomi
cli
push
scas
adc
mov
push
shll
sbb
imul
and
cmpsl
das
mov
lcall
cli
mov
in
dec
out
xchg
mov
outsb
xchg
repz
xchg
fdivl
es
mov
dec
jle
dec
test
pop
imul
pop
fwait
scas
out
das
add
in
sub
loopne
jle
push
lret
movsb
pop
dec
mov
mov
xlat
outsl
mov
jmp
repnz
jge
xchg
iret
jg
jp
cmpsl
inc
mov
rorb
out
add
mov
adc
frstor
loop
ljmp
shrl
or
pop
shl
fndisi(8087
lock
mov
imul
xor
dec
out
call
push
xlat
push
fisubrs
jae
fdiv
jp
into
into
fcoms
repz
shlb
lods
lods
jle
sti
mov
jbe
xlat
and
notl
test
repz
sub
cld
lods
ss
loope
mov
inc
cmp
cs
jne
cmp
mov
pop
insl
repz
push
je
jbe
and
mov
fmul
pop
into
aam
mov
sub
int3
icebp
and
mov
nop
and
inc
fisubl
mov
rep
add
cs
fisubrs
int
ret
xchg
in
fbld
das
inc
and
xor
mov
cmp
pushf
ror
int
jnp
lods
push
jno
mov
lods
mov
les
loope
sub
xchg
xor
adc
leave
sbb
push
aaa
call
cmp
jo
lahf
inc
out
xor
in
sahf
sahf
cmp
sbb
sbb
imul
mov
out
shlb
addr16
out
jmp
loope
adc
shll
jae
dec
mov
inc
pop
and
daa
daa
xor
gs
xor
pop
sub
cmp
lods
repnz
ljmp
inc
sub
aad
add
cld
mov
dec
mov
movsb
scas
scas
mov
xchg
inc
icebp
clc
data16
cli
adc
lods
sti
or
xchg
inc
mov
add
hlt
sbb
rdtsc
mov
sub
push
or
mov
in
sub
std
push
sub
js
inc
mov
insl
xchg
xchg
pushf
fiadds
add
jp
xor
jle
push
shlb
inc
loop
sub
jle
call
xchg
cltd
mov
mov
jo
mov
lds
add
mov
lret
movsb
test
jmp
call
clc
call
hlt
adc
ss
xchg
aad
clc
mov
iret
xlat
test
pop
repz
xchg
mov
popa
jb
xor
push
jne
cld
mov
shl
movsl
push
pmaddwd
jecxz
in
push
jbe
out
jns
aam
or
pop
mov
dec
and
cmpsl
clc
push
inc
icebp
movsw
mov
sub
jb
cltd
lcall
xchg
shlb
test
cwtl
sti
pop
pop
fcmovnu
sti
or
dec
pop
and
in
push
xor
push
ljmp
mov
sub
lret
push
sbb
sbb
sub
test
insb
mov
xchg
pushf
lretw
pushw
les
mov
insl
insl
jb
aam
inc
jbe
movsl
sti
add
add
pop
jecxz
push
outsb
and
pop
adc
cli
mov
inc
scas
jnp
sub
and
sub
outsl
popf
cli
std
lcall
xchg
inc
iret
dec
insl
call
xchg
jg
scas
int3
ds
adcl
jb
loope
jb
jecxz
mov
or
or
int
dec
adc
daa
dec
dec
dec
push
pop
cmp
lds
mov
bound
cmpsb
hlt
popa
jecxz
pop
pop
mov
int3
adc
and
fildl
sub
pop
cwtl
addr16
fs
jge
sbb
das
add
or
sub
js
adcl
xchg
jecxz
push
jge
iret
call
mov
lds
inc
lds
call
inc
dec
or
push
xorl
cli
fimull
dec
xlat
jmp
outsl
ret
test
imul
loopne
dec
sub
pop
mov
mov
iret
test
xchg
stos
cs
rorb
scas
sub
push
fdivs
push
push
orb
xor
cs
push
orb
nop
mov
xor
jge
imul
rorl
cmc
into
sahf
mov
outsl
mov
or
or
or
ret
sub
mov
adc
xchg
stc
push
push
adcb
mov
icebp
fldcw
imul
or
mov
or
adc
rorl
mov
idivb
fistl
lock
pop
add
sub
jo
subb
mov
mov
lahf
dec
sbb
adcb
dec
mov
push
pop
outsl
xor
xchg
lret
xor
lcall
and
push
mov
loopne
mov
push
test
and
mov
add
xchg
sbb
cmp
jl
bound
mov
sbb
mov
pushf
inc
push
lahf
stos
xchg
fwait
scas
and
cmp
cli
mov
add
push
and
lcall
fdecstp
adcl
loope
sbb
nop
aam
jns
incb
xchg
xor
dec
inc
pop
cmpsb
jne
sub
mov
or
sbb
xor
ret
adc
cmpb
add
inc
repz
fdivs
ficomps
inc
call
adc
cmpl
pop
and
inc
xchg
bound
mov
hlt
inc
popf
clc
movl
xor
gs
lock
or
jne
dec
sub
push
neg
mov
mov
push
cli
fmuls
or
push
pinsrw
iret
lret
push
in
lahf
push
mov
and
add
mov
dec
adc
and
mov
daa
ja
icebp
xor
pop
loop
lods
movsl
add
add
jb
mov
sbb
cltd
inc
hlt
mov
push
pop
or
leave
in
insl
jbe
lods
mov
mov
fstpl
ret
aas
jo
cmp
orl
pop
push
daa
pop
aaa
push
mov
jg
sahf
jns
adc
adc
xchg
add
pop
cmp
mov
fdivr
inc
add
das
inc
add
cld
ja
or
sahf
sbb
lret
mov
mov
pushf
in
push
and
outsb
adc
insb
xor
jbe
cmp
pop
sub
mov
ss
in
in
aam
imul
xchg
clc
loopne
popa
insl
mov
inc
mov
fdivs
push
ret
mov
movhps
add
sub
fbstp
pushf
imul
mov
sti
xor
jl
push
jmp
jbe
xor
inc
pop
mov
gs
addb
pop
inc
imul
cmpsl
stos
in
inc
xchg
div
outsb
movb
idiv
mov
inc
mov
pop
inc
test
cmp
xchg
pop
push
movl
xchg
rcrb
sahf
push
or
aas
sbb
ret
iret
dec
sbb
xchg
xlat
or
mov
cmc
push
push
inc
xchg
cmc
bound
pop
ret
jb
mov
stos
adc
daa
dec
jmp
xchg
cmc
cmp
test
cs
pop
pop
lret
cli
scas
arpl
subb
ss
and
rol
inc
sbb
mov
rcll
dec
push
mov
pop
and
lret
xchg
push
pop
mov
ret
xor
test
pop
in
xor
outsb
cwtl
sub
mov
call
dec
aad
mov
dec
test
cltd
add
pusha
test
outsl
pop
jno
aaa
push
or
nop
adc
repnz
cmp
jge
inc
and
dec
ja
pop
pop
rcr
cmp
stos
or
mov
mov
inc
sub
sub
cmc
inc
add
push
add
rolb
sub
sub
adcb
test
and
push
or
jmp
ss
xlat
pop
inc
es
iret
add
push
fs
lock
xor
into
mov
fwait
mov
test
mov
pop
inc
fwait
pop
jmp
cmpsb
shl
inc
popa
inc
loope
sub
push
out
mov
pop
xor
dec
insb
sbbb
xor
test
out
add
rolb
test
fldenv
or
lock
fidivrs
push
repz
into
jmp
xlat
jge
push
jbe
push
xchg
jo
mov
mov
or
in
es
and
pop
or
cld
xor
testb
cmpsl
jmp
fstps
iret
jno
xchg
mov
fmuls
xor
inc
jl
je
enter
xor
jbe
sti
lea
mov
xchg
arpl
movsl
and
sub
jmp
mov
and
pusha
sbbl
aaa
sbb
lret
push
incl
mov
imul
std
or
ja
ss
mov
or
jnp
sub
push
out
stos
es
xlat
int3
dec
jo
add
cs
xlat
pop
dec
out
arpl
lahf
mov
daa
mov
push
out
int3
sub
scas
rorl
jg,pt
js
aam
dec
mov
xchg
xchg
xor
scas
sub
popa
js
mov
sub
cs
dec
dec
dec
or
xchg
int3
or
adc
lcall
das
lahf
xchg
jge
lahf
mov
xor
xor
inc
adc
sbb
adc
xchg
lcall
sbb
shlb
pop
jo
jae
movsl
addr16
daa
cwtl
sbb
das
mov
and
cmp
mov
sbb
imul
out
xchg
mov
orb
lods
cmc
xchg
xchg
in
cmc
cmp
loop
std
fucomi
xor
outsl
fstps
les
outsl
hlt
and
in
jnp
jnp
jmp
mov
mov
adc
mov
inc
movsl
push
mov
jae
push
cmc
test
ljmp
arpl
mov
pop
sarb
ret
sub
add
add
lret
es
and
stc
andl
das
xor
lcall
push
les
mov
adc
push
js
mov
dec
push
out
jmp
xor
ss
mov
xchg
js
test
xor
xchg
das
dec
dec
or
inc
dec
popa
adc
stos
mov
dec
divl
xor
push
cmp
incl
inc
xor
and
lods
mov
icebp
jecxz
sbb
cmc
xchg
leave
mov
fs
xor
outsl
cmp
aam
out
adc
mov
sub
pop
adc
xchg
mov
dec
aad
pop
fcoml
je
xchg
in
idivl
outsb
and
clc
dec
xchg
add
arpl
gs
mov
inc
lock
stc
loope
xchg
mov
mov
sbb
dec
scas
pop
xchg
testl
push
and
out
aas
stos
out
mov
jle
or
mov
fcoml
nop
int
sbb
pop
add
push
out
into
cltd
mov
loope
pop
xor
es
pop
int3
bound
mov
xchg
gs
cmp
push
mov
jb
mov
movsl
aam
fbstp
inc
daa
lret
hlt
pop
cli
mov
shlb
bound
andl
out
ja
dec
inc
movsb
into
outsb
arpl
je
int
hlt
std
xchg
shll
mov
lahf
mov
sub
insl
lock
sti
mov
test
int
icebp
mov
sub
inc
sbb
mov
xchg
xchg
stos
rcll
pop
lods
mov
mov
inc
in
inc
shlb
and
jg
fbstp
cmp
xorb
daa
add
out
cmp
mov
and
lcall
pop
cltd
scas
push
sbb
lea
and
mov
lods
and
int
mov
lret
jae
or
outsb
ds
clc
sbb
pop
test
xchg
cwtl
cwtl
push
cmpsb
sub
xchg
cmp
mov
add
mov
in
cli
mov
jne
dec
xchg
les
mov
rorb
mov
shld
cmp
xchg
mov
inc
xchg
lret
fcomi
xor
out
xchg
in
and
leave
in
pop
call
xor
mov
inc
sbb
sub
ficoms
jbe
subb
pop
inc
jbe
sti
pop
and
mov
mov
sbb
push
mov
mov
ja
roll
loop
mov
pop
cmp
into
hlt
mov
pop
andl
pop
movsb
sub
sub
cwtl
pop
stc
xor
sbb
pusha
adc
ja
push
sbb
jge
sti
lds
bound
orb
test
div
leave
sub
testb
cmp
scas
and
mov
pop
add
ret
lahf
ret
stos
das
push
int
jo
das
mov
cmpsb
mov
push
mov
pop
pop
cld
mov
xor
loopne
cld
cmc
std
and
mov
cmp
xor
adc
or
mov
pop
movsb
push
and
rcr
adc
rcl
jmp
loop
sbb
mov
jb
inc
scas
mov
stc
repnz
xchg
add
jo
popl
lahf
sbb
cld
idivl
lods
dec
pop
fcompl
lds
addr16
bound
out
jns
ss
testb
mov
lret
dec
pop
je
ljmp
mov
pop
dec
push
jge
loop
mov
xor
and
iret
lock
sub
test
cmp
cmp
neg
sbb
xchg
dec
pop
inc
mov
sub
shll
shrl
fcom
push
fstpt
fwait
dec
addr16
loopne
xchg
sub
mov
insl
cmp
sub
mov
ss
cltd
daa
inc
in
stc
stc
dec
xlat
in
notl
cmp
or
fcmove
insb
nop
xor
xchg
mov
stos
gs
loopne
decb
mov
out
loopne
mov
cs
ljmp
adc
call
xchg
or
mov
fistps
jge
es
addr16
push
pop
dec
push
imul
pop
and
jle
and
lods
mulb
loop
and
xchg
jmp
xchg
push
cmpsb
lods
cmp
stos
outsl
lret
pop
pop
xchg
dec
or
std
jnp
add
movsb
lds
pop
inc
adc
mul
inc
leave
mov
push
aaa
or
cmp
mov
out
pop
movsl
push
paddb
push
push
cmp
je
int
pop
sbbl
push
movsb
arpl
xlat
cmpsl
in
mov
cmpsb
shll
and
push
mov
adc
push
ret
enter
or
xchg
dec
inc
adc
push
addr16
dec
aam
inc
mov
adc
daa
clc
fwait
ss
xchg
ss
adc
arpl
jae
fsubrs
pop
xchg
mov
xchg
mov
enter
stos
or
je
mov
sbb
out
dec
stos
mov
out
iret
jle
in
fsub
or
faddp
sbb
or
stc
add
push
or
into
xor
repz
lret
sbb
pushf
fiadds
sti
or
mov
lods
sbb
mov
push
popf
imul
std
lods
stc
sahf
mov
mov
imul
daa
adc
add
rolb
adc
mov
inc
sbb
or
or
or
or
add
rolb
adc
mov
mov
fcoms
sbb
cmp
rcrb
pushf
rcrl
cltd
ret
call
add
test
mov
dec
sbb
xor
ja
scas
inc
pop
mov
mov
sub
outsb
dec
push
inc
pop
dec
sub
outsb
fisubl
repz
daa
arpl
test
nop
shll
loopne
arpl
fsub
adc
push
sbb
insl
xor
repnz
pop
or
imul
sahf
cmp
dec
ficomps
push
adc
jb
push
mov
into
jae
int
and
pop
inc
push
mov
adc
xchg
add
push
adc
push
sbb
jnp
and
in
mov
out
jbe
fs
ljmp
cwtl
inc
lcall
fsubrl
jne
push
jp
inc
pop
xchg
mov
mov
add
jns
popf
lahf
mov
sub
leave
pushf
gs
sbb
pushf
inc
or
stc
rcrb
fidivrs
pop
rcll
lods
shlb
out
and
scas
in
and
sbbb
lock
lea
xor
jecxz
andb
nop
sub
repz
fwait
push
fcoml
xchg
cmp
int3
pop
add
inc
and
mov
or
into
cmp
outsb
cmp
fwait
sar
popf
mov
add
xor
ss
out
int3
mov
shlb
daa
mov
push
mov
xor
xor
adcl
mov
jl
arpl
movsb
fnsave
cmp
xchg
fisttpll
aam
or
push
lahf
sbb
pop
mov
jno
xchg
daa
je
push
mov
fs
ljmp
arpl
mov
scas
int3
imul
cmp
xor
ret
lahf
test
je
jns
jb
cmp
push
data16
bound
pop
dec
sbb
lcall
inc
movsl
adc
add
ret
cld
dec
cmc
clc
sub
sub
incb
cmc
jae
xchg
lods
pop
ja
dec
inc
mov
add
xchg
daa
sti
xchg
dec
sub
sub
enter
in
ljmp
xlat
int
mov
jmp
fmull
jp
out
or
xor
jge
out
jecxz
lret
idiv
daa
clc
ja
mov
stos
std
jg
cli
mov
pop
mov
jbe
ret
testb
sbb
sbb
mov
push
mov
aaa
stos
into
lock
popa
out
test
mov
mov
or
push
in
or
xchg
pop
jbe
jno
dec
inc
fldcw
sti
in
mov
bound
xchg
out
sbb
hlt
jo
jle
out
cmp
sarb
lock
repz
xor
imul
jbe
in
jle
cmp
jnp
lahf
pop
std
cmc
jge
movsl
hlt
mov
sub
insb
inc
imul
dec
fwait
lret
fwait
lods
cmpsb
in
cmp
adc
push
jecxz
pop
pop
stc
mov
inc
test
fiadds
scas
decb
jo
das
xchg
push
cmp
pusha
sbb
imul
dec
out
inc
in
xor
js
leave
frndint
cmp
jl
dec
cltd
scas
std
pop
push
xchg
popa
fcoml
daa
sbb
mov
out
push
fisttpl
dec
push
icebp
insl
mov
outsb
push
subl
push
push
and
call
ja
pop
mov
cmp
jg
add
fidivrl
or
fadd
idivb
lods
repz
mov
xor
mov
jle,pt
inc
xchg
xorl
xor
sbb
jno
mov
cmp
mov
fdivrl
cmp
cmp
das
dec
aam
push
jp
movsl
lret
mov
popa
enter
push
add
pop
jl
pushf
lds
int
in
mov
inc
cmpsb
push
jmp
aaa
xchg
pop
sub
rcll
fcmovnbe
ljmp
sbb
sbb
sbb
add
scas
loope
pusha
cmp
in
mov
cwtl
enter
scas
xor
jp
adc
mov
loope
ror
add
sahf
gs
pop
mov
imull
or
jno
and
cmp
and
es
xchg
inc
rclb
push
and
aad
dec
dec
mov
adc
imul
mov
fsubl
add
int
pop
call
push
xlat
xchg
clc
push
sbb
or
mov
jnp
popa
sub
push
stc
push
cld
push
mov
add
int3
cwtl
inc
pop
adc
jmp
push
ret
and
popa
ja
addr16
sub
and
fisttpll
lods
mov
push
out
imul
xchg
xchg
mov
cs
pop
mov
dec
adc
add
popa
ljmp
push
add
and
push
or
push
stc
inc
mov
cmc
xor
cmp
ficomps
sbb
push
mov
outsl
out
aas
je
sub
push
add
jmp
add
jl
and
xor
int3
push
mov
adc
stos
adc
loopne
adc
mov
lret
mov
or
js
icebp
daa
negl
or
inc
xlat
negl
cmpsb
ret
jmp
shl
jge
iret
rorl
in
pop
cmp
int3
dec
pushf
mov
pop
fwait
push
sahf
inc
loop
mov
sbb
mov
test
mov
fsts
dec
push
in
cmp
inc
cmpps
mov
stc
int3
stc
shll
pop
xor
addl
sbb
adc
lcall
xchg
fwait
and
or
xor
jo
int
imul
dec
mov
and
into
and
and
int3
cwtl
scas
insb
data16
fcmovnb
arpl
xchg
xor
jecxz
lock
xchg
jecxz
jmp
push
call
and
imul
sbb
test
and
jle
addr16
sbb
mov
sub
fchs
push
call
mov
dec
jl
cmp
sub
xlat
dec
xor
dec
roll
out
lcall
push
jl
add
jne
mov
sbb
cld
leave
imul
pop
ja
xchg
and
mov
arpl
adc
add
jb
rcl
or
inc
push
out
or
xlat
cmpsl
adcl
mov
jmp
prefetch
or
push
scas
scas
insb
imul
mov
adc
push
pop
adc
pusha
popa
mov
sub
mov
mov
cs
testb
rcr
movl
stc
insb
lds
lods
jmp
pop
scas
rclb
dec
xchg
sahf
mov
imul
shll
or
adc
jp
repnz
xor
jp
mov
xor
test
mov
xorb
cmp
sub
xchg
scas
dec
mov
in
inc
xchg
aas
fisubrl
adc
sahf
sub
or
daa
out
sbb
aad
xchg
cmp
xchg
mov
fldt
xchg
stos
data16
xlat
insb
sub
or
test
stc
xor
outsb
jbe
xor
pop
inc
out
xor
xchg
cmp
pop
mov
xor
fistl
add
or
add
in
fists
out
or
adc
loopne
pop
aad
sub
xchg
movsl
lret
xor
add
test
dec
mov
mov
faddl
rcrb
add
repnz
es
fwait
sbbl
or
jl
fnstcw
imul
das
mov
in
inc
into
pushf
jmp
xlat
adc
xchg
popa
pop
xor
push
scas
test
gs
mov
mov
das
repnz
movsl
sub
cmp
sbb
in
sbb
xor
add
loopne
addr16
pop
mov
push
mov
loopne
in
aaa
cli
xchg
or
cwtl
ds
stos
test
fimuls
rorl
out
xchg
pop
dec
jecxz
xor
xchg
pavgb
cld
fimuls
push
mov
xchg
cmp
sub
mov
mov
and
jno
dec
push
les
not
jge
ret
aaa
mov
pop
cmp
xchg
cld
lea
movsb
cmp
sub
fwait
cmc
pop
xor
push
adc
lods
icebp
ret
imul
lds
cmc
test
loop
pushf
or
scas
pop
ret
dec
rcll
stos
sub
js
cmpsb
cmp
lods
jmp
jns
dec
shlb
scas
pop
gs
rcrl
cwtl
cwtl
cli
cmp
pop
jns
inc
lcall
add
fmull
aad
sbb
pop
out
ja
out
loope
xor
jne
loopne
std
insb
cltd
mov
xchg
cmp
ss
inc
push
mov
dec
loopne
or
adc
test
in
mov
xor
sbb
sbb
scas
test
and
adc
adc
pop
jmp
stos
ss
enter
mov
adc
lret
cmc
mov
imul
add
and
lds
xor
stc
insl
int
push
loopne
pusha
push
into
test
outsl
fstl
aad
inc
sarl
pop
xchg
repnz
inc
push
lods
jle
dec
pop
push
dec
jecxz
mov
dec
mov
mov
and
stos
fidivrl
mov
pop
leave
sub
and
cmc
mov
or
and
push
aam
mov
enter
jbe
cmc
or
out
ss
mov
xor
adc
xchg
jbe
mov
cmp
pmulhw
xor
das
xchg
sahf
cmpsl
bound
outsb
cmp
jp
sbb
test
int3
mov
mov
inc
xchg
xor
cmp
mov
mov
imul
jp
pushf
xchg
out
pop
js
js
rol
aam
push
adc
jo
inc
pop
dec
dec
add
xor
loopne
mov
mov
shrb
xchg
sbb
negb
test
hlt
add
fisubrl
dec
jnp
hlt
dec
aaa
adc
and
mov
inc
push
fcompl
and
jecxz
or
dec
cmc
dec
cmp
ja
pop
gs
mov
push
pop
cmp
or
js
sti
cmp
rorb
loop,pn
sti
and
mull
dec
pop
out
pop
sti
add
rcrl
clc
or
sub
je
xor
idivb
xchg
xchg
cmp
xchg
xor
fsubrl
or
je
dec
push
shl
pop
cltd
add
mov
pop
mov
jecxz
mov
insw
adc
sahf
mov
or
fisubl
inc
xor
sbb
adc
mov
scas
mov
push
shlb
data16
in
mov
jge
jae
sbb
push
scas
jnp
mov
jg
addr16
push
cmp
into
and
stos
jae
std
popf
cwtl
or
sahf
cmpsl
testl
jge
and
rcrb
ret
jmp
sbb
sbb
adc
fucom
fidivs
fisubs
sub
inc
dec
xchg
leave
gs
sbb
es
lods
gs
fsubl
frstpm(287
mov
repnz
bound
xchg
scas
adc
in
inc
in
leave
adc
cld
cltd
mov
out
mov
movsl
adc
shl
lahf
pop
sti
push
mov
inc
jmp
and
push
add
inc
inc
out
enter
imul
pminub
xor
inc
mov
ret
lds
add
adc
xchg
imul
or
lea
outsb
imul
jp
mov
add
inc
xchg
int
xor
loope
scas
daa
les
pop
aad
sbb
outsb
fstpt
dec
pop
insb
mov
jg
mov
inc
leave
aas
add
cmp
fidivrl
popf
pop
cmp
aad
jmp
pop
out
jge
sbb
pop
cwtl
movsl
jno
fildll
and
fwait
and
aad
xchg
mov
or
imul
or
or
movsb
aam
gs
jne
jns
sub
in
adc
add
mov
and
enter
xchg
add
and
pop
mov
and
enter
into
and
fiadds
mov
aam
in
inc
jecxz
dec
sbb
push
fstpt
or
xchg
xchg
lcall
jmp
inc
cld
frstor
mov
and
jns
scas
pushl
out
icebp
sbb
jle
sub
adc
or
adc
loope
lret
dec
in
mulb
outsl
call
lahf
jb
sub
xor
add
xchg
pop
mov
xchg
jnp
or
cmp
inc
jg
int3
jbe
in
pop
pop
cmpsl
int
aaa
es
cmpb
loopne
fdivrl
clc
add
pop
in
pushf
adc
pop
lock
fistl
xchg
fisttpl
sti
outsb
jno
fsts
inc
dec
dec
jnp
xor
cwtl
enter
cmp
cld
cmp
cmp
jecxz
add
sub
pop
popa
mov
xchg
ds
cmp
pop
lret
cmpb
mov
xchg
xor
insl
fdivp
fwait
test
lods
or
add
popf
inc
push
dec
sub
dec
xor
inc
stos
out
jmp
incl
pop
lods
aas
pop
jle
pop
loop
xchg
jnp
loope
enter
shrl
test
in
ficompl
gs
loopne
lock
fwait
jae
test
out
jno
gs
jge
ds
and
cmpsb
mov
xchg
out
fs
jne
subl
rorb
imul
jg
cmpsb
cmc
popa
mov
mov
push
cmp
ret
scas
cmp
mov
push
fstpt
inc
loopne
lret
mov
and
lcall
sbb
inc
dec
cwtl
negl
cmp
loop
push
inc
jno
ss
mov
xor
popf
test
or
imull
mov
test
push
adc
aad
inc
or
mov
mov
pop
pop
jo
cmpsb
xchg
pop
shlb
sbb
cmp
pop
imul
mov
imul
les
test
repz
add
mov
stc
mov
es
sbb
fildll
or
out
in
dec
imul
dec
add
cmp
sub
in
adc
and
scas
push
mov
inc
or
sub
jg
movsl
movsl
lock
dec
mov
es
mov
scas
adc
stc
jno
mov
push
pop
cmc
pop
pop
test
pop
xor
popa
mov
ds
jp
mov
push
jno
adc
dec
pop
dec
lds
pop
repnz
adc
test
ror
jne
mov
sbbl
fs
dec
lods
test
dec
bswap
push
fcmovnu
adc
add
aaa
stos
inc
push
fwait
rcll
int
loope
mov
call
sbb
pop
xchg
xchg
mov
ss
push
lret
fdiv
xor
dec
iret
daa
mov
decl
xorl
lcall
and
and
stos
hlt
mov
xor
shlb
sbb
mov
and
daa
cwtd
sbb
fcmovb
lock
inc
jg
jge
sti
popl
push
inc
fistps
or
pop
adc
cmp
bnd
xor
mov
shrb
mov
inc
sbb
or
or
add
rolb
adc
mov
inc
sbb
or
or
and
movups
ljmp
ja
sbb
roll
jle
int
aam
test
inc
jae
aaa
adc
jo
add
cmp
dec
xchg
mov
daa
dec
iret
imul
sbb
xor
jecxz
add
repz
xbegin
adc
adc
repz
mov
mov
and
jp
mov
dec
fisttpll
sub
clc
pop
in
popa
dec
add
je
bound
cmp
add
sarb
push
aad
mov
cmp
cmp
movsl
hlt
cld
out
and
and
subb
in
mov
or
movl
jbe
sti
jge
xchg
je
es
dec
rcr
cmc
jle
adc
ficomps
pop
rcrb
mov
jmp
int3
out
push
xchg
shr
inc
aas
push
aad
popf
push
ss
jae
mov
ficomps
inc
mov
and
jl
pusha
mov
fucomip
add
loopne,pt
ffreep
rol
aad
out
sub
pusha
mov
xchg
mov
leave
inc
popa
divl
fdivs
push
lods
std
and
inc
in
and
arpl
mov
mov
cmpsb
aaa
out
push
dec
test
repz
jg
call
jge
pop
xor
iret
mov
dec
mov
cmp
jecxz
icebp
mov
add
xlat
sti
scas
or
push
push
cwtl
std
add
add
repz
push
xchg
sub
inc
or
lret
in
pop
or
cltd
popf
cs
dec
roll
rcrb
xchg
fwait
xchg
adc
ficomps
xor
pop
jmp
mov
scas
movsl
mov
jns
pop
adc
repnz
add
iret
lds
mov
pop
fldt
add
adcb
mov
fnstsw
jne
lea
xor
pop
imul
sub
inc
cmp
sbb
into
cmpb
sbb
pop
aas
stc
stc
jae
pop
sbb
mulb
sbb
pop
rcrl
inc
mov
scas
imull
fstpl
aaa
sub
inc
out
mov
sbb
idivl
inc
push
xor
mov
dec
aam
data16
mov
pop
sar
mov
pop
fwait
push
cmp
inc
sarb
inc
mov
fcomps
in
setg
jmp
cmp
into
cmpl
jb
or
daa
ljmp
out
cmpsb
in
outsl
xchg
sti
mov
cmp
out
and
lock
lods
dec
push
push
jb
mov
add
loopne
cld
xchg
sub
sbb
or
push
pop
jae
retw
js
arpl
mov
out
pop
add
lahf
mov
adc
rcll
out
mov
cli
mov
outsl
fldl
mov
outsl
rcl
jae
call
jnp
cmp
into
push
pop
push
inc
pop
fmull
xlat
jl
clc
xchg
sahf
sub
outsl
mov
sub
push
dec
incb
fidivrs
clc
pop
mov
mov
jle
dec
aad
lods
ret
xor
and
mov
jo
mov
adc
shll
aad
jmp
addr16
push
and
xor
xorb
lahf
cltd
fs
and
xchg
lds
mov
lds
cld
or
mov
movsl
sbbb
repnz
xchg
xor
push
fcmovnb
cld
cmp
jg
bound
cmp
jecxz,pt
ja
add
and
aam
mov
mov
nop
adc
stos
jno
repnz
mov
jno
fstps
sub
sbb
inc
or
enter
cmc
fbld
mov
adc
or
jne
clc
dec
cmp
push
out
rorb
jnp
es
xor
push
and
mov
lcall
bound
lods
and
lcall
stos
pop
dec
outsb
jnp
jecxz
cmp
xchg
xor
and
sub
out
pop
imul
cld
test
cmp
lcall
pop
dec
sti
in
loopne
pop
add
dec
xchg
cltd
fwait
and
add
push
push
arpl
gs
mov
ds
cmpsl
adc
adc
dec
xor
fisubrs
aaa
inc
jecxz
sub
cmp
and
inc
xchg
add
sbb
xor
out
xchg
test
and
stc
rolb
and
sbb
lret
loop
mov
jnp
mov
fisubl
push
popa
les
inc
lcall
cmp
mov
lods
pop
gs
in
jo
mov
mov
sub
int3
or
imul
rolb
xor
inc
xchg
pop
rcrl
cmp
je
pop
outsl
int
jge
mov
pop
xchg
cmc
in
loopne
mov
mov
adc
xor
pop
mov
push
setns
dec
pushf
push
iret
int
out
in
std
mov
outsb
jno
adc
and
lods
push
test
hlt
out
mov
icebp
pop
jp
add
imul
mov
movsb
aaa
jp
mov
das
jo
push
xchg
dec
add
lret
stc
mov
repz
dec
cmc
dec
cs
sub
and
xchg
leave
and
leave
xchg
xchg
sbb
and
add
xchg
clc
xchg
and
sbb
or
add
sub
pop
inc
pop
jno
xor
imul
or
pop
jecxz
dec
add
adc
adc
and
pop
int
push
cmc
rolb
pop
sub
mov
js
icebp
popf
mov
into
mov
lods
scas
dec
stos
mov
xchg
and
jo
jmp
into
iret
sarl
and
jb
jecxz
xchg
stos
dec
sar
jno
xlat
mov
or
inc
pop
jle
into
rorb
icebp
sub
xchg
inc
clc
clc
scas
out
xchg
pop
xchg
xor
xchg
sbb
mov
mov
sbb
mov
add
popa
sti
cmp
repnz
ret
call
jge
int
add
mov
cwtl
cltd
sub
mov
inc
aas
xchg
fisubl
out
pop
adc
xchg
scas
sbb
out
inc
push
es
mov
xor
fwait
push
push
push
mov
or
jb
jecxz
xchg
mov
xor
movsl
sub
xchg
pop
xor
xchg
outsb
loopne
test
addr16
push
jg
pop
xchg
repnz
fildl
insl
sbb
mov
lea
imul
or
adc
mov
xor
xchg
test
jge
xor
pop
mov
addr16
adc
lret
cmp
movsl
push
orl
ret
jo
shll
lahf
dec
test
hlt
add
pusha
les
jecxz
cmc
je
lock
aas
pop
dec
inc
jmp
fsub
call
pop
xrstors
and
mov
push
cmove
fsubl
inc
push
lahf
xchg
mov
add
sub
sub
shrb
lret
xor
sbb
unpckhps
push
neg
rclb
fcompl
repnz
pop
mov
jne
push
mov
xchg
sbb
sub
add
popf
fnstenv
jg
sbb
mov
scas
mov
cmp
jp
outsb
inc
das
dec
shr
les
shlb
outsb
mov
ss
pop
adc
in
dec
loope
aaa
outsb
sub
xchg
add
mov
mov
hlt
add
cmc
xchg
jle
and
sub
jecxz
out
mov
int
fnstenv
test
mov
scas
xchg
jnp
insl
jge
lock
push
jo
and
loope
cmp
cmp
dec
inc
pop
sbb
loopne
dec
add
je
jecxz
jnp
cmp
popa
dec
dec
popa
scas
dec
hlt
add
in
fdivrs
add
adc
push
mov
fidivl
je
mov
pop
ret
ldmxcsr
sub
mov
push
ret
jp
lods
pop
call
pop
in
dec
pop
jge
add
cld
popf
clc
push
mov
or
dec
out
fistpl
cmp
adc
jb
andl
push
dec
xchg
xchg
jl
fcoms
xor
push
mov
sbb
daa
test
in
add
enter
add
aam
das
jg
jp
add
pop
jl
inc
mov
inc
outsl
test
mov
in
jae
pop
and
out
sbb
push
int3
and
cmp
popa
or
cmpsl
sub
stos
out
push
xor
in
jne
sub
push
adc
jp
lcall
nop
ja
subb
adc
add
rolb
adc
mov
inc
sbb
or
or
add
rolb
adc
mov
inc
sbb
adc
ret
fldt
cmpsb
call
cmp
dec
fs
cmc
push
add
sbb
mov
xor
addb
xor
lock
icebp
and
fcomp
push
aaa
int
fmul
sub
pop
in
js
xchg
add
fildll
mov
adc
aas
es
dec
cltd
stos
jp
cmpsl
cmp
push
mov
sub
xor
aas
repnz
jne
cmove
fsubrl
popa
leave
hlt
fstps
enter
xchg
adc
decb
mov
adc
dec
lcall
push
lea
inc
jmp
pop
outsb
push
jo
and
and
xor
pop
imul
push
pop
sub
testb
popa
mov
inc
lods
dec
mov
cmp
clc
adc
or
adcb
aas
pop
in
mov
out
cld
inc
das
mov
inc
and
std
xorl
xchg
fwait
cs
push
mov
ja
loopne
hlt
add
ret
test
popf
int3
fbstp
filds
jge
pop
pop
add
ds
mov
pop
xchg
sub
sbb
jmp
js
jb
jp
sub
cmp
sbb
fucomp
out
lods
aaa
outsl
pminub
jb
jo
mov
xchg
lods
jmp
mov
mov
out
popa
decl
out
test
call
inc
pusha
jb
in
xlat
fildll
fs
loope
dec
lods
sti
nop
pushf
sub
push
int3
ljmp
xor
inc
loopne
inc
jl
jmp
repnz
xlat
fnstenv
aaa
mov
adc
pop
jbe
mov
jp
roll
mov
push
xorb
in
mov
xor
mull
sbb
inc
lods
mov
or
jae
scas
sub
arpl
pop
add
in
xchg
in
jmp
jbe
mov
fwait
add
jp
nop
aaa
cld
fdivrl
mov
lcall
jae
mov
xlat
je
std
jg
dec
xor
xchg
add
test
adc
jmp
into
dec
lret
mov
push
push
mov
inc
sub
pusha
sbb
stos
call
je
daa
dec
xlat
jne
subl
ljmp
push
mov
lds
push
subl
xor
lds
mov
inc
repz
cmp
lahf
leave
fs
sub
or
push
lods
jnp
scas
add
sub
aam
cmp
inc
add
mov
in
pop
adc
and
pusha
jmp
test
arpl
pop
xor
sub
push
mov
jbe
addr16
lahf
inc
inc
outsb
outsl
pushf
lds
sbb
gs
jae
jno
lods
testl
and
mov
lods
dec
leave
aaa
and
jbe
add
add
in
rcll
addr16
xchg
lcall
xchg
rorl
xchg
in
fsubrs
or
inc
sbb
sub
ret
ret
fldt
and
movsb
jle
pushf
dec
and
inc
push
test
lea
outsb
clc
push
sbb
rcr
pop
imul
gs
sub
data16
or
insl
mov
jmp
mov
int
push
stc
lret
je
sbb
js
jl
das
dec
add
inc
jo
dec
shlb
cltd
cmc
and
adc
inc
add
push
jns
mov
cmc
popa
and
mov
adc
adc
inc
adcl
push
pop
push
sbb
sub
xor
dec
pop
mov
scas
xor
inc
loop
bound
je
mov
cli
les
into
adc
enter
lcall
jne
lds
xor
pop
addr16
xlat
inc
in
negb
dec
loopne
jo
jmp
popa
adc
lock
sbb
push
xchg
push
aad
aam
adc
jge
mov
cmp
not
and
fsubl
ljmp
push
cwtl
add
inc
je
std
dec
sub
mov
divb
lods
push
push
and
ss
mov
mulb
mov
into
js
xor
cmp
jo
scas
mov
dec
lea
popa
mov
sti
das
jns
xchg
mov
sub
icebp
sbb
nop
mov
lock
or
jmp
pushf
dec
jl
adc
sbb
pop
test
aas
in
shr
sbb
loope
hlt
adc
js
enter
mov
fildl
cld
push
pop
testb
jecxz
cmc
sbb
fsubrl
ret
push
pusha
jne
lret
inc
in
jp
cwtl
pop
aas
aaa
push
nop
xor
mov
fmull
or
mov
lods
fisttps
mov
je
lds
test
mov
adc
fldenv
push
in
rcll
cmpsl
xor
xor
inc
dec
mov
dec
sbb
popa
testb
scas
push
or
in
aas
push
ja
dec
mov
adc
loop
mov
inc
sub
xchg
lods
cli
cmp
xor
ss
push
mov
mov
ja
xlat
inc
popa
popa
aaa
dec
std
fbstp
hlt
add
lea
dec
mov
jmp
or
or
mov
add
or
mov
xchg
std
push
daa
stos
stos
xor
insl
insl
push
mov
ret
mov
mov
mov
bnd
xor
fwait
in
rcl
or
add
sbbb
jl
jae
inc
fdivs
and
pop
push
xor
mov
jp
imul
in
push
sbb
loope
inc
addl
pop
mov
lods
cmp
sbb
pop
push
sbbb
push
sbb
pushf
jbe
jb
jo
adc
xor
decb
pusha
lds
pop
inc
lds
loope
daa
xchg
sub
sahf
hlt
jns
insb
sbb
hlt
mov
pop
lea
fidivl
mov
cltd
movsb
add
cwtl
ret
add
xchg
cld
jb
mov
fs
cmp
or
xchg
jno
hlt
into
sub
mov
js
push
in
push
mov
inc
mov
mov
and
es
jmp
sbb
pop
and
xchg
test
xor
cmp
or
mov
xor
lock
lock
cmpsl
push
lods
inc
mov
test
iret
adc
adc
ret
mov
lods
push
mov
mov
movsl
cwtl
mov
iret
xor
inc
inc
or
lahf
jge
mov
out
push
jecxz
js
test
pop
and
mov
mov
ret
test
pop
jno
shll
dec
adc
sbb
addr16
lea
xor
fnstenv
pusha
out
jae
stos
cltd
sbb
push
dec
adc
jno
test
loope,pn
mov
or
sbb
mov
xor
push
sub
xchg
inc
xor
int
cmp
mov
push
lahf
movsl
and
sub
push
sub
test
mov
lock
subb
mov
icebp
cmpsl
and
leave
inc
lret
stc
jle
cmpl
mov
pusha
mov
sbb
add
cs
mov
xchg
mov
out
add
test
and
xchg
xchg
mov
adc
sub
bound
push
xor
mov
stos
inc
sbb
push
ret
mov
adc
dec
pop
addr16
pop
xchg
cmp
aas
or
xchg
inc
rorb
sti
xchg
mov
and
sbb
stc
arpl
or
pop
mov
fstpt
cmc
in
push
test
stc
inc
cmp
out
dec
xor
loope
xor
divl
cmc
pop
cld
leave
jl
stc
sbb
bound
nop
fs
into
nop
jp
inc
scas
movl
cmp
inc
xchg
adc
xor
cmp
lods
pop
sbb
test
push
aam
dec
sbb
bound
loope
repnz
xchg
pop
subb
lea
inc
out
cs
add
xor
lods
dec
cwtl
arpl
sub
aad
push
sti
cwtl
fld
pop
scas
cld
pop
cli
xor
sub
mov
out
sub
mov
sbb
xchg
out
pop
int
sbb
aad
ja
sbb
add
xor
pop
xor
hlt
test
mov
adc
push
repnz
clc
fdivl
or
fstps
xchg
fisubrl
push
enter
jns
cld
subb
movsb
cmpsl
mov
jmp
shrb
jge
mov
andl
or
add
fadds
or
mov
pusha
stos
jge
jnp
sbb
icebp
push
pop
hlt
lahf
iret
lahf
mov
enter
and
scas
jg
pop
popf
scas
lret
push
xor
mov
jmp
dec
pop
jp
inc
pop
inc
xchg
xor
mov
dec
mov
xlat
adc
lret
xor
int3
push
or
js
adc
cmp
pop
dec
addr16
mov
cmp
cld
cmp
test
and
ds
mov
sarl
pop
add
fistps
lret
fisttpll
xlat
jmp
leave
cmp
xlat
push
stos
int
mov
loop
xchg
out
sub
adc
ljmp
ss
pop
lcall
mov
push
push
shlb
or
inc
scas
mov
mov
pop
mov
cmp
idiv
dec
push
lret
mov
xor
test
and
int
or
adc
cmp
or
repnz
xchg
test
hlt
sahf
cltd
inc
pushw
or
jae
popa
pop
shll
jge
ja
inc
popa
cmp
inc
jp
sahf
mov
inc
inc
addr16
shrl
stos
enter
jno
push
outsl
aam
push
adc
add
leave
ds
insl
int
push
pop
mov
loopne
xchg
pop
icebp
aad
or
or
xchg
out
jp
pusha
leave
mov
and
mov
and
jp
pop
pushf
jno,pt
inc
dec
mov
lods
fnstenv
push
test
insb
aaa
lahf
jmp
add
inc
sar
or
adc
es
mov
push
and
mov
inc
xchg
lahf
aad
ret
fimull
ds
fdivs
test
push
mov
cli
pop
fimull
cmp
cwtl
pop
mov
mov
push
xor
sbb
xchg
xchg
or
jo
sarl
ljmp
dec
mov
scas
repnz
xchg
cmp
cmc
push
dec
arpl
imul
pop
sub
mov
in
xor
or
out
in
imul
test
push
loopne
out
jno
dec
cmp
scas
push
into
ret
dec
sub
leave
and
cmpsl
test
mov
pop
dec
arpl
inc
xor
xchg
sbb
and
push
es
add
dec
push
in
int3
dec
dec
leave
pop
fucom
and
faddl
repz
inc
mov
push
jbe
cmp
iret
fistpl
jmp
dec
imul
in
xor
jecxz
pushf
out
dec
mov
call
inc
cltd
imulb
rcl
push
rcll
xchg
add
lcall
adc
and
dec
jmp
movsb
xchg
fscale
push
jae
stos
test
pop
mov
sub
jb
lahf
jle
mov
std
or
pop
popf
pusha
js
pop
int3
push
in
aaa
push
pushf
nop
sub
inc
xor
cmp
arpl
add
je
ljmp
in
iret
fcompl
into
ret
ljmp
lret
fwait
mov
lods
mov
inc
pop
pop
jecxz
or
mov
mov
repnz
scas
pushl
lcall
cs
mov
test
or
push
inc
es
push
and
cli
adc
js
arpl
mov
dec
xchg
test
in
loop
fwait
sub
leave
pop
sahf
stos
pop
sub
cmp
sbb
jge
and
call
mov
loope
negb
out
pop
xchg
cmp
adc
inc
dec
add
xlat
int
add
xlat
pop
loop
jmp
xchg
push
rorl
sbb
pushf
mov
adc
repnz
pop
cmc
mov
in
iret
fsubl
fidivl
fidivs
dec
fimull
daa
add
xor
cmpsl
and
pop
adc
in
leave
xor
mov
jno
cwtl
cld
sub
lea
daa
add
rorb
stc
repz
decl
xchg
cmp
addr16
dec
cmp
pop
xchg
pusha
sbb
int
fdivrs
pushf
fstpt
sub
mov
xchg
mov
nop
push
push
les
dec
out
sti
aam
dec
and
clc
cltd
repz
stos
mov
mov
pop
lods
aas
pop
jecxz
inc
clc
popf
popa
clc
cmp
test
imul
inc
push
cmp
loopne
push
popa
cmc
mov
jecxz
bnd
scas
call
popf
dec
imul
pop
inc
pop
add
hlt
or
sub
ljmp
jnp
push
jno
mov
or
aad
add
and
fwait
jmp
dec
mov
lret
loopne
sbbb
and
jo
xor
repnz
dec
mov
inc
inc
sbb
jg
lds
fisubrs
push
aam
xor
into
sti
sub
mov
inc
xor
mov
pop
jg
dec
shll
mov
fdiv
clc
loope
and
push
sbb
jb
mov
lret
push
or
push
inc
adc
jle
inc
sti
leave
cmp
fldl
or
js
xchg
mov
jns
je
add
or
repz
movb
call
push
inc
pushf
test
xchg
sbb
imul
dec
lret
orl
out
outsb
movsl
mov
xor
loope
arpl
and
mov
call
adc
inc
xor
insl
stc
and
fildl
gs
or
icebp
pop
das
or
mov
or
inc
mov
pusha
shr
add
cld
popf
cli
xor
mov
repz
lock
out
enter
in
mov
xchg
outsb
inc
stos
lret
jns
and
scas
popa
aam
icebp
dec
test
mov
mov
loop
sub
shlb
negb
ret
scas
das
aaa
cwtl
addr16
dec
pop
dec
ljmp
mov
ja
push
addr16
pop
jae
es
jne
inc
outsb
push
popf
repnz
push
cli
fldcw
lret
sbb
add
in
sarb
xchg
ret
inc
imul
or
and
imul
sbb
loopne
dec
hlt
mov
lret
cmc
stc
and
outsl
jnp
sub
test
popa
add
not
inc
jle
fmull
push
or
pop
sbb
push
leave
xchg
mov
mov
ficoms
inc
pop
in
shrl
add
push
mov
mov
dec
dec
adc
add
sbb
or
add
rolb
adc
mov
inc
sbb
or
or
add
rolb
adc
mov
test
push
in
dec
xchg
gs
jb
push
xchg
xor
mov
add
fisubs
fsub
mov
jae
std
and
and
xchg
xchg
jg
imul
addr16
mov
inc
sub
jmp
aad
push
xchg
adc
pop
sub
loope
lods
pop
dec
xor
or
xor
repnz
cmovs
mov
sahf
movsl
insb
jns
sbb
push
lahf
shrl
cmp
sub
pop
or
hlt
loope
xchg
pop
es
dec
jb
out
test
xor
inc
xchg
int
rorb
lods
push
pop
lock
jbe
in
bound
and
pop
mov
or
jo
arpl
data16
adc
push
xor
stos
mov
push
mov
mov
inc
jne
sti
mov
mov
cli
mov
fldcw
mov
sbbl
push
jmp
ret
pop
xor
arpl
mov
cmpl
xchg
sbb
lods
and
xchg
ret
jecxz
nop
fisttps
mov
hlt
mov
js
dec
add
cmp
push
popf
xchg
je
sbb
imul
inc
fcompl
loope
dec
test
cli
push
in
pushf
add
roll
insb
icebp
incb
sub
jno,pn
push
aam
xchg
mov
outsb
repnz
adc
jge
add
adc
cwtl
aaa
sub
and
in
inc
mov
lds
pop
inc
insl
add
push
inc
mov
fisttps
mov
add
cmp
in
call
cld
pop
inc
push
aad
addr16
inc
pop
adc
cltd
jg
and
test
push
mov
add
popa
cmp
pop
sub
popf
pop
lahf
out
es
sbb
jae
stc
std
imul
lods
sbb
adc
int3
shrb
mov
ljmp
outsl
mov
repz
pop
testl
enter
sbb
and
ret
pop
or
in
rcrb
and
add
cmp
inc
dec
jo
or
sub
adc
cmp
or
adc
push
insl
dec
sbb
xor
and
sti
pop
jb
ret
jae
mov
jns
popa
lcall
sti
data16
int
pop
mov
xchg
and
adc
jne
imul
add
mov
mov
jmp
lds
lcall
test
dec
cmpsb
push
fldcw
inc
sub
lock
sub
sahf
add
xor
inc
bound
popa
xchg
stos
push
mov
adc
popa
xlat
lcall
out
pop
sahf
pop
clc
sbb
dec
arpl
dec
fistps
lods
jnp
mov
outsl
sti
mov
outsl
jg
icebp
std
adcb
incl
pop
sub
push
lods
pop
addr16
and
mov
pop
sub
push
divb
fistpll
sti
inc
mov
pusha
jns
outsl
repz
out
mov
inc
xchg
add
jne
movsb
cmp
es
sbbb
rolb
mov
add
outsl
aas
add
and
pop
cltd
push
in
push
jb
xchg
cmp
push
mov
lcall
shrl
int3
cmc
adc
push
inc
xchg
jae
pushf
scas
mov
imul
dec
jge
dec
out
lret
pop
jbe
pop
mov
jae
nop
lods
in
aas
adc
cli
je
mov
outsb
stc
lods
fdiv
repz
jmp
imul
addr16
shlb
mov
xor
pop
insb
rcll
pop
sbb
xchg
popf
sbb
movsl
push
sub
lahf
mov
notl
repnz
std
adc
mov
in
lea
leave
lahf
jl
in
fisttpll
sbb
pop
dec
xchg
test
int
push
ja
mov
daa
dec
imul
cmp
andb
cmp
sub
rcrl
or
cmp
loop
pop
and
pop
inc
and
cmp
sub
cmp
pcmpeqd
into
jp
ds
jae
mov
imul
mov
fstpt
mov
cld
sahf
stos
cmp
xchg
enter
inc
inc
mov
push
mov
pop
ret
pop
mov
inc
out
ficoms
xchg
and
cmp
sub
or
inc
mov
xchg
out
push
mov
push
insb
ja
xor
fdivrs
repnz
jl
sub
adc
aaa
hlt
into
pop
test
arpl
sahf
les
adc
adc
fisttps
xor
pop
sub
ret
lock
sbb
aas
mov
notb
test
insl
jae
mov
xchg
and
daa
pop
fsubl
ds
addb
jp
or
rorb
mov
xchg
rcll
pop
sbb
pop
add
cmpsb
mov
or
mov
dec
sbb
jne
cmc
sbb
loopne
and
nop
xchg
sbb
mov
add
fadd
push
or
outsl
rolb
sub
adc
mov
or
sbb
jbe
in
lea
push
pop
lds
inc
aam
ds
mov
inc
sbb
cmp
pop
insb
mov
test
sub
and
pusha
lods
pusha
inc
out
cwtl
push
cmpsl
push
mov
gs
dec
std
inc
xor
jnp
movsl
inc
jge
lea
addb
lret
sub
je
fsub
jl
mov
fnsave
xchg
fwait
mov
dec
rcrb
jecxz
xlat
call
repnz
adc
cmp
dec
movsl
sbb
sbb
leave
scas
repz
pop
ret
dec
and
rcrl
xchg
push
outsl
repz
xorb
addr16
outsb
repnz
cmp
add
jb
lock
je
mov
fistpl
lods
add
out
stos
loope
jbe
arpl
sbbb
gs
cmp
and
inc
cmpsl
dec
dec
xor
adc
xor
inc
jge
lock
adc
sbb
enter
aam
cwtl
fsts
sub
adc
jmp
pop
add
loopne
into
das
call
jp
mov
out
ds
mov
jle
jg
sbb
push
xor
lcall
mov
fmuls
loope
loope
sub
add
xchg
add
ja
xor
mov
sti
mov
xor
add
push
sbb
mov
and
jae
xchg
rorl
ffreep
mov
mov
mov
inc
sbb
jl
mov
push
push
loope
mov
cwtl
jb
mov
cs
xor
mull
jecxz
shlb
add
sahf
or
test
xorl
and
inc
inc
push
out
nop
and
and
enter
stos
inc
inc
push
imul
jecxz
mov
mov
or
add
pop
test
and
loopne
jo
out
pop
push
icebp
adc
mov
dec
enter
insb
push
inc
inc
push
roll
je
cmp
into
dec
add
or
ficoms
inc
inc
call
fsubrp
and
mov
roll
add
fmul
es
in
xchg
mov
inc
cmp
mov
xchg
or
cli
mov
pop
or
clc
cmp
dec
std
inc
or
xor
push
jnp
fidivs
push
inc
jmp
pop
push
adc
or
adc
fiaddl
ja
sub
mov
mov
add
add
xor
shrl
jae
fimull
ds
ja
sub
add
xchg
inc
insb
jl
icebp
lret
sti
mov
or
int3
adc
sbb
mov
outsl
adc
imul
mov
xchg
sbb
fcompl
sarb
push
sub
das
add
push
insl
add
push
pop
pop
stc
mov
nopl
data16
inc
jnp
xchg
ret
xchg
popf
push
pop
dec
add
mov
mov
xchg
movsb
and
es
add
ficoml
bound
mov
push
jo
shr
movsl
mov
test
mov
scas
jbe
and
cmpl
push
dec
mov
fimull
insb
int
inc
test
movsb
cmpl
adc
ss
cmp
mov
cli
lret
mov
into
mov
mov
leave
inc
mov
mov
xchg
dec
and
in
cmp
push
pop
into
jle
add
sbb
scas
mov
inc
pop
mov
out
sub
cmpsl
negb
cmp
pusha
push
shll
dec
dec
push
cwtl
pop
movsb
add
sbbl
push
test
scas
pop
push
sbb
xchg
dec
sub
adc
movsl
jle
lods
mov
rcl
or
xorl
jp
sub
jle
jno
ret
xchg
xchg
sbb
lcall
jmp
clc
shr
sbb
out
push
sahf
shlb
into
push
sbb
cmp
pushf
push
int3
arpl
insl
push
or
pop
cmp
das
into
mov
sub
sbb
jae
xchg
cltd
or
je
or
pop
adc
jae
cmpsl
jle
shlb
mov
fcomps
sub
adc
dec
fnstenv
sub
repz
cltd
sbb
int
adc
pop
aam
ror
imul
push
call
outsl
jle
jae
mov
lret
jo
and
clc
out
cmovb
or
out
adc
jg
out
cmpsb
jo
mov
out
sbb
test
xor
leave
ret
cld
xchg
mov
enter
mov
jge
mov
mov
je
sub
cld
xor
je
inc
or
add
cmpsb
sub
sbb
test
adc
adc
aam
cwtl
test
mov
dec
out
and
fwait
gs
adc
mov
leave
in
movsb
xor
jmp
add
sbb
sbb
lcall
dec
push
push
push
or
mov
cmp
cmpsb
mov
jns
pop
adcl
dec
sub
cwtl
dec
lret
popf
lock
in
mov
fdiv
dec
lret
inc
inc
in
lcall
inc
gs
xor
notb
jmp
aad
mov
rcr
pusha
and
sbb
call
mov
inc
pusha
jns
fdivrs
xchg
lock
dec
cmp
mov
pop
std
mov
inc
mov
mov
testb
jo
xor
lret
test
stc
adc
sbb
pop
xchg
scas
movsl
movb
nop
add
mov
arpl
stos
call
inc
js
aaa
outsb
outsb
loopne
data16
test
push
pop
add
popf
sub
jl
adc
push
mov
push
in
add
mov
fdivs
jb
sbb
ljmp
mov
adc
push
add
in
lret
in
push
idiv
bound
cmp
cmp
and
xchg
jb
and
mov
loope
int3
test
push
inc
sti
das
jnp
sbb
sbbl
test
loop
popa
pop
pop
and
sbb
daa
inc
mov
inc
adc
ljmp
iret
dec
rolb
xchg
lds
or
xorb
ret
mov
cwtl
rcr
ljmp
adc
dec
add
aam
test
cmp
dec
add
adc
imul
addl
jno
adc
loope
test
sub
pusha
mov
call
inc
jge
repnz
push
or
xchg
sub
inc
jno
cwtl
xchg
mov
xchg
add
inc
aam
mov
cmp
jb
sub
movsl
call
or
je
iret
fwait
cmc
ficoms
test
pop
sub
sbb
testb
adc
cmpsl
adc
rclb
nop
in
sbbb
jg
inc
inc
inc
repnz
out
xchg
in
mov
test
aas
nop
sub
and
cld
repz
jbe
mov
out
in
xchg
js
in
xchg
cmp
xor
sahf
fwait
or
or
and
das
pop
leave
mov
leave
mov
xor
pop
cmp
mov
cwtl
mov
mov
aad
test
push
dec
arpl
and
or
dec
cmp
jae
mov
mov
repnz
out
cmc
mov
adc
sbb
jns
cmpsb
xor
popa
mov
inc
lea
sbb
push
or
jmp
or
call
lds
add
stc
inc
roll
fsubl
mov
jnp
loopne
cmp
int3
movsl
and
cmp
mov
xchg
cmp
test
pop
imull
or
add
andb
call
mov
mov
or
pop
aad
cmp
mov
scas
je
pop
aas
xchg
mov
jmp
cmp
or
out
dec
push
dec
push
js
dec
mov
xchg
imul
addr16
lea
hlt
clc
stos
cs
ja
jne
idiv
add
enter
or
lret
dec
and
adcb
mov
lsl
adc
push
mov
dec
in
mov
addr16
bound
call
pop
aam
mov
lcall
ljmp
incl
scas
xchg
lods
sub
call
clc
mov
fisubl
incl
imul
pop
or
ljmp
cli
aas
mov
adc
pop
ss
lods
cmp
int3
testl
pop
outsb
push
cmpb
mov
out
xorb
fcoms
sti
cwtl
sti
inc
jb
mov
pop
jecxz
fisubrs
cli
push
fldl2e
ja
hlt
adc
mov
aas
lret
repnz
push
test
test
cld
enter
es
lods
int
cmc
push
add
call
out
cli
std
and
lock
ficompl
jl
ds
lcall
jae
jmp
rorl
and
cmp
inc
push
test
mov
xchg
sbb
or
or
shl
cmpsb
shll
call
mov
dec
les
inc
push
mov
jmp
adc
xlat
mov
jbe
lahf
inc
scas
jle
sbb
and
gs
or
fimull
xchg
repz
cltd
lret
jae
mov
scas
fwait
ds
rcrl
dec
cwtl
cwtl
ret
sub
sbb
repz
out
pop
pop
dec
test
jae
mov
adc
adc
dec
adcb
inc
in
in
shr
insb
xchg
das
aam
out
ss
push
mov
push
lahf
test
out
xlat
aaa
cmpsl
lahf
mov
pop
sbb
mov
jnp
cmp
fsts
sbb
jp
ret
jo
mov
inc
xor
jge
push
mov
aam
cmc
test
orb
jb
fnstenv
dec
or
push
enter
pop
inc
push
lahf
sub
bound
xchg
xor
or
and
push
outsl
push
nop
aam
pop
mov
jbe
out
ja
pop
mov
and
xchg
rcrl
xchg
adc
add
xor
lea
idivb
aam
inc
xchg
hlt
rcrb
fisttpll
xor
push
jns
clc
imul
push
sti
pushf
test
pop
stc
ret
mov
xor
xor
push
repz
je
or
punpcklwd
ja
es
inc
add
dec
inc
mov
sbb
stos
xchg
clc
cmp
push
cld
in
das
stos
lods
xchg
jp
mulb
dec
adc
and
push
in
lret
or
lret
adc
sar
mov
cmp
xorb
push
lcall
mov
add
dec
push
cmc
stc
loope
sub
jnp
andnps
es
inc
rorl
mov
sub
loopne
xchg
pop
adc
mov
jo
lret
pop
inc
rorl
mov
sub
loopne
mov
das
add
mov
and
push
mov
cli
in
testb
push
ja
popf
mov
dec
int3
loope
cmp
pop
cli
mov
scas
push
in
outsl
pusha
and
test
ljmp
pop
jb
insl
pop
mov
ficompl
xlat
jp
pop
in
in
mov
jae
push
jb
pop
or
lcall
lea
out
bound
insb
sbbb
jno
stc
cmp
addl
mov
xor
mov
dec
mov
lods
popw
add
or
push
jl
inc
out
adc
lcall
adc
and
pop
jae
in
call
sti
add
mov
push
xchg
shlb
icebp
int3
and
mov
test
pushf
adc
in
mov
xchg
imul
aad
call
jl
xchg
cmc
ljmpw
cmpl
fst
inc
jo
in
pop
xchg
xor
xchg
rorl
and
xchg
fdivl
inc
cmp
xor
popa
std
int
sbb
insb
aad
in
notb
mov
jge
inc
dec
mov
insb
push
or
mov
repnz
add
cld
cwtl
imul
mov
mov
rcrb
cli
jecxz
add
dec
adc
push
into
cmc
cmp
cmpsb
xchg
insl
xchg
pop
aam
push
dec
lret
insb
xchg
or
push
mov
sub
int3
xchg
adc
sub
je
jge
xchg
mov
ds
pop
dec
lret
aad
push
cmp
out
mov
call
mov
nop
pop
xlat
scas
je
adc
inc
pop
aas
popa
mov
push
xor
cld
lods
in
mov
inc
dec
push
push
imul
jg
pslld
pop
push
add
mov
mov
pop
or
push
sarb
movsl
cvtps2pd
and
in
push
inc
cmp
movsl
xchg
js
aaa
stos
out
andb
in
movb
xchg
pop
sub
popa
sub
in
por
out
jle
mov
iret
xchg
mov
fcomp
call
ret
aam
out
stc
filds
movsb
jecxz
sbb
setle
jmp
push
inc
mov
mov
mov
inc
xchg
and
xchg
jb
xchg
mov
in
repz
dec
dec
xor
lea
and
test
out
dec
arpl
stc
adc
lret
loop
mov
mov
out
inc
push
mov
es
test
and
adc
and
leave
cmp
jge
test
fsubl
js
or
inc
pushf
ror
mov
cmp
out
inc
movsb
ds
sbb
add
adc
and
push
cs
stc
hlt
cmpsl
je
push
js
jg
mov
dec
mov
jg
pop
in
js
outsb
hlt
xor
inc
movsb
mov
aam
sub
shlb
pop
in
jle
ja
add
cmpsb
lret
mov
out
fldl2e
sbb
fcmovu
jl,pt
jg
fcomi
sti
fs
or
aaa
fiaddl
pop
aam
jl
mov
fistpll
mov
mov
lea
clc
cmp
daa
jne
shll
inc
movb
push
pop
ljmp
faddp
repz
jle
pop
leave
mov
sub
pushf
shll
xchg
xor
pop
jb
cmc
lret
dec
nop
xor
xchg
sbb
emms
cmp
int3
out
dec
push
popf
inc
jmp
inc
pushf
pop
jno
mov
jne
nop
std
dec
movsl
or
push
in
js
mov
ret
xchg
enter
sub
in
mov
adc
inc
pusha
cmp
out
fbld
xor
cmp
mov
dec
in
adc
jmp
repz
into
int
sub
arpl
add
iret
daa
and
dec
xor
aas
xchg
loopne
outsb
xchg
xchg
test
pop
int
pop
aam
pushf
lea
shrl
filds
sub
dec
xchg
nop
cltd
lds
mov
mov
sbb
ds
aaa
cmp
cmc
mov
ret
lock
jp
aaa
jo
mov
stc
lea
dec
in
xchg
xchg
lock
movsb
sub
mov
jmp
and
test
jp
mov
jl
outsl
and
dec
xchg
adc
sti
jge
push
scas
add
jb
out
jl
xlat
adc
lret
jecxz
add
in
jns
hlt
out
sub
lock
insl
mov
cmp
shl
adc
pop
lods
call
aaa
dec
pop
sarl
push
pop
push
loop
rcll
jecxz
sub
fisubl
cmpsl
pop
loope
xor
movsb
jge
fbstp
jne
shrd
sarb
jmp
mov
mov
sbb
enter
add
push
repz
loopne
add
clc
inc
sub
or
aaa
mov
out
inc
out
jno
jae
jg
nop
add
pop
fxch
sub
ds
stos
fwait
daa
push
xchg
push
push
ljmp
add
push
pop
adc
inc
add
aaa
xchg
subb
or
ds
hlt
fwait
pop
mov
or
or
or
mov
mov
rolb
insb
sbb
add
mov
in
add
pop
mov
add
in
or
js
sbb
mov
lret
adc
add
sbb
lock
cmp
mov
in
insb
aas
adc
jbe
test
dec
insb
fistl
push
sbb
push
mov
pop
jae
test
repz
das
push
pusha
pop
cmp
add
push
mov
ss
adc
pop
add
add
call
rcr
dec
mov
in
notb
test
lock
jo
movsb
adcb
loop
push
sahf
das
les
mov
fwait
xchg
in
mov
stos
sbb
mov
adc
xchg
add
mov
and
test
popa
mov
jg
pop
pop
sti
into
sbbb
adc
dec
dec
jne
mov
add
aam
faddl
loop
inc
dec
or
movsl
lods
lock
xchg
xor
popf
mov
inc
je
jecxz
out
mov
shlb
aas
jmp
test
dec
sbb
loop
push
lcall
xchg
mov
decb
push
or
incb
aad
loopne
orb
dec
lret
ret
stos
sub
clc
pop
lcall
daa
les
mov
out
fptan
sub
in
mov
lret
lahf
sub
or
lahf
pop
push
dec
ljmp
xchg
and
mov
adc
idiv
xchg
sbb
fsts
and
push
push
das
lds
sahf
cmpb
inc
inc
addb
idivb
inc
pop
add
sbb
sub
mov
mov
push
push
push
lods
test
inc
addr16
push
mov
add
inc
xlat
aam
mov
dec
out
in
pop
enter
orl
lcall
add
add
outsl
push
inc
sahf
cmpb
xorb
movsl
pop
jno
sub
paddusb
bound
inc
pop
and
pushf
push
xchg
push
mov
push
cmc
cmp
test
or
test
repz
movsl
push
push
enter
in
or
jns
test
xchg
movsl
sbb
pop
imul
push
stos
adc
cmp
mov
stc
pop
push
mov
add
mov
mov
push
imul
dec
or
out
or
imul
je,pt
sbb
add
daa
enter
push
mov
or
sbb
dec
fisubrs
leave
mov
push
js
out
push
ret
ficompl
cmpsb
outsb
sbb
cmp
inc
shll
dec
cli
out
fistpll
sbb
test
xlat
ds
inc
and
jmp
cli
inc
inc
out
mov
cmp
push
xchg
cmp
xchg
xorb
add
popa
scas
pop
in
mov
xchg
xorb
push
xchg
jnp
loope
pop
test
pop
sub
push
les
mov
mov
rorl
mov
aad
adc
jo
lock
ds
jbe
mov
add
cmp
nop
and
dec
pop
out
test
sbbl
sub
mov
lods
mov
or
mov
xlat
push
icebp
adc
sbb
jbe
or
add
iret
and
aad
jp
movsb
xchg
int3
xchg
add
mov
pop
icebp
mov
inc
loopne
iret
push
and
or
aaa
xor
mov
jmp
fcoml
movsb
push
fisubl
out
lahf
and
imul
dec
bound
add
dec
dec
adc
xlat
popa
es
inc
or
mov
fisubs
mov
nopl
jnp
mov
cmp
mov
je
jmp
add
dec
dec
jecxz
mov
push
sbb
neg
mov
call
or
cli
lods
or
xchg
xchg
ja
xchg
cmp
cmpl
je
into
or
cmp
aas
jbe
and
int
xchg
inc
xchg
arpl
arpl
subb
int3
dec
sbb
adc
push
and
lds
push
cmp
add
popa
mov
dec
stos
push
mov
xchg
jge
jne
jo
mov
push
roll
insl
pop
insl
sbb
iret
inc
jmp
push
push
lds
imul
neg
mov
push
and
inc
and
mov
in
xchg
jne
mov
dec
cli
or
outsl
push
and
push
xor
hlt
dec
jb
test
rorl
int3
lock
jge
jae
sahf
sarb
repz
stos
pop
ljmp
adc
inc
or
lahf
ret
push
mov
jb
clc
adc
push
dec
dec
call
add
inc
add
test
dec
lret
dec
sarb
push
in
test
adc
mov
push
bound
jnp
sti
stos
or
bound
adc
jae
je
shlb
or
add
mov
inc
imul
pop
jp
mov
add
and
cld
cmp
adc
dec
fs
out
idivl
scas
mov
lock
daa
mov
and
jl
lcall
cwtl
pop
xchg
sbb
xchg
dec
mov
mov
mov
mov
ja
dec
push
push
mov
out
imul
nop
sub
push
stos
cld
mov
jnp
fcmovne
lods
mov
mov
test
orl
int
ret
cmc
pop
push
mov
mov
mov
pop
or
pushf
adc
test
rcrb
in
pop
jmp
push
mov
xor
scas
lret
aam
pusha
xor
rolb
loop
xchg
divb
sbb
xchg
aam
adc
jo
bndldx
sbb
jnp
aam
pop
js
test
inc
scas
pop
push
cmp
enter
push
mov
lret
adc
xchg
movsl
and
movsl
test
imul
jbe
hlt
add
ljmp
inc
and
xchg
mov
cli
in
les
mov
xchg
pop
xchg
mov
jae
xchg
pop
inc
jge
fs
mov
inc
cmp
jmp
xor
mov
push
sbb
repz
notl
pop
jo
jnp
out
fiadds
cmpsb
lcall
cmp
lds
fcompl
mov
xor
lods
xor
pop
imulb
popa
mov
and
mov
inc
imul
scas
and
push
or
icebp
stos
ljmp
sbb
pop
and
sbb
repnz
push
jecxz
dec
adc
das
jo
push
or
sbb
xor
jmp
shrl
jae
xchg
sbb
and
aaa
or
xchg
push
imul
xlat
lea
push
insl
sbb
jecxz
fcmovne
addr16
push
aaa
je
in
mov
mov
cs
add
add
and
movsb
test
jl
cs
mov
cmp
bound
es
ret
jnp
in
outsl
mov
push
dec
fsubrp
icebp
pusha
aad
push
sub
sub
cmpsl
ret
or
sub
mov
xor
stc
push
pop
mov
inc
adc
jne
add
dec
sub
xchg
mov
xchg
sahf
imul
daa
xchg
xor
aam
fisttpll
je
scas
pusha
aad
jecxz
popf
mov
add
push
fstl
stos
or
cmp
and
aad
mov
mov
daa
cmp
aad
jo
fiadds
jge
jg
pop
inc
xchg
add
jmp
stos
push
pop
dec
pop
test
lret
mov
sbb
jns
lods
jecxz
jnp
ja
adc
adc
cmp
adc
arpl
sti
mov
mov
mov
dec
lods
ja
sbb
jle
lods
pop
daa
dec
xchg
sti
into
in
and
cs
mov
cmpsl
insl
fisttps
insl
test
imulb
push
dec
xchg
xlat
cwtl
mov
dec
mov
out
repz
lods
out
lods
xor
push
jg
jb
in
lret
xbegin
pop
jl
das
pop
ret
sbb
and
push
fwait
sahf
push
data16
cmp
arpl
pop
jle
mov
mov
movsb
adc
enter
cmp
pushf
lcall
stos
fstpt
shl
inc
mov
arpl
jle
xchg
mov
mov
int
aad
addr16
push
jmp
jmp
mov
cmp
cmp
dec
ljmp
cmpsl
ds
repz
hlt
mov
inc
xchg
aad
js
xchg
stc
cltd
cltd
insl
lret
or
cmp
xor
mov
sahf
bound
dec
sub
add
adc
cmpsb
data16
fwait
outsb
xor
lret
xor
pushf
rorl
inc
jo
popa
mov
xor
mov
mov
in
repnz
lcall
push
jp
adc
xlat
pop
inc
and
idivl
jbe
fwait
mov
cmc
dec
adc
hlt
or
mov
jbe
lds
xor
jge
aas
js
test
push
pop
mov
imul
test
push
repz
jbe
pop
push
jae
jp
push
add
mov
push
es
dec
xlat
stos
mov
push
sbb
inc
imul
out
inc
ret
nop
test
jg
cli
cmp
notb
adc
jmp
adc
push
add
pop
jecxz
fisttpl
xor
push
xor
lahf
cmp
fcompl
iret
mov
pop
inc
mov
sbb
dec
mov
add
dec
mov
add
and
sub
sbb
cld
dec
inc
xchg
or
in
loopne
xchg
mov
test
push
and
and
sub
fildl
test
mov
aaa
mov
xchg
movb
adc
push
fstl
xchg
data16
orb
sbb
mov
and
and
mov
pop
jae
xor
shll
fcomps
jne
cmp
lret
into
mov
mulb
or
add
and
add
push
in
xchg
inc
loopne
stos
xchg
inc
movsl
jl
mov
sbb
xlat
ss
stc
and
stos
cmpsl
pop
push
or
dec
inc
arpl
pusha
mov
jo
dec
inc
dec
xor
dec
sbb
fnstsw
mov
push
loopne
xchg
add
mov
xor
sti
test
lcall
shlb
add
sbb
push
add
gs
pop
adc
jo
lret
pop
inc
rorl
mov
sub
loopne
xchg
pop
adc
jo
lret
pop
inc
rorl
cltd
sbb
push
pop
negb
aam
fdivr
sbb
inc
stos
ljmp
call
lea
mov
adc
inc
hlt
out
jmp
mov
inc
sbb
incl
push
ret
mov
cmc
in
sbb
out
stc
ja
out
subb
dec
xor
inc
in
ja
xchg
sub
stos
test
popa
out
mov
dec
xor
push
mov
call
lds
jl
xor
dec
sub
lahf
rolb
outsl
sbb
xchg
lret
adc
fs
fstpt
sbb
cmp
or
mov
outsb
out
jmp
and
sti
sub
jae
adc
test
xchg
jecxz
mov
leave
mov
push
adc
xchg
test
pop
dec
lcall
out
sub
jnp
or
rorb
idivl
fdivs
js
mov
outsb
mov
jmp
bound
gs
in
jns
lods
out
in
ret
std
cmpsl
inc
adc
xlat
aad
pop
adc
jmp
jecxz
sub
fsubr
cmc
out
mov
ds
push
sbb
xchg
mov
inc
subl
mov
push
xor
rolb
sub
or
popa
mov
mov
repnz
mov
inc
adc
cmp
adc
into
insb
mov
pop
stos
imul
push
jl
stc
pop
leave
lods
mov
xor
push
arpl
pop
in
dec
jp
in
push
andl
inc
pop
outsb
gs
sub
xchg
sbb
shl
loope
jle
push
imul
fldz
sti
les
pop
xchg
jb
inc
in
xchg
mov
sbb
jp
fiadds
jo
inc
in
xor
xlat
mov
in
xor
xchg
int3
test
out
frstor
clc
ds
idivl
aaa
loop
and
fistpll
loopne
outsb
jmp
negb
mov
cltd
out
std
repz
jmp
cld
cmp
mov
ficoml
pop
adc
cltd
into
add
sti
lock
ffree
outsb
stc
fimuls
js
jg
jl
stc
fdiv
cmp
jo
xchg
pop
lcall
pop
das
push
xor
lods
jmp
mov
lods
scas
icebp
xchg
data16
and
fnstsw
mov
jno
cld
in
cwtl
jne
into
aam
cli
and
xorb
sti
adc
jne
sbb
enter
imul
mov
or
pop
lods
nop
insb
pop
cld
jecxz
or
adc
in
xchg
sarl
dec
popl
addr16
clc
or
imul
dec
int
and
imul
adc
out
ffreep
repnz
fisubrs
leave
cmp
fdivrs
sti
jmp
aas
jbe
int
inc
mov
out
rorl
frstor
push
jmp
lcall
add
push
repz
aas
dec
pusha
push
mov
xchg
add
inc
in
xchg
in
add
jbe
xchg
jnp
cmpsb
sub
jmp
xor
push
ja
clc
dec
mov
mov
sti
fnsave
fs
push
arpl
gs
and
addr16
data16
mov
pop
sbb
pop
movb
sti
mov
out
stc
jnp
inc
push
inc
inc
xchg
fwait
push
lea
data16
dec
add
ljmp
fs
push
jnp
lcall
mov
lods
in
jp
rcr
ret
pusha
cmp
push
add
xlat
gs
data16
mov
cmpsl
test
pop
mov
mov
adc
cli
std
xchg
lea
aam
dec
xchg
dec
sbb
std
xchg
insl
scas
xchg
imul
push
popf
fcomps
lret
imul
movsl
movsl
and
es
fistps
ss
and
outsb
fcoms
mov
outsb
xchg
and
mov
pushf
and
mov
mov
jns
test
dec
into
jmp
fwait
adc
lret
push
aaa
cmp
and
add
loop
scas
jge
or
loopne
scas
js
or
push
or
push
mov
xor
popf
loop
xchg
mov
das
shr
into
iret
lea
imul
cmp
xchg
outsb
xchg
cs
push
cli
bound
pop
push
pusha
fidivs
cmp
dec
lds
mov
mov
cmp
jae
mov
or
out
test
repz
into
dec
lods
mul
icebp
sub
xchg
fnstsw
enter
pop
xor
mulb
ljmp
jne
outsb
lods
and
shl
jecxz
xchg
cltd
sti
dec
std
lcall
mov
ficomps
push
mov
push
xor
rcll
fstl
icebp
or
inc
lret
ljmp
outsl
jp
jo
mov
popa
jb
mov
imul
and
mov
xchg
mov
mov
jmp
mov
out
in
sbb
lea
xchg
lret
loope
in
mov
xor
sti
push
loopne
push
mov
enter
mov
lret
imul
fistpl
sub
in
cli
jmp
sub
adc
xor
inc
imul
data16
mov
jl
dec
nop
ja
int3
jno,pn
aas
adc
adc
loope
je
test
xor
mov
or
mov
aaa
or
int
fdivs
ret
outsl
jo
sahf
cli
std
repnz
pop
cmp
jnp
imulb
mov
mov
sbb
and
push
testl
std
or
test
popa
outsl
sbb
ja
shl
pop
adc
outsl
pushf
syscall
popf
loop
incb
mov
stc
cmp
mov
push
push
or
fstps
sub
pop
xor
sub
in
cltd
mov
xor
mov
cmpsb
inc
gs
fiadds
daa
mov
xchg
icebp
aas
cmp
icebp
repz
mov
fists
push
jbe
fdivs
mov
idivb
mov
jl
movsl
cmpb
inc
ss
adc
jle
cld
scas
pop
imul
int3
fildll
add
cli
add
mulb
inc
aaa
or
push
inc
mov
fistpll
iret
or
jae
aaa
imul
and
rclb
cmp
jp
dec
or
push
jl
push
ss
popw
xchg
xor
adc
ret
jge
sarb
inc
pop
loope
clc
call
shl
mov
out
xor
push
xchg
lock
leave
stos
movsb
xchg
push
push
das
fsubl
jnp
lods
or
mov
cltd
fyl2xp1
cltd
mov
sahf
in
or
repnz
add
sub
ja,pn
jns
xlat
or
les
das
sub
mov
mov
aas
jle
cmpsb
sbb
into
aaa
clc
enter
jo
rcrl
repnz
or
mov
in
insb
push
mov
enter
pop
mov
std
push
sub
pop
jmp
cmpsl
ljmp
scas
push
lods
rcll
out
push
push
and
xchg
out
gs
mov
xor
testl
cmp
fsubrs
testl
fists
arpl
cmp
push
out
pop
jg
sbb
insb
pop
in
sub
cmpsl
ss
sub
sub
mov
mov
push
imul
mov
rcrl
mov
lret
inc
pop
mov
dec
jo
imul
stos
mov
daa
faddl
lods
mov
fwait
jge
ret
cmc
sub
xor
loopne
outsb
repz
mov
mov
addl
lret
lret
or
cltd
mov
mov
in
cmc
cltd
jecxz
push
pop
rol
repnz
out
cvtps2pi
das
enter
and
and
repz
cmp
xchg
push
sbb
inc
subb
push
outsl
add
lods
rol
lahf
sarb
sbb
mov
xor
fstpl
fsubrl
gs
leave
int
sahf
inc
or
pop
es
push
lea
cmp
pop
es
pushf
lds
jno
dec
jo
fistpll
pop
fdivp
stos
iret
add
shll
xor
jb,pn
loop
xchg
cmp
imul
jb
mov
out
push
hlt
and
je
iret
xor
pop
lcall
lret
and
mov
mov
cmp
jg
imul
mov
mov
and
push
dec
and
mov
pop
inc
lock
jno
jp
jns
shll
push
loope
mov
loope
xchg
sub
loope
push
das
imul
pushf
and
lods
scas
das
mov
xchg
fwait
je
cmc
popf
scas
aam
je
mov
in
pop
cld
std
mov
sbb
das
aam
add
push
pop
stc
inc
and
int
test
inc
sub
jge
mov
mov
fnstenv
sbb
mov
shll
das
lock
inc
pop
mov
mov
arpl
out
pop
xor
je
das
dec
imul
xlat
aas
dec
cmp
fdivrs
jae
mov
test
popf
mov
aas
int3
pop
and
loope
rorb
pop
and
out
pop
aas
jge
push
add
out
mov
cmpsl
cmpsb
aam
pop
mov
pop
pop
sarl
pop
and
mov
mov
sarb
jns
subb
dec
push
pop
xchg
std
inc
movsb
cmpsl
mov
insb
shlb
lods
push
outsl
mov
adcl
gs
fsubs
mov
dec
shl
push
pop
rdtsc
sub
int3
addb
dec
xchg
xor
mov
pop
push
rol
or
jge
leave
fs
lock
in
mov
es
push
aas
fcoms
jno
fidivrl
hlt
leave
cli
jb
xchg
pop
and
mov
xor
add
mov
sbb
jbe
mov
arpl
fldenv
pop
testl
or
rcl
int3
xor
add
scas
mov
push
loop
stos
loopne
lds
push
jle
scas
dec
lret
pop
mov
out
mov
popf
sub
and
push
add
cmpsb
cs
mov
fidivs
and
mov
xor
jb
jae
clc
cld
fldcw
mov
jg
mov
fs
and
jo
mov
inc
mov
sahf
push
mov
mov
fucomi
mov
pop
dec
pop
aaa
xchg
and
dec
out
xor
int
in
lahf
das
pop
jae
sub
les
test
push
in
mov
sti
mov
popf
bound
adc
cmp
lcall
adc
fs
push
push
add
mov
movsl
aam
mov
xchg
pop
jg
sub
push
add
or
mov
and
dec
in
gs
dec
sub
pop
pop
aaa
test
ret
ret
inc
fcmovnu
mov
pop
in
bound
cmovo
mov
test
cmp
test
xchg
and
fisubrl
jge
fmuls
dec
jp
push
nop
test
cmc
fwait
pop
and
lea
aas
lahf
cmp
ret
adc
jne
loop
mov
out
jl
in
cltd
push
pop
sub
and
lea
stos
ja
sub
pop
or
lock
mov
stos
cmp
mov
jbe
xor
push
and
push
rcl
sub
lret
push
sbb
push
pop
insl
je
dec
shlb
inc
fmulp
lret
cltd
xlat
pop
pop
jnp
sub
push
ljmp
fldl
jle
in
shll
cmp
call
fistl
fisttpll
sub
mov
cli
adc
jecxz
pop
mov
ljmp
fcoms
push
arpl
addl
stos
jg
fdivs
shll
je
xchg
fnstcw
pop
enter
mov
iret
dec
cld
push
pop
out
jb
aaa
mov
sbb
nop
clc
insb
popf
mov
std
sbb
cli
mov
lods
dec
lcall
repz
push
cli
popfw
clc
mov
jg
pop
out
out
sahf
in
mov
fbld
mov
xchg
maskmovq
imull
xor
fbld
xchg
nop
pusha
stc
or
mov
cmp
in
fnstcw
lds
lea
sbb
jns
in
jbe
push
das
fistl
mov
jp
pop
add
addr16
jns
imul
outsl
testl
sub
mov
and
mov
inc
call
pop
sbb
jp
mov
adc
pop
mov
push
cmp
push
test
fnstcw
rcll
cwtl
fdiv
push
lret
mov
fistpl
scas
push
lret
popf
sub
in
mov
mov
add
sbb
aad
inc
push
pop
dec
sub
cmp
out
jecxz
pop
pushf
cmc
aad
pop
lret
fwait
lret
pop
rol
outsl
mov
sbb
inc
xor
aam
push
xchg
or
mov
mov
rorb
xchg
bound
adc
loop
pop
cmp
jg
outsb
inc
addl
lahf
xchg
mov
push
xchg
lahf
je
stos
mov
xchg
xchg
mov
dec
sbbb
daa
iret
imul
xor
pop
mov
call
jnp
pop
jns
xlat
rolb
aas
fmull
call
mov
or
jge
int
fsubl
scas
insl
jae
xchg
inc
dec
rcr
push
loope
ds
xchg
push
movsb
cltd
lods
xchg
sbbl
les
daa
xor
bound
data16
mov
call
pxor
rol
jg
or
iret
mov
xchg
shrl
fwait
into
stos
xchg
jle
xlat
ljmp
and
insb
mov
xor
inc
test
pop
cli
sub
lds
fs
push
js
je
cmc
mov
jg
js
xchg
push
std
movsl
stc
push
out
mov
rclb
mov
or
xchg
or
mov
jp
fnsave
jg
dec
dec
xlat
cmp
push
pop
or
or
stc
or
dec
mov
xchg
push
addr16
pop
dec
in
out
inc
inc
mov
in
xchg
or
or
pop
xchg
xor
stc
fiaddl
das
mov
push
mov
jbe
xchg
je
cmp
enter
subl
into
dec
iret
sbb
mov
es
mov
aam
xchg
push
fs
adc
pusha
out
cmp
inc
mov
adc
jbe
adc
sbb
cmpsl
nop
lds
lcall
in
lock
push
fists
pop
adc
cmp
xchg
dec
je
jo
test
popf
ret
adc
add
cmpsb
cmp
xchg
out
pop
rolb
pop
and
mov
xchg
mov
dec
cmp
outsb
lds
sub
adc
je
mov
inc
sti
mov
cmp
lahf
cmp
pop
inc
in
mov
rclb
and
decl
push
aad
mov
sbb
add
adc
stos
cmp
mov
test
mov
xlat
mov
in
adc
mov
or
and
xchg
in
inc
jmp
das
jmp
xchg
fcmovb
aas
push
jg
jmp
mov
outsb
jnp
ds
jbe
pop
cmc
call
or
push
sbb
xchg
pop
ror
in
scas
xchg
add
push
push
sahf
push
mov
and
ss
fdivrs
cmp
push
adc
and
or
std
mov
insl
pop
out
loopne
mov
xchg
cmc
mov
test
in
mov
out
pusha
jno
mov
shll
pop
xor
push
outsb
lahf
inc
stos
pop
mov
aad
jb
test
cld
ds
push
push
cli
adc
sub
jnp
scas
sbb
icebp
sbb
dec
gs
lahf
mov
add
notb
add
fbstp
sub
xor
cmpsb
jno
je
jnp
pop
pop
adc
std
pop
jle
mov
rclb
leave
fdivs
ljmp
push
push
ja
dec
in
and
mov
std
push
jnp
loop
in
sbb
push
sti
fbstp
cli
es
xchg
jle
aas
fnsave
fcompl
jg
and
mov
aaa
out
loop
mov
jmp
std
mov
push
fists
incb
lods
out
rcl
gs
jmp
push
addr16
mov
inc
iret
cmp
jmp
sub
mov
aas
roll
inc
lret
mov
sbb
xlat
sub
xor
out
mov
or
rcl
dec
mov
subb
repnz
psubq
mov
cltd
pop
imul
pop
mov
int
cwtl
fcoml
cmp
mov
xor
jmp
addr16
jle,pt
jmp
in
mov
addr16
cmp
push
sub
pop
xor
in
lods
js
insb
imul
mov
in
inc
pop
in
nop
add
aas
adc
sub
sarb
sbb
repz
mov
pop
jge
dec
lahf
loope
jnp
xchg
cwtl
cmc
std
into
lahf
pop
popf
daa
fwait
mov
xor
fwait
jo
lret
or
sbb
pop
sbb
sub
add
adc
scas
mov
lret
push
scas
pop
jne
cmc
stos
sub
fmuls
mov
je
loopne
pop
in
sub
fs
aas
pop
lds
push
push
cmpsl
xor
mov
mov
in
leave
mov
jb
cwtl
jmp
jo
push
inc
inc
std
mov
jge
imul
cwtl
xchg
repnz
and
jno
fwait
adc
jp
fsts
pop
mov
mov
outsb
inc
pop
cld
pop
push
addr16
into
dec
xchg
fdivrl
xchg
ljmp
das
mov
cmp
xlat
shrb
fwait
mov
scas
bound
movsb
rclb
xchg
aad
xchg
mov
cmp
push
std
mov
sub
out
or
orl
lea
xchg
dec
loopne
pop
jge
cmp
sarb
mov
pop
daa
cli
mov
push
insl
pop
movsl
arpl
jb
lcall
bound
mov
scas
shll
imul
ret
popa
inc
xchg
stos
pop
and
sub
mov
mov
mov
shlb
cmp
sub
lock
mov
fmuls
xor
cmp
cli
lahf
aam
dec
rclb
and
int
mov
mov
mov
pop
pop
cmp
hlt
inc
inc
inc
aam
xor
xor
jae
cmp
clc
fldenv
sub
nop
das
dec
xor
mov
jg
jge
pop
pop
mov
or
leave
je
leave
mov
xor
push
xor
das
dec
cmc
popf
or
fsts
dec
push
cltd
cmp
sbb
pushf
inc
into
test
decl
addb
add
mov
int3
mov
jbe
cmp
or
test
fldenv
mov
xorb
or
mov
lock
rcrl
push
and
loopne
movsb
mov
adc
pop
inc
cmp
inc
int
sbb
imul
dec
mov
call
mov
xor
adc
cmpsb
add
xor
fwait
adc
daa
push
ds
rolb
cmp
fidivrs
pushf
out
jae
leave
ficomps
cmp
divb
dec
outsl
arpl
hlt
aaa
out
outsl
in
je
rolb
and
dec
mov
jle
push
lea
les
mov
pop
pop
xorb
sbb
mov
xchg
inc
xchg
test
sbb
sarl
fcmovnb
dec
jle
sbb
shrl
lret
ja
cmpsl
fidivrs
fldl
in
stos
fwait
pop
repnz
sbb
out
add
cld
sbb
jle
push
pop
addb
pushf
or
cld
scas
test
add
iret
orl
mov
inc
add
add
out
fidivl
xchg
adc
in
movsb
jmp
cld
xor
push
inc
jbe
arpl
ja
cmp
test
call
cmc
cmc
jbe
daa
adc
jl
or
sub
ljmp
fwait
js
cmpsb
cmp
sub
out
xchg
jp
or
push
subl
jne
daa
adc
jge
xchg
iret
push
pop
pop
xchg
inc
xchg
es
and
or
loopne
imul
int3
sub
sbb
test
cmp
int3
add
adc
cmpl
test
jle
idivl
sbb
es
lods
push
mov
int3
je
es
sahf
out
jnp
ja
mov
xor
fistps
and
out
add
out
mov
sti
xor
out
insl
xchg
lahf
pop
scas
jp
addr16
or
aad
aad
repnz
cmp
sub
push
or
pop
stc
lea
mov
lret
jae
mov
mov
push
shr
jmp
push
ljmp
insb
adc
lea
cmp
test
leave
test
shl
pop
rcrb
jnp
test
imul
xor
subb
sub
imulb
adc
arpl
aam
dec
jae
stos
mov
lock
hlt
out
jno
push
arpl
sbb
outsl
cmp
mov
stos
ljmp
test
jae
push
sbb
enter
xchg
repnz
sti
pop
push
dec
outsb
xor
inc
in
outsb
push
imul
je
cmpsb
fidivrs
dec
shll
push
outsl
xor
test
sti
push
add
sub
cmp
loope
or
inc
dec
pop
stc
in
jae
lcall
add
push
cmp
and
add
xchg
sbb
add
mov
sub
out
mov
sub
adc
sbbb
std
and
mov
ret
iret
lret
les
inc
ds
jnp
push
cmp
popf
pop
mov
lods
lahf
fistpll
out
push
ret
jl
stc
out
stc
fdiv
xchg
cmp
int
gs
clc
xor
xor
push
fisubrl
leave
jnp
push
dec
fdiv
in
int3
jnp
sbb
mov
jo
dec
mov
mov
in
push
mov
push
fdivr
call
idiv
cs
mov
mov
imul
mov
dec
test
lret
dec
adc
pop
xor
test
arpl
dec
and
lahf
adc
xor
bound
xchg
and
cmp
test
cmp
out
push
xchg
es
mov
cmp
sbb
cmp
push
pop
loop
data16
je
push
inc
ja
out
jns
and
in
int3
sbb
pop
mov
subb
pusha
in
andb
adcl
stos
les
cs
jge
data16
mov
cmp
data16
add
int
mov
sti
fcompl
addr16
add
add
subw
add
and
mov
jl
push
bound
mov
js
sbb
dec
add
xor
inc
inc
nop
arpl
jno
out
outsb
imul
inc
test
xor
mov
mov
mov
jl
popa
xchg
popf
jo
into
dec
adc
lea
adc
or
jge
test
cmp
cmp
sbb
add
dec
sub
arpl
add
out
test
adc
ja
ret
test
mov
cwtl
jnp
push
add
scas
decl
ljmp
fsubrl
pop
pop
imul
mov
jecxz
cmp
loope
push
sub
outsl
fneni(8087
dec
test
or
lea
std
aad
decl
data16
mov
xchg
ret
pop
push
sbbb
popf
aad
jp
sahf
stc
mov
or
or
xor
xor
lret
push
pop
adc
cs
pop
testb
ja
in
adc
out
int3
xchg
pop
dec
mov
imul
insb
lds
adc
sbb
and
dec
pop
dec
fwait
xchg
lret
fldenv
dec
in
dec
hlt
aas
mov
xor
loope
jg
and
mov
es
hlt
pop
clc
stos
push
test
xor
pop
in
push
bound
and
test
test
adc
int
imul
xor
movl
aaa
pop
dec
mov
insb
or
xor
das
pop
fadds
fldcw
sub
rorl
fstpt
adc
insb
push
js
addr16
add
rclb
or
xchg
mov
xchg
add
fnsave
jmp
and
ja
push
sub
mov
repz
dec
adc
loop
data16
pop
and
ljmp
lret
push
mov
mov
jns
push
adc
sub
mov
xchg
outsb
pop
sub
pop
inc
fisubrl
ret
dec
cs
rorb
lret
outsl
cmp
jae
imul
cltd
inc
test
dec
jecxz
and
sbb
adc
fldenv
test
mov
cmpsl
push
mov
mov
and
xlat
sub
orl
sbb
sub
imul
xchg
aad
addr16
or
push
cmp
inc
cmpsl
movsb
xchg
les
out
pop
arpl
sub
mov
das
adc
sub
mov
fdivp
push
ss
sub
mov
icebp
repnz
inc
test
sbb
adc
inc
scas
popa
xchg
mov
ret
inc
xor
subl
push
cmp
jns
stos
jecxz
jecxz
ljmp
movsl
or
leave
lock
cmp
xlat
stos
fnstsw
push
data16
jecxz
jp
or
pusha
xchg
cmp
lea
dec
inc
mov
ss
and
jbe
and
mov
pushf
test
dec
ss
out
and
out
std
push
push
lahf
popa
and
dec
fsubl
insl
sahf
out
orl
out
decl
mov
sub
sbb
adc
inc
add
movsl
dec
out
sarl
push
fsubl
popf
mov
fcompl
inc
sbb
add
ja
dec
mov
pop
pop
insb
dec
das
add
insb
jcxz
fsubl
lods
and
fsub
xchg
sbb
pop
jl
dec
pop
or
loope
lgs
adc
fwait
pusha
popa
mov
mov
jmp
jmp
insl
outsb
fs
fdivr
cmpl
adc
lock
fs
outsb
dec
loopne
insl
cltd
adc
mov
les
xchg
pushf
out
imul
pop
or
mov
dec
jns
dec
loop
mov
outsl
push
sub
sbb
pop
in
xor
cmp
mov
jb
in
and
xor
movsb
test
adc
push
les
fcmovnu
dec
iret
mov
inc
dec
add
repnz
push
pop
push
ret
cmp
iret
test
adc
out
xor
mov
movsb
cmp
lods
jns
daa
lods
cmpxchg
jo
push
shll
dec
sub
pop
sahf
dec
scas
pushf
adc
pop
aad
dec
xchg
lods
cwtl
mov
jo
xor
andl
inc
add
jno
fiadds
cwtl
push
xchg
gs
loopne
into
je
jae
insb
or
stos
cmp
cmp
jmp
cmpsl
inc
mov
push
sub
dec
mov
pop
sub
aam
popa
das
adc
inc
daa
add
xchg
dec
shll
loopne
mov
mov
dec
mov
mov
shlb
sbb
mov
mov
cmp
pop
pop
push
mov
lock
and
add
mov
push
ret
dec
aas
je
sub
mov
pop
inc
out
ja
mov
stos
push
add
shr
ja
scas
pop
ja
insb
scas
movsl
mov
inc
pop
shrl
ret
aam
push
outsb
cmp
movsb
adc
push
push
std
jo
fwait
push
fisubrl
mov
addl
es
and
data16
add
and
test
ja
aam
adc
xor
or
stc
lds
test
insb
mov
mov
in
jno
or
pop
push
push
add
jmp
jle
movsb
or
loope
movsl
xchg
ficoml
xchg
leave
mov
mov
mov
sbb
sub
push
sub
adc
out
pop
sbb
mov
mov
jmp
dec
push
out
sbb
mov
jp
push
fidivrl
loope
xor
push
pop
test
xor
push
dec
push
mov
in
xlat
rorl
xchg
and
cld
jg
js
fs
pop
xor
xor
pop
stc
xor
push
inc
data16
jne
xor
or
in
lock
adc
cs
cltd
pop
fsubs
repnz
into
xchg
inc
dec
sub
data16
adc
arpl
movsl
orl
dec
pop
add
sub
fstl
sbb
ror
out
sbb
mov
pop
pop
aam
shll
popf
mov
inc
mov
out
js
outsb
add
mov
sahf
xor
add
push
loop
hlt
xor
loopne
fsts
adc
mov
sub
idivb
dec
xchg
adc
sbb
push
sahf
mov
lods
inc
or
aas
stc
call
mov
fwait
scas
xchg
js
aaa
das
addr16
and
stc
jnp
cmpsb
add
push
pop
pop
jae
cmp
mov
sbb
jbe
leave
pop
lods
rorb
jns
dec
jmp
insb
dec
and
mov
out
jno
mov
inc
mov
xchg
mov
xchg
lret
fstpt
lahf
pop
adc
ret
out
lods
pop
cltd
or
mov
mov
ficoml
hlt
mov
xchg
insb
cli
ret
lret
shrl
rep
or
pop
adc
jl
jnp
das
fcmovb
mov
mov
mov
inc
or
arpl
mov
div
mov
out
push
lcall
aas
inc
enter
push
mov
mov
jns,pt
repz
rorb
lods
mov
enter
xor
inc
fs
shl
jno
mov
jge
enter
cmc
mov
jge
push
push
jp
mov
cmp
mov
mov
lea
sbb
mov
cwtl
scas
push
icebp
sbb
stc
fmul
sahf
es
pusha
xchg
shlb
mov
inc
inc
mov
push
ljmp
divb
jb
scas
jno
mov
xchg
ljmp
shl
mov
std
or
out
out
mov
xchg
pop
add
cmpsb
ret
je
mov
jmp
imul
mov
into
movl
pop
ljmp
scas
popl
lock
pop
or
xchg
inc
loope
imul
ret
cmp
push
push
lahf
xchg
mov
dec
imul
sbb
and
arpl
mov
cltd
pop
xlat
mov
fwait
jbe
and
mov
sbb
cmp
mov
in
xchg
fcmovnbe
ljmp
sub
cmp
push
in
mov
or
mov
dec
ficoms
lret
nop
mov
jecxz
test
test
out
bound
xor
pop
dec
gs
call
inc
mov
xchg
fsubrl
lods
lods
mov
push
xchg
lds
aam
mov
mov
jb
cmp
bound
stos
xchg
sub
out
arpl
and
pop
mov
pop
xchg
jns
sub
aaa
loop
shl
push
lods
mov
cltd
sbb
mov
out
push
push
or
outsl
ret
sbb
sti
jmp
sbb
das
in
fisubrs
mov
aam
push
lahf
jecxz
cmpsb
jmp
rcr
and
push
mov
add
sub
jle
popf
je
inc
mov
mov
xchg
lods
out
push
stos
mov
or
scas
push
sub
mov
cmp
imul
jl
mov
and
mov
push
insl
jecxz
stos
lcall
lcall
mov
popf
cmpsb
imulb
mov
cmp
or
ret
addb
out
jnp
sub
pop
add
cmp
jae
scas
movd
pop
and
xchg
sub
std
xchg
cmpsb
sbb
pop
adc
movsl
xor
int3
pop
ljmp
mov
leave
sbb
test
cwtl
and
mov
iret
hlt
jle
and
movsb
mov
into
fucomp
or
rcl
sbb
sub
add
add
mulb
fimuls
mov
outsl
dec
adc
push
nop
ja
adc
orl
sti
es
mov
pushf
imul
inc
bound
pop
adc
xchg
repnz
in
lret
xchg
mov
inc
cs
int
repz
and
xchg
xor
outsl
cmp
leave
mov
loope
inc
fs
mov
pause
mov
inc
aam
or
lods
cld
jns
xor
mov
in
dec
in
repz
and
xchg
in
daa
inc
pusha
fs
sbb
xor
lds
bound
jp
push
xchg
add
and
stc
mov
adcb
cs
jl
inc
jecxz
jp
mov
sbb
push
mov
ret
xchg
inc
or
mov
ja
scas
imul
xor
and
mov
mov
inc
int3
jbe
ret
xchg
dec
mov
test
aas
inc
pop
arpl
popa
imul
lret
test
pop
in
outsl
das
nop
repnz
jge
cmp
in
int3
push
cmpsb
push
mov
pop
shll
test
movsb
in
adc
jmp
sbb
push
fbstp
ja
jmp
sub
add
pop
jbe
mov
mov
in
lods
pop
cmpsb
popa
inc
adc
fistl
xor
mov
cli
shll
aam
fdivr
fcomip
ds
push
mov
xor
in
outsl
adcl
test
xor
fwait
rcll
mov
mov
stos
in
dec
and
mov
jbe
mov
cmc
jp
cmc
and
add
and
mov
out
sbbb
sbb
into
lret
sti
adc
mov
jge
repz
sub
je
iret
jae
add
stos
in
pop
cltd
inc
and
and
cwtl
pop
aad
jl
sub
and
mov
in
mov
jle
jle
jbe
or
pop
cmp
pop
scas
repnz
jl
add
jl
adc
fimuls
add
sub
jne
es
inc
mov
les
imul
or
add
shll
sbb
std
jne
inc
dec
jbe
jmp
cmpsl
add
out
js
hlt
sub
lcall
iret
mov
mov
mov
cli
retw
bound
out
add
test
xor
push
jmp
mov
pop
test
hlt
push
cltd
icebp
mov
jmp
adc
unpcklps
outsl
xchg
rorb
and
and
xor
bound
adc
inc
aas
push
js
fcoms
cmpb
and
ds
push
or
push
xor
fwait
jne
adc
jae
pop
dec
aas
and
xchg
pusha
dec
or
ja
aad
mov
fisttpl
inc
cmp
xchg
daa
enter
pop
lods
mov
xor
pop
out
or
mov
mov
ds
and
adc
or
ja
sub
adc
inc
das
mov
xor
mov
mov
push
xsaves
pop
fwait
mov
div
lret
and
ja
les
imul
push
add
push
aaa
sub
nop
adc
loopne
xchg
cld
mov
push
popa
shl
test
inc
jne
fiadds
fidivl
imul
mov
lret
ret
adc
test
mov
testl
fcoms
repnz
dec
insb
jmp
cmp
insl
push
push
das
inc
fisttpll
mov
sbb
push
loope
ret
fldl
mov
lods
out
movlps
xchg
das
cmp
or
cmp
mov
lods
inc
gs
shrl
mov
cwtl
fistl
je
push
lock
ss
dec
sub
pushf
mov
cld
mov
sbb
fisubrl
ret
mov
and
lahf
popf
dec
nop
pop
shlb
jns
lods
test
adc
repnz
loop
jo
test
lret
pushf
push
sbb
in
in
jo
add
rcrl
pop
iret
add
out
ret
push
aaa
xor
lret
xchg
add
cmp
outsl
sarb
adc
mov
dec
lods
sbb
xor
les
add
mov
push
outsl
add
fsubrp
sbb
add
in
cmp
leave
pusha
pop
inc
xchg
test
pop
lods
fcoms
sbbl
mov
sbbb
subl
push
ucomiss
dec
pop
push
pop
jle
sahf
pushf
addr16
inc
enter
int3
sub
gs
cli
sbb
shl
lret
lds
inc
int
add
cwtl
dec
add
ror
adc
rcrb
xchg
and
ljmp
fwait
cmpsb
push
dec
call
bound
sbb
push
les
jne
or
xchg
nop
inc
aas
lcall
add
fldenv
fdivr
pusha
adc
add
popa
xlat
jmp
stos
pop
push
aaa
cmp
icebp
jne
xchg
push
adc
test
cmp
jecxz
loopne
lods
push
mov
stos
cltd
out
xchg
push
push
popa
out
incb
lock
and
cmp
push
push
out
sub
mov
hlt
adc
push
push
dec
shrb
cmpsl
jo
cmpsl
scas
dec
sbb
push
push
sub
push
push
mov
cli
js
mov
mov
mov
nop
aam
dec
cltd
sub
sub
das
lahf
pop
mov
test
or
sub
xor
in
dec
bnd
sub
cmp
arpl
in
decl
and
pop
outsl
sub
fmuls
hlt
cltd
repnz
dec
movsb
or
xchg
dec
push
iret
or
iret
aam
outsb
lds
int
adc
push
cs
clc
mov
test
adc
adc
cld
adc
dec
mov
cmpsb
mov
sar
cli
jge
dec
sbb
movsb
fstpt
aas
adc
stos
jae
push
cli
cwtl
cld
mov
adc
push
cmp
sahf
dec
push
fnstsw
sbb
rcrl
gs
clc
ret
hlt
movsl
popf
mov
test
paddd
add
jbe
xor
mov
repz
idivb
out
add
shl
jnp
push
in
int3
mov
rolb
decb
testl
pop
test
xchg
gs
decb
out
in
loope
call
pop
fbstp
sbb
jo
cmp
arpl
cs
aaa
sbb
fwait
mov
mov
xchg
dec
and
imul
or
xchg
inc
sbb
add
pushf
jne
stc
fadds
mov
pop
in
sbbl
pop
out
dec
jge
addr16
cmc
mov
decl
mov
cmp
add
in
xchg
enter
cwtl
int3
cmp
xchg
inc
add
out
out
inc
divb
pushf
filds
cmp
out
das
mov
imul
icebp
and
pop
inc
aam
mov
dec
mov
imul
mov
jp
jb
dec
xor
cmpsl
cli
out
stos
push
xchg
in
push
mov
ret
pusha
fnstenv
popa
xchg
call
jno
inc
lret
fnstcw
cmpsb
out
fsub
mov
or
jne
testb
lcall
repnz
or
addr16
divb
addr16
xchg
fldl2e
repnz
inc
or
cli
out
push
cli
sub
inc
test
jno
jbe
outsb
or
and
mov
loop
or
int
push
jno
addr16
dec
cmp
jg
aad
sbb
or
or
dec
test
or
and
add
mov
in
mov
lret
pop
pusha
fldl
mov
jno
or
cmp
sahf
push
add
mov
jne
push
inc
and
scas
adc
jmp
xchg
or
pop
icebp
inc
fsubrl
enter
or
add
pop
cwtl
fsubl
scas
cwtl
test
pop
sbb
mov
imul
sbb
cld
movsl
inc
sahf
ror
call
inc
jns
popa
push
inc
leave
and
shl
in
dec
aad
es
test
lock
dec
add
push
cmpsl
enter
adc
setg
sbb
jmp
std
std
mov
jnp
mov
jmp
cmp
xchg
popf
mov
popa
sbb
test
xor
cmp
inc
dec
xchg
test
daa
scas
or
push
mov
ds
js
pop
mov
jne
daa
lods
test
mov
mov
aad
arpl
and
punpckhdq
push
push
loop,pt
aam
xchg
cmp
aaa
cld
stos
sbb
sarl
testb
popa
in
ret
jmp
xchg
sub
inc
stos
out
jge
cmp
sbb
pop
add
shll
cltd
or
push
adc
xchg
sbb
shlb
mov
cltd
xchg
mov
cmpsl
push
mov
enter
push
out
and
rep
add
mov
je
cltd
push
fwait
mov
scas
mov
jo
leave
and
jb
push
out
mov
lahf
ljmp
inc
jo
dec
adc
xor
adc
pop
rcpps
rorl
mov
testl
cmp
shlb
jns
mov
jae
jecxz
push
shlb
jns
pop
and
ljmp
pushf
mov
js
insb
or
sub
test
push
lods
addr16
mov
imul
jmp
movsb
shr
jmp
cs
push
clc
cmc
pop
je
decl
jbe
cmp
lea
lret
ja
pop
loopne
xor
addb
out
add
scas
data16
add
test
sub
sbb
in
aad
data16
dec
sbb
sub
insb
or
lods
enter
imul
inc
lcall
cltd
push
test
mov
cmp
rol
out
out
jge
aaa
lret
fs
into
ficomps
xchg
cmpsl
int
out
fadd
int3
insl
je
pop
std
fcomps
gs
jb
sub
loopne
nop
test
push
repz
shlb
sbb
pushf
xor
sbb
jo
jns
mov
and
jnp
push
dec
xchg
or
jbe
stos
in
js
sub
jb
sub
mov
fisubs
psubb
iret
lret
testl
pop
lods
sub
lods
dec
cmp
xchg
aas
inc
and
jle
pop
jmp
into
int
push
mov
loop
xor
int3
out
mov
add
dec
pop
jmp
jno
cs
adc
arpl
add
jns
fs
movsl
scas
push
out
stos
popf
mov
mov
sbb
scas
pop
sub
xchg
les
xchg
adc
cmpsb
out
fisubs
fimull
mov
push
dec
aas
ficompl
mov
loopne
into
std
xor
sub
fwait
inc
bound
cmpsl
arpl
push
jp
sub
sbb
ds
pop
loope
pop
nop
cmp
andb
pop
std
mov
dec
jle
push
or
clc
movsb
lock
les
adc
and
testl
cmp
cltd
mov
enter
outsl
movsl
xor
cltd
mov
iret
insl
int3
cmp
push
divl
cmpsb
and
in
loopne
cmp
pop
int
dec
out
fdivrs
dec
dec
dec
dec
xchg
ret
lahf
or
pop
movsl
mov
cmpsl
mulb
loope
xor
xor
push
das
dec
sub
ficomps
cwtl
aaa
xchg
mov
sbb
iret
aam
dec
inc
insb
repz
out
ret
in
mov
or
test
add
adc
js
enter
imul
add
mov
cmpsb
aad
mov
pop
xchg
stos
xor
js
jg
test
xor
sbb
aaa
imul
repnz
dec
mov
lea
test
mov
fcoms
jne
int
push
daa
xor
mov
pushf
lahf
xor
lods
fildl
add
aaa
inc
add
dec
sbb
jmp
xchg
mov
lea
rcr
dec
mov
add
mov
xchg
xchg
sbb
pop
int3
je
xchg
xlat
dec
fnstcw
sub
imul
adc
inc
jmp
enter
xchg
mov
test
jecxz
dec
xlat
clc
sub
lahf
orl
je
xchg
sub
jl
icebp
ror
mov
cmp
in
xchg
leave
rcrl
jg
adc
inc
mov
mov
push
stos
nop
fwait
jecxz
outsl
and
mov
lret
lods
inc
rcr
or
pop
inc
pop
sub
pop
std
sbb
pop
push
int3
mov
cmp
cmpb
push
cmp
or
sub
sub
cmp
and
push
cmp
frstor
sub
and
sub
fidivs
popa
pop
jns
dec
fistpll
pop
jnp
and
and
pop
ss
jo
in
sub
sub
hlt
inc
mov
xchg
xchg
jne
daa
xchg
stos
js
cmp
and
inc
sahf
rorl
data16
int3
pop
int
fsubr
rclb
lock
aad
and
rcrl
mov
mov
sbb
xchg
in
pusha
stc
or
cmp
mov
dec
inc
jno
lods
xchg
sti
or
je
mov
stos
jmp
cmc
push
imul
adcl
add
data16
aas
and
and
fimull
inc
jne
pop
mov
and
lock
jmp
stos
rcr
repnz
shlb
mov
outsb
mov
or
mov
adc
popa
or
loope
push
test
bound
stos
jge
hlt
mov
lock
mov
lret
mov
ret
add
adc
outsb
hlt
cmp
aaa
jne
lods
out
inc
test
xchg
sbb
out
icebp
add
js
push
lret
or
iret
push
jge
sbbb
jle
push
and
and
ret
push
ror
daa
cwtl
fs
xchg
mov
mov
inc
pop
mov
add
mov
int
inc
aad
sub
scas
cmc
xchg
dec
data16
cwtl
dec
dec
scas
adc
icebp
lret
mov
pop
leave
scas
jle
shrb
dec
push
test
push
jge
rorb
dec
sub
aam
mov
lret
mov
daa
mov
or
adc
push
stc
inc
xor
sbb
test
lds
lahf
or
sub
cmp
sti
mov
js
outsb
outsb
loop
cltd
sahf
test
sub
xchg
or
push
pop
addl
std
cmpsl
push
adc
nop
push
add
mov
or
fs
icebp
dec
xor
and
scas
orl
ja
adc
push
xchg
je
fnstenv
lcall
inc
adc
jo
cmp
sbb
cmp
or
fimull
jp
sarb
push
lahf
cmpb
mov
jge
cmp
or
pop
fwait
imulb
repnz
js
adc
dec
movsl
push
mov
add
push
adc
pop
cmp
xor
fstl
out
sub
mulb
repnz
std
jge
insl
pop
mov
lret
mov
inc
popa
and
inc
xor
fildl
ljmp
negb
mov
mov
scas
sbb
dec
pop
mov
push
sub
or
mov
jecxz
ret
out
jno
fucom
test
mov
push
enter
stos
movsb
jnp
push
mov
pop
or
int3
pop
xor
bound
fwait
mov
int3
push
scas
cli
aas
push
lea
jl
push
adc
add
push
pop
js
sahf
add
mov
in
pushf
leave
mov
jmp
stos
sbb
jns
ss
stc
xchg
pop
and
into
lods
out
or
aaa
sbb
mov
xchg
jae
push
xor
es
adc
jle
mov
mov
fsubrs
and
sahf
mov
dec
mov
push
icebp
roll
cmp
jne
divl
cmp
mov
and
jb
clc
mov
mov
cld
inc
jp
or
or
adc
aas
mov
in
mov
and
push
mov
mov
sbb
jb
ret
enter
fmulp
mov
jb
pop
inc
cltd
sbb
cld
lahf
pop
loopne
adc
push
test
nop
aad
ljmp
popa
dec
dec
roll
test
arpl
lret
sbb
add
push
mov
ss
and
fucomip
pop
sub
repz
lret
test
mov
xchg
lock
mov
fcoms
push
pushf
test
dec
mov
lods
push
mov
test
sub
push
mov
dec
cmp
inc
adc
fcoms
sbb
jmp
fimull
adc
cmp
ds
pop
dec
ret
lcall
popa
cmpsl
sti
mov
adc
fsubp
dec
lcall
add
lcall
jno
popf
addl
mov
xchg
das
jge
mov
fs
aaa
mov
mov
shr
adc
xor
mov
xchg
paddw
mov
insl
pop
jge
pop
scas
mov
xor
pop
adc
imulb
sbb
cwtl
jmp
jb
mov
insl
incl
add
dec
inc
add
int3
cli
dec
push
mov
inc
in
mov
js
hlt
mov
sti
test
mov
add
mov
sub
pop
push
es
outsl
imul
jg
mov
enter
mov
jno
xchg
stos
enter
cmpsl
in
addl
sub
cmp
dec
ss
out
mov
xchg
and
and
mov
cmp
lea
stos
inc
ja
test
mov
xchg
jle
pop
loopne
xchg
xor
mov
popf
jbe
aaa
testl
xor
frstor
and
dec
jp
add
outsl
pop
stc
add
cmp
xor
fidivl
dec
fcoml
mov
testl
or
mov
inc
out
dec
sub
push
and
dec
cmc
in
aaa
dec
test
xor
inc
sub
sub
push
adc
ds
mov
data16
mov
lahf
fdivs
das
push
inc
jb
stos
decl
mov
int3
in
jno
xlat
rorb
stos
pop
sahf
pop
cmp
scas
sbb
movl
jmp
cs
out
je,pn
pushf
pushf
xor
mov
add
lcall
cmp
scas
push
aaa
xchg
in
stos
hlt
sbb
int
pop
add
mov
daa
loopne
pop
xchg
aas
int3
jmp
cld
xor
icebp
xchg
or
mov
imul
imulb
xchg
push
xor
cmpsb
mov
out
fnstenv
lock
adc
ljmp
outsb
and
adc
pop
imulb
jo
jno
jne
dec
imull
sub
sti
xor
mov
movsl
xchg
test
popf
ret
insb
mov
sub
jl
call
cli
das
adc
into
and
test
and
dec
negb
sbb
jne
popa
mov
inc
add
dec
jb
cmpb
sub
imul
fstpl
jl,pn
lahf
pop
daa
aaa
pop
sbb
mov
imul
and
ljmp
sub
pop
loope
pop
jno
inc
xchg
inc
test
push
cmp
pop
cmp
fildl
xor
pop
xchg
inc
fcmovnbe
mov
aas
aaa
cmp
aad
pop
pop
add
mov
fcmove
fisttpll
lret
outsb
lea
cmp
add
pop
inc
loopne,pt
mov
sub
mov
jecxz
out
dec
mov
and
imul
jl
push
mov
dec
loopne
mov
lcall
rclb
jns
stc
adc
sbb
repnz
das
ds
mov
pop
sub
push
lea
addr16
insb
adc
add
in
addr16
pop
and
jo
ret
das
call
cld
dec
mov
int3
sbb
mov
sbb
add
jl
or
js
xchg
lock
sub
clc
pop
jg
pop
jmp
sub
xor
aad
mov
movsl
or
outsl
les
cmpsl
inc
cmp
push
push
push
cwtl
dec
out
stc
mov
ret
idivb
lods
sbb
pop
fldt
loope
lds
pop
es
cld
jno
or
mov
addr16
inc
stos
shll
mov
jb
push
cmp
lds
stc
xchg
pop
fstpl
pop
icebp
aad
outsb
cli
out
sub
push
fwait
int3
jae
jb
cmpsb
rorb
scas
ds
es
sbb
mov
push
cwtl
idivb
aas
push
xchg
sbb
aam
add
fcompl
or
pop
fstpt
inc
mov
aam
or
rcll
out
shlb
push
and
and
inc
sbb
enter
xchg
sbb
mov
mov
dec
jge
test
ss
adc
pop
je
outsl
insl
mov
mov
and
jb
inc
ds
inc
and
jbe
and
sbb
mov
push
add
inc
jl
mov
push
dec
mul
add
add
push
add
fcmovb
dec
out
sti
cvtps2pd
clc
cwtl
dec
jecxz
daa
xor
shll
mov
aam
inc
pushf
fcomi
xchg
dec
cmc
test
fnsetpm(287
loop
cmp
mov
and
jo
pop
jns
lahf
adc
or
pop
jnp
jne
jnp
inc
mov
push
xchg
mov
mov
mov
into
dec
jo
fs
add
cmp
insl
loop
nop
adc
dec
orl
jae
frstor
out
jb
repnz
inc
lahf
ret
mov
clc
mov
insb
push
andl
pop
insl
testb
test
stc
sub
jbe
jmp
mov
fsubrs
push
addr16
xchg
js
ficoml
fcmovbe
faddl
inc
cwtl
mov
aas
xor
pop
add
stos
outsl
dec
dec
sub
in
jecxz
jns
pop
xchg
sub
insl
xchg
in
dec
daa
or
push
js
dec
xchg
cmp
ret
bswap
mov
mov
jmp
das
nop
gs
xchg
mov
roll
cltd
adc
pop
pop
jge
push
push
hlt
push
js
cmp
dec
outsl
std
cmp
sub
xchg
push
aaa
and
sub
shrl
test
push
push
int3
iret
mov
loope
jecxz
or
in
das
xor
inc
push
insl
add
lret
imul
iret
xchg
das
repz
popa
les
sub
xlat
xchg
repz
jbe
sub
int
mov
add
sub
mov
fdiv
xchg
and
xlat
or
lods
lret
pushf
and
jmp
imul
xor
es
clc
jb
rolb
mov
loopne
push
shlb
stos
cld
leave
inc
jnp
movsl
loope
jae
push
call
push
add
inc
jno
adc
or
sbb
pop
cmp
loopne
inc
and
mov
xor
mov
sub
repz
mov
test
adc
test
mov
filds
pop
jecxz
jecxz
mov
int
mov
rcrb
push
mov
dec
mov
fwait
jo
jo
ljmp
hlt
mov
imul
dec
mov
xchg
mov
mov
neg
imul
out
cld
fcmovne
popf
mul
fwait
loop
out
jmp
fsubp
push
test
mov
or
add
xor
sbb
or
or
adc
sub
fsubl
mov
shll
jbe
leave
popa
les
jge
mov
and
loope
jne
or
fmull
out
dec
sub
into
mov
jle
xchg
dec
or
jb
pop
stos
xchg
xor
orb
pop
stos
cmp
mov
lret
in
fdivs
shlb
push
pop
jne
stos
xchg
add
in
inc
daa
outsl
cmp
mov
push
fwait
in
xchg
imul
push
xchg
jo
add
ljmp
daa
aam
jno
sbb
ja
mov
or
outsl
sbb
out
add
lahf
sub
xor
push
and
enter
jne
mov
jg
pop
sub
jge
popa
lea
jmp
sbb
subl
push
add
dec
adcl
int
out
add
test
sbb
lock
shrl
fcmovnb
fnstcw
leave
xor
aad
les
jmp
xor
adc
mov
lret
jae
xlat
adc
sub
sbb
ds
inc
int3
rcr
repz
jecxz,pt
out
stos
cmp
or
leave
mul
or
lds
inc
or
insl
mov
iret
cwtl
or
or
and
pop
xchg
test
iret
leave
mov
mov
or
mov
mov
mov
outsb
cmpsb
xchg
inc
xchg
or
int
popf
mov
repz
cmp
xor
mov
sub
xchg
lcall
or
mov
add
lods
insl
mov
lds
mov
lock
shrb
pop
cmp
cwtl
jmp
pop
lock
lock
xlat
mov
push
out
mov
mov
mov
jl
or
mov
and
push
daa
cmp
pusha
aaa
fsqrt
idiv
sbb
mov
and
push
xchg
ljmp
rorb
shlb
push
enter
xchg
fldcw
dec
jl
leave
mov
cs
mov
mov
test
cmp
in
sbb
inc
fistpl
jns
push
jle
jns
imul
lret
mov
sbb
int3
lea
rcr
adc
push
int
repz
mov
push
incl
pop
fldenv
push
mov
xchg
lods
loopne
dec
jns
iret
cmp
rcrl
fwait
and
lock
mov
cmp
sub
push
mov
popl
ds
aam
xchg
orb
insl
fldenv
mov
cmp
out
sub
xchg
mov
std
mov
adc
pop
xorb
adc
or
outsl
sbb
adc
sbb
in
je
js
out
out
loop
dec
jp
cmpb
aaa
lods
arpl
outsl
ret
in
aas
pop
jne
scas
jno
jb
mov
cmp
jno
adc
xchg
sub
mov
lods
in
push
jno
pop
pop
push
xlat
mov
push
repnz
sub
dec
xchg
test
xchg
je
fistps
in
sbb
mov
mov
cltd
aam
aaa
fwait
pop
jne
fdivrs
push
cmpsb
out
mov
out
pushf
fimuls
stos
stc
nop
adc
or
rcrb
mov
push
mov
add
and
popa
repnz
div
test
mov
test
sub
dec
sub
std
arpl
repz
push
xchg
dec
mov
pop
adc
pop
push
ret
addl
clc
insl
fcomp
inc
sub
pop
jl
gs
mov
or
rcll
or
fwait
mov
call
scas
aaa
rcr
xlat
dec
dec
jne
jmp
je
lahf
and
inc
bound
mov
mov
lea
mov
nop
mov
repnz
mov
sub
ffree
sub
mov
inc
push
jb
mov
aad
shrb
jae
into
ss
shl
repnz
mov
or
dec
jo
or
inc
int3
enter
je
sub
xchg
mov
push
ficoms
lret
jl
cwtl
sub
insb
ror
push
mov
or
push
cmpsl
mov
popf
fwait
add
sub
sub
xchg
pop
xchg
add
fmulp
int3
mov
iret
sub
or
mov
jle
cltd
shlb
dec
lcall
mov
addr16
xchg
cmpsb
push
lret
scas
dec
faddl
stos
cmp
rol
fld
fcomp
outsl
scas
lds
stos
pop
jne
cltd
les
dec
sub
push
mov
or
vaddsubps
push
iret
push
popf
out
cli
push
mov
pop
dec
jmp
dec
lret
pop
pop
dec
lea
xchg
and
push
inc
push
sahf
pop
add
adc
addr16
dec
cltd
inc
mov
stc
insl
xor
pop
fcmovb
jns
or
stos
add
inc
sbb
sahf
mov
mov
inc
cmpl
and
mov
repnz
popf
aam
xor
push
mov
jns
aam
icebp
or
pop
popl
repz
inc
popf
push
xchg
movsb
fisubrs
or
ljmp
lcall
cmpsb
and
cmpsl
mov
stos
cs
movsb
inc
sub
mov
call
clc
es
cld
xor
inc
mov
aad
mov
test
popa
pop
les
int3
mov
fsubr
ja
or
dec
jns
movsb
in
hlt
aad
xor
mov
mov
xor
jmp
push
sub
cmpsl
fildll
push
xchg
jl
xchg
fdivrs
les
xchg
stos
dec
xor
mov
jecxz
int
cmp
xchg
addl
jno
sahf
data16
dec
push
js
loopne
movsl
dec
mov
or
xor
inc
imul
in
or
decb
imul
les
bound
insl
inc
bound
out
jp
mov
push
out
mov
imul
hlt
pop
aaa
push
jmp
cmp
in
pop
lds
cmp
sub
dec
rcrl
rorl
mov
fimuls
insl
mov
enter
out
push
cmp
movsl
fistpll
adc
lret
fwait
push
cmpsb
out
cmp
cmp
je
sahf
xor
inc
or
pop
pop
mov
out
pop
dec
movsb
push
movsl
and
push
pop
sub
mov
shl
cmpsb
mov
and
and
inc
xchg
testl
rcrb
mov
pop
adc
adc
je
adc
repz
mov
mov
rol
mov
lods
imul
movsl
insl
imul
addr16
nop
push
pushf
lret
in
outsb
and
jno
dec
cmp
xchg
mov
das
mov
dec
mov
hlt
testl
dec
dec
add
fistl
movl
push
in
jle
and
xor
pusha
or
loop
sub
lret
cmpsl
int
leave
sbb
add
and
aas
inc
cltd
xor
dec
stos
push
adc
mov
push
clc
sub
jp
push
push
pop
xor
enter
lock
push
mov
arpl
lods
mov
inc
mov
scas
push
call
jo
and
shll
xor
add
xchg
test
xor
stos
xchg
jne
insl
cmpsl
jb
mov
in
rol
out
lret
mov
lret
ljmp
xlat
pusha
and
mov
shll
in
lods
ss
cwtl
mov
and
clc
inc
or
dec
inc
dec
sub
xorb
nop
mov
dec
popf
pop
test
lea
loope
add
insb
dec
push
adc
sub
mov
fildll
inc
rolb
and
iret
pop
insl
sub
sbb
scas
cmpsb
xchg
adc
mov
lock
out
lahf
shll
icebp
cmpsl
les
in
lock
dec
test
inc
in
ds
out
cmpsb
xor
call
jg
leave
xor
push
sbb
insb
sahf
dec
rolb
js
je
push
popf
mov
or
outsb
xchg
or
repz
fwait
cmp
sub
icebp
pop
or
and
jecxz
xor
push
adc
inc
scas
pop
dec
gs
sbb
sarl
push
mov
or
mov
dec
ret
mov
out
lods
lahf
shrl
push
push
arpl
push
rcrb
jl
add
stos
sub
mov
or
mov
mov
mov
pop
jge
pop
xchg
push
jnp
stos
arpl
mov
dec
mov
out
insl
jmp
mov
mov
into
jne
daa
jmp
dec
lock
nop
add
inc
sbb
sahf
dec
in
mov
popf
adc
test
mov
mov
pop
jecxz
add
dec
xor
mov
dec
pop
rcrl
leave
movl
fimull
sub
cmpl
sub
iret
cmp
addr16
fs
mov
jl
idivl
outsl
push
mov
insb
push
es
rcr
in
lcall
jo
mov
cmpsb
fsubrl
loop
dec
divb
shld
xlat
clc
push
outsb
pop
int
add
adc
test
adc
in
jg
pushf
mov
adc
mov
scas
xchg
add
cld
push
sbb
fldl
aam
dec
js
push
ss
outsl
jl
mov
inc
sub
cmp
add
inc
test
lock
rorl
gs
cltd
pop
push
dec
adc
dec
leave
shl
and
fisubl
xchg
cs
ret
mov
xor
ficomps
xor
cmp
and
jle
outsb
test
popa
mull
sarb
xor
xor
adc
test
test
ja
cwtl
aaa
cmpsl
scas
gs
pop
lcall
xchg
ds
jae
insb
push
mov
das
test
push
ret
cld
jp
std
fnstcw
mov
sub
pop
popf
mov
dec
test
mov
ds
xorl
lahf
pop
sub
and
xchg
adc
incb
sbb
push
add
jno
in
mov
pop
pmuludq
sbb
cmp
sbb
add
nop
clc
cltd
pop
lcall
iret
ret
fldcw
push
gs
push
insb
jne
adc
push
loop
js
adc
ja
inc
mov
or
pop
or
push
adc
pop
pop
in
rcr
xchg
dec
out
clc
test
xor
int
jmp
push
or
add
stc
call
cmpsb
popa
dec
xchg
fcomps
cmp
jecxz
sub
cmpl
fcoms
bnd
lret
and
dec
mov
jecxz
push
ret
lock
test
cld
pop
aad
xchg
mov
stos
imul
inc
icebp
inc
mov
mov
negb
js
in
xchg
insl
outsb
ror
and
jg
arpl
or
jmp
aaa
jns
data16
or
cld
cmp
fstps
jmp
bound
into
jno
cmp
inc
add
mov
fisttpl
incl
lret
fcomp
dec
xchg
popa
pop
adc
pop
xchg
jg
push
dec
push
fdivs
cmpsb
sbb
add
and
popf
lock
sub
jae
mov
movsb
jno
push
std
jo
mov
push
pop
inc
pop
push
xor
jg
mov
cmpb
pushl
aaa
mov
and
cs
jns
xlat
cmpsl
mov
not
sub
mov
jge
mov
pop
or
call
in
shrd
lods
repnz
dec
mov
popa
int
xor
mov
sub
shlb
xlat
mov
cli
dec
fs
punpcklwd
aad
mov
imul
stos
mov
loope
setnp
mov
cmovns
pushf
pop
test
int3
lcall
push
in
fwait
js
sbbl
jmp
adc
dec
cwtl
sbb
jg
fwait
sbb
add
dec
mov
arpl
mov
adc
jns
dec
push
icebp
neg
add
popf
cmp
out
sti
jmp
imul
cmp
outsl
sbbl
stc
pusha
icebp
jne
rolb
mov
stos
jo
mov
lods
lcall
repz
pop
xchg
pop
movsb
pop
cmp
push
repz
cmc
bt
into
push
cmp
test
pop
xchg
loop
xchg
fdivr
pusha
pop
cmp
fcoml
popa
sahf
mov
xchg
in
sub
jecxz
push
lock
cmpsl
jp
xchg
mov
mov
inc
mov
test
mov
adc
dec
mov
inc
dec
and
mov
mov
dec
push
xor
pushf
jb
lds
shrb
and
dec
push
repnz
pop
shll
rcrb
pop
add
es
lods
mov
insb
dec
jp
int
pushf
inc
and
outsb
stos
xchg
loope
xor
repz
sub
dec
daa
push
in
push
cli
push
adc
add
addr16
mov
in
cmpsl
mov
adc
inc
dec
add
iret
or
lock
cmpsl
jl
std
sub
sub
icebp
out
sti
and
ret
xor
icebp
and
xor
fnstenv
inc
cltd
fmuls
test
or
mov
scas
lret
and
mov
daa
jle
pushf
inc
sarb
enter
fs
je
es
dec
divl
mov
or
lock
pop
cmp
adc
daa
add
dec
fs
cmp
inc
nop
lret
mov
fwait
out
out
xchg
test
lds
jae
mov
pushf
jae
xor
add
enter
cmp
pop
jecxz
pop
stos
int
arpl
pushl
in
sar
sbb
data16
enter
lret
std
mov
sbb
scas
and
ljmp
rcrb
mov
icebp
pop
fdiv
adc
leave
jo
inc
mov
popf
mov
pop
mov
jg
cltd
cmp
push
out
in
xchg
fiadds
adc
sarl
loopne
sbb
mov
fnstsw
jbe
call
dec
ds
in
out
dec
out
imul
pop
mov
or
rorl
sbb
fmul
jae
dec
pop
stc
leave
jns
add
push
out
gs
aaa
fnsave
mov
xchg
inc
push
gs
jnp
or
cs
les
pop
inc
outsb
sub
outsb
cmp
daa
daa
mov
mov
jne
or
push
mov
pop
lret
inc
cmp
push
sub
mov
push
popa
pop
mov
cld
testb
push
and
inc
ret
lods
cmc
shrl
push
imul
push
pop
xchg
fsubrs
jmp
addb
xchg
and
jno
out
sub
outsl
mov
movsb
mov
jnp
out
mov
aaa
jne
mov
pusha
repz
pushf
cmc
out
ss
jmp
and
mov
dec
mov
dec
in
xorl
lods
leave
mov
sarl
push
clc
xlat
adc
or
loopne
enter
mov
sub
jg
push
mov
loope
inc
jle
sub
cmp
adc
sbb
jae
inc
dec
mov
out
jbe
mov
stos
inc
movsb
or
mov
mov
popaw
les
sub
inc
fisubrl
jne
add
outsl
jno
cwtl
clc
hlt
push
int3
and
stos
test
leave
test
out
mov
test
or
cwtl
push
mov
in
xchg
call
cmp
pop
in
or
jge
pushl
lds
jnp
mov
and
ficomps
push
pop
je
mov
jmp
loope
pushf
cs
xchg
aaa
xchg
je
jmp
push
sti
enter
inc
fadds
xchg
xchg
dec
jb
into
jno
jg
sub
fnstenv
xchg
punpckhbw
mov
xchg
mov
mov
mov
jbe
dec
xchg
sarb
hlt
shrl
push
xchg
xchg
dec
adc
xor
sub
imul
arpl
xchg
call
mov
xchg
movl
xchg
pop
xchg
or
cmp
mov
xchg
fmul
fnsave
mov
cmp
repz
jo
outsl
cmp
cmc
fidivl
inc
adc
icebp
xchg
daa
lods
cmc
out
inc
mov
sub
fiadds
push
and
icebp
jns
add
mov
mov
dec
pop
mov
inc
sbb
rolb
mov
movsl
add
in
add
pop
scas
popf
lcall
daa
sub
scas
xchg
push
dec
fdivs
mov
sbb
cld
cmp
inc
imul
pop
mov
adc
sarl
hlt
xor
mov
inc
popf
mov
or
nop
daa
fidivrl
pusha
movsl
sub
dec
sbb
in
cwtl
stos
mov
loope
test
repz
pusha
in
pop
out
jb
jmp
dec
sti
icebp
add
inc
mov
rol
or
add
into
xchg
xchg
mov
push
idivl
and
stos
and
cmp
rolb
sub
push
subl
sbb
or
imul
fs
mov
push
jns
not
std
dec
cmpsb
in
mov
out
or
sbb
push
js
inc
shrb
or
and
fnstsw
mov
out
inc
xchg
fisubl
lcall
mov
pop
cs
inc
xchg
cwtl
fwait
mov
adc
pop
sahf
or
push
ret
aad
lock
and
xchg
es
push
and
push
sbb
fistpl
sub
add
icebp
das
push
adc
ljmp
push
shll
mov
push
add
movsb
mov
xor
ja
fcoml
fsub
dec
xchg
es
mov
cs
cli
sbb
push
ds
jo
jmp
sub
lods
or
popf
leave
pop
outsb
sahf
div
sub
fcompl
inc
out
push
mov
jle
adcl
and
lds
ljmp
push
mov
jnp
mov
sub
inc
jnp
sbb
xor
pop
ds
push
push
push
add
sub
xchg
test
fsubr
and
cmp
adc
add
lea
int
cmp
mov
mov
xor
jns
adc
push
insb
clc
dec
jp
dec
mov
mov
jecxz
lods
sahf
sbb
inc
fists
insb
fs
mov
out
mov
mov
push
dec
adc
out
imul
jmp
mov
aas
lods
sbb
inc
xchg
cmp
shll
js
push
scas
icebp
lock
imul
fcmovnu
fcmovu
lret
out
daa
jge
jns
dec
xor
cmp
push
push
je
pop
sub
lret
cli
imul
jns
fwait
test
adc
out
sub
bound
dec
add
aaa
insb
clc
rol
inc
xchg
xchg
stc
jbe
inc
lahf
mov
pop
inc
cmpl
pop
mov
sbb
pop
xor
pop
add
sub
gs
dec
inc
fistpll
or
mov
sahf
or
bound
sbb
pushl
mov
add
aam
inc
xchg
xchg
pop
jnp
add
inc
rcrl
loopne
into
fdivrs
rcr
jae
pop
les
mov
xchg
ds
add
xor
inc
popa
test
pop
cli
push
insb
push
popa
out
sub
ljmp
ss
xchg
or
cmp
xchg
pop
imul
sbb
mov
inc
cli
cmp
jae
sub
add
fnstsw
xor
das
cwtl
fisttpl
jmp
push
mov
mov
mov
push
bnd
stos
mov
addr16
stc
mov
andl
cmc
lret
imul
mov
aaa
push
lahf
movq
xlat
xchg
cmp
fisubrs
mov
enter
jmp
mov
leave
push
ret
loope
push
push
pop
incl
pop
jg
scas
loope
push
add
aam
fs
mov
out
mov
push
fwait
les
mov
xchg
scas
scas
lahf
ljmp
ss
out
mov
pusha
adc
push
cmp
or
sbb
inc
mov
jbe
addr16
cmpsb
sub
bound
jge
pop
sbb
mov
insl
repz
xchg
jle
outsl
pop
lret
inc
fiaddl
leave
pop
mov
in
or
lea
pop
mov
scas
cmp
push
mov
pop
aad
stos
stc
popa
jmp
sub
inc
lods
out
imul
sub
jnp,pt
cmp
rcr
jg
xlat
shl
mov
call
sub
lea
inc
test
out
ret
pushf
in
xchg
ret
mov
rcll
sub
stc
mov
cmp
inc
stos
ja
and
jbe
fs
xrelease
adcb
das
lcall
push
icebp
mov
pop
pop
sbb
jle
out
xchg
rclb
mov
or
or
inc
iret
divl
push
push
clc
shlb
pushf
inc
push
or
mov
rcll
test
sub
mov
xor
aas
dec
cmc
inc
inc
pop
or
dec
mov
stos
xchg
outsb
adc
push
cs
inc
movsb
mov
adc
cmpsl
outsb
ficompl
push
adc
mov
and
pop
and
push
add
add
inc
jmp
lods
inc
test
outsb
sub
and
aad
stos
out
inc
sbb
lret
add
jmp
cmp
jno
shr
aam
adc
mov
push
je
movsb
cwtl
das
mov
xor
xchg
xchg
daa
mov
bound
mov
ljmp
jg
icebp
clc
lahf
cmp
pop
rorb
cmpsb
loop
inc
arpl
mov
cmpsb
mov
jo
jg
dec
dec
adc
int3
fisttpl
pop
pop
push
pusha
jle
push
dec
fwait
cmp
mov
int3
push
iret
and
mov
cmc
das
adc
nop
xor
mov
sub
popf
and
xor
mov
xchg
dec
sub
xor
and
cmp
xchg
sub
mov
int3
mov
mov
lcall
dec
jne
dec
or
jecxz
repz
fsubl
push
outsb
jle
lock
pop
mov
es
sahf
rcll
arpl
out
pop
pop
lret
stos
retw
je
enter
add
arpl
test
pop
mov
out
inc
or
jmp
dec
stos
jle
test
cmp
push
ja
adc
push
aam
test
fwait
adcl
fidivrs
fimull
fnsave
inc
cli
sbbl
jmp
fwait
jno
test
jecxz
adc
aaa
in
mov
dec
imul
paddusb
mov
sbb
lea
dec
mov
ret
cmp
lock
out
push
insb
lahf
push
or
pop
and
je
mov
mov
pop
iret
ret
mov
faddl
insl
jle
xchg
repz
pop
sahf
mov
mov
movsl
or
jnp
icebp
push
mov
in
and
cltd
push
js
push
ret
and
es
ja
jo
cmp
sbb
nop
outsl
in
andl
leave
out
dec
insl
pop
test
shlb
cmc
inc
inc
divb
xchg
push
insl
dec
repz
out
cli
imul
outsl
xlat
insl
cltd
dec
xchg
jmp
cmp
pop
pop
cld
arpl
lea
and
mov
push
lahf
scas
aam
mov
mov
mov
xor
cltd
add
sbb
inc
sub
cmp
aas
xchg
adc
aas
mov
in
jg
inc
addr16
jmp
int3
shlb
mov
mov
mov
enter
push
fs
std
test
repz
xchg
hlt
adc
inc
repnz
and
out
in
ret
pop
lock
stc
lods
sarl
subb
jne
ja
cld
rorb
dec
loope
test
lods
mov
pop
jno
pop
dec
or
out
pusha
adc
sahf
push
imul
xlat
imul
add
mov
push
dec
jl
rorl
rorb
sbb
in
sahf
dec
jp
lea
mov
pop
mov
int3
sbb
adc
sbb
adc
cmovs
jae
pushf
xchg
mov
jecxz
add
jne
loopne
and
and
xor
sub
repz
xchg
aad
hlt
or
mul
int
add
mov
fldt
and
xchg
pop
stc
and
push
push
fildll
adc
dec
adc
popf
lds
lock
js
test
mov
or
push
add
cmp
int
mov
call
push
les
jno
nop
or
iret
pop
shrb
dec
shl
bound
std
popa
dec
jmp
dec
sub
outsl
or
xchg
fwait
sub
imul
and
adc
adc
pop
into
fwait
or
aaa
cli
mov
mov
push
push
jo
or
sbb
pop
add
jns
mov
cmp
sahf
icebp
pop
xlat
fwait
daa
pop
cs
inc
sub
sub
cmp
imul
mov
in
stc
cmp
dec
repz
or
shlb
lods
xor
out
fdivs
pop
icebp
stos
mov
cs
out
scas
ss
fisubl
jns
and
mov
dec
mov
or
mov
adc
jle
imul
gs
sbb
popa
stos
dec
clc
mov
fstpl
mov
stc
rcr
or
sahf
shrl
ss
lods
mov
gs
rcl
and
adc
sahf
scas
xchg
jnp
jl
dec
daa
leave
lret
pop
outsl
jp
sbb
pop
rcr
push
push
adcb
in
push
ljmp
mov
jecxz,pn
fnstcw
cwtl
mov
push
jnp
fs
xchg
jg
push
outsl
sub
arpl
decb
arpl
test
sbb
jae
fcmovnu
hlt
jp
dec
sub
push
imul
pop
xor
dec
lea
mov
jns
fsubrl
jnp
std
fldl
fimuls
pop
dec
shrl
xchg
repnz
jp
out
dec
sahf
cld
xor
shr
les
lahf
sub
call
ja
or
jge
pop
pop
cltd
call
in
and
dec
aad
mov
pop
mov
dec
aaa
sub
mov
mov
not
dec
fdivr
inc
add
mov
push
jg
jns,pt
decb
or
ss
mov
xchg
jnp
cmp
out
repnz
mov
es
rcl
jle
mov
sbb
cmpl
add
icebp
xor
shlb
repnz
push
call
cmp
test
sbb
ret
test
hlt
mov
mov
sahf
fcmovb
hlt
xchg
mov
mov
repnz
jae
inc
mov
icebp
mov
sub
dec
xor
cmpsl
call
jns
fcomps
scas
xchg
addr16
or
inc
lret
mov
jmp
push
sub
out
int3
or
inc
std
fidivl
xchg
jg
lret
sahf
and
loop
lret
sarl
sub
jo
aas
into
cltd
ficompl
adc
xchg
xchg
jo
aad
push
sti
and
jg
add
dec
es
scas
in
mov
lds
mov
cwtl
stos
adc
cmp
cmp
inc
leave
xor
jecxz
inc
sahf
mov
mov
inc
pop
or
mov
cltd
cmp
adcl
xor
or
push
xor
clc
dec
lock
dec
mov
mov
jp
stc
inc
dec
movsb
inc
enter
subl
addr16
and
xchg
je
add
mov
sbb
lret
and
fstp
int
mov
or
xchg
cwtl
dec
scas
shrb
push
popf
dec
sbb
call
nop
sbb
popf
pop
test
bound
repz
mov
or
rol
mov
mov
pop
dec
bound
xchg
test
stos
jge
lret
sub
lret
mov
lret
jle
stc
mov
and
gs
dec
daa
out
lret
pop
outsl
inc
lods
cwtl
movsl
movsl
shrl
stos
sub
mov
mov
gs
inc
outsb
jb
lods
ss
cmpl
imul
lods
in
xchg
dec
add
jae
ret
xor
adc
pop
lret
jle
rcll
out
fists
pop
ret
push
cmpsl
sub
or
pop
in
mov
jecxz
scas
adc
add
outsb
jne
test
cwtl
ret
pop
cmp
fdivr
jne
pop
aaa
push
outsb
push
mov
mov
jnp
les
scas
mov
outsl
mov
sbb
cmc
imul
test
pop
mov
sbb
ss
push
inc
xor
cmp
es
jno
adc
movsl
dec
mov
dec
fcmovne
mov
iret
lea
or
add
add
xchg
fbld
mov
sub
pop
push
pop
inc
rcrl
int3
dec
inc
jno,pn
mov
loop
lds
outsl
lock
jmp
mov
sahf
icebp
pop
mov
fcompl
cmc
mov
cld
popf
push
lret
loop
dec
xchg
cmpxchg
cmpb
imul
ret
inc
in
incb
lret
int
adc
jns
cmc
ljmp
gs
cmpl
in
js
mov
jnp
add
inc
rclb
scas
mov
leave
and
jno
es
inc
or
jmp
stos
jl
jecxz
cltd
mov
xchg
pop
icebp
sub
ret
pop
mov
pushf
out
mov
jp
jp
and
sub
dec
cmp
lret
and
out
lds
or
stc
in
dec
pushf
mov
data16
sarl
repnz
xchg
movl
js
jg
daa
inc
inc
xchg
cmp
popa
lahf
aaa
insb
cmp
or
sbb
sbbb
cmc
aas
dec
jmp
call
xor
inc
div
cmpsl
and
and
loopne
in
fmuls
inc
xchg
push
lea
lea
sahf
sbb
mov
jo
lods
and
in
test
xor
xor
les
and
insl
jl
nop
push
adc
mov
jne
sbb
adc
daa
das
adc
pop
mov
xor
mov
dec
dec
test
pop
inc
icebp
xor
test
jnp
dec
xchg
xor
pusha
push
xchg
jns
ss
lret
sbb
push
lcall
or
pop
divl
scas
inc
dec
aam
add
popa
fbstp
ficoms
xorl
mov
push
mov
xchg
clc
addr16
dec
mov
or
adc
test
or
adc
sti
or
rorb
lret
and
add
cmpsl
jge
push
inc
mov
xchg
imul
leave
pushf
stos
mov
xlat
pop
aad
int
cmp
in
pop
gs
ficoml
mov
mov
shrb
jg
inc
fcoms
jns
aaa
stos
mov
cmp
xchg
shrl
mov
mov
lahf
pop
mov
imul
mov
add
fcomps
cmc
out
xor
inc
cltd
xor
sbb
and
fcmovnu
repnz
sbb
sar
jmp
in
cmp
xchg
ficomps
mov
cmpsl
test
iret
addr16
bound
sti
and
push
push
outsb
insb
outsb
push
cmp
jne
push
sub
cmp
test
add
push
push
paddsw
dec
rorl
sti
mov
popa
mov
push
cmp
jns
mull
dec
push
or
leave
bound
punpcklwd
ret
sahf
inc
out
xchg
push
xchg
jp
enter
mov
in
bound
out
or
dec
push
cmp
xchg
or
cmpl
mov
inc
push
scas
xchg
xchg
flds
push
imul
xor
or
mov
int
sub
insl
pop
sub
mov
mov
jns
push
fcmovnbe
aad
push
lods
adc
mov
sbb
aas
call
fmull
shll
mov
xchg
imul
xchg
cmp
jp
ja
dec
ss
mov
push
dec
pusha
cmpsl
into
push
mov
or
aaa
js
xchg
mov
mov
push
test
int
jns
push
popf
adc
int3
clc
insl
add
mov
repz
sub
aas
add
push
xor
xchg
mov
pop
std
mov
cwtl
push
lds
mov
push
dec
xchg
pop
or
or
mov
popf
idivb
jmp
mov
inc
sub
sbb
mov
adc
adc
lods
pusha
fdivl
mov
cli
adc
nop
inc
push
cmp
mov
loopne
out
mov
xchg
xor
mov
sahf
sbb
mov
in
xchg
fptan
out
jno
leave
xchg
dec
sub
sub
pop
lahf
sbb
mov
lods
data16
addl
jge
shr
jne
cld
xor
mov
and
add
push
in
add
mov
pop
xlat
ja
xlat
mov
sbb
and
repz
add
mov
movsb
push
repnz
xor
outsl
lahf
xchg
sbbl
sbb
jns
xor
and
inc
push
jo
mov
in
ret
sub
rolb
stos
mov
aad
fdivs
ror
mov
jl
shll
or
xchg
fwait
pop
mov
inc
js
mov
add
loop
pop
cli
mov
pop
pop
into
push
notb
gs
clc
xchg
fadds
fst
cmpl
nop
inc
mov
ffree
std
cld
xor
insl
js
xlat
outsb
or
divb
dec
iret
imul
mov
jae
outsb
cmpsb
data16
push
and
insb
mov
xor
sub
cmp
adc
mov
xor
in
mov
dec
mov
mov
mov
sbb
in
pop
mov
lahf
lahf
fcmove
cwtl
stos
lcall
push
push
add
inc
enter
sbbl
and
inc
xlat
into
lcall
add
loope
cmp
lret
and
stos
xor
push
mov
int3
push
test
stc
adc
xchg
sbb
dec
jg
xor
inc
clc
sar
jle
shll
xchg
in
nop
sub
stos
stos
dec
jle
or
pop
xorb
sbb
fnsave
call
jb
mov
push
dec
es
xchg
clc
sub
aad
insb
fldcw
dec
sahf
pop
cmp
inc
or
imul
jb
iret
loope
in
loopne
pop
mov
fisubrl
pushf
int
jmp
add
pop
mov
addb
xor
sub
aaa
js
fidivrl
mov
mov
xchg
scas
add
xor
or
or
enter
sub
aam
and
cmp
mov
mov
cmp
dec
xchg
pop
jbe
outsl
cmp
mov
and
jmp
jl
push
out
lret
mov
jle
jp
stos
lods
mov
sbb
lods
cmpsb
sub
ret
into
mov
movsb
sahf
xchg
imul
and
xchg
cli
cli
popf
hlt
sbb
clc
divl
push
test
mov
lods
dec
test
lock
fs
push
insl
push
arpl
insb
shlb
xor
cmpsb
es
fdivr
fdivp
pop
sub
iret
enter
sub
fadd
sbb
arpl
daa
insb
cltd
or
pop
pop
negl
lcall
dec
inc
aad
add
rcr
rcrl
rorb
inc
push
cwtl
stos
mov
popa
pop
dec
adc
rcrl
pop
pop
push
xchg
and
aam
lret
iret
push
xor
and
add
fcmovb
mov
movsl
filds
cmp
inc
popf
jne
cmp
cli
cmc
push
fisttps
sarl
popf
cmp
hlt
call
es
call
push
push
and
push
pop
cmp
adc
adc
mov
outsl
int
std
fistps
xor
lock
outsl
ja
sub
inc
test
shlb
inc
xchg
sbb
pop
js
lods
pop
or
adc
mov
cmp
cmpsl
xchg
dec
pop
lea
jno
xchg
push
mov
lret
in
adc
xor
lods
sahf
xchg
push
and
xchg
inc
dec
shl
adc
lock
cmp
add
inc
loope
mov
inc
dec
cli
jle
lret
scas
js
cmp
jmp
dec
sub
cmp
mov
repz
or
cli
fs
mov
push
xchg
leave
pop
mov
cld
mov
mov
cld
push
pusha
imul
mov
dec
into
jbe
mov
cld
clc
mov
or
sub
or
fdivrl
mov
cmp
pop
stos
mov
cmc
pop
shll
mov
notl
leave
pushf
pop
inc
jbe
xchg
mov
fstp
xchg
xchg
mov
add
gs
jecxz
das
inc
xchg
cltd
xor
lods
inc
data16
inc
clc
push
mov
xor
adcb
jle
pop
in
mov
pop
add
pop
ficomps
mov
ret
scas
fisubs
xchg
pushf
push
sub
std
or
fldenv
jbe
sbb
pushf
ret
notb
js
xchg
insl
adc
sub
lods
repz
or
lock
mov
cltd
push
jae
dec
and
dec
adc
inc
xchg
cmp
and
mov
dec
push
xchg
mov
mov
out
mov
repnz
pop
sahf
shll
push
mov
jg
sahf
pop
jo
js,pt
mov
pusha
jo
jge
adc
outsl
ret
dec
jnp
and
add
mov
test
or
sarl
adc
add
rcrb
adc
adc
sub
popa
arpl
jl
pop
lret
movsl
pusha
or
scas
leave
out
int3
pop
inc
push
sbb
adc
mov
xchg
out
dec
or
fwait
pop
mov
mov
pop
jge
int
xchg
dec
fnstenv
rcrl
sub
lret
push
and
mov
or
sbb
push
mov
mov
adc
test
dec
sub
pop
aam
mov
xor
jg
ror
shlb
int3
cmp
jge
into
jmp
push
stos
lahf
xchg
bsf
mov
add
std
repnz
and
xlat
inc
sub
dec
pop
pop
fsubl
sbbb
or
sbb
scas
cwtl
mov
xchg
test
cmp
inc
cmc
insl
adc
mov
enter
push
cmp
movsb
mov
xor
jbe
mov
adc
fwait
sub
sbb
sarl
mov
scas
andl
xor
sti
lods
push
or
lret
push
fs
xor
xor
pop
lret
lret
fisubrs
cmp
hlt
fmulp
xchg
dec
sub
das
push
pop
lahf
and
pop
mov
out
test
cmpsl
cmp
sub
gs
cmp
push
jle
mov
cmc
jg
pop
lret
pop
xor
addr16
mov
scas
jecxz
pusha
mov
rcll
mov
je
cmp
movsb
es
pushf
xchg
faddp
push
push
fs
or
inc
in
notl
shl
fs
fcmovb
push
loop
pop
adc
xchg
sbb
cmc
insl
jl
rolb
ja
stos
sub
adc
fsubl
mov
sbb
adc
leave
aas
ss
xor
sub
pop
sbb
fstl
ljmp
sbb
xchg
dec
mov
and
adc
out
cld
pop
xorl
and
push
pop
xchg
mov
stos
enter
mov
adc
test
and
mov
inc
add
cwtl
xlat
rolb
fdivl
or
aas
inc
and
and
scas
lea
stos
xlat
rcrl
pop
xchg
sbb
lods
nop
repz
sub
jecxz
negb
int
push
mov
insb
aas
dec
jle
in
aas
mov
lcall
test
inc
aad
lret
idivb
cmp
adc
loope
xor
xor
cmp
inc
ret
jmp
arpl
xor
xor
jmp
pop
loope
inc
mov
notl
or
push
pop
mov
faddl
jl
sub
leave
inc
ds
dec
lock
inc
scas
je
dec
repnz
clc
jb
repnz
lods
fstpt
es
adc
adc
enterw
loope
push
sbb
iret
ret
dec
jecxz
mov
push
arpl
add
ljmp
push
adc
dec
and
pop
adc
in
aam
jbe
pop
mov
shll
rolb
scas
adc
dec
jb
adc
pop
mov
xchg
inc
nop
sti
inc
inc
and
push
pop
pop
xor
add
xor
cltd
add
insb
es
ret
insb
xchg
cmpsl
jmp
jne
push
xchg
push
mov
and
adc
mov
sub
fsubs
jl
xchg
dec
out
dec
lods
mov
lcall
test
ret
fmuls
cmp
stos
lods
rcrb
cmp
ja
loopne
fwait
inc
ja
pop
loope
je
inc
xchg
pop
inc
jecxz
push
sbb
inc
xchg
loopne
int3
dec
and
mov
or
xor
sub
xchg
loop
or
pop
pop
and
cmpsb
and
xchg
push
in
and
push
jecxz
nop
cmpsb
jnp
sub
lods
mov
fistpl
imul
xor
hlt
xlat
ljmp
mov
stc
insb
pusha
aas
pushl
or
aad
divl
cmpl
mov
and
and
inc
mov
xchg
dec
push
xor
jge
cmc
adc
ja
cmp
and
call
cwtl
dec
push
push
cmp
fidivs
ficoms
js
fidivl
mov
jnp
imul
pop
adc
mov
mov
pop
cmp
lock
imul
push
pusha
push
push
popf
inc
stc
add
fsubr
cmpsl
jp
imul
or
in
mov
sub
movsb
outsl
fsubrl
push
dec
repnz
sub
out
sti
xchg
cld
mov
popa
mov
nop
jl
fisttpll
les
or
mov
ficompl
sub
loop
dec
mov
add
dec
push
cmpsl
xchg
inc
mov
outsl
jo
cmp
daa
sbb
test
insb
xchg
xor
push
mov
sbb
mov
mulb
push
sahf
pop
popf
jmp
adc
dec
cmpl
imul
enter
hlt
push
push
cmpb
call
lret
js
pop
jb
sbb
movsl
rclb
insb
sbb
lods
cmp
xorl
fbstp
xchg
xchg
sbb
fldcw
or
add
push
or
imulb
inc
push
inc
int3
xlat
aas
imul
lods
je
cmc
jp
push
pusha
in
sub
sub
in
mov
adc
add
fwait
in
ljmp
xor
pusha
xchg
and
fmul
and
int
push
add
stc
gs
test
jne
jb
sahf
daa
jmp
data16
dec
ss
mov
add
fmuls
insb
xchg
sahf
loop
call
mov
mov
aaa
jl
jae
adc
push
dec
push
test
fwait
test
outsl
pop
stos
int
sarb
cltd
ret
ret
mov
dec
lods
cmp
jns
mov
and
lret
add
mov
dec
pop
enter
iret
and
mov
push
in
lret
sbb
daa
popf
mov
jecxz
cmpsb
pop
jae
mov
adcl
loop
sbb
sbb
outsl
cwtl
jg
lods
outsl
test
je
inc
mov
cltd
dec
pop
data16
scas
fcoml
lods
add
push
mov
mov
cmp
icebp
stos
ficoml
push
out
xor
sbb
fwait
aas
aas
inc
mov
out
xor
mov
cmpsl
jne
and
lahf
fsubrs
pop
xchg
in
sbb
fdivl
std
jl
iret
push
mov
mov
push
pop
cmp
lret
jnp
test
fsubrs
sahf
sbb
rcrb
enter
and
jbe
and
movsl
xor
jnp
mov
aad
stc
fptan
in
es
jb
sub
mov
pop
fldcw
push
das
adc
je
push
outsl
dec
js
loop
pop
test
dec
jle
mov
push
jge
xlat
push
mov
push
push
insb
sub
or
idivb
mov
icebp
mov
out
mov
mov
stc
push
clc
push
jl
sub
lret
cmp
pusha
and
xchg
pop
mov
test
es
aad
sub
inc
cmpsl
inc
inc
add
dec
in
iret
popa
movsb
jl
mov
pop
repz
sub
jle
jg
adc
lea
xchg
mov
sbb
or
push
ja
push
mov
into
insl
and
mov
cmp
xchg
push
pop
popf
dec
into
lods
xchg
add
popw
mov
loopne
mov
dec
jl
adc
ds
sbb
adc
or
push
lret
xchg
test
and
sub
or
add
cmpsb
icebp
std
xor
xchg
push
and
lds
add
mov
cltd
add
lds
cmp
jp
push
es
lods
mov
scas
stos
cmc
mov
xchg
or
xchg
push
sub
icebp
lods
cmp
out
js
pop
and
cmp
icebp
icebp
in
cs
cmpsb
and
dec
xor
xchg
shrb
inc
and
add
pop
lret
sahf
sub
pushf
and
xchg
add
mov
add
lea
adc
mov
dec
dec
add
out
or
add
shlb
frstor
insb
or
push
jns
pop
sbb
ss
push
pop
leave
cltd
rcl
xchg
and
mov
jp
outsb
xchg
ds
mov
inc
sbb
cmp
pop
movsl
jle
xchg
push
repnz
es
inc
test
push
repnz
mov
jp
fisubrs
dec
mov
scas
inc
push
and
mov
mov
cmp
dec
mov
fnsave
sarl
fwait
std
insb
push
jecxz
rorl
mov
aas
fdivl
and
and
mov
mov
call
rcl
sbb
cli
mov
mov
xor
jno
cmp
pop
jbe
lret
mov
cmp
outsl
out
insl
push
push
mov
mov
cltd
pop
cmpsb
xchg
nop
add
repz
jl
adc
jp
mov
movsl
out
sbb
xorb
xchg
fnstsw
fldcw
xchg
and
ljmp
xor
popa
rol
xor
outsb
stc
dec
adc
sti
inc
inc
inc
ljmp
shrb
into
xchg
mov
or
popf
ss
or
movsb
or
out
pop
fsub
fisttpll
cmp
sbb
jno
fdivrl
or
ss
push
cmp
enter
imul
add
inc
insl
and
inc
xchg
mov
xchg
pop
and
dec
testl
loop
inc
mov
in
in
adc
fchs
nop
dec
popl
incb
adc
cmp
jo
sbb
pop
jl
sti
cmpsb
mov
sub
ss
ss
leave
xor
lret
lds
sub
jl
mov
or
cmp
rorb
push
jecxz
or
sub
sub
pshufw
jecxz
dec
outsb
or
jg
or
sbb
xor
xor
push
dec
push
lods
insb
mov
lods
push
sahf
push
stc
xchg
arpl
gs
lock
mov
jg
imul
sub
pop
jg
movsl
popa
sub
pop
es
cld
inc
push
rorl
pop
pusha
je
call
fisubrs
xchg
dec
sub
jl
cmp
mov
outsl
push
stos
jo
cmc
movsl
popf
sbb
dec
sbb
into
xor
mov
xor
lea
mov
or
dec
notb
sahf
jno
jnp
in
mov
xchg
inc
jno
inc
push
pop
pop
xor
mov
push
inc
mov
subl
call
int3
rcrl
ffree
cmp
xchg
mov
and
movsl
addr16
dec
jb
push
push
outsl
pop
shrl
dec
mov
add
jns
fstps
fnstcw
dec
fcomp
out
mov
out
insl
shl
jp
push
pop
fisubl
lods
mov
adc
sbb
jmp
aad
ss
fdivrs
lods
xor
mov
scas
imul
pop
popa
imul
int
mov
loopne
fisubs
mov
or
dec
mov
push
lods
pop
inc
shll
imul
test
jge
xchg
sub
inc
nop
out
jmp
jno
add
inc
mov
xchg
stos
lods
mov
adc
mov
ss
xchg
lcall
gs
jnp
mov
movsl
cmp
in
and
dec
sub
orl
xor
rol
pop
cmp
xchg
pop
scas
mov
jb
xchg
adcb
add
sub
rolb
push
cmpsl
adc
mov
sub
popa
jae
jmp
or
movsl
mov
xor
lcall
daa
mov
leave
hlt
push
lret
dec
pop
popf
bound
sahf
xchg
lea
ljmp
les
add
cmp
jb
pop
push
ret
ss
sti
adc
out
xchg
dec
lock
pop
jg
xchg
inc
dec
out
stc
xlat
je
add
hlt
push
sub
mov
lahf
lock
mov
dec
mov
das
mov
jge
and
in
in
cwtl
dec
xlat
insb
push
in
dec
jg
push
cli
shlb
xor
adc
pop
enter
xchg
push
mov
es
xchg
xor
outsb
and
mov
jecxz
and
ss
lret
adc
inc
int3
pop
lds
fdivl
sub
out
repnz
mov
sbb
lret
mov
fimull
jb
or
call
jl
mov
std
jmp
not
cmp
sti
sub
sub
mov
sbb
arpl
daa
or
je
and
ret
cwtl
sbb
cmpsb
ljmp
dec
test
mov
or
out
sbb
add
inc
mov
dec
addr16
or
xchg
test
dec
repnz
call
cmc
mov
xor
idivb
adc
je
jo
xor
pop
ljmp
dec
sub
ret
jno
scas
mov
rorl
out
mov
xchg
pop
xor
jl
or
fsubp
or
pop
cmp
cli
stos
les
pop
rcl
pushf
out
pop
dec
fimuls
add
rcll
sub
stc
pusha
mov
je
dec
xchg
mov
lret
push
aad
add
pop
in
jg
or
jae
sub
test
jge
xor
xchg
inc
fimull
push
out
jb
mov
cwtl
jbe
jg
sub
sbbl
push
fs
add
jnp
xchg
lock
mov
rorb
ficomps
pop
shll
shlb
repnz
aam
pusha
aas
decb
mov
xchg
test
or
faddl
leave
aad
push
dec
push
push
jnp
push
jne
and
fs
fisttps
aad
add
inc
jge
sub
xor
gs
mov
push
dec
iret
xlat
push
bswap
sti
cmp
xchg
and
dec
lret
add
xor
jnp
push
sub
and
popa
call
inc
adc
iret
pop
mov
push
fsubrl
aaa
stos
in
ds
mul
sbb
jns
xor
pushf
jg
in
mov
cmp
cmp
jae
lret
xchg
rcrl
push
ja
jno
sub
dec
popf
sub
mov
and
or
sbb
in
les
lret
stc
loop
fldenv
pusha
pop
sub
mov
jmp
inc
jb
insl
xor
repz
xor
fldenv
scas
mov
add
ljmp
pop
cltd
fimuls
jbe
jae
ja
cld
lods
fidivl
icebp
and
loope
leave
dec
sub
mov
das
in
pusha
lock
xchg
or
cmp
in
mov
loope
jp
sahf
add
ds
lods
arpl
fidivrl
ja
arpl
dec
das
mov
xor
fisttpll
arpl
cmp
and
daa
mov
loop
push
das
push
roll
int
push
cwtl
xor
fsubs
dec
adc
xchg
push
cmp
call
testb
jl
mov
shrb
pop
int
inc
fnstcw
mov
inc
aas
xchg
jae
loope
or
jg
lcall
loopne
or
ficompl
movsl
daa
push
ds
xor
xchg
shlb
stc
add
push
dec
mov
sub
cs
mov
push
out
mov
add
sbb
das
or
sbb
add
dec
popf
test
push
add
fdivrs
ret
or
pop
int3
mov
push
pop
in
xor
ret
aam
int3
dec
test
std
in
loop
cld
add
aaa
fiadds
mov
popf
lds
pop
inc
and
sbb
mov
add
and
xchg
cmpsl
xor
mov
dec
sbb
mov
mov
ja
lret
insb
out
sub
fwait
dec
test
pop
inc
rcrl
lahf
mov
mov
shlb
outsl
fcoml
testb
push
mov
stc
xchg
xor
sarl
xchg
sbbb
add
or
enter
nop
ds
mov
movsl
push
ds
shlb
jecxz
jbe
lret
repnz
adc
sub
popa
sbb
mov
sub
xchg
out
jp
jnp
mov
mov
adc
mov
pop
lods
or
push
jg
xor
addr16
mov
lock
mov
adc
stos
cltd
and
and
sub
shrb
jno
hlt
ficoms
dec
test
hlt
cmp
test
call
popa
cld
dec
jns
lock
sub
xchg
sub
cmp
jmp
xchg
cmp
mov
arpl
cs
shlb
jns
iret
jo
xchg
lods
mov
ret
pop
fcomp
cmp
popa
jecxz
jmp
enter
lcall
ja
cmpsl
pop
pop
std
movsb
ljmp
fwait
push
mov
push
inc
addr16
cmpsb
leave
mov
scas
push
sbbb
push
in
test
jbe
das
sbb
lea
xchg
mov
out
xchg
and
sarl
jge
stos
fldenv
test
arpl
xor
ljmp
out
fldl
mov
popl
in
lea
stc
stos
xor
dec
shlb
mov
movsl
loopne
enter
sub
fcoms
rolb
das
bound
xchg
dec
scas
pop
cmpsb
ja
inc
popf
fwait
imul
mov
lods
out
pop
add
push
inc
repz
push
dec
enter
testb
cmp
and
jmp
push
das
inc
aas
push
sub
jno
sub
inc
pusha
xchg
xor
jno
mov
andl
xchg
ret
sti
movsb
outsb
inc
cmp
mov
negb
push
mov
test
repz
jg
pop
gs
cld
xlat
sar
xor
leave
cmp
pop
in
js
pop
mov
push
pop
data16
frstor
sbb
shrb
mov
daa
xchg
mov
arpl
sub
test
and
sub
stc
lds
in
push
or
icebp
dec
pop
cltd
sub
mov
sub
rclb
test
inc
pop
or
xor
fldcw
stos
scas
movsl
add
ret
fdivl
adc
loopne
xor
int
xchg
stc
mov
add
dec
pop
in
push
bound
je
mov
mov
cs
adc
mov
inc
push
jne
cmpsl
fcoms
or
les
psubd
push
scas
xorb
cli
iret
bound
aad
daa
aam
jns
mov
cmpsb
hlt
mov
ljmp
stc
mov
test
adc
mov
test
cltd
sbb
loope
xor
and
dec
xchg
add
jp
pop
rcll
inc
aaa
pop
sub
mov
lret
test
push
mov
dec
push
xchg
xchg
repnz
lret
pop
into
xchg
jp
adc
inc
lods
mov
mov
pop
push
pop
dec
addb
mov
push
mov
pop
stos
or
sub
out
xchg
mov
cli
repz
or
xlat
sbb
decb
insb
or
mov
addl
sub
pop
shlb
cmp
ret
xchg
fimuls
inc
hlt
dec
add
add
xchg
out
fcompp
pusha
aam
inc
or
mov
sub
stc
loopne
popa
mov
dec
adc
popa
ss
push
addr16
lods
xor
mov
and
stos
jl
xlat
push
mov
mov
sub
mov
adc
mov
fucomi
sbb
adc
cmp
sahf
ret
sbb
xor
bnd
mov
and
inc
stos
hlt
push
and
jge
mov
mov
div
jo
das
jmp
out
mov
and
add
je
xchg
mov
xchg
fcmove
out
pop
add
mov
mov
adc
xchg
lret
std
lret
and
ljmp
cmp
and
xchg
xor
xchg
daa
cmp
imul
dec
xchg
jle
inc
fstpt
sarb
fdivrl
mov
in
push
lret
dec
daa
loop
icebp
sbb
loopne
insb
sbb
ja
mov
fisttpl
into
inc
sahf
sub
and
aaa
cltd
fisubrs
lods
mov
popa
sub
pop
cmpsl
xchg
aam
fwait
jle
sarb
out
or
das
inc
in
divb
mov
xchg
inc
bound
push
fisubrl
movsb
orl
adc
out
imul
out
and
fldenv
out
je
jae
ss
xlat
lea
push
dec
jg
loopne
jmp
push
cmpsl
scas
pop
test
sub
push
or
cmpsl
test
fwait
loope
push
inc
aaa
lods
test
lds
rol
ss
or
lods
sub
push
jbe
js
and
mov
mov
fcoml
or
mov
fsub
push
mov
xor
mov
mov
pushf
orl
out
lea
fucomp
mov
jl
inc
xchg
inc
in
cmpsb
mov
data16
int
jnp
aas
mov
les
daa
xlat
sahf
sub
mov
test
sbb
xor
outsb
mov
and
std
lcall
test
pop
int
jno
dec
or
sbb
pop
jle
sbb
and
mov
outsl
inc
ret
mov
pop
mov
mov
mov
sbbl
loop
into
adc
sti
dec
mov
ss
jne
dec
adc
pop
sbb
mov
jecxz
jmp
lods
ds
jns
cmp
cmp
adc
push
jb
nop
sub
in
fsubrl
xchg
jecxz
or
sarl
ficompl
xchg
nop
inc
fcompl
ljmp
cmp
jge
xchg
sub
or
or
pop
jae
dec
in
cmp
push
imul
je
cmp
xchg
inc
es
sub
xorb
int3
out
test
and
cmp
and
cs
ljmp
js
mov
push
add
test
fsub
outsl
cwtl
fsubs
sarl
sub
xor
inc
sbb
jne
cltd
or
cli
jno
mov
aad
mov
pusha
hlt
clc
lock
adc
xchg
mov
add
andl
push
xchg
movsb
push
fs
xchg
jmp
test
mov
xchg
xchg
cmp
cmp
out
inc
mov
movsl
or
xor
and
jns
or
into
bound
cli
adc
outsl
cmp
rclb
imul
push
dec
add
dec
adc
push
in
daa
and
mov
jb
or
mov
add
xchg
in
pusha
sub
movsl
fbld
add
out
fcomps
add
lds
mov
jge
std
lahf
ror
xor
cltd
jo
scas
and
repz
mov
cmpb
xchg
cmpsl
xor
and
inc
in
aaa
js
sub
cwtl
xchg
cmpsl
sti
sub
or
cmpsl
ja
fwait
js
jge
imul
pop
repz
xlat
ja
test
and
push
outsb
movl
add
outsl
mov
popa
cmpsb
dec
pushf
mov
sub
and
and
jl
pushf
pop
sahf
cmp
lods
inc
hlt
pop
cmp
mov
outsb
xchg
rep
dec
push
sbb
mov
dec
ja
pop
xor
push
dec
lock
jp
adc
imul
cmpb
or
test
loopne
add
shll
adcb
fcmove
pop
ds
jl
or
xchg
je
xchg
sub
sbb
arpl
and
xchg
push
push
add
arpl
stc
jnp
into
add
sub
les
inc
jg
mov
andl
xor
insl
into
jbe
jae
std
xor
sbb
fstl
fsubs
sub
aam
lods
inc
sub
ret
test
fsubrs
mov
aad
xor
xchg
enter
das
scas
inc
mov
pop
xor
add
fwait
mov
fmulp
test
mov
or
jge
fidivrs
mov
push
sti
lea
and
int
pop
test
and
mov
rorb
inc
shlb
dec
sbb
xchg
or
sti
icebp
das
pop
repnz
lock
dec
add
mov
sbb
sbb
ret
jae
and
mov
lods
les
aam
push
xor
mov
rcr
pop
popa
mov
faddl
jns
add
push
adc
iret
gs
lods
or
in
dec
inc
fs
cltd
jmp
sbb
in
int3
hlt
adc
notl
lods
leave
push
sahf
pop
sub
mov
repnz
add
jmp
or
test
add
mov
pop
clc
sub
and
lods
out
pop
mov
outsl
pushf
sub
jno
fimuls
scas
sub
xor
and
xchg
enter
cmp
inc
ja
gs
popf
arpl
mov
clc
push
jp
inc
mov
and
push
lods
pop
orl
mov
sub
icebp
je
and
mov
sahf
fucom
cmc
jbe
xchg
dec
fdivrs
cld
push
mov
cmp
out
gs
cmc
xchg
xchg
sahf
lds
adc
pop
or
push
xchg
mov
loop
jmp
jl
xchg
adc
mov
xchg
addr16
xor
inc
ret
fildl
jmp
inc
or
pop
outsl
sti
and
add
and
inc
adc
shr
mov
and
xor
scas
xchg
enter
adc
adc
stos
int
jno
cmc
xor
pop
sub
and
xchg
stos
cmp
jb
dec
iret
cld
pushl
pop
test
mov
xor
inc
lcall
or
dec
jb
xchg
iret
mov
push
nop
sub
insl
inc
ret
into
inc
fcomps
push
dec
ljmp
in
push
fdivrl
rol
mov
lock
clc
mov
xor
shl
bound
jne
insb
test
pop
mov
stc
mov
xchg
sbb
cwtl
or
cmpsb
popf
mov
sarl
jno
fisubs
push
mov
enter
jb
jmp
mov
xchg
lcall
or
inc
movsl
out
inc
xor
mov
repz
jns
xorb
add
mov
out
dec
lods
clc
push
cmpsb
cld
stos
inc
xor
pusha
inc
or
aaa
fstl
add
clc
dec
shll
mov
std
das
mov
shlb
adc
into
ret
fs
pop
leave
mov
test
cmp
jb
jg
xor
mov
xchg
in
in
sbb
arpl
xchg
sbb
sub
imul
or
je
loopne
jmp
inc
pop
fwait
in
adc
dec
add
pushf
mov
pop
xchg
adc
inc
dec
imul
add
lods
or
add
inc
or
xchg
inc
lret
sub
cmpsl
xchg
sbb
adc
add
aam
mov
cmp
lret
daa
xchg
shlb
test
cwtl
pop
mov
lahf
inc
test
xchg
cld
xor
mov
popf
jmp
cs
test
test
adc
lret
dec
sahf
aas
mov
outsb
daa
push
insb
mov
mov
pop
insl
ret
or
test
or
sbb
out
in
test
adc
push
mov
cli
and
adc
aam
adc
dec
add
mov
cmp
loope
or
icebp
jmp
mov
pop
int3
cmp
add
fldl
stos
nop
outsl
push
jmp
sub
and
dec
lods
and
push
xchg
xchg
lret
int
test
jb
fildll
or
mov
aam
and
sbb
xchg
pushf
add
test
sbb
cmp
aad
ret
cmpsl
js
dec
int3
cltd
xchg
int3
iret
stos
lahf
xchg
xor
jmp
mov
mov
jne
sbb
rcrb
dec
jns
jnp
lcall
xchg
pop
mov
add
popf
jecxz
icebp
cwtl
jo
fs
hlt
mov
xor
in
mov
or
sahf
roll
stc
add
jns
shrb
out
xlat
inc
std
loopne
cmp
out
lods
test
movsl
or
or
adc
das
enter
jg
mov
xchg
mov
out
int
cmp
cmpl
pop
cmp
leave
jp
out
out
or
cld
aad
inc
fs
mov
xchg
out
dec
in
or
out
jle
push
out
xor
nop
pushf
mov
and
adc
cmp
gs
push
insb
cld
xchg
clc
les
sub
jbe
pop
and
outsl
cli
xchg
push
das
jnp
insl
dec
divl
das
rorb
push
cmp
jg
iret
xchg
jae
pushf
scas
jl
adc
cli
insl
imul
loopne
ret
jo
cwtl
push
or
add
ds
mov
movsb
leave
fstl
xor
push
rcrb
push
dec
gs
fwait
mov
xchg
and
dec
loope
aaa
cmpsl
out
adc
pop
dec
jle
xchg
sbb
add
repnz
xor
pop
mov
dec
dec
mov
pop
pop
xchg
outsb
in
push
fstl
leave
jno
or
repz
adc
stc
call
pop
push
xchg
lds
sbb
mov
inc
sbb
andb
aas
xchg
xlat
mov
je
in
mov
or
sbb
push
sbb
jo
insb
lds
sbb
fbstp
add
lock
scas
vpmacssdd
std
imul
sbb
pop
aaa
lret
inc
or
inc
xor
xchg
pop
popa
scas
ror
fmuls
iret
movsb
sub
imul
pop
icebp
cmp
pop
ret
dec
cmpsl
sub
add
arpl
cmpsb
rorl
jbe
mov
or
sub
mov
outsl
into
add
aaa
fidivrs
out
sub
outsb
or
lret
sub
mov
in
aaa
ds
cmp
sub
add
test
sbb
or
dec
cs
mov
xlat
loop
int3
cmpsl
incl
lock
inc
jg
adc
lods
imul
mov
loop
inc
jnp
xor
lahf
push
aaa
xor
jmp
in
fiadds
xchg
push
add
push
hlt
addr16
cmovg
into
fimuls
mov
xchg
dec
js
jmp
stos
pop
and
add
xor
mov
mov
inc
push
adc
movsb
fidivrl
push
pop
lock
orb
fildll
aam
dec
ljmp
movsl
sub
fstl
sbb
test
lcall
leave
mov
fisubs
lret
rcll
xchg
mov
pop
jle
ret
adc
scas
jno
sti
cli
lods
pop
arpl
addr16
xchg
imul
cmp
jnp,pn
ret
cltd
in
push
mov
pop
int
pop
pop
gs
inc
dec
jecxz
inc
mov
sbb
jp
pop
xchg
outsl
mov
int3
cmp
xor
push
jns
or
ds
out
or
push
dec
test
dec
sub
mov
jbe
pop
sub
in
cs
cmp
leave
jne
pop
pop
lock
cmpsl
mov
jmp
popf
out
xchg
jbe
loope
inc
leave
jae
fnstcw
mov
adc
jg
popa
mov
mov
sti
rcll
insb
sbb
cld
fcmove
je
jg
pop
popf
movsl
test
xor
cmpsl
shlb
mov
mov
daa
cmpsl
jecxz
mov
aad
cwtl
stos
cmpsb
in
mov
mov
sub
outsb
jnp
lahf
push
mov
or
xchg
xchg
xor
lret
rclb
and
lock
ds
fsubrs
cmp
push
mov
movl
arpl
xlat
jge
out
jnp
out
shll
stc
xchg
xchg
rcl
mov
lods
dec
xor
push
sub
xor
push
or
outsl
mov
ret
pop
push
rcll
scas
ret
inc
jb
push
pop
aas
mull
insb
adc
cmp
push
inc
add
xchg
in
mov
mov
xor
push
imul
jp
scas
movsb
popa
fstl
and
cmp
rclb
mov
dec
sahf
movsl
xchg
adc
aad
push
mov
cmp
pop
xor
inc
jp
fildll
or
jecxz
fistpl
inc
lods
jle
sti
mov
cmp
rcrl
jmp
mov
push
arpl
stos
and
add
mov
adc
aad
inc
es
call
jl
push
aad
in
sbb
adc
xchg
mov
sbb
std
les
dec
mov
mov
test
mov
rcrl
mov
or
mov
inc
mov
xchg
push
xor
pop
inc
mov
push
js
ss
insb
xor
cltd
pop
push
mov
cld
insb
mov
and
sbb
lret
pop
add
sbb
mov
mov
mov
sbb
pop
add
popa
sub
cs
jge
or
rcll
rclb
insl
sti
jle
test
cmpsb
or
sbb
jbe
or
adc
push
aad
add
sbb
inc
call
insb
lret
rcrb
mov
into
pop
sub
jp
rol
test
cmp
inc
cs
icebp
das
jmp
jns
divb
or
andl
mov
push
add
lcall
inc
mov
iret
sbb
sti
js
es
jmp
movsl
sub
ret
mov
add
xchg
testl
loopne
pop
dec
aam
inc
jge
xchg
xor
push
mov
loope
std
jmp
out
fsubs
aas
push
std
sub
outsb
mov
mov
add
filds
leave
rolb
inc
adc
call
rcr
pop
sti
push
outsb
xchg
mov
and
jae
nop
sahf
push
movsb
jp
cmpsb
mov
dec
jp
cmc
xchg
negb
enter
stos
mov
pop
imul
add
addl
sahf
xor
jbe
push
sbb
pop
jae
sub
jg
outsb
inc
out
loopne
adc
adc
jmp
sahf
insb
loop
inc
jbe
jge
imul
xchg
and
aam
aas
cmp
popa
es
outsb
push
add
mov
sti
push
jo
xor
frstor
dec
xchg
inc
push
cs
sub
jno
and
movsl
xchg
sahf
imul
sub
adc
clc
push
and
cmpsb
ret
jo
rol
in
dec
adc
mov
cmp
xlat
cmpb
daa
cmp
outsb
mov
jno
push
push
mov
rcrb
repz
xchg
aas
andl
ljmp
or
mov
adc
dec
mov
popa
loopne
test
push
xor
mov
or
xor
xor
or
inc
pop
xchg
mov
repnz
scas
xchg
mov
jne
dec
inc
cmpsb
nop
sarl
fldenv
dec
out
stos
mov
push
adc
adc
lea
dec
pop
or
and
cmp
xlat
popf
sti
sti
iret
lcall
xor
js
push
push
ret
sub
lcall
dec
push
sub
rorb
mov
out
add
dec
push
pop
xchg
ja
mov
xor
and
dec
mov
mov
pop
loopne
xchg
sbb
push
clc
push
pop
mov
fmull
inc
insl
pushf
or
pushf
std
incl
sbb
cmp
add
fs
adc
dec
mov
sbb
inc
pop
mov
lds
pusha
mov
divl
aaa
in
loop
and
sbb
push
mov
aas
mov
dec
dec
lahf
mov
lret
push
movsb
mov
adcb
scas
push
adc
jae
scas
cltd
ret
in
movl
jle
loopne
movsb
dec
xchg
jecxz
and
mov
lods
sub
aaa
outsb
rclb
dec
or
leave
psrlq
mov
xor
pop
in
mov
dec
js
mov
out
leave
mov
mov
arpl
notb
inc
outsl
mov
repnz
pop
mov
lea
jbe
sub
sbb
in
push
dec
lahf
in
cmp
ja
outsl
cmp
pusha
in
sub
insb
insl
hlt
ds
and
jg
jmp
rclb
fs
es
lock
push
mov
inc
fdivrs
or
inc
dec
pop
pop
jle
aas
cmp
mov
and
rclb
movsb
push
lcall
leave
out
orl
inc
mov
or
pop
ret
cmp
jne
andb
mov
jle
push
xlat
xor
int3
fldt
mov
mov
sub
movb
in
add
lods
adc
fs
call
and
mov
mov
aad
sub
jo
adc
in
cli
leave
imul
add
adc
iret
xor
fistpll
mov
cmp
xor
sub
add
inc
mov
mov
inc
shrb
push
xor
add
add
in
xchg
daa
inc
push
jmp
enter
sub
push
test
inc
push
arpl
cmp
sub
enter
xchg
push
pushf
hlt
cmp
scas
pop
cmp
adc
inc
outsb
or
jge
adc
jo
test
out
insl
ss
lods
repnz
mov
mov
or
mov
pop
popf
adc
lds
lock
int3
push
or
rcrb
push
mov
lahf
scas
pop
loope
fadds
mov
add
jge
ficompl
out
push
pop
lock
ror
ljmp
jo
jecxz
test
loopne
cltd
iret
lods
icebp
popf
sti
lret
inc
dec
ljmp
enter
cltd
push
xchg
or
xchg
mov
mov
cmp
shrl
mull
imul
insb
popf
push
mov
movsl
sub
cmp
xchg
dec
dec
dec
out
sub
or
ret
shr
and
jae
sub
aam
shlb
rcrl
or
mov
pop
lahf
es
mov
mov
add
push
pop
mov
incb
dec
inc
leave
fisubl
into
fcomps
adc
es
and
dec
mov
cmpl
test
inc
repnz
sbb
push
pop
faddl
mov
adc
cs
fwait
in
sub
cmp
fnstcw
dec
inc
std
sub
mov
nop
and
mov
frstor
inc
cmp
inc
fdivs
pop
es
cmpl
addb
jecxz
and
jp
aad
push
xchg
and
hlt
dec
stc
cmp
jae
loop
fbld
mov
cmp
std
ss
xchg
in
scas
and
stos
lds
push
outsl
ljmp
decl
loop
mov
mov
ret
es
int
rcl
leave
std
stos
xor
or
xor
and
out
cli
in
mov
jb
push
or
sti
cmpsb
cmp
fdivr
cwtl
test
or
imul
stc
fucomip
inc
or
es
xor
xchg
pop
cld
xchg
pop
or
ret
stc
out
andl
and
push
sbb
mov
mov
adc
jecxz
popf
repnz
pop
stos
loope
das
cmc
nop
add
push
sbb
and
clc
xor
insb
lahf
dec
stos
popa
push
rcll
call
movsb
xchg
jg
cli
in
cmp
jns
jne
int3
xor
jbe
adc
icebp
mov
xor
cltd
aam
inc
mov
es
out
mov
dec
lea
rclb
call
xor
xor
ret
xchg
pop
push
lea
test
sub
jl
push
sub
loopne
push
add
sub
clc
fbstp
jo
ret
sub
out
fsub
fisttpll
enter
and
mov
jl
outsb
adc
or
add
inc
or
movsb
xor
les
out
lods
clc
xor
jmp
pop
pushl
ja
dec
sub
inc
lret
scas
addb
xchg
dec
mov
mov
adc
pop
sbb
pop
and
stc
in
xor
mov
dec
fisubrs
leave
and
in
test
imull
dec
test
add
out
xchg
adc
out
adc
leave
inc
test
dec
int
arpl
xchg
fidivs
sbb
je
mov
or
and
mov
into
lds
add
xchg
xor
add
std
out
dec
out
clc
lods
repnz
mov
sbb
lea
hlt
cmp
arpl
cs
fadd
inc
ds
push
and
test
jle
repnz
bound
nop
jle
xor
sarl
scas
scas
mov
jmp
and
cmpsl
cld
adc
jne
frstor
pusha
jle
cs
push
mov
cmp
push
shlb
add
inc
out
add
push
dec
addr16
pop
inc
inc
mov
xchg
xor
sbb
inc
sub
dec
cwtl
ss
dec
mov
fdivl
sub
jle
xchg
jnp
push
mov
or
lcall
test
mov
and
clc
inc
hlt
sbb
sub
pop
cmpsb
push
outsb
mov
push
xor
or
shrb
mov
inc
cmpb
cmpsl
es
mov
arpl
mov
pop
leave
inc
pop
sub
adc
leave
cwtl
fsubrl
popa
sti
mov
mov
and
scas
add
into
mov
xorl
pop
negl
xchg
add
inc
adc
addr16
aam
out
stos
jns
movsb
mov
and
imull
and
mov
fldt
out
js
pop
pop
gs
xchg
mov
aad
std
ret
rcl
xchg
fcomip
js
fsubrs
gs
push
jecxz
cmpsb
scas
subl
stc
push
iret
and
mov
lods
adc
xchg
mov
pop
push
lret
out
loope
sarb
pop
popa
cmp
mov
cmp
push
dec
leave
dec
inc
cmp
xor
dec
into
push
adc
pop
xchg
sbb
xor
xchg
xchg
pop
or
cmp
dec
xor
clc
inc
out
jns
fstl
bound
mov
sub
enter
outsl
add
mov
mov
jmp
add
mov
je
stos
in
in
aad
jge
cmpsl
insb
fldenv
test
lahf
lods
or
out
push
cmp
outsl
repz
jne
mov
je
xchg
test
pop
stc
mov
iret
lret
xor
sbb
sbb
testl
pop
shrl
sahf
js
sub
mov
insl
rcl
xor
push
mov
roll
rcr
je
icebp
shl
movsb
pop
inc
xchg
loope
cmp
in
icebp
mov
lret
cmpsl
rolb
fldt
or
lock
int3
jns
jae
push
mov
cli
dec
push
jmp
sub
les
aam
lret
sub
data16
xchg
pop
jge
cmp
jl
mov
fs
pop
mov
nop
dec
xor
lahf
xchg
jmp
cs
xor
popf
xor
xchg
sarl
shll
cmpsb
mov
or
arpl
mov
insl
pop
mov
dec
inc
gs
sub
jmp
mov
je
adc
xor
scas
das
cmp
cmp
push
cmc
dec
mov
lret
sahf
mov
or
mov
mov
inc
push
int
xchg
mov
in
xor
stos
cmp
imul
pop
shrb
mov
xchg
sub
adc
jb
insb
inc
mov
mov
sub
popa
hlt
fimull
les
fdivl
enter
test
pop
loop
cmp
cwtl
mov
test
inc
movsb
mov
mov
pop
adc
mov
or
sbb
popa
mulb
aas
sbb
enter
mov
mov
hlt
pop
cmp
or
andl
popa
push
hlt
dec
mov
incb
lahf
pushf
orl
pop
loope
fsubr
negb
mov
addl
xchg
rclb
lret
add
daa
and
flds
fisubs
push
mov
mov
aad
sbb
scas
int
sbb
lahf
dec
push
cmp
jns
pop
shll
xor
jnp
xor
mov
in
aam
enter
ss
fwait
push
push
int
faddl
leave
push
mov
jp
stc
xchg
and
push
push
pop
pop
push
enter
cmp
stos
jbe
xor
dec
hlt
pop
and
dec
push
sbb
stos
insl
xchg
shrl
mov
cmp
icebp
out
lods
int3
adc
movsl
aam
popa
es
xchg
loope
push
inc
adc
xor
add
fs
mov
mov
or
mov
inc
je
movsb
sub
daa
dec
cmp
cmp
sub
sbb
cld
jbe
pop
ret
dec
test
xchg
enter
es
aam
sbb
xchg
jo
sahf
ret
test
es
cmpsb
popf
fidivrl
test
mov
mov
mov
ret
lret
jo
enter
int
inc
loope
cmp
ds
cld
sub
clc
int3
pusha
jmp
mov
sbb
inc
fldl
bound
loope
mov
in
loope
rolb
inc
sbb
xor
pop
pop
mov
adcl
pop
loop
mov
inc
lods
in
imul
ss
cmp
or
pop
cmpsb
dec
sub
push
pextrw
mov
ret
mov
test
inc
sti
scas
cmc
stos
fidivrs
mov
stos
mull
pusha
loopne
orl
mov
and
shrb
xor
push
push
sub
inc
adc
in
mov
and
shl
add
stos
or
int
xchg
sub
rep
es
jmp
xchg
aaa
cmpl
cmp
push
and
fisubl
inc
cmp
adc
fisttps
lahf
mov
cmp
jp
js
mov
mov
dec
add
and
fiaddl
mov
test
lahf
or
imul
dec
in
dec
xchg
add
mov
rclb
scas
push
repnz
mov
imul
call
dec
inc
fists
dec
xor
xchg
shll
jo
sub
sbb
in
cmp
inc
shlb
outsb
daa
aaa
adc
mov
negb
aad
mov
xor
adc
lods
int
cmp
outsb
fwait
xchg
test
mov
jb
pop
jl
mov
xchg
sbb
push
inc
fcmove
lods
sub
xchg
stc
add
mov
xchg
je
sub
mov
lock
cs
xor
ss
test
ljmp
adc
xchg
pushf
popa
inc
lahf
pop
xlat
mov
sbb
gs
imul
push
sbb
add
jno
test
pop
xor
dec
mov
into
lods
pop
cmp
testb
cmp
test
mov
and
adc
mov
movb
test
and
lea
cmp
fstp
push
and
fsubr
outsl
push
add
aad
jecxz
and
mov
sub
jbe
and
insb
inc
lret
push
dec
es
mov
adc
pop
sahf
jo
push
or
cmpsl
clc
xor
mov
cmpsb
inc
and
pop
fisttpll
imul
mov
je
lcall
pop
mov
add
fwait
stos
push
outsl
scas
add
or
jecxz
mov
sti
pop
jl
in
mov
pop
mov
cmpsb
mov
sub
or
push
jns
xlat
jb
mov
lds
dec
pushf
adc
pop
rcll
test
in
mov
adc
sbb
dec
lock
adc
add
push
xor
insb
ret
jno
pop
dec
out
bound
pop
sti
mov
cmpsl
pop
imul
scas
popa
dec
mov
addr16
out
pop
scas
push
cmp
lret
push
popa
js
aad
push
sti
mov
cltd
cwtl
mov
push
xor
inc
sarl
fwait
das
sbb
sub
xor
sub
jo
out
sbb
stc
push
inc
into
outsl
jbe
call
adc
mov
inc
and
inc
loop
scas
cmpsb
mov
loope
mov
push
cli
fstpl
stos
shr
test
aam
and
xchg
pusha
xor
outsl
dec
fcompl
into
mov
inc
mov
mov
cmc
jecxz
lea
xlat
les
sub
dec
fildl
fistl
out
out
push
shrl
xor
out
push
mov
iret
cmp
and
mov
in
sub
pop
push
pop
pop
andb
jmp
test
jnp
bound
outsl
movsl
call
dec
imul
insl
cmp
frstor
sbb
pop
adc
arpl
lahf
in
jbe
lcall
mov
jbe
shrb
push
aam
push
aas
das
xchg
mov
inc
pop
sub
jl
cli
aas
popf
ret
stos
aam
xchg
xchg
xchg
push
or
pushf
mov
cmp
loopne
jle
push
sarl
adc
in
lcall
sbb
loopne
lock
sub
es
aam
pop
jae
cmp
push
adc
xor
lret
pop
call
xor
pop
sbb
inc
cmpl
je
lret
jnp
xor
adc
mov
ficoms
pop
or
call
setbe
sarb
movsb
test
mov
and
arpl
shrb
or
jp
out
push
add
jbe
mov
push
or
mov
mov
ja
out
shll
sub
add
jo
push
sub
div
pusha
pop
movsl
pusha
mov
xlat
jns
jmp
or
xchg
jg
ja
in
lods
ljmp
call
pop
cmc
cmp
add
stc
xor
ficoml
imul
and
dec
sbb
pop
mov
adc
cwtl
sbb
roll
mov
inc
or
mov
movsl
pop
push
push
mov
fdivrs
and
pop
pop
shl
cwtl
cli
aad
imul
lret
sub
rcrb
inc
fadd
mov
ret
out
xchg
sub
popf
jo
frstor
push
cmp
fisttpll
jge
das
sbb
dec
ds
stos
lret
lahf
mov
iret
pusha
int
loope
pop
shrb
imul
sub
mov
aad
icebp
dec
adc
pop
push
es
jae
imul
sbb
mov
mov
fmuls
pushl
push
xchg
insb
pop
mul
daa
xchg
xchg
push
lahf
fidivs
push
sbb
lock
sbb
test
outsb
pop
daa
mov
mov
or
mov
push
push
mov
sarl
popa
sarl
mov
lret
aam
ja
pop
mov
xor
mov
clc
pop
fildl
fsubrl
shrl
nop
fs
xchg
add
jb
jbe
jmp
jae
adc
les
enter
daa
ja
jecxz
adc
popa
dec
cs
iret
dec
in
sbb
cmp
cmpb
test
lock
test
cmpsb
test
sub
enter
insl
push
fdivr
xchg
jae
xor
fdiv
addl
xchg
mov
inc
mov
and
aas
xchg
repz
pop
sub
daa
and
mov
shrb
jns
ret
cmpsl
rcrb
add
in
divl
ret
xchg
mov
sarb
sbb
cld
jo
mov
dec
imul
adc
xor
mov
mov
test
cltd
sub
idivl
or
mov
gs
push
loopne
xlat
xor
mov
idivl
push
leave
sub
jae
cli
pop
fists
xor
dec
in
daa
ja
jae
or
sbb
lret
jb
mov
jb
mov
in
push
mov
lret
scas
or
mov
xchg
daa
fadds
push
lahf
mov
rcrl
into
mov
into
mov
outsl
mov
mov
sub
push
out
and
loop
adc
jl
push
xlat
cwtl
or
xchg
je
jne
lds
loop
bnd
inc
jnp
and
aas
movsl
jmp
inc
enter
in
lret
mov
int
mov
and
loope
dec
out
ss
loopne
xor
sarb
jmp
push
mov
or
push
ja
lock
xor
lds
imul
adc
add
xor
jbe
mov
in
fs
mov
out
mov
adc
movsl
mov
repnz
enter
addr16
data16
sahf
in
arpl
cmp
std
cs
mov
into
push
jg,pn
lods
sub
add
dec
add
inc
add
and
repnz
insb
fs
push
fcomps
or
lcall
les
adc
xor
loope
add
mov
push
mov
jl
dec
in
lret
rcrb
add
addb
pop
sbb
stos
dec
dec
fucomip
std
mov
sbb
xor
inc
ja
xor
ja
iret
xor
mov
int
push
pop
push
daa
int
lret
and
clc
stc
xlat
and
mov
push
mov
mov
jne
xchg
fdivrs
cmp
and
mov
ss
rolb
or
int
rclb
bound
jmp
dec
or
in
sub
xchg
loope
jne
and
xor
mov
inc
adc
push
jg
fmull
xor
cwtl
adc
inc
addl
cmpsl
data16
add
imull
push
mov
xchg
pop
jo
fwait
ds
into
enter
mov
cmp
jne
jbe
cli
pop
popa
jp
in
mov
scas
mov
mov
push
sarl
in
mov
dec
inc
popf
pop
les
or
push
jp
pop
out
mull
ficoml
mov
cmpb
jo
std
iret
daa
add
adc
popa
pop
scas
jns
shlb
fdivr
fmuls
ja
andl
mov
das
push
addb
push
mov
fwait
or
divl
mov
push
pop
and
push
out
mov
lea
jmp
out
shl
add
das
jne
mov
cmp
enter
xchg
mov
and
push
and
xchg
add
mov
arpl
dec
nop
sub
aam
adc
jbe
adc
adc
xor
add
sahf
jno
enter
sub
scas
fisubl
cmp
pop
cwtl
jg
add
dec
out
arpl
rcll
aad
fidivl
adc
xor
pushf
in
jp
xlat
popa
lods
cmp
adc
xchg
arpl
les
cmpsl
arpl
test
inc
jmp
out
push
sub
das
test
inc
pushf
sbb
fwait
int
dec
cli
cs
sti
push
in
ds
inc
lahf
movsb
sbb
jl
xor
sub
xor
sbbl
xchg
or
cmp
in
push
data16
push
jmp
scas
inc
push
hlt
pop
inc
inc
in
xchg
xlat
dec
mov
and
ljmp
mov
mov
repnz
std
out
scas
ret
push
inc
fsts
and
mov
outsl
test
imul
sub
dec
jle
or
inc
clc
mov
xor
inc
dec
mov
in
or
leave
stos
ss
hlt
popa
popl
sti
aaa
jmp
lods
pop
test
vmovaps
jp
push
push
mov
sbb
insl
call
cmp
xchg
xor
bound
sub
out
dec
lods
pop
dec
loop
cmpsl
adc
or
and
sub
rolb
or
xor
sbb
loop
lahf
adc
add
and
aas
repz
jecxz
cmpb
or
dec
popa
rolb
inc
and
jne
sbb
test
push
push
and
xchg
lock
dec
fnsetpm(287
insl
jp
insb
dec
ds
arpl
cmpsl
shl
lcall
inc
sti
aam
js
sub
add
jl
pop
in
jecxz
cmp
push
inc
aam
mov
lods
xor
rcl
mov
lahf
jp
and
mov
push
call
mov
pop
mov
popa
mov
xchg
out
xor
jmp
adc
or
inc
or
inc
neg
push
sbb
mov
fwait
and
jb
stos
inc
loope
mov
das
pop
xor
fcoms
rorl
popf
cmp
int3
push
inc
cld
syscall
inc
jmp
scas
sbb
arpl
test
xor
mov
pusha
dec
je
test
fstl
nop
sbb
and
or
mov
call
lods
xchg
xchg
add
jo
mov
sbb
repz
shll
xchg
sbb
iret
jbe
add
xchg
clc
jl
shl
nop
adc
push
xchg
rcll
or
stos
push
test
ds
ja
sahf
nop
pop
mov
push
iret
xchg
lcall
jl
shll
inc
and
ljmp
imul
push
dec
or
cmpsb
mov
inc
adc
loopne
push
iret
pop
movsb
loope
push
sub
dec
xor
dec
mov
jns
addr16
lret
mov
add
xchg
rcrl
jae
cmpsb
dec
mov
divb
movsb
insl
test
mov
stos
push
dec
mov
add
adc
mov
clc
dec
jle
aas
inc
arpl
add
fiaddl
in
xor
cmp
pop
xchg
xchg
inc
fucomip
ss
mov
cltd
pop
shrb
sub
imul
inc
adcl
ljmp
ror
dec
fdivl
mov
add
or
mov
mov
mov
xor
int
mov
sbb
fcmove
dec
je
adc
out
xchg
xor
mov
pop
scas
sub
cmp
dec
mov
xchg
jo
int3
sub
cmp
and
lock
or
fldt
mov
fwait
cmpl
cld
jns
xchg
shl
xor
popf
dec
shll
push
mov
and
push
daa
push
xlat
stos
fidivrl
xor
ljmp
movsl
mov
mov
pushf
adc
xor
jns
push
and
mov
sub
dec
rolb
mov
push
jge
stc
test
xor
xchg
or
push
dec
fdivrl
inc
ds
inc
lea
mov
jno
pop
lahf
jmp
jge
inc
ja
pop
push
call
mov
lret
xor
cs
sub
sbb
test
sbb
or
and
jnp
repnz
aaa
addl
rorb
xchg
add
mov
fwait
lahf
xor
lahf
jle
mov
xor
jmp
es
rorb
fwait
mov
xor
jb
add
jo
repnz
xchg
xchg
lds
shl
jle
es
lds
mov
sbb
stos
dec
pop
adc
sti
pushf
and
gs
je
fsubrs
mov
lds
jge
test
sbb
test
std
fs
subb
push
fcomip
ja
and
inc
pop
sahf
jns
xchg
rcl
pop
shl
into
xchg
add
js
cltd
and
out
add
cmpsl
imul
sub
lods
leave
push
ficoml
fsts
popa
movsl
lds
sahf
push
or
enter
ror
add
sbb
fstpt
push
dec
test
pop
xchg
fsubrl
in
pop
jmp
jl
mov
pop
sub
jmp
mov
xchg
ja
mov
add
aam
hlt
and
pop
push
adc
inc
ds
jnp
jg
dec
cmp
das
jl
hlt
mov
and
xchg
sbb
test
adc
test
lods
or
dec
inc
sar
cmc
lock
stos
dec
pop
cs
sbb
push
lods
mov
in
in
insl
push
xchg
push
mov
ss
loopne
push
out
xor
cld
sub
inc
in
adc
mov
int
jp
stos
sbb
jl
out
ds
sarl
and
jns
dec
xor
ss
inc
lcall
cmpsb
sbb
jl
repnz
pop
sub
push
mov
ds
fcoml
shll
popa
lods
inc
inc
dec
js
mov
cli
mov
inc
popa
pop
adc
iret
loop
lcall
dec
loopne
mov
lea
and
out
rol
idivb
mov
adc
repnz
mov
icebp
aad
inc
inc
xchg
cmp
jb
sbb
adc
push
and
es
add
lea
xor
pushf
xor
movsl
sbb
push
xchg
addb
cmpsl
test
adc
ret
test
in
xchg
fwait
add
les
das
popf
movsl
cmpsb
and
addr16
push
or
iret
mov
loopne
enter
insl
dec
pop
lahf
jg
mov
xchg
fstps
pop
xor
pop
addr16
lret
stc
jne
test
mov
add
push
ficoml
cmp
ljmp
test
sbb
rcrl
inc
ficoml
xchg
repz
pop
sti
je
lret
sti
dec
out
outsb
psubusw
cmpsl
add
mov
out
pop
insb
data16
lea
rcrl
mov
pop
adc
jne
cmpsl
jbe
dec
int
loope
dec
cmp
repnz
jnp
sbb
adc
cmp
test
pop
testb
xor
mov
mov
jae
sub
mov
jne
mov
sub
stos
into
inc
fcmovbe
cmp
fnstenv
cmpsb
dec
addr16
shlb
ret
dec
xorb
push
inc
mov
cli
test
lods
cmp
mov
cltd
sub
in
dec
xchg
je
aas
pop
pusha
popa
pop
outsl
aas
fnsave
shrl
push
hlt
mov
in
outsb
fxtract
or
mov
lock
sbb
add
in
sbb
or
adc
out
mov
mov
mov
inc
adc
sub
mov
cmc
mov
sti
aad
or
mov
cmp
mov
sahf
inc
cmp
icebp
adc
lock
jb
adc
xrelease
fildll
mov
ljmp
pop
loop
ss
imull
cmp
jp
xchg
xor
inc
sub
mov
incb
or
ljmp
mov
ja
jb
push
jge
mov
subb
inc
in
cld
imulb
ss
jecxz
insb
push
ja
fwait
dec
xchg
movsb
rorb
push
mov
or
mov
push
popf
les
inc
cmc
sti
push
in
rcrb
iret
jp
jnp
add
mov
fists
or
or
fidivrs
jmp
add
loopne
rcll
cwtl
sti
loopne
cs
dec
sti
loope,pn
inc
sub
inc
pop
adc
scas
clc
test
sub
or
add
mov
ljmp
aaa
scas
sbb
andl
shlb
fldl2e
and
imul
out
mov
adc
lahf
out
aad
cmp
into
inc
ficoms
mov
rcl
and
mov
sub
ret
rcl
xor
adc
push
and
xchg
xchg
mov
dec
fdivl
pop
fwait
iret
mov
xchg
sub
cmp
repnz
dec
push
shlb
dec
sbb
lods
sahf
out
xchg
dec
ja
shl
xor
pop
lea
ficoms
and
sti
lods
cs
xchg
push
bnd
xor
mov
stos
xor
clc
sub
gs
shrl
push
or
add
inc
lea
lods
jmp
mov
or
cmp
cmpsl
addr16
inc
out
jl
int
adc
enter
push
jb
ljmp
mull
push
cs
iret
mov
lcall
or
fcmovnu
inc
fstps
pop
dec
sbb
mov
cmp
cmpsl
mov
popf
es
aas
cmp
fdiv
sbb
inc
nop
jo
jnp
in
mov
push
or
movsb
test
out
push
add
adc
xchg
into
lods
pop
repz
andl
rclb
mov
or
int3
lds
fucomi
ss
push
std
sub
mov
add
test
cwtl
add
and
insb
imul
push
pop
hlt
mov
sahf
mov
adc
adc
aaa
fxch
icebp
add
jmp
xor
nop
jae
xchg
shlb
inc
xchg
enter
add
leave
push
out
fs
adc
js
add
nop
dec
clc
mov
push
or
fcmovnbe
adc
fwait
outsb
daa
lret
lret
imul
clc
data16
std
fucom
push
cmc
xor
push
aam
lret
inc
imul
out
xchg
xchg
sbb
jb
sahf
adc
aaa
xchg
call
movb
popf
xlat
inc
ret
jbe
sub
iret
add
nop
or
js
add
cld
add
and
sarl
sub
mov
out
lahf
nop
cwtl
jnp
dec
int3
fwait
icebp
test
inc
sbb
jecxz
cld
ret
scas
jbe
pop
adc
cmc
je
sbb
roll
xchg
sub
jbe
dec
mov
dec
push
mov
ret
int
stos
xchg
add
popf
notb
mov
dec
sub
mov
loop
daa
scas
ret
repnz
inc
repnz
out
clc
data16
jno
mov
xlat
push
sbb
cmp
mov
insl
cmp
test
in
xlat
xchg
faddl
arpl
mov
sub
adc
push
lret
inc
cmp
test
iret
xchg
loop
lock
jmp
sarl
mov
fbstp
frstpm(287
jl
mov
out
dec
loope
ss
jle
in
mov
cli
adc
mov
add
fsubrs
push
pop
adcl
push
jle
inc
adc
push
add
out
fcompl
ret
cmp
sub
in
movsl
jmp
jge
outsl
ss
push
cmp
ret
cmp
add
add
cmpsb
loopne
ljmp
fimull
imul
addb
sbb
scas
in
pop
xchg
lcall
mulb
rorl
pushf
pop
inc
mov
mov
mov
mov
add
cmp
xchg
je
fld
cs
push
mov
cmp
xchg
pop
ja
rep
pop
or
fstl
test
popf
xchg
push
mov
loop
outsl
iret
cmpsl
int3
aad
popa
jbe
mov
xor
xor
addr16
pop
fstpl
std
repnz
mov
cld
jecxz
and
mov
pop
lret
aas
cmp
sub
pop
bound
xchg
fcomps
jp
or
dec
sub
shl
pop
pushf
adc
fistps
mov
shl
movsl
mov
cmp
push
jge
cli
inc
ret
adc
fwait
mov
dec
add
sub
mov
add
mov
insl
fistpl
sbb
repnz
fstpt
mov
mov
adc
sbb
lock
dec
pop
adc
decl
es
dec
xchg
fst
add
enter
inc
sub
mov
sbb
jnp
cmp
cld
fldl
add
fcomp
fistl
adc
cwtl
daa
inc
cltd
xchg
cmp
inc
jo
pop
push
jmp
stos
scas
jb
pop
stc
or
mov
test
scas
xchg
and
outsl
mov
dec
mov
js
dec
mov
and
cs
les
jge
jmp
pop
inc
test
mov
jae
mov
push
test
mov
addr16
mov
or
mov
cmpsb
xchg
icebp
lock
push
adc
cmp
pop
clc
mov
add
dec
pop
pop
fldt
or
fists
xor
fistpll
fildl
fisttps
loope
fmull
insl
popa
jae
xor
clc
and
adc
cmc
shrl
inc
bound
loope
jmp
fs
lea
add
loope
pop
mov
cwtl
aam
cmp
inc
call
lock
in
add
test
mov
cmp
add
gs
xbegin
enter
test
aaa
or
push
pop
icebp
or
dec
iret
jmp
lret
cmp
pop
stos
mov
mov
sub
out
xchg
repz
inc
dec
mov
sti
movsb
test
push
adc
inc
divl
js
movsb
sbb
js
dec
imul
push
ljmp
push
fdivr
inc
sahf
jae
loop
out
xor
cli
adc
mov
push
mov
sbb
jbe
sub
daa
push
test
aad
pushl
nop
and
cld
std
aam
jb
and
dec
push
lods
cmp
fsubl
in
jbe
testb
mov
adc
in
lcall
iret
or
mov
pop
cld
inc
arpl
ds
sbb
dec
jecxz
cmpsb
dec
jmp
adc
addr16
adc
test
loop
scas
cmp
jne
ja
cmpsl
sub
xchg
clc
arpl
out
sbb
push
adc
lcall
movsb
je
jmp
aaa
stc
idivb
xchg
inc
xchg
jns
rcll
sahf
cmp
sub
jle
adc
mov
pmuludq
aad
aas
ret
in
outsb
popa
add
hlt
adc
aad
shrl
cmp
into
or
lret
scas
jle
dec
mov
mov
mov
test
jmp
inc
push
rcrl
cmp
xchg
jp
jle
jmp
mov
pop
and
pushf
cmc
inc
mov
xchg
rclb
and
xchg
jle
cmp
push
test
leave
xchg
sbbl
dec
sub
je
lcall
js
or
mov
push
inc
cmp
cmp
sub
out
fsubr
cmpsl
scas
rcl
out
andl
pop
pop
idivl
pop
pop
or
sbbb
push
jne
mov
xchg
mov
icebp
imul
jne
popa
ja
cmpsl
jmp
sbb
scas
sub
push
jbe
push
mov
adc
dec
pop
mov
test
adc
mov
pop
or
aas
test
push
pop
mov
pushf
fadds
mov
es
je
jne
dec
out
aaa
negb
inc
xor
mov
jo
jae
into
pushf
fwait
add
int3
and
outsl
cmp
xor
pop
rolb
mov
dec
int3
ds
out
mov
push
mov
add
inc
mov
call
lea
mov
fwait
mov
lods
push
inc
sub
shl
insl
jbe
shrb
jno
pop
scas
ds
inc
fs
and
sub
clc
dec
add
dec
leave
das
add
pushf
ss
insb
dec
cli
mov
scas
outsb
in
sbb
jmp
sbb
pop
test
push
pop
aaa
xor
push
fstps
int
push
push
mov
shlb
call
inc
outsb
popf
cmp
mov
inc
add
sbb
cmp
push
pop
push
out
in
adc
repnz
push
dec
das
dec
sahf
rorl
shll
push
dec
and
cmp
out
imull
data16
fcompl
mov
mov
jp
movsl
jno
xchg
dec
cld
jp
testb
popa
out
mov
mov
add
add
popa
popf
adc
dec
fisubs
xchg
gs
test
push
dec
in
cli
or
push
mov
xchg
sbb
incl
mov
inc
ficompl
add
push
rcrl
inc
adc
mov
or
adc
cld
test
xchg
nop
push
sub
sub
popa
or
lods
test
adc
adc
cs
div
push
pop
cmp
repz
cmpsb
iret
xor
pop
xor
cmpsb
or
dec
ret
inc
dec
es
daa
mov
popf
jp
cmp
or
push
mov
cmp
dec
cmp
pop
stos
call
fldenv
mov
cmp
out
imul
sbb
test
lods
fdivr
fdivr
movsb
enter
mov
cmp
mov
push
adc
fidivs
test
adc
pop
and
ret
shl
or
push
das
adc
js
inc
inc
sub
mov
lahf
inc
push
imul
sub
cmp
icebp
int3
cmpsb
or
shrl
mov
jnp
or
lock
push
xor
inc
ret
js
in
sub
icebp
ret
lcall
jbe
inc
xor
mov
or
jl
dec
adc
mov
xor
adc
dec
aaa
dec
inc
scas
pop
in
and
push
cmpsb
and
out
lock
cwtl
data16
and
aam
sub
mov
rol
adcb
push
jp
sub
sti
jmp
das
dec
divb
mov
mov
mov
clc
shl
cmp
imul
dec
mov
in
sbb
mov
mov
dec
aad
jae
sub
jle
es
adc
negb
xchg
enter
icebp
mov
xor
adc
mov
leave
enter
dec
or
leave
in
fsubp
lock
xchg
popa
xor
pop
dec
and
mov
mov
iret
or
pop
push
and
out
pop
ja
pop
xchg
loopne
sub
push
xchg
scas
aas
jb
rcrl
lahf
jnp
js
fldenv
push
pop
sahf
push
in
fldl
shll
jp
dec
in
mov
xchg
addr16
scas
out
sbb
and
dec
sahf
rorl
lods
adc
lcall
inc
pop
lahf
pop
lahf
or
cmpsl
stc
add
movsl
js
inc
cld
mov
cmp
enter
call
decb
mov
jnp
lea
add
inc
push
inc
xor
mov
push
in
scas
lods
jp
cld
dec
add
cmp
ja
cmpsl
sub
push
fmul
stc
gs
fnstsw
inc
push
test
push
addb
xchg
inc
test
rorb
mov
xor
daa
jmp
dec
fsubs
and
xchg
in
movsl
sbb
sahf
pop
push
xor
test
lahf
sub
ret
call
inc
push
and
daa
push
and
lcall
in
push
repnz
ljmp
adc
lock
inc
mov
test
mov
inc
out
mov
dec
pop
ja
icebp
std
and
daa
insl
outsb
sub
mov
es
inc
jno
out
jbe
adc
in
out
dec
jbe
push
loop
outsl
xor
loopne
jl
jne
mov
jno
orb
cmpsb
jmp
mov
jge
xor
cmpsb
data16
sub
mov
mov
rcrb
adc
ds
enter
imul
sbb
leave
cmc
inc
inc
dec
add
xchg
pop
pop
or
lret
mov
arpl
jmp
ja
or
cltd
inc
inc
call
das
sub
jle
pop
mov
add
xor
cli
ds
movsb
daa
add
sub
cmp
adc
insl
dec
pop
lds
arpl
aaa
xchg
push
pop
scas
inc
jae
stos
pushf
fisubrs
push
push
mov
fisttps
xlat
pusha
xlat
mov
jecxz
addr16
imul
dec
xchg
adc
jo
push
mov
roll
mov
les
add
pop
loop
data16
xor
pop
int
xchg
sub
push
jl
cmp
outsb
imul
sahf
jo
mov
push
mul
jge
out
sub
xlat
pop
pop
stc
jbe
out
aam
test
cwtl
pop
adcl
pop
out
fs
cmp
push
test
icebp
enter
push
test
xchg
in
sbb
call
push
sbbb
jns
lock
cmp
mov
cmp
sti
pushl
dec
sub
out
mov
pop
sar
aam
jge
iret
in
mov
xchg
push
insb
xchg
fsubs
xchg
add
or
xchg
test
pop
in
shll
out
dec
jg
imul
sub
lahf
scas
jae
mov
inc
mov
pop
movsl
gs
je
xor
std
sub
and
stc
push
outsb
ljmp
dec
sbb
cmpb
pushf
sub
mov
inc
popf
push
je
xor
lret
add
aad
addl
dec
test
es
cs
cmp
push
lods
aas
sarb
mov
fsts
push
mov
popf
mov
mov
pop
inc
mov
inc
jl
iret
dec
jl
pop
mov
inc
push
stos
dec
inc
dec
mov
push
ja
lcall
test
pop
jbe
sub
pop
mov
test
mov
cmpsb
cld
fnstsw
mov
mov
jp
xor
cwtl
cltd
sbb
adcl
xchg
movsb
mov
jne
sbb
ret
icebp
push
lds
and
in
lods
pop
inc
fsubrl
push
loopne
inc
or
push
add
inc
pop
mov
scas
sbb
or
pushf
dec
iret
pop
data16
in
ja
rcrb
sti
sbbb
lea
lds
xor
popa
cmp
sbb
stc
rclb
js
sbb
test
sarb
pop
into
imul
or
outsl
xchg
mov
and
sbbl
push
jno
jl
sbb
xchg
xlat
cmp
mov
jo
sbb
xor
xchg
jmp
mov
inc
inc
out
and
pop
mov
jbe
mov
pop
sbb
or
inc
sbb
cmc
lret
lds
into
mov
xlat
ss
and
xorb
pop
push
and
popa
and
jecxz
inc
xchg
jg
mov
fs
stos
jns
push
pop
test
fwait
jle
cltd
jge
mov
push
sub
adcb
mov
pop
andb
inc
push
xor
xor
and
adcb
outsb
sub
pop
mov
xor
fimuls
lods
out
add
mov
cmpb
mov
jb
inc
out
popa
cmp
sub
dec
mov
mov
xchg
daa
scas
mov
inc
test
pusha
testb
hlt
mov
jp
mov
add
in
and
sbb
imul
cmpsl
push
js
mov
inc
ljmp
jle
outsb
and
mov
lret
inc
xchg
dec
mov
xorb
mov
mov
out
cmp
dec
std
xchg
sbb
xlat
dec
fsub
and
mov
int
xchg
dec
mov
or
scas
ljmp
mov
sbb
jmp
pop
stc
sub
xor
cmpl
aaa
dec
mov
movsb
loopne
jp
rcrb
pop
mov
fwait
cmp
cwtl
inc
sbb
jno
push
imul
add
call
push
addr16
mov
dec
lahf
fld
iret
iret
jns
lret
addl
xor
sbb
pop
jg
pop
xor
les
lahf
pop
or
jno
mov
cmp
xor
js
pop
or
ja
pop
adc
pop
sahf
xchg
int
mov
xchg
nop
cmp
xchg
out
out
mov
dec
xchg
push
mov
mov
add
sahf
dec
dec
add
cli
or
loop
aad
push
push
js
lods
test
jo
sti
or
aas
scas
add
mov
pop
sbb
inc
sbb
push
jnp
imul
mov
loopne
jne
push
inc
push
jl
fisttpll
arpl
sahf
je
jnp
mov
fldenv
lds
cmp
sbb
mov
or
popa
movsl
pop
inc
add
movsb
sbb
in
xchg
ds
mov
sbb
cltd
es
jno
out
mov
testl
push
push
fisubl
ret
push
dec
mov
out
ret
push
adc
andb
mov
dec
mov
mov
dec
xor
ficomps
mov
aam
xchg
call
jp
ficomps
test
xor
idivl
bound
mov
pop
popw
daa
loope
pop
lret
cmp
xor
lock
adc
sub
stc
js
hlt
and
adc
test
sub
xchg
mov
xchg
adc
xchg
mov
pusha
pop
inc
add
addr16
and
ret
mov
ficompl
ret
and
jecxz
cwtl
push
fiadds
add
jp
pusha
jnp
lret
lret
dec
stos
cmc
jl
sbb
sub
aas
mov
hlt
imul
dec
cmpsb
repnz
fnstenv
in
sbbb
call
xchg
cmp
in
lock
divb
shrb
lock
pop
push
jae
push
sbb
mov
mov
inc
push
mov
imul
mov
imull
subl
push
loop
xor
and
xchg
inc
cmpsl
jno
out
dec
pop
jo
push
movsb
out
sarb
mov
pop
cmpsl
xor
mov
into
sysenter
and
xchg
addr16
inc
fwait
cli
mul
sahf
adc
dec
loop
xchg
rolb
dec
dec
cmp
mov
jl
cmp
in
lods
mov
add
cmp
je
test
inc
lret
jae
mov
imul
fildll
repz
shl
xchg
fnstsw
sar
cli
aam
inc
andl
aas
testb
lods
sti
rorb
pop
jb
adc
or
sbb
dec
push
fists
mov
jo
clc
fdivs
fs
push
add
sub
adc
xchg
and
lret
pop
push
pop
data16
shl
jge
lock
pop
xchg
call
xchg
adc
ja
dec
xor
pop
dec
or
repnz
in
ret
and
pop
in
mov
insl
mov
mov
mov
mov
inc
lock
xor
mov
jmp
push
pop
mull
daa
dec
pop
rcr
push
xor
flds
sub
mov
enter
shll
pop
pushf
xorl
pop
ret
push
mov
mov
addr16
mov
push
popf
push
dec
pop
cmp
std
les
leave
jmp
dec
sbb
in
jle
scas
push
inc
mov
das
pop
push
mov
pop
cli
nop
add
jmp
push
cld
inc
lds
inc
and
shrb
pop
mov
das
mov
leave
cmp
mov
or
jmp
or
add
ret
xlat
push
adc
outsl
sub
in
cmc
test
push
and
fcoml
adc
movups
movsl
rep
mov
dec
dec
mov
jmp
jnp
fcom
push
or
aam
adc
mov
xor
mov
and
testl
mov
stc
fiaddl
inc
push
fldenv
cmpsl
loop
insb
mov
mov
fs
or
push
scas
mov
push
fcoml
test
jbe
in
sub
cmp
icebp
lahf
jbe
sbb
fwait
aad
ljmp
adc
movsb
cmp
pop
inc
mov
fdivrs
in
or
mov
jbe
mov
bound
adcb
cld
sbbl
and
pop
loop
cmp
xchg
mov
push
xor
std
out
lods
inc
xchg
xchg
adcl
jl
rcll
mov
mov
push
mov
jge
adc
xchg
popf
adc
xchg
cmp
pusha
imul
stos
cmp
add
pusha
xchg
std
and
pop
repnz
das
mov
xchg
xor
add
inc
std
mov
sub
in
or
popf
and
shlb
cmp
inc
lods
sahf
test
iret
mov
stc
sbb
mov
je
iret
mov
inc
and
add
dec
loopne
stos
hlt
dec
les
jl
not
or
sahf
jnp
push
ret
data16
lahf
jl
mov
inc
testl
xchg
out
dec
pop
dec
add
sbb
sarl
mov
xorl
inc
adc
cmp
push
xor
jnp
push
and
in
ret
inc
stc
pop
fdiv
inc
mov
or
call
cltd
or
jns
push
mov
js
sub
adc
push
and
sbb
popf
outsb
cmp
cmp
lds
outsl
dec
int3
flds
or
ror
mov
int
ja
xchg
test
mov
add
xor
icebp
pop
cmp
or
int3
fmulp
xchg
cltd
adc
and
sbb
sub
and
je
rolb
es
xor
xchg
das
jb
nop
fcompl
je
lds
mov
mov
and
inc
test
jge
cmp
test
jl
or
popa
insb
addr16
cmp
jo,pt
rcll
je
and
out
dec
inc
xorl
lcall
insl
popa
mov
das
mov
xor
and
pop
sahf
out
xor
fdivr
lods
add
xorb
cs
in
mov
insl
pusha
xor
add
and
cmpsl
les
repz
mov
frstor
cmp
sub
mov
mov
dec
dec
adc
mov
enter
sub
xchg
sti
sbb
dec
jg
sti
mov
pop
gs
dec
jbe
and
in
pop
lea
mov
and
addr16
adc
mov
xor
es
add
sub
xlat
stos
inc
jbe
dec
push
cmp
out
jmp
mov
lret
inc
lret
dec
sbb
divb
fmuls
aaa
enter
movsl
mov
rclb
rorl
shll
push
loopne
sbb
cmp
in
jmp
movsb
jmp
ret
jno
ror
in
inc
loop
push
sbb
aam
movsb
mov
test
loopne
mov
inc
jmp
xchg
lahf
test
pop
jne
adc
ficoms
enter
stc
in
lods
paddusw
pop
pop
lahf
jo
in
cmp
lods
lcall
or
sub
or
sbb
add
clc
outsl
icebp
jae
cmp
insl
je
xlat
lahf
xchg
lods
mov
dec
mov
push
inc
mov
sub
mov
mov
cwtl
xchg
cmp
push
test
dec
loop
xchg
push
and
daa
mov
test
pop
shlb
and
sbb
mov
pop
les
in
pop
mov
cmp
adc
pushf
mov
mov
xor
jno
outsb
or
inc
xor
aas
test
push
call
rclb
xchg
adc
cmp
xlat
sub
int3
push
stos
mov
sti
test
push
fsubrl
nop
popf
mov
movsb
xor
test
mov
xor
mov
std
fs
fildll
sbb
enter
adcb
mov
xchg
xchg
sbb
ret
les
xchg
lret
xor
test
cmp
iret
fiaddl
dec
push
dec
lods
and
adc
jmp
xor
inc
inc
ljmp
popa
js
xor
push
add
inc
push
cmp
pop
push
shr
xchg
clc
cmpsl
or
lock
enter
int3
out
xor
sbb
popf
jnp
nop
hlt
das
add
xchg
mov
xchg
stc
cmp
dec
lds
inc
imul
adcb
mov
add
pop
cltd
lret
leave
inc
mov
rorb
jae
mov
lret
imul
in
fs
mov
sbb
loop
lods
pop
inc
imul
xor
xchg
out
mov
sbb
cmp
push
sub
test
pop
jge
jno
lcall
jb
sub
jno
xchg
cmp
mov
addb
push
xchg
sub
or
mov
sti
gs
push
out
pop
push
pop
gs
or
mov
dec
scas
mov
popa
pop
xorl
cli
mov
sub
mov
jmp
lock
lret
adc
and
cmp
or
dec
push
loop
movsb
push
addr16
addr16
repz
lahf
add
aas
lret
mov
push
fcompl
sub
dec
push
not
mov
jnp
mov
leave
aas
inc
or
xchg
mov
cmpsl
ja
adc
cwtl
fcmovb
orb
testl
ror
jge
and
lds
dec
outsl
sub
xor
sbb
cmpl
sub
fistl
jecxz
mov
aad
test
loopne
rorl
movsl
push
shl
out
imul
loope
add
fcompl
push
cli
inc
cmp
cmp
or
pop
pop
aaa
lea
mov
cmpsl
sbb
loop
mov
mov
sarb
dec
jp
xor
in
sub
mov
fst
fsubs
ljmp
push
sbb
pop
fidivrs
in
out
arpl
in
fidivl
or
add
mov
iret
mov
loopne
ret
stos
adc
inc
and
cld
sti
fistpll
jns
sbb
and
ficoms
push
fnstcw
mov
push
rorl
adc
lods
add
jno
shlb
cmp
add
jmp
int3
popa
mov
das
inc
sbb
insb
popf
cmp
sbb
ret
or
rcll
xchg
xchg
into
in
inc
je
push
out
xor
mov
int
sbb
mov
sub
pop
std
push
sti
rclb
test
dec
jns
daa
aas
cli
cmp
icebp
pop
push
add
adc
mov
loope
lahf
fwait
dec
add
and
and
shr
xchg
jmp
les
enter
lods
fcoms
mov
arpl
mov
and
enter
and
push
insb
dec
mov
fcompl
xchg
jno
and
or
lret
outsl
in
pop
mov
jnp
mov
jnp
xor
adc
xchg
jle,pn
xchg
push
hlt
cmc
or
bound
add
xlat
ror
ss
inc
int3
pop
xor
mov
jae
outsb
push
cmpb
cs
inc
data16
jno
lods
pop
push
mov
in
xor
push
mov
and
leave
ds
jae
pop
push
sti
jns
mov
xorl
aam
imul
sarb
adc
adc
push
sub
push
push
loopne
mov
cmc
mov
andl
sub
jns
mov
rcr
lods
insb
out
mov
sub
fdivs
adc
jb
mov
or
cmc
fwait
push
jbe
fildl
xor
aas
mov
rorl
jg
mov
or
pusha
int3
sub
pop
or
and
cmp
inc
adc
stos
in
sbb
sub
xchg
ds
mov
xchg
aam
fidivl
and
sbb
lods
outsb
fdivrs
mov
std
test
adcl
adc
imul
adc
add
insb
ret
cmp
shl
cmp
mov
call
jae
test
pushf
negb
std
pop
repz
dec
fmul
push
popa
push
rol
push
push
dec
jo
cmp
mov
das
loope
jecxz
fwait
clc
inc
out
cli
fisttpll
pop
pop
loope
xor
xlat
rol
rcrl
andl
js
jmp
addr16
push
and
inc
daa
sbb
add
fs
iret
lock
mov
mov
mov
out
adc
cmpsl
in
mov
and
lretw
dec
and
scas
mov
rclb
inc
pop
push
test
stc
cmp
pop
add
cmp
lahf
je
mov
shll
jbe
xchg
jg
inc
daa
inc
pop
dec
int
push
push
fildll
pop
lret
sbb
fsubs
fdivrp
movl
push
jp
andl
fiadds
xor
dec
loop
or
lods
sub
push
movl
jb
ljmp
cmc
into
mov
add
push
lock
lahf
dec
and
aam
and
push
sub
or
popf
insl
inc
pusha
test
dec
add
adc
pop
adcl
jne
sbb
or
outsb
andnps
push
lahf
pusha
outsl
aas
imul
lds
jg
mov
imul
cwtl
ror
xorl
or
mov
test
inc
fs
or
mov
addr16
ret
lods
sbb
adc
mov
fimuls
fisttps
imul
jmp
in
rcr
or
and
jge
nopl
mov
out
add
and
pop
test
pop
repz
sahf
or
out
or
ss
pushl
ror
xchg
cmpsb
xchg
and
cli
cmp
addr16
bnd
insl
and
xchg
pop
mov
cmp
or
sbbl
and
inc
inc
mov
xchg
cwtl
out
or
push
cmpsl
jbe
cmpb
scas
adc
lcall
add
loop
pop
sti
inc
jmp
lret
fiadds
dec
xor
xor
push
sub
push
cmp
xor
call
pop
jne
imul
inc
dec
sbb
and
jnp
push
add
pop
pop
or
int3
sub
add
xchg
mov
mov
inc
add
cmc
mov
ret
sbb
cltd
xor
xchg
fbstp
mov
daa
pop
dec
dec
xchg
jmp
cmp
xor
fs
or
bnd
dec
ror
mov
jecxz
fstps
jbe
jmp
mov
pop
stos
lret
dec
lds
shrl
xor
adcl
shl
shrb
xchg
sub
in
clc
and
xchg
orl
xlat
movsb
mov
loop
sub
loopne
sbb
cmpsl
pop
jecxz
shrl
cltd
lods
mov
pop
adc
addb
mov
test
orl
push
addr16
inc
ss
jbe
loope
cmpsb
int3
xchg
add
out
xchg
xor
push
mov
cmp
fcomp
fdivr
icebp
jmp
inc
mov
insb
rclb
sbb
jmp
xchg
sbb
mov
lcall
fdivrs
mov
sbb
pop
scas
scas
cmp
in
imul
cvtpi2ps
push
pop
pop
nop
cmp
les
shll
orl
popa
dec
cwtl
cltd
imul
shr
cli
sub
xchg
inc
and
mov
icebp
outsb
call
mov
cmpsl
push
pop
lods
enter
lcall
xor
lods
sub
test
das
adc
in
aad
clc
xchg
push
outsl
mull
jns
and
add
adc
daa
fs
inc
loop
bound
push
mov
mov
stos
mov
jmp
popa
push
out
sub
jp
adc
rorb
pop
imul
es
jecxz
shrl
ljmp
jne
push
sbb
add
sahf
imul
jecxz
je
loop
xchg
add
dec
adc
rcll
in
scas
push
out
jg
pop
repz
out
es
cmp
or
or
in
leave
add
xchg
pop
es
adcl
fldl
int3
pop
mov
cs
or
repnz
cmp
xlat
std
xchg
mov
push
sub
xchg
push
jmp
cmp
xchg
mov
inc
imul
incb
ss
jg
leave
repnz
pop
add
mov
mov
xchg
pushf
enter
sahf
addr16
cwtl
inc
sbb
fwait
dec
mov
out
arpl
jno
pop
test
dec
shr
rorb
jb
out
mov
inc
dec
xor
dec
adcl
or
scas
dec
jg
insb
push
xchg
pop
cli
mov
addr16
pusha
addr16
lods
xor
dec
pushf
cmp
das
cmp
dec
xchg
movsl
scas
and
imul
dec
scas
dec
mov
out
inc
cli
add
mov
pusha
test
xchg
imul
cmc
test
push
inc
fidivrl
nop
arpl
xor
enter
mov
or
inc
jge
xchg
jg
mov
loop
jg
push
int
sbb
push
std
mov
mov
lret
sbb
or
fwait
les
inc
or
inc
mov
sarl
pop
andl
adc
xor
mov
stc
aaa
lret
fnstcw
pushf
mov
jle
pop
js
dec
adc
nop
test
push
movsl
xor
push
iret
sub
lcall
aad
mov
lods
cmp
clc
leave
int
sub
dec
mov
push
dec
xor
xchg
inc
pushf
je
adc
es
or
movsl
cmp
cmp
jne
jb
out
std
adc
ja
mov
jecxz
push
sbb
addr16
outsb
sbb
xor
imul
mov
jecxz
test
cmc
adc
loope
cmp
mov
pop
cmp
insl
mov
jp
or
mov
inc
xchg
lds
mov
cmp
push
aas
mov
sbb
push
pop
xchg
xchg
data16
lahf
xor
stc
jae
pushf
push
sub
mov
sbb
xor
jnp
ret
mov
es
dec
imul
aas
movl
jp
aam
out
sbb
sub
insb
push
mov
inc
inc
jne
lcall
outsb
jecxz
pop
int3
jle,pn
mov
mov
jae
arpl
cmpsb
inc
push
in
or
aas
mov
out
ja
ror
push
xchg
jnp
cli
add
sahf
fs
push
in
lretw
sbb
insb
cmp
enter
je
rorb
stc
stos
push
test
xchg
orb
insb
push
or
movsb
pop
scas
xor
xchg
xor
loopne
bound
mov
adc
call
xor
stos
repz
inc
les
mov
in
xchg
dec
cs
inc
and
push
xor
mov
mov
mov
pop
sbb
ljmp
aas
inc
mov
cwtl
dec
sbb
xor
test
test
inc
pop
or
pop
inc
pop
inc
push
aaa
fmull
lcall
xchg
gs
hlt
mov
outsb
sbb
ss
push
out
lret
stos
xchg
xor
gs
cmp
xchg
add
mov
ret
jnp
in
adc
add
jle
sti
xchg
shlb
xchg
cltd
xchg
sbb
sub
loop
das
std
xor
xor
mov
es
icebp
fbld
cmc
icebp
adc
cmpsl
sbb
mov
cwtl
or
clc
test
stos
repz
adc
cli
dec
jle
push
push
push
jg
in
mov
push
cmp
mov
imul
push
xor
imul
cmp
cmp
jne
mov
sub
mov
lock
pop
lcall
pusha
arpl
repnz
jne
dec
nop
xchg
out
aaa
mov
sbb
dec
test
fscale
sub
sti
jnp
xor
les
or
dec
mov
push
jl
loope
xchg
jns
push
jo
sub
adc
push
push
pop
xor
xor
xor
mov
aaa
ja
pop
mov
rclb
or
xchg
xchg
ss
mov
inc
cltd
push
dec
pop
in
mov
in
adc
jl
mov
cmpsb
xchg
aad
jno
and
sub
jno
xor
jo
xlat
std
std
jmp
rcrl
fistl
jge
aad
dec
pop
pop
popf
gs
clc
outsl
push
test
in
ja
std
cltd
jbe
cmp
rcll
pop
out
stos
inc
repnz
inc
mov
mov
outsl
and
fists
out
jnp
and
scas
in
decl
dec
fcompl
fwait
decl
fwait
adc
cwtl
das
test
push
mov
imul
and
int
pop
sbb
push
aad
push
lock
sbb
jg
cmc
dec
adc
cli
inc
mov
lea
jp
mov
call
and
sbb
lret
dec
leave
inc
ja
lods
sub
xchg
pushf
xchg
aaa
imul
adc
sub
movsl
stc
xchg
out
in
shll
push
mov
jle
sbb
dec
ret
scas
mov
pop
cmc
xchg
push
ret
xor
in
mov
inc
jecxz
dec
das
fisttpll
mov
neg
xchg
push
mov
outsb
fsub
jge
es
fs
in
lcall
cmp
jb
popa
lret
pop
insb
xchg
pop
add
ja
xchg
bound
xor
lcall
in
repz
hlt
adc
pop
or
test
xor
scas
ret
xchg
repnz
xchg
pop
mov
hlt
pop
addr16
sub
jo
fsts
int3
push
insb
inc
in
test
sub
out
inc
push
jg
mov
pop
sub
es
out
or
es
sahf
xor
aas
sub
pop
jge
in
into
add
xor
shlb
lret
ljmp
incb
arpl
js
cmp
shrb
and
jb
gs
aaa
inc
cltd
mov
ljmp
jg
lods
in
dec
pop
push
push
pop
dec
mov
icebp
cmc
shll
iret
xchg
shlb
jae
in
pop
pop
or
add
and
dec
xor
jle
xor
cwtl
test
push
repz
jl
movsl
shrl
or
pusha
pop
shll
mov
clc
add
xchg
inc
inc
push
in
xor
leave
xchg
test
mov
sbb
push
inc
adc
jo
dec
xor
cmpsb
dec
adc
mov
adc
call
cwtl
leave
testl
mov
push
inc
pop
data16
mov
pop
mov
enter
pop
subb
push
outsb
test
imul
jge
and
and
insb
xor
lods
inc
xchg
nop
aaa
pushf
lock
mov
leave
outsl
jns
out
adc
in
aaa
iret
dec
mov
adc
in
mov
push
push
add
sahf
inc
cltd
js
lods
and
mov
xor
and
xchg
sbbl
xchg
jbe
mov
movb
arpl
popf
pop
cmpsb
fldcw
sbb
inc
sub
insb
adc
movb
scas
or
inc
pusha
lcall
cmp
movsb
pop
arpl
and
imul
dec
xchg
and
xor
in
mov
cmp
in
adc
dec
mov
rorl
incb
xlat
addl
fcomp
test
cmpsl
xchg
sbb
sub
iret
jp
sti
out
mov
shrl
or
loope
arpl
les
push
scas
std
icebp
push
and
mov
and
mov
rcrb
fdivrl
leave
outsb
mov
push
adc
jl
sub
clc
xchg
cli
add
in
jmp
and
arpl
pop
fiadds
dec
adc
sti
inc
mov
outsb
call
cmp
pop
lcall
sbb
xchg
xor
insl
dec
and
pop
mov
xchg
out
mov
int
lock
or
add
dec
mov
mulb
and
cmp
mov
ja
out
rol
loope
in
je
cmp
test
xor
aas
insl
xchg
popa
add
add
and
sbb
jbe
xchg
jno
push
scas
sbb
sub
icebp
mov
sbb
test
pop
pop
divl
and
cs
insb
push
push
mov
add
pop
add
popf
fstpt
pop
xor
jp
repz
gs
int3
sarl
outsl
shl
xor
dec
xor
cmp
push
mov
bound
jne
mov
lret
inc
push
adc
imul
ss
loope
dec
ja
mov
arpl
cmp
sub
stos
rcl
or
data16
dec
adc
or
fistpl
cli
pop
pop
cmp
mov
movsb
je
outsl
pop
jg
div
fstps
dec
test
inc
shlb
push
add
mov
ds
outsb
push
push
lock
lods
push
xchg
dec
push
cmpsl
cmp
adc
push
ds
aad
lahf
je
sbb
pop
leave
jl
arpl
pop
pushf
cmp
mov
mov
pop
leave
aaa
int
js
outsl
cwtl
addr16
mov
xor
sahf
inc
sub
push
pop
xor
stc
pusha
arpl
out
sbb
es
mov
cmpsl
dec
repnz
push
test
cmp
pop
loope
ret
push
push
cltd
dec
dec
jne
movsb
lret
icebp
ja
xchg
stos
mov
push
add
add
aas
sarb
enterw
sub
add
push
xchg
cmpsl
int
shlb
inc
sbb
mov
stos
les
push
daa
mov
iret
jns
cmp
adc
cmp
and
js
sbb
jmp
xchg
aad
out
mov
add
lods
mov
nop
test
mov
out
fldl
in
fimuls
fdivrs
mov
pop
pop
outsb
rcrl
cmp
sub
es
outsl
mov
fisttps
in
rorb
mov
rcll
jno
std
inc
ret
jno
push
test
mov
push
lea
cmp
mov
push
fidivrl
into
sarl
int
mov
mov
movsl
dec
lret
sub
push
stc
scas
pop
mov
movb
xchg
xor
lahf
in
xchg
cwtl
notb
cmpsl
cs
add
sbb
loop
cld
out
and
add
adc
imul
mov
jg
pusha
popa
mov
or
insl
dec
cmpb
dec
ret
add
sub
arpl
xor
rcrl
mov
clc
inc
push
shl
mov
sbb
mov
in
dec
pop
sub
xchg
ja
pop
adcb
jno
imul
sub
test
mov
hlt
in
pop
addw
inc
std
dec
sbb
cmp
pop
mov
sar
mov
mov
shlb
aaa
sub
pusha
mov
sub
repnz
stc
movsl
pop
cs
fucomip
inc
xor
mov
aad
dec
lret
enter
das
ficompl
cltd
rol
imul
retw
iret
roll
xchg
jb
loop
xchg
and
das
cmc
ret
jae
subl
cli
or
sub
ljmp
push
push
shl
ftst
mov
std
js
stc
mov
nop
jbe
inc
movsl
adcl
iret
into
dec
jmp
dec
adc
cmpsb
ds
idiv
mov
lods
pop
push
int3
int
pop
in
adc
xchg
xchg
jl
cwtl
pop
add
xor
popf
stc
and
aam
mov
dec
inc
xchg
stc
fst
loope
and
adc
pop
inc
cmp
lcall
pop
insl
pop
jecxz
movsl
lock
or
lret
mov
or
fnsave
jae
push
xchg
or
sub
cwtl
dec
cmc
mov
pop
das
or
iret
addr16
jmp
cltd
enter
pop
ljmp
cmc
cmpsl
xchg
ds
or
scas
in
mov
jo
out
arpl
sub
dec
dec
sahf
cli
mov
dec
jns
sub
repnz
jle
inc
int
pop
mov
bswap
orl
xchg
or
ss
cld
movsb
adc
mov
dec
inc
sbb
mov
mov
mov
pop
cmp
jl
out
xchg
jns
pop
ljmp
int
mov
push
fimull
orb
dec
xchg
lret
imul
je
pop
imul
jo
xlat
push
lret
pop
call
repnz
dec
mov
in
mull
je
cmp
push
dec
push
mov
sbb
sub
jb
gs
xchg
adc
mov
leave
inc
out
inc
dec
pop
mov
jbe
imul
fmuls
pop
pop
xchg
jns
in
lods
jae
xor
sub
inc
push
fnstsw
mov
orb
movsl
mov
std
aaa
ret
or
push
sti
add
jb
les
pop
mov
divl
sarb
cmp
lock
sbb
and
mov
push
mov
enter
and
dec
jmp
mov
adc
popa
leave
aaa
test
pop
jo
jle
cmc
push
incl
jnp
push
push
adc
mov
and
aaa
lods
popf
and
mov
in
and
test
cli
int
mov
add
and
sbb
jecxz,pt
leave
repz
xchg
stos
nop
fbstp
lods
aaa
pop
lds
sub
cmpb
jae
push
testb
mov
inc
shll
rol
cltd
mov
pop
shl
ss
pop
cmp
lods
out
cld
hlt
lret
mov
fsubr
ja
movsl
cli
pop
test
xchg
dec
repz
sub
or
cmp
test
scas
adc
ljmp
lock
cmp
mov
pop
mov
imul
xchg
out
dec
std
xor
dec
sahf
push
sub
add
scas
arpl
xor
inc
dec
jno
icebp
std
es
out
lds
test
daa
jno
sbb
pop
lret
add
pop
jmp
inc
aas
push
or
xchg
fs
dec
pop
data16
cmpsl
mov
ret
in
cmc
xor
push
dec
imul
dec
into
scas
mov
rcr
xor
mov
sbb
cmpl
pop
xchg
sti
enter
fsubrs
pop
push
movsl
and
cmp
mov
xchg
xor
add
cltd
mov
in
imul
mov
ud1
js
int
jb
sarl
sub
pop
shll
jbe
inc
ds
mov
lods
int3
fdivs
cli
shr
in
mov
inc
mov
nop
and
sub
jb
and
fisubrs
add
dec
xchg
subl
mov
fbstp
inc
leave
movsl
and
mov
pop
inc
xchg
inc
cmp
mov
ret
or
mov
dec
adc
sarb
sbb
mov
xor
xchg
xchg
jg
outsl
fcom
pop
sbb
loope
aaa
scas
adc
sub
and
jmp
xor
sub
hlt
jle
mov
rclb
imul
mov
lock
mov
aad
test
pop
lock
add
inc
jb
adc
cmpb
mov
mov
loopne
stos
insb
cmpsl
ja
inc
jo
stos
sbb
mov
hlt
lea
mov
lods
ret
dec
loop
or
mov
adc
ss
jg
pop
lods
cmp
cld
dec
pop
faddl
sbb
xchg
dec
adc
cmp
les
or
sbb
lret
adc
addb
cmp
gs
push
test
push
dec
sub
dec
stc
cmp
xchg
push
mov
mov
notl
cli
mov
into
xchg
aaa
aam
add
repz
pop
fwait
inc
icebp
rorb
add
test
pop
add
mov
sbb
shlb
loopne
test
mov
sub
pushf
push
mov
lahf
jmp
pop
xor
mov
loope
or
push
sub
xor
push
rcrb
repz
movsl
mov
xor
pop
lret
clc
pop
mov
stos
fldenv
mov
jmp
pop
jl
repz
or
setg
es
and
mov
and
ljmp
sahf
sbb
sbb
lret
test
fnsave
je
out
dec
xchg
cs
sub
mov
in
insl
and
int3
test
jmp
cltd
dec
mov
mov
js
mov
lock
inc
xchg
and
pop
shlb
loop
lods
mov
decl
aad
sbb
clc
dec
mov
dec
jo
mov
cmpsb
cmp
test
fucomi
cmp
and
sub
bound
fmul
in
fdivp
mov
jnp
push
sar
cmp
dec
fidivrs
or
mov
jns
mov
and
loope
push
cmp
outsl
mov
cmp
or
mov
inc
aad
sub
pop
lret
mov
shll
fdivrl
loop
xchg
and
jno
and
jbe
jb
test
dec
fcoml
lea
pop
xchg
loope
and
lahf
cmc
arpl
push
ficoml
add
scas
lret
mov
in
rorb
lcall
jge
aas
push
lret
sti
sahf
sbbl
lret
data16
push
or
rorb
scas
push
or
lock
adc
pop
mov
adc
jmp
cltd
jl
adc
fmull
inc
mov
jp,pn
xor
inc
ss
mov
or
fs
lret
test
stc
test
push
dec
xor
movups
or
fisubs
mov
popf
jbe
test
inc
lea
insl
adc
mov
inc
shrb
ss
sti
mov
repnz
popa
mov
hlt
les
pop
mov
sbb
jae
cmpsl
sbb
lret
aas
in
or
popf
jl
cmpsl
sub
pop
jae
out
stos
pushf
dec
xchg
lock
inc
pusha
mov
dec
mov
xor
mull
sbb
ss
push
xor
dec
test
test
mov
adcb
cmp
push
cli
aaa
jbe
imul
aas
out
stc
icebp
fstp
dec
in
lahf
repz
fldcw
insb
lock
enter
out
jb
fidivl
sbb
mov
pop
js
push
daa
rolb
sti
cmp
push
cmc
test
push
ret
add
jbe
inc
mov
add
xchg
push
or
daa
or
add
cmc
mov
nop
hlt
pusha
int3
xchg
lret
frstor
xor
cmpsl
lahf
ret
cltd
adc
inc
mov
and
pop
das
in
mov
jbe
bound
int
fistpl
sbbl
scas
lret
inc
mov
push
and
cmp
jg
mov
cmp
cwtl
jl
mov
pop
inc
ds
addl
shr
test
std
das
cmp
pop
lods
sub
xor
jmpw
sub
mov
in
stos
sub
mov
movsb
pop
adc
outsl
inc
xchg
pop
jl
and
mov
xchg
nop
fs
add
and
sbb
test
adc
fnstcw
jnp
sti
sbb
jbe
sub
and
push
mov
or
leave
push
fisubrs
and
cmp
cmpsb
cli
mulb
aaa
push
xchg
cmp
push
jle
mov
imul
add
dec
cmp
mov
rcl
mov
xchg
mov
dec
cmc
aas
out
mov
or
ss
inc
mov
lahf
arpl
pop
cli
inc
sahf
movsl
xchg
cmp
jbe
mov
pop
jnp
iret
mov
cs
jbe
imul
mov
loop
push
bound
movsl
dec
jne
icebp
add
shl
fucomp
aam
cmp
in
jns
xchg
mov
repnz
mov
lea
and
inc
sahf
pushf
adc
jge
mov
and
mov
or
push
test
push
cmp
out
mov
xor
dec
std
lcall
in
mov
adc
push
and
xor
pop
mov
inc
hlt
xor
pop
sub
imul
addl
xchg
xchg
bound
xor
mov
enter
bound
jo
and
lock
or
inc
or
movsl
dec
push
push
ja
adc
fisttps
pop
out
cmp
push
inc
mov
sbb
or
loop
fcomps
enter
mov
fsts
ljmp
dec
insb
jne
jecxz
add
adc
or
outsl
lock
icebp
push
cltd
push
loope
cmp
xchg
fcmove
jl
enter
or
loop
cli
mov
cmp
xlat
call
movsb
sarb
call
cmp
xor
jp
cmpsl
out
adc
fs
leave
xlat
mov
sub
sbb
pop
in
mov
xchg
fwait
lcall
icebp
jb
popf
pop
call
pop
pushf
lds
xchg
xor
mov
xchg
into
jne
repnz
stos
mov
mov
mov
mov
jbe
xchg
ret
sahf
push
jo
push
es
sbb
fisttpl
dec
or
insb
rcr
push
mov
inc
jae
insb
sbb
je
or
jmp
ficompl
push
push
sub
jns
xchg
fwait
movsl
dec
jge
xchg
imul
lahf
leave
aam
daa
xchg
push
fdivrp
sahf
sbb
pop
jae
jne
and
rolb
popf
dec
testb
jp
data16
test
sub
in
aad
or
fwait
imul
sahf
shll
sub
outsb
jae
cmp
mov
mov
mov
insl
xchg
int3
out
aam
rol
mov
sar
xchg
shrl
ss
cmp
icebp
mov
call
ret
loope
push
fisttpl
jb
scas
cltd
mov
jae
mov
stos
mov
jbe
stos
push
cmpsb
scas
xchg
test
movsb
mov
xor
jmp
cmp
stc
mov
into
test
push
mov
stos
out
in
cmc
lret
inc
and
xor
xor
fdivrs
inc
in
bound
xchg
push
movsl
pop
jp
xor
sub
add
jbe
adc
rclb
push
push
mov
adc
or
sahf
sub
nop
mov
js
aas
movsl
pop
mov
inc
enter
lds
in
hlt
inc
xchg
push
adc
mov
jle
mov
or
xor
icebp
or
fsubrl
int
ror
das
cwtl
daa
fisubrs
out
int3
pop
and
lea
add
gs
fdivs
and
sbb
dec
push
cmp
and
xor
fmuls
in
rcrb
push
ss
in
pop
jno
dec
jg
dec
adc
mov
sbb
testl
dec
pop
les
out
ds
xchg
dec
orb
sarb
dec
lahf
sti
jne
push
and
sbb
dec
mov
fs
ds
filds
mov
jle
fldl
mov
and
pcmpgtd
lods
in
mov
cltd
sbb
adc
and
cmp
arpl
push
int3
in
xchg
in
adc
out
dec
mov
es
cld
bound
out
ret
loop
repz
cmp
push
dec
mov
pop
xlat
mov
dec
mov
xor
mov
mov
cwtl
cmpsb
add
cs
jl
xlat
dec
and
cwtl
int3
or
les
push
psubsb
push
les
insl
cmp
and
fmul
hlt
mov
rcl
int
push
imul
test
loopne
pushf
jg
iret
push
adc
fwait
cltd
test
and
sahf
cmp
aas
mov
fs
or
sub
pushf
or
in
jno
je
add
lret
icebp
fdiv
psllw
cmp
mov
jb
les
stos
xchg
rorl
rcl
sti
jae
jle
pop
pop
pop
xorl
jle
imul
dec
aam
and
sub
or
push
in
pop
scas
jmp
or
sub
sbb
dec
iret
mov
jl
push
pop
pushf
adc
mov
imul
nop
cltd
add
lret
fisubl
cli
pushl
jae
dec
push
dec
cld
mov
adc
push
sub
and
adc
pusha
mov
xchg
mov
in
jp
mov
jg
push
insb
rcrl
sub
adc
sub
push
and
je
fstl
mov
fcoml
or
pop
sbb
mov
sub
jg
push
adc
cli
push
pop
hlt
enter
cmp
xor
mov
mov
jno
test
lods
lds
out
cmpsl
and
inc
sub
jnp
lcall
dec
xchg
sub
pop
mov
sbb
int
cmp
cld
sbb
sbb
lock
mov
scas
outsb
fs
fs
inc
mov
sub
or
pop
insl
inc
ror
mov
or
aad
in
clc
sub
insl
cmp
in
mov
mov
adc
adc
mov
xor
js
xchg
jnp
icebp
in
arpl
mov
or
xor
dec
mov
rcr
sbb
mov
cli
ret
out
xchg
mov
pop
nop
sbb
cmp
dec
arpl
fadds
xor
or
mov
orb
ret
dec
test
call
es
fdivl
or
push
loope
jmp
pop
mov
jo
mov
mov
cmp
iret
mov
push
pop
out
cld
xor
es
popf
sub
jae
in
mov
pop
adc
das
daa
sub
sub
rcrl
xor
push
mov
mov
cmp
or
push
rcll
push
push
push
inc
dec
pop
gs
push
or
fs
pop
cli
sti
pop
adc
mov
fistps
jp
negb
sub
fwait
jne
mov
mov
mov
lods
dec
mov
add
jns
inc
adc
leave
pop
mov
adc
jae
inc
jmp
pop
lret
in
dec
rcrb
test
mov
sahf
je
xor
cltd
bound
dec
lea
repnz
dec
lods
ss
inc
mov
imul
pop
sub
sahf
pop
les
jmp
push
sbb
jns
adc
fucomip
mov
icebp
sarb
lretw
xchg
push
pop
push
mov
or
dec
or
jl
cmp
sub
dec
adc
test
aad
push
and
push
je
aad
std
stc
iret
adc
jo
lcall
pusha
insl
ss
xchg
test
shll
jecxz
inc
cmp
jg
and
jns
cmc
xor
rolb
data16
clc
lret
cs
pop
fbstp
lea
pop
and
shll
sar
andl
jns
inc
mov
xchg
stos
xchg
je
icebp
dec
pop
sub
inc
mov
js
adc
mov
and
fs
lea
ficomps
jl
inc
adc
popa
pop
in
les
dec
inc
pop
jnp
lcall
dec
mov
jns
jb
shrb
push
movsl
pop
mov
gs
lds
jmp
or
or
loopne
gs
std
fwait
push
cmp
sbb
jns
adc
in
mov
dec
hlt
or
das
xor
sbb
sbb
add
sub
mov
sbb
daa
in
mov
sub
jno
dec
mov
mov
inc
mov
push
mov
out
test
inc
data16
xor
xor
push
mov
dec
movsb
fisubs
xchg
sub
je
ja
cmp
inc
ss
cmp
push
push
jmp
movsb
lock
pop
mov
push
andl
mov
push
mov
mov
mov
inc
stc
les
xchg
and
add
cltd
lret
mov
mov
stc
fnstenv
orb
fwait
xlat
insl
mov
xor
push
in
xchg
popf
rcr
or
or
inc
mov
inc
aam
call
xchg
xchg
sub
in
sub
pusha
sub
incb
jns
pop
and
faddl
mov
adc
lea
repnz
neg
adc
or
push
into
sub
arpl
sbb
int
daa
das
push
fsub
inc
jmp
test
sbb
fiaddl
or
jmp
lret
sti
iret
arpl
ret
inc
push
test
mov
mov
and
cltd
cli
arpl
adc
and
jg
mov
push
adc
mov
sarl
cmpsb
mov
arpl
cmpsl
out
cmpsl
leave
jmp
test
daa
lock
pop
minps
pusha
dec
push
lock
pop
sub
add
inc
mov
js
xchg
push
mov
cmpsl
outsl
mov
inc
ss
ja
push
mov
out
mov
inc
push
add
in
cmp
insl
or
push
xchg
mov
aam
sbb
jge
mov
enter
ret
jo
sub
pop
adc
jmp
sbb
pop
imul
xchg
mov
mov
push
addr16
dec
test
insl
fwait
adc
xor
xchg
dec
mov
test
test
inc
fnstenv
dec
dec
cltd
int3
testb
in
jge
int
mov
sub
test
fwait
bound
testl
test
repz
movsb
arpl
ljmp
insl
negl
je
sbb
xor
mov
pop
movsb
lock
push
cmpsl
inc
xchg
push
sub
lret
mov
push
sub
push
daa
pop
jge
ljmp
jne
xchg
sti
or
sbb
test
dec
dec
bnd
dec
pusha
mov
fsubs
cmp
ret
mov
ret
xchg
aam
int
pop
outsl
inc
cmpsb
iret
cltd
mov
mov
push
outsl
movsb
pop
mov
sarl
repnz
ja
je
imul
cltd
in
push
adc
dec
mov
out
push
jle
cwtl
lcall
sbbl
or
inc
xchg
in
insl
push
jmp
push
loope
sub
sti
xor
or
jnp
mov
js
andb
mov
sbb
popa
cwtl
stos
es
add
cld
mov
loop
out
in
cmpsl
inc
test
or
mov
les
enter
mov
test
je
inc
ljmp
pushf
fdivrl
ljmp
lods
adc
or
jns
and
in
mov
subb
add
cmp
decb
sbb
mov
inc
aad
cmpsb
dec
mov
outsl
mov
rclb
imul
jge
in
pop
add
push
stc
push
mov
xlat
inc
dec
inc
xchg
ja
out
cmp
push
sbb
inc
push
mov
leave
test
in
mov
xchg
mov
cs
push
fldcw
scas
out
rdtsc
adc
in
and
mov
mov
mov
int
daa
pop
xor
push
push
out
add
add
pop
aam
imul
cmc
filds
inc
mov
add
and
shll
pop
jmp
repz
jbe
ud2
mov
mov
repz
fldt
or
inc
sbb
aaa
fbld
pop
jns
xor
repz
rclb
dec
fsubl
pushw
adc
mov
or
add
adc
pop
mov
test
cmc
aad
inc
xchg
sbb
lods
aas
hlt
xchg
push
mov
mov
rcll
xchg
out
lds
hlt
jbe
rorl
push
push
push
clc
mov
or
or
sub
xchg
ret
ja
cmpsb
lods
aas
cmp
push
test
jno
dec
mov
push
sbb
and
ficoml
cli
int3
daa
or
sahf
cmp
imul
inc
dec
fwait
lods
sarl
pop
lret
push
adc
mov
inc
stc
jbe
mov
arpl
imull
popa
cmp
push
dec
jo
or
mov
fcomps
mov
inc
jae
fstl
out
add
or
repnz
test
xchg
push
inc
stc
pop
ljmp
xchg
cwtl
jb
pop
push
jmp
inc
pop
ljmp
notl
jmp
mov
push
dec
push
mov
stc
movsl
stos
loope
jecxz
sub
repz
sbb
inc
mov
js
aaa
mov
and
inc
mov
xor
scas
jno
cltd
dec
mov
mov
xlat
inc
inc
fwait
cltd
imul
or
leave
xor
xor
shll
or
and
les
daa
pushl
and
imul
mov
mov
mov
idiv
into
loopne
nop
inc
push
xor
incl
loop
fsubrl
fcoml
xchg
push
or
out
jae
loope
xchg
pop
mov
int
test
loop
inc
pop
inc
out
inc
and
jne
mov
loopne
fldl
das
push
jnp
inc
cmpsl
jnp
add
adc
sbb
lds
cmpl
jecxz
cmp
sub
test
mov
cltd
inc
push
orb
jns
xor
clc
lret
std
jge
dec
xor
push
ss
lds
clc
sbb
inc
inc
mov
call
and
mov
lods
mov
mov
xchg
dec
lock
jo
jg
mov
cmp
imulb
dec
mov
push
in
enter
sarb
sub
dec
adc
mov
andb
sarl
inc
cli
in
lahf
imul
movsb
test
mov
add
out
and
sbb
jno
ret
and
movsb
gs
mov
stos
stos
pop
xchg
inc
jmp
push
push
pop
fwait
out
ljmp
dec
outsl
lret
xor
adc
cmp
pop
sub
ds
xchg
dec
arpl
adc
mov
xchg
pop
and
inc
loope
ficoml
or
iret
leave
cmp
adc
adc
inc
sbb
popa
icebp
pusha
cwtl
mov
fiaddl
and
xchg
lods
inc
ds
lcall
mov
jae
loop
call
rcll
mov
xchg
repz
xchg
and
imul
sbb
mov
popf
or
mov
movsl
dec
lea
xchg
movl
push
sar
je
mov
mov
xor
andl
test
sbb
std
out
in
mov
ret
in
icebp
inc
xchg
jge
xchg
popa
das
mov
xchg
pop
add
jae
lods
or
fisttps
mov
cmpsb
nop
fisubrl
mov
cmova
movsb
add
lock
push
push
lret
mov
out
xor
es
xchg
movsl
in
fwait
pop
or
sub
inc
fwait
shlb
mov
jmp
add
inc
popa
jae
dec
adc
adc
xor
jg
lret
adc
mov
test
test
cmc
rcl
dec
or
nop
out
ret
call
mov
mov
test
add
bound
loope
mov
enter
icebp
std
int3
jbe
jae
inc
test
dec
jp
cltd
lret
sub
arpl
mov
push
out
loopne
adc
cmp
push
sub
or
adcl
sub
sub
inc
and
push
push
fwait
xchg
imul
pusha
lret
lret
pop
in
ud2
pop
in
mov
hlt
sub
lahf
push
inc
or
dec
or
mov
xchg
int
hlt
add
imul
xchg
pop
fsubr
sub
ret
test
and
es
mov
inc
xchg
xor
int3
xchg
cld
sub
jmp
xchg
mov
ss
shrl
pop
shll
cmc
sub
and
loope
fsubl
cli
mov
fstps
mov
mov
ret
jb
dec
dec
sub
jge
lret
das
hlt
pop
out
aam
lret
lret
pop
mov
and
mov
dec
icebp
mov
lea
int
loope
es
inc
xchg
mov
xor
mov
jns
lods
pop
loope
and
cld
or
mov
cmp
nop
cmp
jle
push
lret
out
fimuls
xor
outsb
test
fwait
lret
repnz
fs
pop
cwtl
je
out
inc
jnp
sub
push
add
dec
ficoml
ret
jns
xlat
jb
lock
cltd
outsb
xchg
mov
iret
ret
xchg
aam
jl
pop
les
mov
pushf
repz
ret
hlt
mov
loop
jg
inc
pop
enter
in
mov
inc
dec
std
scas
push
hlt
test
add
mov
dec
shll
test
das
divb
sub
out
jge
mov
cmc
stos
mov
in
mov
mov
dec
lret
push
out
dec
mov
adc
int
ljmp
add
add
cs
xor
add
std
int
scas
cmovns
lds
in
jns
std
test
dec
jp
fs
add
cli
out
inc
add
data16
and
rcll
mov
mov
ret
mov
flds
push
bound
stc
cltd
xchg
jle
pop
push
inc
ss
sub
mov
lcall
pop
hlt
movsb
sub
push
adc
mov
jg
cmpsl
inc
sub
test
cmp
jle
sub
or
mov
lods
daa
xor
cmpb
scas
lods
xor
and
push
adc
dec
movsb
test
orb
or
mov
jp
setge
jne
adc
test
add
push
mov
xchg
xchg
rorb
loopne
mov
out
outsl
add
adc
sahf
clc
add
sub
mov
aad
xchg
test
and
lods
stos
or
mov
jle
xchg
lods
mov
sbb
test
pop
xor
and
push
mov
or
in
xlat
sub
jp
lret
enter
xchg
dec
adc
arpl
minps
mov
sub
sahf
ss
xchg
ss
inc
mov
negl
aaa
call
push
cmc
xchg
xchg
mov
xor
xor
mov
adc
sub
je
enter
mov
jns
roll
stos
push
xchg
xchg
jae
push
insb
mov
mov
inc
add
mov
mov
sub
imulb
ja
cmpsl
stos
in
fldl
dec
xlat
ds
and
mov
inc
push
loope
xor
fdivrl
jo
cwtl
aaa
inc
stc
nop
and
xor
fmul
in
mulb
iret
or
xchg
popa
mov
outsb
pop
out
pop
in
pop
dec
push
mov
fwait
pop
bound
mov
loop
inc
addb
das
or
sub
fucom
mov
dec
pop
into
inc
sub
repnz
lret
mov
mov
pop
ss
pop
dec
mov
fsts
insb
sbb
out
cmp
inc
les
xchg
inc
xlat
es
mov
inc
mov
sbb
dec
inc
pusha
gs
inc
jp
jge,pt
ret
in
jle
jg
dec
sub
mov
inc
push
jp
cmpb
jmp
adc
mov
jecxz
shlb
sub
dec
lock
adc
adc
push
mov
nop
lahf
pop
arpl
fildl
cmpb
push
push
jmp
cld
and
leave
xor
jns
inc
mov
cmp
cmp
xchg
jo
mov
icebp
jb
scas
adc
xor
sub
push
test
ret
inc
shll
mov
arpl
mov
bound
dec
enter
nop
sub
xchg
test
enter
fisttps
sbb
test
xlat
cmpsb
fldt
bnd
push
or
cld
mov
cmc
mov
push
out
fsubs
jl
adc
mov
jg
in
jnp
mov
sar
stos
dec
or
or
scas
xchg
out
xchg
inc
negb
fsubrs
and
pop
adc
and
repnz
sbb
push
xor
lock
inc
hlt
jg
imul
sub
outsl
js
enter
mov
mov
sbbb
pushf
or
das
jb
jl
scas
popf
fiadds
mov
mov
clc
xchg
mov
lret
and
ret
mov
in
inc
fmuls
sub
sbb
test
or
or
xchg
loopne
cmp
xor
aad
test
push
stc
cltd
stc
mov
out
mov
add
xchg
adc
fiadds
loopne
or
dec
in
fsubrl
dec
xor
int3
fdivrl
dec
inc
movsb
pusha
dec
leave
dec
mov
out
push
cmpsl
pop
jmp
jle
mov
cmp
cmp
test
pop
inc
cmp
out
gs
dec
stc
int3
adc
call
xchg
rorb
sbb
add
jp
sbb
sub
das
mov
adc
xor
mov
jo,pt
mov
es
ljmp
aas
push
faddl
xlat
in
cmpsl
and
xchg
push
jnp
push
push
push
icebp
pushf
xchg
push
je
les
aas
cmp
push
inc
outsl
mov
ja
jbe
cmpsb
aaa
push
jmp
xchg
ret
imul
xchg
dec
and
mov
in
test
adc
sub
out
scas
sbb
add
sub
cmp
lods
xchg
cmp
mov
sub
mov
addb
xchg
sub
adc
lret
insl
cltd
iret
adc
xchg
sub
inc
xchg
xchg
xchg
scas
dec
xchg
je
mov
dec
icebp
jmp
and
dec
jb
add
dec
in
pop
cltd
dec
clc
gs
pop
mov
int3
mov
push
mov
iret
adc
xor
sbb
add
lea
fistps
xor
pop
or
inc
mov
fwait
lret
in
ds
sbb
sbb
jo
jae
inc
hlt
repnz
and
mov
fwait
and
inc
add
pop
outsb
ljmp
imul
aad
mov
xchg
add
das
icebp
mov
adc
cmp
dec
inc
cld
outsl
addr16
aad
xor
jl
stos
fistpll
movsb
add
stos
stc
jne
mov
lods
ret
loop
inc
dec
mov
adc
arpl
xchg
lock
xor
jp
or
cltd
inc
xchg
call
repnz
add
push
cmp
sub
adcb
inc
mov
cs
jmp
lods
outsl
test
cmp
jo
mov
pop
push
xchg
mov
mov
or
stc
mov
sbb
xchg
femms
mov
in
cmp
jnp
clc
pmuludq
icebp
adc
xchg
mov
push
add
sbb
inc
xchg
lret
xchg
fidivs
dec
pop
ret
adc
fldcw
lret
enter
adc
xor
push
sub
push
mov
adc
lret
lock
repz
push
adc
push
xchg
ficoms
push
pop
adcb
cmp
test
xor
outsl
xlat
xchg
das
insb
in
fidivrl
test
cmp
xchg
dec
mov
adcl
push
aam
push
es
mov
movsl
xchg
out
outsl
jmp
fs
or
sbb
xchg
xchg
dec
cmpl
mov
out
push
jg
into
fs
inc
jl
or
inc
mov
fcmovbe
dec
sub
jg
sti
mov
fdivl
mov
pushf
sub
mov
and
sub
sub
push
popf
scas
enter
xor
cltd
sbb
icebp
outsl
cmpb
loopne
vmread
fcmovne
sub
iret
or
mov
les
jns
leave
in
lret
popa
stos
cmp
imul
push
jo
shrb
inc
hlt
cwtl
cld
cltd
xlat
jge
xchg
movsl
rcrb
insl
jmp
lds
dec
rcr
mov
jmp
sbb
pop
add
fmull
and
push
mov
push
push
push
shrl
in
xor
mov
pop
mull
dec
das
cmp
add
mov
push
insl
insl
addr16
ret
lcall
test
sub
in
pop
and
and
repnz
and
fs
push
mov
mov
jno
sahf
js
dec
xlat
out
test
shlb
sarl
rcr
jo
sar
xchg
adc
fs
pop
pop
mov
fisubrl
fcoms
sbbl
dec
aad
xchg
outsl
lret
stos
push
mov
cmpb
pop
int
icebp
insb
outsb
add
dec
xchg
mov
push
les
movb
gs
mov
cmp
sbb
cwtl
sbb
adc
inc
leave
push
sti
inc
and
in
icebp
ja
adc
cmp
and
jns
push
loopne
dec
xor
or
ss
jp
jb
sbb
inc
pop
test
ljmp
icebp
sti
fdivrs
leave
loopne
loopne
jnp
nop
lods
shlb
xor
jb
mov
push
movsb
jbe,pt
movsb
xor
cmpsb
mov
inc
adc
bound
and
mov
rcrb
je
rcrb
mov
jp
leave
cmp
inc
mov
subl
test
addr16
jle
xor
loop
xlat
cmp
mov
jg
xor
scas
jbe
mov
jb
aam
dec
nop
bound
mov
negl
dec
aam
iret
inc
fistpl
andl
mov
imul
cmpsl
sarl
push
mov
insl
pop
mov
fadd
fbstp
scas
mov
sbb
sbb
push
shl
pushf
pusha
iret
add
arpl
das
jg
sbb
loope
push
out
pop
mov
xchg
stos
push
out
xlat
int3
pop
xchg
lcall
in
push
mov
pop
pop
cmp
dec
xchg
bound
cmp
lahf
push
sbb
add
rcrb
lahf
dec
popf
xchg
xchg
adc
cmpsb
and
subl
push
and
push
pop
imul
ljmp
xchg
stos
fsts
jne
je
sbb
imul
add
inc
int3
xchg
fsubs
insl
sub
jle
mov
push
inc
je
out
f2xm1
inc
jp
shr
sbb
imul
inc
cmpb
and
push
cmp
fldenv
jno
clc
push
add
push
cmp
xor
or
lods
mov
or
add
jne
sub
jo
mov
cwtl
movsl
sbb
jecxz
pop
mov
or
ds
xorb
std
test
pop
out
pushf
das
mov
jo
mov
pop
sub
dec
popf
pop
pushf
test
sbb
pop
ja
mov
loop
xlat
shrb
mov
xor
rcr
push
lahf
f2xm1
mov
mov
jae
mov
scas
push
and
mov
jo
incb
sbb
jecxz
mov
jbe
loope
scas
movsl
lods
jl
int
pop
add
shrb
in
add
jmp
lock
test
add
cmp
pop
das
add
lret
ljmp
out
leave
cltd
cltd
sarb
inc
jmp
inc
xchg
gs
fildll
jno
mov
lods
mov
lcall
mov
jge
movsb
stos
push
mov
bound
stc
js
lock
aam
sahf
xchg
cmp
sbb
xchg
scas
mov
push
adc
pop
loop
pop
pop
ret
mov
jo
sub
cmpsb
push
mull
xlat
cmp
sbb
or
sahf
stc
or
adc
scas
in
lods
cmpsl
push
adc
inc
outsl
cmpsb
mov
cmp
lock
in
or
jge
sbb
pop
xor
cltd
inc
sbb
testl
pop
imul
xchg
in
push
inc
pusha
pusha
xchg
push
push
cmp
cmp
ret
cmp
aas
std
pop
and
fildl
xor
sub
in
jae
pop
mov
fidivrl
xchg
pop
test
lods
xchg
loopne
daa
jmp
sbb
incl
insb
cmpsl
or
sbb
mov
add
cmp
and
or
testl
rcrl
xorl
inc
and
lds
jno
je
imul
lock
popa
cs
lret
pop
sub
mov
push
lret
jns
push
mov
je
ret
sahf
mov
aas
xchg
pop
rolb
mov
push
sbb
lds
out
nop
es
mov
jge
lret
into
pop
cmpsb
loopne
aad
cmp
popa
xor
popf
push
add
ljmp
decb
mov
mov
shll
imul
adc
mov
or
cwtl
push
mov
shlb
fldl
xchg
stos
lods
ja
dec
into
xchg
mov
sbb
ljmp
sbb
add
add
mov
call
test
inc
pop
mov
pavgw
into
insl
pop
cli
test
hlt
daa
out
jno
lods
xor
jl
mov
or
and
push
inc
push
jno
cmp
cmp
loope
adc
add
xchg
push
or
daa
aam
mov
in
bound
dec
mov
nop
xor
mov
std
mulb
dec
gs
xor
cmp
sarl
call
data16
and
int
push
adc
lds
inc
hlt
not
push
xor
push
add
loop
pop
aaa
jne
jb
in
cs
jns
mov
cltd
ret
jg
jl
xor
insl
cmpl
xchg
ja
sarl
mov
das
mov
hlt
push
dec
dec
sbb
mov
push
cmp
es
mov
xchg
not
sub
mov
sub
movsb
adc
mov
inc
test
test
or
cmpsb
pop
mov
pushf
cld
in
das
mov
scas
jnp
js
and
xchg
es
lcall
in
in
add
adc
shll
loopne
mov
pop
in
mov
adc
dec
xorb
push
enter
popa
pop
mov
pop
stos
mov
ds
and
repnz
ja
mov
loopne
mov
out
bound
int
test
scas
mov
jg
add
add
insb
and
out
and
pop
ret
out
ja
popf
mov
push
popf
xchg
addr16
xchg
inc
cli
dec
mov
call
xchg
sahf
xchg
out
sbb
add
cmp
xor
fnsave
mov
bound
and
adc
cmp
adc
push
rcrl
addr16
add
ja
sbb
scas
pop
testl
dec
lds
xor
in
inc
jb
sub
push
rcll
or
dec
lea
clc
xchg
pop
insb
mov
jg
mov
adc
inc
ret
cmp
mov
sar
and
out
mov
sbb
adc
xor
imul
lcall
pop
subb
orl
shll
stc
int3
ljmp
dec
leave
popf
movsl
push
ret
cli
add
lret
mov
or
test
ret
jbe
and
add
mov
cmp
leave
imulb
push
adc
jne
mov
in
stos
or
daa
mov
mov
mov
sti
fs
xchg
ret
cmp
cmpsb
pop
inc
arpl
mov
rcl
dec
fstps
sub
or
mov
mov
test
xchg
testb
outsb
xchg
sti
inc
cmp
push
je
push
xchg
shrl
imul
xchg
push
hlt
aam
idivb
pop
mov
leave
cwtl
and
push
jne
cmp
ss
push
in
ljmp
xchg
xchg
movsl
aaa
int3
call
jmp
push
xchg
nop
dec
dec
sahf
pop
mov
push
mov
jg
mov
xchg
mov
adc
pop
xor
sub
xchg
les
xchg
lcall
push
push
pop
cwtl
cmp
pop
adc
push
or
out
iret
jns
cli
mov
mov
repnz
push
aas
lcall
out
ljmp
ret
cmp
jmp
loop
rolb
and
out
push
sbb
inc
xchg
imul
ret
mov
int
lock
sub
lods
insb
push
mov
mov
aaa
sub
aas
xor
cmp
sti
out
fnsave
lods
gs
dec
lret
sbb
adc
movsb
test
jecxz
shlb
bound
imul
jns
js
leave
leave
jp
shrb
rclb
mov
jmp
loope
out
cmp
ror
mov
inc
lock
in
jae
mov
stos
loope
dec
out
and
sub
adc
imul
shlb
and
and
fstpt
mov
cld
or
arpl
pop
dec
mov
and
mov
push
and
cmc
dec
popf
mov
and
sti
xor
repnz
sbb
std
adc
and
jmp
movsl
lea
popf
sub
sub
pop
jmp
adc
fidivrs
pop
nop
dec
fisttps
js
ljmp
dec
testb
test
push
dec
or
cmpsb
sahf
popf
cltd
das
cwtl
mov
ss
or
roll
jae
aaa
sub
mov
push
std
xchg
mov
scas
test
push
mov
add
testl
push
add
dec
add
jl
lock
and
inc
lods
outsl
cwtl
sbb
or
cwtl
mov
rcll
sub
fwait
xchg
fsts
in
push
sbb
clc
dec
and
dec
inc
imul
dec
imul
jo
inc
shrl
sbb
es
cmpsl
ljmp
push
push
into
sub
sub
add
inc
sub
std
pop
adc
jb
jmp
xor
lcall
dec
add
int3
xchg
arpl
ljmp
fcompl
sbb
jecxz
js
fcmovu
sub
sbb
loopne
out
add
ljmp
ljmp
push
data16
insb
in
push
cltd
lds
or
jge
pop
pop
xchg
push
ljmp
jb
sbb
arpl
fyl2xp1
lods
pop
dec
pop
ficoms
push
fsts
xor
fstl
test
mov
xchg
inc
jge
aam
iret
dec
ja
jmp
into
push
rcrl
aad
push
jecxz
int
fnsave
and
imul
aam
mov
mov
mov
xor
dec
push
push
pop
jns
loop
stc
jo
mov
pop
addr16
int
or
aam
vpacksswb
test
cmpsb
mov
popf
cltd
in
push
push
out
mov
lret
cmp
mov
aad
jae
lea
popa
and
xchg
cmpsl
push
iret
inc
aad
add
and
mov
test
out
push
insb
lock
adc
add
sub
push
adc
aad
lea
lret
add
or
cmpsb
xor
and
push
inc
mov
mov
ljmp
stos
pop
and
movsb
mov
and
inc
jbe
cmp
mov
das
je
add
inc
or
sbbb
adc
loop
pop
mov
cltd
xor
sbb
daa
movsl
xor
jns
sbb
push
sbb
aam
cmp
lods
lcall
adc
dec
mov
je
pop
fimull
mov
cmc
and
fisubrl
je
out
fwait
cwtl
pop
mov
and
xor
pop
xlat
mov
fcomps
sub
sub
sbb
stos
lock
rolb
stos
mov
repnz
cmc
pop
dec
imul
aad
clc
ljmp
addr16
pop
rol
push
dec
xlat
push
jbe
xchg
pushf
mov
aam
ljmp
mov
jmp
push
int3
bound
out
sub
js
and
popf
mov
sarl
aaa
clc
fildl
leave
adc
dec
cmp
mov
cmpsb
cmp
xchg
in
in
cmpsl
xchg
leave
mov
clc
fwait
jecxz
lods
adc
dec
int3
cli
arpl
aas
lcall
xlat
je
pop
lahf
rcrl
and
adc
sub
cmpsb
lcall
mov
adc
dec
mov
sub
push
cmp
add
iret
or
loopne
aam
or
and
xchg
dec
adc
fisubrl
out
cmpb
test
xchg
loop
int
roll
jnp
xchg
push
std
push
stc
int3
adc
notl
push
inc
leave
jl
xor
sbb
add
clc
dec
in
loope
pushf
or
outsb
push
aaa
in
mov
popf
aaa
dec
fbstp
mov
nop
imul
out
daa
repnz
pop
imul
pop
fdivrl
push
daa
and
inc
lods
xchg
aas
xor
jnp
cmpsl
into
in
shrb
sub
sbbl
je
dec
xor
frstor
adc
scas
sarl
ret
std
in
and
or
subl
cmpsl
jmp
and
imul
fcmovnu
jge
inc
hlt
jge
ret
hlt
cs
sub
mov
int3
leave
fwait
add
mov
fbld
out
std
cmc
add
int3
mov
xor
cmp
and
addr16
lods
scas
fidivl
sbb
xchg
xchg
icebp
pop
push
cmpsl
pop
imul
sbb
ret
decb
notl
sbb
fadd
aas
enter
fmull
xchg
int
ljmp
rcrb
aaa
sub
xchg
xchg
push
and
mov
add
pop
lret
stos
sub
inc
jecxz
sub
xchg
repz
filds
xor
jns
cmp
xchg
lock
mov
divl
sbb
stos
xor
cmp
add
lcall
and
cmc
rcrb
cld
pop
cld
xor
xor
and
or
orl
ds
int3
add
or
sbb
in
dec
lret
push
jo
in
push
push
dec
add
xadd
loope
repnz
cmp
cmp
movsb
test
dec
dec
pushf
mov
cmp
adc
or
xchg
add
out
mov
sbb
shrb
out
test
jne
orl
sub
sbb
sbb
out
insl
dec
jl
adc
add
adc
bound
lcall
pushf
jecxz
lods
outsl
movsb
ds
int
fcmovnb
lahf
and
mov
xor
mov
loopne
imul
shll
and
or
mov
add
push
dec
imul
das
scas
cwtl
enter
push
push
cmp
jns
stos
lret
jmp
out
cld
xor
and
loope
rorb
adc
add
mov
shlb
std
mov
test
gs
aam
sti
repz
push
sbb
mov
jb
dec
jmp
pop
out
lock
mov
testb
and
mov
outsb
sub
mov
add
mov
mov
mov
test
jb
push
leave
sub
cmpsl
pop
mov
fs
int
in
pop
jle
xor
fwait
mov
in
call
std
out
pop
add
movsl
sbb
mov
ret
popa
mov
pop
movsb
xchg
jne
add
cmp
mov
test
mov
dec
inc
out
pop
and
out
jae
cmp
pop
add
and
mov
out
adc
lods
repnz
jmp
fs
inc
ja
inc
cmp
lock
dec
das
cmpsl
mov
repz
and
out
mov
jg
mov
push
or
xor
nop
mov
js
inc
lret
jecxz
mov
cli
inc
mov
and
xchg
and
stos
iret
mov
mov
pop
xlat
push
or
jbe
cwtl
std
add
mov
xor
mov
jne
sbb
jb
sbb
test
adc
mov
inc
bound
push
cs
pop
scas
clc
add
in
and
pop
orb
clc
adc
in
fs
fmul
mov
out
insl
std
cmc
enter
lods
xchg
xchg
and
aas
es
outsl
fmul
popf
cmp
pop
mov
sbb
les
xlat
js
ret
shl
stc
out
mov
popf
rep
sbb
sub
xor
xor
xchg
jae
and
add
cmp
out
xchg
fisttpll
test
nop
sub
cmpsb
mov
cmpsl
lods
outsl
xchg
mov
xchg
push
imul
xorl
adc
pop
aad
inc
xchg
aaa
and
clc
xchg
arpl
add
test
rcll
mov
nop
loop
mov
or
sbb
or
fcom
out
sbb
jge
cltd
cmp
xchg
movsl
push
loopne
jbe
adc
xor
and
out
jns
mov
and
mov
out
inc
xchg
pop
mov
sbb
jl
or
cmpsb
test
mov
imul
lahf
xchg
or
mov
pusha
test
and
sti
gs
xchg
jl
in
stc
cmpsl
mov
fs
stos
shrl
xor
out
scas
push
mov
add
adc
dec
daa
stc
or
push
pusha
adcl
aam
insb
loop
fdivl
mov
sbb
mov
jnp
movsb
aas
mov
push
dec
setnp
shrl
cmpsl
push
fnstenv
fbstp
adc
dec
cmp
in
adc
jl
lahf
int3
aad
outsb
jne
jb
scas
adc
mov
sub
push
jmp
pop
xor
nop
pmuludq
cwtl
and
push
xchg
sbb
hlt
aas
cmpsb
ja
lds
xchg
xchg
pop
stos
pusha
mov
repnz
sbb
imull
fldcw
out
stos
gs
inc
test
mov
or
std
sbb
mov
aam
sub
or
rcl
add
xchg
mov
pop
cmp
call
shrb
fwait
out
repz
cmc
add
cmpsb
xor
and
ljmp
into
sub
rorb
mov
sbbb
lahf
jp
push
pop
and
movsl
pusha
into
adc
nop
pop
add
roll
cmp
inc
inc
add
push
cmp
mov
push
fadds
subl
xor
inc
jne
out
idivl
imul
dec
cmp
les
inc
pop
stc
cltd
daa
cmc
andb
mov
xor
sbb
sub
and
mov
mov
dec
add
test
std
or
cmp
or
sbb
and
repnz
repnz
cmp
int3
aad
inc
inc
test
fcmovu
notb
adc
push
call
xor
cli
call
xchg
into
jge
fiadds
das
add
mov
inc
int3
mov
push
jnp
div
sarb
inc
fistpl
adc
mov
lea
sbb
xchg
dec
mov
jecxz
sbb
adc
mov
mov
or
push
jbe
sbb
movsb
push
mov
enter
aas
incb
adc
ret
dec
addr16
outsb
test
bound
cmpsl
movl
ds
popf
mov
adc
adc
adc
stos
pop
push
adc
shll
push
out
int
lock
testl
mov
popa
into
fdivrs
dec
cmp
push
adc
adc
push
jp
and
cmpl
cwtl
dec
int3
add
add
pop
xchg
rclb
sahf
add
pop
push
and
jnp
rcrl
cmp
subb
or
nop
pusha
pop
mov
adc
sbb
sbb
mov
out
inc
ja
dec
into
lods
shrb
ja
movsl
push
loopne,pn
push
fwait
add
mov
ljmp
lock
jl
fcmovbe
out
push
fildll
in
ja
mov
dec
mov
scas
outsl
stc
or
jmp
dec
jmp
sbb
imul
sbb
rcrb
dec
ds
push
imul
add
mov
lock
dec
xchg
push
mov
jb
mov
add
xchg
fwait
cmpsl
orl
push
clc
test
ljmp
clc
push
sbb
int
xor
cwtl
dec
mov
sub
mov
adc
data16
xchg
push
xchg
jbe
push
bound
fnstenv
fisubrs
je
flds
stc
bound
xorb
push
dec
cmp
jne
mov
jo
mov
pop
repz
and
mov
mov
sub
shll
cmp
rcl
ja
lods
dec
pop
inc
jne
and
add
mov
test
sub
ret
repz
iret
sub
mov
mov
cld
popa
incl
xor
enter
push
hlt
je
ljmp
icebp
popf
and
jmp
pop
push
inc
jo
sarb
jl
test
and
dec
arpl
add
jmp
inc
jmp
sbb
in
lea
pop
mov
mov
add
xlat
insl
mov
push
mov
fidivrs
jbe
jecxz
sub
push
divl
js
mov
stc
cmp
int
add
adc
stos
adc
mov
jns
cmp
lcall
xor
inc
test
push
test
nop
imul
push
dec
or
mov
jae
out
lods
mov
cld
jp
es
fs
sbb
sub
push
clc
sar
cmp
add
hlt
xchg
je
cmp
fsubrs
outsb
or
out
cmp
pop
std
fwait
pop
cmpsl
fdiv
sub
sub
mov
imul
fsub
in
xchg
jp
add
xchg
jb
pushf
push
scas
jns
es
ret
pop
jmp
stos
aaa
xchg
or
imulb
mov
xchg
out
stos
xor
mov
mov
adc
xchg
mov
scas
sahf
popf
cmp
es
cli
hlt
mov
fistps
mov
jns
das
js,pn
iret
push
les
mov
ljmp
pop
adc
pop
dec
je
sub
sub
add
push
lods
rcrb
cmpsb
sub
lds
jno
xlat
mov
sub
mov
xor
mov
pop
cmp
jne,pn
insb
mov
sbb
es
call
int3
stc
iret
push
stos
mov
xor
xchg
rorl
jnp
insl
lret
mov
jb
int
addr16
xor
test
pop
cmc
jb
rcr
cs
das
pusha
lods
jo
stos
stc
push
pusha
cmp
xor
xchg
jae
push
pushf
insb
fmulp
iret
cmp
lds
insl
test
popf
mov
test
out
push
sbb
pop
sbb
dec
jne
cs
jl
jmp
imul
push
mov
xchg
mov
stos
mov
push
rcll
xchg
mov
jne
call
jmp
push
xchg
pop
inc
test
dec
jne
popf
les
xor
push
pop
push
clc
push
jae
mov
sbb
mov
mov
dec
pop
or
cmc
stos
mov
push
xchg
xor
pop
lods
ud2
das
mov
push
test
mov
sti
outsl
dec
jae
imul
mov
push
jp
leave
into
and
test
dec
sbb
adc
lods
pop
fwait
rcr
pop
lods
je
jne
add
sbb
cli
mov
int
lret
pop
aas
sub
call
gs
pop
lea
test
stos
jns
repnz
scas
daa
shrl
cmpsl
fwait
out
sub
das
xchg
fwait
xor
test
test
insb
push
push
outsl
inc
cmp
jecxz
jbe
adc
in
xor
aam
fxch
out
daa
xchg
jge
xchg
int3
orl
mov
sbb
adc
in
add
add
addr16
pop
sbb
jp
add
test
jnp
or
int
fwait
inc
test
stos
outsl
fwait
jmp
or
ficoml
cltd
aad
int3
inc
gs
mov
xchg
mov
sbb
mov
xchg
and
call
out
out
mov
fstp
fidivrl
inc
aad
jl
xor
jg
mov
xchg
mov
fldt
mov
adc
in
push
test
inc
cmp
aaa
jecxz
data16
mov
leave
gs
arpl
out
adc
xchg
xchg
jmp
push
and
test
xor
push
dec
dec
mov
push
sbb
nop
les
mov
fistl
adc
pop
jmp
adc
popa
test
test
cmpsl
mov
dec
xchg
aas
push
push
iret
xlat
pop
sbb
cmc
push
fs
xor
ja
jmp
sub
add
push
and
dec
and
test
jp
push
or
adc
push
pop
push
sahf
inc
cmp
xchg
insb
xlat
mov
lods
and
imul
mov
lock
mov
inc
xor
repz
push
xor
jmp
cs
sbb
mov
adc
xchg
and
or
aad
adc
or
sbb
adc
lret
faddl
mov
pop
pop
jae
stos
jg
jae
subb
sahf
cmp
aaa
xchg
fstpt
cmp
cld
icebp
sub
ds
cmc
loope
jge
arpl
sarb
shl
int3
aaa
mulb
or
ret
mov
leave
stos
pop
cmp
lods
push
xor
testl
dec
jbe
push
inc
xor
add
mov
popf
jbe
fisttpl
cmp
sub
lods
mov
popf
inc
js
popf
jg
xchg
mov
xchg
adc
jae
das
sub
movsl
lods
or
repz
fmul
cmp
jp
jge
movq
mov
in
cld
addr16
loop
jno
push
loope
sbb
lods
mov
sbb
sub
movsl
dec
popa
mov
cld
aad
pusha
jbe
loop
mov
adc
repz
push
dec
aam
inc
xchg
cmp
sub
neg
pusha
push
mov
arpl
pop
dec
add
push
jmp
xchg
les
pop
push
lock
aas
dec
mov
lcall
sbb
adc
das
xchg
out
data16
scas
orb
outsl
std
aad
and
sbb
and
rcll
inc
mov
test
lods
rorb
cmp
pop
aaa
call
icebp
inc
popa
cmp
stos
clc
mov
shll
push
cwtl
rcr
cmp
pop
add
jecxz
insl
mov
mov
and
xchg
shll
das
push
sti
ficoms
les
sub
adc
fucomi
aas
lods
hlt
and
adc
jmp
sub
dec
push
sahf
add
sub
jns
in
aam
jge
lahf
xchg
outsl
lds
sti
adc
push
jg
sarl
pusha
xor
nop
mov
neg
and
les
lea
popl
insl
and
xchg
xor
jo
fistpll
pop
pushf
cmpb
je
in
dec
add
pushf
lea
mov
fidivrs
movsl
sbb
dec
pop
ror
pushf
xor
sub
in
outsb
sub
inc
call
pop
fldt
fisttpl
add
sub
or
adcb
add
in
cmp
and
cli
ss
loop
jbe
js
pop
sahf
and
stc
cmc
nop
out
rcrl
inc
cltd
lock
mov
stos
pop
repz
inc
in
add
loope
adc
arpl
add
mov
pop
aad
stc
sub
push
stos
xor
mov
out
sbb
mov
shl
add
imul
push
sti
mov
cmp
fstpt
scas
int
push
aas
lds
fs
sbb
jmp
std
or
xor
mov
inc
inc
xchg
xor
in
add
bound
jmp
bound
ja
rorl
cmp
daa
jp
or
push
movb
jge
dec
rclb
pop
cmp
gs
bound
lds
test
jmp
rep
lods
je
dec
mov
pop
leave
ficoms
and
aaa
mov
insb
add
fsub
jle
mov
mov
and
mov
push
pop
faddl
adc
loopne
xchg
addb
mov
jg
out
add
outsb
jl
ret
jae
or
jnp
mov
das
cmp
clc
mov
jns
inc
repnz
pusha
inc
fistpl
enter
shll
jl
jae
pop
mov
fisttpll
sub
lea
adc
push
pop
sti
sub
loope
xchg
mov
cmp
aaa
add
mov
xor
or
jp
add
leave
add
adc
movsl
push
inc
stos
lods
xchg
xor
lods
inc
leave
adc
scas
mov
dec
andl
lahf
ljmp
xchg
jge
ja
in
lret
push
arpl
jle
gs
xor
xchg
stos
jae
popa
ret
test
sbb
loop
mov
dec
mov
es
cmp
jg
inc
cli
xchg
ret
jne
adc
dec
jecxz
cld
sub
ret
xorb
and
xor
scas
loope
fisttps
add
sbb
add
jo
loope
and
cmpsb
cmc
mov
loopne
jmp
add
inc
or
pop
cs
fstps
xor
mov
pop
out
mov
jle
xchg
or
jae
pop
ja
into
test
sahf
mov
sti
mov
out
cmpsl
mov
outsl
es
dec
test
pop
leave
adcb
cmp
ret
sbb
xchg
sub
mov
fwait
cmpsl
push
or
out
clc
lock
xchg
xchg
adc
and
enter
cmovae
xchg
jb
shlb
jg
or
or
into
jg
imul
xchg
lods
jge
inc
sbb
std
jb
or
mov
adc
fs
sbb
popa
mov
test
mov
push
hlt
dec
sbb
cld
sub
std
inc
mov
dec
sbb
adc
dec
pushf
jge
dec
sti
stc
and
xor
gs
in
aas
shrb
inc
dec
inc
leave
arpl
dec
outsb
fwait
adc
in
jmp
outsl
in
dec
iret
out
sub
push
scas
inc
mov
jg
aad
mov
jb
in
fstl
sbb
lods
jecxz
jge
inc
in
mov
popa
popf
mov
orb
push
lret
mov
mov
sbb
loope
mov
push
fdivr
sahf
pop
jne
and
dec
cli
adc
cmp
lret
add
and
mov
sub
xchg
sub
pop
push
ja
inc
add
pop
scas
jmp
push
dec
inc
mov
push
pop
nopl
mov
inc
cmc
inc
cmpsb
in
js
lahf
iret
cli
push
sub
add
adc
hlt
xchg
jecxz
pop
nop
ror
jmp
adc
pop
imul
cmpsl
cmp
sbb
mov
mov
dec
std
inc
js
cld
insl
push
and
subl
inc
jg
cs
call
pop
pop
insb
aas
or
aaa
or
or
xor
sub
mov
or
jmp
ljmp
lds
mov
ficompl
add
cli
xchg
sarl
jp
mov
cltd
in
and
xor
fsubs
jp
cmp
add
lods
sbb
loop
out
stc
movsl
cmp
in
or
jo
icebp
lods
idivl
dec
jne
pusha
fdivs
pop
pusha
sahf
cwtl
shrl
push
sub
pop
daa
mov
stos
cmp
test
nopl
in
mov
scas
sub
lds
int
pop
push
insb
xlat
cmc
shll
cs
pop
test
sub
scas
dec
inc
fs
and
xlat
inc
sub
pop
int
or
or
sub
jle
mov
xor
cmpsl
dec
pop
aad
mov
int
hlt
lret
xchg
jno
scas
sub
sbb
adc
dec
sbb
mov
sbb
xchg
sbb
and
lock
mov
add
push
xlat
inc
mov
and
cmp
push
popf
xor
push
loopne
imul
je
pop
fwait
jge
std
std
mov
pushf
popa
jae
pusha
loop
shl
xchg
fildl
ret
dec
xchg
test
mov
shrb
sbb
loopne
imul
out
push
popf
adc
mov
fucomi
xchg
pop
jecxz
repz
mulb
pusha
cmc
les
nop
in
xchg
mov
data16
shlb
cmp
pop
insb
aam
iret
mov
mov
std
xor
in
inc
pop
mov
das
test
jle
add
add
adc
push
leave
adc
aas
in
xchg
mov
addr16
test
sub
fcomi
call
in
jg
mov
in
xor
and
leave
sbb
movsb
add
push
push
cmc
sbb
test
push
dec
in
shrb
mov
ss
int
mov
js
push
scas
call
cmp
lds
mov
pop
in
or
jmp
aad
fstpt
mov
shl
imul
mov
mov
sbb
push
sbb
fs
ss
mov
loopne
xchg
shlb
dec
dec
shll
push
push
mov
or
mov
mov
cmp
int3
leave
loop
mov
mov
mov
mov
lods
sbb
into
push
sub
dec
repnz
jmp
cwtl
cmpsl
add
sbb
fsubr
or
add
mov
cli
outsl
or
add
xlat
shlb
jmp
push
iret
test
push
xor
mov
je
aaa
jne
or
addb
sbb
inc
adc
sub
push
rolb
mov
inc
call
mov
dec
or
psubw
test
or
sub
loop
ret
and
inc
fstp
jg
cmp
jle
ret
stos
xchg
sbb
cwtl
hlt
scas
loope
lret
cmp
add
test
lock
inc
xlat
mov
shlb
fnsave
dec
cmpsl
dec
fsubrp
xchg
xchg
leave
hlt
lock
scas
push
mov
das
xor
dec
loope
je
test
data16
mov
inc
push
leave
aad
inc
test
ds
mov
fs
cmp
inc
fwait
push
cmpsl
lret
push
test
mov
sti
jp
ficoms
popf
shrl
jbe
rorb
sub
inc
sbb
push
mov
ljmp
or
push
push
lcall
in
push
sub
push
xchg
jne
fwait
insb
sub
daa
inc
movsb
jmp
ret
and
inc
jp
mov
jg
dec
mov
add
mov
jecxz
imul
gs
push
xchg
fwait
rorb
or
sbbb
les
dec
arpl
cwtl
insl
aam
cmp
jmp
mov
mov
pop
push
xor
xor
cs
or
pushl
clc
mov
insb
in
insb
sbb
cli
mov
sbb
sub
in
test
popa
pop
inc
fwait
inc
xlat
xchg
lock
mov
out
adc
cli
imul
adc
fnsave
jg
aad
mov
into
mov
adc
mov
mov
aam
and
imul
push
icebp
aas
cmp
jl
sub
mov
mov
adcb
or
repnz
push
hlt
jnp
sbb
sarb
repnz
ja
fidivrl
jae
bound
mov
mov
scas
ljmp
repz
lods
insb
jl
or
addr16
inc
lods
repz
dec
in
pushf
fistpll
and
inc
ljmp
cwtl
cmp
lods
call
call
push
shrb
adc
inc
leave
cmc
push
lret
pop
sbb
sbb
adc
mov
sub
jmp
test
faddl
pop
fdivl
out
adc
cwtl
or
inc
mov
fsubs
xor
or
mov
cmp
je
mov
add
sti
cmpsb
js
pusha
ret
stos
sarb
leave
mov
enter
cwtl
lods
ror
inc
addl
gs
push
mov
jo
stc
outsl
xchg
cltd
gs
push
add
js
and
add
in
cld
cmp
lods
jnp
xchg
mov
mov
insl
mov
in
mov
out
aas
cli
jne
push
inc
mov
and
rcl
mov
pop
out
push
add
arpl
xor
jb
addr16
push
cwtl
xor
push
addr16
or
mov
or
cs
scas
in
dec
loopne
divl
dec
imul
mov
scas
je
add
add
cmp
pop
lret
les
sub
adc
jns
add
movsl
rcrb
xchg
insb
dec
mov
dec
jg
adc
cmp
lods
rolb
push
cmc
mov
cmc
or
xchg
push
adc
mov
pop
dec
popf
push
or
mov
aam
mov
sbb
cmp
xor
xor
lds
ljmp
testl
add
pop
cli
pop
mov
sarb
mov
sbb
xchg
pop
pop
jns
jo
add
outsb
cli
roll
mov
sbb
test
jge
xchg
je
cmpl
adc
mov
popl
pop
push
dec
sti
pop
int3
inc
mov
loop
add
sbb
mov
lods
ja
ds
adc
pushf
push
push
dec
mov
mov
in
pop
cmp
frstor
lds
or
xchg
add
rcll
test
sub
adc
inc
lcall
dec
xor
mov
dec
imul
add
pop
and
sub
xchg
aam
dec
lahf
mov
push
jl
loope
test
pop
jp
in
repz
adc
jl
loope
mov
mov
and
mov
fsubrl
jnp
test
xor
cld
or
out
fsubs
lahf
cmpsb
sub
jmp
jmp
pusha
loope
pop
insb
mov
outsl
or
dec
mov
xchg
shrl
in
jmp
into
dec
or
ret
hlt
fwait
inc
inc
flds
sub
sub
sbb
and
dec
xor
sbb
cmp
and
jbe
das
sub
adc
or
jl
lret
cltd
fcmovnu
mov
dec
roll
scas
idivl
insb
lock
jg
mov
adc
mov
pop
outsb
cmp
xor
adc
sarl
adc
push
jne
pushf
sti
out
test
mov
or
lret
out
cmp
adc
and
out
or
popa
xorl
ret
dec
mov
xchg
mov
adc
lret
sbb
dec
pop
movsl
sarb
xchg
xchg
jecxz
and
lods
dec
add
int3
cmpsl
jnp
mov
bound
sahf
cmp
ljmp
cltd
cwtl
fldt
popf
fxch
repnz
stc
out
fsubp
sub
add
mov
in
stos
mov
mov
pop
into
inc
dec
mov
out
mov
bound
sbb
mov
mov
push
aaa
xor
cmp
cmpsb
nop
xor
and
push
leave
fsubrl
arpl
xchg
mov
inc
rorl
aad
bnd
cmpsl
popa
jp
addr16
xor
ret
roll
xchg
dec
popa
in
mov
idiv
incb
rcl
movsl
ret
add
mov
gs
aaa
repnz
jns
push
aam
pusha
clc
mov
jnp
mov
in
jmp
xchg
fs
mov
dec
mov
popf
mov
xor
cmovo
add
repnz
testb
mov
shlb
jmp
dec
hlt
cmp
pop
mov
pusha
mov
hlt
aaa
out
inc
data16
pop
dec
add
pop
cmp
daa
pushf
nop
lcall
adc
xor
stos
mov
ret
mov
stos
lods
cmpl
pop
jbe
stos
rcr
test
jo
cmp
adc
fimuls
outsb
iret
sbb
cld
sbb
mov
mov
adc
or
cmpl
add
in
or
sub
shl
xor
lods
fldl
push
jae
fidivrs
scas
xchg
out
xor
pusha
adc
cmc
cmp
test
xlat
xor
out
enter
cmpsb
aas
xor
mov
jno
or
mov
rclb
lods
xchg
and
push
or
aad
inc
enter
imul
ds
and
inc
dec
adc
inc
fsub
sar
lahf
xor
inc
inc
adc
aaa
cltd
js
lret
outsb
push
mov
dec
mov
xor
test
sbb
hlt
test
mov
out
js
adc
clc
jmp
sbb
in
test
int3
xchg
jl
pusha
sbb
aad
lret
stc
int
xor
int
xor
aam
add
fistps
sbb
mov
das
lods
ds
or
out
xchg
out
shrl
push
fst
sbb
mov
jne
int3
push
cs
xchg
push
loop
out
leave
cwtl
ss
dec
mov
adc
push
stos
int3
sbb
ds
pop
and
mov
add
pop
add
and
xchg
pop
jecxz
mov
movsl
mov
cmc
in
push
fisubrl
insl
imul
inc
pop
xor
cwtl
inc
sbb
dec
pushf
out
pop
pop
jg
shl
scas
mov
shlb
mov
mov
or
inc
mov
dec
push
divl
mov
pop
pop
or
push
popf
adc
rcrl
arpl
mov
xchg
jno
test
ljmp
sbbb
pusha
xor
push
test
clc
mov
mov
in
push
out
sub
push
repz
xchg
popa
test
xchg
sub
mov
xchg
ljmp
xor
add
in
lock
sbb
xchg
lret
nop
cmp
cltd
jns
int3
inc
xchg
stos
cmp
in
clc
jp
sbb
fcomi
push
out
cwtl
inc
xchg
cmp
xchg
lods
sbb
and
add
outsb
push
jl
cli
data16
push
out
sbb
fisubl
and
daa
call
popf
sbb
addr16
lea
ljmp
leave
and
ds
loopne
push
mov
sbb
and
and
or
xor
pop
lods
cmp
lahf
xor
lea
sbb
rolb
pop
idivl
push
mov
pop
cli
sub
jnp
inc
ja
pop
adc
shl
gs
mov
das
mov
mov
jb
xor
push
filds
push
xor
scas
jae
leave
cs
sub
std
iret
mov
xchg
push
mov
sbb
sub
lods
mov
sarb
hlt
test
jo
test
mov
and
push
lods
subb
lea
xchg
popa
push
or
sub
pop
xchg
call
test
repz
adc
fwait
push
faddl
push
jae
outsb
pop
and
rclb
js
dec
mov
int3
js
les
movsl
pop
dec
sarb
or
xchg
jae
sub
cmp
jnp
add
sub
loope
popa
dec
adc
in
movsb
mov
or
repz
fldenv
imul
jae
gs
add
mov
out
mov
push
xor
lret
push
or
pop
hlt
test
dec
popa
arpl
jae
sub
sbb
test
mov
das
sbb
dec
mov
jbe
lods
jne
sbb
scas
cmc
dec
cli
lret
xchg
mov
dec
fildll
fdivs
lods
imul
lahf
and
insb
filds
sbb
jp
cmp
sti
stc
jae
xchg
lea
push
xchg
xchg
ss
in
or
lds
in
or
cmp
xor
xchg
sbb
lcall
push
imul
adc
xchg
cld
inc
insb
fwait
jl
mov
sub
data16
fcoms
in
add
push
out
into
lods
cmpsb
imul
ds
pop
cltd
lds
jle
mov
push
mov
iret
repnz
lods
and
push
push
ret
or
xchg
cmpl
add
mov
loop
fcomp
inc
and
jb
jne
test
inc
mov
ficomps
fdivl
inc
outsb
mov
pop
xor
repz
fists
mov
mov
inc
mov
lds
adcb
dec
inc
movsb
mov
push
mov
push
sub
mov
pop
mov
push
jle
mov
stos
jo
sahf
lcall
xor
mov
sahf
fs
faddl
inc
loop
sub
xor
push
xor
jno
or
test
mov
jne
pop
pushf
push
std
mov
inc
dec
mov
pushf
iret
push
cmc
inc
jl
aad
jg
fdivr
idiv
push
or
pop
lods
test
scas
aam
cli
out
rol
cmp
scas
jo
mov
mov
lret
inc
pop
adc
pop
out
sbb
pop
shr
js
xchg
sbb
jbe
sbb
jecxz
stos
or
fs
jp
or
add
and
in
mov
nop
push
pop
enter
ja
aaa
cs
sbb
jnp
jae
aas
pop
dec
adc
popa
push
mov
sbb
adc
out
insl
mov
imul
push
sub
adc
mov
repnz
mov
test
in
into
pop
lods
mov
pop
ror
jbe
and
ds
enter
popf
fmul
adc
jo
outsb
int3
lods
or
shll
lcall
scas
mov
movsb
daa
ljmp
movsl
pop
daa
pusha
mov
inc
jns
in
es
lds
push
sub
jo
push
jle
aad
shl
sbb
sub
outsb
xchg
or
mov
fnstcw
push
xchg
push
imull
jp
mov
scas
lock
push
or
xchg
out
xorb
ret
idivb
mov
in
mov
inc
jbe
sub
ret
inc
rorb
jge
and
push
lahf
push
xchg
leave
xor
jb
sti
aas
dec
inc
lods
popf
jbe
out
sti
stc
mov
pop
mov
add
xchg
cmpl
cmp
enter
mov
cmp
into
scas
pop
pop
mov
movsl
push
inc
inc
out
add
mov
cltd
xor
cmp
jl
add
mov
test
int
add
enter
stos
mov
test
xlat
cmp
xchg
add
stos
pop
es
shlb
xor
push
lret
adc
jp
dec
jne
roll
push
inc
sbb
mov
imul
iret
push
pop
stos
sub
mov
fiadds
xchg
jecxz
adc
test
jmp
dec
push
add
mov
lret
in
mov
mov
and
sbb
js
icebp
ss
jo
sub
jne
pop
in
xchg
sbb
jne
xchg
sub
mov
mov
lcall
mov
dec
sahf
out
mov
xor
in
loopne
xor
or
sbb
cli
insb
repz
push
xchg
lahf
sub
in
xor
mov
pop
sbb
xchg
add
mov
pop
les
shll
lods
mov
xor
xchg
jne
mov
sbb
sbb
scas
dec
and
sub
test
pop
lahf
add
mov
mov
addl
cltd
mov
push
orl
cli
das
pop
ja
ror
xor
mov
xor
push
out
sbb
jmp
pop
fdivrl
jecxz
mov
stc
or
mov
jae
shll
sub
aaa
dec
das
loopne
lea
jnp
mov
aad
fwait
jnp
divl
inc
push
test
pop
jae
inc
movsb
cs
adc
jnp
xchg
test
ficomps
adc
test
inc
std
sar
xorb
sub
push
cmp
leave
mov
and
jg
xor
pop
and
mov
js
cli
mov
push
or
adc
bnd
popa
jns
lea
push
xchg
nopl
nop
lea
jle
fstl
int3
inc
in
mov
pop
lcall
outsb
enter
ror
sarb
inc
nop
ljmp
mov
lcall
gs
sbb
add
mov
into
push
roll
or
and
inc
js
inc
and
jno
xchg
adc
fsubs
adc
push
sbb
std
in
dec
dec
cli
jns
add
lahf
sbb
pop
sbb
daa
mov
lea
ja
fwait
test
xchg
filds
cmp
ret
or
iret
jg
add
fldt
add
enter
dec
and
cmp
mov
mov
cmc
mov
cmpsb
sub
loope
fisttpl
mov
nop
imul
xchg
jb
or
cmpsl
cmp
or
mov
test
sar
xor
cmp
pop
loopne
and
and
mov
xor
mov
mov
sub
jae
jno
xlat
jbe
stos
mov
insl
addl
add
mov
bound
outsb
sbb
in
std
sub
std
xchg
stc
dec
push
cltd
pop
xor
lret
adc
and
bound
or
add
stos
rcrb
test
and
sbb
push
push
je
cmp
das
dec
shll
xchg
mov
jne
fidivrl
ret
dec
call
adc
jnp
loopne
stos
scas
insl
adc
pop
mov
ja
mov
push
hlt
push
jbe
cmpsb
jmp
cmc
mov
scas
test
in
adc
nop
pop
imul
andb
in
cmc
inc
rcll
fsubrp
lods
xlat
lock
lcall
push
std
push
cvttps2pi
mov
cltd
adc
out
aas
into
test
ja
mov
sub
sub
jmp
js
shr
cld
mov
sub
js
mov
and
rclb
outsb
scas
in
lahf
mov
push
pushf
cltd
xchg
shr
dec
out
pop
adc
sbb
scas
and
lcall
cmp
jb
jp
push
dec
in
ficoml
or
orb
xchg
mov
xor
sub
push
jb
out
rorb
dec
push
mov
and
loop
lds
xor
push
push
jbe
cmp
dec
sbb
jmp
loop
cmp
cmp
aas
xor
pop
mov
pop
or
add
inc
jae
mov
and
xchg
cmp
add
cmpsb
int3
mov
or
jle
jmp
mov
or
push
ret
call
lcall
add
out
scas
push
or
outsb
aad
pop
xchg
pop
mov
and
or
testl
imul
xor
dec
sub
and
jge
icebp
test
cld
sub
push
mov
lods
jne
ljmp
into
mov
mov
mov
jp
lcall
loop
ds
pushf
dec
mov
dec
and
lock
pop
add
push
xchg
xor
inc
sbb
daa
adc
mov
jl
push
mov
or
hlt
fdivrs
or
xchg
adc
mov
mov
jbe
mov
dec
mov
lods
stos
ds
jge
and
scas
or
stc
or
int
sbb
dec
push
dec
add
xor
dec
mov
fildl
mov
sti
es
or
mov
in
incb
mov
fnop
mov
add
in
mov
mov
cmp
repz
frstor
mov
fwait
jo
jnp
ljmp
ficompl
mov
jne
js
sbb
jbe
jp
sub
mov
imul
push
out
add
xor
data16
push
out
outsb
arpl
or
in
adc
filds
loopne
bound
rcl
xchg
adc
scas
sbb
outsb
jecxz
andl
push
mov
xchg
jl
cmp
ret
mov
inc
in
push
orl
int3
mov
mov
mov
lcall
repz
pop
sub
sarb
sub
xchg
sub
in
xchg
rclb
movsb
lods
add
nop
inc
xor
lea
sub
jecxz
js
or
frstor
into
repz
jae
out
mov
addl
popf
dec
test
out
or
mov
stos
jmp
mov
xchg
jp
arpl
lret
fimull
pusha
fcmovnbe
or
xor
adc
mov
movsl
cmp
jmp
lret
adc
dec
xor
ficoml
repz
movsb
fsubrs
mov
mov
hlt
sbb
fs
sbb
cld
shlb
inc
insl
mov
gs
xchg
repz
pop
adc
mov
cmp
jmp
sbb
addb
test
pop
push
lcall
test
rorb
iret
add
loop
mov
nop
imul
ret
pop
stos
xchg
push
sbb
jae
cmp
leave
lods
js
std
adc
int
lret
push
pop
roll
xchg
dec
loope
fptan
inc
imul
push
jns
mov
inc
push
iret
push
xor
loopne
pop
or
lgdtl
inc
gs
outsl
jecxz
jns
pop
outsl
mov
or
mov
ret
fcmove
mov
out
mov
cmp
cmpsl
movsl
xchg
push
cmp
adc
xchg
or
jbe
aaa
enter
mov
sti
mov
insb
xchg
cmc
mov
xorps
fdivrs
lds
in
jle
out
aad
dec
dec
xchg
mov
mov
rcrb
popa
sahf
in
xor
pop
jno
xchg
sbb
mov
inc
imul
jo
stc
sub
aas
push
cltd
xor
sub
adc
cmp
dec
mov
lcall
pop
fisttpll
dec
mov
lcall
test
push
mov
jbe
jecxz
pop
fbld
mov
out
lret
test
fstl
loop
es
popa
add
mov
je
mov
imul
pushf
negb
out
inc
rorl
arpl
nop
pop
jl
cmp
pop
mov
mov
pop
mov
pop
pop
dec
sbb
cmpsb
mov
cmp
fs
and
cld
fmuls
dec
xor
jge
orl
jbe
jg
jns
jnp
test
mov
xchg
cmp
nop
sub
adc
stos
iret
push
mov
enter
lcall
pop
enter
cld
neg
push
dec
jge
xchg
inc
sbb
dec
ret
ds
sti
ljmp
mov
inc
inc
or
clc
or
fsubrl
scas
add
fiadds
sti
jmp
arpl
popf
sub
scas
push
adc
out
mov
vmwrite
cmp
xchg
shl
pop
pop
in
loopne
mov
aaa
fst
sub
aad
loop
in
data16
xor
mov
xor
repz
mov
fisubrl
ret
sub
cmp
pop
and
mov
es
sub
xor
dec
and
std
or
mov
mov
inc
arpl
inc
stos
cwtl
leave
mov
adc
mov
mov
cmp
mov
leave
mov
xchg
add
push
out
and
fcompl
xchg
lods
pop
or
test
xchg
sub
mov
or
xchg
out
pop
movhps
jnp
sub
pop
ret
enter
bound
xlat
rol
cmc
fwait
dec
mov
dec
idiv
cmpsb
dec
cmp
adc
push
cmp
xlat
clc
je
jb
bound
lret
cmpb
or
sbb
das
rep
mov
repz
push
sub
mov
bound
mov
push
xchg
jmp
pusha
cli
pop
in
or
repz
xchg
push
xchg
inc
adc
stos
mov
jge
xchg
inc
bound
lcall
fildll
push
lahf
stos
mov
enter
mov
mov
call
pop
bswap
lods
rcrb
shrd
shll
xor
pop
insl
cmp
shr
in
lock
xchg
dec
movsl
rol
xchg
and
mov
and
nop
arpl
xor
inc
scas
pop
stos
pop
outsb
xchg
cli
lds
xor
loopne
sbb
scas
sbb
sbb
pop
addr16
ret
adc
mov
add
mov
add
je
sbb
jle
dec
stos
sbb
pop
push
and
push
jp
in
xchg
mov
add
and
mov
out
daa
ret
scas
jo
and
xchg
ljmp
in
adc
shlb
sbb
adc
add
popf
pop
mov
fldl
pop
pop
loopne
push
add
push
sarb
ljmp
pop
mov
add
lock
jl,pt
sbb
mov
pop
out
mov
sbb
mov
lret
inc
in
mov
xchg
and
cmp
shll
and
into
popf
cli
shlb
add
mov
sub
mov
aam
cmpb
shlb
jmp
sub
sbb
fisttps
dec
pop
cmp
add
fildl
stos
mov
and
lcall
xor
int
es
ret
ret
xor
addr16
lea
outsb
test
pop
pop
das
icebp
pop
stos
mov
push
cltd
mov
leave
imul
popf
inc
jp
jne
mov
jg
dec
inc
dec
in
jo
inc
pop
sub
sbb
jae
fcoms
jmp
inc
lret
ret
sbb
outsl
scas
xchg
int
scas
mov
pop
out
fadd
lock
sbb
lds
sub
popl
insl
jae
sti
pop
lret
mov
scas
pop
cli
mov
lock
mov
pop
jecxz
loopne
adc
add
cmp
and
das
orb
xchg
nop
loop
pop
mov
rolb
ljmp
xchg
push
les
repz
pop
xchg
cmp
xchg
inc
xchg
ficompl
insb
in
test
add
or
fs
push
jmp
sbb
aam
das
mov
loopne
lret
jp
mov
or
and
loop
ss
int
sbb
jne
lcall
scas
loopne
sub
cmpsl
andb
lcall
push
dec
lea
mov
mov
mov
push
mov
icebp
mov
test
loopne
mov
aam
dec
xor
lret
pop
add
rolb
xor
xor
jno
mov
dec
or
xor
rcll
jbe
jnp
inc
sub
lock
sbb
fiadds
adc
repz
sub
xchg
jb
stc
dec
jp
add
xor
push
push
lret
inc
lods
cltd
xor
jmp
loop
stos
xchg
push
sbb
add
add
orb
sub
pop
xchg
push
lahf
or
jno
xor
out
inc
xchg
setbe
push
push
lock
repnz
pop
xor
mov
xor
sub
out
sub
jp
sub
jmp
js
cmp
inc
adc
pop
xlat
mov
jp
add
jg
test
pop
sub
sbb
aad
pop
lret
aas
cmp
sti
repz
inc
xor
popf
loope
repnz
lcall
or
dec
mov
std
sub
inc
scas
fwait
sbbb
dec
inc
push
inc
cmc
sti
sbb
and
mov
dec
fcoml
mov
mov
outsl
dec
lret
in
pop
xchg
mov
test
and
dec
int
flds
cmp
ja
mov
stos
mov
orl
test
into
add
dec
push
out
fimull
and
cmp
dec
pop
sbb
sub
xchg
push
pop
daa
ret
sub
aaa
std
mov
lea
stc
fmuls
or
adc
mov
xchg
daa
sahf
pusha
push
out
adc
inc
push
outsb
cs
and
imul
sub
inc
stos
testl
add
jns
icebp
bound
daa
shlb
xchg
jge
pop
jge
xchg
inc
pop
ret
outsb
and
mov
aad
out
cwtl
dec
cmp
mov
clc
sbb
rorb
popf
fimull
mov
jmp
js
aad
lahf
mov
loope
fwait
mov
jecxz
loopne
and
aam
mov
jno
sub
mov
dec
test
pop
mov
data16
inc
xchg
xorb
mov
int3
clc
xchg
sbb
incl
imul
adc
int3
adc
pop
decb
cmc
in
mov
mov
and
lahf
in
test
and
ja
loope
popa
mov
add
pop
xchg
das
and
mov
fsub
mov
xor
mov
cmpb
scas
sub
inc
pop
mov
loop
cli
jbe
out
mov
pusha
loop
cmp
loopne
ja
lahf
mov
in
inc
negb
stos
pusha
daa
or
out
icebp
popa
insl
test
mov
sbb
aaa
testb
pusha
mov
iret
pop
and
jne
arpl
jge
jmp
xchg
sub
aas
and
add
mov
lock
xlat
not
or
add
sbb
ficoml
insb
int3
repnz
xchg
xchg
fldt
out
cmp
fnsave
cli
mov
add
and
sub
xchg
sbb
in
adc
nop
jmp
scas
cld
and
xchg
loop
push
je
xchg
cmc
sar
lcall
xor
push
repz
dec
out
rcrl
fnstcw
movsl
mov
adc
jecxz
push
jne
sbb
jne
movsl
jg
insl
sub
shlb
push
xor
shll
ja
clc
cwtl
and
call
loopne
lock
stos
hlt
std
loop
push
sahf
pop
push
sub
dec
in
push
sub
cmp
mov
out
lods
rol
out
xchg
lods
add
lea
dec
mov
aaa
xchg
clc
push
andb
fisttpll
mov
test
bound
rorb
xor
inc
aas
xchg
jb
ja
jmp
ljmp
rorl
mov
and
mov
adc
ds
mov
loopne
xchg
dec
mov
jo
pop
adc
mov
inc
inc
mov
mov
mov
pop
push
xor
or
ljmp
xor
cmpb
adc
cwtl
pop
mov
mov
stos
mov
pop
push
mov
pusha
shll
call
jnp
xor
or
ds
hlt
sub
lret
or
jb
and
jp
mov
mov
insb
mov
xor
jg
add
test
mov
outsl
icebp
mov
frstor
dec
mov
scas
das
jl
mov
enter
cs
fscale
sub
jo
cmp
mov
movsb
lahf
xlat
sub
mov
sub
cmp
jmp
push
cmpsl
rcrb
movl
ret
inc
mov
mov
sbb
stc
add
cltd
mov
mov
sbb
popf
xchg
cld
push
mov
mov
pop
add
inc
xchg
add
rolb
jb
scas
loopne
mov
mov
cs
sub
sbb
push
xor
loopne
pop
xor
call
cld
sub
fldcw
or
rcrl
jae
jno
imul
fsts
gs
add
into
lret
insb
dec
mov
nop
or
push
adc
mov
lahf
sbb
jp
sbb
inc
push
pop
cmp
movsb
test
mov
insl
in
cmp
aas
negl
push
jl
xor
dec
icebp
daa
lahf
xor
dec
gs
xchg
lds
dec
mov
sub
mov
ret
inc
shr
lahf
fmul
daa
xlat
iret
jecxz
loopne
shrl
dec
adcb
mov
xor
cwtl
clc
push
ss
mov
es
fucomp
dec
arpl
xchg
enter
pop
sbb
mov
jle
cmp
xchg
scas
lret
inc
popa
xchg
nop
out
push
and
inc
mov
inc
nop
mov
sahf
push
fsubs
nop
mov
test
mov
mov
cmp
ds
outsl
mov
jle
idivb
fdivl
outsl
sbb
mov
in
addr16
jg
ficompl
insl
jnp
xlat
test
xchg
popa
mov
lret
mov
add
sub
aaa
mov
leave
lahf
or
cmp
lcall
js
mov
mov
mov
movsl
mov
jge
xor
shrl
xor
or
inc
jecxz
scas
inc
repz
popf
inc
mov
outsl
mov
jae
sbb
out
jp
popa
xchg
rolb
cmp
and
push
mov
sahf
or
xchg
loop
inc
pop
mov
lods
inc
adc
jno
stc
ljmp
pop
xchg
inc
adc
cmp
fwait
leave
sahf
mov
out
idivl
lods
jp
cwtl
sbb
pop
hlt
dec
add
imul
gs
dec
pop
je
divb
inc
push
push
push
pop
jae
cli
imul
repnz
inc
loopne
ret
sub
movsb
pop
pop
push
mov
clc
sub
ret
jne
xchg
push
sti
add
shrb
or
in
mov
movsb
adc
cs
and
pop
sar
push
hlt
mov
dec
insb
jno
stos
test
or
cmc
mov
pop
fdivrl
nop
cmc
sarl
mov
mov
ret
dec
push
inc
mov
cwtl
xlat
pop
xchg
adc
insb
and
adc
clc
jno
or
lret
hlt
or
mov
jle
in
cwtl
push
or
sbb
dec
scas
lret
mov
add
enter
jb
jecxz
push
loop
dec
mov
iret
jno
and
out
sub
scas
fcmovne
xchg
add
jp
mov
negb
jne
out
lods
adc
adc
les
and
dec
outsb
movsl
jg
or
or
mov
psraw
and
sarl
pop
icebp
add
sarb
mov
xchg
clc
daa
xchg
imul
inc
or
mov
stos
and
sbb
adc
sub
in
mov
mov
test
mov
mov
pop
lods
incb
cltd
iret
ljmp
addr16
enter
inc
movsb
pusha
in
dec
fidivl
mull
adc
aad
fs
daa
pop
jecxz
inc
add
dec
mov
test
loope
leave
andb
xlat
add
add
push
adc
sbb
sbb
jae
adcl
add
sbb
dec
cmp
addr16
cmc
and
lret
jp
stos
adc
sbbl
add
lcall
ret
inc
dec
fs
sub
aam
sahf
xchg
sub
xchg
inc
sahf
les
out
popa
sub
popl
fadd
adc
fs
mov
sbb
out
sub
and
daa
mov
jl
lea
loope
sbb
into
cli
mov
inc
icebp
fucom
std
in
jmp
cwtl
push
leave
and
xor
push
cmpsb
add
xor
js
pop
out
faddl
cmp
in
mov
pop
inc
mov
sbb
mov
outsb
inc
outsl
cld
mov
bound
mov
je
ret
pop
arpl
jno
scas
repz
fwait
outsb
cmp
es
lcall
pushf
leave
cmpsb
jge
cs
mov
mov
mov
stos
jbe
andb
or
mov
aaa
jae
sub
push
jno
clc
icebp
imul
cmpl
mov
or
sub
pop
xor
xor
or
inc
add
pusha
fldl
jle
outsb
jmp
jbe
xchg
imul
push
mov
std
pushf
cs
jns
sub
or
push
xor
and
imul
mov
ljmp
and
hlt
and
dec
fwait
mov
pop
cmp
hlt
dec
jecxz
mov
out
scas
ret
and
divl
sti
out
adc
or
add
mov
mov
dec
movsl
aaa
jnp
xchg
lahf
fwait
cmp
jno
in
sub
adc
imul
sarl
xchg
sbbl
mov
int3
or
xchg
into
cmp
shlb
mov
pop
lods
pop
imul
dec
mov
xchg
mov
std
rcll
adc
dec
lds
xor
jmp
sbb
sbb
xor
dec
and
and
dec
es
xchg
xchg
cmp
mov
std
nop
or
mov
inc
jmp
jmp
scas
jns
test
jmp
pop
adc
cld
adc
ffreep
inc
mov
push
jnp
lret
ret
sub
jmp
sbb
mov
and
jbe
nop
push
sahf
ds
jbe
dec
dec
mov
std
fiadds
dec
and
jmp
sbb
movsb
addb
sbb
xor
cld
adc
imul
dec
imul
sub
out
mov
pop
dec
fwait
mov
ljmp
aad
mov
pop
ja
adc
add
mov
xor
std
pop
add
push
nop
xor
pmullw
mov
cmpb
xchg
lret
push
mov
ret
leave
cmpsb
jle
lret
ret
enter
inc
mov
lahf
xchg
inc
mov
adc
xor
outsl
xchg
pop
mov
shlb
jle
sbb
daa
fcmove
pop
sbb
push
jp
mov
pop
out
push
shrl
add
pop
andl
out
cmpsb
stos
test
sbb
add
shl
cmp
pop
xchg
mov
mov
dec
or
mov
push
aas
sub
cmc
data16
mov
leave
stos
sub
mull
add
icebp
mov
sub
pop
push
pusha
lods
clc
out
xchg
xchg
or
xor
mov
jge
insl
lods
inc
mov
mov
scas
in
lea
mov
and
add
jno
pusha
fucomp
jns
xor
jecxz
xor
xchg
mov
sub
sbb
cld
sbb
enter
pop
jmp
dec
pop
in
mov
adc
loop
shll
stos
imull
movsb
adc
les
jno
push
xor
jb
mov
test
push
sbb
lahf
push
mov
xchg
or
fcmovnbe
ljmp
pop
mov
sub
inc
jecxz
push
dec
subb
out
pop
mov
jecxz
push
sbb
data16
push
inc
roll
jg
jae
icebp
sub
lea
pop
arpl
dec
adcb
mov
dec
stc
xor
ret
cmp
mov
xor
inc
cmpsl
xor
xor
jne
in
xchg
push
jecxz
out
add
jge
lock
sub
jnp
mov
cli
repz
scas
enter
or
clc
sub
sub
loopne
gs
xchg
pusha
sbb
xchg
push
scas
dec
adcb
xor
js
xchg
into
icebp
movsl
je
mov
fucomp
cmp
out
or
es
std
mov
lods
repz
mov
fwait
popa
int3
xchg
push
xlat
jmp
mov
jmp
mov
pusha
negb
test
jmp
enter
mov
adc
arpl
push
sahf
mov
divl
jnp
push
adc
push
fildl
lret
jbe
pop
inc
test
stos
outsb
cmp
add
mov
dec
repnz
movsl
repz
inc
ja
xchg
ja
xchg
jge
fcomip
xchg
mov
and
shrb
mov
or
sub
fdivrs
mov
pushf
mov
sbb
mov
mov
movsb
pop
jns
inc
xchg
xor
scas
xor
mov
add
sarb
pop
inc
and
jecxz
fwait
add
test
sbb
fbstp
push
call
xor
stos
scas
xadd
or
mov
mov
xchg
movsb
das
adc
in
xor
xor
sub
sbb
js
inc
lret
adc
int3
mov
add
and
and
bound
inc
pop
dec
jnp
ds
push
aam
cwtl
sbb
adc
jb
nop
sbbb
sbb
mov
shlb
jmp
call
lcall
mov
xor
inc
fcmovnbe
aas
testb
fimull
mov
sahf
daa
jg
xchg
mov
mov
and
cwtl
das
mov
arpl
mov
push
mov
push
divb
int
fwait
add
in
dec
push
sub
fucom
in
rol
add
rorl
nop
xor
xchg
xchg
cmpsl
mov
jmp
dec
dec
xor
test
fstps
pop
ja
in
in
pop
inc
add
in
repz
add
mov
inc
add
xor
mov
lods
scas
int3
adcb
push
psllq
lcall
aam
mov
orb
dec
adc
jmp
std
idivb
mov
push
fldt
xor
push
into
add
sub
aad
cmp
pop
cmp
jecxz
pop
cmp
fldlg2
push
mov
or
pushf
mov
lcall
pushf
mov
jno
mov
fwait
xchg
aad
lods
clc
pop
jp
roll
jbe
mov
cmp
dec
gs
dec
repz
mov
pop
fldcw
aas
cmp
mov
fsubrp
shl
scas
popf
push
mov
xchg
ror
mov
sarl
mov
xchg
and
lods
call
pop
stc
in
and
cmpsb
dec
cltd
enter
icebp
enter
outsb
out
mov
daa
push
adc
fisttpll
cwtl
add
pop
adc
dec
xor
cld
xor
xchg
pop
cmpsb
aas
pusha
lods
mov
lahf
mov
movsl
cmp
xor
imull
cmpsl
movsl
pop
pushf
dec
sub
dec
imul
pushf
in
orb
int3
mov
in
mov
nop
and
in
sbb
shlb
frstor
ljmp
lcall
aaa
xor
fdivrs
repnz
rcrl
push
fsubrl
and
mov
push
scas
dec
and
sub
mov
push
outsl
cmp
pop
mov
mov
cmpsl
and
and
data16
lcall
mov
sarl
push
popa
ret
hlt
shll
imul
test
pop
cltd
push
dec
xor
int
aam
imul
lcall
push
outsb
and
xor
and
ficoml
cs
bnd
sub
imul
hlt
lock
fwait
xor
icebp
pop
mov
dec
pop
outsb
leave
dec
fadd
jo
pop
pop
pop
shl
loope
imul
pop
cmpsl
cmp
xchg
mov
lahf
shll
call
jmp
cmp
pop
push
jmp
scas
iret
cmpb
pop
test
inc
incb
ret
stos
repnz
cmp
jbe
cltd
shrl
lods
sbb
add
xchg
xor
mov
xchg
imul
push
sbb
movsl
movsb
insl
jo
mov
jecxz
mov
pushw
sahf
add
mov
lods
movsb
pop
xor
mov
or
ret
inc
push
shll
sahf
cmpsb
aam
mov
data16
mov
decb
mov
sub
xchg
ss
mov
ds
sub
sub
popf
sbb
sbb
adc
add
mov
sbb
and
cmpsb
test
xor
xor
fs
sub
lea
outsl
or
fwait
nop
cmp
and
daa
cli
int
in
aas
push
negb
lock
pop
je
stos
xchg
out
pushf
aaa
cmc
cld
ret
xchg
inc
fcompl
daa
out
hlt
je
insb
mov
es
inc
fcmovnu
push
xor
cmc
sbb
inc
data16
mov
or
int
out
xchg
leave
mov
outsl
out
data16
addl
sub
icebp
andl
orb
mov
push
adc
dec
cli
sbb
repz
push
cs
xchg
xchg
fldl
add
rorl
ds
pop
cmp
data16
push
scas
lock
adc
cli
add
test
repnz
xor
fnsave
dec
jae
jnp
mov
inc
jecxz
ret
in
das
je
daa
sub
repnz
pop
aam
mov
inc
das
xor
arpl
and
dec
int
fstpl
mov
orl
test
lods
stos
adc
sbb
rorb
mov
int3
divb
sbb
ljmp
sbb
pop
or
mov
cs
fstpt
js
sbb
mov
mov
test
add
call
mov
sub
fwait
push
jne
cmc
push
xor
stos
fwait
mov
ret
and
mov
lods
fildl
imul
or
loopne
mov
repnz
dec
push
mov
jl
jl
inc
xchg
adc
jle
push
push
sbb
fcomp
lret
cmp
adc
sbb
icebp
xor
int3
cmp
inc
shlb
adc
lret
inc
out
push
and
dec
cld
or
movsl
mov
ja
pushf
aas
divb
jecxz
pop
mov
repz
negb
mov
mov
iret
mov
mov
test
aad
push
sub
add
aam
into
push
orb
fsubrs
repz
rolb
ja
cmpsb
in
pop
lods
mov
mov
fs
mov
add
inc
dec
cmc
adc
sub
adc
push
cmp
and
popa
mov
jb
lahf
lret
std
xor
shlb
out
inc
arpl
xlat
ret
sub
les
shl
mov
pinsrw
dec
sbb
jle
jle
or
jno
fistpll
mov
jl
jle
push
lret
js
rorb
outsl
inc
mov
xchg
pop
mov
sysexit
mov
jns
mov
sub
add
xor
test
repz
mov
orl
cltd
js
lock
push
push
cmp
or
outsl
movsb
lea
stos
addr16
xor
fidivl
pop
enter
adc
aam
pop
mov
xor
nop
scas
dec
cmp
cwtl
and
sti
stos
cmp
nop
mov
clc
and
adc
and
pop
cmp
mov
movsb
mov
or
or
cmpsb
adc
outsb
pop
filds
inc
fiaddl
sub
sub
cmpsl
dec
out
push
rolb
and
mov
test
xchg
xchg
out
imul
push
mov
popaw
adc
add
jb
pop
adc
stos
shll
adc
add
bound
mov
je,pt
xor
jae
sub
pusha
xchg
mov
add
jl
jecxz
movsb
cltd
or
and
xor
inc
sti
xlat
jle
hlt
or
push
jmp
sub
es
mov
repz
mov
xor
mov
mov
pop
mov
adc
lahf
mov
inc
mov
push
stc
push
adc
pushf
movsl
jle
xor
dec
push
add
adcb
inc
int
mov
jmp
sbb
pop
mov
and
test
lods
inc
addl
in
imul
mov
sar
lahf
mov
shlb
shl
cltd
pushf
imul
ficoml
nop
xchg
dec
pop
lea
int3
xchg
sahf
arpl
inc
cmp
out
mov
filds
out
fldl
or
dec
fdivrs
pushf
dec
ja
rcr
test
stos
mov
int
lds
fildll
sub
jle
fidivrs
inc
stos
arpl
pop
pop
call
push
cmc
repz
ret
setbe
mov
jb
inc
jge
adc
imul
das
mov
mov
mov
fistps
mov
in
inc
lret
push
add
mov
jns
dec
pop
pop
sbb
ror
adc
inc
mov
mov
cmpsl
jl
pop
rcrb
pop
test
ljmp
in
rolb
pop
aas
jg
dec
push
test
cwtl
call
jns
or
decl
sbbl
scas
mov
adc
dec
mov
loop
cmc
ret
aad
pop
mov
adc
jbe
mov
add
fcoml
xchg
pop
lds
lea
loope
adc
orb
dec
or
jbe
xor
dec
jp
fucomip
xor
lcall
sbb
mov
jle
pop
js
lods
dec
jnp
mov
icebp
or
aas
rcl
sbb
out
mov
dec
cmp
sbb
lock
and
dec
or
add
fs
out
hlt
push
rcl
xchg
inc
pop
pop
mov
daa
mov
outsl
cli
sub
iret
xlat
push
xchg
inc
jle
insb
pop
xchg
lret
jl
in
sbb
scas
xchg
repz
pushf
cmpsl
fldenv
stos
js
sub
sbb
push
pop
test
outsb
in
cmc
leave
repz
hlt
jl
dec
and
outsl
xchg
pop
stos
mov
loop
in
dec
mov
push
sahf
sub
and
enter
mov
movsl
sbb
shrb
cmp
xchg
fisttpll
push
jge
out
jo
sti
cmpsl
rolb
imul
loope
ljmp
addb
jp
jbe
push
fidivrl
loope
xchg
sahf
mov
mov
mov
jl
jae
cltd
dec
add
pop
fwait
dec
jns
xor
es
data16
xchg
dec
mov
sbb
fdiv
imul
in
addl
pop
andl
shl
inc
fldenv
in
jne
cmp
mov
subl
es
add
inc
jp
js
inc
iret
aam
lret
adc
shr
push
pushf
imul
cmp
subb
add
int
dec
iret
frstor
mov
jne
stos
repnz
rclb
mov
sbb
add
mov
out
inc
ficompl
mov
mov
add
adc
das
rcll
adc
push
mov
cmpsb
pavgw
xchg
adc
add
scas
popa
sub
idivl
fbld
or
jecxz
lods
fcmovnb
out
js
out
inc
jns
test
jmp
imul
xor
add
call
mov
arpl
pop
jp
push
jb
lods
cmpsl
add
fsts
frstor
xchg
jl
adc
testb
jp
sub
xlat
call
iret
cmp
dec
push
shl
push
adc
mov
adc
hlt
loope
jp,pn
add
mov
and
xlat
sahf
cli
pop
outsb
ror
stc
push
push
pop
movsl
aas
dec
pop
enter
adc
rol
push
lods
mov
xchg
sub
enter
fsubrl
scas
fisttps
or
push
sbb
ret
xor
jmp
lock
push
outsl
add
push
ljmp
push
and
ja
cld
inc
rcrb
mov
in
mov
je
dec
pop
loopne
icebp
daa
cmp
inc
repz
mov
fiadds
iret
aas
enter
lcall
sub
fs
aam
mov
addr16
insb
fisubs
mov
inc
mov
adc
jmp
push
push
or
push
sbb
sub
cmp
push
loop
aas
jb
lea
dec
cmc
js
push
or
push
pushf
clc
mov
sub
rcll
nop
ds
cmp
push
enter
aam
pop
push
cmpsb
mov
push
sbb
add
lahf
insb
fadds
mov
jno
cmp
test
cmp
mov
xchg
jl
add
outsl
cmp
adc
jbe
fimuls
sub
stos
add
sahf
mov
pop
mov
cld
not
and
jbe
in
mov
addr16
dec
aam
test
aaa
addb
daa
insl
xchg
xchg
xor
xor
push
xor
aad
insb
mov
ds
testb
in
push
rorl
dec
shlb
sarb
xchg
arpl
cmp
loopne
xchg
outsb
imul
mov
cwtl
sbb
jmp
pop
out
add
jp
push
pop
mov
push
xor
bound
mov
aaa
push
mov
sub
or
icebp
jle
out
dec
lret
leave
cmc
pop
stos
rcr
or
jbe
jecxz
jnp
adc
push
imul
adcl
fisttps
pop
sti
mov
jne
movsl
sbb
lods
xorb
jp
out
leave
lea
repz
stos
std
mov
iret
cmp
ljmp
adc
out
dec
call
jecxz
mov
pusha
jmp
rorl
push
sub
shrl
lock
movsl
sub
lds
into
mov
lea
dec
int
bound
mov
es
pop
mov
ret
test
dec
insl
pusha
cmpsl
popf
inc
out
pushf
mov
in
sbb
or
es
dec
xchg
cmpsl
xchg
bound
test
adc
dec
cmp
test
addr16
cld
cmp
mov
testl
add
xor
pop
xor
jno
cmp
pop
or
jns
out
xorb
xchg
mov
mov
xor
lret
ret
lea
jo
and
hlt
jnp
adc
mov
or
dec
shll
das
mov
rcrb
xor
jbe
xchg
stos
cld
xor
js
cli
fcoms
push
lcall
lods
jle
mov
sub
mov
jnp
cmc
mov
movsl
mov
xchg
clc
jno
negl
dec
gs
inc
test
jo
mov
in
rclb
push
sub
sbbb
repz
cli
imul
loop
dec
fucomp
push
pusha
push
cli
inc
jecxz
and
pavgw
fstps
fs
cmp
aaa
repz
push
aad
insl
xchg
and
scas
xor
out
dec
cmpsb
mov
das
adc
nop
fyl2x
push
or
in
subl
js
adc
loope
jge
clc
and
sbb
xor
inc
mov
pop
xchg
xchg
lcall
lods
inc
iret
jno
shll
push
ret
jae
subl
into
push
loopne
loope
add
sti
sbb
fidivs
and
adc
jo
cmp
cltd
dec
inc
and
aas
sahf
adc
rcr
xlat
dec
push
pop
sbb
xlat
mov
idivl
cmp
and
mov
jmp
cld
push
ds
mov
cli
xchg
mov
lds
popa
imul
jecxz
hlt
xor
jg
es
adc
cmpb
jge
cmp
int3
fsubr
clc
mov
cwtl
out
outsb
shll
mov
cmp
daa
xchg
scas
xor
lret
xchg
xchg
ds
nop
cmc
call
or
or
in
mov
push
jnp
sar
mov
jle
push
add
ret
pop
push
test
inc
inc
stc
or
dec
and
mov
lret
ss
das
add
out
mov
nop
jg
imul
fdivl
jge
scas
sbb
dec
push
jb
xchg
lock
mov
cltd
push
call
hlt
mov
addr16
jns
into
movsb
push
adc
xchg
call
pop
sahf
idivl
ljmp
data16
mov
pop
mov
mov
gs
push
inc
icebp
test
lea
pop
jns
xchg
mov
daa
pop
adc
push
xchg
popa
sarl
mov
xor
inc
cmp
xchg
mov
cwtl
push
inc
add
or
sbb
int3
pop
inc
sbb
jg
add
insl
or
cltd
aas
cmpl
repz
cwtl
mov
mov
adc
orb
cmp
mov
cltd
xor
pop
add
mov
daa
mov
mov
or
orb
dec
sbb
ds
cmp
mov
cmp
stos
js
adc
xchg
in
and
add
fidivrs
fisubs
shl
cmp
cld
in
scas
scas
cltd
dec
mov
cs
out
into
dec
cli
lcall
add
adc
or
mov
add
sbb
loope
mov
sarl
jae
mov
sbb
sbb
sti
inc
jge
sub
dec
adcl
cltd
lahf
test
stos
mov
xor
mov
sbb
add
gs
pop
into
pusha
mov
cwtl
inc
stos
sub
xor
gs
aad
lods
cmp
jge
pop
jge
fildl
cmp
inc
push
js
mov
mov
decl
aad
inc
sbb
add
add
xor
loopne
and
adc
push
popa
cmovns
jecxz
xor
dec
rorb
ret
pop
xchg
vrcpps
lret
jge
stc
lret
dec
cwtl
xlat
inc
xchg
ret
fnstcw
cmpsb
out
push
cmp
mov
sub
hlt
push
out
lods
xlat
jmp
rcr
dec
xchg
jno
pop
push
imul
xchg
test
pop
and
or
dec
and
xchg
jno
std
jnp
pop
addr16
stc
scas
xchg
jle
pop
call
test
jmp
add
adc
addr16
sub
mov
shll
mov
out
out
jno
inc
inc
dec
test
test
pop
add
xchg
mov
mov
mov
sahf
cmpsl
xor
adc
inc
sub
popf
dec
mov
jbe
std
pusha
dec
loop
cmpsl
lahf
movsb
push
ja
icebp
nop
out
das
aaa
inc
push
pushf
shrb
imul
sbb
cmpsb
jmp
xchg
dec
cmp
in
out
enter
iret
gs
lret
int
mov
mov
pop
adc
add
xorb
sbb
sbb
clc
and
out
dec
jg
bound
mov
orb
jne
inc
fs
push
adc
mov
mov
pop
pop
push
adc
lock
sub
and
cmp
mov
add
movsb
pop
ret
adc
or
js
add
rcr
mov
imul
jl
push
mov
shlb
or
mov
cld
sub
mov
push
imul
add
pop
lds
incb
mov
out
adc
mov
aam
jp
lcall
loop
je
fstpl
sub
cld
pop
mov
lods
outsl
dec
icebp
push
cmp
push
push
fwait
lods
cmp
mov
jmp
sbb
cmp
call
aas
xchg
jns
and
je
mov
jge
pop
jns
iret
or
sbbb
ja
insb
outsb
push
pop
pop
add
mov
add
cltd
ja
sub
push
mov
in
mov
inc
cmp
lods
push
ljmp
add
cmp
pop
add
leave
adc
scas
and
cmp
rorb
mov
adc
pop
mov
iret
fwait
repnz
mov
into
repz
mov
xor
fsubp
and
sbb
jbe
adc
bound
jecxz
jl
call
sbb
js
or
scas
xor
sbb
scas
shl
daa
add
adcb
loop
shr
pop
inc
addb
pop
cmp
dec
leave
stc
fwait
adc
mov
loope
pop
jno
mov
mov
int
mov
or
ss
arpl
aad
fnstsw
inc
and
gs
xor
xor
cmc
ss
push
das
popf
mov
icebp
and
sub
xchg
in
mov
sbb
repnz
nop
jge
loopne
clc
repnz
push
movsl
cmpsl
divb
je
addr16
or
adc
xchg
push
clc
or
xor
jo
mov
sbb
in
imul
insl
xchg
fcompl
call
pushw
mov
mov
push
jmp
push
jg
jle
jns
mov
fs
pop
mov
cmpsb
movsl
cmp
adcl
push
xor
cmpsb
stos
pop
or
mov
gs
stos
loop
aas
sahf
push
iret
filds
fnstcw
aad
add
mov
xor
jmp
push
inc
pushf
lret
inc
loope
dec
add
sub
mov
xor
or
andb
call
jmp
adcb
mov
test
mov
fidivs
push
lea
mov
and
add
jmp
inc
nop
fs
ljmp
or
mov
mov
pushf
fidivrs
sti
cmp
dec
jl
out
dec
cmp
outsl
push
pop
jle
sub
andl
notl
inc
or
inc
mov
shll
es
or
jp
cli
jo
sahf
gs
in
add
out
int
xor
push
and
adc
out
or
cmpb
into
cmc
cmpsb
pop
mov
push
outsb
in
hlt
pop
lds
out
lods
sub
pop
cmpsb
pop
jmp
pop
lahf
bswap
ret
out
adc
push
mov
dec
dec
jo
cmpsb
xchg
add
mov
cld
push
add
fsubrp
popa
adc
xlat
cs
add
jecxz
insl
xchg
push
sbb
addb
stos
loope
out
insb
mov
push
scas
subl
adc
dec
pop
mov
cmp
repz
cmpsb
pop
into
sarl
mov
dec
push
bnd
das
outsb
cltd
fnsave
addr16
xor
fwait
mov
push
enter
leave
xchg
xchg
loopne
mov
jle
xor
or
loopne
daa
sbb
pop
cld
cmp
movsb
pop
andb
icebp
jnp
dec
or
mov
fwait
mov
cwtl
sbb
cmp
or
adc
test
sbb
mov
lock
inc
and
xor
movsb
mov
or
outsb
hlt
test
and
adc
xchg
mov
cld
inc
jmp
push
negb
les
aad
js
cmc
mov
sbb
cmp
lret
mov
xor
inc
mov
push
push
test
add
pop
icebp
xor
push
daa
leave
sbb
mov
pop
cmc
adc
add
shlb
out
ret
jl
cmpsl
add
sbb
iret
sbb
stos
xor
insb
test
scas
xchg
sbb
mov
sti
xchg
in
outsl
rclb
pop
mov
addr16
dec
into
adc
data16
mov
lret
lods
out
mov
xchg
rcrl
out
sahf
pop
jo
pop
repnz
and
ss
cltd
dec
insb
add
mov
fildll
psubusb
testl
andw
add
fstpl
sub
mov
and
scas
idiv
imulb
xlat
cmp
sahf
lds
push
fbld
aad
xchg
jl
ret
stc
add
sub
inc
xor
aad
scas
das
aaa
sarl
xchg
sbb
push
xchg
adc
bound
into
and
or
mov
and
pop
jno
mov
mov
dec
jae
and
loop
pop
sbb
add
out
dec
scas
enter
jle
idivb
mov
dec
lods
test
mov
ds
or
iret
cmp
leave
in
xor
dec
mov
fimull
xlat
mov
cmc
jnp
mov
and
daa
sarl
or
cmp
ljmp
cmpsb
repnz
sub
je
std
jg
and
sub
push
jecxz
adcb
mov
mov
xor
xlat
mov
cli
dec
lock
mov
xchg
das
or
orps
outsb
xchg
std
gs
mov
mov
pop
rcrl
aad
xor
mov
sti
cmc
nop
mov
and
sub
mov
jbe
pop
jg
gs
push
daa
bound
adc
sti
popl
and
ds
out
aas
cmp
pop
hlt
cmc
push
cmp
sbb
cmpsb
lret
push
int
inc
jecxz
bound
or
inc
insb
pusha
mov
add
jno
imul
xchg
shrb
xchg
dec
xchg
pushf
outsb
inc
add
scas
fbstp
pop
mov
gs
ret
jg
movb
jg
push
pop
pop
xchg
inc
rorl
scas
repz
fstps
sub
mov
repz
mov
and
rcll
rolb
push
pop
push
lods
inc
xor
sbb
sub
in
dec
pop
add
cmp
imul
inc
rolb
jmp
push
or
lcall
fiadds
push
jnp,pt
imul
ja
out
push
xchg
in
mov
sub
sbb
and
pop
xlat
shll
dec
mov
scas
jnp
mov
and
mov
pop
arpl
fists
fs
inc
stc
fs
adc
push
sbbb
mov
push
insb
stos
add
and
push
les
std
mov
or
jns
das
movsb
adc
inc
shrb
push
addl
or
lcall
mov
ja
in
jp
inc
adcl
pop
gs
xchg
shl
push
sbb
jnp
lods
sbbl
test
jne
stos
xlat
repz
push
mov
pop
lcall
scas
cmp
and
mov
dec
cmpsl
mov
out
iret
lret
inc
and
adc
stos
or
pop
mov
sbb
mov
jnp
inc
rorb
pop
jno
in
jae
and
shll
xor
xor
scas
pop
sub
stos
pop
iret
inc
enter
cmc
sbb
stc
adc
mov
lods
mov
or
xchg
pop
loop
jnp
jno
out
aam
push
mov
repz
xchg
je
or
adc
popa
rcrb
rcrl
xor
dec
inc
lcall
testb
sub
jge
dec
jp
iret
es
sahf
push
shrb
rcr
rcrb
pop
and
outsb
adc
jp
xchg
aad
jl
out
fdivs
lds
je
and
leave
fcmovnbe
lds
xor
add
xchg
cltd
test
sub
fsubrs
inc
xchg
icebp
scas
sbb
add
subl
lret
adc
out
jg
dec
xor
dec
and
iret
loopne
xor
sub
cmpsb
push
shrl
and
push
shl
repz
mov
lret
int3
mov
in
in
lds
imul
lods
imul
scas
lret
sub
inc
pop
hlt
add
lods
mov
ds
push
aas
cmp
xlat
clc
dec
ret
movsl
lea
sub
imul
push
in
xorb
insb
sbb
cltd
mov
pop
imul
mov
mov
and
mov
mov
ret
jmp
cmpb
mov
shll
aam
pop
jno
pop
mov
mov
mov
mov
dec
adc
ljmp
mov
cmpsb
xchg
loop
cmp
cmp
movsl
leave
jns
mov
push
pop
sbb
and
mov
sub
jp
sbb
add
or
adc
and
shll
mov
movsb
add
adc
xchg
add
sbbl
iret
pop
sub
cmp
insl
int3
aad
stos
inc
int3
adc
dec
or
in
or
imul
inc
mov
xchg
mov
hlt
mov
add
xor
xchg
pushf
inc
or
repz
xchg
lret
int3
cmp
xor
lret
jp
mov
mov
hlt
inc
sbb
sub
jno
das
inc
mov
cmp
mov
hlt
gs
lret
or
mov
jnp
sbb
sbbl
jl
mov
sbb
mov
sarb
add
push
mov
cmp
add
jo,pn
ret
in
dec
cmp
jmp
mov
sub
push
stos
mov
mov
push
clc
or
call
cmpl
jp
mov
sbb
loop
and
mov
mov
and
fcmovu
mov
add
lret
push
inc
inc
mov
push
inc
leave
inc
xor
or
mov
stos
push
dec
xchg
clc
dec
xor
icebp
pop
and
and
pop
pop
scas
xlat
icebp
dec
and
lods
into
aam
lret
dec
jbe
adc
shll
add
inc
out
sarl
enter
ret
sarb
inc
inc
stos
movsb
or
in
ret
stos
push
or
fstl
and
sbb
ds
int3
jns
pop
add
sbb
sbb
mov
call
aas
xchg
lods
loopne
pop
adc
mov
dec
add
shll
jp
mov
rcl
mov
pop
orl
lods
in
inc
pop
pop
lret
addr16
mov
mov
jmp
adcl
or
dec
mov
push
cwtl
xchg
inc
test
pop
adc
sarb
enter
mov
and
push
pop
addr16
lea
add
jo
loop
shlb
inc
in
lret
push
in
clc
jns
outsb
mov
and
inc
les
cmpl
adc
lret
add
mov
popa
js
imul
inc
dec
loopne
sub
jecxz
out
xchg
sbb
cmpsl
mov
and
out
imull
or
aaa
pop
mov
push
inc
aas
xchg
add
pop
stc
lods
loope
je
pop
testb
sbb
iret
or
je
ja
jo
decb
xchg
sahf
sbb
xor
into
aam
push
cmc
shll
sbb
ret
out
pop
mov
outsb
inc
pop
cwtl
fildl
int3
sbbb
push
jno
enter
push
gs
push
bound
inc
and
jl
int
xor
test
and
or
add
fld1
lods
push
scas
push
mov
mov
mov
pop
add
popf
xchg
jo
insl
pop
sbb
std
inc
pop
sbb
popaw
rclb
xchg
addr16
test
es
pop
js
jns
sub
mov
and
mov
imul
pop
ds
les
out
call
fwait
add
hlt
ss
movsl
jge
jno
shr
imul
mov
jae
aaa
icebp
pop
incl
or
ret
cwtl
orl
xor
mov
cmpsb
mov
ret
cmpsb
das
in
mov
call
int3
dec
jne
push
pusha
fidivrs
push
sbb
lds
xor
push
repnz
sbb
mov
pop
aam
dec
inc
outsl
mov
pop
xor
fidivl
push
push
mov
scas
xchg
jmp
inc
mov
xor
fldl
xor
push
jne
aaa
enter
popa
les
stc
push
fwait
cmp
xchg
sarl
mov
or
mov
mov
dec
xchg
mov
cmp
test
sbb
pop
movsl
enter
pushf
xchg
test
inc
lcall
push
notl
enter
js
insb
push
mov
inc
mov
jecxz
sbb
jnp
clc
cmp
xor
outsl
shl
je
mov
mov
ljmp
fisttps
add
jo
lods
xchg
test
xor
hlt
addb
push
push
loop
stos
dec
mov
das
cltd
xorb
pushf
or
xchg
xchg
sub
stos
inc
outsl
lods
xchg
cmp
pop
ja
dec
mov
sub
inc
cmp
pusha
sbb
les
mov
mov
add
mov
out
jecxz
ffree
pop
sbb
sahf
mov
push
adc
or
push
xorb
dec
add
cwtl
inc
cmp
scas
push
xor
loopne
ja
addr16
mov
adc
imul
mov
adc
imul
test
or
aad
out
pop
fcmovne
sbb
lahf
dec
mov
push
xor
bound
pop
and
repnz
repz
mov
mov
jl
dec
xchg
movsl
out
rcll
xrelease
adc
cltd
test
aaa
or
push
lret
int
jge
jns
rolb
mov
xchg
clc
into
xor
adc
mov
cmpsl
sbbb
xlat
adc
leave
lret
stc
outsb
mov
pop
int
pop
jmp
inc
xchg
cs
sbb
mov
fcom
mov
rorl
sarb
mov
pop
adc
insb
cli
pop
int3
movsb
and
xlat
dec
imul
mov
jp
and
xor
dec
pushf
add
adc
xor
stc
lahf
pusha
add
adc
fwait
icebp
xchg
ss
test
inc
jno
sahf
rcr
add
fs
inc
push
mov
rcrl
sti
pop
shrb
mov
iret
or
jg
loopne
mov
das
sbb
pop
cmp
nop
inc
hlt
scas
jmp
xor
dec
xor
cmpsb
xchg
aaa
lahf
ret
xor
hlt
std
add
mov
push
jp
aad
sbb
cmp
mov
inc
cmp
hlt
or
push
mov
mov
adc
outsb
push
fwait
popf
nop
or
jge
insl
into
add
sbb
and
cmpsl
popf
mov
cmp
inc
notl
mov
jnp
pop
setae
jmp
cmp
fwait
cmp
fildll
dec
jmp
int3
inc
dec
pop
movl
fstpl
jns
dec
test
xchg
sbb
vmovaps
arpl
in
movsb
insb
adc
and
sbb
nop
clc
mov
stos
pop
ljmp
test
jb
jne
call
add
pop
pop
jbe
cmp
inc
in
cmp
mov
push
dec
dec
and
jg
popf
xor
lods
inc
xchg
push
adc
jecxz
leave
shr
dec
sbb
push
js
or
xchg
inc
inc
push
mov
push
dec
aaa
mov
xor
pop
test
mov
pop
jne
cmp
and
mov
popf
in
movsb
std
dec
sbb
dec
push
movsl
adc
cmp
cmp
hlt
adc
mov
jo
mov
shll
scas
push
scas
pop
ret
push
jo
call
call
adc
mov
pop
outsb
incb
addr16
xchg
rorl
sub
adc
dec
decl
movb
aaa
add
mov
mov
jo
lcall
jp
leave
sub
repnz
ret
nop
out
pop
sbb
jge
inc
out
jns
sti
movsl
loop
lods
addr16
inc
aaa
mov
cs
push
je
test
sub
loopne
xlat
cmpl
shl
xor
jecxz
dec
adc
testl
ret
xlat
cld
sub
in
popf
jg
pop
cmc
in
jmp
rcl
cld
mov
push
sbb
shl
bound
ja,pn
rcrl
cmp
mov
or
push
cmp
aad
cltd
mov
mov
in
pop
sub
sti
jne
dec
and
outsb
mov
js
add
fbstp
in
mov
inc
sub
imul
iret
pushw
ror
fldenv
push
pshufw
or
out
xor
pop
repz
push
testb
clc
repnz
adc
or
in
jno
cmp
iret
cmp
xor
mov
stc
xor
jge
push
jb
mov
pop
pushf
std
add
add
pop
inc
loop
ljmp
icebp
sbb
push
das
insb
fisttpl
gs
inc
insb
xlat
mov
fidivs
pop
movsb
popa
mov
or
jo
jmp
loopne
movsl
sbb
loop
ret
outsl
or
fcomps
and
movsl
jle
loope
add
inc
aas
cltd
pop
and
pop
fwait
dec
sarb
sbb
in
enter
loop
arpl
cmp
mov
popa
cli
daa
xchg
stc
jne
jp
scas
add
test
jl
cli
and
lret
int3
mov
inc
outsb
dec
xchg
adc
les
xchg
jns
pop
in
fcmovbe
inc
out
rcll
out
adc
add
pop
or
xchg
test
adc
jnp
mov
testb
cwtl
in
inc
xchg
into
and
lcall
in
aaa
mov
mov
cwtl
jge
inc
fisttps
icebp
in
scas
sub
mov
aaa
or
sbb
cmp
xchg
xchg
mov
js
shll
sarb
stc
lret
mov
jecxz
enter
mov
sbb
mov
pop
clc
or
es
das
mov
jae
js
insl
sbb
dec
dec
das
xchg
imul
jge
and
mov
scas
insl
dec
insb
enter
stc
xchg
sub
push
sbb
cmp
sbb
dec
mov
jb
cmc
xor
dec
jmp
pop
mov
lcall
pop
push
ja
fidivrl
imul
adc
notl
sahf
test
inc
ret
mov
dec
xor
add
adcl
or
mov
loope
jmp
bound
sahf
and
movsl
xchg
fucomp
repnz
sahf
pushf
xchg
rorl
mov
mov
scas
cmpsb
mov
lods
and
in
sub
ljmp
add
inc
cmpsl
int
iret
push
xor
pop
sub
jmp
mov
inc
and
xchg
dec
rclb
rorl
js
pop
into
cmpl
push
sub
ret
sbb
mov
or
sub
jle,pn
hlt
dec
and
mov
cmp
out
dec
xchg
lret
mov
es
jl
xchg
ret
push
xchg
outsl
adc
cmp
loop
dec
mov
or
dec
jle
sub
imul
rclb
fmuls
fistl
mov
jae
cmc
mov
aas
rcr
ret
add
lret
and
push
pop
sub
outsl
lahf
in
repnz
mov
sub
scas
gs
arpl
cmpsl
int
sbb
aad
xchg
mov
stc
or
shlb
xchg
cmp
imul
jo
sub
xchg
sub
mov
xchg
dec
jno
dec
shll
xchg
jb
fidivl
sti
lea
movsb
fs
scas
lds
fstpl
adc
xchg
push
not
and
daa
repnz
inc
fwait
push
dec
mov
in
add
push
cltd
bound
lea
pop
cmp
xlat
shlb
sub
lcall
mov
sub
push
rorl
lds
mov
lods
loope
in
negb
popa
mov
dec
cwtl
push
mov
mov
jmp
sti
sbb
movsl
outsb
xor
stc
dec
ja
lea
and
mov
lods
aam
dec
xor
add
cli
sahf
aam
lods
shlb
pop
stos
jmp
jecxz
aas
stos
xor
xchg
push
frstor
cs
add
sahf
leave
pop
mov
mov
xchg
adc
stc
xchg
loopne
popf
in
xor
cmp
subb
into
fildll
aad
data16
and
loop
dec
arpl
inc
cld
mov
push
loope
xchg
inc
mov
cmp
pop
scas
jae
mov
insl
pop
lahf
cs
adcl
xchg
sahf
push
stos
sub
jbe
push
inc
pop
mov
lea
adc
arpl
add
mov
js
xor
rcrb
pop
cltd
sarb
and
mov
inc
out
mov
cmp
cmpsl
es
sbb
or
and
addr16
cmpsb
stos
pop
outsl
frstor
ret
stos
mov
xor
mov
daa
movsb
out
loopne
insb
add
int3
ss
lods
in
and
in
imul
sbb
ljmp
jns
pop
sub
pop
xchg
fucom
mov
cmp
stc
push
cmp
xchg
sub
xchg
loope
ret
cs
mov
popa
in
mov
ss
scas
stos
adcb
and
movsb
pop
ret
inc
jp
rclb
xchg
sahf
mov
enter
xor
sbb
pop
ret
lret
jbe
fwait
push
and
pop
push
push
cwtl
jl
jb
jbe
cmp
int
fucom
repnz
or
fsubp
pushl
cs
rolb
cli
stos
mov
aas
and
clc
mov
int3
gs
pop
xor
pop
iret
pop
loope
test
lds
hlt
test
nop
ljmp
or
pushf
ja
xor
mov
jp
ja
dec
add
mov
dec
jae
jp
cld
inc
xchg
and
xor
gs
mov
or
lds
shll
rorl
cwtl
sbb
pop
or
sbb
and
test
das
int
cmp
sahf
icebp
xchg
pushf
mov
xor
dec
inc
in
xor
mov
inc
inc
in
jmp
mov
negl
ret
pop
cmpsb
mov
imul
ss
insl
pop
xchg
mov
movsb
inc
inc
repnz
lds
xchg
insl
rclb
adc
aam
xchg
sub
xor
sbb
repnz
divl
add
shll
xlat
sub
cld
mov
mov
xor
int3
sub
xor
loopne
and
imul
push
xor
mov
sub
rcrb
insb
cmp
add
and
test
lods
xor
into
in
mov
pop
jl
xchg
push
scas
lds
dec
fs
push
jo
jge
scas
xchg
pushf
outsl
jbe
lods
jno
fistps
leave
out
mov
push
jae
dec
add
movsl
dec
repz
cwtl
sahf
pop
mov
jo
cmp
ret
xor
mulps
push
ficoms
pop
fwait
lahf
dec
fisubrl
adc
xor
mov
cmp
mov
and
out
lcall
xchg
push
lods
das
xchg
mov
pop
pushf
insl
ds
sbb
jmp
cs
inc
push
popf
lock
jb
cmpsb
push
in
jecxz
adc
scas
scas
repnz
sbb
jne
or
ljmp
sbb
fidivl
pushf
insb
lea
pushf
into
gs
jo
cmp
out
out
ds
adc
or
scas
lods
dec
and
insl
add
add
mov
aas
lret
xor
xchg
fsts
inc
ds
mov
adc
xchg
movsl
mov
testl
cmp
addl
sbb
lock
scas
cli
jo
cmpsb
xchg
lret
imul
or
push
add
stc
int3
and
sub
jecxz
push
mov
out
hlt
pushf
or
pop
and
xchg
mov
mov
in
pop
test
addr16
cli
insl
pop
push
lret
mov
pop
jmp
jg,pt
xor
xor
ror
clc
adc
xor
xchg
cmc
or
lret
sub
jb
mov
gs
mov
loope
adc
mov
movsl
mov
icebp
pop
mov
repnz
pop
sub
ret
push
stos
ds
ljmp
imul
in
lret
stc
and
xchg
add
lods
add
repz
add
in
rol
into
je
adc
rcrb
fmulp
aas
mov
cmp
test
ret
dec
mov
repnz
mov
cli
dec
popf
psubusb
ds
and
push
sub
fcmovnu
out
test
test
imul
js
push
aam
jle
pop
push
repnz
lds
mov
dec
gs
jge
xor
pop
test
push
xor
cs
mov
cmp
add
sub
push
imul
or
pop
jmp
xchg
lock
add
inc
aas
insb
lret
inc
jae
sub
sbb
repz
inc
fists
test
negb
dec
mov
pop
test
adc
jmp
aas
or
cs
cwtl
and
cwtl
push
jmp
jnp
pushf
popf
mov
mov
subb
adc
xchg
insl
ficompl
cltd
mov
xchg
popf
or
je
jb
das
addb
jns
push
mov
sbb
and
jbe
add
jmp
or
sub
pushf
ljmp
in
fiaddl
fldcw
mov
mov
mov
push
ficompl
fists
add
push
notb
xor
inc
call
arpl
je
sarb
stc
jo
in
xchg
in
add
push
xchg
and
or
cmp
test
loopne
inc
sub
jg
ds
dec
scas
fsubrp
aaa
nop
bound
push
inc
adc
jg
sarl
mov
scas
push
inc
jmp
sub
movb
cmp
adc
outsl
popa
inc
sbb
or
in
in
mov
dec
lret
imul
dec
into
lret
fld
mov
popf
hlt
or
mov
inc
push
ljmp
jne
call
mov
fdivrs
test
mulb
inc
test
roll
mov
out
js
xchg
test
sub
in
test
cmp
dec
sub
movsl
inc
repz
xchg
xchg
xor
aas
mov
xchg
iret
stc
mov
mov
jne
xor
pop
inc
xchg
jno
jne
loopne
jae
daa
sbb
je
cmc
or
fisubl
add
rorb
int3
cmp
push
jl
mul
lock
inc
add
pushf
adc
cs
jbe
xchg
push
add
fstp
mov
and
jae
cmp
pop
inc
mov
jecxz
aas
out
mov
xlat
pushf
add
in
inc
add
mov
loope
adc
fwait
je
jg
push
xor
inc
icebp
jge
syscall
ss
xchg
pop
add
cmpsl
push
ret
mov
cmp
das
lods
dec
sbb
cmp
jo
sub
dec
pop
jp
push
mov
call
mov
dec
inc
xchg
pop
and
jp
es
rcl
cmp
ds
and
add
mov
nop
iret
cld
loopne
xchg
shl
push
push
lcall
loopne
orl
arpl
stos
jle
pop
shl
jp
fsubs
pop
adc
ret
int3
mov
dec
mov
sub
inc
shr
lods
mov
cli
inc
pop
cwtl
fistl
xorb
pop
cmpb
dec
push
pop
push
dec
ja
and
xchg
mov
jno
push
xchg
and
jno
inc
int
sbb
mov
inc
mov
mov
push
out
push
adc
outsb
out
push
andb
xchg
push
mov
xchg
iret
shrb
xchg
dec
jne
mov
in
lahf
into
loope
sbb
js
jg
fwait
xor
out
or
out
cmpsb
inc
jecxz
jmp
mov
and
movsl
shrb
mov
jae
xchg
and
add
adc
mov
mov
orl
sbb
cld
mov
mov
xor
out
jmp
pop
daa
in
ds
aam
ljmp
cmpb
push
shrb
pop
or
adc
sarl
arpl
mov
mov
xchg
fdivrl
inc
cmp
pushf
inc
and
mov
lcall
mov
dec
dec
stos
pop
movsb
dec
push
mov
mov
pop
out
fwait
rol
imul
rclb
jmp
test
xor
popf
int
xchg
xor
call
sbb
jl
cmp
mov
sbb
mov
dec
aam
sbb
call
cltd
xorb
fstpt
xchg
fwait
fwait
pop
out
jp
and
dec
scas
clc
outsb
pop
mov
or
loop
imul
sbb
in
sub
and
sti
lock
sub
fucomip
sub
add
out
test
data16
ret
pushf
jg
mov
in
test
cmp
and
mov
shlb
in
jo
insb
sbb
mov
pop
dec
jl
push
std
idivb
cmpsl
xlat
sbb
ljmp
mov
shl
jg
ficoml
inc
pusha
adc
adc
sti
mov
insl
adc
add
inc
jbe
pusha
jnp
cwtl
push
out
imul
imul
jl
dec
inc
outsb
adc
mov
inc
in
push
popf
mov
jae
cwtl
int
and
jp
aad
add
pop
cmpsl
push
int
push
mov
roll
inc
add
mov
or
stos
and
iret
dec
enter
jmp
fnstsw
fmuls
gs
and
or
xor
mov
pop
sarl
xor
sahf
sahf
add
into
pushf
sub
aaa
mov
out
xchg
xchg
ja
inc
mov
loope
outsl
inc
testb
cmp
loope
orl
cmpsl
jle
in
or
cmp
jp
inc
push
loopne
mov
stc
xchg
add
sti
addr16
xlat
popa
shlb
jno
dec
push
sti
push
insb
sub
test
fisubrs
cld
and
aad
fs
push
jl
aas
xor
stc
imul
adc
push
fsubrs
push
fbld
addr16
cs
frstor
idivb
iret
dec
xor
test
xor
push
cwtl
insb
xchg
pop
mov
lods
fwait
jnp
sbb
mov
mov
add
repnz
icebp
pop
daa
cld
pop
mov
jecxz
aad
sti
rcr
and
sbb
inc
aaa
jp
test
into
fwait
jecxz
mov
add
cmp
sar
fbstp
cmp
or
inc
aaa
lods
adc
push
dec
push
ja
stc
push
ret
pop
test
pop
push
mov
popf
add
pop
mov
repnz
test
scas
rorl
mov
out
int
jbe
xor
shrl
js
into
xchg
add
pop
in
test
push
sbb
push
in
fdivl
xor
sahf
test
hlt
xlat
dec
dec
loope
out
pmulhuw
inc
xchg
jne
xchg
dec
mov
pop
xchg
in
stos
lock
stc
mov
jo
das
js
ficompl
addr16
repnz
std
xor
cli
adc
sbb
add
xchg
sub
add
std
xchg
jg
and
mov
aad
popf
pop
xchg
movsb
mov
into
or
jns
jmp
outsl
push
data16
add
push
add
sbb
sti
ffreep
in
sub
in
inc
pop
gs
rolb
scas
fs
movlps
pop
xor
adc
mov
sbb
or
lea
repz
mov
push
mov
jg
ror
aam
and
cmpsb
negb
add
and
pusha
mov
mov
lahf
mov
fbstp
popa
aas
cld
aad
movsb
mov
push
inc
adc
jge
mov
pusha
iret
rol
into
mov
jbe
or
push
jns
mov
jp
inc
mov
stc
daa
xor
mov
ret
cmp
stos
xchg
dec
cmc
movsl
cmpsb
orl
push
js
iret
scas
xor
xchg
clc
push
or
bound
repz
frstpm(287
gs
shrb
sub
sbb
leave
mov
jmp
pop
out
enter
pop
jecxz
addr16
add
incl
fistpll
popf
jmp
and
in
cld
or
out
add
mov
lds
loop
pop
dec
jmp
test
cmp
add
mov
mov
jno
out
adc
rcl
jne
insb
fwait
nop
xchg
mov
dec
lods
dec
mov
test
sbb
test
popa
push
arpl
lret
arpl
mov
cmp
mov
push
push
xchg
int3
outsl
mov
mov
inc
mov
loopne
mov
push
sub
mov
jle
jno
or
mov
jl
sub
pop
inc
fisttpl
incl
mov
notb
sbb
lcall
push
push
out
or
sbb
jbe
daa
into
add
or
outsb
loopne
lret
dec
adc
lds
sub
push
jmp
push
adc
inc
pushl
popf
int3
xchg
mov
add
ss
lret
sub
add
cmp
pop
jno
outsb
pop
pop
jmp
dec
jg
bnd
sbb
sahf
ror
and
ss
sahf
inc
mov
inc
mov
mov
cmp
pop
jno
aaa
add
outsb
xor
push
add
int
sub
scas
pop
test
jo
and
loopne
xor
sub
mov
mov
xor
jb
test
fs
test
mov
or
in
stos
stc
pop
inc
pusha
in
push
addl
pop
movsb
mov
adc
lods
jmp
out
lcall
out
cwtl
xchg
sub
add
add
mov
adc
mov
inc
xor
mov
imul
pop
cmp
int
push
add
rcrb
push
dec
lret
ret
or
lods
lods
mov
and
int3
push
movsb
popa
ljmp
add
in
lret
rcrl
sub
mov
cmp
es
sahf
or
in
mov
xchg
movb
ret
xor
add
inc
pop
fcomp
jmp
stc
add
sub
ficompl
test
iret
inc
faddl
mov
inc
ret
adc
test
inc
pop
lret
cmp
xchg
ffreep
rorl
cld
add
ja
lods
mov
and
dec
clc
xorl
and
sub
mov
negl
cwtl
add
jmp
test
call
fsub
call
inc
pop
or
test
shl
std
es
hlt
mov
jnp
out
cld
dec
mov
inc
mov
mov
lea
push
add
mov
cli
stos
shll
mov
out
in
add
inc
or
xchg
clc
xor
cmp
lock
adcl
sbb
icebp
xchg
pop
lock
movsl
push
iret
daa
sbb
incl
xchg
ljmp
scas
mov
mov
pop
movsb
add
cmp
push
xlat
adc
lods
das
xchg
mov
push
pushf
adc
inc
shr
pop
inc
xchg
rorb
push
mov
dec
ljmp
cmp
jns
sarb
pop
pop
out
enter
inc
jl
test
in
mov
adcb
mov
test
pop
out
icebp
outsl
mov
or
and
rorb
mov
inc
dec
sub
jb
aam
sub
mov
imull
jecxz
pushf
push
ficomps
hlt
cmp
pop
or
and
std
test
outsb
out
adc
loope
imull
das
pop
adc
or
push
daa
shll
cltd
jns
int3
ffree
xor
sub
call
push
xchg
sbb
test
lret
leave
adc
xor
dec
repz
sahf
mov
nop
add
xlat
push
sbb
or
into
inc
mov
pop
dec
add
adc
xor
jb
adc
subl
loope
addb
loopne
and
adcb
cli
cltd
stc
pusha
enter
jg
call
es
ljmp
sbb
jg
loopne
out
push
mov
fsub
mov
xorl
jle
jmp
cwtl
push
or
jae
mov
jns
lahf
iret
js
test
nop
clc
add
insl
adc
mov
mov
pop
xor
inc
js
arpl
sub
add
stos
ret
into
ja
mov
bound
fnstcw
push
or
jae
mov
movsb
loopne
xor
pop
mov
push
lahf
mov
push
ss
fucomi
lret
lds
lods
xchg
ds
mov
sub
decl
fnsave
cmp
cltd
pop
push
mov
xchg
mov
pop
data16
and
add
test
jle
outsb
fistl
and
sub
and
sbb
punpcklbw
stos
mov
outsl
and
sbb
dec
outsb
add
pop
stos
movsl
adc
lret
xor
inc
adc
jne
push
call
adc
sahf
repnz
shll
repz
adc
lods
mov
xor
cmpl
inc
push
fxch
adc
push
pop
in
jb
insb
popf
jle
rclb
sti
lahf
fildl
pop
jno
xlat
cmp
mov
xor
loopne
sti
mov
xlat
inc
add
xchg
jge
scas
in
testb
mov
pusha
and
stos
pop
arpl
popa
dec
and
xor
pop
sbb
out
fcmovbe
xchg
ljmp
mov
shlb
xchg
scas
xchg
sbb
push
test
lret
inc
test
aaa
and
add
movsl
enter
cld
icebp
mov
xor
shrb
inc
or
push
push
int3
in
stc
dec
imul
insl
movsl
adc
xor
adc
mov
pop
adc
xchg
mov
xchg
xor
test
sub
fs
inc
xor
pop
je
mov
jb
cmpsb
push
adc
fisttpll
jb
es
imul
test
cld
imul
ja
mov
push
fistl
notl
or
int3
pusha
xchg
mov
repz
in
push
test
lret
cltd
add
cmp
jp
push
lods
cmp
pop
outsl
ret
jmp
ja
xchg
outsb
arpl
push
jge
mov
adcb
and
xor
call
xor
xlat
sub
fnstenv
mov
inc
aam
mov
call
jle
mov
inc
mov
sub
mov
push
loop
and
cmp
and
popf
and
bound
aas
or
sub
xorl
jmp
sub
andl
in
inc
loop
adc
or
fdivrl
and
xchg
xchg
fimull
pop
pop
int
imull
dec
lods
int3
mov
pop
pop
pop
pop
lods
inc
insl
loope
dec
xchg
mov
push
mov
sti
xor
push
xchg
add
dec
cltd
loope
mov
xor
cltd
dec
xor
movsb
mov
dec
adc
xor
xor
lcall
push
in
and
repz
mov
std
push
stos
enter
test
dec
hlt
pop
mov
in
xor
aas
call
push
xchg
ljmp
icebp
das
adc
adc
out
std
cs
mov
or
jmp
cld
inc
aaa
loop
push
cmc
repz
ljmp
mov
dec
ficoml
idivl
lods
pop
insl
pushf
sub
push
je
insb
mov
add
mov
out
sbb
cmp
adc
les
mov
jo
mov
jge
cmp
aad
aas
mov
out
sbb
sbb
insl
push
cli
mov
lret
decl
cmp
mov
mov
dec
insb
lds
add
out
push
or
fmul
xchg
push
and
or
xor
adc
stos
adc
mov
lods
into
test
pop
or
push
jbe
lret
outsl
pop
mov
sbb
jno
loop
icebp
mov
dec
sbb
pop
clc
push
push
mov
fcmovne
add
push
mov
and
dec
push
daa
add
mov
or
lods
xchg
cmpsb
mov
cmp
inc
add
paddusw
idiv
jg
xchg
cmovbe
outsb
push
jne
test
push
and
fbld
mov
mov
mov
stc
push
pop
outsl
icebp
out
mov
pusha
bound
sub
into
dec
pop
sub
adc
pop
iret
aam
xchg
in
lcall
dec
test
aaa
cltd
mov
mov
cmpsb
push
lods
icebp
loop
push
and
popf
test
lret
jne
cmp
sti
sub
shll
lds
popf
push
mov
cli
push
push
pop
dec
lds
stos
sub
jo
jmp
push
sarl
adc
pop
inc
cwtl
cmp
iret
popf
rcrl
dec
jo
ret
jno
xchg
lret
es
cmpsl
clc
ja
pop
in
xchg
inc
jge
or
fsubr
jne
sarl
xchg
aaa
bound
lret
or
pop
fcmovnb
daa
mov
loope
or
stos
cmp
fldcw
pop
in
mov
push
adc
or
pop
imul
xchg
cmp
mov
xchg
jns
lret
aas
sub
sub
repnz
mov
pop
inc
imul
and
mov
jp
loop
add
pop
inc
push
jmp
cltd
ret
sahf
adc
push
and
pop
shrl
xchg
add
add
push
xor
and
adc
sti
mov
xchg
adc
cli
push
jp
sti
mov
push
cmp
jne
mov
adc
lret
rol
add
cmp
stos
pop
jno
or
test
xlat
push
je
adc
in
mov
repz
ret
cmc
test
sub
jge
jne
jl
call
mov
and
loope
xor
fists
adc
mov
insl
sbb
jae
push
add
mov
ss
icebp
pop
cltd
sbb
aas
stos
movsb
cmp
mov
dec
dec
out
mov
adc
push
mov
iret
mov
lods
and
rep
sbb
loopne
sbb
hlt
nop
cmc
mov
xor
cmpsl
ljmp
xor
jmp
adc
roll
jbe
insb
push
inc
add
insl
jle
adcb
or
fs
loopne
arpl
test
test
repz
mov
jecxz
jns
push
inc
out
sti
jecxz
test
xchg
repnz
push
mov
lahf
out
bound
repnz
inc
cmpsb
sbb
je
stos
jle
mov
pop
cld
sub
in
push
and
subl
jae
nop
inc
add
sbb
divb
push
mov
lret
cli
dec
xor
out
add
cs
sti
jg
fcompl
mov
inc
addr16
out
push
or
push
sbb
mov
mov
xchg
mov
je
mov
xchg
sbb
mov
leave
dec
lds
nop
fistl
bound
add
aad
lds
adc
test
pop
sbb
mul
std
test
lret
mov
add
sub
jnp
stc
imul
aas
jns
into
fdivs
mov
mov
pusha
mov
xor
test
sti
movsb
iret
and
aad
mov
mov
fstp
and
int
cltd
jge
mov
sbb
insl
jnp
inc
cmpsl
jae
lcall
loopne
jne
inc
adc
lcall
jnp
adc
fldl
add
push
sbb
adc
mov
adc
cs
nop
rolb
xor
stos
fwait
cmp
inc
adc
jb
insb
mov
in
xchg
xor
out
shlb
push
ss
mov
sub
mov
fwait
cltd
xor
mov
xor
out
sarb
push
bound
pusha
pop
jae
push
jp
xchg
dec
pop
cmp
shr
cmp
cmp
iret
jae
adc
imul
stos
outsl
mov
jo
int3
inc
dec
mov
and
ljmp
pop
outsb
pop
jmp
adc
jbe
bound
pusha
push
cwtl
into
inc
lods
pop
jne
adc
mov
sbb
fwait
ljmp
xchg
es
fldt
pop
sbb
enter
mov
mov
das
pop
pop
test
stos
pop
push
ja
imul
gs
in
mov
punpckhbw
xorb
mov
or
sbb
lret
inc
sbb
cwtl
cmp
mov
push
cs
dec
adc
inc
fs
pushf
jbe
test
shrl
jnp
stos
movsl
lahf
push
pop
movsl
test
xchg
aas
aas
pusha
adc
pop
scas
enter
jbe
inc
and
fs
scas
xchg
inc
in
jge
jle
jne
jg
test
mov
adcl
inc
rolb
jns
cltd
inc
jmp
adc
lods
adc
lock
inc
mov
mov
or
jne
outsl
in
and
adc
xchg
sbb
xchg
add
aas
loope
loopne
push
pop
push
lcall
mov
mov
loope
insl
or
inc
or
mov
cmpl
mov
inc
xlat
mov
push
mov
dec
fisttpl
scas
cmp
and
xor
jne
inc
jns
mov
jnp
jbe
dec
clc
aas
dec
pusha
adc
andl
sub
xchg
dec
rorb
xor
fisttpll
inc
adc
int3
int
jle
jmp
jns
scas
loope
cmp
pop
stc
sub
cmpsl
lock
xor
std
xchg
jne
add
outsb
mov
jmp
dec
sbb
push
inc
pop
sbb
roll
movsb
aad
inc
out
pop
adc
or
jl
dec
lahf
push
and
mov
adc
sbb
cmpsb
insb
stos
insl
push
scas
xchg
comiss
pop
add
adc
pusha
mov
stos
pop
and
push
dec
fstpl
lret
add
jge
fldl
repnz
popa
scas
fisttpll
roll
push
inc
clc
inc
in
daa
pop
inc
or
subl
adc
dec
pusha
xlat
cmp
pop
leave
fsts
call
sub
push
adc
cmp
dec
cwtl
dec
pusha
stos
daa
mov
mov
xor
dec
mov
jb
sbb
mov
mov
mov
imul
and
add
dec
fs
fists
insb
pop
arpl
and
leave
mov
enter
sub
ss
test
adc
outsl
into
and
push
sbb
cmp
adc
sub
dec
or
jnp
mov
mull
jle
cmp
jo
fdivrl
div
push
shll
mov
or
inc
lret
popa
test
pop
cmp
data16
add
cld
push
sti
movsb
clc
int3
cld
mov
rorb
mov
or
ret
dec
out
sub
jl
icebp
adc
shr
cltd
cmp
loopne
or
push
mov
out
subb
loop
adc
xchg
or
adc
add
lock
jbe
rol
xlat
pop
xchg
mov
icebp
pop
mov
pop
add
pop
mov
mov
pushf
leave
push
aas
loopne
pop
rcrb
pop
mov
add
and
dec
mov
dec
jle
jge
jl
imul
xchg
out
je
xor
hlt
subl
andb
and
dec
adc
imul
and
adc
divb
or
or
mov
or
out
xor
rolb
fsts
xor
cmp
pop
pop
xchg
shlb
xlat
sub
mov
xchg
mov
sub
pop
add
out
shlb
in
xor
mov
push
ret
and
adc
shll
scas
jno
lahf
jle
test
inc
mov
imul
xchg
pop
bound
cli
verr
dec
sbb
std
mov
daa
jne
sbb
mov
dec
test
mov
dec
push
lahf
add
shlb
mov
xchg
xchg
push
adc
fsubrs
jp
push
jnp
outsl
jmp
push
aam
xlat
mov
adc
mov
popa
xchg
jns
arpl
sbb
push
jmp
sub
sub
jp
push
inc
cli
addb
in
fistpll
ret
xchg
scas
cmpsl
jno
and
inc
fcoms
adc
sbb
stc
mov
pop
mov
xor
xchg
adc
mov
xchg
mov
sarb
in
shlb
pushf
fsubs
pop
sti
push
or
push
clc
mov
pop
mov
jp
jle
mov
xor
xchg
dec
mov
incb
sbb
in
or
movl
or
pop
fnstsw
jge
aam
lods
repnz
pop
pop
ja
inc
popf
loop
fcomi
add
arpl
dec
imul
mov
sub
push
dec
push
lret
imul
jo
jge
or
leave
sub
outsl
mov
pushf
out
xchg
jns,pn
movsb
push
fcomps
into
add
cmpl
mov
sahf
mov
cmp
xchg
push
inc
movsl
cmp
outsl
push
dec
movsb
lods
jp
insb
gs
add
loopne
not
push
xor
out
test
pop
or
fs
or
leave
mov
fsubp
arpl
ret
subl
stc
stos
push
xor
cmp
das
fistps
mov
sbbl
mov
mov
pop
data16
lret
xor
xchg
lret
jecxz
in
je
hlt
mov
xor
das
jnp
sub
je
in
rorl
xor
and
out
insl
mov
fwait
pop
test
or
fadds
pop
repz
cmp
add
jp
cmp
push
lock
ss
xchg
jbe
jge
ss
inc
pop
adc
roll
loope
cmp
ss
pusha
into
xor
cltd
les
std
inc
xor
xchg
pop
gs
arpl
mov
roll
add
scas
faddp
push
xchg
pop
ret
out
or
sbb
mov
mov
pop
imul
out
test
rcrl
xor
mov
inc
stos
or
adcl
xchg
cmp
in
lahf
jge
xlat
xorb
pop
jp
in
sahf
fwait
aas
or
lods
imul
mov
pop
add
and
sahf
test
or
push
fwait
out
jle
popf
sbb
neg
add
outsl
mov
inc
loope
dec
cmp
es
mov
push
or
xchg
sub
cmpsl
add
xor
fistl
sub
pop
mov
mov
sbb
and
jmp
xchg
push
pop
sti
mov
jae
into
and
lods
mov
or
sbb
pop
adc
call
add
iret
iret
adc
mov
inc
loope
pop
ret
mov
lret
popa
gs
adc
cmpsb
mov
fists
dec
in
dec
cld
outsb
ficoms
repz
fisttps
fcomp
cmp
cmpsl
out
aas
clc
mov
sti
add
add
loopne
mov
in
sbb
call
push
push
xchg
xor
mov
in
stc
test
enter
jnp
lods
cwtl
popa
jecxz
cmpsb
lret
mov
loop
mov
mov
pushf
xchg
and
aaa
lock
or
ljmp
inc
roll
addr16
dec
repz
jecxz
pusha
sub
push
cmpsb
cltd
sbb
jo
or
inc
call
add
jnp
add
stos
ret
neg
cmpsb
enter
pop
add
dec
aaa
outsl
arpl
andb
loopne
cwtl
lods
jecxz
and
dec
inc
mov
mov
sub
popa
push
test
jns
mov
mov
fstl
in
stos
xchg
pop
cmp
mov
cmp
cmp
jp
adc
lds
dec
xor
add
and
div
outsl
push
mov
and
in
push
sub
loopne
cwtl
xchg
xchg
data16
sti
imul
xchg
test
test
movsl
insb
sbb
xchg
xchg
shl
xchg
cli
jno
fs
lret
dec
ror
xor
dec
call
pop
sub
fs
bound
mov
dec
shlb
push
into
and
cmp
sub
aas
jae
inc
push
addr16
hlt
negb
inc
test
pop
and
fmuls
xchg
jge
scas
sbb
lock
pop
pop
jb
repnz
xchg
test
stos
inc
int3
pop
cmpsl
add
mov
pop
lret
sub
iret
ljmp
mov
push
mov
mov
sbb
shll
test
das
cmp
sub
jl
sub
pop
aaa
pop
mov
adc
mov
outsl
push
pop
cmp
fcoml
dec
mov
outsl
leave
testb
int3
inc
ss
rcl
out
fsub
fwait
push
aam
pop
mov
sbb
dec
insl
mov
xor
mov
cmp
jnp
popa
sbb
ret
mov
pop
cmp
cmpsl
lret
dec
and
push
out
push
add
pop
inc
add
daa
in
mov
lods
and
push
sub
mov
sub
nop
add
mov
mov
push
or
jae
jnp
xor
into
sub
xor
pop
add
add
repnz
cmp
pop
jns
mov
xchg
subb
cwtl
sbb
push
sub
mov
jl
mov
push
pop
fsub
jne
aaa
or
mov
mov
or
int
sub
pop
xchg
xor
ret
mov
jnp
inc
cmp
ja
test
xchg
inc
add
add
mov
mov
sbb
ja
jl
sub
or
loopne
icebp
mov
cwtl
dec
sub
cmc
shll
cmpsb
jae
push
mov
aad
mov
pop
in
adc
cmc
push
jl
pop
repz
icebp
cwtl
nop
sub
cli
sbb
dec
mov
dec
pop
pop
adc
shl
mov
push
push
jmp
xchg
loopne
jbe
push
faddl
iret
fistpll
inc
nop
dec
mov
push
pop
and
inc
sub
cmpb
test
add
scas
sti
cmp
mov
sarl
push
cmp
ret
xchg
and
stos
out
jmp
fs
dec
sbb
ds
push
pushf
fwait
repz
jge
xor
pop
pop
leave
outsl
aad
xlat
mov
dec
pop
xor
lock
iret
cmp
mov
jp
or
add
jmp
movsb
pop
repnz
iret
sbb
xchg
mov
les
push
xchg
jg
sbb
inc
xchg
xor
rcll
lcall
xlat
cli
ficompl
jge
stos
outsl
sub
faddl
xchg
sub
and
in
inc
mov
mov
jle
imul
lds
inc
mov
scas
cwtl
popf
rorl
adc
pop
outsb
aas
bts
xchg
mov
pop
add
ret
adcb
int3
mov
mov
pusha
push
mov
cmp
test
ror
out
ud1
cld
stc
push
jbe
cmp
aam
and
inc
sbb
ds
push
mov
hlt
jmp
push
sub
rorl
xor
push
fistpl
jmp
push
or
roll
mov
adc
or
and
cmc
sub
test
push
das
std
je
add
scas
into
sbb
lods
dec
mov
or
cmpl
push
jecxz
xchg
stc
xlat
mull
enter
fld1
xchg
push
aad
mov
clc
sub
and
xchg
or
lock
push
in
inc
add
ret
or
cmp
aad
cltd
shrl
rclb
repz
lret
add
sbbl
cltd
pop
jecxz
cld
pop
adc
pop
push
not
xor
outsl
sbb
pop
fs
inc
insb
repz
mov
ljmp
pop
push
aaa
jnp
rcrb
ljmp
aad
clc
sbb
push
lods
inc
dec
stos
jg
inc
push
push
insb
clc
js
jns
loop
es
push
andb
mov
or
push
mov
mov
outsb
push
nop
dec
stos
jecxz
xchg
mov
mov
sub
popa
mov
pop
sti
test
dec
dec
push
hlt
movsb
xchg
xchg
lock
jle
out
fists
pop
sbb
pop
xchg
mov
jg
sbb
dec
and
stos
mov
clc
or
les
xor
jb
mov
and
lods
push
cmp
addr16
into
pusha
mov
jmp
cltd
xchg
out
and
les
pop
subb
cmpsl
adc
aas
aam
mov
mov
lret
adc
mov
mov
jno
fwait
popf
cmp
leave
dec
sbbb
inc
adc
xchg
jmp
sbb
jne
pop
inc
push
lahf
xchg
es
aam
or
jg
or
lods
sbb
pop
aam
popf
scas
aas
sahf
jae
pop
ret
loop
sahf
mov
xchg
test
lahf
mov
out
mov
call
fidivrl
repz
mov
cmp
inc
dec
jnp
adc
fucomp
test
jge
inc
cli
mov
ljmp
mov
and
and
xchg
shl
arpl
push
es
daa
mov
repz
mov
push
push
aad
pop
sub
sbb
and
out
xor
push
je
popa
sub
mov
dec
push
xchg
fdivr
inc
xchg
clc
sbb
fisubs
aam
sub
fwait
inc
test
icebp
aam
and
mov
testl
xor
sub
jg
nop
into
addr16
push
xor
add
scas
out
jnp
jnp
pop
into
dec
mov
iret
push
mov
mov
cmp
sbb
cwtl
pop
pop
repnz
out
push
fidivs
test
mov
sub
lock
push
cmpl
dec
test
in
lods
sub
jbe
insb
mov
dec
add
scas
adc
leave
lret
push
dec
je
fcompl
jle
or
jb
dec
aas
arpl
popa
push
mov
jns
pop
pushf
imul
cli
and
add
loop
xlat
les
insb
push
sbb
hlt
inc
xor
rclb
sbb
inc
cwtl
push
stos
sti
pop
cli
insl
dec
or
or
or
insb
dec
push
clc
out
or
and
and
jb
adc
ror
xor
ljmp
jno
mov
ljmp
in
sbb
lea
dec
xchg
jnp
mov
aaa
sahf
push
lret
xchg
or
cmp
or
cld
push
push
sub
dec
dec
add
aaa
inc
pop
xchg
idiv
addr16
bound
xor
sub
mov
xor
jle
adc
aam
jno
jo
push
stos
nop
cmp
movl
fstpt
pop
jl
sbb
push
push
notb
and
jo
loop
or
mov
enter
jle
test
mov
iret
xchg
int3
iret
mov
mov
imul
ret
mov
sahf
inc
into
insl
push
pop
in
fmull
into
jmp
cmp
or
je
xchg
pushf
dec
inc
fs
scas
in
jno
mov
mov
sub
lret
test
dec
icebp
inc
andb
bt
rol
xor
movsb
adc
repnz
enter
mov
xchg
sarb
outsl
mov
xchg
gs
lock
xchg
fcomps
inc
push
lods
dec
ja
xchg
cmpsl
sbb
dec
jno
test
dec
mov
and
cmp
xor
icebp
fisttpll
pop
fwait
mov
out
lret
xor
add
push
sub
stc
jbe
ret
inc
out
mov
jb
loopne
ss
cmovno
in
push
cmp
push
push
and
and
mov
test
cmp
dec
ja
ficomps
jno
inc
outsl
mov
mov
xchg
push
dec
es
adc
cs
shlb
popa
mov
ss
push
and
pop
repz
mov
push
adc
adc
push
cmp
dec
dec
add
jg
push
xchg
js
aas
cmp
mov
cmp
in
jns
mov
int3
push
stos
dec
or
xchg
jno,pn
hlt
xchg
add
dec
call
pop
push
push
sub
and
mov
cmpl
mov
xlat
in
push
ret
daa
hlt
sbb
ret
clc
adc
add
int3
jl
mov
ss
rorb
push
mov
rclb
arpl
inc
and
pop
mov
pop
movb
std
sbb
xchg
call
xchg
jge
bound
shr
cli
addr16
dec
pusha
xchg
fnstcw
pop
or
push
js
mov
nop
jbe
jns
adc
pusha
and
push
inc
mov
mov
jl
lea
lds
test
data16
mov
mov
and
stos
std
fs
out
dec
out
out
cmpsb
out
icebp
inc
and
push
rorl
mov
pop
push
pop
rcll
imul
inc
sbb
add
mov
imul
mov
mov
cli
push
fldenv
lret
dec
inc
lock
cli
dec
jbe
aaa
movsb
add
xchg
dec
jae
cmp
ss
cli
inc
mov
ds
adc
and
clc
add
fnstsw
jb
in
dec
push
jmp
gs
xor
orl
dec
sbb
enter
lods
and
add
neg
or
pushf
add
inc
mov
sbb
sbb
cmp
lods
push
popa
or
sbb
sub
dec
sbb
or
into
xorb
insl
push
xchg
pop
dec
mov
loopne
lock
cmp
daa
dec
sub
imul
outsb
and
addr16
nop
ljmp
mov
sbb
dec
push
or
aaa
mov
test
pop
or
add
and
mov
ss
pop
push
subb
dec
lahf
ret
push
adc
push
aam
aas
sub
aas
dec
xor
in
adc
test
stc
ja
aas
xchg
in
sbb
adc
mov
push
pop
adc
addb
nop
cwtl
jne
cwtl
jmp
out
lods
dec
and
decb
lcall
and
mov
and
cmp
test
outsb
add
imul
or
jnp
int3
orb
push
cld
mov
into
jb
mov
stos
mov
ja
iret
cmp
push
es
xor
gs
push
pop
adc
lods
inc
xlat
xor
sbb
inc
jo
repnz
or
setnp
or
push
push
mov
push
mov
and
scas
pushf
pusha
stos
sarb
add
push
rcr
push
std
lahf
mov
lods
xchg
js
xor
dec
cmpsl
add
jle
in
sbb
or
mov
in
pop
add
add
out
test
xchg
jmp
pusha
pop
mov
pushl
cmp
call
popa
sbb
cli
fldl
testb
add
and
test
jge
std
popa
mov
adc
mov
bound
cmc
aaa
es
mov
mov
sub
call
bound
mov
arpl
and
and
loopne
inc
mov
sub
ret
repnz
push
shrb
xor
daa
lahf
xchg
sbb
jmp
dec
jge
out
mov
fwait
in
or
call
shl
add
stc
push
lret
push
mov
ret
adc
fistpll
mov
jnp
cld
push
push
enter
and
xor
repz
lds
add
outsl
test
and
inc
or
inc
cltd
aas
fiaddl
clc
int3
sti
scas
and
and
sbb
fs
rclb
enter
push
mov
lcall
arpl
xlat
or
or
pusha
mov
frstor
sahf
fsub
lea
sbb
test
lcall
mov
pushf
mov
push
jmp
mov
cmpsb
es
inc
es
cmp
out
xchg
adc
inc
and
popf
or
cmp
mov
repz
inc
or
fisubs
add
jo
push
icebp
xlat
push
cmp
jbe
jb
jnp
cmp
pop
xchg
aad
jb
mov
dec
loopne
inc
lods
outsb
jnp
stos
xchg
dec
mov
ss
dec
int3
push
pop
ret
test
mov
cmc
dec
addr16
test
or
shll
sub
movsl
and
pusha
add
inc
push
outsl
xchg
push
mov
mov
popf
insl
inc
mov
fists
ret
imul
fidivs
mov
daa
and
je
inc
fidivrs
lret
pop
or
or
dec
dec
movsl
jo
jb
mov
sub
push
scas
pavgw
jmp
adc
out
jl
scas
testl
or
push
xchg
js
iret
movsb
movsl
nop
xchg
dec
popf
inc
push
push
test
xor
dec
lret
add
orb
ljmp
mov
and
cmp
inc
push
movb
xchg
adc
pop
pop
out
dec
push
push
lcall
std
pop
fs
and
mov
xor
xor
ret
or
sti
mov
adc
pop
or
push
mov
leave
fwait
cmp
iret
movsb
lahf
sub
cmp
inc
imul
enter
arpl
push
test
hlt
lods
and
inc
and
cmp
dec
cmpsl
ljmp
rclb
sti
aas
push
dec
push
jp
je
orb
out
jb
fs
push
pop
xchg
mov
lret
pop
adc
in
cmpsb
das
dec
pop
mov
cmp
arpl
jg
out
mov
mov
adc
lods
inc
mov
pop
jo
mov
fisubs
je
xchg
leave
divl
int3
adc
inc
push
mov
jmp
pop
insb
push
testl
add
push
fndisi(8087
sbb
inc
ret
inc
std
jns
out
mov
or
xlat
in
repnz
mov
imul
into
push
jecxz
popa
xor
push
fidivrs
dec
ret
ret
mov
jae
int
arpl
and
sarl
sar
scas
pop
out
div
sub
addr16
stos
sti
insb
and
cli
push
lods
sbb
lcall
aam
or
cmpsl
push
and
dec
xchg
repz
xchg
pop
lahf
test
xchg
test
push
int3
out
loope
test
movsl
mov
dec
sti
out
in
adc
call
jg
movsbl
mov
fists
cltd
cwtl
push
push
mov
sbb
xor
add
mov
test
popa
in
in
mov
add
and
pop
out
and
je
dec
mov
out
jge
pusha
pop
mov
add
mov
aad
lahf
dec
jnp
stos
fwait
sbb
int3
xchg
int
adc
pop
xlat
divl
jne
pop
test
aas
jmp
in
pop
or
fcomip
mov
imul
xchg
mov
jbe
cs
or
mov
fidivrs
scas
sbb
stc
jle
iret
push
push
push
and
je
mov
mov
popf
repz
js
sbb
icebp
xor
xor
hlt
mov
aas
out
mov
push
imul
adc
push
mov
lods
mov
addr16
or
add
pusha
aaa
mov
dec
sarl
icebp
jecxz
cld
xor
out
push
enter
ja
sbb
popa
cs
incl
negb
jge
inc
fldt
insb
or
ds
pusha
sub
lahf
pop
inc
lret
dec
fdivrs
outsl
enter
cmpsb
idiv
outsb
ds
xor
and
andb
jl
roll
jmp
sbb
js
stos
scas
scas
cmp
jns
xorl
fs
sub
or
sti
and
mov
mov
mov
cltd
xlat
or
lods
xchg
mov
fwait
add
fdivr
fimull
std
push
cli
sub
mov
adc
cmp
inc
push
fsubrl
in
lahf
in
iret
inc
ret
imul
fldt
mov
cvtps2pi
pop
rorb
adc
movsb
call
stos
lods
loop
in
jmp
push
sub
and
lods
lea
icebp
aas
or
fildl
add
pop
dec
mov
inc
jbe
jg
mov
xor
xor
insl
mov
in
rcrb
aaa
jbe
mov
or
sti
pop
loop
xchg
sbb
movsl
shrb
lock
inc
mov
add
pop
gs
push
enter
xchg
popa
add
mov
xor
fdivr
dec
mov
cltd
fsubs
movsb
scas
mov
xchg
lea
daa
and
ja
ret
xor
jmp
je
dec
paddusw
pusha
cwtl
or
inc
jae
repnz
pop
cwtl
push
dec
in
mov
imul
mov
and
das
loop
sub
repnz
imul
mov
mov
mov
lcall
sbb
aas
lret
push
in
cltd
out
add
adcb
pop
pusha
aas
fidivl
lds
cmp
sub
dec
cmpsl
and
idivb
out
jmp
lcall
mov
dec
neg
popa
test
xchg
and
outsb
lahf
sahf
aam
repz
test
pop
aaa
mov
rcll
lret
insl
inc
or
push
imul
mov
rorb
inc
sarl
ret
sbb
fxch
and
data16
ljmp
mov
leave
dec
adc
cmpsl
inc
cmp
or
cmc
push
loope
loopne
je
add
lahf
lods
xchg
enter
sub
in
mov
inc
in
push
mov
mov
sub
int
into
push
push
stc
jbe
and
cmp
sahf
jne
mov
inc
dec
stos
aam
add
mov
in
xchg
jb
dec
xor
ret
inc
pop
sub
add
dec
inc
popa
push
sub
jmp
addr16
cmpsl
mov
sarb
in
out
test
aad
xchg
push
mov
sti
lock
mov
and
mov
ja
xlat
sub
push
add
por
adc
pop
xchg
and
and
in
xchg
jge
popa
or
sub
stc
mov
adcl
push
mov
test
pushf
das
bnd
mov
fldl
sahf
cmp
lret
mov
pop
sub
inc
int3
je
hlt
mov
push
xor
cmc
leave
mov
pop
mov
and
dec
es
jle
ficoml
adc
sahf
xchg
lock
cmpsl
adc
arpl
cmp
jae
xor
mov
push
in
inc
sbb
loop
add
inc
mov
test
xor
dec
push
imul
into
into
sbb
adcl
sbb
mov
or
add
and
push
pop
filds
sub
call
push
jne
ror
gs
stos
push
push
in
popf
daa
xor
mov
ja
mov
lcall
lock
ret
lcall
cmp
xor
mov
aad
rcrl
pop
mov
add
fildl
dec
mov
dec
push
mov
fcomps
stos
push
or
imul
lea
pop
xchg
xlat
adc
dec
not
leave
pop
jns
mov
arpl
add
inc
lds
lahf
inc
adc
or
sbb
pop
xor
int3
or
xchg
mov
mov
ret
fnsave
adc
and
test
xchg
mov
pop
jno
out
aas
imul
sub
mov
iretw
dec
jo
push
cmp
inc
push
and
sbb
fnstcw
test
jbe
jecxz
pop
mov
dec
mov
fstl
sti
aam
outsb
xor
cmpsl
jg
adc
ss
inc
cli
xchg
mov
dec
push
pop
push
pop
aas
cmp
jg
cld
cmc
fmull
add
roll
fidivrl
mov
clc
mov
jns
roll
ficomps
pop
insl
dec
sbb
aam
negl
cwtl
cmp
or
dec
shll
imul
cli
hlt
cmp
dec
stos
lcall
cmp
rolb
jbe
cmc
mov
arpl
addl
loopne
cmpsl
adc
sub
mov
test
std
ficompl
cltd
repnz
clc
push
fcomip
sbb
loopne
out
iret
out
add
lea
imul
cltd
mov
mov
gs
pushf
out
xchg
daa
imul
into
adc
loop
push
mov
inc
dec
js
jp
lret
mov
pop
jg
pusha
cmpsl
out
pop
scas
pop
or
jecxz
pop
xor
push
adc
cmp
pop
mov
pop
xchg
push
fdiv
mulb
rol
std
cmc
mov
xchg
nop
mov
inc
out
xor
aaa
aam
inc
outsl
test
pop
enter
lret
mov
jge
xchg
das
mov
and
xchg
and
push
dec
xlat
andl
jg
add
cmp
es
ljmp
rclb
mov
push
daa
cld
inc
paddq
xchg
pop
mov
cwtl
in
adc
loopne
or
jle
bound
pop
lret
sbb
pop
mov
pop
pop
pop
cwtl
push
movsb
inc
jl
jle
int
int
in
ds
imul
xor
lcall
daa
push
push
jbe
and
mov
mov
inc
cwtl
lcall
mov
loope
adc
popa
push
out
push
add
jne
or
imul
inc
ss
fidivs
adc
mulb
xor
pop
fdivs
jb
pusha
ret
loopne
inc
test
pop
sbb
out
mov
outsl
js
orb
cmc
jle
dec
jnp
leave
in
nopl
pop
ds
int
inc
out
incb
mov
mov
xlat
cmpsl
cmpsl
mov
aas
dec
insl
and
icebp
fwait
jnp
nop
icebp
fisubrl
bound
push
inc
push
call
sbb
push
lods
aad
into
mov
cli
and
out
fadds
mov
scas
xchg
inc
xchg
push
das
das
jmp
and
addr16
mov
or
adc
hlt
nop
sbb
sbb
mov
xchg
das
dec
and
inc
in
sub
jge
or
jle
sub
mov
xlat
lret
ret
pop
cld
rcl
sub
aam
ret
lds
lea
fdivrp
mov
test
dec
inc
xchg
loopne
push
add
jnp
xchg
pop
mov
ss
cltd
and
fisttpll
mov
mov
ss
lcall
test
in
inc
ja
or
mov
or
dec
arpl
and
jne
lss
ret
and
fs
ret
or
ss
inc
sarl
inc
fisubs
pop
inc
dec
cmp
int3
dec
adc
jae
call
fs
lret
jge
in
pusha
rorl
xor
xchg
imul
mov
xlat
test
insb
cmp
mov
adcb
sahf
inc
jns
cwtl
xchg
or
add
sub
gs
pop
jbe
jnp
push
mov
mov
sbb
das
popa
shlb
lret
xchg
test
mov
ja
aas
fcoml
insl
push
testl
pop
lret
test
mov
xor
cmpb
insb
sahf
ss
dec
mov
jl
imul
and
movsb
daa
mov
pushf
mov
add
daa
pop
or
cmp
cld
pop
std
out
mov
lret
sub
scas
aam
jne
xchg
lods
into
push
iret
pop
stos
int3
pop
dec
jo
fcmove
idivb
popa
pop
sub
and
lea
mov
jo
addr16
xor
mov
stos
loope
fldcw
xchg
jmp
loope
xor
xchg
fildl
xchg
ret
xor
xor
out
inc
out
nop
push
les
out
sbb
push
call
popa
shrl
jbe
aad
arpl
sbb
enter
in
out
lea
push
cltd
insb
mov
int3
push
das
stos
repz
lret
mov
lods
lods
jns
test
mov
push
hlt
xlat
mov
jo
push
and
fidivrl
je
push
pusha
hlt
int
arpl
adc
jecxz
imul
adc
cmc
mov
ja
std
sub
and
cmp
shll
bound
out
mov
or
in
repnz
mov
cmp
fsubr
inc
sbb
or
jno
push
and
popf
call
jno
or
icebp
icebp
mov
es
fsts
int
imul
mov
dec
push
mov
lea
dec
pop
pop
cmp
ja
jp
pop
add
adc
xor
add
xchg
cmpsb
icebp
sub
mov
loop
xchg
subb
sti
insl
jo
pop
mov
imul
fmull
rcl
sub
mov
sar
inc
adc
pop
shrb
insb
iret
data16
lock
or
pop
dec
sbb
jae
push
cmp
loop
or
and
adc
jnp
dec
repz
fidivrs
lods
mov
repz
mov
rolb
into
dec
and
cli
divl
adc
daa
ja
mov
sub
arpl
sbb
and
pop
mov
sbb
xor
leave
mov
push
xchg
lret
lcall
xchg
mov
jo
sti
rcrb
ret
test
cltd
push
mov
adc
add
add
loope
subb
loopne
fldenv
cs
sub
jae
add
in
and
push
mov
sub
sahf
xlat
leave
inc
in
roll
in
sbb
pushf
pop
test
out
fbstp
data16
loop
adc
inc
outsl
xchg
in
pusha
xchg
shlb
fdiv
out
sub
jmp
mul
pop
loopne
repnz
into
repnz
or
push
sbb
mov
push
cmc
jmp
inc
lods
lods
dec
movsb
adcb
test
shll
add
dec
fldt
jp
daa
add
cmp
jp
test
in
outsb
lcall
loop
shll
push
adc
fcmovnbe
push
cmpsl
out
dec
cli
cs
test
xor
jmp
popa
and
enter
mov
dec
mov
in
xorl
fmul
mov
xorb
rcll
hlt
jecxz
pop
stos
dec
cmpsl
dec
adc
mov
adc
fchs
xor
push
in
fmul
and
lahf
jmp
fsubp
cmp
pop
lret
sbb
sbb
out
lds
cltd
cmp
in
jnp
mov
dec
arpl
in
movsl
jbe
mov
sub
xor
sub
dec
into
mov
int3
sub
mov
inc
sub
aaa
jne
int
or
pusha
mov
jl
mov
inc
test
pop
jp
aad
and
inc
xlat
sub
lds
xchg
roll
insl
jns
mov
in
lea
enter
dec
dec
mov
cltd
or
xchg
sbb
scas
fildl
cmp
cmpsb
pushf
incl
out
in
fldl2e
mov
mov
outsb
fwait
outsl
sbb
rcr
dec
nop
sub
xor
int
jae
lods
mov
ficompl
cmp
dec
ret
les
out
pop
jmp
xor
xchg
pop
rorl
stos
jle
xor
scas
into
out
xchg
or
cmpsl
aas
xchg
mov
push
lock
xor
daa
pop
mov
jno
clc
push
in
jge
xor
dec
mov
jbe
pop
pop
xchg
in
push
add
sub
push
movsl
or
in
push
cmp
imul
icebp
cs
sahf
push
adc
pop
push
aaa
add
add
mov
push
xchg
add
sub
mov
movsl
dec
out
addr16
mov
sub
test
idivl
int
aad
sbb
repz
and
mov
negl
dec
push
xchg
sbb
push
cmpsb
xchg
clc
je
push
push
call
sbb
aaa
mov
imul
outsl
inc
mov
mov
jae
test
push
jecxz
cmc
and
sti
jmp
subb
clc
daa
or
push
mov
je
mov
fsubrs
cmp
cli
fldl
in
pop
sti
xchg
mov
adc
lds
stos
ljmp
out
outsb
lods
in
sbb
and
es
jp
test
pushl
ja
movsl
or
dec
jp
imul
jmp
cltd
mov
stos
push
sbb
popa
mov
mov
in
flds
fiaddl
int
mov
test
std
inc
roll
xchg
xchg
jne
jne
xchg
xlat
icebp
jb
mov
push
rorb
pop
scas
adc
jle
popf
fildl
or
and
sub
imul
mov
cmp
dec
cmpl
push
je
movsl
icebp
out
and
xchg
leave
jne
or
dec
sub
pop
out
mov
mulb
leave
push
in
cmpsb
xorl
mov
fwait
insb
test
cs
and
leave
pop
nop
inc
sbb
rcl
xchg
insb
push
pop
scas
outsb
notl
cwtl
jl
sbb
cmc
jb
mov
jle
insb
push
inc
jle
and
push
cmp
push
push
dec
adc
pop
jl
pop
leave
leave
mov
imul
lahf
gs
pop
pop
pop
inc
fsubrl
mov
inc
mov
cmp
xchg
push
jmp
cmp
rclb
stc
test
mov
nop
in
jl
mov
aas
jo
mov
and
sahf
add
xlat
mov
add
adc
mov
out
xchg
mov
in
rcll
in
test
loop
mov
mov
nop
sahf
push
icebp
cmp
jne
test
xor
inc
andnps
push
xor
jae
addr16
push
adc
dec
out
push
mov
dec
cmpsl
lods
push
in
sahf
cwtl
je
stos
sbbl
rcll
push
mov
adcl
les
stos
and
shll
jae
push
mov
movsl
mov
pop
cmc
cmp
dec
popf
xchg
lods
lret
xchg
imul
stos
pop
mov
or
decl
push
jl
push
popf
ljmp
jmp
outsl
icebp
out
push
negb
test
mov
iret
cmc
cmp
mov
ret
arpl
outsl
adc
push
aaa
cmp
lea
mov
jg
out
rcrb
das
push
push
scas
aaa
rcll
push
icebp
xor
stos
push
incb
mov
cmpsl
out
test
jno
out
pop
sbb
cli
rol
imul
xlat
mov
das
jp
cld
in
arpl
out
jge
xor
dec
dec
hlt
cmp
cwtl
mov
ja
lret
les
push
xorl
ret
lds
adc
aaa
ljmp
jg
aas
mov
or
jmp
stos
push
imul
js
adc
imul
pop
sti
in
ds
aad
lcall
jl
cmp
mov
mov
sahf
push
mov
mov
insb
jmp
push
out
ja
outsl
jno
imull
rorl
inc
testb
pmaddwd
cltd
std
pushl
nop
xchg
or
stc
mov
push
mov
jge
daa
shlb
push
xor
shl
mov
fidivs
jb
idivb
dec
sbb
testb
mov
push
stos
pop
jge
bound
xor
iret
dec
mulb
subb
adc
cld
adc
push
jp
test
outsl
outsb
xchg
mov
test
fsubrl
mov
shl
es
shrb
pop
jmp
sub
out
adc
pop
int3
mov
cmc
jp
jne
pop
mov
lods
inc
inc
mov
lret
jae
mov
cmpl
std
sti
movsb
imul
rcrl
test
test
cli
lret
adc
xor
insl
mov
sti
inc
outsb
jecxz
jge
sub
dec
add
or
or
pop
insl
cmp
fistpll
mov
fidivs
xchg
out
jne
mov
clc
adc
rcl
lock
mov
dec
ret
incl
stos
add
cwtl
pop
fdivl
fcomi
test
xlat
mov
adc
insl
mov
ss
mov
loop
mov
inc
ret
fisubs
xchg
mov
mov
cmp
in
test
test
popa
pop
mov
pop
jnp
mov
sahf
xchg
dec
je
outsl
or
mov
jge
enter
mov
cmc
jb
iret
stos
test
sti
js
out
iret
jnp
aam
test
in
lret
mov
loop
insb
testb
std
mov
cltd
fistpl
push
es
mov
xor
xchg
fnstcw
add
mov
repz
or
jp
xchg
insl
aad
jmp
dec
jo
bound
mov
lds
jae
out
or
in
xor
inc
sbb
mov
dec
mov
ret
fdiv
cmpsb
add
sbb
subb
lahf
negl
or
std
js
mov
pop
je
test
add
mov
movsl
and
add
sbb
jmp
iret
outsl
in
adc
stos
cmp
cld
xchg
add
xchg
dec
xlat
mov
sub
cmp
adc
add
or
add
mov
mov
sub
push
scas
aas
mov
sub
pinsrw
mov
push
repz
xor
das
jl
out
iret
clc
pop
mov
outsl
hlt
jo
lret
jbe
cwtl
mov
mov
in
je
pop
in
mov
jo
shlb
in
insb
push
scas
mov
es
out
jnp
push
sub
fdivrl
cmc
leave
shl
aaa
rcr
sbb
push
ja
std
pop
jge
pop
adc
pop
fsts
cmp
icebp
mov
jbe
dec
enter
inc
scas
pop
jns
push
movsl
push
lret
dec
cli
pop
jecxz
jle
call
out
fnstcw
pusha
lea
outsb
adc
nop
repnz
out
aad
scas
inc
sbb
mov
lret
inc
xchg
or
pop
mov
xchg
jecxz
mov
xchg
mov
ja
pop
stos
pop
cmp
add
cmp
mov
leave
repz
hlt
dec
jmp
repz
mov
popf
cmpsb
pop
push
pop
popf
mov
dec
out
dec
leave
or
jb
jb
fs
jmp
lock
rorl
mov
jae
dec
sbb
pop
mov
lahf
xchg
aas
testl
test
push
aas
decb
mov
add
shrl
push
int
push
xchg
push
adc
sarb
test
stos
mov
shrb
xor
mov
jb
outsb
xor
lahf
inc
xchg
in
adc
dec
enter
test
pop
jb
enter
int3
jmp
stc
or
cmp
arpl
jns
mov
hlt
dec
push
lcall
jl
insl
out
int
loope
xchg
push
xor
out
mov
xor
xor
lcall
divb
adc
push
xchg
sub
pop
push
push
out
scas
cld
fistps
jb
fnsave
pop
sti
xor
roll
repz
divl
xlat
sbb
or
inc
jmp
in
mov
jmp
pop
push
inc
mov
int3
jo
decb
ljmp
mov
repz
mov
dec
movsl
push
std
test
sub
std
and
test
fs
or
imul
aas
inc
test
jae
dec
test
aaa
iret
stc
sar
jne
mov
orb
addr16
mov
lahf
jge
cmpsl
add
dec
test
ret
mov
and
daa
adc
je
addl
mov
push
out
bound
jp
pop
lahf
ja
lock
xchg
fnstsw
jle
mov
cltd
cmp
imul
or
adc
mov
das
ret
pop
lret
jbe
jecxz
add
dec
mov
test
lret
pop
sub
pop
push
sbb
lods
mov
in
dec
push
testl
adc
popa
ljmp
int3
lods
pop
push
cmp
xchg
pop
mov
sbb
sbb
lods
fdivr
jnp
add
mov
call
cld
and
out
cmpsl
fldl
std
pop
jmp
jnp
mov
mov
mov
mov
pusha
out
sar
mov
mov
jne
pop
inc
jg
imul
mov
test
leave
and
adc
pusha
ja
jecxz
inc
clc
outsb
cmc
push
mov
dec
ficomps
shll
dec
mov
incb
adc
mov
cli
xchg
add
das
cld
xor
or
pop
nop
repnz
int
mov
mov
mov
pop
pop
mov
inc
imul
sahf
cmp
fisttps
jne
lcall
add
lahf
pushl
cmp
sets
push
xchg
or
std
lcall
mov
or
mov
iret
idivb
lahf
push
lret
mov
insb
bound
jne
mov
ret
mov
adc
mov
jmp
or
jl
push
sub
push
xchg
lock
pop
push
xchg
leave
dec
mov
test
in
inc
xor
cmp
idivl
div
pop
ja
ds
sub
sub
repnz
jg
mov
mov
mov
imul
mov
adc
cmc
ss
fwait
sarl
pop
mov
mov
ret
add
sub
sub
mov
push
jnp
test
push
ja
nop
outsl
lahf
loop
xchg
lods
or
push
fisubrl
jmp
mov
push
mov
jmp
sub
jl
mov
out
cmp
decl
insb
mov
push
outsl
nop
in
movsl
ret
mov
xchg
mov
imulw
sub
mov
xor
inc
inc
mov
jmp
outsl
dec
pusha
mull
ds
ds
push
in
cmp
jbe
daa
lret
negl
ffreep
cmp
out
add
fstpl
push
and
sbb
mov
add
testb
jle
sti
aam
fimull
les
out
and
cmpsl
mov
ja
mov
xchg
out
or
cmp
clc
fbld
js
sahf
fbld
sbb
sahf
inc
or
mov
rcr
add
inc
into
jbe,pn
lock
cmp
rcl
psrlq
cmp
fwait
arpl
add
and
les
aam
cmp
mov
mov
or
cmp
nop
sub
or
jg
add
test
mov
sbb
cmp
loope
lret
sbb
pushf
pushf
mov
inc
jb
jg
mov
mov
out
push
push
das
inc
xchg
fs
or
inc
pop
movsb
pop
shrl
sub
mov
xchg
lcall
dec
test
xlat
jne
dec
pop
cmp
mov
lcall
cmpsl
loope
rclb
shrb
cmp
xor
inc
out
push
cmc
push
jb
aad
ljmp
ret
or
popa
iret
pop
dec
or
jmp
neg
xchg
xlat
mov
in
mov
in
xor
push
jnp
sub
mov
mov
sbb
in
cli
js
movsl
insl
inc
mov
js
xlat
sbb
cltd
push
pop
pop
mov
and
add
push
xchg
xchg
mov
hlt
mov
mov
jns
adc
xlat
mov
cmp
xchg
jge
bound
lret
cmp
andb
and
test
js
lods
pop
mov
or
and
add
push
inc
mov
stos
lret
pop
mov
aas
add
aas
inc
inc
mov
cmc
pop
push
out
repz
fwait
adc
push
orl
loope
push
pop
and
mov
mov
sub
mov
add
sub
mov
pop
mov
fwait
mov
fdivrl
enter
stos
mov
sub
andl
inc
jb
push
sbb
mov
sbb
cmpsb
push
and
sub
in
sti
dec
popf
and
aad
or
stos
sbb
mov
lods
xor
xlat
lcall
adc
mov
call
ret
mov
inc
push
xor
sbb
test
outsb
cmp
out
data16
lods
inc
adc
cmp
jbe
aam
jle
ja
cli
mov
dec
mov
shrb
xchg
js
inc
movsb
rcll
rclb
jo
and
sbb
ds
fs
fidivs
sbb
sbb
rorb
xchg
shll
xchg
stos
mov
gs
cmp
negl
imul
nop
fcom
shll
xchg
js
dec
push
pop
mov
les
fistpll
int3
test
ret
pop
cltd
mov
jp
repnz
sub
sarb
andb
lods
push
jnp
adc
outsb
mov
jns
fisubl
repz
jnp
sub
mov
pop
add
sbb
pop
pushf
scas
pop
fs
cmpsb
adc
iret
jp
xor
cltd
or
sbb
pop
push
aam
mov
sarl
push
call
out
jmp
pop
insl
dec
sub
cmp
stos
mov
fwait
push
mov
and
jne
jbe
je
dec
inc
and
push
stos
or
and
outsb
inc
fstpl
adc
mov
xor
sbb
repnz
lea
lret
fstps
shlb
jns
cli
fsub
sbb
adc
jmp
sti
adc
cmp
iret
pop
dec
scas
xchg
xlat
scas
outsb
sbb
out
xor
pop
bound
push
lcall
add
lds
outsb
cmp
jge
mov
sbb
dec
mov
dec
pop
jge
pop
das
mov
jae
and
loope
mov
or
rcr
cld
addr16
div
rcrb
mov
hlt
ja
inc
dec
and
loope
movsl
sbb
jmp
and
xor
fistpl
sbb
lock
lret
push
lahf
jne
xor
imul
out
sbb
jbe
nop
movsb
cltd
lds
dec
cld
inc
ds
test
add
stos
pop
mov
mov
mov
pop
cmp
and
inc
andb
les
fwait
or
mov
shr
sbb
inc
cli
les
adc
mov
lods
xchg
adc
jbe
or
add
test
test
enter
lret
inc
mov
movsl
mov
stos
xor
lea
add
cmp
lahf
je
test
int3
sbb
sbb
call
pop
daa
cwtl
lds
je
ljmp
mov
cmc
fidivs
inc
int3
mov
sub
xchg
mov
cmp
push
dec
xor
clc
inc
sbb
mov
je
pop
xchg
mov
cmpb
cwtl
enter
inc
xchg
inc
xor
mov
pop
repz
xor
mov
lcall
or
mov
adc
cmc
insl
scas
cmp
bnd
mov
mov
int
jl
arpl
fcmovbe
les
push
push
push
push
stos
loope
int
sbb
pop
fildl
pop
dec
mov
inc
and
mov
aas
mov
cmp
shlb
mov
add
cli
ret
repz
add
push
adc
dec
push
add
xchg
cs
dec
xchg
mov
pop
mov
sub
jmp
orb
repnz
int
int3
out
popa
or
stc
stos
jns
sbb
cmp
inc
mov
push
hlt
add
inc
mov
popf
insb
inc
jge
test
icebp
icebp
pop
ljmp
pop
nop
adc
daa
test
cltd
push
pop
dec
ja
inc
push
fisubrl
test
das
xlat
xchg
or
addl
frstor
cmc
or
cs
mov
xlat
xchg
outsb
or
cmp
push
and
pusha
sbb
mov
inc
rcrb
mov
test
mov
mov
movsl
and
popa
jns
stos
push
idivl
mov
or
mov
lods
sub
xor
xor
push
inc
mov
js
cmpsb
sbb
sub
sti
pop
xchg
and
xor
dec
mov
sbbl
loope
mov
mov
sub
cmp
lcall
call
lock
pcmpeqd
push
gs
add
icebp
call
and
sub
dec
in
mov
bound
lret
stc
mov
sub
ja
inc
leave
xor
cld
shl
mov
inc
dec
or
sub
add
jg
sbb
arpl
lret
or
and
xor
and
data16
jne
ss
test
or
push
sbb
adc
push
xchg
mov
sub
push
jne
lods
sub
xor
jmp
test
add
sahf
mov
les
lea
and
cld
dec
xlat
xor
xchg
pusha
ljmp
xor
jge
ret
clc
in
push
mov
jg
nop
nop
push
imull
pop
sub
cmp
daa
lahf
iret
pop
insb
adc
and
push
jo
shrb
push
cli
sbb
mov
rcrb
lahf
into
mov
sbb
rcll
into
jns
jae
pushf
add
ret
insl
xor
mov
pop
jne
stos
xor
push
sbb
inc
lret
mov
sub
mov
mov
jmp
mov
leave
mov
mov
in
repnz
lds
adc
push
xchg
jle
xor
ds
push
jne
rolb
jp
xor
out
in
cmp
xchg
fcoml
daa
out
sbb
xchg
fisttpll
popf
sahf
sti
or
movsl
pop
pop
mov
pop
jp
arpl
lret
jmp
insb
mov
cmp
lock
psraw
dec
enter
nop
add
mov
jg
aad
loopne
gs
push
in
jg
dec
cld
jns
mov
adc
xor
xchg
movsl
push
mov
dec
cltd
test
and
adc
fstl
mov
mov
add
and
repz
stos
test
cmpsb
outsb
leave
jbe
adc
sbb
insb
push
jns
leave
adc
ret
sbb
subl
jbe
je
enter
add
mov
clc
fisubrl
jns
dec
cmp
adc
jae
cmpsb
mov
inc
scas
leave
add
xlat
push
fst
bound
jp
adc
and
test
movsl
xor
mov
mov
xchg
adc
xor
aad
jmp
mov
arpl
xchg
sub
insl
stos
sub
mov
jle
jno
mov
movl
fcompl
lods
ljmp
jns
icebp
test
shrl
in
jp
adc
add
lods
cli
in
and
sahf
add
fmull
ror
cmp
and
sbb
lcall
sahf
pop
sbb
stc
out
fldenv
lahf
je
add
rcll
pop
push
jg
adc
loop
cmpsb
mov
bound
fisttpll
and
mov
mov
cld
xor
jg
push
loopne
iret
cmpsl
nop
pusha
call
dec
mov
xchg
adc
mov
mov
mov
xor
lds
mov
nop
loope
sub
and
mov
mov
mov
dec
test
hlt
jecxz
lods
mov
inc
mov
jecxz
mov
dec
movsb
inc
mov
mov
in
mov
sbb
fwait
out
cmp
mov
in
cmpsl
mov
lss
jbe
loopne
in
mov
movsl
pop
jb
addr16
call
loope
call
pop
add
test
add
mov
mov
rcll
jae
or
push
mov
lret
mov
movsl
aad
cmp
dec
rolb
push
dec
ja
and
movsl
sbb
gs
scas
dec
lret
rorl
repnz
mov
pop
out
jge
scas
pop
adc
push
cld
or
push
jno
push
mov
jecxz
test
adc
lahf
xchg
and
mov
and
and
addr16
pop
cmp
pop
inc
mov
push
jle
es
or
enter
mov
ror
push
fucomip
lods
in
fcoml
add
dec
or
test
inc
mov
inc
mov
fwait
inc
xchg
push
lahf
xchg
push
jbe
lret
xchg
fdivl
lea
lea
mov
bound
scas
idiv
int
or
cld
hlt
dec
loop
mov
call
xchg
push
mov
test
mov
lds
arpl
mov
into
dec
xchg
pop
out
inc
cmc
cmp
pop
shll
xor
jmp
push
sbb
imul
shl
cmp
ret
inc
add
mov
pop
es
xchg
cltd
add
lea
push
sbb
sub
or
cmp
sbb
push
push
ficompl
addl
bound
out
mov
mov
lcall
jns
arpl
cmp
les
popf
imul
shrb
stos
jns
adc
arpl
lds
pusha
sbb
out
les
inc
loop
sbb
sahf
int
in
xor
inc
out
sub
inc
addr16
jne
movsl
xchg
mov
js
mov
push
fs
call
and
sub
xor
or
ja
inc
data16
lds
xlat
inc
jo
dec
sbb
lcall
loop
jo
out
cltd
data16
mov
out
cmp
adc
data16
cs
loop
fwait
and
xchg
lock
leave
mov
fwait
push
aad
jno
mov
shlb
stc
loop
leave
testl
ljmp
adc
adc
vunpckhps
mov
subb
addr16
adc
push
and
pop
cmp
andb
repnz
lods
sti
sbb
dec
lea
lcall
nop
aad
cmpsl
js
push
or
sbb
cmpsb
or
pop
inc
dec
dec
andb
inc
bound
push
rcrb
mov
cmc
ret
push
fiaddl
and
pop
and
pop
js
jns
push
and
inc
xchg
cmpsb
movsl
sub
rorb
adc
xchg
loop
mov
test
add
sbb
dec
pop
sub
mov
adc
insl
xchg
jne
dec
sub
adc
xlat
in
adc
fldenv
out
pop
jge
iret
inc
jbe
imul
cmpsl
dec
xor
jo
fdivrl
lcall
dec
xchg
shl
sub
mov
pop
and
aaa
dec
movsl
movsl
push
addl
mov
jmp
stos
inc
mov
fisttps
and
loopne
rcl
pop
push
js
mov
mov
ficoms
outsb
shlb
inc
pop
xor
jge
insb
mov
pop
scas
adc
cmp
inc
and
into
lods
into
mov
pop
int3
cmp
mov
mov
or
sub
es
push
fwait
mov
dec
mov
jne
sub
pop
mov
push
insb
push
push
fcomps
icebp
mov
jo
adc
xor
and
sbb
pop
inc
xor
aam
out
test
mov
repz
add
iret
inc
inc
les
imul
ret
sbb
rcrb
imul
dec
dec
lret
enter
add
adc
add
lcall
pop
push
mov
clc
fcmovb
push
xchg
push
mov
scas
pop
and
mov
inc
push
mov
enter
xchg
mov
in
bound
adc
xor
add
sbb
push
imul
push
cmpsl
jg
cmp
addl
xchg
gs
mov
jne
insl
inc
daa
sbb
xchg
call
lock
and
or
xchg
and
sub
fistps
fiadds
lock
aaa
pop
mov
es
lods
test
testb
aad
jne
in
push
dec
shrb
test
mov
adc
xchg
out
or
jle
movsl
loopne
out
xor
xor
daa
ja
loopne
ficoml
cmp
xor
sub
lods
andl
pop
enter
xor
imul
push
sub
insb
scas
pushf
push
test
push
sub
stos
into
xchg
aam
push
stos
mov
and
out
ret
lods
cmp
push
into
aad
scas
mov
int3
pop
ret
dec
jb
addr16
xchg
in
add
fwait
enter
fistpll
mov
lret
out
int3
pop
stos
call
adc
test
mov
and
or
inc
mov
mov
sbb
fimuls
ja
dec
repz
imul
fnstsw
inc
insb
aaa
mov
xchg
pop
inc
shlb
mov
inc
nop
add
inc
adc
nop
in
sti
adc
loope
pop
stos
popa
sub
pop
xchg
in
adc
push
and
inc
pusha
jp
outsb
xchg
aad
add
mov
sub
sub
xchg
mov
jbe
sahf
adcl
adc
pop
outsb
mov
dec
adc
pop
jnp
cmp
test
sub
push
mov
xchg
cli
push
push
imul
adc
cmp
in
pop
sbb
inc
pop
out
inc
mov
mov
sub
nop
jle
ret
push
sbb
je
daa
mov
insl
icebp
nop
clc
in
lret
sbb
pop
cmpsl
mov
add
mov
mov
mov
in
lcall
pop
lea
jb
push
jle
sbb
pop
int
dec
and
nop
nop
mov
popa
into
sub
outsb
mov
inc
imul
xor
out
xchg
pop
cmp
sbb
sub
dec
test
and
jle
and
aam
push
push
push
int3
pop
push
repz
mov
pop
in
inc
shrb
mov
or
pop
push
es
xor
xchg
repz
insb
sub
fldcw
lock
aad
or
xor
aad
cwtl
jle
into
xchg
dec
xor
test
int
mov
mov
mov
dec
and
adc
shll
cmp
push
mov
popf
hlt
mov
cmpsl
jne
repz
pop
cmp
out
push
jnp
shrb
mov
and
shll
ret
out
test
adc
adc
or
xor
shlb
xor
jo
push
test
aaa
ss
mov
mov
or
mov
inc
cmp
mov
adcl
cmpsl
jb
into
in
rcrb
add
xor
frstor
xor
out
fildll
insl
sbb
jae
push
pop
andl
nop
cs
jp
and
outsl
xchg
sub
ljmp
adc
and
add
movsb
sub
add
out
es
adc
jne
mov
add
adc
dec
ljmp
inc
popa
leave
mov
push
pop
mov
ss
mov
pop
out
sbb
push
rcl
loop
dec
sub
cmp
dec
repz
mov
fwait
pop
ret
in
mov
fadd
sub
fld
adc
cli
mov
pop
stos
add
add
jae
imul
popf
mov
data16
sub
mov
fwait
lock
inc
add
jmp
jae
mov
and
jmp
loop
xchg
not
pop
sbb
ds
mov
inc
mov
sarb
dec
mov
dec
andb
or
insb
out
add
rsqrtps
aam
in
in
inc
mov
xchg
dec
dec
popa
mov
lods
mov
fiadds
adc
daa
or
cmp
pop
jb
mov
adc
push
cmp
frstor
outsl
pop
push
pop
sahf
scas
cmp
cmpsl
stos
adc
aaa
lret
int3
stos
shlb
out
cmp
mov
in
or
loopne
push
lret
out
dec
test
out
jbe
sbb
into
or
mov
xchg
popa
sub
repnz
and
mov
mov
cmp
jbe
outsl
jnp
xlat
pop
paddsb
mov
popf
pushf
pop
dec
movsb
mov
mov
sbb
add
fsub
mov
adc
push
mov
or
push
iret
push
xor
mov
push
pop
dec
sub
sub
lahf
int3
xchg
es
sub
cmp
sbb
xlat
xchg
rcll
je
push
push
mov
stc
or
fcmovnu
push
lcall
int
dec
sub
inc
test
iret
cmp
pop
adc
iret
push
dec
cmpsl
mov
jno
xchg
insl
insl
adc
mov
bound
xor
fcmovu
jb
pusha
xchg
push
mov
adc
fimuls
cltd
push
outsl
mov
lds
pop
std
pop
push
hlt
sub
and
call
and
mov
adc
leave
adc
cmp
add
adc
nop
inc
out
dec
adc
adc
sub
imul
dec
in
push
jnp
insl
jns
lods
jne
jno,pt
out
sbb
out
lcall
mov
addr16
js
fstpl
fnsave
pop
fistps
pop
clc
jae,pt
pop
imul
inc
jns
mov
add
inc
jge
repz
movsl
xor
daa
clc
ljmp
and
adc
cmpsb
ret
fiaddl
jmp
ret
orb
xchg
popl
push
xor
fcoml
xchg
push
mov
fisubs
cmp
js
les
add
fnstcw
aaa
cmp
orb
mov
sarb
fcmove
xor
inc
into
orl
dec
push
adc
ljmp
stos
or
divl
dec
cmp
cltd
jns
nop
aaa
fistl
ljmp
mov
xchg
sub
adc
xchg
xchg
dec
mov
xor
or
fs
sbb
inc
jne
outsl
push
scas
rcll
push
dec
push
jb
ss
mov
stos
mov
add
jae
negb
cmp
pop
nop
mov
dec
and
mov
push
jl
dec
imull
lds
cmp
jl
or
mov
lea
cmp
fs
xchg
jecxz
jecxz
xchg
ret
mov
insl
mov
inc
pop
cmp
jecxz
fdiv
dec
push
sub
or
incb
xor
jb
das
inc
mov
stc
subl
push
ds
ljmp
scas
sbb
add
push
nop
push
jnp
push
sub
sbb
mov
push
push
clc
pop
nop
sbb
clc
neg
sbb
mov
push
xchg
push
shlb
in
repnz
test
adc
dec
je
jmp
iret
cmpsb
cmp
mov
add
cli
jmp
xchg
lret
imul
pop
aas
jle
imul
mov
scas
js
cld
adcl
push
in
js
push
insl
cmpsl
sub
dec
aam
cs
es
dec
in
adc
leave
or
xchg
shlb
pop
outsl
movsl
imul
push
pop
cmp
push
inc
lods
fistl
jbe
xchg
mov
movsl
sbb
sbb
or
sbb
iret
aad
repz
adc
test
add
push
xor
pop
leave
nop
push
jl
iret
jo
jp
aaa
fs
jne
or
xchg
jns
dec
mov
cmp
adc
mov
mov
jns
dec
lods
mov
push
mov
out
aas
sbb
inc
jne
fwait
imul
repz
mov
fcomps
or
jge
mov
jle
add
xor
add
sbb
add
inc
push
call
test
clc
inc
mov
sbb
add
or
push
cs
out
sub
inc
add
ficoms
add
pop
inc
ret
pop
add
xchg
sar
pop
dec
xor
aad
cmc
mov
aad
clc
mov
xor
jo
mov
dec
cmp
sub
mov
add
cmp
icebp
into
out
mov
lods
mov
adc
lret
lret
imul
jge
and
sbb
mov
cli
xchg
adc
sub
lods
arpl
jle
lods
cmc
pushf
ljmp
dec
and
lock
push
jl
inc
lea
cmp
push
xchg
shrb
cmp
jnp
aad
mov
roll
rorb
scas
leave
inc
mov
bound
imul
insb
mov
and
cwtl
ds
jo
ss
lcall
xor
mov
in
and
dec
hlt
push
sub
js
fbstp
adc
add
insb
or
sub
or
cmc
int3
pusha
fs
imul
shll
test
mov
pop
and
add
jnp
shlb
push
outsl
sbb
adc
pop
fnstcw
sbb
insb
and
xor
dec
out
mov
jmp
adc
in
rcll
or
subl
push
outsl
outsb
pop
add
sub
push
dec
xor
dec
aad
add
lret
add
push
add
xor
mov
dec
shlb
and
aaa
jg
push
cli
cmp
sub
pop
out
add
sbb
cmp
popf
popf
xor
or
or
xchg
mov
cmc
loopne
mov
jnp
jb
and
fwait
jmp
xor
or
pop
outsb
aas
jl
pop
pushf
or
imul
sub
push
push
stos
aas
mov
add
aaa
shrb
jp
orb
repz
add
stos
testl
ds
loope
pop
mov
sbb
push
add
lahf
repnz
in
and
pop
mov
mov
jecxz
cmp
inc
nop
mov
fcmovu
pop
sbb
adc
xchg
xor
add
push
dec
pop
loope
in
pop
in
mov
adc
lahf
adc
rcrb
adc
std
iret
in
push
fldcw
stc
sub
ret
ret
std
mov
add
sbb
xor
ret
pop
jl,pn
ljmp
repz
jno
ljmp
push
fwait
mov
jns
dec
push
cmpsb
jo
sub
rclb
stos
mov
fs
inc
push
or
outsl
push
xor
mov
jne
aas
insl
pusha
sbbb
xor
test
sbb
mov
jae
and
xchg
or
lret
sbb
mov
or
mov
jno
xlat
outsb
repz
or
bound
push
clc
ljmp
sbb
jno
mov
dec
shlb
push
lahf
push
adc
js
or
sti
or
arpl
movsl
lcall
loop
xor
shlb
dec
push
push
xchg
lods
mov
and
mov
jne
fbstp
pushf
icebp
test
out
lods
adc
aaa
jp
cmpsb
xchg
int
mov
mov
mov
and
fstpl
inc
orl
cld
leave
mov
int3
push
sbb
add
out
xor
mov
mov
mov
lcall
int3
cmp
insl
call
xchg
fwait
xchg
push
sbbb
sub
jno
loop
sti
fdivrl
scas
or
sarl
fisubrl
pop
pop
sarb
push
lahf
xor
ljmp
aad
rcl
mov
in
insb
sub
movsb
jle
or
les
test
pop
pop
push
sbb
outsl
inc
scas
in
cmp
iret
adc
loopne
and
push
sahf
cmp
pop
xlat
and
in
jl
movsb
lods
sahf
jb
in
lods
dec
xchg
incb
imull
pop
js
or
mov
jne
ret
push
adc
push
ljmp
mov
jge
and
ret
incl
dec
ud1
jbe
xor
push
jge
mov
pusha
repnz
nop
sbb
jl
jg
imul
push
mov
push
mov
pushf
fmul
cs
xbegin
popf
mov
sub
sbb
jp
and
adc
mov
xor
jge
push
fists
les
and
or
inc
mov
mov
xchg
cwtl
inc
push
and
idivb
dec
fisttpll
ljmp
jbe
xchg
test
in
push
fidivrl
mov
inc
push
inc
push
ja
lock
loope
subb
fildll
aad
xchg
in
xor
loop
mov
xor
fstpt
arpl
sbb
mov
out
adc
jp
testl
xlat
xlat
aaa
sub
mov
test
dec
fdivrl
mov
jge
jp
sbb
scas
aas
push
and
push
mov
mov
xor
ss
popf
mov
fisttps
mov
test
leave
fs
shrl
or
leave
pop
sub
mov
movsl
lcall
shl
movsb
std
dec
mov
mov
jbe
aam
or
in
mov
loop
loope
adc
or
xlat
gs
push
jmp
push
xor
fsubr
loopne
pop
dec
cmp
mov
mov
outsb
pop
push
in
cmp
data16
popa
sbb
scas
data16
adc
into
mov
nop
fimuls
sbb
in
gs
cmpsb
in
ficomps
inc
rcr
xor
cli
xchg
jb
out
icebp
adc
std
dec
lods
inc
out
push
movsl
lds
insl
std
movsb
fcmovne
xchg
scas
or
mov
jmp
fstpt
mov
dec
roll
imul
and
xor
jmp
mov
int3
popa
cmp
mov
nop
push
or
jmp
mov
aas
pop
in
xor
enterw
mov
pushf
in
and
les
je
test
xor
and
rorb
clc
movsl
lock
inc
lock
dec
or
jo
test
mov
aad
mov
sub
push
push
pushf
push
ret
push
repz
adc
inc
pop
add
or
sti
or
fnstsw
lock
mov
pop
jmp
inc
sti
mov
mov
xor
push
add
mov
pop
popf
or
inc
push
push
mov
dec
out
and
and
das
sbbl
and
jecxz
adc
push
dec
fadd
fadds
lcall
outsb
cmp
std
addl
lods
jb
fbld
add
push
add
pop
lret
cltd
rcrl
mov
addr16
movsb
sti
mov
mov
int3
call
addr16
mov
inc
pop
fiaddl
xor
outsb
pop
sarb
mov
lret
jl
push
push
xchg
jne,pt
fs
cmp
mov
mov
into
cmpsb
mov
pop
les
jns
jo
dec
push
setge
rcrb
cmc
ljmp
stos
add
push
hlt
daa
jecxz
repz
fwait
and
lock
mov
cwtl
fildll
mov
jno
pusha
out
xlat
and
cwtl
test
xor
fwait
xchg
in
jns
xor
mov
inc
sub
dec
shlb
shl
jecxz
loop
mov
js
cmp
mov
inc
test
lods
cmp
hlt
lcall
les
jo
stc
xchg
sbb
notl
subb
xchg
mov
insb
cmpsb
mov
shlb
outsl
push
pop
inc
xchg
bound
adc
mov
cmp
mov
aaa
cmp
enter
push
and
mov
adc
mov
mov
sarl
insb
xor
jle
sbbl
pop
in
lea
dec
jae
add
sbb
push
pop
arpl
mov
or
mov
bound
pop
pop
jnp
aaa
stos
mov
ret
stos
inc
movsl
pop
mov
jnp
adc
xor
cmp
sub
jp
mov
mov
popa
mov
xor
or
pusha
test
ret
or
repz
repz
push
lods
jno
lcall
rolb
inc
btr
add
insb
cmpsb
or
jmp
repnz
in
inc
int3
sbb
int
mov
fsub
push
ds
or
and
imul
jmp
add
and
mov
dec
add
inc
in
pop
stos
sub
in
cmpsb
in
jl
lds
fisubs
jle
inc
js
rol
in
mov
and
push
sub
mov
sub
lret
leave
jne
in
pop
push
bound
pop
pop
ja
pop
jne
adc
xchg
stos
mov
cmpsl
xor
divb
std
mov
movl
and
call
out
xchg
test
push
xchg
and
sbb
mov
in
cmp
cli
cmp
inc
jb
shl
add
pop
cmp
xchg
add
cmpsl
aas
pop
inc
push
pop
repnz
inc
inc
xor
popf
push
loope
xchg
xor
into
mov
sub
and
cmp
pop
inc
adc
fdivl
xchg
inc
bound
pop
iret
inc
icebp
jg
ds
aas
xchg
test
mov
incl
lret
cmp
cltd
arpl
repz
mov
xor
mov
jmp
mov
shr
repnz
mov
cmc
xlat
inc
inc
xchg
mov
add
xor
inc
int
or
es
dec
push
into
sub
pop
icebp
iret
cltd
lcall
shlb
inc
cmpsb
cmc
sahf
bound
and
pusha
shll
mov
xchg
add
idiv
add
rcll
sbb
stos
sbb
test
jmp
addb
outsb
push
shrb
in
dec
psubusw
gs
fisubrs
and
push
lahf
sbb
mov
js
mov
mov
rclb
pop
and
dec
xchg
sbbb
in
sub
and
push
testl
stc
xor
pop
icebp
inc
cwtl
iret
clc
xor
fadds
pop
or
or
mov
xchg
mov
sarb
xchg
inc
cwtl
test
mov
cmp
adc
xchg
stos
leave
loop
lcall
pop
sub
push
call
lock
cmp
xchg
jg
mov
loope
test
push
and
mov
cmp
xor
mov
addr16
in
push
push
xor
repnz
test
cmp
fsubs
cmp
imul
push
ss
inc
cltd
ret
ljmp
stos
ds
cwtl
into
push
stc
cmp
mov
jmp
es
sbb
enter
in
inc
push
mov
outsl
movsb
sub
loope
push
fidivs
lret
shlb
jne
xchg
mov
jnp
push
cmp
cmp
push
xchg
xor
cs
aam
add
jno
int
adc
in
fwait
adc
ret
cmp
adc
ds
aad
stc
sbb
pop
addl
mov
pop
push
daa
mov
cmpsl
mov
cmp
jmp
add
imul
lahf
test
xor
pop
ds
test
int
fdivrl
ret
jmp
jno
int
cltd
jb
in
mov
fsubrl
and
je
je
fstpt
dec
pusha
push
arpl
dec
sti
sbb
in
leave
ds
jae
mov
iret
jns
xlat
or
push
mov
and
push
jle
roll
jnp
cwtl
pop
mov
mov
orb
xor
mov
xchg
push
dec
test
js
jae
xor
or
cli
xchg
sub
push
mov
push
jecxz
jmp
push
sub
jmp
sbb
shufps
insl
jl
sbb
loopne
xor
stc
adc
push
ja
mov
mov
lret
xchg
jmp
rcrl
test
sarl
push
ss
inc
pop
pop
jecxz
mov
xchg
mov
mov
lcall
pop
mov
sub
shl
push
adc
adc
out
scas
cs
or
les
or
outsb
push
jmp
bound
xchg
scas
sti
add
cmp
adc
xor
aas
testb
ja
cli
call
xchg
jge
movsl
fistpll
push
sbb
fmuls
repnz
aas
mov
test
cli
pop
sbb
xor
lret
rcl
movsl
lahf
mov
jo
adc
rcrb
pusha
or
add
push
mov
jne
add
pand
int
fcoml
inc
test
shrb
insl
adc
pop
js
xor
mov
pop
pop
xlat
les
xor
xor
pop
cmp
mov
xchg
dec
mov
sub
xor
fisttpl
sbb
js
loope
ret
xorb
cli
add
sbb
ljmp
sbb
adc
in
out
enter
xor
daa
mov
adc
xor
sbb
adc
add
test
aas
addr16
adc
push
subb
dec
test
mov
not
jp
adc
jp
int3
leave
rcrb
mov
cmp
dec
fndisi(8087
cmpsb
and
push
dec
leave
scas
push
and
in
xor
lret
sti
in
add
jo
dec
jo
mov
xor
repz
and
jo
dec
xlat
pop
mov
scas
lahf
orl
in
movsl
in
fsubrs
mov
mov
bound
lahf
rol
call
test
bound
inc
aad
or
idiv
adc
nop
aad
xchg
enter
mov
clc
inc
insb
sahf
repnz
lock
cmp
mov
insl
ja
add
nop
mov
and
movsb
mov
pushl
les
in
mov
mov
cmp
popa
clc
sbb
fcomip
xor
repnz
pop
pop
test
cld
nopl
pop
shll
lock
jge
mov
cmpsb
cmpsl
loopne
cli
nop
jg
jl
or
stc
adc
xchg
clc
gs
lock
std
dec
js
mov
ljmp
loope
in
ds
iret
mov
test
xor
inc
inc
inc
or
imul
mov
arpl
fisubs
sbb
mov
leave
add
cli
pushf
pop
fwait
outsl
jnp
xchg
sub
repnz
sub
or
lret
mov
or
addl
pop
cmp
sti
add
scas
nop
test
adc
push
mov
mov
mov
inc
cmp
lds
xchg
add
pop
push
iret
icebp
or
pop
dec
lods
pop
jmp
sbb
fdivp
xor
inc
shlb
lods
cmp
mov
lods
mov
sbb
arpl
sti
out
int3
dec
in
xor
dec
jnp
rcrb
mov
sub
leave
add
push
outsb
push
push
inc
lcall
in
push
out
sbb
mov
loope
dec
loop
push
int
imul
sub
cmp
push
xchg
push
out
pop
sbb
leave
jns
push
mov
daa
mov
lods
test
ja
dec
outsb
push
out
pop
xbegin
punpcklwd
in
sbb
arpl
arpl
daa
mov
or
mov
popf
mov
xor
es
cld
mov
and
pop
cmp
scas
mov
pop
pop
pop
insl
mov
das
fistpl
outsb
subl
mov
enter
xor
jmp
push
adc
mov
notb
fdivrl
inc
and
dec
in
mov
and
test
xchg
out
loope
push
insl
repz
sub
jecxz
inc
int
sub
xor
xchg
jbe
push
mov
inc
test
ds
jp
mov
out
jg
and
xchg
xchg
mov
pop
pop
iret
fdivr
fwait
mov
insl
cwtl
jbe
xor
fldcw
sahf
cwtl
cwtl
orb
adc
jns
icebp
jb
jnp
dec
mov
jp
inc
dec
shll
push
mov
cld
ret
xchg
add
mov
int3
out
pop
add
mov
sub
scas
sbb
loop
dec
dec
cmp
push
xchg
pop
ds
fs
movsl
xorb
addl
sar
jae
sbb
adc
jnp
stos
mov
ljmp
pop
jnp
jp
mov
ss
inc
or
push
out
or
jmp
addl
ret
and
jns
jb
icebp
fsubrs
ljmp
test
jb
push
xor
jmp
jmp
cltd
das
rcl
shlb
xor
in
mov
shr
push
dec
rolb
jbe
nop
add
cld
imul
push
add
mov
test
and
mov
popa
imul
or
adc
xorb
pop
xchg
shrb
aad
push
and
sbb
std
int3
and
pop
cmp
pop
xchg
adc
mov
lret
jmp
dec
dec
dec
dec
add
sbb
out
jmp
cltd
gs
pop
icebp
cmp
and
in
jo
cmp
fsubrs
notl
fcoms
xor
jmp
ds
xor
int
out
pop
xor
sub
gs
pop
push
in
fldcw
test
dec
jp
shr
xor
lret
aas
xor
pop
inc
lods
sbb
out
adc
sbb
jl
jns
cmp
imul
inc
nop
or
and
mov
sub
mov
ljmp
in
addr16
out
mov
pushf
cwtl
stos
lods
mov
dec
or
pop
arpl
out
out
sub
mov
mov
loopne
stc
fwait
std
cmp
sub
sub
out
fwait
rol
es
movsl
mov
roll
cmc
out
sarb
jno
jbe,pn
fists
stos
mov
mov
sub
scas
cmp
lcall
add
sti
insb
mov
mov
xor
mov
hlt
insb
pop
push
add
xor
mov
jmp
mov
cmp
stos
and
pop
mov
idivl
or
inc
aaa
out
out
inc
sbb
jge
add
jns
std
add
xchg
pop
outsl
or
pop
xor
out
jecxz
hlt
gs
aas
mov
dec
jg
push
jmp
sbb
xor
incl
std
aas
sti
pop
out
push
pop
cwtl
addr16
mov
jmp
shlb
dec
mov
xorb
or
icebp
lret
cmp
adc
mov
and
repnz
pop
call
in
push
xchg
mov
cmpsb
into
mov
or
clc
sub
jp
daa
sub
dec
and
lds
push
add
in
dec
sbb
xchg
in
stos
imul
insb
mov
jbe
lahf
cmp
mov
add
outsl
bswap
adc
movsb
mov
movsb
fadds
repz
sbb
dec
xlat
add
pop
and
or
cmp
and
cmp
leave
mov
scas
stos
test
or
xchg
adc
cli
jno
sub
or
inc
and
cmpb
mov
add
mov
cmp
mov
call
xchg
mov
mov
add
enter
jb
insl
mov
xchg
roll
xor
push
mov
xor
sbb
lret
inc
xchg
daa
pop
aam
movsl
ret
inc
push
mov
loope
lret
push
insb
adc
dec
gs
sbb
push
pop
cs
imul
mov
fs
ds
mov
push
sbb
mov
sbb
sub
inc
mov
lret
jae
sbb
cltd
sub
decb
inc
dec
aas
iret
in
pop
pop
lret
jp
or
scas
mov
incb
push
sub
mov
test
xchg
dec
popf
mov
lahf
dec
cmp
lret
rorb
xorl
sbb
shlb
sbb
flds
lock
sbb
pop
bnd
enter
pop
xchg
clc
stos
mov
movsb
inc
or
sub
int3
inc
sbb
dec
push
test
fidivl
jnp
sbb
lret
pop
xor
fstpt
aas
jae
sbb
daa
insb
lock
rcll
inc
or
call
aas
popf
ss
rol
lds
adc
iret
push
cwtl
fs
push
pop
dec
in
js
add
dec
add
mov
orl
iret
loope
jle
mov
icebp
dec
jb
push
stos
mov
lret
push
out
jnp
lds
mov
aaa
sbb
cmpb
mov
xchg
cwtl
xor
repnz
adc
data16
dec
xorl
aaa
insb
pop
cmp
jbe
xchg
jmp
popa
aam
stos
add
cmpsb
push
fcomps
mov
dec
clc
mov
jae
inc
out
and
xchg
lcall
aas
xor
mov
bswap
cmc
mov
mov
sarb
sti
test
sbb
ret
popa
cmpsb
iret
mov
push
and
push
cmc
cli
jnp
roll
nop
and
cld
in
pusha
out
jmp
mov
mov
mov
lock
cmpsl
cmc
dec
ret
cwtl
mov
push
inc
mov
insb
loop
pop
out
addr16
lcall
push
lods
cmp
lret
into
and
stos
jmp
sbb
xchg
arpl
dec
add
cmp
mov
cmp
dec
xchg
jno
push
ja
repz
stc
fwait
sti
aam
in
loope
mov
xor
sarl
int
ret
lea
rol
mov
inc
orb
xor
and
pop
in
and
pop
fbld
sub
inc
cwtl
lcall
mov
inc
pop
mov
add
stc
mov
add
xlat
leave
xlat
cld
xlat
out
cmpsl
mov
and
add
add
pop
fnsave
push
xchg
cld
sub
insl
leave
dec
insb
in
loopne
mov
sti
scas
filds
add
jnp
mov
mov
cmp
idivb
push
pushl
repz
fcomi
sub
cmp
dec
fcomp
and
repnz
xchg
mov
cmp
les
or
ljmpw
in
ret
mov
rolb
arpl
or
jge
les
fstps
sub
or
pop
cmp
mov
int
outsl
inc
mov
jp
rorl
addr16
imul
nop
pop
enter
mov
pushf
cmc
add
mov
mov
mov
mov
cmpsl
inc
orb
icebp
std
mov
jg
movsb
and
inc
dec
out
out
movsl
call
mov
clc
jle
adc
adc
mov
stc
mov
xor
fisttpll
mov
lea
aam
imul
push
push
fmulp
adc
aam
inc
lods
stos
dec
inc
pop
loope
or
dec
cwtl
out
mov
sti
and
mov
adc
mov
mov
lods
out
or
fdivp
andb
sub
cmc
cmpsb
out
mov
fildl
xor
add
mov
std
repnz
mov
ja
inc
mov
dec
sub
jae
andb
jns
ja
ljmp
out
test
dec
sti
cmp
xor
ds
adc
sbb
cmp
stos
xor
jge
push
mov
lods
out
cmpsl
push
add
add
adc
out
into
pop
xor
push
mov
sub
outsb
or
ret
lds
push
bound
inc
mov
arpl
and
imul
popf
dec
and
adc
sub
shll
pop
and
leave
lret
cld
repnz
inc
ss
enter
xor
cmpsl
popf
fists
popa
xchg
lcall
sub
aas
push
adc
test
popa
mov
mov
ret
arpl
pop
iret
push
jo
pop
test
js
test
enter
add
pop
cmpsb
cld
pop
lret
cmp
or
out
out
test
ljmp
lods
and
mov
sbb
pop
int3
mov
jg
sub
or
inc
cmpsl
adcl
pusha
test
stc
pop
addl
push
test
jg
sti
add
cmp
xlat
sar
js
cs
pop
loope
pop
xchg
pop
mov
cld
inc
pop
or
int3
sbb
mov
xor
addr16
lock
aad
iret
arpl
push
fstpt
fs
test
imul
stos
or
push
mov
stos
sub
mov
loope
push
mov
dec
jle
bound
cmp
fidivrl
or
xchg
jge
xor
add
pushf
sub
and
in
jnp
pop
mov
xchg
xchg
dec
lods
pushf
mov
fs
mov
in
cs
push
shlb
mov
push
mov
add
cmovle
lcall
adc
ret
sbb
pop
mov
inc
iret
mov
outsl
sbb
xchg
jnp
rolb
je
scas
push
jmp
sbb
mov
inc
int
or
lcall
mov
mov
xor
dec
mov
pop
out
and
add
pop
int
in
sbb
das
jp
cmpsl
cld
std
cmp
dec
scas
cmp
cld
js
xchg
fistpl
data16
pop
lods
addr16
arpl
cli
lahf
push
div
in
push
push
sbb
sbb
shlb
inc
int3
insl
xchg
cmp
ds
fistps
mov
dec
push
cmp
outsl
int3
adc
inc
fiadds
dec
dec
xor
push
ds
sub
js
js
lods
rcrl
jno
fcmovnbe
or
scas
pop
push
incb
push
add
shrb
add
xor
faddl
fstp
fst
sbb
loope
and
rolb
fiaddl
or
add
mov
inc
call
push
in
in
xchg
lahf
mov
insb
sub
xchg
sbb
lock
nop
lods
fsubrl
fimull
cmpsl
fdivrl
dec
mov
std
mov
jmp
pop
mov
xchg
cmpb
jp
fdivrl
push
and
int
xor
les
in
xlat
ja
push
test
movsl
xorl
iret
and
popa
sbb
lods
outsb
aas
push
loopne
imul
rol
mov
pop
daa
mov
std
lea
fcompl
shlb
in
push
mov
mov
or
xor
imul
cmp
sbb
cmp
pop
repz
ds
cmp
sbb
popf
ret
int3
js
in
scas
sub
sbbb
add
aaa
ret
out
js
sbb
lods
leave
and
push
push
js
out
stc
aas
push
lea
ljmp
pop
vmulsd
and
and
cmp
jle
mov
pop
adc
mov
mov
cmpsl
mov
es
add
dec
dec
or
mov
outsl
pop
popa
dec
inc
xor
lea
cld
ss
push
cld
and
sti
sbb
loop
jmp
jns
sbb
outsl
jl
icebp
nop
inc
loop
insb
movsb
dec
xchg
add
testb
fidivl
inc
aam
xlat
fwait
xchg
mov
inc
or
scas
mov
inc
ljmp
sub
stos
jle
xchg
mov
push
call
dec
xchg
dec
adc
inc
imul
mov
call
test
stc
aas
jnp
mov
repz
jle
inc
shll
jne
mov
jp
xchg
jne
lcall
cmc
sbb
push
xor
add
sub
gs
fists
xchg
stc
aad
out
lahf
jnp
fbld
rorl
in
ror
lahf
pop
scas
jl
add
mov
push
xchg
adc
and
cs
scas
lahf
fsubrl
cmp
or
or
mov
lock
sub
push
dec
sbb
loope
sub
sbb
xlat
repnz
decl
sub
mov
pop
pop
divl
inc
mov
ret
imul
addb
sub
mov
adc
aaa
mov
fwait
jno
jle
jbe
imul
dec
mov
in
sbb
popa
in
lret
lahf
sub
aas
dec
sarb
imul
mov
push
dec
xor
lea
inc
push
or
cmp
mov
dec
or
repz
sub
je
push
sbb
jns
insb
arpl
in
sub
enter
aam
jmp
int3
pop
scas
icebp
lret
sti
pop
movsb
imul
and
dec
sub
inc
out
mov
add
fisubrl
push
scas
les
das
shll
pop
insb
xlat
push
mov
push
in
out
insl
push
inc
mov
jecxz
xor
jno
sub
fs
outsl
mov
fistps
leave
mov
fcompl
push
es
and
jae
mov
repz
lods
sbb
dec
inc
int
mov
jmp
xor
lahf
fidivrs
popf
xor
lret
sbb
cs
jns
mov
lea
scas
push
test
in
jp
dec
push
jmp
mov
shlb
je
jno
push
adc
sub
adc
sbb
out
loope
push
jle
lret
xchg
sub
ficoms
cmp
mov
mov
dec
jl
and
jle
push
xor
pop
test
in
cltd
mov
mov
pop
adc
out
rclb
jecxz
jge
inc
sti
cmpb
pop
cmp
or
rorl
add
outsl
pop
pop
stos
clc
ds
dec
mov
jno
xor
push
sar
inc
aas
cli
jae,pn
jle
in
or
or
push
sbb
stos
pop
inc
fwait
mov
xlat
dec
xor
stc
jns
mov
xlat
mov
aad
pop
push
movsl
dec
adc
cli
cmp
xchg
gs
xor
loope
cs
cltd
dec
sub
jecxz
inc
fs
insb
push
repnz
hlt
xor
sub
test
in
adc
mov
inc
pop
inc
outsl
and
call
jg
adcb
inc
insl
shlb
push
or
push
pushf
call
mov
scas
das
test
jae
sub
xchg
sahf
call
push
adc
dec
and
push
or
ds
pushl
adc
orb
in
stc
cs
stos
cmp
xchg
outsl
test
xor
inc
repz
addl
mov
nop
mov
add
adc
sahf
pop
outsl
outsb
mov
jae
das
cwtl
les
rcrb
jae
jo
aam
xor
jns
cmc
jo
stc
adc
dec
pop
or
mov
sub
sti
mov
add
imul
adcl
imul
push
fsubrs
ja
lea
insl
ss
add
mov
jno
inc
pusha
dec
dec
xor
popa
call
mov
imul
inc
mov
mov
cwtl
mov
movsl
popl
fdivr
jl
mov
shlb
mull
je
mov
jp
adc
cmp
das
inc
inc
push
dec
lods
stc
leave
cmc
in
dec
out
aas
ss
pop
sbb
ret
out
dec
repnz
outsl
cmp
xlat
push
lods
repnz
push
out
cmp
jns
outsl
repz
sbbb
test
jge
cmpsb
out
mov
das
je
insl
mov
pop
lods
dec
movl
gs
nop
dec
test
cli
decb
pop
insb
popf
jb
fdivp
imull
mov
xchg
or
cmp
push
mov
insb
jne
cli
fisttps
lds
xchg
push
data16
fnstsw
jle
adc
mov
mov
ds
pop
pop
jnp
sbb
dec
test
les
setle
and
sbb
imul
fidivs
xor
cmpsl
popw
adc
xlat
sub
gs
mov
divb
sub
jge
sub
mov
inc
and
jbe
mov
cmp
stos
nop
sbb
inc
push
lcall
mov
leave
inc
adc
sbb
ret
sub
fisubl
ror
push
push
dec
sub
dec
adcb
ret
out
cmc
daa
pop
sub
push
stc
lock
mov
xchg
mov
fisubl
push
std
dec
push
mov
sbb
movsb
xchg
inc
jp
jno
jle
jecxz
les
xor
pop
push
jae
jl
and
mov
dec
xchg
xchg
arpl
xchg
iret
push
lret
sbb
dec
test
mov
cmp
sarl
insl
pop
mov
sbb
push
jle
xchg
addr16
in
fldl
lods
test
and
hlt
enter
mull
icebp
fcompl
cmp
pop
in
xlat
add
jmp
popl
push
dec
ljmp
add
ja
loop
dec
inc
mov
push
jae
mov
xor
pop
push
jecxz
adc
aam
cmp
xlat
aaa
stos
fistl
jmp
lds
out
fwait
dec
sub
add
inc
jecxz
cmpl
lret
xor
xchg
xor
sti
sbb
mov
ljmp
pop
stc
push
push
ret
icebp
cli
sahf
xchg
pop
addr16
pusha
xchg
loope
jae
adc
lea
into
cmpb
icebp
or
sub
std
stc
ret
ficoms
in
mov
mov
mov
icebp
popf
jmp
popa
repz
ja
stos
in
rorb
jne
push
and
push
sti
cmc
adc
mov
adc
pop
adc
mov
cmp
mov
jge
and
mov
lods
clc
pushf
fs
bound
add
mov
jne
std
fsubrs
lret
daa
mov
iret
lcall
repz
insb
adc
or
or
insb
cmp
fiaddl
lea
push
dec
call
data16
mov
push
cli
sub
jns
movzbl
sub
inc
pop
in
jg
lret
sub
iret
lea
outsb
aas
add
sub
cwtl
setns
daa
daa
lea
pop
shr
pop
ret
loopne
in
loopne
bound
rcrl
rcll
mov
cld
jmp
pop
xchg
or
mov
jle
fsubl
dec
inc
inc
mov
inc
add
frstor
xor
pushf
jecxz
mov
mov
ret
out
cmpsl
adc
ss
xor
unpcklps
rol
icebp
jle
cli
pop
dec
inc
shrb
mov
xchg
mov
ss
enter
pop
xor
mov
faddl
je
imul
bound
andb
mov
cmp
xchg
mov
mov
push
inc
adc
mov
lcall
loope
cmp
mov
add
rcrb
leave
mov
jns
xchg
and
addr16
scas
mov
cmp
dec
jg
jo
dec
and
cwtl
pop
in
cmp
jg
cmp
inc
outsb
ret
mov
pushf
cmp
mov
rcrl
jg
fldcw
and
dec
divl
fbld
add
push
sbb
loop
xchg
leave
ss
fistps
in
push
pop
adc
stos
or
shll
xchg
loope
mov
test
push
loopne
ja
add
push
fnstcw
push
inc
cmp
fstps
add
xchg
cli
es
out
or
mov
mov
dec
xchg
sub
mov
jno
mov
lods
mov
jbe
inc
mov
or
loop
in
mov
sbb
ds
je
lock
sub
clc
cmp
lods
leave
mov
adc
jno
push
mov
pushf
movsb
ljmp
in
test
aas
cmpb
insb
fwait
and
mov
jb
mov
arpl
and
loopne
add
cmp
fistpll
cmp
and
adc
jecxz
sbb
xchg
stos
sahf
in
std
enter
idiv
xor
dec
mov
insl
mov
or
mov
shlb
jp
mov
cld
lret
sti
jl
or
popa
adc
stos
sbb
sub
out
push
ja
inc
pop
jae
xchg
outsl
push
xor
xor
sbb
fsts
mov
test
popa
mov
xor
xchg
lods
shll
pop
movsl
ret
mov
and
cltd
iret
pmuludq
cmp
scas
les
inc
fsubrl
outsl
arpl
fisttps
mov
mov
cmp
add
stos
xchg
subl
xlat
nop
cmc
in
in
insb
sub
xlat
jne
in
pushf
push
movnti
adc
jns
icebp
xor
loope
mov
jae
lret
loopne
pop
movups
cmp
clc
lahf
jo
fsts
outsl
mov
mov
pop
adc
adc
stos
sbb
xchg
mov
fsubs
fs
cmp
pop
sbb
mov
pop
or
adc
push
pop
testb
jb
dec
sbb
sub
outsl
faddp
dec
ds
jns
hlt
or
pop
test
lea
add
setg
lcall
int3
jns
int
aad
out
lock
mov
cmp
faddl
into
in
mov
neg
push
or
icebp
popa
int
jle
cmpb
jp
ficompl
in
scas
cmp
add
out
sbb
aaa
das
ja
shll
cmp
sbb
pop
mov
out
xor
mov
cmpsb
inc
fmull
loopne
rcll
push
sbb
lock
ljmp
lock
lds
dec
leave
adc
call
push
int3
jo
mov
lea
mov
mov
cmp
mov
or
cmp
add
in
movsb
mov
pop
and
cs
stc
add
ficoml
loopne
ss
scas
out
xlat
and
sarb
jnp
fstl
inc
js
xor
pop
pop
add
fmulp
shrl
call
sub
mov
stos
in
insb
int3
pop
mov
imul
test
add
pop
gs
int3
outsl
xor
je
pop
pusha
mov
cs
mov
mov
dec
rcrl
outsl
push
mov
js
push
ficoml
loop
inc
mov
aaa
mov
mov
cmp
and
and
into
sub
jmp
xor
shld
dec
mov
mov
inc
lret
jp
test
es
push
dec
mov
inc
cmp
repz
xchg
dec
adc
fidivrl
int
mov
add
and
aas
nop
dec
sub
adc
jg
lods
aaa
pop
repnz
jecxz
clc
nop
jecxz
pop
sub
xor
aam
sahf
mov
or
loopne
cmpsl
stos
int3
popf
addr16
shlb
clc
cmp
stos
movsl
xchg
pop
insl
jg
add
outsb
ret
mov
pop
test
jl
ds
notb
jb
mull
pop
inc
pop
jno
aas
adcl
add
dec
adc
inc
sub
mov
adc
aad
in
dec
mov
in
ret
sbb
adc
daa
scas
ret
loopne
cs
cmpsb
sti
inc
in
push
cmp
cmc
mov
mov
in
fcom
lahf
popf
mov
add
in
fisubrl
mov
pop
pop
repnz
fs
sub
xor
hlt
sbb
gs
arpl
inc
fchs
repz
cmp
jecxz
xchg
test
inc
sbb
adc
in
push
jmp
test
adc
pop
aaa
xor
shll
std
out
add
xchg
add
and
loop
testl
adc
out
addr16
dec
push
sbb
cmpsb
stos
jns
nop
pop
inc
fdivp
sti
int
jg
sub
or
lods
mov
xchg
lods
popf
scas
and
fs
xchg
xchg
xor
fcoms
inc
sub
add
lods
push
sub
iret
lods
clc
jbe
xor
jl
clc
mov
add
dec
mov
out
rorl
pop
cs
loop
xchg
sbb
cmp
or
sbb
and
movsb
xchg
out
xchg
aaa
adc
dec
xchg
sahf
call
add
push
sub
rcll
dec
push
xor
add
xchg
sar
sbbb
outsl
fistpll
jnp
cld
or
loop
dec
mov
adc
movsl
mov
out
gs
mov
cmp
or
enter
pop
or
hlt
lcall
fistps
push
stos
bound
add
xchg
mov
inc
cli
and
pop
cld
or
pop
or
xor
pop
insl
jmp
jbe
pop
mov
cmpsb
lret
stc
sbb
cmp
sub
loopne
xchg
jnp
rorl
lahf
call
pop
jle
andl
pop
xor
aas
jo
jmp
call
mov
popa
jl
jmp
jae
push
shlb
incl
mov
cmc
xchg
lods
mov
push
sbb
dec
xchg
dec
fisubrl
mov
xor
scas
sahf
mov
cmc
jae
ds
add
cmp
popa
mov
in
fstps
add
mov
lret
fildl
pop
push
xor
inc
pusha
cmpl
cli
xchg
icebp
js
fiadds
sbb
and
lret
mov
fcmovbe
cmp
dec
sub
stc
mov
fistpl
cld
dec
add
out
push
sbbb
adc
shl
jns
xor
push
mov
aad
jge
lret
aaa
cmp
out
outsl
les
loop
xor
lret
cs
inc
xor
fsubs
mov
rcrb
iret
andl
ja
xchg
inc
sti
mov
arpl
test
out
mov
sti
push
int
mov
jg
mov
iret
daa
push
mov
jp
stc
stos
lret
bound
movb
jmp
scas
aad
sti
js
mov
or
fiaddl
mov
or
xor
dec
insb
dec
pusha
xchg
loopne
divl
enter
jge
dec
xlat
in
pop
adc
sub
jmp
data16
mov
cmp
ret
xchg
outsl
add
fiaddl
insb
dec
roll
pop
xchg
adc
stos
jle
or
push
gs
incl
cmp
cli
cmp
out
rcll
ss
sub
ret
test
cmc
cmpsl
cltd
flds
cmp
test
mov
repnz
inc
xlat
push
sub
sbb
xor
rorl
sbb
insb
mov
insb
or
test
fistl
sbb
inc
loop
int3
pop
shll
push
cmpb
fcoml
shrl
xchg
lret
jns
sub
push
test
in
popl
dec
pop
lcall
cmpsl
mov
pop
pop
mov
loop
add
add
sar
addr16
sub
sbb
push
aad
in
inc
aad
and
push
jecxz
and
out
push
sahf
cmp
cmp
lahf
bound
mov
cmpsb
add
cmp
repz
xor
js
clc
sub
dec
aam
adc
imul
cs
xchg
insl
call
dec
mov
lret
xchg
inc
add
jl
iret
xchg
ljmp
push
scas
xchg
mov
clc
aad
adc
adc
mov
and
arpl
rorb
add
lahf
push
dec
pop
lret
stos
cld
gs
inc
scas
mov
jge
jno
xchg
push
mov
jno
mov
in
subb
jne
pop
movsl
test
lds
inc
mov
outsl
jno
shr
bound
pop
sub
arpl
adc
pop
leave
insb
jge
rcll
add
leave
fiaddl
mov
hlt
clc
into
mov
mov
ss
mov
dec
test
fwait
arpl
cmp
and
lcall
scas
jno
ret
jno
mov
popf
in
repnz
jl
sub
pop
aas
subl
lret
scas
sub
xor
in
mov
sub
std
mov
pop
mov
dec
in
int3
sub
xchg
sub
mov
push
mov
incl
sub
mov
xor
data16
fdivrl
data16
or
push
cmpsb
test
inc
mov
xchg
mov
ret
push
rcll
cmp
or
mov
add
or
les
xlat
add
movsb
orb
push
test
pusha
aaa
adc
adc
mov
push
test
xchg
cmp
xor
mov
mov
inc
mov
jno
lahf
sbb
pop
push
push
ret
mov
xlat
clc
cmpsl
gs
push
and
push
ljmp
clc
push
and
xor
sub
in
fwait
pop
gs
nop
push
xor
sbb
aas
add
xchg
test
sub
js
cmpl
mov
mov
cmp
int
jle
push
xchg
mov
ret
and
jg
outsb
cltd
add
in
mov
add
outsb
or
addr16
xchg
jg
js
pop
dec
lock
icebp
fimuls
xchg
int
mov
and
inc
push
outsb
in
dec
jae
ds
imul
cmpsb
aam
orb
pavgw
or
xchg
fildl
adc
cmp
loope
stos
and
push
pop
pop
icebp
jns
fwait
stc
or
xor
dec
out
mov
inc
or
daa
lret
and
sbb
outsb
lret
imul
and
mov
pop
inc
mov
adc
testl
fbld
jmp
icebp
outsl
sub
xor
lret
sbb
inc
and
out
add
sar
aad
aam
cmpsb
leave
push
jno
xchg
sub
fisubs
sbb
cmp
xchg
jecxz
gs
out
lcall
jp
fdivr
add
mov
xor
aas
dec
aaa
pop
clc
push
pop
scas
mov
fwait
mov
shlb
xchg
dec
fldenv
jge
xchg
leave
pop
inc
in
sub
cmp
mov
test
scas
pop
bound
aas
and
loopne
daa
pop
mov
shlb
sub
push
rol
sbb
push
xor
jne
in
xor
ljmp
push
lods
imul
inc
js
mov
cmp
adc
fdivrs
jb
pop
pop
pop
in
je
int3
pop
jb
or
inc
mov
and
xchg
int
or
inc
pop
outsl
mov
push
adc
idivb
and
cltd
sbb
das
in
jo
jecxz
repz
xchg
add
divps
iret
fs
mov
cld
ficoml
and
xor
outsl
rcll
jne
nop
xchg
test
test
add
test
out
jecxz
or
push
dec
pop
pop
inc
adc
pop
mov
ja
mov
test
xchg
dec
mov
mov
stos
shll
scas
xchg
adc
push
dec
sbb
popf
loope
or
xor
push
or
lahf
dec
sarb
jp
test
mov
test
dec
iret
mov
bound
mov
movsl
mov
rcl
outsb
cmp
sbb
xor
sub
sub
mul
test
sub
es
mov
mov
fwait
sbb
hlt
fsubrs
pop
xor
ljmp
ret
mov
popf
jecxz
and
sub
int
xchg
and
dec
xor
imul
add
xchg
test
int3
test
ja
sahf
aad
jae
lds
stos
jp
sub
jae
mov
sub
adc
xchg
std
xor
xor
add
loopne
cmpsb
dec
and
cmc
lcall
mov
xchg
sbb
jbe
lcall
out
or
in
or
jb
call
popf
test
outsl
and
push
mov
cmp
mov
test
cmpsb
xor
stos
nop
sub
fstl
add
mov
jmp
dec
pop
add
fs
fiadds
pushf
imul
cmp
xlat
shrl
cld
call
les
faddp
inc
ret
dec
adc
adc
and
pop
mov
sub
js
mov
popl
ret
sbb
sub
jecxz
jno
xchg
xor
movsb
cwtl
adc
adcb
cmp
add
jecxz
outsl
mov
in
sti
mov
inc
aas
movsb
imul
xor
xchg
cmp
jae
inc
popf
push
fcompl
loopne
dec
icebp
and
rclb
jbe
push
ficompl
or
mov
jl
cwtl
aas
adc
xchg
adc
mov
test
notl
inc
jb
lahf
adc
movsl
filds
cmp
sub
fdivrs
test
xor
dec
push
and
movsb
popa
ret
fnstcw
ret
je
lods
aaa
push
cmp
test
adc
xchg
lds
push
loop
or
xchg
mov
sub
insl
lods
jo
lcall
lods
dec
sbb
pop
cmp
push
cltd
stc
rorl
lods
pop
and
mov
mov
pop
jl
lret
sub
cltd
mov
mov
cmp
push
pusha
cmp
test
or
jp
fbld
inc
dec
mov
int3
adc
add
add
cmp
xchg
pop
int3
int
sub
and
xlat
scas
xchg
orb
cmp
hlt
or
imul
sub
imul
imul
dec
inc
inc
scas
not
leave
imul
push
out
xchg
dec
jne
sub
cmp
xor
and
mov
push
inc
xor
xor
pop
aas
inc
inc
xchg
and
mov
dec
cmpsb
enter
or
mov
sbb
test
sti
push
jne
cmpsb
push
mov
shlb
inc
cmpsl
mov
pop
jmp
xor
jl
dec
es
movsl
gs
stc
pusha
cld
popf
jnp
insb
arpl
rcll
jb
mov
dec
icebp
ret
inc
mov
xor
repz
idivl
sahf
or
push
xorb
cli
rorb
xor
rcrl
mov
dec
pop
xor
xlat
cmp
scas
andl
ds
sbb
cs
icebp
out
cmp
pop
clc
int
xlat
cmp
outsl
cltd
enter
mov
inc
mov
aam
inc
in
xchg
push
hlt
sub
push
dec
mov
aad
add
aad
test
jge
push
push
insl
outsl
ss
mov
sub
dec
inc
xchg
add
mov
mov
js
and
inc
xor
sub
push
sbb
jnp
pop
sbb
push
es
mov
jmp
pushl
jns
push
mov
inc
testl
dec
push
daa
aas
mov
and
jecxz
ret
cmp
loope
out
xor
mov
push
shrb
and
int
mov
or
imul
xor
mov
pop
insb
xchg
adc
and
jecxz
shll
leave
mov
out
cs
into
mov
xchg
jb
rcl
and
cmp
dec
nop
outsl
adc
xchg
adc
loope
mov
fmull
xchg
push
fldcw
loopne
movsb
addr16
adc
ds
scas
add
inc
fisubrl
int
or
inc
cmp
push
jae
add
mov
imul
inc
mov
ja
aaa
xor
push
jae
fwait
jp
and
ja
dec
loope
cmpb
ror
dec
add
jbe
xchg
mov
jnp
in
mov
or
dec
push
dec
xchg
push
inc
add
push
and
out
pop
mov
sahf
es
mov
or
xchg
cmp
lcall
mov
fsubrl
sub
xor
pop
mov
and
test
test
or
scas
mov
repnz
in
push
and
shl
enter
jno
inc
stc
add
jo
and
and
sahf
shrb
cmp
out
jo
fldt
fsub
rolb
imul
mov
sbb
fcoms
sbb
adc
jnp
fdivrs
movsb
xor
sub
outsl
int
mov
sbb
pop
jecxz
loope
xor
jnp
or
in
jmp
adc
jns
cmp
test
sub
or
dec
arpl
adc
mov
inc
add
cwtl
mov
fimull
fbstp
jecxz
cmc
inc
mov
in
mov
mov
mov
dec
mov
xor
pop
testb
mov
mov
adc
xchg
aad
cmpsl
test
push
pop
dec
jl
daa
fwait
loope
ljmp
mov
xorl
popa
jnp
jge
mov
stc
mov
mov
arpl
xor
jne
adc
mov
inc
ret
inc
fcmovu
popa
push
insl
arpl
sbb
xor
mov
mov
jle
lahf
jp
mov
adc
das
pop
loope
cmpsb
xchg
mov
data16
jl
jo
add
out
adc
or
pop
xor
cmpsb
std
inc
in
adc
push
ljmp
iret
mov
gs
and
xchg
adc
dec
jnp
sub
pop
dec
inc
inc
pop
jae
dec
mov
loop
pop
xchg
xlat
in
inc
das
in
enter
jo
in
inc
cs
outsl
push
inc
add
testl
fists
negl
sbb
outsl
adc
dec
cmp
pop
stos
xor
or
adc
dec
pop
inc
mov
imul
or
fwait
xor
xor
cli
adc
lock
dec
jbe
mov
les
fcmovb
out
imul
cmp
jmp
das
in
adc
mov
std
fidivs
jp
stos
jg
or
mov
divl
pusha
stos
ja
mov
adc
fildll
jne
mov
push
xchg
push
jle
fisubrl
lcall
or
int
std
xor
mov
fmuls
mov
call
mov
add
pop
aas
aas
jmp
fs
mov
mov
imul
mov
arpl
shr
test
daa
cld
mov
inc
pop
test
pop
cli
ds
mov
outsb
aaa
fidivs
ljmp
pop
dec
lret
stc
es
fadds
ret
jo
int3
int
rorl
mov
sbb
out
pop
int3
das
cmpsb
mov
mov
js
fbstp
xchg
pushf
out
push
dec
jmp
fcomps
mov
cmpsl
inc
dec
cmpsb
aad
mov
je
clc
and
xlat
addr16
and
pop
repnz
or
iret
lea
popa
and
inc
mov
data16
jb
mov
in
mov
rcrb
fcompl
adc
movsl
bswap
mov
pop
movsb
pop
pushf
lcall
jae
inc
dec
pop
and
or
fildl
or
aam
mov
in
cmpsl
cld
lea
add
sbb
test
ja
xor
add
fimull
jmp
xor
add
ja
int
inc
add
mov
cmp
mov
xchg
jl
mov
rclb
push
lret
jae
popa
fidivrl
idiv
fcmovb
push
jg
xor
pop
adc
jge
sub
sahf
adc
pop
ret
shrl
dec
jge
out
pusha
sbb
sub
bound
sbb
or
ja
xor
xchg
add
push
dec
cltd
jo
pop
aaa
mov
sbb
lds
les
pop
in
test
pop
addr16
push
mov
xchg
mov
pop
inc
les
jae
jmp
sarb
pushf
in
mov
and
jmp
fdivs
cli
lds
bound
mov
inc
je
mov
stos
test
and
into
gs
xchg
ret
mov
out
loope
loopne
adc
pop
std
js
jb
icebp
out
stos
cmp
sbb
cmp
add
ljmp
ds
fstpt
arpl
cmp
push
mov
jge
addr16
xor
mov
cltd
mov
and
cli
cwtl
stc
lahf
or
out
mov
dec
cmp
fwait
shlb
xor
dec
sbb
icebp
push
mul
cmp
loop
push
je
fsubr
movsl
inc
fcoms
push
push
push
push
mov
cmp
hlt
jle
jl
sbb
test
xchg
mov
inc
mov
cmpsl
inc
fcoml
xlat
sub
imul
outsb
pop
pop
add
mov
sub
js
dec
ret
gs
sbb
je
bnd
sbb
movsl
jge
cld
sbb
stc
mov
cmp
inc
loopne
fbld
je
mov
sbb
mov
push
push
push
mov
pop
mov
mov
ffree
inc
mov
push
leave
hlt
outsb
pop
xchg
sub
xchg
push
outsl
xlat
mov
and
adc
stc
and
mov
test
jne
jge
inc
mov
mov
push
xchg
pop
push
test
outsl
imul
les
les
ror
cmp
dec
in
sbb
dec
ljmp
jnp
or
mov
inc
push
mov
cmp
inc
cwtl
gs
add
int
das
pop
and
dec
sbb
mov
std
fadds
adc
mov
jo
mov
jb
lea
les
pop
sbb
lea
mulb
and
test
fsubl
stc
out
test
jae
jne
mov
mov
inc
movsb
jmp
cmp
cmp
lcall
xor
mov
shll
sbb
jge
in
or
pop
cmpb
out
cld
sub
xchg
or
lahf
jecxz
call
mov
cmp
ljmp
mov
and
les
dec
push
adc
or
sbb
stos
sbb
stos
bnd
rclb
imul
lret
lods
pusha
cmp
xchg
pop
cli
sbb
pop
xchg
mov
shlb
push
xchg
sahf
xchg
pop
adc
sbb
push
or
xlat
into
shll
dec
lret
jp
sbb
jo
fldenv
in
or
subb
cs
nop
add
cli
fimull
fwait
call
pop
xchg
or
les
shr
das
mov
out
sbb
mov
mov
push
addl
push
jo
mov
icebp
dec
movsb
cmc
dec
xchg
sti
out
xor
int3
ret
iret
or
add
push
inc
mov
ret
rcrb
pop
and
mov
rolb
mov
clc
lcall
push
lahf
dec
sarl
and
sbb
popa
testb
sub
das
mov
and
imul
push
lods
outsb
lahf
ds
fmuls
orps
cltd
iret
addl
ret
imul
and
jo
test
inc
mov
push
inc
imul
xor
push
roll
push
enter
lret
insl
repz
fsubrs
mov
out
inc
cmp
fwait
je
mov
xor
push
in
ret
lds
inc
dec
cmp
sub
push
push
mov
cwtl
sbb
mov
or
jmp
pushf
or
leave
pop
das
or
mov
xlat
and
mov
mov
dec
sarb
fldenv
fidivs
ficoms
jb
aad
scas
mov
mov
or
xor
nop
lods
xlat
jge
testb
shl
jbe
cmp
add
shll
mov
fidivrs
cmp
daa
sbb
push
add
int
stc
ret
test
mov
push
pop
and
stos
push
loopne
faddl
cmc
xlat
aad
imul
push
gs
call
xchg
mov
outsl
pusha
mov
dec
sub
pop
movsl
pop
in
dec
arpl
ficompl
mov
mov
mov
arpl
loope
mov
int3
or
lock
add
jmp
pop
xor
push
sbb
sub
ss
imul
push
stc
pop
xchg
sti
aaa
inc
leave
sub
stc
inc
lea
cwtl
insb
adcl
sub
xor
mov
mov
test
es
out
mov
add
or
lea
scas
pop
ljmp
loope
movsb
xchg
sti
or
mov
lcall
in
jmp
repz
fiadds
mov
pop
ds
mov
es
pop
out
jbe
jecxz
shl
cwtl
scas
loop
stos
adc
sbb
decl
into
paddusw
ljmp
mov
test
lcall
cmp
jo
jl
jae
and
movsb
sub
adc
dec
rcl
rcll
mov
out
ss
push
ss
mov
dec
test
add
movb
push
pop
mov
sbb
mov
cmp
jecxz
ret
out
push
fcoml
icebp
es
shrb
sub
ds
mov
fcmovnu
int
mov
cwtl
dec
sub
lods
addr16
inc
mov
aaa
mov
bound
shrb
push
push
or
pop
lods
or
sub
jae
nop
cli
in
rolb
mov
push
xchg
mov
inc
out
js
jecxz
push
test
inc
sbb
je
dec
sub
in
roll
adc
sar
out
adc
adcb
add
aas
dec
outsl
fldt
add
mov
inc
les
cltd
mov
outsl
inc
gs
repnz
fsubr
adc
cmp
adc
sti
pop
add
cwtl
sti
mov
lea
in
icebp
mov
bound
mov
cmp
frstor
outsb
mov
xor
enter
jmp
or
pop
das
add
loope
xor
test
or
mov
popf
lcall
xchg
rorl
daa
pop
xor
sahf
cmc
das
mov
xchg
pop
lods
mov
jg
jg
mov
sbb
jnp
inc
mov
sub
dec
int3
mov
inc
out
adc
push
mov
pusha
push
mov
xchg
lea
adc
roll
lret
mov
jns
jae
dec
add
aaa
xor
popf
sbb
mov
cmc
xchg
fdivr
or
lret
adc
sub
jecxz
xchg
aaa
sub
pusha
mov
sbb
cmp
mov
mov
lods
dec
mov
adc
cs
ljmp
pop
push
pop
mov
leave
in
cltd
sbb
cli
jbe
iret
mov
outsb
into
stos
adc
adc
jae
ret
addr16
xor
outsl
cmpsl
test
or
or
pop
lds
fistps
sbb
mov
sbb
pop
pop
mov
xor
push
sahf
test
scas
mov
imul
bound
cli
enter
aam
xor
movsb
stos
push
sbb
cmp
mov
jnp
cwtl
pop
aad
inc
mov
inc
pop
or
jmp
lock
insl
sahf
imul
mov
sub
adc
pop
sub
cmp
arpl
hlt
mov
insb
repnz
jno
test
icebp
pop
jmp
jg
mov
subl
jl
mov
lcall
inc
fs
xor
jo
cltd
adc
js
mov
repz
sub
mov
cmp
loopne
cmpsl
mov
mov
mov
xchg
mov
mov
jecxz
shll
xor
pop
mov
push
adc
xorl
out
jl
je
jo
rorl
out
jae
dec
jl
jmp
aas
mov
mov
xchg
sahf
or
or
xor
pop
out
push
arpl
cltd
jle
iret
sub
push
pop
xor
cmp
outsl
addr16
add
jl
push
lea
pusha
jl
and
je
lcall
jbe
pop
sti
test
in
add
pop
mov
inc
fistpll
insb
xor
repnz
jecxz
pop
in
popa
ljmp
and
pop
jmp
psubq
enter
inc
in
hlt
pop
jmp
and
mov
push
test
jbe
dec
aam
mov
or
pop
std
or
clc
out
cmp
and
push
cmc
mov
adc
ljmp
loopne
ret
cs
adc
dec
das
lds
sbb
arpl
cli
fldt
jno
lods
xchg
and
push
mov
into
add
dec
lods
cmp
mov
sub
sub
sbb
lret
mov
int3
sahf
mov
in
sarl
into
mov
pop
icebp
inc
pop
imul
pop
jle
inc
push
mov
dec
inc
xor
mov
mov
pop
add
jne
jo
dec
inc
pop
dec
inc
fidivrl
lret
xor
repnz
mov
xchg
mov
sahf
out
fsubrs
jno
inc
xchg
movsb
lods
push
inc
xlat
js
mov
add
pop
push
jne
xchg
mov
pop
lea
adc
ret
xchg
enter
aas
cli
js
push
jne
mov
jmp
inc
ds
sub
les
pop
sub
je
push
ja
mov
pop
fcmove
bound
popa
cmp
aas
std
push
ja
lret
jle
dec
xchg
push
popa
dec
sbb
addl
and
sti
adc
mov
xor
push
mov
and
cld
data16
outsb
mov
or
sub
divb
and
sbb
loope
lahf
xor
enter
cmc
stos
lret
xor
pop
ss
and
das
mov
or
mov
push
test
test
rcl
pop
pop
in
pusha
inc
push
in
fisttps
insl
scas
enter
and
sbb
dec
sbb
mov
mov
add
cmpsb
mov
xchg
fdivs
out
aas
add
ds
jo
push
and
xor
addb
push
test
dec
and
xor
loop
jge
mov
mov
sbb
mov
mov
stos
insl
push
mov
lret
lods
or
mov
cld
xchg
out
mov
decb
sub
mov
lcall
add
cmp
or
mov
add
outsb
ss
mov
sbb
pop
lret
iret
aad
lds
lods
ljmp
sahf
aad
rcrb
jbe
sub
fisubrl
pusha
and
cmc
adc
cltd
addr16
loop
aaa
dec
xor
dec
in
cmp
clc
mov
and
sbb
or
sub
and
pusha
mov
xchg
xchg
pop
lret
insb
insl
jns
sub
hlt
test
jp
loope
sub
mov
clc
loopne
stos
xchg
fildl
adc
mov
cmp
jmp
sbb
mov
xor
outsl
inc
sbb
enter
dec
lods
aam
inc
cwtl
xchg
xor
sbb
enter
mov
or
cmp
lods
dec
lock
clc
sub
mov
and
push
jno
pop
sti
push
outsl
insl
adc
adc
and
cwtl
into
ret
fsub
inc
adc
jb
jns
jmp
cmp
enter
xchg
mul
dec
sbb
out
cld
pop
sti
mov
mov
push
stos
adcl
jns
jg
mov
jle
lahf
stos
cmp
outsl
mov
int3
sub
or
les
pop
jns
js
jne
cmpsb
jg
sti
sbb
add
fwait
dec
mov
pop
push
icebp
popf
fwait
push
adc
test
out
out
fwait
test
dec
inc
dec
subl
mov
rorb
or
in
xor
add
leave
rcrl
cltd
movsl
js
xchg
inc
xchg
cmp
push
sbb
stos
js
pop
mov
push
jbe
dec
xor
mov
pop
ljmp
pop
xlat
inc
jnp
add
jecxz
ja
pop
jmp
mov
lcall
adc
sarl
pusha
adc
adc
addl
outsb
sub
xchg
in
jmp
pop
and
sbb
cmp
aad
repz
push
rcrb
leave
mull
jl
cld
and
pusha
xor
aaa
pop
or
pop
sub
fiaddl
mov
jne
rcll
xchg
pop
mov
stc
mov
leave
fdivl
call
stos
movsb
ror
orb
fcomps
mov
mov
cmp
dec
pop
jnp
sub
nop
ljmp
leave
jae
xchg
das
lret
int
cs
std
pop
sbb
ds
sbb
or
xchg
mov
es
call
iret
cmp
jl
xchg
dec
and
jp
xor
movsl
adc
pushf
fistl
jne
aas
ret
imulb
loop
pop
or
les
gs
lock
out
jno
mov
out
inc
inc
mov
cmp
push
mov
jle
daa
repz
fildll
fldcw
into
mov
out
mov
add
ds
ret
call
rclb
xor
mov
inc
cld
loopne
mov
xchg
fucomi
add
push
fcomi
jecxz
mov
out
je
jb
mov
aam
pop
xor
mov
sub
xchg
inc
or
in
addr16
jg
dec
loope
in
sti
dec
jbe
mov
das
aad
sub
push
adc
out
push
frstor
fcomps
push
sub
jb
cwtl
in
xchg
outsl
jmp
rcrl
fs
fistpll
lcall
sbb
ret
ss
rclb
sbb
into
adc
stos
clc
cmp
xor
mov
inc
ficoml
adc
add
xchg
lret
jmp
mov
lods
mov
push
es
mov
xor
pop
pop
or
test
lret
adc
frstor
andl
aam
shl
xchg
mov
push
mov
insb
xor
imulb
test
add
mov
or
arpl
jns
jno
lahf
cltd
sub
add
aas
jge
lret
cmp
stos
pop
jne
or
lods
jmp
adc
icebp
hlt
stos
or
out
lea
es
fldl
dec
sub
jl
cmp
pop
icebp
loop
dec
adc
fldt
aas
push
add
jne
mov
mov
scas
dec
lret
jl
mov
sub
jl
add
cld
cs
outsb
xor
out
clc
pop
or
and
subb
mov
negb
mov
jmp
lds
mov
data16
stc
je
jbe
mov
shlb
cmpsl
add
push
mov
arpl
into
xchg
pop
fisubrl
filds
in
lahf
loopne,pn
sbb
pushf
mov
xor
hlt
mov
push
mov
aas
pop
adc
jmp
into
push
jg
fisttps
dec
jmp
ljmp
test
pop
fs
pop
add
pop
ljmp
jne
in
cmp
mov
cmp
cmpsl
mov
xchg
dec
push
lcall
lods
adc
push
sahf
pop
adc
arpl
sbb
mov
and
or
out
cltd
mov
hlt
out
lcall
xchg
xchg
sub
pop
xchg
gs
es
out
shll
jp
fs
adc
pop
lret
cltd
xorl
push
or
sahf
sar
aaa
and
xor
and
sbb
pop
movsl
sbb
jo
imul
fstl
or
in
stc
andb
mov
lret
in
mov
loop
popa
sahf
add
xchg
adc
sub
jmp
pushl
das
and
aam
jmp
hlt
or
cwtl
clc
xchg
stos
sub
fimull
clc
imul
push
dec
lret
pop
jne
cld
xchg
gs
xor
ret
inc
clc
fdivl
je
lret
mov
pop
ja
movsl
int
and
xchg
push
inc
loope
cmp
iret
cmp
lret
outsl
xor
fidivrs
out
xor
mov
mov
mov
sbb
adc
loope
xchg
loop
xlat
jle
stos
jb
sub
shll
push
cmpsb
movsb
inc
pop
arpl
inc
dec
es
in
arpl
add
push
pushf
mov
dec
or
push
scas
inc
and
mov
xor
fsts
inc
mov
mov
in
mov
xlat
adcb
sti
and
mov
out
add
je
shlb
cld
xor
ds
push
outsb
inc
pop
push
xor
lds
jmp
jcxz
add
pushf
sub
in
out
jae
sti
jne
xchg
lahf
leave
jp
repz
xor
sub
adc
insb
in
pop
ficoml
mov
sub
inc
mov
ret
or
bound
int
fisubrs
repz
fisubrl
xor
or
repnz
loope
fcmove
insl
cmpsl
ret
outsl
mov
jnp
add
dec
add
enter
cld
sub
pop
adc
fsubr
cld
cmp
lods
xchg
adc
out
movsl
js
or
mov
cltd
xor
pop
mov
cmc
add
les
aas
pop
mov
inc
sbb
int3
add
movsb
icebp
in
in
push
lcall
push
ret
cmpsl
jmp
out
inc
mov
or
push
rolb
test
pushf
decb
xchg
lcall
scas
std
add
pop
rol
fbld
adc
pop
jmp
repz
mov
fsubl
test
rolb
cmp
stos
mov
dec
jae
xchg
mov
stos
pop
sub
bound
repz
das
mov
dec
mov
inc
mov
aad
inc
and
jg
cli
mov
in
int
push
lds
fldt
sub
testl
inc
or
xchg
std
xchg
or
js
push
xchg
iret
cmpsb
adc
sub
dec
inc
faddl
xor
lods
push
or
pop
fldcw
jbe
pop
cmp
adc
cld
shlb
fldenv
mov
and
adc
dec
push
dec
int
pop
ret
inc
cltd
jle
cmp
outsl
jmp
cltd
clc
adc
das
nop
imul
cmp
aam
xchg
out
mov
int3
adc
cmp
ds
pop
aam
scas
pushf
jno
mov
addr16
jns
pop
in
daa
cmpsl
sbb
mov
ja
xchg
add
mov
pop
outsb
fcomi
in
xchg
in
and
jg
add
int3
lock
pop
mov
push
lret
and
mov
clc
cmp
sub
ds
jnp
and
mov
cmp
mov
mov
push
cmp
sub
lret
adc
imul
mov
int3
scas
or
mov
cmpsl
mov
pusha
jo
pop
test
add
leave
lds
or
push
imul
add
dec
push
fildl
das
push
inc
std
orb
in
or
jle
ljmp
cmp
sbb
push
jns
add
aaa
lea
xchg
in
mov
lock
out
cwtl
pop
into
mov
pop
in
arpl
push
xchg
aam
jbe
pop
sub
xchg
push
push
jecxz
out
gs
movsb
jb
rcrb
dec
mov
cmp
test
daa
push
push
sub
mov
pop
xchg
stc
gs
lods
stc
jne
fmul
ss
jecxz
sbb
xchg
mov
rolb
scas
das
lahf
push
in
mov
arpl
lret
cmpsb
jns
mov
aad
pop
push
and
iret
add
fistps
je
mov
jb
aam
enter
stos
xor
call
inc
loope
out
adc
mov
pop
jae
inc
or
mov
xor
jnp
sbb
rorl
adc
xor
xchg
ja
es
mov
mov
push
cmp
push
fidivrs
inc
js
out
sbb
push
aam
jbe
jp
movsb
or
cwtl
test
push
mov
dec
push
add
pop
pop
les
xlat
dec
insl
inc
mov
jge
sbb
push
hlt
mov
clc
push
mov
mov
pop
clc
xchg
stos
mov
out
dec
mov
fisubrl
xchg
inc
dec
sbb
pusha
pop
fisubs
inc
movsb
sbb
loope
bound
mov
adcl
in
fistl
mov
sub
shlb
push
xchg
push
ds
push
sub
fdivrs
imul
adc
cmp
popf
dec
insb
inc
push
xor
aas
xor
sub
hlt
ret
pcmpgtd
int3
lds
stos
stc
xchg
rcll
xchg
push
add
icebp
aam
jne
das
out
adc
fsub
cwtl
gs
nop
sahf
clc
push
sub
inc
xor
mov
loope
loope
add
xchg
lret
cmp
gs
cmp
insl
mov
ja
inc
fwait
sub
movsb
repz
mov
mov
push
inc
ja
add
dec
shlb
sbb
adc
pushl
ret
rcrb
mov
mov
iret
inc
adc
push
xchg
cld
rolb
out
leave
or
jp
ffreep
mov
sbb
repz
mov
add
xor
inc
pop
mov
pop
jnp
lahf
pop
ja
aad
mov
xchg
inc
xchg
dec
icebp
aad
push
in
scas
pop
addl
rcrl
ret
cmpsl
mov
insl
adcl
xor
add
test
push
icebp
stos
or
jmp
cli
cld
out
outsl
mov
in
adc
fimuls
or
dec
loopne
fnstenv
rcrb
dec
rdmsr
adc
mov
mov
adc
cld
pop
or
pop
ljmp
mov
pop
inc
pop
xchg
mov
add
jle
fscale
repnz
outsl
jb
push
jg
and
sbb
lock
add
call
dec
aaa
cmpsl
fsts
shrl
dec
nop
fildll
cltd
sub
adc
jno
dec
fcmovu
add
adc
stos
dec
lods
xchg
jnp
adc
int
inc
push
imul
dec
cli
and
or
sub
mov
inc
fidivrl
inc
icebp
imul
int
into
imul
in
int
cmpsl
cwtl
fwait
in
inc
inc
cmp
mov
mov
sbb
out
jp
mov
test
add
mov
out
xor
xor
lock
pop
pop
dec
notl
push
insb
add
inc
addr16
jo
xor
outsb
jnp
adc
mov
mov
or
shrl
addr16
pop
sub
je
fcmovnbe
pop
leave
push
leave
push
dec
mov
sbb
mov
cmpl
jne
mov
mov
jp
pusha
je
stc
add
xor
scas
mov
add
jnp
add
push
in
addr16
or
in
sub
cmpl
movb
mov
idiv
cmc
pop
push
jo
subb
xor
cli
lds
hlt
repz
out
or
dec
add
fsubl
push
out
sbb
dec
or
hlt
inc
idivl
add
xchg
mov
neg
stos
xor
jmp
add
fucomip
popf
shrb
sbb
in
mov
aam
ljmp
xchg
dec
pop
mov
into
nop
mov
fsubr
mov
nop
rorb
or
and
pusha
xor
fstpl
xchg
fmuls
enter
jge
xor
pop
aam
aad
insb
cld
xchg
adc
xchg
cltd
lods
mov
mov
mov
sbb
sahf
xchg
push
inc
lcall
mov
or
adc
adc
mov
or
inc
ds
mov
dec
cmpb
test
data16
mov
test
xchg
and
xchg
ljmp
addr16
fcmovnu
inc
int
and
lock
jmp
dec
inc
lahf
jo
mov
adc
push
in
fstpt
insb
push
mov
pop
es
jmp
in
jp
ds
sub
jo
stc
add
sub
cmpsl
out
pop
cmpsl
sbb
or
jo
lea
dec
rolb
pop
cmp
mov
lds
aaa
mov
xor
rorb
int
pushf
or
cmp
cmp
les
pop
push
xlat
dec
pop
inc
push
adc
es
jge
cwtl
sbb
cli
push
dec
enter
sub
loope
idivb
cmp
sbb
nop
iret
push
gs
cmpsl
jg
std
lcall
cld
cmpsl
daa
inc
inc
cltd
mov
incl
mov
inc
sbb
mov
xchg
mov
in
and
jle
aad
lret
sbb
arpl
bnd
sub
mov
test
inc
es
movsb
lds
adc
dec
adc
lods
mov
pop
or
pop
add
add
mov
push
adc
sub
insb
int3
jb
jecxz
inc
movsb
nop
add
adc
xor
out
xor
decl
sarl
or
out
cld
xor
xor
fcmovb
mov
addr16
mov
loopne
insb
xchg
jg
cs
out
loope
imul
mov
scas
cmpsl
xchg
mov
int3
dec
push
push
and
enter
in
xor
push
in
xchg
push
sarl
inc
mov
jp
jmp
jge
pusha
push
sub
push
mov
cld
xlat
ss
jecxz
push
inc
out
mov
repnz
lods
loope
push
xchg
lahf
dec
stos
int3
inc
pop
xchg
cmpsl
sub
push
in
dec
jo
outsl
xchg
cmp
lahf
pop
fcomps
push
pop
add
out
mov
pop
out
add
idivl
pop
sub
push
jnp
pop
sbb
mov
jb
es
sub
inc
movsl
jmp
sub
jl
ficoml
insl
pop
imul
pop
scas
jge
addr16
mov
dec
push
roll
push
and
aad
lock
cmp
mul
push
pop
movsl
add
sub
mov
or
pop
push
test
fimull
pop
into
testl
and
popl
setnp
jmp
adc
in
dec
cmp
jbe
addb
stos
nop
push
in
xor
jl
push
push
dec
sub
push
aaa
and
add
mov
sub
jp
push
dec
xor
push
sahf
jp
out
lahf
sbb
inc
dec
in
cmp
nop
and
push
insb
mov
or
jp
icebp
mov
sub
outsl
xchg
es
ror
iret
jecxz
lea
sbb
das
cwtl
stos
rcr
stos
call
mov
ret
lsl
and
rorl
mov
jne
dec
xor
push
incl
adc
push
push
push
jmp
aam
imul
jle
or
mov
sbb
and
inc
jbe
xor
rorl
xor
mov
inc
jns
adc
lods
xor
das
pusha
jge
mov
adc
int
inc
mov
cmp
enter
push
or
andb
inc
test
add
int3
std
iret
repnz
inc
popf
imul
test
xchg
mov
xlat
mov
orl
loope
cmp
and
mov
xchg
jo
pusha
xchg
or
add
insb
push
test
jecxz
mov
clc
xchg
xchg
dec
dec
inc
inc
lds
mov
es
fwait
js
pushf
jns
cwtl
pop
inc
mov
imull
sbb
jmp
sub
jb
fstl
mov
mul
adc
test
inc
fists
sbb
adc
dec
adc
pop
mov
lret
xor
js
into
ss
imul
mov
ss
divl
das
roll
lods
lds
cltd
out
adc
lods
mov
mov
inc
loopne
mov
mov
hlt
or
push
push
movb
in
cli
mov
xor
pop
lock
stos
lret
cli
push
mov
xchg
sbb
insb
negl
adc
mov
in
xlat
sahf
push
ss
icebp
cmp
add
xorl
sub
data16
jp
addr16
addr16
sub
iret
iret
insb
filds
repnz
adc
add
push
xchg
lods
cmpsb
cwtl
xchg
sbb
addb
pushf
fsubl
dec
imul
loope
cld
aam
cmpsb
lods
or
ror
xor
aad
add
inc
lock
gs
rcr
repnz
stos
push
xor
ja
inc
xor
mov
ja
mov
ja
je
push
shll
inc
mov
add
ret
js
pop
insb
lret
ss
rcrb
insb
sub
scas
gs
xchg
iret
sub
ss
pop
xchg
adc
push
dec
stos
xchg
sbb
std
cmp
in
incl
xor
sbb
jp
popa
sbb
pop
pop
mov
ss
jae
push
test
cmp
loop
vorps
cmp
inc
bound
out
inc
pop
mov
nop
fistpll
jb
cmp
mov
xchg
ret
in
jl
push
and
pop
out
xor
mov
pop
xchg
scas
push
dec
jl
movsl
inc
mov
shlb
mov
xor
cmp
mov
inc
add
stos
int
testb
mov
push
testb
add
in
arpl
xor
xor
push
ret
pop
out
adc
scas
jb
popa
in
cmp
add
sub
jp
adc
jnp
dec
pop
cmp
mov
cmpl
daa
push
push
mov
pop
dec
mov
mov
ret
fwait
scas
sbb
stos
out
test
shrb
sbb
les
popf
sub
jo
shlb
jp
scas
jae
daa
push
dec
sbb
arpl
pop
jle
sbb
outsl
or
xor
adc
sbb
cmpsb
mov
mov
hlt
pop
xchg
mov
push
clc
fisttpl
xchg
sub
mov
sti
scas
outsb
call
inc
lret
fldenv
jno
adc
adcl
insl
movsl
jge
into
daa
jmp
out
jmpw
mov
adc
daa
sbb
loope
mov
jno
imul
and
fisttpll
jae
pop
pop
pop
sbb
xchg
push
adc
push
inc
mov
add
scas
call
faddl
sub
sub
dec
out
pop
fs
mov
pop
add
ds
add
hlt
xorb
inc
int
test
mov
test
scas
mov
mov
es
fdivrl
rcl
mov
jecxz
pop
movq
pop
cltd
fcoml
rcrb
inc
stos
out
scas
lret
mov
cwtl
dec
sub
and
pop
dec
sti
popa
xchg
adc
ja
mov
lret
xor
push
xchg
xlat
cmp
lods
add
pop
rcrl
push
add
push
pop
movsl
out
aaa
or
shlb
pusha
ljmp
xor
push
add
mulb
dec
loope
int3
jl
ret
daa
pop
mov
mov
sti
xchg
mov
in
mov
inc
insb
mov
jne
out
jg
shr
push
ret
inc
inc
cmp
test
sub
inc
xchg
lods
or
mov
rcrb
add
jg
pop
lahf
pop
inc
inc
cmp
sbb
inc
push
jl
ljmp
add
pop
lcall
mov
stos
adc
inc
ret
std
insl
jae
js
and
xchg
rcrb
xchg
das
addr16
stc
jbe
pop
add
fistl
adc
push
mov
dec
mov
js
je
dec
cmpsb
call
popf
jmp
push
adc
icebp
icebp
test
shl
enter
jbe
testb
mov
or
jae
scas
cmp
jns
push
loopne
lcall
loop
xchg
xlat
jg
int3
scas
push
insb
daa
icebp
lret
popf
in
jns
and
sahf
in
pusha
sahf
fwait
or
jle
in
add
or
shll
and
add
mov
in
push
push
ljmp
lcall
pop
sets
and
fmulp
insb
into
outsl
jle
mov
inc
push
jo
mov
jg
push
lock
dec
xchg
jne
jb
in
std
cmovg
add
pop
out
xlat
out
sti
insb
int
ss
test
adc
out
and
xchg
jae
adc
je
add
inc
pop
push
mov
cmp
mov
xchg
mov
mov
push
dec
inc
out
lret
test
stos
xchg
filds
dec
imul
jp
subl
ret
jg,pt
test
jne
xor
imul
mov
ret
push
in
rcr
lods
cmc
lret
loopne
pop
xor
dec
insl
pushl
subl
hlt
iret
mov
jnp
hlt
jae
mov
mov
cmpsl
in
jnp
xchg
mov
repz
sbb
push
mov
andl
pop
popf
adc
test
mov
or
adc
jmp
add
inc
xchg
rol
jmp
insl
sbb
sbb
movsb
sbb
pop
call
in
loope
pusha
adc
dec
push
dec
jp
repz
out
mov
mov
pop
loop
std
dec
lock
jmp
cmp
push
xlat
fdivs
jbe
mov
cmpsl
mov
mov
mov
push
or
jl
jg
into
arpl
mov
mov
iret
shlb
xorl
lret
adc
shll
lods
xchg
mov
loop
sysexit
lea
xlat
rcll
lods
mov
mov
jmp
jecxz
pop
jnp
sbb
fidivrs
jp
divb
aas
data16
insb
mov
sahf
sti
sbb
mov
sub
gs
sub
lods
sub
movsb
inc
fcomps
inc
pop
add
movsb
scas
push
cmp
mov
cmpsl
sub
mov
xor
or
mov
xlat
mov
mov
cli
lea
pop
and
rolb
sbb
adc
or
mov
cmp
jbe
testb
add
jno
lahf
movb
mov
aaa
add
push
mov
push
xchg
lock
iret
add
movsb
data16
testl
xchg
decl
stc
mov
xorl
adc
or
loope
rolb
jg
nop
jg
sub
xor
mov
rolb
mov
and
pushf
out
jbe
cmpsl
ret
stos
jl
jp
push
inc
xor
cmpsl
daa
cltd
ljmp
outsl
cmpsb
xchg
les
test
jmp
stos
lds
rolb
andl
scas
out
loope
cli
jnp
notl
mov
xchg
inc
push
dec
lea
mov
jge
push
cmpsb
push
push
test
push
clc
and
xchg
and
or
push
xchg
ror
in
jecxz
xchg
cwtd
mov
push
jns
nop
fsts
and
in
mov
cmc
sbb
and
pusha
std
lds
rcl
push
popa
icebp
outsl
loope
dec
pop
inc
xchg
push
scas
dec
stos
testl
adc
jb
shl
jnp
jne
punpckhwd
cli
adc
cmp
insb
mov
adc
mov
sarl
add
xlat
push
mov
test
and
mov
add
push
adc
shll
adc
rcll
dec
mov
loope
pop
test
bound
jmp
and
mov
jle
cmp
data16
cmp
aam
push
aaa
add
inc
fimuls
popl
and
in
xchg
clc
popa
ret
lods
jl
cwtl
dec
stos
enter
sub
call
cltd
ja
push
mov
in
fistpll
mov
sbb
push
pop
hlt
or
add
mov
sbb
mov
loope
iretw
lret
push
clc
mov
imul
insb
push
bound
out
pop
rolb
mov
lcall
fcomip
sarl
shlb
cmpsl
pop
add
mov
lods
in
fbstp
addr16
leave
lret
pushf
add
adc
sub
into
dec
test
test
mov
cmpsb
das
iret
adc
mov
and
push
adc
sahf
dec
es
imul
inc
pop
dec
xor
pop
mov
faddl
call
ret
insb
popa
daa
xor
jmp
int
iret
xor
push
mulb
dec
js
and
xorps
inc
das
dec
jo
or
mov
jbe
in
data16
inc
and
lock
mov
das
pushf
mov
cltd
imul
leave
pop
sahf
fwait
mov
mov
pop
jae
imul
dec
xchg
in
loop
lahf
int
and
pop
xor
scas
clc
push
push
mov
in
lea
je
lea
std
push
les
ret
inc
jne
loop
je
das
pop
add
xchg
orb
dec
push
mov
push
scas
mov
int3
dec
cmpsl
arpl
es
int
adc
jne
cmp
add
mov
aam
jbe
insl
outsl
pop
ja
dec
and
dec
xlat
addr16
into
mov
or
inc
dec
or
xor
cwtl
push
cmp
push
sbb
mov
shlb
jecxz
add
ds
outsl
jb
pushf
mov
sbb
jbe
ss
xchg
mov
sti
xor
cli
mov
fisubl
loopne
push
pcmpgtd
pop
xchg
out
test
push
pop
orb
loope
icebp
xchg
cmp
pop
out
adc
insl
rcrb
push
mov
inc
stos
shlb
sub
shlb
test
mov
pop
mov
fcomps
pop
push
xor
adc
sbb
stos
xor
and
dec
outsb
adc
sub
loop
rclb
mov
in
pop
mov
inc
jp,pn
xor
mov
fiadds
add
cmp
shr
add
and
mov
mov
lea
jns
movsb
nop
xor
cmp
jns
add
jnp
cs
int3
jmp
mov
ja
sub
xchg
xchg
inc
sbb
clc
cwtl
or
cwtl
add
push
inc
push
and
xor
fiadds
sub
push
cmp
xor
stos
cmpb
mov
mov
jbe
sahf
inc
lods
or
add
xchg
int
jmp
adc
mov
fnsave
sub
mov
daa
mov
and
cwtl
sbb
pop
into
lret
test
inc
mov
mov
test
shll
jecxz
aad
out
or
push
jnp
arpl
sbb
in
ljmp
loope
pop
fwait
push
aad
mov
lods
lea
or
push
inc
call
dec
jne
rcrb
and
push
int
test
lods
or
xchg
mov
cmpsb
int3
repz
shl
ja
out
dec
je
xchg
in
or
scas
push
ficoms
xchg
xchg
imulb
cmp
xchg
mov
lds
jg
pop
notl
and
push
jae
xor
hlt
sbb
lods
pop
fucomi
lret
xor
dec
sub
testl
addb
push
je
add
and
lea
repz
xor
gs
or
push
ds
mov
sbb
pop
cmc
or
jg
mov
inc
mov
push
imulb
aas
out
xor
and
jns
fcom
stos
daa
negb
std
push
adc
jecxz
adc
or
fbld
mov
xchg
cs
mov
lret
mov
dec
jp
roll
movsb
daa
gs
and
mov
sbb
push
stos
adc
mov
dec
inc
pop
dec
pop
dec
cmpsb
push
fmull
mov
xor
sbb
fsub
es
xchg
adc
aad
call
jnp
fucom
adc
cmp
ret
add
subl
decl
fldcw
inc
fisttps
mov
jae
fs
push
lds
mov
pushf
test
add
icebp
bound
pop
sbb
sub
test
pop
mov
scas
dec
lret
rorl
loope
xchg
insl
jb
jno
cmp
aad
outsb
xor
mov
daa
into
adc
sbb
push
jl
fnstcw
sbb
mov
aam
aad
and
out
out
pop
aad
imul
popf
clc
call
jmp
ljmp
les
push
jle
scas
data16
idivb
test
cltd
mov
mov
lods
dec
or
jp
adc
jg
test
cli
xchg
fstl
sbb
push
loope
ds
outsl
lock
dec
jge
popf
lahf
in
dec
je
out
fiadds
std
add
xor
movsb
dec
dec
daa
mov
xchg
add
daa
push
movsb
sbb
fistpll
add
jp
add
sub
fsubs
add
inc
push
ss
mov
fsts
cwtl
jge
xorb
add
push
int3
inc
fiadds
mov
iret
adc
pop
loop
inc
push
jecxz
cltd
rcrb
cld
fbld
xor
sbb
dec
mov
jno
int3
or
sub
push
fs
inc
adc
sub
xor
cmp
sarl
sarb
sub
nop
mov
mov
jne
or
xor
mov
jne
cmp
aaa
insl
jmp
mov
mov
mov
cld
inc
xor
jns
xchg
cmc
cld
lods
mov
daa
and
mov
in
movsl
lods
imul
mov
xchg
xchg
movsb
stc
xchg
iret
jae
jge
inc
and
sbb
cmpl
jbe
jae
dec
sbb
xor
popf
add
push
mov
outsb
sbb
and
arpl
test
aas
adc
pop
add
mov
mov
in
movsb
loope
xchg
in
fisttps
jg
push
cli
test
mov
pop
push
pushl
loopne
sub
jo
mov
inc
push
pop
xchg
mov
mov
repnz
pop
out
mov
insl
fdivr
cmpsl
dec
xor
rcrb
frstor
xor
xlat
rcr
adc
or
scas
outsl
add
lret
push
mov
mov
push
pop
pop
mov
fildl
fcmovbe
leave
dec
int
test
jmp
call
cli
aad
adc
jl
into
repnz
dec
add
lahf
mov
pop
and
addl
add
push
inc
lret
cmpsl
int
xchg
jle
jb
bound
inc
xor
ds
stos
int
rorb
test
jmp
test
scas
repz
fldl
xchg
push
test
push
dec
out
mov
fwait
repz
sbb
cmp
shl
clc
in
mov
out
jle
ja
inc
xorb
test
jmp
cmpsb
rcrl
test
and
xor
in
loop
fimull
out
sub
inc
mov
stc
add
adc
gs
out
xor
mov
cmpsb
cmc
ret
or
sub
iret
xchg
cmp
push
in
les
test
out
xchg
push
adc
fnstsw
xchg
push
sbb
leave
dec
jne
push
or
cmp
and
xor
out
iret
mov
popf
fidivs
ret
push
adc
mov
cld
push
inc
out
adc
push
dec
shll
sbb
lcall
xor
jno
dec
push
lods
adc
ja
stos
outsb
insb
fstl
mov
mov
in
push
push
icebp
mov
pop
lahf
push
loopne
sahf
std
insb
lahf
enter
int
fdivp
pop
pop
mov
jecxz
fnstcw
xor
and
cmpsl
nop
aas
sbb
mov
fisubrs
ss
aas
lods
mov
inc
enter
mov
and
dec
aaa
bound
cmovo
icebp
or
pop
push
addl
and
mov
sti
mov
dec
and
mov
dec
cmp
test
test
hlt
xchg
je
mov
and
adc
xchg
cmpsl
add
jge
int
lock
mov
add
lock
les
xchg
push
mov
xchg
mov
ret
mov
fdivrs
jns
pop
sbb
cmp
testl
nop
orb
cwtl
rcll
fisttpl
dec
mov
push
cmpsb
jae
repnz
or
adc
mov
fstl
push
nop
push
adc
mov
imul
movsl
pop
ror
push
mov
mov
and
xchg
ret
add
cmpsl
lods
cltd
mov
in
mov
std
cmp
inc
ret
cld
std
stos
cmp
pushf
pop
sbb
or
dec
lds
movsl
out
pop
jl
fimull
and
mov
push
arpl
cwtl
xchg
cmp
ret
mov
mov
ret
cmpsl
mov
cmpsl
sbb
leave
lods
imul
push
daa
insb
xchg
push
mov
sbb
roll
cmp
push
sub
inc
aaa
fidivrs
adc
jne
jne
out
insl
fdivl
nop
insb
testl
pushf
sub
add
pop
out
and
or
pop
out
cmc
or
jns
pop
jl
add
sbb
mov
inc
wrmsr
xchg
add
and
fcmovu
repz
subb
loopne
addr16
stc
outsl
test
movsb
and
sub
das
or
pop
dec
add
pop
and
icebp
into
mov
loopne
xchg
dec
jg
lods
movsl
mov
cld
push
sub
or
cltd
in
sub
or
js
int3
dec
pop
shrl
lods
nop
jb
xchg
adc
jb
ret
xlat
int3
xor
ror
stc
inc
lcall
inc
xor
mov
gs
add
mov
je
jno
mov
int
or
into
dec
enter
sarb
mov
push
xorb
fwait
jae
add
ret
mov
sbbb
dec
jmp
mov
dec
outsb
movsl
adc
push
push
test
or
jbe
fstpl
andb
aas
pop
lods
xchg
pop
test
add
pop
mov
mov
fldcw
das
push
rcll
xchg
cs
sbb
rcll
pop
or
cmp
add
cmp
ret
cltd
iret
sbb
add
sub
mov
aas
inc
xchg
ss
ss
push
add
mov
mov
mov
and
pop
jns
into
ss
aad
mov
pop
jecxz
call
xchg
jb
rcrl
dec
gs
mov
xor
dec
and
clc
mov
jno
xor
add
jne
inc
add
fidivl
mov
inc
sti
movsb
pop
clc
xchg
jns
js
into
sbb
fistps
sbb
das
or
adc
sbb
xchg
popf
jge
push
lahf
or
jae
sbb
loopne
ror
sahf
out
movsl
dec
in
sti
movsb
mov
cmpsb
pusha
sub
jne
pop
sbb
lea
jns
jne
lods
xchg
xchg
jo
mov
mov
int3
out
jle
lods
adc
cmp
iret
add
dec
inc
xor
outsl
subb
xchg
enter
lods
popa
icebp
add
cmp
test
insb
loopne
xchg
popf
lods
mov
cmc
fwait
je
out
aad
fidivrs
orb
xor
loopne
mov
pop
scas
lods
lock
jno
scas
push
outsb
cvttps2pi
ja
dec
cmp
std
push
mov
mov
and
xchg
xor
jg
lods
xor
into
incb
lret
dec
pop
mulb
test
add
fcoms
scas
popa
sti
sarb
aaa
mov
bound
fidivs
adc
out
js
out
mov
aas
inc
sbb
call
loop
dec
repz
lahf
loope
stos
mov
sti
andl
aam
sub
push
popa
xchg
aas
or
cmp
cmpsb
and
and
das
and
xor
push
and
arpl
rcr
test
add
add
sahf
jg
push
push
jo
pop
mov
nop
mov
out
fstpt
or
adc
pop
loop
mov
test
orl
mov
test
nop
and
jp
adc
add
mov
out
shrb
and
fs
jl
mov
jmp
xor
xchg
int3
aam
fucomi
inc
cmp
adc
into
test
arpl
shll
jp
adc
xor
sub
lds
movsl
sub
notb
jg
pop
cltd
add
cs
sti
dec
pop
das
ljmp
add
inc
lock
dec
pushf
rolb
stos
movsb
and
call
xlat
jo
adc
mov
data16
jns
jle
adc
rcr
ljmp
dec
repz
mov
cmpl
pusha
xchg
das
out
mov
out
scas
lret
mov
enter
jge
arpl
xorl
gs
push
aas
xor
xchg
mov
jecxz
fs
inc
mov
repz
jmp
mov
aad
pop
gs
fsubrl
rolb
pushf
mov
insl
and
ficoml
xlat
cmp
fildl
gs
stos
mov
outsl
pop
xchg
loope
mov
add
cmp
cmpsb
jbe
and
adc
call
shlb
movsb
or
xor
cmpsl
push
int
iret
outsl
and
aas
xor
in
push
mov
push
test
rcl
push
jo
pop
stos
inc
int3
add
dec
int3
aaa
mov
sub
xchg
dec
outsl
les
ficoms
punpcklbw
pop
mov
int
enter
lcall
lcall
pop
push
cmpsb
lods
call
sbb
mov
sarl
pop
cmp
xor
cmc
test
shl
les
setp
xchg
dec
mov
mov
in
loopne
in
ret
xor
cli
cmp
push
mov
push
loopne
push
cmpsb
sub
frstor
dec
jno
sbb
addr16
in
lahf
aaa
jecxz
sub
adc
dec
xchg
inc
movb
ret
jae
jp
cmpsl
push
xor
add
xchg
cmp
jmp
jnp
jnp
imul
lahf
enter
add
or
dec
mov
mov
fsubrl
dec
scas
sbb
mov
adc
push
ret
sbb
jae
lret
push
push
pop
push
adc
mov
push
xor
xchg
cmp
and
outsl
add
mov
push
insl
add
and
daa
jecxz
pusha
enter
pop
imul
shlb
mov
push
sbb
aam
nop
mov
push
insl
dec
push
dec
inc
es
cmp
inc
and
fisubs
and
lods
lock
mov
mov
dec
dec
in
punpckhwd
nop
insb
ja
loop
or
stos
loop
pushf
and
mov
cmp
nop
dec
sub
mov
daa
adcl
outsb
fmul
clc
or
notl
xor
mov
movsl
jae
inc
xlat
divl
arpl
lods
jecxz
pop
rcrb
inc
push
addr16
lods
stc
push
fwait
jle
push
jnp
fdivl
loop
sbb
push
fcom
stos
adc
push
jle
cmp
jge
loopne
pushf
add
repnz
repnz
cmp
imull
data16
push
movsb
dec
xor
test
test
cmp
fwait
or
pop
in
xor
and
aam
stos
mov
fcomps
pop
mov
loop
idivb
addr16
mov
sbb
out
das
jne
cmp
xor
in
dec
repnz
outsl
or
shll
mov
clc
xchg
sub
lds
dec
loop
xlat
dec
or
mov
adc
gs
orb
mov
mov
imul
aaa
aas
cmp
lods
stos
add
push
jae
repnz
in
loopne
addr16
lea
negb
inc
mov
into
cmp
je
int
ja
inc
jecxz
inc
out
mov
jno
scas
mov
insb
xchg
lock
in
popa
fxch
sub
shll
test
mov
adc
dec
push
les
stc
sub
sub
test
loop
sub
scas
mov
jno
sub
shl
xor
mov
punpckhbw
pop
sbb
insb
pop
fidivrl
push
subb
jne
adc
jmp
rorl
addr16
enter
mov
mov
lcall
test
out
int
push
imul
sahf
int3
aas
cmp
and
xor
stos
jb
pop
stos
mov
inc
pushf
push
lea
or
push
loop
jp
xchg
mov
stos
cltd
stc
xchg
jmp
lret
imul
sbb
mov
mov
add
mov
loope
mov
je
mov
out
int
in
mov
jo
movsl
dec
iret
loope
cmp
jmp
lret
icebp
and
test
mov
rcll
ss
call
test
lahf
mov
shlb
xchg
dec
cmp
bound
leave
dec
sub
push
test
pop
arpl
adc
or
pop
fcmovnbe
inc
imul
and
hlt
push
bnd
ja
adc
add
dec
dec
sub
pusha
sti
xchg
adc
sub
inc
in
das
xchg
sbb
xchg
out
push
mov
dec
xchg
pop
cmp
fdivrs
sahf
jge
scas
aad
cltd
std
or
mov
push
pop
xor
lret
mov
negb
rcrb
mov
xor
mov
inc
ljmp
jno
sbb
push
mov
fwait
pop
mull
pop
sbb
xchg
scas
pop
pop
inc
repz
divb
les
add
mov
scas
sti
mov
jmp
addl
mov
inc
push
xchg
mov
andb
decl
dec
inc
fidivl
jg
inc
and
add
out
or
and
xlat
rcll
stos
cmp
dec
in
push
loopne
mov
sub
pop
cmpsl
add
imulb
decb
and
cli
lods
inc
xor
hlt
je
push
aam
movsl
pop
pop
sahf
dec
sbb
lcall
test
jg
push
inc
and
into
outsl
nop
mov
scas
sub
xlat
jne
lds
sahf
lret
lea
test
lea
pop
add
icebp
stos
push
mov
cmp
adc
test
popf
aas
pop
push
stos
cli
inc
jae
fwait
push
jge
sbb
or
pop
cmp
idivl
out
in
imul
sbb
xlat
pop
adc
data16
int3
insb
jae
push
xchg
mov
insl
sbb
xor
xor
pop
xchg
adc
lret
dec
fistl
mov
cmp
xchg
fwait
mov
cmp
addb
cmp
or
adc
andb
outsb
insb
jle
mov
or
sub
dec
add
xchg
push
rclb
arpl
cltd
loope
inc
mov
mov
lcall
mov
fadd
mov
loop
xchg
jns
xchg
test
sbb
mov
cmp
js
sbb
imul
pop
mov
or
std
cli
jnp,pt
dec
pop
imul
js
xchg
rolb
in
insb
jne
jge
pop
dec
es
shrb
ret
pop
adc
ret
mov
dec
aad
rolb
sub
add
in
fwait
adc
stc
cmpsl
and
add
std
add
mov
decb
in
mov
lcall
push
loop
arpl
push
push
ret
and
shlb
sbb
jns
out
and
jg
in
push
out
push
xchg
shlb
and
rorl
inc
nop
cmc
cltd
bound
in
mov
xor
pop
sti
lea
xor
xor
mov
mov
stc
jns
imul
xchg
push
mov
cmc
and
jge
xchg
push
in
adc
out
push
dec
popf
es
dec
mov
inc
pushf
mov
cmp
pop
jae
sub
mov
outsl
stos
addr16
mov
mov
xor
jb
add
push
cmp
mov
addr16
sarb
jne
cmpsb
movsl
ret
insl
insl
repz
add
insb
je
hlt
dec
inc
rclb
in
jb
mov
daa
pop
adc
nop
cwtl
mov
xchg
loopne
mov
inc
mov
gs
add
jg
cmp
push
lahf
add
pushf
cmc
rol
ficomps
xchg
pop
add
push
in
xrelease
cld
in
push
mov
sbb
sbb
ret
sbb
inc
out
jnp
mov
mov
ss
or
push
sbb
out
test
add
hlt
cmp
pusha
lcall
in
mov
fildl
lret
loopne
loope
clc
daa
push
into
xor
pop
or
test
icebp
jb
in
out
sti
subl
int3
mov
bsf
data16
push
dec
xlat
mov
aam
pop
cmp
or
xor
movsb
fdivl
push
hlt
daa
lret
cs
sarl
push
shl
xor
inc
aad
jmp
mov
jae
mov
jbe
jl
test
hlt
fdivs
ljmp
push
fmull
aam
iret
daa
push
popf
outsl
lods
fcomps
mov
adc
mov
mov
or
insb
loop
sahf
lea
ljmp
rcrl
sbb
xchg
sub
add
lods
insl
addb
pop
rclb
dec
lods
pop
push
add
adc
iret
sbb
xchg
jns
outsl
jnp
arpl
sub
mov
jns
xchg
mov
pop
xchg
je
addr16
cli
add
cmp
bound
dec
jne
repnz
mov
inc
into
sbb
jno
pop
clc
fimuls
pop
or
inc
jge
lahf
test
mov
and
fistl
jae
push
xor
xchg
mov
ds
xor
mov
push
cmp
outsl
xor
lods
sub
incb
add
push
adc
enter
ja
and
frstor
or
adc
loope
inc
call
sbb
out
out
out
out
nop
jo
shrb
cmp
ds
xchg
sahf
call
push
rorl
add
out
popf
cltd
mov
dec
sbbb
out
cltd
jle
xchg
out
incl
loope
mov
sahf
into
pop
test
push
hlt
adc
dec
hlt
xchg
iret
dec
mov
std
or
lea
adc
mov
xchg
pop
mov
add
jg
jb
aas
sbb
in
ss
mov
sti
daa
cmp
push
rorb
imul
pop
sbb
and
xchg
mov
mov
arpl
sub
pop
in
adc
push
push
sub
cmp
push
sub
insl
inc
lds
mov
clc
adc
sbb
dec
in
or
pop
sub
ds
dec
cmp
xchg
cltd
int
sub
rolb
divb
lcall
es
mov
push
lret
out
add
add
imul
push
test
sbb
lods
lods
xchg
mov
jmp
fildll
je
fcmove
push
dec
fcmovnb
and
adc
stos
push
cmc
or
sub
fists
enter
loope
testb
lcall
pop
pop
pop
scas
adc
push
jb
cmpsb
jg
push
jo
adc
mov
mov
clc
in
xor
push
lea
sbb
pop
dec
loope
pop
roll
or
js
xor
add
xchg
ss
dec
push
jge
mov
dec
rolb
popf
add
in
sahf
les
fs
ret
inc
mov
dec
inc
lret
in
fists
out
adc
test
aas
dec
bnd
stos
mov
fs
sub
push
sbb
femms
jp
in
jmp
pop
lock
xor
imul
pop
notl
jne
mov
mov
int
clc
daa
je
xor
roll
cmc
fcoms
jmp
mov
fst
cld
ljmp
xchg
nop
hlt
fwait
sarb
jns
mov
mov
or
sbb
iret
push
jnp
xor
mov
movsb
xor
pop
out
lret
outsl
fadd
push
clc
mulb
mov
xor
test
clc
rol
cmp
pushf
sub
sub
jne
xchg
mov
test
testl
test
fstp
pop
mov
adc
mov
mov
pop
push
push
in
push
shll
inc
pop
inc
sub
inc
aad
mov
repnz
js
mov
jle
xor
sbb
pop
test
and
dec
push
hlt
fwait
xchg
int3
cmpsl
push
xchg
das
add
xchg
xchg
add
in
or
cmpsl
std
dec
mov
inc
in
sti
popf
jecxz
jo
rcll
out
push
mov
rorl
inc
and
mov
rolb
pop
dec
add
aad
mov
sti
int
dec
ret
pop
ja
xchg
inc
lods
jns
imull
lea
hlt
shll
or
dec
lcall
sbb
stos
lret
jnp
lret
fidivl
and
mov
cmp
clc
popa
jnp
mov
clc
ja
jno
in
inc
and
test
sub
jno
cmp
dec
rorl
pop
jl
cmp
int3
jae
xlat
dec
cmp
mov
push
jb
ss
or
jne
insl
pop
orb
mov
pusha
jns
push
dec
std
mov
fisttps
push
scas
ss
aam
xor
dec
xchg
and
xor
inc
call
and
lcall
movsl
jmp
mov
mov
xchg
adc
or
divl
stos
push
outsb
pop
jg
daa
cmpsl
lds
dec
fsts
xor
in
icebp
addr16
cmp
sahf
negl
pop
xchg
cmp
xor
cmc
cltd
mov
stc
scas
xor
rorl
pushf
push
mov
jg
int
cmp
push
pushf
jne
jbe
sub
add
and
ljmp
xor
icebp
and
repnz
iret
lods
ss
mull
nop
sbb
cmp
mov
sub
inc
lret
cwtl
and
loop
xor
jb
cwtl
cld
lret
test
pusha
add
pop
jno
sub
adc
xor
in
loope
inc
test
int
push
push
ja
fwait
movsb
and
out
arpl
fneni(8087
aas
aaa
lea
insl
int3
fidivl
mov
repnz
sbb
sbb
jg
ja
imul
fs
dec
add
add
add
jb
mov
loopne
mov
test
arpl
add
daa
orb
pop
inc
pop
sub
sub
sub
gs
jo
xor
sub
mov
aaa
jg
jle
int3
int3
add
dec
ja
in
das
js
pop
loop
pop
icebp
jecxz
inc
inc
cmp
in
mov
push
mov
iret
push
cwtl
pop
inc
test
lcall
stc
inc
inc
jb
sbb
inc
push
in
xchg
xor
bound
into
pop
dec
fistl
dec
scas
xor
xchg
pop
mov
jmp
sbb
ds
in
xchg
outsl
aaa
and
and
js
jl,pt
rorl
ret
shr
jns
xchg
dec
mov
jmp
adc
lahf
int3
mov
insl
cli
xor
loop
pop
jne
lret
stos
daa
cld
out
mov
clc
test
mov
aad
dec
mov
mov
jg
insb
mov
mov
call
or
add
cwtl
mov
popa
mov
fwait
adc
clc
sbb
jmp
subl
test
xlat
repz
cmp
outsb
mov
adc
cmpsb
mov
xchg
sbb
std
mov
jle
xor
sbb
outsb
mov
push
inc
pop
jg
cmp
mov
adc
rorb
repz
pop
jnp
rcrl
pusha
xor
in
test
cmpsb
cmp
push
sarl
pop
aas
insl
outsl
push
xchg
sbb
or
pop
es
outsb
pushf
mov
in
jbe
stos
int3
jecxz
mov
icebp
add
mov
addb
cld
push
sbb
adc
push
pop
mov
sarl
sub
and
cld
repz
adc
outsl
jno
cmc
inc
cmp
mov
xor
fwait
xchg
mov
repz
enter
mov
add
sahf
jne
pop
adc
add
stos
push
fmull
nop
enter
fbstp
or
and
push
subb
jno
dec
lods
xchg
fists
mov
aad
add
adcl
aad
popa
mov
xchg
lods
je
sbb
leave
cs
ret
lret
movsb
jmp
inc
and
push
jne
mov
inc
lea
repnz
adc
repz
fldenv
xchg
mov
test
loopne
scas
sbb
ret
je
pop
mov
fstpl
pop
fucom
inc
pushf
sub
mov
fidivl
lret
aas
mov
add
stos
shll
mov
sbb
push
mov
inc
mov
dec
test
cwtl
mov
pop
sbb
pop
jo
mov
sbb
fs
xor
mov
loop
and
dec
outsl
mov
cld
stos
xchg
xchg
xchg
popf
jae
pop
pop
push
ret
scas
mov
std
mov
mov
lock
xchg
and
pop
mov
in
mov
jne
jmp
inc
fwait
jae
lret
cmp
pop
dec
cltd
xor
sbb
repz
orl
cmp
cli
push
cmp
roll
or
jo
out
cs
mov
in
loope
enter
pop
push
cmp
clc
push
jmp
faddl
data16
dec
or
in
jb
inc
cmpb
push
or
inc
xchg
mov
adc
in
xchg
cmp
aad
push
mov
mov
sub
mov
or
stc
scas
mov
sbb
ljmp
in
pushf
je
scas
xchg
inc
lcall
loope
jl
push
loop
sti
sahf
stc
shlb
ja
jle
fldl
sbb
mov
sbb
std
jg
sbbl
pop
int3
adc
dec
movsb
xlat
add
pop
add
negb
jmp
cli
insb
icebp
addr16
loopne
imul
mov
add
inc
out
call
pop
jle
subb
add
mov
pop
sbb
arpl
repnz
ljmp
das
mov
mov
in
push
lods
mov
mov
and
mov
inc
push
iret
lock
fwait
push
jbe
popa
lret
hlt
cmpsb
lds
xchg
shll
aam
je
sbb
jge
add
mov
jnp
mov
outsl
mov
sbb
daa
es
xchg
loopne
and
mov
leave
and
jg
test
push
xor
xor
imul
unpcklps
mov
fcomps
mov
adc
fsubrl
cltd
insl
push
mov
mov
subl
dec
dec
pop
popa
xor
pop
loop
fnsave
pop
add
sub
fbld
lea
cmpsb
fsts
jb
jbe
enter
push
cltd
and
insb
enter
cltd
add
pushf
sub
mov
mov
pop
sub
repz
push
and
out
cmc
mov
test
add
mov
inc
push
cmp
lea
or
jno
clc
or
in
xor
inc
or
sbb
jmp
lret
mov
pop
lods
out
adc
out
mov
fs
xchg
lret
or
sub
sub
mov
and
aad
ljmp
or
mov
sub
lcall
fistps
repz
cmp
in
mov
pop
jp
out
std
and
and
rclb
or
out
sbb
pop
jmp
mov
outsb
pop
scas
inc
push
xchg
push
daa
sub
jg
mov
add
lahf
mov
cmpl
lcall
pop
dec
mov
sbb
cmpsb
xchg
scas
rclb
add
clc
idivb
imul
outsb
push
repz
fnstcw
add
pop
push
mov
es
sbb
hlt
ret
cmp
mov
pop
dec
ljmp
out
out
mov
test
sub
cmp
cwtl
xchg
cmc
ds
push
out
fidivs
xchg
movlps
movl
jo
xor
scas
mov
jg
inc
call
inc
push
js
cltd
fildl
jle
imul
mov
mov
mov
mov
sti
push
push
lods
scas
in
mov
mov
stos
mov
leave
mov
sub
and
cmp
and
mov
orl
stos
pusha
js
mov
mov
and
std
jae
mov
in
lods
xor
hlt
sub
jle
pop
pop
add
pop
pop
cmp
sub
lret
or
cmpsl
enter
mov
das
push
loop
mov
lahf
mov
sbb
xchg
sbb
lret
adc
scas
test
cli
aas
mov
jb
clc
mov
mov
lahf
in
inc
pop
mov
jno
jge
insl
mov
dec
pop
icebp
jb
in
lret
bound
mov
rcrl
mov
add
popa
std
sub
pop
sub
clc
lods
adc
jmp
jne
push
mov
outsl
xor
loope
ja
push
and
loopne
sti
sarb
mov
fildll
sub
xchg
add
fnsave
addl
sti
addr16
shrb
cwtl
inc
insl
sbb
xor
or
mov
cmp
inc
and
or
fsub
in
sarl
cmp
mov
test
loopne
push
mov
or
lret
mov
insb
mov
or
clc
mov
mov
inc
push
in
insb
ret
push
lret
cltd
push
subb
jp
xchg
fs
jne
cmp
stc
pop
pushf
jo
inc
lret
sub
in
pop
jp
xorl
mov
push
std
mov
inc
in
jl
loope
cwtl
fdivrs
aaa
xchg
or
ss
xor
adc
add
inc
push
ds
mov
pop
pushf
test
cs
mov
repz
loopne
adc
scas
and
ljmp
arpl
arpl
cli
fcomp
jge
cs
popa
in
sarl
xchg
stos
pop
jmp
dec
dec
loope
shll
stc
xchg
pop
sbb
mov
mov
fildl
mov
loopne
add
xor
test
clc
loop
add
imull
retw
dec
je
je
dec
es
dec
adc
mov
mov
or
test
lahf
jl
ljmp
lock
cld
jbe
jmp
ljmp
mov
cmp
mov
je
jle
addr16
ret
je
out
clc
jbe
inc
in
jge
mov
in
add
pop
sbbl
mov
incl
or
push
loopne
pause
test
fbstp
ret
or
mov
repz
adc
pop
mov
aad
or
inc
xchg
jle
xorl
mov
pop
pushf
int3
pop
xlat
or
cmp
or
decl
mov
xor
add
push
adc
mov
xor
sbb
test
scas
iret
loope
leave
add
fadd
pop
mov
das
inc
daa
mov
xlat
jmp
cmp
test
test
mov
sbb
lock
int3
inc
aaa
cmp
or
push
shl
cwtl
insl
dec
dec
or
push
jl
pop
mov
or
fsub
jae
jae
add
icebp
imul
outsl
or
xchg
ds
cltd
call
jge
cmp
mov
fcompl
dec
lea
lods
test
sbb
ficomps
adc
sub
pop
enter
xchg
inc
mov
jnp
icebp
sbb
fsubrs
aad
jmp
xor
mov
aam
insl
adc
mov
or
mov
roll
xchg
in
xor
dec
rolb
sub
lahf
push
xchg
scas
sub
ficoms
lea
and
mov
push
push
add
mov
jne
cld
mov
idivl
jne
inc
cmpsb
inc
sbb
add
xchg
lds
push
mov
mov
cmp
je
xor
mov
or
push
adc
pop
fimuls
arpl
mov
and
cmc
nop
push
and
mov
out
sub
mov
shr
repz
sbb
test
test
mov
jecxz
test
das
xor
xchg
sbb
or
pop
sub
sahf
fsubs
adc
rcll
movl
cmp
add
scas
push
sahf
push
push
jo
jno
sub
cmp
mov
and
and
push
pop
xorl
ljmp
mov
mov
sahf
mov
sbb
mov
in
and
pop
jbe
jle
push
and
cmpsb
test
lret
mov
iret
mov
ja
xor
push
xor
dec
fistpll
jge
stos
adc
pusha
fnsave
and
ss
into
mov
xchg
pop
lods
mov
addr16
push
std
sub
xor
fisubs
sahf
mov
xor
cli
adc
ret
dec
cmc
mov
stos
dec
js
movsl
sub
iret
or
xchg
test
fidivl
sbb
xchg
adc
sub
jle
in
sbb
xchg
movsl
adc
xchg
movsl
ljmp
cs
xor
lret
ja
inc
fistpl
outsb
pop
loop
lahf
rcrb
in
mov
jmp
xor
jnp
insw
popf
frstor
pop
mov
hlt
enter
dec
aad
jbe
rcr
push
fsubrl
aaa
not
adc
sub
pop
mov
je
push
mov
out
xchg
ror
imul
cmp
enter
fdivl
jbe
xchg
dec
loope
iret
loope
push
ret
or
mov
fidivs
js
rcll
clc
mov
popa
aad
mov
aas
ds
enter
into
sbb
rdtsc
imul
pushf
or
jmp
filds
aaa
popa
pushf
loop
ds
movsl
rolb
sti
add
fdivl
fstpl
cmp
aad
adc
and
pop
or
stc
stos
call
scas
pop
aaa
mov
lahf
xor
ds
enter
cltd
mov
pop
jmp
daa
jo
out
mov
shl
pop
or
sbb
dec
inc
and
pusha
hlt
ror
sbb
popa
or
push
push
adc
pop
rorb
pop
cmp
mov
scas
fidivl
ds
and
cmpsb
pusha
push
imul
pop
sarl
leave
or
jns
pop
or
fisttps
push
add
lret
xchg
test
jae
push
push
inc
ret
push
movsb
inc
xchg
arpl
jge
mov
movsb
into
jl
xchg
cmpsb
scas
cmp
inc
sbb
or
lods
mov
sbb
add
sbb
jns
mov
icebp
inc
das
into
les
shll
lods
pop
outsb
into
inc
push
imulb
mov
add
in
pop
aas
test
inc
xchg
cmc
xchg
fildll
sar
in
ret
lea
clc
lods
xchg
in
int3
sbb
cwtl
lds
push
rorb
push
cmp
jg
mov
add
outsl
pop
inc
push
out
add
les
xchg
xchg
xchg
int
stos
mov
subb
sub
jbe
add
sub
and
cwtl
loopne
bound
or
mov
rcll
and
lahf
sbb
sub
into
add
mov
sbb
pop
fisttps
imul
test
adc
cmpsl
jmp
mov
daa
rorb
stc
cmp
push
mov
repz
ror
xchg
out
cmp
pop
mov
dec
pop
pushf
call
rolb
cmp
andl
xchg
int3
sub
pop
fdivr
pop
add
pop
rcr
jbe
mov
jo
fistl
cmpsl
fstpt
mov
or
into
jns
outsb
mov
iret
scas
adc
fnstenv
bound
test
insb
jp
jle
mov
rorb
mov
vmptrld
and
xor
aam
pop
adc
aaa
mov
sub
sti
adc
mov
movsl
mov
pusha
ret
cmp
xchg
jge
lahf
mov
jne
add
fimull
cmpsb
or
pop
pop
push
mov
cmp
subb
cmp
jmp
cmp
mov
idiv
inc
or
push
adc
mov
lcall
loopne
and
cmc
mov
cmp
cmpsl
dec
pminub
adc
out
or
mov
das
push
aas
mov
ja
cld
je
mov
xchg
mov
hlt
lds
pusha
insl
cmp
sub
in
push
mov
push
ljmp
ficoml
cld
mov
ficomps
inc
adc
push
mov
inc
es
orb
inc
push
jp
fstps
out
jae
mov
addr16
scas
sahf
in
neg
cmp
cli
push
xchg
dec
xchg
pop
xchg
enter
dec
mov
repnz
int
or
and
sbb
xlat
inc
mov
cmp
sbb
xlat
loop
jo
call
pop
out
arpl
stos
mov
loope
inc
push
inc
xchg
lcall
sub
jbe
add
cld
xlat
xlat
out
xlat
jg
loopne
pop
repz
or
mov
xlat
cmpsl
or
stos
mov
mov
stos
aaa
sub
push
pop
jno
xor
xlat
subb
xchg
mov
test
cmp
fstpl
loope
movsb
jb
jbe
ret
inc
sahf
outsl
imul
js
dec
repnz
in
adc
in
xchg
adc
gs
mov
fldcw
inc
mov
mov
rclb
pop
xchg
dec
or
lods
insb
test
aam
repnz
dec
and
and
jbe
sbb
js
loopne
in
daa
pop
jns
into
dec
inc
inc
mov
rorl
jge
mov
scas
mov
inc
jo
dec
sbb
lods
sbb
bound
sbb
mov
stos
inc
push
mov
lret
fildll
pop
and
dec
or
mov
add
repnz
jae
push
sti
dec
ret
std
popf
inc
fmulp
jp
mov
pop
aam
addr16
jg
mov
ja
lods
sbb
jnp
and
sbb
adc
mov
sub
faddl
sub
fpatan
add
add
aaa
push
fistps
and
fwait
lret
sbb
enter
jle
dec
xchg
mov
es
addb
mov
and
aad
sar
das
test
cmp
lds
mov
xchg
dec
repz
inc
aaa
sbb
gs
mov
rcll
dec
add
and
add
shlb
jbe
call
cmp
je
xchg
adc
sarl
fstl
sbb
enter
popa
xchg
lahf
ljmp
cmp
cmp
and
rcrl
lcall
or
xchg
or
test
sbb
sub
xor
add
xchg
movsb
lods
inc
stos
test
nop
mov
mov
addr16
xchg
dec
lahf
mov
cltd
pop
adc
int
jnp
flds
stc
mov
cmc
lret
das
mov
mov
lods
or
adc
adc
push
dec
out
mov
pusha
mov
popf
xor
fdivrs
dec
or
adc
imul
cmp
inc
add
cltd
dec
xchg
bound
add
mov
sbb
push
sahf
mov
shl
pop
cmp
test
jge
sbb
pop
jecxz
sbb
adc
hlt
sub
sub
sub
repnz
stc
push
mov
xlat
ret
movsb
ss
ret
nop
pop
outsb
sbb
mov
jge,pn
mov
idiv
add
int3
fcomi
fimull
hlt
ljmp
scas
push
pop
fadd
or
stos
loopne
fsubl
xchg
out
xor
push
loop
ds
mov
jnp
cmp
push
or
dec
jne
mov
push
jae
sub
fstl
outsl
lahf
ss
rcr
adcb
sub
push
testw
out
sub
fcmove
dec
xchg
imull
inc
leave
shlb
loopne
adc
movsb
jmp
aas
loop
mov
dec
mov
xchg
repz
cmc
jne
xchg
inc
repz
mov
es
cs
stos
outsb
dec
lods
dec
mov
in
sub
pop
inc
mov
js
scas
das
sub
fadds
dec
mov
rorb
cwtl
adc
popf
cmp
fidivrs
scas
sub
in
push
jge
or
ret
sahf
lods
arpl
sbb
mov
xchg
mov
mov
add
repnz
inc
pop
scas
jbe
adc
cmp
mov
sub
xor
or
cmp
add
es
lea
fldl
and
fisubrs
and
out
jg
push
dec
ss
imul
dec
out
fisubl
xor
pop
mov
lds
jl
sub
or
orl
popa
pop
xor
jle
xchg
mov
mov
inc
pop
mov
pop
xchg
mov
les
pop
sub
test
push
ja
fidivrl
push
arpl
inc
enter
loope
mov
inc
notl
pop
mul
mov
jb
jg
xchg
jle
es
mov
int
out
iret
outsb
jg
inc
in
and
xor
lret
call
xchg
rclb
popa
cld
dec
xchg
cli
dec
stos
mov
or
int
add
stos
mov
lret
or
jge
and
push
scas
inc
xchg
cwtl
cmp
scas
xchg
adc
dec
sbb
ljmp
mov
xchg
jo
adc
or
mov
xchg
or
xchg
sub
dec
fsubr
inc
sarb
pop
inc
rep
icebp
sbb
mov
in
mov
or
bound
lock
mov
lds
iret
push
push
dec
loopne
aaa
stc
shll
inc
lods
inc
mov
pop
sub
cmp
inc
xchg
outsb
fcoms
cwtl
jns
and
mov
pop
pop
push
inc
push
mov
xlat
or
pop
punpcklwd
dec
cmpsb
ret
popf
adc
mov
fprem1
jecxz
leave
stos
cmpsb
subl
movsl
fcomi
fisubl
aam
or
sub
lahf
dec
aas
addr16
mov
mov
dec
pushf
dec
sbb
jl
sahf
outsb
push
jp
popa
pop
or
mov
movsb
nop
movsb
dec
add
or
mov
xor
popf
ret
nop
add
adc
sub
jns
ds
adc
lods
imul
jg
xchg
outsl
jae
add
jecxz
mov
push
movsl
push
stos
add
movsl
into
mov
xchg
fdivrs
stos
pop
into
stc
mov
insl
rcrb
icebp
movsl
xor
pop
mov
rorb
adc
xchg
scas
jbe
cmp
cmp
aas
and
jl
cld
mov
cmp
and
push
in
scas
sbb
push
sbb
bound
stos
adc
aad
popl
mov
sbb
add
fiaddl
or
mov
mov
repz
inc
movsb
ficoml
std
sub
ds
push
mov
or
xor
mov
jle
pop
adc
push
cltd
sti
mov
pop
jno
iret
gs
jb
out
mul
sar
ljmp
and
lea
pop
mov
imul
xchg
xor
or
fs
mov
into
cmp
in
ds
mov
lods
push
aas
rorb
clc
xlat
cmp
mov
sbb
loop
dec
cltd
lret
push
sarb
je
mov
pop
sarl
lock
fs
xchg
add
xor
out
push
inc
cmp
sti
and
sbb
out
xor
in
lock
js
addr16
mov
mov
sub
loope
addl
bound
les
sbb
mov
movhlps
fdivrs
call
stos
mov
jmp
push
and
push
in
xchg
sub
pop
aas
int3
pop
push
or
mov
adc
cmpsl
xchg
hlt
pop
dec
sub
pop
mov
sbb
das
lock
jb
in
or
stos
ret
shlb
dec
mov
xor
addr16
test
mov
push
push
cli
movl
leave
lcall
bound
in
lods
pop
cmp
loope
call
adc
rorl
daa
pop
mov
sarl
push
imul
aam
cmpsl
jle
mov
aad
nop
cmp
or
imul
jns
mov
lcall
aam
xor
adc
mov
addb
scas
rolb
test
adc
enter
xlat
adc
mov
jno
mov
aad
pushf
mov
sub
and
bound
add
lock
jne
stos
jle
clc
sbb
cmp
scas
and
or
in
test
jge
adc
xor
jecxz
mov
stos
inc
mov
push
cltd
in
inc
push
pop
xor
mov
or
scas
aas
lahf
xchg
out
mov
fcompl
ret
sbb
sbb
lret
sbb
inc
adc
push
jle
sub
cmp
push
aas
push
jge
sahf
xchg
adc
pushl
lea
push
ds
test
mov
in
stc
push
mov
adc
xchg
test
icebp
xchg
dec
fimuls
inc
push
push
push
hlt
jns
xchg
mov
dec
mov
stc
stos
leave
sub
fmuls
aam
xor
int3
fildl
int3
jo
data16
mov
or
cmpsb
jbe
insb
xchg
cmp
gs
jmp
pusha
adcb
lret
sbb
cmc
cmpps
in
mov
shr
popf
inc
inc
test
adc
push
aad
pop
cmpsb
movsl
or
push
jge
mov
pop
push
mov
and
adc
in
mov
xchg
mov
cs
dec
or
idivl
push
jae
push
je
sbb
or
mov
jae
push
add
cmp
pop
mov
clc
mov
mov
add
jns
mov
mov
pop
and
dec
je
outsb
inc
insb
ljmp
pop
cwtl
push
popf
xor
fstpl
pop
lahf
sub
dec
aaa
cld
adc
xor
stos
lods
add
push
cmp
rclb
idivl
lcall
mov
fistpll
cli
and
jl
xorb
sar
lods
sti
roll
or
out
imul
cmp
mov
jge,pn
pusha
jecxz
mov
xor
jae
std
sbb
arpl
jae
pop
xor
sub
inc
cld
sub
xchg
loope
arpl
addr16
imul
cmpsl
cmp
test
pop
push
cmpsb
cmp
sbb
rorb
outsl
jne
dec
call
jg
fistpll
push
dec
repnz
sbb
and
mov
arpl
adc
roll
fbld
cli
xchg
fildll
mov
add
in
mov
push
fxch
adc
xchg
pop
ret
mov
pop
lret
imul
xchg
xor
cld
int
fldt
testb
cmp
dec
addb
enter
fnstenv
repnz
lods
and
ds
shll
pop
cmpsl
dec
or
dec
jl
pop
ljmp
in
xor
jmp
push
mov
fnstsw
push
in
mov
loope
jns
push
sbb
jmp
push
add
add
add
and
nop
ja
jo
push
inc
ret
fnsave
jbe
mov
push
or
sbb
or
push
or
jmp
data16
mov
test
mov
mov
sub
cmc
sahf
loopne
xchg
clc
ret
add
or
cmp
js
sahf
jne
cmpsb
pusha
cmp
inc
pop
cmp
out
mov
in
movsb
inc
test
cli
mov
dec
adc
mov
or
leave
in
in
mov
aas
xchg
fldenv
push
cmc
xchg
data16
lock
jge
nop
aaa
mov
mov
scas
loope
popa
lea
mov
shl
add
pop
jmp
fisttpll
out
mov
push
mov
testb
push
mov
in
pop
inc
cld
shlb
ficompl
iret
dec
fsubrl
push
mov
lods
gs
mov
xor
sub
sbbb
sbb
pop
sbb
mov
mov
in
cwtl
lods
shrl
jecxz
popa
call
bound
lds
and
scas
dec
inc
jae
scas
leave
out
mov
cmpsb
cmpsb
mov
mov
stos
aas
inc
cmpl
add
pop
das
nop
sbb
xchg
outsl
mov
xor
xor
roll
and
cmp
dec
push
pop
pop
push
pop
clc
scas
jnp
jmp
jle
push
scas
subl
hlt
sbb
lods
loopne
les
mov
sbb
adc
iret
mov
mov
xor
mov
ds
mov
xorb
arpl
push
cmp
movsb
fiaddl
pop
inc
into
mov
mov
mov
dec
stc
xor
fdivrl
inc
mov
lret
jecxz
sahf
fnstcw
xchg
push
movsb
fadds
lahf
add
stos
fbstp
test
popa
cmp
pop
nop
sbb
jmp
fwait
in
inc
push
data16
icebp
loopne
xchg
int3
jo
inc
lret
repnz
push
xchg
stos
inc
sub
and
out
ljmp
ds
cmpsl
xchg
in
ret
rorl
mov
and
add
decl
bound
mov
stos
jge
push
cmpb
xor
or
jo
sbb
xor
cmp
sub
mull
aam
push
mov
shlb
xor
lods
inc
fsubs
xchg
mov
mov
xor
add
jns
mov
mov
movl
sti
inc
out
int3
xchg
jg
shr
push
cmc
mov
jge
xchg
test
aas
iret
adcb
jno
in
cwtl
cmp
adc
inc
shll
xchg
aas
mov
in
jbe
dec
add
lcall
rolb
sub
sub
aas
cmp
inc
ret
jo
in
jo
fstps
xchg
or
faddl
mov
lods
std
neg
clc
jle
add
and
pop
xchg
push
out
xor
xor
jns
mov
in
push
or
or
xchg
loop
sbb
popf
pop
mov
int3
call
andl
add
shrl
add
cmp
sub
sub
adc
rorb
outsb
jl
imul
inc
int3
and
cmp
push
or
ret
mov
aad
mov
push
push
out
jmp
cld
fsubl
mov
jnp
orb
or
gs
sub
loope
nop
test
jmp
outsl
call
in
pop
xlat
iret
mov
adc
or
and
pop
mov
ja
mov
mov
lea
std
or
jbe
icebp
and
inc
pop
loop
fldt
mov
mov
sub
push
add
and
shll
dec
daa
adc
mov
clc
sbb
jbe
loopne
push
jns
mov
cli
sub
or
and
xchg
dec
lcall
inc
dec
incl
adc
insl
dec
lods
cmp
inc
cld
push
add
cmp
xlat
mov
add
mov
cmpsb
sub
and
xor
sbb
imul
out
cmp
loopne
push
in
movsl
jge
out
mov
sbb
xor
dec
repnz
lods
cmp
cmp
xchg
dec
push
cwtl
or
adc
movsb
add
inc
movsl
inc
sbb
gs
rcl
adc
push
int3
sub
dec
outsl
sub
mov
and
jnp
enter
and
xor
call
stos
mov
ret
add
rcll
in
push
iret
lock
mov
push
mov
jo
lods
sub
inc
dec
mov
lock
adc
pop
cmpsl
imul
adc
fildl
int3
stos
mov
mov
in
cmp
daa
dec
cmpsl
xor
mov
cld
jmp
pop
mov
js
iret
xchg
add
mov
cmc
ja
cmp
mov
jne
jnp
jl
sti
sbbb
roll
mov
pushf
int3
dec
dec
mov
aas
mov
push
pop
mov
adc
lret
rorb
push
mov
xor
jne
pop
jne
and
pop
pop
mov
leave
jne
pop
test
push
pop
mov
cld
out
or
subb
dec
clc
inc
xchg
fsubrs
pop
insb
pushf
addr16
aas
push
inc
xchg
lret
jmp
outsb
sub
sub
or
cltd
add
push
add
xchg
cld
mov
xchg
xchg
es
dec
test
jnp
and
je
cld
xchg
mov
xor
lcall
or
fs
sbb
lret
jo
stos
xor
push
adc
jb
ja
cmp
lret
das
add
xor
or
mov
cmp
xor
out
sub
add
or
xor
scas
xlat
cwtl
jg
dec
hlt
mov
jp
hlt
cmpsl
test
jne
ja
pop
orb
cmp
mov
arpl
xor
rorb
cs
xor
hlt
xor
clc
push
fldenv
hlt
push
ss
or
cmp
int3
repz
push
or
mov
das
mov
lret
xor
sub
xchg
out
adc
adc
lret
ret
in
enter
xchg
adc
push
es
jne
mov
andl
outsl
mov
iret
cmp
adcb
cmp
sub
mov
adc
arpl
mov
and
jge
arpl
mov
mov
push
addr16
stos
cmpsl
orl
rcl
mov
notb
addr16
enter
pop
gs
hlt
or
into
ljmp
out
cltd
loope
sarb
psubq
or
leave
and
cs
xchg
outsb
lock
insl
jo
idivl
into
xchg
outsl
cwtl
xchg
lds
pushf
dec
add
jl
push
ja
jo
push
subb
sbb
push
inc
sub
hlt
add
imul
loop
cmpsl
lahf
cmp
nop
push
daa
inc
sarb
in
cmpsb
mov
in
xchg
in
adc
xchg
daa
dec
or
xchg
mov
jg
loope
dec
inc
addb
mov
xchg
mov
jmp
or
repnz
ret
repz
push
pop
call
push
stc
ret
mov
popa
pop
xchg
int
in
sub
mov
sub
loop
out
movsb
add
jb
test
data16
jns,pn
push
shrb
sub
mov
in
mov
sahf
push
xlat
jnp
or
inc
flds
add
mov
imul
popa
pop
xchg
xchg
pusha
xor
or
out
ja
pusha
aam
test
jae
mov
pusha
mov
mov
loopne
cwtl
arpl
mov
dec
imul
pop
es
jle
adc
cltd
jns
pusha
dec
pop
jmp
push
adc
push
mov
popfw
sbb
mov
lea
insl
pop
imul
pop
sbb
push
xchg
pop
pop
addr16
xchg
adc
xchg
pop
or
or
cmpsl
pop
sbb
scas
iret
jmp
addr16
mov
push
lods
repnz
mov
sarl
out
scas
mov
insb
mov
std
inc
cli
fsts
mov
xchg
adc
in
idiv
in
mov
ss
push
jb
mov
lcall
test
pop
mov
lea
mov
mov
mov
adc
jae
pop
inc
xchg
cwtl
push
ret
sarl
jno
out
out
int3
cs
inc
adc
mov
cvttps2pi
and
aam
xorl
jecxz
mov
lcall
arpl
rclb
out
or
push
das
jo
and
daa
shr
mov
jl
cmp
or
jb
mulb
jle
shlb
fprem1
inc
jge
repnz
sti
add
cmpsb
insl
xlat
int3
into
repz
movsl
and
lret
inc
iret
cmp
mov
cs
pusha
test
popf
sbb
jge
loope
xchg
mov
hlt
jb
push
fidivrs
cmp
mov
pop
aas
add
jle
push
adc
fdivs
jae
dec
popa
scas
jg
aaa
ret
leave
push
fldl
dec
dec
jge
in
iret
and
pop
notl
test
test
aad
cmpsb
pop
sub
out
or
or
ret
hlt
push
repz
out
and
jmp
inc
inc
jo
out
icebp
xlat
and
sub
jmp
sub
inc
xchg
jae
add
push
xchg
pop
mov
pop
jae
adc
movsl
jae
stos
sbb
jae
sti
cwtl
out
pop
push
and
and
cwtl
pushf
scas
je
ret
sbb
outsl
mov
std
jle
clc
addl
xchg
and
xlat
cmp
cmp
mov
inc
inc
jmp
movsb
jl
push
push
dec
das
fmul
imul
lea
aaa
lea
add
pushf
lock
outsl
mov
test
jmp
inc
lret
loop
xchg
cmpb
jge
cmp
jbe
fisubl
mov
push
xchg
clc
push
mov
outsb
pop
pop
lods
pop
jp
pusha
fnstsw
jmp
sub
mov
pusha
clc
lahf
push
mov
sub
inc
stos
es
mov
daa
out
cwtl
jo
cmp
aad
mov
mov
test
sub
cmp
std
std
shlb
ljmp
cs
dec
ret
inc
ss
jle
out
xchg
enter
mov
jmp
mov
adc
pop
jp
add
jae
fucompp
sub
mov
orl
out
push
jecxz
jae
adc
stc
inc
stos
mov
jno
lret
inc
or
push
sahf
iret
adc
sbb
fidivrs
jle
insb
mov
test
sub
lahf
fdivl
adc
mov
jecxz
jp
cmp
imul
xchg
fdivrp
arpl
loop
add
inc
ljmp
jnp
cs
iret
stos
iret
adcb
add
lss
stc
cmpb
cmp
cmp
sbb
ds
xchg
loope
sarb
cmp
popa
aaa
sbb
fs
imul
movsl
sbb
mov
sub
mov
fsubrs
mov
sbb
adc
pop
fisttps
cwtl
in
aam
movsb
cmp
int
mov
jle
mov
rorb
sub
icebp
in
fidivrs
fisubrs
cwtl
push
and
mov
rclb
daa
repz
jmp
pushf
cmp
jmp
push
test
in
mov
mov
and
mov
scas
mov
push
mov
xor
xor
push
in
lds
jne
fdivp
or
aaa
or
push
lahf
nop
sbb
out
cmpsl
sub
call
jmp
pusha
fsubrp
lods
daa
movsb
pusha
xor
shr
orl
mov
cs
rorb
ljmp
xor
ljmp
cmp
add
mov
push
fmuls
fadds
outsb
xchg
outsb
push
sbb
outsl
jl
xchg
in
fidivrs
or
push
rol
xchg
in
push
shrb
jbe
cltd
adc
add
pop
sub
inc
mov
sub
pop
cmp
out
mov
jae
or
leave
lret
dec
stc
lea
push
mov
out
lds
push
clc
jnp
fsubs
jae
popa
int3
xchg
xchg
in
mov
repnz
mov
insb
mov
xchg
leave
fs
mov
mov
xchg
sbb
ffree
pop
push
xchg
mov
lret
inc
insb
add
outsl
loope
aad
push
ret
into
sub
push
cmc
ljmp
sbb
js
adc
cltd
loop
mov
outsl
fbstp
in
sbb
sub
mov
out
adcb
repz
jg
cmp
lret
and
cmp
mov
add
idivl
sbb
and
push
je
lock
add
lock
jnp
jnp
jae
jmp
inc
sbb
cmp
or
fdivl
jns
clc
jbe
push
popf
aad
cmp
js
or
lcall
sbb
mov
divb
repz
mov
mov
mov
cmp
decl
outsl
decl
inc
repz
jle
xor
lret
std
fmull
aas
repz
mov
ret
rcl
mov
mov
sbb
rcr
mov
mov
push
stos
dec
pop
mov
loop
xchg
test
xchg
insb
sbb
add
lret
adc
shl
or
mov
or
outsl
ja
and
insl
jmp
and
pusha
mov
aam
mov
ljmp
sub
xchg
subl
fwait
clc
cmp
mov
stos
sub
push
lock
cmpsl
out
rorb
fcmovnu
xor
cmpsl
cmp
mov
push
dec
xchg
cli
cmp
pop
mov
xchg
xchg
mov
add
out
push
scas
enter
jnp
leave
pop
jb
mov
sbb
pop
stos
pop
xchg
int
shrb
int
test
mov
dec
mov
lret
xchg
idivl
rorl
lock
loopne
lahf
inc
inc
mov
es
inc
add
pushf
ficoml
add
cmpsb
sti
pusha
cmp
pop
adc
push
or
add
bound
imul
in
stos
iret
std
bound
pushf
add
lcall
loopne
mov
andb
xlat
push
or
pusha
mov
mov
and
daa
shrb
roll
push
mov
mov
mov
out
bnd
mov
sahf
hlt
xor
outsl
jne
lods
shl
lods
incl
cmp
imul
into
lret
adc
xchg
addl
sbb
frstor
cmc
icebp
ds
mov
mov
cmpsl
in
pusha
rorb
add
mov
mov
aad
xchg
cmp
sub
sub
repz
push
add
testl
jb
xchg
sahf
sub
ds
jge
push
pop
pop
xor
stos
or
push
or
call
adc
ffreep
cwtl
popf
lods
aad
fdivr
dec
fstps
jno
mov
pop
adc
ficompl
sbb
jne
repnz
cld
push
xlat
xchg
icebp
push
jo
std
adc
inc
dec
push
nop
mov
sub
mov
sbb
incl
cld
insb
mov
pop
or
sub
sub
push
xchg
pop
fisttpl
push
mov
mov
adc
sbb
pusha
mov
sub
je
sub
xor
enter
pop
jecxz
cwtl
dec
dec
add
sub
mov
es
stos
mov
pop
pop
adc
ret
jo
sbb
dec
shll
shrl
xor
dec
hlt
jge
mov
adc
movzwl
xchg
jl
mov
test
cmp
push
rcr
dec
mov
push
mov
ficomps
jno
lods
dec
das
or
shlb
sbb
push
into
push
sbb
mov
push
rorb
cld
testb
lock
xchg
sbb
adc
clc
jecxz
mov
push
aam
outsl
sub
push
inc
fists
cwtl
aad
je
aaa
loopne
lea
out
xchg
fmul
negl
xor
mov
push
roll
fwait
fwait
push
pop
enter
mov
fnstcw
insl
pop
aaa
jmp
pop
les
sbb
loop
and
inc
jmp
xchg
mov
jb
xorl
push
insl
inc
mov
xor
daa
cmp
mov
cld
into
hlt
adc
rcrl
xor
js
sbb
ret
mov
adc
cld
xor
xor
out
xchg
scas
adc
stos
insl
ficompl
cmp
add
pushl
jne
inc
sub
outsb
xchg
popa
out
lea
xchg
or
ljmp
lock
sarb
sub
dec
nop
xchg
ret
testl
inc
in
pop
in
mov
idivb
jecxz
push
xchg
xor
std
mov
cli
lret
pop
leave
stc
cwtl
out
test
or
bound
bnd
aad
jge
push
adc
inc
push
mov
jp
test
push
cmpsb
dec
inc
idivl
inc
mov
adc
out
movsb
adc
jecxz
mov
mov
sahf
and
sub
mov
lea
xor
subb
xchg
mov
inc
xchg
fsubrl
inc
call
or
mov
mov
jmp
stos
inc
adc
xor
rol
cmpsl
testl
push
outsl
add
xchg
cmp
aaa
insl
jle
mov
cmpsl
cmpsb
aad
sti
add
cmpsl
xor
movsl
lods
loopne,pt
orl
stc
jnp
adc
sub
mov
pop
test
sub
enter
lds
sbb
faddl
adc
jge
int3
scas
mov
xor
call
add
cmp
sbb
xchg
push
mov
push
xchg
jb
stc
cli
and
add
inc
push
sub
add
or
aad
sahf
push
pop
pop
xor
adc
mov
jmp
out
mov
jp
xchg
imul
jne
lods
mov
decl
add
and
hlt
cmp
arpl
jecxz
shl
sahf
iret
push
test
int3
movzwl
jno
loop
inc
xchg
jg
add
pushl
into
mov
inc
pop
sbb
mov
cmovo
movsl
aad
ret
push
cmpsl
jmp
xor
push
jmp
pop
or
cmp
ds
addb
dec
push
out
cmpsb
incl
and
fs
repnz
fidivrs
sub
add
sar
jge
adc
xor
xchg
adc
xlat
dec
dec
je
daa
mov
clc
mov
sub
nop
flds
jmp
fdivl
push
je
sub
xor
loop
fnsave
test
mov
loopne
xchg
mov
sub
dec
andl
pop
adc
fisttps
bnd
mov
ss
sub
cmpsb
push
sub
stc
mov
adcb
dec
pop
clc
lahf
mov
cwtl
rclb
pop
xchg
mov
test
mov
pop
lret
lods
push
insl
pop
outsl
insl
push
mov
std
int
jmp
movsl
cmpsb
add
jle
std
sub
fildll
mov
out
or
out
mov
cli
nop
jecxz
sbb
cmpsb
pop
xchg
mov
inc
pop
add
sbbl
mov
mov
mov
xchg
test
dec
call
imul
ljmp
loop
mov
daa
fst
mov
ss
push
aam
sub
push
je
pusha
out
je
jne
jp
xchg
xchg
imul
adc
lcall
adc
shr
idivb
xor
je
popf
jmp
and
mov
sbb
dec
jecxz
dec
shl
dec
cltd
jle
fisubrs
addr16
add
scas
push
cld
js
arpl
cmp
adc
lahf
cmp
pop
or
push
enter
add
enter
daa
mov
in
aaa
iret
jle
pop
or
subl
sbb
xchg
fwait
add
add
test
inc
fwait
out
mov
xor
or
push
movsb
jae
imulb
aam
mov
adc
addr16
mov
push
rcrl
test
lea
out
testb
icebp
rclb
mov
outsb
pusha
push
jno
mov
sti
ret
xchg
cmpsl
stos
adc
xchg
add
call
sub
outsb
shrb
rclb
frstor
cld
out
sub
test
jns
mov
movb
push
mov
mov
js
je
aas
push
movsl
mov
add
mov
pusha
or
xchg
dec
pop
mov
fisttps
mov
inc
add
push
shll
or
push
mov
stos
add
jnp
js
sub
ficompl
jne
mov
ret
mov
in
pop
jne
pop
testb
imul
xchg
fbld
std
fmuls
mov
sarl
or
push
dec
push
pop
inc
inc
xor
pop
push
dec
cmp
lcall
or
ret
mov
adc
arpl
mulb
fidivs
dec
mov
ds
and
jnp
pop
mov
cltd
cmp
inc
xlat
mov
mov
xchg
insl
into
dec
dec
jmp
lret
push
dec
xorb
sub
sub
out
sbb
cmc
and
xor
mov
into
cmp
idiv
xchg
sub
jae
jne
rorb
or
cltd
das
xor
out
jo
mov
mov
movsl
inc
pop
add
or
data16
or
or
sahf
jae
xorb
sub
addr16
sbbl
rorl
add
or
nop
push
popf
inc
mov
mov
sahf
iret
popa
mov
cmp
inc
and
xor
sahf
adc
out
insl
test
adc
ss
test
cmp
dec
and
in
sbb
std
out
mov
outsb
or
lds
pop
mov
fs
std
dec
bnd
shlb
call
mov
mov
es
pop
pop
out
cltd
cld
xor
mov
lds
and
mov
dec
stc
imul
fdivr
inc
jo
push
cmpsb
or
fmul
mov
jg
cmp
mov
repz
aad
jmp
test
add
mov
xchg
loopne
adc
cld
loopne
fstpt
adc
sbb
jo
xor
stos
jmp
adc
push
jae
pop
dec
pushf
jmp
lahf
call
leave
popa
jns
push
aaa
mov
in
cmp
pop
inc
int3
ljmp
xchg
stos
into
jp
cmp
adc
inc
sub
xchg
sub
jecxz
xor
shlb
mov
loopne
pop
aaa
enter
cmpl
out
imul
mov
push
imul
push
ja
mov
xchg
insl
in
push
repnz
imul
add
sub
cmp
mov
or
in
pop
gs
adc
adc
insl
mov
leave
mov
aas
adc
pop
push
es
or
mov
pop
addr16
dec
cmp
push
in
mov
cld
cmp
insl
std
lds
and
inc
repnz
mov
lods
imul
iret
jno
js
decl
lret
xor
fstps
push
jne
mov
pop
ss
jno
jno
outsl
bnd
add
cmp
in
addl
adc
lret
cld
adc
mov
pop
and
das
cli
add
inc
repnz
fistpll
sub
and
adc
jle
sub
and
jp
jbe
jae
pmaxub
hlt
dec
int
mov
daa
xchg
mov
pusha
mov
sub
scas
testl
and
add
adc
mov
dec
outsl
in
imul
inc
sarb
cmc
out
std
mov
out
cmp
mov
mov
loop
cmp
xchg
sahf
js
test
mov
or
pop
adc
cmp
dec
std
and
sub
imul
repz
enter
jno
mov
cmp
mov
stc
shl
inc
aaa
repnz
ss
inc
jnp
mov
mov
aas
test
cmp
add
outsb
out
fldl
pop
mov
cmp
sbb
insb
std
leave
out
sub
dec
mov
and
lods
dec
jecxz
jmp
in
xor
and
mov
fimuls
rorl
add
out
fs
cmp
aam
dec
out
shlb
inc
mov
rol
inc
mov
hlt
movsl
or
pop
ljmp
stos
fisttpll
jnp
imul
and
aad
pushf
data16
dec
pusha
jl
mov
dec
cli
aas
ss
and
mov
sbb
fsubr
mov
in
jecxz
jae
repnz
inc
sbb
rclb
dec
add
cmp
dec
xor
cmp
mov
iret
mov
lods
lcall
and
dec
xchg
sbb
mov
or
int3
mov
ljmp
push
ds
outsl
test
shlb
dec
incl
push
test
in
in
pop
aas
mov
mov
addr16
add
mov
adc
adc
notb
jne
cmp
daa
xor
adc
mov
jb
shll
cmp
inc
push
jl
mov
mov
xchg
flds
cmp
call
lret
lods
pop
jno
sbb
add
cmp
sbb
pop
sbb
mov
daa
sub
push
mov
loopne
add
adc
inc
lret
push
into
cmpsl
stos
mov
scas
outsb
mov
std
ret
imul
data16
inc
stos
lods
dec
cmpsb
aas
add
lea
xchg
jne
mov
sahf
inc
jns
mov
lahf
xor
xchg
scas
push
cltd
jb
mov
mov
insl
inc
iret
iret
xchg
inc
adc
mov
lea
pop
rorl
mov
test
or
push
movsl
xor
in
mov
push
stos
mov
in
sbb
mov
outsb
lret
xchg
push
push
pop
jp
sbb
or
ret
dec
push
sarb
cmc
push
aam
jge
push
pushf
sub
movsb
xchg
enter
pop
or
test
mov
adc
testb
xor
in
mov
and
xor
int3
xchg
icebp
inc
cli
xor
mov
in
add
data16
jecxz
jecxz
mov
rol
cwtl
imul
jp
and
popa
dec
mov
out
and
sub
cmpsb
cmovge
xchg
lsl
mov
jnp
sub
mov
sub
imul
movsl
shlb
adc
cltd
pop
bound
pop
jp
xchg
aam
repz
inc
mov
mov
add
sbb
icebp
lods
push
out
aad
jb
stos
aas
lock
xchg
xor
cli
add
mov
std
sti
out
jecxz
into
mov
aas
insb
xor
sarb
adc
mov
mov
rcr
xlat
mov
mov
dec
loop
aas
loop
cmpsb
shl
repz
mov
outsw
push
jnp
int3
clc
mov
sub
jno
out
int3
cs
add
icebp
and
cmp
mov
pop
aad
cmpsb
mov
inc
pop
hlt
nop
jp
dec
les
jmp
std
stos
sbb
push
aaa
sbb
and
je
xor
jnp
and
fidivrl
add
push
sub
dec
pop
in
repz
mov
insl
dec
ljmp
lcall
mov
hlt
jns
in
dec
jo
push
js
in
adc
cmp
xlat
mov
push
repnz
xchg
stos
inc
xchg
or
add
or
shlb
ds
mov
pop
and
iret
jecxz
in
divb
add
int
addb
dec
and
lock
ret
decb
pop
fiaddl
mov
cmpl
scas
mov
and
lods
push
or
icebp
ss
jno
mov
aaa
cmpsl
fldl
lret
insb
and
sahf
jp
xor
and
in
fldt
cmp
mov
das
mov
mov
cmp
je
mov
adc
xor
or
jnp,pt
jbe
add
inc
cmp
jne
and
testl
and
mov
mov
inc
aas
outsb
lock
or
int3
inc
fisubrs
mov
jb
insl
ljmp
stos
ds
jns
shlb
adc
push
in
xor
fs
mov
call
rolb
pushf
mov
sub
sbb
adc
dec
imul
in
xor
js
movl
pop
es
test
sbb
jg
and
xchg
inc
and
cmp
sarb
cmp
xchg
push
sbb
cmp
push
and
leave
arpl
mov
sar
setg
add
cvtps2pd
dec
pop
in
inc
jg
scas
xor
or
into
icebp
cmp
adc
fwait
mov
fidivrl
xlat
dec
sti
mov
test
pop
or
dec
dec
push
sbb
imul
dec
in
mov
cmc
push
mov
push
std
ss
cmp
repnz
or
data16
ja
js
int
fistps
ffree
lcall
arpl
nop
jnp
mov
or
pop
sbb
mov
jae
enter
adc
int
aam
ret
mov
mov
mov
mov
mov
inc
out
mov
out
dec
and
pop
mov
or
pop
push
scas
inc
loop
jnp
mov
push
iret
dec
repz
scas
int3
int
insl
loope
push
imul
fnstenv
pop
fcomp
jae
push
lcall
inc
sbb
pushw
mov
data16
xlat
hlt
jp
cmp
and
fistl
dec
dec
pop
call
clc
push
xchg
stc
add
or
sbb
adc
idivl
sti
jne
jmp
and
xchg
test
popf
fyl2x
mov
jmp
sbb
jne
inc
sub
and
or
mov
es
push
inc
ret
xor
int
mov
sub
notb
icebp
je
sbb
in
xchg
mov
lea
jge
jl
in
loope
xlat
imul
sbb
pop
mov
mov
mov
lret
dec
mov
cld
cmpsb
jl
mov
jbe
push
bound
and
pop
xchg
pop
insb
xchg
sbb
out
addr16
fstpt
aad
fnstsw
cwtl
pop
xchg
sbb
dec
inc
repnz
popf
sarl
jnp
and
jecxz
adc
dec
xchg
test
mov
subb
pop
mov
jb
xchg
sub
out
mov
int3
inc
les
and
lcall
pushl
iret
push
loop
stc
in
js
and
dec
inc
inc
jbe
cmpsl
pop
popf
test
sarl
test
loope
leave
xchg
xchg
mov
jg
xchg
mov
mov
pop
test
dec
mov
insb
dec
mov
loopne
and
or
add
insb
cmp
fmul
aas
xor
aaa
sub
cld
ja
pop
jo
jge
arpl
and
cmp
pop
push
mov
cltd
push
ljmp
fcomps
outsl
mov
mov
fbld
or
or
arpl
in
aam
jmp
mov
push
iret
xlat
ret
aam
add
fdivp
outsb
dec
fisttps
rorl
ret
rolb
add
pop
imul
mov
fsubp
insl
dec
cmc
fabs
data16
rcll
inc
rclb
mov
jge
dec
scas
lret
movsb
divb
dec
dec
repnz
jp
mov
xor
mov
das
shll
dec
or
stc
jnp
pop
fwait
or
pop
mov
je
repz
cld
fidivrs
pop
mov
dec
adc
addr16
lock
sub
pop
rorl
cmp
cld
imul
mov
cmp
add
iret
push
jne
dec
dec
out
cmp
jns
mov
xchg
jg
and
repnz
pushf
cmp
jb
sbb
std
xchg
and
mov
mov
andb
sub
mov
jae
sahf
out
std
out
push
subl
xchg
je
pop
jge
loopne
fildll
or
mov
sbb
xor
mov
mov
into
xchg
jo
xchg
pop
push
mov
jb
mov
sar
pop
ds
lods
in
out
hlt
mov
pop
enter
jg
test
push
insb
cmc
push
test
cmp
imul
leave
es
shlb
addb
stc
je
push
xchg
and
icebp
mov
xchg
test
xchg
test
outsb
hlt
jno
scas
mov
cmp
dec
push
sbb
pop
and
jae
inc
or
aad
bound
pusha
pop
push
adc
repz
mov
js
jae
scas
hlt
push
and
add
je
push
call
shl
cmc
xor
enter
out
sbbl
or
cmp
mov
or
adc
mov
adc
shrb
dec
dec
inc
sbb
clc
add
xor
jb
into
jg
jmp
jnp
mov
nop
insb
pop
in
outsl
jle
ljmp
scas
test
movl
adc
in
aas
rcrl
repz
dec
push
xor
adc
and
sti
inc
xchg
arpl
sbb
xor
scas
adc
push
mov
dec
mov
push
sbb
push
or
sub
in
sub
cmp
mov
andl
loopne
outsb
push
jmp
cmp
sbb
sahf
iret
push
fwait
xor
sti
arpl
andl
xlat
jo
fwait
scas
fcom
loope
cmpsb
xor
fsubr
cmc
xchg
sbb
les
sbbl
adc
xchg
jmp
hlt
mov
mov
shlb
inc
repz
push
sbb
xor
cmp
jecxz
mov
lahf
test
jl
insb
jns
adc
mov
notl
cmc
or
popa
mov
lahf
hlt
fistpll
jb
mov
std
xchg
out
or
fisubl
movsb
add
mov
inc
add
cmp
lahf
cmp
and
jae
xchg
stos
scas
sbb
jmp
es
movsl
and
loope
sub
setno
adc
cs
mov
dec
jbe
dec
sbb
add
out
iret
push
dec
xor
iret
mov
mov
shrl
push
orl
sbb
mov
popf
inc
push
div
mov
pop
in
aam
push
shl
mov
loopne
jle
subl
jmp
and
add
stc
enter
push
andb
inc
mov
xor
movsl
lcall
js
repz
pop
lret
or
stc
xchg
xchg
out
pop
push
xchg
hlt
fisttpll
and
lcall
xchg
cs
jo
adc
xchg
mov
dec
shl
test
xor
nop
jg
pushf
xchg
xchg
into
xchg
xlat
adc
mov
out
outsb
popa
cmp
mov
imul
movsl
pop
shll
cmp
call
shrb
arpl
sbb
pusha
in
leave
or
mov
mov
xchg
ficompl
nop
into
jmp
or
in
test
shlb
nop
sbb
fisubrs
mov
mov
mov
in
xchg
aas
pop
test
or
xor
jo
repnz
pusha
not
lret
jne
testl
xlat
cmpl
inc
mov
ret
icebp
fiaddl
shrb
outsl
pop
push
rolb
mov
imul
fwait
push
icebp
jbe
dec
shrl
dec
outsl
lcall
jle
cmc
sub
jecxz
xchg
xchg
aas
add
out
dec
mov
sbb
sbb
pop
aas
add
shrl
bound
call
xor
xlat
lods
js
insb
sbb
cmp
or
cltd
rorl
dec
jno
shr
loope
popf
mov
jo
pop
mov
inc
aas
xor
popl
push
inc
mov
jae
lahf
repnz
notl
mov
hlt
cld
lds
shrl
pop
and
cmc
sub
rolb
and
lock
aad
mov
fwait
in
sbb
mov
cmp
xchg
sub
jp
adc
out
les
adc
out
fbstp
sub
push
ret
dec
inc
sub
addr16
pushf
test
xchg
and
inc
leave
pop
adc
jmp
mov
outsb
mov
push
sbb
push
outsl
xchg
rclb
aas
push
fsubrp
sti
ljmp
movl
ljmp
sub
lahf
pop
inc
in
pushf
fs
add
inc
hlt
in
mov
mov
insb
xchg
add
sbb
das
cwtl
loop
jle
jo
pop
cmc
leave
sub
sbb
pushf
js
rorb
inc
mov
lahf
ficoml
xor
dec
popf
adc
mov
out
push
cmp
sub
ds
out
imul
fwait
xchg
push
cmp
outsb
leave
fistpll
adc
sahf
xchg
jp
in
imul
jo
je
cmp
xor
sub
cmp
mov
aam
cmp
inc
xorb
notb
fwait
imul
movsb
xor
or
orl
into
imul
ljmp
jecxz
push
out
mov
push
mov
js
cld
rcll
xor
das
andl
sahf
in
aaa
xchg
ja
jnp
cmp
fs
fdiv
out
add
mov
push
dec
das
out
and
and
mov
in
mov
out
dec
fisttpll
lds
add
je
jno
mov
xchg
test
test
inc
or
sub
stos
jmp
cmp
sub
sarb
mov
xlat
xchg
loop
sbb
push
inc
popa
cld
mov
pop
push
lret
repnz
pushf
test
jl
pop
insb
imul
aam
in
xor
push
push
repnz
sub
cmp
sub
shll
mov
xor
das
sub
pop
mov
mov
clc
xchg
or
cmp
int3
jnp
sbb
jns
or
pop
add
dec
xor
inc
or
data16
jmp
shll
arpl
imul
ror
movsl
sub
or
popa
dec
push
push
mov
add
or
xchg
push
fsubrl
mov
dec
nop
xchg
dec
or
mov
shrl
cmp
shll
or
fbld
shrl
repz
push
xchg
adc
push
sub
cltd
loope
mov
out
jne
xchg
daa
in
mov
push
adc
push
mov
mov
xchg
xchg
cmp
out
and
dec
es
in
nop
sbb
and
inc
inc
dec
aam
aad
xor
mov
jl
lods
lret
mov
push
pop
cmpsl
ret
faddl
aas
mov
out
out
iret
dec
add
insb
in
ja
cs
clc
gs
inc
rolb
mov
inc
xchg
dec
pop
mov
sbb
sahf
mov
test
call
pusha
ret
push
rcll
push
dec
sbbb
adc
es
sub
fisubrs
loopne
lock
call
cld
inc
std
and
hlt
lods
xor
push
in
lahf
push
xor
aad
sub
pop
mov
testb
jo
or
adc
incb
rolb
inc
jg
clc
xchg
out
loope
xchg
stc
inc
pop
fbstp
xchg
xorl
sbb
inc
lock
push
xchg
in
push
popf
push
adc
push
and
or
add
aas
shl
mov
push
pop
aas
mull
sti
add
sbb
out
ror
outsb
adc
shll
xchg
sbb
out
jle
mov
and
fidivl
pop
pop
add
mov
cwtl
push
and
jg
aam
movsb
sbb
shlb
arpl
roll
or
fwait
lcall
test
mov
cli
sub
jmp
mov
pushf
ret
loope
insb
xor
aam
test
inc
jbe
lahf
xor
or
call
aam
out
and
sbb
mov
mov
test
mov
pop
xor
imulb
dec
mov
stos
dec
mov
nop
ret
xchg
ljmp
adc
and
sub
push
add
mov
jno
sbb
push
or
das
int3
dec
out
mov
push
pop
es
mov
popa
mov
xor
loope
mov
fisubs
nop
sahf
stos
cld
dec
and
mov
ret
repnz
or
sbb
cltd
mov
inc
xchg
js
inc
es
call
andl
add
cmp
xor
in
stos
dec
in
aaa
cmp
xor
xchg
cmpsb
jmp
pop
mov
rorl
inc
fwait
in
std
and
inc
and
out
nop
sbb
enter
mov
pushf
pop
fs
add
xor
je
lret
sbb
decb
sbb
adc
push
rcrb
fs
mov
popf
mov
fbld
cld
in
dec
or
add
dec
bound
xor
jnp
adc
loope
push
xchg
sahf
xlat
cmpsl
out
setae
in
push
mov
sub
jecxz
repz
data16
pop
inc
into
shll
lret
add
lds
jge
cmpsl
out
xchg
les
sub
aas
idivl
out
fisubrs
icebp
mov
push
repz
xlat
xchg
scas
add
sbb
or
gs
push
insb
jno
mov
ljmp
aas
loope
aas
mov
jecxz
movsl
mov
xchg
cmp
mov
test
add
ja
push
fcom
dec
in
cmpsl
inc
push
or
data16
and
scas
mov
popf
cli
jp
mov
cmp
and
lret
jnp
add
addr16
jle
cld
cmpsb
pop
mov
xor
xchg
clc
adc
les
fcmovu
push
popl
mov
sub
in
into
mov
jb
loopne
aad
das
inc
jbe
enter
dec
xchg
out
push
pop
sahf
rcl
outsb
sahf
xor
push
mov
jl
mov
js
or
xchg
icebp
xchg
gs
xor
mov
mov
xor
nop
xchg
ljmp
mov
jmp
scas
xchg
jae
push
dec
or
mov
add
jb
in
xorb
fwait
inc
or
dec
rclb
inc
lock
sarl
dec
sub
arpl
popa
sahf
xlat
inc
sarl
mov
push
shl
push
adc
adc
imul
test
inc
sbb
and
cld
push
dec
sarl
sub
dec
fcomps
aaa
push
fwait
inc
adc
mov
jle
dec
arpl
or
mov
sub
popf
das
les
das
push
notb
mov
ljmp
lods
pop
repnz
and
cs
repnz
xor
fs
lds
pop
fisubrs
gs
fstps
pop
and
mov
jno
mov
adc
xor
lret
lahf
push
jnp
sarl
xor
popf
jns
xor
clc
and
sbb
sub
mov
mov
enter
xor
sti
test
mov
lahf
pop
jle
popf
data16
mov
jo
ss
gs
pop
je
inc
mov
bound
mov
lock
fcoms
mov
leave
int
or
or
mov
push
xor
pop
pop
out
cltd
jbe
jecxz
inc
inc
out
push
stc
push
addb
iret
cwtl
inc
fwait
fwait
mov
xor
mov
cmc
sub
div
sti
xor
lock
push
mov
bound
mov
test
xor
push
adc
arpl
cltd
and
fs
loope
out
and
pop
addr16
push
xchg
loop
push
sbb
mov
out
cmpsb
insl
pop
cmp
push
int
repz
push
xchg
ljmp
fistpll
xor
and
push
and
test
pushf
mov
sub
mov
or
mov
cmpsl
dec
sbb
sti
je
mov
push
out
xchg
inc
clc
aam
and
inc
mov
out
lock
mov
and
fs
ja
xchg
pop
in
hlt
push
andb
cmpsb
xchg
clc
shl
sub
pop
jnp
std
mov
mov
mov
add
push
adc
fimull
lods
int
mov
cli
in
pop
cld
mov
dec
stc
inc
jmp
fsub
flds
push
mov
pop
and
sub
stos
mov
cld
loope
and
xchg
cmp
imul
aad
jne
movsl
popf
in
stc
test
xchg
pop
xchg
add
mov
js
push
pop
adc
ret
stos
sahf
cmp
in
mov
mov
iret
mov
push
mov
daa
adc
dec
adc
xchg
lahf
stos
mov
lret
add
pop
xchg
mov
xchg
fmulp
loope
fwait
sbb
add
mov
test
adc
scas
stos
push
add
cld
jno
mov
orl
std
mov
jmp
insb
arpl
sbb
dec
cmp
shr
push
pop
out
aaa
dec
out
xor
cs
and
and
pop
popf
sub
fiaddl
cmpb
nop
mov
cmpb
lods
out
leave
lds
push
stos
movsb
pop
lcall
mov
popf
dec
in
cmp
mov
call
jno
sub
stos
rolb
inc
das
xchg
aas
dec
call
push
jo
pop
imul
xchg
imul
scas
jnp
out
push
aad
jne
out
lret
mov
popf
dec
fwait
aaa
push
add
mov
push
subb
mov
mov
cmp
mov
mov
xchg
out
push
mov
jge
in
xchg
movsl
mov
cld
sbb
cmp
inc
dec
pop
outsb
scas
ret
and
jns
popf
mov
sbb
pop
in
roll
and
enter
pop
mov
xor
or
stos
mov
dec
mov
test
fnstsw
negb
xchg
add
push
insl
inc
mov
ss
aad
out
lahf
xchg
das
aad
imul
or
or
mov
mov
mov
pop
in
rcl
lret
add
jmp
jb
ror
jl
jl
jecxz
jbe
pop
scas
pop
dec
jecxz
dec
aad
cmp
ficoms
xchg
mov
xchg
xchg
add
mov
shll
cmp
dec
cmc
shll
sub
cmpsl
out
push
xor
out
adc
sub
mov
movsb
jnp
sub
xor
mov
push
and
mov
int
stos
shll
mov
add
out
fists
int
je
cli
mov
ds
push
ss
mov
adc
loop
nop
ds
inc
mov
aad
sbb
repnz
sbb
pusha
push
sbb
mov
jmp
cld
and
int
inc
and
sbb
stos
in
ja
and
xchg
xchg
int
lret
or
ret
xchg
out
or
ss
shl
jne
inc
lahf
cmc
xchg
negl
xchg
in
jne
je
jne
scas
cmp
lock
andl
movb
aad
lock
cmpb
mulb
test
rcrb
mov
push
mov
mov
xchg
leavew
int
xor
pusha
pusha
inc
or
in
stos
cmp
paddd
push
adc
xchg
jmp
inc
jbe
mov
jl
mov
psubb
lret
popf
mov
sub
xor
mov
inc
cs
jne
fcmovnu
aaa
cltd
push
das
icebp
adc
stos
jecxz
inc
xor
cmc
inc
mov
into
cmp
add
loopne
or
and
jl
sti
outsb
xchg
jecxz
mov
in
aam
fsub
inc
scas
push
pop
xor
roll
jno
add
addl
fs
sub
scas
fs
jl
shr
fwait
daa
xchg
sub
inc
cmc
stc
mov
fstpt
arpl
jmp
and
mov
push
xlat
mov
rol
and
cmpsl
inc
or
popa
xor
sub
int
dec
sahf
sub
icebp
cwtl
xchg
fdivr
call
adc
mov
cmp
dec
loopne,pt
add
rolb
or
mov
pop
pop
lock
jp
sub
xor
xchg
mov
push
adcl
fisttpl
xchg
pop
xchg
mov
and
dec
insl
outsl
test
mov
xchg
faddp
mov
cmp
mov
sub
sbbb
bound
pop
in
cli
jae
mov
xchg
adc
pop
push
inc
push
jl
rorb
test
inc
xor
rcr
dec
and
dec
cmp
lret
cmp
inc
push
jns
xchg
pop
loope
inc
push
push
and
mov
imul
push
cmc
pushf
and
push
call
mul
xacquire
ja
leave
sbb
out
lea
popf
iret
sbb
movsb
cmp
ljmp
mov
dec
fcoms
daa
inc
int
mov
add
jae
sbb
and
sti
je
and
jb
inc
and
stos
enter
int3
adc
sti
pop
test
int3
inc
pusha
loop
xchg
or
and
pop
and
add
test
push
push
out
into
push
xlat
ja
movsb
xor
adcb
cli
daa
jg
pop
mov
cmc
aaa
mov
sub
cmp
xor
jo
xchg
xor
push
cld
mov
lock
dec
cmp
dec
cmc
mov
mov
sub
imul
in
iret
adc
std
dec
stos
arpl
cmp
data16
leavew
jg
mov
fs
inc
jecxz
mull
mov
inc
std
mov
mov
jo
and
scas
sarl
cmp
aam
iret
add
add
in
iret
mov
mov
in
mov
push
cmp
and
nop
jg
pushf
adc
test
inc
cmp
mov
and
rcr
cmp
call
js
mov
das
test
pop
xchg
inc
add
adc
mov
shl
push
pop
mov
out
mov
xor
mov
dec
push
jns
and
cmp
ret
pop
sub
pop
pushf
js
mov
fmuls
push
fildl
in
inc
dec
push
push
jnp
inc
out
roll
repz
pushf
adc
scas
mov
popa
xlat
xlat
cmc
add
out
lds
add
pop
das
or
xchg
inc
arpl
or
inc
inc
imul
lcall
incl
movsb
test
out
mov
sbb
sub
push
shlb
sti
xor
pop
and
and
lods
or
sbbl
mov
mov
into
shll
int3
cmpb
cmp
lds
push
mov
inc
adc
add
sti
shrb
cmp
roll
scas
fidivrs
dec
dec
mov
push
mov
mov
xor
lahf
jecxz
sbb
or
out
jmp
mov
or
push
insb
call
jo
mov
pop
xor
dec
movsb
push
dec
jecxz
lods
fidivl
inc
inc
ja
into
sbb
jecxz
test
add
jbe
imul
cli
ficoms
jno
dec
arpl
push
loopne
and
inc
adc
mov
bound
and
dec
movsl
repz
bound
movsb
mov
jge
dec
sbb
into
and
mov
push
push
pop
cmp
jae
sbbb
lret
push
dec
hlt
pop
lods
cli
aam
xor
adcl
fidivrs
sbb
aaa
test
test
fidivl
sbb
dec
stos
cmpsb
test
pop
mov
lock
dec
aam
clc
sbb
outsl
call
jb
cmp
iret
cmp
and
xor
dec
mov
mov
js
xchg
inc
std
pop
push
lock
xchg
out
inc
pop
cmpsl
shrl
addr16
pop
ss
mov
xchg
adc
sbbb
ret
stos
dec
pop
int
jns
xor
add
int
push
leave
mov
popf
cwtl
mov
push
adc
inc
push
arpl
mov
movsb
inc
inc
mov
in
in
xor
mov
scas
orb
loope
inc
sbb
scas
fwait
stc
pop
daa
pusha
mov
rcl
test
sub
mov
rclb
sbb
push
sbb
loop
push
dec
incb
scas
scas
in
lahf
nop
mov
stos
test
mov
inc
mov
jp
imul
addr16
mov
mov
mov
jnp
daa
std
mov
push
cmp
out
lods
xor
pushf
mov
or
xlat
movb
add
int3
enter
adc
xchg
lds
sbb
pop
and
pusha
movsl
xlat
xabort
fld
pop
outsb
mov
subl
jnp
xchg
add
aaa
jnp
lock
push
hlt
mov
cli
and
inc
add
or
test
or
jecxz
cli
add
imul
loopne
inc
into
adc
and
lret
daa
fbld
cmc
leave
je
mov
loop
mov
xchg
fbld
movl
sbb
shrb
lods
ret
insb
sbb
idivb
or
jg
xor
mov
stos
jno
sub
pop
dec
sub
push
cmp
rclb
xchg
dec
and
jge
cld
inc
arpl
stos
cmp
test
inc
inc
stc
push
adc
push
dec
dec
or
es
push
mov
aaa
adc
fwait
inc
rcrb
xorb
add
outsb
mov
jns
cmpl
xor
xchg
adc
daa
add
data16
xor
clc
lahf
jl
ds
pmullw
out
sti
psrlq
jl
fisttpll
adc
fldl
or
mov
mov
sbb
out
jecxz
out
mov
pop
pop
and
sub
pop
inc
lods
orb
jp
push
aam
sbb
jnp
xchg
popa
popa
pop
xchg
and
mov
mov
add
mov
cld
pop
dec
mov
cvtpi2ps
lcall
stos
pop
daa
mov
shlb
orl
dec
xor
mov
icebp
in
enter
push
jno
sub
add
xlat
cld
dec
sbb
add
aas
adc
dec
xlat
loopne
scas
push
push
ret
push
xchg
loopne
mov
test
xor
fwait
and
jnp
das
nop
or
les
incb
pop
mov
inc
inc
aad
push
clc
lahf
dec
mov
mov
jecxz
andl
outsl
addr16
ss
dec
inc
cli
xor
dec
gs
mov
and
loop
hlt
inc
and
sbb
sbb
fs
sub
mov
pop
mov
and
divb
push
inc
imul
xor
push
cltd
add
pop
or
sub
ja
jb
ss
sub
jl
fisubs
das
fistl
mov
es
aad
out
xchg
loop
cmc
daa
data16
sti
loopne
xor
cwtl
or
mov
hlt
leave
pop
push
and
sbb
pop
and
adcl
inc
pusha
fs
or
aad
lahf
test
add
mov
xchg
pushf
fisubrl
push
jne
cmpl
cmp
fstl
xor
cwtl
ret
out
and
stc
sub
les
mov
adc
stc
push
fmull
loop
in
sub
jnp
nop
sbb
loop
push
lock
pusha
dec
lcall
dec
sub
lcall
jmp
aaa
dec
lods
outsb
lret
jo
jns
pop
insl
out
pop
and
movsb
cli
ja
jp
or
in
rclb
inc
xchg
or
push
jae
roll
fidivrl
lea
and
adc
mov
test
mov
ror
cmp
fidivs
dec
stos
mov
mov
stos
nop
mov
bound
push
out
daa
jg
add
inc
inc
inc
outsl
stos
dec
movsb
outsl
jle
icebp
and
sbb
leave
imul
sbb
fstps
popa
cmc
imul
sar
pop
cli
mov
aas
pop
inc
mov
jl
or
jp
popf
xchg
ret
roll
jl
xor
cli
pop
into
adc
mov
xchg
ficoms
mov
xor
aas
outsl
pop
dec
push
mov
dec
subl
and
fsubrl
jmp
dec
mov
push
test
inc
mov
test
sub
das
ret
les
and
outsl
xchg
push
fwait
pop
cmp
rolb
cld
std
bound
xor
or
call
jns
clc
mov
fcomi
mov
imul
cmpsb
enter
sar
mov
xor
sbbb
adc
roll
stos
cld
arpl
xor
lcall
jecxz
shrb
clc
mov
push
sub
inc
mov
or
mov
inc
stos
cmp
stos
sub
pushf
ja
pop
push
aad
pop
dec
add
mov
inc
cld
mov
fisttpl
cmp
push
mov
cmp
lock
iret
push
mov
and
insb
test
negb
inc
or
jns
push
and
mov
movsl
out
rorb
inc
addl
dec
movb
or
das
pop
and
dec
movsb
scas
popf
mov
dec
inc
xor
call
mov
cltd
icebp
out
out
sbb
pop
inc
in
push
les
inc
test
add
jle
fimuls
ja
push
js
jbe
loopne
mov
popa
dec
mov
scas
fst
push
pop
push
mov
and
aad
or
test
mov
sbb
inc
mov
jecxz
pop
lahf
pop
adcb
mov
call
adc
arpl
lock
ja
lea
std
xor
mov
fldl
in
roll
add
aad
scas
and
jb
cld
test
movb
dec
dec
xchg
sbb
cmp
add
ljmp
cmpb
adc
push
rcrb
jo
mov
lret
xor
push
out
push
sahf
add
dec
dec
xor
movsl
aaa
fldl
movsb
inc
insl
lcall
jae
cmpsb
fiaddl
xchg
loopne
outsb
pop
jecxz
sti
rcl
pop
add
scas
and
pusha
test
lods
les
inc
cwtl
test
enter
in
shl
adc
jbe
cwtl
xchg
fmul
loop
ret
out
cmp
fcomip
mov
adc
popf
mov
lock
push
shlb
out
dec
or
loop
jo
outsl
jae
inc
mov
adc
mov
mov
push
xor
gs
push
xor
ja
ja
in
fstp
cmpl
addl
inc
enter
popa
out
inc
sbb
inc
dec
xor
sub
scas
fldenv
or
mov
jnp
in
pop
imulb
push
push
cmp
mov
push
or
pop
inc
xchg
adc
fnstenv
repnz
pop
xchg
lahf
pop
push
mov
xchg
shrl
movsl
xchg
sbb
cmp
sbb
daa
incl
mov
and
cmpl
popf
cld
add
repz
and
mov
sbb
mov
mov
in
int3
outsl
ret
outsl
pop
mov
scas
push
js
sub
jne
mov
rclb
pop
cld
fstl
icebp
mov
out
clc
push
stos
sub
rcrl
inc
and
jecxz
inc
rorl
dec
push
add
xor
or
popf
test
inc
andl
fbstp
inc
push
pop
movsb
loop
jge
mov
stos
and
adc
cmp
or
inc
jmp
aam
jno
jns
aas
add
mov
cmpsb
push
arpl
aaa
xchg
mov
xchg
fiadds
xchg
push
push
lods
add
in
xchg
nop
out
adc
or
outsb
out
or
adc
mov
jl
pop
icebp
mov
dec
mov
jg
adc
popf
mov
fnstsw
push
aas
rol
lea
enter
cmc
jnp
jg
int3
or
std
jg
cmc
std
xchg
mov
cmc
or
ljmp
aas
stos
aad
cli
movsb
mov
push
sbb
mov
cmp
jmp
fnsave
call
mov
popa
inc
loopne
adc
jno
add
xorb
lods
notl
cltd
aam
or
jbe
jecxz
das
adc
loope
addr16
jp
fucomp
or
pop
or
xor
add
mov
mov
popa
xchg
or
loopne
add
add
int
decb
xor
mov
test
call
jge
sbb
inc
mov
gs
push
mov
jg
mov
xchg
push
mov
fnsave
or
push
cmp
mov
pop
inc
mov
ret
repz
ljmp
pop
leave
xor
cs
arpl
iret
fisubl
shl
in
mov
mov
inc
in
fcomp
push
pop
pop
daa
fisttpll
jl
cmpsb
out
mov
cli
jle
lea
dec
pop
cwtl
push
pop
nop
mov
pusha
les
ds
jo
in
and
jno
cwtl
mov
xorb
movsl
mov
sub
jge
or
mov
addb
jecxz
pop
cli
mov
ja
call
repz
pop
shl
pushf
push
jmp
dec
cmc
mov
test
sbb
das
sub
sbb
or
cwtl
insb
mov
scas
mov
ret
mov
cmp
nop
pop
outsb
fiaddl
cmp
cmp
mov
lcall
aas
outsl
iret
dec
and
mov
loopne
mov
cmp
pop
pop
lock
das
xchg
mov
or
adc
stos
jnp
mov
filds
and
data16
cmpsb
mov
arpl
addl
xchg
outsb
shll
test
movsl
das
loop
xchg
std
imul
fildl
or
ds
sub
pop
pop
rol
cmpsb
mov
gs
scas
mov
icebp
mov
push
mov
bound
sbb
mov
imul
orl
xchg
mov
push
push
lea
shlb
clc
aam
rolb
add
scas
jle
shll
sbb
and
ret
xchg
mov
pop
adc
mov
push
and
lock
mov
out
int3
xchg
mov
mov
in
repnz
mov
ss
enter
sbb
scas
jmp
stos
ficoms
les
mov
mov
pop
fadd
jl
jle
jo
jp
inc
test
jno
jae
jge
mov
cmpsb
mov
fwait
lds
rcll
dec
adc
and
rcll
mov
into
sbb
ljmp
adc
popf
int
cmp
mov
ja
int3
add
dec
es
and
ljmp
int
adc
xchg
ja
sbb
testb
adcl
mov
test
add
pop
movsl
dec
icebp
xor
jnp
push
jno
or
dec
out
test
rcrl
jecxz
inc
mov
sub
cmp
xlat
rcr
or
push
mov
xor
rcrb
ja
mov
mov
mov
push
xor
insl
inc
pop
aaa
mov
outsl
cmp
push
jmp
and
and
sub
cmpsb
dec
cs
cmp
pushf
negb
add
pop
rolb
pop
lcall
mov
lods
push
int3
push
mov
push
push
push
xor
outsb
add
cmc
js
xor
fs
xlat
bound
cld
mov
adc
bound
dec
popa
test
dec
xor
cmpsb
or
adc
add
insl
xor
add
call
dec
push
mov
pop
add
adc
fidivs
or
xchg
mov
roll
js
jnp
out
xor
pop
test
and
push
pop
inc
adc
lcall
inc
daa
bound
xor
shlb
mov
jle
mov
mov
sbb
sub
jbe
pop
mov
xor
daa
dec
mov
outsl
in
mov
sbb
jl
mov
scas
clc
add
adc
pop
in
cmp
xlat
push
mov
imul
push
jae
psllw
pusha
inc
jne
xor
and
jbe
mov
cmp
icebp
fldt
xorb
out
test
mov
mov
fisubl
stos
repnz
mov
je
and
pop
ss
outsb
dec
jecxz
scas
mov
inc
out
or
sbb
dec
loope
in
cmp
dec
sub
sbb
pop
pop
push
clc
lcall
bound
xorps
stos
mov
jmp
fs
sub
fadds
lcall
pop
lock
aad
pop
jo
and
inc
frstor
cmp
jns
inc
vsubsd
ret
add
and
adc
pop
repnz
cmp
hlt
mov
pushf
pop
js
lcall
pop
add
add
adc
notb
dec
popa
push
lret
or
jae
fsubrl
icebp
fisttpll
cli
rclb
jns
adc
fmuls
dec
inc
add
lcall
jb
outsl
dec
aad
cld
xchg
lods
aad
loopne
sti
mov
addr16
jmp
mov
sahf
divl
outsb
mov
icebp
adc
cmp
ret
cmp
mov
mov
imul
mov
out
das
loope
inc
pop
push
sbbl
and
pop
test
and
sbb
jno
inc
out
fwait
dec
sbbb
sti
sti
cmp
xor
enter
and
lods
push
inc
jo
sub
sarb
cmc
sbb
mov
sbb
out
jae
popa
sarb
xor
es
aam
add
lcall
mov
imul
xchg
push
or
pushl
mov
out
adc
add
sub
loopne
pop
out
mov
into
pop
inc
push
cmp
insl
cwtl
push
lahf
aam
cmpsl
cmp
xchg
fdivl
mov
add
mov
inc
cmp
push
jmp
cmpsl
lods
adc
cs
out
call
stc
mov
cld
shlb
imul
iret
jb
inc
mov
ds
fmuls
ja
jg
and
jmp
shlb
aas
jmp
fwait
rcrl
cmp
out
xor
in
aad
mov
fwait
mov
jbe
jp
daa
aad
xchg
mov
pop
cmpsb
fisubrl
insb
int3
cmc
movsb
jge
cmpsl
add
xchg
xor
lcall
dec
xchg
data16
in
or
mov
mov
pop
pop
dec
int
sbb
test
push
roll
cwtl
xchg
xchg
into
sbb
in
fldcw
mov
sbb
insb
jae
mov
ret
lret
inc
in
cmc
les
imull
ror
mov
lret
sarb
out
cmpsl
push
push
xchg
dec
xchg
movsl
xchg
pushf
pop
negl
sub
cltd
push
clc
roll
or
into
fucomp
cmp
lds
pop
xor
test
es
int3
call
pop
jae
xchg
inc
aam
push
mov
sbb
sarl
lret
imul
cmpsl
fsubr
fisubs
shlb
insw
dec
mov
nop
cmpb
jo
pop
fwait
sub
rol
xchg
xor
cmp
xor
add
mov
lock
subl
mov
icebp
mov
shrl
pop
hlt
iret
jo
data16
push
mov
out
and
sbb
enter
cs
pop
sub
int
mov
lods
xlat
imul
dec
ror
sub
cmp
insb
mov
rcrl
pop
fisubrl
test
lea
jnp
adc
xchg
jnp
xchg
sub
dec
push
push
pop
ficoml
push
in
iret
leave
repnz
fwait
cmpsl
testl
gs
push
cmp
push
mov
aam
mov
test
sbb
sub
pop
cmp
out
cltd
outsb
les
fisttps
aaa
int3
ficoms
stos
xor
add
mov
scas
das
movsb
adc
pushf
insb
xor
imulb
aaa
outsl
and
popf
push
pop
outsl
test
lahf
mov
int
das
lret
jae
hlt
aaa
arpl
mov
pop
aaa
sub
je
pop
test
inc
mov
xor
jecxz
lea
pop
cmp
inc
jbe
xor
sub
add
loop
aas
or
pop
jecxz
sbb
mov
int
sub
pop
rorl
ret
inc
jecxz
fistps
cmp
ret
push
leave
ret
repz
dec
dec
pop
mov
xchg
out
xchg
push
dec
or
jmp
test
jbe
pop
adc
push
rcll
iret
inc
lahf
inc
imul
test
sbb
imul
mov
rclb
add
jle
xlat
ss
fistps
enter
cmp
cmp
cld
scas
add
adc
stos
adc
daa
inc
out
xchg
jge
mov
sarb
pop
int3
enter
or
decl
ret
mov
emms
mov
loopne
pop
fidivrs
out
out
movb
sbb
insl
es
popf
and
inc
add
test
jle
fmuls
in
dec
test
sbb
dec
pop
sbb
adc
and
dec
stos
cmc
sbb
push
mov
gs
adc
cwtl
sarl
xchg
jl
ret
push
xor
scas
mov
int3
test
mov
cmp
jmp
jg
mov
dec
or
icebp
aaa
popf
fwait
sbb
int
imul
jo
into
sbb
push
lods
cmp
adc
imul
bound
mov
jne
jae
iret
cmp
pop
push
inc
jb
mov
insl
mov
pop
rorb
outsb
or
les
jmp
aas
push
xor
jno
movsb
shr
xor
rcr
lret
test
insb
fldl
dec
and
pop
bound
mov
aam
outsb
or
jg
jae
dec
pop
cmp
test
fnsave
mov
es
cs
push
mov
pop
jmp
adc
mov
sub
mov
mov
mull
jp
imul
sti
adc
or
mov
in
mov
push
cli
add
scas
neg
xchg
inc
push
xchg
and
vsqrtss
arpl
sbb
xchg
dec
clc
or
stos
mov
dec
cli
or
inc
fs
xchg
inc
pop
arpl
xchg
dec
incb
push
mov
mov
dec
jns
mov
in
xchg
jns
pop
pop
nop
iret
and
jns
jmp
dec
jp
cmp
test
dec
mov
inc
xchg
pop
pop
cmp
sub
jne
dec
mov
mov
push
dec
stc
add
rsm
icebp
jg
btr
adc
xchg
decl
push
cld
cld
aad
jmp
and
ljmp
xlat
xor
dec
rol
cmp
sub
stc
push
out
lcall
sbb
movsl
loopne
cmpsb
cmp
xor
and
sbb
jl
pop
pushf
mov
js
mov
jb
dec
xchg
and
dec
in
jo
mov
dec
add
mov
cmp
mov
push
in
mov
outsl
outsb
cli
dec
scas
mov
test
add
mov
lods
jns
fidivl
ret
and
js
stos
int3
daa
dec
dec
cmp
push
es
adc
add
lahf
sahf
sahf
stos
shr
mov
mov
sbbl
mov
shll
int
nop
out
pop
into
fwait
lds
add
stos
sub
mov
popa
dec
inc
dec
leave
sub
mov
scas
or
loop
fmulp
cmp
lcall
fdivr
mov
sub
and
movhps
mov
push
ja
or
or
nop
and
mov
mov
data16
clc
mov
push
jg
es
inc
and
lods
lds
xor
jg
das
repnz
lret
test
in
lods
cli
daa
stc
sahf
lcall
dec
pop
dec
movsb
sbb
sbb
icebp
int
xchg
incl
xchg
mov
xor
cli
arpl
mov
clc
inc
adc
jecxz
mov
dec
jecxz
pop
dec
lret
test
cltd
mov
add
sub
int3
mov
push
mulb
xchg
pop
push
insl
sahf
into
mov
sub
xchg
inc
sbb
push
aas
xor
stos
lahf
jge
sbb
mov
adc
test
sub
mov
mov
inc
test
test
inc
push
daa
sbb
push
insl
cmp
fwait
dec
push
push
push
stos
mov
repnz
stc
rclb
cmp
mov
sub
cmp
push
insb
jbe
push
mov
jae
inc
inc
iret
mov
das
fwait
mov
popf
stc
cmp
pop
cmpsl
out
fldcw
inc
loope
xor
lea
xchg
xor
dec
cmpsb
test
lods
dec
lods
jno
adcb
push
push
out
jb
lret
stos
ficoml
or
mov
lahf
cmpsb
sbb
mov
hlt
jo
mov
std
push
jae
dec
ret
mov
mov
mov
jmp
lods
test
inc
push
into
iret
daa
loop
popf
push
outsl
inc
pop
mov
je
into
lahf
lahf
mov
jmp
in
mov
jg
push
aam
jb
mov
mov
push
into
xor
jae
push
mov
sbb
pop
dec
mov
and
movsb
data16
mov
mov
enter
mov
sbb
cltd
fwait
in
cmp
int3
stc
lds
enter
mov
dec
shll
adc
inc
rcll
int3
xor
cs
jecxz
call
pop
jecxz
rclb
dec
fistpl
dec
push
push
add
ljmp
ljmp
adc
les
and
xchg
jb
mov
add
add
int
gs
aam
pop
xor
jp
adc
je
sti
sub
js
cltd
scas
dec
jl
cmpsb
xchg
lods
adcb
daa
imul
arpl
jnp
mov
cmpsb
jge
jae
fdiv
in
or
inc
push
andb
or
lcall
mov
inc
scas
shl
xchg
arpl
mov
xchg
sbb
test
pop
jle
pop
insb
mov
je
adc
adc
or
sahf
loopne
xchg
sbb
mov
mov
pop
xor
in
bound
mov
in
mov
fwait
stos
xor
outsl
mov
push
icebp
sub
and
jge
ret
icebp
adc
push
mov
movsl
add
divb
pop
test
jl
xchg
jnp
stos
jmp
out
andb
adc
inc
imul
jne
mov
xchg
mov
movhps
jbe
mov
loop
ja
lea
and
in
fcmovnbe
pop
std
adc
roll
pop
jmp
inc
push
sbb
push
xchg
lds
sub
mov
repnz
mov
loop
mov
xor
out
movsb
add
mov
ja
xchg
pushf
es
dec
xchg
jne
push
xlat
les
cmp
push
dec
mov
out
inc
pop
mov
iret
add
rcpps
in
jp
test
in
fbld
mov
jnp
dec
test
hlt
data16
xchg
add
xchg
cwtl
or
jns
iret
icebp
sti
iret
pop
inc
je
lds
push
jne
mov
hlt
mov
push
stos
fs
in
xchg
lods
cmpsl
and
les
loope
imul
jmp
mov
mov
mov
rcll
cmpsl
mov
jl
and
dec
cwtl
enter
sbb
sub
enterw
adcl
fdivrs
call
fimull
pop
xchg
xor
rcrb
mov
insl
pop
or
or
scas
ror
cmpsb
lret
cmpsl
dec
or
push
dec
pusha
notl
lahf
leave
and
ficomps
pusha
lea
inc
sbb
test
and
pop
lret
xor
test
icebp
push
lret
dec
jge
add
lcall
in
or
xchg
cmp
movb
mov
or
inc
mulb
fisubl
call
and
jecxz
pop
lea
and
scas
cmpsb
fisubs
sbb
enter
movsl
hlt
xchg
inc
ljmp
xchg
mov
scas
push
repz
adc
mov
mov
mov
enter
mov
leave
setno
cmp
lcall
out
inc
test
jecxz
lret
ret
not
inc
out
sbb
sbb
mov
ds
mov
inc
je
mov
xchg
inc
lret
sbb
xchg
orl
xor
adc
pop
push
stc
jne
mov
ret
fnstsw
jmp
or
xchg
push
stc
fs
xchg
xor
movsl
mov
bound
fidivrl
push
mov
push
ret
test
jge
or
fdivrl
or
mov
stos
ficoms
or
and
imul
xor
sbb
inc
shrb
jle
aaa
testl
stc
lods
mov
pop
dec
inc
xchg
dec
dec
pop
lods
xor
ss
push
dec
fidivrs
test
pop
fiadds
cmp
and
jne
pop
enter
repz
dec
ror
and
jb
mov
mov
jmp
shrl
loopne
idivb
aaa
jbe
xchg
fimuls
push
jb
push
push
lea
je
mov
sub
test
inc
xchg
test
mov
js
mov
mov
inc
push
jnp,pn
sarb
lcall
sahf
mov
cmc
jb
iret
push
cld
call
ret
in
stos
push
ja
adc
xchg
push
dec
rolb
lret
push
fcmovnu
xchg
xorb
push
and
xor
xor
fdivl
add
lcall
sub
cmp
jge
arpl
cmp
aaa
jl
je
xor
inc
jno
cmpsb
sub
sbb
push
add
std
mov
xchg
aam
cmp
loop
mov
adc
out
or
loope
inc
push
or
repz
mov
push
dec
jle
adcl
insb
xchg
add
dec
xchg
mov
mov
sbb
outsb
imul
push
cmp
enterw
jge
jp
out
popf
decb
and
push
mov
pop
jb
pop
mov
mov
test
mov
out
inc
sub
add
xchg
orb
and
ficompl
cmpsb
add
rcll
in
fmull
inc
stc
cmc
pop
cmp
mov
xor
test
dec
aas
fdivs
jbe
mov
sbb
cmp
es
inc
pop
fs
xor
mov
leave
pop
lahf
sbb
mov
add
mov
test
aad
or
lret
sahf
mov
dec
xchg
lock
push
sahf
aad
mov
cli
aad
inc
dec
jo
xchg
lea
test
fwait
adc
xchg
mov
repnz
dec
xor
lods
outsl
fsubs
inc
testb
push
les
add
push
insb
out
dec
add
hlt
je
repnz
xor
push
sbb
test
jg
or
add
rorb
fs
popa
in
hlt
xor
mov
sbbl
ret
icebp
fcmovne
mov
stc
int3
sbb
mov
mov
ljmp
jge
and
mov
lods
stos
ljmp
in
test
sbb
fcoml
cs
in
stos
pop
inc
leave
and
push
lret
int
popf
sti
jns
negb
and
jo
mov
in
ret
cmp
push
scas
sub
fcoms
stos
pop
push
outsb
inc
sub
out
mov
test
stc
in
or
mov
dec
shlb
push
lahf
ret
ret
mov
pop
andb
push
sub
dec
jo
cmp
test
dec
lret
xchg
jns
test
inc
insb
mov
push
ss
mov
sub
jo
mov
popf
call
pusha
loope
dec
inc
hlt
fwait
aas
sub
and
dec
stc
mov
nop
mov
mov
negb
es
testl
loope
push
aad
out
add
fs
jnp
jo
ficoms
leave
sub
cli
fisubrl
mov
jo
jp
cmp
daa
xor
cltd
movsb
data16
loope
cmp
inc
mov
movsb
push
mov
dec
mov
or
mov
jno
cmp
mov
add
into
inc
mov
xor
fbstp
sahf
loopne
out
pop
iret
pushf
cltd
out
daa
jb
mov
mov
orb
enter
stc
stos
xchg
add
push
aam
test
shrb
insl
es
cmp
cmp
and
pusha
lcall
mov
cmc
push
mov
inc
rolb
dec
fcoml
ja
subb
subb
sarb
fs
nop
mov
cmp
test
mov
inc
add
loopne
outsl
pop
pop
jle
rolb
inc
pop
sbb
idivl
mov
test
sbb
hlt
push
repnz
sbb
out
xchg
mov
std
sbb
push
lds
popf
andb
or
or
out
and
jo
cmp
xchg
das
scas
arpl
xor
sbb
repz
push
shl
mov
jecxz
out
or
repnz
outsb
xor
cmc
pop
pop
pop
push
jno
lcall
dec
in
mov
mov
fs
push
orl
imul
mov
clc
ss
out
pop
xlat
enter
or
jecxz
pop
fdivrs
outsl
inc
sti
ret
mov
mov
mov
lods
loop
mov
js
sbb
clc
mov
xchg
into
mov
push
push
mov
push
cmp
adc
std
xchg
int3
call
scas
mov
pop
push
sub
cmpsb
out
or
xor
ds
ljmp
shll
les
enter
aas
sbb
or
test
mov
out
push
and
sti
sti
aad
jbe
push
sub
jns
push
ja
addr16
or
and
addr16
shll
add
push
cwtl
clc
nop
cmp
lcall
lds
aaa
cmc
push
stos
or
xor
mov
pop
or
or
insl
mov
sbb
cmc
shlb
adc
aas
xchg
push
xlat
sub
fsubrp
push
xchg
cli
out
in
and
sbb
enter
jge
sbb
mov
xor
cli
sbb
test
jp
or
lea
sub
sbb
adc
jmp
mov
icebp
adc
mov
pop
mov
jge
in
test
loope
lock
out
cmp
mov
jmp
pop
fdivs
popf
adc
add
lea
mov
cmp
mov
jne
divb
inc
xchg
jg
hlt
test
pop
cmpsl
xor
rcl
add
call
rol
push
mov
xor
cmpsb
js
mov
push
ds
insb
jl
in
mov
push
inc
ret
andl
pop
sub
and
add
lret
daa
and
cmp
mov
xor
mov
pop
and
or
add
es
mov
iret
mov
mov
cli
fs
in
or
jge
stc
shl
dec
xchg
or
cli
cmp
sub
and
mov
mov
and
adc
pop
or
xchg
sbb
sbb
hlt
adc
outsb
in
dec
addr16
in
inc
dec
push
mov
jns
push
jo
or
xchg
ja
mov
insb
adc
sub
and
arpl
cld
pop
shrl
jmp
cwtl
shl
cmpsl
cli
inc
cld
cld
aas
rolb
pushf
test
rcrl
inc
jecxz
mov
xchg
push
mov
sbb
int
adc
cli
fdiv
mov
daa
xchg
inc
repz
push
test
out
add
es
xchg
xor
mov
adcb
jle,pt
popf
adc
aad
rolb
clc
iret
mov
or
and
adc
arpl
lods
or
push
out
push
stc
xchg
mov
and
or
xchg
rcll
xchg
aad
rorl
cmp
xchg
into
scas
pop
xor
lods
stos
jg
dec
insb
pop
aam
push
pop
les
fstpl
aam
call
in
mov
bound
xor
dec
movb
cmp
adc
bound
fiadds
xchg
xchg
xchg
adc
dec
rcrb
fcom
push
bound
icebp
push
adc
sub
loopnew
loop
mov
lea
and
mov
fwait
out
enter
xchg
inc
in
xchg
inc
dec
dec
jmp
xchg
fdivp
icebp
lds
xor
lahf
jp
stc
cld
repnz
movsl
std
xchg
cmp
jg
or
cmp
jp
add
je
mov
sbb
push
movsl
fstsw
ljmp
xchg
jo
int3
pop
jns
shll
jp
adc
pop
fld1
push
xor
in
mov
cmpsl
push
jno
rcrb
mov
dec
std
and
add
add
insl
sbb
push
fwait
or
jns
fadd
scas
push
pop
adc
pop
in
or
ret
addb
push
stos
insb
fisttpl
scas
xchg
loope
pop
insl
push
pop
mov
jmp
cmp
jne
popa
pop
iret
icebp
add
sub
mov
dec
add
xor
sbb
jl
mov
ret
pop
jns
adcl
push
inc
in
enter
addr16
sub
and
loop
jl
data16
xchg
int
jle
push
jns
jno
cmp
test
inc
inc
add
sbb
hlt
in
aad
notb
out
xor
mov
jmp
fldcw
sbb
mov
and
fimull
in
daa
out
dec
test
cmpsb
lcall
shrb
jge
pop
jmp
scas
into
adc
gs
mov
cmp
and
pop
leave
adc
adc
fidivrl
or
rorl
xchg
lods
cmp
adc
arpl
inc
shr
xlat
sub
pop
rcrb
cmp
cld
lret
pop
jno
mov
ss
xor
lahf
hlt
jbe
pop
addr16
out
popf
jmp
loop
js
mov
loopne
ja
cmp
sbb
es
adc
ljmp
outsl
in
loop
std
pop
add
adcb
scas
xorl
jns
or
or
mov
jge
ljmp
xor
mov
jb
jb
xchg
inc
je
xor
in
loope
fisttpll
sub
and
xor
sbb
lcall
inc
push
nop
mov
ljmp
jno
adc
or
xchg
notb
aad
sti
jne
lcall
xchg
shll
or
insl
jge
jmp
sbb
sub
mov
scas
into
dec
fadd
sub
sbb
add
cmp
leave
hlt
addr16
xchg
fsincos
lcall
int3
mov
fcompl
push
mov
mull
mov
dec
test
test
mov
in
inc
jmp
lock
push
cltd
sbb
and
mov
mov
add
mov
lcall
dec
mov
aam
add
mov
hlt
mov
dec
in
xchg
dec
xchg
inc
pop
ss
mov
stos
mov
pop
test
outsl
stc
sbb
addb
sub
les
jno
mov
push
jp
enter
and
test
mov
add
push
inc
adc
sub
mov
push
pop
inc
and
repz
inc
lock
cmpsl
mov
xlat
cmpsl
pop
imul
divb
pop
xchg
rorb
das
in
cmp
loop
in
pop
jb
iret
rcll
sbb
dec
jno
cmp
fdivrs
mov
pop
comiss
sub
push
mov
call
pop
loopne
jno
fwait
or
push
clc
stc
mov
lcall
sbb
into
shlb
les
adc
inc
or
test
arpl
or
roll
loop
out
icebp
mov
daa
icebp
shll
ds
dec
push
jb
add
inc
sarl
fldcw
ret
jmp
into
imul
and
test
inc
add
fsubr
mov
push
in
xchg
add
shll
sub
std
div
adc
movsl
inc
jnp
pushf
jnp
sub
cmpl
sbb
jmp
xchg
std
inc
jp
mov
int
or
rcll
loop
test
aam
and
pop
mov
lds
push
inc
xor
ret
dec
or
jb
mov
ret
pop
call
add
or
adc
fsub
out
xor
dec
daa
or
out
gs
ja
ret
int
cld
call
xor
jbe
call
shll
add
adcl
pop
inc
cli
sbb
data16
push
mov
sahf
adc
scas
xlat
out
inc
dec
lds
loope
cmp
testl
jge
std
lret
mov
push
jle
cmc
notl
cmp
cmp
mov
add
outsb
jg
daa
mov
sbb
push
popf
mov
in
jp
clc
cs
int3
sbb
and
mov
adc
or
jnp
mov
xchg
sub
push
push
dec
jno
hlt
andl
lock
jae
lmsw
or
sbb
repz
andl
mov
lahf
mov
inc
rclb
pusha
bound
cmpsb
adc
mov
dec
sub
pop
rolb
loope
faddl
shrb
adc
xchg
jmp
sar
pop
lds
aas
pop
jnp
pop
inc
jecxz
xor
outsl
sub
lods
popa
loopne
xchg
adc
mov
mov
jo
xchg
cmp
dec
cltd
pop
js
and
dec
jge
cmp
inc
or
adc
mov
sub
rcll
andb
int3
lock
xchg
pusha
pop
pop
shll
sub
ljmp
lods
sbb
mov
jp
notb
push
mov
fistl
dec
or
or
cmp
sub
cld
popa
cmpsl
inc
inc
adc
push
sar
shlb
daa
jno
mov
ljmp
aaa
push
xor
std
cmc
jno
push
neg
pusha
mov
popl
hlt
mov
stos
mov
pop
dec
std
cmpb
pop
xchg
inc
jbe
pop
pushw
cmp
inc
mov
outsb
jmp
rorb
mov
mov
and
sbb
jge
nop
out
shll
stos
lret
jae
cli
test
sti
fstl
out
mov
cmp
cltd
sbb
pop
or
mov
jno
into
dec
mov
mov
inc
mov
ds
daa
fadd
test
sbbb
pop
ja
mov
mov
mov
adc
ret
dec
lods
mov
scas
aam
jmp
pop
sub
cmc
cli
stc
add
add
xor
movsb
mov
shll
jbe
push
pop
dec
xor
push
enter
dec
mov
xchg
cmpsb
pop
sub
mov
fdivrs
insl
pop
adc
adc
sub
ljmp
xchg
dec
out
xor
fists
push
xor
dec
testl
cli
pop
xchg
add
nop
add
push
pop
out
or
je
mov
push
stos
push
fstps
sahf
sub
lods
pushl
mov
pushf
adcl
and
sub
mov
inc
cwtl
mov
mov
movsl
or
xchg
imul
xchg
push
xor
int3
std
dec
push
enter
xchg
lea
cwtl
dec
jle
shll
dec
add
add
sub
mov
movsl
cmpsl
adc
unpcklps
pop
js
icebp
mov
mov
mov
leave
dec
repz
sti
cmpsb
arpl
scas
push
cmp
fwait
in
mov
ja
lahf
cmc
std
push
fwait
dec
xchg
aam
outsb
mov
xchg
dec
dec
fcmovnb
loopne
cltd
inc
jnp
cmc
lods
or
ret
mov
loopne
notrack
pushf
mov
add
imul
in
mov
lock
lea
pop
cmpb
ficoms
adc
and
mov
jecxz
xor
in
lods
push
stos
and
adc
lock
or
rclb
movsl
js
stos
or
lcall
js
xor
out
enter
add
gs
mov
wbinvd
roll
je
mov
cmp
mov
push
and
adc
dec
pusha
shll
cmc
sub
cli
lock
out
idivl
or
fldt
out
jle
mov
adc
push
xor
mov
pop
arpl
je
push
jp
lret
or
dec
fwait
aas
or
pop
out
jle
subl
add
inc
mov
jnp
sub
jecxz
pop
pusha
dec
sahf
aad
pop
inc
insl
data16
call
jp
outsb
xchg
push
loop
loopne
rcrb
mov
adc
xor
adcb
iret
dec
lock
jns
pop
mov
mov
into
push
adcb
cmp
mov
push
inc
imul
xchg
sbb
mov
repz
and
cmp
or
adc
inc
mov
push
addl
int
scas
lcall
loop
inc
mov
and
jmp
xor
jecxz
lods
mov
dec
sub
test
push
dec
mov
push
dec
xchg
cld
std
dec
mov
das
lods
lea
jae
dec
jno
ret
cmp
enter
jb
movsl
dec
lret
add
pop
lods
out
pushf
jmp
addr16
push
stc
icebp
stos
dec
and
int3
rcrl
sbbb
adc
test
in
mov
repz
jl
test
aaa
mov
mov
lcall
in
jmp
adc
popf
sbb
shll
lret
loope
pop
inc
frstor
iret
decl
mov
das
loopne
mov
movsl
aad
fidivs
mov
pusha
shlb
adc
inc
insb
adc
dec
cmp
mov
fs
inc
inc
pop
sub
push
fnstenv
mov
and
imul
popf
mov
popa
lock
sub
dec
into
mov
jmp
rorb
jle
aaa
jns
int
dec
mov
jle
scas
outsb
pop
cwtl
jbe
or
mov
jae
test
mov
add
gs
adc
cmp
aad
sbb
mov
dec
arpl
imul
mov
adc
adc
mov
mov
jnp
dec
fistl
jecxz
outsl
hlt
jne
cmp
xlat
or
sbb
dec
rorl
sbb
mov
add
cs
jbe
push
xchg
push
icebp
jns
pop
and
adc
and
lods
test
lods
das
scas
add
outsl
fucomip
jge
scas
in
inc
aaa
mov
scas
mov
jnp
es
mov
outsl
call
mov
clc
fdivl
xchg
outsl
pop
aas
pushf
sti
ret
fldt
lretw
pop
push
lds
loope
in
hlt
dec
mov
pusha
xchg
pusha
jns
out
push
nop
mov
xchg
mov
push
dec
inc
mov
sbb
stc
in
lcall
xor
sub
mov
mov
shl
dec
cmpsl
mov
inc
roll
mov
sbb
xchg
aam
mov
jecxz
aaa
pop
cmp
iret
in
lock
adc
and
pop
sub
loop
cmpsl
and
xchg
xchg
or
cmp
mov
adc
cmp
jg
je
pop
cmp
ds
and
add
ret
shlb
in
sbb
xlat
in
imul
pop
jo
sar
fwait
cmc
lea
mov
movsb
mov
mov
imul
jns
pop
icebp
push
imul
or
into
push
aaa
icebp
aas
adc
ret
fdivrs
add
ss
mov
jmp
mov
pop
nop
icebp
mov
cmpsl
jg
lret
sbb
in
pop
mov
dec
popa
jecxz
repz
and
insb
xor
je
faddp
xor
test
lods
enter
cmp
mov
pop
xchg
sub
xchg
int3
hlt
dec
test
in
repnz
cld
ficoms
lods
and
inc
sub
cmp
repz
mov
xchg
push
dec
stos
mov
push
pop
sub
xchg
dec
push
sub
push
lock
adc
fs
sti
imul
call
xor
sahf
aas
xchg
iret
ret
ret
inc
mov
mov
sub
das
fcomi
pop
sbb
loopne
pop
mov
adc
jle
jle
inc
nop
mov
fwait
adc
movsl
jbe
and
xor
test
out
dec
stc
jmp
cwtl
jno
inc
rorl
daa
out
inc
shlb
ret
jno
pop
pushf
add
shrb
and
cmp
pusha
ja
int3
aad
adc
dec
sahf
cmp
push
ja
mov
sub
xor
xchg
andb
pusha
cmpsl
outsb
jne
rorl
add
inc
ss
aaa
xor
adc
rcll
pop
mov
sub
mov
cli
xchg
pop
and
xlat
lods
lods
inc
jbe
jg
xor
cmp
lock
dec
fwait
push
add
mov
lret
inc
adc
mov
call
mov
xchg
adc
jns
movsb
inc
add
and
pop
xchg
push
arpl
repz
push
cmp
call
xlat
add
xchg
clc
mov
dec
dec
mov
jg
out
lea
jne
dec
xlat
xchg
rcll
int3
lret
and
clc
cmp
cmpsl
stc
lcall
mov
movsl
filds
sbb
and
sbb
rcll
cmc
mov
or
cld
add
jge
nop
jle
add
icebp
xor
jg
mov
xor
jo
insl
xor
xchg
push
and
stos
push
lods
mov
mov
imul
cmpsb
enter
ja
loopne
stos
cmp
pop
or
je
jne
mov
les
mov
jle
mov
outsb
ret
cmp
sub
sbb
xlat
addr16
mov
cmp
iret
jne
dec
dec
ret
jno
add
in
bound
frstor
sahf
add
lock
xchg
jo
test
idivl
out
pop
mov
push
icebp
popf
push
mov
dec
push
jge
adc
ja
leave
jmp
cli
sub
mov
scas
das
mov
sti
mov
adc
ret
add
cmp
shrb
mov
adc
sbb
adc
sub
mov
add
popa
cltd
mov
mov
test
jle
popa
movsb
push
mov
iret
cmp
sahf
xor
mov
sbb
lods
stc
jns
mov
and
dec
ljmp
xor
push
dec
lahf
dec
push
repnz
test
adcl
test
insb
dec
in
outsl
jecxz
xchg
ret
clc
popa
xchg
enter
cmpsb
movsl
imulb
dec
pushf
rorb
shl
mov
pop
push
fadd
das
jae
cmp
test
mov
mov
bound
lret
pop
aam
sarl
test
rclb
or
inc
and
mov
xor
in
mulb
outsb
test
mov
clc
shll
sub
xchg
mov
sub
jp,pn
xor
call
adc
rcll
negb
mov
je
iret
cs
add
mov
ret
sub
pop
ret
cmp
jns
mov
mov
or
dec
mov
push
ret
xchg
push
gs
ret
cmp
inc
fsubr
fs
imul
clc
movsb
pop
pop
push
add
xor
add
stc
pop
mov
loope
loop
stos
pop
sbb
inc
xor
add
and
adc
push
pop
sti
xchg
add
lods
aam
jecxz
push
lea
insl
push
push
stos
sbb
mov
ja
dec
xor
adc
cmp
xor
mov
test
mov
or
fwait
inc
clc
cmp
cli
movsb
sub
or
cli
cmp
mov
insl
scas
jmp
js
xlat
pop
pop
jnp
add
cltd
cmpsb
mov
adc
mov
aad
out
jecxz
jecxz
imul
dec
cmp
mov
lock
lea
push
aaa
inc
loopne
stos
test
andb
int3
dec
shlb
jg
mov
sbbl
and
cmp
cwtl
xlat
push
xlat
inc
xchg
ljmp
pushf
les
dec
lahf
and
ja
sar
cmp
call
xchg
mov
sub
cmp
loop
inc
jg
shlb
ret
xorb
jno
or
cwtl
xor
leave
pop
outsb
ss
dec
out
fs
sahf
dec
cmp
int3
int3
shll
negb
scas
cmp
fstps
jne
enter
loopne
stc
imul
insb
mov
in
push
cmpsb
sbb
test
jecxz
in
sbb
je
xor
orl
mov
sub
xorl
dec
dec
stc
out
add
pop
mov
bound
addb
mov
arpl
aas
jno
xor
jmp
dec
mov
pop
jle
adc
push
dec
imul
sbb
jle
pop
movsb
stos
jle
pop
call
ljmp
push
test
arpl
mov
lea
dec
adc
popf
or
repnz
mov
es
js
jl
adc
outsl
sbbl
sub
lods
fsubr
stc
jo
dec
add
sbb
std
or
xchg
cmp
stos
xchg
fldt
out
movsl
jmp
mov
cld
hlt
xlat
mov
xchg
nop
cmp
add
clc
bound
cmp
aaa
enter
gs
xor
mov
pop
or
inc
xor
rclb
pop
mov
jmp
cmp
scas
push
arpl
sbb
pop
cmp
jecxz
arpl
cmp
cmp
mov
mov
adc
scas
loope
mov
orl
mov
aas
pop
nop
cmp
add
aam
shlb
bound
xorl
add
jp
jae
jbe
mov
repnz
pop
and
adc
jmp
inc
add
lea
adc
sahf
adc
pop
mov
jl
or
fdivrl
adc
dec
fiadds
out
ljmp
incb
push
cli
insl
pop
test
fs
insb
jmp
sub
lods
faddl
or
pushf
mov
rolb
sbb
pop
mov
lea
push
cltd
mov
test
mov
mov
fldt
enter
es
mov
pop
jns
in
jb
dec
xchg
and
loopne
inc
das
std
mov
add
ja
fdivl
xor
call
cwtl
into
repz
fisubs
jne
ja
subb
popa
ljmp
iret
add
insl
push
jns
push
repz
cmc
or
int
mov
daa
dec
mov
and
cmp
sti
add
gs
jae
adc
lret
jb
les
je
popa
rcrb
push
inc
jns
fcomps
test
mov
adc
dec
mov
mov
xor
aaa
xchg
xorb
fwait
call
adc
sub
jmp
push
dec
or
scas
mov
testl
dec
pop
add
xchg
insb
push
je
xlat
shr
das
jbe
scas
shr
scas
xchg
sub
push
lahf
add
mov
cli
stc
mov
pop
jmp
dec
push
fimull
into
scas
inc
lods
loopne
pop
stos
sti
ljmp
xchg
dec
clc
inc
and
adc
xor
addr16
sbb
stos
cmp
out
aaa
cmpsb
shrl
test
add
jge
orl
enter
xlat
je
mov
and
test
roll
or
mov
sub
mov
jle
push
pop
aad
insb
cmp
cmp
aam
rcrb
mov
push
inc
dec
test
jb
mov
mov
xchg
and
cmp
dec
pop
lea
nop
scas
jne
inc
and
jne
pop
int3
rorb
dec
aaa
sbb
pop
push
lods
and
push
mov
js
mov
or
add
push
mov
loop
pop
inc
lods
and
daa
aaa
out
outsb
fidivrl
push
faddl
cld
loope
mov
pushf
dec
mov
in
call
mov
test
rclb
mov
icebp
lods
fildl
cli
mov
xchg
lods
ret
movsl
enter
inc
jp
cltd
sub
cmc
push
clc
cli
xor
xor
enter
imul
cmp
inc
or
ds
mov
dec
outsl
sahf
pop
cs
adc
sub
out
jl
or
out
pushf
scas
push
inc
and
std
push
stc
in
sbb
xlat
loop
xchg
pushl
pop
add
and
pop
popf
addr16
test
pop
push
jmp
pop
mov
dec
jae
mov
scas
ret
or
lods
sbb
push
mov
jae
clc
es
divb
into
lahf
enter
sub
add
packuswb
jge
pop
test
outsl
xor
inc
adc
and
mov
loope
mov
adc
push
hlt
loope
or
xchg
xchg
fcompl
dec
and
pop
in
xor
shrl
stos
rcll
fs
push
je
fdiv
addb
push
xchg
cli
mov
pop
aaa
cmp
mov
arpl
fsub
mov
lcall
js
imul
fcomps
stos
shrb
pushf
mov
inc
mov
insb
repz
repz
dec
hlt
cmp
jl
shlb
andl
pop
dec
pop
push
inc
mov
jae
jl
cmp
xchg
mov
pusha
mov
call
jmp
jecxz
cmp
stc
xor
ljmp
je
stos
mov
test
in
cmp
int
ljmp
xchg
inc
aaa
cld
pushf
add
lahf
cmpsl
xchg
fs
jmp
cwtl
mov
mov
add
mov
das
jle
jns
in
or
insb
lahf
std
add
aam
jns
push
xor
xor
push
adc
pop
cmp
pusha
or
sarl
or
lock
sbb
fcmovnbe
xor
shr
fbstp
lret
ss
xor
sbb
adc
xchg
bound
mov
jae
push
imul
sbb
or
mov
push
stos
int
sbb
pop
inc
out
jp
dec
lret
push
iret
inc
int
jmp
lock
sti
fisubrl
cltd
mov
add
mov
hlt
pushf
push
adc
flds
imul
adc
add
xor
and
cmp
inc
xchg
out
fwait
xchg
lods
jl
imul
test
cmpb
dec
xchg
push
jo
push
jb
hlt
movnti
adc
sbb
cmp
ss
jno
xchg
in
cwtl
dec
mov
fists
enter
lds
fistl
lods
out
das
pop
sub
mov
xchg
sti
xchg
and
ficompl
clc
sets
rcrb
rol
push
imul
incb
and
cmpsl
xor
inc
ret
push
movsb
out
ret
ret
lea
popf
mov
das
das
fmul
rol
inc
push
mov
push
cld
fistl
cld
addr16
arpl
push
sub
shll
xchg
xchg
push
outsl
bound
in
sarb
daa
lahf
lcall
pushf
ljmp
push
mov
fistl
pop
das
or
sbb
sahf
jge
iret
scas
in
or
push
nop
ja
fdivl
sti
sub
inc
sbb
test
das
jae
push
inc
and
pop
inc
lea
xchg
inc
mov
jbe
xchg
fldt
mov
or
in
mov
jmp
cltd
mov
cld
add
inc
es
rcrl
sbb
setbe
add
mov
jp
inc
jmp
popf
aad
xchg
and
pop
and
clc
xor
pop
jl
inc
insb
outsl
outsl
aam
outsl
popa
xor
imul
shrb
mov
jmp
mov
stc
sub
xor
bound
sub
lds
sbb
sbb
shll
divl
insb
mov
cltd
xor
repnz
cltd
negl
out
ss
pop
dec
rol
mov
lock
add
or
or
jne
push
jno
cmp
sub
bound
fs
mov
jae
mov
shl
aas
push
mov
mov
mov
or
xchg
xchg
mov
ljmp
cli
int3
stos
jns
or
mov
xchg
outsl
xor
jmp
mov
in
mov
cmp
xor
pop
push
sti
push
pop
and
mov
js
cld
inc
push
stos
je
daa
aas
aad
mov
ficoml
add
or
shll
and
push
repz
and
in
icebp
and
pusha
dec
mov
push
insb
je
cmp
pushf
pop
xor
mov
mov
in
xchg
mov
negl
jecxz
pop
dec
and
test
or
add
das
jecxz
jno
movsb
cwtl
in
mov
cmp
mov
cwtl
leave
push
xor
bound
jne
xor
adc
mov
into
cwtl
movsb
into
pop
dec
loope
add
cltd
lcall
pop
popf
test
icebp
std
scas
xchg
iret
mov
lcall
jecxz
push
pop
int
aaa
ljmp
imul
mov
or
cmp
cli
jae
fbld
dec
sub
adc
xchg
aam
pop
mov
je
testl
mov
inc
dec
lds
out
stos
fs
es
mov
xor
insb
out
jne
and
mov
ret
or
cmpsl
lahf
xor
adc
stos
loop
aas
outsb
sub
out
xchg
out
mov
push
xlat
fiaddl
cmp
jle
loop
es
xor
jns
jmp
add
mov
pusha
loopne
pop
outsl
lret
adc
mov
cmp
jge
in
sub
out
and
xorb
xor
out
fldenv
es
add
shr
dec
cld
jmp
jne
xor
lock
fisubrs
xchg
xor
and
jge
adc
mov
stc
das
subl
dec
pop
das
pop
sbb
xor
dec
pop
mov
pop
cmp
mov
nop
and
pop
nop
lods
fstps
les
outsl
add
push
xchg
xchg
cmp
xchg
fldt
pop
test
xchg
dec
dec
push
nop
movb
jno
and
outsb
inc
or
cwtl
das
xor
clc
inc
push
xor
push
enter
jge
jo
imul
mov
sbb
mov
hlt
sub
sub
ds
xor
pop
cmp
xor
lods
cld
mov
outsb
sub
and
inc
in
jnp
aaa
es
push
std
mov
or
cli
mov
cmpsb
or
or
mov
pop
sub
inc
ret
in
jb
arpl
xor
jge
add
fpatan
cli
jnp
cli
and
loopne
dec
jno
sub
add
push
pop
sub
cmp
cmpsl
ja
lahf
les
xchg
mov
in
mov
scas
rcrb
xchg
sbb
mov
out
lods
push
punpckhbw
adc
ror
leave
fists
xor
pop
adcl
pop
test
loopne
hlt
imull
dec
sbb
fsubs
fs
clc
lret
aaa
jae
pop
push
rep
popf
jge
call
int3
mov
out
dec
aaa
dec
ret
and
jne
sub
jle
lahf
cmp
jne
jl
add
add
das
xor
pop
mov
inc
std
mov
xchg
loope
dec
xchg
inc
sub
dec
insb
sub
enter
adc
icebp
je
mov
add
shll
add
jmp
pop
lret
jmp
jmp
ss
dec
xor
mov
add
adc
xlat
or
and
jb
test
enter
ror
lahf
and
xchg
adc
fldt
int
jns
and
jl
loop
je
push
sarl
repnz
out
sbb
inc
mov
sbb
in
cmp
out
es
add
sbb
adc
mov
and
lahf
mov
jge
cs
lods
fadd
sti
push
fdivs
scas
jb
stos
iret
xor
sbb
lds
mov
dec
das
push
das
cmp
data16
ret
sbb
xor
int3
scas
xchg
cmpsl
xchg
lea
xchg
xchg
inc
aas
call
mov
jns
jmp
pop
push
adc
mov
mov
ret
xchg
insl
repnz
push
mov
jg
clc
inc
pop
jno
xchg
jae
clc
xchg
andl
add
daa
imul
sub
and
adc
sti
lock
jg
pop
jg
andl
out
js
sub
push
scas
jecxz
mov
mov
inc
sbb
cwtl
movsl
cwtl
not
inc
pop
cmpsb
xor
add
pop
dec
sbb
call
aas
stos
lret
cmc
je
aad
out
aam
repz
dec
add
popf
movsb
loop
pop
mov
inc
and
inc
jns
sbb
inc
inc
xchg
test
pop
nop
fdivrs
lret
sub
testb
mov
lods
push
hlt
aad
sbb
or
sbb
jne
mov
imul
into
xor
cmp
xchg
daa
in
fsubrs
mov
ret
pusha
popa
stos
mov
test
stc
xchg
scas
adc
call
push
ret
cmp
jo
mov
adc
test
not
lods
xor
pop
pusha
xor
in
inc
int3
jge
cmp
repz
jge
cwtl
xchg
push
sbb
mov
push
xchg
stos
rcrb
pop
xchg
hlt
lahf
es
jb
sti
pop
or
test
icebp
and
cli
fwait
scas
notl
rcl
in
lcall
lock
jmp
pusha
enter
daa
mov
push
or
sbb
jnp
clc
sbb
jecxz
test
push
add
push
jno
fiadds
arpl
and
clts
or
jge
jge
in
sbb
push
lea
jno
lods
int
testl
bound
or
lods
cmp
cmpsl
insl
mov
lock
add
cmp
insb
mov
xchg
sbbl
mov
jge
xchg
xchg
fs
pushl
cmc
xchg
cmp
push
clc
or
popl
aam
outsl
sbb
cmpsl
out
sub
std
ret
sbb
sbb
pop
scas
cmp
shlb
xor
pop
xchg
pop
int
scas
rcl
in
rol
lahf
inc
xchg
out
jb
jb
daa
push
loopne
std
out
pop
pop
jns
jo
lahf
pop
repnz
into
or
clc
addl
inc
pop
lds
mov
jb
aas
and
push
jg
sbb
xor
lock
mov
loope
idivb
dec
sbb
cmp
cmp
ljmp
int
mov
clc
mov
scas
mov
or
pop
ja
dec
push
daa
push
icebp
xlat
cli
sub
lahf
inc
mov
out
imulb
mov
push
or
leave
cmpsl
and
jle
adc
jnp
mov
faddl
ja
sub
mov
jb
jecxz
inc
jp
int3
ds
mov
mov
vmread
aam
stc
sub
jl
mov
mov
mov
inc
cmpl
adc
xor
in
and
add
xchg
sbb
mov
into
mov
sub
push
or
xchg
xor
cmp
cltd
jle
push
inc
int
jo
or
mov
sbb
push
mov
leave
cmp
add
aas
mov
fisubl
dec
repz
xor
pop
sub
js
sbb
cmp
cmp
jbe
sbb
mov
ret
pop
fisubs
xchg
cmp
and
cs
jp
repz
pop
std
push
sub
je
loop,pt
loopne
repz
divl
mov
sub
inc
adc
cmp
cltd
outsb
imul
jge
loopne
ja
in
add
frstor
sub
rorl
das
sub
jle
xchg
ficomps
out
enter
cmp
inc
clc
mov
add
pop
mov
pop
ds
data16
pop
stos
mov
mov
or
je
mulb
mov
enter
jecxz
insl
push
cs
aad
or
adc
dec
es
out
dec
rorl
dec
and
push
stos
mov
divl
testl
mov
mov
mov
or
mov
sbb
and
push
jmp
and
repz
sahf
inc
fldlg2
inc
call
mov
cltd
mov
jo
push
das
push
loop
mov
into
jb
xor
or
mov
mov
mov
sbb
xchg
dec
imul
loope
jae
add
mov
iret
push
ja
xor
xlat
repnz
rol
pusha
shll
clc
shll
cmp
aaa
es
ljmp
pop
mov
fdivp
or
adc
aad
pop
loop
les
jo
movsl
mov
aam
pushf
mov
cli
or
outsb
inc
push
xor
xor
popf
or
js
xchg
sbb
jp
orl
mov
es
push
cli
and
cmp
pusha
rorb
xchg
sub
sub
cli
lcall
mov
pop
lods
cld
in
fldt
jno
add
cmpsl
dec
sbb
pop
mov
push
enter
cmp
or
cmp
in
pop
sbb
xchg
jbe
aad
pop
mov
cltd
inc
out
xor
stos
push
cmp
loope
aad
jle
xchg
jns
jae
mov
lods
sarl
add
sbb
dec
cmp
and
sub
out
out
in
pop
jbe
rcr
fnsave
out
loopne
add
out
nop
jne
mov
sbb
iret
cmp
addr16
or
pop
push
push
add
shll
sub
in
pop
insl
cmp
xchg
iret
jbe
ret
std
add
or
and
repz
dec
adc
sbb
xor
xchg
call
out
and
lret
or
mov
adc
xchg
scas
push
pop
dec
mov
mov
notl
mov
scas
insb
lods
test
ret
data16
jne
dec
adc
cmpsb
rcrl
insb
cwtl
xor
aaa
aam
xchg
inc
lret
scas
mov
xchg
adc
pusha
mov
in
test
push
jmp
cld
gs
and
int
xor
pop
stos
and
push
sbb
mov
shll
imul
inc
sub
push
call
ror
hlt
mov
pop
in
mov
xlat
test
dec
loope
xor
inc
fsubr
popa
je
jmp
stos
gs
aam
and
cs
shl
mov
push
ret
jo
incl
add
aam
mov
sub
adc
frstor
dec
stc
push
cmp
aad
ja
mov
in
in
dec
into
jb
aad
push
mov
ret
mov
adc
dec
outsl
out
loope
ret
xor
pop
or
cmp
adcl
jl
cmc
lret
loope
adc
shrb
lret
mov
fwait
and
dec
sub
addr16
or
sub
bound
popa
adc
out
fnsave
addl
jge
frndint
ret
dec
xchg
das
add
push
testb
mov
adc
test
scas
push
add
sahf
mov
jecxz
add
adcl
es
xchg
cmp
loope
add
mov
cwtl
cld
add
mov
int
lahf
imul
sbb
inc
imul
stos
imul
cmp
mov
cmc
mov
sbb
xchg
sbb
sub
add
mov
stc
loop
jp
shl
imul
pop
add
push
subl
cmp
in
add
mov
adc
les
dec
jle
sbb
dec
mov
adc
pop
and
ret
and
divl
jno
dec
aam
mov
sub
stc
or
xor
lock
sbb
adc
clc
pusha
mov
xchg
inc
rclb
pop
xor
sar
popf
das
ljmp
lcall
arpl
dec
mov
mov
dec
outsl
push
movsl
addr16
dec
and
add
daa
xchg
jle
js
sbb
imul
rcrl
push
dec
sub
ftst
push
dec
aam
and
iret
scas
mov
pop
adc
es
mov
jns
push
decl
add
les
fcompl
sub
in
or
mov
and
jecxz
mov
and
dec
in
mov
sub
cld
add
cmp
or
lods
lods
mov
sub
out
jns
or
jns
cltd
xor
lock
sub
sahf
push
pop
adc
dec
inc
mov
movsb
das
xchg
dec
in
jp
xor
jae
jecxz
fldcw
sbb
bound
adc
cmp
xchg
lods
arpl
sub
sbb
dec
rclb
pop
mov
pop
popa
fmull
hlt
mov
stos
int3
or
mov
daa
sub
pop
repnz
aaa
addr16
and
lret
rorb
jp
mov
cmp
add
sbb
adcb
jns
sbb
rcll
dec
xor
sub
stc
out
insl
jne
shrd
outsl
lahf
negl
daa
testb
imull
adc
ss
ljmp
aaa
lods
pop
nop
imul
cmpsl
outsb
ljmp
inc
and
cmp
aas
mov
jecxz
jecxz
cmp
test
mov
jo
and
lret
lds
insl
xor
ret
jle
into
dec
aas
push
shrb
xchg
sub
adcb
das
jno
sbb
sub
pop
mov
jnp
in
scas
cmp
popa
cld
in
out
imul
popf
sub
mov
loope
add
lea
or
dec
mov
dec
leave
lret
ja
xchg
fwait
popa
insb
leave
dec
jb
test
out
mov
dec
push
stos
xchg
or
test
xor
sub
mov
and
roll
mov
fwait
adc
and
add
xor
xor
imul
jno
cmpsb
push
mov
add
cmpsb
mov
dec
clc
add
xchg
xlat
or
or
iret
inc
push
pop
jo
add
fisubrs
lahf
adc
add
or
jbe
sti
xor
out
pop
in
stos
sbb
push
rcll
repz
mov
jecxz
pop
inc
pop
subb
mov
pop
jns
stos
sub
lcall
lret
aam
sbb
mov
jmp
push
or
sub
pavgb
lds
mov
cmp
imul
sub
xchg
sub
adc
inc
jb
push
cmp
fsub
sbb
cmpsl
imul
push
jne
leave
in
mov
ljmp
xor
mov
pop
or
jge
jns
pushf
pop
fsubr
mov
in
mov
dec
insl
push
mov
movsl
aam
add
mov
aam
mov
lods
pop
add
dec
cltd
push
mov
ficompl
inc
sbb
aam
push
jae
in
pop
push
repz
sub
push
scas
out
sub
int3
lea
jnp
icebp
mov
inc
or
and
mov
aam
pop
push
or
push
sub
xchg
and
fs
outsb
xlat
push
dec
cmp
mov
push
loope
add
pop
loopne
stc
or
aas
xor
inc
mov
dec
in
mov
mov
pop
jl
shl
and
jnp
sbb
pop
mov
pop
add
or
xchg
xchg
dec
std
aam
fcomps
mov
jno
sbb
xchg
into
iret
jp
in
mov
lcall
pop
adc
fs
pop
pop
dec
sub
push
fcompl
mov
mov
sbb
ret
lods
cwtl
mov
jns
dec
pop
mov
adc
lahf
adc
and
jbe,pn
xchg
or
popa
roll
ja
sbb
push
out
cmp
xchg
rcrl
cmpsl
hlt
push
loope
mov
jmp
mov
jbe
aas
fiaddl
psubusw
pop
pop
nop
push
cmpsl
or
or
mov
movsb
es
pop
jo
mov
xchg
stos
fstpl
mov
loope
push
jo
dec
xchg
add
inc
loope
push
or
mov
sbb
cld
dec
repnz
insb
daa
push
pop
cwtl
jno
mov
mov
xor
add
fs
fwait
in
rclb
out
mov
jno
movsl
dec
mov
in
sub
mov
inc
inc
inc
pusha
fstpl
jge
repz
push
dec
stos
clc
cmp
cmpsb
mov
pop
int3
daa
mov
dec
push
sbb
mov
orb
sarl
sub
cmp
mov
lahf
mov
test
outsw
inc
lret
popf
ret
out
test
popf
fcoml
popa
sahf
leave
jge
data16
fs
stos
stos
pushf
pop
xlat
orl
jne
jp
into
iret
mov
jg
cld
jg
jge
mov
int
mov
andb
dec
xchg
movsl
add
sbb
mov
mov
pop
cmp
sub
or
mov
pushl
sub
mov
pop
frstor
inc
ljmp
sub
xchg
cmc
jno
aaa
fdiv
outsl
aas
jns
mov
mov
cwtl
out
scas
and
and
ss
jno
adc
insb
cmpsl
sbb
sbb
add
inc
daa
dec
sarb
jb
push
fs
add
xchg
bound
push
inc
adc
xchg
sbb
cmp
ret
mov
sub
mov
push
ja
cmp
fs
xchg
lea
mov
sub
add
lahf
insb
sbb
repnz
mov
lret
jl
push
add
retw
ja
push
mov
lret
jne
repnz
stos
in
cmp
sbb
fists
xchg
or
pop
add
repz
loop
rcll
jle
int
pop
int
bound
sbb
mov
sub
mov
adc
sub
sub
sbb
fnsave
aam
add
adc
scas
push
insb
into
mov
pop
sbb
negl
sub
push
pop
iret
dec
and
push
mov
or
and
inc
mov
xchg
lock
loop
mov
push
data16
jg
call
inc
out
test
sub
jl
cmp
ss
sub
popa
xchg
ret
jne
pop
ret
cmpb
loop
adc
out
or
dec
outsb
jle
jne
negl
jae
xchg
cmpsl
addr16
das
sub
hlt
xchg
inc
imul
pop
aam
cwtl
sbb
lret
xor
add
frstor
and
dec
out
adc
in
in
lret
sub
mov
sub
push
cmp
xor
pop
push
cmp
mov
xchg
in
mov
imul
cmpsl
outsl
inc
and
mov
jecxz
xlat
dec
pop
in
add
dec
mov
jbe
pop
movsl
popf
push
mov
pusha
or
xor
roll
dec
fadds
add
jnp
fldpi
in
pusha
lret
dec
jmp
mov
clc
xchg
in
jge
rcrb
inc
pop
sub
jp
lret
jnp
mov
push
ss
inc
pushl
inc
or
fidivrl
fld
rcl
bnd
xor
cmpsl
inc
push
repz
cmpsl
cwtl
loopne
cwtl
dec
add
daa
pop
lcall
adc
cld
js
into
jae
test
lcall
jno
pop
jns
loop
push
sbbl
add
mov
je
mov
sahf
es
mov
xchg
fistps
lret
sub
push
or
jb
xchg
mov
xchg
leave
outsl
mov
cmp
leave
cld
adc
pop
ljmp
lret
or
adc
sub
sub
imul
pop
inc
mov
sbb
or
test
mov
xor
mov
push
xchg
int3
cwtl
adcb
lods
mov
push
ds
add
adc
sahf
sbb
test
aas
loop
mov
xor
add
jge
in
sub
inc
out
fucomp
push
and
push
mov
sti
xor
mov
rcl
adc
or
mov
mov
shufps
push
aas
cmp
lahf
or
arpl
testb
mov
push
outsb
mov
aam
xor
cmp
jae
xchg
inc
or
cmp
mov
cld
or
and
mov
sbb
pop
hlt
js
sbb
push
mov
xchg
stos
mov
push
jo
insb
mov
jne
dec
hlt
sub
mov
xor
insb
sbb
jae
adc
cli
jmp
js
sub
push
movsb
lea
into
or
mov
sbbb
insb
or
or
or
leave
push
or
outsb
mov
jecxz
lcall
test
jbe
xchg
aaa
fisubrl
adc
mov
or
mov
subb
test
jecxz
js
arpl
xor
bound
inc
xorb
int3
std
sub
or
cmc
fstps
rcll
mov
loopne
sub
push
loope
xchg
and
out
xchg
out
aaa
xor
inc
into
fucomip
or
push
and
iret
js
in
hlt
pop
fs
sti
cmp
int
xchg
icebp
ret
lea
daa
divl
push
add
cmpsb
int
arpl
sahf
lock
mull
cmp
pop
mov
fxch
and
inc
mov
jecxz
test
xchg
adc
lods
shl
scas
adc
fisttpl
lret
pop
fadds
sub
pop
cltd
mov
popf
movsb
cwtl
adc
mov
inc
icebp
popf
sbb
test
jecxz
sub
ljmp
sarl
std
rorl
dec
and
pop
xor
sub
pop
inc
fdivrl
sti
mov
push
cwtl
cmp
xchg
jg
aaa
cltd
jne
js
or
out
ret
orl
add
aas
repz
pop
jg
cmpsb
icebp
iret
cld
mov
mov
dec
jg
in
mov
shll
sti
push
int
mov
addr16
inc
ret
test
das
ja
inc
test
cmc
or
push
jp
mov
sahf
push
sub
mov
scas
pusha
push
inc
push
lods
pop
mov
mov
lahf
cltd
cmp
pop
imul
inc
cs
and
lcall
sarb
push
pusha
sarl
pop
jmp
inc
xor
ds
call
xchg
xchg
inc
jo
sti
leave
mov
pop
mov
andb
pushf
pop
add
xor
cmp
inc
dec
negb
daa
into
push
jae
mov
fcmovb
leave
out
inc
mov
pop
nop
fsubs
push
out
fldl
sbb
xorl
ds
dec
xchg
shll
or
mov
hlt
stc
xor
popf
test
ds
scas
fs
test
adc
or
mov
mov
insb
push
push
pop
xchg
dec
jo
lcall
pop
leave
mov
pop
xlat
rcrb
pop
shlb
mov
test
push
dec
xor
iret
push
pop
xchg
das
insl
sub
lret
xchg
aad
popf
leave
stc
lds
inc
in
je
into
and
mov
sbb
add
adc
mov
or
into
sti
jmp
sub
into
mov
dec
xorb
pushf
xchg
or
pushf
and
mov
mov
fimull
fildl
imul
pop
adc
sub
xchg
adc
outsb
jb
cwtl
or
inc
stc
sahf
sub
xchg
xor
mov
call
scas
testb
dec
notl
pushf
nop
das
xchg
mov
movsl
aas
iret
xchg
test
or
or
pop
outsl
jbe
test
xor
stc
iret
outsl
jno,pt
test
jne
lods
call
mov
jecxz
aaa
dec
dec
js
dec
repnz
xor
sbb
push
int
xchg
ficompl
lret
lods
xchg
clc
pusha
cmp
cmp
sbb
xor
in
andb
aam
and
sarb
add
cmpsl
dec
or
stc
lock
adc
xchg
jo
loopne
roll
ficoms
push
aam
push
loope
fwait
movsb
sbb
push
inc
adc
mov
lds
xchg
fwait
js
pusha
push
es
pop
jle
sarb
pop
and
fstpt
rcrl
dec
dec
sub
stos
mov
leave
repz
sbb
jbe
les
rcrl
push
jle
ret
std
mov
and
outsb
loope
jns
int
xchg
rcrb
stc
mov
xorl
sub
xchg
adc
dec
sahf
repz
pop
and
popa
decl
aam
cli
fwait
jb
es
hlt
fs
fildll
dec
xchg
add
rol
push
adc
inc
cmp
imul
gs
sub
jns
lahf
cmc
cmp
sbbb
dec
es
jb
in
mov
daa
loop
xchg
cltd
movsb
or
sub
jl
sub
add
adc
fwait
les
or
insb
xchg
adc
and
repz
fcomi
ljmp
pop
gs
and
jns
pop
sbb
or
inc
out
inc
ss
stos
mov
je
pop
adc
in
cmpb
sub
or
scas
lock
jns
push
ss
cmp
sub
ds
rclb
dec
push
ret
sti
jnp
or
jg
insl
add
mov
adc
iret
fwait
or
int3
sbb
mov
cmp
jbe
cmp
cltd
aad
daa
cmc
rcr
bound
ljmp
rcrb
mov
mov
dec
inc
dec
testl
stos
andl
sbb
cmp
inc
je
push
cmp
stos
out
or
imul
sahf
pop
lock
or
daa
xor
popa
test
mov
jp
in
hlt
mov
call
fistps
mov
mov
sahf
xchg
mov
out
xor
xor
inc
loopne
push
sub
shr
cwtl
mov
sub
shl
iret
int
testl
or
mov
and
dec
sahf
push
out
push
mov
fcoms
lea
outsl
jge
loopne
sti
inc
rorl
fsubp
adc
out
movl
sbb
pop
mov
ds
xor
aas
xchg
in
cmpsl
nop
mov
orb
bound
mov
mov
inc
xlat
add
jno
popa
add
or
paddsw
dec
mov
push
jge
iret
cld
int
or
mov
adc
mov
sbb
fwait
push
lret
das
inc
sbb
fdivl
push
sbb
mov
pop
or
dec
outsb
test
dec
loopne
dec
ficoms
inc
mov
push
popa
sub
test
pop
imul
jg
shl
push
jge
jnp
sbb
ret
fisubs
pop
lret
sub
mov
js
push
pop
pusha
jae
fimuls
std
loope
jge
insb
mov
negb
dec
shl
sbb
call
outsb
fcoml
pop
and
jo
or
cwtl
nop
ds
xor
and
xor
mov
scas
sahf
icebp
push
dec
cltd
mov
movsb
xlat
jo
testl
inc
push
shrl
nop
es
pop
fcmovne
std
jno
imul
or
cwtl
cmp
call
push
test
movsl
ja
mov
ror
pop
jecxz
data16
dec
push
cld
fs
ljmp
repnz
loopne
xchg
xchg
adc
mov
pusha
mov
fcmovne
jne
roll
pop
insl
shlb
imul
test
cld
inc
jo
ja
pusha
xorb
sub
adc
jb
jne
mov
dec
xchg
xchg
or
add
or
in
jb
in
push
aas
sub
lret
xchg
add
call
idivb
sbb
push
call
push
jno
or
lods
sti
cld
fistl
push
mov
jmp
or
das
sub
cs
outsb
inc
jnp
sbb
repz
sbb
mov
push
sub
out
and
add
push
xchg
jno
push
ds
xor
mov
mov
push
scas
jbe
aad
cmc
mov
dec
ret
sti
test
js
add
icebp
cmp
repz
jno
or
xchg
scas
dec
xchg
pop
pop
lret
cmp
jmp
jl
and
add
sbb
lock
shlb
in
inc
add
pushf
outsl
aad
adc
mov
cmp
les
xchg
mov
int
int3
sub
cltd
mov
pop
pop
int3
or
fucomip
push
nop
xchg
movsb
jmp
repz
mov
aam
scas
dec
dec
sub
push
inc
loop
loopne
ficoms
insb
mov
pop
fadds
and
push
jg
jns
xlat
andl
xchg
stos
jmp
sub
test
ds
inc
mov
inc
cmp
daa
test
pushf
insl
roll
cmp
fnstenv
insb
ljmp
or
into
sti
lds
cmp
jge
inc
pop
adc
insb
mov
xchg
adc
cmpsl
or
mov
imul
int3
inc
push
pop
pop
xchg
and
mov
fcmovnu
cmp
mov
sub
in
pop
shrb
aam
mov
and
stos
leave
ret
push
jb
mov
pusha
es
ret
add
lret
jp
or
enter
pushf
sbb
mov
fists
or
or
in
jo
add
test
pop
add
popa
add
add
aas
inc
repnz
mov
push
jp
adcl
lahf
pushf
xchg
fnstenv
out
pop
sub
mov
cmp
adc
cmp
out
mov
out
addr16
cmpsb
or
cmp
jp
xchg
iret
adc
mov
or
in
dec
pop
inc
pop
movsl
in
icebp
jns
daa
xor
push
and
repz
inc
and
iret
sahf
sub
loopne
xchg
hlt
push
inc
fs
jl
or
and
mov
xor
xor
xchg
into
fmull
sbb
adc
sahf
sbb
mov
cmp
mov
or
shr
pusha
inc
mov
icebp
dec
sbb
fsubp
sbb
xchg
aaa
in
fnstcw
cld
sbb
dec
repz
inc
jo
gs
into
dec
shrb
xchg
sbb
and
and
nop
out
stos
out
loop
mov
sub
in
or
dec
icebp
loope
pop
xchg
sbb
outsb
test
test
dec
rcr
aad
scas
or
out
mov
and
jbe
dec
push
hlt
inc
pop
and
push
into
in
cltd
pop
pop
sbb
int
cmc
rcrb
mov
out
jp
in
aaa
push
out
scas
dec
cltd
cld
lods
mov
stc
adcl
jno
or
andl
cmpsb
fs
mov
or
mov
into
call
pop
rcrb
pop
shrl
out
cmpsb
mov
inc
in
push
xor
scas
hlt
iret
or
roll
xlat
sbb
mov
add
push
xchg
sbb
add
shlb
jns
fisubrl
push
xchg
mov
stos
sbb
outsb
fwait
adc
sahf
jmp
xlat
or
ficompl
mov
push
addl
xchg
das
push
loop
mov
fimuls
jmp
mov
sti
loopne
sbb
sbb
pop
sub
sub
mov
cmp
cmp
fcompl
push
and
push
xor
lcall
fstl
rorl
pop
rep
cltd
jp
push
mov
mov
lods
push
and
jecxz
repnz
rolb
lods
es
push
xchg
inc
cmc
or
cmp
pop
push
and
sub
mov
fcomp
out
xchg
hlt
mov
clc
in
hlt
loopne
mov
xchg
enter
sbb
inc
adc
mov
cld
fbstp
inc
jle
enter
popa
mov
push
verw
movsb
rol
jo
add
xchg
mov
add
inc
fbld
cwtl
popf
mov
push
jg
dec
movsb
cwtl
mov
lock
sub
notl
mov
push
cmpl
ljmp
ret
pop
lcall
insl
lods
in
daa
push
lods
ret
ja
fcmovb
push
ss
jne
sub
and
cld
ljmp
ret
cwtl
lods
movb
inc
iret
in
imul
push
adcl
mov
jns
mov
jmp
cmc
and
mov
stc
and
inc
aam
lds
add
inc
jmp
rol
cmp
fcmovu
sub
dec
push
xlat
int3
dec
push
mov
xchg
sub
mov
push
cmc
addb
jne
mov
stos
jecxz
or
cld
into
jmp
adc
fildll
out
mov
sbb
mov
jnp
aaa
ror
shrb
push
or
inc
shrl
icebp
test
outsl
adcb
aas
cli
xchg
es
dec
je
insl
inc
xchg
pop
jb
add
cmc
xchg
hlt
divl
jns
fidivrl
jl
in
lret
movsb
and
xor
inc
jl
loop
aam
cmp
xchg
mov
mov
rol
bound
stos
add
mov
ficoms
sub
xlat
xor
cmpsb
mov
test
shr
lock
shrl
in
inc
pop
pushf
cmp
fists
jl
sbb
lds
xchg
sbb
jo
fsubl
jnp
pop
xor
mov
mov
cmp
loopne
or
test
in
popf
dec
push
push
inc
mov
cli
adc
cmp
sbb
scas
mov
cli
pop
ss
call
cmp
stos
add
mov
fists
add
and
mov
into
mov
mov
inc
add
cmpsl
das
test
das
or
mov
xrelease
jge
and
sub
cld
mov
cli
push
lds
inc
lcall
xor
ss
mov
in
xchg
rolb
jb
sub
fidivrs
and
inc
cmp
jne
inc
fistpl
mov
fucomi
push
stos
sub
xchg
outsb
cmp
mov
adc
orb
inc
dec
or
push
out
xchg
sub
adc
mov
jg
jno
jp
je
dec
and
into
push
sbb
jns
dec
or
inc
rcll
or
ret
hlt
fidivrs
mov
mov
pand
andl
test
adc
rorl
inc
jle
cmp
cmp
sahf
mov
mov
jo
test
sahf
add
stos
xor
leave
in
cmp
clc
and
and
sub
pop
mov
pop
movsl
rolb
add
lret
in
ficompl
mov
ja
jbe
xor
sti
lock
punpckhbw
out
mov
cli
repz
shrl
inc
dec
frstor
ficomps
out
jne
sub
inc
lret
popa
xchg
inc
outsb
loope
dec
dec
sbb
enter
pusha
xor
pop
mov
adc
push
movsb
outsb
xchg
int3
lret
repz
fmull
lods
mov
cmp
pop
cltd
sbb
pushf
lea
mov
cmc
sub
jo
xchg
lret
nop
and
stos
fldcw
mov
clc
fcmovnbe
sub
insb
mov
mov
mov
add
in
lahf
xchg
cmp
das
pop
mov
mov
lea
pop
sub
roll
fcoms
mov
outsl
movsb
adc
sbb
es
and
out
fcomps
ret
lret
bound
test
push
jbe
adc
xchg
pop
and
add
stc
xlat
iret
jg
aam
jo
or
dec
icebp
dec
push
inc
in
in
stos
icebp
mov
xchg
jns
adc
cmp
inc
loope
pop
and
insw
push
fmull
das
add
pop
mov
pop
jl
in
add
jle
mov
mov
mov
mov
ret
xchg
scas
pop
lea
cli
and
enter
cmp
les
aaa
push
call
loopne
dec
out
pop
jecxz
rcll
dec
aaa
popa
nop
or
je
mov
shlb
mov
pop
repz
or
mov
int3
popa
ja
and
sub
inc
in
fidivrl
aad
cli
jae
sahf
push
adc
add
push
xchg
loopne
stc
les
stos
xchg
and
repnz
rcrl
jge
testb
or
lret
adc
out
inc
clc
arpl
mov
popf
push
mov
lcall
cmpb
sub
or
or
addr16
out
in
data16
loope
lahf
push
pop
xchg
test
fs
fists
lock
aas
int3
outsb
jmp
ds
xchg
fnstsw
fcompl
and
pusha
fcoms
fs
fs
dec
js
clc
and
sbb
gs
lahf
and
xchg
jno,pt
jg
mov
out
cmp
shl
stos
jge
dec
scas
out
jns
add
and
loopne
pushf
int
jne
push
aaa
add
mov
mov
dec
dec
sub
je
cmpsb
rclb
les
add
aas
loop
insb
mov
ja
cltd
mov
iret
scas
xchg
int3
mov
out
sbb
das
js
xor
push
mov
adc
das
mov
test
aad
add
imul
sub
aaa
rcrl
add
push
sbb
test
xchg
icebp
punpcklbw
popf
mov
dec
cltd
inc
jnp
mov
cmp
or
mov
or
fistpl
and
inc
cmp
sub
adc
hlt
push
dec
rorb
xchg
sbb
mov
pop
bound
push
mov
stc
mov
rcrb
fidivs
lea
aam
pop
or
pop
subb
gs
jg
mov
lds
loop
das
inc
cmp
sbb
ret
dec
push
stos
hlt
pop
dec
pop
ljmp
inc
jg
add
std
popf
xchg
xchg
aam
or
ror
push
jo
scas
push
dec
int
jle
adc
in
addb
loop
xchg
ret
inc
ss
push
nop
jb
jg
sbb
pop
cld
ficomps
jnp
adc
cltd
push
dec
aas
testb
sub
test
adc
or
mov
mov
sbb
pop
push
push
lahf
enter
xchg
dec
imul
or
out
dec
lcall
daa
pop
fcmovnu
fcomp
pushf
pop
lcall
xchg
popf
scas
pop
pusha
js
fidivrl
movsl
test
insl
outsb
dec
push
push
cmp
jge
loope
cltd
mov
xor
jbe
and
stos
pop
or
pusha
add
push
jb
or
sar
mov
shrl
stos
mov
movsb
cmpsb
test
aas
ja
xor
mov
ljmp
ss
inc
movsl
push
sbb
divb
out
sti
mov
int
js
cs
imul
mov
add
sbb
ss
add
inc
inc
xor
mov
sbb
and
cmp
push
out
out
add
pop
cmp
mov
adc
out
xchg
in
out
add
xchg
dec
cmp
xchg
popf
gs
sub
push
sub
jmp
popa
xchg
dec
orl
add
or
jge
outsb
push
mov
xor
into
push
sbb
call
pop
sub
add
mov
test
xor
aad
xor
xchg
adc
lcall
mov
sbb
pop
insl
cs
sub
rorb
xor
call
mov
mov
adc
aad
push
jecxz
int3
mov
mov
ret
stc
and
popf
lret
icebp
jbe
add
adc
jne
push
jp
add
xlat
adc
inc
mov
ljmp
jne
out
jp
inc
inc
in
mov
popf
xchg
das
int3
fstpl
fimull
jle
sbb
lret
mov
jmp
inc
jmp
btc
fiaddl
pusha
nop
or
idiv
test
repnz
add
js
movsb
sbb
inc
arpl
addl
jne
pop
repnz
mov
pusha
pop
sbb
in
and
arpl
clc
pop
aas
pop
push
xchg
adc
xchg
inc
xchg
push
and
pop
adc
mov
sbb
movb
xor
fwait
mov
dec
add
fdivrl
faddp
inc
movsb
pusha
inc
getsec
mov
xchg
daa
gs
mov
inc
fwait
popa
mov
test
outsl
mov
lock
in
lcall
jnp
mov
imul
mov
mov
bound
scas
xchg
pop
aad
xor
pop
cltd
icebp
popa
mov
or
rolb
mov
jp
pop
cmp
je
mov
lahf
mov
int3
scas
push
xorb
sbb
fstpl
out
cmp
xchg
jl
repz
adc
xor
or
repz
push
f2xm1
and
cmp
sub
lods
dec
jl
or
and
js
std
or
jg
imul
jmp
sahf
and
pop
fdiv
scas
inc
pop
xor
and
adc
ror
int
pop
shrb
jae
mov
xchg
cmp
nop
call
and
xchg
xchg
movsb
mov
fs
mov
jns
insl
je
cwtl
fdivl
in
jnp
xchg
aad
aad
xor
cmp
adc
je
mov
fwait
into
xor
and
inc
sub
movsb
add
inc
in
ret
out
sbb
mov
cmp
adc
sahf
mov
sbb
outsb
dec
dec
or
pop
xchg
sbb
ret
pop
dec
in
dec
out
cmp
lods
loop
and
ljmp
mov
adc
xor
xabort
mov
sti
lods
ljmp
sbb
andb
pop
mov
pop
or
cmp
pop
dec
adc
pop
push
shl
cmpsb
sahf
clc
ss
mov
andb
pop
jle
ljmp
into
mov
imul
stos
or
shrl
mov
mov
and
inc
mov
test
das
or
das
push
in
insl
ficomps
rcll
push
roll
jb
mov
jns
push
mov
cmp
mov
lahf
mov
inc
jno
cmpsl
fsub
mov
mov
mov
jecxz
in
dec
jo
add
les
push
jo
sbb
lods
xor
mov
pop
inc
pushf
insl
rorb
and
dec
pusha
mov
xchg
jne
mov
push
or
movsl
mov
or
fsubrs
fwait
xchg
mov
sub
out
jae
fldenv
ret
adc
out
mov
push
test
test
push
andl
mov
cmpsb
xchg
jbe
jbe
jno
adc
rcl
inc
ffreep
jne
fistl
mov
orb
pop
inc
add
sti
mov
fcmovb
imulb
shll
mov
cmp
int3
pop
mov
and
arpl
adc
inc
hlt
mov
mov
or
mov
arpl
xchg
test
mov
jmp
mov
xor
icebp
out
mov
add
insb
jno
cld
ljmp
clc
incb
clc
scas
push
mov
sti
aas
out
pop
mov
mov
int3
cli
ljmp
aad
mov
mov
sti
xchg
dec
repnz
inc
in
xor
sub
fimuls
stos
sub
pusha
mov
xchg
into
mov
jb
or
sbb
daa
xchg
xchg
fimuls
and
jae
xor
lahf
in
adc
shl
dec
fcoml
sub
xchg
orl
in
out
negl
outsl
and
mov
xchg
cmpsl
fidivrs
push
mov
mov
jg
jae
cld
gs
pop
pushf
xchg
xchg
xchg
mov
hlt
add
addl
pop
and
xchg
jnp
mov
dec
push
jno
mov
ds
push
fs
les
ss
mov
pop
pop
test
fisubrl
ret
push
mov
pop
ja
sub
jp
and
add
aaa
inc
jge
mov
push
sbb
cmc
and
mov
dec
xchg
nop
jns
xchg
pop
mov
dec
sbb
repz
aas
pop
inc
mov
dec
mov
mov
mov
outsb
push
pop
ss
std
out
xchg
fstpt
stos
pop
test
xchg
push
mov
into
adc
xchg
rorb
les
mov
leave
push
cmp
jae
notl
cmp
pusha
sub
inc
xchg
mov
xchg
xchg
arpl
dec
mov
fcoml
dec
rcrl
into
jmp
ja
sbb
sbb
mov
or
icebp
testb
out
loope
or
int3
ljmp
mov
mov
insl
or
daa
sub
into
jecxz
jg
testb
mov
scas
addl
aas
stos
imul
movsl
and
lcall
and
push
jge
mov
mov
jo
sarb
out
jecxz
vpmacssdd
test
rol
cltd
mov
mov
sub
in
subl
lret
inc
sbb
push
les
inc
stos
jnp
adc
mov
and
pop
inc
xchg
mov
aad
add
lcall
imulb
pop
repnz
loope
inc
jnp
cmp
dec
js
das
imul
in
insl
and
in
inc
cltd
aaa
punpckldq
xor
pop
jmp
dec
and
in
test
add
data16
aad
mov
adc
xor
loopne
daa
ficomps
or
add
pop
add
mov
test
scas
imul
sbb
and
inc
or
jbe
lock
lahf
xlat
repz
pop
std
inc
mov
mov
ljmp
mov
addb
xchg
xchg
cmp
lods
stc
mov
aaa
adc
xchg
movsb
mov
mov
icebp
mov
bound
cmpsb
movsl
fldcw
inc
xor
das
jb
mov
ja
push
outsl
aaa
sub
cmc
pop
nop
sbb
lcall
pop
adc
mov
ds
jge
jg
in
jmp
cmp
pop
sbb
enter
mov
pop
pop
sbb
pop
out
xchg
jbe
clc
inc
mov
shlb
jge
push
mov
aas
rorb
jo
add
orl
data16
or
inc
cmp
out
out
fisubl
imul
mov
push
enter
cmp
mov
lock
sti
xchg
jp
leave
push
add
ffreep
xchg
idivl
sub
push
pushf
xchg
fisttps
out
fildl
adc
mov
mov
inc
daa
sbb
inc
add
inc
subb
int3
sbbb
je
push
pop
xchg
or
fisubs
push
mov
lea
insb
add
lock
and
int
sub
idivb
ficoml
insb
sub
shlb
lahf
mov
stos
xlat
xchg
popf
addl
mov
scas
cmpsl
jmp
or
lret
lahf
jle
pop
sub
das
push
cmp
mov
jl
aam
mov
add
pop
pusha
xchg
sbb
sub
pop
daa
es
imul
jnp
int3
pop
jle
leave
lret
add
cmp
or
xchg
push
cld
lret
mov
mov
push
push
shlb
cs
and
jno
inc
in
roll
out
adc
adc
test
pop
sbb
mov
in
fdivr
fbld
orl
xlat
pop
fistpl
jle
inc
adc
lods
xor
sahf
lods
mov
mov
push
sub
into
popa
pop
daa
pop
mov
sub
dec
jae
icebp
adc
addb
push
ss
les
orl
and
andl
aaa
add
je
out
mov
cmp
dec
sbb
xchg
pop
cmp
std
clc
xor
std
jbe
leave
cmp
jecxz
cmpsb
int3
in
call
mov
ja
xlat
mov
in
add
ret
mov
pusha
mov
lods
cmp
cmp
mov
adc
stos
icebp
adc
push
xchg
aam
ss
mov
mov
inc
icebp
in
stos
sub
sbb
insl
push
test
jle
dec
movsl
clc
repnz
sbb
insl
xchg
leave
pop
jbe
mov
test
xor
and
mov
sub
pop
scas
iret
fbstp
lcall
pcmpgtd
pop
outsl
call
bound
mov
movsl
mov
cmp
fcomp
dec
adc
insl
adc
mov
jb
fidivs
fistps
nop
push
push
dec
add
call
mov
mov
pop
pop
iret
push
dec
dec
inc
mov
or
xchg
add
fiadds
sbb
jmp
stos
in
in
xchg
mov
lods
xchg
xchg
add
leave
xor
sub
sub
dec
cmp
pop
mov
cld
xor
popa
loope
add
or
arpl
cmp
lods
sub
push
gs
xchg
test
mov
or
in
mov
decb
or
sbb
mov
outsl
in
ja
cmp
and
jno
pop
jle
pop
mov
aas
jmp
pop
push
cli
cmp
test
cwtl
cmc
je
fs
mov
fwait
loope
fbld
sarb
leave
pop
sub
dec
and
jnp
jecxz
fsubr
lods
cmpsb
enter
lcall
dec
add
mov
test
aaa
lock
mov
testb
pop
and
scas
mov
shl
inc
sbb
push
popa
js
push
mov
xchg
pop
call
and
decl
jecxz
sub
and
clc
ficompl
add
or
outsb
ljmp
mov
xlat
test
cmpsb
mov
data16
dec
loopne
nop
xchg
sysret
or
movsl
ficoms
sbb
cld
mov
cmpsb
mov
inc
add
enter
movsl
lcall
sub
movsl
repz
add
paddq
push
adc
or
adc
fistps
ret
je
mov
jmp
ja
jo
sbb
mov
cli
negb
jg
cmc
pop
push
lock
out
lea
jb
inc
xchg
bt
test
dec
mov
ror
pop
cmpl
sti
cltd
cmp
pop
lods
dec
outsb
pusha
inc
jbe
rolb
test
fucom
sub
aas
xchg
sbb
out
push
push
push
aaa
cmpsl
pop
push
mov
xchg
push
push
repz
push
inc
lea
enter
pop
xor
lret
jo
inc
aad
jecxz
cld
inc
fimuls
pop
xor
test
sub
repz
ss
sbb
mov
cmp
mov
repnz
roll
or
xlat
mov
xchg
ret
jns
ljmp
sbb
imul
fnstenv
cmp
mov
mov
and
pop
mov
sar
lret
inc
pusha
mov
iret
lods
xchg
lods
outsb
neg
lods
lds
push
sub
arpl
or
call
push
jns
sbb
cld
dec
movsb
roll
jle
sbb
cltd
cmp
nop
mov
sub
mov
and
cmp
sbb
imul
in
ja
add
and
enter
ja
and
leave
jle
js
push
mov
sub
into
fdivrl
ret
push
std
psubusw
adc
les
sti
ror
faddl
cmp
movlps
pop
ficoml
cwtl
push
pusha
fstps
lds
aam
lods
jb
aam
xor
sbbl
xchg
cmp
xchg
mov
inc
mov
sub
repz
je
cmpsl
dec
adc
jae
mov
jns
dec
in
sbb
adc
cmp
pop
mov
sbb
adc
inc
xchg
pop
cmc
inc
push
neg
jnp
jo
fstpl
aas
dec
testb
loope
sub
insb
xorb
dec
pushf
jecxz
nop
lods
pop
insl
add
repz
jo
inc
jmp
inc
fs
shlb
pop
sub
iret
sub
inc
aaa
pop
add
pusha
pop
add
jmp
push
stc
xchg
stc
dec
aam
cmc
xchg
cmp
loop
xchg
jle
pop
add
pop
push
aad
loop
into
imul
sub
insb
in
movsl
adc
rcl
add
out
sub
pushf
cltd
imul
lods
orb
ss
add
and
adc
repnz
mov
lret
pop
je
push
lcall
aam
add
add
xor
out
aaa
leave
pushf
shlb
adc
das
cmp
out
jmp
cmpl
add
movsb
jle
sti
dec
pop
sub
sar
aas
push
and
mov
mov
and
pop
xor
faddp
mov
dec
into
jge
cmp
fstl
xchg
cmp
mov
loopne
jo
cmc
sahf
xor
insb
or
mov
adc
dec
lods
inc
ret
aad
negl
mov
pop
pop
push
jb
jge
dec
fs
add
or
lods
jno
sarb
loopne
sbb
jns
test
mov
jl
and
fiaddl
mov
mov
orb
cmp
jmp
and
mov
jge
dec
xchg
jle
cmp
mov
sbb
das
mov
jbe
ficoms
incb
pop
aad
adc
lret
enter
mov
add
andl
pop
pop
sbb
ds
rclb
sti
fnsave
out
jl
add
and
nop
fistps
pop
scas
jo
xlat
pop
sbb
enter
mov
imul
pop
pop
cli
xor
push
push
add
xchg
xor
pop
das
aad
xchg
iret
pushf
clc
test
mov
jge
xchg
fsubs
outsb
adc
adc
adc
out
es
data16
sub
loop
pushw
xchg
pop
mov
nop
out
gs
out
and
out
imulb
sbb
scas
cld
pop
repz
cwtl
mov
mov
ds
pop
rolb
mov
popa
mov
push
popa
or
cs
cmp
dec
mov
js
and
aam
add
jne
lcall
mov
or
mov
push
int3
mov
stos
xchg
jl
or
sarb
jne
push
out
das
dec
pop
je
jl
test
pop
add
and
mov
punpckhbw
rolb
fbstp
sbb
jns
clc
nop
icebp
fcompp
in
or
fucom
aad
fs
aas
out
movsl
dec
fisttpl
jns
sub
mov
cmpsl
xor
movsb
pop
ret
lret
pop
mov
movsb
dec
xor
ss
scas
xchg
cli
arpl
push
fadd
mov
sbb
cmp
jbe
jno
adc
inc
es
scas
shrb
cmp
int
or
xchg
push
jns
sti
insl
dec
xor
pop
cltd
push
int
repnz
push
cltd
and
imul
inc
jo
and
xor
scas
ret
inc
dec
push
mov
xor
fs
lcall
loope
jmp
add
mov
and
pop
cmp
insl
or
cmc
in
out
icebp
ficoml
push
leave
pop
sub
fisubs
jbe
scas
stos
mov
fdivs
dec
gs
scas
push
jno
addr16
lds
cld
cmp
or
push
sbb
subb
fsubl
sbb
adc
adc
cmpsb
pop
popa
sub
aas
popa
add
jp
lock
ret
xchg
dec
roll
clc
cmpsb
xor
test
dec
inc
inc
out
sbb
fsubs
test
push
dec
pop
mov
ljmp
testl
xchg
pop
push
jb
inc
aam
test
pusha
pushf
xchg
mov
xchg
push
jmp
inc
push
hlt
mov
fsubs
into
add
arpl
xchg
dec
ds
cmpsl
jl
inc
inc
cld
les
mov
cmc
dec
sbb
mov
or
testl
lret
xorb
xchg
dec
int3
ljmp
aad
pop
or
fbld
pushf
xor
xlat
mov
push
jl
iret
aam
jno
lret
leave
mov
mov
andb
leave
sub
rcl
inc
test
icebp
fmuls
adc
fsts
repnz
adc
jnp
cmp
sbb
ret
rol
daa
xor
xchg
mov
ss
out
scas
pop
pop
test
addr16
jnp
jmp
cli
push
fucomp
push
mov
rorb
pushf
dec
data16
fstl
lret
xchg
adc
and
in
idivb
shll
cs
mov
lahf
popa
mov
xor
loopne
imul
xchg
jle
insl
mov
sbb
testl
ret
out
fmul
mov
leave
sub
or
cmpb
mov
mov
add
mov
mov
cmp
movsb
jne
out
mov
roll
cli
cmp
dec
add
cs
jge
pop
rol
out
sub
pushf
inc
add
mov
fbld
aad
fs
mov
pop
outsb
pop
data16
orl
push
hlt
xor
mov
in
ficomps
stos
clc
outsl
mov
jo
ss
jae
ficoml
push
xchg
movl
pop
scas
or
mov
xor
ret
jmp
lcall
call
push
jno
jl
cwtl
dec
sti
lcall
pop
js
dec
jle
arpl
bound
call
scas
jecxz
jo
mov
cld
pop
idivl
jmp
add
out
xchg
xchg
dec
dec
leave
lret
mov
sarl
jno
lret
xchg
add
push
mov
adc
jecxz
jecxz
sbb
mov
test
out
or
dec
cltd
cwtl
sbb
xchg
ret
sub
jl
push
xchg
add
jno
pop
in
dec
test
pop
test
jnp
or
lcall
inc
aad
xchg
xchg
and
fiaddl
mov
call
loope
inc
dec
jp
stos
sub
mov
xchg
insl
fldpi
pop
pop
and
cmpsb
cld
ret
mov
mov
mov
dec
adc
shll
and
lock
jno
lods
xor
jno
nop
jns
stc
sub
cltd
xchg
cmp
lock
add
jp
and
dec
xor
outsl
inc
or
lcall
jb
xor
jmp
ret
mov
repz
js
dec
inc
sub
scas
out
xor
jecxz
mov
jp
add
xor
inc
add
imul
mov
inc
jb
mov
fildl
adc
inc
insb
xor
mov
xlat
fnsave
xlat
lret
dec
jge
sbb
out
in
mov
dec
adc
pop
cmpsl
lods
mov
inc
cs
mov
fisubrs
clc
xor
loopne
cmp
test
inc
shrb
fbstp
jecxz
adc
jmp
cmpsb
push
out
jg
aad
mov
push
and
sub
cmp
mov
xchg
fwait
xlat
cmp
xchg
jo
mov
pop
mov
enter
sbb
out
jl
stc
popf
push
cmp
xchg
enter
mov
cld
ljmp
into
adc
inc
lret
inc
enter
pop
ja
xor
out
fidivrl
push
mov
repnz
cwtl
push
lcall
gs
test
sbb
gs
dec
and
jbe
aam
sbb
cmp
and
and
popf
int3
push
xor
pop
in
lahf
mov
push
mov
and
mov
jo
cmc
aad
dec
ds
sub
xor
lret
or
inc
mov
rorb
cmp
ret
jae
sbb
and
or
adcl
sub
adc
mov
in
ljmp
cmpsl
fiadds
push
enter
fisubs
lods
adc
jns
icebp
cld
or
testb
nop
xchg
and
lcall
jno
pop
push
sub
push
mov
fcmovu
and
pop
insb
jns
xchg
fimuls
push
cmpsb
and
lahf
leave
jnp
mov
scas
movsb
sahf
push
aad
aas
xchg
loopne
pop
inc
dec
es
shlb
pop
push
push
or
ljmp
pop
aaa
xchg
xchg
movsb
push
and
aas
and
jle
xchg
xorl
ss
xchg
xchg
js
or
arpl
insb
or
adc
sub
mov
dec
ljmpw
mov
test
xorl
cli
jo
iret
cmp
cs
pop
add
sbb
sti
fsubrs
adc
and
jno
in
push
idivb
pop
rcll
fucomi
clc
scas
nop
adc
es
icebp
enter
mov
call
les
cmpsb
push
cmc
fisttpl
std
inc
lods
mov
sti
shlb
and
repnz
stos
pop
fbstp
pop
ja
lahf
mov
xlat
lret
stos
scas
adcb
sahf
popf
orl
jg
imul
pop
dec
jo
sbb
cmp
ficoms
mov
push
push
pushf
ficomps
push
nop
lock
fsubrs
movsb
pusha
sub
ljmp
lcall
mov
mov
jno
push
or
enter
and
mov
xorb
push
cmp
loopne
mov
sahf
and
fnstcw
sbb
push
nop
into
dec
int3
mov
jl
cltd
cmpsb
fwait
inc
mov
dec
ret
jns
mov
repnz
fldpi
mov
inc
fidivrs
fs
mov
scas
push
mov
out
in
popa
sub
fdivrp
movsl
sbb
ret
dec
mov
add
imul
pop
add
fisubs
jne
ficoml
inc
jl
push
sub
es
xchg
shlb
cmpl
jno
pop
push
sub
add
mov
into
insl
idivb
sbb
push
scas
xlat
frstor
or
out
fsubrl
ficompl
nop
rclb
or
mov
lret
inc
mov
imul
ret
or
lock
popf
adc
jecxz
aad
idivb
dec
fisubl
jecxz
shlb
es
or
fsubr
sub
or
pop
xor
lock
pop
sti
in
mov
sarl
sub
xchg
mov
mov
out
sub
or
adc
lret
adc
bound
mov
and
je
jge
js
lock
add
pop
mov
cmp
rolb
xor
sub
mov
mov
jae
loope
mov
cli
jbe
sbb
mov
das
xchg
or
adc
fdivrl
mov
pop
insb
cmp
in
ds
add
push
pop
mov
mov
rorl
dec
cmp
test
mov
lock
pop
mov
nop
sbb
jecxz
jle
or
sbb
in
mov
dec
into
xchg
sbb
push
adc
icebp
jno
xchg
cmpsl
jbe
dec
imul
psubusb
jecxz
jae
xlat
xchg
inc
cltd
out
pop
fs
rcl
xor
push
mov
sar
jle
mov
adc
aam
mov
mov
mov
and
lret
push
or
stos
mov
sub
inc
bound
xchg
add
sub
or
cmp
adc
mov
add
addl
in
mov
in
jle
dec
dec
mov
xchg
repz
add
vpsubusb
arpl
fs
push
test
dec
popa
cmpsb
lcall
cli
jb
int3
push
pop
jle
pop
outsb
jp
sub
mov
mul
stos
loop
popf
xor
dec
ss
jge
loopne
mov
sub
mov
cmp
mov
out
add
shlb
gs
in
fnstenv
xor
cli
jp
shr
xchg
imul
es
mov
andb
subl
mov
pop
daa
dec
rcll
mov
mov
test
mov
je
pop
pop
jecxz
dec
out
clc
fdivrs
cmpsl
scas
dec
loope
bound
insl
nop
jns
mov
dec
sub
cwtl
shl
mov
pop
pushaw
xor
adc
jl
lods
mov
mov
fadds
add
es
add
xor
inc
sub
xor
lret
outsl
inc
push
lahf
fwait
cld
mov
push
push
dec
inc
movsl
icebp
sub
test
sub
jo
sbb
cmp
pop
cltd
loopne
jp
jno
jno
push
add
inc
sbb
pop
or
out
int3
out
mov
pusha
adcl
inc
lods
inc
xor
add
sbb
jmp
dec
adc
test
or
shlb
mov
repnz
adc
mov
rcll
in
jl
insb
add
insl
mov
jb
cmp
cmp
lahf
sub
jbe
rclb
inc
pusha
mov
imul
stos
rorl
xor
xlat
in
rclb
dec
mov
incl
push
nopl
daa
int
mov
inc
dec
daa
loopne
or
cmp
repnz
and
push
shlb
push
fdivrl
sarb
jmp
sbb
enter
addr16
adc
inc
pop
mov
inc
imul
add
sbb
xchg
bound
push
mov
sahf
mov
pop
cmp
icebp
in
lcall
mov
sbb
mov
adc
jno
jecxz
lret
mull
jecxz
lods
inc
das
in
shrl
dec
repz
loopne
movsb
ljmp
jne
or
test
inc
dec
sti
je
jno
call
xor
enter
push
and
cmp
lds
xor
add
sub
and
xchg
les
in
inc
xor
jl
imul
lods
pop
sbb
or
hlt
xchg
test
in
cs
mov
cli
xor
into
imul
mov
mov
push
gs
mov
sbb
xor
orb
in
pop
out
xlat
shrb
jae
daa
shlb
jns
dec
imul
dec
cmpsl
enter
push
push
mov
fisubrl
lock
adcl
movsl
test
mov
pop
fsubp
shlb
aaa
aaa
add
lcall
repz
pop
mov
and
test
sbb
out
xchg
outsb
cmpsb
test
xchg
ja
inc
pop
jnp
call
jmp
dec
and
out
nop
jge
outsb
popw
inc
jb
notb
cltd
or
sbb
cwtl
lahf
popf
pop
sbb
jg
outsb
sub
fcmovnu
pusha
jmp
cmp
xchg
stc
out
andb
insl
and
pushf
ret
rol
sub
inc
and
sub
push
sbb
adc
add
insb
notl
and
sti
fs
lahf
sub
mov
icebp
push
cli
lods
cmp
xor
aaa
test
movsl
jmp
add
addb
outsl
xor
popa
cmp
cmp
inc
repnz
push
mov
push
xorb
push
addr16
repz
jmp
add
test
add
xchg
xor
push
jmp
dec
lods
sti
call
lret
sub
cmp
cs
pop
push
cmp
xchg
cmpsb
mov
cli
cld
dec
js
movsl
add
xchg
ds
divl
sub
push
loop
lds
mov
addb
mov
je
sti
push
dec
fs
iret
xchg
mov
xchg
xchg
inc
sub
popa
imul
sub
sahf
jns
icebp
pusha
dec
cmp
je
test
or
int
push
mov
cmp
jne
fcomi
nop
leave
dec
cld
int
addl
lret
push
cmpl
sbbl
mov
gs
sub
xor
add
jnp
or
mov
repz
stc
addr16
mov
loopne
xor
inc
lods
lods
int3
mov
pushl
sbb
scas
add
cli
popf
call
lahf
jns
adc
test
dec
stc
mov
test
aas
push
getsec
cld
sti
fwait
call
dec
cld
cmpsl
mov
jb
in
cmc
in
les
nop
popf
pushf
std
inc
test
pop
sti
paddusb
outsl
cmpsl
incb
call
inc
push
sti
repnz
xchg
call
lcall
pop
stos
xor
mov
clc
inc
cmp
jne
shrb
sbb
lcall
push
fstl
int3
mov
dec
mov
sarl
adc
cmp
ds
sbb
shrl
js
ss
jmp
loope
mov
adc
into
fwait
pcmpgtd
cmpsl
add
cltd
popa
adc
dec
and
sbb
push
mov
je
imul
mov
mov
mov
mov
pop
jo
dec
xor
pop
addl
js
jbe
out
shlb
out
loope
dec
and
lock
cmp
pop
pusha
test
mov
pop
sub
gs
adc
push
pop
sti
insb
sub
sbbl
out
xor
stos
xor
je
rcl
rclb
push
sub
dec
movsb
movsb
nopl
test
xchg
fs
push
mov
inc
adcb
jae
push
sbb
cmpsb
jno
sbb
outsl
adc
cmp
std
repnz
pop
fidivrl
lahf
mov
fists
mov
shll
mov
call
pusha
bound
jg
aam
ret
pop
jg
out
sub
nop
jle
jne
fstpl
sbb
lret
decb
jnp
jmp
insl
dec
scas
xchg
cmp
and
push
cltd
fildl
int
or
sub
ds
inc
cmc
cwtl
mov
pop
or
jae
nop
jl
pop
mov
cs
pop
fucom
mov
push
xchg
add
mov
es
mov
scas
insl
gs
cwtl
xchg
dec
add
jmp
mov
mov
mov
scas
adc
mov
push
je
imul
loopne
xchg
clc
jp
and
adc
cld
test
push
and
addr16
pop
mov
jns
sub
lds
sbb
lahf
shlb
popa
into
cmpsb
pop
je
inc
bound
les
adcl
pop
lods
mov
lret
xor
mov
push
sub
mov
stc
cmp
das
xchg
pushf
enter
or
ja
clc
test
mov
lods
mov
mov
pop
mov
ret
jno
add
lock
mov
pop
incw
scas
xchg
iret
dec
lea
inc
daa
mov
popf
push
mov
inc
sti
mov
into
cmc
and
pop
jl
xor
lds
xor
pop
sub
out
mov
mov
inc
dec
jno
js
cmc
xchg
jmp
mov
mov
sbbb
jb
xchg
xchg
int
cwtl
repz
pusha
insl
aam
repnz
adc
push
mov
mov
stos
xlat
push
and
jbe
mov
aaa
addb
fbld
gs
or
xchg
xchg
jecxz
lcall
mov
imul
adc
jge
rorl
repnz
add
shll
leave
lret
inc
faddp
out
push
add
push
in
aad
mov
lock
dec
cmpsl
xor
inc
mov
movsb
xlat
sbb
enter
cwtl
mov
in
addl
cwtl
xchg
cmpsb
dec
in
dec
cwtl
jmp
mov
clc
cmpsl
dec
xchg
loope
lret
jns
adc
aam
add
xchg
inc
and
jp
addb
fidivrs
adc
andl
lods
inc
lods
aam
sub
jns
xor
leave
and
sbb
jge
jns
aaa
ja
dec
std
cmp
push
mov
push
cmp
lods
xor
pop
sbb
in
in
mov
pop
cmc
fdivrl
fsub
fimuls
pusha
ss
pop
dec
fdivl
push
mov
pop
xorb
sub
and
fidivs
or
test
and
rolb
sub
inc
jns
xchg
mov
mov
addl
test
int3
jb
or
mov
fimull
pop
cld
inc
cmc
pushf
xchg
movsl
push
adc
sbbl
add
ljmp
adc
leave
adc
repnz
in
or
push
jmp
frstor
xchg
sbb
test
scas
div
sti
inc
ret
adc
in
mov
cmc
jnp
mov
nop
fldl
pusha
sbb
mov
pusha
iret
or
out
mov
movb
xor
xchg
push
sbb
or
push
gs
stc
gs
inc
mov
out
stos
cmpsb
xor
stos
imul
jle
mov
rclb
sub
outsl
out
add
pusha
js
cmp
push
xor
dec
icebp
aas
pop
cli
jae
nop
jb
push
sub
mov
les
lea
sahf
les
pop
in
cmpsl
mov
test
in
jb
scas
test
pop
int
lret
shrb
and
mov
adc
lods
lret
push
jecxz
std
mov
outsb
movsl
pop
mov
xlat
pop
xor
mov
and
lods
jl
lcall
shrl
pop
sub
inc
add
repz
mov
pop
pop
imul
test
pop
aaa
and
ret
pop
adc
les
mov
cmpsb
fnstenv
and
push
movsl
xchg
stos
jg
xchg
cmp
xor
inc
test
orb
pop
adc
dec
jne
xlat
mov
mov
and
jns
xchg
inc
cmpsb
out
sub
scas
mov
in
jns
cmp
mov
loop
jbe
sub
vmovq
rclb
jp
fs
fistps
mov
aaa
enter
iret
in
mov
in
insl
rorb
mov
scas
insl
or
scas
mov
ret
addl
rorb
insl
jmp
cs
jp
xor
and
fildll
sbb
je
pop
movsl
andb
dec
mov
mov
out
daa
repz
cli
ss
cmpsb
and
out
or
adc
mov
pop
or
clc
xor
out
stos
pop
add
lock
dec
cmp
pop
sbb
inc
jg
scas
add
jo
lds
mov
xchg
and
xchg
jmp
xlat
fcom
and
xchg
jmp
mov
gs
mov
sahf
or
in
imul
sbb
insl
lcall
jge
xchg
mov
mov
cmpsl
push
dec
xor
push
movsb
dec
ret
aaa
and
scas
push
scas
dec
sub
mov
hlt
xchg
xchg
mov
icebp
push
pop
les
jo
lods
nop
xchg
jbe
outsl
or
aad
imul
push
push
or
imul
jb
mov
subl
jnp
adc
push
mov
or
addr16
stos
sub
into
mov
leave
shlb
mov
jae
jns
stc
sub
insb
or
imul
gs
pop
sub
inc
jb
mov
fisubs
lret
cwtl
daa
xlat
lcall
test
mov
lea
in
pop
arpl
or
nop
xchg
mov
push
sbbl
fidivs
int
adc
ret
ds
and
or
fistps
hlt
orl
fadd
adc
data16
test
ss
in
das
iret
out
mov
mov
aam
push
bound
fdivrl
out
inc
push
inc
dec
and
xchg
div
stos
inc
mov
in
mov
loope
adc
jne
push
mov
cmpsb
enter
mov
lods
aas
pop
mov
fisubrs
pop
pop
pop
pop
imul
xchg
jnp
push
jne
cli
add
shll
imul
iret
mov
popf
dec
xchg
clc
cmp
sbb
and
adc
jne
sub
mov
call
ret
pop
test
sbb
adcb
xchg
xchg
call
push
ds
lods
lcall
aaa
and
inc
cmpsl
shll
flds
adc
or
and
icebp
cmc
push
test
push
sub
xchg
mov
mov
sub
sqrtps
lret
mov
inc
lea
fldenv
mov
inc
mov
jecxz
push
mulb
and
mov
or
sub
data16
daa
les
and
sbb
clc
jmp
or
adc
enterw
mov
inc
ret
pop
jae
icebp
pop
cmp
outsb
or
cmp
lods
mov
xor
movsl
in
xchg
cli
sbb
cmc
jae
cltd
inc
jmp
adc
mov
jo
dec
jmp
das
cmp
stc
and
xbegin
imul
daa
xor
stos
jne
and
fmull
cmp
stos
shlb
stc
daa
ds
into
ss
in
or
fcmovnu
in
idivl
mov
daa
ror
popa
shrb
push
pop
sub
insl
xchg
aaa
pop
or
push
pop
orl
cmp
mov
pop
jb
dec
jo
test
or
xchg
mov
jae
sahf
pusha
mov
xor
imul
fdivrs
enter
jno
jmp
inc
je
out
dec
fdivl
in
dec
xchg
cmpsb
push
dec
mov
mov
aad
movups
insb
fcmovbe
and
pusha
cmp
xchg
roll
inc
ret
shrb
inc
sahf
lret
pop
xor
inc
inc
repnz
mov
sub
clc
movsl
jbe
inc
xor
sbb
nop
jb
nop
scas
jno
push
aaa
mov
test
jbe
dec
fsubl
mov
mov
out
cmp
shlb
fdivrs
sbb
mov
fcom
pop
je
xor
xchg
adc
call
and
xchg
and
shlb
icebp
out
sub
rorb
test
mov
fs
mov
js
scas
push
mov
add
loopne
fnstcw
or
xchg
sbb
in
cs
and
ja
movsl
out
jae
push
ret
std
shl
outsl
leave
pop
scas
push
jns
nop
push
das
inc
lcall
out
mov
mov
loop
jge
xchg
xchg
test
push
sub
pop
pop
stos
jge
jecxz
lcall
cmp
and
pop
adc
jl
push
or
dec
fcompl
test
mov
xchg
in
pop
out
bound
cmp
sbbb
shrl
jle
cmp
xlat
jp
sub
idivb
scas
mov
xor
inc
dec
adc
out
fwait
push
dec
xchg
sbb
cs
roll
cmpl
dec
xchg
nop
nop
aam
pop
xchg
push
test
mov
and
and
and
pop
int
clc
idiv
cld
and
adc
cmp
gs
sbb
fdivrs
mov
push
loope
rorb
or
push
inc
ficompl
nop
pop
mov
mov
dec
jp
dec
test
popa
js
clc
and
xchg
add
pop
popl
lret
push
mov
call
rclb
popa
into
loope
jnp
cmp
dec
imul
add
sbb
cs
clc
inc
xchg
mov
xchg
out
cmp
ljmp
clc
icebp
std
pushf
dec
clc
dec
push
pop
call
in
xor
sub
push
lret
push
mov
jnp
mov
mov
fsubr
clc
stos
test
das
sbbb
mov
dec
stos
je
inc
mov
mov
xlat
pop
nop
loope
pushf
push
bound
or
fidivl
adc
xchg
push
xor
mov
lcall
aas
jg
cmp
mov
ljmp
mov
in
not
jbe
jbe
mov
xlat
jne
and
jbe
in
jecxz
push
std
mov
repz
inc
cmp
xchg
pop
add
add
into
xor
fstpt
dec
rcll
jle
push
cmpsl
cli
xor
cmpl
outsl
mov
jne
shlb
xor
or
xor
fimuls
ja
shlb
mov
rep
ficompl
cmp
into
and
or
ret
test
negb
ficoml
ds
cmp
xor
imul
shlb
mov
cs
xor
movsb
ljmp
adc
xchg
pop
xor
mov
cs
mov
cwtl
inc
stos
jbe
fcomps
sub
call
ja
ret
add
in
pop
adc
arpl
ss
and
push
aad
aad
mov
sub
je
sub
inc
mov
mov
add
sbb
cmp
enter
add
mov
add
adc
add
popa
scas
testb
sub
scas
sbb
in
jp
rcrl
push
jae
inc
negl
adc
jl
jae
cmp
xchg
cmc
inc
pop
roll
std
stc
cmc
rolb
pop
pop
mov
cmp
push
or
adcb
ljmp
xchg
xchg
sahf
movsl
or
fstl
imul
cmp
out
sahf
arpl
mov
cs
mov
dec
dec
adc
dec
and
shrb
xchg
nop
sbb
test
daa
jb
leave
dec
jl
js
sbb
or
testb
stc
cmp
mov
push
mov
jne
repz
jle
mov
test
dec
sub
lods
fstl
mov
push
testl
pop
mov
xchg
insb
outsl
arpl
inc
sub
mov
push
test
out
xchg
aas
movsl
sbb
xlat
inc
addr16
jmp
shl
jg
xchg
std
adc
mov
or
shlb
out
pusha
mov
test
add
lods
sub
lds
jge
mov
cmp
std
loop
fiadds
xor
inc
inc
gs
mulb
mov
lods
sub
pushf
stos
pop
cs
pop
adc
pop
dec
and
inc
mov
dec
pop
add
adc
mov
andl
lret
mov
cmpsl
push
cmc
mov
jl
mov
dec
pop
cmpsb
cmpsl
jns
mov
sbb
inc
mov
sbb
mov
loope
inc
xlat
stos
sub
ljmp
cwtl
xor
fwait
loope
mov
mov
iret
mov
adc
jecxz
inc
jae
shll
into
sarb
mov
lods
lret
cmp
cmp
xchg
daa
mov
es
les
push
sbb
cmpsl
cmp
xchg
in
sub
and
ret
mov
mov
add
cs
nop
jb
push
inc
push
inc
pop
mov
cmp
std
or
or
inc
ljmp
mov
sub
enter
decl
sbb
stos
cmpsl
pop
pop
xor
xchg
not
addb
mov
loope
sarb
fs
cmc
out
out
jo
xchg
cmp
mov
sahf
push
sub
and
fs
lret
mov
jecxz
hlt
cmc
inc
movsb
leave
int
mov
pop
sub
sbb
aas
ret
out
and
arpl
fstpl
push
pop
xchg
inc
fstpl
addr16
mov
shlb
popa
daa
gs
mulb
pusha
push
xor
jle
mov
pop
jge
faddl
notl
jae
lods
test
xchg
jmp
dec
or
xchg
pusha
inc
mov
pop
scas
loop
cwtl
dec
push
outsl
call
mov
mov
push
jecxz
or
sahf
fnstcw
cmp
cmpsb
popa
jmp
scas
or
mov
sarl
subl
loope
xor
sub
fdivs
test
sarl
inc
push
daa
and
sub
inc
add
call
cmp
jle
stos
or
rorl
and
add
push
or
mov
outsl
mov
dec
mov
add
daa
adc
lods
pop
xchg
cld
loopne
jo
pop
dec
lahf
lods
or
jge
das
aas
xor
popa
nop
shll
pop
cmc
push
ds
add
push
pop
xor
addr16
out
or
jge
mov
loop
mov
mov
sub
scas
xor
cmp
jmp
dec
pop
add
in
ss
ds
add
adcl
gs
in
push
cmpb
aad
rcll
mov
or
cmpsb
push
cmc
out
inc
les
adc
jb
mov
lahf
test
cld
xor
inc
or
int
loope
sbb
ds
sbbl
push
sub
imul
xchg
mov
xchg
sarb
aam
ljmp
aas
in
inc
push
insl
mov
fcmovnbe
lods
js,pt
das
sub
xchg
sbb
sbb
outsl
addr16
adc
insl
rol
pushf
rol
arpl
gs
jle
cmc
pushf
mov
fsubl
cld
push
pushf
push
jmp
shr
xor
ss
and
loope
addb
pop
ss
jns
fstl
jns
je
gs
in
bound
jno
pop
adc
cmp
xchg
cmp
lret
add
pop
shll
adc
dec
dec
ljmp
jecxz
mov
pop
adc
lret
fwait
inc
aam
mov
and
push
dec
xchg
out
popf
sbb
lds
bound
mov
sbb
jb
enter
ret
pop
and
lret
jecxz
add
ret
je
loopne
add
leave
adc
push
push
jl
add
mov
inc
push
in
out
and
dec
push
add
adc
iret
inc
shl
dec
std
mov
sbb
inc
dec
pop
dec
rcll
push
add
lods
in
shrl
xchg
jno
adc
mov
or
subb
dec
insl
test
out
fcoms
scas
jl
scas
xchg
pop
sbb
repz
lods
add
adc
xorl
ja
and
fisttpll
dec
mulb
xchg
mov
bound
mov
insl
fstpl
inc
sbb
cmpsb
jbe
mov
cld
repnz
out
ror
popf
pop
dec
int
das
ss
ja
jo
loopne
push
mov
faddl
xchg
mov
push
ret
ret
mov
pop
xchg
testb
jne
or
xor
and
or
push
lahf
pop
pop
jno
fs
inc
cmp
in
pusha
sub
int
dec
test
cmp
cmp
jle
dec
imul
hlt
roll
xlat
xchg
xchg
hlt
inc
mov
call
inc
sarb
push
fbld
inc
ror
xlat
push
mov
aam
test
or
lods
xor
xchg
movsb
cli
outsb
leave
mov
inc
push
push
in
pop
addr16
insb
repnz
push
adc
leave
imul
in
sbb
add
outsb
mov
sbb
leave
out
pminub
leave
mov
mov
lods
xor
sbb
or
in
popa
test
jae
pushf
scas
xchg
imul
arpl
pop
mov
imul
jnp
ror
ret
movsl
mov
repz
test
aam
push
mov
pushf
cmp
add
mov
fidivrs
sahf
mov
in
xchg
or
lret
jp
insl
or
outsl
cmpsb
add
pop
ret
xchg
fldenv
es
and
cwtl
sbb
lods
cmp
and
xor
lock
mov
call
pop
rcrl
sub
xchg
cltd
or
adc
dec
int3
push
fwait
mov
test
fsubp
push
pop
shl
dec
jle
out
add
and
and
testb
push
xchg
or
jecxz
push
lods
pop
xchg
fwait
mov
adc
inc
fs
push
in
aam
pop
inc
add
iret
aaa
inc
xchg
int
xchg
movsb
cwtl
sub
into
stos
sahf
sub
xor
and
xchg
stos
adc
les
inc
sbb
jecxz
sub
and
cli
adc
add
into
xchg
xor
js
pop
lahf
cmp
inc
dec
addr16
ret
ret
rol
add
xor
push
popa
sti
inc
arpl
mov
outsb
mov
andb
push
xchg
push
fbstp
inc
sarb
jae
lret
xor
sahf
sub
call
cmp
jnp
cmp
rcrb
add
test
pop
lahf
cmc
in
loopne
mov
gs
and
std
scas
mov
jns
adc
xchg
popf
sarl
and
pop
sahf
xchg
pop
mov
gs
loopne
testb
movsl
mov
jp
mov
add
int3
fwait
sahf
push
cmpb
inc
sub
push
xchg
push
rcll
and
mov
repz
setno
outsb
add
sbb
add
rol
xchg
stc
repz
fwait
and
xchg
data16
decl
jne
loope
sarl
mov
sahf
sarl
lds
out
out
lods
ljmp
xlat
mov
arpl
test
cs
fimull
test
dec
outsl
jno
inc
jp
cmpsb
adc
stos
test
nop
pop
cwtl
mov
jb
and
jnp
jb
sub
cmc
outsl
push
or
cmp
aaa
mov
test
cmpb
cmp
sbb
pop
cli
jle
add
mov
addr16
sbb
int3
pop
dec
dec
es
dec
fnstenv
lcall
jno
clc
int
lahf
and
test
push
push
ret
inc
sbb
in
push
js
add
scas
dec
fsubr
jmp
and
aas
cmp
push
imul
sub
movsb
inc
sub
mov
dec
dec
cmpsl
xchg
mov
pop
rol
rorl
jle
mov
loopne
mov
data16
lret
rclb
mov
cltd
aad
push
dec
sar
jae
lea
lret
mov
pusha
pop
xor
cmp
and
jns
adc
mov
inc
pop
mov
or
jne
and
lea
stc
arpl
mov
add
xor
int
xorb
fs
jp
dec
loop
ds
adc
test
adc
xchg
or
aad
pop
nop
shrb
cmp
jp
cld
push
pop
notb
outsb
aas
mov
lea
js
cmp
push
add
outsl
cs
fsubrp
das
push
push
xor
leave
bound
pop
ds
jecxz
dec
mov
inc
stos
loopne
push
adc
mov
xchg
jl
mov
icebp
xchg
mov
jb
int
int
ret
mov
outsb
sbb
push
test
inc
ret
cmp
fsubl
mov
jp
push
sbb
lret
cld
jae
dec
shll
je
rcrb
mov
lret
mov
ficoms
xor
jmp
mov
aad
mov
push
jno
aam
testb
inc
mov
sub
clc
ds
fstpt
ljmp
pmaxsw
out
jmp
movsl
dec
adc
adcl
sbb
mov
lods
rcrb
insl
outsb
orl
push
cld
ret
mov
lods
lods
fisubrl
add
pop
pop
fidivrs
addr16
sbb
ja
xor
and
pusha
or
mov
xor
test
popf
leave
mov
adc
push
insb
dec
dec
push
adc
xor
and
lds
push
fmuls
jge
cmp
fucomp
xchg
push
or
and
jle
test
movsl
clc
or
movsb
cltd
call
movsb
lods
jp
cmovns
and
or
cld
and
js
adc
sub
pusha
les
jno
insb
mov
popa
int3
cmp
mov
xchg
mov
xchg
test
xor
dec
mov
mov
jmp
mov
pushf
popf
cld
movb
cmp
arpl
sarl
bound
mov
push
mov
mov
pushf
lret
insb
jge
sub
popa
arpl
shl
dec
push
xchg
xor
push
mov
add
cmp
fcoms
jnp
inc
movzwl
add
and
xor
int
xor
inc
dec
cmc
jnp
dec
orb
ss
inc
mov
scas
stos
or
push
mov
mov
fiaddl
lahf
cmp
mov
lahf
push
and
fbld
das
mov
dec
xor
mov
test
nop
jnp
push
pcmpeqw
xchg
xor
jge
xchg
daa
adc
mov
shrl
addl
ret
jns
inc
shr
rcll
les
sti
add
outsl
push
cmpb
jno
ud2
scas
xor
ljmp
and
sbb
xchg
inc
cmp
aas
lock
ja
lcall
xchg
addb
sbb
jns
jmp
decb
maskmovq
mov
xchg
sbb
jg
mov
inc
xlat
shlb
jg
ds
fs
test
dec
cltd
or
xor
pop
sub
nop
jae
clc
inc
sub
add
jnp
lcall
mov
popa
jg
xchg
test
sub
repnz
pop
das
les
popf
pop
mov
gs
mov
enter
hlt
sub
adcl
out
dec
xchg
sti
xchg
cmp
jle
in
je
decl
stc
mov
aad
stos
fbstp
aaa
mov
test
imul
mov
dec
inc
movsb
sbb
call
and
pop
cld
hlt
or
jge
stc
sbb
daa
testl
ds
push
mov
push
pushf
mov
xor
addr16
test
scas
stos
cmp
inc
sub
adc
or
adc
mov
rcrl
xchg
outsl
loopne
or
imul
add
or
push
xchg
inc
decb
or
aaa
lea
insl
sub
push
and
iret
pop
adc
push
hlt
rep
jge
xchg
inc
clc
or
daa
cwtl
in
in
ds
cmpsl
dec
sub
cmpsl
cmpsl
push
out
jp
jns
scas
mov
out
fistps
add
aaa
std
mov
add
data16
push
not
inc
dec
inc
xor
jne
pop
aad
incl
ret
jbe
mov
dec
sub
jnp
xor
bound
pop
fiadds
jbe
in
jae
sub
shrb
ja
xor
sbb
sub
sbb
jne
sub
inc
and
xchg
loop
or
ret
rorb
loop
pop
fildll
push
push
jmp
and
jp
stc
fdivrs
packssdw
out
ss
pop
jae
loope
mov
mov
push
sbb
and
mov
leave
or
decl
mov
lahf
popa
stos
loope
mov
mov
pop
or
xor
fistl
fldcw
ja
mov
cmpl
cli
xor
mov
dec
mov
outsb
cwtl
sahf
test
ficompl
push
jb
sub
or
mov
shrl
jmp
jmp
scas
jl
add
cmpsl
mov
divb
xlat
adc
inc
jb
pop
out
rorb
xchg
mov
inc
sub
stos
faddl
inc
push
adc
xchg
loopne
pop
xor
mov
jmp
repnz
xchg
push
lds
pushf
push
fadd
mov
push
or
jnp
dec
cmp
insb
dec
subb
adcl
call
popf
xor
in
sti
push
cltd
push
jmp
cmc
xchg
and
sub
fstsw
notl
movb
cmp
pop
movsb
pop
jbe
or
out
data16
insb
adc
jg
subb
xor
xchg
pop
aad
mov
adc
shl
daa
mov
mov
mov
aas
jbe
cmp
cmp
sub
sub
insb
lods
cmpl
js
push
xor
fmuls
movl
xchg
pop
jecxz
ss
or
mov
pop
inc
shll
xor
xor
out
dec
push
push
dec
aam
and
add
mov
jns
filds
ret
loopne
mov
xor
lock
xor
xchg
xchg
pop
cmc
xor
fcmovnbe
pop
jb
mov
clc
fisttpll
mov
lahf
in
mov
movsb
dec
scas
or
mov
imul
xchg
or
fisttpl
lcall
movb
into
lahf
les
jge
ja
or
push
jbe
cmp
sub
fcompp
adc
push
pop
cmpb
js,pt
or
add
xchg
and
add
cmpsl
push
into
xlat
inc
mov
aam
mov
shrb
jno
and
adc
out
or
stc
aad
in
lock
fnstsw
lahf
sub
lahf
inc
std
mov
add
inc
xchg
ljmp
test
xchg
lret
sbb
pop
jbe
xchg
fsubl
lock
sbb
mov
ja
int
mov
lret
add
mov
xchg
in
ffreep
out
inc
fbstp
cmpsb
or
pop
adc
ds
fs
les
data16
pop
push
inc
sahf
daa
scas
pop
jmp
add
rcrb
push
mov
mov
ret
outsl
xchg
fucom
outsl
dec
push
jnp
inc
push
testl
popf
mov
stc
cmp
jmp
add
xchg
cli
psubb
aas
jns
inc
sbb
negb
ret
inc
fstl
cli
rcrl
pusha
fcomi
inc
stc
jns
shll
call
jae
xchg
cld
add
ret
clc
push
fcomi
movsl
push
nop
adc
jnp
xchg
sub
lea
dec
lret
mov
dec
in
cs
sbb
mov
andl
xchg
xor
pop
jle
out
out
jmp
pop
stos
sub
push
mov
xchg
mov
inc
dec
ret
les
stos
scas
push
loop
pop
fimull
in
xchg
ss
nop
nop
push
mov
push
cmp
fs
sub
push
push
push
adc
mov
xor
outsb
pop
add
out
insl
into
sti
mov
roll
test
in
das
jle
lahf
pop
stc
test
mov
mov
push
iret
arpl
fwait
xchg
data16
outsb
mov
inc
cli
jmp
sub
pop
fmuls
or
xlat
sub
cmp
jge
gs
cwtl
nop
loop
add
daa
xchg
sub
inc
fs
lahf
cli
pushw
jo
aam
push
mov
ret
bswap
stos
mov
or
pop
xor
nop
movsl
stc
sub
push
call
mov
mov
insl
mov
dec
mov
addr16
daa
or
push
cli
xorb
andb
lahf
xor
xor
push
sbb
hlt
insl
sub
pop
clc
jecxz
dec
jmp
mov
xor
stc
pop
shl
pop
outsb
aad
loopne
xor
test
sarl
js
jns
push
fadds
out
cli
nop
int3
fwait
rcl
or
jb
sub
cmc
jo
xchg
js
sarb
lcall
andb
adc
push
adc
jae
test
jg
scas
pop
mov
repz
xchg
jmp
and
lret
jmp
int3
lret
hlt
jmp
sub
out
imul
ss
scas
cmp
or
inc
fistl
stos
dec
xchg
rcrb
call
lahf
xchg
jle
dec
push
je
jb
adc
rolb
out
shl
fadds
sub
lods
out
sub
sbb
jle
pop
xchg
adc
xchg
sbb
enter
sub
cmp
pop
adc
and
testb
addr16
push
push
add
or
mov
out
adc
lods
xor
mov
pop
push
and
add
jp
mov
xor
data16
and
or
and
rcrb
mov
outsb
ret
nop
shr
ret
push
dec
outsb
clc
ss
test
mov
mov
sbb
xchg
xor
out
or
cmp
icebp
lock
push
sub
fdivp
rorb
movsl
sub
test
or
adc
xorl
and
sbb
push
aaa
cltd
jl
dec
push
scas
push
sub
fs
fs
int3
xchg
es
jnp
fistl
push
fs
dec
out
xor
ja
jecxz
sub
pop
sub
addr16
ljmp
mov
vpsubb
int
and
mov
jl
lods
in
out
test
scas
cmpsl
dec
ja
mov
mov
fs
sub
cwtl
or
cmp
js
es
jmp
divb
popa
in
testb
pop
inc
test
push
mov
std
sbb
push
lahf
jbe
sub
adcl
pop
loopne
cmp
push
jge
mov
xor
dec
rorb
xor
dec
push
testl
jmp
pop
cmpsl
frstor
and
sbb
packssdw
push
inc
xor
mov
mov
jecxz
in
inc
mov
std
pop
lret
stos
gs
movsl
pop
adc
mov
sahf
mov
mov
sub
pop
decb
mov
call
fs
gs
lret
dec
or
mov
mov
mov
fldl2e
ja
aam
in
push
fstp
jbe
loopne
xchg
sarb
iret
pop
and
mov
loope
cmp
push
aam
sbb
fnstcw
imul
sahf
adc
popa
dec
lock
fisubrl
jle
cmp
fdivrl
and
imul
mov
jp
xlat
arpl
fdivrs
out
xor
jl
and
bound
int
loopne
stos
xor
lds
shrl
aam
xor
pop
ljmp
scas
insb
push
mov
xor
aad
shl
loop
testb
ret
mov
lahf
push
jge
add
mov
cmp
cmp
add
mov
nop
mov
fistpl
iret
in
mov
sbb
daa
fsubs
int
clc
mov
cli
xchg
jl
loopne
sti
jp
sbb
sub
ja
mov
repnz
jnp
lds
xor
xchg
stos
adc
testb
stos
popf
enter
and
aam
in
dec
mov
stos
pop
mov
xor
nop
mov
inc
xchg
xchg
mov
in
mov
scas
nopl
jo
and
arpl
push
ss
cmp
jmp
jnp
in
arpl
lret
pop
pop
loop
cmp
and
popf
movl
aas
mov
shr
movb
or
test
sbb
fcmovbe
aas
sbb
sub
mov
dec
inc
test
idiv
insb
xchg
push
push
aad
loopne
adc
or
rcll
stc
mov
sub
and
mov
fmul
lods
dec
sub
cld
mov
mov
ret
sahf
scas
or
clc
js
in
lret
and
imul
inc
out
dec
cwtl
es
outsl
adc
xchg
fstpl
sub
sarl
mov
jge
neg
pop
jnp
add
test
or
popa
jmp
je
mov
ljmp
in
outsl
mov
mov
scas
dec
push
inc
dec
lods
ficomps
sub
mov
inc
inc
lcall
fdivrs
mov
scas
mov
push
pop
mov
mov
cmpsb
loope
sub
aaa
add
cmc
xchg
mov
mov
data16
pop
add
scas
xor
das
push
mov
gs
push
cmc
stos
testb
idivb
lea
fsubrs
in
insb
xchg
dec
dec
das
pushf
sub
pushf
jmp
add
data16
movsb
cli
inc
xor
imul
out
push
add
jmp
mov
dec
cmp
xchg
fwait
in
cs
lds
loop
data16
inc
out
pop
or
into
dec
cli
sbb
scas
fisubs
and
loopne
mov
mov
jns
cmpsb
pop
scas
stos
sub
mov
jno
lock
stos
mov
pop
lret
xor
test
data16
or
dec
cli
jmp
and
lock
in
push
or
jnp
rcrl
ja
cmc
out
add
push
pop
cmp
andb
cwtl
jb
fildll
mov
lcall
xlat
notb
cmpsl
mov
mov
divl
sbb
data16
popf
xlat
stos
xor
clc
lods
stc
test
push
fwait
cmp
jge
push
pop
lock
popf
in
stos
dec
push
aas
mov
in
movsl
and
xchg
or
dec
push
addl
pop
or
lock
test
rcrb
jb
pop
inc
popf
ret
popf
clc
es
ret
inc
sbb
jb
addb
insl
stos
insb
mov
cmc
ja
pop
stos
sbb
insl
movsl
js
xlat
jmp
mov
in
jns
push
outsb
insl
mov
jmp
insl
das
pop
fisubl
call
in
xchg
sub
flds
loopne
xchg
fwait
mov
aad
sbb
pop
fisttpl
mov
out
xchg
xchg
jmp
sbb
mov
jbe
mov
aam
cmp
push
mov
nop
cmp
nop
rclb
sti
xor
xchg
mov
outsb
scas
fisttps
xchg
stos
pop
notl
icebp
in
or
pop
xchg
pop
das
test
mov
loopne
fsubrs
mov
cmp
sbb
cmpsl
push
ret
mov
imul
jnp
mov
movsl
pop
jno
out
test
add
mov
cmpsl
and
test
cmc
mov
jl
xor
lahf
pop
aad
ficoml
xor
cmpsb
and
sub
lods
mov
mov
add
icebp
and
jb
fcompl
movsl
popa
lods
sahf
pop
test
mov
movsb
movsl
outsb
out
xchg
outsb
push
sub
jmp
pop
mov
mov
pop
xchg
stc
add
pop
out
push
shrb
mov
fbld
adcl
mov
out
push
pop
dec
loopne
cmpsb
ds
aad
insl
jp
sbb
frstpm(287
sbb
in
call
mov
adc
push
push
jb
aad
ret
cmpsb
stos
loop
dec
mov
adc
rcr
aaa
mov
dec
mov
stc
cltd
xlat
fnstcw
inc
xchg
mov
sar
andb
mov
inc
mov
mov
shrb
xor
arpl
xor
or
lahf
test
pop
cmp
fucom
add
rcr
sub
push
ss
into
out
ss
xchg
add
stos
mov
in
out
pusha
push
daa
adc
negl
js
sub
scas
xchg
js
mov
mov
mov
ja
cld
cmpsb
xchg
cmp
mov
push
ret
add
pushf
ds
test
mov
scas
mov
xor
call
push
cmpsb
insl
inc
cmp
sbb
push
data16
and
dec
movsl
push
cmp
outsl
orb
pop
scas
fmuls
inc
push
lret
adc
addl
push
sbbl
jne
pop
cmp
sub
push
popa
mov
add
jns
ret
pop
pushf
dec
fildll
ret
cmp
xchg
sbb
sub
jnp
mov
inc
push
in
ret
out
cmp
push
push
sub
cli
ret
fidivrl
cmp
fmul
pop
arpl
xchg
mov
aad
sub
stos
das
ficoml
int3
xor
jno
cltd
mov
mov
jmp
fnsave
dec
xchg
lods
cmpsb
push
mov
pop
pop
repz
push
xlat
sub
lret
push
stos
sti
push
push
jge
lret
js
in
movb
push
jae
shll
sub
aaa
ds
arpl
lods
aas
push
addl
call
cld
adc
jg
push
lods
fists
aaa
aam
vminss
je
jmp
popa
pop
fbstp
in
ficoms
fnstenv
push
imul
into
test
lcall
inc
out
jae
imul
rclb
pusha
dec
ja
in
jbe
push
jmp
mov
xor
ja
mov
test
adc
insl
mov
std
js
mov
sub
or
subl
mov
into
push
jmp
iret
push
pop
aam
push
stos
test
mov
sarb
jne
ja
pushf
addr16
cmc
cmp
lahf
jnp
icebp
cmp
sub
pop
or
sbb
lea
sub
stos
test
sti
pop
add
addr16
dec
js
icebp
jmp
lret
mov
loope
mov
mov
pop
push
mov
rclb
imul
scas
lock
sub
xorb
mov
push
and
and
mov
mov
std
icebp
or
push
aaa
outsl
ret
scas
xor
jecxz
int
xchg
xor
test
cwtl
xor
cld
imul
out
loope
and
jl
and
repnz
mov
push
pop
mov
push
add
aas
lahf
sbb
push
inc
mov
out
or
add
aas
es
sbb
and
xchg
data16
jbe
std
clc
mov
inc
jmp
jne
push
addr16
mov
jns
clc
imul
lcall
and
and
sti
out
mov
idivl
jnp
jne
adc
fcmove
jno
mov
xchg
out
xchg
pop
incl
out
stos
xchg
xor
out
iret
sti
fdivs
adc
icebp
pop
or
outsl
lods
dec
xchg
or
mov
ret
mov
jp
dec
inc
push
ret
scas
fistpll
mov
cmp
dec
sub
mov
pop
scas
jbe
xchg
addr16
xchg
lret
cmc
cmp
or
mov
movsl
roll
xchg
inc
pop
cmp
jns
enter
pop
sub
adc
cmp
mov
xor
jae
add
ret
sbb
mov
add
rolb
pop
test
int3
adc
fisttps
repnz
pushf
stc
bound
mov
mov
mov
int3
int3
sbb
jp
mov
adc
add
mov
jne
popf
je
cmp
daa
inc
shlb
ret
imulb
lahf
and
xchg
shll
dec
add
adc
adc
xchg
pusha
pop
aaa
cmpl
in
cmp
xor
mov
push
pop
outsl
xchg
add
mov
xor
ret
xlat
imul
sub
cld
ret
orb
push
adc
repnz
cmpsl
hlt
add
mov
mov
dec
lcall
es
cwtl
aad
faddl
dec
cmpsb
cmp
dec
adc
dec
mov
inc
push
lcall
loope
add
shlb
add
push
loop
pushf
dec
dec
cmc
add
mov
repnz
cmp
icebp
pop
pop
adc
dec
out
loop
subb
inc
lds
je
add
mov
cmpl
adc
out
push
ss
mov
xor
inc
xchg
orl
mov
cmpsb
stc
test
jge
ljmp
rolb
and
mov
add
pop
ja
sbb
and
ss
shll
int3
jbe
push
cmp
jb
sbb
add
xchg
sub
mov
add
int3
ret
loopew
jl
cli
mov
mov
push
xor
or
adc
iret
ret
and
xor
lds
cmp
mov
in
inc
pop
mov
mulb
cltd
jae
or
shlb
cmpsb
int3
sub
mov
aam
dec
out
aaa
and
sar
rcr
xchg
sub
sbb
and
mov
stc
aam
sub
adc
sbb
in
jnp
shll
inc
mov
pop
add
or
pop
int3
mov
push
mov
push
cmp
push
xchg
jp
dec
adc
xor
data16
lahf
mov
and
and
in
push
mov
in
rcl
cli
and
or
shll
push
push
mov
pop
push
popf
pop
aaa
idivl
sub
flds
stc
mov
enter
out
jl
das
inc
std
and
cli
inc
sub
cmp
fst
adc
imul
add
nop
les
dec
jmp
add
lods
mov
push
xor
fs
or
cmc
out
test
cmpsl
fcomp
xorl
test
xchg
cmp
lock
mov
and
inc
sub
mov
in
or
push
shlb
cmc
int3
dec
ret
les
add
mov
cmp
mov
shlb
inc
loopne
dec
xor
das
lcall
sbb
mov
mov
stos
aam
mov
jecxz
xchg
orb
cmpsb
addb
inc
mov
pop
sbb
xor
jmp
aas
xchg
dec
jae
sti
repnz
loopne
pop
test
jae
shrb
lcall
push
push
mov
jle
sub
mov
sbb
shl
mov
out
sbb
decl
xor
mov
cmp
in
jle
sbb
xchg
cld
cs
mov
lahf
stc
loope
dec
jle
push
xor
jno
adc
or
mov
pop
xor
test
sbb
or
pushf
mov
fsub
repnz
adc
cwtl
push
dec
jmp
inc
aam
jg
sbb
pusha
adc
imulb
data16
and
xchg
mov
cld
fwait
outsl
add
adc
test
in
mov
rcll
out
orl
in
inc
pop
ficoms
andb
in
int
pushf
movsl
hlt
clc
xlat
jns
push
sbb
pushf
lret
test
leave
mov
mov
inc
repnz
mov
pop
loopne
test
pop
test
and
cmp
sbb
add
push
stc
push
into
and
add
push
cmp
jo
test
inc
and
into
lods
pop
sbb
dec
jecxz
andb
pop
dec
call
mov
mov
stos
pushf
xchg
outsl
leave
cmpsb
mov
push
fildll
fists
adc
jo
popf
inc
mov
push
jmp
lea
jnp
mov
lock
push
lea
lods
arpl
arpl
les
stos
mov
mov
cmpsb
mov
daa
inc
test
adc
iret
xchg
dec
inc
xor
les
inc
fstl
and
aad
leave
adc
xor
out
data16
adc
addr16
sub
ret
int
adc
dec
xchg
call
jo
hlt
mov
mov
stc
das
or
jmp
dec
mov
jmp
out
lret
fisubrl
or
fadds
inc
mov
out
push
int
pop
jmp
sub
jbe
addb
call
fldenv
mov
add
scas
cmp
xor
xchg
repz
cmp
xorl
cmp
sbb
push
mov
insb
cmp
jno
inc
xor
je
add
leave
clc
test
loop
int
dec
pusha
inc
mov
or
adc
sub
push
xor
lds
test
ss
icebp
rcr
mov
lahf
lahf
lcall
inc
icebp
or
test
mov
lods
lock
loop
or
popf
inc
enter
push
movsb
inc
add
fistps
inc
push
mov
fbstp
pop
xchg
cmp
xchg
sub
adc
mov
rorl
sub
xchg
dec
jmp
es
int3
sbb
mov
or
popf
pop
cltd
aam
xchg
jge
add
jbe
cld
fnsave
sbb
push
jnp
sub
jb
iret
movsb
push
or
aaa
roll
jae
sar
xchg
fcmove
arpl
pop
mov
hlt
das
adc
subl
loop
inc
rolb
outsb
daa
adc
mov
mov
adc
xchg
sub
bound
pop
loopne
popf
popf
pop
sub
ljmp
push
sbb
and
insb
daa
gs
cmc
cs
std
pop
mov
lea
loop
into
inc
fildl
dec
cmp
andb
fs
rcll
ret
ljmp
ljmp
filds
sbb
ds
pop
cmp
fbld
scas
sahf
int
je
jbe
retw
add
and
hlt
pop
sbb
scas
nop
roll
jo
je
add
lcall
jmp
int3
mov
icebp
push
xchg
jmp
push
sub
mov
nop
stos
cmp
push
or
add
jecxz
jns
fidivs
scas
stc
jmp
ja
subb
imulb
pushf
pop
mov
mov
mov
or
es
push
mov
inc
lock
xchg
mov
dec
enter
shll
rclb
mov
dec
imul
sbbb
and
sti
inc
add
inc
leave
or
jo
xchg
leave
add
or
mov
sbb
mov
ret
loope
adc
call
mov
call
mov
or
addb
inc
sub
movsl
fwait
sub
pop
sbb
cmp
das
push
jae
jmp
stc
or
lea
push
add
fwait
sahf
adc
adc
pop
xchg
test
jb
push
or
mov
ret
fcoms
aas
ficoms
dec
rdtsc
adc
cs
fdivrl
mov
adc
mov
jge
add
xchg
adc
add
mov
jo
test
and
loop
pushf
into
cmp
rclb
xchg
stos
push
shrb
or
divl
outsb
xor
jb
bound
mov
jns
push
or
mov
int
data16
loop
jnp
bound
fdivl
jns
imul
mov
cmp
cmp
and
lea
adc
inc
xor
xchg
sbb
mov
stos
adc
add
iret
or
into
test
ss
fsubr
out
push
pop
xchg
mov
out
fisttps
sbb
insb
push
jno
lret
fs
pop
add
push
push
inc
pop
adc
cmpsl
nop
jl
pop
lock
ds
cld
or
jo
pop
add
mov
lock
and
push
add
cmp
mov
sbb
into
inc
push
sub
test
adc
test
pop
cmp
xor
mov
lea
mov
cmpsl
pushl
notl
mov
sbbb
cs
add
fs
mov
jns
les
popf
and
sbb
mov
push
or
cmp
xchg
mov
xchg
imul
rcl
pusha
xor
rcrb
and
mov
dec
mov
scas
pusha
add
mov
jne
or
jecxz
pop
into
push
push
push
in
je
lock
outsb
adc
pop
movsb
andl
xor
call
mov
xlat
idivl
insl
jmp
pusha
gs
into
dec
mov
sar
movsl
cmp
xor
adcb
pop
sub
lret
adc
test
xchg
lret
lock
mov
sbb
out
mov
pushf
xor
aaa
mov
adc
push
inc
outsl
cmpsl
cli
jmp
dec
cli
inc
in
jne
sub
sbb
add
in
xchg
mov
and
push
and
insb
inc
lret
adcb
aaa
test
hlt
inc
dec
pop
test
movsb
jge
cwtl
jmp
jnp
popf
cltd
pop
rol
aas
imul
or
or
cmp
orb
adc
ja
das
sub
jo
cmpsb
lods
das
jo
repnz
jne
cld
push
std
mov
test
adc
test
aad
mov
and
inc
xchg
push
mov
mov
pop
xchg
das
cs
push
aaa
push
ret
and
xchg
rcr
movsl
stos
mov
call
fidivrs
movsl
xchg
mov
cmpsb
adc
cmp
pop
loop
adc
and
ljmp
add
mov
jnp
test
repz
xchg
lret
movsl
cmpsl
aad
enter
lret
jmp
push
or
xor
mov
ffreep
add
adc
inc
sub
shlb
and
loop
lock
adc
mov
mov
push
out
push
repz
sbb
pushf
lret
adc
ret
adc
dec
popf
push
jge
pop
sbb
xchg
mov
sti
push
or
mov
test
int
mov
pop
push
mov
or
in
inc
bound
ljmp
into
sub
cmp
in
mov
clc
jmp
sbb
pop
lahf
in
jg
les
mov
mov
lods
aas
je
iret
nop
sar
test
cmp
pop
mov
push
cltd
jnp
pop
cmp
mov
xor
rolb
adc
in
loopne
pop
aam
repnz
fldt
xor
add
xchg
jb
and
mov
mov
scas
mov
xlat
mov
adc
ss
notb
dec
lea
and
xchg
adc
inc
xchg
xorb
pop
adc
sti
dec
mov
inc
cmpsl
adc
adcb
inc
mov
jnp
xchg
or
loop
movsb
repnz
adc
cmp
dec
les
lcall
sub
icebp
pop
test
arpl
adc
incl
test
xor
test
daa
cmp
out
or
cmp
pop
imul
dec
add
dec
fbstp
ret
jnp
das
out
or
rorb
push
imul
stc
adc
cmpsl
xor
push
xchg
rclb
lret
outsl
pusha
lods
xor
dec
pop
fldt
mov
pop
ds
cmpb
cmpsb
or
cmpsl
dec
jle
test
leave
cld
pop
sbbb
push
xor
dec
call
enter
jl
ss
stos
xchg
cwtl
adc
add
add
imull
sbb
pop
sub
in
fcmove
stos
add
dec
jle
cmp
into
fimuls
pop
jb
mov
mov
fisubl
jbe
xchg
sbb
test
ja
dec
mov
mov
cmp
pop
mov
mov
dec
adc
stc
sarb
arpl
jne
push
aaa
mov
add
jmp
std
push
dec
mov
xchg
cmp
sbb
scas
push
aam
shll
arpl
cmpsb
int3
pop
loopne
insb
mov
sbb
sub
fcoml
cld
mov
mov
rcrl
mov
jle
mov
repnz
xor
daa
lret
xor
inc
imul
sub
sbb
mov
mov
icebp
lods
add
in
in
nop
mov
pop
mov
or
cmp
mov
and
xor
stos
mov
dec
pop
pop
jecxz
mov
icebp
push
push
lahf
int
cs
add
jns
enter
nopl
or
mov
jns
movsb
xor
cwtl
xor
ret
movsb
popf
outsb
hlt
xor
dec
push
sub
adc
movsl
cmpsl
mov
jo
popf
rcrb
jge
and
xor
inc
in
jae
add
adc
push
and
repnz
das
rsm
data16
mov
jp
inc
arpl
cmpsl
pusha
push
lds
push
xor
or
lcall
and
pop
sbb
movsb
repz
mov
cltd
cmp
add
push
pushf
inc
xor
rcll
add
das
test
adc
rorb
jns
jb
popa
js
jmp
test
test
rclb
ret
movsl
cmp
xchg
lock
stc
out
mov
loope
popa
and
jmp
mov
inc
sbb
mov
xor
sbb
movsl
iret
cmp
in
jno
lret
xchg
mov
out
aam
es
sbb
xchg
add
jo
ret
cmp
cmp
mov
imul
aam
loop
add
jmp
dec
cmp
push
into
call
pop
pushf
cmp
pop
adc
test
ja
push
ret
daa
xchg
sbb
sbb
ficoml
push
mov
into
inc
hlt
push
sub
sahf
lea
lea
jge
cmp
js
inc
imul
fidivs
fiadds
movsb
leave
lahf
fcompl
jl
in
mov
cmp
mov
bound
jno
mov
and
sub
jle
mov
ljmp
pushf
inc
add
xchg
and
inc
cmp
jl
mov
daa
hlt
inc
mov
or
pop
out
and
sub
mov
in
mov
fisttpl
mov
sub
je
out
call
push
sbb
and
cmp
dec
pop
shll
adc
stc
sbb
xor
iret
jne
sub
jb
push
sub
push
shll
mov
and
mov
jne
ljmp
mov
push
and
jge
dec
pop
jle
xchg
fnstcw
jle
and
push
sub
aas
mov
cmp
lock
mov
xor
cmp
cmp
pop
in
les
lea
aaa
js
hlt
shr
cmpsl
notb
mov
push
aam
mov
mov
dec
fisubs
cld
ljmp
or
mov
jecxz
mov
ja
dec
stos
adc
fs
leave
fisubs
scas
lods
sub
push
in
sti
xchg
push
out
mov
insl
repnz
cmp
cwtl
fldenv
mov
sbb
test
mov
xor
ret
mov
push
push
and
in
mov
push
push
xchg
inc
pop
and
xchg
push
jae
mov
pop
aaa
enter
imul
call
push
cmc
dec
popf
out
ja
lds
mov
xor
sbb
sti
inc
push
insl
mull
mov
test
aam
push
xchg
jp
pop
mov
test
jp
lea
iret
mov
movl
mov
push
cwtl
aam
fwait
mov
xor
dec
divl
shrb
inc
icebp
sahf
gs
xchg
pop
mov
clc
lods
mov
push
push
xorb
xor
cmp
sbb
roll
xor
mov
aam
scas
dec
and
sahf
xchg
xchg
add
mov
int
inc
inc
jmp
jecxz
les
enter
xor
lret
pcmpeqd
adc
xchg
mov
xchg
mov
or
mov
sarb
pop
das
pop
mov
sbb
fs
sbb
fsubr
mov
mov
push
cmpsl
rcrl
adc
push
notb
cwtl
xor
push
out
jo
es
stc
xlat
push
fbstp
std
pushf
idivb
pop
in
xchg
outsb
les
rorb
add
mov
inc
or
clc
fildll
cmp
stos
aad
xchg
aam
mov
xorb
push
jne
es
and
dec
dec
sub
xor
xchg
mov
inc
divb
gs
lods
inc
inc
cmp
cmp
cmp
pop
inc
adc
test
out
fstps
sub
out
cld
push
push
cmc
push
jns
add
repnz
mov
fs
push
adc
das
mov
fidivrs
push
aaa
xor
mov
or
aas
push
cltd
adc
pop
jae
hlt
inc
gs
es
in
adc
fdivrl
data16
and
lcall
adc
pop
jne
movl
fwait
xor
jg
and
mov
push
daa
imul
loope
outsl
dec
fldt
fcompl
dec
cwtl
mov
cmp
xchg
sub
adc
rclb
cltd
ficoms
stos
ret
adc
inc
dec
push
inc
ret
jb
mov
dec
push
and
loop
shr
leave
cmp
enter
xchg
xor
stc
test
push
stos
dec
mov
fs
xlat
or
pushf
outsl
add
adc
dec
je
rorb
dec
and
subb
adc
xchg
shl
loop
cwtl
jns
push
push
shlb
jo
dec
das
sti
xchg
sarb
in
in
xor
jb
jmp
into
cld
rcrl
sub
iret
fst
sub
jle
adc
repz
movsb
push
pop
and
fldl
mov
mov
mov
mov
neg
outsl
cmc
mov
sbb
add
insl
lods
push
add
test
push
nop
inc
cltd
cld
mov
fs
lahf
shlb
pop
dec
ret
sbb
in
or
and
decb
pop
popf
sbb
cmp
push
out
sbb
fistps
cld
fwait
adc
sti
push
or
arpl
movsl
cmp
xorb
pop
sbb
push
loope
cmpsl
rolb
insl
movsb
out
pop
mov
int
sbb
adc
in
push
popf
pusha
jle
ret
orl
mov
push
pusha
insb
test
sub
cmp
inc
push
adc
aam
pop
jnp
in
jbe
push
out
xor
or
dec
fstpl
mov
and
cmp
push
cmpb
orb
test
and
add
flds
ja
xchg
jno
add
shlb
xchg
xchg
mov
sar
pusha
imul
je
jb
daa
cmp
cwtl
mov
and
adc
fdiv
add
add
loopne
cld
pop
dec
jge
pop
cmp
sub
cmpsl
push
or
mov
sbb
cmp
data16
fcmove
adc
cmp
test
xorb
testl
fidivl
ljmp
push
xor
mov
hlt
movsb
out
adc
shrl
add
pop
jmp
adc
jp,pt
jns
ret
fwait
iret
in
and
jbe
xor
dec
push
fisubl
and
ja
loopne
push
fisubs
popf
dec
xor
adc
cwtl
jp
scas
fwait
sub
shll
popa
xchg
jmp
adc
sbb
pop
in
inc
rcll
je
xor
movsb
pusha
mov
jmp
sub
jp
mov
cmpsl
xor
ficompl
ret
out
xchg
xchg
arpl
adc
inc
fiaddl
je
sub
xchg
add
loopne
jl
les
sub
loop
sbb
cmp
mov
xlat
xor
mov
mov
push
xor
lock
mov
push
insl
lcall
xor
xchg
lcall
outsb
push
mov
push
sti
in
outsb
imul
mov
add
cmp
popa
sbb
sub
add
rcl
addr16
jb
cltd
or
push
adc
mov
or
push
mov
mov
ds
push
jae
cmp
cs
pushf
and
cmpsl
mov
movsb
mov
das
sbb
ficoms
pop
loopne
mov
jae
nop
aam
ljmp
rol
inc
je
loopne
lods
mov
jo
mov
xor
das
pop
pop
mov
push
pop
jmp
fcoml
inc
jle
ss
mov
push
mov
test
test
adc
sub
sbb
add
sbb
fbld
ds
sbb
inc
jbe
jmp
pop
insb
or
xor
sub
inc
adc
sbb
imul
insb
mov
lock
test
aad
fscale
clc
jo
push
mov
in
mov
mov
jbe
xchg
pushf
sub
aas
jge
lcall
adc
cmpsb
bts
lock
mov
int
andl
dec
in
adc
test
lock
dec
aas
xchg
outsb
jns
movsl
cs
popf
push
jecxz
push
mov
enter
call
xchg
jl
ret
orl
ljmp
pop
mov
push
sahf
cltd
and
pop
pop
loope
mov
testb
mov
repnz
xor
or
mov
sub
lods
add
fbld
sub
call
pop
test
fists
andl
and
pandn
test
xchg
lcall
jns
push
aas
aam
gs
scas
vpcmpgtd
push
hlt
shl
daa
mov
ret
insb
test
insb
add
in
xchg
je
pop
repz
cld
scas
or
lret
mov
and
mov
push
sbb
addr16
call
mov
jb
out
jnp
ss
sub
jo
xchg
sarl
jmp
cs
jnp
push
mov
lods
mov
ret
ljmp
push
fistl
push
xchg
adc
out
scas
cwtl
lahf
fbstp
xor
mov
mov
hlt
movsl
addr16
sub
adc
test
jg
aad
pop
sub
mov
stos
pop
lods
shl
mov
jmp
pop
cmp
jmp
movsb
lcall
cmp
mov
dec
iret
xchg
sahf
repnz
sub
jmp
sbb
data16
lds
mov
add
jecxz
mov
or
jns
xchg
dec
imul
and
out
push
je
pop
mov
or
outsl
xchg
test
inc
jg
nop
push
call
sub
inc
test
cltd
xor
mov
push
adc
call
enter
inc
lret
cmp
lds
jns
lahf
dec
cmpsl
arpl
int3
add
dec
repz
in
into
pop
push
mov
mov
js
cli
gs
push
push
icebp
notl
sbb
das
movb
sbb
push
mov
sub
lock
inc
rorb
fucomp
adc
or
cmp
outsl
movsl
hlt
cmp
fwait
cmpsb
scas
mov
ficomps
bound
sti
and
dec
or
push
ffree
lret
push
pushf
shll
dec
push
stos
aaa
shll
xchg
or
stc
lds
popf
aas
inc
sti
iret
adc
xlat
das
out
cmp
add
mov
test
sbbl
adc
pop
testl
inc
xor
xchg
adc
andb
fwait
pushf
mov
cld
cmc
inc
jo
mov
nop
mov
inc
xor
iret
xor
xlat
aas
mov
xchg
adc
sub
popa
inc
pop
mov
and
cmpsb
mov
mov
xor
pop
adc
mov
out
in
loopne
lahf
daa
push
ja
add
out
bnd
js
fists
dec
fwait
int3
jle
push
sahf
icebp
adc
iret
push
cltd
fs
xor
or
sub
mov
lret
mov
mov
sbb
loopne
cmp
mov
adc
mov
addl
shll
mov
xchg
loopne
jmp
je
jp
nop
sbb
movsb
ret
push
sahf
fdivrl
pusha
mov
hlt
xor
mov
push
bound
or
xor
lret
push
xor
arpl
fldt
lock
fldcw
pop
fwait
mov
dec
lcall
add
and
call
loop
pop
jbe
fadds
outsb
movsb
rorb
xor
lahf
jno
sahf
cmpb
shrl
ds
adc
sbb
test
adc
sbb
movsb
jo
fnsave
pop
push
cmpsl
sarl
testl
clc
xchg
in
xchg
nop
scas
xchg
cmp
and
das
inc
or
ret
in
cltd
int3
mov
insb
test
add
in
add
sar
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpl
mov
jne
lea
push
call
mov
mov
lea
push
push
call
stos
mov
scas
jne
cmp
jne
lea
jmp
push
imul
insb
insb
outsl
arpl
push
imul
jb
add
jb
jne
insb
push
jb
je
arpl
mov
or
je
mov
xchg
mov
lea
cmpl
je
push
push
push
push
call
mov
mov
add
push
push
push
push
call
mov
push
mov
add
pushl
pushl
push
push
call
mov
cmp
jne
incb
mov
add
pushl
movb
call
popl
push
push
push
push
mov
sub
mov
xor
or
je
js
lods
cmp
je
jmp
cmp
je
inc
dec
jmp
mov
jmp
cmpb
jne
and
rol
sub
mov
add
add
sub
jmp
pop
pop
pop
pop
jmp
mov
mov
add
mov
sar
rep
mov
and
rep
pop
push
push
pushl
call
add
cmpl
jne
push
push
pushl
call
mov
or
je
mov
xchg
mov
mov
sub
je
mov
shr
xor
mov
add
cmpl
je
mov
sub
shr
mov
add
add
mov
shr
cmp
je
cmp
je
cmp
je
jmp
mov
and
add
jmp
mov
and
add
jmp
mov
and
add
jmp
orw
add
loop
jmp
mov
mov
or
je
add
lods
or
je
add
mov
lods
stos
jmp
mov
mov
add
mov
test
je
add
mov
push
call
test
jne
push
call
mov
movl
mov
mov
test
jne
mov
add
add
mov
mov
add
add
test
je
test
jne
add
inc
inc
push
and
push
pushl
call
test
pop
jne
test
jne
push
mov
add
push
push
lea
push
push
jmp
and
mov
cmp
jne
push
mov
dec
shl
mov
mov
mov
add
mov
add
pop
jmp
push
mov
add
push
push
lea
push
push
jmp
mov
addl
jmp
mov
mov
mov
add
mov
jmp
mov
mov
add
push
push
push
push
push
pushl
push
call
pushl
push
movzwl
movzwl
lea
lea
lods
test
je
add
cmp
loopne
jne
push
push
pushl
andl
pushl
add
push
call
pop
lods
lods
mov
loop
call
pop
mov
push
add
pop
or
mov
popa
jne
mov
ret
push
ret
mov
lea
push
push
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
call
add
pop
push
lea
push
push
push
call
push
call
imul
gs
xor
cs
insb
add
imul
jae
jne
gs
xor
fs
insb
add
jae
popa
addr16
outsl
js
add
jo
imul
dec
inc
inc
inc
push
and
push
dec
push
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
pushf
lods
or
je
xor
mov
shr
jae
xor
dec
jne
jmp
xchg
pop
ret
xchg
nop
add
inc
add
mov
add
adc
add
lret
and
add
loopne
add
pop
add
inc
add
rolb
adc
add
add
inc
add
rolb
adc
add
add
pusha
add
pusha
add
adc
add
pop
add
add
lock
add
add
add
pusha
xor
add
add
pusha
add
loop
add
add
in
push
add
add
call
mov
mov
push
push
lea
call
test
jne
or
add
ret
mov
lea
push
push
lea
call
test
jne
or
add
ret
mov
add
ret
add
add
add
push
pop
or
or
adc
sbb
sub
cmp
pusha
jo
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
or
or
or
or
or
or
movups
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
mov
push
mov
push
cmp
jb
push
mov
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
pop
mov
mov
mov
sub
shr
mov
sub
and
shr
add
pop
mov
pop
pop
ret
mov
mov
mov
mov
lea
mov
add
ret
sub
push
push
push
mov
push
mov
mov
xor
lea
xor
rep
mov
cmp
mov
jbe
xor
mov
mov
lea
inc
inc
cmp
mov
jb
mov
mov
mov
mov
mov
xor
mov
movl
mov
lea
mov
mov
shl
add
cmp
mov
ja
mov
mov
mov
add
cmp
mov
mov
jl
mov
mov
mov
mov
shr
mov
and
sub
add
mov
mov
mov
mov
mov
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
mov
add
inc
dec
add
cmp
mov
mov
mov
jge
cmp
je
pop
pop
pop
xor
pop
add
ret
mov
xor
test
jbe
mov
mov
test
je
mov
and
mov
mov
xor
mov
mov
lea
inc
mov
mov
inc
cmp
jb
pop
pop
pop
mov
pop
add
ret
push
push
push
mov
push
mov
cmpl
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
shr
mov
and
cmp
jae
mov
mov
shr
xor
mov
mov
jmp
cmp
jae
cmp
sbb
add
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
jae
mov
jmp
cmp
sbb
add
mov
mov
add
mov
mov
mov
sub
sub
pop
shr
mov
add
mov
pop
pop
mov
pop
ret
push
push
push
mov
xor
xor
lea
mov
push
call
mov
pop
mov
add
shl
add
inc
cmp
jb
mov
lea
push
push
call
push
push
lea
call
push
push
lea
call
push
push
lea
call
mov
pop
pop
add
pop
ret
mov
mov
mov
push
mov
lea
mov
movl
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
rep
mov
stos
call
pop
ret
sub
push
mov
push
push
lea
push
push
mov
call
test
jne
mov
mov
rep
stos
xor
push
mov
call
mov
inc
cmp
jb
lea
lea
push
mov
call
test
jne
pop
pop
pop
pop
add
ret
xor
mov
call
cmp
jae
mov
mov
add
and
mov
inc
jmp
jne
push
mov
call
add
test
jle
cmp
jge
mov
dec
mov
inc
test
jg
jmp
cmp
jne
push
mov
call
add
jmp
push
mov
call
add
test
jle
cmp
jge
movb
inc
dec
test
jg
cmp
jl
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
lea
push
call
test
jne
pop
pop
pop
pop
add
ret
lea
push
lea
call
test
jne
pop
pop
pop
pop
add
ret
movb
xor
cmpb
jne
inc
cmp
jb
jmp
movb
mov
lea
mov
rep
pop
pop
pop
mov
pop
add
ret
call
nop
pop
sub
ret
sub
mov
push
push
push
movl
mov
push
xor
test
mov
mov
jbe
lea
call
cmp
jae
mov
mov
mov
inc
inc
mov
mov
jmp
cmp
jae
add
mov
and
shr
lea
cmp
mov
jne
lea
call
mov
xor
push
call
mov
pop
cmp
jb
mov
mov
inc
mov
mov
mov
mov
shl
and
or
mov
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
xor
push
call
mov
pop
mov
add
add
mov
mov
mov
xor
push
call
mov
pop
test
mov
je
cmp
jb
mov
lea
cmp
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
lea
call
add
lea
jmp
cmpl
jb
mov
mov
shl
mov
inc
mov
mov
mov
mov
and
add
or
mov
cmp
mov
mov
jae
mov
mov
mov
sub
add
shr
mov
mov
sub
and
shr
add
cmp
jae
mov
test
je
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
inc
lea
cmp
mov
jae
mov
sub
inc
mov
mov
mov
cmp
jb
mov
add
mov
mov
jmp
mov
call
test
je
cmp
jb
mov
mov
pop
pop
pop
mov
pop
add
ret
pop
pop
pop
xor
pop
add
ret
add
push
add
jne
xor
add
xor
aas
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
aas
add
aas
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
les
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
inc
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insl
add
dec
add
add
outsb
add
add
js
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
insl
add
dec
add
add
outsb
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
adc
add
add
call
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
xchg
ja
ja
ja
ja
ja
ja
ja
ja
ja
add
add
add
add
add
ja
ja
ja
ja
add
ja
jo
clc
clc
clc
mov
ja
xchg
divl
clc
xchg
xchg
mov
ja
ja
ja
clc
jo
clc
jo
mov
add
clc
clc
jo
add
pop
mov
ja
jo
xchg
clc
jo
incl
mov
clc
clc
jo
incl
ja
ja
divl
clc
jo
clc
add
ja
add
ja
ja
clc
jo
ja
add
jo
clc
mov
xchg
clc
divl
ja
add
ja
xchg
divl
mov
add
add
cmpb
jo
jo
mov
idiv
jo
add
add
ja
js
xchg
div
jo
mov
add
add
jo
clc
mov
xchg
mov
clc
divl
mov
js
ja
ja
mov
add
add
pop
ja
add
ja
clc
ja
decl
js
add
ja
xchg
ja
ja
js
ja
add
ja
xchg
ja
ja
add
js
js
jo
divl
js
js
jo
ja
add
xchg
clc
xchg
mov
mov
ja
add
ja
clc
ja
clc
jo
js
js
mov
xchg
clc
divl
ja
add
ja
ja
mov
ja
ja
pop
jo
ja
add
xchg
clc
xchg
ja
js
js
xchg
ja
clc
clc
mov
ja
jo
xchg
xchg
pop
js
ja
ja
ja
mov
js
ja
clc
push
pop
clc
mov
ja
clc
ja
decl
