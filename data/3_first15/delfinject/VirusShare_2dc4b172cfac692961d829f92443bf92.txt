push
push
push
sbb
dec
enter
jl
outsb
in
aas
lods
loop
cmp
into
sub
insb
jb
add
fstps
add
dec
outsb
mov
sub
push
frstor
roll
pop
shrb
aaa
icebp
stc
jg
xchg
pop
jbe
jb
js
mov
mov
popa
mov
daa
scas
jne
inc
jns
jle
stc
mov
subb
mov
into
in
jb
push
push
int3
sub
testb
jp
mov
xorb
lcall
push
cmp
pop
shl
dec
flds
shll
call
dec
pop
mov
add
sbb
mov
push
scas
js
aam
pushf
pop
pop
enter
setle
idivl
xor
jno
lret
jmp
jmp
adc
aas
pusha
cwtl
inc
mov
push
and
rolb
mov
rorb
imul
stos
dec
jbe
shl
outsl
outsl
out
pop
test
xchg
sbb
lahf
movl
or
xchg
adc
inc
xor
je
add
push
mov
and
test
cwtl
xchg
mov
les
ljmp
inc
jo
mov
stos
out
xor
pop
adc
inc
xorl
jp
dec
rclb
cmpsb
mov
mov
push
ret
test
dec
das
jb
mov
push
into
imul
sub
jo
dec
and
add
int3
mov
jp
pop
mov
aam
lcall
inc
mov
pusha
dec
add
pop
xor
popa
es
in
inc
pop
pop
cwtl
mov
filds
and
dec
and
sbb
jle
out
add
std
pop
ja
call
iret
adc
lods
jb
mov
inc
insl
xor
inc
mov
mov
cmpsl
dec
loope
iret
or
and
repnz
jae
mov
imul
adc
ret
mov
int3
and
mov
push
cmpsb
add
es
mov
into
jae
imul
sbb
jno
push
cmc
cmpsb
mov
add
or
inc
push
mov
js
jne
shrb
dec
int
sub
cwtl
jns
sub
mov
adc
jg
jp
cltd
addb
stc
inc
into
in
sub
mov
pop
inc
sbb
ror
test
fsub
fistps
pop
loop
cmp
imul
cmp
and
dec
fs
daa
loopne
jns
arpl
jns
jbe
mov
jno
insl
jl
sub
jg
jg
lods
pop
inc
stc
push
into
arpl
test
adc
sbb
dec
je
inc
pop
js
dec
sub
cwtl
xchg
sti
cmp
dec
mov
cmp
and
add
inc
sub
lods
inc
jne
cmp
mov
scas
pop
push
push
imul
cmp
testl
fwait
jecxz
outsl
sbb
cltd
popa
or
pop
adc
ret
stos
mov
out
xlat
cmc
mov
inc
outsb
test
sahf
fldenv
xchg
cmp
scas
mov
add
sub
or
push
sub
xchg
sbb
jp
movl
inc
int
icebp
mov
jno
into
xchg
push
inc
pop
in
movsb
lock
sbb
les
jbe
dec
arpl
ret
je
fisubs
xor
outsb
jne
jle
hlt
add
push
inc
stc
xchg
adc
cmpsl
cmpb
fdivl
mov
dec
dec
sub
int
pop
fcomps
push
pushf
enter
cmpsl
shr
ja
adc
int3
jo
xbegin
cmpsb
stc
fidivl
les
decl
aas
jg
add
rcrl
repz
ljmp
popa
xchg
lock
push
jne
movsl
add
ret
addr16
xor
outsl
mov
test
shl
cmp
idivb
pushf
sti
jno
fidivl
push
lret
xchg
cmpsb
mov
ret
mov
ret
or
jle
je
add
push
adc
jp
pop
push
xchg
sub
dec
lods
or
pop
scas
push
scas
push
cmpl
push
subl
enter
mov
jmp
mov
out
lods
roll
and
movsb
cmp
jns
jno
dec
mov
arpl
and
add
lds
cwtl
fidivl
dec
pusha
jne
mov
pop
and
cmp
dec
outsl
pop
mov
fisttpl
stc
push
insl
push
jbe
arpl
sti
or
cwtl
rcrl
dec
xchg
mov
rorb
sub
pushf
ror
inc
int
ljmp
mov
adc
mov
jae
jp
fs
ficomps
inc
mov
and
jg
sub
xchg
sbbl
jne
xchg
out
repnz
gs
cld
or
adc
jge
mov
sub
lods
rorl
add
cmc
xorb
test
push
cmp
nop
test
out
mov
xchg
mov
push
mov
ret
push
icebp
dec
sbb
inc
mov
adc
std
incb
outsl
enter
inc
jno
mov
mov
test
or
nop
push
je
add
aad
pushf
mov
sbb
outsb
lret
adc
jo
into
pop
in
add
imul
movsb
xchg
lds
dec
add
lret
ds
out
add
jle
cmc
lret
ficomps
xchg
jb
int3
in
cld
xchg
jbe
xchg
or
popf
lods
push
pop
jne
pusha
dec
xchg
mov
push
arpl
jb
cld
cwtl
dec
out
push
movsl
sub
ljmp
dec
icebp
push
jno
adc
ja
push
pop
in
bnd
leave
pop
xor
pop
jns
push
ja
sbb
sub
lea
into
jo
cmpsl
popa
test
pop
lret
pusha
pop
mov
js
and
jo
ret
jae
push
pop
ret
fidivs
out
stos
inc
lret
push
jg
mov
into
push
mov
lahf
push
cwtl
insb
push
out
xor
pop
sbb
jg
push
inc
cmp
sbb
test
inc
adc
cmp
jno
aas
dec
and
testb
fdivs
cmc
fidivrl
adc
cmp
mov
mov
enter
adc
popa
movsl
xchg
xchg
shlb
jno
inc
adc
cmp
cs
imulb
push
add
jns
pop
inc
test
lret
and
jnp
jno
cmpl
mov
mov
rcl
adc
insb
test
call
roll
jg
lcall
je
or
aaa
push
lahf
jge
repz
sub
loop
andl
repnz
lret
imul
push
pop
jge
ds
mov
cld
mov
jnp
int3
aas
aam
jno
hlt
push
int3
bound
and
bound
imul
push
add
daa
insb
pop
mov
add
sub
lock
mov
subl
pop
jno
dec
stc
pusha
int3
xor
enter
jge
push
lds
out
mov
aam
xor
cmp
jo
mov
jb
and
es
sub
jge
inc
jbe
xor
dec
pop
lret
sahf
sbb
jnp
push
mov
hlt
add
lea
fldt
aam
test
pop
sbb
pop
movsl
xor
sbb
idivb
shll
dec
sub
inc
insb
or
xor
jns
jne
inc
int
mov
pop
jg
sub
push
push
arpl
aas
clc
adc
shrb
sub
inc
push
xchg
lahf
pop
push
cmp
sbb
iret
xchg
dec
inc
aam
jns
mov
orl
jns
jge
aad
gs
cli
loop
sub
dec
pop
xchg
daa
out
shll
push
clc
pop
sub
dec
xor
push
aad
repz
clc
lock
push
je
jne
int3
push
pushf
aaa
pop
repz
jl
call
lds
sti
cwtl
test
push
pop
or
cmp
mov
jno
xor
aam
jnp
or
xor
jp
pushf
lcall
scas
push
test
fildll
je
adc
xchg
and
mov
sub
cld
sbb
or
dec
adc
pop
xchg
xlat
xchg
dec
movsb
hlt
jecxz
or
movsl
add
cmpsl
mov
call
outsb
adc
nop
cmpsl
lds
add
andb
jns
in
pop
outsl
xchg
cmc
xchg
jbe
pop
pusha
xchg
inc
xchg
lahf
cmp
fnsave
lret
loop
ss
fimull
jns
lcall
shlb
push
mov
mov
jbe
pop
sub
dec
pop
lret
imul
jmp
outsb
ja
lock
es
dec
cmp
mov
movsl
add
push
ret
sub
and
fldl
addr16
pusha
out
and
out
ficompl
and
leave
cmp
jnp
fidivrl
or
leave
and
adc
dec
lods
push
cli
ss
movsl
push
add
inc
rorb
jo
loope
outsl
push
or
fidivrl
inc
jg
das
gs
dec
aam
lahf
fdivs
mov
dec
and
sub
cwtl
sahf
mov
mov
dec
fstl
push
push
jb
rorb
pop
mov
jno
lret
push
js
faddp
inc
insl
rcll
add
add
xor
sbb
dec
push
shr
sub
pushf
ljmp
mov
cmpsl
mov
xor
push
test
stc
xchg
pop
popa
mov
inc
xlat
daa
pop
cmp
and
inc
test
adc
in
orb
jae
scas
fmul
outsb
enter
push
adc
sub
dec
loopne
mov
add
iret
jo
hlt
imul
mov
sub
and
mov
ljmp
dec
nop
mov
in
out
fbld
clc
jb
sbb
xor
sbb
inc
cmpsl
clc
dec
scas
xchg
mov
addr16
push
pop
mov
pop
icebp
ja
das
mov
mov
test
sub
mov
pop
push
xor
fnstsw
popa
lods
jne
fwait
push
sub
gs
sub
jge
fisubl
jae
scas
push
inc
mov
test
fwait
dec
fucomi
adc
jle
stc
cmp
jno
out
sbb
jg
jp
dec
jl
stc
daa
js
divb
enter
nop
imul
shrl
mov
mov
fcmovne
mov
mov
cmpsl
inc
xchg
js
test
adc
pushf
lcall
sahf
cmpsl
dec
test
nop
push
xchg
or
push
cwtl
xchg
mov
xor
addl
popl
stos
std
insb
fsts
lds
or
mov
pop
mov
or
push
outsb
cltd
jp
mov
or
in
ficomps
mov
popf
xor
outsb
les
xchg
sbb
and
clc
pop
sub
mov
mov
lods
push
xor
fsubl
cmp
mov
test
or
xchg
push
xchg
fisttpl
mov
popw
leave
xchg
add
sbb
ss
pop
inc
in
cmc
inc
push
sahf
daa
mov
xchg
xor
lcall
mov
mov
leave
shl
outsl
adc
lret
ss
push
rcrb
dec
lods
cltd
clc
lods
les
cmp
xchg
idiv
xor
inc
out
movsl
stc
jl
cltd
roll
xacquire
xchg
call
stc
clc
push
pop
push
out
jns
std
je
lret
or
dec
imul
sbbb
scas
adc
into
pop
data16
loope
mov
fs
aas
dec
dec
pushf
call
je
push
lock
ja
cmc
call
jns
fbstp
aas
cmpl
andl
or
mov
inc
popf
sbb
fidivrl
xchg
cmc
dec
fs
or
jo
inc
insl
or
adc
jp
push
sbb
mov
lret
sahf
sub
in
pop
fucomp
fistl
gs
lret
mov
mov
jmp
ret
out
cmp
jns
sbb
push
sub
imul
out
imul
outsb
cmp
jecxz
lea
mov
pop
xchg
pop
dec
mov
jns
and
or
pop
inc
sbb
in
and
cmpb
or
pop
lcall
mov
int
cmc
push
adcl
xchg
sbb
fcomps
jbe
lahf
call
fwait
rcr
jo
shl
lock
lds
shrl
leave
xor
mov
pop
fwait
cmp
add
pusha
cmp
sub
dec
pop
cmpsb
dec
inc
and
dec
inc
xchg
inc
cmc
fcmovne
sub
subl
jne
addl
sahf
nop
fnstenv
adc
les
fldl2e
je
fsubs
push
adc
addr16
cmpsl
xor
push
or
xchg
sbb
sbb
stc
pop
outsb
adc
push
sti
lock
add
sbb
fmull
sbb
push
and
xchg
push
lret
inc
lret
lods
mov
push
repz
mov
pop
adc
sub
or
inc
lret
cmpl
mov
inc
inc
push
je
gs
jg
push
cmpsl
hlt
pop
push
scas
shlb
fsubrp
sbb
sahf
mov
repz
lret
cmp
xchg
dec
xchg
jle
cltd
lods
data16
inc
jp
ljmp
je
daa
dec
mov
fiaddl
rcl
inc
orl
setl
xor
add
lahf
jp
push
fdivl
inc
addr16
andb
aam
shrb
rcll
lds
gs
push
fistl
loopne
push
xlat
out
test
inc
movsl
jmp
shr
mov
pop
jno
mov
out
popa
ljmp
xchg
sbb
subps
lret
movsb
push
inc
or
aas
or
arpl
or
xchg
jb
push
and
mov
inc
in
mov
xlat
bound
add
jecxz
nop
xchg
into
out
clc
mov
test
jb
jb
inc
dec
sub
inc
fcomi
cld
fldcw
jne
and
inc
clc
fists
hlt
or
push
sar
xor
dec
aam
cmp
cmpsl
lret
insl
imul
out
mov
mov
mov
loopne
popf
push
mov
xchg
ret
imul
addl
xor
adc
cmpsb
in
xor
pop
int
pop
subl
arpl
inc
sahf
adc
adc
dec
push
mov
cmp
push
jae
jg
mov
mov
inc
xlat
adc
inc
cmpsl
sub
sahf
fsubrl
jle
test
push
aad
lods
sbb
cmp
xlat
jecxz
cmp
dec
xchg
jne
jnp
inc
cmp
dec
into
and
xor
jo
and
stos
fcmovne
in
xchg
mov
pop
dec
xchg
pusha
pop
lea
xchg
popf
repnz
pushf
cmp
adc
adc
lret
sub
fwait
lea
mov
daa
fwait
mov
test
mov
pop
and
popf
sub
js
adc
jg
vmptrld
lahf
push
sbb
dec
pop
adc
sub
lcall
cmpsb
lods
call
popf
mov
pusha
xchg
mov
call
stc
mov
inc
or
xchg
push
mov
loopne
pop
shll
push
sub
nop
push
pop
adc
ret
push
push
jge
flds
pop
jmp
sbb
xchg
clc
lahf
sub
push
dec
dec
ret
lcall
leave
xor
xor
je
push
es
mov
in
shll
adc
addr16
dec
insl
je
rcl
stos
aam
ss
popa
mov
data16
xor
pop
jae
cmp
jae
pop
test
pop
rcl
andl
or
es
pop
aad
stos
test
pushf
jmp
test
cmp
push
add
lahf
dec
iret
sbb
cltd
adc
adcb
lea
and
icebp
std
push
loop
add
popa
push
mov
pop
inc
imul
sub
sub
pop
aaa
push
lahf
mov
push
pop
pushf
fcmove
mov
xchg
sub
lret
ret
mov
test
add
mov
xlat
add
enter
inc
mov
adc
test
fmull
sbb
insl
cmpsl
in
pop
aam
stos
sahf
xchg
scas
int3
dec
repnz
sub
jmp
and
or
push
ljmp
lret
mov
and
mov
adc
insl
push
sub
push
sarl
out
push
or
sbb
hlt
jb
repnz
lock
into
jae
xchg
ja
call
jg
dec
xor
arpl
icebp
cmp
and
sarl
jns
pop
shlb
adc
adc
lds
insb
mov
jge
xor
sbb
icebp
out
rcrb
mov
out
inc
fcoms
fimull
jge
cmpsl
mov
add
or
jae
mov
or
jmp
stos
movsl
xchg
sub
bound
jl
dec
push
jno
xchg
clc
loop
in
fbstp
stc
push
dec
sahf
jo
pop
mov
psubsb
jne
push
mov
test
jns
into
sub
sti
push
jle
ret
xchg
aas
inc
stc
xor
test
hlt
mov
inc
mov
mov
lahf
lahf
xorl
ret
notl
cmp
dec
and
outsb
cmpsl
cmp
xchg
jne
sbb
cmp
and
mov
ret
pushf
inc
xchg
jmp
sub
stc
sbbb
and
dec
lret
loope
mov
out
mov
dec
adcb
lds
adc
xchg
imul
test
out
mov
mov
roll
pop
add
inc
aam
cwtl
aad
xor
shl
jge
jne
pop
outsl
imul
inc
fcomip
pop
in
icebp
imul
cmp
xlat
xlat
mov
xchg
cmp
andb
inc
mov
dec
mov
jo
js
inc
scas
ror
jns
mov
cmc
test
cmp
decl
mov
shlb
jg
movsb
adc
cli
insb
enter
push
je
dec
repnz
paddq
inc
pusha
mov
aam
fimuls
inc
mov
xchg
cmp
jl
dec
jbe
jbe
and
leave
and
int
popf
dec
and
mov
sbb
inc
lahf
push
jle
jecxz
jne
int3
push
lret
arpl
icebp
cmovno
push
inc
rorl
loope
cmp
pushf
stos
test
dec
dec
lods
dec
add
inc
and
jns
dec
in
pop
push
lret
push
push
push
mov
pop
jno
shll
mov
lret
or
pop
ss
movsb
dec
clc
xor
fisubs
shr
and
xor
xchg
dec
insl
fs
mov
mov
loopne
jo
push
ret
fnstcw
cltd
and
data16
rcrb
add
jl
addb
addb
xchg
sub
dec
sub
fucomi
mov
cld
push
cmpsb
repnz
xchg
xor
inc
dec
or
data16
ja
mov
mov
sbb
dec
gs
push
xchg
js
in
jle
sub
push
scas
xchg
pop
fsubrs
fwait
lods
cmpsb
mov
jmp
xorb
and
ret
sub
outsl
cmp
test
inc
in
fisubrl
and
jp
mov
inc
push
pop
ret
pop
insl
decb
jnp
mov
jo
jno
dec
adc
int
testb
btc
inc
sbb
and
shrb
shlb
dec
mov
cmp
cmp
push
push
pop
dec
xchg
inc
cmpb
jne
test
dec
push
xor
or
cmp
test
lea
pop
movsb
in
jns
push
mov
xor
js
mov
inc
int3
inc
cmp
push
jl
jnp
push
fidivrs
fistl
adc
xor
nop
and
flds
pop
mov
nop
mov
insl
pushf
in
push
jle
or
jecxz
insb
push
push
int
test
sbb
add
inc
push
addr16
push
clc
push
push
dec
outsb
fbstp
add
dec
and
jbe
inc
or
xor
jge
ret
mov
mov
push
outsb
push
or
pop
add
arpl
cmp
popa
test
xor
push
ret
stos
bound
addr16
jno
ret
fcoml
jo
out
andl
clc
xor
sub
push
imul
movsb
or
jne
mov
fs
out
sti
jge
mov
insl
push
pop
jl
mov
addr16
or
jb
push
arpl
xor
jg
jge
jb
fwait
out
int3
insl
test
adc
inc
pushf
je
out
pop
pop
pop
popa
inc
adc
insl
xor
fsubl
adc
inc
pop
es
pop
mov
or
scas
nop
lahf
das
push
loopne
mov
xor
add
xchg
cmp
aam
popf
or
cwtl
and
push
aaa
loope
rorb
inc
cmpsb
adc
shll
and
xor
xchg
adc
sbb
lock
pop
test
scas
cmp
jg
sbb
push
pop
in
xor
pop
int3
dec
push
std
pusha
cmp
cltd
mov
mov
enter
and
cmp
mov
push
addr16
pop
lahf
xchg
ss
xchg
aam
std
xor
jno
js
and
icebp
imul
mov
xchg
addr16
lcall
aam
les
ja
jg
clc
inc
pop
add
push
out
jne
das
inc
sub
data16
outsl
shlb
jmp
sub
jnp
icebp
mov
jle
in
arpl
mov
jmp
sbb
in
js
test
xchg
xchg
int3
aas
dec
mov
or
inc
fistpll
rolb
or
mov
cmp
popf
and
popa
movsl
mov
jg
jno
mov
cmpsl
ljmp
and
test
mov
shrl
lock
adc
sub
enter
fistps
insb
aam
hlt
ja
jnp
cmp
push
lock
push
dec
xor
pop
pop
jbe
xchg
leave
inc
popa
pop
js
rcll
rcll
pop
push
xchg
movb
rorb
sbb
cmc
fists
imul
test
or
mov
iret
xlat
dec
hlt
push
dec
divb
sub
and
cmp
lock
mov
add
rolb
gs
jae
gs
pop
lret
cmp
push
aam
repnz
lret
pop
jbe
nop
push
sbb
outsl
cltd
xchg
inc
inc
pushf
cwtl
in
jge
or
repz
faddp
jns
jbe
icebp
pop
popf
jp
nop
and
std
arpl
loopne
jle
iret
sti
inc
sbb
jbe
inc
test
ja
xchg
jae
gs
jg
xchg
xchg
ficoml
mov
mov
mov
lahf
jo
jl
mov
push
stc
jae
adcl
andl
sub
jns
imul
sub
adc
jne
pop
push
into
in
dec
mov
xlat
mov
loopne
inc
nop
not
out
loope
lods
or
mov
push
gs
push
mov
ret
xor
idiv
jmp
mov
or
popa
xchg
jle
push
jmp
or
mov
push
fstps
lcall
cltd
xorb
popa
pop
or
mov
je
fists
inc
push
std
out
lret
popa
jmp
add
add
push
notl
ljmp
push
fisttps
es
sbb
mov
js
sti
popa
repnz
inc
and
or
cmc
dec
pop
push
pop
rcll
fisubrs
subl
iret
loope
cld
pop
lret
jmp
mov
ja
ficoml
mov
aad
stc
rcll
out
cli
lock
mov
dec
inc
ret
cmp
repnz
jae
lret
loope
cmp
shrb
je
push
mov
test
cmp
sbb
in
inc
jle
mov
cmpsb
pusha
repnz
cmpsl
loope
pop
mov
adc
lcall
or
cmp
sub
xlat
negl
jae
in
sbbb
cwtl
inc
dec
repz
daa
pop
test
dec
data16
js
cld
jbe
rclb
pop
adc
mov
cmp
jno
or
mov
xor
lods
push
push
ljmp
cmpsb
std
pop
pop
mov
ds
lock
push
dec
jmp
loopne
jbe
jns
lret
jno
push
rcl
imul
and
int3
fisubrl
pop
pushf
and
inc
xchg
popa
clc
cmpsb
mov
mov
inc
xor
fsubrl
and
mov
push
fcom
sub
cltd
jle
push
cmpsb
fwait
inc
sarl
cmp
or
sarl
push
mov
xchg
mov
jbe
push
repz
inc
arpl
mov
cltd
movb
pop
mov
iret
sarl
aam
fstl
sbbl
add
test
mov
and
mov
pop
cmp
out
and
js
dec
loop
loopne
scas
pop
inc
xor
push
out
jns
mov
push
sub
bound
sbb
inc
lcall
jmp
es
push
sbb
icebp
dec
adc
insb
in
sbb
push
pushf
push
in
inc
mov
cmc
imul
imul
push
test
aad
jmp
mov
test
mov
ret
push
loopne
lret
outsl
push
movsb
jl
xlat
out
outsl
dec
inc
bnd
inc
inc
push
sbb
add
mov
cmp
inc
mov
xor
rcl
idivl
add
cmpsl
add
cli
sti
sahf
add
lahf
cmp
int3
inc
adc
in
ja
mov
dec
mov
jge
mov
and
pop
jge
cmpsl
lahf
add
dec
nop
fmuls
fists
pop
jae
and
adc
and
xor
sub
mov
adc
mov
lret
mov
inc
loope
pop
mov
loopne
mov
jle
add
aam
cmp
movsb
icebp
dec
repz
movl
cli
addb
sbb
pop
data16
ret
cwtl
aam
ja
cmpsb
jno
popa
outsl
lret
sub
arpl
clc
lock
dec
sub
imul
jecxz
sub
pop
fdivrs
and
roll
push
int
repnz
aad
xor
dec
loope
and
push
leave
mov
fs
jl
mov
inc
dec
mov
inc
int3
stc
dec
push
icebp
sbb
call
jb
jb
in
push
pop
dec
lret
arpl
mov
xor
add
push
mov
xor
jge
cltd
jmp
cmp
push
mov
xor
or
xorl
in
shlb
jle
out
mov
add
sbb
and
xor
xchg
mov
int3
sbb
cmp
push
adc
jnp
cmpl
lcall
fimuls
push
dec
out
dec
leave
xchg
in
and
add
lret
mov
lds
mov
jecxz
test
mov
mov
outsl
aas
inc
mov
ror
pop
lcall
mov
cmp
ret
popa
adc
and
mov
adc
test
push
push
pop
jo
pushf
mov
dec
adc
daa
and
xlat
xchg
movsl
mov
inc
sbbb
push
dec
jno
js
fistps
cmp
jae
jmp
inc
lret
into
ds
mov
mov
dec
jmp
daa
imul
sti
sub
dec
cmpsl
test
inc
cltd
mov
xor
rcl
mov
enter
js
push
adc
ret
cmpsb
iret
mov
xchg
jecxz
lahf
xor
push
xchg
xor
adc
jns
loopne
mov
out
test
cmpsb
mov
cmpsb
leave
xchg
push
cs
xor
sub
inc
xor
pop
adc
dec
push
jne
ffreep
jnp
popa
xchg
in
push
sbb
jmp
mov
pop
pop
or
out
xchg
decl
fadds
call
jge
adc
pop
outsb
xor
gs
ret
mov
push
icebp
lcall
add
xor
jmp
mov
inc
pusha
stos
mov
js
sbb
cmp
xchg
mov
test
xchg
add
dec
stos
repz
jecxz
lods
dec
fildll
pop
adc
jb
mov
lods
and
mov
push
jmp
rcll
call
push
movsl
sbb
aam
dec
cs
cmpsl
adc
push
popa
rorl
ficomps
sbb
shr
lahf
pop
pop
jge
aam
jge
add
or
cld
sub
scas
xlat
mov
cmpsl
or
push
test
xor
into
lcall
mov
gs
xchg
jl
addr16
out
cld
dec
jb
stc
push
aas
push
jnp
inc
push
lret
xchg
and
into
hlt
imul
js
adc
jg
fmull
xor
shll
mov
dec
dec
movsl
push
push
test
fistpll
push
mov
add
add
dec
das
mov
shl
push
je
mov
and
jge
sbb
fstps
push
pop
mov
scas
movsl
push
pop
pop
push
cmp
sbb
cli
dec
fs
repz
adc
mov
sub
or
leave
cmp
lret
inc
int3
dec
jo
xor
dec
xchg
cmpsb
mov
add
enter
imulb
mov
dec
call
jnp
and
bound
incb
jne
insl
inc
cltd
pop
scas
pop
int
int
data16
jge
pop
arpl
mov
mov
or
fwait
xchg
pop
jge
xchg
testl
pop
fsin
inc
mov
sbb
xchg
mov
ss
jne
testl
je
movsl
insl
sti
sub
mov
jecxz
ror
push
jns
add
push
jl
jge
mov
jne
aaa
jne
mov
inc
repnz
push
jecxz
cmp
jg
decl
stc
add
mov
mov
push
adc
or
pop
sub
cmp
add
cltd
sub
cld
int
in
faddl
add
sbb
stc
jns
ja
inc
gs
fldenv
iret
dec
dec
das
jl
or
sub
leave
ljmp
pop
mov
xor
leave
scas
jns
add
addr16
add
imul
inc
push
xchg
insb
mov
xlat
inc
in
jg
mov
jno
lcall
pop
mov
xor
les
les
cltd
jns
mov
icebp
leave
in
gs
imul
fnstenv
in
adc
xor
repz
repnz
mov
imul
repz
lds
fs
sub
push
dec
cmp
cmp
jge
dec
jecxz
cmp
data16
int
sarb
add
andb
adcb
cmp
sbb
loopne
enter
bound
call
xchg
pop
add
sbb
test
sub
push
ja
in
hlt
nop
bound
push
push
orb
addr16
dec
cltd
or
add
in
jp
sbb
inc
adc
scas
insl
mov
cmpsl
imul
test
mov
sub
lahf
mov
je
scas
mov
dec
lahf
mov
sub
stos
dec
pop
inc
es
push
xor
enter
and
or
leave
stos
mov
mov
loopne
movsl
push
push
pusha
mov
or
aas
jae
fcmovne
push
sti
pop
sbb
xlat
test
iret
jae
or
push
xchg
cmp
subb
mov
js
shrb
cmp
xor
inc
dec
sbb
bound
mov
pusha
test
mov
test
insb
mov
call
lcall
rorl
add
ficoms
pop
push
push
dec
jns
repz
je
stos
scas
jle
pop
je
push
jl
inc
pop
mov
push
gs
fldl
add
pop
push
fwait
repz
xchg
and
mov
add
ficompl
das
add
cmp
push
push
cltd
popf
cwtl
xor
sbb
push
xchg
inc
pop
jne
sbb
js
add
cmp
mov
insb
ror
loop
xchg
dec
cltd
sbb
repz
inc
cmp
or
enter
arpl
popa
push
pop
aam
pop
push
push
inc
imul
stc
or
int
pop
in
jne
mulb
mov
cld
xor
sub
mov
push
mov
xor
cmpsb
lret
mov
fnstcw
dec
imul
sub
inc
ret
pop
in
imulb
mov
jne
cwtl
adc
push
jns
push
shll
lock
dec
lea
incb
icebp
xor
mov
xor
push
inc
mov
aad
inc
pop
add
jl
sbb
adc
mov
arpl
mov
fistpll
and
or
loopne
dec
push
push
fs
push
jge
sbb
aam
and
mov
unpckhps
mov
popa
inc
shl
mov
ds
pop
add
dec
aam
pushf
dec
rcll
xchg
out
decl
mov
mov
xchg
jnp
cmp
loopne
out
and
dec
mov
cmp
daa
int
lea
mov
in
imul
and
je
and
nop
dec
int3
sub
repz
push
testl
jge
sar
std
push
dec
cwtl
sub
push
leave
loopne
orl
dec
push
pop
or
xchg
pop
ja
mov
cmp
lahf
shl
jl
jge
sbb
lods
pop
iret
sub
pop
sub
lret
sub
pop
push
bound
push
xchg
xchg
inc
into
pop
jl
fbstp
out
and
push
xchg
jg
xor
out
and
out
movsl
jle
hlt
add
jnp
and
push
loop
cmpsl
pop
inc
fadds
dec
mov
sub
pop
xchg
ftst
loopne
mov
repnz
test
push
xor
add
add
xor
stos
jb
bound
out
xchg
scas
lock
aas
jnp
add
mov
lret
xor
xor
arpl
je
mov
jne
sub
add
adc
sub
push
repnz
dec
gs
inc
dec
test
sbb
push
adc
ja
movsl
xor
and
cltd
in
jae
and
xor
adc
or
call
test
fnstenv
dec
cmpsb
out
jno
into
and
cmpsl
je
addl
inc
xchg
xor
out
ja
icebp
or
shll
jb
ja
xchg
gs
jp
and
cmp
loop
sbb
add
lret
jle
es
cli
xor
inc
shrb
dec
rorb
dec
mov
xchg
jg
add
dec
dec
pop
pushf
push
aam
jbe
cmpsl
mov
loop
xor
jo
lahf
dec
int3
and
push
jecxz
movsb
shlb
xor
pop
popa
and
cmp
add
add
jno
repz
push
inc
in
jl
cmpsl
popf
sub
or
sbb
jo
cmpb
sbb
repz
stos
jg
cwtl
jae
mov
ret
mov
lahf
es
pop
jno
or
ds
sub
loope
test
dec
lcall
test
repz
pop
dec
int3
test
stos
push
sbb
push
push
arpl
mov
mov
out
imul
jle
jo
mov
ret
outsb
xor
adc
hlt
xor
sbbl
or
imul
and
sbb
imul
sbb
sub
mov
fisttps
or
call
fcomp
dec
jb
inc
gs
push
imul
inc
push
push
shll
xchg
test
inc
inc
mov
ds
and
fadds
push
rorb
roll
pusha
sarl
xorb
jmp
pop
imul
push
std
lcall
fildl
outsb
int3
dec
aad
push
push
out
lret
pushf
rcr
test
push
loope
das
ja
sub
out
xchg
pop
nop
mov
rorl
bound
out
mov
dec
bound
pop
enter
popa
test
mov
lock
fisubl
orl
leave
out
fmuls
xchg
fldl
jo
push
sbbl
int3
sub
pop
jl
xor
pop
test
loop
ss
cmc
or
xchg
or
lock
add
inc
pop
adc
xor
jl
add
sbb
xchg
fnsave
sbb
jbe
jno
scas
int
mov
push
mov
sub
jg
cmp
sbb
xor
sub
jo
cmp
push
test
mov
cmp
push
lods
push
mov
fs
sub
sub
jecxz
sbb
push
jno
cmpsb
nop
je
xor
out
ret
jne
sbb
int
cmp
and
repz
imul
jnp
xor
mov
mov
pop
jb
leave
repnz
xor
fs
dec
pushf
int
dec
sbb
push
mov
push
rcll
shlb
imul
imul
pop
test
dec
pushf
and
addr16
lahf
test
leave
out
dec
call
mov
jbe
cltd
imul
cltd
inc
jp
jo
scas
das
xor
pusha
jecxz
outsl
push
xchg
stos
mov
jo
jg,pt
add
mov
mov
mov
cmp
int
das
insb
jmp
mov
ja
js
jl
fdivl
das
hlt
xor
popa
outsb
stos
pop
arpl
mov
inc
mov
and
outsl
sbbl
xor
inc
push
pop
test
push
outsl
rcr
stos
fisttpll
roll
pop
js
filds
xchg
scas
sarl
rcll
and
cmc
pop
fucomi
adc
xor
inc
fildl
loope
cli
xor
add
adc
vphsubw
mov
cmpsl
pop
dec
inc
aas
mov
push
outsl
sub
ss
pop
push
insl
insb
insl
test
push
mov
inc
adcb
and
or
mov
mov
mull
adc
icebp
sub
pop
cmp
mov
adc
add
push
or
inc
jge
mov
adc
in
jae
sub
mov
push
out
shlb
push
cmp
sub
sub
sbb
lcall
jns
fsub
mov
mov
int
xchg
lock
outsl
imul
add
xchg
mov
test
or
jns
arpl
int3
mov
in
shlb
sbb
sbb
jge
cmpsb
mov
and
hlt
popf
push
movsl
mov
mov
push
inc
out
jle
int
dec
ret
jno
xchg
adc
jl
int3
mov
stc
push
xlat
leave
shll
pop
out
call
popa
in
jno
cmpsb
hlt
mov
inc
adcb
mov
xlat
cli
dec
sub
dec
arpl
imul
mov
rclb
jbe
repz
fnstcw
movsl
cmp
mov
sub
aad
push
xor
sahf
insb
adc
mov
into
lock
test
push
mov
sbbl
pop
out
xchg
mov
push
sub
pop
lret
dec
data16
adc
insb
push
popa
daa
mov
jns
aaa
ret
ljmp
add
pop
dec
insl
lcall
mov
cmpsb
adc
xor
cmc
ficomps
lret
dec
sub
and
shlb
mov
and
xchg
test
cwtl
bound
jb
out
xor
mov
loopne
or
daa
cwtl
jle
xchg
sbbl
dec
popa
inc
push
jmp
fs
add
gs
mov
inc
jle
inc
imul
pop
lahf
stos
imulb
lcall
movsl
popf
jb
inc
pop
fimuls
call
push
adc
lods
or
dec
or
fstps
or
mov
ret
xchg
xchg
ret
idivb
enter
cs
adcb
nopl
add
adc
fcoms
test
lock
sbb
es
inc
in
jo
and
jns
out
repz
cmc
add
in
lret
xchg
daa
lock
fdivp
sub
not
sub
push
or
in
leave
psllq
lahf
dec
rcll
xor
push
aaa
sbb
loopne
adc
mov
lcall
ret
mov
inc
lret
int
gs
sbb
jne
fnstcw
out
sub
mov
inc
dec
in
fs
icebp
dec
jle
adc
insb
dec
or
cmp
inc
inc
movb
sub
mov
fiadds
int
out
dec
fisubs
ss
jnp
sbb
dec
jbe
jbe
inc
jmp
push
mov
outsl
fstps
push
lods
ret
jnp
pop
test
inc
mov
out
idivb
jbe
and
jg
shr
push
inc
sbb
add
xor
cld
inc
push
gs
sbb
lea
cmp
aad
imul
mov
sub
gs
mov
sub
addr16
push
test
and
and
ja
mov
mov
data16
add
adc
lcall
iret
pmaddwd
pop
xor
xchg
dec
cltd
add
xchg
sub
pop
testl
pop
inc
jae
loope
xchg
push
notl
fs
pusha
xor
movsl
and
arpl
fadds
in
mov
add
push
in
addr16
test
lret
fisubs
pop
jo
dec
dec
inc
ja
cs
aas
sub
adc
mov
mov
xchg
cli
pop
or
pop
and
jbe
dec
pop
inc
push
jnp
jbe
pop
sbb
fistps
sbb
dec
lods
inc
pop
sti
lret
inc
mov
inc
xor
jns
imul
sbb
inc
mov
int3
cmc
mov
leave
cmpsb
jno
dec
js
lret
inc
mov
push
aad
cmc
imul
pushf
stc
push
inc
loopne
inc
dec
sub
mov
mov
fsubs
test
add
pop
mov
cmp
inc
add
jo
loope
jge
push
daa
clc
jb
sub
fdivl
test
push
cmpsl
xchg
push
hlt
jge
mov
dec
jbe
inc
push
jo
aad
fnstcw
jno
clc
std
xchg
or
stc
movsb
cmpsb
jbe
dec
fs
jmp
cmpsl
lds
mov
mov
sub
jp
inc
out
addr16
cmpb
push
std
xchg
lret
jns
push
push
jbe
mov
ljmp
ret
cli
inc
jnp
push
jno
push
push
xchg
jecxz
sub
jmp
nop
fistpl
outsl
and
cli
ljmp
aas
xor
push
add
out
xchg
sbb
mov
leave
int
ret
imulb
push
lahf
fs
lahf
jmp
in
js
and
pop
inc
or
icebp
cwtl
dec
mov
loope
sub
pushf
adc
jmp
jo
dec
lret
cmpsl
cmp
mov
pop
jmp
int
aam
sti
xchg
jmp
push
rcll
xchg
lea
lods
jp
add
pusha
jo
add
incb
jp
xchg
bound
adc
or
jns
sahf
js
std
enter
mov
int3
loopne
pop
add
inc
mov
mov
jne
sub
sbbb
outsl
imul
cwtl
and
mov
push
jno
push
xchg
into
add
shlb
insl
rclb
jl
popa
pop
mov
or
loope
movl
das
andps
insl
inc
lret
pop
test
mov
rcr
outsb
cltd
mov
bound
daa
dec
xlat
add
push
mov
or
jb
iret
cmp
lock
jmp
mov
repz
int
jae
jae
xorl
stc
dec
or
ds
data16
test
in
or
jne
fldt
push
ljmp
shr
jmp
repz
sbb
mov
pop
sub
je
nop
mov
inc
cmp
mov
inc
jmp
mov
imul
testl
test
loope
mov
mov
sub
xor
push
cltd
in
cld
pop
sar
jae
insl
out
push
dec
cwtl
sub
and
jbe
repnz
ficompl
inc
pop
aas
sbbb
sbb
loopne
test
ja
push
push
pop
lods
cmpsb
dec
das
jb
rcrl
mov
adc
inc
pop
je
aad
sub
dec
pop
ficompl
inc
sub
cmp
dec
aam
pushf
inc
ret
adc
pushf
cmp
repz
loop
shll
repz
cmp
or
lahf
loop
les
popa
test
into
and
stos
xchg
and
aaa
in
ds
lret
dec
lea
add
xor
leave
scas
in
jno
jmp
int
xor
sbb
test
add
bound
xchg
outsb
push
mov
add
xchg
filds
inc
mov
imulb
jbe
mov
jg
das
jns
rcrb
scas
addl
mov
pop
fisttps
sbb
dec
stc
fldl
jae
and
mov
fs
pop
xor
shlb
push
fmull
pusha
test
test
mov
sbb
adc
je
push
xchg
xchg
cmp
repz
pushf
push
imul
jecxz
mov
stos
xchg
pusha
in
inc
xor
dec
mov
push
jg
icebp
cmpb
cmpsb
add
movsb
inc
mov
jo
xor
idivb
sub
xchg
stc
fbld
fucomi
shl
fisubl
lahf
adcb
loopne
xchg
rorl
mov
sbb
pushw
fwait
sbb
xor
mov
fstpl
in
es
dec
push
stos
cmp
mov
xchg
lods
clc
aam
dec
adc
dec
ljmp
ret
fsts
ret
sub
fnstenv
sbb
movaps
out
jo
xchg
jg
mov
sub
add
sub
pslld
flds
cmpsl
in
stos
test
adc
cltd
and
mov
lret
or
insb
movntps
jl
mov
fdivl
aas
sub
and
pop
xorb
loopne
mov
mov
mov
negl
cmc
fbstp
add
pop
sub
mov
xchg
or
inc
insl
mov
dec
sub
fsubl
sbb
inc
mov
sahf
test
adc
mov
adc
dec
dec
out
mov
or
repnz
mov
loope
dec
ret
lods
push
popf
jg
pop
nop
orb
pop
stos
add
fstpt
xorb
and
adc
ss
cmp
call
push
push
mov
or
fildl
repnz
inc
cmovl
jnp
cmp
adc
mov
lea
and
test
and
add
imul
popa
push
insl
daa
out
push
movsb
mov
daa
jp
push
sti
cmpsb
mov
cmp
leave
insl
mov
xchg
dec
jge
jecxz
push
loopne
mov
lret
roll
or
sub
ljmp
inc
xchg
fs
nop
shl
lret
pop
test
outsl
aam
jo
sbb
fdivr
cmpsb
stc
push
shll
inc
mov
jge
jl
movsb
jl
push
jmp
inc
inc
loope
sahf
cmp
ror
and
test
jns
outsl
adc
jle
das
outsl
jbe
in
mov
add
jbe
pop
dec
aaa
test
sbb
pusha
leave
lcall
mov
insb
loope
cld
dec
and
jmp
and
add
pop
xchg
push
nop
roll
mov
ds
mov
push
int
outsb
and
ss
and
pop
int3
cmp
stc
hlt
push
inc
rcrl
push
call
mov
xchg
cmpsb
scas
push
cld
ss
or
inc
pop
push
mov
mov
and
jo
or
inc
xor
pop
icebp
cwtl
ss
cmpl
xor
push
arpl
roll
incl
ds
ja
jo
call
push
add
lret
xor
gs
adc
sbb
sub
jg
leave
mov
insl
mov
popa
shl
push
cmp
dec
sub
fidivrl
and
fmul
cmp
and
xchg
pop
imul
dec
leave
aam
xchg
push
pop
int3
int3
scas
or
cmpsb
cmpsb
in
xchg
arpl
add
stc
out
flds
push
or
inc
cmc
sbb
loop
sub
fxch
mov
and
lahf
bound
xor
mov
call
aas
es
outsl
jne
outsb
fstl
add
and
aam
mov
pop
xchg
mov
jno
or
jle
jae
ret
out
jno
push
jns
cld
xor
sbb
enter
icebp
push
in
or
ds
test
pop
dec
mov
push
imul
shrl
mov
sub
icebp
mov
xchg
scas
pusha
and
xchg
lea
clc
fwait
movsl
pop
sbb
cmpsl
mov
add
jle
clc
jmp
scas
pushf
and
fisubs
inc
mov
and
arpl
adc
ret
xor
lret
cmp
inc
sqrtps
push
inc
daa
popf
sub
xchg
in
mov
jl
hlt
pop
insb
xchg
lock
push
or
std
daa
fnsave
cld
jne
repz
outsb
out
sbb
js
mov
call
push
test
mov
cmp
mov
fstpt
bound
pop
pushf
cmp
push
fsubs
je
or
lock
ja
push
pop
pop
push
jge
sub
add
mov
inc
test
or
jecxz
inc
pop
loop
jg
ret
imul
inc
sahf
mov
dec
sbb
pop
push
inc
sub
in
pop
int3
out
test
stc
outsl
jae
and
jg
jmp
inc
aad
jns
mov
xchg
xor
mov
ficoml
add
mov
lea
insb
inc
cmp
jns
adc
dec
push
inc
fldcw
sub
ret
dec
xor
je
xchg
xlat
cmp
movsl
xor
ljmp
adc
mov
movsl
or
cmp
mov
std
xchg
sahf
push
ss
push
jmp
ret
xchg
dec
into
add
jle
mov
push
lods
cltd
inc
ljmp
stos
vpsubusb
jp
dec
push
jb
push
jo
xor
jle
add
adc
imul
into
adc
icebp
hlt
scas
and
cmpsb
cld
jae
dec
insl
inc
icebp
inc
into
xchg
cs
xchg
sbb
mov
jg
inc
jo
mov
or
leave
leave
in
mov
imul
fbstp
ja
into
cmc
mov
sub
adc
add
sub
and
xchg
les
test
add
jo
mov
jmp
mov
mov
dec
cmpsb
and
push
mov
mov
dec
mov
adc
clc
jo
imul
aas
jle
ror
stos
xchg
xchg
adc
int3
imul
mov
xchg
mov
and
cmc
pushf
lahf
insl
ss
fs
lcall
inc
pop
repz
xlat
test
mov
xor
and
add
pop
arpl
cmpsl
xchg
lods
jae
jp,pt
andl
lock
jmp
mov
lret
jmp
and
mov
sbb
xchg
jl
pop
adc
stos
sbb
arpl
enter
push
adc
inc
call
inc
stc
ret
inc
imull
sbbl
outsb
lods
das
push
inc
in
test
pusha
or
push
test
dec
movsl
dec
adc
cwtl
pop
dec
ret
ds
addr16
mov
xorb
jmp
rcrb
push
sbb
xchg
cmpsb
xor
mov
sub
in
andb
sub
jne
mov
iret
jo
xor
in
pop
inc
and
in
insb
dec
and
ljmp
imul
fs
mov
repz
testl
pusha
sbb
in
xchg
sub
sub
pop
jnp
sbb
mov
test
pop
out
popa
lret
xor
mov
lret
aad
jle
rcrb
mov
sbb
dec
xchg
cmpsb
adc
adc
call
mov
int
das
pop
dec
mov
mov
or
fcoms
loopne
cmp
cmovo
inc
pop
push
xlat
outsl
fistpll
dec
sub
add
adc
test
xchg
pop
mov
aad
sbb
jg
mov
std
aaa
jmp
jecxz
pop
outsl
adc
add
or
call
aam
repz
aas
lods
pop
outsb
addr16
sbb
sub
aam
dec
adc
inc
xchg
mov
mov
and
arpl
mov
pushf
iret
clc
int
xchg
das
inc
sbb
or
dec
call
cmp
fbld
in
pushw
inc
sub
mov
or
dec
push
mov
sbb
jno
lock
adc
and
int3
divw
jg
xor
mov
dec
lret
inc
leave
js
xchg
push
in
pop
cltd
jnp
add
pop
and
mov
jo
scas
sub
add
dec
movb
call
jle
imul
mov
sbb
cmp
jp
jno
aam
fdiv
daa
test
push
pushf
fisttpl
push
jo
insb
bound
push
dec
xor
test
add
pop
xor
icebp
inc
shlb
adc
jmp
imulb
dec
cmpb
inc
arpl
scas
xchg
fcompl
xchg
loop
or
push
jle
mov
sarb
lods
andl
mov
add
fisubrl
dec
repz
subl
cmpl
pop
ss
dec
xchg
lahf
or
int3
adc
outsl
andb
mov
pop
cmp
mov
adc
dec
icebp
inc
cmpsb
mov
mov
inc
sbb
ds
fcomi
cmpsl
xchg
test
sub
jo
and
xchg
jmp
sub
inc
jae
outsl
mov
je
jmp
pop
fcomp
pop
mov
jge
ljmp
mov
push
mov
sub
iret
lahf
lods
ret
mov
mov
mov
and
jo
xchg
lds
sub
and
outsl
mov
je
jmp
cltd
mov
movsl
ljmp
test
aaa
adc
scas
lahf
ret
call
lcall
jp
jo
xchg
lds
sub
add
push
outsl
mov
je
jmp
stc
mov
test
add
jmp
push
pop
adc
std
adc
in
or
icebp
jge
jmp
movsl
sub
cwtl
mov
xor
popa
out
pop
fdivs
daa
lods
mov
lret
test
add
inc
inc
pop
int
push
js
pushl
test
enter
das
arpl
cli
popf
or
xlat
jbe
hlt
fcmovnb
mov
sti
xchg
mov
out
cmp
fucomp
mov
and
pop
daa
out
cli
xchg
test
jo
dec
mov
fldcw
sarb
lods
into
jno
or
mov
and
and
enter
aam
mov
cmp
cs
gs
dec
ret
lea
mov
pop
in
inc
dec
jmp
pop
scas
pushf
and
or
add
cmp
xchg
popa
add
repz
lods
push
sti
fsts
cmp
xor
lods
mov
xchg
or
lahf
outsb
shr
neg
mov
dec
ret
cmp
xchg
mov
xchg
lock
mov
sarl
dec
mov
xchg
cmpsl
popa
or
movsl
add
sbb
je
mov
jno
xchg
mov
pusha
mov
in
ret
dec
ja
mov
and
inc
popf
xchg
mov
ss
and
lods
mov
aas
ret
jmp
repnz
and
scas
ret
call
aaa
mov
int
leave
subl
out
stos
sub
in
movsb
mov
lea
mov
lea
dec
and
or
xor
shrb
xchg
mov
sub
aaa
pop
shrb
mov
jae
lods
jno
mov
pusha
xchg
into
adc
mov
dec
xchg
push
scas
fs
stc
push
sar
les
mov
xlat
and
add
mov
test
jne
lds
xor
movsb
jns
cli
adc
fcompl
or
repz
in
popf
cmp
repz
dec
movsb
pushf
std
into
int
movsb
jg
xlat
add
mov
add
sub
imul
cmp
test
lock
xchg
imul
aas
jbe
mov
or
push
popf
add
inc
in
or
imul
dec
add
dec
data16
dec
out
xchg
or
std
scas
cmp
lret
lret
inc
cmp
dec
adc
adc
lcall
or
push
pop
aad
mov
scas
jno
icebp
push
inc
outsb
andl
or
push
loop
fiaddl
xor
cmc
add
xor
inc
cld
lret
push
mov
es
outsb
or
inc
fcmovne
or
mov
sub
sbb
pop
dec
add
outsb
loopne
hlt
je
cmc
mov
repnz
jo
xchg
fs
shl
xor
jne
ret
arpl
jno
jne
test
shll
hlt
dec
fsubrl
jae
sub
leave
inc
jp
mov
xchg
test
popa
adc
and
loope
and
scas
js
lods
add
rorl
cmpl
pop
cmc
mulb
xor
enter
adc
adc
clc
fstps
dec
mov
dec
hlt
xchg
cmp
movsl
push
in
dec
xor
stos
out
ss
movsl
leave
xchg
lea
xchg
movsb
xchg
js
cltd
adc
es
icebp
fwait
or
mov
clc
insl
push
xchg
fisubs
icebp
lock
in
jmp
jne
out
jno
mov
leave
stos
and
or
xchg
adc
dec
lea
outsb
xchg
pop
nop
ss
inc
push
xor
jne
mov
cmp
add
scas
push
sbb
subl
roll
dec
pop
cwtl
dec
pop
mov
rcll
out
dec
push
pop
jb
sub
lret
push
aam
jns
xor
sub
cmpsl
bound
push
adc
les
addr16
leave
movsl
cmp
and
xchg
sbb
cmpsl
jp
jmp
lcall
and
outsl
mov
negl
lods
in
inc
inc
clc
push
cwtl
iret
fiadds
dec
in
push
push
insb
push
in
fldenv
inc
inc
lahf
pop
int
lahf
push
mov
xor
pushf
test
xchg
mov
lea
sbb
lcall
js
mov
popf
es
mov
jns
pusha
xchg
and
inc
sarb
or
rorb
negb
inc
std
sbb
sub
mov
sub
lret
mov
xlat
and
test
aad
pop
lods
push
js
and
mov
and
test
pop
bound
scas
cmp
mov
jae
fistpl
pop
sbb
stc
jae
dec
in
les
pushw
cmp
pop
push
sahf
into
fsubrl
jo
movsb
mov
sar
push
adc
or
mov
xor
add
dec
pushf
sub
sub
mov
int
jg
loope
iret
stos
sub
lea
ja
cmp
jno
aad
sub
movl
mov
dec
adcb
imul
pop
lret
fadds
fcomi
add
cmp
notb
loopew
fwait
sub
repz
jmp
jl
xchg
mov
xor
mov
idivl
outsb
mov
test
movsb
dec
xchg
into
mov
dec
push
lcall
stos
jns
les
hlt
pop
fildll
fisttps
pop
mov
movsl
scas
outsl
popa
or
jnp
jmp
mov
mov
andb
lds
jmp
scas
testw
daa
lea
insl
cwtl
pop
add
jecxz
inc
push
fsubrs
test
pop
loopne
push
xchg
add
or
pusha
add
mov
add
lods
sub
rorl
inc
imul
js
inc
outsl
dec
xchg
sub
lods
pop
int
ss
fwait
cmp
jne
inc
sbb
xlat
mov
aam
idiv
jl
loopne
popf
sti
test
xchg
mov
jg
icebp
add
int
jns
mov
les
xlat
imul
mov
bound
mov
fnclex
sub
mov
adc
pop
cmc
pop
out
jmp
leave
into
mov
ret
cmp
addl
fs
xchg
and
add
js
loop
push
js
jae
fists
push
cmp
sti
leave
dec
dec
loop
sub
inc
dec
adc
mov
push
mov
nop
adc
test
lret
sbb
lea
stos
setbe
jle
popa
inc
mov
and
fiaddl
daa
jge
cmpsb
mov
adc
mov
jb
loope
clc
mov
sbb
mov
icebp
popf
arpl
mov
mov
push
aad
cmp
fildl
inc
leave
imull
xor
cwtl
andb
mov
pop
lret
push
adc
pop
dec
mov
mov
or
xor
pop
push
test
stos
add
mov
std
pop
push
sbb
pop
mov
shll
add
or
jmp
js
movsb
mov
outsb
sub
icebp
mov
in
inc
sbb
test
pusha
push
bound
mov
and
gs
fdivrl
cmpsl
sti
es
push
mov
adc
and
jo
fwait
data16
in
mov
aas
cli
daa
push
lret
sti
inc
outsl
popf
and
pop
push
in
and
mov
mov
mov
push
outsl
lods
jecxz
pop
mov
push
lahf
xchg
push
sbb
in
dec
and
dec
pushf
leave
and
jno
test
dec
and
pop
add
icebp
fwait
cmp
daa
cmp
pop
xchg
stos
es
and
sub
lock
imul
mov
mov
clc
ret
shll
cld
pop
lret
mov
pop
and
lds
adc
idivl
leave
in
inc
adc
mov
or
push
adc
cs
sub
push
test
pop
sti
sbb
pushf
jno
xchg
into
mov
in
push
and
push
test
inc
sub
dec
leave
add
cmpsb
mov
nop
inc
sub
dec
je
inc
and
pop
aaa
mov
in
sbb
dec
jbe
add
xor
imul
bound
adc
repnz
or
es
mov
xor
mov
stos
fldl
sbb
aad
and
xlat
jg
shrb
scas
scas
mov
jp
clc
sbb
sub
pop
add
add
mov
call
sbb
mov
adc
aam
mov
mov
ss
mov
and
in
push
insl
jp
pop
add
les
scas
shll
jle
in
jne
mov
shl
push
add
sahf
sub
test
mov
cmp
enter
imul
adc
cwtl
adc
lret
xor
or
insl
mov
sti
xchg
cmpsb
xchg
into
pop
inc
xor
dec
test
push
lcall
pop
push
jp
lock
decb
add
insb
ja
adc
mov
sbb
push
inc
arpl
sarb
out
inc
pop
fcomps
pop
mov
ret
dec
sti
cmp
fwait
push
xchg
push
repnz
popa
popa
aam
lock
addl
ja
and
or
mov
push
lret
cmp
ljmp
xor
add
rorb
mov
mov
xor
xchg
mov
mov
insl
xchg
or
push
mov
into
aaa
cmc
inc
scas
test
iret
movsl
adc
mov
inc
repnz
mov
add
mov
jno
nop
xor
not
push
cmp
xchg
or
fistl
repz
pop
lock
aam
int3
jp
idivl
sub
lret
out
fcomi
imul
mov
jbe
inc
fnstsw
cmpsb
lods
outsl
int
shrl
ret
add
or
adc
jge
dec
into
loop
mov
push
cmpsb
push
hlt
insl
jle
xchg
cmp
sbb
into
mov
jo
sarb
mov
mov
and
mov
xlat
sahf
dec
cmpsb
add
stc
jno
pop
les
and
jno
jo
loope
push
jns
jb
out
sub
jnp
fdivp
divb
in
push
sub
add
js
jns
pop
in
add
xchg
add
push
pop
es
aas
mov
ret
jo
lret
pop
cmp
sub
popf
bound
movsl
hlt
in
push
cs
aas
pop
sahf
fcoms
stos
xor
jo
push
scas
add
jl
xchg
xchg
int
mov
test
sub
in
imull
cmpsb
pop
es
mov
cmp
repnz
sti
js
cs
sbb
dec
fcoms
leave
dec
loop
lods
push
pop
and
push
jae
push
add
push
arpl
pop
xlat
or
or
jp
ret
sarb
cwtl
notl
xorl
outsl
mov
xchg
aad
or
pop
shlb
fxam
stc
ja
mov
pop
stc
std
mov
fisttps
push
sbb
mov
sub
and
push
rolb
repnz
sbb
push
insl
push
adc
je
push
add
add
dec
stos
pop
pop
dec
jne
jp
outsb
test
sbb
and
jmp
les
mov
pusha
icebp
sbb
out
sti
bound
jno
sti
hlt
sbb
add
add
bound
mov
mov
mov
cmc
stos
pop
in
mov
mov
or
sbb
inc
inc
loope
push
popa
testl
je
aam
imul
cmc
inc
insb
lea
mov
inc
adc
js
cmpsb
mov
mov
fidivl
mull
fldt
or
mov
adc
je
pop
hlt
xrelease
push
xorb
mov
or
rolb
pusha
outsl
and
std
aam
mov
cmp
inc
test
cmp
jb
jns
xacquire
shll
dec
jg
scas
je
stos
mov
jmp
in
mov
fisttps
jno
out
mov
int
leave
fcomps
xor
adc
add
or
add
imull
cmpsb
out
xchg
push
cmp
imul
pop
cltd
xchg
sarl
xchg
fcompl
xchg
or
sti
mov
mov
jae
push
mov
xchg
push
pop
mov
and
mov
dec
sahf
scas
call
or
push
mov
fwait
xlat
or
sub
mov
mov
inc
jl
jns
cmp
mov
stc
loop
jmp
stc
pop
jmp
mov
stc
fs
mov
aas
sbbb
add
mov
sbb
icebp
or
adc
aas
int
sahf
push
and
pop
outsl
push
imul
repz
sub
jo
aaa
fldcw
test
push
xchg
cmp
fcmovu
fnstenv
lret
push
leave
scas
mov
jbe
scas
mov
call
fdivrl
add
and
xchg
and
xchg
lods
inc
ja
sub
pop
data16
popf
add
cmp
sub
inc
inc
push
sbb
mov
adc
pushf
aas
or
inc
pop
push
sti
cmp
cmc
jno
pslld
iret
fs
mov
inc
jp
xor
jle
aad
int
aam
int3
inc
adc
lods
rol
jo
jmp
insl
mov
inc
cmpsb
pop
or
mov
cmp
and
xorl
xchg
dec
or
loopne
pushf
test
mov
sub
jecxz
cmc
pushw
dec
inc
outsl
dec
pop
cwtl
push
xchg
mov
cmp
fsubrl
dec
sub
rorb
add
cmpb
inc
and
mov
mov
xlat
sti
dec
cmp
cmp
aas
fildl
adc
pushf
xchg
xchg
mov
mov
or
aaa
leave
adc
testb
push
mulb
jae
sub
inc
imul
negl
jo
cmpsl
mov
lock
mov
push
cmp
aas
inc
fisubl
jae
mov
push
xchg
and
pop
push
adcl
lcall
jp
or
das
outsl
push
outsb
jmp
outsb
pop
movsl
fmul
leave
jmp
aaa
enter
insl
dec
out
icebp
cmp
inc
js
push
hlt
stos
mov
std
jae
jle
sub
xchg
mov
xchg
cmp
sbb
mov
dec
xchg
out
fstps
dec
xlat
repz
out
push
pushf
inc
mov
lds
inc
ljmp
sarb
push
mov
repz
repnz
roll
ds
mov
push
mov
or
imul
jl
flds
ljmp
jge
and
push
sub
inc
stos
ret
adc
cwtl
adc
pushf
inc
mov
push
movsb
ret
int3
dec
push
test
bound
aad
shlb
jge
push
and
sbb
ja
mov
nop
cmc
xchg
or
and
std
je
push
cli
xchg
fidivrl
jmp
push
push
push
popf
movsb
add
imul
repnz
sbb
add
pop
imul
inc
aad
inc
popf
arpl
pushf
jle
or
ss
in
movsb
dec
imul
cli
pop
adc
cmc
ds
lret
push
movsb
or
cltd
sbb
loop
rcr
sbb
jno
scas
jne
mov
sbb
or
or
adc
xor
jb
or
xor
cld
push
jno
jp
iret
leave
lock
aam
jg
insl
xchg
mov
mov
dec
or
hlt
push
or
push
mov
bound
mov
xchg
xchg
mov
repnz
mov
jb
cli
stos
xor
shl
mov
inc
cmp
lds
or
jbe
enter
loope
dec
loope
out
sub
add
sbb
mov
mov
leave
mov
lret
add
pusha
and
sbb
pop
fdivs
stos
sbb
mov
jmp
shlb
aaa
sub
and
rolb
mov
fnstsw
mov
test
and
out
mov
jb
jns
dec
insl
mov
in
jnp
js
jg
or
stc
dec
mov
sbb
les
rcrl
test
pop
mov
loope
rclb
or
mov
and
ret
inc
pop
push
fnstsw
cmpsb
xchg
popf
fs
repnz
cmpsl
xchg
mov
and
mov
rcrl
xchg
mov
inc
xchg
lret
xchg
xchg
cmp
addr16
dec
imul
cmc
jo
cld
movsb
add
sub
leave
dec
xchg
mov
sbbb
icebp
cwtl
ret
and
mov
outsl
or
imul
inc
fidivs
mov
ljmp
imul
out
pop
inc
jb
cmp
mov
pop
ja
jge
lods
adc
mov
jno
mov
push
inc
mov
sub
cmp
xchg
mov
pop
inc
push
or
test
or
adc
shll
lods
jne
mov
lret
mov
es
sbb
sbb
push
and
dec
and
jb
sub
fs
jmp
orl
nop
outsb
pop
cmpl
dec
sbb
mov
cmp
bound
push
scas
add
xor
cmp
daa
sub
neg
jb
or
mov
xor
outsb
xchg
cmp
xchg
gs
cli
out
pop
in
jb
js
push
inc
jmp
data16
lahf
ficompl
inc
jb
scas
add
inc
test
dec
and
pop
dec
es
mov
lods
in
std
mov
call
insb
jns
dec
aaa
jo
sahf
fwait
dec
fadds
xchg
lret
add
jbe
xor
push
imul
or
aas
add
fiadds
mov
dec
scas
xchg
or
cli
mov
repz
xor
out
addb
dec
leave
mov
es
test
lods
imul
mov
push
add
jp
jb
in
add
push
sub
cmp
cmpsb
xchg
pop
jbe
sub
xchg
jmp
inc
add
gs
ss
cmp
jbe
rcrl
pop
mov
and
fldl
sbb
gs
xor
addl
repz
stos
stc
cmc
add
hlt
adc
test
xchg
decb
xchg
fsubrp
sub
mov
sub
ja
fnsave
ljmp
sbb
or
pop
xor
fisttps
sub
mov
ss
aad
push
mov
out
ds
test
jb
leave
inc
pop
cld
std
pop
pop
cvttps2pi
mov
mov
je
push
incl
aam
cmp
jl
push
lret
xchg
loope
inc
loope
inc
mov
xchg
jo
movsl
loope
xor
imul
jns
leave
repnz
mov
mov
jge
sbb
pop
cmp
cmpsl
mov
xchg
ljmp
dec
and
repnz
lret
lret
xorl
dec
hlt
dec
xchg
mov
repnz
or
jne
jns
jle
pop
push
and
inc
imul
add
push
scas
adc
sub
sub
inc
pop
inc
clc
jmp
xchg
aas
dec
fimuls
ds
enter
mov
cmp
mov
rclb
cmpsl
mov
inc
push
dec
dec
loop
inc
push
sahf
into
cs
pop
mov
aas
repz
xor
adc
push
mov
lahf
pusha
fidivrl
sub
push
mov
in
jmp
mov
daa
xchg
fisubrs
jo
adc
test
push
insb
arpl
mov
pushf
add
ljmp
xchg
idivb
push
fbstp
and
pop
mov
push
jno
pop
fistps
into
push
arpl
inc
data16
xchg
inc
pop
inc
dec
out
push
repz
test
mov
inc
lret
inc
mov
int
inc
sarb
cld
shr
nop
loop
cmp
mov
sbb
cmp
pop
adc
add
add
xchg
ret
aaa
int
push
inc
push
jge
jae
mov
jns
or
add
cmp
inc
js
xor
push
xlat
inc
stos
leave
ret
sub
imul
aad
int3
pop
sbb
sub
pop
jmp
pop
mov
sub
cmpsl
scas
aam
ja
aas
mov
aad
jp
xor
dec
cli
dec
test
loop
push
or
loopne
call
jp
or
dec
fstl
lahf
sbb
scas
cmp
push
cltd
lret
ret
dec
jne
bound
mov
xchg
repnz
mov
icebp
push
les
cmpsb
mov
dec
add
inc
and
movsl
nop
lea
push
insb
jnp
inc
cli
push
xlat
xor
jo
cli
push
cmp
inc
jle
xchg
dec
push
xchg
rorl
and
mov
loope
mov
loop
mov
outsb
jle
pop
jbe
mov
mov
mov
jo
loopne
push
inc
addr16
imul
movsl
add
jb
scas
mov
or
mov
mov
movsl
push
sbb
mov
dec
add
sti
pop
insb
xchg
xchg
or
inc
ret
pop
fs
sbb
out
xchg
ja
add
push
jo
divl
cli
push
jae
push
add
push
xchg
out
pop
inc
push
lcall
jmp
shlb
dec
pop
and
and
fs
mov
or
cmp
sub
lahf
pop
xchg
mov
and
stc
and
ja
jecxz
add
mov
ss
mov
mov
inc
cmp
fidivrl
fsub
add
pop
out
xchg
or
mov
pop
dec
mov
mov
adc
loope
imul
add
inc
push
je
inc
frstor
dec
movsb
push
clc
rclb
lea
dec
in
stos
dec
fsubrl
inc
sbb
mov
or
xchg
dec
adc
jnp
clc
cwtl
inc
popa
push
dec
push
inc
xor
clc
pop
iret
cmp
mov
jle
std
add
out
fisttps
jg
inc
pop
mov
jno
cmp
sti
push
sbb
mov
mov
ret
dec
pinsrw
pop
in
mov
pop
int3
in
jge
add
in
loope
ljmp
lods
pop
dec
mov
stc
jne
mov
xor
fadds
dec
imul
ret
jg
in
das
call
cld
inc
pop
cwtl
jl
sahf
inc
sub
lcall
sub
je
sbb
jbe
int3
jno
lahf
jno
out
xchg
sbb
loopne
ret
bnd
or
xor
or
sbb
push
mov
jle
leave
and
sub
jo
dec
jne
push
sub
cld
mov
stc
out
pop
jae
das
leave
std
push
fstps
clc
pop
lea
and
dec
or
sarb
xchg
xchg
lret
adc
mov
jo
pop
dec
sub
jo
subb
mov
mov
bound
lock
cmpsb
testb
aam
dec
jp
sbb
push
xor
xor
pop
push
sub
daa
mov
gs
aam
nop
xchg
loop
jl
jae
aad
ret
mov
mov
inc
arpl
out
and
cmp
and
jb
sub
cltd
jb
out
mov
mov
dec
dec
jb
cld
dec
sub
mov
aad
pop
mov
cmc
or
cmp
andb
inc
mov
xchg
jg
pop
xlat
fdiv
push
rol
mov
inc
loopne
jg
repnz
xor
jg
push
xor
gs
ret
out
pop
stos
or
xor
and
jns
and
pusha
add
arpl
and
cld
popf
inc
sbb
int3
dec
xchg
or
mov
clc
nop
add
push
push
xchg
clc
and
dec
and
jnp
or
dec
das
psrlq
bound
mov
push
cmpsb
hlt
mov
stos
jbe
rol
inc
inc
ja
push
mov
pop
sbb
jge
pop
movsl
scas
test
mov
dec
adc
je
push
push
jecxz
jg
mov
cmpsb
int
and
sub
inc
dec
mov
out
inc
fimull
pusha
icebp
jbe
jns
mov
in
xor
sarb
xchg
hlt
sub
gs
and
jge
repnz
jle
jbe
mov
mov
adc
int
mov
mov
outsl
scas
sub
inc
int
mov
pop
lds
jno
aam
or
test
dec
mov
addr16
int3
mov
ja
lods
test
pop
pop
sbb
mov
test
sub
pushf
imul
cwtl
call
inc
movsl
add
mov
adc
mov
xchg
jl
mov
cmp
cmp
jp
dec
pusha
bnd
aas
bound
ja
nop
sub
in
movl
dec
ret
shll
inc
es
fucomip
enter
jg
fistpll
arpl
mov
adc
shrl
add
aam
notl
fstpt
and
or
inc
divl
jo
leave
cmpsb
add
addr16
fdivr
mov
roll
in
jge
jo
out
adc
mov
leave
pop
adc
dec
insb
data16
add
add
jbe
in
mov
cli
lahf
inc
push
aaa
mov
mov
lock
gs
push
std
or
push
inc
shrb
jo
or
ljmp
mov
xor
in
outsl
jmp
or
call
or
adc
psraw
lahf
inc
cwtl
adc
imul
mov
cmp
jb
loop
push
push
out
add
adc
ljmp
mov
fdiv
mov
ds
and
jmp
push
pop
pushf
cli
imul
cmc
mov
push
mov
add
ja
push
loope
daa
xchg
idivl
ret
inc
mov
daa
cmp
int
mov
repnz
in
mov
jo
enter
cld
xor
or
mov
mov
out
mov
out
jno
test
jbe
insb
addr16
ds
movsb
into
pop
popa
imul
mov
sub
inc
fdivrs
shlb
mov
repz
popa
add
inc
fwait
add
loope
fwait
sbb
mov
mov
out
stc
inc
jmp
ret
iret
lock
dec
fcoms
insw
mov
push
je
mov
cmp
pop
sbb
insl
cmp
stos
fs
in
push
or
pop
push
leave
dec
lret
fbld
push
mov
add
push
icebp
push
mov
cld
mov
test
incb
mov
adc
jo
jmp
pop
dec
stc
adc
call
pop
sbb
mov
ds
outsb
fmulp
inc
aas
out
ja
sub
push
cs
out
rcll
sub
and
mov
adc
cli
nop
mov
pop
xchg
out
xor
insl
jbe
in
and
jb
pop
and
adc
inc
xchg
rcrl
scas
jne
rcl
ret
sar
jae
cmc
pop
iret
inc
imul
jp
xchg
cld
fmull
jne
xchg
sbb
mov
ret
xchg
bound
cwtl
andb
out
cld
cmp
adc
xchg
sub
int
xchg
inc
dec
cmpsb
xchg
shr
sbbb
stos
push
loop
jns
sahf
loop
sub
sbb
inc
mov
int3
cmp
fstpt
test
sub
mov
loop
test
in
addr16
xlat
sbb
repnz
out
inc
add
test
mov
sub
scas
and
push
aas
push
movsl
jno
pop
cmp
push
push
fcmovb
je
or
enter
jb
cmp
nop
jp
ret
mov
lea
aad
loopne
mov
add
lds
ja
push
add
test
jne
inc
add
test
sub
pop
jmp
xlat
rclb
jne
xchg
popa
adcb
aad
jg
jg
mov
inc
shll
inc
mov
push
pop
enter
stos
jmp
dec
pusha
sbb
clc
mov
sub
mov
fcomps
push
mov
bound
cmp
shlb
adc
mov
sbb
pop
lock
popa
inc
jg
faddp
out
mov
or
pop
repz
push
push
push
sbb
cmpsb
out
dec
jmp
jge
mov
iret
cmc
aas
jns
inc
sub
pushf
orb
fidivs
inc
out
fucomp
mov
mov
jbe
push
movsl
push
rorl
pop
lock
push
lahf
cmpsb
sub
ds
pop
xchg
xchg
test
lea
repz
shr
fiadds
jnp,pt
in
cld
add
test
push
jns
inc
adc
lret
dec
xlat
push
ja
dec
in
inc
push
in
inc
push
out
inc
dec
jmp
pushf
inc
into
lods
pushl
addr16
add
jecxz
jp
sub
inc
mov
pop
push
push
cltd
inc
dec
xor
push
aad
mov
js
sub
out
repnz
mov
lret
inc
add
add
fstl
test
iret
inc
jno
adc
into
mov
scas
cld
inc
pop
dec
shr
rolb
je
enter
fldl
add
mov
adc
arpl
pop
mov
add
popa
or
cwtl
jl
inc
mov
fnstcw
cld
jg
fcomps
or
sbb
add
push
fimuls
adc
dec
and
sbbl
add
pop
leave
adc
adcl
subb
inc
pop
clc
inc
pusha
insb
pop
pop
lock
jb
imul
fdivs
mulb
mov
sub
cmp
sub
mov
mov
repz
lret
xchg
pusha
mov
inc
repz
shll
sbb
mov
lret
fdivr
dec
inc
addr16
dec
jg
ds
xor
stc
push
stos
sbb
lds
mov
xchg
nop
or
xchg
adcb
add
out
int3
ja
dec
jns
inc
cmpsb
movsl
mov
in
daa
lods
iret
incl
add
lods
loopne
push
cmp
inc
cmpsb
in
dec
cli
push
cmpsl
inc
into
ret
in
aam
jb
cli
inc
sbb
je
inc
xchg
mov
push
jb
jg
loop
push
add
rolb
adc
jae
popa
pop
dec
push
hlt
add
adcl
adc
pop
dec
push
adc
loope
dec
arpl
dec
mov
cld
jp
jecxz
mov
inc
jl
imul
mov
sti
push
lahf
insb
push
and
icebp
int3
gs
divl
test
cld
jno
daa
cmp
inc
push
out
shll
jecxz
add
xchg
jecxz
pop
inc
lahf
lock
test
and
and
jp
test
mov
cwtl
lret
inc
decl
sbb
cltd
pop
roll
outsl
repnz
jns
loope
aam
imull
nop
cmpsl
mov
stos
filds
rolb
dec
push
movl
arpl
inc
movsl
xor
jo
dec
insb
icebp
test
adc
call
sbb
xor
leave
xchg
sbb
lods
cmc
jae
cli
dec
std
fstpl
adc
sbb
inc
je
in
subl
je
xchg
stc
jmp
push
fwait
push
dec
add
dec
jg
in
pop
mov
lret
jecxz
repz
jbe
jbe
mov
jne
mov
insb
ss
addl
in
xchg
inc
pop
fld
or
sub
das
lret
and
lds
ret
mov
movb
out
pusha
je
out
sub
mov
mov
icebp
lret
and
out
mov
dec
sbbl
int
dec
xchg
out
hlt
lret
sub
mull
jo
pop
xchg
gs
arpl
add
leave
loopne
mov
pop
hlt
fisubl
mov
sub
mov
cld
or
add
mov
stc
dec
jl
inc
mov
push
clc
fisttps
push
push
outsl
or
lahf
xchg
stos
mov
mov
and
jae
ret
adc
cmp
xchg
pop
gs
xor
jecxz
jnp
stc
cmp
adc
push
arpl
lahf
movsl
push
scas
xor
xchg
les
nop
jae
shl
in
sbb
cmpsb
dec
mov
mov
cmc
popa
mov
lods
lcall
xchg
mov
jecxz
mov
sub
enter
movsl
enter
or
sbb
add
push
insl
add
fimull
out
pop
faddl
in
out
movsb
dec
leave
in
lahf
push
cmp
xchg
nop
daa
ja
adc
les
and
movsb
push
push
test
vmwrite
adc
pop
lock
mov
push
add
outsl
jo
test
cmc
sbb
in
jle
sub
push
pop
hlt
sti
popl
xor
mov
fldcw
mov
mov
or
aas
mov
sbb
test
adc
testb
lock
push
jg
mov
push
jle
sub
inc
outsb
dec
and
pop
iret
sub
sub
jecxz
mov
jmp
push
mov
scas
inc
jmp
adc
xchg
pop
mov
test
or
mov
lret
pop
mov
inc
mov
mov
push
or
pop
add
xchg
outsb
sub
add
pop
jne
fxch
lahf
cli
adc
bound
loop
jo
cwtl
sub
enter
lock
adc
sbb
push
jns
push
pop
cmp
mov
push
imul
sub
inc
inc
pop
pop
jno
dec
ret
cltd
sub
and
pushf
and
shll
dec
shrl
push
dec
mov
push
mov
mov
cmpsb
adc
orl
ss
xchg
push
jg
pop
ss
sub
rolb
cli
add
and
jo
dec
subl
push
lret
mov
fiaddl
jo
inc
lret
pusha
inc
adc
pop
leave
add
aas
aaa
add
jno
je
in
jb
pop
js
imul
inc
popa
daa
arpl
push
mov
je
cmpsl
dec
popf
lret
ficompl
add
adc
lret
imul
cltd
cld
mov
jno
xchg
movsl
xor
outsb
mov
jmp
adc
pusha
xchg
or
pop
pop
lret
faddp
jle
fmuls
adc
insb
push
rclb
loop
xchg
cmpsl
jne
push
inc
out
mov
roll
jb
push
test
aam
xor
push
sahf
pop
mov
mov
pop
arpl
test
push
outsb
lret
idivb
cmp
jp
pop
sbb
pusha
clc
sti
sbb
ss
not
add
lds
pop
mov
fcom
insl
imul
enter
sbb
sbb
add
rcll
push
gs
cmp
jp
outsw
mov
adc
ret
rorl
fstpt
and
jns
aas
xchg
orl
ljmp
mov
pusha
les
bound
aad
push
vcvttsd2si
leave
cmp
fsubr
mov
stos
jo
clc
stc
outsb
sarl
jnp
pop
push
dec
push
xchg
jmp
test
mov
andb
mov
push
leave
aam
in
dec
xchg
push
pop
daa
add
inc
xchg
dec
add
mov
inc
push
je
outsb
adc
in
adcl
sbb
jle
lock
filds
jnp
cmp
jmp
sbb
inc
fistpl
push
sub
mov
push
stc
test
adc
mov
je
cmpl
sub
xchg
mov
push
mov
imul
jae
push
fs
mov
out
cmpsl
lds
test
dec
jl
jmp
inc
pop
sbb
pop
mov
pop
push
aad
inc
and
inc
dec
push
mov
inc
push
jae
push
mov
decl
xor
clc
stos
pop
call
icebp
cwtl
dec
push
ljmp
fstl
mov
mov
sbb
cs
mov
insl
mov
inc
scas
aaa
ss
sub
cmp
hlt
xor
jl
leave
sbb
sub
loopne
adc
pop
icebp
push
inc
jo
dec
arpl
imul
jecxz
scas
std
mov
fdivp
je
test
lret
adc
aas
pop
filds
mov
pop
nop
mov
fwait
divl
scas
dec
dec
mov
jne
inc
mov
out
dec
in
cwtl
cmp
enter
arpl
mov
mov
rorb
addl
jmp
or
ret
hlt
js
jb,pt
cwtl
pop
in
jg
add
sub
notl
ficomps
test
xchg
cmp
leave
subb
popa
push
dec
call
sub
mov
mov
adc
mov
inc
xor
gs
fbld
ret
inc
and
out
pop
test
icebp
in
aas
mov
popf
dec
aam
popl
loope
int
dec
ret
cmpsl
cltd
mov
aad
in
jecxz
dec
outsl
pusha
xor
dec
pop
sub
sbb
into
pop
lahf
xchg
lock
adc
xor
inc
push
sub
sbb
pop
dec
pop
add
pop
sbb
sub
inc
or
std
dec
cltd
add
movsl
fsubr
mov
inc
pop
in
nop
sub
inc
push
cmp
xor
xchg
notb
sub
xchg
idiv
sahf
out
and
xchg
pop
lret
add
or
pop
in
pop
jp
push
mov
dec
repnz
inc
sub
jg
mov
sub
scas
or
inc
xchg
cltd
adc
notl
push
inc
iret
jge
ja
repz
cmpsl
push
int3
or
scas
jo
in
out
pushf
into
ficoml
and
pop
mov
adc
fdivp
cmc
sub
test
cwtl
cwtl
imul
lret
cmp
jb
sub
leave
mov
rcll
aam
gs
scas
lret
inc
stos
inc
jle
call
jmp
nop
dec
out
dec
rorl
imul
fsubrl
pop
and
and
pop
dec
inc
test
int
xchg
and
jl
push
sbb
xchg
sub
mov
imul
notl
push
aas
icebp
in
leave
or
sti
cmpl
fistps
xchg
aaa
mov
addr16
mov
and
shll
sbb
xor
fnstsw
es
aas
dec
shrl
cmpsl
pop
iret
icebp
mov
rorl
xlat
insl
subl
daa
jge
fists
add
scas
mov
cwtl
cmpsb
cmp
stc
insl
scas
push
jmp
popf
jg
inc
fbstp
mov
mov
pop
xor
outsl
imul
jae
in
roll
cmp
out
cmp
pop
jg
mov
enter
cwtl
and
mov
repz
in
xor
testl
mov
sarb
sbb
int
pusha
push
out
ret
inc
fistl
loop
aaa
lods
sub
subb
sbb
mov
mov
mov
out
xorb
cmp
ret
out
mov
mov
pop
sarl
cltd
inc
inc
insb
jo
jg
cltd
test
push
cmp
and
mov
xor
ja
lea
in
mov
and
leave
jge
rolb
icebp
adc
adc
out
cmpsb
pop
inc
inc
mov
cld
mov
aam
inc
rcrb
jb
xchg
dec
das
faddl
dec
sub
push
sbb
aam
addr16
xchg
sarb
inc
loop
sbb
mov
gs
cmpsl
cmpsb
lcall
test
mov
xor
lea
inc
xchg
cmp
jb
aas
xor
inc
push
cmpsl
mov
sub
ret
idivb
jb
cmp
mov
imull
add
pushl
dec
sub
mov
iret
loop
sbb
into
je
stos
pop
out
jnp
inc
roll
cmpsl
xor
dec
xor
iret
mov
or
add
hlt
je
mov
pop
imul
xchg
movsl
jb
push
and
js
hlt
hlt
add
jecxz
insb
adc
mov
pop
xor
outsl
jmp
push
push
mov
adc
sub
pop
repnz
sarb
pop
jo
ljmp
orl
fldt
mov
stos
pop
mov
mov
adc
fcoml
pop
inc
pop
sbb
es
pop
idivb
addl
push
aas
and
pusha
lock
pop
jne
push
testb
mov
int
or
insb
inc
mov
xchg
add
or
je
gs
lcall
add
inc
test
mov
inc
jmp
mov
sbb
and
pop
mov
add
cmc
xor
lds
pop
popf
mov
xlat
mov
xchg
std
sub
in
mov
jle
or
jg
sub
inc
shll
add
inc
add
fcmove
jno
pop
test
mov
pop
push
mov
and
hlt
dec
dec
jmp
jp
insb
out
or
xor
or
imul
jb
dec
sbb
ds
cmp
sarb
push
jno
lods
sub
sub
stc
push
lret
gs
add
shlb
lods
push
dec
imul
test
inc
imul
xchg
jo
inc
push
lret
icebp
cmovl
or
sub
inc
aaa
fisttps
mov
sub
leave
cmp
jecxz
je
leave
sar
or
jae
mov
fwait
popf
pop
outsb
mov
sub
xor
popf
push
ret
dec
mov
and
xchg
jge
cmp
dec
or
mov
xchg
cmp
xchg
push
push
inc
xchg
pop
outsb
decl
jo
loop
xchg
pop
test
ja
cmpsb
int
dec
and
les
xor
cmpb
stos
xlat
sahf
fcmovbe
xor
aaa
call
leave
and
mov
and
and
imull
ret
icebp
add
in
bound
scas
cmc
add
inc
adc
push
add
push
call
cmp
mov
dec
or
and
repz
leave
sub
xchg
imul
mov
nop
inc
inc
lret
mov
cmpsl
xchg
jg
adc
jl
push
out
dec
dec
jae
dec
jmp
inc
push
in
jg
inc
hlt
push
iret
and
jmp
popf
xchg
add
xchg
mov
jp
lock
inc
arpl
pshufw
or
lock
sbb
push
sarb
inc
dec
aam
insb
inc
fsubr
imul
xchg
imul
shll
and
jbe
std
and
dec
and
sub
pop
rcrb
in
jmp
fnsetpm(287
aam
outsl
les
pop
sbb
jne
push
ret
xor
push
icebp
ret
mov
hlt
xchg
vmrun
lcall
iret
in
push
xor
push
popf
or
ja
subb
dec
shrl
lret
call
pop
leave
lea
mov
push
ss
aad
outsb
push
repz
stc
sub
cmc
adc
push
shr
ficoml
inc
sub
imul
mov
mov
mov
cmp
cmp
js
inc
imul
cs
cmovg
push
sub
adc
push
inc
lahf
out
jae
icebp
insl
inc
movsb
add
xchg
cmp
inc
lods
jbe
test
xchg
je
pop
sbb
sbb
fimuls
add
jb
ljmp
mov
mov
jp
cmp
lea
mov
and
scas
sub
test
minps
jnp
cmp
in
xor
cwtl
packsswb
cmp
xor
xchg
mov
aam
pop
dec
jge
dec
push
das
imul
in
ja
ds
mov
jmp
pusha
sub
push
and
sbb
and
lret
mov
in
aaa
call
leave
stc
push
sbb
clc
inc
pop
and
call
sub
jb
and
inc
dec
stc
cmp
pcmpgtb
jmp
jl
sbb
ret
call
dec
cmp
push
jg
cmpsb
mov
cmc
push
add
mov
int3
dec
mov
test
ds
repz
lods
xlat
jno
iret
and
or
lahf
sub
sbb
addb
inc
outsl
pop
lds
nop
xchg
jno
arpl
icebp
pushf
inc
jbe
fisubrl
test
push
orl
inc
cltd
xor
sub
stos
sub
cmp
les
inc
out
sub
insb
or
movsb
inc
lret
xor
jmp
mov
or
xor
push
and
fwait
cwtl
sub
and
push
pop
fmull
push
push
test
daa
mov
dec
and
sbb
dec
xor
push
negl
and
pop
repnz
in
test
lahf
int
cmp
pop
stc
cmp
fcmove
cld
mov
shrd
les
cmp
sbb
movsb
in
arpl
aaa
clc
test
sub
flds
jae
movsb
aad
mov
js
sub
notl
lret
xlat
les
inc
adc
out
adc
leave
mov
punpcklbw
push
pop
rcrl
incl
insb
nop
jle
sub
push
pop
mulb
call
ds
mov
aad
imul
jb
inc
movsb
mov
lcall
xor
jg
int3
mov
jle
sub
or
leave
cmc
xchg
sbb
fisttpll
repz
xchg
aad
mov
cmc
int
mov
sti
mov
push
xchg
ret
push
mov
jp
rolb
adc
pop
leave
add
mov
add
lds
fstps
xchg
dec
inc
mov
dec
mov
cmp
and
pop
and
adc
arpl
push
das
cmp
mov
std
xchg
mov
push
xor
iret
fdivrl
or
jae
sbb
fdivrs
pop
cs
addl
adc
xchg
cli
sbb
out
in
repz
cmp
dec
jecxz
jb
inc
mov
jmp
in
mov
pusha
fstpl
repz
cmc
cmp
dec
out
add
jno
cmp
lret
pop
outsl
hlt
inc
xor
sub
stos
cmp
xor
sbb
jmp
mov
and
popa
adc
in
popa
add
notb
xchg
in
data16
cmp
sbb
pushf
imul
dec
jns
pop
sub
jle
mov
into
and
and
or
and
aad
inc
call
mov
rol
in
lds
mov
mov
inc
ja
repz
pop
insl
ja
sbb
sbb
das
dec
std
mov
xchg
fdivrl
cmc
and
lret
outsb
push
bound
xchg
ret
call
in
sbb
pop
xchg
roll
mov
xor
jae
roll
push
ds
sub
push
aam
adc
in
mov
jbe
pop
pop
add
inc
fldl
add
insl
and
fbstp
jl
mov
mov
pop
add
cmp
mov
sbb
push
xlat
fucom
pop
subl
cmp
pop
stc
xchg
outsb
popa
pop
es
vmread
or
sbb
or
movsb
xchg
enter
dec
mov
cwtl
xchg
mov
mov
dec
sahf
mov
sbb
adc
pop
push
jp
mov
mov
inc
push
jmp
push
bound
jle
push
lcall
adc
test
adc
lret
pop
or
pusha
ret
push
les
fiadds
jmp
jmp
lea
stc
mov
sbb
add
push
inc
inc
leave
mov
mov
test
das
jbe
push
shlb
js
or
dec
xchg
out
cwtl
inc
sahf
or
aaa
popf
push
jl
pushf
fcmovnb
out
in
xor
dec
xchg
or
xlat
jo
dec
jne
mov
dec
inc
sub
cmc
mov
jnp
iret
mov
aas
mov
and
imulb
sbb
push
or
push
mov
ss
jne
int
ret
and
sub
les
cmpsb
movsl
mov
push
adc
inc
cmp
in
dec
and
jp
lock
xchg
pop
int3
iret
ret
jno
mov
aaa
andb
and
ljmp
cmpsb
mov
sbb
jge
in
mov
push
add
dec
out
sbb
add
das
mov
inc
imul
inc
push
and
xchg
icebp
xor
movsl
je
adc
cmp
mov
in
inc
push
jnp
jle
sbb
lcall
cs
push
jbe
add
stos
sub
pop
outsl
fisttpl
fstl
inc
mov
mov
dec
xor
mov
mov
xor
fsubrs
inc
sub
loopne
adc
add
cmp
mov
lods
lahf
and
or
outsl
cmpsl
aaa
rorl
sbb
scas
lods
movsl
inc
dec
ljmp
scas
jno
add
adc
xchg
mov
dec
xor
ret
mov
jb
pop
fwait
scas
gs
nop
inc
std
repz
xorl
or
dec
mov
imul
mulb
ficoml
cld
aas
jae
pop
push
cmp
inc
sahf
ja
setp
xor
and
dec
jae
pusha
mov
imul
mov
mov
xchg
mov
xchg
insb
jg
inc
js
fwait
fwait
scas
jl
push
and
mov
xchg
mov
jae
adc
jl
jae
mov
dec
stos
cltd
xchg
jno
loope
pop
dec
mov
adc
test
fincstp
lds
xlat
push
fdivrl
mov
into
pop
in
imul
push
cmp
je
sahf
ja
lock
loopne
pop
jmp
bound
jge
dec
fistpll
xchg
test
pop
fsubrl
inc
outsb
push
push
test
rolb
nop
cmpl
fnsave
lret
loop
fcompl
fdivs
lds
sub
popf
or
cmpsl
sub
xchg
inc
in
jecxz
mov
outsb
scas
loop
cmp
xlat
adc
jecxz
aas
scas
test
mov
addr16
mov
aaa
jno
loope
jp
jns
jno
fs
test
pop
popa
das
movsb
mov
xchg
shll
jle
or
int3
je
jmp
nop
push
inc
and
lods
add
sar
ds
subb
hlt
pop
bound
fsubrs
xor
dec
loopne
pop
inc
mov
rcr
jbe
jo
out
lea
cltd
inc
pop
fnstenv
sub
inc
ret
out
add
mov
lcall
jae
sbbb
xor
xchg
jp
out
push
push
sub
mov
test
dec
pop
and
mov
icebp
lods
lcall
add
mov
in
add
int
xchg
int
mov
add
xor
test
test
dec
dec
lret
scas
dec
int3
push
mov
rcrb
mov
ror
sti
xor
mov
mov
jnp
test
cmp
dec
shlb
int3
lahf
push
sub
mov
jge
jg
mov
inc
bound
fucomp
jle
shl
inc
xorb
cltd
xchg
lret
mov
aad
xor
test
dec
and
ja
pushf
and
jmp
sub
movsl
scas
push
or
cld
daa
mov
imull
pop
insb
iret
jl
in
mov
jmp
add
add
and
pop
pusha
jmp
das
sahf
jne
fldt
out
test
into
adc
icebp
or
cmp
decl
mov
scas
cs
xor
and
movsl
jno
scas
sbb
mov
js
pop
loop
icebp
or
add
jno
add
fildl
or
jecxz
icebp
push
lret
sub
outsl
inc
jnp
push
dec
stos
mov
mov
icebp
mov
aad
fisubs
adc
jno
and
push
inc
xchg
mov
push
cwtl
cmpsb
or
das
adc
push
insb
xchg
jp
mov
push
jo
call
pop
cld
xor
cmpsl
repz
jmp
pop
lods
mov
inc
fs
jns
dec
adc
test
in
leave
or
inc
cmp
push
sub
stos
push
rclb
pop
xor
pop
imulb
cmp
icebp
scas
dec
outsb
mov
cmpsb
xorl
cltd
pop
adc
rclb
jae
and
out
jmp
scas
popf
test
pop
cld
lds
jns
push
cwtl
jo
in
and
mov
jge
push
int
popa
das
gs
fldenv
xor
lret
addr16
repnz
jmp
cltd
int3
repz
outsl
xor
mov
mov
mov
inc
cmp
pop
out
scas
inc
mov
push
adc
das
push
dec
mov
mov
fnstsw
cmpsl
xchg
push
cwtl
cmpsb
cld
dec
pop
out
dec
xor
pop
push
xchg
jb
dec
push
aam
push
xchg
xchg
push
lods
or
nop
lea
xchg
fs
jae
lock
mov
xchg
sti
mov
popf
shlb
mov
mov
mov
mov
sub
jle
daa
mov
jb
inc
enter
mov
and
movsl
ja
outsb
mov
inc
and
jb
or
dec
xor
mov
sbb
and
inc
lret
and
outsb
pusha
rorb
in
dec
imul
mov
std
jnp
and
das
mov
call
test
fisubrs
jo
xor
mov
mov
or
sbb
add
fisttps
jbe
xchg
sarb
rcl
daa
push
movsb
inc
jns
or
xchg
jns
sub
je
add
jp
stos
ret
lds
stos
leave
scas
push
and
lcall
pusha
fadd
xor
bnd
fs
xor
sbb
adc
mov
lods
cmp
movsb
xor
je
xor
icebp
aaa
sbb
insl
add
sub
fs
pop
mov
mov
hlt
aaa
mov
jne
and
or
sub
mov
out
fldcw
mov
dec
clc
mov
mov
jo
sti
insb
nop
jae
mov
retw
mov
fnsetpm(287
push
or
test
push
cs
popf
or
pusha
mov
in
or
lcall
aam
orb
dec
cmpsb
mov
lcall
lods
xchg
push
sub
faddp
inc
rcll
pop
or
popf
add
add
fstps
or
and
loopne
in
icebp
push
mov
int3
push
push
test
adc
or
lret
mov
movsb
dec
or
jae
xor
mov
jae
addr16
xchg
or
test
lods
cmpsb
sahf
pop
fwait
inc
sti
scas
es
leave
xor
insb
jbe
push
inc
inc
gs
sub
xchg
inc
and
lret
test
inc
adc
rcrl
leave
out
adc
inc
inc
nop
inc
vpshufd
sub
inc
adc
scas
lcall
push
cli
adc
imul
sbb
mov
rorl
push
push
adc
dec
push
inc
xor
roll
inc
fldt
inc
cmp
jne,pn
test
dec
push
lods
cmp
daa
dec
addr16
pop
scas
cmpsb
into
cmp
in
sbb
imul
mov
outsl
pushl
xor
jp
test
into
jo
or
addr16
xchg
fwait
popf
and
incb
gs
pop
ja
push
movsl
push
dec
cmpsl
das
outsl
cmp
pop
fldenv
cmp
shrb
outsb
pop
arpl
fxch
inc
movsb
push
or
lods
shrl
mov
mov
lds
jo
cli
and
pushf
sahf
lea
jmp
or
add
mov
inc
jb
icebp
stos
inc
xchg
repnz
clc
cs
ret
ret
dec
xchg
popa
testl
cltd
aas
mov
mov
lret
dec
xor
mov
iret
rcrb
out
adc
cmc
jns
add
cmc
scas
jle
pusha
jns
leave
clc
push
call
out
je
stc
adc
jae
push
push
dec
bound
pop
inc
xchg
mov
jbe
ja
push
icebp
or
sub
mov
mov
mov
fs
jb
repnz
and
xor
iret
and
mov
dec
and
cwtl
mov
sbb
call
ss
or
lods
xchg
fsubp
jbe
mov
jmp
add
sub
sbbl
divb
add
repz
shl
pop
int
mov
lods
imul
adc
or
repz
ficoms
jb
inc
cltd
inc
leave
js
cmp
ds
mov
negl
and
ss
dec
add
push
popa
xchg
in
mov
mov
jmp
testb
add
jbe
aad
cmpb
xchg
jge
sahf
js
icebp
arpl
bound
pop
leave
or
popf
dec
mov
aas
xchg
xor
addr16
sbb
add
mov
cmp
cltd
inc
sub
or
add
push
dec
jne
fsub
subl
psrad
inc
jb
rolb
and
cmp
or
bound
lock
push
push
popa
loop
mov
adc
sub
fidivrs
push
inc
pop
inc
clc
arpl
lret
push
arpl
stos
inc
inc
push
cmp
xor
es
inc
popa
adcb
shr
dec
inc
dec
ds
and
inc
adc
xchg
jp
test
jne
repz
negl
push
loopne
jge
jo
clc
std
push
js
fdivrs
sub
test
add
cs
xchg
call
xchg
ret
pop
cmovb
ficoml
sti
jg
mov
jno
adc
icebp
aad
inc
cltd
scas
out
fbstp
jae
sub
cmp
add
roll
dec
or
pop
repnz
inc
pop
addr16
mov
outsb
cmp
jg
add
or
mov
vrsqrtps
addr16
repnz
push
cmp
ds
fnsave
sub
fchs
mov
ljmp
sti
sub
inc
gs
je
mov
pop
add
inc
inc
jb
mov
ss
adc
sub
mov
jns
outsb
jecxz
leave
pop
inc
fstl
cmpsb
sbb
stos
stc
push
mov
push
mov
inc
push
daa
mov
xor
fsubr
daa
pop
inc
fadds
sub
enter
cmpsl
repnz
sub
lahf
xchg
leave
mov
jle
rol
xlat
test
xchg
mov
pushf
xlat
mov
inc
je
aam
jmp
or
sub
jecxz
adc
lahf
fldcw
xchg
cltd
and
pop
sbb
movsb
js
push
rcll
repz
pop
push
cmp
inc
mov
and
imul
lds
cmc
fists
dec
div
dec
xchg
imul
jle
xor
push
mov
push
faddl
fs
mov
jb
push
rorb
repnz
imul
dec
int
in
les
xchg
pop
jge
sbb
add
stos
adc
xchg
dec
xor
sbb
imul
les
push
dec
inc
cmpsb
mov
sbb
xor
inc
dec
dec
loope
mov
add
pop
inc
push
int3
test
mov
cmp
and
fisttps
fisttpll
ficoml
dec
cs
test
mov
push
test
ja
push
mov
sbb
cltd
daa
cmpsl
insb
mov
inc
repz
mov
stos
stos
adc
mov
jg
push
repz
gs
cs
int3
andl
xor
adc
inc
call
mov
cs
push
sub
dec
test
inc
shrb
inc
ret
cmp
gs
outsl
cmp
jmp
inc
mov
rcr
in
int
push
dec
lods
jge
jno
jne
inc
pop
repz
dec
and
mov
cmpb
loope
int
sub
and
sarb
add
in
cmp
push
push
shrl
outsb
inc
dec
pushf
jbe
insl
xchg
inc
adc
adc
cmp
nop
inc
shr
imul
lret
dec
xchg
out
mov
popf
fdivs
jp
or
inc
icebp
mov
sub
movsl
cmc
ljmp
xor
imul
sti
cmp
outsl
mov
jle
mov
arpl
icebp
insb
cli
jbe
jp
les
in
shl
inc
scas
jbe
cmp
adc
mov
jne
xchg
push
xchg
aam
movzwl
mov
pop
es
hlt
insb
push
inc
adc
rorl
adc
inc
shrb
ljmp
leave
stc
test
fcoms
mov
movsl
lea
repz
or
scas
or
and
daa
mov
mov
inc
shl
nop
jno
scas
jb
mov
xchg
je
and
pop
sub
cmp
cmp
movsl
mov
dec
fdivr
add
out
in
cmp
or
dec
jle
or
scas
push
rcrl
xor
fisubl
arpl
mov
repz
outsb
mov
push
jmp
dec
or
sub
decl
fstl
leave
in
sub
insb
mov
jae
imul
in
sbb
mov
mov
pop
sbb
fstpt
xchg
lock
adc
repnz
push
sahf
loopne
in
mov
dec
add
dec
lcall
inc
and
mov
push
pop
outsb
lock
jl
cltd
out
jl
pop
xchg
leave
xchg
dec
push
jg
xor
jg
and
sub
mov
leave
and
cltd
push
cs
loope
xchg
push
jge
hlt
cs
ja
push
movb
mov
in
inc
jle
mov
addr16
push
rcrb
aas
jne
loopne
cmpsl
fucomi
mov
sub
sbb
lods
subb
sbb
fadds
repnz
jge
mov
roll
sub
and
sbb
icebp
aad
imul
fs
push
lretw
add
cmp
aas
mov
icebp
scas
mov
mov
lret
call
popa
test
jmp
jb
sbb
lock
popa
inc
shll
inc
push
into
sbb
sub
loop
cmp
stos
call
fildll
mov
call
push
lcall
out
xchg
mov
aad
in
out
cltd
hlt
jnp
pushf
dec
in
call
rcl
xchg
or
sub
jg
sbb
cmp
mov
cs
int
repz
ja
cli
dec
or
out
fisttps
jne
xlat
push
sub
xorb
mov
dec
adc
mov
cli
test
negb
imul
and
mov
imul
stos
inc
mov
loop
sbb
stos
cli
ss
xchg
stc
pop
fiadds
fisttps
cli
xchg
dec
pop
in
movsb
aas
popf
mov
inc
subl
enter
ficoms
add
cmp
mov
sahf
xchg
repnz
mov
dec
xor
iret
mov
adc
pop
inc
enter
and
lods
mov
jecxz
dec
xor
xchg
push
in
std
adc
inc
subl
fs
insl
stc
lea
rolb
lret
dec
out
insl
lret
mov
out
xchg
insb
rcrb
sahf
mov
and
fistl
hlt
fdivrs
add
adc
fadds
cmp
aaa
push
jae
movsl
cltd
pop
or
push
jmp
scas
scas
jge
jns
ror
sbb
mov
jl
gs
pop
push
dec
or
jmp
push
outsl
jnp
pop
and
arpl
jns
out
add
icebp
int
cmc
xor
and
dec
push
sub
mov
dec
mov
jmp
adc
pop
sub
jns
into
es
les
and
loope
aad
and
and
cli
and
sbb
sbb
fwait
decl
ret
and
add
push
test
adc
and
ja
cmp
loopne
ret
inc
or
outsl
push
pop
xchg
and
insl
ds
fsubrl
inc
int
ja
inc
lret
pushf
xor
cmpb
clc
mov
into
inc
adc
dec
mov
sub
and
loopne
dec
lahf
xchg
push
add
call
pusha
add
loope
inc
pop
cltd
out
dec
fldl
rclb
fcomps
sub
in
xlat
stc
in
js
test
mov
nop
rcll
xchg
clc
xchg
je
insb
mov
inc
sahf
push
sub
sbb
inc
push
dec
mov
es
dec
into
fyl2x
mov
mov
cli
cmpl
xor
icebp
std
inc
iret
or
jne
xchg
js
into
sub
jmp
jecxz
imul
jl
aam
xlat
add
lods
je
inc
cmpsl
jge
out
scas
or
gs
test
sar
scas
bound
fldcw
push
rcll
les
int
adcb
jle
and
cs
adc
out
insb
mov
xchg
cs
cs
sub
mov
fisttpll
lret
inc
pop
jns
outsl
mov
outsl
lds
pop
ljmp
aad
outsb
out
mov
loop
push
into
pop
test
ds
daa
loop
dec
xchg
mov
pop
xchg
js
pop
mov
jne
popf
inc
ljmp
push
int3
aaa
jle
insb
sbb
dec
das
push
rcll
ret
inc
xchg
pusha
xor
cltd
mov
inc
rcll
inc
or
jne
icebp
shr
gs
jnp
jo
jbe
or
ret
dec
jecxz
ds
ds
push
sbb
addr16
aam
test
inc
out
cld
es
imul
out
daa
enter
imul
ljmp
inc
cltd
mov
inc
push
xchg
dec
sbb
subb
outsb
fwait
xchg
outsl
xchg
or
mov
lret
dec
test
mov
fimull
xchg
dec
jns
push
inc
push
jmp
jmp
pop
and
cmp
pop
loop
dec
xor
jecxz
sub
inc
push
mov
jge
jge
xor
mov
mov
sbb
aad
cmpsb
push
sbb
cmp
or
xor
xchg
sbb
sub
sbbl
xor
jno
stos
and
cwtl
movsb
repnz
ljmp
sarl
insb
inc
dec
imul
rclb
icebp
and
pop
or
sbb
aad
inc
lahf
jo
pop
push
lock
js
dec
test
ds
popa
mov
movsl
imul
dec
mov
call
lock
push
dec
cmpsl
adc
sbb
outsb
enter
and
pop
jle
push
loop
adc
sbb
lcall
adc
imul
push
cmp
rclb
push
mov
ror
mov
jp
je
adc
jo
xor
mov
push
ret
push
mov
shll
clc
rcr
gs
por
cltd
jg
sub
xorl
bound
xor
pushf
or
out
xchg
dec
rol
push
xchg
pop
jmp
lds
stc
jg
outsb
sbb
insl
mov
pop
aas
jnp
test
in
ficompl
jmp
stos
mov
lret
mov
sahf
dec
inc
loop
push
lea
js
and
in
or
icebp
mov
pop
ret
push
xchg
aaa
test
lods
lea
push
inc
mov
jno
push
xor
kmovw
pop
mov
addr16
call
aad
in
and
addr16
push
push
testl
push
popa
and
outsl
push
pop
xor
lods
or
addr16
sbb
add
lahf
fisttpl
imul
push
out
js
test
and
in
ret
data16
hlt
pop
jl
push
vhsubpd
cmp
xor
and
int3
jnp
mov
data16
pop
hlt
mov
pushf
xorl
inc
dec
or
outsb
dec
cmc
cli
and
ds
mov
inc
and
xor
lret
repnz
and
insb
dec
shld
mov
add
xchg
inc
push
xor
imul
jae
repz
pop
rorl
or
and
cwtl
xchg
adc
popa
or
mov
movsb
fidivs
out
lret
nop
movl
push
inc
cmc
aas
das
pop
adc
dec
aad
sbb
ljmp
cmc
imul
push
js
jo,pn
in
push
jns
icebp
flds
pushf
xchg
add
dec
add
cltd
imul
adc
or
sbb
enter
js
xor
adc
fs
sub
int3
sbb
xchg
sub
push
inc
xor
inc
je
cmp
cltd
xchg
cltd
cmpsb
jg
mov
add
cmp
and
mov
ret
aad
push
fistpl
outsb
jbe
mov
imul
cmc
scas
mov
stos
mov
pop
sbb
in
xlat
push
outsb
cmp
loope
sub
icebp
sbb
mov
sbb
xchg
add
in
jae
pop
stc
leave
fcmovnbe
inc
mov
scas
adc
cmpsb
sbb
pop
sbb
mov
addl
xchg
adc
dec
dec
xor
loope
imul
sub
js
dec
ret
xlat
aam
xchg
insb
jb
jg
sti
imul
scas
xchg
lea
push
mov
inc
in
ja
test
mov
orb
cld
stc
push
add
inc
clc
out
adc
sti
push
inc
adc
xor
ss
out
pop
aad
imul
and
adc
or
jl
jl
mov
ficomps
mov
in
mov
mov
rcr
out
pusha
mov
xor
outsl
jno
xchg
pop
lods
icebp
mov
dec
pop
in
pop
cmp
and
adc
aas
pop
jmp
dec
stos
push
mov
shrb
outsl
cli
fwait
mov
inc
mov
gs
jle
mov
je
pop
jg
or
dec
pusha
bound
sti
xor
push
dec
inc
std
jns
jne
mov
ret
out
cmpsl
loop
jg
icebp
mov
inc
push
jl
or
insb
iret
pusha
add
and
and
stc
int3
mov
shr
scas
movsl
jmp
xlat
jl
dec
pop
inc
lcall
inc
jnp
cmp
dec
sbbl
scas
jg
ja
jae
add
xorl
stos
test
lea
dec
cmp
jl
cmp
mov
insl
lock
lds
dec
pop
outsb
jp
repnz
xor
dec
sub
das
outsb
jne
push
inc
andb
push
in
xor
das
inc
and
push
adc
mov
subl
popa
sub
adc
data16
sub
sub
jb
lea
or
test
xor
imul
jae
inc
lds
xlat
or
in
iret
sbb
daa
sbb
test
inc
cmp
cmp
pusha
outsb
cld
jne
scas
lcall
in
popa
sub
inc
sahf
hlt
gs
push
subb
dec
movsl
call
sub
rorl
dec
jb
imul
mov
mov
jp
addr16
add
test
pop
mov
shlb
sbb
psubsw
push
or
inc
lahf
push
out
sbb
xchg
or
rclb
insl
adc
mov
cmpsb
mov
into
das
arpl
pop
inc
mov
cmpsb
bound
das
outsl
scas
push
inc
ror
pop
jno
and
xor
shl
mov
push
scas
adc
dec
mov
jno
pop
pusha
mov
stc
inc
or
cltd
xor
add
push
adc
jno
sub
inc
clc
xor
lcall
jp
inc
push
imul
jae
inc
jle
mov
int
lahf
add
ja
rcrl
xchg
in
jg
insl
std
fucomp
xorl
jmp
leave
movsl
scas
xchg
iret
rcr
sub
test
jmp
out
test
fdivl
aam
int3
sbb
jo
call
adc
xchg
arpl
testl
jb
xor
xchg
lcall
out
pop
clc
cmpl
mov
mov
xor
stos
movsl
pop
push
popf
ret
pop
mov
or
clc
test
xor
lods
inc
iret
fucomp
das
push
mov
scas
push
xchg
sub
cmp
jecxz
push
stc
imul
aad
adc
shrl
mov
cmp
mov
dec
push
and
sub
fmulp
mov
shll
nop
push
mov
cmpsb
jmp
data16
lcall
popa
sbb
push
aam
fnstcw
enter
lock
imul
inc
fbld
add
dec
jg
add
shll
out
nop
pop
pop
test
sbb
sbb
mov
scas
mov
repz
in
pop
rcr
inc
jne
fldt
test
int3
fcmovbe
fildll
pop
sub
loope
fldl
mov
in
push
mov
dec
sbb
xchg
ficompl
inc
jne
subl
and
jns
jne
cltd
push
ja
push
sub
insl
pop
mov
loop
pop
pushf
mov
scas
inc
fdivrs
in
xor
xchg
inc
inc
adc
inc
push
pop
push
aam
sub
push
loop
call
push
scas
addb
cwtl
rep
sub
dec
xchg
mov
dec
xor
lcall
xchg
repz
fisttpl
enter
jae
push
cltd
in
jge
push
pop
xor
es
add
push
xchg
jle
push
stc
cli
addl
cmp
xor
ljmp
push
pop
push
mov
rcr
imul
es
pop
cltd
jecxz
pushf
outsb
sti
test
adc
sbb
add
xchg
sbb
cltd
mov
in
out
dec
mov
sarb
sub
sbb
repz
insl
fldenv
aad
shlb
mov
pop
sub
iret
cld
pushf
lods
inc
jnp
bound
add
pop
xchg
add
cltd
sub
xlat
mov
pusha
pop
xchg
movsl
fimuls
and
call
xor
hlt
xlat
mov
cmpsl
shlb
lds
push
push
in
mov
push
sbb
mov
loope
jle
xchg
movsl
sbb
or
push
adc
jge
jo
into
cmc
test
scas
jno
lea
fs
int
or
neg
jns
push
es
xchg
outsl
pop
mov
mov
xchg
dec
adc
pusha
data16
push
lret
es
mov
ror
mov
repnz
in
gs
push
outsl
shrl
ret
in
pushf
ficomps
dec
xchg
push
scas
pop
inc
retw
fmull
bound
cmp
ret
push
pop
popf
mov
inc
push
notb
fsts
inc
dec
sub
xchg
pop
std
mov
loope
sub
notl
out
imul
imul
xchg
mov
std
lahf
add
push
mov
test
sub
mov
adc
xorl
dec
stc
push
into
inc
pop
out
jo
cmpsl
xor
enter
leave
fwait
pop
rcrl
daa
adc
inc
xchg
repnz
fidivl
mov
fwait
negb
xchg
jg
push
xchg
leave
ss
or
dec
mov
xchg
cmp
addr16
inc
mov
push
jno
mov
nop
popf
popf
stc
dec
adc
sub
add
lcall
or
movb
pop
test
fs
push
out
mov
mov
fiaddl
rcrl
dec
dec
in
mov
fcmovnb
lahf
rcll
mov
dec
nop
insb
imul
pop
push
roll
jl
xchg
and
jge
xor
or
cltd
jae
cwtl
cmpsb
mov
xor
pop
adc
repz
ljmp
sbb
xchg
int3
inc
inc
xor
jb,pt
sub
ret
je
hlt
push
cld
loop
xchg
dec
int
scas
push
push
pop
or
ret
out
aad
jp
sbb
dec
inc
call
jb
outsl
mov
je
jmp
mull
jnp
add
ljmp
stc
pop
sar
dec
mov
fcmovnb
addr16
xor
imul
hlt
jns
jo
xchg
test
fnstenv
idivl
jbe
dec
movsl
xor
ret
xchg
icebp
jp
sbb
mov
push
mov
cmp
movsb
cmp
pop
inc
jb
dec
push
inc
jle
ds
fs
mov
pop
test
out
mov
sub
fnstsw
sub
pop
aas
rcrl
scas
movsl
sbb
or
fcos
cmp
ffree
push
mov
xor
movb
imul
push
shrb
test
lahf
imul
sub
jo
push
ja
hlt
jge
pusha
rclb
icebp
mov
mov
int3
ficoml
jg
popa
cmp
pop
pop
dec
inc
divl
jnp
sti
movsl
xor
aaa
pop
iret
xchg
je
jne
mov
sub
add
imul
shll
mov
xor
pop
jle
call
push
add
pusha
fs
pop
sub
cmp
imul
push
and
dec
or
andb
shlb
in
sti
jo
stc
icebp
or
sti
loope
pop
lret
inc
sti
mov
sub
out
lea
sbb
lds
ds
inc
push
jle
jl
push
out
inc
sbb
xor
mov
jns
mov
sahf
rorb
and
inc
jmp
inc
fsubr
dec
mov
sbb
add
es
xchg
inc
add
jg
sub
xchg
xchg
push
dec
popf
dec
pop
idivb
in
jge
or
std
mov
push
adc
lds
mov
jnp
inc
popa
inc
xchg
stos
push
dec
mov
pusha
dec
mov
cmc
mov
popa
sahf
mov
jo
leave
jmp
push
pop
sub
ds
fcompl
ja
lods
dec
cmpl
dec
jno
mov
sbb
jmp
or
cwtl
sbb
mov
lock
or
mov
fdivrl
shlb
gs
paddusw
inc
fmull
jb
jo
dec
fildll
cmp
push
sbb
std
pop
or
js
push
loop
movsb
js
mov
filds
inc
enter
or
mov
jb
mov
scas
stc
aad
mov
fcoml
ret
jbe
sub
lcall
test
cmp
fwait
leave
xchg
jb
mov
repnz
xchg
insl
fcompl
and
rcll
ja
icebp
mov
xchg
xor
popl
popa
adc
and
pop
popa
andl
insl
fs
popa
push
inc
aad
jge
dec
fdivr
sbb
outsl
mov
push
push
sub
jp
loope
adc
sarb
push
push
cmp
jmp
inc
sub
sub
nopl
push
subl
fisubl
mov
rol
into
xchg
test
int
cmpsb
hlt
and
inc
push
mov
mov
xchg
sbb
pop
mov
jg
das
jecxz
push
mov
add
imul
push
push
jnp
mov
insb
out
gs
dec
data16
aad
sbb
lahf
mov
ja
pop
pop
dec
mulb
outsb
popa
cmpsb
sbb
inc
xchg
mov
inc
mov
subl
push
and
lds
lods
xor
dec
mov
xchg
inc
scas
pushf
mov
mov
popa
icebp
sub
pop
dec
mov
push
pop
outsl
and
sbb
xchg
push
jns
and
mov
push
ficoml
mov
pop
or
sub
inc
cmp
mov
dec
std
and
jg
jae
test
enter
push
pop
mov
mov
mov
test
or
jo
div
stos
xchg
cmp
bound
popf
test
jb
arpl
sbb
add
popa
cmpsl
mov
mov
sub
cmc
loop
xor
or
lods
jecxz
push
jge
xor
leave
xchg
pop
sub
xor
les
mov
inc
daa
sbb
pop
mov
inc
shlb
lock
push
xchg
mov
dec
cwtl
mov
push
aam
adc
arpl
adc
pusha
sbb
dec
shr
mov
inc
adc
dec
mov
adc
mov
sbb
mov
jbe
shrb
pop
sub
add
add
cltd
jle
mov
cmp
les
inc
popf
gs
insb
call
pusha
jle
test
cld
mov
mov
xchg
daa
imul
fwait
pop
dec
push
lods
inc
lods
dec
shrl
pop
and
add
cmpsb
popl
inc
mov
cmpsb
inc
cmpsl
add
mov
lods
fiaddl
jb
sub
jae
xchg
inc
shrl
dec
push
aam
movsb
inc
test
stc
mov
dec
jmp
xchg
fcompl
hlt
faddl
jae
cltd
dec
add
cmp
lret
sbb
cld
mov
dec
popf
out
mov
lea
inc
xchg
inc
adc
and
orb
xlat
mov
push
jbe
outsl
adc
iret
push
add
cmp
scas
es
int3
pop
scas
icebp
jmp
push
ljmp
xchg
mov
or
add
outsl
add
fs
cmp
and
fisubl
icebp
stos
push
in
sti
inc
test
frstor
mov
pop
push
pop
add
push
stos
sbb
dec
addr16
sbb
ret
cmp
pop
out
inc
bound
jno
mov
in
push
je
sbb
mov
and
addr16
sub
dec
jo
dec
or
inc
xchg
push
xchg
cmp
icebp
fbstp
or
xchg
pop
jae
das
adc
xchg
ficompl
fucomi
push
insb
sbb
or
ror
imul
dec
in
repnz
gs
daa
mov
jmp
rcll
xor
lds
sub
popf
ja
addb
sub
loopne
mov
cmc
pop
inc
jp
scas
ss
push
jmp
popa
jmp
pusha
icebp
mov
xchg
aaa
into
daa
mov
cmp
add
insb
imul
les
out
add
xchg
in
iret
xor
push
jl
jo
mov
pop
lea
sub
fidivl
or
shrb
mov
or
mov
gs
cmpl
or
mov
xor
xchg
mov
cs
pop
or
test
cli
push
lret
pop
pop
sahf
jbe
lods
orl
leave
cmp
fidivl
or
inc
rcrl
cmp
fsubl
mov
cwtl
in
inc
jle
mov
jmp
arpl
jge
xchg
arpl
xchg
jle
sub
jmp
ds
cmp
out
mov
dec
xor
hlt
fldln2
fildl
orb
scas
or
fnop
inc
dec
dec
xchg
adc
mov
jae
mov
jno
mov
pusha
movsb
mov
fsubl
repz
pusha
mov
inc
leave
jne
mov
imul
dec
js
iret
arpl
xor
inc
stos
pop
int3
or
imul
imul
arpl
sbb
rcrb
mov
or
mov
cmpsb
popa
and
jnp
mov
xor
inc
out
cmpsb
insl
imul
jmp
iret
xor
sbb
jne
push
in
in
sbb
sbb
dec
cltd
sub
sbb
inc
popa
lock
imul
inc
pop
lods
ja
cmp
mov
icebp
dec
stc
xchg
jne
insb
js
sbb
imul
sarl
fs
or
outsb
jbe
cltd
pop
jmp
std
fwait
jle
add
mov
pusha
shlb
cmc
adc
std
inc
pop
pop
je
mov
push
mov
sbb
ljmp
inc
shl
add
insl
insb
ljmp
jno
inc
stc
mov
add
bound
inc
xchg
ret
inc
sbb
inc
outsb
clc
orb
dec
neg
mov
xor
dec
mov
fldcw
popaw
sahf
loope
loope
insl
std
push
push
or
mov
cld
imull
sahf
arpl
adc
mov
shrl
and
pop
pop
ficomps
sub
push
add
push
in
js
dec
xchg
lcall
sti
jle
popa
cwtl
sbb
adc
stos
sarb
fcmovu
jno
jno
movsb
idivb
imul
sarb
pop
xor
call
mov
mov
jmp
andl
in
roll
pop
jae
pop
clc
mov
dec
dec
leave
out
pop
ds
in
loop
imul
mov
das
insb
test
sbb
xlat
rolb
mov
int
pop
mov
jb
stc
mov
mov
pop
push
leave
mov
lock
xor
gs
addb
fs
push
mov
xchg
loope
rcrl
sarb
lock
sbb
xchg
inc
adc
cmp
stc
xor
call
jae
iret
jmp
scas
movsb
stc
xor
notl
dec
movsb
das
xchg
mov
cwtl
mov
mov
or
int
pop
ret
inc
leave
jo
sbb
adc
dec
dec
xor
in
es
or
testb
cmp
sbb
xchg
pop
loopne
icebp
fnsave
jp
and
lods
xchg
jo
push
add
scas
daa
loope
pushf
jg
cld
lret
jp
aaa
lahf
lret
or
xchg
icebp
xchg
add
shll
xor
outsl
popa
aaa
push
mov
stos
mov
fiaddl
adc
test
and
imul
push
dec
adc
mov
mov
fwait
xchg
inc
call
insl
rolb
es
rorl
inc
movsl
pop
fld
inc
daa
xchg
pop
daa
and
ds
je
inc
js
jne
out
scas
adc
ret
xlat
in
push
stc
dec
jl
add
cmpsb
push
jbe
std
xlat
jle
pushf
xor
es
push
sbb
incb
dec
and
xchg
sub
icebp
popf
inc
stos
mov
lods
push
in
push
hlt
jo
or
xor
popf
outsl
inc
mov
psllw
stc
push
mov
hlt
fstpl
lcall
sahf
xor
pop
add
ss
test
and
sbb
add
out
mov
cmp
push
adc
fmul
mov
mov
jbe
push
rorb
jge
mov
cmc
test
js
push
push
mov
faddl
adcb
and
iret
xchg
movsb
in
lcall
je
dec
mov
dec
xor
lretw
jb
mov
pop
mov
and
mov
sbb
push
push
xor
mov
stc
mov
pop
in
outsb
outsl
lea
mov
xor
stos
testb
or
jbe
and
xor
adc
inc
mov
xchg
push
call
mov
inc
push
idivl
enter
insb
call
outsl
mov
jmp
mov
lock
lretw
int3
cmpsb
fstpt
jno
inc
or
jmp
aaa
jns
pop
lds
mov
or
cs
mov
clc
push
lret
rolb
icebp
add
mov
sub
push
jp
push
jp
insl
fidivs
stos
jno
lods
mov
fiadds
add
push
cmp
mov
cmpsb
cmp
jle
mov
popa
and
call
sub
jmp
sarl
jg
sbb
xlat
sbb
aam
stos
xor
jecxz
adc
dec
stos
and
sub
adc
mov
repnz
dec
push
jns
inc
inc
lock
and
imul
xor
push
sub
in
jge
lds
pop
aad
jp
ss
sahf
pop
push
inc
fwait
xor
fs
push
imul
inc
cli
add
and
ret
mov
movsl
icebp
testb
cmpsb
lea
jno
test
call
sbb
clc
lahf
call
ja
xor
jp
sub
xor
cltd
jle
push
lock
shrl
inc
mov
mov
dec
and
fcmovne
mov
pop
jle
jnp
insb
icebp
ja
mov
insb
stos
jae
sub
jecxz
ds
stos
dec
adc
mov
mov
mov
or
lds
adc
lcall
pop
je
dec
xor
lods
in
out
in
pop
jo
subb
shrl
mov
call
cltd
sbb
inc
pop
jl
movsl
mov
add
push
and
cmovp
pop
test
into
sub
cmp
add
push
ja
cmp
shrl
sub
pusha
xchg
lret
rorl
imul
push
jo
or
adcb
sub
dec
cmp
jle
inc
jp
mov
and
clc
mov
arpl
mov
mov
mov
dec
movsl
mov
lret
mov
adc
pop
mov
mov
loopne
fsubrs
inc
mov
add
imul
cmpsb
in
mov
sbb
add
dec
inc
dec
adc
xor
dec
icebp
jle
mov
movsb
fcmovu
xor
stc
mov
lods
pop
loopne
movl
add
pop
cmp
xchg
cmp
out
adc
mov
and
mov
sub
pop
sub
and
ja
dec
xor
lret
jp
inc
cmc
mov
out
out
dec
popf
dec
xchg
cli
loope
gs
xchg
jbe
or
rolb
sub
je
add
dec
xchg
cmp
sub
hlt
mov
and
sub
jae
push
mov
xor
fldl
std
imul
lret
mov
dec
stos
stc
shll
mov
sub
imul
or
jg
mov
cmpsl
cwtl
call
popf
loopne
and
inc
xchg
sub
movsb
mov
dec
das
insb
leave
leavew
sbb
stos
mov
sbb
sbb
shrb
sub
cmc
ljmp
data16
xchg
mov
adc
leave
aad
push
jae
sbb
push
jge
je
jno
mov
cmp
push
xor
inc
and
icebp
jg
ss
fs
push
iret
aad
scas
ds
jp
mov
push
ror
pop
cmpsb
xchg
cmpsb
sub
dec
sub
lock
jae
fld
aam
enter
pushf
mov
xor
and
lahf
push
shrl
pushf
mov
aas
repz
fs
pop
leave
mov
cli
inc
sub
jge
mov
cmp
lea
mov
fsubl
or
push
mov
outsl
push
aam
into
fisubrs
gs
cltd
aam
leave
insl
lret
loop
cli
jno
xchg
xor
mov
sbb
mov
bound
shlb
add
out
jl
sub
imul
mov
movl
pop
xor
lods
add
mov
out
sbb
inc
inc
popa
pushf
push
insl
in
adc
jb
loopne
scas
popf
and
subb
or
sub
dec
loopne
add
fdiv
repnz
leave
pop
fs
lcall
and
mov
jg
jecxz
ja
pushf
out
push
popf
adc
or
push
jne
mov
fcom
shlb
jl
cli
jno
push
inc
stos
imul
or
outsb
enter
add
int3
es
aas
movsb
lcall
fisubrs
or
and
dec
adc
push
fisttpll
jecxz
pop
aas
lock
or
dec
pop
lds
push
repz
frndint
std
mov
out
aaa
push
jl
pop
pop
dec
pop
rcrl
sbb
clc
roll
jns
hlt
test
inc
adc
jo
sub
insb
xor
jmp
jo
das
jbe
push
cltd
jge
lret
repz
sti
xor
xor
imul
xor
sub
pop
inc
dec
pop
mov
fists
es
fstpl
xchg
addr16
popf
xchg
xor
and
mov
shl
or
stc
mov
or
iret
sbb
mov
lds
inc
fisubrs
call
addr16
ja
jg
mov
push
into
cmp
cmpsb
sbb
lcall
arpl
fsts
dec
subl
dec
dec
cmc
sub
mov
repz
fisttpl
jb
fsubrl
dec
repnz
fidivrl
jnp
push
shr
cltd
int
pop
sbb
inc
jp
je
outsl
xchg
out
push
fdivrp
sbb
xor
cmp
dec
cmpb
movsl
dec
movsb
cmp
mov
pop
mov
sub
dec
ljmp
pop
imul
pop
insl
shrb
xlat
loopne
fldt
movsl
and
cmpsl
sub
mov
jns
ljmp
mov
aas
pop
add
ljmp
test
mov
pop
movsl
repnz
dec
imul
cmp
cmp
mov
inc
sti
mov
ss
sbb
fmuls
dec
inc
and
je
push
loop
xchg
testb
int3
fstps
clc
cmp
dec
cmc
in
sbb
add
sub
pop
xor
neg
mov
adc
push
or
lock
mov
jns
sahf
add
movsb
fmul
in
xchg
insl
xchg
mov
mov
ffreep
inc
inc
test
or
adc
mov
scas
or
mov
mov
fildl
sub
pop
jne
mov
xor
add
push
stos
xor
adc
adc
and
fadds
sub
xor
lock
mov
lret
cmp
jbe
fstpl
test
icebp
rcr
andb
lret
out
gs
roll
pop
cli
scas
cmc
andb
cmp
into
sahf
aas
repnz
lcall
jne
int3
push
mov
je
add
jl
push
inc
push
rcrb
inc
xor
pop
int3
ja
addr16
mov
mov
mov
xchg
jne
nop
cs
fldl
add
repnz
inc
mov
add
inc
ss
lds
add
xor
xchg
sbb
mov
mov
js
and
sub
cmp
push
xor
fadd
arpl
popa
xor
orl
pop
std
shlb
push
and
inc
jb
icebp
jmp
jmp
fs
or
dec
imul
ljmp
pop
pop
in
mov
jmp
mov
and
insb
mov
scas
pushf
push
mov
jae
mov
jne
xor
sahf
cmp
mov
lret
fstpl
add
gs
xor
in
out
mov
dec
sti
popa
mov
adc
in
sub
xchg
andb
lock
str
and
inc
int
jmp
hlt
push
xchg
pop
stc
push
pop
push
jns
fstl
ret
mov
bound
stos
outsl
fisubs
xor
loopne
ljmp
pop
mov
das
int
cmp
lock
mov
cmp
sbb
inc
shrl
push
xor
test
push
subb
lods
inc
sahf
cs
xlat
into
jbe
mov
pushf
pop
test
xchg
dec
aas
in
inc
inc
imul
cmp
sub
je
adc
inc
xchg
sar
rorl
scas
inc
cmpsb
das
fs
sub
mov
aad
or
std
jae
lret
jle
movsb
jnp
adc
and
dec
jecxz
loope
int3
sub
lock
mov
sbb
jl
pop
jg
mov
xor
test
rcrl
cli
lea
push
gs
aas
xchg
xchg
push
int3
jb
fistpl
int3
test
adc
sbbb
jne
mov
pop
addr16
lea
pushf
mov
dec
mov
sbb
and
xabort
adc
in
push
insl
xchg
or
inc
inc
xor
push
aad
fisubs
adc
push
pop
mov
cltd
popa
cmp
xchg
mov
mov
repz
iret
dec
pop
dec
xor
mov
xchg
pushf
dec
sub
cmp
lock
popa
adc
xor
fidivrl
js
cmc
es
mov
jbe
rcll
sbb
push
je
cmpsb
shrb
add
xor
scas
sbb
adc
fstpt
xchg
enter
fistl
inc
repz
data16
mov
sbb
insb
inc
jecxz
iret
or
mov
sub
sti
xchg
add
jns
cmp
je
adcl
ret
mov
outsb
cmp
and
jmp
repnz
lret
addr16
insb
loop
jae
fsubrl
dec
inc
lahf
pop
cmc
or
je
xchg
pushf
mov
cmovg
push
mov
or
test
sbb
lcall
xor
xor
xchg
dec
jns
rol
mov
insl
ja
xchg
ja
push
mov
jns
imul
pop
mov
cmpsl
sbb
sbb
jo
mov
push
test
in
imul
jmp
loope
mov
enter
adc
xlat
push
xor
cmc
popf
popf
les
cmp
dec
stos
sbb
test
pop
xchg
push
jo
inc
xchg
out
arpl
pop
adc
mov
and
rol
jnp
or
mov
into
cmc
or
push
and
pop
push
push
or
inc
push
int
xor
and
dec
je
mov
xchg
lcall
sbb
mov
sub
push
je
mov
out
push
popa
call
sub
push
adc
les
xchg
shlb
or
push
mov
mov
push
pop
daa
fldt
sub
sbb
mov
adc
je
pop
and
dec
pop
stos
imul
pop
jg
adc
push
push
lret
imul
mov
rclb
andps
fcompl
insl
sbb
sub
mov
rorl
mov
sub
push
addr16
push
cwtl
cmp
cli
fmul
jmp
es
scas
dec
lret
stc
sub
imul
stos
test
pop
leave
imul
pusha
xchg
and
push
lret
push
lds
dec
aad
enter
or
inc
sbb
sbb
pushf
jns
movl
cld
sbb
jmp
jg
mov
les
adc
out
and
and
jmp
fists
imul
js
fdivl
jae
jp
pop
ret
out
pop
je
or
bound
mov
ret
insb
in
xchg
or
sbb
pop
stos
or
mov
adc
dec
or
mov
jb
add
testb
int3
lahf
adc
mov
or
ds
adc
sti
jmp
add
jne
pop
mov
push
or
dec
das
js
jbe
arpl
mov
and
jo
fwait
imul
jbe
mov
in
cmp
sti
hlt
add
push
imul
lock
mov
add
mov
or
mov
outsl
or
xchg
add
and
out
and
cmpsb
jecxz
sbbl
xor
sbbb
cmp
repz
mov
mov
mov
leave
lahf
or
mov
jo
xchg
mov
sub
and
popa
add
fstpt
jg
nop
pop
cmpsb
pop
insl
mov
jg
xchg
mov
scas
mov
das
add
in
jns
into
leave
lret
aad
mov
loop
jge
fs
stc
pop
sbb
imul
mov
mov
int
push
adc
imul
mov
jge
xchg
notl
add
inc
and
push
daa
test
sbb
or
or
out
push
adc
int3
or
jl
inc
hlt
sti
xchg
jg
cli
int
insl
popf
sbb
lcall
sbbl
sti
sub
aaa
lods
push
loop
lods
movsl
cs
adc
xchg
pop
dec
mov
cmp
roll
iret
and
xchg
push
and
push
cltd
mov
jne
push
inc
andb
mov
call
icebp
xchg
inc
fisttpl
bound
push
sub
xor
movsl
test
sbb
dec
arpl
cmp
fmulp
xor
sahf
inc
cmp
aad
and
arpl
mov
lret
add
xlat
aaa
sbb
aad
sbb
fidivrs
nop
push
repnz
push
jo
jb
aam
sti
dec
hlt
mov
adc
cmp
push
mov
insl
mov
sbb
mov
jno
sub
jp
cwtl
xor
loopne
push
mov
sub
out
pop
addr16
idivl
icebp
pop
imul
cltd
xchg
loop
and
hlt
icebp
gs
mov
cmc
inc
mov
popf
xor
xchg
and
or
and
push
mov
jo
sub
arpl
xlat
lock
xchg
pusha
ds
push
sub
test
rorb
xchg
shlb
xchg
ljmp
aam
repz
xchg
jae
inc
mov
fidivs
sbb
mov
mov
lds
testl
mov
imul
sub
jns
jl
add
sbb
hlt
mov
pop
cwtl
mov
lods
out
mov
stos
gs
jb
and
mov
mov
fidivrs
fnstcw
cli
incb
iret
dec
mov
and
fwait
mov
mov
cmp
dec
pop
imul
and
in
mov
leave
cwtl
push
pop
pop
xchg
in
arpl
pop
sbb
lock
notb
pop
xchg
mov
push
loope
jae
imul
daa
es
jecxz
cld
push
es
pop
dec
xchg
mov
lret
in
sub
mov
call
xchg
movsb
mov
cmp
cmp
jecxz
test
jmp
sub
xchg
cmpsb
pop
push
adc
inc
das
stos
inc
leave
stos
cmp
pop
inc
stos
or
lods
clc
push
push
dec
insb
mov
lods
movl
sub
pushf
push
fs
mov
adc
dec
mov
sbb
jns
add
fcomp
je
inc
jno
idiv
fmull
sub
mov
jge
pop
or
roll
call
outsb
ds
imul
lods
sub
or
pop
int3
rcr
jne
aam
popf
ret
and
push
mov
xchg
fdivl
ss
sbb
adc
outsl
loope
sub
or
in
cmpsb
ret
push
mov
add
sbb
xchg
in
mov
push
jle
inc
dec
mov
aad
dec
call
je
in
jnp
cmp
cmp
nop
pop
jg
sbb
jns
mov
push
push
pop
lods
test
pop
out
and
xchg
gs
sarb
jne
popf
ljmp
aam
stc
or
lock
sub
sub
das
jl
push
icebp
push
mov
jmp
adc
or
xchg
mov
ljmp
push
ret
pop
cli
or
push
daa
mov
scas
push
xor
cmp
and
sub
sub
cli
addl
mov
xchg
iret
jp
fs
pop
add
shrl
rorl
insl
mov
leave
push
xchg
inc
mov
test
add
decl
push
push
jmp
fwait
push
fucomp
ret
test
je
pushf
les
push
pushf
mov
ret
jp
cltd
fisttpll
mov
xchg
dec
mov
lock
jnp
int3
push
sub
xor
sub
cli
dec
add
cvttps2pi
jne
sarb
mov
pop
push
loop
enter
das
mov
dec
movb
fstl
mov
ljmp
xchg
popa
push
cmpsb
cmp
cli
mov
mov
xchg
pop
jl
xchg
pop
insb
inc
inc
pop
movsb
mov
outsb
or
inc
inc
or
or
dec
mov
xor
pop
mov
xchg
jp
fstps
or
mov
sbb
testl
sbb
stos
imul
xchg
mov
add
pop
adc
movsl
or
rorl
sub
xchg
fcomps
cmc
push
cmp
aad
clc
add
sti
shlb
adc
aam
pop
cmp
negb
repnz
test
xor
jne
xchg
pop
int3
mov
xor
testl
or
xchg
push
push
lcall
scas
sub
jbe
sbb
mov
xchg
sar
mov
push
ds
sbbl
mov
aad
imul
nop
push
pop
addb
jo
inc
adc
cmpsb
movsb
jne
adc
test
leave
int
pop
into
aaa
data16
icebp
jno
sbb
xchg
aad
into
inc
push
and
pusha
out
add
or
daa
movsl
fnstenv
or
add
adc
rep
and
stos
ja
scas
mov
aad
dec
pop
lret
sahf
outsl
out
gs
aaa
dec
xchg
adc
add
and
filds
test
inc
jmp
jne
cmp
adc
outsl
addr16
icebp
adc
jns
mov
jecxz
fmuls
in
imul
fcomi
mov
dec
repz
loope
stc
sti
cmpsl
push
push
jb
pop
test
inc
sub
pop
adc
mov
jge
mov
cmpl
pusha
loop
aas
cltd
dec
xor
inc
xor
mov
mov
cmp
cltd
pop
dec
mov
push
inc
mov
cmpsl
daa
stos
pop
and
stos
jne
in
ds
xchg
fdivrs
lea
mov
daa
jmp
mov
dec
pop
or
dec
clc
xchg
loopne
push
test
cmp
mov
pop
cmp
mov
ret
jbe
dec
addr16
push
push
jns
xor
cmp
popf
and
dec
loop
loope
hlt
cmc
clc
ss
lods
imulb
xchg
sbb
push
ret
and
pop
hlt
aad
movsb
leave
push
cmp
rorl
out
xchg
jne
ljmp
mov
call
pop
out
or
fldt
add
out
arpl
mov
push
sub
add
pop
leave
jp
sbb
mov
or
mov
lcall
add
xor
addps
xor
dec
mov
dec
pop
or
sub
push
cmp
pop
sub
pop
dec
divl
or
jne
xchg
sub
clc
stos
mov
inc
mov
shll
insb
repz
mov
push
push
mov
mov
lahf
out
fcomp
and
jecxz
sbb
sub
ja
punpcklwd
out
sahf
cmc
cmpsl
add
sub
inc
aad
pop
sahf
int
roll
and
pushf
es
cmpsb
sbb
inc
pop
mov
or
sbb
stos
cmc
stos
roll
shll
add
sbb
fcmovb
pop
clc
adc
sti
add
sub
xor
lret
rclb
leave
pop
fcmovnb
jmp
inc
cmp
inc
jno
fcomp
jecxz
shll
stos
cmpsb
clc
cwtl
lea
mov
mov
inc
leave
das
lods
lahf
sbb
jbe
mov
fldcw
inc
out
sbb
rclb
push
mov
jg
test
mov
xchg
mov
xchg
data16
jb
mov
aad
je
pop
pushf
cmp
mov
inc
jno
dec
arpl
js
fld1
jns
pop
or
fistps
jmp
xchg
mov
ret
shr
cmp
jmp
push
movsl
daa
or
cmp
mov
pushl
xchg
ljmp
xchg
nop
inc
pop
dec
push
sbb
scas
sbbl
dec
ja
fdivs
cmpsl
pop
outsb
dec
lret
push
mov
pop
or
ret
icebp
into
sub
mov
xchg
dec
sub
jns
shl
or
cmp
mov
fs
pop
xchg
dec
jbe
add
sub
adc
aad
sarl
mov
ss
sti
jp
push
pop
shrl
jo
mov
push
pop
add
int
fwait
and
sub
fs
jmp
es
pop
call
fnsave
mov
inc
dec
mov
clc
jge
mov
ret
mov
pop
mov
inc
mov
inc
pop
jge
add
inc
lock
cmp
push
movsl
stos
jae
outsl
xor
cmp
dec
loope
jno
test
jns
sub
vpsravq
rcrb
mov
inc
inc
test
sbb
and
sub
int3
pop
pop
sbb
adc
mov
xor
add
mov
into
xor
mov
push
das
inc
outsb
subb
gs
mov
xor
inc
push
push
lods
add
loop
push
and
jae
push
mov
ss
outsb
or
ljmp
mov
in
les
xchg
clc
daa
ds
mov
les
jne
fisttpl
loop
sub
into
jae
mov
jno
loopne
sub
es
pop
xchg
in
cmc
lahf
idivb
push
inc
loop
push
fildl
mov
sub
outsb
pop
test
mov
pushf
mov
aad
push
mov
xchg
sbb
xchg
jmp
push
mov
or
xor
outsl
test
aas
or
sbb
pushf
mov
add
testl
push
insl
rcr
adc
push
jae
xchg
push
dec
fidivrl
aam
sahf
mov
inc
add
out
jp
push
ret
sub
into
jl
xor
stc
and
adc
lret
das
addr16
dec
sbb
movsb
jge
pop
popf
push
ljmp
cmp
push
lret
pop
add
push
pop
mov
repz
or
and
xchg
xor
xchg
cltd
adc
or
xchg
mov
xchg
pop
out
dec
push
xor
mov
lds
push
stos
pop
sbb
inc
cmp
test
inc
jbe
mov
leave
or
imul
lods
mov
sbb
cmc
push
hlt
in
inc
cmp
lods
into
imul
jmp
xchg
xchg
fs
ds
rclb
in
lret
jecxz
pushf
xchg
or
daa
insb
push
sahf
gs
test
arpl
xchg
mov
jl
sbb
add
mov
mov
sbb
mov
lods
sbb
jnp
mov
repz
or
outsb
mov
nop
mov
jbe
clc
repz
outsl
pop
or
lods
sbb
clc
ret
ss
ret
sub
xchg
xchg
push
mov
repz
add
jge
add
stos
sub
cmp
jle
sbb
dec
cmc
dec
pop
jno
std
mov
xchg
jbe
sbb
out
int3
lods
and
cwtl
pusha
dec
into
dec
inc
into
or
or
rorb
ds
jl
pop
xorl
pop
mov
and
fdivrs
icebp
shll
and
adc
push
jae
mov
lds
or
shll
xor
hlt
dec
clc
push
and
inc
fwait
or
mov
sub
bound
pushf
ds
or
aam
push
push
clc
adc
movsb
xchg
aad
dec
mov
mov
sbb
dec
and
xor
inc
xchg
sub
dec
lret
push
sti
cmp
cld
mov
cmp
cltd
arpl
cmpsb
xor
ljmp
sub
mov
inc
fcmovne
push
xor
xor
sbb
and
add
jmp
or
mov
arpl
xchg
xlat
fwait
mov
mov
push
repnz
xchg
mov
xchg
dec
jecxz
inc
sub
sub
sbbb
daa
test
lods
lret
push
fwait
jp
mov
cmp
rcr
mov
outsl
test
cmp
std
jp
add
int3
fidivs
repnz
sar
andl
adc
out
gs
fbld
sbb
dec
or
cltd
xor
cmp
dec
and
mov
bound
push
out
out
push
clc
fs
xor
xchg
in
movsl
insl
dec
scas
mov
or
push
inc
or
sahf
sbb
jo
jne
ret
jle
icebp
jecxz
movsl
hlt
mov
pavgb
ds
call
mov
daa
bound
mov
daa
mov
jge
jp
sbb
daa
mov
lret
dec
mov
ss
outsl
fstpt
dec
sub
add
shlb
xchg
sahf
cmp
xchg
cmpsl
cli
push
adc
lahf
imul
int3
inc
fs
fidivrl
mov
adc
sbb
cmpsl
out
lods
dec
call
imul
mov
mov
dec
lock
rcrb
stc
sbb
pop
dec
push
jb
xchg
adc
mov
je
jg
cmp
int
or
imul
ss
into
div
pop
push
pop
enter
je
push
fs
inc
pop
leave
fs
dec
cmpsb
push
mov
pop
push
shll
push
sbbl
mov
call
dec
test
dec
inc
pop
mov
and
loope
nop
adcb
dec
popa
pop
mov
add
pop
fsubl
icebp
in
sbb
push
mov
aaa
cli
xor
fstl
xchg
inc
stos
pop
adcb
mov
mulb
shll
popf
inc
bound
dec
insb
sub
movsb
loopne
je
mov
sbb
popf
dec
std
popf
stos
aam
jle
das
lds
pop
xchg
mov
repz
sbb
cmp
mov
and
jbe
xchg
cli
fstpt
xchg
pop
imul
jg
test
sbb
out
fiaddl
ss
inc
push
sub
jne
add
ljmp
push
cmp
inc
insl
jl
adc
cmpsb
adc
adc
add
icebp
in
pop
inc
jge
sbb
shlb
add
pop
cmpsl
movsl
mov
lods
jge
dec
push
cmp
lds
ror
sub
insb
xor
and
and
push
loop
mov
jnp
jae
mov
inc
mov
add
lret
xchg
popf
sti
in
and
jb
push
int3
inc
rcrb
ds
lret
xchg
add
test
ret
push
and
jmp
hlt
sub
sbb
imul
pop
sti
sub
pop
mov
and
leave
add
dec
cmp
push
push
lods
aam
pop
or
rcr
out
or
jb
mov
jle
outsl
or
mov
fsub
fcompl
xor
mov
mov
lahf
pushf
pushf
mov
outsl
cmp
mov
sti
xor
push
mov
sbb
jp
push
add
sub
das
scas
aam
jno
dec
and
cmp
add
jg
xor
in
not
ljmp
pop
sahf
fldl
testl
adc
movsl
xor
iret
jno
xorl
jno
mov
inc
sub
pop
je
cmp
shll
sub
mov
sub
scas
xor
add
cmp
and
push
inc
cmpsb
insb
push
cmp
jno
dec
cmp
icebp
rorb
mov
push
mov
xchg
pop
shld
cmc
cmpl
js
sbb
jl
cltd
jnp
icebp
sub
xchg
dec
cmp
addl
shlb
jo
dec
mov
mov
adc
les
cli
dec
sub
adc
and
outsb
sbb
sbb
aad
or
mov
jg
dec
jno
in
mov
mov
call
ja
dec
cs
shll
xor
xchg
inc
jbe
scas
mov
insb
push
mov
cwtl
mov
sub
inc
jno
outsb
ret
or
jl
filds
and
lret
je
pop
pop
add
ja
push
add
sub
addb
pop
test
pop
inc
cmpsl
xchg
inc
jns
mov
pop
out
xor
in
pop
out
cmp
shr
repz
mov
in
in
inc
dec
ret
mov
aad
aaa
imul
aas
adc
fistpl
xchg
hlt
jns
jb
test
hlt
and
test
cmp
data16
inc
mov
icebp
outsb
imul
shrl
ja
mov
push
arpl
push
push
addr16
ja
arpl
dec
sub
test
stc
push
xchg
out
jbe
xchg
bound
repnz
jl
test
xchg
das
sbb
mov
inc
dec
jecxz
mov
enter
and
mov
inc
mov
aaa
ss
in
dec
cmp
lea
jne
call
push
addr16
push
mov
adc
mov
mov
mov
xchg
push
add
inc
lret
imul
pop
je
jnp
jno
fidivrs
or
jns
jbe
shl
mov
insb
andl
les
loopne
pop
and
sti
jbe
out
or
mov
cmp
popa
std
out
pusha
push
jno
mov
out
xor
icebp
imul
adc
mov
dec
jmp
pop
negb
pop
fcos
add
or
enter
ds
ja
add
es
dec
pop
lods
pop
xor
sarb
dec
into
fs
cmpsl
in
in
inc
repnz
fisubl
fcoml
sahf
jg
les
jmp
push
sbb
adc
adc
cld
stc
das
test
rcr
jge
sub
int3
pop
sub
mov
inc
jmp
sbb
shll
or
xor
popf
rcrb
adc
xchg
mov
imul
shrb
push
mov
push
sbb
lret
push
mov
jg
jnp
mov
icebp
add
bound
sub
aad
lods
xchg
mov
xchg
test
jo
xor
sbb
pop
test
test
mov
sub
leave
sbb
leave
and
js
fsub
in
or
ret
in
mov
scas
inc
and
and
pop
repz
inc
int
das
pop
push
push
lcall
gs
add
outsb
and
xchg
xchg
cmpsl
fdivs
test
push
mov
imul
sti
dec
repnz
out
aam
dec
mov
loop
ror
cmp
test
mov
in
lret
sbb
jno
repnz
rolb
dec
aam
fiadds
inc
loopne
jne
sahf
xor
enter
daa
sbb
mov
mov
lock
les
lock
popf
out
movsl
push
pushf
testb
adc
inc
inc
lret
fwait
add
sbbl
inc
push
jg
nop
mov
mov
dec
jae
lahf
push
fisubrs
jecxz
pop
pop
inc
inc
inc
and
addr16
aad
xorb
sbbl
cs
std
push
sbb
push
and
scas
inc
inc
xchg
mov
sahf
and
repz
mov
in
xchg
xor
sar
jge
insb
stos
inc
ds
fstpt
scas
in
adc
out
xor
dec
fwait
mov
inc
dec
xchg
pushf
sbb
sarl
push
mov
scas
lds
movsb
cwtl
fs
xchg
jno
sub
movsl
repnz
aam
test
fsubrs
mov
add
inc
jmp
xor
lret
push
pop
sahf
out
push
sti
repnz
push
cwtl
daa
adc
fs
mov
icebp
mov
xchg
pop
mov
sub
lods
loopne
adc
fisubs
or
repnz
push
or
outsb
jbe
inc
stos
mov
sub
sub
mov
into
push
jno
sbb
or
inc
out
xchg
cmc
mov
inc
imul
pop
mov
push
in
inc
and
lret
xor
inc
pop
jns
in
jno
xchg
cld
je
pop
leave
xchg
in
insl
xor
push
sahf
imull
out
pop
sub
sub
mov
loope
fidivl
imul
stos
push
fdivp
mov
dec
inc
or
in
pop
and
xor
es
jg
cmovp
gs
jecxz
push
fists
fisubs
mov
push
push
mov
out
xchg
cmpsb
out
leave
das
inc
data16
aad
push
mov
cmpsb
mov
cmpsb
mov
call
clc
jae
jb
sub
iret
mov
in
mov
rolb
clc
test
add
mov
out
fnstsw
fisttps
xchg
adc
jmp
push
gs
mov
fiaddl
pop
pop
test
insb
and
sub
push
test
xor
adc
fldenv
sti
inc
mov
pop
or
inc
fsts
das
in
jno
mov
push
xchg
inc
xchg
pushf
scas
insb
and
cmpsb
addr16
adc
jle
cmpl
sbb
sub
jbe
pop
adc
xchg
pop
out
jae
sbb
add
add
jbe
sbbl
cli
fs
xor
sbbl
test
out
leave
sub
in
sbb
sarb
faddl
outsb
push
pushf
call
in
fadds
arpl
leave
cmpl
xchg
jg
cmc
xchg
push
adc
imul
lret
mov
nop
in
pusha
mov
cld
xor
or
mov
call
sub
hlt
fwait
and
push
adc
xchg
xchg
add
sub
push
push
cmp
inc
pop
sub
mov
jge
or
sahf
loope
std
out
add
adc
fbld
sbb
jg
lea
push
add
call
dec
std
mov
jmp
test
test
pop
sub
repz
mov
inc
lea
mov
dec
leave
cli
enter
inc
dec
pop
enter
in
aaa
repz
add
mov
sarl
jnp
imul
jg
sbb
negl
fcoms
pop
xchg
repz
sbb
jg
sub
jecxz
mov
mov
dec
shlb
data16
sub
jg
test
xor
and
jno
sub
mov
cltd
mov
test
lock
cmp
lods
fdivs
xlat
or
andb
ret
pop
ss
mov
push
lret
cs
dec
shrb
add
adc
xlat
fscale
dec
inc
jecxz
outsb
addr16
inc
call
cli
nop
stos
jmp
push
add
xor
insb
aad
sbb
push
in
mov
fs
js
jmp
notl
jmp
sbb
shrl
add
inc
fidivrl
in
mov
shl
shrl
lods
outsl
lods
jmp
push
pop
and
jno
xor
push
loope
dec
add
mov
out
cmpsb
movsb
dec
add
scas
jl
repz
sub
repnz
jmp
mov
cmp
fs
lret
xlat
ret
cld
mov
jnp
dec
inc
outsb
out
xor
lock
mov
negl
and
jl
out
sbb
pusha
or
in
cmpsb
inc
dec
divl
ficompl
push
sti
shl
jg
insl
loopne
sub
bound
aad
mov
mov
pop
pop
push
in
push
stc
dec
sbb
in
push
mov
lods
push
ljmp
enter
inc
lahf
or
rcll
fnstenv
cli
out
and
xchg
inc
aad
jecxz
mov
daa
dec
cmp
cmp
jae
lds
pushf
jg
inc
not
dec
add
adc
sbb
sbb
arpl
sub
add
out
test
lahf
xchg
test
mov
cmp
sbb
xorl
xchg
movsl
loop
inc
clc
outsb
fnop
fsts
iret
and
movl
sarb
mov
adc
andl
jbe
sub
aam
clc
mov
loopne
aad
mov
fsubrs
fwait
imul
pop
loope
mov
ja
cmc
insl
ja
enter
inc
iret
cld
std
and
dec
enter
fistpll
xchg
lret
xchg
cli
dec
jno
sbb
rcll
leave
sub
adc
xor
dec
int
jmp
inc
xchg
fcomps
sub
sti
cli
inc
xchg
push
lea
xchg
jbe
add
ret
push
sub
stc
fisttpll
inc
fnstsw
xor
push
xor
jae
stc
sbb
cmpsb
mov
sti
inc
int3
bound
cwtl
ds
std
lret
mov
sti
mov
xorb
out
sbb
add
sahf
aad
dec
xchg
cmpsb
mov
cmp
imul
repnz
into
mov
lret
push
sub
jnp
ja
js
pop
shrb
iret
dec
in
fsubrs
xchg
shl
out
lret
xchg
testb
test
sbb
push
roll
mov
mov
xchg
jg
inc
cltd
mov
lock
addr16
and
fs
pop
cs
cli
sub
xor
push
cltd
and
addr16
mov
stos
repnz
pusha
rcrb
test
lods
mov
cmp
inc
mov
push
and
mov
pop
xor
adc
jge
repz
test
cmp
mov
sti
push
inc
cmp
mov
arpl
pop
xchg
cli
push
fildl
jno
in
imul
std
fwait
lahf
jb
lods
cmc
xchg
cmpsb
fdivl
out
fidivrs
stc
push
movsl
sub
inc
jl
inc
jmp
outsl
pop
xchg
hlt
push
jno
push
inc
xor
lret
and
mov
sbb
push
stc
xchg
test
in
add
imul
inc
clc
dec
add
jno
popa
add
loopne
xchg
adc
aam
sti
xlat
or
mov
sbb
cltd
push
lahf
movsb
xchg
das
inc
sub
lahf
ss
and
push
repz
sbb
jnp
fwait
repnz
aaa
add
mov
mov
cli
int3
jne
ds
pop
pusha
mov
loop
cmp
lods
sbb
fdivs
mov
fcoms
jae
arpl
push
aam
cmpsb
inc
jo
fsubl
jl
adc
add
je
in
pop
mov
pop
dec
and
inc
int3
in
iret
push
push
xchg
inc
or
mov
pop
and
je
mov
jne
or
pop
mov
mov
mov
pop
push
jo
jmp
lods
jg
lret
repz
xchg
data16
call
insl
outsb
cs
bound
test
cltd
popa
lret
jecxz
sub
dec
inc
fst
cmp
xor
pop
jne
mov
repnz
and
mov
cmp
and
or
and
and
call
mov
imul
jno
sub
mov
rcl
lahf
sbb
xchg
cmp
dec
inc
jle
cmc
xchg
mov
addr16
loopne
int
and
les
in
sbb
sub
dec
int
repz
mov
in
push
test
pop
dec
mov
scas
test
inc
in
jo
andb
loop
nop
das
pop
pop
in
sub
mov
repnz
dec
mov
ret
shlb
and
mov
out
jae
data16
xor
imul
push
xchg
in
je
test
les
adc
push
repnz
flds
stc
adc
dec
sub
xlat
flds
sbb
clc
inc
enter
repz
or
repz
push
sbb
int
aad
adcl
je
outsb
xor
jge
pop
inc
xor
or
sub
xchg
cmp
pop
and
push
out
xchg
mov
daa
icebp
je
pusha
insl
xchg
xor
pusha
or
push
leave
out
lret
mov
or
push
adc
jg
push
and
pop
mov
nop
imul
data16
icebp
in
mov
xor
mov
xchg
insl
xor
stos
pop
filds
cmp
sti
dec
and
sub
and
jnp
psllq
gs
das
hlt
push
mov
mov
cltd
mov
cli
jmp
mov
gs
xor
cltd
push
pop
in
xor
or
xor
fnstcw
aad
fimull
sub
add
sbb
frstor
sbb
xor
dec
jecxz
int3
mov
cmp
and
inc
cmp
xchg
test
sbb
hlt
pop
stos
push
xor
insb
sarl
sahf
test
sub
fdivl
mov
mov
or
inc
cmc
xchg
jnp
xchg
aas
cmp
pusha
mov
pop
pop
nop
xchg
fmul
fmull
xlat
in
lock
inc
lock
clc
loopne
fcoms
xor
sarb
pop
add
or
loope
and
daa
mov
mov
push
xchg
push
adc
jle
xor
aad
xor
insb
daa
jp
push
push
xchg
pop
movsb
out
jb
jmp
les
cmpsl
adcb
pop
je
mov
xor
sub
lock
xchg
xchg
cmp
inc
mov
mov
xchg
popa
pop
inc
jecxz
imul
ret
aad
mov
pop
push
popa
xor
leave
inc
movsb
dec
repnz
cmp
mov
inc
lock
inc
mov
push
outsb
xchg
jnp
pop
les
insb
cmp
push
jne
lds
adc
icebp
mov
dec
push
pop
sarl
xor
aam
test
mov
mov
shr
and
out
mov
ret
push
popa
pushf
mov
inc
cld
arpl
lret
test
ss
popf
imul
push
enter
aas
jnp
jns
pop
mov
fldl
cmp
and
aaa
or
lahf
pusha
dec
cli
lock
ds
lcall
call
and
or
loope
cmpsb
cmp
fisubl
lret
xchg
sbb
mov
and
jae
or
sub
push
mov
sbb
push
push
inc
push
pop
mov
movsl
sub
add
dec
jae
add
add
cmpsl
stos
mov
enterw
dec
xor
into
pop
jl
roll
sub
cmp
aas
push
subl
aam
ret
cld
loop
pop
inc
rorl
stc
cs
dec
daa
mov
out
sub
pop
std
mov
push
jbe
ret
test
jns
cmpsb
sub
in
mov
or
xor
add
inc
aas
std
mov
xchg
out
sahf
lcall
rcrb
xor
push
test
inc
ss
xchg
pop
les
dec
pusha
pop
cmpsl
or
call
test
insb
call
roll
sbb
inc
adc
cmpsl
add
jo
test
outsb
dec
outsb
arpl
pusha
addl
sahf
addr16
gs
dec
inc
data16
sbb
pop
sub
cmp
jo
stc
jl
cmp
jno
adcl
js
sbb
cmc
add
js
push
stos
mov
or
fs
das
ljmp
imul
std
leave
sub
or
nop
xor
daa
mov
cmc
mov
sbb
fwait
push
inc
loopne
dec
aad
inc
call
and
pop
int3
fidivrl
xor
jl
loope
cmpsb
negb
sub
pusha
jle
jle
popa
push
es
jle
out
cld
cmpsb
jge
dec
mov
sub
fs
and
cmp
jmp
jb
inc
jle
or
mov
mov
je
outsl
jb
xor
xchg
je
imull
lods
jne
loop
int3
cltd
jl
adcb
fsubr
inc
addr16
lahf
jg
icebp
xchg
cld
mov
sub
jb
inc
cli
jge
adc
jo
push
pop
lret
imul
leave
ror
lret
push
sbb
insb
inc
lock
int3
xchg
mov
cmc
dec
mov
lods
shr
push
mov
cli
std
cmpb
dec
lcall
push
data16
outsl
ret
xchg
lds
adc
insl
push
add
sub
clc
and
cmp
sbb
cmpsb
enter
aas
mov
stc
or
into
pop
add
inc
adc
jl
push
and
insl
sbb
imul
ljmp
ljmp
cld
outsl
js
sub
outsl
sub
xchg
loopne
bnd
jle
xchg
cmc
mulw
inc
movsb
mov
out
out
mov
cmpsl
mov
data16
pusha
xor
imul
sub
mov
mov
sub
fdivl
dec
punpckhwd
int3
and
aas
std
jg
loopne
cmpsl
sbb
sub
dec
or
mov
jp
mov
out
cld
jae
adc
call
xor
mov
mov
mov
dec
and
mov
les
icebp
push
push
mov
mov
jae
mov
push
mov
pop
dec
out
hlt
dec
lret
jle
mov
and
lcall
or
dec
dec
push
fs
ret
cmovg
rcll
call
mov
hlt
push
jp
push
dec
ss
movsl
jne
enter
adc
clc
ret
jnp
jnp
xor
jb
push
jecxz
dec
push
sti
or
jne
xchg
mov
inc
in
mov
jle
aad
fisttpl
push
nop
xor
sbb
iret
out
sub
inc
add
bound
or
jmp
or
and
jns
and
mov
leave
shrb
mov
xor
cmpsb
dec
mov
ret
aas
jno
loopne
mov
addr16
mov
xor
and
fldcw
cltd
jle
add
mov
dec
inc
roll
inc
loop
fwait
cs
stos
leave
cmc
ljmp
popf
repnz
jne
testb
xchg
dec
xlat
adc
dec
inc
inc
cmp
cli
mov
push
and
cmp
in
adc
inc
mov
and
addr16
push
push
lds
add
shlb
js
push
inc
lods
mov
xor
jmp
rorb
push
jbe
xor
cmp
xor
mov
sub
ss
test
repnz
cmp
cmpsb
add
sbb
insb
repz
mov
mov
pop
sbb
lds
adc
sahf
cli
scas
xor
dec
mov
pop
inc
sbb
pop
or
cmp
mov
jecxz
or
mov
adc
outsb
mov
fiaddl
dec
cmpsl
shll
adc
pop
lret
ljmp
cmpsb
pop
inc
setnp
jmp
leave
mov
jns
or
in
or
lahf
sahf
mov
js
dec
sbb
jb
push
mov
test
insl
cmpsb
shrb
sbb
xchg
xchg
push
sub
lea
push
ds
push
popf
test
icebp
popa
std
in
enter
std
fdivs
mov
cltd
dec
lds
cli
cmp
fisttps
cltd
and
jne
mov
xlat
jmp
andb
add
ret
popa
leave
dec
lds
sahf
ljmp
dec
outsl
cmp
rcrb
sub
and
add
hlt
popf
je
lock
push
mov
enter
ret
adc
in
jl
or
inc
pop
lret
clc
jmp
xchg
int3
pop
push
mov
js
adc
cltd
cli
popa
add
repz
int3
pop
cmp
in
mov
arpl
loop
mov
sbb
xor
pop
inc
sbb
in
push
jp
jnp
mov
sub
mov
or
das
xor
sub
or
popa
xchg
leave
jle
jp
idivb
mov
push
leave
std
loope
loope
mov
adc
push
xlat
jmp
mov
out
jae
push
dec
or
or
stos
stos
stc
gs
push
fcompl
clc
call
inc
and
sar
mov
xchg
xchg
mov
mov
shll
ret
pop
ficomps
sbb
imul
pushf
movsb
popa
popf
lock
push
jo
pop
jo
mov
in
xor
das
pop
sub
inc
stc
jl
mov
pop
jne
xchg
mov
std
fsubrp
sbb
sbb
inc
jae
push
cli
and
push
mov
cmp
mov
mov
gs
pop
and
and
dec
adc
fstpt
insl
cs
or
cltd
xchg
movb
xor
push
xchg
fnstenv
pop
fwait
test
xor
cwtl
inc
sbb
loope
mov
ljmp
jmp
sbb
mov
dec
push
xchg
addr16
jl
mov
or
jno
addr16
jle
jl
jno
or
jae
or
push
out
cmp
push
mov
xor
data16
sub
iret
rcll
inc
cld
add
sbb
pop
stos
mov
in
push
mov
push
and
popf
sbb
lahf
pop
push
xchg
push
add
shll
xor
arpl
lret
mov
and
ror
and
sub
dec
mov
repnz
test
sub
xchg
inc
fiadds
jae
dec
idivl
out
mov
movsb
add
push
jb
sub
fcoms
hlt
and
cmp
sahf
in
xor
push
mov
push
mov
dec
fistpl
call
in
xor
cmp
add
cmp
sub
jnp
pusha
fdivl
scas
outsb
cli
jecxz
mov
pop
inc
mov
gs
or
pop
iret
clc
or
add
mov
xchg
scas
sbb
jnp
adc
into
inc
in
daa
mov
xor
push
arpl
or
xchg
imul
xor
mov
push
jns
daa
cwtl
fidivs
cwtl
or
push
sub
cs
jae
mov
ds
stos
xor
iret
cmp
add
int3
ret
add
ljmp
fcomip
push
xchg
push
xchg
cmc
jnp
cmp
cmp
lahf
insb
fisttps
ja
add
in
les
call
in
popl
dec
cwtl
dec
jl
insl
or
xchg
in
lcall
push
push
notb
sbb
push
push
scas
pop
lods
xor
fcmovne
jb
in
daa
inc
xchg
cmpsl
xchg
mov
inc
add
pop
fwait
and
popa
jbe
inc
sub
xchg
ljmp
in
and
sbb
cs
pop
inc
pushf
out
push
fcom
lcall
cltd
std
jbe
fimull
and
test
adc
insb
push
into
mov
test
mov
mov
inc
xchg
inc
fcomps
dec
xor
sbb
sub
sbb
les
inc
inc
loopne
mov
clc
mov
jg
push
mov
lea
and
jb
mov
mov
rolb
insb
lods
stos
mov
stos
jne
mov
sbb
add
xchg
lods
or
mov
out
mov
jnp
push
mov
imul
adc
mov
test
shlb
xchg
lcall
mov
push
test
inc
jne
add
les
ja
out
pop
data16
ds
jo
sarb
movsl
iret
test
pop
dec
int3
sub
xchg
mov
adc
outsl
fistpl
mov
cmp
jb
hlt
inc
and
mov
mov
sahf
jnp
repnz
mov
int3
sbb
pushf
mov
lods
out
mov
cmp
stos
pop
xor
je
mov
jo
ret
mov
mov
out
and
and
daa
adc
in
mov
fiadds
cld
daa
xor
adc
leave
sbb
adc
clc
inc
movsl
jmp
or
ret
and
hlt
inc
cmp
ret
call
xor
test
lods
mov
push
cmc
and
cld
lods
ss
dec
jmp
adc
mul
das
cmpsl
jbe
ret
data16
ror
notl
push
jo
push
popa
jnp,pn
push
push
pop
testb
scas
imul
xchg
stos
gs
push
pop
lahf
pop
lds
pop
ds
mov
xchg
xor
jne
cmpsl
call
stos
stc
scas
nop
enter
push
mov
cmpsl
fistpll
push
iret
gs
xchg
add
outsb
pop
dec
out
add
push
sbb
loop
jae
iret
pop
inc
or
push
adc
inc
cs
lret
mov
pop
idivl
push
cltd
or
xor
add
cmp
test
fildll
aas
xchg
cmp
aaa
add
jb
jp
movsl
test
lret
fcomip
movsb
fisubrs
pop
in
dec
test
sbb
mov
icebp
mov
ds
aas
insl
xchg
in
mov
cmc
stos
cmp
push
mov
arpl
xorb
iret
pop
and
les
or
pusha
push
mov
pushf
lds
jno
inc
adc
fs
sarb
fstpt
mov
sahf
imull
fcomi
cltd
nop
orl
mov
lret
pop
jbe
fwait
popf
push
movl
xchg
push
adc
xor
aad
jmp
dec
sub
jae
mov
inc
pop
cmp
sub
inc
orl
mov
dec
mov
into
dec
sub
jmp
lods
mov
inc
jno
mov
cmp
lcall
jg
icebp
add
dec
ret
call
jb
lahf
ror
sbb
push
rol
testl
push
sarl
or
fidivrs
cmp
mov
xor
aad
add
imul
inc
sti
mov
and
dec
std
call
repz
addr16
sub
add
lock
add
movsl
rcrb
ficompl
dec
adc
jns
pop
ja
cmpsb
ret
xchg
out
fdivs
mov
clc
sbb
jb
loopne
or
jno
xchg
mov
cmc
and
push
pusha
mov
dec
cmp
push
in
out
and
scas
nop
bound
loop
lret
jle
jle
sub
nop
repz
dec
into
add
clc
mov
aam
insb
push
div
xor
xorb
imul
push
in
xor
sbb
iret
jb
fbstp
dec
adc
xor
cmp
xor
jp
jbe
push
xor
je
mov
aas
loopne
mov
mov
test
xor
fs
cmp
and
and
and
lods
push
mov
xor
je
mov
push
sbb
mov
inc
repz
test
sbb
cmp
jle
leave
ja
testl
je
mov
movsb
stos
popa
ja
clc
cmpsl
push
lods
dec
sbb
cs
dec
sub
or
ret
sahf
pop
lods
push
mov
inc
push
mov
bound
and
mov
repz
ror
jne
sbb
xchg
jecxz
mov
fldl
push
push
push
iret
cmc
imulb
mov
mov
jecxz
push
sti
cmp
jnp
or
sub
xor
insl
xchg
gs
testl
adc
mov
lcall
jne
jb
sub
mov
xor
sub
js
inc
stos
andb
mov
jno
fidivrs
cmp
insb
cmp
cmp
andl
movsb
insl
sti
add
mov
inc
or
insb
or
push
shll
les
add
pop
je
jmp
call
or
iret
push
pop
imul
jmp
push
mov
push
xor
inc
jae
cld
imulb
in
jnp
fiaddl
adc
sub
xchg
push
pop
jge
rclb
int
sbbl
and
lea
add
inc
outsb
ja
stos
xchg
jns
jmp
jno
or
lock
mov
cmpl
in
xchg
inc
cmpsb
int3
stc
gs
lahf
inc
repz
sub
inc
mov
xchg
movsl
jno
inc
pop
popf
in
push
xchg
loopne
outsl
dec
jg
inc
sub
iret
mov
je
std
in
add
push
or
lahf
adc
adc
data16
inc
daa
push
push
mov
cmp
mov
add
movsb
shl
sahf
xor
sbb
nop
add
ds
cmp
mov
fs
mov
push
xor
ss
jl
xlat
outsb
mov
mov
insb
mov
and
push
cltd
test
daa
in
arpl
outsb
push
sub
loopne
aad
nop
std
shl
mov
adc
add
xorl
imul
xchg
adc
lret
mov
lret
or
pop
insl
jge,pn
xchg
cmp
push
dec
jecxz
dec
scas
loopne
push
pusha
jl
jp
sub
jmp
cwtl
movsl
int
popa
mov
push
inc
sub
pop
ret
divb
push
je
mov
pop
cwtl
push
dec
pop
sbb
cmpsb
repnz
push
dec
cmp
pop
scas
ljmp
cwtl
pop
sahf
dec
cmpsl
pop
mov
mov
mov
ljmp
and
and
psubsb
push
xchg
pop
push
inc
mov
mov
int3
pop
pusha
imul
pushf
iret
lahf
popa
call
std
ss
cwtl
pop
mov
add
jp
scas
mov
cltd
and
mov
fs
mov
mov
xchg
inc
pop
insl
mov
cmp
jp
sub
cmp
shll
js
push
cmp
pop
mov
iret
shll
lock
jne
mov
and
push
cmc
jl
xor
out
push
jnp
rolb
ret
sbb
data16
subl
inc
xor
push
mov
dec
cs
cmp
loopne
dec
sbb
rorl
arpl
aam
and
inc
adc
es
mov
inc
inc
pop
das
mov
sub
popa
and
cli
fisubrs
sbb
rorb
xlat
jo
add
sub
or
cmp
cmp
jne
into
xor
ja
mov
pushl
jge
cli
scas
adc
xor
inc
mov
inc
xorl
jecxz
ror
inc
stos
inc
xor
fdivs
out
dec
mov
inc
lods
mov
stc
int3
fistpl
ljmp
icebp
int3
ficoml
sbb
inc
pop
push
movd
loopne
shrl
divl
jns
cmc
jge
popf
das
mov
pop
jp
enter
sub
into
dec
lret
dec
cmp
lods
cmpsl
jle
lret
add
pop
cli
in
movsb
movsl
aam
aam
and
mov
sub
inc
xchg
hlt
dec
sub
jne
ja
pusha
dec
xchg
dec
fcmovnbe
jae
je
stos
insb
fnstenv
lret
rorb
rolb
aam
inc
imul
sar
mov
dec
stos
mov
stc
imulb
push
mov
das
sahf
add
inc
loop
dec
inc
out
push
cmp
mov
dec
aam
pop
mov
hlt
dec
pop
sub
cmpb
xor
pop
gs
add
out
dec
xor
mov
fwait
cmp
add
adc
mov
aaa
add
xchg
sub
daa
pop
xchg
leave
jb
and
addr16
dec
ljmp
sbb
fsubs
cmp
push
int3
push
loop
mov
ja
in
sbb
xchg
enter
xchg
cltd
jo
inc
adc
movsb
js
sub
test
ret
sahf
cltd
sub
cmpsl
push
cmp
mov
push
je
xchg
push
add
mov
dec
jb
cs
dec
or
ret
stos
sbb
sti
ja
fs
in
cmp
or
in
dec
cmpsl
mov
pop
or
jb
xchg
push
mov
and
jno
lock
push
cmp
adc
push
sub
pop
xchg
pop
out
add
push
inc
mov
insl
xchg
mov
and
push
icebp
lock
xchg
aad
push
cmp
pop
cltd
ficompl
bnd
push
and
clc
mov
cmp
add
imul
jecxz
test
into
decb
arpl
idiv
cmp
mov
sub
imulb
int3
ljmp
mov
insl
mov
cmp
stc
movsb
outsb
sbb
call
or
mulb
mov
or
cmp
mov
outsb
outsb
sub
movsb
or
push
mov
inc
sub
outsl
in
mov
and
add
icebp
pop
mov
push
popf
adc
push
in
xor
in
and
adc
addb
mov
sub
jg
fstl
enter
fcomip
and
adc
add
lret
outsb
mov
xchg
and
enter
mov
cmpb
xchg
sub
inc
lock
nop
insl
cmp
sub
popa
jb
icebp
les
jno
add
xor
jne
jl
sub
loop
jae
shl
mov
addr16
mov
scas
ret
jle
cmp
mov
dec
pop
out
xlat
add
inc
sub
hlt
aaa
stc
dec
subb
incl
frstor
and
pop
aad
in
popf
repz
sbb
testl
aam
sarb
jb
js
test
dec
js
cltd
and
ss
lcall
push
dec
imul
dec
push
je
shrb
or
movsl
xor
movsl
and
or
pop
enter
arpl
in
mov
inc
pop
push
jl
cltd
and
cwtl
sbb
and
loope
xchg
xor
push
das
add
es
lods
lock
aam
xchg
push
ja
add
and
add
sub
cli
aas
jg
addb
enter
mov
shll
imul
rcrl
ljmp
sbb
xor
cmc
rorb
xchg
call
xor
loope
bound
mov
push
or
stos
mov
stos
xor
xchg
xchg
idivb
xchg
pop
sti
mov
sub
adc
lods
sbb
sbb
and
shrl
mov
test
adc
sbb
popa
sub
xor
pop
insl
inc
in
adc
cs
cmp
cmp
in
cli
or
sub
gs
aad
lahf
adc
jae
xchg
cmp
mov
cmp
push
stos
rorb
mull
push
sbb
jmp
repnz
mov
bound
inc
push
ret
push
lock
jb
sub
jp
sbb
and
sub
push
sub
and
mov
sub
loop
or
dec
ret
jo
and
jbe
push
push
cmp
jp
cwtl
call
sbb
inc
xlat
and
pop
mov
jbe
push
lea
arpl
insb
rorl
cwtl
mov
das
cmp
mov
mov
inc
imul
jge
mov
out
mov
pop
andl
cmp
sbb
scas
stos
sbb
and
imul
movsl
mov
repz
inc
mov
inc
nop
sbb
pop
aas
dec
lock
ret
pop
loopne
testl
sbb
push
jbe
arpl
es
fnstsw
std
xor
xchg
cli
jae
mov
pop
subb
jbe
jl
mov
push
popl
jecxz
push
iret
std
js
rclb
loopne
xor
xchg
into
insl
and
mov
mov
mov
ja
repz
insb
cmp
ret
add
inc
hlt
and
cmp
cmp
cltd
lds
jo
imul
je
cmp
jnp
aaa
out
mov
sahf
cmpsb
push
push
in
fwait
adc
push
data16
out
dec
push
and
cmp
outsl
and
pop
mov
xorl
push
lds
pop
aaa
clc
in
jae
shrl
inc
aad
lea
in
cmp
shll
dec
xlat
add
jns
clc
movsb
and
outsl
cmp
xor
orl
mov
inc
pop
dec
mov
push
nop
adc
cmp
xchg
sahf
xor
or
push
js
adc
and
shlb
push
fistl
xor
mov
jle
shlb
xchg
stos
ss
sub
xchg
cld
into
out
xor
inc
mov
fmuls
pop
push
insl
imul
lods
add
cwtl
or
mov
push
add
sub
or
test
iret
adc
fidivs
push
push
pop
fldl
mov
mov
push
popf
mov
call
jg
bound
mov
mov
pop
fdiv
cmp
and
lods
mov
cmpb
inc
repz
pop
jmp
movsl
jo
fmuls
ror
cli
fadd
aaa
fdivp
or
push
dec
hlt
out
xchg
leave
adc
loopne
lret
push
loop
outsb
cwtl
dec
js
mov
mov
or
mov
aam
inc
jge
fsubr
xchg
ds
push
outsl
loopne
repz
and
sub
push
das
mov
xchg
vmwrite
or
out
mov
jb
shlb
mov
aad
fldl
aaa
lds
std
push
loopw
or
mov
stos
mov
or
scas
loope
jae
mov
jb
pop
rorl
inc
lret
add
inc
cli
and
mov
xchg
in
sarl
repnz
cmpsb
lret
in
push
xor
fs
sub
xor
cmp
ficomps
mov
dec
faddp
pop
in
stc
cmpsl
push
imul
aam
in
push
insb
xor
das
lcall
test
insl
imul
ljmp
sub
aas
ljmp
add
aam
in
cs
pop
movsb
or
cmc
ds
cmpl
mov
lods
add
push
insl
cmpsl
dec
push
cs
cwtl
inc
pop
aam
pop
jg
in
sub
sbbb
xor
push
dec
lahf
aas
mov
push
inc
std
xchg
in
dec
sub
fstps
dec
jno
jle
nopl
adc
sub
idivb
arpl
push
fildl
inc
mov
adc
add
pop
and
xchg
xchg
mov
jno
pop
push
imul
dec
std
loopne
iret
loope
in
ret
push
ja
pop
pop
cmp
inc
pop
inc
pop
push
cmp
sub
aas
imul
sub
mov
mov
aam
xchg
outsb
jle
not
lods
fdivrs
icebp
ljmp
icebp
adc
xchg
push
cmpsb
push
jno
push
int3
mov
push
fs
repnz
adc
mov
pop
cmp
adc
inc
pushf
push
mov
sub
xor
insb
xor
rclb
dec
addb
xchg
popa
mov
jmp
jb
xor
leave
push
cltd
sbbb
inc
inc
and
adc
std
scas
nop
mov
and
jle
cmpsl
add
sub
imul
push
and
adc
popf
adc
push
jecxz
mov
mov
mov
inc
push
das
leave
test
mov
testb
fcoms
lock
inc
repz
cmp
pusha
mov
int3
in
inc
aam
movsl
mov
cmp
xchg
ficoml
das
cmpsl
cmc
mov
jmp
dec
shlb
ret
jae
add
jp
xor
daa
jge
jnp
addr16
adc
push
pop
inc
aad
jno
ljmp
loopne
subb
shl
mov
out
push
cwtl
popf
rcrl
imul
imul
bound
or
movsb
push
pop
lds
lret
inc
jo
pop
dec
sub
push
mov
repnz
pop
dec
xor
lret
and
outsl
push
loope
cmpsb
xchg
aas
rorb
inc
int3
mov
ret
mov
pop
mov
aam
lds
loopne
sbb
or
push
sub
xlat
int
pop
xchg
push
mov
xor
xchg
xor
aam
add
cmpsb
adc
ret
popf
cli
cmp
std
sti
xor
call
in
cmp
je
imul
sbb
fwait
jge
xchg
movsl
into
inc
mov
cmp
je
cmp
inc
shlb
jecxz
insl
in
xor
mov
rorb
xor
fs
and
push
xchg
icebp
inc
adc
lods
lret
or
mov
outsb
sti
dec
sub
mov
imul
mov
jns
pushf
icebp
inc
ds
icebp
jmp
mov
cmp
pop
cmp
lret
inc
out
sbb
pop
sbb
and
adc
lock
in
cmp
loope
cli
xor
inc
push
lods
mov
jb
pusha
ret
jge
scas
cmc
pop
sbb
js
mov
out
cmp
lcall
lret
in
es
fwait
dec
mov
insb
xchg
cmp
xchg
inc
sub
repz
jbe
push
aad
mov
inc
addr16
jmp
outsb
inc
adcl
dec
pop
mov
add
insl
inc
mov
sbb
mov
push
pop
pop
or
push
mov
cmpsl
fadds
push
out
mov
jg
pusha
and
jb
dec
sahf
or
xchg
jbe
xor
xchg
push
nop
outsl
lret
pop
cmp
ja
imul
mov
aam
test
les
adc
xor
push
popf
imul
pop
push
sub
imul
mov
mov
xchg
lods
packssdw
jg
imul
push
dec
mov
pop
lea
sti
fdiv
fcom
cmp
mov
mov
pop
mov
mov
and
hlt
repz
mov
cmp
lods
inc
jmp
xor
cltd
dec
cmp
push
jnp
sub
test
mov
jbe
jg
mov
jno
popa
add
dec
or
cmp
into
bound
and
pushf
fsubrp
ret
shll
pop
pop
nop
push
add
sub
test
jo
mov
xchg
cmp
movsb
jg
xorb
inc
dec
repz
push
ljmp
dec
movsb
test
push
les
push
stos
jge
xor
dec
fwait
ds
mov
insl
cmc
jne
jbe
hlt
jmp
cmp
std
mov
mov
out
cwtl
inc
dec
hlt
fabs
add
cmc
inc
fdiv
and
inc
pusha
push
jmp
adc
sub
popf
push
add
fstpt
lahf
jns
cmp
scas
scas
cmp
xchg
rcll
lock
pop
jmp
lods
test
dec
cltd
movsl
and
test
fnclex
mov
dec
sbb
es
add
sbb
mov
pop
imul
sbb
push
ret
js
push
mov
xchg
sti
push
in
and
jge
add
push
cmpsb
xor
std
push
in
and
aam
int3
inc
xchg
xor
push
ja
xchg
add
sbb
jg
mov
adc
movl
sti
loopne
inc
pop
sbb
and
sahf
mov
jo
push
insb
dec
mov
pop
neg
arpl
insb
aad
cmp
in
add
and
subps
xor
stc
push
dec
mov
jo
test
into
pop
mov
dec
cld
pop
push
mov
sub
sahf
test
nop
jb
lahf
lahf
mov
shll
mov
pop
adc
mov
sub
loop
jg
xor
cmpsb
xchg
mov
dec
sbb
sbb
scas
push
add
add
xlat
push
dec
insb
loop
aam
inc
into
dec
mov
mov
ss
ljmp
sbb
pop
sub
sub
cmp
push
loope
test
push
pop
stos
xlat
out
sbb
jae
cmc
cmpsb
cmp
lret
lahf
inc
inc
pop
gs
dec
adc
inc
jb
adc
push
outsb
dec
push
clc
lods
daa
in
push
add
xchg
xchg
push
mov
sbb
mov
mov
or
pop
mov
cli
sbb
mov
inc
fsts
pop
mov
and
add
adc
jae
mov
mov
dec
mov
add
cmp
add
mov
mov
imul
mov
mov
jl
mov
cs
lret
mov
inc
sbb
xchg
aaa
rorb
mov
aas
dec
inc
pop
nop
jae
lods
in
pop
out
mov
mov
jns
and
inc
aas
add
jg
add
mov
sbb
jne
scas
cli
sub
jle
dec
dec
jbe
mov
loope
and
addr16
sbb
or
pushf
and
dec
fwait
mov
pop
sub
sbb
pop
hlt
jns
imulb
sub
hlt
xchg
sahf
lock
push
and
xchg
pop
sahf
pop
sbb
mov
ret
sub
push
adcb
dec
mov
pop
leave
add
inc
push
dec
xchg
popf
fldcw
pop
push
das
push
or
pop
mov
xchg
and
test
add
dec
enter
xchg
jb
mov
mov
and
pop
mov
push
sub
inc
or
sub
mov
jns
push
sub
icebp
icebp
idivb
sub
js
sbb
cmpsb
orl
adc
mov
jg
adc
xchg
dec
jbe
jle
sbb
push
pushf
and
lret
adc
dec
nop
aad
test
cs
or
or
mov
jg
sub
add
and
cmp
pusha
dec
into
cwtl
push
mov
mov
insl
xor
addl
mov
rorb
sub
mov
mov
or
sub
mov
addr16
test
push
add
push
jo
cmpsb
dec
jne
push
test
mov
cmp
xor
int3
scas
adc
pop
xchg
jmp
push
xchg
add
movsb
jnp
cmp
or
mov
rclb
cmpsl
or
rcrl
lret
mov
aaa
and
fisubrs
xchg
lods
das
add
roll
cmp
decl
leave
adc
sbb
xor
xchg
sub
sbb
or
ja
xlat
test
enter
xchg
add
sti
loope
cmc
mov
or
pop
push
aad
mov
addr16
scas
pop
scas
push
dec
mov
mov
mov
sub
in
aad
sub
in
ret
adc
sbb
imul
sbb
fildl
imul
arpl
aas
mov
jle
push
xchg
mov
adc
add
mov
movsl
adc
shl
xchg
xchg
fldcw
lcall
mov
add
push
jmp
lods
jge
push
jne
mov
loope
jbe
jp
int
aaa
xor
xor
inc
int
and
icebp
inc
or
les
push
lods
cld
pop
inc
sbb
rorb
insl
or
test
in
movsl
mov
sbb
enter
mov
or
dec
jnp
dec
or
xchg
sub
xchg
mov
repz
sbb
insl
xor
mov
ret
das
mov
mov
sarl
lcall
adc
mov
push
test
aad
adc
push
dec
or
movsl
jne
lock
or
cmc
insb
xchg
cmp
mov
jne
pop
mov
popa
sbb
cltd
lret
fldt
dec
negb
sbb
leave
out
or
int
dec
sub
add
cltd
test
xor
mov
ret
dec
shlb
push
int3
es
out
lock
popa
push
sub
sti
frndint
dec
xor
aad
data16
aaa
xchg
inc
jmp
push
mov
out
bound
insl
das
xor
push
xorb
stos
repnz
cmc
mov
enter
pop
inc
jl
sti
aad
mov
push
imull
sbb
mov
dec
mov
mov
repnz
inc
xor
mov
fs
gs
adc
add
pop
in
ss
leave
mov
and
aaa
sarb
xchg
in
subl
mov
pop
fimuls
dec
jnp
adc
outsl
push
addr16
inc
sub
xchg
jno
je
call
rcll
dec
xchg
call
js
cmp
jbe
cli
xchg
scas
idivb
sbb
and
repnz
je
ret
rcll
fwait
xchg
ss
xchg
adc
inc
jg
inc
push
jp
push
lcall
mov
jecxz
adc
add
aad
xchg
xchg
dec
divb
ret
xor
xor
sbb
hlt
mov
and
xchg
nop
pop
dec
mov
insl
pop
push
xlat
imul
das
jns
addr16
rorb
inc
mov
sbb
jo
jp
cwtl
and
jne
fstps
sti
andb
xchg
inc
je
sbb
sbb
inc
xor
insl
fcompl
lcall
push
adc
cmp
cld
pusha
jl
scas
int
imul
push
mov
xor
mov
into
jo
jno
mov
cld
in
lods
repnz
add
dec
loop
jne
inc
sub
arpl
lret
jns
movsb
fs
ja
fadds
xchg
push
divl
sub
mov
icebp
flds
and
push
in
or
pop
mov
mov
or
or
sbbb
imul
fdivrl
cmpsb
or
push
loop
mov
fcmove
or
imul
bound
stc
loop
pop
test
jle
pop
lret
mov
cmp
repnz
fstps
testb
sar
dec
jo
adc
cmp
daa
push
xor
or
mov
shrl
sub
mov
or
into
nop
push
push
imul
outsb
mov
lods
pop
pop
sub
out
xchg
add
add
cvtpi2ps
imul
test
mov
or
pop
lock
and
or
mov
imul
cltd
xchg
mov
inc
add
jle
dec
fcom
sbb
sub
divl
cmp
sahf
iret
pop
sub
aad
incb
xor
dec
outsl
outsl
cmpsb
push
dec
ljmp
jbe
into
inc
je
dec
or
movsb
xchg
mov
clc
xchg
fucomi
mov
jmp
cmp
dec
dec
in
add
sbb
push
or
jle
fidivrl
out
out
mov
dec
daa
repz
jp
add
pushf
mov
dec
cmp
xchg
int3
pop
cs
addb
push
out
das
inc
mov
or
stos
repz
popl
pop
lds
loope
iret
cld
pop
or
pop
xchg
into
roll
call
push
dec
out
repz
loopne
dec
mov
jle
or
test
dec
mov
mov
adc
pop
xor
dec
nop
fsts
or
inc
imul
lea
dec
pop
jge
inc
jmp
insl
in
imul
jp
xor
sbb
movsb
sbb
dec
cmp
inc
adc
rclb
rolb
nop
push
dec
fsubrp
pop
stos
sub
testl
inc
dec
adc
sbb
jno
push
cmp
fmull
xchg
push
push
in
inc
cld
test
mov
sbb
fsub
fidivs
xor
frstor
mov
add
xor
pop
xchg
dec
mov
leave
or
xchg
push
pop
inc
xorb
adc
test
aam
mov
jg
daa
in
and
xchg
dec
push
test
jp
pop
adc
aam
fs
xchg
imul
outsb
inc
out
cmp
sahf
xor
mov
cmp
mov
jmp
bound
adc
jle
jl
mov
stc
fwait
test
cmp
cltd
add
xorb
and
xor
jmp
popf
inc
fcmovnb
nop
test
lret
pop
and
clc
pop
jge
lahf
rcrb
cltd
or
insb
mov
pop
push
inc
mov
mov
mov
push
mov
push
mov
push
xchg
inc
fcompl
out
hlt
jne
inc
hlt
in
or
jo
cwtl
bound
aaa
lahf
lret
xlat
in
push
pop
mov
adc
lea
pop
addr16
push
inc
adc
ds
pop
es
jno
jb
sub
jecxz
iret
rclb
aad
imul
push
sarl
mov
inc
into
add
dec
je
sbb
std
or
imul
sbb
xor
jb
adc
or
jnp
mov
ja
jg
std
aas
loop
jg
inc
sarl
dec
and
pop
jge
add
sarl
push
push
add
stc
adc
dec
adc
adc
push
lock
scas
or
enter
dec
sbb
jnp
pop
call
inc
in
lret
repnz
add
jecxz
popa
xchg
ds
mov
test
jbe
iret
add
xorb
mov
aam
lret
in
mov
cmc
call
sub
in
dec
push
mov
shr
mov
jo
lahf
jno
addr16
xchg
jbe
dec
fdivrl
mov
ret
add
icebp
push
mov
cltd
pop
adc
lcall
add
jae
fwait
push
add
adc
xchg
scas
inc
dec
jmp
daa
psubusw
stc
push
xchg
dec
int
xchg
je
ds
test
cmp
loope
xor
pop
popa
mov
je
popf
push
push
or
in
pop
je
push
pop
push
movsb
cmpsb
adc
push
cmp
pop
jne
clc
pop
lahf
sub
dec
test
daa
nop
into
mov
pop
inc
or
jns
lss
xor
add
mov
push
int3
pop
dec
ljmp
pop
es
xchg
int
gs
adc
out
adc
daa
sub
ja
mov
aad
push
sbb
pop
std
mov
push
jmp
mov
dec
ret
push
nop
nop
push
outsb
gs
add
loop
jg
out
jb
sub
sbb
push
mov
sbb
adc
cltd
push
in
loope
paddb
adc
push
inc
xchg
shrb
xchg
dec
fcompl
sti
inc
enter
aad
popf
inc
push
cmp
push
dec
int3
or
xchg
int3
jp
xor
inc
gs
pusha
xchg
adc
mov
mov
push
pusha
mov
je
pop
data16
xor
insl
xor
push
insb
test
push
scas
push
fisubl
out
jecxz
and
mov
into
cmpsb
in
outsb
stc
add
inc
mov
insl
push
jae
jp
sub
or
cltd
add
jae
xor
arpl
pop
jae
cltd
ds
fidivrs
xor
and
or
sbb
popa
cltd
jg
and
jbe
xor
jl
xchg
ret
lahf
sbb
insl
push
insb
popa
inc
fsubrl
jl
loopne
jmp
insl
es
sbb
out
xchg
lds
mov
aaa
push
in
stos
inc
lods
pop
sub
aad
inc
pop
cmp
mov
popf
popa
xorl
and
cltd
push
cmc
dec
imul
adc
xor
lahf
or
sub
lea
push
insl
and
jg
push
das
push
std
in
or
xchg
sub
mov
into
je
xchg
sbb
cmpsb
lods
adc
cmpsl
jmp
xor
xor
pop
fs
es
jns
jo
xchg
sbb
jb
outsl
mov
je
jmp
and
dec
ljmp
test
scas
pop
test
lods
int3
mov
lahf
xor
xor
cmp
fidivrl
jo
xchg
sbb
je
jmp
add
sub
sub
or
das
ljmp
cmpsb
mov
addr16
or
sbb
adc
pop
fs
jb
sahf
xchg
sub
xchg
jb
pusha
movsl
or
fisttpl
in
jmp
int3
dec
sbb
mov
fnstcw
cwtl
in
mov
rcrb
inc
xchg
xlat
and
and
adc
and
iret
mov
fcomip
jmp
mov
and
hlt
in
leave
xchg
sbb
jmp
arpl
sbb
mov
fists
cmp
pop
cmp
cwtl
lods
cmpl
dec
inc
loopne
popa
fwait
cli
push
dec
inc
lcall
daa
ss
fdivrl
xorl
hlt
stc
into
mov
out
repnz
es
insb
push
call
popf
cmpb
leave
sub
es
int
pop
mov
pop
push
fwait
sub
insb
push
enter
dec
fdivrs
sbb
sub
jno
fildll
and
movsb
push
mov
ljmp
pop
sub
bound
ljmp
cmp
push
or
pop
in
mov
rcrl
cmp
xchg
mov
add
or
dec
bound
xor
mov
popa
push
jbe
mov
xchg
jne
jmp
pop
fwait
mov
or
or
xor
sahf
std
repz
xchg
adc
lahf
pusha
sub
in
into
dec
bound
sub
fidivs
and
xor
pusha
jge
and
aaa
in
test
in
push
sub
aas
adc
std
jns
inc
fcoml
dec
jmp
push
hlt
or
push
and
push
sub
lea
stos
scas
arpl
inc
lods
add
push
push
mov
add
adc
cmpsb
mov
fwait
mov
enter
sub
adc
cmp
in
aas
pusha
mov
ret
add
daa
out
insb
mov
in
inc
mov
ljmp
out
fsubs
ret
ret
dec
ljmp
mov
mov
or
sti
paddb
lods
or
mov
mov
aaa
test
jg
popa
or
lods
adc
dec
loop
divl
test
into
sub
mov
seta
jg
fimull
leave
mov
xchg
inc
push
cmp
popf
push
jns
dec
cs
flds
in
pop
inc
stos
sahf
and
lret
test
or
inc
pop
into
nop
push
adc
add
call
or
test
rolb
jg
dec
dec
outsl
lea
aad
lahf
pop
push
push
ffreep
ret
imull
pop
add
xor
pusha
add
das
inc
xchg
push
inc
cmp
pop
inc
addr16
jbe
cmp
sub
sub
arpl
daa
data16
dec
inc
nop
lds
enter
fldcw
mov
mov
cmp
or
or
push
call
inc
xchg
mov
dec
jb
ja
xchg
dec
aam
movsb
inc
sub
push
imul
or
pop
aam
mov
pusha
andb
movsb
jno
mov
out
mov
jmp
rep
xor
popa
cmp
xlat
test
loop
jle
or
inc
andl
mov
lret
lret
lret
lock
adc
out
sub
in
sbb
inc
andl
out
dec
sub
jne
inc
ljmp
push
movsl
jne
hlt
and
daa
daa
daa
inc
or
xchg
jb
mov
xor
and
data16
jmp
dec
push
clc
sbb
lock
pusha
in
int
dec
pop
paddb
mov
mov
push
movsb
int
mov
pusha
xlat
dec
xchg
inc
in
mov
sbb
lret
je
lods
inc
mov
jne
in
inc
dec
out
jb
jmp
dec
dec
in
jle
cmp
cmp
mov
xor
inc
out
jle
jne
int
push
cmp
xchg
push
imul
jnp
aaa
dec
mov
pop
ljmp
fmul
inc
jmp
add
jmp
clc
popa
ljmp
and
push
orb
fadds
inc
adc
insb
mov
scas
in
mov
add
imul
dec
add
sub
dec
dec
cmc
pop
pop
insb
push
cmp
js
ds
fimuls
mov
push
and
ret
les
jns
adc
add
adc
cwtl
mov
je
inc
mov
sbb
push
inc
sub
test
lea
icebp
jno
je
aaa
jno
pop
loop
sbb
and
js
inc
movsb
add
cs
inc
mov
sbb
pop
jae
sbb
dec
scas
mov
dec
pop
add
ja
in
dec
out
xor
into
mov
cs
xchg
out
cmp
mov
cmpsb
cmp
push
dec
adc
repnz
xchg
jge
sbb
inc
cmpb
or
imul
testb
pop
loop
sbb
dec
gs
cmp
scas
outsb
stc
inc
mov
adc
dec
pop
pusha
mov
movsl
ret
cmp
inc
and
jae
sbb
xchg
jl
insb
mov
jmp
inc
repz
xor
mov
insl
jae
or
inc
push
fstp
gs
std
xchg
fs
lahf
pop
cs
and
orl
sub
nop
cmpl
jno
pop
gs
je
lds
stc
inc
push
je
xor
adc
xor
cltd
jbe
aaa
lock
adc
jp
fstps
shll
in
and
push
and
xor
adc
cltd
test
stos
jmp
push
fs
cwtl
add
in
xor
mov
mov
mov
dec
cmp
ss
xchg
cltd
and
lods
pop
leave
dec
dec
test
xor
stc
mov
or
or
cmc
mov
popf
cmpsl
cmp
inc
popf
jle
xor
cmp
or
test
cwtd
repnz
mov
test
jl
aad
insb
dec
in
mov
popf
cmp
subl
dec
iret
and
pushf
mov
fisubrs
jmp
roll
inc
or
into
pop
jg
out
sbb
xchg
outsb
fisttpl
or
inc
xchg
fwait
xchg
push
cmp
inc
mov
pushf
mov
or
fsubrs
lret
mov
iret
xor
inc
or
or
sbb
push
jecxz
sub
add
mov
cmp
sub
pop
jae
pushf
decb
enter
loop
mov
nop
xor
pop
sub
rep
stc
lods
jle
jns
push
adc
pop
icebp
inc
inc
clc
xchg
jbe
subb
jecxz
fs
popa
xor
jecxz
mov
popa
lret
or
xor
jp
je
gs
test
stc
xchg
mov
xchg
sub
daa
or
sub
stc
or
or
out
dec
push
lods
js
mov
stos
ljmp
and
les
imul
jbe
inc
out
mov
imul
outsb
lds
mov
push
mov
data16
xchg
mov
xor
dec
and
and
push
insl
adc
fnstsw
cmp
lahf
jb
sub
fmul
mov
xor
dec
sbb
fcmovnu
jge
out
dec
fs
jns
jle
pop
inc
rcrb
call
xchg
sub
pop
jae
inc
in
adc
sub
jno
mov
shr
cli
dec
xor
inc
mov
jb
mov
inc
cld
push
mov
fimull
or
push
call
fcomp
mov
sarl
xchg
inc
call
inc
jge
push
push
jae
mov
sar
mov
sub
mov
test
mov
arpl
cmp
inc
movsl
cmc
lock
sti
and
test
inc
shll
mov
fdivl
lods
inc
sbb
sub
mov
out
dec
xchg
scas
gs
jp
sbb
sbb
pop
out
pop
movsl
or
dec
daa
sbb
stos
push
aad
sbb
inc
lods
xor
out
repz
ret
sbb
les
aad
pusha
cmp
mov
pop
lea
ret
mov
add
outsl
int3
xor
jmp
mov
mov
std
lock
out
push
lock
jns
cmp
pop
repnz
mov
add
cld
mov
adc
sub
inc
push
call
lret
add
jno
dec
aad
mov
popf
xor
lds
lret
movsb
add
adc
dec
or
rcll
out
jecxz
adc
jg
fnstenv
jle
mov
push
ja
push
sahf
test
cli
dec
pusha
xor
fwait
mov
push
dec
add
scas
pop
adc
je
mov
jae
mov
xor
or
add
cmp
cmp
jnp
or
shlb
jge
or
or
add
add
ds
sbb
lahf
shl
mov
sub
push
push
dec
jo
xor
cmp
daa
out
out
ss
jg
sbb
popa
push
lahf
or
mov
das
mov
daa
pop
cmpsl
add
sub
je
sbb
sub
jmp
imul
and
cmp
inc
fildll
jno
in
pop
jns
cmp
lret
sub
loop
stc
leave
cltd
sahf
jle
xchg
dec
push
lods
cmpsl
mov
jecxz
mov
es
inc
mov
jmp
call
mov
dec
gs
inc
in
inc
push
dec
pop
sahf
xor
jbe
dec
adc
arpl
aaa
mov
dec
test
lret
dec
xor
xor
xor
or
jb
aas
mov
adc
cmp
push
imul
cbtw
jb
imul
push
xor
xchg
fistpl
jb
mov
or
pop
pop
sbb
gs
test
or
rcll
out
mov
cmpsb
pushf
movsl
cmp
pop
iret
xor
jns
add
js
sub
sbb
shll
cltd
xchg
int3
push
aaa
sbb
jge
orl
in
xchg
pop
cld
hlt
sub
test
loopne
xchg
jo
jae
pop
ret
mov
outsl
mov
cs
mov
cmc
cmp
push
mov
mov
mov
pop
cmpb
cltd
mov
cmp
rol
add
out
fdivrl
cltd
aas
aas
mov
mov
xchg
bound
out
roll
add
les
popa
jae
add
dec
add
jnp
sahf
cmc
jns
addr16
jle
gs
push
cmp
in
add
dec
rcr
pop
repz
arpl
dec
rcrl
inc
jge
sbb
xor
aaa
outsb
lret
or
testb
stos
jle
or
jle
xchg
sub
xchg
jns
jg
and
sub
push
jge
daa
lods
jle
push
add
mov
pushf
test
cmpsb
xchg
xchg
popa
mov
xchg
lods
mov
jmp
mov
jno
inc
filds
addr16
ss
and
je
mov
or
push
cmp
fcmove
in
adc
xor
adc
rolb
lods
xor
xchg
cwtl
fildll
xchg
sbb
mov
mov
lret
push
stos
dec
stos
push
fstl
or
dec
rolb
push
rdmsr
xchg
enter
cmp
dec
push
lods
cmp
xor
push
xor
adc
push
adc
xchg
in
dec
out
dec
add
outsl
mov
aad
test
cmpsb
add
jnp
test
arpl
mov
and
fs
mov
ds
aas
orl
xchg
lahf
mov
rcll
or
lods
int3
jp
and
sub
sbb
inc
dec
aaa
xchg
adc
cs
aaa
cmpsb
and
aam
add
dec
sbb
push
xchg
sub
jns
sbb
push
inc
pusha
into
call
jno
inc
jecxz
cmc
xchg
and
std
fwait
pop
das
pop
jb
push
cmc
repnz
shll
xor
jg
jo
or
out
mov
or
xor
cmpsb
xchg
and
daa
jecxz
sbb
or
outsb
jmp
jge
dec
in
add
rol
in
test
pop
enter
outsl
cli
scas
pop
or
fwait
ds
mov
sbb
cmp
ljmp
stos
add
lret
push
inc
add
dec
push
pusha
subl
or
rcrl
jp
adc
sbb
jge
test
nop
aaa
dec
sub
dec
ds
add
dec
xchg
cs
jp
insl
jmp
mov
xchg
test
and
stc
sub
push
cmpsl
or
pop
dec
loopne
dec
xor
push
scas
dec
sub
xchg
es
push
and
push
das
xor
mov
and
mov
test
mov
call
cs
add
mov
mov
mov
xchg
ds
and
cwtl
cmpsb
jne
mov
sahf
sbb
adc
xlat
push
daa
mov
adc
das
mov
add
and
pop
xchg
mov
sub
mov
push
lcall
and
pop
mov
lods
pop
xchg
xor
mov
out
add
inc
xchg
xor
aaa
and
test
call
sahf
push
lds
mov
and
jecxz
xchg
loopne
test
pop
lahf
cwtl
shll
test
fisttpl
xor
push
lods
mov
mov
or
sbb
fnstsw
mov
inc
push
test
cs
push
imul
dec
push
sub
push
div
sbb
push
popf
pop
lods
arpl
xor
sub
mov
das
cmp
jp
out
mov
inc
jge
xchg
jno
mov
xchg
jp
pop
sub
jne
cmp
bound
adc
fstps
inc
sti
mov
push
mov
pop
repnz
into
jno,pn
dec
cld
xor
mov
and
sub
jbe
insb
sub
aas
lahf
popl
adc
bnd
cltd
push
arpl
repnz
pushf
clc
mov
sbb
ljmp
sub
fcom
leave
xorl
jl
inc
inc
inc
xchg
out
mov
stc
xor
mov
stc
hlt
adc
mov
sub
mov
push
jbe
jbe
sub
aad
mov
lcall
jbe
dec
inc
je
cld
fdivrl
dec
es
sub
in
or
sbbl
push
cmc
cs
sub
jnp
popa
icebp
pop
shll
gs
push
in
lcall
push
aad
rclb
ret
fisubrl
dec
sbb
test
movsl
and
dec
add
aam
in
loope
and
nop
sbb
outsl
mov
sub
dec
jns
scas
dec
imul
out
sbb
pop
add
xchg
or
push
xchg
cwtl
xchg
mov
and
pusha
out
pop
jecxz
fwait
jmp
sbb
gs
std
mov
inc
add
loope
cmpsl
mov
push
jns
xor
or
add
jae
sbb
repz
fs
pop
out
nop
cmc
cmpsl
add
daa
sub
sbb
fstps
dec
rcrl
lock
in
sbb
xchg
test
into
call
ds
outsl
movsb
sub
push
das
loop
enter
mov
xchg
xchg
out
push
mov
jae
push
xchg
sub
bnd
jb
xchg
cltd
xor
cwtl
ss
xchg
dec
mov
scas
ljmp
xchg
ret
and
pop
pop
xor
jp
insb
out
xchg
test
sbb
mov
inc
call
mov
call
rcl
outsl
xchg
xor
sub
cmpb
mov
sub
andb
dec
cmp
aad
push
cwtl
cmp
mov
push
fs
sub
xchg
adc
mov
loope
jnp
adc
lahf
or
jae
dec
stos
test
cpuid
in
inc
nop
insb
sub
jnp
mov
cltd
sbb
jb
add
dec
outsb
xor
test
in
xchg
mov
outsl
cli
jp
inc
movsb
inc
mov
inc
lret
nop
into
insl
sub
dec
dec
inc
xchg
cs
push
xchg
mov
jge
mov
mov
xor
xchg
sbb
int
or
dec
pop
or
jge
jno
mov
jl
adc
xchg
sbb
shll
or
test
pop
cwtl
add
das
stos
mov
test
jle
fwait
and
or
iret
sub
cli
jae
cld
das
cltd
insl
push
aas
xor
int3
divb
push
lods
jl
mov
xor
leave
xor
repnz
ret
mov
out
sarl
insl
jge
int3
xor
mov
jno
xor
dec
mov
xchg
xor
add
dec
inc
daa
outsw
cmpsl
repnz
stc
mov
mov
aad
lds
mov
cli
mov
sahf
pop
pop
call
push
cmp
cmpsl
cli
sub
cltd
lock
and
fs
fcomps
inc
std
mov
and
sbb
imul
std
out
jb
push
icebp
jno
repz
movd
pop
test
jae
arpl
imul
dec
es
stos
sub
out
into
or
mov
xor
xchg
xchg
aam
mov
mov
dec
stc
arpl
dec
inc
inc
gs
ds
push
movsb
xchg
dec
mov
leave
sub
jno
xchg
sbb
sbb
sub
and
jne
test
mov
dec
outsl
sub
sbb
notl
in
sar
push
shlb
push
inc
jbe
jno
fwait
dec
sub
jge
mov
scas
jle
ljmp
jb
add
mov
in
mov
scas
pop
fs
popf
enter
sub
jmp
lret
xor
stc
inc
and
xchg
and
insl
sub
inc
sbb
lock
aad
lea
cli
pop
lock
cmpsb
sbb
jae
or
dec
insl
lock
addl
add
mov
lcall
or
out
nop
xchg
fisubrl
test
add
lahf
cltd
sub
lret
std
inc
in
and
in
ss
shll
cmpsb
stos
bound
lods
cmp
jno
dec
test
sahf
iret
xor
sub
lret
in
xchg
jb
lods
ja
nop
data16
les
jge
push
sbb
mov
and
lahf
adc
dec
inc
std
mov
mov
and
mov
mov
and
adc
mov
fildll
loopne
sub
jno
inc
arpl
rcrb
nop
cwtl
dec
push
or
in
leave
loope
or
sbb
and
sbb
cmp
test
inc
inc
mov
aad
adc
or
jb
jp
sahf
or
fisubrl
mov
gs
xchg
je
mov
loop
jae
jno
xor
pop
push
das
and
loope
jl
imul
jno
jmp
call
dec
in
push
je
ffreep
xor
mov
push
lods
cmc
mov
sti
jb
push
push
pop
and
xchg
aas
test
sub
imul
mov
push
cwtl
xor
insl
push
ds
cmp
jae
cmpsb
cmpsl
lods
filds
mov
dec
out
sub
into
adc
sbb
or
xchg
popf
ret
mov
vcvtps2dq
jae
lret
adc
cmpsl
mov
sub
jmp
mov
jge
shr
jo
dec
jns
mov
test
imul
test
scas
push
mov
in
inc
sbb
mov
test
lods
mov
out
in
arpl
or
fildl
jl
pusha
adc
or
outsl
pop
add
movsb
jmp
inc
cld
cmp
call
fs
outsl
andl
inc
jmp
lret
dec
cwtl
adcl
ss
dec
jno
push
sti
dec
push
pop
inc
or
push
or
add
repnz
mov
adc
mov
lcall
mov
scas
test
pop
xchg
in
iret
nop
add
dec
jnp
push
shlb
cltd
repz
movsl
add
gs
jbe
xorl
dec
inc
adc
ret
or
mov
outsb
fadds
cli
xchg
call
aaa
mov
cmpsb
xchg
sub
outsb
dec
sub
or
sbb
mov
sub
addl
fiaddl
mov
or
dec
popf
and
loopne
ret
fstpl
mov
inc
out
rorl
jno
leave
push
and
jle
movsl
bound
adc
mov
mov
xchg
cmp
dec
leave
ja
push
xor
jnp
adc
sbb
push
loope
rclb
adc
fs
push
test
dec
jle
dec
rclb
push
pop
mov
xor
xor
dec
dec
ret
in
jecxz
call
dec
test
dec
test
aad
jno
adc
andl
mov
not
cmpsb
add
or
inc
mov
repz
jmp
mov
stos
jns
cwtd
add
inc
cwtl
ret
cld
sbb
ficoms
in
pop
lods
movsl
std
sbb
inc
inc
rclb
add
pusha
add
mov
js
jmp
pop
sub
mov
xor
test
shll
xchg
sub
imul
mov
inc
push
std
jne
lret
fnsave
nop
sub
xor
jecxz
stc
aad
divl
and
add
sti
cmp
mov
mov
push
pop
jbe
pop
and
in
mov
xorl
andb
push
sbb
sub
inc
sub
push
cmc
add
loop
mov
ficomps
aas
inc
aam
scas
pop
pop
ret
mov
pop
dec
dec
repnz
out
and
sahf
lock
mov
fdivl
stos
inc
shll
xchg
push
inc
hlt
sbb
repz
imul
adc
push
clc
adc
push
and
test
roll
add
inc
dec
xchg
ret
or
popf
addr16
repz
pop
dec
jne
imul
add
stos
jecxz
or
jle
ljmp
fs
ret
push
scas
pop
push
out
push
daa
cmc
and
lret
jg
in
add
lahf
ret
inc
pop
add
add
xlat
cwtl
or
out
mov
out
in
stos
push
mul
dec
mov
xor
scas
icebp
and
sbb
rclb
mov
data16
gs
pop
push
pushf
adc
loop
outsb
xchg
mov
add
bound
jecxz
cmc
mov
out
pop
std
lret
lods
jo
cmp
adc
outsb
sbb
add
inc
daa
loop
popf
stos
mov
in
mov
jmp
outsb
into
mov
xchg
jp
pop
dec
lds
je
jge
sti
sub
in
add
loop
fadds
push
rolb
lock
pop
cli
movsl
xchg
jns
lds
xchg
adc
cmpsl
mov
sub
mov
dec
cmpsl
jne
mov
inc
mov
sbb
out
mov
fstps
inc
sti
xchg
pop
push
lods
test
or
xchg
adc
enter
jbe
outsl
fdivs
sub
mov
inc
icebp
pop
jp
pusha
popf
inc
cld
sub
pop
and
mov
and
test
fldt
lahf
pop
insb
push
fsubl
fsubl
mov
sarl
fistps
fadds
in
add
and
mov
call
aas
jmp
jge
inc
es
insb
aad
data16
jge
and
and
cmp
push
mov
jg
push
imul
arpl
mov
dec
outsb
mov
push
es
push
mov
int
adc
adc
inc
scas
pushf
xchg
jo
cmp
mov
addr16
jns
pop
jns
cld
in
sbb
jg
or
imul
push
jnp
insl
jle
jg
cmc
add
rclb
sub
or
fists
push
sbbl
jo
lret
data16
in
xchg
dec
mov
dec
and
lock
dec
sub
aam
popf
mov
adc
cltd
leave
inc
dec
inc
negb
jl
arpl
andb
outsb
das
mov
or
in
lcall
gs
xor
int
cmc
repz
pop
inc
dec
cmp
jle
dec
push
pusha
sahf
lods
xchg
movsb
arpl
mov
jle
jnp
add
mov
pop
sub
mov
bound
mov
test
mov
out
sbb
les
test
sahf
sub
add
call
mov
shl
jle
fimuls
fcmovnb
loopne
cmp
sbb
pop
and
pop
mov
xor
or
and
pop
push
ja
inc
and
jg
pop
push
lods
jae
add
cmp
jmp
jbe
mov
outsb
shll
stos
movl
mov
push
rcrl
push
sti
leave
insb
and
out
aas
jg
xor
popf
gs
adcb
lock
push
cmc
ljmp
dec
or
scas
xor
rclb
inc
push
adc
inc
sub
xor
fwait
cmp
or
and
jno
mov
shlb
pop
mov
into
jle
mov
xlat
rolb
ja
jmp
jg
sub
scas
outsl
cmp
xchg
or
popa
inc
scas
pop
inc
add
push
push
lds
jns
test
les
and
icebp
insb
in
push
or
add
pop
adc
mov
pop
gs
xchg
push
mov
insb
cwtl
mov
lret
inc
cmc
fcmovne
pop
jl
dec
add
sbb
pusha
mov
push
mov
sbb
mov
test
jne
lock
sbb
pop
out
out
sub
lahf
and
mov
inc
pop
mulb
dec
out
repnz
xchg
je
xor
mov
xchg
mov
cmp
fsub
jp
mov
clc
mov
sbb
lret
and
movsb
iret
xchg
outsb
hlt
push
add
push
sbb
loope
lcall
pop
mov
xor
jl
or
mov
test
jecxz
sbb
lds
ja
push
pop
arpl
loopne
clc
rcl
push
xchg
scas
mov
in
pushf
lahf
fcoml
or
push
xchg
mov
scas
mov
fcomip
push
sti
adc
sbb
sbb
lcall
push
and
ds
cwtl
lea
cwtl
or
push
pusha
insl
mov
nop
inc
or
inc
jns
adc
push
out
inc
jbe
scas
pop
repz
stos
add
aas
mov
stos
je
pop
scas
fisttpll
sub
adcl
jp
adc
xor
and
jb
into
es
fwait
adc
pop
xchg
aaa
cmp
xorl
addr16
test
jae
lods
fisubrl
xchg
dec
mov
ret
xor
push
mov
xlat
jle
mov
inc
dec
movb
or
adc
movsl
sbb
icebp
or
stos
mov
lock
mov
stos
mov
std
mov
pop
jb
das
sbb
daa
pop
jns
xchg
cmpsb
mov
lcall
add
ret
mov
push
inc
data16
xor
iret
and
lcall
in
das
mov
jge
je
cmpsb
mov
cmp
int3
xor
lahf
cmpsb
or
xor
sbb
push
test
ja
push
lock
daa
lock
or
push
scas
das
inc
mov
mov
cli
push
dec
cli
gs
sub
xchg
jg
fdivs
push
xchg
test
xlat
pusha
sbb
fstpl
cld
sbb
or
inc
or
inc
bound
xor
loopne
xchg
xchg
pop
inc
movsl
xlat
nop
int
test
imul
lods
ret
mov
lock
adc
test
dec
sbb
xchg
in
test
cmp
xchg
xchg
pop
jno
enter
pop
lea
repnz
test
xchg
or
cmp
in
xchg
sub
xchg
mov
push
sub
shl
pop
dec
pushf
addr16
aas
pop
mov
cli
rcrl
push
xchg
xlat
dec
scas
or
in
push
rolb
test
aad
push
lock
mov
test
imul
jno
pop
repz
push
imul
call
jo
imul
mov
dec
ret
loopne
xchg
sub
sti
popa
aad
inc
gs
jge
daa
repnz
mov
test
xor
stos
in
mov
pop
jmp
pop
adc
jmp
push
cltd
adc
pop
shll
mov
into
adc
mov
jg
sub
sti
scas
or
mov
stos
out
push
dec
push
push
or
jp
arpl
xchg
jno
xor
fimuls
push
xor
pop
addl
fstl
inc
andl
add
shr
jbe
xor
push
jbe
and
scas
ds
xor
add
xor
jae
shl
sub
notl
xor
inc
in
aad
jnp
ret
xchg
mov
pop
mov
add
dec
jns
mov
repnz
fidivs
dec
test
fcom
jne
lods
shrb
jno
cmpl
xchg
popl
lea
push
mov
xchg
outsb
jnp
leave
fst
adc
faddl
inc
test
dec
or
jne
fcompl
int3
push
clc
ret
mov
jno
mov
ret
cmc
add
jns
imull
scas
sub
aam
out
adc
add
mov
and
jmp
pop
lahf
sbb
shlb
not
push
mov
xor
add
adc
cli
add
mov
push
mov
xchg
add
jbe
adc
mov
insb
int3
cmc
adc
jbe
or
inc
aas
xchg
sbb
je
sub
ljmp
jae
sbb
xor
or
dec
dec
sbb
hlt
push
jge
cmpsb
cmpsl
sbb
lret
std
jp
out
add
push
cwtl
mov
bound
gs
push
lods
mov
aad
out
imul
jp
loop
js
pop
call
dec
cmp
roll
in
mov
jg
add
fildl
imul
cmp
add
hlt
rcrb
mov
frstor
hlt
sub
mov
add
cmc
ret
jge
or
pop
dec
lret
xchg
pushf
cmc
cmp
ss
pop
or
and
add
mov
mov
ds
add
or
je
rclb
mov
jbe
movsb
add
cmp
jge
andb
push
cld
cld
sti
stos
xchg
jns
inc
into
ja
mov
jnp
xor
xchg
rorl
fmuls
and
jo
js
ret
test
enter
call
addr16
test
fiadds
sub
jge
or
sub
cmpsb
mov
mov
scas
rolb
sub
mov
mov
inc
out
cmp
leave
add
in
lds
mov
cld
leave
shll
mov
arpl
pop
test
test
fimuls
xor
pop
xchg
dec
std
in
or
mov
add
mov
dec
ret
mov
push
xchg
pusha
dec
aas
and
int
pop
xor
xor
cmpsb
call
jae
mov
ret
out
mov
mov
lret
out
adc
fstps
das
push
cmpsb
jne
popa
adc
nop
push
addr16
adc
push
xor
lea
dec
dec
call
sbb
pop
jle
pop
cmp
cmp
ljmp
bound
aad
adc
inc
sbbb
xor
ss
cmpsl
mov
in
add
into
sub
pop
and
or
jae
dec
pop
xor
aad
shll
scas
inc
pop
lds
mov
shlb
inc
stos
add
cld
call
fwait
andl
push
mov
adc
pop
mov
pop
push
xchg
scas
flds
int
add
movsl
add
inc
jmp
adc
jns
push
out
inc
pop
cmp
xor
das
jo
mov
inc
mov
mov
sbbl
outsb
mov
push
or
push
xor
mov
sbb
xor
fcomp
mov
dec
xchg
jmp
mov
xorl
in
arpl
nop
clc
lret
dec
pushf
int3
popa
jmp
sbb
inc
fmull
loop
mov
cmc
int3
imul
and
add
jmp
movsl
fstps
mov
pop
sub
add
xchg
pop
xchg
dec
jecxz
dec
mov
in
test
cmpl
dec
pusha
push
jg
repnz
nop
or
inc
xchg
nop
mov
jo
repnz
and
cmpsl
add
sub
js
into
mov
in
hlt
sbb
and
aas
add
cmpsl
fildl
call
mov
or
ficompl
jae
aaa
lods
inc
cmp
mov
pop
scas
fwait
mov
leave
sub
add
lahf
lea
movsb
js
cli
xchg
jo
mov
mov
pop
test
mov
imul
cmp
push
fsubrl
pusha
xchg
jb
imul
daa
movsb
ror
mov
lea
mov
cmp
pop
cli
jmp
lock
test
mov
jbe
add
faddl
movsb
mov
fisubl
lock
mov
jbe
inc
pop
flds
and
or
mov
jno
cltd
mov
sbb
inc
jnp
xchg
mov
mov
out
mov
shrl
jo
iret
ret
push
scas
or
jae
rolb
mov
push
cmp
mov
jo
mov
fisttps
pop
ret
insb
and
xchg
jbe
jbe
jnp
sub
in
pop
and
dec
cltd
cmp
pop
lahf
xchg
jge
fs
inc
lret
lret
cmpsb
test
jno
cmpsb
push
jp
ljmp
test
int
and
iret
dec
pop
dec
in
lret
scas
and
xchg
lods
fiaddl
mov
xchg
cltd
pop
int
lret
or
mov
inc
sbb
jo
mov
aad
ds
lahf
mov
andl
bnd
add
and
imul
sub
call
inc
or
sbbl
mov
mov
mov
dec
sti
stos
jle
push
aad
push
pusha
dec
rcr
daa
imull
test
adc
imul
imul
and
cmc
adc
imul
mov
lret
inc
xchg
in
pop
mov
adc
mov
inc
shlw
mov
inc
push
pop
cli
bound
xchg
lock
dec
inc
cmp
jge
jle
mov
push
push
mov
sub
and
dec
mov
inc
cmp
movsl
ret
push
in
xor
sub
movsl
pop
adc
insb
outsb
jb
cmpsb
pop
movsb
jle
cmc
addr16
push
adc
sbb
sbb
or
jmp
aam
mov
in
mov
mov
cs
push
arpl
and
or
mov
inc
xor
fdivs
shrl
add
mov
mov
cmc
outsl
ss
shrl
movsl
mov
out
mov
lret
mov
pop
xor
ret
sbb
mov
push
or
daa
mull
inc
inc
push
pop
outsb
and
jno
xchg
cmpsb
xchg
adc
mov
push
mov
mov
daa
mov
mov
dec
stos
push
push
ret
addr16
push
stos
test
cmp
arpl
mov
push
jno
imul
xchg
les
scas
gs
push
dec
loop
aad
fsubr
sub
enter
ret
and
mov
lock
cs
hlt
dec
push
inc
pop
mov
stc
addr16
xor
and
dec
xchg
movsb
je
lcall
inc
leave
mov
sub
dec
enter
popf
lret
xchg
fneni(8087
mov
outsl
iret
push
mov
les
mov
pop
mov
ja
rcll
js
je
or
inc
cltd
or
clc
mov
ljmp
push
or
xchg
cli
jle
jbe
push
inc
mov
ljmp
sti
dec
fnstenv
addr16
sbb
push
sub
mov
sbb
push
add
jl
mov
xchg
std
hlt
push
sbb
ror
cmp
mov
push
add
test
push
inc
cmp
cmpb
test
xchg
or
inc
test
hlt
ficompl
std
ret
in
aaa
pop
sub
adc
mov
ja
outsb
scas
pop
mov
insb
sti
daa
imul
add
icebp
push
sti
rcll
outsb
incl
cmp
in
in
and
out
push
mov
lcall
push
roll
jae
pop
out
ret
dec
adc
pop
bound
sub
xor
pop
mov
insl
mov
out
in
mov
inc
mov
je
std
push
pushf
add
inc
cmc
scas
cli
add
jg
cmp
jge
mov
inc
jbe
pop
mov
xlat
or
or
mov
dec
xor
lcall
inc
add
or
xchg
enter
mov
mov
repz
add
xor
in
or
jmp
and
mov
and
loope
daa
pop
jmp
cmp
out
popf
jl
std
rorl
cmpsl
loop
xchg
or
xchg
push
fs
in
mov
push
icebp
push
xchg
lock
fiadds
jbe
cmc
push
and
insl
xchg
jl
test
fs
data16
push
fldenv
punpckhwd
mov
fs
leave
and
mov
jnp
outsb
mov
dec
icebp
ds
lods
nop
pop
mov
rcr
inc
jne
inc
clc
dec
idiv
adcl
pop
sub
in
fsubs
in
xor
and
jbe
and
jle
or
and
pop
es
pushf
fwait
cltd
jb
pushf
out
pusha
test
push
in
loop
pop
lea
inc
inc
iret
xor
or
add
jl
and
loope
add
xchg
cmp
or
fimull
pop
std
call
lret
ljmp
sbb
jns
dec
jno
jnp
jle
fnstsw
jnp
sub
xchg
add
ficoms
test
lret
jae
mov
inc
jmp
dec
cmp
sti
daa
lock
mov
je
mov
lods
dec
xor
add
out
int3
add
scas
jbe
rcrb
aaa
xor
or
in
mov
movsl
inc
mov
xorl
test
xor
lret
push
das
xor
popw
adc
arpl
pop
dec
or
pop
popa
inc
sti
aaa
imul
push
test
pop
push
push
out
inc
jbe
ret
xchg
fdiv
inc
dec
cmp
or
je
cmpsb
fs
shl
xchg
xor
leave
sub
test
push
icebp
cmpsl
inc
jl
sub
ja
lock
xor
push
arpl
fisttpll
inc
or
mov
in
jno
int
push
jle
aam
jl
inc
int3
jbe
cmp
jbe
fwait
sub
pop
push
insl
lods
negb
inc
mov
popa
push
popa
lds
xchg
push
jge
aam
mov
jne
pushf
mov
sbb
cmp
cmp
dec
into
and
fsubrs
ret
cmp
into
lret
mov
out
or
jl
adc
add
push
cli
daa
push
inc
xchg
mov
push
add
or
cmp
dec
popf
bound
add
in
or
push
aas
xchg
loop
adc
pop
cltd
test
inc
push
gs
cwtl
add
inc
test
cmp
out
dec
outsl
or
sub
push
out
sbb
test
in
push
arpl
push
es
daa
outsb
test
dec
and
push
push
movsb
mov
pusha
lret
in
jbe
jo
out
push
pop
inc
jne
in
stos
adc
sub
jno
xor
mov
gs
sub
push
dec
sbb
cmp
cltd
imul
mov
divl
cmp
popa
enter
mov
sti
stos
cmp
mov
scas
push
dec
sahf
je
mov
je
mov
mov
or
std
lea
ret
ss
inc
mov
cmpsb
outsl
cmpsb
sahf
fldl
and
cmp
push
or
fs
enter
int3
mov
fisubl
je
sub
adc
lcall
fsts
push
xor
adc
ret
fwait
icebp
das
das
cmp
test
divb
mov
jbe
sbb
sub
lods
mov
in
psubq
in
insb
xor
sub
add
add
push
pop
cli
cmp
insl
shl
fidivrs
rcr
call
and
imul
inc
or
inc
insl
pop
xlat
jp
cmp
sub
aaa
fs
cs
ret
pop
sbb
inc
je
outsb
pop
filds
push
cmp
pop
adc
xchg
jns
iret
je
or
mov
dec
pop
cs
cltd
adc
ja
xor
inc
sbb
pop
cld
call
push
aaa
es
sbb
or
dec
test
and
bound
loop
pop
mov
lcall
in
cli
pop
inc
cwtl
jnp
pop
push
shrb
add
pusha
jmp
std
cld
imul
mov
sub
cwtl
push
imul
js
mov
out
cmp
cli
shl
inc
imul
inc
dec
in
enter
cmp
dec
jge
int3
inc
jno
push
je
shll
or
jmp
dec
sub
clc
rorl
and
or
jg
add
jns
fstps
popa
cli
bound
jo
es
repz
arpl
lds
jne
loop
gs
cmp
sub
jnp
lcall
ds
sub
push
or
movsb
mov
je
cmp
or
lea
or
push
jnp
jnp
andl
sbb
aas
cmp
lock
jae
jl
jae
mov
aad
dec
push
mov
cwtl
icebp
or
or
mov
jo
stos
lret
fidivl
mov
pop
mov
loop
cmp
pop
add
ret
sub
pushf
jmp
mov
dec
and
xor
dec
add
xchg
daa
orl
out
outsl
cltd
loop
xlat
xor
insl
imull
push
cmp
ss
push
je
fs
fmulp
repz
daa
dec
mov
dec
cmp
pop
sbb
outsl
push
push
xchg
or
dec
popf
mov
push
mov
dec
sub
pop
add
mov
pop
dec
xorl
pushf
pop
pop
pop
fwait
imul
mov
sbb
incl
xchg
andb
mov
rcl
xor
xchg
test
add
xor
cmp
pop
dec
sub
inc
cmpsl
jbe
mov
and
jae
lcall
mov
xlat
repz
jl
movsb
fdecstp
fwait
mov
push
ljmp
push
cmpsl
jae
lret
sub
fidivs
xchg
inc
jbe
adc
sbb
ljmp
lret
scas
mov
bound
pop
push
jp
jg
jle
dec
mov
cs
in
int3
mov
in
xchg
cwtl
cmp
gs
cmp
sbb
xor
sbb
sbb
pusha
jmp
xlat
add
mov
shll
or
jae
ficompl
aas
dec
push
adc
dec
sarl
insb
xlat
cld
stos
pop
popf
xchg
push
scas
or
gs
ret
jae
pop
notl
shlb
dec
test
push
mov
cwtl
subb
pop
subl
in
iret
dec
pop
xor
dec
adc
roll
cmp
sbb
or
sub
jmp
pushf
rorb
lods
jno
add
lods
movsl
in
insl
xchg
mov
mov
mov
bound
pop
lods
cmp
jl
pop
icebp
push
sub
lods
hlt
xor
inc
bound
testl
leave
outsl
push
mov
jne
inc
dec
ja,pn
mov
sar
test
ss
jns
jg
arpl
pusha
scas
mov
loopne
fisttpll
push
in
jb
enter
aaa
in
std
jno
cmc
pop
xor
sbb
jne
leave
mov
dec
xor
insb
and
negb
fs
int
add
push
out
sub
andb
xchg
test
js
sbb
cwtl
mov
xor
stc
mov
and
fildl
movsl
or
test
mov
pusha
sbb
fsubr
pop
inc
cld
adcb
dec
adc
imul
shlb
iret
cmp
sub
jno
mov
adc
mov
adc
pop
xchg
xchg
add
add
aam
lods
pop
out
pusha
in
jge
xchg
xor
dec
into
stc
push
inc
nop
cmp
xor
ja
and
mov
sbb
adc
insl
sbb
cltd
pop
testb
in
addr16
inc
adc
ret
arpl
jno
dec
cmpsl
je
and
mov
ficoms
push
dec
push
pop
negb
rcrb
ja
push
mov
xchg
or
pop
or
pop
cs
mov
int
add
pushf
xor
popf
push
xchg
mov
sub
aaa
cltd
sub
scas
sbb
scas
test
data16
pop
jno
ljmp
adc
mov
arpl
iret
add
sub
pop
icebp
dec
jbe
cmpsb
and
jne
dec
xchg
shll
sub
adc
insl
inc
adc
jno
in
popf
mov
mov
push
mov
rcrb
dec
movsl
sti
jo
jge
lock
sub
lret
cmp
loopne
inc
leave
aam
leave
fwait
call
or
pop
rol
xor
es
push
arpl
fisubs
sahf
scas
sti
loopne
or
push
lock
mov
hlt
xor
out
mov
cmp
ljmp
imul
cltd
xor
cld
gs
inc
insb
fmuls
inc
cld
pop
mov
push
and
jle
push
icebp
jne
xor
xchg
sbb
push
mov
outsb
call
cmpsl
sbb
fisttpl
xor
xchg
push
inc
add
test
or
pushf
inc
or
sub
addl
cmc
jns,pn
inc
mov
test
ss
and
jo
mov
incl
clc
fcompl
or
ret
aam
aam
test
jl
sahf
gs
or
stos
mov
xor
insw
mov
cmpsl
mov
cmpsl
in
or
dec
xchg
push
dec
pop
int
andb
xchg
mov
jge
inc
cmpsl
add
inc
movsl
mov
gs
int
js
andb
push
cld
xchg
std
sub
xorl
insb
xorb
movsl
add
jnp
fldenv
movsl
call
mov
push
jge
repnz
fwait
add
mov
test
xor
call
sbb
aaa
imul
sub
cmc
ss
inc
sbb
rclb
test
rorl
dec
mov
adc
jge
add
outsl
jmp
dec
enter
mov
xchg
xchg
push
sbb
je
jecxz
arpl
sbbb
fs
lods
xchg
sub
mov
mov
or
jae
push
mov
stc
cmp
cmpb
fisubrl
sbb
outsb
mov
mov
test
std
mov
sbb
xlat
add
push
test
pop
nop
inc
pusha
dec
and
ret
jle
mov
ficompl
mov
and
loop
xchg
sub
lahf
and
pusha
cli
repnz
push
daa
xor
ret
jle
inc
xchg
ret
aam
rorb
add
xchg
out
iret
rclb
push
xor
xor
in
mov
dec
xor
xchg
push
cwtl
cmc
mov
and
adc
lcall
mov
iret
xor
and
or
lcall
or
jno
sbb
fwait
imul
jne
fdivrs
test
in
xchg
jbe
pusha
and
cld
jmp
xor
mov
add
out
pop
xlat
mov
fildl
arpl
popa
sub
jo
jb
or
add
pop
cmc
dec
ja
leave
mov
cs
fpatan
icebp
and
sub
or
mov
cltd
lcall
flds
pop
dec
xorl
loop
stos
icebp
loopne
fucomi
jmp
in
push
xor
mov
inc
mov
dec
movswl
pop
add
pushf
ljmp
test
or
mov
fwait
mov
jbe
dec
and
push
call
iret
outsb
pop
pop
lock
cmp
test
aaa
scas
or
dec
pop
mov
stos
ficoms
push
mov
jmp
movsb
inc
and
cmp
rcll
xor
stc
cmp
lret
andl
test
pop
mov
xor
dec
jb
and
push
or
push
push
mov
addl
ja
fdivr
daa
push
cmc
orb
push
sub
out
pop
inc
sbb
in
test
or
imul
xor
shll
arpl
insb
add
aaa
mov
aaa
adc
add
push
cmp
dec
addr16
pop
xchg
inc
or
and
push
add
rcrl
push
loopne
lret
mov
iret
pop
int3
pop
adc
pop
inc
pop
xor
or
mov
inc
pop
inc
push
stos
call
roll
das
ficompl
pop
gs
jl
movsb
jge
mov
mov
cwtl
mov
push
mov
or
sbb
cmp
jle
mov
out
dec
pop
mov
mov
cs
add
loop
jb
sub
sub
jecxz
inc
mov
adc
and
orb
dec
push
fcmovb
mov
ficompl
mov
sbb
test
repz
sbb
jns
adc
xor
mov
add
jecxz
mov
pop
sub
cmc
repz
lds
add
js
gs
rcrb
mov
mov
lret
and
je
jno
and
ret
imul
insb
aaa
fimull
pop
fwait
adc
cmp
mov
mov
mov
cwtl
insl
cld
pop
and
cs
add
inc
adc
jecxz
dec
fcomip
mov
data16
mov
arpl
or
test
jmp
adc
popf
mov
aad
pusha
and
mov
outsb
sbb
insl
movsl
jno
cld
or
cmpsb
sub
xor
dec
lds
lret
test
inc
unpckhps
test
and
and
into
test
push
xor
cmp
mov
mov
jle
push
mov
xor
icebp
pop
mov
mov
cmc
push
in
in
stc
aaa
mov
lods
mov
aaa
mov
or
inc
loop
xor
insl
mov
or
push
cmpsl
dec
jbe
stc
add
push
es
mov
mov
test
insb
in
cmp
sahf
mov
push
sbb
sbb
or
je
nop
orl
and
pop
sbb
push
mov
leave
sti
dec
leave
xchg
mov
lods
loopne
sub
adc
push
jbe
popa
push
jno
dec
in
mov
sbb
stos
or
or
fs
mov
push
arpl
cmpsb
icebp
rcrl
movsb
adcb
add
rolb
and
das
add
inc
push
loopne
dec
in
gs
fistl
aad
add
popa
cmovo
pusha
dec
add
mov
je
stos
mov
test
in
add
sub
mov
sbb
add
cmpsl
js
das
cmpsl
bound
or
cwtl
mov
sbb
syscall
and
add
repnz
loopne
inc
mov
dec
push
mov
xor
sbb
mov
out
add
pop
leave
mov
cltd
ret
shl
insb
les
mov
js
push
imul
mov
loop
cmp
fldenv
jno
sahf
mov
test
dec
xchg
xchg
fldenv
or
aas
cli
mov
fisubl
jno
insl
mov
inc
xor
push
jp
and
aam
adc
outsb
pop
or
popf
and
in
xchg
xor
scas
or
mov
cwtl
aas
mov
jbe
hlt
popl
popf
inc
addr16
rclb
les
testb
mov
imul
xor
int3
jne
outsl
push
popa
push
je
int3
or
and
jge
cmc
push
pusha
add
nop
sub
jns
loop
je
in
std
mov
push
push
jae
inc
mov
mov
cmpsb
xchg
adc
int
adc
and
out
mov
jmp
cwtl
push
cli
push
bound
mov
orl
jecxz
aas
cli
test
add
pop
and
add
pop
repz
das
arpl
pusha
xor
xchg
xlat
and
inc
fwait
xchg
or
pop
xchg
lea
mov
jno
jae
dec
or
mov
cmp
shl
xor
sbb
add
std
mulb
je
dec
add
mov
xlat
test
roll
inc
inc
push
ja
dec
mov
and
jp
and
sub
jno
in
rolb
incl
lahf
sbb
add
sub
dec
stos
jp
dec
pop
bound
adc
pop
push
in
cmp
pusha
pop
inc
jge
inc
mov
mov
inc
push
ljmp
push
daa
xchg
je
jbe
xor
pop
fs
popf
jo
aaa
pop
test
add
lds
dec
or
sbb
addl
vpcmpgtd
sti
aad
out
cld
sbb
dec
inc
je
push
inc
bound
adc
out
jl
cs
sub
aas
mov
aaa
sbb
lea
jno
or
push
hlt
jecxz
stc
outsl
ja
push
dec
push
cmp
lret
cmp
test
dec
xor
xor
lret
mov
xchg
xor
mov
jle
aad
lods
push
inc
pop
mov
or
and
js
std
mov
out
push
dec
inc
fsubl
lcall
nop
pop
sub
jb
lret
mov
int
push
sub
adc
jbe
enter
sub
and
mov
cmpsl
fldt
subb
repz
sub
jp
stos
call
cmp
test
pop
jne
xchg
push
mov
cmp
sbb
cs
hlt
add
rorb
jne
inc
dec
jecxz
jnp
arpl
stos
sbbb
lcall
xlat
adc
in
imul
xchg
imul
dec
adc
pop
sbb
in
cmpsb
test
mov
jge
xchg
je
or
lds
add
push
mov
stos
add
xchg
push
pop
mov
shlb
adc
push
add
outsb
scas
mov
repz
cmp
xor
cmp
and
ret
jne
dec
mov
or
sub
mov
xor
cmc
stc
dec
leave
fwait
push
xchg
jns
sahf
sbb
mov
cltd
jo
mov
or
sbb
loope
add
xor
out
sahf
mov
ja
adc
jne
das
xlat
push
femms
and
xor
leave
sbb
mov
inc
arpl
push
iret
stc
addr16
xchg
or
or
mov
inc
dec
dec
push
negb
mov
dec
aaa
repnz
popf
push
jbe
push
or
imul
cmpsb
push
dec
pop
add
xor
pminub
jae
mov
loop
pusha
imul
mov
push
push
cmpsl
mov
push
mov
push
psubw
fs
insl
pop
xlat
or
arpl
psllw
addr16
mov
btc
fnstsw
shr
jb
cmpsl
fbstp
test
sbb
cli
pop
std
mov
cmp
std
fwait
dec
addr16
xchg
pop
aas
dec
nop
icebp
push
lea
mov
jbe
ss
or
mov
pushf
inc
stos
mov
loope
scas
cmpsl
jecxz
sti
into
rorb
xorl
lds
fucomi
adcb
cmpsb
in
scas
xlat
imul
dec
sti
xor
imul
mov
lock
mov
mov
or
leave
cmc
jecxz
aas
pusha
xorb
sub
mov
sahf
aam
add
shrb
inc
mov
cmpsb
add
mov
mov
jg
jne
inc
insl
movsl
push
movsb
call
movq
xorl
fcmovnb
xor
std
inc
outsl
cmpsl
mov
fists
mov
nop
nop
cmp
popf
out
ret
inc
mov
in
movsl
in
lret
sbb
adc
adcl
bound
pop
pop
xchg
jp,pn
xor
xchg
cld
stos
sub
mov
jb
fidivrs
push
xchg
addb
fistl
mov
rcrl
lock
sbb
sub
cmp
mov
xor
sbb
dec
out
dec
pop
mov
negb
add
daa
jle
sub
inc
add
mov
jne
push
or
jp
adc
imul
jns
cmpsb
lret
addr16
add
add
sbb
cmp
inc
push
or
push
or
mov
lock
fwait
std
sbbl
les
or
push
mov
mov
jmp
add
les
or
add
in
ss
inc
shll
test
jo
jb
jmp
sub
mov
cmpsl
add
jle
pusha
test
jne
dec
sub
lods
ds
cmp
pop
xor
jae
push
mov
push
xchg
dec
pusha
lods
clc
int
scas
es
push
shrb
loope
je
inc
aad
xor
call
test
in
fimuls
cld
movsl
jno
pusha
cs
pop
stc
jb
sub
bound
repnz
cmc
inc
mov
sub
cld
and
enter
arpl
ror
mov
insl
test
and
mov
aam
cmpsb
push
fidivs
scas
aas
sub
mov
lds
arpl
inc
jp
je
push
sti
les
outsb
jg
lretw
enter
cmpsb
push
lahf
dec
bound
aam
push
add
aas
sub
dec
imul
popa
scas
xlat
jae
xor
in
dec
and
cmpsb
xor
dec
dec
push
enter
push
jle
andl
inc
inc
sub
pusha
dec
inc
das
push
outsl
and
push
xlat
fst
push
cmp
insb
sub
or
mov
icebp
pop
or
or
jo
mov
xor
jns
ja
lds
push
cwtl
or
sub
push
jg
xchg
imul
fcom
push
out
mov
lock
inc
dec
lret
outsl
or
shlb
and
out
out
pop
cmp
sub
mov
pop
inc
cs
add
mov
std
push
ss
jns
imul
pushf
ret
inc
push
out
test
cs
mov
aam
xor
dec
data16
or
sarb
inc
inc
jbe
or
mov
fdivr
push
xchg
mov
dec
add
and
gs
imul
fimull
popa
inc
bnd
rcrb
ja
mov
fcomps
adc
mov
dec
push
pop
sub
pop
add
ja
cmc
leave
dec
add
fsubrl
cld
jns
cs
sbb
ficomps
loop
inc
pop
sub
imul
mov
pusha
push
das
out
cmpsl
add
faddl
and
and
outsb
out
push
fcoms
pop
mov
inc
add
mov
push
sti
stos
add
mov
loope
and
int3
int3
push
and
inc
cltd
sti
pop
out
adc
pop
stos
jnp
dec
mov
dec
push
sub
mov
test
dec
nop
aad
jmp
mov
push
subl
dec
cmp
movsb
cmc
push
push
clc
shll
shlb
data16
add
icebp
add
push
or
sub
test
dec
arpl
push
xchg
xor
adc
into
mov
sbb
test
clc
or
mov
mul
cmp
pop
adc
lock
xor
and
xchg
pop
cmp
movntq
inc
pushf
sbb
sub
add
cmpsb
pop
sbb
cmc
jne
cwtl
and
sub
dec
popa
insb
mov
pusha
cmp
add
push
jle
fcompl
and
add
mov
sub
cmp
cmp
sub
adc
out
mov
movsl
push
adc
das
out
push
dec
andl
cli
ds
fs
cmpsl
or
ret
fnstcw
addr16
xchg
inc
sahf
dec
dec
pop
adc
pop
mov
mov
push
cltd
or
fadds
push
xor
arpl
jg
cltd
je
inc
add
std
add
xchg
or
imul
aam
push
push
push
imul
sbb
sahf
jp
jo
and
xchg
adc
xchg
push
mov
ret
pop
hlt
sub
mov
iret
jno
xchg
xor
sti
pop
dec
mov
xchg
push
push
add
dec
xchg
bswap
lods
or
and
push
mov
fcomip
cmp
dec
les
jle
xacquire
clc
stc
dec
cmpsl
cmp
pop
jge
ja
insl
mov
cmpsw
ljmp
dec
jno
pop
mov
cmc
xor
mov
xchg
cmpsl
pop
imul
in
and
mov
lods
inc
pusha
iret
jl
imul
dec
xchg
std
fwait
xchg
sbb
mov
aam
fstpt
sub
fsubrs
call
cltd
outsl
jmp
sub
dec
sub
out
and
loope
sub
dec
in
shl
fiaddl
jns
mov
jns
lock
sbb
fidivl
cmp
adc
adc
jns
movsl
cmp
jp
jg
fistpll
ja
cmp
inc
mov
push
mov
xlat
or
int3
fimull
jg
out
jle
sub
dec
test
lods
and
inc
cmp
outsl
xchg
stos
and
cmpsl
test
jmp
mov
mov
call
pop
out
lods
mov
jecxz
lock
mov
cmpsb
mov
xor
leave
and
subb
and
ds
jbe
out
std
dec
dec
movb
sub
pop
mov
mov
push
dec
loope
mov
and
jne
nop
adc
jns
mov
in
push
addr16
push
cmpl
mov
addr16
sbb
mov
ret
mov
out
lods
cli
imul
dec
inc
gs
mov
jmp
hlt
test
cmc
in
push
pop
fwait
sbb
flds
cltd
inc
mov
test
rolb
push
movsl
pop
mov
mov
fxam
fs
mov
fiadds
add
shll
lret
xor
mov
out
push
cld
xchg
and
out
jbe
sub
test
cmpsb
popa
add
hlt
out
xchg
in
pop
cld
adcb
adc
inc
ss
mov
shr
xor
xchg
cmpl
cwtl
cmpsb
out
sbb
int
add
jae
adc
xor
sbb
mov
test
jecxz
jae
enter
jae
stos
cmp
movsb
in
cmp
fcmovb
ljmp
sarb
fistpl
add
xchg
popa
test
test
pop
fs
fs
das
pop
repz
and
and
pop
outsb
mov
xor
push
fildl
jns
es
adc
mov
aaa
rol
hlt
or
sub
cmp
sub
cmp
divl
or
adc
testb
cmp
cmc
ss
add
jne
std
sub
ss
and
push
sbb
call
repnz
shr
mov
loope
outsb
dec
cmpsb
dec
ret
fcomip
sub
mov
push
sub
mov
mov
xchg
mov
sbb
std
mov
sub
fistl
hlt
fdiv
out
cld
test
mov
es
xchg
xchg
jecxz
xchg
insb
outsl
cmpsb
icebp
jp
inc
jns
adcb
xor
jnp
mov
pop
sub
xor
and
fs
jnp
leave
mov
push
mov
pop
loopne
mov
add
xchg
push
in
lea
dec
in
hlt
inc
sbb
or
pusha
inc
lret
sub
sub
aam
jae
mov
mov
pop
enter
pusha
ret
mov
repnz
mov
jl
enter
xor
out
jle
mov
jg
fs
lcall
shrl
mov
in
jle
push
icebp
jns
jo
sbb
mov
imul
add
cmp
fldenv
fwait
dec
aad
inc
add
mov
cmp
sub
cli
mov
push
xchg
sbb
sub
mov
pop
mov
aas
int
mov
inc
sahf
mov
push
aam
mov
into
jle
dec
adc
cmpsl
push
mov
inc
pop
jp
xchg
mov
lret
fbld
in
dec
xor
cmp
sub
clc
cli
mov
pop
or
cwtl
xchg
orb
outsl
mov
movsl
dec
mov
or
pop
je
roll
lds
cmp
enter
mov
push
sub
add
and
pop
ss
leave
sbb
inc
mov
fisubl
testl
sbb
xchg
scas
pop
je
dec
jne
push
arpl
sahf
cmp
pop
push
push
push
mov
lcall
mov
loopne
pop
cmpsl
xlat
test
mov
test
pop
jne
mul
daa
pop
mov
jne
gs
cmpsb
pusha
ret
xchg
int3
pushf
jl
loope
xchg
cmc
sbb
loopne
and
cmpsb
dec
in
xchg
xchg
in
fdivrl
cmpsl
jbe
or
xchg
dec
jp
shl
repz
stos
add
rcl
pop
jge
dec
arpl
pop
xchg
addr16
or
out
mov
sbb
test
mov
aas
std
push
and
push
dec
std
int3
adcb
lock
and
cmp
pop
xor
mov
shl
sti
add
test
mov
movsl
push
push
push
pop
add
leave
stos
je
cmpsb
cld
sbb
ljmp
jb
inc
inc
filds
clc
jb
and
mov
icebp
inc
xchg
push
push
loop
shl
push
xchg
xor
mov
xchg
or
cmp
ss
lret
dec
ss
dec
jp
add
xor
aad
rdtsc
mov
mov
xchg
cld
sbb
sub
or
and
pop
jnp
or
popa
dec
stc
or
outsb
inc
push
jg
out
jmp
jge
in
js
icebp
mov
mov
lret
and
sbb
out
sbb
push
push
notb
imul
insb
rol
push
inc
push
int
outsb
sbb
push
adc
inc
stc
stc
icebp
sbb
dec
mov
mov
or
cmp
mov
inc
and
inc
cli
sahf
lcall
jo
ret
pop
inc
xor
mov
push
inc
popa
push
out
std
pop
push
jmp
pop
jmp
or
incb
mov
jb
out
ss
lcall
flds
scas
jne
cmp
pushf
inc
pop
xchg
sbb
pop
pop
inc
and
pushf
and
imulb
jne
inc
adcb
jecxz
dec
inc
fcomps
push
mov
mov
in
pop
ss
fs
sti
xorb
and
push
dec
xor
cmp
and
addr16
xor
inc
jns
cltd
push
inc
dec
cmp
data16
adc
or
inc
and
les
frstor
mov
sti
mov
push
xor
jb
je
fsubl
mov
bound
mov
inc
or
inc
xchg
dec
fsubl
cmp
jg
imul
pop
mov
xchg
mov
xorl
lods
cltd
repnz
push
inc
and
mov
aas
sbb
insl
or
and
mov
push
test
fcoml
jne
xlat
pop
popf
dec
aad
lock
jge
jae
mov
mov
dec
and
sbb
test
out
fsubrp
bound
add
int
cmp
or
aaa
movl
adc
xor
mov
leave
sarl
mov
mov
mov
jae
int
je
inc
icebp
outsl
jns
cmp
pushf
jbe
push
bound
push
sbb
mov
mov
jns
hlt
add
add
and
and
rcll
in
jno
inc
or
sbb
int3
jno
gs
bound
jge
pop
sbb
add
adc
es
les
js
lcall
push
lock
push
jo
aad
inc
js
pop
mov
or
lcall
in
mov
inc
test
inc
jb
addb
lock
or
out
jb
push
in
jae
outsl
loop
jp
mov
ljmp
mov
jae
imul
add
popf
push
mov
pop
pusha
out
fisttpl
into
lock
pop
fs
xchg
test
cltd
movsl
inc
xor
or
adc
or
xchg
jmp
lock
adcb
xchg
icebp
cltd
push
lcall
loope
dec
lock
or
xor
iret
and
xchg
js
sbb
and
imul
pop
pop
or
push
inc
bound
push
leave
mov
sbb
jge
cld
sbb
add
mov
push
sbb
jl
dec
xchg
test
fcoms
mov
mov
popf
cltd
ljmp
pop
jmp
inc
mov
sbb
fsts
pop
cmpsb
rcl
adc
out
movsb
andb
mov
dec
in
mov
out
stos
iret
add
jo
ljmp
scas
addr16
cmp
mov
jp
xor
mov
inc
or
cmpsl
sbb
lret
jg
adcl
push
sarl
mov
arpl
lods
cmp
ds
fidivs
lret
cmc
sub
cmc
out
gs
add
cltd
xlat
test
sub
stos
mov
or
insl
dec
int
std
dec
jbe
fsubrl
mov
inc
daa
mov
cmpsl
and
mov
lret
repz
push
js
test
xchg
cmp
imulb
jbe
movsb
inc
into
aad
imull
xorb
sbb
in
rolb
dec
scas
lret
movsl
lods
sarb
fisubs
lods
push
cmp
pop
adc
pop
iret
test
xorl
out
inc
insb
inc
jmp
mov
inc
ret
stc
xchg
pop
test
mov
mov
mov
ja
aam
sub
sub
stc
rorl
movsl
sub
xchg
lahf
enter
addr16
add
sub
mov
mov
int
pop
mov
cld
clc
addl
shl
in
aad
cli
jp
or
inc
lods
jmp
outsb
xlat
jbe
adc
jnp,pt
xor
add
adc
xchg
xor
add
rcl
or
outsb
in
jb
add
dec
add
cwtl
into
and
sub
pusha
shll
dec
test
leave
mov
dec
lea
jl
mov
mov
jnp,pt
push
shrb
cmp
sub
push
mov
push
and
movnti
dec
faddl
inc
loope
clc
dec
outsb
int3
sbb
outsl
push
test
dec
mov
iret
xlat
or
stc
movsl
dec
js
mov
push
in
insl
jbe
ficoml
shl
outsb
lock
push
push
ror
mov
sbb
repnz
rolb
negl
pop
mov
cmp
xchg
cmc
push
or
inc
pop
testb
push
sub
mov
cli
in
jb
in
jbe
mov
fcoml
adc
clc
std
in
and
sub
dec
rcrb
dec
and
inc
inc
mov
into
adc
and
cltd
stos
push
ljmp
fidivrl
out
and
cs
push
xchg
daa
dec
in
sub
dec
cld
pop
sbb
in
in
adc
inc
pop
mov
xchg
inc
test
stos
popa
jp
cmpb
fisttpll
inc
aas
pop
and
out
repz
mov
xor
ja
adc
xor
sbb
mov
add
pop
adc
icebp
sbb
adc
inc
sbb
mov
sub
sarb
jmp
jno
xchg
jo
andb
jo
cmc
cwtl
cmpsb
sub
rcr
mov
imul
xchg
inc
adc
push
in
imul
pop
fidivrs
fimuls
loopne
in
test
lcall
nop
incl
frstor
inc
es
dec
cmc
ror
ret
pop
pop
cmc
in
mov
in
sbb
jmp
sub
dec
add
imul
fstpl
hlt
pop
roll
push
arpl
jno
mov
pusha
shrl
xor
jnp
cmp
jp
test
push
jge
scas
test
mov
xor
jno
push
dec
clc
push
rcl
jb
xlat
cmc
dec
sub
push
int
push
addl
pop
aad
std
sahf
inc
push
dec
mov
imul
pop
ret
sbb
and
xor
adc
fldl
stc
push
sbb
fstpl
cmpsb
cmp
mov
jns
lock
in
mov
jg
ret
sarl
xchg
xchg
mov
dec
pusha
fisubl
lahf
adc
loopne
xchg
cmp
sub
pop
push
mov
test
jecxz
in
cmp
sbbb
lret
cmc
cmp
in
add
or
rolb
ret
lods
add
test
lahf
js
das
add
sbb
divb
sbb
add
jne
sahf
pop
xor
push
xor
out
fwait
pop
jmpw
jp
pop
mov
sbb
push
fwait
jne
sub
stos
add
pop
ret
inc
jb
mov
mov
in
shll
cmp
sbb
or
inc
sub
jmp
cmpsl
xor
mov
sub
repz
sub
mov
fsubrs
cltd
repnz
fiadds
jno
jmp
dec
dec
int
adc
jns
shrl
sub
ret
aam
mov
ret
inc
lahf
mov
adc
mov
int
call
insb
jns
cmp
cld
sahf
leave
stos
fwait
movl
sub
aaa
repz
dec
cltd
lcall
xchg
popf
loope
lock
sbb
test
push
mov
mov
mov
outsb
push
inc
push
jp
shrl
lret
loop
and
aad
sahf
jmp
xchg
jo
and
jg
pop
jmp
jbe
xchg
xchg
out
inc
inc
jbe
xchg
lock
and
fcmovnu
or
mov
mov
xor
ljmp
push
push
or
push
push
dec
mov
js
movsl
outsb
push
inc
stc
sub
mov
mov
cmpsb
push
popa
ja
or
mov
cltd
xchg
dec
or
cmpsl
fdivrs
adc
divb
inc
cmpsl
sub
dec
jmp
add
pop
mov
or
jae
push
jle
adc
add
pop
jg
jge
scas
add
scas
push
das
pop
or
adc
stc
xor
jae
data16
je
xchg
push
jnp
or
cltd
mov
and
pushf
gs
mov
mov
push
cmpsb
ds
ja
clc
jo
add
mov
dec
lea
insl
inc
test
xchg
outsl
out
fs
imul
inc
inc
push
js
cmp
push
mov
lock
lods
pusha
or
dec
stos
mov
popf
xor
xor
addr16
pop
lock
or
and
jns
sub
cmp
mov
cwtl
nop
dec
lods
lods
popa
les
fstpl
test
jg
dec
pop
sbb
lret
jne
xchg
push
outsl
push
ficompl
mov
test
mov
sarl
cmp
dec
push
and
push
pop
jl
les
cmc
add
xor
inc
xor
std
fcomp
cmp
jmp
push
mov
dec
mov
dec
stc
or
popa
adc
loope
jno
xchg
pop
lock
test
and
push
xchg
inc
xor
adc
adcb
sub
jno
outsb
jb
inc
dec
sbb
mov
jne
add
or
dec
shlb
rorl
ja
cltd
ds
clc
mov
mov
loop
cld
adc
jo
dec
cmp
das
out
dec
push
adc
into
sub
into
test
fisttpl
lea
enter
icebp
cli
and
movsb
sbb
jne
adc
cwtl
sbb
pusha
cmp
out
popf
jge
inc
mov
xchg
mov
inc
or
push
movsb
aaa
cmp
cltd
pop
icebp
jne
jae
jns
dec
sbb
repnz
imul
inc
push
cmp
shlb
xchg
test
insb
into
insb
fidivrl
cmp
add
sbb
pusha
fucomi
jle
iret
jp
adc
cmp
pop
jno
sarb
cmp
mov
and
add
fidivl
jb
andb
inc
adc
out
out
int
jae
push
lods
mov
fwait
add
and
cmp
clc
jbe
daa
add
stos
out
inc
sub
add
movb
lahf
inc
xor
stos
sbb
xchg
push
push
addr16
pop
xchg
dec
xchg
mov
pop
mov
mov
mov
and
aas
sti
push
and
loopne
add
push
daa
add
movsb
aad
and
mov
je
jp
cs
sub
movsl
outsb
in
inc
out
xor
orb
std
fildll
sbb
dec
imul
ret
mov
stos
or
arpl
das
mov
and
dec
in
xlat
jno
icebp
dec
sbb
pop
ja
inc
gs
leave
push
add
sub
dec
incb
lds
subb
fcmovbe
add
bound
jo
jbe
push
pop
or
lds
das
mov
dec
je
mov
and
cltd
fidivl
xor
incb
add
nop
jle
xor
jmp
sub
inc
push
push
mov
jbe
roll
sahf
and
dec
popa
addb
das
adc
insb
pop
je
cmpsb
popa
mov
js
popa
pushf
jge
into
sub
aad
aad
lock
lahf
mov
and
dec
mov
jmp
jmp
ret
sti
dec
lcall
das
sbb
inc
shrb
mov
sub
push
test
push
insl
div
xchg
jno
imul
mov
pop
sub
std
cmc
adc
mov
cmp
sub
push
ret
adc
or
test
pop
jae
stos
mov
push
fldt
mov
adc
mov
hlt
call
or
test
imul
mov
mov
xlat
ret
shlb
xor
dec
aam
mov
sbb
pop
xor
and
repnz
test
or
mov
ds
xchg
stos
outsb
xor
mov
pop
add
aas
push
xor
fyl2xp1
push
ja
bound
dec
push
stos
fs
xchg
icebp
and
push
popa
adcl
pop
repnz
fldenv
enter
ret
or
cltd
clc
dec
out
ljmp
xchg
adc
std
push
aas
xor
enter
adc
clc
insl
dec
cli
cld
bound
dec
lock
mov
adc
jg
loop
arpl
mov
dec
cltd
lds
cwtl
adc
dec
mov
fmuls
mov
inc
jo
stos
mov
add
clc
sub
mov
cmpsl
rcll
mov
std
stos
mov
aad
fs
pushf
sar
sub
rcl
mov
or
or
cltd
cmc
pop
mov
bswap
dec
insb
sarb
jl
rcll
jns
cmpsb
fcomip
mov
fistl
sbb
pop
add
lsl
leave
popf
jle
aad
lcall
aam
stos
sbb
aad
inc
sahf
daa
les
shll
cmpsl
test
xchg
adc
mov
dec
sbb
sbb
lret
xchg
mov
mov
fidivrs
add
push
cmp
fwait
jbe
mov
xor
push
aad
out
test
cmc
and
lds
mov
xchg
mov
outsl
or
scas
jnp
call
push
fs
jb
lds
jno
subb
inc
fs
push
mov
or
mov
and
jno
out
and
push
not
push
xor
mov
lcall
cwtl
add
inc
dec
js
xchg
daa
sub
xor
jle
or
gs
xor
out
pop
nop
lahf
stos
cmpsl
mov
jns
fucomip
cwtl
jmp
fs
mov
jae
mov
sti
jg
leave
in
fdivrs
sahf
js
inc
cltd
jg
add
cltd
ss
lret
jp
xor
or
add
insb
out
fucompp
in
or
enter
outsl
sub
push
and
cmp
mov
clc
push
insb
js
lahf
in
jp
jp
jg
divb
in
mov
jmp
push
ljmp
imul
std
enter
sbb
mov
ja
stos
mov
inc
dec
sbb
adc
decl
ds
mov
mov
dec
stos
stc
xchg
pop
out
jl
pop
movsb
cmp
pop
push
sbb
es
push
mov
mov
sti
pop
pop
jg
mov
mov
or
mov
inc
jmp
jo
into
daa
push
xchg
das
sbb
and
cmpsb
jnp
cmpsb
rolb
dec
inc
add
xchg
ficoml
pop
and
jle
gs
xchg
std
in
test
clc
jmp
dec
out
mov
and
mov
or
xchg
fwait
enter
repz
cld
mov
sbb
out
and
mov
cmp
test
stos
test
cltd
int3
xchg
xor
pop
aas
jae
sub
cmp
insb
out
dec
pop
cmp
pusha
cltd
push
push
xchg
fsubp
mov
cmp
mov
hlt
iret
dec
leave
jmp
int3
sbb
xchg
sbbl
out
sbb
call
dec
add
hlt
roll
int3
pop
mov
aad
rorl
mov
xchg
mov
push
inc
sar
sbb
cmp
mov
arpl
jo
data16
mov
dec
mov
dec
and
testb
jmp
xchg
jle
pusha
jl
jo
mov
ss
push
sub
jo
mov
into
add
xlat
popf
imul
sti
dec
pushf
xor
mov
enter
mov
xchg
repnz
xor
add
xor
pop
ret
sbb
dec
ret
inc
outsl
xor
sbb
idiv
xchg
stc
adc
or
sub
xchg
cltd
lret
mov
cli
sbb
inc
bound
or
jp
js
xchg
jl
mov
mov
test
add
or
xor
into
les
test
test
sub
pop
inc
sbb
xor
int3
das
or
gs
pop
and
lea
pusha
aas
mov
push
sbb
cwtl
xor
dec
es
add
rcrb
xor
push
lahf
mov
shrb
iret
cmp
adc
fisttpl
gs
lahf
stos
movsb
mov
cld
sbb
lret
add
sbb
loope
out
add
mov
cmc
imul
jbe
jns
adc
inc
ret
mov
pop
out
rorl
popa
andl
inc
push
out
pop
mov
mov
inc
das
lcall
and
pushf
sub
jge
popf
lret
fidivrl
push
fcmovb
jnp
jae
fidivl
insb
inc
imul
movsl
cmc
push
add
mov
dec
mov
ds
push
pop
lods
int
lcall
outsb
rorl
add
data16
lret
mov
push
les
jno
lret
enter
addb
inc
dec
stos
in
jle
pop
cmc
add
mov
stos
cmp
scas
je
out
mov
push
dec
les
loop
push
sub
sub
adc
rcpps
jbe
dec
leave
insl
mov
mov
cld
aam
cmpsb
repnz
mov
push
and
pop
jo
fidivrl
push
xchg
pushf
enter
sbb
and
xor
das
lds
inc
jae
fidivrs
jle
sarl
jb
pop
adcb
std
shl
adc
cwtl
cmc
out
stc
and
orb
fs
jg
mov
pop
aam
xchg
or
and
shl
sbb
lahf
scas
into
cmp
cmp
mov
xor
or
inc
call
mov
out
sbb
in
inc
cltd
mov
leave
fildll
fdivrl
mov
or
mov
dec
mov
lret
xor
movl
or
pop
xorb
rcr
das
or
push
cwtl
push
dec
int
pusha
iret
ret
out
cli
pop
dec
cmp
aad
push
push
push
cmp
addr16
sbb
mov
mov
outsl
xchg
cmpsb
add
xchg
inc
lahf
aad
inc
fists
lods
xchg
fwait
adc
aad
pushf
das
int3
popa
cwtl
in
loopne
sbb
sub
stc
push
sub
jmp
cmp
fldenv
std
cmp
aaa
xchg
das
cmp
jg
push
push
shll
movsl
inc
mov
icebp
and
cmp
pop
sub
and
jno
mov
push
jg
mov
push
orb
xor
inc
cmp
mov
out
lods
hlt
or
mov
pop
or
fwait
mov
mov
cmc
or
movsl
hlt
jle
subl
fnsave
stos
mov
dec
inc
icebp
outsb
aam
jle
pop
jnp
pop
into
adc
or
push
hlt
or
pop
inc
mov
ljmp
scas
mov
push
xchg
jno
addr16
aaa
jle
mov
lret
sbb
inc
and
lahf
je
mov
ret
add
ret
push
mov
sar
icebp
xor
sbb
movsl
dec
push
dec
jbe
pop
cmpsl
test
shlb
cmpsb
lods
jmp
scas
xor
add
shll
xchg
dec
int3
daa
mov
and
sub
pop
test
mov
pop
imul
shrb
imul
mov
sub
lcall
lss
rolb
aaa
in
gs
mov
ret
test
sti
jo
push
lock
mov
xlat
fmuls
cmp
push
into
int
sub
sub
pop
into
ror
cmp
pop
inc
cmp
mov
shrb
lea
xchg
out
push
and
inc
or
jne
mov
lret
lret
imull
xchg
std
rolb
movsb
jle
into
lret
xor
adc
xor
adc
aaa
adc
or
mulb
mov
and
push
std
mov
xor
gs
ss
popf
pop
mov
xchg
mov
push
dec
adc
mov
mov
sbb
es
sbb
popa
insb
mov
or
scas
test
mov
mov
push
inc
xchg
mov
xchg
es
jno
mov
lret
shrl
sti
jns
test
or
std
mov
out
outsl
sti
sub
scas
xchg
dec
into
mov
les
lods
flds
mov
mov
push
mov
push
loop
sub
dec
sub
std
dec
dec
or
lea
fwait
pop
stos
nop
outsb
and
mov
mov
out
enter
loop
xor
pop
sub
ljmp
and
outsl
mov
sub
push
stos
pushf
push
fs
int
push
inc
sub
fadd
in
cmp
cmp
bound
mov
sbb
jo
jmp
movsb
fs
dec
dec
rolb
insl
sbb
dec
adc
jno
pop
dec
mov
lds
std
std
repnz
clc
repnz
dec
lret
xchg
adc
mov
rorl
lret
and
scas
cs
jae
and
or
popa
jno
loop
movsb
outsb
cld
cmc
dec
xchg
mov
push
into
ficoms
sub
mov
fs
xchg
dec
mov
sub
dec
rolb
or
gs
xchg
mov
dec
es
ret
jo
mov
or
test
or
fcoml
shr
jg
stos
insl
jbe
imul
or
lds
dec
mov
mov
sbb
rol
outsl
and
sahf
inc
cmpsl
xchg
test
out
test
add
mov
es
fldl2e
push
enter
prefetch
xor
jmp
nop
xchg
jmp
in
mov
aas
dec
std
shrl
xchg
std
sub
and
sub
pushf
dec
cld
mov
and
ud2
iret
sbbl
jae
mov
inc
mov
mov
mov
mov
dec
xchg
and
mov
jmp
test
xchg
popf
aad
test
lods
add
int3
shlb
dec
sbb
mov
and
xchg
add
push
insb
pop
ds
test
inc
imul
jo
pop
sbb
stos
push
adc
in
stos
xlat
ficoms
fs
into
stc
sbb
or
scas
std
and
imul
and
adc
dec
sti
dec
dec
aad
sub
add
test
sarl
cmp
sub
or
out
mov
and
fsubs
orl
int
cmc
add
jle
pop
test
cmp
mov
ja
outsl
clc
xchg
mov
imul
fstps
fistps
int
test
shrb
stc
fsubrl
push
bound
push
cmpsb
xchg
pop
fnstcw
jp
sbb
fnstcw
std
les
push
jecxz
pop
pop
jo
cmpsb
int3
cmc
and
arpl
imul
mov
mov
jae
dec
loope
rclb
dec
mov
andb
imul
loopne
sbb
imul
arpl
lcall
outsb
fildl
bnd
inc
push
insl
clc
mov
xchg
pop
jae
adc
inc
dec
lock
mov
aas
aam
gs
cmp
popf
add
mov
mov
xor
iret
mov
adc
fidivrl
les
out
pcmpeqb
inc
lds
push
in
and
dec
jb
xchg
dec
cmp
je
sarb
call
notb
sahf
loope
bound
enter
jge
test
pop
jno
jno
jecxz
xor
cmp
pushf
cmp
add
gs
or
push
addr16
xchg
insl
leave
or
jne
xchg
mov
jp
xor
jecxz
push
ret
or
mov
into
inc
scas
push
lcall
mov
stos
xor
pop
aaa
mov
fildll
leave
and
out
push
pop
mov
inc
dec
and
ja
in
sub
pop
scas
inc
dec
and
ja
sub
cvtps2pd
push
dec
mov
ficoms
mov
push
out
dec
add
add
push
mov
shl
andb
sub
pop
imul
and
in
rolb
movsb
push
int3
cmpsb
js
pop
in
aas
insb
inc
or
push
jnp
dec
rclb
xchg
add
rcrl
adc
mov
pop
out
ja
dec
xor
cmpsb
jne
addr16
mov
cmp
sub
add
dec
jp
mov
adc
cmpsb
xchg
bound
jecxz
pop
jcxz
mov
cmp
imul
sub
xchg
and
loopne
add
outsb
stos
cwtl
ja
or
lret
inc
add
rcr
aas
xchg
jmp
test
dec
out
mov
cli
in
xchg
sbb
inc
sbb
stos
iret
aam
inc
jge
pop
pop
ret
or
sub
pop
sbb
cmc
iret
dec
inc
mov
jo
pushf
ffreep
imul
and
and
repnz
pop
mov
dec
mov
and
cmc
dec
mov
jl
dec
fnstsw
push
sbb
jae
push
push
pop
inc
cmp
fldenv
je
sti
mov
popa
or
adc
xchg
inc
add
aad
ja
cmp
insb
dec
mov
and
insb
lret
mov
test
mov
mov
cmp
pop
or
clc
iret
in
insb
mov
add
pop
clc
inc
ss
sub
cmp
jmp
mov
insb
and
addr16
outsl
dec
stc
jno
sbb
call
mov
fldl
mov
test
out
lods
test
popa
mov
pop
cli
cmp
sbb
insb
dec
sub
jno
jp
mov
sti
test
jns
adcl
lahf
int
fisttps
dec
ja
xor
push
cltd
in
js
mov
das
pop
rorl
dec
lock
lret
pop
jbe
lock
push
cli
dec
pop
ljmp
insb
mov
jo
rcrl
xor
std
pushf
xchg
cmpsb
test
fistl
pop
mov
add
fmul
mov
rcrl
jle
dec
push
mov
push
jb
xchg
add
fwait
sub
xchg
fnstcw
movsl
sub
popf
cmpsl
pushf
imul
xchg
push
std
iret
push
pop
pushf
in
lods
fimuls
push
jb
sbb
jle
popf
sbb
aas
enter
dec
jecxz
stc
push
cmp
out
jno
in
mov
outsb
outsl
mov
dec
jg
cmp
push
in
add
mov
pop
and
ja
insl
sub
mov
pushf
repz
nop
jle
jbe
aad
xchg
cmp
cli
mov
pop
cmc
popf
out
hlt
icebp
popf
pop
mov
mov
out
jmp
dec
mov
insb
into
inc
shlb
orb
xlat
int
cmp
ret
adc
shlb
int
cli
into
xor
mov
adc
adc
je
jmp
into
jg
stos
sbb
fadds
add
out
data16
xor
mov
gs
sub
sahf
ud2
sub
adc
sbb
and
lret
mov
sahf
insb
rolb
sti
lcall
fwait
adc
ljmp
mov
add
add
or
icebp
fcompl
pushf
loop
pusha
jns
mov
cli
bound
int
outsl
stos
jge,pn
movsl
fnsave
dec
orb
mov
lcall
push
ljmp
mov
ds
or
addb
push
dec
sti
xchg
dec
push
push
push
or
mov
and
mov
xor
std
or
gs
and
and
pushf
xchg
rorb
xchg
or
mov
stos
xor
movups
stc
and
ja
pop
sbb
ljmp
jbe
jnp
adc
imul
add
sbb
inc
ja
pop
and
xchg
mov
or
ret
stos
hlt
or
cmp
sub
and
sub
pop
mov
pop
push
push
arpl
jo
aad
and
push
pop
push
or
inc
jp
lock
repz
ret
push
mov
fsubl
adc
cltd
imul
lock
cltd
ret
sub
sub
dec
xchg
pop
int
enter
adc
lods
pusha
in
jns
adc
push
cmp
fcompl
shrb
imul
lea
jnp
insl
sbb
call
mov
sahf
imulb
cmp
adc
adc
adc
xor
je
dec
cltd
inc
shll
sbb
inc
mov
xchg
dec
xor
xchg
stc
dec
mov
push
add
outsb
jge
cmp
imul
xchg
lods
xor
call
jl
xchg
in
scas
lods
and
push
lcall
dec
mov
sbb
repz
xchg
or
fdivrl
loop
add
in
sub
adc
jg
push
xchg
xchg
loope
loopne
arpl
cmp
ljmp
jmp
cltd
ss
xor
aad
inc
rcrb
test
sbb
aad
cltd
cmp
mov
dec
mov
adc
push
loop
jg
and
sbbb
add
xchg
and
add
testb
into
clc
enter
call
push
insb
or
iret
ret
mov
in
jge
clc
sbb
add
in
ljmp
dec
sbbb
pop
push
fcompl
loopne
pusha
push
push
inc
outsb
adc
xchg
cmp
inc
dec
cltd
outsb
shr
test
cmpsb
ret
jecxz
lahf
adc
lods
jle
sbb
pop
and
test
xchg
cwtl
mov
and
sbb
in
sub
xchg
pop
cmp
sub
add
mov
popf
sub
mov
xchg
mov
mov
sub
mov
push
add
nop
add
add
cmp
or
loopne
inc
aad
mov
add
push
ret
fwait
and
inc
lret
sub
jmp
cwtl
jo
mov
pop
lahf
mov
mov
fildll
imul
fcom
aaa
push
mov
dec
dec
jne
inc
mov
cmp
and
fists
xchg
cs
in
jnp
outsl
roll
popa
mov
in
inc
xchg
nop
dec
nop
fstps
ret
sbb
xor
dec
fmuls
popa
shl
xor
gs
orl
hlt
push
xchg
imul
jnp
sbb
xor
pop
js
inc
stos
adc
lods
dec
outsl
es
cwtl
inc
cmpsb
lds
inc
sub
ficoml
cmc
hlt
scas
push
inc
cmpb
dec
and
orl
xchg
das
jb
loopne
adc
cmp
sbb
stos
dec
decb
inc
mov
je
mov
push
adc
xchg
jns
jecxz
jl
mov
jno
mov
nop
add
pop
mov
packsswb
jno
int3
popa
cli
scas
cmc
pop
or
mov
jmp
leave
mov
daa
mov
outsl
mov
loope
fists
test
mov
mov
xchg
mov
xor
lods
add
xor
and
cmp
cmc
das
sub
test
xchg
sbb
pop
pop
or
inc
xchg
sub
sbb
xor
add
dec
pop
test
loope
push
pop
sarl
in
and
repnz
orb
cltd
sahf
push
out
repnz
int3
and
scas
push
push
fidivs
and
pop
sbb
xchg
mov
jecxz
fwait
lcall
xchg
ret
shll
mov
sbb
pop
xchg
inc
insl
pop
sbb
mov
inc
xor
xchg
sub
jl
pop
push
and
cs
mov
fsts
faddp
xor
mov
inc
jnp
movsl
mov
xchg
xor
pop
jno
inc
es
sub
cmpsb
sbb
fwait
and
add
inc
jp
cmpsb
frstor
mov
jl
insb
push
inc
rol
mov
and
ficoml
pop
mov
out
add
xor
in
outsl
divl
sbb
insb
pop
mov
jmp
in
sbb
mov
mov
fcompl
testl
jmp
pop
mov
mov
loope
cwtl
add
pop
dec
inc
ret
mov
scas
daa
out
pop
xor
icebp
dec
jg
ds
out
xor
dec
movsb
fistpl
int3
pusha
push
push
mov
das
mov
nop
int
mov
pop
or
pop
arpl
add
ds
stos
lods
add
dec
test
mov
mov
insb
addr16
lret
sub
sub
pop
nop
mov
mov
cld
repnz
fptan
mov
lahf
mov
ja
or
sti
jno
pop
cmp
mov
jp
or
outsl
pop
mov
mov
pop
daa
loopne
adc
test
in
push
add
stos
xchg
into
in
add
fmul
adc
ds
jmp
rcrb
cmp
inc
xor
aaa
je
add
mov
lock
mov
lahf
sub
mov
sub
jge
add
push
inc
push
lahf
adc
xchg
or
in
sbb
xor
pop
out
sbb
pop
add
imul
cmp
pushl
jne
adc
loope
push
out
loopne
lods
popf
or
lret
aaa
mov
ja
dec
lods
incl
mov
push
cmp
xor
inc
inc
xor
mov
test
mov
pop
lods
pop
inc
mov
in
icebp
insb
inc
shll
into
xchg
test
bound
jno
orl
jecxz
std
inc
sbb
pop
imul
stc
dec
les
xor
jae
and
mov
pushf
pop
dec
mov
jecxz
insb
gs
inc
and
jmp
dec
or
adc
test
fwait
je
mov
inc
pusha
cmpsl
sbb
in
mov
in
sbb
loop
stos
repnz
pop
push
cmp
test
fcoml
or
cmc
imulb
arpl
mov
ljmp
pop
pop
xchg
addr16
mov
mov
popf
in
loopne
es
aas
adc
ret
sar
hlt
and
sub
das
mov
imul
jp
flds
je
cmp
xchg
fdivrs
std
scas
cmp
jg
insl
mov
push
or
icebp
inc
mov
out
fsub
addr16
inc
or
inc
and
xchg
fbstp
call
push
daa
xor
fidivl
aad
clc
push
jge
adc
push
std
movsb
add
mov
int3
inc
add
and
inc
scas
jno
repnz
jmp
stc
in
ljmp
fucom
cltd
nop
fisttpll
mov
pop
aad
ljmp
xchg
lods
push
stos
xor
sahf
or
mov
std
xchg
xchg
aad
jge
inc
fdivs
add
cmc
pop
push
orl
popa
jbe
scas
sub
imul
mov
dec
std
xor
fidivrl
mov
aad
add
icebp
adc
pop
lcall
lret
aam
lods
cmpsb
cmp
outsl
mov
je
aaa
pop
addr16
and
adc
pusha
and
imull
push
lret
pushf
push
mov
paddw
icebp
lret
insb
jmp
push
push
push
sub
mov
sub
aam
xor
loopne
jbe
push
mov
stos
xchg
cmp
push
jge
or
jecxz
rcrl
movsb
dec
xchg
xchg
nop
and
mov
inc
lret
sahf
outsl
sub
testl
sbb
js
bnd
lahf
hlt
xor
push
jnp
repz
mov
pop
xchg
mov
mov
pop
dec
cwtl
jl
or
loop
sbb
mov
jle
data16
roll
adc
jp
cmp
aam
jg
sub
fwait
out
add
dec
in
cmp
pop
mov
adc
mov
out
cltd
adc
cmc
dec
movsl
scas
popa
fildll
fs
out
lahf
cmp
pusha
pop
cbtw
pop
sahf
cmp
jo
stc
cs
aam
jno
xchg
rorb
arpl
mov
mov
xor
xor
inc
pushf
test
mov
push
jb
jne
xlat
xchg
cmpb
lahf
leave
mov
loope
pop
popf
or
cmpsb
mov
dec
push
insl
cld
push
std
lea
shl
cld
out
das
push
adc
mov
sub
testb
scas
jb
jecxz
aad
and
call
push
and
fistpll
jmp
je
clc
aas
in
bnd
inc
in
dec
and
pop
sub
push
movsb
fwait
loopne
mov
jno
sarl
inc
imul
iret
jbe
je
das
leave
in
cmp
mov
addr16
xor
dec
add
push
jbe
cmpsl
loop
jle
xor
jl
test
xor
divl
cmpsl
inc
mov
mov
jp
dec
ror
sbb
xlat
adc
sar
clc
lret
pop
shlb
sub
inc
push
push
dec
xchg
mov
ds
icebp
lods
inc
sub
push
jmp
pop
add
sbb
cmove
cld
sub
dec
sbb
jo
jecxz
mov
push
fs
lods
sub
pusha
dec
inc
pop
mov
push
out
adc
dec
xchg
sbb
aam
cmpsb
stos
pop
push
xchg
mov
cmp
data16
cmpsl
adcl
mov
cmpsb
int3
dec
movsb
xor
xor
loop
add
cltd
xchg
sub
mov
mov
sahf
hlt
push
jle
jb
hlt
push
add
sbb
mov
mov
out
jbe
push
jge
dec
inc
xor
or
or
movsb
and
pushf
stos
xor
inc
mov
pop
imul
mov
mov
mov
sahf
lock
movsl
sub
imul
pop
out
jo
ljmp
bound
icebp
out
sahf
add
xor
test
cmc
cmpsl
ret
repz
orb
testl
cld
sbb
insb
call
addb
jecxz
add
push
push
das
mov
iret
shll
in
push
popa
sub
cmp
gs
adc
in
xchg
popf
xor
dec
stc
scas
pushl
push
js
mov
mov
sub
jl
push
and
push
lods
cmc
jle
mov
fildl
faddl
jbe
enter
mov
and
jge
in
call
cmp
call
inc
mov
push
jne
push
call
gs
nop
ljmp
movsl
jmp
dec
dec
sbbl
jb
mov
imulb
testl
pusha
ret
mov
sub
or
jecxz
jnp
sub
pop
mov
or
leave
repnz
jmp
stos
mov
das
push
mulb
lds
int3
xor
xor
rcrl
inc
xchg
xor
xor
adc
cmpsb
leave
je
hlt
mov
push
jl
mov
cmp
adc
push
sbb
inc
mov
lret
mov
arpl
cli
repnz
xchg
fnsave
push
push
ljmp
xor
lods
push
push
and
jg
dec
push
sbb
das
mov
or
insb
call
scas
jle
cmp
lahf
mov
or
inc
lock
xor
mov
repnz
hlt
xor
stos
dec
lret
fldcw
dec
shll
xchg
pop
imul
mov
outsb
mov
jle
outsb
mov
pop
push
shl
add
std
lods
lods
je
outsb
or
xchg
ret
inc
jbe
into
and
mov
xchg
pusha
push
iret
or
adc
or
jge
fiadds
rep
cld
or
test
cwtl
sub
repz
xor
push
mov
lcall
dec
jge
add
dec
cmp
call
pop
xlat
mov
push
add
lahf
mov
xchg
and
jnp
and
or
and
addb
enter
sbb
xor
adc
mov
nop
into
inc
jae
scas
scas
ljmp
push
lret
mov
push
mov
lods
sbb
adc
jae
and
out
pop
add
pop
mov
repnz
adc
in
dec
lds
push
mov
xor
int
in
in
shr
dec
in
jbe
fdivl
ret
outsb
inc
inc
inc
cmp
inc
mov
and
or
repnz
repnz
lods
lea
inc
into
fists
inc
int3
inc
sbb
fistl
sbb
sbb
leave
cmp
in
inc
hlt
std
inc
or
cmpsb
loope
dec
jns
or
push
jp
cli
cmpb
nop
inc
sbb
int3
push
aad
shlb
xchg
lods
dec
sti
test
adc
adc
add
jmp
xor
and
int3
fstpl
mov
movsb
jo
cmpsb
iret
cltd
and
and
xchg
stos
popf
call
fisubrl
scas
stos
push
jg
sbb
idivl
dec
ds
outsl
mov
int3
xorl
fsubrs
mov
sti
sbb
rol
in
and
movsb
fimuls
mov
testl
pop
inc
push
xor
ret
inc
xor
inc
pop
or
cmp
shll
pmulhuw
cwtl
sub
shlb
sub
mov
scas
ljmp
inc
rcl
loope
rcrl
fcoms
sub
test
push
jae
sub
nop
and
fucomip
xchg
inc
stos
cld
clc
stc
ficoms
mov
je
fnstcw
add
shlb
sarl
inc
gs
in
mov
cs
lret
mov
jg
sub
add
push
mov
sub
lcall
loop
mov
imul
dec
jno
sbb
ret
dec
dec
jno
dec
rcll
setnp
test
in
mov
jnp
adc
ret
dec
pop
js
xchg
jp
xchg
in
mov
mov
lcall
sub
call
loope
jp
dec
out
add
stc
arpl
jge
xor
out
stos
add
push
add
mov
dec
and
fdivrl
mov
movsl
out
inc
push
or
mov
leave
mov
inc
out
icebp
push
push
xorl
adc
lea
popf
xor
push
ds
int
pop
inc
divb
sbb
mov
inc
lret
shr
or
add
jno
jno
pop
in
or
xor
in
mov
imul
push
jge
inc
popa
or
sub
sub
fucomp
jp
xchg
sahf
pop
and
orl
mov
das
iret
jnp
adc
sahf
cmc
dec
pop
push
add
cmp
xor
insl
jp
ffree
dec
aam
jb
inc
decl
divb
cmc
or
xor
je
pop
push
test
pop
jbe
aad
cmp
test
or
arpl
std
jae
push
sbb
xor
shrb
sbb
adc
data16
lock
jl
in
push
jbe
hlt
out
jno
pop
add
or
rcr
mov
jo
inc
and
pop
cmpsl
fdivl
xlat
es
pop
es
pop
adc
rol
lret
xchg
or
or
inc
mov
mov
les
cmp
mov
lcall
popf
xor
repnz
fisubrl
xchg
pop
inc
arpl
insl
sbb
fcmovnbe
les
int
jns
adc
sbb
push
adc
iret
push
add
adc
test
ljmp
ret
inc
insl
jbe
push
mov
shll
mov
pop
enter
add
xor
imul
cltd
pop
cmp
inc
and
dec
xchg
add
xchg
je
jne
ret
jbe
rorb
xor
dec
lods
dec
xchg
sahf
cmp
lods
dec
push
dec
add
sub
cli
jno
cs
sbb
sub
subb
dec
jne
cmp
xor
cltd
pop
test
cltd
in
mov
jo
shrb
popa
scas
data16
sub
and
jbe
enter
or
jae
xchg
aad
outsb
imul
sti
dec
bound
lock
xchg
mov
pop
lea
jne
push
and
hlt
mov
and
shlb
push
mov
addr16
mov
fsub
mov
pop
and
ret
sub
dec
mov
inc
out
rorb
nop
fnstenv
insl
mov
aad
xchg
int3
loopne
mov
sbb
push
xor
adc
out
subb
js
inc
lret
outsb
popa
xlat
lret
sbb
xchg
shl
inc
xchg
ljmp
stc
in
fiadds
sub
lea
adc
cmp
cld
push
dec
adc
fs
xor
push
mov
adc
stos
push
popa
mov
jg
and
or
in
popf
inc
clc
pop
sbb
mov
jbe
push
dec
and
imul
dec
jp
xchg
xchg
mov
imul
dec
cmp
dec
mov
jp
inc
repnz
ret
jp
insb
dec
hlt
jecxz
ja
jmp
cmp
push
or
leave
jmp
xor
outsb
ret
mov
jno
fiaddl
xor
and
movsl
fdivrs
sysexit
sahf
inc
out
jp
pushf
popf
jle
sub
pop
mov
sbb
int
sbb
dec
dec
aam
es
jno
mov
mov
inc
inc
es
add
mov
fmulp
rclb
cli
jmp
cmp
out
add
push
push
inc
mov
or
mov
and
xchg
mov
mov
xchg
movsl
xchg
pop
leave
add
imul
push
lods
outsl
jge
inc
sub
sti
test
add
cmpsl
xor
lahf
adc
test
pop
push
sbb
movl
inc
aaa
jb
mov
push
js
xchg
nop
fidivs
adc
cmpsl
mov
sbb
ficoms
mov
sbb
dec
negl
mov
clc
jl
and
push
xor
int
xchg
xor
jo
fwait
imul
int
ja
repz
fmull
jbe
adc
sbb
xor
sub
enter
and
xchg
out
dec
pop
xchg
sbb
arpl
sbb
sub
mov
mov
jmp
aas
pop
or
insl
out
pop
js
inc
mov
test
ds
inc
lcall
sub
mov
ljmp
mov
clc
fwait
imul
fldenv
xchg
jecxz
mov
jecxz
cld
xchg
inc
in
jmp
add
mov
shl
xchg
gs
xchg
aaa
popf
mov
outsl
roll
repz
jge
ret
arpl
scas
mov
pop
adc
pusha
jne
testb
dec
jne
mov
movb
arpl
pop
int
add
pushf
fwait
gs
mov
adc
shll
mov
cmc
xor
stc
mov
or
and
pop
loop
test
lea
test
push
sbb
sub
sub
test
inc
add
xchg
inc
jp
mov
add
cli
pop
icebp
pop
xor
cmp
lock
stc
mov
jno
movsl
mov
fstl
decb
fs
jg
int3
mov
js
es
push
ja
in
mov
nop
jge
push
test
mov
fldl
mov
push
out
ret
mov
loop
clc
scas
fistpll
into
shl
test
add
jmp
les
pop
mov
aas
dec
adc
jbe
lret
mov
mov
push
test
sbb
xchg
insl
lods
adc
lret
aas
out
sub
stos
or
insb
or
scas
jns
pop
dec
xor
stc
movsb
sbb
sbb
dec
push
ficoms
cli
inc
jge
jecxz
xchg
and
lret
pop
dec
loope
adc
test
xchg
or
fmulp
xor
ffree
jg
insl
and
lock
inc
sbb
ljmp
jb
stos
sarb
jno
je
es
cmp
popf
aaa
inc
dec
or
out
insb
ret
aad
std
sbb
jg
push
push
call
xchg
into
int
jb
in
pop
cmp
icebp
addb
mov
cmp
hlt
std
or
add
lock
jge
mov
mov
mov
and
or
xchg
jbe
xor
add
mov
dec
xor
jne
inc
aaa
testb
sbb
sti
jg
mov
jg
shrb
or
mov
out
adc
dec
jle
mov
dec
fistpll
cmp
push
fstl
jmp
xchg
xchg
fists
push
test
dec
fcompl
sub
push
and
push
cmp
adc
push
addr16
adcb
and
add
sub
add
xor
xchg
mov
cs
stos
in
adc
cmpsl
dec
dec
or
leave
and
xor
aas
cmpsl
fiadds
pop
inc
xlat
adc
mov
stos
pop
popl
leave
add
adc
cmpsb
and
por
xchg
clc
mov
sub
inc
fsubrs
xor
leave
gs
sub
jae
mov
daa
faddl
adc
rcrb
xchg
add
xor
repz
or
mov
stos
sub
xor
fiadds
jp
cltd
mov
fbld
cmp
sahf
dec
sbb
cmpsb
push
or
jnp
fwait
loopne
test
scas
outsb
ret
xor
dec
or
mov
pop
shr
ficompl
lds
outsb
mov
cwtl
dec
jecxz
rclb
inc
jmp
inc
jmp
lea
xchg
pop
addr16
test
insb
inc
push
jns
cmpsl
test
icebp
sahf
js
clc
sub
pop
jns
adc
sub
inc
mov
imull
lds
push
mov
int3
hlt
cmp
inc
lock
popf
jo
aad
out
inc
shll
sahf
adc
js
rolb
add
mov
sub
movsl
bound
insb
pop
xchg
lods
push
add
and
adc
stos
dec
jnp
mov
dec
rorb
mov
cld
and
push
sti
cmpb
xchg
adc
mov
popa
fistps
shll
test
dec
jp
lock
pop
and
andb
fiadds
test
sub
pop
fstpl
mov
sbb
popa
mov
and
aad
mov
mov
lock
es
jbe,pn
lret
outsb
inc
pushf
mov
push
lret
repz
push
mov
mov
sub
inc
dec
and
call
idivl
fs
out
push
orl
pop
adc
push
push
sub
out
xor
insb
inc
mov
mov
push
jae
inc
or
loop
jae
shrb
jbe
lret
push
adc
mov
ja
add
out
aaa
mov
andl
mov
mov
cmp
in
leave
dec
mov
pop
fcoms
daa
fistpll
xchg
or
and
push
mov
mov
pop
std
jno
mov
jo
stos
sbb
sub
mov
push
fbld
lahf
inc
jo
fbld
leave
dec
data16
test
adc
test
aam
push
imul
arpl
mov
inc
inc
sub
pusha
loop
push
aam
inc
xchg
mov
imul
xchg
sbb
lret
mov
inc
and
andb
xlat
icebp
jns
sbb
xchg
cli
jp
jne
shlb
loopne
pop
pop
jl
mov
cmpsl
shrb
dec
inc
inc
dec
pushf
fdivr
lahf
jne
inc
int3
ret
xorb
popf
or
roll
xchg
fwait
daa
lret
andl
jbe
outsb
sbb
dec
and
mov
inc
ljmp
mov
insl
ret
and
into
roll
sub
jmp
dec
js
push
add
inc
push
insb
or
mov
inc
loopne
xchg
lret
pushf
lcall
lret
into
jp
test
hlt
cmp
dec
pusha
outsb
adc
hlt
push
fwait
push
test
jle
sbb
inc
cli
sbb
jg
pop
inc
dec
enter
out
ljmp
and
pop
scas
add
mov
insl
sub
aas
inc
xor
scas
push
and
adc
mov
roll
inc
fimull
imul
leave
pop
mov
mov
ja
xchg
std
add
pop
addr16
cmp
repnz
orl
sbb
and
and
sbb
and
jae
jns
fistl
xchg
and
mov
addr16
dec
cs
rorb
push
mov
cmp
sbb
sub
add
rcl
jmp
dec
nop
sbb
das
and
sbb
dec
call
imul
or
clc
fidivl
jp
inc
jo
cmpl
jle
xchg
je
mov
jb
xor
pop
xchg
fisubrs
pop
or
imul
xchg
cmp
ss
dec
and
stc
jae
mov
or
jno
cwtl
push
or
xor
dec
pop
or
xchg
add
std
cmpsb
ljmp
rcrl
call
fs
cltd
repz
aam
mov
xchg
pop
add
sub
ds
testb
cmp
hlt
mov
add
add
inc
pop
and
ret
jno
or
in
imul
popa
test
sub
scas
push
adc
mov
pop
pushf
and
sub
xchg
in
pop
push
mov
andl
sub
push
push
outsl
and
and
inc
pop
push
filds
xchg
leave
movsb
out
adc
jbe
dec
movsb
push
push
addr16
fiaddl
add
adc
pop
dec
sub
jne
daa
push
gs
push
add
pop
ret
icebp
sbb
inc
inc
xor
mov
fmull
cli
jg
sahf
mov
inc
in
sub
std
mov
test
cs
jg
mov
mov
pop
inc
inc
scas
popl
lahf
adc
testb
mov
cli
nop
pop
mov
fs
xchg
lds
cmp
sbb
loope,pt
and
loopne
fistps
outsl
movsb
xor
loopne
and
fisttpll
arpl
mov
stos
or
fistpl
mov
cmpb
dec
addr16
sub
data16
fnstenv
leave
out
add
js
daa
xor
cmp
xchg
push
cmp
add
pop
sub
nop
sbbl
inc
pop
inc
ret
mov
mov
lcall
imul
inc
xchg
enter
jbe
in
sti
out
aas
push
fidivl
sub
je
lock
dec
xlat
insb
pop
out
mov
pop
lds
push
inc
sbb
add
and
ljmp
mov
cmc
and
sub
xchg
sub
xor
and
outsb
mov
mov
mov
pop
test
xor
jmp
ljmp
jnp
inc
mov
lods
or
sahf
dec
mov
sti
mov
fmuls
test
sbb
jnp
xor
jmp
mov
into
pop
mov
sub
test
push
push
clc
int3
loope
push
popa
pop
pop
loopne
add
fistpl
into
add
dec
mov
idivb
icebp
orl
in
xchg
cmp
inc
jp
or
in
adc
push
push
jle
shll
dec
test
scas
jo
or
js
movsb
push
xor
xchg
mov
xchg
popf
push
mov
rolb
aas
daa
mov
mov
add
mov
imul
push
pop
popf
xor
jo,pn
popf
pop
dec
bound
arpl
les
cs
rclb
and
out
shrl
ljmp
pop
outsl
adc
lahf
cmp
mov
xchg
lods
sub
mov
xlat
dec
dec
dec
mov
cwtl
testl
lahf
ret
push
fwait
xor
push
ss
arpl
inc
mov
lcall
mov
or
xchg
test
mov
mov
fwait
push
mov
mov
mov
orl
leave
hlt
mov
js
xchg
iret
out
dec
xchg
nop
rorb
icebp
jbe
fcoml
cmp
hlt
scas
daa
inc
mov
clc
out
push
fcmove
cmpsl
add
push
leave
push
pushl
test
fxch
mov
shl
lock
sbb
adc
out
jl
xchg
es
xchg
add
cltd
pop
jmp
cmpsb
or
divl
mov
jmp
clc
clc
jne
in
sahf
push
mov
sti
xorb
mov
out
mov
inc
jmp
imull
mov
mov
pop
cld
rorb
jno
cmp
jbe
je
das
and
cli
or
cmpxchg
mov
adc
sub
adc
or
lahf
and
mov
fsubrs
aam
in
mov
or
push
or
adc
jb
mov
add
or
fndisi(8087
add
dec
fwait
scas
sub
fsubs
out
mov
iret
orb
jle
jae
aam
and
cmp
int3
int
cmp
xor
pop
shll
xor
rorl
andl
cld
in
or
mov
fbstp
xchg
int
inc
arpl
push
mov
mov
imul
xor
sbb
mov
add
jb
mov
lahf
int
jle
fnstsw
mov
and
cld
push
mov
pop
mov
in
lcall
ljmp
pop
loop
mov
push
dec
jle
push
fiaddl
inc
inc
add
mov
pop
or
movsl
es
xor
rcrl
adc
std
jo
adcl
insl
pop
or
mov
outsb
push
repnz
mov
and
and
icebp
imul
push
fiadds
imul
mov
inc
addl
mov
icebp
mov
cmp
bound
jne
jae
inc
shll
xor
call
repz
inc
aas
test
mov
aas
jl
lahf
inc
mov
adc
out
addr16
fisubrl
outsb
push
inc
or
adc
gs
loope
xchg
rcr
dec
and
iret
jg
inc
call
jl
mov
decl
fmuls
leave
push
fcmovb
cmpl
movsl
mov
out
push
in
int3
icebp
mov
inc
cmp
push
fisttps
jmp
ds
inc
xchg
loopne
and
push
inc
les
jmp
cmp
fsub
mov
out
adc
xchg
pop
add
jae
jp
sbb
outsb
fisubrs
jnp
xchg
insl
je
push
mov
les
stc
xor
sub
icebp
cmp
add
stc
call
cmp
std
je
shrl
loop
mov
jb
bound
testl
jg
pop
je
sub
pop
cmp
adc
cmc
sub
cwtl
call
stos
jno
test
pop
xchg
adc
sarb
rcrb
icebp
jge
ja
cltd
xor
stc
xchg
testb
js
cmp
cmpsl
push
int3
aad
test
jns
sbb
je
mov
cmc
js
dec
jmp
cmp
mov
cld
cmp
mov
test
movsl
push
push
lret
outsl
add
lcall
lds
jnp
rcll
push
outsl
repz
jae
mov
clc
out
arpl
mov
sbb
arpl
jb
lret
mov
mov
push
ret
mov
xorl
pop
fistpll
pop
cmc
push
ret
divl
lcall
divb
bound
inc
dec
mov
enter
or
bound
dec
repz
iret
adc
clc
fwait
cmc
fisttps
pop
fcmovnu
xor
out
jo
aad
cmpsl
mov
jmp
lahf
mov
jge
mov
jo
jle
in
popa
add
jb
xchg
sub
aas
jo
push
insb
adc
mul
cwtl
pop
lock
mov
dec
addb
iret
adc
lods
or
xchg
lds
jno
ficoms
je
fimull
jp
mov
mov
push
pop
mov
lcall
mov
sbb
shll
ficomps
push
mov
mov
and
ljmp
out
xor
addr16
jae
pop
dec
mov
xchg
outsl
mov
ficomps
mov
sbb
and
xchg
shll
in
push
or
aaa
cmp
daa
cli
cmp
push
out
add
cmpl
iret
arpl
sbb
and
out
int3
jle
jb
mov
push
scas
or
out
or
mov
jne
test
leave
and
mov
push
add
nop
bound
aaa
sub
js
aad
ss
icebp
mov
pop
add
xlat
rolb
rorb
js
adc
or
icebp
imul
dec
mov
movzbl
pop
jg
xchg
xchg
out
cld
xor
mov
enter
into
inc
cmp
inc
insl
sub
sti
inc
arpl
sub
popa
fldl
push
xorl
in
outsb
add
inc
push
bound
aaa
mov
pop
fwait
cmp
test
mov
cli
and
mov
xor
std
cmp
test
out
cld
leave
sti
jg
popa
outsl
popa
scas
aas
adc
pop
js
loop
lods
iret
inc
or
xchg
enter
fsubrl
stc
xor
sbb
icebp
cld
dec
lock
mov
jle
dec
out
mov
cmpsb
push
sbb
je
xchg
xchg
xchg
clc
insb
adc
sub
push
rcrb
cli
test
negl
dec
icebp
icebp
ss
cmpsb
xchg
pop
jmp
xor
jno
and
divb
push
jbe
divb
xor
pop
inc
or
rcll
pop
sbb
push
int
test
int3
mov
jo
mov
inc
mov
adc
push
push
jo
cltd
add
fs
aas
popl
pop
lock
and
sub
jno
daa
mov
and
sbb
lret
inc
lods
stos
out
mov
sub
cmpsb
mov
sbb
loop
jae
pop
mov
push
push
add
test
cmp
scas
cmp
jmp
incl
shrb
mov
push
jbe
shrb
jnp
dec
out
mov
jg
int3
cwtl
std
push
outsb
or
xor
lea
mov
movsl
push
cmp
fistpl
inc
mov
inc
adc
in
sbb
adc
lds
rcrl
sub
add
xor
out
dec
rcrl
lret
test
dec
xchg
sahf
xor
clc
and
clc
sarl
sbb
cmpsl
movsb
ret
fcoml
outsb
popa
jp
jb
xchg
add
inc
sub
pop
lods
cwtl
push
mov
mov
gs
mov
jecxz
pop
inc
jo
rcl
imul
ljmp
mov
icebp
dec
add
dec
add
mov
jecxz
pushf
pop
dec
pshufw
inc
or
mov
ficoml
bound
dec
dec
mov
sti
lods
pop
outsb
neg
and
ljmp
addr16
bound
push
sub
mov
mov
andl
or
shrb
xor
inc
and
xchg
lods
mov
jno
xchg
mov
jo
dec
insl
test
les
jecxz
adc
imul
leave
popa
jl
dec
jno
pop
and
cmc
sub
mov
xchg
lock
dec
push
push
mov
shl
inc
push
pop
arpl
or
jp
repnz
pop
pop
sbb
push
stc
sbb
or
in
call
add
je
movsb
xor
loop
sbb
imul
imul
xor
inc
data16
xor
arpl
dec
push
lds
addr16
xchg
icebp
jmp
in
push
sub
pusha
aad
lock
daa
gs
mov
out
cltd
rorl
cmp
insb
jnp
push
scas
shlb
pop
call
icebp
adc
aas
xchg
js
js
lret
loope
push
or
add
sbb
cmpl
jg
xchg
call
inc
fisubs
orb
xchg
pusha
das
jnp
sub
ja
cmp
mov
pusha
int
adc
aaa
adc
push
jecxz
jg
pop
enter
xchg
adc
popf
dec
inc
ficomps
das
mov
rorb
lock
negb
dec
inc
push
push
ljmp
mov
movsb
or
mov
jnp
sbb
ret
mov
bound
mov
mov
or
mov
sahf
mov
dec
xchg
sub
aam
inc
out
xor
lea
xchg
call
xlat
test
cmpb
jl
insb
jecxz
sub
lock
outsb
mov
add
and
in
xlat
dec
jne
mov
aad
jl
inc
sti
ret
mov
add
and
shll
cwtl
xchg
xchg
mov
cltd
pop
mov
lods
inc
adc
mov
dec
sub
scas
insb
notb
and
ljmp
pop
and
dec
cltd
jo
dec
lds
sbb
xchg
xchg
add
or
push
andl
dec
fs
fstps
andb
call
xor
scas
ljmp
add
pop
pop
and
jne
sarb
loope
or
mov
stc
mov
lds
xchg
mov
repz
push
dec
mov
inc
sub
lret
std
stos
pop
fldcw
repnz
in
mov
mov
inc
rclb
xchg
in
jno
js
cmp
xor
insb
jnp
sahf
insl
inc
lret
cld
dec
and
or
fwait
rorl
imul
out
jle
pusha
les
out
push
push
adc
rcll
addb
out
push
pop
addr16
xor
mov
lcall
iret
dec
jnp
in
js
insb
lock
adc
or
rorb
mov
dec
push
enter
roll
pushf
inc
xor
decb
pop
clc
push
ficomps
jns
int
inc
out
in
push
cmpsl
xchg
std
dec
repnz
sbb
mov
add
pop
imul
mov
call
lret
mov
rolb
int
pop
add
sbb
mov
fld
repnz
js
leave
lods
xchg
fidivrl
xchg
hlt
divb
cmc
in
cmp
dec
les
fnstenv
out
push
fmull
xor
sbb
mov
xchg
mov
jbe
out
mov
mov
sub
push
cmpsl
inc
sub
or
outsl
mov
cmpsb
ret
sub
cmp
test
sarl
aad
into
leave
rorb
mov
xchg
shll
inc
mov
ret
jns
and
dec
and
mov
pop
mov
mov
xchg
lcall
mov
rol
test
xchg
sub
call
adc
or
jae
and
enter
in
mov
mov
popa
test
das
fs
loopne
mov
mov
loop
dec
inc
and
xchg
out
cmp
xorb
clc
jmp
sub
push
scas
xchg
iret
imul
push
pop
lahf
pop
push
lcall
xor
fwait
xor
add
adc
xchg
fwait
popf
jns
dec
cs
pop
jns
and
cmp
cwtl
push
ret
rorl
push
xor
fidivrs
insb
push
lret
xchg
int
call
adc
dec
sbb
in
in
xor
loopne
xchg
xor
pop
add
inc
popf
xor
mov
loopne
xchg
lcall
ja
push
bound
sub
dec
push
je
pop
pusha
inc
ret
popf
mov
mov
dec
mov
fcomip
adc
jl
mov
fmuls
jge
sub
cmp
rcrl
ja
jg
fadds
push
leave
add
jnp
aam
pop
aam
jns
adc
out
or
fwait
movsl
int3
mov
and
mov
cmp
mov
or
loope
out
ret
xorb
icebp
sbb
add
cltd
scas
or
arpl
hlt
outsb
hlt
push
int
aas
push
jmp
outsl
xor
cmp
int3
jns
repnz
fucomip
ds
in
push
and
sub
xor
jno
push
pop
dec
shrl
dec
fsub
add
add
cmpsb
pop
sub
jnp
push
popf
je
es
dec
xchg
mov
movsl
mov
or
pushf
mov
popa
xchg
les
push
pop
aaa
sbb
stos
shll
rcr
pop
dec
dec
inc
in
xor
in
loop
mov
mov
sub
inc
xor
fwait
xchg
lock
mov
cli
pushf
add
push
mov
sub
push
cmp
imul
incl
daa
xchg
test
inc
es
mov
cltd
loop
cmpsb
mov
xchg
ja
cmp
xlat
push
sub
je
pop
imul
stos
inc
xchg
mov
bound
jg
lret
dec
fnstcw
xor
loopne
jecxz
pushf
add
cmp
pop
jnp
movsb
in
mov
icebp
fwait
stos
enter
in
pop
sbb
pop
or
cmp
inc
and
xlat
mov
or
pop
iret
jge
xor
or
ret
jl
add
xchg
fcmovne
inc
push
mov
aas
cmc
cmp
dec
add
fldcw
test
jb
cmp
and
out
pop
in
adc
out
imulb
roll
jl
rolb
movsb
icebp
pop
lcall
out
jmp
insl
pop
mov
icebp
and
cmp
filds
cmp
push
cs
jle
jo
lds
or
popa
xchg
mov
outsb
mov
cmp
sub
dec
inc
jb
outsb
sub
dec
xor
andb
scas
add
sbb
call
xchg
inc
push
sbb
cmpb
sti
xchg
adc
sub
cmp
ret
js
sub
cs
daa
cmpsl
dec
aad
lock
xchg
mov
pop
inc
add
pop
xchg
and
iret
ret
jae
mov
dec
call
ret
push
jle
lahf
fdivrl
pop
dec
movsb
mov
ret
pop
imul
in
mov
stos
repnz
fists
dec
or
pushf
dec
cltd
repz
es
nop
mov
loope
jb
leave
cmp
add
dec
inc
or
push
imul
sub
or
jb
pop
repz
movsl
hlt
pop
jae
pop
cmc
lock
repz
lds
test
mov
sub
nop
cmc
cmpsb
enter
or
add
movb
imul
pop
in
scas
js
push
xchg
fldcw
dec
dec
std
jle
testl
and
enterw
js
gs
data16
ret
mov
sub
lahf
jl
jp
repz
jae
idivl
mov
xorb
sbb
cmc
in
repz
inc
adc
add
pushf
lods
and
sbbb
leave
shlb
insb
adc
and
and
push
or
pushf
outsb
sbb
xor
add
sbb
imul
jg
imul
enter
inc
sbb
pop
sub
sbb
pop
movsl
orb
pop
jne
lods
aam
lock
cmpsb
and
mov
and
aad
mov
icebp
jp
pop
daa
enter
insl
cmp
rcrl
mov
mov
fs
mov
cmp
or
enter
ja
std
mov
inc
cmp
test
call
aad
xchg
xor
data16
or
gs
mov
jl
lret
in
in
es
orl
xor
jnp
cmp
push
in
sti
fcoml
jae
scas
aam
jge
jmp
sub
daa
sahf
lahf
mov
and
cs
mov
inc
stc
cmpsl
pusha
mov
mov
fs
inc
testb
xlat
cmp
inc
pop
int3
outsl
mov
sub
loop
mov
sti
movl
lcall
andb
dec
xor
cmp
add
jl
imul
repnz
sbb
movsb
pop
aam
movsb
sbb
inc
dec
cmp
aas
sbb
xor
jo
jecxz
jge
pushf
xor
jae
jnp
inc
vcvttsd2si
and
js
push
sbb
mov
jb
and
adcb
push
pop
sbb
ds
lds
cmpsl
sbb
mov
jp
dec
lret
cmp
xchg
add
lahf
push
push
sbb
mov
out
and
test
cmpsl
xchg
lods
lret
lret
xchg
cmp
dec
jp
and
add
mov
cmpsb
lret
inc
icebp
inc
mov
adc
rorl
push
ljmp
addl
outsl
sub
or
imul
pop
movsb
sub
add
clc
popf
ret
shrb
inc
lea
xchg
in
fdiv
mov
sbb
cmp
cmc
sahf
scas
mov
jno
pop
aaa
cmc
add
mov
adc
jmp
inc
int3
into
lods
push
cmpsb
sub
inc
fimuls
inc
mov
hlt
outsl
imul
jp
daa
loope
inc
outsl
lret
xlat
jns
enter
pop
or
mov
cmp
mov
mov
and
jns
cmpsb
repnz
jle
mov
out
push
adc
mov
stc
push
inc
jb
out
sbb
dec
test
inc
add
sbb
xchg
cwtl
sub
mov
je
and
pushf
pop
pushf
fsubl
addr16
xchg
pop
aam
lds
cmp
test
xchg
in
call
enter
sub
jl
mov
pop
repnz
arpl
jl
jecxz
pop
xor
mov
popa
rcr
imul
mov
insb
shrb
rorb
fxch
and
lods
push
cs
cmp
dec
jbe
mov
cmpsb
push
je
pop
ret
call
xor
xchg
sti
xor
test
das
mov
ficompl
std
xor
dec
rcl
push
and
mov
lea
mov
nop
push
inc
jbe
testl
mov
dec
mov
imul
mov
and
jne
pop
pop
cmpsl
jg
movsl
push
jnp
xlat
or
repnz
stos
out
cmc
shr
sub
incl
mov
leave
lret
jmp
fldl
aad
mov
xor
mov
sarl
cmp
call
jge
aaa
sub
mov
into
push
aas
fsts
mov
jecxz
cmpsb
xor
mov
push
arpl
cs
mov
bound
add
bound
mov
imul
adc
mov
insb
in
xor
xor
and
dec
aad
xlat
mov
icebp
xchg
or
lea
adc
sahf
jbe
jnp
pop
outsb
xor
imul
mov
enter
mov
inc
jbe
aam
enter
es
int
mov
jge
into
mov
in
xor
pop
pop
xor
imul
dec
movsl
cmpb
and
adc
sub
or
and
sbb
jge
mov
dec
jo
jne
jnp
cmp
pop
call
loop
push
shll
or
loopne
clc
or
pushf
arpl
lods
and
test
jle
sti
mov
insl
dec
imul
out
nop
fdivrl
ja
mov
cmp
nop
iret
stos
les
mov
mov
xchg
dec
xor
sub
xlat
cmp
icebp
mov
push
mov
and
xlat
mov
clc
push
inc
cmp
mov
cmp
mov
jp
popa
ret
jns
out
jecxz
inc
sub
inc
jne
icebp
jp
lods
jns
xchg
push
in
sbb
hlt
addr16
lcall
icebp
sahf
and
mov
je
imul
jge
mov
or
add
adcb
pop
adc
add
inc
xorb
in
sub
lcall
hlt
inc
lcall
jge
pop
xchg
or
inc
inc
mov
push
leave
hlt
push
pop
ret
clc
sbb
testb
push
xchg
in
cmp
pop
mov
push
fdivrl
in
jae
jne
lea
sbb
inc
ret
add
cmp
jle
movl
pop
loope
js
pop
mov
cmpsb
call
jo
in
popf
sbb
xlat
mov
fdivr
mov
dec
addr16
mov
pop
lock
adc
sbbb
sbb
pushf
mov
test
test
sub
cltd
push
dec
call
pop
xor
cmpsb
add
add
and
ss
mov
mov
xchg
fsts
pop
mov
mov
mov
inc
mov
in
cmp
pusha
pushf
cmp
or
bound
daa
je
mov
cmpsb
addl
mov
or
mov
mov
dec
loop
lods
mov
add
mov
xor
inc
cmp
mov
or
push
jecxz
dec
filds
int3
rolb
add
adc
cwtl
hlt
lock
inc
out
inc
cli
cltd
push
and
sub
ss
adc
mov
mov
mov
jg
fwait
pop
add
sbb
inc
stos
sub
cmp
adc
mov
gs
jg
pop
mov
jno
dec
ret
or
gs
stos
pop
call
sub
mov
mov
ljmp
jnp
pop
mov
inc
sbb
popf
cmpsb
cmp
rcr
mov
and
fmull
call
sbb
or
push
sub
lea
xchg
outsb
insl
xchg
jae
sub
faddl
adc
jb
mov
pusha
stos
sub
mov
jg
jmp
in
stos
inc
out
cmp
sbb
push
and
hlt
cmp
inc
leave
adc
mov
sbb
bound
into
sub
jmp
push
xchg
or
jl
mov
sub
pusha
push
xor
xchg
cmpsl
mov
jbe
rorb
test
add
sbb
and
inc
imul
aas
or
call
rorb
add
pop
cmp
add
sbbl
add
or
xchg
imul
push
rcrb
rorb
lods
inc
pushf
sub
arpl
sbb
in
repnz
leave
je
sub
je
jo
sbb
and
mov
sub
daa
jp
mov
adc
push
mov
rcll
sti
nop
loope
mov
lret
mov
cmp
int
scas
or
or
fildll
and
sub
mov
push
inc
jp
pop
mov
adcl
sbb
pop
cmp
mulb
into
dec
popf
popf
sub
sub
negb
sarl
xor
addr16
sub
out
aad
or
loope
sbb
jg
add
xchg
mov
xchg
xchg
hlt
sub
test
in
jns
sbb
nop
dec
xchg
dec
cwtl
mov
insb
fcmove
dec
aas
aas
sbb
test
mov
or
punpckhwd
mov
mov
fstpt
adc
dec
add
mov
mov
ds
cmp
add
lcall
lods
leave
dec
out
xor
pop
test
aas
sbb
in
repnz
in
mov
icebp
insb
sub
daa
jnp
xchg
pop
inc
and
inc
aaa
arpl
in
adc
neg
insb
fadd
push
rcrb
sbb
in
in
hlt
cltd
xchg
xchg
sbbb
dec
aaa
sub
hlt
aas
or
addr16
mov
lret
xchg
adc
xchg
jmp
shrb
and
mov
adc
jns
xchg
mov
enter
sti
dec
in
cld
les
shlb
jne
push
mov
mov
out
dec
sbb
inc
push
cwtl
rorb
rorb
out
and
shlb
ljmp
or
jo
xchg
loopne
adc
inc
xor
inc
mov
jl
cs
inc
sbb
mov
popa
pop
pop
mov
mov
insb
xor
outsl
lahf
pop
stos
push
inc
outsl
push
inc
stos
pop
adc
push
lret
jb
sarb
add
imul
inc
jo
push
sbb
jmp
mov
fcomps
jne
stos
arpl
jbe
mov
jae
mov
xor
shlb
push
arpl
std
add
sbb
cli
pusha
inc
lock
inc
adc
cltd
hlt
ret
repz
rcrb
sbb
int3
xchg
jae
int3
insb
push
leave
push
xor
out
adc
push
bound
loope
add
popa
add
fisttpll
ja
or
int
lods
jle
and
fldenv
loope
push
mov
mov
push
in
push
scas
gs
lea
add
and
add
call
pop
lret
adc
popf
adc
mov
push
cmp
inc
jb
mov
jle
fwait
sbb
pop
mov
pop
sub
inc
jge
inc
insl
mov
gs
mov
xchg
int
lods
lea
mov
mov
popa
and
jnp
add
mov
xchg
fdivr
jg
dec
shl
adc
and
dec
inc
inc
xor
jp
leave
sub
icebp
cwtl
ret
daa
pushl
lods
cmp
aam
add
cmpsb
dec
popa
lahf
imul
xlat
and
mov
int3
inc
js
xchg
push
arpl
inc
xor
or
inc
adc
aad
lock
mov
xchg
inc
mov
inc
push
xchg
push
mov
lret
mov
enter
out
loop
inc
jmp
mov
adc
in
ss
cmp
lret
in
sub
subb
add
arpl
fists
es
push
clc
cmpsb
or
ljmp
pop
lock
rol
mov
adc
mov
jo
ror
ss
sub
add
call
orb
insb
mov
idivl
addl
xor
cmpb
je
call
sbb
loopne
mov
jnp
cmp
push
imul
imull
xlat
cltd
mov
ljmp
sbb
xchg
stos
push
mov
mov
push
mov
xchg
fdivrs
xchg
clc
pop
jg
sub
adc
push
sub
xlat
fpatan
je
mov
out
dec
repz
jbe
std
pop
insl
cmc
fcompl
push
pop
jo
xchg
or
notb
pop
xor
inc
jno
push
and
jl
adc
das
mov
inc
pop
push
scas
cmp
dec
mov
iret
jne
jns
xchg
stc
push
adc
cmp
mov
inc
ret
xchg
mov
jnp
jle
mov
hlt
add
dec
mov
push
pop
add
push
mov
andl
vrcpss
xchg
loope
add
push
ret
pop
sarb
data16
fcompl
jmp
jge
aad
add
loop
leave
add
mov
xchg
jne
mov
pop
push
addr16
add
pop
xor
xor
push
mov
mov
je
inc
ret
cmp
lods
adc
mov
es
push
fisubs
or
ficompl
jno
adc
aad
movsb
xchg
sub
ret
loop
cmp
pop
xchg
mov
shrl
movsl
dec
or
jp
sti
mov
xchg
repz
fistps
pop
lahf
and
stc
inc
call
xchg
shrl
dec
mov
lret
cmp
xlat
pop
xchg
adc
cmpsb
imul
orl
outsl
dec
push
adc
stc
xchg
rorl
jle
dec
xchg
jecxz
sbb
fwait
sub
in
sti
repnz
ficoms
add
pop
hlt
push
cmpsb
ds
loope
adc
movsl
jae
enter
xor
in
hlt
xor
push
cwtl
cmpsb
add
loopne
push
sub
and
imul
push
jecxz
pop
push
xor
inc
push
adc
mov
fidivs
adc
sub
and
lea
mov
inc
icebp
and
inc
pop
loop
jmp
push
outsl
pop
adc
push
sub
in
mov
push
int3
ret
mov
in
lret
andb
lds
dec
xchg
aad
cld
int
jg
int
inc
adc
inc
mov
jg
sbb
mov
or
aas
jle
jns
popf
add
loope
sbb
or
jg
mov
insb
cltd
xchg
pop
pop
mov
mov
stc
sbb
mov
or
mov
mov
jmp
and
fldl
mov
ljmp
out
lods
push
jb
jmp
sub
pop
push
dec
fistl
adc
lds
repz
in
test
xchg
adc
cltd
pop
add
std
sub
push
jle
rorl
push
psubb
mov
in
add
mov
and
dec
and
sbb
push
or
jmp
push
out
pop
jne
cltd
lods
test
insl
jg
lret
lcall
scas
lds
adc
cwtl
add
ret
fdivrs
neg
jns
add
mov
adc
adc
jne
into
in
jp
ficomps
lret
sti
in
inc
repnz
jle
dec
imul
push
popa
data16
fmul
adc
mov
or
imul
push
add
xor
imull
push
aad
loopne
shll
adc
scas
mov
sbb
loop
shlb
or
push
outsb
cmpsl
jle
and
jo
jle
repnz
je
jb
dec
out
mov
mov
sub
ss
incb
fldl
lret
inc
enter
hlt
sub
dec
inc
mov
xor
push
popa
push
in
pop
fs
mov
mov
faddl
fidivrl
push
xchg
fwait
popf
add
mov
das
and
out
push
cmp
pop
lcall
fists
cmp
das
bound
xchg
inc
jne
rorl
dec
scas
jne
add
jmp
neg
add
std
ret
aam
mov
clc
jb
outsb
xor
jl
nop
lods
mov
sbbl
iret
push
mov
or
sbb
jo
xchg
je
pop
mov
fwait
push
lea
and
mov
lret
jbe
das
mov
push
xor
daa
inc
jno
or
test
push
mov
dec
add
jge
insb
sbb
push
out
aas
inc
lret
bnd
pushf
xor
loope
in
cs
cmc
and
lock
or
mov
mov
sti
movsl
iret
cli
fcomip
xor
neg
push
pushf
push
loop
dec
jo
inc
ficompl
cwtl
scas
inc
add
fstpt
rcr
jg
or
leave
call
dec
movsl
clc
test
fildl
in
lds
xchg
jns
and
jmp
and
xchg
fstps
int3
dec
jbe
arpl
iret
dec
fucomi
xor
shl
or
xor
cmp
cmp
iret
dec
insb
pop
cmc
add
test
aam
pop
ret
inc
add
filds
dec
pop
and
xchg
ds
mov
fidivs
and
shll
pop
ja
test
daa
or
pop
cs
into
pop
mov
fidivs
sbb
inc
das
add
int
pop
push
pop
stos
test
cmp
pop
seto
test
xchg
jbe
shl
sub
mov
into
imul
out
nop
xlat
stos
daa
sbb
xor
dec
leave
sbb
sahf
lds
cmp
ret
faddl
stos
xor
iret
pop
dec
outsl
jb
jae
add
les
mov
shll
mov
dec
dec
xor
xchg
lcall
dec
push
cmp
data16
xor
add
add
jno
sub
cmp
rorb
mov
sbb
test
std
cmpsb
push
fcompl
outsl
and
lcall
xor
pop
lret
inc
ljmp
and
cmp
fs
incb
push
add
push
mov
popf
rcrl
call
leave
adc
divb
pop
aas
jae
insl
scas
inc
xor
cmp
mov
cmpsl
pop
ljmp
xchg
insl
push
jno
jecxz
sub
and
mov
fisttps
pop
inc
scas
movsb
cmp
out
gs
lret
push
cmp
sbb
pop
out
popf
xor
xorl
sbb
sbb
addr16
imul
cwtl
stc
add
dec
pop
cwtl
xor
test
push
xor
mov
cltd
mov
inc
pop
rcl
xchg
push
daa
mov
mov
movsb
cmpsb
push
aad
arpl
push
int
mov
fdivl
rcll
data16
in
out
adc
out
fcomip
push
insb
xor
pushf
outsb
mov
jge
idivb
jle
pop
adc
add
xchg
adc
jo
jmp
sbbb
jo
jo
adc
adc
int
into
jne
test
popf
call
mov
dec
cltd
fs
mov
mov
loope
cmpsb
xchg
sahf
xor
roll
mov
arpl
cmp
subb
fsubs
jmp
hlt
imul
lock
in
sbb
inc
inc
mov
sbb
fs
dec
outsb
add
push
inc
in
mov
je
adc
outsl
mov
sbb
outsb
orl
sbb
jno
bound
in
sub
inc
push
mov
leave
xor
cli
outsl
adc
mov
aaa
mov
mov
mov
fcoml
ds
jnp
movsl
or
xor
or
mov
mov
or
add
aad
adc
sbb
jns
insb
out
call
mov
mov
dec
pop
jg
jno
jg
push
or
test
mov
cmpsb
jmp
xchg
adc
xorl
push
and
repnz
enter
pusha
mov
and
mov
int
insb
leave
aam
xchg
cmp
ljmp
cmpsb
pop
xor
xorl
inc
add
fdivs
pop
pop
int
in
lcall
or
mov
jns
mov
in
in
inc
arpl
pop
jbe
mov
test
jbe
mov
in
ret
xchg
push
lods
gs
sub
sbb
loopne
xchg
int3
div
or
js
mov
call
shl
dec
mov
hlt
sbb
xchg
in
fdecstp
inc
idivl
inc
scas
rorb
loopne
mov
cmpsb
in
enter
dec
in
mov
repz
jp
jmp
inc
xchg
xchg
nop
xor
dec
mov
push
add
cli
lock
dec
testb
xor
inc
roll
out
xorl
shll
sub
fsubrl
movsl
scas
divb
add
inc
xchg
xchg
mov
jecxz
leave
pop
jle
pop
shl
cmp
mov
std
cmp
fisubrs
bnd
jmp
fisttpl
pusha
adcl
mov
scas
inc
popf
jo
push
mov
jbe
push
add
sbb
jp
in
pop
dec
pop
mov
cmpsl
nop
dec
daa
les
into
sub
mov
xchg
mov
or
cwtl
test
movsl
out
cltd
sub
ficomps
pusha
mov
scas
nop
aad
pop
jns
and
lock
or
lock
int
push
pop
cmp
adc
or
xchg
bound
mov
or
pop
sub
jecxz
in
jo
mov
out
jge
fdivrl
add
addr16
cmp
xchg
out
cltd
rorl
bound
ds
cmc
aas
mov
into
lock
xor
mov
jg
mov
stos
push
mov
sbb
push
xor
mov
xor
and
inc
xor
inc
adc
outsb
sti
loop
sub
roll
add
pop
out
pusha
mov
ljmp
sub
xor
adc
inc
repz
and
cwtl
inc
fucomp
pushf
mov
inc
jp
shl
imul
mov
testl
sti
push
xchg
adc
mov
dec
into
icebp
jmp
sub
add
adc
inc
push
sub
xchg
hlt
xbegin
jle
xchg
xor
lods
add
cmpsl
xor
clc
jno
pushf
sub
es
push
sub
aad
bound
mov
pop
sub
sarl
push
or
iret
loope
or
lock
xor
push
int3
pop
in
mov
dec
sub
movb
inc
inc
sub
fiaddl
fwait
add
je
mov
adc
jb
addr16
out
jns
in
mov
push
sub
cmpsl
sbb
dec
cmp
std
aad
cmp
pop
cmpsl
jl
or
test
outsb
int
test
inc
xor
push
xchg
adc
inc
xchg
outsb
pop
mov
jmp
mov
aaa
aas
rorl
sbb
rol
mov
push
lahf
xchg
test
clc
jge
mov
enter
sbb
mull
jle
mov
cmpsl
dec
fs
mov
mov
lret
cmpsl
mov
pop
push
push
mov
add
dec
loopne
cmpsl
int
mov
or
into
inc
in
lds
xor
xchg
sbb
mov
pop
pushf
lret
dec
or
xchg
cltd
sbb
xchg
mov
cld
xlat
loopne
push
push
lcall
push
jmp
and
pop
add
out
sub
cli
loopne
jl
xchg
mov
js
dec
clc
cmp
icebp
addr16
aad
data16
pop
imul
xlat
mov
dec
sub
jg
outsb
sub
mov
jo
xchg
loopne
sahf
push
scas
jb
pusha
inc
fldenv
incb
sbb
jl
les
aad
les
stos
push
insl
mov
inc
aam
jns
jg
in
int
xchg
lods
adc
das
sahf
dec
sub
or
pop
jecxz
repz
pusha
pushf
mov
mov
out
mov
pop
or
imul
enter
jno
jl
mov
mov
xchg
pop
dec
cmp
push
sub
mov
sbb
std
js
mov
clc
and
daa
clc
scas
sbb
dec
pushf
fldcw
fists
imul
arpl
push
pusha
rolb
xchg
adc
les
repnz
cmp
jg
mov
xchg
in
xchg
mov
jg
xchg
mov
adc
ss
xchg
out
adc
adc
sub
xchg
inc
inc
push
and
clts
jns
fsincos
mov
pop
jecxz
jbe
xor
dec
fsubl
ja
stos
mov
inc
pusha
push
cmp
xor
and
imul
and
std
clc
std
nop
jns
les
add
mov
or
fstl
cmpsl
push
shrb
sbb
cmp
xchg
jo
jae
mov
out
sub
push
sbb
lock
in
and
loope
jle
jae
add
sub
mov
bound
and
jb
outsl
out
jae
pop
cmp
lock
hlt
inc
div
cmpl
rolb
insl
sti
inc
ja
dec
or
and
xchg
mov
cmp
outsl
xor
jge
adc
push
inc
add
jae
out
dec
add
test
clc
in
aas
mov
call
or
mov
insl
in
popa
sahf
pop
push
mov
decb
mov
mov
xchg
rcr
lret
push
mov
js
mov
jne
bound
jbe
repnz
test
shrl
pop
mov
jecxz
and
sbb
inc
sub
xchg
inc
xchg
test
lcall
cmp
leave
ljmp
and
add
test
push
mov
xchg
stc
mov
xchg
xor
jae
mov
cli
mov
push
adc
push
sub
jns
adc
scas
inc
xchg
inc
iret
cmp
sub
mov
xor
fs
lea
or
std
hlt
pop
mov
pop
ds
lds
inc
inc
cmp
xchg
lcall
outsl
sahf
insl
ror
insl
inc
out
add
adc
pop
je
cmc
jbe
xchg
pop
cmc
popa
repnz
call
insb
cli
cmp
sbb
addr16
xor
popf
rolb
bound
mov
cltd
repz
jnp
adc
mov
inc
inc
inc
shll
insl
cs
and
fimuls
lock
int
mov
push
inc
outsl
adc
aam
push
into
popf
aaa
sbb
insl
sbb
rolb
and
dec
test
or
cmpsb
dec
xchg
imul
mov
test
push
flds
and
xor
popf
mov
out
jae
mov
push
out
aaa
jg
enter
adc
jno
ret
push
int
ret
sbb
dec
sbb
inc
pop
fstpl
mov
int3
xor
mov
fadds
loop
push
repnz
fdivl
repz
stc
test
fs
out
ljmp
sub
cwtl
stos
push
pop
inc
in
out
popf
cli
lret
cli
call
dec
pmullw
pop
xor
inc
inc
push
or
in
scas
inc
mov
or
nop
outsl
dec
in
mov
ss
bnd
sub
dec
fucom
pushf
hlt
or
pushf
cmp
test
inc
sub
adc
dec
test
popf
jmp
lret
mov
jno
subb
fiaddl
mov
je
cmp
push
decl
shl
ficoms
leave
jo
push
push
xchg
jbe
out
cmpsb
cltd
pop
call
pop
test
jno
pop
sub
bound
jae
imul
leave
inc
jmp
lods
lret
cmp
data16
inc
xlat
iret
sti
jl
mov
stos
mov
popf
inc
stos
xchg
sbb
sub
into
cmpl
inc
xor
repnz
in
outsl
lcall
push
insl
jb
scas
insl
cmp
inc
and
add
mov
inc
and
cmpsb
sub
imul
cmp
out
stos
jno
fcoml
xchg
lcall
pop
sub
adc
ret
call
fadd
rolb
xor
cmpsl
sbb
lahf
dec
enter
outsl
inc
les
sbb
mov
mov
ret
pop
in
push
lds
lahf
mov
lea
lods
icebp
rol
sub
ja
pop
clc
lret
cltd
leave
jmp
popa
inc
mov
add
arpl
ret
ds
inc
and
jge
out
iret
int3
ds
sbb
dec
or
push
dec
push
jns
jno
insb
adcb
cmp
xchg
inc
lret
jno
mov
repz
dec
dec
pushf
pusha
mov
adc
add
icebp
out
ret
test
faddl
lock
fsubrs
sbb
jle
add
clc
jecxz
inc
subb
inc
sti
cmp
push
mov
stos
subb
dec
ss
mov
cmp
xor
outsb
loopne
cmp
and
cmp
repnz
push
add
pop
cltd
cmp
mov
outsl
and
roll
lds
fisttps
jns
sahf
push
xchg
loop
sbb
push
or
sbb
mov
aam
loope
pop
push
mov
mov
nop
push
push
inc
rcll
idiv
out
imul
push
dec
fiadds
imul
stos
pushf
mov
sahf
adc
shll
movsl
jge
xchg
jbe
push
ljmp
jmp
add
nop
mov
lods
jo
pop
add
and
sti
lods
hlt
sbb
out
fs
call
mov
jmp
stos
shrl
or
push
push
in
scas
sbb
xchg
ud0
addr16
in
cmp
je
mov
mov
in
sbb
cld
cmp
add
fnstsw
add
sub
jp
pop
xor
dec
mov
adc
and
push
roll
scas
adc
push
and
mov
jmp
aad
std
inc
jo
xor
stos
insb
loope
xchg
insl
mov
dec
xor
scas
mov
lcall
pop
cmp
in
and
cli
push
xchg
cmp
ss
es
icebp
jae
xchg
push
test
bound
adc
jns
xchg
inc
jmp
adc
aam
jns
add
iret
repz
daa
fldt
lcall
fmul
mov
mov
xor
inc
xchg
sti
into
xor
inc
enterw
dec
pusha
mov
rcrb
pop
add
adc
mov
jne
pop
pop
in
lock
imulb
js
adc
mov
mov
cmp
ss
inc
mov
mov
addr16
pop
mov
xor
and
std
lret
movb
aad
pop
push
out
out
shr
push
insb
std
lret
or
inc
fs
cltd
xor
cltd
sbb
stos
mov
mov
jg
lock
sbb
dec
cmc
jmp
xchg
jge
mov
push
pop
mov
sbb
push
push
shl
pop
mov
mov
xor
push
mov
push
dec
sbb
inc
in
inc
xchg
fimull
sbb
mov
jbe
dec
sub
int3
dec
scas
mov
dec
das
int
scas
lahf
lea
jbe
inc
scas
insb
lea
xchg
xchg
test
cmp
sub
enter
fcoms
aaa
fcomps
xor
fcomps
xor
pop
push
aas
fsubs
push
cmp
and
fsubs
push
pop
fsubrs
push
add
sub
fsubrs
push
pop
fsubrs
push
push
fdivs
or
bound
mov
test
jl
aas
imul
std
clc
cmp
in
dec
fildl
lds
sbb
popf
lock
roll
repz
xchg
inc
push
ss
push
jb
push
inc
addr16
imul
adc
inc
movl
jmp
dec
fs
xchg
cmp
lods
lea
pop
inc
sub
fdivrs
push
add
test
mov
arpl
jne
dec
inc
test
xchg
sbbb
mov
sbb
aad
push
xchg
jns
push
cmp
mov
mov
jno
sub
and
addl
inc
pop
cltd
mov
mov
dec
dec
sbb
cmpsb
push
int
shll
mov
scas
mov
scas
in
cmp
ljmp
mov
test
or
inc
jae
stc
adc
push
ret
mov
mov
cmp
lcall
mov
lahf
mov
in
or
in
jle
add
push
jb
imul
xchg
in
push
adc
into
xor
jl
xor
xchg
outsb
dec
jne
pop
xchg
in
les
into
daa
push
jmp
jo
dec
mov
rcll
imulb
insb
dec
xchg
xorl
jns
inc
adcl
mov
cmc
divl
sub
jo
imul
sub
dec
loop
rcrb
sub
imul
xor
call
sbb
or
pop
scas
aaa
jno
je
into
push
and
mov
push
adc
mov
dec
sahf
mov
push
ss
sbb
int3
inc
or
pop
rcll
sti
cltd
out
ja
push
sbb
aaa
jmp
outsb
push
xchg
jns
pop
clc
std
jl
mov
adc
or
test
mov
not
inc
js
lods
jp
dec
mov
fwait
loopne
push
jecxz
ljmp
or
mov
and
ljmp
jl
adc
stos
inc
add
jne
cmp
fsubl
jmp
jb
rorl
iret
lods
lahf
imul
ljmp
stc
or
pop
popa
dec
inc
test
test
int
outsb
into
sbb
int3
mov
adc
pop
aam
adc
xchg
cmp
dec
mov
and
lcall
jb
mov
cmp
xor
dec
or
sbb
pop
and
xchg
stc
cmp
pusha
inc
xchg
daa
ljmp
loopne
sub
jg
out
insl
jle
and
add
ficoml
arpl
xchg
cmpsb
les
pop
inc
jle
mov
in
pop
shlb
push
sub
dec
xchg
lock
std
imul
lock
add
jno
cli
stc
les
loopne
jbe
xchg
fsubrl
mov
push
push
jl
push
pop
xchg
fmull
push
orb
adc
stc
jle
negl
push
ds
mov
cwtl
or
jmp
add
cmp
pop
fadds
sbb
push
push
sbb
add
rcrl
jns
pop
add
out
or
in
push
or
mov
sbb
adc
imul
inc
xchg
push
mov
adc
mov
ss
mov
xor
jno
bound
aaa
push
fsub
fbstp
push
xchg
mov
push
sub
inc
test
rol
jno
jo
mov
and
imul
add
mov
xor
dec
stc
adc
or
movsl
mov
mov
pop
dec
sub
frstor
mov
fstps
add
pop
inc
and
adcb
lods
adc
shlb
cltd
testb
xchg
fdivl
int3
iret
stos
out
cmp
dec
scas
decl
mov
outsb
lret
ja
call
in
dec
jmp
dec
rcrl
mov
lock
sbb
jl
leave
and
dec
mov
jo
push
fistps
jno
sarb
dec
lret
dec
stos
dec
scas
enter
mov
scas
inc
inc
jae
push
mov
je
and
jmp
loope
xor
push
cltd
push
sub
inc
lahf
fisubs
mov
leave
cli
out
mov
adc
adc
push
inc
sbb
add
pop
jecxz
clc
xor
mov
movb
leave
xor
mov
fldcw
mov
push
dec
rorb
into
ret
inc
inc
xchg
cltd
or
mov
outsl
out
icebp
push
add
fldl
sub
in
fs
jp
pop
sti
inc
rcrl
inc
andl
pop
frstor
cli
fsts
es
or
ret
sub
dec
std
in
cmp
xchg
nop
jne
std
mov
jae
inc
add
xor
or
rcll
and
push
sub
pop
sub
jmp
pop
or
enter
adc
push
stos
jnp
xchg
sbb
leave
push
ds
xchg
in
shl
jno
dec
add
mov
call
loope
dec
in
ja
jmp
mov
xchg
jo
js
and
xlat
push
cmp
jmp
fwait
or
mov
pop
mov
push
fs
mov
dec
lea
and
jno
fxch
ret
dec
xchg
cs
out
sub
in
push
lret
lock
clc
dec
pop
xchg
ficoms
cmp
inc
mov
xchg
call
imul
xrelease
cmp
mov
and
jb
popa
pop
call
add
fistpll
xchg
push
lret
jae
pop
sarl
mov
or
movsl
push
repnz
lcall
jns
sub
fldl
sub
sarl
mov
stos
xor
xor
sub
int3
and
dec
push
imulb
mov
pop
fldenv
push
push
sbb
movsl
popa
dec
inc
out
sub
xchg
es
add
daa
pop
sti
js
rcrb
jo
das
arpl
inc
inc
aaa
xor
repz
push
inc
outsb
div
pop
movsl
xchg
pop
cmp
loopne
fbld
or
leave
aad
fcoml
mov
pushf
arpl
inc
mov
cld
xor
les
sti
dec
arpl
test
repnz
sbb
inc
and
mov
loopne
cmpsb
repz
arpl
aas
inc
aas
mov
pushf
jle
test
test
sarb
call
iret
adc
js
insl
push
in
negl
sahf
cli
sub
test
xor
sbb
push
pop
cmc
xchg
fidivrl
ret
mov
pop
push
pop
cmp
mov
add
mov
dec
mov
mov
fwait
test
cld
mov
std
mov
inc
stos
cld
dec
sub
cld
cmp
mov
xor
insb
xor
cmp
fdivl
and
dec
test
shrb
jge
jns
test
daa
movsl
sbb
icebp
add
rorb
subb
dec
sub
clc
push
js
adc
push
sbb
fucomip
xchg
mov
pop
sbb
dec
loope
rorl
sub
cli
dec
mov
int3
stos
icebp
pop
scas
jmp
mov
or
dec
mov
in
push
insl
dec
xor
leave
lods
icebp
jo
or
push
pop
inc
push
iret
cld
pop
xor
cltd
nop
mov
mov
outsb
rcrl
xor
stos
inc
sti
lea
mov
jecxz
mov
and
dec
push
xchg
lret
test
dec
sub
cmp
add
xchg
inc
xor
xchg
adc
imul
mov
int3
cmp
rclb
sti
push
loope
push
and
jp
push
iret
sub
std
dec
int3
hlt
jnp
pushf
and
inc
outsl
ret
xor
mov
daa
cvtps2pi
sub
xchg
dec
aam
mov
inc
imul
pop
pop
jmp
inc
popf
xchg
pop
outsl
pop
and
dec
clc
mov
add
push
call
push
jne
mov
pop
push
out
push
push
inc
add
enter
js
scas
out
in
dec
stc
mov
in
lods
xchg
into
int
aam
test
xor
lahf
add
dec
sub
insb
sbb
inc
and
push
dec
dec
and
and
in
push
or
mov
push
inc
lods
push
xchg
out
lock
xchg
inc
mov
mov
push
push
inc
inc
mov
std
sahf
xor
pop
fimull
test
sti
loop
cmp
jmp
sub
sub
pop
or
mov
mov
pop
pop
stos
loop
sbb
inc
stos
data16
inc
popa
sub
xor
shll
jo
aad
int
sbb
sub
jp
outsb
push
cmpsb
in
inc
jp
je
and
sbb
roll
jo
xchg
sbb
faddl
lock
dec
jl
jmp
sbb
shll
and
push
sbb
ret
out
inc
imul
scas
mov
adc
dec
ljmp
inc
in
lret
jle
jle
dec
dec
cwtl
data16
xchg
dec
mov
adc
cmp
mov
inc
inc
mov
jb
mov
jae
jnp
in
fcoms
add
add
out
sbb
je
jnp
loopne
push
stos
in
mov
sub
xor
aas
sub
or
jnp
sar
iret
cmp
add
lcall
fisubs
push
addr16
aad
arpl
push
xlat
lods
push
sub
lds
scas
inc
lahf
jo
dec
mov
dec
mov
aam
mov
mov
jmp
mov
mov
icebp
outsb
xor
call
sub
sub
and
mov
dec
cmpsb
sbb
aaa
ret
pop
sub
sbb
insl
jb
pop
cld
cmc
push
mov
aam
das
jg
jno
dec
cmpsl
mov
cmpsb
fdiv
mov
jecxz
pusha
sub
test
ret
iret
nop
cmp
stc
sub
jbe
test
out
in
and
cmpsb
scas
mov
outsb
and
aad
push
ljmp
sbbl
loope
imul
icebp
lods
lds
jp
inc
xor
mov
dec
ret
add
cmpsb
clc
xchg
push
push
jno
and
std
stos
sub
fucomi
add
xchg
cltd
out
daa
pop
ss
push
mov
mov
jb
xchg
and
push
cmp
or
pop
std
test
or
loopne
mov
and
adc
dec
push
and
jbe
add
mov
cmp
sub
mov
call
jp
pushf
xchg
cli
dec
gs
pop
sbbl
loope
imul
dec
xor
push
icebp
xchg
fwait
sarb
sub
add
mov
mov
rcrb
ljmp
jne
pop
xorb
ja
mov
pop
les
or
pushl
data16
lods
mov
sub
in
rcll
lock
sbb
jmp
sti
test
std
out
lods
fbld
xchg
insb
mov
lea
jae
cmp
imul
sub
mov
sar
test
dec
mov
fiadds
pusha
sbbl
mov
iret
and
stos
arpl
or
outsb
sahf
xchg
lods
cmp
cmp
in
aam
jge
imul
mov
fwait
ja
mov
add
rcr
pushf
shl
sub
mov
test
or
push
lcall
fimuls
sahf
out
aam
inc
mov
jnp
fsts
and
mov
jbe
cmp
adc
xchg
xor
sub
mov
push
movsl
lret
popf
cltd
sbb
push
cs
or
pushf
pop
jb
sbb
sbb
decb
jmp
ret
dec
mov
inc
icebp
aad
inc
das
adc
cmpsl
mov
dec
mov
add
ja
sub
push
mov
loopne
mov
ficoms
inc
cmpsl
xchg
ljmp
lds
and
fdivs
mov
pop
int3
fbstp
dec
in
orb
adc
roll
pop
or
jmp
outsb
out
movsb
pop
pop
popa
xor
insb
shll
add
mov
sbb
add
fstpt
xchg
roll
xor
xor
xchg
rcrb
movsl
icebp
insb
sbb
lret
dec
sbb
sub
adc
pop
jae
push
ja
xchg
push
test
mov
adc
xchg
clc
pushf
push
in
insb
adc
jp
adc
sub
inc
mov
cmp
scas
std
sub
addr16
cmc
sbb
lock
jbe
lock
fidivs
lods
or
sbb
movsl
clc
das
fwait
in
and
push
rclb
and
sti
je
insb
dec
icebp
pop
fdivrl
in
pop
ljmp
out
clc
dec
adc
lret
cmc
or
popa
lea
and
ffree
cmp
cwtl
jbe
xchg
dec
pop
clc
sbb
jmp
loope
jnp
loop
fildll
cltd
or
fists
adc
xchg
imul
clc
cmpb
sti
mov
xchg
pop
jl
hlt
push
jp
pop
inc
rep
sub
movsl
jbe
movsb
fisttps
mov
mov
jp
push
pop
sbb
xchg
jns
shrl
out
xchg
ja
fnstenv
pop
push
cmp
inc
lcall
jno
int
push
inc
inc
sbb
mov
mov
lods
xlat
add
js
xchg
ret
or
inc
jle
add
push
mov
dec
xchg
adc
ret
xor
sub
mov
xchg
push
cmpsb
dec
pop
andb
add
loopne
lods
and
rol
mov
outsl
jle
and
idivl
xor
dec
jae
stos
cmp
lods
lret
jmp
adc
dec
push
sbb
inc
cmp
fbld
jae
adc
fidivrl
rcrl
pop
fsub
push
adc
push
xchg
out
push
or
fldcw
orl
inc
cmpsb
dec
add
shrb
xorb
jno
and
fcomp
fwait
xorb
xchg
cltd
sbb
inc
dec
mov
jne
roll
aas
mov
js
cs
ffree
xor
mov
inc
leave
xchg
xor
gs
arpl
push
jl
push
je
xchg
stos
shld
cmp
rcl
xchg
je
mov
jae
pop
xchg
inc
and
inc
adc
push
jo
stos
push
fldl
mov
inc
push
xchg
test
pop
push
jb
sub
fstpt
popf
xor
fistpl
cmpsb
xlat
out
in
xor
xor
inc
bound
mov
mov
xchg
xor
aam
adc
dec
jl
mov
sub
gs
jns
hlt
icebp
add
ret
mov
in
pop
xchg
push
sub
jbe
cmpsl
sti
push
fs
clc
xchg
aaa
dec
test
xlat
push
fisttpl
jge
clc
fcoml
test
mov
cmpsb
aaa
mov
repnz
into
outsb
sbb
sbbb
jl,pn
popa
ljmp
test
std
jmp
je,pn
mov
mov
push
arpl
sbb
lods
fs
cmpsb
rcr
cld
adc
xchg
jecxz
out
shll
or
clc
jl
push
cltd
mov
mov
movsb
test
sahf
loopne
fwait
xor
push
dec
mov
pop
xchg
in
adc
aam
mov
mov
lock
sahf
push
mov
add
fwait
cmc
imul
in
mov
cwtl
sub
or
in
cmpsb
pop
sub
orb
adc
xor
or
test
inc
mov
jb
sarl
out
push
xchg
out
sub
pop
inc
cmc
add
scas
mov
jl
pop
out
aam
aad
into
xchg
xor
push
ror
push
flds
mov
jge
cmpsb
clc
js
sub
or
das
outsb
js
add
and
xchg
in
icebp
jae
adc
inc
leave
push
dec
adc
cmp
jecxz
insb
aaa
in
in
xor
mov
jno
push
mov
inc
or
xchg
arpl
xchg
jae
pop
sub
inc
xlat
dec
lret
movsb
mov
mov
sarb
call
cmc
push
scas
imul
xor
cmp
xchg
cmp
xchg
pop
cmpl
data16
cmc
popa
aam
int3
push
jle
scas
or
and
cmpsl
inc
cmpsl
fisubl
sbb
int3
xor
mov
jbe
popa
adc
fmull
imul
sub
popf
xor
xchg
xchg
jno
test
das
or
in
push
dec
repnz
jmp
test
dec
into
and
lcall
je
incb
ret
leave
in
subb
insb
mov
jb
or
insl
pop
cwtl
mov
icebp
testb
sub
sub
mov
test
cmpsb
inc
imul
inc
lods
or
jl
or
cld
xchg
add
mov
pop
insb
jmp
adc
mov
xchg
adc
inc
mov
stc
adc
in
mov
repnz
inc
sbb
inc
inc
mov
or
push
dec
xor
lds
rol
sbb
dec
xchg
popa
xor
imul
xchg
ja
loop
clc
cmp
cmp
xchg
into
xor
add
xor
mov
and
shll
clc
popf
or
stos
mov
leave
mov
ret
sbb
enter
or
xchg
dec
int3
scas
adc
popa
insl
icebp
jge
rcll
and
cmpsl
dec
sbb
adc
sub
lock
iret
cltd
xor
int3
inc
mov
cli
sub
adc
std
out
repz
repz
add
or
add
ja
xor
add
push
xchg
mov
push
xor
mov
lcall
lods
and
push
pop
cmpsb
jle
xor
hlt
jae
xchg
loop
jb
fisubl
mov
enter
jg
jnp
jge
in
movl
pop
dec
not
testl
or
loopne
rorb
sbb
repz
notl
mov
jno
mov
mov
dec
in
adc
call
jl
xchg
push
xchg
pop
jno
sbb
sarl
int3
jp
add
std
pushf
jns
movsl
pop
pushf
pop
loop
xchg
mov
dec
jge
pop
incb
jle
pop
movsb
xchg
fmull
inc
add
jae
sub
and
bound
pop
and
outsb
hlt
jp
and
sub
int3
mov
xlat
lret
xchg
iret
lock
fdivs
mov
jnp
push
add
cmpsl
pusha
pop
test
mov
ds
jno
outsl
add
into
je
rcl
push
or
cwtl
dec
ret
dec
sub
arpl
out
fsubp
pop
rcrb
fisttpll
xor
stc
push
push
daa
scas
push
pop
popf
pop
lds
in
mul
fidivl
jae
mov
pop
ss
lods
repz
push
xchg
arpl
test
adc
ja
cwtl
push
sbb
adc
loopne
jg
fldl
xchg
insb
pop
ja
lods
jmp
sahf
es
fcomp
adc
sub
pop
cmpl
mov
cmpsb
pop
sahf
xchg
orl
dec
dec
imul
shrl
push
repz
out
push
xchg
inc
js
cltd
add
cwtl
mov
shlb
inc
js
ret
leave
subb
and
leave
ret
lret
add
dec
cmp
mov
push
gs
outsl
leave
push
enter
in
imul
cs
sarb
or
idiv
mov
ja
jns
outsl
gs
inc
add
jae
bound
push
lahf
cmp
stc
loope
mov
repnz
fsubrs
jl
mov
addl
addr16
jb
mov
mov
sbb
sub
or
add
mov
add
int3
xchg
inc
xor
movsb
sbb
and
sub
mov
xor
mov
int3
call
cmp
cmp
sbbb
dec
sub
mov
and
adc
pushf
add
xor
pop
lret
cld
push
mov
dec
lds
cmp
loop
test
arpl
popa
sub
sti
xchg
push
jecxz
jl
xchg
dec
movsl
sbb
insb
cmpsl
lods
push
dec
movsb
dec
insl
push
sbb
aas
dec
into
sbb
inc
pop
xor
sbb
mov
pop
jecxz
aam
jo
dec
xchg
lea
pcmpeqw
pop
add
sarb
xchg
mov
xlat
pop
fimuls
lret
mov
push
push
add
int3
into
in
and
cld
pop
push
mov
dec
into
inc
stos
sbb
mov
cld
sub
pop
mov
jg
fdivrl
inc
xchg
scas
mov
jg
and
jmp
movsl
frstor
ljmp
lret
movsl
fs
mov
pop
test
scas
sbb
test
mov
fnsave
inc
sub
test
or
xor
outsb
scas
scas
mov
push
push
or
mov
mov
pushf
xor
jnp
xor
sahf
leave
add
outsl
sub
xorl
std
mov
jns
push
cli
push
xchg
or
add
mov
lds
fstpt
jge
inc
rcr
push
mov
in
imul
jno
mov
rcll
jecxz
cli
lret
mov
sti
push
mov
adc
lock
nop
aas
xlat
lcall
cs
in
jno
in
sub
clc
dec
push
jae
sahf
xor
mov
and
sbb
cmc
xor
out
adc
into
stos
inc
and
notl
imul
jnp
sub
cmp
pushf
pop
stos
inc
stc
push
icebp
inc
test
cmpsb
mov
add
lods
stc
sub
fcoml
cli
cltd
jae
int3
or
movb
push
rcll
les
jge
push
jae
adc
mov
cmc
iret
jbe
push
mov
jo
add
ljmp
out
add
cmp
mov
loop,pn
cwtl
jns
dec
jnp
cmp
dec
xchg
fsts
insl
cltd
mov
sub
push
dec
jmp
subl
stos
mov
add
mov
sbbl
fldcw
cld
lcall
mov
inc
xchg
andl
ljmp
fisubs
mov
xor
and
cltd
push
or
mov
lock
adc
lcall
sti
cmp
xor
add
jg
outsl
push
jg
aaa
or
popf
sub
xor
aas
push
inc
int
cltd
cmp
pop
mov
push
dec
lds
lea
xor
push
jno
into
push
sbb
jno
movsb
lods
jg
inc
rorb
lea
add
add
insb
jne
inc
cli
inc
cmc
xor
add
fsubs
push
data16
push
lret
cmp
dec
mov
ljmp
xchg
jg
and
push
mov
adc
clc
sbb
cmc
mov
lret
stos
mov
jg
cmp
push
sbb
int
out
fmull
fisubrl
add
shlb
scas
jle
test
mov
movb
repz
loope
jns
repnz
mov
xchg
frstor
or
and
xor
inc
jo
cwtl
mov
cmpsb
adc
push
dec
ret
cmp
int3
cld
fs
xchg
daa
xchg
test
inc
mov
es
in
std
adcb
sbb
mov
sahf
jbe
pop
sub
lcall
dec
xchg
sub
and
push
imul
les
add
andb
fidivs
jns
pop
push
mov
imul
jecxz
daa
ror
mov
sbb
add
dec
push
sbb
xchg
push
andl
dec
movb
pop
dec
push
rcl
stc
cmpsb
shl
push
inc
gs
dec
add
fmuls
inc
jns
inc
jns
mov
pop
cltd
inc
push
pusha
mov
mov
jge
daa
dec
je
push
out
mov
outsl
adc
js
sub
in
fisttpll
jecxz
pop
repnz
jmp
test
push
pop
rcl
mov
insl
mov
adc
cmp
xchg
sti
xlat
add
and
sub
pop
and
in
ret
ljmp
jns,pt
dec
push
mov
pusha
lret
mov
sbb
add
jo
pop
push
xor
mov
and
rcl
jmp
inc
cwtl
aam
jge
push
addr16
mov
sub
xorb
lea
jo
mov
es
lcall
pop
jg
and
mov
cmp
mov
pop
pop
sub
outsb
lods
repnz
jo
pop
mov
sub
push
stos
adc
jp
push
imul
cmp
je
inc
fbstp
mov
rcrl
nop
or
fnsave
test
xchg
nop
repnz
add
dec
mov
lea
dec
enter
dec
pop
push
fidivrs
inc
lock
and
mov
and
cltd
cmc
repz
sbb
ffreep
sti
movsl
stos
xchg
lock
fsub
rcrl
push
mov
lods
and
adc
int3
cmp
jbe
sub
sbb
daa
add
jne
inc
mov
and
int
mov
ja
bound
cmc
repz
push
mov
push
xchg
sti
xor
sub
insl
mov
ds
pop
leave
notl
out
inc
popa
fisttps
and
sub
aaa
fiaddl
fnstenv
fdivp
mov
in
add
js
inc
pop
and
dec
call
inc
data16
cmp
test
push
data16
loope
sub
cmpsl
adc
inc
das
cmp
in
int3
and
je
push
out
add
gs
dec
adc
lret
jb
mov
jnp
popa
cltd
push
leave
push
jl
push
mov
test
adc
xchg
add
mov
push
pusha
sbb
in
xchg
icebp
dec
rcr
dec
push
jo
clc
push
dec
xchg
divl
fistps
dec
subb
sub
mov
xchg
cli
mov
xor
lcall
fwait
jb
out
mov
jns
mov
add
add
sbb
cmovl
and
rcl
cltd
mov
lcall
inc
and
pop
add
int
and
or
in
pop
and
test
cmpsl
mov
sub
adc
adc
fcompl
mov
daa
add
into
or
xor
dec
imul
jne
add
add
icebp
push
insl
loopne
leave
adc
cltd
pop
lods
push
xchg
js
xchg
cmpsb
adc
mov
jle
inc
and
sbb
insl
mov
sbbb
mov
xchg
xchg
call
push
sub
or
mov
cmc
movsl
scas
xor
cs
pop
jle
ret
mov
fisttps
dec
jno
icebp
imul
mov
rcl
sub
in
jmp
lea
insl
cwtl
out
xor
scas
lret
add
dec
shlb
cltd
sub
xlat
sub
sahf
test
jle
enter
dec
ret
lea
mov
mov
cmp
and
jno
inc
cmp
adc
jno
sti
push
and
mov
lods
mov
ss
pop
div
out
xor
jbe
sub
leave
mov
dec
dec
paddb
mov
pop
mov
xor
xchg
repnz
cmp
jg
dec
pop
hlt
cmpsl
add
iret
bound
push
je
xor
mov
push
adc
add
imul
pushaw
jmp
jmp
call
stos
and
dec
push
hlt
adc
mov
out
inc
and
jmp
cmp
es
push
subl
fwait
add
enter
sub
jbe
jle
pop
dec
incl
push
test
or
rorb
xchg
pop
push
pop
inc
push
mov
or
in
push
push
data16
test
mov
dec
repnz
movsb
pop
jle
fstps
and
imul
out
xchg
push
lods
or
imul
fs
jmp
or
jle
jns
lahf
fdivrs
fs
stos
push
arpl
adc
xchg
dec
ret
add
and
sub
mov
icebp
adc
imul
scas
cmp
call
push
sbb
popa
testl
cmp
mov
ror
adc
mov
push
jge
and
lret
add
or
adc
aas
test
jno
adc
pop
pop
add
dec
notl
jno
cmp
test
mov
xchg
cmp
mov
mov
dec
enter
inc
cwtl
mov
jnp
xor
fcoml
mov
inc
inc
dec
movsb
clc
sbb
arpl
mov
jge
cmpb
cmp
mov
sub
roll
xlat
dec
jbe
rcrl
add
jle
pop
repz
jo
mov
dec
mov
mov
xor
add
rcrl
outsb
lea
sub
bound
jo
inc
pop
mov
or
pop
mov
repnz
dec
push
add
push
in
cmpsb
jge
or
ja
inc
jbe
jnp
or
jl
pop
cmc
push
sbb
pop
movsb
lret
or
and
roll
pop
add
pop
xor
fs
cli
adcl
adcl
or
mov
inc
fldenv
mov
dec
rcrl
mov
out
sub
pop
xor
ret
xchg
xlat
cmc
daa
jl
push
adc
popf
and
inc
dec
jmp
cmp
and
sahf
add
mov
imul
add
icebp
pop
je
inc
rcrb
mov
dec
int3
ret
mov
adc
or
push
sub
or
je
jle
hlt
add
add
into
inc
orb
imulb
ficoml
stos
imul
lcall
decb
inc
sarb
mov
xor
cs
movsl
jae
jnp
or
add
push
cmp
mov
xor
xor
call
ja
xor
insb
xor
mov
lods
rcrl
int
repnz
adc
aaa
xchg
xchg
jg
sti
mov
pop
jne
and
jecxz
dec
push
and
dec
dec
sub
pushf
sbb
xchg
pop
sarl
inc
jl
xchg
jg
jae
les
or
sub
sbb
notl
test
cmpsb
neg
rol
pop
or
addr16
clc
jmp
jae
cmp
sarl
xchg
cltd
ja
or
mov
inc
stc
push
pop
cld
sub
fwait
sub
jb
clc
xor
mov
orb
int
mov
sub
out
stos
call
and
inc
pop
cmc
rcr
push
out
movsb
add
xchg
sub
jbe
data16
insl
xchg
or
leave
inc
jo
jae
jmp
xchg
fsubrs
lds
pusha
js
popf
leave
lds
or
gs
cltd
pusha
stc
cld
jmp
aas
inc
sbb
pop
cli
aaa
dec
cwtl
lahf
xchg
push
out
iret
jl
aas
sarb
scas
mov
das
in
nop
outsl
mov
adc
hlt
xchg
in
mov
cmp
pop
mov
sbb
fwait
inc
push
sub
and
dec
shld
mov
ret
adc
inc
das
cltd
fcompl
cmp
push
ja
cld
cld
xchg
inc
push
rcl
push
inc
pop
test
mov
arpl
adc
dec
sbb
pop
cmc
mov
mov
in
push
jl
mov
ss
jmp
adc
xchg
cmpsl
push
jp
xor
inc
dec
imul
dec
les
gs
or
cs
adc
cmc
lods
mov
hlt
cmp
dec
xor
movsl
mov
sbbb
mov
leave
imul
mov
push
xchg
xor
xchg
adc
je
cmpsb
test
repnz
dec
sbb
mov
out
insl
dec
mov
xchg
or
push
fcoms
adc
fdivs
jno
mov
jno
popf
testl
fwait
fwait
xor
int3
inc
adc
pop
je
mov
ret
subl
sbb
decl
jo
pop
andl
lods
sbb
jl
xchg
std
into
std
sbb
not
jne
xchg
clc
cmp
jecxz
mov
jmp
leave
or
mov
ficoms
je
jb
sbb
test
adc
xchg
and
add
stos
inc
out
mov
dec
roll
clc
leave
push
lods
xor
jnp
cmc
sahf
pop
cmpsl
lea
insl
sysret
jno
dec
xor
aam
js
subb
inc
push
daa
movsl
cwtl
cmp
cmpsl
inc
stos
jl
push
popf
ds
dec
aam
xor
inc
movb
clc
outsl
push
dec
imul
push
xchg
repz
inc
push
movl
aad
jnp
shrl
mov
pop
icebp
inc
dec
mov
lods
repz
mov
or
jmp
push
cmp
jae
inc
push
stos
adc
mov
or
cmpsb
pushf
into
pop
subl
data16
pop
push
push
sub
add
push
iret
icebp
fwait
pop
dec
pushl
lret
adc
push
loop
dec
jge
hlt
inc
rol
je
mov
es
xor
std
iret
or
inc
loope
inc
dec
int
xor
jp
outsl
mov
psllw
push
mov
pushf
out
in
sbb
sbb
in
adc
push
jae
aad
add
sub
test
sbb
mov
sub
pop
loop
jns
dec
jns
ss
xchg
leave
mov
xor
fwait
jmp
push
aam
lods
dec
mov
cmpsb
int
shrl
mov
fldl
lahf
xchg
fwait
test
xchg
mov
and
and
pop
test
leave
bound
fcomp
pushf
lods
arpl
aaa
and
ja
shl
xchg
mov
xchg
sarl
loopne
rclb
jno
jg
push
push
ja
jg
sub
fidivl
mov
pop
testl
jge
movsb
roll
jmp
add
aas
jnp
adc
aad
add
sub
mov
jge
addr16
mov
imul
mov
mov
pop
xchg
mov
adc
jno
jp
push
int3
inc
jl
jne
xchg
aas
push
cmp
mov
and
xchg
jno
mov
sbbb
scas
jecxz
cs
xchg
shlb
or
dec
xor
je
push
pop
cltd
and
insl
in
sub
popf
mov
sub
push
jne
lret
lds
js
lock
rclb
fmuls
sub
pushf
add
xchg
nop
mov
sar
dec
xor
imul
xor
test
push
sahf
jbe
movsb
fnstcw
lds
mov
std
push
ljmp
loopne
loop
lret
jno
lret
sbb
mov
mov
pop
cltd
sbb
call
xor
adcb
pop
xor
jl
imul
lods
daa
pushf
mov
jne
int3
inc
fdivrl
and
mov
add
xor
mov
unpcklps
and
dec
jne
sbb
out
mov
jnp
negb
jl
fdivr
sub
std
mov
jl
cld
icebp
or
and
sbb
and
sub
rclb
and
jb
outsb
xor
cmp
mov
outsb
ret
mov
loopne
cli
idivb
int3
pop
inc
rcrl
mov
bound
ss
popa
vcvtss2sd
incb
xchg
adc
xchg
mov
pusha
sub
test
pushf
ljmp
cmp
repnz
stos
cmp
pop
ljmp
jl
xor
mov
push
xchg
mov
lds
inc
test
cs
sub
cld
push
dec
xor
subb
dec
add
dec
cmc
shlb
xchg
push
call
stos
je
fcoml
ds
andb
inc
movsb
xchg
inc
jmp
scas
sub
insb
clc
das
lea
jmp
daa
push
sbb
nop
jle
je
and
data16
imul
jo
pop
imul
or
jb
xchg
clc
mov
mov
out
mov
dec
sub
in
or
dec
push
mov
push
es
cmp
shrb
mov
dec
push
scas
mov
dec
iret
fs
add
add
add
jno
dec
lock
cmp
cmp
inc
repz
lds
mov
xchg
dec
fisubrs
dec
push
ret
leave
and
sub
into
std
adc
lcall
aaa
push
pop
ljmp
xchg
mov
je
or
mov
outsb
shrb
sbb
arpl
push
xor
cmp
ss
in
push
loope
cmp
aam
insl
mov
dec
gs
push
lea
inc
repnz
adc
pop
pop
dec
or
fistps
mov
jge
xchg
leave
fstl
ror
inc
daa
in
lret
xlat
lods
out
add
mov
jae
jp
lods
cmc
imul
mov
and
ret
movsb
sub
jge
mov
jge
jbe
push
push
xchg
mov
incb
pop
push
fstpl
mov
test
push
sbb
xor
fld
push
repnz
sub
out
arpl
mov
das
xchg
push
int3
inc
movsl
mov
ss
ror
ss
mov
pop
cltd
xchg
add
mov
mov
lret
cmp
add
mov
inc
fsubrp
out
lahf
sub
mov
loop
xor
mov
jmp
fiaddl
push
shlb
xor
jp
dec
mov
jl
and
xlat
or
aad
mov
sub
lret
mov
cltd
jo
jp
pop
dec
call
push
xlat
lret
fnstenv
mov
xor
inc
xlat
and
insb
mov
sbb
fmuls
arpl
xor
xlat
jg
mov
rcrl
imul
lcall
fs
dec
es
push
sub
jo
and
inc
mov
les
add
loopne
push
jecxz
aad
rcrl
aas
xchg
xor
push
arpl
insl
gs
mov
add
or
dec
xchg
cmp
mov
sbb
sub
lahf
xchg
dec
jle
add
sub
leave
lea
inc
rclb
cmp
insb
xchg
or
sbb
daa
push
fst
cmovs
sbb
mov
cmp
mov
mov
gs
insl
bound
sti
push
bound
push
ret
std
push
push
cli
add
inc
xchg
and
movsl
push
ljmp
mov
mov
xor
add
fwait
add
fwait
stos
cmpl
arpl
imul
dec
pop
sub
pop
popa
data16
es
shll
lret
sbb
fidivs
sub
xchg
ffree
dec
mov
scas
lods
mov
push
cmpsb
icebp
addr16
insl
mov
fadd
in
test
in
cmp
or
dec
push
movsl
cmpsl
pop
sbb
loop
cs
cs
sub
ljmp
aas
mov
fwait
add
jne
mov
jle
mov
adc
jo
cwtl
mov
mov
or
ja
inc
call
cmc
dec
push
in
lods
aaa
movl
pop
dec
push
jbe
loope
pushf
arpl
imul
xor
aad
dec
pusha
dec
jle
jmp
mov
sub
sub
lret
xchg
push
dec
xchg
jno
sbb
fdivr
sbb
push
or
jl
loopne
adc
add
inc
inc
push
movsb
push
mov
fimuls
andl
arpl
mov
js
arpl
ljmp
lods
enter
ja
cmp
xchg
xor
xchg
jno
push
mov
mov
push
mov
shrb
adc
dec
insl
jbe
jnp
loope
xor
or
dec
movb
ret
loopne
lahf
pop
gs
jno
push
xchg
sub
cli
mov
lret
aaa
dec
push
sub
lret
repnz
cmpsb
mov
imul
push
test
push
pop
and
xchg
scas
dec
dec
add
cmpsl
out
and
mov
and
mov
cmp
xor
dec
inc
aaa
sbb
decb
mov
cmp
cld
inc
ret
xor
dec
xor
das
mulb
pushf
jp
push
inc
xchg
cmc
cmpsl
jno
push
call
cmp
movsb
ljmp
inc
in
inc
and
shl
xchg
jno
cld
loope
dec
add
jg
movl
arpl
cmpb
or
loope
ficoms
xor
pop
mov
cmp
popf
mov
sub
inc
into
mov
sub
les
mov
pop
or
ficoms
fsub
cmpsl
push
push
stos
inc
add
pop
popa
add
lahf
aas
mov
dec
iret
and
stos
add
test
mov
xchg
mov
dec
icebp
cmc
sti
push
jp
addl
add
xchg
pop
outsb
cmp
sbb
xchg
test
cmpsl
and
mov
jne
rolb
mov
shl
push
push
lahf
fs
in
dec
mov
bound
cmpb
test
xor
mov
pop
insb
pop
inc
sub
icebp
test
push
lods
icebp
or
inc
ljmp
lcall
adc
lret
jmp
std
in
aam
outsb
lahf
fists
bound
xor
pusha
or
push
sub
imul
imul
mov
lret
xchg
in
les
pop
push
jp
pop
out
lret
sbb
fldenv
cmp
inc
loopne
ljmp
or
cli
cltd
rcrb
sub
popf
dec
pop
lods
jecxz
jbe
inc
inc
push
or
sbb
or
cld
push
xor
cmp
shll
push
ja
data16
jae
lahf
pop
jb
push
pop
int
sbb
imul
xchg
add
lcall
mov
dec
movsl
outsb
dec
ljmp
je
clc
lock
leave
mov
or
pop
sbb
cltd
mov
lret
test
outsb
xchg
stc
jecxz
arpl
mov
sbb
push
enter
out
jle
fimull
jno
fcoms
in
int3
leave
popf
lret
dec
js
jecxz
mov
cmp
sub
psubw
fs
push
mov
repnz
inc
pusha
jns
daa
jmp
inc
enter
push
jbe
fisubs
add
inc
mov
ljmp
and
scas
and
fnstsw
pop
push
cmpsl
mov
lods
push
std
lcall
mov
call
out
cld
inc
xchg
decb
fildll
test
lods
jnp
adc
cwtl
lahf
lret
cmp
pushf
or
leave
cmpsl
mov
rcr
fnstcw
inc
loop
xchg
mov
test
scas
mov
lods
imul
cmpsb
cmp
pusha
add
jge
fwait
cmpsb
sub
xchg
jg
and
mov
mov
jns
pop
xchg
fidivrs
dec
xchg
pop
fiaddl
in
push
adc
or
int3
sub
sub
pop
xchg
push
rcrb
sahf
xchg
cmpsl
sub
and
pop
push
fcomp
int
xchg
adc
jno
sub
cmpb
mov
out
pusha
bound
lods
dec
into
fs
add
xor
ljmp
jo
sub
push
push
sbbb
roll
mov
or
xchg
fs
mov
xchg
fs
out
and
sub
outsb
ss
out
and
cmpsb
mov
inc
pop
xchg
ficomps
je
ja
mov
popa
in
mov
lea
xchg
leave
add
out
pop
or
dec
sbb
mov
push
push
loopne
mov
dec
push
cmp
adc
lret
cmpb
pop
cmp
cli
repnz
mov
adc
xorl
js
loop
clc
mov
inc
scas
xor
popa
jmp
filds
adc
push
and
cmpsb
lret
lods
sahf
test
xor
dec
sub
jne
inc
ds
push
popf
sbb
mov
add
ja
cltd
int3
or
js
jl
or
into
fbstp
dec
pop
aad
je,pn
pop
stos
loopne
xor
add
sub
cli
enter
jbe
shr
jno
addb
sbb
mov
movsl
fnstcw
pop
jns
fsubrl
incb
pop
ret
xchg
sub
popf
test
xchg
and
popf
push
inc
sbb
cld
jl
out
or
jo
ljmp
data16
lock
or
sub
mov
add
push
call
iret
mov
sbb
aam
dec
dec
push
and
dec
fwait
inc
call
out
lea
ret
stos
sub
dec
dec
xchg
lods
repz
xchg
aad
mov
or
push
lcall
xor
loop
addr16
pop
or
popa
jl
sbb
loopne
pop
sbb
push
je
jmp
dec
cltd
sbb
out
lahf
es
dec
sbb
jp
cmp
ret
cmp
sbb
pushf
cli
cs
ret
mov
mov
in
mov
in
mov
int3
fnsave
lahf
int
in
pusha
gs
movsb
popf
mov
in
testl
outsb
push
push
insb
sub
aam
outsb
mov
dec
sbb
push
mov
repz
add
push
daa
test
imul
or
mov
enter
dec
adc
push
clc
dec
sbb
jle
pusha
xor
rorl
out
popa
icebp
inc
add
mov
sub
int
cltd
daa
es
fisttpll
call
lds
rcr
std
pop
aam
mov
sbb
jle
sbb
or
cmp
xor
rcrb
sbb
jbe
cmp
dec
add
cmp
push
push
mov
push
inc
je
inc
pushf
push
sub
sarb
lret
je
jae
push
mov
or
pop
shrl
inc
or
jnp
add
aas
push
shrl
and
call
ficoml
cld
sbb
xchg
int
mov
test
and
sbb
and
movsb
movsl
int
call
mov
outsb
and
mov
ds
shll
lock
and
rclb
aas
adc
test
nop
dec
xor
and
mov
ljmp
xchg
xchg
xchg
sub
bound
shlb
testb
subl
jne
mov
loopne
push
mov
nop
mov
ljmp
xchg
data16
adc
repz
mov
aad
cmp
sbbb
inc
imul
or
lea
daa
pcmpeqw
pushf
adc
les
mov
shll
mov
or
loop
repz
ror
fwait
notl
movsb
push
aaa
jb
mov
testl
out
adc
mov
mov
mov
adc
movb
bound
xor
lock
test
mov
sub
inc
and
cmpsb
enter
jno
mov
shrl
jne
jmp
sbb
testb
movsb
outsl
mov
inc
mov
std
shlb
jb
fidivs
jae
or
add
dec
sbb
cmp
push
pusha
cmp
and
pop
sbb
xchg
xor
inc
jmp
dec
out
ja
pushw
test
call
daa
rolb
cwtl
popl
cmc
mov
fidivrl
xor
jne
aam
scas
sub
shlb
lcall
mov
jbe
out
pop
in
inc
and
inc
lds
test
or
imul
sbb
repz
jnp
jne
popf
lea
or
aad
push
loop
movsl
int3
data16
getsec
jle
adc
fcomps
jns
and
adc
dec
jne
xchg
inc
inc
push
jmp
mov
mov
jle
push
sar
divb
adc
dec
ljmp
mov
mov
adc
jg
into
inc
ret
lods
stos
pop
ret
pushf
and
sub
ja
push
ret
push
maskmovq
idivl
pop
and
imul
aaa
inc
cmp
xchg
lcall
je
dec
or
push
test
push
push
inc
cld
clc
push
push
push
cmp
inc
sub
shll
sub
push
mov
sub
pop
orb
adc
test
mov
scas
test
push
mov
arpl
xchg
rcr
xchg
je
shl
inc
imul
in
adc
pop
add
inc
es
mov
nop
cli
xor
pop
xchg
iret
jo
lret
cs
add
mov
jbe
fcmovnb
insb
cli
pop
mov
or
mov
sbb
mov
inc
cwtl
es
push
lret
jne
pop
xor
es
mov
and
jns
pop
into
ss
xor
mov
jmp
mov
mov
dec
jae
sbb
sbb
jg
movsl
test
std
sub
std
or
pushl
inc
adc
outsl
sub
mov
push
mov
push
jp
mov
mov
cmp
lock
loope
pop
test
call
ja
mov
xor
lods
add
testl
fnstsw
gs
adc
dec
daa
test
inc
int3
mov
mov
cmpsb
push
and
pop
or
insb
push
inc
in
mov
lock
adc
jb
jne
push
mov
daa
fs
and
xor
fnstsw
pop
mov
pop
inc
jbe
xchg
mov
inc
loopne
fisubl
xchg
dec
sbb
ss
or
out
pop
repnz
aad
imul
leave
xor
cmp
leave
mov
jb
in
aaa
outsb
cmc
push
pop
push
push
jmp
fists
lret
clc
bound
lret
jnp
in
cmpsb
das
fdivrs
jle
dec
mov
add
fmull
xchg
outsb
js
pop
xchg
mov
cmp
or
divb
fbld
jbe
mov
lods
push
js
mov
outsb
push
popf
sahf
and
lds
pushf
stos
pop
loopne
into
loopew
shll
les
pop
lretw
out
loop
and
add
mov
dec
and
xor
or
adc
sbb
and
adc
sub
sahf
iret
lea
pusha
imul
in
je
repnz
aad
xchg
and
pushf
fsubr
mov
rolb
aam
push
xor
mov
and
push
xor
aam
cs
lds
or
fildll
or
cwtl
sbb
insl
add
push
scas
js
xor
or
out
add
scas
data16
das
jo
daa
xchg
outsl
and
aad
or
jecxz
ljmp
shl
sub
mov
iret
pop
add
push
adc
or
sbb
mov
fwait
mov
jns
aaa
and
adc
and
sar
jae
out
mov
arpl
xor
clc
test
enter
mov
mov
xchg
jg
mov
in
adc
mov
sarl
loope
sub
fldt
dec
push
loope
shrl
push
xor
in
and
xor
out
movsl
fcoml
lods
aam
jne
jno
sbb
orl
pop
adc
int3
sbb
jmp
dec
iret
out
mov
sub
xor
push
lods
aad
je
adc
ficompl
out
mov
fimull
jg
mov
in
jnp
mov
test
stos
subl
ret
cmp
lds
mov
or
insl
aam
cmp
inc
call
fildl
push
push
xorb
lds
mov
out
ds
mov
les
add
push
sub
test
xchg
outsl
push
insl
cmp
test
dec
pop
out
cmp
dec
mov
mov
dec
aam
addl
enter
mov
gs
or
call
inc
pop
mov
out
adc
lcall
or
add
add
int3
fs
loop
push
imul
mov
jb
ja
icebp
ds
jl
dec
rol
int
xchg
xchg
push
test
jnp
incl
rcrl
aas
sbb
mov
lret
clc
dec
push
jo
adc
pusha
xchg
jecxz
testl
mov
loopne
xchg
cmpsb
mov
gs
xor
sub
or
outsl
jne
push
pop
sahf
pop
jae
inc
sub
mov
sub
enter
add
inc
stc
push
sbb
mov
into
nop
test
cld
aam
aaa
push
subb
cs
vsqrtss
test
mov
push
leave
jp
ret
jb
mov
cltd
xchg
mov
jno
inc
push
push
sbb
loopne
pop
dec
and
cmc
lock
outsb
sub
repz
dec
js
sub
xor
movsl
fisubrs
icebp
jne
or
sbb
in
jae
loope
mov
hlt
mulb
inc
mov
insl
mov
xchg
pop
push
sbb
mov
add
add
sbb
or
data16
sti
and
daa
push
js
in
or
shll
sub
shlb
jno
sub
mov
cmpsb
into
lret
push
inc
and
jle
and
jle
and
inc
rcrl
cltd
js
leave
push
xchg
bound
jo
int
mov
jle
sbbl
or
arpl
std
lds
cmp
inc
xchg
shlb
or
cmp
or
jg
les
pop
xor
nop
jbe
push
nop
and
sbb
dec
sub
cmpsb
add
into
xchg
movsl
and
mov
add
or
das
test
imul
push
add
rcl
jle
adc
hlt
jmp
mov
mov
cltd
orl
sub
jg
cmp
push
out
inc
into
push
add
inc
movb
mov
sbb
dec
lds
out
cld
stos
add
mov
pushf
ret
js
cmp
pop
jle
xorl
stc
aam
test
inc
imul
dec
mov
js
xchg
sbb
pusha
cmp
cmp
add
outsb
add
jns
or
sbb
imul
pop
outsl
ror
mov
cmp
or
call
mov
aam
std
out
cmc
stos
xorl
jmp
jnp
hlt
aam
adc
sti
in
cmp
push
xchg
mov
dec
inc
mov
push
test
pushf
jne
pop
ja
add
dec
lret
call
fstl
and
or
dec
mov
pop
adc
inc
leave
sub
addl
inc
popf
clc
pop
fbld
inc
jg
outsl
push
shll
inc
sarb
xor
add
xchg
pusha
mov
ss
mov
adc
clc
stos
cli
popf
cmc
cwtl
ja
sub
xor
mov
leave
daa
ja
mov
dec
popf
mov
inc
faddl
cwtl
jno
gs
in
sub
inc
sbb
rcl
jmp
xchg
mov
mov
sbb
and
int3
js
pop
push
sub
dec
mov
xor
pushf
jp
add
sbb
or
sbb
int3
repz
out
sub
mov
inc
jae
int3
dec
mov
dec
sbb
icebp
jle
filds
les
push
mov
cmp
fucomp
cmp
outsb
mov
in
mov
stc
adc
iret
cmpsb
sbb
dec
jne
inc
shr
add
je
push
jo
inc
icebp
ja
inc
shrb
push
push
push
adcb
dec
inc
mov
insb
inc
lcall
into
xchg
push
fsts
ja
xchg
clc
dec
and
js
sahf
xor
imul
popf
push
xor
and
mov
push
adc
iret
outsb
loopne
dec
lea
in
hlt
dec
inc
xchg
xorb
mov
mov
jbe
rol
xchg
mov
mov
cld
out
mov
sub
mov
inc
push
cmp
notl
roll
insb
mov
and
bswap
test
sarl
jno
test
mov
cld
lahf
js
popf
dec
cmc
hlt
dec
inc
push
andb
dec
sub
andb
leave
inc
inc
xor
stos
gs
in
mov
inc
js
leave
cs
gs
xchg
lahf
xchg
inc
ret
sub
xor
jae
jp
pushf
popf
imul
or
arpl
xchg
sbb
sarb
mov
outsl
shrb
aam
jb
fdivl
jle
pusha
cli
std
popf
hlt
call
js
aam
sub
xchg
scas
or
jmp
cld
xchg
mov
push
push
imul
mov
adc
adc
out
mov
and
or
sbb
popa
cmpsb
divl
cmp
aas
inc
pop
data16
jl
jmp
push
sahf
sub
mov
in
mov
jbe
scas
imulb
mov
and
in
je
cmp
mov
mov
icebp
cmp
icebp
cmp
outsb
or
ret
stc
pop
and
mov
enter
in
dec
lea
push
cmp
sub
stos
inc
inc
mov
inc
in
aas
inc
inc
in
xor
fistps
mov
fnstcw
mov
pop
rolb
jno
pop
out
adc
lret
arpl
lcall
push
jno
lret
dec
je
jno
ficoml
rolb
dec
insl
les
dec
std
mov
pop
repnz
push
dec
shl
iret
and
pop
dec
dec
jge
mov
and
pushf
and
lret
jno
popa
mov
fidivrl
add
jno
inc
xor
test
mov
movsl
test
test
push
int3
and
add
cmp
pop
fwait
mov
xchg
and
mov
test
test
scas
test
call
cmp
iret
sbb
mov
pushf
inc
jmp
stos
ret
mov
dec
fwait
cmp
pop
jae
push
movsb
cmpsl
cltd
xlat
sahf
jne
inc
sbb
xchg
fs
push
sub
loopne
jae
call
dec
push
stc
lahf
int3
lcall
es
jmp
in
iret
push
inc
push
inc
pop
ds
sub
adc
ja
sub
adc
push
pop
xchg
stos
stos
pop
inc
xchg
roll
push
sub
je
inc
pop
and
xor
cmp
inc
or
mov
inc
loopne
sbb
xor
stos
cmpsb
shrl
dec
xchg
pop
push
clc
pop
imul
fiaddl
mov
sbb
cld
or
xor
aad
adc
icebp
fbstp
sub
cli
sbb
popf
dec
lahf
popa
leave
pop
gs
aas
insl
lahf
cmp
inc
int
dec
xor
daa
insl
ja
or
push
xchg
or
loopne
xchg
test
jle
aas
in
mov
push
cmp
or
xor
int3
pop
push
sub
sub
adc
mov
imul
push
add
jnp
mov
iret
dec
sbb
leave
jg
shrb
cmpsw
cmpsb
jb
scas
pop
imulb
and
adc
inc
and
fs
hlt
push
push
js
mov
imul
cmp
scas
stc
dec
ret
not
pop
arpl
jo
orb
jno
xorb
push
test
imul
stos
dec
mov
add
dec
mov
ret
mov
pop
imul
add
inc
jmp
call
test
shlb
jns
inc
sub
cmp
add
imul
jp
dec
jp
add
adc
sub
fnstenv
cmp
daa
mov
jmp
add
xchg
sub
imul
push
jne
xchg
xor
ret
xchg
push
jle
cwtl
add
pop
ret
fwait
xor
mov
and
push
ds
jbe
pop
add
inc
sub
push
jb
mov
imul
xchg
xor
mov
test
fcompl
mov
jle
and
stc
out
add
sbb
jno
repnz
dec
popa
and
dec
sbb
sbb
lahf
clc
mov
es
fnstsw
mov
pop
dec
jnp
cmp
in
push
xchg
push
lret
jno
pop
mul
rorl
mov
dec
lret
pop
cmp
outsl
arpl
roll
dec
jo
pop
xor
mov
jle
xchg
adc
ret
add
add
mov
xor
sbb
xchg
push
lds
scas
cmp
rclb
rcl
ds
cmpsb
push
in
out
or
mov
jge
sub
ret
inc
shrl
sub
call
in
mov
jl
stc
daa
lret
outsb
sbb
les
aaa
daa
mov
mov
in
test
xor
mov
inc
cli
push
outsl
pop
stos
loopne
out
sbb
movl
mov
push
arpl
repz
add
mov
out
cld
loopne
xchg
jno
stos
push
xlat
sar
cltd
mov
jo
add
and
inc
mov
or
jo
clc
fwait
mov
pusha
mov
inc
mov
and
pushf
ficoml
or
loope
push
xchg
add
cmpsl
cmpsl
push
inc
rolb
adc
mov
popa
adc
add
or
pushf
jne
jae
out
pop
stc
loope
js
out
inc
lret
jp
push
mov
sbb
movsl
cmp
dec
aam
xchg
ret
fs
cwtl
pop
test
jg
out
icebp
or
fildl
xchg
lret
out
int3
add
sbb
mov
push
fucomip
loop
add
push
pop
lods
jbe
ljmp
or
inc
pop
sbb
leave
mov
push
jg
ds
fildl
jb
cmovp
or
and
mov
and
lahf
add
pop
fcomps
cld
xchg
cld
out
jecxz
jge
popf
jo
sub
sbb
pushf
ficoms
pop
mov
push
out
mov
pushf
inc
dec
adc
lret
and
sub
fdivrl
and
fcomps
xor
dec
ds
xchg
jb
mov
sbb
jo
pop
pop
lock
icebp
pushf
and
xchg
je
fcom
mov
xchg
filds
cwtl
iret
shll
repz
repz
dec
or
imul
lret
outsb
adc
fsub
mov
mov
out
shlb
and
imul
sub
sbb
pop
or
sub
xchg
insb
scas
cmc
sub
cmp
push
push
mov
jae
xor
push
push
pusha
lock
lods
out
xor
jmp
scas
push
inc
sub
popf
inc
mov
dec
jno
mov
inc
sub
jbe
insl
cmp
cmp
jge
jl
adc
popa
pushf
inc
push
imul
push
imul
sbb
repz
xor
testl
je
data16
jns
jmp
mov
sbb
push
movsl
outsl
push
jbe
or
xor
lret
cwtl
fcmovu
clc
push
lock
out
jl
imul
cmp
gs
inc
std
imul
inc
movsb
xlat
std
shrl
mov
pop
cmp
push
dec
repz
mov
push
test
lret
inc
fs
dec
dec
jmp
inc
mov
lods
mov
inc
xor
fimull
pop
std
push
into
sbb
gs
out
push
pop
add
in
add
dec
test
jmp
imul
sub
push
or
jle
in
xchg
pop
xchg
js
mov
xchg
and
movsl
jge
xchg
mov
cs
dec
pop
arpl
fwait
js
sarl
das
mov
push
xor
add
je
cmp
push
add
inc
pop
les
movl
pop
pop
add
jp
or
outsl
mov
push
test
mov
leave
inc
xchg
enter
cmpsb
jge
call
leave
cs
les
out
mov
aam
pop
pop
add
stc
fbstp
add
sti
jp
notl
stc
or
pop
shrl
add
in
mov
imul
cs
cmp
inc
rol
in
adc
mov
sbb
lret
jg
inc
jnp
lds
xor
bound
cmp
dec
idivb
sbb
push
mov
adc
into
aaa
cwtl
je
jge
inc
movb
sub
pusha
popa
hlt
lods
stos
inc
jae
les
inc
sbb
imul
inc
ficomps
pop
outsl
inc
loope
pushf
push
outsl
sbb
pop
and
iret
add
rclb
stos
les
loop
cmpl
lea
mov
ds
addr16
call
push
scas
pop
fimuls
shll
bts
jmp
sbb
sahf
sub
sbb
xor
test
test
mov
imul
push
adc
js
jle
and
roll
cwtl
in
jns
inc
or
imul
mov
in
loopne
jmp
adc
clc
fwait
bound
mov
mov
jne
add
sbb
lahf
sub
lret
mov
insb
gs
xor
jbe
xor
ret
daa
mov
pushf
push
inc
dec
add
insb
mov
das
filds
sbb
push
pop
mov
pop
lcall
cltd
test
mov
gs
push
dec
xor
sub
fs
sbb
pop
dec
es
cli
stos
inc
mov
lret
dec
mov
push
cmp
push
mov
lea
stos
ja
adc
or
sbb
std
mov
ljmp
dec
fbld
xchg
pop
xchg
gs
xchg
sub
push
mov
adc
dec
xor
inc
ret
negb
mov
xchg
dec
push
vsubss
inc
pop
dec
loopne
pop
outsl
out
jecxz
sbb
inc
sub
ja
mov
mov
cmp
adc
addr16
cmpsb
mov
add
movsb
sub
cmpsb
inc
sbb
push
cmp
mov
stos
rcrl
mov
popf
sub
orl
xchg
jo
fsts
and
jne
push
mov
aaa
mov
shll
cmp
je
stos
pop
sti
xlat
pop
call
icebp
xchg
out
into
pusha
cltd
xchg
pusha
outsl
shrl
sub
stc
push
jmp
xor
out
pop
test
and
cmp
pop
pop
mov
imul
or
mov
sub
rorb
outsb
xor
jnp
inc
xor
dec
stos
popf
ljmp
cmp
bound
outsb
fbld
push
mov
dec
je
cmp
xchg
test
bound
jl
aas
das
dec
test
dec
cmc
out
fistpl
out
mov
arpl
sbb
adc
xchg
in
jne
add
cmpsb
fst
dec
das
dec
jbe
shll
call
pop
pop
scas
and
fisttpl
shll
push
push
inc
push
push
inc
ret
jae
fwait
and
sbb
call
mov
cmp
sbb
xor
inc
mov
pop
mov
mov
cmp
adc
imul
mov
cwtl
or
inc
lret
xor
inc
loop
mov
sub
mov
insb
cmp
mov
stos
js
ret
adc
dec
add
cmp
movsl
jmp
add
std
movsl
mov
sub
and
xor
pushf
jns
imul
mov
sbb
xchg
popa
test
xor
or
incl
cmc
mov
loop
cwtl
xchg
pop
and
xor
fistps
imul
inc
fsubrl
pop
shlb
mov
notl
data16
mov
jo
dec
sub
jge
xor
and
push
mov
loope
aad
gs
lret
aas
iret
sbb
cli
fwait
xor
sbb
cmc
pop
or
push
add
gs
push
loop
dec
imul
sub
aad
aas
xor
jl
push
add
mov
xor
stos
adc
sahf
push
testl
push
push
dec
sahf
push
test
jmp
xchg
je
and
lret
leave
shll
inc
push
jb
cmp
xchg
pop
add
stos
lds
push
aas
fidivrl
xor
test
daa
xor
xchg
push
dec
icebp
inc
jg
fmull
testb
fisubs
test
cmpsb
gs
push
cmp
and
roll
mov
adc
push
lcall
test
mov
loop
fsts
les
out
in
in
mov
cmp
movsl
lods
bound
outsl
mov
out
loopne
cmpsb
or
je
mov
mov
ret
lret
iret
jnp,pt
adc
outsl
or
dec
jge
inc
cmp
and
pushf
test
pop
sti
clc
lcall
shlb
jecxz
inc
addr16
mov
inc
ljmp
mov
pop
leave
in
pop
in
add
pop
dec
out
push
xor
lret
lea
sahf
mov
adc
lahf
push
add
mov
cwtl
std
mov
je
mull
js
hlt
add
ljmp
je
stc
jno
sahf
lds
faddl
cmp
mov
adc
jp
pop
jge
push
fsubl
dec
cmpsb
cmp
push
test
cwtl
cmpb
jno
push
subb
sub
inc
lcall
ficoml
push
mov
jb
cmc
clc
mov
repz
adc
inc
enter
push
test
cmp
fwait
inc
leave
push
lds
push
cmpsl
fcompl
mov
sub
mov
sbb
cmp
outsb
dec
imul
mov
pop
leave
xor
jmp
lret
fdivrl
lahf
xchg
mov
ret
cmp
sbb
jmp
mov
mov
lret
stos
cmpsb
repz
lret
imul
mov
aam
fwait
cmp
xchg
in
mov
cli
sub
inc
leave
add
inc
add
push
bound
dec
sbb
repz
cli
add
cltd
pop
out
jle
pop
adc
and
jg
inc
inc
call
xlat
mov
push
mov
test
jb
mov
jae
jg
push
mov
cmp
dec
xor
int3
dec
mov
push
pop
adc
mov
dec
sub
mov
in
adcb
mov
sar
adc
inc
ret
out
cmp
mov
popf
jmp
les
dec
shrb
lret
pop
out
xlat
sbb
add
in
popf
mov
mov
fimull
shrl
movsb
das
ret
in
jo
push
clc
fsub
div
or
sub
sub
mov
stos
lret
lret
stc
hlt
cmpsb
out
sbb
cmp
lock
mov
inc
inc
mov
cli
xor
sbb
adc
fisttpll
push
movsb
xchg
test
or
sub
ret
fists
popa
sbbb
sub
xorl
push
dec
movsl
icebp
sbb
lods
push
xor
rcll
push
cwtl
sub
adc
fldt
loope
or
pop
dec
inc
mov
pop
test
jmp
in
jns
sbb
jbe
adc
mov
xor
jo
popf
cmp
jb
dec
cmp
inc
popf
jecxz
mov
inc
jns
movsl
mov
dec
adc
repz
jb
sti
xchg
pusha
repnz
pop
fsts
xchg
cs
jae
dec
repz
sbb
lock
lock
pminsw
and
dec
nop
addb
dec
push
je
sbb
test
gs
and
xor
call
mov
mov
sbb
add
or
add
andb
popa
push
mov
subb
fs
loopne
sub
jg
inc
xchg
pushf
adc
lahf
sbb
xor
push
mov
addr16
mov
inc
rorl
mov
cmpl
xchg
test
pushf
inc
leave
loopne
inc
cmpsl
shll
mov
push
cwtl
mov
sbb
loop
sub
imul
pushf
xor
and
jge
and
add
add
test
fsubrs
rcrb
rolb
pop
push
cmp
or
lock
insb
ret
mov
call
pop
sbb
fisubl
mov
mov
es
pushf
fistpll
fcoml
jae
lcall
adc
out
fadd
push
jne
inc
sub
cmpsb
jge
pop
xchg
out
sahf
push
je
andl
pop
dec
stos
or
dec
ss
test
test
or
pushf
cmp
jg
sub
stos
js
sti
push
push
int3
lahf
addb
imul
in
jnp
cltd
fidivl
push
adc
fmul
xchg
and
push
repz
out
xabort
jmp
lods
lahf
xor
sub
jl
sub
negl
inc
mov
mov
popl
leave
add
mov
daa
jo
mov
jae
mov
sub
fs
or
fisubl
ret
add
push
dec
push
insl
ret
and
and
adc
xchg
pop
fsubrs
or
ja
rolb
leave
xor
inc
mov
hlt
jb
mov
fs
icebp
or
xor
xchg
jns
xchg
ljmp
notl
jnp
adc
phsubsw
inc
pop
xor
fnstenv
mov
fstpl
push
dec
in
sarl
sbb
adc
rcrl
gs
mov
insl
xor
mov
fadds
mov
dec
sbb
dec
int3
mov
cmp
sbb
push
out
mov
adc
cmp
xor
inc
xchg
adc
call
enter
add
test
xchg
outsb
and
andb
je
mov
test
ficoms
sbb
add
test
shrl
movsb
mov
jno
push
in
jmp
mov
shrb
xor
popa
and
push
mov
xor
ss
xchg
cmpsl
and
addl
lock
aas
add
call
sbb
rcll
sti
shlb
xor
mov
out
lds
repz
jl
sub
xorl
movsl
sub
mov
push
inc
shrb
imul
nop
leave
scas
out
mov
inc
movsl
pushf
or
lock
pop
mov
int3
adc
int
sub
sbb
loope
xchg
dec
push
clc
sbb
sub
movsl
sbb
flds
lods
hlt
xchg
lcall
push
mov
adc
shl
js
clc
inc
inc
in
inc
rep
test
clc
shll
imul
mov
pushf
icebp
in
iret
add
das
stos
sub
or
call
fnstsw
adc
xor
push
rcll
arpl
xor
push
adc
mov
and
mov
lret
mov
cli
int3
mov
mov
sbb
jmp
and
xchg
jl
jmp
cmp
dec
jmp
das
ds
test
cvtdq2ps
xorl
add
inc
lret
jno
xor
addb
imul
mov
xchg
call
push
xchg
in
push
and
inc
es
sub
and
loopw
and
ret
xchg
mov
pop
pop
or
dec
roll
xor
add
dec
rol
push
js
push
les
add
push
repnz
pop
pop
push
jbe
push
es
incb
inc
jmp
sub
sbb
and
jge
dec
cld
jbe
push
inc
mov
jp
cld
ret
ret
jecxz
push
out
adc
jne
adc
aas
add
push
push
xchg
pop
shlb
mov
xchg
movsl
or
popa
jnp
iret
test
xchg
inc
fsubr
cltd
mov
fst
adc
mov
ss
iret
jae
mov
loop
dec
and
cmp
sarb
push
insb
out
sub
wrmsr
push
mov
test
cwtl
adc
scas
jb
imul
test
movl
test
add
shll
pop
aad
or
test
mov
ss
pop
call
mov
jl
jns
sub
pop
adc
fisttps
gs
outsb
xor
xchg
push
jns
mov
and
adc
pop
jg
sbb
mov
mov
inc
xchg
xchg
add
push
jns
mov
insl
setne
cmp
pop
dec
idivb
push
xchg
mov
or
push
lds
jne
push
nop
mov
mov
ss
sbb
popa
add
add
pop
mov
cmp
jo
push
aaa
inc
inc
jl
xchg
leave
cmp
add
out
ret
pop
xchg
gs
sarb
mov
jns
mov
jmp
mov
mov
jbe
or
jne
sbb
mov
xchg
std
sub
lcall
ja
or
lea
mull
jne
stc
test
lret
in
pop
mov
dec
pop
test
lock
jo
mov
jmp
or
jp
repnz
inc
jno
mov
movl
rorl
add
lret
lret
cwtl
sub
ret
jae
lods
and
jbe
push
xchg
add
addr16
aad
mov
add
push
lcall
push
jmp
inc
pop
sahf
clc
jnp
in
add
mov
decl
call
test
jbe
ss
mov
sbb
sub
popf
mov
js
push
data16
daa
insb
jns
loope
je
test
mov
xchg
pusha
clc
push
or
sbb
insl
xor
pop
add
in
ds
stos
mov
xchg
ja
repz
pop
and
pop
sub
clc
mov
xchg
in
out
jl
aam
mov
xchg
mov
add
sub
jle
popa
xor
inc
lahf
add
xor
push
rcrl
cmpsb
push
sub
cmp
iret
stc
in
mov
cli
mov
ljmp
popf
stos
inc
xlat
addl
mov
out
lock
gs
pusha
xchg
pop
loop
sbb
aam
lock
test
xchg
jmp
xchg
jo
or
imul
or
and
int
dec
mov
shl
pop
cmc
jmp
push
sbb
pop
arpl
cmp
mov
inc
fwait
ja
add
xor
xorl
push
outsl
movsb
rolb
cmp
cltd
jnp
ret
popf
in
mov
out
pop
in
adc
dec
dec
and
mov
push
pop
mov
jecxz
jecxz
xor
outsb
lahf
pop
mov
inc
xorb
inc
loopne
loope
psubsw
hlt
cwtl
testb
jmp
test
adc
mov
or
mov
xor
out
cmp
lea
cltd
out
sub
sarb
jbe
clc
repnz
popf
pop
ljmp
jb
cli
out
pop
stos
jae
rcrb
pop
jns
outsb
in
es
std
or
es
dec
inc
js
jp
sbb
call
pop
fs
add
pop
add
jns
mov
stos
ret
je
popf
dec
adc
mov
pop
mov
lcall
sbb
xchg
cmp
jne
divb
mov
xor
lahf
mov
fs
jmp
or
jo
iret
xor
imul
insl
push
mov
inc
cmpsb
rclb
popa
cmp
movsb
stos
mov
or
sbb
hlt
fs
dec
sub
roll
mov
leave
xchg
rol
and
pop
shll
adc
lods
xor
sub
stos
mov
dec
dec
mov
or
popa
add
inc
fdivl
ficompl
int
pop
shlb
mov
pop
sub
inc
fxch
xchg
pop
add
out
jl
repz
and
jns
mov
int
gs
out
xor
pop
mov
pop
icebp
repz
ror
and
lods
cmp
in
dec
adc
sub
stos
mov
xchg
pop
jno
mov
pop
sbb
mov
and
xor
fmuls
outsb
pop
jmp
adc
jge
lcall
or
fnstsw
hlt
leave
mov
jle
rorl
and
xor
out
jecxz
or
push
ljmp
lods
sub
mov
nop
out
xchg
add
cmp
scas
dec
xor
movsb
stos
shll
jns
bound
lea
and
and
xor
popa
test
xchg
push
cmpsb
test
int3
fcmovnbe
in
pop
test
lahf
lods
movsb
fs
stc
repz
shrl
push
popa
inc
movsl
lods
and
push
push
in
and
adc
adc
scas
push
add
test
sbb
xor
jne
je
dec
push
inc
push
xor
jg
and
clc
imul
in
xor
mov
jne
dec
rolb
mov
and
les
jnp
leave
xchg
xchg
icebp
dec
add
iretw
add
in
dec
pusha
xor
adc
xchg
cmp
repz
pop
add
cltd
nop
mov
fdivrl
popa
enter
repnz
mulb
xchg
in
mov
aaa
push
adc
nop
pop
lret
mov
data16
push
pop
ja
mov
inc
lret
jecxz
fildl
jns
js
xor
pop
sub
test
fstpl
push
cld
dec
scas
ljmp
sarb
dec
dec
pushf
insb
scas
jecxz
outsl
outsb
jne
push
cmp
mov
push
in
movsb
rolb
leave
movsb
jo
sub
jae
inc
lret
iret
jl
and
push
sbb
cmp
and
pop
add
adc
add
sti
hlt
lea
mov
inc
testl
loop
movsl
mov
lds
push
addb
fistps
push
test
push
outsb
addl
pop
mov
sbb
adc
lcall
xor
jno
bound
jbe
pusha
jmp
mov
shll
popf
pop
dec
push
jne
pop
mov
sub
mov
dec
pop
cs
les
leave
dec
push
pop
mov
push
aaa
xchg
sbb
push
sbb
push
lea
or
lods
orb
sub
inc
cld
rol
cmp
ds
push
and
imul
xchg
jmp
fisubrl
ret
in
add
testl
sbb
pusha
shlb
cld
mov
add
xchg
test
out
cld
clc
loopne
adc
mov
out
mov
stos
fnsave
sbb
dec
mov
or
adc
lcall
popf
in
xchg
push
adc
loopne
jno
push
out
ret
mov
xchg
push
pop
adc
jl
sbb
mov
movsl
jl
cmpxchg
loop
sbb
call
xlat
pop
cmp
insl
cmpsb
stc
xor
or
fbstp
xor
pusha
push
jb
iret
jnp
bound
xchg
stos
pop
nop
push
mov
adc
sub
fildl
dec
cwtl
shlb
outsb
adc
dec
out
negb
xchg
test
or
pushf
sahf
pop
sbb
jl
orb
sahf
inc
xchg
sahf
dec
lds
jmp
pop
sarl
in
xor
cld
popa
push
xor
aam
push
jg
sbb
movsl
insl
cmp
add
cmpsl
xor
nop
inc
mov
add
xor
je
sub
repz
stc
sbb
aaa
push
pop
mov
aam
mov
subps
ljmp
sbb
mov
pop
and
push
stc
pushf
scas
push
xchg
test
mov
jmp
jbe
outsb
jae
cmpsl
xlat
mov
rcll
push
addr16
dec
adc
dec
sbb
dec
xor
xor
add
outsb
je
cmp
jne
jp
stos
icebp
xchg
frstor
push
jne
xchg
mov
dec
mov
or
pop
in
mov
add
push
movsb
jb
dec
movsb
in
jecxz
out
inc
dec
popf
enter
mov
orb
jbe
mov
arpl
popf
or
insb
pop
and
and
and
enter
test
imul
sub
adc
cwtl
or
xchg
xor
enter
push
sahf
xchg
lret
mov
mov
sub
xchg
adc
mov
imul
jle
mov
loope
sbb
mov
pop
pop
fs
je
fs
push
lcall
aad
xor
pop
adc
sub
add
scas
call
add
sbb
pop
jne
and
add
test
and
ljmp
jp
insl
iret
fisubrl
iret
repz
sbb
push
clc
rcll
push
hlt
rcr
stos
ds
or
push
aas
leave
xchg
std
mov
or
cwtl
push
inc
sbb
sbb
mov
in
push
mov
push
lret
pushf
xchg
ja
jle
jg
pop
out
dec
mov
jle
ljmp
pop
pop
shrb
pcmpeqw
loopne
adc
mov
test
mov
dec
sub
shrl
push
cmpsl
in
mov
scas
dec
mov
repz
mov
and
mov
dec
dec
xchg
fcomps
jl
jno
addr16
cmp
aaa
dec
inc
movsl
sub
jge
data16
aam
sub
xchg
stos
adc
pop
arpl
int
adc
mov
mov
jno
or
addr16
fistl
sti
mov
je
fadds
sub
sbb
cltd
in
aaa
and
stc
sbb
test
icebp
inc
pop
lds
arpl
mov
lods
mov
shrl
mov
xor
inc
aad
dec
jno
jle
jle
aaa
mov
lds
stos
push
test
js
jo
mov
imul
sbb
movsl
or
aad
and
shll
sub
cmp
mov
jns
test
and
adc
into
repz
lea
testl
adc
and
mov
loopne
loope
je
push
inc
mov
leave
inc
arpl
and
lods
pop
je
iret
and
inc
pop
test
xchg
shr
pop
adc
outsb
pop
pop
pop
lret
add
scas
mov
cmp
ss
inc
push
jg
outsl
sub
divb
inc
push
movsl
cmp
cmp
xchg
cs
sbb
pop
and
mov
push
xor
lock
sbbb
xor
out
mov
dec
xor
push
mov
pavgw
push
data16
test
cmc
fisubs
sti
mov
pop
sbb
js
xor
xor
in
mov
enter
sbb
and
lcall
jae
sbb
pop
sbb
in
test
out
adc
imul
arpl
shl
xchg
sub
mov
push
jb
inc
call
sahf
push
adc
je
out
mov
sti
inc
pop
in
adc
inc
pop
imul
cmp
pushl
lods
add
lods
mov
cld
sbb
xor
xchg
adc
pop
pop
xchg
dec
push
lds
or
xor
std
xor
test
dec
xchg
out
push
js
in
sub
hlt
or
push
or
test
ljmp
push
sti
add
imul
adc
test
xor
stos
inc
inc
repz
faddl
gs
add
add
jp
aas
data16
cli
stc
pop
imul
add
lock
fwait
ret
pop
lahf
in
shlb
cmpsb
adc
arpl
adc
mov
outsl
mov
in
inc
dec
cmp
outsb
jg
and
stos
pushf
sub
push
ss
dec
ss
mov
out
xchg
xchg
test
jno
adc
fisubl
addr16
dec
jbe
mov
stos
cmpsb
aam
mov
out
lahf
adc
xchg
mov
daa
dec
pop
fstpt
fnstsw
daa
int
das
shl
xlat
cmp
dec
dec
push
jg
mov
mov
and
pop
lcall
rorb
mov
sysexit
pop
cs
xchg
adc
popf
pshufw
mov
inc
imul
jle
add
inc
js
push
data16
xchg
jbe
inc
mulb
insl
iret
clc
or
imul
fists
popf
scas
xor
scas
subl
xchg
outsb
mov
scas
cmpsb
outsb
mov
push
jae
fucomp
in
wrmsr
fs
test
mov
pop
hlt
dec
aas
stos
out
aam
mov
mov
pop
add
inc
adc
inc
cwtl
pop
xchg
dec
mov
mov
imul
cmpsl
cmp
sbb
push
sbb
lods
dec
and
mov
xor
aaa
mov
popf
fidivrl
and
aas
movsl
scas
lahf
shrl
into
or
or
add
aam
pop
and
les
cmp
mov
inc
and
daa
cmc
rcll
addr16
adc
aad
jnp
es
mov
mov
shrl
dec
xchg
loope
popf
and
pop
pushf
sub
or
icebp
hlt
xor
xor
std
iret
lcall
imul
ja
inc
inc
mov
and
iret
pop
inc
push
lret
repz
movsl
or
mov
je
cmp
jo
dec
cltd
and
mov
mov
dec
push
pop
lock
sti
push
pop
mov
insb
xor
pop
faddp
pop
in
or
push
push
xor
daa
xor
repz
cmc
lds
xor
bound
test
jne
out
cmp
xchg
add
inc
dec
les
movl
cltd
inc
movsl
cltd
inc
loopne
push
movsb
push
pop
fiadds
add
jno
mov
js
inc
or
mov
ret
fnstenv
ja
fiadds
data16
adc
je
mov
mov
and
lods
dec
inc
push
imulb
outsb
mov
or
sbb
aaa
je
inc
jo
shlb
push
leave
loopne
pop
jbe
push
mov
ret
push
sbbl
out
daa
in
xchg
mov
mov
outsb
aaa
test
pop
mov
lcall
jns
inc
sbb
xchg
inc
mov
sub
pop
xchg
shrl
jle
ss
ret
dec
movsb
mov
pushf
mov
imul
xchg
sbb
shrl
and
inc
sub
push
out
popf
inc
insb
cmc
cmpsl
xchg
scas
cmp
sbb
xchg
pop
lea
add
cmp
popa
jo
lea
dec
loopne
fwait
mov
cmpsb
insl
sbb
push
add
pop
dec
bound
lret
test
stos
loop
dec
fpatan
mov
dec
cmpsb
cmc
adc
or
cmp
fidivs
je
shrb
gs
fdivs
in
mov
je
xlat
push
fiaddl
jl
nop
icebp
inc
pop
xchg
sbb
inc
filds
fidivrl
push
xor
insb
mov
outsb
jbe
mov
inc
xchg
in
fxch
cmpb
out
inc
pop
pop
cmp
rolb
mov
fs
mov
retw
add
jge
notl
je
imul
jnp
ljmp
mov
insb
call
inc
ret
jno
mov
push
movb
jg,pt
or
xchg
pop
inc
and
gs
mov
inc
mov
adc
test
adc
cmp
cmpb
mov
lods
mov
xchg
mov
sub
in
or
cmpsb
sbb
sub
inc
add
mov
add
aaa
cmpsl
jmp
lahf
cltd
movsl
jmp
cmp
push
mov
adc
and
jmp
enter
out
popa
out
or
pushf
xchg
in
mov
aad
je
pop
test
in
mov
mov
adc
adc
mov
imul
aad
int3
stos
nop
ret
xor
or
add
pop
fldt
mov
adc
fsubs
jge
or
mov
repnz
xlat
imul
inc
lcall
int3
icebp
xchg
rclb
dec
outsb
adcb
int3
into
shrl
lret
jne
jp
xchg
push
sub
push
lret
xor
sub
push
inc
je
sbb
movsb
sbb
xor
adc
idivl
add
out
dec
jae
movb
rorl
sbb
inc
ja
fs
mov
stos
pop
hlt
mov
lcall
lock
das
mov
addr16
mov
pop
or
das
stos
push
sbb
fimull
pop
mov
stos
js
hlt
sub
xchg
xchg
cltd
pop
scas
dec
lds
add
mov
loopne
add
ret
enter
addr16
adc
ss
arpl
pusha
lds
out
mov
push
shrl
cwtl
cwtl
sbb
mov
sub
loopne
mull
sub
loop
int3
stos
sahf
push
fildl
cmp
int3
jle
lock
inc
cmp
push
call
sbb
repnz
lret
adc
shl
cmp
jno
xchg
xor
add
pop
cld
pop
pop
pop
cwtl
or
mov
ret
push
adcl
push
jl
dec
xor
lret
movb
dec
cmpsl
fwait
mov
mov
mov
cmp
pop
stc
dec
and
jo
cmp
fnstsw
mov
xchg
aas
add
push
std
inc
and
roll
lahf
negb
xchg
mov
xor
xchg
sarl
push
scas
inc
mov
rclb
push
pop
dec
loop
adc
subl
imul
adc
add
xchg
xchg
xchg
and
shll
xchg
in
arpl
push
lock
mov
and
sbb
loope
aam
sar
pop
out
nop
mov
jb
adcl
and
and
jp
arpl
mov
leave
mov
insb
lret
mov
int3
mull
sbb
push
mov
jl
loope
cmp
repz
mov
dec
ss
movsb
and
pop
ror
mov
insb
cmp
scas
daa
xchg
mov
test
adc
mov
rcrb
mull
or
scas
push
into
imul
xchg
dec
dec
jno
loope
dec
call
stos
mov
cmp
into
mov
pop
jge
fwait
ret
in
xchg
dec
sbb
jg
jecxz
sbb
cmp
jg
loopne
jnp
jne
inc
call
cltd
call
dec
sbb
mov
js
or
div
pop
into
out
outsb
test
bound
fucomi
inc
test
add
bnd
subl
push
sbb
jb
sbb
loop
xchg
mov
call
or
xor
data16
and
aad
jo
repz
pop
sbb
sbb
inc
cltd
lock
in
or
jecxz
sub
lret
sub
filds
push
aad
test
dec
xor
adc
and
lock
add
popf
xchg
dec
leave
mov
pop
in
mov
adc
test
mov
and
imul
and
jmp
into
icebp
in
adc
push
mov
cmp
and
sub
shll
repz
dec
lds
mov
aam
jne
aaa
test
cmp
and
sbb
adc
jno
push
pop
jmp
dec
jge
sub
movsb
in
lock
popf
and
cld
enter
pop
fsubrl
adc
in
sbb
mov
jo
or
sarl
mov
lcall
add
scas
pop
imul
mov
cltd
sub
inc
pop
test
add
push
ja
and
maskmovq
idivl
nop
push
mov
add
pop
gs
sbb
sahf
sti
add
repz
mov
cli
xchg
sub
outsb
cmp
xchg
loopne
inc
int3
aaa
add
jne
adc
hlt
and
icebp
xchg
cmp
filds
or
mov
negb
inc
sub
inc
add
popl
push
andb
arpl
push
dec
mov
or
cmp
jge
xchg
cmp
and
ljmp
aam
or
imul
cltd
loope
sub
repnz
in
sbb
test
sahf
pusha
mov
gs
cmp
lret
mov
dec
mov
cmpsb
mov
dec
push
dec
std
call
pop
insb
nop
sub
push
cmp
or
dec
xchg
lret
and
pop
movsb
sub
rorl
jbe
faddp
fyl2x
fldl
lret
lret
out
js
adc
push
adc
xchg
mov
ret
out
dec
pop
cmp
pop
xchg
sub
inc
add
mov
sti
push
pop
mov
sub
out
mov
imul
pop
mov
mov
stos
inc
loopne
stos
inc
dec
push
stos
sbb
mov
daa
adc
dec
fcompl
fstps
push
fsubl
in
lcall
and
out
les
jle
xor
in
push
daa
mov
dec
sub
xorb
loop
add
push
or
or
inc
sbb
xor
or
push
jo
arpl
leave
inc
repnz
cwtl
inc
shll
mov
jp
stos
mov
loop
insb
mov
lods
and
into
pop
jle
into
inc
outsb
and
pop
dec
xor
repnz
xchg
dec
shlb
fldl
cmpsb
les
cmp
sbb
lods
das
xchg
or
out
push
sub
fisubs
outsl
repnz
push
pop
jge
jmp
fnstsw
mov
popf
lods
stos
enter
adc
fdivrs
inc
lret
ja
jb
imul
mov
ja
data16
dec
and
add
fisubs
fdivrl
jle
stc
inc
sub
sub
or
test
dec
loop
arpl
pusha
out
iret
imul
cmp
cmpsl
xchg
jbe
inc
and
xor
mov
inc
jnp
dec
dec
ljmp
or
xor
add
inc
pop
lret
icebp
mov
scas
mov
dec
mov
mov
mov
push
xor
dec
cmp
popa
aas
ret
fadds
arpl
sub
adcl
xchg
adc
jns
mov
rcrb
cmp
jl
adcl
andps
fs
dec
pop
xor
shll
enter
lds
jo
add
push
rcr
imul
mov
ss
fidivl
push
xor
shlb
jp
lods
pop
mov
or
ret
or
pop
add
push
push
mov
inc
and
push
aam
mov
push
mov
lahf
rclb
pop
lret
std
pop
fnstsw
lret
fcompl
xor
adc
in
pushfw
dec
cld
jl
lods
int
ds
xor
sahf
call
xor
out
lret
repz
jb
in
push
dec
inc
loop
out
push
cmp
sub
push
lret
test
rorl
sub
inc
inc
aad
sti
pop
sub
add
push
inc
imul
sbb
int
push
mov
mov
push
adc
inc
and
xchg
xor
jbe
into
sub
mov
xor
dec
push
sbb
out
ljmp
jno
inc
je
imul
jp
in
adc
clc
mov
in
add
sub
adc
test
lods
clc
or
addr16
out
xchg
add
push
in
xchg
daa
inc
dec
xchg
inc
push
fisttpl
test
mov
stc
add
mov
fidivs
in
xchg
xchg
adc
std
sub
leave
aad
xchg
mov
lahf
jae
cmp
neg
fstpt
jp
mov
cmp
mov
pop
icebp
xchg
cmp
cmp
add
mov
xor
das
jo
aam
fcmovne
lcall
outsb
mov
shlb
jb
frstpm(287
sub
jb
sub
jl
push
sub
dec
cld
mov
pop
sub
add
lods
sbb
push
mov
sbb
testl
jne
and
xchg
xchg
fists
stos
test
test
test
inc
mov
pop
inc
test
sbb
cmp
xchg
call
lds
arpl
pop
hlt
xchg
scas
std
pop
add
adc
pushf
out
sbb
push
cli
leave
ret
push
repnz
sahf
fists
shrl
inc
inc
outsb
in
sbb
xchg
popa
xor
sbb
sahf
sub
leave
sub
lcall
fwait
dec
xor
pop
out
je
mov
push
out
jecxz
adcl
mov
je
cmp
sub
shrl
jne
jne
mov
mov
mov
dec
out
ss
insb
fimuls
repnz
push
add
mov
ljmp
mov
inc
aas
push
arpl
push
sub
ret
adc
popa
lahf
fisttps
stos
adc
loope
pop
and
or
fucom
cmp
xchg
cs
jecxz
push
int
lahf
mov
scas
fisttpl
bnd
adc
iret
stc
fdivs
pop
adc
icebp
mov
xor
popa
pop
stos
lret
leave
sbbl
jge
movsb
mov
mov
stc
bound
aaa
sub
out
bound
sti
lret
and
leave
aam
xchg
add
mov
pop
inc
jmp
xchg
outsl
je
ja
mov
and
cmp
inc
cs
inc
pop
in
jbe
dec
dec
xchg
dec
push
into
imul
jae
mov
sbb
lock
fs
push
xchg
push
rcr
mov
jns
mov
adc
jl
dec
icebp
mov
icebp
nop
dec
inc
loope
jp
rclb
inc
dec
call
sbb
out
ret
sbb
test
and
dec
fcoms
xor
xchg
mov
mov
je
sarb
jmp
sub
out
jb
arpl
hlt
imul
loop
bound
or
add
push
pushf
icebp
cmp
fists
cmp
cmp
cmpsb
cmovp
fucomi
inc
aaa
jg
inc
adc
push
out
outsl
xlat
dec
nop
mov
pop
mov
pop
jbe
xor
scas
fcoml
cmpsl
rclb
jns
cmp
cmp
and
mov
inc
xorl
fwait
dec
lea
dec
inc
fildl
or
jle
cmc
and
fdivrp
xchg
push
lret
add
jno
lea
iret
bound
dec
mov
sbb
imul
enter
or
jmp
ja
add
addb
into
and
dec
push
sub
gs
adc
pop
cmp
sahf
stos
fmull
mov
sarl
xor
mov
inc
insb
aaa
mov
cmp
out
push
lods
and
popf
aaa
loop
inc
test
jmp
xchg
ss
pusha
fisubrl
aad
lods
add
data16
sahf
and
dec
aas
subb
or
pop
pop
jbe
push
shll
cmp
cmp
mov
rcr
fdivrs
or
and
dec
xchg
add
mov
adc
add
lcall
pop
pop
jnp
mov
push
loop
notl
mov
mov
and
mov
cltd
mov
test
and
repnz
js
scas
inc
sbb
push
imul
inc
xor
mov
icebp
push
dec
call
jmp
jns
out
insb
inc
push
lret
mov
push
xchg
pop
push
fiadds
mov
jge
xchg
bound
sbb
dec
imul
test
mov
icebp
inc
xor
jns
daa
push
jl
sarl
dec
jecxz
and
fldt
cltd
push
lea
iret
and
push
mov
lret
sarl
cmc
inc
movsb
int3
xor
scas
das
aam
mov
jb
inc
out
sti
sub
std
out
push
ret
cmp
xchg
hlt
mov
or
fs
rcll
fidivs
xchg
xorb
outsb
and
lods
add
fldl2e
fstl
orl
mov
adc
loope
dec
cmp
jp
fsts
std
test
xor
jle
popa
mov
inc
mov
or
dec
xor
push
inc
imul
negb
inc
or
dec
adc
shlb
push
bound
rcrb
xor
cmpsb
push
add
fmuls
push
sarl
push
into
je
dec
mov
dec
fwait
lret
ss
dec
fs
sbbl
loopne
leave
push
pop
testb
jae
in
ret
fldt
je
fistps
in
jl
jp
add
scas
dec
adc
mov
add
cli
or
dec
outsb
sahf
xchg
add
aaa
mov
jo
dec
dec
cld
add
mov
jmp
push
mov
stos
fnstenv
sbb
cmp
sbb
fmulp
or
test
cli
insb
adc
xchg
js
xor
loop
sub
ret
leave
scas
xlat
xchg
aam
and
cmc
dec
inc
sub
fildl
out
imul
frstor
mov
xchg
aaa
push
mov
jne
jno
dec
dec
push
arpl
xchg
xor
ja
sbb
popa
push
or
nop
and
sub
mov
sbb
jmp
lcall
es
adc
cmp
fs
jo
in
and
xor
leave
or
aad
add
mov
cmp
popf
icebp
wrmsr
rolb
and
xchg
lret
push
pop
dec
adc
sbb
addr16
adc
sbb
fidivl
mov
dec
sbb
ds
mov
xchg
sub
mov
dec
jbe
outsb
and
imul
cmpsb
xor
adc
and
insl
fcmove
ss
push
daa
enter
push
in
loope
in
popl
sub
pop
je
xor
jp
cmpsb
scas
pop
aas
jg
loopne
inc
or
lret
outsl
lcall
clc
inc
lea
dec
mov
aad
loopne
jnp
cltd
mov
inc
pusha
popf
and
ret
clc
and
cmpsl
lods
cmc
jl
xchg
icebp
int3
dec
rcll
jmp
adc
lds
mov
cmp
mov
repz
stos
or
imul
lods
jne
pop
test
outsb
xor
sub
xchg
add
in
push
jnp
pop
xor
daa
jg
movsl
cli
cli
dec
fsts
sub
int3
add
push
jne
fstpl
pop
sub
sbb
pop
cmpsb
cmpsb
fs
jbe
lods
push
jge
push
lret
test
bound
sub
jb
outsb
mov
in
jae
jl
pop
sbb
rorb
mov
popa
jne
xchg
loope
repnz
sub
data16
sbb
in
daa
or
repz
adc
xchg
outsl
xchg
movsb
adc
mov
hlt
mov
pop
lods
mov
rolb
dec
xor
adc
fs
repnz
icebp
jmp
dec
sub
lret
xchg
mov
jae
cmpsb
and
xchg
subb
fcomip
jmp
imul
test
or
or
mov
stos
push
jb
xor
lock
pop
push
mov
imul
outsb
xor
popf
adc
les
notb
push
sub
cmpsl
mov
stc
bound
or
xor
nop
pop
scas
inc
jecxz
fistpll
pop
roll
pop
mov
and
sti
and
xchg
cmp
sbb
out
in
sbb
adc
sbb
ss
jno
aaa
into
fs
stos
push
pop
mov
ror
lods
adc
add
movsl
cmp
loopne
cmc
push
test
mov
testl
inc
mov
aad
into
add
mov
sti
push
ret
mov
xor
jnp
cmc
test
pop
inc
test
lret
xchg
push
cmp
fs
pop
aam
pop
std
sbbb
insl
movsl
add
shrl
sub
pop
inc
inc
mov
and
daa
mov
inc
insb
sub
adc
dec
dec
cli
xchg
ss
in
sbbb
sbb
or
arpl
push
xchg
dec
cld
int
dec
hlt
popf
inc
mov
mov
or
fstl
mov
sub
fbld
xchg
jge
das
jge
adc
cmp
push
push
filds
cmpl
adc
pusha
pop
inc
xchg
inc
add
or
mov
pop
adc
clc
lcall
bound
jns
jno
pop
cmc
sub
xchg
add
dec
xchg
sub
or
test
inc
lret
push
jecxz
jae
mov
scas
dec
add
clc
mov
sti
jne
jl
cmp
adc
leave
cmp
subb
outsl
movsl
cli
inc
test
ljmp
lret
push
push
fs
xchg
fldl2t
andl
or
movb
cmp
cmp
notb
xor
mov
shrl
das
in
js
mov
daa
add
in
jo
test
lahf
jl
ds
shrl
outsb
and
dec
push
dec
add
mov
cmp
sbb
cmp
sub
out
and
leave
mov
fistps
adc
ret
hlt
fdivrl
xor
cmpsl
dec
sub
scas
dec
in
js
sub
push
pushf
pop
pop
les
cltd
aad
cmpsb
and
les
bound
cltd
xlat
mov
push
inc
mov
fdivrl
fucomi
mov
sbb
negl
lods
les
mov
or
into
in
jmp
pop
pop
add
sbb
jle
daa
hlt
cmpl
out
insl
cmpsb
cmpsb
out
lods
adc
fwait
in
in
loopne
orb
and
xor
in
addl
in
pushf
cli
and
dec
mov
mov
mov
jl
in
add
enter
jl
aam
ja
iret
and
add
scas
ljmp
pop
jbe
out
push
hlt
jl
pop
pop
xor
mov
pop
shlb
mov
dec
test
aaa
gs
sub
adcl
cmpsl
xor
mov
pop
mov
sub
add
icebp
fnstsw
add
jno
jae
std
iret
xchg
fistl
xorb
push
sub
ss
xlat
xor
aad
std
ss
cmp
leave
fdivp
adc
sub
gs
ficoml
ds
adc
add
mov
out
xor
cmp
xorl
fdivrs
inc
push
movsb
sti
rolb
add
ja
lcall
jmp
leave
push
inc
cmpb
sti
fsubrs
mov
dec
aad
mov
and
enter
inc
inc
sub
test
subb
loop
ja
lds
pop
mov
in
xchg
fcompp
mov
test
mov
movl
sbb
cmp
dec
add
jge
sub
push
pop
adc
cmc
sub
sbb
inc
insl
mov
fildll
sub
test
imul
pushfw
cltd
gs
push
cmp
xchg
test
jb
cli
icebp
xchg
push
mov
lods
pop
test
mulps
icebp
inc
rol
rol
imul
and
pop
dec
adc
mov
inc
out
or
or
imul
inc
fwait
xor
mov
jns
imul
or
popa
mov
sbb
lock
je
sub
dec
je
xchg
or
xor
sbb
jnp
pushf
and
add
mov
dec
rcrb
lret
push
scas
jge
notb
scas
sbb
aad
mov
setl
lds
stos
and
mov
shr
test
sbb
aas
cmpl
adc
dec
push
hlt
sarl
jbe
xor
pop
jno
nop
mov
jmp
loop
je
mov
cmpl
push
jmp
gs
dec
lret
aam
addr16
mov
outsb
je
pop
or
sbb
fnstenv
pop
std
clc
xor
jb
push
mov
xlat
mov
or
mov
mov
loope
or
mov
push
lds
aam
jae
ss
inc
fsts
jo
jbe
xor
jne
subl
jne
pop
add
push
sub
lret
rep
nop
inc
loopne
repz
push
stos
inc
in
inc
cmp
xchg
mov
loop
dec
int3
mov
jmp
in
fisttpl
push
ja
push
mov
cli
int
inc
jle
mov
ret
mov
push
ficoms
push
js
test
stos
pcmpeqd
mov
cli
push
cmp
das
ja
ror
inc
cmc
aad
jnp
pop
xor
jbe
outsb
lock
and
lret
rcll
std
fstpl
pop
jl
rclb
pop
dec
pop
pusha
adc
add
fistpl
push
outsb
push
lret
arpl
jle
pushf
adc
lret
xor
sub
sub
xchg
mov
push
dec
cmpsl
mov
lret
dec
loopne
xor
sub
call
jl
sti
push
pop
mov
in
mov
pop
pop
imul
popa
jns
xchg
bound
mov
ret
outsb
sbb
mov
xlat
aam
sub
fs
xor
incl
adc
int
sarb
mov
mov
inc
test
xor
enter
mov
and
fistl
popa
jb
icebp
cmpsb
cmc
iret
jp
loop
mov
sbb
rol
aam
mov
call
mov
cmc
int
mov
xor
popf
jmp
popf
es
cmc
dec
imul
pop
dec
divb
scas
sub
into
add
int3
sbb
fstpl
xchg
stos
sub
popa
xchg
jp
clc
push
cld
sub
pop
pop
lcall
insl
dec
and
push
fs
les
and
mov
out
movsl
es
xchg
xor
cmp
lds
pop
cmp
std
pushl
inc
scas
cli
inc
mov
jbe
sub
jg
or
mov
and
outsl
push
mov
jns
sub
lods
shl
inc
xor
cs
push
and
int3
loope
cmp
ficoms
dec
jmp
push
das
je
rcrl
hlt
sub
xchg
cmpsb
lret
dec
adc
enter
xchg
shl
nop
sar
insb
sbb
push
out
cld
mov
in
dec
jnp
mov
daa
flds
inc
xor
mov
mov
stos
ljmp
cmpsb
in
fiaddl
shrl
ds
sub
hlt
push
movsl
or
pop
gs
lock
icebp
icebp
mov
jp
cli
lcall
movsl
sbbb
xchg
push
mov
lods
xchg
rolb
icebp
jmp
adc
out
and
cmp
push
xor
xor
insb
lods
hlt
xchg
jg
sbb
mov
adcl
pop
push
mov
xchg
clc
std
and
leave
jmp
insb
sbb
in
mov
mov
lds
clc
or
call
std
cld
imul
jne
mov
and
aam
mov
shlb
cmp
xchg
arpl
rcrb
imul
pop
sbb
xchg
push
dec
into
xor
lods
aad
cwtl
xchg
push
sbb
sub
rcl
daa
mov
sbb
jmp
mov
icebp
and
outsl
adc
addr16
push
jmp
push
jns
ljmp
test
sbb
int3
data16
push
cld
pusha
repnz
fsubrl
repz
lock
cmp
xor
cmp
dec
iret
jb
ja
shrl
sbb
jmp
cwtl
ret
test
cmp
sub
hlt
adc
adc
out
inc
shrl
dec
and
cmp
sti
rcl
dec
mov
xor
fwait
lods
fs
aad
sbb
sbb
dec
push
loopne
add
mov
or
and
mov
sub
adc
ljmp
decb
dec
push
and
xchg
pop
mov
xor
cmpsl
push
adc
inc
sbbb
cmp
push
addr16
xchg
int
out
mov
jae
jge
push
adcb
push
insb
pushl
mov
mov
push
cmp
mov
pop
adc
mov
inc
mov
jb
and
out
ss
repz
sbb
out
inc
add
inc
inc
js
test
jp
lret
fs
gs
add
ficoms
mov
sub
xchg
insb
bound
data16
xchg
push
pop
icebp
jg
jge
add
sub
mov
jnp
outsb
sti
daa
fcmovb
jle
mov
dec
jecxz
loope
mov
push
mov
push
or
cmp
jg
xchg
inc
jbe
mov
adc
jecxz
push
mov
mov
jns
xor
xchg
repz
fimull
cmpsl
xor
jle
push
xor
call
in
sahf
jae
xor
push
das
xchg
enter
and
or
mov
cmpsb
adc
sqrtps
in
and
fwait
lds
sbb
sbb
xlat
ja
dec
lcall
inc
sub
lods
jb
in
add
pop
popf
stos
ss
dec
cvtps2pd
fs
out
cs
ss
lds
leave
arpl
jge
stc
repz
repz
xchg
stos
into
bound
fisttps
outsl
cld
es
outsb
cld
fisubrs
stc
repz
mov
sub
pop
add
les
scas
fxch
int3
pop
cli
jle
bound
cmpsb
aas
fs
test
sbb
push
movb
sbb
sbb
outsb
xor
pop
negl
and
repz
and
mov
in
or
fwait
or
jecxz
call
and
adc
loope
jne
loopne
cmp
pop
aas
adc
mov
repz
mov
fsubrp
dec
into
mov
sub
mov
jno
cmc
dec
cli
fimuls
push
ja
jo
lock
adc
pop
add
es
addl
mov
lods
sbb
xchg
cmpsl
cmp
es
mov
jle
and
aas
pop
imul
ja
cmp
enter
ljmp
dec
and
ss
les
sbb
inc
mov
add
xchg
mov
mov
xchg
push
pop
insb
aam
loop
inc
test
stos
clc
dec
jno
lea
sub
xchg
xchg
pusha
aam
jns
cmpsb
ljmp
popf
aad
push
dec
mov
addl
mov
fcomip
cmp
jecxz
aam
jo
mov
pop
fsubl
inc
aam
and
cmp
or
and
push
sub
add
xor
dec
pop
sbb
jbe
jmp
push
in
cmc
lcall
sti
arpl
fidivrl
mov
xchg
inc
imulb
sbb
cmpsb
ds
lock
loop
sbb
xor
push
xlat
sbb
into
mov
or
pop
ljmp
xor
adc
or
pop
ljmp
aas
jae
in
push
repnz
mov
mov
jne
push
inc
icebp
fildll
stos
sbb
subl
mov
mov
dec
clc
aad
call
push
jmp
icebp
icebp
dec
and
push
in
jp
jmp
cmp
and
xchg
icebp
pop
mov
insl
push
pop
les
popf
push
dec
fsubr
or
pop
jl
test
call
or
fnstenv
orb
mov
sub
imul
and
fisubl
loop
out
cmpsb
in
lds
out
cmpsl
cwtl
push
es
shr
sub
cltd
in
push
icebp
xchg
dec
mov
xorb
add
xchg
adc
inc
dec
jns
pop
out
push
mov
and
jmp
sarb
cmp
or
add
popf
lcall
fbstp
xor
nop
mov
xchg
test
xor
dec
aaa
out
in
jg
out
dec
mov
jmp
add
sbb
push
lds
cld
dec
mov
xor
ljmp
pushf
addr16
or
mov
mov
jae
sub
xchg
mov
icebp
fdivrp
sub
data16
add
daa
xchg
leave
mov
cmc
int3
cld
call
add
not
inc
aas
fsubrl
stos
test
mov
mov
push
aam
loope
popa
push
lahf
adcb
add
pop
sbb
jl
mov
jle
cmp
xchg
scas
push
mov
arpl
jl
adc
cmp
loope
cmovno
ss
xchg
mov
fldt
in
push
inc
cmp
idivb
shr
jo
xlat
repnz
pop
cmpsl
dec
mov
int3
inc
xchg
cs
xor
in
inc
or
lret
inc
lret
mov
or
pusha
xor
dec
mov
cmpsb
das
lcall
xchg
daa
inc
cmp
push
notb
mov
jp
xchg
sbb
repz
in
out
xchg
xchg
popf
push
xchg
add
jbe
jno
faddl
lods
cmpsl
sub
pop
js
mov
in
ljmp
push
int
cld
mov
test
push
cmp
jbe
or
scas
jnp
xor
sbb
pop
lods
xlat
xchg
mov
dec
or
inc
mov
cmpsb
in
nop
mov
into
fwait
sbb
test
stos
outsl
es
pop
xor
sbb
mov
paddb
addr16
cmc
icebp
cmpsb
js
xchg
mov
inc
and
inc
in
cmp
or
decl
scas
xor
inc
fwait
pop
jno
popf
push
mov
sub
cmc
add
test
mov
daa
imul
scas
push
jnp
push
fsubrl
pushf
cltd
mov
push
jnp
and
lds
arpl
test
std
dec
ret
jae
xchg
mov
subb
cmp
sbb
in
mov
and
lods
mov
cs
push
mov
mov
int3
adc
in
mov
lea
pop
push
mov
cs
call
dec
out
sub
gs
jb
testl
gs
nop
out
mov
push
cltd
jbe
mov
lds
pop
mov
jo
imul
jne
mov
mov
lds
call
imul
test
push
dec
jmp
notl
xor
jo
pop
fisubrl
ret
push
inc
xchg
cld
fst
jl
pop
mov
popa
inc
cmp
repnz
popf
hlt
adc
inc
cmp
pop
and
les
xchg
sbb
ja
sub
jnp
sbb
jle
xor
dec
push
in
push
xor
ja
pop
xlat
xchg
in
dec
mov
push
repnz
jno
dec
in
fbld
add
movsb
repnz
es
fsubr
pop
xchg
subb
inc
aaa
xchg
loop
adcl
xor
lods
ja
lahf
dec
and
jecxz
out
movsl
inc
int3
xor
stos
cmpb
std
lret
rolb
xor
push
dec
std
cmc
cmp
adc
jnp
insl
jns
add
repz
fstl
and
mov
lret
add
add
dec
test
hlt
mov
mov
andl
pop
jns
xchg
aam
cmp
mov
inc
iret
ds
xlat
add
pop
mov
lock
cmp
imul
or
imul
jo
push
jae
inc
ds
pop
shlb
mov
adc
bound
xchg
hlt
xor
xor
pop
stc
f2xm1
sbb
cmp
sbb
fcmovnb
out
mov
cs
jnp
lahf
ds
or
ja
xchg
cmp
or
sbb
mov
repz
aaa
mov
sub
and
sbb
int
mov
fiadds
clc
mov
cltd
fnstenv
add
repz
daa
pop
jne
cli
pop
pop
sub
jg
in
xchg
pushw
aad
aas
sti
xchg
in
inc
shrl
inc
sbb
adc
addb
sbb
in
fdivrp
mov
mov
sti
jns
cmpsb
fldcw
popa
xchg
xchg
xor
iret
jbe
in
mov
push
dec
xor
dec
lret
mov
mov
pop
icebp
push
adc
jbe
les
and
sarl
dec
add
pop
push
lret
xchg
mov
loop
dec
ficomps
push
es
dec
or
movsl
mov
xor
cmpl
mov
jbe
push
or
lods
call
fimuls
aam
ret
inc
imul
add
pop
xor
in
popa
or
cmp
adc
adc
pop
lods
rcll
cmp
and
js
add
inc
mov
xchg
fnsave
adc
enter
push
in
or
stc
xlat
jo
jecxz
inc
aam
push
iret
xorl
or
ljmp
or
xor
subb
jae
aam
lahf
ret
adc
hlt
cwtl
ja
adc
cmc
bnd
int
mov
dec
dec
stc
icebp
int
jbe
mov
gs
mov
or
jle
or
mov
and
aaa
in
jp
mov
mov
push
mov
mov
mov
lds
aas
pop
add
fidivrs
jl
jns
mov
add
popa
xchg
leave
outsl
cmp
fldl
lock
push
sub
cwtl
mov
xor
jmp
ds
leave
xor
fldenv
inc
mov
pop
xchg
add
jge
xor
rcl
repnz
mov
xchg
arpl
out
sub
mov
inc
jmp
adc
push
push
jle
bnd
repz
xchg
pusha
out
subb
push
inc
fistps
jmp
or
lret
mov
xorb
xor
stos
push
sub
xor
lret
fsubrl
sub
mov
call
push
or
je
mov
or
cmpsl
jmp
and
inc
mov
cmove
jmp
insb
push
xchg
out
cmpsl
xor
dec
xor
xchg
mov
sti
scas
pop
push
xchg
cld
push
bound
mov
inc
sub
sbb
add
push
sbb
pop
jne
xchg
jg
cltd
mov
movsl
pop
push
inc
mov
outsb
jnp
aaa
mov
dec
imul
fs
std
cmp
xchg
aam
out
inc
inc
aas
push
sub
dec
rcrb
jge
fbld
sub
cltd
mov
loope
mov
mov
push
push
mov
leave
mov
rclb
dec
dec
push
cs
sub
mov
xor
pushf
in
and
jbe
test
test
mov
cmp
pushf
outsb
add
imul
fldenv
stos
es
mov
pop
cmpsb
repz
dec
jp
cli
xor
cmp
aad
je
jno
jns
xchg
iret
jg
adc
inc
imul
rcrl
fcmovbe
lock
dec
dec
jbe
or
mov
cmp
jne
sbb
gs
clc
add
lahf
xlat
mov
inc
ja
outsb
or
icebp
mov
push
and
js
inc
mov
mov
cs
add
mov
fistl
aas
jne
daa
pop
cmp
push
push
dec
or
xor
stc
lret
std
xchg
popa
jo
and
mov
rcrl
stos
push
fldcw
mov
mov
fs
or
insb
and
xor
and
push
jnp
pop
and
fcompl
dec
push
inc
dec
arpl
pop
adc
loopne
jae
add
inc
inc
out
jo
ljmp
ret
cmpsl
push
or
push
scas
jne
and
arpl
test
in
mov
or
mov
inc
xor
pcmpgtb
sbb
es
leave
and
inc
mov
je
sbb
pop
aad
adc
fwait
movsb
fstl
sub
in
or
mov
stos
push
or
jg
movsb
mov
jg
push
sti
es
fdivr
ja
rcrb
loop
shrb
and
clc
gs
push
mov
pop
clc
mov
xchg
sbb
stos
mov
stos
ror
add
insl
daa
out
pop
aas
add
dec
sub
imul
mov
js
cwtl
mov
fisttpll
aad
and
popf
jmp
sub
xchg
pop
xor
adc
out
adc
push
movb
dec
bound
sub
sbb
lods
lds
aad
xchg
jmp
mov
xor
pop
push
insb
jb
mov
daa
sahf
xor
cwtl
xor
out
out
test
int
inc
aas
nop
les
leave
mov
jb
mulb
outsb
mov
mov
jno
arpl
adc
mov
xchg
add
dec
fildl
out
inc
pop
xchg
dec
add
aam
fidivrs
jnp
andb
out
pop
cmc
fistpll
jae
addr16
or
adc
and
xchg
cltd
cmp
jg
ljmp
xchg
test
or
xchg
push
mov
gs
inc
addr16
pop
std
fiaddl
into
in
scas
mov
mov
gs
mov
sahf
push
mov
fwait
imul
enter
inc
jmp
cltd
sub
rcl
dec
insb
nop
test
xchg
in
lods
inc
xor
add
imul
fsts
push
lods
push
cmp
pusha
das
daa
sub
xchg
add
cmc
inc
jnp
cmc
addr16
in
adc
add
call
mov
inc
pop
rcrl
movsw
lock
shl
imul
cmpsl
add
ret
jae
imul
into
sbb
sub
cwtl
push
pop
arpl
push
mov
jno
movsl
add
ja
xchg
stc
repnz
jne
and
push
adc
out
in
popa
jg
pop
popf
ret
outsb
into
lret
adc
ja
mov
shll
adc
mov
ja
fs
popf
nop
fnstenv
hlt
fstl
call
xchg
mov
cmpsl
pushf
ja
xchg
jl
fwait
sub
in
std
imul
addr16
orl
addb
sbb
cs
inc
and
vpandn
inc
lock
and
jg
movsl
cmpsl
js
lock
and
cli
leave
mov
cld
sbb
imul
out
out
cltd
add
cmp
xchg
pushf
ljmp
dec
jg
mov
push
leave
aam
and
adc
adc
sbb
aaa
mov
push
sub
fisubs
mov
mov
rorb
test
mov
rolb
pop
jns
mov
movsl
sahf
pop
cmc
xchg
icebp
test
mov
fldcw
pop
sbb
inc
jne
push
sub
rorl
in
cmpsb
mov
lods
cwtl
out
stos
cs
repz
push
enter
sub
hlt
daa
xchg
lods
xchg
push
mov
sub
inc
mov
push
or
cmp
and
icebp
pop
adc
call
insl
add
and
lock
aam
pop
jecxz
call
stos
pop
pop
jg
loope
loope
dec
push
andl
cmpsl
push
or
js
mov
adcb
into
insb
shlb
rcl
js
inc
mov
fsubl
jne
mov
jle
jl
mov
inc
leave
push
cmpsb
dec
popf
or
divl
or
mov
jae
les
stc
lret
daa
cli
cld
xchg
jns
or
xchg
cltd
xchg
inc
frstor
mov
inc
jno
stc
inc
adc
gs
xor
inc
fisttps
xchg
xchg
xchg
pop
mov
mov
jg
loopne
mov
sbbl
outsl
inc
mov
mov
dec
es
icebp
arpl
sub
mov
inc
fs
into
mov
mov
jmp
into
aam
shrb
inc
pop
add
jle
scas
ss
xchg
or
mov
xor
rcrl
jns
and
xadd
dec
call
xchg
jmp
into
push
xor
jae
nop
je
mov
push
jb
dec
inc
xchg
sbb
sahf
sbb
leave
xchg
push
push
lds
addl
mov
sar
jp
jg
xor
dec
cli
lods
hlt
lock
inc
icebp
sbb
xor
xchg
in
cmp
inc
or
leave
xchg
xor
sbb
ja
test
jge
test
insb
mov
pop
add
mov
ds
flds
inc
fcmovnb
or
pop
cmp
lock
sub
cmp
sub
sarl
or
ss
test
ret
inc
iret
jns
mov
cltd
ud1
add
jne
push
push
inc
es
sbb
jle
inc
daa
sbb
fucom
ret
mov
cs
mov
mov
iret
mov
push
or
fstp
inc
push
in
or
and
sub
add
jl
stos
in
movsl
out
mov
cwtl
fisttps
and
jecxz
push
ljmp
jns
push
adc
cmp
insl
imul
jl
inc
push
into
cmc
push
fstpl
lret
pop
mov
inc
rolb
leave
cmp
cltd
cmpsl
mov
aam
rorb
jmp
leave
mov
aas
mov
lahf
xor
call
inc
push
lret
and
mov
stc
sub
aam
sbb
jp
cli
inc
repnz
sub
add
icebp
js
pushf
sub
xor
and
sbb
js
movsl
rcrb
sbb
add
adc
cli
roll
out
or
mov
push
dec
jae
in
loopne
jnp
outsb
loope
loopne
and
dec
mov
mov
ret
pop
push
pop
dec
jmp
test
cmp
out
mov
push
dec
leave
shlb
out
stos
and
ja
into
xchg
jmp
inc
jmp
push
and
dec
clc
cld
dec
inc
movsb
mov
sbb
std
imul
adc
cwtl
inc
inc
repnz
mov
sub
push
sub
cld
cmp
mov
clc
adc
push
mov
mov
inc
jmp
mov
pusha
adc
or
aad
xchg
mov
pop
mov
jo
push
and
cltd
xchg
fucomp
cwtl
insb
fcmove
push
lds
js
dec
negl
rcrb
repz
stc
jo
ret
das
incl
cli
cmc
pop
in
mov
and
pop
insb
push
jno
xor
mov
pop
daa
lcall
aam
inc
out
sub
lds
push
fwait
push
inc
call
int
push
popf
outsl
insl
cld
jge
int
shll
sub
cwtl
inc
rorb
inc
movsl
jp
jge
adc
fidivl
xor
repnz
xchg
mov
pusha
flds
sub
mov
sar
dec
adc
ja
jge
aas
sahf
and
fisttps
loopne
divl
movsl
mov
inc
jnp
dec
imul
inc
mov
movsl
and
repnz
dec
jp
cmpsl
lret
jne
sahf
sub
xor
rcrl
test
lret
sub
dec
push
mov
dec
in
flds
add
movsb
ljmp
add
inc
or
mov
mov
xchg
fld
jne
inc
mov
dec
push
movsl
cltd
dec
push
fiaddl
call
sbb
mov
cli
repz
xchg
in
movb
adc
lcall
lret
in
cmp
sbb
and
xchg
ret
cmpsb
std
divl
jbe
punpckhwd
push
dec
pop
and
inc
test
sub
paddsw
insb
pop
sbb
decb
pmaxsw
out
sahf
imul
add
out
xchg
repnz
ret
inc
cmp
and
dec
fildll
scas
adc
and
push
mov
cmc
xor
and
pop
pop
pop
cmc
js
into
push
rolb
movsb
lcall
iret
fs
jp
frstor
jmp
mov
mov
outsb
popf
insb
pusha
mov
cmp
pop
lret
inc
fsubrl
inc
push
adc
dec
ljmp
lret
xchg
and
ret
stos
lods
leave
movsb
add
pop
or
xor
out
push
cmp
imul
and
dec
lock
mov
fdivs
int3
dec
sub
jno
pop
test
dec
xor
inc
idivl
add
mov
push
sub
jp
cmp
fwait
addl
inc
ror
or
mov
adc
dec
mov
or
cmp
mov
rcr
clc
in
push
pop
call
pop
loopne
in
cli
cld
lods
dec
push
push
push
lods
cmc
pop
dec
fldcw
jle
cltd
inc
inc
out
pop
jno
jbe
add
push
pop
jo
pop
jbe
shll
cli
dec
shl
pop
adcl
jecxz
pop
inc
in
or
xchg
dec
dec
std
lahf
popa
mov
jmp
push
and
outsl
aas
cld
fcoms
xchg
add
icebp
inc
in
dec
frstor
or
xchg
jnp
rol
jae
std
cmpl
jns
repnz
jb
dec
cmp
dec
cmp
dec
xor
dec
and
lret
dec
jne
mov
ret
je
mulb
jp
popa
jp
es
lcall
add
repnz
out
cwtl
jmp
mov
sar
imul
inc
sahf
sub
repz
sub
enter
and
xchg
push
mov
jp
sub
iret
int
out
jmp
mov
aad
enter
sub
js
adc
lds
enter
pop
push
inc
je
gs
arpl
cmpsl
dec
add
inc
icebp
jae
xchg
loopne
inc
inc
repnz
inc
mov
pusha
jns
icebp
jno
jnp
add
dec
icebp
addr16
imull
inc
jb
push
jle
bound
add
add
imul
dec
cmp
ficoml
lock
push
fimuls
push
jo
int
insb
jg
lock
inc
and
je
and
int
arpl
lock
jns
mov
out
fistpll
add
dec
test
adc
xchg
cli
cwtl
ss
je
jb
cmp
jae
leave
lret
jle
mov
jge
inc
imul
dec
sub
or
xchg
add
jg
and
mov
cmovge
and
addb
pushf
xor
push
adc
or
pop
mov
imul
insb
sub
in
gs
sub
adc
nop
jbe
xchg
jmp
dec
push
add
and
idivl
rclb
inc
sbb
adc
cmp
pop
cmp
mov
imul
pop
sub
int3
pop
call
jp
cmp
jg
pop
add
popf
aas
mov
jnp
fiaddl
dec
pop
jp
sbb
out
dec
push
cmp
lods
lcall
xchg
xor
jo
mov
mov
mov
repnz
add
add
push
aad
mov
adc
loopne
outsb
xchg
inc
mov
mov
jne
insl
stos
cmp
call
push
lds
int3
push
add
xor
cltd
dec
xor
mov
jb
stc
push
jl
xchg
add
dec
sub
call
frstor
xor
movsl
iret
sbb
sti
rol
aaa
add
popa
clc
je
shlb
mov
in
sub
cltd
cmpsb
cwtl
mov
insb
inc
rcll
filds
lcall
repnz
daa
push
mov
inc
sub
lods
call
cld
loop
call
clc
dec
dec
xor
and
fnstsw
pop
jae
aad
lods
sbb
mov
rclb
pop
mov
lahf
cmpl
jnp
push
push
outsb
imul
test
ds
mov
cmpsb
mov
jo
inc
xchg
mov
ds
mov
cmp
xrelease
pop
push
les
aas
sub
scas
arpl
sbb
inc
cmp
xlat
cltd
dec
mov
jae
jp
rolb
lods
sbb
cltd
jne
and
adc
pop
xor
aad
fsub
dec
into
jge
sbb
shl
push
inc
aam
fisubrs
cmp
or
sbbl
push
je
mov
sbb
icebp
jle
dec
aam
aas
dec
imul
pop
xchg
out
mov
fldcw
mov
cmp
cmp
push
mov
push
pop
scas
xorb
rcr
ja
mov
mov
mov
sti
movsl
lds
cmp
popa
insb
jle
pop
sub
push
inc
pop
sti
cmpsb
or
pop
push
and
lret
mov
stos
fnstenv
pop
adc
out
movsl
cmp
mov
in
pop
sbb
test
pop
adc
or
popf
gs
clc
cmp
lret
rcll
mov
mov
test
adc
repnz
or
in
out
pushl
adc
stc
dec
lock
and
call
add
movsl
adc
pusha
mov
lret
and
arpl
push
mov
pop
cwtl
mov
outsl
sub
add
inc
inc
xlat
xor
clc
imul
adc
mov
icebp
and
inc
or
xorb
inc
fistl
push
loopne
mov
add
addr16
jecxz
cmp
aas
out
lcall
or
fadds
ds
sahf
inc
cmpsb
jae
inc
adc
mov
add
or
arpl
mov
dec
cmc
and
xorl
mov
or
jmp
mov
cs
push
push
popa
pop
sbb
inc
push
add
inc
subl
mov
xlat
int3
jne
inc
adc
sub
std
adc
and
lods
mov
cwtl
popf
add
ljmp
mov
daa
in
and
adc
jp
fbstp
xor
mov
cli
jnp
push
jl
loop
sub
and
arpl
adc
sti
int3
inc
je
mov
mov
mov
icebp
xchg
arpl
lcall
xorb
std
ret
jne
outsb
iret
pop
add
icebp
aas
test
push
mov
mov
inc
xchg
imul
push
sub
in
adc
int
orb
mov
cmpsb
shl
mov
iret
mov
xchg
lcall
jns
or
push
aas
stos
and
push
cld
sbb
out
pause
mov
mov
jge
push
imul
xchg
push
cld
lods
lahf
adc
cmc
stos
in
stos
cmp
and
or
adc
sahf
cmp
es
lret
arpl
js
hlt
imul
or
jmp
aam
fildl
fisttpl
loop
mov
ret
jns
lock
jmp
sbb
jp
jo
xchg
lea
popa
shl
inc
dec
arpl
pop
sbbl
jmp
add
add
sub
bound
sahf
xchg
jnp
sub
roll
or
or
pop
sub
mov
std
lods
xchg
adc
js
cmp
in
cmp
repnz
mov
pusha
insl
negl
dec
lret
xchg
cs
cli
inc
dec
lods
dec
sbb
insb
das
and
je
cli
adc
shl
jle
stc
sub
in
out
dec
cmpsl
push
imul
out
mov
push
bound
fadds
pop
lods
pop
jnp
bound
push
push
in
lods
xchg
sarl
adc
adc
outsb
jae
lods
cmpsb
outsl
jae
stc
mov
push
mov
dec
sub
imul
inc
cmpsl
and
in
mov
loopne
lahf
ds
negl
mov
in
jmp
test
push
push
sub
xchg
or
inc
push
add
mov
dec
daa
jb
insb
mov
push
jge
test
jg
push
cmp
push
inc
xor
mov
ja
dec
sub
pop
clc
jecxz
dec
inc
mov
fidivrs
ljmp
adc
jmp
mov
jne
jmp
xchg
xchg
inc
es
or
test
or
hlt
add
mov
xchg
jecxz
inc
je
addb
cld
jne
xor
or
scas
adc
xchg
repnz
mov
or
xchg
push
push
cmp
loopne
ss
iret
xchg
in
and
inc
mov
fwait
insb
mov
scas
sbb
mov
pop
test
xchg
or
and
xchg
cmp
pusha
je
xlat
dec
xchg
jb
mov
sbb
mov
lock
mov
daa
pop
push
mov
push
shll
add
jnp
inc
cmp
outsb
mov
fidivs
movsl
cmp
xchg
inc
insl
push
test
iret
sbb
pop
mov
pusha
lahf
lock
jge
mov
jb
ja
and
inc
add
mov
sub
stos
cwtl
jne
mov
jo
xchg
inc
cmp
cmp
xor
lods
xchg
in
aaa
inc
mov
sub
mov
ljmp
pushf
fisttps
ss
pop
cmpsb
jmp
addr16
rcl
cmpsl
gs
xchg
in
aas
jne
adc
pop
lods
push
dec
fisubrs
xchg
imul
xor
jnp
and
fs
push
and
or
cmp
insl
testl
xchg
clc
mov
popf
mov
push
sub
mov
fwait
mov
fimull
ja
pop
fldl
mov
in
leave
insb
sbb
cmp
jae,pt
cmp
fiaddl
inc
xlat
add
inc
arpl
cld
or
clc
clc
dec
mov
dec
push
in
cmp
pop
adc
dec
aad
imull
popa
cld
cs
or
xchg
jecxz
and
pop
mov
arpl
mov
cld
pop
dec
jb
pop
inc
mov
fsubs
pop
dec
push
dec
cld
leave
mov
sti
xchg
xor
mov
in
fcompl
imul
or
lret
jnp
clc
xchg
sbb
dec
add
fldl
out
mov
add
or
aad
add
adc
sbb
inc
ficoms
push
addr16
mov
or
lret
outsb
push
outsl
sbb
iret
dec
sub
add
arpl
pop
daa
adc
lret
cmp
in
cmp
test
xor
imul
mov
sbb
sub
and
push
leave
rcll
xchg
or
test
inc
lahf
leave
push
jne
xchg
push
xor
jp
pop
pop
push
insb
lret
ja
jo
jns
int
in
lcall
mov
movsl
out
mov
stc
push
and
xor
loop
repz
sub
add
add
inc
js
cmp
xchg
inc
sub
inc
cmc
cld
loop
adc
test
gs
adc
xchg
nop
cmpsb
xor
test
jnp
in
mov
call
mov
mull
inc
sahf
xchg
sub
std
cmpb
insb
movsl
pop
push
jmp
xor
aaa
mov
inc
jbe
add
sub
or
pushf
mov
stos
push
aad
mov
mov
cmc
aam
in
lret
inc
pop
or
inc
push
mov
jae
out
ret
xchg
xor
pop
cltd
cmp
das
xchg
fwait
adc
cli
xor
jp
sub
cld
push
das
insb
xchg
imul
test
add
adcb
out
and
lods
daa
pop
in
xchg
loop
xchg
mov
lret
imul
das
sbb
cmp
push
xor
movsb
push
cmp
imul
adc
fnstcw
and
adc
and
or
push
in
ljmp
adc
mov
inc
lods
mov
fildll
enter
cmpsl
cmp
sub
inc
arpl
mov
add
pop
cmpsb
jmp
insl
xchg
imul
adc
dec
push
pop
out
sbb
daa
xor
xor
gs
pop
clc
into
test
lods
fisttpll
arpl
bound
std
sbb
adc
cmp
pop
adc
pop
xchg
dec
es
cld
cwtl
add
aas
lods
mov
frstpm(287
fisubl
mov
push
xchg
pop
push
mov
xor
pusha
jg
sub
test
push
add
mov
shll
roll
mov
adcb
faddp
in
jle
iret
push
shl
test
ss
pusha
stos
adc
cmpsb
inc
mov
into
lock
iret
mov
repz
inc
pop
mov
mov
add
into
sub
push
es
rcrl
push
inc
mov
cltd
add
jo
xchg
gs
outsb
dec
inc
sub
mov
loope
mov
imul
xlat
lods
mov
int3
sbb
add
ljmp
jo
push
ja
and
in
sub
lret
mull
mov
dec
out
iret
icebp
popf
lahf
rorl
xchg
xchg
insl
push
cltd
bound
and
push
mov
jnp
adc
pop
or
mov
in
test
lods
add
xlat
jg
xchg
cmp
lock
popa
pop
lea
pop
cwtl
sub
repz
jns
xchg
lea
repnz
pusha
mov
jns
pop
sub
dec
imul
adc
sahf
inc
adc
jno
dec
jno
mov
shlb
sub
mov
jg
cmp
ljmp
sbb
test
sbb
ljmp
jae
pop
push
jecxz
jle
inc
jno
push
mov
xchg
stc
or
stc
pmaddwd
js
fadds
in
and
movsl
jmp
xchg
or
cmp
jg
mov
stos
sbb
cld
add
and
arpl
aad
mov
loope
data16
hlt
xchg
mov
xor
inc
cmp
test
xor
xchg
mov
mov
pop
xchg
pop
dec
push
movsb
cltd
xchg
enter
jg
mov
inc
and
cmpsl
mov
ret
mov
in
ljmp
inc
fld
xor
mov
loopne
jbe
inc
dec
push
test
cmpsb
in
xchg
mov
dec
xchg
or
stos
popa
mov
sbb
add
adc
mov
faddp
mov
aas
fadds
dec
fistpll
dec
loope
psrlw
fimuls
cmp
cmp
test
dec
out
push
xchg
xor
pushf
push
add
push
sbb
xchg
xor
inc
jnp
jbe
gs
sub
sub
adc
nop
leave
xchg
sub
inc
inc
sbb
pop
sub
cmpsl
add
and
insb
aas
jno
dec
cmp
in
icebp
pop
lds
push
xchg
xor
out
xchg
bound
jno
inc
jns
ja
call
sbb
xchg
dec
mov
mov
hlt
mov
xor
dec
xchg
inc
and
lret
xor
out
cmp
addr16
dec
cmp
push
lret
inc
mov
pop
push
roll
dec
xchg
pusha
ss
mov
inc
mov
xor
leave
data16
dec
pop
mov
ja
call
jo
fisubs
jbe
pop
jb
sarb
jno
mov
inc
or
rcrl
or
icebp
into
cli
and
out
dec
and
adc
adc
inc
push
sub
jne
push
inc
nop
es
sub
rcrb
stos
cmpl
jb
imul
das
jb
andb
inc
dec
dec
outsl
out
bound
xor
enter
or
lods
int
rcl
adc
add
add
pop
or
dec
mov
cmp
dec
sbb
int3
enter
repz
call
std
xor
call
inc
out
lods
mov
or
and
movsb
je
loop
movsb
loop
dec
mov
add
or
push
adc
mov
push
out
cmpsb
lea
je
bound
stc
jno
or
jo
scas
push
leave
nop
out
sub
fidivrs
adc
push
imul
iret
ljmp
aad
jae
and
filds
into
add
add
mov
sarl
jnp
add
test
popa
or
bound
arpl
mov
cmp
jb
test
push
adc
xor
jno
mov
out
iret
je
and
add
fistpl
sti
insl
xchg
xchg
nop
dec
ret
mov
out
repz
mov
addr16
pop
cmc
lret
pop
cmpsb
pop
xor
outsb
xchg
orb
cld
cltd
lods
adc
add
dec
sbb
test
xchg
mov
sub
mov
fwait
js
test
dec
mov
xchg
mov
mov
inc
mov
and
push
jecxz
addr16
and
inc
or
aas
movsb
sbb
sbb
aaa
dec
xor
mov
jmp
mov
xchg
pushf
push
popl
lret
mov
cld
sbb
sub
mov
mov
std
test
fwait
dec
outsb
aad
lods
in
mov
pop
fldt
gs
fimull
inc
mov
dec
ja
dec
loope
gs
or
xor
je
das
jp
movsl
into
add
fwait
xchg
fldt
lods
jl
jl
inc
sub
sbb
push
push
xchg
dec
loope
and
xchg
mov
adcl
popa
jmp
mov
pop
add
movsb
inc
arpl
cmp
dec
inc
out
les
cmp
ja
into
loopne
lea
xchg
ficomps
pusha
pushf
pop
mov
dec
adc
movsl
jmp
dec
out
sbb
pop
scas
daa
mov
cmp
das
dec
xchg
bound
fwait
fwait
in
inc
dec
sahf
leave
mov
loope
mov
mov
mov
cmp
in
xchg
fisubrl
push
pop
jbe
leave
lock
testb
pushf
sub
cmovb
addr16
inc
dec
adc
mov
mov
sub
push
dec
int
adc
jo
arpl
out
xor
mov
insb
arpl
and
mov
cmpsb
push
insb
push
cmpsl
jge
call
nop
add
outsb
mov
pop
xlat
xchg
sti
sub
adc
push
inc
push
popf
sub
loope
leave
xor
or
movsl
aam
pop
fisttpl
xchg
push
sub
push
daa
jecxz
adc
scas
sbb
mov
sbb
mov
sbbl
push
fidivrl
popf
mov
push
lock
xchg
mov
adc
adc
lds
ds
sarb
dec
out
cmp
sub
sbb
test
and
mov
lods
push
jmp
mov
pop
xchg
in
jnp
sbb
pop
add
insb
mov
sbb
push
cltd
rcr
inc
ja
mov
mov
or
leave
jl
insl
enter
mov
dec
cltd
push
inc
inc
pop
js
push
cmpsl
repnz
lods
jmp
xor
shrb
jle
cwtl
dec
test
cmpsb
ds
scas
sbb
dec
pop
mov
push
std
ljmp
xor
hlt
out
leave
push
xor
xor
test
dec
dec
jb
mov
lds
mov
cmp
sub
mov
mulb
stos
lock
add
xor
fisttpll
jle
push
jae
ficomps
fucomi
cwtl
cmpb
pop
icebp
jp
xchg
test
push
loop
mov
and
repz
mov
dec
dec
cwtl
adc
dec
flds
push
sbb
lods
mov
jecxz
cmpsl
insl
cmp
fimull
mov
sub
add
push
mov
cmc
jmp
push
jo
sub
ja
mov
mov
dec
inc
stos
aam
cmc
imul
test
xor
aas
flds
frstpm(287
xlat
xchg
fisubrl
mov
mov
push
jo
imul
aas
inc
das
xchg
cmp
inc
mov
sub
les
cmpsl
sub
pop
movsb
cmpsb
jbe
inc
mov
and
test
inc
outsb
cmp
movsl
pop
movsl
cmp
mov
mov
rorb
mov
lock
sub
cmp
hlt
mov
je
adc
addr16
mov
and
jecxz
add
mov
pop
fwait
and
sub
stos
ss
mov
xor
jmp
sub
mov
in
loopne
mov
mov
enter
mov
cmp
orl
add
cmpsl
outsl
aas
xor
xlat
fdivrs
icebp
add
dec
push
inc
xchg
ds
sub
mov
outsl
xor
mov
int3
sub
xchg
sbb
xchg
mov
icebp
add
je
pop
cmc
ret
les
sub
mov
sbb
int3
sbb
dec
pop
sbb
lcall
mov
lahf
cld
sbb
and
jne
xchg
push
movsb
das
aam
outsl
pshufw
int3
push
jb
adc
div
sbb
xor
mov
sub
sahf
inc
pop
jecxz
inc
cmp
sbb
lds
mov
jg
inc
xchg
xor
test
jge
cmp
imul
xor
icebp
pop
fcmovu
dec
hlt
ja
xchg
rorl
fsubl
or
sub
scas
xchg
mov
sub
and
je
jle
call
dec
dec
in
mov
test
clc
test
cmp
ljmp
les
clc
push
jo
shll
mov
mov
adc
out
pop
xchg
cltd
mov
insl
sarl
aam
push
jp
add
mov
mov
stos
jo
inc
sub
add
aaa
popa
sbb
push
movsl
icebp
mulb
xor
popf
mov
sub
mov
lcall
pusha
add
std
pop
addr16
xor
daa
dec
cli
adc
cmp
inc
jmp
scas
sub
out
adc
dec
sub
pop
xchg
out
in
movsl
pop
jbe
jle
cmpsb
add
sub
or
inc
jb
xchg
out
push
mov
lock
jge
dec
aad
cmp
add
loope
inc
sbb
adc
ret
jo
xchg
pop
cmpb
imul
icebp
lods
stc
xor
popa
into
aam
fcoml
scas
push
jne
les
lods
jp
adc
ja
jecxz
rcr
xlat
mov
xor
dec
add
insb
jmp
adc
jo
dec
loop
enter
jp
add
push
inc
sub
sti
sbb
dec
fs
inc
in
test
insl
jb
cmp
out
jae
push
jmp
sbb
xlat
sbb
add
stos
jge
push
add
sbb
jae
outsb
mov
push
icebp
and
jge
test
rorb
and
and
shlb
dec
imul
cmp
loop
push
mov
lods
cmpsb
dec
fdivrp
lret
jae
outsb
out
or
mov
inc
inc
mov
arpl
xor
daa
sub
mov
jns
or
lods
cld
sbb
add
pop
push
dec
push
iret
pop
lods
ljmp
pop
inc
jl
mov
fdiv
dec
decb
mov
fs
fsubrl
mov
mov
mov
xchg
or
mov
inc
shll
icebp
xchg
stos
add
imul
pop
xor
cmp
mov
dec
jno
cwtl
loop
push
das
adc
fcomps
xadd
movsb
addr16
sti
ror
xor
sar
mov
insl
push
leave
test
push
mov
and
cmp
pop
mov
mov
push
inc
sbb
jp
fistpl
andb
inc
ljmp
test
negb
dec
xor
jl
mov
push
inc
jecxz
or
jb
jmp
push
add
sbb
xlat
dec
fldl
xor
jbe
mov
aas
pop
subb
stc
sub
out
out
lea
cwtl
into
inc
mov
ret
imul
sahf
icebp
lea
ja
mov
push
loope
jl
call
insb
mov
popa
stos
mov
mov
add
and
push
mov
sub
iret
inc
pop
push
mov
scas
mov
jg
in
out
or
push
mov
push
test
xorb
xchg
push
cmp
fucompp
push
inc
testb
inc
ja
test
inc
pop
dec
dec
sub
je
out
sub
jmp
pop
xchg
sub
or
jle
dec
sub
loope
xor
enter
or
push
jmp
add
add
daa
inc
xor
sub
aad
bound
idiv
or
sub
popf
adc
push
jle
sub
fwait
movsb
loopne
pop
sar
xor
dec
cmc
sub
inc
stc
stc
mov
sub
add
mov
inc
call
into
xlat
inc
cwtl
imul
inc
cmp
cmpsb
cld
dec
mov
dec
mov
clc
aas
repnz
test
jns
dec
add
outsb
push
out
add
out
scas
add
orl
dec
inc
aad
mov
repz
inc
rcrb
dec
int
movl
into
mov
adc
cmp
testb
jb
inc
jo
push
lock
jp
cmp
sbb
sub
push
test
xchg
cmp
mov
rorl
push
addl
and
jp
icebp
loope
dec
jb
in
jns
xor
pop
pop
fsubrp
stos
push
sbb
rorl
pop
cmp
dec
adc
lret
add
stc
test
mov
orl
mov
jp,pt
pushf
pop
lret
addr16
ljmp
test
scas
xor
lahf
sahf
xchg
push
xchg
loopne
shll
dec
jmp
jne
in
xor
jl,pt
sti
push
pop
mov
iret
lds
or
mov
rclb
das
out
mov
push
adc
cmp
mov
xchg
push
icebp
aam
jmp
xchg
mov
jmp
dec
out
sbb
push
in
pop
sub
xchg
sub
jne
jbe
dec
mov
push
cmp
sub
sbb
cmp
cwtl
ja
aad
sbb
outsl
cmc
jbe
adc
sub
adc
std
scas
cwtl
sub
repz
lods
stos
xor
loope
cwtl
sub
and
bnd
mov
ljmp
loop
sub
iret
push
xchg
into
dec
push
out
inc
mov
mov
jecxz
mov
dec
mov
in
lock
js
loop
xchg
jge
imul
jge
filds
pop
in
js
js
cwtl
add
stos
jge
sbb
js
push
insb
popl
mov
aam
cmpsl
out
enter
mov
xor
call
inc
fisubl
jle
cltd
push
inc
ficoml
push
mov
mov
cmpsb
xchg
jecxz
mov
sub
push
out
xchg
call
jle
negb
push
rorb
jno
lret
push
xchg
xchg
jmp
js
and
pop
jns
popa
jl
mov
das
xlat
xchg
bound
not
popa
cmp
rcrl
repnz
clc
into
stc
push
mov
stos
and
inc
jns
fimuls
lret
xchg
pusha
push
xlat
shlb
dec
lret
rorl
loop
xchg
clc
push
fdivrs
pop
dec
mov
cmp
cli
mov
inc
xor
jmp
cmpsl
cld
adc
jne
dec
sub
cmp
mov
jb
inc
adc
lock
fildl
in
jno
imul
dec
out
dec
cli
or
lret
dec
sub
jecxz
les
inc
mov
xchg
dec
cli
ljmp
mov
sbb
lods
jno
inc
add
jg
loop
cs
js
sub
in
leave
sbb
aaa
inc
repnz
nop
cmp
jo
push
fimuls
das
cmp
or
mov
sbb
lods
and
xor
mov
in
popa
addr16
je
lret
xor
push
mov
dec
pop
and
nop
pop
xchg
adc
loopne
xchg
push
rclb
mov
aaa
inc
fidivl
imul
hlt
enter
xchg
push
int
shll
push
xor
and
xchg
loop
sub
lret
jmp
sub
stos
mov
daa
add
ret
add
pop
sarb
cmp
jbe,pt
popa
hlt
mov
je
dec
inc
adc
dec
sbb
clc
clc
sbb
xor
movsl
and
xchg
jbe
dec
daa
mov
add
mov
add
cmpsl
in
int3
fimuls
cmp
xchg
loope
stos
xchg
push
sub
shll
inc
gs
cmp
sbb
sbbl
jno
clc
mov
push
test
push
push
jle
gs
shlb
mov
pop
adc
es
push
and
mov
les
inc
add
xor
sahf
jg
call
lret
loopne
icebp
aad
je
loop
adc
push
mov
loopne
enter
inc
xchg
shrb
repnz
xchg
sbbb
xchg
pop
dec
xor
jno
mov
add
mov
mulb
jl
mov
xor
xor
xor
lcall
mov
imul
nop
decb
addr16
or
popa
in
addr16
xorb
inc
test
test
mov
push
ret
flds
jns
push
push
sub
mov
pop
sbb
cltd
sbb
mov
jnp
ja
sub
fimull
pop
sub
mov
outsl
test
inc
push
sahf
bound
repz
xor
sti
and
mov
mov
ficoms
fldenv
add
out
shlb
add
ret
popa
movb
push
outsb
lret
or
sub
nop
in
in
inc
push
dec
xor
test
inc
push
jle
fsubrs
fucompp
sub
sub
inc
pop
bound
jo
xchg
inc
call
int
adc
push
or
mov
lods
inc
rcrl
or
jne
push
inc
outsb
adc
cmp
imul
pop
xchg
das
mov
mov
sub
imul
aam
mov
call
clc
orw
push
iret
cmpsl
nop
and
es
jmp
movsl
sbb
cmp
cmc
popa
and
jle
pop
and
mov
lret
lahf
pop
movsl
scas
ljmp
enter
leave
jl
aas
mov
or
inc
pop
mov
je
sub
cltd
sbb
inc
jp
icebp
mov
popf
fnstenv
pop
push
arpl
add
insb
nop
mov
fcmove
and
dec
jno
xchg
cmpsb
add
mov
aad
shrl
mov
mov
dec
add
and
inc
add
enter
loopne
insl
push
inc
mov
in
lea
xor
add
enter
decb
and
mov
mov
lds
sahf
je
movsl
xchg
repz
ja
sub
mov
mov
lock
jl
pop
pop
cmc
in
test
cs
aas
ljmp
push
sbb
or
icebp
imul
lcall
inc
xlat
imulb
movsb
inc
add
mov
mov
add
inc
lahf
cld
or
cltd
xchg
inc
jg
xchg
push
sub
sarw
mull
sbb
jno
jb
ret
fmuls
ret
daa
inc
fistl
add
sub
xlat
or
lahf
jns
cmp
lock
cmc
std
cmpsb
rolb
nop
lret
orl
sbbb
sub
enter
mov
jnp
mov
das
enter
mov
mov
loopne
adc
and
inc
add
out
sbb
xor
jnp
pop
mov
mov
and
rorb
cs
lret
icebp
sbb
xchg
into
pop
leave
jge
xchg
xlat
sbb
mov
cs
shrl
outsl
inc
insl
insb
lds
inc
xchg
mov
mov
jnp
adc
mov
lods
jg
inc
je
stc
mov
shl
mov
jl
insb
ret
aad
icebp
and
std
ss
sub
jmp
sub
dec
out
or
loope
sub
mull
and
clc
loop
fstpt
mov
mov
jmp
and
xor
in
mov
xchg
jl
mov
shlb
lea
stc
mov
or
jbe
lea
ret
fidivrl
inc
jl
push
js
leave
mov
ljmp
std
cs
mov
fdivrs
out
xchg
sbb
and
aas
xor
hlt
je
push
incl
sub
dec
out
push
adc
or
push
mov
jo
cmp
cwtl
repz
dec
stc
dec
dec
mov
sub
insl
or
pop
cs
jb
fsubrs
cltd
cwtl
shll
add
mov
xorl
dec
add
jle
nop
and
fildll
out
mulb
mov
pusha
dec
hlt
lea
mov
aad
in
pop
call
or
xchg
push
adc
pop
jb
dec
xlat
jle
dec
loop
dec
mov
ss
sahf
incb
or
mov
orb
in
hlt
je
jns
out
je
mov
pop
sbbb
inc
sbb
into
lock
bswap
push
cmpsb
cwtl
dec
dec
iret
xchg
int
jno
mov
into
or
mov
rcrl
icebp
aas
clc
xor
insb
sub
inc
sbb
mov
lcall
mov
xchg
imul
mov
cmp
pop
ja
mov
or
jp
lods
xchg
xchg
mov
rcrl
inc
dec
mov
jb
and
sub
sti
xchg
mov
adc
in
jg
out
pop
pop
out
cwtl
inc
sub
push
sbb
jmp
lods
sub
mov
inc
test
cs
pop
fldenv
orl
outsb
stos
inc
mov
pop
hlt
pop
icebp
or
push
enter
jno
dec
xor
scas
or
cmp
pop
mov
pop
out
mov
mov
inc
jae
push
ss
fucomi
adc
xor
and
sahf
pop
cwtl
mov
inc
std
enter
test
push
dec
sbb
jle
push
jmp
in
jbe
nop
jg
push
and
sbb
inc
sahf
mov
adcl
int3
or
loope
insl
add
mov
pop
popa
push
ja
rcrl
jbe
and
lahf
adc
stos
cmpsb
adc
cmpsb
sbb
xlat
jle
jnp
orb
dec
push
mov
pop
sbb
aam
test
ja
jmp
sub
popf
mov
dec
adc
xchg
sbb
inc
dec
cmpl
cmp
pop
jle
inc
pop
cmpsb
aaa
leave
jns
pusha
dec
sahf
and
inc
sbb
pop
xor
mov
adc
dec
jbe
sti
loopne
movsb
mov
popa
sub
xorl
push
dec
rol
mov
inc
imul
jae
int
dec
pop
push
pusha
popa
jle
call
push
lock
jge
stc
or
pop
xor
shll
in
and
inc
sub
je
sbb
fwait
inc
jl
inc
add
mov
cwtl
push
mov
xchg
cmpsb
fdivl
jp
jnp
xchg
dec
mov
sahf
adc
mov
jp
out
insl
std
inc
adc
pop
hlt
and
outsl
xor
mov
and
inc
insb
hlt
and
test
inc
adc
icebp
mov
xor
mov
ljmp
cmp
sub
or
in
sbb
mov
pushf
and
test
sub
push
inc
ds
jne
add
dec
sub
inc
mov
in
dec
mov
push
out
push
add
mov
xor
dec
mov
xorb
cmp
add
std
xchg
lret
inc
xchg
jbe
mov
lds
jg
push
mov
push
mov
add
jnp
fadds
insb
and
adc
jo,pt
je
test
std
jg
jne
cld
imul
in
inc
dec
ds
lret
adc
mov
test
jmp
jp
inc
addl
cltd
jecxz
sub
cld
lods
popa
arpl
mov
pusha
mov
cmc
test
xchg
in
incb
pushf
and
xchg
test
mov
or
int3
bound
pop
inc
mov
add
sarl
or
outsl
mov
dec
add
add
xchg
xor
mov
sti
mov
adc
jmp
movb
push
or
dec
lret
repnz
mov
or
test
fwait
or
icebp
jb
in
setbe
push
in
mov
jne
sar
xchg
xchg
xlat
and
movsb
outsb
cmpsb
mov
push
jge
cmp
pushf
cld
leave
cmp
mov
cwtl
mov
pushf
lcall
cmp
cltd
pushl
arpl
or
cwtl
dec
dec
jno
and
push
dec
sub
push
fdivl
sbb
fildl
js
dec
mov
sbb
fsubr
mov
jle
sbb
add
inc
icebp
std
push
push
lock
push
push
loope
pop
dec
shlb
push
loop
jle
sub
lods
aad
movsl
mov
xor
adc
xchg
sub
push
and
lock
push
cmc
bound
mov
mov
cmpsb
xchg
and
andl
nop
jg
add
or
push
pop
cmp
testb
xchg
add
push
mov
in
lret
xor
aas
push
jnp
int3
pop
stos
test
out
mov
xor
xchg
movsb
adc
dec
je
aad
in
xchg
mov
mov
mov
sub
adc
mov
xchg
pop
rcpps
cltd
lea
jmp
cmpsl
cmp
and
mov
pushf
scas
jne
pop
sti
mov
test
cli
adc
jbe
into
mov
leave
cmp
and
jbe
int
push
rorl
push
and
add
push
cmpsl
and
jg
in
adc
nop
dec
push
fistpll
sbb
and
mov
jmp
js
xchg
add
lcall
loop
bound
sbb
xchg
xlat
ds
cwtl
dec
lret
dec
pusha
out
lock
insb
push
xchg
ja
adc
jns
cmp
imul
jg
push
sub
push
in
sbbb
cmp
movsl
mov
xchg
lods
mov
in
xchg
jb
mov
mov
sub
daa
je
sub
mov
fucom
mov
jnp
out
sbb
sbb
mov
mov
mov
test
pop
test
les
js
popa
lret
clc
jno
ds
cs
fstps
jge
or
enter
jle
push
jns
pop
dec
jp
iret
icebp
mov
or
lods
pop
test
inc
inc
push
pop
mov
push
mov
cli
push
xorl
sub
sbb
xchg
mov
push
jge
adc
inc
jo
add
sbb
sub
and
dec
fwait
idivb
inc
jecxz
add
out
pop
jnp
sub
pop
fldt
jbe
test
cmpsl
and
pop
loopne
cmp
fwait
pop
jge
mov
xchg
and
or
pop
pop
jmp
and
fincstp
mov
inc
or
cmpsb
xor
repnz
inc
cmp
push
loopne
mov
xor
fildl
push
movsb
in
les
popa
xchg
outsb
cmpsl
test
xchg
xor
mov
and
sub
das
dec
push
insl
aam
mov
in
pop
leave
sub
popf
xor
mov
addr16
lock
repz
ret
or
aam
sti
mov
jno
shlb
hlt
jns
sub
cmc
and
mov
mov
xchg
cltd
jns
int
sahf
negl
or
cli
in
jecxz
mov
mov
dec
inc
aaa
xor
mov
aam
sar
repz
add
mov
cmp
out
xor
xor
and
aas
rcr
pop
or
pop
mov
xlat
push
mov
aas
and
pop
sbbl
pop
ret
aad
cld
push
adc
jmp
inc
push
je
jno
inc
mov
mov
mov
ret
imul
push
jbe
gs
push
adc
in
leave
adc
inc
fists
jno
dec
adc
aaa
in
scas
jae
mov
sbb
mov
addr16
bound
push
cwtl
sub
mov
divl
cmp
lret
icebp
ss
nop
dec
movsl
decb
sbb
test
push
sbb
push
dec
or
xchg
push
mov
push
push
sub
xchg
mov
xchg
sub
inc
roll
int
and
cwtl
mov
jmp
cmpb
xlat
stos
lods
stc
fisubrs
sub
mov
mov
xchg
jg
icebp
mov
sbb
push
add
not
test
jnp
jmp
das
hlt
scas
sahf
inc
xchg
and
outsb
mov
xchg
pop
jp
mov
jb
inc
add
push
popa
jge
jg
mov
cmp
aad
dec
mov
push
mov
lock
xchg
test
push
xor
fld
aas
stc
mov
call
lods
cwtl
jne
nop
and
sbb
mov
sahf
adc
bound
jae
ror
mov
sbbb
mov
sbb
sbb
dec
lods
imul
dec
inc
ret
test
ljmp
fmuls
cld
sub
pop
stc
stos
pop
xchg
popf
repnz
xchg
cmp
xchg
and
in
jb
xor
mov
sub
inc
pop
mov
dec
pop
std
or
xor
adc
jbe
xchg
int
mov
pop
inc
test
orb
dec
leave
add
jns
pop
jl
sub
jge
add
mov
aam
fiaddl
in
mov
or
inc
and
xor
cld
cmp
fidivrl
add
dec
addl
loop
std
out
or
xchg
jge
xchg
bound
divl
sbb
sbb
js
lods
jmp
sbbl
outsl
inc
add
pop
adc
adc
dec
dec
nop
nop
push
mov
jge
xor
out
lret
jbe
cld
dec
or
test
mov
add
pop
pusha
cmp
adc
pop
sub
lret
insb
dec
push
decl
mov
stc
aas
mov
add
test
push
cmc
movsl
push
mov
mov
jns
adc
inc
sbb
xchg
popa
jne
notb
push
test
sbb
gs
adc
adcb
pop
cmc
into
add
mov
pop
cmp
sbb
les
outsb
cmc
mov
mov
insb
clc
pop
jbe
or
imul
gs
sbb
lds
orb
mov
jle
cmpsb
in
pop
bound
fldt
cmpl
lds
sbb
mov
xor
jo
add
sbb
xchg
cmc
jno
enter
sub
test
fcoms
mov
inc
dec
shlb
test
outsb
xchg
pop
xchg
inc
mov
dec
in
fisttpl
mov
icebp
ds
subl
in
add
jp
push
mov
shlb
sbb
pop
or
imul
jo
outsb
lret
mov
cwtl
mov
xchg
shrb
jne
cmp
push
sahf
rolb
mov
dec
mov
jl
jae
dec
jns
xor
or
cmpsl
and
cmp
bound
pop
push
scas
sub
daa
mov
dec
cmpb
test
cli
movsl
pop
xor
scas
aad
pop
inc
inc
imul
repz
pop
inc
pop
and
push
sbb
out
pop
xchg
adc
dec
call
xchg
and
adcl
jnp
xchg
frstor
hlt
call
fists
jne
lret
loope
mov
xchg
adc
adc
jp
mov
mov
cwtl
les
fdivrl
mov
cltd
mov
push
jle
je
push
lds
mov
and
jbe
xchg
mov
les
jle
jno
imul
imul
addb
mov
imul
imul
gs
mov
pop
adc
fucom
jb
mov
out
ret
shrl
lock
or
dec
push
adc
sahf
xor
sti
je
clc
dec
movsb
jecxz
bound
inc
mov
out
push
leave
jmp
push
inc
adc
popf
dec
lock
push
mov
inc
dec
push
inc
aad
movb
aad
es
dec
test
mov
add
fstpt
test
repnz
nop
stos
test
mov
xor
vmwrite
sub
sbb
xchg
js
mov
sbb
cmp
andb
lret
movsb
push
insb
jmp
pop
inc
xor
sub
and
arpl
adc
hlt
ficompl
fcmove
mov
fsub
shrl
das
popf
mov
sbb
and
dec
push
cmp
enter
ja
push
and
fisubrs
and
mov
arpl
add
out
add
in
push
pop
mov
jp
sti
stc
clc
bound
or
aad
ljmp
or
in
outsl
ljmp
lods
xchg
shl
in
gs
out
dec
cs
xor
xorb
mov
xor
cmpsl
and
sbb
cmp
inc
dec
jb
es
je
push
mov
fidivrs
gs
lds
xor
xor
icebp
or
lock
and
sbb
cld
fcoms
test
enter
jle
xor
add
xchg
lds
xchg
sbb
push
jmp
cmpl
daa
loopne
orb
dec
mov
ljmp
push
inc
js
aam
mov
dec
xor
mov
mov
mov
and
loopne
fadds
add
lea
adc
cmovp
add
cmp
pop
cmc
or
lret
leave
lret
shrb
loope
mov
dec
mov
jl
sbb
fsubr
ret
xor
push
xlat
or
loope
lret
fdivp
xor
xchg
jo
dec
je
loope
cmp
push
fcoml
leave
xchg
pop
cmp
loope
inc
js
test
or
gs
and
cmpsl
bound
inc
or
jo
cltd
movsb
xchg
mov
sub
leave
adc
xlat
xchg
in
rclb
jge
rorb
add
sahf
shrl
dec
test
std
pop
push
mov
jl
outsl
fs
mov
les
or
xchg
inc
or
call
dec
inc
sbb
cmpsb
xor
jmp
stos
mov
push
scas
xchg
icebp
scas
jo
dec
testb
add
sub
inc
lret
sti
push
fwait
das
dec
sti
jb
jge
movsl
push
ss
mov
xchg
icebp
enter
insl
neg
pop
jl
adc
pop
dec
arpl
scas
test
push
sub
inc
rcl
gs
xchg
outsb
enter
cmpsl
test
testl
mov
shlb
mov
cmp
in
push
or
sbb
fs
and
and
out
jne
jo
ret
icebp
jge
popf
sub
or
adc
pushf
in
cmp
xor
adc
push
xor
dec
push
pop
lock
mov
mov
decl
pushf
pop
xchg
sub
lret
and
jp
test
xor
test
cmp
movb
or
insl
push
pop
leave
or
arpl
movhps
popa
jp
pushf
ss
das
icebp
sti
xchg
fstpl
cmp
xor
dec
jg
jns
fidivrl
sbb
pop
push
sub
aam
dec
xchg
inc
push
push
loopne
cmp
ljmp
pop
das
pop
inc
add
daa
bound
cltd
ja
cmp
inc
xchg
inc
pop
pop
dec
jbe
inc
aaa
mov
rcr
cmp
leave
inc
pop
aad
lock
mov
ljmp
xchg
pusha
xchg
xor
mov
ds
dec
inc
mov
add
sbb
cltd
shrl
add
mov
cmpsb
jmp
lock
stos
adc
mov
dec
arpl
xorb
mov
add
aam
cltd
repnz
xlat
sub
mov
inc
les
mov
and
hlt
and
clc
fldenv
call
xlat
mov
imul
push
test
insb
add
add
sbb
sar
pop
xchg
in
imul
and
orl
cli
sub
sbbl
pop
jns
mov
cmp
xchg
push
rcll
test
gs
add
jno
cltd
adc
inc
aas
mov
repnz
outsl
cli
adc
or
xor
insl
jecxz
cld
mov
or
pushf
dec
call
jbe
xor
cmp
pop
shrb
push
js
xchg
pop
mov
cmp
adc
and
int3
sbb
push
lahf
lock
pop
dec
mov
cmpsb
fcmovne
js
xchg
xor
dec
adc
adc
je
sub
loopne
sub
push
add
ret
mov
arpl
xchg
push
cltd
pop
pop
cltd
dec
sbb
ss
push
cld
mov
inc
imul
imul
mov
cli
mov
addr16
mov
sbb
mov
cli
push
movl
xchg
pop
mov
cmp
adc
dec
adc
jnp
jo
adc
cmp
jno
sarb
imul
fs
ret
jb
inc
push
ja
push
cltd
fldcw
push
adcl
jns
push
dec
pop
jo
rcll
jnp
clc
out
adc
jns
stc
lret
add
cmp
lods
dec
js
icebp
cltd
xchg
out
lahf
mov
aas
fists
fcoms
mov
inc
jg
mov
sbb
dec
mov
out
inc
sub
xchg
js
and
sbb
xor
add
cmp
jle
mov
push
mov
fwait
mov
jmp
sbb
mov
shlb
cmpsl
pop
les
cmp
insb
dec
les
cmp
xor
sahf
movsb
jp
cli
pop
inc
mov
iret
jbe
in
pop
pop
aaa
dec
subb
outsb
cmpsl
sbb
int
or
fs
add
fwait
mov
mov
stc
and
data16
pusha
rcrb
leave
xchg
mov
loope
inc
xchg
sub
nop
jns
fiadds
xchg
in
dec
inc
andb
lcall
js
mov
or
inc
adc
loop
inc
and
mov
dec
cld
fadd
inc
in
inc
jns
ds
das
popa
dec
jnp
ljmp
xchg
adc
mov
and
mov
lret
inc
or
daa
mov
pop
adc
sub
mov
and
mov
mov
or
pop
or
mov
sub
and
sbb
aam
add
cli
outsl
scas
xor
dec
fxam
inc
push
cmp
xchg
sti
hlt
jo
test
ljmp
jg
nop
outsl
add
frstor
jge
xchg
lcall
sub
loopne
xor
shll
dec
pop
jns
add
sbb
cmp
repnz
pop
std
mov
test
into
loope
push
inc
popa
pop
inc
push
adc
enter
mov
shrb
movsl
daa
xchg
jg
jno
out
test
cld
fistl
pop
xchg
fmull
test
jle
rolb
push
test
lcall
jmp
jb
jecxz
dec
mov
subb
add
jns
cltd
jp
jp
or
xchg
inc
mov
xor
aas
mov
sahf
xchg
mov
mov
mov
pop
adc
lods
dec
loopne
pop
inc
add
add
adc
notl
in
lds
and
addr16
or
not
cmpsl
pop
mov
xchg
test
inc
pop
mov
shrb
das
mov
pop
mov
add
fs
and
mov
rcl
jns
add
push
enter
and
aad
push
mov
daa
add
call
push
cwtl
sub
jbe
pop
pop
lods
jp
push
xchg
push
jae
push
lahf
jbe
icebp
jmp
push
sbb
push
jecxz
adc
xor
stos
inc
push
mov
adc
adc
add
jae
jo
push
jno
jmp
cmp
std
mov
jl
fmul
cwtl
test
movsl
in
push
lea
or
gs
mov
repz
call
int3
fsubrl
push
ja
mov
out
ljmp
out
ret
or
addr16
push
imul
loop
aad
pushf
or
outsl
adc
ret
jo
pushf
inc
inc
xor
mov
pop
dec
or
xchg
pop
aad
lret
mov
xchg
loope
mov
mov
shl
add
jnp
xchg
push
out
jecxz
push
pushf
nop
dec
mov
cmp
jmp
sub
addl
jo
add
pop
mov
mov
je
aam
fisubrl
sbbb
push
ret
pop
and
ljmp
scas
fisubrl
add
repnz
gs
jp
mov
js
out
mov
int3
arpl
sbb
hlt
sbb
rorb
popf
imul
rcrl
mov
mov
repnz
mov
lea
cmp
jge
ret
mov
jne
pop
mov
jle
and
xchg
sbb
sbb
inc
stos
loopne
fidivs
pusha
pusha
addr16
adc
and
clc
imulb
mov
sbb
les
push
sti
pop
adc
cmp
sbb
es
call
dec
mov
xor
and
jo
jns
jl
out
and
into
xor
xchg
loop
repz
xlat
fprem
mov
int3
loopne
pushf
mov
pop
cld
jmp
pop
stos
push
push
jnp
test
jle
cmc
dec
dec
and
sbb
xchg
jg
imul
arpl
mov
pop
dec
cs
xchg
test
rol
add
subl
repz
xchg
mov
cmc
mov
cmp
dec
leave
jb
ret
dec
cmpsb
mov
jg
fsubrl
mov
inc
jnp
dec
jne
inc
jae
fbld
pop
aaa
xchg
divb
fstl
xchg
pop
ret
das
popa
stos
lods
mov
cmp
push
push
jecxz
and
aaa
cli
loop
cli
add
pop
sahf
out
loopne
aam
or
xor
pop
incb
sbb
testl
or
mov
xlat
cmp
lahf
xchg
or
leave
and
inc
orps
mov
pop
push
aaa
inc
repz
outsl
inc
xor
imul
adc
ret
mov
adcb
or
dec
mov
popf
fadds
mov
aam
mov
pop
out
in
call
mov
sahf
orb
int
outsl
fwait
add
dec
or
dec
test
jmp
je
cwtl
bound
sub
xchg
inc
mov
out
pop
inc
jbe
call
mov
repz
jo
and
mov
sbb
outsl
inc
lret
inc
lret
lahf
pusha
imul
insb
push
sbb
inc
fwait
mov
insl
add
orl
xlat
mov
adc
icebp
js
outsb
jne
jnp
pop
xor
fcoml
test
pop
cmpsb
movsb
ret
ds
fs
ljmp
sbb
or
inc
push
pop
jne
mov
jno
stos
clc
sar
dec
mov
enter
add
decb
mov
out
push
bound
das
add
aas
scas
testb
jne
push
jnp
sub
jbe
mov
cmp
sahf
shl
icebp
addb
ds
mov
fisubl
xchg
out
push
inc
sub
sbb
push
insb
dec
jle
pop
test
addr16
ud0
xor
jl
movsb
mov
jno
pop
repz
or
ds
push
enter
xchg
cmc
xchg
jb
movsl
pop
fiadds
dec
dec
jg
inc
clc
ja
test
mov
insb
in
clc
cwtl
xor
hlt
mov
hlt
out
xor
sbb
movsl
in
loopne
outsb
aam
sahf
bound
jo
stos
cmp
jg
push
mov
inc
mov
mov
rorb
int3
inc
sbb
cli
jge
dec
sub
lret
adcl
imul
xchg
fsubl
ficomps
adc
jno
sbb
sarl
stos
jno
rorl
mov
es
dec
xor
dec
imul
in
sub
mov
repz
test
add
cmpsl
jbe
stos
loop
jns
cli
xor
pop
insb
leave
test
mov
push
aas
cmp
mov
pop
pop
mov
adc
or
dec
push
jo
mov
jg
popa
mov
lea
pushf
cltd
cmp
lahf
jae
cmp
subb
push
push
push
roll
les
jno
adc
jmp
pop
out
outsb
lret
ret
cmpsl
mov
sbb
dec
push
or
or
iret
dec
out
icebp
cwtl
scas
inc
leave
mov
pop
loope
imul
inc
lahf
pop
jmp
adc
add
out
dec
fdivr
aad
dec
inc
pop
mov
sbb
mov
jns
sahf
inc
insl
loope
pop
pop
push
les
or
jns
ljmp
inc
aam
enter
jle
pushl
lret
enter
sub
clc
inc
sub
cwtl
js
xor
dec
test
out
mov
pop
or
out
pusha
push
stc
xor
push
cmp
ljmp
bound
aas
mov
lods
sbb
fmuls
inc
insl
mov
fistl
cmpl
lock
push
cmp
adc
sbb
sub
es
sub
mov
mov
ret
call
test
jge
mov
lods
fldcw
jno
lret
arpl
xchg
push
scas
sbb
inc
inc
int3
stos
mov
je
insb
idiv
xchg
syscall
in
pop
das
imul
int
ret
xchg
data16
in
mov
push
cmp
and
jae
incl
popf
and
xchg
aad
in
insl
and
push
jns
sbb
mov
dec
jbe
jns
mov
stos
lret
popa
push
pop
loope
push
mov
xor
add
loope
and
popa
sub
int
je
push
adc
xor
dec
outsb
mov
inc
je
jmp
out
mov
addr16
call
int
pop
les
mov
std
or
sbb
das
inc
lods
arpl
icebp
inc
xor
inc
loopne
movsl
je
xorl
pop
in
push
repz
aas
andl
fsubs
xchg
dec
push
adc
imul
jb
and
xchg
test
sub
sub
sahf
inc
pcmpgtd
pushl
fisttpll
cld
xor
fiadds
sub
cwtl
movsl
push
shr
push
popa
insb
enter
pop
cwtl
cmp
mov
arpl
sbb
push
cs
push
mov
sub
xor
and
out
pushf
call
imul
cmp
fwait
mov
inc
inc
xor
sub
lret
je
std
cmpsb
adc
loop
lahf
aas
cmp
sar
push
jmp
jbe
push
jb
xchg
in
sbb
insb
outsb
and
lcall
jo
cmc
sahf
outsl
aas
roll
dec
xchg
or
fwait
adc
fsubl
add
push
dec
adc
mov
ret
pop
xchg
insb
fbld
fmuls
xor
lock
or
mov
sub
adc
jnp
mov
shlb
daa
dec
insl
jp
fcoml
sub
cmc
repz
jl
cld
xor
xor
pop
inc
js
jnp
lods
pop
sbb
add
or
lret
dec
daa
stc
push
dec
dec
add
out
jae
mov
les
insl
mov
call
jle
add
jnp
into
xor
and
mov
and
scas
push
outsl
jge
fdiv
les
inc
or
movsb
xchg
lods
daa
mov
mov
push
insl
mov
enter
mov
js
sub
jne
movl
lods
cmc
fdivrs
ja
xlat
outsb
push
inc
and
or
push
cmp
adc
sub
enter
jns
push
inc
jge
fcmovnu
jne
cltd
inc
ret
push
xchg
sti
call
mov
inc
mov
inc
pop
das
aas
mov
jp
in
sbb
cmp
or
sarl
mov
adc
pop
dec
addl
add
insb
adc
bound
repz
sbb
xchg
lods
add
movl
test
outsb
loop
jg
xor
lahf
fildll
fs
pop
sbb
aad
pop
enter
fcmovb
xchg
dec
clc
pushf
sbb
xor
and
mov
jl
inc
out
push
adc
dec
std
movsb
test
jns
cltd
fs
sub
aam
dec
dec
inc
in
insl
jae
xchg
ljmp
movsb
push
movsb
pop
daa
mov
jno
push
pop
stc
dec
add
jne
mov
jae
daa
out
or
dec
mov
dec
sub
std
and
or
cmc
pushf
out
repz
out
inc
icebp
popf
fcmovnu
nop
xor
lds
cmc
in
xor
dec
lock
push
lahf
inc
or
pop
imul
jp
outsl
mov
call
mov
push
ds
pusha
js
add
sahf
add
lcall
xor
jecxz
cmp
cmc
push
sti
lods
jae
mov
cwtl
cli
push
fnstenv
sahf
fstl
xchg
sbb
cli
call
jno
and
dec
imul
or
push
sub
add
xchg
or
outsb
arpl
xchg
mov
hlt
mov
push
xorb
out
mov
rolb
int
rcrb
int
lret
cltd
mov
cmp
mov
mov
dec
inc
jo
jge
idivb
push
adc
fldenv
into
cmp
dec
mov
jo
mov
mov
mov
adc
xchg
outsb
mov
fwait
inc
jno
inc
iret
loope
push
dec
sbb
mov
aam
pop
mov
iret
es
pop
mov
and
cmp
test
sub
outsl
or
pop
push
rcr
sub
je
sub
mov
fistpl
jnp
loop
aaa
nop
push
inc
jns
push
jle
popf
lds
mov
push
push
adc
jb
test
test
mov
ss
mov
insl
stos
pop
rorl
sahf
cmp
push
sbb
inc
xchg
pusha
inc
shl
shl
mov
xchg
add
sbb
cmp
stc
scas
jg
test
inc
xor
inc
push
adc
jo
xchg
pop
insb
jbe
sub
adc
out
pop
jae
push
pop
or
add
cmp
filds
or
imul
out
mov
std
lds
fnstcw
push
lret
mov
xor
leave
js
insl
cmp
dec
fbld
imul
inc
leave
jp
add
sbbl
mov
pop
sub
or
movsl
int
js
cs
gs
stos
dec
cli
sbb
jl
cltd
or
xor
std
mov
test
cld
mov
dec
xchg
sti
jns
aas
jg
cld
push
scas
out
pop
add
push
ret
aaa
cmpb
inc
gs
pop
test
cli
lret
sbb
xchg
leave
mov
adc
and
xchg
mov
jbe
adc
xor
aaa
dec
adc
mov
xor
adc
jo
adc
push
fidivrs
mov
adc
push
adc
out
in
scas
push
mov
rcrb
incl
pop
jl
push
stc
push
mov
cmp
outsb
mov
in
inc
fbstp
into
test
ret
or
lods
push
popa
or
jl
add
cwtl
sbb
add
mov
dec
pop
pop
int3
cmp
repz
inc
add
fsubl
jecxz
pop
or
imul
je
push
jae
pusha
inc
or
in
dec
int3
dec
jmp
das
int3
leave
inc
mov
push
std
in
outsl
push
and
stos
repnz
btr
out
stos
insb
cmc
scas
and
lods
enter
out
jle
fisttpl
cwtl
aas
loopne
sub
rorb
push
jge
adc
adc
mov
dec
add
sub
xor
add
out
xor
add
mov
and
xchg
jl
add
pop
inc
lock
jb
in
push
loop
hlt
outsl
xor
push
addr16
shlb
xor
fxch
xor
imul
xchg
jp
lods
popa
add
fnstenv
call
mov
add
scas
incb
out
add
adc
popf
movsb
out
popf
dec
add
scas
jno
ds
mov
and
test
mov
xor
testl
leave
xchg
xrelease
out
test
push
pop
add
sbb
clc
lock
cmp
sub
mov
xchg
pop
frndint
sti
in
xchg
pusha
adc
mov
enter
or
mov
mov
enter
ja
movsb
mov
loope
dec
aam
cmp
mov
popf
pop
push
mov
outsl
and
mov
push
fdivs
xor
pop
push
sbb
fiadds
test
in
lcall
and
aas
sub
mov
int
dec
mov
add
orb
xor
fwait
ss
adc
enter
mov
ret
pop
sbb
dec
pop
lock
and
lcall
ret
dec
into
shlb
mov
imulb
sub
xchg
call
xor
addr16
fs
inc
cmpsb
pop
cmp
fiaddl
jb
lock
push
fnstcw
xor
cmpsb
adc
fildll
mov
gs
iret
jnp
outsl
repnz
mov
fildll
scas
leave
xor
xchg
addr16
fcmovb
sbb
mov
in
mov
inc
fsubl
mov
mov
fbstp
arpl
dec
int3
sub
xchg
pop
pop
test
sbb
lsl
gs
aam
pushf
shlb
pop
pusha
and
add
push
xor
ret
shl
movsl
cwtl
movb
hlt
jge
xchg
mov
cli
aad
out
dec
lods
in
addr16
mov
xchg
popa
imul
outsb
add
jmp
jecxz
sub
aaa
outsb
or
jmp
jae
mov
jns
pop
jne
stos
dec
add
mov
adc
sbb
insb
stc
gs
dec
xlat
pop
push
std
aad
or
jg
xor
dec
repz
mov
lret
pop
lods
jecxz
xchg
jge
add
adc
test
push
xor
pop
push
arpl
testb
scas
sub
outsb
nop
aad
push
scas
lock
lea
bound
pop
ficompl
jmp
adc
and
adc
push
out
int3
dec
jbe
pop
hlt
fisttps
fistl
aad
add
test
pusha
gs
test
mov
and
push
pop
dec
xchg
jmp
cltd
ficomps
mov
add
jmp
rcrb
fdivl
inc
pusha
test
cwtl
jl
addb
ficomps
push
or
dec
lea
or
in
imul
sbb
push
fadd
sub
dec
ds
xor
mov
inc
push
test
lret
insb
adc
mov
lock
lcall
push
add
loop
jo
mov
sarb
jnp
and
push
fsub
mov
inc
mov
out
shll
dec
xor
pop
xchg
jno
dec
sbb
mov
cmp
add
cmp
ficompl
out
loop
xchg
fwait
pop
movl
js
pop
mul
inc
and
js
dec
xchg
xchg
arpl
push
and
jmp
cmp
cmpsl
and
pop
push
bound
popa
jg
out
adc
add
je
test
into
pop
mov
xchg
xchg
inc
popf
sbb
push
mov
cmpl
ds
gs
aam
and
sub
push
gs
inc
gs
xchg
gs
and
jmp
ss
data16
ljmp
xor
inc
sub
xchg
xchg
inc
cwtl
jmp
xchg
ss
jo
testl
jmp
jle
xchg
lahf
insb
xor
xor
add
adc
call
mov
mov
test
cltd
xchg
xor
cwtl
leave
sbb
jmp
or
cmp
add
cmpsb
xchg
in
jle
popf
enter
pop
movsl
shll
sbb
cmp
rclb
fnstcw
lock
and
ljmp
imul
loope
push
test
shll
cld
icebp
push
cmc
in
or
out
jo
jns
hlt
outsl
push
jl
push
lret
cmpsb
pusha
hlt
mov
outsb
mov
in
xor
out
sti
inc
lods
outsl
xchg
loope
mov
fldt
imul
fs
dec
icebp
cmc
outsb
out
into
inc
pop
js
test
push
mov
mov
xchg
push
add
test
sarb
popa
mov
dec
sub
inc
fcoms
dec
sbb
in
add
jmp
rorb
cmpsl
cli
sbb
ret
idivl
inc
loop
dec
xchg
inc
cltd
or
mov
dec
imul
fst
sbb
sarb
adc
push
lds
sub
fdivp
arpl
andl
inc
repnz
aad
sub
fcoms
mov
xchg
outsb
int3
hlt
jne
loop
jns
cmp
shll
sub
in
xchg
roll
and
fisubrs
aam
mov
xchg
inc
inc
push
xorb
inc
mov
int3
pop
idivl
das
jle
leave
lods
ds
out
xchg
push
ja
xchg
lahf
inc
inc
ja
cmp
js
into
cmp
or
mov
rcrl
mov
fsubs
mov
or
sbb
add
dec
lds
inc
call
push
push
mov
ss
mov
lods
jge
jp
js
dec
add
jl
gs
jbe
stc
icebp
dec
lock
add
or
mov
sti
pop
sarl
mov
test
sub
test
je
jne
xchg
repz
leave
jmp
into
fs
stos
aas
mov
mov
xchg
push
fstl
sub
cld
pop
lods
aad
pop
lret
inc
test
in
push
pusha
shl
add
es
or
jle
dec
sub
mov
sbb
stc
popa
arpl
jbe
pop
dec
stos
lret
popa
xor
and
shlb
mov
and
xchg
pop
pop
int
sub
add
fwait
sbb
dec
dec
aas
jo
popa
mov
jge
jb
outsb
push
cld
mull
bound
fisttpl
hlt
filds
shrl
pop
mov
pusha
cmpsb
xor
push
stos
rol
xor
push
jmp
outsb
inc
and
jb
loop
inc
insl
cmp
mov
add
fdivl
push
xchg
jne
mov
sub
loopne
mov
mov
in
mov
adc
shll
dec
dec
cmp
sub
cmp
push
or
je
ds
into
movsl
cs
adc
mov
ja
inc
out
push
pop
fistps
mov
push
pop
enter
rcl
and
or
in
pop
push
shrb
ljmp
push
xor
fcmovb
adc
ret
jns
xchg
fsubr
inc
xchg
ror
dec
mov
pop
add
cwtl
les
or
sbb
jo
into
dec
xor
scas
es
xor
sub
rcll
cmp
and
leave
push
inc
jmp
testl
jne
es
xor
shll
dec
dec
pusha
dec
mov
add
ja
popa
sbb
int
and
repnz
sub
out
nop
repz
cmpsb
ret
sahf
scas
pop
xchg
push
mov
mulb
mov
roll
and
je
xchg
fdivrp
pop
xor
jno
les
pop
hlt
jb
inc
outsb
fimull
ja
stc
pop
rcll
test
pushf
cmpsl
cltd
or
je
cli
in
sub
xchg
ret
lds
or
mov
cmc
out
sbb
movsb
in
xchg
mov
pop
dec
xchg
xchg
sub
lret
xchg
add
cmpsl
pop
add
jae
das
sti
in
xchg
rcrl
sahf
dec
mov
push
and
jmp
mov
xchg
inc
je
sub
imul
insb
push
and
clc
stos
push
loop
push
dec
je
into
dec
scas
mov
clc
xchg
inc
dec
xor
lahf
xchg
inc
clc
shll
jg
into
pushf
test
pop
cwtl
lahf
icebp
dec
rcrl
pop
pop
or
xchg
push
aas
jp
xor
dec
jl
or
mov
push
push
pop
cmpsb
pop
jl
popa
mov
sub
cs
in
adc
int
jl
jb
inc
xlat
xchg
jmp
mull
push
shlb
dec
cmp
mov
imul
adc
push
xchg
and
ficoms
fs
popf
xchg
xchg
lods
pop
or
mov
cmp
std
aam
push
inc
and
dec
fstpt
orl
test
or
addr16
aad
and
int3
mov
pop
add
ljmp
scas
mov
add
cmpsl
fs
cmp
test
mov
pop
shlb
push
and
dec
pushf
shrb
push
adc
stos
lahf
cmp
mov
in
or
jbe
push
es
movsl
insl
add
xlat
xor
add
lret
xchg
or
sbb
pop
sub
testb
loop
jle
test
insb
inc
sub
gs
adc
sbb
fsubrl
inc
mov
popf
push
mov
outsb
sbb
dec
push
rcr
repz
jmp
mov
sbb
add
pop
mov
inc
push
push
repz
fs
jb
inc
push
jnp
stc
cmp
cltd
js
adc
popf
jb
xchg
popf
and
xchg
stc
mov
sbbl
pop
lcall
popa
and
sbb
sbb
data16
clc
dec
push
jmp
xchg
adc
lds
sti
xor
sbb
std
jae
sub
mov
push
mov
or
adc
ret
popa
pop
sbb
inc
xor
add
jmp
aad
pop
ror
pushf
pop
cmpsb
push
lret
cmpsl
scas
cmp
xor
adc
dec
popl
dec
jecxz
shlb
sub
icebp
rorb
scas
xchg
lcall
pop
jmp
aam
lea
int3
std
xor
dec
sub
outsb
cmp
xor
mov
jns
rolb
pop
mov
lahf
fwait
add
dec
pop
adc
cmc
std
add
mov
dec
add
mov
push
pop
mov
mov
sub
in
xor
ret
les
sub
xor
imul
pusha
push
xlat
fwait
push
imul
push
inc
xorps
gs
jno
ss
cli
jae
dec
xor
rcrl
leave
mov
popf
or
incl
sbb
push
stos
aas
mov
lock
lahf
push
les
sub
and
xchg
in
sbb
lret
std
movl
xchg
insb
stos
or
loopne
dec
push
faddl
ljmp
mov
inc
cmp
or
outsl
jmp
loope
sbb
lock
pop
popf
js
in
cmc
push
pop
pop
mov
jns
lods
jg
mov
pop
scas
xor
cltd
push
pop
shl
ficoml
dec
inc
jg
movsb
sub
stos
lret
ret
outsl
mov
push
jl
shr
xchg
mov
and
ds
stc
rcrl
mov
arpl
test
cmp
notl
out
mov
xchg
addr16
outsb
mov
fsubl
adc
repz
stos
pushf
imul
std
scas
or
shll
or
scas
popa
cs
sbb
xor
fisubrs
aas
jge
stc
std
mov
sub
cmp
cmp
sub
hlt
fistps
inc
or
out
inc
xor
push
gs
mov
sbb
imul
sbb
hlt
dec
js
idivb
xorb
jo
jmp
roll
jae
xlat
push
out
inc
fdiv
fildl
xchg
bound
xor
dec
xor
inc
mov
cli
and
ja
add
mov
xlat
mov
adc
shrl
add
int3
xchg
mov
stos
out
inc
cmp
push
clc
cld
push
out
pop
mov
lcall
sub
lock
xorb
xorb
loope
stc
mov
cmc
stos
out
or
loope
jp
fs
lret
and
jb
addr16
testb
inc
mov
mov
popl
inc
sub
push
jb
mov
cmc
mov
jns
icebp
push
mov
or
sbb
out
std
sbb
jecxz
rcrb
adc
lds
mov
or
cmp
xchg
test
imul
jae
ficoml
sbb
xchg
mov
clc
fwait
call
dec
xlat
mov
xchg
sti
adc
mov
pop
pop
in
push
jae
popa
jmp
lods
mov
imul
sub
xchg
call
push
or
sbb
xchg
scas
insb
and
jno
push
or
dec
fbstp
mov
dec
jbe
adcl
xchg
sahf
pop
lds
stc
int
pop
push
mov
jno
addl
push
xor
xchg
or
fldcw
xor
mov
xor
push
cmc
bound
xchg
mov
roll
or
inc
into
xor
jl
jno
aas
dec
hlt
jns
push
inc
jb
cmp
imull
or
sbb
push
add
aam
loope
pop
jnp
or
jge
ljmp
xor
xchg
mov
mov
lods
in
xchg
jmp
mov
and
mov
mov
adc
rorb
add
stos
sbb
clc
xor
xchg
js
decl
cmp
sahf
cmpsl
es
les
xchg
cmp
ret
mov
adc
add
xchg
flds
add
cmpsb
mov
cmp
sbb
daa
jbe
pop
enter
ficoml
lock
jnp
cmp
pop
jmp
xchg
frstor
dec
test
xor
inc
adc
icebp
or
imul
lahf
cli
jnp
push
outsl
aaa
push
fcom
icebp
push
out
sarl
int
inc
les
imul
ret
fs
jns
sub
dec
inc
aas
fidivrl
stos
and
adc
shrb
bound
cmpsl
jmp
data16
xor
pop
sti
push
push
negl
fnstsw
xchg
jp
xchg
testl
xchg
icebp
cmp
inc
sbb
clc
int
pop
push
andl
stc
pushl
inc
lock
cmp
jns
ja
jne
jns
into
clc
fucom
push
rcrl
pop
outsb
push
rcll
pop
push
stos
bound
sbb
je
outsb
mov
adc
mov
push
push
movsl
push
test
ret
or
sbb
jae
bnd
gs
repnz
dec
and
jns
hlt
fwait
or
ds
mov
cmpsb
in
rcrl
sbb
sarl
pop
xchg
inc
sahf
hlt
sbb
mov
cmp
negb
xor
pop
xor
xor
outsb
jae
aaa
mov
jge
rorl
adcb
cwtl
push
mov
fcoml
repnz
jmp
xchg
dec
mov
mov
mov
lock
jne
aam
fadds
lret
jp
and
sar
sub
ss
jnp
cmp
cltd
les
jns
adc
dec
pop
sub
lods
inc
mov
jecxz,pn
jmp
aad
call
repz
or
inc
mov
pop
movsl
lock
mov
jbe
jns
and
cmp
add
outsl
sbb
push
mov
lahf
push
ret
mull
add
enter
or
bound
pop
mov
lods
sahf
enterw
push
and
pop
mov
clc
pop
sbb
and
jp
dec
push
scas
mov
pop
dec
push
fildl
adc
inc
andl
sub
mov
xchg
mov
and
xor
or
jae
int3
fstpl
test
jbe
mov
push
popf
lea
mov
movaps
add
sbb
cs
inc
lcall
movsb
and
sbb
pop
jbe,pn
enter
mov
inc
lods
pop
xchg
adc
pminsw
dec
mov
xor
xchg
or
mov
push
es
push
xchg
jle
sub
lahf
fs
xchg
jns
test
sub
out
imul
add
pop
inc
add
scas
enter
or
das
lock
pop
push
fs
and
xlat
dec
shlb
mov
movsl
push
js
gs
in
ja
jmp
es
jbe
add
pop
mov
or
out
sti
adc
xor
mov
pop
sub
jecxz
mov
das
fwait
cltd
test
inc
mull
cmp
mov
push
mov
into
push
sbb
mov
sub
jno
mov
add
push
out
fucomp
in
in
cmp
inc
push
loop
adcb
lods
cli
inc
lock
leave
cmp
lret
jge
movsl
out
sbb
jg
or
rcl
in
aaa
or
gs
or
add
cmp
out
pop
lcall
pop
jmp
int3
icebp
xor
lahf
pop
xchg
jo
jmp
adc
out
mov
mov
push
mov
mov
inc
or
or
fmuls
xchg
aam
mov
ljmp
outsl
xchg
movsb
mov
xchg
icebp
nop
dec
jb,pn
pop
jnp
push
fsub
xchg
jns
mov
mov
xchg
xor
mov
inc
ja
inc
add
imul
push
addr16
xlat
int
jle
les
mov
movsb
jmp
jb
outsb
dec
push
xchg
stos
inc
clc
sbb
out
inc
mov
repnz
dec
jp
jo
xor
mov
rorb
push
push
or
push
mov
xchg
daa
push
stc
sbb
cmpsb
shlb
sub
andl
xchg
mov
repz
push
lds
dec
nop
jns
int
mov
jnp
mov
dec
loop
aam
push
cli
mov
inc
ret
mov
aam
and
xchg
pop
fadd
pop
push
fistl
pop
sub
push
cmpsb
mov
mov
mov
cmp
adc
pop
mov
imul
inc
nop
xchg
adc
cmp
aad
jl
mov
fcoms
xchg
cmc
insl
add
add
arpl
inc
push
xchg
and
rcll
pop
cmpsl
jle
andl
jo
xchg
test
add
mov
xor
cli
aad
sbb
jne
std
inc
mov
dec
and
and
fcmovu
in
xchg
test
mov
cmp
popa
cli
mov
dec
fcmovu
shl
add
test
jnp
push
stc
cmp
xor
roll
sub
ds
mov
ja
lock
dec
ss
and
mov
addr16
das
push
dec
push
dec
outsb
dec
clc
mov
xor
dec
fstpt
mov
sahf
movsl
inc
push
xlat
and
roll
movsl
push
pop
cmpsb
sub
xchg
dec
adc
lret
scas
lods
rcrl
mov
bound
mov
inc
inc
imul
dec
loopne
outsl
mov
jo
dec
pop
leave
cltd
mov
mov
pop
and
add
jae
mov
clc
xchg
add
add
jns
mov
test
pop
lret
dec
inc
das
jg
jp
xchg
jle
ljmp
adc
sbbb
cltd
in
lcall
lahf
insb
movsb
loope
adc
popf
fcomps
clc
rcll
dec
shlb
js
push
scas
repz
jecxz
ret
insl
out
mov
scas
push
xlat
inc
pop
push
pop
in
cltd
iret
gs
cmp
push
adc
rcrb
push
or
ror
push
jns
pop
dec
imul
mov
xchg
sbb
inc
sub
push
mov
loope
cwtl
repnz
jge
inc
or
test
dec
imul
ds
sub
push
fistpl
daa
xlat
jle
movsb
clc
inc
ds
pop
cltd
cmpsb
icebp
xchg
sahf
mov
shlb
clc
data16
cmp
int3
movsb
dec
or
push
shlb
and
jns
add
repz
sbb
insb
pop
mov
jmp
jge
xchg
test
mov
dec
xchg
add
push
push
orl
push
push
mov
sbb
test
add
outsb
arpl
cmp
add
adc
push
cltd
movsl
cmpsb
cld
sub
sub
lahf
mov
jb
and
or
mov
xor
push
and
outsl
rcrl
cs
imul
sub
rcl
pop
mov
aad
out
sbb
pop
push
insl
push
fcoms
push
or
add
fldl
fiaddl
dec
imul
add
push
dec
mov
outsb
cmpsb
dec
mov
xchg
outsb
xor
pusha
fnstsw
add
loop
test
loop
lret
xor
dec
sbb
mov
sub
pop
popf
inc
gs
push
inc
push
cltd
sub
jg
sbb
inc
test
dec
xchg
out
in
fwait
adc
pop
pop
or
pop
les
xchg
leave
jne
shrl
jbe
imul
divb
jge
ret
leave
and
sahf
adc
jb
dec
das
shlb
dec
add
adc
movsb
lock
or
dec
jb
mov
sbb
add
dec
pop
sub
fidivl
cmp
cmp
les
call
int
push
xor
jge
sub
mov
in
lock
cmp
pop
scas
xchg
fisubl
ds
xchg
xchg
jnp
inc
int3
mov
xchg
aam
pusha
leave
jecxz
jg
in
jge
and
stos
test
mov
mov
cmpsb
sbb
popl
jle
insb
ss
pop
push
jae
add
addr16
jno
mov
daa
pop
fs
sbb
cld
dec
jnp
rcll
adc
xchg
push
push
xchg
sub
push
inc
into
push
lcall
mov
adc
mov
mov
test
mov
sub
in
cwtl
pop
fwait
push
or
aam
cs
flds
cli
xchg
push
das
hlt
dec
ret
addr16
cmc
cmpsb
cs
call
notb
add
test
adc
sub
lock
push
sbb
xchg
jecxz
imul
push
mov
test
lahf
mov
cmp
mov
jg
sub
xor
fs
mov
push
lret
pop
ljmp
mov
loop
cmp
sub
jb
cmp
xchg
addl
popf
ret
sbb
adc
xchg
add
sbb
jbe
stc
lret
pop
mov
movsb
lea
inc
addr16
pusha
outsb
and
mov
lret
dec
mov
sbbl
mov
iret
scas
jno
pushf
cmpsl
sahf
stos
adc
sti
mov
and
sub
mov
sbb
data16
cmc
mov
and
int3
or
cmp
inc
mov
sbb
ds
mov
push
lock
mov
mov
cmp
in
in
out
lods
les
sbb
arpl
sub
aam
ss
adc
pop
dec
call
movsl
mov
movsb
push
icebp
jmp
push
dec
sbb
and
xchg
push
dec
mov
test
sbb
sub
cmpb
into
mov
out
jecxz
fmull
jno
mov
inc
popf
popa
mov
pop
scas
sbb
xchg
stc
imul
icebp
mov
rcrl
test
rcll
inc
mov
adc
jecxz
int
int
push
push
dec
or
adc
add
mov
jecxz
inc
push
stos
mov
shld
mov
mov
inc
loopne
adc
nop
stos
mov
lret
popa
xor
sbb
push
aam
scas
std
sub
mov
movsl
leave
shll
jp
cli
aaa
lods
cmp
sub
jmp
inc
jb
add
mov
clc
cli
sti
jl
mov
sub
outsb
xchg
lods
or
jbe
inc
mov
outsb
dec
das
loop
int3
cltd
aas
in
movsl
loop
xchg
cmp
and
dec
push
jno
imul
dec
les
mov
movsb
fistpl
inc
out
xor
cmp
or
mov
pop
xor
sub
rorb
rorb
push
jecxz
inc
dec
mov
add
fwait
das
pop
loope
inc
test
xor
add
dec
xchg
pop
mov
mov
jg
dec
sub
test
mov
pop
aas
outsb
sub
out
js
mov
lret
xchg
xor
inc
lret
xor
jecxz
sahf
mov
and
mov
mov
testb
shll
fwait
pop
ds
sub
out
push
xor
cmp
dec
push
aas
sub
movsl
mov
js
es
pop
pop
subb
outsl
mov
imul
leave
jp
repnz
pushf
daa
rcrl
pop
orb
je
fdivp
xchg
jne,pn
inc
jl
imul
mov
or
mov
test
lock
push
dec
adc
adc
add
mov
bound
sbb
sahf
outsl
js
xchg
fstl
das
inc
test
and
icebp
aad
mov
sub
mov
shrb
push
fidivrs
adcl
dec
ret
das
imul
je
add
lds
hlt
aam
aad
mov
fidivs
cmpsb
mov
sbbb
aaa
mov
push
jns
sub
or
test
jp
iret
push
pop
xchg
jo
and
ss
adc
pop
adc
xchg
add
xor
mov
dec
stos
daa
xchg
aad
int
lcall
mov
in
sahf
shrl
sub
mov
inc
data16
stc
testl
push
aad
add
test
mov
enter
jno
iret
mov
dec
movsl
mov
mov
mov
in
sbb
sbbb
data16
adc
inc
xlat
je
icebp
fisubl
mov
outsb
mov
mov
sub
sti
mov
stos
test
or
xorb
add
imulb
add
and
sahf
push
mov
or
and
movsl
jnp
jbe
dec
mov
jae
mov
dec
fimuls
mov
adc
push
outsl
jnp
insb
jmp
sbb
xor
rcrb
fistps
filds
push
aam
lods
mov
mov
gs
or
jnp
lds
leave
pop
shlb
mov
faddl
sbb
pop
jmp
shll
push
inc
mov
jbe
mov
mov
loope
mov
jecxz
mov
jbe
int
push
lret
jl
xor
sub
jmp
adc
push
and
fcomip
xor
clc
jmp
popa
ficoms
jns
shrb
enter
inc
fstpt
jl
inc
mov
fsubl
lcall
xor
movsl
mov
mov
int
das
out
push
mov
xchg
push
jne
push
flds
sti
std
imul
xorl
mov
fcmovne
in
jno
mov
sar
cld
xchg
cmp
xchg
aas
xlat
pop
into
loopne
jge
mov
hlt
mov
push
shlb
xchg
add
je
stos
dec
fsubs
adc
sbb
pop
xor
std
inc
jecxz
or
mov
push
call
ja
push
xchg
mov
mov
stos
push
dec
adc
mov
xchg
mov
jne
sbb
sub
cmc
mov
lds
xchg
inc
jns
sbb
jae
nop
scas
or
stos
call
xchg
jmp
jbe
xor
lret
push
movsb
cmp
sarl
mov
mov
arpl
pop
scas
mov
fildl
test
add
sarl
fcmovnb
popf
insb
cmp
repz
cli
cli
xchg
arpl
inc
ds
mov
imul
aad
push
shl
pushf
and
push
ja
lret
cmp
out
dec
call
mov
add
mov
dec
jp
dec
mov
sbb
xchg
jp
jnp
loopne
mov
cltd
xor
inc
cmpsb
dec
adc
lock
mov
roll
fmull
in
push
in
xor
push
fwait
push
or
jae
push
xor
fistpl
xchg
dec
sbb
xrelease
xchg
pop
dec
sbb
adc
adc
aam
in
decb
repnz
dec
add
stos
push
in
loope
pusha
ljmp
stc
cmp
lea
push
insl
adc
imul
sbb
nop
pop
lret
ficomps
adc
fisttps
and
cmc
adc
push
adc
mov
jge
sbb
pop
in
push
jle
xchg
mov
jbe
out
rcl
lds
ret
arpl
jp
repnz
or
es
in
xor
les
push
cmpsl
rcr
shrl
sbb
inc
sub
out
adc
nop
addr16
sbb
or
fldt
int3
jp
sub
push
mov
sub
sub
lea
sub
push
cli
lret
insb
jne
test
mov
fcomp
cmpsl
inc
add
cmp
pusha
imul
mov
jb
dec
lret
in
mov
imul
lea
or
add
jg
movsl
in
sub
adc
sbb
test
mov
dec
popf
or
hlt
outsb
fnstsw
out
mov
out
pop
push
push
push
jo
and
out
mov
and
jecxz,pn
repz
mov
or
xor
lahf
push
cmp
and
push
js
dec
lret
cmpl
leave
pop
icebp
jg
jmp
cmc
divb
loop
sub
out
or
cmc
ljmp
enter
mov
push
int3
add
lock
subl
fwait
inc
pop
nop
push
push
pop
mov
popa
push
xor
addr16
dec
imul
ljmp
sbb
mov
in
xchg
jbe
out
push
push
xor
test
jl
inc
sbb
shlb
les
adc
mov
push
mov
stc
pop
pop
call
in
mov
loopne
sub
rorl
gs
imul
lods
clc
cmp
lods
test
sub
movl
sar
or
xor
btc
ljmp
pop
xchg
cmc
in
test
test
inc
pop
adc
dec
sahf
push
or
push
xor
or
push
rorl
sub
xor
pop
mov
jb
push
and
xor
xchg
and
test
push
jb
loopne
subb
or
ret
ds
nop
sbb
add
cmp
inc
push
andb
sbb
popa
cmpsb
aad
pop
jl
sbb
outsb
cmpsb
clc
cli
jns
xchg
mov
mov
in
cmpl
add
cmp
adc
inc
iret
and
pop
add
je
push
or
out
pop
add
lds
cmp
xchg
push
data16
sub
out
dec
jne
jno
in
add
pop
pop
test
leave
jmp
loopne
pop
xor
xchg
xchg
add
lret
gs
inc
inc
adc
sbb
ret
loopne
mov
cmp
cmp
push
in
pop
adcb
jnp
cltd
test
repz
add
loope
mov
xchg
shll
xor
inc
inc
mov
push
jno
mov
popf
sub
xchg
into
jns
mov
add
jmp
jns
add
dec
inc
jo
mov
arpl
out
or
ret
and
push
xor
mov
leave
js
cmpsl
popa
aam
dec
cmp
arpl
xlat
std
das
jns
push
xchg
or
lret
insl
mov
repz
jo
cld
inc
xchg
jb
into
push
and
std
mov
in
push
jmp
mov
pop
out
mov
mov
cmp
pusha
test
notl
nop
imul
cs
dec
mov
mov
shr
clc
icebp
int
push
cmpsb
xor
sub
inc
push
in
aad
sub
mov
pusha
xchg
das
jg
sbb
inc
and
test
adc
out
cwtl
lret
loopne
inc
dec
insl
out
dec
fisubs
inc
or
jo
xchg
fimull
addr16
push
rcrl
test
movsl
cmp
or
dec
lcall
and
sbb
jg
dec
xchg
test
inc
popa
out
mov
mov
mov
jl
setg
bswap
mov
movsl
and
pop
add
ret
rcr
pop
inc
loopne
sbb
mov
outsl
adc
daa
jne
sub
push
das
xchg
lock
enter
mov
mov
mov
sub
cmp
mov
lcall
imul
jle
leave
xchg
push
push
adc
pop
push
sbb
add
pushf
lods
int3
cs
push
out
jmp
in
xor
jecxz
aaa
js
add
call
in
xlat
cltd
stc
test
xlat
sub
pusha
and
call
notb
push
xchg
xor
lahf
mov
js
mov
loop
sub
ret
iretw
jp
xorl
sbb
outsb
outsb
push
ljmp
mov
movsl
push
xchg
and
xchg
sarl
insb
pop
and
rcl
fimull
mov
jno
filds
test
jbe
stos
xchg
and
test
insl
inc
xchg
bound
pop
fisubrs
or
ret
mov
mov
push
in
push
pop
sub
fisttps
jbe
movsl
sarl
mov
pushf
fwait
je
mov
pop
jle
mulb
lods
loop
jne
testb
out
cwtl
movsl
out
mov
cmp
ds
and
test
into
inc
xchg
lcall
cmpsl
or
jge
test
out
add
mov
jl
add
pop
in
ficompl
fsubrs
lret
xchg
pusha
cld
or
mov
ds
cmpsb
mov
stc
lcall
in
dec
out
push
ljmp
inc
js
jns
push
mov
xchg
inc
sbb
scas
gs
fwait
sahf
cltd
leave
mov
out
int3
adc
push
pop
pushf
push
mov
jno
jbe
fs
scas
jl
add
cmp
or
out
lret
jecxz
sbbl
cli
jmp
test
repz
jp
dec
mov
or
iret
bound
jbe
stc
cmp
stos
mov
ror
fldl
addl
mov
out
cwtl
mov
push
shrl
imul
fdivs
ljmp
ja
cs
js
in
inc
je
mov
inc
sbb
int3
ret
pop
leave
jbe
incb
popa
cmpsb
testl
or
xor
mov
ficompl
rorl
outsb
daa
aas
jecxz
jecxz
push
fs
xor
cmpsb
imul
dec
insb
mov
decl
jmp
cmp
sti
jae
in
into
dec
insb
scas
das
xchg
mov
sub
roll
or
mov
repz
mov
fcos
mov
mov
add
int
movsb
cmp
shrb
mov
jbe
loopne
test
and
xor
shrl
sub
jle
dec
lock
rcll
dec
pushf
mov
imul
sbb
jg
rcr
fmuls
mov
inc
popl
clc
sub
adc
jge
cmpb
es
imul
inc
adc
stc
adc
add
cmp
mov
pop
ss
imul
push
in
lcall
aaa
jbe
enter
sbb
aam
pop
sub
push
jmp
inc
dec
jge
loope
add
push
jb
sahf
add
mov
jne
mov
cmc
pop
stos
fcom
mov
cmpsb
push
sub
mov
push
mov
push
jno
jle
mov
jno
mov
push
or
aas
into
outsb
sbb
jo
test
inc
push
stc
lcall
ja
or
je
xchg
dec
jb
test
sahf
jg
fs
bswap
xor
je
pop
or
push
inc
sub
mov
leave
add
arpl
ja
iret
and
leave
lret
ja
test
pusha
and
pushf
xchg
or
jg
cwtl
inc
jl
test
inc
in
icebp
sbb
fnstcw
in
out
insl
bound
push
pop
xor
sbb
jno
enter
mov
outsl
imul
decb
cmpsb
inc
push
pop
fwait
pop
mov
dec
sahf
jp
jecxz
jno
jae
outsb
add
inc
add
pop
pop
push
jb
cmp
mov
cmpb
daa
scas
jae
adc
inc
jae
mov
jae
mov
inc
clc
push
lcall
cmp
mov
push
stos
stc
xchg
repz
outsb
shrl
jbe
xorl
or
xchg
or
sub
xor
mov
adc
inc
jns
pop
lods
add
mov
jns
stos
stos
sbb
jne
cmc
dec
mov
loop
popa
and
mov
jmp
xchg
mov
and
stos
pop
pop
sbb
hlt
nop
shll
adc
cs
add
rclb
cmp
jae
cmc
mov
cld
jmp
jmp
dec
pusha
xchg
call
xor
movsl
sub
jae
fmuls
adc
inc
jae
sbb
xor
insl
fwait
xchg
into
dec
mov
sbb
jns
dec
lret
push
and
mov
mov
data16
lds
and
sbb
movsb
pop
shrb
aad
out
test
lods
insl
fnstsw
pushf
sub
cmpsl
xchg
insl
dec
sub
cmpsb
add
jno
jno
pop
movsl
xor
sbb
and
pop
inc
jmp
mov
inc
mov
cmpsb
es
das
dec
es
mov
scas
cs
fisubs
cmp
xor
and
push
add
mov
push
sub
mov
stos
sbb
test
pop
leave
nop
in
sub
push
xchg
push
dec
add
lret
mov
and
and
fiadds
jne
jo
or
test
jnp
fs
dec
in
pop
sarl
mov
push
data16
xchg
jns
xor
ss
mov
test
dec
shll
inc
jno
enter
in
jmp
mov
addl
jp
xchg
cmpsb
les
add
push
mov
negb
xchg
subl
xor
push
sbb
push
pop
out
mov
std
into
mov
adc
pusha
js
inc
xor
dec
and
in
test
leave
outsl
push
cmpsb
outsl
sub
sbb
push
mov
sub
and
cmp
mov
mov
sbb
or
jns
cmp
mov
adc
icebp
adc
mov
sahf
mov
cld
cwtl
inc
in
xor
add
into
push
sub
sbb
jo
pop
cli
sbb
dec
mov
aam
sub
jae
mov
dec
and
test
fwait
sub
rcr
ja
mov
cmp
push
cld
jge
or
mov
es
xchg
jo
fists
inc
lret
xchg
fstps
inc
mov
jne
mov
jnp
mov
aad
xchg
mov
cmp
adc
pop
test
loope
sti
pop
jecxz
inc
push
jecxz
loop
jo
push
repnz
bound
mov
les
pusha
mov
out
movsb
ja
imul
fimull
mov
addb
inc
push
fiadds
jnp
sub
sbb
hlt
mov
jle
inc
inc
inc
jg
jg
aad
xchg
cwtl
and
cmp
fisttpl
leave
fisubrl
pushf
push
jg
call
sub
lcall
insl
sub
in
sbb
xrelease
push
aad
aas
sbb
shrl
xor
or
dec
rcrb
rcrl
popf
insb
mov
xchg
movsb
scas
mov
test
aaa
xchg
addr16
push
imul
sbbb
and
sub
maxps
jge
jge
in
cmp
push
sahf
jle
mov
add
cs
lods
pop
cmpsb
jmp
mov
jp
and
cmpb
cmp
adc
xchg
add
inc
jmp
jecxz
test
lock
cmp
dec
cltd
leave
dec
mov
jae
cmp
xor
fs
aaa
xchg
mov
int3
in
cmp
outsb
sbb
or
loopne
inc
in
test
dec
lret
sti
sahf
inc
inc
loop
test
push
cld
nop
cmp
das
in
fisubs
neg
rolb
inc
adc
push
xchg
ss
test
sbb
fisubl
cs
jne
sbb
jle
mov
test
repnz
inc
int
and
imul
mov
stc
xchg
sbb
lock
out
ret
stos
push
ljmp
jns
cmp
dec
pop
pop
push
or
sbb
push
add
pop
icebp
pop
leave
aas
fnsave
or
dec
sbb
mov
fidivrs
cmp
out
sbb
lea
pop
adc
xor
inc
mov
sti
outsl
jbe
imul
lcall
test
test
inc
jae
orl
jbe
pop
cmp
insb
or
shl
jmp
and
adc
jno
jecxz
push
mov
xchg
adc
addb
inc
or
xlat
pop
pop
outsb
popa
jne
es
add
aam
adc
ja
adc
xchg
out
outsl
push
outsl
push
inc
and
push
pop
int
add
cs
fidivl
xor
psllw
nop
lret
sbb
es
and
push
sub
rolb
mov
pop
shlb
add
inc
test
push
inc
sub
cmpsl
repnz
pop
dec
orl
jle
mov
repnz
xor
pop
pop
or
jp
and
shll
das
xchg
dec
rcrl
insl
push
ret
pop
inc
hlt
aas
mov
sahf
or
lods
xchg
dec
arpl
add
fld
in
repnz
sbb
bound
sbb
dec
fwait
test
pop
ret
test
vsubss
xchg
cmpsb
sub
scas
sbb
cmpsb
and
push
lock
je
fdivl
xor
imul
sbbb
insb
mov
dec
rcrb
add
test
orl
cmpl
mov
mov
add
jecxz
loop
inc
imul
enter
das
push
es
xor
and
out
push
inc
je
in
push
repz
lret
les
inc
imul
aad
cmp
sub
sub
fmull
sahf
and
adc
in
and
ja
xor
cwtl
dec
adc
mov
int
push
sahf
xor
xchg
into
outsl
xlat
xor
and
dec
cmp
pop
pop
push
enter
faddl
out
mov
push
das
inc
pop
cwtl
nop
pop
dec
mov
fcmovnb
sub
lret
addl
push
xchg
push
fistpl
and
mov
lahf
push
je
inc
movsl
ds
push
inc
adc
imull
inc
push
mov
aas
sbb
mov
cmp
sub
fsubr
xor
sahf
sbb
pop
add
loopne
stos
das
mov
movsl
mov
pop
jnp,pn
clc
iret
out
sub
adc
push
insb
mov
push
pop
jb
pop
push
pusha
aas
cmc
cmpsl
xchg
lds
dec
mov
sub
in
sub
dec
dec
dec
ds
testb
sub
dec
int3
push
fimull
fadds
das
sub
jmp
and
push
dec
mov
je
xor
psllw
and
pop
dec
movsb
shrl
add
inc
movsl
mov
push
sub
sbb
or
sub
loop
out
or
popa
cmp
imul
pop
out
iret
mov
sbb
clc
imul
mov
outsl
out
sub
cmp
xchg
adc
xchg
lret
sbb
daa
in
mov
adc
push
pop
xlat
repz
rorl
pop
cmp
inc
ljmp
pusha
decb
loope
sti
mov
add
dec
mov
popf
sbb
mov
mov
xchg
aad
divl
adcl
dec
lcall
xor
dec
push
or
push
test
repnz
and
mov
add
ss
lahf
pop
imul
xchg
xchg
jecxz
mov
jmp
or
jnp
push
fdivrp
sub
sub
cmp
popa
fdivp
insl
sbb
test
orb
mov
and
pushf
into
insb
cltd
incl
add
mov
std
and
mov
outsl
dec
jmp
and
pop
cmpsb
call
xor
enter
insb
in
jbe
sbb
pop
jge
aas
mov
sub
or
insb
test
xchg
outsb
faddl
in
adc
push
outsb
add
jns
ljmp
shrl
or
scas
push
xchg
cwtl
aad
and
push
add
sti
sub
movsl
sbbl
inc
pop
test
fdivrs
mov
sub
or
aam
cmc
clc
pushf
in
jp
div
repz
sub
orl
shl
js
and
outsl
xor
xchg
ss
out
jmp
jne
adc
sub
shll
andb
inc
push
cmp
aas
adc
int3
dec
or
xor
rcll
sti
aaa
inc
out
mov
xchg
inc
nop
popa
imul
xor
leave
mov
shrb
add
stc
or
jmp
mov
insb
sbb
ror
cmpsb
rolb
mov
push
adc
movsl
fbld
jns
jne
pop
xchg
add
xor
and
stos
mov
pop
xchg
inc
dec
cli
fsubrs
xchg
inc
rol
lock
cmp
sbb
inc
movsb
push
xor
xchg
xchg
lea
cwtl
inc
insl
mov
or
imul
xchg
adc
dec
mov
cmc
push
jnp
pop
xor
aad
je
xor
fsubs
push
mov
es
cs
cmp
jl
xor
push
leave
lods
or
pop
cmp
aaa
pushf
fwait
jle
cwtl
push
testl
ficoml
push
test
cld
mov
cmovae
push
icebp
imul
add
cmc
jb
jo
xchg
push
or
cwtl
dec
call
add
mov
jnp
cli
fs
insl
inc
sahf
sub
dec
mov
jle
or
mov
mov
divl
dec
popa
cmp
test
cli
cli
or
fnstenv
jne
shlb
arpl
bound
mov
shrl
sbb
adc
lods
pusha
inc
or
daa
js
leave
insl
testb
cmpsl
inc
andl
jo
into
mov
add
jmp
add
adc
add
rcrl
shll
or
inc
fsubrl
sbb
jbe
out
or
jno
in
ljmp
or
cs
or
and
push
cli
adc
adc
scas
nop
push
sub
mov
popa
mov
inc
push
cmp
adc
je
movsl
inc
je
lods
adc
adc
cmp
gs
dec
arpl
add
mov
jo
mov
xchg
cmpsl
inc
cmp
test
jmp
mov
xchg
scas
pop
lods
stos
jge
sarl
or
fwait
enter
cwtl
mov
xchg
or
inc
or
lea
inc
cwtl
mov
push
add
push
and
jg
icebp
int
mov
xchg
sahf
push
inc
shrl
popf
push
inc
pop
pusha
xchg
loopne
inc
int3
mov
xchg
dec
and
adc
push
in
pusha
and
ret
leave
cld
mov
iret
int
pop
mov
cmpsb
in
pushf
sub
and
and
ret
xchg
cltd
popf
jge
aas
fs
scas
fildl
push
int3
xchg
xchg
loop
nop
add
mov
jb
or
movsl
pop
leave
std
xchg
out
mov
icebp
sub
mov
inc
aas
shrl
xor
test
stc
mov
das
mov
mov
shlb
sub
mov
loop
scas
dec
imul
mov
shlb
ja
xchg
add
pushf
popl
inc
iret
dec
and
jne
cwtl
imul
xchg
nop
sbb
pop
cli
pop
aas
push
jnp
or
fwait
add
aad
add
pop
push
or
mov
sti
sbb
testl
xchg
das
mov
pop
pop
fimuls
cli
push
or
sahf
add
out
lret
testl
into
cmpsb
mov
dec
add
pop
notb
int3
mov
lcall
loopne
mov
je
icebp
std
push
mov
cmpsb
fsub
out
add
shr
or
jns
mov
push
push
iret
push
popa
add
lds
cwtl
lods
test
or
mov
shrb
sti
pop
inc
js
in
pop
repz
clc
std
lahf
sub
rcll
dec
push
ss
loop
add
mov
cmp
fnstenv
roll
pop
dec
movsl
push
push
arpl
jb
xor
lds
xor
sub
jae
cli
mov
icebp
repnz
lods
push
add
testb
pop
push
dec
lods
testb
xchg
stos
xchg
mov
arpl
test
shlb
outsb
subl
sub
sub
stc
lret
xchg
mov
inc
bound
jb
movsl
mov
ljmp
sti
movsb
scas
jnp
and
add
ficoml
ror
call
hlt
ja
dec
pop
mov
lods
icebp
adc
pop
pop
sub
add
aaa
push
cs
and
xchg
mov
js
xor
repz
sahf
sub
aad
or
js
idivl
icebp
imul
jae
addr16
lret
xchg
and
xchg
pusha
adc
nop
jp
shr
jne
inc
dec
pop
in
cmp
mov
add
push
mov
dec
repz
cmp
lcall
mov
sbb
inc
push
sti
pushf
and
sbb
das
xchg
cs
mov
dec
call
cmp
add
cmpsl
mov
dec
cmc
adc
iret
push
jo
push
cmp
shrb
or
or
in
mulb
sub
pop
stos
push
adc
dec
inc
mov
insb
or
das
loope
inc
push
dec
or
add
mov
daa
add
vandnpd
mov
ljmp
cld
jp
add
inc
push
std
and
push
shlb
xlat
jb
pop
testl
fnsave
insb
daa
or
shrl
push
cmc
inc
push
std
ror
or
imul
into
test
mov
int3
or
push
fwait
jbe
clc
cmp
ret
inc
dec
repnz
stc
mov
sub
mov
inc
and
jmp
out
push
inc
xchg
ljmp
mov
jae,pt
outsl
bound
adc
xor
rorb
mov
xor
outsl
in
pop
mov
sbb
mov
pop
xor
mov
xor
adc
mov
jo
xchg
inc
adc
pop
fcoml
cmp
lahf
out
cmp
push
xchg
sbb
adc
cmp
push
push
gs
sahf
add
push
cs
xor
in
fst
in
cmpsb
and
xchg
xor
scas
sub
dec
bound
inc
add
popf
fyl2xp1
and
and
mov
mov
or
lock
in
dec
mov
cwtl
roll
leave
popf
add
sar
vmovddup
dec
mov
xor
jecxz
bound
test
cli
and
mov
rcll
inc
or
dec
sub
xchg
push
loope
sbb
adc
cltd
loop
jo
add
dec
mov
dec
mov
call
jge
popl
push
fstp
sub
and
sbb
cmc
mov
cmp
jno
xchg
cmpsl
mov
pop
sub
out
push
ja
jle
inc
call
cld
cmp
xor
dec
sbb
mov
ss
movb
xchg
push
cltd
scas
bound
dec
xor
pop
jg
hlt
shll
sub
int
les
xor
fcmovbe
adc
gs
test
push
jns
lahf
jle
inc
insl
roll
jg
jp
push
jp
pop
adcl
jo
stos
fiaddl
out
mov
inc
notl
jns
add
push
sbb
jns
icebp
mov
lret
push
add
jo
andb
mov
jno
cmp
mov
or
es
and
jp
adc
dec
into
in
and
icebp
roll
adc
adc
and
xchg
insb
jl
addl
pminsw
mov
push
mov
inc
mov
lds
in
mov
jno
dec
jo
mov
add
sarb
mov
shll
sbb
sub
lret
lods
inc
cmpsb
adc
pop
jmp
mov
addr16
add
fwait
jg
pusha
push
aad
ljmp
push
and
cmpsl
inc
and
sbbb
decl
imul
repnz
add
sar
mov
mov
jns
or
mov
jbe
fcoms
imul
out
add
test
add
mov
daa
lret
pop
jb
sub
mov
and
adc
sahf
xor
inc
leave
shrb
lcall
jns
ret
and
lds
pop
scas
jbe
lret
push
ficomps
scas
mov
cmp
jg
movsb
adc
cmp
in
mov
jmp
sub
mov
pusha
movsb
pop
mov
add
imul
lcall
cmpsb
in
imul
pop
jnp
popa
iret
cmp
test
adc
int
fs
jne
mov
lds
adc
shlb
sub
iret
dec
add
pop
dec
push
sub
enter
pop
mov
sbb
clc
cmpsb
cmp
mov
dec
mov
ret
push
bound
xor
push
inc
or
bswap
mov
mov
fstps
mov
adc
sahf
add
ja
mov
call
xchg
aaa
aas
sbb
jge
cld
xor
test
jge
cmp
inc
mov
adc
addr16
mov
aam
pop
lcallw
jne
mov
cmp
lahf
les
mov
cmpsb
push
xor
cmpsl
fmulp
xchg
pop
lods
call
adc
leave
push
stc
xchg
aas
shlb
insl
dec
xor
hlt
loop
cmc
ret
int
mov
cmp
insb
cs
ds
and
repnz
std
jne
pushf
ja
or
xchg
dec
add
inc
bound
add
jge
mov
cmp
jbe
inc
stos
mov
dec
lret
add
jmp
dec
push
lahf
fsubr
xchg
inc
dec
xor
repnz
lahf
mov
xchg
ret
sub
je
movsl
inc
xor
out
stos
gs
out
jae
push
out
out
mov
mov
push
xor
inc
mov
lret
aas
out
xor
bound
rcpps
ficompl
cmp
mov
pop
mov
dec
mov
jmp
subb
and
pop
test
mov
jbe
push
xchg
pop
lock
add
or
ljmp
adc
enter
clc
sub
pop
xor
jbe
sub
dec
outsb
std
fidivs
test
dec
stc
inc
xor
xor
xchg
test
xlat
inc
sbb
in
cwtl
xchg
push
xchg
mov
xor
push
sub
xchg
lahf
out
mov
imul
aas
sub
fdivs
push
jne
pop
int
dec
sbb
jg
inc
fsubr
mov
imul
dec
aam
add
cmc
mov
insb
mov
shlb
pusha
shrb
jmp
xor
xchg
sahf
mov
outsl
or
daa
call
pop
je
call
imul
fdivp
jmp
jmp
or
in
pop
scas
insl
cmpsb
sbb
sbb
push
in
insl
jp
cwtl
adc
icebp
mov
push
mov
outsl
rcrb
sub
pop
ja
mov
js
daa
cwtl
xlat
mov
sbb
mov
scas
ret
out
cmp
jmp
mov
add
test
jbe
inc
xor
adc
push
mov
adc
std
jmp
cmpsb
out
and
ljmp
lea
testl
xchg
push
call
in
push
inc
dec
sbb
rorb
inc
fldt
cmp
mov
push
rcr
adc
jbe
jl
daa
fistpll
xchg
repnz
lret
shl
or
cmp
inc
jl
push
add
push
repz
stos
sbb
insl
rorl
pop
inc
or
jno
pop
insl
dec
jge
insl
xor
fnstcw
sahf
leave
jns
pushf
dec
or
fiadds
jg
inc
mov
ret
sarb
push
pop
push
enter
outsl
popf
mov
or
jo
jge
mov
or
imul
and
mov
lret
jle
jno
loope
stos
mov
mov
shr
and
and
iret
mov
rorb
jo
mov
dec
mov
cltd
shlb
mul
xor
test
and
fwait
jbe
addl
lea
out
xor
test
jge
clc
dec
scas
fiaddl
imul
popa
cmc
cmp
outsl
push
xchg
pop
mov
daa
andl
add
mov
inc
test
les
and
pop
sub
addr16
in
xchg
ret
scas
cmp
xchg
out
cmpsb
pop
into
mov
hlt
pop
test
in
aad
arpl
lock
mov
in
mov
xlat
push
test
icebp
and
repnz
movsl
cmpb
push
insb
sbb
sbb
mov
sti
push
data16
iret
cmp
clc
xlat
repz
push
jge
dec
inc
or
fisubrl
push
repnz
cmp
das
call
repz
jo
push
pop
lds
imul
ret
fwait
mov
hlt
pop
mov
rcrl
shrl
or
add
fimuls
or
mov
fs
inc
mov
dec
jmp
push
insl
xchg
ljmp
jg
add
push
fdiv
stos
add
push
ja
ja
jp
and
mov
enter
inc
hlt
sti
in
jne
cmc
xchg
mov
aad
stc
cmp
in
cli
leave
idivb
jg
loope
mov
fildl
fxch
push
leave
inc
shll
bound
xchg
push
inc
push
ss
call
and
dec
inc
mov
rcl
mov
pop
sub
adc
or
xchg
cmp
add
je
cmpsl
int
inc
fisubs
dec
xchg
mov
sub
in
icebp
fdiv
lea
mull
push
inc
cmp
xchg
xor
adc
ret
repz
cmpsl
cmpsl
out
js
out
push
mov
leave
ljmp
clc
push
in
lret
mov
add
mov
mov
lea
push
jl
cmc
inc
lock
arpl
sar
add
dec
cld
push
sti
mov
cwtl
fwait
in
mov
sbb
jae
movsl
inc
xor
insl
mov
mov
clc
adc
dec
push
push
or
pop
dec
js
repz
add
xor
outsb
push
orl
push
aam
or
call
test
out
pushf
inc
jnp
addr16
xor
jnp
push
xor
daa
les
pop
js
movsl
cmp
jmp
rol
push
jns
mov
std
cmp
add
inc
nop
mov
push
inc
lret
jne
imul
aam
push
dec
mov
stos
nop
add
sub
cmpsl
cltd
mov
lret
adc
or
mov
aad
js
mov
ja
xchg
bound
fidivs
enter
fnstcw
dec
xor
cmp
mov
pop
mov
and
and
cltd
rorb
subb
divb
repz
dec
nop
adc
mov
ja
xchg
icebp
cltd
dec
mov
xor
jb
mov
mov
mov
push
repz
cld
lods
dec
adcb
pop
lahf
dec
pop
cmp
mov
out
or
xchg
cltd
cld
jae
pop
fsubr
or
cli
mov
std
jae
lret
jb
sub
pop
or
pop
into
daa
cmpsl
cmp
mov
inc
mov
push
xlat
fbld
mov
fstl
in
add
ficompl
outsb
sbbl
mov
push
hlt
or
imul
les
mov
jg
loop
cmp
repz
divb
cmp
pop
imul
pop
inc
or
repnz
or
xchg
inc
int
fisttpl
out
gs
xchg
cmp
mov
xchg
ret
inc
pop
and
cmp
push
jo
andl
add
dec
cwtl
cli
or
imul
jb
test
xor
cmc
sbb
incl
mov
test
mov
mov
subb
cmpsb
push
imul
dec
and
mov
mov
or
movsl
cmp
lret
dec
ljmp
push
pop
pusha
out
add
sub
pop
mov
js
or
shl
mov
mov
dec
popa
mulb
outsb
jecxz
push
dec
or
sbb
enter
out
jbe
int
inc
dec
loope
sub
mov
or
xor
std
mov
cmp
mov
shll
int
xchg
jb
cwtl
jnp
mov
jecxz
inc
xchg
in
or
int3
jb
mov
fists
sub
adc
jecxz
or
mov
mov
inc
push
sbb
negl
iret
pop
inc
mov
insl
es
xchg
pop
and
push
dec
popl
sub
mov
push
nop
je
jno
sub
hlt
pop
lahf
and
dec
adc
jne
insl
cmp
fisubrl
push
push
jnp
and
sub
xchg
scas
imulb
pop
mov
inc
jecxz
or
add
inc
sub
cmc
rcrl
mov
sub
aad
or
pop
inc
xchg
repnz
fstl
jmp
rorb
jecxz
mov
pop
or
outsb
int
insl
call
push
ret
sub
xor
add
push
sub
aad
lds
cmp
mov
and
adc
repnz
cmpsb
loopne
inc
xchg
jmp
push
bnd
cmp
shlb
pushf
cld
fstps
jbe
aad
imul
bound
inc
ja
xchg
scas
jns
popf
push
je
sti
cmp
sub
test
push
repz
loope
das
bound
push
arpl
mov
mov
pusha
mov
ret
sbb
lods
repnz
sub
inc
sbb
out
outsl
out
xchg
lret
sbb
jle
push
cmpsb
push
int3
loope
jns
inc
push
push
xchg
mov
cwtl
xor
adc
in
cmpsb
int3
jb
add
mov
mov
shrl
cmc
and
ret
cmc
movsb
push
cld
adc
inc
xchg
test
popl
push
outsb
bound
stos
pop
js
test
inc
push
push
into
xlat
or
call
out
xchg
insb
pxor
push
popf
mov
insb
inc
jb
push
mov
cmp
xchg
fmul
adc
sub
outsb
rcl
jmp
sbb
mov
call
jne
inc
bound
jns
je
dec
inc
pusha
insl
push
cmp
les
dec
adc
jns
xchg
in
xchg
popa
mov
adc
dec
jb
stc
rcrl
or
mov
clc
outsb
mov
test
aad
movsb
sbb
pop
mov
xchg
inc
arpl
jl
xchg
cmp
sbb
cmp
mov
insl
dec
xlat
adc
sub
call
dec
jl
sbb
jb
aam
enter
push
sbb
sub
test
jae
pop
xchg
adc
mov
lahf
test
pop
mov
mov
aam
mov
pop
inc
push
mov
jns
jmp
in
add
adc
es
outsl
xor
adcb
mov
imul
les
mov
std
jb
jmp
in
add
and
mov
xchg
gs
jb
popa
inc
inc
fcoml
call
mov
in
xor
leave
jg
pop
fimull
ds
mov
lock
mov
int
xchg
lods
push
cmpsl
dec
cmp
push
xchg
mov
arpl
sub
sbb
frstor
pop
jmp
push
xchg
cmpsb
xor
lcall
fprem1
sbb
in
je
nop
jns
and
add
lcall
xchg
lods
mov
cmp
lea
lret
mov
inc
sbb
stc
jns
repz
sbb
inc
sbb
out
push
dec
mov
leave
jo
jne
cwtl
clc
test
xor
and
lcall
dec
imul
and
cmovns
or
inc
mov
dec
ljmp
mov
es
movb
push
xor
fldl2e
jle
pusha
ljmp
leave
cmc
leave
hlt
lock
jne
mov
mov
fldl
sbb
jb
xchg
sbb
inc
gs
add
cmp
orl
mov
int3
push
fdivl
inc
ret
mov
jl
push
fimull
sub
push
dec
xlat
push
shll
and
jl
fdivrs
ljmp
xor
jo
insl
sahf
scas
or
add
out
pop
jb
scas
cmp
add
sahf
dec
mov
push
lock
cmp
mov
jmp
mov
out
and
add
fisubrs
mov
iret
fldt
fbld
dec
sub
jecxz
xchg
pushf
mov
test
mov
jg
flds
mov
leave
ret
les
push
dec
add
push
push
push
gs
pushl
or
push
inc
cmp
mov
dec
and
call
movsb
out
roll
dec
add
and
mov
in
je
loop
cmpsl
mov
ret
push
cmc
addr16
xorl
imul
inc
gs
jb
push
loope
mov
stos
xor
outsl
cmp
out
push
leave
and
notb
fildll
ret
sti
sahf
cmp
xchg
in
xchg
mov
jae
ret
inc
icebp
push
inc
test
inc
pop
or
scas
dec
lret
mov
sbb
iret
dec
cmpsb
je
sub
pushf
lcall
inc
and
rcrl
mov
and
mov
test
test
dec
out
stos
push
je
testb
lea
jle
xor
cwtl
mov
stc
mov
in
cmp
test
rcrb
fwait
xor
addb
pop
je
sti
addr16
and
or
in
out
and
inc
and
hlt
sbb
inc
sbb
inc
jnp
fsubl
inc
inc
jge
jns
or
fwait
hlt
sbb
add
inc
jg
push
int3
pop
scas
ja
adc
jns
out
repz
push
push
cmpsb
lcall
push
imul
mov
je
xchg
dec
inc
lds
mov
cmp
pushf
fbstp
add
add
outsb
sub
xlat
aas
push
mov
out
sub
repnz
repnz
mov
push
xchg
test
or
cli
inc
rcl
test
call
inc
cmp
jecxz
add
mulb
call
cwtl
in
arpl
mov
mov
add
adc
jns
ljmp
or
sub
dec
insl
test
xchg
lcall
rcl
mov
sahf
push
xor
lret
mov
jnp
je
push
icebp
insl
bnd
out
jbe
lahf
jle
adcb
xchg
fistl
enter
push
inc
and
xor
jae
pop
or
pop
cmp
xchg
jo
mov
ja
xchg
and
adc
push
stc
sarb
fcoml
jno
outsl
sub
inc
inc
inc
imul
push
jns
in
cmc
ficomps
test
add
push
lahf
mov
ja
dec
repnz
enter
mov
jne
lret
xor
mov
xor
add
cmp
adc
stc
scas
insl
stos
pop
mov
mov
addr16
dec
pushl
sbb
sub
adc
int3
pushf
int
test
hlt
sub
cli
cmp
outsb
pop
ja
push
add
mov
loope
jae
jge
and
mov
push
xor
push
inc
imul
in
sub
pop
in
jne
push
dec
imul
int
jae
xchg
xchg
idiv
aad
jecxz,pt
mov
jns
add
popa
jno
dec
add
or
cmp
mov
sub
jecxz
add
into
repz
push
in
sbb
or
cmp
push
outsb
lods
ja
int
pop
ljmp
inc
int
mov
push
mov
fbstp
mov
fldenv
mov
xor
loope
jg
xchg
inc
fbld
and
adc
push
inc
aad
xchg
dec
or
or
or
js
test
movsl
dec
sub
sahf
test
into
and
popa
sub
imul
testb
mov
inc
jbe
xchg
pop
rcll
inc
jmp
data16
test
and
scas
sbbl
mov
push
mov
ret
dec
pop
lods
pop
inc
mov
dec
inc
aam
test
out
adc
dec
push
jp
inc
enter
mov
fsts
stos
testb
dec
push
loop
sub
adc
pop
add
xchg
daa
shll
jne
fldenv
ret
cltd
pushf
inc
addr16
and
mov
push
int
in
mov
dec
out
mov
lret
and
pop
in
out
jl
mov
push
sbb
mov
clc
orl
call
aas
push
and
fsubr
cmc
cmp
dec
out
inc
lahf
in
adc
xor
push
outsb
inc
fcompl
dec
and
dec
in
dec
ja
lahf
add
mov
test
sub
cld
cmp
cmp
push
cld
mov
jge
xor
mov
hlt
jmp
xchg
call
lret
cmp
jo
rcrl
sub
push
xchg
jno
jecxz
fnstcw
and
sbb
or
cltd
push
cli
cmp
inc
mov
cltd
lret
outsb
mov
std
arpl
jmp
push
fwait
mov
add
xchg
dec
xor
stc
pop
and
adc
add
mov
cmp
dec
add
adc
sbb
inc
stos
movsl
jbe
and
cs
mov
jge
arpl
xchg
sbb
inc
sub
daa
mov
sub
xchg
dec
pushf
out
adc
push
xor
jo
pusha
in
pop
rolb
daa
int3
mov
in
cmp
pusha
jmp
aaa
or
mov
mov
jmp
mov
int3
test
inc
xor
stc
and
dec
stc
jp
imul
add
leave
sub
inc
shll
add
aaa
and
mov
push
fsincos
adc
adcb
push
mov
loopne
je
push
pop
sub
xor
or
mov
xchg
push
ret
cmc
out
inc
shrl
cmpsb
xor
adcl
les
imul
cmp
in
pop
cwtl
or
cmp
pop
sub
and
adc
push
add
int
call
jns
sbbl
je
ret
cld
mov
stos
inc
pop
lock
xor
test
fistpll
imul
loopne
call
mov
int3
dec
xchg
fsub
xchg
in
data16
imul
push
mov
jb,pn
push
mov
or
dec
cmpsb
cld
sbb
lock
sbb
sbb
add
pusha
adc
mov
ds
in
pop
in
mov
imul
xchg
mov
inc
dec
inc
add
mov
scas
ja
pop
xchg
add
in
push
dec
xor
inc
fcoms
inc
jbe
sub
fldt
inc
je
int
inc
icebp
cmp
jle
in
jecxz
mov
inc
pop
dec
sub
leave
outsb
jb
aaa
mov
rclb
movsb
sub
pushf
nop
mov
cli
les
pop
ljmp
mov
dec
lods
jmp
jbe
xchg
lock
xchg
sbb
fscale
pop
rcrl
dec
pop
mov
adc
insl
xchg
ds
rol
insl
sbb
push
int
jecxz
xchg
out
mov
insb
mov
sbbl
dec
mov
clc
jl
in
pop
push
push
jg
ficoml
lods
imul
andl
pusha
inc
pop
sub
cmpsl
push
iret
in
xchg
mov
pop
lret
push
lods
mov
icebp
jae
xchg
and
ja
iret
sub
mov
icebp
cmpsl
mov
jmp
test
ja
int3
cmpsl
fnsave
iret
lahf
xchg
fistl
imul
sarb
mov
lcall
mov
insl
add
ret
les
aad
jb
jb
mov
loopne
pop
cmc
xchg
xchg
shll
and
sub
jo
jns
xor
or
push
pop
mov
outsb
addb
or
xor
icebp
lock
jl
cmp
push
adc
adc
mov
sti
mov
and
out
push
dec
push
push
stos
andl
pusha
inc
fwait
sbb
sahf
sbb
leave
pop
and
loop
xor
xchg
ljmp
or
fisubrs
pop
add
jbe
mov
je
cli
imul
sbbb
lret
mov
imul
cmp
addl
subl
adcb
fldcw
jl
sub
nop
clc
mov
dec
inc
cltd
fwait
test
sbb
add
jmp
ret
loop
jecxz
add
cli
xchg
and
loope
cmpl
and
dec
out
xor
cmp
mov
outsl
dec
out
jle
bound
shll
pop
mov
add
ltr
jbe
lods
push
fstps
in
mov
or
jns
xchg
in
pusha
xor
rolb
cli
jmp
add
lock
lods
cmp
xor
sbb
add
in
je
jo
rorl
push
xor
mov
xchg
mov
xchg
xor
jnp
in
mov
mov
insl
mov
mov
fsts
js
aam
jl
shlb
inc
cmp
popa
mov
pop
jecxz
jp
xor
adc
jbe
sub
outsb
cmp
dec
sbb
sbb
xor
pop
xchg
jb
push
jle
pusha
in
sbb
fwait
mov
insl
push
jb
adc
pushf
icebp
or
sarl
pop
cltd
push
mov
les
pop
hlt
icebp
pusha
popf
jo
mov
xor
les
xor
and
lds
jb,pn
or
push
dec
adc
enter
xchg
jge
xchg
mov
xchg
mov
aam
dec
add
jns
outsb
or
cli
jp
scas
mov
sbb
inc
xor
mov
inc
in
jge
in
out
mov
or
jp
mov
inc
cltd
mov
sbb
xor
cmp
dec
pop
arpl
out
mov
lahf
sub
sbb
or
push
jno
int3
jne
inc
stos
stc
cmpsb
pushf
push
and
mov
mov
shll
cmpsb
lock
insb
push
add
icebp
push
cmp
in
mov
or
cmp
push
in
mov
and
add
xchg
cmpsb
dec
xchg
repz
gs
xor
xor
jae
les
lods
adc
sub
jge
je
mov
mov
xchg
sbb
inc
cmpsb
cmpsl
in
xor
addr16
mov
cs
ljmp
loop
or
repnz
sub
dec
sub
lock
cmp
or
sub
pop
inc
jb
outsl
ret
shll
movsl
push
cmc
lret
inc
xor
aam
into
repz
mov
adc
mov
ja
fwait
insb
mov
inc
in
push
ret
in
outsb
push
icebp
jno
lock
mov
aas
inc
popf
mov
in
and
sti
in
lods
adc
ret
sub
shlb
adc
inc
out
xchg
adc
xchg
adc
jp
or
jbe
rcrl
jae
lods
data16
and
vunpckhps
or
mov
xor
push
xor
or
pop
mov
lcall
mov
out
daa
nop
popa
xchg
stos
insb
lods
inc
xchg
xchg
mov
push
mov
xchg
sub
enter
xchg
ret
cmp
push
xor
pop
jne
scas
mov
adc
or
fsin
ss
stos
lods
cmp
push
or
rolb
inc
aad
ss
daa
dec
push
and
fstl
movsb
pop
xchg
loopne
push
jmp
repz
jecxz
aam
sti
shl
aas
jno
pop
jg
pop
lahf
sbb
jecxz
inc
cmp
sub
mov
stos
imul
xchg
and
pop
outsb
xchg
in
xchg
mov
sbb
mov
inc
dec
gs
sbb
sarl
cmp
pop
cmp
sbb
insb
pop
mov
sub
cmc
cli
mov
hlt
addr16
and
inc
mov
jb
lcall
sub
cmp
jnp
sub
fwait
int
in
test
test
dec
dec
sbb
leave
bound
or
lods
mov
inc
pop
xchg
in
mov
lea
sbb
inc
cli
es
or
push
dec
and
in
dec
inc
daa
push
mov
mov
sbb
xchg
lret
iret
rcr
fcomip
jl
cmc
lret
inc
push
xlat
call
sub
or
push
fcomps
lds
mov
mov
fmuls
lret
fsubl
aad
mov
das
mov
dec
and
pop
add
jge
shr
cltd
jp
scas
dec
adc
mov
ss
fadd
xchg
pop
push
inc
push
push
loop
mov
push
sbb
ja
subb
mov
je
dec
jg
dec
mov
nop
out
dec
cmp
jl
out
ja
pop
hlt
push
push
sub
mov
pop
out
xorb
jne,pn
push
std
in
sub
dec
lock
enter
sub
popa
pop
jae
mov
inc
shrb
outsb
shlb
mov
icebp
lahf
mov
mov
xor
pop
dec
jnp
cmpsl
lahf
imul
in
shl
sub
aam
fisttps
jmp
jne
mov
sub
adc
in
iret
sub
shl
mov
cmp
mov
xchg
push
mov
jb
xchg
lods
xor
mov
or
jo
jge
inc
mov
fs
pop
mov
jo
gs
and
mov
icebp
int
mov
pop
inc
mov
inc
daa
mov
andb
mov
mov
cmc
xchg
push
dec
mov
jo
test
mov
jns
lret
xorb
xor
fstps
iret
scas
pop
arpl
jo
xchg
in
xchg
mov
sub
lahf
push
and
xor
mov
cmpsl
out
cmpsl
lret
loopne
dec
sbb
mov
fs
add
mulb
jae
adc
ljmp
cmpsb
repnz
jmp
leave
sbb
push
push
adc
int3
int
or
xor
inc
mov
popf
cmp
push
popl
inc
ret
popf
idivl
gs
jo
adc
inc
nop
inc
jmp
popa
leave
jmp
ret
adc
aas
inc
outsb
mov
mov
mov
repz
movsl
movsb
fsubl
inc
jns
xchg
fwait
cld
sub
adc
es
cmc
int3
cwtl
rcll
ret
push
fdivs
dec
lret
mov
es
jnp
jmp
adc
test
mov
dec
fimuls
pop
jle
xor
dec
sub
mov
dec
aaa
das
xchg
dec
das
loop
jp
scas
outsl
enter
icebp
mov
or
push
push
cmc
xor
adc
inc
jnp
fisttps
cmp
fs
das
dec
test
inc
mov
mov
sub
and
hlt
repz
and
dec
add
xor
decl
test
mov
ret
jg
in
mov
inc
mov
add
xchg
jnp
add
lcall
mov
push
cmp
mov
loope
arpl
mov
outsb
xor
cmc
outsl
cmpsb
out
lret
adc
jl
inc
jle
sub
push
bnd
push
test
movsl
xchg
clc
inc
insb
jb
push
dec
sub
jbe
jb
loope
pop
sub
outsb
dec
mov
jp
aad
mov
data16
lret
jecxz
inc
cmp
xor
jmp
jge
mov
dec
leave
inc
aam
xor
faddp
clc
ljmp
in
hlt
mov
jno
dec
cmpsl
int3
add
adc
jp
dec
sbb
push
mov
xchg
rorb
fidivl
cwtl
enter
and
scas
in
repnz
push
jb
subl
or
adc
test
iret
pusha
and
jbe
sub
xchg
cmpl
jmp
pop
mov
mov
mov
jmp
addr16
pop
into
or
repnz
imul
fsts
imul
and
mov
in
rcrb
imul
jp
mov
movsl
arpl
testb
ds
add
push
lods
fimull
cmp
jb
insb
and
and
mov
mov
xchg
pop
inc
mov
popa
aas
mov
xchg
and
popa
mov
mov
subb
pushf
les
lock
mov
lds
adc
fs
in
rcr
xorl
mov
sub
dec
mov
inc
pop
dec
mov
dec
shlb
push
icebp
int
and
jns
or
out
sbb
pop
mov
shrl
cwtl
xor
hlt
repz
insb
js
or
dec
aad
lret
jne
add
idivl
jae
mov
sub
push
roll
pop
cmpl
loop
cmp
lret
mov
push
dec
xchg
xor
mov
out
loop
jmp
rol
lock
push
jbe
sbbb
ret
mov
mov
or
mov
jb
call
xor
xor
orb
add
inc
cmpsl
mov
push
fsubr
mov
xor
out
imul
aad
jg
es
pop
dec
or
xchg
push
pusha
inc
xor
sub
loopne
mov
pop
or
push
fdivrl
mov
cmpsl
pusha
and
sub
std
enter
fisubl
call
push
jp
or
popa
adc
icebp
dec
rcrb
sbb
jno
jl
lahf
gs
mov
shr
push
lret
stos
or
inc
cmpsb
push
ds
xchg
fs
xchg
in
add
shrl
in
and
mov
in
xchg
push
rcll
in
aam
adc
and
in
jp
shl
mov
xchg
fucomp
addr16
dec
sbb
mov
cmc
sahf
cld
imul
mov
divl
fs
repz
xchg
push
jo
mov
adc
popa
test
sub
sahf
jge
lcall
lods
mov
or
xchg
push
mov
mov
or
push
fimull
mov
jecxz
or
inc
mov
test
addb
popf
imul
and
dec
loopne
leave
cld
loop
jno
cli
inc
sub
xlat
lods
push
iret
or
test
insb
insl
pop
fcompl
andb
mov
cmp
ret
xchg
shrl
push
mov
mov
test
shll
mov
dec
and
jae
in
ds
push
and
jno
aam
push
sbb
mov
cltd
pop
std
in
cmp
int
aad
out
mov
xchg
push
negl
jns
push
lret
jbe
cmp
outsb
into
insb
xor
push
cmpsb
fsubrs
stc
pop
sub
loopne
add
add
push
lahf
jno
mov
dec
in
push
data16
and
fstp
inc
into
xor
sbb
imul
mov
xchg
fsubs
sbb
js
xchg
into
or
out
and
and
sub
fisubrs
mov
jmp
fistps
insl
gs
push
shlb
iret
cwtl
inc
push
push
cld
mov
clc
scas
lret
negl
jl
jle
inc
addl
int3
xor
insl
add
in
inc
imul
jno
xchg
jmp
inc
sub
jg
and
inc
bound
pop
icebp
jne
sub
cld
orb
add
es
and
mov
xlat
pop
or
mov
xor
inc
inc
adc
repz
out
mov
movsb
clc
fldenv
xchg
xchg
push
push
stos
xchg
sub
inc
std
ja
dec
aam
jb
cltd
lret
push
and
cs
inc
mov
scas
cwtl
inc
imul
jecxz
ret
insb
mov
lret
icebp
je
daa
mov
pop
and
push
sbb
mov
mov
inc
pop
jno
xlat
xchg
icebp
in
or
pop
insb
mov
inc
mov
dec
sub
xchg
add
daa
pop
in
insl
cs
outsl
adc
push
lcall
subl
push
jns
dec
fisttps
repnz
inc
clc
fsubrs
fs
mov
out
out
adc
cmpsl
dec
fdivr
jp
sub
push
imul
iret
xchg
dec
dec
mov
xchg
add
in
pop
addr16
add
out
in
xor
adc
ljmp
dec
lahf
addr16
dec
std
push
js
loop
pop
push
push
xlat
shll
mov
lret
mov
movsl
rolb
fbld
addr16
andl
mov
add
pushf
xchg
lret
ret
aam
jl
lea
gs
add
and
sbb
adc
lret
imul
scas
das
mov
rcrb
incl
insl
lock
xor
mov
pop
pop
int
pusha
cmp
ja
sub
and
inc
stos
outsb
cmpsl
jb
lea
movsb
into
sub
int
xchg
rolb
mov
mov
xorl
sbb
dec
std
fwait
cmpsb
lahf
lret
fisubrl
mov
add
into
test
mov
js
gs
out
clc
inc
sbb
jl
xchg
out
xchg
push
inc
mov
inc
and
inc
jge
pusha
mov
xor
dec
and
adc
call
and
cmp
jg
call
cmp
pop
fdiv
popl
iret
lahf
test
jno
ds
xchg
cltd
xlat
icebp
cs
sub
cmpsl
jnp
test
stos
aaa
repz
jne
fidivl
mull
xchg
inc
adc
inc
aas
idivl
pusha
fmuls
andl
push
xchg
std
in
pop
mov
iret
xchg
cmp
push
sub
fisubrs
addb
jno
jnp
insb
pop
test
addr16
outsl
sbb
movsb
sub
mov
imul
xchg
rcr
lock
mov
mov
test
aas
xchg
adc
add
stc
sbb
jl
mov
cltd
adc
filds
xchg
repz
dec
ljmp
dec
lret
mov
inc
mov
iret
push
xchg
scas
andl
punpckhbw
pop
nop
or
loopne
icebp
nop
or
push
jp
aam
in
nop
ljmp
jmp
mov
mov
ss
popf
imul
mov
mov
fwait
outsb
pop
cld
ret
mov
sarb
cltd
stos
sub
sbb
pushf
sbb
jge
call
pop
pusha
lcall
jnp
faddl
out
mov
inc
sub
push
ja
sub
ret
insb
pop
fisttpll
inc
aam
pop
add
or
push
insl
ror
nop
pop
pusha
dec
mov
pushf
sbb
push
inc
into
icebp
push
pop
ljmp
xchg
hlt
cmpl
pop
jae
inc
push
pop
xchg
icebp
and
jne
scas
xor
dec
mov
ja
mov
sub
aas
cmp
icebp
int
rcrl
jb
push
insb
dec
aaa
mov
adc
insl
add
test
inc
sub
jno
std
clc
lret
aad
push
inc
in
xor
or
mov
pop
jno
mov
fcmovne
enter
fs
add
cwtl
xor
inc
sbb
into
inc
jns,pn
mov
into
jae
push
inc
fwait
xchg
insl
fiaddl
adc
insb
fildll
dec
pop
or
outsb
sub
sbb
in
cwtl
xor
push
dec
adc
cmp
mov
sub
mov
mov
adc
out
sub
sub
xor
out
sub
xor
sbb
subl
shll
jge
lahf
gs
loopne
mov
adc
push
in
scas
insb
pushf
in
negl
shll
in
imul
adc
mov
dec
repz
xor
lock
dec
xchg
repz
data16
inc
cmp
inc
inc
negb
es
sub
pop
nop
adc
pop
cmp
xchg
xchg
int3
jne
test
call
cmc
xor
or
jb
es
dec
inc
mov
imul
popf
xor
test
decl
cld
push
filds
mov
pop
test
add
ja
push
loope
test
movsb
mov
int3
adc
push
hlt
orl
pop
test
jmp
cmpsb
call
fldt
dec
out
inc
pop
inc
imul
lcall
mov
inc
lea
iret
cmc
decl
jae
loop
lods
movsl
iret
and
pop
xor
pusha
test
mov
xchg
sub
sub
dec
jae
mov
and
adc
cs
mov
ljmp
je
sub
out
cmp
inc
lret
mov
jo
shl
scas
pop
movsl
movsb
jmp
fldt
sbb
sbb
jp
ds
movsl
push
jmp
mov
push
in
shl
std
xchg
das
inc
popf
rclb
inc
xorl
lahf
jno
push
or
push
test
mov
xor
dec
xchg
add
test
fld
inc
sub
mov
add
addl
mov
xor
push
cmpsb
into
push
repz
add
mov
cmp
mov
mov
ds
mov
add
movsl
pop
pushf
lds
rorb
push
decb
les
mov
into
cmp
cmp
iret
mov
mov
xchg
or
xchg
jnp
repz
xchg
jno
fldcw
jmp
pop
icebp
add
je
add
ss
pop
out
jle
push
jbe
rcl
inc
nop
mov
xchg
adc
xor
aaa
sub
jo
scas
nop
xchg
ror
rcrb
sahf
ficoms
mov
and
or
or
or
push
inc
mov
lods
sbb
sti
sub
std
mov
add
clc
sub
inc
sub
add
jecxz
out
cmpsl
lock
dec
cld
add
std
imul
dec
imul
jo
jp
jns
push
dec
mov
pushf
clc
push
sub
data16
mov
xor
flds
mov
inc
mov
inc
js
pop
cltd
dec
mov
lcall
sub
sub
je
lret
mov
or
repz
lret
xor
in
xor
mov
outsl
inc
insb
enter
pop
dec
xlat
ret
mov
sbb
inc
sub
out
cmpsl
inc
xor
imul
and
sbb
cmp
push
inc
mov
int
fcoms
add
lahf
xor
jg
push
jl
and
nop
mov
and
and
cld
bound
dec
gs
mov
aad
jb
jg
je
push
mov
mov
cmc
cmovnp
xor
cmp
in
sub
in
mov
movsl
out
xlat
in
in
daa
push
gs
add
mov
pop
add
mov
jo
dec
inc
adc
push
jecxz
fidivrl
lds
xchg
dec
dec
pushf
mov
pop
sub
mov
dec
xor
in
notl
pusha
js
test
pushf
ds
icebp
lret
add
fisubrl
bound
jns
test
dec
aas
jo
push
jge
and
xor
sbb
xorl
cld
pop
mov
mov
add
sub
inc
mov
xchg
int3
dec
fiadds
test
or
loopne
jbe
insb
in
pop
push
sub
jl
push
mov
jbe
sbb
push
addr16
cli
add
or
or
or
add
mov
leave
je
push
leave
jo
adc
int
loope
and
clc
mov
fnsave
push
clc
mov
xchg
xchg
cmp
leave
icebp
ret
repnz
sub
or
in
outsl
jp
or
pop
movsb
sbb
cwtl
lock
sbb
shrb
pop
pop
ret
stos
pop
pusha
mov
sbb
add
jae
aam
pop
pop
out
push
dec
push
jo
cs
dec
subl
orb
mov
fsubrs
cmp
rcll
jns
test
test
loopne
movsb
add
push
and
repnz
xchg
push
imul
fsts
mov
or
pusha
sarl
outsb
mov
fiaddl
push
cli
pop
push
and
inc
pop
sub
jb
aas
out
push
call
gs
inc
sbb
aad
jecxz
iret
push
inc
cmp
jle
xchg
adc
xchg
aaa
inc
divl
jnp
in
dec
adc
jae
mov
mov
into
pop
leave
mov
or
xchg
xchg
push
jp
mov
int3
mov
inc
test
jle
cwtl
inc
jecxz
aam
push
es
and
stos
jmp
mov
test
sbb
mov
mov
xchg
mov
xchg
test
xor
js
movsl
shl
xchg
inc
mov
pop
fsubrl
mov
movb
ljmp
dec
jno
cmp
sub
nop
arpl
into
dec
sub
insb
sub
jle
or
jb
jbe
scas
pop
aam
jo
xor
sub
fs
push
fldcw
add
std
popl
stos
pusha
jmp
pop
pop
ret
out
xlat
xor
aas
stos
xor
mov
jle
inc
and
out
imul
mov
or
or
mov
fldl
ljmp
loopne
and
jnp
jae
fisubrl
test
inc
pop
pop
adc
ss
push
jge
out
dec
and
push
icebp
cmp
testl
popf
jmp
dec
xchg
scas
mov
into
leave
js
pop
divl
jns
or
sti
mov
in
mov
decl
int3
popf
push
pop
sti
dec
daa
dec
adc
cmp
push
mov
and
xchg
jnp
addr16
fdivs
leave
xchg
xlat
imul
xor
add
stos
rolb
call
test
mov
mov
nop
mov
xchg
xchg
mov
jg
lock
xor
lret
imul
push
mov
and
or
mov
dec
jns
mov
mov
adc
clc
daa
cmp
and
sahf
loope
xorb
jno
aaa
movsl
sub
jno
int3
push
imul
loopne
push
jnp
scas
push
sbb
cwtl
lock
int
dec
aam
jg
xor
dec
or
pop
xchg
mov
dec
lret
out
mov
icebp
push
imul
pop
jno
jnp
das
adc
xor
enter
cmpneqps
mov
xor
xchg
inc
pop
ja
push
xor
jne
cmp
push
ret
jbe
pop
add
std
inc
std
inc
movsl
out
add
and
push
adc
iret
push
sbb
lcall
xor
test
xchg
push
in
sub
imul
fdivrs
jg
push
jp
stos
dec
or
jno
dec
imul
cmp
push
jns
mov
inc
or
shr
cmp
ror
mov
outsb
mov
aaa
cmp
insl
xchg
pop
and
mov
push
jmp
jno
mov
inc
add
mov
cmpsb
mov
sbb
push
or
jl
push
sbb
fs
adc
add
repz
xchg
xchg
sub
cmp
inc
lret
adc
es
adc
clc
jecxz
aas
loop
mov
sbb
adc
out
pop
jge
mov
cmc
xchg
loope
jl
cli
js
cmpl
sahf
or
or
popf
sahf
jno
loope
bound
and
scas
mov
lret
and
imul
addb
out
inc
imul
test
iret
sbb
inc
xchg
outsb
cmpsb
arpl
xchg
dec
ja
test
pop
lret
mov
add
nop
fdivs
mov
push
sarl
rclb
ja
jge
xor
and
ret
adc
in
sbb
cld
sbbl
cmp
add
fstpl
pop
mov
test
dec
xor
cwtl
ljmp
dec
negb
cmpsb
pushf
and
sub
mov
pop
push
es
mov
gs
inc
ret
push
fsts
mov
ss
outsb
jbe
ds
sarl
mov
out
mov
sbb
arpl
and
in
inc
sub
push
fdivr
xchg
cmp
or
iret
arpl
nop
xchg
or
cwtl
jge
mov
ret
testl
mov
mov
sbb
enter
jae
xor
mov
icebp
rcl
and
sbb
in
cltd
pop
cmp
lret
jno
ja
and
mov
jmp
mov
xchg
popa
dec
jae
sarl
dec
mov
dec
mov
fmuls
jmp
cmp
and
mov
sbb
add
mov
cwtl
mov
test
lret
sbb
sbb
xchg
push
and
mov
inc
jb
push
into
shrl
or
adc
jg
inc
cmp
cmc
imul
push
sub
push
xor
mov
cmp
push
push
aas
inc
push
jbe
movsb
cmp
inc
xchg
insl
jle
sbb
int
xchg
mov
ja
xor
dec
jne
pop
ja
xchg
adc
les
and
push
jb
test
dec
cmpsb
mov
or
das
call
sahf
leave
hlt
scas
push
dec
add
es
inc
cmp
dec
mov
adc
lcall
out
movsb
je
and
jg
icebp
int3
out
gs
sbb
sbb
data16
dec
inc
out
mov
xor
dec
dec
shlb
push
pop
mov
test
lea
jb
fcompl
jae
insl
dec
cwtl
xchg
fmuls
jmp
push
mov
and
mov
sbb
add
xchg
ljmp
xchg
ljmp
xchg
fs
sbb
or
sub
mov
shl
lods
inc
leave
sub
sbb
sbb
inc
and
es
or
adc
xchg
mov
or
add
fcmovnb
and
lret
test
test
mov
int
jb
jae
insl
dec
adcl
or
and
lahf
stos
inc
ret
mov
call
fcmovnb
add
jmp
and
pusha
jae
ror
data16
fdivs
outsl
nop
sbb
xor
sbb
leave
mov
scas
xor
filds
aaa
mov
int3
pop
loop
push
add
add
sahf
mov
sahf
pop
push
push
jo
insl
jecxz
insb
push
inc
mov
dec
cwtl
sbb
icebp
push
jo
cltd
cld
or
or
fwait
add
jmp
cwtl
ficoms
int3
ja
aad
inc
test
loop
sbb
mov
imul
mov
push
lock
inc
cltd
fldt
cmpsb
add
dec
push
inc
and
add
jo
test
leave
roll
add
sub
dec
stos
repnz
jle
push
jmp
icebp
push
dec
jb
sbb
subl
popa
cmp
inc
mov
and
mov
lret
stos
dec
pop
icebp
xor
aad
mov
stc
inc
sahf
in
divb
or
mov
jno
cld
sbb
jmp
neg
xchg
popa
push
sbb
add
vpavgw
xchg
mov
ficoml
jge
out
xchg
xor
xchg
popf
xchg
out
test
out
and
shll
sub
repnz
push
jne
mov
inc
bnd
xlat
and
js
sbb
bound
sbb
inc
jmp
cmp
cmc
outsb
dec
mov
jle
jno
push
mov
lcall
add
test
aad
scas
push
xchg
jle
test
jbe
stos
inc
xchg
sub
sub
in
mov
add
push
push
outsl
xchg
pop
add
dec
sub
leave
inc
mov
cwtl
addb
inc
sub
aam
and
xchg
push
sarl
fiaddl
insb
pop
pop
sub
inc
nop
jge
std
inc
sar
inc
sbbb
stos
dec
dec
dec
mov
out
shlb
and
icebp
movsl
stc
pop
ds
cwtl
in
mov
into
in
lcall
movb
mov
mov
mov
scas
test
cmp
mov
push
frstor
test
shrb
mov
push
sub
rcll
orb
xchg
out
xor
lret
in
pop
and
dec
xchg
pop
enter
cmpsl
mov
cmc
add
inc
mov
notl
outsb
xchg
jb
pop
std
into
leave
xchg
add
xor
xlat
cltd
sub
mov
pop
sbb
and
add
lock
add
ficomps
lret
mov
call
and
inc
lods
dec
cwtl
inc
jp
inc
pushf
mov
sub
clc
jnp
scas
dec
xor
inc
bnd
mov
mov
es
jns
pushf
pop
xor
add
xchg
xor
stc
add
sbb
ja
mov
dec
scas
pop
cwtl
mov
ds
push
inc
fsts
lock
cmp
out
fsts
sub
insl
lods
sbb
push
rorb
add
add
sbb
mov
pop
push
icebp
call
int3
scas
jne
adc
test
ss
or
out
push
sbb
push
cmpsb
aaa
inc
adc
sub
mov
mov
inc
repnz
mov
sub
fnstcw
fs
cmpb
mov
ret
jle
and
test
popa
roll
in
mov
jmp
xchg
mov
add
pop
pushf
leave
pop
mov
test
imul
mov
pop
jb
xchg
les
sub
jbe
ret
sub
out
ja
cmpsb
mov
adc
flds
and
iret
jns
in
jmp
test
mov
insb
dec
sub
ss
lock
adc
xchg
pop
pop
xorl
cmc
jp
pop
sbb
in
jae
andl
out
or
xchg
outsw
in
imul
pusha
lea
or
jmp
pop
orl
push
notl
or
cmp
hlt
jmp
ja
fdivl
jne
std
das
jns
fldl
mov
fdivrs
ret
sbb
enter
pop
sti
push
lahf
mov
dec
xchg
pop
add
xor
jmp
ds
pop
pop
cld
cs
cld
cmp
xor
and
add
xor
dec
pop
repz
push
fyl2x
mov
test
xchg
jle
jle
dec
adc
or
ret
push
xchg
testl
xchg
imul
sti
push
je
stc
hlt
push
add
leave
dec
out
stos
cltd
test
inc
ljmp
mov
fsubrl
adc
cmp
in
daa
lock
push
fiadds
mov
adc
mov
imul
iret
es
jns
jno
xchg
pusha
sub
data16
insb
mov
je
call
dec
or
pop
pop
mov
in
add
dec
cmpsb
jno
dec
push
ja
dec
cli
je
mov
sahf
dec
leave
sarl
and
adc
dec
adc
std
dec
int
lahf
push
ret
push
xor
fsubl
lcall
jp
jo
xchg
sbb
sub
push
jae
outsl
mov
je
jmp
scas
mov
sahf
les
and
pop
xchg
pusha
stc
cmpsl
mov
mov
xadd
fildl
sub
jecxz,pt
xorb
add
xchg
mov
push
out
mov
dec
sub
js
out
mov
mov
aas
jo
shrb
lahf
imul
mov
pusha
mov
lock
jns
pushf
mov
add
jae
jns
mov
push
and
mov
cwtl
add
dec
mov
test
push
sub
and
lahf
dec
and
cwtl
or
push
mov
xlat
pop
pop
xchg
or
js
mov
imul
hlt
fstpl
shll
pop
repz
xchg
in
or
dec
inc
js
push
loop
mov
test
fstps
inc
mov
fwait
jo
outsl
ss
dec
rol
test
mov
mov
nop
add
sahf
and
shrb
fwait
xor
lock
pop
loope
call
adc
fmul
cmp
fimuls
jg
sub
rcrl
lock
mov
gs
sub
stc
fistpll
dec
aam
mov
inc
fcomps
and
dec
aam
and
iret
stc
out
adc
stos
pop
dec
pop
cmp
ss
push
fidivl
jns
cmp
pop
fiaddl
xor
and
ja
es
mov
pop
bound
mov
mov
lret
sahf
sbb
jge
push
jmp
mov
aad
mov
push
mov
pop
fidivs
inc
mov
dec
neg
jecxz
sbb
iret
xor
lcall
in
pop
fs
mov
jmp
fildll
inc
cs
test
cmpsl
mov
jb
js
and
xrelease
xchg
mov
dec
jle
mov
mov
ficoml
xchg
xchg
sub
xlat
xchg
enter
inc
lahf
test
xchg
cmc
outsl
lahf
sbb
ljmp
pusha
inc
stos
push
pop
in
mov
jge
add
and
xor
xor
and
loop
jb
jns
js
and
fdivp
sub
out
pop
and
xor
mov
jnp
adc
push
fwait
add
jge
fdivrp
add
aad
lds
sub
lock
sub
or
mov
out
cmp
fcoml
pop
xchg
dec
adc
inc
cmp
pusha
test
or
fbstp
and
je
xchg
pop
jg
pushf
mov
out
adc
mov
sub
mov
fcoml
insb
dec
inc
stos
pop
stc
lret
or
movsb
jbe,pn
data16
and
inc
aam
iret
das
test
mov
cmpsl
dec
rcrl
lea
jmp
mov
lahf
push
outsl
dec
push
sub
imul
sub
cmpsb
sub
rcl
add
sub
mov
dec
jbe
data16
into
sub
pusha
or
pop
insl
pusha
fs
push
loopne
pop
in
add
movsl
sbb
sbb
mov
xchg
fdivr
and
out
push
roll
add
imul
push
xchg
inc
fnstcw
out
faddl
inc
inc
sub
in
dec
lcall
std
jno
icebp
and
push
mov
mov
dec
ret
sbb
inc
aam
mov
shl
lret
jne
push
xchg
jns
mov
hlt
in
mov
jmp
test
xchg
jmp
or
xorl
dec
pop
ja
mov
int
dec
imulb
inc
mov
sti
mov
xchg
in
outsl
clc
adc
js
push
dec
test
push
sub
popf
icebp
lret
lret
cmp
ss
les
clc
adc
mov
mov
pop
rolb
out
and
out
add
fldl
repz
dec
push
loop
or
int
adc
les
aad
xor
rcrl
and
push
mov
sub
fs
jb
xlat
dec
sub
cltd
push
sub
mov
scas
testl
push
dec
sbb
pop
jmp
mov
fmulp
ss
sahf
xchg
pushf
xchg
xchg
js
jbe
inc
in
mov
and
sar
pop
xlat
push
jge
lods
xor
cli
mov
lcall
push
sbb
lea
daa
popa
loop
mov
jne
fidivrs
pop
cmp
adc
sub
cmpsb
adc
mov
push
mov
sbb
cmp
xchg
mul
aas
inc
xchg
mov
imul
xchg
addl
test
cmp
xchg
fmul
pop
dec
es
lea
je
dec
add
sbb
mov
loop
stos
ja
mov
push
xor
imul
stos
mov
or
mov
cmpsb
jp
mov
push
push
int3
jl
addr16
jne
or
cmpsb
pop
mov
dec
ljmp
mov
cltd
mov
pop
cs
mov
jle
sbb
jbe
push
packsswb
mov
pop
cmp
or
les
into
push
insl
into
sub
jnp
add
test
mov
outsl
dec
mov
push
cltd
and
lcall
cmp
or
popa
stos
sbb
mov
xchg
pop
icebp
aad
shr
jnp
dec
xchg
mov
int
adc
shrb
pusha
repz
or
pushf
out
pop
arpl
aam
lahf
test
xchg
ss
mov
mov
jns
mov
dec
shrl
push
adc
adc
fimull
pop
jnp
or
clc
enter
test
aad
sbb
inc
push
lds
shl
imul
mov
jle
mov
fcomi
adc
in
or
add
ljmp
or
fisttps
popa
pushf
sbb
xor
push
jnp
or
inc
adc
inc
and
incl
dec
xchg
shlb
repz
mov
lret
xchg
mov
xchg
cs
fldt
scas
mov
aas
fsubrl
cmpl
int3
pop
sbbb
push
cwtl
dec
push
adc
das
std
dec
sbb
hlt
adc
popa
in
fmul
cli
aad
xchg
and
mov
mov
les
add
pushl
xchg
push
shlb
inc
inc
add
jo
xchg
jne
dec
sub
or
inc
jmp
mov
mov
scas
rolb
xlat
cli
pop
lods
xor
inc
bound
cltd
sbb
dec
int3
pop
jg
sbb
dec
arpl
sbb
in
mov
cmp
cli
mov
mov
notl
fstps
sti
dec
movsl
sbb
mov
adc
dec
dec
push
test
lods
pop
inc
jno
pusha
jb
lcall
pusha
cwtl
or
cmp
inc
insl
fs
popf
push
jg
or
jge
pop
icebp
xor
inc
outsl
dec
add
push
ljmp
loop
dec
scas
mov
mov
mov
push
or
std
or
int
aad
push
jb
call
sub
add
jne
ret
mov
fs
js
int3
in
dec
mov
pop
movsl
imul
sbb
pusha
push
pop
jae
jmp
repz
cmp
adc
xor
and
int3
mov
jp
push
pop
and
mov
mov
push
ret
cld
mov
pushf
and
aam
cmpsl
pushf
sbb
in
dec
xor
in
out
test
mov
das
xchg
in
pop
fisubs
aam
adc
cmp
dec
push
dec
mov
add
mov
insb
push
sbb
push
andl
push
les
scas
test
shrb
lods
xlat
and
addr16
out
shlb
xor
out
pop
and
ret
fs
repz
sti
outsl
mov
push
aam
push
decb
push
and
aad
mov
cli
jb
cmp
pop
and
sahf
repnz
and
push
arpl
mov
inc
movsb
jbe
mov
cwtl
mov
orl
dec
dec
ds
jmp
call
mov
mov
or
les
add
push
je
imul
popa
jnp
in
ret
fisubl
lock
xlat
test
mov
dec
inc
leave
fs
mov
aad
xlat
dec
and
sub
aad
movsl
scas
xchg
popa
fwait
cli
sbb
sub
sbb
rorl
jno
mov
ds
nop
ret
lret
or
xchg
cmp
dec
lds
mov
adc
mov
out
add
add
cmp
icebp
pop
jbe
sbb
add
aas
int
add
xchg
aad
cs
lods
jne
fsubs
cmp
sub
or
jns
xor
scas
ds
pop
push
or
xor
fs
dec
outsl
push
dec
or
cmp
mov
icebp
mov
clc
lock
out
in
pop
stos
cmpsb
fdiv
sarb
xor
lods
dec
xor
movsb
mov
loopne
pop
xor
fwait
xor
cmp
insb
push
popa
pop
pop
jnp
fwait
and
inc
testl
sub
ds
icebp
pop
jecxz
int3
fcmovne
popf
fistpl
xor
dec
fcompl
jmp
push
sbb
jge
fldl2e
xchg
icebp
out
mov
cmpsb
out
inc
push
push
outsb
mov
out
repz
and
mov
mov
and
push
add
push
outsb
fdivrl
push
scas
mov
and
dec
jno
out
cmpsb
xchg
sarb
loopne
and
push
jnp
dec
push
ret
dec
mov
stc
addr16
nop
mov
enter
pop
sbb
movb
sub
push
out
adc
roll
or
lea
dec
fildl
mov
mov
mov
sbb
add
movsl
lods
push
dec
xor
lcall
inc
push
ret
fsubs
xor
stos
arpl
call
icebp
test
inc
sub
jle
inc
lret
push
or
lods
cmp
in
adc
pushf
jl
lods
ror
inc
out
pop
data16
lods
xor
xlat
pop
adc
jp
int3
inc
dec
push
iret
negl
cmp
push
mov
push
pushf
jg
mov
jl
push
mov
lock
mov
fsubl
out
mov
dec
imul
sbb
out
mov
push
shrl
inc
pop
fdivp
add
mov
add
sub
mov
mov
test
pop
imul
and
cwtl
mov
sbb
jo
xor
inc
loopne
ljmp
mov
push
movl
or
es
sbb
lock
mov
cwtl
ds
jecxz
mov
pop
test
movsb
jnp
fdivrl
sti
jle
push
jo
loope
xlat
fdivs
aad
rol
lods
pop
lds
fsubr
push
xor
std
lret
testl
inc
or
xchg
and
or
insb
add
inc
dec
pop
jge
mov
sbb
xchg
inc
pop
or
les
pop
imul
jbe
xchg
fistl
cmp
imul
mov
test
jmp
mov
test
or
pushf
or
push
cmpb
pop
enter
sbb
aaa
push
into
inc
mov
addr16
dec
xchg
ret
cmpsl
stc
jne
test
movsb
xor
je
xchg
jb
outsl
fnop
pushf
sarl
cmp
icebp
jle
inc
sarb
int
dec
inc
pop
cmp
push
lcall
fcom
sarb
fnstcw
inc
add
or
in
ret
pop
mov
mov
test
inc
cmpsb
lds
inc
dec
dec
int
jno
fsubr
add
daa
gs
cld
and
neg
xchg
and
xchg
inc
xor
mov
and
sbb
inc
insb
popf
mov
and
lods
dec
movsl
mov
xchg
push
call
out
push
adc
sahf
adc
cmp
addr16
xchg
xor
inc
hlt
push
sahf
lcall
outsb
sbb
cmp
mov
cmp
dec
pop
iret
jmp
daa
shlb
push
and
adc
jle
pop
cld
or
adc
sub
cmpsl
loop
pop
pop
adc
scas
dec
in
pop
ja
jbe
xorl
out
lods
add
imul
fcmovb
cld
cmp
call
jmp
mov
xchg
jbe
sbb
add
dec
inc
insb
xor
rclb
push
dec
xor
sub
push
mov
call
mov
push
pop
xor
sub
pop
sti
stos
jmp
scas
pop
push
jl
lret
ret
fwait
inc
movsb
in
and
fucomip
mov
sbb
push
push
sbb
loopne
dec
inc
push
gs
inc
scas
xor
adc
data16
cld
jo
pop
ss
xchg
jae
das
rorl
ds
xchg
jle
mov
and
idiv
xchg
push
xchg
jg
pop
fnclex
mov
aad
add
aam
test
pushf
dec
aad
sub
inc
psubsw
nop
cmpsb
mov
inc
incb
mov
or
cmc
sub
push
stc
sub
jle
daa
mov
sub
or
dec
sub
stc
sahf
xlat
inc
lods
cltd
xlat
stos
lock
push
pop
sbb
and
jp
adc
je
icebp
and
mov
sub
int
add
sbb
daa
jg
jno
sub
hlt
aam
cli
push
dec
cmp
xor
mov
lret
push
lock
xchg
cmc
js
fildll
mov
jl
mov
outsb
call
xchg
sbb
clc
jg
dec
imul
or
push
scas
push
lock
inc
fisttpl
jae
mov
mov
push
adc
mov
sub
or
dec
js
cmp
mov
mov
push
popf
cmp
ss
inc
out
cmpsl
xchg
push
push
into
adc
addr16
sbb
addr16
imul
mov
adc
fldenv
push
add
xchg
shrb
push
or
repz
mov
adc
inc
xchg
sbb
test
jno
xchg
les
dec
imul
stc
or
inc
dec
mov
jecxz
and
adc
add
mov
fisttps
adc
std
push
aam
push
ror
gs
imul
mov
push
or
rcrb
pop
popa
and
std
into
fstpl
clc
inc
jns
lret
mov
sti
cmc
movsl
clc
push
mov
loop
fisubrl
test
jmp
fs
and
in
push
shlb
adc
xchg
imul
bound
dec
mov
sbb
hlt
inc
cmp
movsl
xor
pop
sub
push
push
loopne
mov
sbb
imul
xchg
cmpl
ret
testl
lcall
rcrb
push
fsubrl
xchg
jge
mov
sub
xor
push
in
notb
roll
push
imul
scas
cmpsl
inc
loopne
xor
sbb
fiaddl
xchg
and
inc
xchg
rclb
inc
addb
rcrl
out
popa
sahf
aam
adc
out
leave
xchg
inc
popf
sub
xchg
leave
lcall
into
leave
hlt
adc
int
sub
test
jb
imul
mov
or
dec
pop
fnstenv
dec
mov
fisttps
sbb
pop
fcomps
and
xchg
pop
push
test
add
dec
sub
xchg
xor
into
lods
and
loopne
fwait
cmp
scas
mov
pop
popa
xchg
mov
pop
mov
mov
sahf
daa
jl
movsb
and
mov
push
cmp
xor
dec
decb
mov
lods
sub
xchg
insl
and
cwtl
addb
js
insl
sub
or
sbb
mov
sbb
xchg
cmp
inc
lock
cwtl
lods
lods
test
jmp
lret
flds
mov
mov
push
test
into
xlat
xchg
mov
mov
sub
xchg
in
xlat
lods
das
cmp
sbb
test
push
dec
mov
test
cmp
inc
test
cli
sbb
fdivrl
inc
mov
sar
or
sahf
cwtl
es
dec
xor
inc
xor
mov
push
dec
stc
xor
add
leave
popa
jb
cmp
lods
lds
js
mov
mov
test
push
int
xchg
and
cmp
fldl
xor
insl
pop
sbbb
mov
push
movsb
dec
xor
ds
rcll
aam
es
insb
out
add
jp
test
icebp
sbb
daa
fistl
loopne
cmp
es
das
jo
leave
or
insl
lret
jne
dec
idivb
ljmp
mov
adc
jne
push
pop
jo
stc
jmp
xchg
fistps
sub
xlat
sbb
xchg
sub
inc
lcall
inc
inc
dec
cmp
adc
dec
inc
insb
js
lock
inc
or
mov
clc
fs
adc
add
sub
inc
repz
incl
in
add
dec
jge
add
mov
xlat
sub
rcrl
push
mov
adc
dec
pop
rclb
jg
imul
shr
xor
mov
lods
imul
jb
sbb
movsl
and
jns
out
sub
xor
xchg
xlat
inc
rorb
jmp
sbb
or
xchg
sub
test
adc
jg
out
repz
cmpsl
ret
imul
jecxz
lcall
cltd
adc
or
jp
scas
or
test
mov
push
or
xor
cld
int
movsl
test
mov
add
sub
stos
dec
mov
cmp
push
xchg
and
adc
xchg
icebp
iret
sub
jmp
jg
sbb
xor
je
test
jmp
cmp
or
js
iret
test
jb
lock
fcoms
leave
lock
lea
pop
movsb
dec
push
movsb
add
jmp
in
inc
sbb
imul
mov
sub
jecxz
and
mov
jecxz
popa
lret
dec
jbe
lock
shll
xor
inc
cld
push
stc
and
div
sub
inc
or
xchg
xor
sahf
addb
inc
gs
jecxz
leave
xchg
movsb
and
mov
gs
roll
movsl
rorb
test
lods
imul
inc
xorb
inc
enter
addb
mov
sbb
jns
stos
push
mov
mov
push
enter
lock
aad
test
push
push
or
pop
imul
das
imull
in
push
sub
sar
xchg
pop
nop
lea
call
arpl
mov
cmc
cmp
sbb
xor
xchg
add
js
lret
lea
jns
inc
xchg
and
hlt
lds
lret
dec
mov
lock
movsb
jmp
inc
mov
sti
xor
adc
dec
pop
jmp
in
into
enter
lea
stc
insl
cmpsb
push
pop
in
stos
inc
pop
sbb
mov
and
popa
popf
xchg
in
fildl
ss
not
and
jg
cmp
dec
fisubrs
leave
jge
mov
add
lret
jno
out
inc
sub
aad
lock
sub
popa
xchg
mov
push
mov
sbb
add
dec
iret
int
mov
inc
cltd
lcall
push
xchg
mov
mov
jbe
mov
in
call
xchg
loop
jo
fisttps
out
test
add
or
and
test
push
mov
cwtl
jb
fsubr
popf
div
sub
cmpsb
add
in
push
xorb
out
hlt
and
push
rcrl
pop
jmp
mov
scas
cmp
xchg
or
or
jmp
push
add
xor
jle
cmp
inc
adc
push
sbb
sti
push
das
outsb
out
xor
ljmp
mov
lods
cld
jb
and
movsb
cltd
sub
xorb
mov
and
jns
inc
sub
jp
stos
dec
leave
mov
out
push
sub
mov
ja
bound
xchg
or
insb
aam
or
xor
mov
mov
outsb
push
xor
pop
inc
subl
out
jecxz
cld
in
cld
xor
data16
lods
pop
inc
and
pop
push
sub
lock
cmpsb
fldlg2
cld
or
jp
dec
movsl
jl
out
mov
jmp
mov
shr
cmpb
or
adc
cmp
xchg
xor
aad
ss
aam
in
inc
pop
sub
fisubrs
lea
lds
std
ficoml
repz
repz
jo
idivb
jae
pushf
adc
pushf
fisubs
pushf
out
cwtl
fld1
mov
scas
and
rolb
inc
les
loope
clc
push
xor
dec
sahf
jne
mov
jne
mov
jne
mov
jae
lret
dec
stc
repz
ja
repz
jo
repz
jo
lock
xchg
or
icebp
ret
icebp
xchg
lock
mov
addr16
sahf
loope
mov
xchg
into
js
and
js
and
cmp
push
cmp
rcrl
movsl
imul
loope
dec
xchg
xchg
add
push
imul
xchg
adc
repz
inc
push
add
es
imul
jp
push
fucomp
addr16
adc
fwait
push
push
cld
sbb
repnz
repnz
repnz
mov
or
mov
cmpsb
jae
cltd
push
fcomi
mov
jg
jo
jg
jo
dec
popf
pop
lock
jno
aaa
shrl
sbb
sub
test
and
pushf
arpl
out
arpl
pop
fcomip
dec
cmp
decl
clc
repz
gs
jo
lret
into
lret
lret
sti
ficoml
jge
lds
test
leave
add
adc
pusha
imul
jb
jmp
sahf
inc
out
inc
adc
jno
xchg
imul
inc
mov
pop
iret
fldcw
push
xchg
jb
imul
cmc
test
push
rclb
mov
bound
mov
aas
push
out
fld
dec
or
pop
fildl
add
iret
jmp
mov
mov
mov
lods
fsubrl
adc
cmp
and
insb
pushl
lods
leave
inc
sarb
test
push
sbb
sub
inc
hlt
mov
push
pop
push
lock
cltd
rol
outsl
nop
scas
mov
dec
jne
ds
xchg
xor
cmpsb
sub
ret
pop
pushf
sbb
das
and
int
sub
mov
jmp
out
cmc
push
mov
mov
ret
or
insb
cmc
leave
popf
fldcw
mov
test
and
cmp
mov
out
and
ret
jg
dec
lds
xor
dec
fnstcw
push
mov
lods
sub
ficompl
push
cli
dec
pop
and
in
aam
jns
inc
dec
cld
jge
lcall
pop
mov
scas
push
vpminub
push
notl
fyl2x
ja
loop
inc
xchg
mov
es
ljmp
mov
dec
mov
ds
mov
sahf
dec
cmpsb
insl
stos
aam
mov
js
cmp
pop
je
int
imul
fidivs
or
jb
aaa
std
dec
sti
mov
daa
aad
cmc
push
and
adc
push
outsb
mov
sbb
push
dec
out
repnz
cli
mov
mov
je
xchg
jp
es
pop
icebp
add
pushf
xor
in
mov
pop
or
mov
mov
xchg
nop
push
mov
jbe
stos
inc
je
out
push
dec
pop
popa
data16
lds
sbb
push
fidivl
fsubrs
xchg
inc
negb
sbb
mov
dec
dec
or
mov
dec
push
sahf
test
cmc
mov
iret
dec
push
adc
in
push
inc
jle
imul
out
cltd
je
rcrb
rorb
xor
pop
js
stos
mov
dec
adc
pop
xchg
sbb
xchg
popf
and
test
push
pushf
es
inc
lock
out
xlat
push
pop
test
shll
int
addr16
add
enter
insb
pop
test
adc
aad
jbe
xlat
into
mov
popa
xchg
sbb
dec
icebp
inc
dec
mov
pop
scas
popf
xchg
adc
in
adc
outsb
inc
cmp
in
inc
inc
pop
cwtl
mov
pop
lea
in
push
movsl
add
inc
xor
jmp
push
dec
add
push
shll
jno
gs
repnz
into
add
cmc
xor
leave
mov
icebp
data16
sbb
sub
jo
inc
sbb
lock
mov
jbe
imul
mov
jb
mov
mov
dec
jns
push
dec
cmp
divb
push
arpl
mov
add
jns
mov
xchg
popf
insl
mov
sbb
ffreep
push
faddl
and
mov
pop
mov
mov
lret
popf
xor
xor
insb
pop
fs
xchg
sub
xor
dec
fs
push
ror
in
push
dec
lds
inc
xchg
outsb
pop
inc
jl
popa
adc
push
lret
jb
jno
inc
jns
and
sub
sbb
imul
popa
push
ja
fs
ret
push
js
out
push
sub
push
xchg
adc
popa
pop
pop
pop
cs
push
out
js
add
movsb
jo
lock
stos
inc
rol
test
movsl
jne
adcb
pop
nop
mov
sub
loopne
jae
cmp
jo
pushf
pushf
add
add
or
jmp
adc
inc
rep
mov
bnd
mov
jnp
and
pop
inc
xchg
rorl
fstps
fs
and
mov
push
push
dec
loope
hlt
ret
subl
adc
les
leave
and
xchg
cmp
int
aad
fsubrp
or
imul
loop
aad
add
imul
lock
and
js
icebp
push
stc
mov
push
ja
and
inc
jg
imul
or
sbb
jbe
sub
mov
int
pop
inc
sbb
fucomi
in
shll
jmp
jecxz
out
jns
mov
mov
into
hlt
mov
add
add
mov
ret
mov
nop
and
cmp
insb
popf
aad
pusha
popf
xchg
sbb
xor
inc
fldl
mov
cltd
push
sbb
fisttpll
or
pop
or
inc
mov
dec
mov
xor
es
adc
and
lds
mov
dec
cmpl
jne
loop
pandn
xor
test
xchg
shlb
fisubs
add
popa
xchg
push
addr16
or
ja
out
xchg
add
mov
push
jbe
xor
gs
xchg
out
adc
shrl
push
mov
cmp
lock
sbb
ret
ret
aad
adc
inc
imul
icebp
sbb
cld
fs
lea
in
mov
mov
inc
lahf
out
repnz
fmul
enter
cmp
cld
movsb
sub
js
or
testl
and
pushf
jo
add
mov
dec
repnz
sub
ss
pusha
push
cmpl
add
sbb
xor
orb
rcrb
icebp
jo
jg
cmp
pop
nop
mov
in
mov
jge
rorb
dec
cld
lock
rcl
in
add
jbe
jno
movb
pop
mov
lock
mov
dec
lods
xchg
icebp
jp
lods
hlt
push
adc
fiaddl
add
ljmp
cld
ljmp
negb
fldenv
sahf
and
out
imul
and
dec
inc
gs
push
jae
cld
add
icebp
scas
xchg
jb
imul
imul
je
cld
outsl
lds
mov
fldl
hlt
push
mov
pushf
imul
mov
je
insb
cs
pop
dec
xchg
imul
add
addr16
fbstp
sbb
xchg
cmp
xchg
cwtl
xor
lds
sar
mov
rorb
and
lock
dec
scas
jmp
push
inc
ljmp
stos
loopne
das
inc
mov
dec
nop
mov
cmpsb
fucomi
orb
stos
inc
cmpsl
cmc
ds
and
dec
imul
rorb
adc
or
pop
cld
insb
call
xchg
fmul
orb
lret
jle
mov
cmpsb
clc
mov
xor
femms
lahf
adc
test
std
jnp
cwtl
cli
in
aam
jb
pop
sub
adc
ret
mov
mov
movsl
test
aaa
jns
jb
fsubs
mov
es
test
leave
sbb
adc
xchg
push
add
popf
je
stos
jge
jle
inc
sub
loop
inc
push
imul
in
in
aam
fistpl
sbb
mov
out
rorl
pop
das
inc
or
ljmp
or
pop
lock
pop
cmc
shrb
lret
in
fiadds
lahf
jnp
jle
add
enter
mov
fwait
sbb
inc
add
movsl
inc
ret
cmp
rcr
mov
xor
lds
mov
mov
dec
mov
mov
int
testl
cmpsb
mov
xor
imull
mov
dec
mov
mov
dec
mov
inc
enter
mov
pop
inc
mov
mov
in
push
adc
mov
mov
or
jle
aad
lea
dec
loopne
movsl
adc
inc
aam
cmp
inc
add
pop
cmp
fwait
push
sti
push
and
mov
mov
cltd
push
sub
dec
popa
out
lods
xor
mov
push
ret
push
pushf
mov
loop
add
insl
mov
ret
xchg
mov
lock
mov
mov
lods
sub
cmp
sbb
mov
sbb
push
icebp
mov
pop
popa
inc
ret
xchg
add
inc
popa
mov
outsl
xchg
push
mov
inc
xor
mov
xchg
xchg
mov
dec
xorb
hlt
push
and
outsb
push
repnz
jno
ja
sbbl
sbb
lea
out
and
xchg
mov
loope
sbb
jae
sbb
pop
js
outsb
stc
push
mov
mov
lcall
out
xchg
adcb
adc
cmp
call
cmp
push
adcb
jmp
adc
out
cmpsl
jno
cmp
inc
bound
jb
test
outsl
lcall
rolb
or
inc
shlb
inc
sar
jnp
cltd
jmp
xlat
adc
mov
repz
sub
jo
sahf
or
cmc
mov
ja
mov
addb
scas
je
aam
jae
add
test
dec
lods
fistpll
fidivl
adc
sbb
pop
lret
or
cmp
clc
outsl
sub
out
imull
mov
mov
jb
in
rcl
cld
inc
sub
or
pop
or
sbb
cmp
sbb
leave
mov
push
pop
xor
sbb
jecxz
dec
and
addl
rep
fwait
dec
xchg
andl
add
std
cmp
add
stc
outsb
pop
cmp
jmp
cmp
or
cmp
mov
mov
push
loopne
sub
inc
jl
and
or
cmp
push
mov
xor
and
dec
sbb
divb
mov
popa
inc
cmpsb
test
icebp
in
jg
ss
mov
xchg
inc
aad
dec
inc
sub
or
add
cmpb
stos
sub
push
xchg
je
inc
inc
and
add
jbe
ret
mov
dec
jae
and
mov
jbe
mov
std
jg
imul
ja
repz
adc
cmp
xchg
jns
jmp
dec
push
jns
lock
ds
or
enter
push
push
push
in
add
push
pop
dec
jle
xor
dec
out
dec
lahf
cwtl
out
incb
xchg
cwtl
push
jge
sbb
cwtl
add
pop
xlat
ss
outsl
repnz
inc
test
jmp
xor
or
add
push
dec
shrb
and
cwtl
inc
ret
mov
out
jl
pusha
fnstcw
xor
dec
cmp
and
cs
mov
mov
es
lods
mov
sbb
pop
fcmovbe
stc
pop
test
pop
mov
inc
pop
ljmp
push
push
in
gs
sub
pusha
clc
xchg
sub
mov
adc
push
add
cmpsb
bound
into
pop
scas
or
leave
in
xchg
test
jne
jecxz
movsl
jns
xchg
cmp
fs
imul
in
mov
xchg
adc
cmovb
dec
repnz
mov
int3
out
jecxz
repz
sub
sbb
pop
push
sbb
out
dec
and
stos
sub
or
or
sub
shrl
or
xor
lcall
call
and
dec
xor
pusha
xor
and
xor
cmp
lea
sti
ds
mov
xchg
mov
xchg
or
insb
popa
xchg
sbb
add
fs
aaa
jmp
lcall
insl
stc
lret
outsb
pop
std
inc
or
ret
dec
fcomp
push
fldcw
or
add
adc
jb
adc
mov
scas
xchg
and
push
jae
in
fmuls
daa
push
add
push
fimuls
in
push
lods
jb
icebp
leave
pop
iret
leave
leave
mov
sub
jnp
inc
mov
push
std
push
jbe
loopne
mov
mov
or
mov
pop
test
adc
lods
loope
test
movl
mov
sub
test
dec
xchg
mov
sub
jae
sbb
lods
imul
mov
pop
push
cs
xor
pop
cltd
fisubrs
cmp
xor
adc
and
dec
popf
jp
test
cmc
jo
gs
push
xchg
mov
pop
adc
in
je
sbb
lods
mov
repz
sbb
mov
das
push
test
subl
sub
frstor
and
out
int
push
and
fcmovbe
push
roll
pop
jnp
mov
cmc
mov
aad
adc
aad
mov
outsb
push
mov
push
dec
sbbb
ret
cmpsb
sarl
push
loopne
lcall
lret
xor
test
lret
mov
fnstcw
sbb
pop
mov
popf
or
int
sub
iret
or
out
imul
por
dec
inc
cltd
subb
js
mov
jno
cmp
inc
loopne
imul
cmp
cmp
dec
mov
cmp
sahf
mul
or
push
test
xor
aas
mov
or
jne
mov
jnp
inc
call
adc
mov
push
dec
faddl
and
inc
and
jo
mov
lods
pop
jmp
fxch
push
hlt
push
push
jae
mov
ret
std
insl
mov
or
aad
fs
mov
arpl
push
and
ret
xchg
ret
out
aam
daa
out
pop
mov
outsb
mov
cmp
aad
clc
gs
lods
in
sarl
jns
mov
dec
push
or
lret
inc
adc
sub
mov
add
cltd
aad
jb
mov
push
push
repnz
data16
sub
dec
scas
mov
aad
scas
cmp
mov
scas
push
push
sbb
push
mov
rcrl
rorl
push
cmc
cltd
add
sub
vmovdqu
mov
push
and
in
int3
push
fldcw
jle
push
es
repz
cmc
adc
adc
or
push
pop
push
pushf
add
test
lcall
push
sub
mov
pusha
mov
pop
je
jmp
sbb
mov
cld
xchg
pushf
loop
mov
rcrb
and
mov
dec
cmp
int
sub
mov
enter
cld
fs
mov
mov
test
adc
fmul
push
pop
add
dec
inc
sub
cltd
fstps
ja
test
iret
adc
in
and
mov
cmpb
repz
add
adc
leave
lea
mov
lret
and
fistpll
or
stos
dec
data16
xor
lock
loop
dec
mov
rolb
cmc
fcoms
sub
in
or
jno
std
lds
div
mov
jo
lcall
xchg
inc
mov
cmp
repz
xchg
or
xlat
cs
pop
jne
mov
cs
and
lret
and
movsl
pushf
cmpsl
fcmovnbe
in
and
add
lods
or
pop
inc
daa
or
xchg
ret
xchg
out
inc
mov
jae
movsl
push
inc
inc
call
jae
fldl
jmp
mov
lcall
inc
pusha
in
jp
xorb
push
rcll
test
cmpl
mov
movsb
into
popf
xchg
cmc
js
pop
jb
scas
sbb
xchg
dec
leave
shrb
cmp
add
mov
dec
cmp
movb
add
aad
popa
and
adc
pop
mov
pop
cmp
jge
nop
xchg
xor
aaa
add
mov
out
inc
xor
popa
out
jb
add
shll
xchg
scas
mov
adc
gs
mov
decl
inc
arpl
ret
repnz
pshufw
xchg
mov
xchg
out
mov
dec
fistpl
sbb
cs
jle
and
and
fcoms
mov
mov
jo
jecxz
test
je
fistps
repnz
mov
push
mov
xor
sub
popf
sub
jns
inc
lret
xchg
jecxz
int3
push
roll
dec
jl
lods
leave
dec
jnp
dec
xor
std
movl
mov
xor
in
cmp
loop
push
aaa
adc
testl
ficompl
in
inc
daa
packsswb
cmpsl
mov
and
jo
jmp
aam
mov
cld
sbb
inc
push
sbb
lods
roll
jo
stc
pop
stos
jmp
xchg
popf
call
out
jmp
orl
into
xor
push
cmpsl
inc
pop
sbb
xor
adcl
dec
fstpt
inc
push
mov
jns
in
ss
xor
cmpsl
push
lahf
sahf
pop
mov
test
pop
dec
ds
test
push
stos
filds
orb
jb
sub
shlb
in
and
dec
mov
stos
push
xor
lret
jl
or
xchg
sti
fidivrl
in
sbb
imulb
dec
xor
xchg
cltd
and
xlat
sub
and
ds
mov
pop
inc
jg
lret
imul
int
jo
imul
sbb
xor
jmp
push
loope
lret
imul
lock
push
imull
outsl
jbe
or
inc
cmpsb
inc
mov
mov
xor
inc
aad
inc
out
sub
sbb
int3
dec
cmpsb
xor
or
imul
mov
sbb
lret
mov
mov
iret
fsubr
mov
mov
sahf
mov
insb
enter
fimull
je
lock
and
sbb
cmpl
filds
inc
xchg
jo
xor
mov
iret
ret
dec
dec
cmp
cmpsl
add
fidivl
pop
push
mov
scas
xchg
jmp
mov
in
imul
int
push
insb
gs
sbb
and
outsb
lock
imul
movsl
rorl
pop
xchg
jecxz
xchg
jl
repz
sbb
addr16
dec
pop
add
sbb
enter
mov
pop
aas
insl
test
dec
pop
push
fdivrl
push
xor
popa
push
and
push
dec
aaa
cltd
cmpsl
lods
int3
jns
xchg
fiadds
add
int3
jnp
aaa
cmp
mov
or
sub
mov
es
xchg
fcoml
mov
movsl
xchg
mov
leave
mov
lea
ret
and
mov
push
icebp
or
hlt
out
orl
ljmp
hlt
xchg
outsb
das
orl
or
xchg
inc
sbb
and
data16
jno
jmp
mov
notl
push
or
stos
mov
and
or
adc
add
mov
mov
iret
mov
test
fisubl
lea
mov
mov
aas
pop
mov
jmp
aaa
mov
sbb
int
lret
pop
jge
stos
add
lret
fs
arpl
cmpsl
cmc
mov
inc
enter
xchg
enter
clc
xchg
xchg
arpl
add
mov
shl
rcl
sub
add
movsb
inc
add
dec
cmp
inc
sbb
shll
loop
sbb
movsl
add
push
xor
cmp
jge
decl
arpl
or
cltd
or
testb
mov
mov
cli
push
push
pop
mov
inc
jb
cld
fistl
jge
dec
popa
sub
rorl
je
and
scas
dec
pop
mov
cmp
test
lds
scas
push
cmc
xor
lcall
scas
repz
jmp
fistpl
sbb
mov
mov
ret
inc
ss
cmp
call
fld
js
jns
xchg
jmp
adc
inc
fs
cmp
repz
pop
cmp
sahf
dec
loop
ja
fnstcw
nop
insb
or
push
gs
out
es
mov
sbb
cmpsb
mov
mov
dec
repnz
add
ds
push
jle
sbb
leave
mov
lods
test
xchg
int
aas
push
scas
pop
or
frstor
xlat
lret
les
js
mov
sahf
test
xchg
add
es
lret
ljmp
push
jecxz
cmp
jle
pop
fs
sbb
add
cmp
xor
lret
fwait
stos
stos
movsb
jmp
repnz
iret
in
or
sbb
in
nop
das
inc
push
xchg
pop
fcompl
jecxz
pop
push
jmp
rolb
int3
jmp
sub
in
hlt
jae
movsb
cmc
push
inc
mov
jne
inc
testb
or
fsts
lock
pop
mov
xchg
sahf
lds
jg
movsl
xchg
cmc
mov
stc
into
sahf
and
sbb
mov
lock
push
mov
fimuls
xchg
pop
push
jno,pt
jl
fwait
jl
idivl
andb
lret
or
lahf
jb
mov
ljmp
sbb
sub
pop
icebp
mov
or
jecxz
and
sbb
repnz
les
or
add
inc
aad
rep
int
pop
rcll
inc
push
je
xor
cmp
sbbl
inc
insb
lods
jb
fxch
xchg
hlt
out
incl
lea
dec
jg
xor
les
sub
sti
mov
push
loop
xor
loope
cmp
std
iret
and
enter
stos
inc
cli
jo
jnp
cmc
les
fnstsw
inc
cmp
xchg
testb
or
and
dec
cltd
add
les
xor
mov
xchg
into
mov
jmp
call
enter
add
add
mov
aaa
hlt
aas
push
adc
call
sbb
jle
cmp
or
lret
mov
mov
push
and
mov
mov
sub
cli
mov
mov
sbb
cld
in
mov
in
jno
cwtl
xor
adc
in
mov
mov
lods
or
out
decl
leave
outsl
sub
lret
ret
cmp
leave
cld
lahf
into
mov
mov
sub
dec
sti
jmp
cmp
jl
or
and
sahf
test
std
in
sti
ficoml
int3
mov
mov
cmp
xchg
cmc
cmpsl
mov
stos
mov
jl
xchg
dec
leave
aam
pop
push
neg
xorb
xchg
fimull
ret
mov
jne
inc
shl
mov
cmp
shll
fdivrl
sbbb
xor
xchg
and
out
xchg
mov
sub
push
jno
ret
push
cmp
pop
inc
inc
pusha
push
sarl
cmp
mov
dec
jecxz
jl
mov
std
nop
ret
in
sbb
outsb
in
mov
int3
inc
repnz
or
mull
pushf
cltd
inc
popa
mov
sbbb
sbb
dec
pop
movsb
les
test
lds
sbb
jmp
daa
enter
mov
mov
xchg
jb
ja
xchg
jno
cltd
jb
cmpsb
or
lds
push
and
push
fidivrs
das
fwait
sub
rorl
or
mov
leave
inc
outsl
jo
int
mov
jns
xorb
aaa
add
popl
jl
ficoms
leave
mov
pop
inc
scas
lds
sti
les
cmp
mov
fdivrl
pop
sbb
test
mov
test
push
adc
cmp
jl
jns
ficoml
push
xchg
pop
mov
and
mov
and
jnp
sub
dec
xor
jne
push
fcomi
or
sbb
cmp
push
sub
xor
push
sbb
fdivl
dec
repz
sub
das
cld
int3
dec
or
inc
sarb
cmpsb
sarl
popl
ja
ljmp
lahf
imul
insb
mov
or
scas
mov
adc
push
fwait
add
in
arpl
mov
add
cmp
arpl
cmpsb
test
cld
add
add
fmull
dec
sub
mov
xchg
inc
pop
lods
push
fcoml
out
push
js
lods
pop
mov
pop
xchg
jecxz
addr16
std
test
dec
aad
jp
mov
ret
cli
or
sub
inc
mov
repz
arpl
aas
dec
orl
dec
fldlg2
cmc
xchg
sub
mov
vphaddwd
and
cltd
notl
and
pop
adc
push
push
jns
out
imul
jecxz
mov
inc
pop
mov
push
fnstcw
aaa
sar
dec
ds
js
and
or
jle
adc
int3
fistpl
aad
idivb
pop
xchg
push
adc
dec
add
jecxz
ss
pop
jae
scas
popa
sarb
jns
in
arpl
aam
or
add
mov
outsl
lock
pop
mov
adc
or
push
lock
les
int3
xlat
repnz
jl
lahf
push
mov
cltd
imul
enter
cmp
cmpsl
lods
push
mov
into
inc
or
fists
leave
test
dec
test
mov
push
xor
sub
pop
push
scas
mov
popf
mov
adc
cli
xor
inc
jecxz
cltd
dec
imul
sbb
pop
gs
rcll
jbe
adcl
imul
sub
xor
ret
out
arpl
pushw
stc
les
adc
jmp
lds
cmp
xchg
lods
sahf
cwtl
aad
cltd
inc
fnstcw
imul
pop
mov
jmp
test
jne
fbld
cli
jno
or
push
cltd
push
mov
adc
jle
imul
call
inc
mov
dec
mov
icebp
popa
xchg
mov
ljmp
jge
xor
scas
std
orb
test
adc
mov
cmpsb
xchg
mov
sbb
shl
xor
mov
in
in
xor
fiadds
cmp
and
je
aad
lret
popw
aam
imul
gs
xchg
scas
stos
xchg
mov
adc
push
xchg
aad
and
xor
pusha
fldlg2
or
std
sbb
mov
leave
ljmp
mov
dec
mov
test
clc
xchg
mov
stos
lret
cmc
ljmp
hlt
push
lds
xchg
jge
mov
push
loope
outsl
push
scas
push
out
mov
jns
or
sub
lods
imul
sbb
ret
dec
bound
test
jl
fstps
jne
xchg
cmpb
in
xchg
icebp
mov
add
in
mov
pop
xor
inc
fistl
xchg
fsubrp
cwtl
sbb
or
fsubrl
sub
ror
in
gs
mov
cmp
or
js
push
xor
daa
cld
cltd
inc
xor
sub
jl
xchg
adc
xchg
popl
dec
sub
jle
push
push
pushf
mov
jno
sbb
xor
sub
push
xchg
xor
jmp
mov
or
mov
pop
mov
shrb
xor
mov
pop
add
aad
popf
aam
sti
enter
pop
mov
sbb
out
fistpl
cmpsb
shlb
adc
inc
jb
pop
repnz
add
fs
outsb
push
push
or
bound
jl
out
add
and
das
leave
int3
push
push
sub
mov
into
sub
dec
mov
fsubs
cmp
xor
xchg
mov
int
and
lock
fcmovnu
mov
nop
dec
jbe
adc
arpl
add
sub
cwtl
mov
mov
and
int
dec
and
jecxz
lcall
test
mov
ficomps
push
lahf
cwtl
loop
push
jle
shrb
daa
inc
jne
nop
and
mov
clc
jne
hlt
test
mov
xchg
mov
fcoml
in
pushf
test
mov
outsb
iret
gs
or
xor
les
into
imul
js
cmp
movsl
jae
jb
into
xlat
xchg
mov
adc
xchg
mov
sub
cs
jl
out
mov
and
movsb
or
callw
fdivr
les
adc
add
icebp
xchg
mov
pop
roll
leave
popa
mov
sarb
and
out
adc
push
sub
data16
fisttps
mov
cmc
test
std
pop
cmp
pop
jno
xchg
fldcw
add
orl
sbb
movsb
pop
shlb
sbb
orb
lcall
jmp
lock
ret
sbb
adc
outsb
cwtl
mov
sub
xchg
scas
pop
dec
mov
pop
cmp
lahf
xchg
jno
test
flds
sahf
outsb
push
cmp
sub
loope
sub
js
outsb
xchg
loopne
lahf
insl
and
ficomps
movsl
jo
inc
cmp
push
into
mov
rclb
add
dec
add
and
dec
jae
mov
mov
test
in
jg
je
ja
add
repz
addr16
repz
cmpb
lock
bound
mov
cltd
and
mov
sbb
jmp
mov
cli
and
inc
mov
xor
or
adc
dec
mov
daa
inc
xor
popf
jae
fmulp
jmp
icebp
push
cmp
push
or
dec
jecxz
int
mov
test
fs
int
mov
rcll
fwait
sar
rcrl
mov
pop
mov
push
fldl
adc
push
psrad
cmpsb
mov
and
jnp
push
mov
pushf
ret
dec
inc
inc
cmp
xor
cmp
test
sbb
cli
fisubs
enter
jno
fidivl
rol
popa
or
pop
orl
adc
xchg
xchg
or
icebp
insl
pop
pop
orb
pusha
mov
ret
jnp
sbbl
ljmp
pop
fiaddl
cmp
sub
nop
dec
inc
jle
push
dec
mov
cltd
add
xor
movsb
sbb
mov
popf
xchg
cmp
xor
fsubl
je
push
xchg
iret
and
push
dec
dec
jb
addl
test
inc
imul
push
out
outsl
fldenv
bound
insl
or
popf
cmp
inc
xlat
sub
cld
xchg
mov
jno
dec
sahf
loop
mov
movsb
add
pop
es
iret
pop
adc
shrb
arpl
dec
dec
sarb
inc
negb
mov
dec
orl
cmpsb
fldl
inc
adc
movsl
dec
stos
jge
pop
jo
sbb
jmp
pop
mov
push
inc
xchg
and
xchg
repnz
dec
xchg
xchg
mov
xor
jmp
aam
iret
pop
pop
shrl
mov
mov
outsb
notb
adc
orl
in
mov
hlt
shll
lret
imul
std
mov
pusha
jno
mov
xor
dec
stc
jge
mov
sub
dec
or
pop
mov
ret
cmp
jne
lock
sub
xchg
jmp
dec
hlt
xchg
jbe
into
cmpl
jbe
ss
es
imul
shl
inc
test
xchg
and
adc
adc
or
push
mov
jmp
dec
shlb
xchg
push
cmp
mov
inc
pop
movsb
imul
sbb
in
jmp
stos
jbe
hlt
pop
test
add
leave
cmc
fcmovnu
push
xchg
idiv
fsubl
fwait
and
int
insl
adc
push
cmp
mov
dec
and
adc
mov
and
push
aaa
mov
sub
orb
rol
fwait
jp
pop
mov
rcll
mov
ret
push
ds
mov
clc
sub
lret
in
ret
cs
in
je
sub
push
and
push
fcmovnu
js
cmp
add
fimull
mov
into
test
mov
xor
jp
push
imul
jecxz
bound
xchg
cmp
stc
xchg
and
in
mov
xchg
mov
cmp
hlt
jmp
cltd
lret
and
icebp
mov
jmp
push
mov
jns
sub
imul
fwait
push
lahf
shll
aad
inc
rclb
rcrb
popa
adc
mov
xor
push
stos
test
sub
lret
jb
push
leave
inc
es
sub
fucomip
je
call
mov
add
push
dec
xor
add
hlt
add
pop
cmp
repz
inc
jae
jae
inc
fadds
loopew
popa
ds
cli
inc
ds
lods
pop
xor
inc
xchg
jae
cwtl
into
jecxz
mov
sub
jno
aas
mov
repz
sub
into
js
push
popf
lret
test
dec
sbbb
icebp
testl
dec
jo
scas
jo
outsb
jns
pop
addr16
mov
inc
aad
fs
jno
push
and
or
jmp
cwtl
jmp
mov
jno
or
popf
mov
loop
mov
mov
add
mov
imul
pop
and
fisubs
inc
into
scas
add
mov
daa
ss
mov
insl
and
jmp
jae
push
jge
push
popa
mov
dec
outsl
mov
pop
jbe
cltd
mov
fiadds
in
popa
inc
daa
dec
les
outsb
add
hlt
pop
mov
sbb
sub
rcrb
shll
mov
cli
push
mov
cwtl
push
xchg
lods
pop
aaa
call
and
fiaddl
or
adc
push
and
mov
mov
out
in
adc
inc
sub
mov
adc
or
pop
push
xor
gs
cltd
jb
sahf
jb
adc
inc
push
hlt
mov
fstl
into
aaa
mov
js
push
and
pop
adc
xchg
leave
stos
fldcw
dec
test
sbb
dec
int
insl
and
sub
loop
dec
sub
lds
add
in
stos
mov
jne
push
cltd
ret
add
push
xor
sbb
push
mov
xor
dec
dec
addr16
paddq
pop
jle
cmp
mov
push
inc
xchg
icebp
or
xor
adc
or
cwtl
out
and
notl
ret
xchg
cmp
jmp
jnp
mov
imul
inc
sub
divb
imul
xlat
out
lods
loop
inc
mov
lcall
repz
jno
add
mov
fisubs
mov
sbb
repnz
bound
mov
mov
rcl
sbb
sub
iret
ret
cs
mov
cmp
push
insl
imul
aas
xchg
pop
jmp
adc
fnstenv
pop
nop
dec
imul
pop
imul
sahf
jp
jle
adc
movsb
daa
xchg
inc
xchg
int
sbb
push
add
pop
mov
mov
sub
mov
xor
add
repnz
std
loope
or
in
mov
ret
mov
fidivrs
pusha
sub
inc
mov
sub
inc
addr16
lret
sbb
jae
shll
inc
and
ret
inc
mov
or
sbb
repz
pushl
js
push
lods
mov
jne
add
xchg
cli
nop
adc
ret
ds
mov
sahf
idivl
adc
imul
mov
aaa
and
xchg
adc
pusha
mov
cli
imul
add
jb
gs
test
mov
xchg
fistpl
sbb
jae
xorl
push
pushf
movsb
jo
jae
stos
push
or
add
mov
pop
je
addl
mov
push
mov
or
mov
hlt
add
iret
in
and
pop
sub
in
xchg
and
ret
fisubl
mov
fstpl
jae
scas
push
push
dec
or
lcall
pop
cltd
out
ja
sub
cmpsl
out
cmp
pushf
jbe
sbb
sub
xchg
popa
pop
pop
arpl
mov
pushf
pop
incb
into
movsl
lret
xchg
push
push
ds
stos
sbb
mov
in
xor
jge
or
xor
mov
fisttps
adc
jnp
push
pop
rcl
pusha
ret
lret
sti
and
decb
mov
pusha
cmpsb
mov
stc
dec
shlb
sub
sbb
add
fwait
xor
imul
jmp
cmp
cmp
push
data16
lret
movsb
jns
mov
out
jb
xchg
xor
inc
je
jmp
mov
mov
mov
mov
daa
enter
mov
adc
cmp
mov
xor
test
ss
jo
xchg
lds
sub
sbb
jae
push
shlb
lods
mov
icebp
and
enter
test
mov
leave
and
mov
inc
popf
push
push
or
test
push
push
or
dec
fistl
fidivl
sti
mov
sbb
jne
sub
push
and
jno
xchg
cmp
mov
nop
int
mov
sbb
lock
shrl
test
test
xchg
loope
or
stos
jge
rorl
dec
stos
bound
mov
add
dec
in
push
pop
xor
idivb
test
cmp
xchg
jge
in
sbb
inc
adc
pop
loopne
inc
mov
jns
test
pop
icebp
xchg
pushf
data16
and
js
add
dec
cmp
sbb
add
std
imul
mov
outsl
mov
imul
or
pop
arpl
dec
xor
into
cmpl
dec
xchg
icebp
mov
in
push
adc
push
push
add
insb
fistl
pop
ret
fs
push
je
leave
adc
cmc
pop
fwait
or
mov
xor
mov
fisttpll
movb
jns
jno
lods
push
mov
mov
fstpt
xor
cmp
jbe
lret
divl
mov
mov
add
fcmovbe
aas
inc
scas
aad
stc
cmp
sub
rol
cmp
or
stc
xchg
les
mov
lret
movsl
test
push
dec
push
insl
shr
push
aas
xor
and
mov
mov
ljmp
leave
outsl
loopne
lcall
push
jmp
push
clc
fsubrs
sub
mov
sbb
or
push
scas
mov
popf
sbb
pop
pusha
xchg
fstpl
xor
mov
and
ljmp
mov
xor
mov
into
inc
push
ds
dec
add
shlb
cmp
fistl
ss
mov
hlt
dec
jp
sbb
pop
cli
ret
xchg
push
jge
cld
clc
aam
fucomi
add
imul
jne
mov
sbb
push
repz
push
dec
jb
lock
int
add
push
lret
inc
rclb
xchg
inc
dec
pop
sub
push
and
sbb
or
xchg
dec
mov
sub
stos
pop
call
or
add
jmp
add
scas
gs
stos
shl
std
stos
mov
jge
lods
sbb
lock
dec
xchg
jecxz
adc
jmp
jp
jle
repnz
out
jno
adc
add
xor
inc
je
jno
cld
in
xchg
jmp
je
jbe
aam
jbe
dec
inc
mov
test
dec
jnp
notl
xchg
dec
test
fiadds
or
mov
pop
or
xchg
or
fadd
cmp
nop
icebp
movsl
cmpsl
ds
push
inc
enter
push
or
out
sub
or
adc
inc
dec
xor
sub
xchg
gs
pushl
dec
cmp
cmp
rcrl
jne
pop
arpl
sub
pop
cwtl
aaa
test
test
pop
orb
dec
ljmp
addl
stos
sub
lock
add
out
mov
mov
ret
aad
out
push
sbb
push
xlat
mov
add
push
andb
xchg
sub
or
mov
cmpsb
push
movl
push
dec
mov
rorb
cmp
push
out
adc
mov
outsb
and
cmpsl
fdivrl
adc
cli
xor
xchg
mov
popf
push
mov
imul
push
mov
inc
add
movsb
int3
dec
jp
xor
mov
mov
or
scas
in
push
adc
push
stos
fists
mov
add
lock
inc
mov
ret
sub
cmp
pop
rclb
inc
push
dec
mov
xchg
insl
pop
lcall
out
sub
mov
dec
inc
xchg
mov
mov
shrb
pop
enter
cmp
cmp
cmp
xchg
add
rcrb
or
call
add
jecxz
loopne
shrb
call
mov
aaa
cmpsl
in
and
jnp
dec
xchg
dec
std
cli
sbbb
outsl
imul
scas
mov
mov
pop
jo
jns
addl
xchg
mov
out
lock
pop
je
shrb
in
lds
dec
inc
call
jnp
negl
jge
cmc
lret
andb
cld
icebp
hlt
shr
shr
fwait
or
das
inc
jno
add
cs
inc
test
adc
out
xchg
pushl
push
mov
and
addr16
jge
xor
jno
pop
push
iret
xor
and
add
jno
lods
mov
xchg
fwait
cs
shll
std
jmp
cld
pop
jg
jecxz
bound
iret
push
rcrb
dec
stos
fiaddl
xchg
jb
jne
lret
andb
adc
sbb
adc
mov
mov
jb
es
push
xchg
aam
test
pop
mov
pop
sbb
pop
clc
or
in
fsubs
fidivrs
jg
les
adc
xor
push
loope
addr16
jle
lods
and
repz
loopne
jae
ret
mov
xor
orb
cmp
add
jl
push
xor
repz
incl
test
push
bound
out
dec
int
jno
jle
pop
test
lret
movsl
int
push
cmp
xor
and
mov
mov
xchg
and
inc
pop
mov
adc
jl
mov
cli
fdivrl
fisttpl
lock
fwait
std
cmp
mov
adc
jbe
mov
push
mov
mov
or
pop
dec
pop
aad
imul
stos
inc
mov
lods
jg
das
arpl
fwait
dec
sbb
jl
mov
in
fcmovne
push
push
inc
ja
xor
pusha
lret
push
jne
addr16
push
int
pop
mov
jns
inc
mov
mov
ljmp
push
push
inc
imul
and
les
and
repz
ja
pop
pop
add
movsb
jge
js
std
and
sub
jle
mov
pop
dec
jg
add
jecxz
mov
daa
jnp
adc
xchg
xchg
push
cwtl
xor
push
mov
fisttpll
jns
and
xchg
mov
outsl
jp
jl
pop
out
and
adc
pop
xchg
pop
pop
jo
add
cmp
mov
mov
loop
xchg
nop
pop
cmp
loope
in
out
mov
push
pop
xchg
je
push
mov
fstps
ljmp
xor
mov
dec
enter
daa
mov
sahf
sbb
mov
dec
rorl
fdivrs
aad
mul
inc
lock
out
or
or
add
xlat
mov
divl
dec
outsb
int3
jb
pop
popa
xchg
push
pop
and
in
or
push
lea
repz
rcrl
or
lcall
pop
pop
mov
jne
fdivs
stc
cmp
in
xchg
pushl
fwait
xchg
sub
mov
ret
sahf
and
testb
mov
mov
jge
xor
fistl
in
stc
inc
sbb
inc
jnp
and
insl
xchg
push
stos
sub
dec
stc
jp
divb
dec
loopne
add
ljmp
adcb
or
add
jb
testb
mov
sbb
mov
jae
leave
sub
das
outsl
pop
ret
xor
xchg
sbb
cmpsb
or
enter
mov
xor
mov
mov
and
mov
cmp
pop
jl
cmp
mov
inc
jne
fimuls
aam
push
inc
stos
adc
hlt
dec
pop
dec
mov
je
shll
xor
dec
sub
shll
dec
xor
mov
push
inc
fisubrl
bsf
insl
cmpsb
jge
ror
adc
repz
cmp
pop
sub
add
dec
push
sbb
loop
popa
icebp
cmp
sub
mov
cmp
cmp
ficomps
out
push
int
mov
ds
mov
cmp
inc
push
and
jnp,pt
aas
dec
mov
leave
xor
mov
aad
fdivrl
fistpll
cmc
and
xchg
mov
and
nop
rorb
scas
or
xchg
mov
std
dec
sub
bound
aam
or
mov
out
stos
in
xchg
int3
cmpsb
dec
pop
je
cmc
inc
aas
sub
mov
int
inc
dec
jle
pop
sti
iret
inc
jmp
xchg
sub
xchg
pop
adc
arpl
adc
shrl
xchg
pop
or
rorb
call
icebp
and
mov
imul
and
xchg
rclb
inc
dec
lret
call
lods
mull
inc
add
xor
cmc
xor
mov
sub
enter
int3
push
mov
sub
jle
stc
mov
lahf
test
call
sbbl
pop
push
addr16
dec
xchg
jge
or
cmp
ss
pop
dec
lcall
shlb
add
xor
push
in
jo
or
xlat
xchg
cs
and
push
dec
jne
adc
into
stos
add
dec
mov
adc
push
mov
sbb
adc
shlb
sub
inc
scas
hlt
pop
and
dec
jb
dec
and
push
sarb
and
lret
push
and
pop
repz
inc
mov
adc
mov
fmull
scas
jno
cmp
shl
sbb
adc
mov
fs
fisttpl
push
push
fcompl
out
mov
mov
inc
jne
aam
adc
jge
dec
jge
inc
std
xlat
stc
cmp
sub
insl
or
mov
mov
inc
xchg
ljmp
mov
out
cwtl
push
out
lcall
cmp
jg
fbstp
add
movsb
push
out
add
roll
std
scas
pop
lea
cs
iret
out
sarl
fildl
shlb
imul
xor
ret
lcall
dec
roll
jp
push
jae
cmpsl
enter
add
push
daa
jno
lahf
dec
xor
or
call
dec
pop
jo
dec
mov
fwait
pop
mov
dec
movsb
sub
xor
adcl
gs
sub
add
dec
pop
mov
xor
mov
call
pcmpeqd
or
dec
jno
sarb
imul
inc
cmp
rcll
rolb
mov
inc
mov
in
les
lock
pop
and
ljmp
xchg
divl
jl
and
push
inc
lcall
mov
rorb
push
adc
lds
lahf
into
imul
xor
in
cmp
mov
inc
push
rorl
inc
xchg
sbb
mov
inc
insl
pop
lea
or
inc
inc
pushf
ljmp
fwait
xchg
cmpsl
test
push
push
rcrb
dec
add
out
cli
mov
xchg
inc
out
subps
push
adcl
inc
pop
jo
idiv
lcall
mov
cmp
test
push
cmp
jo
jno
imul
mov
mov
into
mov
out
dec
pop
popf
or
cmp
cltd
xlat
enter
cltd
fs
fwait
testb
or
icebp
mov
xor
repnz
xchg
lock
out
cmp
adc
mov
jge
aam
test
mov
dec
fsubrs
stc
xchg
inc
xchg
ret
mov
dec
sbb
sar
dec
pushf
xchg
out
push
pop
inc
lods
daa
enter
xchg
push
pop
leave
jo
in
xchg
mov
sbb
fcompl
mov
pop
jno
pop
repnz
mov
xor
sarb
jg
pushf
daa
pop
insb
push
outsl
nop
stc
inc
xchg
lock
cmp
ss
xor
dec
pop
fst
mov
sub
mov
pop
ret
iret
aad
jns
cmpsl
lahf
and
popl
add
cmp
outsl
or
push
outsb
add
pop
inc
inc
add
dec
pushf
jae
jae
sahf
xchg
adc
int3
xor
aaa
and
cmp
or
packuswb
andl
call
ficoms
xchg
jae
test
push
test
mov
dec
mov
inc
sbb
pop
pusha
loope
lret
xor
test
addb
incl
loop
jb
test
sbb
ss
lods
cmpsb
jmp
ds
cmp
into
xchg
addl
sbb
push
pop
ret
and
cld
pushf
jge
inc
fsts
pusha
xor
push
xchg
mov
xchg
push
fstl
mov
testl
mov
je
mov
icebp
cmpsb
cmp
jle
inc
adc
fsubs
daa
adc
cmp
dec
jae
xchg
dec
xchg
cmp
dec
icebp
outsl
xchg
stc
arpl
push
xlat
push
pop
rol
lods
xor
nop
push
cmc
xor
jo
jae
fisubl
adc
lcall
pop
fs
mov
mov
or
out
push
outsl
loopne
add
or
fcmovnbe
lret
push
or
mov
or
xor
adc
lock
ret
jg
and
sub
xchg
mov
adc
int
jg
sub
jecxz
add
add
adc
stos
in
or
mov
jae
inc
in
mov
dec
mov
pop
mov
pushf
mov
xchg
inc
test
mov
movsb
mov
mov
pop
mov
imul
push
push
jmp
inc
xchg
test
dec
mov
add
pop
inc
inc
jno
xor
roll
mov
and
mov
sbb
jb
lock
scas
mov
mov
and
or
es
shrl
push
fisubrl
enter
gs
pop
ds
adc
je
es
fnstcw
mov
push
cpuid
jg
std
fisttps
add
aad
xor
in
loop
out
or
in
and
cmp
and
xor
adc
aad
dec
pop
adc
fidivl
leave
in
leave
fs
and
roll
add
sbb
inc
sub
imul
sub
inc
push
leave
mov
jns
repz
xchg
cmp
call
cwtl
sub
hlt
imul
pushf
jl
sub
mov
sub
ret
mov
mov
dec
mov
imul
jnp
add
push
pop
cmpsb
call
rorl
hlt
repnz
pop
push
jae
imul
mov
adc
mov
push
sbb
sub
fwait
bound
or
push
mov
out
xor
leave
add
lods
jle
andb
loope
xchg
mov
fldcw
fs
pop
les
in
jbe
dec
arpl
and
and
sbb
insl
add
dec
jecxz
popf
xchg
cmpsl
cltd
mov
jmp
cmpsb
add
mov
pop
push
push
stos
push
cmp
repz
hlt
pop
popf
mov
lret
fidivrl
dec
adc
hlt
repz
push
sti
cmp
adc
cmp
xor
fcomps
mov
std
pop
ret
xchg
xchg
movsb
out
pop
leave
fbstp
icebp
sarb
imulb
mov
push
pop
pop
sub
inc
push
mov
mov
xchg
add
mov
test
sti
and
cld
adc
jp
push
xchg
dec
push
add
fisubrs
mov
jns
and
test
mov
testl
adc
inc
push
push
dec
repz
outsl
loop
push
gs
push
push
or
mov
xchg
adc
stc
out
arpl
outsb
aaa
mov
inc
mov
cli
and
jae
add
add
mov
insb
push
loop
loopne
ficoms
ret
imul
lock
cmpsl
fisubrs
mov
scas
icebp
ljmp
movsb
sti
inc
adc
sti
ja
push
lret
add
jmp
and
imul
out
ss
out
stc
es
dec
cli
or
ret
mov
clc
xchg
popa
dec
jne
push
out
repnz
outsb
test
lcall
push
fs
mull
andl
pop
insb
or
jnp
out
lea
cltd
jnp
data16
mov
daa
ror
fstps
loopne
adc
add
xchg
and
xchg
frstor
jge
mov
dec
jns
scas
mov
fs
ljmp
lods
jae
xlat
push
hlt
xor
pop
sub
mov
cmpsb
adc
out
mov
and
jne
sbb
adc
mov
icebp
adc
stos
push
aam
sbb
lret
push
sub
scas
cmp
jno
adc
jl
sbb
imul
push
ret
es
gs
jo
adc
outsl
dec
push
cmpsb
pusha
aaa
dec
xor
in
jno
outsb
xchg
cld
ret
aam
in
outsl
loope
mov
aas
call
inc
shrb
clc
xchg
or
int
dec
je
inc
sub
movsb
push
pop
jb
ljmp
sub
jmp
lahf
add
mov
push
inc
push
cli
out
and
push
loopne
dec
mov
mov
test
imul
and
dec
lods
mov
ss
aad
pop
imul
mov
outsb
inc
cmp
dec
adc
mov
cmp
das
fs
pop
ljmp
in
testl
jns
jno
push
or
pushf
std
mov
xchg
cld
test
jo
out
js
jmp
jl
roll
jp
push
jbe
xor
xchg
sub
jb
lret
fs
in
add
sub
out
imul
xchg
movsl
aaa
pop
pop
pop
imul
out
cmc
push
sub
imul
adc
lret
xchg
fmull
gs
mov
popa
scas
cmc
pop
ret
sahf
mov
add
fcmovb
ja
dec
dec
mov
or
and
call
or
mov
ja
pop
inc
call
dec
popa
stc
sar
aas
repnz
jmp
and
ret
dec
jno
and
adcl
mov
sbb
jns
cltd
push
jae
lcall
repnz
dec
lret
shrl
push
xchg
or
mov
jl
fsubrl
mov
aad
lds
xchg
add
mov
xchg
mov
or
push
pop
addr16
pop
in
xor
leave
pop
or
cs
ret
cli
xor
inc
mov
adc
lea
movsl
int
dec
mov
in
les
cli
xor
cs
stos
xchg
rclb
or
cmp
mov
jns
mov
pop
jae
bound
sbb
jg
mov
add
push
insl
leave
gs
vpunpcklbw
inc
lret
xchg
movsl
jge
cmpsl
icebp
outsl
sub
out
xorl
sbb
mov
gs
std
cmpb
aam
inc
mov
out
repz
cld
jo
or
dec
lcall
jb
xchg
and
mov
adcb
sub
push
dec
pop
push
sbb
jnp
adc
adc
loop
cltd
jne
shrl
sub
popa
push
test
int3
movsl
movsl
dec
add
dec
add
shl
jb
ret
cmpsb
push
lcall
inc
cmc
outsl
pop
icebp
nop
mov
push
push
push
jae
xchg
jo
rcll
mov
xor
push
jno
fbstp
xlat
ret
sub
xchg
add
cmp
cwtl
xlat
dec
xor
xorb
sub
mov
icebp
xor
add
inc
outsb
jae
or
insb
sub
adc
add
jmp
inc
cmp
dec
xor
rol
and
push
aad
ja
inc
jb
jne
jbe
popa
xor
jo
fst
mov
pop
sub
push
decb
mov
xlat
push
pop
nop
xorl
iret
and
nop
loop
daa
andb
cmp
pop
je
into
jge
or
xchg
xchg
into
inc
mov
xchg
mov
push
insl
jg
loope
mov
pop
add
pop
fidivrl
cld
xchg
jne
xor
cmp
jo
mov
pop
icebp
arpl
sub
pop
push
sbb
imul
jl
stc
jecxz
mov
fidivl
fs
shll
std
cmpsb
ret
out
js
loope
jl
andl
add
movsb
enter
stc
mov
mov
gs
popa
popl
shll
xor
mov
jns
rol
enter
add
jge
jbe
xchg
inc
adcb
sbbl
stc
xchg
push
repnz
jno
movq
sub
sbb
gs
ret
sub
mov
jmp
popa
xchg
bound
arpl
sub
inc
cmp
inc
xchg
mov
test
and
add
cmp
pop
xor
les
out
cld
loop
cmpsl
push
daa
lahf
cmp
gs
lods
and
or
xchg
pusha
adc
sbb
ret
ret
mov
rcrl
sbb
and
push
std
pop
sbb
cmpsl
jns
jbe
sbb
pop
mov
icebp
mov
iret
in
loopne
xchg
jo
pop
ret
std
jns
ror
imul
std
jle
in
leave
pop
je
fwait
hlt
sub
and
jns
and
cmp
adc
sarl
jp
jne
push
lcall
mov
testl
je
loop
jg
or
sbb
roll
leave
sub
xor
or
mov
add
aas
pushf
jge
jge
xlat
popf
into
cmpsb
adc
cmp
push
inc
push
fcoms
jnp
adc
push
xchg
xchg
inc
add
or
xor
or
in
push
jno
popa
add
sbb
adc
hlt
nop
cmc
or
fnsave
adcl
cmp
add
lock
add
push
sub
sti
jecxz
dec
shlb
and
or
mov
adc
add
push
call
cltd
js
aas
cmpsb
xor
lods
xor
sbb
jns
movsl
sbb
dec
arpl
aas
jne
mov
lods
pop
mov
int
add
sub
aad
rorl
jo
or
mov
mov
mov
mov
out
popf
add
dec
cwtl
rcl
lds
bound
inc
xor
adc
inc
inc
pop
mov
shlb
lahf
xchg
ds
push
inc
sbb
fstpl
xchg
and
xchg
sub
mov
ja
add
fisubrs
pop
and
data16
push
and
xor
mov
sub
pop
mov
outsl
jne
dec
xlat
mov
sahf
mov
jo
stc
ja
jecxz
jecxz
sub
add
dec
call
pop
lret
fucom
call
cltd
sub
cmc
mov
jmp
fsubs
adc
data16
xor
inc
sub
lgs
hlt
adc
and
lretw
jnp
xchg
fisubrs
inc
jb
loopne
xchg
add
or
mov
test
and
int3
cmp
ljmp
into
mov
frstor
inc
mov
loopne
or
rcl
test
outsb
repz
xor
dec
jmp
xchg
inc
add
and
jb
mov
pop
pop
add
push
jge
aad
xchg
sti
popf
mov
mov
leave
push
sub
jb
in
xor
mov
jecxz
int3
jmp
inc
sbb
push
data16
sar
push
push
out
jno
xchg
pop
cmp
sub
jno
hlt
dec
sbbb
push
int3
mov
add
fucomp
stos
aad
push
jns
fcmovbe
testl
mov
das
ja
icebp
xor
inc
inc
push
xchg
int3
jp
mov
int
lret
inc
push
push
jno
pop
and
cmp
dec
or
mov
and
push
jg
ret
inc
fstpt
std
xor
or
ret
jo
ja
sahf
js
ret
jb
mov
mov
stos
adc
push
adcb
jb
jmp
cmpsl
outsl
mov
xor
mov
cmc
or
incl
data16
imul
ret
mov
in
lahf
bound
and
push
cmp
imul
ljmp
pushf
xor
icebp
xor
lret
sub
jmp
fbld
xor
out
add
dec
pop
push
pop
ret
pusha
jns
inc
jb
sbb
inc
insb
xlat
cmp
pop
and
test
push
cmpsb
mov
pop
inc
div
fwait
cli
push
shrl
inc
icebp
fbld
bound
sbb
mov
decb
xchg
add
js
inc
pop
jbe
ret
div
in
mov
or
in
rcrl
dec
xor
add
jb
xchg
or
div
outsl
cmp
push
mov
adcl
int3
jns
mov
push
fwait
xor
cmpsl
adc
test
push
mov
dec
sub
fsubrs
sbb
mov
out
inc
and
xchg
xor
inc
loop
arpl
cmp
addr16
stos
dec
ja
cwtl
je
rcrl
loopne
daa
add
jg
js
adc
pop
mov
aam
rcl
mov
push
mov
outsl
or
mov
adc
cmp
mov
shrl
jb
add
test
push
mov
or
xchg
mov
addr16
push
xchg
and
subb
adc
push
mov
and
fwait
jmp
fcoml
dec
into
mov
in
sbb
or
adc
adc
push
sahf
xchg
loop
jmp
jecxz
adc
jb
addr16
inc
repnz
repnz
dec
mov
inc
mov
and
xor
cli
jbe
testl
je
xchg
and
insb
sbb
imul
inc
push
mov
xchg
push
loop
fldl
lods
sar
ds
int3
ror
cs
or
imul
mov
xor
jp
bound
mov
lcall
mov
aad
imul
sbb
insl
test
jbe
sahf
and
push
sub
imul
mov
stc
call
loopne
ret
push
add
jbe
lods
aam
jbe
aaa
and
jae
adc
mov
inc
xlat
popa
fcmovbe
repz
sahf
cmp
loop
jne
aad
arpl
push
jno
iret
mov
popf
popa
loop
leave
dec
lods
stc
or
loope
decb
movsb
or
add
adc
ret
shrb
cltd
sbb
lds
iret
shl
jmp
fisubl
loopne
loope
enter
popa
or
adc
inc
stos
sbb
sbb
cmp
xchg
and
add
jmp
adc
lcall
aad
xchg
jp
data16
insb
outsb
jno
jae
xchg
jl
push
addr16
popa
out
push
xor
mov
inc
and
mov
iret
mov
cmp
sti
repnz
dec
jae
inc
mov
push
jmp
jbe
rcll
jne
cmp
push
popf
and
jnp
pop
cmp
in
repz
cli
mov
mov
xchg
xlat
ret
ja
jns
dec
or
movsl
outsb
into
lahf
je,pn
adc
movsb
adc
xchg
add
mov
pop
sbb
add
aas
into
mov
popf
pop
dec
imul
pop
into
pop
lods
rcrl
and
sub
jae
push
cmpsl
and
adc
inc
ljmp
dec
fcmovbe
xchg
aam
or
outsl
cld
jnp
fadds
cmp
sbb
lock
data16
pop
shld
xor
inc
sub
pop
lock
jbe
or
xchg
adc
loope
imul
test
inc
lock
insl
jo
adcl
jno
gs
mov
sti
ret
out
popa
sbb
push
xor
adc
ffreep
imul
sub
push
mov
gs
sub
jmp
xchg
and
or
jno
xlat
js
repnz
xorl
or
into
shll
mov
out
gs
stc
adcl
mov
adc
sub
out
mov
sbb
cmp
or
xchg
imul
and
inc
xchg
out
aam
pusha
lock
push
loope
jge
sar
leave
leave
mov
mov
shlb
dec
roll
mov
xchg
sbbl
call
sbb
add
dec
xchg
sbb
xor
cld
xor
push
jp
fidivs
or
mul
andb
mov
aam
rcrl
lret
sub
cli
js
dec
pop
aad
cmpb
outsb
sbb
inc
in
fs
lret
mov
imul
xchg
pop
cltd
lret
push
imul
xchg
outsl
iret
stc
shl
fwait
or
push
cmc
adc
and
leave
icebp
scas
add
icebp
add
dec
fsubs
movb
sub
mov
imul
xorb
mov
cltd
movsl
and
inc
jnp
mov
repz
in
hlt
lds
lret
rorl
mov
int
in
ret
sbb
ss
rol
cmpsb
pushf
arpl
jae
jno
jl
cmp
lcall
js
mov
daa
je
xchg
vcvtpd2dqx
int3
add
int3
fdivr
aas
add
cltd
or
jne
cltd
leave
jbe
movsl
dec
addr16
mov
jae
roll
adc
cwtl
fstp
push
cltd
cmp
dec
gs
iret
push
out
mov
push
mov
jbe
pop
imul
in
inc
insl
cmp
mov
fisubs
or
and
adc
das
mov
hlt
push
inc
jb
call
and
dec
shlb
and
sarl
sbb
jp
jmp
jbe
xchg
pop
lods
repnz
mov
mov
sub
xchg
xor
mov
xchg
mov
push
outsb
loop
and
cs
xchg
aas
ljmp
and
lock
or
jne
jmp
jecxz
sbb
jecxz
mov
pop
pop
pop
dec
xor
pushl
dec
insl
xchg
sbb
pop
pop
jne
and
ja
jo
dec
es
mov
movsl
sbbb
or
jns
xor
cld
xchg
and
sub
mov
jg
xchg
inc
enter
hlt
mov
out
adc
xor
cmp
xchg
inc
jbe
add
mov
push
mov
mov
mov
xchg
inc
xor
inc
jmp
cmpsb
lods
stos
fistpl
loope
lcall
jo
cmpsb
scas
push
fistl
jle
arpl
xor
repz
mov
std
stos
cmpsb
aad
and
shlb
push
and
sub
hlt
dec
jg
aas
js
cld
aam
add
pop
lock
iret
repz
les
mov
popf
sbb
pop
popa
jns
push
jno
negb
movsl
adc
push
mov
out
ja
cmp
js
mov
bound
xchg
sub
mov
or
cs
aaa
lret
pushf
mov
mov
call
push
xchg
lea
int
imul
push
push
adc
xchg
popf
xor
xor
xchg
neg
jae
dec
push
jmp
pop
xchg
ljmp
sub
bound
push
int3
mov
cmp
add
ja
repnz
sub
cs
push
lret
lods
or
enter
lea
repz
mov
xor
mov
popf
cmp
or
je
xchg
pusha
enter
cs
outsl
cltd
sub
sbb
aam
call
sbb
insl
test
out
daa
add
inc
xchg
and
or
out
and
pop
lods
mov
xchg
lods
push
inc
push
mov
adc
ret
ljmp
aad
sub
hlt
xchg
test
adcb
pushf
add
stos
sbb
lea
fwait
adc
test
leave
jae
pop
add
in
loop
movsb
aaa
fmull
leave
or
fisubs
add
cld
fwait
rolb
lret
push
dec
mov
xor
loopew
push
and
sbbb
fadd
daa
mov
jb
jbe
pusha
jmp
or
push
and
pop
pop
fscale
add
subb
mov
sbb
jne
inc
cmovge
mov
mov
adc
mov
mov
sti
movsl
mov
cs
push
xchg
fcompl
jp
gs
aad
subb
fdivp
mov
adc
dec
jl
xor
in
lcall
mov
xor
pop
push
jp
xchg
mov
push
call
mov
jge
jg
test
sub
out
enter
cmp
push
ljmp
mov
sub
sbb
int3
sub
inc
and
mov
cmp
cmp
sbb
daa
jmp
pop
test
push
icebp
mov
stc
or
add
nop
dec
out
add
inc
inc
test
mov
adc
dec
bound
inc
movsl
icebp
push
push
pop
scas
cmp
mov
imul
data16
jo
jecxz
out
into
sbb
dec
jmp
cld
jb
cmp
jb
bound
sbb
inc
mov
jp
pushl
pop
icebp
sbb
inc
scas
add
push
adc
mov
adcb
ret
hlt
dec
fldl
sbb
pop
jb
lods
cld
jg
pop
jg
cld
nop
pop
mov
lea
leave
stc
mov
cwtl
test
jp
xlat
mov
dec
shl
mov
dec
dec
inc
push
sub
lret
add
xchg
in
mov
iret
xchg
fimull
inc
pop
xor
jo
mov
mov
and
sub
outsb
sub
dec
shlb
test
mov
mov
das
inc
inc
scas
mov
lret
aaa
jg
loopne
insb
xlat
in
je
jl
xor
fldcw
sbb
daa
push
fstl
mov
mov
mov
pop
in
pop
in
lods
sbb
rcr
stos
sbb
cmp
loop
je
test
cli
mov
mov
addb
cli
dec
jg
mov
inc
dec
or
and
cmc
mov
mov
cmp
push
in
xor
mov
sarl
push
lods
mov
sub
sub
xor
mov
in
inc
jno
jns
push
inc
and
dec
add
cmp
add
or
mov
cltd
cwtl
cwtl
data16
movsb
lret
jnp
popa
xchg
push
fnstenv
adc
decl
dec
gs
movsl
dec
jno
leave
icebp
cmp
gs
scas
push
int
out
xchg
mov
int3
cli
and
add
jge
in
inc
xchg
cmp
jg
testb
inc
and
stos
enter
lret
lret
shll
fstl
out
pop
fisubrs
xchg
mov
jo
or
mov
xchg
mov
jno
ds
mov
std
movsb
test
mov
dec
mov
lret
popf
xor
xor
scas
mov
inc
stos
pop
lock
fnsave
fs
out
cmovns
sarl
addl
inc
popf
jns
inc
mov
aad
xchg
repnz
mov
arpl
es
or
push
orb
sub
or
sub
imul
pushf
mov
mov
pop
insl
xor
sub
rcrl
jno
jle
inc
xchg
in
dec
sub
push
je
adc
and
cmp
mov
add
mov
xor
leave
xor
dec
sbb
xchg
mov
jo
inc
das
imul
je
push
mull
and
push
mov
test
les
adc
pop
rol
dec
jl
std
xchg
aas
fstl
rol
adc
jmp
mov
lock
je
enter
leave
cld
mov
sbb
jo
loopne
push
leave
leave
adc
push
dec
stos
inc
dec
es
loope
sub
sbb
and
push
inc
sub
in
stos
dec
inc
scas
dec
xlat
es
sub
xchg
fdivl
xor
push
js
pop
andl
mov
xlat
sub
hlt
inc
push
push
inc
popa
inc
in
icebp
dec
lods
jne
adc
adc
fadds
mov
pop
rolb
lahf
mov
sub
jg
insl
cmp
fcmove
jp
or
inc
push
mov
stos
xchg
sahf
jge
sahf
mov
push
scas
mov
inc
jbe
pop
inc
rdmsr
shrb
mov
jl
mov
xchg
push
sahf
inc
inc
and
repnz
add
mov
leave
inc
dec
jb
push
clc
push
jmp
cltd
lcall
fimuls
lock
fisubs
movsb
push
pop
xchg
push
sti
dec
xor
sbb
aam
stc
ds
add
adc
push
sbb
in
imul
sub
leave
int
inc
andl
icebp
repz
push
xchg
ss
jo
lret
adc
mov
inc
inc
jb
jge
test
push
adc
adc
in
cli
sahf
jl
out
jmp
or
movsb
inc
mov
dec
fidivl
lock
std
shrl
push
sub
or
ret
mov
cmpsl
jmp
test
stos
adc
and
aas
sbb
fwait
pop
mov
fiaddl
inc
lcall
enter
push
int3
or
and
push
test
sbb
push
sbb
test
enter
and
xor
stc
push
movsb
xchg
lret
pushf
pop
leave
outsb
cs
movsb
fbld
btr
testl
mov
dec
mov
sub
or
and
int3
stc
jo
rorb
outsl
addr16
xchg
sbb
jl,pn
sti
or
sbb
mov
push
dec
fwait
icebp
mov
push
je
cmp
lahf
sbb
int3
pop
stc
sbb
cmc
xchg
inc
xchg
and
loop
xor
mov
outsl
pop
inc
setae
gs
out
jge
cmp
xchg
insb
add
lods
mov
ljmp
xchg
inc
pop
pop
mov
push
sarl
enter
mov
dec
inc
scas
mov
xor
pusha
xchg
jne
mov
rcll
ds
cmpsb
sbbl
inc
xor
shlb
pop
inc
arpl
sbb
lods
pop
push
or
jae
push
scas
jp
jo
push
bound
mov
mov
push
movsb
jns
dec
inc
das
data16
xor
stos
shlb
or
test
cwtl
popa
ret
js
and
mov
cld
inc
mov
repz
jns
test
xor
call
shll
push
aad
pop
clc
aad
mov
inc
lret
mov
repz
outsb
out
ror
xchg
jo
aad
js,pt
outsl
and
mov
sahf
dec
and
std
icebp
icebp
lahf
cmp
data16
sub
xor
jmp
inc
jbe
fidivl
xchg
aad
scas
jle
jmp
call
shlb
push
or
cs
je
in
cmpsl
sbbb
cld
gs
mov
xlat
bound
mov
sbb
cmpl
shlb
mov
fs
int
push
inc
mov
cmp
push
lods
testl
adc
pop
inc
clc
jp
pop
pop
mov
pop
idivl
lock
cmpsl
dec
sbb
imul
xlat
shlb
or
mov
daa
mov
xchg
mov
pop
sub
iret
inc
sbb
mov
imul
mov
push
xor
mov
pop
add
inc
dec
jo
in
xor
mul
rol
xor
lahf
push
add
loope
push
outsb
sub
call
push
push
jl
mov
xchg
cmp
leave
fstpt
and
stos
das
aas
mov
pop
push
mov
hlt
in
xor
lock
stc
aas
mov
lcall
out
sti
or
cmp
cmc
les
stos
xchg
xlat
testl
cmc
sbb
popl
insl
jg
lods
mov
mov
push
add
mov
sbb
fsubl
loope
and
shlb
sahf
push
xor
add
stc
jge
pop
stc
jg
xchg
add
and
adc
lock
xchg
cmp
jne
jecxz
add
movsl
add
hlt
jno
inc
mov
jbe
pop
jbe
jne
pusha
or
sahf
dec
iret
in
neg
add
cmpsb
out
xchg
dec
testb
daa
sub
repnz
adc
jl
xchg
aam
sbb
cmp
fs
je
mov
xor
out
dec
sbb
sub
mov
xor
jg
lret
imul
cmp
aad
add
push
pop
xor
movsl
inc
mov
mov
inc
fs
call
cmp
mov
pop
add
outsb
call
cmp
ss
lods
xchg
adcb
push
icebp
imul
shrl
shl
rolb
cmp
or
neg
inc
jg
cmp
popa
pop
mov
testl
jnp
sbb
jae
sbb
inc
mov
repz
cmp
jnp
jmp
rcr
outsb
mov
inc
dec
pop
sti
sbb
gs
pop
mov
sub
mov
jnp
lock
pop
aad
jl
and
push
inc
in
push
jno
or
gs
sbb
xchg
inc
push
imul
and
sahf
in
pop
jne
inc
gs
je
shlb
jne
xchg
pop
cmovp
sbb
inc
orl
sti
mov
adc
je
inc
fidivs
test
cli
mov
mov
sub
sbb
lods
mov
imul
insl
mov
cld
or
add
shll
cmc
dec
outsl
mov
out
out
xchg
adc
out
cld
ret
mov
scas
mov
in
pop
pop
sub
pop
call
cmp
in
test
push
incl
je
inc
pop
je
aas
add
int
aaa
inc
ds
mov
dec
idivb
pop
cltd
push
dec
mov
sbb
aam
arpl
movsb
scas
rorb
jne
push
mov
bound
sub
jb
imul
push
pop
jne
cltd
out
insb
hlt
outsl
jg
cmp
pop
lods
int3
push
repnz
xchg
pop
cmc
dec
jg
push
fcoml
ret
cltd
pop
xor
daa
add
dec
pop
int
xchg
inc
fsubs
dec
and
mov
jo
fiadds
push
cmpsb
dec
repz
in
pop
lds
repz
dec
jb
fs
mov
jno
lcall
lods
xchg
mov
sbb
popf
and
xchg
stos
pop
dec
cwtl
fs
mov
insl
or
pop
cmp
stos
pop
push
scas
mov
and
orb
add
jb
pop
dec
xor
and
inc
movsl
inc
dec
push
cmpsl
popa
cmp
out
fwait
cmp
jno
imul
push
jno
inc
xchg
add
call
mov
jbe
notb
sbb
jb
arpl
and
je
xchg
cmp
push
fsts
mov
jae
int
ja
cltd
out
jp
rclb
sahf
xchg
andb
rolb
sbb
sub
xchg
or
gs
dec
dec
or
xchg
cmp
in
xchg
push
cmp
out
mov
jns
int3
lahf
shlb
lock
inc
jmp
cmp
jge
xor
popa
iret
int
add
add
xor
mov
loop
push
mov
mov
ss
inc
aad
jns
xchg
add
push
test
and
shll
adc
pusha
cli
xchg
rol
test
jl
cwtl
pusha
cmpsb
or
cmpsb
push
and
mov
rcll
mov
and
xchg
movsl
arpl
ss
xchg
jns
imul
xchg
mov
jne
js
mov
and
pop
fisubrl
mov
pusha
cmpsl
inc
pop
imull
inc
js
and
call
jmp
mov
mov
mov
cmp
pop
sub
aam
je
mov
inc
insl
and
mov
mov
clc
shl
push
stos
loopne
jo
sub
outsl
xchg
loop
dec
xor
push
inc
pop
and
push
mov
dec
enter
xlat
mov
dec
xor
and
jmp
fldcw
jae
push
pop
xor
mov
add
inc
into
pop
jp
lret
lahf
rolb
jge
or
dec
mov
lret
push
push
in
out
inc
icebp
fst
shl
cmp
shrl
sub
in
cwtl
mov
dec
pop
dec
sub
cwtl
adc
aas
neg
and
ja
int3
scas
idivb
mov
inc
inc
jg
lahf
and
cmp
sbb
in
lret
jmp
pop
sbb
push
pop
add
mov
shrb
push
xor
outsl
xchg
push
mov
xor
and
mov
cmp
js
sahf
inc
les
inc
xorl
pop
and
jg
xchg
imul
imul
push
and
out
sub
add
test
jb
pushf
sbb
sbb
adcb
xor
or
push
out
cwtl
mov
pop
jbe
jb
decb
jae
mov
xchg
mov
cmp
jl
decl
pushf
sbb
out
pop
cmp
jno
jnp
dec
dec
iret
mov
pop
xchg
mov
jae
mov
pop
cmpsb
lret
push
add
inc
pop
in
lret
jg
sbb
scas
rclb
ds
push
cmp
pop
push
icebp
inc
inc
jmp
imul
mov
xor
lahf
sub
jne
and
xchg
cmpsl
cmpsb
popf
in
mov
xchg
test
dec
daa
stc
les
cmp
imulb
adc
leave
mov
push
jns
cld
sbb
or
lds
jne
outsl
mov
sbb
mov
dec
fcmovu
nop
or
sub
adc
dec
in
inc
cmp
mov
jnp
fmuls
in
sub
into
and
and
test
mov
mov
dec
add
fldt
cwtl
mov
jp
cmp
or
jbe
mov
fiaddl
js
cmc
push
dec
jae
add
mov
sbb
fwait
mov
add
daa
mov
mov
clc
aas
jle
or
add
jne
mov
cld
mov
or
dec
pop
jmp
jg
dec
jmp
or
sarb
mov
and
aaa
and
hlt
xchg
addl
sbb
loopne
int
add
mov
mov
dec
xor
mov
push
lods
out
jge
fcomp
mov
mov
mov
cmp
andb
add
push
imul
sub
pop
sub
mov
aam
dec
aam
push
push
sub
sub
mov
jl
ja
cld
dec
cmp
rcr
xchg
aad
mov
push
xor
out
cmc
xor
dec
push
and
jg
leave
loope
inc
dec
jg
cmpsb
into
cmp
sbbl
xor
dec
lds
mov
bound
loopne
andl
mov
data16
leave
pop
push
push
jl
test
sbb
jo
fistpl
sub
popf
mov
sub
sbb
pop
fwait
int3
mov
cmp
mov
les
pop
mov
push
pop
lods
icebp
push
sbb
hlt
and
into
js
mov
int
fisubs
lock
inc
cmpsl
repz
adc
push
lock
sbb
cmpsb
mov
stos
test
jno
mov
in
gs
mov
mov
lds
jb
pop
mov
je
jl
pop
flds
popl
and
aad
test
gs
mov
call
fs
push
mov
mov
scas
jmp
mov
lea
gs
mov
and
mov
mov
test
mov
add
xchg
aad
mov
pop
mov
rcll
cli
lock
pop
or
or
add
loope
pop
mov
sub
sbb
push
jecxz
imul
aam
mov
adc
shll
fcoms
rclb
dec
mov
ljmp
mov
rolb
push
lods
and
jle
xchg
lods
or
xchg
mov
or
cmp
mov
push
mov
test
adc
mov
ret
imul
inc
leave
adc
sub
aam
jp
push
cs
lcall
dec
into
sub
add
mov
push
fwait
cs
mov
cs
adc
divb
in
repz
sub
nop
shrb
xlat
inc
fistpl
add
xchg
mov
mov
loope
cli
out
xor
lods
jecxz
jmp
dec
or
leave
test
insl
mov
mov
clc
cmpsl
jmp
and
addr16
push
jnp
stos
cmp
loop
mov
mov
aam
fisttpl
negl
rol
scas
lcall
les
popf
xchg
aad
jmp
popf
adc
les
jge
mov
pop
and
push
cmpsb
mov
int
mov
inc
jecxz
cmpb
imul
xlat
jl
xchg
mov
notb
xchg
pop
push
adcl
inc
cmp
cmp
mov
adc
cltd
gs
xchg
ja
loope
rep
shlw
mov
stos
mov
dec
add
add
push
scas
test
cmp
sbb
int3
add
sub
cmp
xor
inc
xor
test
mov
adc
lds
or
lcall
lods
push
loopne
fnstsw
push
pop
xor
iret
fcoml
mov
add
sub
cmp
xchg
int
or
pusha
dec
inc
popf
imul
jnp
imul
jo
xor
daa
lret
enter
dec
mov
mov
jo
aaa
lock
mov
jb
lock
shll
xor
sub
lods
movsl
sbb
scas
mov
mov
lock
ja
cmp
xor
stc
fdivs
fmuls
sbb
out
add
les
xchg
cmpsl
mov
mov
ds
jns
xchg
dec
xor
repnz
or
adc
push
push
push
or
enter
lret
sub
es
jmp
push
ds
mov
push
inc
add
inc
test
pop
inc
leave
dec
pop
enter
aam
or
stos
jp
xchg
scas
inc
gs
in
pushf
push
cmp
jnp
imul
push
mov
ja
jne
js
test
fbld
gs
in
aas
ret
lock
and
test
test
shll
dec
pop
cmp
dec
clc
imul
mov
in
and
sbb
xchg
xchg
mov
mov
cli
lahf
mov
into
stos
lret
loopne
out
jl
nop
jbe
loopne
ss
mul
mov
jb
mov
clc
mov
and
lcall
jecxz
mov
sahf
out
bound
inc
pop
icebp
inc
jecxz
je
mov
aad
xorl
test
dec
lock
fadds
stos
mov
cld
mov
roll
jecxz
xorl
push
fisttpll
sbb
les
test
xlat
dec
sub
xchg
adc
pop
movsb
dec
dec
or
add
je
inc
in
or
leave
mov
pop
leave
aaa
jge
pop
or
push
cmpsb
lock
and
in
sbb
inc
mov
jge
mov
shrl
lock
xor
xor
sbb
pop
xlat
out
dec
xorl
xchg
mov
sub
mov
push
add
int
pop
adc
adc
fsubrs
sub
daa
mov
jno
xor
and
roll
incl
mov
cs
and
outsb
mov
fistps
sub
pushf
mov
pop
incl
loop
and
stos
mov
lret
es
dec
dec
sbb
or
dec
shll
add
lahf
rorb
cmp
dec
jns
pop
sbb
imul
push
jge
movl
in
push
jb
fdivrs
or
das
fistpl
jbe
sub
push
aas
lock
loope
jp
push
mov
lds
shll
shr
fadd
bound
mov
mov
in
pop
inc
inc
xchg
popa
inc
sti
or
test
sbb
xchg
imul
jecxz
sti
mov
cmp
push
mov
xchg
jno
dec
popa
xor
stc
push
cli
pop
inc
mov
jnp
sbb
xchg
inc
clc
push
lods
sbb
cmp
js
call
mov
cmpsb
mov
frstor
test
fwait
push
loope
adc
jmp
and
in
imul
inc
push
pop
clc
sub
inc
xchg
fdivrl
lods
mov
mov
out
pmaxsw
into
and
movq
ret
fdiv
sub
xchg
adc
dec
push
ds
dec
popa
enter
xorl
sub
scas
xchg
jns
xchg
std
test
in
push
mov
xor
cmp
icebp
add
add
shr
mov
icebp
repnz
call
orb
ror
inc
push
sahf
xor
imull
repz
mov
dec
js
adc
push
dec
mov
and
mov
lcall
push
pushl
jb
mov
sub
pushl
ja
addr16
ret
int
imul
test
aad
scas
jnp
inc
sbb
inc
push
mov
sbb
fbld
das
ljmp
or
add
and
xchg
ja
pop
pop
and
jmp
push
in
cwtl
pop
add
sbbb
mov
mov
cli
hlt
adc
xor
in
iret
fwait
clc
cmp
mov
rcrl
add
call
or
pusha
mov
sub
loopne
pop
shlb
dec
cmp
jb
cmp
js
jmp
mov
xor
jmp
frstor
pop
mov
es
dec
fists
mov
add
or
mov
fisttps
pop
push
inc
mov
out
pop
fnstsw
mov
sbbb
scas
and
jo
repz
cmc
mov
inc
scas
sbb
mov
mov
adc
loope
lret
mov
push
jecxz
repnz
mov
cmp
out
mov
in
leave
mov
jns
adc
dec
add
sub
aam
lds
lahf
sub
mov
sub
pop
fs
mov
dec
int3
add
dec
push
js
or
mov
fcmovnbe
pop
cs
and
push
push
mov
xor
imul
lahf
push
leave
cmp
push
hlt
out
push
inc
out
mov
bound
lods
push
inc
pop
push
dec
div
mov
and
mul
mov
leave
scas
ss
sahf
incb
push
rorl
jno
xchg
in
bound
pusha
jns
and
add
enter
mov
mov
xor
ljmp
mov
or
mov
int
cli
sbb
sbb
fisttps
pop
rcl
xor
loop
or
mov
jmp
cmp
xchg
mov
cld
sbb
int3
fsubrp
aas
jno
pop
pop
pop
bound
rcl
or
arpl
ljmp
sbb
adc
pop
lock
push
testb
test
fldcw
clc
mov
mov
addb
or
dec
adc
test
sub
sbb
sahf
mov
sub
cmp
lods
jmp
lahf
mov
test
xchg
push
jns
sub
outsb
stc
mov
dec
or
mov
rcrl
pop
sbb
inc
pusha
test
sub
popa
mov
stos
xor
mov
loope
push
cli
into
fdivrl
xchg
mov
inc
mov
inc
loopne
dec
dec
out
out
cltd
xchg
adc
das
push
mov
leave
imul
out
xchg
int3
xor
and
jl
imul
mov
fisubs
test
dec
and
xchg
pushf
fidivs
cs
xchg
std
or
fists
xchg
cmp
subl
xchg
test
inc
nop
arpl
repnz
push
pop
repnz
in
jns
mov
xchg
int3
cmpsb
fdivrl
xor
out
jno
mov
lods
jb,pt
xchg
or
jnp
mov
push
orb
divb
test
mov
xor
xchg
adc
push
jno
stos
in
inc
ja
mov
xor
fidivl
pop
leave
insb
mov
xor
adc
aas
mov
adc
jle
jae
mov
pop
leave
pop
test
mov
push
jmp
fstps
iret
rcl
add
xchg
push
cmpsb
stc
sub
fcom
iret
or
xchg
scas
xor
add
stos
js
out
ficompl
add
sub
in
aaa
xchg
and
ret
adc
or
arpl
xor
push
pop
jb
push
aam
dec
push
dec
add
mov
pop
fsts
jge
stos
mov
sbb
xorps
ret
pop
sbb
jne
gs
leave
add
mov
test
lcall
outsl
repz
clc
leave
mov
call
cmp
loop
cmp
daa
lahf
jecxz
xor
mov
ss
jg
cld
ljmp
icebp
sbb
je
stos
jecxz
gs
cmp
ss
push
mov
scas
push
das
pop
ljmp
idivl
cmpsl
xchg
mov
sbb
xchg
arpl
scas
dec
je
data16
iret
mov
cwtl
js
adc
insb
push
stos
jle
imul
mov
daa
jno
insb
push
mov
outsb
add
ja
fwait
inc
mov
xor
xchg
push
ljmp
insl
sub
outsb
mov
aad
or
std
fs
scas
cmc
leave
popa
mov
out
frstor
leave
or
sub
movsb
stos
jbe
or
xor
cwtl
pop
xchg
and
loop
cli
int
xchg
adc
movsl
xchg
pop
or
test
clc
mov
inc
loopne
gs
shrl
scas
xor
add
jge
pop
in
pusha
sub
shll
fldt
jp
lea
arpl
jns
mov
inc
sbb
push
mov
mov
inc
pop
jl
push
imul
loope
std
add
lret
leave
std
adc
test
jl
lods
pop
mov
push
sti
insb
mov
cld
xchg
mov
pop
jne
dec
xchg
add
js
cltd
sbb
mov
fistps
fdivrs
imul
les
test
cmpsl
sahf
sbb
or
mov
adc
push
mov
xchg
fdivl
xchg
add
jne
pop
test
jbe
scas
mov
cli
les
dec
mov
stc
xchg
dec
push
sbb
mov
test
mov
cs
push
and
pop
scas
repz
push
cmpsl
add
clc
rcrl
add
or
imul
inc
sbb
outsb
dec
js
mulb
push
shld
sahf
test
test
int3
mov
sub
push
adc
pop
push
jns
jmp
popa
dec
insb
mov
call
and
pop
sub
pop
jbe
push
mov
jns
enter
cld
pop
xchg
mov
inc
call
in
stc
pusha
sbbl
outsl
cwtl
push
sbb
push
test
jne
out
sub
jle
sub
xchg
mov
subl
cmc
sbb
mov
xchg
inc
jnp
jb
inc
push
push
testl
push
icebp
enter
xchg
sub
jmp
cmpsl
lea
add
lret
jl
mov
push
xlat
mov
mov
xor
loop
sbb
inc
sbb
xchg
xor
stos
xchg
aad
cmp
imulb
sub
addr16
jge
imul
sbb
pop
push
int
pushf
cmp
insb
or
xchg
pop
adc
fcompl
jg
jb
inc
ret
dec
test
pop
cmp
mov
aam
stos
lock
cmp
lods
sti
jl
ret
adc
adc
add
outsl
fmulp
dec
mov
aad
jno
adc
pop
shlb
or
and
dec
jmp
pop
pop
leave
stos
xor
jbe
cld
movsl
je
push
aad
test
clc
cmp
imul
push
mov
int
pop
hlt
insl
jmp
push
fiadds
xchg
inc
jo
aam
dec
dec
rol
inc
cmp
mov
mov
bound
adc
add
gs
out
pop
sbb
int
add
insl
jp
jmp
out
xlat
mov
xchg
fistpll
rcll
test
insb
xchg
add
mov
bound
sbb
pushf
lods
lds
out
std
inc
loopne
lahf
cwtl
mov
test
leave
push
sbb
call
fbstp
in
add
cwtl
scas
or
pop
cmp
rorl
add
mov
leave
in
push
popf
sahf
in
outsl
xlat
shr
popf
cwtl
lcall
fwait
leave
push
sub
call
sbb
out
repnz
pop
stos
cmp
sub
psraw
mov
mov
das
data16
cmpxchg
xchg
xchg
and
out
xchg
pop
ljmp
fwait
cmp
icebp
cmp
lret
inc
dec
add
add
xchg
sub
clc
and
popa
ret
imul
adc
lods
mov
outsb
ljmp
call
stos
incl
popf
dec
or
cld
out
subl
imul
stos
mov
xchg
xor
and
lret
les
cltd
notb
jbe
insl
or
jmp
lret
out
das
inc
pop
or
fs
sub
jle
push
ret
inc
ret
adc
xchg
aad
jle
stos
aam
rcrb
clc
cltd
push
nop
sbbl
dec
loope
fcompl
sub
add
jns
adc
das
in
adc
pop
add
jae
sub
mov
test
cmpsb
out
add
mov
pop
adc
push
or
push
pop
mov
sahf
adc
clc
mov
pop
insl
xchg
sbb
repz
arpl
pop
xor
fldcw
out
rclb
sbb
idivb
paddsw
and
ljmp
pop
add
cli
rep
or
mov
in
cmp
repz
out
and
out
outsl
push
or
les
mov
pushf
loope
insb
xor
shll
jecxz
inc
ja
jb
or
popa
bnd
loop
or
out
mov
fs
xor
sbb
xchg
fwait
push
out
jg
movsb
lahf
lret
xor
lcall
add
mov
dec
es
sub
mov
cmp
xchg
shll
or
pop
xor
jp
sbbb
js
dec
push
jb
and
xchg
cmp
mov
sbb
dec
add
lods
jecxz
push
gs
daa
mov
xbegin
cmp
scas
mov
sbb
and
sbb
push
stc
xchg
mov
inc
lods
add
hlt
inc
or
dec
jae
fdivs
and
mov
jo
in
or
sub
sbb
dec
loopne
mov
pop
or
or
push
xchg
das
scas
pop
mov
lock
outsl
adc
sti
insl
jecxz
sub
pop
lea
pop
cmp
xchg
sub
xchg
fcom
fwait
adc
jge
jnp
and
sub
or
adc
lods
std
sub
mov
adc
mov
dec
xlat
inc
iret
jp
mov
sti
cmpb
and
or
xor
cli
xchg
xor
adc
sub
adc
lret
movsl
ja
mov
inc
lret
inc
mov
loopne
or
or
and
sub
adc
pusha
jle
test
cmp
jg
mov
dec
mov
sub
sub
addr16
dec
pop
mov
imul
daa
mov
ret
dec
mov
dec
out
cmpsb
sub
sub
and
outsl
xchg
xchg
daa
testb
xor
addr16
jle
pusha
aad
in
mov
and
jo
cmp
mov
mov
outsl
add
repnz
push
xchg
inc
lret
loope
or
sbb
lods
xchg
jb
push
xchg
dec
jbe
mov
jbe
shll
mov
in
inc
iret
cmp
stos
add
inc
push
popa
lds
dec
stos
fimull
and
mov
ja
movsb
sub
test
outsl
cmp
push
mov
mov
adc
mov
push
adc
push
push
ret
outsl
xor
mov
inc
inc
and
lods
mov
aas
mov
in
arpl
enter
lock
movsl
dec
lds
adc
mov
xchg
add
jle,pt
mov
push
aaa
or
out
or
js
xor
dec
mov
les
jg
push
mov
mov
push
ljmp
adc
outsl
xor
sub
jo
mov
out
cld
cwtl
mov
insb
xor
dec
mov
inc
push
lret
insl
xchg
pop
mov
fsubrl
ljmp
mov
addl
sti
cs
movsb
dec
dec
shll
pusha
add
repnz
mov
push
rorl
xor
jne
pop
add
jmp
push
lret
push
loope
lds
sub
mov
andb
notb
mov
add
mov
mov
pusha
scas
or
int
jne
mov
sbb
adc
and
addb
add
dec
iret
and
or
orb
stc
mov
dec
push
daa
imul
shll
and
dec
dec
aas
lret
mov
insb
or
test
mov
ss
ficompl
insb
and
xlat
push
fs
mov
mov
jns
ficoml
and
jnp
fwait
int
leave
dec
cwtl
sbb
bound
inc
nop
push
adc
aam
inc
ret
cmp
mov
sbb
insl
cmpsl
cmp
mov
pop
imul
push
jle
es
adc
popf
stos
arpl
cmp
shll
int
inc
popf
inc
test
and
sarl
or
ret
std
rclb
mov
and
or
push
pop
inc
push
ja
lods
subl
mov
pop
insb
aaa
adc
jbe
inc
lret
and
or
arpl
mov
cmpsl
cmp
ljmp
stos
push
push
clc
test
mov
in
push
aas
nopl
xor
scas
dec
fsubr
xor
sbb
ret
mov
fnsave
insl
fcmovb
adc
insb
stc
or
repnz
push
stos
inc
mov
push
sbbl
movsb
aad
test
daa
inc
maskmovq
divl
out
movsl
adc
arpl
xchg
adc
mov
cmpsl
addr16
mov
in
mov
xchg
repz
or
int3
popa
stos
push
leave
and
or
pop
out
outsb
push
sub
mov
das
cwtl
out
subb
insl
or
xor
push
adc
jns
push
cmpsb
not
and
imul
cltd
dec
mov
adc
or
dec
popf
xchg
orb
mov
fsub
jl
imull
daa
out
and
pop
test
outsl
gs
sti
divb
popa
adc
mov
cwtl
inc
aaa
adc
xor
stc
cmp
aaa
jne
mov
popa
addw
subl
or
cmp
adc
push
add
xchg
inc
push
imul
push
mov
lcall
test
rcrb
outsb
imul
or
push
sub
cwtl
jno
or
cwtl
xor
shlb
gs
imul
repz
adc
test
and
insl
test
and
dec
sub
xorl
addb
mov
imul
push
cltd
cmp
dec
bound
fdivrp
aaa
sarb
jecxz
xor
ja
jmp
xor
mov
or
fdivp
out
or
xor
movsl
clc
bound
jb
mov
loope
fisttpl
sub
mov
and
ds
rorb
adc
mov
mov
sbbb
addr16
or
xchg
mov
adc
js
mov
aad
mull
xor
xchg
mov
jae
arpl
setp
xchg
sbb
pop
inc
dec
insb
push
sbb
std
cmp
or
cmc
mov
mov
adc
and
push
gs
pusha
add
rorb
mov
mov
lods
cmpl
jbe
mov
jg
or
adc
cmp
jbe
addl
mov
dec
mov
xchg
adc
jnp
fisubs
mov
shlb
lods
xchg
inc
imul
push
cld
and
sbb
out
orb
dec
shlb
jno
xchg
addr16
mov
adc
imul
andb
xor
jo
and
adc
mov
fisttpl
dec
sbb
arpl
sbbb
push
and
fsubl
dec
outsl
push
cltd
adc
addr16
adc
mov
lahf
push
cltd
popf
insb
test
aas
cmp
fcmovu
mov
int3
sub
mov
loope
mov
repz
push
pushf
loope
pushf
and
xlat
mov
mov
mov
sarb
mov
sbb
mov
mov
push
cmpsb
dec
out
pop
mov
nop
adc
mov
sbb
fldt
sbb
adc
mov
mov
test
mov
xchg
push
mov
popa
jno
mov
push
adc
stos
push
in
inc
insb
pop
int
push
pop
add
cs
pop
and
les
sbb
inc
movsl
test
lods
mov
mov
push
pop
ret
cwtl
pop
movsb
sbb
inc
in
mov
into
repnz
push
loope
and
pushf
mov
inc
mov
mov
je
or
xor
mov
xchg
cli
push
add
imul
dec
mov
inc
repz
jo
fsubrl
xchg
adcl
mov
xchg
imul
out
adc
cmc
mov
ret
mov
shrl
lods
dec
pop
adc
daa
in
jecxz
jno
outsb
lds
jge
xor
xor
jae
fwait
push
sub
push
fildll
jb
xchg
out
sub
fildll
jp
imul
xchg
popf
mov
daa
stos
or
pop
ljmp
or
sbb
ja
xor
inc
popf
add
sub
cmc
xchg
mov
push
popa
mov
xor
mov
push
pop
or
fadd
addr16
cmp
pop
mov
aaa
popa
rolb
pop
lds
test
cwtl
js
cmpsl
test
dec
jo
sbb
xchg
add
int3
arpl
enter
gs
addb
add
hlt
mov
sbbb
pop
das
or
sbb
cmp
push
jnp
adc
cmp
and
jbe
and
cmpl
push
mov
mov
push
lods
jge
test
jne
jl
cmpsb
xchg
xchg
or
and
jle
sbb
adc
and
cltd
dec
or
hlt
push
mov
xlat
and
dec
fsubrl
test
cmp
cltd
data16
lret
imul
iret
ja
popf
xlat
mov
adc
movb
mov
int3
dec
mov
mov
mov
iret
push
dec
idivb
sbb
sbb
sbb
push
dec
inc
enter
cld
rcrl
cld
int
jae
pop
and
test
testb
inc
into
cltd
cwtl
shlb
xlat
xchg
iret
test
mov
aad
repnz
mov
jl
outsb
or
xchg
js
pop
js
rol
sub
test
jge
iret
insl
lret
push
add
and
cmp
test
jnp
adc
in
shrb
mov
fstl
cltd
in
mov
into
xchg
scas
sub
mov
addl
push
jle
jbe
rclb
cltd
aas
sub
ret
and
movsb
fdivl
sbb
pop
popa
sti
cli
pop
dec
mov
pop
xor
popa
mov
xchg
sbb
pusha
inc
push
mov
sub
ret
fs
imul
adc
es
jns
cmpsl
jl
in
jne
mov
aaa
jmp
ret
mov
shrb
outsl
jbe
pop
cwtl
rorb
cmc
add
sti
ss
mov
push
ss
cmp
pop
sar
lea
out
and
mov
mov
fiaddl
icebp
daa
cmp
cmp
pop
xor
sub
insb
mov
vpsubusb
jge
adc
aas
lods
pushf
inc
inc
into
sbb
push
sbb
fadd
xor
push
lock
cmpsl
pop
loop
lods
mov
push
pop
out
mov
push
pop
sbb
clc
or
mov
loop
movsl
andl
mov
add
mov
movsl
pop
mov
movsl
daa
es
bound
push
cmpxchg
in
jb
pop
push
filds
imul
cmpsb
lea
xchg
and
sub
hlt
sbbl
cmp
add
cmp
ss
adc
mov
inc
cwtl
adc
mov
incl
sub
aas
cltd
xlat
cmpsb
cmp
outsl
out
inc
mov
sub
dec
push
adc
mov
pop
and
call
sbb
cmp
jno
dec
lcall
adc
in
gs
gs
mov
arpl
jnp
pop
push
mov
inc
shll
frstor
mov
mov
add
inc
addr16
movsb
sbb
out
data16
mov
dec
inc
adcb
leave
and
sti
dec
cld
ret
fldt
cmpsl
insb
lds
mov
jbe
scas
aad
and
mov
sub
sub
outsl
stc
lods
shlb
jle
gs
or
inc
iret
arpl
fdivs
adc
jno
and
sub
bound
lods
test
fmull
fwait
add
jmp
nop
and
pusha
xor
xchg
ljmp
xchg
mov
insb
outsl
nop
into
test
scas
iret
leave
scas
icebp
or
xchg
mov
jnp
sbb
in
rorb
cmp
lods
test
mov
xchg
push
stos
add
mov
lret
fprem1
test
imul
cltd
dec
xchg
aaa
or
cmpsb
popf
je
jp
xor
cmpsb
jge
mov
mov
orb
jle
outsb
push
push
add
outsl
push
data16
xchg
popa
icebp
scas
mov
stc
mov
popa
push
push
sub
mov
aaa
pop
nop
leave
mov
adc
mov
fucom
sub
fsts
ss
add
out
hlt
jbe
xchg
lock
adc
mov
paddb
cltd
call
xor
xlat
lock
subl
or
and
data16
dec
xor
std
pop
fnstenv
cs
xor
pop
cltd
pop
shrb
std
sbb
scas
adc
inc
push
ds
push
jge
popa
sbb
leave
adc
lods
movsb
push
ret
addb
data16
and
sub
cmpl
push
pop
and
in
mov
out
jb
mov
mov
orl
adc
dec
in
mov
imul
xchg
jmp
push
or
jnp
test
xchg
xlat
or
sub
cld
mov
jge
lods
inc
fnstenv
xorl
jbe
repz
xor
mov
and
lock
mov
cmp
bound
xor
cwtl
mov
xchg
pop
lea
test
xchg
test
lcall
ror
add
pop
fstl
sbb
mov
push
std
push
push
add
pop
aam
icebp
es
imul
mov
sub
jns
ss
adc
popa
movsb
outsl
inc
sbb
add
lret
and
xor
dec
lea
sub
mov
xchg
lcall
adc
pusha
or
mov
daa
addr16
in
mov
inc
jl
je
icebp
mov
movsb
and
pusha
dec
mov
fisubrs
mov
xchg
and
mov
dec
sti
movsl
cmpsb
outsb
lods
insb
outsb
xor
cmp
aad
jg
fs
xor
add
mov
xor
mov
fs
cmp
mov
xchg
jns
in
xchg
jg
aaa
jns
mov
jno
in
cmpsb
jo
mov
sbb
xchg
jge
test
mov
xchg
or
cmp
cwtl
sub
lea
lds
sub
insl
ds
addr16
jo
gs
lea
std
ss
sub
in
ljmp
push
loope
testb
cli
sub
rol
jne
cmpsb
adc
bound
jo
adc
arpl
jle
adc
int3
push
lahf
xor
std
stos
pushf
into
test
repz
jns
add
xor
cmp
sub
outsb
sub
inc
dec
xchg
mov
lds
addr16
sub
outsl
add
into
jae
cltd
jmp
lret
pop
or
das
sbb
dec
movsl
clc
ret
xchg
mov
inc
jb
xor
jp
cmp
loopne
in
add
add
aam
or
daa
mov
sub
insb
outsb
imul
in
inc
and
das
add
cld
xor
daa
movsb
jecxz
push
xchg
push
mov
and
pusha
add
cmpb
insl
or
je
sbb
or
pop
cld
mov
push
dec
and
lret
cs
mov
arpl
int3
add
sub
lahf
sub
bound
je
mov
leave
sub
xor
int3
cmp
imul
inc
cmp
test
mov
aad
scas
lods
iret
mov
movsl
das
mov
rcrl
sub
jbe
push
mov
push
mov
jge
sub
lds
ret
nop
add
in
imul
insb
dec
push
mov
std
pushf
mov
mov
push
and
out
jbe
out
nop
rclb
orb
insb
loope
push
mov
int3
mov
add
or
lret
or
shll
testb
daa
mov
ljmp
mov
xchg
jle
push
or
and
andb
lret
inc
ja
dec
sub
leave
inc
mov
fwait
addb
mov
ret
jbe
cs
les
pop
adc
ds
sbb
push
mov
ret
sbb
aas
std
dec
jmp
sub
cli
fstpl
mov
jp
jb
outsl
mov
aam
repnz
push
pop
inc
jns
pop
clc
jl
sub
cmpsl
loope
jno
pop
sbb
ds
inc
jne
inc
inc
aad
ret
and
int3
pop
pushf
push
add
pop
enter
pop
mov
inc
repnz
mov
xchg
bound
pop
data16
data16
xchg
pushf
lock
adc
ds
xchg
inc
outsb
in
dec
or
mov
xorl
sbbl
loopne
es
push
adc
lahf
jno
mov
jl
pop
cmp
loop
loopne
sub
imul
sarl
xor
mov
gs
xchg
in
add
fmul
les
fdivrl
test
addb
addr16
nop
mov
scas
pop
inc
sbb
jle
lret
jno
into
loop
js
mov
pop
jbe
jae
inc
push
xor
jmp
rcl
jo
mov
nop/reserved
dec
dec
into
xchg
out
cmc
mov
add
shrl
cmpsl
or
test
popa
jnp
insb
sub
neg
adc
mov
ret
decl
repz
cmp
or
clc
sub
dec
push
insl
or
add
mov
rorb
mov
ja
adc
mov
rorl
sbb
outsl
and
out
sub
adc
cmpsl
test
outsb
fldenv
test
sbb
jae
cmp
inc
fs
sahf
push
mov
std
or
inc
lea
rcr
push
sbb
mov
or
leave
loopne
loopne
lods
addr16
filds
dec
inc
arpl
mov
dec
shl
or
and
mov
fistps
imul
add
inc
push
mov
sbb
repnz
jp
mov
int
movl
call
imul
pop
and
xchg
insl
fwait
xchg
inc
or
cmp
mov
push
fstps
test
lret
fs
and
jmp
push
into
sub
int3
sbb
clc
es
sbb
stc
mov
sbb
out
push
push
iret
std
rol
mov
mov
popf
call
adc
stos
xchg
inc
es
dec
rcr
xchg
mov
rorb
pop
pusha
in
pop
fcmovb
sub
test
mov
xor
mov
icebp
push
mov
push
adc
mov
jp
add
pop
ret
inc
outsb
ss
mov
and
test
js
not
cwtl
mov
jl
loope
mov
push
dec
xlat
ret
gs
lods
xor
cmpsb
xchg
cs
mov
shr
jle
push
clc
sub
and
jne
jge
jge
sub
pop
imul
xchg
inc
js
pop
lret
sahf
pop
add
xlat
sub
xchg
xchg
and
xchg
ficompl
adc
lahf
mov
push
or
test
mov
mov
aad
jb
xchg
leave
gs
jne
je
arpl
fs
mov
pop
add
push
push
test
or
push
dec
lret
fisttpll
sahf
dec
or
sbb
add
add
cmpsl
cmc
cmp
sbb
mov
fnsave
daa
int
repnz
shlb
mov
outsl
scas
inc
jmp
scas
cmpsb
sub
sbb
mov
je
lods
and
mov
add
xor
jo
cmp
cld
jbe
insb
push
dec
lock
sar
xlat
in
popf
sahf
dec
xor
push
pop
adc
pop
scas
pushf
aad
jno
lea
jae
mov
jle
mov
xchg
je
cmp
cmpsb
arpl
stos
imul
pusha
dec
pop
ret
jle
adc
punpckldq
insb
xchg
loope
add
lret
add
inc
js
xor
imul
adc
lock
add
adc
nop
push
cmpsl
adc
ficoms
addr16
mov
pusha
inc
outsl
push
xchg
test
dec
sbb
in
jno
je
insb
adc
push
test
push
mov
fcompl
jle
pop
cmp
add
out
nop
nop
xor
inc
insb
or
mov
adc
test
mov
jnp
lcall
xchg
sbb
and
sub
adc
lods
mov
jo
jae
or
jae
fsubrl
mov
popf
std
stc
lret
jle
pop
add
sbb
enter
dec
dec
lea
or
ja
push
nop
in
test
push
int3
lock
fs
mov
jnp
inc
inc
aas
sbb
mov
cltd
inc
sub
push
add
inc
dec
push
fadds
jg
dec
insl
test
fwait
sbb
cwtl
push
sub
fmuls
lret
mov
cmpl
fdivl
sub
push
jmp
dec
ficompl
aas
push
out
and
inc
adc
leave
jmp
mov
jl
enter
xchg
out
sbb
and
shrl
subb
out
jg
cmp
push
jp
in
and
mov
cmp
scas
mov
movsl
cld
mov
xchg
dec
push
sarl
xchg
icebp
mov
cmpsl
out
cmp
les
scas
pushf
stc
dec
rcll
lds
movsb
loopne
push
mov
leave
push
cmp
stos
jbe
fcomp
ret
insl
aad
in
mov
jbe
pop
repz
jno
mov
pop
jno
cltd
loopne
enter
cmc
jo,pn
dec
mov
cmpsb
aad
mov
xor
repnz
sbb
leave
pop
les
cmpsb
scas
fstl
xor
jno
std
mov
dec
clc
dec
pusha
flds
test
lods
or
gs
or
xchg
test
or
xor
repz
xchg
mov
dec
add
mov
jb
pop
dec
or
adcl
mov
jo
test
pop
xor
push
jb
pop
nop
ret
hlt
xchg
insl
rolb
icebp
aaa
nop
dec
mov
mov
out
sbb
pusha
lcall
mov
xchg
arpl
add
stos
pusha
aaa
mov
pop
cltd
jbe
inc
mov
jg
xor
or
popl
orb
cmp
scas
ret
sub
push
mov
lods
fnstcw
sub
out
jne
pusha
in
push
jnp
inc
mov
xchg
jne
movsl
xchg
int
inc
popf
test
cwtl
lods
call
and
call
sub
aaa
pop
insb
movsl
add
popa
inc
adc
test
ja
enter
sti
jge
sbbl
daa
fmuls
adc
cmp
ja
xor
xor
push
into
jmp
arpl
xor
mov
dec
lds
aaa
xor
clc
mov
loopne
shl
in
pop
sbb
jnp
add
xor
popf
jb
add
xor
jl
icebp
ds
popa
aad
pop
jns
fmuls
xchg
outsb
inc
jp
test
lock
xchg
mov
mov
jnp
add
pop
scas
xchg
dec
cmpsb
jmp
fldt
jle
mov
jecxz
push
test
pop
pop
add
repz
call
add
add
in
xor
sbb
dec
in
lcall
lret
mov
pushf
fwait
mov
cmp
pushf
mov
test
mov
out
pop
sub
mov
xchg
test
push
xchg
rcl
int
xchg
pop
sub
mov
cmp
scas
fbld
xor
arpl
test
push
sub
sub
shlb
test
push
pushf
mov
fadds
dec
ja
enter
icebp
fstl
shlb
inc
mov
daa
sbb
push
insl
fidivs
jbe
aad
mov
mov
or
test
mov
jg
xor
addr16
je
xor
xchg
and
test
or
cmp
sarl
mov
sub
cmp
sub
xchg
inc
scas
jle
xor
popa
cld
and
xor
lea
rol
call
mov
sub
xchg
xchg
xchg
mov
xor
push
jbe
aad
inc
pop
fistpll
aaa
jp
jg
adc
cmp
sub
mov
xor
in
cmpsl
adc
test
and
jns
push
scas
push
and
pop
jnp
add
imul
pop
in
jno
xchg
and
xchg
test
push
mov
fcoml
xor
in
out
xlat
fld
adc
mov
push
leave
sti
pop
nop
lds
es
xchg
mov
in
push
jae
out
mov
aad
adc
cmp
dec
push
xor
mov
outsl
lcall
cmp
test
loope
mov
out
in
inc
jo
leave
mov
shlb
loope
testl
aas
jp
int
rcrb
cltd
int
sbb
jp
outsl
idivl
out
adc
jbe
xchg
dec
jg
cmpsl
fdivs
jmp
sub
dec
cli
out
pop
xor
shll
cmp
jno
add
xchg
ss
inc
jmp
cmp
scas
popf
adc
fistl
enter
movsl
inc
mov
or
xor
cmc
inc
out
jno
add
fbstp
ja
and
push
push
pop
cltd
daa
mov
push
sbb
lock
dec
or
popf
mov
and
ljmp
hlt
jecxz
mov
xchg
mov
lret
leave
cli
stc
or
test
mov
sbb
addr16
pop
clc
cmp
ret
mov
lock
sub
call
ret
pop
mov
push
mov
xorl
nop
aaa
cltd
shll
addr16
adc
push
sub
cmp
in
cli
inc
jae
sbb
insb
sub
fs
insb
mov
jae
cmpsb
inc
in
fsubl
xor
push
push
std
push
rclb
sbb
aaa
sub
insl
scas
push
sub
shlb
imul
jle
lds
push
fst
cmpsb
into
push
icebp
add
stos
xchg
movsb
xor
bound
pop
imul
push
mov
in
mov
pop
xchg
mov
inc
sub
movsb
mov
aad
inc
cltd
xchg
cmp
dec
cld
mov
lret
leave
mov
pusha
mov
aam
ja
ds
cmp
pop
inc
pop
push
lods
dec
nop
in
aaa
sbb
mov
rcll
or
imul
sti
mov
jbe
sub
inc
dec
bound
ja
rorl
fscale
mov
ja
add
jo
jmp
adc
xchg
add
and
lock
out
sahf
and
adc
sbb
fwait
mov
mov
into
cmp
imul
shrl
dec
rorl
pop
cltd
mov
xchg
outsb
fs
jnp
cmc
pop
aad
imul
and
dec
lods
jno
aad
rcrb
xchg
cltd
mov
inc
rcr
cmp
mov
xchg
mov
dec
lret
jnp
mov
dec
test
je
bound
fdivs
push
loope
sub
lret
inc
inc
lret
xchg
jne
sbb
insb
lock
adc
inc
xor
cwtl
sub
aad
push
inc
ret
mov
xchg
cmp
sbb
jo
in
scas
mov
call
jmp
hlt
sub
xchg
das
enter
inc
scas
fmul
inc
and
or
sub
sbb
push
loope
in
cmp
les
jne
sbb
bnd
cmc
testb
fistl
mov
arpl
addr16
xor
data16
dec
out
or
cmpsb
or
mov
outsl
mov
fisttpll
mov
std
add
and
or
ljmp
jge
xor
jae
pop
iret
mov
imul
rol
inc
out
sub
lahf
mov
xchg
out
sarl
int3
popa
into
repz
out
mov
cwtl
mov
lret
mov
inc
loop
in
cmc
or
mov
mov
shrl
cmp
in
cmp
cltd
cs
outsb
fisttpll
cmpsl
inc
mov
test
je
jb
fstps
lahf
sbb
mov
inc
xchg
insl
stos
loopne
les
call
shlb
adc
jo
xchg
adc
mull
sti
jg
cmp
aam
cld
push
shll
addr16
subl
movsb
jne
mov
adc
aam
add
xorl
jg
mov
cmpsl
jb
sub
out
cwtl
cmpsb
test
inc
and
xchg
movsw
movsb
mov
js
daa
mov
ror
xchg
sub
jecxz
add
insl
cmp
or
add
push
test
lea
cwtl
gs
adc
add
xor
mov
and
das
mov
std
sbbl
sbb
xor
inc
or
pop
insb
hlt
pop
popa
xchg
jns
sbb
and
popa
cmp
ficomps
push
add
push
jnp
cmp
repnz
int
sbb
pusha
add
dec
repz
sti
push
pop
enter
test
jns
addr16
subl
arpl
icebp
fmull
mov
or
xchg
mov
adc
xlat
dec
into
sbb
in
sarb
pop
jne,pn
sbb
sub
icebp
lcall
aam
test
in
adc
imul
mov
out
jecxz
adc
jo
jo
xor
mov
addl
push
imul
in
out
add
add
mov
icebp
sub
daa
xchg
les
pop
push
jle
sub
testl
adc
cmp
imul
mov
in
dec
dec
jno
int3
fnstsw
push
negl
push
sbb
in
mov
mov
int
inc
jno
lock
enter
gs
outsl
stos
mov
dec
fucom
push
push
ljmp
jae
dec
fst
sar
cmp
stos
dec
cs
lods
add
in
call
cmp
or
pop
outsb
icebp
je
dec
jo
into
pushf
pop
das
mov
add
test
xchg
repz
js
mov
push
pop
data16
xchg
loopne
add
fwait
adc
jnp
dec
adc
jae
push
sbb
or
sub
pop
inc
cltd
push
pop
xor
lcall
sbb
mov
add
cmp
jo
dec
pushf
rol
push
sub
in
fucom
divl
inc
inc
notl
inc
movsl
fadds
xchg
fldln2
mov
shrl
sub
push
sub
cmpsb
cli
aad
divb
jno
sub
mov
mov
pop
imul
mov
test
dec
mov
xchg
jno
rcrb
int
test
xchg
xor
cwtl
jb
idivl
loope
dec
mov
push
mov
test
in
dec
sub
add
lahf
add
jbe
jecxz
sub
jecxz
pop
or
movsl
pop
push
outsb
xchg
xor
jl
inc
mov
adc
xchg
es
pushf
jne
cmpsb
cmpl
dec
in
fwait
jp
mov
mov
or
nop
rcl
jo
out
mov
popf
pushf
pop
bound
sub
into
add
inc
out
push
or
hlt
out
mov
mov
mov
gs
data16
cwtl
pop
or
xchg
rcrl
sahf
cwtl
xchg
fsubrl
pop
nop
mov
outsl
sbb
ja
fbld
pop
movups
clc
mov
lock
inc
repz
mov
jnp
lret
ret
sti
inc
jns
mov
ret
cmp
jle
cld
xorb
push
mov
fwait
out
in
test
mov
inc
jmp
fbstp
cmpsb
inc
jns
ljmp
je
rcrl
inc
cmpsb
clc
cmp
and
repnz
add
jno
push
rorb
mov
push
icebp
mov
shlb
push
call
stos
lret
jnp
xor
inc
rcl
push
std
outsl
cmp
shll
and
fisubl
mov
pop
std
insb
dec
xchg
sub
sarl
jnp
xorl
dec
xchg
fdivr
fstpt
imull
cmp
jne
mov
pop
push
fsubrs
jnp
jb
test
add
xor
push
dec
shll
dec
scas
lcall
xchg
fs
adc
rol
into
inc
push
sbb
mov
int
mov
test
test
and
inc
test
daa
gs
cmc
fisttpll
outsl
pusha
in
fisttps
mov
jmp
lds
push
imul
pop
pop
int3
ja
stos
or
and
cld
ljmp
bound
fstpl
jp
jnp
and
in
inc
int3
or
daa
lods
inc
mov
xchg
dec
pop
or
into
push
push
sahf
add
cmp
repz
es
lcall
mov
adcb
je
xchg
adc
jne
mov
addr16
jae
scas
sub
push
inc
es
loop
imul
push
or
mov
je
jae
dec
and
clc
jle
mov
push
push
lret
mov
mov
push
inc
add
fs
dec
cmpsb
test
inc
jo
test
push
pop
mov
mov
aad
jnp
cltd
xchg
adc
neg
jl
mov
adc
xlat
dec
xor
sub
icebp
sar
xchg
dec
mov
sbb
repz
cmc
pop
sbb
out
icebp
call
pop
sti
cmc
xlat
aam
sbb
and
xchg
dec
imul
mov
jae
xchg
inc
and
pusha
xor
push
in
insl
jl
mov
sbb
push
push
push
lods
divb
xor
fstp
out
jbe
jo
xchg
and
push
movsb
cmp
mov
ret
jno
arpl
jmp
add
add
or
int
sub
pushf
scas
popa
lock
pop
out
mov
or
jae
in
add
push
ret
mov
aaa
mov
insl
sub
lods
mov
mov
xor
test
jno
imul
fsubrs
add
into
scas
adc
scas
popa
cs
pop
cwtl
xor
add
sarb
jg
xchg
inc
xchg
adc
repz
std
push
fs
out
ljmp
out
stos
jno
sbb
cmp
mov
push
cltd
sti
xchg
and
pop
push
and
cmpsb
mov
gs
sbb
popa
mov
inc
loope
xor
aam
inc
fstpl
ss
xchg
das
xor
sti
clc
push
mov
cli
repz
outsb
add
mov
aaa
mov
ljmp
es
ds
sarl
lahf
xor
mov
jbe
iret
and
cmpsb
mov
popl
add
xor
push
mov
push
sub
daa
lods
ds
pop
mov
push
inc
leave
ss
pop
push
clc
lcall
mov
outsl
sbb
xchg
cmp
leave
and
and
add
mov
popa
ficoml
or
leave
out
pop
add
pop
aam
out
and
movsb
mov
xor
sbb
divl
inc
mov
or
fs
jbe
fs
jb
pop
inc
daa
out
daa
repnz
lods
mov
enter
dec
lock
outsl
pop
fnstsw
xor
aas
pop
pop
inc
shrb
ds
push
and
jne
or
jo
dec
inc
jb
call
scas
gs
lea
xor
and
outsl
cmpsb
aas
xor
dec
jns
fwait
adc
mov
lea
stc
and
adc
dec
pop
pusha
lahf
xor
imul
cmc
mov
pop
stc
cltd
rcll
popa
inc
dec
mov
repz
push
cmpsb
dec
mov
mov
hlt
test
pop
add
out
jns
xor
xor
inc
inc
mov
fldt
pushl
inc
imul
inc
push
push
xchg
icebp
jg
adc
scas
cwtl
lcall
outsl
aam
jmp
add
sub
mov
jbe
and
outsb
outsb
test
aad
cli
mov
dec
add
aas
shrb
stos
sub
cltd
jge
aad
sti
mov
jp
int
loopne
ret
mov
out
sub
test
xchg
push
dec
mov
or
outsb
sub
loopne
jle
mov
imul
aas
sub
sub
es
xor
sub
xor
lret
or
jmp
jp
cli
xchg
push
rolb
push
movsb
pushl
insb
lahf
cltd
adc
leave
mov
incl
mov
mov
mov
sbb
jmp
mov
scas
mov
rorl
cmp
dec
out
jg
testb
xor
sbb
push
and
cld
xchg
and
dec
mov
popf
or
and
push
or
or
xlat
xchg
cld
dec
ret
adc
pop
jnp
xor
cli
xor
outsb
dec
xor
mov
das
and
bound
data16
mov
leave
lret
and
sbbl
pusha
jbe
leave
ja
push
incl
je
ret
cmp
adc
bound
stc
test
and
in
add
rcll
mov
jp
cmpsl
iret
fs
adc
push
call
scas
xchg
data16
pop
cltd
repnz
xchg
jecxz
sbb
lret
fiaddl
ja
and
in
and
dec
pushf
sbb
popa
jmp
cli
dec
bound
mov
inc
enter
mov
cwtl
cmp
add
sub
call
in
gs
jecxz
pop
stc
pusha
mov
and
adc
pop
pop
dec
das
loop
mov
push
push
pop
push
cld
mov
sbb
int3
mov
in
cmp
outsl
adc
push
insl
sub
loope
mov
das
push
push
nop
imul
sub
int
inc
add
push
and
or
push
sahf
or
jg
xchg
jge
mov
or
adc
mov
sub
inc
jl
jecxz
jl
push
jb
das
daa
and
sahf
mov
leave
rolb
divb
int3
mov
mov
nop
clc
mov
nop
loope
push
inc
sub
aad
cmpsl
in
sbb
sub
testb
in
stc
pushf
jae
and
pop
inc
stc
pop
pop
icebp
pop
mov
leave
in
dec
inc
pop
add
inc
data16
mov
into
pop
jne
mov
lock
add
pop
je
mov
movsb
das
scas
sub
cmp
gs
dec
push
push
xchg
cld
xor
lret
mov
dec
insb
or
adc
xchg
pop
rcl
xchg
das
push
lock
imul
sub
and
fstl
and
insb
fdivs
std
mov
mov
push
repnz
daa
mov
inc
mov
clc
jbe
call
movsl
xor
xor
and
cwtl
dec
dec
sbb
jp
dec
pop
lcall
stos
cmp
push
xor
sbb
in
dec
and
adc
xchg
or
pop
and
dec
mov
ds
outsl
xorb
mov
movsw
inc
mov
and
lods
mov
inc
test
hlt
pop
jp
and
pushf
mov
xchg
jle
inc
lret
adc
inc
jb
or
xlat
insb
imul
dec
repz
jns
or
call
shll
sub
adc
frstor
xchg
and
fst
shlb
lods
imul
pusha
xor
out
repz
ret
repnz
subb
xchg
jg
add
xorl
dec
cmc
shl
xchg
and
pop
dec
inc
mov
push
ret
and
mull
mov
push
sub
or
mov
cmp
cmp
dec
lods
dec
aad
arpl
sub
rcl
adc
scas
sbb
pop
adcb
cmpxchg
xlat
movsl
cmp
and
add
add
mov
push
aas
orb
mov
fucom
push
mov
jbe
repz
mov
fs
sub
jne
imul
jae
mov
mov
mov
ljmp
pop
or
jge
dec
decb
fisttpll
cmp
xchg
pop
icebp
movsb
and
pop
fucom
in
ja
cmpl
mov
jl
xchg
fs
sbb
jg
cmp
mov
pop
add
push
bound
pusha
jle
clc
mov
imul
and
xchg
cltd
xchg
and
scas
pushf
je
lcall
xchg
jne
inc
jo
outsl
sahf
aaa
jmp
sub
cwtl
loopne
mov
sbb
in
scas
loope
rcrl
push
hlt
stc
ret
daa
mov
hlt
outsb
shrb
jecxz
inc
fdiv
addr16
inc
xor
cmp
cmc
in
mov
stc
xor
pop
aas
ror
pop
fldt
inc
daa
mov
aam
pusha
out
in
mov
fimull
jle
loop
mov
sbb
sbb
jl
or
jns
push
and
sub
jecxz
mov
sub
fnstcw
in
sub
sub
popa
or
test
inc
adc
xor
cmpl
dec
mov
hlt
mov
mov
popf
cwtl
inc
outsl
mov
push
pop
cmpsl
mov
xchg
dec
jb
rclb
inc
call
mov
int3
xchg
push
enter
jge
lret
pop
stos
mov
or
dec
adc
pusha
mov
dec
hlt
mov
inc
adc
inc
or
sub
inc
lods
dec
push
jecxz
mov
divb
pop
enter
lods
and
adc
xchg
les
shrb
ds
cmc
pop
pop
cld
lret
mov
jb
inc
test
mov
lds
cmp
rclb
imul
dec
xchg
pop
and
push
mov
ljmp
subl
divl
push
mov
mov
sbb
add
inc
aad
mov
iret
fsubs
pop
adc
mov
or
add
pop
lds
aam
mov
insl
repz
in
scas
cmpsb
and
mov
pslld
xor
popf
pop
std
mov
jno
ret
movsb
add
mov
sbb
imul
mov
into
mov
pop
mov
ja
jp
or
std
xchg
xor
jae
push
dec
daa
lods
add
xor
aam
data16
xor
repnz
mov
test
dec
mov
xor
adc
outsb
jp
ja
bound
lea
push
pop
push
add
pusha
lcall
push
cltd
daa
jae
or
pusha
cmp
xchg
push
add
nop
fldl
adc
inc
hlt
insl
sub
insl
push
jbe
sarl
mov
lret
jns
dec
mov
push
mov
pop
inc
and
movsl
mov
mov
sub
ret
xchg
icebp
int
pop
fwait
or
mov
ret
sarl
insl
or
push
lahf
out
ret
mov
fsts
sub
mov
sbb
xchg
mov
inc
test
scas
inc
cmp
push
inc
dec
fcompl
jecxz
or
xor
sbb
adc
inc
out
imul
aaa
scas
sub
ret
data16
roll
shrl
frstor
add
cmp
push
call
cmc
int3
and
push
sbb
xchg
vmovss
dec
sbb
arpl
fldenv
xchg
movsl
adc
js
popf
pop
inc
sbb
ret
cld
testl
fidivrl
xchg
rol
cmpb
or
mov
jp
popa
or
cmc
sbb
adc
mov
pop
in
rcl
fadds
pop
mov
scas
push
push
jae
jle
sbb
pop
mov
or
mov
mov
fiadds
push
and
out
loope
and
jno
sbb
sbb
mov
cmc
sub
push
into
imul
dec
pushf
pusha
lods
int
imul
sbb
mov
cli
aaa
int
and
add
outsb
aam
dec
add
sbb
mov
in
je
inc
shl
inc
fbld
dec
mov
jbe
cmp
add
in
fs
andl
andb
push
les
and
fistps
test
inc
dec
sarl
adc
jae
mov
sbb
and
jae
cli
idiv
jns
stos
add
sub
insl
into
mov
push
je
jbe
jns
dec
or
push
faddl
sub
jno
mov
je
loopne
scas
outsb
enter
rolb
loopne
mov
jno
rorl
fsubrs
inc
cmpb
les
sub
fldl
ret
push
pop
cli
push
adc
or
inc
push
ja
xor
push
lret
xchg
mov
lds
imul
adcl
mov
outsb
push
es
adc
lret
push
mov
mov
outsb
shlb
js
outsl
jno
js
sub
inc
dec
cmc
or
mov
fwait
push
icebp
inc
sbb
mov
in
sbb
xchg
pusha
bound
pop
xor
pop
aaa
mov
icebp
and
inc
add
inc
cmp
xchg
or
movsb
sbb
inc
popf
jo
js
add
pusha
jbe
cld
cmc
into
into
mov
jno
out
xchg
dec
stc
sti
push
sbb
inc
inc
in
lret
sub
shlb
fldt
dec
xchg
or
fwait
sbbl
cmp
enter
dec
enter
inc
push
fnstcw
repnz
push
lret
imul
lret
mov
adc
or
adc
xchg
mov
outsb
adc
lods
mov
cmp
and
adc
shrb
notb
insl
sub
mov
mov
mov
js
imul
ficoml
fildll
dec
loopne
cld
ja
cwtl
adc
mov
jp
aad
sbb
sub
inc
fildl
push
nop
mov
jnp
pop
mov
pop
sbb
push
movsb
ret
or
cmc
jae
mov
mov
pop
sub
imulb
lods
fistpll
sub
test
xchg
or
jge
xor
jle
lcall
pop
jle
fiadds
shrb
dec
in
cwtl
push
stos
push
inc
loop
xor
pop
popa
pop
push
push
loope
jle
inc
clc
rcrl
inc
icebp
testl
xchg
sbb
cmp
lock
mov
je
jecxz
cmpsb
sti
ret
cld
test
fneni(8087
gs
test
push
mov
mov
lcall
not
mov
inc
adc
or
int
xor
push
sub
dec
movb
outsl
lds
lcall
popa
mov
add
xchg
mov
sbb
gs
lods
xor
lret
test
out
mov
nop
movsl
jp
out
sbb
out
insl
lcall
idivb
and
adc
cmp
jb
xchg
inc
mov
cs
jno
push
shll
iret
jbe
int
and
jnp
rorl
mov
xchg
shll
ret
adc
negl
pop
xchg
adc
add
push
idiv
rorl
int3
inc
jno
push
jp
cmc
add
inc
dec
xchg
dec
repz
mov
add
aad
push
xchg
xchg
cmp
inc
xchg
push
jle
pop
mov
inc
cltd
popf
shll
lock
daa
mov
mov
outsb
sub
or
sbb
and
movsb
addl
mov
jg
stos
dec
std
cs
push
fnstsw
sbb
les
in
dec
jb
xchg
add
mov
lods
or
xor
lock
stos
push
adc
jne
xchg
sbb
adc
mov
inc
inc
push
push
add
add
adc
dec
jb
stos
sbb
loope
sbb
in
dec
inc
or
pop
clc
fbstp
lret
sub
mov
dec
jno
add
mov
loopne
mov
inc
sbb
in
xor
xor
mov
lods
ret
sbb
pop
jae
dec
jno
xchg
xor
and
jecxz
subl
aam
xchg
cs
mov
jmp
sbb
fisubrs
push
mov
mov
pop
push
psubsb
or
and
in
inc
fildl
pop
or
pop
clc
jl
incl
leave
sar
pop
negl
cltd
je
cmc
adc
sub
movsb
fsubl
js
or
adc
lods
mov
out
pop
xchg
xchg
xor
les
scas
clc
ret
inc
jo
sbb
and
nop
je
add
push
out
bound
xchg
pop
xor
ds
lods
shlb
mov
jg
lahf
pop
jg
in
add
add
stos
and
stos
sbb
jmp
negl
xchg
inc
cs
mov
inc
xchg
sub
push
or
xor
lcall
jae
push
jnp
stos
add
inc
gs
addl
jno
push
stc
fwait
xor
imul
mov
sahf
push
lret
add
pushf
adc
dec
pushf
inc
jae
and
call
inc
push
xchg
repnz
and
shll
popa
in
jnp
xor
and
cli
push
jb
pop
jmp
jl
pop
fdivrs
rorl
or
inc
out
arpl
adcb
into
dec
adc
fcoms
and
gs
pop
xchg
sbb
add
cld
jnp
xor
testl
sub
ja
sub
orb
out
dec
inc
sub
out
jae
int3
dec
lret
inc
mov
inc
je
jecxz
and
daa
pop
ficoml
lods
cld
inc
insb
xchg
cmpsb
dec
cmpsl
add
ljmp
clc
xor
and
in
pushf
dec
and
insl
mov
jns
xchg
out
sub
sbb
ja
push
pop
test
or
jns
mull
test
movsb
cwtl
mov
inc
mov
movsl
add
xchg
jg
ja
movsl
imul
ja
std
jle
and
adc
movsb
and
cld
cwtl
push
insb
rclb
inc
out
arpl
insl
xchg
test
mov
shlb
cmp
clc
inc
jnp
je
nop
jb
push
jecxz
mov
mov
int
cld
icebp
roll
and
arpl
sbb
dec
add
xchg
add
or
pop
int3
lgs
inc
lock
xchg
jbe
mov
imul
xlat
lret
mov
stc
sub
xlat
fidivrs
xchg
loope
imul
xor
inc
mov
and
repz
das
xchg
aam
inc
pop
mov
add
adc
gs
insb
out
add
outsl
dec
loop
in
add
push
aad
mov
sbb
adc
inc
ds
lahf
icebp
loopne
ret
dec
div
dec
lret
and
xchg
mov
inc
xchg
insl
or
jb
xchg
cmp
dec
xchg
scas
or
stos
or
and
int3
and
or
imul
enter
xchg
test
in
lods
add
imul
xchg
fistpll
push
dec
push
push
outsb
add
outsb
sbb
nop
fcmove
push
dec
add
int
sbb
add
xchg
stc
lcall
pop
add
stos
push
decb
xor
test
lock
fiaddl
mov
xchg
aad
movsl
pop
outsl
rcrb
fcmovnu
add
imul
ret
sub
test
sti
pop
inc
mov
sub
loope
stos
add
xor
ja
xchg
outsb
cmpsb
sub
fwait
sbb
nop
dec
loopne
ficoml
jge
sub
xchg
aaa
shrl
arpl
outsb
pushf
dec
mov
xchg
jno
xor
sbb
push
cmpsb
sbb
imul
imul
out
xchg
mov
mov
mov
or
sbb
int3
ficompl
movsb
mov
xchg
sub
mov
pop
imul
cmp
popa
pop
xchg
xchg
gs
jae
lcall
push
repz
jns
aad
push
dec
in
ret
xchg
jl
sbbl
mov
movsb
mov
aaa
push
fs
lahf
adc
loop
clc
and
sti
jecxz
cmp
mov
fiadds
jmp
push
pop
mov
and
add
lock
popf
pusha
and
sbb
lock
jbe
xchg
dec
fiaddl
stc
jnp
add
mov
fs
add
add
test
sbb
arpl
int3
jo
jge
std
dec
dec
clc
push
push
cmp
xchg
jns
out
pop
mov
push
sub
mov
fwait
inc
and
invd
dec
aaa
push
sub
jo
jo
test
popf
or
jns
push
xor
jb
mov
jne
sub
xchg
lret
jo
lods
push
jae
sub
mov
mov
jb
xor
jecxz
mov
sub
cwtl
sub
mov
out
notb
daa
shrl
jge
and
adc
stos
inc
sub
mov
sbb
pushf
test
jg
ljmp
jbe
jl
sbb
xchg
mov
add
loop
daa
pop
inc
xor
dec
cltd
nop
pop
sbb
jns
pusha
cmp
sbb
stc
add
push
xor
sarb
mov
add
xchg
inc
jecxz
sarl
sbb
cmp
fsubp
test
xchg
shrl
cmpsb
lock
xchg
je
int
push
mov
outsl
jb
xchg
jle
push
inc
imul
testb
out
sub
inc
sub
test
or
fwait
jmp
addb
mov
mov
add
lods
fs
inc
lea
push
mov
push
pop
jnp
ret
push
sub
jae
pop
dec
jmp
iret
sub
jl
hlt
mov
mov
leave
push
call
jl
scas
loopne
push
into
aaa
mov
cmp
push
fmull
insl
popf
xchg
call
mov
xor
cltd
jle
ljmp
insb
std
mov
xchg
push
mov
fs
cmp
jae
in
call
nop
jno
mul
inc
xchg
mov
cmp
xchg
jb
jl
int
scas
mov
cmp
jp
jnp
std
shlb
or
xor
popa
pop
inc
aaa
lret
add
and
jb
cmp
aaa
mov
add
dec
push
fs
cmc
daa
jg
repnz
cltd
cli
repz
xchg
flds
inc
cltd
xchg
into
out
jge
shl
or
int3
xchg
out
xlat
negb
js
ja
mov
aaa
les
jo
adc
cmp
cld
add
jp
sti
push
incb
mov
notl
xor
add
cltd
sub
jns
pop
cs
xchg
test
add
das
jge
arpl
jge
call
outsb
adc
dec
pop
ljmp
sbb
mov
repz
loopne
int
repnz
leave
lahf
dec
popf
mov
jb
insl
adc
pushf
filds
pop
out
in
dec
sub
incl
lods
jne
push
rcl
je
pop
sbbl
jecxz
pushl
das
or
dec
ret
sub
lock
cmp
push
inc
lret
pop
fimuls
jecxz
aaa
push
js
repz
jmp
in
lods
pop
dec
hlt
adc
add
push
push
pop
rcll
pusha
dec
int
stos
pop
lock
dec
xchg
orb
sbb
ds
cs
push
inc
or
or
int
and
pop
bound
and
jns
mov
pop
rcrb
jae
subl
mov
mov
imul
inc
mov
jne
mov
enter
sahf
add
xchg
sbb
and
xor
and
pop
rcrb
in
je
cmp
das
jmp
dec
push
push
mov
mov
jge
push
sub
lods
adc
popf
aad
inc
icebp
xchg
cmove
xor
xchg
or
les
dec
xor
loop
insl
sub
xchg
and
mov
lods
add
xchg
outsb
mov
or
xchg
dec
and
pop
scas
sbb
mov
dec
pop
shll
cmp
xchg
in
cmp
cmp
repz
cld
mov
incb
std
xchg
mov
pusha
sub
insb
push
repnz
inc
imul
call
xor
lods
stos
insl
ljmp
dec
int
ljmp
sbb
int3
outsb
imul
fs
and
out
cmpsb
cltd
mov
and
xchg
in
fwait
clc
and
push
fldt
adc
and
cltd
fldt
cli
ja
xor
and
stos
inc
inc
push
mov
fst
mov
mov
out
out
cli
mov
cmc
lcall
jmp
mov
and
ljmp
lahf
stos
mov
sbb
mov
data16
xchg
cmp
int3
stos
ret
xlat
add
arpl
cmp
pop
leave
xor
mov
inc
xchg
ret
faddl
movsb
add
xchg
mov
int3
jg
int
mov
aaa
je
shrl
dec
sbb
mov
xchg
fs
popf
and
pop
imul
cmp
xchg
popa
test
test
xor
lcall
test
popf
push
jne
push
and
sub
mov
aam
xchg
loop
and
bound
mov
fstps
xorl
or
stos
push
sbb
int3
xor
sbb
xchg
sbb
scas
sub
sti
xchg
shll
mov
xchg
mov
inc
cwtl
jmp
push
dec
imul
or
dec
movsb
cmp
iret
int3
xchg
imul
das
rorl
js
mov
divb
sbb
scas
mov
leave
or
jo
pop
pushf
sub
mov
out
enter
lea
leave
and
xchg
lret
inc
jmp
cmp
dec
ss
xchg
loopne
add
lret
sub
out
sub
cltd
pop
loopne
loope
lods
ds
add
frstor
imul
jnp
or
push
and
xchg
inc
sub
xchg
rclb
test
jo
jmp
mov
out
xor
out
dec
cmp
push
mov
mov
mov
js
add
test
repz
or
int3
lods
in
jmp
cmpsl
and
push
pop
jmp
pop
cmpb
repz
add
sbb
dec
pop
push
loopne
das
cmp
push
ja
enter
push
cltd
data16
les
das
sbb
jno
fisttpl
sub
push
dec
out
aaa
test
mov
je
fistpll
in
sbb
negb
fwait
clc
scas
lds
push
testb
push
adc
icebp
pop
stos
sub
cvtps2pi
jbe
and
insb
mov
jbe
fsubr
add
dec
mov
out
adc
imul
xchg
je
inc
les
and
jp
out
rcll
aad
pop
fisttpll
lcall
jbe
stos
popa
incb
cli
dec
xlat
add
xchg
insb
lret
mov
orl
cld
or
dec
inc
inc
pusha
shrl
leave
out
push
push
jo
pop
mov
adc
push
ds
ret
outsl
sub
or
stc
test
inc
dec
cmp
data16
and
xchg
test
stos
data16
sbb
jle
popf
lea
jb
xchg
inc
popf
cmp
mov
xchg
movsl
test
inc
pop
movsb
fimull
iret
nop
lea
addr16
daa
jecxz
add
mov
das
mov
push
push
movsb
push
inc
jb
dec
push
sbb
in
sbb
inc
inc
nop
js
leave
cmpsl
or
fisttps
mov
or
mov
sbb
into
cmpsl
mov
cmpsl
popw
insl
and
pop
jecxz
xchg
mov
sub
ljmp
ds
jnp
ja
jno
dec
sbb
aaa
in
fs
mov
jle
dec
push
cmp
mov
icebp
imul
xchg
andb
ds
inc
xchg
aas
jp
xchg
sbb
cmp
xor
push
fisubrs
xchg
push
cs
dec
jecxz
rol
dec
push
mov
xchg
inc
clc
ja
sub
jno
mov
jge
or
aad
inc
mov
mov
inc
mov
dec
sahf
xorl
test
mov
push
mov
cld
inc
sbb
cld
add
sbb
aam
or
repnz
jo
mov
xchg
pusha
imul
lret
xchg
cmp
in
xorb
testl
loopne
or
push
xchg
mov
pop
notl
lods
loop
cmc
mov
imul
mov
jb
sahf
mov
clc
jbe
jo
fwait
sub
jmp
mov
and
ljmp
stos
clc
inc
mov
int3
nop
push
popf
pop
mov
push
lods
lock
call
popf
insb
into
xor
jno
test
std
call
insb
inc
out
jnp
lock
lcall
adc
sub
add
push
test
pop
add
mov
mov
es
push
pop
dec
aad
in
xchg
xor
insb
sbb
pop
mov
adc
adc
push
and
adc
aaa
fwait
xchg
sub
mov
and
push
mov
add
mov
imul
test
add
in
xor
sbb
ja
subl
mov
jo
leave
mov
sub
jl
pop
sub
repnz
aad
mov
loop
push
xor
add
fs
mov
xchg
inc
loopne
mov
mov
pop
loop
movsl
add
cmp
mov
cwtd
testb
cmpsb
inc
push
pop
inc
inc
xor
lock
or
fildll
cmp
incb
dec
rcrl
push
adc
jns
inc
xor
test
mov
jge
push
mov
pushf
dec
xor
mov
outsb
fcmove
mov
dec
push
leave
jo
dec
fidivrl
ljmp
inc
in
and
fldcw
push
push
push
and
popa
mov
pop
cmp
or
cmp
and
popa
push
int
out
xlat
mov
cwtl
ljmp
decb
and
outsl
dec
std
mov
mov
cltd
lcall
aad
or
lcall
inc
sbb
orb
and
inc
cltd
sbb
fwait
add
inc
fs
mov
in
addr16
mov
add
jno
push
pop
insl
in
lret
jle
jle
dec
dec
cwtl
push
sub
mov
mov
xor
jno
push
pop
mov
mov
mov
dec
jg
inc
cwtl
dec
inc
stos
int
fucom
dec
in
cmp
jmp
clc
testl
cli
pusha
rcll
mov
mov
bound
mov
jno
mov
push
inc
je
sbb
cmp
push
jmp
mov
sub
cmc
jg
xor
lods
in
inc
push
in
add
and
mov
leave
sub
xlat
fidivs
mov
repnz
cs
imul
enter
push
jp
jno
fwait
in
cmp
iret
jne
and
cltd
push
mov
es
lret
jns
loopew
inc
jno
dec
jbe
dec
les
ret
inc
xchg
ret
enter
push
jo
jmp
ret
sbb
ds
mov
scas
imul
fidivrs
into
sub
insb
dec
mov
nop
stos
imul
sbb
pop
aam
addl
cli
lret
out
pop
lret
or
xchg
rcrl
lret
jns
icebp
dec
cwtl
dec
les
aas
stc
mov
pop
xor
lahf
inc
mov
addb
sub
cltd
lcall
lods
iret
mov
scas
push
push
int3
xchg
xchg
and
fldt
mov
scas
inc
xchg
in
sarl
cmpb
fbstp
mov
xor
mov
leave
xchg
mov
push
in
lret
test
in
sarb
clc
mov
cmp
fsubrs
mov
mov
inc
add
ljmp
jns
inc
bound
xchg
mov
push
mov
dec
cmp
lahf
sbb
ljmp
in
lods
into
jge
pop
imul
adc
outsl
pusha
sbb
cmc
lahf
adc
repz
mov
in
pop
push
js
pop
popa
jns
mov
les
xlat
mov
pop
fnstsw
sahf
jmp
ret
inc
ficompl
adc
lea
in
int3
and
je
push
push
xor
nop
xorl
daa
cmp
fadd
jb
adc
hlt
fidivl
jmp
mov
xor
loopne
mov
cwtl
or
jmp
add
dec
and
fs
scas
js
cmpsl
sbb
or
sub
push
adc
adc
lods
mov
dec
mov
fcomps
inc
sbb
cmp
mov
in
jb
jno
cli
sub
nop
or
sub
scas
outsl
insl
stc
stos
jl
xor
js
pushf
xor
xchg
adc
pop
mov
insb
aas
lds
mov
pusha
fsubrl
dec
push
arpl
aad
inc
out
cmp
mov
mov
sbb
in
cmp
call
mov
imul
or
xchg
pop
mov
push
add
or
xchg
xor
outsb
xchg
out
out
pop
mov
inc
dec
pop
pop
mov
fidivs
sub
jg
sbb
mov
sti
sbb
repnz
jl
fs
pop
adc
push
xor
les
dec
xchg
or
cmpsl
int3
inc
cmp
sub
fcoml
or
cwtl
xchg
enter
fldcw
addr16
mov
cld
popa
movsl
and
pop
inc
adc
and
dec
mov
mov
ja
movsb
imulb
xchg
push
pusha
and
lret
mov
popf
push
loopne
pop
rcrb
aas
mov
mov
dec
jbe
ja
sub
sub
nop
dec
js
pop
das
add
xchg
push
das
inc
aad
xlat
inc
mov
test
roll
or
xchg
add
imul
xor
adcl
test
jl
rcll
mov
addr16
or
shrl
sbb
lock
mov
lods
lret
outsl
push
pop
mov
dec
cmpsl
stos
pop
ret
aas
loop
mov
pop
pop
in
xlat
loope
lds
pop
test
xor
inc
movsb
xchg
jne
out
or
or
push
pop
sbbl
sub
cmp
cmpsb
xor
enter
xor
cmp
sbb
daa
jbe
hlt
add
iret
jnp
jne
dec
dec
or
pushaw
lcall
out
ljmp
mov
out
ljmp
mov
dec
xchg
rcll
jns
cmpsb
pushl
data16
int
mov
aad
dec
test
xchg
jle
jne
push
xchg
stos
push
imul
mov
and
shlb
stos
and
inc
pop
mov
xchg
cld
rorb
sbb
popf
xchg
cli
in
test
push
add
pop
add
test
jae
xchg
cmp
jno
xor
mov
sarb
dec
mov
cmp
sti
out
mov
lret
mov
ret
repz
jle
cmp
sbb
dec
inc
sahf
mov
push
ret
xor
in
outsl
icebp
dec
xor
bound
mov
jp
sahf
lods
out
and
mov
mov
jb
subb
or
imul
outsb
cmpsb
cld
sub
imul
add
daa
out
lahf
ror
jb
popf
lahf
push
add
int3
lods
shrl
test
and
xchg
movsl
insl
call
out
lods
sbb
sbb
enter
fsts
mov
out
jno
add
ret
add
fst
aaa
push
ret
dec
aam
jno
ljmp
pop
jp
lock
mov
or
jle
cmp
je
xor
inc
mov
xchg
es
and
repz
jl
notl
lds
fisubrl
ss
inc
mov
inc
out
inc
sarl
notl
jo
aad
and
pop
dec
and
dec
add
and
cmpsb
pop
jmp
cmp
push
or
sbb
out
bound
add
arpl
sub
jae
cld
jno
fwait
mov
jb
pop
xlat
xchg
rcrl
cmp
sbb
xor
xlat
jg
and
jae
bound
pop
hlt
sbb
loopne
shrl
or
sub
push
cmc
pop
sub
sbb
int3
sbb
lahf
cmp
mov
fwait
xor
inc
or
bound
cmp
into
iret
adc
ret
imul
mov
sub
outsl
mov
push
lock
cmp
sbb
lods
mov
mov
pop
shl
dec
sbb
mov
mov
pop
push
and
dec
cmp
xchg
sub
aas
int3
jmp
mov
jbe
out
ljmp
fisttpl
adc
out
repz
cmp
mov
in
cmpsb
mov
aad
mov
lret
cwtl
mov
cmp
cltd
lahf
sbb
repz
shlb
mov
cld
mov
cs
insb
jg
mov
mov
xchg
fndisi(8087
push
mov
in
add
inc
imul
in
mov
cmpb
cmp
mov
shll
fldz
add
pop
sahf
test
pushf
push
jo
mov
dec
fld
mov
fisttpll
fs
fldenv
sub
out
cmpl
ds
subl
jnp
lea
cmp
andb
jb
fcoms
bound
ja
mov
test
cltd
ja
sbb
cld
jne
pop
or
add
sub
mov
mov
push
push
jle
pop
out
cmp
faddl
xchg
add
inc
test
movsb
into
jge
decb
cli
imul
jae
das
cmp
je
ljmp
stc
push
push
mov
jb
fistpll
and
pop
fs
and
jb
sub
dec
jle
jns
nop
pop
mov
push
cmpsb
outsb
or
pop
cmp
push
push
jle
neg
xchg
and
xchg
push
ss
iret
dec
xor
mov
arpl
sub
pop
sbb
mov
js
icebp
arpl
mov
push
ds
or
sti
mov
cltd
adc
enter
bound
movsl
in
mov
std
outsl
rol
cltd
movsb
mov
aaa
cmpsl
in
int3
leave
mov
pop
iret
out
jg
jne
mov
jge
mov
daa
movsb
jmp
inc
repz
adc
ret
xor
push
mov
xchg
xor
ja
sub
scas
add
jmp
push
push
add
push
out
into
mov
mov
ror
test
sbb
dec
les
loope
gs
shr
mov
mov
or
loop
or
movhps
lcall
mov
out
sub
out
dec
incl
mov
sbb
stos
sub
repnz
rclb
out
push
mov
cltd
and
test
mov
iret
pop
repz
outsl
mov
stos
xchg
imulb
aam
aas
mov
cmpsb
push
popf
cs
rorb
xchg
pushf
mov
adcb
loope
jo
xchg
jb
push
push
jmp
repnz
clc
int
rclb
pop
pop
push
push
sti
cmp
mov
adc
rcr
add
lcall
xor
fstpl
stc
outsl
add
push
adc
sbb
xor
test
or
imul
insb
cmpsb
inc
daa
xchg
std
inc
push
dec
paddsb
dec
pusha
xchg
add
cmp
dec
pop
cmc
and
mov
xor
gs
clc
add
ret
in
cmc
xlat
sub
mov
dec
dec
inc
cltd
dec
hlt
pop
and
outsl
insl
dec
fcmovbe
xchg
sub
jl
fwait
test
xchg
xor
mov
outsb
adc
in
jmp
mov
orl
js
cltd
sti
lods
sub
aaa
sub
xchg
lock
clc
xor
sbb
push
js
push
cmp
mov
jne
pushf
xor
jbe
dec
mov
xchg
leave
inc
jae
js
pop
out
mov
jno
cltd
dec
pop
addr16
pusha
cwtl
dec
pushf
stos
lock
add
lods
and
jns,pt
es
insb
pop
rorl
popa
jo
idiv
cmp
sbb
mov
mov
pop
push
ret
push
out
cmp
jae
add
pop
fs
xor
adc
dec
push
repz
cmp
dec
into
dec
jmp
dec
es
js
icebp
test
pusha
mov
imul
xor
mov
fldcw
into
ror
lods
inc
mov
mov
push
mov
xchg
xchg
xchg
sub
inc
jbe
or
pusha
lcall
or
or
inc
gs
in
jno
jge
mov
or
mov
dec
dec
int
sbb
sub
inc
arpl
cmpsb
xor
jo
push
mov
out
mov
xor
jg
jne
call
inc
idivb
punpcklwd
jecxz
xchg
imul
shrl
jl
sti
and
test
dec
mov
sub
add
outsl
fdivrs
in
fwait
xchg
add
push
movsl
outsb
sbb
pusha
and
mov
and
mov
decl
in
sar
xorb
into
xchg
mov
add
push
test
inc
in
or
mov
sub
scas
fistpll
jnp
mov
cmp
jecxz
stc
in
call
sub
filds
mov
jns
addb
mov
out
push
mov
in
sbb
ljmp
sbb
cmp
pop
faddp
jne
and
and
sub
or
sub
loop
push
cltd
ret
dec
add
push
je
aad
and
imul
stos
aad
jae
pop
in
xchg
sub
push
imul
repz
mov
insl
es
ret
mov
popa
mov
ljmp
xorl
cmp
mov
cmp
and
cmpl
mov
mov
cltd
sub
mov
mov
cmp
mov
cmp
sbb
mov
js
xchg
fiaddl
jb
outsl
pop
cmpsb
out
ss
in
inc
shll
cmpsb
leave
add
sahf
repnz
leave
xor
aas
jnp
jo
mov
iret
popf
push
or
mov
fsubl
mov
pop
mov
insb
popf
mov
call
adc
clc
mov
xchg
js
xchg
dec
int
xchg
add
jmp
cmp
sbb
inc
jns
dec
lods
inc
jb
lret
les
push
sub
jno
fldt
fldcw
pop
fcompl
jle
adc
fisttpl
mov
and
cs
jle
mov
push
push
push
fisttpll
sbb
cmp
test
cmp
mov
jmp
imul
ficoms
int3
mov
int
stc
sub
dec
pusha
int
mov
das
add
sbb
xchg
cmp
mov
pop
shll
jecxz
inc
in
fsubl
or
cmc
pop
or
and
xchg
aas
sub
pop
xchg
cwtl
nop
sub
enter
push
jns
lock
cmc
xor
je
divb
pushf
sbb
mov
jne
repz
adc
aas
or
mov
aad
mov
cmp
test
add
fidivrl
icebp
into
pop
add
jbe
hlt
loope
popa
fs
aam
cmpb
cmp
pop
mov
dec
pop
adc
int
bound
fsts
fldt
cmp
add
leave
mov
lcall
pop
js
push
add
jns
in
gs
sbb
pop
fwait
cmp
mov
sub
fistl
cs
cmpsb
add
sub
or
sbb
pop
scas
mov
ss
pextrw
stos
push
repnz
jns
push
jmp
mov
or
sub
rclb
mov
inc
ficoml
mov
push
xchg
mov
xchg
pop
inc
mov
dec
sub
mov
addb
adc
outsb
or
pop
outsb
scas
push
cmp
push
movsl
mov
test
cltd
stos
mov
arpl
sub
outsl
pushf
mov
xor
ss
arpl
imul
aad
pop
lcall
and
mov
xor
inc
ret
or
scas
adc
cld
sbb
loopne
cs
sbb
filds
loopne
outsb
dec
jns
push
inc
call
lahf
cli
hlt
lock
xor
add
idivl
iret
cltd
push
popf
loopne
gs
in
sub
inc
sbb
push
fsubrl
mov
inc
or
mov
inc
insl
neg
sub
enter
mov
xor
fwait
rclb
cmp
pop
inc
shlb
sbb
repz
out
sbb
loopne
mov
das
xchg
sub
out
scas
mov
push
aad
enter
or
mov
xor
les
cs
je
mov
or
sbb
add
cmp
cmpsb
cmp
dec
frstor
ljmp
xor
xlat
fsubrl
movsb
dec
cmpsl
int
stos
jae
sbb
jp
in
pop
inc
push
mov
aaa
int
and
sub
cltd
clc
xlat
cmc
add
inc
inc
dec
push
adc
push
pop
daa
clc
jns
and
jmp
leave
mov
je
xchg
cmp
dec
jle
pop
sub
bound
sbb
enter
xor
jb
nop
jp
mov
test
xor
jl
sub
movaps
add
rep
cld
or
dec
pop
xchg
addl
xchg
lahf
outsb
repnz
pop
lret
cli
bound
test
or
mov
push
int3
jmp
dec
push
cmpsb
adc
add
pop
adcl
or
push
addr16
adc
imul
mov
pop
add
fisttpl
jo
xchg
test
lods
call
cmpsl
or
pop
lret
sub
xlat
rorl
std
and
mov
jno
stc
fistpll
adc
push
pop
mov
cmp
jae
imul
inc
pop
icebp
xchg
into
fsubrl
fwait
cmpsb
sahf
push
shll
xor
insl
mov
lds
cmp
sahf
sbb
ror
add
pop
push
mov
sarl
shrb
sbb
pop
xor
xchg
or
stos
fwait
mov
push
push
jae
xchg
shr
test
loope
push
inc
inc
scas
xor
and
push
lret
push
js
imul
dec
mov
add
scas
inc
ljmp
sbb
aas
xchg
cltd
aam
insb
fcmovb
xchg
jae
nop
in
sbb
fisttpl
fnstcw
jnp
and
dec
int
push
xchg
leave
pusha
sbb
mov
call
leave
pop
mul
xor
fdivs
inc
pop
fcompl
or
lds
insl
cmpsl
leave
cld
into
xchg
mov
jmp
stos
mov
clc
lret
jb
divb
mov
mov
add
sub
andb
mov
lahf
cltd
aam
sarb
mov
or
xchg
jns
mov
push
jns
and
inc
fiaddl
in
jge
sub
stc
push
leave
jno
out
cwtl
pop
xorl
test
popf
push
fnstsw
inc
fmull
out
inc
sbb
sbb
inc
movsb
outsb
mov
clc
cmpsl
cmp
push
out
icebp
subl
and
mov
shrb
mov
loop
mov
stos
push
mov
push
and
cmp
xor
push
inc
shrb
scas
dec
test
mov
mov
int3
fdivr
loop
out
push
test
and
shrl
mov
sahf
add
jp
popf
or
xchg
jp
mov
mov
in
or
push
mov
mov
cmp
or
xor
in
push
or
std
enter
in
xor
jg
pop
decb
inc
fmul
cld
sub
mov
repnz
imul
xor
push
mov
sbb
clc
fildl
mov
ret
pop
addr16
jmp
out
jl
lods
mov
test
adc
xchg
sbb
out
sub
imul
push
cmpsl
xchg
in
mov
sub
stos
insb
jns
stc
lea
enter
jmp
test
dec
jbe
test
pop
cmp
arpl
xor
inc
xor
mov
or
mov
fistpll
inc
mov
cld
dec
inc
mov
push
in
mov
movsb
mov
in
adcb
cmp
and
push
push
mov
fwait
pop
pop
imul
dec
orl
pop
cmp
rolb
push
push
int
lret
and
cmp
mov
pop
push
push
mov
and
xlat
xchg
push
cmp
xor
jnp
jge
nop
pop
lock
mov
imul
mov
loop
mov
inc
jns
fistps
and
xchg
rcll
pusha
scas
xor
push
fldenv
in
lahf
out
int
dec
dec
add
shl
cmp
pusha
rcrl
sbb
xchg
push
fistpl
out
inc
push
aaa
mov
jo
in
sub
inc
test
pop
or
sbb
jns
jno
or
mov
pushf
movsl
ret
sbb
not
push
xchg
push
sarl
cmpl
jnp
mov
xor
out
xor
pop
mov
inc
add
idivl
push
daa
add
jnp
jne
inc
mov
dec
mov
call
stos
push
xorb
push
and
or
add
xorl
sub
popf
jo
test
lcall
and
add
dec
jmp
mov
pushf
cmp
cmp
repz
bound
push
insl
psllw
shl
rcrl
or
fcoms
push
xchg
pop
adc
cwtl
xor
cwtl
lea
mov
bound
mov
add
scas
mov
or
cmp
lock
mov
mov
lock
stc
cltd
int
pop
jecxz
cmp
rorl
sar
aad
insb
iret
mov
mov
xor
clc
xor
icebp
adc
cwtl
outsl
retw
mov
inc
leave
outsb
jno
aam
jg
sbb
aam
out
and
jmp
bound
xor
dec
adc
in
xchg
hlt
fwait
es
jns
icebp
imul
xchg
imul
sbb
imul
ljmp
repnz
jmp
fs
and
xchg
cld
sahf
repnz
dec
mov
pop
jg
or
jb
sub
test
mov
lret
cli
mov
pop
dec
sub
cmp
popa
jg
cs
sbb
cmp
cmpsb
js
push
insb
icebp
bound
sbb
cld
lret
testb
negl
pusha
push
or
sub
cli
add
push
fsubr
out
mov
fadd
js
in
push
inc
repz
dec
push
mov
add
mov
jge
in
push
jle
sbb
test
xlat
inc
push
in
fsubs
pop
clc
dec
inc
or
imul
cwtl
in
inc
xchg
fiaddl
mov
dec
loope
dec
sbb
mov
test
ret
jmp
pop
inc
sub
adc
mov
data16
stos
jnp
fs
ficoms
cmp
leave
subl
xor
inc
fcmovne
mov
cltd
rclb
or
xchg
cmp
xchg
dec
xor
xchg
jmp
mov
inc
repz
xchg
mov
mov
es
cmp
fwait
gs
or
loopne
adc
jno
jbe
icebp
test
shll
or
pop
mov
insb
cwtl
and
mov
cmpsl
adc
pop
jbe
scas
xor
popf
or
and
adcl
mov
xlat
daa
cmpsl
or
sub
xor
dec
push
mov
pushf
jne
dec
adc
inc
inc
dec
lods
or
je
push
inc
xlat
test
arpl
xchg
mov
fwait
push
pop
and
cmpsl
sub
popa
cs
xchg
call
iret
bnd
mov
push
repz
stc
or
xchg
mov
call
push
call
push
jecxz
rolw
pop
adc
insl
jo
pop
push
mov
inc
rolb
mov
mov
out
aas
or
jmp
lcall
icebp
ret
icebp
imul
daa
loopne
hlt
or
adc
ds
rorl
into
sub
dec
gs
loopne
je
mov
add
or
into
dec
xlat
mov
std
cli
cmpb
sar
enter
les
insb
cltd
icebp
mov
popf
popa
sbb
adc
jo
push
or
jb
xchg
add
in
dec
repnz
push
fwait
call
jo
push
cmovne
adc
xchg
push
repnz
lret
sahf
jp
loope
shlb
testb
add
or
or
movsl
clc
sti
cld
inc
push
push
dec
into
jb
push
imul
dec
ds
adc
clc
cmp
mov
cli
pop
pop
pop
jne
sub
cmp
cmp
int3
sbb
cmp
pop
aam
push
xchg
adc
and
repnz
mov
in
pop
negb
leave
sbb
mov
les
fldt
ljmp
pop
push
xlat
adc
or
xor
and
xchg
shll
incl
repnz
push
adc
sub
pop
or
data16
test
mov
cmpsb
jecxz
fs
and
popa
sub
pop
sub
mov
cwtl
xorb
les
xor
clc
pop
aas
jns
push
dec
dec
rdmsr
icebp
cmp
pop
push
push
xlat
iret
in
movsl
dec
sbbl
add
std
mov
iret
mov
pop
sbb
fwait
rorl
push
ljmp
pop
or
stos
in
push
sub
add
sub
ret
push
push
test
lahf
xchg
outsl
cmc
lods
iret
push
jno
sbb
iret
or
test
into
xor
push
stc
lret
jae
add
sbb
pop
stc
fimuls
lock
mov
insb
clc
stos
inc
ss
outsb
iret
cmpsl
repnz
ret
xchg
rcr
add
mov
pop
rcrb
xor
cmp
out
lods
fstl
mov
mov
ret
out
fucomp
adc
pop
jl
mov
push
and
pusha
test
pop
mov
ljmp
icebp
call
jg
fs
inc
inc
leave
mov
inc
scas
push
iret
adc
nop
jo
inc
jmp
icebp
sub
mov
inc
mov
jmp
mov
retw
pop
push
pop
sub
xor
stos
xor
arpl
xor
bound
pop
add
mov
ljmp
pop
jnp
and
addr16
leave
popf
pop
xchg
jae
loop
push
sub
stos
sub
jns
jo
fwait
mov
xchg
pop
mov
sbb
push
add
cmp
adc
pop
jo
outsb
fwait
out
enter
and
push
inc
ja
xchg
sbb
inc
iret
inc
mov
addb
xchg
push
popa
adc
and
loop
sti
mov
mov
mov
dec
and
in
ss
push
inc
mov
push
adc
mov
mov
push
filds
mov
addr16
xchg
xchg
push
or
sbb
add
data16
sahf
into
loopne
das
rorb
and
leave
push
sub
mov
jmp
or
aam
cld
icebp
sub
add
out
loopne
xchg
iret
std
dec
jno
aaa
xchg
out
xchg
mov
jae
adc
jl
xchg
xorb
test
in
pop
fs
loopne
mov
lret
cli
divb
jecxz
add
push
arpl
aam
mov
sub
inc
mov
lret
jno
aam
jl
mov
pop
sbb
sub
inc
or
mov
sti
lea
js
sahf
jno
xor
jle
inc
loope
cmp
mov
leave
ret
dec
cmp
out
add
jb
lret
aaa
aam
fisubrl
es
repnz
aaa
movsl
cltd
cs
shll
add
cmp
xchg
jns
pop
mov
leave
repnz
mov
gs
mov
test
jb
sub
and
out
sbb
imul
insl
cmp
lea
scas
sbb
or
xchg
add
cmp
orl
popa
sub
jne
push
das
inc
call
adc
and
or
mov
cmp
call
outsb
xchg
mov
stc
xchg
outsb
mov
dec
shlb
pop
push
mov
xchg
inc
sbb
iret
pop
das
sbb
mov
bound
test
jns
add
xor
out
jb
push
sub
lds
add
cmp
xchg
js
mov
insl
pmulhw
bound
imul
shrl
jl
jbe
rol
stc
fnsave
shll
test
xchg
lret
cltd
jbe
mov
scas
adc
rcr
pop
lahf
inc
rcll
out
loope
adc
sti
outsl
and
test
outsb
shll
add
inc
inc
or
ja
sub
movsb
cmpsb
movsl
mov
insb
dec
inc
repnz
jl
das
cmpsl
fcmovb
pop
insl
imul
add
ss
in
mov
stc
xchg
mov
pop
dec
inc
cli
imul
mov
aam
or
xlat
lock
mov
lea
and
sbb
das
rcll
cmp
xchg
or
out
pop
cmp
and
and
add
stc
outsl
pop
fisttpl
dec
jb
xlat
je
or
rorl
enter
sub
lock
int3
or
jb
xor
icebp
pop
push
jns
inc
mov
stc
sub
inc
pop
xchg
jnp
push
rclb
testb
dec
mov
and
adc
nop
repz
or
sub
mov
sub
fucom
cli
test
ljmp
jmp
aas
stc
mov
std
scas
push
jp
adc
push
adc
hlt
mov
xor
das
mov
iret
mov
dec
hlt
gs
jns
shll
push
sbb
pop
bound
dec
mov
xchg
call
jg
xchg
fs
xlat
inc
call
fs
mov
rcl
cs
cmpsl
icebp
push
lock
fwait
xchg
xchg
cmp
inc
push
mov
add
ret
push
test
shrb
mov
pop
xor
sbb
push
push
add
mov
jl
push
push
fstp
movups
xchg
sbb
adc
push
mov
fdivp
out
cmp
jecxz
mov
out
pusha
xchg
lcall
jg
or
inc
les
into
mov
jns
dec
cli
mov
imul
adc
adc
xchg
in
inc
mov
adc
add
adc
das
ret
nop
ja
popa
dec
cmp
pop
cmp
xchg
pop
repnz
bound
jmp
sar
cmp
add
mov
jl
adc
std
pushl
inc
xchg
jmp
or
adc
pusha
mov
stos
pop
out
inc
ja
insb
mov
pop
add
mov
ljmp
cmp
outsb
and
aad
stos
dec
in
push
shll
mov
mov
mov
push
adc
add
xor
out
leave
leave
xchg
cmp
mov
cmpsl
jae
imul
pop
loopne
pop
sbb
pop
push
jns
add
cwtl
js
mov
loopne
pop
push
push
outsb
add
icebp
adc
repz
insl
xchg
pop
adc
pusha
push
ds
lock
jnp
or
movsl
lods
notb
loope
stos
fisubs
cwtl
add
and
mov
sbb
int
sub
sbb
in
push
icebp
jne
arpl
stos
std
sahf
pop
jbe
adc
pop
mov
push
mov
outsl
iret
sbb
outsb
sub
stos
inc
inc
pusha
bound
fcom
xor
and
fs
cmpsl
int3
cmc
adc
push
mov
push
inc
cwtl
fistpl
adc
iret
xchg
and
adc
push
push
call
adc
jb
dec
in
jge
or
adcb
inc
rcrl
dec
mov
push
xchg
dec
mov
cmp
stos
inc
out
movsl
inc
enter
inc
jp
mov
test
mov
push
shlb
out
mov
inc
in
pop
mov
jno
sub
push
inc
jmp
and
jbe
adc
test
jnp
cld
sbb
stos
inc
loopne
lods
lret
dec
add
je
mov
out
push
subb
aad
out
in
dec
adc
cli
and
aad
add
iret
sub
push
mov
dec
ss
jbe
andb
rorb
jmp
jl
outsb
pop
bound
aam
adc
fsubr
or
push
mov
testl
pause
cmpsb
sahf
loop
sbb
mov
pop
add
push
and
inc
mov
bound
adc
sub
sub
fdivl
jae
or
and
lahf
ficomps
push
adc
and
cmpsb
or
bnd
sub
pushf
push
rolb
cmp
push
jno
add
cmp
pop
lock
and
xchg
sbb
dec
es
xchg
cmp
mov
clc
aaa
adc
pushf
imul
dec
enter
inc
decb
dec
push
xor
push
and
inc
adc
or
add
int3
push
pop
mov
aam
subl
xor
sbb
iret
push
mov
cli
loop
sbb
insb
imul
jle
jns
cmpsb
out
stos
mov
mov
xchg
jp
rorb
push
daa
daa
std
sub
add
popf
xchg
stos
xor
popf
mov
add
and
sbb
dec
pop
mov
mov
in
nop
add
add
adc
jae
xor
cld
inc
push
push
push
mov
movsb
push
push
xor
test
adc
int3
pop
arpl
cmp
lods
icebp
xchg
sbb
test
mov
loope
inc
jge
cltd
cmp
call
sti
cmp
mov
or
rolb
movntps
test
testl
fisubrs
insb
adc
mov
jo
dec
push
hlt
mov
inc
imul
sbb
movsb
lock
leave
sub
lcall
jnp
xchg
adc
clc
xchg
jno
movsl
jp
jge
sahf
adc
add
fcoml
cmc
call
lret
xchg
filds
lods
xchg
inc
xchg
mov
pop
jno
lcall
mov
ror
jno
test
sub
fidivs
ja
sahf
sbb
rorb
aam
fsubrl
les
divl
sub
push
push
out
repnz
dec
stc
jp
cmp
sbb
push
dec
mov
popa
das
dec
fs
jnp
int3
xchg
xor
cmpsl
cmp
sbb
jne
push
adc
inc
popa
pop
and
jmp
repz
sub
inc
leave
ljmp
int
cmp
test
pop
inc
pop
dec
cmp
mov
sbb
test
aaa
sbb
inc
enter
faddl
into
int
js
shrl
std
xor
pop
mov
cli
adc
iret
adc
push
pop
mov
loopne
cmp
lds
dec
leave
test
enter
bound
jp
fwait
aas
add
sarb
cmc
or
sub
dec
bound
xor
adc
jae
and
mov
xor
cmc
push
mov
push
test
pop
mov
push
mov
sbb
xor
jne
je
cli
cmp
adc
inc
sub
add
jns
jle
dec
cmp
mov
sub
popl
int3
dec
xor
int3
int3
jno
movsb
mov
fdivrl
mov
int3
out
push
pop
in
jmp
std
mov
hlt
lret
loope
aad
pushf
outsb
fstl
xchg
popa
inc
ja
pusha
push
es
sub
pop
in
pop
ret
jb
hlt
sbb
add
je
add
les
jle
inc
xchg
adc
ret
or
xor
bound
out
negb
xchg
xor
adc
jno
repnz
or
xchg
repnz
or
dec
pop
in
inc
shl
dec
sub
sub
push
jp
pusha
mov
fs
inc
fldcw
loopne
aam
sub
std
push
dec
dec
hlt
or
sub
or
inc
lret
bound
dec
sub
sub
push
jp
pusha
not
fidivl
add
ss
shrb
xlat
daa
lods
pusha
lock
inc
subl
add
std
push
dec
es
sbb
pop
cld
js
popf
pushf
nop
inc
xchg
mov
dec
mov
dec
sahf
or
imul
addr16
fcoml
mov
addr16
mov
mov
inc
jo
testb
bound
nop
cmp
mov
orl
mov
clc
lahf
jbe
xchg
dec
testl
mov
cld
sahf
push
imul
fmull
push
dec
loope
push
mov
mov
jmp
pop
int
fisttpl
cli
cmp
fisubl
mov
cmc
inc
dec
leave
inc
lret
out
or
cmp
cwtl
mov
jecxz
out
sahf
mov
xlat
fisubl
xchg
imul
in
xchg
add
inc
lret
bound
and
jle
cmp
cwtl
mov
mov
sub
loopne
adc
jo
xchg
mov
inc
aas
jb
ds
inc
sub
inc
sbb
ret
shlb
fistl
mov
cld
xor
ds
lock
or
cltd
cmpsb
inc
or
imul
pop
fidivl
and
daa
adc
repnz
inc
cmc
insl
lods
cmp
outsl
or
jge
pushf
pop
mov
repnz
inc
push
lahf
into
inc
movsl
fcmovnbe
xlat
daa
hlt
jg
pushf
aas
jp
hlt
mov
fisubrl
fistl
outsl
cltd
inc
dec
cmp
xchg
dec
inc
rcr
pop
push
outsb
pop
fdivrp
jmp
cmc
cmpsl
pop
hlt
rep
push
in
inc
xchg
fdivl
cmpsl
leave
cmp
add
push
out
add
inc
jecxz
decl
jb
ljmp
dec
repnz
xchg
mov
aam
stos
jl
int3
stos
xor
out
test
fnstcw
daa
mov
dec
adc
xchg
ja
ljmp
icebp
inc
lahf
cmpsl
xor
adc
lods
push
aad
icebp
push
jl
hlt
aad
xor
mov
fnstsw
pop
inc
jnp
cltd
imul
test
pusha
mulb
xor
dec
out
jg
subl
sbb
ficompl
pop
leave
jg
xchg
insb
inc
add
push
pusha
inc
mov
ret
inc
push
out
mov
clc
ljmp
add
pop
mov
jno
push
fcoms
xchg
xchg
dec
and
cmp
mov
adc
scas
or
gs
movsl
lcall
mov
popf
std
dec
mov
dec
mov
jp
shl
leave
cmpsb
loope
jecxz
mov
rcll
in
gs
cmp
jg
fldt
outsl
in
into
sbb
in
xor
shrl
cmp
out
mov
scas
and
push
sbb
add
jnp
mov
js
lods
and
out
clc
xor
xchg
jns
movsl
call
mov
mov
push
cmp
lcall
imul
sub
daa
scas
gs
repz
arpl
repz
loope
out
jmp
pop
test
dec
xchg
push
int
xlat
add
inc
or
push
dec
push
testl
aad
mov
shlb
or
cmp
mov
jno
jmp
mulb
jne
ja
cmp
sub
add
clc
dec
pop
dec
outsb
mov
mov
cli
xor
jl
sbb
mov
ret
jl
mov
out
inc
or
mov
fsts
push
jb
mov
jge
cmpsl
arpl
sub
cmp
movsl
mov
repz
pusha
mov
fs
testb
lods
ret
stos
pushf
sbb
in
or
mov
adc
lods
dec
mov
and
filds
stos
dec
pop
cltd
jmp
mov
lods
mov
gs
pop
xor
mov
mov
and
mov
test
fdivrl
dec
jmp
mov
sar
daa
cmc
add
mov
es
inc
aas
mov
lret
mov
in
jge
mov
xchg
xchg
test
adc
or
es
sbb
jl
mov
dec
nop
popa
jns
push
hlt
lea
dec
hlt
das
sbb
lret
adc
idiv
andb
popf
imul
lret
cs
pushf
mov
sbb
mov
mov
popf
push
in
push
cmp
push
xor
cld
sub
push
sbb
dec
cmp
cs
je
inc
int
ret
inc
jbe
lret
sti
push
sub
gs
xchg
mov
ja
mov
idiv
xlat
sbb
test
adc
gs
inc
mov
mov
jb
add
push
rorb
int3
divl
push
fmull
icebp
lret
rorb
sahf
inc
lret
inc
inc
pop
mov
pop
mov
jecxz
es
mov
jns
repnz
dec
out
pop
push
leave
dec
fsubl
jb
daa
inc
das
sbb
movb
leave
mov
stc
clc
mov
sub
outsl
mov
ds
imul
cmp
push
pusha
push
pop
jo
xlat
and
sub
pop
bound
popa
pop
jl
fisubrs
mov
ficompl
enter
adc
push
adc
xchg
es
add
push
or
lods
lcall
dec
dec
or
inc
mov
and
out
mov
push
cmp
dec
jo
xchg
in
sbb
inc
in
leave
adc
gs
je
sub
stc
daa
xlat
jb
inc
adc
in
int3
sti
lock
or
loopne
outsb
cmpb
shll
add
mov
jne
popf
or
ja
mov
ffreep
inc
bound
ljmp
and
jmp
cwtl
shll
sbb
or
cwtl
ficomps
xchg
adc
insl
cld
repnz
popa
data16
rclb
cmc
add
sbb
adc
test
jbe
or
clc
add
popa
fistl
insl
cmp
jmp
in
dec
gs
sahf
push
and
inc
sti
cltd
lcall
pop
jns
pop
outsl
mov
popl
pusha
xor
aad
xor
xchg
xchg
mov
leave
scas
sti
or
mov
repnz
add
sbb
or
aad
repnz
adc
xchg
xor
adc
xlat
mov
add
push
lods
cwtl
sbb
daa
adc
int
in
xchg
xchg
icebp
inc
imul
add
js
fsubr
mov
jle
repnz
push
and
pop
pusha
popa
xchg
pop
insb
inc
mov
repz
mov
xchg
rcl
lock
jno
int
and
rcr
cmp
js
pop
nop
cmpsb
fistpll
testb
test
cmpsl
jle
jecxz
sub
add
hlt
js
pop
sub
gs
push
dec
std
push
jge
mov
clc
dec
sbb
aas
push
cmp
fidivl
cld
jno
xchg
mov
mov
xor
test
xor
lcall
dec
int3
xorl
xchg
or
orl
jae
inc
jb
adcl
shr
rcll
xor
imul
popa
push
aad
jl
sahf
push
add
mov
cmp
nop
xor
xchg
movhps
jge
mov
jb
call
aam
cltd
pop
pop
lods
cmc
cmc
add
inc
cmpsb
pusha
sbb
dec
je
adc
repnz
mov
jl
mov
in
pop
sbb
pop
inc
je
mov
out
sbb
imul
sbb
fadd
sub
and
js
jle
jns
dec
mov
mov
or
lret
hlt
and
data16
shlb
pop
mov
out
notb
cli
clc
stos
inc
lahf
jbe
stos
add
lcall
jle
push
sbb
hlt
gs
fmuls
pop
je
daa
add
mov
subl
popa
push
lret
cltd
aad
push
inc
push
jmp
out
and
jb
gs
aaa
pop
fdivp
ret
jle
sub
xchg
imul
or
loope
int3
jo
dec
add
in
mov
mov
cli
push
xchg
fcompl
cmp
imul
mov
test
jge
test
or
ss
xchg
push
jo
fistl
sub
inc
push
jno
add
pop
popa
pop
and
pusha
test
xor
ds
dec
and
adc
clc
int3
mov
nop
dec
dec
enter
fcmovu
jg
jo
mov
sub
or
arpl
out
cmp
dec
inc
add
sti
push
xor
pop
iret
aas
test
jbe
push
push
sti
jae
int3
jnp
ret
mov
adc
das
adc
dec
cs
mov
pop
cmp
push
daa
clc
fbstp
mov
int3
mov
adc
rol
xchg
push
cwtl
and
xchg
imul
ret
cmp
xchg
or
inc
jae
pop
fildl
lcall
rcrl
xchg
jg
pop
fxch
xchg
imul
push
push
mov
jp
mov
inc
mov
pop
pop
in
pop
xchg
jecxz
mov
adc
popa
fsubl
push
and
jne
inc
sub
test
loope
int
pop
cli
push
test
mov
mov
cmp
loopne
adc
mov
and
cmp
imul
xor
in
xor
jae
sbb
mov
add
dec
pop
push
or
iret
lcall
shr
roll
imulb
mov
xchg
addl
clc
mov
mov
adc
pop
je
repz
les
fidivl
mov
rclb
jg
inc
bound
lret
or
pop
sar
movsl
rol
jb
xchg
loop
push
negl
mov
add
or
adc
pop
lods
repnz
inc
xchg
shll
inc
push
pop
cmp
aas
inc
mov
sbb
out
mov
lods
fisubrs
repnz
inc
lret
popa
leave
leave
ficompl
push
mov
fstps
mov
xor
popa
push
sbb
ret
jae
push
and
loope
mov
movsb
add
cld
mov
sub
push
movsl
icebp
mov
rolw
cwtl
leave
inc
adc
jae
jecxz
push
ja
std
xchg
aad
mov
mov
loopne
pop
jae
iret
movsl
fs
mov
aaa
dec
das
inc
jge
inc
jl
js
mov
enter
int3
ss
std
cmp
dec
insl
rorl
fcmovne
imul
int3
divb
sub
jbe
rorl
inc
test
lahf
std
loop
push
ja
adc
lret
in
cltd
sub
jns
fisubrl
or
push
sbb
pop
repnz
add
adc
test
push
inc
lea
les
xor
je
mov
push
sbb
into
loop
and
xchg
push
push
xchg
dec
dec
push
adc
xchg
dec
out
jg
mov
inc
mov
mov
lahf
sbb
mov
or
mov
nop
nop
and
lea
insb
out
cmp
in
push
mov
inc
adc
aam
out
icebp
mov
adc
icebp
loope
push
mov
push
stos
jmp
add
test
test
add
push
dec
jbe
jnp
xchg
dec
sub
or
ljmp
loop
xlat
inc
adc
and
lcall
repz
or
push
test
ret
xchg
data16
xchg
lods
and
into
rorl
sbb
mulb
test
ss
and
add
lock
mov
mov
repz
repnz
jmp
cmc
push
mov
inc
jmp
pushf
adc
mov
add
fldenv
adc
adc
aad
je
int
loope
daa
clc
xlat
jbe
mov
mov
mov
rcll
fisubrl
test
cld
je
popa
rolb
sbb
add
adc
mov
iret
test
sub
mov
push
mov
out
sub
outsl
mov
sub
aas
fimuls
xchg
xchg
call
cltd
and
add
sbb
add
or
or
pop
in
lahf
ret
rcrl
cmc
in
jle
push
lahf
jb
xchg
pop
mov
aam
cmp
inc
pop
repnz
or
ret
test
sbb
ficoml
je
mov
dec
outsl
mov
mov
jb
inc
mulb
dec
mov
inc
ss
sub
pop
repnz
dec
ret
outsl
cli
dec
or
cmp
mov
cltd
rcrl
stc
mov
inc
gs
dec
mov
call
subl
pop
pop
data16
out
xor
ficompl
mov
adc
mov
and
add
add
incb
cmp
es
test
es
mov
and
shr
dec
add
insb
mov
lods
gs
inc
in
cltd
mov
jae
sti
lea
adc
jl
ficompl
cli
popa
xlat
rcr
pop
xor
fs
mov
fisubrs
popa
pop
rcr
pop
in
out
ret
jno
ss
fxch
int
pop
add
mov
loopne
mov
cld
inc
xchg
mov
popa
fiadds
lret
fldenv
loop
push
sub
shlb
loop
mov
cmpsb
inc
sub
dec
xchg
sbb
add
xchg
gs
mov
ss
cwtl
sarl
and
fsubl
test
xchg
pushf
adc
rorb
repnz
les
fidivl
pop
aam
in
xor
xchg
out
out
shr
ret
lds
lods
decl
mov
cmp
ds
insb
insb
dec
int
cwtl
mov
sub
dec
inc
inc
leave
or
inc
cltd
ret
lods
lea
cld
das
mov
sub
push
cltd
inc
pop
and
adc
pop
scas
jle
out
inc
repnz
jb
push
and
or
icebp
mov
cs
and
lahf
into
mov
pop
test
mov
inc
inc
mov
push
cmp
dec
dec
cmp
sbb
out
les
fwait
and
jne
mov
pop
xor
fldenv
hlt
jg
mov
xor
loop
cltd
dec
mov
jp
int
pop
jno
sbb
notb
cmp
jecxz
data16
rcr
mov
rcl
mov
push
ss
fwait
inc
cmp
imul
mov
sbb
cmp
lret
pop
inc
repz
and
cmp
pop
ss
imul
int3
loope
mov
cmc
out
mov
stos
es
imul
push
jge
clc
and
push
lret
add
fnstsw
loope
inc
jp
sub
mov
mov
sub
je
fstps
out
repz
xchg
stos
cmp
imul
hlt
add
adc
add
repz
xor
pop
inc
jo
lds
pop
pop
sbb
dec
push
sahf
or
icebp
pop
cltd
in
test
cld
in
jnp
frstor
push
cmp
lret
mov
adc
dec
outsl
sbb
inc
outsl
mov
mov
inc
inc
sub
pop
aas
fmul
and
daa
pop
dec
sbb
sbb
ret
xchg
icebp
insb
mov
roll
mov
mov
in
loopne
or
cmp
cmp
mov
cmc
mov
fmul
adc
xchg
pop
cli
inc
outsb
mov
xlat
daa
add
pop
aas
sbb
ret
shlb
jp
hlt
mov
out
imul
push
dec
mov
jg
inc
mov
add
gs
xor
and
in
fdiv
mov
mov
mov
das
sbb
mov
popf
pushf
add
dec
icebp
test
insl
inc
repz
adc
sbb
aam
xchg
cs
mov
xor
ljmp
in
or
fdivrs
or
push
testb
arpl
sbb
pop
rorb
arpl
or
lds
jbe
mov
add
sbb
and
inc
iret
fsubrl
mov
cmp
out
inc
repz
rolb
dec
mov
lock
mov
push
jno
int
test
xchg
aas
sub
loope
inc
mov
inc
pop
movsl
scas
and
imul
dec
divl
dec
movsl
dec
lahf
fistpll
fwait
loop
test
aas
fildl
dec
enter
dec
xchg
mov
inc
cmp
mov
push
cmp
insb
out
inc
cmp
es
inc
adc
dec
pop
and
mov
stc
movsl
mov
xor
popf
mov
inc
adc
inc
movsl
loop
and
adc
clc
fs
daa
imul
int3
cmp
cmc
mov
dec
jbe
ror
jns
rcl
ja
mov
push
mov
shll
mov
xor
xchg
repnz
fs
or
xchg
sub
mov
add
test
fnsave
pop
jmp
mov
xchg
xchg
insb
mov
jle
jnp
inc
mov
or
lcall
popf
nop
add
loope
test
lock
push
movsb
repz
inc
xorb
ficoml
adc
leave
ja
lods
push
inc
push
or
movb
ss
lcall
push
pop
cmp
cld
imul
icebp
or
sub
or
je
mov
jbe
mov
pop
cwtl
cs
sbb
addl
loop
push
mov
imul
nop
out
dec
mov
fdivrl
outsb
push
fldenv
jle
add
pop
cld
jnp
inc
gs
dec
out
ror
daa
int
mov
pop
push
or
dec
rcrb
stos
xorl
inc
jg
mov
cli
pop
mov
push
cld
fcompl
adc
iret
je
cmp
es
and
outsl
sub
sahf
push
inc
xor
jb
iret
popa
add
add
push
sub
jbe
cmp
cwtl
test
fdivl
pop
inc
cmp
adc
or
or
and
pop
jl
cmp
mov
ret
jnp
xchg
or
pop
push
adcl
add
ret
jl
mov
cmp
inc
fdivrs
in
pop
mov
and
or
int3
and
daa
rorl
inc
enter
lods
inc
dec
dec
xchg
dec
int3
test
daa
mov
scas
or
dec
negb
leave
stos
push
popf
mov
jg
sbb
popf
and
inc
bound
mov
out
rcll
push
shl
repnz
cmc
out
sbb
push
add
cmp
cmpsb
jle
rorl
fldl
mov
add
inc
call
fst
rcll
stos
xchg
pop
divb
sub
sub
mov
imul
lret
and
rcll
ja
push
aam
pop
cmp
sub
rcrb
int
movsl
inc
dec
loopne
sbb
and
xchg
xchg
xor
mov
sub
mov
sub
lcall
filds
pusha
and
dec
movl
push
or
aad
xchg
sbb
movsl
or
inc
inc
pop
dec
xchg
aaa
inc
push
test
mov
aad
std
jg
js
inc
rcl
sbb
mov
or
mov
inc
dec
std
test
or
xchg
sub
vpsubd
repz
pop
stos
mov
data16
pop
jge
les
jae
enter
inc
sub
adcb
xlat
mov
sarb
aaa
in
sbb
inc
adc
and
out
cmp
insl
dec
or
lret
test
dec
cmp
sbb
inc
add
loop
mov
popa
nop
xchg
mov
lcall
adc
xchg
cmp
or
sbb
add
lret
scas
mov
xor
sub
xor
shlb
pop
aaa
insl
mov
mov
or
sub
push
add
xor
mov
jae
lods
roll
xchg
les
lods
popa
or
cmp
lea
xchg
pusha
xor
out
fdivl
cmc
nop
int3
jecxz
mov
lcall
test
add
xchg
dec
xor
hlt
cmp
outsl
mov
xchg
mov
outsb
rcrl
and
mov
xor
cmc
mov
hlt
repz
test
cltd
pushf
test
xlat
or
push
mov
lods
or
ret
scas
or
lret
or
lods
xchg
std
mov
mov
inc
adc
xor
mov
push
or
or
cmpsb
mov
jmp
xor
xchg
aad
cmp
scas
lret
ss
mov
inc
xchg
cltd
test
inc
adc
lahf
lods
loop
and
cmpl
mov
jne
movzwl
pusha
xor
cmpsb
mov
inc
adc
in
test
scas
mov
sbb
mov
xchg
js
xor
adc
test
jb
test
cmp
and
arpl
das
insl
movb
shrl
fidivs
xchg
data16
leave
xchg
stos
xor
loope
ss
sub
insl
imul
cmpsb
or
cwtl
popa
aaa
aam
inc
xor
andl
or
mov
mov
jbe
lret
dec
sbb
cltd
sbb
scas
or
or
fs
sub
ljmp
mov
inc
dec
mov
mov
pop
cmp
mov
push
sbb
inc
add
inc
imul
mov
leave
arpl
loope
add
pop
inc
outsl
stos
imul
es
jg
call
mov
sbb
sub
mov
sbb
jnp
dec
leave
push
mov
jb
mov
shrb
insl
pop
sub
frstpm(287
mov
ffree
in
lret
or
xor
ficomps
jmp
mov
gs
lods
push
hlt
jnp
sub
les
mov
jb
mov
fldt
std
sti
movsb
inc
lock
mov
mov
push
inc
popw
add
shlb
add
ret
and
jno
jp
imul
pusha
fstpl
dec
addb
jmp
in
imul
add
inc
pop
insb
out
rolb
loop
mov
adc
sbb
sahf
adc
ss
sub
fidivl
add
nop
and
es
decl
mov
pop
fstpt
inc
cmp
fidivl
mov
and
ss
daa
std
cmp
sub
gs
jg
sub
xor
ret
push
inc
add
inc
outsb
les
aad
je
cmp
jle
cmpsl
shr
dec
mov
pop
adc
push
fisubl
xor
jb
mov
dec
cli
es
push
dec
stos
hlt
jnp
and
scas
test
dec
leave
and
std
and
lds
mov
stc
repnz
imul
mov
out
lcall
stc
int3
xchg
sbb
sub
out
or
dec
popa
inc
push
and
dec
mov
push
mull
mov
add
xor
or
dec
nop
sbb
inc
mov
mov
mov
push
sub
jno
xchg
push
insb
push
jge
add
fimull
push
iret
mov
lods
jg
inc
test
mov
lahf
push
int
mov
mov
cwtl
mov
cmp
add
ss
out
sbb
add
pushf
adc
test
out
sbb
les
fidivl
xor
adc
cli
daa
cmp
std
mov
mov
inc
ljmp
ss
mov
sarb
shrl
cmp
popa
mov
int3
jb
movsl
sbb
dec
bound
jno
push
jo
xchg
or
inc
lret
bound
fs
cli
push
imul
outsl
jbe
addr16
inc
inc
push
add
jb
cmp
xor
fldt
or
sarb
insl
mov
sbb
push
repnz
lock
mov
test
aaa
in
and
cmp
and
pop
and
inc
xchg
aaa
cltd
add
inc
adc
inc
dec
push
xchg
cltd
sbb
fs
sti
scas
mov
fbstp
aaa
cltd
or
pop
sub
or
xor
cmp
addr16
push
or
cmp
clc
dec
dec
ret
lret
es
xchg
lret
mov
fidivrs
xchg
hlt
repz
xchg
cmp
pop
test
rcl
daa
sbb
aam
inc
inc
icebp
insl
scas
mov
pop
repnz
or
pop
in
jecxz
xchg
inc
bound
pusha
add
repnz
or
inc
daa
clc
out
jb
and
subl
mov
cmpsb
shlb
mov
xchg
call
inc
sbb
or
pop
mov
pushl
push
and
fldl
jb
adc
outsl
xorl
mov
push
fdivrp
jl
mov
popa
or
ret
outsl
push
jp
pusha
testl
popa
jns,pt
pop
sub
in
dec
jo
stc
and
int
push
adc
shlb
rcrb
inc
inc
mov
insb
ja
popa
sbb
addr16
mov
xor
push
imul
rolb
adc
mov
fdivp
loopne
or
mov
out
sub
ss
mov
add
out
jl
mov
sbb
pusha
cmp
mov
bound
ss
cwtl
mov
push
dec
roll
testb
dec
out
clc
pop
lock
jmp
pushf
adc
hlt
push
mov
xchg
gs
push
inc
mov
cmpsb
and
dec
repz
cmp
shl
or
push
cmp
add
popf
add
xchg
rcll
int
mov
and
and
dec
pop
mov
lea
xchg
clc
push
inc
pop
dec
cs
mov
mov
dec
scas
xor
je
loop
in
mov
and
into
pop
or
test
jg
push
mov
dec
aad
mov
rcrl
lcall
or
cmp
cmp
mov
or
push
imul
fidivl
add
mov
outsl
rcl
daa
sbb
sbb
std
insl
mov
imulb
popf
push
dec
jb
jg
sbb
xor
movsb
repz
lret
adc
cld
addb
xchg
roll
jmp
rcr
out
mov
fs
xchg
xor
sub
imul
testl
ficomps
cltd
pop
and
pop
inc
out
out
leave
sbb
jae
imul
cmp
stc
dec
push
push
scas
dec
sbb
btr
push
or
pop
insb
cld
les
loope
jmp
adc
xor
nop
psubq
jno
enter
in
rclb
xchg
xor
xchg
cwtl
mov
mov
jecxz
sahf
sbbl
sbb
xorb
stos
jb
xchg
xchg
shl
add
gs
adc
movsl
hlt
push
popf
mov
mov
scas
xchg
xor
push
adc
and
lea
pop
mov
stos
data16
push
cld
andb
adc
leave
pop
and
inc
xchg
subl
and
jg
jno
js
mov
inc
cmpb
sbb
data16
cwtl
or
sbb
stos
xchg
scas
ficoml
sub
pop
and
mov
daa
adc
xchg
cltd
mov
fstl
jno
mov
mov
mov
adc
cmp
or
addr16
sbb
add
insl
jb
sbb
mov
mov
inc
push
loop
and
lcall
std
xchg
orl
jecxz
and
mov
jmp
rorb
adc
or
call
push
sbb
lods
ss
jmp
adc
xor
and
loop
and
push
outsb
adc
xchg
adc
aas
andl
mov
mov
mov
and
push
subl
cmp
inc
cwtl
jmp
or
push
sbb
pop
adc
insb
out
dec
adc
and
pusha
jecxz
sbb
arpl
shlb
sub
mov
shll
sub
std
and
mov
mov
xchg
insl
icebp
mov
fnsave
xchg
es
pop
adc
sub
xchg
dec
xchg
adc
sub
aas
das
or
mov
dec
mov
pop
imul
mov
mov
sbb
mov
push
adc
ret
adc
or
aad
mov
and
loop
and
lcall
pop
popa
push
out
jb
in
push
mov
inc
adc
fwait
mov
leave
and
shl
ds
insb
out
sub
fnstsw
inc
adc
inc
mov
imul
cs
mov
outsl
or
xchg
fcmovu
lods
cld
or
add
dec
dec
out
cmpsb
inc
dec
mov
in
or
or
pusha
call
outsb
pop
pusha
xchg
out
and
jo
xor
shrl
pop
pusha
in
inc
add
mov
jbe
xchg
dec
loop
dec
loop
insl
ret
lods
xchg
loop
fcomip
icebp
iret
js
icebp
enter
daa
cmp
movsb
mov
mov
adc
mov
movsb
inc
shrb
push
je
push
ss
bound
ret
scas
add
cmp
pop
jnp
dec
dec
xchg
adcl
add
outsb
add
cwtl
fstp
sub
jge
push
lcall
dec
aaa
add
out
pop
or
push
dec
sbb
es
xchg
dec
out
push
test
dec
push
cld
sbb
add
enter
fsubrp
mov
xchg
push
cltd
add
lock
xchg
ds
or
jo
aad
mov
orb
leave
icebp
out
aaa
sbb
mov
ds
gs
dec
outsb
jae
mov
les
adc
fsts
sbb
xor
icebp
outsb
pushf
jmp
les
jns
addr16
and
dec
jne
test
rcrl
dec
push
mov
insl
pop
test
inc
xchg
mov
addl
les
or
shl
push
sbb
mov
mov
pusha
jg
jg
outsb
mov
and
inc
jp
adc
movsl
jo
sub
mov
jno
out
dec
inc
push
ja
js
mov
mov
inc
mov
outsb
cwtl
std
scas
inc
xlat
push
pusha
jle
inc
cwtl
push
adc
divb
jno
mov
jmp
jg
leave
jmp
ret
jle
pop
jns
mov
xor
jp
jle
adc
jno
jl
shl
movlps
and
ja
sbb
jmp
jle
jb
push
mov
push
pop
mov
pop
test
dec
jmp
xlat
mov
ljmpw
iret
lds
sbb
cmc
std
adc
push
mov
mov
jne
iret
lock
scas
dec
jae
call
test
aad
xor
sahf
ret
inc
dec
jo
dec
or
mov
push
mov
ret
and
int
dec
out
es
mov
xor
imul
stos
xor
loop
movsb
xchg
loop
movsb
pop
add
test
pusha
aam
icebp
addr16
lods
repnz
imul
inc
pop
shll
inc
ss
fwait
pop
aaa
fs
test
sub
pop
or
pop
movsl
aad
aam
iret
icebp
sub
dec
push
jo
into
imul
stc
inc
xchg
into
js
dec
sbb
jae
pop
add
mov
ja
cmpsl
icebp
leave
fimull
xchg
add
lods
icebp
mov
dec
inc
ss
inc
inc
into
inc
xchg
ret
lods
test
jmp
jne
cmp
notl
sahf
cltd
and
mov
out
test
inc
into
xor
fisubrl
add
add
pop
inc
in
fistl
orl
mov
mov
mov
pop
rcll
inc
lock
fnstcw
push
and
mov
pop
test
jge
lret
mov
in
jae
inc
mov
or
mov
mov
cmp
pop
roll
insl
sbb
inc
push
lret
inc
mov
insb
in
stos
orl
inc
push
mov
inc
vphaddubw
xchg
mov
mov
xor
lcall
fiadds
addr16
add
sahf
xor
dec
sub
dec
das
sub
pop
dec
imul
pushf
pop
sub
adc
call
lds
pop
jb
call
jmp
lcall
xlat
fs
jb
xchg
mov
dec
or
cwtl
or
adc
aad
inc
sbbb
lock
xor
push
lea
sarl
stc
inc
out
dec
lds
adc
push
add
into
lret
mov
push
cmp
movsl
cmc
sbb
xor
dec
or
leave
dec
jo
testb
rcrl
cmp
call
mov
rcll
lret
aad
jns
xchg
in
outsb
fisttpl
pop
sub
idiv
jno
test
push
ljmp
jns
jno
lds
imul
pop
push
pop
adc
test
dec
daa
sbb
ret
adc
scas
mov
mov
and
ret
outsl
jp
add
push
insl
dec
mov
push
inc
loopne
cmpsb
lds
testb
into
xchg
adc
jg
out
mov
repnz
mov
pop
je
cwtl
loopne
shlb
std
add
push
jb
lock
lret
ljmp
mov
push
cli
mov
mov
cmp
mov
imul
cmpxchg
shll
push
jle
ss
gs
cmpsb
ljmp
nop
fsubs
sbb
inc
mov
adc
mov
scas
mov
imul
aaa
mov
hlt
test
mov
data16
mov
sarl
mov
xchg
data16
fdivrs
pushf
fsqrt
outsl
adcb
dec
dec
out
imul
leave
lock
cmp
insb
dec
jp
arpl
jb
dec
orl
dec
loopne
out
imul
icebp
jle
lahf
xor
sub
xchg
mov
popa
icebp
xchg
push
push
mov
inc
xchg
sbb
loope
xor
lret
aad
dec
sub
cmp
shlb
lods
imul
mov
fidivl
xchg
jno
mov
fnstcw
fcmovnb
in
outsb
sahf
adc
outsb
sub
pop
out
div
mov
cld
inc
push
int
sbb
fists
loopne
adc
movsb
cmc
sub
xor
movsb
mov
leave
shrb
gs
pushl
ret
pop
in
decl
stc
jmp
xchg
sbb
out
dec
out
in
push
fwait
js
dec
dec
cmpsb
push
dec
xchg
out
lcall
jo
bound
xor
cmpl
mov
mov
pslld
stos
imul
jge
dec
cltd
lods
mov
xor
test
adc
xchg
ret
inc
add
gs
and
nop
add
stos
fwait
andb
test
into
jecxz
push
sub
mov
sbb
faddl
aas
pop
aam
jg
jb
shlb
sub
outsb
popa
cmp
popa
xchg
in
rep
cmc
test
std
imul
add
sub
add
xor
flds
mov
add
mov
cmp
inc
sub
mov
mov
stos
sarl
push
aam
fsubrl
mov
lock
jge
push
mov
shll
sbb
bnd
jge
jg
gs
fwait
jg
hlt
clc
cmpsb
xor
sbbl
pop
sub
ljmp
mov
adc
ljmp
xchg
orb
sub
xchg
jno
jmp
sbb
js
cld
pop
hlt
jg
xor
dec
cmpsb
gs
cmp
repnz
iret
add
add
mov
out
into
sub
mov
mov
inc
mov
or
je
cmc
repz
loopne
push
and
sbb
std
and
jae
mulb
mov
fwait
dec
out
scas
cli
andb
dec
into
or
inc
inc
mov
testb
inc
cmp
sti
dec
and
sbb
xchg
dec
push
cwtl
cmp
lds
jmp
sarb
dec
jo
std
add
pop
into
stc
nop
js
add
hlt
jg
jbe
cwtl
mov
xchg
test
imul
pop
stos
loope
clc
call
fistl
call
push
sbb
hlt
xchg
std
aad
cltd
popa
inc
mov
fs
jnp
jno
dec
cld
xchg
fstpt
adc
js
jns
arpl
imul
cld
push
pushf
popl
inc
adc
jle
push
sbb
in
jle
mov
push
jle
sbb
scas
lret
xchg
imul
sbb
or
mov
or
sahf
gs
imul
in
nop
dec
mov
ss
cld
cmp
ljmp
xor
lock
adc
orb
xchg
lret
lahf
mov
in
loope
hlt
sbb
outsl
repz
add
cmp
mov
add
mov
xlat
arpl
xchg
push
bound
xchg
and
cmpsl
jmp
fwait
push
sbb
mov
jbe
out
dec
jo
pushf
mov
inc
adc
ret
gs
mov
pop
cltd
jmp
int
imul
in
jo
fnstenv
roll
sbb
jb
pusha
ss
cld
sub
or
fiadds
ss
or
shl
jg
and
aad
je
int
fwait
lock
mov
mov
jno
ja
or
mov
pop
sub
call
push
sbb
dec
jo
mov
scas
jp
movsl
mov
add
jns
mov
bound
loope
mov
sti
fistpl
mov
push
sbb
inc
or
inc
mov
js
xor
sub
xchg
jne
notl
aad
add
arpl
gs
add
aad
inc
jp
xchg
mov
inc
ficompl
dec
xchg
cld
cli
and
xor
cld
idivb
negb
inc
insl
popa
inc
jo
loop
and
hlt
jno
pop
cmc
xchg
dec
xchg
hlt
pop
or
add
inc
gs
loop
mov
addr16
inc
iret
jmp
mov
xor
lea
mov
imul
aaa
mov
inc
sbb
imul
jg
repnz
or
jne
add
hlt
and
movsl
insl
inc
jb
notl
fucomip
dec
sub
ja
push
dec
push
jg
or
xchg
insl
mov
inc
mov
sbb
dec
dec
mov
bound
or
dec
mov
or
xchg
sub
xchg
test
gs
xchg
push
dec
gs
cmp
movsl
aam
jae
popa
es
std
push
dec
dec
hlt
jg
je
cwtl
jb
jo
imul
aas
push
cmc
roll
out
cli
dec
in
lea
inc
adc
repz
dec
mov
sbb
pop
and
arpl
mov
cltd
jb
jl
cmpl
data16
adc
stos
popa
repz
dec
inc
data16
cltd
in
enter
and
fs
popf
insl
leave
cli
sbb
dec
dec
mov
fmull
or
dec
and
adc
inc
call
arpl
xchg
out
and
and
jbe
aad
sub
mov
jl
js
mov
out
xchg
mov
adc
js
icebp
mov
pop
inc
repnz
xchg
stc
mov
out
js
outsb
out
mov
lahf
xchg
and
jg
jno
in
out
xchg
dec
sbb
pop
les
call
push
ljmp
or
sbb
sbb
pop
repnz
icebp
and
lock
cmp
mov
push
lret
mov
mov
adc
repz
es
cwtl
and
les
adc
and
dec
xchg
and
push
dec
dec
fldt
fisubl
out
pop
ret
or
inc
call
std
push
movsl
es
push
iret
les
jle
iret
frstor
into
push
mov
inc
repz
sbb
dec
call
add
icebp
or
out
ret
push
daa
xchg
jg
lahf
aas
jp
jmp
inc
add
in
mov
pusha
dec
cmc
repz
dec
xor
sbb
test
dec
mov
inc
mov
inc
adc
add
lahf
mov
jmp
loope
jo
lret
in
add
clc
jmp
pop
inc
and
pusha
lds
jne
mov
jno
cmp
ficomps
dec
xchg
stos
inc
dec
mov
mov
in
mov
inc
loop
je
adc
fnsave
imul
out
cmp
jne
and
pop
pushf
jne
std
addr16
xchg
sub
push
insb
lret
out
xor
sbb
sub
icebp
jno
adc
sub
add
loope
mov
xor
cmp
jmp
push
jmp
jg
call
repz
dec
ss
lret
mov
into
push
add
dec
xchg
cmp
cmp
xchg
mov
sbb
adc
push
arpl
push
pop
leave
insl
mov
xor
cmp
mov
add
imulb
sbb
call
leave
sbb
lea
mov
sub
std
mov
inc
adc
jecxz
jecxz
out
jno
ds
xchg
dec
imul
push
xchg
in
or
dec
call
push
sbb
and
sbb
inc
in
sahf
mov
inc
adc
xor
inc
cmp
push
mov
or
jno
sub
cmpsb
lds
les
jg
in
mov
lods
dec
cmc
repz
dec
xor
out
ss
inc
inc
sub
add
mov
push
jge
leave
xorb
mov
dec
xchg
adc
les
fidivl
and
js
mov
xchg
add
jbe
jb
jb
insb
in
cmp
out
jg
ljmp
push
cmc
repz
cltd
movsb
dec
ss
inc
cwtl
inc
inc
data16
xchg
es
mov
mov
dec
jb
jno
adc
clc
dec
mov
fxch
sub
in
jmp
xchg
pop
ret
xor
iret
jbe
addr16
inc
mov
pop
repnz
or
in
rol
test
daa
fmull
loop
cmp
inc
cld
mov
mov
xchg
xor
push
cld
sub
bnd
cmp
cmp
mov
cwtl
mov
or
test
loopne
mov
fiadds
sbb
xchg
inc
cmpb
jp
mov
inc
lret
ljmp
shr
repnz
jbe
and
xlat
daa
nop
sub
pop
push
imul
jmp
pushf
adc
fs
inc
cs
repnz
cmp
dec
out
inc
mov
dec
adc
in
fxch
loopne
or
inc
inc
jmp
std
stos
fsubr
rcl
rolb
cwtl
fistpll
out
gs
add
jge
adc
sahf
out
push
and
outsl
jecxz
cmp
repnz
inc
jmp
std
mov
push
ljmp
sbb
inc
stos
jno
add
push
inc
ds
cwtl
push
pop
call
out
in
gs
paddsb
jne
mov
cld
cmp
mov
outsb
lret
out
or
pusha
mov
mov
repnz
test
mull
mov
imul
fwait
pop
push
and
dec
shrb
push
and
lods
xchg
test
or
jb
imul
andl
and
push
outsl
adc
push
sbb
stc
jl
mov
jmp
inc
jmp
pushf
add
je
and
gs
or
les
fidivl
xor
gs
clc
jmp
jnp
inc
inc
int
lods
lds
ret
push
or
inc
lahf
repnz
imul
outsb
mov
jb
cmp
pop
repnz
xor
sub
mov
out
or
aaa
cwtl
outsb
and
dec
xlat
outsl
sbb
ds
aas
dec
gs
hlt
stos
xor
insb
sub
test
inc
lods
in
mov
cld
fldt
sti
xchg
lret
inc
int
xchg
or
add
and
jmp
pushf
adc
mov
outsl
mov
insb
mov
pop
cmp
into
inc
pop
xchg
aam
aas
orb
pop
mov
mov
mov
sbb
out
sarl
xchg
adc
cltd
sbb
in
xchg
and
push
sbb
cmc
lret
lock
mov
call
iret
jno
and
iret
jge
fs
mov
aad
jl
mov
adc
cmpsb
cmp
lock
divl
mov
mov
movsl
mov
push
fidivl
shr
mov
lahf
out
inc
orb
inc
ftst
dec
shl
fxch
mov
sti
mov
xchg
lcall
mov
cltd
and
sbb
test
or
push
dec
test
movsb
stc
mov
or
mov
pushf
stos
fbstp
inc
add
lods
arpl
divb
aam
xchg
jns
mov
nop
inc
mov
jnp
and
or
inc
and
pop
inc
push
shlb
fs
cmc
or
jmp
mov
out
test
dec
jle
sbb
mov
xor
fistl
repz
xor
xchg
or
addl
and
mov
jge
popa
push
popf
add
loop
pop
ret
punpckhbw
inc
in
lret
mov
dec
push
sbb
add
out
faddl
fcoms
mov
mov
xchg
push
arpl
and
wbinvd
out
cwtl
imul
popa
stos
lock
imul
cmp
jb
arpl
mov
push
cmp
xchg
inc
imul
sbb
jle
jne
jne
and
dec
mov
sub
sub
add
jl
int
or
xchg
or
fcmovb
inc
and
jg
movsl
gs
lea
call
jmp
and
clc
test
jno
xchg
negl
decb
xor
dec
aad
sbb
ja
repz
repz
sub
je
pop
imul
jbe
xor
daa
push
pusha
jbe
mov
fadds
sbb
add
fwait
dec
cs
jne
add
mov
int
jo
inc
and
movsl
cmp
jbe
repz
sbb
int
clc
ret
in
adc
cld
cwtl
shl
fimull
dec
dec
imul
dec
aad
lea
fldl
rorl
push
jnp,pt
icebp
ret
inc
jb
ja
lock
lea
call
dec
js
pop
xor
sahf
jecxz
lret
mov
jae
data16
and
sbb
out
popa
je
stc
sbbb
pop
repnz
inc
insl
inc
cmp
scas
jg
bnd
gs
fadds
or
cmp
add
jae
xor
xchg
lods
sbb
in
adc
dec
shrb
push
int3
xor
xor
sbb
subb
adcl
out
pop
in
mov
dec
inc
imul
inc
xchg
sbb
test
and
xor
arpl
outsl
hlt
xchg
and
enter
push
insl
hlt
pop
in
popf
test
lcall
popf
lock
xor
inc
push
cmp
push
cld
sbb
add
je
sahf
bound
loope
loope
mov
icebp
lcall
popa
orl
dec
jb
mov
or
xchg
leave
inc
add
sbb
pop
sbb
mov
inc
nop
lock
in
cmp
das
iret
ret
mov
movsb
movb
push
adc
mov
in
jge
xchg
lds
jae
sub
outsb
stos
inc
ja
sbb
popa
fcomi
mov
les
inc
sbb
fcomps
push
inc
xor
dec
into
stos
push
mov
fstl
dec
rcr
pushf
ss
arpl
pop
popf
mov
dec
mov
or
xor
inc
xor
aad
pop
scas
or
call
and
pop
insb
insl
ljmp
ret
test
dec
or
sahf
lcall
mov
jg
mov
movsb
insb
cmc
dec
jo
and
pop
shll
jno
cs
add
jnp
test
push
or
jbe
mov
add
push
gs
xchg
push
xchg
sti
pop
mov
and
inc
or
jb
jbe
int3
xor
xchg
xchg
mov
fwait
pop
fwait
test
in
sub
outsb
aad
sarl
dec
or
dec
jns
je
mov
lock
sahf
xchg
and
pusha
mov
shl
mov
cmpsl
lods
xor
push
fbld
adc
inc
jne
mov
pop
outsb
nop
scas
adc
mov
into
and
das
ss
loope
cmc
frstor
in
stc
sbb
sbb
outsb
sub
jmp
or
ljmp
inc
int
fs
push
jge
shrb
push
mov
outsl
and
fwait
and
adcb
rorb
mov
lods
xor
rorb
cmp
push
pop
out
lcall
int
and
fs
sarb
fdivrl
push
data16
add
mov
push
flds
mov
inc
lret
scas
sub
fcmovbe
inc
int
mov
pop
ret
hlt
add
mov
xlat
fisubs
fistps
push
test
js
jle
push
pop
dec
push
imul
lods
pop
xor
sbb
pop
roll
dec
push
js
mov
dec
loope
dec
test
sbb
mov
je
cmp
pop
mov
in
push
sub
adc
repnz
lods
ss
daa
and
insl
pop
xchg
inc
popa
dec
add
andl
test
je
mov
jl
das
fstl
or
dec
push
jmp
xor
loope
inc
adc
mull
mov
adc
xchg
xor
lahf
iret
inc
inc
sarl
dec
push
inc
loop
mov
inc
or
outsl
or
or
fs
je
icebp
add
bnd
inc
xchg
frstor
imul
ja
pop
add
push
push
jecxz
mov
add
jp
jmp
sub
je
inc
and
loope
push
push
pop
sub
xor
inc
mov
jmp
lcall
or
imul
mov
sub
adc
jb
inc
int
push
icebp
or
inc
mov
cmp
xchg
sahf
mov
mov
call
fnstenv
lret
orb
sub
into
inc
xchg
imul
jl
jae
add
fildll
and
push
xchg
xor
ljmp
popa
inc
dec
fcomi
les
loope
add
into
push
iret
inc
inc
xchg
xor
pusha
sub
ret
mov
sub
jbe
jns
inc
je
inc
dec
push
imul
inc
jae
outsl
rol
push
stc
outsb
sbb
mov
stc
imulb
test
addr16
shlb
adc
or
dec
or
jbe
pop
clc
push
dec
cmp
je
aaa
mov
je
jo
sub
shl
imul
sbb
adc
xchg
add
inc
xor
adc
add
xor
sub
sbb
mov
in
push
stos
ret
out
notb
std
mov
jno
xor
iret
sub
mov
mov
sbb
rclb
pop
xor
pop
lret
test
pop
std
sbbb
ja
dec
cld
sbb
push
std
adc
out
repz
dec
aam
out
jmp
int
or
mov
popa
daa
das
cmp
icebp
inc
xchg
inc
lret
in
lods
in
jnp
imul
adc
inc
pop
push
cmp
fsubrs
lret
pop
je
or
in
mov
sub
lods
dec
jge
inc
out
add
mov
pop
arpl
mov
cmp
repnz
outsb
nop
jmp
and
add
inc
loop
cmpsl
pop
or
sub
test
insl
test
call
jbe
repnz
test
pop
outsb
lahf
cmp
es
pop
mov
in
jns
xorl
cltd
movsl
pop
xor
xchg
push
lods
aas
lcall
add
dec
movsb
pop
sbb
movsb
pop
cmp
mov
sbb
idivb
adc
loop
or
jno
inc
xchg
add
add
add
scas
cmp
sbbl
and
and
fnsave
xor
push
lock
cli
inc
mov
jle
fstl
nop
sti
int
aas
mov
mov
out
test
clc
mov
sub
enter
inc
imul
mov
imul
ficoml
lock
imul
aad
fsubr
ficoml
lret
lock
rcrb
aad
xor
in
and
or
lock
adc
icebp
jb
imul
mov
cwtl
dec
inc
aam
add
sti
mov
ds
data16
xchg
fdiv
lock
shll
xchg
jbe
aaa
aas
jns
xchg
and
dec
mov
loope
jecxz
add
bound
loope
stc
xchg
movsl
imul
and
rcrb
inc
movl
lret
adc
and
dec
jno
push
push
inc
or
and
lds
or
inc
loopne,pn
bound
push
push
in
arpl
mov
inc
sbb
jne
pop
popf
popa
cmpsb
mov
cmp
xchg
arpl
adc
test
xchg
hlt
dec
rcrb
pushl
sahf
push
gs
push
mov
mov
pop
movsl
inc
jns
and
negb
and
or
xor
lret
lea
lds
inc
push
pop
jns
jmp
jmp
into
adc
movsl
outsb
cmpsb
push
int
mov
mov
sbb
xor
mov
push
xor
pop
mov
add
inc
mov
mov
test
shll
subb
cld
fsts
mov
outsl
lds
mov
imul
add
movsl
push
xor
xor
mov
int3
fstl
dec
push
mov
fs
bnd
loope
andb
xor
xor
cmpsl
iret
dec
adc
jne
inc
push
popa
dec
jns
mov
sub
adc
enter
inc
mov
inc
fnstenv
xor
loopne
dec
inc
jmp
mov
cli
cmp
jb
aas
adc
or
hlt
sbb
jbe
cltd
in
inc
pop
in
test
sub
xchg
push
jbe
cmpsb
xchg
push
jae
adc
xor
jg
adc
jb
push
pop
mov
enter
loope
inc
insb
push
les
imul
adc
cmpsb
imul
sbb
test
pop
cmp
rorl
js
addr16
cmp
pushf
aas
adc
xchg
mov
frstor
outsl
fldenv
mov
push
mov
repz
push
push
addr16
imul
lcall
lret
jo
insb
inc
inc
and
nop
jno
jae
lret
jne
sbb
out
sti
roll
fbstp
stos
cmp
sbb
repnz
jnp
mov
test
cwtl
out
rorl
rorl
dec
cmpsl
xor
adc
out
inc
mov
ljmp
fldenv
loopne
push
inc
repnz
pusha
outsl
mov
fs
mov
stos
cmp
stos
dec
mov
mov
test
loop
dec
sbb
cmc
xchg
repnz
and
dec
rol
pop
scas
jl
imul
fsubrs
push
mov
js
sbb
shrd
add
xor
add
dec
xlat
insb
sub
lock
pop
or
mov
je
loop
aad
stos
jns
shr
test
rcr
rclb
cld
and
cmp
cwtl
mov
call
sbb
and
xchg
dec
dec
add
dec
rol
jge
cmp
inc
add
pop
pop
add
addr16
pushfw
pop
rol
mov
addr16
outsb
sbb
cmp
sbb
into
sbb
cmp
xchg
out
test
shr
inc
leave
push
imul
popf
jnp
daa
push
shlb
cwtl
ret
call
pop
pop
jmp
nop
dec
dec
daa
add
icebp
pop
xchg
sbb
jno
jmp
imul
mov
adc
daa
push
jge
fldcw
jg
out
dec
cmp
leave
in
std
push
stc
test
imul
xchg
xchg
jae
dec
lret
jb
mov
faddl
push
jmp
pop
hlt
xorl
dec
mov
movsl
cld
or
and
fld
inc
xor
jae
repnz
daa
fs
xchg
jmp
push
pop
shlb
mov
testl
rclb
aad
lock
test
pop
xchg
inc
aam
dec
inc
sarl
inc
fildll
cmpsb
push
dec
xchg
inc
fbld
andb
fcoms
test
push
rol
xor
mov
daa
fs
or
jae
push
arpl
push
out
test
std
sbb
jle
dec
testb
sbb
dec
inc
jmp
jg
cmp
pop
in
xor
mov
mov
pop
dec
add
jg
push
out
out
pop
popf
sub
decb
sbb
xor
lret
bound
mov
shl
icebp
jae
sub
mov
push
push
js
inc
jo
ds
pusha
into
sbb
inc
or
sbb
mov
xchg
cli
or
push
add
in
cmpsb
stc
mov
pcmpgtb
outsl
lahf
in
mov
mov
and
pop
jb
test
outsl
ja
pop
in
in
jb
rclb
mov
in
inc
dec
sti
add
mov
pushf
imul
xor
push
sbb
sub
pop
mov
xchg
and
les
sbb
outsb
and
mov
in
cli
jns
cmpsl
ds
lret
dec
and
xchg
ljmp
data16
clc
inc
add
mov
andb
ljmp
push
jp
std
lahf
sbb
shrl
dec
jbe
lret
xor
mov
push
cli
stc
outsb
icebp
add
adc
xor
shrl
sbb
xchg
dec
dec
call
adcl
out
popf
subb
pop
repnz
stc
add
push
mov
pop
cwtl
ljmp
adc
popf
js
push
cmp
add
mov
sub
mov
xchg
arpl
cltd
xchg
and
and
cmp
jl
add
sbb
hlt
cmp
les
push
jo
stos
push
lock
out
pop
into
adc
mov
fidivl
inc
cmp
stos
loopne
fisttps
lods
mov
push
rcll
test
hlt
data16
and
daa
pop
es
mov
push
pusha
push
jecxz
mov
cld
cmc
and
lock
movsl
add
xchg
or
aaa
icebp
dec
hlt
jg
shlb
and
jge
xchg
and
inc
xor
dec
xchg
std
je
sbb
adc
add
push
pop
mov
xchg
dec
jno
push
bound
mov
push
mov
insl
scas
cmpb
mov
sub
insl
adc
push
pop
in
add
arpl
hlt
inc
mov
sub
add
ficomps
mov
cli
mov
cmpb
subb
dec
jle
pop
xchg
mov
les
and
dec
or
cs
leave
insl
push
inc
jae
cmp
int3
push
xor
hlt
push
mov
cmp
imul
into
and
push
cmc
repnz
or
dec
pop
inc
out
in
ret
jno
call
sbb
in
add
mov
jp
cmp
sub
jg
inc
sti
jns
fmul
jge
pop
jp
rcl
lock
rol
fidivs
lahf
jo
sub
rorl
cltd
lahf
pop
and
lcall
and
int
cmp
jle
icebp
jns
je
inc
das
jo
sbb
rorl
push
cs
cmp
rcr
mov
and
jge
sarl
out
dec
dec
outsl
cmp
shl
sti
inc
pop
xor
dec
sub
xchg
jae
add
mov
pop
pusha
fs
aaa
orl
xor
cmp
es
test
mov
xor
pop
or
mov
imul
cmpsb
dec
jae
stos
dec
fnstsw
out
xchg
push
inc
lds
mov
lret
pop
mov
mov
inc
adc
xchg
and
jmp
fwait
push
jge
jo
movsl
sbb
idiv
push
pop
pop
push
movl
sbb
dec
push
mov
jae
mov
paddusb
adc
leave
cmp
ja
lock
in
mov
mov
daa
mov
or
cmp
pop
xor
shr
repz
sub
enter
sbb
test
pushf
mov
jae
pop
jmp
mov
ret
outsb
xchg
sbb
mov
test
mov
push
icebp
inc
pop
pushf
mov
divb
or
loop
pop
fwait
inc
xchg
dec
mov
fnstsw
shlb
ss
dec
inc
pop
sub
arpl
iret
add
aad
jo
jns
ljmp
cmpsb
int3
cmpsb
dec
aas
imul
leave
add
int
call
js
xchg
mov
hlt
call
lahf
inc
inc
lods
jne
dec
lock
dec
xchg
inc
jl
xchg
bound
add
test
jo
js
and
outsb
scas
outsb
dec
jmp
sbb
icebp
or
lcall
out
je
scas
cwtl
stos
insb
adc
bound
jmp
scas
push
xchg
mov
call
sub
xor
push
in
lret
and
mov
mov
jno
fldcw
push
jbe
push
dec
rolb
xchg
je
cwtl
xor
dec
dec
dec
stc
or
cmp
imul
adc
int
mov
in
add
pop
aad
imul
outsb
hlt
dec
inc
jle
pop
imul
jg
in
jg
icebp
and
jno
push
adc
adc
cwtl
adc
pop
jge
or
mov
dec
dec
inc
faddl
inc
loopne
ds
xchg
loopne
movl
add
inc
add
inc
icebp
inc
inc
ficoml
inc
sti
mov
icebp
addr16
sub
lods
add
shr
lock
lahf
loop
ljmp
inc
imul
inc
negl
jg
stos
jp
es
dec
add
and
jmp
mov
inc
lock
js
and
imul
imul
jge
add
dec
inc
imul
jne
mov
sbb
xchg
sbb
stc
lock
pushf
mov
jmp
clc
dec
lds
push
jns
and
outsb
stos
jne
mov
addr16
icebp
negb
decl
jl
push
mov
sbb
cmp
js
mov
sbb
sub
fmuls
dec
jno
testb
insl
loop
out
out
or
dec
cwtl
jne
push
data16
outsb
inc
ja
cld
call
les
loop
jl
das
imul
lret
lods
movsl
jnp
pop
jno
pop
add
jo
mov
xchg
mov
inc
add
or
dec
pushl
push
lock
mov
sub
pop
in
sbb
and
in
dec
jo
into
inc
scas
cmc
lcall
imul
test
lret
mov
dec
and
in
aad
jge
xor
faddl
aaa
enter
and
pop
enter
dec
sar
or
jg
dec
or
roll
test
or
push
pop
dec
add
or
pop
rcl
fisubrl
jo
push
inc
outsl
fimull
jmp
dec
in
add
dec
inc
fdivr
sub
nop
dec
shlb
or
dec
mov
sbb
lock
mov
and
loope
imul
mov
jns
icebp
pop
mov
inc
sub
faddl
jle
xchg
in
push
jecxz
popa
inc
mov
divb
xchg
daa
mov
jle
arpl
lea
sbb
jns
push
inc
lcall
sub
sbb
lds
call
pop
pusha
pusha
pop
shrb
into
lods
repnz
sbb
fsin
inc
or
xor
testb
jecxz
lock
dec
lods
outsl
lahf
cltd
jns
and
push
adc
inc
icebp
push
mov
leave
repnz
lock
inc
sbb
sub
imul
lods
subl
push
lock
int
imul
test
inc
sti
pop
sbb
fsub
sbb
jno
cmp
icebp
fwait
call
loopne
xor
xchg
add
outsb
dec
out
mov
repnz
psubusw
mov
push
fs
xchg
mov
bound
adc
add
outsb
mov
xor
pop
and
cvttps2pi
pop
dec
icebp
add
das
jp
mov
mov
imul
adc
mov
cmp
lahf
sbb
lock
inc
push
mov
xchg
std
adc
inc
jns
vpsllw
cmp
in
sahf
inc
cmpsl
insl
fistl
mov
popa
xor
push
mov
mov
imul
jbe
lods
es
jp
sbbl
xchg
inc
int3
mov
mov
mov
imul
sub
nop
daa
in
fistpll
lock
fmull
aas
mov
ret
popf
or
fs
cld
imul
jl
add
ljmp
cmp
stos
cmp
pop
adc
sbb
aad
inc
icebp
mov
imul
inc
ds
andl
or
xor
mov
jge
mov
jge
stos
dec
push
test
adc
jb
jno
jo
lret
test
add
sub
sahf
inc
push
pop
jns
pop
lods
orb
ficompl
push
insl
jno
js
and
addb
mov
mov
jo
js
and
jno
scas
rcrl
cmp
push
fscale
cmp
inc
aad
gs
mov
and
lret
jo
jge
jns
icebp
push
in
jl
jl
roll
testb
jo
jb
fsubs
xchg
jg
jns
mov
test
inc
adcb
cmpsl
jge
sbb
repnz
call
dec
or
and
push
insl
movsb
dec
jmp
dec
xchg
xor
jo
js
and
outsb
push
jne
mov
ret
push
xchg
push
inc
ror
dec
jnp
sub
add
adc
icebp
mov
pushf
cmpsb
mov
jmp
dec
in
dec
jnp
int3
outsb
push
lret
ret
ss
lret
aam
xchg
popa
mov
ret
loopne
or
stos
mov
inc
cmpsl
in
gs
insl
pop
xor
ss
cmpsl
jecxz
pop
mov
push
jmp
pop
add
add
cs
dec
stc
add
cmp
cmp
xor
jge
xchg
jp
es
mov
insl
icebp
cli
inc
xchg
popf
pop
popf
mov
in
subb
mov
mov
inc
es
dec
clc
push
add
subb
adc
adc
ljmp
pop
cli
inc
jl
cmc
sub
or
or
cmp
shr
inc
inc
int3
push
inc
pop
pop
jo
jns
and
adc
xchg
gs
dec
gs
flds
dec
xchg
xchg
loop
jnp
jg
cmp
cltd
jbe
in
or
imul
pop
inc
jae
add
jmp
mov
mov
inc
repnz
outsl
loop
imul
insl
push
and
add
mov
dec
fbld
aas
lods
ds
mov
repz
add
mov
out
mov
dec
mov
dec
pop
dec
pop
sub
clc
mov
into
xlat
push
or
inc
in
fldcw
inc
ret
js
and
lret
jno
pushl
imul
sub
iret
hlt
add
sbb
mov
fwait
icebp
xor
mov
pop
pop
fucom
ljmp
roll
iret
ss
jae
mov
dec
mov
stc
push
adc
pop
lret
pop
jne
mov
ret
dec
xchg
stc
fwait
popa
lock
sbb
in
rol
test
out
and
inc
mov
sub
hlt
lds
sbbl
test
cs
mov
xor
inc
cmpl
add
lds
cwtl
xorb
faddl
xorl
and
sub
add
shrb
imul
loope
leave
std
mov
jno
dec
fbstp
or
cmc
loopne
inc
ret
movsb
fisubrs
sub
xchg
in
pop
cmp
neg
fcmove
xor
dec
cmpsb
movsb
mov
jne
mov
xor
mov
call
xchg
arpl
ja
dec
push
add
add
iret
subl
jns
es
jns
jno
xchg
sub
sbb
push
insb
mov
je
jmp
xor
sti
pop
lret
mov
sbb
add
stos
test
jbe
lret
std
mov
mov
lahf
pop
ret
jne
mov
mov
cmpsl
std
int3
mov
xor
into
inc
lcall
ror
fidivrl
jno
xchg
and
jl
mov
je
jmp
int
das
adcl
lock
pop
aam
js
mov
sahf
aas
ret
stc
xor
and
jo
xchg
out
rcr
outsl
mov
je
pop
and
int3
add
and
test
push
loope
aam
adc
fnstsw
push
cli
cld
int3
mov
mov
lcall
xchg
fcom
jb
insb
mov
je
call
push
fdivrp
rorl
loope
cltd
fucom
into
int3
mov
lahf
test
xchg
mov
ljmp
fldenv
hlt
or
adc
add
mov
daa
sahf
xor
iret
cmpl
shrl
push
insb
mov
je
jmp
jge
jl
iret
shrb
lret
int3
mov
lahf
pushf
ret
into
xor
loope
push
adc
sbb
ret
enter
fidivs
test
shlb
push
ret
mov
je
inc
nop
jo
inc
pop
ret
in
lds
je
inc
mov
cmpsb
or
mov
lds
cld
jo
and
pop
nop
lds
fidivs
mov
mov
dec
pop
je
inc
loop
cmpsb
push
pop
mov
mov
jo
push
pop
outsb
inc
xchg
adc
dec
notb
outsb
pop
push
shrb
dec
scas
nop
jo
push
xor
sahf
rolb
jnp
and
rcrl
cmp
xlat
in
test
fidivl
xor
pop
cmp
roll
aaa
aad
jns
test
jg
icebp
fwait
js
and
inc
xor
icebp
fstpt
jecxz
std
pusha
fildl
repz
and
aas
add
pop
bound
jbe
popa
out
je
dec
adc
dec
dec
shrb
mov
aad
push
push
enter
shrl
push
cwtl
pop
lret
cld
dec
push
incl
mov
xlat
push
xchg
inc
aam
dec
sub
jbe
in
into
sub
pop
or
call
aas
scas
lahf
inc
push
pop
dec
ficomps
push
fldenv
shll
repnz
add
mov
insl
jne
mov
outsl
mov
xor
ljmp
jg
dec
sahf
insl
or
dec
mov
mov
clc
push
add
arpl
push
cld
jecxz
jmp
adc
rcrb
in
imul
jne
adc
inc
xlat
mov
pop
enter
clc
push
xlat
fdivl
pop
nop
push
and
fidivrl
movsb
xchg
pushw
adc
pop
aad
mov
sub
cmp
enter
fildll
and
sub
xchg
push
jle
adc
fstl
lods
nop
cmpsl
sbb
jno
shll
movsb
add
jns
or
aaa
mov
sub
sub
lahf
or
pop
lds
push
call
xor
xor
or
xchg
into
inc
stos
xchg
pop
pop
lods
insb
outsb
lret
push
lods
inc
xchg
call
mov
jmp
and
dec
push
push
add
rcrl
xorl
add
and
add
adc
sub
or
adc
cmp
adc
pop
add
adc
pop
or
jecxz
enter
lcall
std
cmp
xchg
sahf
pop
pop
in
mov
cmpsb
xlat
inc
and
scas
dec
inc
scas
and
imul
test
sti
inc
inc
orl
fldenv
cli
mov
nop
sahf
and
sbb
mov
ss
and
shll
dec
sub
jg
mov
ret
sbb
add
cld
dec
incl
inc
xchg
and
loopne
cltd
jo
xchg
jecxz
aad
lods
push
pop
or
cs
inc
fistpl
add
scas
xchg
dec
loope
jne
aam
dec
add
xchg
push
xor
outsl
inc
lret
movb
push
sbb
dec
dec
das
mov
ds
dec
jo
cs
shlb
sbb
cmp
pop
cli
cmpsl
fmuls
fidivrl
js
xchg
fcmovnu
data16
sub
cld
inc
fucomp
addr16
int
mov
dec
iret
loop
sbb
repz
ret
cltd
aad
popa
leave
lock
add
pop
mov
pop
fstpt
adc
int3
aam
add
jae
fisttpll
bound
add
enter
sbb
icebp
fs
jno
into
in
clc
xchg
dec
sub
shll
lcall
push
mov
fdivr
adc
es
call
clc
push
mov
outsb
cmp
insb
outsl
nop
ret
sub
xchg
jge
insb
inc
mov
xlat
xchg
jo
jo
or
xchg
jmp
test
dec
jno
jp
in
test
pop
dec
leave
jmp
dec
mov
jge
or
inc
jbe
in
dec
orb
adc
cmpsb
cmp
jmp
sub
add
mov
mov
and
rcll
lahf
and
imul
adcb
xchg
addr16
mov
fimull
mov
mov
or
cmp
jb
aad
stos
stos
int3
sub
enter
inc
hlt
sbb
pop
mov
inc
jl
pop
and
popa
xlat
in
mov
jg
test
dec
jb
cmpsb
mov
iret
sub
pop
jnp
outsl
mov
add
push
inc
mov
loope
je
lret
push
push
lods
sub
inc
enter
icebp
or
jns
push
loopne
jb
filds
inc
int
aaa
daa
roll
sub
mov
add
jae
movsl
push
dec
test
mov
fisttpll
add
enter
cmp
adc
jns
push
and
jb
or
mov
add
sbb
jne
incb
pushf
xchg
mov
hlt
pop
push
cmpsb
and
daa
dec
and
pop
or
pop
jno
mov
arpl
adc
mov
dec
or
jne
mov
ret
notb
repz
jnp
and
call
xor
add
and
and
jl
xchg
icebp
addr16
cltd
repz
mov
int3
iret
int
sbb
sbb
lahf
inc
stc
inc
xor
sub
sbb
fistps
jae
mov
lretw
or
mov
ret
out
popf
sub
xor
dec
jns
js
jbe
adc
push
jae
mov
dec
sbb
jo
dec
jns
sahf
bound
repz
jp
sub
iret
in
cmp
add
pusha
push
push
xorl
out
popf
outsb
mov
lret
incb
je
jno
icebp
push
inc
inc
pushf
rorb
lcall
push
cli
mov
ret
cmp
repz
sub
and
jg
mov
fidivrl
divl
fnsave
loop
mov
lock
icebp
lock
and
jne
fstpt
cmp
or
add
repz
loope
cmp
add
push
mov
add
js
and
outsb
mov
mov
leave
in
push
dec
jns
mov
lea
cs
pushfw
decb
mov
sbb
dec
push
icebp
push
inc
xor
jae
mov
dec
inc
test
jne
mov
ret
into
xchg
xchg
xor
xor
dec
jns
test
sub
jae,pt
mov
dec
sub
mov
inc
xchg
push
les
lds
jns
and
imul
add
js
and
mov
ret
mov
ljmp
mov
ret
mov
dec
xor
mov
xchg
jmp
and
push
sub
xor
mov
repz
mov
enter
adc
sbb
out
jmp
xchg
sub
sbb
xchg
icebp
xchg
pushf
push
xchg
in
adc
jno
cmpb
fsubrs
lret
divb
mov
ret
cmpsb
xor
pushf
push
mov
mov
dec
cmp
jo
ret
add
repz
cmc
sub
enter
jg
mov
mov
jo
js
and
imul
sub
sbb
icebp
sahf
inc
mov
mov
jecxz
arpl
icebp
xor
pushf
fimull
mov
jo
cmp
pushf
mov
lret
mov
dec
push
xchg
jle
jne
mov
ret
cmp
repz
jnp
sub
enter
jg
xchg
mov
dec
mov
jo
js
and
outsb
stos
jae
or
iret
xchg
add
into
inc
jp
out
mov
mov
dec
lret
push
jne
mov
ret
into
xchg
mov
or
daa
jl
stos
test
sahf
push
xchg
cmp
jmp
cmc
sub
or
and
and
mov
dec
popf
add
clc
js
and
outsb
mov
into
movsb
jno
mov
outsb
add
mov
ret
notb
repz
jnp
and
call
or
add
xor
and
pop
fsubrs
cmpl
lods
iret
mov
mov
sahf
inc
mov
mov
push
lock
and
sub
mov
ret
ljmp
dec
insl
dec
pushf
push
enter
push
and
shrl
in
iret
cmc
add
adc
sahf
pop
adc
imul
jno
js
and
outsb
ret
mov
ret
adcb
add
dec
cltd
outsb
xchg
and
jp
sub
iret
icebp
add
adc
loop
pop
jns
nop
push
cltd
jo
js
and
outsb
out
jne
mov
ret
stos
cwtl
in
sub
and
mov
sub
cmp
pusha
push
push
test
js
and
outsb
mov
adc
add
inc
mov
mov
dec
push
pushf
adc
push
mov
dec
or
imul
sbb
lret
jp
sub
iret
icebp
add
or
xor
add
fldenv
outsb
xorb
push
leave
in
xor
add
rolb
pushf
decb
lret
cmp
pushf
or
jb
out
push
inc
sbb
jo
ret
push
xchg
inc
lock
std
repz
sub
and
jg
jae
mov
dec
mov
enter
in
js
and
bound
jne
inc
jne
addb
dec
outsb
shlb
mov
ret
sahf
xchg
mov
shlb
lahf
mov
jmp
rol
push
push
sbb
jo
ret
sub
repz
jnp
and
jmp
ret
xor
add
mov
ret
ret
xor
sub
ja
push
push
pushf
push
mov
shlb
mov
dec
inc
mov
jp
sbb
rclb
repz
jnp
sub
mov
enter
push
xchg
inc
mov
sub
inc
cmp
inc
jne
jp
sub
cmc
popf
notl
int
pop
push
lock
and
out
xchg
outsb
sahf
jne
mov
ret
scas
xchg
fnsave
pop
mov
outsb
push
jne
mov
ret
es
push
mov
inc
xchg
push
test
adc
loope
pop
pop
or
jns
and
mov
inc
lock
es
xchg
add
inc
pop
nop
pop
dec
add
dec
popa
mov
xchg
xor
dec
push
test
clc
sub
call
mov
hlt
hlt
ljmp
lahf
mov
push
inc
jns
jne
jne
xor
sbbl
mov
addr16
jno
mov
mov
push
pop
mov
mov
inc
dec
add
fs
pop
shlb
ret
and
xor
mov
cltd
test
mov
cmp
iret
inc
jno
popa
cmpsl
out
push
cmp
jb
test
cli
mov
lods
xchg
pop
inc
mov
inc
push
icebp
jae
adc
jno
jb
testl
lock
outsl
mov
cmp
jns
inc
mov
popa
icebp
xorb
popf
lea
mov
add
jge
dec
xchg
jmp
xorl
xor
out
sbb
and
sub
cmp
or
mov
popa
cmp
or
inc
in
orl
or
fs
jbe
imul
dec
xorl
inc
or
mov
loopne
pop
psubb
jp
mov
out
mov
shrl
jmp
jg
subb
cwtl
sbb
jg
js
enter
inc
jbe
mov
xchg
js
ja
lcall
cli
cli
js
jns
inc
mov
leave
pop
sub
icebp
es
js
inc
leave
js
out
push
mov
sahf
jno
dec
inc
fidivrl
mov
xor
enter
outsl
ret
arpl
or
cmpsb
mov
jmp
mul
jp
adc
dec
xor
arpl
fstpt
inc
add
push
mov
mov
mov
int
mov
sbb
push
mov
cmc
fnsave
jo
add
mov
in
adc
dec
add
mov
popf
cmovno
pop
and
sahf
loop
scas
mov
push
dec
mov
adc
mov
add
dec
in
inc
andb
fstpt
mov
mov
mov
xchg
out
inc
cld
dec
sbb
inc
push
and
mov
add
shr
div
mov
lock
scas
cmp
or
nop
movsb
cmp
enter
pop
jnp
jmp
mov
insb
ret
pop
jge
cmp
stos
fbld
jno
or
inc
jb
inc
shlb
iret
cltd
mov
mulb
mov
xor
lea
rcrb
mov
orl
jne
loope
bound
subb
mov
addr16
jno
repnz
xor
jno
je
jns
cmp
jne
mov
inc
std
imul
test
jo
jp
inc
and
mov
and
jno
push
or
and
push
subb
mov
or
lods
xchg
into
dec
jp
enter
fiaddl
mov
pusha
divl
ljmp
mov
or
icebp
cli
js
dec
cmp
fstp
cmc
lds
inc
lock
jo
inc
push
cmp
dec
stos
test
jnp
push
lret
scas
adc
call
mov
ret
push
pop
lock
shrb
adc
in
jne
or
imul
cmpsl
lds
scas
fcomi
repz
fs
data16
cmp
adc
test
or
lods
mov
mov
sub
sbb
sub
negl
and
orl
mov
or
xor
jno
or
test
les
call
xor
ret
push
adc
or
sbb
and
xor
sbb
inc
jno
lea
outsl
test
popf
out
out
sbb
shl
dec
add
lcall
push
daa
cmc
adc
pop
fidivrs
dec
mov
loopne
xchg
xchg
in
pop
call
loopne
in
dec
insl
pop
fstl
ficomps
inc
loop
and
jl
and
pusha
push
shlb
sqrtps
jns
or
jbe
pusha
push
dec
and
pusha
or
cmc
jno
push
pop
xlat
jmp
sub
imul
and
mov
inc
xor
aaa
loope
inc
xor
push
mov
mov
aad
push
pusha
aad
fs
push
mov
or
enter
daa
jns
push
popf
test
mov
inc
lds
sahf
inc
sub
fisttps
inc
gs
fwait
std
mov
gs
xor
fwait
lret
sbb
lock
scas
lock
push
lock
jae
loop
dec
jle
cmp
pusha
fcmovnu
push
cli
ljmp
cli
mov
cli
scas
fists
adc
fwait
pop
mov
fdivrl
pop
into
pop
fmul
pop
out
fdivr
pop
push
fucomp
pop
push
fstpl
pop
fisttpll
pop
fnstsw
pop
pop
pop
dec
fstpl
jns
dec
jge
jae
jl
jl
lahf
inc
fstpl
pop
scas
pop
repnz
pop
loop
sti
adc
cld
adc
pop
std
pop
out
adc
pop
xchg
or
fstpt
jge
jle
adc
and
adc
imul
test
adc
mov
xor
fdivrp
jno
lock
fwait
movsb
enter
push
inc
repz
arpl
icebp
sub
sbb
add
fidivl
imul
test
pop
scas
inc
mov
hlt
test
cwtl
push
sbb
sbb
rcrl
sbb
jl
jl
jg
inc
push
pop
jo
inc
adc
jge
rsm
pop
iret
xor
xchg
push
out
jne
add
adc
scas
aas
mov
mov
xchg
add
out
fdivp
js
jecxz
cmpsb
das
mov
dec
test
addr16
pop
jge
inc
push
fisubl
icebp
adcb
sbb
adc
out
fs
sahf
das
in
int3
sub
and
cwtl
sbb
mov
int
movsb
pop
sahf
inc
xchg
dec
test
sahf
mov
jo
lret
nop
test
push
dec
adc
add
cmp
adcb
add
push
movb
gs
add
add
outsl
push
ds
repz
mov
sub
push
roll
adc
dec
mov
enter
test
bound
push
adc
pop
or
push
add
add
shrl
std
lea
cmpsb
jl
jae
jg
jge
jle
jle
lea
roll
pop
sbb
fbstp
xchg
cltd
xor
adc
andb
xchg
popf
jge
loopne
lahf
mov
jo
pminsw
add
imul
mov
out
or
sbb
adc
insb
lcall
adc
sbb
sbb
jb
mov
imul
adc
test
jl
cwtl
out
jo
pushf
and
push
sahf
inc
mov
orl
inc
in
jmp
jb
add
pusha
add
iret
add
fwait
add
aas
jp
or
adc
adc
das
sub
and
dec
call
mov
inc
push
inc
sbb
aaa
movsl
inc
ret
push
xor
pop
ljmp
pushf
sbb
dec
adc
xor
arpl
out
xchg
gs
orb
scas
andl
es
mov
adc
inc
adc
mov
adc
xchg
rorb
mov
sbb
add
xor
aaa
push
addb
or
xchg
ret
out
dec
jae
dec
pop
popa
add
xchg
xchg
movsl
jmp
sub
xor
cmpsl
shlb
daa
fs
cmpsl
in
loope
cmp
pop
pop
ret
mov
mov
shl
call
adc
xchg
out
cmpsb
fbld
cli
mov
cli
pop
jge
mov
jl
pop
lcall
daa
cli
or
aaa
cli
cmp
inc
cli
sub
push
cli
addr16
inc
pop
sbb
negl
or
out
cmp
pop
push
sub
pop
push
pop
push
aaa
push
dec
jnp
test
jg
push
jmp
inc
cld
shlb
adc
sub
push
xor
cmpsl
push
xlat
fucomp
push
fstpl
push
neg
or
jae
fstl
pop
sub
pop
pop
pop
fnsave
pop
dec
frstor
pop
jp
push
adc
inc
std
gs
adc
add
sub
add
aad
pop
sub
add
cmc
add
in
sub
add
sub
add
aas
inc
arpl
out
je
decl
gs
cs
and
dec
xor
and
dec
aad
pop
dec
lds
dec
cmc
and
dec
in
dec
xchg
and
dec
test
dec
mov
mov
dec
push
and
rorl
jg
xchg
mov
lahf
fdivs
push
mov
push
add
test
push
in
push
xchg
sub
push
mov
mov
push
push
sub
pop
inc
gs
xor
jmp
xor
push
adc
pop
das
mov
mov
ffree
push
repnz
iret
fucom
push
fstl
push
out
fldl
push
pop
fnsave
push
paddusw
push
aas
fstl
das
fldl
pop
fnsave
data16
xorl
adc
nop
das
mov
inc
nop
dec
mov
les
jg
in
mov
std
movd
aas
jle
das
jbe
or
out
mov
jge
addr16
push
sbb
add
das
cli
xor
aas
cli
and
dec
cli
aam
pop
mov
incl
sbb
lock
mov
lock
sbb
out
inc
inc
sbbl
push
outsb
mov
lea
scas
lret
scas
cli
xlat
test
pop
jae
inc
in
fmull
pop
fnsave
div
frstor
push
aas
fstl
das
fldl
pop
cmp
bound
outsl
rolb
push
frstor
push
scas
ffree
push
repnz
iret
fucom
push
fstl
push
out
fldl
push
pop
fnsave
push
paddusw
push
aas
fstl
das
fldl
xlat
cmp
outsl
data16
hlt
decl
movsb
sbb
gs
repz
out
cmpsb
cmp
cmp
pop
cmpsb
sub
dec
cmpsb
pop
iret
jae
dec
add
aas
addr16
pop
pop
and
dec
pop
and
dec
aaa
and
iret
mov
imul
mov
cltd
inc
lahf
pop
test
inc
mov
pop
add
stc
ret
jle
or
outsb
fistps
cli
push
fildll
cli
push
fistpll
cli
fisttps
fistps
fimuls
stos
sbb
xchg
push
xchg
sub
push
mov
rcll
rcll
das
out
inc
push
add
callw
pop
sub
push
pop
sub
pop
aaa
icebp
dec
rclb
ffree
push
rcr
lock
rcr
push
icebp
fstl
jmp
cmp
mov
inc
ss
jne
clc
test
bound
inc
pop
pop
sub
inc
das
pop
jno
negl
inc
lcall
inc
out
lea
pop
xchg
inc
xchg
pop
movsl
inc
mov
pop
aad
notb
in
sbb
inc
cwtl
lds
test
test
mov
movsl
mov
shlb
cmc
adc
in
cmp
pop
mov
stos
pop
fldl
shll
sub
push
or
les
pusha
sbb
out
aaa
sub
pop
fwait
lods
push
movsl
push
in
fisttpll
adc
push
cltd
lods
xchg
stc
test
add
enter
mov
shlb
movsl
mov
ffree
clc
movsl
aad
in
mov
pop
movsl
inc
xchg
in
inc
mov
scas
and
fs
or
adc
inc
daa
pop
push
inc
sub
inc
rcrl
inc
fistpl
inc
ret
pop
jno
lcall
inc
xchg
inc
pop
mov
mov
mov
inc
cmpsl
pop
fldcw
push
pushf
stc
imul
je
xchg
pop
test
mov
pop
clc
pop
lock
pop
call
fsubr
sub
dec
jg
sub
add
sub
adc
jp
or
rcll
sbb
cli
push
fildll
cli
fildll
into
fbstp
neg
jge
filds
cli
mov
cli
scas
cli
push
pop
adc
in
jb
sbb
imul
and
aas
pop
inc
inc
sub
inc
repz
addl
nop
xchg
mov
xchg
nop
mov
scas
nop
fnstcw
pop
fwait
jmp
test
stc
mov
push
nop
xor
mov
es
dec
mov
cli
nop
lea
xchg
nop
popf
mov
xchg
push
je
inc
sbb
sbb
pushf
push
pop
sub
daa
sub
das
sub
xlat
sub
fildll
gs
xor
push
adc
jge
jge
jle
cmp
jnp
xlat
adc
shlb
test
pop
and
lods
sbb
ficomps
cld
sbb
out
push
or
add
and
xor
push
push
and
inc
dec
push
sbb
inc
insb
popa
lea
xchg
aaa
push
and
pop
cmp
and
popa
inc
lcall
inc
jecxz
xchg
inc
jmp
cltd
inc
xchg
pop
mov
inc
jg
push
pushf
sub
xchg
popa
pop
mov
cltd
pop
test
mov
pop
cld
fmul
cmp
dec
popf
jne
testl
test
stos
adc
xchg
adc
jecxz
rcl
repz
inc
ficompl
call
jb
adc
push
adc
jle
sahf
lret
out
jecxz
shlb
pop
mov
pop
mov
push
into
outsl
and
xchg
xchg
arpl
fbld
xchg
fwait
push
lret
aam
push
lcall
fs
ss
adc
xchg
sbb
adc
nop
pop
xchg
icebp
inc
add
push
or
xor
push
cmp
lret
inc
fcoms
inc
sbb
jle
cltd
sbb
inc
push
insb
cs
lea
ljmp
mov
test
sbbl
xchg
dec
mov
rcr
mov
aas
or
inc
insl
inc
sahf
aaa
mov
mov
subb
and
adc
lret
fs
lods
fcomps
ds
adc
ficomps
push
stos
push
add
add
fwait
int
arpl
test
std
mov
add
lahf
icebp
sbb
or
scas
mov
fstp
push
stos
fst
xchg
cmp
mov
push
mov
lret
mov
adc
out
inc
push
popf
aas
mov
inc
xchg
mov
pop
clc
lds
cmpsl
gs
and
lret
sub
add
or
ja
lcall
pop
outsb
cld
mov
mov
push
or
push
push
cld
sbb
inc
mov
and
sub
sub
fwait
std
pop
cmp
pop
in
lret
cld
pushf
pop
pushf
mov
aam
setp
mov
mov
mov
cld
pop
jge
push
adc
rol
ret
test
hlt
sbb
inc
repz
scas
push
outsb
cwtl
das
ror
hlt
stos
adc
mov
xor
jmp
pop
cltd
jmp
adc
mov
sub
in
or
cmp
inc
test
mov
fldenv
xor
test
leave
das
lods
jno
or
push
and
pop
in
lcall
pop
xor
inc
aas
roll
pop
lret
and
dec
andb
mov
movsl
dec
ret
push
mov
mov
shlb
in
dec
jmp
jge
dec
mov
test
cld
mov
mov
adc
xchg
inc
mov
or
inc
ds
inc
add
jo
sbb
lock
out
fcom
lods
cmc
test
xor
cmp
add
sub
add
aaa
push
adc
jl
mov
push
xchg
sub
gs
outsl
push
lret
xor
shrb
stos
cmp
pop
scas
daa
push
mov
sbb
loope
push
popa
pushl
filds
stos
pop
aam
mov
clc
outsl
icebp
cmp
jg
jl
adc
jg
lock
push
push
mov
dec
sub
inc
jno
xlat
add
and
cmp
push
push
sbb
pop
fdiv
sub
aam
push
stos
and
jg
sbb
sbb
fstps
jle
jle
les
leave
notl
jbe
add
cmpsb
jle
gs
mov
dec
sahf
cld
xchg
xchg
sbb
sbb
mov
jne
mov
mov
dec
cmc
xchg
mov
stos
dec
push
ds
sub
cmovle
leave
cmp
nop
dec
iret
jmp
lahf
lret
data16
add
inc
outsl
pop
adc
outsb
push
int3
or
add
das
xchg
adc
push
fstpl
push
aad
lock
lahf
jns
pop
xor
dec
fwait
and
sub
cmp
and
xor
jno
sub
cwtl
test
jge
flds
icebp
mov
push
orl
enter
les
int
in
fdivr
sub
and
movsb
fiadds
pop
mov
inc
mov
pop
mov
arpl
jne
jmp
rolb
lea
add
push
iret
mov
lahf
fdivrs
jle
mul
mov
cli
mov
mov
jne
js
cltd
and
data16
imulb
dec
inc
mov
ffree
ljmp
jle
and
dec
test
movsl
mov
push
push
push
and
inc
inc
push
sbb
movsl
add
enter
inc
rcr
cli
mov
out
xorl
mov
shrb
pop
dec
jae
sbb
add
adc
test
cld
outsl
add
adc
pop
xchg
sub
inc
sbb
lock
lcall
or
sbb
shll
dec
ret
inc
dec
filds
add
push
push
ds
push
push
das
push
cmp
pop
outsb
sub
push
sub
pop
pop
add
insb
stc
jnp
popf
cltd
insb
mov
mov
inc
pop
test
and
mov
imul
ja
fmuls
adc
push
ss
push
push
daa
push
xor
push
outsb
and
insb
aaa
out
add
dec
push
lahf
bound
repz
outsl
inc
repz
addl
mov
jl
dec
mov
mov
shrl
orb
data16
jne
imulb
repz
adc
imul
stos
incl
fwait
push
sbb
int
fyl2x
stos
dec
dec
add
aas
sub
daa
xor
jg
jge
jbe
push
pop
mov
xor
jne
inc
scas
jns
cwtl
cld
jg
xchg
mov
pop
movsb
sbb
jge
cmp
xor
inc
pop
or
sub
or
adc
popa
jns
lret
add
or
in
rcll
gs
xchg
fcompl
cmc
jb
push
jmp
outsb
add
mov
pop
frstor
sub
and
bound
dec
sbb
imul
jg
aam
pop
push
sub
xor
push
add
nop
jbe
in
popf
fstps
push
sbb
dec
mov
jno
test
cmp
and
xchg
inc
push
xchg
push
stc
pop
pushf
dec
out
jg
sbb
mov
or
imul
call
call
mov
std
jg
jne
mov
fldt
dec
jle
mov
pusha
push
adc
pop
mov
adc
push
inc
loope
pop
jmp
and
xchg
push
sub
jecxz
ret
jmp
push
jnp
cmpb
arpl
sbb
sbb
popa
arpl
stos
jge
xchg
cmp
decl
addr16
decb
ljmp
mov
sbb
fsin
adc
out
add
pushf
clc
out
fwait
sub
das
cmpsl
cmp
and
adc
pop
aaa
dec
call
mov
inc
arpl
mov
ficoml
dec
xor
push
mov
jl
add
sub
sub
lahf
test
mov
jge
jnp
or
push
shrb
inc
lock
incl
or
inc
lds
cmc
sub
je
sbb
xor
lret
or
test
int3
jg
lahf
leave
sahf
adc
fsubs
hlt
lcall
inc
xchg
pop
popf
inc
lea
inc
mov
xchg
pop
jl
dec
inc
insb
int3
jge
pushf
lahf
mov
dec
adc
xchg
call
cli
and
push
cli
rcr
gs
ret
cli
repnz
add
adc
addr16
mov
in
lahf
lret
mov
lcall
sbb
insb
mov
test
repz
jl
cmp
mov
or
push
popf
adc
pop
enter
sbb
push
mov
add
out
pop
cld
add
pop
jnp
or
mov
sub
out
inc
mov
cs
mov
or
fstp
xchg
out
xor
cmp
and
or
faddl
ljmp
int
jno
lds
xor
mov
mov
mov
jno
sub
add
lods
fwait
test
adc
mov
push
mov
je
cmp
mov
loopne
std
fs
loope
and
fstpl
fstl
fisttpll
fldl
imull
punpckldq
adc
das
sbb
dec
add
mov
or
cmp
es
jae
fucom
sub
xchg
aad
push
ret
cltd
pop
adc
sbb
fmull
ret
xchg
mov
nop
test
test
out
xchg
mov
sbb
jbe
fmul
inc
or
jge
in
add
loop
xchg
push
jnp
push
mov
aam
aad
int3
loop
push
les
gs
nop
insl
mov
lcall
sub
stc
mov
add
in
or
jbe
fdiv
jne
jno
insl
sbb
mov
fwait
sbb
das
sbb
les
mov
rorb
stos
out
add
xor
aaa
in
dec
mov
dec
and
dec
jae
add
sbb
mov
cld
mov
cs
sbb
pop
xor
or
out
mov
shll
dec
in
inc
push
gs
rep
rorb
fnstcw
sbb
shrl
cld
dec
addr16
iret
add
notl
xchg
ss
cmp
ja
mov
jb
imul
jne
jno
jle
inc
push
mov
popa
outsl
xchg
xchg
mov
clc
push
imul
imul
insl
mov
jecxz
fsubrs
mov
xchg
pop
mov
lea
faddl
inc
mov
fmul
sub
cwtl
adc
in
orb
xchg
jmp
mov
loop
dec
cmp
fldenvs
movb
cmp
out
std
jmp
or
cmp
dec
arpl
cltd
pusha
push
jge
in
push
fistps
jno
aad
push
push
std
sbb
in
and
pop
cltd
xchg
mov
mov
mov
les
shufps
ss
enter
repz
cmp
mov
xor
stos
push
sub
cmp
jle
in
outsl
fs
cwtl
test
movsl
fsubrp
and
frstor
ds
pop
pushf
out
jecxz
push
jmp
push
mov
xor
aaa
pop
add
push
pop
sbb
test
add
mov
fsub
pop
add
sbb
cmpsb
push
or
out
pop
dec
sbb
sbb
or
xor
add
fadds
pop
push
sarb
push
mov
repnz
in
xchg
sbb
ljmp
cmp
jl
dec
imul
cs
arpl
dec
das
and
dec
xlat
mov
cmp
out
das
add
pop
movsl
push
cmp
rcrb
sbb
xchg
popf
sbb
adc
sbb
sbb
push
jmp
cmp
shll
stos
mov
cmp
push
cmp
std
adc
mov
in
sub
mov
in
sbb
in
dec
fstpl
push
dec
ret
mov
or
mov
outsb
sub
aad
cld
out
pop
hlt
aas
sub
dec
jg
sub
add
aaa
mov
cmp
mov
cmove
clc
in
cmp
inc
inc
sub
gs
mov
cltd
mov
arpl
jno
out
jne
fisttpll
pop
xor
add
sub
jmp
icebp
push
outsl
jne
std
push
adc
into
call
data16
push
adc
jnp
inc
xor
popa
test
mov
repz
leave
sti
sub
daa
and
or
add
mov
xor
adc
add
shll
cli
leave
fistpll
out
mov
dec
insl
gs
fcompl
frstor
mov
push
add
mov
push
mov
mov
arpl
insb
out
xchg
sahf
or
jno
adc
lods
mov
stc
inc
xor
push
push
xor
repz
adc
mov
adc
xchg
je
aas
inc
lods
enter
inc
fwait
sbb
pushf
aas
aas
mov
inc
mov
jl
cld
in
fucomip
sbb
mov
mov
mov
dec
lcall
fstpl
andl
cmp
xor
leave
push
mov
ret
sbb
push
jl
xchg
clc
mov
aas
xchg
arpl
jns
push
push
sbb
cmpsb
and
subb
aas
mov
jg
sub
mov
imul
shrl
out
pop
clc
xchg
cmpsb
fnsave
xchg
mov
std
pushf
rclb
xchg
test
lahf
xchg
lods
pop
dec
jne
xchg
ds
popf
and
cmp
into
cmp
shl
push
decb
mov
sub
movb
cmpsl
pop
cmpsl
stc
sarl
repnz
in
sub
addl
stc
ret
mov
cmpb
sub
pop
jmp
push
cli
xchg
dec
rcl
pop
sub
dec
pop
scas
pop
cmp
mov
mov
pop
adc
imul
mov
xchg
fdivp
stos
cwtl
repz
js
cld
mov
nop
cmpb
cs
fbstp
xor
xchg
sbb
cmp
pop
pop
sbb
xchg
call
out
push
adc
or
lret
fstpl
popf
hlt
xor
add
push
mov
sbbl
out
js
out
lds
dec
cmp
sub
pop
sbb
dec
icebp
arpl
mov
xchg
push
pop
add
jnp
insl
jae
ss
cmp
jl
xchg
ljmp
xor
cltd
jle
sub
cmpsl
xchg
shlb
setp
enter
jbe
push
sbb
lret
pop
mov
mov
sbb
fs
push
push
xor
mov
dec
leave
xchg
imul
cmc
inc
out
rorl
sbb
test
mov
sti
insl
adc
mov
gs
decl
mov
mov
scas
pop
inc
iret
rcll
cwtl
dec
incl
xchg
push
xchg
loope
aad
pop
xchg
rcrl
jnp
inc
and
test
pusha
jl
push
jg
dec
mov
movl
adc
and
sbb
ss
mov
lahf
pushf
rcll
pop
leave
xor
mov
je
jle
or
cli
dec
xchg
addr16
nop
fildl
sbb
addb
ds
inc
inc
es
dec
inc
cs
out
mov
add
mov
out
jg
scas
imul
in
jecxz
sarb
jae
mov
mov
das
push
or
jne
cmc
push
je
out
add
lahf
sti
pop
inc
fstpl
imul
pop
psubd
mov
test
scas
jge
jns
dec
sbb
daa
push
ss
mov
js
sub
jl
cs
sbb
inc
mov
or
mov
aad
mov
rcrb
cmp
cld
outsb
inc
mov
sbb
dec
xchg
mov
arpl
add
jnp
mov
loop
gs
push
mov
test
mov
inc
stos
lock
inc
jne
pop
push
xchg
pushf
repz
lds
inc
call
mov
aad
ficomps
std
cwtl
xlat
cmp
gs
xor
rcr
aaa
sbb
gs
add
in
mov
xor
je
repz
scas
dec
pop
push
std
pop
loope
xchg
jo
or
popa
sbb
sbb
push
addb
pop
cmp
out
push
hlt
jb
push
lahf
imull
mov
dec
xchg
scas
sti
cs
cwtl
test
jo
jecxz
stc
lea
jge
push
push
or
dec
sbb
lahf
test
lahf
and
jp
sar
fdivl
cltd
lds
data16
add
pop
jg
inc
or
aas
sub
inc
inc
mov
mov
das
or
mov
iret
scas
out
scas
out
pushl
dec
testb
jp
lock
add
lds
mov
lahf
scas
scas
rol
xor
add
ljmp
xor
mov
hlt
add
pop
push
xchg
rcl
push
lods
fmuls
dec
sbb
and
rcrl
sarl
sbb
xlat
sub
jne
arpl
in
ret
jp
jg
lcall
push
lea
or
lock
out
pop
cmpsb
xchg
daa
adc
xchg
outsb
xchg
roll
mov
add
aaa
add
ret
in
fs
gs
cwtl
adc
adc
je
cmp
lret
fstps
mov
sbb
int
pop
int
test
repnz
jo
adc
mov
dec
das
shr
rorb
stos
adc
xor
ret
push
cmpsl
sbb
and
hlt
mov
addr16
jle
jecxz
aam
or
ret
jecxz
mov
int
arpl
test
inc
mov
inc
mov
hlt
mov
or
mov
xchg
jo
out
push
jmp
push
jae
shlb
sti
cld
xchg
push
sbbb
mov
jecxz
adc
in
mov
or
jo
sbb
jne
adc
and
inc
fimull
xor
ret
bound
outsl
sahf
icebp
dec
sub
enter
sub
mov
push
cmpsb
mov
jo
push
nop
add
pop
pop
icebp
into
pop
add
xchg
sahf
xor
pop
dec
inc
std
jae
jae
fdivrl
adcb
test
inc
repz
inc
das
loopne
dec
mov
enter
inc
cmp
mov
lret
xor
mov
or
mov
jecxz
enter
in
shrl
xchg
in
pop
and
adc
imul
sub
stc
mov
lds
ljmp
into
or
or
mov
lods
in
sub
inc
into
mov
pop
or
xchg
int
pop
sar
xchg
fcoms
xchg
lcall
jle
lret
fisttpl
movsl
jmp
or
dec
xchg
inc
cld
mov
sub
xor
sbb
sbb
imul
test
lock
xchg
flds
mov
cwtl
jecxz
and
ja
ror
push
in
push
cli
loop
xchg
fucomi
dec
pushf
ss
mov
jnp
dec
js
add
xchg
and
add
cmp
movups
sahf
lock
jae
sub
jns
push
test
mov
pushf
cmp
sbb
jge
clc
fnstsw
nop
nop
mov
stos
nop
fmull
sbb
pop
inc
insb
pop
fs
inc
add
test
cmpsl
into
movsl
stos
call
xor
lods
aaa
cmp
imul
pop
mov
cli
clc
filds
cli
call
xor
sub
push
adc
pusha
sbb
xlat
adc
lahf
fdivs
mov
sbb
dec
jns
hlt
jle
gs
sub
mov
enter
lock
bnd
lds
pop
sti
sbb
jmp
push
jmp
push
imulb
sbb
nop
das
scas
jne
arpl
es
rorl
stos
shll
jecxz
push
mov
pop
out
flds
in
inc
sub
lock
add
test
cltd
jno
aas
lahf
in
scas
out
addl
mov
mov
scas
std
xchg
and
or
imul
xor
mov
push
test
jle
cmc
fsts
inc
negb
inc
jmp
ret
leave
add
lock
dec
lods
fistps
jg
jecxz
iret
sub
outsl
rcrb
pop
aaa
scas
sbb
jnp
mov
outsb
or
fbld
aad
cmp
mov
mov
push
jp
adc
inc
mov
sub
test
push
std
adc
pop
inc
jg
mov
fwait
sbb
punpckhbw
std
out
je
inc
sub
testb
ljmp
or
cmp
jecxz
and
or
test
ja
cmp
jle
aad
add
dec
in
mov
iret
mov
xchg
call
incb
out
lahf
fnstenv
push
inc
ret
xchg
idivb
fwait
shll
jno
adc
push
lcall
sub
lods
call
rorb
push
ret
jge
stos
adc
test
cltd
rcrb
adc
mov
loop
mov
jge
insl
xor
into
jge
ret
int
add
adc
adc
push
stos
pop
mov
ret
sahf
fwait
jle
lea
mov
ret
fdivl
rcrl
push
or
pop
cmpsl
je
fcomps
gs
adc
iret
jae
jnp
cli
xor
inc
mov
add
lds
mov
xchg
xchg
dec
dec
mov
and
mov
in
or
imul
inc
add
leave
jo
jecxz
and
xchg
mov
pop
lods
lret
mov
popf
pop
xor
repz
jno
bound
and
pusha
pop
mov
mov
pop
xor
add
ret
cmpsl
xor
cmp
pop
adc
arpl
iret
and
xchg
notl
in
sahf
xor
inc
sub
mov
or
inc
mov
and
xchg
bound
pushf
bound
in
int
ljmp
or
adc
cmp
adc
jmp
adc
sbb
addb
dec
cltd
rorl
mov
mov
test
cmp
std
cmpsl
in
push
jno
cmp
push
or
or
imul
into
test
cmc
mov
gs
insb
leave
sti
jne
fbstp
cmp
aas
inc
cmp
push
outsb
xlat
pushf
mov
xchg
outsb
std
cmp
fcompl
icebp
xchg
pop
repz
jb
mov
fisttps
idivl
into
push
jmp
shll
cmc
push
in
inc
clc
fdivl
xchg
jl
jnp
movl
out
sbb
xor
popf
test
repz
shr
filds
outsl
icebp
gs
cltd
cmp
jle
inc
popa
pop
cmpsb
push
or
jnp
xchg
inc
sarl
int3
adc
lea
cmp
mov
xchg
aas
adc
xchg
jecxz
dec
pushf
add
or
sbb
mov
out
push
push
and
pop
idivl
dec
into
ret
adc
inc
xor
pop
out
cmp
insl
dec
push
sarl
enter
jmp
gs
and
sbb
mov
or
imul
jg
sbb
jns
push
or
adc
js
push
scas
call
les
int
out
mov
mov
enter
fistl
sbb
or
popf
push
imul
cmp
dec
or
dec
xchg
dec
xchg
and
bound
cmp
jmp
bound
mov
dec
cltd
out
and
add
sbb
les
fcoms
rcrl
pop
jnp
clc
std
jge
in
rcrl
incb
jb
scas
add
fcomps
out
or
adc
std
test
in
mov
lods
aad
ljmp
dec
je
jnp
sahf
pop
lret
add
pop
popf
cmpsl
decb
es
dec
fiaddl
xor
dec
pusha
sub
push
jne
fldenv
cmpsl
fs
cmp
nop
dec
ljmp
mov
mov
xchg
scas
mov
xchg
insl
int3
jae
xchg
lahf
std
sbb
xchg
fistpll
shlb
pushf
leave
movsl
cltd
sbb
lcall
je
mov
orl
mov
xchg
aad
mov
or
cmp
ficoms
ss
and
dec
sub
rolb
cmp
xchg
hlt
inc
xor
pop
outsb
insl
adc
push
rcrl
cmp
add
ljmp
sbb
xor
into
fisubl
das
outsl
xor
cwtl
mov
das
test
aaa
test
jg
push
mov
out
and
loope
movsl
jp
leave
enter
insl
jle
sar
pop
mov
and
lret
jne
inc
lea
pushl
lea
fstpl
das
jo
popa
rorb
lret
sub
dec
rorl
sub
out
loope
add
and
inc
sbb
jg
push
test
jbe
jae
repz
pop
jge
pop
xchg
jle
out
xor
mov
sarl
stos
cli
mov
into
cmpsb
push
or
test
jmp
fisttps
sub
lds
cmpsl
or
mov
jmp
adc
mov
incb
inc
adc
cmp
ds
xorl
dec
addr16
xchg
cmp
mov
xchg
je
cmp
imul
sti
insb
pop
out
movsl
push
add
cwtl
mov
xchg
fisttpll
mov
dec
test
imulb
or
cmpsb
in
loope,pn
ret
jmp
insl
mov
jge
dec
push
fisubrl
into
xchg
stc
push
imul
dec
subb
pop
cmp
clc
call
add
ret
xchg
int
mov
movsl
out
int
fincstp
shll
push
popa
test
scas
pop
push
inc
shl
in
icebp
pop
sub
jae
pop
movb
sbb
jl
lahf
and
mov
mov
mov
rcrl
push
cmp
push
sub
xor
decb
ret
cmp
cmp
loope
test
or
mov
sbb
sub
mov
pusha
stos
dec
and
cmpsb
call
scas
mov
ss
pop
das
or
sti
cmp
mov
fnstenv
testl
dec
xchg
cwtl
dec
out
outsb
sub
adc
inc
or
and
cmp
sbb
adc
xchg
or
inc
sbb
push
lcall
aas
shrl
sbb
adc
sub
jmp
mov
ffree
jns
push
mov
inc
repz
jecxz
enter
rcrl
xchg
push
mov
cmp
pop
add
out
out
stos
push
pop
cmp
in
fdiv
sub
sti
frstor
fisttps
les
movd
adc
fnstenv
xchg
sub
orl
lock
mov
int
mov
mov
out
dec
jl
sbb
sbb
scas
or
arpl
push
repz
adc
pop
sub
mov
mov
aaa
xchg
adc
inc
adc
inc
mov
sahf
adc
in
lret
cs
mov
lods
into
iret
jle
in
lods
xchg
fidivrl
jns
popa
add
out
xor
lret
and
mov
mov
cs
xchg
pop
lods
inc
mov
mov
xchg
test
ja
dec
subl
ja
xchg
bound
mov
mov
mov
leave
inc
sub
fldl
lods
dec
push
js
ja
xchg
mov
fistpll
dec
push
iret
sub
sub
jae
jbe
sar
sbb
mov
enter
mov
insb
loope
cmp
imul
cmp
jge
ja
cltd
inc
mov
mov
jo
pop
adc
sti
fucomp
imul
in
cld
xlat
jae
jg
jge
jae
scas
inc
sbb
es
std
pushw
jae
and
jmp
stos
call
cmpsb
or
mov
dec
push
arpl
pop
cmp
mov
cmp
xor
sahf
sub
push
cmp
cmp
aaa
std
mov
lock
or
leave
jecxz
or
in
insl
adc
lods
or
ja
lret
aaa
inc
clc
jg
push
sbb
xor
fnstenvs
int3
and
xor
add
add
pop
mov
push
pop
ljmp
xor
pop
add
aaa
dec
xor
aas
fdivs
lds
sbbb
fldl
xchg
sar
xor
movaps
movsb
aas
dec
fwait
lods
lock
inc
rcrl
cmpsl
adc
xchg
dec
iret
adc
sbb
rcl
fcom
aad
aad
movsl
lcall
mov
push
pop
xchg
add
jge
loop
inc
xrelease
mov
lods
stos
ficoml
jb
dec
enter
insl
push
xrelease
les
lret
out
enter
test
test
push
xor
or
movsb
ret
dec
data16
add
inc
scas
or
pop
dec
adc
imul
xchg
jno
data16
lods
ljmp
std
mov
int
fiadds
fwait
test
stos
sbb
inc
out
pop
popf
sub
dec
mov
scas
cmp
cmp
jno
add
xchg
inc
inc
lods
outsb
cmovnp
jb
dec
mov
pop
nop
gs
lret
mov
dec
and
outsl
mov
cli
loop
aaa
aas
stos
aam
sbb
dec
pushl
xor
push
add
out
cmp
test
in
jo
std
adc
xchg
mov
sub
ljmp
insl
push
jp
lcall
in
inc
ljmp
movsl
lret
movsl
or
jae
sbb
dec
test
or
xlat
daa
push
add
mov
sub
jb
dec
out
outsb
lock
dec
adc
xchg
jmp
sbb
push
add
imul
mov
dec
bound
cmpsl
int
cmp
addl
popf
or
or
xchg
mov
sbb
pusha
cli
fnstenv
lahf
push
mov
push
pushf
xlat
xchg
push
test
sbb
dec
adc
xchg
xorl
roll
mov
sub
cwtl
lret
and
inc
enter
js
xor
dec
outsb
xor
cwtl
inc
aad
std
sbbl
pushf
addr16
xchg
mov
mov
cmc
dec
add
add
mov
or
adc
cld
or
xor
inc
push
adc
sahf
das
mov
outsl
adc
adc
dec
jno
xor
lods
sbb
adc
xor
pop
ja
xchg
mov
dec
test
xor
repz
fwait
sbb
xchg
jno
test
and
push
xchg
enter
loopne
mov
or
outsb
int3
sub
out
jmp
out
sub
sbb
loop
lea
fst
fiaddl
jg
into
test
mov
push
mov
jp
sub
mov
dec
fldenv
sbb
add
fwait
xchg
filds
cmp
pop
cmp
imulb
cli
das
jmp
push
xor
cltd
xor
and
popf
sub
mov
mov
cmp
sub
mov
xor
ret
in
push
icebp
inc
cltd
repnz
mull
stc
dec
and
pop
push
mov
mov
movsl
cwtl
add
jo
dec
shl
fwait
pop
cmpsl
lahf
sub
adc
and
lods
push
mov
push
or
testl
pop
cmp
push
rorl
or
cwtl
or
sarl
push
pop
leave
jecxz
jge
mov
pushf
lods
and
pop
cs
xor
rcll
cli
fstl
out
int
add
inc
aad
loopne
mov
mov
in
test
mov
xchg
and
das
stos
mov
pop
sbb
adc
mov
mov
push
xor
out
hlt
sub
cmp
pop
mov
push
add
cmpsb
push
mov
pop
adc
jg
add
imul
fnstenv
mov
or
pop
jnp
inc
mov
inc
jl
cltd
lret
xchg
push
in
and
jecxz
aam
or
push
test
sbb
sub
out
or
outsl
dec
aam
cmp
push
mov
adc
and
inc
mov
ja
inc
rcrl
adc
mov
repz
pushw
push
lahf
push
cmp
cmp
push
or
jecxz
lock
sahf
and
mov
mov
cmp
mov
or
lods
xchg
pop
jae
mov
cmp
pop
push
ret
stos
loop
cmc
jg
stc
cltd
sbb
lcall
cmp
out
das
or
xchg
cwtl
dec
pushf
and
test
xor
dec
out
xor
lock
loop
mov
aas
mov
adc
mov
cmc
adc
rcll
add
enter
or
cmp
dec
jae
pop
add
ds
sahf
out
shlb
fidivrs
add
ljmp
mov
les
jp
daa
inc
inc
movsl
pusha
shr
xlat
and
jbe
and
dec
cli
popf
mov
xor
push
faddl
jecxz
outsl
push
pcmpeqd
dec
clc
in
jl
add
cmc
jbe
jae
lds
hlt
mov
or
arpl
xor
cmp
popf
inc
jp
jno
movsb
xor
arpl
push
ret
fsub
insb
sti
test
mov
shrl
xor
push
outsb
pop
fs
sbb
ret
movsb
aas
stos
outsl
lods
icebp
pop
inc
jmp
xor
dec
sbb
mov
lahf
cmp
dec
mov
call
lcall
jl
and
dec
scas
subl
push
mov
jmp
push
sbb
in
cmp
cmc
pop
ja
std
xchg
adc
push
int3
arpl
push
clc
ds
lock
addb
icebp
jmp
pop
cli
repnz
sub
cmc
adc
cld
push
jmp
popf
popf
mov
lds
xor
test
inc
lcall
mov
pushf
test
jnp
outsb
lret
sarl
ret
nop
mov
push
jo
sbb
fldl
xchg
push
repnz
in
xor
sbb
sub
pop
shll
pop
ret
inc
movsl
mov
inc
jno
fmuls
jge
addb
dec
push
gs
sti
lcall
mov
cld
test
jae
mov
gs
inc
xchg
pop
lahf
add
psrlq
dec
ljmp
aaa
push
push
push
das
push
dec
push
daa
push
inc
push
pop
out
jns
push
sub
int3
dec
scas
outsb
dec
inc
sub
sbb
jae
fldenv
jecxz
sbb
and
mov
sarl
insl
push
stos
ret
rorl
nop
mov
popf
push
lds
arpl
je
sbb
lock
push
es
dec
fildll
rcr
xchg
xchg
sti
cmc
xor
xchg
ljmp
push
push
sbb
push
mov
lret
mov
movsl
jmp
pop
mov
ljmp
mov
adc
jmp
inc
dec
jecxz
mov
xchg
cwtl
pop
enter
rclb
cmpsl
in
aam
adc
dec
xchg
jbe
std
push
or
mov
xor
mov
fdiv
lcall
gs
call
dec
xchg
adc
sbb
xchg
xor
dec
fs
xor
xchg
xorl
lock
ds
fmuls
add
lahf
je
jno
lret
add
int3
cmpsl
cmpsl
into
stos
push
icebp
pop
mov
xchg
outsb
shlb
leave
loopne
cmc
popa
mov
cld
and
test
xchg
sbb
push
dec
or
or
mov
dec
lret
icebp
lods
and
aas
xlat
mov
push
in
sub
lcall
dec
imul
out
cwtl
inc
add
push
imul
jmp
loop
call
test
dec
or
dec
dec
xor
adc
daa
xor
pop
ss
imul
sbb
or
iret
movl
jg
in
enter
pop
cmpsb
push
mov
into
xor
jo
lock
dec
cltd
es
mov
fsubs
xchg
fdivr
cmp
and
cmp
imul
inc
sbb
adc
dec
cmp
jmp
add
sub
or
popa
mov
push
add
pop
push
pop
arpl
in
inc
xor
pop
stos
je
cmp
dec
out
insl
shll
cltd
mov
dec
mov
xor
add
adc
or
sbb
out
xor
ds
fnstenv
push
loope
idivl
popa
adc
push
in
fnstsw
mov
xor
mov
jg
mov
scas
lods
js
cwtl
daa
ss
pop
gs
insb
jnp
sar
cmp
insb
mov
je
jnp
or
mov
jl
jbe
mul
enter
pop
jnp
push
ljmp
lcall
leave
adc
xor
into
sub
mov
roll
push
sbb
sbb
sbb
popf
mov
ret
les
and
mov
pop
rcrb
adc
cmpsb
mov
push
mov
ds
flds
xor
cmp
pop
fcomp
add
incl
mov
ja
imul
or
imul
jae
pop
popf
repz
fcoml
stos
sahf
push
mov
sub
mov
idiv
pop
mov
mov
jge
fisttpl
sub
sar
fcomps
xor
arpl
cwtl
xchg
test
int3
sbb
stos
cmp
inc
mov
std
push
pusha
jle
add
sbb
stos
pop
int3
or
cltd
push
out
sbb
scas
xchg
pushf
push
cmp
pop
loop
or
stc
aaa
out
cs
loopne
shrb
inc
pop
mov
push
sbb
ljmp
lds
in
pushf
inc
aad
mov
sbb
sbb
and
sub
and
sbb
ds
pop
push
inc
push
push
push
jg
fistl
add
sbb
push
adc
push
mov
cmp
jno
out
push
xor
push
adc
sti
or
add
mov
fcomi
sahf
jle
jp
mul
sbb
out
cmpsb
in
xorl
aaa
push
cmp
jp
andb
sbb
mov
cld
pop
jmp
in
cmp
inc
pop
mov
xchg
xchg
and
sarl
stc
fsubp
cltd
xchg
enter
mov
out
mov
or
rcr
loope
push
repz
cmp
dec
jle
jae
xchg
les
xor
fimull
out
and
xchg
sahf
jp
pushf
sahf
cmpsl
mov
sbb
pop
xor
xor
ret
sbb
arpl
pop
adc
dec
stc
cmp
xchg
pop
and
out
or
inc
data16
push
ret
outsl
pop
jl
lcall
jnp
pop
fistpl
arpl
jb
mov
mov
or
into
push
or
mov
lahf
push
jecxz
push
fstps
cmp
inc
xchg
sbb
aas
add
repnz
and
test
mov
add
lea
push
ss
pop
sbb
xchg
es
adc
in
dec
stc
jb
pop
bound
xor
inc
test
inc
std
lcall
dec
pop
adcb
mov
and
or
outsl
push
and
mov
loope
leave
xchg
lock
or
shll
mov
test
mov
inc
push
ja
mov
and
adc
inc
stc
inc
and
aam
mov
adc
add
dec
and
cmp
inc
mov
adc
call
loopne
push
or
push
jmp
sbb
gs
adc
sub
shr
dec
cwtl
push
and
call
add
in
jae
xor
mov
jle
imul
xchg
mov
jbe
ret
push
xchg
imulb
int3
mov
mov
adc
adc
dec
loope
xor
mulb
add
adc
ficomps
iret
jne
xchg
mov
dec
fs
cli
popw
out
mov
xor
push
xor
mov
push
inc
push
ja
ja
addr16
jbe
xor
jg
fs
not
or
daa
pop
outsl
int
and
adc
cwtl
bnd
or
push
mov
in
leave
jecxz
dec
pop
repz
addl
mov
push
sbb
int3
mov
mov
inc
int
clc
pop
ret
outsl
into
xchg
xlat
fsubr
dec
push
ret
cmp
es
movsl
in
das
scas
fxch
inc
push
mov
ret
cld
mov
call
fists
fcoml
shr
cmp
adc
lea
sub
push
testb
xchg
adc
hlt
adc
out
push
sub
adc
in
sub
and
sar
mov
scas
fadd
cmp
into
js
out
imul
imul
sbb
mov
push
fiadds
aas
lcall
das
inc
rclb
out
sbb
loopne
inc
cmc
and
pop
icebp
lahf
je
jae
fwait
mov
mov
call
ffree
int
test
cmp
cmp
imul
es
xor
mov
popa
in
lret
fbstp
mov
scas
xchg
or
in
push
nop
daa
sub
stos
dec
dec
sarl
shll
push
or
outsb
push
adc
mov
mov
add
inc
push
das
cmpb
je
xchg
mov
cltd
das
out
mov
pop
push
xorb
dec
inc
cmp
movsb
xchg
jae
mov
jge
and
js
or
out
sub
jl
test
sub
push
mulps
or
jne
inc
arpl
int3
jbe
pop
push
mov
addr16
xchg
xor
mov
xor
pushf
fsubl
add
stos
shr
and
mov
aaa
or
outsb
adc
jmp
aas
push
and
add
mov
fsubr
jecxz
loop
in
xor
jmp
inc
adcb
sub
xchg
call
es
mov
lock
sub
repnz
mov
jge
into
pop
inc
into
mov
jns
shrb
inc
sub
pusha
push
push
cld
clc
addr16
cltd
ja
inc
xlat
insl
out
inc
popf
out
dec
cmp
mov
outsl
push
lahf
pop
cmp
pusha
pop
pop
leave
sbbl
push
xchg
sbb
insb
push
xor
xor
bound
xor
stos
xchg
testb
popa
xchg
xchg
push
jg
dec
addr16
adc
jbe
dec
lahf
jle
jl
cltd
insb
sbb
pop
sub
mov
sbb
lea
xor
mov
jmp
sar
push
fldl
pop
and
and
dec
xchg
mov
mov
jmp
pop
addr16
sbb
faddp
pushf
sahf
loop
jle
push
int
jl
lahf
sbb
pop
mov
insb
mov
cs
test
mov
lods
int3
push
loop
pop
push
testb
xor
lret
jge
inc
mov
jecxz,pt
push
jae
inc
inc
dec
jecxz
fisubrl
fildll
scas
das
push
sahf
add
mov
mov
mov
lahf
jle
xchg
out
enter
mov
cltd
cli
mov
add
ret
lcall
xchg
pop
in
dec
cmpsl
push
adc
jbe
xor
data16
and
xor
or
fwait
ja
mov
jo
sbb
clc
aaa
ds
mov
push
nop
push
mov
fcoml
imul
lock
in
lock
jecxz
adc
push
leave
pop
xor
or
fists
imul
ffreep
cli
mov
push
jo
pushf
dec
add
shll
enter
add
push
and
fsubr
insl
cld
out
add
sti
sbbl
shrl
adc
and
push
push
jbe
outsl
lcall
pop
pop
lret
test
fstpt
dec
inc
gs
adc
inc
repz
jp
pop
ds
xor
aam
pop
sub
enter
adc
test
xor
dec
xor
mov
xchg
fsin
in
push
jbe
or
cmp
cmc
enter
les
lock
aas
incb
inc
sbb
jnp
mov
fs
faddp
pop
add
push
pop
fs
pop
pop
insb
mov
push
inc
mov
imul
stos
sbb
ficoml
aam
push
inc
in
jb
cltd
add
jl
fwait
jnp
loop
xor
dec
fists
jbe
call
out
mov
clc
stos
and
inc
sub
sarl
push
mov
aam
cmpb
adc
dec
rcll
sub
dec
das
les
jo
mov
mov
add
push
sarl
cmc
arpl
mov
gs
add
das
test
pusha
pusha
jno
adc
push
lcall
xchg
jl
jmp
cwtl
and
cmpsb
fsubr
lds
mov
xor
jecxz
mov
dec
stc
addr16
movsl
cmp
sbb
pusha
mov
fisttpll
nop
jno
jno
lcall
cmp
xchg
repnz
inc
add
mov
mov
lods
in
jecxz
xchg
sahf
or
fs
jl
push
jbe
mov
and
mov
outsl
inc
popf
in
adc
rcrb
mov
fsubl
roll
lahf
sub
inc
movsl
insb
sahf
and
sahf
in
pop
fs
ja
pop
mov
in
mov
testl
lods
test
mov
jp
dec
inc
sub
add
nop
ja
call
out
mov
in
sbb
jge
shr
in
mov
jmp
adc
fldenv
dec
cs
sub
ja
ja
mov
mov
xorl
scas
stos
enter
sub
cltd
sbb
jmp
push
popa
sbb
cltd
sbb
js
mov
adc
inc
dec
outsl
dec
pop
int3
jmp
aaa
mov
or
dec
leave
stos
dec
repz
dec
or
lea
dec
mov
adc
std
xchg
mov
das
xor
pop
lock
jnp
add
or
ret
push
cmpsb
push
ja
leave
mov
dec
inc
sbb
lds
outsl
xor
mov
fcmovne
fidivrs
push
push
jbe
xor
dec
add
xor
sub
leave
xor
dec
nop
mov
gs
xor
dec
scas
arpl
daa
stc
insl
stc
adc
aad
inc
lret
out
cmp
pop
imul
movsl
mov
jge
push
pop
mov
xlat
cmp
xchg
das
fisttpl
mov
cmpl
push
mov
andl
cmc
xchg
mov
xchg
iret
mov
frstor
and
stc
cmpsl
outsb
or
cwtl
subb
fwait
rclb
je
sub
mov
ucomiss
cs
stos
sub
mov
popl
adc
aas
rcr
sbb
jno
lret
mov
loope
jnp
sbb
jecxz
test
jns
cmp
jae
cld
shl
fisubrs
lcall
mov
lds
sbb
sbb
iret
addr16
pop
push
rsm
pop
sarb
cltd
insl
inc
popf
cmpsl
xor
mov
cmpl
dec
fidivl
jle
loope
sub
hlt
into
dec
int3
cs
in
mov
jbe
nop
mov
adc
cld
jg
pop
mov
loopne
jo
sti
loope
cs
ss
das
test
mov
inc
mov
mov
and
rcrb
pop
mov
ds
rorl
idivl
out
inc
mov
lahf
fldcw
cmpsl
repnz
mov
dec
cld
imul
sbb
push
jb
cltd
lds
and
jg
rcr
push
bound
out
mul
decb
push
inc
adc
out
out
xlat
pop
mov
test
fstps
mov
mov
insb
xchg
inc
std
ret
jae
ja
push
pop
mov
mov
aas
lcall
dec
shll
rclb
hlt
lret
pop
ljmp
data16
mov
sbb
das
jl
cmp
xchg
lcall
cld
dec
fsts
ficoml
add
inc
fcom
in
stos
sahf
push
mov
dec
call
jne
in
xor
xor
push
dec
mov
pushf
jl
aam
mov
and
sbbb
subb
cmpb
nop
adc
pop
test
addr16
mov
in
cwtl
inc
addb
mov
mov
popf
sub
out
inc
pop
jmp
and
pushf
cs
sub
cmp
xchg
mov
mov
rorl
test
mov
inc
or
or
data16
xchg
and
es
dec
xchg
out
mov
mov
xchg
ljmp
shll
and
scas
scas
lahf
add
sub
or
mov
xor
inc
push
xchg
and
outsb
and
jg
cmc
out
int
inc
inc
xchg
adc
pop
cmc
jae
xor
das
dec
cmp
hlt
cmp
jp
or
jmp
fisttpll
xchg
cli
sub
ljmp
pop
popa
mov
movsl
aaa
mov
imul
add
cs
mov
sub
jecxz
je
add
and
or
mov
dec
cwtl
in
outsl
and
call
cmpsb
stc
inc
out
ret
xchg
fmull
and
test
ffreep
sbb
dec
mov
dec
jle
or
cli
or
lret
ficoml
sub
outsb
ja
and
shl
mov
and
fnstsw
addr16
mov
rorb
imul
rcl
mov
pop
out
adc
enter
insl
xor
lds
clc
mov
mov
and
sbb
sti
repz
sbb
jo
pop
and
loop
pop
sub
pusha
xchg
jns
dec
adc
dec
mov
add
add
mov
jb
add
dec
inc
pop
cmpsl
lcall
dec
mov
outsl
xor
lret
jp
dec
mov
jg
and
xor
add
mov
outsb
sub
xchg
jnp
inc
lcall
mov
std
test
sahf
mov
adc
jge
sbb
addr16
mov
push
jo
js
mov
xchg
sub
arpl
and
incl
inc
cltd
sti
or
push
test
xchg
pop
xchg
adc
lds
push
sub
inc
sub
xchg
rorb
mov
rorb
jae
mov
and
insl
dec
test
sbb
cs
xor
xchg
sub
inc
scas
shrl
pop
push
jecxz
pushf
jne
test
nop
ficomps
ss
pushf
incb
shlb
lret
inc
cmpsb
rorl
lret
fs
and
in
push
lea
scas
jp
jno
mov
scas
sub
movsl
lds
fstl
sub
jno
test
lret
dec
jb
xlat
mov
rcll
pop
ds
into
xor
cmp
cltd
arpl
flds
dec
movsb
popf
les
flds
pop
and
scas
and
call
mov
and
aaa
or
dec
ja
insl
scas
loop
jne
xor
pushf
xchg
sub
mov
xchg
mov
pop
fwait
xchg
fdivl
jb
loopne
mov
xor
mov
cwtl
inc
adc
push
pop
sub
rcrb
jno
js
push
insb
out
imul
adc
test
addl
jns
sub
cmc
int
dec
cmp
push
lret
aad
ja
mov
jle
cltd
pop
imul
jno
arpl
sub
mov
cmp
aaa
repz
roll
ja
adcl
loope
int
cld
mov
ret
insb
mov
sbb
jbe
mov
cmp
int
sbb
dec
adc
shll
xlat
cltd
xor
adc
inc
jmp
push
call
sub
dec
jg
out
adc
jno
mov
mov
stos
dec
imul
mov
bnd
stc
sub
or
insb
add
mov
enter
xchg
imul
lahf
icebp
imul
in
xchg
cmpsb
mov
fcompl
test
mov
and
adc
ret
leave
mov
pop
divl
stc
dec
mov
push
jge
xchg
fisubrl
dec
sub
mov
cmpsb
push
or
adc
mov
mov
jmp
fwait
mov
jmp
pop
sbb
and
jae
mov
clc
je
mov
in
adc
loopne
xor
dec
imul
xchg
adc
mov
add
xchg
out
movsl
pop
fucomip
movsbl
int
mov
push
add
dec
fsubs
pop
rclb
dec
out
push
jmp
mov
or
mov
sbb
mov
fldenv
push
pop
push
jbe
mov
cmp
jae
cmp
cmp
jno
cmp
cmp
gs
ret
popf
cli
push
xchg
or
sbb
cmp
dec
mov
mov
sub
adc
jbe
dec
sbb
and
xor
mov
stos
out
sbb
or
dec
dec
mov
sbb
sub
jne
xchg
sbb
arpl
and
rcll
jbe
dec
pop
fldt
or
mov
and
pop
lds
lea
in
mov
testl
jb
mov
mov
adc
stc
xor
jno
out
cli
push
mov
jae
out
pop
in
scas
pop
pop
add
test
les
mov
scas
push
mov
jl
cltd
ljmp
pop
call
inc
cli
dec
les
mov
ret
fdivrs
cmc
mov
jae
jg
je
in
push
inc
pop
sub
or
fstp
xchg
outsb
lahf
test
scas
cmp
xchg
dec
adc
icebp
xor
add
out
jno
clc
movsb
jmp
popa
popf
aas
xlat
jl
mov
sbb
sbb
cmpsl
mov
jmp
hlt
test
arpl
push
jns
inc
data16
ljmp
jne
mov
push
push
jecxz
arpl
mov
push
mov
sub
loopne
leave
les
lcall
enter
xor
mov
filds
prefetch
leave
sbb
movsb
test
cmp
insl
mov
or
sub
popf
call
or
aad
inc
neg
add
and
xor
aam
sub
incl
push
dec
outsb
cltd
enter
ds
push
mov
fsubs
into
add
or
jno
push
mov
pop
adc
sub
fdivrs
dec
out
pop
xor
enter
mov
subl
add
mov
pushf
imul
mov
cmp
jbe
mov
lds
mov
add
call
xchg
mov
mov
add
insl
inc
mov
xchg
mov
jb
jae
pop
jns
adc
movsl
add
mov
push
ljmp
fsubrl
dec
lock
sbb
int
xchg
inc
repz
adc
jbe
adc
pop
jmp
cli
cld
js
mov
loope
fdivl
loopne,pn
or
mov
adc
paddw
loopne
call
push
dec
xor
inc
mov
pop
push
int
jmp
mov
xchg
cmp
clc
mov
scas
int3
dec
popf
dec
xchg
cltd
pushf
jnp
inc
clc
lret
mov
add
jne
sub
pop
or
xchg
movsb
lds
dec
sarl
das
xchg
bound
jbe
lcall
and
xor
jl
repz
pop
inc
dec
mov
mov
pop
jne
insl
nop
push
xor
test
enter
dec
std
sub
cmpb
add
sub
rcll
mov
out
outsb
jle
call
out
gs
pop
out
popf
push
or
fmuls
xchg
dec
mov
add
ljmp
arpl
cmp
mov
jle
leave
push
push
fsubrl
ret
mov
sbb
fdivs
sub
lret
jge
jae
add
es
out
shlb
mov
pop
lcall
cmp
lret
or
pushf
enter
mov
roll
inc
mov
push
neg
sub
inc
movsb
fcmovnb
add
dec
fs
mov
dec
and
icebp
mov
iret
popf
push
or
push
mov
mov
inc
xchg
lcall
xchg
sbb
cmp
cmpsb
in
insl
xchg
sbb
rep
aad
mov
pop
add
aas
and
jo
out
sub
das
mov
add
and
jnp
pusha
rorl
add
jl
jl
fnstenv
or
jl
jbe
shll
scas
and
sub
jbe
fldcw
dec
out
mov
shrb
sub
push
gs
mov
mov
lock
sub
sub
push
push
fimull
shrl
divb
flds
es
mov
mov
sarb
fildl
mov
lret
out
clc
or
cld
pop
iret
outsb
sahf
and
ss
andl
push
into
das
test
mov
in
adc
sbb
xor
sbb
lods
dec
aam
sub
mov
imul
mov
shr
mov
cmp
loop
or
shll
rol
push
rorb
cwtl
cmc
pop
pop
add
ljmp
push
pop
out
pop
fstps
dec
shll
push
mov
mov
data16
repnz
sbb
rcll
daa
leave
icebp
mov
rcr
fwait
add
and
add
cmc
sarl
pop
loope
and
add
lds
pop
or
mov
and
nop
mov
xlat
stos
rorb
dec
jg,pt
das
fmulp
dec
cmp
je
into
and
xor
fcoml
xor
jg
cmpsl
imul
lock
repz
mov
test
add
and
push
sti
inc
sub
mov
sbb
nop
pop
mov
frstor
push
sub
sub
mov
or
sbb
inc
mov
in
xchg
inc
loop
jle
mov
xor
lock
lea
cmpsb
xor
fisubrl
call
cmpsb
xor
ret
mov
xor
jecxz
and
push
push
dec
lds
outsb
dec
pop
mov
pcmpeqd
loope
sbb
push
mov
pop
jg
mov
sti
daa
push
sbb
pop
rcr
scas
popf
test
out
nop
jp
mov
jmp
cmp
pop
and
cmpsl
mov
fldenv
cmc
mov
int3
ss
add
inc
jp
xchg
pop
cwtl
pop
pop
push
lds
test
test
in
stos
mov
leave
cld
cmpsl
jae
ja
out
fistpl
sbb
lahf
xchg
loop
jmp
bound
es
inc
repnz
dec
cwtl
cmc
fcompl
push
outsb
clc
and
mov
sbb
pop
inc
bound
lea
adc
jecxz
sub
jbe
pop
xchg
mov
roll
mov
cmp
pop
add
decb
imul
popa
xor
mov
add
enter
fst
les
cmpl
int
add
mov
shrb
inc
outsb
cmpsl
adc
push
push
pop
pusha
pushf
or
test
in
inc
jno
jl
gs
lret
jle
arpl
push
aad
xor
setns
jl
in
jecxz
lret
dec
fcomi
lea
mulb
cltd
or
pop
fstps
cltd
xchg
cli
lods
mov
dec
lcall
int
std
xchg
movsl
xor
mov
mov
ja
ret
sbb
enter
test
or
sbb
das
pop
pop
push
fucomip
fwait
int3
mov
or
lds
daa
in
in
sbb
mov
add
lcall
icebp
or
cmp
aaa
pop
das
push
xchg
xchg
test
mov
popa
out
loop
out
fnstcw
or
inc
leave
aas
popf
pop
adc
daa
mov
mov
mov
jmp
inc
pop
cwtl
or
jbe
inc
xchg
prefetch
and
aam
inc
loopne
mov
ds
cs
lret
repnz
jnp
mov
mov
rclb
dec
or
cmp
lcall
mov
movsb
push
xor
push
cltd
arpl
movsl
adc
or
lds
pop
jmp
stc
add
add
ss
sub
push
aaa
mov
fbstp
sub
inc
push
and
gs
lock
jl
aam
xchg
clc
xchg
aaa
pusha
jl
jno
jg
add
pop
jecxz
lock
negl
mov
cmpsl
je
xchg
dec
dec
dec
scas
fwait
push
lahf
sub
out
xor
mov
mov
les
jmp
jne
out
sub
mov
inc
push
adc
lcall
icebp
cs
xchg
movsb
out
fnstsw
mov
push
mov
mov
sub
arpl
fadds
dec
adc
aad
lcall
sub
nop
inc
mov
mov
loope
sub
sahf
int3
mov
sub
jo
sarb
dec
std
sbb
cmpb
out
lret
loop
imul
mov
fidivrs
dec
nop
inc
lds
add
push
sbb
pop
add
inc
pop
sbb
xchg
and
mov
vpsrld
sub
mov
cld
mov
jbe
int
adc
cmpsl
pop
inc
sub
test
ljmp
je
and
cld
lret
pop
sub
cmpsl
push
inc
xchg
pushf
push
xchg
mov
cmp
mov
pop
loopne
sbb
adc
fwait
jno
outsb
rcrw
inc
cmpsl
lods
outsl
push
shrb
rcr
jno
out
xor
pop
push
and
fidivl
aad
xchg
mov
fs
mov
pop
mov
leave
cmc
scas
int3
ret
and
xor
xor
enter
and
iret
pop
ljmp
cmp
mov
add
test
inc
insl
lods
push
aaa
pop
pop
loop
movsl
pop
cmp
xor
mov
mov
jmp
xchg
cs
cmpsb
fiaddl
cmp
scas
xchg
xchg
loop
pop
test
xor
sub
scas
aad
add
movsl
pop
les
std
ret
adc
jo
jle
fwait
or
push
inc
pop
sub
push
sbb
fdivrs
mov
aad
pop
mov
test
xor
rcrb
cli
lods
mov
je
cmc
ss
es
push
pop
jge
inc
aas
stos
fnstenv
pop
dec
push
rorl
add
lea
jecxz
jne
ja
fstps
enter
bound
outsb
leave
mov
xchg
xchg
jl
bound
outsl
loop
sub
dec
mov
fnstcw
jnp
cli
fsubl
inc
stos
outsl
xchg
sub
js
mov
fwait
push
cwtl
mov
mov
adc
jbe
mov
stos
in
aas
or
dec
imul
aas
clc
gs
out
jecxz
std
lcall
leave
pushf
add
sbb
dec
xor
dec
push
adc
incb
inc
ret
cmp
dec
push
aas
pop
cld
mov
jmp
int
mov
loope
test
sub
mov
mov
lret
hlt
cmpsl
mov
addr16
sbb
inc
outsb
adc
lahf
mov
push
std
add
mov
sbb
jo
test
pusha
call
mulb
lods
mov
cmp
roll
loop
inc
cltd
ljmp
mov
cmp
sbb
xor
mov
cld
adc
js
sub
jne
clc
sbb
jnp
inc
ss
xchg
cs
cmc
mov
cltd
das
push
arpl
lret
push
pushf
cmp
lds
outsb
add
dec
xor
jmp
dec
xlat
jbe
gs
xor
fildll
inc
cmp
stos
in
mov
inc
out
mov
xor
or
mov
hlt
cmp
cmpsb
pop
jle
adc
fs
inc
shll
sbb
push
orl
inc
fwait
push
jp
inc
js
pop
fldl
add
sbb
inc
xchg
cmc
aas
sbb
jp
fimull
pop
mov
add
inc
jmp
dec
bound
pop
pop
add
ret
movsb
push
lods
cmc
lock
arpl
mov
pop
mov
lret
cltd
insl
and
repz
dec
mov
sub
lret
fmull
sub
xor
mov
mov
imul
in
xchg
clc
outsl
xor
icebp
pop
xchg
out
push
push
push
and
loop
mov
or
xchg
imul
adc
in
es
and
fidivl
rcll
idiv
out
push
add
xor
sub
sub
cltd
mov
mov
repnz
inc
add
xchg
stc
xchg
xchg
into
cwtl
outsl
pop
cld
push
movsb
int
adc
pop
das
fisttpll
sub
or
rorb
sbb
cmp
les
repnz
scas
pop
into
shlb
popf
xchg
les
fadds
les
mov
or
stos
out
repz
cmp
push
idivb
mov
cwtl
jl
push
fldt
jne
xchg
loopne
push
push
movb
insl
movsb
mov
hlt
xchg
add
cltd
adc
int
mov
dec
jne
mov
out
cmp
popa
dec
inc
fwait
cs
repnz
imul
out
xchg
out
repnz
pop
rcll
lcall
sbb
sub
mov
or
sub
sub
push
dec
or
les
lods
jb
cltd
or
into
in
ds
movsl
add
aam
ret
jmp
enter
aam
sbb
popf
xchg
xchg
adc
lea
lcall
hlt
add
jg
addr16
std
lds
fwait
lcall
push
inc
xchg
pop
ja
mov
dec
add
das
mov
ja
push
rcll
gs
out
loope
sub
out
lods
jo
add
dec
aad
mov
adc
inc
and
out
aas
enter
adc
jns
imul
data16
prefetch
jge
out
inc
sbb
test
hlt
test
std
mov
shlb
mov
fldl
das
push
fsts
movsb
ficoml
adc
push
xchg
pushf
sbb
mov
mov
dec
inc
test
mov
in
cltd
jbe
inc
pop
mov
add
icebp
pop
add
arpl
add
cs
sub
mov
call
in
pop
jnp
in
cli
adc
cltd
jnp
xchg
sub
inc
imul
pusha
mov
xchg
mov
xchg
mov
andl
pop
outsb
rolb
pop
pop
dec
xor
or
sub
ret
inc
push
dec
dec
pusha
test
xchg
jmp
addr16
push
mov
cltd
and
xchg
dec
sub
mov
jg
outsb
inc
iret
jnp
insl
and
adc
out
pop
dec
mov
subl
cmpsb
fnsave
pop
test
push
ret
addr16
jmp
inc
xchg
ret
sub
lret
stos
vxorps
shrl
sbb
ljmp
mov
dec
and
inc
stos
xor
je
loope
out
lods
push
inc
mov
push
negl
push
imul
sbb
aas
ds
push
and
das
jae
add
shlb
mov
mov
std
adc
mov
xchg
mov
cmp
cmp
imul
mov
lock
and
cmp
xor
mov
cmp
push
bound
rcrl
cmpsl
insl
sub
outsl
add
push
stos
push
inc
xchg
jge
cmpsb
nop
inc
call
inc
cmp
loope
mov
je
inc
popa
add
sub
fcmovnbe
jle
jne
jg
dec
pop
xchg
loop
ret
jmp
jno
or
add
fs
ret
testl
jge
jb
mov
cltd
inc
xor
test
out
cmp
aas
sbb
xchg
dec
dec
adc
pop
fwait
mov
mov
cmc
add
ljmp
or
addr16
mov
test
mov
jb
stos
es
cmp
int
dec
jle
xchg
sbb
sbb
adc
jg
sbb
je
rcrb
lock
push
int
imul
je
test
pop
imul
push
adc
sub
and
inc
cmp
add
aas
mov
scas
mov
add
loopne
inc
pusha
arpl
in
jbe
jae
int3
lds
jl
sbb
pop
xor
dec
mov
dec
insb
xchg
cmp
call
or
mov
jne
stc
test
repz
data16
dec
scas
das
sub
dec
nop
inc
push
inc
add
insl
repz
shlb
out
push
jle
bound
stos
add
subb
jle
out
dec
icebp
out
sbb
repz
and
xchg
int3
mov
les
daa
test
or
jg
pop
inc
mov
cmpsl
pusha
das
fcomip
fisttpl
adc
adc
pop
xor
and
adc
mov
outsl
dec
ret
ljmp
and
inc
popa
pop
and
push
ffree
aas
add
xchg
push
and
cltd
xor
inc
and
ljmp
push
mov
movsb
inc
fisttpl
pushf
mov
mov
stos
push
pop
sbb
adc
cmp
call
stos
out
mov
mov
inc
daa
out
imul
push
in
adc
testl
mov
jne
sbb
xchg
add
pop
aad
insb
xchg
xor
dec
in
cmp
pop
mov
jae
iret
ret
pop
sub
push
aaa
mov
test
xchg
enter
pop
mov
jo
cmp
outsb
repnz
jnp
pushf
inc
fcompl
and
mov
out
fisttps
cmp
ja
sbbb
rcl
inc
mov
xlat
add
jge
push
pop
fsubrs
js
fisubl
aad
je
mov
shl
aad
pop
lcall
jnp
adc
dec
test
mov
xor
jl
dec
mov
mov
test
divb
sub
mov
pop
or
sub
push
inc
lods
lret
and
fstl
pop
ss
adc
ret
fwait
popa
dec
mov
xorl
inc
or
pop
or
aas
test
ds
and
jns
jle
clc
and
or
out
mov
popf
mov
jo
pop
frstor
sbb
cmc
les
in
sub
bound
test
fldenv
mov
sub
lcall
inc
pop
inc
icebp
je
shlb
jl
sbb
sbb
sbb
dec
inc
jo
cmp
les
inc
daa
sbb
pcmpeqd
call
repz
jmp
movsb
mov
fdivrs
jnp
sbbl
push
lahf
add
mov
jbe
adc
jno
bound
outsl
cmc
int
inc
jae
mov
fs
mov
xchg
jge
cmp
icebp
aas
and
xchg
add
inc
xor
shl
mov
lret
sbb
pop
dec
loop
lea
ficomps
repnz
inc
jmp
jne
leave
xor
ljmp
ds
xchg
dec
and
jmp
divb
movlps
fcmovnu
test
and
stos
mov
sahf
push
shrb
mov
outsl
stos
inc
cwtl
testl
pop
jne
jns
aad
cld
loopne
mov
lcall
loop
das
add
lcall
shlb
aad
call
adc
mov
outsl
sbb
and
push
adc
jbe
pop
pop
clc
add
push
pop
jecxz
popa
pop
stc
sbb
mov
adc
push
push
push
sar
fs
jmp
sub
adc
xchg
sub
adc
sub
jmp
jnp
xchg
nop
add
xchg
rolb
xor
cmp
hlt
sub
inc
hlt
outsl
and
shlb
test
and
mov
pop
roll
outsb
out
pop
add
fs
scas
mov
and
repz
cmpsl
outsl
imul
ret
lods
or
stos
jbe
stos
dec
sarb
or
mov
aad
pop
cmpsb
or
pop
cmpsl
outsb
pause
ds
cmp
rolb
out
insl
outsb
push
cmp
into
cmp
jo
clc
fsts
xor
pop
pop
fwait
in
ret
lahf
sbb
add
jnp
arpl
adc
or
mov
xchg
push
imul
repnz
cwtl
pusha
fimuls
lds
lds
rcrb
push
test
mov
scas
xchg
stos
cmp
flds
fwait
dec
mov
movsl
bound
jecxz
icebp
sti
dec
pushf
xor
in
sahf
aas
dec
std
pushf
cmp
jl
add
sub
sbb
sbb
push
cmp
out
rcrl
pop
push
jmp
aam
repnz
cwtl
lods
mov
ss
mov
aam
stc
call
sub
add
ljmp
or
fldenv
jmp
sbb
test
scas
je
mov
push
sub
rorb
lahf
rcll
outsb
pop
jae
pop
les
cmc
fcmovnu
mulb
fldenv
xchg
jp
gs
insl
sbb
ss
cmp
adc
and
xchg
dec
xchg
mov
sub
push
fwait
das
out
nop
fbld
cli
cmp
mov
enter
cli
insl
fstps
add
or
mov
fs
and
lret
or
ret
bnd
dec
xor
rorl
enter
inc
iret
xor
pop
insl
sbb
sbb
leave
pusha
mov
call
loope
dec
inc
popa
cmp
jmp
ja
aam
add
xor
rorl
mov
xchg
pusha
dec
lods
rcll
loope
xchg
add
jg
sbb
stos
je
push
rcl
inc
xchg
pop
mov
movsb
sbb
xchg
dec
imul
in
arpl
mov
je
mov
fwait
sub
push
dec
adc
repnz
mov
test
xchg
jne
sbb
fldcw
cld
add
sbb
dec
les
and
xchg
rolb
pop
ret
xchg
sbb
clc
mov
jecxz
add
xor
inc
push
push
add
mov
pop
and
inc
popa
add
adc
dec
push
push
or
and
xchg
inc
lret
pop
sahf
in
fistl
inc
xor
lret
in
test
or
movsl
out
cmp
sbb
and
pop
jae
mov
lock
lods
dec
outsb
rorl
xor
shl
xor
subl
and
aam
xchg
lds
mov
mov
out
dec
push
cmp
inc
cli
mov
ljmp
or
pop
mov
jno
sub
add
push
jge
and
aad
shll
imul
sbb
push
insb
out
sbb
insb
in
out
scas
bound
fcomp
insb
adc
jecxz
sbb
pop
cmp
imulb
xor
jecxz
xchg
mov
xchg
nop
push
jp
dec
fidivs
adc
fstps
ror
jo
ret
arpl
inc
ss
mov
dec
push
aad
cmc
nopl
mov
mov
add
scas
fwait
push
xor
andb
rorl
les
mov
inc
std
push
mov
std
sbb
cmp
adc
out
flds
sbb
dec
xor
gs
fsts
call
cmpsb
es
inc
jno
dec
mov
adc
or
mov
dec
pop
inc
fidivs
enter
pop
sub
mov
or
mov
adc
mov
jl
dec
sub
outsl
mull
jne
push
push
nop
outsb
dec
mov
out
scas
xchg
stc
dec
outsl
popa
xchg
xor
mov
xchg
xchg
jae
jns
sub
nop
xor
mov
out
ffreep
xchg
mov
lock
in
cmpsb
cltd
or
mov
push
cltd
cltd
in
pop
lea
sbb
xchg
mov
lahf
or
jo
mov
js
les
ss
inc
push
cmpsl
flds
cmpb
lds
lods
sub
cmc
std
mov
pop
xor
dec
or
mov
jle
mov
push
jg
adc
movsl
ss
mov
je
push
cmpsb
les
call
cmp
ret
ja
and
in
nop
arpl
mov
gs
repnz
repz
fscale
jnp
in
pop
fwait
xchg
test
lcall
push
cwtl
xchg
mov
jge
jle
leave
mov
jl
fldt
hlt
sbb
cmp
pop
mov
repz
scas
inc
fisubl
pop
scas
dec
adc
sub
mov
or
dec
gs
and
hlt
hlt
mov
push
or
mov
jno
xor
and
in
decl
jb
cmp
dec
mov
lods
stc
lret
mov
orl
rcr
lahf
adc
adc
mov
add
jb
mov
xor
jecxz
xor
xlat
call
mov
jno
or
push
jno
adc
push
push
adc
out
das
sbb
cmp
add
inc
scas
jnp
mov
and
je
ret
cmp
mov
in
push
jnp
xchg
mov
sub
sbbb
lds
xchg
or
cld
mov
shrb
das
fnstsw
mov
aas
or
pop
loopne
sub
call
fcoms
jne
into
dec
inc
and
int
push
in
xchg
jecxz
ror
test
dec
cmc
outsl
sbb
xchg
jmp
adc
adcb
adc
clc
subl
and
jp
dec
fwait
lock
jg
jo
mov
mov
mov
out
add
pop
jg
dec
stc
xchg
aaa
xchg
mov
cmpsl
jg
dec
sub
or
dec
test
pop
cld
sti
sbb
pop
lea
pop
sbb
jmp
mov
sub
lret
insb
sub
mov
scas
lahf
fisubs
dec
mov
shll
movsb
fiaddl
mov
dec
ja
inc
xchg
sbb
add
add
cmpsb
xor
xor
mov
and
push
loopne
aaa
cmp
imul
pop
jp
cmp
push
cmc
jbe
sub
inc
dec
and
movsl
push
mov
xchg
int3
add
cli
into
mov
pop
jnp
dec
pop
cmc
fadd
inc
out
call
dec
cli
lahf
mov
dec
adcb
jbe
roll
jmp
jae
mov
clc
push
jl
cmp
test
inc
mov
test
adc
jmp
xchg
in
lret
arpl
nop
insl
ficoml
add
fucom
sub
mov
mov
stc
jge
add
cmp
push
mov
push
push
xor
fs
fnstenv
in
pop
mov
pop
dec
dec
js
std
insl
movsb
mov
fwait
aad
and
xchg
cld
cmp
les
cwtl
xchg
repz
lds
aas
add
sar
repnz
pop
cmp
or
hlt
shll
xchg
ljmp
mov
mov
mov
movsb
int
int
inc
mov
imul
or
sub
and
lret
dec
rorb
nop
jb
nop
and
jne
js
xchg
lea
aas
faddl
insl
mov
sbb
and
movsb
jb
mov
ja
mov
xchg
push
test
nop
inc
cmp
sub
push
icebp
adc
call
xchg
cmp
jmp
cmpsl
cmc
in
dec
jb
into
pop
or
inc
ja
clc
fbstp
test
testb
xchg
lret
sbb
cmc
jae
add
push
sbb
xchg
cvtps2pi
xor
mov
sub
xlat
sub
icebp
ret
xor
repz
mov
lds
int3
frstor
pop
or
mov
test
mov
or
fnstsw
mov
or
loope
sub
and
dec
sub
fs
jmp
mov
xchg
fs
popf
lret
lahf
inc
test
movsb
pop
and
dec
jbe
cmp
mov
pop
push
add
cli
cmpb
pop
push
outsl
leave
mov
je
or
cli
inc
xor
lahf
dec
dec
sub
icebp
mov
loop
jno
xor
ja
stc
popl
fwait
or
push
popa
add
ss
push
add
sarl
push
jnp
jle
pop
mov
jmp
pop
mov
rcll
cmp
lods
mov
std
lcall
ss
inc
push
xor
fsubr
push
cmc
push
cmpsb
lcall
fdivrl
push
lock
sbb
push
ja
add
cmp
lods
sbb
xor
mov
mov
pop
push
movsb
loope
jecxz
fnstcw
rcl
inc
or
hlt
adc
push
fdivp
inc
cmpsb
xor
or
out
inc
pop
add
inc
fidivs
xchg
sbb
pop
pop
fstps
inc
jle
dec
popa
pushf
pop
lods
hlt
mov
lods
xchg
add
mov
mov
mov
jl
pop
jge
stos
xchg
fsubrs
dec
dec
push
pop
pop
mov
pop
ss
mov
push
add
jb
sldt
add
add
pusha
or
je
call
pop
add
cmpb
jne
popa
jmp
fldt
cmp
add
pop
and
xor
mov
add
cmp
jne
movzwl
add
mov
add
cmp
je
sub
jmp
mov
mov
add
mov
add
jmp
mov
mov
push
push
call
call
pop
sub
mov
sub
mov
movb
popa
jmp
insb
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
adc
test
pusha
xor
mov
shr
je
pop
cs
or
sbb
and
jl
sub
mov
mov
inc
mov
inc
mov
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
jae
xor
add
jne
mov
inc
adc
jae
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
adc
je
push
sub
mov
pop
mov
inc
mov
jmp
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
sub
mov
jne
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
push
mov
sub
rep
pop
jmp
dec
shl
mov
inc
mov
mov
add
jne
mov
inc
adc
adc
add
jne
mov
inc
adc
jb
cmp
jae
cmp
jb
inc
push
mov
sub
rep
pop
jmp
cmp
ja
add
push
mov
sub
rep
pop
jmp
mov
inc
xor
shr
je
adc
mov
push
mov
sub
rep
pop
mov
jmp
sub
mov
popa
ret
jmp
jmp
add
in
cld
sti
shlb
popa
jo
cmp
pop
push
jle
push
std
xor
sarl
popl
jmp
cmp
stos
adcl
add
insl
imul
sub
fsubl
jge
add
cli
clc
cwtl
mov
adc
scas
inc
mov
pop
jg
xor
and
fidivs
pop
std
jp
xchg
scas
aaa
xchg
add
jg
in
cmp
in
inc
mov
jbe
mov
push
aam
call
in
xchg
xor
xchg
stc
and
jno
inc
adc
shlb
call
xor
fidivs
inc
and
ds
add
push
call
lcall
or
and
jno
dec
add
push
mov
adc
sbbl
xchg
add
fmuls
fmuls
inc
mov
or
xor
or
sub
adc
iret
adc
loope
fsubrl
es
add
inc
add
dec
enter
inc
orb
sbb
rol
mov
adc
mov
push
jecxz
test
jne
mov
mov
mov
rcl
stc
ja
pusha
scas
ret
inc
inc
movsb
dec
mov
stc
inc
rcll
mov
aam
inc
cmp
pop
pop
ja
sub
addr16
jmp
adc
jne
sbb
push
sarb
scas
sbb
mov
pop
int3
cmpsb
dec
sbb
add
xor
add
divb
jo
int3
daa
mov
sbb
push
test
cmpsb
fdivrs
push
call
fcoms
ret
push
testb
add
add
pcmpeqw
mov
rol
xor
and
rorl
roll
cli
add
push
or
mov
add
mov
cmp
je
fstpl
add
adc
movb
aaa
jg,pt
aaa
sub
mov
lret
push
call
movsl
arpl
jmp
jp
fistpll
and
inc
out
lea
add
dec
cmpl
add
out
add
js
hlt
lret
cmp
pop
je
test
jge
mov
popa
shlb
add
out
mov
jl
mov
andb
fimull
or
sub
fadds
pop
test
je
mov
xor
dec
cmp
jle
sub
push
pop
pop
pop
pop
mov
pop
mov
push
add
jne
pushf
adc
and
jmp
cmpb
je
test
xor
add
jbe
add
dec
adc
inc
popl
pop
insl
add
jge
fsubs
clc
int
loope
inc
int3
jge
jae
fidivs
pop
or
dec
cld
inc
rep
jmp
lret
pop
cltd
insl
adc
or
dec
shll
or
push
shl
add
pop
sub
fildl
mov
cmp
arpl
or
ja
shr
repnz
and
or
or
jmp
ret
or
adc
or
dec
and
adc
pop
lock
lea
jb
or
shlb
stos
and
clc
out
lea
adc
cmpb
mov
stos
cmp
popa
shll
mov
decb
inc
dec
jne
mov
mov
icebp
sub
add
mov
aaa
push
pop
or
push
ss
mov
pop
orb
pop
loope
out
push
int3
add
and
in
push
insl
and
pusha
sbb
inc
push
les
add
imul
push
sbb
cmpsl
push
push
dec
push
sarl
xor
addr16
mov
sbb
add
dec
pop
jbe
adc
rcrl
jne
jne
pusha
adc
dec
in
in
push
nop
aas
hlt
test
or
xchg
push
loopne
roll
ret
mov
jne
popf
adc
repz
cmp
aaa
or
or
mov
outsl
xor
push
cmpb
lcall
ja
lods
xor
adc
sbb
cmp
js
sub
add
xor
sbb
stc
xor
or
xor
xor
cltd
inc
in
les
inc
or
mov
les
dec
and
adc
cmpsl
xor
test
adc
inc
or
out
push
aad
inc
adc
add
inc
bound
pop
in
rcrb
sbb
mov
xchg
fadds
xlat
xor
cmp
adc
or
mov
sbb
movsl
fdivrl
xchg
movl
add
xchg
cmp
push
sbb
add
inc
jno
inc
cmpsb
sub
ret
pop
les
mov
adc
outsl
data16
mov
mov
add
pcmpgtb
sub
inc
xor
xor
xor
jmp
addb
dec
loopne
xor
adcb
leave
into
or
nop
inc
je
pop
inc
cwtl
icebp
in
inc
cwtl
cmp
cmp
stos
add
pop
push
pusha
mov
orl
xor
hlt
add
pop
popf
ljmp
xor
pusha
packuswb
in
lods
nop
rclb
add
pop
sub
inc
shl
or
add
add
or
insl
cmc
pop
das
out
add
push
test
xor
popa
shll
aam
repz
call
pop
or
add
mov
out
add
lock
movb
xor
mov
sub
les
pusha
shl
fildl
push
jg
ss
mov
sbb
cmp
iret
add
jnp
push
push
xor
icebp
mov
jb
aaa
data16
or
out
cmpsl
xchg
loope
xor
add
idivl
jb
loop
fldl
xlat
xor
lods
mov
jle
loope
popl
out
ljmp
inc
lods
scas
pop
not
btc
add
xchg
sysret
xchg
add
inc
xor
push
jae
add
or
push
enter
fisubrl
sbb
cs
addb
mov
mov
outsb
out
cmp
add
mov
add
fnstcw
push
push
jb
ss
cmp
mov
mov
xor
add
add
call
lock
fmuls
add
leave
cwtl
mov
or
sti
or
mov
mov
jg
add
push
les
add
or
pop
pop
pushf
cmp
shlb
and
cmp
or
js
jns
into
add
lods
loopne
sub
mov
and
or
mov
add
pop
add
add
lods
mov
jne
jno
out
aas
js
test
cmpsb
jb
push
cli
jnp
and
mov
lods
les
sub
das
mov
dec
pusha
sub
add
testb
fistl
repz
bound
push
mov
lcall
loopne
lret
push
outsl
xchg
push
loop
dec
dec
xor
int3
dec
cmc
push
call
add
sub
scas
add
adc
aas
loop
sub
les
sub
adc
push
movb
jo
xlat
sbb
arpl
mov
sbb
dec
aaa
jo
cwtl
adc
jbe
cmp
mov
sub
mov
push
aam
scas
js
add
and
les
sub
test
stc
pop
dec
push
lcall
iret
and
pop
sub
mov
xor
dec
aad
in
adc
lock
push
pop
int
lret
leave
add
pop
adc
enter
rclb
pop
xchg
rolb
xchg
in
cmpsl
iret
inc
lods
push
movsl
mov
sub
movsb
rorl
ss
sbb
loope
test
and
js
or
sbb
mov
leave
jo
dec
push
pop
or
cwtl
std
pop
adc
cmp
dec
dec
or
inc
push
mov
push
dec
cmp
ror
dec
adc
cmp
add
add
adc
xor
sbb
sub
fsubr
add
dec
jns
xchg
loop
push
adc
add
xlat
xchg
pusha
lret
push
cmp
mov
and
sti
push
add
sub
add
add
flds
rcrb
xor
lods
mull
xorl
decl
adc
jle
mov
add
xchg
push
xchg
std
pop
push
and
rcll
lods
inc
shrb
inc
idivb
xchg
arpl
imull
popa
sbb
cmp
in
pusha
clc
repnz
dec
icebp
push
lret
adc
cltd
into
mov
clc
pop
add
js
dec
leave
nop
mov
sbb
jle
sub
fwait
push
mov
orl
mov
mov
and
and
outsl
dec
inc
pop
dec
and
popa
inc
inc
icebp
push
rolb
sbb
cmc
and
or
movsb
in
fs
xlat
addb
jo
cmp
enter
fcmovnbe
xchg
movl
orl
push
xor
jl
ret
aaa
stos
icebp
cld
inc
inc
pop
pusha
lret
jo
clc
out
and
sub
xor
or
gs
mov
repz
in
jecxz
fidivrs
pop
push
sti
shll
mov
xchg
ja
add
add
jp
add
pop
fs
inc
mov
js
push
cwtl
mov
enter
mov
loopne
cwtl
mov
push
pushf
xchg
mov
mov
jno
dec
pushf
les
push
imul
mov
sbb
pop
shrb
je
push
lods
lret
inc
adc
sub
push
test
jecxz
orl
xchg
or
inc
rclb
mov
xor
sub
call
add
sbb
in
cmp
sub
mov
or
pushf
add
push
sbb
nop
inc
push
lods
in
loope
test
adc
and
add
mov
add
out
or
sbb
xlat
mov
and
aam
inc
bound
das
dec
das
and
and
or
lods
xchg
rorb
xor
repnz
cmp
cmp
jnp
int3
aad
sub
int3
jo
adc
sub
pop
and
sub
nop
or
inc
push
movsl
stos
enter
test
lea
aas
imul
iret
xchg
enter
mov
jmp
inc
dec
adc
pusha
lods
and
inc
dec
mov
or
inc
dec
inc
loop
dec
insl
xchg
or
push
sbb
adc
sbb
adc
rolb
add
or
xor
rol
jge
dec
cltd
mov
sbb
cmp
stc
repz
fbld
add
add
jecxz
dec
jmp
inc
and
xchg
pop
std
outsb
stos
rclb
and
stc
testl
jp
rolb
jns
imul
mov
and
sbb
push
add
in
push
add
cltd
mov
jl
inc
push
nop
sbb
mov
pushf
dec
mov
dec
cmpsb
or
dec
jno
xor
inc
dec
rorb
sub
fistpl
popf
jne
lods
cmp
jno
movsl
arpl
pushf
outsl
loop
popa
cmp
test
cmpsb
insb
adc
cmp
cmp
popf
cmp
add
ret
scas
shlb
dec
mov
add
xor
xlat
xchg
fwait
sub
inc
adc
push
loope
dec
ret
mov
movsb
aam
add
sbb
and
popf
out
mov
and
je
andb
pop
testb
add
popf
mov
es
cmp
push
stos
and
sub
mov
add
sbb
bound
lret
jbe
test
xchg
push
xchg
inc
movsl
shlb
gs
push
inc
stos
xor
jo
popa
mov
cmc
add
add
or
cmp
enter
inc
test
std
test
mov
and
orb
adc
fstp
lret
stos
arpl
add
fimull
lock
dec
xchg
add
add
jno
dec
enter
add
pusha
pop
test
mov
adcb
jo
ds
call
sub
loop
les
movb
sub
nop
jmp
in
push
add
arpl
xor
or
aam
or
scas
or
adcb
adc
mov
fcmovnbe
iret
fs
lret
enter
fldlg2
nop
xchg
fcomps
insb
adc
scas
sbb
call
hlt
push
aaa
add
inc
loop
ljmp
inc
shl
pusha
fcomp
inc
call
sub
out
xchg
add
push
adc
push
inc
adc
hlt
out
push
addb
stc
test
inc
js,pn
dec
je
jmp
sbb
rcll
sub
mov
push
cwtl
lcall
scas
fistpl
shll
xlat
loop
aam
inc
nop
push
dec
mov
and
notl
mov
add
lcall
inc
push
bound
sub
outsb
adc
dec
xchg
call
js
push
sar
jmp
enter
rolb
stos
cmovo
sbb
sub
sbb
and
jmp
lods
movsb
adc
nop
add
adcl
sbb
inc
lea
out
and
or
lahf
fs
js
es
sti
add
adc
push
outsb
xchg
mov
sarb
jg
inc
xorb
jp
jo
adc
popf
int3
add
mov
loope
pop
sbb
cs
sti
add
dec
fs
sub
lods
jns
cli
adc
shl
cmp
cs
add
outsl
std
mov
mov
test
xchg
add
and
fadds
stos
cmc
inc
clc
cltd
std
cmpsb
lods
fisttps
fcoms
mov
notb
xchg
cmp
dec
mov
mov
push
cmp
xchg
pusha
inc
lds
cld
jl
outsb
ja
pop
shll
inc
das
xchg
jo
sti
addr16
testl
or
movsb
mov
outsb
jnp
fistl
or
xchg
push
dec
inc
int3
movsb
mov
jge
add
cwtl
push
mov
cld
push
les
cmp
xchg
jne
lahf
add
push
mov
pop
into
mov
vmovsd
inc
cmp
outsl
rsqrtps
jle
outsb
addr16
cltd
rolb
aam
jl
jne
inc
dec
into
mov
adc
jecxz
add
pop
sbb
movsl
jecxz
add
mov
add
fnstenv
aas
out
mov
or
cwtl
add
add
cmpsb
test
push
pop
scas
add
mov
outsl
adc
push
mov
add
xorb
push
ds
add
push
movsl
loop
cmp
sahf
outsl
dec
test
clc
cmp
jle
sti
add
fstpl
mov
loopne
push
out
xchg
add
mov
cmpsb
ror
rorb
add
dec
movsb
or
xchg
or
add
push
adc
cmp
jns
in
dec
add
stos
loopne
mov
push
iret
jb
clc
cmp
mov
movsl
dec
subl
adcb
pop
jge
push
out
mov
aas
andb
sub
addb
inc
mov
jecxz
mov
mov
fisubrl
inc
xor
inc
loop
add
fsubl
mov
add
stos
or
repz
ret
lret
jo
push
push
add
mov
pop
jbe,pt
xchg
xor
dec
cmp
movsb
in
adc
jecxz
or
sbb
cmp
dec
nopl
mov
loope
xchg
push
pusha
addb
mov
or
lock
cmp
cmp
fnstenv
or
mov
adc
roll
mov
das
mov
pop
push
or
add
cwtl
sbb
push
cmp
imul
jp
or
pop
scas
xor
outsl
and
call
js
add
or
rcrl
call
cld
into
and
les
add
dec
loop
mov
in
movsb
add
and
sub
mov
cwtl
subb
push
lahf
dec
sti
sub
testb
cmp
rcl
mov
cmp
mov
sbb
xor
andb
pop
dec
and
xchg
add
cmpsl
loopne
je
pusha
and
add
mov
and
pop
sub
add
lods
stos
iret
sbb
cmpb
adc
add
imul
fnstcw
inc
loopne
xor
pop
and
add
add
cmpl
push
enter
clc
jecxz
pusha
xchg
mov
jl
repz
push
fadds
fmul
fistpl
cmp
insb
or
sahf
bt
mov
or
pusha
cmc
and
std
imul
mov
push
hlt
or
pop
andb
sbb
jmp
or
out
add
or
adc
add
adc
pop
add
enter
xchg
add
sbb
subb
in
mov
push
inc
int3
testb
xchg
xchg
add
xorb
jle
cmpsb
add
testl
xor
mov
roll
xchg
sub
pmaxsw
mov
mov
dec
aaa
xor
xor
js
fdivp
js
cwtl
add
out
xchg
fcomps
cwtl
js
add
fadd
xchg
shlb
lret
sbb
cmp
rcll
mov
lcall
xchg
mov
iret
and
add
lahf
mov
sub
push
ljmp
push
adc
test
sahf
mov
scas
pop
shll
lods
insl
fadd
mov
inc
popa
mov
dec
and
hlt
mov
fldt
testb
cwtl
adc
adc
cs
adc
sub
or
out
lock
pusha
xchg
mov
sub
xchg
mov
decl
sub
or
inc
movsb
add
xchg
popf
rorl
and
xor
jo
andb
pop
add
cmp
dec
loope
add
and
in
lods
add
hlt
cmp
outsb
push
mov
sub
sub
test
inc
cld
xchg
mov
add
je
sub
lcall
sub
sbb
fcmovnb
and
pop
xchg
add
inc
mov
outsl
ds
loopne
inc
addb
mov
adc
int3
add
aas
or
addb
out
inc
push
lret
add
mov
lds
adc
pop
ret
mov
jp
jmp
out
dec
popf
jae
test
jae
pop
je
test
adc
arpl
jo
je
xor
sbbb
add
sahf
aam
add
fcomps
out
sub
and
in
enter
lcall
cmpsl
push
mov
into
pusha
popf
dec
addb
or
call
or
fwait
stos
dec
push
lods
sub
pusha
xchg
pop
mov
imul
leave
xchg
jle
pop
add
push
repz
int3
xlat
xor
adc
repz
and
add
fldcw
or
and
adc
add
roll
subb
aad
das
jno
mov
jge
or
xor
enter
test
cwtl
pop
or
and
add
xorl
sub
sarb
sub
cmp
filds
xchg
mov
lahf
and
orl
pusha
sbb
xor
in
sub
nop
mov
mov
mov
into
push
pop
mov
sub
cmp
push
imul
add
or
mov
test
jp
mov
andb
lods
and
xor
adc
pop
or
inc
call
inc
je
hlt
mov
xchg
mov
push
mov
and
cmp
dec
addr16
jmp
add
add
scas
pop
ficoml
and
gs
mov
rorb
add
mov
cmp
cmp
mov
movsl
inc
mov
inc
rolb
insb
clc
cmp
sti
scas
sbb
push
cmp
or
popa
and
xchg
mov
pop
fistpl
loopne
or
dec
inc
adc
lret
add
mov
ds
push
sub
das
sbb
rolb
cld
push
pop
scas
xchg
jne
xchg
mov
pushf
add
push
das
call
out
mov
nop
add
aam
mov
mov
pop
lret
cmpsb
add
in
cmp
jge
aaa
dec
dec
scas
or
idivl
fsubrl
jmp
shl
push
add
repnz
test
iret
bound
sub
and
loop
shl
dec
add
cmp
add
dec
addr16
push
adc
add
ja
repz
test
imul
inc
or
dec
push
mov
pop
inc
sahf
lret
sbb
cs
cmp
or
sbb
test
push
adc
insb
xchg
mov
push
sbb
pushf
inc
inc
lahf
push
clc
adcl
fdivl
hlt
mov
mov
nop
cld
push
push
imul
or
mov
sub
add
lahf
add
nop
adc
add
hlt
imul
movsl
and
inc
or
add
repz
adc
or
and
xor
mov
xor
or
add
mov
scas
daa
cmp
adc
add
adc
dec
enter
mov
jbe
push
lock
xor
push
cmp
mov
cld
repnz
std
cmc
mov
fwait
test
or
inc
add
inc
stc
fildll
add
int
test
cmc
adc
adc
sbb
cwtl
add
adc
arpl
sub
xor
sub
rorb
dec
mov
ficomps
and
add
negl
fst
and
add
bound
cwtl
inc
pushf
aad
mov
add
adc
mov
mov
inc
mov
es
pusha
and
hlt
mov
pop
imulb
lock
adc
rcr
popl
sub
outsb
sbb
rcrb
jo
fisubrl
jno
test
push
pop
mov
inc
xor
fbld
mov
add
mov
pop
daa
out
cwtl
add
aas
mov
dec
cmc
nop
cmp
adc
and
movsb
add
add
sub
or
inc
jo
nop
xchg
int
hlt
and
jl
push
push
aam
mov
xor
dec
lds
mov
out
xor
push
mov
sbb
outsb
fildl
cld
add
lret
ret
hlt
pop
mov
pushf
movsb
and
movsb
push
js
pop
enter
xchg
dec
dec
xor
add
jo
je
fiadds
sti
push
test
mov
mov
insb
stos
inc
jmp
scas
mov
pop
xchg
repnz
lock
lret
stos
cmp
dec
sahf
and
repz
and
sub
mov
and
add
cwtl
and
mov
inc
sbb
call
and
add
cmp
dec
sbb
xchg
cs
sbb
rorb
roll
push
lret
sarl
or
int
enter
dec
nop
adcb
pusha
add
mov
sbb
or
divl
xor
mov
mov
xor
je
lock
cltd
nop
or
pop
stc
cld
pop
cmpsb
adc
inc
sahf
rorb
and
arpl
jbe
xor
cs
popa
dec
xchg
push
add
or
mov
fcompl
shll
sub
sahf
loop
pop
loopne
aas
jo
call
int
or
xchg
cmc
xor
jns
incl
and
jle
push
lret
xchg
adc
fstps
add
cmc
add
mov
gs
pop
ja
enter
cli
dec
call
mov
sub
sub
push
sub
mov
xchg
in
stc
pop
sub
mov
cmp
or
mov
mov
sbb
pusha
add
in
add
rclb
xchg
inc
pusha
les
fcoml
pop
stos
xor
pusha
sarb
popf
mov
xchg
test
add
les
jb
pop
outsl
xor
pop
pop
mov
fists
add
fiaddl
mov
or
aaa
add
lods
xchg
cwtl
mov
repnz
and
test
adc
dec
inc
mov
cmpsl
jne
add
fldl
cltd
sbb
pop
xlat
pop
test
push
pop
add
push
lret
shlb
pop
fdivl
push
sbb
out
enter
add
lret
mov
iret
lds
cmc
movsb
jae
pop
scas
scas
mov
sbb
pusha
ja
mov
cmp
inc
mov
xor
inc
push
push
shlb
inc
popa
sti
fiaddl
je
out
mov
pop
loop
push
cwtl
sub
addb
jle
add
xchg
lahf
jnp
xor
pusha
cmp
testl
loop
jmp
xor
lcall
insb
mov
sub
int
mov
aam
outsb
xchg
or
and
cwtl
nop
mov
add
cltd
or
mov
jl
rcr
hlt
add
dec
pop
stos
dec
movsb
fs
out
mov
test
xor
xor
inc
dec
adc
fs
test
xchg
pop
mov
nop
sbb
sub
cmp
enter
and
adc
sbb
daa
push
xor
js
insb
inc
add
sbbl
test
cmpsb
aam
lahf
add
adc
sub
ljmp
aam
add
dec
mov
cmp
xor
mov
and
insb
mov
and
add
pop
or
sub
hlt
mov
mov
xchg
popa
sbb
jecxz
cmp
jns
pop
shrb
xor
jle
xchg
scas
fidivs
adc
mov
add
pusha
xor
roll
add
fbstp
sbb
lea
push
xor
pusha
sub
in
push
pop
mov
leave
fiaddl
test
std
scas
fs
add
inc
jge
out
jns
pushf
fs
faddl
das
frstor
repz
jle
mov
outsb
les
pop
stos
or
sahf
nop
sub
add
or
addr16
sarb
sbb
enter
mov
add
jle
xchg
je
mov
shl
scas
xor
jle
cs
nop
or
movsl
aas
add
inc
test
mov
adc
daa
sbb
adc
sbbb
rcll
dec
mov
popa
adc
sub
pop
inc
cwtl
add
lret
repz
call
movl
lret
push
mov
filds
jg
dec
sub
push
mov
sbb
push
out
inc
sub
scas
je
pop
enter
mov
call
ds
cli
pop
jns
rcll
add
and
or
fdivs
add
lods
and
add
loope
sub
sbb
pop
inc
adc
add
into
in
xor
xor
clc
sbb
lock
call
lods
cmp
cmpsl
add
mov
ljmp
jnp
add
push
jae
xchg
stos
add
mov
int3
and
stos
sub
pop
rolb
xchg
sub
lods
inc
and
dec
cld
out
dec
pusha
in
dec
rcl
dec
add
insb
in
jns
lock
mov
cltd
pusha
cli
or
mov
mov
js
and
hlt
stos
mov
shlb
sub
push
out
iret
cli
inc
add
and
inc
fiaddl
lcall
mov
sbb
les
inc
fcmovnbe
adc
xchg
popa
leave
int
mov
add
jg
add
push
pop
push
mov
adc
out
add
in
push
mov
fdivrl
hlt
loopne
add
testb
loope
daa
ds
aam
std
dec
xchg
pcmpeqb
lea
into
inc
loope
rolb
mov
add
rcrl
outsl
inc
or
pop
dec
ret
mov
cltd
rcl
inc
push
daa
jo
add
sbb
test
cmp
xor
pop
mov
adc
sub
faddl
ret
rcrl
gs
repz
inc
jae
add
jl
jo
mov
stos
test
dec
fsts
dec
pop
inc
jle
push
dec
out
mov
rcrl
inc
xchg
add
aaa
mov
enter
aad
xchg
fdivl
loopne
and
xchg
fiadds
or
sbb
xchg
push
arpl
lcall
adc
iret
call
rcll
fiaddl
mov
adc
sub
or
xchg
lock
enter
add
jp
adc
dec
sbb
arpl
iret
and
popf
dec
sub
mov
adc
push
shl
je
pop
ds
cmp
mov
push
inc
cwtl
add
aam
dec
pushf
pop
scas
or
adc
rol
pop
or
add
jmp
test
adc
stos
add
cmp
mov
sbb
and
xor
inc
cwtl
xor
mov
and
pop
adc
dec
mov
push
adc
adc
test
fiaddl
sarb
enter
mov
dec
xor
xlat
xor
and
push
push
jae
mov
bnd
shr
sahf
test
sahf
sbb
test
dec
test
js,pn
insb
xchg
std
cmp
and
add
movsl
icebp
imul
add
scas
push
dec
cwtl
and
or
bswap
push
flds
and
cs
fcmovne
orl
xor
inc
mov
pop
fadd
xor
les
adc
sub
call
mov
lcall
fs
fldt
subb
mov
mov
sub
loopne
loopne
out
mov
test
inc
push
and
inc
sbb
sahf
sub
inc
add
rcr
sbb
repz
in
shrl
js
out
jmp
ss
adc
mov
push
xlat
sbb
rcrb
inc
into
push
lea
mov
nop
or
xchg
add
jmp
vrsqrtps
push
neg
rcrl
push
jae
hlt
mov
enter
jb
rclb
inc
inc
repz
inc
stos
ret
sti
scas
xchg
adc
mov
shlb
cmpb
jbe
add
mov
nop
loopne
fldenv
adc
pop
or
loopne
lock
mov
dec
lods
sub
and
inc
in
fcomps
ja
add
or
mov
ret
xor
add
dec
push
push
cmp
sbb
das
hlt
test
pop
and
test
pop
and
fisttps
xor
fisubrs
addr16
push
dec
and
roll
loope
test
leave
pop
cwtl
aad
xchg
adc
lods
repnz
xor
data16
cwtl
or
pop
and
jp
es
aad
mov
std
cmp
xchg
or
loopne
test
add
jle
pop
lahf
aad
adc
add
or
imul
adc
mov
xorb
repz
dec
stos
das
xlat
popf
aam
rorb
xor
and
add
dec
and
les
push
inc
inc
inc
mov
hlt
or
jle
cld
mov
lahf
cmp
adc
out
pop
add
pop
dec
pusha
or
xor
cwtl
add
add
inc
dec
cmp
dec
test
ss
jle
adc
out
rolb
push
xor
sub
dec
dec
push
lock
mov
and
imulb
rolb
xchg
shl
jne
jne
pusha
aas
jmp
sbb
jmp
ret
pop
add
mov
push
add
out
add
es
inc
shll
in
pusha
frndint
scas
add
xor
aad
and
xchg
sub
dec
inc
inc
cs
add
iret
add
mov
out
push
gs
adc
push
int
enter
mov
sbb
xlat
insb
test
rorl
lret
xorl
roll
mov
or
sti
fwait
pop
popa
mov
mov
inc
dec
lret
add
lahf
pop
sbb
popa
add
aad
popf
inc
test
inc
rolb
adc
adc
add
pop
and
movsb
add
sbb
out
jns
jns
sbb
dec
cs
in
and
and
stos
enter
adc
popf
outsb
clc
notb
ftst
add
cmc
fisttpl
mov
rolb
jo
das
sbb
popf
and
add
stos
xor
mov
enter
in
fidivrl
iret
pop
xchg
fmuls
push
inc
repnz
cmp
inc
sub
iret
jmp
jle
adc
jno
nop
dec
push
inc
mov
add
inc
les
fcoml
add
shlb
nop
mov
outsl
xor
xor
or
les
sub
inc
push
int3
and
sub
iret
lock
in
inc
and
cmp
jecxz
aas
inc
jnp
negl
fyl2x
test
pop
push
daa
adc
das
adc
pop
and
xchg
push
repz
rcrb
mov
cmp
cwtl
push
inc
mov
dec
push
inc
cmpl
or
mov
mov
scas
int3
xadd
xchg
sbb
pop
dec
test
dec
jl
pop
je
sbbb
daa
mov
test
leave
rclb
xlat
in
and
in
pusha
popf
or
sti
aad
and
notb
in
jae,pn
cmp
push
cli
jl
add
mov
mov
sbb
add
addr16
cltd
and
mov
add
cs
out
mov
mov
add
rcrl
inc
in
mov
xor
popa
push
popf
jno
add
pop
sub
push
push
xchg
loop
add
fistps
gs
add
jno
lea
jno
outsb
pusha
insl
or
cmc
pop
lret
xor
xchg
or
repnz
inc
jns
ret
mov
out
iret
push
sbb
xor
inc
mov
shlb
jbe
jno,pt
xchg
adc
popf
add
fisttpll
or
dec
and
adc
int
imul
and
xor
jmp
lock
icebp
mov
outsb
lret
test
jo
pop
xor
out
cltd
mov
ret
int
sbb
xchg
imulb
add
add
mul
movsl
shr
addl
dec
shll
sar
inc
pushf
mov
stc
dec
xor
mov
loopne
sbb
stos
add
xchg
call
mov
adc
and
push
lret
daa
fstpl
inc
sub
adc
mov
jp
adc
pop
pushf
pop
roll
push
jns
sbb
fidivs
hlt
push
sbb
clc
test
leave
call
in
add
jae
ficompl
push
pop
in
add
gs
push
push
lock
push
cltd
cwtl
rcrl
lods
int
dec
add
das
call
repnz
call
xchg
xor
mov
xchg
fsubr
mov
push
rcl
dec
fists
push
jno
testl
addb
pop
loopne
cmp
push
jae
push
adc
mov
inc
sbb
add
mov
push
dec
xchg
lock
cmc
stos
movsb
in
or
movsl
xor
or
orb
sbb
aam
in
mov
repz
adc
test
inc
lock
setb
cmc
jecxz
fnsave
adc
pop
shrl
pushf
push
mov
and
test
add
mov
xchg
adc
adc
mov
insl
add
je
inc
mov
out
dec
and
das
aaa
test
ds
inc
xor
aad
leave
pusha
sarl
and
gs
add
xor
sbbb
mov
aas
push
roll
add
push
sub
push
adcb
mov
sub
push
test
les
je
jl
cwtl
lss
insb
adc
cmpb
jl
pop
mov
dec
mov
andb
repnz
mov
inc
add
mov
push
jmp
dec
pusha
int3
lret
int
sbb
push
dec
mov
push
out
fdivs
roll
fdivp
add
cmp
pusha
out
xorl
outsl
cwtl
pop
adc
sbb
test
sub
inc
mov
jo
add
jns
and
xor
cmp
or
dec
adc
and
and
xchg
loop
rorb
dec
inc
jmp
loopne
pusha
dec
test
cmp
mov
stos
popa
fdivp
fcompl
lea
das
je
roll
aaa
loope
dec
mov
adc
and
addr16
in
pusha
lret
or
or
repnz
enter
imul
fildl
adc
andl
enter
sahf
pop
sbb
adc
mov
xor
sub
sub
push
in
add
iret
sub
shl
and
pop
ds
and
add
movq
adc
out
popa
fucomi
inc
pusha
test
subl
cmp
cmp
inc
and
cmp
sbbb
sbb
adc
xchg
popa
inc
xchg
movsb
subb
cltd
outsl
addb
sub
sarl
hlt
or
sar
stos
and
dec
or
jge
sbb
das
cwtl
and
add
cmp
fwait
jmp
clc
xor
in
test
call
pop
incb
jp
sub
nop
clc
inc
pop
xor
mov
imul
std
pusha
add
xor
xchg
xchg
adcb
add
sbb
and
jae
dec
pop
je
inc
lods
rolb
enter
les
push
in
aam
cmpsl
add
rcr
in
repnz
int3
xlat
or
cs
dec
nop
and
test
jmp
pop
fcmovb
ljmp
hlt
or
sbb
jno
pop
rcrl
rolb
xchg
loop
test
add
mov
pusha
xor
xor
mov
in
sbb
dec
je
sub
add
in
cmpsl
rol
inc
dec
in
pusha
test
add
repz
pop
lds
xchg
cmp
add
mov
movsb
add
or
xor
movsb
inc
in
add
xchg
mov
fsubs
in
and
sbb
enter
inc
lea
cmp
popf
pop
add
jmp
stos
dec
or
pusha
addl
lahf
mov
cs
stc
int
test
jmp
jecxz
or
sub
rolb
inc
inc
fdivrs
add
insb
outsb
ret
pop
loopne
inc
inc
mov
cmc
dec
stos
or
lods
pop
clc
xchg
mov
xor
jbe
or
xchg
test
notl
lcall
inc
and
ja
add
xchg
and
aad
sarl
or
inc
outsb
enter
xor
pop
inc
in
leave
adc
test
mov
xchg
and
sbb
cmp
les
sub
jg
pushf
cmp
jl
gs
dec
inc
ljmp
xchg
sub
test
jne
sarl
inc
loopne
fisubs
movl
je
cmp
mov
and
stc
pop
mov
add
push
int3
inc
in
ss
dec
frstor
dec
or
inc
mov
add
roll
popf
enter
add
in
ja
divb
fcoml
cld
pop
mov
sbb
fwait
je
inc
lret
sub
out
test
and
popf
add
inc
imul
enter
or
jbe
int3
add
dec
add
outsb
in
bound
dec
mov
in
out
hlt
dec
cltd
inc
into
push
lock
in
sbb
dec
cmp
cmp
pop
adc
pusha
lods
xchg
stc
movsl
adc
or
mov
hlt
add
int3
jmp
and
push
pusha
scas
jle
mov
jmp
das
cmpsl
sub
and
mov
clc
aam
sbb
or
sbb
scas
addr16
mov
leave
fcmovnb
push
jle
into
rcrb
frstor
test
mov
jae
add
pop
xchg
orb
sub
mov
adc
pop
add
adc
pop
sahf
fmull
jbe
fadds
inc
jg
sti
mov
pop
rol
cwtl
cmp
inc
and
cwtl
nop
push
in
mov
in
add
cmp
leave
xor
mov
js
pushf
push
pop
add
in
mov
add
fwait
rolb
jl
or
popa
add
xor
adc
xchg
testb
rolb
out
mov
mov
mov
push
insl
stc
test
pusha
clc
xchg
mov
mov
test
xchg
in
int3
jecxz
xchg
lock
xlat
pusha
mov
pop
adc
mov
xchg
or
movsl
jge
pop
xor
lock
add
lods
mov
dec
cmp
mov
test
dec
imul
push
sbb
enter
jmp
clc
fisttpl
xor
sub
xor
mov
shr
faddl
pop
jo
pusha
xchg
jmp
fadds
mov
xor
mov
add
xor
push
mull
mov
lea
mov
stc
sbb
sahf
rclb
ds
dec
inc
push
mov
pushf
dec
and
jp
inc
mov
test
dec
add
jmp
and
arpl
pop
adc
mov
aaa
xor
sub
das
les
std
mov
daa
pop
mov
push
mov
pusha
cltd
cld
and
adc
shr
dec
loop
repnz
xor
add
arpl
mov
cmp
xor
mov
jp
movsb
sub
cmpsl
and
mov
and
adc
je
mov
add
xor
cmpsb
sbb
mov
js
sbb
xlat
shrb
test
addb
or
test
cmp
std
dec
cs
lock
imul
adc
and
fs
add
xchg
in
loopne
das
mov
mov
hlt
mov
push
xor
std
and
push
cld
xchg
out
pop
sbb
mov
faddl
daa
xchg
icebp
inc
popa
out
add
mov
in
add
int3
pop
je
sub
clc
push
rolb
and
outsb
jo
pop
sbb
fnstsw
or
push
xor
mov
mov
mov
push
inc
in
ljmp
push
mov
cmc
enter
das
nop
adc
je
pop
arpl
or
xor
inc
mov
pusha
lods
and
add
xchg
or
lods
sub
xchg
fstps
sub
lock
pusha
add
sub
cs
cmp
add
outsl
inc
and
add
mov
cmpsl
add
xor
xor
sbb
or
in
rorb
jge
jnp
dec
cs
inc
xchg
ljmp
adc
lret
lock
rcrl
push
mov
push
cmp
sub
lods
stos
int3
xchg
pop
aas
xor
add
icebp
jg
cmp
ret
xor
lock
addl
adcb
jb
repnz
pop
repz
adc
or
and
das
add
jno
or
jb
mov
cmpsb
and
iret
lock
mov
repnz
sub
movsl
jle
pop
cmp
cmp
fldcw
adc
add
push
in
inc
push
call
stos
and
mov
add
jecxz
aas
pop
js
daa
mov
push
idiv
adc
fidivrs
subb
pop
or
inc
mov
cld
xor
xchg
or
push
sub
andb
or
sbb
das
fsubs
fistpll
add
xor
loopne
add
jl
or
xor
sbb
fdivrs
add
pop
jae
add
test
xor
int
cmp
pop
in
inc
pop
inc
add
loop
mov
add
adc
xchg
rcrl
fistl
jo
jecxz
sub
xor
lock
and
mov
xchg
add
push
sbbb
scas
add
popa
mov
popf
xor
dec
loope
push
sbb
pusha
adc
jle
add
int3
pop
inc
inc
loopne
pop
mov
les
js
clc
in
xor
dec
and
in
into
cs
insb
xchg
cmp
outsb
or
mov
add
pop
fcoml
add
lods
fistl
mov
leave
xchg
xchg
js
sti
data16
fidivl
out
mov
stos
rcr
cwtl
lds
jno
inc
rol
jle
lock
inc
xchg
out
test
mov
insb
add
mov
test
fildll
int3
add
cmp
xchg
je
sub
aaa
pop
je
gs
sbb
hlt
nop
or
in
aaa
inc
mov
movb
imul
fnstenv
imul
clc
adc
adc
int3
int
enter
mov
adc
pop
mov
cmpsl
std
sbb
jo
mov
dec
fildl
adc
andl
sub
mov
xchg
nop
insb
sub
jae
inc
jl
out
adc
call
popf
rol
adc
mov
lods
add
dec
mov
insl
mov
gs
shrl
pcmpeqw
add
and
sarl
loopne
dec
xor
xor
push
faddl
gs
adc
mov
pop
sbb
enter
add
lahf
push
fcmovb
jne
jecxz
sub
ret
sbb
test
stc
mov
cmp
popf
cs
or
sbb
or
pop
jg
cmp
shlw
add
test
add
xchg
dec
pop
roll
or
std
cltd
mov
inc
shll
mov
inc
mov
loopne
adc
xor
fstps
dec
lods
das
dec
mov
jl
add
and
into
add
sub
stos
ljmp
das
inc
lock
cmp
push
jecxz
imul
sub
inc
lcall
mov
imul
sub
mov
rcrb
fmul
add
jmp
pop
mov
xchg
mov
jecxz
inc
adc
pop
or
mov
jbe
sbb
push
inc
test
or
xor
mov
test
push
mov
cmpsl
inc
xchg
sarb
enter
xor
movsb
or
adc
push
stos
addb
mov
add
in
mov
mov
dec
xchg
dec
inc
mov
insl
push
mov
ret
push
int
test
test
and
xchg
inc
push
jnp
js
daa
pop
ja
fisubrl
and
ficoms
out
flds
sar
push
imul
test
xchg
mov
outsb
test
sarb
outsb
jne
dec
ljmp
push
stos
sub
pop
sub
adc
inc
rcr
pop
jo
sbbl
cmpsb
adc
or
sbb
out
jecxz
or
jmp
insl
mov
and
add
adc
ljmp
or
sbb
sub
or
push
sbb
adc
adc
dec
sbb
or
mov
inc
mov
sbb
and
bound
fcoml
adc
ja
lods
out
sbb
std
jmp
popf
or
arpl
sbb
mov
or
mov
push
add
pop
add
repz
and
sbb
and
cmp
or
daa
cmpsl
or
sbb
pop
rcl
xor
in
leave
test
lea
cmc
mov
mov
ret
dec
loope
dec
les
or
adc
push
in
and
xor
data16
mov
inc
sub
inc
inc
xlat
and
and
add
inc
or
icebp
nop
arpl
sub
sub
sbb
or
cmpb
adcb
adc
or
mov
mov
mov
cmp
add
xchg
pop
incl
imul
sbb
jecxz
adc
addb
push
negb
faddp
xchg
dec
adc
add
adc
push
or
xchg
lret
jno
push
add
mov
xor
xor
cmp
fmull
sub
lea
jnp
cld
xchg
push
sar
add
and
les
and
and
sbb
mov
or
sbb
movsb
mov
repz
sbb
sbb
pop
adc
inc
mov
sub
and
dec
rol
shrl
dec
mov
inc
enter
xor
lret
or
adc
mov
add
adc
or
ret
sbb
test
mov
stos
jno
repz
or
lods
mov
nop
pop
and
add
shrb
pop
lret
imul
push
adc
add
and
dec
leave
push
and
nop
cwtl
xor
inc
loope
sbb
inc
and
inc
or
mov
xchg
push
out
push
les
push
add
dec
sbb
nop
jmp
push
add
xor
or
test
sub
adc
pushf
popf
repnz
pop
jle
jno
mov
filds
jo
dec
mov
or
mov
and
push
pop
dec
push
mov
xchg
rclb
rorl
enter
jb
je
add
dec
movl
aaa
cwtl
sub
mov
test
pusha
aam
jmp
push
add
test
add
jp
ret
add
rcr
add
stc
pop
mov
and
or
pop
pushf
aam
cmp
cmpsl
push
xchg
lods
iret
pusha
cmp
ljmp
push
jo
cld
add
add
lods
inc
into
push
adc
dec
cmpsl
shl
in
xchg
andb
or
enter
clc
aam
cld
rol
add
pop
mov
pop
jg
shlw
jae
dec
aam
in
add
testl
add
push
arpl
xor
pop
jns
add
imulb
int3
mov
sub
nop
mov
bound
jnp
fcoms
shl
mov
inc
or
mov
jmp
cmc
pop
cwtl
adc
sub
cmc
xchg
add
pop
dec
pop
or
and
subl
aam
inc
mov
aaa
sub
mov
adc
inc
xor
in
jne
push
jb
add
xchg
add
dec
divl
sub
push
inc
jns
test
bound
pop
adc
stos
fnstsw
loopne
repnz
add
enter
std
push
push
mov
sub
add
sbb
cmc
stos
mov
inc
add
mov
ficomps
pop
and
add
cmp
and
js
sbb
mov
jo
fisttps
lock
imul
cmp
sldt
repz
hlt
xchg
xor
and
repnz
lret
pop
movsl
and
in
iret
dec
push
insb
adc
and
mov
sub
xchg
inc
adc
push
push
jno
pusha
pusha
cmpsl
mov
cwtl
or
jmp
cmp
cli
push
nop
adc
call
ror
xor
dec
ljmp
jmp
xor
jo
loop
mov
push
add
xchg
arpl
xor
push
int3
push
daa
imul
loope
nop
nop
cmp
popa
int3
aam
mov
outsb
push
pop
dec
pop
mov
dec
dec
or
in
loop
rcr
xchg
cltd
dec
add
and
idivl
lret
je
int3
enter
inc
sbb
paddw
dec
dec
jo
in
dec
aam
clc
cmp
mov
push
inc
test
inc
add
test
int
inc
clc
adc
push
jle
jno
sub
fildl
add
mov
loope
shr
add
push
push
lock
sub
fwait
leave
jae
imulb
nop
dec
xchg
add
jmp
pop
add
push
jo
or
pop
jl
faddl
mov
dec
aam
add
repz
xchg
addr16
in
hlt
jmp
add
inc
mov
dec
clc
loopne
orb
ror
arpl
mov
cwtl
or
dec
sahf
stos
aaa
in
sbb
test
xchg
or
add
inc
push
mov
cmp
lcall
pop
insl
imul
add
jno
adc
sub
xchg
loope
inc
orb
cmc
adc
dec
pushf
add
bound
arpl
and
sarl
dec
add
or
xchg
lea
and
mulb
out
enter
lcall
push
add
jo
cld
les
scas
cmp
fwait
add
or
adc
push
push
bound
and
jae
mov
fiaddl
add
jmp
icebp
pop
cwtl
inc
xchg
inc
and
mov
fcomps
or
and
outsb
add
push
mov
sbb
adc
xchg
push
jecxz
shll
and
ljmp
lret
mov
lods
movsl
jecxz
icebp
mov
in
xchg
sub
xchg
sub
sub
inc
mov
add
adc
mov
dec
jno
movsb
or
mov
fbld
push
pop
mov
fisttpl
sub
jge
mov
shrl
jo
and
loopne
cs
adc
hlt
inc
andb
and
sub
or
add
sbb
cs
sub
popa
cmpsb
mov
scas
ja
lcall
sub
imull
jmp
and
jg
flds
xchg
enter
and
imull
jb
or
test
xchg
sub
cmc
jnp
shll
sti
and
or
fwait
add
dec
mov
stos
cs
inc
cmp
push
scas
jo
or
pop
outsl
add
push
inc
or
push
xor
add
mov
jae
mov
imul
or
fstps
mulb
hlt
lods
add
les
jg
lock
mov
mov
lds
mov
sub
ret
addb
xchg
pop
adc
dec
or
lock
dec
mov
push
int3
fcoms
test
test
or
adc
adc
adc
inc
rorb
ror
sub
hlt
xchg
add
pop
popa
and
in
cmpb
or
sbb
inc
add
pop
out
leave
ljmp
sbb
les
loopne
adc
scas
and
inc
xor
mov
fisttps
add
jo
push
push
fidivl
rcrl
pop
loope
data16
stc
mov
mov
rorl
jae
f2xm1
and
jl
inc
incb
mov
jl
movsl
scas
xchg
xor
cmp
fadds
xlat
fcmovbe
pop
cmp
inc
push
test
outsl
mov
dec
cli
test
or
xor
xor
call
sub
outsb
inc
add
cmp
push
imulb
loopne
sbbl
cmp
nop
cmp
test
pop
mov
dec
push
push
insb
adc
clc
rcll
cmp
in
je
test
push
ret
inc
arpl
mov
xor
jge
out
push
add
popf
rolb
push
in
test
in
aas
cmp
mov
and
cwtl
pusha
loopne
test
shlb
insb
in
xchg
add
push
mov
enter
or
or
lock
stc
and
push
sub
test
push
xchg
aam
bound
ret
rcll
cmp
loopne
xchg
loop
faddl
cmp
jle
nop
jo
aas
pop
mov
jnp
add
movsl
cwtl
xchg
ss
adc
mov
daa
and
paddusb
xor
sub
inc
test
push
and
out
or
adc
in
mov
xor
xchg
xchg
int3
xchg
sub
adc
loopne,pt
fs
lods
mov
sahf
dec
sbb
or
xor
mov
add
or
cmp
arpl
je
sarb
insb
dec
or
data16
and
fcoms
add
mov
arpl
inc
pop
shrl
testb
sub
mov
jge
or
inc
inc
mov
loopne
hlt
push
dec
mov
add
lock
mov
fsubs
or
fs
out
call
mov
pop
adc
cmp
inc
call
or
mov
mul
insb
aad
fistpl
adc
sahf
fs
add
xchg
jmp
ja
and
loope
lods
lea
les
push
xor
lret
mov
popa
push
test
lods
sbb
call
adc
pop
lods
sub
in
jb
dec
inc
push
inc
xor
add
fucom
bnd
enter
and
arpl
dec
push
adc
dec
and
xor
cld
inc
orl
mov
movb
cmp
aas
sbb
subb
adc
mov
js
iret
dec
dec
or
loopne
add
dec
lcall
aaa
xchg
xchg
es
push
gs
loop
inc
idiv
xor
cmp
daa
sub
sub
sub
aad
cmp
push
loopne
or
insb
cmp
push
stos
out
test
pusha
dec
or
popa
add
and
subb
in
test
aaa
jp
push
mov
into
adc
cmpl
sbb
cmp
mov
rcrb
roll
xchg
orb
xchg
mov
insl
loopne
insb
stos
cmp
jmp
sarb
pmaddwd
inc
xchg
mov
or
lods
xchg
adc
push
addb
mov
dec
in
add
cmp
and
test
shrl
notb
cmp
mov
sub
pop
xchg
mov
sub
mull
rcrl
push
outsb
sub
add
inc
jmp
stos
push
dec
or
xchg
rorb
orl
push
or
in
sbb
arpl
inc
andb
je
jnp
sar
add
xlat
push
loop
pusha
nop
lds
jbe
fistpll
and
xchg
or
imul
inc
sub
repz
mov
dec
mov
insl
inc
sub
adc
inc
add
pop
hlt
sbb
fxch
xchg
pusha
jle
cmp
fsubrs
jb
jmp
testl
adc
jo
mov
sub
adc
xor
jnp
mov
jae
or
sbb
in
pop
shrb
lods
imulb
je
xor
and
sub
test
xchg
cld
imul
add
les
or
lock
adc
dec
jne
enter
sub
add
jmp
mov
add
fistps
pop
jecxz
xlat
push
clc
jo
lds
scas
pop
nop
fcomps
fstp
add
int
or
sub
mov
lock
xchg
test
add
add
mov
jge
pop
jno
xchg
cwtl
cwtl
int3
dec
push
push
flds
nop
push
xor
sub
out
js
cmpsl
les
andb
adc
imull
add
inc
loope
mov
out
aas
int
out
cmp
in
mov
lea
add
mov
test
out
mov
mov
sti
pop
stos
in
pop
rcr
add
push
inc
add
sub
dec
test
shlb
dec
push
divl
jl
scas
add
call
mov
cmc
add
add
adc
xor
pop
push
xchg
xchg
adc
adc
repnz
fmull
imul
addr16
adc
jae
sub
and
imul
mov
cmp
adcb
leave
test
push
lock
testb
rcll
sarb
mov
stos
loopne
sbb
repnz
dec
pop
ljmp
inc
or
lahf
scas
repz
mov
lods
loopne
add
mov
add
lea
push
add
in
xchg
hlt
xchg
pop
add
xor
add
xlat
int
xor
jae
sub
sub
in
xchg
push
mov
inc
mov
outsb
repz
and
jne
or
sbb
jbe
test
xchg
sbbl
and
mov
pusha
mov
cmp
or
mov
fcmovbe
rcll
push
and
dec
aam
pop
incb
cmp
fmull
add
cmpsl
push
and
adc
pop
add
push
xor
in
add
lea
mov
jo
xchg
xor
jmp
mov
setns
jge
nop
add
test
or
mov
insb
push
mov
shlb
mov
add
mov
mov
fs
push
fildll
insb
adc
hlt
jmp
sbb
cs
scas
nop
sub
push
mov
and
push
xchg
movsl
nop
add
dec
out
sub
mov
push
cwtl
mov
dec
movsl
fildll
mov
cwtl
dec
push
popf
andb
repnz
pop
cs
popa
dec
ret
jl
or
enter
insl
dec
out
sub
inc
pop
rclb
and
xor
xchg
adc
daa
int3
mov
fdiv
xor
aas
outsb
pop
jo
ja
or
adc
jmp
dec
mov
push
rol
int3
je
rol
lret
jl
and
push
fmuls
and
insb
push
les
lods
adc
jle
jle
out
add
mov
pushl
popf
cmp
test
and
add
in
and
fsts
add
in
xchg
mov
loopne
push
fs
xchg
in
mov
aad
jns
mov
std
dec
push
and
clc
inc
das
lret
fsubrl
adc
mov
mov
xor
shrl
outsl
or
and
shrl
xchg
les
cmp
stos
mov
dec
add
sbb
hlt
sub
roll
xchg
leave
add
lcall
sub
mov
test
add
shl
in
xor
adc
dec
cmpsl
mov
roll
jo
xor
hlt
cwtl
sbb
and
test
add
add
insl
fstpt
dec
xor
adc
outsb
push
imul
add
mov
or
icebp
call
test
pop
jle
test
adc
dec
fsubrs
aam
add
mov
mov
cld
and
int3
inc
in
pusha
sbb
das
add
outsb
pop
push
call
call
and
pop
jmp
xor
mov
aad
int3
adc
xor
test
push
in
fcomps
aam
adc
add
xor
hlt
in
add
pop
sbb
dec
pusha
or
pushl
nop
add
call
fwait
out
adc
push
rolb
out
add
test
rclb
adc
or
sub
test
dec
inc
push
and
mov
push
orb
fldt
in
in
jle
add
loop
inc
nop
enter
jne
addb
pop
inc
jg
imul
sub
mov
leave
xor
dec
das
cmpsl
adc
jle
ljmp
or
and
or
and
pop
call
out
lods
xchg
enter
sahf
orb
and
js
cmp
call
and
mov
rcl
int3
stc
in
sub
xchg
add
sahf
mov
mov
pop
rol
loop
pop
cmp
pop
push
pop
inc
das
cmp
sbb
repnz
add
cmp
add
js
lahf
cmpb
jle
repnz
add
incl
sbb
iret
or
lahf
add
call
rorl
or
loopne
jmp
sbb
push
shrl
jmp
push
repnz
mov
fisttpll
pop
das
add
xchg
or
cmp
or
pushf
mov
or
jo
cwtl
cmp
popa
dec
enter
bnd
push
mov
inc
jnp
sub
push
mov
xchg
in
popa
loope
or
das
gs
pop
dec
addb
sbb
in
adc
push
xorl
out
leave
mov
fstpl
mov
arpl
mov
jno
int3
pop
repnz
dec
xchg
sub
out
dec
movb
xchg
pop
or
rorl
dec
out
scas
mov
mov
inc
inc
push
flds
jl
xchg
clts
add
jge
sub
pushf
movsb
jecxz
jl
in
fdivrp
and
sub
loopne
mov
js
push
rcr
push
loopne
add
pop
icebp
call
fdivr
fstpt
rorb
fwait
lock
sub
add
add
xorl
add
lea
test
stos
push
add
inc
or
jp
push
jb
fidivrs
push
imul
mov
mov
mov
fcomp
pop
add
movsl
adcl
add
adc
inc
int
cmp
adc
adc
out
mov
cmp
fsts
sub
iret
dec
mov
jp
fiaddl
jae
add
push
int
add
data16
push
aas
xlat
or
push
loop
adcl
pusha
dec
js
inc
rcrb
adc
insb
jmp
jb
lds
add
mov
sbb
push
js
push
out
adc
sub
cmp
add
aad
sbb
jo
inc
or
mov
std
repz
sub
mov
pushf
sti
jne
in
mov
fwait
sbb
imul
lea
pop
pushf
push
or
xchg
data16
add
sbb
dec
pop
lock
pushf
xchg
clc
pop
pop
jnp
push
jo
add
sbbl
hlt
lods
or
sub
mov
pop
loopne
xor
jbe
repz
and
xchg
or
pop
sbb
mov
in
xchg
push
xchg
int
repnz
and
sbb
incb
fildl
pop
gs
xor
sbb
mov
fucomp
inc
xchg
test
mov
fldenv
or
jo
in
and
adc
xchg
dec
out
mov
movsb
adc
add
mov
adc
and
clc
inc
or
int
dec
xor
cs
or
sbb
sahf
add
dec
les
xchg
sub
add
das
adc
push
sub
and
imul
lods
enter
js
push
adc
insb
add
cmpsl
mov
xchg
inc
add
cmp
jbe
inc
push
outsb
ljmp
mov
cmp
sub
and
aad
data16
pushf
adc
add
mov
lret
or
clc
and
jmp
dec
cwtl
cmp
dec
les
shll
mov
xchg
and
mov
movsl
faddl
jp
pop
in
lock
add
loop
jl
pop
or
subl
ljmp
xlat
repz
lods
mov
test
dec
mov
int3
xchg
ret
enter
mov
add
mov
mov
scas
test
push
mov
nop
mov
add
mov
add
mov
add
push
in
jo
mov
jl
fbstp
pop
mov
mov
jp
mov
xchg
push
pop
dec
rcrb
xchg
and
scas
lods
xor
out
pusha
push
adc
add
rcr
out
jmp
jp
loopne
shrb
or
sbb
test
mov
pusha
push
cmp
cltd
in
mov
fcomps
pop
mov
sbb
sub
lahf
and
leave
cmpb
push
push
pusha
xor
test
leave
mov
insl
jno
add
out
mov
xor
test
cld
repz
sbb
inc
sub
test
mov
rorb
fistpl
popf
rorl
inc
sbb
subl
jge
jnp
lock
dec
push
mov
cmpsl
add
dec
add
push
test
sub
aam
cld
xchg
dec
rcrb
std
je
cmp
into
pop
pushf
lods
add
xchg
ss
or
pop
push
sub
xchg
cmp
imul
xor
pop
mov
pop
cmp
gs
jl
sub
cmp
outsl
pop
pop
in
pusha
mov
loopne
add
pusha
int
xlat
lods
je
jp
pop
mov
mov
ret
mov
push
and
test
es
and
push
fwait
or
out
je
adc
mov
dec
mov
add
cmp
aam
ds
or
adc
lcall
arpl
mov
sub
outsb
sub
adc
cmc
lea
dec
mov
fdiv
sub
push
icebp
jo
mov
fmuls
lea
das
inc
mov
test
sub
mov
mov
int3
mov
sbb
jge
leave
mov
inc
fstpt
hlt
and
cli
fldenv
stos
test
inc
test
dec
in
gs
shr
inc
sbb
jae
jp
fstl
testb
add
pop
hlt
lods
call
jle
je
or
rcr
jecxz
dec
arpl
mov
mov
push
pop
push
and
clc
push
ret
je
clc
in
cmc
imulb
or
faddl
subl
imul
add
mov
sub
lcall
and
sbb
lods
outsb
stc
lock
test
push
cmovge
cld
scas
sbb
lock
je
shrb
push
mov
mov
bound
loopne
inc
mov
jae
add
testl
bound
sub
add
sub
or
loope
adc
mov
add
ret
pop
or
xor
push
sub
jle
or
js
cmp
in
push
jle
clc
add
repz
sahf
subl
call
mov
push
push
push
add
rcl
subl
clc
or
sbb
mov
xchg
pusha
lock
pop
loopne
aam
adc
cmp
inc
gs
push
or
lahf
scas
xchg
imul
in
out
call
dec
dec
loopne
orb
rep
lahf
cltd
hlt
adc
xor
sbb
nop
xchg
in
cmp
add
fdivrp
push
jp
das
outsb
das
mov
sub
loopne
dec
in
jle
or
daa
adcb
xchg
inc
mov
lcall
stos
aas
jle
sbb
inc
adc
jne
movsl
dec
cmp
enter
cld
and
inc
adc
lock
test
aad
sub
insb
mov
add
add
les
mov
adc
add
insb
cmpsb
push
xchg
xchg
in
adc
ss
mov
fisttps
sub
gs
lock
call
loope
jp
mov
clc
imul
cmp
sub
lods
cwtl
mov
lods
movsl
shl
or
adc
es
aam
pop
jp
xor
or
inc
sub
js
xchg
push
sbb
jae
aas
imul
cmpsl
andb
mov
mov
test
filds
and
and
icebp
mov
adc
add
in
xchg
dec
mov
or
pop
jecxz
gs
rcl
or
test
shrl
and
pop
imulb
pop
test
dec
mov
dec
xchg
call
das
add
mov
push
or
or
scas
rorb
clc
add
jo
int
in
mov
and
lods
inc
xlat
inc
lahf
nop
shl
js
add
outsb
dec
add
pop
loope
cli
inc
imul
adc
jmp
repz
dec
mov
test
sub
or
in
jmp
insb
das
xor
ds
xor
rorl
add
and
test
adc
dec
imul
shlb
cltd
cmp
xchg
or
test
add
mov
sub
addb
addr16
inc
sub
xor
inc
fldenv
dec
push
sbbb
lcall
imul
pusha
shlb
fucom
add
test
mov
add
ret
imulb
into
pusha
cmc
lods
ljmp
mov
nop
lock
aam
nop
nop
push
add
add
pop
sub
fwait
sub
icebp
pop
lods
cmp
test
mov
push
add
mov
hlt
and
or
push
dec
fwait
ja
push
mov
mov
testb
jmp
jae
add
ds
rorb
mov
fwait
subl
push
scas
add
fiaddl
mov
xchg
es
jmp
ror
dec
nop
mov
cs
xchg
xor
into
add
jge
loopne
test
cmp
jl
movsb
mov
mov
mov
xchg
orl
adc
mov
add
outsb
arpl
and
fsts
mov
xchg
pop
movsl
rorb
js
or
xor
popf
xchg
fsubs
pop
test
fcomps
dec
cli
gs
push
push
add
adcl
or
add
cmp
add
pop
enter
imul
add
shrl
sub
sarl
rcr
jns
nop
nop
nop
sbb
out
mov
push
fwait
pop
inc
mov
xorb
jns
add
add
stos
stos
add
jnp
imul
aas
pop
test
mov
cwtl
pop
fdivrs
mov
or
pop
rorb
jo
je
cwtl
jne
sub
add
sbb
mov
mov
fldl
xor
arpl
dec
mov
add
out
add
xchg
inc
add
inc
sub
orl
mov
dec
mov
or
enter
jl
mov
rorb
rorb
rclb
or
lret
mov
adc
and
dec
clc
lret
insb
imul
mov
mov
ret
xchg
cwtl
jmp
pop
insl
imul
cli
or
sub
or
push
lods
sbb
mov
pop
ja,pn
push
scas
aad
loopne
lods
mov
testb
xchg
mov
mov
or
jmp
and
loop
inc
pushf
testb
fwait
dec
add
je
data16
pusha
adc
cmp
mov
bswap
jmp
int3
pop
jbe
dec
xchg
dec
add
xchg
pop
push
xor
jae
jmp
inc
cmpsl
fistl
jnp
cmp
lea
stc
clc
pushf
sub
aam
faddl
jl
jne
add
adc
mov
ror
jbe
test
jmp
fildl
in
sub
xchg
mov
cwtl
dec
pop
out
js
adc
jecxz
mov
and
subb
mov
add
icebp
or
inc
cmc
sbb
sbb
xlat
jno
mov
xchg
xor
pop
push
subb
or
cltd
ds
pop
push
in
rorb
mov
call
repnz
ret
out
gs
add
mov
lea
add
adc
andl
js
data16
pushf
add
hlt
jnp
mov
dec
pop
out
pop
cltd
lds
xlat
enter
je
js
lret
mov
cmp
cmp
sub
notb
jmp
sbb
cld
add
call
cs
sbb
out
jmp
xchg
shll
push
in
mov
clc
test
dec
add
addb
add
mov
xchg
mov
sub
in
add
int3
mov
dec
fcoml
adc
in
enter
insb
aam
jbe
cmpsl
push
nop
inc
or
jg
inc
clc
test
xor
into
sub
shll
loop
imul
loopne
cmp
inc
fucomi
or
insb
inc
adc
cmc
leave
mov
lcall
ret
adc
nop
dec
adc
test
dec
xor
int3
inc
cmp
or
mov
das
pop
dec
clc
jo
pop
fcmovb
and
fadd
pop
add
imul
and
lret
in
pop
cmc
aaa
inc
or
mov
es
pop
and
jo
sbb
adc
movsb
mov
adc
int
or
jl
stc
ret
push
xchg
mov
adc
jne
jo
lea
xchg
adc
nop
pushf
jo
fcoml
idivl
lahf
fiadds
insb
jae
call
das
cwtl
mov
cli
fldt
test
add
insl
dec
fimuls
mov
and
dec
jnp
add
jnp
or
in
les
imul
adcl
sub
movsl
aaa
addb
jg
xchg
cmovg
mov
dec
add
scas
ret
add
pxor
jl
subb
repz
xchg
enter
ret
punpcklbw
mov
push
stc
xchg
adc
rcrb
es
out
xchg
xor
mov
push
sub
cmp
jecxz
sub
sbb
mov
sbb
subl
push
jge
xlat
scas
xchg
inc
loope
push
mov
icebp
sub
dec
add
mov
mov
add
xlat
lods
dec
ja
ret
call
pop
sub
sbb
lds
sub
dec
cmpsb
rolb
cltd
dec
xchg
xor
dec
repz
rcrb
push
pushf
ss
xor
xor
js
push
call
out
push
sub
outsl
pop
call
inc
fcoms
mov
push
cmp
fbld
add
stc
imul
xchg
enter
xchg
mov
and
add
pop
leave
mov
nop
nop
xchg
lea
adc
mov
in
push
loopne
dec
push
fldl
sbb
or
mov
outsl
pushf
jae
sbb
push
inc
sbb
add
xchg
enter
inc
outsl
insb
cli
cmp
mov
js
add
jae
shl
add
mov
adc
pop
test
sub
push
mov
inc
test
sub
xlat
sub
push
notl
or
stc
xorb
aaa
cmp
pop
xlat
dec
jge
sbb
inc
add
mov
xor
and
add
rcrl
out
sbb
dec
sahf
add
add
repz
shll
xor
incl
aad
or
addb
xor
stc
and
adc
jl
cwtl
dec
mov
push
pop
lcall
jo
gs
cld
test
add
outsl
daa
lock
aas
mov
inc
inc
movsl
and
movb
inc
mov
jg
adc
xchg
inc
bswap
incl
or
pop
mov
scas
jmp
push
in
mov
ret
orb
mov
adc
loopne
in
ja
sub
enter
add
imulb
lds
out
ss
push
test
add
push
sbb
dec
or
pop
je
xor
add
mov
mov
pop
xor
loope
clc
sbbb
lret
xchg
not
fisttpll
mov
xor
iret
ret
mov
jmp
jp
jno
jmp
push
mov
add
pop
repz
mov
andl
pop
adc
xor
or
loop
les
sbb
jbe
push
mov
lcall
popa
mov
sarl
sub
jmp
push
sahf
xchg
ljmp
popa
cwtl
sub
data16
push
push
mov
jmp
clc
out
outsl
pusha
int
mov
sub
pop
mov
mov
dec
popa
lahf
fwait
loop
ret
gs
pop
jmp
pop
shll
lcall
mov
push
mov
mov
cld
out
pop
dec
jmp
xor
pop
inc
add
lea
add
push
mov
add
xor
pop
sbb
pop
pop
mov
leave
sbb
mov
push
inc
clc
cmc
pop
and
sbb
andnps
out
fsubrl
jg
push
in
mov
add
and
lods
sbb
jge
push
pop
inc
mov
or
push
inc
add
pop
sub
and
aas
addl
add
or
adc
xor
loope
adc
mov
sbb
leave
sbb
pop
sbb
ret
or
push
mov
jmp
add
ss
push
inc
or
test
popf
pop
adc
pushf
cld
xor
fdivr
push
add
and
mov
add
int3
pop
mov
ror
faddp
out
mov
lods
xchg
jmp
and
mov
imul
sbb
xor
add
mov
and
mov
pop
sub
inc
jg
or
pop
adc
shrb
call
int3
test
and
xchg
cmp
sbb
pop
add
push
mov
leave
push
shr
addl
push
in
inc
test
out
pop
fidivs
adc
cmpsl
out
out
xor
out
adc
fwait
arpl
xlat
sub
cwtl
cmp
sub
cmp
inc
movsb
or
adc
pop
jmp
cwtl
cmp
xor
pop
popa
xchg
aad
bound
push
pop
dec
push
pop
nop
sub
jge
movsb
jno
jmp
mov
push
fwait
shrl
pop
cltd
adc
jle
in
push
add
repnz
imul
pop
lea
test
mov
jmp
flds
pop
push
loope
jo
add
pop
push
mov
sub
mov
inc
in
push
add
repnz
inc
push
push
dec
jmp
pop
imulb
ljmp
mov
sub
repz
sub
push
mov
push
inc
mov
adc
rcrl
mov
or
sub
xor
in
push
or
push
mov
lcall
xorl
xchg
pop
mov
aam
adc
xor
bswap
fsubrp
loope
xor
idivb
add
and
mov
aam
jl
mov
jno
mov
adc
mov
fistpl
rolb
aam
push
push
cmpsb
mov
jmp
pop
dec
jbe
add
jno
or
ret
or
sub
pushf
mov
add
or
gs
inc
aad
or
adc
inc
rcrl
jbe
addps
pop
mov
jmp
adc
cld
stos
outsl
pop
mov
or
pusha
fists
sub
add
add
stc
mov
in
or
xor
xchg
adc
in
mov
adc
push
mov
fstps
aam
dec
stos
and
mov
xchg
jg
pop
test
not
or
push
loop
inc
addl
adc
cmp
add
adc
jg
add
pop
sub
pop
fstps
arpl
pop
pop
jmp
test
aam
sub
in
fbld
mov
mov
or
scas
bound
mov
and
shll
fisubl
xor
or
xor
push
cs
pop
faddp
orl
inc
xor
push
xor
jnp
push
cmp
rolb
sub
aas
sub
pop
shr
xor
mov
pop
and
jge
adc
nop
xor
xchg
push
jmp
mov
pop
cs
imul
inc
or
xchg
gs
shll
push
jmp
in
test
or
pop
add
add
add
add
dec
cmpb
ja
sbb
ljmp
pop
repnz
imul
xor
sbb
push
sbb
pop
sub
call
add
out
dec
sub
add
insl
sub
int
sbb
psubsw
addr16
push
inc
jno
and
add
inc
jmp
fcoms
dec
imul
sbb
dec
sbb
mov
xor
pop
clc
dec
sub
inc
pop
mov
inc
xchg
and
in
dec
cwtl
pushf
incl
jmp
orb
std
xchg
fsubrs
mov
mov
nop
rcrb
call
push
add
cmp
push
add
or
pop
dec
ljmp
pop
or
dec
cmp
mov
mov
outsb
push
jle
pop
or
mov
jmp
mov
mov
or
adc
sub
lods
mov
jmp
loope
pop
and
add
xor
pop
inc
out
es
pop
arpl
mov
inc
xor
xor
in
dec
xor
adc
inc
and
push
jmp
or
xlat
repz
insl
imul
jmp
addb
add
xor
fwait
and
pop
adc
push
cmp
lret
ljmp
dec
xor
lahf
out
repnz
push
mov
in
mov
loope
lea
adc
and
dec
arpl
push
mov
pop
inc
adcl
add
pop
inc
sub
mov
sub
push
jmp
mov
cmp
push
clc
scas
es
and
lea
imul
hlt
inc
xor
pop
dec
lock
enter
shl
push
adc
adc
roll
shr
push
in
jg
js
lock
add
test
push
pop
xchg
call
mov
push
insl
mov
or
lcall
sub
sbb
rcll
jo
push
in
out
cltd
mov
loope
sub
outsb
repnz
adc
leave
push
loope
adc
mulb
push
test
push
push
push
fndisi(8087
or
cmp
or
out
clc
dec
cmp
call
xor
cmpsl
inc
loope
dec
sbb
jns
das
in
cmp
lret
ffreep
inc
pop
and
iret
lods
dec
arpl
xchg
push
es
cmp
cmp
filds
sub
mov
mov
cltd
dec
add
xor
out
lahf
mov
cmp
mov
and
out
or
push
jmp
jl
pusha
lods
pop
sbb
inc
mov
mov
ret
push
sbb
or
jmp
adc
and
popa
adc
daa
cld
test
aad
mov
sub
ljmp
jmp
dec
or
sbb
sbb
cmp
pop
clc
pop
int
roll
sahf
jmp
sub
pushf
rorl
sub
xor
movl
dec
es
fistpll
jbe
push
mov
sti
insb
sub
or
mov
or
or
push
test
jmp
push
inc
and
test
fnstenv
cmp
movsl
orb
out
xchg
mov
xchg
jmp
lret
mov
sahf
pop
dec
ud2
cmp
add
insl
mov
push
ret
call
aam
mov
dec
loopne
xchg
sub
ficomps
addl
pop
pop
test
loope
andl
aas
not
test
push
jnp
push
mov
mov
jne
and
daa
inc
aas
jb
push
add
cmp
js
rolb
push
inc
pop
adc
cli
sub
bound
pop
cmpsl
imul
mov
incl
push
jno
add
stc
pop
mov
inc
push
sbb
dec
sub
push
pop
jmp
push
test
daa
adc
pop
or
mov
in
push
push
xchg
mov
sahf
jbe
mov
or
inc
inc
add
cmpsb
xchg
addr16
inc
es
lea
or
sbb
cwtl
or
mov
sub
ljmp
clc
pusha
notb
mov
inc
divl
leave
fs
sub
cmp
xor
sub
ja
dec
xor
insl
add
rolb
cmp
add
movsb
dec
cld
jl
pop
mov
sti
inc
adc
and
mov
jmp
jnp
pop
int
insb
sti
movsb
push
push
aam
in
fcmovne
popa
ret
aaa
lahf
push
inc
ficompl
imul
pop
cmp
pop
pop
adc
movsl
dec
xchg
xor
or
inc
cmp
dec
pop
mov
sub
jmp
add
into
push
daa
inc
pop
and
cmp
pusha
insl
or
lret
movsb
in
jb
jmp
sbb
aaa
dec
mov
out
push
pop
pop
test
xchg
xor
shr
add
mov
dec
lahf
add
xor
inc
les
gs
sbb
add
mov
lods
add
in
repnz
sub
jmp
jle
sti
lods
mov
lret
or
or
add
in
sbb
fbstp
int
pop
dec
es
pop
lea
stos
out
push
fnstsw
enter
or
pop
pop
push
xlat
shrb
aad
mov
imul
fistpl
dec
adc
push
aam
push
adc
stc
sub
movsl
sub
jmp
xchg
push
mov
mov
push
fildll
mov
cli
js
pop
pop
imul
add
jnp
dec
mov
pop
sarl
jle
loope
shlb
cmpsb
push
out
pop
inc
add
sub
fcoms
cli
andl
fidivs
pop
ljmp
pop
insb
xchg
mov
sbb
xor
push
pop
pop
fisubl
fnstsw
dec
insl
sub
repnz
adc
inc
pop
inc
xor
inc
xor
mov
pusha
jl
insl
sub
xor
or
sub
mov
xor
or
and
pop
pop
cmpl
fldl
fstpl
jo
push
jmp
mov
ds
pop
cwtl
pop
mov
sub
pop
in
sub
pop
dec
inc
add
aas
add
push
pop
repnz
mov
in
imul
push
or
aad
and
inc
xor
cmpb
loope
outsl
jmp
adc
xchg
pop
rclb
stos
sub
push
push
nop
ds
inc
jbe
int3
add
jp
pushf
pop
test
lods
addr16
xor
mov
cld
lahf
sub
sub
mov
sub
adc
inc
test
xor
push
dec
xchg
pop
les
cltd
adc
and
scas
sbb
and
xor
xor
push
push
mov
enter
sub
and
lock
mov
mov
sub
pop
jmp
and
clc
jmp
lock
inc
jne
cmp
sub
add
incb
adc
lods
rcrb
test
add
jecxz
xor
jmp
jb
push
jp
mov
lods
xchg
cmpb
push
mov
pop
or
andb
jno
in
lock
xor
jmp
dec
js
ljmp
mov
test
pop
pop
xor
pop
sub
dec
fs
stc
clc
enter
xor
adc
subl
aad
adcb
fnstsw
or
xor
lock
xchg
pop
mov
or
fs
bound
dec
add
and
xor
out
pop
add
loope
push
mov
add
fs
loop
add
pop
jae
aam
in
lret
add
mov
dec
and
push
add
movsb
in
lds
mov
into
imulb
mov
mov
and
inc
or
aas
repz
inc
sbb
cmp
push
les
sub
bound
sub
mov
mov
adc
jbe
ret
push
adc
es
jmp
not
jmp
or
rcll
adc
nop
jb
push
in
push
in
jp
cli
or
xor
adc
jge
mov
pop
mov
pop
nop
xor
mov
pop
mov
sub
rcrl
dec
rorl
test
nop
out
or
pop
xor
sub
push
sbb
jnp
roll
or
pop
lods
push
cltd
sub
sub
shrl
jg
and
add
sbb
call
and
sbbl
cmp
push
es
movsb
push
dec
jb
and
orl
sbbb
add
loop
add
xchg
sbb
sti
mov
jmp
lods
add
pop
jge
xchg
add
loop
inc
jbe
add
loope
aaa
sub
repz
pop
adc
inc
pop
push
dec
pop
jg
pop
adc
sub
push
jmp
xor
dec
sub
out
test
adc
add
test
adc
clc
mov
jp
mov
loope
int
les
pop
push
add
fcomps
hlt
dec
pusha
testl
ja
or
inc
jmp
dec
pusha
mov
fs
jmp
mov
cmp
or
push
dec
or
jmp
inc
fcompl
add
push
mov
xchg
push
push
adc
adc
mov
stc
mov
jmp
push
push
js
dec
fildl
mov
xor
and
push
and
test
cwtl
push
dec
sub
sbb
ret
aam
inc
jecxz
cs
adc
add
cmc
adc
incb
jl
shlb
into
pusha
call
aaa
neg
xor
push
clc
loope
ficomps
xchg
shrl
and
push
dec
mov
or
pop
inc
cmpb
xor
pop
push
add
xlat
xor
mov
dec
rolb
add
aam
in
adc
mov
or
cmpb
push
lock
sub
pop
nop
jne
hlt
inc
aam
imul
lret
inc
jne
jle
inc
pop
adc
fs
ret
push
sbb
inc
inc
and
jmp
mov
push
shrb
mov
xor
and
sub
insb
dec
or
jmp
dec
push
gs
jns
daa
lcall
add
shlb
lds
push
or
sarb
call
fs
add
jmp
std
out
cmp
mov
sbb
or
jmp
stos
inc
mov
push
mov
xor
enter
mov
xchg
daa
mov
or
in
rol
pop
mov
sti
sub
adc
xor
xor
dec
cmp
push
inc
mov
out
push
push
push
inc
inc
inc
push
pop
pop
outsl
daa
das
sbb
add
push
into
or
sub
imul
push
in
out
fnstcw
cmp
out
addl
clc
inc
and
hlt
jmp
sub
enter
pop
jle
repnz
adc
std
je
inc
rorl
push
clc
jmp
add
loope
jo
cmp
xchg
shl
jmp
mov
out
pop
pop
sub
lret
or
and
mov
mov
xor
and
and
push
lock
mov
add
inc
in
push
gs
cmp
in
push
or
push
xchg
jmp
cmpsb
pmuludq
mov
push
push
insl
push
jp
sbb
sti
cwtl
fcmovb
and
inc
mov
fisubs
sarl
imul
push
push
cmpl
xchg
lea
and
les
dec
pusha
and
xchg
add
ret
and
out
mov
pusha
add
lods
dec
xlat
jle
ljmp
mov
das
not
mov
add
int3
sub
rcll
push
out
test
and
fsubrp
shl
xor
push
iret
call
add
adc
push
fwait
adc
fidivrs
and
data16
mov
push
lea
ds
inc
leave
mov
aad
or
cmovno
xchg
sub
add
pop
subb
addl
inc
or
mov
dec
test
jg
dec
push
subb
mov
adc
outsb
jmp
call
or
push
add
xchg
pusha
dec
lcall
pop
or
dec
mov
inc
cmp
jmp
dec
pop
nop
insl
in
inc
or
shl
and
lret
add
fldt
push
sub
leave
fcomps
das
jnp
daa
gs
orb
cmp
xor
nop
or
incb
popf
sub
cld
and
xor
pop
pop
add
and
ficoml
push
pop
int3
xchg
jmp
lods
lds
or
and
and
ljmp
add
add
in
mov
add
and
int3
bound
push
mov
aas
or
les
sbb
sub
fistpl
leave
out
add
push
and
dec
xchg
insl
les
pop
mov
pop
xlat
int
and
cmp
sub
sbb
sbb
dec
jnp
neg
add
shl
pop
sub
gs
xchg
xchg
push
jmp
pusha
rorb
add
sbb
mov
adc
dec
imulb
mov
dec
pop
sbb
xor
rclb
sbbb
fisubrs
mov
leave
aam
sub
shl
arpl
push
adc
push
fisubrl
push
idivb
or
pop
jmp
shr
xor
dec
je
push
lret
pop
jmp
dec
add
push
and
inc
mov
pop
repnz
xchg
add
mov
or
xchg
cmp
pop
add
fldl
jmp
xor
mov
or
dec
cmp
andb
inc
jo
xor
mov
jmp
mov
mov
pop
imull
sbb
mov
add
arpl
xchg
data16
jne
dec
or
add
sub
leave
pop
das
jmp
das
push
push
mov
sub
rcrl
jmp
mov
pop
xor
ss
pop
icebp
mov
bound
or
jmp
xchg
mov
loopne
in
adc
and
and
shlb
mov
pop
testb
test
icebp
and
pop
jmp
push
pop
mov
sub
xor
adc
sub
pop
adc
mov
add
popf
adc
pop
xorb
xor
push
mov
mov
and
cltd
in
mov
loop
frstor
subb
setae
arpl
cli
jmp
cmp
push
xor
nop
or
sbb
sbb
scas
sbb
daa
cmp
sti
fsubrp
xor
ficomps
xor
aad
jns
mov
idivb
pop
repnz
inc
daa
dec
add
pop
push
jmp
mov
popf
adc
and
cmp
mov
test
decl
maxps
js
stc
aas
add
xor
mov
pop
nop
ja
cmp
adc
pop
test
adcb
pop
xor
cmp
cmpsl
loop
push
add
cmp
dec
mov
cwtl
cld
or
and
daa
xchg
sbb
pop
popa
inc
pop
and
sbb
or
sub
gs
mov
pop
shl
or
movl
aaa
dec
or
add
mov
mov
notb
add
imul
jbe
in
loope
inc
or
scas
sub
sbbl
mov
and
pop
test
xchg
mov
mov
xchg
into
icebp
inc
xor
pusha
mov
roll
mov
lcall
aam
adc
jle
imul
ljmp
sub
mov
adc
sub
lods
ds
ror
adc
push
jns
and
roll
adc
aam
add
dec
add
cwtl
imul
cmc
push
lcall
orb
sub
and
pop
mov
sti
mov
xlat
cmp
cmp
nop
cmp
push
push
and
insb
out
pusha
pop
icebp
stc
cmp
jnp
out
and
jl
mov
xchg
dec
and
lods
pusha
movsl
cmpsb
aaa
cmp
mov
xor
int
adc
sub
mov
xor
repnz
pop
aas
ss
sbb
js
add
pop
inc
pusha
pop
pop
cld
sbb
lds
mov
sbb
add
not
inc
cli
lods
dec
sarb
outsl
jmp
mov
int3
add
mov
push
mov
inc
dec
xchg
jge
sub
inc
punpckhbw
daa
sub
into
and
xchg
loop
cwtl
pop
pop
nop
dec
data16
add
call
mov
stos
aaa
add
push
push
or
daa
test
aad
insb
das
pop
pusha
inc
in
mov
xchg
dec
cmp
push
inc
xor
dec
cmp
sub
lds
push
dec
sbbb
scas
lock
adc
pop
pop
rorb
inc
mov
pop
dec
mov
hlt
lret
jge
lret
cmp
stc
jno
pop
aas
dec
out
loope
sub
cmp
sbb
add
and
xchg
sub
hlt
mov
xor
or
add
loope
jle
or
xor
or
push
int
jb
sarl
pop
jmp
or
xor
pop
neg
push
cmp
bound
and
pop
lret
sarb
ds
testb
add
or
jns
movsb
incb
add
add
icebp
push
mov
push
adcb
jmp
inc
push
push
sbb
pop
testb
arpl
popa
in
jb
mov
sbb
add
cld
mov
push
je
add
mov
mov
sbb
sbb
mov
movsl
push
pushl
popf
sysexit
jmp
push
adc
or
rcrl
dec
jge
repz
sub
pop
pusha
stc
lods
adc
xor
add
repnz
sub
sbb
mov
dec
cmp
add
lods
pop
pop
push
fadds
push
jmp
sub
out
add
rcl
and
jle
dec
or
sti
pop
sbb
orl
mov
bound
shl
jno
daa
dec
or
inc
shrb
mov
mov
mov
jle
mov
push
xchg
add
ljmp
xor
test
into
sub
out
xor
xor
xor
jmp
sbb
aad
sbbb
adc
das
inc
and
xchg
insb
xor
cmpsl
and
cld
add
cmpsb
add
push
push
mov
mov
sub
repz
rclb
shll
stos
ror
cld
fidivrl
das
subb
push
mov
pop
push
iret
xlat
dec
mov
in
aam
add
test
dec
cmp
adc
pop
std
mov
xchg
lret
sub
pop
mov
pop
pop
orb
push
dec
jnp
loopne
jecxz
sbb
add
sbb
into
pop
add
fldt
imul
es
add
push
push
xor
nopl
addr16
cmp
mov
jmp
lahf
rcl
mov
cs
jno
mov
add
fs
in
loop
xchg
sub
into
rolb
mov
sub
loopne
idiv
mov
cmp
inc
outsl
je
push
testb
xor
jp
push
loop
inc
subl
ja
cs
jecxz
inc
mov
cwtl
ljmp
xchg
enter
xor
mov
das
and
mov
setns
idivl
aas
fiaddl
test
xor
inc
and
loope
xchg
insb
xor
push
out
pop
and
push
push
mov
and
adc
lods
cltd
sub
xor
mov
movaps
bound
or
cmp
sbb
cs
pop
push
dec
test
xchg
xor
mov
adc
dec
mov
pop
cld
nop
jmp
inc
add
shrb
fnstsw
xchg
inc
pop
push
shr
add
lods
adc
stos
xchg
pop
cmp
into
or
xor
out
adcl
pop
add
pop
push
idivb
xchg
sbb
cmpsb
jne
mov
je
add
mov
xor
jl
jbe
mov
or
mov
jmp
int
push
popf
push
dec
sar
add
fsts
jmp
loopne
aad
and
mov
hlt
cmp
or
push
xor
mov
xchg
shl
add
mov
sub
ror
mov
mov
inc
dec
pop
mov
jmp
or
sub
pop
pop
dec
push
jnp
xor
mov
or
movb
pop
push
xadd
lods
lcall
ja
sbb
mov
jmp
neg
cltd
xor
imul
push
dec
jecxz
out
push
pop
mov
pop
push
jae
leave
data16
loope
pop
add
and
and
in
push
dec
pop
mov
push
jnp
xor
mov
repz
sub
or
xchg
shr
mov
movsl
push
dec
push
mov
xor
cmp
sub
insb
lret
cli
xor
cwtl
push
or
pop
adc
pop
add
pop
in
dec
mov
icebp
and
call
and
dec
jle
and
and
jmp
mov
jbe
or
or
mov
or
cmp
mov
inc
xor
xchg
adc
adc
xchg
adc
or
or
out
jmp
push
pop
mov
mov
adc
push
out
add
push
add
jns
sub
mull
inc
repz
mov
xor
xor
cwtl
add
pushf
jl
adc
inc
jmp
leave
addb
xor
dec
xchg
ficoms
sub
cmpsl
add
push
mov
xchg
pop
jb
adc
jae
test
enter
jmp
bound
add
cmp
cmp
mov
in
push
int3
loope
xor
jmp
xchg
not
cwtl
xchg
inc
mov
add
sbb
sub
adc
or
or
pop
in
inc
sbb
jge
push
dec
inc
pop
and
mov
aas
xor
sarl
xchg
pop
in
jns
mov
add
sub
mov
xorb
pop
xor
gs
in
xor
es
sub
or
test
pop
adc
loopne
add
pop
in
adc
pushf
add
loop
repnz
dec
mov
mov
pop
sub
pop
dec
push
push
aad
dec
test
hlt
mov
jno
add
jge
cmp
push
pop
mov
shl
bound
or
jmp
xchg
loopne
pop
add
push
push
ret
pop
pop
adc
test
pop
out
xor
jmp
push
mov
cltd
pop
push
inc
lcall
mov
mov
push
xchg
imul
sub
les
dec
or
fdivrs
icebp
mov
outsl
add
jns
inc
xchg
stc
dec
push
add
inc
or
xor
cmp
mov
repnz
pop
mov
pop
jmp
add
pop
push
pmaxsw
jo
mov
adc
push
push
jp
pop
cmp
jle
das
sarl
inc
inc
sarb
sbb
pop
or
imul
jbe
or
mov
lds
pop
or
les
xor
mov
dec
jmp
mov
aam
mov
lret
pop
lea
enter
rcrl
xchg
mov
mov
shrl
add
adcb
adc
cltd
iret
sub
push
and
cwtl
adc
xchg
push
or
pop
aam
pop
ret
popf
outsl
add
shl
add
neg
or
cltd
in
xchg
lds
call
aas
add
imul
dec
fnstenv
cmp
movsb
push
pop
cmp
dec
aam
cmp
xchg
bound
and
daa
in
adc
inc
lret
call
push
push
mov
mull
adc
jecxz
jl
repz
push
je
jecxz
pusha
lock
push
push
push
repnz
sub
cld
cmc
pop
sbb
sbb
or
jno
pop
into
adc
call
or
add
call
cmpsb
and
push
xor
push
pop
into
pop
mov
xchg
add
xchg
add
je
out
mov
hlt
push
pop
or
jmp
leave
adc
jne
sub
add
fs
ret
clc
push
xchg
fs
clc
nop
jb
add
mov
mov
sbbb
mov
jecxz
sub
dec
dec
pushf
add
lahf
shrw
pop
push
pop
and
testl
lcall
dec
daa
shrl
jl
leave
dec
stos
in
pop
adc
jmp
roll
mov
xor
gs
dec
outsb
cmp
pop
iret
add
sub
sub
mov
pusha
sbb
frstpm(287
push
pop
imul
rol
push
push
sti
fcoml
add
inc
pop
out
mov
outsl
movsb
jle
mov
and
lcall
jno
fst
jg
insb
sbb
push
push
and
cwtl
pop
and
clc
bnd
push
mov
int
push
jmp
and
push
pop
js
mov
das
out
fidivl
mov
cltd
and
out
stos
sub
mov
mov
ds
xchg
sahf
sbb
lock
das
push
cwtl
daa
jg
mov
insb
pop
inc
xchg
fcoms
mov
add
std
jo
dec
shlb
and
xor
lock
jo
sbb
fadds
add
pop
lret
adc
out
into
jbe
leave
aam
pop
push
popa
cmpsl
cs
ret
mov
ja
pop
psubsw
add
int3
push
fdivp
fidivs
mov
and
insl
iret
cmp
and
jb
push
inc
lock
repnz
or
push
jmp
and
fstps
sub
push
sbb
sub
xchg
subb
jae
mov
jmp
push
negb
and
adc
movsb
xchg
out
imul
push
push
mov
add
and
xor
jle
adc
adc
es
xor
cmp
movsb
xchg
pop
or
int3
int
push
mov
mov
pop
add
ret
mov
fisubl
call
sbb
pop
or
add
aaa
push
mov
jmp
loopne
jb
fldt
repz
xchg
xchg
or
mov
test
cmpsl
pushf
out
inc
add
int3
xor
sbb
jmp
push
andb
push
pop
das
nop
jl
aam
xlat
ja
scas
inc
xorb
aad
adc
lret
jo
mov
jmp
mov
mov
and
repnz
adc
lret
shlb
mov
shl
mov
ja
adc
dec
xor
or
rcrb
xchg
test
lahf
loopne
ret
ljmp
std
xor
mov
xchg
pop
xor
int3
sub
inc
inc
sub
cmpl
add
aam
scas
pop
sahf
add
lds
mov
inc
and
xor
aam
stos
mov
push
mov
test
fisubrl
cli
rclb
or
cmp
lods
test
repnz
test
ret
push
jo
xchg
sahf
mov
bound
or
or
cmp
push
mov
sub
and
insl
jmp
and
dec
mov
and
inc
xor
out
in
aad
test
test
pop
mulb
adc
xor
cmp
jb
xchg
sbb
into
push
mov
cli
dec
inc
shr
dec
and
cmc
push
sub
sbb
in
add
lods
ljmp
dec
addb
cmpb
sbb
das
ret
add
sbb
or
adc
andl
or
push
stc
mov
adc
scas
add
into
pusha
sub
cld
mov
xorb
add
addl
popa
dec
sub
cmpb
xor
mov
jg
jmp
add
pop
test
cs
dec
ds
roll
pusha
mov
pop
js
or
sbb
push
pop
lds
push
add
mov
cli
pop
xor
fld
mov
test
fsubl
jns
out
pop
das
jl
insb
xchg
mov
loop
push
inc
pop
and
ret
inc
cmp
sub
popf
and
xor
push
or
fs
fadds
stos
xchg
test
shll
int3
pop
jmp
test
adc
or
xor
xchg
mov
arpl
push
and
test
add
loope
cmpl
xbegin
pop
dec
dec
mov
testb
mov
pop
add
enter
pop
mov
mov
push
stos
sub
sbbb
sub
cli
xor
loopne
push
sarb
outsb
and
addb
inc
sub
dec
cmp
aad
adc
push
daa
inc
rclb
xchg
xchg
in
iret
sub
xchg
arpl
jp
aad
icebp
sub
sub
int3
jne
sub
add
xor
adc
push
popf
sbb
pop
lret
jbe
into
out
adc
lcall
inc
lahf
ljmp
push
aas
adc
cmpsl
cmpsl
or
mov
jp
pop
imul
test
pop
dec
jne
pop
jmp
sbb
xlat
lret
pop
xchg
lret
and
adc
out
test
adc
mov
and
hlt
or
cli
inc
or
jnp
push
dec
push
sub
sbb
xor
cmp
adc
loop
cmpsb
mov
incl
aas
mov
jno
loope
sub
imulb
mov
pop
inc
fucompp
inc
lock
pop
push
addr16
push
jnp
fisubrl
and
mov
fstl
xchg
pop
lar
gs
push
push
sbb
add
frstor
rorb
push
and
push
sahf
add
sub
push
loopne
sub
sub
stc
mov
jle
or
pop
shll
test
sahf
cld
dec
lahf
cmpsb
addl
insl
sub
pop
sub
clc
xor
sub
repz
fidivs
push
sub
repz
inc
aad
and
push
pop
or
add
mov
pop
pop
add
call
jmp
pop
xorl
ficompl
rcrl
mov
push
push
push
push
push
sbb
out
or
push
pushl
pop
sti
and
sbb
push
jmp
out
fcom
ljmp
pop
jmp
push
sub
sti
and
add
inc
xlat
push
inc
pop
lock
aas
cmp
pop
xor
call
rolb
adc
in
or
jmp
dec
add
add
push
enter
push
sbb
iret
or
sbb
or
pop
adc
sbb
pusha
xor
pop
mov
pop
or
test
or
stc
lock
lcall
and
fiaddl
sub
push
rorb
cmp
xor
sbb
xchg
pop
push
shlb
lret
lods
pop
xchg
stos
add
fdivl
and
aad
call
jno
mov
push
repnz
lock
fcoml
mov
sub
rorl
sbb
and
push
jmp
fucomp
jle
imul
movl
ret
or
push
push
shrl
xor
test
sbb
adc
ret
add
scas
pop
xchg
gs
sbb
add
and
bound
dec
hlt
aas
jnp
lods
sti
fcoms
mov
add
mov
add
sub
pop
loope
outsb
ret
or
shrl
xchg
insb
pusha
sub
cmpsl
fsts
pop
mov
push
cmp
push
int
inc
jo
dec
adcb
popa
and
cmp
or
imul
or
inc
add
lahf
stc
sar
inc
xchg
ljmp
adc
sbb
add
dec
rorb
gs
cwtl
pop
sub
mov
orl
push
pop
sub
inc
push
rclb
inc
xor
fiadds
pop
add
add
test
push
cli
dec
sub
mov
aad
shll
inc
inc
mov
add
sbb
mov
ror
orl
xchg
cmp
cmp
dec
rcl
and
test
or
xchg
aam
push
icebp
lret
call
pop
mov
inc
stos
add
mov
ret
xchg
jno
cmp
popa
test
xchg
test
sbb
test
adc
sbb
jo
das
fnsave
jg
iret
mov
add
push
insl
sbb
dec
daa
test
popa
sub
add
out
dec
imul
aad
cmp
pop
xchg
std
jo
inc
mov
jae
and
fnstcw
bnd
sub
addl
fdivrs
inc
sub
stc
cwtl
popa
jmp
xor
out
dec
xor
push
ljmp
fstps
ret
loopne
push
jae
lcall
push
mov
cmp
push
insl
shlb
out
push
push
xchg
test
push
push
sbb
dec
inc
movsl
sub
adc
movsl
dec
subl
push
adc
aaa
jmp
aaa
mov
xchg
cwtl
cmc
mov
add
mov
xor
or
stos
shlb
xor
pop
sub
and
call
add
adc
das
pop
psllw
adc
test
jp
fstpl
push
mov
push
add
jb
mov
cmpl
jmp
add
das
scas
aaa
pop
jno
ljmp
cmp
dec
jmp
icebp
not
lahf
or
pop
mov
mov
dec
inc
sub
inc
push
mov
ret
add
in
jmp
cmp
xchg
cmp
xor
cmc
rcrb
push
out
add
adc
push
and
pop
xor
add
add
loop
or
jmp
push
or
push
inc
mov
int
std
jae
or
mov
xor
sar
pop
push
cmp
sub
or
popa
out
sbb
and
sahf
pusha
xchg
scas
repz
xor
loop,pt
or
mov
push
and
je
push
cmp
mov
or
ja
dec
out
xchg
sub
xchg
mov
mov
ja
lahf
cwtl
shrb
les
inc
shl
xor
in
and
ret
mov
mov
lahf
push
imul
jle
cmpsb
pop
jmp
les
rcll
adc
frstor
mov
mov
sub
or
fldl
sbb
pop
popf
loope
dec
jmp
hlt
jne
jbe
pop
in
imul
push
push
ja
addr16
or
pusha
orl
imulb
dec
and
cmc
or
cwtl
daa
xor
cmpsb
sub
or
fadds
mov
call
rol
jmp
nop
add
sahf
leave
ret
loopne
mov
pop
xchg
ds
lds
rclb
addr16
jns
push
addr16
nop
mov
xchg
add
jmp
out
xor
call
jmp
lods
fimull
mov
inc
loope
pop
in
xor
adc
scas
add
imul
out
je
adc
jmp
dec
rcr
rclb
daa
xchg
das
xchg
loopne
pop
mov
outsl
movsb
popa
scas
pusha
dec
fwait
pop
rorl
add
loopne
xlat
inc
mov
mov
inc
sub
mov
das
jl
je
sub
add
sbb
mov
pop
daa
shll
ljmp
or
push
out
add
pushl
add
jbe
out
mov
dec
mov
scas
gs
jmp
cwtl
iret
inc
and
adc
xchg
push
shl
gs
in
test
add
or
add
inc
jmp
add
outsb
adc
and
popa
das
pop
dec
and
cmp
adcb
sti
xor
mov
fisttps
repnz
and
dec
adc
lret
ret
dec
loop
jmp
mov
not
sub
mov
jae
test
pop
stos
lcall
hlt
cmp
sub
lahf
pop
sbb
xor
mov
insb
push
fsubs
dec
jmp
pushl
mov
push
pop
mov
imul
push
stos
neg
leave
cld
or
push
mov
sarl
mov
push
cs
mov
push
leave
pop
rclb
inc
scas
add
bound
stos
fdiv
shl
dec
or
push
popa
call
add
and
sub
jmp
dec
pop
dec
pop
divps
dec
sub
bound
push
sbb
inc
dec
les
cwtl
xchg
and
out
fisubrl
cmp
jmp
pop
push
sahf
add
xchg
pop
insb
cmp
push
push
dec
movsl
mov
jp
push
subb
or
xchg
hlt
add
jle
stos
subl
loop
aam
mov
adc
je
mov
pop
pop
mov
sub
push
sbb
das
bts
inc
lcall
inc
cs
sub
fcoms
and
das
ret
fdivl
push
pop
jl
shrb
outsb
inc
mov
lds
or
or
pusha
ds
std
add
notb
pop
aam
adc
push
push
pop
sub
ret
push
insb
sub
push
mov
out
mov
mov
pop
push
add
push
dec
lock
fsubr
mov
push
push
xlat
jo
icebp
je
std
cmp
and
mov
shr
pop
adc
jge
inc
jnp
cwtl
sbb
or
add
push
sbb
imul
push
mov
cmp
or
xor
cmpsl
xchg
xchg
rcll
sub
pusha
ret
jle
xor
js
repz
pop
cmp
aaa
xchg
outsb
cmp
adc
or
or
pop
stos
aas
sub
add
inc
sub
xor
jmp
xor
je
pop
enter
push
push
jne
pop
repz
test
shrl
mov
jp
daa
andb
push
dec
mov
jbe
xchg
int
mov
neg
dec
dec
adc
dec
mov
jge
push
cwtl
cli
add
pop
test
mov
inc
cwtl
shrb
add
pop
push
mov
and
aam
mov
cmpsb
jmp
xor
push
cmp
daa
fiaddl
popa
xor
dec
mov
sbb
int3
add
test
add
mov
dec
sub
xor
addr16
addl
push
adc
push
sbb
pop
or
roll
in
push
shr
dec
xor
mov
dec
jbe
cmp
adc
shll
seta
adc
sbbl
lcall
std
mov
cwtl
lret
add
movsl
sub
into
jmp
pop
orb
jo
add
lock
ljmp
push
add
adc
scas
xor
jbe
lods
jb
or
inc
dec
dec
movl
sub
addb
mov
dec
cs
cmpsl
les
add
fldl
sub
leave
sbb
add
xor
adc
or
pop
addr16
pop
test
mov
nop
push
subb
pop
xor
data16
cmp
cmpsl
cmp
imul
xchg
in
dec
sbb
jl
stos
add
jmp
aam
testb
jmp
jle
or
sub
daa
add
mov
dec
fsubs
fcomps
mov
mov
mov
pop
clc
xor
sub
and
bound
dec
mov
xor
xor
test
arpl
test
into
sub
pushf
add
rclb
inc
cmp
mov
cmp
sbb
es
sub
cmp
push
jns
or
repz
les
pop
imul
cmpsl
xlat
mov
sbb
mov
cli
iret
bound
cmp
fstps
insb
push
aam
lods
fisubl
cs
int3
cmp
ret
jp
dec
js
rcll
push
pop
aaa
sbb
push
loopne
setp
add
nop
sub
fs
xor
sub
cmpb
inc
jnp
std
add
pop
push
fbstp
and
loop
ficoms
mov
or
mov
mov
add
inc
test
pop
mov
add
cld
cmp
mov
int3
add
bound
dec
jo
xchg
xchg
scas
daa
gs
jmp
pusha
popf
data16
or
jp
stos
or
pop
sub
pop
lahf
mov
lcall
pop
in
or
mov
mul
push
hlt
pop
mov
add
repnz
movsb
push
cmp
and
xor
movsl
aam
enter
sub
push
add
push
mov
lock
pop
jae
outsb
dec
add
mov
sbb
sub
sub
dec
push
sahf
mov
sbb
jl
leave
not
sbbl
push
xchg
adc
popf
jae
es
bound
icebp
xor
pop
lret
loop
pop
sbbb
outsl
jge
or
push
sarl
jmp
aaa
dec
or
es
inc
sbb
push
xor
sub
push
xor
cmp
daa
dec
cs
xor
xor
in
push
push
jno
out
add
and
xchg
pop
ret
sub
sub
mov
push
dec
pop
cmp
imull
cwtl
adc
jge
and
jl
shl
cmp
dec
jo
dec
jbe
or
jp
pop
mov
mov
push
shlb
js
aas
push
pop
shrl
sub
icebp
sahf
mov
push
in
push
xor
dec
and
add
add
rolb
bound
mov
sub
pop
cmp
and
jmp
orb
pop
or
push
push
and
pop
adc
sub
neg
xor
mov
ret
lcall
mov
shrb
in
imul
clc
pop
jmp
inc
xchg
rolb
jp
mov
in
cmp
jle
outsw
push
mov
and
nop
inc
pop
cmc
or
jmp
mulb
lret
test
aad
aas
nop
push
push
push
gs
dec
sub
mov
mov
and
movsl
sub
fistpll
sbb
lea
test
inc
ja
mov
lcall
sti
test
mov
dec
test
repnz
rclb
pushf
outsl
rol
aam
scas
push
xor
sub
dec
sbb
cld
sub
aad
imul
add
push
push
mov
cwtl
or
push
or
add
dec
jbe
or
jbe
push
xchg
lcall
subb
shrl
es
add
pushf
xor
mov
dec
cmp
test
lret
sbb
sbb
pop
push
test
dec
fisubl
sub
mov
adc
je
in
arpl
sbb
lds
add
add
inc
icebp
sahf
mov
push
mov
push
mov
aas
add
mov
xor
dec
push
mov
in
scas
dec
jne
jo
cmp
sub
shlb
aad
mov
jge
leave
xchg
in
jmp
into
test
cmp
sub
cltd
pusha
pushf
xlat
push
jns
imul
jmp
call
icebp
xor
ja
add
nop
push
jmp
mov
gs
pop
cld
fwait
mov
cmp
xor
pop
push
add
scas
sbb
add
or
pop
mov
dec
push
adc
stos
xor
fwait
out
push
jmp
pop
add
sti
cld
je
mov
mov
in
movsl
hlt
adc
adc
push
and
pushf
jmp
cmp
fidivs
add
call
and
int
push
pop
push
scas
imul
cmp
pop
mov
or
dec
lods
xchg
aas
add
mov
or
jb
ret
add
fisttps
pop
push
jmp
or
pop
fadd
aam
das
jg
shlb
inc
and
or
adc
jg
sbb
sub
xchg
inc
pop
and
test
sub
xchg
movsl
adc
lock
mov
and
xchg
outsl
mov
ret
pop
insl
dec
jle
inc
jge
add
pop
or
dec
push
mov
in
stc
jnp
nop
and
data16
add
dec
add
push
cld
cwtl
pop
test
xchg
add
push
pop
add
lods
cmp
cmp
and
mov
add
pushf
and
scas
fstps
cmc
fsubl
xor
mov
push
popf
call
xor
pop
test
jp
es
ljmp
lods
inc
inc
lea
out
imul
loopne
inc
dec
push
mov
jmp
push
xor
push
pop
jne
push
mov
mov
pop
and
or
xor
cwtl
pop
mov
sbbb
sbb
cmp
adc
ret
pop
rcrl
xlat
mov
cld
push
dec
inc
xorb
inc
push
clc
pop
lret
xchg
out
icebp
pop
cld
ljmp
push
shlb
mov
les
push
jb
in
mov
jno
push
sbb
pop
sub
and
fst
mov
sub
jmp
fstps
out
insb
xchg
adc
mov
inc
fistpl
push
push
pop
cld
std
into
ret
add
or
pop
and
xor
outsb
popa
es
add
pop
add
shll
inc
add
cmp
or
jns
jo
fwait
push
add
ret
push
push
push
out
push
clc
pop
addb
rol
push
jl
jle
repnz
dec
push
pop
and
cli
inc
lods
loop
pop
xor
inc
sbb
or
sub
ja
xor
mov
aam
push
sub
add
rol
and
xor
bound
lods
std
push
sbb
fldcw
jg
sub
add
pop
sub
sub
adc
mov
inc
mov
shrl
jp
rorl
daa
add
js
push
mov
out
in
shll
or
aad
add
jmp
nop
push
xchg
or
sbbl
rclb
cs
insl
imul
pop
and
in
pop
sub
cs
dec
or
jmp
adc
clc
push
or
lret
clc
xchg
addl
shrb
or
aad
dec
add
add
or
insb
cmp
jg
or
push
or
adc
jmp
outsb
lods
rorb
cmpsl
jnp
not
shll
data16
add
je
jns
mov
push
push
sub
add
shll
sub
xor
push
fsubrl
punpckldq
pop
test
sti
ret
or
dec
adc
pop
mov
jmp
imul
adc
dec
pop
mov
pop
mov
pushf
repnz
mov
jo
cmp
sub
push
push
push
mov
leave
sbb
add
pop
cmp
push
push
pop
mov
or
jno
pushf
stc
inc
dec
mov
cltd
js
test
and
push
scas
xchg
inc
add
sti
lret
es
mov
xchg
std
pop
js
mov
or
mov
test
adc
into
add
cs
insb
pop
mov
mov
repz
testl
pusha
mov
xor
cli
out
dec
pushf
leave
xchg
loope
push
test
enter
jne
ret
inc
pop
adc
and
dec
jo
and
stos
popa
jmp
mov
pop
neg
xchg
lods
sarb
les
push
mov
add
fidivl
rcrb
mov
outsl
jmp
mov
mov
shl
xor
cmp
push
adc
push
int
jp
add
inc
cmp
orb
or
ret
pusha
stos
cmp
add
xor
sub
pop
mov
pusha
dec
sub
rolb
or
or
enter
in
push
fstl
fs
lds
js
mov
negl
daa
and
cwtl
in
leave
xchg
imul
sbb
and
es
in
les
mov
out
adc
xchg
dec
mov
mov
mov
in
push
dec
xchg
loopne
dec
adc
jae
adc
pop
jecxz
or
sbb
mov
add
fstpl
pop
mov
in
loope
jmp
pop
mov
hlt
push
mov
mov
cmp
jg
lahf
pop
inc
inc
test
fstps
adc
and
add
sub
push
sub
jmp
add
jge
cmp
xlat
pop
out
cli
mov
dec
movsb
fistps
mov
push
add
insl
dec
adc
in
in
nop
or
dec
adc
movsl
ficomps
pushf
and
cli
sub
repnz
ljmp
cmpb
mov
xchg
or
jmp
icebp
lret
jg
pop
jae
or
pop
andl
in
inc
sub
jl
sub
iret
xor
xor
clc
test
jb
cmp
int
sub
mov
pop
mov
jle
pusha
adc
dec
mov
out
scas
js
lahf
outsb
mov
mov
ret
add
out
push
and
inc
pcmpeqd
test
jnp
sub
daa
or
jle
fs
jle
pop
push
pop
sarl
adc
inc
rolb
add
ja
es
dec
inc
dec
xor
je
dec
jb
push
addr16
mov
add
ljmp
jmp
jecxz
clc
and
cwtl
rclb
loop
and
imul
sbb
shll
or
sbb
sub
bound
imul
inc
test
push
out
xchg
in
cmp
jmp
add
mov
adc
mov
in
adc
leave
loop
lods
cmp
or
das
pop
insb
add
fmull
jle
jmp
psubb
lds
shlb
sub
inc
dec
mov
adc
and
and
lods
jl
cltd
jo
inc
pop
sub
xchg
jbe
dec
add
rorb
or
or
ds
inc
das
pop
sti
or
lds
jno
xchg
sub
or
popl
xchg
pop
mov
lods
or
ljmp
jne
lret
jl,pt
mov
adc
mov
mov
pop
mov
aas
pusha
cli
jmp
mov
xor
je
push
lods
mov
outsb
loopne
popf
ret
sbb
or
imul
pop
adc
inc
cmc
dec
jecxz
or
ss
push
and
push
push
jmp
enter
leave
jg
mov
push
pop
cmp
int3
xchg
lods
rorl
cld
test
out
bound
push
fisubrs
jp
setb
xor
push
mov
xor
loopne
mov
xchg
dec
jmp
push
sub
arpl
cmpsl
dec
cld
push
cmp
xor
sub
fcomi
mov
std
cltd
or
sbb
push
std
jge
test
pop
pop
push
ja
aad
mov
mov
es
fmulp
adc
lds
arpl
or
and
addl
and
adc
add
int
or
push
shrb
adc
push
shll
cld
mov
mov
and
popf
dec
mov
imul
adc
mov
rorl
inc
and
or
sub
and
pop
ret
mov
test
add
in
icebp
mov
pop
clc
or
aaa
enter
xchg
and
sbb
cmp
sub
popf
cwtl
cmpb
inc
dec
cmp
ret
sbb
sbb
lahf
xchg
push
sub
in
or
xchg
cmp
popf
dec
insb
lea
inc
clc
ds
bound
push
push
push
jmp
in
push
add
pop
push
pop
adc
pop
xor
jmp
push
repz
jmp
in
in
loop
arpl
jge
push
add
mov
pusha
push
popf
adc
pop
sbb
push
mov
in
dec
pop
fsubr
dec
cmc
aam
sti
pop
xor
or
cld
and
dec
popf
enter
push
inc
sbb
mov
cmp
mov
mov
add
push
xchg
dec
fiaddl
pop
movsb
adc
dec
and
movsb
or
push
pop
adc
xchg
add
cmp
add
andl
push
mov
popf
mov
add
inc
mov
fsubrs
pop
or
dec
sbb
testl
out
pusha
sub
jecxz
dec
dec
out
daa
jae
pop
cmp
sub
movsl
cmc
jnp
insl
cwtl
or
test
and
bound
mov
add
and
loope
or
mov
dec
pop
fstl
lret
push
add
hlt
mov
scas
lcall
into
and
xchg
bound
cld
cli
arpl
ss
cvtdq2ps
jmp
xchg
test
imul
fildll
dec
psubw
push
jmp
lret
push
dec
push
clc
mov
arpl
jnp
jl
es
faddl
add
push
mov
ret
sbb
js
in
jg
cmc
mov
sub
sar
or
mov
jmp
adc
adc
dec
lea
adc
lret
mov
nop
sbb
add
pop
push
dec
pop
pop
cs
out
add
mov
stc
sub
add
decb
sbbl
dec
cmpsb
add
cli
dec
cld
es
xor
jp
lahf
movsb
add
or
push
repz
add
adc
and
inc
dec
ret
dec
cmp
xchg
inc
adc
pusha
jle
sbb
push
pop
shl
cmp
repz
cmp
test
add
repnz
push
mov
imul
scas
jbe
mulb
adc
clc
dec
jno
les
push
and
mov
sub
xchg
mov
sub
pusha
sbb
pop
pop
cmc
pxor
dec
cmp
add
ss
pop
pusha
cld
add
fwait
loopne
push
add
mov
jle
orb
pop
rcr
mov
sub
sbb
mov
adc
jmp
push
push
and
mov
and
xchg
pushf
not
and
mov
dec
aad
movsl
fcoms
dec
jp
inc
pop
in
pop
push
shrb
mov
daa
push
les
inc
jns
popl
xor
jge
pop
inc
xor
mov
mov
pop
or
arpl
lret
xlat
das
incl
mov
lock
push
pop
out
mov
sbbl
and
or
xor
mov
mov
test
pop
push
pop
and
loopne
cmpsb
nop
popf
orb
inc
aaa
pop
mov
mov
lods
sbb
xor
test
cmpsb
inc
ds
inc
xor
and
cmp
out
mov
add
dec
inc
xchg
lods
adc
xchg
mov
xchg
or
lcall
rcrb
daa
mov
jg
fisttpl
inc
adc
sti
sbb
xor
mov
fisttpl
xchg
aad
or
jb
sbb
or
jae
mov
call
loopne
sub
cmp
jmp
jle
mov
cltd
loope
and
xlat
loope
test
mov
sub
cltd
jle
mov
stc
cwtl
sti
fbstp
add
jmp
lds
cmp
insb
xchg
cmp
jl
out
pop
popl
pusha
or
cmp
xor
pop
pop
jmp
scas
add
push
add
into
es
jnp
pop
hlt
add
aaa
pushf
xor
sub
in
add
pop
mov
sub
fadds
push
jmp
push
jno
xchg
pop
add
arpl
imul
repnz
inc
jno
ret
adc
ret
pop
out
inc
adc
rolb
hlt
xor
push
jnp
fdivl
add
daa
jbe
adcb
ja
mov
addl
or
add
mov
mov
popf
mov
jae
cs
pop
shlb
adc
adc
addl
push
push
nop
out
bound
jp
cmp
jns
fistpl
lcall
add
pop
push
mov
jbe
in
add
ss
adc
sub
sti
loop
mov
imul
sahf
fs
aad
sti
add
rcr
aaa
mov
aam
mov
pusha
ds
mov
adc
scas
dec
jmp
or
push
jp
or
pop
pop
xchg
inc
add
and
repnz
or
xchg
xor
push
out
or
incl
cmpsl
sahf
cld
jecxz
add
out
pushf
jge
mov
mov
mov
xorb
fldl
sub
daa
add
jp
mov
fsubrs
pop
mov
inc
lods
sub
outsb
add
jmp
pop
and
jae
push
xchg
jno
pop
mov
push
mov
jb
cld
outsb
dec
mov
sahf
test
inc
test
test
dec
js
dec
add
rcrb
pusha
bound
enter
mov
or
xlat
push
xor
push
push
int3
inc
ljmp
arpl
push
push
or
mov
or
sbb
call
sbb
std
mov
cmp
call
mov
movsb
int
sub
pushf
push
into
imul
dec
mov
pop
les
xchg
xor
je
or
mov
xor
rorl
cwtl
int
xlat
ljmp
ret
push
lock
add
dec
mov
push
add
push
push
sti
or
sub
dec
pop
or
or
push
adc
cmpsl
bound
mov
push
cmc
dec
push
in
or
insb
or
pop
inc
lret
repnz
or
out
pop
pop
sbbb
add
imul
clc
mov
mov
sub
xchg
xor
ret
or
jle
fsincos
and
pop
lahf
jb
lahf
call
adc
mov
sub
or
add
popf
popa
cmp
idivb
mov
mov
mov
imul
adc
pop
push
pop
push
repnz
cmp
inc
sub
mov
add
adc
and
pop
cmpsb
shl
push
pushf
inc
orl
in
cmp
sub
xlat
dec
push
loop
jb
cwtl
jp
call
dec
int
push
lcall
mov
push
push
pop
xor
movb
loop
test
scas
inc
cmp
jp
push
insb
fnsave
cmpsl
or
mov
jge
test
jno
fcmove
push
sarb
roll
cs
jge
xor
cld
xchg
pusha
push
mov
jmp
lock
shl
inc
xor
jae
loopne
sub
orb
lock
push
popa
dec
pop
std
mov
jmp
dec
dec
sub
push
mov
sahf
add
xchg
pop
ja
ljmp
xchg
cmp
adc
sub
push
xchg
pop
add
out
inc
shr
xor
fimuls
xor
add
pop
call
and
mov
or
push
inc
or
data16
in
bound
pop
sti
idivl
iret
mov
stos
cmpsb
mov
jne
mov
cld
xor
pop
sbb
dec
push
ss
xlat
in
push
call
repz
adc
fcompl
out
xor
insb
out
imul
shl
fistl
pop
es
mov
addr16
cmp
adc
aaa
fildl
jecxz
shrl
sbbl
dec
lock
call
dec
repnz
mov
push
jns
out
dec
pop
scas
push
cmpsb
insb
sbbl
cli
sub
ret
mov
sub
sub
sbb
or
push
and
addr16
shlb
add
cmp
mov
mov
pop
cmp
and
pop
out
pusha
cmp
test
or
adc
popa
and
sub
jnp
xchg
loopne
jp
sbb
jle
pop
pop
push
adc
lods
loopne
jne
sub
data16
lret
push
mov
jmp
mov
or
jo
push
pop
or
pop
dec
ja
aaa
imul
pcmpgtw
add
sbb
jns
mov
inc
push
daa
nop
mov
add
sarl
jb
and
xorl
dec
add
cmpb
jbe
xor
test
sub
lds
pop
dec
jbe
push
mov
sub
inc
adc
add
cmp
or
ficoml
movsl
sbb
icebp
movsb
push
into
pop
rol
mov
sub
push
xchg
out
dec
cld
adc
lds
sub
push
jge
cld
add
sahf
es
inc
add
pop
sub
test
sbb
jne
xlat
push
cmp
push
jecxz
clc
dec
int
popf
inc
and
inc
or
incb
mov
dec
push
push
jmp
mov
shrb
leave
push
push
cmpb
mov
and
xor
or
movsb
inc
xor
ds
push
xor
or
mov
and
add
outsl
mov
je
int3
jge
dec
inc
cld
ret
iret
rcll
jbe
sbb
hlt
int
xor
jecxz
mov
int
or
pop
ds
mulb
add
int
pusha
lds
shr
lret
or
ja
lss
ds
in
or
jg
push
push
inc
loope,pn
testb
jne
daa
mov
pop
les
frstor
push
das
lods
adc
fwait
test
mov
sbb
fisubs
out
push
inc
add
fisttps
mov
mov
daa
add
ljmp
push
loopne
jnp
je
pusha
in
xor
push
xor
sar
stos
jbe
add
push
sbb
mov
add
or
inc
inc
jmp
jo
in
into
push
or
jmp
push
mov
clc
hlt
dec
test
jb
and
aas
ja
shrb
or
mov
pop
xchg
inc
xchg
dec
lret
out
add
adc
mov
dec
push
cwtl
add
adc
and
mov
inc
ret
add
pop
add
loope
push
push
ljmp
sub
pop
movsb
cmpsb
mov
jbe
inc
ljmp
jg
fistps
or
dec
xchg
ret
mov
xor
pop
push
es
sub
xchg
addr16
sbb
cs
je
mov
call
movb
imul
sbb
sub
sub
outsb
dec
and
adc
jo
lahf
imul
aam
pop
xchg
dec
lock
mov
xor
les
in
add
push
ret
sti
xchg
push
inc
mov
cmp
sarb
inc
shr
push
and
mov
into
mov
pop
pop
movsl
jle
xchg
ret
jecxz
fwait
xchg
pop
out
push
sbb
icebp
outsl
jbe
push
sbb
sub
or
cltd
cmp
push
or
sub
jmp
fadds
jns
inc
gs
pusha
lods
jg
sbb
add
mov
shl
pop
loope
mov
add
dec
jnp
icebp
and
cmp
jge
es
aam
fstpl
adc
mov
jne
pop
push
mov
test
sub
inc
cmc
iret
or
push
xchg
ficoml
icebp
into
adc
enter
push
ss
subb
add
mov
mov
mov
rorl
sub
cmp
cli
cmpb
mov
sti
push
push
mov
jmp
or
pop
adc
shlb
sub
ja
das
fisubs
jns
mov
xor
cli
cwtl
test
dec
add
mov
pop
icebp
or
jl
imul
ds
mov
add
imulb
adc
mov
fildll
aaa
shrb
pop
jg
dec
imul
push
test
xchg
stos
xor
add
hlt
jbe
lea
jmp
jl
lret
push
pop
push
jmp
sub
push
mov
jg
shl
mov
lahf
xor
loopne
mov
bound
adc
cli
adc
pushf
cmpsl
push
pop
insb
es
and
or
jmp
sbb
mov
outsl
orl
mov
sub
xor
call
xor
push
dec
test
adc
dec
push
pop
ret
add
jo
movsb
jno
adc
outsb
outsl
jmp
aad
in
loop
or
cmp
sbb
jb
push
adc
repnz
or
jl
adc
or
bound
mov
push
push
push
inc
idiv
xor
lret
lahf
aaa
in
mov
sub
mov
sub
stos
pop
repz
and
in
les
mov
mov
rorl
jmp
or
imul
fistps
jge
add
xchg
scas
dec
jg
fwait
or
push
push
popa
push
cmp
repnz
xchg
add
ret
xchg
xlat
sub
pop
ficoms
add
outsl
fldl
add
aad
or
adc
ljmp
push
and
int3
pop
jg
test
sub
aad
dec
out
xchg
xor
rcl
ficomps
add
into
out
lahf
shl
sub
outsl
mov
insl
imul
push
adc
xchg
add
add
sbb
mov
xor
nop
cmp
sbb
lods
add
push
js
jmp
sub
or
add
jecxz
daa
lock
orb
add
add
pop
leave
bound
cs
pop
dec
jl
das
add
add
sub
es
gs
xor
inc
rcr
mov
movsb
pop
pop
mov
mov
imul
cmp
inc
test
push
bound
or
idiv
add
jb
jmp
mov
and
dec
jg
sbb
push
fdivl
shlb
aad
das
js
jns
scas
push
jo
lcall
fcomp
fldenv
scas
and
mov
jmp
addl
jp
icebp
push
mov
mov
sti
sub
mov
mov
lock
lcall
daa
xchg
fisubrl
ret
stc
add
lahf
in
test
or
cld
push
or
mov
push
dec
pop
mov
in
mov
xor
cmp
les
js
gs
or
push
or
pusha
jnp
xchg
add
and
lcall
sub
test
push
mov
cmpb
add
jns
adc
data16
rcll
sub
sub
mov
bound
cmpsl
mov
mov
rcl
xchg
or
pop
pop
nop
movsl
mov
xor
cltd
test
mov
in
roll
sbb
cli
das
add
xchg
mov
adc
or
jnp
push
not
insl
bound
mov
lock
dec
pop
sbb
loope
cmpsl
in
xor
and
inc
cmc
xor
xlat
mov
sub
pop
add
mov
sub
outsl
inc
mov
lahf
imul
cld
add
dec
jbe
jmp
and
insb
pop
test
inc
dec
cmp
cli
push
popf
push
pusha
xchg
pop
std
test
pop
mov
das
or
jle
ret
pop
and
mov
push
sarb
jbe
daa
jmp
add
sbb
mov
pop
jnp
jno
sub
or
push
xor
inc
aaa
aas
cwtl
imul
jae
dec
pop
es
aas
sub
daa
lcall
pop
sub
add
jmp
dec
add
push
xchg
in
xorb
add
cmp
sub
iret
inc
xorl
pop
ret
dec
dec
sub
scas
sbb
imul
mov
in
or
out
dec
out
and
pop
movlps
or
aad
pop
mov
jmp
or
mov
cmp
pop
sahf
pop
jnp
and
xor
add
idivl
push
jecxz
aam
push
xchg
cmp
sbb
push
imul
cmp
fadds
test
andb
pop
dec
push
popa
test
mov
lds
jl
jmp
pop
cmpb
jle
lods
add
popa
xor
push
mov
out
repnz
out
sub
scas
cli
push
xchg
shlb
xor
add
int
pop
inc
aaa
add
xchg
push
and
add
je
and
adc
push
xchg
jmp
dec
sbb
je
sti
enter
dec
dec
jp
rcrl
jecxz
addl
and
ret
lret
cmp
mov
std
mov
shrl
lret
or
pop
pop
ret
data16
jae
sub
test
sbb
jecxz
icebp
mov
xchg
pop
push
xchg
add
aad
rcr
jl
add
or
mov
and
jb
or
out
mov
pusha
push
push
sbb
fistl
inc
push
xor
mov
jle
cmp
xchg
not
ja
pop
adc
push
pop
mov
scas
xor
into
jns
lods
or
add
pop
xchg
int
mov
fcoml
add
mov
xchg
or
xlat
pop
ljmp
or
fstl
fcoml
pop
or
cld
dec
fisubrl
insb
rcr
cmp
add
sti
jge
mov
or
aad
cmp
lcall
cmpsb
vphaddbq
mov
call
outsl
and
push
pop
lock
mov
cmpb
loopne
or
mov
movsl
pop
das
pop
shrb
out
xchg
in
mov
mov
lahf
int3
cmpsl
sbb
jp
and
in
dec
and
or
outsl
add
jmp
cmpsl
clc
bound
xorb
je
add
data16
inc
dec
jns
dec
loope
cmp
out
pushf
and
test
outsl
or
xor
sbbl
sub
ds
pop
pusha
roll
insl
loopne
jle
and
mov
aas
cmpsl
in
jp
inc
clc
and
cld
orb
mov
pop
adc
push
xlat
rclb
sbb
or
push
mov
cmpl
aad
xlat
jmp
imul
push
cmp
lods
ficompl
out
fstpl
xor
incl
addl
sub
push
mov
inc
testb
or
imul
repz
lock
adc
mov
std
rorl
popa
bound
ljmp
mov
inc
nop
pop
pop
pop
jmp
aas
shlb
ret
repz
pop
jnp
dec
test
cli
pop
mov
xchg
inc
mov
xor
sub
test
push
cwtl
int
push
dec
pop
shlb
call
pusha
or
inc
cwtl
or
jmp
cmpsb
dec
dec
mov
push
pop
inc
xchg
mov
rolb
aaa
and
push
lret
ja
pop
scas
add
mov
xor
jbe
orb
pop
outsl
adc
sub
cld
ja
mov
lds
mov
arpl
dec
hlt
or
nop
sub
js
push
dec
aas
sahf
shl
dec
or
imul
xor
das
jae
scas
jge
xchg
imul
in
outsl
in
fsubrs
cld
ja
adc
test
dec
sub
xchg
test
ss
inc
add
shlb
clc
es
and
xlat
iret
imul
pop
push
in
add
jge
addl
mov
push
and
push
pop
sarb
adc
xor
ljmp
outsl
sub
dec
fadds
jno
inc
insl
div
or
add
insb
push
pop
push
push
pop
shr
mov
sbb
aaa
mov
mov
add
cld
out
llwpcb
scas
mov
and
movsb
leave
out
fisubl
lods
add
sub
ljmp
ret
lock
shrb
jne
fs
push
rep
pop
dec
and
cmp
lock
ficoml
aaa
stos
sub
mov
pop
lods
lods
clc
shll
or
mov
xchg
mov
cmp
fnstsw
fiaddl
jmp
es
push
jbe
lahf
test
not
xchg
xor
ljmp
add
inc
xor
add
or
inc
mull
add
sti
pop
bnd
ss
pop
cmp
inc
in
aaa
and
nop
and
add
jo
inc
outsb
add
fst
mov
leave
popf
add
pop
sub
js
or
dec
jb
sub
pop
sub
fs
outsl
mov
mov
sbb
pushf
inc
sti
push
add
mov
pop
pop
inc
daa
bound
inc
insl
lds
movsb
lds
inc
popa
jp
int3
aas
lret
shrl
jmp
push
push
lret
gs
mov
dec
cmp
and
push
mov
cmpsb
out
push
fisubs
pop
cmp
scas
rorb
cmp
in
in
fcoms
prefetch
or
push
divl
test
adc
pop
push
mov
aam
ds
xor
stos
push
mov
xchg
mov
add
gs
ljmp
rclb
push
imul
pop
aaa
or
sbb
leave
mov
push
clc
jo
ror
or
add
sbb
adc
jo
xor
popa
jmp
cmp
fldcw
cmp
inc
or
insb
test
or
sbb
or
fnstenv
fcoms
or
dec
rcll
xor
adc
jl
outsl
push
jo
add
mov
pop
inc
xchg
jo
mov
addb
sbbl
test
ljmp
adc
sbb
and
mov
add
shrb
pusha
xchg
jge
push
test
ja
jne
dec
push
mov
sbb
call
ja
sbb
sub
pop
cltd
xor
mov
and
dec
pop
add
mov
sbbl
xor
mov
push
addl
mov
add
mov
popa
mov
or
dec
xor
scas
jp
push
seta
mov
pop
dec
idivl
xor
pop
pop
or
hlt
mov
pop
adc
add
imul
sbb
xor
lds
add
aas
pusha
sbb
dec
adcb
pop
aad
iret
and
sbb
js
bound
sub
jmp
jo
hlt
in
mov
jle
repnz
mov
add
xchg
ret
push
mov
lret
add
sub
mov
sar
sub
xor
xor
and
into
inc
pop
add
xor
inc
sub
add
mov
jb
je
inc
push
push
lahf
cmpb
call
adc
test
sbb
or
mov
jo
or
outsb
repnz
cmpsl
push
mov
xor
xor
pop
jmp
sub
inc
daa
cmp
rorb
stos
loop
pop
pop
xchg
jnp
leave
add
popf
shlb
or
or
jl
rolb
or
push
push
movsb
insl
pop
cmp
push
xor
cmp
cli
dec
adc
adc
aas
jle
jb
rcrl
xor
mov
mov
xor
cltd
dec
xchg
popfw
adc
mov
sub
fwait
pusha
xchg
adc
outsb
xor
jmp
out
lahf
or
lahf
mov
hlt
loop
dec
add
and
sahf
push
jl
pusha
cli
pop
push
rclb
or
cmc
in
aam
push
add
sbb
addl
subl
or
pop
push
push
pop
popf
int
or
mov
add
movsb
out
jecxz,pt
push
rclb
js
idivb
lahf
xor
std
ja
mov
testl
push
xor
out
dec
lock
pushf
xlat
add
pop
and
pusha
xor
push
mov
mov
lcall
data16
xchg
jns
sbb
and
or
imul
mov
and
xchg
nop
push
jmp
fsubrs
cs
mov
pop
shlw
cmp
xor
push
jmp
shrl
add
es
outsl
imul
and
xor
call
sbb
adc
or
adc
scas
jne
push
dec
ret
sub
add
jge
ljmp
push
popa
pop
or
mov
fnstcw
dec
subl
adc
addr16
mov
loope
pop
add
rol
sbb
pusha
shlb
jle
adc
jbe
call
loop
sarb
rol
jbe
add
orb
loope
or
outsb
shll
mov
push
push
pop
ret
mov
je
or
shl
mov
dec
insl
sub
cmp
subb
adc
sahf
sbb
icebp
dec
dec
repnz
lds
pop
xchg
xor
leave
stc
scas
or
into
xor
scas
shll
ljmp
adc
mov
xchg
aad
sub
clc
adc
test
orb
pop
insb
jmp
je
pop
jne
push
add
mov
gs
and
or
lock
xor
adc
ja
adcl
jns
arpl
adc
or
cmp
sbb
or
adc
into
pop
test
cmp
mov
rcl
pop
mov
sbb
jg
add
test
test
xchg
pop
push
jge
sbb
mov
nop
popf
sbb
insl
daa
add
imul
add
and
clc
push
add
or
loopne
mov
xor
mov
or
inc
aas
jp
int
sti
aad
lock
pop
xchg
stc
mov
rorb
sbb
inc
push
xorb
dec
sub
sub
add
xlat
inc
inc
mov
cltd
daa
or
pop
pop
lods
adc
jmp
inc
daa
sub
mov
cmpsl
int3
jnp
mov
testb
stos
sbb
fstps
sahf
jmp
sarb
fmull
iret
test
mov
rorl
and
lock
rep
lods
jbe
mov
inc
push
repz
aam
xchg
add
or
dec
add
nop
addb
shr
cmp
xchg
pop
pushf
and
pop
adcb
cmp
repnz
add
adc
stos
scas
into
cmp
sub
scas
repnz
mov
jl
push
push
pop
cmpb
mov
bnd
imul
int3
sbb
pop
adc
mov
dec
push
mov
loopne
clc
stos
iret
bnd
pushf
add
xlat
out
sub
iret
ret
pop
pop
add
rcll
push
adc
arpl
inc
ljmp
xchg
xor
add
cmp
xlat
in
test
xor
inc
mov
mov
or
imul
jg
roll
jae
je
mov
add
sub
ds
push
pop
push
add
test
imul
add
mov
rorl
mov
mov
lods
lret
or
xor
or
pop
out
jno
mov
xor
out
sub
pop
push
pusha
xchg
inc
sti
cmp
lods
xchg
xchg
mov
jg
and
xchg
das
gs
adc
mov
sub
push
inc
icebp
popf
subl
lret
and
add
sub
out
jns
and
cmp
sahf
testb
jno
and
flds
or
dec
sbb
das
jmp
pop
xor
mov
ljmp
lods
push
adc
fimull
jne
mov
sbb
mov
sbb
lea
jmp
das
xorl
cld
pop
pop
and
data16
pop
outsb
push
mov
push
loopne
or
dec
dec
in
sub
push
inc
addl
notb
or
subb
sub
fs
out
int3
jl
and
jmp
lods
add
push
clc
cmp
sub
mov
repnz
mov
add
gs
pop
push
jmp
sbb
dec
pop
popa
mov
sbb
testl
xlat
and
scas
jno
sub
lahf
pop
cmp
pusha
cmp
and
push
add
dec
fstpt
out
sub
subl
ja
ljmp
adc
lahf
subl
jae
adc
xlat
testl
sbb
sub
pop
ds
cwtl
test
addl
mov
lret
pop
fidivl
aad
add
arpl
mov
sbbb
sbb
xor
fcmovne
xchg
inc
lret
adc
add
in
sti
dec
jo
int
sti
ror
xor
dec
xchg
outsb
mov
dec
xor
add
mov
testl
add
bound
push
pop
xor
push
pop
cmpsb
test
int
inc
loope
pop
jb
rorl
out
jl
jae
fcmovnu
scas
jmp
imul
es
adc
jp
cli
sbb
push
sahf
or
mov
arpl
fnstsw
or
inc
lret
xchg
sub
movsl
add
jg
sbb
add
xor
cli
push
add
push
movsl
jmp
shl
pop
mov
jecxz
ljmp
fistpl
daa
in
ja
mov
push
jnp
and
cwtl
sbb
hlt
neg
mov
jne
jle
or
push
in
cmpsl
adc
xchg
xchg
mov
add
rolb
push
adc
insl
mov
cmp
xor
and
xchg
scas
enter
pop
push
mov
fisttps
cmp
pop
ja
ficompl
sbb
mov
dec
sysexit
xchg
out
push
insl
sti
cmp
or
ljmp
cmpsl
pop
cs
sub
pop
cmp
jns
divl
ret
stc
cltd
and
mov
test
fisubs
sbb
push
sbbb
or
sbb
in
inc
or
lret
xor
icebp
daa
pop
les
and
daa
adc
dec
mov
bound
push
stc
loop
stos
push
xchg
mov
fisubs
sub
jle
outsb
pusha
das
jg
adc
pop
push
jmp
add
or
cld
icebp
xchg
lcall
add
fsubr
aaa
adc
aas
add
add
and
ret
pop
jecxz
shr
scas
mov
mov
loopne
push
rclb
scas
fiadds
dec
filds
daa
jle
inc
jmp
mov
inc
stos
xchg
pop
sub
add
add
pop
jb
shll
fisubrs
cmpsl
pusha
out
or
inc
neg
test
push
sbb
add
mov
inc
sub
fs
out
jmp
xchg
jae
shrb
inc
nop
shlb
insb
mov
pop
aad
adc
cmc
jo
pop
push
sub
jmp
adc
test
scas
aaa
jnp
in
daa
test
push
popf
test
arpl
aas
xchg
or
scas
scas
pop
call
jmp
imul
jnp
cli
pop
or
fcomp
xor
das
jecxz
or
xor
add
ret
mov
data16
das
and
into
lods
in
cmpb
add
sub
jmp
jg
out
pop
mov
mov
adcb
and
add
add
or
inc
cltd
fidivrl
dec
test
ss
imul
jb
adc
dec
sub
cmp
add
dec
leave
jae
add
jbe
fdivrl
or
lds
inc
pop
jl
popa
jmp
pop
and
dec
or
jge
or
shl
xor
xor
jae
and
stos
cmp
mov
cmpb
sbb
shlb
inc
inc
push
movsl
or
xor
pop
pushf
fistpl
jmp
xor
and
sub
cld
dec
xchg
inc
incb
add
cli
nop
mov
out
add
pusha
push
popf
or
das
push
pop
lret
rolb
pop
mov
sti
xchg
fildll
inc
sub
push
das
pop
mov
inc
or
sub
xchg
pop
add
xor
pop
pushf
mov
jmp
push
ds
push
push
dec
add
inc
mov
les
icebp
cwtl
imul
insl
adc
jecxz
push
inc
das
fldenv
dec
and
popf
add
add
lods
pop
in
pop
add
sti
mov
cmpsb
inc
mov
push
or
mov
push
cs
mov
cli
les
or
mov
roll
ljmp
dec
dec
in
add
frstor
and
andb
sahf
jmp
out
cli
jecxz
push
mov
mov
enter
and
push
mov
fs
ja
aaa
xor
push
and
cmp
push
insb
xchg
sub
lea
jae
or
mov
ja
push
mov
pop
jae
xchg
sti
pop
add
out
popf
mov
xchg
push
arpl
inc
sub
dec
clc
adc
leave
mov
ljmp
adc
int3
mov
aas
enter
in
icebp
add
enter
mov
out
outsl
xchg
push
cwtl
push
sbb
fiadds
cmp
pop
sub
pop
xor
das
jmp
cs
xlat
sub
shl
mov
pop
popf
or
and
mov
xor
jmp
mov
repz
jae
inc
dec
addl
jo
pop
or
cmpsl
out
repnz
sub
loope
sub
cmp
adc
inc
mov
lret
inc
mov
adc
add
pop
daa
xor
mov
mov
dec
neg
mov
fisttps
sub
lods
cld
fisttpll
or
jecxz
in
inc
mov
push
mov
adc
cld
in
push
jmp
xchg
fcmovbe
test
fs
shl
pop
loope
inc
mov
xchg
adc
popa
notl
sahf
cmp
jb
sahf
jp
shrb
pushf
cmc
xor
add
jg
pop
xchg
or
fiadds
fcomps
xchg
adc
lea
pop
pop
nop
sub
mov
push
int
ja
add
out
pop
push
pop
pop
outsl
mov
push
cmp
xchg
inc
mov
cmp
mov
repz
addr16
xchg
lcall
dec
loopne
das
inc
jns
adcb
mov
pop
jne
pop
loopne
lcall
fadds
shrl
dec
push
jne
lock
adc
out
cmp
bound
and
push
inc
sti
mov
push
dec
notl
das
out
pusha
xchg
push
mov
mov
hlt
repz
pop
and
movsl
loope
ret
sbb
add
push
loop
cld
and
insb
xchg
inc
or
cmp
shr
and
imul
mov
sbb
and
fisubs
mov
xor
xor
outsl
stos
loopne
xchg
pop
mov
pop
js
dec
adc
sbb
aas
or
and
scas
enter
repnz
adc
dec
mov
jge
addl
adc
popl
and
mov
add
push
pop
or
std
jo
push
cld
mov
and
sub
cmp
into
dec
cmp
inc
xchg
mov
sub
fisttpll
lods
data16
sub
das
xor
push
imul
mov
negb
mov
or
sub
pop
xor
xchg
outsb
xchg
xorb
lret
orl
movsl
rcl
popa
add
gs
cltd
add
jmp
mov
fs
push
mov
jg
jnp
mov
add
xchg
dec
neg
inc
sbbb
jnp
jb
push
push
imul
add
jnp
add
xchg
sbb
jnp
xchg
pop
pushl
iret
je
inc
inc
inc
or
aaa
test
add
inc
jmp
clc
jg
adc
jns
dec
pop
jl
int
adc
push
mov
inc
push
xor
idiv
adc
add
pop
mov
aad
orb
sub
jmp
fcomps
or
test
sub
loope
data16
inc
mov
push
pop
mov
dec
loopne
pop
insb
test
rclb
jnp
mov
ljmp
bound
dec
mov
repnz
add
push
jmp
inc
dec
filds
jns
leave
pop
out
divl
push
iret
inc
in
pop
test
jns
ss
push
in
sti
cmp
jns
imul
add
sub
leave
nop
repnz
push
in
out
mov
adc
or
push
aas
add
inc
mov
jmp
pop
in
jmp
in
imul
xchg
imul
lahf
je
lods
adc
in
jns
xchg
jl
sub
push
sbb
dec
inc
cmp
out
xlat
js
pop
mov
and
icebp
bound
into
dec
jo
push
shrb
daa
loop
js
mov
rorl
mov
lds
jmp
or
fstl
and
sub
mov
xchg
stos
pop
adc
shr
mov
jns
cld
add
daa
add
cmp
cmp
mov
pop
pop
xor
nop
in
xor
stc
data16
aas
negb
dec
push
inc
das
fiaddl
pop
mov
loope
push
mov
dec
add
push
push
dec
push
fcmove
push
jne
fwait
ret
mov
fs
add
xchg
ret
imul
xchg
or
je
incl
imul
adc
xchg
mov
and
pop
and
push
sbb
lahf
jg
sti
cmpsl
cwtl
imul
repnz
dec
xor
mov
data16
mov
aas
popf
into
xchg
mov
inc
and
lods
gs
pushf
xor
add
in
jg
mov
fucomip
jl
insl
cs
mov
les
ljmp
stc
enter
mov
dec
std
lods
pop
or
mov
and
cmp
mov
push
inc
inc
xchg
sbb
jmp
push
pop
pop
pop
xchg
add
add
jmp
mov
sti
inc
into
negb
mov
arpl
jmp
mov
jno
enter
int3
lock
pop
push
aas
mov
bound
pop
add
push
lods
stos
inc
mov
mov
add
push
loop
pop
in
je
outsl
cwtl
cwtl
sbb
outsl
jecxz
xchg
push
pop
jno
std
adc
pop
xchg
add
pop
pop
cmpsb
jmp
movb
ds
xor
vxorps
pop
pop
lods
out
or
cs
push
mov
and
jno
jo
neg
inc
add
rolb
jmp
fisubs
sub
sub
push
cwtl
fbstp
xchg
add
stos
inc
es
cmp
mov
int3
pop
notb
jmp
mov
ljmp
pusha
dec
push
xor
gs
and
adc
jmp
pop
push
jo
inc
xchg
scas
aas
daa
add
xchg
pop
or
or
fcmovbe
adc
bound
xchg
and
pop
aaa
inc
dec
dec
pop
loopne
and
out
push
push
mov
mov
pop
xchg
lret
movsb
fisttps
sbb
jge
mov
pusha
xor
adc
je
jmp
mov
or
inc
lock
daa
insb
loop
lock
push
in
and
pop
ds
scas
sbb
dec
popa
or
xor
cwtl
xchg
cs
je
push
sub
scas
sub
imul
dec
sarb
ret
inc
and
push
add
loop
xor
cltd
lret
add
in
jne
and
dec
sub
pushf
xor
cmp
pop
adc
into
mov
sbb
arpl
aas
inc
int3
sti
add
push
xor
sbb
inc
mov
lret
pushf
outsb
shr
pop
pushf
dec
push
push
sbb
or
or
adc
in
sbb
cmc
sbb
out
or
mov
aas
sbb
fidivl
adc
shr
dec
es
shrb
pop
or
xor
cmp
daa
dec
pop
mov
or
push
rclb
xchg
lahf
pop
cmp
hlt
xor
lds
and
and
cmp
lret
fsts
pop
push
loop
jbe
dec
mov
out
filds
cwtl
into
xchg
or
outsb
mov
adc
pop
jmp
pop
nop
ja
push
and
dec
pop
pushf
dec
mov
enter
in
cwtl
loopne
jp
inc
shlb
mov
jmp
jp
out
sbb
ljmp
push
cmp
xchg
pop
mov
and
inc
xchg
sbb
dec
cmp
test
jmp
shrl
inc
pop
sbb
out
jmp
pop
push
mov
sub
scas
adc
or
add
arpl
das
or
mov
mov
stos
mov
shrb
das
xor
jmp
add
inc
lahf
and
fldl
cwtl
xor
xchg
ficomps
frstor
out
mov
xchg
mov
push
test
pop
push
mov
push
clc
dec
or
push
jg
xor
adc
jecxz
add
es
out
adc
jnp
adc
sub
add
rcll
xor
pop
mov
sub
or
pop
rcrb
mov
nop
sub
jle
test
test
mov
jo
rorl
daa
or
xchg
add
test
or
add
push
jp
or
add
add
add
jmp
add
push
mov
out
mov
pop
popf
xchg
push
lods
mov
sub
popa
mov
push
jo
adc
push
cwtl
mov
std
stos
scas
movsb
movsl
inc
mov
jb
out
sti
sbb
add
push
es
xor
add
jne
roll
stos
add
push
mov
adc
pop
xor
imul
mov
push
cld
pop
mov
dec
push
orl
mov
push
bound
adc
pop
popa
push
push
mov
dec
pop
jo
data16
inc
dec
cmp
mov
cs
outsb
mov
cmp
push
pusha
aam
dec
and
mov
xchg
imul
push
mov
add
mov
fisttps
stos
sarl
inc
ret
jg
ja
xchg
mov
mov
aaa
mov
push
outsb
iret
fs
jmp
mov
adc
test
pop
mov
xlat
mov
sbb
or
aaa
inc
dec
pop
and
pop
imul
jmp
xlat
call
daa
stc
or
aam
fiadds
push
xor
add
andnps
add
push
adc
cmc
xor
xchg
adc
push
aas
mov
out
cmp
push
xchg
add
jae
mov
mov
push
xor
cli
gs
inc
pop
in
out
mov
cmc
xor
or
sub
insb
fwait
iret
add
cs
rorl
mov
xchg
push
xor
sub
adc
js
jmp
adc
imul
sbb
mov
jecxz
push
mov
or
dec
cmpb
or
mul
xor
xchg
push
sub
push
fldt
inc
adc
inc
repnz
push
mov
aas
leave
aam
adc
movsl
add
hlt
mov
stos
jns
call
cwtl
or
stos
jg
jmp
add
mov
cs
outsb
sub
sub
sub
sbb
mov
and
mov
fwait
add
adcl
inc
or
jge
or
nop
fcomps
in
jmp
arpl
jns
xchg
and
pop
out
pop
jl
popa
pop
or
adc
shr
andl
ret
adc
cmc
pop
dec
or
inc
jmp
loopne
push
mov
cs
dec
ja
cltd
pop
jecxz
ss
xor
push
ds
xchg
jecxz
sbb
cmp
mov
adc
mov
push
adc
pop
push
xchg
clc
push
addr16
and
int
pop
pop
adcb
inc
or
dec
add
shll
pop
outsb
xor
in
mov
pop
sarb
mov
lds
jbe
shr
jle
and
fs
bound
rcrl
jns
and
dec
xchg
es
lea
fisubrs
ret
cli
add
dec
jmp
fcmovbe
dec
sub
mov
rolb
or
xor
ret
xchg
cmp
push
sub
push
jmp
inc
xor
out
outsb
cmpsl
push
and
js
iret
pop
mov
jo
mov
push
xchg
pop
inc
and
aas
adc
mov
mov
call
inc
cmp
jge
jmp
jno
adc
rcrl
shrb
sub
pop
aad
shl
cmp
pop
nop
and
ficoml
stos
xor
sub
mov
sbb
mov
xor
or
push
pusha
jne
jl
add
pop
stos
xchg
xchg
orb
rolb
xchg
cld
test
jl
push
call
pop
shr
jmp
fcmovb
sbb
push
in
aam
pop
loopne
popa
mov
imul
adc
or
mov
pushf
pop
fs
push
movsb
adc
dec
or
or
jbe
shrb
or
push
mov
test
sub
sub
push
add
inc
std
shll
xchg
adc
shrb
adc
dec
dec
push
enter
pop
jmp
repz
sti
dec
jno
add
cmp
sarb
jno
mov
ljmp
nop
cwtl
xchg
push
lods
std
outsl
icebp
das
add
pop
mov
outsl
adcl
orb
mov
jecxz
jge
ret
fsubr
mov
push
je
pop
jo
lahf
inc
js
or
xchg
aaa
test
add
push
pop
dec
mov
in
inc
mov
pop
pop
shrl
push
js
or
push
pop
call
fldcw
mov
lock
sub
into
lods
hlt
push
pop
inc
cld
pop
shlb
mov
push
mov
add
jmp
mov
ret
or
sub
or
inc
pop
push
out
add
jl
mov
jp
push
pop
adc
mov
dec
scas
adc
push
gs
jb
in
or
inc
cltd
mov
das
sub
pop
cmp
adc
add
push
sub
inc
inc
pusha
enter
push
sub
xlat
jns
testb
mov
xor
lds
les
jmp
dec
pop
pop
inc
sarb
std
pop
jp
repnz
sub
inc
mov
dec
neg
dec
shlb
ss
sbb
xchg
xchg
and
mov
sub
decl
sbb
shld
jae
mov
scas
inc
stc
jmp
push
mov
xor
xor
add
or
in
jmp
jge
popa
and
leave
add
cmp
add
icebp
mov
add
push
lret
add
cwtl
add
je
dec
add
adc
in
mov
sub
repz
jns
jns
cmpl
fisubs
mov
into
dec
pop
push
push
dec
icebp
imul
mov
inc
mov
ss
lret
or
inc
inc
cmp
ljmp
push
and
rorb
jne
jmp
ret
std
dec
mov
bound
jp
dec
loopne
mov
or
add
and
sarl
sbb
push
cltd
outsb
and
std
inc
das
jmp
cmp
push
enter
xchg
adc
dec
push
jg
pop
pop
int
push
movq
movsb
fadds
addr16
shlb
add
rcr
add
xor
and
adc
mov
mov
push
aam
imul
les
lcall
cmp
push
mov
add
xchg
xchg
out
xchg
or
pushw
test
pusha
into
jmp
jae
cltd
cs
add
mov
pop
push
sub
push
xchg
sub
fsts
or
ljmp
mov
dec
push
or
dec
insb
leave
pop
push
push
mov
imul
repz
call
xlat
pop
push
jmp
sar
subb
pop
repz
dec
rcrl
jnp
mov
mov
into
sub
push
add
mov
pop
lock
cmc
mov
mul
push
mov
sbb
in
pop
push
daa
jl
mov
push
repz
xor
rorl
pop
and
dec
jo
add
shrb
xor
paddsw
inc
popa
and
aas
popa
imul
and
outsb
push
sub
jg
fiadds
push
jle
fcmovnbe
inc
and
sbb
push
cmpsb
jl
push
test
dec
jle
jg
add
sub
jecxz
pop
push
jb
xor
inc
mov
sbb
lock
add
xchg
and
movsl
jae
adc
rclb
pushf
or
push
jl
add
pop
jmp
fldt
dec
sbb
push
pop
mov
pop
lds
push
mov
daa
imulb
add
fstl
dec
cmc
jno
pop
push
test
push
mov
mov
push
rorl
fistl
xchg
sbb
add
fsub
imul
mulb
mov
sbb
push
je
dec
push
in
pop
add
test
fisttpl
loope
push
add
push
mov
inc
add
aaa
into
xor
add
adc
mov
mov
in
in
sti
and
push
test
sub
mov
pop
out
bound
or
add
sub
add
dec
jmp
ret
sub
test
mov
sbb
in
jmp
shll
mov
out
and
aas
add
mov
fsubs
and
bound
push
xchg
hlt
pop
or
pop
or
sub
push
pop
cmp
jbe
jno
mov
adc
pop
daa
push
mov
jbe
cmpsl
sub
jnp
aaa
pop
loopne
xor
je
push
push
and
inc
or
shr
in
jmp
int3
or
adc
sub
orl
pop
je
rolb
jae
daa
xor
rorl
and
sbb
dec
mov
sbb
mov
std
mov
xlat
cltd
leave
mov
mov
or
fcompl
jge
xor
or
lock
les
repnz
in
mov
or
pop
fistpll
sbb
and
pop
mov
pop
push
aas
xor
jmp
lds
and
jno
and
xor
cmp
mov
mov
ret
jle
mov
daa
mov
xor
fidivrl
shl
sub
lock
mov
push
lods
xchg
sbbb
frstor
or
test
test
loop
xchg
mov
add
loopne
add
sti
scas
aaa
mov
sbb
les
dec
inc
jle
jb
int
insb
xchg
mov
ja
pop
jno
inc
aam
jmp
add
jbe
call
bound
data16
mov
inc
pop
call
push
mov
mov
and
xchg
not
rorb
in
adc
add
push
leave
adc
adc
or
mov
out
xlat
imull
push
cwtl
movsb
jno
push
dec
push
jmp
sub
add
ret
insb
sahf
add
in
shr
test
pop
xchg
out
imull
mov
or
es
push
not
xchg
fsts
push
fimuls
addl
daa
mov
lock
addb
nop
inc
push
mov
jmp
push
cmp
sub
ds
xor
or
jbe
ljmp
insl
add
sub
or
pushf
cmp
xor
sub
xor
aam
shrl
add
repnz
shl
out
or
sti
lods
push
add
fidivl
icebp
pop
das
push
daa
or
cwtl
push
sti
add
push
mov
cs
mov
push
test
or
stc
pop
inc
pop
push
pop
jmp
subb
adc
fwait
push
cmp
pop
push
sbb
out
sub
daa
neg
out
ret
add
arpl
imull
xchg
test
pop
add
xor
pop
fdivl
out
stc
mov
ss
sahf
push
scas
js
mov
sbb
mov
nop
jg
popa
pop
adc
mov
sub
sub
ret
add
jo
popf
ja
inc
cmp
mov
pop
dec
xchg
add
jmp
pop
jbe
jmp
movsb
inc
adc
dec
add
jecxz
mov
sbb
jno
pop
jne
and
mov
or
jmp
add
std
jne
push
push
mov
shl
push
mov
jmp
and
lahf
sti
icebp
lahf
dec
movsb
dec
mov
jne
mov
aas
cs
enter
or
adc
sub
dec
xor
xor
jg
adc
sbb
lret
leave
push
jne
and
stos
add
push
or
das
pusha
lret
and
das
iret
push
orb
and
xchg
and
roll
cmp
rorb
bound
inc
jp
aas
icebp
cmp
clc
stc
adc
nop
and
das
push
dec
jnp
mov
push
mov
dec
add
jno
xor
inc
std
call
jmp
dec
mov
dec
dec
add
outsb
xor
out
shlb
cmp
incl
js
rcrb
loope
outsl
bnd
push
imul
jle
ret
pop
pop
test
cmp
dec
dec
je
loop
cmc
mov
rorb
jae
push
and
inc
and
xor
xlat
push
mov
mov
inc
shll
int
and
or
aad
jb
leave
xchg
fstps
add
inc
and
test
leave
ret
ljmp
dec
xor
dec
lds
leave
lahf
inc
das
stc
ds
or
inc
js
rorl
add
aas
fists
xor
hlt
mov
mov
outsl
mov
sahf
mov
pop
push
cmpsb
dec
pop
hlt
xor
dec
scas
pop
add
push
test
adc
xor
nop
push
pop
inc
pop
xchg
call
push
push
jmp
jb
imul
insl
pusha
sub
push
adc
or
inc
loop
je
pop
je
pop
addr16
sbb
and
push
xor
sbbl
lret
cmp
jg
dec
cmp
loope
cs
loope
mov
cld
adc
addb
pop
es
es
or
aas
mov
test
shr
adc
outsb
dec
inc
rolb
and
add
loopne
or
mov
jmp
mov
mov
mov
and
push
add
lcall
xor
scas
mov
call
cmp
mov
clc
adc
jmp
cmp
fbstp
add
bnd
out
xchg
shl
xchg
jnp
xchg
push
mov
jmp
pop
push
inc
jo
dec
aam
dec
mov
pop
sub
or
aam
pop
pop
pushf
and
shr
hlt
ret
mov
outsb
or
or
jmp
add
ja
sbb
inc
imul
or
leave
push
xchg
sbbl
int3
iret
in
xor
das
or
lret
mov
xor
cmp
rol
dec
mov
orb
push
jnp
and
push
sub
jmp
in
jmp
push
hlt
icebp
fsubs
mov
pushf
jp
pop
dec
push
stos
or
lahf
sbb
shl
sbb
sub
stc
add
dec
or
jmp
sar
int
pop
and
mov
pop
icebp
cmp
data16
jmp
add
push
jo
addl
cltd
cmp
daa
pop
push
les
clc
cmp
jmp
push
push
or
sbb
push
inc
inc
xor
fisttpll
das
cld
and
jae
into
nop
mov
loope
mov
adc
fistl
and
aaa
loopne
pop
or
mov
sbb
pop
push
xor
out
add
xor
pop
fs
scas
je
mov
pop
aam
push
add
adc
addr16
add
movsl
mov
or
jno
inc
add
je
jge
adc
sub
push
popf
inc
icebp
mov
sahf
hlt
mov
fistl
xchg
test
lcall
xchg
inc
adc
or
mov
pushf
mov
shrl
cs
popa
or
aas
jbe
cmp
xchg
pop
jnp
mov
outsl
ds
mov
loopne
movsb
adc
cmp
pop
mov
sub
dec
mov
xchg
pop
add
imul
out
dec
jne
mov
out
and
jmp
add
mov
xor
in
or
fmull
icebp
leave
or
cmp
in
jbe
es
jns
add
loopne
jmp
xor
rorl
decb
add
xor
cs
adc
lods
fnstenv
mov
inc
xchg
mov
mov
cmp
jle
xchg
movsb
bound
nop
ret
dec
test
movsl
outsl
push
imul
movsb
cwtl
or
and
mov
rolb
push
clc
dec
lds
nop
cmc
bound
stos
dec
dec
or
sub
push
mov
add
dec
push
xor
lock
adc
loope
into
pop
jle
mov
xchg
shll
push
cmpsl
jne
mov
pop
sahf
inc
les
sbb
sbb
xor
cmpl
ss
gs
and
mov
and
sbb
imul
insl
and
aas
jle
int3
push
pop
dec
pop
lods
pop
xchg
xchg
add
xor
das
pusha
jno
insb
loopne
je
in
or
mov
cmp
jmp
sbb
insl
jle
and
pop
pop
ljmp
clc
nop
jnp
sub
mov
loopne
add
sbb
das
in
mov
icebp
data16
int3
push
sti
mov
je
and
test
lret
shrl
lock
das
mov
pop
bound
or
test
push
lds
loope
jp
mov
inc
sbb
rorb
inc
adc
and
ret
pop
mov
cmp
xor
jp
enter
stos
push
roll
pop
mov
in
sbb
push
int
sub
pop
add
add
and
jns
sub
pop
pop
gs
add
iret
cmp
lods
or
xchg
dec
or
jns
mov
push
add
pop
push
xchg
inc
and
jb
and
rcl
sbb
add
cmp
xchg
mov
lods
lcall
and
jmp
push
out
testb
ffree
inc
sti
cltd
test
dec
data16
or
mov
adc
pop
dec
jl
jge
les
loop
mulb
leave
int3
mov
xor
dec
lds
jmp
or
jge
aas
out
adc
lcall
adc
push
push
jmp
adc
push
adc
sub
add
xor
and
arpl
xor
jl
fwait
push
push
dec
adc
daa
fndisi(8087
fcoml
mov
enter
lea
addb
and
jne
jl
icebp
in
or
pop
push
jb
fptan
clc
incb
lahf
and
add
out
xchg
cwtl
clc
mov
test
fs
push
test
lret
into
sti
sub
jmp
and
mov
xchg
jnp
mov
and
ja
repnz
icebp
push
mov
jmp
lret
add
mov
int
sub
push
mov
das
xchg
sbb
popw
pop
shl
or
adc
mov
jo
imul
push
cmpsb
xabort
or
scas
adc
loopne
decb
add
loope,pt
add
lret
scas
int
xor
mov
lret
jmp
push
xor
sub
cltd
push
pop
rcrl
pusha
stos
xchg
dec
push
stc
sub
test
mov
lds
test
dec
test
cmp
and
jmp
aaa
ret
ds
insl
xchg
loop
out
sub
lcall
cs
and
jne
and
test
cmp
test
cwtl
pop
inc
or
adc
cmp
sub
and
lret
inc
movsb
mov
or
inc
adcl
jecxz
ret
mov
cwtl
pushw
mov
xchg
adcl
imull
out
or
xlat
das
jmp
popa
imul
jl
popf
adc
jne
pop
popf
pop
sarb
mov
dec
cmp
pop
xchg
cmp
scas
and
lret
loop
pop
out
mov
xchg
test
les
jl
and
jae
in
mov
add
dec
jo
push
mov
jb
leave
mov
shll
mov
jmp
lahf
push
adc
sub
adc
mov
je
dec
adc
pushw
inc
sub
pusha
mov
lods
and
jns
cmp
pusha
in
and
cmp
xchg
dec
in
add
movsb
mov
pop
push
dec
jb
arpl
cmp
dec
push
jb
lods
push
mov
ljmp
pop
push
xor
shlb
jp
daa
and
mov
inc
and
push
dec
movsl
add
push
inc
push
add
jmp
mov
xor
mov
pop
je
jbe
shlb
jg
js
xchg
mov
sub
push
bound
sbb
pop
xchg
xchg
and
inc
add
push
into
pusha
inc
push
mov
adc
jmp
adc
sub
adc
dec
cmp
mov
into
mov
popf
mov
mov
jns
orb
enter
inc
mov
in
cltd
addl
jne
loope
inc
add
repz
pop
pop
cwtl
adc
popa
jp
stc
adc
mov
dec
daa
mov
push
imul
inc
push
mov
push
push
mov
push
call
insl
aaa
ret
mov
maxps
gs
ljmp
xor
xor
clc
jns
mov
jle
cmp
and
into
push
add
push
movl
pop
ss
xchg
sub
into
sbb
xchg
add
adc
xchg
sub
jecxz
loopne
lds
popf
nop
les
scas
mov
mov
or
xor
jno
mov
jge
jo
shlb
add
imul
adc
ret
in
pop
add
sar
fldl
loope
add
push
add
and
jp
cmp
pop
xchg
cli
lret
cmp
inc
sub
pop
xor
add
aas
sub
or
xor
jb
ja
stos
add
fldcw
stos
movsb
adc
fwait
push
rcrb
repz
rclb
lods
aad
mov
out
fs
call
pavgb
mov
ret
pop
mov
add
xchg
add
push
dec
pop
arpl
bound
sub
pop
mov
dec
mov
popa
inc
pop
pop
addr16
movsl
jns
mov
sbb
push
sub
enter
xchg
rol
inc
sub
dec
inc
push
add
fstpl
gs
test
loop
xchg
scas
sahf
nop
pop
sbb
add
lds
stos
adc
adc
stos
shr
dec
xorb
scas
xor
lock
mov
push
pop
and
jne
mov
mov
mov
orl
or
pop
dec
rolb
adc
test
adc
xor
pop
pop
push
sub
clc
push
adc
and
inc
push
jo
out
mov
shll
push
inc
xor
sub
and
enter
sbb
mov
xor
lea
push
pop
repz
call
cmpsl
xor
adc
dec
mov
dec
xchg
or
in
or
sub
pop
out
and
pusha
xor
sub
repnz
and
push
addr16
mov
mov
loopne
lods
mov
lea
inc
insl
inc
lds
mov
jns
xchg
inc
stos
loope
add
roll
outsl
add
pop
pop
rcrl
cs
sbb
mov
ds
xor
adc
mov
pop
ja
adc
in
and
wbinvd
imul
std
rcl
lds
ds
into
or
and
repnz
loopne
shl
daa
push
pop
pushf
or
mov
jmp
cmp
jmp
jbe
rol
jne
into
dec
mov
stos
fs
inc
ljmp
push
mov
push
mov
pop
push
stos
add
push
mov
loopne
jg
pop
out
xlat
imul
fnstenv
adc
ret
mov
andl
cmp
lock
dec
sbb
fmul
orb
mov
or
sbb
stc
sub
adc
mov
adcl
jo
add
jmp
or
adc
and
jp
mov
cli
mov
jge
insl
nop
xor
sbb
dec
push
and
dec
aas
jmp
xchg
cld
ds
xchg
sbb
pusha
sbb
lds
pop
sub
and
or
addb
pop
pop
loope
and
das
dec
cmp
adc
pop
rcrl
popa
push
mov
call
flds
jmp
out
repnz
int3
mov
mov
ds
les
mov
das
mov
rorl
mov
movsb
sbb
sub
pop
pushf
nop
sub
imul
sub
cmp
pop
mov
stos
sub
jne
pop
mov
mov
mov
out
nop
cmp
adc
cltd
inc
aas
push
bound
data16
in
in
xchg
push
mov
add
mov
ret
call
xchg
cli
test
or
pusha
pop
mov
sbb
sti
pop
fwait
sbb
shrl
xor
fldl
pop
and
mov
movsb
pop
loope
push
or
pop
fucomip
lods
pushf
sub
shlb
ret
addr16
xchg
push
sbb
inc
subb
fisubrs
jb
xchg
add
popa
insl
repnz
pusha
out
sbb
cmc
jl
push
jmp
xchg
push
in
icebp
pop
mov
std
cmp
add
rclb
xor
test
jno
sti
out
pop
mov
std
mov
nop
es
ljmp
cmp
mov
mov
jmp
arpl
call
jle
mov
jno
xchg
dec
aam
add
mov
and
hlt
add
or
push
pop
pop
jnp
imul
das
mov
cmp
jge
sub
jmp
cmp
push
pop
movl
pushf
js
out
xor
movsl
pusha
inc
mov
fs
and
or
or
add
scas
test
adc
fnstenv
test
mov
movsl
stos
bound
rorl
add
into
or
add
or
adc
fcomps
and
push
or
idivb
mov
adc
maxps
mov
add
pop
lea
xchg
add
push
mov
inc
jp
push
movb
or
push
lret
lds
mov
js
push
push
cmpsl
movb
xchg
jns
pop
push
rcll
lcall
fiaddl
iret
add
dec
sub
or
adc
lods
and
iret
testl
jl
push
adc
lods
push
xor
sub
repnz
jle
shr
stos
orb
xchg
mov
pusha
aam
sub
mov
das
fisubl
sahf
mov
fidivrs
adc
scas
mov
roll
push
xor
test
sub
out
leave
insl
add
jmp
lods
push
mov
inc
xchg
lahf
add
xor
or
or
pop
add
loopne
pop
sub
mov
cli
xchg
addr16
stc
add
cmp
imul
mov
sub
pop
adcl
sbb
jmp
xchg
xchg
add
add
in
pop
arpl
aam
cmc
inc
jo
pop
mov
push
aad
scas
xchg
jns
rclb
adc
pop
lea
pop
adcb
push
insb
or
pop
adc
or
mov
pop
das
add
mov
xchg
add
shl
sbb
in
ds
into
mov
and
or
pop
shll
js
stos
dec
push
mov
rolb
pop
ja
mov
or
push
jb
add
add
dec
cmp
shll
mov
pop
lfs
dec
loopne
cmpsb
mov
pop
push
push
xchg
add
fisubs
shr
inc
into
int3
fmulp
das
add
xlat
shl
cs
lds
lock
jle
dec
rcll
or
inc
mov
ds
out
or
pop
lock
add
mov
mov
outsl
test
cmp
negl
push
add
aad
push
and
jmp
sbb
outsb
test
popl
loopne
push
out
or
jnp
sbb
loop
dec
jbe
sbb
sub
test
das
jecxz
orl
movsb
lods
out
adc
or
test
sahf
leave
dec
lds
push
push
sbb
dec
xlat
and
mov
jecxz
xchg
sti
leave
mov
push
in
stos
mov
jg
mov
sahf
mov
pop
ret
mov
add
adc
repz
out
push
cmpsl
adc
or
push
add
mov
not
enter
das
lcall
pop
cmp
pop
stos
mov
imul
inc
pop
cmpsb
rorl
and
and
adc
mov
and
stos
inc
and
jno
adc
mov
add
and
push
mov
sub
call
add
outsb
cmp
hlt
sub
add
sub
cmp
xor
push
aad
push
mov
inc
arpl
out
addl
bound
inc
mov
mov
pop
cmc
sbb
pop
xchg
pop
and
cs
or
orl
jmp
mov
daa
inc
arpl
test
dec
fildl
movsb
and
dec
pop
or
dec
mov
jle
mov
or
push
fidivrl
fimuls
shl
and
lods
pop
mov
pop
jbe
shll
add
add
cli
out
mov
xchg
sbb
pop
push
adc
and
lahf
inc
add
icebp
xchg
js
repnz
jbe
sbb
dec
xchg
or
push
add
rcrl
jmp
mov
xor
adc
push
jb
adc
cmp
mov
mov
pushf
pop
out
push
fisubrl
add
in
js
xchg
pusha
adc
cmp
and
sbb
incb
and
test
clc
mov
push
out
mov
and
sbb
notb
pop
and
fidivrs
mov
mov
add
aad
or
popf
cli
mov
pop
push
xchg
push
mov
stos
inc
jg
jecxz
pop
push
outsl
dec
nop
call
jo
dec
sbb
dec
shrl
jb
and
mov
es
push
movsl
add
mov
jge
and
imul
jae
add
pop
inc
loope
cld
clc
cltd
shrl
push
popa
scas
and
adcb
and
orb
dec
push
mov
sbb
pushf
daa
add
sbb
les
pop
jmp
mov
pop
jp
xchg
jp
loop
les
push
inc
leave
add
stos
int
aas
subb
xchg
fwait
adc
and
inc
push
xor
jl
rcrb
sub
and
add
std
mov
jmp
push
dec
jbe
push
cmp
pushf
es
mov
mov
fdivrp
lea
loopne
repz
pop
pop
push
push
pop
shrl
or
rolb
xchg
dec
aad
push
and
lods
fisttps
xchg
jmp
cltd
or
pusha
or
mov
sub
push
pop
addb
clc
mov
imul
cwtl
frstor
addr16
ret
mov
les
xor
sbb
fisubs
add
xchg
adc
gs
add
jb
add
cmp
push
not
xchg
and
pop
movb
je
xor
jmp
jmp
lods
sbbl
jbe
rorb
rcrb
bound
jp
jmp
add
ss
mov
push
loopne
adc
addb
add
ss
es
orl
ja
pop
mov
loop
aam
pop
add
push
mov
rorl
out
jbe
nop
roll
andl
or
scas
jmp
das
jne
lea
xchg
jmp
pop
jo
addb
push
mov
mul
popa
and
cld
mov
xor
jmp
xchg
add
pop
xchg
mov
testb
sub
add
jmp
andl
fbstp
icebp
push
jmp
and
and
mov
lret
sub
lock
sub
mov
xchg
rorb
pop
shlb
loope
push
inc
in
out
pop
jg
cmp
xchg
test
push
mov
push
push
outsb
mov
cltd
or
mov
mov
mov
push
imul
dec
add
shll
dec
jmp
in
cmpl
inc
xchg
dec
and
add
sbb
mov
mov
jmp
faddp
aas
ds
das
cmc
movsl
mov
nop
leave
cmc
test
imul
xchg
rorl
mov
push
mov
xor
out
repnz
mov
repz
dec
repz
push
or
mov
sbb
cs
and
xor
pushf
stos
mov
out
les
or
sbb
mov
jle
or
sbb
mov
push
push
sbbb
xor
xor
shlb
ds
dec
lock
jmp
stc
bswap
xchg
lcall
lods
adc
adc
mov
into
rolb
jno
inc
not
subl
pusha
inc
loop
mov
xchg
notb
jo
inc
popa
scas
aas
cmpsl
dec
xlat
mov
ret
push
add
push
daa
inc
or
bswap
cwtl
lods
and
sbb
cwtl
inc
jmp
add
or
add
dec
cld
stc
repz
scas
xor
repnz
cmp
stc
add
test
mov
pusha
push
push
andb
cmp
mov
push
mov
aam
or
cmc
popa
or
pop
dec
mov
testb
push
add
or
jmp
add
push
mov
fldl2t
pop
roll
or
sub
fsts
mov
xor
inc
and
call
jb
xchg
and
mov
iret
imul
std
pop
mov
pusha
cwtl
dec
mov
mov
adc
mov
inc
push
mov
inc
xchg
add
out
pop
and
orb
pop
inc
ror
les
push
inc
sti
jl
jl
xor
pop
shl
lods
or
in
ljmp
sub
jbe
int3
out
mov
loopne
pusha
stos
and
inc
jbe
mov
and
dec
ret
mov
out
in
icebp
xor
dec
or
push
adc
or
sub
sahf
push
aas
fs
push
orl
loopne
addr16
cmpsb
jo
lahf
jl
pop
adcb
pop
rclb
adc
sub
jo
add
or
xchg
sub
or
sub
xchg
inc
jbe
pop
andb
cmp
xor
outsb
sub
sub
sub
add
cmovl
pop
or
and
outsl
sub
pop
dec
shl
nop
loope
push
mov
mov
fistl
push
add
and
jle
xchg
std
mov
pop
sbb
leave
add
in
mov
xor
pop
or
push
pop
js
daa
pop
sub
and
add
or
pop
lahf
aam
test
jg
sti
clc
loope
pop
and
sub
lea
inc
inc
sub
nop
enter
sahf
or
adc
sub
push
inc
xchg
js
or
push
xlat
mov
pop
adc
sbb
pop
psubsb
pusha
fiaddl
std
clc
neg
rcll
push
aam
dec
lahf
enter
pop
call
add
jecxz
sub
push
repz
cmp
jmp
dec
call
jbe
push
jo
and
push
repz
inc
sbb
in
clc
int3
dec
mov
pop
xchg
daa
sarb
mov
mov
xor
jnp
add
or
xchg
sub
push
dec
pop
in
or
lretw
adc
or
fstpl
jns
xchg
or
add
jbe
or
mov
lock
rcrl
ds
lods
pusha
xor
inc
outsl
dec
stos
add
sub
test
add
lods
fwait
mov
sub
mov
add
push
inc
sub
add
push
and
pop
add
cmc
cld
nop
dec
sbbb
repz
dec
add
pop
aad
lcall
fiadds
sbbb
sbb
mov
pop
fidivs
repnz
sub
jecxz
js
ret
push
jmp
push
jle
imul
mov
in
in
pop
inc
dec
and
in
mov
xchg
mov
xchg
xchg
mov
inc
shll
and
mov
scas
or
inc
lds
cmp
int3
xchg
lock
addr16
and
sub
adc
mov
cmpsl
into
insb
mov
out
cli
es
aaa
jb
pop
xor
jbe
pop
jl
adc
mov
shll
shr
imul
movsl
add
bound
fidivs
imulb
mov
mov
inc
mov
adc
mov
subl
jns
ja
dec
outsl
ja
in
cmpsl
paddb
shrb
repz
pop
shl
fildll
fwait
xchg
daa
mov
or
xor
xchg
jno
ret
mov
movsl
sbb
mov
mov
xor
add
loop
push
dec
jle
mov
sub
cmpsl
pop
add
das
in
fisubrs
jo
cmp
lods
jo
repz
scas
test
in
mov
mov
test
xchg
jb
pusha
pop
sahf
mov
ficoml
push
cmp
decl
sub
or
shll
rcrl
mov
ret
sub
mov
cmp
and
add
jmp
outsl
jb
push
xor
adc
add
in
adcb
pop
jns
aas
inc
sbb
notl
adc
pusha
and
mov
and
pop
adc
data16
pop
sbb
rorb
add
inc
or
adc
and
in
dec
mov
pop
jb
movq
mov
stos
add
push
push
imul
rorb
or
inc
dec
jmp
int3
add
push
add
cmp
push
mov
cmp
stos
add
cs
addl
push
in
paddsb
or
inc
scas
hlt
dec
or
add
sbb
xchg
xchg
push
int3
daa
jmp
mov
in
add
pop
cwtl
inc
rorb
mov
xorl
jl
testb
mov
je
ds
xchg
js
popa
sbb
rolb
gs
sub
inc
add
test
sub
orb
movsb
movb
or
dec
movsb
push
adc
mov
sbb
pop
in
aas
add
ret
gs
sub
into
cmp
adc
jg
mov
mov
or
push
cmp
stos
jbe
insb
ja
lcall
xor
and
pop
cs
mov
mov
int3
insl
xor
xor
and
mov
pop
and
sbbb
adc
mov
push
or
push
pop
pushf
cltd
add
mov
add
and
push
addl
frstor
pop
cmp
jb
and
sub
cmp
xlat
test
in
call
jp
fidivrl
xlat
xchg
or
and
push
iret
mov
cmp
or
xor
sbb
push
adc
jns
mov
sub
fs
push
jbe
in
push
int3
das
call
pop
out
addr16
xchg
push
mov
jno
mov
stos
jmp
hlt
fisubs
push
mov
jo
jg,pt
out
add
addl
pop
jmp
mov
or
add
cmp
out
adc
adcb
pop
test
int
mov
daa
and
pop
pop
in
add
cmp
pop
dec
sahf
or
jae
sbb
pop
cld
fs
sub
push
jmp
mov
neg
clc
push
dec
or
into
or
in
clc
push
pop
or
and
popf
pop
out
repz
dec
cli
nop
test
mov
mov
mov
aas
add
and
into
jmp
test
mov
jl,pt
inc
and
push
ljmp
pushf
jns
ss
or
add
sbbb
std
pop
push
stos
ljmp
add
push
mov
sub
push
ficompl
repz
add
leave
rolb
sarl
lret
lret
lea
mov
jmp
shl
jl
shrb
push
sahf
mov
push
add
xor
lock
mov
incb
sub
jmp
dec
das
inc
or
cld
test
mov
add
andl
jecxz
dec
lods
mov
les
mov
pop
xor
dec
push
mov
xchg
loopne
icebp
xchg
call
add
icebp
sbb
in
add
sub
push
gs
inc
sub
sbb
mov
lret
testb
sbb
push
add
cltd
cmp
adc
mov
ss
divl
mov
test
aam
or
adc
xchg
rcrb
or
inc
stc
lea
sahf
movsb
nop
jo
dec
dec
or
jmp
cmp
std
inc
pop
jae
jae
mov
push
into
pop
and
add
fisttpll
push
push
jle
add
adc
pushf
and
push
dec
lods
jp
dec
push
ffreep
pop
jmp
dec
js
js
or
iret
pop
jo
cmp
pop
dec
stos
xor
mov
sahf
fdivr
xor
jmp
mov
or
jmp
xor
jg
inc
lea
stc
push
mov
push
push
testl
daa
mov
hlt
dec
rorl
repz
addb
test
dec
mov
pushf
jno
jb
or
fists
call
arpl
inc
aas
into
in
push
shll
pop
outsl
cmp
pop
jg
push
cmp
lock
pop
daa
jnp
jae
push
or
pop
jbe
cmpsb
les
in
cli
in
in
dec
fwait
add
cmp
dec
dec
ss
adc
dec
nop
mov
push
jae
hlt
fmuls
leave
push
daa
pop
mov
ds
es
add
and
jmp
dec
jne
test
inc
xor
add
hlt
mov
es
ret
pusha
push
jle
lahf
mov
xchg
aam
dec
sbb
mov
pop
inc
push
xchg
push
jp
jle
xor
mov
jg
xchg
loope
jnp
clc
mov
test
xor
mov
adcb
les
andb
inc
in
inc
mov
scas
cmpl
xchg
add
jle
pop
mov
in
adcl
fimull
shr
add
or
dec
ret
or
push
xor
stos
xor
mov
mov
aas
sbb
das
xor
dec
pushf
push
dec
pop
lods
dec
xchg
sti
push
dec
pop
mov
fldl
and
jmp
je
xor
add
or
adc
je
push
adc
pop
popf
inc
pop
push
or
dec
mov
inc
sub
jle
pop
bound
mov
shr
push
mov
loopne
sbb
push
dec
adc
arpl
xchg
xor
outsl
lret
scas
and
and
jmp
daa
dec
add
mov
pusha
inc
and
jno
mov
or
sbb
mov
cmp
xchg
xchg
bound
outsb
mov
mov
mov
pop
repnz
adc
out
rorl
ret
ret
jo
and
or
jns
add
test
loop
rcll
push
lods
sub
inc
iret
lret
or
or
call
add
inc
addr16
pop
cld
cwtl
pusha
dec
clc
sbb
lds
inc
sbb
rcrb
xchg
adc
push
outsl
lret
repnz
xor
pop
pop
out
sub
and
inc
jmp
add
push
lods
push
test
or
out
clc
daa
jg
in
pushf
or
imul
or
iret
imul
fidivrs
ret
add
pop
test
adc
xchg
rorl
jecxz
in
ret
cs
pop
push
xchg
clc
and
or
aad
ret
dec
sbb
mov
fisubs
icebp
mov
xchg
les
mov
jo
inc
mov
jmp
cmpsb
ucomiss
or
push
mov
incb
xor
bound
stos
ret
push
out
lahf
mov
push
pop
xchg
rcll
cmpsb
dec
adc
jne
sub
cmpsl
jne
mov
jb
xlat
inc
mov
test
jle
cmp
sub
push
int3
into
pop
adc
adc
mov
sub
push
pop
cltd
xor
ret
xor
int3
pop
and
xor
lahf
iret
shr
call
lods
enter
pop
rorb
cltd
xor
cwtl
icebp
dec
mov
pop
mov
pop
daa
pop
in
cmp
push
adc
popf
or
mov
stc
mov
mov
scas
mov
and
add
dec
sub
cltd
loop
fadd
movsl
adc
and
mov
lahf
or
or
std
shll
lea
cmp
cld
cmp
push
push
push
addr16
dec
clc
lret
push
jno
ljmp
push
cmpsl
mov
pushf
jmp
mov
lods
pcmpgtd
cmp
mov
sbbl
or
jmp
push
rcrb
test
repz
popa
push
pop
outsb
jecxz
xor
cmp
fsts
pop
xor
scas
popa
fsubrs
je
int3
push
mov
and
jecxz
shlb
sbb
insb
push
incb
int
jne
push
inc
outsb
pushf
sub
adc
es
sub
jbe
push
pop
push
test
icebp
ljmp
xor
sbb
and
ret
sbb
push
add
push
or
in
adc
out
jecxz
cld
enter
vpsubusb
cmpb
mov
xor
push
mov
fs
cmp
push
add
rorb
jmp
data16
cli
add
ds
sbb
pop
mov
div
push
mov
xor
pop
pcmpgtw
and
xchg
mov
and
call
cmp
sti
clc
int3
lret
leave
notb
out
std
nop
lahf
or
and
shrd
jl
jbe
push
and
lret
xchg
ljmp
xchg
xor
test
jns
lret
mov
xchg
cmp
add
ret
adc
cmp
pop
fimuls
addl
loopne
mov
add
sub
ficomps
lock
cltd
xchg
push
push
enter
daa
mov
lret
inc
arpl
sub
sub
mov
or
xor
lods
xchg
ret
sahf
xor
jecxz
fdivrs
pop
inc
addr16
mov
mov
push
cs
hlt
lahf
jo
mov
divb
ljmp
inc
fbld
shl
fdivs
adc
or
shl
sbbl
jmp
adc
dec
mov
add
xor
sbb
int
stc
aas
mov
inc
xchg
fsubrs
pop
nop
imul
cmc
inc
hlt
push
insb
sub
push
sub
and
les
mov
cmp
jno
pop
rcll
or
outsl
adc
or
scas
mov
mov
adc
mov
jns
push
and
pop
popa
xor
jmp
pop
daa
mov
push
ret
bound
xor
inc
xor
cli
inc
outsl
fidivrs
add
or
sbb
sbb
or
adc
and
imul
movsl
repnz
decb
in
inc
pusha
rclb
daa
sub
jl
mov
push
push
pop
jmp
sahf
aad
mov
mov
std
inc
stc
mov
scas
push
pop
ss
xor
pop
dec
lea
jecxz
mov
mov
sub
adc
jnp
fcoml
jmp
jecxz
cs
fwait
xchg
push
ror
inc
sbb
out
movsl
pop
fnsave
sub
dec
cli
cmp
push
mov
test
push
mov
inc
mov
fimuls
ficoms
push
mov
arpl
jge
cmp
ja
pop
out
xlat
and
imulb
aas
mov
or
call
inc
jge
inc
shl
sar
jmp
adc
sti
jp
xchg
inc
mulb
jb
into
jnp
and
in
call
mov
and
mov
inc
sbb
xchg
fsubrl
mov
or
pop
ds
loope
xchg
test
pop
aam
push
mov
mov
pop
add
cltd
jmp
movsb
inc
jae
ja
push
xchg
int
mov
inc
sahf
mov
lock
add
aad
aad
or
xchg
in
push
icebp
xchg
ds
pop
pop
ss
dec
jo
pop
hlt
or
fistps
movsl
je
jb
jbe
out
and
pop
out
mov
sbb
js
push
fsts
sbb
or
add
and
pop
in
in
xor
mov
cmp
popf
pop
xlat
enter
inc
add
or
sbb
pop
call
ret
fistps
add
mov
xchg
jo
clc
inc
and
mov
vmovsldup
insb
or
push
mov
in
loopne
leave
push
data16
loope
adc
test
xor
and
movsb
xor
xor
jne
je
or
pop
nop
sbb
adc
dec
loopne
in
aad
fadd
sub
jecxz
push
movsb
dec
fisttps
dec
mov
je
push
cmp
std
and
daa
jne
int
push
jmp
push
sub
jg
dec
insl
pop
or
loop
aad
xor
push
jmp
push
push
pop
mov
and
sub
aam
dec
into
or
inc
pop
adc
xor
out
add
gs
sbb
bnd
jo
mov
sbb
dec
hlt
mov
sub
add
sub
mov
cmc
inc
and
out
xor
mov
cld
add
loope
lahf
jp
or
lahf
pop
std
pop
cmp
adc
std
push
xorl
lcall
mov
pusha
out
sahf
xchg
sbbl
add
pop
mov
popf
dec
inc
jb
pop
pop
push
pop
or
pop
data16
jp
xor
stc
cmp
popf
fcomps
jp
in
push
lret
jg
mov
testb
push
cli
pop
pop
out
xlat
mov
fs
jecxz
xorb
pop
sbb
lret
mov
mov
adc
jmp
jo
mov
sarb
adcb
add
popa
dec
add
outsb
je
or
cmpsl
pushf
adc
fiadds
xor
and
icebp
cmpsb
add
fadd
leave
pop
and
mov
inc
int3
push
adc
pushf
adc
jbe
sbbl
les
test
shrb
mov
imul
or
push
int
cmp
cmp
sti
pop
inc
mov
test
cmpsb
lods
mov
pop
sbbb
cmpsl
and
inc
xchg
add
lret
movsb
and
in
repz
mov
adc
neg
ljmp
lcall
out
cs
jo
add
pop
xor
add
or
daa
sub
clc
das
pop
add
sub
pop
pop
pop
pop
or
movsb
or
jmp
sbb
xor
imul
add
add
fldcw
pop
pop
or
adc
daa
movsb
mov
add
fldl
cmp
push
and
ror
fdivr
aam
xlat
lea
push
ljmp
insb
dec
sub
or
lds
xor
cli
mov
xor
out
xchg
and
repnz
pop
push
mov
sub
mov
dec
pop
push
in
cmp
jb
mov
adc
push
test
add
add
sbb
pop
cmpl
cmp
sbb
loopne
or
repz
pop
dec
push
adc
push
leave
add
add
sbb
nop
cmp
loop
sbb
shrl
mov
in
mov
add
inc
and
jmp
jge
cmp
fiaddl
or
pop
push
add
inc
add
mov
xor
clc
imul
jl
aad
jp
sub
add
mov
and
or
in
and
pop
jmp
push
sbbb
nop
iret
pop
add
leave
idiv
je
bound
inc
and
mov
push
lret
lock
pushf
mov
shl
sti
nop
scas
pop
or
nop
add
jg
add
repz
into
cmp
out
je
imul
lcall
ja
pop
loopne
and
cmp
mov
push
cld
mov
inc
xchg
or
enter
or
movsb
xor
push
and
push
popf
fs
sub
sbb
outsb
fdiv
pop
mov
push
pop
mov
pop
loop
inc
subb
pop
fucomp
add
sub
mov
mov
push
sbb
shll
add
inc
sub
pop
out
lock
sbb
adc
push
out
clc
jmp
mov
jl
rorb
pusha
std
inc
cmp
xchg
dec
xor
decl
sub
push
cmc
ret
js
adc
push
add
incl
bound
nop
sbb
cli
in
popf
add
test
ja
aaa
in
shrb
push
push
push
daa
iret
enter
lcall
ret
and
sub
lods
and
push
ljmp
es
sbb
loope
push
mov
cmp
xor
pmulhuw
in
in
fadds
dec
add
jbe
and
ja
cmpsb
ja
inc
and
push
cwtl
push
dec
or
cmp
data16
int
clc
scas
fwait
jp
adc
jnp
xchg
rclb
push
mov
jbe
sbbl
jmp
clc
jnp
sarb
int
scas
dec
and
dec
jae
add
cmp
push
mov
cmp
xor
adc
fs
mov
mov
bnd
aad
add
add
or
lock
jnp
add
shll
clc
sbb
insb
adc
jge
stos
sbb
mov
fwait
push
and
pop
jmp
and
out
xchg
mov
repnz
in
pop
jecxz
mov
int3
mov
mov
mov
mov
stc
insl
outsl
jmp
inc
popa
cmc
roll
pop
push
rol
incl
cltd
pop
imul
push
mov
andl
push
lods
pop
cmp
push
xlat
cmp
shlb
add
daa
jmp
repz
popa
adc
cmp
xor
ret
push
xor
scas
mov
in
sub
push
je
dec
and
jmp
daa
popa
fsub
mov
and
mov
sub
mov
xor
jg
and
int
sub
inc
scas
mov
sahf
clc
leave
pop
mov
mov
pop
ret
push
shr
pop
or
iret
dec
clc
cmpb
or
mov
push
pop
lahf
jbe
pop
push
push
int
add
daa
insb
stc
xor
and
in
or
out
mov
add
fidivrl
or
adc
jle
sub
testl
cmp
inc
jl
mov
mov
adc
or
insl
loope
cld
outsl
jg
xchg
jmp
in
dec
and
imul
dec
push
cmpsb
roll
xchg
out
in
mov
jae
shrl
fsubr
mov
jbe
mov
cmp
fisubrs
xchg
add
int3
imulb
cmp
dec
iret
iret
inc
adc
pop
jne
mov
daa
and
adc
jb
pushf
pop
push
xchg
mov
pusha
in
mov
mov
mov
lahf
pop
add
outsl
jne
bound
leave
pop
xlat
ss
jge
mov
cmc
shll
xor
cwtl
xchg
push
jmp
stos
fs
stos
lret
cmpb
cmp
dec
add
push
stos
push
push
cld
rorl
xor
cmpsb
mov
sbb
ss
sub
loope
cmp
mov
add
out
mov
xor
mov
sub
nop
sub
out
stc
out
add
icebp
repnz
push
test
out
mov
sub
push
xchg
gs
sub
pop
xchg
and
fnstcw
popa
loopne
sar
dec
push
in
adc
lock
mov
mov
int
mov
add
sbb
jg
aaa
or
sub
cmp
pop
dec
mov
adc
out
and
pop
orb
cli
imul
dec
mov
pop
lret
lret
repnz
icebp
mov
mov
outsl
call
mov
cmp
insb
loopne
inc
or
xchg
pop
xor
cld
push
dec
or
inc
mov
push
je
pop
not
mov
jge
aas
mov
xchg
xchg
fcoml
out
push
push
inc
cmpsb
sub
popf
arpl
mov
arpl
fstl
dec
add
and
pop
push
jp
jmp
mov
inc
or
aas
xorb
loop
dec
lods
mov
mov
jnp
or
add
call
aas
arpl
push
addl
jnp
dec
xorb
lods
cmp
dec
sarb
mov
jbe
inc
sbb
das
mov
mov
dec
les
sar
in
pop
mov
mov
dec
or
vpsubsw
cmp
pop
stc
adc
pushf
dec
lods
aas
xchg
sbb
add
js
les
push
or
push
mov
xor
call
loopne
shll
ret
inc
mov
idiv
das
pop
and
inc
mulb
icebp
scas
pop
xchg
adc
pop
imul
add
and
test
mov
arpl
aad
mov
cmp
cwtl
sub
test
add
neg
aam
and
fsts
mov
dec
cmpsl
jo
and
cs
rorl
add
adc
aam
ret
add
jo
loopne
pop
ja
push
mov
fcompl
push
mov
andl
sub
sub
adc
ja
cld
adcl
pop
rolb
fs
and
sahf
popf
icebp
ja
lods
sbb
mov
movsl
daa
jb
stos
cmc
int3
xor
imul
jecxz
jmp
jle
mov
cmp
xor
fwait
push
dec
mov
sub
hlt
out
cli
stos
repz
stc
add
daa
enter
push
mov
sub
sub
ja
out
mov
pusha
jecxz
xor
pop
pop
shl
and
loopne
mulb
in
jp
mov
push
popf
stc
addb
repnz
leave
outsl
mov
cmp
jo
xor
xor
fmuls
loope
or
icebp
dec
loopne
jmp
pop
sub
push
mov
mov
popf
cmc
push
xchg
mov
cmp
mov
xchg
pop
decl
in
lea
sti
push
clc
push
push
loopne
inc
dec
stos
mov
stos
mov
mov
js
lret
xchg
pop
push
es
shlb
in
mov
cs
mov
cmp
inc
in
mov
pop
sub
xchg
add
xor
int
or
or
jmp
aad
inc
loop
mov
push
xchg
cmp
mov
fbstp
pop
adc
mulb
adc
popf
xchg
push
cs
inc
mov
cs
mov
icebp
dec
push
or
inc
or
add
mov
scas
inc
into
or
stos
test
rcrb
mov
cmp
aad
mov
jecxz
lea
jmp
das
pop
shrb
add
cs
insb
pop
pop
sub
out
push
mov
pop
cmp
cmc
inc
or
loop
xchg
jbe
push
aam
rolb
push
xor
sub
push
xchg
jns
push
shl
outsb
rorb
das
add
add
xor
jmp
push
add
mov
mov
mov
shl
sub
ud0
xchg
push
in
insb
mov
lret
pop
xchg
add
cmp
int
xchg
or
jmp
inc
add
fs
mov
cli
orb
fcomip
mov
jb
add
popf
inc
pop
jbe
movswl
push
push
bound
rorb
loope
pusha
inc
out
addb
mov
or
xchg
pop
psubsw
rolb
mov
jmp
inc
pop
and
cmpsb
adc
pop
mov
mov
jbe
nop
adc
adc
bound
sbb
jno
dec
fbstp
mov
sbb
pop
push
out
into
nop
lock
mov
imul
cmp
push
repnz
or
add
xchg
ficompl
sbb
loop
jb
addr16
dec
jg
pusha
sete
mov
dec
test
jne
popa
add
jmp
add
sbb
sbb
or
cli
inc
dec
cmp
mov
leave
add
push
repnz
push
xor
jmp
pusha
repnz
push
ficompl
push
shrl
xorb
mov
push
aas
mov
xor
movl
jle
xchg
push
pusha
bound
or
xor
or
add
rolb
mov
dec
adc
adc
adc
adc
sbb
in
push
jle
or
sbb
mov
push
add
lret
or
xchg
xchg
mov
cmp
cld
push
and
adcb
adc
ljmp
mov
enter
lahf
adc
xor
negl
arpl
inc
aam
adc
add
mov
mov
jmp
add
add
call
sub
mov
xchg
add
push
ret
mov
loope
sbb
int
les
dec
dec
add
cmp
xor
data16
stc
or
cs
stos
xor
in
xchg
adc
xlat
mov
mov
mov
add
xchg
or
add
or
scas
pop
or
rcl
popf
or
leave
adc
or
fisttpll
aad
sti
movb
inc
add
filds
ss
and
sahf
and
jns
insb
add
test
test
xchg
xchg
lds
fisttpl
fdivrp
adcb
pusha
or
xchg
dec
push
js
jge
pop
or
shlb
jo
and
mov
dec
jmp
jnp
and
sub
pop
bound
roll
fsubl
xor
push
testb
dec
mov
stc
imull
idivb
adc
mov
mov
outsb
add
loope
and
addb
cld
les
orl
jne
jnp
fs
leave
push
add
test
and
mov
or
popa
adc
and
sbb
push
sub
fcoml
mov
mov
mov
xchg
dec
add
cld
call
sub
mov
jb
jge
adc
inc
sub
jne
jmp
mov
aaa
mov
add
dec
dec
or
jne
mov
mov
mov
orb
dec
xor
sub
sub
ffree
ret
inc
adc
push
push
call
inc
sub
popf
loop
add
push
mov
cli
call
push
add
imul
sbb
mov
lock
fnstsw
or
mov
fbld
or
jecxz
in
jno
mov
shl
hlt
js
or
pop
sbb
iret
ret
add
sub
jnp
cwtl
std
sbb
arpl
add
push
adc
cmp
imul
fbld
dec
lret
test
or
inc
dec
cwtl
mov
xchg
icebp
sti
cmp
mov
sub
mov
imul
or
dec
dec
std
push
shrl
pop
call
inc
push
psubsw
gs
xchg
out
jmp
fucomi
cld
mov
pop
jns
addb
jbe
hlt
pop
jmp
lea
dec
or
adc
sub
sbbl
fisubs
jmp
pop
inc
push
xor
and
adc
cmp
jle
loop
mov
scas
push
jmp
pop
add
sub
fucom
sub
adc
jle
cmp
dec
mov
into
add
fimuls
pop
test
and
xchg
shll
pop
add
mov
and
in
push
mov
dec
xchg
aam
sbb
adc
jne
pop
repnz
or
adc
sub
cwtl
sbb
icebp
call
jae
add
sub
std
fstl
sbb
and
mov
lock
push
xchg
and
int
fldenv
inc
push
pusha
dec
cli
rep
mov
xchg
out
dec
jns
mov
iret
cs
sub
xor
add
mov
sar
jmp
mov
scas
and
call
gs
adc
addr16
andb
jne
jmp
push
cs
fldl
xchg
push
add
cwtl
or
pop
jmp
push
ljmp
jno
add
ss
jbe
add
sldt
jmp
arpl
dec
popf
jb
orl
cmp
mov
xchg
mov
xchg
daa
lahf
into
sub
adc
dec
daa
pop
inc
add
mov
lahf
jo
jle
xor
inc
leave
lods
pop
sub
shl
push
add
push
push
inc
mov
testl
add
shl
mov
mov
inc
ds
pop
add
pop
mov
cmpsl
rorl
fcmovnb
inc
inc
inc
pop
xchg
push
mov
inc
jo
in
outsb
mov
inc
sti
cmp
and
loopne
imul
push
xchg
test
jmp
cmp
cltd
mov
xchg
shll
dec
ret
mov
daa
divl
pop
cwtl
and
mov
das
mov
dec
sub
pop
jecxz
pop
popa
push
cltd
or
lret
add
fucom
mov
jmp
sahf
push
and
push
sbbl
sbb
push
std
in
cmpsl
sub
jo
pop
jp
pop
aad
and
dec
pop
jl
push
nop
adc
ds
ret
add
sub
push
fwait
pop
lahf
adc
aam
mov
and
xchg
push
lret
or
add
cmp
lods
stc
and
cmpsb
in
jno
mov
div
mov
push
or
sub
mov
mov
shr
inc
ds
cmpsb
xor
pop
je
pop
jne
cmp
or
les
dec
mov
aad
jb
mov
mov
push
enter
push
push
jecxz
push
inc
adc
cwtl
sub
lods
cmp
mov
in
loope
test
testb
mov
pusha
roll
adc
add
imul
rorl
ljmp
fwait
xor
lods
adc
and
clc
jle
imul
loopne
or
mov
mov
divl
adc
scas
jns
xor
sub
push
lcall
inc
or
inc
adc
mov
sbb
cmp
mov
mov
jle
test
cli
add
adc
or
bound
lret
mov
ljmp
das
icebp
jb
stc
xor
sbbl
shr
lret
add
pop
lea
jmp
out
fs
stos
repz
fidivrl
mov
sbb
or
lods
stc
ljmp
push
rcll
add
lock
imul
cmpxchg
sbb
push
das
lret
sbb
cltd
fsubl
inc
fisubl
das
pop
pop
push
xor
je
mov
jns
add
fdivs
and
adc
cltd
subl
test
or
jp
push
mov
pop
cwtl
arpl
adc
add
jnp
in
add
hlt
pop
inc
inc
push
lods
or
mov
and
cmc
xchg
jo
insl
add
xorb
jne
lods
and
iret
pop
adc
or
push
dec
fstl
pop
push
pop
pop
es
mov
mov
and
add
or
dec
push
pop
cs
in
jecxz
mov
enter
sub
add
into
push
mov
mov
shl
sub
push
xor
jmp
xor
dec
xchg
or
imul
mov
push
or
movsb
jmp
test
jecxz
sbb
js
dec
dec
pop
loope
movsb
fldcw
lds
hlt
push
imul
fnstenv
sbb
push
sbb
shl
aam
out
ret
in
repnz
mov
pop
cmp
push
call
cmp
push
xchg
add
out
lret
out
daa
and
xchg
sbb
not
jg
sub
sbb
mov
push
addr16
arpl
repz
adc
xchg
lret
or
idiv
add
inc
rorb
adc
and
mov
out
aam
add
jl,pt
jns
adc
outsl
aad
bound
pop
repnz
jno
sub
sbb
add
add
ds
fildll
mov
sbb
add
in
jno
and
and
add
sub
loope
dec
cmp
add
clc
push
inc
push
mov
or
or
sbb
adc
dec
fiadds
push
cmp
jle
inc
scas
dec
pop
fildl
repz
sarb
jmp
inc
mov
adc
adc
fwait
dec
arpl
pop
jmp
clc
xchg
or
lods
inc
pop
pop
lods
push
sub
pop
mov
lods
clc
std
aad
scas
je
sub
pushf
ljmp
add
and
or
ret
add
sbb
or
sub
aas
push
stos
cmp
sub
jecxz
imul
cmp
xchg
mov
fsts
insl
pop
movsl
lcall
stc
mov
sub
xlat
out
bound
rorl
mov
sub
fisttps
lods
mov
xchg
or
or
lds
add
sub
push
push
les
add
xor
das
dec
sub
ds
pop
cmpsb
std
pop
adc
rcrl
out
xchg
rcrb
cmp
dec
addr16
sbb
jns
and
fstpl
pop
pop
lods
push
mov
imul
jmp
xor
adc
mov
outsl
dec
jp
nop
dec
test
sub
imul
jmp
xor
cmc
subb
shlb
cwtl
push
mov
cmp
insb
dec
aam
pop
repz
das
sbb
mov
lock
testl
jo
popf
lock
decb
inc
mov
stos
sbb
mov
out
and
cmpsb
pop
sar
ljmp
rcll
cld
mulb
or
shl
push
xor
push
mov
std
lret
cmp
cmp
je
push
pop
shl
jmp
mov
xchg
push
jns
pop
insb
subl
test
mov
xchg
cmp
arpl
pop
clc
cmp
jle
push
xchg
dec
xchg
pushf
bnd
or
das
decl
push
leave
pop
or
scas
inc
pop
xor
inc
xchg
int
adc
dec
imull
xchg
rolb
and
dec
push
pop
or
jae
andl
add
push
pop
pop
push
push
xchg
cmp
mov
push
sahf
in
pusha
sub
ljmp
into
pop
testb
rcl
ds
nop
lahf
xorb
inc
sub
ljmp
jmp
lea
mov
sub
fdivrl
popf
rorl
fs
sub
or
stos
and
mov
sbb
adc
jmp
in
inc
cmp
and
jmp
sub
xor
outsl
inc
jmp
mull
adc
fnstcw
hlt
sub
repz
jmp
imul
mov
add
mov
dec
lahf
push
push
out
mov
leave
insb
shrb
add
push
pop
mov
movsl
and
mov
mov
test
adc
push
sbb
adc
mov
into
cmpsb
hlt
lea
pop
dec
and
cli
push
leave
jl
jns
mov
cmpsb
pop
popa
mov
leave
pop
or
sub
rcrl
jno
pusha
jecxz
xor
sub
fimuls
and
push
out
jb
or
cmp
frstor
test
dec
sahf
dec
cmpsb
fs
push
adc
or
lods
sbb
pop
outsb
xchg
push
adc
testl
sbb
jmp
push
mov
sbb
xchg
and
mov
lods
ss
ljmp
adc
sbb
lods
jo
in
rorb
pop
or
repz
jge,pt
push
clc
cli
insb
fwait
or
leave
pop
mov
cmp
imul
or
mov
mov
cmp
dec
mov
cwtl
jl
jecxz
pop
or
rol
push
xlat
push
call
add
loop
xchg
push
aam
adc
xor
sub
les
xchg
cld
mov
or
pop
cwtl
inc
popa
cmp
jecxz
ss
push
dec
sbb
sub
adcl
push
xchg
je
dec
sbb
or
mov
mov
or
inc
push
cmc
pop
or
bnd
std
jnp
push
jmp
or
mov
das
inc
popf
loop
adc
sbb
push
stos
cmpsb
aas
dec
jbe
cltd
pop
mov
orb
lock
roll
push
push
push
pop
pop
and
mov
adc
sbb
add
sti
int3
xor
mov
loopne
test
imul
adc
stos
neg
sub
or
fidivrs
leave
pop
mov
sbbb
adc
inc
or
fisttpl
pop
sbb
loope
jno
movsl
test
js
cmp
dec
xor
lods
and
pusha
bound
cli
iret
cmc
jl
sbb
add
sub
fs
int3
push
ror
daa
out
sub
cmp
pop
mov
or
pop
pop
mov
cmp
sub
xor
cltd
clc
imul
xor
mov
daa
testb
mov
mov
mov
cmp
rcll
mov
inc
add
lahf
das
negl
imul
nop
jecxz
and
xchg
scas
in
lock
xchg
push
push
pop
push
adc
dec
sti
adc
lret
gs
inc
das
dec
sub
pop
ret
add
add
mov
jmp
pop
out
test
mov
fists
jg
push
jg
inc
mov
mov
testb
mov
push
add
xor
xor
xor
xor
push
sub
push
clc
cld
jge
or
pop
add
push
jp
or
ret
arpl
pop
pop
add
adc
xchg
aas
jp
inc
loop
adc
sub
jge
stos
nop
add
les
lock
or
adc
jmp
sub
dec
mov
pop
sti
mov
cmpsl
add
iret
fdiv
mov
xor
fstps
mov
out
sub
popl
arpl
sarl
mov
sbb
mov
xchg
aad
pop
dec
push
decb
jmp
add
push
mov
mov
adc
xchg
mov
pop
pop
pop
sub
sub
or
sub
dec
cmc
mov
adc
and
cmp
mov
adc
add
add
push
jae
push
cmp
jo
sbb
cltd
pop
inc
push
jge
sub
xor
jb
xchg
loopne
push
std
xchg
out
das
pop
jecxz
and
and
in
pop
test
cmpsb
add
xor
pop
mov
js
lret
cmp
mov
inc
cmc
pop
ja
push
xorl
jns
mov
jmp
bound
push
dec
pusha
sub
sbb
mov
dec
xor
dec
add
cmp
dec
inc
mov
ret
jmp
pop
mov
dec
pop
xor
mov
loope
jbe
jb
ss
xchg
gs
mov
jmp
xchg
sbb
pop
loopne
mov
orl
mov
fucomip
roll
int3
xor
in
ret
or
xchg
push
mov
adc
leave
into
out
push
pop
pop
push
cltd
cli
push
aam
jmp
mov
sbb
out
xchg
fildll
and
leave
imul
repnz
mov
out
push
xchg
cmp
rcrl
in
cwtl
push
mov
add
adc
xchg
sbb
test
test
cwtl
mov
in
mov
rcr
mov
fs
sbb
mov
pop
icebp
jecxz
es
loope
icebp
pop
or
xchg
adc
lods
jns
jmp
test
cmp
mov
jmp
lods
jo
cmpsl
hlt
jp
fcmove
add
cmp
xlat
ret
dec
dec
push
lods
and
mov
test
pop
mov
scas
adc
pop
push
pop
pop
mov
adc
jmp
mov
xor
xchg
or
mov
sbb
mov
pop
cmp
shll
out
or
mov
testl
call
jl
lret
gs
jmp
mov
inc
jmp
jge
pusha
and
aas
and
and
ret
pop
in
popa
das
negb
push
aam
sub
pop
xor
lock
js
inc
xchg
adc
dec
xor
push
test
hlt
out
iret
pop
fcmovnbe
leave
fldenv
add
insb
in
push
dec
add
in
js
pop
mov
push
out
or
cli
jmp
out
fstpl
ret
dec
or
jge
inc
fsts
push
les
in
incb
out
roll
fst
in
add
xchg
xchg
pop
push
insb
addr16
testl
out
push
dec
push
dec
mov
add
sub
mov
push
pop
clc
test
xlat
popf
pushf
lods
mov
leave
add
xor
jns
js
xor
dec
popa
rolb
dec
fdivrl
movl
adc
push
sub
adc
mov
pusha
push
mov
nop
xchg
in
pop
nop
xchg
jae
xor
cmpsl
or
push
mov
jbe
dec
dec
xor
sbb
ja
push
mov
mov
and
mov
xchg
add
mov
mov
js
ljmp
shl
xor
pusha
push
sbb
repnz
mov
ficoms
js
inc
mov
mov
push
push
or
dec
push
mov
inc
or
shlb
fnsave
cwtl
xchg
dec
pop
xor
ret
int3
pop
mov
mov
pop
xor
leave
add
adc
add
into
std
lcallw
call
outsl
jae
int
or
decl
inc
mov
pop
inc
dec
push
xor
pop
insl
jb
inc
and
pop
jmp
adc
jnp
pop
outsb
sub
gs
mov
fdivs
rclb
pop
dec
je
or
pop
jle
fidivs
roll
xchg
inc
adc
ss
xlat
insb
out
or
add
add
xlat
mov
out
xchg
cmpsl
mov
sbb
pusha
jno
mov
xchg
jnp
lock
cwtl
sub
or
add
subl
inc
mov
sahf
jecxz
inc
xor
jnp
adc
aad
inc
dec
push
jmp
cld
cmpl
cmp
lock
loop
clc
add
mov
insl
xchg
jae
dec
cmp
jl
adc
or
stos
cwtl
sbb
add
pop
mov
or
into
fcmove
jnp
jo
mov
out
mov
mov
mov
outsb
adc
cmp
cwtl
push
xor
adc
add
add
cmp
rcr
jmp
or
xor
les
cmpsl
or
lcall
pop
dec
sub
and
mov
push
push
dec
dec
int
add
push
mov
push
leave
divl
mov
pop
dec
push
pop
dec
aaa
push
dec
cmp
jge
pop
or
cmp
lods
jmp
test
imul
add
add
mov
push
rcrb
xchg
add
xor
flds
loope
inc
mov
stc
mov
and
insb
outsb
push
jmp
sub
dec
mov
lret
cmp
sti
outsb
into
cmp
dec
scas
mov
or
mov
mov
pushf
test
dec
dec
and
out
inc
cmp
or
jg
std
imul
pop
testl
rcrb
mov
add
aaa
sub
lret
inc
or
and
mov
pop
aaa
push
or
pop
mov
dec
ds
les
daa
popa
aaa
mov
rclb
and
sub
cli
jg
sahf
xor
loope
bound
jmp
test
arpl
idivb
loop
iret
push
test
jnp
mov
or
push
pushf
adc
std
adc
cli
stos
mov
push
shll
jmp
sub
add
cwtl
cmpsb
cvtdq2ps
jnp
jl
sub
push
roll
xchg
and
cltd
sub
repnz
pop
addr16
jmp
cwtl
or
gs
push
mov
push
int
cmpsl
push
pop
aad
in
xor
xlat
int3
inc
test
aaa
call
cld
push
rolb
insb
cmp
ljmp
and
pop
jge
dec
adc
insl
pop
ss
or
repnz
mov
stos
dec
push
jae
scas
fsubrs
adc
inc
or
xor
jmp
xlat
iret
ljmp
pop
sti
mov
loopne
sub
or
cld
adc
lock
js
sub
xor
mov
int
inc
lods
jecxz
jne
pop
sahf
cmp
fbld
les
movsl
lret
sub
loop
add
clc
add
imul
jg
add
insb
loopne
pop
clc
adc
mov
fisttpll
push
in
lahf
adc
xor
mov
popf
pop
mov
sub
pop
or
pop
ret
imul
adc
dec
jmp
xlat
xor
imul
pusha
sub
dec
ja
sub
mov
jmp
xchg
movsb
lahf
gs
sbb
mov
adc
cwtl
mov
push
xchg
push
xchg
popf
incb
not
xor
loope
lret
push
mov
mov
neg
adc
inc
and
xchg
add
stc
out
fcmovu
sbb
jns
jno
xchg
in
mov
dec
jmp
call
add
fwait
dec
pop
test
aaa
add
es
xor
push
ds
mov
jmp
sti
enter
test
mov
rorb
and
sub
add
push
xchg
subl
out
add
inc
test
add
jecxz
ret
mov
add
jecxz
add
cs
sub
js
ja
push
jecxz
push
mov
add
xor
pop
push
loop
shlb
fidivl
sbb
and
mov
popa
ss
mov
fcompl
imul
lods
daa
push
jns
es
mov
lcall
aam
sub
cwtl
mov
adc
fisttpl
fstps
jmp
leave
in
jle
adc
aad
ljmp
jns
dec
pop
mov
push
adc
sub
and
pop
push
cmp
arpl
pushl
mov
or
dec
push
cmp
ficoml
inc
jmp
push
dec
cmpb
sub
lret
jmp
imul
or
push
add
sub
sub
pop
incb
inc
int
pop
and
fmuls
lret
insb
pop
hlt
lret
jb
push
cwtl
adc
movsb
xlat
loope
mov
push
div
inc
inc
xor
mov
out
jl
jo
cmp
add
je
addr16
adc
jmp
fldenv
jns
pop
or
push
mov
ss
hlt
clc
sub
faddp
xchg
sbb
leave
push
icebp
jl
pop
pop
not
cmp
ret
xor
insb
mov
lds
scas
fsubs
dec
dec
lcall
fiaddl
inc
adc
cmp
adc
shlb
xlat
pop
lods
cs
stos
jns
mov
sbb
pusha
push
lret
sbb
lock
or
add
dec
popa
push
cmp
fadds
js
add
aam
adc
movl
jmp
cmp
cmp
mov
add
adc
and
pop
hlt
stos
hlt
pop
push
mov
in
lods
dec
xor
out
pop
cld
mov
aam
pop
or
mov
and
ds
xor
imul
ror
and
pop
pop
imul
imul
push
or
mov
jl
daa
lret
push
addl
cmp
mov
pop
pop
loop
pop
bnd
jecxz
sbb
pop
push
pop
test
or
cwtl
aad
push
xchg
imul
lahf
pop
aam
fistpll
push
pop
add
loopne
mov
mov
xor
ljmp
shll
sbb
pop
pusha
xchg
add
and
xlat
adc
jae
push
jmp
push
push
push
sbbl
cmp
and
movsl
pop
aaa
loopne
xor
mov
call
push
iret
into
mov
subl
pop
pop
push
js
sbb
jecxz
sbb
pushf
iret
inc
inc
xchg
pop
daa
adc
iret
addr16
sub
ret
push
adc
lods
pop
and
mov
ljmp
or
cmp
es
pop
and
pop
icebp
repnz
scas
mov
xor
outsb
cmc
int
mov
in
xor
js
and
xor
cld
jg
add
test
out
cwtl
mov
mov
cmpsl
or
shrb
ja
shlb
bound
pop
sub
sub
test
out
pusha
cmp
xor
mov
xchg
or
adc
mov
dec
loop
leave
push
cmp
negb
pop
pop
ror
lahf
call
push
push
pop
imul
dec
fisubs
sbb
add
fstpl
sub
mov
int
sub
jg
fsubrl
imul
dec
inc
out
sbb
mov
mov
add
xchg
ret
sti
popa
push
add
js
sbb
in
out
ds
inc
pop
cmp
pop
cmp
cli
cmp
sbb
jmp
ret
cmp
das
lock
xor
es
pop
push
push
lock
push
adc
lret
movsb
scas
lcall
sbb
add
mov
or
loopne
imul
mov
jbe
aad
das
dec
das
insb
and
iret
push
cltd
test
rorl
pop
addb
testb
icebp
test
je
mov
mov
mov
sbb
push
or
adc
push
jmp
cmc
out
fxch
aas
mov
sub
push
sub
mov
cmp
sub
dec
stos
pop
or
jmp
movsl
je
clc
lds
popf
inc
ret
pop
cmc
sub
ljmp
dec
push
add
into
mov
mov
or
adc
push
adc
addb
xchg
mov
xor
pop
dec
data16
or
fildll
pop
aam
rorb
push
push
lret
ret
mov
rolb
sub
testl
xor
lods
mov
leave
jo
in
aaa
or
outsl
inc
sbb
dec
dec
fwait
pop
clc
push
lock
mov
pop
jmp
mov
or
data16
adc
pop
adc
pop
and
repnz
xor
xor
stos
nop
lds
push
xor
cmpsl
sarl
fwait
in
jmp
or
push
addr16
adc
pop
add
xor
and
push
pop
or
adc
push
and
fmuls
push
test
inc
dec
xchg
insl
jne
pop
test
loope
xor
das
push
and
pop
xlat
aad
cli
nop
lea
pop
in
inc
bound
push
nop
xor
shr
push
mov
jmp
mov
fiaddl
push
cs
sub
inc
xchg
lods
jge
hlt
mov
insl
xor
lret
add
or
js
jae
jmp
sbb
outsb
lret
setb
repz
mov
je
xchg
pop
xchg
sbb
mov
jmp
mov
sub
xorl
inc
mov
jnp
pop
sahf
pop
xchg
lods
out
xchg
repnz
mov
jg
push
shrl
pop
ret
adc
stos
xor
push
iret
add
sub
push
mov
daa
push
xchg
sub
arpl
cmp
jb
hlt
push
ret
push
mov
cld
add
shlb
pop
subl
loope
jnp
nop
add
adc
adc
neg
fmull
add
movsl
mov
sahf
and
loop
int3
cmpsb
mov
loope
rolb
repnz
mov
int
cmp
push
push
jo
mov
jmp
loop
and
or
add
jae
cld
or
and
or
push
xchg
inc
xor
lock
pop
mov
inc
add
call
mov
adc
mov
xor
add
and
and
cs
decl
pop
sbb
add
in
add
or
jl
or
jae
fs
mov
int3
mov
sbb
orl
mov
xor
push
xor
jbe
sbbb
mov
js
add
xchg
notb
push
pop
add
sbb
fidivrl
xor
xchg
cmc
and
or
enter
adc
pop
xor
and
shl
adc
add
cmp
outsl
orl
stos
jb
lret
faddl
or
orl
test
cs
pop
or
in
lcall
mov
mov
jmp
xor
dec
jb
xor
xor
call
mov
or
arpl
repz
int3
mov
xor
fldenv
add
movzbl
ja
inc
leave
and
push
mov
nop
shll
bound
mov
hlt
cmp
out
pop
add
push
xor
stc
stc
sub
test
movsb
xchg
icebp
or
xchg
xchg
inc
mov
cmpsb
cmp
xorl
push
and
loopne
mov
and
or
pusha
dec
jns
cs
jmp
fwait
dec
or
dec
mov
sti
inc
mov
sbb
cmp
sbb
dec
mov
jp
iret
jo
push
adcl
jns
sbb
push
inc
pop
xor
add
and
inc
aam
push
in
add
jns
ficoml
lea
loope
xchg
sbb
cmpsb
xor
pop
insb
mov
pop
pop
push
int
ret
lret
aas
imul
cmpb
xchg
test
ljmp
cmpsl
cltd
push
icebp
shrb
add
pop
inc
push
jbe
add
push
sub
push
ret
call
je
fs
fs
mov
rolb
push
pop
sub
cmp
mov
inc
cmp
xor
and
bound
call
adc
in
in
sbb
or
push
das
add
lds
mov
cmc
mov
jmp
jmp
mov
inc
into
hlt
inc
or
mov
in
filds
add
fiaddl
je
or
add
cmp
pop
adc
push
add
mov
mov
jp
xor
jo
or
adc
and
shll
int
inc
movsb
or
pop
pop
jge
add
sbb
inc
mov
dec
enter
jmp
mov
sub
cmpsb
pop
push
bound
mov
mov
and
xchg
and
fs
pop
ja
adc
in
add
cmp
bnd
js
or
cs
scas
jnp
pop
add
test
push
mov
mov
jno
add
or
mov
cmp
cmp
add
ss
cmp
repz
and
pop
pop
sub
jmp
add
sub
dec
pop
jmp
ja
xor
shr
popf
out
jns
js
call
adc
iret
cmpb
push
add
ds
sub
out
push
mov
sub
sti
mov
mov
dec
or
adc
movsl
pop
or
lods
sbb
imul
call
pop
pusha
or
filds
or
push
or
and
jmp
adc
mul
scas
ljmp
add
cmp
sub
fnstcw
rol
xlat
fwait
lret
ficoml
jns
push
roll
test
or
xchg
jmp
adc
add
push
adcb
popf
xchg
mov
loop
add
push
push
pop
sub
sub
ret
mov
cmp
cmc
mov
nop
outsl
sbb
add
shlb
cltd
outsl
lods
mov
xor
or
push
sub
pop
das
and
lods
pop
cmp
dec
sub
xchg
or
arpl
lock
fldt
mov
adc
lods
stc
adc
jmp
jle
push
cli
adc
xchg
shll
pop
lahf
lock
or
push
xor
adcl
xor
enter
jecxz
sbb
out
movsl
pop
clc
mov
pop
sbb
ds
rorl
enter
add
pop
pop
and
xchg
mov
sbb
push
pop
push
mov
ret
and
inc
ss
jmp
or
cwtl
orb
and
dec
std
mov
push
and
inc
test
add
jge
mov
xor
and
mov
adc
push
mov
rol
push
mov
daa
mov
aaa
sub
test
adc
or
ret
cwtl
xor
shrb
cmp
in
popf
mull
push
es
rep
or
pop
push
add
pop
sub
vpmadcsswd
cmp
rolb
or
iret
leave
imulb
shlb
push
fwait
loope
lret
pop
pop
repnz
jmp
popl
or
xor
pop
push
call
push
add
jmp
out
cwtl
cmp
inc
rol
mov
or
adc
arpl
out
or
jg
jne
xor
add
xchg
orl
xchg
push
mov
jb
or
sub
mov
adc
sbb
cwtl
push
or
jmp
xor
jne
pop
mov
mov
jmp
sar
xor
cmp
popf
subl
cli
push
rolb
jg
xor
xchg
roll
push
imul
fadds
loope
fildll
inc
dec
push
mov
inc
jl
sbb
jmp
es
mov
dec
cltd
mov
cld
cmc
pushf
divl
fldcw
xor
aad
mov
push
dec
outsb
mov
std
cmp
movsb
cmp
pop
sub
pop
push
inc
shr
outsb
cmp
pop
hlt
add
adc
ret
jmp
mov
add
loopne
or
sub
outsb
push
sbb
nop
adc
xrelease
xchg
sti
xor
xchg
jmp
scas
popf
xchg
cli
jb
scas
test
loope
lret
add
mov
cs
pushf
ds
jo
push
aam
mov
arpl
jbe
es
std
cmc
xor
add
or
or
xor
mov
repnz
mov
jnp
rcrb
dec
es
pusha
sbb
inc
xor
dec
inc
cmc
cli
dec
pop
adc
lock
ja
push
and
mov
jno
clc
gs
cmp
add
outsl
mov
mov
lea
mov
leave
in
ljmp
jbe
scas
inc
mull
cs
add
jmp
and
ficompl
mov
mov
sarl
xor
dec
ja
add
outsl
sub
jmp
add
xor
outsb
dec
sahf
cmpb
sub
inc
push
fcoms
je
insb
xchg
jmp
jge
pusha
aas
adc
dec
in
rcll
jns
push
mov
daa
mov
pop
aas
or
mov
mov
or
pop
iret
mov
and
sub
hlt
testb
inc
jle
cld
int
cmp
adc
jne
mov
test
imul
outsl
mov
pop
mov
out
push
loope
push
push
scas
jmp
sti
mov
shll
imul
adc
sub
loop
or
shrl
sbb
aaa
xor
cs
adc
shl
push
repz
mov
and
xor
jmp
in
xchg
push
dec
sbb
in
scas
je
out
mov
ss
jge
out
push
movsb
and
jg
or
loopne
js
or
or
ss
or
dec
mov
pop
dec
xor
lods
out
xor
pop
xor
sti
jo
lds
ja
dec
or
mov
adc
mov
pop
loop
leave
outsb
cmc
iret
sub
sub
push
aad
cld
mov
cwtl
and
enter
sub
add
fwait
pop
stos
inc
mov
into
or
jle
test
sbb
out
stc
push
pop
lods
sbb
dec
sbb
rcll
sub
inc
push
imul
lret
inc
shll
aad
push
sub
les
das
xchg
shlb
enter
and
loop
mov
nop
mov
ret
jno
add
mov
or
xchg
ficoms
add
not
ljmp
mov
or
loopne
and
popa
pop
add
mov
imul
cmp
push
push
sbb
or
pop
mov
lret
sub
adc
jo
lock
mov
and
pop
pop
jmp
pop
rol
pop
movsl
dec
jmp
dec
lea
push
popf
inc
pop
int3
or
or
roll
shlb
sub
sub
xchg
lods
pop
call
xchg
imul
lods
push
or
or
jge
dec
pop
mov
xchg
and
and
xor
jmp
out
push
and
call
call
popa
mov
or
jl
push
or
test
not
push
mov
push
dec
sub
inc
add
dec
sub
cmp
mov
pop
stos
dec
push
and
repnz
pop
jne
sub
cmp
loop
cmpsl
leave
incb
pop
les
inc
push
pop
push
adc
mov
daa
jb
pop
mov
sbb
loopne
outsb
in
sub
jmp
ret
sbb
mov
imul
lock
mov
cltd
repz
add
pop
popa
pop
add
mov
in
pop
movsl
jmp
lods
mov
adc
outsl
roll
sbb
mov
cmp
mov
ljmp
mov
ds
mov
les
sub
jmp
test
sbb
pusha
adc
xchg
jmp
mov
popf
or
sbb
fdivrl
dec
daa
test
jno
add
stc
testb
add
or
jae
inc
jmp
out
in
fadd
sub
out
jecxz
sub
minps
sub
jle
xor
rol
add
jne
jecxz
push
cs
jnp
stos
sbb
jmp
mov
cmp
mov
mov
jb
push
in
out
mov
iret
gs
loop
pop
insb
mov
adc
bound
dec
mov
add
shlb
in
dec
mov
xchg
pop
pop
popa
flds
mov
je
cmp
or
push
addr16
orb
mov
insl
cld
sbb
pop
cmp
cmp
loopne
movsb
aad
push
decb
and
and
lods
push
inc
sub
negb
sub
sub
add
xchg
scas
je
sub
out
out
jle
std
add
repnz
out
add
push
pop
scas
imul
test
xor
pop
mov
and
mul
cltd
ja
lcall
out
mov
gs
xor
repz
lret
cmp
push
fisttpll
dec
xchg
inc
jmp
push
jge
add
xor
cmpsl
dec
jmp
insl
test
outsl
insl
ss
jns
add
xchg
adc
add
cmp
adc
jg
imul
push
bound
sub
das
mov
add
mov
push
hlt
or
mov
sti
sbb
and
or
out
cmc
or
or
and
or
dec
add
mov
push
adc
adc
jl
push
seta
sbb
push
out
push
mov
fcoms
loop
js
cmc
ret
dec
loop
pop
iret
or
xor
mov
pop
fnstcw
sar
or
sbb
jne
or
inc
sar
sub
cmp
cmc
mov
dec
daa
fneni(8087
inc
push
cltd
dec
pop
repz
adc
pop
pop
test
ljmp
add
mov
jg
fisttpll
add
inc
into
xor
ret
fs
adc
dec
ss
clc
pop
sub
rcrb
jmp
test
int
xor
fstl
scas
push
jle
int
mov
pop
push
and
or
pop
pop
ljmp
outsl
pusha
inc
inc
imul
iret
lea
sbb
cmp
add
xchg
lock
out
lret
pop
pop
bnd
shl
fstl
xchg
push
mov
and
jge
cmp
das
lods
ljmp
bound
loop
push
xor
xchg
jnp
add
aaa
subb
or
xchg
add
iret
xor
ss
sbb
dec
pop
push
es
testb
loop
jne
add
dec
shll
cvttps2pi
lods
rcrl
pusha
popf
insb
ret
push
mov
xchg
cwtl
xchg
dec
add
fstps
inc
push
push
inc
pop
pop
jmp
or
add
ret
movsb
xchg
divl
in
pushw
mov
out
les
ljmp
dec
jmp
scas
pop
adc
cmp
lds
test
stos
mov
mov
sti
pop
sub
jecxz
sarl
xchg
or
das
sbb
jb
std
xor
mov
dec
scas
cmp
sub
mov
xor
pop
mov
cmp
loop
dec
lret
sbb
push
dec
dec
jnp
mov
adc
pop
mov
ljmp
lds
arpl
cmp
jne
int
out
popa
sarb
pop
xor
lret
dec
push
test
add
mov
pop
mov
prefetch
or
jmp
call
push
push
push
repnz
jo
das
xor
ret
pop
xchg
adc
add
test
sbb
push
test
add
xor
in
testl
jbe
cmp
bnd
sahf
mov
and
cmp
pop
jg
movsb
mov
push
aaa
nop
add
jg
pop
jmp
sti
sahf
mov
add
les
dec
pop
mov
pop
ret
sbb
mov
and
imul
addr16
sahf
mov
ret
add
bound
mov
in
push
movsbl
div
repnz
adc
out
add
and
loop
jb
aaa
dec
add
or
shll
sbb
jo
outsl
shrl
mov
cmc
lods
inc
ret
fistpll
popf
pop
mov
rcrb
and
cs
mov
mov
or
cmc
aam
sbb
add
std
ds
shll
nop
push
loope
push
jmp
jne
and
jns
push
xor
mov
cmp
rorl
iret
loop
ja
pop
jns
subb
sub
add
je
mov
ja
pop
mov
sbb
or
pop
loopne
mov
repnz
jmp
loopne
andb
repnz
push
push
xchg
cmp
jmp
add
add
lock
adc
lcall
adc
shrl
rclb
sub
dec
xchg
jns
lret
js
add
mov
test
pushf
inc
sub
ja
push
jge
mov
rcl
jne
popf
push
push
in
fs
sbb
add
inc
in
sbb
lock
and
pop
mov
lods
jle
hlt
mov
nop
inc
or
jmp
ret
adc
push
lea
mov
lcall
xor
pop
mov
push
jnp
adc
ret
push
push
icebp
mov
mov
imul
jo
imul
xlat
cwtl
lods
jmp
ljmp
add
es
pop
jg
hlt
inc
and
fs
mov
push
or
insl
jmp
pop
push
mov
gs
pop
and
popf
add
imul
mov
pop
scas
in
add
and
xor
jmp
inc
sub
mov
sub
dec
es
mov
mov
jge
fdivs
and
adc
shrb
dec
es
cmp
jmp
pop
mov
push
cmp
push
enter
pop
inc
push
jl
leave
insb
adc
test
enter
ljmp
clc
pop
mov
shrb
sbb
sbb
mov
faddl
push
push
jne
push
mov
sub
add
add
sbb
pop
cwtl
inc
jp
inc
nop
add
std
test
ret
pop
add
jno
or
pop
mov
push
mov
sbb
or
test
or
loopne
shlb
repnz
xor
pop
cli
xor
aam
dec
fstpl
data16
cli
jl
dec
mov
mov
adc
push
std
repz
clc
mov
push
mov
cmp
jmp
and
jnp
push
mov
jno
lret
data16
cmp
jecxz
and
mov
bound
xor
adcl
xchg
mov
fildl
cmpsl
repz
lret
jbe
push
pop
xchg
sub
jmp
jae
in
out
push
pop
pop
subl
sub
or
pop
xlat
lret
add
or
dec
mov
repnz
sub
sub
mov
test
jae
or
xor
aas
loop
leave
or
inc
sar
rorl
xchg
std
xor
iret
lahf
add
xchg
sarl
adc
xor
flds
ret
adc
xor
stos
mov
pop
movsb
popf
adc
or
jle
cmp
mov
add
dec
jl
pop
sahf
or
jg
xor
nop
push
inc
dec
movaps
rcll
nop
cmp
push
js
arpl
popf
daa
sbb
dec
mov
mov
inc
jl
repnz
mov
or
loop
sahf
scas
cmpsb
mov
and
jnp
mov
ljmp
mov
cli
pop
dec
repz
or
push
mov
push
ret
sub
jbe
enter
mov
cmp
sbb
dec
rcl
pop
push
mov
pop
xor
pop
js
adc
and
mov
dec
pop
popa
push
out
movsl
sub
jns
ret
mov
sub
outsl
stos
add
mov
mull
jmp
dec
popf
push
xorl
sbb
xor
scas
sbb
jns
incb
lret
pop
dec
and
push
jo
xor
and
mov
mov
xchg
jno
rcr
ja
pushf
movsb
add
loop
cmp
test
repnz
xor
jle
test
lods
clc
sub
xchg
jg
cmp
cwtl
in
roll
and
mov
js
lahf
hlt
popf
push
add
insl
dec
or
movsl
call
pop
addl
or
imul
lret
cmpb
pusha
sbb
sub
push
repnz
add
lods
push
push
daa
jnp
jb
mov
sub
inc
or
aad
shll
fcmovnb
cmc
jmp
daa
lea
scas
in
add
push
push
push
mov
or
pop
movsb
pop
adc
and
xchg
inc
decb
cli
sbb
mov
sub
arpl
xor
push
add
or
inc
shr
hlt
in
in
sbb
insb
fiadds
rcrb
jmp
leave
dec
loop
jne
insb
mov
dec
lods
in
push
pop
mov
xchg
jmp
leave
fistps
dec
bound
out
je
add
popl
cld
xor
jns
jmp
movsb
scas
add
and
push
clc
arpl
jmp
js
sub
mov
mov
cmc
mov
and
mov
jecxz
lret
dec
in
xchg
dec
xchg
movsb
sahf
sub
inc
fadds
sahf
imul
flds
mov
outsl
adc
pop
in
inc
lock
mov
cmp
sbb
int3
in
cld
cmp
stos
sub
pop
stc
xor
int
adc
jmp
jge
push
adc
sti
sub
dec
out
and
in
inc
add
int3
inc
jmp
andl
cwtl
sbb
jno
arpl
push
daa
inc
push
lods
ret
and
add
sub
add
push
mov
loop
lock
fs
and
inc
mov
loope
and
stos
or
mov
adc
inc
and
insl
add
push
add
loope
in
inc
or
cmpsb
mov
daa
ret
ds
pop
or
in
stos
outsl
cmpl
add
add
mov
dec
rolb
loop
mov
sub
int3
cmc
xor
ljmp
push
xor
std
icebp
mov
loopne
and
addl
jle
xchg
inc
std
outsl
dec
xor
and
dec
mov
or
jmp
bound
pop
test
jbe
int3
xlat
mov
jmp
stc
adc
in
inc
jle
hlt
sub
test
mov
mov
and
cwtl
js
cli
mov
pop
push
add
adc
jge
pop
jecxz
jge
dec
mov
mov
adc
fstpt
imul
pop
sti
sub
xor
inc
in
mov
out
add
inc
pusha
test
jle
jb
add
hlt
pop
mov
popa
nop
inc
add
pop
push
push
jno
imul
dec
push
movl
mov
pop
clc
sbb
dec
lods
sarb
pop
in
adc
or
xchg
push
mov
xchg
inc
mov
jmp
test
scas
mov
and
dec
jge
or
cmc
pop
push
pop
add
sbbl
or
adc
jne
leave
push
and
sub
sbb
or
adc
lods
aad
dec
push
mov
cs
mov
sub
into
add
adc
pop
dec
and
pop
hlt
mov
nop
sub
test
lret
loopw
insb
aas
jl
xor
xor
push
pop
push
adc
sub
lret
fstpl
cmp
push
pop
inc
inc
adc
jnp
add
sbb
ficompl
push
mov
jmp
push
inc
add
in
mov
or
jecxz
xor
jmp
xchg
iret
lret
lock
ds
xor
push
cli
insb
lret
and
xor
ds
pop
sub
or
xor
std
hlt
pop
pushf
scas
and
insl
popf
out
cli
dec
push
jp
rcr
jecxz
xor
pop
jb
or
arpl
loop
mov
sub
jns
aam
jp
inc
inc
jmp
test
addl
loop
jnp
int
subl
sub
xchg
mov
push
sub
dec
jl
or
or
js
les
jo
cmc
and
das
sub
xchg
leave
and
jno
ret
add
mov
sub
stos
pop
xchg
sub
fildll
cs
ja
or
sti
dec
fldl
cmp
jns
daa
fsubr
pop
mov
push
or
es
jecxz
test
or
add
xchg
jmp
jl
jmp
cli
pop
int3
add
in
sub
lds
rcll
inc
faddl
pop
aad
mov
push
and
jmp
sbb
inc
imul
ss
addr16
cmc
inc
test
add
add
mov
es
repz
push
sub
xor
jb
dec
enter
xchg
mov
mov
ret
sub
adc
or
jle
mov
loopne
xchg
rorl
inc
clc
jecxz
jns
jmp
orb
addr16
fidivs
push
pop
cmc
insl
testl
add
addr16
and
pop
add
ret
xlat
pusha
shlb
cwtl
lahf
push
mov
dec
paddw
rol
lods
mov
adc
daa
jmp
pop
es
add
or
push
imul
or
cwtl
ss
adc
loop
les
dec
rol
jnp
ret
test
repnz
mov
mov
mov
mov
sbb
or
out
and
jmp
lret
ret
cmpsl
cmpsl
xor
es
add
push
jg
jmp
xchg
fisttpll
cmp
cmc
push
push
pusha
cltd
scas
mov
pop
fmuls
ja
jge
pop
das
jmp
adc
add
cmpsl
or
mov
lock
adc
inc
repz
or
xchg
or
sbb
xor
es
add
push
push
mov
lcall
cmp
jle
or
rorb
call
rcr
push
sti
xorl
cld
cs
push
add
or
adc
add
push
lock
jb
xor
push
and
js
sub
insl
dec
push
xor
jmp
outsb
xlat
jg
fstpt
mov
push
scas
add
inc
and
push
jp
insl
mov
push
cmp
lahf
lods
jle
mov
jmp
and
outsb
xchg
xor
pop
movsl
repz
sti
bound
and
jp
jmp
fdivrl
lock
xor
testl
daa
stos
in
sbb
mov
push
std
xchg
xchg
push
pusha
pop
mov
sarl
add
popa
dec
and
inc
mov
lret
pop
mov
fnstsw
inc
xchg
aaa
pop
jmp
into
cmp
adc
sub
cmc
inc
or
xchg
push
xor
sarb
mov
sub
mov
mov
push
repnz
xlat
enter
and
jno
mov
ret
jg
out
and
imul
pop
dec
push
jmp
push
push
push
or
jae
icebp
or
push
inc
or
daa
sbb
fldenv
mov
loop
ret
imull
mov
add
pop
add
popf
and
push
movsl
mov
mov
fistpl
pop
out
dec
mov
sub
mov
jmp
das
in
add
cmp
add
cmp
test
or
imul
pop
and
rcrl
xchg
das
jb
cltd
lds
inc
add
add
aas
das
inc
jmp
add
xor
fistl
pop
jnp
aam
loope
ljmp
or
push
aaa
jp
pop
xor
fsubrs
popa
sbb
add
mov
enter
jg
dec
sbb
pop
push
cmp
dec
mov
or
movsb
mov
repz
mov
shr
pop
inc
icebp
cmp
je
mov
add
negl
cmp
jo
push
dec
mov
mov
xchg
test
xchg
and
into
push
inc
add
pop
cwtl
pop
out
loopne
daa
inc
or
imul
mov
xchg
pop
test
ja
fnstcw
pop
movsl
sub
mov
pop
sbb
jp
out
addb
fisubrs
sti
insb
mov
test
or
xchg
adc
mov
andb
mov
mov
add
jmp
bound
or
sub
pop
ret
adc
mov
sub
pop
pop
fldenv
mov
int3
cmp
ds
xchg
adc
or
mov
xchg
rorl
cmp
xchg
lds
mov
std
dec
lock
jb
rep
fistps
ret
mov
and
fs
ret
fcoms
sbb
mov
add
pop
add
xchg
jns
adc
dec
xchg
pop
clc
lds
mov
subb
mov
mov
xchg
cmp
shll
sbb
dec
pusha
jno
das
or
pushl
fdivs
dec
xchg
stos
int3
cltd
dec
pop
imul
das
pop
or
mov
sub
insb
dec
pop
push
movsb
pop
lds
inc
nop
push
xchg
dec
add
insb
jne
pop
and
jns
in
pop
lds
jb
leave
cmp
sub
cmc
xor
test
and
dec
ficoms
mov
sbb
push
inc
mov
jne
or
cmp
fildl
jmp
or
test
or
sarb
sub
pop
outsb
in
jg
push
in
add
insb
imul
cmp
dec
cli
push
cld
fwait
pop
mov
inc
dec
sti
les
std
lds
cmp
adc
bound
aam
std
or
push
les
cld
popa
stc
jbe
push
pop
cmp
sub
pop
pop
adc
repz
jmp
pop
mov
mov
jns
cmpsb
or
mov
mov
jmp
adc
xchg
shr
in
sub
push
inc
pop
xlat
cmp
pusha
cmpsl
inc
data16
adc
push
rcll
das
ja,pt
mov
jnp
lret
data16
pop
popf
lds
mov
out
lods
and
clc
adc
out
test
push
or
dec
mov
test
stos
repnz
subl
add
arpl
cmp
js
test
dec
and
sub
cltd
push
leave
or
orl
fs
xchg
lds
pop
pushl
hlt
test
test
in
pop
pop
sbb
daa
test
pop
test
rolb
rcr
pop
dec
add
daa
push
push
shrb
and
mov
jmp
ss
bound
xlat
or
inc
sar
ret
pushf
xor
add
loopne
je
in
mov
or
push
cmp
mov
out
mov
shrl
sti
repnz
jbe
or
pop
jmp
add
dec
sbb
cli
subl
into
lret
sub
loope
jne
and
outsl
add
stos
cmp
in
jecxz
push
pop
lcall
push
push
mov
pop
push
mov
xor
inc
mov
test
sbbb
lret
push
xorb
cld
push
les
int
and
mov
push
mov
add
adc
push
mov
ljmp
add
adc
mov
lcall
shrl
dec
inc
jmp
loope
int
popa
add
dec
add
add
add
loop
mov
dec
xchg
add
push
and
push
jmp
cwtl
add
mov
xlat
jno
mov
add
pop
aas
xor
push
cltd
inc
popa
push
imul
das
xor
pop
cmp
xchg
xlat
add
stos
in
inc
sbb
xchg
mov
mov
push
faddl
adc
lods
stos
add
mov
cmpsl
sbb
mov
xor
dec
cmp
js
ljmp
int3
jecxz
cmp
rcrl
stos
cmpsl
xor
pop
sub
add
std
sub
xchg
pushf
lea
lahf
push
ficoml
mov
cmp
shl
dec
adc
adc
ret
into
pop
scas
dec
add
sub
cwtl
in
add
pop
pop
popa
jmp
lock
jo
arpl
inc
in
add
clc
inc
or
pop
out
mov
mov
outsl
test
fiadds
adc
cmc
mov
icebp
jg
jmp
and
jle
push
sub
mov
jg
or
ror
jg
shlb
stos
mov
xchg
sti
cmpsl
ss
ds
enter
pop
rorl
mov
xor
lret
jo
jno
loope
push
or
adc
mov
and
les
std
jmp
jmp
pop
rdtsc
push
add
jmp
ret
add
push
mov
pushf
js
mov
mov
sub
sti
movsl
in
mov
sti
jns
aam
mov
adc
mov
sbb
loop
pop
cld
das
cwtl
std
or
push
int
sarb
dec
rolb
push
decb
stos
pop
shrl
jno
leave
dec
push
and
lods
add
aaa
cmp
push
cmpb
daa
shlb
rcl
out
testb
enter
mov
std
scas
outsl
xlat
lret
xchg
sbb
das
ret
sub
int3
xor
mov
and
add
mov
in
push
mov
dec
in
jo
out
or
lock
bound
out
inc
ja
test
xor
stc
mov
pushf
mov
out
cs
ljmp
fs
add
popa
inc
notb
cmp
fwait
ja
cmpsb
popa
mov
pop
jmp
lahf
pmovmskb
out
push
and
lods
adc
call
dec
mov
fs
jp
and
pusha
loope
or
cmp
rcl
icebp
adc
and
stc
pop
jge
nop
lods
ja
mov
xor
push
rolb
cmp
lahf
inc
sub
lahf
add
hlt
jnp
mov
mov
adc
lods
or
mov
mov
pop
das
dec
push
fildll
mov
stos
add
pop
pushl
dec
sbb
sub
and
mov
dec
mov
push
test
test
jae
add
je
inc
jb
int3
arpl
push
jmp
bound
call
mov
sbb
iret
mov
stc
aas
cmp
adc
and
adc
loope
sub
nop
push
mov
in
mov
repnz
and
rcll
adc
scas
cltd
pop
inc
pop
xchg
cs
sub
xor
xor
cwtl
sub
xchg
incl
repnz
mov
and
or
js
push
xchg
push
in
adc
icebp
push
mov
jmp
add
iret
sbb
xor
dec
jb
sbb
xrelease
push
sub
outsl
loopne
lock
add
mov
mov
pop
test
not
push
jmp
add
mov
cmp
das
mov
add
pop
jp
and
pop
and
sub
xchg
adc
hlt
mov
enter
or
inc
mov
shll
mov
push
mov
jge
cmp
pop
dec
pop
cmp
popa
cmp
jp
mov
xor
dec
into
or
mov
push
push
test
fistps
icebp
cli
add
dec
lcall
mov
push
jmp
ficoms
pop
out
sub
jge
out
lea
xor
inc
pop
push
pop
xor
jl
push
push
std
xchg
add
add
sub
loop
pop
pop
pop
push
pop
pop
add
cmp
push
dec
je
push
rclb
pop
test
xor
or
add
lahf
push
or
xchg
adc
popf
jne
xor
dec
adc
sti
out
test
insb
test
daa
pop
jae
dec
mov
test
mov
mov
ljmp
cwtl
xchg
sti
inc
cmp
xor
dec
xchg
pop
xchg
out
movsb
mov
inc
adc
and
dec
add
xchg
call
mov
jmp
loopne
dec
scas
mov
dec
jge
sub
nop
xchg
add
js
pop
mov
ret
imul
and
cmpsl
subb
adc
scas
pop
out
xor
cmp
sub
lret
jne
xor
loop
inc
orl
popf
xchg
push
imul
and
ds
dec
jp
jmp
xchg
mov
dec
mov
inc
dec
pop
out
lods
fs
mov
insl
inc
xlat
out
push
jne
idivb
jns
scas
sub
push
push
add
jg
add
jle
push
mov
sub
dec
dec
lods
scas
xchg
inc
movsb
movsl
das
xchg
dec
push
jae
sbb
incl
in
testl
fidivrl
push
bound
not
addb
xchg
and
mov
sub
push
dec
dec
mov
push
add
sbb
jg
data16
sbbl
leave
jns
add
xor
pop
or
ljmpw
mov
inc
pop
jmp
inc
sub
jo
test
adc
mov
jmp
outsb
pop
insb
jno
inc
divb
sub
in
lods
or
inc
xchg
lahf
pusha
loopne
jbe
cmp
xchg
jnp
int
push
movsb
cli
sub
sbb
pop
cwtl
cmc
add
cmc
jmp
inc
push
cld
xchg
mov
or
sub
push
mov
xchg
jg
outsl
lret
leave
stos
cs
mov
neg
shl
inc
cmpb
mov
jo
pop
loope
dec
call
mov
test
jl
jne
fiadds
out
int3
repnz
xor
mov
dec
lea
mov
cwtl
xchg
mov
aaa
and
rorl
ds
iret
sbb
lahf
cmp
mov
sub
jmp
dec
mov
adc
adc
push
mov
addb
xchg
mov
jle
lcall
das
add
cmp
cs
or
mov
adc
sub
imul
and
cmpsl
int
pop
movb
push
cmp
not
inc
dec
ds
jb
rorb
es
sub
rorl
cmc
add
push
insb
push
cmp
cmp
add
imull
jb
ljmp
popf
jns
lret
jg
push
push
sub
test
adc
ljmp
jmp
out
mov
loopne
or
movsl
or
sub
push
arpl
cmpsb
add
add
lock
cltd
add
pusha
xchg
pop
pop
adc
mov
jg
sbb
xchg
icebp
jmp
pop
mov
mov
sub
mov
push
jle
adc
scas
shlb
test
jno
pop
dec
and
push
and
ret
cmp
mov
dec
mov
sub
fldcw
aam
xor
daa
mov
jnp
cwtl
jmp
scas
push
xchg
mov
jp
cwtl
add
sub
outsl
push
mov
pop
xor
dec
pop
int3
xor
inc
incb
aas
cmpsl
add
mov
loop
mov
or
adc
inc
dec
push
xchg
xor
movsl
not
stos
add
fistps
hlt
push
orl
sub
push
bound
repnz
and
or
or
insl
divb
addl
push
rcrb
push
icebp
add
mov
ds
adc
xchg
test
adc
cwtl
repz
loope
xchg
mov
ss
pop
scas
jb
sub
adc
xor
shl
aas
xor
popf
test
and
add
sbb
jbe
inc
cwtl
fmuls
jge
loop
inc
pop
xchg
adc
outsl
mov
xor
fnsave
mov
or
stc
mov
cld
orb
inc
shl
mov
mov
mov
add
jmp
jg
pop
cs
xor
shl
cmp
xchg
mov
loop
pop
jbe
jns
adc
adc
push
xchg
fbstp
push
xchg
imul
sub
or
and
mov
ret
cmp
push
push
push
or
and
addb
add
add
shlb
and
cmp
dec
jp
shl
fcoms
lds
ljmp
outsl
nop
es
cs
add
xlat
pop
fadds
dec
int
push
add
mov
fstl
and
lret
fldl
js
cmp
sub
cmpsb
sbb
or
popa
jmp
notl
dec
bound
jmp
jle
leave
adcb
push
pop
sub
or
sarb
and
fisttps
or
push
jmp
icebp
xorb
cmpsl
push
and
push
pop
push
mov
and
pop
fcomip
mov
mov
pop
cmp
add
insb
jecxz
inc
or
mov
or
pop
jle
or
lcall
test
das
cli
movsl
jp
mov
xor
dec
testb
fnstsw
lods
jmp
inc
and
and
jmp
or
or
push
mov
pusha
dec
push
cmpsb
adc
daa
jmp
repz
rolb
inc
mov
adc
ds
xor
in
mov
inc
sahf
jge
or
xchg
add
jne
movsl
push
insb
gs
inc
pop
scas
out
or
sbb
pop
icebp
xlat
jmp
mov
sub
pop
insl
aaa
in
inc
pop
add
mov
loopne
sub
pop
pop
push
mov
lock
mov
lods
push
jns
rcrl
push
mov
push
or
mov
xchg
jbe
or
mov
cmp
or
aad
xor
movsl
pop
adc
cmpsb
xor
dec
rcrl
push
xor
jns
jp
dec
test
call
jno
fs
pop
jns
dec
add
sub
mov
adc
aam
mov
ret
xchg
add
mov
mov
sub
sbb
nop
hlt
aas
push
dec
push
push
outsl
adc
rcl
push
jecxz
outsb
loope
add
pop
push
or
out
sub
push
fnstenv
push
sub
movsl
sub
or
xor
addr16
pusha
sub
and
inc
stos
pop
push
in
dec
adc
in
xor
add
repz
jb
xor
loope
xor
adc
push
ljmp
pop
push
cld
jp
lcall
jecxz
mov
lock
or
mov
sarb
jne
rcll
rcr
inc
xor
sub
addl
inc
jno
sbb
nop
cmp
add
test
xor
push
pop
lret
jmp
mov
lods
sbb
sub
or
jge
pushf
ja
cmp
clc
pop
xchg
mov
ret
cmp
or
mov
adc
std
inc
and
push
add
sub
inc
aaa
leave
mov
cmp
dec
and
inc
ret
cmp
push
or
sbb
or
pop
ja
fwait
mov
mov
sub
out
sub
push
insl
mov
push
sbb
rcrl
adc
out
and
dec
sbb
imul
mov
inc
xchg
pop
and
sbb
pop
sub
pop
cmp
outsl
int3
xchg
aaa
xchg
pop
fiaddl
stos
xchg
or
cmp
add
sub
push
es
loope
shrb
dec
lea
jle
add
jnp
dec
add
mov
int3
dec
pop
test
stos
cwtl
les
add
dec
xor
nop
jnp
cmpsl
jmp
icebp
mov
cmp
sub
or
subb
jl
repz
or
push
loope
stos
les
loope
sub
adc
pop
add
out
out
add
imul
jmp
enter
imul
jl
jge
sbb
xchg
xor
xor
mov
mov
jmp
rorl
data16
sbbb
dec
or
push
imulb
pop
pop
xlat
andb
mov
lret
inc
es
pusha
adc
inc
push
jge
sub
jmp
aaa
ja
addr16
sub
cmp
inc
mov
cld
push
jnp
xor
push
es
add
mov
sub
sub
add
inc
cmp
cmpb
mov
insb
mov
fsubrs
lods
or
or
inc
movsb
addr16
not
pop
pop
fs
push
cmpsl
inc
insl
mov
mov
adc
nop
out
lahf
scas
dec
lea
lret
lret
dec
les
jecxz
mov
imul
xchg
push
iret
dec
push
outsl
sub
and
push
pop
and
cltd
add
mov
arpl
sub
add
aad
add
xor
push
enter
xchg
mov
test
sub
mov
jae
sub
push
push
push
fdivl
cmpb
data16
add
mov
or
pop
repz
aas
rorb
js
dec
rolb
cmp
cmpsb
mov
pop
add
or
sti
in
cmp
inc
cmp
or
jmp
mov
mov
jle
jns
shr
fiaddl
lret
shlb
add
jge
and
mov
loop
mov
dec
mov
mov
outsb
in
xchg
push
je
ret
fs
bndstx
lret
aad
aaa
mov
cmp
adc
xchg
cmp
adc
xor
fidivs
scas
mov
and
add
insl
push
jmp
pop
push
scas
pop
in
popa
stc
inc
xchg
add
lret
xor
jmp
addr16
sub
movsb
stos
int3
add
xor
pop
loopne
aaa
adc
jmp
and
and
fstps
pop
sub
dec
push
inc
daa
test
lahf
xchg
in
daa
jmp
pop
sahf
xchg
mov
xor
scas
mov
gs
or
cmp
lds
xor
out
aad
lahf
out
cmp
adc
lahf
add
fwait
lea
int
pop
sub
inc
test
lret
stos
leave
in
test
add
mov
bound
sbbb
add
xor
xor
cmp
pop
das
add
les
mov
jp
add
ljmp
pop
jae
xor
stc
pop
and
ds
push
notb
xor
dec
test
into
pop
test
rol
dec
imul
sarb
or
lret
daa
sbb
mov
push
neg
addb
call
scas
jp
xor
mov
imul
testb
or
xor
and
test
testl
mov
xor
push
jmp
fstp
clc
mov
sahf
dec
or
push
adc
push
dec
push
dec
stos
into
popf
test
jmp
inc
popa
lret
push
jge
pop
aaa
inc
mov
add
xchg
enter
cmp
lds
mov
inc
push
loopne
xchg
pop
xchg
ret
out
jmp
push
dec
sbb
and
testb
lods
xchg
mov
pop
mov
jb
mov
sbb
gs
shrl
aam
dec
pop
sub
in
pop
icebp
add
shlb
inc
mov
adcl
js
xor
push
push
popf
jmp
ficomps
lret
jle
add
rcrl
add
sub
mov
xchg
pop
xchg
fsubl
add
push
jg
insl
cmp
add
outsb
stos
push
pop
fbld
sbb
sub
and
pop
les
aad
dec
or
sbb
mov
shr
mov
ljmp
add
scas
popf
xchg
mov
and
mov
cwtl
mov
pop
ret
jmp
jns
add
or
or
int
rorl
jmp
mov
push
mov
sub
das
inc
xchg
shll
mov
scas
mov
out
cltd
dec
enter
adc
bound
add
dec
lock
jl
adc
or
cmp
add
sub
push
ss
adc
jmp
push
sbbl
js
out
push
sub
stos
stos
pop
mov
or
push
mov
nop
std
sahf
inc
or
std
push
xchg
imul
bound
adc
test
imul
cld
mov
xchg
out
inc
dec
xlat
pop
pop
in
scas
cld
dec
loope
pop
sub
xchg
or
inc
mov
mov
pop
mov
add
rolb
fisttps
mov
lods
movsl
jge
xchg
push
xor
daa
or
in
cmp
adc
imul
xlat
sbb
jmp
pop
xchg
sub
aas
stc
ljmp
pushl
xor
add
js
mov
push
sbb
int3
dec
cmc
jmp
xor
dec
xor
adc
pushf
mov
mov
clc
sbb
or
and
pop
adc
into
shll
or
jne
subb
inc
push
dec
mov
and
mov
scas
push
icebp
mov
cld
jmp
mov
lock
push
push
int3
add
mov
pop
mov
inc
js
mov
popa
xchg
repnz
inc
cmp
pop
jmp
rolb
sbb
sub
mov
cmc
or
jb
pop
add
jmp
cli
aaa
xlat
movsb
push
nop
sarb
adc
loopne
and
scas
loopne
repz
mov
push
adc
xchg
mov
add
popa
jle
pop
jmp
xchg
pop
dec
or
inc
cmp
jge
insb
mov
mov
or
pop
aas
or
out
xchg
pop
cmp
xor
pop
add
es
mov
mov
lods
imul
nop
xchg
add
ret
pop
fiaddl
add
and
sbb
test
minps
push
push
xchg
insb
cli
mov
rol
shr
adc
dec
lods
sahf
rcll
out
sbb
adc
add
xchg
fwait
push
scas
mov
rep
adc
popf
cs
jmp
cmp
jbe
and
mov
push
push
pop
mov
nop
ficompl
push
in
stos
cmp
mov
loop
ljmp
in
add
xchg
and
out
popa
out
popa
push
sbb
sub
adc
pop
inc
pushf
add
dec
add
nop
pop
push
mov
nop
andb
jmp
mov
add
stos
dec
inc
inc
or
inc
test
cltd
add
fs
rolb
iret
clc
ss
mov
outsl
in
shrb
pop
pop
stos
mov
into
inc
icebp
ja
mov
popf
ret
shl
fadd
lahf
mov
out
mov
pop
and
jmp
jl
jno
cmp
dec
mov
mov
cltd
pop
scas
inc
pop
hlt
test
sbb
add
adc
or
in
inc
negb
sub
push
setp
inc
lret
insl
lret
inc
jg
pop
push
sti
and
mov
jmp
mov
add
xor
sub
jmp
adc
lods
cs
test
sub
xchg
ds
movsl
jmp
je
cmp
xchg
scas
mov
adc
iret
cmp
scas
cmp
cld
pop
add
fs
xor
mov
movsb
inc
sbb
lcall
mov
loop
popa
dec
adc
and
aad
js
xchg
jl
dec
jbe
shrl
cmp
out
adc
or
dec
loopne
mov
xor
arpl
and
gs
cmp
xor
enter
cmc
lret
push
mov
stos
aam
xchg
sbbb
xchg
and
popf
scas
loopne
stos
add
inc
daa
shr
arpl
nop
mov
add
inc
sahf
add
mov
sub
xor
push
ja
popf
inc
sub
push
pop
lret
and
xrelease
lock
add
jg
lods
out
pop
lea
xchg
inc
roll
subb
add
push
mov
lcall
loope
sbb
loop
pop
lret
ret
sub
push
jne
sub
das
jns
push
test
mov
jmp
inc
stc
mov
cmp
pop
pop
nop
nop
sub
dec
pusha
in
fldt
ret
pusha
jg
mov
lahf
mov
stos
push
push
push
mov
rcrl
pop
sub
icebp
sbb
ret
scas
repnz
inc
mov
je
cmpsb
add
sbb
js
mov
or
cmp
add
sub
pop
sub
sub
fsubs
test
xchg
clc
push
mov
jb
jmp
dec
add
xchg
jnp
fcmovu
adc
mov
mov
push
dec
scas
or
pop
mov
stos
mov
out
sub
mov
pop
popa
mov
fdivrl
nop
cli
jmp
add
jns
xor
es
out
add
out
jne
nop
push
inc
not
mov
test
jns
test
in
daa
xchg
repz
test
les
imul
loope
fdivr
sub
inc
adc
mov
mov
and
std
sar
imul
pop
in
or
xchg
dec
loope
ja
push
mov
or
mov
test
pop
scas
add
flds
add
sbb
ss
xor
cmp
dec
cs
inc
icebp
add
ficoml
xor
mov
das
mov
push
mov
in
fucompp
xchg
mov
adc
cmp
andl
in
nop
push
mov
push
mov
inc
cli
pop
mov
cmpb
movsb
test
dec
jmp
lret
inc
push
xor
cmp
scas
int
or
ret
jecxz
mov
or
mov
orb
and
shrl
testb
add
lret
jmp
add
dec
es
fimull
add
push
addb
cmp
dec
jge
add
ds
pop
cs
mov
rcll
subl
inc
and
movsl
popf
hlt
inc
add
jmp
icebp
pop
mov
mov
lret
insl
into
or
inc
jecxz
and
in
das
mov
push
cmp
cmp
sti
xchg
cmc
add
pusha
xor
or
xor
mov
jmp
dec
pop
push
pop
and
dec
mov
sbb
or
xchg
decl
push
fs
jns
jns
pop
outsb
fisubrl
xchg
sbb
rcll
pop
in
adc
pop
or
dec
mov
sub
cmp
jb
mov
arpl
push
pop
filds
mov
add
sub
movsl
repz
ret
lds
push
andl
or
repz
mov
inc
lahf
jmp
pop
add
push
stc
cmpsl
and
cmp
or
mov
pop
sbb
jmp
mov
pop
pop
sub
dec
out
push
sbb
mov
xchg
mov
xor
out
adc
mov
shlb
sbb
outsl
mov
inc
sub
or
or
imull
psraw
addl
mov
pop
and
or
mov
mov
imul
repnz
add
outsb
mov
out
sub
cmpsl
scas
out
pop
jmp
out
jb
sub
add
xor
sti
test
inc
or
adc
movsl
xor
test
mov
clc
icebp
or
cmp
jge
nop
pop
ret
dec
dec
xchg
cmc
shrb
pop
dec
xor
stos
repz
inc
fwait
or
or
test
outsl
add
cs
add
jmp
in
mov
push
mov
ljmp
adc
xchg
arpl
jge
add
ds
and
pop
mov
xchg
add
in
mov
cld
dec
pop
jmp
mov
pop
imul
roll
sub
push
pop
inc
xchg
sbb
pushf
mov
lret
jmp
pop
inc
cmp
mov
test
call
push
enter
or
ja
bound
push
sub
xchg
jmp
mov
mov
out
out
idiv
ljmp
mov
cwtl
mov
test
pop
addb
int
adc
rcrl
cmp
popa
repnz
daa
dec
xor
in
pop
scas
je
mov
dec
mov
ret
xchg
xor
or
jl
hlt
mov
bound
mov
sbb
jmp
sub
sub
inc
mov
sbb
pop
int3
add
cmp
dec
xchg
add
pop
pop
fisttpl
lods
addr16
adc
or
test
push
mov
add
push
mov
pop
pushf
inc
pop
shlb
lods
hlt
push
call
movsb
push
cs
and
push
mov
sarb
nop
adc
jp
rolb
sbb
sbb
push
daa
jb
mov
shrl
push
clc
ljmp
ljmp
pop
popl
sub
xlat
idivl
sbb
add
mov
mov
push
mov
out
pop
in
lds
test
out
mov
push
add
jge
jmp
shl
push
sub
test
xor
jle
lods
xchg
pop
jns
push
loopne
cmp
or
fsubrl
mov
daa
popf
loopne
sbb
xchg
mov
adc
add
notl
cmc
or
jnp
adc
out
into
dec
jae
and
or
ja
cmp
das
add
je
push
or
push
lods
adc
adc
pop
xchg
push
shl
cmp
push
push
pop
out
adc
es
sbb
add
sbb
ds
outsl
out
lahf
cmpsb
dec
xor
jmp
nop
adc
insb
dec
ficoms
sub
add
push
cmp
adc
loopne
inc
xchg
pop
mov
xchg
jle
sub
dec
repz
sub
xchg
les
push
jb
aad
dec
cli
xchg
xchg
scas
add
mov
push
xor
jmp
mov
dec
test
lahf
rcr
outsl
xchg
stc
push
jle
xchg
lods
in
adc
nop
sbb
mov
mov
fwait
aas
mov
jl
xor
push
or
xchg
xchg
sbb
add
push
mov
push
xchg
jecxz
push
jmp
arpl
pop
mov
cmpsl
imul
mov
mov
xchg
pusha
mov
cmc
daa
mov
mov
and
dec
mov
negl
shrb
pop
adc
and
call
call
cld
adc
push
pop
outsl
in
std
ja
jle
add
pop
out
lea
add
neg
add
stos
mov
jb
mov
clc
ds
inc
rorl
int
sub
add
add
push
sub
mov
rorl
or
mov
sub
jg
or
inc
test
fwait
testb
push
leave
jmp
xchg
or
in
movsl
pusha
insb
mov
dec
out
xor
dec
pop
fisubs
push
and
mov
or
pop
dec
fsubp
or
push
sbb
cmp
enter
ret
and
or
inc
cmp
notb
xchg
clc
add
add
enter
xchg
mov
xorb
mov
mov
inc
stos
hlt
push
jo
les
adc
dec
pop
es
dec
mov
xchg
inc
icebp
call
sub
test
add
and
jmp
xor
or
or
adc
add
jbe
jle
xlat
adc
add
gs
xchg
mov
mov
push
xchg
std
pop
idivl
sti
push
out
icebp
or
sarb
or
mov
push
fwait
shrb
aaa
int
jg
adcl
aam
and
and
mov
fnstenv
out
rcrl
sbb
xchg
sub
sub
mov
pushf
pop
xchg
jae
jle
mov
jge
cmp
pop
add
into
pop
inc
xor
outsl
shlb
js
or
rcrb
cmpsl
or
gs
push
jo
dec
cwtl
and
sub
and
lock
popf
lahf
movsb
scas
pop
or
add
mov
movl
xchg
stos
jno
lock
jne
int
sbb
in
enter
mov
push
test
add
stos
adc
push
test
push
sub
jmp
cs
ljmp
movsb
jl
js
insb
jnp
fcompl
pop
sub
push
and
inc
dec
push
cmpb
mov
jmp
jmp
out
pop
xor
jns
push
jmp
mov
stc
stos
outsl
movsl
pushf
pop
shrl
cmp
mov
sbb
repnz
xor
fbstp
jle
movb
fistps
cmp
pusha
int3
or
std
jmp
dec
cli
mov
pop
xchg
pop
jmp
sub
stc
dec
jp
cmpsl
dec
ljmp
lret
fisubs
xor
xor
fucomi
sub
jnp
nop
pop
push
out
jbe
shl
rcr
rorb
out
out
inc
push
addb
jns
cld
aad
jmp
ret
shrl
jg
pop
pop
push
test
movsl
mov
cwtl
push
jmp
in
pop
and
aam
add
inc
pop
jg
push
jg
mov
or
arpl
gs
ret
cmpsb
call
cmp
loope
lahf
xchg
mov
pop
iret
es
push
mov
mov
in
movq
lret
stc
sub
mov
push
mov
ds
not
push
add
jmp
pop
clc
push
pop
scas
outsb
ljmp
jne,pt
mov
adc
pop
aas
pushf
push
push
pop
pusha
insb
adc
fsubs
sub
lret
mov
inc
adc
lsl
and
test
dec
leave
pop
adc
pop
mov
stc
sub
in
pop
xchg
push
cmp
stos
stos
xor
mov
hlt
aas
jbe
mov
jmp
mov
data16
out
popf
fnstsw
insb
jmp
mov
arpl
pop
cmp
add
cli
xor
inc
push
jb
lea
xchg
add
pop
jbe
sub
add
mov
pop
inc
dec
inc
mov
imul
icebp
sub
jmp
out
jno
pop
dec
mov
loope
and
daa
das
pop
mov
mov
adc
into
insl
inc
mov
sti
sub
xlat
idivb
std
and
jmp
nop
inc
arpl
mov
fdivs
lock
jbe
loop
jae
fsubrl
js
push
sbb
or
add
dec
fs
jle
fcoms
or
cmovo
ds
mov
dec
inc
movsl
sbb
pushf
xor
adc
orl
inc
xor
adc
mov
push
push
imul
mov
shlb
hlt
test
cmovle
arpl
cld
fs
mov
cld
sti
pop
pop
aad
dec
add
mov
daa
notb
pop
ret
mov
push
inc
or
test
iret
mov
add
and
adc
xor
or
test
jmp
gs
lods
or
push
add
addb
lea
rorb
dec
and
and
add
int3
pop
test
pop
rorl
and
in
xchg
push
and
rcr
push
inc
add
push
lods
jecxz
push
jmp
jl
push
jne
inc
clc
mov
jle
push
mov
mov
out
dec
and
xor
adcl
fisubrs
mov
inc
xor
fsts
lods
push
xor
cvttps2pi
mov
cmp
inc
push
mov
jmp
jns
mov
pop
and
int
push
cmpsl
or
jns
sarb
filds
jmp
add
aam
mov
in
adc
add
mov
jne
ja
pop
add
fs
adc
jns
and
mov
stos
dec
mov
fcomip
out
mov
pop
lods
mov
sub
js
rolb
add
fimull
in
pop
cmp
sub
pop
loop
pop
xchg
adc
clc
stos
pop
repz
test
pushf
fisubs
or
cmp
push
add
insl
inc
pop
and
jne
cmpsl
repz
xor
js
push
jmp
mov
sbb
adc
mov
dec
outsb
sub
sti
orb
hlt
shll
pop
daa
addr16
dec
push
sub
sub
jns
das
roll
xor
bound
dec
add
mov
mov
push
mov
stc
notb
das
sti
jnp
lds
or
ja
or
mov
mov
adc
adc
sbb
mov
out
sbb
push
add
xor
cmpb
push
mov
xchg
pop
jle
and
xorl
outsb
adc
add
cmp
xor
mov
or
push
push
mov
push
call
and
cmp
fst
icebp
js
mov
lahf
fld
loop
push
movsw
bound
sub
push
push
pop
mov
push
mov
pop
jmp
sub
sub
pop
iret
push
out
xor
sub
in
mov
daa
lods
aas
imul
jb
xor
bnd
jae
and
add
sub
add
sub
fidivs
mov
add
loop
mov
rorb
or
gs
shl
jecxz
pushf
push
hlt
cwtl
bound
jle
pop
stos
pop
popf
xchg
out
xchg
pop
outsb
mov
mov
jmp
or
ret
add
sbb
adc
stc
mov
loop
adc
sub
xchg
sbb
mov
fidivrl
iret
rolb
jae
cmp
mov
into
jmp
xchg
pop
stos
sub
imul
jl
hlt
mov
jmp
clc
push
mov
call
sub
pusha
rcr
push
cmp
sti
dec
movsl
add
cmp
cmpsl
xlat
add
mov
add
nop
jbe
sti
xchg
int3
cmp
inc
xor
xor
cmp
in
or
xchg
pop
sbb
pop
or
bound
dec
and
dec
push
loope
mov
sbb
outsb
jmp
push
pusha
sbb
mov
inc
loopne
aas
jle
mov
cmpsl
sbb
mov
adc
fsubrs
xor
jmp
xchg
push
push
gs
push
sbb
xor
cmp
sub
icebp
cmp
nop
pop
sar
sbb
mov
add
ret
shlb
popa
xchg
pop
das
xor
fs
not
rcrb
ret
pop
pop
sub
int3
stos
ror
out
xor
pop
cmp
jmp
xchg
out
das
sti
xchg
adc
or
ljmp
ljmp
push
or
jmp
xchg
out
mov
imul
in
out
jbe
push
dec
xor
gs
enter
xor
xor
lcall
pop
mov
dec
inc
sub
pop
push
ret
mov
sbb
je
lods
or
mov
add
addr16
test
pop
in
call
icebp
or
dec
push
lds
add
inc
push
sub
push
push
xor
xor
out
jo
aam
add
xor
jmp
lods
sub
sub
ret
xlat
nop
add
repnz
sub
subl
pop
iret
sub
add
pop
sbb
sarl
shl
pop
faddl
jnp
sub
and
adc
push
xchg
xor
icebp
fcmovnu
rorl
mov
dec
out
popa
pop
push
add
pop
pop
pop
daa
inc
xor
lret
sahf
sub
lcall
faddp
call
push
subb
push
and
test
add
pop
je
cwtl
mov
pop
rcr
sbb
jae
fildll
add
cmpsl
xor
lock
jmp
adc
in
pushf
mov
das
sbb
jae
or
adc
dec
int3
mov
inc
add
daa
sub
inc
add
push
cmpsl
push
jo
or
rclb
jae
xor
cmc
test
lds
or
arpl
add
xchg
das
mov
or
adc
inc
sub
xor
inc
and
jmp
cmc
repz
cmp
jns
lret
lods
push
or
push
cwtl
push
sbb
adc
inc
and
lret
add
pushf
sub
push
adc
jmp
push
shrl
jns
jle
cwtl
cmp
adc
xchg
jbe
mov
or
lods
pop
inc
repz
and
xchg
jne
mov
jmp
pop
adc
shl
sbb
sub
push
test
sbb
ror
iret
cmp
sub
nop
lahf
push
add
lds
mov
arpl
push
jo
sbb
add
dec
push
adc
in
leave
lea
scas
jns
lea
pop
xor
or
pop
into
mov
lret
jle
pop
xchg
test
sub
push
xor
pop
sti
add
adc
add
pushf
pushf
sbb
cmp
mov
mov
and
jo
push
push
dec
jmp
jl
pop
cmp
or
push
inc
out
bound
adc
jmp
push
xchg
sbb
dec
inc
sahf
dec
cmc
pop
push
bound
xchg
inc
cmp
sub
call
das
mov
mov
sahf
jle
push
sub
mov
dec
shl
sub
aaa
dec
add
bound
fsub
or
jmp
pop
jmp
subb
xor
arpl
add
stc
std
loop
int
pop
mov
jb
mov
sbb
cmp
pusha
dec
and
or
inc
arpl
ljmp
xor
sbb
cmp
add
mov
or
outsl
or
pop
xor
sbb
dec
sub
add
cmp
add
mov
inc
jge
push
in
xchg
cmp
push
push
lea
rorb
push
jnp
pop
add
rorb
add
fsts
cmpsb
sub
lds
sahf
enter
pop
pop
sti
mov
jmp
fnstsw
inc
push
mov
push
xchg
movsb
xchg
mov
xlat
ljmp
scas
nop
ret
std
pop
cmp
nop
or
mov
mov
les
ret
add
push
mov
pop
inc
imul
inc
ljmp
pop
pop
xchg
dec
push
push
sub
aam
xor
pcmpeqb
xchg
xchg
ljmp
pop
es
out
outsb
adc
xor
pop
repnz
addl
cld
mov
addr16
xlat
out
subb
pop
imul
adc
testl
lds
push
sub
test
das
rorb
fidivl
cli
add
gs
inc
lock
add
imull
mov
sbb
pop
sub
jg
xchg
push
mov
jbe
es
dec
xor
jp
jae
or
or
pop
add
aam
push
mov
xor
push
dec
orb
nop
jg
sub
pop
test
pushf
outsl
dec
sarl
adc
xor
ljmp
fisttpl
push
fisubrs
rcll
adc
mov
jmp
lock
or
popa
inc
fmulp
dec
jge
sub
repz
iret
test
in
clc
mov
xchg
jns
daa
in
iret
movsl
in
fisubl
cmpsb
mov
xchg
and
mov
arpl
or
fs
dec
mov
jns
pusha
add
jmp
sarl
mov
inc
lret
int
fistps
add
inc
loop
dec
or
xor
mov
cmp
xchg
push
popf
std
mov
jns
add
sbbb
dec
mov
loop
lahf
movb
pop
push
inc
out
pop
cmp
neg
cmp
leave
xor
or
or
shr
mov
push
lret
shll
xlat
sub
xor
sbb
mov
add
aaa
fstl
inc
dec
sub
std
add
imul
ja
pop
push
test
pop
or
fxch
fs
cltd
dec
push
push
push
pop
pop
xchg
mov
add
nop
sbb
adc
aad
mov
jg
scas
rorl
ljmp
xor
dec
aam
popa
addr16
ret
shlb
or
pop
jmp
ljmp
mov
sub
add
fs
insl
xchg
mov
test
pop
in
add
cmp
mov
adc
jg
mov
sahf
push
cli
sub
push
aad
adc
out
aas
fcoms
jmp
pop
push
repz
pop
pop
or
sbb
sub
es
data16
or
mov
nopl
pop
push
jb
pop
push
push
out
jo
jo
dec
call
add
mov
outsl
test
outsb
leave
cmpl
pushf
jg
push
jmp
mov
push
add
dec
popf
add
push
mov
mov
sti
outsb
aam
mov
iret
addr16
inc
xchg
pop
add
push
push
adc
pop
and
aam
pop
xor
pop
sub
xchg
lret
jo
add
jb
sub
xor
ds
dec
push
xchg
lock
push
and
jecxz
cmp
xor
pop
jns
mov
pop
xor
je
and
sub
fdivs
dec
gs
mov
psubsw
xor
icebp
cmpsl
in
cld
mov
loope
js
mov
jbe
and
xchg
sti
popf
mov
mov
jns
adc
xchg
xchg
icebp
ja
ljmp
mov
mov
gs
or
jmp
push
and
mov
add
or
out
add
xor
inc
jmp
mov
jecxz
ss
out
es
adc
push
jmp
mov
sbb
push
pop
xor
inc
add
shlb
in
pop
mov
jnp
adc
loopne
mov
sub
pop
inc
movsl
loopne
mov
adc
minps
lret
hlt
push
shl
jne
movsl
loop
icebp
or
xor
pop
fadds
jbe
cmp
dec
adc
cmp
xor
xlat
dec
sub
sub
push
push
jmp
cmp
push
bound
sbb
xor
sub
lods
sbb
or
add
add
adc
cli
dec
pop
addr16
adc
adc
loop
jg
pop
imul
mov
jl
add
rorb
sarl
rcrl
fstpl
xchg
icebp
dec
xor
jle
into
sub
negb
push
pop
push
cli
add
outsl
mov
or
imul
adc
mov
or
andl
adc
in
dec
sub
or
xor
jns
push
mov
pop
dec
dec
adc
dec
and
xchg
imull
add
fisubrl
xchg
arpl
stc
add
mov
fcmovnbe
mov
or
nop
lock
xor
dec
loop
jbe
adc
inc
or
int
pop
or
cmp
or
mov
rorl
push
sub
dec
and
jle
push
loop
add
subb
fisttpll
inc
jne
jl
adc
pop
aaa
dec
testl
inc
or
cltd
push
push
and
daa
jecxz
fs
shlb
pop
sbb
les
sbb
test
add
mov
sarl
adcl
int
xor
jmp
pop
mov
push
pop
sub
or
not
jo
pop
lahf
inc
sti
lds
sub
xchg
jnp
xor
lea
sbb
push
push
or
pop
xchg
lcall
mov
pop
mov
fnstsw
sub
daa
shlb
sub
lcall
add
sub
mov
push
imul
sub
inc
or
clc
mov
test
jae
adc
jge
jne
fidivs
and
adc
push
add
or
into
pop
sub
in
jl
and
inc
ja
jae
add
in
pop
jge
and
dec
mov
xchg
repz
cld
or
inc
sub
or
outsb
movsb
pop
or
adc
xchg
jae
call
lret
sahf
push
imul
sbb
xor
sub
nop
mov
pop
pop
imul
leave
out
pop
andb
pop
xor
pop
inc
lods
add
icebp
inc
sbb
mov
sahf
push
push
test
mov
or
push
push
ficomps
fbld
call
and
stc
mov
xchg
cmpl
mov
sbb
cmp
lret
mov
cmp
movsb
scas
rcr
or
jmp
lret
mov
sub
and
add
loope
and
push
xor
push
mov
test
push
bound
pop
pop
fiadds
rcr
mov
jmp
or
int
jo
and
mov
push
jns
cli
add
and
mov
ds
adc
push
pop
mov
div
out
and
cmp
rorl
fsubrp
mov
jecxz
push
lret
pop
cs
mov
imul
ljmp
cs
add
xchg
push
jmp
mov
sub
js
shrb
es
testb
add
push
sbb
popf
inc
cmp
das
mov
lret
mov
add
mov
pop
cmc
jecxz
ja
test
push
test
pop
cmp
jmp
xlat
adc
pop
pop
repz
shlb
add
pop
or
pop
or
or
and
stos
pop
inc
bound
adc
or
add
hlt
ret
icebp
je
mov
rorl
and
mov
dec
shl
cmp
push
das
insl
mov
adc
data16
bound
jmp
mov
add
testb
push
push
xchg
jecxz
lahf
mov
and
push
jl
pop
push
sub
pusha
lret
jae
xor
cmp
aad
dec
repz
xor
sbb
fs
xor
mov
sub
pop
mov
push
pop
mov
dec
xchg
push
inc
adc
ja
pop
jo
ljmp
sahf
cmp
rcl
push
mov
repnz
cmc
cmc
lahf
xor
add
adc
and
pop
jmp
bound
vcvttps2dq
loop
cmp
jne
adc
xor
shl
mov
inc
add
in
std
jg
xchg
xlat
pop
icebp
dec
movsl
sbbb
add
or
hlt
ss
push
loopne
mov
xor
pop
pop
sub
aam
test
xor
jmp
push
pop
push
into
xor
sub
icebp
roll
and
pop
xchg
cs
xchg
dec
or
clc
fsts
fstpl
cmc
inc
and
mov
push
aad
mov
and
ret
adc
mov
cmpb
jmp
pop
jg
in
sbb
in
add
mov
cmp
jl
inc
mov
je
jmp
adc
push
sarl
inc
cmc
xchg
jl
pop
cmp
adc
mov
insl
add
dec
pop
js
or
add
dec
loopne
stos
adc
mov
es
in
xchg
or
and
pusha
loope
mov
pop
mov
out
xor
incb
stos
cmpsl
dec
sti
and
dec
sub
cmp
mov
sbb
iret
jl
push
or
sti
imul
sub
mov
inc
mov
ss
push
or
pop
movsl
or
dec
sub
mov
push
push
xor
jns
mov
adc
inc
jecxz
pop
aam
or
pop
pop
pop
cwtl
add
dec
jmp
scas
fstl
dec
rolb
int
inc
xchg
in
dec
sub
daa
push
lcall
push
pop
xchg
in
mov
xor
das
and
enter
lods
jmp
inc
loop
test
andb
mov
inc
jge
in
rcrb
or
jo
inc
scas
repnz
mov
inc
jmp
push
cs
and
add
inc
jmp
imul
mov
addr16
cmpsl
aam
jmp
int
cmc
jmp
mov
ds
sub
out
xchg
out
xor
dec
sti
inc
jl
sub
or
pop
sbb
add
lcall
dec
nop
inc
lret
popf
add
ret
enter
stos
loope
int
and
sub
inc
pop
inc
or
adc
cmp
jne
and
jp
dec
push
push
mov
sub
out
fisubrl
mov
adc
adc
sub
mov
dec
popf
dec
in
js
les
mov
test
lds
adc
aas
dec
in
daa
push
hlt
cmpsb
out
lcall
mov
dec
call
jmp
out
loope
cmpb
dec
push
pop
es
mov
xor
add
out
push
shlb
push
push
and
lea
lcall
shrl
in
imul
sub
inc
mov
std
jmp
mov
xor
scas
inc
and
testl
add
les
jecxz
lock
pop
mov
fnstsw
imul
aas
loop
shl
cmp
push
hlt
out
and
jmp
mov
cli
mov
or
push
inc
test
test
dec
stos
iret
add
mov
push
or
decl
dec
dec
add
mov
sub
int
fwait
pusha
sub
inc
xor
add
jl
dec
adc
nop
repnz
pop
cmp
hlt
test
stos
in
ret
pusha
hlt
jbe
clc
cmp
popf
and
aad
imul
jo
xor
fcmove
cs
fcompl
fwait
sbb
clc
or
imul
sub
cli
loopne
push
cld
push
mov
lock
addl
ret
cmp
pusha
jns
mov
lahf
cmc
shl
movsl
jmp
and
and
mov
ds
inc
xor
lds
jl
call
jnp
jb
pop
incl
idivb
je
jmp
xor
daa
adc
adc
mov
jae
mov
push
pop
sub
pop
inc
nop
test
pop
xchg
fidivrs
sbb
es
push
push
loop
jge
addr16
ljmp
test
xlat
dec
js
lahf
iret
mov
in
test
sbb
and
inc
or
daa
pop
pop
insl
mov
sub
mov
aad
out
lods
shlb
fadds
lahf
or
ljmp
lds
mov
shrl
lret
in
and
dec
scas
pop
rolb
pushl
push
xor
inc
ljmp
adc
pop
sarb
in
or
push
inc
addr16
sub
xchg
or
pop
adc
dec
fimull
jnp
dec
xor
shl
insl
ljmp
inc
andb
add
and
xchg
cmp
mov
int
and
adc
cwtl
adc
push
pop
jmp
and
inc
adc
jg
lret
jnp
add
int
sti
xor
aas
jnp
mov
dec
adc
mov
push
jp
rcr
sub
push
pop
push
out
push
push
add
add
and
add
fs
loopne
inc
cmp
push
das
xor
pop
jo
inc
or
inc
and
jge
leave
and
and
ret
sbb
ss
add
xchg
in
ja
mov
mov
or
sub
movsl
dec
movsb
adc
cli
add
mov
xchg
sbb
dec
mov
sub
dec
and
negl
jbe
fisubs
add
mov
push
jo
jae
mov
and
jg
inc
sbb
jne
lcall
cmpl
stc
aas
xor
or
or
dec
and
test
add
push
push
mov
clc
stos
add
inc
mov
fisttpl
mov
pop
popa
sub
nop
adc
lock
add
ds
lock
add
cmpb
sub
dec
sbb
fisttpl
add
repz
data16
adc
andb
fmull
pop
push
cwtl
daa
imul
fidivs
insl
and
jb
sub
dec
jmp
pop
add
mov
sub
leave
cmp
fcompl
daa
test
outsb
lods
push
sarb
pusha
stc
jae
fsubrs
mov
dec
out
add
sti
psubusb
or
jle
pop
ja
xor
dec
lods
mov
leave
push
push
add
jl
rcrl
mov
sub
mov
push
add
dec
or
pusha
adc
mov
add
push
nop
add
or
daa
xlat
in
das
inc
pop
mov
popf
jb
xor
adc
pop
pop
jl
pop
xor
fs
ja
jo
mov
or
hlt
dec
or
cmc
mov
aad
in
pop
shl
sti
lods
inc
repz
adc
dec
hlt
xor
jo
mov
or
sbb
das
and
adc
pop
or
daa
clc
aaa
dec
js
aam
cli
mov
pusha
pop
cmp
sub
fistpll
mov
adc
cmpsl
and
jnp
je
mov
ret
cli
pop
dec
adc
repnz
lock
pop
adc
mov
cmp
add
in
and
jno
fsubrl
in
pop
jge
pop
fucomi
or
and
lahf
adc
inc
ds
adcb
mov
ljmp
pop
loop
add
pop
popa
pmaddwd
mov
shr
jecxz
mov
and
dec
les
push
add
mov
enter
or
mov
int
mov
dec
xchg
popf
pop
inc
and
xor
push
mov
xor
jmp
pop
lds
pop
push
mov
push
mov
test
mov
lods
jp
and
inc
cmpl
clc
mov
dec
pop
stos
mov
mov
ret
mov
cmp
notl
loope
sub
add
test
push
push
sub
jnp
pop
dec
mov
insl
movlps
inc
adc
imul
jbe
dec
or
or
or
jecxz
test
xor
test
mov
xlat
test
jmp
hlt
pop
clc
loope
ret
and
dec
sub
push
jp
pop
dec
and
xor
adc
sbb
cmp
add
test
loopne
pop
loopne
popa
ret
add
fnstsw
cs
dec
fcoml
push
ret
jo
je
mov
fcomps
push
xchg
adc
pop
in
adc
cli
and
aas
fisttpll
jg
loope
std
fsubs
add
inc
mov
pusha
pop
pop
jne
dec
jle
push
test
popf
add
es
std
dec
mov
push
pop
pop
mov
jmp
sub
and
dec
add
pop
ret
shll
je
das
out
and
add
out
mov
jbe
or
xlat
call
and
mov
mov
outsb
push
mov
movl
test
jo
call
add
popf
mov
push
mov
xor
adc
jmp
mov
ds
imul
add
fwait
pop
sbb
movb
ficomps
push
les
mov
mov
cli
test
rsqrtps
and
dec
das
push
cld
scas
push
aam
test
shl
jne
js
cwtl
mov
push
popf
jbe
push
or
mov
xor
mov
sub
fnstenv
cmpsb
push
and
push
jmp
sub
xlat
pusha
cs
add
jmp
hlt
pop
std
mov
fildll
mov
mov
add
out
or
xchg
add
int3
jae
pop
jmp
mov
add
mov
jecxz
push
ljmp
mov
add
cmc
les
sbb
stos
mov
mov
call
or
or
push
sub
js
add
adcb
daa
pop
add
xlat
jmp
jmp
add
jg
decb
fisttps
add
or
rcr
pop
ret
xchg
xchg
xchg
jae
add
mov
pusha
leave
aad
and
div
adc
arpl
jb
std
loope
sbb
mov
xor
push
xor
push
mov
scas
dec
adc
mov
sub
gs
ljmp
jmp
mov
cmp
fwait
push
les
icebp
mov
and
adc
setbe
or
stc
or
roll
lods
jecxz
jno
jnp
cmp
or
sbb
out
lret
inc
addb
inc
xor
xchg
daa
xor
call
out
inc
sub
in
sti
and
or
in
and
and
and
xorl
rol
inc
and
sbb
int3
pop
jno
add
and
pop
cs
ret
dec
mov
adc
not
enter
in
negl
inc
xor
adcl
lds
repnz
push
test
nop
adc
mov
xchg
and
mov
mov
inc
mov
add
adcl
mov
test
adc
pop
add
push
ja
mov
rorl
adcb
push
xchg
ja
inc
add
icebp
cli
das
inc
call
mov
add
lock
gs
add
ds
mov
pop
outsb
movsb
fwait
cmp
add
inc
fs
dec
cmc
cs
pop
stos
jnp
push
dec
rorb
or
leave
popa
push
into
je
sub
cmp
mov
stc
shll
xor
out
xor
push
sub
jb
jle
cmpsl
mov
icebp
cmp
repnz
das
jmp
or
es
test
das
xor
push
push
mov
lahf
pusha
jl
popa
es
cmp
rorl
aaa
aad
imul
dec
push
push
or
das
cli
loopne
xor
mov
push
test
gs
hlt
call
jp
jl
les
pop
mov
adc
pop
push
outsb
add
bsr
mov
sub
mov
sbb
daa
pop
cmp
sbb
loop
into
and
jne
dec
ss
sti
adc
out
and
and
mov
outsl
jge
testb
add
mov
sbb
add
mov
repnz
shrb
jle
push
jno
xchg
xchg
loop
cmc
imul
les
lahf
add
out
or
or
lock
jmp
add
xlat
arpl
pop
in
stc
in
jmp
int
les
adc
repnz
jbe
and
and
lds
pop
shl
outsl
in
iret
subb
jge
out
std
mov
repz
jnp
add
rorb
and
mov
ds
or
jmp
stc
ret
lds
mov
cmp
in
pop
enter
jmp
les
imul
pop
hlt
dec
push
inc
xchg
jmp
rcll
inc
cmp
jbe
jb
xor
dec
cmp
inc
jle
xchg
cld
repz
ja
inc
or
lock
adc
pop
pop
mov
inc
mov
jo
and
sbb
mov
arpl
loop
sub
lcall
dec
xorb
icebp
push
mov
mov
inc
or
je
js
das
loope
lods
jno
aas
fisubrl
add
and
push
add
fsts
jns
aad
dec
dec
lds
jmp
lods
adc
pop
movsb
add
int
push
xchg
cmp
fs
out
int3
fisubs
lret
pop
pop
negb
in
push
add
cmp
xchg
mov
pop
add
hlt
and
in
pop
out
sbb
mov
add
call
xor
fs
mov
adc
inc
mov
push
pop
sub
in
cmp
push
sub
mov
mov
xchg
inc
xchg
jmp
adc
jecxz
stos
jno
leave
push
ret
jmp
mov
push
pop
icebp
dec
adcb
adc
andl
lret
sub
lcall
xor
addb
shrl
inc
int3
jmp
pop
int3
test
or
stos
or
add
fwait
xchg
nop
sahf
and
gs
mov
jmp
repnz
fcmovne
xor
sti
cmpsb
xchg
ret
fcompl
cli
push
add
loope,pt
and
xchg
stos
mov
sahf
pop
testb
add
or
jl
pop
mov
push
leave
mov
jae
mov
push
mov
jnp
flds
fcoms
xor
pusha
pop
test
fldt
xor
hlt
test
add
push
mov
ljmp
pop
not
aam
push
adc
push
je
push
jns
lock
push
dec
and
sub
pop
pop
shrl
and
lock
pop
test
icebp
and
xchg
in
xchg
pop
repz
addr16
or
sbb
rol
out
lock
xchg
inc
incl
outsb
clc
sbb
dec
cmp
cmp
out
push
rcr
xchg
js
push
mov
pop
repnz
adc
add
jns
pop
fadds
mov
push
icebp
adc
and
push
popa
pop
lret
jmp
cmp
add
ss
push
cli
jmp
sbb
pop
loopne
sub
and
aad
testb
xor
xchg
insb
outsl
sub
inc
jmp
movb
dec
add
inc
neg
adc
fs
lret
dec
fidivrs
popa
rorl
ret
out
loopne
mov
pusha
shr
shl
add
add
jns
ds
ret
xchg
out
add
repz
sahf
cmp
push
add
out
les
mov
inc
mov
dec
jnp
adc
pop
cmp
add
sub
cwtl
or
movsl
ficomps
inc
je
add
shl
push
inc
add
jnp
cmpsb
add
add
or
pop
add
je
mov
or
jnp
mov
sub
pusha
sbb
or
adc
sbb
jmp
cmp
jle
dec
jmp
ret
jo
scas
add
add
push
das
inc
stos
jmp
in
stc
xchg
add
clc
mov
pop
push
cmp
inc
jo
pusha
bound
xor
xor
test
push
xor
insb
or
loope
push
dec
add
pop
cmp
mov
sub
adc
xor
lds
push
jmp
push
test
into
test
sbb
jp
es
dec
std
sbb
and
mov
lea
sbb
adc
rcpps
jmp
pop
repz
and
ret
and
pop
inc
dec
mov
add
popf
js
aam
fwait
pop
leave
mov
icebp
adc
mov
push
mov
mov
imul
adc
lds
mov
stos
ds
sub
push
jmp
ud2
dec
jmp
fisttps
cmp
jp
push
mov
push
mov
dec
in
pop
pop
add
and
push
in
adc
pop
xchg
in
icebp
leave
sbb
jo
mov
jne
fs
adc
rol
xchg
mov
cli
add
lock
add
sub
mov
fidivs
aaa
push
cs
add
pop
ljmp
pop
lods
scas
push
or
pop
lock
movsl
ffree
movsl
sbb
movsb
sub
pop
andb
cld
test
das
sub
cmc
sbb
push
xor
lret
int
inc
xchg
jbe
add
push
jns
push
inc
jmp
jne
xchg
xchg
cld
xlat
push
push
fs
dec
stos
inc
jmp
rorb
imul
addb
pop
push
repnz
pop
push
mov
jmp
aas
add
lahf
fs
and
shll
sbb
movsl
xchg
mov
imul
or
pop
jae
stos
lret
pushf
mov
daa
adc
pop
addr16
inc
scas
sbb
adc
lret
push
mov
ret
mov
or
pop
push
push
sub
outsb
dec
add
fsubrs
push
outsl
sub
or
js
or
and
dec
push
mov
jle
xchg
add
dec
push
popa
inc
jmp
or
pop
or
mov
cmpsl
or
sbb
or
mov
add
in
or
out
mov
push
rcrb
das
or
icebp
push
push
add
inc
sub
gs
pop
sti
bound
lret
dec
xchg
mov
jle
jb
fnstcw
in
loopne
mov
pop
mov
movb
xor
ret
cmp
stc
pop
inc
scas
in
push
mov
sub
bnd
add
mov
lock
sbb
xorb
push
popa
pop
dec
out
lea
or
jo
cmp
pop
scas
stc
jmp
subb
xchg
outsl
push
mov
sbb
jnp
push
stos
test
pop
or
in
jmp
enter
mov
and
xchg
or
ret
lret
inc
popf
shll
scas
sub
sub
ret
pushf
push
push
mov
sub
rorb
mov
mov
mov
or
insb
test
dec
test
mov
inc
xchg
and
loope
xchg
push
push
out
add
and
popa
sub
add
and
ret
jge
mov
rcrl
dec
inc
imul
dec
daa
mov
movb
jecxz
in
mov
xor
ds
adc
scas
ror
movsb
push
push
out
andb
test
or
add
clc
test
mov
push
leave
addr16
or
pop
stc
inc
adc
sub
or
mov
addr16
adc
dec
fists
mov
es
mov
movsl
xchg
add
push
mov
sbb
xor
shr
push
fsubrp
les
loope
loop
test
aaa
ret
leave
lds
into
lock
push
jmp
dec
push
stos
cmp
lahf
pusha
cmc
sub
mov
xchg
sbb
fwait
xor
xor
test
xor
bound
xchg
and
cmpb
imul
xor
pop
push
add
rcll
jmp
mov
and
and
cmp
and
test
or
cltd
mov
sbb
dec
push
test
inc
mov
movsb
scas
call
in
adc
loopne
pop
pop
pop
int3
dec
leave
mov
mov
add
push
mov
in
hlt
jle
dec
inc
mov
cmpsb
imul
add
push
mov
jle
jb
mov
insb
lods
fisubrs
and
mov
inc
adc
cmp
jo
shr
or
xchg
iret
adc
xchg
pop
addb
push
mov
xor
add
inc
movsb
or
testb
ret
sub
sti
popa
ret
test
stc
add
xchg
jns
movsl
mov
sbb
push
xor
xor
mov
sub
imul
bound
hlt
dec
cltd
stos
mov
in
jp
mov
adc
ja
add
push
pop
jnp
push
mov
xchg
fsubr
inc
decl
inc
or
fs
daa
stos
sub
xor
adc
pop
cmp
lods
pop
loop
dec
out
dec
mov
and
rcll
add
xor
xchg
mov
in
sub
cmp
inc
pop
mov
dec
popf
push
or
jbe
inc
and
inc
aas
push
jmp
fdivr
cmpb
jmp
adc
jp
pushf
ja
cmc
sub
das
testl
repnz
movsl
pop
stc
in
dec
scas
insl
imul
test
inc
adc
dec
xchg
clc
mov
cs
push
push
sub
shll
inc
incb
data16
sbb
stos
cld
xchg
sub
xchg
inc
cmp
push
sti
orl
mov
jnp
add
push
pop
nop
sub
ret
adc
lret
or
insb
int
aad
andb
dec
stc
sahf
test
push
jnp
sti
cld
mov
adc
into
cmp
sub
and
jmp
mov
xchg
popa
dec
into
std
test
xor
jmp
lret
sub
aaa
scas
das
mov
fisttpl
mov
imul
testl
out
sub
xchg
add
popf
popa
xchg
daa
lock
jmp
push
xchg
mov
pop
repnz
sub
adc
inc
xchg
jle
push
inc
sub
xor
jl
pop
repz
adc
jecxz
push
es
push
cmp
cli
dec
sbb
repz
sub
prefetchnta
and
movsl
bound
dec
push
or
pusha
lcall
mov
scas
jmp
xchg
rorb
push
cmp
xor
sbb
push
inc
mov
dec
pop
repnz
adc
mov
jnp
icebp
inc
push
cmp
add
lock
pop
loopne
stc
imul
rcpps
lahf
aam
cmp
jns
xorb
ret
inc
sbb
pop
ds
push
jmp
lret
push
lahf
pop
mov
jmp
fldcw
pop
je
pop
js
cld
mov
loop
clc
pushf
pop
push
cld
rorl
fwait
jmp
add
adc
inc
sub
cli
and
jmp
adc
xchg
sbb
je
lock
jae
lock
push
jne
clc
pop
add
testb
xor
xchg
insb
or
dec
cmp
leave
and
xor
pop
jae
mov
sbb
mull
fidivrl
adc
fucomi
das
notb
adc
repnz
mov
arpl
test
imul
aam
jp
xlat
and
lods
mov
rcr
pop
dec
xchg
lahf
aam
lret
add
orb
gs
pop
popf
jmp
out
clc
imulb
sub
fists
pusha
xchg
xor
mov
dec
nop
sub
testl
or
scas
push
push
mov
cmp
sub
inc
sti
sub
or
in
addr16
adc
push
aad
int3
shll
dec
add
fiaddl
mov
jmp
cs
jmp
lcall
mov
adc
in
imul
mov
and
mov
dec
call
das
stos
push
push
mov
fdiv
inc
test
gs
xor
ljmp
lods
xorb
cmp
cli
nop
clc
rcrl
or
lds
sbb
cmpsb
pop
sub
fiadds
pop
lret
pop
cltd
add
lds
jg
and
mov
outsl
push
insl
xchg
xor
scas
push
push
add
repz
xchg
mov
test
push
inc
jb
adc
or
dec
mov
and
das
or
jmp
addr16
je
stos
and
inc
and
add
push
xor
loope
pop
push
and
dec
cmpsl
add
lahf
push
add
cmc
xlat
sub
out
ja
loop
jae
jmp
mov
neg
or
ljmp
add
cs
imul
outsb
ds
lock
xchg
cmp
push
push
inc
pop
jae
sub
sbb
mov
aad
das
mov
jecxz
jmp
lock
adc
out
hlt
xchg
lods
pusha
sbb
jecxz
cmp
xchg
fnstenv
das
add
xorl
in
add
rorl
mov
stos
test
mov
jmp
xor
rorb
pop
mov
xor
rorb
fcmovbe
pop
clc
xchg
and
clc
jp
jo
popf
ja
add
in
dec
divl
dec
fldcw
mov
sbb
daa
in
je
cmp
jl
xchg
push
and
mov
mov
sbbl
lea
adc
pop
adc
insb
xchg
or
bound
xchg
cmpsb
mov
pop
mov
repnz
clc
or
dec
jp
dec
cs
mov
out
nop
cmc
xor
cmc
jbe
in
push
pop
add
mov
or
mov
inc
lds
add
fidivrl
jns
push
mov
enter
sub
jmp
insb
xor
sub
dec
xchg
cmp
or
fsubp
pop
lock
stos
add
fucomp
cwtl
sub
push
add
add
dec
adc
std
ds
mov
jmp
movb
jno,pt
push
stc
leave
imul
cs
lcall
sbb
dec
push
add
fs
and
adc
enter
ljmp
mov
aam
out
std
xchg
cmc
inc
xchg
or
adc
fs
add
mov
daa
out
jl
or
shll
push
aam
push
movsb
or
or
cmp
test
in
adc
dec
ds
sti
pop
inc
insb
push
cs
mov
ljmp
xchg
or
lods
in
pop
popa
pop
fstpl
ja
pop
xchg
mov
dec
add
hlt
or
rolb
push
xor
orl
out
sbb
hlt
sbb
dec
in
mov
cwtl
mov
add
xor
cmc
movsl
inc
enter
pop
inc
adc
imul
sbb
sub
mov
sti
mov
mov
aas
cld
dec
xlat
dec
xor
bound
imul
sbb
nop
mov
fbstp
lods
pop
mov
adc
mov
xor
add
mov
jbe
pop
dec
push
fistpll
add
leave
jne
or
or
xchg
je
lret
pop
mov
cmc
jne
sub
pop
sahf
rcrb
and
mov
loopne
jne
mov
xor
das
hlt
scas
out
clc
pop
adcb
test
jae
fsubrs
inc
data16
mov
es
xor
jne
dec
imull
sub
cmpl
lret
jg
or
add
or
add
fisttpl
fwait
xchg
push
sbb
das
ror
ds
in
dec
inc
or
fnstcw
mov
aad
jo
pop
xchg
js
lock
jmp
scas
nop
mov
jo
popl
add
pop
subb
sub
xor
dec
aaa
add
ds
test
test
sub
add
adc
sbbl
xchg
and
pop
nop
cmp
imul
dec
ljmp
lret
push
push
jmp
jns
or
movsl
push
push
xlat
adc
ljmp
add
add
sub
push
or
adc
xorl
repnz
jne
or
fstpl
mov
nop
mov
inc
jge
add
in
hlt
push
jmp
push
stc
add
cli
push
sub
cmp
push
pop
aas
push
sbb
xchg
iret
cmc
mov
mov
lea
ss
push
in
add
lret
inc
push
insb
mov
jo
nop
adc
mov
out
addl
jmp
je
pusha
xor
jne
das
jmp
push
roll
push
shl
jle
daa
add
jg
cmp
lahf
jne
ja
mov
add
add
xchg
or
sub
lock
push
mov
lcall
sbb
push
ffree
negl
dec
ret
pop
loop
add
cmc
adc
mov
ss
jbe
dec
fs
dec
mov
ret
push
repz
fisubrl
inc
into
idivb
mov
sub
shr
dec
push
daa
pop
jno
or
pop
test
movsb
dec
sub
jge
popa
xchg
out
pop
into
xor
sub
dec
pop
test
shr
pusha
scas
inc
je
pop
xor
cmpsb
orb
pop
mov
loope
dec
subb
pop
cmp
lods
jle
cmp
and
mov
jp
nop
dec
or
adc
add
cltd
ret
movq
mov
and
sub
xchg
es
jmp
ds
adc
dec
test
cs
push
adc
or
pop
xchg
mov
gs
jecxz
xchg
out
sub
jmp
stc
enter
popf
adc
cmp
mov
push
push
imul
hlt
cli
out
pop
push
in
add
mov
outsl
cmpsb
mov
mov
mov
cmp
shrb
add
decl
and
xor
sub
push
mov
pop
sbb
fs
scas
js
aaa
sub
inc
arpl
adc
sbb
and
daa
adc
push
xor
fincstp
jecxz
cmp
mov
hlt
cli
push
mov
mov
pop
or
push
std
loopne
data16
outsb
jbe
into
and
jno
push
and
mov
fwait
dec
insl
xor
repnz
pop
mov
adc
dec
je
and
mov
push
mov
sub
inc
mov
xor
std
and
out
addr16
jp
sub
nop
ja
into
lock
mov
pop
dec
inc
pop
sub
popa
cmp
push
das
adc
push
sub
push
xchg
js
lahf
pop
ss
shrl
pop
scas
sub
add
stc
mov
sub
test
orps
adc
stc
mov
mov
stos
pusha
mov
push
lds
lods
cmp
clc
dec
in
dec
pop
mov
and
pop
pop
imul
ret
or
fs
xlat
push
push
mov
mov
adc
stc
jg
aas
or
repnz
push
inc
imul
push
dec
add
addr16
stos
or
dec
mov
or
adc
xchg
add
and
comiss
sbb
repz
add
enter
les
loop
insl
loop
push
pop
adc
dec
xor
dec
add
incl
addb
outsb
mov
mov
dec
pop
decb
jmp
imulb
push
fdivrl
adc
jmp
add
inc
jp
sub
or
push
das
leave
loop
fucomp
fsubrp
mov
pop
push
in
xchg
xchg
rcrb
shlb
not
xor
xchg
xor
shlb
fisttps
mov
jge
sub
sub
mov
stos
rclb
adcl
test
jbe
push
std
test
rcrb
pop
push
mov
sub
push
jmp
xchg
jge
rolb
xorb
lds
mov
mov
mov
pop
mov
push
mov
and
pop
hlt
or
push
ret
in
jns
in
adc
mov
xor
arpl
dec
in
pop
adc
or
pop
pusha
and
inc
xchg
mov
pop
cmpsb
add
mov
out
rclb
push
fs
mov
js
xchg
shlb
push
out
cmp
add
stos
ja
loop
jmp
fcoms
push
and
aaa
mov
mov
mov
mov
je
js
cmp
neg
push
out
jnp
inc
xchg
sbbb
cwtl
mov
call
rep
out
jp
lods
mov
dec
divb
xor
in
sbb
jo
fmuls
and
mov
stos
add
dec
lahf
cli
lcall
sti
push
loope
adc
ljmp
xchg
inc
neg
jg
into
repnz
cmc
dec
shlb
cmp
ja
xor
arpl
adcl
sub
out
mov
jbe
xchg
sub
sub
and
cmp
jmp
xorl
and
and
mov
push
sahf
test
fstl
push
shrb
push
mov
movsb
lods
ficomps
dec
movsl
in
or
pop
fnsave
or
lcall
add
push
and
jmp
enter
rclb
movsl
aaa
push
neg
push
fs
or
inc
sbb
adc
not
add
pop
push
xchg
inc
dec
or
clc
add
xchg
sbb
push
pop
testb
push
xchg
add
js
fcom
cltd
adc
sub
out
jne
jae
or
and
sbb
lahf
adc
jmp
jmp
sbbl
add
cmp
add
jno
lea
xchg
xchg
or
test
sti
shr
cmp
sub
mov
mov
inc
xor
loopne
mov
int3
pushf
or
cld
pop
push
std
in
mov
xor
bound
mov
jg
rclb
out
jne
popf
fwait
or
mov
push
add
jecxz
add
adc
cmp
push
xchg
sub
and
add
incb
cmc
jl
testb
fadd
adc
call
xlat
inc
aaa
pop
dec
push
push
and
pop
mov
enter
lahf
jnp
mov
push
je
pusha
sub
cmp
ret
or
sbb
cli
xchg
bound
test
pop
aad
xchg
pop
add
mov
jmp
test
push
lcall
imul
roll
imul
cmpsb
mov
xor
mov
xchg
in
add
or
pop
xchg
pop
push
decb
mov
adc
push
test
jns
pusha
pop
push
arpl
rdtsc
aam
repnz
imull
testb
push
shl
int3
inc
out
inc
pop
mov
or
loope
push
aad
fsub
mov
adc
pop
dec
test
mov
int
push
cmc
fstpt
push
add
inc
popf
adc
mov
jl
xchg
inc
lds
sbb
sbb
ds
bound
aas
lea
jmp
mov
adc
fsubs
rcrb
jp
sbb
fcoml
xchg
mov
add
lret
pop
and
jmp
loopne
data16
mov
mov
or
fisttps
and
or
push
sar
push
popf
jne
jge
ret
sbbl
enter
out
xchg
les
cwtl
xor
jnp
icebp
xorps
leave
add
jbe
mov
popa
out
add
adc
mov
jmp
mov
jae
add
rcl
mov
sti
adc
out
repnz
pop
std
jae
imul
jl
or
push
add
cmc
jo
and
add
call
adcb
pusha
pop
imul
sti
cmp
sub
shrl
repnz
call
pop
ja
xchg
inc
sub
out
pop
xchg
insb
dec
out
iret
jle
sub
jbe,pn
xchg
and
out
jmp
nop
push
aaa
sarb
dec
in
movq
sbb
push
clc
push
xor
jo
mov
mov
dec
inc
icebp
mov
mov
mov
stos
aam
loopne
add
pop
adc
movl
and
cwtl
vcvtpd2psx
ljmp
sub
pop
cwtl
mov
dec
and
cwtl
mov
pop
xor
in
or
shr
and
popf
subb
cmpsb
xchg
frstor
js
xor
icebp
adc
dec
jbe
push
add
or
cmp
ror
sub
int3
mov
adc
or
sub
sub
mov
xor
xchg
push
xor
scas
mov
adcb
arpl
cwtl
nop
add
adc
shrb
into
jl
add
push
repnz
add
mov
in
jmpw
adc
jmp
fldlg2
inc
jl
sub
sti
and
bnd
xchg
sub
sbb
sub
stos
xchg
rcrl
mov
dec
jl
push
dec
xchg
imul
push
hlt
pop
and
xor
xchg
jnp
cld
data16
mov
andl
data16
sub
inc
sbb
cli
inc
ljmp
icebp
es
lret
shrl
js
nop
inc
push
repz
and
jg
jb
daa
das
addr16
pop
inc
and
pop
loope
imul
add
or
js
sub
std
outsb
mov
cld
stos
jne
push
adc
cmpb
pop
xor
sub
pop
mov
cltd
mov
lods
adc
fdivl
cli
inc
les
repz
popf
mov
mull
inc
cmp
xor
iret
sbb
mov
into
mov
es
push
xchg
das
addl
jge
shrl
jo
lods
sbbb
mulb
add
sub
push
mov
aas
lods
mov
xor
das
jne
add
cmp
shll
fimull
push
pop
mov
mov
cwtl
xchg
inc
inc
repnz
sbb
lcall
push
jnp
popf
sub
xlat
lahf
cmpsl
and
sbb
les
and
les
cltd
mov
fcomps
out
mov
fsubl
push
sub
push
int
mov
xchg
pop
push
in
push
push
push
push
mov
rol
add
jle
inc
mov
ret
pop
insb
ret
push
icebp
aas
icebp
and
and
hlt
sub
xchg
pushl
sub
ja
gs
clc
mulb
repnz
mov
or
pop
enter
push
xchg
mov
out
pop
add
xchg
xor
xor
sets
or
orb
and
mov
sub
pop
adc
inc
mov
add
test
stos
inc
loope
stos
cmp
mov
idivl
loope
push
sbbb
push
mov
pop
dec
jno
mov
clc
and
outsl
inc
ud1
push
or
push
movsb
in
es
pop
popa
push
xchg
pop
or
imul
pop
test
add
adc
push
loopne
cltd
cmpsb
lea
lock
jb
and
mov
and
hlt
and
or
orl
dec
mov
aas
movsl
ret
fldt
xchg
jmp
jg
or
cs
cmp
enter
jns
les
mov
push
ret
inc
stos
lods
imul
inc
pop
js
in
or
dec
mov
or
pop
ja
push
add
cs
add
scas
xchg
pop
adc
out
dec
loop
fdivs
mov
and
dec
pop
scas
mov
imul
das
lods
and
aam
inc
in
test
fcom
shrl
cmpb
lret
movsl
popf
inc
dec
push
ffreep
pushf
ljmp
popf
pusha
cmp
test
jmp
pop
popf
idivl
cwtl
jmp
pusha
mov
das
std
aas
test
mov
cs
push
sub
xorb
imul
pop
dec
stos
jo
push
fists
and
notl
push
ret
xor
repnz
pop
xchg
xor
aam
xorb
in
out
lret
mov
mov
sbb
les
sub
cltd
lahf
imul
outsb
jg
sbb
add
outsl
xor
jmp
jmp
jp
add
adcl
sti
rorb
or
mov
jae
and
push
mov
dec
incl
rolb
pop
sbb
push
adc
ljmp
sub
aas
sbb
push
cmp
xor
mov
dec
xor
sbb
pop
xor
mov
rcll
pop
loope
push
lods
cmp
xor
or
sbb
aaa
xor
cmc
jne
push
or
jbe
cmc
sarl
andb
pop
loop
cmc
and
push
sub
adc
ljmp
pop
jae
pusha
add
out
or
sarb
jae
add
mov
dec
add
push
nop
lea
pop
jmp
jmp
dec
clc
call
add
fs
sti
leave
lahf
and
test
or
rep
scas
loop
inc
ret
push
or
dec
bound
mov
jo
jge
inc
add
das
jmp
addr16
mov
movl
jb
pop
push
in
out
mov
adc
leave
or
fcomps
in
mov
cld
jb
xchg
add
std
sbbl
and
adc
fstps
mov
adc
and
mov
push
jg
pop
push
push
sub
and
mov
addl
push
in
add
ss
pop
jmp
pop
push
xor
inc
cld
push
sbb
pop
sub
add
add
xor
hlt
mov
jmp
mov
pushf
jmp
stc
push
popa
and
pop
das
cli
and
cmp
fcoml
not
inc
in
pop
push
mov
pusha
xor
pop
jg
xchg
jae
mov
adc
ds
add
jmp
or
pop
js
subb
bound
add
stc
inc
pusha
test
stos
pop
adc
addl
dec
jmp
xchg
push
andl
push
adc
fwait
sahf
ds
mov
mov
inc
dec
pop
adc
out
scas
add
and
sbb
adc
fadd
push
jnp
aas
add
mov
ds
aam
lret
inc
add
push
inc
fwait
and
cwtl
mov
dec
push
into
cmc
stos
cmp
inc
or
push
dec
cs
adc
add
call
in
cmp
cltd
inc
jns
das
aam
notb
pop
fstl
push
vrcpss
or
jne
mov
add
jbe
mov
orb
jb
cmp
lret
loope
push
xchg
sbb
cmp
jmp
adc
leave
mov
adc
and
dec
lahf
icebp
popl
cli
add
int3
add
jbe
out
pop
notb
fucomip
push
xchg
xchg
aam
xchg
movl
pusha
sbb
mov
aam
jns
cld
jo
mov
subb
adc
adc
insl
or
jmp
dec
shr
push
mov
pushf
adc
movsl
hlt
and
mov
sub
loope
ret
lock
mov
fmull
stos
mov
push
mov
adcb
push
aad
mov
mov
dec
push
xchg
or
ret
rolb
cmpsl
xor
xor
repnz
adc
add
out
pop
jae
std
xor
in
xor
out
cmp
jge
jnp
lods
mov
ss
lret
loop
in
pop
mov
adc
fadds
jmp
mov
or
lret
add
jne
and
dec
adc
out
or
fbld
scas
push
dec
jns
jbe
paddd
pop
push
and
push
inc
add
data16
fists
out
xor
sub
push
add
inc
pop
dec
pop
or
push
add
sub
pop
repnz
pop
out
cs
movsl
ds
add
adc
pop
stos
add
jae
inc
jo
push
mov
xlat
or
push
fistl
mov
xchg
stos
xor
shrb
out
cmp
aas
das
push
ljmp
xchg
fwait
hlt
jmp
shr
les
lcall
in
fisubrs
jmp
dec
xchg
fnstcw
ror
lods
adc
divl
inc
mov
js
cmp
jecxz
dec
or
push
dec
jnp
sub
pop
stos
loop
lret
and
into
ret
stos
push
fiadds
dec
rcll
jmp
out
mov
sub
push
icebp
scas
mov
pop
dec
andb
shl
fists
int
rolb
xchg
rolb
sub
nop
popa
add
cmpb
xor
pop
cmp
iret
outsb
mov
mov
push
mul
sbb
or
add
jae
xor
stos
inc
jmp
pop
aaa
in
call
cmp
pop
cs
shlb
int
add
inc
sub
jmp
push
or
shll
pusha
push
inc
or
add
or
xchg
cld
les
clc
test
push
sqrtps
stc
outsl
add
xor
jle
jne
xchg
filds
mov
je
xor
mov
mov
cmpsl
pop
mov
test
jg
sbb
roll
push
push
pop
hlt
mov
mov
test
cmp
cmp
pop
aas
ret
and
sbb
xchg
xor
push
fnstenv
into
imul
fnstsw
mov
inc
in
sub
jle
xor
push
fstpt
repnz
adc
repnz
pop
insb
pop
push
rorb
mov
add
pop
sub
mov
sub
push
rol
lcall
sbb
mov
das
and
ret
add
enter
pop
jbe
mov
pop
sbb
daa
shrl
xor
sub
add
push
or
pop
mov
inc
aas
sub
xor
pop
push
cwtl
aaa
inc
fmuls
hlt
outsb
rorl
mov
mov
mov
scas
movb
bswap
push
lret
sub
add
xchg
sbb
ret
mov
or
adc
push
and
sub
clc
clc
dec
mov
mov
adc
sub
gs
jne
sahf
cltd
inc
mov
nop
jecxz
pop
and
pop
push
jmp
and
cmp
popa
mov
lret
push
add
test
mov
loop
mov
add
imulb
jmp
push
mov
or
add
imul
xchg
sub
and
xor
jb
nop
dec
push
add
inc
or
stos
and
pop
pop
and
mov
hlt
jns
or
fwait
xor
mov
or
sbbl
dec
in
xchg
jnp
pusha
cli
cld
iret
loope
or
nop
rclb
jmp
lahf
out
stos
dec
xor
fmuls
fs
out
cwtl
lods
popa
cs
popl
and
addl
sub
sub
fucomi
mov
dec
dec
out
ljmp
cs
out
pop
and
cmp
xlat
and
push
int
or
nop
imul
xchg
cmpsb
jg
sti
ja
testb
scas
outsb
rcrb
aas
dec
movsb
pop
rolb
mov
sub
mov
dec
sub
out
es
jae
test
cmp
sarl
dec
mov
cltd
mov
xchg
push
add
inc
ja
xchg
shr
hlt
and
pop
in
insl
add
inc
sbb
push
cmp
cli
lock
scas
add
divb
jno
rorb
push
and
cmpsb
adc
lods
inc
inc
test
lcall
and
pop
mov
push
and
inc
add
pop
mov
daa
or
iret
hlt
das
mov
cmp
js
dec
pop
or
ret
not
or
cs
dec
push
bnd
pop
add
sub
sub
data16
bound
jae
xor
loopne
cmpsb
sub
mov
mov
test
shrb
orl
test
adc
data16
lret
and
push
pop
push
repnz
sub
pop
xor
jbe
pop
jmp
test
insb
rcll
mov
insb
pop
outsb
dec
xlat
rcll
push
in
imul
data16
mov
sbb
cmp
aaa
cmpsb
or
popa
and
in
es
xor
cmp
ja
mov
icebp
cmp
std
es
imul
je
pop
push
inc
jge
push
rorb
pop
pop
xor
popf
fbstp
outsl
and
andb
mov
jo
push
pop
dec
and
lcall
add
or
frstor
cltd
lods
sub
daa
pop
or
sub
fistpl
or
jg
push
rcrb
idivb
mov
int3
bound
mov
andl
mov
jne
inc
xchg
stos
in
and
add
test
pop
cmp
pop
jmp
add
or
dec
jo
add
and
add
inc
aas
shrl
jae
js
push
xchg
mov
pop
xchg
in
sub
popf
jg
ret
lahf
fcompl
sbb
pop
loop
sub
mov
sub
lds
inc
lcall
mov
lret
pop
loope
cmp
aas
je
or
inc
sarb
and
cmc
rorl
loop
out
adc
or
mov
je
or
mov
xchg
sbb
leave
jae
cli
insb
shlb
adc
mov
pop
pop
repz
dec
lret
std
popa
int3
sbb
int
mov
dec
adc
push
pop
and
addr16
or
pop
sub
lahf
xor
mov
jge
or
int3
enter
or
mov
xor
mov
mov
and
sub
test
mov
mov
ret
pop
cmc
mov
jl
mov
pop
scas
add
and
mov
add
outsb
aam
adc
fs
push
mov
stc
cltd
mov
into
inc
pop
sbb
jb
les
js
cli
aaa
pusha
dec
xlat
push
out
inc
mov
or
jmp
push
sarb
cmpsl
loopne
add
clc
adc
lds
push
xchg
orl
xor
xor
int
push
or
add
xlat
loopne
ret
loope
and
lds
xlat
add
cwtl
adc
adc
lea
dec
mov
in
and
and
repnz
test
mov
fs
xchg
scas
cmp
push
dec
jmp
hlt
push
mov
stos
or
ret
jns
lahf
div
shl
xor
xor
iret
les
and
pop
pop
kxorb
sbb
and
adc
and
add
sbb
dec
mov
xor
mov
xchg
pop
lock
inc
lds
js
push
jge
sarl
or
rcrb
aad
push
adc
cli
fstpl
scas
pop
insl
fstps
xchg
mov
pop
add
push
sub
gs
xor
dec
div
dec
jb
inc
adc
hlt
sbb
movsb
adc
sub
inc
sbbb
dec
stos
pop
cmp
sti
push
fidivs
cmp
or
cmp
outsl
sbb
and
and
add
jae
sub
push
adc
cmp
aam
push
push
jb
push
xor
cmpl
shll
sub
or
lea
lds
loop
dec
sbb
mov
pop
dec
or
jns
stos
pop
push
fsubrl
inc
or
push
cmp
pop
notl
jge
sub
fadd
inc
add
mov
daa
xor
out
adc
adc
jne
add
test
stc
test
out
sarb
pop
and
mov
in
imul
fs
icebp
mov
push
mov
test
sbb
or
or
shl
push
and
testb
push
cmp
shrb
add
push
or
sub
add
or
bound
sti
sbbl
dec
cli
mov
dec
xchg
dec
mov
jmp
mov
mov
push
loope
pop
clc
nop
imul
mov
neg
push
add
mov
jmp
xchg
mov
push
cs
loop
shrb
icebp
cs
xor
cmp
pop
cmp
scas
or
fimuls
xor
xchg
rclb
testb
or
mov
mov
cmp
mov
push
pop
or
or
inc
das
stos
jo
dec
pop
xor
push
dec
sub
xor
call
mov
shll
adc
or
mov
adc
pop
xor
sbb
inc
insb
mov
jecxz
fadds
sbb
pop
gs
push
mov
adc
add
shr
nop
push
xlat
insb
push
fsts
mov
jmp
mov
sub
scas
push
or
cmp
fists
push
add
bnd
ficompl
adc
pop
add
or
stos
mov
pop
sti
push
mov
mov
clc
mov
popf
bound
fmul
cwtl
test
jp
dec
nop
imulb
inc
mov
push
cmp
add
sti
inc
xchg
ret
ja
adc
in
in
sar
add
shlb
sbb
mov
mov
adc
fcompl
xchg
push
mov
and
mov
roll
bound
pusha
push
push
mov
sbb
pop
or
jge
add
inc
inc
jo
mov
jnp
scas
push
xchg
push
add
add
jmp
push
add
pop
jmp
push
sub
sub
es
mov
xor
dec
das
sbb
jg
cli
ret
cmp
inc
sub
pop
pop
cld
pop
inc
shlb
test
cld
xor
push
pop
sub
ljmp
add
inc
cmpsl
cmp
sarl
mov
leave
pop
or
push
add
repz
jnp
adc
mov
hlt
mov
push
adc
sub
adc
or
inc
stos
xchg
push
sbb
push
cmpsb
sub
or
cmpsl
jp
aad
ret
orb
add
cmp
mov
cs
loope
fs
fnstsw
in
push
xchg
rol
test
scas
mov
rcrl
aas
or
sbb
sub
adc
sub
jmp
inc
push
mov
add
popa
testb
rol
xchg
and
mov
and
mov
pop
sub
sahf
lea
dec
add
pop
pop
sub
roll
stc
js
sarb
push
mov
mov
mov
xor
jae
inc
pop
enter
sub
cli
dec
arpl
jle
das
jl
jp
xchg
lds
aas
mov
and
std
in
pop
xor
aad
sub
es
pop
ret
xlat
xor
inc
loope
sub
ficoms
push
ds
sbb
inc
mov
sub
das
pop
in
and
in
sub
sbb
jmp
mov
and
stos
idivb
xchg
rclb
call
push
mov
or
inc
pop
jne
add
dec
fsin
push
pop
sub
mov
xor
add
xor
pop
dec
daa
cmp
xchg
scas
icebp
movb
popa
dec
push
adc
or
fisubrl
xlat
push
negl
sub
ffree
shlb
mov
add
mov
sbbl
ds
mov
push
les
out
mov
push
mov
or
dec
ret
fdivs
fnstenv
xchg
lcall
leave
in
pop
xchg
fiadds
pop
push
mov
inc
std
clc
add
lahf
or
hlt
int
push
sub
subb
loopne
jb
sub
dec
xchg
add
daa
push
jecxz
clc
into
mov
and
incb
or
sub
mov
fcmovb
bound
and
fidivs
aas
mov
out
push
pushf
sbb
cmp
iret
in
inc
inc
add
dec
or
dec
sbb
enter
cmpl
pusha
xor
aad
jg
ds
dec
sbb
iret
rclb
or
je
push
pop
rcr
xor
jmp
sub
dec
cmc
dec
es
pop
scas
add
xchg
je,pt
jo
push
push
and
loop
and
jle
bound
fucomp
xor
sub
jns
xchg
adc
mov
jge
pop
jmp
ret
fadd
loopne
fdivs
push
hlt
add
lds
int3
xor
mov
push
push
inc
and
mov
mov
sbb
or
sahf
or
add
jb
dec
pusha
add
lds
clc
jmp
sub
icebp
icebp
fbstp
cmp
rorl
pop
mov
jmp
fld
sub
hlt
pop
mov
adc
loope
fdivl
loop
or
lds
inc
pop
push
dec
jne
movsb
mov
std
js
dec
pop
dec
cld
jnp
mov
add
popf
xor
dec
push
push
stc
inc
xchg
not
leave
or
or
add
pop
inc
arpl
ret
inc
ret
aam
test
cmc
xchg
or
sub
cmp
testl
addr16
addr16
mov
push
bound
add
push
mov
roll
mov
jp
or
add
adc
push
gs
or
cmpsl
lods
movsl
push
push
pusha
push
push
dec
test
xchg
movsl
push
in
nop
cmp
pop
jmp
mov
push
xchg
mov
loopne
mov
adc
shr
call
ror
inc
fiadds
sub
movaps
repnz
mov
fbstp
push
into
cmp
xchg
xor
int3
fmuls
dec
push
cmpsb
or
mov
notl
jmp
cmp
movsb
outsl
mov
jmp
pusha
pop
mov
loope
aas
dec
jno
xchg
sub
sbb
es
jnp
or
add
inc
lock
jns
jl
cmovg
pop
pop
aad
stos
imull
xlat
subb
xchg
std
test
mov
je
arpl
loope
adc
loopne
mov
cld
ret
loopne
push
scas
cmp
mov
jge
or
and
or
dec
notl
push
mulb
lods
and
ret
cs
mov
nop
ljmp
out
inc
or
ja
adc
pop
xchg
push
xor
or
loop
and
pop
xor
jg
loopne
fcompl
pusha
jno
add
inc
xchg
mov
dec
aad
fdivrl
stc
push
stos
into
jo
into
neg
or
pop
rorl
arpl
je
and
dec
je
add
pushw
mov
pop
or
jmp
pop
les
mov
mov
call
mov
pop
inc
outsl
and
pandn
sub
mov
imul
xor
mov
lods
pop
call
fldcw
enter
add
push
out
in
cmp
lahf
pop
and
pop
out
movsl
fs
inc
sub
into
cmp
add
shrl
orb
jns
xor
mov
pop
adc
jmp
xlat
int
mov
mov
bt
cmp
and
xchg
mov
stc
cmp
pop
adc
data16
punpckhbw
sbb
inc
es
and
sbbl
add
ja
test
clc
mov
push
mov
pop
xor
push
stos
add
loopne
inc
nop
mov
push
sub
cmp
adc
mov
push
add
sbb
xchg
dec
inc
lea
push
pop
adc
mov
pop
or
cmp
idiv
iret
jo
stos
in
rorb
lods
jmp
fstps
mov
insb
into
outsb
hlt
dec
and
push
mov
sbb
in
adc
xlat
mov
test
add
jge
push
add
pusha
push
daa
cltd
xor
adc
testb
mov
jge
push
pop
mov
inc
daa
jmp
push
push
ss
mov
pop
jae
or
pop
lods
lahf
icebp
iret
call
xor
or
xlat
je
rcr
in
xor
jmp
pop
sub
pop
add
hlt
jmp
adc
and
jge
jno
push
ds
fldenv
and
outsl
add
adc
pop
ja
or
das
jl
inc
pop
xor
pop
push
dec
jmp
pop
ret
or
notb
push
pusha
push
insb
pop
ds
daa
dec
add
in
scas
adc
cmc
pop
mov
inc
cmp
mov
pop
pop
fs
shlb
cmp
cmp
push
xchg
ficoml
fcoml
jns
jb
dec
dec
ret
aaa
arpl
add
jne
int
and
mov
add
popa
inc
mov
jmp
mov
das
mov
pop
and
dec
cmpb
pop
push
add
xor
and
cli
adc
and
mov
ljmp
fucom
je
shrb
das
or
mov
stos
outsl
mov
mov
cld
and
pop
push
or
stc
pop
dec
sbb
paddq
push
jp
in
and
pusha
lock
adc
int3
adc
push
repz
loopne
jmp
mov
das
movsb
repz
sar
sbb
adc
adc
pop
mov
mov
jecxz
shrl
fwait
repnz
bound
fadds
fsts
not
or
fisttps
imul
dec
scas
fs
mov
rol
outsb
cltd
jmp
pop
loopne
mov
mov
and
mov
mov
and
iret
mov
push
adc
jmp
dec
fdivp
and
hlt
int
ja
lret
inc
out
popf
pop
stos
inc
jg
pop
xchg
pop
mov
js
or
fiaddl
popa
push
inc
lret
jmp
mov
xchg
mov
or
pop
pushf
enter
add
add
cmp
fsubrs
xor
mov
push
mov
dec
add
stos
add
cmp
scas
test
fsts
push
jmp
dec
sub
push
scas
sub
scas
cmp
cs
push
flds
mov
lea
ds
add
cmpsb
cmpsl
loope
int3
pushl
add
loopne
cmc
pop
push
or
push
outsl
insb
or
mov
pop
push
add
adc
or
add
or
mov
jge
repz
fcmovu
push
sbb
pop
shrb
in
mov
inc
or
inc
add
pop
jo
adc
jns
xchg
dec
shrl
pop
subb
cmpsb
mov
pop
pop
cmp
scas
jns
ret
cmpsl
or
sti
push
dec
stc
clc
dec
inc
dec
aaa
jmp
cli
loop
rclb
xor
pop
inc
sbbb
ds
or
jmp
sub
movb
add
rorl
loop
push
in
mov
out
pop
jmp
lcall
add
push
push
mov
sbb
repnz
lds
fdivrl
or
pop
sbb
stos
neg
sub
cltd
or
xor
mov
xor
cmp
mov
insb
mov
or
pop
jo
inc
das
shr
push
pop
mov
aaa
cmp
dec
add
jp
lock
fstpt
pop
adc
adc
pop
mov
xchg
cli
fdivl
das
mov
out
rcrl
push
xchg
dec
pop
cmpsb
sahf
adc
pop
jl
pop
jno
inc
mov
or
xchg
jle
fiaddl
pushf
clc
rolb
jg
rorb
inc
xor
pop
dec
push
cmp
addb
inc
or
sbb
and
or
xor
popf
add
inc
test
xor
sub
mov
cmp
ljmp
call
sub
mov
fs
daa
push
mov
fcompl
lods
cmpsl
cmp
imul
dec
push
push
fstl
jg
push
jns
pop
shl
jp
jl
dec
mov
fists
jmp
mov
roll
xor
mov
inc
scas
pop
sbb
cs
add
pop
or
sarl
pusha
mov
cmc
dec
mov
push
lds
pop
sbb
or
push
pop
push
cld
jb
add
jmp
jp
imul
mov
mov
mov
cld
lahf
push
arpl
jne
push
sbb
cs
push
push
stc
popa
loopne
push
or
add
arpl
not
push
jmp
xchg
das
add
jns
mov
in
cmc
xor
insb
pop
mov
dec
dec
dec
push
mov
xor
dec
fimuls
jecxz
xchg
push
sub
inc
push
addl
out
add
sbb
aam
sub
pop
jmp
dec
mulb
add
repz
aaa
cmp
mov
or
add
fstpt
ljmp
ret
lods
add
cwtl
adc
insb
mov
add
popa
in
add
dec
push
loop
dec
arpl
jmp
mov
lret
cmpsb
je
enter
loope
mov
cmovo
jmp
dec
or
add
xchg
incl
jmp
dec
sub
mov
fbstp
mov
in
daa
stos
add
pop
fldl
ret
dec
imul
jmp
cmp
or
data16
fldenv
jmp
sbbl
xchg
fsubr
int
adc
xchg
cmpsl
adc
add
rorb
push
dec
jns
popa
testl
fsubs
add
sysenter
leave
jae
sbb
inc
add
pop
lea
sub
sub
sub
pop
or
mov
mov
nop
popf
int3
jae
add
ret
icebp
jecxz
mov
and
mov
jmp
iret
cmp
cwtl
dec
xor
bound
and
clc
push
xchg
fdivs
in
cwtl
xchg
cli
pop
aad
mov
xor
aas
cmp
repz
pop
or
in
aam
outsb
mov
jae
or
jmp
iret
mov
nop
adc
movmskps
shll
not
sub
gs
int3
jae
pop
das
jns
loopne
loope
jo
push
dec
and
inc
leave
aaa
cmp
add
xor
sahf
and
lock
and
lcall
xor
ds
fs
mov
mov
pop
sti
mov
int3
sub
out
mov
push
or
fistl
ret
mov
jmp
sub
mov
cmp
jge
test
mov
inc
jg
movsl
add
aad
ffreep
sub
pop
mov
ret
insb
pop
push
sbb
das
ljmp
pop
stc
mov
out
push
adc
rorl
and
xchg
mov
insb
dec
dec
pop
mov
insl
jne
repnz
pop
rorb
sub
imulb
add
ss
insb
cwtl
rcll
adc
adc
pop
loopne
xor
lret
movsl
xor
sbb
aad
test
dec
add
dec
jns
dec
inc
or
xlat
mov
add
mov
dec
jecxz
addb
or
jae
jmp
jmp
scas
xor
nop
sub
jg
cmp
mov
ficompl
ljmp
xchg
aaa
sub
push
pop
je
jp
xor
fstps
mov
or
dec
add
ja
fdivs
lds
lds
jle
pop
dec
in
sub
add
shlb
or
scas
pop
push
mov
leave
sarl
and
cmpb
xchg
mov
push
jmp
test
scas
enter
inc
ljmp
push
sbb
mov
add
push
jbe
icebp
push
jne
inc
popf
sbb
dec
cmp
or
inc
push
dec
nop
negl
mov
inc
shll
jl
pop
popf
push
jne
add
adc
mov
pop
and
jmp
repz
hlt
stos
sub
pop
daa
add
fsubrs
mov
or
nop
insl
jne
call
or
push
shll
fucomi
ret
xlat
pop
adc
and
lret
add
push
fidivrs
in
and
dec
and
movsb
adc
cmpsb
pop
inc
cmc
push
sbbb
data16
jecxz
nop
sub
insb
jl
jo
pop
mov
adc
mov
stos
xchg
retw
mov
aam
add
push
clc
jbe
jp
cmp
and
sub
or
xchg
dec
add
repz
push
xchg
cmpsl
add
call
insb
outsl
fwait
shll
rorl
divps
push
and
data16
shrb
and
js
lahf
mov
pop
xor
push
aas
scas
loopne,pn
lock
mov
xchg
movl
push
andb
add
loop
sub
push
sub
add
shrl
push
pop
pop
xor
clc
and
dec
enter
push
inc
cltd
xchg
mov
jg
xlat
addb
ja
mov
inc
scas
into
pop
or
into
test
and
push
mov
jp
xor
pop
nop
xchg
inc
sub
or
enter
sbb
add
call
dec
push
and
xchg
es
and
enter
aam
in
loop
jl
ljmp
flds
inc
xchg
mov
ds
jmp
jle
pop
pop
test
mov
xchg
or
push
jno
lock
cmp
ja
test
xor
dec
pop
xor
inc
jmp
mov
xor
iret
pop
pusha
gs
repnz
jns
pop
push
xor
mov
mov
sub
xchg
xor
out
test
loope
std
pop
bound
adc
bound
aas
pcmpgtd
stc
pop
xchg
pop
add
dec
out
cmp
adc
dec
pop
ljmp
xor
ds
push
or
pop
push
push
add
inc
sub
push
testl
and
xchg
push
lods
add
sbb
or
roll
xor
popa
or
sti
orl
or
daa
imul
xor
push
rcll
es
out
cmp
rorl
lret
out
jle
clc
push
shl
aas
sub
sbb
fsubs
push
stc
cmpsl
pop
push
add
dec
in
ljmp
mov
hlt
mov
push
mov
xchg
cld
mov
jno
imul
inc
xor
dec
xchg
or
int
shr
push
xchg
adc
or
sbb
insl
sub
test
es
add
cwtl
pop
sahf
pop
and
pop
mov
and
sbb
pop
or
lret
push
pop
pop
pop
sbb
cmp
cmp
test
jb
aas
out
jnp
mov
test
fiaddl
cmp
jae
push
enter
mov
push
jmp
outsb
add
mov
ljmp
push
jmp
mov
inc
dec
in
jnp
sub
xor
xlat
mov
push
jmp
xchg
test
cs
aam
mov
inc
push
jmp
lock
addl
mov
xor
scas
adc
insb
add
test
mov
sbb
push
add
xor
stos
and
shrd
and
add
repz
adc
std
push
cmp
inc
cld
sub
mov
jns
add
mov
add
sti
adc
cli
xor
mov
cmp
pop
and
das
push
pop
lds
pop
mov
addl
cmp
adc
in
jo
push
addl
scas
in
push
or
cmc
jns
cmpsb
fsts
xor
push
rorl
je
cmpsb
fmull
inc
mov
mov
jne
push
sbb
sbb
mov
add
das
mov
xor
inc
jl
pop
push
add
out
push
jge
je
popa
add
js
pop
testb
pop
pusha
into
push
repz
and
mov
xor
movsl
xlat
aas
mov
cmpsl
or
add
mov
add
pop
andb
rclb
xchg
mov
cmp
in
mov
sbb
pop
and
or
imul
popl
xor
dec
scas
lea
nop
sub
jne
pop
fs
jmp
jl
pop
fsts
ficomps
rclb
pushf
add
ss
jbe
icebp
addl
mov
adc
pop
lret
or
jne
jmp
mov
and
rcrb
pop
mov
sbb
dec
push
lret
jnp
ja
xor
int3
cs
es
mov
not
push
xor
xor
inc
sbb
sub
jp
aas
sti
and
mov
push
cmp
cli
xchg
pop
push
push
pop
imul
push
mov
push
jb
divb
aam
jbe
bnd
jb
push
incb
pop
jl
push
add
dec
pop
or
enter
jmp
xor
or
lahf
jmp
andb
push
mov
jno,pn
ljmp
fisttps
dec
inc
imul
sub
dec
mov
movsl
decb
xchg
jge
dec
push
mov
add
push
or
sub
or
and
dec
xchg
dec
and
test
imul
adc
sbb
pushl
lret
sahf
add
shlb
mov
inc
lcall
addr16
and
clc
decl
xor
das
jmp
xor
xchg
and
fldt
xor
pop
jmp
in
jne
cld
inc
aas
xchg
pop
test
mov
rol
pop
xchg
pop
sub
add
or
rol
aaa
lahf
clc
cmpsb
out
mov
push
add
cmp
or
adc
mov
or
mov
jecxz
pop
dec
pop
ret
das
rcl
jae
ret
jae
adcl
in
cs
ljmp
jl
mov
shlb
jmp
sqrtps
jno
adc
leave
inc
and
shrb
jne
inc
adc
je
scas
rol
mov
icebp
dec
cmp
pusha
inc
mov
inc
idivb
cmp
addb
mov
jbe
dec
icebp
ja
lret
mov
dec
xor
pop
jl
dec
inc
xchg
inc
adc
push
mov
push
bound
mov
pop
sbb
ret
cmp
dec
sbbb
ficompl
inc
add
mov
or
scas
sub
fs
lock
stos
mov
sbb
mov
pop
mov
mov
lahf
rorb
gs
ret
sub
add
loopne
sbb
dec
sahf
aaa
and
lods
cld
adc
stc
dec
andb
cmpsl
popf
dec
sahf
push
and
pop
pop
or
pop
or
nop
dec
dec
add
lret
pop
mov
xchg
mov
pop
das
data16
or
or
jge
mov
dec
mov
sub
and
add
add
dec
clc
mov
lds
lods
into
add
or
pop
jge
inc
ljmp
pushf
jmp
shrl
stos
xchg
xchg
mov
sti
push
pop
daa
jl
cli
push
mov
lds
add
out
or
mov
push
jmp
ret
mov
pop
and
dec
pop
add
cmpsl
ftst
pop
stc
js
jmp
dec
push
clc
add
fs
cli
incl
push
subb
mov
orl
rorb
push
or
cmpsl
jno
push
fsts
lret
inc
adc
sbb
jno
cmc
jg
ficoms
fsubs
dec
rcrl
jmp
aam
jnp
jge
ss
shlb
out
cmp
scas
cmc
jo
hlt
loope
outsl
test
xchg
jl
add
mov
orl
jb
cmc
roll
adc
mov
ds
dec
cs
ja
or
pop
mov
stc
jne
jne
ljmp
fnstsw
mov
add
lock
pop
mov
mov
jae
mov
push
add
stc
fidivs
call
mov
cmp
sub
je
ret
movsl
div
arpl
xor
pusha
xchg
add
jg
jmp
mov
xchg
sbb
mov
repz
add
xchg
push
or
dec
inc
call
pop
sub
les
call
imul
pop
bound
mov
pop
clc
mov
call
lret
int
push
or
in
orl
hlt
lea
bound
mov
insb
mov
add
add
mov
mov
mov
pop
or
inc
pop
mov
stos
fdivrp
mov
js
mov
sub
mov
mov
pop
sbb
popa
sub
pop
pusha
or
gs
inc
xchg
dec
mov
pop
push
push
jmp
xor
sbb
fwait
cltd
add
cmpl
jmp
pop
lahf
dec
dec
mov
fisttpl
push
sub
mov
into
jmp
inc
sbb
icebp
hlt
decb
mov
lret
sub
pop
push
mov
push
shlb
loopne
jmp
lods
mov
sub
mov
nop
ja
xchg
push
add
clc
push
push
jno
pop
cmpsb
movb
push
sbb
into
cmp
fiaddl
in
pop
inc
pop
arpl
dec
icebp
or
lock
and
cmp
pop
das
sub
repz
push
mov
adcl
sub
push
lahf
push
and
repz
mov
inc
and
and
dec
push
int3
mov
inc
dec
pop
fs
jle
dec
sub
adc
movsb
push
std
pop
pop
xor
push
pop
sub
daa
push
aaa
and
add
ljmp
int3
or
fcmovbe
sbb
lds
jno
fsubp
fsubr
mov
in
std
addr16
or
fldcw
push
adc
push
push
cwtl
dec
add
push
sbb
pop
andb
jmp
push
imul
dec
push
negl
pop
push
jmp
enter
and
movsb
dec
dec
dec
cmp
andl
dec
xchg
ds
cmp
adcl
testl
push
jbe
mov
data16
das
dec
mov
push
inc
cmpsb
lea
dec
arpl
dec
hlt
xor
movsb
adc
jmp
push
inc
push
jmp
repz
popa
xlat
mov
fmuls
dec
fchs
adc
mov
xchg
jbe
push
dec
and
jne
fcmovnbe
lret
outsb
push
stos
sub
dec
push
ljmp
ret
and
hlt
mov
sbb
das
adc
outsb
jp
push
fs
pop
add
daa
addb
repnz
sub
mov
pop
nop
jp
push
xchg
sub
in
fcmovb
pop
stos
jl
ljmp
cmp
push
adc
leave
adc
in
push
aas
xor
pushf
fcmovnu
dec
int3
mov
and
mov
mov
sbb
xchg
in
push
dec
adc
aam
in
mov
imulb
or
inc
jns
and
sub
inc
sub
pop
fwait
adc
mov
mov
rcl
sub
add
inc
sub
mov
insb
sub
pop
pop
popf
jg
outsb
sarl
add
adc
test
std
xchg
sub
inc
push
xchg
shrb
adc
subb
ja
push
add
sub
rcrb
mulb
jle
das
cld
xchg
mov
pop
addl
mov
lock
or
pop
fstl
add
or
pop
and
out
imul
or
adcb
mov
inc
mov
cmp
lods
push
pop
adc
cmpsl
sub
adc
mov
pop
jmp
fadds
pop
lcall
pop
jge
pop
xlat
in
jb
pop
push
pop
call
cltd
lret
mov
xchg
cmp
pop
push
and
push
scas
push
and
mov
dec
inc
sub
push
cmpb
mov
inc
mov
hlt
outsb
repnz
sbb
sahf
popf
sbb
pop
sub
std
mov
lock
movsl
loope
xchg
xchg
xchg
stos
jecxz
pop
in
sbb
inc
mov
fs
cmp
insl
adc
test
add
addl
bnd
or
aas
sub
xchg
daa
jo
pop
and
stos
mov
inc
repz
mov
ds
dec
shll
mov
daa
fs
adc
push
int3
xchg
sbb
jmp
or
xchg
add
mov
es
or
std
add
push
jl
adc
or
dec
jmp
std
js
pop
cmp
out
xor
pop
xor
jo
scas
mov
or
or
and
push
arpl
dec
mov
orl
clc
out
dec
sbb
testl
cli
jno
mov
xlat
cmp
stos
into
cmp
in
pop
push
inc
dec
mov
enter
lea
and
push
enter
sub
add
in
or
into
addr16
xor
icebp
or
sub
adc
rcll
and
js
adc
pop
out
jmp
jg
mov
add
add
iret
or
push
push
shrb
and
hlt
testb
int3
pop
lods
push
arpl
sbb
pop
and
loopne
mov
xor
orb
jmp
push
mov
into
mov
daa
sub
fld
scas
jno
dec
add
jmp
std
add
scas
jp
fld
inc
add
jge
out
jp
jg
cmpsb
xchg
ja
inc
inc
and
xor
or
out
test
jmp
ret
cmc
sub
fisubs
sbb
push
ficoms
call
jns
or
or
popf
push
inc
loopne
mov
mov
dec
mov
or
aaa
adcl
les
ljmp
pop
jns
mov
je
dec
testl
ds
das
fisttpl
mov
das
js
cwtl
dec
pop
adc
cmpsl
xchg
dec
mov
imul
push
xchg
not
cmpsl
or
adc
repnz
add
lock
push
or
jae
sub
xchg
inc
adc
out
rolb
pop
push
insb
and
xor
cmpsb
pop
sar
outsl
and
jo
or
sub
or
push
add
and
push
xchg
ljmp
stos
pusha
pop
pop
les
rclb
inc
in
pop
xor
and
adcl
mov
jmp
fldcw
bound
mov
fildl
or
test
dec
and
push
mov
mov
mov
ja
cmp
test
xchg
aad
dec
xchg
icebp
sbb
xchg
stos
out
dec
clc
es
add
or
add
testb
push
not
push
inc
pop
push
add
push
push
hlt
and
pop
pop
mov
pop
xchg
cmp
cmp
xchg
sub
mov
pop
push
and
mov
imul
xchg
rcl
xchg
ds
je
xchg
insb
in
mov
or
pop
and
dec
ja
daa
add
push
jbe
xor
xchg
jecxz
add
add
std
test
sti
out
xor
push
inc
test
push
popa
xor
add
or
ret
pop
shr
cld
stos
cmpsl
xchg
fnstenv
fidivs
call
insl
rolb
dec
mov
cltd
out
cmp
add
pop
add
xlat
out
xor
jmp
scas
inc
inc
idiv
jmp
mov
je
add
inc
test
mov
jmp
lea
mov
daa
add
and
scas
add
xor
sub
dec
pop
xor
push
cmp
cmp
add
pop
mov
add
add
aad
testl
and
mov
push
inc
leave
mov
mov
movsl
xchg
mov
and
cmpsl
imul
xchg
negl
and
rcrl
cmp
rcrb
jb
sub
aam
movsb
add
dec
pop
or
xchg
fsub
pop
push
mov
jmp
push
push
pop
push
xor
xchg
or
sub
or
pop
xchg
scas
out
xchg
or
lcall
jb
stc
or
bnd
mov
orb
jns
daa
pop
pusha
xchg
shlb
addr16
mov
cmp
das
ss
sub
jp
arpl
into
sub
fidivl
lock
outsl
xchg
sub
cmpsl
mov
jmp
pop
out
scas
pop
ret
push
jle
and
mov
mov
add
jmp
jmp
add
pushf
pusha
test
dec
or
push
cmp
cmpb
or
cmp
test
mov
aaa
sahf
dec
jl
inc
push
cmc
mov
cmp
inc
add
push
add
adc
push
cmp
inc
sub
dec
data16
out
sub
jmp
pop
not
mov
into
or
cmc
and
add
xor
mov
pop
cmp
adcl
test
pop
jg
mov
pop
outsl
cwtl
mov
int
shlb
stc
mov
shll
mov
jge
bound
ficoms
push
xchg
jne
js
sub
mov
rcl
in
cmp
lret
movsl
sub
pop
pop
push
int3
adc
adc
mov
ds
or
mov
push
or
push
push
push
pop
es
pop
or
call
mov
push
pop
and
adc
cltd
hlt
mov
mov
pop
neg
inc
jg
cmpsb
adc
push
popa
ja
pop
push
or
push
push
add
push
add
js
loope
push
or
adc
inc
and
mov
out
cmc
push
rorb
push
mov
scas
inc
stos
int
lods
add
outsl
sbb
jmp
mulb
or
pusha
addr16
add
ret
stos
mov
in
or
mov
inc
jmp
lock
jp
cld
adc
jmp
repz
mov
jg
pop
outsl
icebp
add
mov
in
out
dec
mov
jmp
push
shll
testb
stc
mov
mov
lret
hlt
or
jge
xlat
filds
fidivl
xor
add
hlt
pop
or
rcll
xlat
cmp
mov
fsubr
int3
add
pop
enter
cmp
icebp
adc
repz
and
sub
mov
or
enter
in
pop
and
mov
mov
cmc
add
and
ss
or
sbb
lahf
lock
jb
in
insl
add
incb
shlb
out
xor
sub
orl
jmp
int3
dec
xor
and
cld
pop
dec
test
movsb
mov
mov
push
cwtl
or
bswap
mov
adc
fs
in
mov
or
and
cltd
les
jl
inc
jmp
mov
push
add
ljmp
stc
adc
or
outsb
int3
mov
inc
subb
test
repnz
ja
ljmp
test
int
jg
jbe
push
inc
movsl
lds
add
in
sbb
jge
and
addr16
stc
fstpt
rcr
adcl
rolb
mov
mov
nop
or
push
cmpsl
jge
jl
xchg
and
data16
mov
pushf
push
rcrl
inc
mulb
inc
clc
fimull
mov
xchg
add
dec
mov
push
das
jmp
push
ror
add
sub
dec
and
pop
jb
dec
out
popf
or
mov
fldcw
add
xor
or
add
jp
adc
sub
add
xchg
adc
or
sub
int3
jg
in
adc
adc
dec
adc
adc
adc
subb
adcb
sar
sub
aas
data16
inc
fldenv
and
ss
cmp
cli
imul
pop
cmp
adc
xor
push
dec
add
or
and
sbb
sub
loope
adc
sti
and
mov
xor
xor
jae
test
mov
adc
sbb
enter
repz
or
adc
jmp
mov
outsl
push
add
mov
push
push
xor
inc
or
adc
sbb
pop
inc
xor
in
xor
inc
inc
fldl
inc
inc
xor
jo
sbb
pop
addr16
pop
add
jo
pop
and
xor
in
and
xor
mov
jns
mov
stc
push
and
xorb
call
push
sahf
add
in
add
jne
xchg
inc
cwtl
or
out
test
data16
mov
popl
xor
lock
imul
arpl
and
out
icebp
adc
add
clc
adc
xchg
xor
cmp
je
cli
int3
and
fstpl
xchg
and
add
add
xchg
add
nop
add
add
mov
mov
or
add
mov
or
jmp
sub
inc
inc
cmp
sub
dec
in
cmp
inc
xchg
loope
imul
sbb
xor
and
add
enter
inc
fcoml
pop
xor
imul
leave
or
xchg
pushl
clc
arpl
jecxz
imul
gs
and
mov
adc
pop
mov
inc
rclb
gs
sbb
cs
mov
lods
and
icebp
adc
xor
icebp
outsl
mov
pop
sti
ss
test
xchg
mov
push
or
mov
xor
xor
pusha
and
push
add
std
inc
jmp
ljmp
arpl
jo
sbbb
daa
lock
push
insl
lods
cmp
daa
dec
push
mov
push
out
mov
xchg
mov
mov
jmp
mov
sub
pop
xchg
jb
loopne
negl
push
mov
popf
data16
sub
aad
adc
jmp
sbbb
push
out
pop
mov
fwait
ret
sub
jmp
sub
pop
mov
xchg
jns
and
lcall
iret
mov
add
xor
lods
enter
push
dec
push
nop
scas
frstpm(287
and
icebp
insl
dec
xchg
sbb
int
lock
push
daa
inc
outsl
std
adc
mov
sub
lock
je
pop
xchg
aas
push
sub
lods
outsl
pop
aad
mov
push
out
int
adc
test
xor
and
rolb
dec
and
div
push
push
jmp
and
sbb
fmul
pusha
mov
add
mov
or
lock
jb
pop
mov
and
jb
jmp
adc
daa
ficompl
or
je
jge
out
sti
push
inc
xchg
cwtl
mov
inc
inc
jl
xchg
pop
mov
mov
add
addl
xchg
cmc
sbb
inc
pop
sub
jo
sub
jmp
mov
mov
push
add
cmp
and
clc
das
inc
pop
inc
and
mov
popf
add
jbe
es
test
in
or
lods
cmp
scas
enter
nop
dec
add
inc
jmp
pop
mov
add
cmp
jmp
inc
cmp
out
xchg
cmp
push
das
pop
pop
jmp
jp
inc
dec
aas
cld
js
pop
jne
fstl
loope
sub
aad
fmul
inc
pop
jle
mov
xchg
in
inc
in
jmp
adc
ljmp
and
mov
leave
push
dec
push
data16
pop
mov
push
dec
rcrb
jl
les
pop
or
mov
and
dec
call
xor
leave
inc
adc
add
mov
adc
cmpsb
sub
xchg
fildl
pop
add
sahf
push
out
ret
test
out
inc
adc
nop
pop
in
jno
dec
push
mov
push
pop
data16
jne
jo
pop
pop
bound
idivb
push
or
lahf
push
lret
cmpsb
imul
cmpb
mov
loop
lahf
inc
cld
add
ljmp
jno
lahf
pusha
loop
add
inc
push
mov
outsb
add
stos
test
rclb
in
ret
cwtl
out
fs
pop
xchg
dec
pop
cld
rcrb
ss
add
mov
shl
std
push
jbe
mov
push
sbb
out
testb
ljmp
pop
mov
fimuls
mov
ja
daa
mov
jb
sub
orb
push
cmp
scas
sub
inc
mov
mov
sbb
sbb
mov
adc
xor
cli
hlt
xor
mov
xchg
pop
xchg
dec
or
add
add
jbe
rorb
das
lcall
pop
add
int
lock
adc
jl
stos
pop
push
jo
xor
dec
jp
inc
add
fildll
gs
sub
dec
add
pusha
and
cmp
add
fmull
adc
lods
inc
xchg
call
cmp
mov
push
xchg
mov
int3
push
xor
sbb
out
fimull
push
lods
add
popa
outsb
movsb
or
sub
cli
xor
add
fs
jmp
popf
push
test
jmp
fbld
fistl
pop
in
fsubp
mov
jno
mov
fidivrs
and
add
pop
jmp
mov
xchg
ret
lds
push
inc
jp
addl
cmp
push
and
cmp
subb
dec
inc
cmp
jl
inc
sub
mov
sub
repnz
not
push
icebp
dec
xor
mov
enter
cmp
shll
mov
or
push
mov
rcll
adc
sbb
dec
sub
orb
inc
inc
ss
add
cs
icebp
jl
and
xchg
hlt
jb
outsl
cwtl
insl
loopne
xor
sbb
add
push
dec
enter
push
add
mov
xchg
and
adc
addr16
or
xor
outsb
adc
sub
xchg
stc
dec
push
cmp
fisubrl
jmp
push
fchs
enter
cmpsb
add
flds
test
movsl
test
pop
aas
enter
jge
sbb
in
sub
enter
dec
adc
cwtl
and
loop
jp
inc
add
sub
outsb
cld
push
or
xlat
outsl
cmp
push
in
pop
push
sti
lods
fs
mov
mov
push
int3
popa
push
adc
xor
lock
and
xor
into
jno
xor
inc
dec
jb
and
or
adc
cwtl
push
test
pop
mov
imull
mov
add
jnp
adc
add
dec
fadds
nop
dec
nop
pop
and
sbbb
and
or
and
out
das
mov
data16
jae
in
pop
jne
or
sti
pop
cld
popa
push
aaa
and
cmp
sub
stc
xchg
ja
inc
test
shll
pusha
lds
push
or
dec
loop
rorl
scas
xor
mov
dec
stos
fs
push
xor
sahf
jo
je
push
dec
ja
bound
sub
inc
push
pop
mov
shr
xor
add
mov
push
addr16
mov
inc
inc
or
idiv
or
arpl
cmc
in
pop
push
popl
cmc
in
add
shrb
data16
pop
adc
jne
rorl
test
lods
add
xor
sub
sbb
mov
push
iret
push
mov
test
inc
xchg
xor
add
adc
or
or
pop
sub
sbb
jge
pop
mov
add
negl
ja
xchg
imul
jmp
fs
sub
call
in
iret
pusha
cmc
gs
testb
push
mov
test
cmp
dec
mov
jo
jno
inc
roll
leave
jmp
ja
cmp
les
inc
pop
decl
out
xchg
push
dec
repnz
lock
adc
pop
sbb
cld
mov
dec
push
nop
loop
mov
sub
stos
push
jecxz
insb
and
add
and
jp
call
or
dec
lea
sub
xor
xchg
push
mov
pop
push
pop
or
add
ret
or
adc
neg
mov
cmpsl
or
jbe
and
or
cmp
out
push
pusha
dec
jge
sti
pusha
jmp
mov
pop
push
bound
adc
enter
mov
mov
xor
pop
mov
lret
sbbl
mov
xor
add
jae
add
xor
pop
clc
sub
push
and
movsbl
xor
mov
xchg
sbb
jb
and
adc
bnd
pop
filds
mov
jl
and
push
popa
dec
std
ret
in
jmpw
sub
jge
push
dec
cs
jle
leave
test
jl
add
sbb
add
push
xor
add
jae
push
leave
rclb
xchg
fldenv
sub
repnz
inc
cmp
push
pop
push
mov
popa
shrb
push
push
pop
imulb
or
sub
jg
lods
scas
jno
test
mov
ljmp
mov
add
and
cs
pop
mov
mov
jae
je
mov
and
pop
push
or
and
cmp
rorl
jle
adcb
je
cmp
mov
mov
stos
test
stos
movsl
dec
pusha
pushf
inc
sbb
push
push
or
xor
adc
xor
and
es
pop
and
mov
cld
push
sti
pop
jae
xchg
push
adc
dec
rorb
lea
jnp
xchg
mov
xchg
jge
mov
mov
xchg
pop
xchg
mov
inc
jo
jecxz
sub
repz
and
cmp
sahf
int3
jae
jle
add
xchg
cmpxchg
mov
add
das
pop
mov
or
add
xor
sub
shrl
push
inc
pop
and
rorl
jae
add
imul
sub
popf
xor
xchg
pop
push
aad
movsb
int
aaa
add
mov
adc
out
push
divl
leave
sti
jg
sti
mov
lcall
sub
aam
pop
jl
fs
xchg
adc
sbb
pusha
cmp
adc
lret
adc
adc
add
mov
pop
add
imul
push
mov
sbbb
mov
negb
fsubs
ja
rcrb
popf
stc
enter
pop
xchg
sahf
push
mov
bound
call
jl
cmpsl
je
jno
jb
loopne
fsts
sub
lods
sub
cmp
mov
xor
in
pop
cs
mov
cmpb
rorb
and
test
sbb
dec
dec
movsb
dec
pop
inc
daa
and
loopne
outsl
sub
sub
sbb
cmove
xor
cltd
push
xchg
or
fstp
push
sub
mov
pop
jns
les
stos
mov
xchg
popf
push
pop
sub
inc
add
pusha
sub
jnp
jmp
fdivl
adcl
ss
rcll
inc
pop
mov
xorl
adc
and
sti
mov
pop
and
test
jl
dec
mov
and
incl
scas
movsl
filds
repnz
and
mov
sub
add
xchg
imul
or
mov
push
sub
or
adc
pop
lcall
xchg
subl
xchg
cmpsl
pusha
nop
in
imul
or
push
in
or
mov
and
clc
push
mov
andl
stos
cld
mov
stos
cmp
loop
lock
mov
pop
dec
xchg
dec
pop
test
repnz
loope
or
inc
nop
push
pop
cmp
outsl
mov
jmp
pop
aas
sub
push
and
orb
pop
out
mov
pop
mov
add
fistps
adc
push
pop
xchg
loope
mov
or
movsb
pop
xlat
add
inc
das
call
hlt
in
imul
mov
sbb
insl
sub
cltd
xchg
lcall
jnp
jns
push
lret
imul
sbb
loopne
xor
pop
or
push
dec
adc
inc
gs
jmp
jns
das
and
pop
or
or
add
add
aas
jmp
push
fildl
mov
test
in
lcall
jmp
pop
mov
cmc
ret
mov
push
xchg
pop
push
cli
negl
std
mul
jo
add
add
popa
and
pop
lea
orl
movsl
das
and
pop
add
mov
xor
loop
inc
dec
insl
push
mov
or
cmc
dec
xlat
and
dec
shrl
es
xchg
jge
inc
push
pop
shrb
inc
xchg
add
jbe
cmp
dec
xchg
sbb
dec
mov
imul
arpl
jmp
adc
push
add
inc
mov
inc
pop
push
and
push
push
mov
sbb
jecxz
int3
repz
push
outsb
nop
pop
es
mov
add
and
cmp
pusha
imul
pop
pop
pusha
push
jmp
push
pop
std
insl
lret
push
jmp
jecxz
jno
sti
pop
ret
add
lods
dec
cmp
or
pop
mov
in
jnp
ds
pop
jno
sbb
jge
dec
addb
inc
jmp
ljmp
jbe
shlb
mov
in
rorb
shl
movsb
and
sub
push
push
out
pop
mov
dec
lea
pop
adc
jnp
xchg
mov
addl
data16
cltd
popa
daa
push
insl
filds
rorl
or
daa
push
add
or
xchg
scas
or
and
imul
xor
out
mov
push
ret
fadd
jb
sahf
test
lods
or
pop
sub
dec
dec
push
int3
mov
and
add
jmp
cli
cmp
icebp
pop
arpl
xor
sub
movb
sub
or
std
ljmp
cmpsl
scas
mov
das
jno
lret
or
pop
pop
adc
add
inc
shl
shlb
outsb
insb
jbe
repnz
call
and
mov
push
jmp
sub
push
sahf
mov
add
rclb
cmpsb
in
and
jmp
fnstenv
imull
mov
inc
pop
cli
pop
xchg
cmp
rolb
cmp
lret
les
add
push
jmp
fldt
xchg
jg
out
or
scas
jns
cmpl
jmp
mov
push
inc
add
adc
mov
hlt
adcl
xor
fisubs
ja
push
addr16
push
jmp
mov
mov
sub
lods
push
jne
pop
sub
add
jp
mov
das
inc
adc
push
mov
cli
arpl
sub
add
mov
shr
ficoml
jmp
xor
or
fcomi
flds
and
xor
mov
sbb
or
cli
jmp
fstl
inc
push
imul
sub
orb
pop
cs
jmp
sub
hlt
mov
adc
add
out
test
dec
les
mov
push
mov
movsb
mov
jmp
and
js
dec
ljmp
dec
and
push
ja
pop
or
push
jae
xorl
cmp
cmp
ret
dec
xchg
pop
dec
sbb
inc
fs
icebp
add
add
jb
cmp
mov
push
or
gs
into
mov
pop
test
xor
mov
add
xor
mov
and
inc
dec
mov
std
in
inc
pop
push
add
xor
call
and
sbb
lods
das
xlat
jne
std
mov
add
ds
sub
and
pop
scas
xchg
cmc
iret
pop
lods
add
push
xchg
repz
inc
mov
clc
imul
adc
test
dec
pop
pop
add
jo
orl
cmp
pushf
daa
pop
out
rorb
inc
dec
cmp
loopne
je
lret
add
mov
in
stos
or
xchg
push
or
xlat
outsb
or
mov
xor
mov
sub
and
out
repnz
pop
and
add
push
push
dec
pop
sbb
adc
shrl
adc
rcl
das
xchg
dec
mov
fmuls
insl
dec
sbb
incb
mov
testb
inc
mov
insb
push
xchg
or
shr
stos
popf
adc
and
xchg
dec
loopne
sub
pop
pop
pusha
aas
das
in
dec
mov
sbb
fiaddl
mov
popf
adcb
movsb
cmp
nop
inc
add
push
adc
jmp
out
cld
hlt
xchg
lods
adc
out
shl
fiadds
mov
push
dec
addb
outsb
mov
in
or
mov
ja
push
or
pop
mov
sarb
or
stos
les
pop
mov
orl
fisubrl
dec
dec
mov
jmp
out
add
in
push
test
adc
add
xor
jle
es
push
cmpsl
jae
dec
sub
add
fcoml
mov
test
or
repz
rcrb
and
or
shlb
pop
dec
mov
je
dec
or
sbb
sub
xchg
push
cmp
mov
mov
push
outsb
test
aad
inc
je
arpl
dec
lea
pusha
adc
shrb
fstps
mov
adc
mov
cmc
or
dec
inc
imul
jmp
cld
or
jns
cmp
and
shr
neg
add
iret
mov
sub
jmp
push
mov
mov
loopne
pusha
pop
adc
jmp
loop
jle
jo
not
leave
add
lahf
pop
pop
add
xchg
shlb
jecxz
mov
cmp
repz
cmp
push
dec
aam
adc
add
pusha
call
and
pop
lret
sbb
fsubs
sti
add
inc
dec
out
mov
dec
mov
ret
inc
pop
addr16
sub
pushf
xchg
jns
mov
loope
push
jnp
or
std
add
cmp
jns
mov
jp
fsubl
dec
fldl
lods
sub
scas
dec
mov
movsb
stos
lods
jb
repnz
dec
add
or
incl
jmp
push
or
shrl
and
add
adc
jmp
mov
fdivr
pop
lcall
test
sub
or
xor
pop
add
cmp
lret
inc
fdiv
adc
or
mov
or
inc
nop
push
dec
mov
scas
inc
imul
jge
test
sbb
xlat
jp
mov
xlat
test
cmp
lahf
inc
nop
mov
movsl
inc
dec
adc
or
cmp
adc
push
ljmp
cld
xchg
cmc
add
dec
xor
push
push
pop
mov
and
xor
test
ja
dec
lds
jecxz
mov
ljmp
cmpsb
out
adc
adc
pop
add
aas
cwtl
test
sub
lcall
rcrl
push
mov
pop
or
addr16
xor
jmp
jo
inc
lcall
dec
out
test
in
mov
jmp
call
xchg
push
sub
mov
pop
cli
lret
ret
pop
icebp
cmp
rcl
inc
mov
cli
and
je
pop
pop
xor
push
into
shl
or
in
mov
or
lret
outsl
jmp
xlat
add
cmp
out
sbb
adc
aaa
pop
xchg
mov
ja
mov
fistpl
lcall
mov
and
push
mov
cmpsl
clc
push
or
mov
insl
in
popf
ret
das
xchg
test
mov
add
gs
loop
jnp
push
mov
xor
push
sbb
inc
or
call
xlat
iret
fimuls
add
inc
jmp
mov
fcoml
dec
push
and
push
or
inc
cwtl
sbb
push
add
jbe
ret
out
or
add
icebp
lret
negb
imulb
out
adc
pushf
mov
out
and
adcb
jb
sub
ficomps
inc
aaa
or
divl
jecxz
mul
lret
push
int
bound
neg
mov
int3
leave
lock
or
repnz
sbb
cmp
js
sbb
mov
inc
lcall
fisttpll
sbb
adcb
das
adc
jbe
loope
jmp
das
or
jne
pop
push
mov
negb
mov
inc
jns
cmc
loopne
rol
xor
xchg
mov
mov
or
test
jmp
or
neg
pop
movsb
popa
jecxz
push
push
aas
pop
dec
add
mov
out
xchg
mull
jg
xchg
shr
sbb
add
test
imul
adc
or
cwtl
jne
fisttps
cmpl
jb
adc
dec
cli
sarl
mov
sub
pop
out
pop
popa
inc
ljmp
loope
mov
jmp
loope
inc
sbb
les
mov
imul
mov
inc
ja
inc
inc
cld
imul
mov
pop
pop
add
xchg
dec
push
mov
test
movsb
or
adc
repnz
popa
jp
out
pop
ret
adc
mov
pop
bound
or
xchg
jg
pop
clc
pop
add
mov
push
shr
icebp
mov
adc
mov
xchg
xchg
jmp
mov
push
mov
add
lock
push
shll
int
sbb
sahf
xchg
adc
call
leave
pop
push
dec
xchg
int3
inc
decb
pop
pop
mov
sub
fadds
cs
arpl
sub
push
push
jbe
stos
pop
mov
xor
jle
pop
push
mov
mov
or
loopne
mov
jb
aaa
not
or
mov
sbb
movsb
and
movsb
and
and
pusha
dec
mov
mov
dec
hlt
mov
push
adc
push
pop
es
push
xchg
lret
pop
fnstsw
aas
pop
jne
mov
inc
dec
pop
mov
or
out
sub
lods
scas
je
pop
bound
push
out
push
push
xor
mov
inc
mov
pop
orb
sub
pop
repnz
or
sbbb
jmp
or
ja
addl
stos
repz
mul
push
bound
mov
push
adc
mov
loop
lss
pop
pop
push
orl
and
pusha
inc
or
sub
dec
sbb
push
mov
jno
jge
add
pop
lods
addr16
mov
sub
out
and
loopne
push
ljmp
mov
adc
cmp
sub
pusha
movsl
cmp
mov
notb
mov
jb
push
in
and
jge
mov
ret
jp
add
xchg
add
outsl
jg
push
push
dec
pop
and
and
push
sub
ret
cmp
inc
das
test
pusha
cs
xchg
mov
jbe
add
add
xchg
dec
sub
push
or
outsb
dec
inc
inc
xor
enter
cmc
sahf
mov
scas
in
cmp
dec
pop
xchg
mov
jmp
inc
cmc
dec
pop
sbb
pop
cltd
ret
cmpsb
push
sub
or
xchg
or
mov
or
add
jmp
xor
push
pop
ror
pop
test
xor
pop
ljmp
inc
or
pop
add
pop
std
mov
stc
sub
sub
imul
cmp
mov
sub
inc
ja
cwtl
dec
loopne
pushf
inc
daa
or
push
pusha
mul
test
repnz
pop
xor
ja
rol
pop
sub
sub
leave
jb
fdivl
call
stos
fs
mov
mov
out
push
sub
sub
mov
fadds
ffree
test
mov
xchg
into
loopne
cmp
xor
scas
push
repz
js
ret
aad
inc
inc
pop
inc
add
addr16
and
shll
sbb
mov
ja
adc
push
js
dec
jae
lahf
jl
gs
lea
cmp
cmp
mov
loope
push
rcr
cltd
inc
xor
dec
jmp
pop
add
aas
add
sub
out
in
pop
pop
loope
mov
inc
pop
and
push
aaa
sub
dec
out
jge
imul
popa
dec
or
ficoms
push
out
cwtl
icebp
add
cmp
fsubrs
aas
pusha
mov
adc
cltd
xor
fidivrs
push
out
xor
es
test
or
aam
pop
pushf
flds
xor
hlt
mov
jo
addl
jle
addr16
push
add
push
jge
push
add
das
pushl
adc
out
testl
xor
aaa
add
repnz
cmp
adc
push
push
fs
or
sub
xor
xchg
mov
imul
and
pop
mov
in
push
out
dec
mov
pop
lock
lahf
pusha
hlt
inc
jl
js
dec
push
add
or
nop
adc
mov
imul
mov
je
jnp
clc
jb
mov
xchg
pop
add
test
mov
mov
push
in
lret
lcall
pop
out
add
jbe
jp
cmp
add
mov
or
pop
mov
adc
insb
add
scas
into
dec
addl
or
xor
push
and
sbb
test
and
mov
pop
test
add
jl
out
sbb
dec
or
jp,pn
cs
pop
add
shlb
jmp
add
and
cmp
xchg
sahf
add
scas
aas
dec
loop
aad
push
cli
mov
mov
xor
push
insl
lret
in
adc
xor
mov
xor
or
sbb
mov
adc
cmpsb
jle
xchg
out
push
daa
mov
sbb
jmp
inc
jge
movsl
fadd
dec
sbb
xor
inc
sbb
fldl
and
pop
jmp
nopl
stc
cmp
hlt
shl
add
and
inc
mov
pop
jmp
std
xorl
push
vcvtps2dq
or
aam
dec
orl
jmp
adc
popf
testl
mov
les
inc
jo
lea
data16
push
push
cmpsl
das
cmp
and
sahf
push
xor
ret
jb
iret
jne
int3
push
xor
xlat
lahf
xor
sbb
fdivrl
jbe
pushf
or
mov
int3
sbbl
incb
ja
aad
jmp
xchg
icebp
push
jp
or
lret
and
push
mov
pop
ja
jle
aas
add
mov
inc
or
or
mov
push
and
mov
test
int3
adc
lock
and
xor
xor
daa
popf
pop
ljmp
rolb
repnz
push
in
insb
loop
dec
jecxz
adc
and
cmc
push
jbe
outsb
iret
pop
jmp
jo
xchg
push
jno
cmp
pop
ss
and
fcoml
push
adc
push
mov
int3
add
cmp
add
test
adc
or
aam
jb
push
add
sbb
jl
mov
add
loopne
push
dec
pop
in
sarl
jmp
adc
stc
jle
dec
cmp
cmp
jns
lock
in
clc
pop
daa
push
fidivs
inc
mov
loope
sti
mov
pop
sub
sbb
sub
adc
mov
pop
push
mov
mov
or
push
mov
jb
stos
js
xchg
negl
fbstp
xchg
clc
clc
adc
push
sub
adc
in
or
sbb
int3
pop
and
jle
add
mov
push
pop
shl
pop
push
push
fcoms
hlt
xlat
jecxz
pop
jmp
ret
dec
cld
in
add
jo
insl
jmp
in
push
mov
mov
or
cmp
loopne
outsl
mov
add
shr
mov
pushf
mov
mov
jae
or
not
xlat
jb
push
outsl
addr16
imul
mov
push
push
xor
or
cli
repz
inc
or
and
std
bswap
and
and
sub
rorb
rorl
sub
leave
ja
test
mov
add
xor
scas
mov
mov
inc
mov
cmp
pop
push
pop
stos
push
fldl
xor
jmp
and
push
push
sub
arpl
pop
les
mov
lret
xchg
lcall
call
xor
or
or
dec
jne
scas
jg
daa
fdivs
bnd
popa
or
fs
sub
push
add
mov
pop
loope
int
dec
push
mul
cmpsl
mov
push
in
fisttpl
dec
jnp
mov
push
inc
mov
sub
insb
mov
fprem1
and
or
testl
scas
cmp
push
outsl
sub
cmpsl
fiadds
daa
adc
mov
inc
dec
gs
sbb
mov
cli
inc
pop
pop
and
add
in
pushf
rcrb
jmp
push
add
mov
mov
push
aaa
cmp
adc
jae
in
ret
adc
je
or
repz
shrl
sti
nop
push
ljmp
cmp
mov
mov
cmpsb
cld
popf
or
add
mov
and
xor
add
rolb
incb
ret
aas
dec
jb
pusha
lret
dec
xor
fistpll
adc
shlb
mov
jbe
js
mov
dec
mov
aas
lods
fisttps
or
push
jmp
add
sbb
push
shrl
lds
popa
and
or
jb
outsb
mov
sbb
mov
lods
jge
mov
inc
cwtl
add
ret
sub
xor
add
pop
lods
repz
push
add
fs
jecxz
dec
sbb
mov
adc
sub
sti
inc
into
jbe
jbe
pop
mov
jp
dec
addl
pop
lock
add
adc
mov
mov
mov
je
mov
pop
imul
or
add
add
inc
mov
add
jbe
mov
xchg
addr16
mov
sbb
add
cmp
fsubrs
inc
push
push
xor
pop
push
and
aad
and
imul
orps
mov
icebp
inc
sbbl
mov
fldt
mov
rcll
add
out
inc
mov
dec
incl
ljmp
cmpsb
repz
jno
loopne
lods
fsubrs
das
xlat
add
sub
mov
adc
addr16
adc
stc
sub
and
xor
mov
ljmp
pop
aas
add
inc
inc
add
xchg
and
loop
lahf
mov
cmp
xchg
sbb
pop
repnz
xchg
mov
inc
outsb
add
addb
and
jmp
jl
mov
sub
adc
fimuls
mov
ljmp
imul
inc
cs
push
adc
jne
mov
out
sbb
adc
js
insb
jmp
insb
push
mov
jl
pop
lea
add
mov
add
iret
jmp
rcr
in
or
inc
sub
or
jecxz
or
sbb
sbb
add
add
or
insl
mov
fisttpll
out
add
xchg
pop
and
cmp
add
jmp
mov
shl
xor
bound
ret
loope
pop
pop
or
or
xor
aad
xchg
add
mov
cmp
jg
add
mov
jnp
sub
loopne
pop
mov
mov
sbb
hlt
xlat
rol
add
push
mov
aas
call
icebp
jno
into
pop
pop
shll
mov
mov
es
or
pop
xor
adc
or
or
hlt
cmp
or
jmp
or
stos
movsb
push
jne
and
push
fsubl
test
add
push
pop
sub
int
lds
out
push
and
pop
repz
je
adc
adc
int
pop
out
adc
sbb
fsubr
js
int
cmp
sub
xlat
inc
push
lods
pop
add
or
jmp
loope
es
cwtl
sbb
adc
dec
test
test
dec
cmp
sub
lock
call
push
std
ss
icebp
ds
mov
or
mov
pop
mov
pop
out
and
shrl
mov
mov
movsb
sbb
dec
aad
push
mov
es
sub
out
or
jle
dec
loop
mov
cwtl
inc
push
push
cwtl
inc
setnp
jnp
bnd
jbe
and
cmp
jb
mov
add
arpl
loopne
shll
sub
popa
push
push
out
ja
nop
mov
mov
nop
rcrb
pshufw
jp
inc
xor
lret
neg
xchg
pop
xor
sub
ficoml
lods
add
and
js
adc
inc
aaa
loopne,pt
loopne
fiaddl
sub
test
jmp
push
xor
pop
xor
into
add
in
mov
or
shl
cmp
cli
cmp
fiaddl
pop
mov
sbb
lret
sub
js
addb
jbe
add
push
popf
add
lods
cmp
ja
mov
mov
aaa
mov
push
pop
gs
out
cwtl
loopne
lahf
into
insl
mov
aaa
pop
jmp
repnz
sub
jmp
lret
sti
popa
dec
add
stos
call
shl
or
mov
std
pop
in
insb
add
adc
outsl
sub
jecxz
inc
or
mov
inc
adc
or
sub
pop
jmp
add
mov
sbb
test
popa
xor
jns
pop
sti
arpl
sub
lods
mov
adc
into
mov
and
mov
je
mov
nop
cmc
and
pop
cmp
jg
test
push
or
pop
mov
sbb
in
jle
mov
aad
jbe
push
adc
and
xor
xchg
outsb
cltd
inc
or
dec
test
xchg
jle
and
sbb
push
nop
xchg
lds
cmp
fisttpll
add
sarl
xlat
sbb
popf
push
bnd
jo
dec
pop
jno
pop
bswap
mov
leave
adc
mov
add
adcb
hlt
and
fadds
and
fisubrl
push
jnp,pn
jae
in
inc
sbb
sub
dec
fldenv
push
add
push
fdivrs
das
or
inc
daa
jl
xchg
mov
pop
in
or
pop
call
inc
xor
sbb
dec
es
mov
mov
jmp
in
aam
dec
xchg
incb
xchg
cmp
inc
or
pop
mulb
test
jns
and
lock
cmpsb
ret
add
inc
lcall
lods
inc
dec
int
sbb
push
lods
je
fisttps
xlat
pop
cltd
jge
mov
mov
ret
lcall
pop
insl
pop
adc
mov
jmp
adc
jo
xor
cmp
jb
in
pop
repz
push
adc
pop
push
pop
add
and
not
cmpsb
or
jns
adc
push
push
sbb
js
jns
dec
cld
ret
jg
div
insl
repz
cltd
or
decb
push
jmp
movsl
mov
xlat
mov
dec
push
outsl
imul
adc
dec
xchg
stc
push
jl
dec
mov
fimull
or
pop
and
loope
fwait
cmp
das
pop
jmp
push
add
scas
pop
jns
sbb
insb
pusha
pop
push
add
lahf
push
stc
das
mov
and
inc
or
ficompl
xor
dec
or
lods
in
insb
mov
mov
stos
aam
adc
adc
cmp
cmp
mov
shll
xchg
sub
and
add
adc
imulb
and
jp
out
outsb
pop
mov
test
mov
pop
fnstenv
push
adc
sbb
ret
xor
cwtl
dec
mov
mov
movsbl
je
xchg
dec
pop
test
jmp
add
inc
dec
jns
add
cld
jl
jmp
stos
int
adc
push
sub
mov
adc
push
bound
pop
jbe
aaa
push
push
add
pop
push
ss
sub
shr
ja
inc
mov
sub
aaa
cmp
cwtl
ja
push
out
push
or
lock
adc
push
sbbl
insb
push
xor
shr
nop
in
test
mov
enter
movntq
aaa
mov
or
push
dec
xor
fwait
add
cmp
pop
sub
dec
push
add
jnp
pop
stos
pop
dec
cmp
mov
pop
jp
sub
add
out
and
fdivs
mov
pop
mov
add
dec
mov
loopne,pn
lea
inc
push
gs
je
add
fidivs
jg
sti
enter
stos
mov
outsb
icebp
adc
into
mov
gs
dec
dec
sbb
add
pop
pusha
ror
add
lods
sub
cli
cmp
ret
mov
sarb
sub
shr
add
shl
xchg
mov
mov
push
push
jmp
leave
inc
in
jo
pusha
bound
or
jmp
mov
jne
and
std
das
and
mov
jne
js
dec
call
loope
xchg
pop
or
xchg
jmp
in
lcall
xor
cmp
and
xorb
frstor
mov
mov
ljmp
jbe
push
pusha
addr16
add
mov
pop
jmp
adc
fcoml
test
adc
call
cmp
ficoml
and
or
dec
xchg
das
push
sbb
ds
pop
push
test
mov
adc
sub
pop
jmp
push
pusha
mov
adc
adc
mov
lret
pop
pop
pop
mov
lock
jge
lock
aad
adc
aam
stos
shlb
mov
cmp
cmp
loope
adc
sbb
push
popa
int
xor
pop
cmc
mov
je
test
inc
add
lar
dec
pop
in
and
pop
dec
or
fildl
pop
loop
mov
test
jmp
jle
mov
xchg
dec
cli
inc
mov
jbe
sub
les
dec
mov
ret
std
push
aas
lahf
les
mov
std
inc
jne
jmp
stc
jo
outsl
repz
lahf
mov
aad
loopne
incl
cmpsl
push
out
rclb
jl
dec
inc
push
fucomp
pop
inc
push
clc
addb
adc
enter
and
pop
sub
daa
cs
xlat
add
add
into
ja
mov
inc
out
enter
les
jp
and
cld
sub
sar
fidivrl
push
ret
js
xchg
add
insb
fimuls
inc
subl
pop
loopne
mov
rorb
add
jb
jp
jmp
mov
in
mov
cmp
and
bound
add
mov
mov
dec
mov
pop
and
cmp
icebp
mov
and
xchg
sti
adc
cmp
cmp
pop
and
xchg
jl
sub
push
shr
not
or
popa
push
fiaddl
jl
jo
out
outsl
pop
jg
orb
jns
jne
rclb
mov
int
mov
mov
ja
pop
ret
mov
cli
sub
sub
jbe
adc
rcll
jne
ror
or
sub
ljmp
lret
add
prefetcht2
jo
push
mov
pop
or
mov
gs
push
andl
ja
add
jle
jmp
mov
pusha
in
adc
xor
mov
inc
xchg
loope
push
dec
jmp
add
aad
pop
add
lret
cld
das
sbb
bound
xor
ja
loop
push
mov
jmp
xorb
shll
pop
push
add
outsb
filds
or
test
je
sub
cmp
loop
fldl
and
aaa
mov
test
cmp
add
inc
sub
sub
in
mov
ja
sub
lea
add
add
sbb
stos
mov
iret
lcall
sub
and
and
not
cwtl
lahf
or
mov
and
jae
push
cmp
mov
mov
adc
push
lahf
jmp
data16
mov
pop
pop
test
add
aad
cmc
mov
pop
xchg
ja
pusha
inc
or
inc
pop
movsl
xchg
push
and
ljmp
sbb
or
add
pop
push
xorb
stos
push
loopne
inc
movb
xchg
pop
cmc
dec
outsl
jns
mov
ror
gs
dec
insb
repnz
imul
pop
loop
out
call
mov
rclb
negb
lret
pop
stc
adc
mov
mov
push
add
jno
loopne
filds
ds
xchg
jno
add
test
or
inc
shl
out
mov
add
pushf
sbb
ja
mov
push
pop
sub
xchg
clc
add
scas
imul
int3
pop
pop
mov
xchg
lret
jb
inc
jmp
mov
and
add
mov
dec
js
xchg
mov
push
daa
pop
lea
add
inc
or
add
adc
ds
push
hlt
mov
movsb
clc
jge
push
mov
cmc
sbb
push
jne
inc
ret
popa
xor
add
or
fldl
push
sbbb
adc
jmp
rolb
fldl
xor
add
mov
pop
pop
dec
cmpsl
mov
mov
and
jae
daa
jno
aaa
cli
cmp
outsb
stc
dec
into
lds
mov
jg
or
push
int
adc
jecxz
and
add
stos
lds
push
sub
sub
add
ja
call
add
push
pop
cmp
cld
push
mov
out
test
sahf
adc
mov
pop
jp
add
cmc
lds
sub
pop
test
lods
pop
cwtl
mov
sbb
cs
sub
lods
dec
repnz
fwait
in
sub
outsl
in
pop
vmovhps
repnz
loopne
hlt
push
cmp
adc
popf
adc
test
mov
je
pop
dec
add
adcb
xor
xor
popa
xor
pop
xchg
stos
jnp
xor
push
cmpl
mov
inc
inc
xlat
xor
pop
shlb
xor
sahf
or
ret
nop
inc
negl
out
xor
sbb
cmpsl
mov
adcl
stos
cwtl
aas
inc
xchg
pop
add
sub
movsb
les
imul
dec
add
idivb
push
pusha
pop
or
inc
jp
sub
or
pop
add
cmp
shlb
imul
rorl
lret
xor
xchg
cmpsl
aad
testl
xor
mov
pop
nop
mov
mov
pop
xchg
push
push
pop
sub
adc
mov
push
cmc
add
dec
aam
cmp
pop
pop
dec
lret
outsb
lret
and
lods
mulb
in
add
lahf
mov
inc
jmp
sub
and
pop
push
rcrl
cmc
pop
bound
sub
inc
imul
xchg
or
push
and
sbb
cmpl
push
int
jno
test
mov
sub
ljmp
mov
stc
xorl
fildl
leave
lds
pop
nop
into
push
inc
mov
add
push
sub
dec
mov
nop
pop
popa
mov
das
fisttps
xchg
dec
sbb
pop
add
add
aaa
arpl
cwtl
mov
clc
mov
ja
pop
testb
jg
repz
jne
cmovae
stos
fcoms
lea
movsl
pop
inc
pop
push
arpl
jecxz
ret
jle
iret
or
mov
mov
adc
pop
jmp
or
pop
addl
loopne
xor
xor
cli
orl
jmp
jbe
cmpsb
inc
sbb
cmc
pop
lret
push
in
pop
scas
sub
fcomps
adc
dec
pop
sahf
and
push
sub
out
imul
lahf
push
cli
cmp
cmp
jl
je
add
mov
and
push
cmc
outsb
jnp
hlt
aam
aam
stos
xchg
mov
mov
push
loopne
push
mov
daa
pop
and
js
dec
or
pop
push
mov
xor
ljmp
inc
mov
push
pop
lcall
fidivrs
add
loop
mov
pop
push
mov
and
and
jmp
jae
js
enter
xor
loopne
jmp
shll
cmp
leave
repz
mov
mov
dec
leave
jge
bound
idiv
fcmove
adc
push
rclb
push
cmp
cmpsl
jmp
adc
insb
inc
lea
xbegin
test
and
sub
xchg
push
sub
xor
pop
das
hlt
inc
jns
lret
cmp
adc
jl
sub
dec
sbb
xchg
ds
push
jl
pop
lea
jl
cltd
dec
mov
dec
cld
adc
xchg
inc
es
jne
call
adc
add
sbb
push
ret
call
cli
mov
rcr
cmpsb
mov
mov
insb
popa
add
addb
push
ljmp
jbe
pop
push
xchg
jg
and
jo
or
in
xor
fbld
push
insb
xlat
and
push
ds
rorb
and
push
in
push
pop
popa
dec
xchg
adc
rcrb
and
add
push
inc
divb
and
pusha
add
movsl
mov
stc
dec
out
nop
repz
mov
inc
testb
enter
addb
add
adc
stos
add
movsb
sbb
pop
push
or
icebp
lcall
sti
aam
sahf
popf
rcrb
or
xchg
je
in
pop
sti
bound
ljmp
outsl
pop
push
popa
push
mov
add
add
int
pop
popf
push
xor
adcb
add
add
add
scas
xchg
push
sbb
dec
popf
rcrl
pushf
movsl
pop
mov
clc
cld
add
add
sub
mov
das
dec
out
dec
sub
ss
sub
adc
cmpsl
or
cld
mov
xor
jo
fs
push
ret
xor
or
repnz
or
lock
jae
adc
add
add
ja
rolb
sbb
subb
dec
das
cmp
aad
pusha
jmp
add
icebp
js
sbb
cwtl
fstl
mov
aaa
sub
xor
jmp
mov
insl
lahf
dec
xor
or
adc
ficoms
fadds
cld
add
xor
mov
mov
adc
push
imul
inc
jo
adc
sti
push
mov
andb
outsl
add
push
and
sub
mov
out
sti
mov
fcompl
in
int3
push
testb
mov
or
inc
jmp
pop
cmp
cli
inc
int
mov
mov
dec
inc
addr16
or
test
sub
push
cmp
xchg
sub
xchg
and
mov
jmp
in
pusha
pop
jmp
xor
outsl
jecxz
adc
filds
push
cmp
insb
outsl
std
incl
dec
pop
cmp
xorl
pop
aas
pushf
test
insb
add
xchg
shl
or
add
and
sub
stos
mov
pop
push
jmp
aam
ds
xor
inc
mov
or
push
movsl
push
mov
lret
jae
sub
mov
mov
xor
lahf
dec
test
hlt
mov
mov
push
les
mov
pop
ljmp
dec
add
das
mov
sbb
sub
movsb
mov
mov
dec
std
loope
push
xor
add
roll
inc
loop
and
cmp
enter
mov
and
sub
out
mov
and
lds
std
cmp
test
in
popa
xchg
movsl
hlt
push
inc
push
out
sub
jmp
xor
pop
bound
sub
imul
cs
in
and
cmp
mov
test
idiv
fs
or
cs
loop
and
inc
mov
add
shl
mov
out
adc
ret
inc
sub
jmp
dec
push
xchg
daa
mov
mov
and
add
mov
loopne
pop
dec
adc
jmp
shr
adcb
sub
cmc
pop
lds
int
data16
enter
or
lods
ror
pop
pop
pop
mov
outsb
mov
mov
xor
inc
jne
mov
daa
stc
add
add
sarl
sbb
clc
lahf
pop
out
pusha
adc
leave
nop
dec
outsl
shrl
int
xchg
and
outsb
stc
cld
dec
pop
adc
adc
push
and
adcl
addb
xlat
adc
cltd
cmpsl
or
insb
mov
push
in
jo
leave
xor
push
movl
pop
or
sbb
jnp
or
and
inc
push
push
xchg
push
push
jmp
and
lock
in
xor
mov
add
adc
sbb
pop
inc
xor
mov
cltd
mov
mov
jg
xchg
add
add
repnz
xchg
orl
or
bound
push
in
xor
xchg
sti
cmovle
imul
jo
cmp
jb
jae
cmp
mov
cli
adc
scas
mov
shrb
jmp
aaa
sbb
push
imul
inc
shl
cwtl
cmp
dec
cmpsl
sbb
pop
dec
mov
xchg
xchg
fs
push
int3
cld
pop
daa
push
fsubl
bound
pop
mov
push
mov
pop
push
repz
push
data16
lds
das
or
cmp
jmp
insl
stos
mov
stc
add
and
push
mov
pop
xchg
cmp
jmp
hlt
mov
xor
mov
movsb
insl
pusha
adc
dec
dec
int3
cs
int
hlt
sub
push
pop
xor
pop
ljmp
add
add
enter
lds
sbb
xchg
not
in
fs
cmp
or
mov
mov
adc
in
cmp
shlb
mov
jb
nop
lret
out
loopne
adc
add
insl
je
fnstenv
sub
pop
xor
mov
lock
xchg
jecxz
rcll
push
jg
popa
xor
ss
mov
or
int3
mov
fnstenv
cwtl
mov
push
sub
out
cwtl
aas
pop
inc
lret
and
mov
testl
xor
loop
jmp
xor
adc
in
jnp
push
mov
inc
lds
cli
popa
scas
jmp
add
xor
xlat
mov
mov
add
dec
jge
popfw
mov
mov
add
cltd
sub
out
shrb
xchg
pop
sti
mov
addb
inc
sbb
jge
add
pusha
dec
rcrb
and
adc
int
and
mov
in
sbb
iret
pop
mov
jge
mov
sbb
pop
push
xchg
xor
inc
iret
mull
lea
xchg
jg
or
stos
fstl
mov
pop
and
popa
stos
inc
sti
xor
add
xor
clc
mov
shrl
mov
push
decl
xor
scas
xor
ljmp
sbb
jns
sub
inc
icebp
movl
rcll
movsl
ds
into
fiadds
sbb
mov
push
loope
in
dec
in
fists
std
dec
outsb
clc
push
adc
dec
loop
add
jmp
jge
push
mov
clc
or
iret
and
fdivrl
jle
scas
inc
jge
cmc
mov
jnp
push
pop
jge
dec
subb
add
negl
test
icebp
xchg
lock
ss
not
push
shll
out
movsb
int3
push
add
sub
notb
bound
addl
jle
xor
stc
popf
je
cmp
cmp
push
mov
das
sub
or
ljmp
or
lret
clc
add
push
mov
mov
rorl
cli
or
shrl
pop
jb
loopne
adc
sub
mov
sub
or
or
xchg
push
aaa
out
divb
pushf
aas
aad
cli
dec
fiaddl
les
adc
pop
xor
enter
push
push
jp
les
push
xchg
and
push
push
call
out
or
cmp
jge
sahf
dec
daa
pop
int3
cmpsl
daa
push
pop
rorl
xor
pop
inc
sbbl
adc
or
jne
cmp
mov
jecxz
aam
flds
sub
test
inc
data16
adc
push
aas
ljmp
inc
scas
stos
andl
clc
hlt
mov
cmp
add
xor
fcomps
jl
jmp
scas
adc
bound
and
add
add
imul
aas
adcl
jle
jg
inc
dec
rcl
pop
add
mov
xor
pushf
dec
sbb
mov
or
jmp
outsl
xchg
dec
push
fidivl
repz
sti
rcrb
dec
filds
cmp
inc
and
popa
adc
or
push
sahf
push
inc
notb
sub
push
orb
inc
dec
mov
mov
mov
fs
hlt
mov
or
inc
and
sub
sub
or
jmp
mov
mov
and
icebp
pop
adc
pop
bound
fstp
lea
cltd
dec
jg
nop
icebp
push
jp
pop
and
push
lods
push
pusha
pusha
jle
adc
jmp
stc
pop
hlt
or
lods
jne
lahf
pop
out
insb
add
repz
add
and
add
jecxz
adc
push
add
sub
xchg
insb
popf
ss
aam
add
mov
inc
adc
and
getsec
xorb
or
adc
orb
push
fistps
test
addr16
mov
pop
sbb
jno
add
imul
and
push
test
cmp
lahf
loopne
sub
call
add
lock
mulb
lock
pminsw
lcall
cld
jl
in
jmp
push
mov
push
sub
add
dec
sbb
clc
pop
call
cs
cmc
cmp
ror
je
push
ret
or
xchg
push
mov
push
mov
aaa
sarb
push
iret
xor
push
enter
pmaxub
aad
out
subb
jmp
xor
iret
cmpsl
jmp
scas
jecxz
xchg
cmpsb
dec
test
cmc
xchg
dec
subl
pop
in
add
fcoms
fstl
sub
subb
xor
jb
add
aas
mov
inc
pop
or
mov
lahf
int3
mov
fcomip
sti
sbb
fists
mov
cmp
int
inc
or
or
loopne
repnz
jmp
jge
dec
ds
ret
sub
mov
mov
ror
adc
pop
shrl
add
dec
ja
pop
push
push
lock
pop
jb
pop
jmp
shl
mov
scas
movsb
idiv
into
and
imull
adc
mov
xlat
pushl
push
and
jl
pop
mov
xor
jo
lds
sbb
mov
adc
lret
xlat
push
push
in
dec
xchg
pop
popf
push
push
out
pusha
jmp
xor
or
or
push
dec
jne
test
ljmp
push
mov
arpl
push
int
pop
inc
sbb
aas
mov
and
faddl
push
mov
sub
pop
xor
mov
ja
jmp
js
push
cmp
pop
rclb
dec
pop
xchg
pusha
cwtl
jmp
mov
imul
sbb
das
dec
mov
xchg
aad
jno
mov
xchg
jns
push
idiv
pop
dec
xchg
hlt
imul
aaa
daa
push
xlat
pusha
fiaddl
mov
or
and
xchg
pop
sub
js
in
xchg
mov
inc
lret
add
lea
jno
mov
orb
lea
or
jmp
pop
inc
insl
pop
push
lret
jmp
aaa
add
cmp
pop
cmp
sub
dec
rolb
pop
jmp
icebp
add
daa
add
jecxz
jae
leave
or
mov
jns
js
mov
loop
cld
enter
call
mov
es
mov
push
dec
mov
add
lahf
loope
pop
in
out
inc
or
shrl
std
lds
inc
jmp
fmull
cwtl
mov
add
dec
call
add
or
adc
xor
stc
and
mov
xor
pop
pop
push
push
add
jmp
push
xor
popf
rol
repnz
popf
mov
andl
loop
addr16
push
add
jg
pop
add
pop
jb
adc
mov
aaa
jmp
pusha
xchg
push
mov
and
pop
jo
xchg
push
dec
and
fimull
in
in
or
ret
push
sti
or
movsb
daa
jno
adcb
sbb
xor
inc
adc
ret
push
rolb
add
aaa
add
push
push
inc
mov
cmpsb
sbb
mov
ljmp
pop
xchg
lock
and
inc
jbe
repz
sub
push
add
idivb
mov
jmp
notb
sbb
add
xor
jmp
cmp
sbb
popa
in
divb
stc
xchg
pop
test
out
cmp
jmp
xchg
pop
cmc
inc
fstpt
pop
out
xlat
out
lds
add
add
call
add
push
or
mov
pushf
jmp
adc
inc
pop
and
or
xor
sti
mov
stos
bswap
cmp
jns
les
fwait
aas
mov
jg
jmp
jne
push
les
subb
pop
pushf
test
incl
inc
jp
jecxz
lock
mov
pop
mov
sub
mov
mov
mov
cmp
aam
xchg
push
push
cld
jno
into
add
push
std
sar
jne
pop
dec
icebp
daa
mov
and
dec
add
ja
ds
cltd
add
dec
jg
adc
imul
push
dec
mov
divl
push
add
add
mov
pop
and
or
mov
or
push
ds
add
push
inc
test
jno
orl
cmp
lods
fcmovnbe
loope
gs
test
sub
fmull
dec
movsl
jne
scas
mov
add
das
mov
rcll
push
test
mov
or
push
aas
xchg
sbb
roll
xlat
mov
add
inc
xor
pop
fsubr
aaa
cwtl
cmp
push
dec
mov
imul
pop
hlt
sub
jle
call
jle
nop
inc
mov
or
jmp
xlat
pop
xchg
add
add
pop
mov
stos
xor
xchg
subl
sbb
in
cmp
jnp
pusha
les
stc
jmp
mov
cmp
shlb
inc
pop
push
std
sub
out
mov
or
stos
movsb
xchg
xor
les
cwtl
adc
push
xor
movb
mov
aam
aas
daa
push
lret
sbbl
add
xchg
pop
jp
mov
and
lret
fldt
pop
sub
shr
xor
add
fcomip
maxps
stc
test
adc
imul
out
mov
cmp
jne
loope
std
test
push
jbe
mov
push
and
pop
pop
dec
out
mov
sub
add
orl
mov
inc
jge
inc
mov
popa
pop
pusha
fs
add
push
or
outsb
aam
lds
or
test
imul
cmpb
fistpll
add
push
mov
sub
mov
mov
stos
out
lret
sbb
sbb
lock
xor
leave
jne
loop
bound
pop
jbe
jae
subb
inc
mov
cmp
movsl
cld
sti
mov
ljmp
out
add
push
mov
jne
mov
mov
sarl
arpl
and
jecxz
aam
arpl
enter
push
xor
inc
xor
jg
cmp
add
std
dec
pop
mov
jno
cmpsb
inc
gs
and
cli
sbb
push
pusha
notb
lock
sub
push
xor
incl
adc
leave
gs
add
shlb
push
bound
adc
mov
xor
push
or
cs
mov
mov
sub
mov
aad
add
int
add
inc
xor
inc
mov
lock
jbe
into
cmc
into
add
adcb
push
xor
push
or
stos
in
fs
mov
ret
out
pop
xorb
push
adc
and
cmp
mov
lock
cmp
std
mov
mov
add
or
xor
pop
sbb
add
push
push
ljmp
inc
std
pop
xor
pop
addb
out
iret
add
or
insl
adc
push
sub
ljmp
xchg
mov
pop
or
adc
push
jle
add
or
sti
pop
pop
mov
cwtl
jecxz
mov
or
pop
popa
dec
jne
fldl
jo
icebp
inc
out
adc
lret
and
sbb
push
lret
xlat
enter
mov
fistl
aad
push
push
sub
and
dec
push
or
jle
add
ret
jmp
bound
addl
pop
cmp
jge
call
xorb
push
adc
mov
and
inc
fiaddl
sar
popf
icebp
out
push
add
fs
add
xchg
push
pop
jno
xchg
scas
and
sub
js
rol
ret
sbb
decl
js
in
add
icebp
add
es
push
and
movsb
popa
push
rclb
push
stc
jge
cmp
add
int
sub
or
and
add
sbb
repnz
lea
pushf
add
sarl
or
dec
mov
ja
and
cmpl
inc
add
push
jmp
push
or
mov
cld
push
loopne
push
push
addb
into
nop
pop
jmp
lahf
xor
int
jo
aaa
or
and
pop
push
inc
pop
je
cmp
scas
cmpsl
xlat
xor
push
push
push
or
popa
int
mov
cmp
mov
sbb
fistps
push
fxch
shl
cvtdq2ps
xchg
roll
lcall
es
jmp
sbb
not
or
es
movl
xor
ljmp
sub
in
iret
push
ja
and
adc
sbb
dec
repz
or
es
add
insl
leave
inc
push
loope
popf
cs
je
lods
adc
mov
or
addr16
pop
sub
adcl
fsubs
jnp
andb
nop
je
xor
or
add
or
pop
pop
mov
mov
stc
jl
sbb
out
ret
popf
and
nop
inc
shlb
mov
mov
popf
xor
push
arpl
push
scas
jbe
das
mov
jecxz
mov
jo
xor
mov
mov
loopne
pop
fwait
cmpl
fcompl
pop
xchg
aam
mov
dec
andb
daa
and
popa
dec
add
in
in
cmc
jl
dec
ljmp
xor
ja
sahf
test
ja
dec
mov
stos
in
subl
mov
and
ljmp
dec
adc
ret
jl
add
jb
adc
fsubrs
dec
mov
pop
cwtl
scas
and
stos
xchg
pop
adc
f2xm1
lret
pop
lods
xorl
add
aas
jp
pop
jmp
push
fs
jnp
cwtl
mov
ljmp
add
jl
adc
cmp
mov
imul
cmp
sub
mov
loop
ret
push
jge
push
pusha
cmpsb
fists
mov
push
push
xor
outsb
inc
mov
outsl
mov
lods
sub
dec
push
pop
out
shrl
lret
jmp
add
cmp
das
xor
adc
inc
test
scas
mov
out
sarb
push
shl
jl
aas
mov
shr
jno
orb
cmp
mov
in
popa
cmp
adc
daa
test
sbb
xor
and
jmp
out
and
or
bswap
lods
xchg
addb
pop
roll
mov
push
pop
jne
ret
fwait
sub
pop
push
test
out
mov
in
fnstcw
jecxz
inc
lods
cmp
bound
movsl
or
push
scas
push
inc
or
xor
push
xchg
clc
pusha
fucomp
iret
dec
inc
lods
sub
jo
and
adcb
jp
sbb
mov
sub
jnp
je
ret
cld
xchg
adc
mov
test
and
faddl
push
push
xchg
jmp
adcb
and
dec
inc
lahf
cmp
dec
decl
push
fists
cmp
xor
cli
ja
mov
sbbb
shll
add
das
inc
inc
stos
add
je
push
sbb
imul
add
xor
adc
or
mov
cld
inc
leave
adc
outsl
mov
jb
xchg
dec
jecxz
and
lret
cwtl
jae
pop
inc
xorb
bound
outsl
mov
inc
addr16
xchg
rclb
xor
in
lcall
aad
or
adc
xchg
xor
nop
sbb
jp
push
push
daa
cli
aam
xchg
lods
ret
cmp
push
ret
jmp
mov
cmp
dec
imul
int
sbbb
inc
sub
loope
add
jo
cmpsb
pop
xchg
cmp
push
pop
xchg
jmp
mov
pop
or
pop
nop
cmp
jmp
sub
jmp
mov
movsl
add
int
or
sub
dec
mov
pop
inc
xchg
cmp
inc
cmp
jmp
pushf
dec
or
adc
and
jbe
dec
ror
hlt
sbb
jo
or
inc
add
loop
outsb
movsb
in
jmp
pop
sub
inc
jmp
outsb
push
mov
dec
sub
or
enter
loop
cmp
inc
cmpb
iret
inc
bnd
mov
dec
aam
sbb
inc
sarb
not
jmp
addr16
lea
outsb
add
or
test
sbb
pop
clc
mov
or
shll
adc
scas
cmp
pop
mov
mov
sarl
jge
jmp
xor
dec
popf
sahf
movsl
lock
pop
inc
xchg
popa
mov
mov
cmp
icebp
push
push
mov
out
lods
les
xchg
sub
out
in
fimuls
lret
pop
sub
or
push
shrb
jno
das
pop
adc
and
addr16
in
jno
adc
sarb
push
mov
add
in
pop
jg
mov
adc
or
push
std
xchg
je
repnz
inc
dec
hlt
lds
pusha
cmc
jb
lret
orl
xchg
repz
aaa
add
pop
stos
mov
nop
push
jne
div
push
daa
jp
lock
into
pop
add
ficoms
jns
call
jmp
daa
cmp
int3
int
push
inc
mov
mov
bound
push
adc
gs
inc
mov
mov
push
sub
sub
jmp
daa
mov
sbb
mov
or
mov
push
fistpl
inc
pop
cld
xchg
pop
mov
add
jmp
jle
jp
cmp
cmc
add
ss
xchg
addr16
fstpt
or
push
jno
xchg
adc
out
sub
xor
cmp
xacquire
cli
push
add
pop
cmpsl
jb
or
popf
js
lock
popf
decb
out
add
das
jle
pop
pop
inc
dec
test
stos
fistpll
sub
cwtl
pushf
mov
and
jg
jmp
jnp
add
ret
hlt
mov
push
or
lea
aaa
jmp
add
mov
dec
add
xor
jmp
jg
negb
push
mov
das
xor
loopne
dec
xchg
sbb
jo
stos
rclb
push
pop
or
ret
lods
and
cmp
or
and
and
enter
fadds
adc
jg
dec
adc
arpl
xchg
push
fwait
stc
repz
dec
mov
ss
mov
add
push
dec
dec
jo
sbb
jnp
dec
pop
pop
and
or
jmp
cmp
pop
cwtl
push
push
xor
pop
inc
xor
lcall
repnz
cs
jecxz
pop
jmp
in
pusha
or
popf
je
in
push
mov
jmp
sub
dec
cmc
or
add
mov
and
mov
data16
xchg
or
mov
jmp
mov
xchg
xchg
add
mov
mov
add
daa
jge
pop
lods
mov
mov
sbb
icebp
push
cs
xchg
inc
or
push
sbb
nop
xchg
mov
xchg
sti
into
xlat
and
inc
movsb
add
aaa
cltd
idiv
pop
push
in
cwtl
in
out
pop
mov
or
nop
adc
fiadds
jmp
in
xor
test
scas
add
adc
mov
clc
mov
push
rclb
cmpsb
cli
sub
xchg
mov
push
adc
sbb
mov
loopne
xor
inc
je
jmp
scas
cltd
movsb
je,pt
stos
inc
std
es
jo
push
push
inc
jl
or
mov
or
lahf
pop
pop
and
push
add
adc
cmp
fistpl
jns
mov
pop
xabort
bnd
cmp
dec
test
jecxz
shlb
sub
xchg
push
idivb
in
xor
or
inc
inc
cmpsb
imul
and
dec
sbb
mov
xor
es
or
push
push
hlt
pusha
repnz
mov
popf
scas
pop
cmp
ret
push
bound
clc
stc
fcoms
pop
mov
mov
movsb
mov
and
fsubrl
into
pop
pop
loopne
jmp
test
cmp
movsl
push
sahf
sub
scas
jmp
jne
divb
clc
add
pop
add
movsb
rcll
lgs
popa
pop
jg
dec
add
jbe
lahf
inc
mov
and
push
popf
inc
mov
je
rclb
loopne
or
sbb
adc
xor
mov
scas
mov
lahf
inc
roll
testb
jmp
add
ja
pop
les
dec
popa
push
mov
ljmp
sub
popf
hlt
inc
mov
das
mov
sub
les
in
ret
neg
or
ja
mov
cld
lret
or
sub
push
std
mov
sub
pusha
shrb
dec
xor
neg
jmp
inc
dec
mov
ds
hlt
xorl
pusha
pop
sbb
lret
stos
addr16
dec
sub
movsl
and
bound
mov
xchg
int
mov
pop
xchg
lret
and
rclb
sub
xchg
scas
scas
mov
mov
ret
loop
cmc
mov
js
mov
mov
clc
push
jo
pusha
pop
movlps
mov
push
mov
sbb
adc
and
dec
mov
mov
iret
sub
cmp
xor
xor
add
stc
or
sub
arpl
loope
mov
das
mov
test
add
sbb
stos
mov
inc
adc
les
jmp
iret
pop
mov
jle
add
sub
pop
and
add
mov
arpl
push
sbb
das
cmc
mov
clc
adc
sbb
add
add
jg
repz
popf
adc
mov
push
xor
iret
push
or
pop
daa
shl
pop
js
cwtl
sbb
js
adc
sbbb
lret
fstps
and
sub
mov
cwtl
dec
iret
cmp
add
dec
add
push
in
adc
leave
pushf
push
fs
ret
jno
imul
dec
push
lds
insl
lods
dec
or
xlat
inc
gs
shlb
dec
icebp
cmp
repz
into
mov
adc
xchg
jne
ss
jecxz
pop
push
gs
movsb
mov
pop
pushf
mov
mov
mov
xor
or
pop
lahf
push
sub
jae
jo
pop
push
mov
dec
mov
je
aad
ret
mov
jg
lea
lcall
inc
xchg
pusha
add
xlat
sbbl
lods
cmpsl
out
notl
loop
adc
and
ret
add
add
add
push
and
mov
pop
mov
sub
call
xor
mov
jae
sti
nop
adc
orb
or
sbb
aad
inc
sti
sub
ljmp
lret
mov
push
cmp
loope
add
fmul
sbb
repnz
or
subb
lea
push
test
ja
leave
cmp
stos
or
push
and
mov
ja
add
pusha
pop
lods
adc
pop
jmp
push
cli
out
push
mov
jo
movsb
cwtl
cmp
jno
test
dec
shl
jmp
jl
invd
jmp
not
push
sbbb
daa
add
jb
jne
ds
adc
pop
out
push
movsl
adc
push
es
jno
clc
sub
orl
hlt
xchg
fildl
xor
sub
dec
mov
sbb
pop
sbb
push
jo
adc
pop
xchg
clc
sbb
hlt
jl
sbb
hlt
fdivrp
cmp
cmpb
lahf
ret
cmp
sahf
push
rorb
call
push
stos
test
incl
pop
adc
sub
jne
cmp
mov
rclb
call
lds
and
inc
fwait
add
xorb
mov
call
dec
pushf
mov
inc
sbb
insl
mov
ds
adc
repz
cmp
push
incb
call
fucomi
popa
cltd
push
aad
jno
add
notb
shrb
xor
push
not
mov
mov
xchg
adc
enter
cs
xor
stc
pop
neg
mov
xor
jmp
mov
jge
add
dec
add
daa
add
lods
bound
gs
nop
iret
mov
sahf
in
loopne
imul
repnz
add
pop
int3
lea
pop
xchg
mov
pushf
insl
aas
push
inc
cli
leave
or
insl
lds
lods
push
mov
nop
inc
testl
jg
add
stos
xor
lods
cmpl
inc
jo
hlt
add
pop
jmpw
push
cmpsl
pusha
add
and
sub
push
pusha
pop
cli
inc
cmp
lret
cmpsl
adc
add
movsb
mov
mov
push
sub
ret
xchg
std
adc
mov
cmc
inc
shll
push
pop
xlat
add
es
add
xor
xchg
pop
xchg
and
xor
add
mov
imul
mov
addl
int3
les
repnz
mov
inc
sub
mov
add
adc
mov
sbb
stos
or
push
jecxz
das
iret
push
test
ret
mov
mov
push
mov
jmp
xchg
enter
pop
not
inc
pop
pusha
push
cld
addr16
jb
adc
pop
mov
popa
cmp
movsl
inc
add
xchg
sub
sbb
xchg
xchg
enter
scas
mov
inc
or
insl
jbe
add
adc
mov
dec
outsl
mov
aas
dec
ds
shll
adc
rorl
inc
pop
xor
cwtl
fwait
cmp
daa
sub
out
add
jmp
mov
push
cmp
mov
imul
fistps
rorl
jbe
sbb
fisubs
jmp
stos
insl
rol
lahf
mov
pusha
cli
push
gs
add
or
or
inc
push
jb
adc
rcll
dec
in
lods
inc
mov
jle
ret
ret
dec
xor
popf
or
or
rcrb
out
daa
jmp
loope
mov
clc
jg
loopne
test
pop
sbb
push
in
pop
jnp
cmp
repnz
test
cmp
and
push
mov
inc
push
jmp
add
push
arpl
and
and
dec
pop
pop
and
enter
subl
pop
neg
stc
lock
loop
add
inc
jo
or
xor
inc
adc
jne
pushf
push
imul
jge
adcl
add
inc
add
sbb
xor
ret
and
mov
adc
sub
rcl
add
pop
test
leave
cli
push
sub
inc
addl
push
mulb
popa
sub
fnstcw
cmp
push
push
push
orb
into
cmp
loope
into
hlt
mov
sub
add
sbb
mov
insb
push
test
mov
pop
mov
add
or
push
mov
das
mov
mov
mov
ror
or
push
jmp
negl
and
cli
sarb
push
shrl
cmp
or
sub
push
mov
push
cmp
add
cmc
clc
dec
loopne
sbb
inc
leave
aaa
mov
adc
pop
into
pop
xor
movsl
jl
cs
inc
mov
pop
adcl
aad
addr16
repz
add
sbb
push
lock
pushf
dec
pop
and
cld
sub
mov
jae
cmp
cmp
pusha
or
dec
push
xor
jmp
cmp
and
cmp
clc
adcl
adc
push
xor
cmp
outsl
pop
jmp
xor
add
fwait
sbb
push
and
in
add
mov
adc
xlat
pop
sbbb
xchg
adc
adc
and
das
loop
daa
mov
lods
xchg
push
ljmp
xchg
or
mov
stos
insl
mov
imul
out
rclb
sub
das
jne
xchg
dec
xchg
les
sbbb
pop
push
pop
push
aad
and
jmp
jbe
pop
rcrb
mov
cmc
stos
lods
xchg
decl
jmp
lods
sub
dec
shr
or
xchg
lahf
rcrl
add
jno
into
int3
cmp
xchg
ljmp
push
push
icebp
dec
cwtl
stos
and
das
inc
mov
pop
outsb
scas
int3
add
add
jno
jmp
cli
stc
mov
push
jmp
orb
idiv
je
sbb
ret
jnp
int
pop
imul
les
push
or
push
cmpl
shr
pushf
cld
jmp
filds
pop
push
sub
and
xor
pop
inc
shrl
fdiv
loop
stc
push
lahf
stc
ficoms
cmp
stc
addb
adc
stos
and
fiaddl
xor
sbb
dec
pextrw
xor
xor
sahf
cs
pushf
insb
pop
and
cs
xchg
fimuls
mov
push
rolb
push
pop
mov
test
xchg
push
cltd
lock
mov
ret
cmp
sbb
in
sub
icebp
out
pop
add
in
mov
pop
fildll
cld
push
dec
adc
scas
pop
in
push
mov
je
test
daa
inc
mov
mov
sbb
sub
sub
inc
pop
lahf
inc
xchg
pusha
push
or
dec
mov
pop
inc
inc
popf
xor
adcb
aad
pop
rorb
repz
xor
push
or
rcrb
nop
rclb
mov
dec
jnp
xor
jno
cmp
pop
or
sub
push
mov
and
test
pop
std
rorl
xor
add
mov
stc
les
leave
sbbl
je
das
add
adc
fcoms
call
sarl
cmp
push
in
push
out
cmp
and
sub
nop
and
or
filds
loop
xlat
mov
inc
lcall
xor
out
jb
xlat
fcoms
in
js
cmp
cmc
dec
jmp
add
jo
adc
xorl
xor
and
aam
loope
nop
inc
and
push
push
out
imul
ret
in
jne
aad
adc
hlt
cmp
pop
jo
nop
adc
popa
jg
pushf
mov
xchg
mov
or
cli
jl
jo
mov
inc
or
das
sbb
into
leave
repz
pushf
popf
jae
nop
orl
pop
jmp
and
cmp
mov
or
mov
scas
lret
or
dec
inc
out
cmp
and
daa
iret
popa
out
mov
pop
push
or
push
jp
addl
fildl
jecxz
mov
mov
add
std
inc
data16
dec
ja
mov
mov
ret
ds
adc
push
std
sti
stos
sarb
and
ret
daa
mov
and
add
push
mov
or
and
fmuls
pop
cmpsl
mov
hlt
mov
xor
mov
dec
and
push
inc
push
cmp
ret
jmp
push
adc
or
jmp
or
and
mov
js
rcrb
inc
popf
ficompl
add
mov
mov
enter
push
jmp
popf
adc
push
push
mov
cmp
jo
adc
add
or
repz
pop
adc
cmp
in
inc
add
mov
mov
xchg
iret
sbb
push
fsubrs
cmpsl
sub
adc
sbb
sbb
add
cmpsl
aam
dec
xchg
shlb
pop
push
mov
mov
mov
jmp
or
pop
push
jg
xor
ficoml
aam
addb
add
xchg
jns
and
lods
je
ja
ret
or
adc
out
pop
dec
xor
subl
popf
pop
add
pop
push
cmp
sbb
pop
push
push
dec
mov
add
sarl
add
sbbb
and
mov
pop
or
mov
std
dec
add
js
pop
mov
dec
inc
lcall
push
test
jl
mov
cli
imul
sbb
or
jmp
push
fsubrl
pop
dec
mov
add
xor
push
push
jmp
inc
mov
adc
jns
xorl
jmp
or
aaa
jb
cmc
pop
es
repz
testl
push
subb
pop
out
and
pop
and
jno
pop
enter
adc
jecxz
loop
push
mov
aam
enter
mov
daa
jmp
xorb
or
cld
movsb
inc
add
add
icebp
push
xchg
jne
xchg
imul
aad
mov
mulps
mov
cmp
and
push
sahf
aas
aas
pop
imul
mov
sub
in
pop
mov
cmpsl
jmp
add
push
les
test
adc
js
fistl
pop
pop
iret
in
mov
or
loop
jb
or
or
sub
out
test
out
icebp
fldt
std
out
mov
adc
pop
inc
push
sbb
jp
pop
sbb
outsb
mov
sub
lahf
daa
jmp
pop
push
stos
mov
das
lcall
ja
dec
pop
push
fcomps
pop
leave
inc
mov
ret
xor
xchg
test
pop
push
push
mov
test
fists
push
inc
cmp
jae
mov
jg
out
or
push
mov
push
add
jno
imul
pop
push
jmp
jno
dec
gs
test
ret
push
sbb
adc
dec
sbbl
mov
cltd
push
push
and
add
push
jb
jecxz
add
pushl
jmp
push
lock
xchg
stos
rolb
mov
mov
add
pop
jb
dec
sub
ja
adc
lret
test
scas
rcl
out
xor
clc
loop
fadd
or
loop
mov
loop
push
fbld
popf
inc
test
xor
leave
mov
xor
in
push
dec
push
test
mov
sub
addr16
mov
mov
nop
adc
cmpsb
mov
sub
scas
inc
xchg
icebp
testl
loopne
sbb
xlat
pusha
testl
jmp
sti
ljmp
xchg
cmp
jns
cs
pop
sub
xor
push
jno
or
pop
stos
mov
mov
fs
pop
mov
hlt
dec
out
mov
fwait
sbb
insb
sub
out
cmp
inc
sub
adc
repnz
adc
and
imul
inc
sbb
xor
insb
test
shrb
cmc
outsl
sub
out
jmp
sbb
imul
pop
dec
pop
pop
lods
jg
movsb
xor
scas
jnp
and
mov
negl
pop
ljmp
add
push
mov
xchg
pop
or
dec
inc
lods
xchg
repz
movsb
dec
adc
add
dec
test
adc
xor
add
std
popa
ret
or
mov
xor
add
or
stc
mov
cs
ss
out
xor
pop
sub
popf
pusha
in
jmp
lds
sub
rolb
mov
cmp
test
jmp
push
pop
mov
mov
sub
xor
je
jmp
pop
push
pop
and
iret
fbld
cmp
or
sbb
mov
scas
xlat
sub
jmp
xchg
jbe
jae
popa
push
jno
inc
cli
jmp
xchg
mov
and
outsl
arpl
jne
xor
cmc
xor
sub
jmp
xchg
js
adc
inc
add
les
or
or
cld
sti
loop
je
mov
jns
inc
icebp
icebp
outsl
test
mov
mov
cmp
cmp
add
adc
test
test
pop
ja
inc
jmp
fstl
inc
mov
movsl
dec
mov
les
dec
dec
push
loop
jnp
adc
leave
jnp
push
shl
fcomps
add
sub
out
pop
das
cli
inc
inc
push
test
popf
cmc
and
ja
inc
movsb
rcll
jmp
rcll
idiv
mov
pop
push
push
add
repnz
xorl
and
fs
sbb
jmp
or
sub
pop
fldl
adc
dec
pop
push
and
cld
subb
jne
cmp
xor
out
stos
lock
repnz
xlat
jmp
and
push
xchg
das
mulb
cmp
and
rolb
adc
orb
lret
push
lgs
mov
repnz
push
lods
pop
rcrb
and
clc
mov
neg
incl
test
push
or
add
push
in
inc
das
adc
pop
push
add
xor
push
pusha
insb
fwait
add
lock
mov
or
sbb
shll
sub
xor
lret
and
ds
imul
repnz
mov
stc
insl
dec
xlat
push
loopne
int3
mov
pop
fsub
je
push
dec
shl
arpl
add
in
xchg
and
filds
or
sbb
mov
ss
sub
or
in
nop
mov
mov
lock
or
std
lahf
inc
and
jl
cs
push
movsl
mov
in
add
push
adc
icebp
inc
callw
pusha
fisttps
pop
cmpsl
push
sbb
addl
or
push
sarb
add
outsl
and
inc
lea
inc
jg
rolb
jecxz
pop
stos
mov
scas
aad
add
jmp
out
jb
fwait
or
leave
and
add
test
xor
sbb
pop
fcompl
test
push
imul
and
lea
jne
inc
push
xchg
jg
test
enter
shr
pop
in
adc
or
adc
sub
aad
xlat
nop
sbb
sbb
movb
pop
aaa
jl
clc
adc
pop
cmpb
fists
ljmp
or
inc
adc
jb
clc
mov
es
mov
jl
add
test
or
inc
xchg
sub
mov
adc
ja
sub
jmp
cmc
push
loopne
mov
and
incb
push
mov
daa
push
dec
loopne
das
and
add
imull
and
ja
mov
fcoml
jns
das
lds
stos
lahf
les
imul
shlb
fsts
pusha
loope
inc
call
aaa
jmp
push
or
cmp
inc
mov
mov
cwtl
lods
sub
push
add
adc
pop
adc
pop
pop
inc
add
mov
xor
push
cmp
ds
mov
pop
mov
es
or
pop
mov
push
mov
clc
out
mov
stos
inc
cld
les
mov
add
inc
push
mov
xor
jmp
and
cwtl
outsl
pop
sbb
aad
dec
push
dec
lods
flds
jbe
fdivrl
dec
sub
mov
xbegin
adc
leave
shlb
sarb
inc
into
test
mov
cmp
repz
adc
insb
jns
sahf
mov
add
cltd
jb
je
stos
outsb
mov
sbb
dec
cmp
outsl
lds
mov
cmp
adc
mov
fldcw
fdivrl
lret
cmp
ja
ds
fs
repz
pop
inc
add
add
cltd
adc
test
pop
push
in
imul
ret
call
and
or
repz
xchg
sbbb
jb
popf
sbb
mov
mov
dec
add
mov
sarb
jns
popf
xor
mov
xchg
rolb
popa
and
add
push
add
lds
pusha
cmp
sub
inc
shr
pop
mov
pushf
outsb
xchg
cmp
push
mov
push
shr
shlb
fwait
adc
mov
adc
or
xor
cld
imul
pop
gs
or
or
push
movsb
or
jb
jmp
aam
cmpl
xor
sub
pop
add
fstl
cmp
cmp
mov
xor
xlat
into
pop
dec
add
jo
and
jp
jp
sub
outsb
repz
push
mov
sub
int3
sub
jne
shll
adc
sub
pop
aad
and
and
pop
in
aaa
pop
sub
js
and
push
or
add
jne
out
dec
or
xor
rorb
or
mov
scas
ja
inc
inc
shr
xchg
lcall
nop
inc
testb
repz
push
subb
or
pop
adc
cs
jno
xor
aaa
mov
in
or
es
mov
mov
outsb
cld
xor
pop
hlt
mov
or
icebp
daa
popf
push
call
adc
add
xchg
mov
jmp
sub
push
push
push
push
in
sbb
hlt
cwtl
xchg
lea
xor
aas
rorb
jmp
inc
adcb
xor
mov
into
shl
rolb
ljmp
or
nop
pop
daa
add
mov
jmp
lods
push
mov
jno
sub
pop
loopne
add
sub
inc
inc
fldt
mov
sub
adc
mov
push
out
or
and
in
loop
inc
and
mov
jmp
push
lock
add
inc
pop
inc
inc
sub
or
xor
and
push
imul
cs
insb
or
push
xor
mov
addl
mov
and
jns
dec
or
xor
jnp
shlb
das
gs
sub
or
das
pop
aaa
ret
jbe
and
mov
mov
mov
jo
ret
insl
jmp
push
cmpsb
arpl
adc
add
loopne
xor
into
or
shlb
ret
xor
ror
jmp
xor
enter
and
xchg
dec
scas
jo
push
push
push
jns
jno
aam
push
xchg
mov
or
push
imul
out
in
fmul
filds
cmp
rorb
jge
pop
cmp
inc
cmp
sbb
das
pop
mov
mov
les
in
mov
and
push
mov
push
xchg
call
jmp
test
push
iret
sbb
push
sbb
loop
les
ljmp
xchg
push
push
lods
dec
in
test
insb
shr
or
or
loope
add
mov
sub
cmpsl
add
xor
daa
adc
rorl
test
mov
out
and
push
dec
push
inc
and
dec
or
pop
add
leave
ret
xor
iret
jo
outsl
add
and
inc
pop
or
mov
cmovo
lret
cmc
out
jle
je
jmp
jmp
push
call
aaa
loopne
loopne
out
jl
cmpsl
pop
push
add
sbb
fnstenv
pop
loopne
pop
pop
cmp
add
push
aaa
sbb
sub
sub
out
int3
clc
popa
inc
mov
cmpsb
cmpl
jne
dec
or
inc
or
aad
mov
push
dec
mov
push
arpl
xor
pop
and
or
data16
cmpsb
or
iret
jecxz
btr
xor
leave
pop
filds
dec
xor
das
jmp
pop
pop
push
push
mov
inc
addb
or
int3
push
shll
and
pop
cmpsb
fistl
adc
test
or
sbbb
jb
add
loopne
in
out
pop
mov
cli
jmp
or
add
xchg
clc
xlat
add
inc
or
mov
push
add
adc
xor
and
mov
cmpsl
frstor
mov
aam
pop
fstps
jmp
pop
jns
ret
fidivl
jge
popf
pop
sahf
mulb
out
mov
mov
jne
in
mov
mov
repz
xorb
ljmp
mov
or
rcl
int
aas
jns
jecxz
xor
shlb
cwtl
dec
daa
shl
inc
cwtl
in
sar
not
dec
popf
mov
ret
or
add
xor
inc
and
push
push
mov
mov
and
cmc
push
adc
dec
sti
lret
xlat
pop
jmp
std
and
outsb
push
ret
stos
mov
cmp
or
sub
inc
cmpsl
xlat
les
ljmp
cmc
shr
nop
sbb
int
sarb
insl
lcall
dec
sub
scas
std
push
pop
lods
insb
adc
mov
adc
push
or
mov
inc
test
jg
icebp
outsb
lea
pop
imul
dec
push
in
lock
pop
push
dec
outsl
add
adc
aam
jns
dec
daa
hlt
sbb
mov
fwait
push
cwtl
adc
jne
mov
icebp
push
xor
mov
pop
cmpsb
leave
filds
testl
out
nop
add
iret
and
icebp
add
push
mov
pop
popf
stc
jecxz
jmp
pop
out
cwtl
mov
or
sub
mov
mov
call
mov
pop
xlat
jnp
or
icebp
jecxz
jge
aaa
lods
in
es
push
xor
mov
lahf
roll
mov
scas
sub
mov
ret
outsl
add
jg
xor
and
loop
or
pop
jo
hlt
leave
push
fisttpll
pop
shl
adc
or
or
je
cmp
rep
subl
push
push
leave
pop
lret
pop
out
and
je
inc
pop
or
jno
add
mov
add
mov
pop
adc
sbb
in
adc
push
ret
sub
test
ret
jg
or
loopne
sub
mov
inc
sbb
cld
fisubl
out
and
adcb
loope
cli
xor
test
cmp
call
jp
out
adc
cmp
sarl
push
rclb
cld
push
sub
div
cmpsl
pop
shlb
addb
dec
xchg
imul
test
push
xor
cs
adc
pop
std
add
mov
pop
aas
add
mov
rcrl
dec
jne
add
adc
sub
repz
xlat
adc
jo
mov
cmp
outsl
arpl
shlb
das
cmpsl
scas
aad
sbb
pop
pop
daa
stos
test
fwait
fwait
sub
sub
out
cmp
nop
lret
push
lret
fs
aam
dec
jl
inc
cvttps2pi
lods
jne
fidivs
cli
push
lods
rorb
adc
push
or
js
and
pop
inc
dec
jle
xor
cltd
mov
mov
mov
and
inc
add
hlt
imul
loopne
sbb
loop
add
mov
xor
loope
out
pop
adc
jg
mov
jge
and
xchg
push
adc
pop
aam
dec
jge
lret
inc
jmp
jmp
ret
out
or
sub
cli
rcrb
and
hlt
imulb
or
cld
add
movsb
scas
mov
xor
fidivl
or
std
xor
adc
int
dec
dec
mov
mov
pushf
inc
cli
adc
mov
pop
mov
push
loop
mov
jecxz
mov
add
add
jnp
xlat
ret
ljmp
lds
add
sbb
dec
jno
aad
dec
into
jmp
daa
filds
push
leave
int
dec
sub
sti
jecxz
movsb
pushl
jbe
push
and
not
or
mov
adc
and
das
cld
mov
xchg
incl
pop
bound
cmp
add
dec
sbb
lret
in
shlb
fsubr
lret
mov
arpl
xor
adc
inc
jl
add
inc
push
xor
out
mov
inc
fildll
test
aaa
lods
jle
stos
push
cld
dec
and
mov
xor
out
call
adcb
sub
add
sbb
xor
daa
mov
hlt
bnd
pusha
push
sbb
or
ficoml
push
stos
idivb
xchg
rorl
jmp
or
mov
and
inc
gs
pop
jbe
sarl
xchg
pop
jecxz
xchg
jnp
mov
out
pop
repz
jo
das
not
shlb
aaa
dec
mov
dec
scas
fstpl
int
pusha
test
mov
aad
push
adc
fisubrl
mov
loope
arpl
pusha
addr16
mov
or
addr16
popa
jmp
into
lea
rcrb
loope
jnp
sub
jge
leave
xor
out
out
hlt
jl
push
sti
mov
jmp
sub
clc
push
adc
imul
mov
jl
cwtl
adc
or
mov
adc
loop
addr16
dec
imul
add
cmp
push
js
clc
dec
inc
outsb
fsubrl
lret
jnp
adc
das
aad
jo
scas
push
mov
push
xchg
mov
outsl
std
pop
popf
push
inc
out
or
enter
sub
jge
cmp
inc
loopne
add
sub
pop
or
sub
or
repnz
mov
lods
js
mov
sub
pop
pop
js
sub
enter
jmp
mov
push
mov
or
ja
es
enter
cmp
mov
les
in
in
aad
jnp
cmp
and
leave
lea
scas
push
add
sbb
mov
mov
sbbb
outsl
xchg
push
xchg
pusha
push
mov
mov
push
subb
pop
sub
add
in
stos
inc
xchg
ret
out
inc
cld
and
or
dec
push
jmp
js
in
cltd
cmp
sub
ficompl
adc
push
mov
shl
dec
jmp
xchg
ds
sub
sbb
out
notb
mov
and
push
ljmp
or
les
fstpl
cmp
pop
stc
data16
sub
sub
data16
testb
or
leave
fs
push
scas
pop
stos
jp
jmp
sbb
int
push
pop
jns
das
jmp
sub
je
mov
jmp
push
mov
ljmp
scas
dec
frstor
pop
lods
sahf
xchg
add
bound
add
shl
xor
jmp
mov
add
add
sbb
pop
test
mov
cmc
addr16
jl
les
mov
leave
push
mov
push
push
add
and
imul
test
mov
icebp
dec
clc
test
push
sub
xchg
pop
xor
fwait
jb
in
in
mov
movsb
loope
mov
and
hlt
es
xchg
mov
sub
sub
sub
xor
clc
push
sbb
repz
or
mov
xchg
push
pop
sbb
scas
xchg
pop
add
jl
sub
sub
sub
daa
fnstsw
add
mov
out
add
in
sti
add
cs
aas
push
cwtl
push
ja
jmp
and
jecxz
adc
fdivp
adc
push
pushw
movsl
loop
adc
lods
add
push
push
pop
push
lds
inc
and
jp
dec
sub
mov
sub
out
and
sub
scas
aam
xchg
imul
xchg
cmp
int
aas
inc
cli
mov
sti
fsubr
adc
and
mov
rcll
in
mov
outsl
dec
mov
or
mov
add
xor
pop
adc
out
cmp
int
sub
pop
insb
and
cmp
inc
push
push
jmp
jbe
shrl
mov
in
adc
xchg
mov
inc
dec
fimull
nop
or
push
popf
shlb
and
inc
ds
out
add
loope
aaa
add
fisubs
xor
or
add
or
inc
shl
adcb
jp
push
xlat
das
aaa
mov
jne
jne
add
pop
stos
cltd
gs
sbb
and
lock
repz
dec
test
fdiv
add
dec
inc
test
daa
jmp
push
rolb
push
push
pusha
mov
push
dec
jmp
cmp
or
aas
cli
jo
pop
push
mov
or
in
orl
xchg
sti
iret
adcl
int3
or
adc
pop
and
das
test
jmp
aas
fcomps
jge
inc
mov
enter
xchg
cmp
jae
mov
xor
mov
adcb
push
aas
ds
add
pusha
add
mov
popf
lds
in
sub
insb
mov
inc
push
pop
cmp
push
cmpsl
out
sbb
mov
add
cmp
cmp
lds
les
jmp
mov
mov
jb
mov
and
jl
lret
adc
jnp
and
xchg
mov
jb
jne
xorl
cmpb
or
filds
jno
cld
push
add
fs
jmp
loope
and
pop
rorl
inc
or
dec
testl
gs
ret
sbb
add
ret
lret
push
pop
add
mov
stos
push
mov
pop
push
and
rol
sub
sahf
cmc
sub
adc
add
sbb
addr16
les
sbb
or
adc
ljmp
test
add
movsb
mov
loopne
nop
cs
lock
daa
mov
cwtl
lods
xor
jg
xchg
mov
imull
ds
dec
stos
push
add
aas
mov
sub
enter
xlat
lret
ret
mov
fstps
mov
jle
enter
shl
mov
aaa
push
adc
mov
out
outsb
repz
out
and
or
sbbb
or
pop
sbb
push
xchg
inc
mov
xchg
out
xchg
std
push
cld
cmp
ljmp
std
icebp
jbe
jmp
add
mov
sbb
in
pop
outsl
or
xchg
sbb
cli
push
adc
cmpsb
and
je
out
dec
push
push
inc
mov
ds
xchg
xor
mov
daa
xchg
or
in
and
lret
fildl
shlb
std
xlat
and
and
adc
mov
sarb
or
xor
sub
mov
adc
xchg
movsl
int
add
xchg
scas
lret
lods
adc
pop
mov
lret
adc
sti
enter
in
cmp
loopne
rcll
add
daa
mov
sub
cmp
das
jmp
fsub
inc
stos
mov
jb
arpl
jl
pop
rolb
and
cmp
mov
sarl
pop
addr16
pop
pop
stc
sbb
add
loope
push
leave
xchg
aas
lods
insb
or
push
inc
out
or
bound
shrb
scas
add
fwait
shrl
push
scas
adc
add
mov
mov
jecxz
mov
inc
pop
outsl
push
js
adc
sub
fcoms
repnz
ret
movb
mov
cmpsl
gs
aam
sti
repnz
mov
jbe
push
or
loope,pt
movsb
data16
in
push
mov
pushf
adc
aad
jmp
sbbb
xor
scas
pusha
sub
std
jae
xor
lea
mov
dec
jnp
mov
ret
dec
add
cmp
push
lock
icebp
or
pmulhuw
in
or
push
xchg
and
mov
sub
iret
adc
jne
cmp
in
loope
stos
int3
cltd
addr16
jbe
xor
ret
push
cld
and
mov
daa
aad
cld
stos
lahf
roll
aaa
sbb
push
push
lds
imul
clc
push
fadds
imul
rclb
jmp
inc
mov
pop
inc
outsl
out
sub
std
mov
ljmp
lock
add
popf
sub
cmpsb
mov
cs
cmpsl
mov
push
shr
aas
ja
movsl
or
inc
xlat
dec
dec
and
or
mov
pop
push
xchg
mov
push
xor
inc
xchg
or
adc
dec
lret
ss
or
outsb
add
and
sub
popa
test
inc
ror
jb
cs
jmp
mov
ret
sbb
add
mov
rclb
adc
pop
fwait
test
jmp
or
add
jae
pop
mov
pop
add
rcll
push
pop
in
js
sub
shrb
add
pop
mov
addb
popa
orb
sub
xchg
leave
scas
push
xor
mov
jne
ja
sub
leave
push
test
les
es
add
test
filds
cmp
call
pop
or
pop
jmp
mov
push
mov
fcoml
dec
lahf
dec
popf
add
lcall
daa
notb
or
fidivl
clc
push
aad
rolb
adc
dec
ror
mov
daa
push
jge
lock
sbb
lret
add
push
inc
not
pusha
popa
mov
or
mov
mov
mov
add
push
rolb
pop
mov
jmp
xchg
pop
ljmp
sbb
jecxz
cmp
pop
in
mov
ret
mov
push
mov
inc
cltd
pop
xchg
push
inc
push
iret
push
jmp
sbb
mov
adc
jbe
add
sbb
cmp
mov
inc
outsb
bound
hlt
push
add
mov
pop
call
xchg
cs
push
arpl
inc
pop
cmc
push
pop
aad
mov
aad
xor
mov
cltd
loop
popa
add
add
adc
nop
pop
out
into
imul
je
push
cmp
xchg
enter
je
lods
lods
js
push
push
and
nop
xor
or
cmp
inc
jmp
lods
fldenv
outsl
out
mov
in
pop
push
xor
les
push
sub
out
sbb
jmp
data16
sbb
cs
mov
rorb
dec
incb
jno
in
push
ficomps
pop
fstl
push
inc
pop
cwtl
arpl
jle
lds
ljmp
cmp
push
dec
push
push
xlat
ss
or
push
loopne
push
add
neg
sarb
sbb
movsl
or
jmp
lds
jmp
imul
mov
les
je
imul
scas
out
xchg
inc
push
push
loopne
in
jns
shlb
push
jmp
jg
cmp
jge
icebp
jg
xor
push
in
pushf
cmp
adc
pop
fisubrl
push
in
xchg
cltd
dec
inc
sbb
xor
add
xor
das
dec
mov
cmp
ds
pop
dec
movsl
pop
sub
and
push
sub
cmp
adc
push
pop
pop
xchg
pusha
sub
xor
pop
sub
dec
popa
dec
clc
mov
stc
adc
jae
add
insb
fwait
pop
rcrb
sbb
mov
mov
dec
xchg
cli
or
ret
ds
jmp
inc
movzwl
movsb
test
push
add
xor
cmp
shl
pop
mov
push
mov
fcomps
sub
les
clc
adc
std
or
or
mov
jnp
shr
add
mov
pop
dec
mov
pop
xchg
xor
mov
push
push
ficoms
shr
push
call
addr16
sub
imul
aam
or
jmp
cld
inc
icebp
add
adc
in
cld
sbb
in
pop
add
add
jp
add
jp
push
popa
mov
push
adc
mov
cmp
cmp
test
push
clc
or
push
push
into
mov
out
add
movl
mov
and
hlt
adcb
xor
cli
loope
jne
mov
or
and
mov
adc
into
mov
std
or
push
loop
mov
std
and
dec
sub
xchg
pop
scas
mov
imul
mov
xchg
xor
mov
les
add
inc
fisttps
pop
push
inc
xchg
and
dec
lahf
jb
and
lahf
sbb
xchg
aad
pop
lcall
movsl
pop
push
push
sub
in
cmpsl
aad
hlt
mov
mov
out
out
fwait
add
pusha
push
stc
popl
mov
push
push
pop
gs
mov
enter
mov
movsl
or
and
add
ss
jb
push
gs
stc
test
push
sbb
mov
or
xor
popa
dec
push
cmpsl
shrb
lods
push
and
dec
jmp
xor
in
nop
inc
and
mov
mov
mov
add
jbe
and
adc
std
andl
shl
aam
jp
sub
je
divb
movsl
jne
in
jecxz
sbb
lret
pop
add
inc
hlt
or
jmp
movsb
xchg
and
add
xchg
mov
sub
add
sub
sub
fs
mov
and
mov
xor
cld
outsb
test
int3
and
daa
jmp
jmpw
or
mov
pop
jae
andb
cmp
mov
enter
jmp
push
pop
ss
xchg
icebp
inc
call
fdivs
lcall
ret
dec
adc
adc
inc
and
add
adc
and
hlt
daa
fnstsw
loopne
sbb
bnd
das
cld
orb
dec
lds
stos
mov
and
jmp
inc
pop
sarl
insb
mov
pop
sub
pop
subl
fcmove
das
dec
xor
mov
lods
cmp
mov
or
jle
push
pushf
inc
sub
mov
xchg
push
cltd
cmp
inc
mov
cmc
or
les
mov
and
addr16
shr
inc
add
dec
mov
dec
adcb
mov
loopne
addr16
dec
leave
inc
leave
and
subb
jmp
jmp
lea
push
insl
push
xor
push
sub
insb
ja
pop
pop
or
shr
ja
mov
mov
fcoms
inc
stos
xor
ss
sub
cmp
andb
cld
jbe
jmp
fadd
xor
push
pop
sub
das
dec
pop
fiadds
icebp
mov
mov
or
or
pop
sub
test
xchg
insb
subl
imul
push
mov
pop
mov
sti
cs
and
push
bound
add
add
mov
mov
inc
inc
daa
jbe
inc
mov
sub
cmp
jmp
xchg
xchg
push
loopne
jecxz
in
pusha
out
ret
daa
shlb
xchg
inc
loopne
js
dec
jg
push
out
mov
mov
and
hlt
out
test
sub
xor
adc
fwait
jne
inc
or
jo
je
dec
call
lret
mov
sub
sbb
sar
xor
jbe
xchg
mov
and
add
push
jns
cld
es
dec
sub
repz
sub
rcr
push
and
push
xor
inc
subb
add
js
daa
pop
jle
sahf
test
jmp
dec
and
push
pop
in
sub
dec
sti
popf
fwait
enter
xchg
adc
stos
lea
jg
push
mov
insl
push
jns
mov
cli
test
add
loope
popa
int3
push
push
lret
ljmp
pop
cmp
pop
sbbl
in
dec
mov
sbb
fistpl
or
sarl
pop
adc
cld
jmp
mov
cmp
imul
push
into
mov
sub
lods
push
cmpsl
in
mov
sub
cs
push
jmp
cmp
cmp
sub
adc
xor
mov
ret
add
push
int
dec
inc
stos
add
scas
bound
push
loope
cltd
push
mov
or
add
dec
test
movsb
or
adc
shlb
imul
pusha
loopne
je
or
fwait
xor
into
fsubrp
xchg
pop
loopne
jmp
outsl
subb
fildl
sti
sub
jmp
cmpsb
into
mov
mov
pop
push
sbb
ss
sub
or
sbb
add
or
dec
clc
xchg
add
movsl
in
sub
lods
call
jge
stos
jb
pop
mov
outsb
ja
addr16
cld
push
rclb
pop
add
xlat
dec
fldcw
mov
aam
xor
cmpl
or
dec
add
iret
xcrypt-ctr
cmpsl
sbb
imul
jo
out
sbb
les
lds
jge
push
sarl
push
inc
mov
cwtl
push
xor
inc
sub
aam
jmp
rolb
cmp
outsl
lods
repnz
jg
pusha
inc
cmp
sub
inc
int
lcall
sub
sahf
sar
sub
cmp
or
shlb
loopne
or
add
pushl
pop
cmp
fldcw
fists
mov
push
inc
add
adc
inc
add
xchg
mov
lock
mov
pop
push
pop
scas
jns
aad
sub
jp
int3
inc
out
js
xchg
xor
les
push
xchg
rcll
shll
jmp
in
nop
lahf
xchg
add
cmp
or
mov
xor
testb
cmp
psubsw
rcrb
jns
push
sub
push
add
add
lods
lods
movsb
or
xchg
aaa
xchg
pop
mov
or
jmp
cli
fisttpll
aaa
pushf
push
ljmp
sub
clc
fucomp
mov
addr16
pop
cli
loop
fmul
rolb
push
mov
pop
mov
xchg
pop
rcr
out
sbb
out
shr
or
into
adc
or
hlt
pop
mov
jno
fdivs
scas
lcall
and
push
out
insl
push
ret
dec
and
jns
mov
movsb
push
faddl
sub
out
lds
adc
or
mov
fcoms
pop
jnp
lret
jl
cmpb
mov
xchg
add
jmp
push
orb
push
decb
add
test
cld
daa
push
or
mov
mov
loopne
outsb
push
daa
xchg
lock
xor
sbbb
mov
fldenv
sub
xchg
cmpsb
mov
xor
pop
lcall
testl
ror
imul
cld
add
dec
movsb
shl
xchg
jecxz
or
iret
syscall
leave
push
or
mov
rorb
addb
inc
sub
jne
popa
call
adc
adc
movsb
sub
mov
sbb
or
pop
inc
add
jecxz
out
add
push
pop
pusha
fucomp
or
xor
nop
pop
mov
push
in
icebp
jmp
fcompl
pop
pop
xchg
sbb
ret
jmp
mov
jae
mov
sbb
mov
adc
arpl
enter
add
mov
and
sbb
aad
dec
popl
push
pop
popa
push
lods
adc
push
in
fwait
out
add
inc
inc
add
jne
mov
nop
add
arpl
cmpsl
and
dec
mov
stc
daa
xchg
icebp
or
popa
iret
ret
call
pop
cmp
shrb
inc
mov
pop
repz
xchg
daa
adc
push
hlt
bound
nop
dec
pusha
jno
pop
pusha
push
add
dec
cmp
icebp
bound
add
shlb
sub
mov
and
inc
adc
ljmp
mov
xor
cltd
dec
dec
or
int
addl
xchg
jo
insb
mov
add
lret
fcoml
ljmp
inc
lods
pop
push
add
or
in
jp
adc
xchg
mov
loopne
sub
jnp
movhps
data16
je
out
mov
mov
cld
add
rclb
scas
mov
out
or
add
faddl
enter
pusha
add
inc
flds
cld
das
imul
sbb
ja
andb
pop
lods
mov
setb
je
inc
dec
ret
sbb
shlb
cmp
in
loopne
or
pop
sub
jecxz
add
int
pop
mov
sub
xor
loopne
jbe
test
push
aad
sti
adc
mov
scas
pusha
fnstsw
sbb
sub
adc
ucomiss
cwtl
enter
add
lret
and
mov
lret
loopne
add
jle
mov
push
jne
xchg
pop
leave
add
in
in
popa
test
mov
jp
enter
add
int3
test
cmpsb
test
and
add
mov
shrb
testb
dec
adcb
insl
lahf
xor
rcrb
ljmp
inc
cmc
pop
cmp
adc
out
pop
cs
adc
jns
out
mov
vmread
xor
lahf
dec
cmp
stos
push
inc
and
adc
orb
cld
pop
ror
fldl2e
adc
ficoms
mov
push
add
mov
stos
pop
push
inc
flds
xchg
sbb
movsl
sub
mov
lds
pop
mov
cltd
jns
stc
mov
add
in
or
xchg
mov
adc
dec
daa
add
add
pop
adc
mov
mulb
add
cmp
xchg
add
cld
xor
dec
lods
out
loope
mov
lret
jnp
into
fwait
mov
daa
jg
popf
in
jo
pop
pinsrw
fiaddl
adc
add
data16
fwait
push
nop
fsubl
mov
or
sub
and
adc
das
pop
pusha
lcall
mov
inc
loopne
sub
add
fdivl
mov
mov
enter
mov
aad
lods
adc
loop
shll
pop
mov
add
sbb
cmp
pusha
and
add
jns
inc
loop
ds
dec
push
subl
adc
push
mov
inc
aas
popf
mov
les
test
inc
xchg
pusha
dec
fbld
xchg
addl
call
inc
push
out
xchg
mov
shll
cmp
loopne
pop
pusha
mov
jbe
dec
or
xchg
add
push
aas
test
mov
in
adcl
negl
incb
aad
lahf
jg
mov
or
movsl
faddl
push
sub
jae
popa
add
mov
mov
stos
mov
add
xchg
xchg
push
pusha
inc
inc
add
and
mov
cmp
lret
aas
cmc
and
cli
or
add
cltd
jae
mov
sahf
add
ljmp
pop
dec
sbb
sahf
push
mov
add
test
shrb
and
pop
lahf
mov
sbbb
cmp
add
inc
into
in
rolb
stos
pop
pop
daa
clc
push
loopne
add
xor
cmp
or
add
mov
push
icebp
int3
subl
pop
add
lea
inc
mov
pop
sub
inc
in
push
add
xor
add
mov
addb
cmpsl
in
add
lods
pop
fdiv
jmp
add
adc
inc
add
pop
mov
jbe
pop
cmp
es
out
inc
fdivrl
mov
add
push
push
adc
sbb
jmp
add
aad
cltd
or
insb
jo
xchg
fcoms
movsl
fdiv
sub
faddl
push
es
repnz
out
paddb
les
xchg
loope
mov
movsl
dec
mov
es
movswl
dec
dec
cmp
inc
mov
lock
enter
inc
mov
and
mov
and
cmp
cmp
push
aam
cltd
ss
aad
xchg
pop
xor
cmp
add
aaa
leave
and
jo
daa
push
jno
insb
add
dec
push
pop
inc
push
faddl
or
jnp
shlb
repnz
pusha
cmp
bswap
vmread
das
add
stos
jmp
inc
add
xchg
cmp
pop
push
add
xchg
aam
sbb
push
hlt
mov
out
stos
mov
nop
stc
inc
adc
leave
mov
and
jae
shll
inc
add
lea
mov
adc
lock
jg
imul
push
add
lock
lret
or
hlt
dec
xchg
add
rcr
loope
cld
push
mov
xchg
dec
jl
mov
sbb
scas
add
xor
mov
mov
adc
rclb
adc
notl
nop
xchg
adc
jge
sub
in
add
xchg
fidivrs
inc
imul
lods
aas
js
xor
push
xor
scas
xor
add
insb
or
or
push
mov
adc
add
adc
iret
jbe
sub
and
cld
add
ret
addr16
loopne
pop
sub
mov
add
push
js
xchg
xor
mov
fwait
lods
mov
iret
sti
inc
push
jmp
dec
inc
fs
mov
cmp
or
inc
jg
mov
sub
je
out
fcompl
add
dec
cmp
adc
mov
shll
push
sub
and
add
jmp
gs
add
sbb
xlat
pop
mov
add
ret
inc
xor
cli
aad
int3
aaa
add
xchg
aam
push
add
stos
inc
mov
jp
loopne
mov
std
jl
push
push
push
push
loope
pop
push
pop
or
pop
int
add
rorb
in
scas
popf
jge
clc
mov
pop
inc
lcall
pop
mov
jecxz
call
mov
mov
ss
mov
adc
jge
mov
xchg
cmp
pop
loopne
pop
jg
sahf
adc
mov
bswap
add
and
inc
movsl
jae
dec
and
sbb
fmul
add
or
add
in
int
pop
cld
mov
je
mov
sbb
jl
pop
pop
js
dec
jbe
scas
arpl
push
xor
imul
mov
lock
cmp
lds
add
inc
fcomp
dec
adc
lret
cmp
clc
or
test
push
std
enter
jmp
cs
pusha
add
fwait
pop
jge
add
mov
mov
sub
jo
in
push
mov
lahf
and
add
es
mov
stc
or
add
xchg
inc
xor
cmpsb
sub
mov
ret
in
add
iret
addb
dec
cs
mov
inc
push
mov
inc
aad
hlt
xor
fdivr
or
add
test
enter
movsl
or
ficoml
xchg
rol
pop
push
mov
xor
pop
je
ss
dec
pop
fstl
add
cmpsb
cmp
xchg
add
scas
add
in
push
push
xchg
sbb
add
imul
add
out
mov
sbb
cwtl
out
pop
add
sub
xchg
mov
mov
inc
addb
or
mov
test
sub
inc
cmc
push
mov
insb
xchg
icebp
ret
inc
imull
add
dec
push
mov
xor
mov
mov
sub
out
push
cltd
mov
or
in
fisttpl
add
push
ret
movsb
int3
mov
call
mov
ds
cmp
sub
repnz
dec
std
add
inc
sbb
dec
mov
add
push
xchg
mov
aam
mov
add
nop
mov
pop
xor
sbb
or
cmp
mov
pop
mov
push
fsub
ja
push
jb
add
mov
lahf
call
sub
in
jp
cwtl
imul
hlt
mov
test
push
jb
xchg
add
jecxz
add
xor
mov
js
add
xchg
int3
pusha
sahf
jbe
daa
add
shll
lods
popa
xchg
and
mov
mov
adc
inc
or
cwtl
movl
out
cmp
pop
mov
mov
add
out
or
add
sbb
push
or
int3
outsb
and
pop
mov
lea
cwtl
aas
add
repz
sub
mov
xor
in
dec
shl
cwtl
test
pop
dec
dec
int
xorb
std
fldl
mov
sahf
xor
xchg
pop
add
adc
mov
sbb
imul
int
hlt
xor
add
push
sub
jg
ret
aaa
in
and
pop
out
mov
add
mov
jbe
insb
xchg
jo
add
sti
pushf
xchg
imul
mov
mov
pop
arpl
xor
inc
or
out
inc
in
int3
pop
adc
cmc
cltd
shlb
pop
inc
push
ret
in
or
sbb
adc
add
shll
cmp
fs
in
repz
add
aaa
mov
pop
cmovne
cmp
dec
and
rolb
pusha
repnz
sbb
add
gs
cmp
enter
jge
add
pop
jp
add
leave
xchg
daa
and
sbb
imul
dec
nop
mov
push
xor
lds
enter
pop
fiadds
movsb
dec
add
shl
mov
rorl
push
cmp
mov
in
cmp
mov
mov
mov
pushf
pop
mov
sbb
imul
add
xchg
add
or
jbe
lock
insl
roll
sub
jecxz
cmp
xor
lahf
xor
loopne
mov
inc
int3
addr16
rcll
push
jle
mov
jne
add
xor
scas
inc
sbb
xchg
das
sbb
push
xrelease
clc
mov
sub
mov
and
shlb
cltd
add
movsb
ret
add
mov
loopne
xor
xor
inc
cmpsb
je
or
fwait
repnz
xchg
mov
iret
lea
fcoml
fisubs
or
push
add
mov
jns
pop
add
cld
sbb
aad
test
lods
adc
in
andl
xchg
xchg
mov
decl
sub
and
mov
add
inc
imul
daa
add
testb
cltd
xchg
adc
cs
cmp
add
cmp
adc
clc
add
sbb
in
or
jno
rolb
bound
dec
jmp
call
dec
mov
push
pop
inc
test
cmp
jnp
cmp
cmp
mov
jb
add
lods
push
nop
mov
movsl
inc
add
out
adc
nop
add
subb
fwait
pop
add
rcr
fisubs
ljmp
pusha
enter
push
shrb
jmp
cld
movb
pop
mov
lret
sub
dec
mov
loop
clc
mov
add
les
add
push
lds
sub
bound
add
pushf
sub
dec
rcr
insb
mov
daa
js
add
stos
movsl
jb
pop
mov
fimuls
add
jmp
pusha
mov
jle
adc
mov
push
loopne
loopne
ds
pushf
mov
leave
orl
dec
add
mov
xor
jb
add
pop
cmp
push
sub
loopne
in
clc
or
mov
pop
jp
pop
cld
fidivs
mov
mov
xchg
mov
inc
add
pushf
iret
or
shlb
mov
add
jne
rcll
addb
in
or
add
adc
lods
ds
ficoms
push
cmc
stos
add
mov
inc
aad
and
xor
push
and
fiaddl
and
sub
lret
sbb
inc
loopne
jl
into
stc
push
fldl
je
mov
dec
fiaddl
adc
dec
out
or
leave
jno
pop
xchg
sub
inc
aam
in
cwtl
or
mov
jnp
fcmove
fwait
inc
and
repnz
jge
pop
bound
add
fisubs
add
testb
xor
xchg
mov
loop
roll
dec
mov
add
mov
into
mov
inc
jns
stos
incb
push
fadd
mov
add
lret
pop
sbb
loope
mov
lret
jne
push
inc
add
pop
mov
and
lret
add
dec
adc
mov
mov
enter
push
psubsw
lret
push
push
clc
adcb
subb
xor
or
insb
dec
pop
fs
mov
daa
ret
xchg
scas
out
in
mov
hlt
mov
push
movsb
and
scas
pusha
sbb
jecxz
pop
inc
stos
cs
jge
dec
pushf
adc
jne
sbb
subb
daa
add
pop
lret
and
mov
xchg
sbb
shll
popa
add
cli
cwtl
sub
and
scas
mov
out
mov
sbb
jnp
loopne
add
and
clc
cwtl
push
sub
and
mov
jno
lods
dec
nop
lahf
xchg
xor
and
or
or
lods
insl
xorl
lods
mov
cmp
inc
push
sub
js
sbb
cmp
int3
loopne
fstpl
fiaddl
call
cmp
dec
loopne
inc
in
jb
dec
scas
jno
and
adc
xor
mov
adc
nop
testl
add
inc
daa
jae
movsl
and
xchg
out
dec
sub
imul
adc
sub
lea
fldenv
and
adc
adc
sbb
mov
push
add
rorl
lock
and
daa
adc
push
pop
mov
ljmp
push
lock
jl
sbb
hlt
mov
aaa
add
dec
nop
mov
cmc
test
mov
popa
mov
mov
or
in
or
push
mov
mov
add
push
addb
ret
push
mov
inc
inc
dec
and
xor
inc
dec
rcl
jecxz
add
addr16
jmp
sbb
and
cli
mov
add
push
repnz
add
sub
adc
add
lods
and
or
adc
clc
xchg
adc
mov
xor
xchg
or
inc
cwtl
xor
in
cmp
mov
fdiv
inc
dec
leave
cmp
cmp
jbe
clc
in
or
push
fs
push
push
pop
sub
mov
roll
jo
and
shll
loopne
add
adc
adc
push
and
cmp
cltd
sub
or
mov
rorb
repnz
in
shrb
scas
ja
or
popf
adc
aam
je
lock
loope
adc
cld
cmp
jne
add
pop
sbb
pop
pop
cmp
int
pushw
js
dec
mov
and
lods
push
add
shlb
jp
pusha
xor
out
mov
adc
xchg
push
fadds
inc
add
mov
imul
shrl
mov
push
popa
add
fsubl
xor
adc
mov
add
xchg
adc
xchg
cmp
popf
or
dec
dec
push
inc
stc
add
dec
cmpsl
popa
lods
sub
lret
and
jle
xchg
push
or
xchg
dec
mov
dec
ja
in
jno
testl
mov
mov
xor
leave
js
lods
xchg
int3
add
xchg
repz
adc
outsl
and
inc
push
fcmovnbe
or
jle
out
xor
jo
add
pusha
insb
mov
pop
sub
sbbb
movsl
xchg
or
mov
sub
mov
pop
pop
mov
jge
mov
mov
sub
or
xor
mov
mov
sbb
inc
sbb
leave
cmp
add
popf
rclb
lahf
aam
cmp
pop
rcr
dec
ret
add
sbb
push
and
jge
push
pop
and
inc
fmull
inc
push
or
mov
jae
xor
sbb
dec
loopne
sub
cmp
dec
inc
adc
xchg
adc
fiadds
xchg
adc
out
add
xlat
adc
sub
cmc
lods
fidivrs
cmpsb
adc
inc
lock
add
dec
outsl
add
sbb
lods
mov
lock
push
adc
add
inc
sbb
add
cwtl
push
dec
sbb
mov
loop
sahf
and
das
xor
add
add
les
ljmp
and
sub
mov
dec
int
add
inc
rolb
mov
in
icebp
js
mov
xchg
movsb
and
or
push
dec
mov
jl
cmpl
push
fcomp
dec
pop
mov
and
push
mov
rclb
rcl
add
fsts
adc
fwait
int
hlt
add
pop
jno
xchg
fadds
and
mov
pushfw
bound
sbb
mov
clc
add
xor
xor
adc
inc
cmp
mov
mov
cld
add
xor
xchg
xchg
cli
cmp
pusha
and
mov
add
fdivrl
in
jge
rorb
addb
int
add
mov
inc
loopne
push
inc
test
cwtl
dec
ret
mov
es
lods
shlb
cmpl
inc
mov
mov
push
or
rorb
data16
jo
mov
xchg
push
mov
je
jbe
sub
cmp
xor
add
mov
add
mov
or
pusha
jp
sbb
nop
add
std
test
xchg
pop
addr16
fisubrs
test
testl
and
lds
enter
lods
mov
jp
shl
aaa
mov
mov
inc
js
or
pop
inc
jecxz
je
fdiv
int3
dec
mov
or
popl
adc
adc
stos
cs
lods
cmp
enter
int
and
sbb
mov
xchg
rolb
fstl
mov
mov
dec
in
lret
mov
mov
cs
mov
jns
mov
sub
push
je
nop
pusha
or
mov
fbld
cld
xchg
add
roll
add
outsl
orl
and
pop
inc
in
adc
call
mov
sbb
add
push
in
mov
push
leave
aad
xchg
lahf
pop
es
call
shlb
jb
cs
insb
or
xor
jno
and
dec
rolb
sbb
data16
popa
loopne
lret
mov
xor
leave
adc
sub
dec
pushf
xchg
and
mov
mov
dec
adc
js
dec
mov
aam
and
push
sub
inc
xor
mov
xchg
subl
testl
or
orb
pop
jne
mov
jno
sbb
add
je
dec
inc
pop
mov
es
add
jmp
scas
cld
add
and
push
xor
fadds
les
cltd
pop
or
jb
cmp
sub
add
es
addl
add
sti
and
jge
adcl
cmp
pop
adc
lcall
dec
push
loopne
mov
add
inc
pop
push
jno
xor
push
cmpb
int3
inc
call
xor
xor
pusha
aad
popf
je
ret
mov
loop
xor
fildl
jg
xchg
jl
fmull
jle
rorb
jnp
mov
dec
cwtl
cld
add
in
xchg
rcrb
sahf
add
out
sub
hlt
nop
push
cmpb
lcall
mov
rcll
xor
cli
clc
adc
adc
sub
mov
insb
pop
test
sbb
mov
mov
int3
add
and
popa
and
dec
es
loope
outsl
das
lock
jne
dec
scas
inc
addl
jno
out
mull
push
and
imul
add
sbb
mulb
pusha
hlt
xlat
int3
sub
mov
out
adc
rolb
addr16
jb
sub
cld
or
xchg
lock
mov
popa
xchg
add
or
push
cmpsl
add
lods
cmp
in
inc
addl
pop
loopne
and
test
stos
ss
enter
mov
sub
insb
les
xor
adc
arpl
push
sub
movlps
push
ljmp
add
pop
shlb
sbb
cmpsl
or
or
sbb
sar
aad
adc
fs
pop
inc
jo
dec
pop
lcall
mov
or
arpl
pop
pop
xlat
adc
push
pop
lods
adc
sarb
fldt
ds
subl
sarb
mov
cmp
pop
shrl
push
xchg
call
inc
lods
and
and
add
fs
cmp
adc
cmpsb
mov
sbb
faddl
les
add
sbb
pop
ret
jno
lods
xor
mov
jge
mov
jo
dec
mov
icebp
add
jns
push
pushf
in
inc
sub
lret
add
loop
cmpsb
test
addr16
dec
js
push
pop
adc
out
enter
mov
mov
add
mov
inc
add
into
dec
int3
dec
inc
xor
jle
ja
adc
xor
and
jno
arpl
adc
xchg
cmp
pop
and
stc
adc
sub
movsl
add
sub
or
push
adc
in
pusha
pop
add
mov
adc
push
xchg
lret
mov
lock
xchg
mov
xorb
inc
lock
out
cltd
clc
testl
push
test
cs
enter
les
add
test
push
es
es
cwtl
adc
inc
setne
je
push
sub
adc
fs
push
fs
xchg
repz
pop
and
sbbb
cltd
xor
push
mov
mov
adc
xor
int3
mov
pop
push
arpl
mov
inc
test
js
inc
or
call
aas
sbb
xor
fldt
jne
add
subb
or
or
hlt
test
jg
cs
ja
vpinsrw
mov
mov
bound
test
xchg
outsb
fcom
and
inc
push
popa
push
enter
into
addr16
push
sbb
test
orl
add
pop
mov
pop
sub
bsf
decb
hlt
sbb
ja
fmuls
cmp
stc
sbb
lds
jp
push
out
and
sub
or
jg
out
push
xor
pop
add
lret
adc
pop
and
jo
addb
adc
arpl
aaa
mov
sub
mov
cmp
call
and
aas
leave
sub
xchg
and
cmp
ret
rolb
pop
xchg
and
enter
jmp
dec
es
xlat
mov
jecxz
lds
fmuls
pmaddwd
call
fisttpll
mov
and
sub
jbe
sti
clc
pop
cmp
jb
hlt
xchg
sub
in
rcl
mov
repnz
adc
fidivs
pop
test
add
int3
cmpsl
add
add
xor
add
jecxz
and
popf
std
pop
add
sub
fists
inc
jbe
sub
ja
and
sbb
shrl
dec
mov
xor
push
add
add
aad
jno
pop
pusha
mov
add
cli
sbb
or
addr16
sbb
mov
add
cli
cmp
adc
push
repz
sub
outsb
in
and
sarb
sub
mov
in
test
cltd
das
pop
cmpsl
and
inc
xor
add
scas
inc
std
call
add
das
fs
sub
pop
test
lods
aad
jo
add
popa
add
loopne
pop
xadd
ret
push
jge
nop
add
mov
fs
pushf
dec
add
sbb
add
fwait
inc
outsl
lret
repz
pop
inc
mov
pop
mov
popf
mov
hlt
push
pop
add
jnp
xchg
and
xor
out
gs
fldl
hlt
xchg
adc
inc
and
push
mov
sbb
das
in
in
add
mov
adc
sbb
pushf
out
out
lahf
cli
jb
pop
sar
inc
xor
xor
sbb
test
repnz
fwait
mov
lahf
mov
xchg
lret
push
hlt
test
jb
cmpsb
fsub
sub
ljmp
push
add
outsb
sti
xchg
push
pop
in
add
adc
mov
data16
or
add
out
clc
stos
cwtl
and
add
xchg
pushf
cmp
pop
or
out
lods
xorl
add
jp
inc
aas
fldt
xor
xchg
xlat
mov
jecxz
push
jnp
jb
cltd
jbe
cmp
xor
and
jae
push
jl
cmp
mov
ret
pop
movsb
push
inc
pop
push
xor
xor
popa
call
aad
inc
push
add
loop
or
add
dec
loope
rorb
imul
xchg
lds
ljmp
in
roll
cli
mov
xchg
or
mov
cmp
pushf
or
adc
sub
outsl
mov
gs
dec
and
jno
mov
push
cmp
pop
addr16
mov
popa
clc
pop
and
and
mov
xor
into
mov
pop
mov
adcl
xchg
add
dec
sub
test
movsl
pop
cwtl
sub
mov
negb
rorb
in
insl
pop
mov
shlb
stos
mov
inc
pop
or
xorl
leave
or
in
mov
cmp
add
mov
push
dec
inc
mov
pop
or
sbb
adc
sti
add
hlt
mov
mov
mov
js
lcall
push
dec
and
roll
lret
add
xor
jbe
cmpsl
sub
mov
xchg
jnp
ret
xlat
loopne
xor
clc
add
icebp
cmp
sti
mov
or
jbe
push
lock
icebp
or
in
aas
cltd
pop
sbbl
inc
xacquire
insb
sbb
cltd
icebp
into
add
movsb
inc
jle
les
popf
and
loope
rcrb
xor
loopne
fidivs
sbb
add
add
fs
pop
jmp
dec
inc
sub
mov
pop
push
mov
fs
popf
jmp
or
jecxz
cs
add
sub
dec
cltd
cmp
add
push
ret
pop
adc
sub
jb
push
pop
mov
sbb
adc
cmp
aas
lea
gs
mov
and
jge
pusha
xchg
sbb
sarl
jb
cltd
addb
cmp
mov
sbb
dec
sub
adc
jno
ret
push
inc
sbb
dec
ret
push
stos
cmp
sub
jecxz
notl
or
fwait
add
push
pop
pop
add
push
aas
pop
in
cmp
and
add
call
cwtl
push
les
mov
out
pusha
leave
or
push
xchg
sub
cmc
test
or
scas
rorb
xchg
mov
nop
cld
jp
nop
xchg
push
sub
xchg
sub
cs
es
cmp
adc
popa
cmp
dec
xor
inc
fsubrs
pop
push
jmp
ds
add
cmp
push
cmp
cltd
sbb
stc
add
mov
push
and
dec
sti
xor
push
push
jle
popl
mov
add
clc
adc
sbb
add
das
mov
or
pop
mov
add
push
movsb
lds
push
adc
mov
xor
xlat
js
dec
rcrb
push
dec
mov
addps
mov
sbb
inc
lahf
andl
push
sbb
insb
pop
dec
orl
cmp
add
push
mov
ljmp
nop
inc
push
cmp
dec
jae
adc
dec
xlat
and
push
rclb
pop
or
xchg
sbb
imul
lods
lds
cwtl
mov
inc
push
xor
mov
jg
pop
mov
mov
add
nop
das
fsubr
mov
icebp
pop
popf
lock
adc
nop
inc
add
adc
fiaddl
and
fmuls
mov
jno
int3
push
add
lahf
jae
adc
lea
ss
stos
and
notl
jo
sbbb
push
sbb
pop
jge
filds
adc
decb
stos
pop
dec
pop
add
outsl
add
cmc
cmpl
dec
adc
jnp
nop
shlb
push
addl
add
jns
add
mov
in
inc
push
pop
lret
data16
dec
adc
int
xchg
push
icebp
mov
dec
jns
adc
xor
push
add
xchg
pusha
add
jl
and
inc
dec
pop
push
adc
adc
sahf
add
and
fisttps
divl
mov
xor
mov
incb
lods
lret
xlat
add
scas
popf
lock
pusha
into
cmp
xorl
push
pop
push
jnp
adc
mov
sbb
lds
adc
mov
add
icebp
jecxz
cmc
shrb
push
mov
sbb
es
cmp
pop
add
mov
subl
mov
std
pop
mov
xchg
sub
popf
xor
sti
imul
stos
sub
mov
clc
gs
add
cmp
mov
xor
movsb
add
mov
stc
pop
addb
sti
jge
mov
shlb
mov
and
je
pop
outsb
lds
or
js
add
xor
mov
or
push
sbb
jge
addl
ret
add
adc
or
mov
lock
sbb
and
rcrl
sbbl
loopne
inc
lahf
inc
mov
mov
out
rcll
mov
add
scas
sti
push
inc
and
add
or
adc
sbb
pop
inc
or
xor
ret
mov
sub
jp
andl
test
ret
pop
push
aaa
inc
ret
xor
xchg
jnp
jg
icebp
adc
add
pop
or
jnp
xchg
or
and
adcl
xor
cmp
sub
dec
sub
sbb
loop
ds
or
dec
enter
or
or
cmp
and
popa
imul
and
imulb
adc
faddl
js
mov
in
bound
and
cld
mov
cwtl
mov
adc
rolb
adc
rolb
fcomi
int
into
xor
push
sbb
test
dec
call
subb
sub
adc
dec
cmp
lods
adc
inc
or
inc
jno
adc
push
cltd
push
in
dec
lea
inc
push
out
or
test
and
xor
or
shrl
iret
insl
mov
xchg
inc
inc
adc
adc
adcl
mov
and
inc
sub
xor
aaa
test
xchg
sbb
inc
mov
jg
pop
adc
sbb
mov
push
inc
lods
sbb
adc
push
int
and
cmp
mov
mov
or
shlb
or
jns
mov
add
or
and
mov
dec
xor
dec
idivb
inc
push
or
inc
data16
insb
push
icebp
adc
cmc
fwait
mov
ret
ss
adcb
adc
arpl
jnp
sbb
out
loopne
mov
push
out
or
mov
cmp
sbb
mov
addl
test
or
cwtl
add
repz
imul
mov
jl
dec
aam
fwait
adc
xchg
subb
aas
mov
ds
sbb
iret
adc
shl
push
dec
pusha
push
jbe
les
mov
int3
xchg
dec
sub
cmp
es
mov
sbb
mov
xor
mov
movsb
aaa
pop
mov
add
or
sbb
mov
ss
push
add
dec
and
xor
movsb
popf
add
mov
mov
adc
push
add
xchg
xchg
sahf
leave
mov
sbb
pushf
rcll
cltd
sbb
adc
fwait
jle
or
test
sbb
add
test
add
mov
fs
and
lcall
mov
push
xor
add
lahf
sub
aaa
xor
in
inc
lock
and
sub
ret
xchg
sub
add
jnp
lret
mov
add
sub
aam
cmp
inc
xor
mov
shll
lcall
xchg
movsl
add
pop
test
push
sub
push
add
filds
inc
adc
xchg
stos
jle
lock
stc
aam
sub
inc
push
add
adcb
mov
adc
mov
push
sbb
mov
test
xor
jnp
inc
or
xor
lods
mov
xor
pop
and
fdiv
cli
fisttps
add
sbb
insb
incb
mov
jecxz
mov
adc
dec
sub
pushf
sub
stc
and
rorl
arpl
lock
stos
pusha
add
jl
popf
leave
test
xchg
clc
pop
ja
mov
add
push
andl
xor
xor
cltd
or
push
pop
cmpsb
pusha
pop
xchg
movsl
add
push
mov
add
orl
or
mov
je
subb
cmp
lods
xor
jmp
adc
push
cli
xchg
aaa
sub
xor
or
adc
js
int3
adc
sub
or
notb
mov
pushf
jl
sbb
push
les
aaa
add
insl
clc
push
stos
or
dec
scas
xchg
scas
and
mov
mov
mov
mov
mov
mov
mov
cmp
test
insb
jp
hlt
cs
mov
xchg
add
in
or
cmp
pop
add
test
aaa
sub
loopne
sub
js
add
sarb
xor
stos
xchg
sbb
mov
mov
inc
and
add
sbb
xchg
stos
adc
xlat
incb
das
jecxz
add
addb
pop
xchg
movsl
cmp
xchg
pop
addr16
push
sbb
add
mov
xchg
cs
xor
sbb
dec
adc
or
sub
stos
add
fsubrs
insb
cwtl
jge
clc
mov
sbb
push
lods
daa
and
or
pop
mov
sub
push
push
sub
inc
push
in
mov
pop
js
mov
jl
push
jp
inc
push
add
testl
popf
sbb
je
add
sahf
push
push
jle
loopne
xchg
lods
xchg
or
ja
out
jl
push
js
mov
popf
sbb
jnp
movsl
inc
add
mov
test
push
mov
pusha
cwtl
adc
sbb
jb
sbbl
mov
jle
push
pop
sub
sbbl
mov
sbb
dec
push
sbb
test
xchg
pop
test
add
loopne
xlat
jo
jge
sbb
dec
adc
cmp
add
jno
xchg
andb
cltd
clc
add
cmc
mov
push
jge
sub
add
test
xchg
push
jmp
mov
mov
rcll
call
les
scas
ror
incb
lods
jl
jmp
mov
rclb
push
mov
js
aas
or
js
repz
sbb
js
add
cmpl
add
inc
imul
mov
lock
and
pop
andb
lahf
mov
mov
hlt
popa
sarb
pusha
mov
add
add
adc
lock
mov
std
sahf
mov
mov
jno
lcall
add
lods
into
pop
mov
xchg
push
jno
movsl
mov
mulb
pusha
outsl
mov
push
mov
ret
pushf
mov
movsb
cwtl
xchg
mov
loope
loopne
hlt
add
mov
js
add
mov
mov
pop
lcall
dec
and
call
scas
out
push
movsb
mov
roll
lods
ret
lock
je
jge
scas
clc
pop
cltd
mov
repnz
les
mov
into
in
push
test
cwtl
add
stos
mov
je
nop
fsubrs
sub
sbb
cmpsl
mov
mov
push
out
pop
test
mov
dec
cmpsl
ret
hlt
lcall
sti
movsb
mov
push
fwait
sub
pop
cmp
subb
lret
mov
roll
mov
andb
test
add
add
jo
lock
mov
sbb
push
cmpsl
sbb
nop
enter
adc
mov
push
movsb
imull
cs
fs
mov
sbb
push
xchg
pop
popf
orb
scas
mov
loopne
xor
test
scas
jbe
lcall
enter
mov
dec
xchg
mov
clc
movsb
mov
push
dec
out
cmp
add
mov
stos
or
mov
mov
fsubs
fs
sahf
scas
add
stos
leave
add
mov
fs
mov
fcoml
fisubs
mov
cld
mov
sldt
pop
jb
lods
mov
mov
hlt
mov
mov
xlat
xchg
mov
add
xchg
fistpll
mov
scas
lods
xor
stos
mov
test
push
inc
xchg
int3
hlt
dec
test
xchg
cmp
adc
mov
or
cwtl
sub
cmp
adc
push
mov
add
lods
mov
push
mov
mov
xchg
adc
addb
leave
push
fmuls
in
jl
insb
xchg
fmuls
shl
js
rcr
cmp
repnz
addb
cltd
inc
shlb
xchg
movsb
xchg
jl
lock
test
jmp
pop
dec
lock
pop
je
test
pop
jge
call
mov
movsl
xor
add
stos
and
inc
mov
mov
ret
add
shl
movsl
mov
sub
shlb
lods
lods
out
mov
scas
mov
jecxz
fs
lods
sar
mov
mov
lret
bound
and
pop
push
cltd
jl
pop
sarw
cmp
add
inc
pop
mov
xchg
dec
andb
test
sbb
add
shl
cmpsl
pushf
push
fmull
aam
xor
ja
mov
addr16
inc
inc
lds
out
adcl
into
data16
shll
inc
and
mov
shlb
mov
cmp
mov
adc
lods
fcompl
sarb
sbb
roll
adc
xor
loope
mov
push
adc
cmpsb
andb
xchg
outsl
fistps
mov
nop
sbb
add
dec
inc
hlt
gs
push
test
popf
mov
cmp
xchg
or
and
sbbl
insb
push
mov
inc
mov
outsl
pop
nop/reserved
push
add
enter
add
push
or
pop
adc
loop
sub
fcom
out
add
pop
mov
clc
test
scas
mov
movl
inc
mov
adc
mov
sub
add
movsl
inc
cld
pushf
sbb
sub
xchg
push
push
imul
inc
ret
jecxz
test
dec
push
adc
mov
dec
inc
fiadds
sub
push
pop
cltd
xor
mov
adc
mov
inc
popa
das
insl
mov
scas
add
movsb
in
adc
ss
sub
inc
push
xchg
iret
int
pop
adc
in
and
jb
cmc
add
push
fisttpll
inc
movsb
ja
cmp
add
mov
or
add
call
fs
inc
test
pop
add
adc
mov
jge
adc
push
sbb
add
mov
push
fistpl
xchg
jnp
mov
mov
jl
xor
loop
lods
or
iret
lods
les
movsb
push
mov
mov
and
mov
inc
addb
clc
mov
dec
rcl
or
and
ficoml
jb
add
or
test
push
pop
pop
push
pop
pop
cmp
inc
out
mov
push
aam
mov
push
xor
sbb
or
xlat
in
push
adc
mov
pushf
add
sbb
inc
pop
add
lds
adc
int
add
add
xor
popa
adc
arpl
xchg
sbb
xchg
loope
stos
push
nop
iret
movsl
mov
add
bound
mov
mov
sbb
shrb
arpl
and
jle
dec
mov
lret
aaa
mov
cli
jmp
pop
leave
cmp
popf
sbb
dec
inc
ret
mov
mov
test
out
adc
roll
cmp
xor
faddp
push
cmpsb
xchg
jbe
sub
dec
int3
cmp
xchg
dec
inc
jae
out
and
enter
add
dec
lds
iret
cmp
or
sarb
adc
std
adc
pop
mov
dec
cmp
test
or
jae
les
ljmp
ja
movsl
outsb
adc
and
pop
imul
cld
ret
pushf
popf
stc
sub
fwait
lock
mov
sbb
mov
adc
and
aam
das
adc
and
dec
push
xorl
or
shlb
add
mov
sbb
mov
sbb
js
nop
sbb
push
gs
cmp
push
dec
add
fcomps
dec
add
popf
jnp
or
or
inc
lcall
xchg
cmp
or
fs
lods
addl
in
mov
xchg
mov
jmp
adc
add
loop
sbb
push
pusha
aas
adc
dec
mov
or
ljmp
adc
and
and
lods
test
jge
hlt
and
xchg
add
sbb
and
sub
pop
add
sbb
outsl
add
sub
mov
fmull
sahf
in
sbb
xchg
xor
jnp
adc
std
mov
jp
nop
test
mov
sbb
js
cmc
call
mov
rcl
cmpsb
test
push
aad
inc
orb
repz
lock
jecxz
jmp
dec
and
sahf
mov
pop
and
lret
xchg
add
push
rorl
pusha
out
xchg
mov
mov
movsb
ficoms
or
int3
push
mov
mov
xor
fst
das
inc
jmp
rolb
imul
xchg
cwtl
test
cmp
hlt
aaa
int
frstor
push
dec
in
mov
add
adc
push
adc
inc
loopne
hlt
sbb
add
jne
and
int3
into
pusha
mov
or
pop
pop
add
dec
inc
clc
add
push
jmp
in
pop
or
pop
push
mov
cmp
int3
rcll
xchg
add
sub
imul
rclb
mov
ret
xor
lret
movsb
add
mov
sti
jg
jns
push
xor
inc
push
js
cli
xor
or
cmp
and
lock
pop
je
inc
adc
and
mov
movsb
pop
add
or
xor
aas
popl
adc
cmp
push
ficomps
add
test
xchg
das
bound
lods
pop
sbb
dec
cmp
add
int3
cmpb
js
xchg
add
push
nop
xor
mov
xor
mov
iret
sahf
push
jns
lea
pop
pop
add
bound
mov
wbinvd
add
bound
pop
dec
dec
xor
sub
xchg
add
mov
sbb
mov
pusha
rorb
scas
sbb
pop
rclb
clc
add
pop
fisttps
mov
mov
xor
xor
add
add
out
jbe
fwait
dec
add
lahf
inc
cmpsl
insb
test
adc
mov
jl
adc
cwtl
int3
and
or
sahf
stos
cmp
in
scas
push
push
xchg
iret
mov
cmpsb
push
sub
push
add
jno
jl
sub
xchg
mov
mov
mov
push
movsb
inc
insl
or
stc
inc
movsb
push
push
sbbb
sub
insb
mov
inc
push
dec
popa
push
or
adc
movsb
lock
dec
add
cmp
sbb
repz
dec
pop
pop
push
dec
cld
cmpl
les
dec
push
mov
mov
add
data16
add
add
dec
mov
pusha
sbb
jns
into
test
lods
sub
data16
cmova
faddl
and
outsl
and
fwait
cmp
in
imul
xor
push
push
aam
dec
add
jns
and
nop
stos
rorl
pop
cltd
or
push
aad
pushf
movsb
les
cwtl
adcb
and
or
loop
sti
ds
mov
mov
repnz
pushf
xor
ja
mov
cmpb
shrb
adc
pop
popf
mov
jo
test
add
fisubl
push
mov
jecxz
xchg
fstl
cmovo
fcmovnu
cwtl
les
hlt
dec
pusha
sbb
adc
addr16
lret
mov
pop
sar
xchg
stos
xor
dec
sbb
pushf
scas
add
arpl
inc
je
das
inc
and
pop
xor
add
mov
cli
movsl
sub
xlat
je
add
mov
jne
inc
sbb
ret
mov
mov
inc
pop
or
mov
dec
push
outsb
les
add
dec
repnz
enter
sbb
pop
aaa
pusha
sbb
mov
push
inc
push
pop
dec
push
mov
fisubrs
or
dec
test
push
in
dec
adc
movsb
inc
and
cmpsl
push
sbb
add
dec
popf
and
movsb
push
or
mov
lock
pusha
add
add
mov
sub
xchg
mov
adc
or
mov
xor
xor
inc
mov
in
push
add
inc
push
scas
js
bound
jp
push
mov
in
add
ret
fwait
test
addr16
add
popa
dec
das
xchg
and
xchg
pusha
adcl
lods
aas
dec
or
cmp
cmp
push
loope
in
nop
lret
jns
mul
pop
add
sbb
inc
xchg
arpl
inc
leave
popa
xchg
pop
pop
cmp
add
out
dec
int3
test
lock
or
lahf
cmp
data16
sub
imul
cltd
shlb
push
adc
test
add
mov
jmp
xor
xchg
loope
add
outsl
sbb
dec
mov
in
mov
lret
add
xchg
sbb
sub
inc
gs
nop
adc
add
insb
mov
inc
mov
ljmp
xchg
loop
lret
nop
lock
ljmp
cmp
or
push
dec
test
push
aad
sub
js
sarb
pxor
push
sbb
pusha
ss
pop
pop
cmp
adc
or
mov
bound
sbb
mov
inc
xchg
dec
or
cmp
mov
test
into
push
mov
cwtl
adc
sub
jo
cmpsb
dec
add
adc
fildl
inc
roll
push
jae
dec
enter
add
pushf
shrb
xchg
dec
jo
dec
sub
add
test
mov
xchg
cwtl
pop
and
xor
addr16
jae
rorb
mov
inc
js
fs
andl
cltd
dec
mov
sbb
stos
outsb
mov
cmp
add
mov
sub
outsb
adc
out
jnp
xorb
out
lcall
cmp
jmp
push
cmpsl
adc
pop
xchg
repnz
mov
pop
inc
adc
add
adc
jg
mov
mov
xchg
scas
cltd
cltd
xchg
add
xor
inc
push
ds
sbb
push
xchg
fcompl
jl
dec
aas
orl
xchg
add
adc
push
inc
mov
pop
or
pop
xlat
iret
js
in
push
mov
lahf
mov
mov
xchg
negl
sub
adc
and
aam
sbb
imul
enter
xchg
negb
mov
dec
add
prefetch
or
fsubs
mov
into
adc
pop
dec
or
fs
mov
icebp
dec
jmp
adc
das
repz
out
call
cmpsb
inc
adc
mov
and
xor
stos
cmp
sub
jmp
int3
scas
sbb
test
inc
or
add
movsl
pop
push
add
repnz
adc
mov
jecxz
push
out
arpl
add
dec
sbb
inc
add
jb
xor
push
imul
fmull
or
cwtl
mov
loop
jae
pop
xor
sub
add
call
repnz
sbb
and
adc
jle
and
push
add
addl
jae
nop
filds
icebp
scas
ret
jnp
clc
or
add
nop
mov
dec
jns
or
pop
mov
sbb
add
and
mov
adc
call
inc
cmp
mov
mov
sub
or
and
mov
or
data16
mov
rcrl
cmp
decb
stos
dec
popf
push
outsb
or
xchg
pop
or
and
stos
xlat
insb
lea
mov
rcl
inc
cmpsl
sub
movsb
sbb
push
gs
call
jno
les
inc
sub
into
mov
add
push
call
sbb
movsb
movsb
add
sub
sub
out
mov
into
dec
roll
insb
popf
loopne
in
and
pop
comiss
or
and
adc
jmp
addl
movsb
dec
inc
lock
cmp
jle
dec
outsl
cmc
loope
adcl
pop
pushf
mov
add
test
std
xchg
movsb
lock
cmpsl
mov
mov
je,pt
outsb
hlt
xor
orb
test
and
ss
aam
clc
sbb
jae
xchg
cmp
js
dec
popf
mov
sub
out
rolb
lock
and
leave
repnz
clc
sbb
xor
xchg
jb
or
enter
adc
cmp
sbb
orl
imul
lods
in
fmuls
hlt
inc
inc
inc
dec
mov
mov
mov
pop
cmp
xrelease
ja
out
mov
shll
cmpsl
aad
add
jae
xor
clc
lds
aaa
push
mov
lea
cmpsl
clc
out
pop
shl
push
aam
ds
add
dec
jle
enter
mov
or
pushf
jae
cmovge
jns
rorl
xlat
xchg
shlb
inc
add
incb
cwtl
outsb
in
push
cmp
xlat
es
cmp
mov
sub
cmp
add
adc
cmovbe
aaa
and
mov
add
cmp
sbb
cwtl
add
cmpb
shlb
add
adc
xchg
out
xor
inc
mov
add
nop
or
std
xchg
loopne
movsb
xlat
mov
mov
mov
push
push
push
add
movsw
test
and
pop
jl
add
or
adc
icebp
jno
mov
add
pop
pop
fs
in
dec
mov
add
testl
aaa
and
xchg
sub
inc
and
mov
mov
or
cmp
movsb
push
push
xor
mov
je
std
push
and
push
mov
add
in
inc
xorb
push
dec
xor
rol
xor
and
fcomps
movsl
out
and
call
push
xor
call
sbb
and
mov
jae
fs
sub
orb
fimull
out
fnstsw
adc
mov
popf
loopne
push
ret
stos
sbb
and
cmp
cmp
sahf
add
shl
adc
push
dec
mov
andl
sbb
rcll
inc
pusha
and
rorb
sub
push
jb
inc
ja
ds
outsl
pop
or
je
xor
push
inc
pop
sti
enter
or
or
xlat
xor
xchg
pushf
jns
sbb
pop
movsb
movl
daa
xor
leave
cs
add
arpl
add
out
sbb
add
ficompl
repnz
loopne
push
dec
push
add
add
es
fadds
daa
dec
sbb
adc
popa
push
loope
insl
xchg
and
out
push
movsb
jns
adcb
in
inc
add
and
das
dec
push
inc
les
cmpsb
mov
mov
xchg
lret
cmc
test
ds
es
dec
inc
push
inc
andb
mov
leave
repz
xor
cmc
setle
rcrl
jae
mov
insl
negl
ret
and
inc
pop
mov
push
lock
jle
inc
aam
jmp
mov
jecxz
insb
add
pop
cmp
dec
je
rolb
mov
pop
pop
cmp
pop
jae
jo
test
movsl
jecxz
sbb
shr
cmpsl
mov
cmp
adc
mov
sub
or
insl
sub
jns
mov
dec
sbb
dec
xor
cmp
jae
inc
popf
data16
push
add
xor
add
cld
push
mov
sub
dec
adc
inc
xchg
in
add
sub
aaa
adc
loopne
add
sub
adc
sub
and
sub
cmp
dec
push
subl
adc
fisttpll
lahf
arpl
jnp
add
aam
pushf
inc
rorl
dec
inc
add
scas
sti
shll
dec
aas
sub
inc
jnp
sbb
push
add
movsl
cwtl
adc
and
mov
xchg
mov
sbb
pusha
int3
jne
addb
daa
clc
clc
xchg
jl
inc
sub
sarl
js
bound
push
adc
inc
ja
sbb
mov
paddusw
loop
imul
movsb
insl
push
enter
mov
dec
cmpsl
and
push
in
sbb
test
adc
pop
adc
dec
mov
add
mov
inc
xor
insb
jno
sbb
add
fstpt
mov
test
shr
jle
je
jnp
or
and
movsb
adc
ret
xor
sahf
aaa
ljmp
sar
mov
sub
inc
arpl
pop
or
imul
stos
dec
and
pop
outsl
stos
aad
cmpsl
in
add
imul
dec
int
or
adc
mov
shl
call
xor
hlt
mov
sub
and
sub
loopne
mov
pop
jns
and
mov
mov
sub
add
pop
cmpsb
mov
insl
dec
movl
mov
sub
mov
pop
out
mov
pushf
xchg
or
rorb
jno
pop
sub
sub
loop
mov
sub
inc
mov
and
sahf
and
xchg
pop
test
push
sbb
insb
and
add
or
std
xchg
xor
fwait
and
and
jns
jnp
je
dec
fadds
inc
sahf
add
xchg
add
jmp
fucomip
fs
and
je
inc
add
outsl
mov
pop
cmp
les
mov
inc
je
shlb
push
xchg
rorl
test
and
add
inc
das
add
test
sub
mull
adc
and
clc
add
aad
xor
dec
mov
inc
cwtl
push
and
jl
mov
add
jae
movsb
jg
pop
push
jns
sbb
out
xor
std
movsl
sub
insl
add
daa
mov
and
aaa
ja
nop
jnp
dec
mov
lods
mov
inc
daa
pop
insb
sarb
push
int3
jp
add
cmc
enter
fstpl
add
add
insb
add
cli
xor
hlt
sub
adc
xlat
mov
popf
xchg
cmp
sahf
add
push
movsb
test
insb
std
or
mov
dec
sbb
push
push
xchg
xor
out
das
adc
aaa
mov
or
inc
xchg
fs
inc
lock
ljmp
fiadds
jp
orl
cmp
or
jae
pusha
inc
sahf
adc
fmull
push
jl
mov
jmp
mov
shlb
xchg
xor
jns
sbb
add
cmp
minps
xchg
les
adc
popa
cmp
sarb
push
jmp
mov
out
outsl
jb
int
xor
cmpsl
and
pusha
push
ficomps
das
xchg
add
test
inc
mov
push
adc
mov
mov
aam
add
xchg
adc
and
movsl
sub
testb
adc
inc
and
sbb
mov
loopne
dec
inc
das
xor
jl
add
adc
in
pop
sub
xchg
mov
arpl
outsb
dec
xor
and
inc
fldenv
dec
addb
add
in
test
add
pop
mov
add
cmp
inc
popa
daa
je
sbb
mov
addr16
xchg
pop
test
out
int3
popa
inc
xor
cmp
xor
cmpsl
aam
les
push
add
sub
xchg
pop
rclb
add
out
add
sub
insb
mov
stc
add
in
xchg
sar
adc
jb
ret
loope
popf
ljmp
cld
mov
mov
jne
stos
and
jnp
cmp
mov
or
les
lock
ja
sub
div
jl
cs
cmp
and
add
punpcklwd
adc
adc
out
sub
lahf
inc
push
rcll
in
add
mov
in
into
cli
rcrl
je
adc
insb
in
adcb
and
mov
xlat
stc
xchg
loope
sbb
repz
fcoms
into
enter
sub
pop
or
jge
push
fwait
add
sarb
sqrtps
sub
shlb
roll
jno
or
pushf
sbb
testb
and
and
xor
lahf
fisubl
add
lock
add
repnz
out
inc
fcmovnbe
nop
add
aam
and
jecxz
daa
sub
sbb
lret
stc
mov
addb
pop
cmpsl
fcoms
inc
cmp
jb
test
leave
xor
add
andb
add
pop
les
adc
add
sbb
in
jge
xor
lahf
test
mov
repnz
xchg
and
cmc
or
jl
jge
pop
xor
sbb
cmpsl
ljmp
es
je
and
daa
adc
push
push
enter
ja
dec
dec
ror
jmp
inc
nop
in
pusha
jle
arpl
xor
dec
jns
subb
out
mov
xor
ljmp
ret
lahf
es
pushf
out
or
mov
or
hlt
inc
jns
filds
mov
adc
adc
cld
add
jle,pt
sbb
sbb
jns
popf
pop
xchg
sub
pop
rol
insl
jp
lds
iret
jge
add
and
outsl
std
push
cwtl
lret
cld
inc
aam
popa
shrb
adc
adc
xor
test
pop
sbb
out
pop
inc
cld
jno
cmpsl
push
sbb
dec
inc
dec
pusha
push
test
aam
dec
push
cld
daa
popa
add
xchg
arpl
pop
pop
dec
rcll
test
jnp
cmp
sahf
scas
sub
mov
push
in
in
adc
pop
fmull
add
es
jo
add
inc
push
mov
inc
daa
pop
xchg
cmp
add
lret
push
mov
add
movsb
mov
lods
sahf
in
hlt
ljmp
push
les
push
rcr
jae
sub
shl
lret
fs
lret
fildll
push
jnp
dec
cmc
mov
rclb
mov
inc
mov
inc
add
pop
sub
addl
ficoml
pop
pop
lods
mov
xchg
xor
fwait
mov
popa
pop
shrl
cli
mov
sbb
lahf
add
dec
es
cld
xor
movsl
mov
xor
movsl
jne
and
daa
mov
dec
dec
adc
or
test
nop
cmp
es
loopne
cmp
data16
xchg
mov
add
pop
inc
jns
add
or
cmp
add
xchg
mov
rcrl
dec
or
mov
test
adc
or
jo
inc
add
adc
cmp
pop
movsb
cwtl
push
jo
rol
daa
xchg
adc
add
popa
and
in
sbb
sbbb
into
popa
call
jb
xor
mov
sbb
mov
clc
add
sbbb
cmp
les
inc
clc
and
or
sub
adc
xor
inc
shl
pop
lods
xor
data16
jno
push
add
inc
xlat
cmp
iret
rclb
pusha
sti
and
inc
add
sbb
push
pop
mov
fiaddl
push
ffree
aam
sub
or
xchg
loopne
lcall
enter
mov
mov
and
lds
adc
pop
and
xchg
test
shll
add
mov
mov
cltd
fidivrl
sub
call
flds
pop
mov
insb
add
push
adc
pop
xchg
shlb
pop
and
push
and
jmp
arpl
cmp
test
or
xlat
sar
mov
loop
test
movsb
xor
mov
inc
test
cmpsl
mov
or
xor
add
add
subl
jns
mov
mov
jl
push
shlb
addb
arpl
pushf
popa
add
int3
test
jle
test
mov
mov
push
stos
push
inc
fadd
rorb
lock
insl
jmp
sbb
xchg
add
test
or
lock
add
lock
clc
or
pop
add
test
out
test
cwtl
lea
sbb
jo
xor
dec
lock
cmp
mov
xor
out
sub
mov
daa
fdivr
sbb
dec
and
scas
ljmp
std
cwtl
pop
pop
scas
icebp
insl
aas
incl
push
push
call
pop
ret
adc
pop
addb
add
lock
jmp
add
push
dec
faddl
or
call
mov
inc
pop
mov
es
jne
sbb
sahf
push
sbb
ret
and
inc
push
ret
test
lret
lea
ljmp
mov
inc
mov
popf
sbbl
jno
dec
dec
rol
insb
xor
ret
and
push
mov
inc
push
ret
popa
and
enter
pop
ret
xchg
mov
add
ret
mov
dec
lahf
jg
pop
xor
sub
andb
mov
mov
mov
mov
adc
in
es
cmp
addr16
adc
and
jae
inc
sub
iret
xchg
jl
push
xor
ss
adc
mov
mov
adc
lods
jg
jecxz
mov
sub
and
lds
sub
or
adc
cmp
fcomi
pop
cwtl
std
or
insl
shlb
add
jecxz
test
sbbb
gs
and
add
mov
daa
push
adc
and
xor
inc
xchg
mov
pop
mov
or
ror
aas
inc
sbb
ret
mov
inc
push
ret
mul
lahf
scas
xchg
add
popa
sub
js
or
cmp
popf
sub
popa
jl
mov
mov
inc
cltd
xor
or
push
fwait
into
mov
cmp
add
dec
add
sbb
push
rorl
sub
add
inc
xor
in
rcll
and
jno
jne
adc
and
push
ss
adc
insb
les
pop
mov
pop
add
and
rolb
cmp
push
mov
jle
ret
icebp
add
xor
in
pop
push
scas
loopne
push
ret
add
cs
jne
orl
popa
lds
inc
and
add
aam
and
add
jmp
push
and
sbb
sbb
cwtl
jns
arpl
outsb
sbb
sub
clc
dec
add
movsl
int
add
add
mov
add
cld
sarb
dec
cmp
mov
push
xorl
ret
pop
pop
mov
add
rolb
andb
xchg
or
or
and
subps
les
cmp
sbb
cmpl
mov
xlat
nop
test
sbb
sbb
test
jle
xor
sbb
jne
and
push
mov
fwait
mov
mov
out
xor
bound
xchg
std
push
loopne
insl
sub
cmp
mov
fs
pop
mov
adc
jns
dec
or
incb
push
into
adc
jl
cmp
imul
movsl
sub
ljmp
xor
mov
cwtl
cmp
das
xchg
rclb
repz
add
pop
or
jae
inc
jbe
sub
jmp
mov
add
pop
push
ret
leave
pop
gs
jns
hlt
add
gs
add
in
adc
es
cwtl
push
xchg
jmp
add
outsl
sbb
mov
jmp
add
orl
add
cli
in
and
dec
bound
jno
pop
pop
inc
mov
inc
ror
sbb
lcall
stos
or
ja
push
lahf
add
and
or
enter
xchg
mov
sysret
xchg
adc
decl
test
and
rcrb
cwtl
jnp
adc
and
pop
adc
cmp
xchg
frstor
fimuls
or
jmp
lods
and
dec
pop
add
push
fcmovb
or
pusha
inc
mov
sbb
jle
std
sub
dec
sbb
cs
loope
cmpb
xchg
mov
test
call
outsb
cmp
add
cltd
add
in
icebp
loop
add
jl
push
adc
xor
add
popa
jmp
adc
test
or
rcrb
push
popa
add
pop
mov
xchg
sahf
xlat
xchg
popf
sbbb
adc
ljmp
xor
out
rcrl
gs
push
push
dec
inc
or
cmpsb
subb
fldl
aas
or
pop
pop
cwtl
mov
sbb
andb
push
mov
jae
rcrl
sub
fwait
add
push
inc
cmp
pop
cmpl
push
data16
gs
ror
xchg
out
sub
pusha
jo
lea
stc
and
pop
mov
pop
and
adc
jle
sbbb
add
in
xchg
aam
js
sub
inc
add
cmpsl
js
sbb
ljmp
jbe
lcall
xor
mov
and
cmp
jmp
mov
test
add
xor
sbb
mov
push
push
mov
dec
add
test
cmp
mov
cli
out
filds
sbb
lods
sbb
cmp
add
lock
dec
push
ror
and
push
push
jne
rolb
xchg
sub
sbb
movsb
out
andb
adc
mov
aam
push
push
or
iret
sbb
cmpps
sub
add
sub
rclb
lret
dec
pop
and
inc
push
xchg
and
int3
addr16
or
test
ss
insl
push
mov
xchg
shlb
push
enter
mov
inc
push
movaps
mov
push
loope
push
mov
dec
xchg
es
push
cmp
pusha
repnz
test
fidivrl
sahf
rcrb
pushl
and
mov
mov
mov
hlt
or
or
adc
mov
push
push
pop
sbb
add
shl
xor
sbb
sbb
jg
sti
and
add
in
lock
sbb
mov
push
aad
cmpsb
or
popf
or
or
aaa
jne
push
inc
adc
cmp
pop
cmp
pop
xor
in
sub
xchg
inc
mov
inc
stc
jo
or
fs
adc
cmp
mov
cmp
call
and
adc
inc
and
mov
dec
xor
enter
loopne
jb
xor
cs
test
call
mov
loop
or
mov
jp
insl
aas
pusha
jbe
movl
lret
stos
push
ret
mov
xchg
test
sub
and
mov
add
dec
rdpmc
mov
ds
sbb
pop
dec
push
push
mov
test
push
mov
inc
jno
call
and
loope
test
and
mov
add
push
dec
add
or
pop
xchg
mov
or
cmp
pop
dec
push
jne
xchg
pop
lret
shl
add
mov
cmp
pusha
shl
imul
cmp
adc
popa
adc
xor
add
fs
jge
dec
cmp
ficoml
mov
test
and
mov
loope
and
shrb
or
lahf
and
nop
add
adc
leave
sbb
lcall
insb
mov
inc
pop
sti
xor
push
pop
adc
mov
iret
mov
sbbl
cli
daa
das
jno
adc
push
xchg
push
xchg
lods
dec
gs
stc
les
movq
repnz
or
mov
mov
mov
cmp
cmp
insb
sbb
mov
lock
xchg
fwait
lcall
sbb
jo
mov
pushf
pop
xchg
test
add
push
inc
sbb
sarl
and
mov
daa
xchg
or
add
mov
dec
xor
fstps
aas
popa
clc
pusha
xlat
int3
xor
push
xchg
les
pop
scas
add
push
mov
xchg
cmc
push
add
loope
into
sub
cmpb
pop
or
push
cli
icebp
or
jl
test
imul
dec
sub
inc
mov
cmpsb
add
insb
dec
sub
pusha
pop
insl
and
pushf
daa
sub
fcmovbe
sub
cld
arpl
das
jo
hlt
add
xchg
dec
push
mov
add
push
mov
faddl
mov
icebp
mov
and
adc
adc
inc
or
xchg
sub
dec
push
das
dec
and
je
ror
or
adc
add
xor
in
std
gs
and
fistpl
dec
adc
pop
cli
and
fldcw
inc
xchg
inc
mov
je
xor
and
add
imul
mov
xor
out
cmp
mov
pop
jmp
mov
add
or
xor
inc
cltd
stos
fmul
pop
clc
sub
lea
cmp
jo
mov
add
es
sbb
repnz
add
mov
inc
jo
stc
xor
je
cld
adc
test
aas
xor
xor
mov
popa
add
addb
mov
jge
in
je
addb
gs
imul
outsb
retw
popa
mov
and
jae
sub
arpl
sbb
clc
ljmp
mov
fs
rep
jmp
iret
mov
mov
imul
sbb
addr16
push
push
jns
jne
or
xor
jo
jae
outsb
inc
push
push
dec
sub
imul
rcll
push
insb
imul
inc
ss
cmpsb
std
cmp
push
inc
call
dec
pcmpgtb
ret
push
jb
std
adc
jb
push
cmovb
ficoms
push
push
dec
dec
punpckldq
je
mov
js
movsl
add
or
out
jno
sub
cmp
push
push
lock
xchg
mov
and
push
pop
sbb
pop
dec
pop
lahf
push
adc
mov
xor
mov
mov
jno
enter
sbb
mov
mov
js
enter
sbb
scas
jno
or
add
mov
insl
and
test
pop
and
xor
sub
clc
cli
movsl
nop
adc
push
xor
sub
aam
pusha
mov
pop
sbb
or
aaa
push
mov
xchg
mov
push
cmpsb
push
inc
push
and
push
inc
pop
and
or
or
or
enter
xor
xchg
and
mov
cmp
call
push
orb
sbb
push
and
dec
sbb
push
test
in
jge
shll
loope
or
int
stc
fwait
add
or
jno
add
xchg
mov
jne
test
mov
add
popa
clc
dec
mov
movzwl
mov
xrelease
imul
bound
add
add
mov
jp
mov
call
pusha
mov
jmp
sub
arpl
in
add
cmp
add
jl
mov
add
sbb
lahf
add
sar
jge
push
addb
loop
outsb
xor
popa
call
pop
push
pop
mov
arpl
test
rcrl
test
ljmp
movsb
data16
sbb
mov
cmp
test
push
add
jo
movsb
sub
shr
adc
dec
pop
jmp
mov
or
js
and
pop
test
lods
jge
pop
pop
pop
and
imul
loopne
jle
add
mov
pop
jno
imul
inc
pop
mov
fbstp
inc
add
and
push
cltd
iret
cmc
xchg
push
cs
jmp
mov
dec
add
sahf
inc
cmc
push
add
fcomp
pop
pop
enter
jmp
xor
shrb
orl
mov
sbb
mov
add
mov
jno
mov
enter
insl
lds
call
inc
clc
mov
mov
mov
add
inc
jge
mov
orb
add
loopne
fstpl
loop
sti
fs
fistpll
xchg
mov
pusha
cmovp
je
inc
inc
sbb
aas
add
ljmp
and
add
sahf
jecxz
jns
jg
add
fwait
sub
out
insl
test
push
sub
shrb
pop
lret
sub
or
pop
mov
test
mov
mov
rol
and
add
ds
and
add
pushf
mov
aam
sub
mov
mov
jg
push
mov
inc
pop
lret
xor
lea
lock
mov
scas
mov
mov
xor
dec
mov
cmp
insb
add
cwtl
das
adc
inc
and
enter
mov
xchg
mov
inc
sar
das
jp
pusha
or
cmp
ficoml
enter
das
fwait
push
popf
xchg
xchg
pop
jns
movb
adc
push
add
stos
mov
out
push
das
enter
cmp
pop
testb
outsb
push
clc
out
sbb
in
push
pop
aam
fsts
jo
xor
xchg
fwait
fs
adc
add
int
imul
hlt
ss
aaa
and
xchg
dec
cmpsb
pop
lcall
xor
je
ret
sti
shll
test
jo
dec
cmp
dec
mov
das
mov
fs
out
aaa
andb
pop
sbb
shll
cmpsl
and
fs
add
add
mov
and
popa
sub
lret
and
add
test
sub
push
jns
add
repnz
bound
add
popf
jp
andl
push
mov
cmpb
pusha
stc
call
add
ljmp
and
repz
jp
add
adc
xor
cmpsb
sub
dec
dec
jo
xor
xor
sbb
lea
aad
pop
nop
sub
dec
push
jb
fisttps
rdpmc
lds
or
mov
jae
jge
cmp
inc
or
push
adc
xor
sub
add
pop
out
xor
mov
dec
sub
std
test
inc
aad
adcl
aaa
mov
and
sub
xor
inc
sbb
mov
unpckhps
inc
pop
mov
adc
clc
lahf
add
add
arpl
out
in
cmp
adc
fs
add
dec
mov
add
stc
roll
lods
sahf
push
addb
dec
iret
jmp
mov
inc
add
mov
jge
pusha
je
adc
enter
loopne
arpl
xabort
subb
sbb
mov
add
add
or
movl
xchg
dec
add
adc
jno
fists
popf
clc
in
add
cmp
daa
mov
jmp
add
inc
sbb
dec
xchg
je
fadds
mov
cs
inc
nop
push
push
adc
add
adc
fidivl
jle
adc
aam
std
jmp
adc
inc
pushf
lret
sbb
pop
xor
test
rcrl
mov
cmp
mov
or
xchg
leave
add
lods
pop
ret
xlat
loope
inc
mov
lcall
push
rclb
inc
into
sub
pop
enter
sbb
scas
mov
mov
mov
xor
jmp
sub
aam
xchg
inc
or
pusha
xorb
mov
mov
stos
add
cmp
or
fucomp
cmpsb
push
rclb
and
push
mov
leave
mov
mov
add
xor
cmp
lds
test
or
clc
xor
dec
add
in
pusha
mov
add
xlat
push
jns
adc
inc
add
fsubrs
sub
mov
in
xchg
iret
jns
cld
push
rcrl
lods
push
and
scas
push
mov
popa
add
notb
pop
xchg
sbb
mov
cmp
sub
xchg
cwtl
and
xor
sbb
push
addb
jmp
sub
out
and
xor
roll
jl
sbb
mov
cwtl
sub
pop
push
or
nop
js
push
mov
out
orl
add
xchg
insb
cmpb
jno
int
add
or
dec
add
repz
jno
js
in
pop
nop
cmp
inc
in
test
pop
xchg
in
inc
inc
fs
cwtl
mov
lods
or
outsl
addl
pop
pushf
or
add
add
test
jno
add
test
sub
test
mov
stc
push
adc
jmp
sbb
xchg
jmp
mov
xor
jbe
lods
dec
cmpsb
push
ret
lock
push
addr16
and
and
adc
mov
and
or
mov
dec
dec
pop
add
pop
inc
rcr
lods
add
add
scas
cmp
jmp
add
cmp
int
pusha
adc
loop
add
movsl
popa
adc
filds
lods
xor
add
out
enter
jo
and
xchg
aad
sbb
ja
lock
aaa
loop
xchg
sbb
stos
inc
and
pop
xchg
out
push
jmp
out
mov
pop
add
lds
fldl
jl
rcl
jnp
mov
inc
fs
cmovle
inc
xor
add
adc
ficoms
iret
clc
xchg
loop
add
ret
xor
cmp
cmp
fistl
popf
out
mov
push
call
cmp
add
scas
jne
popa
add
sbb
sahf
es
xor
lock
xor
and
out
vmread
pop
test
xor
add
mov
in
sbb
cmovne
add
xlat
lock
cmp
icebp
or
jle
sbb
nop
pusha
or
jae
push
orb
pop
inc
mov
push
cmp
and
fdivr
jnp
add
sub
outsl
add
inc
push
mov
jno
mov
pop
rcl
seta
mov
and
push
pusha
stos
mov
les
xlat
andb
arpl
add
or
hlt
imul
lret
js
pop
fstpt
adcl
sbb
aaa
jge
mov
push
lods
jl
sub
and
inc
ror
fld
sub
rolb
and
cli
xchg
jg
insl
add
inc
adc
cwtl
adc
push
sub
nop
mov
xor
bound
out
iret
insl
inc
in
mov
sti
add
addb
add
cmp
push
les
jne
daa
mov
pop
xchg
aaa
mov
loopne
dec
adc
int
jb
icebp
dec
pop
pop
xor
insb
add
inc
push
jge
icebp
fwait
or
shll
imul
add
aam
imul
sub
fidivrs
shrl
rcrb
xor
movsl
mov
add
lahf
inc
pop
add
add
dec
clc
push
lea
adc
add
and
xor
fcoml
hlt
addl
sub
insl
or
mov
mov
pop
jmp
mov
lods
mov
dec
xchg
add
add
fsubs
jl
inc
sub
into
mov
and
adc
adc
int
pop
pop
sbb
cli
out
cmp
mov
test
int3
sbb
dec
xor
inc
push
or
lock
pop
pop
lea
cmc
lahf
jno
mov
enter
cwtl
jl
filds
data16
ss
and
insb
das
inc
cltd
or
add
mov
push
test
mov
mov
shrb
lods
test
jns
mov
outsl
add
daa
fcmovu
cmp
inc
and
jg
pop
or
rclb
adc
push
cli
mov
sti
mov
popa
xor
imul
jecxz
movsl
out
dec
fimuls
movd
mov
mov
int
arpl
sti
addb
add
or
mov
imul
pop
mov
in
rep
mov
xlat
lret
test
add
jo
xor
dec
pop
or
scas
addl
jo
jbe
pop
shlb
bswap
pop
mov
pop
je
popf
lds
add
aad
or
sarb
sti
pop
mov
dec
xor
mov
xor
in
movsl
sbb
mov
idivl
add
shll
cmp
jp
mov
or
out
xchg
ficomps
pop
sbb
mov
push
movsl
add
jl
add
aam
cmp
addb
inc
cs
add
mov
add
rdpmc
clc
out
sbb
call
test
sub
pop
pop
mov
ret
or
mov
sbb
int3
and
fwait
inc
adc
inc
add
shr
lea
and
lock
leave
jl
mov
mov
loopne
fisttpll
fmulp
andb
add
mov
jo
lret
ss
out
push
mov
insb
xchg
inc
lock
dec
stos
or
in
or
xor
xchg
sub
fs
jle
int
cmp
in
cmpb
xor
in
lods
and
fs
adc
ds
xchg
xchg
incb
outsl
mov
jo
ljmp
sub
mov
add
in
pop
add
cmp
scas
outsl
rolb
ror
fs
push
add
adc
cmp
add
sub
sbb
push
iret
push
popa
mov
add
add
push
movsl
js
out
sbb
and
xchg
xor
inc
jg
push
mov
xorb
popa
cmp
jmp
add
addr16
add
push
push
jp
add
pop
mov
add
pushf
and
testl
popf
dec
mov
ffreep
lahf
lret
pop
fcomp
dec
outsl
adc
in
add
add
sbb
xchg
movsl
lret
add
shlb
jbe
mov
outsl
xchg
imul
mov
inc
add
mov
jmp
xchg
dec
dec
lldt
pop
js
cmp
lcall
jne
push
adcl
push
dec
mov
shrl
xchg
mov
xlat
sub
add
adc
xor
in
out
mov
add
cmc
xlat
cmp
nop
shl
inc
push
cmp
andb
int3
mov
ds
add
icebp
add
test
scas
loop
clc
cmpb
jne
xor
mov
rolb
pusha
ss
ret
add
aam
incb
sub
xor
sbb
and
add
cmp
add
inc
xor
push
movb
faddl
mov
mov
add
faddl
bound
push
push
jp
sub
lock
cmp
shlb
xor
xchg
xor
call
adc
loopne
enter
push
repz
cs
sub
loop
lock
lock
pop
clc
fdivrs
int
fadds
rol
pop
or
sbbb
adc
nop
ret
jnp
sub
popf
out
loopne
cmp
pop
out
outsb
or
rolb
imul
add
scas
enter
dec
popf
xchg
cmpsl
data16
and
loop
dec
jmp
sbb
add
es
js
pop
mov
xor
jl
pusha
add
ss
xchg
ret
in
inc
adc
nop
jmp
cmc
mov
dec
push
mov
mov
insl
lahf
xor
les
fcomp
jp
and
push
pop
hlt
cmpsl
xlat
rorb
push
ret
sbb
or
jg
out
inc
xchg
fcompl
sbb
sbb
add
cmp
mov
cmp
daa
stc
in
cld
addb
adc
cmp
std
jle,pn
push
add
cs
jmp
cld
mov
xchg
and
arpl
mov
bound
dec
mov
cmc
pushf
add
pop
push
sub
push
and
fistpll
test
ror
push
mov
cmp
adc
push
xor
and
ror
sub
jmp
adcl
jge
mov
xchg
ja
cmp
push
pusha
insb
das
push
ds
jle
testl
add
xor
inc
jl
pop
js
cmp
push
and
repnz
push
push
testb
inc
bound
int
cmp
clc
fucomi
xor
fsubr
add
mov
inc
pusha
mov
push
sahf
xchg
push
dec
mov
testl
pop
mov
pop
sbb
sarb
xor
sub
jl
test
sub
xchg
mov
add
sbb
sarl
push
jne
les
cmpsb
movsb
hlt
ret
clc
adc
sub
inc
mov
mov
push
sbb
pop
pop
or
jp
shlb
jge
js
push
test
mov
push
or
xchg
sub
dec
or
jb
add
cmc
cmp
rclb
imul
sub
jmp
push
mov
lock
lcall
push
stc
loope
mov
cmp
xchg
mov
cmp
mov
inc
inc
mov
ficomps
adc
adc
shlb
or
stc
sbb
imul
mov
adc
addl
xchg
ret
push
cmp
sub
loopne
xchg
cmpsb
sbb
pop
adc
lret
or
cmpsl
xchg
lea
adcl
mov
rcrb
inc
mov
test
or
push
adc
addr16
pop
shr
xor
mov
inc
mov
in
shl
add
mov
cmpsb
leave
daa
push
push
or
cmc
adc
ja
push
pop
xchg
out
xchg
sbb
pusha
inc
xchg
call
xor
dec
stos
lahf
dec
or
mov
cmp
aam
add
or
cmpsb
and
cmpsl
pop
xchg
imul
pop
cmp
mov
mov
lahf
lods
inc
stc
sbb
out
push
or
lods
jl
push
push
dec
sarl
cmc
cwtl
add
pop
enter
dec
data16
inc
inc
movsb
cmc
repnz
mov
xor
test
add
pop
adc
fs
xor
js
mov
xchg
add
cmp
mov
int3
sbb
mov
and
add
xor
dec
mov
add
ror
stos
rcll
pop
nop
imul
mov
jl
add
ljmp
and
jl,pt
add
sbb
lock
sbb
add
out
pusha
mov
ja
push
mov
outsb
pop
js
add
xor
inc
je
leave
add
pusha
xor
test
inc
xor
cmp
mov
shrb
lcall
add
shll
ss
fcompl
inc
add
icebp
mov
mov
shlb
jl
add
inc
push
jp
mov
insl
lock
xchg
push
cmp
inc
mov
add
mov
jp
int3
and
iret
and
mov
aas
or
pop
mov
lret
popa
mov
ret
jno
loopne
lock
enter
or
lock
add
pop
pop
aam
and
adcb
insb
add
sub
fcompl
add
xor
shll
cld
cmc
xchg
cmp
lahf
rcrb
cwtl
jo
ss
std
and
rol
push
mov
add
push
pop
mov
in
fsubs
add
xchg
popf
arpl
and
jle
cmp
pop
test
jmp
aaa
xchg
ljmp
sbbl
cmp
xor
add
mov
bound
fisttpl
xchg
jp
ss
in
cld
addr16
andl
push
xchg
pop
add
add
push
pushf
lods
xor
xor
sbb
hlt
jmp
dec
test
and
add
daa
dec
sbb
jns
inc
xor
push
fs
outsb
fmuls
pop
js
jmp
xor
sbb
loope
roll
movsb
cmp
mov
stc
cmp
xchg
dec
add
sub
out
add
fsqrt
or
xchg
jnp
add
rolb
pop
add
jg
xlat
push
cmp
sbb
cmpb
cmpsb
in
dec
out
ror
stos
pop
rolb
adc
cli
inc
or
lahf
mov
jnp
orb
and
push
gs
add
and
aam
icebp
cmp
add
or
sub
add
add
jge
xor
fmull
inc
cli
addr16
insl
cmc
shlb
inc
cmp
xor
mov
adc
inc
sbb
add
out
xor
push
cwtl
out
lcall
call
mov
testb
shrl
xchg
fadd
in
jp
das
and
mov
mov
xor
jp
cs
pop
hlt
or
xchg
sbb
adcl
decb
add
mov
sub
push
sbb
gs
pop
ror
mov
shll
dec
xor
inc
pxor
inc
jo
in
nop
mov
xchg
add
mov
add
aam
data16
add
push
shrb
shlb
inc
sub
push
jl
push
xchg
mov
sub
mov
shrb
in
jo
add
insl
jmp
jle
enter
push
add
add
and
scas
stc
outsb
mov
xor
pop
mov
sub
pushf
sub
or
je
rclb
pop
inc
xor
add
add
fstl
jnp
sbb
adc
ja
adc
stc
roll
fs
lcall
dec
sbbb
add
jnp
cmp
jp
pop
mov
push
sbb
jo
or
jo
pop
xor
xchg
lea
add
test
mov
xchg
incb
xor
outsl
adc
add
das
add
and
scas
shrb
pop
add
mov
lret
ret
add
das
jl
aaa
stc
pop
mov
add
or
xorb
cmpsb
dec
clc
fs
add
js
sarb
xchg
mov
bound
mov
push
push
test
sub
mov
mov
xchg
sub
cs
lods
aad
clc
dec
xchg
add
push
or
sub
mov
arpl
enter
xor
movsl
push
jmp
sub
add
add
pop
arpl
inc
jecxz
add
lret
int
pop
mov
sub
cmpsb
mov
and
sbb
lret
mov
es
add
dec
in
cmp
negl
shll
stos
aad
adc
or
fld
jecxz
js
rcll
incb
cmp
add
xor
cld
int3
add
pop
dec
loop
xor
jmp
add
cltd
mov
push
cld
dec
jno
insl
xchg
dec
loope
adc
sti
add
iret
cmc
ds
inc
add
sub
popl
jne
jns
and
adc
add
fisubs
and
or
add
push
sub
movsb
mov
adc
lcall
mov
mov
imul
outsl
push
shlb
cmp
movsb
add
mov
adc
arpl
xchg
jb
mov
add
pop
setle
dec
add
xchg
lock
mov
cmp
clc
push
lods
and
lea
hlt
add
fnclex
incl
add
adc
pop
movsl
aas
dec
push
dec
mov
pop
inc
aam
push
xor
push
and
in
adc
fbstp
jnp
add
lds
rcrl
xor
or
add
mov
cmp
jo
mov
add
dec
jns
sbb
aas
jp
add
in
movsb
add
cwtl
add
inc
dec
into
ljmp
pop
pop
repz
and
jmp
and
fists
in
inc
mov
in
mov
add
mov
adc
les
push
es
xchg
add
iret
sbb
or
test
js
mov
pop
add
jl
testl
fidivs
sarb
wrpkru
inc
in
xor
in
flds
pop
je
mov
add
push
gs
jmp
icebp
add
imul
mov
push
in
insl
outsb
cmp
add
push
ret
or
inc
movsb
lock
adc
fstl
out
adc
test
scas
push
mov
xchg
in
cmpsl
testl
mov
add
or
add
sti
add
stos
xor
pop
es
mov
lret
mov
cmp
pusha
popa
ret
loop
loopne
sbb
inc
mov
pop
push
cltd
lcall
pusha
mov
sbb
mov
mov
ja
jne
adc
outsl
clc
mov
leave
testl
sub
sbb
arpl
fimull
dec
add
loopne
and
xchg
xchg
das
push
loopne
call
pop
fstps
add
aaa
xchg
sbb
mov
call
xor
and
cltd
or
cmp
popa
sub
data16
xchg
pcmpeqd
jno
nop
mov
test
in
adc
fsubrl
push
cmp
pusha
push
inc
jl
pop
jp
lahf
cmp
adc
sahf
xor
push
into
cltd
rolb
lods
pop
cmp
addb
xor
ljmp
cmp
adc
mov
orb
sahf
adc
xlat
add
mov
jae
push
out
loopne
pop
mov
sub
bound
andl
sub
mov
push
push
add
fisubl
mov
push
or
xchg
inc
es
inc
cmp
fsubp
faddl
cwtl
ss
loopne
or
leave
pop
mov
out
nop
cld
add
sahf
push
pop
add
push
test
add
pop
and
stos
outsb
add
aaa
rcrl
jb
xor
adc
xor
data16
pop
xor
cwtl
cwtl
ljmp
sbb
jmp
sbb
mov
xchg
push
inc
jecxz
mov
xchg
lods
lcall
mov
pop
xchg
ds
mov
pusha
adcb
pop
xor
call
xchg
jae
inc
lea
adc
add
adcb
xor
add
loopne
push
jp
cwtl
hlt
cmp
pop
nop
clc
pushf
in
mov
ljmp
xlat
jb
add
adc
add
and
xor
in
cltd
mov
mov
add
out
sbb
xchg
je
arpl
mov
fs
test
mov
push
xchg
sti
xor
push
test
mov
inc
add
div
daa
push
repz
jl
outsl
lea
pop
je
add
mov
mov
add
mov
pushf
lds
jle
jbe
outsl
lcall
xchg
shlb
jae
shll
push
lahf
pop
mov
jb
out
or
mov
scas
jae
mov
jne
push
sti
cmp
cmc
push
adc
mov
mov
pop
pop
jp
stos
xchg
fiaddl
scas
inc
adc
add
mov
cmp
cmp
aad
dec
inc
daa
pop
dec
lret
shrl
push
xchg
shlb
sub
adc
and
and
pop
or
test
repnz
or
and
fsubl
neg
and
inc
adc
test
dec
xor
loopne
iret
and
dec
cmp
mov
lcall
adc
inc
adc
icebp
inc
xchg
jns
sbb
mov
jg
addr16
add
mov
add
adc
and
sub
andb
mov
lahf
push
nop
inc
test
jne
push
inc
inc
adc
and
jo
pop
and
push
and
clc
mov
add
add
sbb
add
clc
push
mov
cli
add
ret
pop
xor
add
loop
scas
and
cmp
movsb
iret
test
or
ds
movl
addr16
add
imul
hlt
in
add
jmp
enter
repnz
das
jecxz
add
or
inc
mov
cmp
clc
mov
sbb
add
sbb
out
loopne
xchg
cltd
cmp
xor
mov
in
movups
pop
nop
inc
lds
sbb
dec
out
sahf
jmp
in
push
push
cwtl
clc
aaa
pop
imul
add
xchg
roll
pop
insl
mov
add
push
sub
add
jle
xor
pop
arpl
add
add
pop
rcr
movl
or
jae
out
je
fwait
mov
or
add
add
enter
mov
dec
dec
adc
imul
inc
mov
fildl
sbb
xchg
inc
lcall
in
testb
jbe
adc
adc
fisubl
add
add
pop
add
inc
scas
push
pushf
test
push
stos
into
int3
or
jnp
inc
jns
inc
xchg
jne
mov
fdivrs
aas
lahf
std
sbb
cmp
push
ret
mov
stos
inc
push
ret
scas
mov
jp
inc
adc
int
pop
inc
rcrb
push
sub
sbb
mov
and
pop
lret
sbb
push
pop
push
add
es
xchg
add
dec
inc
cmpl
cmpsl
das
lock
pop
mov
and
insb
pop
dec
mov
mov
add
movsl
push
test
into
add
push
lret
sbb
rcl
mov
add
addr16
cmp
out
add
inc
inc
add
pop
ret
or
lods
les
adc
and
push
adc
add
push
fistpl
add
fisubrl
adc
jno
add
sbb
std
in
out
adc
fcomp
push
inc
test
cmp
jmp
push
fs
pop
xlat
xor
fidivl
arpl
mov
lret
push
in
mov
pop
add
push
mov
and
popw
outsl
sub
xor
loopne
scas
add
lret
cltd
imulb
jb
push
addl
leave
sbb
push
sahf
sarl
push
movd
inc
cmp
int
pop
fs
ss
rcrb
and
inc
outsb
nop
add
cmpsb
inc
movsl
outsl
push
xchg
push
pop
add
out
and
add
pop
mov
fcoml
scas
imul
and
pop
dec
jecxz
mov
psraw
fdivrs
adc
pop
shl
sbb
add
add
jle
hlt
clc
in
sbb
mov
jns
test
cwtl
and
add
rcll
jmp
jb
cmp
nop
xor
scas
lret
push
lcall
iret
arpl
add
add
stc
das
pusha
fs
add
dec
ljmp
add
adc
cmp
pusha
inc
xchg
pop
ret
mov
add
pop
dec
scas
mov
fiadds
je
popf
stc
rclb
pop
loopne
inc
or
cmpsl
cltd
or
out
add
adc
xor
outsb
cs
addl
das
add
inc
sbb
adc
leave
outsb
sub
cmpb
lcall
ds
mov
jl
pusha
cmpsl
shrb
lock
fcompl
insb
xchg
mov
jg
add
rcrl
enter
aaa
push
nop
mov
add
mov
inc
xchg
pop
or
add
xor
jl
push
mov
pop
fisttpl
or
aaa
cld
add
cmp
jecxz
inc
es
movsl
mov
add
loop
ret
jne
dec
insb
adc
fwait
jno
dec
roll
and
jae
ror
mov
jg
jmp
test
decb
xor
jge
xchg
ja
mov
sub
and
pushl
enter
jg,pn
ds
cmc
loopne
addr16
xchg
adc
int3
pusha
cwtl
adc
cmovno
mov
movsb
adc
popf
idivb
roll
jg
loope
das
fstl
lds
mov
push
imul
xor
and
mov
add
stc
jae
je
adc
rorb
nop
aam
aas
cli
jmp
lds
aaa
out
pop
pop
add
mov
sti
xor
add
jbe
adc
add
cmp
loopne
inc
inc
dec
mov
cmp
jg
movsl
push
dec
sbb
mov
add
enter
push
fldcw
add
dec
ljmp
hlt
sbb
movsb
sub
inc
xchg
orl
add
xor
add
stos
scas
pop
adc
nop
adc
pop
mov
mov
mov
or
aaa
jno
add
icebp
and
shr
cmp
cmp
scas
adc
sbb
add
mov
mov
sub
sti
sub
xor
out
jg
add
xchg
push
test
das
fsubl
pop
xchg
add
loop
movsb
cmpb
add
add
mov
or
cmp
dec
sub
clc
enter
mov
cs
xchg
cmpsb
loopw
add
daa
inc
adc
hlt
cmp
loopne
add
pop
ja
inc
and
push
in
faddl
mov
loop
loopne
aad
cmp
aaa
in
push
loopne
daa
fs
add
inc
ret
add
push
or
sbb
sbb
enter
test
les
cli
das
loop
aaa
add
add
mov
popa
fidivrl
xlat
mov
je
inc
cmp
enter
dec
or
push
cmp
clc
out
pusha
add
pop
inc
lahf
leave
repnz
jae
push
jl
lret
add
jno
or
cs
jge
add
cmpsl
push
dec
iret
jl
sbb
das
and
arpl
mov
cld
or
hlt
jecxz
mov
inc
xchg
or
mov
or
mov
out
out
pop
icebp
es
add
xor
iretw
cmp
sbbl
dec
movsl
or
orb
int3
mov
int
dec
loopne
out
jnp
or
cmpsb
mov
jp
mov
pop
push
int3
and
loopne
or
mov
mov
add
sbb
movsl
jne
add
jbe
out
mov
testl
adc
add
faddl
add
cwtl
clc
xor
gs
sub
subl
sbb
jo
cld
lcall
iret
mov
sti
in
fldenv
rcl
inc
scas
cmp
jne
ja
mov
xchg
lfs
addr16
aaa
test
enter
add
inc
or
aad
in
add
aam
mov
das
aaa
inc
pop
fwait
dec
add
add
push
fldcw
add
push
sbb
jge
clc
dec
movsl
add
stos
adc
js
lret
cltd
add
fistpl
lret
sbb
loopne
adcb
add
jl
adc
shrb
addb
inc
hlt
addb
and
pop
rcll
pusha
rcrl
or
add
cmp
jns,pt
or
mov
dec
adc
je
add
pop
mov
push
add
dec
shlb
sub
insb
xchg
stc
es
and
shlb
push
push
mov
enter
and
pusha
push
sbb
adc
cmp
cmp
xor
add
pusha
mov
pop
sub
jmp
pop
pop
ja
add
sub
addl
aam
aaa
add
pop
push
lahf
push
mov
roll
lods
adcb
push
add
pop
stos
in
neg
decb
test
ret
mov
rcrb
or
pop
push
cwtl
repz
add
sbb
jb
add
sub
jle
add
shrb
popa
and
cwtl
std
or
jb
repnz
inc
adc
jecxz
mov
addr16
mov
add
cwtl
add
lcall
mov
sbb
fsubs
cmp
fiadds
aad
mov
sbb
sub
pop
es
xchg
cmc
push
subl
fstl
iret
orb
add
fwait
fs
fsubrs
push
push
lods
add
test
push
sbb
push
cwtl
nop
add
mov
das
inc
add
std
dec
push
add
ljmp
pusha
ret
mov
sbb
inc
push
gs
ljmp
pop
dec
mov
inc
dec
roll
add
data16
inc
adcb
in
sub
addb
pop
fisttpll
gs
sub
pop
jo
add
cmp
loop
push
je
cmp
aad
js
jmp
xchg
mov
orb
rorb
add
mov
ja
add
sub
push
lock
and
fs
inc
leave
add
hlt
out
xor
and
mov
inc
rorb
mov
lock
push
and
cmp
decb
cs
cmc
into
loopne
stos
stos
jge
adc
inc
scas
inc
clc
inc
aas
fcmovnbe
jne
add
sbb
jl
pop
push
mov
test
gs
inc
dec
add
imull
andb
das
add
jno
cmp
dec
lea
push
sub
repz
bound
dec
xchg
jg
sbb
jmp
enter
call
cmc
dec
inc
les
imul
lods
in
in
shlb
daa
ds
pop
jmp
pusha
subl
dec
add
pop
push
mov
and
jle
imul
insb
push
dec
movsb
hlt
xor
add
and
lds
mov
inc
push
and
imul
push
test
hlt
mov
xor
jno
inc
mov
add
enter
adc
add
inc
daa
pop
and
popl
nop
loop
push
cmp
rcrb
inc
push
dec
test
ficompl
xchg
rolb
mov
loopne
adcb
jmp
push
fldenv
out
and
fisubl
push
add
mov
out
xchg
roll
and
add
push
jl
add
lea
rcl
pusha
std
pop
xor
add
pop
sub
sub
das
xor
inc
daa
xchg
mov
call
repz
xchg
dec
icebp
push
pushf
cmp
adc
push
pusha
xchg
mov
test
out
cmpsb
test
gs
and
pop
pop
dec
push
cmp
adc
mov
dec
push
cmc
int
xchg
pushf
push
loope
fisubl
xor
cmp
cld
pop
cmp
cld
dec
cmp
in
sub
inc
dec
add
adc
add
pop
ret
rol
lahf
stc
adc
paddusw
cmp
sbb
test
imul
sub
pop
add
and
test
movq
out
mov
add
les
rcrb
out
xor
pusha
push
add
add
in
shll
jl
outsb
add
fldenv
pop
add
sbb
push
lods
mov
outsl
inc
adc
adc
adc
jecxz
add
sbb
sub
add
arpl
dec
adc
loop
dec
repnz
or
adc
arpl
scas
and
sbb
mov
mov
aaa
dec
sbb
add
push
movsb
adc
js
inc
mov
sbb
and
cmp
insl
add
mov
add
frstor
loopne
cmpsb
pop
mov
xchg
xor
mov
add
dec
andl
xor
sub
jmp
push
sbb
insb
test
dec
roll
add
idiv
pop
sub
outsb
scas
add
enter
pop
or
push
mov
mov
xor
je
mov
inc
addr16
ja
add
and
inc
mov
inc
pop
imul
out
aas
add
xchg
je
mov
les
add
insl
shl
mov
add
lds
push
cmpsb
xor
push
inc
cltd
clc
sahf
dec
add
data16
mov
les
pop
andb
and
xor
rclb
cmp
repnz
stc
pop
and
xchg
repz
add
ficoms
inc
xor
xor
dec
das
pusha
push
jl
and
mov
mov
push
add
pop
cmp
adc
je
in
mov
rcll
add
rcl
push
mov
push
add
mov
pop
loope
pop
ljmp
sbb
inc
inc
add
inc
daa
xchg
je
add
cli
pop
mov
jo
out
or
jl
in
in
sbb
hlt
xchg
inc
add
inc
scas
mull
push
lods
jo
and
add
int
pop
enter
pushf
push
jno
add
aaa
mov
push
add
or
std
xorl
add
fs
fisttps
addr16
mov
lret
pusha
ja
shlb
stc
add
lret
or
aam
shlb
sarl
mov
dec
pop
movsl
loop
pusha
xor
divb
or
push
xchg
test
add
movsl
loope
sub
jmp
add
ds
pushf
ret
mov
aam
pop
sbb
pop
sub
lock
adc
ret
ja
add
rolb
cli
push
fldcw
jno
jns
je
add
xorb
xchg
or
sub
and
fisubl
jl
push
pusha
jecxz
hlt
movb
testl
loop
cltd
aad
das
cmpsl
mov
lret
ret
adc
notl
add
add
adc
in
bound
int3
or
xchg
mov
fs
push
push
mov
push
mov
mov
adc
sbb
ret
lret
std
shr
add
int
mull
push
lahf
adc
inc
out
dec
push
into
sub
mov
jb,pn
sahf
inc
add
adc
or
shll
adc
sti
cltd
lds
sbb
add
ficomps
jno
adc
lds
or
out
sbb
sbb
dec
cmp
lret
adc
inc
xchg
add
cmp
adc
add
test
imulb
icebp
add
stc
out
lods
pop
and
xchg
push
and
mov
in
and
jb
mov
stos
add
add
ret
mov
outsl
dec
push
xchg
push
dec
out
dec
xchg
add
xor
sub
movsb
notb
mov
mov
je
inc
add
lods
add
jo
pop
push
rorb
jmp
pop
push
gs
jo
push
jge
cmp
add
ss
pop
lods
add
cmp
ret
cmp
dec
push
add
sbb
adc
ds
sub
push
and
cmc
mov
add
imul
inc
add
xor
das
jge
add
jmp
rorl
add
rsqrtps
stos
pop
out
popa
int3
add
xchg
xor
xor
xchg
ret
adc
sbb
jno
jle
add
mov
lods
repz
sbb
scas
hlt
or
cltd
sti
and
adc
mov
xchg
sub
icebp
add
push
adc
fdivr
frstor
dec
mov
dec
filds
fiadds
test
inc
xchg
out
lahf
mov
inc
jo
and
inc
inc
mov
dec
xchg
imul
or
fidivrs
int3
fwait
jp
cmp
mov
aas
mov
pusha
inc
cmp
fwait
pop
pusha
and
jl
cld
push
and
sbb
cli
mov
daa
jae
or
dec
and
inc
xor
xchg
aaa
arpl
jge
andb
fadds
xor
mov
jecxz
cmp
pop
loopne
add
lret
push
or
push
paddb
mov
iret
cs
mov
inc
nop
sub
add
sub
int3
punpckhdq
and
jne
dec
dec
pop
cmp
sbb
sbb
sbb
mov
jbe
add
insl
daa
loopne
cld
or
pusha
mov
add
dec
mov
imul
icebp
sbb
fistps
mov
xchg
add
push
mov
addl
ret
flds
imul
inc
cmc
mov
and
mov
adc
nop
test
pop
aam
loope
sbb
mov
xchg
push
or
dec
inc
rcr
fwait
sub
fisubs
adc
xchg
decl
xor
adc
and
add
out
arpl
pop
mov
push
pusha
and
push
or
das
ljmp
and
fistps
push
repnz
add
out
insl
mov
sbb
pop
stos
or
add
outsb
stc
add
rcll
imul
sbb
jp
mov
xor
cmp
jecxz
cmovb
aas
cmp
fsubl
jae
mov
pusha
add
in
lds
dec
cltd
call
and
add
mov
sbb
ljmp
and
out
jp
outsl
std
in
cmpsl
repz
rclb
and
int
dec
xorl
dec
add
jns
or
push
cmp
sarb
push
mov
add
jecxz
jbe
cmpb
xor
cli
call
insl
mov
and
xor
cmp
pop
add
addr16
loop
xor
mov
lahf
mov
add
sub
xor
outsl
imul
add
jl
push
sahf
push
xchg
sub
mov
add
dec
pop
ss
add
mov
call
add
data16
dec
cmp
push
mov
push
sub
sbb
push
insb
push
dec
leave
mov
and
adc
cmp
mov
stos
add
mov
mov
mov
sub
fcmovbe
xchg
icebp
add
hlt
insb
dec
stos
xchg
jnp
add
add
xorl
add
popa
mov
inc
lret
or
pusha
push
mov
pmaxsw
jmp
push
sub
sub
dec
cmp
mov
into
mov
inc
scas
pop
or
nop
ret
jae
rolb
jno
inc
fdiv
pop
or
fiaddl
lret
push
xchg
cli
push
fnstcw
call
cld
cmp
inc
stos
in
add
outsl
mov
test
xchg
stos
repnz
inc
rcll
pop
sub
cmpsl
and
add
jle
mov
mov
fiaddl
lahf
outsl
je
cmpsb
and
roll
nop
sub
cld
add
xor
push
insb
add
cmpsl
xchg
stos
push
add
sub
leave
xor
add
mov
xorb
cmp
fstpl
pop
jb
add
lock
add
mov
das
repz
mov
push
stc
rolb
shl
rolb
test
inc
sub
pop
add
jge
into
push
cltd
fcoml
sbb
xor
sub
ds
mov
jae
mov
lret
inc
lods
dec
dec
clc
loopne
insb
lock
push
dec
or
jno
inc
push
mov
fiadds
mov
nop
add
xchg
loope
jp
fs
push
js
inc
xchg
jp
in
add
dec
add
xor
icebp
pop
adc
insl
xlat
subb
lcall
lods
mov
and
add
xchg
scas
mov
sti
imul
out
loopne
inc
push
add
dec
outsl
icebp
cmc
fadd
lret
or
and
pusha
jl
push
pop
or
cmp
push
das
sbb
mov
xor
hlt
cs
addb
icebp
insl
lret
inc
pop
mov
test
push
addr16
jae
movsb
or
rol
enter
pop
pop
add
pusha
xchg
stc
adc
out
mov
add
mov
add
ds
sbbb
sbb
mov
inc
jo
xchg
inc
mov
push
shl
inc
out
and
push
test
int3
mov
adc
mov
lcall
add
das
and
pusha
adc
test
pop
call
pusha
jno
fmulp
aas
adc
dec
jb
sub
je
dec
test
mov
clc
pop
jge,pn
inc
xchg
mov
cmc
cmpsb
or
and
mov
sbb
into
fdivs
jo
mov
add
jg
add
popa
push
lds
sub
pop
rolb
loope
aaa
dec
xchg
imul
cmp
push
jb
out
cmp
andl
cwtl
add
loope
mov
and
add
and
dec
test
dec
sbb
push
or
es
divb
cli
sub
add
add
push
out
clc
subb
outsb
cs
add
mov
in
out
xlat
pushf
jge
js
add
insb
clc
add
fdivrp
add
sub
push
cld
mov
sarb
pushf
add
es
in
and
int
inc
scas
inc
xchg
out
lahf
inc
add
popa
jge
int
adc
loopne
and
cmpsb
loop
orb
pop
add
out
clc
mov
sub
icebp
rcrb
add
scas
in
xchg
and
or
sub
repz
iret
or
aam
jnp
jbe
jle
cmova
pop
mov
inc
rol
out
lock
lock
sub
or
pop
add
sbb
add
adc
stc
dec
cmpb
insl
outsl
sub
add
or
add
mov
add
ja
inc
lcall
pop
adc
and
cld
and
mov
ret
adc
in
push
or
add
push
mov
add
mov
push
mov
sbb
test
les
lea
add
adc
add
add
aaa
xchg
inc
repz
movsb
mov
push
ret
loopne
push
pop
mov
imul
stos
cmp
aam
imul
ret
lret
mov
add
call
sarb
cmp
imul
xchg
dec
cmp
mov
loope
sbb
jmp
les
add
leave
enter
pop
pop
call
incb
pop
adc
and
rclb
insl
cmp
xor
mov
jo
nop
mov
or
dec
cld
dec
sahf
mov
int
rcll
sar
aam
or
mov
aas
mov
fiadds
ret
mov
jno
add
jecxz
sub
std
int
enter
adcb
mov
std
pop
mov
add
cmc
nop
dec
push
pop
fadd
sahf
shlb
sbb
mov
shll
fistl
bt
add
pop
pop
pop
mov
add
xchg
adc
add
xchg
push
mov
add
or
lcall
push
xchg
in
in
mov
push
gs
pop
test
xor
add
outsb
mov
dec
pop
stos
pop
pop
in
or
mov
fstpt
sub
add
mov
add
scas
jb
mov
xor
out
push
fisubl
enter
add
sahf
xchg
jp
je
lock
jecxz
pop
jo
xchg
add
add
mov
cmc
mov
cmpsb
dec
shll
inc
scas
xchg
and
je
fcoms
push
pop
add
dec
sbb
loop
sub
fs
or
or
jnp
call
addr16
mov
cmc
mov
jbe
or
sub
dec
pop
or
inc
scas
aas
mov
popa
pop
mov
pop
imul
hlt
inc
add
rcll
sbb
and
add
fimull
scas
xor
inc
es
add
xchg
and
add
dec
movsb
mov
dec
iret
inc
inc
or
subb
int3
mov
pop
test
xchg
jecxz
jno
imul
cli
dec
or
fwait
push
dec
mov
dec
or
cltd
loop
add
aam
cld
jle
add
lret
push
testl
jl
lea
orb
sahf
jne
add
and
jmp
jo
jns
aas
int3
push
cli
add
sti
fsubs
js
add
dec
mov
pop
int
sbb
adc
unpcklps
sti
jp
jge
hlt
add
test
or
movb
lcall
cmc
push
cld
pop
movsb
sbb
adc
out
popf
fdivrs
push
pop
inc
movsl
jne
push
mov
cmp
and
mov
dec
mov
pop
dec
push
rolb
in
and
push
cmpsl
jp
add
out
xchg
ja
xchg
ss
xchg
inc
les
lahf
mov
push
aad
jne
rclb
cmp
xor
sub
cwtl
notb
sub
pop
mov
add
sbb
pop
mov
cmp
push
push
aas
and
lods
lret
xor
mov
add
adc
mov
pop
mov
or
add
sbb
xchg
fcmovb
inc
cmp
ljmp
add
das
clc
push
pusha
lods
fnstcw
adc
dec
or
xor
test
adc
pop
add
dec
mov
bound
incb
jne
pop
mov
add
loop
xor
fldcw
fcmovb
jl
push
jmp
in
xchg
or
imul
sub
sub
aam
cmp
les
lcall
je
pop
iret
inc
sti
pop
and
test
push
mov
dec
push
jbe
ljmp
cmp
lods
lret
add
mov
into
dec
add
loopne
in
daa
aad
sbb
xlat
ret
sub
lret
fisttpll
outsb
dec
sbb
mov
inc
xchg
movsl
pusha
xor
pop
mov
pop
mov
and
testl
sub
mov
add
incb
out
ret
jne
mov
add
outsb
scas
lea
pop
out
mov
leave
and
add
sar
xor
add
sbb
je
lds
or
mov
out
or
test
nop
cld
and
sbb
lahf
addl
add
add
dec
push
fdivs
mov
adc
fcoml
pop
jecxz
stos
jmp
mov
or
dec
dec
add
adc
aam
pop
mov
lock
lock
xchg
add
adc
cmpsb
icebp
repnz
into
cmp
mov
xor
loope
add
xchg
inc
jmp
add
mov
pop
sar
inc
add
xlat
in
and
pop
pop
sbb
pop
ds
int3
rol
gs
push
add
into
mov
cmp
sbb
jnp
pop
add
xchg
ds
inc
jae
cmp
ficoms
adc
in
daa
pop
es
rclb
dec
inc
shlb
mov
pop
xchg
add
inc
lahf
fsubr
leave
ds
jecxz
punpcklbw
xor
push
rcr
and
lock
lods
lret
scas
mov
testb
test
sub
push
scas
add
stc
fdivrs
ja
adc
icebp
mov
pusha
xchg
sub
xchg
pop
jns
ljmp
jae
xor
sbbb
sub
xchg
das
daa
mov
aam
cmpsl
cmp
arpl
and
scas
add
aaa
mov
add
test
mov
adcb
add
jae
xor
sbb
neg
sub
cmc
scas
add
nop
add
mov
add
add
xlat
cmp
lock
inc
outsb
jno
push
mov
pop
xchg
xchg
or
enter
add
int3
mov
pusha
test
or
mov
adc
shll
xor
pop
xchg
ret
dec
dec
and
add
adc
clc
mov
sub
dec
rolb
hlt
mov
add
add
jmp
and
ljmp
mov
add
add
add
mov
in
pop
daa
mov
add
or
xlat
inc
and
inc
cmp
cwtl
add
xor
jecxz
cmpsb
cmp
mov
es
push
pop
sub
xchg
push
inc
imul
mov
call
dec
and
movsb
mov
sbb
add
std
lcall
xlat
push
xorb
jp
stos
test
andl
adc
adc
lods
xor
call
xor
pop
add
push
push
xor
xchg
add
scas
inc
sub
push
test
jns
fmulp
adc
sbb
jbe
addb
adc
add
fstpl
frstor
cmc
rcll
jb
add
testl
add
daa
push
adc
add
sbb
inc
ja
or
xorl
cltd
cwtl
fnstsw
add
jo,pn
arpl
clc
mov
maskmovq
negl
jle
add
cwtl
insl
icebp
dec
sahf
add
shll
sar
test
xchg
clc
shrb
stc
mov
and
add
aas
ljmp
add
mov
movsb
push
stos
pop
pop
mov
ret
add
dec
ss
mov
mov
das
imul
add
int
xchg
jo
test
enter
adc
gs
loopne
ds
add
cmpsl
push
add
pop
leave
mov
add
out
cmp
inc
int3
repnz
jns,pt
add
sahf
add
or
fdivrl
lret
into
pushf
ret
sahf
inc
or
data16
mov
adc
inc
icebp
jno
add
xchg
loop
mov
jg
add
push
xor
into
sub
xchg
jbe
or
sbb
or
mov
add
xchg
inc
cmp
fidivrl
icebp
movsb
clc
call
push
push
sub
into
fsubs
and
jae
testb
mov
add
inc
cmpsb
popa
adc
pop
aas
hlt
add
add
addr16
push
rolb
scas
stos
in
shlb
jne
add
and
aam
jle
add
mov
sub
dec
and
jle
add
addb
fisttpl
dec
add
notb
xor
sub
and
add
mov
nop
sbb
imul
xchg
subb
and
shl
sbb
dec
add
jae
push
add
inc
xchg
loopne
lea
scas
or
adc
fadds
not
fxch
adc
call
xchg
mov
jo
add
hlt
push
movsb
iret
sub
loopne
xor
or
adc
rorb
mov
jecxz
adc
or
cld
inc
or
adc
loopne
adc
xorb
ds
pop
in
mov
repz
add
scas
js
dec
adc
fs
nop
in
je
lcall
dec
add
mov
cmp
mov
or
enter
or
popa
mov
cmpsb
add
xor
fdiv
add
in
sbb
jge
and
sahf
popf
or
fcmovnu
pop
push
dec
mov
dec
add
add
fwait
sbb
add
cwtl
add
mov
pusha
push
adc
add
adc
imul
push
jl
inc
add
cwtl
cld
lret
clc
push
je
repnz
ror
xor
push
sub
and
push
or
inc
push
xchg
cmp
lea
cld
dec
add
mov
add
cwtl
xchg
xor
mov
mov
loope
push
hlt
lods
sbb
lret
ss
push
pop
dec
xchg
add
stos
bound
xor
sub
inc
pop
xor
outsl
loope,pt
ljmp
add
repz
and
dec
push
sub
jle
sub
sbb
add
and
sub
mov
mov
hlt
pop
xlat
or
movsl
int3
adc
shlb
out
add
dec
adc
adc
idivl
outsb
sti
or
jno
loop
mov
cmp
jecxz
fistpll
sbb
pop
xchg
mov
cli
cld
imul
movsb
and
mov
and
ret
icebp
mov
hlt
or
popf
add
push
mov
mov
addb
imul
xchg
nop
adc
add
jno
sbb
lods
in
pop
add
and
or
cmp
push
arpl
add
inc
lcall
lahf
xor
dec
mov
xor
xchg
push
jae
inc
add
roll
add
pushf
sub
out
sbb
pop
push
sbb
insl
daa
jo
jae
cmp
out
xor
std
frstor
rorb
scas
mov
aam
leave
jnp
rorl
imul
int3
adc
xor
mov
leave
ret
mov
cmp
ds
or
roll
pop
xchg
stos
and
xchg
jmp
cld
into
bswap
xor
add
mov
and
cli
dec
xchg
inc
cwtl
push
jb
nop
cmp
sbb
cs
and
mov
sarb
js
cmp
cld
in
add
iret
pxor
pop
add
xor
jmp
dec
lods
or
cmp
mov
cmp
repnz
mov
cmpb
xor
pop
shll
and
xchg
or
les
jb
xor
pop
pop
mov
out
shlb
push
arpl
dec
out
shll
test
ret
or
pushf
add
rcll
sar
setl
sarb
lods
sbb
dec
test
mov
lds
jle
dec
outsb
and
pop
mov
sub
or
jl
or
mov
push
insb
or
pop
mov
adc
es
sarb
mov
fsubl
push
lret
pusha
ffree
pop
leave
or
test
xchg
jle
add
aad
lret
adc
and
mov
fnstenv
and
stos
add
pop
rcrl
fwait
enter
clc
and
sbb
jno
ss
push
add
dec
push
lods
loopne
add
in
test
add
xor
repnz
sub
test
std
sbb
dec
mov
sbb
aas
popa
shlb
inc
jne
jl
adc
mov
cmp
mov
xor
add
je
inc
sahf
add
add
mov
mov
int3
pop
js
repz
sub
mov
sbbl
add
mov
clc
stos
filds
inc
adc
sar
dec
mov
movsl
push
ret
subl
adc
pushf
add
sahf
pop
pop
cmp
xor
outsb
test
push
mov
aam
addl
hlt
push
jl
lods
dec
pop
sarb
add
push
test
add
xor
mov
and
jns
imul
mov
sub
pop
sbb
inc
cltd
xchg
aad
loop
add
xor
sbb
lret
add
out
sub
add
push
lahf
outsl
imull
adc
xchg
aas
push
mov
popa
jne
pop
mov
adc
in
xchg
popl
mov
inc
inc
or
xor
xchg
test
adcb
ret
cltd
push
arpl
xchg
pop
fimull
in
sub
testb
outsb
and
add
in
sbb
repnz
lock
jl
sbb
stos
cmp
cmp
jo
pusha
mov
dec
cmp
cmc
xorb
and
add
jg
in
mov
or
add
mov
adc
jle
add
outsb
loope
gs
addr16
adc
vprotb
add
sbb
mov
dec
pop
dec
add
mov
outsb
in
jp
add
stc
popf
nop
add
shlb
divb
xchg
add
les
pop
push
adc
imull
add
jg
or
jp
pusha
lahf
dec
or
pusha
mov
fcomps
ret
jg
adc
das
xor
cld
cmpsl
repz
test
and
inc
mov
push
mov
jmp
dec
or
sbb
loop
or
sbb
or
xchg
pop
xchg
test
stc
addl
fdiv
xor
xchg
in
frstor
adc
xchg
or
test
push
popf
incb
ficoml
int3
mov
adc
mov
negl
fdivl
add
lea
insb
pop
mov
mov
hlt
sbb
inc
and
cmpsb
lret
sbbl
clc
ja
ror
and
fs
add
cmp
sbb
dec
test
cli
aas
loopne,pn
and
cmpsl
loope
js
aad
add
xor
in
daa
add
jns
dec
int
lods
lcall
orb
sub
xorl
jmp
inc
push
orb
jl
pop
hlt
call
xor
inc
cmp
out
es
outsl
aam
jecxz
lahf
dec
push
pushf
add
out
subb
and
sub
inc
fadds
sbb
sub
or
cmp
sub
stos
xor
xchg
cli
add
fbstp
jle
xor
lock
dec
sbb
and
jg
push
push
sbb
inc
clc
imul
icebp
xor
add
and
mov
xor
pop
popf
mov
xor
sarb
pushl
ja
cmp
add
adc
pop
mov
mov
jecxz
xor
sub
pop
test
hlt
adc
add
mov
pop
and
int3
mov
inc
cwtl
pop
add
push
cmp
push
ds
repnz
wbinvd
gs
nop
subl
pop
cmp
subb
lcall
or
les
xchg
xchg
push
push
cmpsb
rolb
test
jp
or
jecxz
mov
inc
cmp
cwtl
pop
fs
fildll
inc
xchg
fstl
push
nop
test
cmpsl
add
stc
xchg
repnz
cmp
or
jp
xor
rorb
mov
add
mov
scas
gs
xchg
add
and
sbb
pop
add
sbb
jne
push
and
cld
out
test
add
ljmp
int3
xchg
in
dec
mov
stos
jb
cld
rorb
loope
imul
dec
sbb
pop
cmp
adc
sbb
or
divl
jne
mov
imul
inc
cmp
add
sbb
pop
xchg
movsb
dec
sbb
jg
inc
mov
xchg
xor
add
adc
sbb
movb
sub
imul
pop
pop
jo
add
lar
pop
pop
nop
adc
adc
xor
push
pusha
pusha
adc
popf
add
lds
push
mov
jno
mov
movl
adc
es
push
faddl
mov
xchg
mov
int3
inc
inc
fcmovb
loopne
add
aam
cwtl
mov
xchg
out
xor
lods
jnp
mov
inc
inc
cmp
adc
dec
out
je
mov
mov
insb
jb
mov
mov
jae
add
jecxz
pop
pop
or
inc
dec
imul
sub
push
cmp
sbb
mov
shr
or
adc
and
loopne
or
pop
les
mov
fstps
fdiv
rcll
jbe
inc
mov
add
adc
xchg
fs
mov
add
ss
ret
pop
cld
test
xorb
xchg
inc
and
scas
add
je
insb
dec
rorl
push
add
pop
rclb
pop
add
mov
jnp
cmc
aad
dec
cltd
andb
pusha
cwtl
mov
add
xchg
notl
movsl
mov
sub
je
add
mov
mov
sbb
mov
rcll
cmc
and
les
mov
lcall
sbb
rorl
loopne
adcb
fstps
insb
sarb
lret
pushf
enter
add
call
and
pusha
sub
dec
fildl
int3
jne
pop
in
adc
rcrb
jae
test
out
and
imul
xchg
sbb
mov
lds
jo
cmp
jne
mov
mov
adc
repnz
or
inc
cwtl
adc
push
inc
pusha
popf
in
jb
mov
cs
movsb
pop
or
jo
push
sbb
inc
xor
fs
inc
dec
and
adc
cmpb
add
cmp
inc
add
sub
test
push
mov
cmp
fdivs
popa
dec
imul
sub
and
fldl
add
xor
ror
pop
nop
arpl
mov
movsb
xchg
and
in
fcomp
rorb
add
loope
pusha
and
aam
scas
or
sbbb
inc
add
inc
mov
dec
sub
push
sub
je
jo
xchg
add
arpl
mov
repnz
loope
imul
add
lods
lock
orps
or
insl
stc
mov
adc
aad
adc
pop
vmread
or
shlb
add
mov
jno
add
mov
push
roll
ret
xor
sbb
icebp
xchg
or
pusha
iret
fsubl
add
mov
mov
xlat
pop
mov
scas
ljmp
dec
inc
in
call
mov
movsl
and
inc
pop
test
les
pusha
mov
xchg
pusha
imull
cwtl
mov
mov
shlb
hlt
ret
jno
int
sahf
aam
pop
addb
jns,pt
fistpll
push
clc
or
push
insb
ja
into
sbb
cmpsl
sbb
jae
xor
add
gs
dec
lods
mov
pop
out
pop
sub
jo
subb
inc
scas
in
test
xor
ss
xor
icebp
adc
add
ret
xor
jb
stos
jle
add
xchg
fnstsw
nop
cmpb
add
jb
pop
leave
adc
or
cmp
cmp
popf
leave
add
cmc
addr16
sub
and
pop
inc
pop
fcoml
xchg
push
in
aas
mov
add
mov
xor
and
inc
sarb
out
sbb
xor
inc
int3
add
fnstcw
dec
mov
and
xlat
pop
xchg
andb
and
mov
test
cld
jmp
incl
into
xchg
push
movsb
iret
sub
lods
sub
sbb
sub
push
loopne
xor
xchg
lock
add
outsl
test
fnstsw
mov
jmp
fwait
add
aam
test
shl
xchg
adc
pop
data16
and
mov
jp,pt
add
push
push
or
inc
sub
loopne
lahf
adc
lods
lcall
jo
rclb
and
inc
push
lea
dec
sub
and
push
scas
loopne
cmp
push
dec
jno
std
in
and
mov
pop
mov
push
and
pop
scas
mov
ss
xor
out
inc
call
and
lds
sub
pop
pop
or
mov
fwait
add
xorb
sub
insl
call
clc
fstpt
div
pop
lcall
xchg
push
add
rcll
xchg
add
aaa
push
jg
pop
cmpsl
inc
test
mov
leave
push
jae
out
int3
das
inc
add
lahf
mov
sub
xor
addr16
leave
lds
push
mov
daa
cmp
add
xchg
rclb
enter
cmp
add
lock
pushf
sarl
bswap
mov
cmp
subb
rcll
mov
mov
in
or
cmp
dec
clc
test
call
cmc
in
add
pop
enter
xchg
cmpsl
add
cmp
or
push
scas
repnz
jl
pop
es
mov
hlt
clc
mov
cmp
jbe
leave
adc
push
fistps
adc
ds
adc
sbb
xchg
fcoms
add
push
jnp
add
lcall
daa
jns
clc
loopne
jge
popl
fistpl
jp
adc
lahf
cmp
dec
mov
into
cmp
add
adc
adc
in
sub
inc
sbb
add
cli
daa
xor
dec
sbb
adc
sub
rclb
xor
sbb
inc
insb
int
dec
fsubp
rolb
inc
cmc
loop
jge
pop
mov
shrb
add
loop
mov
aam
aam
inc
addl
enter
mov
lret
push
mov
lods
dec
jle
inc
aad
add
int3
and
xchg
out
dec
gs
add
xchg
flds
mov
jecxz
and
and
clc
inc
mov
xchg
aaa
mov
aas
add
cmp
xorl
pop
ret
jge
sbb
mov
scas
icebp
adc
fsubrl
adcl
insb
cwtl
addr16
or
andb
add
out
sub
icebp
cwtl
add
cmp
out
aam
cmp
and
add
dec
cmc
cmp
and
clc
lret
sbb
adc
arpl
mov
sbb
inc
or
dec
call
mov
adc
sub
mov
xchg
pushf
mov
int3
dec
inc
add
jae
jno
popa
sti
add
add
cltd
iret
jns
dec
inc
clc
push
test
sbb
mov
and
shl
sbb
cmc
push
ret
add
mov
js
repz
add
dec
or
stc
loopne
adc
cmpsl
test
clc
add
out
mov
fdivs
fdivrp
psrld
and
push
mov
add
pop
sahf
mov
add
sbb
scas
rcrb
push
xchg
les
lods
xor
push
in
cmp
sbb
aam
jp
sbb
xchg
add
clc
fdivs
cmc
mov
hlt
sbbl
adc
aaa
lock
int3
adc
or
mov
add
std
pop
fwait
mov
invlpg
jbe
inc
decl
and
mov
xor
pop
mov
aaa
push
movsb
mov
lock
ret
jmp
dec
loope
repnz
add
or
mov
or
mov
and
je
test
into
mov
jmp
mov
xchg
mov
jns
cmpsl
rorb
add
rclb
pop
add
push
repz
scas
pusha
pop
subps
pop
push
fisttps
clc
jnp
shrb
ret
mov
xchg
sti
mov
int
stc
inc
xchg
cmp
aas
push
or
dec
jo
add
adc
jle
and
cs
hlt
pop
cs
inc
mov
sbbb
pop
dec
xchg
add
mov
and
rcl
push
loopne
mov
jle
mov
leave
divl
cmp
rcl
jb
add
xlat
repz
xchg
je
loop
jo
adc
stos
in
xchg
call
fildl
cmp
mov
sbb
mov
add
outsl
sbb
pop
xchg
sbbb
jo
xchg
and
add
stc
jne
xor
cmpsb
adc
pushf
or
add
adc
xchg
adc
pop
sbb
ss
jo
xchg
dec
sbb
lock
lret
les
mov
xlat
scas
xor
add
sti
mov
inc
int
mov
pop
mov
push
in
int3
mov
mov
jbe
cmp
add
lret
add
rorb
and
push
adc
inc
dec
lods
add
dec
pop
int
push
add
pop
xor
icebp
ret
sbb
inc
enter
cmp
mov
add
and
inc
movsb
jo
jge
movsb
in
loopne
and
sti
mov
mov
out
pop
inc
arpl
pop
nop
lahf
push
add
push
fisttpl
mov
jo
cltd
xchg
loopne
xchg
add
cmp
fiaddl
mov
adc
test
add
inc
sub
loop
js
jb
loope
scas
xchg
add
call
daa
movsb
adc
xor
add
jmp
popa
scas
int
mov
aaa
mov
add
imul
daa
jmp
nop
push
push
repz
add
in
add
stc
xor
cmp
mov
fidivl
pop
dec
mov
pop
sbb
cld
pop
xchg
pop
sub
popa
push
mov
jb
lret
pop
push
sub
mov
inc
or
adc
jb
into
adc
jecxz
imul
cs
cmc
cld
mov
jb
and
fiadds
xchg
fadds
imul
mov
push
jnp
pop
xor
jg
es
xorb
lret
inc
js
incb
or
fiadds
ret
stos
add
add
add
insl
cli
mov
xchg
push
dec
into
test
insb
sbb
sub
repnz
xor
add
outsl
mov
mov
insb
pop
lock
popf
les
dec
sbbl
xor
add
adc
leave
mov
xchg
push
mov
idivl
aas
push
fists
sbb
mov
xchg
mov
add
rol
ljmp
jle
add
adc
cmpsl
fstps
in
fists
rorb
fwait
mov
cmp
cmpsb
add
jl
ja
add
and
xchg
add
cmp
in
mov
or
ret
xor
sahf
adc
xorl
sub
imul
fildl
mov
adc
pop
mov
add
insb
shlb
mov
sbb
xchg
push
test
out
lahf
andb
sub
aam
push
dec
daa
lahf
xchg
outsb
adc
push
jle
hlt
test
in
stos
subb
sbb
sub
dec
jbe
mull
or
pop
mov
cmp
cmc
xchg
jne
mov
pop
mov
add
jo
add
out
xor
inc
sub
incl
or
sub
ja
adc
clc
lods
add
fstl
mov
adc
adc
cs
ret
jl
xor
daa
rclb
shll
add
fs
add
mov
mov
mov
sbb
stc
rcrb
outsb
and
push
in
adc
lock
decb
pop
push
repz
cmp
pop
imul
mov
aam
inc
inc
verw
and
or
fisubrl
aam
or
mov
inc
scas
outsb
push
enter
and
add
int
lea
push
add
add
and
add
sti
test
mov
cmpb
sbb
bnd
or
enter
inc
pop
sar
ret
fcomp
and
std
cmp
inc
lds
mov
stos
jno
incl
mov
call
sbb
daa
sub
mov
add
adcl
mov
jmp
mov
movb
sbb
xor
add
dec
mov
loope
fcoms
xor
push
jmp
add
or
xchg
rclb
int3
inc
sbb
pop
fldl2t
fwait
movaps
mov
sbb
add
stc
mov
push
add
xor
or
xor
add
pop
insl
nop
fnstcw
lock
nop
aam
mov
add
cmpsl
add
js
and
xchg
fistpll
int
je
imul
mov
sbb
inc
repz
int
jo
mov
push
filds
pop
lret
movsb
cwtl
pusha
add
mov
cmpl
sub
xlat
sub
out
mov
sar
popf
inc
cmp
loope
mov
xlat
mov
inc
push
mov
or
and
pop
scas
movl
mov
jne
aam
cmp
inc
ret
xchg
fstpl
mov
cli
icebp
lock
mov
lret
test
xor
push
pop
dec
call
push
mov
hlt
fsubrs
dec
addr16
ja
rclb
cmpsb
sbb
adc
mov
mov
jmp
lea
es
jno
add
xor
mov
jge
xchg
int3
sub
adc
and
ss
out
movb
cmp
movsb
dec
addl
cmp
jo
add
cmp
into
popf
lahf
jnp
test
push
rclb
lds
or
sbb
arpl
pop
outsb
jns
scas
mov
sbb
cmp
popf
into
fidivrl
jo
adc
or
push
dec
mov
or
dec
dec
inc
adc
movsb
inc
lods
popf
fadds
sahf
in
inc
push
fbstp
out
mov
xchg
add
mov
repz
inc
roll
sbbl
xor
dec
xor
add
xchg
cs
das
enter
pop
inc
popf
lds
in
loop
or
add
inc
pop
mov
pop
add
pop
cwtl
pop
in
lock
or
or
fs
adc
pop
xchg
pop
dec
cmp
lds
push
ljmp
sbb
scas
rclb
push
mulps
pop
xor
test
mov
orb
sbb
cmp
and
insl
std
dec
ja
jo
pop
jmp
push
mov
scas
adc
pusha
mov
sub
mov
nop
rcrb
test
jmp
faddl
xchg
cmp
pop
add
fldcw
add
fnsetpm(287
lds
orb
clc
ljmp
jge
lds
xor
scas
mov
out
daa
in
mov
add
ficompl
cwtl
andl
aad
repnz
lret
bound
clc
popf
lcall
pushf
mov
add
test
lahf
loopne
mov
sbb
es
add
insb
mov
outsl
mov
dec
add
xchg
or
sbb
jbe
add
push
loopne
out
mov
push
das
jno
and
or
add
pop
fnstcw
jge
mov
add
sbb
xor
js
das
shrb
aad
sbb
xor
andb
clc
sbbb
push
push
das
imul
subl
loopne
loope
movsb
les
push
nop
push
mov
and
push
jo
mov
test
je
test
call
add
mov
test
hlt
int
movsl
clc
mov
jno
mov
jns
call
pushf
jae
jle
mov
enter
std
in
pop
pop
outsb
lock
roll
nop
popa
movsb
mov
gs
pop
call
add
mov
les
pusha
shlb
cld
aaa
jecxz
mov
fldenv
add
add
repnz
add
or
push
sub
pop
ret
dec
jo
inc
and
mov
add
mov
movsb
fmuls
fcomps
mov
aaa
imul
cmp
cltd
fs
jns
lcall
add
sbbb
movsb
push
add
jl
das
add
mov
add
xor
insb
dec
add
daa
bound
inc
jle
nop
xorb
fisttps
stos
icebp
adc
out
cmpsb
or
in
mov
in
sub
or
mov
or
add
lock
es
std
in
idivl
cmp
shlb
shlb
sbb
aam
ds
sbb
cmpsb
mov
inc
scas
push
mov
cli
sbb
add
mov
xchg
and
xchg
or
mov
xorb
sbb
add
data16
pop
imul
clc
movsb
jns
push
add
daa
add
subl
cmp
iret
sti
add
inc
mov
pushf
les
mov
mov
and
call
std
add
pusha
and
mov
in
and
jge
add
and
or
add
jb
ret
mov
out
jo
fsubl
add
mov
fcoms
outsb
out
xor
dec
outsl
ror
addr16
jbe
inc
repz
add
fmul
es
xchg
mov
and
cmp
rcl
mov
test
cmp
add
clc
out
xchg
mov
push
enter
add
loop
rcrb
mov
mov
inc
lahf
icebp
sbb
jo
rorl
hlt
mov
je
xorb
lods
jecxz
pusha
in
loopne
bound
add
jno
lcall
mov
jnp
enter
sub
lock
jns
pushl
adc
pushf
and
cmp
push
adc
subb
cmc
pop
add
push
xchg
adc
sub
dec
inc
adc
inc
inc
pusha
and
in
fiaddl
jg
pushf
pop
and
push
mov
jle
xchg
push
cmpl
bound
sti
in
out
add
fsubrs
add
adc
and
xor
adcb
dec
cmp
rcrl
jg
add
and
xchg
outsb
push
test
sarb
add
call
sub
or
ljmp
push
jg
es
aas
hlt
pusha
int3
sbb
add
sub
lahf
add
lret
add
push
shll
add
lods
gs
in
cmp
mov
mov
cli
rcrb
mov
insb
test
xchg
repnz
inc
pusha
pop
aaa
inc
adc
and
xor
cli
sub
lret
xchg
xor
jns
orl
dec
inc
popa
add
sbb
clc
jbe
add
adc
adc
dec
add
movsl
or
push
rcr
out
aam
adc
loop
xlat
lock
in
mov
cmpb
inc
fcomi
mov
js
ds
xchg
adc
ljmp
push
xchg
adc
mov
mov
sar
add
out
out
mov
mov
jl
xchg
push
jae
push
add
lods
push
dec
sub
add
sub
flds
sub
rcr
and
cmc
out
sub
add
daa
sarl
rclb
pop
add
push
push
jb
pop
fildl
imul
bound
adc
adc
sub
fbld
mov
jl
fdivs
inc
mov
mov
pop
in
ret
pop
fidivrs
adc
mov
add
jl
jmp
movsb
adc
sub
mov
push
adc
out
add
sbb
add
pusha
mov
subb
sahf
testb
mov
in
movsl
push
in
adc
mov
pusha
test
jae
imul
ficompl
movsl
dec
xor
shlb
pop
pop
mov
jae
cs
sahf
or
clc
stc
das
pop
dec
movsl
fimull
bound
pop
add
xor
push
es
fs
pop
mov
or
jmp
lock
jge
add
dec
cwtl
sub
add
and
mov
mov
inc
std
popa
xor
movsb
fdivl
clc
mov
aaa
outsb
jbe
pop
dec
repnz
mov
push
rclb
lods
lock
sub
lea
cmc
pop
iret
stos
add
rcrl
neg
imul
push
and
mov
pushf
insb
cmpb
add
insl
ret
cmp
mov
or
stos
xchg
ficoml
std
xchg
sbb
adc
sbbb
xchg
in
adc
sub
xchg
lcall
pop
jbe
lock
fwait
push
sbb
nop
push
call
cmp
daa
pop
fs
daa
push
ret
jl
cmpsb
adc
mov
lock
test
xchg
loop
sbb
jne
mov
add
push
add
lahf
and
iret
cltd
sub
mov
add
negl
xchg
dec
inc
icebp
adc
jbe
add
fdivr
inc
xor
jl
add
leave
xchg
push
mov
pop
mov
nop
and
push
mov
push
mov
sbb
call
int
in
dec
testb
fiadds
cmp
xchg
decl
pop
and
mov
int3
dec
mov
mov
add
pop
rolb
pop
add
or
test
xor
orl
clc
xchg
sbb
pop
sahf
clc
lods
rclb
mov
stos
mov
mov
outsl
fsubl
cmp
dec
in
test
adc
ds
sbb
pop
int3
cmp
cmp
movsl
sub
add
sub
add
mov
dec
sub
pushl
jl
add
inc
dec
fstps
daa
pop
cmp
add
pusha
push
add
sbb
call
dec
dec
hlt
pop
xchg
xchg
sub
and
pop
mov
adc
inc
inc
add
lock
mov
xor
lahf
mov
inc
add
cmc
mov
cmp
in
add
fcomp
sbb
xor
and
andl
and
cmc
push
loopne
pop
mov
fistpl
clc
pop
scas
push
add
or
int
and
rorl
add
cmp
fwait
add
or
dec
mov
pop
addl
jae
add
add
imul
add
icebp
mov
jno
jmp
inc
dec
add
insb
or
lret
xorb
sbb
out
out
in
jp
add
sub
adc
in
lock
inc
add
push
xchg
arpl
mov
fdivrs
test
mov
stc
sbb
push
lahf
pop
jecxz
add
or
lods
rolb
movsb
imul
adc
sbb
in
int
dec
hlt
or
das
cmp
subb
jg
lock
adc
out
outsl
jne
pop
add
sbb
xor
mov
jg
add
jmp
sbb
lcall
cwtl
add
inc
arpl
pushf
cmp
or
mov
xlat
mov
in
insb
add
pop
outsl
dec
jb
add
mov
add
or
loopne
addr16
push
fs
add
outsb
imul
mov
cs
inc
push
xorb
push
xchg
je
mov
add
xor
sbb
inc
add
jmp
dec
bound
mov
pusha
pop
dec
test
add
popa
arpl
push
fwait
sbbb
int3
aaa
jne
add
mov
add
or
arpl
add
cmp
add
data16
or
js
mov
pushf
pusha
add
mov
adc
hlt
test
add
outsb
in
jge
lds
or
mov
js
or
cltd
push
movsl
loopne
cld
add
xchg
rcr
mov
into
out
mov
cmp
jo
mov
pop
xchg
shl
lock
dec
repnz
cwtl
pop
sti
int3
mov
cmp
aaa
add
add
pop
adc
movsl
or
test
xchg
add
mov
mov
add
add
popa
insb
das
mov
push
dec
add
and
mov
cmp
add
jl
mov
push
mov
in
push
rcrb
cld
fwait
jge
cld
jle
cmp
lahf
add
pop
or
jmp
cwtl
cmp
fidivrs
add
test
sti
les
int
leave
lcall
pop
xchg
or
das
pusha
je
stc
cmp
add
lahf
cmp
cmp
movd
mov
clc
add
pop
jnp
sbb
cmp
mov
xlat
clc
roll
fnstcw
sub
jns
pop
sub
rclb
xor
aad
cs
cmp
je
sub
cltd
fcmovnu
std
insb
or
mov
out
push
xor
jmp
adc
imul
and
je
es
add
insl
mov
or
inc
popf
push
add
jmp
mov
dec
fadds
fdivrl
cmp
addb
or
aad
inc
repnz
pop
add
or
add
repz
outsb
iret
add
mov
cs
xchg
pop
bound
adc
add
nop
clc
jb
stos
out
lahf
mov
fcomi
flds
rcrb
es
jnp
incb
pushf
cmpsb
jmp
cmp
pop
dec
cmpsl
push
andb
dec
pop
or
orb
push
jnp
in
shl
or
xchg
fldl
in
add
jecxz
jge
vshufpd
inc
sbbb
xor
add
cmp
add
pop
addr16
test
and
pop
pop
xlat
lods
pop
aam
xor
in
dec
add
stc
mov
xchg
mov
cmp
outsb
and
dec
clc
loopne
mov
in
push
ljmp
lock
dec
adc
imul
test
and
lea
mov
jns
das
popa
sub
mov
add
cmp
dec
lahf
adcb
and
test
add
fisubl
insb
xorb
add
or
lahf
rcl
es
in
pop
pop
add
lret
sbb
clc
xor
inc
ja
mov
ror
fnsetpm(287
ret
add
inc
rclb
xchg
push
loopne
negl
imul
jb
clc
fiaddl
lods
call
loopne
lods
or
jp
or
movsb
add
roll
cmp
jbe
sbb
and
mov
jecxz
test
mov
add
js
xor
popf
daa
loop
fdivrs
insl
cmpsb
ficompl
and
orb
jae
mov
shl
sub
mov
inc
jbe
popa
jp
mov
pop
sub
aas
cmp
add
aad
rolb
out
jns
mov
aas
stos
andl
sahf
filds
pop
hlt
sbb
test
pop
mov
push
dec
call
push
test
sbb
sahf
ljmp
ret
loopne
cmp
push
sbb
scas
push
jg
add
nopl
jle
add
insb
xor
mov
adc
sbb
sub
jno
loopne
inc
icebp
push
shll
enter
xor
pop
in
mov
inc
mov
stos
sbb
jle
jb
add
sub
ds
ljmp
scas
jmp
pop
mov
cmpb
xor
shrb
cli
jb
dec
push
iret
and
fwait
ljmp
std
and
mov
enter
ja
xchg
pop
inc
mov
call
push
in
in
cmp
pop
mov
push
call
call
outsb
and
cmp
leave
repz
cs
mov
push
ja
xor
xlat
sub
mov
adc
pop
add
pop
or
loopne
add
adc
pop
jno
bound
adc
ljmp
mov
xchg
xchg
add
cmp
fsub
mull
repz
sub
dec
gs
add
lock
lret
xchg
add
push
dec
or
jns
loopne
std
cmc
add
mov
sbb
aam
sbb
outsb
mov
int3
cs
add
jmp
leave
add
or
lcall
fisttps
lods
cmp
mov
fs
xlat
xchg
pop
add
and
cmpsb
push
and
arpl
mov
mov
mov
add
popa
xchg
dec
inc
js
in
adc
dec
in
aas
push
clc
addb
loopne
push
lods
pop
in
daa
mov
inc
clc
adc
mov
mov
push
mov
jo
arpl
fwait
subb
mov
call
scas
mov
fdivrl
cmp
cmp
mov
and
inc
mov
cltd
loope
xor
pop
push
mov
data16
icebp
call
push
bound
and
inc
push
xor
imul
add
mov
jecxz
xor
leave
cmp
mov
mov
movsb
je
add
mov
stc
sbb
mov
adc
scas
jle
leave
imul
lret
push
lahf
cld
faddl
ljmp
in
xchg
sub
pop
dec
adc
push
sarb
js
cmp
pop
mov
dec
stos
int3
mov
aam
sub
fs
mov
pop
mov
push
jbe
mov
mov
add
mov
pop
ror
pop
sbb
leave
xor
dec
pop
or
das
jle
jp
pop
jecxz
call
adc
sub
jno
dec
mov
pop
out
adc
mov
add
movsl
sbb
add
cmp
out
outsb
or
jne
add
add
dec
mov
inc
pop
dec
cmp
mov
lods
add
lods
mov
ror
pop
scas
mov
popl
sub
rcrl
sub
pop
mov
rcrl
in
inc
lret
jle
les
ffreep
stc
enter
cwtl
adc
mov
pushf
add
lods
xor
mov
shll
std
pop
push
sbb
sub
xchg
fdivrl
movb
inc
xchg
arpl
ljmp
aas
cmp
pushf
fstps
faddl
jo
or
mov
inc
dec
inc
jg
adc
mov
mov
stos
mov
popl
xchg
cltd
andb
sbb
jg
mov
add
pop
mov
jb
sub
int3
jl
roll
gs
xchg
or
push
test
adc
push
xchg
dec
sbb
or
sti
aaa
add
aad
and
xor
or
push
cwtl
je
call
push
test
and
in
adc
loop
mulb
loopne
aam
sbb
out
cli
das
icebp
push
bound
sbb
cmp
popa
and
xchg
sbb
addr16
sbb
in
cmp
inc
adc
dec
mov
les
mov
add
loop
data16
movsl
jno
enter
jg
rolb
add
adc
add
pop
inc
adc
addr16
test
sub
mov
es
add
pushf
insb
in
mov
add
adc
or
das
cmp
add
mov
fidivrs
or
sbb
and
mov
inc
rcrb
inc
ljmp
js
push
add
xor
fidivl
sti
add
push
ja
sub
sub
rol
movb
dec
stos
push
xchg
cmpsb
sub
mov
add
mov
ret
fmull
scas
sub
or
rcrl
fcompl
lock
pusha
ret
test
int
xor
fists
cmpsl
in
pop
xor
pop
lods
xor
mov
add
mov
dec
sub
inc
jl
add
mov
popl
inc
mov
movsl
push
aas
add
lods
je
add
push
out
sahf
or
int3
add
or
pop
cmp
or
mov
xchg
xchg
stc
add
push
jmp
clc
nop
add
jge
mov
loopne
push
mov
add
int
rcr
insl
loope
push
sbb
movl
popf
shl
adc
scas
add
add
add
sbb
lret
add
xchg
cmp
add
jno
sbb
fwait
pushf
pop
pop
cwtl
mov
call
xchg
push
lods
inc
addb
jnp
fwait
scas
mov
fcmovbe
xor
flds
in
add
mov
dec
dec
stc
loop
jg
xor
jmp
ja
testb
mov
lds
out
jmp
popf
mov
das
loopne
fmuls
shll
sbb
aas
inc
pushf
push
out
sbb
inc
mov
and
add
andl
aam
scas
pop
dec
bts
rorb
xor
sbb
imull
adc
les
add
and
xchg
aaa
xorl
push
dec
jl
inc
xlat
or
sbb
adc
cmpl
nop
push
and
ret
mov
pusha
bound
sbb
add
rorl
xor
add
adc
sub
jge
shl
call
sub
add
cli
roll
adc
add
mov
mov
push
and
and
xor
push
or
and
xchg
sbb
movl
outsb
add
iret
out
insl
or
pop
sub
roll
push
xchg
or
inc
outsb
jg
loope
cmpsb
sub
add
outsl
std
adc
and
rclb
inc
shll
xchg
lds
jbe
pusha
jg
jl
sub
push
jns
arpl
xchg
mov
pop
add
and
xor
push
pop
push
inc
insb
pushf
adc
sbb
movsb
inc
add
push
mov
cmp
in
je
repnz
mov
xchg
mov
and
push
ljmp
add
lods
andb
and
ror
fnstcw
mov
inc
push
mov
js
or
shlb
test
push
test
in
arpl
repnz
jo
stos
sub
sbb
ret
sbb
xor
test
loop
xchg
stc
lret
cli
sbb
adc
negb
clc
jp
add
xor
je
jle
js
and
push
fldenv
mov
or
jbe
xlat
adc
fldt
pusha
xor
mov
inc
mov
add
das
mov
adc
in
js
and
rclb
and
rol
add
mov
adc
repnz
lods
or
in
call
or
mov
sahf
fstpl
push
xor
mov
add
ljmp
cltd
mov
sbbb
fldenv
sbb
sub
les
pop
jecxz
xchg
in
dec
subl
bnd
xchg
or
in
outsb
test
imul
cmpsl
stos
popa
in
add
adc
and
add
add
cmp
dec
fs
xchg
jp
cmp
cmp
das
cmpb
pop
mov
push
test
adcl
jns
mov
xchg
sbb
cli
inc
mov
adc
add
mov
mov
xor
and
mov
orb
and
or
add
scas
xor
xchg
js
adc
xchg
inc
dec
inc
je
mov
mov
or
sub
test
xor
int3
inc
mov
push
add
notb
jp
mov
jg
ret
add
fildll
std
or
add
jl
inc
dec
cld
mov
sub
jo
xor
inc
ret
xadd
lcall
add
insl
cmp
and
sub
jp
push
add
lret
pop
cwtl
dec
in
imul
mov
xor
lcall
scas
jg
jle
mov
mov
sbb
pop
and
add
test
les
jo
xlat
cld
inc
inc
push
adc
pop
jp
sbb
add
jo
das
mov
loope
cmp
xchg
mov
pusha
jmp
and
and
inc
sahf
pop
push
and
je
test
jo
shrb
ret
jge
and
dec
mov
insb
add
mov
add
lock
stos
jnp
lock
add
xchg
dec
xor
shrb
or
fiadds
xchg
dec
add
lods
call
inc
cmp
out
inc
es
add
pop
pop
dec
sub
mov
push
jl
mov
aad
pushf
mov
in
cmp
in
sub
mov
push
andb
sbb
les
inc
mov
int
mov
ljmp
xchg
xchg
xlat
faddl
xchg
dec
enter
xlat
mov
ffree
jmp
leave
xchg
and
jge
pusha
lcall
mov
and
dec
mov
arpl
inc
mov
and
xchg
es
test
xchg
xlat
mov
mov
mov
cmp
cmp
mov
les
fsubs
xorl
int3
mov
adc
decl
inc
les
out
add
imul
ljmp
nop
push
mov
sbb
idivb
in
xchg
pop
fwait
jne
or
jl
call
mov
and
mov
loopne
xchg
mov
xor
jne
add
shlb
add
stos
cltd
test
rorb
jo
lods
xor
and
scas
je
mov
or
loopne
cwtl
lret
sbb
clc
mov
clc
sub
pushf
add
cmp
sbb
test
es
into
adc
pop
or
cmp
push
nop
in
xlat
sub
xor
mov
cli
jo
subb
or
imulb
mov
adc
test
aad
add
loop
in
or
lds
add
clc
shl
cwtl
lock
add
xchg
sub
lret
add
cmp
nop
mov
repz
je
jae
cli
scas
add
jbe
in
out
jo
xor
cltd
jns,pt
subb
mov
sub
lea
and
pop
add
adc
stos
aaa
sub
loopne
xchg
clc
sbb
hlt
in
jnp
or
push
and
add
mov
xchg
and
rorb
repz
pop
xchg
adc
push
stos
arpl
cmp
add
repz
cwtl
pop
in
cmp
pop
add
push
adc
das
fstpl
test
scas
inc
jmpw
xchg
xor
aad
add
xchg
lret
es
ret
xchg
mov
clc
jecxz
add
mov
xlat
xor
inc
sub
mov
aam
rolb
sbb
fcomip
xchg
jmp
pop
add
popa
addb
inc
xor
cmp
das
mov
test
push
fcompl
jmp
sub
mov
nop
pop
dec
add
or
addl
push
pop
int3
loopne
jg
xchg
adc
add
pop
add
testb
sub
dec
fnsave
add
ja
lahf
aaa
ret
add
and
aam
add
pop
test
add
std
out
sahf
push
cli
inc
iret
shlb
add
sub
out
loopne
movsb
inc
cli
jno
add
push
mov
add
jge
jg
or
in
sbb
dec
out
jne
push
sub
shl
lahf
pop
pop
cld
lods
add
cmpb
sti
xlat
mov
cmp
xchg
and
sub
add
sub
mov
mov
repz
add
sub
mov
stos
nop
rorb
lock
icebp
pavgw
fldt
fidivrl
xchg
pop
or
and
cmp
sub
add
outsl
cmpsb
add
cmp
fsub
jecxz
js
test
push
jmp
iret
leave
cmp
mov
sub
jp
adc
inc
jns
dec
push
dec
jae
pop
jnp
jg
pop
xchg
loope
lock
pusha
inc
push
fildll
and
xchg
sbb
pop
shl
arpl
andb
cld
loope
mov
hlt
adc
add
or
inc
add
stos
push
sub
adc
jge
enter
sbb
lcall
mov
data16
push
cmc
sbb
orb
pop
jecxz
or
test
inc
mov
add
and
test
push
add
setbe
dec
sarl
xor
sbbb
add
pop
mov
push
jo
cli
pusha
mov
ss
inc
inc
pop
repnz
frstor
jg
cvtpi2ps
sub
and
pusha
fcoml
nop
add
fstps
mov
nop
clc
imul
dec
mov
or
es
out
adc
push
or
cmp
push
and
pop
mov
cli
pop
cmp
adc
pop
add
push
pop
cmpsb
scas
cli
rolb
sbb
into
add
jo
and
out
jl
dec
clc
or
jns
subb
adc
in
sub
adc
add
je
or
xor
xchg
pop
insb
pop
add
or
ficoml
push
cmp
sub
je
add
cli
jne
stos
jp
add
adc
mov
insb
add
mov
sbb
subb
inc
push
add
repz
mov
mov
inc
cmpsl
loopne
test
add
stos
jle
push
test
rolb
add
nop
add
cmp
stos
and
ds
sbb
rorl
add
in
js
and
xor
test
adc
add
les
mov
add
add
lods
mov
cmp
clc
adc
in
lods
popa
xchg
push
xlat
add
pop
ret
and
mov
cld
pop
lcall
jne
popl
xor
clc
test
mov
xchg
hlt
negl
add
fstps
orb
iret
sbb
and
cwtl
int3
orb
xor
hlt
mov
repz
scas
xchg
add
push
out
lret
dec
inc
cmc
out
rolb
mov
popa
push
xor
sbb
inc
cmpsb
cmp
add
add
and
icebp
dec
hlt
cmp
scas
add
sbb
inc
in
pop
inc
mov
test
inc
pop
jae
mov
inc
inc
jno
sub
inc
mov
jge
inc
mov
mov
cld
and
verr
inc
aam
sbb
jle
add
jbe
es
daa
fsubr
add
add
popa
hlt
sbbb
lock
cmc
and
iret
and
fwait
or
xor
int
dec
pop
cwtl
addl
imul
mov
push
test
pop
and
jae
movsl
std
sbb
fwait
mov
stos
insl
add
pop
sbb
add
out
int3
sub
mov
test
and
or
xor
cmc
or
inc
data16
sarb
insl
add
ret
mov
jg
add
xchg
add
test
sbb
pop
mov
sbb
mov
decl
mov
cmp
inc
adc
xchg
aaa
js
cmp
jg
lock
out
xchg
add
mov
into
dec
ret
aam
push
divl
sbb
pop
pop
mov
jg
sbb
mov
outsb
daa
mov
and
sub
adcl
call
and
xorl
aam
xchg
cmovs
add
lcall
cmp
pop
and
sti
mov
add
movsb
mov
arpl
cltd
or
push
cmp
cmp
mov
add
or
add
mov
adc
ret
mov
inc
arpl
roll
lcall
fnstsw
jns
sub
hlt
adc
push
pusha
xchg
add
test
mov
shr
popa
push
jmp
sbb
add
mov
adc
jp
rcrb
lcall
iret
push
in
daa
push
or
xor
push
je
mov
pop
lock
leave
dec
cli
push
mov
rcrl
lods
jge
add
dec
sbb
mov
xchg
cmp
mov
cmp
sets
mov
and
pop
jl
in
sub
imul
cwtl
mov
adc
imul
push
jge
push
mov
mov
daa
mov
das
fiaddl
icebp
imul
cmc
orb
cmp
adc
pop
xchg
stos
pop
mov
cmp
or
cmc
rolb
test
lcall
and
pop
ret
test
popf
cmpsl
add
out
std
add
lock
inc
add
repz
dec
and
iret
adc
sub
imul
lds
std
jle
and
xchg
pop
xor
sbb
andb
dec
pop
push
lret
arpl
pop
add
sub
ds
mov
roll
cmpsl
scas
or
lds
sbb
add
adc
and
sbb
cld
mov
nop
adc
inc
gs
and
push
rolb
jno
lret
out
jnp
sbbb
mov
sub
mov
sub
lret
int3
xchg
jb
clc
or
mov
idivb
mov
push
jae
jnp
sub
shl
and
aas
mov
ds
pop
pop
lds
add
inc
test
out
sar
xor
xor
lods
je
xchg
pop
mov
lods
cmpb
add
mul
mov
mov
pop
roll
and
les
xacquire
add
sub
push
add
xchg
mov
int3
sbbb
add
ret
mov
in
jbe
push
cmp
addb
mov
add
nop
loope
nop
adc
and
addb
mov
push
jl
and
sbb
mov
jo
dec
cmpsb
inc
imulb
clc
fiadds
mov
xchg
ret
lret
add
xor
ja
dec
jge
jo
cmp
sub
add
push
inc
pop
shlb
jg
lods
clc
subl
add
js
add
cmp
pop
imul
call
das
or
add
xchg
scas
dec
jae
pop
xor
dec
pop
add
fsubs
dec
lahf
pop
das
jle
scas
mov
rcrb
or
or
or
fldenv
mov
bswap
jns
addb
jp
or
je
and
sbb
addb
jno
test
fucomi
in
add
lock
lods
add
inc
rol
jno
add
test
mov
add
test
or
imul
or
aad
and
inc
add
es
cmp
fs
fwait
push
push
dec
test
stos
add
stos
jmp
jecxz
cwtl
fucomp
out
loop
inc
inc
jb
inc
push
push
mov
imul
fwait
clc
repz
ljmp
adc
call
arpl
and
mov
add
cmp
pop
scas
and
and
in
add
gs
into
sub
adc
mov
pop
or
add
bound
shlb
pop
popa
xlat
orb
mov
pop
pusha
jg
sahf
add
in
add
mov
out
lock
add
loop
push
pop
cmp
fs
jb
movsl
std
aaa
pop
adc
inc
mov
xchg
or
fsubrl
in
inc
out
mov
jno
add
jle
push
loopne
lods
test
cwtl
in
mov
xchg
ret
adc
sar
pop
push
in
jno
add
jg
rcr
and
insl
push
inc
push
imul
mov
jp
pop
mov
sbbb
jecxz
cmpb
jo
jmp
add
xor
and
jp
sahf
jns
and
roll
pusha
jno
push
mov
test
or
xchg
mov
xchg
push
inc
push
sbb
dec
cmpsb
mov
mov
pop
add
fsub
movsl
jl
shlb
and
mov
mov
cld
pop
dec
xor
xor
mov
in
clc
xorl
and
push
lea
jae
js
jp
xorb
add
jnp
cmp
es
nop
xchg
adc
pop
ret
push
inc
orb
cld
rolb
add
jl
nop
xchg
movsl
pop
jns
mov
adc
and
adc
adc
pop
inc
or
fucomp
popa
add
push
add
inc
push
push
push
ja
insl
pop
fsubp
das
sti
cwtl
sbb
stos
push
add
push
jb
scas
imul
cmpsb
add
jns
mov
and
mov
setp
mov
mov
daa
aam
fldenv
jno
lods
insl
xchg
add
imul
ja
cld
cmp
sbb
pop
xor
adc
lea
pushf
bound
fs
jmp
in
js
mov
mov
cmpl
add
ret
jl
and
repz
xlat
rcll
mov
popf
add
xchg
jge
jp
and
pop
inc
incb
stos
out
lcall
adc
push
push
mov
adc
aas
mov
aam
mov
add
int3
fnstenv
out
in
cmp
jge
std
jmp
lods
fs
aas
or
or
jbe
push
fdivs
xchg
and
daa
popl
mov
push
cltd
btsl
sub
or
shl
adc
pop
repnz
and
andb
enter
popf
or
add
xchg
imull
adc
lock
cli
push
shll
jne
mov
mov
ss
aas
sub
sbb
cs
push
pop
push
add
int3
adc
loope
xchg
aaa
ficomps
dec
data16
bound
add
pop
mov
jnp
mov
push
jo
sub
test
or
xor
in
and
int3
mov
or
and
in
leave
push
adc
adc
popa
inc
pusha
lret
dec
sub
in
daa
sub
jo
add
in
or
call
sbb
vpmacsswd
mov
roll
fildll
add
or
ss
xor
testl
or
mov
movsb
iret
xor
rolb
fbstp
adc
mov
mov
sub
aas
mov
dec
dec
sbb
sti
sbb
push
and
pop
jo
mov
sbb
loop
pop
enter
cmp
loope,pn
shrb
add
adc
mov
ret
pusha
pop
and
xchg
fildll
les
dec
pop
nop
test
enter
xorl
test
out
xorb
sbb
jb
jecxz
scas
pop
lock
sbb
popf
pusha
nop
mov
jecxz
cmp
cmp
and
aaa
ja
aam
inc
sub
cmp
cmp
push
mov
scas
dec
mov
sti
ljmp
mov
sbb
xchg
sbb
adc
lock
push
add
lods
cmp
daa
push
pop
je
fwait
and
test
sub
movsl
shrb
push
pop
das
rcrl
and
mov
pop
jmp
fnsetpm(287
or
jne
and
xor
add
jmp
subb
or
adc
jl
sbb
pop
scas
and
es
mov
xchg
jns
mov
or
and
stc
sbb
lret
jbe
repnz
adc
iret
add
push
sbb
mov
or
pusha
shlb
mov
add
cmp
pop
xchg
stos
mov
add
add
and
and
addb
loopne
mov
shlb
and
mov
mulb
in
push
enter
mov
pop
sub
shlb
mov
js
outsl
pop
xchg
pop
add
add
das
add
mov
push
jnp
mov
mov
lcall
adc
push
xlat
sub
lds
aam
add
pop
and
cwtl
orb
jne
mov
dec
cmpb
or
mov
inc
and
xchg
scas
add
jmp
inc
nop
sub
into
push
jl
dec
xchg
pop
adcb
sub
repnz
int
test
jmp
in
push
sub
lret
adc
pop
sub
inc
sub
stos
sub
pop
add
bound
lds
and
add
ss
push
insb
orl
pop
into
add
sub
cvtps2pd
pop
add
leave
rclb
aaa
pop
lods
out
shrb
sar
movsb
clc
daa
clc
fadd
sbb
mov
cmc
into
mov
and
test
and
mov
add
mov
lret
pusha
rolb
push
imul
icebp
lahf
pop
fcoml
cmp
sub
adc
in
loopne
sub
mov
pushf
add
in
sub
into
or
mov
add
sub
dec
aaa
gs
cs
cmp
dec
dec
inc
push
add
sahf
imul
push
mov
stc
pop
inc
mov
sahf
mov
and
xchg
mov
cmpsl
sub
leave
push
pop
push
flds
das
lret
aaa
test
ret
ret
int3
cmpsb
adc
and
pop
in
std
cmpxchg
add
repnz
jnp
mov
das
test
dec
pusha
loopne
mov
into
hlt
add
mov
xchg
mov
inc
out
cmpl
loope
mov
or
mov
or
dec
inc
aaa
pushf
or
or
sub
inc
and
or
scas
adc
fwait
xor
pushf
add
cmp
jge
mov
or
ss
test
pop
inc
roll
push
test
jp
insl
hlt
and
seta
insb
cmp
lahf
or
cmpb
dec
adc
inc
popa
cmp
add
lds
add
aaa
std
push
and
mov
js
inc
sarb
add
out
sarb
and
or
cld
inc
or
add
inc
dec
add
clc
cmp
cwtl
enter
mov
xor
mov
xchg
aaa
out
mov
jecxz
mov
inc
or
aad
in
movsb
mov
push
cmpsl
sbb
sbb
ret
rcll
loope
adc
loope
daa
stc
test
and
stc
fistpll
lods
sbb
pop
mov
inc
aad
cmp
dec
jmp
dec
ret
test
test
push
jnp
dec
repnz
jge
mov
inc
xchg
ret
xchg
sub
arpl
test
cmpsl
lret
mov
xchg
add
cmpl
sbb
ja
sbb
jg
rorb
das
mov
xor
insb
jno
mov
push
mov
aaa
lods
adc
notl
inc
rcll
and
mov
cmp
mov
dec
fcomp
rolb
mov
aam
push
cmp
lret
movsb
cmc
push
insb
add
insb
push
sbbl
cmp
mov
jge
sbb
pop
imul
jle
and
xchg
and
adc
lock
mov
pop
mov
aas
cmp
fistps
iret
popf
add
mov
fcomip
test
scas
aad
lahf
cmc
sbb
jno
movsl
inc
js
test
xor
andb
divl
cld
adc
dec
mov
add
popa
adc
add
sub
push
pop
shll
lods
mov
sub
adc
adc
rol
outsl
sar
out
inc
and
data16
add
push
cmp
sbb
dec
pop
push
mov
sbb
stos
and
dec
push
in
add
sub
sub
data16
add
xchg
cwtl
push
sbb
add
mov
les
mov
add
inc
xorb
in
movsl
add
sbb
mov
roll
js
setl
orl
jo
das
and
fnstcw
popf
add
dec
inc
xchg
les
mov
cwtl
sahf
cmp
sarb
inc
ret
xchg
cmp
inc
pop
aaa
daa
sub
call
add
in
stc
cmp
add
cmp
cmpb
lds
in
add
sub
pop
mov
test
sub
mov
fcoms
add
lret
cmp
popa
add
sbb
jo
and
pop
and
add
aaa
jbe
enter
mov
push
js
loope
fnstcw
inc
lock
add
pop
add
xchg
test
add
xlat
add
mov
add
pop
add
inc
pushf
fisubrs
mov
dec
xchg
cmp
fmuls
lcall
and
adc
add
and
mov
push
mov
xchg
or
data16
xchg
and
cmp
add
cltd
pop
mov
inc
test
dec
int
sub
lock
inc
xorl
add
and
push
aas
mov
xchg
imul
mov
dec
cwtl
mov
pop
mov
or
lea
add
inc
loope
mov
imul
cld
cmpl
leave
movntps
inc
out
xor
push
mov
cmp
push
xor
pop
mov
daa
adc
xchg
cwtl
dec
jmp
sub
add
inc
rorb
movb
cmp
hlt
and
loop
pusha
iret
xor
or
test
loopne
mov
mov
sbb
aaa
pop
daa
in
cmp
mov
fisttpl
inc
xchg
popf
imul
xchg
out
add
fwait
pop
sbb
adc
rolb
movsb
aad
add
cmp
push
mov
clc
pop
leave
xor
fsub
pushaw
mov
sub
adc
sbb
scas
rol
xchg
movsl
cwtl
insb
ds
fisttpl
movsb
or
dec
or
fs
repnz
mov
int
add
loope
xchg
and
mov
les
je
frstor
ljmp
inc
push
mov
imul
enter
jl
or
mov
stos
mov
lcall
pop
jmp
lcall
addb
xchg
mov
std
in
add
shll
xor
mov
addl
sti
pop
pop
clc
or
sub
adc
aad
add
dec
mov
into
add
xchg
or
jl
add
jbe
mov
add
mov
or
int3
mov
or
mov
cmp
daa
xchg
and
push
push
fidivs
dec
xor
mov
or
clc
ret
jbe
xchg
pop
je
bound
adc
int
push
shr
sarb
sub
data16
or
mov
rolb
sub
sub
pop
adc
pavgb
pop
push
mov
jbe
dec
mov
sarb
jp
or
and
lcall
xchg
into
in
iret
lret
inc
mov
dec
aas
xor
loop
jne
int3
pusha
adc
in
sub
ljmp
jae
pusha
shrl
mov
sub
lock
xchg
push
pop
xchg
inc
sbb
xor
inc
test
dec
mov
int3
stos
or
add
and
lcall
pop
rcl
out
sub
add
loop
push
in
pop
push
add
pop
lock
or
sub
data16
xchg
aas
add
js
push
adc
ret
adc
roll
push
mov
pop
and
jg
mov
push
mov
mov
cmp
pop
popa
push
iret
mov
aam
enter
call
xchg
lcall
test
and
js
out
sub
adc
sbb
shlb
sub
sahf
fnclex
xor
xchg
and
stos
icebp
mov
pop
into
xorb
cwtl
dec
adc
or
les
add
push
fs
shll
cmp
test
daa
pop
movlps
or
aas
hlt
push
add
jg
mov
and
and
push
mov
repnz
mov
insl
enter
add
xor
and
add
dec
inc
rcrb
test
icebp
movsl
xor
rolb
mov
sub
mov
fiaddl
xor
xor
cmp
int
sete
aad
jl
mov
imul
push
lret
mov
mov
icebp
fimull
cwtl
sub
mov
adc
sbb
in
insl
outsb
add
mov
mov
test
cmp
xor
dec
inc
adc
ret
and
xchg
iret
cmpsl
loope
xor
dec
add
insl
add
and
jb
push
adcb
add
out
iret
add
pushf
mov
mov
rolb
mov
sub
fcoms
orl
add
movsb
ret
cmp
add
js
inc
adc
mov
dec
xchg
mov
in
les
dec
xchg
and
mov
ljmp
jns,pn
pushl
cmp
test
xor
std
push
mov
pop
cmpsl
rcrb
jbe
pop
add
ss
fbld
daa
or
inc
cmp
adc
lods
push
inc
add
fwait
addr16
ds
sub
dec
sbb
shlb
add
dec
call
shlb
mov
or
cmp
cmp
aam
es
js
add
lock
mov
or
sub
sti
xlat
inc
mov
roll
aaa
lock
push
aad
or
jno
push
push
out
and
inc
mov
into
and
fdivs
add
dec
stc
xor
jmp
jg
push
xlat
add
adc
lods
popa
outsl
sub
sub
fildl
int3
arpl
fmul
push
in
xchg
mov
add
inc
jno
sbb
aas
mov
pop
inc
cmp
xchg
js
inc
jnp
sub
lcall
daa
mov
push
js
and
les
xor
adc
push
orl
add
adc
rolb
sbb
or
adc
outsb
cmp
push
ljmp
das
mov
je
adc
leave
cwtl
sbb
inc
lret
pop
push
loop
ds
mov
xor
js
dec
mov
push
mov
add
push
lds
fdivs
scas
and
sbb
push
push
or
loop
cmp
cwtl
add
xchg
cmp
lcall
js
pusha
cltd
adc
pop
adc
test
lret
and
mov
cmp
sbb
icebp
insl
in
xor
xchg
rol
add
cmp
inc
adc
clc
aam
in
cwtl
int3
add
cmp
sbb
mov
loope
mov
setle
mov
vucomiss
int3
and
and
mov
sbb
xor
pop
mov
jp
jbe
adc
rcrl
dec
xchg
sub
shlb
rcrl
sub
pop
jg
enter
or
scas
mov
dec
loope
mov
mov
lods
pop
xor
ret
cmp
and
xchg
sbb
mov
pop
mov
mov
cmp
add
mov
aaa
mov
fnsave
push
xor
pusha
or
pop
adc
fwait
test
mov
out
lahf
pop
test
mulb
lret
xchg
orb
jmp
cmp
mov
mov
nop
adc
fmuls
adc
pop
rolb
js
stc
push
cmpsb
scas
aas
sbb
leave
es
mov
xchg
aam
lahf
pop
push
mov
jo
loopne
icebp
inc
fmull
jg
pushf
mov
push
test
js
rcrb
fists
dec
mov
cmc
add
dec
dec
outsb
in
adc
iret
test
cli
enter
push
pushl
ret
cmpsb
test
test
in
popa
sub
sub
mov
push
add
sub
xor
leave
daa
les
inc
xchg
in
pusha
sbb
fisttpl
mov
pop
aas
inc
aam
stos
mov
jg
lds
mov
mov
iret
das
leave
scas
push
ret
push
xchg
mov
and
jp
or
dec
cmp
loop
inc
and
mov
in
add
repnz
je
std
hlt
fldenv
shlb
sbb
pusha
pusha
loop
cmp
adc
jb
sub
nop
push
xchg
mov
leave
add
mov
popf
pop
gs
data16
xor
sub
fstl
hlt
push
mov
hlt
hlt
mov
movsb
pop
adc
jl
sub
mov
mov
and
xchg
aaa
out
mov
lret
mov
js
popa
pop
jge
shll
adcl
xchg
xchg
sti
add
hlt
clc
add
fstpt
pop
movsb
sub
lock
mov
mov
add
add
adc
inc
add
push
ljmp
mov
xor
mov
leave
xchg
mov
fs
hlt
nop
sarl
enter
mov
rcll
pop
stc
and
mov
repnz
and
nop
dec
popa
aam
add
repz
test
add
jns
pushf
jns
sbb
in
push
xor
loopne
sti
xor
or
cmp
add
adc
push
mulb
sahf
imul
xchg
ljmp
jle
pop
pop
and
or
pop
dec
mov
sub
mov
test
xor
or
pop
aam
inc
dec
push
adc
cmp
sarb
add
and
push
adc
jecxz
adc
ficoml
les
adc
cmpsb
in
cmp
or
mov
and
aad
add
in
mov
sahf
sti
and
stos
shl
test
lahf
adc
ljmp
mov
sahf
push
cltd
or
inc
cwtl
xor
cmp
loope
fstpl
pop
lcall
fwait
aam
jmp
xchg
push
sub
pop
rolb
jae
inc
or
push
pushf
arpl
icebp
cmp
pop
add
mov
mov
mov
rcr
and
xor
inc
sub
push
add
lcall
repnz
add
sbb
js
rol
or
cwtl
shlb
push
icebp
pusha
or
decb
in
movsb
lods
ret
or
loopne
lret
lcall
jae
mov
in
dec
mov
loop
xor
push
outsb
shlb
pop
popa
mov
fcoml
add
xchg
sbb
cwtl
call
ds
sub
ljmp
nop
ret
inc
mov
dec
xchg
pop
scas
aas
repz
xor
aam
loop
loopne
push
cld
sarb
pop
mov
xor
rolb
shrb
pop
ds
or
pusha
subb
fwait
jl
sub
cmp
jae
add
shl
lods
add
stos
sti
cs
add
jno
sbb
stc
jb
add
ja
add
sbb
in
adc
shr
sub
cltd
and
sub
orb
or
ficompl
pop
stc
lret
ror
popf
xchg
and
roll
ficomps
das
inc
adc
in
dec
and
shll
cmp
add
cli
leave
movsb
mov
sti
xorw
loop
xor
test
inc
mov
pop
decb
xor
mov
hlt
adc
call
push
jg
int3
adc
and
bound
pop
sbb
popa
or
cwtl
and
rcll
lret
fisttps
mov
xchg
add
pop
pop
jnp
ret
aad
push
das
hlt
sub
dec
jl
insb
insl
or
and
scas
rolb
adc
subl
and
pop
xchg
scas
lcall
push
push
cmp
sub
adc
jecxz
scas
sub
in
les
cmp
orb
outsl
adc
stc
mov
es
movsl
mov
ss
mov
mov
push
loopne
rcll
adc
mov
dec
stc
add
and
mov
pop
bound
or
inc
push
adc
gs
dec
pop
add
loope
pusha
cmp
enter
test
cmp
push
shlb
push
cwtl
adc
mov
mov
jle
and
call
orl
cld
daa
adc
add
add
pop
adc
and
pop
mov
enter
in
int3
sbb
pop
xchg
repz
cmc
ljmp
pop
outsl
movsl
mov
stc
mov
fwait
adc
or
mov
dec
jo
or
mov
add
adc
mov
inc
nop
and
xchg
insb
sahf
mov
int
faddl
xor
xor
aad
rcrb
enter
mov
adc
into
fs
dec
lods
adcb
add
xchg
call
pop
mov
arpl
and
test
fisttpl
in
mov
mov
xchg
inc
mov
addb
sbb
aad
repnz
icebp
dec
add
xchg
int
insb
add
push
ljmp
cmp
pop
add
jl
xor
pop
or
mov
pop
stos
and
je
pusha
repz
lock
fldl
in
cwtl
push
or
sbbb
xor
imul
pop
push
adc
cmp
add
jmp
loop
andb
xor
cltd
sbb
mov
xor
mov
loopne
or
fsubr
in
push
adcb
mov
inc
hlt
xchg
popf
xor
mov
jecxz
inc
mov
aad
lea
cli
adc
jb
popa
insb
pop
dec
jo
push
xorl
mov
mov
shrb
test
or
imul
jl
inc
imul
push
je
test
pusha
das
and
dec
push
cmc
cmpsl
cltd
pop
dec
les
push
push
inc
fcomip
sbb
test
and
rcrl
flds
fsubrs
pushf
sbb
adcb
test
sbb
out
inc
sahf
jne
pop
sbb
adcb
jmp
lods
add
pop
ljmp
inc
fstpt
adc
mov
dec
sub
dec
add
aad
nop
out
ret
into
andl
mov
scas
xor
add
in
sub
cmp
out
cmc
cmp
std
jne
movsb
add
shl
cli
mov
and
mov
addl
xor
vmread
hlt
and
cmpb
push
add
repz
mov
out
insl
rolb
cs
dec
mov
ret
icebp
leave
hlt
into
popa
add
dec
cmpsb
iret
cmp
cmp
addb
mov
cmp
jnp
mov
dec
inc
fs
pop
pop
and
lods
nop
add
mov
and
jge
daa
or
or
and
jo,pt
inc
add
add
pop
mov
ret
nop
fldt
sub
push
add
add
inc
pop
push
mov
test
cmp
aam
jns
and
mov
jno
add
inc
pop
fidivrs
jle
mov
or
mov
push
imul
inc
jmp
mov
js
loopne
xchg
fmul
cmp
xchg
rol
jns
roll
sbb
pop
cmpsl
or
rolb
or
in
mov
add
test
and
aaa
add
add
xchg
fisubl
rol
das
aam
push
add
cltd
inc
push
divl
testb
sahf
xor
sub
les
add
push
pop
mov
imul
dec
add
fimuls
mov
out
enter
pop
mov
mov
sub
fwait
outsl
xor
pop
add
cmpb
dec
jno
into
movsl
and
repnz
ja
sbb
and
jle
adc
aaa
in
xor
cmp
or
mov
add
faddp
enter
test
fwait
int3
in
mov
or
mov
lahf
xor
int3
sbb
and
lods
dec
push
jp
fildll
cmpsl
add
andb
orb
jae
add
push
sub
and
call
mov
mov
pandn
add
imul
jo
outsb
add
in
sbb
push
push
loopne
shll
dec
inc
dec
add
push
add
sbbl
mov
add
clc
push
in
bound
and
mov
mov
inc
les
add
fisubrs
sub
pop
arpl
add
addr16
add
js
xor
pop
xchg
in
iret
ret
adc
mov
xchg
mov
popa
shlb
dec
dec
mov
inc
mov
jecxz
mov
je
lret
aam
sub
pop
add
xor
pusha
andb
inc
stc
inc
jmp
pop
dec
sbb
cmc
js
nop
xor
mov
pop
jp
dec
jl
add
fisttps
jb
leave
adc
or
sbb
mov
sub
inc
and
sbb
jbe
adc
jge
jo
cmpsb
add
xchg
int3
sbb
jb
push
orb
and
fcmovb
ja
int
add
in
add
push
add
add
int3
cmp
add
push
push
push
inc
shlb
dec
cmp
push
add
xchg
jbe
push
push
rep
loopne
mov
push
dec
push
cmp
iret
inc
outsb
bound
sti
inc
sub
mov
mov
jne
roll
xorl
in
push
sub
cli
fs
add
jb
out
push
mov
cmp
jbe
add
fisubs
xchg
mov
or
add
or
sub
or
enter
popf
fidivrl
in
outsl
adc
lds
pop
lods
fcoms
ret
loope
and
das
add
scas
repz
add
push
popf
ret
je
jg
and
add
sub
add
jecxz
sub
pop
xor
orb
mov
cld
mov
mov
dec
jne
add
lcall
paddsb
mov
aam
pop
xchg
jmp
and
sti
xchg
mov
sbb
and
mov
scas
movsb
out
inc
mov
test
cmpb
jno
and
jb
mov
add
mov
cmp
dec
sti
addl
xor
push
lcall
ja
pop
js
xor
push
pop
leave
mov
fbld
jae
inc
add
pop
jmp
cmp
cmpsb
push
les
ds
add
arpl
cmpsl
rorb
sbb
pop
loopne
cmp
xor
mov
int3
or
orb
sbb
dec
outsb
lahf
pop
or
push
cmp
inc
xchg
xlat
xor
adc
jae
and
sti
rclb
add
fwait
lock
mov
pop
add
andl
push
xchg
outsb
aas
out
cltd
mov
adc
int
repz
add
jno
in
sbb
scas
pop
aas
stc
repnz
imul
test
push
mov
lcall
lfs
inc
push
xor
das
push
movsl
sub
sbb
andl
lock
es
inc
jl
sub
add
mov
jnp
add
in
jo
add
dec
add
scas
sub
in
sub
movsl
and
dec
add
mov
popa
jns
push
adc
mov
fidivrs
rcrb
push
adc
pop
cmpsb
rclb
movsl
pop
sub
add
ret
mov
addb
add
hlt
dec
or
and
clc
mov
add
mov
stc
mov
jp
sub
es
dec
mov
in
pop
ja
xchg
mov
test
cwtl
add
and
mov
insl
push
int
cmp
addr16
mov
out
dec
add
frstor
decb
orb
add
mov
pop
or
sub
mov
dec
int3
dec
add
pop
hlt
push
push
pusha
pop
lock
in
cmc
xor
fdiv
cmp
cmp
cld
cld
or
push
xor
and
xchg
fdivs
fcmovbe
xchg
rcrl
cld
sub
stos
in
faddl
aad
das
mov
pusha
rorb
mov
out
test
add
mov
bound
loope
xchg
mov
jae
stos
rcll
push
mov
lods
cli
in
mov
mov
daa
push
mov
and
nop
cmp
cmp
punpckhwd
sahf
in
int
and
add
mov
rclb
hlt
mov
dec
mov
dec
rol
test
hlt
push
pop
add
js
push
add
in
and
xor
cli
inc
xor
adc
insl
repz
jecxz
fldl
stos
addr16
add
jge
push
add
subb
shr
sahf
add
pop
push
xor
xor
and
aaa
packuswb
add
pop
loop
adc
iret
pop
adc
jl
add
pusha
inc
fmul
fists
cli
add
adc
ja
js
mov
add
fsubp
inc
mov
or
test
pop
imull
loopne
or
ret
add
push
or
and
fwait
into
jle
ljmp
movl
lahf
aad
sbb
divb
add
ljmp
jp
add
cmp
mov
mov
popa
push
xchg
rclb
incl
push
sub
xchg
loop
inc
adc
fdivl
and
and
sub
repnz
inc
adc
add
testb
clc
mov
add
test
add
gs
sahf
mov
jo
inc
or
xor
jne
add
mov
jno
pushf
aam
xor
icebp
arpl
dec
dec
pop
test
mov
inc
adc
jbe
sub
call
sub
xchg
inc
sub
popa
jp
subps
add
mov
add
pop
lock
dec
xor
push
sub
lock
test
sub
push
add
les
es
jb
js
lret
xchg
and
mov
xor
rcrb
clc
pushf
add
jp
hlt
pusha
aad
es
mov
rol
ljmp
xchg
mov
lods
js
pop
sub
mov
ss
xchg
push
in
ror
and
add
repz
sbb
pusha
lret
mov
call
jge
int3
and
xchg
xor
pop
mov
adc
or
push
stos
pop
dec
dec
js
sarb
mov
lret
sbb
dec
stc
enter
push
insb
fidivs
xchg
negb
dec
sbb
lds
mov
mov
pop
rclb
jbe
out
leave
push
push
add
outsb
scas
mov
sarb
xor
add
sbb
lahf
cmp
dec
sbb
xor
pop
xchg
movsb
inc
inc
rolb
icebp
add
pop
pop
mov
cmp
mov
not
or
cld
or
out
fisubrl
test
sbbb
lods
add
imul
pop
or
sbb
sub
pop
jp
add
mov
iret
mov
mov
mov
scas
inc
nop
add
add
sub
cmc
into
push
ret
push
hlt
add
inc
fsubs
and
stos
addr16
dec
and
add
out
sub
xor
imul
jle
insb
mov
movsl
rcl
add
mov
jge
inc
adc
lret
repnz
jbe
in
add
mov
sahf
mov
mov
outsl
das
popa
shll
fidivl
leave
outsl
adc
incb
add
rol
jp
jl
pop
fdivrl
loopne
push
adc
ret
mov
outsl
and
inc
mov
xchg
mov
stc
orl
ret
inc
mov
rcrl
sbbb
inc
jecxz
mov
aam
mov
mov
inc
inc
mov
mov
jge
push
nop
stos
sbb
lea
xchg
and
xorb
mov
mov
jl
add
roll
add
pusha
push
lret
mov
adc
inc
push
xor
or
fldcw
inc
mov
add
scas
sbb
adc
ret
jl
outsl
add
xor
push
push
ret
ljmp
divb
pop
int3
dec
popf
sub
inc
and
and
adc
sub
sub
add
sub
adc
mov
mov
adc
and
or
test
test
add
mov
sbb
jo
mov
xchg
dec
push
scas
fisttpl
mov
mov
das
mov
dec
ret
mov
sub
add
loope
add
dec
xlat
adc
mov
sbb
lcall
jmp
das
mov
daa
pop
arpl
mov
test
pushf
sbb
jg
adc
je
lahf
fwait
mov
cmp
out
add
xchg
sbb
add
fisttpl
jae
in
ret
ljmp
sub
sti
lds
and
rcll
pop
mov
movsl
add
icebp
jbe
lea
inc
mov
les
lods
mov
add
push
psrld
loop
iret
xchg
sbb
xor
fiaddl
sub
add
push
add
js
xor
into
inc
xchg
add
sub
fisttps
mov
add
sarb
xor
sti
mov
aam
out
ljmp
jl
mov
pop
and
adc
das
sbb
clc
push
aad
aaa
push
dec
enter
jle
dec
scas
push
inc
not
add
lods
inc
inc
push
movsl
shlb
arpl
leave
loope
sub
movb
xor
pop
dec
pop
dec
and
pop
cmc
xchg
cmp
xchg
aaa
lret
enter
cmp
cmpsl
inc
pop
add
sbb
push
idivb
icebp
jg
cld
mov
push
dec
mov
push
adc
fildl
jecxz
push
dec
stos
loop
data16
movhps
sbb
inc
icebp
sub
add
dec
nop
pusha
pop
gs
lds
mov
push
es
js
add
and
inc
mov
mov
mov
dec
movl
jno
int
cs
jnp
ret
and
mov
mov
add
xchg
out
push
add
cli
mov
add
cs
movsl
cmp
dec
cmpb
inc
ss
xor
cwtl
ja
add
xchg
popa
lret
clc
test
add
mov
aaa
in
sub
and
add
push
mov
or
mov
daa
fisubl
push
pusha
stos
jle
sub
or
mov
pusha
rcrb
lods
cmp
std
mov
cld
add
jbe
dec
xlat
mov
or
fs
movsl
jns
pop
push
add
cs
add
push
pop
rorl
and
jl
shr
add
and
imul
test
insl
add
jmp
push
and
pop
out
push
test
add
clc
div
nop
outsb
rclb
jns
xor
adc
sbb
adc
hlt
add
sbb
clc
scas
add
push
inc
cli
ret
add
mov
movsb
sub
inc
pop
pop
ljmp
mov
sbb
jge
push
mov
add
jecxz
inc
int
jo
sub
add
pop
mov
ret
inc
dec
in
pop
cmp
pushl
dec
sbb
cmp
loopne
inc
fiadds
xor
mov
pop
imul
add
loopne
rcr
xor
and
test
mov
xor
hlt
adc
adc
iret
ds
pop
popa
xor
jbe
xor
aaa
into
mov
adc
cld
add
mov
or
inc
inc
adc
xchg
sub
fucom
nop
push
jle
push
cmp
mov
push
enter
sbb
jns
popa
xchg
and
and
mov
add
cmp
add
pop
add
dec
push
push
ffree
dec
or
add
inc
in
aam
addr16
push
pop
cld
lds
std
cmp
sar
pop
mov
nop
push
lcall
ret
dec
outsl
mov
sub
in
lret
mov
rclb
mov
jmp
sub
aas
adc
xor
repnz
es
push
xchg
shrb
and
lahf
add
out
xchg
movsb
jae
add
jno
dec
adc
daa
sbb
lahf
arpl
scas
cmp
push
add
jg
mov
pop
fwait
add
shll
or
adc
jo
sbb
les
insl
pop
inc
dec
out
into
mov
inc
pusha
inc
add
addb
stos
and
out
mov
insb
movsb
push
cmc
stc
add
lret
ficoms
sub
mov
pop
and
nop
mov
loopne
nop
in
or
fistl
and
pop
lret
mov
fistl
add
add
mov
loopne
testb
movsb
push
lock
addb
add
sbb
add
pop
and
cmp
dec
or
rcll
jg
add
push
fcoml
cmp
addr16
repnz
test
and
clc
add
arpl
ret
repnz
or
mov
and
add
dec
push
shrb
or
cwtl
in
dec
add
andb
cmp
add
xor
inc
add
insl
mov
fcomp
mov
incb
add
and
add
cmc
inc
sbb
int
call
dec
cwtl
and
inc
pop
mov
notl
psrad
mov
push
adc
cmc
mov
and
sub
add
call
dec
xchg
faddl
sbb
push
cs
add
into
sub
jle
dec
mov
movsb
sub
add
pop
jo
out
pop
xorb
ds
inc
lods
and
mov
jmp
sbb
sbb
in
xchg
or
add
jge
jmp
mov
jge
add
mov
stc
stos
loopne
mov
repz
add
dec
sar
mov
inc
mov
mov
add
cmpsl
cmpsb
inc
xchg
and
call
inc
dec
jecxz
mov
add
inc
jbe
fs
ja
cs
fsubrl
lods
shl
scas
lock
sub
sbbb
or
dec
and
add
insl
sub
cwtl
jmp
test
nop
sub
xor
pop
insl
sbb
jg
mov
pushf
add
lret
cmp
push
lock
int3
add
test
ret
test
cwtl
aam
lret
adc
pop
mov
xlat
inc
or
mov
jecxz
daa
and
add
subl
fs
push
push
loop
bound
jge
fwait
lmsw
push
movsb
jge
test
jmp
int3
je
push
sti
dec
jge
add
aaa
js
stc
daa
push
xlat
sbb
sbb
bnd
mov
shll
in
icebp
stc
xor
mov
popf
shlb
mov
je
pop
pop
add
jae
push
cs
mov
xorl
inc
les
je
cli
andb
int3
cmp
fwait
in
push
out
dec
mov
fsub
pusha
or
test
mov
out
loopne
jae
inc
add
push
in
loope
xchg
jmp
sti
mov
jb
pop
lcall
rcrb
lods
pop
or
and
bound
adc
repnz
add
shrb
sub
inc
add
inc
xor
push
xchg
xor
cmpsl
add
cwtl
sub
arpl
fmull
mov
mov
jle
jns
and
xor
repnz
mov
and
add
or
cmpsl
sub
add
lods
dec
pop
mov
fiaddl
sub
xor
stos
add
add
cmpl
and
mov
jnp
jno
in
mov
inc
cmp
lahf
es
pop
lock
push
cmp
bound
xorb
pmaxub
je
mov
notb
mov
pop
hlt
stos
mov
push
xchg
push
add
xchg
out
xor
push
hlt
aad
mulb
loopne
or
jae
mov
test
push
aas
ror
sti
mov
pop
jns
jo
dec
inc
add
js
cmpsb
rorb
lods
mov
ss
pop
mov
imul
add
lahf
jmp
call
sbb
push
adc
jge
adc
int
sub
push
sahf
pop
pop
push
pusha
jl
in
adc
cmp
inc
inc
jbe
stos
mov
rolb
mov
negl
imul
dec
cli
andb
add
pop
repnz
in
imul
call
nop
aas
pop
ficoml
andl
dec
les
movb
mov
pop
shlb
or
cmc
fsts
fmuls
lss
cmp
and
dec
pop
cwtl
loop
add
orl
jne
push
sarb
hlt
jbe
mov
int
cmpsb
pushf
mov
add
add
push
mov
pop
int
add
test
loopne
dec
lcall
andl
in
jnp
pop
xor
popf
inc
mov
mov
loope
or
jae
add
fsubl
pop
sbb
and
imul
nop
mov
jecxz
add
add
push
xchg
jnp
aad
jg
shrb
scas
mov
mov
add
pop
stc
aaa
add
pusha
or
mov
mov
or
cmpsb
cmpsb
fcmove
addl
fistps
and
add
rcl
cmp
stos
mov
adc
fldcw
adcb
push
jp
jnp
lret
imul
sub
aam
les
shll
xchg
arpl
in
in
outsb
popa
ret
je
sub
mov
mov
sub
xlat
and
push
inc
popa
sub
push
add
xchg
mov
and
fisubl
mov
jbe
jge
mov
mov
frstor
mov
xchg
inc
dec
and
jb
daa
cmpsl
add
andw
jg
cmp
mov
add
clc
mov
sbb
sti
sub
iret
add
js
mov
xchg
test
pop
cmp
and
adc
add
pusha
fcoml
addb
daa
imul
and
add
xlat
rolb
sahf
clc
faddl
mov
inc
xchg
sub
scas
add
inc
add
cmpsl
mov
test
mov
add
and
fdivr
or
fnsave
repz
or
push
data16
push
hlt
sub
xlat
cmp
lahf
jo
mov
jge
mov
repnz
cwtl
outsl
insb
add
add
hlt
or
andl
dec
sarl
loopne
add
lds
fisubs
add
insl
jmp
fmuls
push
add
in
xor
rcrl
pushf
enter
test
loopne
bound
call
outsl
push
fstl
stos
adc
xor
pop
subb
jecxz
sbb
shl
rolb
cmpps
inc
push
sub
iret
mov
cmp
xchg
jle
cs
mov
andb
cmp
loopne
add
mov
or
test
adc
jnp
dec
outsb
in
ss
xor
xor
les
or
dec
jmp
rolb
pop
push
cmc
shl
jo
mov
mov
cmpsl
sub
pop
arpl
xchg
lret
stc
cmc
pusha
xchg
call
ficoml
icebp
cmp
add
jb
mov
loope
sub
xor
in
scas
add
mov
loope
outsl
add
cwtl
xlat
int
pop
push
or
sahf
adc
nop
push
add
subl
add
stos
cmpsb
je
adc
stos
shl
mov
cltd
jo
movq
cld
jle
dec
aas
cwtl
and
xchg
sub
mov
movsl
andb
mov
sub
jnp
negl
mov
mov
in
or
sahf
inc
loopne
add
and
shr
add
sbbl
mov
movsb
add
jmp
nop
cli
pop
add
mov
adcb
mov
jecxz
mov
sti
inc
fnsave
jnp
jae
mov
add
sbb
add
cmp
inc
pop
fwait
xchg
jns
dec
sbb
jae
pusha
jge
jnp
das
inc
adc
cmp
ret
cli
add
mov
or
gs
inc
adc
pop
cmp
or
and
cld
pusha
rclb
sti
in
in
push
mov
ret
mov
nop
psubd
popa
out
add
mov
add
push
add
cmp
jae
jb
fs
leave
mov
sarb
add
nop
jns
add
movsl
arpl
add
add
aam
cmpsb
add
add
mov
mulb
pushf
cmp
push
or
and
xor
jl
add
dec
out
fsub
jno
mov
xor
insb
cmp
and
or
add
fcomps
repnz
cmp
xchg
icebp
lods
repz
daa
jnp
xorl
add
inc
and
shl
rolb
jp
pushf
inc
rcrb
add
cmp
js
sub
mov
cmp
push
jmp
cld
js
adc
xor
dec
lcall
add
subb
lods
in
add
js
das
cmp
jl
xchg
out
les
pop
pop
into
and
inc
js
pusha
out
or
in
xchg
and
test
pop
popa
mov
and
pop
add
and
cli
mov
ficoms
jmp
xor
sub
pop
and
inc
stos
sub
push
test
push
div
out
add
add
aad
out
out
in
add
dec
imul
setae
sbb
adc
push
cmpsl
std
add
sub
shll
shlb
mov
and
adc
push
mov
repnz
fbstp
rcrb
lds
add
je
push
gs
or
leave
loope
inc
lcall
rcrb
sub
push
jmp
hlt
xor
fcmovu
mov
out
sub
dec
fcom
xor
pop
mov
or
push
mov
jge
sub
mov
cmp
dec
cmp
jge
cmp
mov
jb
incl
ret
adc
cld
mov
cli
pushf
add
in
xchg
popa
mov
add
outsb
or
loopne
popf
mov
inc
lock
and
inc
mov
push
add
ja
pusha
lds
add
aad
mov
enter
push
dec
sub
ficoms
loope
addl
fistpll
or
mov
dec
pop
lock
loopne
dec
pop
jo
call
add
mov
xchg
mov
rcr
scas
add
leave
inc
mov
cmp
shlb
loope
js
add
lret
popf
xor
cmp
and
sbb
sub
loopne
dec
fsubrs
add
push
stc
data16
pop
add
add
cwtl
pop
add
mov
pop
xchg
pop
cmp
sbb
mov
adc
repnz
stos
dec
adc
lea
loopne
test
sahf
or
es
and
scas
mov
or
loopne
add
jno
cmp
jmp
psubd
xor
sbb
repnz
adc
mov
mov
imul
cmpsl
fimull
pushf
and
push
insl
out
or
clc
andl
das
or
scas
cld
fcomp
sbb
or
in
enter
sub
sbb
add
inc
out
push
mov
mov
pop
add
or
test
mov
rolb
fdivp
cld
repnz
pusha
xor
roll
movsb
inc
push
dec
enter
pop
lcall
sbb
sarb
gs
lods
inc
add
loope
sbb
cwtl
mov
mov
or
lret
add
cmp
mov
xor
sbb
fdivl
sbb
push
sub
fucomip
and
push
nop
add
adc
add
and
or
mov
jb
daa
testb
lret
mov
jo
jne
adc
and
dec
add
or
test
add
jmp
movsl
adc
mov
and
mov
inc
hlt
rcl
cwtl
sbb
shll
inc
out
loopne
sub
xchg
loopne
sbb
add
adc
jg
out
add
lea
aam
add
fidivrl
sub
add
mov
pushf
sbb
add
popf
fs
cwtl
xor
jb
cmp
add
xchg
gs
out
dec
or
jne
adc
cmp
push
mov
add
pop
pop
out
cmp
adc
aad
les
pusha
fisubrl
je
shlb
mull
bound
inc
es
push
mov
inc
sbb
rorl
int3
loopne
dec
and
fiadds
mov
stos
pop
add
out
dec
pop
out
or
push
add
cmp
ja
xor
jp
add
movsb
add
pop
mov
xor
pop
push
xor
roll
test
aas
enter
xchg
adc
fsubs
pop
mov
adc
mov
mov
xchg
dec
shll
sub
lods
mov
mov
add
inc
add
add
pop
jl
fldenv
movsb
add
jnp
rol
adc
jmp
mov
sti
int3
xlat
inc
xor
dec
add
jns
je
lock
xchg
add
lahf
popf
mov
inc
add
adc
cwtl
call
push
add
cmc
push
sub
mov
cmpb
push
or
and
aam
push
and
add
xchg
lcall
xor
jmp
dec
push
push
addb
sbb
scas
mov
cwtl
add
adc
jg
cmp
js
fsts
and
sbb
roll
out
call
je
test
jae
dec
sbb
into
in
xor
add
enter
iret
add
push
push
addb
stos
shrb
popf
dec
test
dec
lahf
fcmove
test
dec
bound
mov
fdivrp
jmp
lods
pop
pop
cltd
pop
ds
jge
scas
push
push
ret
adc
add
lods
aad
cmpsl
push
ret
xor
inc
push
imul
loopne
test
outsl
negb
movsl
mov
imul
hlt
add
fisubrl
lods
shrb
test
shlb
sub
sub
sarl
addr16
dec
add
out
pop
xchg
hlt
insl
add
push
cmpsb
insb
mov
divb
cmp
loop
push
push
les
scas
roll
nop
jne
cli
mov
ret
mov
pop
negl
pop
inc
lret
insl
outsb
into
add
mov
mov
jo
add
mov
hlt
shr
aam
add
pushl
in
lret
or
imul
add
or
movsb
pop
stos
lea
subl
sub
cli
cmp
pavgw
add
in
aaa
and
or
sbbb
mov
stc
add
fcomi
add
ja
adc
sub
cmpsl
mov
sbb
inc
add
mov
or
xchg
clc
mov
cmpsl
jle
test
stc
pop
test
incb
jb
push
imul
mov
andl
sbb
daa
cmc
sub
test
lods
arpl
pop
lods
pop
push
mov
orb
pop
icebp
adc
push
shl
pmulhw
popa
rcrb
movsl
add
cmp
pushf
mov
dec
mov
in
ja
repz
push
inc
push
inc
add
mov
mov
adc
adc
fiadds
aad
or
mov
dec
mov
or
aad
add
loop
push
shlb
adc
mov
mov
adc
lret
sub
jl
and
ret
jl
add
sti
imul
cmp
ret
sub
xchg
es
jb
sbb
adcb
arpl
popf
push
pop
jle
pushf
fisubrs
add
add
aas
shll
imul
push
call
add
sub
jp
and
sub
add
outsb
mov
mov
xchg
and
xor
push
orl
pushf
add
aas
add
xchg
js
pop
push
mov
and
ret
outsl
add
lea
cmp
sub
xchg
lock
xor
stos
in
mov
jp
sbb
int
ret
aad
sub
push
lock
xor
lea
xchg
add
das
or
cmp
xor
scas
inc
fstpl
cmp
or
pushf
clc
adcb
jnp
lods
sahf
addr16
cwtl
jno
int
add
shlb
insb
inc
lds
mov
adc
jb
push
insl
stos
add
and
gs
mov
pop
hlt
mov
out
mov
mov
or
inc
outsl
xor
add
or
add
xchg
adc
sbb
add
add
sub
lcall
pop
add
repz
hlt
add
jnp
mov
dec
mov
lock
mov
scas
inc
xor
mov
inc
or
rclb
add
and
add
mov
cmpsb
cmovb
lods
jecxz
cli
pop
sarb
and
jb
or
push
sbb
and
dec
lahf
push
in
shrl
add
cmpl
or
test
mov
jbe
ficoml
addr16
icebp
das
lds
pop
je
cmpb
xor
insb
stos
aam
popf
shlb
sub
cmp
sbb
sub
xor
push
lock
adc
ret
add
nop
sub
add
mov
sbb
les
dec
outsb
cmp
nop
fildll
mov
dec
ljmp
fsubrs
jbe
push
cwtl
test
jg
add
arpl
popa
sub
aam
das
stc
adcl
negl
cmp
sbbl
cld
sub
or
mov
pop
jb
jno
dec
popa
mov
or
add
cmpsl
mov
es
outsb
add
push
xor
inc
push
xchg
add
mov
lods
xor
outsb
inc
fdivrp
call
iret
mov
sbb
clc
mov
sbb
jmp
lea
add
pop
rcl
cmp
subl
mov
imul
repnz
or
mov
inc
sbb
ret
adc
add
or
add
cmpsl
je
add
jmp
or
add
mov
jns
push
in
add
lret
ss
adc
and
adc
data16
addb
push
cmp
inc
lcall
std
sbb
adc
incb
push
xchg
mov
add
mov
xchg
mov
mov
xchg
out
jae
sbb
loopne
dec
xchg
mov
in
stos
and
sbb
out
cmp
enter
in
inc
sahf
or
test
andl
xor
int3
add
pop
inc
in
cmpsl
add
into
pushf
add
out
and
mov
pusha
xchg
sub
xorb
add
fildl
inc
cmpsl
nop
xor
testb
xor
mov
xchg
jge
add
int3
and
push
out
push
ss
mov
add
test
push
jns
xorl
movsb
gs
pop
mov
pop
inc
mov
add
jnp
in
shrl
ret
add
mov
cltd
add
aam
loopne
xor
add
push
cmpl
xor
sub
pop
lds
mov
dec
les
subl
clc
fisubl
stos
inc
mov
aaa
dec
enter
loope
movsb
mov
call
jbe
cs
sbb
in
loope
and
loopne
in
sbbl
aad
mov
in
insb
jle
pop
xor
in
add
daa
and
divl
cmp
cmp
insb
add
mov
repz
sub
mov
mov
ds
popa
push
xchg
or
pushf
add
sub
ds
inc
inc
jmp
scas
cmc
add
arpl
push
in
or
pusha
inc
das
mov
scas
or
and
cld
enter
xor
pop
lahf
pusha
in
test
adc
imulb
lahf
mov
xchg
sbb
cld
inc
fbstp
and
ret
and
imul
outsl
mov
add
inc
cmp
stc
adcb
cmp
mov
inc
lds
dec
and
jb
cmp
add
mov
mov
sbb
mov
sub
and
mov
out
shll
fisttpl
inc
or
push
jo
sub
mov
add
jns
mov
fisubrl
mov
dec
ljmp
sbb
aaa
cmovp
jb
inc
adc
int
pop
and
in
add
je
adc
cmp
repz
pop
add
rcl
sbb
add
mov
dec
mov
lds
push
pop
roll
xchg
inc
sahf
adc
xchg
add
lea
inc
pusha
sbb
fdivrl
inc
imul
and
mov
or
jge
jne
out
call
pop
add
xchg
pop
movb
fistps
andl
xlat
repz
sbb
sbb
add
jg
or
hlt
mov
add
xor
jl
add
jbe
push
adc
imul
add
lods
mov
fists
neg
lods
sbb
outsl
iret
into
xchg
mov
jp
int3
and
std
inc
test
outsl
loopne
jo
add
stos
repz
jmp
enter
cmp
add
cmp
ss
loopne
and
out
rcl
jns
jbe
add
push
jl
lcall
add
pushf
ffreep
popf
test
sub
push
push
inc
pop
cmp
cmp
sbb
and
dec
lock
inc
mov
push
push
mov
and
xchg
adc
or
fiadds
xchg
repnz
pop
xchg
fucomp
aas
pop
add
stos
out
rol
cld
add
addl
inc
rclb
cmp
icebp
adc
mov
test
mul
insl
sub
cmp
lea
jp
or
sub
mov
stos
push
mov
aas
bound
add
scas
clc
push
gs
xor
lods
adc
adcb
dec
sub
add
xor
insl
adc
xchg
or
and
push
sub
sub
mov
add
lret
adc
dec
idiv
imul
andb
or
add
pop
or
push
xor
shrl
and
sbb
mov
sbb
das
stc
sbb
inc
js
add
push
dec
sbb
sbb
mov
fidivrl
daa
nop
dec
add
xchg
jbe
jecxz
js
add
push
adc
push
jae
shlb
sbb
mov
add
jle
add
lea
pusha
call
jo
arpl
int3
out
sbb
call
dec
inc
and
clc
add
cmp
mov
mov
andb
add
or
in
add
xor
rcrb
xchg
test
jno
fs
jns
push
add
in
push
das
repz
mov
sub
es
aaa
mov
jl
pop
in
mov
push
mov
popf
loopne
inc
test
scas
add
inc
cmp
cmp
xor
outsl
and
cmc
nop
outsb
jo
scas
sti
inc
fildl
mov
cs
cmpsb
or
in
leave
cmp
ret
pop
rclb
add
dec
nop
ss
pop
js
add
lods
mov
js
cld
add
and
inc
push
nop
or
lock
lahf
add
sub
sti
pop
call
arpl
clc
loopne
jge
jbe
rorb
or
cmp
push
addr16
xor
lods
mov
pop
add
push
add
cmp
int3
add
jl
fisubrl
enter
rcrl
inc
lahf
push
push
addl
add
jp
and
adc
mov
orl
stos
hlt
pop
dec
dec
lock
mov
add
mov
add
mov
or
loope
add
xor
push
cmp
loop
add
adc
sbb
dec
lock
fnstsw
mov
add
iret
ret
insl
add
leave
add
movsl
mov
add
dec
push
mov
add
mov
outsl
fmul
ljmp
push
hlt
sbb
test
sbbb
add
lret
push
ficoml
outsb
jmp
nop
in
shrb
clc
arpl
cmc
loopne
cmp
lret
fdivrs
imul
popf
add
dec
cmp
add
jle
add
iret
sbb
xor
pop
gs
add
lock
dec
popf
out
inc
add
push
loopne
and
lock
ss
popf
adcl
sti
mov
adc
rolb
mov
fs
mov
pop
outsb
rolb
leave
jg
mov
es
stc
fwait
jge
add
dec
subl
mov
repz
add
push
push
aas
jns
lods
sbb
fildl
push
pop
movsb
subb
mov
add
mov
dec
cmp
jl
mov
add
push
and
into
arpl
adc
dec
push
call
roll
add
xchg
arpl
pusha
push
pusha
das
add
adc
dec
mov
push
in
pusha
out
mov
mov
icebp
xor
mov
rorb
dec
add
pop
sub
out
les
hlt
mov
pop
rorb
popa
mov
or
cmp
shrl
stos
imul
inc
dec
pop
add
cmp
cmc
jno
inc
gs
sbb
sub
dec
loopne
sahf
lock
pop
out
lea
test
inc
and
fs
inc
popa
xchg
stc
int3
int
jp
dec
movb
je
aam
pop
sub
xchg
roll
into
push
mov
test
and
add
push
shr
in
cmpl
dec
inc
push
cmp
pop
push
push
lock
std
xchg
add
xor
jle
sub
mov
push
jge
nop
add
andb
jl
and
iret
xor
jb
inc
bound
dec
pop
jg
add
cmp
adc
or
add
xchg
popa
out
cs
push
decl
dec
repz
mov
push
scas
xor
mov
fldt
enter
cltd
cmp
ss
sbb
fsubrl
pop
or
dec
pop
xchg
test
out
aad
sbb
sub
test
jg
xchg
xor
cmc
cmp
lea
outsl
add
inc
mov
add
cmpsb
push
lods
mov
fdiv
stos
sub
jmp
cmpsb
pop
subl
inc
push
nop
lods
add
les
jcxz
movsl
cli
inc
lahf
sub
mov
jo
add
insb
pushf
out
or
push
jae
push
mov
or
pop
lahf
add
out
nop
add
push
push
andb
mov
push
lret
add
fldcw
mov
mov
fadds
mov
mov
add
iret
inc
push
jb
add
cli
pop
lret
pusha
loop
xchg
xchg
loope
les
test
sbb
and
fdivs
call
dec
adc
pop
mov
add
stos
lret
mov
mov
mov
int3
adc
fldcw
sbb
std
sub
and
and
enter
push
aad
mulb
stos
jg
sti
bound
and
mov
inc
rcll
cli
lcall
iret
or
in
mov
sub
je
sub
dec
out
add
sub
repz
cmp
cmpl
cmpsl
movl
insb
mov
repz
lahf
push
loopne
push
push
or
lock
or
jbe
push
adc
push
loopne
add
push
add
std
mov
ret
ja
lock
add
mov
mov
cli
dec
fs
sahf
push
lods
repnz
inc
je
pushf
jb
xchg
test
inc
xorb
xchg
sbb
stos
or
inc
in
lea
push
add
sub
pop
imul
idivb
pop
push
sub
mov
repnz
push
pop
cmp
fcoms
stos
out
aas
add
and
jl
addb
les
icebp
and
xchg
adc
inc
mov
je
lidtl
test
dec
mov
mov
xchg
insb
jle
cld
gs
repnz
pusha
xchg
add
dec
fsubrl
add
mov
push
add
jle
pusha
inc
dec
cmp
add
clc
fildll
call
ljmp
mov
stc
mov
sbb
insb
xor
lret
daa
sub
js
pop
jle
cmp
push
pop
add
and
xchg
std
icebp
jp
cld
xchg
in
mov
scas
jge
sbb
in
xchg
add
cmc
pop
sub
fisubrl
push
je
fildl
lods
roll
outsl
fwait
dec
push
or
mov
add
sub
cmc
in
or
inc
jmp
adc
cmp
loope
mov
add
and
movsb
ja
jge
sub
call
pushf
push
and
cmp
sub
push
add
stos
push
mov
add
jg
push
add
stos
outsl
and
dec
add
or
sbb
dec
xor
push
push
push
movups
mov
and
push
push
sbb
iret
les
lods
sbb
jbe
sub
fs
lahf
pusha
add
loop
add
rolb
call
inc
imul
jg
adc
and
xchg
in
or
adc
pop
or
hlt
je
fwait
and
pop
inc
sbb
out
push
sub
es
fwait
add
fstl
adc
nop
add
arpl
xchg
add
loopne
sub
test
add
stc
jno
inc
addr16
dec
dec
jb
in
jle
popa
subl
into
ljmp
stos
insl
xchg
pop
or
andb
roll
inc
mov
and
nop
add
or
bound
push
lcall
mov
inc
loope
jo
xlat
xchg
sub
scas
ss
cmpsb
out
sbb
xor
push
mov
mov
outsb
mov
ret
jb
shlb
and
lods
push
mov
in
xor
inc
jp
and
jg
stc
push
outsb
rclb
in
add
sbb
jp
iret
or
push
pop
lods
sub
add
sbbb
repnz
inc
or
bound
mov
cmc
cld
es
in
rorb
pop
sbb
adc
jno
sbb
and
jg
add
shl
push
mov
add
sbb
pop
mov
pushf
fldl
das
addr16
int
mov
add
testb
rep
mov
add
xchg
bound
add
inc
test
nop
enter
add
mov
fs
xchg
mov
pop
outsb
hlt
sub
mov
add
icebp
jle
push
mov
sarb
add
int
or
push
sbb
rcrb
in
cmp
stos
jg
pop
add
xchg
shr
mov
add
enter
aaa
fs
mov
adc
inc
outsl
frstor
seta
mov
and
push
or
add
sub
push
mov
shlb
in
dec
sbb
xchg
les
test
dec
cmp
jge
cmpsb
ds
stc
or
add
rol
adc
add
cwtl
mov
dec
pushf
pop
fadds
sub
mov
je
push
test
add
fildl
mov
loop
outsb
ret
add
and
add
insb
cs
dec
jmp
add
inc
pusha
nop
dec
jl
loope
hlt
sbb
push
mov
jo
fsts
jne
sbb
add
xchg
pop
ljmp
data16
and
mov
mov
rclb
fsub
movsl
push
dec
fs
add
mov
icebp
add
int
leave
pop
faddl
scas
ret
stos
mov
stc
sbb
or
sub
dec
cmp
repnz
ljmp
add
inc
xor
arpl
sub
mov
or
orl
xor
inc
push
sbb
pushf
pop
dec
add
jl
add
add
sarb
and
xchg
orb
aam
inc
fs
vmwrite
mov
xchg
repnz
add
lods
in
ret
jecxz
xor
dec
hlt
adc
push
mov
sub
push
pop
sbb
add
cmp
inc
sub
inc
push
mov
jg
jge
into
mov
aaa
shll
sub
adcb
das
mov
cwtl
add
mov
add
iret
mov
call
add
int3
std
inc
add
or
push
add
cltd
jl
mov
adc
jne
push
repnz
sub
cmp
pop
ja
arpl
mov
dec
or
add
adc
jp
andb
daa
rcrb
cli
js
lock
push
clc
sbb
and
add
mov
cmp
add
or
jae
inc
js
lea
and
add
mov
stos
cli
push
call
fnsave
xchg
or
add
in
adcb
icebp
add
insl
lock
mov
add
andb
push
pop
xor
mov
lock
insl
inc
gs
rolb
dec
imul
lods
mov
pop
inc
mov
mov
and
jl
inc
jns
fdivrs
movsl
pop
sbb
fistps
cwtl
sarl
sti
insl
cld
paddsb
jp
add
ret
rcrb
push
lods
xlat
dec
push
jb
sbb
test
xchg
mov
jle
xchg
mov
mov
sbb
xorb
adc
add
aas
cmpsb
pop
cltd
sbb
pop
inc
add
scas
dec
ja
push
daa
jecxz
push
jno
pop
add
inc
movsb
xchg
pop
insl
sub
repz
add
shufps
jp
mov
add
sbb
ss
lock
add
push
out
pop
setns
ret
push
push
inc
add
stos
sbb
pop
iret
cmp
adc
dec
outsb
shll
mov
ds
and
push
jl
pop
add
movsl
and
pop
push
add
add
loopne
sbb
and
inc
js
add
cmpl
sbb
ds
subb
cmc
loopne
add
adc
bound
xor
xorl
imul
arpl
push
pusha
pushf
jecxz
xlat
inc
jmp
xor
shll
pop
jns
int
movsb
add
cmp
and
lds
in
popa
add
movsl
mov
xor
aaa
add
lods
sub
add
xor
xchg
xlat
and
lcall
dec
adc
mov
pop
push
fwait
scas
mov
sbb
ss
or
dec
jge
add
sbb
cmpxchg
lods
cli
mov
ret
in
out
add
jle
dec
mov
or
stos
xor
mov
lods
loope
fbld
cltd
or
imul
insl
outsb
add
mov
das
ds
add
sub
jne
pop
andb
lret
movsb
add
mov
ss
sbb
les
sub
or
sahf
cs
mov
add
stc
outsb
mov
sti
cmpsb
lock
sbb
add
xor
scas
clc
loopne
or
stos
pop
loop
add
xchg
jle
add
cmpl
aam
je
dec
fcompl
cmp
xchg
inc
test
popf
pop
jae
imul
push
and
or
add
jmp
cld
stos
test
nop
jns
mov
dec
inc
xchg
push
out
sbb
mulb
decl
in
adc
mov
mov
sub
mov
es
enter
mov
aaa
repz
mov
push
or
xor
jecxz
imul
or
inc
xchg
mov
lret
sbb
add
inc
xchg
pop
adc
xchg
fsub
sbb
sbb
sbb
dec
test
add
fstl
add
arpl
jnp
jo
ret
lret
sbb
insb
xchg
in
cmp
sbb
mov
es
or
and
arpl
push
dec
rclb
inc
cwtl
hlt
cwtl
shrb
or
sub
add
icebp
gs
dec
les
add
pop
iret
inc
sbb
jp
leave
in
fadd
mov
cld
pop
dec
pop
jo
andb
dec
push
movsb
mov
or
jmp
add
push
mov
cmpsl
stos
mov
jle
xor
and
mov
loope
fs
orb
xor
sahf
mov
andl
icebp
cmp
fsubrl
inc
mov
xchg
add
int
or
test
sbb
mov
xor
mov
jo
add
lods
mov
or
cmpb
scas
mov
test
arpl
sbb
lret
jmp
jne
sbb
gs
jno
enter
lea
push
cmp
test
sbb
rclb
sub
add
add
loopne
jne
cmp
add
inc
fisttpl
data16
add
mov
xlat
adc
xchg
sbb
pusha
or
cmpsb
sub
cld
pop
dec
enter
push
mov
test
mov
pop
in
or
mov
lods
dec
rolb
dec
sbb
mov
sub
add
fucomp
push
xor
add
sahf
ds
add
mov
sub
loope
pop
cmp
fwait
scas
bound
imul
pop
jle
jae
fcomps
add
out
pop
loopne
add
jmp
mov
sub
loopne
cmp
jl
xchg
pop
pop
mov
and
mov
je
inc
or
sub
lock
jmp
mov
dec
sarl
filds
cli
aas
xor
mov
ret
add
enter
jl
jbe
cmp
push
cmp
clc
add
add
mov
movsb
jmp
pop
jmp
add
pop
jbe
add
daa
fs
stc
call
add
xchg
in
mov
jl
mov
pushf
and
and
ds
add
js
and
dec
mov
sbb
xchg
fsts
sti
rol
xor
dec
sbb
push
leave
jmp
dec
mov
inc
xchg
sti
ja
test
xchg
pop
jns
test
dec
outsl
xchg
add
adc
cli
and
and
add
fstpt
xchg
xchg
mov
mov
fildl
and
mov
pusha
mov
add
std
test
push
jb
jno
sbb
stc
jne
push
add
je
pusha
out
roll
call
jns
mov
cltd
fsubr
xor
test
or
fwait
out
js
xchg
icebp
hlt
jbe
je
or
mov
pop
add
mov
push
ret
jl
roll
cmp
jp
je
jg
mov
xchg
jae
fiaddl
idivl
pushf
pop
rorl
repz
mov
sbb
aad
jmp
inc
jb
add
mov
mov
popa
in
push
add
ss
aad
and
add
jnp
movsl
add
imul
ss
mov
sbb
mov
cs
mov
ds
jnp
mul
adcl
xor
push
std
into
adc
icebp
add
ret
push
out
sub
jg
push
addb
shr
aaa
add
shlb
pop
clc
jmp
sarl
and
out
fimuls
outsb
dec
add
adc
ret
push
xor
sub
in
mov
jae
pop
add
xchg
es
lods
or
ret
xor
sub
cmp
je
dec
cmp
mov
scas
mov
and
add
add
iret
jne
ja
jg
repnz
xchg
rorb
mov
adc
test
test
jbe
and
pop
imul
insl
mov
inc
pushf
and
mov
xor
xor
dec
das
sbb
lret
addr16
ficomps
lret
faddl
pop
dec
jae
cmp
jb
push
dec
in
shr
gs
sub
mov
fiaddl
mov
mov
xorb
data16
cltd
or
add
outsl
pop
mov
test
and
inc
outsl
push
fsubrl
sarb
out
mov
mov
xor
sub
leave
xor
test
mov
push
xchg
mov
loopne
fsubrl
mov
out
outsl
add
daa
sbb
popf
xor
lock
insl
pop
cld
jo
push
xor
ret
adc
add
fdivrs
sub
jae
push
pop
xchg
out
enter
sbb
add
add
jle
test
lea
push
pop
mov
sub
fdivrs
or
add
loopne
leave
mov
fisttpll
inc
or
sbb
adc
ss
mov
popa
dec
xor
outsl
cmp
sti
and
repnz
sbb
aas
in
mov
outsb
and
cmp
add
pop
lods
cmpsl
inc
addb
or
dec
movsb
pop
pop
inc
xchg
scas
mov
inc
pusha
adcl
sub
fisttps
lds
mov
jmp
nopl
push
cwtl
dec
pop
mov
and
and
mov
stc
in
clc
add
cwtl
or
mov
push
fsub
xchg
stc
lods
sub
mov
out
mov
shlb
sti
add
ret
inc
mov
popf
pusha
cmpsl
xlat
jg
add
test
push
fldl
add
xor
mov
xchg
add
pop
inc
mov
mov
sar
and
jo
mov
inc
fucom
lods
aaa
out
adc
fmull
mov
stc
out
pusha
mov
pop
je
jl
adc
lea
aam
push
bound
dec
sbb
imul
aas
int
add
dec
out
lret
rcl
nop
cwtl
es
mulb
inc
cwtl
adc
test
add
popa
cs
jle
add
lods
fwait
mov
shlb
adc
sub
sub
dec
mov
lea
add
scas
sahf
jg
test
mov
inc
add
push
push
jecxz
mov
bound
dec
mov
adc
push
test
xor
mov
pop
xchg
mov
pusha
ror
pop
stos
out
in
andb
or
mov
leave
nop
test
popa
lahf
leave
inc
test
sub
popl
and
aaa
subl
sub
or
xorl
xchg
sbb
lcall
insb
xlat
stc
gs
sbb
rcrb
ret
mov
fsubr
fcoms
test
xchg
mov
sbb
cmp
inc
pusha
test
call
cmp
insb
sbb
jnp
sahf
mov
popf
adc
cmpb
mov
sub
sbb
cmp
pop
jnp
sbb
je
mov
mov
fstpl
add
fisubrs
aam
cwtl
lock
rcrl
xchg
add
dec
pusha
dec
push
rolb
call
mov
xor
ljmp
mov
or
inc
sub
cmpb
add
mov
je
xchg
hlt
cli
in
xchg
mov
enter
inc
adc
lahf
mov
xchg
jmp
fadds
mov
sbb
loopne
cmp
scas
dec
mov
adc
xor
daa
hlt
sti
jp
lock
lods
push
xor
mov
mov
int
stos
xorb
mov
testl
add
addl
enter
dec
push
and
add
outsl
push
mov
inc
add
xchg
cmp
rolb
mov
inc
xchg
mov
jp
cs
inc
into
add
adc
mov
lahf
or
lcall
into
inc
mov
xor
sbb
pop
pop
push
inc
in
add
popa
mov
imul
and
mov
inc
add
adc
xchg
mov
idiv
dec
or
push
sbb
sbb
inc
test
and
cmp
push
xchg
adc
jno
add
push
repz
jg
xchg
rcrl
sbb
and
popf
cmp
sbb
adc
test
mov
push
dec
mov
sub
test
cli
mov
add
sbb
jl
or
sbb
sub
mov
in
xor
adc
cltd
add
lret
imul
mov
mov
shlb
push
nop
push
pop
push
pop
add
inc
add
jecxz
out
dec
jne
ret
jnp
adc
pop
inc
in
bound
mov
add
scas
mov
ret
leave
test
adc
xor
rcrb
lret
pushf
add
iret
fmul
shr
pop
ja
call
dec
adc
scas
pop
cwtl
sub
in
xchg
inc
and
js
lcall
xchg
sti
push
loop
addr16
inc
cmpsl
pusha
mov
sbb
das
push
jecxz
int3
int
mov
push
fsub
and
sbb
mov
out
and
cli
mov
jne
test
cmp
sbb
adc
jne
ret
sub
loope
addr16
mov
inc
cmp
sbb
addr16
fs
icebp
jno
addr16
outsl
and
push
stc
mov
shlb
mov
into
push
add
pop
inc
mov
ffree
loopne
push
mov
leave
jb
aaa
nop
movsb
pushf
adc
shrb
mov
mov
int
lahf
push
add
and
ret
test
out
push
add
ds
jge
sahf
je
mov
push
xor
pop
test
sbb
arpl
lds
cli
movsb
inc
test
pushf
or
test
sub
dec
jbe
jno
add
mov
and
mov
and
sub
and
pop
sar
add
insb
bound
popa
pop
shlb
test
push
add
subb
nop
pop
mov
jle
movsb
int3
in
add
ret
cmpsb
shll
loopne
mov
test
ret
adc
dec
sbb
pushf
and
add
adc
les
dec
xor
sbb
popf
lea
pop
push
add
orb
scas
mov
jg
mov
xchg
ficoml
pop
testl
mov
xor
or
enter
mov
dec
insl
dec
pop
in
addb
add
xor
shlb
mov
lods
cli
orl
repnz
js
sbb
stc
mov
js
pshufw
mov
mov
aas
sub
jo
inc
stc
js
cmp
in
fisubrl
call
into
orb
add
and
sbb
xor
sbb
test
dec
adc
sub
xchg
scas
fwait
jno
and
mov
imul
pop
adc
adc
jg
ret
xor
mov
mov
aad
popf
mov
push
mov
je
add
popf
mov
clc
sub
add
nop
lcall
xchg
faddl
add
add
dec
rcll
jl
sub
orb
int3
and
and
cmp
sbbb
mov
lods
add
jmp
aam
adc
jno
mov
cmp
mov
pop
jle
shl
jb
nop
clc
and
dec
inc
sub
clc
fdivs
add
xchg
dec
xchg
and
out
fisubrl
mov
inc
outsl
jne
add
xchg
sbb
sub
sbb
mov
dec
or
pop
and
dec
lds
fdivs
and
add
cli
cs
or
aam
cltd
jo
sbb
iret
add
cmp
stos
pop
negl
add
stc
lods
jbe
shlb
mov
into
sbb
sti
jmp
and
jbe
or
or
ret
sub
stos
add
sarb
inc
dec
add
jo
pop
xor
push
outsb
pop
ret
cmp
add
lcall
xor
and
inc
add
jbe
pop
xchg
add
add
fwait
rorb
out
sbb
sub
clc
push
adc
test
outsl
cmpb
add
xor
in
cmp
sub
pop
movsb
push
je
pushf
add
xchg
xchg
push
jno
dec
ds
jl
enter
add
shlb
hlt
xorb
testl
xorb
inc
sbb
sbb
jl
add
add
sub
xor
pushf
adc
les
mov
cmp
cwtl
mov
adcl
imul
or
stc
push
mov
and
fsubrl
mov
pop
mov
xor
ret
jp
in
lret
jl
jg
xor
cli
sbb
mov
ljmp
cmp
lahf
mov
xor
xchg
and
inc
xorb
and
add
mov
loope
cltd
fs
in
sub
inc
add
sbb
mov
addb
repnz
sbb
push
into
xchg
into
aam
xor
add
adc
add
rcll
mov
lahf
scas
sbb
push
push
stc
std
andb
and
or
fisubl
mov
add
lods
rcl
jne
lock
xor
lret
add
test
pushf
aad
xchg
lea
add
mov
sub
nop
or
jnp
aam
std
adc
lahf
mov
sub
sub
sbbl
add
sub
and
in
sub
add
lea
loope
testl
mov
add
push
arpl
bound
outsb
sbb
ja
andb
cld
mov
stos
scas
in
fstps
in
xor
mov
sbb
repnz
push
push
sbb
mov
call
pop
dec
or
fisttpll
nop
les
enter
aas
stc
mov
outsl
outsb
ja
add
mov
dec
pop
inc
loopne
push
and
inc
sub
sar
lods
lea
sub
adc
pusha
push
add
scas
cltd
sbb
and
add
xlat
cltd
cld
add
hlt
cmp
aam
lea
mov
jmp
mov
test
mov
je
fstpt
addl
sti
pop
or
pop
and
out
clc
xlat
loop
bound
js
add
pop
lret
fmul
pushf
rorb
addb
imul
cwtl
js
loopne
inc
movsl
add
jmp
push
lds
fmul
stos
push
out
or
fsubrl
movsb
adc
dec
and
and
stos
add
mov
add
pop
jbe
call
adc
lods
lretw
dec
fnstenv
std
and
pop
adc
cld
or
inc
xchg
xor
and
mov
cmc
xlat
and
mov
pop
addr16
mulb
add
out
xchg
add
inc
push
fcmovne
loopne
cltd
fcompl
xlat
mov
push
add
jo
lock
orb
xchg
out
cltd
sub
adcb
jae
mov
enter
subb
cltd
insb
mov
sbb
xchg
dec
fcoml
and
insl
movsb
jo
inc
stos
stos
mov
xchg
xor
mov
add
sub
loopne
push
mov
test
and
jb
notb
jno
push
cmp
sbb
pop
mov
add
cmc
jae
mov
cs
shl
fs
dec
bound
test
cltd
adc
add
lahf
add
mov
or
nop
mov
les
insb
sbbl
sub
add
out
loop
or
fdivl
ret
idivb
loop
xor
xor
lods
out
cld
xchg
xchg
mov
pusha
jb
jb
scas
sbb
jae
rolb
scas
mov
fcomps
sub
inc
xor
add
fdivl
jo
xor
dec
jno
dec
jae
in
add
fldl
mov
in
jno
sbb
add
push
test
xor
mov
adc
inc
pop
imul
cltd
jl
sbbl
cwtl
int3
cwtl
adc
lock
pop
or
mov
mov
jo
test
aaa
test
mov
imul
and
xchg
mov
xchg
dec
mov
mov
mov
enter
inc
add
mov
sub
lods
sbb
add
std
adc
ftst
and
push
pop
jp
adcb
xor
or
outsb
fisubrl
sbb
inc
or
lods
pop
les
add
push
push
nop
sbb
loope
mov
call
out
sbb
dec
or
clc
mov
rcl
add
inc
or
icebp
lahf
or
xor
adc
int3
cmpsl
out
mov
mov
repnz
xor
or
inc
inc
aad
xchg
sub
shrb
xchg
movsl
fwait
sbb
subl
lock
mov
lock
je
flds
cmp
daa
sahf
dec
jae
xor
push
mov
sti
mov
dec
cmpsb
cmc
cmp
insl
xor
mov
cmp
js
dec
dec
cmp
inc
add
mov
stc
and
inc
ds
loopne
fisttps
mov
push
cli
push
popa
add
add
add
add
call
lcall
daa
or
int3
sub
jp
mov
adc
inc
inc
jnp
loop
ret
dec
cwtl
enter
xlat
call
outsl
push
pusha
mov
imul
inc
cmp
clc
add
jg
mov
pop
das
sub
dec
aad
ja
insl
mov
gs
lds
sbb
mov
inc
cmp
andb
lock
repz
add
loop
lea
popf
scas
icebp
pop
fwait
jae
stc
jne
push
xchg
xchg
jmp
das
xor
cwtl
mov
les
loopne
xchg
cmp
add
xchg
mov
stc
lods
adc
inc
pop
int3
fnstenv
add
xchg
add
pop
mov
add
aas
rcl
mov
add
add
mov
xchg
adc
push
mov
pop
clc
enter
pop
cwtl
xchg
or
xchg
mov
outsl
loopne
push
inc
jnp
adc
int
hlt
cmp
popa
stos
cmp
mov
jns
push
adc
cmpsb
loope
cmpsl
push
adc
loope
mov
loope
xchg
push
and
mov
movsb
ret
adc
xchg
pusha
mov
ljmp
rcrl
mov
xchg
leave
aaa
jne
andb
addr16
add
mov
cmp
insl
adc
add
inc
mov
lods
mov
and
daa
gs
sbb
jns
mov
add
add
cli
popa
mov
adc
jg
push
lock
out
aas
scas
mov
or
and
cwtl
inc
rclb
cli
xchg
cld
dec
out
inc
sbb
or
shrb
hlt
add
cmpsl
xchg
push
xchg
out
pop
xlat
dec
in
inc
repnz
hlt
push
add
pushf
shlb
je
jno
lock
xchg
mov
cmp
repnz
cmp
inc
div
add
mov
repnz
cmp
shll
clc
movsb
add
mov
call
imul
ds
or
and
shl
mov
mov
push
mov
xchg
jo
mov
stc
and
sahf
call
mov
pop
cmp
in
test
dec
cmp
stc
sub
jae
or
jbe
test
mov
sar
loopne
les
inc
sub
insl
and
adc
scas
lods
repnz
stc
enter
add
in
mov
je
inc
aad
cmp
jl
call
jmp
dec
mov
xor
sub
test
fs
notb
dec
xor
add
in
xor
or
dec
jmp
and
sbb
hlt
add
shll
pushf
push
xor
xor
mov
insb
pop
sti
idivb
ret
mov
dec
incl
fs
loopne
adc
test
sub
dec
mov
sub
jb
push
jmp
js
sub
loope
pop
jl
sub
push
aam
subb
pop
icebp
shlb
fisubl
cmp
rclb
xchg
inc
jbe
inc
test
mov
mov
xchg
push
xchg
ret
add
cmp
or
dec
cld
rorb
inc
in
scas
arpl
dec
mov
pop
mov
push
xchg
push
xchg
add
add
cmp
pop
add
jnp
add
movsl
shl
pop
int3
movsl
mov
adcb
adcl
insb
pop
jmp
icebp
es
jno
push
xor
push
and
and
test
pop
jns
sahf
lock
xor
in
pop
dec
xchg
sub
sbb
inc
and
pop
ds
lahf
push
jle
mov
mov
jns
sbb
test
mov
int3
mov
add
out
mov
rorl
pop
add
sub
aaa
loop
test
mov
push
mov
jae
mov
jge
cmp
cltd
sbb
push
sbb
ss
sub
lds
and
lea
push
adc
hlt
insb
clc
mov
or
andl
add
fisubrl
in
add
pop
xchg
add
sub
and
mov
push
jmp
shll
insb
orl
or
sbb
imul
add
repnz
fs
xor
inc
or
dec
mov
fmull
out
mov
aad
jno
and
xor
clc
push
dec
push
arpl
xor
sub
cmp
cmpsb
xor
mov
pop
icebp
icebp
js
out
mov
addr16
add
fiadds
inc
jle
or
cmpb
fstpl
mov
jp
and
sub
jo
lret
lret
imul
fldenv
test
test
ljmp
add
sub
xchg
adc
hlt
adc
movsb
push
cmp
aas
and
mov
repz
mov
lcall
add
jl
mov
add
ret
adc
fidivrl
lods
sbb
cld
flds
lahf
imul
fmuls
js
jne
xor
jo
sbb
push
fwait
push
pusha
mov
les
mov
pop
addb
test
push
xchg
pop
out
insl
pusha
xor
popw
and
cmp
mov
adc
dec
mov
cmpsb
add
enter
out
add
lahf
push
mov
stos
les
push
cmc
sub
das
aas
in
pop
add
test
sar
pop
add
repz
imul
rcrb
insl
push
leave
xor
xchg
nop
sub
pop
add
mov
inc
add
sahf
mov
sbb
movsb
dec
mov
imul
outsb
inc
sti
outsb
inc
mov
nop
hlt
add
call
xor
in
bound
sbb
xchg
add
pop
cmc
je
push
pop
aam
push
sahf
pop
add
mov
cmpsl
adc
jl
xchg
pop
xor
push
in
aam
jo
adc
push
xor
test
aas
gs
or
scas
test
push
fnstenv
cld
mov
cmp
ja
dec
pop
adc
imul
pop
idiv
add
mov
xor
add
sub
dec
cwtl
sbb
mov
jno
sub
les
fcoms
adc
notl
jmp
xchg
add
mov
pop
icebp
push
push
cmp
pop
xor
and
jmp
mov
xchg
pxor
fstpl
fstpl
mov
mov
mov
clc
arpl
dec
cwtl
jmp
hlt
movsb
sbb
inc
pop
push
fsubs
inc
les
add
pop
push
inc
add
sbb
call
xchg
mov
cmp
mov
adc
mov
cmp
test
ja
rorl
push
imul
mov
popf
pushf
adc
dec
jb
add
mov
push
in
mov
mov
sbbl
xchg
lds
mov
xchg
mov
add
lods
clc
xor
adc
aas
mov
ss
jno
jns
sbb
fldenv
add
and
dec
in
mov
in
mov
insb
dec
idivl
add
stos
lahf
int3
movsl
mov
push
mov
pop
pop
repnz
inc
jg
in
daa
add
cmp
xchg
add
sbb
mov
addl
dec
pop
mov
xorb
mov
jle
out
arpl
call
xor
adc
mov
rcrb
inc
pushf
pusha
std
frstor
jbe
sbb
sub
lods
dec
enter
mov
pop
mov
push
popa
les
jo
or
xlat
add
xor
and
add
add
inc
sbb
and
stc
cmp
sub
lea
push
adc
inc
fwait
gs
pop
shrl
in
push
fildl
mov
or
sub
lret
jo
gs
das
outsl
js
addl
mov
sbb
sbb
popf
push
cwtl
cmp
and
pop
xchg
and
lret
js
inc
jno
xchg
add
dec
xchg
pop
adc
hlt
out
xor
xchg
fs
loopne
repnz
sub
aam
rcrb
or
call
enter
add
cltd
jg
cmpsl
mov
add
cmc
sub
pop
jp
adc
or
lret
sub
add
dec
in
and
fldenv
adc
sub
scas
lds
jo
sbb
and
xor
add
sti
push
ds
jae
ljmp
testl
lock
xchg
imul
mov
adc
clc
add
test
sbb
mov
or
out
roll
jnp
jmp
movsl
adc
and
stc
and
mov
sub
je
faddp
fsubrs
sbb
and
iret
inc
cmpb
jae
inc
mov
stos
add
inc
adc
sbb
add
inc
pop
xchg
sbbl
notb
shlb
add
mov
aas
add
cmpsl
sub
add
jg
sbb
lds
and
lret
ljmp
cli
pop
add
xor
add
pop
je
ffreep
jns
aam
cmpsl
and
mov
and
movb
fistpll
je
or
adc
out
or
xor
cwtl
and
or
je
adc
sub
or
mov
fmull
and
xchg
mov
test
xchg
pop
in
inc
xchg
inc
sbb
or
fiadds
mov
aaa
out
bswap
faddl
pop
das
xchg
movsl
call
test
mov
push
and
jl
and
rcrb
push
cmp
add
imul
sbb
mov
addr16
mov
test
jno
xchg
outsl
fisttpl
mov
test
add
add
jmp
mov
mov
es
mov
and
push
iret
sbb
out
and
pusha
lods
and
and
adc
mov
jecxz
dec
push
sub
icebp
enter
lock
xor
mov
testl
dec
scas
or
outsl
inc
fsubp
mov
push
nop
inc
push
daa
xchg
je
jp
adc
repnz
sbbb
into
je
mov
mov
mov
pop
sbb
test
rolb
cmp
push
pop
push
test
mov
mov
dec
add
jne
add
xchg
sub
push
dec
fcmovnb
inc
jg
adc
or
jo
lods
call
jle
pusha
mov
ja
daa
xor
and
sbb
bound
push
adc
adcb
int3
mov
rorb
lods
insb
mov
and
inc
and
pop
mov
or
mov
and
push
je
loop
inc
xchg
leave
int3
fisttps
mov
rclb
push
dec
add
mov
rolb
dec
js
adc
pop
jp
cmp
jmp
add
sbb
sub
xchg
sbb
xchg
xor
sbb
mov
inc
add
adc
sar
mov
movsb
cmp
or
mov
add
das
jg
nop
fiadds
inc
add
inc
dec
into
gs
mov
push
out
and
daa
inc
scas
mov
add
loop
add
lods
sbb
les
fsts
arpl
xor
push
stos
in
or
mov
mov
sub
dec
inc
sbb
sbb
sbb
pop
mov
test
jo
cltd
hlt
das
loopne
into
cli
cmc
mov
scas
inc
push
out
mov
shr
loopne
or
adc
sub
dec
jne
adc
cmpb
iret
pushf
loopw
add
push
out
out
push
call
ds
ja
add
and
and
pushf
orl
sbb
hlt
add
sbb
xor
xchg
mov
add
xor
inc
xchg
lret
repz
sub
inc
lea
es
ljmp
sbb
xchg
xchg
mov
sub
jne
repz
dec
ror
nop
mov
add
add
jnp
adc
push
int
mov
lds
cli
mov
or
dec
mov
jo
add
sbb
mov
lods
sub
clc
lock
mov
jg
cltd
and
xchg
adc
loope
stos
sub
mov
jo
test
mov
add
jle
ds
xchg
dec
mov
adc
mov
jns
lea
jnp
pop
or
mov
int3
add
ficoms
xor
and
ljmp
sbb
xor
inc
rolb
dec
lods
sub
ja
pushf
mov
or
fmuls
test
adc
mov
call
push
jle
gs
mov
out
lcall
lret
lcall
and
inc
push
les
push
and
and
cmc
cmp
jmp
bound
dec
sbb
mov
or
popf
or
pop
xor
sti
sbb
and
cld
mov
mov
jp
add
xchg
mov
add
jb
aam
orl
subb
mov
jns
xchg
xor
pop
rolb
loop
cmp
pop
scas
in
out
mov
fisubrs
arpl
dec
mov
jo
inc
xchg
subl
pusha
filds
dec
mov
in
mov
out
shl
test
cli
push
or
orl
sub
stos
jae
pop
dec
out
sbb
inc
push
mov
mov
mov
cld
xor
lea
and
stos
mov
sub
orb
test
mov
mov
adc
cmp
ljmp
xchg
call
fs
inc
sbbb
inc
mov
xchg
lahf
std
pushf
xchg
movb
popf
in
adc
data16
dec
je
mov
mov
or
pushf
sbb
add
loope
cli
movsl
dec
out
or
lcall
pop
test
arpl
add
and
add
add
push
dec
jno
call
es
cmp
test
nop
push
add
dec
clc
fsubrs
out
inc
pop
or
xchg
inc
mov
lahf
cmc
fadds
or
pop
cmp
fcoms
pop
adc
clc
add
ret
jb
add
and
add
and
jp
xchg
test
cld
and
lock
jl
push
sub
in
cltd
cmp
pop
or
mov
pop
shrb
divl
cltd
add
sbb
push
aaa
lds
cwtl
rcrb
rorb
jns
sbb
sbb
shlb
inc
mov
xchg
mov
call
sub
lock
sbb
ljmp
sbb
scas
mov
std
or
mov
sarb
sarb
dec
add
sub
and
inc
dec
cld
out
popa
xchg
icebp
and
jl
mov
mov
pop
jg
jns
nop
stos
or
pop
cmp
movsl
add
xchg
les
jne
cmp
jbe
lods
lahf
iret
mov
mov
adc
lock
and
loopne
mov
push
dec
rolb
cwtl
les
dec
and
test
nop
push
mov
sbb
imul
xchg
les
dec
mov
mov
shll
add
imul
insl
stos
ljmp
loopne
testl
imull
rcrl
rol
test
pop
xchg
cmpsl
imul
lea
inc
xchg
aaa
mov
sub
mov
jle
mov
out
sbbb
add
ljmp
and
movsl
mov
movsb
adc
inc
ficoms
insb
lcall
add
aad
and
dec
mov
out
pop
mov
inc
pushf
dec
bound
add
push
adc
addr16
roll
fwait
xchg
enter
das
mov
add
push
inc
lods
js
push
leave
fistl
adc
ret
inc
pop
sbb
or
sbb
adc
and
mov
inc
sarb
xchg
jle
jmp
mov
sbbb
and
xorb
pop
inc
dec
inc
das
mov
addr16
rolb
add
subl
adc
mov
sub
xor
dec
cmpsb
outsl
jno
jmp
cmpb
fwait
sub
mov
dec
adc
push
and
es
sub
adc
loop
rcrb
call
enter
fisubl
or
push
and
push
adc
ljmp
add
sub
adc
xchg
adcb
add
jb,pt
nop
xor
xchg
inc
stc
lds
out
popa
outsl
add
or
sahf
push
dec
mov
iret
sti
fidivrl
pop
and
add
jb
nop
push
js
js
das
xor
pusha
ffreep
lahf
add
adc
fcompl
sbb
pusha
add
shlb
sub
outsb
sub
int3
in
mov
leave
mov
shlb
pop
ds
subb
adc
ret
cmp
lret
cmp
xchg
in
je
xchg
push
out
popf
leave
aaa
std
add
fdivr
push
lods
mov
dec
das
cmp
add
xor
xor
xchg
add
fiaddl
and
nop
into
mov
ss
sbbb
push
mov
pop
mov
ret
pop
and
xchg
adc
dec
ljmp
outsb
dec
testb
and
dec
popa
mov
es
pop
pop
adc
mov
or
stos
xor
movsb
movsb
add
xor
sub
lock
jle
cmc
popf
and
adcb
insb
arpl
or
dec
sub
mov
or
iret
pop
nop
adc
sub
loop
ret
dec
xchg
push
jl
pop
or
scas
or
sarl
push
addl
dec
aas
mov
inc
sbbb
sahf
jo
jno
jns
sbb
add
jge
mov
insb
out
mov
xchg
and
adc
dec
les
mov
push
push
sbb
mov
mov
add
call
rcl
scas
and
lret
lahf
andb
inc
pop
push
xchg
pop
fwait
mov
and
cltd
mov
test
adc
adc
or
sti
out
cmp
add
nop
cld
hlt
mov
sub
adc
xor
adc
sarb
inc
push
xor
cmpsb
push
push
sbb
outsl
out
andb
or
sub
jmp
add
pop
pop
push
inc
mov
adc
mov
mov
or
out
js
or
call
pop
push
loopne
push
push
or
call
es
hlt
push
adc
push
mov
mov
mov
test
xor
adc
ss
and
loope
sti
push
or
sub
test
and
out
mov
and
les
icebp
sti
notl
xor
and
xorb
push
push
out
or
lahf
dec
dec
add
shrb
or
xchg
and
add
adc
mov
stc
and
add
lds
testb
mov
sbb
fiaddl
stc
cmp
push
mov
clc
cltd
inc
rorb
xor
sahf
xchg
rcrb
inc
outsb
jle
test
scas
sbb
imul
pop
inc
out
add
or
mov
call
xchg
add
shr
inc
push
xchg
test
or
push
adc
rorb
insl
mov
arpl
mov
add
je
jge
das
jb
jg
ljmp
and
and
into
mov
mov
hlt
js
jae
jle
or
lock
out
add
jg
sub
add
xor
and
lea
lcall
xchg
shlb
insb
xorb
lea
push
and
xchg
pop
xchg
sub
or
fsts
das
xor
rorl
push
sbb
xchg
sti
sbb
lods
mov
jb
sbb
iret
loope
int
push
arpl
xor
in
jp
dec
push
enter
inc
add
adc
xchg
cmp
mov
js
inc
mov
ftst
add
jmp
push
sub
mov
pop
pop
mov
test
mov
xchg
ret
bound
inc
jle
loopne
pop
add
incl
pop
pop
inc
cltd
add
jb
movsb
loop
scas
dec
icebp
enter
adc
repz
inc
jecxz
xlat
hlt
mov
adc
lods
lock
sub
jmp
pop
cmp
push
lret
aam
rcl
rorb
sub
shrb
push
ss
and
subb
mov
jle
sbb
add
sub
xchg
je
out
fsubrs
mov
xor
ds
mov
mov
in
cltd
add
sbb
lds
and
xor
inc
call
pop
inc
sub
js
and
push
shrb
fs
add
nop
cmp
mov
add
jo
jmp
ja
and
int
loope
pop
sub
fisubl
test
fsubl
mov
mov
fidivs
push
mov
inc
mov
into
rolb
cmpsb
xor
xchg
pop
jecxz
aam
lock
js
sub
out
pop
ljmp
ss
push
jno
sbb
push
adc
adc
and
out
bound
idivl
jb
sbb
inc
mov
gs
jno
mov
mov
repnz
cmp
rclb
test
les
mov
mov
inc
adc
repnz
inc
sbb
jmp
push
add
inc
subb
inc
cmp
in
repnz
push
test
addr16
inc
cltd
pop
push
int3
add
xor
data16
test
jp
or
cli
dec
jae
jo
jp
sub
insb
xchg
rcrl
cmp
lock
mov
cmpsb
inc
xchg
add
cmp
cltd
jno
pop
shr
movb
aad
rorb
outsb
rcrb
mov
and
inc
jle
add
pop
dec
push
inc
icebp
insb
xor
ret
pushf
or
ds
movsl
and
or
inc
es
fcoml
out
pop
and
mov
inc
fwait
pop
add
inc
out
icebp
cmp
dec
loop
fsqrt
and
adc
add
sub
pop
js
add
sbb
inc
sub
fidivs
cmp
push
into
hlt
mov
ret
pop
in
addr16
mov
dec
and
add
cmp
or
pushf
mov
xchg
xor
movsb
and
add
pushf
lock
flds
inc
adc
push
pushf
adc
in
push
in
js
cmc
lods
pusha
or
mov
xchg
inc
rclb
mov
add
sbb
fimull
push
mov
dec
int3
pushf
ja
jbe
jo
movsb
pop
aad
aas
pop
inc
xor
mov
jbe
je
mov
scas
lahf
adc
pop
sarb
add
sbb
bnd
pusha
fisttps
sub
cwtl
flds
jecxz
inc
push
xchg
jl
jmp
push
sub
fistpll
fcoms
subb
adc
mov
add
imul
add
push
push
insb
push
pusha
and
sarl
xor
dec
pop
add
push
pop
sti
cmp
fnsave
cs
test
sbb
lcall
call
mov
shlb
xor
sar
pop
cs
lahf
hlt
or
mov
add
loop
sub
outsl
mov
add
add
inc
jae
or
loopne
ljmp
push
cmp
cs
push
les
out
cmp
test
test
xchg
arpl
lock
or
or
js
dec
call
mov
and
jns
add
cmpsl
je
mov
cwtl
and
or
inc
fs
insb
mov
push
scas
and
pop
add
les
inc
or
xor
push
or
insl
jo
fs
cmc
pop
loopne
or
cld
lret
inc
pop
and
mov
aam
inc
or
adc
movsb
inc
mov
js
mov
inc
push
stos
je
or
mov
or
icebp
jns
push
je
xor
in
out
stc
data16
mov
inc
add
cmpsb
mov
cmp
ljmp
in
cmp
dec
ror
enter
pop
vxorps
cmp
lods
push
xor
inc
lret
orl
rol
fs
aas
ja
jns
cmp
faddl
fdiv
pushl
dec
xchg
push
shll
and
pop
jecxz
loope
rorb
inc
hlt
movb
inc
rorb
xchg
inc
lds
aas
mov
push
pushf
addb
xor
push
out
fcmovnb
adc
out
pop
jbe
sbb
cs
cmp
out
push
and
das
inc
push
xchg
push
dec
cld
dec
in
and
faddl
fadd
test
sub
dec
mov
sti
loop
imul
add
and
cmp
add
movsl
mov
xor
xchg
add
stos
aas
xor
inc
add
std
inc
jbe
and
mov
fsubrs
pop
test
ret
add
mov
cli
pop
sbb
into
lods
xor
mov
cmp
imul
mov
lahf
cs
clc
ret
sbb
add
sbb
loop
add
outsb
xchg
pop
and
rolb
cmpb
fnstcw
add
test
push
xchg
push
xchg
mov
sub
add
mov
mov
push
mov
xchg
call
fwait
adc
fdivrs
out
mov
imul
mov
loop
bnd
sub
aaa
mov
sbb
mov
rorb
incb
xchg
call
cmp
shll
adc
arpl
sbb
push
je
and
cltd
rcrb
iret
add
mov
jo
sub
inc
lret
imul
pmaxub
shrl
addr16
stc
fldt
int3
mov
cmc
pop
aam
sahf
push
stos
insl
jo
subb
add
push
mov
mov
dec
icebp
jmp
xchg
jo
adc
inc
jno
and
icebp
jne
lock
jg
addr16
es
inc
idivb
xchg
add
rolb
ficompl
loopne
lods
call
movsl
call
adc
mov
and
ljmp
stc
shll
je
mov
dec
add
lret
stos
inc
idiv
xor
fsub
inc
sbb
and
insl
lret
aam
test
loop
repnz
inc
or
fcoml
jle
ljmp
mov
mov
push
in
icebp
inc
mov
loope
mov
mov
jns
enter
add
call
pop
sbb
pop
sub
shrl
hlt
shlb
push
shll
into
out
inc
cwtl
jnp
jae
leave
add
cmp
push
mov
dec
mov
add
adc
int
das
xchg
and
loop
jne
pop
xchg
ds
and
add
cli
jae
cmp
adc
stos
add
in
push
sub
in
ret
je
add
rorb
pop
outsb
aas
add
je
imul
test
cltd
add
dec
and
mov
xor
jo
adc
add
inc
add
and
xor
lods
mov
rcrb
jb
adc
int3
dec
divb
mov
push
out
cmp
adc
out
push
je
dec
loopne
icebp
ret
sbb
repnz
shrl
fsubs
xchg
push
sub
add
stos
je,pn
repz
jno
iret
and
orb
add
mov
jne
daa
lock
sub
ror
aam
cwtl
rolb
jle
mov
sbb
xchg
pop
dec
sub
movsl
xchg
mov
pushf
clc
nop
nop
in
and
imul
mov
aam
dec
lea
xor
mov
xor
dec
xor
adcb
dec
add
jbe
rclb
dec
adc
idivb
sbb
mov
push
mov
push
mov
and
cmpl
je
add
jle
pop
sti
pusha
inc
mov
shll
lock
add
aaa
or
mov
in
and
orb
es
std
fdivr
cld
shl
in
jns
push
call
movsl
dec
push
cmpsl
pusha
inc
cmp
lds
inc
nopl
adc
stos
and
fldcw
roll
sbbb
mov
mov
xchg
mov
popa
mov
mov
loopne
inc
test
lcall
jl
mov
imul
jg
jg
lcall
mov
mov
je
rdtsc
fs
jle
jb
insb
movsb
data16
inc
or
cld
add
jle
mov
mov
adc
in
lods
test
inc
adc
cmpb
mov
and
unpcklps
es
scas
or
sbb
es
dec
and
or
cmp
scas
push
leave
mov
ficompl
jo
pop
xor
les
inc
xchg
imul
inc
jmp
lods
and
sub
pop
mov
fs
aaa
out
inc
jnp
pop
iret
orb
push
in
push
dec
add
cld
add
xchg
int3
out
jo
dec
dec
lret
fadd
cltd
shlb
pop
lds
and
xchg
mov
and
movsb
mov
adc
stc
dec
sub
push
or
and
cmp
adc
out
xor
pop
add
aad
bound
jg
fs
xor
or
fisttpll
dec
call
jo
inc
scas
popf
je
jle
inc
xchg
into
mov
mov
xchg
add
inc
cmpsl
jo
mov
mov
pushf
xor
pop
and
movsb
mov
popa
mov
in
add
sbb
ffree
xor
andb
rcl
leave
sbb
jb
mov
mov
jp
sbb
push
jb
popf
add
rolb
insl
fcoml
mov
or
mov
pop
xor
popa
cli
fwait
in
inc
daa
outsb
push
loopne
sbb
xor
pop
inc
mov
aaa
sub
xor
icebp
pusha
mov
pop
inc
pusha
fsubr
cmpsb
pop
out
pop
testl
mov
sbb
pusha
xor
mov
out
add
les
adc
mov
andb
mov
lods
mov
ja
and
xchg
loopne
push
dec
pop
mov
push
or
mov
je
data16
mov
adc
and
aam
xor
jle
mov
arpl
and
jbe
mov
test
jo
imul
push
jno
aad
cld
jle
inc
push
mov
dec
pop
enter
add
pop
xchg
call
daa
xchg
cltd
or
pusha
filds
les
jecxz
test
enter
out
loopne
insb
mov
xorb
into
out
rolb
sbb
mov
lods
xor
call
out
xchg
hlt
jbe
add
inc
jnp
add
mov
mov
daa
out
mov
jno
jns
sbb
add
add
in
jno
pop
icebp
xor
fsubrp
mov
inc
or
je
sub
jp
je
jno
and
lcall
jne
fwait
xor
movb
inc
loop
test
cmpb
call
and
mov
lods
adc
xor
mov
pop
cmpsb
adc
jbe
sub
loop
fs
sub
out
orb
push
dec
outsl
lods
jnp
faddp
mov
sub
pushf
jno
jl
call
lret
adc
ljmp
dec
rclb
dec
mull
adc
or
cmpsb
mov
inc
sti
adc
pusha
or
or
push
and
fsubrl
das
cmp
int3
pop
out
mov
testl
jle
cwtl
cmp
stc
xchg
xchg
popf
xchg
push
push
cmp
push
push
mov
push
sub
test
je
cltd
nop
adc
xlat
sub
xor
add
aad
loopne
int3
jmp
xchg
call
push
enter
loopne
addr16
aas
dec
dec
fcmovne
xor
jecxz
ja
mov
inc
and
mov
sub
enter
out
cmp
enter
js
out
xchg
mov
cmp
push
js
dec
or
je
add
push
jbe
mov
mov
int
dec
data16
das
lret
insl
fdivr
incl
ss
sub
inc
movsb
xchg
sbbb
gs
xchg
lods
les
mov
xchg
cmp
pop
sub
push
add
clc
mov
mov
add
inc
push
cmpb
pop
ret
push
loopne
in
push
loopne
push
add
icebp
xchg
add
das
clc
sti
les
jns
mov
cmp
daa
mov
or
roll
call
insl
rclb
push
pop
faddl
ret
pop
lds
adc
jl
dec
add
mov
ds
and
cmpb
lds
pop
js
or
pop
xchg
adc
pop
cwtl
out
fbld
je
ljmp
es
inc
dec
and
or
loopne
pop
lret
insb
sbb
and
ret
mov
fsubrs
fstpt
les
sarb
dec
push
ljmp
cltd
shll
das
pop
xor
xchg
lods
sub
test
test
inc
fs
push
mov
push
hlt
push
inc
push
push
sub
dec
or
dec
cli
outsb
cld
sbb
sub
mov
scas
mov
add
test
xchg
sarb
mov
loopne
jl
lahf
pop
lock
jp
pushf
and
push
mov
and
cmc
push
xor
inc
clc
add
gs
les
sbb
add
push
ss
fisubrl
add
ds
sub
or
add
ret
push
xchg
out
mov
or
lcall
out
std
cmp
push
sti
adc
xchg
lods
mov
lcall
xor
loop
pop
push
pusha
cmc
push
jb
int3
pusha
inc
imul
cmp
in
loopne
loopne
fdivrs
scas
push
iret
inc
mov
inc
sbb
cwtl
int
xor
or
jle
fadd
add
fucomi
lret
fs
das
test
cmp
cmpb
cmp
mov
or
add
cmp
add
jbe
fsubl
xchg
mov
add
pusha
cmp
add
test
in
add
fmuls
test
inc
or
sbb
xchg
or
mov
cld
call
mov
ja
and
or
or
sub
xchg
add
pusha
filds
cmpsb
ljmp
or
shrb
hlt
mov
xchg
inc
lds
mov
cwtl
adc
outsl
fwait
inc
sub
sti
and
cmc
ds
and
push
fildl
mov
cwtl
inc
or
inc
inc
mov
sbb
ret
inc
mov
or
adc
pop
clc
cmp
or
push
rcrl
xchg
or
popf
dec
mov
aam
int
out
adc
jo
jo
pop
jg
or
je
lds
dec
or
imul
int3
add
xor
sbb
sahf
out
pop
inc
sub
enter
lods
mov
sub
mov
aas
adc
outsb
insb
xchg
nop
pop
mull
fcompl
insb
js
adcb
loopne
nop
addb
push
jo
pop
int3
xor
adc
or
mov
adc
dec
sbb
push
xchg
in
in
popf
push
cmp
mov
or
mov
popa
sbb
shlb
loopne
adc
mov
int
jmp
mov
insb
leave
and
add
cltd
inc
add
sbb
popf
push
mov
add
mov
jo
fdivrl
pop
out
adc
test
orl
cld
mov
jge
xchg
and
sbb
mov
imulb
mov
pop
leave
adcb
out
pop
jmp
mov
add
fstl
movsl
pop
push
ret
filds
outsb
in
cld
sub
in
jmp
nop
andb
cmp
push
xchg
adc
mov
cld
jne
or
or
dec
dec
ret
call
add
fcoml
push
xor
sub
xor
xor
mov
cmc
addl
mov
mov
add
cwtl
icebp
inc
outsl
test
mov
jmp
test
or
cmp
test
push
loop
cmpsb
loope
nop
ljmp
push
sub
insb
rdtsc
insl
cs
das
ljmp
das
push
sbb
fdivrl
jne
in
ret
add
pop
jl
inc
pusha
mov
int
jmp
add
sarl
nop
call
out
add
push
push
pop
mov
cmpsl
stos
lea
in
add
std
cmpsb
or
mov
fldl
mov
xorw
in
push
xlat
sahf
sbb
movzbl
mov
loop
xor
push
pop
add
or
stc
mov
add
mov
jns
icebp
fcmovnu
push
sbb
aam
inc
adc
mov
mov
and
pusha
std
dec
mov
test
cwtl
add
rcrb
call
cmp
add
mul
mov
ds
mov
dec
xor
mov
mov
adc
addb
push
pop
popa
mov
lods
jne
add
xor
and
imul
shrb
lock
adc
inc
loop
adc
pop
jecxz
lea
xor
mov
pop
and
mov
xor
or
mov
sub
outsl
into
jae
int
sbb
es
cmp
bound
mov
orl
sub
rcrb
rclb
and
or
pop
push
inc
mov
das
pusha
rcll
sub
popa
sbb
incl
sbb
outsb
mov
pop
data16
push
sub
cmp
mov
add
call
cmp
fsub
jae
mov
incb
shll
pop
cmp
ret
movsl
clc
add
push
mov
and
mov
mov
cld
push
push
fwait
sbb
pop
stos
shll
mov
add
xchg
into
mov
cmp
add
hlt
imul
stos
sahf
push
ror
fcoms
pop
pop
mov
and
ret
cmp
out
pushf
in
cmp
xchg
dec
stos
testl
je
loope
popa
and
les
or
lods
lret
and
hlt
add
cmpsl
adc
test
cmp
sarb
jo
dec
and
pop
xchg
aas
xchg
fdivs
or
sbb
or
adc
outsb
lods
xor
mov
dec
sbb
call
inc
subb
adc
xor
cmp
lds
jle
repnz
into
ror
scas
rorb
push
sbb
xchg
movsb
mov
leave
jmp
cmp
and
add
lret
out
cmp
insl
sub
xchg
scas
mov
mov
scas
lcall
jns
es
mov
fs
pop
add
scas
dec
jne
adc
pop
stos
push
cmp
add
or
sub
add
fwait
dec
add
pop
adc
mov
rcll
sbb
xor
movsl
or
or
pop
or
add
push
push
push
sub
mov
push
pusha
daa
mov
adc
sub
and
dec
jmp
aaa
popa
mov
mov
sbbb
add
test
icebp
adc
adc
pop
jmp
xor
inc
pop
mov
cmp
test
jb
push
adc
or
inc
mov
dec
add
sub
add
hlt
add
test
jae
or
push
pop
data16
popa
or
std
fists
sti
dec
sub
push
outsl
pop
and
xor
pop
dec
push
fidivl
pop
cmpl
aad
xor
bound
jmp
mov
cmp
mov
xor
or
cmp
outsb
add
lds
pop
pop
sub
andb
jmp
push
push
outsl
xchg
and
cwtl
or
sub
and
add
jmp
add
clc
pop
lods
push
xor
sub
jb
es
xlat
xor
test
movsb
push
scas
imul
mov
stos
mov
js
aas
pushf
or
loopne
cltd
test
stos
push
push
mov
adc
hlt
xor
jo
xchg
ljmp
lea
sub
sbb
bound
xor
outsl
add
rcl
je
sbb
pop
lods
test
movsl
int3
outsb
xchg
sub
and
sub
test
xchg
xor
jmp
ficoms
sahf
cmp
sbb
aad
xchg
mov
bnd
mov
or
stos
dec
not
sub
clc
push
mov
clc
cmpsb
push
mov
cmc
test
adc
subl
adc
ljmp
pop
mov
enter
ja
repnz
add
pusha
add
mov
sub
inc
add
daa
cmp
xchg
adc
pop
or
aam
lock
add
in
out
cwtl
cmc
push
jne
mov
sub
mov
mov
clc
lea
add
or
testl
fbstp
sbb
call
push
sub
inc
rcrl
push
lea
xchg
jne
inc
add
jecxz
movsl
push
xchg
mov
inc
pop
inc
jb
movsb
popf
and
or
mov
sbb
jle
add
push
dec
roll
add
cmpsl
nop
jge
cwtl
pusha
mov
loopne,pt
mov
and
jne
add
hlt
pop
adc
jne
std
in
cmp
xor
loopne
pusha
mov
sub
popa
mov
adc
xor
bound
inc
addr16
adc
cmp
mov
inc
add
mov
lret
jg
jmp
add
aad
inc
xchg
and
mov
in
and
fdiv
aaa
out
jg
lods
push
add
pusha
int
clc
test
push
iret
cwtl
loopne
aad
xor
cmp
inc
nop
fsubs
sbb
push
sbb
out
inc
xor
and
xlat
dec
jmp
mov
jecxz
sbb
sub
mov
leave
add
nop
mov
push
xchg
mov
sbb
iret
adc
push
mov
inc
jmp
dec
xchg
adc
jbe
or
mov
scas
jns
xchg
ret
es
sbb
stos
jnp
xchg
or
inc
into
sti
lahf
jo
xor
popf
sarl
add
jp
jae
ja
or
fcomps
ret
dec
arpl
mov
pop
insb
lods
xchg
outsb
mov
les
and
mov
xor
test
cmp
aaa
leave
je
loop
imul
das
mov
inc
and
pop
pusha
push
rolb
call
add
nop
mov
dec
add
out
lret
add
xlat
mulb
push
popf
aad
in
lods
add
xchg
in
or
jno
xor
xchg
ljmp
add
add
popf
loope
fbld
jb
or
stc
pop
popa
xchg
inc
lds
mov
sub
dec
movsl
mov
push
test
push
subb
add
push
int3
faddl
jle
clc
arpl
iret
mov
leave
sbb
adc
or
cmp
adc
loop
add
mov
insb
lods
ret
push
mov
mov
sbb
jne
adc
push
ja
inc
jg
and
xor
bound
movsb
repz
pop
dec
push
sahf
add
xor
xor
mov
imul
inc
sub
inc
mov
sbb
fcmove
ret
adc
aad
sahf
pop
ja
push
orb
in
fdivrs
mov
mov
and
movl
mov
cmpsb
pop
test
in
lret
add
mov
add
inc
es
gs
mov
adc
jl
push
mov
movsb
mov
mov
add
test
cmc
lahf
add
pushl
sub
mov
in
mov
add
inc
mov
add
adc
leave
call
pusha
jno
inc
sub
and
in
pop
sub
cmpb
nop
and
shlb
adc
sbb
mov
daa
mov
sti
mov
mov
fcomps
pop
pop
xor
mov
add
and
ss
insl
psraw
pop
inc
sub
dec
xchg
mov
popf
aaa
jle
dec
or
fildl
lret
pop
xor
mov
cmp
push
push
dec
aam
pop
fnstcw
adc
in
cmpsb
fwait
push
sub
mov
add
inc
xchg
mov
inc
jp
sbb
addl
ss
lcall
dec
or
dec
pop
nop
roll
jecxz
mov
adc
sahf
pop
in
lcall
icebp
adc
sbb
and
cld
jns
rorb
mov
ja
cmp
push
sub
or
adc
fidivrl
mov
faddl
insb
jbe
inc
sub
add
or
jecxz
pushl
aad
and
xchg
or
mov
lcall
nop
mov
adc
add
add
ljmp
and
mov
sbbb
stos
lock
mov
add
sbb
popa
xchg
push
jno
adc
add
pusha
popa
pop
nop
xchg
mov
jl
adc
in
lcall
sub
sbb
sbb
mov
pop
push
cmp
fidivs
or
mov
mov
sub
pusha
sub
lods
in
jl
cwtl
imul
pusha
mov
mov
mov
sub
mov
js
addr16
in
and
pop
and
sbb
pop
push
leave
adc
sbb
add
and
inc
mov
xchg
scas
sub
inc
push
pusha
popf
jge
dec
mov
push
push
stos
xor
int3
clc
mov
sbb
cmpl
adc
and
pop
rcll
test
sbb
inc
rol
cmpsb
sbb
pop
sub
and
aaa
daa
cmc
jl
mov
adc
shr
xchg
popa
xchg
pop
add
iret
loope
sbb
fcoml
insb
jg
sbb
leave
pop
xor
and
iret
add
push
mov
inc
push
pop
mov
cmpsl
push
add
ljmp
push
mov
mov
pop
and
xor
push
stos
shlb
mov
std
popa
sub
mov
jo
addb
outsl
stos
cmp
adcb
sub
push
ja
push
fnsetpm(287
andl
sub
nop
lahf
or
dec
shl
push
std
mov
sbb
sahf
out
adc
mov
cmp
xorb
aas
ret
pop
lea
push
leave
dec
add
arpl
mull
call
jecxz
push
add
mov
mov
enter
pop
xchg
xchg
add
adc
mov
jno
je
mov
push
les
popa
lea
mov
pop
adc
inc
scas
lock
mov
add
lcall
das
ss
sbb
jmp
cli
ret
pop
sbb
cmp
dec
fwait
sub
das
sub
cmpb
mov
push
ljmp
pop
pop
cmpsb
mov
popl
sbb
add
subb
or
push
mov
and
dec
add
sbb
mov
adc
orb
jae
inc
mov
cmp
gs
ljmp
add
pop
mov
pop
push
add
pop
and
cmp
cltd
insl
imul
cmp
xor
mov
imul
leave
push
xor
add
xor
pusha
cmp
push
or
or
popf
mov
dec
out
or
xor
inc
xchg
or
dec
sarb
xor
test
pop
lods
inc
mov
pop
pop
data16
or
jae
jb
sbbl
fcmovnbe
or
add
push
mov
test
adc
push
mov
dec
in
or
xchg
and
pop
or
push
mov
hlt
cli
dec
push
add
insl
jns
push
dec
jbe
cmp
mov
fidivrs
mov
adc
inc
jmp
sbb
stos
dec
outsb
add
dec
imul
xchg
je
test
push
cld
pop
enter
rcr
sbbl
xchg
fwait
mov
sbbb
pop
add
sub
dec
ret
insb
scas
imul
push
inc
mul
testl
or
add
and
add
rorb
dec
dec
mov
push
les
js
mov
xchg
lds
sti
scas
and
ret
sbb
notb
xchg
and
cmp
fdivl
fsubl
aam
fimull
push
inc
xchg
cmp
popf
sub
negl
data16
xchg
jns
pop
sub
pop
add
mov
mov
lds
sbb
sub
inc
iret
inc
add
lcall
imul
lret
mov
bound
aam
sbb
pop
sarb
ja
pop
pop
xlat
sahf
mov
pusha
ljmp
inc
push
sub
xor
dec
or
adc
jne
cld
mov
or
notl
sbb
pop
js
call
popf
lret
or
loope
and
adc
pop
or
sub
repnz
sub
clc
loop
pop
mov
dec
mov
xchg
add
push
gs
push
add
addr16
push
jge
shlb
push
adc
icebp
lcall
mov
pushf
ret
pop
adc
inc
scas
inc
fisubrs
jmp
add
int3
outsb
mov
repnz
daa
aas
mov
add
cmpsb
es
xchg
je
sbb
adcb
movsl
jp
addl
mov
xchg
lret
add
dec
and
mov
bound
mov
roll
lahf
jecxz
xchg
inc
adc
dec
add
mov
popa
add
jbe
mov
aas
popf
in
sar
add
enter
mov
addl
scas
aad
repnz
pop
inc
test
jnp
xchg
add
rolb
les
add
add
mov
ds
sbb
jno
adc
sub
cld
push
rclb
in
xor
dec
cmp
ljmp
test
xchg
adc
inc
fsubr
xor
cltd
lret
repnz
add
insb
in
xor
mov
nop
out
push
pop
push
cmp
mov
jecxz
mov
xlat
push
shll
inc
sub
jl
clc
pop
data16
push
pop
gs
out
ret
mov
xchg
jo
mov
xor
fnstenv
mov
jmp
xor
dec
cli
pop
fmul
jp
pop
nop
ficomps
adcb
cwtl
adc
add
jb
push
push
in
icebp
cmp
push
add
cmp
xor
add
cmp
orb
mov
out
or
bound
xor
adc
stos
push
mov
leave
pusha
jp
cld
xor
addb
add
push
add
mov
or
popa
loope
add
add
push
push
enter
cmpb
lods
push
xlat
cmp
arpl
ss
sub
cs
and
add
cwtl
divb
loope
clc
js
xor
mov
mov
fcoms
clc
push
sub
test
dec
aam
add
cmp
add
lods
lock
add
xchg
daa
shl
cmp
or
cld
and
add
jbe
sbb
mov
popa
nop
dec
ds
dec
repnz
ret
xor
movb
inc
add
push
add
shrb
xor
and
mov
sahf
cli
jno
mov
hlt
jecxz
add
mov
sbb
jno
inc
addl
sub
repz
push
cwtl
imul
rol
out
adc
std
dec
test
sub
aam
push
mov
xor
lds
or
sub
mov
out
lahf
std
inc
adc
rcl
mov
xchg
fisubrl
sarb
or
popw
xchg
xchg
les
jne
orb
mov
dec
es
iret
xchg
nop
push
popf
push
adc
add
lcall
mov
lret
nop
pushf
or
jmp
inc
fsubp
rolb
inc
decl
push
ret
lods
das
cmp
push
popf
dec
jno
add
xor
inc
sbb
add
push
pop
sub
cmp
pandn
les
imul
mov
mov
pop
sbb
mov
xor
dec
mov
lods
pop
int3
cmp
mov
sub
cmc
mov
shrl
outsb
adc
aaa
or
fidivrs
push
add
daa
nop
add
jo
cmp
xchg
loopne
cmp
xchg
iret
mov
popa
mov
rorb
add
or
jbe
jb
cmovbe
out
inc
nop
xlat
test
add
mov
pop
mov
nop
jp
stos
js
add
movsl
test
add
and
pusha
ret
sbb
dec
nop
arpl
mov
dec
movsl
sbb
or
pop
mov
jb
sbb
xchg
add
in
fisubl
jb
push
and
cmp
sar
jnp
pop
jb
add
in
shrl
pop
add
cld
dec
ds
testl
imulb
int3
push
mov
insl
mov
in
push
test
xchg
push
sbb
pop
cmp
xchg
mov
bound
fwait
movsl
mov
add
cs
pop
test
movsl
jnp
xor
dec
mov
out
dec
and
mov
or
adc
jne
fidivs
mov
into
test
ja
loopne
cmp
cwtl
inc
nop
cmp
push
jns
mov
ret
push
inc
loopne
loopne
frstor
mov
popl
je
jb
movsb
mov
sarl
and
cmp
xor
lcall
sub
test
xchg
jg
aad
and
cs
scas
or
mov
push
mov
mov
imul
pop
add
xor
test
orps
rclb
adc
lock
test
ret
xchg
inc
add
jg
sub
loope
and
and
add
je
faddl
sbb
iret
dec
add
hlt
sub
jo
or
shlb
sbb
xor
iret
cmp
aam
push
jbe
nop
mul
jmp
and
out
add
inc
sbb
loop
push
or
inc
cmp
pop
orb
das
pop
shrb
add
lahf
aad
sbbb
sti
and
lods
xor
cmpsl
daa
dec
lea
nop
or
pop
sbb
andb
outsl
mov
sub
sbb
sbb
sub
dec
and
js
jns
pop
push
pop
add
push
neg
cmpl
jmp
pop
sbb
adc
cmpsl
dec
or
leave
pushf
dec
and
cwtl
mov
cmp
jle
and
out
data16
lds
rcr
orb
clc
add
mov
sti
add
mov
cmp
sub
dec
inc
out
hlt
sbb
push
pop
mov
stos
sub
jne
jecxz
mov
and
scas
adc
inc
imul
rorl
add
lcall
pop
push
scas
mov
push
js
inc
lock
and
push
bound
imul
pop
pop
add
dec
jmp
and
ficomps
aaa
jg
mov
test
loope
xor
popf
loope
mov
adcb
push
addr16
add
adc
push
fdivs
or
add
jmp
push
mov
in
dec
and
and
mov
sbb
cmp
adc
hlt
add
bsf
mov
jns
jmp
cmpsb
xor
loope
fdivs
shlb
sbb
loop
inc
adc
int
pop
mov
fstps
sub
xchg
push
mov
fs
jae
adc
or
push
xchg
out
add
sub
filds
inc
stos
adc
je
and
hlt
pop
cmp
sbb
push
jnp,pt
test
adc
cld
aaa
daa
ds
jg
add
mov
loopne
pop
add
add
aam
cmpsl
push
and
fidivs
push
jmp
add
or
pop
cmp
repz
inc
mov
rdmsr
sub
and
jo
je
and
add
dec
xchg
imul
rcr
push
add
bound
lahf
mov
pop
or
cmp
jo
or
stos
adc
cli
pop
or
addb
pushf
fldenv
mov
mov
dec
ja
add
adcl
ljmp
add
int
ja
and
add
aas
lock
add
mov
jnp
out
sbb
add
loopne
int3
adc
jo
adc
lock
mov
cmpb
pusha
mov
es
xor
aas
mov
or
push
xlat
push
sahf
sub
sbb
cmp
and
imul
xchg
mov
loop
cld
je,pn
pop
and
lea
jg
jecxz
mov
xchg
lahf
dec
ret
cltd
and
in
lea
or
out
jl
or
subl
test
leave
jb
aas
jmp
sbb
subb
or
add
jmp
xchg
pop
idivl
push
xchg
push
ret
movsb
sbb
pop
mov
lods
or
mov
add
sub
cmp
add
pop
push
push
add
xor
daa
add
inc
or
mov
bound
cmp
xor
pop
sub
sar
in
pop
jge
cmpsl
pop
jno
test
mov
mov
aas
mov
js
decb
mov
push
push
dec
lret
add
pop
imul
xor
pop
sub
aad
stc
or
addr16
add
sbb
cmp
jo
or
mov
mov
mov
mov
pop
pusha
mov
fs
out
fdivrl
sub
cmpsl
mov
lea
push
rorl
cltd
adc
sbb
pop
das
mov
mov
and
les
test
adc
sub
mov
cmc
add
pop
xchg
das
add
imul
and
sub
pusha
mov
add
mov
and
test
adc
repz
mov
hlt
push
cmc
dec
xor
sbb
xchg
add
jmp
sets
shlb
sub
pop
popa
pusha
jge
push
add
repz
scas
and
dec
jmp
inc
sbbl
rorb
insl
leave
jne
sahf
shlb
outsb
push
arpl
pop
dec
pop
push
adc
xor
or
test
lcall
rclb
mov
inc
repnz
add
pop
push
dec
adc
negb
jmp
hlt
std
inc
andl
test
int
or
add
lcall
dec
popl
subb
les
icebp
lea
outsb
sub
pop
adc
leave
jbe
aam
aam
sbb
aaa
mov
dec
stos
les
in
or
sub
mov
dec
mov
and
pop
add
inc
in
test
scas
in
cmpsl
or
sbb
mov
inc
hlt
lock
lds
xor
xchg
inc
xor
roll
into
or
inc
mov
int
fs
add
jne
and
xorb
aad
sub
inc
dec
push
and
jl
and
add
sub
mov
les
mov
and
jle
and
enter
mov
dec
clc
add
ret
test
sbb
jge
sub
push
and
xchg
dec
mov
push
xor
fsubrl
popa
movsl
push
les
pusha
adc
pop
scas
enter
inc
sub
enter
jo
mov
addl
jnp
stos
sahf
mov
and
addr16
pop
mov
sbb
rcr
push
mov
inc
shr
jl
pop
in
addl
movsb
sbb
shlb
jo
pop
into
xor
cmc
sbb
mov
shl
pop
pop
ffree
sub
pop
iret
iret
filds
adc
mov
add
pop
pushf
adc
jmp
clc
cs
inc
jne
cmc
xor
xlat
out
jne
adc
scas
sub
add
inc
ret
loop
stc
inc
imul
fwait
or
aad
add
push
movsl
mov
test
mov
sbb
das
rcrb
mov
xchg
clc
xlat
inc
fbstp
daa
or
adc
and
and
imul
subb
repz
pop
pusha
push
jns
iret
add
ret
or
andb
xchg
cwtl
mov
xchg
add
fcoml
xchg
jne
int3
xchg
cmpsl
orb
lahf
pop
sbb
and
or
rcll
inc
adc
test
xchg
aaa
and
and
lea
pop
loopne
aas
mov
push
xor
in
add
repnz
dec
stos
mov
push
pop
pop
xchg
nop
cmpb
mov
and
jnp
add
dec
or
sbb
or
insb
push
inc
insb
lock
or
repnz
adc
nop
pop
les
inc
cmp
push
lods
sbb
jg
cld
pop
out
mov
scas
ss
pop
or
insb
ret
sbbl
enter
in
cld
clc
mull
and
and
iret
sbb
sub
push
bound
and
and
in
or
pop
adc
inc
xchg
add
ss
xlat
out
leave
test
adc
movsl
ljmp
test
stos
shl
or
xor
test
add
loope
sbb
inc
pop
adc
add
addr16
jge
fistl
loop
add
xchg
pop
repnz
inc
inc
add
mov
inc
dec
rcrb
push
int3
dec
inc
aam
fsubl
das
addl
mov
popf
sub
sbb
ret
hlt
mov
fmull
gs
mov
insb
inc
jns
out
pop
add
sarb
and
add
cmpsl
push
or
pushf
loop
add
mov
xor
lods
add
insb
scas
dec
pop
sbb
gs
movsb
das
and
or
lahf
xchg
add
sub
ret
fs
notb
adc
sbb
inc
nop
add
and
stc
and
or
or
add
or
cld
out
fs
mov
lock
shrb
enter
jle
inc
aas
pop
mov
sarb
jg
and
orl
mov
loope
cmc
mov
sbb
dec
push
jns
and
push
mov
push
out
push
sbb
pop
roll
jg
popa
repz
sub
repz
pop
std
mov
divl
add
push
and
test
lret
push
sub
lds
jg
add
and
loopne
pop
insb
mov
scas
inc
push
test
into
jnp,pn
popa
sbb
adc
cmp
leave
and
outsl
mov
or
mov
sahf
adc
test
into
sbb
cmp
and
repnz
ror
jo
dec
xchg
imul
test
cmp
sub
mov
mov
mov
test
adc
das
add
out
fisubl
leave
sub
hlt
xorl
mov
pop
cltd
in
into
arpl
and
out
dec
popa
nop
insb
adc
mov
and
add
rcl
jae
add
sbb
mov
or
sub
rorl
mov
pop
dec
mov
and
jmp
xchg
jmp
and
out
cld
add
in
or
lock
mov
push
lret
out
inc
add
in
ss
jg
jo
call
mov
push
sub
xchg
or
inc
add
pop
mov
push
js
popf
cmpb
xchg
pop
pop
mov
inc
add
cmp
adc
aas
lods
or
hlt
pop
pop
dec
xlat
sarb
roll
daa
mov
push
mov
mov
pop
test
dec
dec
mov
jne
addl
adc
lret
push
popf
lcall
sub
or
popf
sub
addr16
cs
sbb
pop
cwtl
push
xor
and
push
lea
dec
or
inc
imulb
adc
mov
outsb
mov
inc
mov
or
jg
sub
sub
adc
or
adcb
out
sarl
mov
xor
and
test
popa
ret
inc
inc
add
sub
lds
int3
push
pop
and
leave
and
push
in
pop
pusha
push
push
jns
push
push
test
in
jl
and
lods
inc
adc
rclb
add
jnp
inc
push
ja
sbb
sbb
mov
push
add
inc
cmp
call
adc
xchg
popf
pop
add
add
bswap
xchg
dec
mov
js
hlt
inc
push
add
sub
les
dec
mov
lret
cwtl
and
iret
test
sbb
inc
cltd
add
sub
outsl
mov
test
enter
cmpsb
repnz
pusha
dec
das
adc
andl
int3
mov
sub
pop
scas
movsb
dec
repnz
pop
mov
jbe
xor
aas
dec
shlb
mov
rcr
add
push
cmp
lea
mov
and
sbb
mov
and
push
mov
adc
add
pop
ds
mov
clc
add
pop
and
add
rcr
push
jp
fimull
adc
test
cmpsb
das
loope
and
lahf
xchg
xor
movzwl
pop
sbb
pop
pusha
test
xchg
add
test
mov
pop
inc
clc
pop
push
adc
nop
dec
push
mov
xchg
fmuls
mov
sbb
lock
popf
ret
test
inc
sbb
test
sub
mov
mov
mov
add
ficompl
adc
push
sub
push
call
out
lock
or
adc
jmp
add
push
stos
dec
dec
and
cltd
imull
push
inc
lcall
mov
shll
mov
in
cmpsb
dec
loopne
xchg
adc
lock
add
clc
and
jbe
repz
mov
mov
adc
xor
push
inc
xor
jmp
mov
sub
xchg
push
sbb
movsb
add
ficoml
cltd
cltd
or
mov
shlb
lea
idivb
xor
jo
dec
add
xor
mov
adc
sub
push
sbb
fsubrl
ja
add
sub
mov
stos
clc
repnz
inc
mov
push
cmp
xlat
cmp
stos
push
push
lock
jo
push
pusha
aam
xchg
jmp
and
lods
inc
sbb
jmp
clc
cmpb
sub
movsb
pop
pop
test
mov
adcb
insl
inc
pop
sub
mov
push
pop
mov
dec
dec
stos
and
xchg
add
and
jmp
in
push
shrb
cwtl
bound
jecxz
bound
mov
arpl
or
cli
push
mov
repnz
mov
mov
rclb
ja
xchg
xchg
sub
add
cmc
mov
sub
mov
notb
xor
mov
iret
dec
mov
fcomps
outsb
repz
shr
adc
or
or
xor
mov
into
sub
rclb
hlt
jo
add
dec
loope
cmpb
mov
xchg
jb
push
inc
test
pop
cmp
add
out
sub
movsb
push
cmp
jg
rcrl
jg
or
addr16
push
push
or
popa
outsl
and
das
daa
out
iret
fsubl
pop
inc
mov
add
cmp
xor
dec
inc
outsb
mov
inc
stc
xchg
pop
push
ret
pushf
or
cmpl
stos
dec
mov
std
adc
clc
mov
idivl
aaa
mov
xor
push
les
mov
pop
add
adc
or
mov
fistpll
xchg
adc
in
int3
xchg
in
popf
in
aaa
xchg
dec
adc
or
adc
adc
add
repnz
es
popa
inc
push
push
push
xchg
pop
sub
add
mov
or
aas
faddl
sbb
mov
jp
jae
or
movsl
dec
and
sbb
push
outsl
push
sub
inc
add
test
orb
push
sbb
pop
adc
inc
ret
pop
stos
fwait
mov
and
lds
ret
xor
outsl
fstpl
dec
jno
nop
cwtl
cmp
movsb
jmp
jmp
out
mov
dec
mov
jae
sbb
cmp
mov
and
and
cmp
cld
adcb
stc
jno
jg
adc
push
cmpps
add
int
out
and
xor
mov
jmp
xor
outsb
lods
jp
cwtl
or
push
add
inc
jmpw
jae
jo
pop
or
xchg
rcrl
sub
das
push
or
rcll
test
or
sbb
cmp
mov
es
dec
adc
push
bound
test
outsb
addb
add
sti
sub
mov
pop
mov
pusha
push
pop
xchg
pushf
dec
aaa
push
in
add
adc
inc
push
in
push
push
xor
adc
and
xor
add
push
mov
dec
pop
test
fsubl
mov
sbb
lods
xchg
mov
add
outsl
xor
sub
push
sub
xchg
or
mov
popf
mov
adc
inc
leave
jecxz
xchg
mov
sahf
imul
dec
int
mov
lret
test
in
push
dec
movsb
jb
loopne
inc
pop
loope
pop
jmp
dec
js
inc
and
cs
add
pop
inc
dec
bound
mov
out
add
mov
pop
loopne
hlt
adc
stc
pop
or
cmp
cmp
aam
inc
mov
mov
ret
adc
adc
enter
test
xchg
sbb
repnz
add
jg
fs
add
sub
into
jno
xchg
add
and
sub
xor
pop
cwtl
cmc
add
ret
rcll
push
push
inc
and
out
les
push
movsb
popa
add
testb
addr16
mov
jmp
mov
push
mov
fs
lods
loop
iret
add
mov
ljmp
rorb
int
rorb
dec
jae
adc
adc
movsb
or
cld
faddl
mov
imul
cmc
decb
add
stos
repnz
icebp
adc
lret
lds
movsb
imul
cmp
arpl
or
jg
jle
add
or
les
and
and
push
sahf
imul
mov
add
or
movsl
cwtl
pop
fsubrl
orl
push
jle
pop
es
jno
cli
mov
inc
dec
adc
mov
nop
inc
dec
xchg
xchg
lea
dec
xchg
iret
mov
out
and
dec
mov
jae
inc
and
xchg
inc
rcr
or
pop
sbb
push
aaa
fstps
lds
pusha
mov
fdivrl
sbb
add
lahf
lcall
rolb
fcoml
mov
push
mov
jno
push
es
or
pop
xor
or
sub
imul
es
popa
stc
or
mov
cs
loop
add
or
add
sub
or
stos
dec
or
xchg
insl
xor
sbb
test
add
fidivrs
fdivrp
mov
inc
mov
ficoms
xlat
or
push
xor
jne
in
sbb
lahf
in
decl
jge
push
pop
and
out
ja
mov
mov
adc
xchg
loopne
add
pop
loopne
push
xchg
ret
mov
nop
xor
fdivrp
mov
xchg
push
mov
cmc
sub
aas
sbbb
cmp
out
shr
out
pop
rcll
lcall
cmp
or
or
lock
inc
mov
popa
test
sub
xchg
inc
fwait
daa
dec
xchg
out
adc
pop
test
sbb
mov
and
sbb
jle
xchg
addl
sub
stos
rcrb
in
pushf
add
add
insl
push
inc
mov
xor
movsb
adc
sub
test
add
les
add
push
out
pop
add
inc
ret
andl
jno
mov
xchg
fidivs
andb
out
sbb
inc
or
dec
leave
roll
pop
mov
test
push
out
add
sub
jge
outsl
xchg
int3
ss
fistpll
lahf
inc
push
xorb
add
xor
ficompl
ss
and
sti
add
insl
mov
scas
dec
js
out
out
sbb
pop
mov
mov
cmp
mov
clc
xchg
aad
pusha
add
in
xchg
add
mov
out
loopne
dec
out
fdivrs
and
or
rclb
dec
sarl
push
jne
cli
inc
inc
ret
xor
fimuls
dec
mov
add
in
adc
sbb
faddl
lret
add
pop
sub
test
das
sarb
imul
adc
xchg
hlt
es
in
jecxz
adc
and
xor
in
add
aad
lret
inc
dec
int
dec
xor
xchg
in
add
jmp
ret
or
mov
or
mov
ret
jnp
adc
addl
dec
iret
or
aad
nop
xor
push
adc
lods
adc
sbb
ja
fidivs
push
jge
les
mov
and
shr
add
lret
js
sbb
sbb
dec
fdivs
and
adc
shlb
clc
add
int3
dec
push
push
inc
mov
pop
or
jo
or
ret
inc
aas
pop
test
inc
dec
aam
clc
add
popa
xor
or
pushf
and
or
and
mov
and
movsb
push
dec
xchg
data16
mov
xchg
int3
aad
inc
adc
daa
cmpsl
xchg
push
xor
add
sub
cmp
push
ss
shlb
jns
pop
cld
pop
xchg
inc
mov
jmp
mov
dec
daa
and
aas
hlt
mov
dec
std
pop
cwtl
add
lahf
lret
rolb
cs
or
test
xchg
movswl
xor
pop
or
or
mov
nop
inc
test
dec
add
jge
insb
mov
cmp
scas
das
push
jge
xor
sti
sbb
popa
and
cmp
push
scas
add
les
push
mov
mov
lods
push
xchg
aam
add
popf
cmp
fisubs
cmpsl
sub
les
lahf
sti
sbbb
sbb
or
cmpsl
jns
mov
pop
mov
fsubs
jge
ret
lahf
xor
stos
clc
movsb
ljmp
adc
movsl
push
sbb
adcb
push
loope
cmp
push
xor
mov
aaa
inc
adc
xor
orl
or
inc
cld
add
push
fisttpl
and
cmp
add
jb
or
repnz
aas
aas
jecxz
dec
into
xorb
mov
daa
adc
js
jbe
daa
dec
clc
jp
inc
fistl
mov
call
cs
or
imul
sub
add
out
pop
leave
fwait
orb
or
xor
jmp
sub
inc
sub
mov
dec
jle
xor
and
pop
ljmp
jnp
jle
inc
sub
lds
cmp
xchg
loopne
lds
test
out
xor
leave
movsl
mov
mov
sub
cwtl
mov
add
stos
adc
pushf
sbb
fisttps
mov
push
fwait
sub
push
test
push
lahf
dec
sbb
lcall
xchg
lds
dec
scas
xor
loope
push
add
mov
stos
sub
and
cs
mov
lods
test
lds
lds
xchg
lods
addb
sbb
sub
mov
sbb
xchg
aaa
pop
mov
pop
add
pop
xchg
jne,pn
mov
add
cwtl
out
daa
push
lds
mov
mov
inc
rolb
test
add
sbb
mov
or
insb
pop
and
fmul
out
add
fistpl
fwait
mov
ret
inc
push
add
das
test
ljmp
addl
pop
mov
out
lret
sbb
pop
outsb
out
add
push
sub
xchg
inc
mov
mov
sbb
push
gs
add
add
mov
pop
daa
push
shlb
mov
jg
xchg
add
aas
or
rclb
pop
add
mov
mov
pushf
fsts
out
jmp
mov
xor
inc
repnz
rorb
js
out
mov
mov
movsb
xchg
shlb
xor
repz
pop
cmp
push
rcrl
imul
cmc
clc
pop
scas
insb
add
aad
push
gs
rcrb
insl
jno
and
push
addr16
push
push
xor
dec
pop
inc
subl
mov
push
xchg
ret
ja
inc
mov
jecxz
jmp
or
ja
in
in
shlb
and
jns
add
xchg
cltd
xor
sbb
aaa
psllw
xor
or
push
xchg
shll
add
cmp
or
cli
and
push
add
adc
dec
pop
mov
cmp
inc
loopne
and
daa
pop
in
in
mov
and
mov
imul
lock
mov
shl
or
mov
cmpsl
push
ja
or
sarb
add
pop
lods
mov
or
and
jg
enter
inc
icebp
sub
cmp
and
xadd
and
sbb
cwtl
cmp
cs
dec
and
test
and
lcall
stos
xor
or
push
jmp
cmp
dec
sbb
fisttpll
add
repnz
inc
adc
and
mov
mov
inc
insl
stos
subb
dec
cltd
add
imul
adc
cmpsb
insb
mov
sub
hlt
aam
sti
push
js
sub
xor
dec
es
shl
in
push
andb
adc
push
sub
xor
cmpsl
sbb
leave
inc
icebp
out
and
pop
jmp
das
dec
xchg
hlt
fisttpll
push
sub
mov
pusha
mov
adc
xlat
mov
ds
dec
pop
sbb
mov
sub
push
scas
fsubrl
adc
lcall
add
add
jmp
loope
xor
dec
add
or
pop
cmpsl
pusha
les
add
stos
add
rcrl
cwtl
call
push
dec
inc
scas
lock
sti
jnp
push
and
or
and
lahf
enter
push
pop
in
jae
orb
cld
xor
jns
stc
dec
adc
dec
pop
jge
xchg
movsl
xlat
jnp
mov
sbb
cs
add
loopne
nop
movb
and
mov
cmp
rolb
add
jne
fstl
adc
sub
insl
dec
and
add
icebp
sbb
clc
push
inc
cmpsb
lea
xchg
lods
sbb
add
xchg
cmpsb
inc
lock
daa
dec
jno
fsubr
imul
pop
mov
inc
pop
push
daa
mov
rorl
add
fwait
inc
sahf
add
je
sti
sub
stos
pop
pop
jle
add
inc
insb
xchg
xlat
and
jp
ret
bound
pop
jb
sbb
push
and
cmc
or
int3
add
dec
inc
addb
movsl
pop
xchg
mov
mov
xor
mov
cmpxchg
nop
dec
push
xchg
or
add
clc
rol
mov
adc
loope
xor
ss
std
push
add
pop
mov
mov
or
in
dec
orb
enter
lahf
loopne
sub
mov
jns
push
in
mov
shlb
inc
inc
add
push
call
aas
test
fwait
add
lea
and
mov
mov
hlt
xchg
xchg
sub
inc
mov
cmc
dec
lret
int3
mov
inc
add
movsb
lcall
mov
xor
inc
cmpsl
aas
cmp
sbb
xor
es
inc
mov
cmpl
add
jle
rcll
movsl
test
ret
ljmp
add
aas
pop
bts
add
je
stos
rcrl
in
fs
aaa
loopne
mov
push
cs
adcb
add
mov
add
or
xchg
sbb
mov
or
fwait
jle
cmp
push
lods
xor
dec
lret
loopne
adcl
xor
dec
push
mov
into
hlt
mov
pop
sbb
adc
jb
or
int3
and
cmp
pop
add
cmp
jmp
test
sbb
out
inc
push
outsb
sub
fs
mov
push
movsl
stc
fiadds
push
add
sub
lea
or
xchg
jno
inc
btr
lea
push
mov
xchg
mov
ret
jno
add
pop
lods
mov
cmp
rolb
sbb
sub
fmull
enter
cmp
jl
inc
cmp
dec
vpmovsxdq
mov
jns
dec
shrl
clc
mov
sbb
add
and
les
dec
sub
sbb
push
mov
subl
ret
andl
movb
and
scas
out
clc
rorb
mov
jmp
pusha
mov
xchg
movsb
mov
or
push
pop
sub
out
mov
fs
leave
cmc
sub
push
inc
sbb
cmp
xchg
aad
inc
popf
insb
les
insb
sbb
mov
and
daa
in
jmp
push
push
sub
xor
clc
popf
push
or
clc
outsl
fisttpl
cli
test
mov
or
stc
dec
call
testl
mov
imull
xchg
mov
ja
xchg
adc
mov
stos
cmp
les
mov
and
and
mov
adc
pop
pop
ficomps
xlat
adc
and
mov
stc
jp
add
ja
inc
aas
insb
cmp
mov
inc
and
xchg
dec
out
nop
push
gs
add
xchg
cmc
rcrb
dec
jne
and
and
call
sub
add
in
fs
pop
movsl
out
and
imul
xchg
jae
ror
cmpsb
or
mov
cmp
clc
jb
lds
pop
ds
cmc
add
ss
inc
testb
xor
mov
jle
or
andb
dec
arpl
mov
call
fcmove
mov
ret
dec
faddl
shr
pusha
lcall
ljmp
roll
fisubs
cli
pushf
ret
adc
popf
or
inc
pushf
mov
and
je
fistl
xorl
out
int3
xor
aam
pop
adc
mov
cmp
pop
jne
push
pop
pop
and
mov
outsl
cmp
dec
sahf
scas
sub
das
adc
pop
sti
fstps
sbb
push
mov
pop
lods
out
loopne
mov
push
cld
outsb
test
test
or
mov
call
fdivrl
aaa
loop
shl
jg
push
inc
rorb
adc
xchg
pop
pop
sub
sub
shrl
add
mov
clc
push
adc
fiadds
xor
sub
push
in
dec
into
inc
adc
xor
or
leave
adc
push
mov
ja
sub
adc
arpl
loopne
call
repz
xor
mov
cld
out
or
mov
add
mov
mov
add
je
vmovntdq
pop
stc
sbb
xchg
addl
shrb
fnstsw
xor
stc
dec
jae
fimuls
mov
add
dec
js
mov
fldt
jge
cwtl
popf
and
adc
pop
out
test
mov
rcll
mov
inc
je
inc
mov
pop
xor
imul
jae
sub
dec
inc
shll
and
inc
sbb
xlat
mov
adc
or
push
cmp
shll
add
fldcw
and
jecxz
sti
or
lea
jmp
sahf
push
jmp
pop
loope
clc
sbb
pop
jg
mov
insb
cli
add
lea
mov
dec
mov
inc
inc
add
outsb
hlt
and
sbb
pop
pop
mov
cmpsl
jle
sar
lea
xor
imul
push
les
mov
fnstenv
leave
xchg
jne
pop
mov
pushf
cld
stc
fstpt
lret
push
fbstp
subb
sub
ljmp
mov
fdivl
sbb
out
lea
mov
sub
test
addr16
pop
rorb
or
adc
fldl
dec
lock
setae
and
pxor
xor
rclb
mov
xchg
mov
testl
mov
jnp
mov
or
add
lcall
test
in
add
and
mov
xor
sbb
mov
jmp
jo
mov
pop
xor
and
pop
or
sub
ds
bnd
outsb
shrb
push
ret
jmp
jmp
ljmp
jb
mov
repnz
aam
and
in
stos
adc
inc
sub
xchg
jge
repz
in
xchg
ficomps
jo
and
push
cwtl
push
and
xor
pusha
jg
add
cmp
lds
add
jno
popf
stos
out
das
mov
into
les
mov
test
mov
out
fisttpl
lea
or
adc
mull
or
jne
sub
lock
sbb
mov
fisttpl
add
test
lds
xor
mov
add
jae
lods
jg
dec
enter
xorl
add
dec
in
pusha
mov
outsb
lea
cvtdq2ps
push
aad
leave
or
or
jnp
or
jmp
stc
shrb
push
cmp
adc
enter
sub
mov
add
scas
dec
inc
outsb
mov
or
jbe
mov
adc
mov
mov
in
mov
popa
pop
mov
or
add
pop
or
mov
mov
mov
and
cmp
push
jle
cld
mov
lds
xor
nop
mov
lods
mov
pop
rcll
outsb
or
mov
push
push
pop
lods
fisttps
push
mov
add
or
mov
mov
mov
add
xor
add
pop
cmpl
test
popf
movsl
mov
sub
in
add
imul
int3
dec
stos
jno
xchg
mov
inc
dec
pop
aaa
mov
push
jne
mov
or
and
jmp
stos
and
jno
pop
jnp
jnp
jecxz
mov
sub
les
add
ja
mov
daa
cmpsb
nop
test
push
insb
popf
fldenv
add
jge
pop
sbb
or
push
call
nop
out
loope
adc
xchg
xor
fnstcw
rorb
mov
and
add
mov
add
cmp
das
pop
ret
and
mov
mov
adc
xor
gs
adc
mov
add
repz
add
push
call
gs
and
mov
pop
or
repz
imul
test
into
pusha
adc
adc
mov
pop
mov
xor
sub
pop
adc
dec
adc
xor
mov
and
add
call
cli
sub
mov
aam
push
mov
adc
mov
mov
jle
cwtl
pop
daa
aam
mov
push
jg
sub
mov
js
sahf
into
and
enter
cmp
shll
addr16
adc
sub
pusha
inc
pop
push
add
loope
dec
cmp
sub
or
pop
pop
clc
mov
xor
or
push
clc
jo
add
pusha
mov
inc
pop
push
cmp
lock
pop
mov
pop
test
mov
fcomi
movsl
inc
and
push
mov
adcl
adc
pushf
push
or
decl
xor
add
dec
fbstp
xchg
jge
icebp
inc
pusha
lahf
cld
sbb
push
push
mov
xor
scas
pop
pop
add
sub
pop
loop
add
inc
add
stos
sbb
insl
sub
jae
add
cmpsb
pushf
hlt
and
xor
loop
dec
test
cld
mov
pop
push
test
shlb
pop
leave
and
cld
pop
jnp
add
adc
rcrb
test
out
loopne
lods
je
pusha
sarl
sub
daa
jne
jl
fsubl
lcall
addr16
out
ja
mov
sbb
or
out
jp
or
mov
push
push
out
ret
aaa
add
or
fwait
cmc
dec
sbb
mov
mov
sbb
mov
enter
mov
mov
xor
lock
xchg
lea
mov
shlb
mov
pop
adc
pop
add
stc
mov
mov
inc
adc
roll
lock
add
jmp
push
sub
add
or
mov
aas
fwait
jns
in
mov
sub
jae
es
dec
rorb
fsubs
or
jbe
lret
pusha
setge
or
push
data16
jmp
dec
mov
insb
mov
cli
mov
cmp
sub
leave
aaa
xchg
add
push
push
mov
outsb
dec
cmpl
adc
fcom
push
push
cmpl
dec
pop
notl
fnstsw
out
push
daa
cmp
push
enter
daa
push
pusha
push
dec
mov
lods
and
xor
mull
int3
mov
sub
sub
mov
imul
bound
jle
incb
xor
mov
lcall
aaa
mov
out
fisubrs
dec
pop
call
add
pop
jmp
cmc
add
pop
adc
add
jnp
jo
mov
xchg
sub
mov
and
outsb
jo
or
shlb
mov
xor
add
mov
out
loopne
cmp
mov
push
sbb
mov
sbb
mov
mov
inc
push
xchg
scas
sahf
aam
cltd
add
arpl
adc
xor
and
xchg
std
out
xor
pop
clc
addr16
or
mov
inc
sub
mov
pop
incl
jo
xchg
iret
add
mov
test
cwtl
loopne
ja
pop
and
cmpl
popf
stc
cmpl
inc
or
sbb
mov
dec
mov
pop
nop
cmpsb
mov
dec
cli
mov
mov
mov
stos
imull
cmp
or
push
push
pop
pop
pop
jbe
push
andl
mov
add
andb
movsb
stos
add
xchg
lret
xchg
repz
clc
push
leave
cmc
mov
mov
subb
fs
rclb
add
push
dec
or
pop
fdivs
dec
add
mov
fisubs
adc
movl
dec
int3
and
adcb
lock
stos
nop
mov
jmp
adc
cmp
pop
mov
lcall
inc
in
cmp
pandn
pop
movsb
jmp
aaa
jmp
ss
fs
pop
sbb
sub
and
sbb
adc
push
daa
sbb
mov
mov
xchg
mov
sbb
mov
cli
sub
sbb
pop
lods
pop
mov
lds
pop
imul
fiadds
into
mov
stc
adcl
jb
xor
mov
xor
stc
push
mov
and
les
dec
leave
or
push
mov
outsl
add
dec
sbb
xchg
sbbl
xchg
mov
jle
shrl
std
loop
pop
mov
mov
adc
clc
mov
mov
jno
scas
aaa
sbb
insb
mov
or
pusha
add
xlat
jns
add
je
push
and
xchg
rcr
sarl
or
int
cmpl
aam
add
fwait
push
rorb
bound
xlat
dec
scas
or
add
fsubl
adc
ret
mov
cmp
sub
sub
shll
mov
xchg
push
mov
movb
lods
and
sbb
pusha
jae
jecxz
mov
popf
in
cmp
shlb
inc
fimull
mov
mov
mov
xchg
dec
lcall
pop
jg
mov
add
jne
inc
or
scas
mov
loope
movsl
xchg
out
jge
xorl
push
movsb
mov
popa
mov
inc
les
cmp
add
push
jl
dec
out
mov
or
adc
mov
les
jne
mov
mov
add
pop
pop
sti
aas
sbb
sub
or
lret
inc
arpl
mov
add
leave
dec
mov
push
dec
or
hlt
icebp
dec
push
pusha
aam
inc
pop
ret
and
jnp
scas
add
xor
scas
fcmovu
xor
inc
jmp
test
and
and
aad
shr
mov
imul
ficoms
push
add
aas
pop
pop
fs
mov
and
insb
sbb
adc
fildl
or
js
shlb
mov
hlt
filds
adc
test
jbe
cmp
or
inc
push
mov
insl
sbb
jb
or
das
add
ret
mov
add
nop
push
jmp
pop
push
xlat
cmp
pushf
lahf
sti
adc
out
cmp
xchg
jle
mov
xor
push
bound
loop
outsb
dec
and
mov
or
mov
dec
push
pushl
inc
inc
pushf
das
pop
add
loope
nop
out
xchg
add
sti
and
sbb
add
gs
sbb
mov
arpl
inc
pop
mov
push
xor
in
add
scas
in
pop
ficoms
sub
inc
push
popa
dec
mull
push
jo
mov
lods
pop
dec
lret
xchg
shlb
or
insl
push
or
daa
add
inc
mov
popf
aaa
add
add
and
mov
in
ljmp
ret
mov
push
inc
or
int
add
dec
outsb
adc
nop
andb
popa
enter
mov
std
push
rcl
pop
xchg
mov
xlat
xor
sub
das
sub
imul
cwtl
xchg
sub
mov
popa
inc
jge
mov
lret
push
or
push
out
int3
mov
or
adc
and
jmp
shrl
cmovle
jbe
add
das
xor
pop
add
adc
nop
push
clc
pop
jnp
daa
fadd
add
inc
pop
shlb
sbb
sbb
daa
shll
jns
xchg
mov
jbe,pn
les
add
push
loop
xchg
adc
outsl
push
dec
loopne
sbb
inc
xor
fadds
movsb
movsl
into
xchg
out
xor
in
int3
jb
lock
or
push
mov
in
adcb
adc
mov
xchg
xor
bnd
or
stos
roll
mov
xchg
movsl
out
enter
push
enter
and
sbb
cmp
cmp
mov
xlat
inc
cwtl
push
adc
mov
pop
jo
fidivrl
testb
cs
mov
mov
or
jmp
imul
dec
sub
test
push
sub
jo
movsl
inc
sbb
data16
outsb
lret
jb
mov
xchg
xlat
mov
fisttpl
dec
add
jg
call
xchg
xchg
dec
icebp
ss
inc
lds
sub
fwait
dec
sbb
js
das
add
lret
mov
add
outsb
xor
jl
dec
inc
xchg
fstpt
cmp
or
outsb
in
sbb
add
icebp
stos
add
loope
pop
aas
mov
cmpsb
push
clc
sub
ljmp
rcl
mov
loop
pop
xchg
cmp
mov
out
in
gs
jg
jns
lds
adcb
scas
xchg
xlat
add
push
mov
cmp
xor
cmp
in
in
xor
mov
xor
inc
adc
or
mov
cmpsl
cmpsb
dec
out
cmpsl
jo
push
push
jno
cmp
rcll
mov
imul
pop
cld
sub
out
dec
sub
add
sub
push
add
xor
loop
loope
sub
add
aas
rcrb
xor
or
jns
inc
mov
add
test
loop
jle
mov
rolb
add
enter
add
sub
arpl
mov
cltd
pusha
mov
fcoml
lfence
mov
fldt
scas
sbb
fldl
loope
push
add
sbb
sub
mov
leave
pop
jp
icebp
adc
lahf
inc
sub
data16
xor
sbb
out
add
pop
pop
ret
sbb
and
push
jle
mov
pop
push
adc
mov
test
nop
mov
dec
pop
adc
ss
loope
and
xchg
inc
push
add
les
add
sbb
and
jno
leave
fldl
add
mov
pop
cs
js
adcb
add
ss
xchg
dec
sbb
imull
call
es
push
jmp
jp
aaa
add
mov
cwtl
mov
jns
adc
int3
inc
and
push
push
lds
les
nop
add
out
jb
mov
lret
orl
filds
das
je
int
daa
or
in
or
jle
leave
sub
dec
dec
jg
fnstsw
add
jmp
and
clc
je
dec
ja
out
cmpsb
pop
mov
cmp
adc
sbb
mov
pop
lods
push
in
lea
lret
and
jg
dec
fucomip
daa
das
stc
inc
mov
js
inc
leave
pop
pop
imul
stc
mov
push
add
and
test
bound
and
mov
bound
fisubs
or
loope
dec
popa
test
lods
xor
and
cmpsb
popa
or
push
inc
sbb
lahf
imul
aad
subb
and
or
push
mov
add
mov
call
and
fcmovnbe
add
repnz
popa
xchg
mov
adcb
cmp
jg
xor
pop
fcom
bsr
pop
pop
inc
mov
lds
pop
subb
sub
pop
cmp
les
jnp
cwtl
cmp
shrb
loopne
push
ds
pop
add
add
arpl
add
in
inc
mov
push
xor
mov
adc
xchg
ret
pop
mov
out
iret
adc
cmovg
jp
dec
dec
pop
mov
add
mov
mov
pop
dec
add
or
filds
gs
push
push
fistl
sti
sar
jge
nop
xchg
mov
inc
loop
xchg
rep
neg
popa
btc
outsb
dec
repz
mov
rclb
shll
das
xchg
stos
testb
scas
out
jg
ljmp
dec
mov
jmp
mov
mov
push
cmp
inc
push
insl
fnstcw
dec
push
push
adc
daa
pop
inc
lock
pop
test
sub
hlt
out
daa
add
push
push
movsb
insb
data16
rol
repz
mov
cmc
shll
inc
dec
sbb
popf
jne
pop
in
mov
cltd
ljmp
push
dec
cli
sti
xchg
inc
sbb
shl
cwtl
pop
xor
mov
mov
insl
inc
adc
or
pop
fisttpl
test
mov
dec
mov
mov
sbb
dec
dec
mov
ret
int3
nop
icebp
push
movsl
or
insb
cmpsb
pop
fsts
xchg
push
xor
add
adc
adc
mul
fcomps
pusha
mov
add
xor
cs
roll
nop
cmpsb
xor
sbb
xchg
lret
add
and
pop
add
mov
pop
imul
push
dec
popa
jbe
or
ficoml
or
bound
sbb
jmp
mov
popa
cmp
jmp
movsb
mov
jne
outsl
inc
adc
push
xor
mov
rcr
cmpsl
in
jp
sbb
test
test
sbb
sub
mov
jg
xchg
cmp
or
cs
and
sub
or
clc
xor
arpl
add
lret
mov
and
lods
out
jae
jmp
cmp
lods
shrb
fdivrp
mov
xor
jns
imul
dec
nop
push
das
mov
ljmp
out
movsl
cmp
mov
adc
dec
jp
mov
filds
adc
mov
xor
push
cwtl
orb
mov
jecxz
jns
add
pushf
fnstsw
cld
aad
xchg
jae
adc
inc
add
add
mov
lods
addr16
repnz
inc
cmp
adc
imull
xor
insb
add
jno
push
xlat
mov
inc
scas
mov
add
lds
sbb
xchg
inc
push
sbb
adc
push
mov
mov
rcll
mov
pop
test
pop
mov
arpl
add
and
xchg
mov
pop
xor
inc
or
add
les
mov
mov
sbb
ret
aaa
pop
mov
enter
je
and
xchg
sbb
fwait
mov
gs
fildl
push
push
or
mov
lahf
mov
jmp
pop
outsb
mov
mov
cmc
cwtl
or
push
or
sbb
xchg
sub
enter
dec
push
repnz
cmp
ret
jecxz
loop
xor
sub
test
ds
or
call
ljmp
and
adc
mov
dec
fnstsw
gs
add
dec
mov
adc
je
dec
pop
and
add
call
cmovp
shlb
loope
outsl
xchg
add
xchg
mov
scas
je
cltd
jmp
add
xchg
push
hlt
sbbb
outsl
fwait
dec
pop
pop
add
aas
enter
mov
adc
mov
add
xchg
or
sbb
adc
jbe
or
test
addb
sub
jne
mov
jge
data16
adc
or
and
or
insl
jns
fnsave
mov
pop
filds
test
dec
add
push
and
mov
adc
loopne
mov
fstps
cmp
push
mov
scas
sti
stc
adc
femms
push
xor
test
iret
popf
shlb
andb
int
rcr
mov
lret
punpcklbw
nop
push
push
addr16
scas
pop
lods
adc
dec
call
insl
dec
sbb
or
or
shrl
or
in
stos
xchg
cltd
test
sub
adc
arpl
scas
cmp
xchg
xchg
pop
jae
pop
mov
xchg
cli
adc
stc
mov
and
std
inc
pop
mov
and
int3
mov
out
jbe
inc
subb
loope
push
cmp
cmp
xor
test
popf
cmp
mov
jg
push
popa
fists
pop
cmp
push
adc
aad
outsb
hlt
mov
push
jl
in
call
cmp
adc
and
insl
push
shrl
mov
hlt
add
jns
sub
or
aad
pop
jne
insb
add
js
jg
jbe
das
cwtl
pop
adc
pop
aaa
mov
or
cwtl
cmp
add
inc
xor
mov
sbb
mov
cmc
loope
lea
fs
jae
mov
and
push
mov
pop
xor
sbb
add
sbb
cmpl
cmpb
push
outsb
insb
add
and
in
cs
mov
popl
stos
pop
push
sahf
or
cmpl
mov
jnp
gs
mulb
out
insl
cmp
aaa
jnp
cld
add
rep
mov
add
out
pop
cmp
dec
cli
test
fwait
mov
aaa
nop
dec
popf
icebp
and
and
xor
xor
mov
dec
fcoms
stos
daa
jns
pop
sub
add
fnstcw
out
or
xchg
jbe
ficompl
jl
fisubl
dec
add
iret
fbstp
test
mov
aaa
sub
adc
mov
addr16
mov
lods
sub
push
cmp
inc
pop
mov
xchg
das
push
and
mov
add
push
shrl
cwtl
gs
pop
repnz
or
pop
lods
fimuls
jns
or
loope
test
aam
mov
mov
in
pop
or
mov
sarl
mov
sub
mov
leave
hlt
sbbb
les
stc
add
lahf
mov
popf
or
mov
mov
andb
test
or
inc
dec
sub
adc
mov
mov
pop
cmpsl
mov
outsb
call
movsl
push
cwtl
cmp
adc
enter
rolb
add
inc
cmp
push
lock
dec
sub
pop
into
xor
xchg
mov
mov
or
lods
push
push
ja
pusha
mov
popa
push
lods
inc
add
fimuls
jo
add
and
leave
mov
dec
or
ret
add
push
icebp
dec
pop
fbld
lea
xchg
testl
jo
inc
pop
add
add
mov
sub
int3
pop
sbb
aas
inc
pop
cmp
and
or
fdivrl
add
sti
test
stc
jnp
scas
mov
add
xlat
mov
push
imul
add
fidivl
jne
adc
xchg
loope
add
test
sbbl
cmp
and
das
push
sub
push
push
cmp
cmp
addr16
pop
adc
sub
dec
outsl
pop
add
or
pop
lods
imul
nop
dec
pusha
sti
shrb
mov
call
outsb
add
rorb
xchg
es
adc
adc
add
out
or
pop
xchg
sbb
outsb
cmp
popa
jae
sbb
popa
xchg
pop
fmull
mov
cli
jge
lods
cwtl
jecxz
test
cmp
pop
pop
cmp
ds
cmpsl
andb
xor
fbld
in
in
inc
sub
jno
inc
jae
and
or
add
je
test
and
adc
sbb
cmc
arpl
repz
dec
push
rolb
lcall
push
int3
fcomps
xor
pusha
dec
dec
popf
mov
or
cltd
add
hlt
lock
push
loopne
xor
dec
std
cld
test
mov
pop
mov
popa
int3
xchg
in
xor
xchg
mov
xchg
cwtl
pop
add
add
push
inc
push
push
mov
lea
add
add
cmp
jb,pn
fbstp
adc
cld
addr16
lds
scas
or
and
mov
push
sbb
daa
xor
mov
pushf
mov
xor
scas
mov
hlt
out
mov
xor
push
jmp
or
ret
stc
andl
filds
push
mov
hlt
aad
and
add
ret
add
out
sbb
sub
fimull
lea
repz
popa
pop
popf
add
sub
pop
inc
xchg
dec
mov
loope
loopne
adc
jno
test
test
leave
mov
and
push
testl
mov
pusha
sar
lods
jno
and
popf
leave
dec
sub
into
inc
xchg
xchg
cmp
push
push
into
mov
sbbb
popa
int3
ljmp
mov
sbb
movsb
sbb
aam
pusha
xor
dec
cmp
cmc
andb
inc
sbb
mov
pop
lahf
push
xlat
jle
mov
xlat
rcll
movsl
rcr
push
aad
pop
pop
out
ficompl
pop
shl
loop
mov
sti
jp
sbb
dec
xchg
mov
mov
ja
rorb
or
pop
scas
push
or
push
add
pushaw
dec
and
popf
and
xchg
out
cmpsb
cmp
dec
dec
mov
jl
dec
lock
daa
fcmovne
jo
stc
jno
adc
mov
mov
xchg
xchg
sbb
dec
xor
nop
jmp
addr16
mov
jbe
jle
or
xchg
lahf
hlt
stc
mov
or
push
mov
popa
fcmovnbe
xor
dec
sub
add
xor
fwait
pop
out
and
popa
push
insb
je
fdiv
mov
faddl
mov
push
or
add
pop
xor
and
mov
pop
push
mov
mov
pop
test
fdivs
add
iret
mov
sub
aam
push
dec
clc
cmpsb
jns
add
dec
int3
dec
add
or
fidivs
dec
sbbl
bound
mov
xchg
outsl
pop
inc
dec
fmulp
pop
sub
insl
jmp
mov
in
adc
pusha
pusha
mov
and
rep
cmp
arpl
jmp
insb
or
nop
mov
add
push
sbb
addr16
movswl
mov
mov
add
sub
pop
dec
das
cmp
add
push
and
shlb
rorl
decl
xor
xchg
jl
and
loope
sub
inc
or
pop
shl
sub
or
pop
push
jp
arpl
lret
or
mov
cs
shll
push
xchg
fiaddl
iret
add
sub
out
fisubrs
fadd
aas
bnd
and
and
shrb
add
lcall
mov
mov
push
mov
addr16
push
push
xchg
cmpsb
xor
jmp
push
adc
in
and
mov
mov
std
loop
pusha
negb
leave
mov
fmulp
pushf
fs
imul
pop
mov
pusha
xor
popa
xchg
stos
ss
in
notb
ds
std
or
dec
insl
inc
sarb
pop
add
pop
mov
inc
test
cmc
mov
enter
int
add
add
pushl
dec
mov
mov
cmc
in
popa
jmp
ret
mov
xchg
les
adc
out
xor
push
adc
sbb
push
xor
sbb
rolb
add
pop
clc
movsl
dec
xchg
rorb
pop
add
jle
aaa
mov
fs
pop
dec
add
std
push
adc
ds
adc
cli
rcrl
jmp
inc
mov
pop
push
in
and
test
shl
add
mov
lods
lods
pop
fistpl
insl
and
adc
popf
sbb
or
mov
out
xor
adc
sub
and
fldln2
dec
pushf
enter
mov
movsl
sub
lods
sbb
add
mov
popa
mov
adc
in
scas
loopne
imul
ja
jl
and
jl
movsl
add
xor
xchg
add
or
and
roll
jns
push
jo
popl
and
ret
fildl
inc
mov
inc
adc
adc
cmp
push
sbb
outsl
fucom
sbb
mov
pop
fldenv
pop
and
imul
and
cwtl
flds
pop
pop
mov
hlt
push
adc
mov
ss
in
add
dec
xchg
mov
test
lods
cmp
cmpsb
xchg
loopne
mov
add
loopne
das
sub
outsl
loope
out
mov
jg
lret
xlat
adc
xor
jnp
and
in
movsb
fimull
scas
and
pushf
push
add
sarl
sub
test
pop
cmp
data16
popa
add
dec
add
aas
sub
daa
es
outsl
mov
test
jno
lahf
popa
shl
mov
mov
add
sbb
or
and
popf
repz
nop
jbe
adc
cmp
xchg
lcall
and
sub
nop
push
mov
mov
pushf
mov
add
add
mov
mov
mov
insl
xchg
bnd
push
inc
sub
or
sahf
push
adcb
cmp
lock
adc
pop
xor
pop
pop
add
jns
or
sub
testl
pop
pop
jo
mov
and
lea
push
push
pushf
jne
xchg
push
dec
in
loopne
and
repz
pop
and
xor
std
mov
hlt
les
mov
pop
cld
imul
pop
les
xchg
test
adc
sbb
mov
push
outsb
and
in
sbb
negb
sub
pop
push
imul
dec
xchg
int
sbb
mov
jbe
add
cld
mov
add
lea
push
mov
lds
clc
stos
add
mov
xchg
mov
xchg
dec
jo
inc
or
mov
sbb
mov
cmp
movsb
jnp
add
mov
xchg
lcall
hlt
loopne
xchg
fmull
jne
jnp
outsl
and
jnp
cmp
movsl
jge
inc
pop
inc
adc
or
pop
xchg
adc
dec
pop
pop
hlt
loop
dec
js
dec
sbb
jge
mov
addl
mov
add
lcall
add
cmc
push
pusha
lahf
ficompl
xor
lock
adc
ss
push
mov
inc
sbb
sbb
add
mov
mov
adc
movsb
mov
add
xchg
mov
xor
add
xchg
cmp
xchg
movsl
sub
iret
jl
int
inc
jae
pop
gs
out
dec
push
adc
lret
lahf
and
bound
mov
enter
cmp
or
adc
jle
add
jmp
xchg
jnp
adcl
mov
fcoms
sbb
jnp
stos
push
pop
lahf
mov
xor
scas
push
mov
mov
xchg
jmp
hlt
and
add
push
rorb
imul
pusha
xor
mov
jae
rorb
xchg
mov
dec
testl
cmpsb
dec
add
addr16
pop
lret
add
imul
dec
hlt
test
or
add
add
mulb
mov
mov
aam
dec
ljmp
pop
movsb
iret
into
cs
inc
rcrb
cmp
push
add
gs
add
mov
maxps
in
das
pop
call
addb
lahf
inc
mov
mov
sti
jg
cli
fildl
cwtl
rcrb
sbb
pop
pop
cld
jmp
mov
cltd
inc
fdivs
scas
or
jecxz
jmp
cltd
push
ret
lods
add
das
idivl
les
cld
fsub
xor
jno
add
js
rolb
aas
xchg
mov
rcr
sarb
mov
out
ja
xchg
and
in
sub
mov
xor
int
add
cld
push
in
add
int
dec
pop
jne
imul
out
imull
js
and
jns
sbb
daa
aad
inc
push
lahf
loop
pop
push
push
inc
adc
xchg
push
pop
push
mov
enter
pusha
leave
inc
add
jb
insb
test
inc
sub
push
test
push
mov
xchg
imulb
dec
lahf
pop
subl
imul
popf
cmp
ss
pop
push
arpl
mov
adc
sbb
mov
fsts
xchg
xlat
add
push
mov
nop
push
popf
adc
inc
pop
xchg
jl
add
in
call
ss
rcrl
add
iret
push
imul
out
jge
ljmp
out
mov
jns
int
jmp
jl
xor
add
cwtl
flds
mov
and
outsl
mov
fnstcw
cmp
xorl
or
scas
ficoml
adc
mov
rcll
dec
and
test
push
pop
in
in
xchg
or
fcmovnu
popa
bound
and
mov
mov
or
push
hlt
add
test
or
out
or
inc
fimuls
bound
fstps
and
inc
mov
pop
fwait
dec
lds
adc
push
pop
xchg
inc
imul
pop
pop
push
lcall
lahf
dec
mov
call
fimuls
sub
jae
cmc
push
mov
out
mov
xor
repz
lret
push
sbb
cmpsb
daa
mov
xor
ret
icebp
mov
fisubl
xor
pop
add
loopne
dec
sahf
add
jae
fisttpll
or
xchg
imul
jp
mov
scas
rorl
je
bound
xchg
or
push
pop
pop
inc
das
mov
addr16
and
adc
mov
jmp
cmp
push
xor
jmpw
xchg
and
push
xchg
test
pop
std
and
sbb
ljmp
out
dec
lea
add
out
cmp
adc
jg
mov
or
push
push
inc
inc
loop
repnz
xchg
fcoml
push
popa
nop
add
outsl
stos
arpl
scas
fwait
insb
xchg
xlat
rcl
fbld
add
inc
imul
and
push
movsl
jbe
jmp
xchg
stos
add
mov
push
jl
sub
iret
aad
inc
clc
das
popa
mov
add
rcr
mov
sub
jo
add
clc
inc
push
add
test
scas
in
add
bound
and
push
add
mov
jae
das
shr
mov
add
decl
jmp
add
mov
mov
je
sub
jmp
add
inc
pop
pop
xchg
fmuls
cmp
jmp
xor
roll
and
push
sub
xchg
or
inc
push
mov
imul
mov
mov
adc
call
add
fxch
cmpsl
xorb
clc
add
lret
push
movsl
xor
mov
xchg
jl
dec
fcomp
iret
dec
pop
or
addr16
js
mov
mov
clc
jns
mov
popf
xor
add
mov
mov
out
inc
leave
call
loope
jns
mov
sysret
out
xorb
inc
hlt
or
fisubl
andb
or
shlb
ret
daa
xor
push
insb
pop
mov
mov
enter
adcb
or
in
loop
and
add
fistpll
sub
das
and
mov
xchg
pop
in
repnz
nop
pop
pop
and
inc
enter
ljmp
add
cmpb
icebp
inc
jbe
dec
dec
imul
fisttpl
push
das
popa
mov
daa
dec
lcall
loop
lcall
add
inc
mov
and
stos
mov
and
push
xor
aaa
inc
dec
pusha
outsb
push
add
lcall
mov
sub
shll
sub
insl
sub
call
mov
movsb
add
xor
cld
es
pusha
std
pusha
jecxz
add
fst
cmp
xor
leave
and
sbb
aad
cli
and
mov
mov
push
jno
in
cmc
mov
dec
inc
out
add
push
sub
mov
bound
dec
and
jns
add
jecxz
xor
loopne
or
xchg
aam
fs
add
iret
add
das
sbb
jo
repz
scas
je
dec
push
jecxz
sbb
mov
fcomps
les
lret
dec
pop
addr16
cmpsb
dec
pusha
mov
add
fcoml
stos
dec
fwait
jo
jmp
xchg
push
sbb
pusha
cs
scas
gs
push
add
aaa
adc
xor
mov
mov
inc
add
pusha
lods
movsl
sub
lea
sub
pop
jmp
clc
pop
ret
test
lds
push
push
and
inc
add
add
push
test
adc
push
lods
mov
add
mov
cmpsl
repnz
or
adc
and
scas
pop
and
xchg
subb
out
cmp
cmpsl
xor
mov
push
mov
mov
dec
xor
andb
mov
mov
add
iret
aas
shrl
inc
push
inc
dec
test
inc
js
movl
clc
mov
lock
push
sqrtps
inc
lss
jg
mov
js
les
sarl
push
mov
xlat
loop
dec
pop
jecxz
cmp
push
mov
sbb
dec
push
shll
sub
adc
push
outsl
icebp
dec
add
cmc
loop
xorb
fimuls
es
and
rcpps
nop
mov
adc
in
pop
mov
add
mov
and
call
clc
push
ds
popa
sar
jo
cmp
mov
xor
lret
popf
xor
imul
loopne
cmp
imulb
push
xchg
jmp
in
sbb
leave
imul
xchg
popa
add
cmp
ret
in
push
jno
sub
ror
nop
pop
cmp
adc
dec
shll
inc
adc
jecxz
daa
in
jnp
bound
dec
test
xchg
icebp
xchg
cltd
lock
xchg
mov
xchg
sbb
cmpsb
in
push
sarl
shl
pop
sbb
jle
orb
cltd
rcll
cmpsl
ljmp
or
inc
sbb
pusha
data16
repz
push
cld
mov
pop
ljmp
aas
adc
andl
push
dec
xlat
or
xchg
and
push
shr
adc
add
push
mov
cli
mov
inc
out
add
in
push
lods
sbb
das
int3
js
enter
and
cld
xchg
add
loop
std
je
sub
lock
jae
daa
pop
push
inc
mov
rolb
or
pushf
repnz
xchg
lea
in
mov
jne
push
stos
xor
pop
jb
das
add
aad
fnstsw
jbe
sub
adc
sti
push
adc
sbb
int3
sub
lods
not
adc
cmpl
dec
jecxz
daa
lods
fstpl
lret
movsl
mov
jmp
inc
test
sti
loopne
out
pop
mov
jne
inc
adc
mov
pop
mov
cmp
test
add
push
mov
xchg
cs
mov
sub
fwait
cmpsb
cmp
popa
push
push
or
pop
cltd
xchg
sub
lahf
icebp
sbb
push
imul
cltd
rorl
shll
clc
or
jno
daa
sub
dec
sahf
mov
sbb
sbb
mov
es
push
cmp
jo
jne
fisubrl
pusha
scas
jg
add
add
jb
movsl
imul
es
icebp
mov
sti
fsts
cli
cmp
xchg
test
add
jne
sbb
leave
sub
pusha
cmpsb
push
mov
mov
mov
sbb
decb
mov
sub
mulb
lcall
push
aaa
inc
push
insl
jb
add
push
push
xorl
jmp
pushf
data16
lahf
jb
loop
shrl
mov
insl
jmp
sbb
jb
shll
xchg
mov
push
and
mov
fildl
ret
pusha
cmc
inc
or
fimuls
out
mov
orl
jnp
in
mov
addr16
roll
mov
bound
pop
or
and
or
push
mov
subb
sub
or
int3
mov
imul
mov
loopne
xor
add
or
ret
dec
jecxz
mov
int
ds
mov
nop
mov
push
in
test
scas
in
jmp
inc
test
adc
aad
xor
outsb
add
sub
dec
mov
add
pop
sub
test
pop
popa
ljmp
stos
sbb
add
in
and
push
pop
mov
add
into
jge
mov
mov
xchg
fcoml
cmp
pop
cli
xchg
in
pop
add
jg
mov
sub
pop
sbb
jnp
mov
inc
or
in
dec
adc
sbb
xor
out
jp
bound
shll
inc
cs
iret
adc
inc
xchg
imul
fnstenv
cmc
sbb
cmp
push
insb
incl
repz
pop
pop
jbe
popa
movzwl
ds
frstor
add
mov
inc
jns
movsb
xchg
jl
or
loopne
popf
test
xchg
jae
cmp
or
pop
push
jae
aas
pop
movsb
pop
xchg
sti
jecxz
sub
pop
aam
mov
das
rclb
xchg
gs
and
aam
pop
sbb
adcb
mov
dec
mov
mov
gs
daa
push
pushl
push
add
iret
les
adcl
pop
pop
xor
pop
pushl
dec
sub
jbe
mov
in
inc
stos
ds
add
cltd
cmp
push
clc
pop
mov
dec
add
push
xor
cli
jb
cmp
ja
xorl
inc
sub
dec
sub
in
adc
popf
movsb
xchg
fcoms
popa
add
sub
in
popf
xchg
add
xchg
scas
cs
roll
andb
mov
push
mov
sub
enter
mov
xchg
pop
push
add
mov
sub
roll
aaa
call
push
cmpsb
je
mov
lods
and
dec
sub
imul
push
stos
mov
xor
pop
insb
xchg
inc
and
and
jge
push
movsl
sbb
sub
out
enter
lods
sbb
test
test
mov
mov
and
out
popf
sbb
lods
add
adc
cld
sub
jno
dec
push
push
cmpsb
mov
in
rolb
movsl
add
call
sbb
jmp
cmpsl
inc
in
enter
testl
dec
add
jle
mov
cmpsb
xchg
imulb
mov
fnstsw
or
jb
adc
adc
or
cli
fcompl
sub
cmp
add
popf
orl
push
add
and
mov
adc
sbb
pop
imul
jmp
and
mov
adc
cmc
mov
mov
cmp
pop
adc
mov
leave
add
test
clc
lahf
out
outsl
into
add
loope
xchg
add
mov
divl
dec
push
rcrl
jge
add
test
xor
push
inc
sbbl
popa
aaa
cmp
inc
test
mov
adc
and
int3
movl
or
jge
cmpsb
je
xchg
mov
push
in
adc
add
mov
or
jmp
dec
inc
in
dec
add
rolb
ret
jp
mov
stos
jbe
mov
out
adc
pushf
mov
jp
adc
add
sbbb
imul
fstl
hlt
sbb
inc
aam
xchg
cwtl
icebp
add
push
fsub
and
push
js
lcall
mov
and
arpl
adc
sub
out
loope
push
or
inc
sbb
cmp
and
iret
pop
pop
stc
in
pop
dec
mov
add
int
fcoms
jecxz
jo
mov
sub
repnz
ret
jnp
jo
mov
and
add
shrb
popf
pop
shll
cmp
scas
cmpsb
sbb
stos
xchg
cmp
cs
js
and
pusha
sub
addr16
in
dec
mov
mov
cmp
stos
outsb
mov
dec
add
sbb
and
mov
fadds
faddl
mov
cmpsb
pop
ljmp
sub
add
out
cmp
or
inc
xor
mov
in
mov
notb
pop
jno
daa
inc
pop
add
push
sub
jnp
imul
test
rorl
popa
and
dec
out
cmp
pop
mov
notb
sbb
adc
fwait
mov
push
lcall
jl
jp
in
aam
and
mov
lahf
xchg
lea
cmpsb
sarb
ss
xor
idiv
mov
das
sub
bound
lret
fsubrp
imul
leave
std
xor
fistpl
in
push
loop
div
add
push
sub
stos
les
cli
jp
add
sub
popl
xor
jecxz
inc
pop
ret
ficoms
fimuls
popf
mov
mov
mov
sub
pusha
dec
or
push
popa
jns
addb
cltd
pop
push
into
filds
mov
push
jge
and
jp
mov
scas
add
sub
cmpl
dec
or
xchg
xor
or
call
popa
adc
orb
sbb
cs
dec
push
gs
pop
bound
fwait
push
push
imul
or
pop
fdiv
test
dec
int3
fwait
addl
call
pop
pop
inc
xchg
loopne
cltd
sbb
cmc
les
jp
int3
sbb
push
loop
dec
lret
das
add
mov
call
orl
int
mov
add
sub
mov
mov
bt
push
outsb
jmp
int3
js
xchg
dec
xchg
sbb
shrb
lahf
dec
pop
bound
mov
sbb
rcrb
sub
clc
pop
jo
push
loopne
push
loope
lahf
push
xchg
lods
xchg
mov
adc
add
mov
iret
adc
adc
jns
lret
xor
shll
mov
ja,pn
push
fcomi
rorb
push
mov
aad
mov
mov
lods
add
add
stc
fldl
movl
incl
mov
dec
lds
out
sub
xchg
hlt
lea
cmp
inc
sbb
mov
xor
cmp
iret
xchg
inc
jp
push
push
dec
xor
mov
clc
jmp
andb
adc
push
push
scas
mov
push
js
loope
inc
popa
lods
add
sub
adc
call
loopne
bound
xchg
shll
sub
mov
pop
jns
push
dec
cld
dec
jg
pop
faddp
or
push
sub
das
cmpsb
adc
add
lea
sub
pop
clc
pop
lods
xchg
stc
and
push
pop
xor
lea
lret
xchg
repz
es
add
jne
add
inc
es
xchg
and
adc
sub
pop
add
bound
jo
xchg
cmp
inc
add
jl
inc
sbb
adcb
cmp
jne
xchg
xor
repnz
cmpl
xlat
push
je
hlt
add
scas
xchg
fdivrs
sub
nop
call
into
imul
and
popa
popf
or
call
or
adc
sub
test
std
addb
add
cmp
add
rcll
jne
lea
lds
sbbb
sbbl
mov
and
jo
xchg
sbb
jae
ret
cmp
sub
addr16
fwait
cmp
mov
sbb
xor
cld
iret
dec
out
outsl
testb
das
cmp
xchg
add
fldcw
jge
xor
jp
test
jnp
cs
dec
jne
ficoms
mov
mov
xor
pop
inc
or
or
add
pop
clc
cmp
jp
hlt
mov
add
add
cmc
xchg
jle
out
lea
scas
dec
adc
xor
idivl
xor
jg
pop
jns
outsb
pop
cmp
mov
push
pop
mov
icebp
nop
and
aad
xor
xchg
ficompl
jmp
adc
in
lods
insl
daa
fs
and
rcrb
gs
push
call
add
enter
jp
add
and
mov
mov
mov
or
mov
dec
ds
lcall
mov
jecxz
shlb
daa
cmp
sub
mov
sub
mov
xchg
adc
mov
adc
bts
cmp
out
cwtl
popf
add
push
aaa
or
jmp
adc
imul
add
dec
xchg
pop
dec
les
addb
jno
xor
cmp
mov
pop
popf
add
rcr
out
jo
stos
in
jl
adc
add
xor
add
addb
dec
sbb
push
lcall
mov
xchg
lret
in
xor
call
xor
xlat
xchg
adc
nop
add
jl
mov
cs
cmp
sub
stos
xor
aas
dec
pop
pop
repnz
popa
mov
jl
adc
push
or
fwait
or
cmp
cmp
xor
movsb
mov
adc
enter
sub
mov
faddp
push
sub
shr
xor
inc
xor
pop
and
les
sub
fstpl
push
add
int
jmp
loope
movsl
inc
pop
xor
jp
sbb
fcoml
and
movsb
xchg
aad
popf
xor
cltd
dec
or
cmp
inc
jle
add
jmp
add
bound
xor
push
insb
xchg
fidivrs
mov
and
push
stos
fsub
nop
jns
cmp
or
call
xchg
pusha
xor
xchg
cmpb
cltd
addr16
dec
cmp
mov
mov
pop
and
cld
mov
hlt
mov
aaa
or
inc
leave
test
inc
pop
pop
mov
cwtl
adc
adc
mov
sbb
add
jb
cmpsb
jecxz
loopne
ja
daa
js
dec
mov
into
rcrb
enter
mull
icebp
repnz
jg
add
mov
sub
call
sahf
pusha
xchg
jnp
jp
jp
xlat
dec
or
in
cmp
sti
cmc
js
sarb
popf
wrmsr
mov
pop
or
mov
stos
les
adc
ja
and
or
lock
addl
imul
js
cs
repz
pusha
dec
and
cmp
push
xchg
mov
outsl
test
inc
aad
repz
xor
push
jo
add
push
sbb
imull
inc
xor
popa
push
idivb
mov
xor
cmp
sub
or
lret
jae
push
aad
aaa
movsl
jmp
das
rcrl
xrelease
fnsave
cmp
testl
inc
xor
dec
adc
cli
mov
jns
lret
test
cli
fsubrl
mov
cmp
pop
push
pop
bound
adc
adc
aaa
cmp
inc
fstpl
jmp
mov
andl
sub
aaa
mov
lods
call
movsl
and
in
jge
pusha
xor
and
cmp
cli
adc
stos
ficoms
add
negb
dec
rcll
add
scas
daa
push
incb
mov
loopne
or
jmp
decl
lcall
xor
cmp
js
inc
sub
add
fisubl
leave
push
cmpsl
jnp
jmp
aam
aam
jns
stc
jbe
mov
xor
xor
mov
out
mov
xor
lcall
call
adc
sbb
sub
test
mov
imul
mov
fs
adc
mov
fiadds
push
push
cld
hlt
mov
push
adc
xchg
mov
lcall
xchg
popf
gs
dec
add
mov
add
addb
adc
stos
outsl
jmp
jbe
cltd
sbb
mov
jae
jne
pushf
mov
xchg
mov
lret
push
popa
mov
add
sahf
fdivrs
adc
ds
pusha
int
out
fiaddl
add
lea
punpckhwd
loop
popa
pop
pop
bound
jae
lahf
pop
pop
pop
mov
pop
imulb
cmp
and
fwait
add
fstl
mov
push
cli
fs
inc
icebp
pop
pop
call
jno
pop
jnp
xchg
pop
jae
jo
aad
pop
xchg
lea
outsl
mov
in
out
mov
repz
add
cmp
enter
sbb
fsubp
xchg
adc
stc
pop
popa
movsb
pop
adcl
mov
jmp
or
daa
bound
xor
icebp
sbbb
sub
dec
push
mov
shll
das
loope
add
imul
xchg
daa
inc
push
mov
fld
pop
mov
add
sub
jmp
insl
fistps
in
xcrypt-ctr
cmpsl
sbb
movsb
loopne
das
mov
push
add
fimuls
testb
iret
mov
enter
push
cmp
aas
mov
pop
adc
sqrtps
mov
pop
mov
dec
push
cmp
push
dec
fwait
cmp
aad
ljmp
push
pop
dec
pop
stos
aas
repz
dec
lea
cmp
mov
lods
xchg
pop
popf
fstps
idiv
and
les
dec
shl
lds
sbb
xlat
xor
push
pop
add
add
sub
lea
cmp
mov
mov
fcoms
daa
xor
outsl
loop
add
jns
add
jl
mov
add
mov
ficoms
lock
add
jnp
mov
or
pop
idivb
dec
or
repnz
jl
mov
cld
mov
jl
adcb
push
js
sbb
sub
adc
xor
fisubrl
jne
dec
shl
xchg
mov
xor
rorb
add
hlt
xlat
ficompl
jge
xor
mov
add
and
ds
mov
pusha
xor
add
dec
outsb
push
or
test
and
cs
and
sbb
lea
clc
jmp
pop
cmp
test
add
les
pop
daa
pop
fwait
data16
mov
out
je
jno
adc
mov
addr16
xchg
adc
decl
shr
mov
mov
cmp
int
mov
shlb
xchg
fstpl
adc
dec
xchg
loope
outsl
outsb
imul
push
xchg
push
stos
cmpsb
adc
sti
in
mov
or
fcmovbe
enter
pop
push
je
flds
pop
or
cmp
rcrl
mov
add
pop
xchg
aam
xor
add
enter
movsb
mov
pop
nop
push
sti
cwtl
and
pop
push
nop
cmp
mov
jle
nop
mov
dec
popf
lods
adc
outsl
xor
out
sbb
jg
cmp
fimull
xchg
xor
inc
test
adc
mov
add
xchg
lret
std
pop
push
adc
popa
js
adc
or
movsw
xchg
das
adc
mov
in
add
xor
bound
mov
mov
dec
fldcw
popa
ss
add
jbe
and
nop
or
mov
add
movl
pop
and
add
inc
xchg
or
jbe
cmp
outsl
and
inc
out
pop
push
movswl
cli
call
inc
jmp
int3
stos
jecxz
add
inc
cmc
ja
mov
and
inc
jns
repnz
push
fwait
mov
xlat
mov
aas
pop
nop
insb
push
xchg
pop
shlb
aad
ret
push
pusha
push
data16
adc
sub
push
lahf
cmp
shrb
pop
push
add
cld
in
sub
mov
jmp
mov
inc
push
push
mov
xor
mov
or
cmp
pusha
jg
mov
ljmp
push
adc
inc
add
lds
scas
and
jecxz
add
or
adc
xor
daa
and
movsl
in
ss
hlt
outsb
sub
add
xchg
call
cmp
in
push
popf
in
adc
rcll
mov
and
mov
lods
inc
and
add
cmpsb
out
mov
lods
mov
dec
sub
decb
mov
jne
sbb
loop
add
js
movsb
xorb
adc
or
pop
inc
and
adcl
std
add
jg
lahf
out
loopne
sbb
dec
data16
cmpsl
sub
pop
mov
push
pop
mov
add
pop
jne
sub
movsl
sub
or
add
repnz
clc
xchg
push
pop
mov
or
sub
push
out
or
sbb
pop
jmp
stc
ja
push
and
xchg
adc
mov
jge
and
mov
sar
insb
pop
mov
xchg
jmp
nop
out
mov
sub
xor
jb
movsb
addb
jns
mov
add
push
call
mov
stos
jno,pn
jle
jo
mov
sub
adc
jo
cmpsb
sbb
xchg
lea
or
andl
movsl
push
adc
rclb
nop
xor
bound
inc
or
rorb
ret
mov
aas
xorl
cli
pop
mov
pusha
xchg
pop
or
cld
out
lret
ja
int
sti
pop
adc
sti
mov
xchg
mov
pushf
int
rcrl
int3
popa
xor
popf
dec
sbb
popa
mov
or
dec
stos
outsb
push
adc
loop
adc
bnd
lcall
jb
sub
fdivr
loope
sub
fstpt
jns
sbb
jle
in
xor
push
mov
sub
add
cmc
mov
mov
pop
pop
and
cltd
pushl
jo
add
stc
xchg
or
insl
ffree
movsl
or
jp
mov
mov
test
incl
sbb
in
pop
cmpl
cmp
sbb
sub
arpl
test
stos
or
mov
xor
sub
push
leave
adc
pushaw
jg
int
add
fisubrl
sub
sub
jl
rorl
push
mov
lea
es
jmp
add
stc
repz
jns
pop
cwtl
lahf
mov
movsl
mov
cwtl
shlb
lods
sub
lahf
dec
cs
pop
sbb
pop
mov
sbb
sub
lods
bound
popa
xor
push
mov
pop
stc
add
xchg
inc
mov
shll
cs
cld
add
dec
pop
jb
pop
add
xor
lea
in
lret
pop
jnp
sub
stc
sti
mov
mov
jno
push
xor
xor
xchg
aad
or
cmp
les
in
sbb
aad
imul
push
xchg
dec
cmpsb
rolb
cltd
xor
mov
scas
lret
jmp
mov
push
lahf
push
loopne
pop
jnp
or
imul
push
leave
xor
jne
lods
add
dec
aaa
popa
mov
mov
gs
cmp
jns
adc
addr16
scas
cs
enter
xchg
movsl
cs
xchg
xchg
es
imul
pop
or
xchg
in
add
push
adc
in
je
push
add
mov
fsubr
dec
cmpsl
shl
idivb
loope
lret
addr16
sti
js
shlb
jmp
lea
fldl
add
push
loope
sub
jne
mov
pusha
cmpl
test
loopne
call
adc
add
dec
adc
jnp
adc
cli
adc
mov
pop
jmp
les
pop
mov
xchg
add
adc
imul
ljmp
add
hlt
dec
std
fsubrs
loope
fwait
cmpsb
cmc
mov
xor
xor
dec
ja
lock
mov
loop
push
imull
add
mov
cmpsb
mov
mov
cmc
xor
js
mov
xchg
ljmp
outsb
je
aaa
loop
inc
lods
cmp
fsubrl
add
mov
and
cmc
out
mov
and
jbe
test
pop
cmp
mov
mov
insl
adc
xchg
ret
out
aad
scas
mov
add
cmp
xchg
and
sub
mov
enter
inc
adc
inc
mov
dec
dec
add
cmp
xor
mov
pop
daa
data16
add
or
test
xor
mov
push
fistpll
icebp
movsl
jns
std
adc
xchg
scas
outsb
mov
mov
and
pusha
stos
leave
inc
ficoms
add
jbe
popf
std
outsl
scas
and
xchg
ds
aam
and
cmc
sub
out
mov
xor
push
addr16
jbe
into
lods
test
jmp
mov
inc
push
xor
jg
add
fwait
sub
out
push
daa
jbe
xlat
out
jnp
or
xlat
test
pop
cmpsw
xor
into
inc
push
add
and
pop
insb
fs
out
aam
and
pusha
mov
and
stc
sahf
repz
imul
and
das
xchg
test
lds
movsl
dec
jne
xor
and
jle
test
fsubrs
cmp
andb
pop
mov
mov
jo
cmp
imul
sbb
sub
shll
loope
outsl
rolb
les
repnz
add
mov
adc
pop
xchg
sti
aad
push
sbb
push
mov
fildl
or
sub
ds
pxor
and
sbb
inc
aam
aad
adc
push
adc
lods
rolb
jb
xchg
pop
xor
seto
fs
mov
jne
pop
push
inc
inc
clc
push
icebp
push
xor
fdivl
dec
or
lock
adc
addl
and
push
xchg
adc
and
jnp
orl
push
jbe
mov
sti
leave
jno
ds
js
mov
jle
sub
xor
sub
ror
in
movsb
pop
or
push
pop
in
xor
jmp
mov
dec
lahf
sbb
rorb
xor
fsubrs
out
jo
data16
mov
push
popf
loopne
pop
push
dec
clc
repnz
loopne
pop
in
add
insb
mov
clc
push
arpl
push
loop
and
pop
push
pop
mov
gs
mov
lock
push
cmp
xchg
pop
pop
mov
adc
fdivl
pusha
hlt
mov
aas
and
inc
jmp
and
aaa
xor
add
sub
fadds
push
mov
pop
jmp
dec
jae
fcmovnb
push
cli
and
mov
fdivp
jne
stos
jg
push
mov
adc
add
mov
dec
cmp
or
pop
dec
addb
adc
int3
in
push
mov
adcb
add
dec
pop
mov
dec
push
fisubrl
loope
movsl
add
addl
mull
mov
popa
jp
sbbb
push
mov
adc
push
sub
inc
idiv
hlt
jl
add
jl
outsb
les
lods
decb
mov
aam
lods
cld
or
xor
in
into
dec
jmp
insl
in
mov
xchg
mov
xor
push
dec
and
and
scas
xchg
push
enter
lret
sti
orl
inc
jge
xchg
xchg
adc
jno
or
mov
test
adc
push
add
jnp
xchg
add
sbb
mov
btc
in
popf
jns
push
mov
mov
pop
jno
adc
cmp
or
movsl
and
mov
sahf
ds
js
addb
mov
fsubrs
mov
aad
subb
cmpsl
add
pop
imul
lds
test
adc
and
xor
pop
add
fldcw
or
xchg
or
jns
mov
or
push
test
cli
fldt
xor
mov
fisubrs
rcrl
popf
sti
and
into
popf
bound
cmp
sub
adc
add
icebp
sub
mov
pop
cmp
xchg
mov
jb
lea
jge
ljmp
mov
mov
imul
push
push
or
add
js
mov
test
adc
cmp
inc
arpl
xchg
scas
sub
mov
inc
push
and
cmp
pop
jmp
fcmovnbe
xchg
lods
push
dec
orb
adc
fwait
popl
push
das
adc
xchg
ja
imul
mov
rol
sub
enter
jge
adc
fiaddl
mov
or
enter
and
dec
add
xor
xor
shr
cmp
stos
rclb
or
jb
pop
sub
mov
out
sahf
jo
mov
xor
clc
pusha
in
ja
das
and
add
xor
jns
mov
mov
mov
jbe
mov
add
outsl
jmp
cli
mov
lods
je
gs
xor
push
xchg
sub
mov
add
out
jg
add
sti
mov
pop
pop
shrb
lea
das
rorb
xchg
js
mov
xorb
rorl
inc
insb
sbb
jbe
popf
hlt
sub
xchg
int3
cmp
mov
jae
xor
pop
pop
xchg
test
mov
add
pop
sbb
jne
aad
stos
ret
dec
add
ss
xchg
test
in
sbb
js
or
xor
aam
and
and
in
or
shll
adc
in
cmpsb
push
adc
cmp
scas
lret
fucomip
fistl
xchg
cmc
sbb
cltd
add
daa
xchg
ret
sbb
lock
mov
jno
fadds
pop
push
jge
mul
xchg
jns
pop
cmc
pop
ds
leave
pusha
sbb
sbb
loop
fmuls
std
repz
dec
push
out
sahf
add
pop
or
or
dec
popa
xchg
repz
das
jl
sub
sbb
jno
mov
xchg
js
adc
fcoml
xlat
add
and
imul
add
in
ret
sub
or
sbb
xorb
pop
mov
fs
rorb
lret
in
ficoms
fs
add
out
test
adcb
ljmp
in
xor
jns
jle
push
pop
sub
cmc
mov
cmp
pop
add
mov
fstps
das
jnp
aam
repnz
inc
inc
sbb
xchg
mov
push
jle
arpl
cmp
jecxz
lds
xchg
pushf
cmp
arpl
testb
dec
iret
movsl
ja
orl
fistpll
jb
gs
cmpsl
jl
push
add
fistpll
icebp
iret
xor
popf
fnstenv
inc
mov
jnp
jb
pop
test
push
and
mov
inc
jl
inc
call
add
loope
lret
xchg
mov
in
pop
pop
ljmp
cmc
mov
mov
addr16
xchg
inc
adc
clc
cmpsl
leave
in
pusha
add
push
add
adc
shll
push
xchg
add
mov
inc
pop
push
cmc
and
addb
lock
popa
aad
pop
xchg
outsb
shlb
xchg
stc
lret
push
xchg
xor
adc
popf
ljmp
pusha
cmp
incb
pusha
mov
stos
les
mov
mov
jbe
sti
aad
mov
repnz
xchg
and
sub
push
add
jo
dec
sub
pop
or
xchg
adcb
xchg
int3
daa
inc
jns
dec
mov
subl
inc
je
addb
jbe
cmpsb
ret
repz
or
clc
lock
sub
sub
outsl
xchg
and
in
arpl
cmp
xchg
add
pop
ret
push
fstps
jns
cs
lret
sub
loope
inc
adc
mov
popa
xchg
shrl
inc
es
cld
xor
xor
pop
fnsave
pop
cmp
dec
cmc
lret
sub
mov
push
pop
jno
cmpsb
mov
lret
nop
push
clc
mov
bound
push
stos
cltd
pop
pop
cmpsl
jl
ficomps
pop
sub
and
xchg
mov
es
shrl
jne
mov
movsb
test
push
out
pop
aam
jne
pop
xor
lds
jnp
or
lea
jae
movsl
jbe
faddl
jbe
xchg
aad
pusha
cmc
leave
lret
iret
popa
das
jp
or
jmp
xchg
sahf
xor
lret
push
inc
push
add
in
dec
jmp
pop
shll
mov
outsb
cmp
test
cmp
nop
call
pop
pop
cmp
mov
push
shlb
sahf
mov
jl
mov
mov
out
mov
fiadds
bound
lods
shl
push
orb
lods
push
pop
es
popa
dec
sbb
int3
mov
add
cmp
xor
jg
sub
shrb
cmp
testb
mov
mov
cli
inc
nop
jno
test
xchg
das
test
mov
adc
jbe
and
lods
fimuls
movsb
push
pop
pop
jle
sbb
outsb
arpl
stos
mov
and
sbb
in
mov
and
jno
mov
push
add
mov
nop
push
jmp
mov
xor
test
hlt
flds
and
cmp
and
out
enter
aad
mov
mov
pop
add
dec
ds
pop
aaa
add
das
fsubr
lcall
mov
nop
pop
rorb
bound
push
mov
mov
add
movsl
cld
sbb
cmp
aam
adc
jge
push
mov
cmp
inc
adc
add
inc
inc
sub
sub
mov
pop
sub
repnz
lods
jne
xchg
adc
ljmp
cmp
pop
xchg
aaa
mov
arpl
dec
int3
out
inc
jbe
or
sbb
xchg
lea
sub
ret
jmp
lds
mov
and
popf
mov
sahf
and
jb
and
or
jno
or
adc
call
popf
std
or
mov
xchg
adc
stc
mov
dec
xchg
jbe
ja
dec
call
popa
negb
jp
cld
mov
inc
divb
mov
aam
push
pop
pusha
in
xor
sti
cwtl
pop
xor
sub
jle
sbb
test
cli
mov
sub
and
outsl
jns
mov
decb
push
jmp
data16
and
and
loop
std
add
mov
in
andl
add
in
add
pop
out
sbb
mov
adc
imul
dec
stc
jp
or
add
sub
int
sahf
popa
ljmp
pop
test
dec
mov
inc
pop
mov
cmc
cmova
jp
addb
jecxz
and
test
pop
iretw
popf
xor
imul
sub
clc
and
add
sub
dec
bswap
jne
ljmp
outsb
cmp
ljmp
dec
daa
mov
loope
and
lahf
push
sub
shrb
dec
dec
jmp
ds
push
sub
roll
xor
and
sbbb
imul
ljmp
out
movsb
test
add
adc
enter
mov
and
les
in
movl
mov
leave
or
stc
and
fs
andl
dec
lret
ljmp
pop
movsl
in
mov
clc
adc
add
jge
add
loope
and
mov
jns
scas
cmp
outsl
mov
pop
xlat
push
adc
mov
add
fmull
ret
mov
test
xor
sub
test
cltd
xchg
cld
lods
push
pop
and
test
lods
test
out
jb
mov
test
lods
idivl
gs
mov
fildll
mov
mov
sub
cmp
or
divb
aas
in
insb
daa
subb
inc
push
mov
mov
adc
add
sbb
cmpsl
in
mov
cmova
push
push
push
push
rorl
cmc
lods
jbe
inc
sbb
mov
cli
xchg
and
mov
aam
push
adc
cli
pusha
int
aad
and
hlt
add
dec
or
mov
lds
xor
aaa
and
add
pop
xchg
cwtl
push
arpl
pop
cltd
jne
movsl
xor
loopne
mov
jno
scas
xchg
leave
ret
inc
add
inc
mov
adc
and
add
fadds
adc
cmpsb
push
loopne
or
movb
push
mov
inc
add
lcall
add
mov
movsb
inc
cmp
lahf
mov
xor
dec
push
clc
push
negb
int
loopne
stos
out
and
xchg
pop
mov
int3
xchg
mov
cld
push
testb
mov
mov
push
push
fstl
dec
test
mov
pop
lock
push
ss
xchg
xchg
pop
push
adc
sbb
cmp
nop
jp
dec
les
push
add
jae
add
jo
bound
sahf
jecxz
sarb
xchg
jle
popf
mov
jecxz
int
sub
add
mov
jmp
pop
dec
jge
int3
mov
aas
fwait
iret
sbbl
adc
mov
scas
lods
jnp
sarb
pop
pop
sub
fcoml
adc
les
out
mov
xor
mov
sub
cmpsb
and
jge
int
adcl
sbb
mov
add
das
mov
or
xchg
push
inc
bnd
add
or
scas
into
adc
scas
cltd
jmp
insl
mov
js
xchg
push
adc
mov
fstl
or
jecxz
jge
mov
xorb
add
sti
stos
sub
jp
into
mov
push
sub
scas
gs
repnz
clc
leave
xor
gs
mov
jno
cmpsl
icebp
faddl
mov
inc
pop
and
into
inc
and
or
cmp
lods
stos
dec
outsb
adc
lahf
aad
xchg
jmp
adc
sbb
pop
and
pusha
push
push
sbb
and
es
xchg
or
mov
cmpsl
insb
mov
daa
mov
adc
and
cmp
dec
das
dec
lods
shr
adc
daa
xchg
mov
dec
xchg
outsb
push
adc
aaa
cld
adc
adc
or
popf
inc
inc
inc
dec
in
loopne
jmp
mov
xor
xor
pop
mov
testb
mov
movsl
iret
xor
cli
inc
adc
popa
and
jle
jl
push
push
push
and
dec
stos
adcb
adc
leave
push
sub
lods
insl
mov
fs
data16
adc
insl
pop
mov
dec
stos
xor
mov
addps
aam
mov
xlat
xor
mov
mov
add
jle
mov
add
scas
int
sub
and
push
adc
push
clc
sub
lods
and
ljmp
lret
mov
mov
ds
push
out
adc
xor
xlat
cmp
mov
arpl
arpl
mov
imul
xchg
dec
mov
add
xchg
or
lock
adcl
adc
jp
dec
and
out
add
xor
daa
mov
cmp
dec
xchg
insl
int
mov
pop
into
les
cmp
dec
add
in
mov
imull
fidivl
and
movsl
sub
adc
dec
add
push
ljmp
mov
add
add
js
sub
inc
xor
sbb
dec
nop
enter
mov
pop
xor
ja
xchg
sbb
mov
mov
shl
ficomps
sub
jno
mov
cmp
mov
stos
jl
call
int3
adc
dec
lea
rcll
in
xchg
std
icebp
push
jmp
adc
sub
stos
xchg
sti
and
sti
cmpsb
cltd
push
adc
scas
je
mov
mov
sarl
add
add
out
sti
or
les
leave
pop
test
xchg
add
adc
mov
call
xchg
sbb
fucomip
sub
dec
add
sti
scas
imul
sbb
pop
ficoms
ja
insl
leave
test
add
push
xchg
ljmp
in
ret
push
shl
push
xchg
xchg
or
jo
in
jo
adc
out
or
ret
inc
popf
sbb
xor
out
inc
and
mov
sub
ljmp
sub
mov
xor
out
ljmp
out
lcall
xor
mov
sbbb
jl
dec
popa
push
gs
addr16
decl
jae
mov
xchg
push
xor
es
lret
or
cmp
xchg
in
add
add
jno
jmp
test
jge
jecxz
popl
rcr
mov
mov
jbe
mulps
rorb
pop
int3
sbb
and
cmp
mov
mov
popf
push
gs
mov
add
add
icebp
stc
xchg
in
push
mov
dec
or
mov
clc
jg
bound
movsb
or
and
enter
imul
cs
add
subb
fists
mov
and
in
cmp
in
lds
and
cld
repnz
cmpsl
lods
mov
pop
sbb
inc
push
xchg
lods
mov
ror
mov
fidivl
aas
mov
adc
out
xlat
lcall
enter
cmp
or
into
mov
xchg
push
sub
cli
shll
xor
popf
xor
inc
mov
or
lea
shr
imul
adc
cmp
cmp
mov
cmp
xor
xchg
push
and
xchg
stc
lock
mov
pop
jns
inc
xchg
dec
push
fimuls
mov
rorl
int3
jge
lods
xchg
mov
ret
dec
jbe
jecxz
daa
push
fadds
adc
pop
jmp
add
dec
jl
xchg
lcall
xor
out
cmp
or
jmp
in
insl
mov
pop
xchg
fisubs
or
and
out
nop
cmp
dec
cwtl
int
cmc
pop
sbb
sbb
jno
movsl
dec
pushl
xchg
and
xor
cmp
adc
fs
sub
mov
scas
sub
cwtl
mov
std
sbb
pop
sarb
add
add
push
dec
xchg
and
les
fisttpl
lods
jae
mov
xchg
sbb
push
adc
mov
div
out
jbe
mov
xor
pop
in
cmp
add
stos
adc
add
aad
push
sbb
push
imul
mov
in
mov
sbb
push
cmp
popf
add
or
xchg
fildl
je
jp
mov
fisttpll
and
push
fidivrl
fucomip
inc
cmp
lret
lods
pop
mov
cmp
dec
jns
mov
shll
flds
notl
mov
cld
fcoms
xchg
leave
sub
fstpl
int
jle
mov
add
into
cld
sti
cmp
add
add
jns
xor
mov
es
mov
aad
cmc
xor
insl
iret
popf
andl
mov
imul
xlat
lods
sahf
test
dec
scas
fstpl
fildl
gs
mov
divl
stc
int3
push
mov
mov
jns
cmp
filds
add
repz
add
sub
mov
or
xchg
pop
mov
pop
out
push
push
leave
cltd
push
int
fnsave
loop
imulb
testb
mov
rclb
or
mov
mov
push
push
pop
pop
push
aad
sub
mov
pusha
and
add
push
cld
push
aam
pop
mov
stos
out
or
cmpl
popf
jl
movsl
jno
xor
lock
mov
call
and
jo
inc
sub
mov
mov
cmp
mov
dec
mov
popa
pop
std
jns
adc
repnz
pop
bound
loope
mov
add
mov
iret
sub
mov
push
sti
ret
je
add
lahf
rolb
jbe
pusha
xor
ds
jle
and
push
cmp
out
popf
movsl
cmp
rcrl
push
jnp
jo
filds
mov
hlt
cmpb
nop
call
add
sub
inc
add
gs
sbb
cmp
es
dec
fisubrs
imul
pop
leave
movsl
roll
jmp
lahf
aaa
pushf
std
adcb
fbld
imul
pop
and
imul
mov
add
pop
loope
ret
incl
mov
xor
xchg
jne
clc
mov
in
or
add
aad
inc
push
push
movsl
adc
movsb
dec
mov
add
add
adc
and
fstps
push
add
daa
sub
cmovg
or
sarb
ja
mov
jl
push
aam
jno
pop
inc
add
pop
test
xorb
lock
lds
leave
push
mov
pop
jae
add
sbb
pop
lcall
int
sarb
mov
add
add
dec
push
push
or
inc
add
sub
mov
js
lea
jns
pop
leave
xchg
cmp
dec
push
xchg
orb
mov
mov
jge
push
push
adc
subl
das
jb
mov
loop
cld
sub
insb
add
call
pop
sar
sub
aas
test
les
test
pop
adc
mov
int3
pop
div
push
and
add
pop
outsl
shll
dec
mov
loop
roll
out
pop
add
mov
repz
jae
icebp
fs
outsl
adc
xchg
jmp
pop
add
arpl
mov
and
inc
adc
add
add
mov
nop
pop
cli
daa
das
jno
das
adc
repnz
pop
push
dec
cwtl
movsb
sti
cmp
cmp
add
mov
repz
in
sbb
mov
xchg
js
push
mov
mov
fdivrs
popf
sbb
jg
pop
sbb
std
loop
aas
add
sub
loopne
sbb
stc
ffreep
jecxz
aad
aaa
sub
test
xchg
xor
add
stos
xor
fs
add
lock
mov
movsl
icebp
jno
mov
inc
loope
out
inc
pop
adc
mov
mov
push
ja
lea
fstpl
ja
cmp
stos
jno
pop
nop
inc
xlat
aas
imul
and
loopne
and
fiaddl
dec
ljmp
hlt
mov
jmp
aaa
mov
lods
ret
and
popf
push
dec
mov
mov
add
fildll
lret
movsb
or
int
rclb
add
jo
xchg
add
dec
sub
and
xor
test
sbb
and
insb
mov
push
and
popf
rcll
mov
adc
pop
or
inc
sti
movsb
sbb
xor
clc
pop
mov
add
pushf
mov
fwait
sub
mov
insb
mov
rol
cwtl
jbe
add
mov
dec
pop
or
int3
mov
mov
dec
cmpsl
or
rolb
add
add
sub
out
sbbl
daa
inc
sub
shl
js
and
mov
cli
je
adc
sti
jo
mov
add
divps
les
mov
adc
push
mov
sbb
aad
fwait
and
push
add
faddl
jbe
test
test
movzwl
arpl
inc
es
mov
pop
push
push
test
push
mov
in
or
in
cwtl
sub
test
jbe
daa
mul
pusha
int
cwtl
xor
sbb
fcoml
int
addr16
pop
xor
les
cmp
jg
dec
and
inc
jmp
pop
or
pop
dec
pop
mov
jmp
pop
das
xchg
loopne
aad
mov
push
xchg
nop
dec
fidivrs
cltd
cli
xor
ret
fadds
add
call
jl
les
dec
xor
mov
popa
pop
data16
jbe
out
xor
das
popa
mov
inc
jecxz
adc
out
jo
adcl
in
lods
pop
jge
sbb
fildll
mov
or
mov
mov
mov
inc
rcl
pop
add
loop,pt
inc
lret
pop
outsb
shlb
daa
and
loop
mov
leave
push
mov
mov
add
sub
scas
mov
jecxz
mov
jmp
dec
push
sarb
dec
pop
or
xchg
stc
cmpl
fsubr
stos
inc
test
jbe
aam
adc
mov
fstps
xor
adc
cwtl
arpl
cmp
xchg
xor
mov
cmp
int
mov
cs
cwtl
pop
cmp
mov
or
or
mov
add
cmc
jo
mov
sub
inc
popf
in
dec
jns
lods
in
cmp
or
lds
std
stc
or
shlb
sbb
popf
sub
aad
outsl
dec
sub
sbbb
fwait
lods
ret
ja
cmp
lcall
or
loopne
imul
and
push
push
or
adc
outsl
xchg
add
in
pop
cmp
aas
xor
cmp
pop
add
lds
xor
cld
fwait
testb
cmp
in
fbld
push
mov
cwtl
push
add
fwait
pop
jns
popf
ja
mov
jne
or
orb
pop
insl
in
shl
or
ljmp
dec
stos
adc
xor
inc
imul
push
cmpsl
xor
loope
jle
adc
call
add
sub
lahf
data16
arpl
sbb
clc
out
xchg
push
pusha
ret
mov
pop
dec
pusha
fucomi
sbbb
push
repz
sub
dec
cmp
mov
push
cs
fmuls
std
or
add
outsb
movl
mov
push
push
aad
loope
mov
xor
xor
or
into
push
cld
jb
sbb
push
mov
das
jge
pusha
xchg
je
inc
push
pop
pop
inc
shlb
rcrb
lods
incb
xor
mov
dec
in
xchg
imul
rclb
push
dec
int3
icebp
iret
fdivrp
mov
dec
cwtl
nop
mov
pop
cld
insl
mov
orl
sub
pusha
lock
push
gs
filds
sub
cmp
xchg
das
push
sbb
push
icebp
outsl
test
sub
cmp
push
in
aas
jmp
cmp
mov
in
add
test
lock
fdivr
pop
jno
pop
adc
mov
in
sub
sub
mov
push
stc
outsl
call
dec
xor
fisubrl
enter
loop
xchg
sub
int
sahf
add
in
add
mov
data16
pop
jmp
sub
in
mov
popf
pop
fisubrl
pop
jge
mov
jl
jge
cmp
dec
cmp
jp
mov
adc
mov
pop
pop
push
push
ljmp
mov
jp
xchg
xor
push
jp
pop
xchg
push
push
push
pushf
add
xchg
arpl
aas
aaa
xor
pop
xchg
lods
cmpl
jecxz
in
test
cmp
mov
mov
xorb
and
xchg
mov
push
imul
pop
aad
add
mov
pop
push
cmp
add
into
call
pop
insb
fiadds
popa
fwait
pop
ret
out
pop
pop
pop
inc
inc
sub
dec
and
aas
mov
or
fbstp
jmp
jnp
aad
ss
xchg
rorl
push
pusha
popf
inc
sbb
push
flds
xorl
push
and
adc
push
dec
inc
dec
xlat
push
jno
add
and
sub
xchg
fisubrl
add
push
and
jae
mov
and
je
mov
stos
out
hlt
scas
cld
fistl
cmpsb
sbb
push
sbb
xchg
jb
add
fdivl
pop
pop
inc
outsb
or
push
push
ljmp
negb
mov
xchg
test
loop
sub
and
lock
adc
cmp
dec
xchg
stc
jge
pop
inc
clc
dec
mov
out
lahf
sbb
xchg
cmp
pop
push
xlat
push
mov
sbb
mov
stos
pop
adc
dec
add
cmp
cmpb
push
and
jmp
jecxz
leave
das
je
cli
lcall
sti
inc
mov
add
adc
aad
sub
xchg
mov
dec
push
jbe
fnsave
and
jg
xchg
adc
push
add
fcoml
leave
sbb
add
push
or
test
lcall
add
scas
repz
fcmovnb
jg
adc
sbb
iret
adc
icebp
aas
mov
and
add
lret
imul
lcall
mov
pop
notb
mov
xor
rorb
adc
jnp
and
nop
adc
dec
hlt
jmp
sub
dec
inc
inc
subl
inc
mov
aam
inc
fdivs
xchg
insb
jmp
inc
mov
mov
adc
idiv
dec
mov
cmc
or
js
pop
push
add
sub
rolb
mov
sub
shrl
inc
or
ret
cmp
jno
mov
adc
mov
repz
test
xchg
jne
add
in
movsl
adc
test
mov
add
lahf
movsb
clc
test
stos
out
fsubrs
mov
out
pop
jge
int3
lock
cli
lcall
and
inc
mov
stos
int
shll
mulb
sub
pop
rorl
std
lret
nop
push
jge
fidivrs
std
sti
cmpsb
and
push
xchg
dec
and
xlat
mov
mov
lds
and
and
iret
stos
inc
xchg
xchg
jae
add
mov
data16
add
adc
repz
mul
add
lds
push
and
das
hlt
pop
pop
or
pop
out
movsl
rorl
scas
jl
call
xorb
nop
jle
pop
and
sbb
jnp
jno
mov
and
pop
repz
push
lret
in
pop
and
addb
daa
call
js
xchg
adc
inc
jle
mov
and
push
mull
sub
popa
pop
jmp
lods
sub
xor
bound
lcall
movsl
call
rcrl
adc
mov
aam
pop
ja
enter
sbb
push
ss
stos
pop
sbb
aad
adc
sbb
call
add
cmc
mov
lea
push
add
and
mov
mov
or
or
je
in
xchg
mov
adc
lret
jp
lahf
stc
pop
mov
cmpsb
inc
movsb
out
push
xor
add
icebp
pop
dec
mov
das
lods
dec
xchg
loop
add
sarb
add
mov
outsb
sbb
movsl
stc
cld
popf
mul
lods
js
mov
pushf
jns
push
into
popa
add
in
js
enter
pop
and
xor
in
hlt
xor
pop
lcall
in
movsl
imul
xor
adc
aas
mov
and
idivb
leavew
pop
bound
sahf
add
dec
cwtl
and
sarb
shll
sub
mov
or
lods
out
or
inc
out
cmp
daa
das
add
mov
mov
fbstp
mov
xchg
jmp
in
mov
or
popf
int3
cmp
mov
enter
jge
sub
add
push
cs
push
lret
pop
xor
cltd
cmp
pop
add
adc
pop
cmp
in
sbb
mov
call
out
popf
sarb
adc
sbb
stc
pop
cmp
fisubs
test
push
mov
sub
fnsave
outsl
add
mov
sub
rcr
and
out
fldl
mov
insl
mov
into
insl
rorb
sub
jl
xor
popa
jle
cmp
sarb
mov
rorb
lahf
push
push
sar
insl
jo
dec
dec
xor
push
mov
repnz
fnsave
adc
lahf
and
sbb
xchg
add
jnp
add
push
push
xchg
lcall
pop
pop
movsb
data16
dec
push
mov
sub
insl
sarl
dec
idivl
lock
push
stc
xor
xchg
movsl
jae
repnz
test
add
or
loope
pushf
dec
xchg
dec
add
roll
outsl
add
clc
out
je
add
scas
push
lahf
mov
add
sub
jo
xchg
adc
pop
sub
sub
adc
inc
icebp
pop
fimull
cld
test
inc
xchg
mov
sbb
cmpsl
xchg
dec
fildl
ret
sub
add
jns
xchg
iret
xor
mov
sbb
repnz
push
xchg
mov
mov
cmp
adc
popf
dec
xchg
sbb
decb
std
and
out
jbe
in
inc
sub
sub
rcrl
mov
jns
sbb
fs
pop
add
push
jecxz
inc
mov
dec
push
pusha
idivl
mov
outsl
xor
xor
out
add
iret
xor
xor
adc
sub
notb
jmp
jnp
mov
int
jo
or
popa
push
loopne
sbb
mov
pusha
out
dec
ret
and
sub
mov
adc
jb
test
lods
pop
inc
loopne
xor
cmpsb
pop
mov
cli
int
push
xchg
rolb
ja
fadds
fsub
out
fcomps
test
pop
ficomps
mov
or
mov
ffree
sub
adc
add
lods
or
movsl
aad
or
add
push
shll
test
and
in
shlb
lea
mul
dec
out
cmp
add
or
push
xchg
mov
subl
cs
and
rorl
add
fsubrs
xchg
sbb
pusha
xchg
and
iret
xchg
dec
out
jae
mov
cld
movsl
mov
cmp
jge
fwait
sbb
add
in
add
repnz
mov
out
lret
sbb
fisubl
push
js
inc
or
push
sbb
lods
imul
pop
ja
sti
cmpsl
mov
dec
or
in
jno
inc
fidivl
sub
sbb
test
fcoml
add
push
dec
pusha
xor
fnsave
into
jmp
push
or
push
xchg
adc
shr
loop
mov
inc
das
xor
dec
add
mov
add
mov
xor
cmp
cmp
bound
in
add
inc
cs
mov
adc
mov
sub
psrld
or
jl
dec
sbb
jl
lahf
xchg
hlt
adc
call
dec
clc
popa
xchg
jmp
pop
mov
out
lea
jle
cmp
pop
xchg
add
cmp
frstor
xlat
out
gs
dec
sub
sbb
ss
out
mov
icebp
loope
test
rcr
or
xchg
inc
popa
fbstp
pop
outsb
add
repz
or
pop
mov
sub
stc
inc
adc
mov
hlt
lods
pop
pop
mov
sbb
pusha
call
pop
inc
xchg
pop
data16
arpl
fincstp
aam
lahf
mov
testb
jno
dec
popa
les
jg
xor
push
cmpsb
movsl
leave
pop
out
xlat
add
out
jl
add
push
imul
pop
or
iret
leave
out
pop
dec
jg
cmp
andl
in
xor
mov
add
outsl
clc
sub
push
mov
xchg
push
sti
adc
in
cmpsb
out
loopne
sbb
popa
stos
or
xchg
jo
xchg
xor
rcl
fstpl
gs
sub
or
mov
inc
out
mov
dec
aam
pop
stos
push
hlt
push
test
in
stc
jle
fiaddl
add
je
pop
add
out
in
mov
dec
in
inc
pop
jo
call
popf
adc
daa
xchg
push
push
push
mov
aam
cmp
push
jmp
pop
xlat
push
inc
xchg
xchg
leave
inc
dec
push
pop
cld
popf
push
mov
movsl
add
fstpl
push
cmp
out
nop
mov
out
push
hlt
out
xor
stos
mov
mov
push
mov
out
adc
sub
mov
and
xor
leave
cld
jns
inc
push
in
jl
add
cmovnp
int
ffree
cmpsl
jmp
pop
je
sbb
icebp
and
test
add
lds
cmc
jmp
xor
and
pop
mov
add
xchg
push
mov
fcmovnu
adcb
xchg
push
pop
out
rcr
mov
ja
es
mov
push
mov
into
mov
mov
leave
pop
aad
dec
lods
loop
add
sbb
sbbb
and
or
pop
shll
pop
out
dec
lds
mov
rolb
dec
mov
movsl
outsb
jecxz
dec
inc
fs
sarb
sbb
mov
aas
lea
rcrb
jo
pop
xchg
cltd
aaa
pusha
pusha
jl
inc
sub
push
xchg
popa
repnz
ja
cmp
rcl
xchg
mov
cmp
add
insl
dec
in
jnp
adc
xchg
loop
and
lcall
push
xchg
or
jb
nop
inc
mov
mov
cltd
fmuls
push
divl
jno
outsb
adc
mov
scas
or
jbe
popa
pushf
outsl
call
out
ret
xor
test
test
jno
cmp
aaa
outsl
xchg
xor
ljmp
rorl
jns
in
inc
mov
jmp
xchg
sti
mov
aam
pusha
andb
mov
sub
xchg
lcall
sbb
addr16
mov
popf
movq
add
and
je
mov
mov
pop
pushf
push
inc
into
sub
adc
nop
jnp
sub
mov
xor
hlt
and
xchg
mov
or
test
xchg
xchg
mov
imul
xor
adc
xor
mov
test
sub
adc
cmp
fucompp
mull
or
mov
mov
out
sub
popf
test
or
mov
adc
ja
hlt
mov
js
jmp
or
mov
and
add
out
cmp
lods
and
inc
add
mov
pop
es
stc
fidivrl
mov
jge
or
push
test
lahf
sub
in
loopne
jl
dec
cltd
mov
loopne
les
xor
cmp
adc
sarl
adc
test
outsb
lret
sub
jmp
xlat
into
dec
add
subl
add
dec
jge
pop
test
jecxz
outsb
mov
out
lahf
or
adc
xchg
and
sbb
call
cwtl
mov
daa
ds
out
leave
push
or
push
das
test
mov
or
sarl
dec
jnp
add
dec
inc
mov
mov
popf
popf
fiadds
ret
xorb
xor
lds
adc
adc
jmp
pop
pushf
jp
xchg
shrb
mov
xor
add
sbb
dec
xor
lods
sarb
fistl
lock
mov
dec
dec
push
sub
daa
aaa
ss
and
dec
adc
andb
inc
pop
or
or
sahf
icebp
jne
sub
scas
jl
push
inc
dec
mov
outsb
into
test
xchg
xchg
lock
or
popa
hlt
sub
hlt
fwait
add
pop
dec
cs
and
add
fld1
add
fucomp
out
dec
into
adc
mov
pop
xorb
xchg
jl
or
loope
xor
or
clc
lret
dec
inc
mov
adc
mov
jge
or
xlat
inc
adc
cs
div
aas
mov
jns
clc
das
sub
aaa
sbb
js
fmulp
add
outsb
repnz
ljmp
pop
lds
jle
jns
push
pop
jb
inc
dec
push
les
cmpsl
daa
add
dec
clc
fidivl
in
mov
jmp
lock
adc
repz
ja
adcb
test
sub
je
stos
es
push
aam
test
ficoms
test
js
mov
cs
adc
add
xor
or
push
adc
add
xchg
mov
lods
movd
lret
in
pop
push
scas
repz
pushf
xor
loopne
int
xchg
dec
fstps
sahf
mov
out
pop
mov
jmp
int
rclb
add
xchg
mov
pushf
cmpb
push
repnz
add
jb
push
cltd
stc
push
dec
fadd
ja
pop
in
push
mov
repz
push
mov
cmp
or
std
cmpsl
std
iret
lods
out
fs
push
enter
and
outsb
push
sbb
dec
sbb
inc
add
inc
leave
andl
stos
lret
mov
scas
hlt
add
adc
pop
out
popa
dec
stc
int3
jge
sub
mov
cmc
sub
add
inc
adc
aas
pop
loop
or
push
xchg
xchg
add
or
xlat
sbb
jnp
pop
imul
subb
xlat
add
xchg
pop
cvtpi2ps
mov
leave
and
adc
pop
push
roll
out
lcall
lods
test
and
dec
mov
pushf
sbb
sarb
dec
fdiv
lods
mov
xor
cmp
and
add
inc
cs
push
sub
or
xor
cmpsl
adc
pop
mov
or
xor
cltd
popf
fcoml
ffreep
or
cltd
fcmovu
jp
mov
xor
shll
aas
test
sub
into
sbb
xchg
movsl
and
mov
add
test
mov
pop
xor
dec
stos
adc
pop
jmp
fimull
nop
mov
insb
cmpl
xchg
stos
fdivrs
fsubrl
push
imul
pusha
mov
dec
incb
pusha
loop
sub
pop
mov
jl
mov
dec
mov
pop
jge
adc
mov
push
fisubrl
push
sahf
pop
ds
pop
xchg
mov
mov
addr16
loop
popf
dec
mov
out
cwtl
jmp
mov
loopne
mov
dec
jo
push
xor
ja
dec
fs
lret
push
aad
xor
popa
mov
lds
popf
fistpll
mov
push
lods
mov
sbb
popf
daa
int
je
fidivs
jmp
dec
pop
mov
and
cmpsb
xor
ret
insl
std
dec
fistpl
icebp
mov
mov
or
or
pop
xchg
fwait
and
lods
icebp
outsl
or
mov
or
pop
pop
subl
add
add
sbb
and
test
jecxz
addl
lahf
mov
loope
push
outsb
cli
add
push
inc
lods
stos
shl
mov
cmp
and
add
jp
push
pop
pop
adc
jp
mov
arpl
dec
adc
mov
jnp
pop
sbb
cli
add
mov
leave
in
sub
cmpsl
sti
pop
push
addb
push
pop
mov
jae
leave
je
add
xor
sub
mov
or
mov
and
mov
dec
repz
cli
push
cmp
mov
mov
scas
popf
jns
lret
pop
mov
idivl
add
mov
push
cs
xor
sub
mov
stos
adc
inc
mov
aaa
dec
pop
out
pop
jbe
sbb
cs
add
cmp
pop
jge
jle
aad
push
adc
mov
addl
lock
add
gs
inc
mov
dec
push
mov
loopne
sbb
push
dec
add
inc
xchg
add
xchg
out
jo
jnp
leave
lahf
aad
or
in
adc
sub
jecxz
sbb
adc
dec
mov
in
jp
xchg
mov
pop
jg
and
out
nop
push
push
icebp
cmpsl
pusha
and
enter
cltd
out
cmpsl
cli
aas
xchg
xor
push
push
fbstp
mov
clc
je
mov
gs
movsb
pusha
mov
push
xchg
or
orb
inc
mov
push
xchg
push
cmpl
test
add
cmpb
mov
push
lea
pop
enter
and
adc
rorb
clc
cwtl
inc
push
push
shrl
pop
das
dec
pop
enter
aas
stc
imul
add
leave
std
mov
mov
and
scas
lds
xor
or
cltd
arpl
fcomi
pop
popa
je
sub
pop
sub
cwtl
inc
cmp
mov
pop
push
inc
ja
daa
mov
std
jge
jmp
test
dec
pop
mov
sbb
movsb
andb
mov
jmp
test
fadds
rorl
pop
in
aam
cmpsb
sbb
inc
adc
push
test
imul
xor
loopne
iret
or
mov
iret
adc
inc
xor
add
pop
jns
adc
lcall
std
adc
cmc
mov
aad
loop
aam
les
push
mov
test
dec
add
or
daa
orl
jnp
mov
outsl
mov
and
pop
pop
lret
call
in
sbb
pop
mov
adc
imul
sbb
mov
xor
data16
pop
mov
clc
adc
mov
out
add
divl
mov
mov
inc
sbb
cltd
mov
xor
mov
ret
rcll
fwait
dec
mov
push
mov
and
pop
pop
test
int3
lods
or
in
adc
mov
rolb
cmp
frstor
aam
cmp
fildl
xchg
pop
mov
mov
pop
dec
andb
xor
rclb
jg
mov
push
pop
or
and
mov
ljmp
clc
add
push
xchg
shll
mov
pop
mov
imul
fsubr
mov
orb
in
mov
in
add
jge
mov
mov
mov
nop
push
addb
int3
inc
sub
outsl
lahf
add
jle
imul
mov
mov
mov
fwait
into
mov
jle
mov
or
fsubs
test
push
inc
icebp
shr
and
xchg
cld
pusha
sub
mov
add
repnz
js
pop
insl
adc
out
lret
popf
push
popf
bound
bnd
pop
inc
adc
scas
lea
xor
sub
fnstsw
or
hlt
clc
sbb
dec
jae
std
andl
sub
sbb
push
int3
sub
mov
jmp
sub
jmp
loope
cmpb
repnz
test
and
imul
dec
jp
int
loopne
jmp
cmpsb
and
mov
sahf
jecxz
movsb
push
clc
or
popf
mull
add
jb
in
and
mov
mov
popf
dec
je
imul
add
cwtl
or
xchg
mov
out
lock
adc
mov
imull
popa
imul
dec
sub
daa
je
pop
int
push
jns
push
fs
nop
jmp
add
subb
jo
ja
cmp
lret
and
arpl
push
icebp
out
mov
push
movsl
in
add
cmpsb
mov
add
jno
in
inc
push
jns
or
push
pop
add
outsl
jnp
mov
sub
pushf
out
pop
add
imull
dec
mov
sub
mov
sarl
movsl
pop
xchg
lahf
sub
inc
and
fisttpl
sub
pop
inc
por
sbb
or
or
mov
lods
adc
and
mov
int
jnp
repz
push
shlb
inc
out
cli
mov
xchg
ljmp
adc
dec
dec
mov
sbb
loopne
mov
daa
jecxz
sti
xchg
cs
dec
fldl
xor
in
pushl
jp
andb
and
rol
ja
lock
mov
jmp
js
mov
aas
xchg
mov
call
sbb
cli
mov
das
push
xor
xchg
inc
push
xor
outsb
imul
xchg
sbb
or
dec
mov
int3
dec
lcall
je
jbe
dec
pop
negb
jnp
mov
rorl
frstor
add
andb
lods
sbb
jne
mov
iret
pop
sub
xor
pop
pop
mov
movl
pop
mov
xor
test
out
dec
xchg
mov
inc
lea
push
nop
imul
lods
inc
adc
repnz
add
imul
movsl
enter
sbbl
fsubrs
cli
lahf
fsubl
ja
push
ficomps
adc
mov
or
sbb
sub
mov
andb
int3
mov
pusha
jge
inc
lods
mov
cmc
add
mov
mov
add
lret
adc
aaa
fmuls
mov
inc
push
and
popa
jecxz
lods
mov
pusha
sbb
dec
add
ljmp
add
imull
popa
xor
push
mov
fcoms
adc
jbe
cmp
in
sbb
call
add
pop
jo
mov
out
loop
pop
mov
cmp
add
and
lret
sar
or
sub
pop
mov
sbb
mov
sub
pop
jne
inc
sub
inc
cmc
jmp
mov
cmp
rclb
test
mov
ljmp
rcr
insb
push
je
dec
cmc
int
leave
lock
add
add
jno
insl
pop
xorb
cmp
adc
rcr
jae
xor
jg
mov
fdivs
push
pusha
inc
xor
sarl
addr16
sti
rorl
mov
sub
cmp
xchg
mov
cmp
adc
and
lods
and
fisubs
data16
add
add
or
push
cltd
sti
cmpb
or
movsl
in
or
xlat
inc
mov
sbb
outsl
mov
mov
call
xor
movsl
sub
cmp
icebp
out
pop
adc
or
in
insb
test
cld
repnz
xor
repz
test
mov
sbb
add
notl
dec
outsb
in
push
mov
inc
lds
fsub
sub
js
add
xor
mov
push
pop
mov
dec
in
pop
xchg
out
jo
xchg
shrl
inc
lds
fsubrl
test
scas
pusha
repz
in
lret
pop
std
call
inc
cmp
dec
cli
jp
andb
insl
dec
idiv
mov
xor
adc
jle
xor
jmp
test
xlat
test
test
idivb
dec
sub
xchg
es
dec
adc
aas
jns
push
and
adc
rcrl
iret
or
inc
icebp
sbb
popf
fiaddl
jmp
rcr
mov
sub
add
ds
out
xor
xor
and
lods
adc
mov
add
push
fldl
cmp
out
mov
ds
add
neg
loop
cmc
fistpl
and
loopne
add
jns
mov
adc
xor
pop
into
pushf
loopne
jl
shrl
dec
fiadds
sbbb
mov
mov
mov
imul
pop
push
lret
test
mov
inc
sbb
xor
mov
sbb
fnsave
fcompl
call
or
aaa
cli
mov
outsl
xchg
mov
xchg
xor
xor
mov
mov
add
sarl
das
adc
pop
lcall
in
aaa
xchg
mov
call
add
cmp
call
cmp
cmp
mov
ljmp
aaa
int
aad
loope
fcmovne
push
pusha
adc
pop
push
daa
lods
push
cmpsb
daa
lret
jge
sti
es
and
or
xchg
adc
add
ja
or
add
rol
or
lret
test
inc
add
or
dec
lret
mov
xchg
in
out
cmpsb
gs
incb
add
dec
outsl
inc
jmp
push
cmp
cmc
push
inc
daa
outsl
jo
mov
insl
or
das
sti
and
js
popa
mov
cld
pop
push
das
and
mov
xor
cmp
pop
add
out
add
jno
mov
mov
mov
sbb
insl
call
mov
nop
dec
imul
rol
pop
push
and
xchg
aaa
out
dec
inc
xchg
jp
or
test
jp
fnstsw
dec
jo
push
push
inc
dec
pslld
shld
sub
push
or
or
outsl
cmc
pop
popf
aam
loope
push
sub
jmp
lcall
loop
pop
or
lea
adc
push
pop
fbstp
adc
idiv
adc
aam
and
sbb
adc
sub
cwtl
subb
push
les
mov
mov
mov
pop
push
mul
fcmovb
pop
pop
dec
dec
pop
mov
out
sub
add
out
jge
sub
mov
mov
cmp
adc
sub
div
or
imul
push
jg
hlt
cltd
add
or
repz
dec
scas
cmp
pop
mov
mov
fsub
mov
jecxz
mov
daa
jge
add
es
adc
jnp
dec
sbb
pushf
in
pextrw
or
cmp
movsl
imul
push
push
cs
popf
jle
xor
and
cs
loopne
test
out
mov
addr16
mov
jno
add
mov
rcrl
adc
xlat
mov
inc
fwait
jle
cmp
test
lea
jbe
push
sub
popf
xchg
xchg
popf
stc
xchg
pop
clc
inc
int3
lea
fadd
dec
dec
adc
push
mov
mov
cmp
test
push
jecxz
add
mov
jle
test
in
sbb
jbe
dec
fistpll
test
nop
pusha
sti
mulb
push
cmpsl
lahf
mov
popa
movsl
push
pop
testl
xchg
and
push
fcomps
jno
hlt
xor
repz
addr16
test
arpl
push
push
mov
pop
or
test
add
scas
jecxz
cmp
xchg
leave
add
mov
je
pop
push
mov
and
adc
pop
gs
cmp
add
sbb
mov
call
outsl
shrb
adc
sub
fisttpll
dec
rolb
inc
sub
pop
ret
add
das
addl
loope
in
mov
pop
lock
test
cmp
mov
or
pusha
divl
stc
or
out
add
mov
cli
popf
fstl
mov
fisubl
js
adc
mov
cmc
pop
icebp
sub
inc
jae
mov
add
dec
push
mov
mov
push
pop
mov
addr16
jnp
pop
and
pop
mov
add
jmp
popa
sub
incb
sbb
rcl
cwtl
add
jne
nop
mov
add
test
das
mov
into
or
mov
int
sbb
mov
in
sub
jmp
test
push
and
cmp
test
jmp
jns
push
dec
orl
jo
push
jnp
test
adc
loop
jmp
add
jmp
mov
inc
and
add
pop
inc
push
cmp
dec
add
dec
das
sub
push
mov
sbb
jns
in
aam
pop
pop
mov
movsl
scas
mov
add
mov
or
cmp
xchg
pop
fstps
scas
cmpsb
in
mov
dec
add
pop
sbb
pop
adc
add
push
lods
loop
jae
mov
jae
sub
xchg
and
add
sbb
cwtl
mov
out
aam
mov
int3
addr16
jle
xchg
repnz
adcb
movsb
xchg
cld
cli
mov
jns
je
scas
dec
push
std
dec
push
lahf
jl
pop
jmp
loop
pop
xchg
outsb
mov
and
dec
filds
cmp
ror
mov
add
iret
jbe
push
in
nop
cmp
cli
es
fistps
sarb
or
rolb
mov
xor
sub
adc
out
mov
adc
test
fwait
inc
enter
pop
pusha
and
fs
sti
add
int
pusha
stos
inc
add
inc
roll
cwtl
clc
pop
xchg
stos
cwtl
imul
push
cmp
pop
lea
xor
jns
stos
lret
rorl
pushf
sub
pop
subb
pop
in
faddl
add
stos
insl
jle
sbb
mov
test
lea
add
mov
mov
cmp
sar
add
cmp
push
xchg
and
xor
xchg
stos
mov
cltd
adc
sbbb
into
sbb
pop
push
and
icebp
mov
and
xchg
add
xor
data16
not
popf
adc
pop
xchg
sahf
jg
xchg
cmp
add
sahf
xchg
sub
out
popw
push
and
daa
xorb
imul
mov
fstpl
loop
pop
mov
add
mov
adc
push
mov
js
sarl
mov
jo
popf
xor
xchg
mov
add
mov
imul
mov
fdivl
pop
mov
int3
add
push
jl
pop
in
push
addl
call
loope
in
imul
fsubl
popf
or
data16
mov
mov
or
std
data16
add
inc
sub
and
jmp
cmp
xor
daa
je
push
mov
iret
add
pop
fsubrp
xchg
sub
jle
xor
fdivrs
push
push
xor
push
pusha
notl
pop
jno
adc
pop
data16
add
inc
sub
mov
stos
push
sub
inc
mov
inc
popl
stc
repnz
jo
jns
out
stos
subb
add
mov
test
mov
mov
popa
jge
xor
ret
jl
inc
push
push
pop
sub
push
mov
xor
mov
push
or
push
lock
lock
adc
add
test
and
push
cmp
adc
sbb
xchg
leave
inc
xlat
lret
and
xchg
mov
stos
push
fwait
cltd
add
sub
sbb
dec
push
xor
orl
jno
push
sub
fs
push
adc
or
push
lret
inc
sbb
leave
or
rorl
and
adc
stos
dec
sbb
loop
push
cmp
out
lock
mov
and
test
xor
clc
addl
and
loope
adc
pop
sahf
add
mov
in
xor
add
xchg
in
xor
xor
insb
data16
or
and
aad
xchg
lret
adc
aad
test
insl
outsb
mov
scas
lcall
jge
or
xchg
mov
xor
mov
out
mov
or
out
sahf
adc
popf
jmp
mov
xor
testb
dec
rolb
dec
cwtl
push
cltd
shlb
add
mov
and
adc
xor
mov
jae
les
sbb
xor
add
xchg
sub
mov
dec
sbb
rclb
cmp
std
in
lock
adc
push
xor
sarb
xchg
mov
int
mov
cs
loope
add
cwtl
pop
or
lcall
add
sbb
test
adc
xor
adc
cmpsb
push
sub
inc
lods
clc
subb
dec
ficompl
xchg
sub
test
adc
bound
ret
xor
pop
and
arpl
movsl
mov
test
sbb
xchg
mov
cmp
pop
outsb
sbb
xchg
adc
mov
xchg
pop
xor
pop
mov
mov
xor
push
mov
add
inc
mov
xchg
sbb
xor
enter
add
sahf
sbbb
inc
mov
sbb
or
leave
int3
inc
nop
xor
add
jnp
xor
mov
inc
sub
or
xor
mov
lret
sbb
lea
sbb
inc
or
jmp
xor
xchg
aas
adc
icebp
sub
or
sub
dec
dec
test
mov
pusha
cltd
sbb
icebp
adc
inc
xlat
add
mov
xchg
or
nopl
pop
lock
mov
push
fisttps
enter
rorb
xchg
mov
mov
dec
pop
mov
cltd
les
pusha
mov
xchg
popf
push
lds
addb
adc
mov
fsubs
sbb
mov
adc
jno
xor
test
mov
inc
pop
insl
adc
cmp
xor
popf
mov
jnp
mov
xchg
inc
or
adc
rcll
jbe
add
stos
cwtl
add
or
fmul
ds
mov
js
leave
pop
mov
cwtl
dec
inc
fildl
enter
sbb
adc
jae
sbb
cli
sub
mov
cwtl
add
mov
dec
decb
hlt
adc
dec
add
sub
sbb
ret
pusha
and
jae
mov
notb
scas
xchg
xor
and
dec
add
lods
aas
mov
test
adc
stc
cmpsb
jne
imul
mov
xchg
push
mov
lods
cmp
mov
add
enter
mov
mov
rclb
testl
scas
and
pop
mov
sbb
mov
cs
shl
add
stos
fidivs
or
les
push
sub
sub
inc
push
jp
imul
adcl
pop
in
jp
fisubrs
inc
sub
xorb
jne
add
sbb
pop
mov
push
adc
add
pop
stc
mov
hlt
add
or
and
inc
xchg
xlat
and
dec
test
mov
inc
inc
add
lret
add
leave
mov
sbb
cld
in
push
push
add
lock
pop
dec
add
pop
ret
mov
xchg
mov
xor
and
ret
adc
inc
push
int
xchg
lahf
add
fwait
xor
aas
add
arpl
dec
imul
aad
jae
and
mov
xchg
cmp
popw
das
add
sub
add
push
imul
ficoml
aaa
sti
add
mov
xchg
mov
daa
mov
dec
pop
add
mov
arpl
jnp
in
add
add
mov
cmpl
sub
enter
dec
push
sbbl
dec
push
or
cmp
or
shlb
pop
lea
popf
scas
test
mov
add
xchg
mov
xor
stos
clc
leave
xor
xor
ss
int
adcb
lcall
dec
jnp
or
sbb
inc
push
faddl
pop
dec
push
rcrb
mov
test
mov
xorb
mov
sbb
loop
add
xchg
dec
cmp
pop
lea
shr
adc
fisubs
aad
mov
xchg
js
movsb
dec
shlb
roll
cmp
fildll
cmpsb
ja
int3
push
pop
cmp
pushl
jge
add
mov
clc
fwait
inc
xlat
push
popa
in
xor
jae
mov
addl
cmp
add
outsb
mov
add
adc
xchg
xorl
nop
xchg
adc
xchg
mov
out
pushf
add
pop
into
mov
push
and
mov
cltd
push
ljmp
int3
mov
and
call
sti
push
shlb
roll
add
jg
shrb
jnp
inc
push
mov
mov
jbe
movsb
push
pusha
insb
xlat
pop
mov
add
call
push
and
call
push
shlb
shrb
pop
mov
and
mov
sub
jno
mov
pop
inc
adc
add
and
cwtl
push
xor
jnp
cmpsl
orb
xchg
fldcw
or
inc
push
incb
pop
rcrb
dec
dec
popa
cld
loopne
lea
jnp
jns
gs
mov
cld
leave
xor
pop
push
adc
cmp
or
xor
pop
lea
sti
and
addr16
sbb
add
push
scas
lret
sbb
sbb
test
sub
adc
mov
mov
xchg
dec
test
adc
or
shlb
int3
or
stos
mov
mov
push
inc
adc
or
sarb
and
js
call
mov
inc
into
shlb
lock
push
fs
cli
add
mov
inc
dec
and
aaa
lret
scas
inc
add
push
into
fldenv
stc
out
mov
cmp
in
dec
add
shrb
sub
cmp
scas
pop
popa
jb
fildl
out
cwtl
pop
add
inc
or
mov
push
cmp
pop
sub
cs
or
or
ffreep
jecxz
dec
call
ficoms
test
and
mov
or
loopne
fdivrs
cmp
or
inc
inc
mov
xor
repnz
pop
push
pop
add
inc
lods
inc
adcb
pop
pop
xor
in
pusha
aas
jae
or
inc
pop
mov
cs
pop
shl
lret
adc
pop
stos
add
dec
test
repnz
and
dec
sbb
shr
orl
mov
xor
push
push
loope
mov
hlt
enter
dec
pushf
roll
jl
add
loopne
cmp
add
idivl
jns
pop
push
hlt
aas
clc
sahf
xor
push
insl
or
jnp
inc
or
inc
pusha
add
aam
jle
and
ret
loopne
mov
cmpsl
cmp
mov
fmull
mov
cli
movl
lret
sbb
rclb
push
add
cmp
mov
es
mov
jns
rorb
mov
xor
jle
inc
pop
mov
lea
mov
xor
mov
mov
push
ds
std
add
aad
cmp
xor
pusha
stos
push
test
shlb
testl
push
pop
jg
xchg
fs
cs
add
xchg
rclb
in
push
out
loopne
cmp
jae
sahf
sbb
sbb
jg
add
push
mov
xchg
lea
lret
or
std
add
mov
adc
push
fisubs
dec
xchg
inc
cmp
imull
aad
add
lods
adc
dec
lret
xchg
jge
jmp
daa
mov
cmpsl
add
jle
sub
cmp
inc
faddp
scas
dec
pop
pop
pop
out
imul
add
ljmp
cld
clc
fs
or
xlat
inc
pop
pop
pop
adc
mov
cltd
adc
xor
jg
sbb
ljmp
xor
mov
jnp
inc
insb
xchg
sbb
test
mov
loopne
or
fstpt
lcall
push
pop
push
cs
es
push
or
pusha
adc
pop
sub
jg
add
jo
es
or
mov
insb
sub
pusha
pop
mov
push
adc
push
mov
orb
cld
mov
mov
iret
adc
sub
push
sti
sbb
xchg
scas
jmp
and
sbb
adc
xchg
lahf
jecxz
aaa
push
pop
push
ds
mov
out
mov
mov
xchg
pop
jo
out
sub
push
jle
xchg
mov
inc
pop
xor
data16
ret
aas
lds
adc
lcall
mov
add
out
xor
or
popa
cmp
inc
xor
rclb
mulb
mov
pop
rcr
stos
cmp
mov
mov
je
inc
inc
stc
fwait
aas
add
sti
cmp
add
pusha
sbb
pop
call
sub
shr
out
cmp
aam
loop
fcmovb
sub
jns
mov
mov
adc
dec
and
jo
sbbb
mov
xor
mov
add
popa
lock
hlt
fnstenv
xor
mov
fdivp
add
lock
js
mov
mov
cmp
jae
jl
push
and
sti
scas
push
sub
pushf
and
inc
jns
cmp
inc
pushfw
adcb
out
xorb
jno
cwtl
add
push
cmp
data16
gs
shlb
insb
xchg
arpl
jl
or
lcall
lock
shlb
jl
nop
cmp
mov
pop
dec
imulb
jae
push
mov
and
sbb
or
shrb
pop
scas
jecxz
push
xor
mov
dec
sbb
jbe
pusha
sub
adc
mov
or
sub
or
sbb
imulb
jae
sbb
ret
shl
and
mov
pop
fcmovbe
mov
jno
sub
icebp
dec
lcall
add
je
stc
fbld
push
and
loopne
lcall
cmp
pop
stos
sub
stc
fstpl
or
add
pop
add
dec
xor
jnp
inc
mov
xor
push
and
add
and
cltd
push
aas
add
out
add
bound
idiv
inc
mov
mov
rcll
popa
jle
rclb
repz
std
ret
push
inc
jno
rolb
cmp
xchg
addb
rcrl
aad
cld
jns
pop
int
out
ljmp
sbb
mov
or
add
nop
fstl
arpl
mov
hlt
pop
mov
aam
inc
inc
outsl
popf
lock
dec
pushf
ficoml
dec
adc
jns
pop
mov
xor
arpl
add
cltd
cvtps2pi
jbe
cld
mov
mov
sub
daa
mov
insb
or
adc
add
fstps
clc
xlat
rolb
cld
adc
bnd
mov
jmp
fld
test
mov
sbb
mov
push
test
cld
add
int3
mov
pushf
push
sahf
enter
inc
or
jge
add
data16
adc
mov
test
js
mov
jae
or
add
add
cli
sbbb
and
addr16
add
sub
mov
inc
jo
aam
add
test
sbb
loopne
push
lds
jge
add
xor
mov
push
and
in
aas
outsl
sub
sbb
std
inc
add
adc
in
mov
or
push
xor
sub
dec
pushf
popa
adc
inc
mov
rcrb
vmread
add
enter
push
add
cmp
inc
roll
xchg
dec
lcall
xchg
in
push
mov
jnp
imulb
std
mov
dec
andb
pop
xor
add
jno
popa
dec
mov
scas
inc
cmpsb
cmp
push
inc
fdivl
icebp
lret
mov
inc
push
rcll
test
dec
in
addl
cmp
sbb
stc
mov
icebp
in
jne
push
mov
cmp
xchg
sbb
xchg
mov
rorb
popl
sub
fisubrs
sub
pop
cmc
pop
or
jmp
dec
aaa
mov
cmp
push
add
fsubl
add
fld
cwtl
pusha
fdivp
push
clc
cmp
popa
divb
nop
push
repnz
pop
push
fwait
jnp
xor
enter
add
jns
aas
addb
pop
insb
and
mov
push
pusha
mov
jnp
pusha
push
mov
xor
aam
sub
scas
je
inc
push
add
decb
mov
or
cmp
out
dec
icebp
adcb
adc
out
dec
adc
and
fs
add
leave
push
pop
test
repz
dec
cltd
mov
decl
out
sbb
aaa
fisubs
mov
lds
in
dec
mov
sub
loop
rorl
sbb
sbb
jbe
stos
sbb
add
test
pop
jns
jmp
push
jl
incl
loopne
test
cmp
add
dec
inc
bound
xor
pushf
jo
pusha
adc
mov
mov
repz
decb
outsl
or
sub
lcall
pop
hlt
add
std
jmp
dec
add
xor
sub
mov
sub
xchg
cmp
pop
mov
add
ljmp
ret
pusha
fucom
cmp
mov
stos
push
xchg
pop
out
loopne
dec
jnp
add
je
and
lcall
pop
mov
jmp
scas
xor
adc
test
pop
insb
cmp
jl
cli
jle
cltd
add
mov
dec
insb
jno
es
sbbb
in
aad
roll
mov
dec
test
sub
ret
jle
icebp
push
rcl
test
adc
cmp
and
nop
in
sbb
push
outsb
cmp
nop
inc
mov
or
add
adc
mov
mov
seto
jecxz
out
cmpsb
enter
shl
adc
add
cmc
scas
jb
jg
into
add
adc
ja
mov
mov
sbb
scas
push
lea
into
and
ja
jbe
punpckldq
jns
pop
push
sbb
popa
sub
rcll
mov
inc
push
cli
push
mov
and
jo
rclb
cmp
mov
or
cltd
xchg
imul
add
gs
cwtl
cmc
mov
cmpsl
and
lahf
ret
inc
mov
dec
add
push
andb
movsl
mov
test
mov
out
mov
dec
and
mov
mov
pusha
xchg
movsb
movsl
cwtl
pop
rolb
sbb
mov
lods
pusha
add
cli
mov
out
jae
sbb
pushf
push
lret
jo
lods
sub
pop
jmp
or
add
out
pusha
xchg
adc
aad
sti
jae
add
push
jno
add
fs
push
pop
inc
js
mov
fidivrs
outsl
std
jg
shl
add
mov
sahf
hlt
push
lods
xchg
paddw
aad
sbb
fwait
or
add
sti
outsl
pop
sub
aad
mov
inc
nop
add
cmc
jmp
sub
test
or
jne
sti
sbb
shll
arpl
push
pop
inc
aad
jge
pop
popa
push
adc
iret
inc
cmp
mov
add
add
ret
lock
jbe
cmpsb
cmp
aam
add
adc
add
sbb
pop
add
fs
cmpsl
push
dec
add
lcall
add
adc
fdivrs
popw
and
or
jmp
add
bound
push
scas
sub
cltd
imul
stos
popa
lret
stc
and
mov
xchg
mov
add
jo
adc
mov
arpl
mov
add
bound
xchg
aas
xchg
les
dec
jns
fs
push
pop
cmp
push
add
aaa
mov
stos
or
pusha
cld
xor
lock
inc
stc
pop
pop
cmpsl
cmp
lahf
movsl
in
and
add
repnz
bound
mov
push
xchg
pop
outsb
dec
or
jmp
pop
adc
adc
out
xor
cltd
pop
leave
xorb
add
insl
and
xchg
add
mov
pushf
push
sbb
dec
xchg
push
mov
adcb
add
pushf
mulb
xchg
in
push
scas
add
pop
test
adcb
sub
or
and
jle
cmp
clc
pop
dec
sbb
testb
jno
enter
sarl
sub
pop
xchg
inc
inc
xor
inc
shlb
test
cmc
mov
loope
add
in
and
iret
out
insb
add
and
mov
lods
pusha
adc
push
adc
scas
es
lock
jae
add
mov
call
loopne
ja
enter
or
out
loop
or
pop
and
je
fdivl
mulb
call
in
add
cmpsb
sarb
sysret
ljmp
mov
ret
dec
cmpsb
mov
ds
insb
lods
aaa
xor
decb
mov
jnp
add
in
sti
ljmp
mov
addl
fistps
addb
pop
lea
clc
movsb
xlat
popf
add
sbb
out
sbb
fs
hlt
pushf
fdivrs
loopne
in
add
std
subb
ss
or
in
pop
in
jg
mov
dec
sub
or
loop
jbe
mov
xchg
fidivl
into
sbbb
sarl
jns
pop
xchg
dec
fsubr
inc
add
jbe
cmp
xor
stos
lods
push
in
rcrl
mov
pop
and
cmp
arpl
cltd
push
or
pop
int
sbb
xor
pop
inc
or
cmp
add
fiaddl
add
outsb
ret
addb
inc
movsl
or
lret
stos
sbb
jae
add
mov
les
adc
ret
xchg
icebp
fnsave
sbbl
sti
jnp
push
mov
hlt
repz
pop
push
xor
push
xor
jecxz
insl
xchg
es
add
loopne
pop
movsb
setno
test
adc
inc
jle
cmp
stos
repnz
jnp
sbb
adc
fimuls
ljmp
repnz
add
stos
arpl
fildl
imul
aas
inc
push
sahf
mov
loopne
push
xchg
imul
pop
cli
int
repnz
pop
mov
jbe
jb
je
add
dec
pusha
insb
push
add
pop
mov
aad
fstps
in
xchg
mov
imul
jne
int
cli
cmpsb
mov
cwtl
mov
add
sub
mov
mov
sbb
add
divb
push
pop
mov
sub
call
xor
pusha
sub
das
push
fistl
mov
shl
push
xor
pop
lods
or
pop
testl
jle
fadds
pop
lock
add
aam
popf
xor
testb
add
add
popf
and
cmp
push
add
cli
sti
pop
xchg
push
repnz
lret
out
inc
inc
ja
iret
and
bound
incl
fnstsw
pop
inc
jo
pop
sbb
dec
xchg
push
add
push
mov
in
xor
movb
dec
push
sti
repz
dec
mov
mov
ret
sub
out
mov
jg
sar
jmp
ljmp
loopne
iret
roll
jb
rcpps
in
loop
sub
shlb
in
pusha
pusha
sbb
jne
stc
add
xor
push
cli
inc
pop
push
pusha
and
hlt
ret
mov
inc
adc
lea
mov
fldl
mov
jg
enter
mov
loope
roll
lods
test
orl
jno
inc
and
add
inc
inc
pop
adc
sbb
sbb
lahf
mov
inc
cmp
add
and
mov
and
mov
or
jb
pop
pop
add
mov
rclb
add
arpl
push
lods
cmpsl
cmp
fcompl
inc
into
les
sub
pusha
nop
jo
cltd
adc
add
or
xchg
test
xchg
mov
ret
cli
xchg
sti
push
inc
cli
lods
jae
mov
pusha
jbe
mov
push
and
pop
scas
jnp
mov
les
sub
sti
xchg
add
pop
lods
ds
cmp
loopne
sub
mov
add
cmp
add
add
fs
push
pop
lcall
add
aas
adc
mulb
dec
pop
add
fsts
add
adc
aas
add
push
jmp
cwtl
add
fbstp
sarb
dec
inc
add
sbb
jns
adc
add
in
sub
cld
mov
add
fildll
je
xorb
or
and
ret
mov
and
push
cld
jg
or
add
jp
daa
and
in
ret
and
orl
es
aam
add
ret
jnp
xor
pushf
add
rep
mov
fcom
aaa
mov
lods
movsb
and
in
add
or
outsl
stos
mov
in
dec
roll
push
mov
cmp
dec
add
xlat
clc
int
lock
mov
pop
mov
jl
sbb
and
xor
icebp
outsb
std
sbb
negb
stc
lock
inc
sbbb
xor
push
mov
adc
es
jle
push
add
jbe
cwtl
push
rcrb
sahf
mulb
cmp
loopne
ficomps
divb
fildl
jno
xchg
clc
lea
or
jge
cmc
inc
cmp
frstor
xor
dec
push
push
add
jnp
jge
sarl
push
orl
mov
cmp
or
out
push
sub
push
dec
add
ja
dec
jns
or
or
inc
incb
mov
cmpsl
cmp
add
push
and
mov
je
xor
int
push
aaa
add
ret
hlt
shlb
add
test
add
cld
push
add
cmp
or
pop
mov
lcall
and
jp
out
sarl
pop
test
and
int3
in
and
inc
lods
sub
dec
addb
pop
mov
inc
add
scas
xchg
jl
mov
dec
jno
add
mov
and
in
jo
xor
aam
xchg
add
push
sbb
insb
sbb
pop
mov
add
popf
xchg
add
cld
pop
rcll
sub
xor
add
cli
fs
inc
popa
arpl
scas
sub
mov
pop
cli
dec
punpcklwd
jge
leave
shr
add
int
inc
adc
rclb
inc
dec
daa
pop
lret
add
add
sub
add
rorl
mov
rcrl
add
iret
ficoml
cmp
setno
fwait
jecxz
jno
int3
aam
inc
add
adc
test
adc
insb
sbb
add
xlat
pushf
jg
add
ljmp
push
div
int3
sub
xlat
push
pusha
sbb
insb
add
int
repnz
in
add
adc
sub
sti
jle
popf
dec
add
jns
and
hlt
mov
pop
mov
cmp
add
rorb
or
test
pop
mov
add
mov
push
cmpsb
sub
jns
mov
cmp
aad
inc
loopne
dec
out
or
jmp
ror
add
lods
fisttps
add
lock
mov
orb
and
inc
add
push
push
notl
out
xchg
cmpb
out
outsb
in
adc
sbb
xchg
outsl
sbb
push
add
roll
sahf
ljmp
dec
push
inc
mov
aad
add
lods
jno
fs
add
nop
ret
rcll
mov
add
cltd
xchg
xchg
xor
inc
movl
or
jae,pt
jp
ja
add
fcoml
pop
nop
outsl
add
into
xor
in
mov
das
fcomi
inc
repnz
shlb
cwtl
add
insl
lods
mov
add
std
mov
sbb
cwtl
add
inc
and
cltd
fucom
cmc
jl
mov
add
pop
or
aaa
or
dec
add
or
fcomi
push
add
negb
loop
and
adc
adcl
mov
sbb
fwait
and
mov
fldt
xchg
stc
dec
sbb
cmp
out
mov
adc
test
inc
lods
lock
mov
jnp
js
filds
pop
outsb
cmp
iret
add
lret
xchg
mov
int3
mov
adc
aas
je
pop
scas
sti
adc
rorb
imul
adc
in
adcl
mov
pop
pop
add
out
mov
jp
fadd
add
lar
in
dec
push
pop
lds
dec
loopne
sti
add
imul
insl
adc
adc
mov
int
add
div
mov
mov
jecxz
lea
cmp
sarb
sub
arpl
scas
cmp
xchg
jge
nop
sub
or
sub
scas
add
or
push
outsb
orb
xchg
add
popa
hlt
mov
imul
mov
popf
xor
inc
add
pop
jns
xor
push
add
mov
push
pop
repz
xorb
sbb
sbb
or
lcall
add
inc
rcrb
sti
fisttps
jae
sbb
icebp
lret
add
xchg
repz
cmpsl
sbb
subb
stos
movsl
lods
adc
sbb
or
and
outsb
leave
mov
add
and
push
or
mov
aad
lahf
push
xchg
sarl
or
mov
pop
popf
int
shl
add
or
and
repnz
push
scas
nop
adc
jo
ret
pop
js
aaa
inc
jns
xchg
addl
and
jne
pop
cli
shl
pop
movsb
leave
and
xor
loopne
ficoms
pop
es
add
mov
push
sbb
roll
ljmp
mov
mov
fdivrp
fwait
add
cli
sub
add
or
in
mov
mov
and
je
xchg
adc
repz
adc
inc
or
and
faddl
js
dec
cmpsl
push
lret
cmp
inc
push
imul
add
mov
xchg
iret
add
lahf
enter
pusha
int
and
add
je
cs
shlb
add
pop
les
inc
imul
inc
es
mov
rcrb
dec
inc
push
add
sbb
pop
std
add
pop
fisttps
inc
pusha
aad
popf
pop
sbb
and
lea
call
xchg
lods
inc
ljmp
jbe
or
jmp
icebp
negb
out
lds
inc
xorl
push
addb
pop
les
pusha
mov
pop
mov
ret
bound
test
mov
mov
fldenv
enter
add
sbb
std
cmpsl
cmp
movsl
add
cmp
cld
enter
sbb
dec
je
imul
jp
sbb
sub
xchg
inc
in
std
xor
imul
xchg
mulb
cmpsb
cli
je
adc
push
sbb
aad
push
jecxz
movsb
outsl
mov
add
cmp
mov
cmp
js
or
fnsave
dec
jne
push
pusha
xchg
mov
sub
adc
xchg
sahf
and
js
pusha
dec
inc
add
push
aam
sub
cmpsl
shrb
xchg
add
xorb
sbb
pusha
fildl
jbe
or
sub
pop
test
mov
enter
and
push
sbb
jnp
add
ss
add
popf
mov
shll
add
in
inc
add
push
or
cmp
mov
xor
aaa
loopne
cmp
xor
push
orb
aad
sahf
ficomps
mov
les
jno
mov
lahf
mov
out
in
or
jmp
xor
pop
in
insl
add
xchg
push
cmp
jecxz
sbb
xor
icebp
js
aam
imul
jl
xor
cli
loop
sbb
repz
lds
xor
sub
dec
lea
mov
push
inc
cwtl
inc
xchg
add
daa
push
fisttps
lcall
aad
add
push
sbb
pop
or
adcl
sti
pushf
cmp
jmp
adc
push
xchg
mov
loopne
subl
or
add
roll
add
stc
sarl
inc
imul
adc
lods
mov
jp
and
das
mov
mov
aaa
xor
ret
sbb
aad
rol
shufps
push
push
inc
add
movsl
xchg
outsl
shl
inc
and
jle
add
jmp
add
int3
test
inc
xor
stos
lock
iret
dec
cmp
mov
mov
fs
jmp
pop
and
lret
jp
incb
or
es
movsb
nop
jbe
add
insb
push
dec
jle
push
and
push
sbb
and
aas
inc
add
hlt
pop
cltd
inc
fisubs
loope
insb
add
stos
rclb
inc
lret
cmp
movb
fisubl
mov
add
jno
mov
std
dec
add
les
jle
pop
cmp
push
dec
aaa
xchg
pop
xor
mov
int3
jne
jecxz
js
pusha
pop
imull
rorb
sub
and
add
imul
inc
add
push
add
jp
jge
scas
stc
cmp
test
and
andb
sub
orb
int3
lahf
sub
sub
sub
rol
out
repz
leave
mov
xchg
cmc
into
fwait
adc
push
add
or
and
cld
add
jle
cmp
rol
imul
inc
cld
and
aad
int
and
sub
enter
push
xchg
fnstenv
xor
int
mov
pop
mov
add
or
ljmp
in
adc
inc
in
dec
loop
xor
push
adc
adc
jnp
clc
enter
lds
push
add
mov
popf
inc
add
jb,pt
inc
xchg
cmpsl
addr16
push
testb
sub
lret
mov
add
jecxz
popa
bound
pop
xor
add
xchg
add
movl
addr16
movsl
push
cmp
add
dec
into
lret
add
repz
add
xchg
mov
mov
add
push
enter
rolb
xor
pop
dec
call
inc
add
mov
dec
inc
mov
add
out
sbb
scas
jle
add
push
adc
xor
lcall
cmp
stos
mov
fs
add
jl
or
mov
add
ret
ret
lcall
ss
mov
mov
jns
pop
jmp
insb
jnp
push
and
and
and
fmull
and
xor
outsl
xor
sarl
imul
scas
cmp
pop
pop
xor
jmp
add
inc
jno
sub
adc
sbb
cmp
inc
pop
add
cmp
xor
cmc
add
inc
in
jnp
addr16
mov
es
adc
fcomps
cmp
cli
enter
add
cmpl
sahf
add
and
adc
add
out
adc
mov
rcrl
sbb
pop
and
or
and
cmp
jbe
js
add
int3
arpl
dec
dec
das
xlat
fs
lret
iret
mov
je
pop
add
test
pop
incb
xchg
enter
les
insb
ja
mov
inc
bnd
xor
inc
movsl
push
pop
mov
bswap
xchg
out
add
push
push
aam
loop
cmc
ror
push
loope
pop
xchg
add
push
mov
mov
lcall
cmp
add
pop
push
imul
je
pop
sbb
shlb
lcall
dec
loope
add
rorb
xor
add
mov
nop
and
dec
sbb
and
sahf
adc
adc
xchg
add
imul
cli
and
or
inc
inc
add
mov
and
enter
into
sub
call
cmp
xor
mov
sub
fs
fnstsw
scas
add
cmc
dec
jle
cmp
jne
mov
fsubs
jge
pop
arpl
vpunpcklbw
mov
or
push
adc
xchg
subb
pop
or
test
imul
ret
loopne
add
push
pusha
jle
test
push
mov
dec
mov
nop
fcompl
sbb
scas
add
inc
mov
mov
imul
sbb
add
int3
imul
or
dec
ficoms
pop
mov
mov
add
andl
push
or
test
jl
add
jp
xchg
pop
clc
add
cld
push
mov
loop
xchg
inc
movsl
xor
and
mov
fistpl
movsb
call
stos
aaa
out
je
loope
push
faddl
adc
dec
push
or
in
scas
sub
int
or
adc
aas
add
jo
cld
sub
shrl
ja
iret
xor
jg
loop
xor
sti
mov
pop
xor
mov
scas
das
into
or
push
mov
sahf
add
pop
push
imul
or
pop
loopne
add
adc
lods
cmc
sbb
xchg
stc
adc
test
lds
testb
pop
subb
lcall
sahf
cmp
inc
call
mov
add
or
mov
add
mov
test
sub
inc
pop
jl
push
sub
and
add
push
fwait
call
jb
pop
xchg
repnz
outsl
js
popl
call
imul
std
mov
or
jl
ds
cmpb
ret
loopne
inc
aam
sub
xchg
mov
mov
jae
shll
xor
xor
inc
sbb
aaa
loop
add
aad
adc
add
and
test
pop
jle
mov
sub
ljmp
sbb
ud1
mov
cmp
or
mov
dec
push
loope
push
mov
xor
jnp
shlb
add
pushf
pop
fcomip
and
xchg
pop
dec
or
push
or
mov
adc
cmpsb
lods
xor
cwtl
ja
cs
sbb
sbb
mov
add
test
push
add
inc
stos
pop
andl
insb
inc
xchg
xor
test
mov
push
jb
jl
mov
shrl
sub
and
sbb
jecxz
cmp
lret
out
cld
xor
sub
out
aad
aas
pop
sbb
lds
push
add
hlt
and
jecxz
mov
pop
cwtl
mov
pusha
repz
xor
pop
test
fwait
out
inc
sub
push
mov
mov
jl
ror
lods
cmp
pop
mov
scas
pop
mov
adc
and
mov
jae
add
aam
aaa
movsb
pop
dec
jns
add
and
lahf
int3
dec
mov
popf
aas
pop
push
stc
std
js
add
dec
stos
jecxz
fstps
pop
pop
push
xchg
pushl
aad
xor
add
xchg
int3
xchg
add
jnp
int
movsl
pusha
in
aam
or
mov
pop
add
mov
mov
pusha
movsb
pop
into
fcoms
call
dec
fwait
psrlq
mov
lret
sbbb
in
xlat
and
imul
daa
push
je
sbb
test
jge
or
xchg
shrl
pusha
insb
adc
cmpxchg
or
push
and
xlat
cmc
outsb
cs
pop
add
inc
add
test
push
inc
dec
jp
xor
lahf
xchg
out
lret
addb
bound
test
add
mov
mov
xchg
dec
leave
mov
scas
sbb
mov
out
mov
cmpsl
shr
push
lods
nop
cmp
test
push
adc
cld
mov
scas
test
add
pop
adc
xchg
inc
aam
or
add
lods
mov
jo
mov
jmp
mov
inc
add
push
pop
loope
or
add
jno
jp
push
ds
jg
aaa
incb
in
sub
gs
jb
roll
or
out
popa
rorb
adc
add
cmpsl
mulb
popf
add
jns
push
je
xor
jge
dec
rep
mov
add
or
enter
or
mov
mov
mov
mov
add
cwtl
adc
lcallw
lret
mov
xor
add
jmp
imul
je
add
dec
mov
and
xchg
add
sub
ds
dec
data16
add
xor
pop
xor
in
and
push
and
inc
cmp
and
and
js
pop
add
idivb
cs
lcall
jnp
pop
inc
lods
lahf
sarl
notb
repnz
push
jecxz
add
insl
xlat
add
cli
test
repz
sarl
dec
in
daa
pop
jb
add
ss
mov
test
pop
pop
or
jecxz
pop
xchg
lahf
push
add
xchg
add
adc
dec
push
pop
nop
enter
mov
and
jb
cmp
jne
mov
add
push
fcoms
out
jbe
add
lods
push
jne
dec
mov
nop
xor
test
testb
push
dec
stos
push
add
add
std
loop
add
inc
adc
adcl
pop
inc
test
popa
incb
scas
cmp
mov
xchg
push
pushl
mov
sub
enter
nop
loope
add
adc
or
push
add
jg
les
xchg
push
xchg
dec
add
adc
or
bound
xchg
cmp
js
dec
jmp
adc
add
vmovmskps
jo
je
cmp
push
popa
or
mov
adcl
mov
dec
mov
fdivs
lahf
popf
jns
add
loop
int3
xor
je
imul
in
stos
add
sub
jb
aas
push
and
add
add
fdivr
push
xor
mov
mov
add
push
pavgw
dec
dec
push
add
loopne
fdivr
int3
add
leave
test
fildl
js,pn
sub
xor
data16
push
xchg
add
sbb
push
mov
jno
push
xchg
sub
jecxz
insl
jle
enter
outsb
gs
mov
sbb
jl
xlat
cmpsl
add
sbb
pop
mov
jmp
add
push
jecxz
insl
in
mov
cmpsb
subb
scas
cmp
aam
sahf
jb
inc
ja
fstpt
dec
pop
mov
lds
add
cmpsl
xorb
ja
add
push
fs
addr16
test
sub
xor
xor
add
sub
add
push
dec
add
daa
inc
sub
push
pop
lret
ss
push
addl
sbb
mov
dec
imul
movsl
xor
and
sbb
int3
dec
sbb
pop
hlt
mov
add
int
out
lds
and
shlb
sbb
add
imul
add
enter
test
push
lcall
movsb
pushf
ja
sbb
xchg
mov
stos
popa
add
inc
cld
scas
dec
mov
and
arpl
leave
jo
test
popf
or
leave
jne
fdivrs
in
ds
pusha
cmpl
adc
xor
out
in
repz
cmc
ljmp
test
scas
xchg
subl
enter
insb
js
sbb
or
add
mov
push
out
mov
xor
ljmp
cmc
dec
pop
sarb
inc
push
inc
push
push
lret
xchg
jp
cltd
and
loopne
icebp
dec
add
cwtl
push
jecxz
sbb
leave
jg
scas
fsub
mov
add
mov
das
mov
enter
sbb
mov
imul
inc
push
add
aas
into
jp
cmp
stos
arpl
fstps
or
pop
fcmovbe
xor
pusha
sub
mov
outsl
pop
and
ficoms
adc
aas
outsb
sbb
je
sbbb
popa
jns
push
add
cli
push
in
xlat
icebp
mov
xchg
cmpsl
cs
mov
aam
dec
push
loopne
mov
inc
aaa
jns
std
jmp
addr16
into
clc
add
sbbb
shlb
push
popa
ljmp
and
add
loope
jecxz
sub
out
mov
or
sbb
mov
mulb
int3
icebp
adc
orb
xor
fldt
sti
pop
ret
pop
xor
mov
jne
or
mov
inc
mov
popl
pop
rorb
mov
fsts
ja
rolb
cmpl
enter
ret
push
idiv
jne
fwait
jno
inc
mov
outsl
pusha
pop
jns
cmp
add
pop
jo
fmull
fs
cld
add
pushf
pop
fiaddl
inc
pusha
xchg
rclb
adc
xor
inc
inc
add
cmpsb
push
stc
jo
out
add
mov
cmp
lahf
int3
rorb
bound
xor
std
add
and
add
sbb
sub
adc
aad
call
sahf
dec
clc
pop
lcall
sbb
cmp
mov
int3
adc
cmp
call
ss
or
add
mov
rcl
lahf
mov
and
add
stc
pop
dec
jle
sarl
xchg
addr16
inc
ret
fildll
scas
popf
add
sahf
xchg
pop
rcll
add
mov
mov
push
or
cli
jle
cmp
shll
test
popf
and
jp
loopne
mov
out
add
mov
mov
jge
pusha
ss
enter
add
sahf
outsl
mov
jbe
add
cmpsl
cmpsb
rcll
jmp
mov
mov
and
pop
jg
jbe
cmp
cmpb
lcall
sbb
cmp
repnz
subb
ret
hlt
out
jp
add
and
jae
and
js
addl
lea
out
sar
add
mov
adc
jge
xor
inc
mov
jmp
loope
jge
cmp
and
scas
aas
test
jecxz
lods
fdivrs
jb
rolb
insl
into
add
cmpsb
in
mov
fistpll
roll
add
xchg
aad
mov
mov
lods
pusha
mov
jbe
xor
fadds
enter
xchg
push
sub
add
jmp
mov
pop
stos
or
inc
add
fsts
add
ret
pop
insb
dec
or
sbb
mov
das
test
add
and
add
cmc
nop
stos
and
add
sti
inc
jl
shrb
xchg
xchg
sbb
mov
inc
ds
push
sub
add
dec
xchg
scas
mov
fs
pop
adc
add
rorb
push
les
popa
into
xchg
filds
xchg
or
jo
loop
mov
inc
dec
inc
mov
xlat
insl
rol
das
mov
hlt
test
es
or
xchg
cmp
dec
sysenter
add
std
test
pop
mov
jecxz
sbb
mov
push
cmp
mov
and
outsb
test
mov
pop
mov
inc
rclb
pop
push
inc
pop
mov
int
pop
imul
sub
push
mov
fwait
mov
test
leave
xchg
sbb
pushf
mov
xchg
jl
push
shl
pusha
int3
lods
dec
add
xchg
xchg
stos
aaa
pop
push
mov
shl
popa
or
scas
sbb
push
ret
sbb
or
lea
or
lret
dec
mov
push
pop
sub
insb
push
sbb
and
mov
pop
lahf
call
inc
xchg
and
and
push
iret
ss
rcll
in
loopne
cwtl
xchg
add
sub
test
jns
ljmp
cmpsl
in
in
mov
out
mov
jo
scas
hlt
clc
sbb
movsl
push
fistps
xchg
add
cmp
mov
xchg
push
fdivr
clc
pop
sub
pop
add
arpl
shlb
or
mov
sbb
loope
addr16
hlt
das
adc
push
rolb
pop
mov
frstor
add
repnz
mov
jnp
push
inc
cltd
jg
add
add
push
aam
andb
and
pop
mov
dec
xchg
mov
in
xor
lcall
ret
lods
jl
sarl
cwtl
int3
xorb
pop
int
ret
aam
jl
cmp
pop
jnp
mov
cmp
test
outsl
in
loopne
sbb
lock
test
mov
pop
add
xor
aam
xor
pop
add
mov
bound
js
ret
xchg
jno
xor
add
push
xor
shll
jo
repnz
ds
add
and
incb
cli
xchg
test
pop
sub
pop
add
push
jecxz
enter
sub
jecxz
out
arpl
sub
add
mov
inc
pop
dec
jecxz
push
dec
ja
adc
add
xchg
fucom
rclb
out
cli
xorl
push
popa
fiaddl
inc
pop
mov
lret
jmp
mov
pxor
xchg
aaa
add
mov
xor
and
adc
in
mov
mov
cmp
add
xchg
aam
and
push
add
addr16
add
push
add
aas
lahf
popa
sub
and
pop
jmp
and
imul
or
add
push
int
movsb
add
dec
mov
jg
mov
xor
mov
cmp
ds
test
cld
popf
cmp
or
fcomps
adc
add
add
into
dec
stos
adc
shlb
mov
repz
cltd
sub
push
daa
and
jle
sbb
push
std
mov
scas
cld
mov
pop
lret
jo
mov
sbb
inc
in
adc
pop
pop
cmc
add
cmp
cmp
adc
pop
leave
test
rorb
mov
push
sahf
repnz
add
xchg
jp
out
push
add
add
pop
jo
in
adc
sub
enter
jl
out
andb
daa
aaa
loope
and
and
aam
xlat
add
add
std
jmp
jne
icebp
stc
dec
sub
mov
imul
push
mov
dec
clc
ret
add
inc
dec
popf
pslld
pusha
pop
mov
leave
fadds
loopne
sbb
bound
pop
fsubrl
cwtl
out
mov
imul
pop
adcb
push
cwtl
and
shrl
out
inc
test
std
push
test
cmpb
lret
dec
mov
pop
mov
add
inc
cmp
adcl
in
lods
xchg
add
fmulp
sbb
xchg
sbb
stc
js
inc
insb
add
loopne
imul
push
in
testb
sbb
je
add
mov
add
jmp
or
jp
pop
xorb
xchg
add
movsb
stc
in
shl
pop
add
add
shll
mov
lock
lret
pop
jecxz
insl
xchg
popa
ja
ja
add
int
push
mov
cmp
pusha
adc
repnz
add
in
js
add
stc
inc
xchg
popf
testb
mov
loopne
xchg
xchg
add
xchg
and
pop
dec
inc
adc
inc
nop
add
pop
xlat
mov
jp
enter
cs
xchg
dec
jne
stc
clc
cmpsb
cmp
or
or
loopne
add
faddl
mov
xchg
pop
add
addr16
add
pop
cli
xorb
sub
fsubl
in
push
movsb
add
mov
cmp
mov
sub
subl
cmp
ljmp
add
test
out
pop
nop
cmp
insl
mov
push
enter
xor
lret
xchg
mov
add
pop
jae
outsb
mull
pop
fidivrs
add
lock
mov
mov
add
mov
lret
out
flds
mov
mov
xor
cwtl
add
iret
mov
mov
ljmp
fsubp
push
jo
dec
testl
or
or
fisubl
add
pop
loopne
add
dec
ret
in
push
in
pusha
xchg
and
nop
rolb
mov
scas
bound
lods
jg
mov
push
sarl
push
inc
adc
add
mov
bound
add
push
jo
add
mov
jl
add
ss
test
pop
fisttpl
xor
add
andl
dec
mov
mov
cli
ja
add
dec
fidivs
test
dec
adc
mov
pop
pushl
sbbb
add
aaa
and
mov
pushf
sub
ffree
inc
cmp
inc
into
movsb
add
adc
mov
loope
and
add
fwait
sub
aaa
xchg
push
mov
je
negb
aad
testb
js
jge
xorb
push
mov
mov
rorb
add
push
cmc
push
sub
clc
or
outsl
sbb
mov
bound
mov
out
test
pop
int
adc
insl
jo
mov
sub
sahf
shll
inc
inc
xchg
out
jo
hlt
vpunpckldq
mov
leave
iret
imul
mov
jo
add
cld
je
flds
lahf
inc
rcrb
fiadds
push
call
pop
mov
je
jae
pop
daa
iret
jnp
pop
out
sbb
into
nop
or
add
or
inc
and
mov
test
push
pop
sbb
orb
hlt
lahf
jae
add
xchg
popf
push
mov
add
cmc
stos
mov
and
xor
test
cmp
in
mov
add
xchg
cmp
inc
bound
rclb
adc
data16
add
cld
js
push
or
call
fistl
enter
push
and
add
mov
xchg
ret
subb
rolb
cwtl
jle
fidivs
add
push
scas
cli
addr16
xchg
clc
and
and
and
std
gs
add
add
shrb
imul
push
cmp
adc
add
adcl
push
clc
jmp
sbb
out
xchg
hlt
inc
sbb
sahf
inc
cmpsl
cmc
dec
rclb
in
mov
jae
pushf
pop
add
dec
lahf
mov
push
sbb
iret
ja
incb
or
jge
adc
dec
jno,pn
dec
add
xor
sbb
dec
mov
xchg
dec
pushf
xor
add
mov
loop
mov
push
mov
pusha
jno
out
jg
add
lea
pop
mov
xchg
loopne
and
adc
sub
xor
mov
adc
mov
xchg
lret
popf
mov
sub
add
xchg
fisubrs
add
aas
push
xchg
sar
roll
mov
add
jnp
scas
addr16
sub
adc
dec
xchg
push
dec
add
sub
js
add
or
mov
push
add
add
movsb
sbb
add
sbb
sub
shll
add
xchg
aad
adc
sbb
mov
or
cmp
adc
notl
jge
add
sub
das
add
sub
test
push
jno
xor
daa
mov
cli
add
jns
sub
test
add
mov
push
mov
shll
in
int3
cmp
outsb
add
add
lcall
stos
cli
and
or
and
xchg
adc
shll
mov
push
fstpl
xchg
je
xor
js
add
and
addb
and
add
adc
sbb
mov
ret
mov
repz
sub
push
dec
cmp
popf
into
setl
add
dec
aad
jl
add
sub
mov
insl
add
fisubrl
cmpsl
inc
enter
mov
cmp
push
adcb
cmp
jbe
ret
cmp
jo
nop
lods
add
cld
fdivrs
dec
adc
outsb
pop
mov
sbb
dec
stos
shlb
mov
xchg
stc
cmp
leave
mov
push
stos
push
fwait
out
lret
cld
add
gs
aam
aad
repz
push
je
add
or
int
outsb
cltd
loope
jbe
mov
cmp
jb
test
xchg
mov
js
mov
push
ja
testb
loopne,pn
ja
or
add
sub
mov
inc
cld
push
ss
movsl
add
or
popf
jmp
ret
sub
push
mov
jns
ss
xor
nop
add
gs
mov
inc
jmp
dec
jle
and
and
mov
add
je
or
pop
fstpl
xor
cld
dec
sarl
add
lods
in
fs
in
adc
xchg
push
sub
push
lahf
mov
mov
xchg
push
mov
hlt
shlb
scas
mov
add
push
cmp
xor
sbbl
mov
mov
call
mov
inc
sahf
pusha
repz
shr
cmp
cmp
mov
mov
sbb
or
frstor
nop
inc
push
int3
inc
lcall
cmc
notl
or
mov
mov
out
sub
pop
sub
lret
push
mov
jmp
push
test
and
repnz
sbb
push
cmpsb
jmp
dec
add
add
daa
mov
ja
negl
pop
mov
dec
or
addl
xlat
mov
pop
pop
add
mov
in
add
xchg
mov
add
imul
sahf
fs
jmp
out
gs
jecxz
or
orl
xor
addl
ja
fstl
call
mov
add
inc
sub
xlat
adc
dec
cmpl
sar
or
adc
cmp
adc
add
in
fstp
js
test
sbb
icebp
aaa
mov
daa
leave
and
jl
dec
or
enter
in
add
aad
pop
xor
cwtl
add
in
ficomps
jle
shrb
mov
cld
sub
ror
aam
rcl
xchg
call
popf
add
inc
cld
outsb
enter
mov
push
mov
mov
add
test
ja
out
add
outsl
out
jne
or
int3
add
rorb
push
mov
in
rcrb
mov
mov
add
pusha
jp
enter
jo
sbbl
aad
call
push
sub
bnd
add
jmp
xor
aaa
mov
enter
xorb
jo
cmpsl
mov
push
repnz
mov
iret
adc
add
fs
cmp
add
cmp
and
add
dec
dec
jg
insb
test
es
push
dec
and
jnp
clc
inc
add
into
cld
xchg
test
add
ja
inc
adc
cltd
add
add
and
pop
add
cmpsb
dec
or
arpl
rcrb
and
fnstenv
or
mov
add
add
mov
sti
clc
adcb
inc
sub
cmp
std
fisttpl
int
mov
cwtl
adc
add
mov
and
mov
adc
out
pop
out
les
cli
add
divl
out
addr16
pop
push
mov
repnz
or
in
xchg
pop
adc
dec
add
cmp
stc
icebp
movsb
mov
sbb
mov
rolb
shrl
xchg
or
adc
test
and
pusha
addb
cld
add
rorb
mov
imul
or
pop
xchg
movsb
add
test
lea
out
dec
dec
sbb
in
loope
stos
ja
adc
add
xchg
lret
std
clc
mov
jae
sub
sbb
pop
fmuls
out
pop
sub
mov
outsb
test
inc
cmp
int3
andps
ds
sbb
adc
testl
mov
or
shrb
or
stos
cmpsl
ss
add
ds
hlt
jbe
xor
add
adc
mov
in
push
inc
shlb
in
and
aas
punpckhwd
mov
and
inc
loopne
xor
imul
add
inc
imul
clc
ljmp
fisubs
jge
sbb
add
xchg
js
ficoms
std
mov
and
sarb
in
mov
mov
cmp
adc
cmpsb
push
pop
xchg
scas
mov
and
ud0
pop
add
jp
pop
add
dec
mov
hlt
fwait
mov
dec
mov
cmp
das
pop
xchg
fildll
mov
cmp
add
hlt
das
add
cli
inc
mov
fmul
pop
add
pop
fdivrl
pop
shll
sub
movsb
nop
push
in
mov
pop
jns
aam
jbe
jno
sbb
or
fimull
cmp
inc
sbb
cmp
dec
mov
test
xor
hlt
aas
arpl
sahf
mov
test
imul
cmp
fbstp
lds
out
xchg
inc
xchg
add
pop
adc
dec
add
inc
pop
fadds
pop
mov
clc
pop
in
sbb
or
lock
fadds
sub
inc
inc
xlat
cwtl
std
cli
mov
pop
addr16
movb
bound
and
lods
add
sti
xor
push
mov
cli
add
mov
sbb
scas
xor
sarl
mov
add
mov
mov
add
inc
jl
or
add
add
xchg
gs
frndint
out
rolb
repnz
in
mov
pop
mov
inc
cmp
das
jo
jnp
pop
add
push
mov
pusha
mov
add
push
pop
mov
mov
mov
cmp
dec
std
gs
daa
and
mov
mov
lahf
fstpt
jle
add
call
repz
shl
data16
adc
pushf
xchg
inc
xchg
mov
push
add
popf
sbb
mov
add
pop
or
adc
jo
sub
adc
push
ret
mov
add
inc
shll
add
fadds
add
push
jno
add
push
cmp
out
enter
sbb
push
js
xor
nop
ja
pushl
sub
sahf
sbb
and
push
mov
dec
sub
jmp
orb
mov
add
mov
mov
mov
leave
xchg
jle
pop
mov
xchg
pusha
cmc
jne
add
stc
sbbb
inc
loop
cmp
fwait
es
sbb
sub
mov
push
outsb
pop
jo
inc
sbb
pop
aas
popf
add
or
imul
xlat
cmpsb
pop
inc
jo
xor
xchg
jb
mov
sbb
pop
rolb
mov
movsl
pop
dec
inc
mov
add
sbb
lods
adc
add
jne
add
pop
xchg
icebp
add
daa
mov
add
add
les
jp
sarl
dec
push
enter
adc
in
stos
pop
add
cmp
pop
incb
mov
aam
add
xlat
out
sbb
cmp
dec
leave
add
jnp
hlt
add
mov
bound
sub
and
das
jno
add
adc
pop
sbb
gs
sub
je
sub
push
dec
aas
cwtl
movsb
in
xchg
shl
add
aad
adc
lds
out
loop
mov
int3
add
icebp
jge
sti
inc
mov
fsub
mov
pop
push
xor
lret
loopne
xchg
das
sub
cmp
ljmp
or
into
pop
cmpsb
faddp
int
rorb
push
add
imul
scas
jno
pop
cmp
popl
div
jmp
add
xor
js
shrl
rolb
jno
add
mov
and
add
or
pop
fnsave
mov
jmp
sbbl
add
xchg
push
sub
xor
imul
fidivrs
push
sub
xor
fildll
fdiv
jp
in
setle
cmp
adc
mov
lock
inc
add
and
sbb
fnstcw
repz
push
daa
inc
in
lods
stos
scas
cmp
mov
and
pushf
test
pop
inc
push
sti
inc
jne
mov
sbb
addr16
shlb
sbb
aaa
ljmp
push
dec
push
pop
mov
adc
loop
jge
jno
sbb
subb
jecxz
push
mov
pop
adc
mov
sbb
dec
fcmovb
xor
add
mov
cld
mov
push
hlt
add
aam
jb
mov
and
add
mov
xor
mov
add
pop
sub
add
out
test
add
pop
pop
in
adc
push
add
jle
push
rcrl
push
and
pop
adc
and
mov
inc
add
shl
mov
add
lods
push
or
jbe
cmp
xchg
mov
testb
mov
notl
inc
or
stc
popa
mov
pop
enter
mov
call
out
movsl
or
test
mov
std
push
xor
loope
mov
cmp
addb
and
ja
mov
cmp
fcomps
lret
mov
int
push
ret
xchg
xor
mov
jns
jns
add
cmp
inc
dec
jne
push
sahf
hlt
xchg
xorl
add
data16
inc
jns
test
add
xor
sbb
adc
push
fistpll
add
xlat
sbb
adc
jns
movsl
add
in
jp
in
in
jmp
cmp
sbb
or
mov
adc
jb
pop
out
add
pushf
std
mov
cli
xor
mov
push
int
add
or
push
mov
push
jnp
orb
inc
icebp
add
cmp
add
xchg
add
int
sub
add
jae
setle
mov
les
adc
mov
xchg
fwait
xor
or
fs
add
pop
sbb
jbe
mov
push
xchg
add
sub
pop
add
or
jle
fistl
int
add
push
xchg
add
adc
fldt
rep
into
add
xor
xchg
cmpsb
pop
add
and
loop
add
andb
jo
jo
cmpsb
push
or
mov
pop
dec
je
add
daa
and
test
cltd
sbb
pop
xor
enter
pusha
or
int3
popa
adcb
pop
stos
push
sbb
push
dec
inc
adc
test
push
add
mov
push
pop
fimuls
aam
mov
pop
xchg
ss
add
dec
cmpsl
pop
outsl
lock
add
into
mov
xor
push
icebp
cmc
roll
lret
popf
popa
push
rclb
bswap
bound
pop
dec
push
loope
push
imul
lods
or
push
inc
pop
out
mov
rcrl
inc
xor
sub
xchg
orb
int3
mov
sub
fistpl
jmp
add
iret
pusha
nop
add
push
sbb
mov
das
and
and
gs
mov
cmp
add
push
in
xchg
jbe
sub
mov
fdivs
xchg
dec
js
loopne
and
sbb
fdivrl
cmp
jmp
add
adc
mov
inc
push
add
add
cmove
aam
mov
adc
xchg
pop
out
xchg
cld
aas
add
loop
xor
push
fiaddl
add
popf
stos
scas
fimuls
add
int3
mov
push
enter
pop
ficoml
or
sbb
mov
scas
add
push
xor
mov
inc
je
aas
mov
xchg
add
ja
repz
xchg
add
adc
add
aas
enter
pop
fs
nop
rcrb
push
dec
sti
popa
in
cmp
ss
ja
add
cwtl
cmp
insl
push
xor
sarl
rorb
push
mov
jmp
add
push
call
mov
sti
sub
cmp
jb
or
xchg
push
adcb
jns,pn
pushf
mov
gs
in
scas
add
lahf
cwtl
mov
out
jb
enter
mov
ds
nop
add
andl
rcl
and
mov
xor
push
mov
fsubr
aam
aaa
jnp
add
in
hlt
cmp
jbe
push
pop
enter
aam
test
mov
lods
adc
inc
std
xchg
cmp
mov
test
adc
shl
imul
mov
sub
pop
loopne
adc
adc
inc
push
cwtl
loopne
stos
add
jb
repz
cmp
add
adc
mov
add
testb
xchg
sbb
ljmp
in
sub
add
loop
or
push
fisubs
xor
push
repz
xchg
cltd
gs
add
ljmp
clc
jle
add
inc
enter
add
and
inc
hlt
lcall
dec
repz
mov
movsb
add
jae
out
sahf
sub
sarb
adc
bound
xchg
ret
into
imul
add
pushf
leave
rolb
add
lret
mov
adc
das
sbb
and
inc
enter
add
push
loope
lods
dec
dec
xchg
add
aaa
dec
fucomip
or
mov
daa
mov
inc
adc
and
stos
pop
ja
mov
shl
loopne
cmpsb
pop
sub
pushf
gs
dec
jl
push
add
pop
and
add
cld
scas
out
and
add
stc
xchg
and
jb
and
lea
mulb
daa
xor
adc
sbb
lods
add
fwait
imul
pop
or
std
mov
bound
or
or
inc
jbe
psrad
dec
inc
add
cmp
dec
jae
scas
dec
clc
dec
jnp
mov
and
xchg
add
loopne
or
add
pop
into
xchg
add
mov
or
iret
add
mov
std
xchg
xlat
add
mov
mov
movsb
and
add
hlt
fldcw
xor
test
int
sub
shrb
or
xchg
hlt
push
mov
sub
dec
test
addb
js
dec
xchg
xor
fisttps
push
xor
or
pop
andb
push
add
jl
notl
sub
clc
fiaddl
in
pop
inc
sub
outsl
push
nop
xor
icebp
je
fmuls
fdivrs
add
sub
inc
lods
add
int
mov
lock
mov
dec
mov
fmul
fistps
movsl
nop
jnp
ss
adc
pushf
roll
pop
xorb
and
cwtl
insb
les
je
roll
sbb
int
repnz
and
push
pop
sub
mov
and
adc
rolb
cmp
mov
or
in
lcall
roll
cmpsb
mov
repz
and
cmp
hlt
popl
int3
jmp
push
adc
adc
dec
stos
sbb
adc
jbe
daa
sti
push
testl
call
adcb
inc
pop
pop
jp
add
pop
fbstp
push
clc
jmp
push
or
sbb
out
ds
add
cs
jno
inc
repnz
xchg
fdivl
xorb
test
das
mov
ljmp
loopne
dec
je
add
aam
and
loopne
jp
test
mov
sahf
in
mov
xchg
arpl
int
es
push
and
loopne
mov
and
mov
pop
pop
pop
inc
int3
dec
cmp
mov
push
jns
jl
push
or
arpl
loopne
pop
jge
push
xor
sbb
mov
out
es
push
roll
dec
push
pop
xchg
loope
int
pop
sbb
pop
push
jne
nop
sub
cld
add
fisubl
jae
daa
fcompl
je
xor
and
dec
xor
or
arpl
mov
pop
lods
pop
adc
add
cmp
fidivs
mov
add
fwait
loopne
stc
mov
sbbl
lock
mov
pop
mov
ffree
shl
fxtract
testb
mov
pop
rcrl
pop
ds
jae,pt
movl
iret
mov
push
mov
pop
pop
add
xor
addr16
inc
mov
xchg
adc
scas
pushf
sbb
cmp
test
fiaddl
add
mov
lock
and
scas
mov
inc
jo
cwtl
outsb
adc
push
push
or
push
jns
pop
or
cmp
dec
mov
insl
jmp
add
inc
sub
adc
loop
or
inc
add
cmp
pop
mov
push
jne
dec
xor
cld
sub
xchg
mov
lods
add
xor
scas
mov
test
loop
mov
push
into
dec
push
daa
fwait
out
out
add
sub
dec
add
cwtl
lret
pop
pop
mov
in
and
inc
push
push
pop
add
outsb
adc
sbb
jns
repnz
add
mov
sarl
lods
hlt
pushf
and
jp
pusha
mov
imul
test
movmskps
mov
pusha
add
add
dec
rclb
xor
add
add
or
xor
jmp
push
adc
std
sbb
push
mov
ds
pusha
sarl
jmp
xchg
add
push
or
hlt
loopne
push
xchg
cmp
clc
pop
and
pop
or
xchg
loope
dec
arpl
imul
push
lret
fmuls
xchg
push
jg
aam
lock
dec
cwtl
and
push
add
add
test
push
adc
add
cmp
sub
testb
and
stos
mov
mov
xor
sbb
pop
mov
out
imul
sbb
mov
xchg
push
or
mov
add
inc
inc
dec
mov
cmp
pop
loopne
loope
mov
or
cmp
in
sub
inc
fdivrl
add
pusha
clc
dec
add
test
sbb
test
lock
adc
mov
lods
sub
fiaddl
mov
adc
sub
rcll
addb
dec
adc
add
inc
shlb
jno
inc
mov
push
mov
dec
cmp
sahf
push
mov
sti
nop
jbe
add
add
and
jo
in
inc
xchg
fildl
inc
std
sbb
push
out
shrb
xor
and
xchg
xchg
test
fmuls
cmp
in
inc
xlat
repz
push
inc
inc
mov
jbe
nop
test
dec
lea
pop
lods
cli
jne
cli
mov
fwait
repnz
iret
jle
out
push
add
in
aam
popa
mov
push
das
jns
add
jle
in
call
add
sti
pop
ret
add
imul
outsb
filds
fldenv
and
cwtl
ja
inc
aad
rorb
add
sbb
push
mov
sub
pop
cs
popa
xor
scas
and
sub
add
push
sub
push
jle
pop
xchg
inc
mov
add
mov
mov
addb
fsubrp
add
jmp
stc
push
sysret
repnz
or
lods
cmp
adcb
rorb
inc
aam
lret
jecxz
fwait
out
mov
nop
out
and
sarb
adcb
jg
add
sub
stos
pop
xchg
loope
imul
add
insl
movsb
push
xchg
aam
clc
pop
push
dec
mov
xor
outsb
mov
and
rclb
pop
imul
add
jl
pop
add
insb
jno
adc
pop
add
addr16
scas
add
pusha
xor
push
push
cmp
push
and
and
fstp
rol
cmp
add
mov
mov
pop
add
je
popw
mov
fimull
push
jo
pusha
jne
pop
xchg
jecxz
add
or
sbb
xor
jle
pop
shll
xchg
add
jge
lock
and
lds
cmp
imul
loop
pop
dec
ffreep
adc
repz
xor
jne
pop
negl
add
or
sbbl
ud1
mov
sub
or
out
ss
push
mov
xchg
add
shlb
mov
popa
adc
mov
push
cwtl
loopne
hlt
push
sub
cmc
rclb
rclb
add
mov
or
jl
add
mov
and
je
sahf
lcall
inc
mov
jecxz
jo
push
mov
das
cmpsb
adc
lock
nop
shll
xchg
std
jecxz
sbb
and
cs
xchg
inc
cmp
add
pusha
sub
xchg
mov
inc
or
les
push
daa
jg
movsl
js
add
sbb
js
scas
das
add
cwtl
xchg
xchg
dec
jno
mov
add
xorl
add
aas
out
mov
loop
push
add
insl
push
icebp
cmp
push
push
divb
and
jae
orl
add
dec
lds
add
loop
mov
xchg
rolb
pop
add
and
add
fnsave
inc
xchg
jg
sbb
mov
repz
push
nop
test
push
loope
scas
dec
add
pop
pop
imul
xchg
outsb
cmpsb
mov
lds
add
jmp
pop
add
popa
ret
add
cli
loopne
imul
ret
fistps
iret
jg
gs
roll
fiaddl
outsb
push
fcoms
push
pop
or
jp
xor
jnp
outsl
add
es
ja
dec
fldcw
loop
inc
add
jno
es
daa
push
repz
pop
andb
nop
pop
inc
addb
sbb
add
mov
mov
add
psubsb
js
addb
or
adc
add
insl
jle
lock
add
xlat
dec
clc
stc
sub
imul
mov
push
and
addr16
mov
nop
pop
loopne
mov
or
push
int3
jmp
mov
add
push
inc
insb
lcall
lret
pop
xor
pusha
sbb
mov
cltd
rcrl
cmp
jecxz
stos
inc
fwait
test
out
bound
adc
pop
lea
add
xlat
jmp
add
popl
sahf
sbb
mull
lcall
add
xor
mov
mov
jg
pop
jl
push
outsl
xchg
add
inc
stos
xor
cmp
inc
out
adc
add
mov
clc
xchg
add
mov
push
lret
je
outsl
andb
fs
dec
and
xchg
add
loope
push
or
lods
mov
fucom
and
cmp
jl
sbb
enter
or
decb
add
frstor
jecxz
cmp
add
dec
bound
insl
pop
hlt
ds
adc
je
lock
jmp
cmp
pop
mov
inc
ja
jecxz
dec
cmp
xchg
out
add
push
dec
nop
sub
push
outsb
jp
add
sbb
mov
inc
mov
fistpl
mov
push
bound
ror
lock
add
mov
out
les
shll
mov
dec
fiaddl
test
mov
lahf
ja
xchg
jmp
pop
enter
and
fucomp
push
and
mov
iret
mov
orb
repnz
pop
mov
dec
mov
mov
jnp
add
xchg
int
leave
push
cld
jg
in
cmp
shrb
rcll
or
ljmp
rorb
add
mov
mov
add
push
dec
mov
add
inc
shl
push
or
pop
lods
cmp
dec
pop
lods
stc
flds
into
inc
je
add
push
or
in
btc
pop
sarb
popa
cmp
add
push
add
ret
inc
pop
outsb
sarb
addb
push
inc
xchg
aad
ss
sbb
cmp
sar
sub
mov
add
scas
out
mov
loope
cmpsb
leave
dec
jo
mov
xchg
mov
jecxz
out
add
stc
sbb
lret
add
jge
lcall
cwtl
inc
mov
loope
and
call
add
push
jno
dec
sahf
stos
mov
jo
add
aas
cmpsb
das
pop
jbe
or
add
and
out
sbb
add
icebp
mov
or
dec
nop
pop
push
arpl
xchg
push
xchg
ret
dec
repnz
add
xchg
xor
sbb
cs
sahf
pop
cmp
fsubrs
cmpb
mov
minps
mov
mov
stos
add
ret
inc
cmpl
sbb
adc
xor
sub
push
cltd
int
sub
sub
mov
pusha
sbb
xchg
in
pop
sbb
loop
sarb
add
pusha
jmp
mov
ljmp
add
push
or
sub
movsb
test
add
arpl
add
sbb
add
sbb
sbb
insb
add
mulb
in
push
push
sbbb
adc
fnstcw
in
pop
push
test
pusha
iret
adc
adc
mov
ss
mov
and
adc
nop
add
nop
and
popa
push
arpl
incb
xlat
mov
push
xchg
cmp
or
cmpsb
js
sbb
test
sbb
bound
movsl
test
dec
and
ret
scas
add
dec
dec
test
sbb
push
cmp
cmp
sti
jp
mov
mov
sbb
mov
ja
mov
inc
sbb
add
call
pop
mov
ljmp
prefetch
push
add
aam
mov
repnz
jmp
push
clc
xchg
xchg
icebp
adc
jecxz
add
incl
imul
push
stos
mov
mov
add
gs
orl
pusha
adc
loope
add
aad
mov
mov
es
daa
and
dec
pop
psubw
arpl
push
jle
xor
xor
jl
out
add
cmp
in
mov
dec
in
sbb
add
mov
aam
cwtl
push
movsb
and
inc
push
mov
dec
and
fldl
mov
jg
sub
mov
push
movsb
aad
ds
adc
mov
xchg
lea
xchg
aam
jmp
adc
adc
xchg
stos
sub
lcall
jge
mov
mov
dec
notb
dec
testl
clc
add
aam
pushf
adc
js
mov
push
arpl
test
shrb
js
dec
sbbb
add
push
cmc
scas
add
push
hlt
lds
mov
sbb
andb
dec
lds
lods
sahf
add
test
and
adc
mov
testl
xorl
and
pop
call
gs
inc
loop
loopne
xor
pusha
imul
mov
leave
fstpl
loopne
flds
fs
fmul
jb
xchg
cmp
das
test
rcl
pop
add
mov
adc
cmp
cs
outsb
pop
and
sub
rorb
add
aad
mov
add
sbbl
or
jbe
std
es
adc
sub
add
pop
out
and
jo
and
push
ss
cmc
addb
lds
and
add
cwtl
fwait
jg
pop
push
leave
push
push
data16
cmp
push
add
enter
cmp
roll
inc
clc
lock
adc
test
sub
jb
xor
jne
outsl
ret
hlt
ljmp
loop
or
xor
or
pxor
xchg
add
mov
add
call
jbe
jne
cli
fidivrl
cli
add
ret
ja
add
add
dec
or
cmp
daa
arpl
lcall
push
and
mov
sbb
fwait
cmpsb
stos
mov
adc
jmp
push
lods
loopne
cmp
add
push
sahf
add
xor
xchg
or
jp
mov
scas
jns
mov
pushf
jo
lret
add
cmp
sub
and
xor
push
rorb
or
mov
push
out
cli
adc
mov
int3
pop
lock
sbb
dec
jmp
dec
in
cmp
popf
dec
int
ljmp
ret
push
jae
dec
add
andb
icebp
or
and
and
inc
clc
lods
repnz
xor
mov
xchg
outsb
and
or
xor
enter
and
or
imul
inc
pusha
popa
stc
nop
inc
divl
or
imul
inc
jno
or
inc
add
cmp
lret
rcr
test
pop
fs
and
movsl
loop
pop
mov
push
pushf
add
jnp
hlt
inc
mov
sbb
and
jae
stos
or
inc
adc
ror
cmp
mov
xchg
jnp
jae
cmp
sbb
rolb
or
pop
mov
inc
add
sahf
ss
loopne
push
scas
add
or
hlt
mov
and
jae
push
test
mov
jmp
dec
shrb
mov
jecxz
repnz
xor
sbb
sbb
add
xchg
ja
sub
fwait
pushf
add
dec
iret
outsl
push
add
add
out
mov
cmpb
clc
sub
and
jns
pop
mov
es
lea
add
cmp
add
sahf
out
fs
cmp
xchg
aad
add
fbstp
add
and
add
lahf
loope
leave
mov
mov
shr
cltd
and
sbb
xor
imul
fldt
cmp
mov
js
jnp
add
pop
cmp
shll
scas
push
mov
sbb
lds
les
test
test
mov
xor
test
xchg
jno
stos
jae
cmp
push
xchg
sbb
sbb
nop
movsb
pop
and
mov
cmc
pop
mov
scas
loopne
cmpsb
mov
sub
enter
jp
xchg
xchg
sub
les
aam
xchg
shl
out
mov
shrb
arpl
push
xchg
ror
pop
adc
jecxz
sub
sti
cmpsl
nop
imul
or
dec
xorb
enter
test
and
js
add
les
addl
push
iret
ja
add
push
or
nop
adc
imul
jmp
fisubl
imul
pop
sbb
mov
push
clc
in
dec
pusha
iret
movsb
mov
sub
pop
inc
mov
sahf
test
and
pop
repz
out
pop
out
add
mov
dec
daa
dec
popf
sbbl
adcb
dec
inc
sub
js
add
pusha
dec
mov
xlat
jns
test
cmp
js
mov
xchg
jmp
fnsave
test
push
mov
xchg
adc
call
es
adc
or
ja
add
dec
imul
push
cmp
sub
addr16
mov
js
fyl2x
pushf
add
or
xor
add
inc
nop
or
dec
fsubrs
inc
jo
jne
mov
xchg
cmpb
jns
and
fstl
jge
enter
sub
subb
xor
sarb
mov
ficoms
jo
cmp
sub
aas
mov
shlb
xorb
pushf
movsb
lcall
jmp
mov
scas
mov
pop
jnp
xor
mov
add
dec
movsl
inc
push
sahf
xchg
stos
or
ljmp
and
popa
lods
test
repnz
push
sub
inc
or
jne
pop
add
movsl
cmp
inc
adc
outsb
stos
add
sbb
jge
mov
jo
push
out
mov
gs
and
xchg
pop
add
mov
add
jle
jge
jmp
cli
sbb
std
or
add
daa
and
in
add
cmc
cmp
adc
aad
add
mov
pop
rolb
hlt
pop
mov
out
jl
xor
sbb
xchg
xchg
pop
add
xchg
or
mov
mov
iret
xor
and
sahf
jne
jno
mov
js
xor
push
xlat
push
or
push
pop
imull
push
cmp
bound
add
outsb
pop
cmp
mov
add
jge
addb
fidivl
ja
xchg
sub
rcr
jne
addb
or
imul
nop
repnz
call
mov
xor
xchg
push
and
test
inc
jbe
dec
out
push
mov
fnstsw
inc
push
cli
add
rolb
dec
push
add
adc
repz
sbb
je
stc
stos
add
and
mov
sarb
jecxz
xchg
add
cltd
aas
add
fildl
shr
fcoml
jle
jo
push
push
lods
xor
sub
clc
add
and
cwtl
addl
sbb
dec
pop
repnz
add
scas
pop
fildl
adc
and
sub
pop
lods
mov
jno
iret
cld
push
stos
lock
mov
mov
loopw
add
leave
fsubr
dec
xchg
pushf
aad
icebp
push
lea
sarb
loop
adc
aam
rcrl
or
test
hlt
lret
add
mov
add
fwait
lahf
add
mov
ficoml
fcmovne
mov
xor
rorl
mov
mov
adc
stos
addr16
xor
mov
mov
push
rclb
lahf
and
mov
mov
das
pusha
mov
insl
cmp
adcb
sbb
shlb
addr16
mov
add
inc
ja
in
les
cmp
ret
arpl
pop
add
mov
fsubs
mov
les
loopne
xor
nop
rcrb
dec
mov
subb
sub
int3
mov
xor
add
cmc
fidivl
mov
or
shrb
mov
sub
pop
dec
xor
pop
jo
push
add
mov
add
xchg
sub
mov
inc
fwait
add
push
movsl
aam
rclb
sarb
sbb
out
push
test
sahf
sub
add
mov
cmp
cmp
sbb
leave
xor
dec
lcall
and
mov
daa
push
pop
push
jp,pn
arpl
jno
notb
mov
aas
cli
sbb
add
iret
pop
lods
dec
incl
mov
mov
dec
add
pop
push
ficompl
ss
testl
lods
shll
roll
lea
daa
in
jo
and
inc
je
or
sbb
sbb
push
lds
fmuls
xchg
jecxz
jae
sbb
and
aas
lahf
push
add
cmpsb
adc
pop
mov
dec
fists
lcall
add
out
inc
cmc
and
jecxz
and
sarl
lea
mov
cltd
mov
jno
ja
pusha
out
mov
add
std
mov
inc
jbe
out
pop
cmp
cmpsb
xchg
cmpsl
lods
sub
add
sbbb
cld
sub
inc
xlat
nop
arpl
popa
bound
add
repnz
inc
add
dec
xchg
stos
pusha
push
aad
add
sti
inc
hlt
popf
les
sbb
pop
mov
jge
fistpl
push
or
ficoml
xor
pop
pop
cmp
jae
movb
adcl
inc
scas
out
sahf
mov
sbbb
sub
xchg
faddl
mov
popa
sub
fmuls
cmp
add
scas
les
lds
bound
jl
cmp
mov
inc
xchg
in
je
ret
jg
push
daa
ds
ret
add
enter
mov
shll
arpl
add
and
in
dec
pop
cmp
fidivrs
mov
xor
test
push
loope
pop
cld
pushf
hlt
je
popa
cld
xor
xchg
or
rolb
bound
in
dec
ljmp
lods
int3
stos
inc
lods
fstp
sub
cmp
inc
push
rorb
add
sbb
rorl
and
stos
cmc
xlat
loopne
or
xor
lods
push
stc
rclb
imul
xchg
arpl
flds
movsb
xchg
jae
adc
ja
stc
in
add
fcomi
jbe
ret
adc
int3
pop
push
add
mov
sbbb
inc
xor
rcl
lahf
cmp
sub
loope
pushf
pusha
in
mov
inc
push
lahf
cmpsl
out
or
or
int3
shlb
daa
lret
addb
loopne
xor
mov
mov
jbe
jecxz
ret
and
sub
enter
mov
arpl
xor
test
int3
cmp
push
shlb
sbb
movsb
aam
aaa
sub
stos
push
sub
pushf
bound
pop
pop
call
call
lahf
les
movl
inc
and
pop
adc
subb
std
sarb
imul
dec
sub
add
sbb
loope
repz
jge
in
sbb
cld
inc
mov
stos
adc
xlat
cmpsl
push
out
in
hlt
xchg
nop
add
test
add
cmp
add
pop
subb
mov
sbb
pushf
and
lock
cwtl
xchg
std
push
cltd
rcrb
rcrb
int3
or
cmp
add
add
xor
fadds
je
lock
dec
cmp
xorb
negl
add
icebp
in
hlt
push
pop
adc
fldl
data16
xor
add
xchg
and
cmp
xchg
subb
sti
aad
nop
adc
js
adc
je
outsb
xor
lret
lods
jle
fstl
xchg
test
or
xchg
jne
pop
in
add
jge
inc
sub
aad
add
pop
in
addb
xchg
jns
lahf
dec
sbb
into
ljmp
or
jo
push
iret
stos
sub
adc
or
sti
fdivs
cmp
push
pop
adc
fidivrs
mov
repnz
scas
jo
aas
jg
or
les
addl
imul
pop
or
bound
sub
mov
sub
les
inc
xchg
lods
dec
adc
nop
xor
mov
stos
add
fldl
inc
add
dec
adc
lret
cmp
outsl
add
loop
imul
or
pop
cmpsl
lcall
add
or
and
jnp
aad
add
andl
sbb
dec
test
pop
add
cmpsb
add
js
rorl
fmuls
repz
aam
stos
jb
bound
or
cmp
sub
pop
dec
mov
mov
cmp
les
cmpsb
sub
or
loopne
jge
or
xor
mov
arpl
mov
pop
mov
dec
inc
pop
push
cli
or
or
xchg
push
push
dec
fiadds
pusha
lock
or
sub
add
mov
xor
fldenv
int3
push
cli
mov
mov
jne
call
add
mov
sti
cmp
insb
and
dec
mov
test
loopne
repz
les
mov
push
in
mov
adc
mov
bound
sbb
mov
or
and
aad
inc
xor
pop
and
dec
in
pop
mov
pop
jg
mov
cmc
fcoms
add
or
popf
lock
ljmp
mov
orb
addr16
imul
lret
cld
mov
push
jmp
mov
mov
xorl
mov
and
mov
icebp
add
imul
lret
xor
sbbb
jne
repnz
stos
xlat
or
ficomps
rcl
inc
in
pop
addb
popa
ljmp
inc
or
or
jbe
xchg
or
inc
sbb
add
pushw
jno
pop
test
dec
mov
je
or
sbb
add
mov
loopne
sahf
dec
nop
dec
stc
fiadds
cmpxchg
pop
jp
iret
pop
sbbl
mov
pop
cmpb
pusha
shlb
jl
and
jbe
ret
daa
dec
inc
pushf
or
and
dec
adc
add
pop
push
lret
test
cmp
daa
imul
adc
or
sbbb
add
pop
hlt
les
addr16
push
push
push
movsw
js
lods
pusha
inc
sub
jp
cmp
fistpll
pop
cmp
sti
pop
add
adc
dec
movsl
int3
out
icebp
and
into
xchg
dec
popl
in
inc
icebp
in
fbstp
add
jl
xor
movsl
rorb
xor
jg
sti
xor
push
shlb
push
adc
fs
pusha
and
and
adc
cmp
and
pop
push
arpl
add
and
mov
and
in
jmp
dec
das
fnstsw
add
and
sub
loopne
jae
add
sub
or
frndint
jns
mov
inc
mov
int3
push
test
and
jb
push
xor
jl
adc
mov
or
dec
mov
cmpsb
fsub
jae
and
add
or
or
ret
and
or
add
push
lds
mov
test
ret
mov
ds
dec
bound
adc
ss
lret
mov
adc
and
dec
inc
testb
jb
push
push
mov
testl
adcb
xchg
push
jb
pop
xchg
mov
xchg
lock
inc
inc
pop
pop
mov
adc
cwtl
dec
and
add
mov
jl
test
pop
xor
dec
jmp
stc
add
rorb
sysret
mov
cltd
dec
adc
adc
sbb
enter
loope
or
and
pop
xor
into
pusha
push
popa
push
and
clc
roll
rcrl
jecxz
jp
arpl
mov
and
mov
inc
pop
cmp
orl
push
cli
sti
or
mov
cwtl
or
mov
add
mov
mov
pop
push
mov
mov
xacquire
andb
mov
faddl
adcl
out
mov
push
out
add
and
and
rorb
jmp
inc
xor
or
add
pushl
pop
add
add
es
addb
adc
xchg
inc
and
test
mov
es
hlt
pusha
ljmp
adc
icebp
sbb
add
cli
jl
pusha
sub
test
andb
xor
inc
cmp
sub
adc
or
pop
lea
ja
cmpl
xchg
jbe
daa
ss
adc
push
sbb
add
or
and
lcall
icebp
subb
mov
pop
pop
lock
push
cmp
cmp
dec
jp
les
sbb
sbb
pushf
dec
jns
sarb
jb,pn
mov
xor
jae
test
lret
cmp
add
icebp
mov
inc
cld
mov
sub
pop
add
inc
sub
add
push
xlat
movsb
dec
lods
inc
mov
push
cmpb
cwtl
inc
jns
lods
mov
pop
in
daa
cmp
out
add
scas
js
addb
cmpsl
pop
fs
je
fldl
out
pop
add
and
cmp
xchg
stos
movq
daa
pop
push
sarb
or
push
aaa
pop
add
sti
inc
jmp
add
testl
and
inc
lock
cmp
data16
movl
mov
jg
push
cwtl
push
out
push
and
std
repnz
dec
mov
inc
loopne
or
inc
and
jns
push
add
stos
in
xchg
and
inc
or
adc
add
rcr
pop
mov
enter
jae
rsqrtps
sub
inc
or
or
inc
push
out
shrb
jle
and
imul
xchg
popf
jl
pop
jnp
les
inc
jno
lret
or
call
orb
add
xchg
mov
fstpl
and
sarl
or
icebp
sbb
sbb
mov
push
dec
xchg
stos
and
cmpsl
out
xor
iret
add
add
push
or
addr16
dec
add
lret
xchg
xchg
inc
xor
add
mov
test
jns
push
and
jno
sbb
add
insb
divl
test
cmp
mov
outsb
js
fnstcw
pop
add
jle
mov
ret
mov
inc
push
or
js
pop
loopne
dec
or
les
mov
and
sarb
push
ja
pop
xchg
pop
mov
mov
xchg
aas
cmp
add
lret
sbb
inc
xchg
or
xor
push
sbb
cld
or
xor
imul
add
and
fadds
xor
mov
add
outsb
shlb
xchg
inc
push
aas
inc
adc
test
stos
push
xor
add
mov
call
pop
jns
jl
mov
js
ds
pop
adc
lcall
fmull
stos
and
or
jl
pop
mov
orb
push
loopne
add
or
std
fnstcw
push
lods
in
lahf
xchg
dec
mov
popa
sahf
or
adc
int3
xor
in
scas
idivb
add
xchg
test
mov
pushf
roll
or
jae
or
mov
imul
test
inc
xor
outsw
popf
add
mov
int
mov
imul
jno
or
inc
add
repz
insl
cli
test
mov
mov
pop
mov
in
inc
xchg
push
pop
ss
cmp
or
mov
test
push
pop
jle
mov
adcb
jg
enter
call
bound
push
add
push
or
add
popl
adcb
xchg
popf
scas
add
jg
inc
lret
jl
push
int
aas
daa
rol
fs
xchg
rcll
je
js
js
or
jnp
mov
inc
xchg
insb
add
lds
sti
add
cltd
mov
jns
add
xchg
in
pop
jne
bound
xchg
and
loopne
mov
loop
or
add
cmc
in
pop
fisttps
out
loopne
js
jge
or
inc
mov
ja
or
popf
out
mov
xor
ret
testl
and
sbb
les
push
shrb
add
inc
jmp
out
mov
js
sbb
lods
orb
mov
pop
lock
add
cmp
xchg
dec
xor
icebp
adc
adc
add
ss
mov
and
inc
mov
sub
lods
add
sbb
adc
stc
sub
jge
add
or
dec
mov
jb
add
push
les
adc
mov
add
mov
mov
xor
fimuls
jecxz
ret
push
clc
mov
bound
shrb
add
aas
into
pop
iret
adc
in
in
sbb
push
popl
clc
jecxz
jg
cld
mov
xchg
xchg
pop
in
mov
imulb
pop
pop
movsl
sbb
push
repnz
add
cmp
orb
insl
mov
add
arpl
pushf
cmp
adc
push
movsb
cld
xorps
inc
negl
fldt
add
xchg
js
rcrb
xor
mov
clc
mov
xlat
popf
add
dec
mov
out
mov
mov
inc
jmp
fldl
fidivs
out
add
aas
notb
cmp
sbb
or
jp
sti
test
sbb
xchg
pop
rolb
lcall
fisubrs
sahf
mov
adc
xlat
inc
push
cmp
add
pop
or
stos
aad
adc
in
xchg
rorb
sti
pusha
and
pop
cmp
stos
adc
mov
add
xor
and
add
adc
insl
test
repnz
ds
push
add
add
arpl
sub
dec
mov
out
mov
lret
sbb
push
test
cmp
cld
sbb
or
test
pop
sub
sahf
int
add
push
cmpb
mov
fstl
adc
adc
or
sub
mov
add
sbb
test
repnz
add
push
pop
mov
jns
cmp
add
mov
push
lret
jno
sahf
mov
in
or
xchg
push
aas
ficompl
mov
mov
add
les
mov
shr
dec
ljmp
add
sub
xchg
addr16
hlt
pop
sbb
fsubs
dec
sti
push
mov
and
xchg
inc
pop
sub
or
pushf
mov
add
shlb
test
xchg
cmovb
dec
jl
nop
scas
and
add
mov
and
in
mov
imul
add
gs
pop
jnp
add
scas
push
call
add
movsb
jge
fcoml
pop
lret
xchg
mov
add
inc
add
and
add
and
test
aam
cld
mov
dec
divl
add
add
mov
dec
and
mov
jne
xchg
xchg
pop
mov
push
and
mov
add
mov
mov
cs
add
xchg
test
ret
sbb
stc
loope
jmp
arpl
add
and
inc
pushf
dec
push
add
fisubs
push
fwait
pop
add
loop
out
int3
pop
lods
add
cmp
jecxz
sbb
or
push
cli
aam
les
add
sub
add
mov
enter
jp
inc
jno
xchg
sbb
sub
data16
add
divb
mov
and
pop
stos
push
jmp
sbb
and
jne
in
or
xlat
or
outsl
nop
lea
add
adc
fidivs
sti
jae
scas
mov
mov
cs
mov
add
push
and
xchg
stos
add
jb
and
jle
add
lods
aad
add
std
mov
ja
and
cmp
pop
sbb
push
es
jo
push
dec
jmp
lods
mov
mulps
mov
add
dec
add
out
lret
inc
ficomps
sti
mov
add
shlb
mov
shll
or
and
push
pop
inc
mov
lods
and
jp
cmc
push
add
xchg
sbb
ja
pop
or
popf
jge
jmp
xor
jle
ja
xchg
add
in
movsb
addb
pop
xchg
push
lcall
xor
jp
mov
cld
sbb
jne
xchg
out
inc
scas
add
test
adc
adc
sub
sub
add
pop
addl
or
add
add
lock
dec
add
pop
rcr
add
pop
mov
add
xchg
lds
or
sbbb
add
dec
sbb
loopne
add
rcl
adc
add
mov
pop
jae
fwait
icebp
add
bound
add
rol
imul
ja
repz
ljmp
push
lea
roll
lret
mov
dec
pusha
out
fidivrs
pop
adc
rcrl
add
inc
mov
add
inc
mov
jo
std
adcb
sub
add
xchg
les
daa
add
clc
jo
inc
pushf
pop
test
add
push
hlt
stos
add
mov
pop
mov
add
cmp
aad
ret
add
aam
fisubrl
inc
xchg
mov
rolb
insb
jl
cmpsb
push
pop
jnp
add
mov
xchg
xchg
aas
mov
xchg
insl
push
inc
mov
pop
inc
add
icebp
mov
aaa
out
jl
imul
mov
mov
push
xchg
cmp
jo
repz
lcall
mov
pop
and
xchg
add
cmpsl
pop
add
jecxz
push
test
add
lret
mov
in
mov
sub
mov
imul
xchg
pop
xor
add
hlt
cs
js
jmp
clc
fistpll
sbb
pop
rep
and
aas
sahf
push
mov
test
dec
add
int
sub
inc
mov
mov
add
test
fcmovb
icebp
dec
inc
add
add
pop
sub
mov
mov
das
mov
scas
dec
push
test
add
pop
mov
push
add
outsl
and
add
scas
jmp
hlt
in
mov
xorb
mov
cmp
adc
push
mov
add
cmp
push
mov
add
and
and
pop
add
jns
fildll
bound
mov
push
xchg
std
stos
add
sbb
addl
mov
push
mov
mov
stos
xchg
repz
add
add
mov
push
add
xchg
cmpsl
mov
mov
mov
imul
inc
pop
mov
xchg
add
dec
fidivrl
jbe
adc
cmp
pop
sbb
xor
enter
pop
outsb
xchg
aaa
or
mov
stos
ficompl
cmp
xchg
ja,pt
mov
xchg
ret
add
sbb
outsb
outsl
mov
add
fisubl
xchg
add
arpl
rolb
mov
sub
out
pop
icebp
insb
rolb
jecxz
stos
push
js
sbbl
mov
sahf
cmp
shlb
out
pop
call
push
adcb
xchg
sub
add
popf
repnz
lea
lret
hlt
pop
addr16
test
mov
and
ret
xlat
pop
mov
jp
sbb
aaa
dec
add
out
loopne
cwtl
hlt
lret
jns
sub
xor
pop
mov
adc
adc
jno
adc
nop
xchg
sub
jns
pop
jns
or
xor
add
mov
xchg
add
jne
mov
add
shl
push
fistps
clc
lret
enter
imul
movsl
mov
cmp
mov
sub
adc
pop
ret
in
dec
xchg
jno
push
rolb
push
or
adc
add
cld
mov
popf
and
push
jl
outsb
rol
addr16
sub
jo
dec
pop
insb
add
lock
inc
and
imul
fwait
sub
pop
mov
xchg
xlat
mov
add
lahf
or
cmp
cmpsl
jae
jne
add
sub
mov
dec
loopne
mov
rcrb
repz
jl
ror
fcomip
mov
mov
xchg
stos
gs
sub
sbb
cwtl
stos
pop
jmp
sbb
call
arpl
cmp
frstor
dec
out
push
lock
xor
out
mov
xor
out
mov
inc
dec
sub
xchg
add
or
dec
jg,pt
cmpb
jno
ljmp
sub
in
adc
mov
cmp
and
adc
add
fildl
repz
sub
xchg
test
dec
loopne
push
lret
cs
imul
mov
cmpsb
pop
jbe
add
jno
jp
and
cld
fmulp
add
add
xor
mov
lret
inc
xor
lock
in
pop
pop
push
rorb
nop
daa
call
push
and
notl
out
cwtl
add
mov
jno
fmulp
sbb
out
sbb
cmp
jo
lea
inc
sbb
ja
xchg
aam
add
and
xchg
cmp
add
repnz
sbb
push
mov
xor
add
push
xchg
lahf
insl
jo
and
pushf
inc
and
pop
addr16
pop
xchg
pusha
test
int
mov
jl
aad
adc
or
cmp
loopne
nop
cmp
xor
inc
clc
rcrb
popa
mov
dec
push
or
mov
push
adcb
adc
add
inc
rclb
fs
add
cmp
arpl
imul
insb
cwtl
jne
sbb
mov
das
add
outsl
pusha
test
sub
stos
jge
out
add
imul
push
mov
push
jne
add
mov
outsl
in
push
push
xchg
arpl
imul
add
std
jbe
cld
xor
fstps
mov
jno
mov
cwtl
dec
push
mov
loope
jp
lock
ret
imul
jbe
fmulp
call
dec
cmpsb
add
xchg
mov
loopne
js
add
subb
jmp
jns
sub
adc
ds
mov
ljmp
push
sbbb
xor
mov
inc
add
lcall
aas
pop
lcall
dec
mov
cld
les
jno
cmp
mov
mov
sub
add
enter
or
add
mov
add
pop
cltd
mov
outsl
shl
jno
add
es
flds
lods
fldt
xchg
cmp
mov
lea
dec
mov
ret
inc
and
stc
dec
mov
and
rcrb
and
inc
repnz
push
cmp
dec
pop
stos
jl
roll
pop
ror
mov
mov
sbbl
leave
stc
aad
imul
ljmp
cmpl
aas
fwait
dec
adc
or
dec
mov
xchg
add
repnz
lcall
mov
cwtl
push
add
psrad
sub
outsb
jg
dec
add
add
ret
rclb
mov
out
sub
arpl
insb
add
adc
mov
inc
and
cmp
repnz
pushf
or
lds
add
enter
or
pop
lods
mov
addr16
or
inc
shl
sbb
sahf
add
rcpps
push
sbb
add
xchg
test
les
push
mov
fiadds
add
lret
jg
sbb
mov
sar
sub
test
sub
stos
mov
and
xor
cmpl
out
cs
icebp
mov
pop
adc
test
insb
cmp
shlb
jmp
push
gs
mov
mov
dec
jo
sub
faddl
fisubrs
out
stos
mov
jle
xor
test
je
xchg
add
icebp
adc
in
cmc
add
bound
repnz
mov
dec
pop
hlt
scas
xlat
test
adc
clc
in
jmp
cwtl
pop
mov
dec
add
dec
jge
and
push
jecxz
lret
nop
add
inc
fisubs
mov
lahf
aad
int
xbegin
add
xchg
lcall
and
dec
pop
or
add
sbb
addb
aaa
mov
mov
pop
add
test
push
mov
jecxz
add
daa
movsb
sbb
fwait
add
or
out
xor
loop
or
sub
or
dec
cmpl
xchg
lcall
es
inc
xor
scas
adc
addr16
xor
insl
add
inc
or
sub
inc
pop
cmp
call
inc
fnstcw
std
test
mov
sub
sbb
in
data16
cwtl
or
mov
or
add
idivl
mulb
pop
mov
sub
icebp
jg
out
jb
add
clc
cmpsb
add
jmp
jne
pusha
out
inc
nop
stos
add
cmp
call
mov
cwtl
jle
sbb
dec
testl
dec
aas
sbb
lods
pop
inc
dec
add
add
je
cmpl
mov
test
in
cli
xchg
lret
in
es
pop
lea
js
data16
mov
aad
int
popa
mov
test
jo
add
add
push
fisubs
mov
sbbb
mov
jg
mov
addb
jbe
je
add
fsubrl
mov
sbb
jbe
dec
std
clc
pop
add
in
shrb
add
daa
jo
pop
cld
stc
add
into
mov
push
or
das
or
shll
sbb
popa
sub
movsb
sbb
or
cli
or
cld
clc
sub
arpl
mov
push
ja
jg
add
xor
lods
add
pushf
mov
xchg
pop
cmp
rclb
jmp
icebp
sahf
jmp
ja
dec
adcb
sbb
inc
add
or
loope
jo
int
in
jge
xorb
test
or
xlat
adc
xchg
add
cmp
repz
dec
or
cli
add
iret
sbb
xchg
dec
lret
push
call
cmp
movsl
repnz
inc
lahf
into
mov
push
insl
add
inc
imul
arpl
mov
mov
iret
xor
add
dec
movb
jge
clc
cmp
test
jnp
push
sbb
add
mov
sahf
xor
fidivrs
jbe
cmp
sbb
pop
fimull
inc
inc
addr16
pop
add
lahf
adc
std
fwait
mov
pop
xchg
aas
enter
popf
push
cmp
les
pop
fbstp
mov
push
fstps
add
push
add
inc
movsb
incb
pop
mov
cmpb
outsl
add
xor
enter
pop
cmp
arpl
icebp
ret
orb
pop
lret
add
lock
loopne
out
js
mov
leave
cmp
mov
call
inc
js
jbe
dec
incl
and
out
test
cmc
xchg
push
cmp
subb
adc
dec
sbb
xchg
dec
sub
ja
imul
mov
push
inc
push
shlb
add
cmpsb
std
sbb
enter
push
sbb
mov
lea
into
fistps
xlat
jge
outsb
cwtl
inc
ds
testl
inc
add
inc
mov
popw
loope
jmp
rcl
jle
sub
repz
xor
add
dec
lcall
inc
inc
insb
cmpsb
mov
aad
add
jo
jbe
add
mov
mov
mov
add
in
mov
add
jb
mov
mov
add
fists
mov
test
call
adc
fsubs
or
loope
add
cs
ret
mov
xorb
scas
mov
aam
add
mov
push
outsl
pop
add
dec
enter
xchg
sarl
push
mov
hlt
pop
push
push
sub
add
or
push
add
add
mov
fnsave
add
fimuls
sub
int3
jnp
pushf
pop
dec
icebp
mov
test
sub
aam
bound
leave
cmpsl
scas
adc
mov
add
push
pop
jg
movsb
shlb
lret
pop
enter
faddl
loopne
push
fdivs
aas
add
push
lret
pop
in
scas
ret
test
lcall
mov
xchg
and
ret
sbb
popf
pop
pop
rcll
pop
pop
sbb
cmpsl
adc
stos
insl
push
outsl
xchg
jg
int3
movsb
fcmovb
add
mov
mov
repnz
out
mov
pop
or
movsl
loope
mov
inc
inc
inc
aas
les
fistl
inc
push
inc
js
add
add
add
call
icebp
jmp
mov
add
stos
sub
or
push
inc
dec
add
push
jle
sub
jae
mov
cwtl
lds
xlat
sub
cmp
iret
add
mov
sub
and
jp
pop
fs
adc
jb
mov
shr
add
mov
dec
add
mov
mov
loopne
nop
pusha
cli
int3
pop
dec
jns
xlat
mov
out
xrelease
mov
pop
stc
add
add
lahf
ds
imul
dec
add
movsb
repnz
lcall
xchg
cld
inc
aad
add
sbb
xor
or
std
push
xchg
mul
fadds
or
xchg
dec
add
pop
jmp
pop
ja
mov
xor
add
orl
sbb
fmul
add
pop
imul
popa
and
dec
cmc
add
orb
add
ret
sti
scas
pop
in
mov
das
sbb
bound
pop
inc
out
jo
mov
add
sub
add
cmpsl
push
and
add
mov
lds
aam
and
fistpl
cmpsb
cmp
cmp
mov
dec
mov
sbb
pop
jae
dec
push
adc
in
jne
xor
cmc
cmp
mov
adc
fwait
aam
jp
add
popa
add
js
movb
inc
imul
hlt
mov
add
test
lahf
sub
add
testb
mov
outsb
pop
mov
jp
pushf
test
sbb
ret
and
lret
and
add
dec
mov
dec
add
push
or
cld
push
mov
mov
cmpb
dec
jmp
xchg
mov
push
addl
add
insl
frstor
lret
and
cmc
loopne
xchg
fadds
popa
imul
mov
add
into
lea
cmp
add
psubusw
mov
add
sbb
int
jbe
pusha
movsb
cmp
add
jg
ja
arpl
std
shl
sbb
daa
out
test
mov
test
pop
js
add
loop
mov
int
lahf
dec
call
dec
add
lock
dec
jns
mov
push
sbb
add
testl
mov
sbb
mov
sbb
jg
rcl
jmp
or
cltd
es
add
hlt
stos
fcmove
out
dec
mov
rorl
lock
pop
lret
fadd
popf
add
sbb
and
jmp
mov
push
mov
xor
dec
out
loopne
push
add
sbb
insl
jle
sbb
and
les
cmpl
test
test
in
lods
inc
std
insl
lods
pushf
in
in
add
sbb
shll
popf
xchg
or
ret
enter
iret
daa
sub
push
popa
cmp
add
fistl
mov
lcall
imul
call
arpl
js
push
push
outsb
cmp
gs
movsb
mov
cmp
add
and
add
or
jg
insb
sub
dec
lret
or
mov
lock
subb
mov
ret
push
sbb
jge
std
and
flds
lahf
xor
stc
inc
adc
out
adc
mov
xor
shlb
fistpl
xchg
sub
and
or
imul
cmp
incb
ret
out
insb
repnz
push
ss
das
add
push
pusha
shlb
pop
popf
and
xor
sub
cs
in
paddd
lock
js
xor
xor
call
push
mov
add
fyl2x
call
add
out
cltd
xlat
adcb
pop
nop
rolb
push
flds
xor
mov
pop
xor
nop
inc
and
mov
repnz
push
add
fwait
inc
add
dec
adc
mov
std
popa
movsl
add
addr16
push
xchg
mov
mov
dec
into
push
add
scas
pop
pusha
in
mov
cmp
pop
add
loopne
ljmp
xor
inc
fcomps
fucomi
sbbb
mov
sysret
mov
idivl
pop
cwtl
cli
js
or
mov
add
ret
add
sub
testl
and
andl
mov
mov
icebp
mov
int
cwtl
clc
mov
es
repnz
mov
add
nop
inc
jge
ror
cltd
lock
fs
sub
xchg
fs
fistpll
add
sbb
sub
xlat
cwtl
pop
mov
fildll
add
ss
xchg
and
scas
pop
dec
inc
push
aad
lock
or
jo
or
cmp
stos
andb
push
and
scas
add
cmc
gs
aam
cmpl
cmp
fiadds
mov
mov
outsb
outsl
out
hlt
imul
add
repnz
xchg
jne
push
dec
add
sub
add
xor
das
add
mov
daa
adc
push
xchg
and
outsb
push
in
xchg
add
ljmp
xor
out
jecxz
mov
or
icebp
mov
dec
pushf
repnz
ror
sbb
jl
dec
stc
je
orb
xchg
ds
test
inc
inc
add
loopne
dec
add
adc
mov
sub
pop
jne
das
sbb
scas
push
in
pop
les
in
add
jb
and
fcoms
pop
insb
sub
mov
rcrl
rorb
adc
add
cmp
adc
sbb
adc
adc
sbb
loopne
push
sbb
test
outsb
sbb
add
cmp
shlb
mov
xor
xchg
out
xchg
mov
je
mov
pushf
dec
cmpsl
iret
nop
ret
jle
hlt
push
ja
adc
xchg
add
rcll
dec
lea
sub
jg
adc
scas
add
test
dec
mov
and
add
repnz
xchg
xchg
push
out
arpl
ret
and
mov
jl
mov
inc
es
loopne
xchg
out
add
xor
in
je
rcl
dec
shrl
mov
pushf
push
sbb
imul
jmp
jns
adc
mov
xor
adc
popa
clc
jae
jmp
jge
inc
enter
pop
stc
ljmp
xor
pop
subb
mov
mov
and
and
add
xchg
mov
add
sahf
out
inc
push
lock
test
out
adc
lret
inc
loopne
ret
add
jne
or
xchg
test
outsl
or
and
fs
in
xchg
add
add
mov
mov
and
cmp
scas
mov
pushf
adc
add
or
add
mov
scas
arpl
ret
mov
or
lahf
scas
xchg
sub
mov
xor
cmpsb
shrb
ds
clc
pop
rolb
add
je
sbb
or
adc
divb
fisubrl
mov
inc
or
add
xor
js
push
sbb
repz
jb
lods
adc
popa
stc
std
add
push
clc
cmp
in
mov
sbb
or
jl
cmp
fisttpl
push
cmp
or
mov
add
xor
adc
pop
mov
popa
add
insl
es
imul
jns
shlb
popa
add
popf
sti
xor
mov
add
daa
mov
les
andb
int3
add
cmpb
outsb
cmpsb
xor
popf
add
cwtl
dec
es
or
pop
jnp
adc
shll
movsb
out
ret
add
xor
decb
mov
cmp
add
sub
orl
subl
mov
sub
sub
pop
mov
gs
in
add
sub
inc
and
and
adc
mov
and
inc
xor
sub
adcb
mov
xor
cmc
mov
sub
mov
inc
push
fwait
sub
pop
repnz
addr16
xor
add
sbb
sbb
fimull
addl
or
cmp
sbb
jnp
add
fimull
cmpsl
ffree
inc
push
push
mov
fists
cwtl
cli
clc
mov
mov
or
movsl
pushf
add
xchg
addr16
add
cmp
inc
rorb
sbb
mov
inc
adc
sub
pusha
in
outsl
or
cltd
xchg
pop
mov
sbb
xchg
shll
add
rcrl
repz
mov
add
int
cmp
mov
rcrb
adc
or
xchg
fnsave
cltd
nop
mov
pop
rclb
mov
push
push
in
iret
inc
cmovns
out
and
enter
add
mov
mov
frstor
xor
lods
nop
nop
jo
scas
cld
dec
jnp
jge
add
outsl
lret
xchg
cmp
xorb
out
add
jnp
pop
pop
sbb
dec
mov
inc
dec
flds
sbb
ss
movups
jbe
cmp
ljmp
jp
out
pop
insb
push
shrl
out
add
lsl
jecxz
add
and
cltd
rcrb
add
cmpb
sbb
push
enter
dec
xor
jmp
pop
cmp
insl
pop
imul
pop
push
or
mov
xchg
ss
xchg
pop
cld
jmp
nop
add
mov
incb
jo
and
inc
es
clc
sub
fucomi
out
mov
sbb
mov
cld
and
sub
aad
sarb
xchg
fwait
pop
cltd
loopne
scas
add
cmp
pop
mov
mov
pop
mov
cmp
cmc
insb
cld
dec
or
or
testb
mov
add
add
push
testl
push
in
adc
inc
inc
mov
stos
sub
add
cmpsl
test
add
dec
fdecstp
fs
cmp
xor
addb
inc
pop
lds
adc
test
pop
roll
push
stos
pop
xchg
fcomip
rcrb
cmp
cld
pop
mov
mov
add
sbb
push
mov
test
sti
adc
movsl
lahf
andl
in
add
jns
push
inc
mov
aas
pop
test
in
add
lret
push
sbb
aad
xor
loope
mov
lock
aam
leave
add
dec
cmp
shrl
xor
fs
xor
lea
mov
ret
add
fcmovnu
xchg
pop
adc
loop
mov
sbb
lods
add
pop
adcl
adc
or
cmpsb
add
sbb
lods
dec
inc
jl
dec
mov
jae
sti
shrl
add
mov
add
pop
test
adc
mov
cmpl
fnstsw
stos
dec
xchg
push
ret
insb
xchg
mov
add
fsubs
jns
add
dec
fsubl
jne
sub
xor
ds
mov
xchg
lahf
mov
movsb
sub
and
and
add
inc
xor
or
jp
out
jg
das
cmpsb
pop
jno
sbb
cmc
ja
mov
scas
pop
mov
mov
pop
imul
or
adcb
orb
cmp
mov
mov
dec
xchg
mov
xchg
add
iret
nop
aam
jmp
inc
push
and
out
push
lahf
add
mov
xor
jmp
jno
jge
flds
add
popa
jl
cmpsb
dec
je
xor
pop
cli
lret
push
out
push
xor
hlt
pusha
mov
push
push
shrl
loop
aas
xor
roll
je
ja
add
lods
or
test
nop
sub
xchg
ja
or
mov
add
xchg
and
push
cmp
cmp
add
int3
push
pop
test
stos
inc
mov
add
xchg
not
js
push
jno
xchg
push
jns
pop
out
xor
mov
add
mov
test
shlb
mov
jno
mov
ds
mov
add
jp
imul
sti
call
pop
add
and
pop
add
out
aas
mov
dec
hlt
or
pop
sub
fiadds
insl
xadd
sub
fcoml
fldl
sbb
push
sti
and
sahf
add
xchg
in
pop
xchg
jnp
leave
rol
mov
sbb
add
xor
test
add
pushf
xchg
inc
dec
mov
pop
or
lods
jl
jle
mov
inc
imul
sbbl
or
push
mov
add
inc
addr16
add
mov
rcrb
shrl
testb
and
mov
xor
and
push
jge
push
fnstcw
inc
jnp
fiaddl
fbstp
addb
js
dec
add
shll
mov
test
mov
int3
add
movsl
cmpsb
push
add
add
iret
or
add
dec
test
loopne
sarl
add
nop
adc
sbb
repz
popa
fmuls
and
daa
fldcw
gs
xor
xchg
sbb
pop
add
ret
pop
rorl
add
enter
xor
xor
loopne
jmp
addr16
add
jecxz
popf
xor
pop
hlt
push
jmp
leave
add
push
or
push
mov
dec
sub
add
cmp
lods
fadds
lcall
or
movsl
movaps
les
and
jne
add
sub
cmp
adc
stos
inc
xor
aas
js
add
ret
imull
inc
loopne
out
jnp
icebp
repnz
jp
leave
dec
out
sub
lds
xchg
add
rorl
insb
ja
rorl
pop
insl
loopne
adc
sub
out
andb
jg
add
mov
ret
pop
mov
and
and
add
mov
xor
add
sbb
lods
lret
int3
push
mov
add
pop
cmp
sbb
xor
dec
add
repnz
mov
adc
pop
lret
push
add
pop
or
adc
repnz
out
movsb
mov
mov
add
in
mov
out
cmp
add
cmp
movsb
outsl
pop
inc
nop
cltd
xchg
adc
add
adc
in
xor
jb
add
stos
repz
rcrl
jo
ret
add
imul
mov
pop
or
pop
inc
sahf
adc
sbb
sarb
push
sbb
stc
pop
mov
mov
push
and
add
lea
addl
push
stos
jbe
movsb
pop
xor
shlb
inc
mov
xchg
push
int
push
inc
and
dec
movsb
stos
add
add
call
push
addr16
daa
scas
leave
lods
mov
in
add
cli
pop
push
dec
mov
call
jecxz
add
pop
fwait
insl
mov
outsl
dec
arpl
cmp
jbe
or
pop
mov
pop
aad
dec
dec
add
test
add
aad
or
sbb
insl
js
cmp
loop
cmp
xchg
add
adc
and
rcrb
mov
scas
add
adc
fcomps
mov
mov
pop
and
out
in
xor
add
test
or
lods
add
dec
hlt
cmp
mov
jo
negl
bts
andb
inc
setbe
bound
add
xchg
scas
ds
sahf
in
cld
sbbb
hlt
aas
and
movsb
aas
dec
mov
pop
ds
rcrb
add
cs
int
cld
btr
jg
mov
jnp
pop
aam
movsl
xorl
movsb
add
push
mov
subb
fmuls
lret
lea
movsb
or
push
test
jo
xchg
or
jb
mov
dec
add
add
aaa
aad
push
std
cmpsl
cmp
xchg
dec
inc
jae
lods
add
mov
aad
adc
aam
add
rcrl
xor
jl
test
pop
daa
mov
sub
ljmp
dec
andl
jl
cmp
sub
cs
sbb
in
testb
mov
inc
adc
add
rorl
clc
negl
ret
sbb
int3
aas
clc
and
mov
sti
test
std
jge
insl
xchg
xchg
mov
mov
add
mov
add
lcall
add
movaps
add
push
movsb
or
cmp
mov
sti
lahf
or
rcr
inc
ss
add
add
and
out
insb
or
inc
aas
or
add
lods
mov
cltd
cld
test
std
call
jbe
cmpsl
xchg
and
add
push
das
stos
mov
cwtl
cmp
sbb
push
xchg
add
je
shlb
sahf
insl
fadds
std
add
enter
cld
add
push
dec
add
aas
push
xchg
add
xor
push
les
aad
nop
popa
cmp
sub
repz
push
pop
cld
and
pop
and
mov
mov
faddl
iret
aam
xlat
jge
outsl
jo
mov
add
mov
cwtl
and
add
push
and
jle
jge
pop
mov
push
in
jno
or
xchg
jns
lock
add
adc
or
clc
fldt
jae
inc
int3
mov
jno
lock
xchg
jl
mov
scas
mov
repnz
repnz
nop
pop
push
leave
repz
add
int3
cmpsb
sti
ret
in
adc
dec
aad
gs
jo,pn
inc
ss
sar
add
sbb
sti
push
popf
loop
mov
fsubrp
add
add
pop
bound
fidivs
add
test
pop
push
mov
and
add
or
bound
fdivrl
jno
pop
inc
inc
divb
jmp
jbe
jb
in
push
movsb
add
mov
mov
add
xor
outsl
jge
adcb
movsl
push
scas
push
fisubrl
jl
mov
movl
xlat
pop
pop
popa
add
xor
add
xchg
inc
add
add
ss
inc
jns
sub
pushf
pop
pop
jmp
push
aad
or
fdivr
ss
and
add
rolb
jecxz
sub
add
pushf
xchg
mov
mov
push
rclb
popf
xchg
push
xchg
mov
xor
lcall
mov
into
pop
fadds
inc
adcb
add
xchg
jge
lret
cwtl
divb
sti
inc
push
or
jmp
mov
sbb
pop
pop
inc
ja
push
adc
add
inc
mov
scas
add
or
mov
add
mov
lods
and
insl
cli
jmp
sbb
and
mov
or
push
or
nop
int3
test
mov
push
dec
clc
xchg
repnz
rclb
jnp
pmulhw
fstpl
aam
inc
loop
jae
add
cmp
pop
push
std
flds
cmpsb
inc
adc
arpl
cli
push
sub
mov
jo
into
idivb
push
dec
cmpl
xor
fwait
mov
out
adc
xchg
and
xchg
test
mov
push
mov
jmp
push
cltd
loop
xor
test
add
ror
popf
les
js
sub
rcrb
aaa
pop
nop
add
mov
lods
add
fcmovnb
jl
mov
jne
jno
xor
call
inc
je
cmp
xchg
and
cmpsl
test
pop
mov
inc
arpl
outsb
sub
mov
subl
push
insl
inc
icebp
cli
add
push
mov
fcomps
mov
mov
add
cmpsb
gs
cmp
add
cli
pop
push
mov
outsl
in
pop
adc
add
sub
sbb
sbb
icebp
or
pop
xchg
sbb
adc
imul
jp
idivl
cltd
pop
rep
jecxz
inc
loopne
lods
jb
nop
mov
mov
incb
mov
mov
add
andb
lock
jg
xchg
fsubp
push
cltd
or
mov
bound
xor
add
pop
ljmp
cwtl
inc
das
jne
adc
aas
mov
sub
stos
add
mov
sub
and
movsb
push
nop
cmpb
loopne
les
test
mov
popa
int3
xchg
dec
mov
adc
pop
push
inc
mov
icebp
lods
andb
xchg
add
jmp
int3
add
rcrb
mov
or
sbb
sub
and
stos
test
lret
call
mov
daa
push
mov
lcall
mov
movsb
rolb
adc
mov
lea
add
test
adc
xchg
add
pop
add
lret
pushf
fistpl
xchg
jne
loopne
fiadds
cmp
leave
enter
add
movsl
roll
cmp
loop
pop
dec
or
xor
mov
add
imul
xorb
inc
lods
mov
push
in
rolb
in
insl
jne
adc
in
dec
pop
xor
and
xchg
rcrl
inc
aam
mov
push
push
jmp
adc
xchg
jg
adc
xlat
adc
pop
hlt
add
cmp
sbb
sub
mov
add
mulb
negl
mov
pop
adcb
mov
cld
ror
mov
or
add
fisttps
pop
add
arpl
dec
testl
xor
cmp
js
iret
ds
lods
add
push
add
insb
mov
add
icebp
lock
mov
adc
mov
push
nop
sub
insl
add
sbb
stc
outsl
xlat
popf
rolb
movsl
mov
rcl
pop
gs
dec
aas
fadd
xchg
dec
cwtl
mov
ljmp
dec
roll
xchg
add
xchg
lahf
scas
mov
je
bound
adc
add
fnstsw
loopne
sti
cmpsl
lret
clc
in
jne
loop
rolb
dec
mov
call
adc
les
or
movsl
push
mov
out
add
mov
loope
or
enter
add
insl
jmp
imul
jecxz
iret
pop
add
add
xchg
or
jmp
mov
add
das
les
dec
adc
cmp
scas
mov
dec
add
inc
pop
inc
sbb
mov
iret
addl
aas
es
and
sbb
cs
add
mov
lret
xchg
fwait
pop
imul
fs
inc
std
fldl
hlt
push
ret
pushf
lahf
lods
xor
xchg
add
loopne
lret
cld
push
sti
in
add
sub
ljmp
mov
mov
jne
jecxz
push
insb
dec
push
push
lea
cmpl
add
jns
cmc
xorl
punpcklwd
dec
and
sbb
std
out
rolb
jne
bound
and
aad
jno
fistps
pop
pop
lea
xchg
lds
adc
mov
sbb
or
push
mov
lods
inc
sub
jno
add
and
into
stc
out
xor
cmp
mov
shr
pop
pop
sub
sar
lods
push
jge
add
mov
pop
out
int
add
jecxz
cmpb
addb
mov
adcl
clc
js
in
add
xor
mov
pop
pop
out
in
lock
hlt
add
out
mov
nop
push
adc
mov
push
mov
push
cmpsl
cltd
cmp
sub
xor
movsl
lret
jge
add
push
es
inc
xchg
pop
xor
xor
add
out
lock
js
ret
add
movsb
xlat
dec
jle
jno
je
add
mov
lods
add
jns
jae
lock
xchg
jge
xor
outsl
addl
add
mov
lock
mov
xchg
mov
inc
add
repnz
sub
ret
testl
inc
add
popf
and
inc
cmc
push
daa
jmp
add
pop
pop
pop
add
jecxz
inc
mov
fiaddl
rcrb
or
fsts
dec
test
jb
les
inc
add
out
mov
dec
pop
xchg
add
loopne
xor
add
aam
lret
cs
fdivs
xor
rcll
addl
add
pop
add
xchg
cmp
fimull
xor
pusha
popf
cld
lock
jl
orl
mov
jg
inc
or
mov
push
scas
mov
add
xor
inc
aad
cld
jo
jo
adc
and
aam
popa
gs
xor
loope
xor
push
xor
lods
das
fadds
mov
xchg
icebp
scas
sbb
sahf
dec
popf
cld
rclb
add
jp
jg
repz
or
adc
and
test
cwtl
sbb
addl
and
cmp
add
xor
push
arpl
dec
sub
add
out
imulb
scas
or
and
push
add
aam
loope
iret
and
sbb
mov
cmpsb
add
aad
int3
xchg
mov
add
and
ja
dec
andb
push
xchg
pop
pushf
and
jo
inc
sub
mov
xor
scas
mov
add
xor
add
lcall
jae
js
dec
pop
fiadds
repnz
sbb
mov
add
jns
inc
or
out
sub
add
add
les
ljmp
mov
adc
and
shl
popf
mov
xchg
mov
outsb
add
pop
sbb
sarb
into
add
sarb
dec
dec
cmp
mov
push
xchg
push
adcl
lret
add
xchg
mov
imul
add
stc
mov
sub
cmp
in
and
lahf
cwtl
fisttpl
pop
in
aad
add
cs
and
add
pop
xchg
fcompl
jo
add
sub
adc
in
add
jp
negl
add
mov
or
push
jnp
add
jl
std
jge
clc
aas
or
push
addl
rolb
mov
and
pop
xor
imul
mov
nop
jb
inc
out
adc
lea
jg
lods
mov
push
shrl
roll
fisubrl
push
inc
add
xor
and
mov
mov
scas
add
jne
add
mov
pushf
fisubrl
jecxz
and
cmp
adc
or
inc
add
pop
push
pusha
jle
or
mov
imul
stos
cmp
and
pop
add
pop
add
pop
sbb
xchg
or
jmp
imul
repnz
add
pop
add
push
and
add
dec
in
out
shld
loop
clc
pushf
inc
add
pop
pop
xor
test
lods
sbb
inc
arpl
cld
jg
push
adc
setns
addb
inc
cmpl
cmpsl
xor
insb
mov
push
mov
sub
rolb
and
stos
fisubs
loopne
mov
and
orl
mov
jecxz
jo
push
cmp
and
fwait
hlt
pop
jae
sbb
mov
lock
push
jb
pop
fisubl
je
mov
jge
orb
and
jecxz
negb
mov
jae
jle
sbb
call
push
dec
repz
add
out
pop
add
fcmovnb
out
fsubs
lahf
pusha
xchg
aam
enter
push
mov
sti
sbb
xchg
call
in
sbb
inc
pop
xor
mov
xorb
outsb
loope
xchg
xor
jae
lea
movzbl
daa
jg
jo
add
lcall
ljmp
in
add
inc
cmp
add
addl
mov
stos
addr16
add
add
jp
add
fstp
and
jo
inc
call
mov
in
lock
add
adc
push
mov
shl
pop
add
xor
add
mov
sbbl
add
xchg
iret
imul
adc
add
cmp
addb
aas
sti
add
mov
out
ljmp
ds
mov
ror
addl
jle
or
scas
mov
ret
lock
xor
add
mov
icebp
push
imul
inc
loopne
inc
cmpsl
outsb
add
les
xlat
add
jne
ffree
clc
gs
add
cmpsb
insl
fcoml
scas
jo
add
mov
scas
sbb
mov
loope
and
inc
add
call
mov
jae
dec
ja
jo
xor
fsts
pop
pop
add
jno
std
dec
jo
add
or
push
les
pop
xchg
sub
push
and
loopne
or
mov
or
mov
lods
add
add
nop
mov
pop
xchg
mov
push
pop
add
data16
xchg
mov
jmp
and
aam
mov
movb
repz
or
stos
mov
inc
cld
xchg
add
and
cwtl
sub
adc
lds
mov
dec
xchg
and
psubsw
mov
mov
or
test
jns
jnp
add
jb
fnstsw
sbb
sbb
nop
dec
lods
add
ljmp
mov
nop
in
jns
je
push
or
mov
adcb
sti
ja
pop
mov
xchg
shll
mov
cmp
fsub
into
jp
push
shrb
insb
inc
mov
jno
add
jb
aam
mov
out
xchg
movsl
xor
test
xor
mov
pop
dec
cmp
fdivrs
sub
movsl
popl
loopne
push
sti
and
add
aas
repz
jnp
and
rcrl
xchg
cmp
popf
add
ret
cld
mov
cmp
xlat
subb
sub
sarb
add
out
dec
mov
int3
jns
sub
out
rorl
fiadds
xchg
and
add
aaa
cmp
adc
cmpsb
pop
inc
clc
dec
and
pop
xor
sbb
dec
add
loopne
lods
add
mov
fadds
mov
loope
fmul
xchg
xlat
adc
sbb
or
pushf
negb
add
arpl
xor
push
jne
xchg
xor
push
sbb
cmp
xchg
add
dec
mov
test
adc
xor
add
inc
dec
xor
mov
dec
nop
aas
push
jno
fdivl
sbb
testb
xchg
addr16
jmp
mov
movl
add
jmp
xor
add
cltd
jecxz
fwait
addr16
es
sbb
add
xor
sti
adc
xchg
push
fsubrp
jnp
add
bound
loop
cmpl
dec
dec
in
jne
sub
sbb
scas
lret
inc
stos
ss
lods
mov
movsl
subb
pop
inc
or
fwait
cmp
movsb
je
pop
mov
add
jle
xor
mov
outsl
movsl
mov
orb
pop
cmp
jge
pop
xor
add
in
jl
mov
adc
push
and
out
xor
adc
inc
movsb
fisttpll
sbb
jle
add
jb
cmc
loop
movsb
mov
rclb
cmove
sub
subb
xchg
add
sbb
inc
in
shl
add
push
pop
mov
jae
jle
pop
ss
or
ret
add
cs
xchg
push
pop
and
xchg
or
pop
xchg
insb
mov
jns
jno
mov
test
jle
mov
fs
fisubrl
or
fnstenv
pushf
and
leave
adc
ficompl
add
addr16
xor
out
stos
dec
sti
mov
sbb
pop
adc
call
incl
addr16
xchg
cmp
pop
sbb
mov
rcrb
aam
test
sbb
and
in
sahf
cmp
mov
into
dec
and
adc
das
out
jns
pop
in
add
subb
jp
repz
mov
adc
int3
add
mov
xor
push
mov
pusha
push
movsb
dec
mov
mov
push
push
xchg
leave
mov
popf
mov
pop
mov
fistps
negb
in
or
jge
push
xor
add
lahf
inc
mov
push
add
jl
push
stc
add
out
aam
xorb
cmp
adc
ret
or
lods
mov
jge
add
xchg
xchg
cs
add
inc
mov
add
jle
scas
jmp
lahf
imul
add
push
cmp
push
pop
or
pop
testb
pop
in
shr
cwtl
shlb
mov
and
mov
cmp
xorl
jo
jmp
sub
cmp
fimuls
or
xor
fmuls
in
pop
fs
fdiv
fnsave
cmp
push
mov
xchg
mov
xchg
add
testb
or
aaa
mov
jge
das
xor
push
jnp
add
or
test
inc
rolb
dec
add
or
inc
jl
je
add
pop
jl
or
sbbb
sbbl
adc
repnz
add
pop
mov
add
ja
in
clc
add
pushf
xchg
add
xchg
ss
jl
cmp
imul
add
push
std
shlb
push
push
sbb
add
add
jmp
lret
or
lock
xchg
stc
out
add
push
add
call
pop
mov
js
pop
out
jo
jb
jge
test
mov
fs
in
pop
aam
insl
sbb
movsl
cmp
clc
cmc
shl
lock
repnz
adc
insl
loopne
dec
mov
adc
fstpt
mov
imul
rcrb
adc
and
xchg
cmp
or
inc
lods
add
cmp
pop
sbb
xchg
outsb
cmp
das
sub
aas
add
sub
fstpt
push
pop
push
popf
into
xor
sub
stos
ja
in
push
add
enter
adc
adc
lea
dec
mov
loop
outsl
movsb
add
sbb
fisttpll
jb
mov
shlb
imul
test
mov
add
aad
in
mov
rcrb
ret
xor
jne
iret
cld
addb
add
idivl
pop
shrl
das
outsl
sbb
pop
cmp
pop
mov
cmp
xor
popa
adc
rcrb
xchg
jg
add
arpl
xor
rol
call
mov
icebp
shl
filds
adc
addr16
push
repz
sub
sbb
push
jo
mov
sub
add
mov
mov
add
add
pop
test
lods
xchg
add
jmp
lock
stc
fiaddl
mov
fsubp
add
dec
adc
loope
lahf
roll
mov
cltd
je
or
stos
repz
push
cmp
inc
adcb
adc
sbb
push
inc
add
subl
push
cmp
xchg
xor
xchg
sub
cld
add
xor
mov
jecxz
testl
loopne
xlat
cmp
not
orb
push
add
sbb
add
or
mov
repnz
pop
xlat
add
in
mov
pusha
scas
add
js
ret
inc
mov
sbb
sahf
mov
push
lret
inc
fwait
test
pop
rorb
dec
inc
loopne
pusha
mov
or
ss
add
adc
sbb
pop
das
sbb
xchg
add
xorb
out
leave
jno
add
mull
and
scas
and
push
pop
jmp
incb
gs
outsb
ret
fldlg2
sbb
popf
jecxz
jo
repnz
inc
ds
movsb
dec
pop
sbb
dec
dec
adc
fists
push
add
cltd
outsl
out
dec
pop
insb
mov
mov
add
enter
sbb
adc
das
je
ljmp
mov
scas
jmp
add
mov
jbe
add
inc
mov
or
adc
dec
int
negb
cmp
adc
add
sub
in
xchg
sahf
imul
daa
orps
add
pop
sub
xchg
xor
mov
adc
sbb
xor
ror
dec
add
fwait
test
popa
clc
cmpsb
xchg
add
inc
lcall
loop
dec
addb
test
incb
jp
into
dec
xchg
loopne
mov
in
fwait
inc
sbb
lods
mov
sub
cld
ja
add
ret
daa
and
fwait
jns
movsb
std
es
xor
mov
xor
stc
pop
jo
sbb
repz
or
incb
xchg
add
fldl
dec
loope
add
imulb
adc
std
iret
add
lea
push
inc
fsub
popf
jnp
out
xchg
add
in
push
mov
add
aas
and
lret
add
std
adc
jne
mov
fistl
push
jmp
sarb
std
outsl
jbe
sahf
jp
push
mov
pop
add
push
mov
filds
mov
imul
cmp
insb
add
enter
inc
test
push
add
xchg
mov
sub
and
jne
xor
mov
jl
mov
test
sub
iret
pop
cli
aam
xchg
pop
lea
adc
hlt
sub
subb
sub
or
out
inc
bound
imul
dec
and
pop
daa
test
push
mov
outsb
xorb
jb
mov
loopne
add
jecxz
add
dec
mov
sub
xchg
pop
add
mov
pop
push
inc
enter
jb
add
xchg
outsl
cmp
nop
aas
mov
cmpsb
ror
js
cltd
mov
mov
cmp
dec
imul
call
ffreep
jae
out
jg
fcompl
cmp
mov
rcll
dec
mov
orb
in
inc
push
test
pop
adc
sbb
lods
add
mov
jge
inc
jo
stc
mov
out
loopne
push
xor
add
in
adc
lods
lcall
mov
xchg
mov
dec
test
xor
xchg
addb
or
xor
ja
ljmp
in
add
fmul
inc
mov
mov
je
jl
rcrb
cli
xor
and
cmc
cmp
xchg
sbb
adc
cwtl
add
mov
jae
or
add
add
dec
sti
pushf
add
shl
push
sub
push
dec
inc
add
test
mov
cmp
inc
push
outsl
jle
das
and
ljmp
insl
jne
sub
pop
out
addl
xor
lock
pop
add
sbb
dec
inc
adc
lock
rcr
dec
cmp
andb
push
add
in
in
cmpsb
add
pop
stos
negl
sbb
dec
jns
mov
add
out
in
pop
insb
add
into
loope
int
movsb
sub
fildl
xor
in
mov
cmpsl
stc
inc
xchg
mov
jecxz
jg
dec
adc
mov
add
das
mov
and
pop
popf
sbb
pop
int3
mov
sti
xchg
lock
fmuls
and
sub
shlb
lret
inc
push
iret
les
or
lods
mov
hlt
dec
clc
sub
add
push
clc
push
aad
or
jno
scas
add
jae
add
dec
jmp
mov
xchg
pop
stos
leave
xor
cmpl
testl
add
sbb
addb
xor
jmp
dec
jmp
add
sahf
ja
scas
xchg
add
sub
cmp
orb
int
jg
add
test
movb
ja
ss
fs
bound
add
pusha
pushf
ret
in
xchg
push
push
sbb
test
repnz
and
movsb
mov
mov
lcall
into
push
dec
cld
pop
add
mov
out
iret
mov
pop
test
fs
jb
add
repnz
aam
sarb
xchg
push
adcb
pushf
stc
leave
pop
xor
int
fstpl
add
sbb
xchg
xor
add
xchg
pusha
in
mov
stos
test
add
push
xchg
hlt
frstor
test
sbb
je
xchg
cwtl
nop
add
lea
cmp
pmulhuw
out
movb
ja
jecxz
mov
push
add
dec
mov
sub
mov
add
sbb
add
xor
sbb
jle
shrb
aaa
or
mov
or
add
or
push
add
dec
in
mov
out
loopne
xchg
iret
pusha
loop
mov
inc
mov
dec
or
xor
add
jno
sbb
sbb
add
xchg
loop
inc
ja
arpl
pusha
dec
mov
dec
xor
in
mov
cmp
add
jl
add
sahf
mov
int
sbb
dec
rcll
popf
jo
add
add
mov
add
pop
lahf
icebp
test
add
cmp
sar
aam
adc
add
cs
rcrl
sub
fmuls
push
repnz
les
xchg
aaa
cmpsb
inc
in
pop
cmp
mov
add
sbb
nop
imul
xchg
add
push
jbe
add
push
loopne
sbb
jl
add
mov
in
push
inc
enter
jl
ja
add
stos
lcall
rcrl
add
xlat
mov
ja
es
add
mov
add
into
aam
vsubps
test
xor
push
clc
cmc
nop
xchg
sub
inc
or
popa
jg
cs
cmp
add
sbb
mov
mov
dec
add
mov
sbb
std
add
je
dec
push
push
sbb
dec
inc
pop
les
sub
or
cmpsb
add
cli
std
add
lods
adc
mov
pushf
push
lahf
add
inc
das
or
shlb
pusha
jp
add
imul
add
or
sahf
add
sti
jle
pop
test
cs
push
and
imul
data16
cltd
cmpsb
or
inc
pop
cwtl
insl
fnstsw
mov
pop
insb
fimuls
sti
hlt
sarb
out
add
test
insl
es
pop
xchg
orb
xor
jo
sbb
cmp
cmpl
jl
jns
inc
mov
add
inc
out
loopne
xorb
in
push
sub
jl
sub
add
dec
push
outsb
sub
shrb
ret
fdivrs
call
and
or
add
dec
add
add
iret
pop
xor
add
cmpsb
in
gs
pop
add
sbb
adc
fistl
jle
add
push
jnp
and
movsb
sub
pop
fiadds
add
fcomps
xchg
pop
outsl
xlat
and
xchg
aad
lods
push
pop
adc
or
das
mov
cvttps2pi
dec
pop
shlb
je
andb
jbe
dec
or
sbb
pop
int
test
in
adc
add
xchg
dec
add
stos
arpl
add
mov
or
pop
add
pop
xchg
push
or
addl
lods
sub
add
leave
jns
inc
dec
add
imul
inc
jno
shll
or
xor
inc
cmp
fistpll
or
sbb
cmp
jno
xor
js
add
shlb
pusha
nop
add
or
pop
fistps
inc
sub
add
adc
push
out
adc
adc
add
stos
imulb
into
cmp
and
pop
dec
cmpsb
popa
fwait
inc
aaa
outsb
in
fucomip
add
fldenv
add
ds
aaa
or
push
sub
sbb
inc
hlt
mov
adc
pop
cli
push
inc
addr16
mov
push
mov
hlt
test
fadds
sbb
add
pop
int
in
add
gs
fildl
aam
test
add
pop
dec
lods
push
jmp
add
and
pop
cwtl
adc
cmp
jae
pop
push
icebp
add
leave
sub
add
movswl
add
ja
dec
pop
mov
xchg
add
mov
lahf
add
pop
jge
xchg
sbbb
add
mov
pop
add
leave
lret
test
add
mov
mov
add
cs
aam
cmpsb
dec
sbb
sti
divb
add
xchg
jnp
sbb
xchg
mov
push
ljmp
jecxz
int3
xchg
scas
mov
lahf
add
dec
xchg
and
in
loope
es
in
movsb
add
xor
repnz
jle
aam
mov
pusha
insl
sub
mov
mov
xchg
adc
or
scas
xchg
loopne
lods
push
mov
lock
sbb
add
xchg
push
test
push
xor
sub
nop
in
aas
dec
add
inc
cmp
mov
pop
nop
add
fstps
int3
ljmp
mov
cli
call
test
rol
mov
inc
rolb
sbb
and
mov
vmread
jge
shlb
rorb
mov
add
jg
mov
or
mov
sbb
add
inc
out
orb
std
xor
push
mov
sub
bound
cwtl
fcoms
xchg
mov
xchg
pop
insl
jns
mov
fistpll
int
add
mov
rcrb
nop
es
and
push
sbb
jp
jns
addr16
lret
push
xor
stos
int
inc
lret
mov
js
shlb
jp
sub
sahf
push
test
rorb
cmp
pusha
add
mov
dec
loope
sub
rcrb
add
add
test
lods
add
sti
stos
sbb
mov
adc
xor
xor
jp
repz
add
sti
push
xchg
nop
stos
add
inc
fwait
mov
pop
enter
dec
pusha
test
xchg
pusha
subl
push
mov
cmp
push
test
roll
lods
mov
mov
add
push
jmp
push
xor
xchg
mov
add
add
push
dec
push
ret
add
jns
fsubl
gs
push
fs
add
jno
cmp
ja
in
inc
loope
push
cwtl
inc
js
push
dec
int3
dec
cmpsl
add
shl
insb
and
sbb
jge
jb,pn
data16
add
mov
push
or
sub
adc
mov
mov
pop
sub
cmp
inc
push
adc
jno
and
cmp
adcb
and
inc
dec
push
inc
mov
jne
adc
adc
inc
cmpsl
xor
test
fadds
fisubrl
pop
pop
xchg
jnp
dec
das
lcall
jg
andl
inc
pop
dec
inc
or
aad
fs
or
cmovb
mov
gs
out
add
sub
xchg
add
sbb
sub
ljmp
cmp
jl
les
fiaddl
cmp
or
kandnw
pop
xchg
insl
in
ds
sub
jne
sub
subps
sti
inc
mov
inc
mov
xchg
sub
dec
mov
in
das
mov
or
mov
add
aam
test
jl
and
pop
xchg
sub
sbb
cmc
mov
xor
je
jge
add
mov
stc
dec
or
orl
mov
xor
and
popf
lock
in
cmp
add
add
fidivrs
inc
test
mov
cltd
jmp
clc
mov
cld
jb
adc
stos
add
pop
loope
or
add
mov
fldl
cmp
addl
push
add
sbb
mov
add
mov
add
sub
pop
cmpsb
imul
testl
xchg
cltd
add
cmpsl
sub
inc
pop
mov
adc
xor
into
or
mov
sub
and
adc
xor
dec
shrl
out
sbb
insb
pop
addl
push
sahf
popf
adc
sub
incl
leave
jmp
nop
cmp
mov
dec
inc
mov
adc
jp
scas
outsb
add
gs
xlat
out
pop
das
inc
push
pushf
ljmp
mov
outsl
clc
xor
shll
sub
repnz
and
fisubl
sbb
int3
add
mov
leave
adc
inc
adc
add
cwtl
push
xchg
jbe
scas
sub
xor
daa
lods
dec
loopne
loope
repnz
adc
jns
push
jnp
inc
add
xor
xchg
call
roll
or
jp
sbb
loopne
sub
xlat
dec
add
gs
data16
jge
sbb
add
rcrl
dec
stos
shll
inc
mov
add
pop
xchg
fsubrl
ljmp
xorb
daa
add
es
adc
bound
mov
jmp
mov
cmp
jo
add
fmuls
cmp
fs
add
cltd
add
dec
cwtl
addb
sbb
mov
ret
sub
add
sbb
inc
call
bnd
cmc
or
leave
cmp
pop
mov
xlat
adc
sldt
fcoms
cmp
sahf
stos
pop
push
lret
xlat
ss
sub
and
add
aad
mov
scas
cmpsl
dec
imul
or
cld
lret
xor
fwait
std
cld
ret
add
jge
insb
mov
and
loop
jg
xor
js
subb
stos
mov
sub
pop
ret
jmp
in
bnd
pop
fstpl
inc
int3
je
xchg
in
mov
leave
fists
xor
inc
add
repz
push
sub
adc
add
jp
xor
fmul
inc
rclb
xchg
aad
and
sub
or
cmp
add
jno
mov
cmp
fwait
xorb
nop
mov
mov
hlt
jg
lcall
jle
cmp
cmp
or
jo
xchg
mov
sbb
pushf
cmovnp
and
or
sub
cld
dec
inc
inc
lret
incl
xchg
xchg
sbb
jmp
push
loope
icebp
shlb
fisubl
add
sub
lret
sqrtps
pusha
jp
add
addb
sahf
sbb
jbe
push
push
cld
add
sbb
xchg
fsts
rcrb
lahf
ljmp
hlt
sti
cmp
push
pop
ss
imul
cmp
lret
cmp
sbbb
push
shl
inc
jmp
mov
fistps
loopne
loope
lock
add
inc
lret
sbb
mov
out
loop
fcomip
stos
mov
add
enter
cmp
push
cs
fdivrl
mov
shlb
mov
sub
les
cmp
xor
mov
gs
cmpsl
test
aaa
sub
and
addb
in
add
mov
jmp
inc
mov
mov
loopne
loopne
add
mov
push
addb
lods
add
push
sub
add
dec
decb
ret
add
inc
inc
hlt
nop
lock
add
test
and
add
push
push
xor
shrb
jg
nop
sahf
cmpsb
xorb
es
add
bound
mov
popf
cmpsb
inc
es
cmc
fisubrl
leave
xorb
jp
pop
or
add
ss
sub
clc
add
push
in
mov
push
testl
inc
stos
popl
inc
lret
xlat
add
push
das
arpl
pusha
mov
jg
inc
xor
roll
movsb
add
xchg
in
sbb
push
pop
jns
or
loopne
aaa
stc
add
mov
add
pop
mov
movsl
popa
jecxz
push
jbe
je
inc
sub
es
or
call
jns
pop
inc
ds
add
fwait
adc
xchg
inc
bound
in
add
cltd
mov
add
dec
ljmp
das
mov
push
loop
adc
pop
je
add
icebp
fcmovnbe
xor
inc
add
dec
or
aad
jae
inc
ljmp
cs
icebp
lret
push
jecxz
addb
js
js
add
or
add
mov
jno
out
add
xchg
inc
jb
pushf
sub
adc
jmp
mov
cmp
rcrl
cltd
cli
inc
mov
mov
xor
inc
and
jge
int3
and
iret
mov
cmp
lock
pop
cmpsl
cmp
fiadds
push
gs
add
and
out
leave
jp
lret
push
repz
das
or
or
orb
mov
adc
outsb
add
jle
fld
mov
mov
or
push
and
or
loope
int3
add
adc
lret
incb
mov
cmp
add
fs
movsb
fdivr
push
loopne
add
push
or
jns
out
or
adc
inc
mov
xor
add
xorb
jo
mov
movsl
add
jl
xorb
add
or
js
sub
jo
add
andl
dec
loop
add
or
cmpsb
sbbl
sub
mov
sub
add
fists
clc
cwtl
add
xchg
es
adc
sbb
dec
lds
sbb
and
mov
mov
push
mov
neg
out
and
and
add
and
icebp
cmp
pop
add
mov
mov
xor
mov
sbb
lods
add
mov
inc
push
add
and
lret
js
and
add
outsl
dec
clc
xlat
dec
shll
add
jl
daa
cmp
inc
cmp
add
ret
je
pop
jl
aas
pop
lahf
out
add
inc
sbb
push
add
std
inc
sbb
cmp
fs
sub
pop
inc
mov
sbb
add
xorl
mov
ret
jecxz
orb
mov
and
cld
pop
and
mov
incl
cmp
in
mov
xchg
sbb
mov
aaa
pop
imul
push
cmp
int3
arpl
sbb
pop
cltd
sbb
andl
fldcw
iret
push
ret
icebp
jo
push
loopne
shlb
fwait
ds
insb
pop
ret
dec
jecxz
jae
push
push
cs
inc
push
xorb
adc
lahf
mov
push
inc
fadds
sbb
add
stos
ret
stc
jmp
je
add
jge
or
testl
fildl
ss
or
dec
inc
ret
dec
int
loopne
mov
add
repnz
sahf
sub
push
das
pusha
xchg
daa
inc
out
popf
mov
or
sbb
in
fs
dec
add
sbb
int
add
push
nop
cmp
cwtl
out
mov
pop
mov
arpl
cltd
test
test
sarb
mov
ss
mov
push
add
adc
inc
mov
cmp
or
mov
fsubr
cmpsl
add
ljmp
fucomip
call
inc
hlt
lds
das
mov
inc
xor
or
sbb
outsl
jl
out
decb
loopne
jle
mov
add
xchg
subb
scas
cmp
push
ret
pop
lock
loopne
arpl
dec
sarb
dec
mov
add
sti
pop
in
inc
test
aas
xchg
nop
mov
cmp
add
add
sub
bound
pop
fmull
xchg
cmp
pop
int
jo
fwait
cli
pop
pop
pop
loope
bound
and
das
push
or
add
out
xchg
or
xchg
inc
lock
dec
cli
sahf
into
add
jmp
rolb
inc
unpckhps
and
sar
cmp
xor
pop
mov
dec
lods
mov
addb
std
fstpt
js
int3
lock
mov
mov
sub
pop
push
shll
rorb
add
dec
inc
jb
sbb
adc
lock
push
xchg
inc
aam
aas
ret
sub
shlb
dec
add
push
orb
aaa
push
jl
faddl
imul
pop
roll
xor
push
paddw
dec
xchg
add
arpl
rorb
xchg
shl
xor
inc
add
loope
push
pop
or
add
jb
xchg
sbb
mov
and
xchg
or
test
incb
ret
jmp
push
mov
add
xorl
sub
mov
inc
mov
jne
adc
popa
scas
or
mov
pushf
cmp
jb
mov
add
xchg
gs
in
nop
popa
jo
adc
aad
adc
add
inc
and
dec
add
push
dec
call
add
push
xor
out
pop
fnstsw
add
xchg
shll
jo
in
shr
bound
fwait
add
outsl
xor
out
adc
add
mov
sbb
mov
push
and
and
add
adc
add
sbb
cld
ljmp
xor
inc
shrb
xchg
push
dec
cmp
mov
xchg
mov
add
jne
lret
or
xor
aam
out
push
mov
xchg
add
mov
sub
add
and
cld
xchg
inc
cmp
adc
filds
sub
lret
loop
add
decb
dec
pusha
and
and
lcall
stc
fldt
data16
and
xor
add
xchg
sub
add
mov
inc
jno
andb
sahf
pop
mulb
lods
add
mov
push
popf
lea
push
pop
je
lahf
dec
mov
cmp
pop
and
add
jnp
aas
add
and
arpl
insb
mov
pop
xor
cmp
test
stos
and
adc
inc
ds
add
mov
idivl
sub
movq
movsb
sbb
adc
arpl
xchg
jae
add
dec
inc
sbb
stc
pop
mov
loop
and
test
and
inc
lret
xlat
fstpt
orb
loopne
add
imul
les
aam
std
bound
mov
outsb
xor
mov
stc
sub
adc
call
push
rcrb
mov
int
push
add
fdivrl
cltd
loope
movsl
or
add
inc
push
xchg
shl
mov
cmp
sub
cmp
push
pop
xchg
mov
inc
inc
lret
or
movsl
les
fwait
rclb
mov
mov
loope
cmp
mov
andl
in
add
cmp
inc
sbb
imul
mov
and
mov
addl
dec
sub
insl
jae
in
fxch
mov
sub
add
jo
adc
jae
add
jo
jmp
dec
jno
ds
arpl
or
xchg
add
and
xchg
hlt
sub
add
test
fs
jp
push
add
mov
pop
add
dec
rcrb
sbb
pop
add
inc
lcall
and
sbb
in
mov
addr16
sub
into
and
add
ja
xchg
movsb
xor
shlb
rolb
test
popa
loopne
lock
jl
inc
jno
cmp
les
out
repz
mov
and
add
sbb
mov
sbb
loopne
outsb
adc
cwtl
cmc
cmpsl
roll
sbb
cs
pop
test
loop
add
pop
pop
test
inc
insl
mov
and
les
lea
or
call
jnp
int3
mov
cld
cwtl
roll
fnstsw
lea
jg
add
jge
add
mov
incb
loop
mov
mov
push
adc
mov
add
popf
test
scas
mov
into
mov
aam
xor
stc
xchg
pop
push
xchg
loope
push
sbbl
je
test
mov
fs
or
and
jb
movsb
add
ficoml
addr16
cmp
unpcklps
cli
xchg
rorb
scas
push
icebp
in
repnz
pusha
rcrb
xor
adc
push
pop
orb
xchg
add
sub
xchg
and
shld
pop
and
addr16
rclb
dec
pop
push
test
xchg
add
in
mov
and
repnz
iret
mov
sub
jecxz
sub
rolb
push
jnp
cwtl
test
adc
add
sbb
add
jge
cltd
int3
ret
dec
xor
ret
into
loope
push
add
icebp
jg
bound
add
fiadds
addl
je
fmuls
mov
lcall
sbb
jbe
dec
cmpsb
mov
mov
dec
idivl
sub
inc
push
mov
or
cmpb
jne
add
jmp
popf
mov
add
adc
in
arpl
roll
add
xor
add
xchg
std
cmp
inc
je
and
fs
inc
nop
mov
cli
bound
mov
push
repnz
pusha
cmp
cmpb
and
xor
sub
add
sbb
adc
dec
or
pop
mov
test
xchg
rorb
xchg
ljmp
adc
je
dec
idivl
std
add
das
imul
sbb
test
jnp
jno
in
pop
mov
add
push
psraw
add
fs
sub
lods
cld
push
sbb
pushf
andl
jnp
inc
bswap
adc
test
in
jl
movsb
mov
das
pushw
aaa
int
insb
xchg
lret
add
or
add
xor
mov
shr
inc
push
adc
add
add
mov
arpl
inc
rclb
sub
test
push
or
xor
or
sbb
sbb
andb
or
pop
gs
shl
mov
lret
mov
add
sti
shlb
or
sbb
add
or
ds
mov
dec
repnz
push
stc
outsb
movl
inc
lcall
push
xor
lahf
mov
mov
test
xchg
jae
inc
lods
mov
add
cmp
add
inc
inc
xor
pop
push
mov
andb
add
add
xchg
add
inc
push
sub
sbb
push
pop
xor
add
insl
rolb
push
or
call
xchg
mov
imul
nop
mov
adc
dec
jl
mov
fs
xchg
lcall
aad
scas
jmp
add
adc
cld
add
and
xchg
pop
cmp
adc
mov
test
mov
push
popf
add
sbb
jne
mov
xlat
incl
movsl
cmp
jo
call
xor
lock
fwait
cmc
mov
cmpsl
xor
pusha
repnz
lea
push
add
test
outsl
xchg
sub
insb
mull
xor
xor
shll
mov
adc
sub
cmp
add
mov
pop
sahf
pop
rclb
inc
inc
dec
push
pusha
inc
inc
push
cmc
clc
js
add
add
int3
ret
jp
fmull
adcb
in
push
jo
add
mov
ss
xchg
sbb
lock
mov
shr
push
dec
arpl
fcomip
lret
aad
or
mov
xchg
mov
mov
mov
jnp
add
aaa
ficomps
adc
xchg
test
hlt
or
inc
xchg
mov
subb
movsb
xchg
add
pop
and
hlt
nop
pop
pop
add
lock
loopne
adc
xchg
jmp
sub
fisubrl
int3
pop
call
dec
cmc
mov
add
leave
add
jnp
pop
lahf
xchg
cltd
js
lds
hlt
fsub
fwait
mov
mov
inc
xchg
sysret
inc
int3
pusha
pop
aam
rorl
cmp
ds
add
cmp
inc
push
and
add
pop
fdivrl
jl
cwtl
loope
data16
stos
sar
xor
mov
ret
mov
push
xor
mov
pusha
lret
xchg
out
into
dec
add
jnp
lcall
adc
js
inc
add
push
xchg
out
cmp
xor
push
sbb
addb
sub
iret
jmp
sbb
pop
push
stos
fdivl
dec
push
int3
mov
add
push
sarb
sbb
pop
repz
xor
pop
add
cwtl
fcomp
std
sbb
stc
pop
or
and
xor
dec
push
mov
or
lcall
std
cmp
inc
call
add
sbb
ret
sub
repnz
mov
ds
loopne
push
cs
push
dec
mov
add
xchg
sub
xor
add
push
cmpsb
mov
insb
cmp
add
aaa
xor
cwtl
out
sarb
jb
mov
pop
mov
xor
jns
push
pushf
aad
dec
add
add
test
push
popf
push
loop
add
add
mov
lret
pop
cmp
out
in
or
jp
add
pop
or
and
add
jae
or
sti
or
jmp
add
aad
stc
scas
mov
sub
mov
lods
adc
fcoml
add
sub
rcrl
lret
rorl
pusha
cmpsl
mov
pusha
enter
and
adc
enter
add
mov
mov
ljmp
add
setbe
or
lods
mov
stos
inc
jae
pop
inc
out
add
dec
fnstsw
add
sub
negl
jg
retw
add
inc
cmpsb
dec
cld
xor
sbb
sbb
push
outsb
xor
sbb
and
add
push
shl
and
out
dec
dec
mov
add
add
stos
or
pop
push
daa
xchg
int3
lock
push
call
out
dec
add
and
add
repz
pop
cmc
into
clc
bound
add
lods
test
jge
adc
std
xor
push
add
push
or
inc
subb
xor
inc
cmpsb
cmp
daa
xor
js
add
hlt
out
mov
or
cmpsb
fbstp
xchg
add
roll
in
cli
add
adc
shl
daa
stos
cmp
add
insl
xchg
mov
mov
test
push
add
lods
ja
pop
lods
into
add
hlt
push
inc
cmp
pop
lods
mov
jg
xor
rclb
lcall
and
pop
aas
xor
sbb
arpl
imul
inc
jnp
add
xor
or
call
dec
mov
and
add
daa
inc
mov
and
mov
ja
add
dec
repz
outsb
ds
leave
imul
mov
dec
loopne
push
mov
add
cmp
pop
jl
inc
push
ret
jns
movsb
or
loopne
adc
into
cs
add
adcl
and
aaa
push
ret
add
loope
cmp
ret
fsubrl
jmp
sub
into
xor
add
push
lods
adc
inc
pusha
testb
pop
test
icebp
dec
jge
push
or
out
stos
call
inc
mov
popa
pop
cmpsb
inc
outsb
les
add
shlb
mov
leave
stc
mov
dec
add
cmp
ss
adc
push
sub
addr16
imul
mov
aaa
enter
mov
and
das
adc
fs
test
hlt
nop
int3
data16
lock
mov
sub
add
in
push
lock
mov
mov
and
andb
out
dec
sbb
lods
fwait
add
add
add
adc
sub
inc
sub
and
popf
mov
rolb
mov
xchg
icebp
and
addb
popf
push
mov
out
inc
mov
adc
cmp
aam
popa
add
fs
arpl
adc
pop
rcr
inc
dec
mov
sti
sarb
les
in
mov
and
movsl
mov
scas
add
push
push
and
cmp
stc
mov
rcl
add
inc
cltd
out
cwtl
cmp
mov
jae
xchg
jb
cmp
mov
lds
pop
ss
jl
cmpsb
sub
call
lods
xor
rorl
xor
pusha
sbb
and
test
mov
add
scas
push
fidivl
rolb
dec
fstpt
je
add
mov
call
in
mov
lods
push
mov
xor
pusha
sub
push
inc
sbb
fistps
xchg
inc
and
pop
fiadds
lret
fsubs
push
hlt
mov
dec
nop
icebp
mov
lret
cmp
stos
mov
add
and
sub
cwtl
pop
add
loopne
mov
outsl
add
add
lea
sbbl
daa
sub
sub
imul
push
ret
jnp
or
lods
popa
cmp
sub
lods
dec
popl
add
shlb
adc
add
mov
cmp
test
pop
int3
rcrb
xor
movsb
push
jle
outsb
add
mov
cs
pop
mov
adc
push
mov
lds
cmpsl
inc
and
fidivs
add
lret
in
pop
sub
or
inc
jecxz
scas
arpl
sbb
or
dec
pop
mov
pop
pushf
sub
mov
jbe
cmp
or
jns
add
and
add
int3
mov
add
imul
or
and
jno
sub
std
lret
leave
and
in
pop
test
cltd
inc
into
cwtl
ljmp
pusha
fimuls
mov
push
jmp
push
outsl
aaa
dec
aad
sbb
xchg
jbe
lea
add
inc
add
sar
mov
ss
mov
xchg
add
jge
out
adc
rcl
sbb
push
orb
xor
inc
je
stos
in
gs
xor
lock
jmp
es
and
adc
add
jnp
hlt
sub
xchg
dec
add
mov
add
int3
movsb
jg
jne
add
lret
mov
fidivrl
or
xchg
cwtl
mov
push
pushf
ss
mov
das
pop
cmp
sub
add
sbb
notb
mov
and
add
push
loopne
loope
aaa
ffree
ret
call
cmp
cs
sub
cli
push
gs
xrelease
jg
int
mov
push
sub
cmp
out
dec
inc
adc
add
xlat
rcll
dec
fiaddl
pop
jnp
sub
adc
add
pusha
std
es
xor
and
mov
mov
outsl
jmp
add
idiv
inc
pop
pop
push
sbb
add
jns
aas
test
xchg
orl
adc
insb
pop
fs
add
pushf
sub
inc
in
adc
fiaddl
dec
scas
popf
xorl
dec
les
out
adc
pop
jb
add
cmp
lods
ret
xchg
xor
sub
mov
pushf
arpl
fstpt
xchg
mov
xchg
push
dec
push
cwtl
mov
xorb
cld
xor
add
pop
ds
lcall
xor
setne
stos
movl
xchg
add
mov
and
sahf
dec
push
cmp
add
fidivl
mov
pop
data16
cltd
inc
mov
cmp
add
ret
test
fistpl
in
scas
sbb
idiv
in
mov
push
int
push
push
add
pop
shrl
push
mov
loopne
dec
add
jecxz
xchg
cmp
aas
repnz
add
shl
jns
inc
add
sub
scas
xchg
mov
jle
mov
mov
cmp
sub
fists
stos
mov
mov
insb
dec
orl
xchg
mov
push
movsl
inc
int3
lcall
test
mov
je
adc
dec
loop
scas
and
mov
sbb
add
enter
nop
mov
stc
rcrb
pmulhuw
xor
cmc
test
cwtl
inc
stc
fmuls
test
roll
cmp
xchg
add
aad
dec
pop
imul
jno
inc
int
inc
mov
and
add
pop
jo
add
dec
mov
js,pn
adc
and
std
cli
repnz
shrl
psrad
dec
cmpb
xor
enter
rcrl
add
lods
xor
sub
out
add
or
stos
or
cmpsl
mov
adc
mov
mov
jbe
mov
and
orl
mov
pop
add
add
imul
shl
pop
jae
cs
adc
lods
data16
inc
clc
addl
jno
aaa
fiadds
mov
cmp
arpl
test
mov
dec
cmpsb
loopw
inc
andb
pop
in
push
leave
jmp
test
testb
xchg
dec
add
jo
push
and
popf
adc
or
popa
push
lret
clc
data16
lret
arpl
inc
and
ja
adc
lods
lmsw
dec
sbb
sarl
mov
and
sub
mov
cwtl
add
cmc
mov
mov
sti
rcrb
sbb
fs
inc
in
or
movsl
pop
sub
stos
aad
mov
pinsrw
mov
add
mov
les
or
loopne
pop
mov
jg
push
clc
inc
fisttps
mov
arpl
sub
jo
xchg
inc
jnp
push
mov
test
enter
imul
push
in
fwait
test
fdivrp
data16
add
lods
scas
push
mov
cld
adc
stc
fldlg2
push
jno
xor
adc
enter
cmp
int
lods
push
das
adc
inc
js
cli
movsl
dec
jecxz
pop
mov
sbb
mov
pop
sbb
imul
dec
add
push
test
into
inc
fcomps
mov
add
mov
sub
jnp
inc
in
cmp
negl
mov
push
ljmp
dec
add
jmp
jl
sbb
inc
add
fldcw
enter
sbb
daa
and
pop
cmp
xor
mov
mov
std
ret
pusha
int3
jb
inc
add
jge
popa
out
add
jg
push
addl
or
mov
inc
adc
clc
movsb
push
sub
mov
jmp
xchg
popa
push
pop
add
movsb
xchg
push
inc
jbe
jnp
and
xchg
rolb
cmp
std
dec
or
adc
stos
test
sbb
sbb
je
jno
add
mov
in
pop
xchg
adc
and
push
test
xor
add
insb
xchg
mov
in
cmp
jg
push
pop
popa
mov
arpl
inc
mov
cmp
shl
std
add
jecxz
mov
sbb
ljmp
add
fiadds
mov
xor
test
cmp
add
stos
bound
mov
and
iret
fistps
clc
sahf
adc
adc
and
lcall
pop
pop
movsb
jmp
aaa
add
dec
add
js
fisubrs
and
loopne
sbb
les
sbb
and
psubusb
repnz
shlb
and
xor
push
pop
add
mov
movsl
add
loopne
jnp
jne
pusha
sbb
xchg
add
lock
ljmp
sbbl
xor
inc
rclb
adc
mov
xchg
inc
inc
sahf
cmp
dec
ljmp
movsb
sub
repnz
and
mov
push
call
or
mov
dec
and
dec
je
in
adc
scas
inc
sahf
jmp
andb
jo
add
xchg
rolb
and
repz
subb
push
nop
stos
mov
add
fiadds
subb
and
lahf
pop
fnstcw
fmull
add
push
and
mov
add
xor
mov
push
addr16
testl
lods
in
andb
adc
dec
xchg
loop
mov
or
shl
sbb
movsl
pop
ljmp
jae
pushf
sub
inc
and
or
rep
and
in
je
sub
push
pcmpeqd
push
xacquire
movsb
push
add
lahf
in
xor
mov
mov
add
add
lret
lods
dec
mov
jmp
xor
fsubl
add
add
xchg
ja
rorl
test
inc
mov
xor
cwtl
push
add
int
aas
outsb
push
repz
testl
loop
xor
outsl
adc
mov
rcll
sbb
movsb
add
cmp
leave
add
inc
sub
add
subl
add
jle
dec
call
negb
push
pusha
cwtl
dec
dec
cmpsb
repz
cmp
stos
lret
sub
rcrb
push
xchg
daa
xor
lock
mov
jno
lea
repz
lcall
test
les
xor
shr
js
loopne
out
insl
ja
es
pop
add
stos
mov
xor
dec
xor
add
push
inc
rcrl
add
jo
cmp
fadd
lahf
outsl
adc
push
xor
mov
add
mov
dec
or
lock
insl
and
pop
data16
nop
lret
push
mov
add
ljmp
jae
dec
or
les
sub
dec
add
mov
adc
jb
xchg
pop
jl
jecxz
mov
mov
xchg
aaa
roll
adc
jmp
mov
jb
repnz
xchg
pop
or
push
sbb
out
clc
pop
insl
jns
add
shlb
js
adc
pop
adc
sti
xor
loopne
rorb
add
not
mov
ret
lods
xchg
int
adcb
pop
je
pop
or
gs
cmpb
push
nop
pop
push
fbstp
adc
sub
add
das
pop
gs
add
or
dec
shrl
add
sbb
push
add
loope
cli
jl
dec
add
and
sahf
ja
roll
imul
sti
test
mov
add
xchg
add
push
inc
push
iret
inc
inc
add
push
push
cltd
push
aad
add
lods
stc
aaa
icebp
add
out
xchg
xor
call
push
lock
mov
mov
push
sbbb
nopl
inc
enter
fimull
out
jae
leave
les
xchg
or
dec
mov
jge
dec
or
fldcw
int
mov
aam
mov
lret
push
mov
sub
and
cmc
add
cwtl
sub
insl
cmp
xor
jb
pusha
fs
add
je
scas
add
cmp
push
dec
lret
in
cmp
insb
dec
mov
xchg
add
outsb
adc
cs
in
cmp
push
ljmp
jae
add
and
iret
xchg
mov
add
daa
pushf
jmp
aas
popf
sbb
pusha
sti
shr
add
pop
mov
dec
ds
arpl
add
jge
ds
lock
mov
cmp
cmp
pop
pop
nop
jne
cmp
sahf
lods
imul
push
orb
roll
fldlg2
enter
pop
push
ret
xor
inc
lds
arpl
xchg
or
and
fadd
clc
add
pusha
sbb
adc
push
mov
test
imul
mov
sbb
mov
adc
pushf
je
insb
add
ror
mov
add
mov
mov
add
xor
and
and
pushf
sub
call
dec
or
sbb
dec
orb
nop
dec
add
xchg
cmc
fiaddl
adc
in
stc
adc
mov
sub
sbb
pop
pusha
dec
adc
hlt
jae
mov
popf
push
pop
jns
das
cs
mov
xchg
sub
sbb
add
scas
lret
pop
add
or
cmpsb
je
lret
pop
loopne
inc
push
jo
add
in
cld
dec
loopne
add
or
xchg
jg
jl
fwait
aad
pop
mov
mov
xchg
nop
add
cmpsb
cmp
lahf
ret
inc
sbb
jmp
popa
mov
push
cmp
sub
lret
pushf
pop
jp
mov
clc
hlt
scas
push
in
xchg
xor
cmp
shl
add
pop
je
lcall
mov
push
pop
add
xor
pop
add
jo
or
js
test
clc
sbb
inc
sahf
addr16
push
andb
shll
xchg
add
lds
mov
inc
add
pop
mov
shrb
dec
shlb
js
add
inc
cltd
inc
adc
add
sbb
mov
mov
cmovns
mov
lcall
loop
add
cmp
adc
add
inc
pop
and
cld
mov
pushf
ret
out
nop
call
or
push
add
cs
aas
pop
int
pusha
add
inc
adc
insb
aaa
pop
shl
mov
jecxz
xor
mov
sbbb
test
inc
fmul
std
fs
jne
sahf
test
dec
push
xchg
mov
add
add
lahf
cmpsl
in
add
push
stos
pop
aaa
ljmp
mov
aam
mov
clc
mov
push
addb
jae
loopne
roll
arpl
test
cmpsl
out
mov
xchg
sahf
shll
xor
sub
call
lds
cmpsl
add
jnp
add
mov
xchg
rolb
and
jae
rcr
mov
sbb
mov
jns
mov
jmp
inc
or
mov
mov
or
cltd
xor
lahf
ja
js
or
jb
pop
cld
and
add
jne
pushf
test
add
pusha
daa
mov
add
int3
dec
pop
add
std
mov
add
outsl
pop
inc
or
js
scas
push
divb
push
pop
mov
pop
imul
cmp
mov
mov
or
fistpll
add
dec
push
rolb
test
pop
mov
pop
jp
lods
mov
sahf
ljmp
fildll
outsb
cmpsb
adcl
clc
test
fldcw
inc
inc
adc
pop
fistl
aad
int
cmpsb
sti
dec
xor
xor
test
sbb
lods
fistps
mov
jae
fsubrs
pop
add
inc
add
pushf
mov
pop
jp
movhps
pop
cmpl
xlat
push
pushf
pop
xor
std
nop
xor
adc
dec
sbb
cmpb
leave
add
cli
fs
sbb
je
mov
add
ds
dec
inc
mov
adc
popf
jg
rorb
jl
dec
lods
insb
inc
add
popa
cmp
cltd
test
mov
test
add
sbb
add
addr16
mov
nop
mov
mov
outsl
fcoml
cmp
sbb
mov
test
aas
pop
add
mov
sub
pop
sbb
or
clc
stos
data16
jnp
es
add
sti
add
imul
fdivl
or
adc
and
mov
cltd
push
xorb
mov
aas
push
adc
out
out
lods
fiadds
adc
pop
jne
pop
jbe
pusha
sub
mov
rolb
stos
sub
mov
push
dec
movsl
jge
push
push
loope
add
loopne,pn
mov
add
and
icebp
adc
lahf
and
roll
js
push
and
add
ficoml
ret
gs
out
shll
xor
adc
and
dec
and
and
cmp
jge
sbb
jg
sar
rcrl
inc
xorl
add
dec
pop
mov
cmp
ret
cwtl
test
daa
lahf
xor
out
ds
jmp
push
xor
cmp
nop
lock
cmc
mov
addb
and
mov
outsl
sbb
xor
imul
clc
add
jne
andb
std
adc
jp
icebp
and
int3
add
add
repz
push
dec
add
mov
pop
push
sbb
scas
hlt
jns
add
cmp
lret
inc
push
dec
rcl
mov
inc
outsb
mov
ja
add
mov
xchg
stc
push
push
add
jg
les
cmp
lahf
sbb
adc
loopne
call
in
mov
pop
add
pushf
jae
int3
mov
sbbl
je
add
sub
fldenv
add
test
movq
pop
dec
pop
loopne
or
sahf
push
ds
sbb
lods
mov
add
xchg
andb
mov
nop
insl
add
fadds
push
add
xchg
loop
push
xchg
test
adc
mov
adc
xchg
add
mov
add
dec
insl
mov
test
or
add
cli
ret
jg
cmp
mov
out
xchg
sarl
nopl
jecxz
mov
bound
inc
cmp
push
jns
adc
cmp
sbb
add
dec
mov
inc
add
aaa
jne
adc
pop
subl
jp
mov
xor
bsf
aaa
or
pusha
inc
add
inc
call
nop
mov
jle
sub
enter
push
dec
inc
mov
fstp
cmp
mov
in
and
lret
mov
sub
sahf
in
loopne
popa
stc
push
cmpb
add
mov
cwtl
cld
jp
push
je
or
xchg
xchg
add
lock
shlb
fwait
mov
xorb
mov
cmp
mov
mov
jle
mov
cmpsl
loopne
cld
ss
mov
ds
in
or
pause
mov
xor
pop
sub
and
ljmp
pusha
xlat
mov
in
bound
sub
add
scas
add
hlt
sbb
sbb
mov
add
xchg
adc
cmc
mov
nop
jne
adcb
xorb
jo
fs
inc
lcall
shrb
fwait
pushf
or
push
or
mov
lcall
dec
in
sbb
jle
add
lods
lahf
pop
add
aad
xchg
inc
andl
jecxz
add
mov
aam
lea
mov
out
add
scas
or
mov
push
test
fiadds
dec
popa
cwtl
adc
mov
add
jmp
or
fldenv
leave
dec
cmpsl
inc
sbb
nop
clc
test
iret
dec
xchg
inc
cmp
and
and
adc
js
mov
adc
je
jnp
jge
pushf
adcl
lds
stos
mov
mov
cmp
inc
in
add
pop
dec
adc
movsl
roll
bound
das
cmp
fs
arpl
mov
add
mov
mov
loop
xchg
adc
mov
jl
je
subl
or
xor
mov
cmc
add
mov
sar
fiadds
mov
int3
jae
add
addr16
lds
pop
stc
call
xor
pop
pop
loop
add
fcmovnbe
inc
loopne
nop
call
stos
and
loopne
pop
ljmp
jecxz
fimull
add
insb
push
fldenv
subb
mov
sbb
inc
int3
jge
add
push
xorl
cmp
add
mov
iret
in
pop
push
xor
arpl
cmp
xor
in
add
es
mov
cpuid
mov
sub
add
sbb
lock
pop
sarl
movb
jnp
js
mov
xchg
dec
add
lods
icebp
out
inc
ds
lret
repnz
jnp
mov
push
or
xchg
adc
lret
int
mov
lods
mov
int3
dec
insb
shlb
cltd
dec
fisttps
pushf
add
cmpsb
inc
mov
testl
push
push
mov
out
nop
mov
and
test
enter
shr
adc
ss
negb
and
pop
dec
jno
and
push
xor
es
jg
add
adc
repnz
sbb
push
hlt
fistps
andb
jnp
mov
xor
push
add
and
mov
xor
loopne
adc
or
mov
enter
dec
outsb
sti
sub
jo
loopne
inc
add
ret
mov
cmp
in
push
cld
jecxz
and
scas
out
jnp
in
arpl
ret
mov
sub
iret
add
shrl
cmp
mov
adc
cli
add
cltd
push
pop
jge
add
push
les
add
test
lods
add
mov
dec
jnp
sub
or
notb
mov
fcmovne
mov
cmp
lods
stos
add
mov
das
add
jnp
and
sub
cmp
add
cltd
pop
pusha
mov
pushf
roll
add
or
ror
sub
or
add
mov
mov
pop
jne
test
lods
add
cmp
add
lcall
sbbb
inc
movb
nop
lahf
cwtl
popf
add
cmpsl
mov
hlt
xor
add
xchg
outsl
cld
add
push
and
mov
mov
lods
sbb
lock
or
add
inc
pop
aam
push
add
mov
mov
sub
icebp
or
add
jmp
jle
add
xor
inc
cmp
out
loopne
fsubr
xor
add
test
out
add
adcb
cmp
stos
add
mov
add
jecxz
jle
cmp
sub
rorl
adc
add
and
out
add
rcrl
ret
push
test
icebp
mov
lock
pop
jb
add
cwtl
sub
push
mov
pusha
add
push
loopne
rorl
cmp
dec
cmp
jo
insb
and
pop
xchg
pusha
or
or
mov
lahf
aaa
shll
enter
mov
or
xchg
out
addps
xlat
add
mov
jae
mov
xchg
pop
push
test
mov
add
ss
pop
push
sbb
loopne
dec
mov
pop
add
and
xchg
ljmp
adcb
in
mov
sbb
adc
add
adc
dec
mov
inc
lods
push
sbb
js
inc
test
insb
inc
or
sbb
push
es
and
mov
inc
in
fstpt
inc
test
xor
or
mov
ljmp
sub
sub
mov
mov
testb
adc
push
pop
dec
xchg
push
add
aad
out
rolb
stos
add
das
push
push
imul
mov
pop
jns
cmc
mov
rclb
clc
add
out
add
sbb
sbb
add
and
inc
sub
dec
pop
add
and
cwtl
in
xchg
inc
test
mov
fcmovb
xchg
mov
xlat
mov
cmp
add
cld
sbb
mov
add
loope
jl
mov
adc
int3
hlt
call
adc
sbb
add
add
cld
repz
shrl
sub
mov
add
loop
or
dec
fiadds
rcll
mov
sbb
add
cmpl
mov
dec
and
or
xchg
cs
loop
aam
inc
pop
add
lahf
mov
rsm
mov
jb
data16
xor
add
repz
dec
stos
sub
jo
loop
rolb
ss
in
and
dec
inc
add
sbb
jmp
sbb
loop
add
jg
cld
jge
cmp
pop
adc
push
lock
cli
add
inc
shrb
pusha
mov
leave
and
adc
pop
dec
adcl
test
mov
or
sbb
add
ret
fidivs
movsb
loopne
jnp
mov
add
adcb
js
pop
inc
addb
fdivl
push
push
cli
xchg
add
sub
fwait
test
movsb
xchg
loop
aaa
xchg
es
mov
xor
jecxz
push
dec
add
push
aas
shrl
cld
add
mov
sbb
aas
sub
pushf
add
ljmp
loopne
dec
stos
and
add
push
xor
rolb
and
add
cmp
insb
testb
jb
sti
scas
add
sbb
andl
pop
das
xor
cmc
sbb
stos
daa
xchg
xor
enter
movntq
out
cmp
sbbl
push
movsb
enter
dec
fnsetpm(287
js
testb
mov
mull
rcl
mov
adc
mov
sti
cmp
movsb
dec
cmp
fiadds
mov
xchg
add
mov
adc
add
dec
mov
xor
mov
fadds
or
ss
roll
std
push
add
sub
setb
sarb
jge
add
loop
pop
dec
cli
dec
add
xor
adc
test
xchg
movsl
imul
in
lea
jo
jb
sub
mov
aad
mov
adc
add
xchg
push
fs
in
add
shl
pop
sbb
movzbl
xor
in
cld
push
in
js
loopne
mov
mov
dec
call
dec
ljmp
inc
lds
add
push
xchg
pushl
add
lods
adc
jbe
in
lods
jbe
add
xchg
sub
jo
sub
lea
std
or
add
mov
les
add
in
std
repnz
add
aad
cmp
scas
mov
ret
sub
sbb
add
insb
cmp
lock
push
ficoml
ja
fst
dec
add
mov
mov
jb
mov
add
enter
sbb
push
ffreep
or
adc
xchg
popf
add
fsubs
mov
das
iret
xchg
rcr
fiaddl
xor
dec
lock
add
adc
in
add
and
shll
fdivs
mov
xor
mov
arpl
xor
shlb
rcll
pop
in
sbbb
mov
lds
adc
add
mov
hlt
inc
push
pop
mov
pop
push
push
and
mov
pop
add
mov
imul
mov
jl
out
movsl
pusha
movsb
add
push
add
and
mov
add
mov
incb
push
imul
xor
call
das
std
jl
adc
add
testl
or
lret
mov
jnp
add
in
fwait
loop
scas
jno
add
sbb
cmp
nop
adc
test
fisubrs
rcr
add
cmpsb
arpl
lret
xlat
mov
test
subb
xor
jns
insl
push
mov
inc
movsl
add
in
jmp
sub
lea
sbb
push
push
shll
sbb
cmpsb
and
insb
imul
mov
faddl
fdivs
hlt
sahf
and
aad
add
xor
data16
add
adc
add
sbb
pop
bound
stc
setle
sub
adc
test
add
fdivrs
jo
add
nop
jmp
or
mov
push
lcall
push
mov
dec
add
adc
repz
or
fistpl
outsl
sub
jno
inc
mov
xor
pop
xor
pop
jl
mov
js
inc
jge
shlb
mov
into
ret
sub
arpl
movsl
jp
add
js
and
jp
cmp
sbb
push
jae
mov
dec
dec
loop
mov
sub
movl
lods
sub
cmp
inc
in
mov
push
movsl
dec
add
lahf
rolb
cmp
add
mov
push
mov
adc
add
stos
inc
or
sti
pop
and
lods
inc
inc
push
add
jl
bound
pop
stc
enter
push
sti
lds
fcomps
mov
add
or
lock
push
add
cmp
cli
and
sub
dec
push
dec
mov
movsb
add
or
add
les
adc
push
gs
cs
inc
and
xorb
add
pusha
fiadds
andb
and
xchg
cmp
fiadds
in
xorb
fcompl
loop
jb
xor
mov
jnp
gs
xor
push
xchg
lods
out
add
pop
add
cld
jle
add
ss
dec
add
and
cmp
pop
inc
xchg
outsl
jle
sarb
les
insb
lods
pop
dec
test
sub
dec
mov
inc
dec
cmp
dec
cli
call
push
lret
repnz
js
pop
ret
loop
or
cmpsb
cmpb
loope
add
jnp
andb
mov
adc
sbb
pusha
add
ret
mov
jno
inc
fs
loopnew
movsl
mov
rolb
mov
lret
fnsave
adc
sbb
and
jp
test
shl
sub
adc
xchg
and
roll
stc
pop
cli
mov
inc
or
and
jg
and
insl
nop
enter
adc
in
mov
inc
movsl
add
int
add
and
dec
cmp
orl
pop
push
call
or
mov
inc
int3
mov
inc
lock
pop
lods
nop
pop
fwait
out
pop
add
cmp
cmp
cli
pop
or
scas
loope
subl
sbb
add
jmp
add
mov
icebp
cmp
pop
cld
xchg
in
dec
pop
fldenv
dec
pusha
popa
adc
imul
mov
jo
mov
ret
mov
or
cld
inc
nop
cmp
add
xlat
rolb
test
sub
pop
aam
rcrl
lahf
std
xlat
add
or
out
pop
les
add
add
dec
add
dec
in
adc
je
enter
repnz
cmp
sub
push
loop
add
add
cmp
cmp
orl
bound
dec
xor
outsl
xchg
lock
cld
xor
rcr
arpl
paddsb
repnz
and
lea
andb
ljmp
adc
push
mov
jl
ja
push
sub
pop
push
ret
ret
negl
mov
mov
push
bnd
andb
sbb
xlat
insl
cmp
js
add
mov
dec
arpl
jbe
push
movsb
shl
push
jae
sub
sub
inc
insl
mov
pop
add
orb
cltd
std
mov
xchg
test
imul
or
mov
pop
xchg
xchg
jnp
fdivrp
jle
mov
adc
mov
add
dec
je
aam
dec
push
push
mov
dec
in
rorl
js
lds
adc
ds
jo
add
test
add
xor
loopne
push
ds
cld
dec
rolb
mov
push
or
or
movsb
jmp
rcrl
add
je
xchg
clc
xchg
cmp
mov
jge
push
or
add
pop
sub
xor
push
pop
mov
sahf
inc
cmp
add
in
ja
push
inc
aad
add
rcll
mov
cmp
bound
addb
js
fmulp
mov
in
inc
mov
shr
lret
sbb
stos
cmpsb
subb
stos
push
xchg
or
fildl
inc
enter
jns
add
out
cmp
push
fildll
lods
pop
xor
pop
pop
sbb
add
mov
jecxz
mov
xchg
sbb
sub
xchg
cli
mov
insb
lods
xchg
push
jbe
fwait
adc
jg
sbb
movl
mov
add
lock
mov
or
arpl
gs
mov
inc
jb
mov
sahf
add
xor
jecxz
imul
ds
add
ret
sar
adc
cmp
xor
scas
inc
das
jg
stos
cmp
sub
dec
push
mov
cwtl
pop
add
pop
sub
cmp
and
xchg
adc
jno
hlt
lret
filds
fs
sbb
add
stos
add
or
push
or
mov
push
dec
push
inc
bnd
mov
bound
lret
jb
add
ja
xlat
add
lahf
mov
sub
xor
inc
mov
inc
roll
push
dec
nop
stc
xorl
add
shrl
lahf
cltd
jo
in
mov
ret
je
js
jmp
sub
stc
jno
fidivrl
mov
pop
sub
fdivrp
mov
pop
out
cmp
mov
pusha
push
fmuls
add
cltd
arpl
mov
sbb
push
mov
leave
inc
add
xor
mov
arpl
pop
lods
add
add
int3
cmp
sub
and
mov
xor
ss
scas
mov
dec
push
insb
inc
movsb
and
push
pop
pop
and
cld
inc
scas
push
sbb
adc
test
js
and
lret
gs
rorl
push
cld
add
dec
cmp
cmpsl
dec
adc
xor
sbb
xor
sbb
mov
rorb
cltd
jecxz
test
mov
jmp
arpl
test
call
lds
in
add
sub
pop
daa
stos
pop
sbb
sti
psadbw
mov
inc
add
test
cltd
sbb
add
pop
es
loope
ds
fcmovb
push
loopne
adc
dec
bound
inc
into
dec
cld
lods
add
iret
mov
xor
cmc
or
pop
push
jge
mov
movsl
add
lahf
mov
cmp
cmp
adc
fadds
xchg
pop
loopne
cmpsl
rorb
add
in
xlat
inc
je
testb
xchg
notl
jle
add
icebp
or
adc
sub
mov
jnp
ffree
fiaddl
ljmp
dec
mov
jae
add
popa
daa
test
mov
adc
dec
jg
pop
and
mov
cmp
lahf
aas
mov
mov
fisubs
nop
push
pushf
adcb
sub
cmp
adcl
xchg
adc
shrb
xor
and
mov
clc
mov
lcall
xchg
add
out
lds
xchg
gs
pusha
arpl
dec
adc
clc
pop
push
or
popl
in
mov
sbb
pop
out
sub
into
lods
mov
jb,pt
hlt
mov
cmp
clc
jae
cld
and
movsl
fcmovbe
lret
imul
ljmp
and
sub
cld
inc
adc
in
mov
imul
adc
iret
pop
movsl
aas
in
ret
add
jbe
xchg
cli
nop
cmp
mov
lods
cs
rclb
add
xor
es
pop
mov
lcall
push
or
jb
push
add
add
xor
add
outsb
dec
loopne
xchg
test
xorb
cmpsb
mov
das
dec
into
add
aad
popf
rcpps
pop
repz
jecxz
push
xor
loopne
orl
sub
rolb
mov
and
inc
pop
dec
fs
or
negl
js
sub
insl
psubd
bound
add
mov
sbb
pushf
xor
adc
dec
pop
add
sbb
enter
add
push
sti
test
jo
add
fsubrs
pusha
push
xchg
mov
add
hlt
jle
jno
sbb
cli
jnp
add
fidivl
add
push
lcall
enter
mov
ljmp
out
cmpsb
sbb
fstps
mov
inc
or
jge
add
sbb
cld
push
pop
jl
pop
ret
ljmp
adc
sbbb
lds
add
out
loop
add
mov
subb
jp
xor
not
aaa
push
inc
and
pop
cs
fcmovne
push
in
test
pop
int
mov
ret
add
fcomps
pop
xchg
adc
add
rcrb
adc
sub
cs
add
in
lret
xchg
sub
add
popf
daa
pop
or
out
shrb
xchg
leave
or
fs
or
in
andb
loop,pt
sahf
pushf
es
xor
stos
dec
cmc
je
insl
push
xor
mov
add
sbb
dec
add
cwtl
inc
push
aam
icebp
or
push
jnp
and
add
cwtl
outsb
push
mov
cs
fsubl
jne
add
les
xlat
inc
ljmp
cmp
inc
cld
jg
add
push
and
add
mov
add
mov
add
leave
lock
sbb
mov
incb
add
hlt
jns
out
mov
push
popf
and
mov
lret
out
inc
in
add
insl
push
sub
cmp
nop
stc
mov
push
push
push
lea
and
jo
add
imul
in
rolb
sub
jnp
mov
xchg
and
aad
cwtl
or
test
pop
pop
add
fsubl
fcmovne
arpl
xchg
mov
aas
pop
xchg
andb
mov
or
dec
aam
jg
sbb
int3
addb
jle
imul
rcl
pushf
inc
add
sub
and
add
into
and
das
mov
add
jmp
int
ja
clc
xor
cmp
in
ret
pop
sbb
jne
add
xchg
call
imul
sub
mov
idivb
punpckhbw
pop
mov
leave
in
mov
sti
repnz
inc
psubsb
add
lds
add
sub
jb
cs
adc
jmp
popa
xchg
pop
cmp
add
outsb
into
push
shlb
sbb
or
test
add
lcall
or
mov
fwait
add
add
mov
pop
fnstenv
fstl
mov
mov
repz
inc
add
jl
sub
sub
push
fdivp
jo
sahf
xor
cmp
add
rcl
sub
loope
test
sbb
adc
and
out
ljmp
fs
lods
lret
mov
rcll
xchg
push
cmc
stos
pop
sarb
ds
mov
mov
adc
and
test
or
mov
int
inc
adc
xor
negl
shl
or
scas
sub
mov
jae
aaa
dec
call
cmpb
cli
or
adc
dec
sub
jb
mov
movsb
call
fcoml
pushf
mov
add
cmp
movsl
rolb
dec
or
add
loope
mov
cs
jecxz
push
pop
aas
xchg
add
icebp
mov
adc
jmp
xlat
test
cmp
mov
lret
nop
arpl
dec
jg
mov
enter
add
daa
aaa
out
push
xlat
xchg
push
dec
pusha
adc
aas
fstpt
or
pop
shlb
cld
add
pusha
mov
call
pushf
mov
sub
jle
inc
ret
mov
xchg
gs
sub
pop
push
add
imul
outsb
add
mov
cmp
add
adc
xor
pop
popa
mov
and
sar
jle
hlt
push
pop
jnp
xor
xchg
push
xchg
pop
push
pop
in
in
into
add
je
add
ret
ret
sbb
sub
loope
adc
adc
rcrb
int
orl
mov
rolb
outsb
xor
push
icebp
ljmp
jo
xor
aas
shlb
add
inc
fadds
mov
mov
loope
out
call
jmp
bound
ja
imull
mov
and
cmp
lret
ss
mull
mov
add
ror
mov
add
sub
shlb
add
pushf
lcall
lods
inc
aaa
hlt
psllw
mov
clc
cmp
popa
andb
xchg
cs
cli
or
jns
jae
mov
std
pcmpeqd
add
addr16
js
xchg
cwtl
xchg
add
aad
mov
add
cwtl
dec
xor
push
push
add
dec
insl
add
add
insb
add
imul
lock
mov
loopne
fwait
sbb
rorb
arpl
and
dec
int3
sub
pop
test
std
adc
pop
sub
pop
dec
xchg
sub
mov
and
icebp
jle
nop
inc
cmp
inc
and
scas
loopne
jp
dec
stc
xorl
xor
adc
les
mov
sahf
inc
das
popf
outsl
pop
clc
inc
in
sbb
cmp
push
scas
push
shlb
sbb
scas
push
mov
fiadds
lds
xor
cmp
sub
fimuls
inc
and
add
and
daa
xor
add
sbb
andb
imul
je
inc
lds
pusha
cmpsb
bound
jl
add
xlat
push
rcrl
push
mov
pop
ret
mov
add
jp
aam
push
xchg
dec
mov
lcall
cmp
ror
mov
ljmp
adc
es
xlat
je
sub
popl
jmp
pop
push
cmpsl
in
roll
out
insl
jb
mov
test
mov
rcl
mov
int
cld
adc
mov
push
loopnew
dec
add
sub
shlb
sbb
fistpl
or
std
pop
xor
fstl
lret
faddl
push
mov
adc
adc
or
add
es
dec
or
push
add
dec
out
jecxz
jmp
bound
in
stos
inc
test
add
xchg
push
loopne
jp
add
addr16
clc
add
inc
mov
jl
push
push
push
mov
enter
mov
and
loope
addl
inc
push
shlb
add
psubsb
pop
repz
clc
cmpb
add
js
xor
out
push
adc
xchg
mov
int3
sub
add
pop
mov
pop
add
repz
scas
ret
dec
or
lret
add
loope
mov
add
adc
add
cwtl
loopne
daa
add
movsl
and
mov
pop
fildl
inc
push
inc
push
bound
mull
ret
cwtl
inc
cmpb
dec
add
mov
sbb
add
shl
jbe
sbb
inc
rolb
test
fcompl
xchg
pushf
dec
mov
add
shrl
jbe
sti
inc
adc
or
fmull
es
push
pop
call
jns
in
hlt
adc
mov
jns
jmp
loopne
sbb
aaa
cwtl
sbb
repnz
or
mov
addr16
sbb
pop
or
scas
inc
ljmp
popa
add
testl
inc
icebp
sbb
cmc
add
xchg
cmp
pop
mov
cs
lods
sbb
outsb
mov
xor
dec
hlt
push
repnz
scas
clc
pop
pop
iret
push
loopne
mov
imul
push
cmpsl
add
mov
xor
add
dec
push
push
push
int3
xlat
and
loope
and
addb
add
push
mov
pop
jnp
pop
fsubl
mov
lods
jne
call
push
pop
sub
ss
pop
pop
movsb
jae
mov
inc
shll
cmp
lret
jnp
push
pop
push
inc
mov
call
xlat
movsl
rol
dec
ret
movsb
clc
xor
and
movb
fistps
nop
in
push
add
fwait
jo
jnp
xchg
inc
xor
sarb
mov
xor
ret
inc
mov
add
mov
cmp
addl
push
leave
in
push
int
xadd
mov
dec
xor
inc
mov
push
icebp
daa
subl
add
push
mov
add
cmpsb
cltd
outsl
xchg
fsubrs
in
or
repnz
jecxz
inc
roll
daa
mov
xor
call
mov
xor
and
movsl
rorb
adc
add
mov
mov
and
sub
int
int3
sbb
add
jbe
into
mov
inc
push
test
or
add
sub
outsb
stos
nop
sbb
inc
or
sub
sbb
cmpsb
push
in
mov
add
lock
pop
pop
mov
mov
stc
add
dec
add
pavgw
fisubrs
pop
ljmp
push
pop
cltd
dec
outsb
test
sbb
aas
subb
ret
push
jge
adc
and
push
push
sub
cmp
mov
daa
outsb
inc
in
adc
xor
pusha
inc
jle
out
mov
loope
and
xchg
cmp
cmc
jecxz
out
xor
mov
cmp
ja
dec
std
aam
lcall
jmpw
popf
add
push
out
mov
inc
les
mov
push
sbb
movsb
int
dec
lahf
and
sar
and
sbb
hlt
push
lret
mov
fs
lods
add
xor
adc
ljmp
xor
add
jb
das
add
pop
lcall
cs
push
add
sbb
add
inc
pop
in
addr16
xchg
cmp
outsl
subb
pop
or
mov
xor
sahf
dec
cli
leave
push
lods
sub
pop
jns
add
fs
lods
cmc
imul
pop
push
mov
int3
jg
xchg
mov
cli
sbb
xor
rol
jnp
cs
mov
and
mov
add
inc
mov
test
cwtl
push
lahf
push
xlat
add
cmp
push
xchg
jecxz
ja
cmpsb
arpl
or
popf
in
gs
test
add
mov
add
dec
test
out
add
scas
cmc
les
push
lcall
add
mov
pop
jl
add
or
frstor
out
stc
pop
pop
adc
enter
bound
adc
cmc
pop
dec
and
adc
data16
lock
je
repnz
and
mov
iret
xor
cmpsb
jmp
je,pt
and
movsl
push
sbb
popa
mov
cmp
or
jecxz
adc
jb
pop
dec
xchg
push
decb
add
rcll
fisttpll
pop
ficompl
jmp
jo
fstpt
insb
aaa
inc
cmpsb
xchg
lock
pop
es
sbb
andl
scas
jae
jecxz
cwtl
cwtl
mov
dec
dec
inc
pusha
add
mov
push
inc
sbb
and
pushf
outsl
fbstp
jle
add
mov
dec
add
adcl
adc
and
add
shr
add
testb
cmp
pop
jbe
ret
ret
ljmp
incb
hlt
out
test
push
adc
mov
adc
std
shlb
out
or
outsb
cmp
sub
ljmp
sub
insl
push
inc
xchg
pop
stos
rcll
int3
sbb
or
jg
cmpsb
ljmp
or
lods
icebp
add
stos
dec
add
out
pushf
cli
inc
adc
inc
xor
call
and
cmpsb
jns
adc
xchg
or
outsl
mov
sub
push
pop
outsb
out
inc
ret
push
mov
adc
add
cmpsb
aas
loop
adc
lods
jg
add
cmc
and
mov
or
and
outsl
mov
stc
das
int
jl
sub
add
and
or
lds
mov
or
loopne
lods
pop
add
lahf
loop
sub
ficompl
jno
cmp
add
xor
or
dec
and
pop
shlb
jns
add
repz
jbe
sbb
dec
popf
push
push
shll
ret
gs
mov
insb
mov
in
dec
or
add
cmc
iret
aas
jbe
popf
add
les
or
jne
mov
fnstsw
in
add
insb
mov
xor
sub
and
add
les
inc
stos
jle
adc
in
roll
and
inc
mov
or
sar
fldcw
mov
bound
mov
xchg
and
rcrl
jmp
arpl
mov
sub
push
shl
dec
nop
arpl
repnz
pusha
mov
dec
fisubl
mov
xor
sbb
andl
andb
xor
outsb
xor
loope
dec
sbb
rcrb
sub
cwtl
or
push
pop
shll
jmp
dec
rcll
add
rclb
push
ja
insl
cmp
mov
int
jg
cld
mov
or
adc
add
cmp
sysret
push
dec
test
sahf
add
shl
leave
je
sub
pop
inc
mov
cmc
inc
sarl
xchg
data16
mov
loop
or
xchg
dec
fnstenv
iret
add
pop
xor
cltd
inc
push
and
fcomip
shlb
bound
clc
push
jo
add
mov
loop
enter
or
adc
popl
test
shrl
jne
call
sbb
or
movsb
outsl
jb
add
idivl
pop
mov
pop
push
push
sar
cmp
int3
out
add
xor
scas
cs
xchg
das
pop
rorl
jno
dec
inc
sti
inc
mov
test
jb
add
popf
in
fs
inc
movsb
stos
pushf
adc
jo
testl
add
int3
add
mov
fistpl
jae
add
pop
jne
cmc
add
mov
adc
xchg
addr16
or
bound
mov
adc
pop
mov
roll
dec
mov
addr16
mov
add
lock
or
aas
mov
xor
outsb
or
pop
dec
inc
dec
or
pop
and
js
sti
jmp
sbb
mov
dec
lds
dec
bound
add
loop
popa
xor
cmp
imull
sub
mov
scas
push
lods
into
sub
fs
add
adcb
and
dec
ret
mov
adc
mov
cli
mov
mov
or
subl
lods
xor
leave
pushf
pop
jmp
or
mov
mov
sub
xlat
fdivrs
cmp
add
lods
xchg
pop
adc
js
mov
push
sbb
in
push
or
sub
mov
push
push
pop
jmp
lds
les
mov
or
mov
dec
adc
jns
ss
adcl
pop
adc
jmp
aas
call
lock
into
add
mov
add
pop
add
jns
sub
push
mov
insl
daa
nop
lods
add
bound
dec
xorb
xchg
imul
inc
jo
push
pop
cwtl
or
movsl
inc
jl
loopne
lods
xorb
jl
out
sub
xchg
pop
adc
sbb
sbb
pop
rcr
mov
and
and
push
jae
adc
mov
add
pusha
scas
jbe
add
mov
pushl
outsl
ret
insl
adc
pop
mov
icebp
sbb
push
mov
inc
sti
sbb
jb
jge
cli
shr
out
fdivl
push
add
push
adc
mov
adc
add
arpl
loop
add
add
and
mov
mov
addr16
fdivrs
cltd
orl
rcl
add
adc
inc
mov
sbb
ret
inc
into
mov
add
test
jae
out
xchg
in
sbb
ljmp
add
xor
add
daa
cli
subl
test
fxch
add
xor
testl
lret
mov
loope
imul
mov
repnz
mov
add
jecxz
mov
addr16
xor
sarb
add
jbe
addr16
mov
push
add
mov
add
cmp
je
rcr
mov
jae
jl
andb
cmc
jge
ret
pop
sbb
add
loope
sbb
add
xor
in
dec
mov
fsubrl
xchg
cmp
addl
and
rcr
aam
jle
call
or
add
mov
cs
dec
loope
in
sub
xor
insl
iret
cmp
cmovbe
js
add
into
out
call
pop
ljmp
addb
dec
cmc
add
xchg
in
addr16
xchg
movsb
and
flds
nop
stos
mov
xchg
js
jne
test
add
sahf
aam
mov
add
jge
pushf
lcall
add
add
js
add
xchg
xchg
iret
add
popf
adc
ja
pop
add
or
mov
cmpsb
dec
push
mov
test
pop
and
push
int
sbb
dec
negl
push
pushf
mov
lret
jg
lock
fnsave
add
pop
out
inc
out
test
sahf
je
inc
clc
mov
cmp
xchg
push
fistpl
push
inc
imull
mov
clc
xchg
pop
add
sbb
les
in
clc
jg
inc
jl
insl
and
sbb
cmp
cmp
data16
inc
ret
mov
cwtl
lahf
lcall
daa
lds
add
and
pop
rclb
adc
pushf
stc
fisttps
xor
push
mov
jg
andl
aad
mulb
add
xlat
jb
out
xchg
call
sbb
incl
xchg
mov
sbb
fsts
fwait
jmp
hlt
lcall
divl
pop
mov
test
jae
sti
add
es
jae
test
enter
adc
faddl
in
push
lock
cmc
inc
test
add
cltd
mov
pop
fiaddl
addr16
sbb
int3
fildl
add
xchg
test
add
jns,pn
shll
adcl
inc
lcall
add
mov
push
jmp
scas
sbb
shl
adc
add
push
inc
test
cltd
fdivrs
sbb
adc
pop
xchg
push
push
mov
cmpsl
pop
adc
xchg
cmp
pop
sarb
adc
add
aaa
or
inc
in
cmpsl
lock
pop
je
shll
idivl
dec
mov
stos
mov
inc
adc
fwait
out
ja
add
push
orb
fnstenv
add
lahf
cmpb
add
mov
adc
les
dec
add
rorl
sbb
stos
pop
push
mov
je
add
mov
cmp
jbe
and
jns
xchg
add
pop
cmp
cmpsb
fidivrl
leave
adc
inc
adc
jg
mov
insl
mov
push
push
imul
jp
mov
fs
jg
or
add
jl
dec
adc
popa
test
frstor
pop
adc
add
push
lock
dec
lds
push
add
sbb
lcall
push
add
mov
mov
jp
add
sti
or
pushf
addl
jb
jmp
cli
lcall
dec
les
imul
lret
pop
rol
xchg
in
push
andb
sub
mov
mov
out
inc
xor
and
xor
and
pushf
ret
ljmp
out
mov
imul
aas
rcrl
addr16
pop
subl
sti
mov
ud2
dec
pusha
pop
jno
cmp
adc
xor
rcrb
cmc
les
pop
xor
adc
jp
inc
add
hlt
jmp
and
dec
bound
loope
in
imul
mov
movsb
in
and
cmc
ja
add
pop
cmpb
popa
push
sub
loope
push
inc
xchg
and
cmp
xor
fs
incl
xor
mov
sub
mov
cmp
outsl
and
mov
pop
std
push
sbb
movsb
xchg
mov
mov
or
cltd
in
pop
faddl
inc
cmp
rcll
jp
or
adc
clc
add
add
ljmp
in
es
pop
mov
test
add
jmp
sub
push
xor
add
mov
add
jl
out
pop
and
add
mov
cmp
mov
dec
push
sbb
lahf
cltd
sub
add
nop
js
mov
rcrb
and
arpl
cmp
cld
add
lods
mov
or
dec
add
xor
add
jge
icebp
rcr
ja
add
cmpsl
icebp
cli
in
pushf
pop
add
faddl
adc
dec
add
inc
sbb
lods
mov
adc
pusha
pop
shrl
jno
sysenter
pop
out
mov
mov
xchg
push
push
add
jp
mov
and
js
dec
mov
dec
fistl
lock
test
test
xor
dec
aad
xor
mov
cmp
pop
repnz
lret
hlt
insb
or
faddl
call
fadds
fiadds
mov
mov
mov
cld
jle
and
loop
fwait
repz
ja
pop
mov
jg
sahf
adc
movl
cmp
gs
or
ja
dec
out
call
mov
adc
jno
repz
mov
pop
rcrb
add
cmp
enter
ret
sbbb
add
outsl
rorb
add
inc
cmp
mov
mov
and
bswap
cltd
mov
aas
xchg
push
sub
aam
inc
add
and
mov
jnp
aaa
mov
gs
add
pusha
sbb
int
jns
jnp
add
shufps
push
or
outsl
or
inc
iret
lret
cld
or
xor
popa
push
mov
xor
nop
lret
add
sub
icebp
add
xchg
mov
subb
add
roll
jge
in
dec
add
int
dec
pushf
xor
jb
jp
mov
fs
inc
add
mov
fwait
add
cld
fists
imul
stos
push
pop
xchg
pop
stc
mov
add
sarb
push
cs
sbb
add
push
les
pushf
adc
in
sbb
inc
and
data16
jbe
stos
cmp
inc
sbb
mov
nop
xor
sahf
in
clc
in
arpl
outsl
hlt
add
or
adc
mov
icebp
adcb
cmpsb
lcall
xchg
mov
frstor
sub
nop
xor
push
insb
enter
push
rcrl
jns
scas
add
scas
mov
add
add
xchg
sbb
movsl
arpl
sahf
inc
pusha
daa
jbe
push
jle
int3
testl
movsb
add
pusha
scas
shlb
out
loopne
in
add
test
ret
js
adc
or
cs
in
in
adc
popa
sub
xor
add
add
jg
sbb
sti
iret
inc
ljmp
jge
add
test
inc
add
ja
addr16
dec
inc
add
daa
iret
addb
or
sarb
sbb
or
mov
aam
scas
push
arpl
add
popa
js
mov
jns
add
lcall
pop
loope
push
xchg
mov
sub
jmp
test
jmp
push
fcmove
pusha
js
adc
pop
sbb
imul
cmp
outsb
pop
stos
push
mov
jge
add
into
mov
dec
ljmp
add
inc
sarb
pop
add
jge
fidivs
sbb
mov
add
orl
test
pusha
lods
loopne
aam
outsl
add
jo
add
add
aaa
mov
dec
shll
lcall
fsubrs
pop
and
sbb
add
xchg
mov
loope
ja
pusha
or
jge
add
sub
scas
mov
mov
std
lods
mov
or
jnp
enter
and
dec
out
mov
ficompl
loopne
jl
fidivrs
mov
push
push
jae
mov
sbb
jns
mov
out
and
pop
xchg
mov
cmp
sub
int
cmp
test
repnz
fstps
mov
xor
dec
jge
add
mov
in
aas
es
add
pusha
jmp
stc
std
cmpsb
nop
add
faddl
add
fmuls
pop
jbe
sub
ja
dec
sub
iret
xchg
lock
inc
in
addb
sti
fwait
inc
jnp
cwtl
push
add
and
je
or
lock
sbb
mov
or
in
sbb
add
mov
hlt
jmp
out
cmp
sub
scas
jle
dec
jno
and
add
cli
aad
icebp
push
in
add
test
pop
cli
test
add
xor
or
pusha
fdivr
mov
dec
ret
lahf
mov
add
lods
lods
push
ret
scas
cwtl
jnp
add
mov
cmp
adc
mov
sbb
fptan
cmpsl
sbb
xor
testb
cltd
out
add
ss
arpl
lahf
mov
dec
pop
and
lods
mov
add
add
pop
and
inc
adc
incb
xchg
push
mul
pop
mov
inc
lock
fistpll
xchg
xor
jp
ja
loopne
les
pop
int3
incb
test
push
lret
jge
push
mov
add
cltd
fidivs
hlt
push
insb
aaa
inc
loop
rcl
add
cmp
ds
mov
jge
sub
sbb
sbb
and
add
mov
mov
ja
add
inc
bnd
lahf
in
add
mov
inc
sub
adc
sbb
ret
add
cltd
xor
pop
cmpsb
sbb
mov
testl
xorl
movsl
addb
pop
and
mov
push
mov
filds
test
call
add
inc
pop
cld
dec
xor
ljmp
loopne
add
sub
or
in
push
jle
test
je
and
or
repnz
aad
outsb
pusha
dec
or
icebp
and
and
sbb
addr16
out
and
inc
insl
mov
push
add
or
sub
aaa
or
fnstsw
pop
sbb
outsl
push
push
sub
add
lahf
pop
test
mov
jbe
mov
pop
lock
fsubrs
push
test
aad
mov
frstor
jmp
dec
push
pop
movsb
andb
sarb
cmp
adc
jl
add
clc
xor
cmp
addl
shll
push
inc
das
mov
mov
test
ljmp
loop
add
add
or
push
and
pusha
adc
and
mov
cmp
sub
mov
int3
pop
repz
rol
ret
faddl
call
in
inc
add
popf
mov
dec
ret
xchg
cmp
xor
mov
sub
add
das
pop
and
repz
add
push
es
data16
outsl
dec
rorl
dec
cli
in
sbb
dec
sbb
inc
rolb
lret
mov
add
std
cmp
jne
xchg
inc
pop
leave
mull
jbe
sets
ret
loop
add
or
cmp
fdivs
add
xchg
setle
jb
add
dec
inc
test
pop
mov
pop
add
pop
sbb
aaa
adc
jl
xor
xor
fsubrs
push
movsb
shrb
lret
xchg
adc
cli
aaa
mov
je
cmpsb
dec
xchg
pop
and
fsubr
fs
test
pop
pop
fistps
add
out
sub
add
mov
adc
push
push
mov
inc
xchg
subb
lret
sub
cmp
mov
cwtl
inc
inc
int3
xor
jno
add
pushf
mov
mul
sets
or
push
inc
aaa
or
fsubp
or
leave
jnp
out
dec
add
cld
sub
insl
xchg
sbb
sub
popf
pusha
stc
scas
add
adc
andb
xor
push
cmpsb
adc
aaa
mov
rol
decl
loope
cli
movsb
test
mov
inc
in
inc
sbb
mov
sti
rcll
add
imul
adc
or
mov
jae
out
add
add
addl
mov
xlat
push
repnz
add
cmp
xor
jl
insb
pushf
sub
push
or
mov
jne
and
stc
pop
bts
pushf
in
clc
les
inc
jecxz
adc
mov
es
mov
push
dec
es
inc
xor
scas
test
inc
mov
fidivs
or
add
decb
dec
int3
sbb
in
outsl
inc
jmp
mov
push
jb
mov
add
jns
mov
into
jmp
sbb
xor
push
pop
mov
add
shll
add
sub
arpl
sti
cld
sbb
popw
sarb
jbe
add
mov
cltd
add
cli
aaa
lcall
loopne
xlat
add
cmp
mov
sarb
rcll
outsb
add
stos
mov
enter
add
jb
cmp
add
push
pop
das
jnp
inc
lock
idiv
inc
add
mov
inc
ret
insb
shlb
add
mov
ret
mov
inc
gs
test
jp
mov
jo
nop
add
pop
flds
pop
inc
adc
inc
pushf
outsb
repnz
int3
lods
adc
xlat
dec
push
mov
jo
rol
out
inc
mov
pop
or
cwtl
rcrb
mov
pop
enter
sub
stos
orl
lcall
or
rolb
out
fmuls
in
movsbl
or
add
shlb
add
xor
and
cs
cmp
jns
sub
or
nop
adc
mov
inc
test
popa
pusha
faddl
int
pop
sbb
dec
add
mov
cmp
xchg
add
sub
lods
xchg
mov
aad
pop
and
add
cmp
sbb
pushf
icebp
dec
sub
dec
cmpl
inc
or
add
rorl
test
inc
xlat
xor
add
insb
int
addl
mov
lods
cwtl
mov
movsl
jl
jns
xlat
push
mov
dec
sub
add
jb
and
inc
jge
or
or
jns
pusha
dec
sti
lds
cmp
xchg
idivb
adc
iret
cmp
sahf
jae
clc
test
jo
insb
sbb
fs
jno
daa
ljmp
pushf
roll
xchg
cmp
scas
push
rolb
sub
fbstp
push
xchg
mov
pop
or
xor
push
and
pop
movl
fwait
add
jae
add
fidivrs
or
in
add
dec
or
sub
ret
rclb
push
imul
push
int
jl
das
add
mov
fildl
jg
shlb
add
mov
in
fbld
pop
and
enter
mov
mov
das
mov
sub
or
leave
add
testl
sbb
bound
aas
rcrb
out
arpl
xchg
movsl
insl
out
shl
loope
mov
pusha
add
enter
imul
sub
or
les
xor
pop
test
xchg
out
or
xchg
mov
push
int
lock
lahf
xor
pop
adc
sub
cwtl
push
pop
cmp
cmc
add
ret
ljmp
push
repz
stos
mov
popf
pop
inc
gs
jnp
leave
add
mov
sti
fwait
xchg
mov
dec
add
adc
pop
es
dec
push
in
incb
outsb
mov
movb
test
inc
pushf
push
xor
inc
push
repz
mov
and
xorb
call
mov
aad
stos
mov
pop
add
movsb
hlt
and
add
out
mov
je
mov
fistpll
xor
mov
fwait
outsb
ret
sub
mov
sbb
adc
hlt
incl
mov
es
out
jno
dec
ret
add
shl
int3
adc
mov
sub
add
popa
loope
aas
outsb
add
aam
cmp
pop
adc
jl
add
clc
mov
jnp
and
incl
les
lods
push
adc
and
nop
out
add
in
sbb
incl
xor
fisubrs
loop
fistpll
pop
xchg
mov
loope
or
mov
cmpb
cmp
add
mull
xor
out
sub
inc
rolb
add
sbb
xchg
cmp
mov
xchg
add
out
lods
xchg
out
lret
or
xchg
fisubs
enter
test
incb
xchg
test
cmp
data16
jecxz
xchg
sbb
add
jae
add
aam
or
push
inc
cld
cs
jge
xchg
and
hlt
out
add
mov
xlat
pop
add
or
mov
clc
sbb
adc
adc
xchg
call
dec
gs
add
inc
leave
dec
sub
rorl
cmc
add
xor
push
dec
loopne
popa
dec
loop
pop
pop
push
ret
leave
push
cmp
fadds
add
push
lahf
in
call
cli
punpckhdq
mov
data16
mov
xchg
std
and
cmp
add
cmpsb
jg
int3
out
jle
adc
inc
push
ret
rorb
divb
mov
dec
lahf
mov
inc
add
scas
js
jge
js,pn
sub
xlat
push
sahf
add
add
pop
in
and
test
test
fcompl
sub
mov
je
pusha
or
mov
divl
loop
nop
loopne
add
sarl
je
addb
inc
add
mov
flds
add
push
jl
cld
ja
je
cmc
add
fwait
push
push
cmp
cmp
mov
add
sarl
pop
lret
sbb
fistpll
xorb
push
cld
pusha
dec
mov
add
mov
mov
pop
shlb
leave
pop
mov
or
lods
sarl
subl
xor
jecxz
fucom
clc
les
add
mov
sbb
sub
xchg
adc
push
add
dec
lock
sarl
cmpsb
push
lock
inc
in
xchg
test
loopne
mov
xchg
sbb
lock
mov
loopne
cmp
mov
sub
sbb
fmull
or
pop
pop
aad
mov
add
add
or
jo
lcall
ja
mov
in
or
mov
pop
out
les
hlt
push
mov
xor
ja
jmp
jg
mov
out
inc
jo
adc
int
lock
stos
fcmovnu
add
std
xchg
lahf
pavgw
mov
push
les
mov
dec
mov
and
cltd
cmp
and
inc
add
xchg
lea
test
movsl
pushf
aad
aam
add
clc
or
xorl
inc
adc
add
or
push
ficoml
xor
in
sbb
and
and
adc
sbb
lock
enter
add
scas
pusha
push
es
adc
add
iret
ret
lret
sub
add
lcall
cmp
mov
incb
cltd
and
clc
adc
xchg
fwait
push
add
xchg
and
or
jg
test
inc
leave
mov
addl
pop
add
outsl
dec
push
mov
jae
cmp
lods
enter
add
cmp
and
cwtl
mov
pop
stos
pop
lret
js
fcompl
add
dec
mov
leave
sub
iret
scas
sbb
pop
and
scas
fimuls
sarl
cmpps
in
mov
pop
add
push
roll
push
add
inc
cmp
cld
rolb
pop
enter
and
lea
inc
icebp
add
pushf
lcall
push
push
cltd
data16
add
and
je
add
xor
dec
imul
out
mov
loopne
data16
loope
xchg
fistpll
hlt
ljmp
sbb
adc
jp
pop
data16
fidivs
sbb
shl
int3
roll
outsb
pusha
notb
ret
add
mov
inc
loope
aam
xchg
adc
dec
push
add
push
add
pushf
adc
and
faddp
add
mov
hlt
test
enter
and
and
es
dec
imul
stos
inc
push
and
pop
mov
pushf
enter
cvtps2pd
or
cmp
add
lahf
add
insl
arpl
mov
gs
std
adc
inc
cli
inc
cld
inc
or
sbb
sti
sbbb
xor
popf
and
sahf
adc
dec
lods
or
xchg
leave
sbb
popa
dec
mov
cmpb
mov
jo
insb
inc
shlb
fisttps
pop
ja
mov
loopne
cmpsb
rorl
adc
popa
fistpl
pop
sti
test
mov
sub
loopne
lret
jae
filds
mov
xor
add
and
notb
mov
and
add
nop
sahf
adc
int3
test
mov
sbb
fsubl
outsl
incb
push
dec
test
pop
ds
add
lods
mov
jns
inc
sbbb
and
mov
pop
and
inc
rclb
xor
mov
xchg
das
mov
add
dec
subb
xchg
add
add
mov
mov
je
in
mov
orb
sbbl
int3
mov
jle
jb
orl
add
test
lock
mov
add
test
push
iret
ja
lods
adc
shll
sub
pop
sahf
pmulhw
loopne
xor
outsl
sbb
sbb
mov
ds
pop
icebp
jge
inc
test
out
or
add
jmp
add
lret
push
daa
jg
pop
xchg
adc
js
inc
xor
mov
cmpsb
lcall
sbb
pushf
sbb
loopne
cli
imul
movsb
movsl
add
mov
lds
loopne
inc
pop
jo
cmpsl
seta
clc
pop
add
sbbl
mov
pushf
add
fbstp
xor
imulb
jmp
add
add
popf
aam
rol
sub
add
push
insl
jne
cmp
pusha
xchg
inc
sbb
into
ror
lcall
sbb
iret
push
bound
shlb
mov
sti
add
cltd
sub
test
repnz
imul
and
dec
mov
subl
cmp
sub
aaa
fcoml
cmp
and
sahf
inc
rcll
cs
xchg
jb
add
or
shrb
rorl
push
add
insl
and
test
roll
jbe
jge
sbb
dec
mov
pop
jg
pop
scas
insb
mov
add
sub
push
sbb
xchg
pop
sbb
xor
jae
mov
and
icebp
dec
or
pop
and
ja
sbb
or
repz
cltd
add
xor
mov
lahf
jo
pop
mov
sar
add
mov
mov
and
jo
out
ljmp
jge
je
mov
nop
sbbl
and
je
pop
fs
lea
mov
adc
mov
add
jnp
daa
push
lret
jle
add
repnz
sti
xor
add
inc
dec
fmull
and
or
test
xchg
jle
rcrb
add
pop
jo
out
jno
mov
aad
rcrb
bound
lds
mov
jo
sub
pop
ja
adc
add
sbb
gs
lea
inc
sbb
and
out
dec
ds
adc
popa
jne
add
cli
pop
rol
shll
repz
outsb
inc
xor
or
pop
loop
pop
sub
adc
adc
add
mov
and
ficompl
add
sub
int
jo
add
xchg
jb
mov
test
cmp
popa
daa
add
in
insb
dec
scas
out
add
push
sub
pop
cmpl
int3
js
mov
mov
fs
inc
or
stos
push
add
imul
pop
add
xchg
in
mov
fiadds
movsb
xchg
xchg
test
sub
and
pop
fdivrl
bound
aam
out
mov
or
das
sub
cmp
add
into
loopne
cmp
bnd
fdivl
mov
inc
mov
add
pop
or
sub
jl
and
dec
xchg
xlat
sahf
mov
add
or
ja
test
mov
inc
inc
in
cmp
jecxz
pop
movl
outsb
jo
das
or
jge
pop
pop
roll
jo
icebp
adc
test
xchg
push
or
sub
cmp
push
pusha
jl
jmp
add
push
and
sbb
sti
inc
rolb
outsb
pusha
dec
adc
add
repz
decb
stos
addb
and
out
int
mov
lret
lock
xchg
cmp
jno
pop
rcr
or
cmpb
lea
roll
add
leave
nop
add
add
sub
notl
repz
mov
add
adc
or
xor
test
dec
in
add
fldl
outsl
mov
insl
ror
lret
add
bound
dec
inc
rcl
push
xchg
repz
add
movl
shl
xor
pop
repz
pop
and
inc
test
add
add
cmovne
lahf
pusha
loope
daa
loopne
hlt
aam
or
das
aad
add
mov
sti
enter
push
cli
fadds
rcll
jecxz
add
cmp
mov
cli
test
sbb
faddl
dec
sub
dec
les
shll
inc
dec
mov
and
sbb
cmp
jl
pop
fmul
divl
inc
mov
lods
ret
clc
sbb
shlb
out
add
ret
jo
rep
popl
dec
decb
shlb
out
jns
pushf
lahf
push
js
or
dec
pop
arpl
lods
leave
jo
popa
mov
lahf
add
outsb
rcrb
push
in
hlt
in
shlb
mov
pop
xchg
push
push
jmp
add
lret
jl
stos
fdiv
rorb
adc
int3
gs
iret
jl
add
mov
inc
mov
adc
mov
cli
shlb
ds
push
cs
xchg
cmp
test
rcl
jge
add
arpl
push
cmp
pop
adc
mov
scas
in
push
dec
and
push
inc
popa
fcomps
push
jnp
add
push
adc
mov
scas
add
mov
add
stc
sti
mov
dec
iret
hlt
das
js
mov
pop
arpl
lds
ret
rolb
mov
push
sbb
add
dec
push
mov
call
ss
mov
leave
aad
les
repz
dec
mov
dec
dec
stos
mov
add
cltd
add
add
adc
cmp
xchg
outsb
mov
mov
inc
sub
jbe
push
lock
add
sahf
push
loop
inc
clc
push
rolb
dec
sub
fs
lock
add
repnz
out
xor
ds
stos
hlt
add
add
pop
jg
clc
and
pop
pushl
xlat
sub
out
mov
cmp
icebp
mov
add
or
ss
jge
push
js
cmp
add
adc
fdivl
stc
cmp
add
mov
daa
js
add
mov
inc
fiadds
movq
mov
es
push
repz
xor
push
xor
add
jp
add
or
push
mov
push
popf
and
pop
add
clc
inc
sbb
cmp
inc
xor
mov
add
or
cs
cmpsl
push
ret
daa
jns
adc
and
or
lea
aad
cs
xchg
dec
add
dec
jno
in
mov
and
push
inc
xor
fsubrs
incl
ds
cmp
or
insl
sbb
mov
mov
mov
sub
pusha
inc
inc
cmp
daa
lcall
add
mov
add
xor
push
and
or
mov
jmp
xchg
dec
pusha
adc
add
call
dec
aaa
push
adc
add
add
jae
push
lcall
pushf
setbe
loopne
fcoml
ret
xchg
mov
in
push
add
mov
repnz
xchg
push
adc
loopne
mov
or
div
xor
pushf
dec
sbb
js
add
inc
jns
loopne
test
jle
nop
je
inc
fbstp
jmp
daa
cmp
cmp
sti
cli
jge
cmpsb
imul
mov
mov
out
add
lds
inc
iret
fisubs
ret
xor
mov
cmp
and
sub
cld
es
cmp
bound
fistps
add
and
pop
in
cmpl
stos
add
mov
add
adcl
mov
dec
jb
adc
inc
lahf
push
sub
add
or
inc
add
gs
push
movsl
adc
lea
adc
xchg
dec
xlat
push
pop
jo
outsl
add
fwait
add
scas
int
mov
cmpsb
inc
lahf
or
push
lock
dec
adc
jae
or
mov
ret
js
mov
add
jecxz
das
je
rorb
and
test
andb
mov
mov
fs
int3
and
dec
inc
cld
gs
add
mov
add
mov
fsub
stos
add
mov
and
les
adc
ss
outsb
add
and
add
out
cli
ret
dec
pop
sahf
mov
pusha
sbb
sub
imul
in
add
adc
or
std
sahf
add
shrl
aas
jo
mov
les
enter
in
vpsrlw
push
mov
and
psllq
lods
int3
pop
in
mov
sub
shr
and
cmp
in
lds
adc
add
sti
lahf
pop
movsb
ds
add
dec
xchg
sbb
jecxz
add
into
fisubrs
xor
cwtl
rcl
and
out
aad
mov
lods
data16
pusha
into
cmp
dec
add
sub
mov
hlt
add
xor
lea
repnz
dec
sbb
ret
pop
xor
out
pop
lock
or
jae
les
mov
sbb
push
fcomps
push
mov
in
outsb
inc
push
inc
inc
adc
in
and
jne
inc
dec
addl
mov
or
inc
push
mov
inc
push
adc
add
add
daa
jecxz
fsubrs
xlat
sub
push
xor
pop
mov
str
dec
adc
add
jmp
call
push
push
or
imul
roll
andb
cmp
repnz
pop
pop
test
add
rolb
sbb
xchg
in
daa
out
mov
cld
lahf
add
mov
inc
add
fldcw
sbb
sbbb
das
xchg
fucomp
loop
aas
or
jl
sub
add
push
push
add
cld
jge
add
and
incl
data16
rcrl
mov
add
mov
push
addl
test
aam
outsb
add
cli
adc
pop
add
lahf
std
cmp
and
lds
mov
pushf
push
cwtl
ds
fnstenv
and
inc
or
loop
xchg
pop
mov
add
jle
sub
mov
jecxz
daa
call
mov
shrl
test
and
xchg
lea
mov
insb
hlt
leave
fiaddl
loopne
stos
add
xor
xchg
adc
sbb
push
cwtl
mov
cmp
inc
and
clc
xchg
add
enter
jl
mov
add
je
add
jb
xor
add
or
jg
add
popa
pop
ret
dec
mov
outsb
or
or
js
push
or
loope
push
adc
add
push
fisubs
cmp
outsl
cmpsl
add
test
lahf
adc
push
shll
adcl
cmp
mov
xor
test
mov
cmpsl
pop
in
sbb
outsl
xchg
add
adc
pop
int3
add
or
dec
aam
cs
dec
add
mov
sub
iret
outsl
jg
inc
imul
cwtl
dec
les
inc
out
pop
lea
fsubs
fimull
mov
inc
pop
jns
add
add
dec
dec
or
add
insb
aam
mov
mov
mov
call
adc
nop
xor
stos
and
xor
inc
loopne
add
in
sub
jp
add
cmp
test
pop
adc
pushf
lds
jae
out
cmpsl
jnp
popa
add
jge
fcom
loope
fiadds
or
int3
cmc
and
xor
xor
sub
or
jl
mov
mov
lods
notl
mov
push
add
repz
xor
pop
add
fstps
rorb
add
cmp
in
inc
hlt
fiadds
sahf
repz
add
subb
rorb
sub
icebp
neg
push
xchg
test
jb
hlt
jmp
add
cs
cmovae
cmp
mov
inc
mov
fwait
in
sub
mov
fldcw
add
xorl
dec
std
movsl
divl
xchg
mov
js
add
add
dec
decl
stos
pop
sbb
adc
fnsave
xor
cmc
add
jae
out
adc
mov
mov
cmc
add
mov
dec
adc
mov
sbb
jo
decl
addl
pop
xchg
sarb
jo
ja
sub
notl
mov
stos
xlat
clc
leave
gs
les
rclb
orb
dec
shll
mov
rcll
push
mov
sub
or
imul
test
add
out
nop
mov
pop
xchg
xchg
jmp
dec
jo
jne
pop
aas
daa
fildl
jmp
add
xchg
iret
fisubrs
lcall
mov
or
out
jle
add
gs
sarb
dec
dec
cmp
fmulp
inc
fstl
ds
incl
lods
clc
dec
nop
push
mov
dec
cmp
test
popf
pop
cli
inc
shlb
jo
cltd
and
inc
add
pop
add
lret
lock
cmpsl
add
mov
and
ds
dec
aas
pop
les
xor
add
mov
cltd
daa
adc
enter
xor
lods
xor
ja
cmp
pushf
xchg
and
inc
jmp
aad
enter
fcmovb
loop
ss
jbe
out
mov
add
ja
jns
inc
mov
xchg
jbe
fcomps
out
aam
mov
push
and
dec
jne
lcall
jge
movsb
add
push
ds
jnp
fs
repz
add
xor
or
and
add
add
inc
mov
add
mov
fstp
call
or
repz
aas
adc
sarb
in
add
das
sub
push
inc
inc
enter
out
jne
cld
inc
loopne
adc
sbbb
xchg
xchg
es
loopne
cmc
outsl
xor
aam
mov
sub
es
pop
add
stos
and
cmpsb
shl
mov
aas
shlb
mull
add
jmp
gs
loopne
cmp
push
jo
loope
jg
arpl
ret
jo
pop
jmp
push
pop
xor
jno
scas
out
add
outsb
lret
cmp
pop
add
sbb
xor
push
cltd
testl
scas
lahf
add
push
or
adc
in
pop
lds
gs
sbbb
ss
mov
and
pop
or
dec
mov
lods
push
test
dec
and
loopne
subb
jl
push
js
sub
xor
push
adc
pop
leave
adc
dec
popf
outsb
cmp
test
cltd
insl
add
cmp
dec
pop
xor
inc
cmp
sub
inc
roll
andb
mov
push
icebp
add
and
imull
outsb
hlt
jb
lahf
in
sbb
aas
or
out
testb
sbb
dec
adc
add
mov
pop
push
add
cmc
shlb
mov
pop
movsl
rolb
gs
cmp
scas
pop
mov
cmc
and
es
or
dec
sbb
push
test
dec
mov
add
cmp
call
add
mov
iret
add
mov
out
mov
xchg
rol
flds
insl
lea
adc
enter
ret
pop
add
mov
stc
ds
or
xchg
aam
testl
outsl
add
adcb
push
rol
cmp
mov
popf
mov
push
sbb
frstor
inc
xor
int3
push
and
fmuls
mov
rorb
cmp
ret
hlt
fidivrl
pop
mov
xchg
test
xchg
push
in
fimuls
add
fwait
or
popa
ret
cmp
cmpsl
arpl
movsl
mov
setg
faddp
lds
pop
les
xchg
dec
rep
xchg
add
or
lret
mov
cwtl
fcomps
mov
imul
faddl
hlt
push
cmc
inc
movsb
dec
les
fistl
test
into
lock
pop
fs
loope
sub
xor
mov
int3
mov
stos
cmp
add
std
push
lcall
add
pop
addl
cli
xchg
aam
rolb
sbb
adc
shr
inc
rcll
jmp
test
cmp
sub
dec
jae
push
sub
sbb
nop
or
xor
addr16
mov
sbb
cwtl
daa
push
ljmp
test
pop
sub
add
movsb
add
mov
add
sub
xchg
mov
or
or
inc
cli
xorl
add
test
mov
sub
les
sub
test
adc
mov
ljmp
ja
cwtl
and
xchg
nop
fadds
mov
fwait
push
pop
push
aas
notb
inc
mov
push
mov
gs
adc
add
movsl
sarl
loope
sub
sub
xchg
inc
cmp
jne
dec
or
adc
cmp
jle
sahf
push
jmp
nop
dec
icebp
test
add
mov
and
mov
jb
add
push
int
test
mov
out
in
insl
push
xchg
inc
ficomps
sbb
imul
mov
lock
and
and
jnp
in
cmp
adc
xchg
andb
scas
je
add
pop
pop
jbe
push
cmp
outsl
daa
mov
jnp
add
xchg
in
or
aam
mov
test
fcoms
sbb
int3
jo
push
sub
lcall
adc
in
addr16
push
push
test
jle
aaa
xlat
pop
mov
add
sbb
adc
repz
add
sub
lock
sub
stc
pop
sub
les
or
mov
fldcw
push
push
add
sub
mov
aam
imulb
lock
cmp
out
inc
or
test
jmp
pop
rolb
seto
inc
fstps
out
push
mov
cmp
add
xlat
push
cwtl
cmpl
hlt
mov
add
lcall
or
sub
add
xor
push
add
pop
call
adc
aam
cmpl
fwait
jo
add
fsubl
test
mov
cmp
nop
xchg
out
repz
dec
jmp
mov
arpl
shlb
mov
jns
inc
rolb
scas
cmp
add
mov
add
cld
js
add
add
pusha
int
or
sub
xchg
sbb
xchg
repz
jne
adc
xchg
inc
pop
cmp
loopne
aaa
pop
pop
out
call
icebp
dec
cmpsb
xchg
lods
or
lret
and
insb
mov
aad
and
sarb
mov
loopne
clc
rorl
dec
jne
std
pop
int3
add
test
cwtl
pop
add
jge
arpl
pop
rcrb
lea
andb
call
int
sti
jbe
add
push
inc
add
or
mov
outsb
fs
insb
jns
add
scas
xor
daa
push
cmp
ds
xchg
or
sbb
scas
mov
sahf
push
push
test
xor
gs
mov
add
mov
push
mov
clc
fisttpll
ds
arpl
mov
cmp
cmpsb
or
or
hlt
frstor
ja
adc
popa
add
push
or
push
sti
pop
cld
jg
pop
pusha
push
add
aas
lock
roll
loopne
jne
add
popf
imul
repnz
shrb
pusha
pop
popf
xchg
testl
pop
xor
add
and
push
mov
arpl
repz
sahf
addl
dec
add
hlt
add
add
icebp
cmp
sbb
jae
jnp
pop
sbb
pop
add
enter
lods
stos
jb
les
pop
andb
mov
pop
mov
xchg
or
test
mov
bswap
dec
mov
pop
jnp
add
adc
aaa
inc
adc
cli
in
xor
add
fistl
pop
rclb
ljmp
inc
rorl
xchg
hlt
and
movsl
or
mov
mov
pop
sub
movsb
out
add
inc
jo
adc
addr16
add
pop
lret
cmpl
popa
cwtl
cmp
add
xor
adc
cltd
add
adc
jns
jnp
push
add
jae
inc
repz
xlat
mov
fwait
enter
adc
add
jle
scas
out
jne
and
push
or
fs
xchg
cmp
add
xchg
xchg
pop
cld
stc
adc
std
add
fmull
inc
push
add
xor
out
jp
repnz
dec
push
ja
aaa
movsb
add
dec
push
hlt
out
add
icebp
sbb
cld
adc
dec
pop
sub
call
nop
sbb
add
cmpsb
inc
std
popa
nop
or
scas
pop
add
fs
repnz
add
iret
push
out
cld
inc
je
push
shlb
ret
mov
inc
into
dec
je
ds
dec
imul
scas
sub
jecxz
fcmovnu
xorb
adc
nop
shrb
or
ds
pop
or
push
enter
cs
jl
xchg
push
fdivrp
cmp
mov
sbb
push
aam
add
inc
mov
dec
fsubl
adc
mov
sahf
lds
sbb
jns
icebp
and
daa
adc
lcall
lahf
std
lahf
or
addr16
lcall
in
adc
loopne
or
push
cltd
sbb
inc
shlb
dec
xchg
sarb
aas
testl
test
fxsave
outsb
cwtl
sbb
xchg
negb
into
pusha
xchg
push
dec
mov
jle
lea
xor
cli
jg
add
cld
into
cltd
in
inc
add
adc
lret
addb
xchg
mov
jns
lea
cltd
or
add
lods
add
mov
xchg
lahf
mov
mov
shl
stos
scas
jle
mov
xchg
lock
mov
add
adc
fiaddl
or
mov
incb
mov
jbe
bound
jne
pop
sahf
fcoml
add
not
jmp
rolb
outsl
push
pop
xchg
pop
cmp
adc
sbb
loope
add
out
sahf
pusha
outsb
imul
testb
dec
or
jno
shl
cltd
mov
bound
sub
les
test
push
popa
pop
jae
shrl
adc
ret
lcall
jp
into
jns
sbb
leave
inc
mov
ret
push
stc
insl
sub
orb
mov
and
jp
jb
scas
inc
mov
jo
pusha
add
hlt
fwait
ja
inc
xor
or
into
cmp
jns
or
mov
add
pop
push
cmpb
inc
jno
dec
shrl
mov
repnz
jl
jns
leave
dec
xchg
cmp
lock
rcrb
inc
sub
int3
cmp
dec
shlb
les
push
and
cwtl
inc
sub
mov
add
loop
mov
jbe
lock
mov
fwait
xchg
in
aad
xchg
push
fildl
mov
add
add
cmp
lcall
mov
jo
scas
mov
cmp
xchg
mov
ficoml
pop
add
repz
sahf
sbbb
call
stc
pop
push
push
pop
push
dec
jge
and
lods
inc
mov
jp
add
es
and
or
and
or
push
jle
add
arpl
add
incb
cmpsl
or
and
push
mov
sbb
sbb
mov
loope
call
inc
ljmp
scas
ret
pushf
mov
idiv
nop
mov
mov
outsb
jmp
loop
pop
add
jecxz
mov
leave
or
and
add
addr16
test
or
mov
addl
or
hlt
add
mov
push
mov
cmp
xorb
and
sbb
jbe
cmp
sti
lods
inc
pop
xchg
push
sub
push
jmp
outsl
cld
js
rcl
add
push
pop
mov
fptan
jne
and
add
cmp
roll
andb
inc
int
dec
scas
and
mov
dec
adc
add
mov
xor
fsubrs
sti
and
mov
cmp
xor
out
enter
jge
icebp
sbb
scas
add
sbb
ja
test
pop
cmp
sbb
aam
jno
inc
add
sub
and
adc
test
mov
jo
push
jmp
enter
lldt
lds
js
inc
pop
arpl
popf
and
bound
jns
or
cmp
cmpsl
or
les
add
xor
test
jl
inc
ds
inc
lcall
fisubs
cmp
sbbb
std
jecxz
cwtl
or
xchg
or
or
adc
cld
mov
shll
sbb
push
sbb
and
mov
pop
fnsave
idivl
xor
adc
dec
cld
pop
aas
xchg
addl
jl
call
mov
ror
inc
ret
xor
push
mov
pusha
and
add
clc
ficoml
arpl
add
lds
jae
add
mov
dec
xchg
rcr
mov
into
imul
sbb
or
adc
ja
and
inc
push
in
leave
push
add
aam
mov
pop
xchg
or
je
mov
cmpsb
add
stos
vcvttss2si
sbb
inc
movsb
add
mov
lret
mov
or
add
cmpsb
push
nop
add
imul
pop
mov
sbb
adc
hlt
mov
loope
adc
lds
and
aas
xchg
sarb
push
lock
sub
adc
fs
inc
inc
ja
popa
inc
adc
push
xor
and
adc
add
pushf
ljmp
add
mov
push
aam
sbb
xor
test
mov
incb
test
in
add
mov
jecxz
fsubl
add
loopne
aam
scas
cmp
mov
lcall
push
add
jb
out
add
ror
push
cltd
sub
je
xchg
push
testl
cld
sbb
and
cmp
add
jno
xor
and
sub
push
or
add
fnsave
cmpb
rolb
push
mov
daa
arpl
or
or
in
clc
inc
scas
inc
push
xor
shlb
dec
mov
jo
add
inc
jbe
rolb
cmp
stos
int
add
sub
add
inc
pop
roll
adc
jecxz
cwtl
xor
nop
out
mov
sti
push
add
xor
leave
inc
fucom
fs
inc
mov
shlb
lcall
int3
push
dec
inc
bound
pop
ret
clc
sbb
lds
js
add
mov
negb
sbb
push
outsb
push
pop
mov
pusha
mov
sbb
cli
jg
cmp
xchg
inc
dec
add
cmpsl
orb
add
inc
shrl
pop
cmp
aas
stos
add
jmp
andb
mov
ret
outsb
sti
sbb
add
xor
or
mov
fyl2xp1
roll
or
xchg
mov
inc
cmp
cwtl
add
popa
cmpsb
std
cltd
sysexit
mov
aam
add
push
pusha
movsb
mov
pop
cmpsl
adc
add
mov
clc
jae
insl
scas
add
push
icebp
push
sub
push
mov
inc
xchg
imul
std
cmp
sbb
mov
xor
and
push
mov
pop
out
and
nop
mov
les
je
add
adc
sbb
inc
in
sti
mov
inc
mov
mov
push
repz
and
sub
jno
add
and
ret
inc
jg
cmp
sti
or
cli
dec
mov
iret
gs
xor
popf
xchg
orb
xchg
outsb
push
lcall
repz
dec
add
enter
adc
inc
sub
mov
cmp
jle
mov
fcomps
lret
sub
in
add
pop
fcompl
dec
dec
jbe
add
adc
pop
cmp
addr16
xor
imul
imul
pop
sti
add
pushl
cmc
pop
scas
add
movsl
push
adc
inc
and
fiadds
cmp
lcall
add
pop
fisttpll
add
cmp
adc
inc
ret
notl
lea
push
xchg
mov
mov
mov
add
cmovnp
pop
sbb
aaa
push
outsl
adc
scas
add
push
aam
dec
sbb
dec
and
loopne
lcall
in
fwait
sub
add
jns
dec
add
lods
jmp
std
xchg
in
lahf
ss
xor
mov
and
add
mov
add
lods
mov
imul
inc
push
jno
mov
bound
das
jns
or
adc
aam
sub
dec
mov
lret
lahf
mov
sub
inc
mov
in
add
idivb
lea
lock
addb
adcl
rclb
fisttpl
imul
ret
pop
pop
rorb
jge
jnp
and
js
out
cmp
scas
aad
out
xchg
jmp
out
sub
add
and
sahf
add
mov
daa
dec
out
add
and
addl
bound
ret
out
pop
dec
push
rcrl
mov
inc
sub
clc
test
xchg
iret
push
mov
xor
test
fsts
mov
das
pusha
dec
sub
add
cmp
scas
cmp
hlt
out
mov
inc
xor
mov
cmpb
jns
imul
add
mov
sar
rolb
insb
nop
adc
in
clc
shll
add
sbb
ret
inc
mov
or
mov
cwtl
rolb
insl
xchg
loopne
mov
jge
movmskps
pop
call
aaa
mov
pop
enter
mov
add
ds
mov
rorl
cmp
gs
fwait
cli
popf
cmp
add
inc
add
xchg
das
dec
add
pop
cmpsl
sub
lock
aas
pop
lods
add
sub
add
pop
mov
fdivr
hlt
add
int
js
test
inc
adc
add
movsl
out
inc
mov
xchg
mov
fadds
je
pop
jne
jbe
call
pop
js
pop
push
pop
pushf
lds
pop
sub
dec
jmp
sub
fsubrs
or
or
test
xchg
pop
nop
inc
fsubrs
pop
das
cltd
jle
xor
cmpl
push
xor
inc
insb
adc
sub
mov
cmp
in
testl
lahf
hlt
ss
ds
imul
rolb
cmpb
incb
or
into
lret
shll
pop
stc
add
mov
std
lcall
incb
and
inc
call
testb
pop
jns
mov
push
test
add
inc
jmp
jnp
les
xor
xchg
xlat
cmp
add
push
inc
or
clc
fiadds
adcb
adc
mov
lret
jb
cs
or
fs
ret
push
data16
mov
hlt
ud2
pop
lret
popa
add
dec
dec
into
sbb
shll
pop
fldl
cmpsb
pop
movsb
bound
sbb
mov
stmxcsr
dec
jmp
add
dec
or
add
lret
pop
pushf
mov
cwtl
add
xor
add
loope
scas
iret
xchg
testl
rolb
jl
mov
insb
pusha
ret
stos
dec
test
cmp
adc
mov
jge
add
imul
pop
pop
push
push
mov
addb
or
imul
flds
call
adc
adcl
ljmp
lret
pop
inc
mov
cmp
cltd
mov
push
cld
shlb
mov
jbe
jmp
sbb
test
lock
cs
jge
lahf
add
cmp
int3
fs
sbb
dec
lret
inc
not
push
arpl
mov
pop
pop
cmp
stc
gs
sarb
daa
pop
out
pusha
pop
dec
in
mov
jp
aam
cmp
bound
mov
mov
cmpsb
push
pop
stc
xor
lds
push
or
cmpsl
push
sbb
add
mov
cmp
mov
add
outsb
inc
daa
pop
rolb
pop
jb
add
jecxz
jne
add
and
mov
fidivrs
call
mov
icebp
outsl
out
dec
jo
jo
adc
sub
loope
mov
add
sbb
push
inc
lock
inc
add
fwait
cmp
nop
sub
inc
rcr
pop
and
mov
cld
cmp
out
pop
cmpsl
fwait
insl
cmp
addb
cmp
lahf
push
add
adc
rorl
and
or
or
cmp
add
dec
in
mov
sub
add
cmpsb
mov
lea
push
fstpl
mov
addr16
call
add
sub
loope
stc
sarl
out
xor
inc
xorb
and
popl
dec
pusha
pusha
xchg
add
xchg
lock
add
into
or
rolb
insb
bound
push
ljmp
add
test
lret
add
add
in
mov
cmp
adc
fistpll
or
int
lds
pop
loopne
add
mov
mov
sub
inc
pop
fldl
scas
stos
cmp
xor
js
inc
pop
sbb
repz
sub
inc
mov
xor
aaa
pusha
dec
xor
jo
xchg
jge
add
sub
addr16
xor
inc
xchg
mov
mov
push
jl
movsb
and
pusha
pop
xor
sbb
or
ret
dec
and
dec
divl
add
sub
adc
jne
add
jns
stos
or
push
pop
outsb
cmc
sbbb
cmp
add
dec
shrl
bnd
filds
pop
lahf
ljmp
or
add
sarb
cs
cli
cld
add
inc
mov
cmp
adc
das
pop
data16
push
push
xchg
imull
add
jno
adcb
and
mov
xor
or
xchg
or
iret
or
in
sub
adc
clc
push
mov
idivl
sub
inc
and
add
dec
mov
js,pn
add
sub
cld
pushf
xor
das
clc
in
adc
into
or
lock
cmp
mov
sbb
or
int3
xor
and
and
jno
js
jecxz
lea
movsl
adc
aam
xchg
xor
sbb
pop
test
push
dec
pop
sbb
and
pusha
fsubs
out
adc
dec
hlt
cmpsl
pop
mov
inc
add
sbb
xor
mov
push
push
push
push
sbb
aam
cmp
add
lea
jbe
or
mov
xor
xor
add
lcall
add
push
int
popf
mov
xchg
push
fisubrl
icebp
sub
dec
inc
pusha
add
sbb
fabs
xlat
add
imul
jecxz
add
inc
sbb
pop
xchg
add
mov
test
fisubl
mov
xchg
mov
ja
test
addl
insl
mov
pop
into
test
jae
bound
out
dec
push
cmc
shlb
add
fsubrl
cwtl
shr
add
xor
iret
push
lods
or
bound
and
loopne
out
int
aam
cmp
mov
aam
sub
add
pop
rorb
pop
stos
aaa
add
pop
jmp
cmp
pop
shr
negb
push
mov
shl
orl
xlat
fisubs
sbb
mov
das
mov
cmp
hlt
fiaddl
adc
pop
popf
add
mov
add
or
jp
add
andb
hlt
mov
cltd
pop
xorl
mov
add
je
dec
insl
daa
test
jg
inc
adc
pop
test
cmp
add
outsb
xor
lods
push
dec
sti
fs
loope
pop
mov
mov
gs
fistps
xchg
adc
pop
mov
adc
movsl
nop
outsl
hlt
cmc
cmp
lods
icebp
sti
mov
fs
imul
mov
jl
add
bound
scas
add
test
add
out
sub
aaa
sbb
inc
jb
into
or
mov
pop
adc
loop
sbb
mov
xor
adc
push
ret
add
insl
jno
clc
xchg
sbb
pop
or
xor
inc
loop
lahf
sahf
push
mov
je
jo
and
mov
mov
pop
add
sub
pop
test
popa
cmp
sbb
lahf
xorb
pop
aad
dec
add
movsb
push
pop
mov
and
mov
dec
dec
mov
xor
aam
sub
add
mov
fsubs
call
xchg
jecxz
mov
fiaddl
in
lahf
add
shrl
cli
and
das
add
flds
imul
push
roll
andb
cmp
andb
inc
mov
sbbb
gs
or
outsb
imul
or
xor
jl
mov
push
cmp
add
xor
cli
adc
jne
add
or
pop
add
outsl
cltd
xor
ds
movsb
daa
add
out
xor
rol
test
adc
sbb
adc
and
popf
or
mov
in
push
pop
pop
add
xchg
addb
cmp
call
fmuls
pop
mov
add
mov
fstpl
in
dec
test
cmp
test
cmpb
add
adc
lahf
xchg
add
rolb
js
add
sar
push
out
add
xchg
adc
cmpsb
cmp
pop
mov
and
loope
repz
push
pushf
add
mov
dec
mov
add
cmp
sub
lret
ja
out
sub
leave
jmp
fdivrs
aas
inc
lds
sub
mov
cmp
xor
add
sub
sbb
and
insl
lret
push
xlat
or
push
movsl
inc
cld
scas
dec
and
push
mov
add
add
loop
cmp
movl
xor
add
out
pushl
mov
push
xor
sub
adc
das
inc
subb
cli
pop
sub
fsubl
cltd
hlt
ret
mov
sbb
nop
mov
sub
cmpb
imul
jno
jo
sub
arpl
jmp
repz
mov
xchg
jbe
add
nop
clc
lcall
pushf
cmp
jmp
mov
mov
mov
enter
call
add
fdivrl
and
inc
gs
cltd
cmp
sar
fimuls
cmpb
test
or
pop
mov
mov
xchg
popa
std
add
data16
das
push
aad
fistps
xchg
inc
add
cmpsb
dec
jmp
out
mov
jecxz
and
add
sbb
push
clc
xchg
add
and
xchg
add
inc
roll
jo
add
sbb
jg
nop
adc
pop
lret
push
push
or
add
mov
pop
add
out
enter
sub
push
adc
mov
mov
sub
push
add
mov
into
mov
cmp
stc
and
push
sub
hlt
enter
fbstp
xchg
iret
push
add
jmp
dec
cld
shll
pop
and
aaa
pop
inc
push
cs
arpl
sbb
dec
rcrb
mov
out
jbe
mov
lret
xlat
add
fstpt
pop
sysret
lock
js
adc
in
lret
mov
add
and
or
ror
call
je
movl
xchg
adc
add
jno
ret
add
int
mov
scas
jmp
scas
int3
or
xchg
and
gs
clc
mov
or
sub
and
cld
jbe
push
add
ss
mov
cmpsb
xchg
or
push
clc
notl
popa
inc
add
xchg
dec
insb
mov
mov
sub
cmc
cmp
xchg
jge
cld
push
js
shll
lds
add
add
scas
add
add
push
jl
add
movsl
mov
or
adc
ficompl
stos
mov
scas
add
loop
adc
into
xchg
add
dec
mov
stos
xchg
add
mov
je
add
pop
xchg
add
notl
fldt
shlb
xchg
jb
jno
mov
mov
add
add
add
mov
jmp
loopne
leave
psubb
fs
pop
mov
jg
clc
addb
sub
popa
enter
add
loop
xor
push
fisttpll
xchg
das
movsl
add
jno
and
add
or
cmp
orb
test
mov
adc
cs
dec
mov
ds
jae
mov
sahf
cmpb
mov
addb
sbb
notb
vpcmov
daa
pop
rep
call
add
cli
outsb
dec
xor
and
pop
or
jg
movsl
iret
sub
and
repnz
scas
ss
ljmp
or
ret
xchg
sbbb
xchg
js
add
arpl
xor
std
dec
aas
sub
loopne
popf
pop
dec
lds
insl
popa
jecxz
fnstcw
test
pop
pop
adc
gs
and
fisttpll
jle
inc
xor
loopne
imul
jmp
dec
pop
int3
sbb
add
in
test
scas
jg
cmp
sub
pop
sbb
or
pop
sbb
add
lahf
dec
push
add
daa
cmp
popa
push
xchg
mov
lock
and
pop
fiadds
scas
insl
xor
add
push
push
sbb
fidivrl
mov
pop
cmpsb
or
add
in
mov
je
andb
inc
test
adc
mov
adc
sbb
or
xor
mov
cmp
xor
loopne
repnz
add
jae
bswap
faddl
dec
ja
dec
testb
push
push
cmp
mov
nop
mul
xor
loopne
testb
stos
inc
scas
xchg
fiaddl
sub
push
lret
aam
nop
or
loopne
ret
dec
nop
les
add
rcl
inc
fwait
xor
inc
or
pop
or
or
add
mov
xchg
lock
push
movsb
pop
add
inc
jae
inc
aas
or
add
jnp
mov
addb
mov
jle
push
xchg
and
cltd
add
or
jbe
or
and
mov
lahf
icebp
stos
loop
push
cli
sarb
xchg
push
sbb
das
pop
filds
cmp
arpl
lds
add
xor
roll
andl
sbb
and
iret
push
pushf
add
mov
xorl
xchg
repz
add
das
pop
cltd
inc
dec
pop
adc
pop
test
mov
adc
mov
push
lods
adc
dec
daa
cmp
push
pop
int3
sbb
sahf
bound
or
inc
mov
inc
jo
ret
add
xor
push
and
push
mov
push
pop
jge
mov
ror
dec
xchg
cmp
fs
or
add
imul
loope
insl
js
add
jmp
cmp
add
inc
lods
pop
mov
stos
in
sub
inc
jno
mov
add
sbb
test
cmp
outsb
mov
mov
nop
add
add
dec
and
lcall
mov
inc
add
hlt
sarb
movsb
inc
stc
or
xchg
jo
js
sbb
enter
xchg
add
sarl
ds
lea
and
loope
rcrb
jnp
push
xchg
dec
cmpl
add
lods
lret
arpl
lahf
add
aad
add
mov
push
add
stos
dec
and
cmp
test
jo
pop
jnp
sbb
in
sbb
fadd
aaa
leave
fisubs
loopne
jno
dec
das
rolb
lcall
mov
push
and
add
sub
in
push
push
ds
orl
inc
mov
nop
push
out
punpcklbw
add
fisubs
xchg
leave
in
cld
dec
lods
sub
sub
stos
leave
pusha
js
cmc
add
inc
cltd
jmp
cmp
mov
arpl
inc
cmpsl
adc
pop
push
add
push
mov
outsb
insl
add
and
out
stos
stc
dec
adc
leave
and
jbe
adc
loope
sbb
and
popa
xchg
gs
test
and
andb
dec
int
adc
addl
pop
test
pop
add
dec
out
int3
inc
jle
add
stos
cwtl
fsubs
hlt
add
orb
fcoms
xor
add
fisubl
cli
pusha
adc
loop
enter
movl
or
js
cwtl
add
fdivr
cmp
lods
shlb
outsl
iret
and
les
xchg
sbb
out
cmpl
fidivrs
call
jae
imul
push
das
stc
xchg
or
sti
adc
add
jmp
sub
in
pop
cmpsb
or
loope
in
mov
mov
add
pushf
xchg
push
xchg
or
clc
sti
push
jg
fiadds
test
pusha
jle
add
mov
mov
add
jb
cmovs
push
sub
mov
popa
lret
leave
cmp
clc
ljmp
fstps
cs
dec
jb
sub
and
rdmsr
or
stc
repnz
flds
ds
gs
shll
mov
sub
add
mov
lock
cmovne
lahf
loope
add
xchg
fidivs
xchg
aam
add
test
call
js,pn
mov
popl
mov
add
shrb
in
add
in
sarb
lret
cmp
les
stos
out
imul
pushf
mov
stos
add
jmp
call
test
out
lods
add
xchg
jge
add
stos
jecxz
js
mov
add
lahf
or
xlat
xchg
dec
ss
clc
pushf
aas
add
test
fnsave
cmpl
mov
aad
loope
in
push
rolb
jno
test
jae
outsl
pop
aam
push
pop
xchg
sbb
imulb
cmpsl
sarl
addr16
test
push
icebp
imul
aaa
or
popa
out
pop
pop
dec
add
sbb
push
adc
rcrb
xor
or
lds
and
daa
sub
jnp
adc
push
and
and
and
mov
push
and
pop
xchg
xorl
test
sub
and
and
int3
out
mov
call
sub
daa
add
add
daa
push
xchg
add
xor
sbb
rcr
sub
sub
inc
data16
andb
dec
pop
leave
faddl
xor
out
std
rcrl
and
jle
xor
adc
cli
add
pusha
mov
or
add
sub
jbe
adc
push
loopne
xor
repnz
test
shl
or
add
xor
mov
mov
inc
push
adc
push
push
jae
add
fucom
cmp
push
jp
lret
push
xor
push
or
out
addl
fildll
xor
adc
mov
mov
add
mov
cwtl
push
pop
xor
imul
je
jbe
mov
test
inc
nop
cs
push
inc
sysexit
inc
mov
and
add
mov
fcoms
add
sub
jmp
add
jns
lret
xchg
adc
add
les
lcall
addr16
out
add
cwtl
aam
scas
cmp
add
dec
shlb
iret
lcall
push
mov
icebp
cmp
cmp
sub
cmp
nop
rorb
adc
push
aam
push
inc
outsl
pop
adc
inc
ret
xchg
add
add
pop
inc
sub
add
mov
mov
adc
adc
outsl
lea
adc
sbb
fdivrs
mov
xchg
add
push
or
jg
aaa
scas
fnstsw
scas
xor
aad
imul
mov
add
rcl
add
fldcw
mov
jge
add
mov
adc
xchg
mov
push
lods
add
pop
sub
rcll
jns
and
sub
cmp
xchg
andb
shll
add
push
mov
push
loope
pcmpgtw
inc
loop
and
pop
add
repz
enter
mov
fnstcw
xor
adc
cmp
shr
add
ljmp
jle
adc
lods
sti
add
jns
sub
mov
mov
xor
add
and
lcall
cli
mov
imul
lods
xor
stc
adc
pushf
out
flds
nop
mov
fisubrs
sbb
ret
dec
mov
inc
out
pop
popa
ljmp
push
mov
icebp
pop
in
flds
idiv
jbe
aas
aas
pop
sbb
rorb
jae
je
imul
mov
push
into
jbe
add
ja
push
adcl
inc
addr16
jo
shl
test
or
call
inc
shlb
adc
out
mov
add
push
cmpsb
mulb
aas
fwait
sub
cmp
fsubrl
addb
iret
lds
rcr
pop
mov
mov
lods
enter
int3
cltd
sbb
ss
psubusw
cwtl
xor
mov
add
push
adc
xchg
or
xchg
and
inc
pop
add
mov
add
cmp
test
cltd
inc
rcll
add
fs
pushf
add
insb
mov
add
call
lock
mov
or
xchg
mov
sbb
push
fwait
push
cmp
psrlw
popa
ja
in
inc
pop
cmc
inc
inc
popf
out
push
add
aaa
mov
testb
stos
pop
pop
jecxz
bound
insb
cld
popf
std
xor
nop
lds
loope
mov
les
sbb
scas
stos
pusha
sub
mov
add
daa
outsb
dec
rcl
sub
push
gs
fcmovnbe
or
mov
inc
lods
add
jo
test
mov
scas
lahf
rolb
std
adc
jge
sbb
sbb
sbbb
push
pusha
mov
testl
xor
das
push
xchg
lods
jno
arpl
test
add
test
aad
pop
pop
aam
vpunpcklbw
repnz
mov
shll
bound
xor
in
lods
adc
scas
pop
or
push
adc
push
dec
int
sbb
mov
jne
dec
int3
pop
or
cmp
push
push
jae
xor
add
dec
inc
add
mov
add
and
push
add
lds
idivl
jo
es
scas
cmp
addr16
fadds
sub
inc
push
orl
and
mov
fisubs
add
stos
lods
enter
imul
dec
jo
adc
stos
and
popf
inc
mov
imul
insl
in
loopne
rclb
add
rcrl
dec
dec
lret
pop
imul
sbb
dec
popf
xlat
ljmp
xchg
dec
add
idivb
xacquire
clc
cmc
or
ficoms
dec
pop
stos
xchg
add
iret
sbb
pop
loop
je
cmp
movsl
xor
les
cmc
daa
xchg
ljmp
add
bound
ja
dec
enter
call
pop
push
sub
dec
add
adc
xor
jecxz
lock
mov
std
dec
cmp
scas
js
cltd
add
push
clc
jns
outsl
xchg
addr16
pop
cmp
cmp
adcl
pop
pop
ds
add
xchg
push
mov
cmc
cmp
data16
cmp
add
dec
lock
mov
andl
clc
mov
aas
gs
add
push
decb
arpl
pop
cmp
add
loopne
mov
outsl
ret
cmp
dec
add
or
aad
ja
adc
mov
shl
and
fbstp
rcrl
fdivrs
mov
in
add
or
data16
lret
lds
out
pop
dec
fidivs
in
add
cs
dec
lret
pop
aas
out
xchg
jns
mov
xor
rcr
mov
aad
adc
nop
add
push
cld
mov
cmp
mov
pusha
out
outsl
int
adc
fsubr
add
xchg
push
data16
ds
scas
add
nop
sbbl
sbb
inc
pop
mov
out
adcb
adc
pop
fstps
aas
ja
cwtl
dec
mov
dec
les
mov
stos
lret
insb
jecxz
aad
mov
call
adc
dec
mov
xor
jnp
ficoml
cli
add
cmp
or
add
mov
pop
jns
add
and
aas
add
lods
adc
mov
sbb
addr16
mov
popa
add
daa
adc
push
add
lea
mov
and
daa
fiaddl
add
inc
mov
pop
movsl
and
push
mov
sub
loop
add
jle
xchg
xchg
out
sbb
or
mov
xor
mov
fmuls
inc
sbb
enter
mov
sbbl
pop
mov
imul
dec
xchg
add
insl
add
rcrb
jmp
hlt
sub
pop
xlat
test
out
add
jl
sub
add
xchg
mov
jecxz
into
cmc
popa
or
outsb
addr16
fldcw
sbb
add
or
pop
sub
clc
adc
andl
xchg
idivl
sbb
mov
pshufw
sub
add
mov
sarl
adc
mov
orl
cmp
mov
add
scas
add
repz
ja
add
icebp
sti
mov
adcb
inc
add
jo
or
push
shlb
xor
test
add
repnz
lods
add
pop
add
sub
xor
or
sti
jl
subb
mov
add
pop
or
pop
enter
mov
and
push
fstps
je
sarl
aaa
add
sbb
push
repz
popa
pop
mov
bound
pop
mov
aad
add
dec
mov
popf
xor
add
cmp
cmp
das
nop
sbb
push
push
mov
push
add
pop
out
cwtl
add
jns
mov
add
fidivrl
or
sub
adc
sbb
shlb
mov
mov
xchg
int3
add
xor
loope,pt
inc
pusha
push
add
mov
movsb
jb
nop
jnp
cmp
outsb
inc
dec
stos
cwtl
test
fisubrs
sub
addb
sub
jne
push
int3
jnp
jo
add
mov
inc
xchg
add
xlat
mov
pop
imul
pop
add
cs
lret
in
xor
add
add
les
inc
mov
sbb
imul
cmp
loop
xlat
andl
jbe
or
outsl
mov
xchg
cmpsb
lock
add
xchg
or
int3
adc
imul
mov
lds
rcl
add
pop
jg
jbe
add
lea
add
xchg
xchg
sbb
add
cmp
push
sub
adc
dec
add
inc
mov
push
mov
imul
fisubrs
scas
jg
aad
mov
add
mov
and
cmc
dec
mov
in
mov
adc
repnz
xor
clc
mov
cmpl
add
pop
mov
adcb
scas
inc
mov
outsl
jle
pop
add
call
add
adc
aam
push
shlb
add
fldenv
lret
dec
sub
inc
cld
mov
ret
js
mov
add
xchg
or
sbb
cltd
subb
ja
pop
das
shrb
dec
repnz
sub
adc
add
aas
aaa
ret
repz
dec
adc
sub
dec
pop
out
push
aas
call
fistpll
mov
movsb
sub
leave
push
cmp
xor
add
stos
std
or
insb
cwtl
mov
pushf
sbb
xor
inc
sbb
es
pop
outsl
add
orb
bound
pop
insl
ds
sub
and
and
hlt
xchg
sbb
adc
incl
xor
and
add
outsl
testb
jecxz
mov
adc
jmp
lret
and
pop
popf
loopne
add
dec
xor
add
or
xchg
adc
sub
scas
add
adc
call
rol
jg
lods
mov
push
lods
jbe
add
mov
or
adc
outsl
lds
imul
cmp
add
push
pusha
sub
push
sbb
push
sub
mov
push
and
mov
mov
pop
mov
and
xchg
adc
jmp
mov
add
in
dec
test
rcrb
fwait
clc
pop
sub
jle
xlat
add
out
mov
ds
rolb
adc
es
inc
add
xchg
pop
pusha
das
inc
dec
std
rolb
sub
mov
add
lea
out
inc
out
mov
pop
sbb
push
in
dec
je
add
cwtl
lret
dec
xchg
sbb
add
rcl
jecxz
in
orb
mov
nop
adc
cmpsb
fcomps
adc
lahf
in
add
push
pop
adc
enter
lock
xor
outsb
mov
in
push
sub
cmc
cwtl
cmp
pop
adc
push
sbb
add
inc
sbb
int
aaa
dec
mov
dec
ret
imul
loop
jg
pop
or
xchg
add
repz
and
add
and
mov
push
cmpsl
out
aas
les
add
pop
popf
jle
pusha
call
jg
jo
add
inc
and
scas
rolb
push
pop
inc
push
sahf
add
mov
pop
mov
add
xor
xchg
outsb
xor
sub
call
add
add
xchg
les
push
shrl
js
dec
cmp
xor
pop
add
lret
add
imul
jle
out
fwait
mov
or
mov
ret
add
lds
adc
sahf
incl
inc
pop
mov
sub
xor
inc
mov
out
pop
repz
in
scas
push
int3
test
mov
lods
dec
mov
loopne
aaa
add
enter
mov
pusha
sbb
aad
and
inc
call
add
lret
or
push
mov
sarl
sbb
add
mov
fiaddl
enter
aam
movlps
flds
mov
rcll
cltd
jle
imul
out
cmc
movsb
aam
daa
add
js
ds
xor
jae
sahf
add
sbb
add
repz
pop
sbb
push
mov
sub
jae
xor
lds
std
add
inc
xor
add
je
adc
lea
lcall
mov
loopne
lret
out
inc
and
jp
pop
push
ret
jge
cmc
imul
mov
popf
jo
int
sahf
xchg
loopne
mov
xchg
push
stc
or
mov
js
cwtl
lahf
sbb
mov
or
outsl
out
or
subl
sbb
add
nop
xchg
movsb
stc
lds
adc
dec
mov
rcll
xor
loope
cmp
lock
pop
or
orb
out
scas
aad
sbb
or
subl
pop
mov
add
imul
cmp
push
adcb
dec
in
pop
outsb
add
xor
fimull
cvtps2pi
cltd
and
ret
daa
inc
sub
xchg
jle
mov
adc
sub
mov
mov
nop
inc
pop
jno
pop
pop
aaa
pop
adc
in
icebp
add
leave
adc
jle
pcmpeqd
and
pop
jp
mov
push
cld
pop
and
xchg
xchg
sar
push
sub
repz
cmc
in
cmpsl
mov
add
cs
pushf
adc
xchg
pop
test
mov
sub
daa
xchg
xor
jns
add
or
fistpll
add
pop
pop
mov
add
cmp
ljmp
push
add
int3
dec
repnz
int
add
adc
jbe
fiadds
mov
int3
cmp
mov
pop
aas
out
es
push
pusha
adc
lds
mov
scas
or
ret
sub
pop
sub
push
cmp
addr16
and
lahf
add
js
xchg
int3
in
popa
add
test
mov
add
dec
sahf
sub
nop
adcl
add
and
pop
icebp
sub
cmp
fnstsw
in
dec
loopne
add
dec
ret
sub
sub
jae
out
add
pop
rclb
sbb
pop
jg
pusha
and
mov
dec
fdivl
push
pop
flds
jb
enter
into
xchg
add
scas
xchg
cmpsl
jnp
pop
cld
js
adc
mov
rcll
add
inc
idivl
loop
and
pusha
cwtl
sub
mov
sub
add
es
mov
add
out
loope
rolb
mov
xlat
or
stc
bnd
repz
clc
ljmp
mov
ror
lods
xchg
push
shl
xor
push
stos
inc
popa
call
cmp
aam
fiaddl
test
and
adc
fwait
add
and
mov
lret
rcrb
mov
push
mov
shrb
adc
adc
or
add
jb
pop
add
pop
popf
dec
push
mov
pusha
mov
xlat
add
adc
rcll
fs
sbb
in
push
mov
push
adc
mov
push
dec
mov
adc
inc
lret
push
or
inc
xor
in
mov
jmp
dec
xor
mov
adc
popa
mov
test
push
push
imul
push
cmpsb
xchg
or
ror
jns
pminub
xor
xchg
aam
pop
or
or
jne
adc
mov
cmp
push
mov
inc
inc
fisttpll
add
mov
add
cmpsb
pop
mov
js
lock
jbe
or
iret
loope
sbb
or
push
cmpsb
sahf
cmp
pushf
push
cmp
pop
dec
out
adc
pop
rolb
cli
icebp
nop
jns
leave
stos
add
fsubrp
xchg
std
rolb
sub
out
adc
sub
testb
inc
cmp
cmpsl
clc
add
and
add
pop
ret
subb
or
jae
mov
jmp
push
fisttpl
in
dec
rolb
add
cmp
sub
jl
mov
jae
push
pop
rcl
cmpsb
in
push
insb
dec
add
pop
andl
cmpl
dec
pop
dec
ja
sahf
sarl
pop
push
add
adc
jg
xorb
push
add
dec
mov
sahf
hlt
mov
jmp
mov
inc
in
sbb
lcall
sub
pop
loope
xor
push
ret
add
popa
mov
cmpl
lods
pop
dec
movsl
gs
loopne
clc
and
add
mov
pop
add
or
sub
pop
add
mov
cld
sub
add
xchg
ss
mull
lods
push
outsl
stos
rcl
aas
ljmp
sbb
add
fwait
shrb
inc
ficoml
fcomps
mov
adc
leave
mov
test
dec
int3
call
xor
dec
les
jp
push
add
mov
add
sbb
sub
mov
inc
push
jp
lock
add
mov
sbb
test
or
jns
test
add
pushf
xlat
in
fsubr
cmpsl
xchg
pop
add
add
cmp
add
sbb
stos
add
enter
and
int3
cld
add
cmc
cwtl
or
shlb
dec
sbbl
out
loop
jg
xlat
add
or
addb
and
cmpsl
xchg
hlt
clc
xor
xchg
add
push
out
add
push
push
push
dec
push
and
adc
or
mov
inc
adc
sahf
in
movsl
or
testl
outsl
xor
enter
fsubrp
add
in
sbbb
add
xorl
cmp
lret
pop
sub
mov
nop
xor
popa
adc
cmp
push
ja
cs
movsl
mov
jbe
add
cmp
sub
scas
add
cmp
outsl
mov
ja
add
hlt
aam
enter
inc
xchg
popa
jo
testb
arpl
movsl
jle
cmp
cmp
push
pop
mov
leave
and
lea
jge
pop
mov
dec
movsl
popl
negl
scas
inc
adc
lods
jae
sahf
rcr
mov
bound
ljmp
fadds
test
vmovapd
jg
or
push
add
jb
stos
mov
sub
mov
ds
dec
cmp
repz
add
cmp
mov
push
andb
add
or
sbb
add
outsl
and
mov
std
xor
testl
jae
lods
add
pop
jo
dec
in
xchg
lea
mov
cmp
and
jmp
cmpsb
mov
cmc
cwtl
rorb
divb
stos
or
pop
daa
test
push
es
outsb
mov
cmp
pop
cmpb
sbb
lcall
add
into
add
pop
mov
ret
and
push
faddl
imul
add
dec
sub
sub
pusha
mov
insb
sbb
push
adc
add
sti
pop
clc
adc
cmc
filds
sbb
inc
data16
mov
clc
add
jle
fisubl
out
cwtl
mov
pop
lock
xor
mov
mov
add
fidivrs
lret
insb
pop
xor
cld
cmp
ret
orl
iret
jmp
fbstp
push
stos
xchg
scas
inc
test
stc
sbb
hlt
aas
fidivs
sahf
int3
adc
js
test
pop
in
add
nop
lods
add
mov
imul
call
enter
shlb
mov
fnstsw
fs
es
push
xor
arpl
inc
dec
mov
cmp
mov
mov
sahf
add
inc
and
aaa
push
push
pushf
mov
push
mov
xor
push
add
and
adc
and
lods
shll
mov
dec
sti
fisubrs
dec
dec
lret
enter
or
rclb
inc
fwait
add
imul
xchg
aas
mov
add
mov
mov
scas
dec
push
sub
popa
jp
outsb
mov
jp
pop
lahf
int3
psadbw
pusha
ja
xor
adc
push
mov
rcrb
push
cmp
add
inc
mov
add
sarl
sbbb
dec
xchg
or
jg
les
xor
push
pop
pop
gs
add
mov
stos
fiadds
data16
test
leave
hlt
add
orb
adc
and
lock
loope
dec
pusha
sbb
sti
jns
xchg
inc
jg
and
cmp
sub
ja
jbe
dec
icebp
fdivs
mov
bound
fwait
add
testb
mov
xchg
add
sbb
mov
add
sub
xchg
dec
test
xor
pusha
outsl
mov
fs
ficompl
test
shll
dec
mov
add
fldt
pop
pop
ret
arpl
mov
popa
mov
sbb
xor
add
out
or
cmp
mov
jne
xor
mov
jp
clc
inc
pop
xorb
insb
stos
pop
popf
push
mov
jb
mov
lea
pop
fcmovnbe
out
clc
mov
or
adc
nop
adc
push
in
inc
stos
lock
test
add
or
push
or
dec
add
sub
nop
mov
std
hlt
or
pusha
jno
add
jns
stc
icebp
adc
out
jne
mov
add
test
inc
cmovp
cmp
xor
mov
cli
xchg
sub
ror
ja
sti
adc
rorb
popf
mov
roll
inc
and
jge
mov
je
lock
mov
popa
mov
cmp
jbe
jns
add
stos
aam
scas
hlt
ret
jecxz
lods
lock
and
add
adc
aas
aaa
mov
scas
lock
popa
mov
xor
dec
repnz
push
mov
adc
mov
push
sbb
dec
int
nop
mov
dec
add
rcrb
ds
sbb
xchg
mov
lods
xorb
mov
mov
sbbl
sub
mov
nop
add
fwait
add
mov
in
mov
adc
flds
or
mov
jmp
jge
scas
inc
cmp
fdivrs
sbb
xor
fldl
hlt
pusha
mov
shrl
clc
or
js
daa
test
pusha
xor
jo
add
sahf
mov
and
shr
mov
out
pusha
test
mov
adc
imul
pusha
mov
mov
data16
sub
add
jo
mov
shlb
xor
mov
xor
pop
packsswb
push
into
aad
pop
popa
add
mov
adc
adc
inc
movsb
cmp
push
clc
pop
and
push
mov
shll
movsb
cmp
adc
cmp
add
sub
cmp
push
dec
cmp
jg
mov
pop
add
push
sbb
mov
xor
shrl
aas
pop
call
push
add
add
inc
or
faddl
sub
adc
jmp
xor
xchg
dec
adc
subl
adc
out
push
mov
sbb
into
fs
repnz
inc
fsubr
inc
adc
nop
lcall
push
adc
dec
lock
sti
push
js
int3
add
lods
mov
mov
rorl
cmp
push
push
sbb
inc
movsb
psraw
dec
leave
xor
popf
inc
cmpl
pop
jp
inc
fdivl
or
int3
adcb
loopne
ljmp
rorb
cmp
pop
lods
ret
add
cmpsb
cmp
loop
fs
push
out
mov
lods
pusha
pop
cmp
and
pop
inc
jecxz
sbb
notb
in
cld
inc
sahf
pop
push
mov
jmp
add
mov
call
cmp
sbb
inc
sub
and
xchg
sub
movsl
mov
dec
mov
cli
inc
dec
lock
xor
stos
je
mov
mov
call
aas
jns
mov
push
sti
mov
lret
jbe
ss
bound
loop
lea
lret
or
or
xchg
add
xlat
add
pop
sbb
loopne
movsb
decb
sbbb
ds
sub
add
cwtl
sub
xchg
adcl
add
xlat
cli
inc
push
lods
stos
add
jnp
adc
mov
rcll
bound
add
icebp
jecxz
add
ljmp
jl
inc
je
psrlq
add
inc
test
xlat
insl
adc
daa
out
push
int3
pop
test
in
jnp
aaa
cmpl
mov
push
in
repz
inc
lock
xchg
jg
rcrb
rolb
xchg
rcrl
add
aad
imul
in
cmpsl
jmp
jnp
or
pop
sahf
es
or
mov
mov
pop
pop
inc
xor
call
pop
and
ljmp
fiadds
outsb
es
pop
or
icebp
mov
add
dec
jecxz
add
sub
add
leave
scas
jge
sub
loop
add
pop
adc
adc
pop
or
pop
movsb
xchg
jne
out
inc
mov
push
or
dec
adc
ret
ljmp
fdivr
jae
jae
dec
daa
shlb
and
pusha
popa
xor
nop
rclb
dec
mov
ljmp
xlat
inc
pop
mov
jb
cli
ret
cmp
add
push
notb
lock
inc
leave
out
add
cmp
jg
mov
pop
xlat
xchg
test
jne
js
pop
nop
jmp
add
mov
mov
mov
xor
fsubl
insb
pop
ja
add
pushf
cwtl
add
testl
pop
xchg
repnz
stos
int
add
jns
add
insb
mov
add
pusha
int3
mov
dec
inc
pop
insb
cld
repnz
add
movsb
in
add
add
jg
sub
add
inc
dec
js
aas
add
inc
push
test
pop
xchg
mov
mov
cmp
xor
rclb
call
dec
mov
aam
jmp
pusha
jno
jne
add
add
mov
mov
sbbb
cltd
and
int3
add
stos
add
push
divl
rorb
test
cmp
jae
add
fiadds
sub
mov
dec
aaa
add
cmp
push
pop
add
aad
ja
or
mov
inc
push
mov
dec
mov
std
mov
sub
add
enter
push
mov
mov
imul
add
stos
out
cmp
mov
jbe
jecxz
testl
mov
mov
add
lock
inc
push
add
nop
inc
cli
xchg
xor
add
jb
adc
lret
cmp
fcompl
adc
dec
divl
xor
adc
or
arpl
adc
in
and
and
popf
mov
pop
push
mov
insl
shrb
orl
inc
adc
add
xor
add
pop
jb
add
dec
test
sti
mov
test
cwtl
and
sbb
mov
mov
addr16
add
sarb
mov
push
fsubs
out
pop
push
mov
sub
xchg
add
inc
dec
das
add
mull
fs
aam
xor
pop
xchg
call
lret
and
pusha
nop
clc
xlat
mov
mov
fnstenv
inc
enter
add
rcl
mov
aam
add
pop
popf
jne
lret
test
je
xchg
mov
je
push
rolb
out
or
fs
jmp
movsl
push
ss
cmp
add
sub
aas
jb
dec
add
fs
pop
mov
lret
xor
xchg
cmp
mov
adc
jle
pop
jns
add
arpl
pop
pushl
and
inc
aam
in
pop
notb
scas
lcall
incb
fstpt
addr16
add
and
push
add
movsb
sub
push
mov
jmp
xchg
jne
cmc
cwtl
icebp
sub
out
add
addr16
add
lret
xchg
xor
mov
pop
negb
jl
adc
pushf
push
fadds
jecxz
clc
jmp
enter
inc
mov
sub
pop
add
and
gs
cmpsl
cmp
sub
sub
add
jae
inc
lahf
and
or
add
es
pop
or
int
mov
js
inc
movsl
jp
dec
mov
loope
insl
adcl
add
lahf
filds
adc
mov
ljmp
push
jnp
lock
and
incb
pop
es
pop
stc
dec
xchg
aaa
add
sti
shlb
push
mov
fisubl
pop
lock
mov
jp
inc
xor
adc
mov
mov
push
andl
and
lock
fstps
outsl
movsl
mov
shl
cmpb
jle
add
cmp
scas
mov
je
test
mov
add
or
lock
mov
dec
add
cmpsb
push
aaa
repz
je
xor
push
mov
jl
jae
xor
xor
ds
pop
add
mov
in
fstp
xchg
les
mov
mov
jg
or
js
or
push
testb
add
jae
cmp
or
add
inc
xor
je
sub
movsl
cmp
adc
inc
sbb
pop
xchg
in
cmpsb
add
push
xor
adc
cmpsl
inc
enter
sub
add
jmp
or
andb
shlb
rcrb
cmpsl
pusha
lods
add
xchg
loopne
push
loopne
xorb
pop
jnp
lock
iret
repnz
or
test
cmp
fcomip
repnz
lds
pop
mov
mov
add
je
repz
dec
and
add
mov
push
add
sarb
ja
sub
imul
loopne
in
push
add
xlat
or
xchg
xchg
sbb
jg
add
adcl
cmp
push
add
pop
xchg
mov
fcompl
movsb
add
cwtl
push
in
or
dec
add
pop
stc
testl
inc
adc
les
push
dec
xorl
adc
adc
mov
mov
adc
dec
repz
int3
add
loope
or
add
fsub
outsl
stos
inc
rorb
sub
mov
sub
loopne
jge
add
jae
int3
cs
aam
leave
add
shl
outsl
fwait
cld
nop
add
xor
jge
mov
add
test
push
mov
push
lret
adc
dec
dec
mov
shrb
shll
sbb
and
mov
stos
aam
sbb
mov
add
lret
leave
cli
mov
ret
test
mov
cmp
mov
sub
addb
mov
call
loop
jp
and
scas
jbe
add
lahf
mov
add
jo
aaa
js
enter
mov
js
jno
sub
lock
or
mov
loopne
ret
or
pusha
add
std
adc
icebp
xorb
xor
add
out
jnp
outsl
jno
add
test
add
and
mov
ss
add
loop
dec
loopne
dec
dec
add
into
mov
add
cmp
test
mov
rolb
or
jl
add
jecxz
or
repnz
fadds
pop
inc
push
clc
js
pop
sub
push
lods
ss
cltd
push
loopne
ficoms
pusha
jb
xchg
add
ffreep
popa
call
mov
dec
add
jne
pop
mov
and
js
add
cli
shll
sub
rcrb
push
jp
into
sbb
cmc
cmp
dec
add
mov
jmp
int3
add
les
icebp
test
mov
inc
mov
mov
je
pop
mov
push
pop
sbb
scas
add
cmp
xchg
xchg
sbb
jns
or
nop
push
call
mov
sbb
sbb
lcall
mov
in
repz
pop
xchg
xlat
cmc
insb
add
mov
cmp
adc
fcom
xorb
cmp
xchg
dec
js
or
dec
xchg
incb
dec
mov
imul
insl
sub
pop
inc
pop
add
adcb
mov
mov
xchg
test
add
lds
adc
addb
fldl
push
ret
xchg
xor
cmp
roll
aam
ljmp
sub
mov
sbb
dec
outsb
in
pop
push
rolb
sbb
clc
lods
mov
repnz
inc
test
loopne
lcall
hlt
mov
push
mov
jns
add
pop
xchg
inc
push
and
sub
push
mov
pop
jle
push
inc
jb
and
add
fsubrl
push
fiadds
pop
repz
int
push
or
pop
mov
in
mov
arpl
fldl
mov
insl
cmp
rcrb
jnp
push
cli
and
mov
xor
push
xchg
mov
push
add
adc
inc
pop
js
in
dec
dec
daa
lahf
mov
or
in
add
or
cmp
lahf
inc
dec
rol
or
mov
loope
filds
push
cmp
inc
leave
dec
arpl
int3
add
les
push
and
sbb
jl
sub
xchg
jp
push
cmp
aas
cmpsb
dec
inc
ret
lahf
and
test
scas
int3
in
les
or
sbb
aas
outsl
adc
pop
pop
pushf
repz
sbb
out
cmp
sti
or
pop
daa
xchg
pop
outsb
xor
in
sbb
add
fistl
xchg
sub
rolb
pop
lret
dec
ss
push
stos
cmp
cmpsl
cmp
inc
push
fsub
xor
or
in
rcrb
or
add
sbb
sub
dec
or
jle
add
stos
inc
enter
ljmp
cmp
mov
or
iret
gs
mov
add
add
xchg
sti
rcll
js
movsb
adc
xchg
pop
xor
lock
test
jbe
add
inc
and
movd
inc
sub
add
inc
popa
mov
sbb
insb
loopne
mov
xchg
add
jp
shrl
jmp
and
pop
dec
test
jo,pn
das
test
cmpsl
js
addb
test
inc
jp
add
pushf
mov
and
sub
es
mov
cmovge
push
fistpl
push
and
push
add
pop
cmp
dec
stc
add
lret
cmp
lods
or
mov
xchg
xor
jno
xor
loope
pusha
pop
inc
mov
mov
add
loope
xor
mov
cmp
dec
dec
add
jmp
add
xchg
aam
xor
loopne
pop
push
mov
sub
mov
lock
or
dec
js
inc
adc
cmp
ret
mov
fcomps
test
cmp
mov
popa
pop
imul
xorb
xor
out
inc
xchg
bound
cmp
fs
mov
stos
mov
inc
lret
cmp
pop
add
dec
sbbb
push
in
push
cmpsb
add
call
cmpsl
sbb
test
scas
push
adc
enter
les
aaa
andb
lcall
add
or
clc
push
pop
punpcklwd
xor
fcomps
and
roll
and
test
rcll
punpckhbw
lods
or
inc
test
jno
outsb
inc
add
mov
mov
add
les
pop
pop
mov
and
add
test
sahf
outsl
nop
pushf
inc
je
sub
sarb
fldl
sbb
popl
mov
int3
bound
addr16
jnp
jp
inc
orb
out
popf
and
fsubrl
popa
or
mov
repnz
fcoms
dec
sti
inc
jge
and
and
adc
pop
test
mov
movsl
dec
dec
lret
inc
adc
dec
mov
clc
aad
jnp
mov
test
pop
pop
and
and
pop
add
fwait
pushf
cltd
addr16
popa
mov
add
xchg
dec
out
cmp
or
sbb
adc
push
push
out
mov
cwtl
pop
push
rol
dec
mov
add
jno
outsl
add
inc
adc
add
ficompl
xor
hlt
in
add
adc
add
rclb
push
aad
cmp
cwtl
add
xchg
cmp
inc
fidivrl
mov
add
add
pop
sub
ljmp
or
mov
add
test
fistl
add
inc
inc
cmp
mov
lcall
jnp
mov
stos
out
add
mov
das
int
test
test
cltd
mov
sahf
dec
fld1
dec
add
aad
push
inc
into
mov
add
adc
adcb
enter
adcb
cwtl
pusha
sti
in
sbb
add
adc
jo
sbb
addb
push
into
lock
push
pop
add
mov
mov
ss
add
stos
les
pop
add
pop
dec
push
xchg
adc
push
sbb
incl
lock
jo
adc
and
fsubr
rcrb
bound
cmp
cmp
mov
xchg
push
lcall
ret
int
stc
jnp
add
into
add
stos
in
push
add
pusha
popf
out
arpl
fistps
adc
xchg
push
icebp
cltd
aaa
lock
ljmp
and
addl
adc
mov
rolb
cs
call
push
add
aad
loope
shl
add
xor
testb
push
or
mov
dec
pop
testb
add
idivl
shr
fcompl
add
or
and
std
popl
dec
loopne
loop
pop
jecxz
add
sarl
inc
mov
xchg
shl
mov
sbb
jae
xorb
push
ret
jmp
mov
sub
mov
add
out
inc
incb
xchg
aaa
sbbb
or
jbe
xor
sub
sbbb
std
lea
in
jno
insl
adcb
inc
cwtl
mov
popf
lcall
add
xor
testl
add
cmp
and
jle
inc
add
jnp
jge
mov
xchg
loop
or
arpl
add
loopne
inc
add
adc
int3
popa
rolb
lods
cltd
test
xchg
push
clc
add
adc
add
add
xor
outsb
popl
icebp
jmp
sub
lock
movsb
outsb
and
sub
arpl
daa
outsl
xor
mov
jg
fistl
mov
mov
xorl
int
aad
outsl
lods
add
sub
rcll
dec
xor
push
pop
les
scas
inc
mov
std
dec
pop
adc
rcr
or
xchg
add
add
mov
or
pop
mov
jno
or
hlt
cli
lret
add
xorb
scas
sbb
mov
push
lods
inc
ljmp
xchg
sbb
jno
add
cld
js
or
int3
inc
scas
call
push
jmp
mov
and
mov
iret
mov
fisubrs
xchg
mov
dec
cmpsl
out
loope
subb
icebp
and
into
add
push
dec
clc
adc
enter
xchg
aad
add
sti
sbb
xchg
testb
add
leave
imul
sbb
mov
mov
jno
pop
add
cmp
fwait
add
add
mov
testb
inc
add
jp
add
and
add
pop
ret
sahf
push
stos
mov
pop
inc
dec
inc
inc
adc
add
or
cmp
pop
jno
jle
sbb
xor
mov
add
outsl
xchg
xlat
pop
enter
cmpb
bound
addl
scas
pop
sub
leave
imul
xor
and
mov
ret
add
add
add
and
adc
inc
add
sbb
jp
iret
add
push
jg
mov
enter
xorb
sarl
aas
and
cli
add
xor
insb
daa
mov
add
lods
dec
scas
rorb
data16
inc
aas
push
mov
pop
jmp
cmp
mov
imul
nop
cmp
push
repz
ret
decb
test
push
add
jnp
popa
cmpl
lahf
fwait
cmp
add
popf
jmp
add
cs
imulb
call
adc
out
in
sub
mov
shll
jg
lds
cmp
scas
add
sbb
and
shrb
push
inc
repnz
js
dec
into
sub
mov
add
inc
dec
pop
idivb
jnp
incb
add
xchg
add
mov
sbb
stos
jmp
add
jl
push
out
sbb
test
mov
add
push
loope
pop
aas
pop
pushf
cld
outsb
or
shll
fisubrl
xchg
mov
sbb
mov
mov
nop
int3
adc
jae
xorl
outsl
adc
sbb
jg
mov
loopne
cld
add
push
repnz
mov
sbb
and
add
adc
xrelease
fs
sub
lock
lods
inc
dec
mov
pop
test
add
xchg
add
pop
pop
push
in
cmc
add
mov
inc
les
add
mov
imulb
or
adcl
faddp
popf
rcrb
ret
call
rol
add
pop
lret
jle
inc
mov
dec
mov
jbe
sbb
xchg
or
insb
popf
cli
add
lcall
xchg
addl
fildll
mov
dec
out
andl
add
mov
dec
add
out
fiadds
add
pusha
icebp
mov
out
insb
fidivl
jle
mov
add
into
ficompl
aaa
loopne
nop
inc
jns
and
aad
mull
lahf
faddl
test
mov
call
lods
pop
repnz
push
hlt
pop
loopne
add
push
sub
xchg
adc
dec
cmpsb
imul
or
push
xor
test
mov
and
jo
dec
fadd
ja
inc
clc
arpl
sbbb
xor
ror
stos
mov
loopne
pop
add
pop
add
jo
mov
jp
mov
add
stos
pop
push
scas
inc
fdivrs
sub
leave
add
vcomiss
repnz
sub
dec
push
mov
pusha
mov
add
jl
fiadds
lock
mov
pop
push
mov
add
jg
adc
sahf
pop
xchg
sbbw
sub
add
dec
add
add
rol
push
dec
ret
nop
or
mov
loope
cmp
cmp
sub
pop
add
in
out
mov
add
enter
mov
mov
cmp
jae
mov
enter
imul
mov
fcoms
outsb
cmp
adc
lahf
add
pop
cmp
push
xor
aaa
add
shlb
xor
sbb
test
shlb
add
cmp
sbb
sbb
cmpb
in
iret
or
test
add
sub
mov
pop
movsb
inc
add
add
jns
inc
mov
inc
adc
push
cmp
and
test
lds
xor
cwtl
stos
das
push
add
sub
and
pop
clc
add
fwait
xchg
mov
cli
fldl
adc
dec
and
jge
add
sbb
add
mov
pop
movb
cmp
cwtl
inc
add
fistpll
push
pusha
repz
xchg
adc
rcr
sbb
mov
psrlw
lods
mov
pop
aaa
add
cs
repnz
andb
andb
jp
add
and
xchg
into
dec
scas
cmpsl
add
sar
outsl
mov
add
dec
inc
andb
xor
add
adc
pop
cld
pop
and
xor
loop
add
stos
pop
mov
test
mov
sub
add
mov
pushl
in
dec
add
pop
fildl
sbb
jbe
dec
xchg
aam
lds
mov
std
lret
xorb
push
scas
mov
mov
fwait
pop
ret
adc
popf
add
xor
mov
pusha
mov
add
enter
add
sbb
sbb
add
and
addr16
xchg
add
loope
adc
inc
mov
pop
gs
add
iret
dec
lar
test
mov
jp
mov
xchg
fstpt
fcomps
add
mov
js
add
pop
aad
repz
add
or
or
push
arpl
dec
and
jnp
inc
lock
add
insb
pop
dec
int3
cmpsb
mov
or
xchg
sbbb
sti
ja
ss
or
push
subl
sub
jmp
jp
adc
and
mov
call
xchg
clc
mov
in
movsb
add
and
push
aad
pop
add
add
arpl
out
adc
xchg
dec
cmp
jg
cmp
js
adc
jno
cmp
and
fisubs
lea
or
push
inc
nop
or
fucomip
push
add
in
ret
hlt
bound
rcl
insb
and
test
adc
mov
xor
jo
es
and
xor
sbb
add
jg
sub
and
imul
test
rcrb
fmul
add
loop
push
rolb
mov
out
test
mov
or
mov
push
lds
and
stos
cmp
popf
int3
out
adc
call
sti
mov
xor
popf
add
sahf
push
test
add
aad
or
mov
aas
out
xchg
ss
fcomps
repz
ja
or
pusha
cwtl
sub
test
sub
lret
pop
lods
mov
jno
xor
add
push
int3
push
bound
pusha
xor
in
std
add
dec
pop
scas
movsb
out
ret
add
pop
daa
add
sahf
verw
jbe
xor
fdivs
push
push
mov
mov
cwtl
mov
add
adc
inc
add
push
add
xchg
ljmp
lea
pop
xchg
ror
rclb
push
dec
cs
stc
ret
inc
mov
scas
cmp
rcpps
inc
pusha
fcmovu
mov
in
lret
mov
lods
outsb
pusha
les
mov
cmp
push
je
out
add
aaa
inc
nop
sbb
aad
or
rcll
push
push
es
xor
stos
push
imulb
fmulp
xor
cld
push
shl
cmpsb
and
sbb
int
nop
ror
inc
add
inc
and
div
out
push
pop
mov
jns
dec
jmp
xor
add
sbb
sub
add
mov
cs
add
mov
sub
andl
mov
dec
add
cmpsb
cld
push
jecxz
or
inc
inc
lods
add
adc
add
popa
sub
xor
xlat
add
push
cmpsl
add
fmull
iret
jmp
movsl
add
enter
or
mov
jp
cwtl
add
add
xor
enter
lret
repz
dec
cli
inc
adc
ret
push
mov
xor
hlt
xchg
subb
pop
add
out
jno
in
mov
cld
dec
insb
sbb
xor
dec
test
cmpsl
sub
add
jns
mov
add
scas
sub
cmp
push
xchg
mov
cmp
sub
add
jae
clc
cli
xlat
mov
mov
add
inc
lock
jbe
mov
outsl
xchg
in
add
ret
sbbw
add
movsb
sub
dec
sahf
js
jle
pop
pop
xchg
inc
jl
stos
mov
cmp
fwait
pop
xchg
inc
mov
xchg
add
mov
out
or
mov
jae
repnz
jl
and
push
nop
dec
sub
outsl
add
orl
inc
lock
adc
addr16
mov
popa
cmp
cs
pop
xor
mov
imul
jo
xor
aam
icebp
xchg
lea
dec
dec
in
or
mov
testb
andb
dec
and
ss
std
xor
sarl
cmp
xor
push
mov
mov
fld
dec
movsb
out
jmp
vdivpd
xchg
add
xchg
ds
push
pop
loopne
push
sub
and
pop
add
push
out
clc
cmp
int3
jbe
add
and
lcall
mov
mov
lcall
inc
lds
mov
xor
sub
push
sub
movsb
add
adc
xchg
out
arpl
incb
outsb
adc
and
pusha
jp
jle
inc
add
imulb
nop
call
jb
add
jg
cmp
sbb
sbb
sub
aam
xor
jb
aas
push
jo
enter
ja
dec
mov
jno
add
iret
subb
mov
ret
lahf
out
fs
test
push
jnp
xor
pop
mov
add
cmp
faddl
and
loopne
add
repz
adc
lret
fstl
ja
iret
dec
mov
dec
pop
mov
lock
lea
and
mov
push
or
pusha
inc
mov
movl
js
pop
and
dec
out
or
movsb
fstl
mov
sbb
mov
xchg
rcrb
das
cld
jle
pop
jmp
push
mov
cmpsl
add
insb
and
test
inc
and
adc
sbb
ljmp
jns
loop
jmp
xchg
out
test
pop
dec
call
cld
sbb
dec
clc
nop
or
add
or
stos
cmp
jae
mov
push
and
stos
push
cmpsb
adc
in
test
xor
and
pop
sub
movsl
pop
mov
sbb
rolb
shl
jbe
pop
daa
pop
or
mov
add
add
movsb
lock
push
add
or
xchg
cltd
mov
jns
add
out
jo
sub
mov
cmc
fdivr
pushf
cmp
out
mov
xor
out
and
sti
icebp
aaa
cmpb
jnp
fistl
jb
jle
popl
mov
movsl
outsb
test
test
adc
pusha
cltd
add
fcoml
pop
cmp
add
imul
scas
pop
rclb
fildl
mov
mov
ret
cmp
movsl
xchg
inc
add
add
fcoms
shl
add
xor
sti
add
std
add
iret
sub
inc
pushf
mov
sub
jp
add
sbb
mov
nop
sub
sbb
pusha
sbb
add
add
mov
cmp
int3
cli
sub
or
xor
cmp
mov
inc
push
es
sub
in
xchg
shll
fwait
add
dec
adc
add
mov
pop
inc
call
pop
repnz
pop
mov
rorb
dec
fsubrs
rorb
add
test
ret
inc
mov
fs
test
inc
leave
or
and
outsl
stos
sub
js
enter
hlt
add
aad
into
add
or
arpl
or
out
fsubrs
nop
mov
dec
jne
add
or
add
xor
sahf
call
lock
sbb
xor
or
mov
clc
xor
fdivrs
scas
les
in
add
cmp
add
es
pop
push
sub
add
add
inc
add
int3
or
sub
test
clc
add
movb
les
and
lret
ds
ljmp
cltd
dec
push
inc
add
sub
add
int
sub
dec
add
andl
add
ds
push
push
into
cmpb
lock
stc
add
inc
or
cpuid
ret
daa
xchg
adcb
pop
add
cmp
push
sarb
jne
push
adcb
popl
sbb
stc
and
iret
nop
add
imul
imul
arpl
xchg
add
gs
hlt
jo
add
rol
add
clc
enter
mov
dec
push
adc
push
add
or
movsb
sbbl
push
pop
scas
dec
jnp
rolb
outsb
xlat
pop
push
mov
cwtl
jne
jg
xorb
shll
sarl
dec
sti
mov
and
stc
or
pop
jb
adc
icebp
int3
lds
cmp
add
clc
into
mov
add
mov
sub
inc
cltd
or
sti
or
call
pop
sub
in
enter
mov
sbb
aam
mov
xchg
jecxz
inc
pop
idivb
rcr
pusha
add
call
jl
xor
add
or
pop
adc
xchg
cvtdq2ps
dec
out
orl
fsubrs
jle
roll
cmp
pop
mov
cli
daa
negb
sbb
pop
roll
dec
out
ret
pushf
lods
xor
add
lock
fadd
push
cmpl
enter
cli
xor
mov
adc
inc
add
cmpsl
xchg
mov
or
inc
ljmp
fisubrs
std
add
hlt
or
es
adc
or
push
sub
pop
nop
mov
lds
cmp
and
pop
adcb
xchg
mov
push
out
xor
in
adcb
std
add
test
pop
lcall
int3
sbb
mov
adc
testl
and
push
dec
rol
dec
jmp
insl
add
xor
xchg
mov
inc
mov
or
out
add
push
aad
std
psubsw
xchg
addb
fstps
xor
xor
sub
add
add
rclb
setbe
int3
jp
sbb
fwait
repz
xchg
jb
ds
in
cltd
jbe
sbb
mov
mov
xor
cmp
xlat
pusha
aas
in
xorb
cmc
jg
ljmp
std
or
adc
push
add
jecxz
and
pusha
xchg
inc
int
test
mov
sub
xor
sbb
sbb
je
hlt
leave
jg
orb
testb
icebp
js
das
add
mov
inc
test
out
sub
add
xchg
ror
mov
mov
mov
shl
dec
jbe
stc
sub
scas
test
sub
fadds
push
push
and
loopne
jno
add
movsl
inc
in
and
pop
shrl
push
add
add
lcall
adc
aad
jle
add
in
add
arpl
ficoms
ljmp
ffree
inc
std
sub
push
out
inc
sub
jmp
jno
pop
rcrb
sbb
push
push
add
jle
fsub
in
je
loope
lret
xchg
push
mov
dec
ljmp
rorb
je
iret
pop
push
or
add
dec
nop
jnp
xor
mov
mov
pop
cmp
cmp
pusha
sahf
cmp
jecxz
or
inc
adc
push
movl
push
add
sub
cltd
dec
push
shrb
ffree
loopne
add
adc
xlat
jg
jae
dec
mov
pushf
repnz
lds
push
jle
or
sahf
mov
add
push
test
add
loopne
cmp
fldl
pop
shrb
add
cld
es
ret
fnstcw
aam
or
scas
dec
cmpb
xchg
int
add
mov
sbb
rolb
fmul
jb
add
add
push
lcall
test
sti
xchg
das
xor
and
add
lds
shl
or
xchg
fs
mulb
xor
fldcw
and
sbb
fmuls
xor
add
rcrb
push
insl
xor
dec
imul
fsubrs
mov
cmp
mov
jp
ret
jo
xor
add
inc
addl
movsb
xchg
add
or
inc
mov
cmc
sbb
gs
add
lock
cwtl
inc
or
ds
jne
push
xchg
jmp
xchg
mov
scas
iret
repnz
jnp
jecxz
fwait
sub
hlt
inc
sub
push
add
mul
cmp
xchg
and
sub
push
sub
mov
cmp
inc
pop
or
in
in
and
mov
cwtl
mov
cmpsl
jb
fistl
out
mov
shlb
push
fs
jae
call
test
data16
pop
and
int3
jmp
dec
sub
sub
out
jne
mov
nop
fsubs
inc
and
lock
cmc
cwtl
add
or
xorb
add
sar
or
mov
clc
add
popf
inc
mov
or
aas
shr
sti
cmp
out
cmp
int3
push
sahf
xor
add
pop
sti
andb
dec
mov
add
cli
jno
rolb
sub
in
add
js
jg
shrb
mov
pop
loopne
and
pop
add
and
aam
xchg
add
sbb
mov
jmp
inc
mov
out
xor
mov
and
lods
or
outsl
pushf
adc
jb
adc
inc
fiadds
jb
and
xor
add
adc
jbe
ss
add
push
dec
mov
outsb
sbb
add
push
push
mov
mov
jge
pop
js
inc
jno
add
xor
and
xchg
sub
push
out
add
add
adc
lret
inc
mov
ja
std
pop
push
sub
pop
add
arpl
fwait
adc
fcmovbe
sbb
enter
sti
adc
aaa
ljmp
pop
out
xor
adc
inc
imul
push
out
push
cmc
in
in
dec
jne
pushf
psrlw
xchg
mov
dec
or
in
add
jnp
divl
or
fdiv
mov
mov
gs
aam
out
mov
lock
idivb
add
sahf
xchg
xchg
adc
mov
mov
jecxz
cmp
add
shrl
cmp
pusha
lock
loop
lds
adc
out
mov
enter
push
fmul
inc
add
or
xchg
xor
hlt
add
rcrl
imul
add
ret
sub
out
pushf
dec
sub
add
jp
jmp
add
jbe
das
or
push
mov
mov
add
mov
xchg
dec
lcall
mov
pop
mov
pushf
loope
stos
outsb
stc
sbb
rcll
push
mov
sub
jnp
add
sub
test
je
xchg
jno
dec
xchg
sub
add
in
sbb
pop
outsl
cmp
jle
cld
inc
cwtl
leave
and
enter
sub
dec
push
and
jg
jmp
or
xor
add
and
cmp
pushf
insl
mov
inc
cwtl
int3
cmp
lea
enter
mov
aad
test
loope
loop
arpl
adcb
xchg
mov
pop
xchg
xchg
or
adc
sub
je
shlb
cli
nop
jo
outsl
jmp
cmpsb
push
pushf
repnz
mov
paddb
sarb
jbe
hlt
add
mov
cmp
rcl
sub
leave
and
add
test
inc
int3
sub
pop
add
je
xchg
lods
add
out
stos
call
sti
ror
jle
mov
out
add
xchg
gs
jge
and
adc
nop
or
push
mov
mov
and
pushw
daa
cld
cwtl
nop
mov
cmp
xor
sbb
movhps
mov
dec
adc
icebp
add
dec
out
scas
ja,pn
add
mov
es
pop
vsqrtps
enter
cltd
mov
cli
add
mov
sbb
hlt
or
push
add
icebp
and
std
les
dec
movl
iret
cli
cwtl
popa
mov
lcall
pop
and
addl
std
fsubrs
sbb
xchg
addl
or
jno
orb
push
cmpb
add
push
bound
pop
push
pop
scas
ss
jbe
addr16
pop
inc
in
dec
xor
add
shlb
add
fwait
call
xorb
xchg
insb
cmp
dec
test
add
orl
fwait
repz
sub
dec
outsb
out
punpckldq
xchg
cld
jns
mov
dec
cmp
leave
orl
push
and
jecxz
fisttps
cmp
bound
add
xor
fstp
jne
add
movsl
rcrb
push
dec
add
loope
mov
sbb
mov
cmp
ja
pop
aaa
enter
ja
in
out
test
xchg
rcrb
aas
fldl
mov
jno
loope,pt
leave
add
add
out
cmc
sub
add
mov
and
lods
inc
dec
push
xchg
sbbb
fistpl
stc
divl
push
pop
and
inc
test
inc
pushf
js
push
fcom
jbe
and
add
shlb
xchg
sbb
add
arpl
pop
or
add
sti
add
jp
jo
mov
jecxz
xchg
out
add
arpl
cmp
ret
sbb
rcrb
cmp
loopne
rol
andb
or
add
nop
xchg
loop
rclb
movsl
add
dec
jle
jge
inc
add
mov
cmp
add
pop
cmp
out
ficoms
test
icebp
xchg
jb
test
sbb
add
mov
sub
negl
nop
add
jnp
stos
std
and
out
rcl
iret
adcb
cmp
movsb
xor
fildl
jb
mov
rclb
inc
icebp
addr16
out
cmp
sti
enter
jo
mov
pop
adc
aas
inc
mov
add
stc
inc
sahf
or
pop
cmp
add
cmp
add
ret
fcmovnbe
andb
sarb
push
into
sub
mulb
mov
xchg
push
xor
sub
pop
mov
fnstcw
mov
sub
sarl
mov
adc
aaa
bound
fldl
jp
xchg
sbb
cld
adc
mov
jns
jbe
fidivrl
xorl
and
faddl
test
mov
sub
arpl
dec
adc
and
add
cmp
jbe
call
aam
clc
ljmp
lret
jns
xor
ficoml
ret
cmp
push
sbb
inc
std
icebp
adc
inc
jo
jl
in
add
adc
add
mov
decl
sbb
popa
neg
mov
lea
subl
add
mov
pop
add
cmp
std
add
inc
rclb
ror
push
and
nop
push
sub
dec
and
je
add
arpl
testl
jecxz
sub
inc
mov
sbb
mov
cmp
add
jo
imul
arpl
hlt
push
mov
dec
or
push
xchg
and
sbbb
mov
shrl
ret
dec
rorb
into
push
inc
test
push
and
sarb
cmpsl
arpl
adc
and
dec
xor
mov
out
subl
out
add
into
test
push
push
xchg
pusha
add
decl
fldl
xchg
outsb
rclb
or
xchg
add
adc
aas
pop
cmpsb
loop
cwtl
pushl
inc
sub
cltd
ljmp
dec
mov
dec
xor
mov
scas
lea
js
fcom
aam
push
stos
sub
mov
inc
or
rcrb
mov
nop
imul
insl
xchg
ror
in
add
inc
in
scas
cmpsl
and
add
or
mov
fnstcw
rcl
sub
add
ret
pop
ret
or
rorb
jb
movsl
add
xchg
add
sub
loope
rolb
xchg
jecxz
jns
aaa
xchg
mov
cmpsb
filds
pmaxub
orb
adc
mov
mov
jl
aaa
or
inc
mov
jge
imul
movsb
and
or
jnp
jg
inc
cmpsb
dec
rcll
test
cltd
stos
pusha
popf
push
sti
movsb
out
inc
add
stos
fsubrl
add
xchg
mov
cld
cwtl
add
xchg
mov
adc
xchg
jno
cli
imul
je
mov
jg
ret
cwtl
test
add
ss
rolb
pushf
into
mov
or
shlb
or
add
int3
add
and
add
dec
cwtl
inc
add
jbe,pn
push
add
adc
sbb
cmp
mov
push
add
and
mov
loopne
adc
pop
mov
fcoms
dec
push
push
xor
ja
xor
sub
add
dec
or
mov
push
jl
addb
inc
push
fsubl
pop
cld
add
mov
push
cmp
insl
ret
add
pop
pop
cs
add
in
mov
dec
jo
add
cld
lahf
imul
pushf
repz
rcrb
sub
inc
mov
lea
add
out
mov
aam
push
add
jmp
ss
nop
jge
mov
mov
inc
loope
pop
pop
data16
daa
cltd
lea
pop
cmpb
outsb
mov
sub
shr
insb
xchg
pop
fldl
inc
data16
push
dec
mov
jecxz
dec
into
lock
rcrl
fisubs
push
nop
lret
pop
add
xchg
je
push
scas
icebp
sub
sahf
add
test
fwait
cmp
adc
dec
add
and
pop
mov
mov
mov
adc
loope
stc
xchg
out
lret
mov
dec
xchg
add
jne
in
imul
add
outsb
add
cwtl
add
test
pusha
cli
js
bound
adc
inc
test
adc
push
ds
test
mov
add
push
xor
add
popa
shll
lea
jp
fmull
and
test
xor
rclb
or
add
mov
jb
fdivr
fbstp
and
sub
dec
js
int3
cmp
pop
xor
ds
mov
push
jg
rcrb
pop
and
mov
lret
sbb
pop
mov
and
or
hlt
adc
repz
jb
adc
adc
push
adc
mov
xlat
fimull
add
in
pop
arpl
lock
test
out
push
lahf
out
popa
call
test
in
push
push
mull
jnp
add
mov
shlb
mov
out
pop
mov
hlt
xchg
jle
add
loope
add
mov
test
mov
add
dec
adc
jg
std
lock
rclb
cmp
add
mov
ret
inc
ja
lcall
sbb
inc
movsb
xor
out
adc
sub
fidivs
add
aas
pop
jnp
add
addb
jne
or
inc
cmpsb
clc
test
sbb
pop
mov
nop
cmp
insb
pop
popa
in
sbb
push
loopne
add
xchg
out
mov
sub
push
add
and
sahf
adc
pop
icebp
fldenv
je
loope
test
pop
xchg
mul
imul
scas
inc
dec
call
add
call
leave
pop
test
nop
mov
arpl
outsl
mov
fld
loop
mov
push
dec
pop
scas
stc
push
mov
jnp
enter
and
jge
push
xchg
add
push
push
jae
add
out
lods
add
inc
in
mov
xor
out
dec
test
xor
sub
js
sbb
outsl
inc
je
ret
jns
pop
insl
mov
adc
cli
lods
idivl
adc
and
int3
inc
jl
lds
inc
add
out
push
js
dec
add
dec
add
jnp
test
xchg
hlt
add
or
and
and
mov
xchg
hlt
sub
dec
inc
sub
add
rcrb
das
sbb
pop
inc
movsb
ret
push
add
mov
and
jp
add
pop
xchg
arpl
cltd
fsubr
add
pop
xorb
fs
sbb
negb
add
sub
cld
das
jnp
add
xchg
push
add
rcll
jnp
add
movsl
sti
push
aaa
add
decb
stos
testb
mov
jnp
add
fdivl
add
cwtl
fistpl
jmp
mov
dec
out
add
dec
int3
mov
arpl
add
out
js
push
push
or
lock
aas
repz
inc
add
loop
xchg
ds
rcll
xlat
jb
in
add
je
je
push
enter
sahf
sbb
xlat
inc
cli
add
imul
add
fidivrs
and
add
push
dec
cwtl
inc
mov
faddl
jnp
xchg
mov
push
imul
fwait
pop
mov
leave
pop
mov
int3
sub
or
push
xor
add
daa
jp
ds
push
repnz
mov
or
sub
test
cmp
add
xor
jmp
clc
call
add
mov
jo
iret
or
loopne
sbb
xor
adc
insl
cmpl
jb
add
jmp
lock
inc
sub
xchg
add
push
test
les
lret
into
daa
push
shrb
adc
int
pop
test
iret
filds
arpl
leave
cmpsl
lret
jns
push
or
push
add
and
mov
pop
loopne
nop
add
mov
test
xchg
dec
fisubl
inc
sub
ret
das
add
jp
iret
push
rorb
ss
add
sbb
lret
add
inc
scas
cwtl
mov
dec
add
mov
or
stos
mov
add
jne
jg
bound
add
and
cld
in
fdivl
movsl
enter
data16
fstpl
or
cmpb
mov
inc
push
and
jne
adc
int
clc
and
push
in
add
xchg
mov
std
mov
andl
ds
pusha
fmuls
or
xor
stos
lret
or
cmp
flds
mov
mull
jecxz
das
and
imul
push
push
jo
addr16
jbe
cmp
mov
inc
jbe
fcoml
repz
ficompl
icebp
rcrl
sbb
rclb
xor
pop
pop
fdivrs
jmp
pop
push
pop
fwait
mov
lods
aam
or
push
adc
inc
test
adc
push
roll
sub
jae
sub
lea
add
andb
xor
inc
inc
fwait
or
or
push
movsl
popf
lods
sahf
int3
add
js
add
xor
adc
sarb
push
cwtl
adc
inc
sub
shld
mov
xor
cld
mov
add
sub
nop
mov
add
dec
jo
xorl
roll
int
gs
sti
ja
fimull
adc
add
or
inc
pop
mov
jnp
xchg
out
xadd
std
cmp
test
inc
sbb
mov
add
adc
loopne
mov
push
jmp
ja
cmp
adc
xchg
cli
add
lds
jecxz
lods
cmp
stc
jne
or
lret
mov
fdivr
add
imul
mov
sub
dec
movsl
mov
mov
insl
cmp
push
add
add
pusha
xor
adc
push
xchg
adc
jmp
add
outsb
add
iret
int3
filds
push
sub
mov
or
push
jle
cmp
jl
fdivs
inc
dec
push
hlt
push
add
stos
int
push
push
sbb
inc
add
repz
nop
fisttpl
add
arpl
add
aaa
push
mov
add
adc
push
add
jecxz
jno
or
xor
xchg
push
mov
rcrb
push
adc
add
mov
jno
pop
jmp
pop
and
gs
add
orl
nop
mov
dec
mov
clc
loopne,pt
jl
mov
iret
leave
jnp
mov
sbb
dec
in
call
testl
sti
int
adc
mov
sbb
and
imul
adc
les
aaa
insb
add
hlt
scas
lret
pop
push
sbb
outsl
sub
inc
add
enter
or
aaa
and
subb
push
xchg
push
xor
out
and
imul
xor
cmp
pop
or
mov
js
leave
inc
testl
add
jmp
data16
mov
add
mov
jae
adc
mov
aad
add
xchg
movsb
out
fldl
dec
in
sahf
and
inc
ret
fdivrs
push
cs
loopne
ret
sbb
icebp
ds
and
divb
and
inc
or
pusha
pop
cmp
add
cmp
sbb
sbb
dec
add
push
adcl
add
push
adc
add
inc
xchg
enter
sbb
movsb
in
in
xor
movl
sarb
cmp
addb
xor
aam
ret
popa
push
pop
xchg
or
xor
insl
and
sub
sub
push
popa
ja
add
ret
sbb
or
jnp
add
dec
movb
rclb
push
push
icebp
push
loop
scas
and
xchg
and
repz
rclb
arpl
popa
xchg
sti
add
loop
jg
push
ss
jns
jae
test
sti
repz
lods
pop
rcr
mov
jo
mov
mov
addr16
dec
jl
add
fimuls
sub
jb
cmp
pop
mov
dec
add
clc
jne
filds
mov
mov
pop
jno
cmp
stc
ds
fwait
int
insl
dec
sbb
xchg
imulb
mov
mov
push
movsl
mov
dec
mov
cld
xchg
xchg
ret
adcb
es
mov
testl
xchg
push
cwtl
push
movsb
aaa
hlt
comiss
mov
jecxz
in
notb
sti
pop
add
sbb
dec
add
fldcw
mov
and
add
adc
sbb
pop
add
and
and
out
add
and
call
cmp
mov
xor
xor
jbe
jecxz
inc
sub
fdivp
int3
add
int
in
xchg
test
iret
fnstcw
lea
pop
testb
lret
mov
stc
mov
adc
sbb
insb
es
test
mov
pop
and
adc
cmc
mov
inc
cli
adc
cmp
push
mov
dec
xor
jg
adc
add
arpl
add
out
pop
add
jo
aaa
nop
mov
repz
rolb
mov
sbb
test
jle
inc
icebp
inc
cmp
sahf
xchg
insb
dec
add
jge
int
bound
push
and
xchg
sub
pusha
mov
jns
add
addb
cwtl
add
pop
and
addr16
sbb
mov
in
movsl
mov
sarl
les
pop
cmp
mov
dec
and
out
pop
stc
cmp
jnp
aad
cmp
gs
fs
push
mov
xchg
add
outsb
nop
popf
adc
ror
mov
lods
push
mov
and
push
mov
lea
add
cmp
inc
insb
add
fdivrs
add
fnstsw
lahf
add
xchg
lret
ret
xor
jp
rorl
add
pusha
and
outsl
pusha
lock
push
adc
dec
ffreep
nop
sbb
shrb
mov
cli
add
or
mov
jge
insb
sub
mulb
cmp
mov
mov
rclb
sbb
add
loop
xor
dec
into
inc
repnz
push
shlb
ret
aad
sbb
int3
pop
comiss
dec
inc
negb
dec
out
pop
movntq
out
insl
daa
pushf
stos
lock
mov
addl
sub
xchg
lds
inc
in
sbb
mov
push
sbb
sahf
adc
add
sarb
push
sbbb
jnp
push
addr16
ret
movsb
insb
in
push
stos
and
inc
push
cs
arpl
sub
orb
cmpsb
movsb
xorb
out
popl
insl
inc
push
mov
pusha
cwtl
add
decb
mov
and
cld
mov
inc
js
or
cmp
xor
imul
adc
pop
mov
in
ds
mov
test
in
dec
inc
fwait
mov
lds
lea
push
loope
mov
sub
cmpsb
fimull
add
inc
fiadds
mov
repnz
mov
jg,pt
jle
add
rcrl
add
xor
das
nop
sub
jp
outsl
push
jg
mov
xchg
and
scas
ret
and
mov
push
pop
mov
add
insl
in
add
jg
cmp
addl
adcb
jecxz
mov
jle
pop
jo
jl
sbb
adc
add
inc
insb
outsb
in
pop
in
aas
pop
hlt
arpl
faddl
movsb
nop
ret
test
iret
sbb
jb
aam
in
cmp
test
mov
adc
add
cs
inc
inc
shlb
mov
mov
mov
add
sub
loop
adc
fidivrl
pop
jae
test
cld
push
mov
add
test
cmp
push
cmp
lds
loope
lret
mov
jmp
lret
subb
les
jge
add
aas
push
jecxz
jne
sbb
insb
push
and
adc
and
inc
xor
jnp
loopne
add
sub
xchg
dec
shrl
loop
das
add
xchg
jb
std
xor
sbb
add
nop
in
testb
outsb
in
push
add
stc
inc
inc
mov
sbb
in
add
data16
mov
mov
call
lahf
add
dec
std
mov
xchg
pusha
add
cli
inc
jnp
das
mov
arpl
rcl
test
loop
push
jmp
aad
std
xchg
xchg
es
lods
loopne
mov
or
xor
add
pop
enter
loop
add
popa
dec
imul
rcrl
mov
add
cltd
int3
mov
sbbl
push
inc
inc
and
sbb
popf
and
xchg
xchg
addl
pop
rorl
dec
je
add
scas
mov
push
rorb
and
mov
popl
stos
xchg
jmp
and
add
dec
cmc
ret
ljmp
insl
ret
push
inc
test
push
lock
sub
add
in
add
enter
add
xor
inc
add
mov
jb
mov
cmp
clc
pushf
mov
and
mov
test
push
xor
pop
or
cmp
stos
lret
add
or
lds
push
add
fnstcw
add
les
daa
sub
inc
jmp
dec
pushf
out
cwtl
or
lret
dec
test
jo
inc
add
mov
xchg
add
cmp
add
or
or
pop
adc
jg
adc
sbb
add
inc
ds
dec
hlt
fildl
mov
ror
mov
scas
push
xor
shlb
lret
xchg
subb
sub
xchg
jne
add
pop
add
lods
and
push
add
pusha
dec
sbb
xchg
orl
jecxz
lea
xor
into
andb
push
rolb
mov
inc
aas
ljmp
es
sbb
movsb
aaa
xchg
mov
into
dec
js
test
fnstenv
and
je
add
lahf
cmc
inc
cwtl
popf
shrl
mov
adc
jle
test
and
add
add
jo
mov
mov
pop
and
div
ret
cmp
inc
or
mov
mov
ss
addb
sub
adc
inc
pop
mov
daa
clc
mov
addb
test
jbe
or
cmp
add
dec
repnz
push
stos
gs
add
mov
add
movsb
pushf
sarb
dec
fwait
movsl
lcall
mov
add
or
mov
adc
add
mov
add
cwtl
and
jl
movsb
jmp
lds
ret
lock
mov
and
out
mov
jb
cmpb
es
mov
and
cmp
adc
es
mov
push
scas
cltd
and
or
mov
dec
pop
cli
add
pop
dec
outsb
cmpsl
add
mov
loopne
cmp
xchg
stos
pop
xor
jne
aas
sbb
adc
popa
lods
clc
jo
or
jbe,pn
add
sub
add
loop
push
sti
dec
dec
cmc
arpl
and
cmp
ret
setle
mov
mov
movsb
pop
dec
loopne
cmp
sub
jg
jge
mov
ficomps
add
lods
and
sarb
aad
xor
shl
push
cwtl
xchg
push
inc
xchg
cli
push
mov
dec
into
inc
mov
les
int3
inc
pop
mov
add
adc
adc
and
popf
inc
xchg
movsb
je
add
int3
lea
stos
lods
adc
rolb
loopne
add
stos
push
xchg
xchg
stc
push
push
adc
out
cmp
icebp
add
dec
inc
lea
fsubr
rol
imul
pushf
add
mov
pusha
xor
adc
sub
shl
add
sub
loopne
sarb
test
dec
js
pusha
mov
lods
jne
nop
sub
std
mov
and
add
adc
rcr
mov
inc
inc
adc
adc
js
or
hlt
xchg
std
push
outsb
cmp
adcb
jns
roll
je
and
add
inc
pop
popa
lahf
and
ja
or
mov
mov
mov
jmp
aaa
mov
jb
sbb
cmp
add
and
andb
add
sub
adc
mov
in
stos
push
pop
testb
add
mov
enter
pop
cltd
sbb
out
lret
or
icebp
jb
rorl
dec
adc
repz
arpl
add
idivl
jle
or
outsb
test
shr
pop
addb
pop
and
sub
push
add
inc
push
jns
pcmpeqb
add
dec
sahf
mov
cmp
roll
pop
mov
sarl
mov
add
fistpll
add
ljmp
gs
std
das
add
adcl
inc
lret
leave
mov
adc
add
sbb
push
lahf
and
dec
pop
out
clc
pop
mov
jno
adc
mov
jge
in
add
lret
xchg
dec
sub
push
cmp
ljmp
adc
sahf
add
ret
add
xor
movsb
xchg
call
test
insb
or
mov
add
enter
mov
mov
out
filds
aas
stos
out
dec
adc
ficompl
xor
andl
push
xchg
rolb
out
cs
ss
add
loopne
jecxz
add
lea
add
leave
push
xchg
jo
xchg
test
sub
jmp
inc
lods
xchg
sub
push
xchg
ljmp
jb
outsl
pop
test
pop
aad
popa
je
add
mov
bound
add
sub
cltd
and
aaa
pop
xor
movsl
cmpb
or
add
cmpsb
pop
sbbl
fadds
mov
xchg
add
fdivrs
out
and
mov
shlb
mov
enter
mov
scas
dec
inc
clc
cmp
sub
cmp
faddl
insl
cmp
pusha
popf
adc
dec
lret
pop
out
sbb
push
xchg
mov
push
mov
movsb
mov
push
push
xlat
roll
add
mov
add
jnp
in
nop
movsl
and
jbe
push
sbb
add
sub
inc
adc
cmp
xchg
outsb
roll
insl
leave
imul
cld
add
sub
xor
mov
mov
pop
add
cmpsl
sub
and
add
push
cmp
fstps
testl
lea
outsl
aam
xor
jns
setb
pop
add
testl
jno
and
iret
testb
cmp
outsb
scas
rcrb
inc
push
sub
xor
add
push
shll
ss
jl
aad
lret
add
repnz
mov
inc
xor
jno
push
lds
add
outsb
dec
push
in
xchg
ss
nop
lahf
stos
pushf
add
dec
sbb
mov
inc
in
xor
push
scas
mov
xor
pushf
add
outsb
iret
nop
icebp
test
out
dec
fadd
xchg
add
lahf
adc
xor
ljmp
outsb
and
or
insb
into
or
jo,pn
cld
push
adc
in
in
dec
cmp
dec
add
pushf
jg
pop
cmp
xchg
arpl
call
ret
sahf
xor
adc
ficompl
mov
and
addl
ret
cld
loop
es
mov
mov
xchg
xor
sarb
cmp
clc
outsb
or
fcoml
mov
sub
addb
lock
dec
faddl
out
cmp
add
into
ret
adc
add
jp
dec
sbb
push
push
shlb
jl
pop
in
fwait
add
loopne
or
mov
test
sbb
addb
adc
mov
fsubrs
aam
popl
enter
inc
jbe
lret
inc
add
mov
cmp
push
xor
sbb
repz
jg
movb
es
xchg
jno
nop
push
push
jo
push
sarb
sbb
fmul
xor
pop
cmp
add
inc
ss
xor
fs
sbb
pushf
jge
inc
and
pop
repnz
sbb
inc
xchg
pop
mov
adc
dec
ss
loop
rcrl
lret
push
or
xchg
imull
add
push
xchg
clc
jns
push
sbb
jo
mov
rclb
mov
ret
fsubs
mov
lods
hlt
cmpsl
sub
les
xchg
mov
push
push
pop
jo
incl
jecxz
pop
add
mov
ljmp
push
and
push
cmpsl
inc
xlat
in
loopne
out
jmp
dec
add
jecxz
xchg
jno
xchg
add
xchg
stc
adc
dec
sbb
fidivrs
rorb
or
mov
jnp
push
and
in
add
daa
ror
or
mov
and
xor
pop
gs
cmp
imul
add
test
sti
subl
xchg
addb
and
adc
fsts
lret
inc
repz
leave
popa
test
call
or
adc
add
test
loop
js
hlt
xor
idivb
xorb
cwtl
jne
or
int3
dec
add
xorl
jp
aas
imul
call
in
mov
ret
cwtl
ret
mov
sub
scas
pop
out
testb
xor
es
nop
pop
dec
clc
add
out
xchg
and
daa
jne
repnz
roll
lret
ljmp
sti
pop
add
outsb
dec
nop
add
or
jp
and
xor
sbb
fcoml
mull
jle
mov
jl
adcb
rorb
mov
movsl
loopne
dec
int3
adc
lcall
jbe
mov
loope
ret
cmp
popl
sub
dec
call
mov
lds
ror
inc
add
pop
cmp
xor
sbb
rclb
add
das
fstpt
les
xchg
jmp
mov
mov
loopne
mov
mov
out
add
push
loopne
dec
add
daa
jno
stos
adc
pop
jmp
dec
cmp
cld
mov
xchg
pushf
add
push
and
sarl
int3
imul
push
add
lahf
mov
jno
iret
xlat
jp
rclb
fisubrl
mov
stos
xchg
push
sub
sbb
cmpsb
push
mov
arpl
test
push
add
sbb
sbb
jl
in
addl
and
sub
fdivl
imul
dec
shll
mov
pop
aam
jg
cli
dec
test
imul
inc
or
filds
adc
ja
sbb
aaa
add
push
decb
inc
add
jo
movsb
outsl
loope
and
push
mov
pop
lock
adc
and
dec
xor
stos
filds
jns
lock
adc
fcompl
jecxz
add
add
insb
adcb
add
mov
xchg
fidivs
dec
sub
xchg
mov
mov
dec
outsl
movsb
add
sub
inc
push
sti
movsl
aad
and
xor
mov
popf
lock
ja
into
sub
xchg
cld
dec
add
jp
add
in
sub
or
inc
cmc
or
push
bound
dec
lcall
call
inc
sbb
leave
mov
pop
mov
add
mov
add
imul
mov
clc
enter
pop
sti
sub
push
pop
test
fcomp
outsb
sbb
pop
cmp
add
shrl
cmpsl
repz
mov
cmp
xor
fwait
sub
push
scas
add
rcr
or
mov
es
int3
or
mov
jl
repnz
and
sbb
lea
inc
jb
mov
push
dec
inc
mov
xlat
inc
jl
dec
push
inc
loope
js
add
fmulp
notl
sbb
dec
sub
mov
and
decb
lcall
pop
pusha
dec
es
add
cmp
add
popf
sub
and
adc
rcl
rolb
cs
cmpsb
aaa
shlb
ret
mov
adc
lods
mov
out
cltd
dec
insl
mov
mov
cmp
cmp
lods
add
insb
movsb
rolb
or
ja
out
mov
loopne
repz
sbb
lods
push
loope
xchg
cld
push
mov
or
movd
jmp
push
pop
insl
je
add
push
je
fimuls
icebp
addr16
sub
xor
sar
mov
insl
mov
or
inc
or
les
pop
je
dec
sbbb
push
push
outsb
sahf
mov
push
jmp
and
dec
popf
pop
push
mov
jne
mov
mov
mov
inc
add
xor
outsl
imul
test
mov
mov
and
inc
add
mov
mov
mov
sahf
daa
add
mov
in
pop
iret
add
stc
jle
dec
inc
pop
inc
movsb
lock
mov
subl
xor
gs
push
push
arpl
jne
push
cmpsl
or
add
call
mov
addb
incb
movsb
jmp
and
subb
lock
mov
mov
popa
inc
adc
push
out
shlb
or
addb
push
add
cwtl
xchg
mov
mov
outsl
lea
sub
call
cwtl
sbb
popa
icebp
fstps
adc
jne
adc
test
inc
iret
or
push
dec
push
pop
addb
add
icebp
add
lock
mov
in
cld
or
imul
xor
jb
jle
idiv
cmp
cmp
push
mov
adc
add
mov
or
adc
faddl
mov
ljmp
jbe
adc
jg
push
fcompl
loop
rcrb
push
loopne
mov
je
pop
mov
jge
shr
test
sbb
pop
in
ljmp
jne
mov
std
pop
neg
xorb
into
jle
out
add
nop
pop
leave
loop
repz
pusha
add
and
js
add
inc
mov
clc
add
push
and
insb
pop
les
add
inc
jmp
dec
add
jb
out
add
std
inc
inc
int
inc
jo,pn
sub
jl
test
pop
loope
jnp
mov
movl
sbb
sub
mov
stos
pop
dec
pop
inc
mov
and
test
mov
adc
and
or
popl
sub
lret
adc
mov
adc
movsb
das
cmp
adc
in
add
jge
push
push
imul
loopne
jno
enter
mov
push
pop
jnp
cmpsl
inc
push
or
jns
xchg
cli
dec
cmp
add
mov
cs
pop
jge
shrb
add
mov
push
push
into
add
in
mov
insl
add
cs
xchg
ds
mov
in
lahf
add
mov
js
add
cs
mov
jnp
add
inc
cmpsl
das
jns
insb
and
cltd
add
pop
fdivl
push
xchg
mov
lea
jns
addr16
adcb
mov
add
test
push
movzbl
rolb
push
add
xchg
push
cmp
and
cld
arpl
sub
sub
filds
mov
roll
mov
jns
mov
jo
mov
jo
push
xor
orb
addl
cmp
mov
add
into
cwtl
test
mov
scas
jmp
xchg
jmp
xor
push
dec
sbb
and
out
insl
lock
mov
add
mov
je
es
sub
fbstp
xor
fwait
push
aad
pop
aam
clc
xor
frstor
rcrb
add
inc
test
std
lret
sti
icebp
in
or
and
testb
jo
xor
add
hlt
adc
mov
mov
sub
pop
inc
adc
pusha
xor
inc
inc
adc
jge
test
lds
mov
mov
scas
xlat
outsb
cmpl
xchg
cmc
add
loop
out
std
repz
enter
fucomip
rcrb
add
mov
lea
fdivl
add
nop
dec
cld
fwait
mov
lret
add
repz
lock
incl
mov
cld
outsl
sub
ret
or
push
cwtl
adc
shlb
lods
push
cmp
jns
mov
icebp
lods
fisttpl
push
popa
mov
dec
and
pop
mov
loope
mov
add
je
mov
dec
sub
stos
lock
stc
add
push
adc
mov
test
add
fs
sahf
xchg
arpl
int
sbb
cmp
dec
push
mov
add
jmp
add
push
cmp
cmp
inc
jmp
gs
mov
clc
add
orb
test
cmpb
and
sub
and
cmp
xor
add
insb
stc
or
js
sbb
inc
jmp
adc
mov
nop
jg
add
mov
pop
ror
in
cli
fdivrs
lahf
push
xor
int
mov
idivl
inc
xor
ret
xorb
xor
popf
add
push
addl
xchg
jae
lods
jbe
int
cmpsb
add
shlb
repnz
movsb
and
or
jle
jb
loopne
xor
add
mov
pop
imulb
add
sub
xlat
mov
addb
adc
cwtl
sub
sbb
mov
and
test
fwait
insl
roll
rol
jle
cmp
dec
rep
je
mov
clc
scas
cltd
jb
nop
lods
xor
mov
push
add
in
xchg
out
sub
add
and
add
mov
dec
jge
pop
sbb
xchg
cltd
popl
cmpsb
out
popa
inc
in
js
clc
sahf
loopne
dec
add
sub
xchg
add
out
adc
mov
jne
push
or
repnz
jg
add
stc
inc
push
add
xchg
in
sub
mov
insb
add
add
jge
lock
test
sub
movsb
push
add
inc
adc
adc
pop
sub
mov
inc
mov
es
push
add
frstor
fsts
jle
push
and
or
xor
or
add
dec
mov
add
inc
fstpl
hlt
sbb
sbb
inc
call
sbb
subl
andb
lods
fiadds
out
add
add
mov
push
mov
jg
in
out
mov
xchg
or
std
mov
xchg
stos
fldl
xchg
jg
leave
in
stos
fstps
mov
cmpsb
add
jle
faddl
mov
aaa
dec
in
xorb
fnstcw
add
popf
dec
cld
icebp
ficoms
test
xchg
in
test
daa
adc
mov
xor
subb
add
inc
and
or
ja
add
and
aaa
in
push
push
sub
iret
inc
pop
jmp
pop
mov
add
pop
xchg
insl
push
mov
mov
xchg
bound
jl
jecxz
andb
adc
add
sbb
into
xor
es
push
xor
jae
popf
or
mov
add
test
clc
aam
push
adc
cmp
or
dec
inc
sbb
add
xchg
mov
ljmp
add
and
lret
mov
add
adc
les
call
lcall
pop
cltd
lods
mov
shrb
mov
insl
mov
fldlg2
jns
mov
imul
stc
js
add
or
lds
or
mov
in
adc
rcrb
roll
adc
add
scas
sbb
mov
xor
das
jae
pop
and
cs
dec
nop
in
mov
dec
sub
xor
orb
mov
rcl
and
out
pushf
sub
call
inc
add
ficoms
in
sbb
jmp
xchg
or
sub
test
orl
mov
fadds
push
dec
jmp
sahf
call
aaa
shrd
andb
xchg
add
pop
xor
ljmp
or
push
movb
sub
mov
in
jmp
rorb
orl
xor
mov
push
call
jmp
adc
xchg
push
add
sbb
jns
add
in
rcll
push
cmp
pop
mov
loopne
into
ret
sbb
testb
adc
cwtl
xor
leave
loope
rcrb
fdivl
mov
sub
cmp
imul
sarl
aam
dec
add
cmp
sub
add
fldenv
idivl
mov
xchg
push
xchg
insl
add
iret
out
fadd
aad
aas
mov
and
sbb
inc
in
xor
cmc
pop
dec
and
cmp
loope
sbb
jnp
fwait
adc
sbb
imul
out
popf
outsl
je
adc
daa
inc
shrb
popa
mov
add
scas
add
dec
pop
jne
out
add
xorl
cwtl
sbb
mov
jmp
pop
add
pop
jle
add
inc
arpl
lahf
outsb
and
rcrb
add
xchg
mov
sar
jle
hlt
cmp
xchg
add
xchg
rolb
add
mov
enter
lds
pop
dec
outsb
shlb
cmpsb
or
int
shl
rcrl
in
mov
cltd
mov
jo
rorl
mov
sahf
repnz
jecxz
arpl
cmpsb
pop
xor
jae
imul
add
in
dec
dec
mov
rclb
loopne
mov
cmp
clc
into
add
rcrb
je
add
mov
add
push
ja
jae
mov
fstpl
repz
frstor
hlt
mov
sub
in
pop
add
mov
movsb
xchg
or
cwtl
addr16
mov
mov
shll
mov
aaa
dec
mov
into
lcall
add
int3
mov
les
ss
inc
mov
stc
add
popf
lock
jbe
jae
sarl
or
mov
cli
xchg
shlb
mov
inc
jl
pop
add
dec
push
nop
pop
mov
insb
inc
adc
and
push
daa
cmp
inc
cmp
popa
lret
inc
add
lods
call
xor
in
mov
add
xchg
xor
cmpsl
cmp
add
xchg
int3
sbb
dec
add
sub
ds
fldl
cmpsl
jle
or
les
add
loope
add
or
andl
mov
push
xor
iret
jl
nop
leave
subb
enter
sbb
fs
dec
sub
sbb
fwait
lea
push
cld
sub
mov
cltd
push
loop
pop
mov
shlb
adc
cmc
mov
sub
rorl
jo
push
mov
cs
test
shl
xchg
mov
loope
cmp
in
mov
or
out
rorb
cld
mov
cmp
addr16
add
jp
insb
mov
cwtl
mov
out
mov
movsb
cmp
cmc
sbb
adc
push
push
pop
inc
push
cltd
sbb
adc
clc
test
test
cmc
add
lds
add
scas
push
add
fsubr
or
pop
mov
mov
test
ja
mov
aaa
shlb
add
outsl
jnp
cld
fwait
jo
xchg
cmp
mov
test
je
jge
mov
rolb
cmp
add
jo
mov
add
pop
cs
inc
gs
and
es
add
outsl
lods
bound
cmp
jmp
add
add
jno
add
mov
push
inc
cwtl
cmpsb
aaa
movsl
das
arpl
cltd
clc
xchg
mov
push
xchg
pushf
pop
das
nopl
jo
cmpl
push
mov
out
sub
fcmovb
xor
push
inc
or
xor
inc
inc
add
es
cmp
inc
je
fsub
aas
inc
adcb
cmp
call
mov
lock
mov
add
push
daa
sub
test
mov
sub
or
das
push
xlat
fdivrl
jge
jae
inc
shlb
or
add
and
mov
add
rclb
fsubrl
sbb
sub
inc
shrl
or
incb
nop
in
sbb
jae
add
or
adc
ja
add
sbb
les
sbbb
ficomps
fs
add
sti
into
std
and
aam
adc
out
paddsb
mov
pop
sub
call
pusha
aaa
mov
jno
hlt
dec
test
addb
or
clc
add
es
add
push
aad
adc
or
add
popa
inc
push
cs
cwtl
add
mov
pop
jo
push
je
jl
add
mov
xlat
pop
rcll
lcall
add
loope
inc
xchg
out
ret
movsl
add
push
js
add
jno
mov
sbbb
sub
and
add
mov
push
add
inc
cmp
mov
push
lahf
xlat
cmp
adc
or
lcall
clc
mov
or
cmp
je
ja
push
lcall
ds
mov
sub
xlat
xchg
sub
mov
pop
push
adc
pop
adcl
xor
xchg
ljmp
loop
dec
push
adc
mov
out
mov
ljmp
sahf
shrb
aad
mov
and
dec
movsb
pop
push
out
popf
sbb
or
add
sub
sub
xor
push
jo
xchg
add
jmp
test
fcmovnb
mov
shl
mov
in
stc
pop
jle
popf
or
xchg
dec
add
fnsave
pushf
adc
and
add
push
les
xchg
jo
add
add
xor
mov
pop
push
pushl
push
adc
in
testl
scas
adc
dec
sub
or
pop
lock
add
add
rcr
imul
add
add
enter
xchg
ljmp
push
adc
xor
push
xchg
or
out
enter
mov
mov
lret
add
repz
mov
xchg
add
fisttps
in
push
mov
add
dec
daa
jb
add
in
xchg
icebp
adc
enter
loopne
xor
ret
dec
mov
stos
jae
gs
pushf
bnd
xchg
xlat
sbb
test
dec
and
pop
add
sbbb
lahf
sbb
sbb
add
sahf
xchg
pop
dec
lea
clc
pop
add
test
imul
aas
push
xchg
pop
pusha
add
insb
mov
or
mov
shlb
pop
and
in
mov
cld
cmp
leave
xchg
aam
aas
outsb
pop
jo
inc
aad
nop
out
lods
mov
adc
xchg
cs
cmp
push
lods
pop
add
fdivrp
icebp
mov
divl
cwtl
or
xchg
repnz
rcr
int
out
fldcw
icebp
mov
cmpsb
nop
test
scas
add
mov
js
adc
pop
inc
dec
xor
mov
in
lea
mov
xor
mov
subb
shll
push
aam
gs
mov
pop
sub
std
add
mov
mov
add
xchg
mov
outsb
or
in
ret
add
mov
and
add
inc
xchg
fmul
jno
das
ja
and
add
popf
add
ret
fwait
add
gs
scas
mov
lods
mov
or
out
addb
xchg
je
add
pop
jne
push
mov
fidivs
jo
sub
test
push
cmpsl
mov
shr
imul
stos
in
sbb
adc
mov
push
hlt
js
and
andb
clc
or
dec
xor
add
xorb
and
dec
bound
je
sub
js
push
dec
lea
inc
push
aad
pushf
add
mov
adc
cltd
inc
pop
nop
repnz
dec
mov
dec
aas
rcl
daa
adc
jb
xor
loopne
jecxz
and
repnz
int3
add
adc
push
cmpsb
bound
push
sahf
test
loop
aas
fsts
arpl
test
inc
sti
add
and
push
sbb
das
int3
cmp
fidivs
dec
add
add
jmp
movl
cli
push
mov
fwait
lock
in
and
lcall
rorb
and
shll
add
addb
cwtl
or
lea
push
pop
and
mov
in
add
lods
mov
sarl
inc
and
xchg
mov
adc
jbe
sub
enter
sbb
je
xor
push
xchg
push
and
pop
jne
dec
inc
jg
jp
sub
inc
push
fldl
push
sbb
enter
add
test
add
xchg
xchg
mov
add
push
icebp
pop
ljmp
add
jge
sub
fiaddl
inc
add
jb
jg
clc
push
push
dec
cmp
mov
ficompl
bound
jle
cmp
mov
jbe
xchg
test
jns
inc
pop
sub
daa
sbb
pop
jno
sub
pop
sbb
loopne
jbe
cli
xchg
add
sbb
loopne
mov
data16
sub
imul
pusha
add
es
adc
arpl
popf
and
xchg
and
test
lret
pop
add
lcall
insb
cmc
dec
shll
cmp
pop
jo
and
add
nop
jnp
cwtl
mov
and
mov
insb
xor
add
je
push
mov
or
ficomps
lods
nop
push
pop
jnp
loope
xchg
jl
jae
inc
dec
fcmovnbe
rolb
stos
add
mov
push
cmpsb
push
sub
call
aas
sub
aaa
mov
int
pop
sub
sub
pop
adc
cmp
cltd
cmpsl
notl
inc
xchg
ljmp
sbb
neg
add
inc
push
or
mov
fldl
inc
xchg
mov
xchg
imul
inc
hlt
mov
in
pusha
xor
subb
ror
mov
imul
adc
mov
add
push
pop
adc
cmp
cmp
push
adcb
xor
and
imul
cwtl
jb
add
jmp
inc
mov
sbb
ret
mov
inc
mov
or
stos
cld
xchg
fdivrs
pop
adc
xor
cmpl
jne
mov
xor
pusha
or
or
call
rcll
das
out
mov
inc
subl
movsb
outsb
add
call
cmpsb
inc
sub
lods
jge
mov
clc
das
sub
or
in
add
push
aam
pop
add
cmp
xchg
add
loope
jmp
xchg
add
sti
cs
push
add
mov
inc
adcb
mov
setp
mov
shrb
inc
loope
mov
add
test
negl
jg
movsl
dec
fidivs
test
mov
inc
and
push
popa
jp
push
pop
add
in
mov
loop
cmp
daa
pop
cli
add
cld
add
shrb
push
cmpsl
jo
jb
lcall
or
roll
pop
xchg
inc
xchg
jbe
nop
xlat
push
adc
add
xor
pop
imul
fsubs
loope
ret
mov
add
rcrb
jo,pt
dec
mov
loop
xchg
arpl
iret
xchg
lock
into
jge
or
add
push
pop
push
jae
notb
add
dec
inc
nop
and
mov
mov
shll
xchg
and
pusha
add
adc
cmp
sub
push
xor
aam
mov
cwtl
adc
and
iret
fisubs
add
dec
arpl
xchg
aam
sbbb
push
or
add
pop
popa
outsl
jae
lahf
add
aas
mov
adc
shl
mov
stos
add
in
push
mov
sub
jmp
lods
push
cwtl
inc
adc
mov
jns
mov
ljmp
fs
lods
add
adc
ffreep
jno
outsb
in
mov
addr16
popa
xor
inc
mov
cmp
adc
js
dec
pop
sbb
test
cltd
sub
push
and
movsl
push
xchg
push
cmpsb
ss
pushf
scas
add
ret
rorb
sbb
add
or
pop
jle
xchg
mov
push
add
or
test
xor
ret
test
or
jnp
ds
gs
repnz
xchg
push
mov
xor
add
rep
inc
cmp
push
je
xchg
push
dec
inc
push
inc
add
mov
popa
xor
icebp
rcrl
orl
add
clc
cmpsl
call
cli
push
add
ja
sbb
adc
xor
dec
and
push
mov
dec
adc
add
xchg
dec
cmp
push
shlb
clc
sbbl
xor
push
cmp
dec
push
repz
lret
add
sbb
add
int3
das
xchg
mov
frstor
data16
mov
and
in
cmp
popa
add
sub
push
cmp
xor
insb
ds
mov
add
and
add
cmp
inc
rorl
shlb
popf
sahf
sahf
dec
fnstsw
cmpb
jnp
sbb
inc
test
sbbb
lock
jge
inc
push
rcrb
xor
mull
mov
mov
inc
cli
sub
dec
fisubs
sbb
inc
test
and
sub
push
dec
jnp
cmp
es
fisubrl
cmp
cmp
and
or
je
mov
movsb
add
xchg
jle
mov
sbb
ret
inc
push
pushf
pusha
or
repz
or
dec
or
lods
dec
add
icebp
out
mov
add
pop
imul
jg
and
fs
outsb
add
int
sub
inc
dec
add
cmp
bound
push
leave
or
pop
cmpsl
xor
xor
mov
daa
sub
pop
dec
adc
mov
jecxz
sub
push
cli
sub
sahf
add
dec
mov
fwait
xchg
shrb
or
adc
adc
and
lret
movsl
enter
add
aam
jne
push
add
dec
mov
daa
bound
dec
xchg
inc
xorl
into
xor
mov
or
dec
call
out
lcall
fadds
iret
sahf
adc
xor
rcrb
aaa
sub
popf
andb
inc
xchg
add
loopne
in
pop
jo
in
popa
test
dec
dec
xchg
mov
adc
lea
das
dec
inc
aam
add
mov
gs
cwtl
add
inc
add
inc
and
add
test
sbb
pop
scas
mov
xor
fdivrs
and
mov
adc
sti
jge
add
or
add
lods
out
imul
repnz
inc
aas
inc
push
ret
sub
dec
inc
mov
add
cmp
hlt
mov
stos
add
rcll
sbb
and
repz
fadds
pop
test
mov
roll
insb
data16
movsb
push
sarb
add
jnp
mov
lds
and
mov
icebp
add
js
jle
int3
and
xchg
mov
sub
add
incl
andb
xorl
sbb
stos
inc
xorb
lret
test
xchg
add
pop
fsubrs
pusha
and
jnp
mov
movb
or
sbb
pop
cmp
add
adcl
jg
add
and
or
add
pavgb
add
loopew
add
adc
cltd
in
pop
jmp
xchg
add
pop
inc
mov
fidivrs
mov
xchg
mov
fcmovnb
jnp
or
lods
add
or
rorb
pop
stos
add
lcall
jnp
dec
verw
adc
aaa
dec
loopne
xor
inc
xchg
scas
fwait
sbb
js
adc
mov
xlat
out
jmp
add
movsb
insl
leave
mov
and
cmp
push
sub
add
dec
andb
cmp
lahf
xlat
dec
mov
clc
lea
push
xchg
pop
pop
rol
lock
enter
dec
add
aad
and
fmul
sti
adc
push
sbb
ja
mov
and
xor
xor
jge
pop
sbb
mov
nop
loopne
dec
addl
xchg
shlb
pop
add
dec
sub
xchg
jg
stc
cwtl
xchg
add
fdivl
push
pop
push
xchg
mov
adc
int
repnz
jle
add
dec
cmpsl
jbe
cli
dec
adc
roll
dec
add
test
jmp
adc
ljmp
sub
mov
popf
add
add
jnp
mov
and
pop
mov
push
xchg
add
adc
scas
xchg
loope
pop
loopne
and
in
add
inc
daa
movsb
fcomps
xor
cmp
inc
fldenv
mov
and
mov
loopne
lea
mov
insl
pop
je
cmp
add
pop
mov
out
cmp
sbb
adcb
loopne
jge
cwtl
faddl
sbbb
inc
into
cli
mov
or
orb
fs
push
jge
push
and
jno
jecxz
jo
inc
add
sti
test
aas
push
fsubl
aaa
bound
data16
mov
inc
mov
add
into
jecxz
push
or
icebp
add
outsb
mov
add
push
int3
imul
clc
cwtl
rcr
xor
xchg
in
sbbb
lds
inc
adc
jo
negl
test
ret
in
inc
adc
pusha
aas
loopne
mov
or
pushf
dec
subb
and
ret
xor
or
lret
fwait
adc
movb
in
push
mov
inc
or
inc
jo
rcr
mov
shll
add
inc
cmpsb
ljmp
les
loopne
jl
hlt
cmp
fstpt
pushf
lcall
jo
pop
xor
repnz
enter
xor
fld
data16
push
inc
xor
mov
into
cmp
cs
and
jae
mov
sub
aam
mov
sarl
jne
xor
rorb
pop
or
mov
inc
sbb
sub
adc
adc
push
lret
dec
and
add
fstl
das
lcall
xor
aaa
cltd
or
add
pop
orb
add
mov
in
bound
jo
pop
sub
inc
push
cmp
inc
lods
subb
sarb
and
jle
inc
sbb
push
popa
and
fs
add
push
and
jb
ds
pusha
inc
rorb
je
fsts
push
rcrl
fsubr
pusha
dec
inc
add
mov
sahf
cmp
outsl
out
shlb
adc
shld
orb
leave
lea
pushf
insl
shr
cld
js
arpl
loope
in
dec
or
pop
sbb
mov
nop
in
jns
int
outsl
in
sarb
insb
adc
mov
in
add
or
jmp
and
adc
adc
test
jno
dec
mov
push
sub
imul
rclb
or
add
int
shlb
push
add
ljmp
xchg
lods
out
pusha
push
cltd
or
mov
sbb
sbb
add
pop
jle
pop
jns
shl
das
enter
cmpsb
nop
inc
inc
cs
pop
inc
jns
imul
les
pop
ds
lods
mov
push
sbb
scas
in
mov
sub
xchg
clc
subl
adc
movsb
lock
loopne
adc
jmp
xchg
shrw
push
add
inc
adc
xchg
cmp
les
jnp
arpl
jle
push
adc
cmp
shrb
sbb
mov
repnz
js
and
pop
ss
or
push
add
cld
int3
imul
cmp
daa
ret
inc
shlb
out
sahf
jecxz
out
lahf
rclb
xor
cld
adc
adc
mov
fnsave
xchg
adc
mov
inc
cmp
add
jp
mov
xchg
popa
lahf
xchg
push
lods
add
cmp
dec
inc
nop
fs
jo
mov
sbbb
ret
or
cmpsl
mov
push
or
stos
sti
sub
xor
inc
lcall
and
enter
add
movsl
stos
loopne
jge
cs
dec
add
xchg
insl
sub
adc
adc
or
jmp
lcall
sbb
xchg
addb
adc
mov
pop
fmull
xchg
jl
add
mov
inc
jmp
ret
or
mov
push
xor
fidivrl
cwtl
add
xchg
pop
cmp
adcl
mov
scas
int3
test
les
add
add
adc
jp
aam
pop
add
ja
popf
je
out
shll
cwtl
inc
dec
jge
add
ds
xor
add
dec
fldl
into
mov
adc
out
mov
int3
mov
sub
add
fmul
idivl
scas
mov
and
std
add
xchg
cli
push
test
pushf
testb
mov
xchg
pop
aad
fwait
xchg
add
mov
add
ss
cmp
loopne
aas
add
int
push
add
pop
adc
sahf
test
mov
scas
jge
add
pop
shll
sarl
ljmp
add
mov
int3
sub
imul
add
sub
sbb
fcmovnbe
mov
dec
mov
add
fnstenv
clc
nop
add
add
add
rcrb
xor
mov
shlb
mov
push
nop
mov
sbb
mov
cmpb
divb
movd
fbld
das
arpl
sbb
add
add
outsb
jne
xor
sbb
jns
push
mov
dec
add
pop
mov
push
mov
and
sbb
sahf
cmp
scas
add
xchg
dec
push
add
dec
popf
jno
bound
add
sahf
cltd
adc
adcl
and
push
nop
rclb
mov
movsb
xor
add
adc
jnp
mov
pop
cwtl
es
stos
cmp
and
jl
in
pop
jle
punpckhwd
ret
xor
mov
in
xchg
jne
pop
sub
add
inc
jb
in
out
add
std
int
add
add
in
mov
push
mov
add
xchg
mov
xchg
sahf
sub
bswap
adc
fisubrs
lock
push
mov
stos
mov
ja
add
int3
adc
lahf
add
add
cmpsb
lret
clc
rorb
sub
repnz
or
mull
nop
dec
xchg
and
jno
test
sbb
es
inc
cwtl
add
les
mov
mov
sub
inc
jl,pn
fstl
lcall
je
xor
jg
add
pop
test
push
js
andb
sbb
imulb
loopne
jmp
inc
push
pop
inc
adc
and
cmpsb
xchg
in
sbbb
push
cmp
out
push
lods
test
xchg
sbb
mov
fmuls
out
or
js
sbb
mov
pop
push
cltd
mov
in
xor
int3
xchg
out
add
or
add
in
hlt
pop
test
mov
sub
orb
add
mov
in
loope
dec
add
sub
enter
sbb
jno
hlt
rorb
mov
push
xchg
repz
add
xorb
arpl
call
cmp
test
std
adc
negl
push
or
jae
lahf
sub
int
call
gs
xor
push
dec
sub
push
and
add
shl
ljmp
mov
mov
or
fildl
mov
push
add
nop
jmp
pushl
inc
xor
lahf
sbb
push
cmp
testb
jl
jp
add
jge
push
mov
das
add
call
push
pop
mov
fisttpl
jle
aas
aad
adc
or
in
out
movsl
or
fmulp
leave
add
add
std
push
xor
pop
add
push
lds
movsb
mov
add
lods
pop
mov
xchg
repz
mov
rol
loopne
add
ret
in
std
std
mov
inc
sub
add
icebp
and
add
mov
jl
or
mov
mov
icebp
ret
push
pop
xor
pop
inc
mov
add
into
push
gs
sub
cmpb
xor
mov
pusha
arpl
and
push
in
aas
mov
push
add
les
add
inc
adc
cmp
mov
out
jl
inc
incl
push
or
int3
jle
push
sbb
hlt
std
dec
add
cwtl
mov
mov
pop
add
mov
adc
daa
cmp
addb
xor
cmp
out
out
dec
push
mov
or
mov
test
jecxz
dec
scas
and
jae
and
or
mov
int
xchg
sub
xadd
cli
test
sahf
add
orl
add
loope
pop
or
stos
xor
mov
stc
mov
ficoml
add
call
mov
test
push
sbb
jo
add
das
and
add
cmp
popf
arpl
dec
push
mov
lret
add
out
mov
pop
mov
stos
lret
in
add
cmp
adc
add
iret
sub
adc
push
aas
repnz
add
ja
add
test
sub
loope
pop
fs
stc
repz
dec
cmp
pop
add
push
xchg
mov
xor
push
in
jo
rcrl
mov
mov
xor
pop
pop
cmpl
hlt
mov
pop
add
push
cmp
ljmp
inc
xor
inc
bnd
mov
ret
addl
ss
orb
sbb
sbb
and
mov
push
lcall
loop
fdivl
add
cs
lahf
lret
popa
add
pop
xor
add
and
rcrl
out
add
mov
cmp
xorb
mov
add
sub
cli
jno
inc
add
sti
out
int3
repz
pop
pusha
sub
cmp
xacquire
sbb
and
mov
mov
fcompl
adc
sarl
pop
pop
lock
testb
jmp
aas
loopne
rcrl
insb
and
es
pop
sub
and
pop
lds
cld
mov
out
jp
push
cmc
sub
cs
cmpsl
pop
add
adc
xchg
dec
js
test
and
into
jge
jp
xchg
pop
and
nop
and
jne
pop
mov
mov
lock
fs
dec
lcall
add
jbe
dec
dec
lods
cmp
push
pop
loope
stc
call
pop
push
xor
jge
imul
mov
fldl
bound
cmp
xchg
pop
in
fcmovne
pop
mov
mov
xchg
pop
and
pop
daa
sub
mov
inc
pop
in
ja
add
test
iret
data16
adc
mov
xor
adc
jle
xlat
add
daa
pop
pop
inc
adc
std
inc
repz
pop
lcall
mov
jb
add
mov
jp
cmp
xor
or
outsl
mov
addb
inc
cmpsb
jp
daa
ss
adc
and
push
or
loopne
add
xchg
add
jb
cwtl
xor
mov
mov
rol
mov
std
adc
pusha
jb
lods
incl
mov
add
mov
add
adc
mov
sub
or
or
cmc
jns
and
mov
jmp
jb
cmp
dec
add
out
pop
push
mov
loopne
add
test
mov
nop
orb
or
add
lds
insl
pop
cld
aas
fnstenv
mov
rorl
ret
push
mov
loope
clc
mov
dec
mov
cmp
jl
or
jae
sub
outsb
cmp
sbb
aaa
cli
les
rcrb
in
pusha
add
add
cli
or
mov
js
push
shlb
or
addb
dec
add
pop
dec
or
insl
negb
daa
add
js
xchg
mov
xchg
andb
loope
nop
xchg
lock
add
repz
dec
cld
cmpb
add
fsubl
fisubrl
popf
mov
adcl
shll
cmp
dec
xchg
addr16
xor
inc
ljmp
mov
and
xor
pusha
int3
movsb
cld
inc
lods
jae
or
push
jb
add
mov
pop
pop
mov
xor
xor
js
repz
sub
inc
hlt
xchg
sahf
jl
les
in
add
push
fcoms
or
push
fsincos
xchg
int3
add
fbstp
xorl
cmp
outsl
imull
dec
cmp
pop
or
in
push
ja
dec
xchg
out
add
dec
jmp
adcb
test
xchg
clc
xchg
sbb
adc
stc
add
pop
pop
cmp
and
sbb
mov
popf
loopne
xor
add
xchg
sbb
mov
in
fadd
inc
inc
aam
dec
jecxz
mov
mov
aad
add
mov
or
add
inc
cld
je
add
pop
cmpsb
daa
add
incb
xor
or
dec
fbld
pushf
add
jo
sbb
jge
and
popa
sbb
aam
jg
andb
js
call
sbb
outsl
xor
cs
roll
add
mov
cmp
bound
ffree
and
jo
aas
fisubl
mov
dec
push
sub
jo
push
jp
cmp
cmp
jae
fistl
push
cld
jge
dec
add
mov
popl
jbe
inc
cmp
cmpsl
orl
mov
pop
add
icebp
mov
in
cmpsl
into
add
sbb
add
hlt
mov
lods
cmp
incl
xchg
gs
out
cwtl
inc
les
adc
and
popf
inc
mov
lcall
das
lea
jo
std
lods
mov
leave
ja
js
in
test
dec
das
negb
xchg
shlb
fidivrs
bound
in
sbb
pop
fldl
mov
sbb
add
sbb
pop
mov
ja
add
adc
leave
jmp
pop
add
js
sarb
aas
mov
mov
mov
xor
iret
imul
das
sbb
mov
hlt
daa
cmp
add
mov
cwtl
push
push
xorl
or
test
sub
add
negb
jl
adc
leave
xor
movsl
mov
cmovae
cmpsb
test
leave
xorl
stos
lahf
jb
or
dec
xorb
subl
in
pop
lret
cmpb
add
daa
lods
cmp
cwtl
fiaddl
cltd
inc
mov
fldenv
fwait
repz
add
fcmovb
mov
in
sbb
test
movsl
cmp
mov
mov
cmp
add
insb
xchg
xor
dec
sbb
mov
adc
add
or
stos
pop
inc
faddl
cmp
xor
sbb
pop
add
mov
outsl
out
je
add
mov
mov
imul
aam
jge
sbb
add
push
add
mov
paddusb
pop
add
pop
and
lock
or
shrl
lsl
loopne
jg
roll
repnz
push
arpl
cmp
incl
push
dec
push
cmp
inc
cmp
gs
inc
jecxz
hlt
dec
mov
inc
or
dec
add
fiadds
and
push
icebp
lret
idivl
das
adcb
ljmp
sub
aad
add
mov
insb
jae
popf
add
test
arpl
add
jne
mov
stos
fwait
sub
jg
xchg
dec
inc
inc
or
cmp
out
sub
mov
add
lcall
add
xor
loope
jl
jmp
out
and
inc
pusha
mov
les
pop
dec
adc
imul
mov
in
in
mov
rclb
mov
fucomi
dec
ss
and
loop
jo
test
or
adc
bound
sub
mov
test
add
pop
mov
mov
das
jle
pop
cmp
jmp
mov
shrb
incb
xor
push
pusha
mov
add
mov
repz
push
arpl
sub
hlt
xor
xchg
pop
cwtl
mov
mov
cmpsl
add
je
lods
scas
cmp
test
mov
test
pushf
shlb
push
ds
lea
lods
js
mov
add
cmc
and
xchg
repnz
movsl
leave
loope
insb
out
cmp
mov
mov
pop
ffree
jbe
mov
or
sbb
lods
rcr
pop
and
inc
lock
rclb
jne
add
repz
movzwl
addl
dec
std
xchg
add
popf
dec
pusha
sbb
add
test
jge
arpl
out
and
or
add
aaa
pop
xchg
icebp
jg
xor
lahf
dec
fdiv
rorb
or
add
dec
adc
je
xchg
loopne
sbb
pop
adc
or
jmp
insb
hlt
xor
pop
add
mov
rcrb
push
jle
arpl
inc
push
cld
lret
jo
add
or
aad
dec
add
fisubs
add
dec
fsub
add
loope
into
clc
jb
xchg
leave
in
cmp
mov
ja
aam
mov
sbb
sub
in
add
popa
lods
pop
mov
roll
sbb
icebp
jno
int
lcall
add
adc
jmp
or
inc
cld
es
jo
xor
adc
xchg
jnp
add
xor
inc
xchg
jae
dec
sub
sbb
fwait
pop
sub
pusha
adc
xor
add
add
aaa
je
add
add
dec
jno
mov
outsl
cmpl
iret
mov
dec
arpl
add
jg
sbb
sbb
jno
and
pop
cwtl
int3
sub
stc
in
fwait
popa
jae
add
xchg
xchg
ds
repz
in
cmp
sarb
lods
lcall
mov
xor
daa
sbb
sub
pop
xlat
xor
icebp
jnp
movsl
jo
stos
add
xchg
inc
cmp
mov
pop
xor
mov
sti
lret
int
pop
add
jecxz
inc
mov
filds
xor
cmc
ljmp
fadds
jg
push
mov
pslld
add
sbb
out
sti
xchg
pop
adc
flds
inc
dec
cmpsb
pop
pop
add
std
sub
xchg
dec
lods
and
mov
add
insb
sub
aad
nop
add
dec
mov
or
sbb
cmp
add
inc
movsb
inc
shrb
iret
cld
pop
pop
dec
enter
inc
mov
mov
test
adc
repnz
aas
push
cmp
add
add
icebp
jecxz
add
mov
movsl
adc
mov
add
ret
call
or
addb
mov
jnp
add
cmpsl
test
add
jg
test
add
mov
out
fldpi
dec
cmp
adcl
add
add
add
jg
cs
fadd
add
mov
dec
or
ret
and
mov
adc
loop
dec
pop
popf
push
add
loopne
dec
rorb
add
or
adc
push
lcall
lods
adc
jecxz
inc
inc
or
out
bt
iret
sbb
test
movsb
add
mov
mov
pop
mov
add
and
nop
or
adc
into
mov
xor
fs
jne
adc
jle
and
leave
add
mov
sbb
push
add
jmp
push
push
cmpsb
mov
xchg
sti
icebp
sbb
mov
mov
cld
mov
jge
lods
pop
imul
sub
pop
jmp
inc
in
pop
sti
mov
cltd
jmp
lahf
inc
cld
pop
xor
mov
fldt
xchg
fs
out
test
shrl
inc
rcpps
movsl
adc
pop
decb
cld
outsb
cltd
cwtl
test
or
mov
inc
fcmovb
adc
xor
lods
and
test
inc
sar
movsl
std
push
and
loope
pop
lds
sbbb
adc
jbe
bound
leave
je
xor
pop
add
xchg
cmp
lock
add
out
cli
mov
aam
xor
inc
mov
add
addr16
inc
out
movb
repz
loopne
ljmp
mov
incl
jg
pop
mov
ror
add
or
js
pop
bound
outsb
mov
mov
movsb
mov
add
push
xor
cmp
and
add
sarl
pushf
add
jo
xchg
in
movsb
aaa
stc
add
xor
les
sbb
aam
stos
or
decb
cmc
es
and
adc
mov
stos
int
faddl
sub
pusha
dec
ret
fildl
sub
adc
js
or
cmp
adc
sbb
in
pop
mov
add
jmp
lods
push
fsubr
in
xchg
add
push
dec
adc
and
add
fs
mov
sub
pop
mov
jae
sub
add
and
mov
ds
adc
in
pop
mov
jl
dec
xor
mov
mov
dec
mov
in
add
add
test
scas
mov
cli
bound
dec
sbb
loopne
jp
js
push
adc
mov
add
enter
add
imul
jno
mov
out
stc
out
js
dec
popa
xlat
mov
xchg
push
or
cmp
add
popa
jge
ret
rorb
iret
xor
cmp
incl
rcrl
or
cmp
inc
sub
ret
ret
rcrl
and
stos
int
lret
cmp
add
nop
leave
mov
dec
pushf
xchg
sbb
shlb
je
sub
dec
inc
xchg
jp
xchg
out
str
popf
pop
xor
sbb
dec
mov
add
loope
into
sbb
fwait
int
push
lods
scas
cmp
paddusw
pop
pop
mov
cltd
shll
pop
test
dec
sub
pop
std
rorb
or
adc
mov
push
inc
js
stos
push
pop
pusha
aas
rolb
sarb
add
sub
add
out
mov
je
sbb
fwait
xor
adc
sti
jmp
lret
in
pop
add
jl
mov
mov
inc
sub
cmp
int
add
dec
jge
xchg
xlat
pop
movsb
cmp
stc
scas
sub
outsl
and
jmp
imul
cmp
ss
or
mov
cltd
cmpsl
inc
and
jmp
inc
add
or
scas
jmp
pushf
pop
outsb
popa
add
xor
add
dec
rorb
mov
sbb
sub
sub
lods
and
outsb
or
popa
repz
mov
fnstcw
loopne
shll
lods
dec
scas
push
dec
adc
jecxz
mov
sub
xchg
insl
clc
mov
mov
loop
push
fimull
lret
cltd
lcall
mov
or
xor
add
jmp
lret
test
xchg
or
mov
stos
test
jp
add
sub
fldl
imul
call
or
mov
dec
outsb
adc
xchg
loop
les
cmp
sti
jno
add
mov
adc
scas
jo
loop
pop
sbb
movd
dec
cmpsl
xor
in
mov
sbb
sub
dec
mov
adc
lret
ljmp
ja
js
add
fsts
xor
sub
sti
orb
or
fsubs
add
outsb
iret
lret
jno
jne
push
imul
sahf
xchg
cmp
nop
add
lret
pop
pop
mov
mov
dec
pushf
add
std
ret
pop
js
out
fsubl
mov
add
lock
add
jbe
sub
idiv
orb
push
and
inc
cmp
mov
add
jge
pop
cs
adc
pushf
fwait
repz
xor
dec
adcb
nop
push
push
int
popf
fcomps
or
inc
add
jecxz
jno
mov
cmc
xchg
aam
push
pop
sub
jmp
add
mov
adc
jne
inc
add
jecxz
pop
mov
push
add
fs
or
enter
jl
nop
les
test
pop
sbb
loop
out
int3
mov
loopne
and
add
movsb
pushf
mov
lret
rolb
pop
push
mov
jmp
inc
in
adc
push
jno
add
cmc
insb
loope
rclb
addb
cwtl
push
mov
pop
dec
or
mov
adc
loopne
xchg
jge
mov
xor
pop
mov
pusha
mov
push
into
cwtl
inc
pusha
sarb
sub
dec
loop
scas
add
idivl
sbb
sub
test
add
add
fcmovb
pop
sbb
xchg
ret
insl
inc
mov
and
loop
outsl
ss
fwait
sub
xchg
jbe
or
adc
mov
call
or
pushf
jmp
enter
or
lods
rcr
mov
cmp
in
sbb
pop
cmp
jae
push
shll
mov
xchg
mov
or
out
pusha
add
scas
add
push
mov
inc
xchg
jae
dec
mov
rclb
pop
mov
mov
mov
cmp
inc
ret
push
notl
pusha
mov
add
fcomi
jno
cltd
call
xchg
in
dec
aam
add
test
add
xlat
or
adc
mov
inc
incb
pop
fcmovnb
fisubs
imull
hlt
cli
nop
add
mov
dec
adc
fnsave
ret
and
add
mov
addr16
fsubs
cwtl
mov
xor
push
movsb
add
nop
fistpll
jge
sub
cli
fs
decl
loopne
and
das
nop
sub
scas
faddp
add
xchg
cmc
cmp
adc
xor
jae
es
test
stc
test
dec
stc
test
add
cltd
mov
and
sub
pushf
add
mov
stos
lods
sbb
fs
sbb
mov
scas
cmp
pusha
sbb
add
fld
in
out
fcompl
add
and
test
insb
sub
push
lret
adc
fists
cwtl
xor
aam
pop
addb
inc
imul
dec
dec
lds
mov
pop
xchg
inc
inc
test
pusha
jno
push
iret
sbb
sub
mov
push
daa
mov
add
xchg
mov
push
pop
push
xchg
cmp
sbb
xor
cmp
pop
xchg
add
and
sbb
add
dec
push
or
mov
add
jg
mull
add
cmp
dec
negb
jb
mov
dec
sbb
loopne
imull
aas
outsl
bnd
push
pushl
jle
or
pop
nop
pop
add
lods
adc
test
lahf
dec
and
pop
cmp
add
jp
imul
lcall
sbb
mov
imul
data16
mov
inc
cmc
enter
rcll
xor
sti
xchg
mov
add
int
add
pop
pop
or
pusha
imul
xchg
aam
mov
mov
aaa
les
ds
sbb
shl
push
or
xorl
sbbl
loopne
push
push
int3
push
mov
pop
aam
out
bswap
xor
jle
roll
shrb
movsb
adc
mov
xor
cmp
icebp
movsl
dec
add
lret
outsl
mov
aaa
lret
pushf
push
mov
add
idivb
inc
mov
add
scas
jo
aad
jg
inc
dec
inc
cli
add
and
adc
dec
popa
cmp
mov
sub
fadds
add
in
notl
add
movsl
das
fimull
jl
rol
pop
repz
add
test
cmp
jb
shlb
bound
imul
dec
sahf
adc
adc
clc
dec
mov
or
add
dec
sar
fs
dec
xlat
div
adc
rclb
mov
pop
mov
ja
loope
dec
xchg
and
and
add
outsb
aad
into
sbb
dec
mov
add
xchg
xchg
loope
out
lods
fisubl
add
and
cwtl
add
pushf
add
inc
add
pop
mov
pop
pop
lods
add
xchg
cmp
or
and
fdivrs
push
and
add
dec
sub
lock
jmp
add
mov
cmp
add
dec
scas
aas
test
add
int3
outsl
dec
add
js
jne
pop
xchg
xchg
imul
pusha
mov
cmp
xorb
popf
dec
ja
add
aam
aas
cmpsl
sbb
add
cmpsb
mov
cwtl
jo
mov
lock
sub
sbb
xor
pop
mov
bound
mov
lods
add
dec
in
dec
pushf
add
sbb
dec
sub
pop
call
jnp
ret
dec
xchg
lock
stos
mov
aad
mov
jae
std
cmp
lods
dec
es
or
daa
add
mov
ret
add
jg
ja
les
sarl
leave
adc
nop
adc
mov
adc
jae
pusha
insb
xor
shrb
int3
cld
lock
aad
inc
mov
sub
jo
add
mov
mov
add
mov
pop
daa
enter
push
cli
bound
jo
add
loope
add
in
loop
pop
fsts
adc
sbb
into
cmp
fisttpl
dec
addb
lods
lock
icebp
scas
jne
push
out
push
add
gs
out
inc
add
bound
xchg
jp
push
shlb
xor
add
cwtl
cmp
add
dec
fisubrl
add
mov
push
xchg
test
das
mov
add
lret
add
mov
dec
fadds
pop
subl
lret
je
xor
dec
mov
out
add
loop
imul
and
cmp
xchg
jle
adc
nop
add
out
inc
into
lea
mov
lock
add
xor
jmp
push
and
pop
cmp
sbb
push
das
or
or
xchg
out
testb
stc
jmp
pop
add
and
mov
subl
add
or
cmp
or
mov
lahf
andl
loop
xchg
rcrl
js
add
mov
loopne
inc
lea
xor
sub
sbb
mov
cwtl
int3
fisttps
bound
add
mov
mov
adc
add
inc
inc
scas
sbb
dec
call
inc
push
and
in
ret
add
and
es
popf
add
popf
addr16
mov
mov
in
or
daa
add
je
add
rolb
lods
xorl
pop
sbb
xchg
adc
inc
mov
ror
cwtl
and
jmp
add
scas
aaa
pop
jmp
dec
xchg
popf
aad
add
cwtl
xchg
xchg
mov
enter
push
xchg
call
in
gs
cmp
jge
loop
add
mov
and
pop
aam
mov
xor
adc
jno
mull
xchg
and
pop
mov
std
add
in
fldl
cmpb
fcmovnb
ret
sbb
mov
or
inc
cmp
jo
cmp
push
mov
ret
adc
push
adc
inc
aas
add
pusha
insl
or
scas
mov
jae
outsb
sbb
das
push
imul
cmp
add
sti
je
mov
adc
and
das
pop
inc
loopne
ret
mov
add
cmpsl
rolb
test
inc
stos
outsb
lret
sbb
add
lods
or
jmp
fnstcw
movsl
add
lds
lea
xor
sbb
mov
adc
cmpsb
jl
add
mov
lret
test
jbe
rolb
sub
sbb
add
sbb
test
fcomps
inc
jmp
add
pop
loopne
pop
js
jg
jb
iret
sub
inc
mov
sub
add
sub
inc
jl
int
push
mov
pop
pop
cmp
cmpsl
or
out
jmp
xor
sbb
inc
stos
inc
mov
jmp
arpl
into
shl
adc
ret
sti
cld
add
mov
movsl
mov
sbb
ja
scas
jnp
add
adc
add
pop
mov
dec
out
ja
inc
insb
add
inc
push
imul
pop
leave
ds
cmp
das
mov
push
sbb
lea
gs
mov
fldt
sub
jle
int3
xchg
lea
sbb
lret
push
mov
adc
sbb
push
mov
aam
cmp
ds
cmp
filds
mov
cmp
pop
in
mov
jg
and
fadds
movsl
mov
xor
add
rcrb
addl
inc
pop
add
push
dec
pop
test
add
mov
lds
xchg
push
or
inc
jo
out
mov
xchg
loopne,pn
pop
flds
nop
std
xchg
roll
add
adc
xorl
and
add
pop
pop
popf
cmpsb
movsl
xor
stos
add
cmp
lret
jb
dec
or
popf
cs
sti
or
pop
jl
pop
cmc
mov
int3
and
arpl
xchg
lds
add
dec
ja
add
idivl
leave
mov
cwtl
enter
cmp
mov
dec
add
add
pop
cmpsl
add
dec
xchg
cmp
lcall
add
sub
sbb
lcall
adc
jno
clc
push
out
jne
mov
xor
xor
aam
fmull
xchg
and
jge
add
loope
sbbb
mov
stc
cld
dec
add
adc
in
mov
sarb
not
mov
push
mov
add
mov
stc
or
jae
add
cmp
arpl
in
loop
add
out
mov
popl
pop
adc
pop
sbb
mulb
pusha
mov
loop
mov
das
or
dec
jecxz
ja
mov
add
adcb
or
stos
in
leave
add
push
xchg
out
push
mov
filds
nopl
pusha
sub
call
inc
or
dec
dec
daa
inc
or
icebp
and
data16
out
lea
pop
mov
imul
je
mov
fdivrs
in
add
mov
mov
add
sahf
rcll
push
hlt
push
pop
push
outsl
mov
das
pop
mov
repz
sbb
faddl
fadds
and
movsb
pop
jmp
cld
ret
jecxz
into
adc
mov
int
nop
sub
outsb
and
cmp
into
push
push
int3
cli
adc
or
imul
jle
rorb
in
cmp
sbb
nop
aam
cmp
aas
ret
add
cwtl
insb
pop
add
mov
jmp
add
xchg
jmp
xchg
xor
push
push
mov
adc
mov
add
xchg
outsl
test
int3
add
cli
sbb
pop
mov
xor
add
push
in
pop
mov
shl
clc
mov
jae
or
cmp
mov
sbb
mov
add
mov
or
mov
cmp
test
mov
enter
sub
dec
adc
pop
add
pusha
rcll
cmp
push
in
xchg
push
faddp
inc
mov
into
enter
aas
mov
cltd
mov
es
outsl
imul
mov
pushf
and
sub
mov
cmp
push
vmovups
add
mov
aaa
add
mov
es
jg
rdtsc
and
mov
xchg
sti
subb
sub
or
inc
mov
incb
fld
push
add
adc
popf
add
dec
lods
lcall
add
adc
aas
aas
xor
shll
cmpsl
fsincos
add
in
sbb
adc
shlb
jbe
movsb
cmp
push
mov
popa
add
std
sbb
mov
mov
adc
mov
xchg
in
outsl
repnz
scas
add
adc
mov
add
push
pop
aam
mov
push
clc
add
add
cmpb
push
out
push
add
cmpsb
push
test
mov
xchg
cmp
mov
adc
adc
inc
add
js
sub
lea
test
add
jecxz
mov
ja
adc
mov
or
loopne
fwait
dec
xchg
mov
cltd
aad
push
movsb
es
bound
inc
sahf
test
add
add
outsl
or
mov
xchg
add
pushf
dec
pusha
addl
sbb
aaa
push
cmp
add
iret
cmp
scas
jl
add
adc
lds
add
lods
movsb
lret
xlat
sbb
pop
xor
add
sbb
divps
int3
sbbb
insb
add
daa
arpl
add
pop
int
mov
mov
in
sub
lret
rcrl
jp
insl
inc
ja
add
cmp
testb
sub
add
sub
sbb
push
loop
jecxz
cmp
dec
jl
jne
add
rclb
dec
dec
enter
add
daa
bound
stos
scas
sbb
fidivrl
add
lahf
lret
inc
xchg
add
dec
cltd
sbb
fnstenv
jle
imul
fnstsw
add
pop
and
dec
sarb
mov
cmp
mull
sbb
mulb
repnz
roll
or
inc
movsb
and
xchg
lret
add
jb
les
add
sub
sahf
test
iret
xchg
mov
stos
xchg
loop
cli
lds
push
popf
pop
test
fwait
push
insb
push
xor
pop
pusha
aam
sbb
push
es
lahf
into
fmul
jl
mov
mov
push
out
add
jns
sbb
aaa
add
cmp
xchg
mov
sub
and
scas
xchg
xor
cmp
cmpsl
pop
add
aad
test
sbb
js
pop
jmp
faddl
clc
jp
pop
adc
add
add
push
inc
add
jmp
imul
add
shrl
add
scas
mov
aad
jno
pop
mov
pop
add
js
and
mov
pop
xchg
dec
mov
adc
imul
call
outsb
data16
out
orb
out
imul
or
mov
add
adc
push
jo
pusha
pop
andb
add
popa
arpl
rolb
pcmpeqw
test
sbbb
add
je
cwtl
fists
inc
jb
sti
into
incb
and
shrb
loope
pop
add
dec
xor
jge
rcll
sete
imul
cmp
pop
push
adc
subb
jae
add
push
xlat
jbe
pop
xchg
sti
sub
mov
add
aas
je
or
dec
sbbl
cld
adc
cmp
jae
inc
addb
fs
rorb
bound
dec
mov
add
test
iret
clc
pop
add
push
nop
pop
enter
xchg
jmp
mov
add
xchg
inc
add
and
imul
sub
add
sbb
in
mov
add
es
jmp
push
add
test
push
hlt
addb
mov
int3
pop
cmc
fnsave
jge
add
or
mov
xchg
sbb
hlt
in
aad
out
inc
fwait
add
push
cld
stos
mov
imull
add
ljmp
nop
insb
cmp
cmp
xorl
loop
enter
add
mov
loopne
add
out
push
jbe
notb
push
cmp
push
notl
sub
shll
add
push
rcr
sbb
cmpb
inc
add
jl
adc
xor
mov
pop
sub
dec
jg
push
add
xor
add
jbe
popa
push
int3
sub
nop
daa
pop
out
cld
xchg
clc
lret
leave
jno
imul
add
mov
cwtl
lds
sbb
jo
mov
or
adc
or
nop
add
jne
cmpsl
jno
mov
sbb
push
loopne
mov
es
lret
cmovl
cwtl
push
mov
dec
stos
decb
movsl
mov
jno
push
rclb
mov
imul
daa
fiaddl
jns
xchg
movsl
jge
nop
jae
insl
jno
out
add
loop
push
aas
sub
add
scas
incl
add
jp
int
and
not
std
push
mov
mov
cmp
lahf
pop
addb
pop
inc
in
mov
sbbl
add
scas
jnp
sahf
sub
push
xchg
add
ficomps
adc
out
or
loope
add
lds
cmp
mov
add
and
sahf
pop
test
aas
or
pushf
add
lret
pusha
mov
sbb
push
pop
out
ret
ljmp
cmp
and
xor
add
xor
cmp
sahf
ss
bswap
ret
stc
int3
jae
adc
mov
add
push
pop
inc
jecxz
out
cli
jnp
imul
shl
dec
add
jge
jmp
pop
mov
and
and
loopne
filds
cmp
popl
dec
xor
inc
cmp
cmpsb
mov
add
fnstenv
inc
mov
movsl
mov
mov
sub
ja
jne
sbb
mov
cmpb
ljmp
fucom
mov
std
jmp
mov
xor
or
notl
xchg
xchg
add
clc
mov
shlb
aad
cltd
repz
xor
popa
inc
nop
fsubs
mov
lea
mov
dec
mov
sti
test
cmp
inc
mov
or
jne
jnp
adc
loopne
or
ljmp
mov
add
push
mov
add
dec
in
mov
sbb
and
add
mov
sbb
loop
ljmp
or
arpl
cmp
repnz
mov
add
cmpb
add
mov
mov
scas
jo
and
xor
sbb
repz
pop
push
sbb
xchg
sbb
jae
xchg
inc
adc
lldt
mov
or
mov
xchg
es
ja
out
clc
vpshab
clc
stos
lret
test
push
fcmovne
rclb
mov
fisubrs
lods
movswl
jmp
icebp
fcompl
clc
in
cmp
fsubs
mov
adc
jns
mulps
xchg
mov
cmp
imul
pop
jp
shll
add
mov
or
mov
inc
add
loop
lock
jl
sub
jbe
es
and
arpl
mov
and
insb
rcl
aas
add
mov
cmpl
mov
xchg
and
sub
lods
ds
mov
movsl
add
jnp
inc
add
add
jns
dec
cmp
cmp
cwtl
inc
int
mov
pop
jb
pop
mov
dec
testb
xor
shr
outsl
test
inc
shll
ds
jbe
pusha
add
inc
xchg
nop
loop
popf
fs
push
popa
adc
xlat
sub
scas
mov
jg
int
xor
sbb
sub
fistps
cmp
ficoml
jo
jne
xor
add
js
adc
add
xchg
orb
add
jmp
cmp
pop
scas
js
push
dec
add
pushf
test
shlb
jmp
in
data16
in
jb
add
push
xorb
hlt
and
xchg
add
or
dec
xchg
jle
add
movsb
dec
pop
pop
andl
or
rorb
sarb
pop
add
stos
sbb
pop
push
mov
lcall
clc
mov
ja
enter
into
fldt
lcall
pushf
pop
adc
jns
cmp
add
mov
shrb
add
cmc
xchg
out
xor
lcall
addr16
mov
mov
pop
aad
rcrl
cwtl
loope
cs
add
ljmp
lret
sbb
iret
hlt
cmp
mov
push
dec
gs
add
and
repz
cmpsb
push
jb
add
daa
outsb
imull
dec
inc
sub
jp
add
xchg
or
or
add
inc
or
pushf
stc
and
sub
xchg
mov
pop
lods
fsubrl
adcl
rclb
cli
imul
sbb
cld
repz
out
and
ret
sub
cmc
pop
fldl
insb
dec
mov
dec
jg
jge
add
dec
lods
add
sbb
push
xor
iret
or
cmpsb
rcrl
cmpsb
add
mov
push
and
jle
add
repz
sbb
cmp
xchg
notb
dec
test
mov
lock
mov
add
adc
xchg
in
clc
adc
or
add
add
testl
mov
sbb
push
roll
ret
loopne
inc
mov
rolb
jmp
jnp
mov
outsl
andb
inc
mov
daa
xor
adc
imul
mov
dec
in
mov
and
push
rol
mov
xchg
subb
inc
jecxz
js
add
push
push
iret
add
mov
add
filds
mov
mov
sbbb
popl
pop
dec
js
mov
or
add
mov
push
nop
xchg
xlat
add
pop
mov
mov
pop
mov
out
hlt
jae
add
outsl
dec
sbb
cltd
jo
add
add
cmp
roll
mov
sub
jne
push
pop
fwait
adc
es
sbb
add
test
mov
mov
mov
push
mov
rolb
sbbb
and
add
repz
pusha
jbe
jbe
aam
lods
mov
push
dec
xor
dec
les
push
adc
js
cmc
and
xchg
push
xchg
add
ret
neg
pusha
stos
mov
ja
cmc
pusha
loopne
sub
cmp
push
inc
repnz
nop
decb
in
fiadds
insl
and
xor
add
int
pop
or
sub
fwait
mov
jno
out
cmp
in
jnp
pop
dec
cli
in
bound
push
xlat
add
jbe
jns
jb
lahf
lcall
cmc
mov
ficoml
and
jb
std
call
dec
adc
cmp
insb
sarb
js
jle
push
mov
xchg
popf
add
and
cmc
add
dec
or
lret
popf
add
inc
inc
pop
cmp
sbbb
or
cmpsl
and
jg
add
in
daa
in
arpl
mulb
lret
adc
pop
mov
and
add
ret
imul
hlt
pop
mov
test
push
add
inc
gs
sub
add
add
jl
iret
mov
xchg
jmp
stc
out
jbe
add
and
add
fadds
int
mov
subb
mov
mov
les
jb
loopne
je
icebp
rcrl
testl
mov
dec
pop
lods
cmp
add
into
push
mov
sub
sti
scas
scas
loopne
pop
fcom
push
add
cmp
or
xchg
cmpsb
test
add
in
cmc
push
icebp
cld
dec
inc
xchg
xor
imul
cmp
out
icebp
in
add
pop
pop
popf
adc
imul
test
in
inc
add
push
aam
pop
cwtl
mov
fwait
nop
push
repz
and
sbb
aad
sbbl
sbb
pop
sbb
addr16
lods
out
sub
lock
add
adc
add
mov
fimuls
adc
mov
adc
dec
cltd
aas
add
xchg
icebp
hlt
adc
add
dec
int
mov
push
lock
pop
cmp
pop
out
mov
add
sub
cwtl
jo
add
iret
xor
add
sbb
pop
sbb
out
mov
cmp
sbb
xor
pop
mov
je
add
adc
out
movsl
cmp
data16
lcall
filds
add
push
cmpsl
loop
sbb
popf
movl
pop
das
mov
jbe
add
mov
cli
ljmp
add
push
pop
rcrb
stc
in
mov
adc
js
sahf
test
stos
fucomi
mov
add
or
divb
sub
add
pop
dec
sub
or
and
cmp
add
fcomps
ret
mov
inc
cmp
nopl
xchg
xchg
dec
dec
add
pop
push
icebp
sysenter
addl
or
out
cmc
pop
int3
pop
sbb
incb
iret
mov
cmp
xchg
movsb
ja
repz
hlt
orl
pop
and
pop
movsb
or
push
jnp
scas
push
sbb
pop
mov
ficoms
or
insb
mov
add
loop
cltd
les
iret
mov
push
mov
cs
jl
xchg
add
sbb
cltd
sarl
or
cmc
sub
mov
inc
test
aam
cmpsl
mov
pop
in
sbb
xchg
mov
pop
add
pusha
inc
imul
lahf
clc
out
lods
loopne
jmp
das
out
add
movsl
push
fsubl
dec
push
add
aam
outsl
add
in
mov
sub
add
rcrb
or
inc
cmp
add
push
xor
mov
pop
inc
dec
xorl
scas
std
js
add
enter
xor
cld
add
or
fs
cld
mov
daa
fisttpl
filds
ret
scas
bound
xor
das
jge
sar
cmp
icebp
ret
sub
jbe
sarl
add
loopne
add
xor
pusha
sub
ds
mov
or
jmp
hlt
jo
sbb
add
sbb
out
push
cli
add
inc
gs
sub
mov
dec
das
subl
jno
cli
shlb
fbstp
add
add
xlat
or
and
sbb
jle,pn
test
stc
out
add
inc
inc
int3
into
adc
fildl
cmc
push
ret
inc
push
jle
fwait
cmpb
out
mov
cmp
mov
add
lret
push
add
scas
adc
mov
fcoml
mov
fisubl
inc
mov
adc
ds
mov
aad
jb
dec
sbb
lcall
adc
sbb
jae
push
int
mov
add
or
data16
add
es
or
add
and
or
insb
inc
ret
fldl
xor
imul
push
insb
bound
jb
or
add
jb
xorb
jl
mov
pop
push
scas
add
pushf
test
mov
loop,pn
xor
cmp
dec
add
push
fcomip
test
addl
sahf
rol
mov
faddl
add
push
xchg
jns
add
pop
test
setbe
repz
daa
es
and
xor
cmpsl
adc
pop
mov
add
push
cmp
pop
test
pop
cmp
add
std
add
xor
mov
inc
push
loop
add
inc
call
enter
push
adc
jl
jb
ret
jmp
mov
add
iret
xor
stos
ljmp
sub
lahf
or
add
cmc
adc
add
je
push
pmuludq
fs
test
or
dec
mov
in
add
xchg
dec
test
inc
pusha
and
repnz
xor
out
in
mov
mov
out
outsl
std
push
out
mov
inc
stos
clc
fadds
inc
push
jnp
insb
pusha
in
add
or
data16
jae
not
mov
mov
nop
xchg
fdivrl
push
je
push
pop
flds
lods
adc
mov
and
add
sbb
add
sahf
orb
shrb
add
jmp
push
aam
adc
or
dec
add
jb
decl
aad
mov
add
ds
inc
mov
imul
fldl
mov
xchg
js
add
bnd
inc
out
shll
push
push
jne
add
cwtl
out
inc
aaa
sbb
lret
add
out
subb
add
dec
rcl
jb
add
test
repz
lds
rcrl
aad
nop
mov
aas
out
lock
sub
icebp
xchg
xchg
cmp
addr16
or
add
nop
xor
filds
jmp
lds
adcb
mov
mov
insl
cwtl
mov
pop
je
mov
stos
jl
in
cli
inc
loopne
pop
dec
adc
outsb
adc
and
jae
sub
add
out
jo
adc
lahf
add
ljmp
push
insl
outsl
xchg
pop
andb
das
add
add
mov
push
xor
incb
scas
fbstp
inc
add
sbb
dec
inc
jno
push
and
adc
fsubl
pop
jl
cwtl
orb
dec
mov
and
inc
test
lret
and
mov
mov
cmpl
icebp
mov
push
add
push
push
cmp
iret
cltd
jmp
jae
rorb
dec
je
xchg
and
fsub
scas
adc
xchg
sbb
pusha
fwait
xchg
xchg
sub
ror
xlat
sahf
sti
bound
cltd
lret
scas
scas
push
out
add
add
fimuls
jne
add
sub
xchg
rol
pusha
int3
adc
aas
push
mov
jl
testb
add
cmc
or
sbb
negl
sbb
subl
push
add
jae
push
out
jno
and
pusha
ror
jp
sub
add
dec
pop
pop
es
fs
or
aad
adc
inc
xor
and
dec
lods
outsl
adcl
cmpl
out
je
push
test
cmp
add
mov
jp
popf
add
jae
iret
cs
sbb
movsb
pop
adc
and
pusha
cli
aas
sarl
fidivs
push
mov
call
and
cld
pop
in
bound
inc
push
lock
mov
add
movsl
xor
dec
xor
clc
sub
xchg
add
jg
jecxz
test
add
dec
add
adc
and
pushf
mov
cwtl
jle
sub
adc
je
jl
mov
pusha
sbb
adcb
mov
test
push
sbbl
std
iret
frstor
sbb
cmp
in
adc
adcb
mov
pusha
ja
add
lock
and
pop
mov
sbb
fcoms
jnp
mov
call
xchg
inc
call
inc
add
jmp
fcmovnb
mov
add
fdivp
cmp
fldl
or
mov
push
push
add
test
mov
data16
sbb
pop
dec
jl
xchg
jae
mov
inc
test
add
shl
testl
add
popa
rol
aas
and
sbb
mov
mov
add
and
adc
je,pt
inc
xchg
xchg
aas
push
adc
add
sbb
cmpsb
and
test
and
cld
pop
rol
or
jne
jo
jmp
rol
inc
or
xor
jno
push
popl
sbbb
pop
test
jl
push
or
and
enter
jbe
add
repnz
mov
mov
adc
loope
rcrl
pop
xchg
cmpl
sbb
jne
inc
loop
pop
ficomps
mov
shrb
stos
in
jne
xchg
pop
movsb
or
adc
mov
adc
rolb
sub
ret
int
daa
adc
pop
cmp
or
out
xor
add
cli
test
mov
and
or
outsb
xchg
push
shll
add
mov
int
cli
rolb
iret
lods
orb
cmp
push
inc
xor
enter
add
mov
jb
pop
dec
pop
out
scas
lock
push
adc
xor
cwtl
mov
dec
add
sub
jb
sub
das
and
dec
jmp
push
scas
lock
out
adc
ds
or
arpl
sub
lret
push
cltd
xor
sub
ja
mov
inc
push
xor
and
sarb
push
aam
jae
add
mov
inc
push
add
ret
lea
sbb
in
stos
lahf
add
push
xor
xor
dec
lods
aam
arpl
bound
mov
push
pop
loopne
and
add
adc
sbb
or
xlat
out
mov
inc
inc
shl
xchg
inc
ljmp
add
dec
mov
add
aaa
push
mov
mov
push
lcall
mov
and
cmp
cmp
adc
sub
xchg
sbb
mov
mov
cs
ljmp
rorb
push
push
inc
les
popa
adc
shll
pushf
pop
enter
psrad
cltd
stc
fcmovnb
and
outsl
and
lds
push
pop
inc
out
add
push
fldenv
cmp
jb
cmp
push
scas
inc
jp
jae
add
aad
cmp
cmp
inc
mov
push
rcr
add
jl
pop
push
jp
add
pusha
sets
cs
jae
xchg
adc
aas
loop
mov
dec
add
add
test
xor
mov
pcmpgtw
out
lods
out
push
shr
dec
pop
out
adc
fisttps
xor
xchg
add
sbb
mov
ret
imul
or
loopne
cltd
cwtl
divb
add
arpl
dec
add
push
and
pusha
pop
cltd
add
and
xchg
call
add
inc
adc
int
popa
add
pop
lret
addb
or
mov
push
frstor
dec
negb
lcall
lds
adc
push
adc
jle
mov
sub
add
aam
test
sub
or
lds
fdivs
inc
or
js
repnz
mov
adc
pusha
aad
cmp
outsb
ret
mov
xor
lret
push
mov
call
sahf
pop
add
xchg
xor
mov
pop
addl
inc
sbb
xchg
mov
pushf
push
lret
push
mov
nop
push
sub
dec
es
pop
or
dec
insl
cli
in
ret
out
mov
add
add
data16
addr16
pop
sub
add
cmpb
das
add
jecxz
aad
imul
cmpsl
shlb
sub
fwait
cmp
subb
mov
dec
psubsb
sub
jnp
adc
add
sub
js
stos
fidivl
xchg
add
push
sbb
lods
adc
mov
cmpsb
loope
mov
sarb
ret
mov
mov
clc
inc
mov
das
aaa
adc
scas
imul
mov
add
gs
out
cmp
rorb
jnp
je
add
jl
pop
mov
in
jb
test
adcl
jbe
add
in
adc
push
xchg
sub
and
xorl
and
out
push
xor
sub
cmp
fisubl
loopne
iret
faddl
cli
inc
push
rclb
ret
clc
cmp
mov
cmp
fst
outsb
inc
sarb
loopne
jle
inc
pop
jbe
mov
fs
insl
jge
sgdtl
roll
sbb
mov
repnz
push
xor
jecxz
mov
rcrb
inc
cld
pusha
push
sbb
loop
sbb
sbb
sub
lock
mov
aas
enter
lea
prefetchnta
add
jmp
pop
fadds
les
loopne
lock
jge
add
push
adc
dec
popf
pop
inc
mov
push
shl
test
mov
jl
xor
jno
fwait
mov
sbb
add
mov
lret
dec
add
cmp
cmp
adc
add
addr16
xorb
pop
mov
add
sbb
cwtl
cmpsb
aas
imul
arpl
pop
js
into
pusha
and
mov
and
mov
out
mov
pop
cmp
jno
add
jae,pn
xchg
inc
jge
xchg
mov
add
push
fdivr
verw
mov
mov
cmpsb
mov
xchg
or
pop
sbb
cld
push
lret
fimuls
outsl
add
ret
inc
imul
add
arpl
mov
mov
lcall
lods
mov
insl
pop
sub
inc
std
scas
push
repnz
xlat
jmp
lds
dec
xor
testb
xor
rorb
insl
out
lock
in
cs
in
adc
push
cli
push
dec
std
loop
test
je
out
repz
push
add
inc
mov
cmp
fdecstp
movl
or
sbb
adc
inc
stos
mov
mov
sbb
pop
je
push
lgdtl
cld
and
je,pn
cmp
pop
mov
lock
seto
xchg
add
dec
fcomps
pop
sarb
sub
dec
shlb
jb
dec
lods
in
sub
mov
dec
mov
or
or
std
add
addr16
or
xor
fbstp
pop
cmp
les
shr
rclb
xchg
jmp
sbb
data16
add
sub
loop
cmp
insb
adc
add
ret
sbb
sub
mov
in
test
cmp
in
fs
nop
sbb
cmp
inc
mov
sbb
xchg
add
sub
imul
push
xchg
mov
add
sarb
pop
int3
jge
jnp
mov
xor
add
ds
inc
add
loop
pop
scas
in
inc
push
in
sub
stos
dec
jl
shrb
out
outsb
add
inc
mov
je
add
sbb
sub
pop
adc
sub
or
lahf
push
add
jo
xchg
ljmp
sbb
in
add
mov
mov
and
mov
repnz
sti
sbb
sbb
push
fdivrs
push
cmpsb
sbb
inc
int3
es
fst
inc
mov
add
dec
add
sbb
cmpsb
xor
cmp
fwait
addr16
jns
in
sub
add
add
cs
push
cs
test
mov
push
out
jg
add
das
jmp
add
xor
test
cmp
xchg
orb
psrlq
mov
inc
ljmp
jo
add
mov
cwtl
or
inc
lock
lret
sbb
adc
or
pop
add
add
push
cltd
pop
stc
aas
pusha
sbb
jns
push
mov
insl
notb
jnp
add
mov
pop
addr16
inc
inc
add
bound
cmp
dec
orl
mov
xchg
push
test
sbbl
jg
sysenter
rorl
popa
enter
mov
push
dec
fistl
dec
mov
sub
unpcklps
dec
mov
aas
add
jbe
les
push
test
xor
ss
add
or
adc
out
jnp
add
fdivp
or
and
pop
inc
imul
mov
mov
add
and
and
pop
add
push
xor
adc
push
push
loop
sbb
mov
outsl
mov
pop
xchg
jge
mov
mov
jecxz
and
xor
add
fcoml
xchg
push
into
rolb
lcall
fldl
jg
sbb
jb
mov
pop
je
add
movsb
push
xor
inc
mov
addr16
pop
cmp
adc
movsl
rcrb
push
mov
ss
pop
and
add
rol
add
mov
lret
es
sbb
add
leave
mov
pop
add
lods
add
dec
add
sub
dec
sub
test
sbb
sub
loop
add
les
xor
fwait
inc
insl
add
cltd
adc
orb
add
inc
mov
lods
or
outsb
mov
add
stos
out
xor
inc
out
aas
imul
and
and
mov
movsb
mov
add
in
push
lds
jnp
shr
pop
jns
out
add
xchg
mov
and
aas
push
jb
imul
xor
pop
je
out
and
add
movsl
xchg
xchg
cmp
js
push
xor
adcb
add
and
pop
imul
push
pusha
pop
add
ret
std
cwtl
pop
cmpsl
and
and
jle
stos
or
pop
mov
jnp
int
xor
jecxz
add
and
jae
jbe
sbb
call
mov
js
push
mov
pop
push
add
push
clc
cmp
jne
pusha
jb
jp
pop
or
and
fdiv
add
mov
sub
or
or
mov
iret
jmp
into
sbb
fisubrl
aad
push
lret
test
xor
test
adc
or
pop
dec
ficomps
sbb
addb
and
stos
cwtl
mov
jno
sbb
and
cmp
in
pop
mov
xchg
add
cmpsl
popl
push
shll
mov
les
aam
jmp
or
sub
idivl
cmpsb
push
pop
and
push
cltd
aas
insb
push
dec
and
mov
or
add
and
add
lock
pop
jp
cwtl
aam
jmp
in
add
and
xchg
ss
sub
cmp
jae
loopne
ja
imulb
mov
scas
xor
add
push
in
pop
cld
insb
push
cwtl
adc
cmp
loope
add
cli
std
les
and
clc
emms
decb
std
into
test
in
in
push
dec
int3
bound
add
lock
test
ret
in
in
sbb
cmp
jge
movsb
adc
sub
jl
insl
std
lock
jp,pt
inc
mov
or
pop
cmp
mov
mov
lret
mov
popa
jg
lods
mov
sbb
aam
or
and
addb
outsb
movsb
sbb
clc
roll
int
adc
xchg
aam
add
and
jecxz
xor
or
punpckhdq
repz
sar
push
or
pusha
and
subb
sahf
lds
imul
adc
fcoms
or
ret
mov
sahf
xor
inc
dec
loopne
jecxz
jle
add
rcll
or
add
inc
aam
inc
les
jne
jg
repnz
pushf
sbb
xchg
mov
cs
mov
orb
inc
daa
push
add
add
adc
xchg
dec
pop
subb
mov
dec
mov
add
sahf
jae
test
movsl
mov
test
mov
ja
add
leave
cmpsl
xor
mov
movsb
mov
mov
push
sbb
scas
mov
pop
cmp
test
data16
orb
test
pop
xchg
fcomp
adcb
mov
adc
and
and
mov
das
outsb
and
pop
adc
imul
sbb
push
xorb
jo
mov
sbb
subb
rcr
and
add
stos
push
js
dec
inc
push
sahf
movsb
pop
sarb
pushf
shrb
and
imul
enter
je
dec
mov
or
mov
pop
jle
adcb
dec
push
cmc
rcl
outsb
xchg
dec
and
push
dec
aam
faddl
cmp
cmpsl
arpl
lods
adc
incl
flds
add
dec
daa
shl
mov
and
push
in
sbb
mov
pop
je
dec
and
adc
and
xor
clc
pusha
add
adc
in
cmp
fsubl
test
xlat
or
mov
sti
pop
pop
dec
xchg
add
aas
imul
and
or
add
and
fnsave
add
dec
test
cmpsb
adc
popf
les
xchg
adc
or
xor
add
mov
aam
xchg
pusha
add
clc
pop
pushl
add
add
sarb
out
add
aaa
mov
test
adc
xor
roll
mov
sahf
xchg
or
orb
add
test
loope
das
inc
push
push
mov
and
pushf
andl
jl
dec
aaa
and
and
js
add
push
nop
inc
add
or
mov
sub
pop
fisubrl
xor
shlb
and
xchg
push
add
lock
jp
shld
adc
mov
push
and
add
and
ss
jl
fs
sbb
xchg
call
mov
test
cmc
sub
jecxz
imul
adc
sub
inc
test
adcb
mov
repz
shlb
scas
mov
sbb
mov
popf
aad
out
pop
ss
jae
add
out
divb
lret
jbe
shll
lock
pop
loopne
fs
jmp
jg,pn
js
sbb
or
jns
or
mov
sub
mov
call
sbb
lds
sub
push
sbb
movsl
daa
nop
jg
scas
and
test
jp
loope
push
mov
jbe
jo
cmp
pusha
xchg
cltd
movsb
cmpsb
movsb
or
or
or
sbb
stos
aad
inc
orl
cwtl
push
jp
rclb
gs
outsl
jle
add
cs
add
push
xchg
rol
push
add
push
inc
add
xchg
sub
xchg
call
add
and
pop
add
enter
adc
mov
adc
jg
jne
add
pop
inc
fs
mov
xchg
imul
cmp
push
inc
out
pop
dec
dec
shlb
pushf
sbb
adc
sub
aaa
cwtl
add
inc
clc
loope
mov
sub
movsl
insl
lds
mov
xchg
test
adc
or
orb
jecxz
xchg
add
dec
and
mov
inc
xor
lret
mov
sbb
sub
leave
add
cmp
pop
mov
adc
je
add
sub
jp
pop
pushf
cmp
repnz
imul
cvtdq2ps
add
movsl
add
and
jne
push
and
dec
sub
sbb
pop
data16
lds
shlb
jbe
xorb
insl
les
adc
ljmp
push
enter
shrl
sub
add
sbb
pop
mov
out
movsb
roll
add
and
jb
lods
into
or
bound
add
push
rcrb
mov
push
clc
cmp
test
mov
sbb
roll
call
mov
fists
lods
push
lea
xor
pusha
xchg
arpl
and
test
adc
add
cmp
sarb
das
call
add
sbb
frstor
dec
fcoms
inc
add
push
xchg
pop
sbb
stc
pop
jb
lret
xor
imul
and
push
inc
cmpsl
adc
mov
or
mov
add
jno
mov
mov
jnp
xor
adc
jl
adc
stos
sahf
mov
xchg
jp
adc
cltd
lds
add
jbe
add
nop
pop
jno
sub
inc
push
enter
sbb
add
leave
mov
add
or
or
mov
cmp
or
xor
sub
and
testb
push
outsl
cmpsb
add
sub
cwtl
and
push
add
loopne
leave
dec
movzbl
movsb
mov
inc
mov
and
out
pop
sbb
mov
add
test
push
jnp
lret
add
data16
sub
or
loopne
fidivrs
popa
sbb
cmp
xchg
or
xchg
jp
movsb
lea
dec
int3
mov
int3
fwait
scas
mov
pop
into
push
mov
loop
fidivrs
stos
cmp
mov
or
das
rclb
mov
pop
mov
mov
cmp
and
xor
clc
ret
adc
add
or
cmp
jae
fldt
pushf
fists
lock
xor
arpl
pop
xor
enter
cwtl
mov
push
add
je
and
rclb
iret
pusha
sub
roll
out
inc
mov
int
xchg
lods
imul
int
in
lahf
pop
icebp
xchg
insl
adc
push
in
mov
mov
mov
jge
je
add
xor
int3
pop
mov
inc
pushf
cmpsb
lock
add
mov
pop
leave
scas
and
dec
sub
or
mov
rorl
stos
xchg
hlt
into
adc
dec
data16
mov
add
add
les
fimull
jno
fdivrl
ret
inc
xchg
and
add
out
mov
test
mov
pop
and
add
sub
sub
adc
cltd
sub
daa
add
and
leave
xchg
mov
pop
stc
and
je
clc
dec
mov
loopne
add
ds
push
jecxz
cmpsl
sti
inc
add
arpl
aad
cmp
jecxz
dec
add
sar
lret
ss
or
and
and
sbb
inc
clc
xchg
in
mov
push
aam
jnp
clc
aas
mov
push
cmpsb
adc
loope
imul
mov
cld
imul
adcb
enter
jmp
out
jb
cmp
pop
adc
xor
adc
and
add
sub
push
cmp
cwtl
in
xchg
lea
int
pop
aaa
inc
lods
loopne
push
arpl
idiv
sbb
addb
popa
push
movsl
add
cmp
out
inc
add
test
pop
out
jl
add
imul
and
mov
mov
adc
jmp
push
mov
les
push
xor
and
and
lods
mov
fdivs
aam
jmp
test
mov
movups
rcll
pop
icebp
movsl
fsubs
pop
and
lock
outsl
and
gs
cmpb
pop
mov
add
pop
push
push
lods
sub
fistpll
xchg
add
fdivs
popa
cmp
add
add
idivb
lret
push
cld
je
out
and
cmpb
inc
jge
outsb
push
int3
mov
es
shrb
cmp
mov
dec
xchg
cmpsb
jno
inc
sahf
leave
jns
push
pop
mov
insb
mov
sbb
arpl
and
outsb
jb
stc
in
dec
push
clc
call
mov
push
mov
clc
pushf
push
test
sti
in
pusha
lret
nop
inc
pop
iret
test
push
mov
repnz
popa
cwtl
add
leave
cmp
roll
lret
xor
adcl
dec
packuswb
push
mov
into
xor
inc
cmpsb
sub
out
pop
or
or
add
sti
movsl
inc
loopne
cmc
push
js
push
mov
mov
fwait
testw
pusha
and
add
enter
mov
std
movsl
mov
in
add
or
push
inc
and
xor
xchg
sub
sbb
daa
lods
mov
scas
sbb
repnz
add
jb
xchg
xor
sub
lock
xchg
mov
in
popa
cs
mov
loop
cmp
xor
dec
test
js
mov
roll
rorb
je
testl
xor
mov
test
fs
les
dec
jns
mov
add
sub
adc
pop
insl
add
xlat
adc
sub
fsts
cmp
mov
sbb
pop
pop
xchg
xor
les
push
pushf
mulb
jo
xor
add
loope
in
xchg
cmc
pop
mov
add
loopne
outsb
sbb
flds
sbb
or
add
inc
mov
sbbl
sub
cmp
addb
mov
pusha
push
loop
add
lret
mov
or
xor
push
jns
xor
mov
dec
push
mov
xchg
adc
lea
cmp
das
pandn
mov
movsb
adc
or
in
cld
dec
or
int3
or
adc
nop
xchg
popf
sbb
and
shrl
add
lret
jno
add
dec
add
mov
and
mov
inc
mov
aam
sbb
das
and
sub
adc
rorl
mov
push
inc
sbb
cltd
enter
jae
pop
sub
and
js
adc
cmp
mov
fcmovnu
or
inc
inc
sbb
pushf
imul
lock
cmp
sub
mov
xchg
cmp
scas
xor
add
add
insb
daa
lret
dec
test
pushf
xchg
fdiv
rol
jge
sbb
andl
pusha
and
cmpb
push
xor
cmp
adc
pop
sbb
les
cmp
push
inc
mov
fwait
mov
cltd
xor
mov
sub
cwtl
int3
andb
aaa
pop
push
test
les
fistps
test
jl
add
mov
xchg
xorps
inc
popa
mov
mov
dec
adc
outsl
add
xchg
push
andl
dec
adc
cmp
mov
imul
xchg
or
pop
and
das
mov
add
sub
xor
push
inc
js
lcall
roll
xor
or
test
out
jb
push
cmpb
les
dec
add
sub
add
push
les
cmpsb
adc
cmp
xchg
add
ds
push
mov
or
lea
inc
mov
call
cld
add
mov
dec
inc
xor
fildll
int
fs
xor
jbe
dec
movsb
js
mov
jg
pop
negb
pop
das
mov
add
fcompl
add
lods
xchg
inc
pop
xchg
imul
sbb
sbb
ljmp
mov
addb
add
rolb
sub
push
fisttps
cld
les
aaa
push
xchg
mov
xchg
stos
bound
add
pop
movsb
cmpsl
mov
jno
clc
jo
popa
cmpsl
cmp
adc
dec
enter
test
aam
pop
in
xchg
push
ja
negb
sarb
out
sbb
pop
aam
sarb
call
fcoml
repz
inc
fs
pop
call
mov
cmp
jle
sbbb
lea
pusha
clc
and
and
sbb
ds
ret
out
insb
add
xor
je
daa
in
sub
dec
xlat
neg
test
push
jae
xor
or
push
sub
lds
je
add
in
mov
mov
int3
daa
sbb
mov
aam
or
adc
sub
or
mov
add
and
cmpsb
sar
ja
enter
ljmp
pop
pushf
push
sub
lods
movsb
xorb
cwtl
and
jbe
leave
adc
shrb
rcl
mov
fs
mov
pusha
or
push
fidivrl
cld
and
and
and
inc
mov
and
dec
sub
sbb
bound
xor
sarl
dec
adc
adc
dec
mov
ret
fists
add
jb
xor
xor
add
fdivrs
mov
dec
std
stc
adc
shrb
dec
push
sbb
cs
or
call
pop
push
mov
lahf
out
nop
jl
add
in
dec
repnz
test
pop
push
xor
cmp
cmp
jge
adc
pop
scas
and
add
nopl
and
je
addl
adc
pop
dec
mov
jo
push
jnp
sbb
hlt
jno
adc
pop
jb
or
sub
cmp
popf
xor
adc
adc
imul
fiaddl
push
or
subb
int3
xor
pop
test
adc
or
fcompl
pusha
and
repnz
mov
inc
dec
push
jmp
mov
sub
push
sbb
dec
xchg
clc
sahf
dec
sahf
mov
adc
adc
lahf
or
movsb
mov
xchg
ja
pop
mov
incl
sbb
je
adc
xchg
push
or
arpl
add
push
add
mov
push
stos
daa
mov
xor
sub
movsb
scas
sbb
sbb
and
sub
sbb
loopne
cmpsl
rorb
adc
shrl
jmp
add
les
movsb
rolb
jmp
push
setno
insb
nop
jno
or
clc
sbb
rclb
into
sar
add
int
jp
call
inc
repz
push
and
in
fs
or
pop
repnz
lods
mov
icebp
xorb
xchg
paddusw
hlt
or
sar
ret
lods
adc
mov
les
psubsb
lcall
aad
dec
nop
push
mov
or
in
enter
mov
fst
adc
xor
mov
and
aad
bound
xchg
hlt
dec
lock
insb
adc
gs
pop
xchg
cmp
fsubs
add
daa
push
adc
jbe
add
xchg
movsl
dec
loopne
push
popf
cwtl
lods
mov
add
inc
cmp
iret
add
jb
dec
mov
sbb
sub
cmp
xchg
add
ficomps
ljmp
inc
and
outsl
movsb
mov
sub
and
sbb
out
out
pop
add
adc
add
add
out
movsb
cmp
or
fadds
xlat
les
pop
add
or
dec
cmp
int3
add
lods
dec
xchg
pop
call
stos
inc
dec
shll
push
sbb
pop
enter
mov
cmc
add
cmpsl
clc
pop
add
enter
fisubs
mov
roll
pushf
or
cltd
push
xor
cmp
mov
sub
add
xchg
stos
aad
mov
scas
pop
mov
hlt
mov
leave
and
jp
inc
stos
mov
jnp
push
into
fbstp
addl
jl
lcall
pop
ds
dec
ja
lds
leave
jl
loope
jle
lcall
dec
jo
xchg
outsl
xor
popa
cmp
cltd
cmc
loop
lret
add
mov
sbb
pop
pop
jb
push
mov
cmp
sub
call
push
ret
add
dec
pop
ja
movl
lea
mov
adc
cmpsb
in
pop
push
test
add
mov
xchg
es
std
pop
adc
leave
jb
mov
add
mov
adc
dec
push
add
jl
xchg
push
in
add
push
mov
negb
loopne
cmpl
stos
shrl
inc
dec
hlt
jle
add
dec
inc
jne
cltd
add
popf
mov
incl
sahf
and
mov
dec
push
mov
aaa
fcmove
mov
nop
lock
push
fsubl
inc
popf
ss
lods
inc
mov
sahf
add
or
js
pop
or
movsb
mov
mov
cs
jg
sub
cmp
popa
pusha
jle
push
cmp
add
mov
int3
and
mov
outsl
out
and
clc
pop
inc
addr16
mov
adc
jae
fs
imul
into
mov
jo
movsb
cld
mov
les
push
daa
mov
adc
int3
cltd
xchg
dec
mov
pop
sbbl
push
pusha
inc
pop
inc
adc
dec
add
and
or
xor
daa
vmread
outsb
popa
dec
add
push
add
cld
dec
aad
shll
adc
jns
xor
loopne
add
outsl
cmc
sti
add
inc
int3
movsb
fsubl
xor
sbb
mov
mov
push
xchg
mov
and
cli
das
stos
mov
test
test
adc
push
mov
push
jne
pop
stos
add
xchg
xchg
add
xor
mov
sarb
shlb
sub
ret
dec
movsb
xchg
cwtl
imul
jno
push
sbb
push
fisubrl
nop
xor
clc
ljmp
jg
shr
pop
add
jbe
xor
sbb
repnz
and
divl
adc
fmul
mov
and
push
hlt
sbb
shll
xor
or
lcall
add
lea
jl
test
and
ret
add
sub
fmuls
push
lret
mov
bound
js
adc
pop
andl
or
clc
sbb
mov
sub
shrl
mov
push
add
lret
icebp
add
jg
mov
xor
rcrb
out
add
mov
xlat
sbbb
rorl
sbb
aaa
test
sub
insl
pusha
or
sub
mov
test
cmp
push
jae
in
jge
or
push
and
sub
xor
aaa
add
pop
mov
jp
mov
cmp
cmp
add
out
jle
js
pop
lods
adc
in
cmp
jp
add
sub
inc
scas
test
arpl
jnp
sub
push
int
adc
cmp
pop
cmp
movsb
dec
lock
addb
leave
mov
xlat
loope
mov
dec
ret
sbb
lods
mov
cmp
adc
sbb
push
pop
ljmp
add
xchg
xor
xor
mov
push
sbb
fisttpll
mov
cmp
dec
clc
mov
pop
cmp
stos
test
sbb
jae
add
push
pop
pop
sub
pop
sub
scas
fdivrp
push
sub
jo
push
js
rorl
adc
lds
xchg
jo
mov
in
cs
fwait
and
ljmp
and
cmc
sub
mov
movsb
push
mov
dec
sbb
or
test
mov
ret
imul
push
aad
push
sub
add
je
pushf
add
cmp
cmovg
int
mov
ret
pop
xor
xor
cli
jg
pop
and
push
repnz
jg
pop
mov
and
int
movsb
cltd
add
andb
sbb
cmpsl
in
mov
mov
inc
and
std
dec
jg
nop
outsb
add
sbb
mov
stc
pushf
add
notl
jbe
sbb
and
mov
pusha
jo
and
and
jb
add
fildl
lret
push
or
xor
add
dec
inc
rorb
pop
sbb
in
jne
shll
addl
xor
stos
insb
jl
addl
enter
arpl
mov
sbb
jns
or
xchg
repnz
pusha
fs
and
insb
add
fcmovne
pusha
add
xor
popf
lret
pushf
and
mov
mov
xor
repnz
sahf
jle
inc
fadds
test
push
inc
add
mov
xor
shll
call
xor
mov
sbb
and
push
mov
pop
leave
push
sbb
das
stos
sbb
add
sbb
repz
cwtl
push
cmp
add
cs
fisubrs
shrl
enter
pop
pop
lcall
push
icebp
mov
subl
add
sub
fstpt
ja
jbe
add
cmp
adc
adcl
dec
dec
stos
enter
js
sub
sbb
or
shl
or
add
and
icebp
mov
in
sbb
rorl
inc
push
xchg
je
nop
mov
leave
jg
xor
pop
sbb
movsl
mov
mov
cmpb
pop
pop
loop
sarb
nop
dec
mov
add
push
in
int3
sub
loopne
xchg
cmp
add
push
jne
inc
rclb
loop
rclb
xchg
sbb
dec
jle
rorl
or
lods
pusha
and
cmp
mov
shlb
imul
mov
mov
pop
add
imul
or
sti
roll
jb
out
sub
xor
js
frstor
nop
mov
je
testb
xchg
push
arpl
mov
xorl
jo
pop
dec
or
or
loopne
mov
cltd
addb
adc
xor
sbb
divl
out
add
mov
sub
jae
xchg
cwtl
js
rolb
outsl
test
mov
shlb
add
insl
push
into
js
mov
outsb
mov
repz
jmp
mov
cld
js
shl
xor
add
subb
dec
xor
ds
sarb
frstor
rcll
push
mov
flds
lds
jl
pushf
shrb
hlt
pop
or
pop
jle
cmp
fmull
and
call
jbe
shlb
and
or
sbb
cmpsl
sbb
enter
cmp
rcrl
mov
clc
inc
out
xchg
stos
int3
add
fcoml
dec
push
add
fsubs
xor
xchg
movsb
movsl
fcoml
cltd
dec
sbb
push
sub
pop
push
sub
stos
mov
or
out
push
rcrl
push
fdivl
pop
jmp
xor
rorl
movsb
mov
jge
cwtl
add
test
lahf
sbb
pop
das
popf
dec
xor
dec
movsl
add
cwtl
sti
and
adc
and
xchg
and
fistps
add
jmp
mov
lcall
dec
push
dec
out
subb
mov
clc
icebp
jnp
add
pushf
or
scas
push
xor
lahf
push
dec
mov
add
loope
jns
cmp
gs
cmp
mov
add
mov
mov
pop
adc
enter
or
add
scas
mov
test
pop
clc
xor
mov
insb
and
xchg
sub
cmp
mov
cld
push
add
es
ja
xor
sbb
xor
push
in
dec
dec
fmuls
adcl
inc
jg
in
add
cmc
shlb
mov
or
or
into
mov
in
jp
mov
int3
mov
fdivrp
jmp
adc
inc
add
push
rcr
adc
mov
cs
cwtl
sub
sub
dec
xor
fimull
mov
add
mov
outsb
pop
ret
xchg
xor
adc
mov
in
mov
add
push
call
aam
lcall
movsl
jno
add
or
or
in
test
add
mov
aaa
jno
xchg
nopl
pop
xor
jg
jle
addr16
pushf
add
in
inc
repnz
add
out
loop
pop
and
arpl
xchg
xor
jae
add
push
push
rcll
jmp
and
stc
pushf
cmpb
inc
ljmp
xchg
jns
cs
or
pop
stos
add
jg
nop
cmp
push
pushf
dec
loopne
sub
pop
out
sub
pop
idiv
sbb
repz
and
mov
inc
push
loop
push
jne
or
xorl
enter
cmp
and
mov
inc
adc
or
jb
sahf
pop
lock
add
subb
or
or
pop
cmp
mov
aaa
enter
sub
inc
es
pop
lea
adc
iret
sbb
rcrb
push
pushf
sbb
cmpsl
nop
sub
add
inc
lret
sub
out
dec
dec
enter
adc
ds
in
add
push
lcall
pop
outsb
notb
jge
dec
stos
jns
call
hlt
std
repnz
inc
int
pop
rcr
ds
xchg
movsl
mov
and
add
imul
pop
sub
mov
mov
out
pop
sbb
aam
jnp
mov
ds
xor
mov
fstpt
imul
and
push
pop
or
xchg
mov
or
sub
add
jle
add
ljmp
aam
or
add
xor
enter
push
dec
cwtl
pop
and
add
cld
into
sbb
and
mov
add
rolb
mov
xor
xor
add
mov
test
outsb
lret
std
fimuls
notl
insb
xor
push
add
push
pop
pop
jmp
xlat
outsl
or
sbb
inc
jmp
or
jmp
rorb
loop
push
jl
sub
loope
xlat
pop
pop
push
scas
int3
les
push
cmp
add
imull
add
jp
jno
push
pusha
sub
loope
add
xchg
mov
xchg
nop
pop
push
fwait
movsl
icebp
cs
pushf
cmp
jl
stos
cld
lods
mov
mov
jp
lods
cld
orl
mov
cmp
cmp
aaa
ja
xor
sbb
ja
mov
mov
sbb
mov
xchg
cmpsb
mov
inc
jns
and
out
mov
mov
out
fbld
pop
mov
and
push
xor
outsb
loopne
enter
les
mov
and
cwtl
fcomip
scas
sbb
pop
subl
outsl
adc
adc
and
gs
and
pop
and
scas
xor
inc
cwtl
lock
orb
es
xchg
out
xor
xor
lock
sub
clc
xorb
inc
push
inc
frstor
mov
mov
sbb
popa
push
jl
sub
rolb
cmpb
cmp
andb
adc
iret
push
cmp
adcb
out
lahf
movsb
lea
inc
xor
xchg
sub
test
movsb
mov
mov
pop
and
ja
and
pusha
and
dec
movsb
xor
mov
inc
and
jb
sub
sbb
xor
dec
icebp
pop
sti
inc
push
pop
aaa
lret
dec
icebp
enter
inc
sub
xchg
ficoms
sub
movsb
in
or
aam
cmpsb
mov
loopne
mov
movsb
and
into
adc
mov
push
aaa
scas
adcb
cltd
lods
jecxz
or
add
adc
sti
loop
inc
xchg
sub
adc
rolb
xor
pushf
popf
ljmp
stc
mov
out
adc
mov
orl
stos
pusha
lahf
add
js
or
jo
push
dec
adc
jns
mov
movsb
dec
or
shr
add
mov
fwait
enter
xor
std
dec
adc
cld
and
cmpsl
and
in
mov
sub
sbb
popf
dec
sbb
rcl
adc
fwait
sbb
jle
fdiv
push
push
dec
jo
test
inc
loopne
fimuls
xor
jne
xchg
stos
xor
scas
jg
add
push
in
mov
insb
xorl
out
aaa
in
mov
xlat
lret
mov
ds
aam
pop
fmul
sub
sub
add
out
ret
pop
or
mov
add
mov
mov
mov
pop
test
scas
pop
mov
cmp
les
inc
ss
or
in
jecxz
add
imul
or
mov
inc
lahf
or
or
in
shll
scas
sub
cli
adc
adc
enter
add
push
test
cmp
dec
mov
ret
data16
push
test
in
out
xchg
in
sbb
lods
rorb
fsubl
shr
ret
data16
jns
flds
sti
repz
sbb
pop
sbb
fdivr
loope
sbb
sbb
add
enter
les
pushf
lret
addb
push
test
adc
ret
nopl
jb
movsb
fsubrl
fstl
fbld
enter
inc
adc
and
pop
sub
dec
or
push
dec
movsb
inc
enter
aam
sub
xor
or
hlt
inc
pop
dec
pop
fmuls
psubw
sbbl
sbb
rcr
faddl
mov
inc
lcall
push
sub
scas
add
adc
mov
dec
sbbl
add
inc
and
add
jo
xor
push
fdiv
add
addb
sub
leave
hlt
adc
in
cmovns
fsubs
mov
hlt
fs
testb
mov
addl
andb
inc
in
bound
rol
enter
pop
inc
dec
or
add
cmpsl
mov
lock
shlb
dec
or
push
or
inc
adc
pop
mov
fwait
cmp
xchg
in
inc
sbb
sbb
test
and
lahf
faddl
xchg
ss
lods
inc
adc
das
jg
inc
sbb
sarb
dec
clc
out
loop
and
push
lods
and
test
and
jp
pop
and
mov
mov
daa
fs
jle
mov
cmp
js
mov
lret
add
fisubrl
sub
sbb
clc
push
movsb
mov
nop
sbb
and
mov
adc
addl
sub
and
sub
aas
push
xor
and
sbb
clc
call
fildll
stc
lock
repnz
mov
xchg
sbb
lods
sarb
push
mov
enter
out
vmwrite
mov
jns
add
shll
outsl
push
call
loopne
sbb
and
lahf
lods
sbb
inc
dec
add
lds
jmp
jle
fcomps
pusha
add
xchg
out
lock
sub
test
leave
pop
pop
and
jb
sub
movsl
enter
inc
push
repnz
rclb
xor
dec
negb
hlt
mov
jnp
cwtl
andb
test
add
sbb
cmpsl
jo
push
mov
sahf
shll
mov
jl
jae
aaa
call
adc
cmp
pop
xor
lds
jg
add
add
and
sarl
fs
cmp
sub
or
or
pop
mov
inc
xor
xor
sub
loopne
pushf
shr
fistpl
add
rolb
cltd
call
pop
aas
movsl
adc
mov
lret
pop
add
rorl
shr
hlt
das
jg
mov
sub
movsb
lock
mov
mov
push
mov
cmp
cwtl
cltd
inc
pusha
loope
out
jl
pop
xor
sub
mov
add
loope
pop
out
cwtl
arpl
mov
ret
pop
adc
inc
pop
testb
jmp
in
mov
mov
adc
inc
mov
lock
add
xor
paddusb
push
rcl
mov
pop
adc
pushf
repz
pop
fsub
mov
push
lret
int
mov
push
jno
jo
or
push
pop
xchg
nop
add
xor
sbb
arpl
lds
icebp
add
movsb
je
lock
inc
and
add
and
out
lds
jne
add
sti
sub
add
adc
cmp
cmp
add
jmp
test
sbb
sub
ss
cld
cmp
push
subb
push
je
and
adc
cld
add
xor
mov
xchg
aam
rolb
pop
test
push
jb
mov
inc
adc
mov
cmp
sbb
cltd
cmp
or
add
sahf
mov
sti
jg
subb
fcmovnb
lods
add
dec
aaa
mov
sti
sub
add
bound
add
push
xchg
cltd
mov
mov
sarb
mov
add
mov
xlat
or
add
call
or
push
dec
sub
les
adc
xlat
js
adc
sub
add
pop
dec
mov
add
cmc
pop
bound
outsl
insb
push
test
inc
mov
cld
inc
roll
and
add
sbb
add
sahf
jae
xor
insl
addb
jl
or
std
jbe
dec
js
push
jl
xchg
jns
add
mov
adc
outsb
add
cmp
sub
cmp
ds
cmc
mov
mov
mov
pop
xchg
mov
xchg
hlt
pop
or
cld
stos
and
pop
jmp
inc
scas
ds
jl,pn
push
xlat
jp
and
mov
hlt
pop
pop
add
inc
les
adc
add
add
mov
or
insb
or
pop
add
add
sbb
add
mov
mov
fadds
cwtl
dec
and
dec
mov
rorb
rorl
pop
fdivl
test
jne
or
call
add
jns
shll
pusha
push
mov
test
sbb
and
sbb
sbb
mov
test
inc
popa
cwtl
andb
outsb
mov
scas
jecxz
and
fimull
mov
fildl
mov
jp
rolb
jne
xchg
les
out
add
in
lock
inc
adc
add
push
adc
sbb
adcb
dec
and
push
aad
clc
adc
test
rcr
insb
jno
insb
fcompl
shlb
movsb
sub
repnz
and
addb
cli
mov
xchg
push
push
adc
js
ja
rolb
loop
push
jmp
jns
lcall
pop
and
dec
mov
add
adc
inc
js
xorl
push
and
push
enter
rorl
sbb
cwtl
pop
pop
fcmovnbe
push
cmp
call
dec
rclb
scas
pop
mov
jo
orb
cmp
sub
movsb
dec
sub
xor
btc
add
dec
mov
loopne
leave
and
shrl
mov
fisttps
js
mov
xchg
pusha
xor
mov
fucom
add
mov
jo
test
sbb
je
nop
cwtl
mov
add
adc
jne
cmp
mov
cld
je
pusha
mov
pop
jmp
mov
sbb
dec
jge
repz
mov
mov
pabsd
adc
xor
dec
mov
jge
lahf
cmp
adc
add
popf
sar
mov
inc
shrb
add
adcb
out
mov
scas
aas
lahf
call
mov
mov
pop
subb
popf
xchg
add
dec
lea
hlt
mov
sbb
cmp
or
mov
push
hlt
mov
lret
add
out
inc
sbb
cld
add
inc
loopne
push
pop
and
pop
and
sbb
pop
mov
or
pop
push
add
and
mov
lods
clc
or
clc
add
add
outsl
sub
js
xorb
movsb
cmp
add
cmc
dec
out
knotb
imul
ror
push
pop
shrb
adc
mov
sub
enter
jns
test
mov
pop
lahf
push
out
aam
adc
pop
outsb
push
sub
xchg
pop
sub
test
repnz
add
push
sar
mov
rcrb
leave
loop
adc
push
test
hlt
add
fs
mov
js
and
mov
sbb
outsb
adc
pop
test
rorb
or
mov
sub
fnstenv
outsb
dec
cmp
mov
mov
mov
stos
arpl
aam
pusha
pushf
rolb
push
bound
scas
je
cwtl
pop
xor
fisttpl
fiadds
rclb
mov
lcall
cmp
push
popf
inc
int3
mov
or
or
xor
inc
inc
outsl
fimuls
stos
pop
add
sub
pop
adc
push
or
mov
or
subb
add
xlat
jl
sub
adc
xor
or
sbb
and
mov
jecxz
cwtl
nop
xchg
mov
fwait
xchg
and
inc
add
rolb
nop
inc
mov
pop
mov
aas
sub
syscall
sub
icebp
lcall
les
lahf
cli
cld
mov
sti
xor
mov
sbb
nop
int3
jnp
adc
xchg
clc
movsb
jp
push
pushf
jbe
lahf
and
or
insl
inc
or
inc
jno
inc
pop
test
or
lret
mov
add
dec
or
xor
push
incl
mov
sbb
notb
enter
dec
and
movsb
add
xchg
xor
mov
dec
push
ljmp
mov
ja
ficomps
or
stos
mov
pop
sbbl
adcb
sbbb
ret
adc
cs
mov
push
xchg
sbb
and
add
sbb
jb
into
push
xchg
mov
xchg
sahf
jne
test
fs
movsb
fistps
les
mov
xorb
inc
pop
jo
mov
dec
orb
jo
les
jmp
popa
mov
es
les
cld
nop
mov
jbe
xor
push
rolb
and
jp
fmuls
lock
sub
or
aas
pop
add
rorl
adc
enter
and
pop
sbb
push
in
add
push
jno
add
xchg
in
bound
pop
movsb
stos
scas
nop
adc
mov
or
adc
adc
pop
cmpsl
mov
jp
xor
mov
jae
add
cwtl
jg
ja
hlt
cmc
repnz
dec
xchg
shll
mov
enter
push
or
push
outsl
mov
or
xchg
mov
fmull
mov
dec
mov
jle
push
xchg
clc
lock
push
add
mov
pop
adc
in
fsubr
push
jl
cmp
add
movsl
dec
inc
and
push
cwtl
xor
mov
lcall
fs
imul
dec
ljmp
stc
ret
sbb
jne
and
sub
xor
call
in
or
jle
push
add
adc
jmp
int3
add
adc
sbb
nop
dec
rorb
repz
sti
rclb
jbe
pop
jno
sbb
movsl
mov
shlb
xchg
cld
add
lret
sub
mov
mov
les
jbe
mov
pop
dec
xor
inc
xor
negl
jnp
ret
inc
mov
out
add
jmp
pop
popf
je
lods
je
add
xlat
in
mov
inc
paddsb
and
jg
add
clc
sub
lods
xchg
fidivrs
inc
imul
roll
adc
pop
mov
jne
add
clc
shrb
add
cmp
cltd
aad
push
inc
add
loope
jmp
daa
jns
icebp
mov
jle
push
fcoms
sub
test
mov
fwait
adc
adc
mov
add
rcrb
add
stos
push
xchg
test
mov
bswap
aad
mov
sbb
mov
out
int3
mov
rolb
daa
sub
dec
cltd
and
sub
cmp
mov
sub
in
add
mov
aam
xchg
adc
pop
adc
xorb
sbb
pop
ret
cltd
push
loope
in
mov
sbb
aam
sub
add
into
sbb
pop
outsl
fs
fadds
inc
out
cmp
das
fnsave
xchg
sbb
pop
pop
xchg
ret
and
xchg
add
dec
adc
sbb
add
sbb
mov
pop
sbb
jb
jmp
xchg
inc
loopne
adc
sub
pop
mov
add
jns
push
sub
mov
push
insb
lret
pusha
mov
dec
imul
in
out
add
sbb
or
fcompl
inc
out
add
int3
stos
add
add
pushf
xchg
iret
push
jo
adc
mov
rclb
aad
into
cmp
pop
or
jg
jmp
stos
shlb
rcrb
jecxz
add
mov
jp
fwait
add
fucomi
inc
insb
mov
xchg
cli
push
fildl
adc
enter
xor
daa
jle
pop
dec
lods
les
mov
or
jp
shlb
int
jmp
push
insb
je
daa
in
cmp
addl
xlat
pop
mov
jg
pop
or
and
xchg
imul
mov
les
adc
je
lcall
pop
push
pop
and
aaa
cmc
lahf
fdivs
test
pop
aam
jmp
fnstenv
movl
inc
in
lahf
or
aaa
sub
sahf
sbb
mov
movsb
xor
mov
pop
push
adc
roll
les
inc
xchg
inc
sub
int3
pop
out
add
cmpsl
aaa
int
ret
lock
or
in
in
insb
adcb
push
pop
and
add
mov
and
ja
dec
rolb
shrb
movsb
addb
rclb
adcb
cmp
jns
rclb
push
add
xchg
or
or
in
pop
das
adc
pop
add
out
or
enter
mov
pop
sbb
mov
mov
clc
pop
icebp
jno
ss
add
mov
adc
testl
std
in
in
inc
je
add
xchg
mov
insl
cld
mov
sub
jo
mov
pop
pusha
icebp
dec
out
push
fsubl
fcomi
add
xor
adcb
loopne
push
lcall
inc
jecxz
shll
sarl
and
push
xchg
decb
add
pop
sarb
ret
jb
push
push
and
repz
orb
into
pop
popa
xor
and
fcompl
mov
push
test
inc
push
add
stos
andb
out
mov
push
cmp
jge
aad
jae
loopne,pt
mov
mov
popf
test
movsb
sbb
data16
cld
scas
push
cmpsl
mov
sarb
inc
adc
cmp
popa
sub
pushf
in
lods
and
sbb
pop
mov
xor
jmp
cmp
lret
jne
xor
je
adc
mov
movsb
insb
mov
jnp
xchg
xor
insl
sbb
xlat
sbb
jo
push
fs
lahf
jbe
jmp
pusha
shl
cmpsb
add
pop
lea
xlat
inc
cmp
scas
or
je
push
enter
js
aad
push
mov
push
decb
popf
sbb
pop
inc
dec
pop
xchg
ret
rolb
push
dec
negb
push
jp
clc
stc
fists
sahf
lahf
nop
orb
sbb
lock
cmc
xor
push
repnz
adc
sub
popf
xchg
repz
add
pop
loopne
aam
push
shrb
dec
add
add
fcos
mov
pop
je
xor
sbb
add
sub
ds
xchg
lds
loope
js
imul
mov
out
stos
nop
in
mov
pusha
xchg
mov
push
pop
add
fmuls
in
xchg
push
lret
cmpb
int3
lods
mov
xchg
nop
cmp
sbb
dec
sbb
push
mov
push
movl
add
xchg
xchg
jge
testl
dec
xor
dec
mov
dec
clc
lret
jp
sahf
ss
fsubr
jecxz
aaa
mov
jno
adc
inc
lret
in
xlat
rcl
cltd
arpl
and
ja
mov
test
into
or
addr16
add
xchg
imul
arpl
sub
inc
add
mov
jge
sub
and
and
push
mov
sbbb
and
ror
fcmovb
sti
push
add
mov
xlat
addb
mov
jbe
sbb
and
mov
mov
loopne
mov
sub
test
or
in
pop
lcall
imul
js
sbb
fldl
cmpsl
mov
insb
shl
cmp
dec
push
movl
xor
cmpsb
sti
cmc
jmp
leave
xor
push
mov
mov
adc
ret
je
adc
popa
xlat
cld
push
es
add
xchg
dec
cmp
jl
and
fs
loopne
add
loope
adc
movsl
hlt
inc
push
lcall
mov
jno
add
jbe
cmc
rorb
sti
mov
pop
in
lcall
dec
enter
adc
fsubr
add
leave
fistps
icebp
popa
js
int
add
sub
insb
mov
out
das
rcll
cmc
inc
insb
cmpb
add
sbb
adc
jbe
pop
xchg
shll
lods
popf
xor
clc
cmp
xchg
cmp
mov
out
pop
repnz
adc
dec
loopne
loope
adcb
xchg
mov
cwtl
int3
xor
stos
icebp
cmp
fistpll
add
stos
push
xor
push
nop
in
leave
mov
push
xor
and
xchg
jge
aaa
test
xchg
push
rcrb
push
js
inc
mov
pop
and
subb
popf
out
add
bound
add
in
xor
jg
xor
ja
clc
ret
imul
xor
lods
and
les
add
fisttpl
cmpsl
mov
xchg
faddl
sub
pop
ret
pop
mov
roll
and
pop
call
sub
lods
outsb
out
lcall
xor
jnp
pushf
add
arpl
mov
and
mov
inc
movsb
in
mov
jp
pop
aad
sbb
outsl
jns
loope
mov
ret
lock
call
andb
cmp
sub
lods
xor
sbb
leave
pop
rorb
sub
lock
push
shl
push
or
pop
pop
push
inc
mov
clc
mov
lahf
faddl
or
dec
rolb
dec
sub
pop
jo
and
movb
jne
jo
adc
add
pop
sbb
adc
xor
dec
mov
and
call
ret
sahf
lods
jbe
mov
sub
jle
xor
cs
aaa
js
inc
lods
mov
cmp
or
lret
shl
testb
and
adc
adc
dec
pop
dec
je
nop
xor
shlb
adc
aaa
xor
mov
adc
cmp
mov
rcll
adc
daa
jl
cmp
fs
add
movsb
movsb
popa
cmp
add
mov
in
sbb
fmuls
and
and
and
add
out
imul
rclb
ljmp
adc
push
sub
mov
or
sahf
xor
xor
sbb
sbb
fwait
movb
testb
or
mov
pop
inc
cmpsl
shlb
sbb
xor
push
and
add
dec
shl
dec
xchg
test
or
stos
cmp
cmp
repnz
cwtl
icebp
sbbb
jmp
push
lock
jl
sub
inc
mov
lods
decl
xor
sub
push
addl
xchg
loopne
mov
iret
mov
cmp
jecxz
xchg
mov
cmp
xor
repnz
stos
je
pop
test
adc
repz
add
rclb
mov
shlb
add
sbb
cltd
pop
shrb
cwtl
jne
mov
mov
ret
inc
add
inc
pushf
push
mov
dec
add
imul
and
lods
cmp
push
mov
jae,pn
aaa
jle
shll
fisttpl
xchg
add
icebp
outsb
lods
jle
shrb
mov
fisttpl
ret
movups
stc
add
ret
fstps
out
adcb
repnz
dec
mov
jp
dec
pusha
xor
sti
add
movsb
jno
aaa
adc
stc
sarb
sbb
jmp
insb
filds
pushf
add
movsl
int
aas
xor
pop
pop
sarl
sub
inc
adc
dec
imul
sbb
rolb
xor
push
inc
int
out
repnz
sbb
lock
ret
loope
dec
clc
pop
outsb
stos
xchg
push
sub
icebp
mov
and
roll
clc
mov
add
stc
adc
imul
add
add
lahf
and
stos
jg
xor
pusha
add
aad
push
mov
scas
test
xor
rol
add
inc
xchg
roll
mov
inc
jl
into
pop
rclb
dec
add
add
addr16
cmp
les
inc
adc
cmp
or
mov
adcb
add
pop
add
xchg
sub
rclb
and
ljmp
nop
or
mov
addr16
or
in
dec
xchg
dec
adc
add
push
sbb
arpl
pop
add
insl
push
push
mov
adc
shrl
push
adc
xchg
pop
nop
and
jle
push
push
or
mov
hlt
xchg
or
mov
shll
popa
das
and
add
cmpsb
mov
rolb
push
and
dec
and
add
sti
lods
adc
icebp
jne
stos
call
sub
aam
jge
push
sbb
adc
or
cmp
adc
pop
add
test
inc
xchg
fcoml
clc
push
sbb
bound
test
loopne
and
jo
xchg
mov
rorb
bound
mov
sbb
sarl
cmp
sbb
shlb
pop
mov
and
and
add
mov
dec
popf
rcll
loope
stos
lahf
lret
inc
pop
add
pop
outsb
mov
add
hlt
std
in
aam
icebp
dec
xor
xor
movl
mov
or
fimull
pop
add
popf
mov
jne
push
push
repnz
mov
mov
mov
or
xchg
sbb
aaa
fmull
or
mov
adc
cmp
xchg
jp
sti
filds
call
repz
pushf
jnp
add
or
mov
movsb
inc
push
add
into
ret
not
jle
addb
fiadds
sbb
rol
pop
outsl
test
add
movsb
outsb
out
sub
push
pop
mov
adc
jl
stos
rcrb
jmp
enter
iret
mov
cltd
insb
xor
mov
mov
mov
test
test
xchg
enter
pop
xlat
repnz
adc
xchg
cmp
test
xor
mov
leave
pop
dec
pop
dec
dec
push
pop
lods
jge
loopne
jno
movsl
mov
stos
lock
aas
pop
add
push
out
jne
inc
sbb
dec
xchg
mov
dec
pop
dec
sub
add
imul
sbbl
call
jns
jne
js
mov
xchg
dec
mov
xor
lods
popa
fsubrs
add
lods
icebp
cld
rdtsc
mov
sbb
lret
scas
dec
in
aad
or
inc
cmp
mov
lods
xor
xor
mov
cmp
aas
adc
jns
pop
insl
scas
out
and
dec
inc
push
les
sub
pusha
in
adc
xor
xchg
dec
rcrl
cwtl
or
xlat
rorb
xchg
push
inc
or
add
mov
rcrl
sub
sbb
add
dec
mov
lret
mov
push
out
je
inc
test
bound
div
ds
dec
xor
push
mov
sbb
or
popl
std
ret
add
faddl
pop
cld
outsl
lahf
inc
inc
lea
sbb
push
dec
jb
pop
rclb
rcll
sahf
sub
das
sbb
icebp
loopne
jle
test
pop
mov
add
in
leave
sbb
into
pop
fsub
stos
jb
in
mov
add
fwait
push
mov
add
sub
jo
addl
loop
test
jno
dec
jns
and
orb
add
test
pop
sub
cmpsl
and
sub
or
and
adc
andb
and
dec
fldenv
nop
test
sahf
inc
adc
andb
jbe
add
jecxz
ljmp
nop
jo
add
int3
jl
cvtps2pi
cmp
jne
addb
xchg
aam
add
sub
cmp
popa
add
sbb
sbb
cmp
dec
loopne
add
test
icebp
push
push
mov
pop
movlhps
aaa
mov
add
or
sti
xchg
mov
inc
int3
sbbb
cltd
pop
sarb
pop
les
cli
sub
mov
sarl
mov
mov
out
inc
and
adc
and
ret
or
sbb
fidivs
mov
adc
sbb
pop
aad
and
fldl
inc
fisubrs
and
pusha
dec
pop
call
or
add
imul
ret
jecxz
mov
inc
movsb
cmp
sub
mov
mov
lahf
scas
jb
ss
jg
mov
xor
imul
cmp
xchg
add
in
sub
inc
stos
and
pop
mov
mov
cmpsb
jno
xor
aam
mov
inc
in
or
push
pop
cmc
popf
cmp
lea
adc
movsb
dec
sbb
xor
and
test
push
clc
mov
stos
sub
sbb
ja
add
insb
fistpl
push
sub
sbb
pop
mov
mov
push
mov
push
sbb
xchg
clc
cltd
pop
fstpl
mov
sbb
inc
jns
dec
dec
pop
add
loope
sarb
xor
add
ljmp
mov
push
adcb
fwait
pop
std
inc
out
add
pop
and
pop
stos
jg
add
outsb
pop
jle
add
xlat
loope
pop
out
xchg
mov
pop
mov
int3
std
cld
sub
notb
mov
jne
pop
and
push
xchg
flds
cmp
sbb
loopne
mov
add
mov
popa
push
inc
mov
andb
call
es
clc
sahf
mov
test
dec
lcall
mov
aam
ret
and
add
rorl
pop
adc
mov
incb
push
into
jl
add
les
mov
adc
in
enter
jno
pop
add
clc
frstpm(287
stos
adc
stc
jl
add
fistpll
cmp
xchg
or
rcrl
loope
pusha
daa
xor
jb
cmpsb
add
js
pop
mov
and
lea
adc
adc
jnp
pusha
out
pop
push
repnz
icebp
and
mov
lea
in
dec
add
mov
pop
pop
dec
jg
dec
and
add
or
sub
jae
add
lock
je
faddp
sub
adc
push
les
inc
jo
stos
pop
fldlg2
sub
push
test
and
jnp
dec
popa
mov
lret
jo
adc
jbe
add
mov
arpl
cltd
clc
in
adc
jns
call
stos
sub
xor
das
imul
xchg
pop
call
push
int3
xor
push
pop
xor
int3
or
add
push
mov
insb
imul
iret
cmpl
inc
push
or
scas
jle
stos
repnz
aad
ret
xor
icebp
or
out
jbe
mov
add
pop
mov
enter
push
lods
push
mov
add
or
add
idivb
push
xchg
ds
add
add
or
push
inc
push
sub
xor
add
xor
nop
iret
out
jb
xchg
mov
testl
psubb
add
fildl
lret
sub
lods
jle
cmp
pop
sub
fwait
decl
add
add
adc
rorb
jns
pusha
dec
imul
push
pop
popl
test
cmc
clc
andb
and
jo
je
push
add
stos
mov
subb
mov
add
or
jmp
pop
out
repnz
inc
in
aaa
adc
sbb
cli
and
dec
mov
push
push
cmp
sub
inc
cmp
pop
add
into
out
inc
test
and
and
adc
jo
outsl
lods
add
cmp
mov
add
sub
cwtl
and
or
ss
movsb
inc
pop
push
rcr
pop
loop
mov
jp
push
ss
and
dec
mov
xchg
push
mov
jge
push
jb
rorb
add
and
xchg
pusha
sarb
jae
jnp
pop
sbb
jbe
fisubs
xchg
data16
out
and
aaa
xor
sbb
es
mov
add
movsl
cld
fstpl
sbb
sub
loopne
add
mov
jle
add
mov
popa
stc
sub
lea
aam
add
add
adc
jne
and
cmp
aaa
lods
cmp
xor
sub
outsb
cwtl
cltd
int3
cmp
pop
inc
stos
pusha
pop
mov
add
cmp
out
mov
sbb
dec
ss
test
rolb
sbb
jns,pt
pop
jae
sub
and
mov
add
loopne
push
int3
fs
dec
adc
cmpsb
icebp
in
cmp
xchg
imul
mov
shl
sbbb
mov
dec
and
sbb
inc
test
cmp
inc
pop
pop
cmp
ss
add
lea
jge
call
jo
mov
lds
cwtl
test
sahf
outsl
je
push
repnz
xor
imul
pop
sti
pop
imul
lea
scas
addb
xchg
sub
shll
jae
add
or
sub
or
or
fsts
repnz
shll
push
pop
push
mov
nop
add
sub
inc
dec
mov
fdisi(8087
sbb
adc
xor
add
adc
xor
insb
out
loopne
in
add
shlb
mov
dec
pop
mov
adc
aam
addl
jbe
pop
add
mov
icebp
and
jle
in
sahf
and
sbbl
lods
pop
ret
cmp
inc
addb
repz
test
mov
xchg
sbbb
nop
int3
add
and
push
mov
xor
push
push
or
cmpsb
add
sub
mov
add
adc
cmpsl
call
fwait
test
testb
jmp
mov
aaa
mov
aas
mov
scas
xor
in
inc
adc
lock
push
xor
or
mov
add
mov
repnz
push
mov
mov
pop
or
sarb
in
stc
ss
or
inc
or
les
adc
add
and
mov
hlt
lods
dec
clc
in
test
movl
insb
mov
dec
rcll
ds
jbe
push
call
and
stc
adc
shll
cwtl
mov
adc
or
xor
rdtsc
ljmp
add
enter
mov
and
je
das
sbb
shll
xor
xor
and
adc
add
lahf
mov
mov
and
add
ficoms
dec
fcompl
xchg
lds
gs
adc
std
adc
mov
movsb
lock
lret
ss
adc
add
stc
sbb
ret
jnp
sbb
inc
icebp
int3
loopne
add
sbb
cmpsb
daa
in
adc
lcall
xor
scas
pop
and
push
or
sbb
push
in
inc
call
stos
xor
and
mov
lds
mov
nop
or
ljmp
mov
sahf
xchg
jns
mov
mov
sar
jmp
ss
push
dec
pop
pop
and
and
mov
and
mov
mov
ret
push
lahf
or
mov
adc
mov
mov
and
xor
stc
push
pushf
cmp
int
adc
add
lock
add
icebp
xor
inc
movsl
push
sar
push
add
daa
dec
shrl
sub
cmp
sbb
mov
jg
xor
out
dec
inc
mov
stos
aaa
hlt
and
or
xchg
push
repnz
sbb
ds
inc
mov
loopne
lods
dec
pop
xlat
js
in
pop
xchg
mov
xor
out
jns
incl
je
in
pusha
xor
mov
xchg
les
mov
fcmovnb
and
pop
inc
xor
lea
lock
mov
or
ja
xchg
mov
into
cmp
and
test
add
sbbl
pusha
mov
add
ds
and
repz
xor
jo
pop
adc
jg
mov
cmp
mov
lods
push
add
das
sbb
pop
xor
roll
sbbl
mov
std
movsb
pop
jmp
mov
nop
roll
mov
jns
pop
mov
inc
dec
data16
fwait
add
cmp
push
and
shlb
roll
ja
add
rcrb
dec
xchg
and
sbb
sbb
xchg
pushf
push
jnp
add
rorb
int3
or
in
outsb
adc
insb
pusha
aaa
pop
dec
mov
loope
mov
pushf
inc
pop
adc
ficoms
add
add
mov
insl
sbb
stos
adc
imul
movsb
mov
in
xorb
add
adc
add
mov
push
sub
xor
fwait
add
mov
xor
mov
add
fwait
or
mov
push
add
loopne
lods
sub
int
fnstenv
lods
sub
lret
movsl
mov
imulb
lret
imul
nop
in
out
ja
sub
or
push
scas
or
loop
pop
nop
sub
in
push
push
cmp
out
add
push
test
loop
xchg
in
or
push
lahf
jecxz
push
xor
sbb
pop
xchg
ret
jmp
add
and
dec
fstps
or
dec
inc
push
xchg
sub
outsl
into
int
xchg
popa
js
jns
mov
add
pusha
mov
pop
sahf
sbb
push
xchg
add
lea
add
push
sub
cmp
aam
loopne
iret
pop
fsts
push
pop
jo
and
add
mov
inc
and
mov
pop
loop
scas
cmp
jmp
dec
cwtl
lea
dec
loopne
repnz
lock
or
add
xor
add
add
cltd
dec
adc
adc
int
iret
xor
insb
in
test
sbb
cltd
pushf
add
push
adc
shll
sub
icebp
insl
ljmp
inc
adc
lea
mov
in
xchg
jp
push
stos
sbbb
and
cmp
rcrb
ja
dec
add
cli
imul
cmc
enter
add
xor
test
add
and
cld
repnz
push
pop
cwtl
adc
into
pop
mov
mov
add
or
hlt
je
or
adc
add
test
xlat
cmp
mov
cld
testb
test
loop
or
test
stos
orb
cmp
pop
daa
and
fisubl
cmpsb
sub
cld
ds
push
add
fistpll
inc
dec
data16
lds
and
into
pop
add
dec
xor
sbb
or
add
or
add
lds
push
das
scas
hlt
add
dec
jns
js
nop
xor
or
mov
mov
imul
xor
rolb
mov
mov
add
pusha
fwait
int3
inc
ret
xor
in
adc
push
shl
adc
sub
push
add
int3
xor
and
jge
add
insb
and
ljmp
add
dec
sti
imull
push
or
xchg
add
outsb
cltd
xchg
jnp
out
scas
sbb
push
jle
add
cmpl
jecxz
rcl
insb
or
ret
inc
cwtl
inc
sub
inc
push
inc
sub
push
xor
add
jg
mov
mov
add
and
jl
add
loopne
pushf
dec
pop
call
cmp
mov
add
out
test
aaa
add
xchg
jmp
decl
add
dec
test
jg
punpcklwd
xchg
xchg
push
mov
mov
sbb
scas
add
mov
enter
add
fistpll
push
add
push
in
lods
mov
add
jp
loope
cltd
mov
cmpsl
xor
test
shl
ret
stc
outsb
add
sti
sbb
cmp
pusha
and
add
dec
pop
rcll
mov
add
inc
lock
roll
ja,pt
cmp
xlat
ret
mov
scas
pop
or
push
into
inc
mov
ret
inc
push
cmp
or
or
jo
icebp
cmc
incl
addb
add
sbbb
clc
decl
mov
ret
pop
icebp
add
xchg
int
sbb
jl
rorb
mov
add
in
rol
xchg
dec
ss
sbbb
add
rclb
cmp
fdivrs
pushf
clc
enter
out
add
mov
cwtl
mov
stos
cmpb
jecxz
int
or
lahf
adc
hlt
push
mov
add
testb
bts
add
pop
cli
mov
dec
es
iret
mov
sub
gs
pop
repz
lock
int
hlt
sub
scas
cmp
mov
in
xor
add
ja
or
cs
pop
or
push
adc
dec
pop
and
es
out
xor
imul
in
xor
mov
jl
jns
pop
movsb
movb
xor
or
out
adc
lcall
mov
mov
outsl
andb
aas
add
or
add
sti
push
orb
add
lret
push
adc
cmp
cmpsb
int3
push
into
scas
dec
xor
fcmovnb
sarb
int
in
jmp
xchg
mov
add
std
add
cli
pop
push
or
and
and
or
orb
mov
sub
lahf
cld
add
test
add
dec
cs
and
push
ds
mov
aas
add
cmp
out
ljmp
xchg
push
push
pop
jle
xorb
cmp
pop
or
add
dec
inc
cmp
sub
sbb
out
int3
jno
cmp
rorl
sbb
push
into
sub
mov
cmp
test
add
test
add
mov
add
jecxz
jle
cmp
and
js
push
lahf
xor
mov
dec
fldl
imul
jno
push
add
inc
outsb
xchg
jnp
lock
lods
rcrl
sub
fnsave
shl
pusha
push
mov
push
sti
cmp
ret
push
int3
xor
lcall
shrb
or
xchg
mov
dec
pop
pusha
mov
dec
mov
pop
shrb
in
pop
push
fiaddl
pusha
and
dec
mov
orb
and
out
ficoms
enter
mov
loopne
addb
scas
and
add
insb
jno
std
push
push
add
aam
sub
pop
stc
xchg
fidivs
push
fists
or
js
pop
lcall
testl
iret
aam
mov
add
push
andl
lods
push
add
pop
je
xlat
sub
fisttpl
clc
in
sub
add
xor
adc
mov
add
add
pop
adc
arpl
ljmp
pop
fsubrl
jno
mov
jbe
and
arpl
call
sbb
pop
add
mov
into
push
add
in
popl
in
in
mov
sbb
push
daa
cmpsl
adc
popf
test
jecxz
ret
stos
andb
leave
call
test
fstp
add
les
xchg
fld
repnz
aaa
push
shll
push
or
lock
aam
add
jb
or
fcmove
mov
mov
adc
add
jge
fistpl
and
imul
in
in
add
sbb
xchg
imul
xor
add
out
jge
inc
or
iret
cmc
xchg
fimuls
mov
sbb
faddl
add
lock
popa
cmp
shlb
mov
cli
addr16
pop
loopne
loopne
add
ljmp
lds
or
ficoms
ret
mov
add
pop
xchg
repnz
sub
pop
insl
int
nop
push
xor
jmp
add
lahf
dec
mov
sub
xchg
jl
dec
std
stc
fwait
push
jge
push
add
stos
adc
iret
les
dec
jmp
mov
cmpb
add
cmpsl
pop
xchg
inc
cmpl
insb
pop
mov
lcall
das
mov
adc
pusha
pop
pop
cmpsb
inc
jo
pop
out
add
int3
push
mov
add
lods
outsl
lods
cmc
out
lret
out
jp
and
lock
push
aaa
adcl
pop
ret
lahf
test
adc
int
loop
xchg
add
xchg
xor
add
outsb
out
ret
dec
sti
or
daa
xchg
cmpsl
ljmp
add
adc
mov
mov
in
pop
cmc
lahf
sbb
sbb
or
xor
in
andb
xor
push
add
loop
outsl
mov
mov
xor
and
pusha
popa
rcrl
fwait
mov
test
jb
add
cmc
dec
pop
sub
out
push
ljmp
mov
add
xchg
lcall
std
sbb
or
lods
add
dec
push
add
xor
rcrb
jg
lret
data16
push
sub
insl
adc
inc
jg
dec
mov
pop
push
jo
mov
lock
lds
add
lret
cwtl
inc
mov
ret
cmovg
jge
and
dec
or
mov
cmp
jno
mov
add
and
aaa
adc
inc
movsb
jmp
push
aas
adc
pusha
mov
andl
das
lds
push
mov
push
rcll
adc
mov
insb
dec
outsb
sub
xor
inc
and
repz
and
ret
push
cltd
enter
mov
out
mov
inc
mov
cmp
inc
jmp
out
js
add
in
lods
inc
inc
sub
add
cltd
into
les
out
dec
and
sbb
and
loopne
mov
push
add
jp
add
ja
lahf
mov
inc
add
not
dec
add
ficoms
cmc
jbe
add
cmp
daa
xchg
cwtl
clc
mov
mov
sbb
stos
add
pop
clc
lret
cmp
mov
mov
loopne
xor
pop
test
cmp
inc
or
rolb
jno
jmp
xor
push
inc
dec
sbb
cwtl
jne
shl
mulb
push
test
bswap
inc
xlat
daa
pop
lock
add
push
es
push
inc
push
sbb
adcl
aaa
dec
push
cltd
icebp
push
pop
inc
clc
inc
adc
lods
lock
jo
pop
js
add
roll
inc
lret
test
adc
push
and
jl
push
fiaddl
pop
loopne
jb
xchg
jle
subb
stos
add
xchg
or
sub
leave
jp
add
push
pusha
shrb
or
std
lock
fisubs
gs
fsubs
push
mov
xor
pop
enter
mov
cwtl
mov
loop
add
bound
ja
lgdtl
out
ss
or
mov
sub
or
adc
push
imul
mov
ss
pusha
and
push
pusha
dec
inc
fisttps
add
out
mov
pop
xorb
pop
insb
shlb
lods
xlat
add
adc
add
ret
sbb
clc
lods
add
in
sahf
cmp
xorl
mov
mov
xor
in
add
dec
cmp
enter
in
jno
add
cmpb
mov
inc
cs
add
sub
addr16
add
sbb
dec
push
out
mov
push
push
ja
xorl
test
fsubl
adc
insl
pop
iret
rep
in
sbb
cmp
inc
test
cmp
xchg
mov
pop
sbb
in
sub
add
sbb
aas
sub
mov
add
cwtl
cmc
subb
push
push
fldt
out
and
js
lods
xchg
add
jmp
adc
mov
ja
sbb
mov
jno
sahf
ffreep
das
mov
daa
sbb
add
sub
jno
subb
mov
ficomps
push
iret
ret
push
pop
xor
xchg
jno
push
std
pop
popa
adc
or
shl
repnz
sahf
jnp
sub
add
sbb
add
pusha
mov
arpl
or
int
adcb
add
inc
mov
cmp
scas
jle
add
popa
adcb
add
fldcw
in
push
add
lods
add
das
mov
mov
stos
sbb
sarb
cltd
test
mov
cwtl
add
fldt
and
loopne
jg
fcoms
mov
aaa
xchg
iret
pop
xchg
push
mov
adc
shrb
mov
inc
pop
ret
adc
add
in
sarl
add
lahf
push
sbb
cld
inc
adc
nop
mov
scas
call
or
add
pop
and
xor
jbe
das
aaa
pushf
or
mov
sbb
add
and
fisttpl
and
outsb
cwtl
std
add
inc
pause
sub
or
sbb
or
call
inc
cli
sbb
lods
lcall
inc
jecxz
sbbb
imul
add
sbbl
cwtl
scas
mov
xlat
mov
adc
insl
js
cmp
popf
xlat
mov
aaa
jl
sbb
iret
or
jnp
fldl
pop
jg
jecxz
add
int3
or
hlt
pop
or
inc
jbe
aaa
jnp
adcb
jne
xlat
clc
and
mov
push
mov
ljmp
mov
add
add
insb
pop
pushf
sbbl
push
shlb
and
insb
jo
cmp
or
xlat
pop
stos
lea
adc
mov
testl
rolb
mov
push
fs
mov
mov
dec
xchg
daa
or
mov
add
gs
add
movsbl
int
movsl
push
mov
add
aad
cmp
add
inc
cmp
test
std
push
inc
mov
add
jae
call
push
add
stc
push
pop
add
daa
pop
and
inc
aam
xchg
adc
jo
pushf
add
mov
pop
push
insl
xchg
lds
push
es
aas
test
mov
cmp
jp
movsl
mov
out
inc
add
idivl
mov
mov
sbb
ficompl
shr
jbe
pop
cmc
lds
mov
and
or
test
xor
test
mov
idivb
fdiv
or
adc
jmp
imul
jo
mov
orb
push
sbb
arpl
int3
push
and
xor
adc
ss
cmp
lret
jmp
xor
loope
jecxz
nop
pop
jl
push
pop
call
add
inc
fdivrs
mov
xlat
adc
movsb
jmp
addl
shl
add
repz
and
add
cmp
pop
sub
push
cltd
into
mov
mov
rolb
inc
addr16
mov
add
jo
adc
scas
sub
cmpsl
cmp
jne
inc
fsubs
outsb
mov
movsb
and
mov
int3
add
push
daa
mov
repnz
ds
xor
add
sub
push
add
scas
dec
pop
insb
mov
push
push
sarl
and
test
ljmp
in
mov
jo
add
inc
bnd
mov
rcll
pop
shll
jo
enter
pop
insl
out
popa
inc
cmp
push
xchg
jl
jae
push
aam
je
loopne
in
lods
jecxz
sub
lock
dec
push
add
cld
out
mov
add
jge
and
jl
insl
jmp
add
add
fsubs
add
in
jo
mov
push
lods
loopne
add
cmpsl
es
movmskps
xchg
subb
std
or
ss
mov
aad
add
and
bnd
dec
add
out
popa
lea
add
sbb
push
sub
aad
sbb
add
add
cmp
jle
jg
add
imul
into
lods
test
rorb
sub
stos
dec
loopne
jo
cmp
mov
jecxz
inc
add
jno
test
xchg
add
mov
out
jnp
add
rol
test
push
ror
lcall
mov
jecxz
jmp
xlat
mov
mov
jecxz
add
ret
rdtsc
sbb
push
sub
daa
add
test
imul
fwait
add
push
out
dec
shlb
sub
stc
jnp
xchg
ret
dec
cmp
push
arpl
fsubrl
sub
repnz
movsl
gs
leave
push
add
push
stc
add
push
add
push
dec
xor
inc
lock
lock
cmp
pop
sbb
sbb
jg
leave
adc
les
sbb
inc
fidivrl
mov
lahf
sbb
add
enter
flds
push
push
popf
in
int
and
hlt
loopne
mov
inc
out
push
in
mov
jecxz
clc
and
adc
add
and
fadd
mov
pop
add
sub
fwait
cmp
addb
xor
jecxz
inc
movsb
add
xchg
pop
cmpb
cmp
mov
popf
mov
bt
inc
mov
sbb
mov
xchg
mov
repz
aam
clc
pop
inc
jae
das
cmp
xchg
fsubrs
into
push
inc
push
jns
icebp
cltd
xor
mov
mov
stc
jbe
add
std
inc
shrb
pushf
add
insb
out
mov
enter
pop
into
jns
push
in
hlt
adc
or
mov
in
cwtl
jp
sbb
add
test
mov
add
sub
add
pop
bound
add
imulb
jmp
pusha
cmpsb
cltd
inc
pusha
push
les
jno
adc
cld
rorb
dec
add
xchg
loopne
pshufw
add
mov
int
adc
sahf
lcall
in
repnz
cwtl
sub
jb
mov
ss
rcrb
adc
enter
mov
push
insb
js
jecxz
je
add
xor
ds
mov
negw
scas
stc
fwait
clc
xchg
mov
add
outsb
sbb
lret
xor
ja
cmp
jb
adc
inc
xchg
mov
int3
add
cmc
dec
add
or
cmp
call
daa
in
xchg
add
ds
push
add
jg
jecxz
nop
xchg
sub
mov
insl
inc
add
add
xorb
push
pushf
adc
mov
jo
add
jge
pop
das
jg
push
loop,pt
dec
mov
push
std
dec
jbe
pop
out
imul
or
cwtl
bound
lods
in
pextrw
adc
or
inc
sbb
adc
push
fnstcw
pop
fadd
fldl
sahf
cwtl
mov
sub
scas
add
sub
ss
lret
mov
inc
xchg
shlb
jmp
cmp
mov
in
iret
add
or
ljmp
inc
pop
push
filds
fmuls
scas
rclb
not
cli
add
in
call
mov
shlb
int
and
leave
adc
xlat
pop
mov
adc
add
das
jno
fs
jb
cs
fistpl
scas
roll
sbb
jl
inc
js
pop
pop
jo
shll
je
sbb
cmp
add
push
xchg
mov
xchg
inc
mov
adc
dec
add
cmp
sub
inc
jg
ja
mov
pop
sub
sti
aaa
iret
dec
add
jne
xchg
push
adc
lret
add
ret
adc
je
add
pop
out
sbb
jae
cmpsl
mov
add
enter
out
or
movsl
inc
add
dec
idivl
add
sbb
or
pop
or
adc
enter
inc
ror
dec
addb
dec
imul
popa
aas
in
shl
rcrb
mov
out
push
cmp
adc
add
sahf
hlt
add
add
lods
sysret
sti
pop
test
dec
cmp
inc
cmp
xchg
stos
testl
sahf
int3
pusha
mov
xor
popa
xor
xchg
bound
gs
xchg
xor
dec
fnstenv
mulb
std
mov
cmp
push
inc
in
sbb
or
pop
push
ljmp
test
add
jb
sbb
pushf
repz
dec
sub
add
sahf
push
mov
xor
in
add
ljmp
sahf
xlat
or
xchg
and
aad
enter
mov
sbb
pop
add
mov
movb
mov
enter
add
xchg
push
lret
nop
inc
jp
add
pop
and
mov
mov
sub
sahf
popf
mov
ds
orb
pop
addb
jl
int
out
loopne
pop
cli
dec
js
sub
sbb
loopne
push
push
add
xchg
scas
cmpsb
dec
mov
jmp
ds
bound
xchg
js
add
push
out
cmc
into
sub
mov
pop
in
mov
mov
adc
or
push
xor
in
out
or
inc
push
push
imul
jl
repz
lahf
iret
add
sbb
stc
imul
rolb
fcoms
ja
addl
movsl
inc
cwtl
outsb
push
ds
push
pop
popa
mov
cs
add
fmuls
mov
test
repz
pushl
outsb
gs
imul
push
ljmp
or
inc
or
fdivrl
jae
adc
xchg
cmp
inc
add
out
lock
shrl
daa
xchg
data16
outsl
or
and
pop
mov
inc
enter
jp
add
inc
into
and
mov
add
xchg
dec
fnstcw
add
mov
movsl
pop
repnz
push
add
add
cmpsl
mov
cmp
mov
fs
enter
ja
and
sbb
imul
cli
mov
cld
aad
sub
pop
mov
pop
mov
jle
xchg
lock
inc
add
icebp
mov
mov
lea
js
andb
pop
jno
or
and
mov
jp
xchg
mov
sbb
and
pop
sub
xchg
outsb
cmp
cltd
mov
testb
dec
sbb
add
mov
xlat
add
sub
lcall
sub
pop
dec
scas
add
dec
add
jns
jle
inc
or
clc
lret
inc
cltd
or
jnp
cmp
sub
and
mov
add
xchg
in
pop
mov
out
add
movl
mov
add
insb
and
adc
pop
add
pop
sub
cmp
push
mov
add
dec
add
mov
and
or
mov
loop
add
int
enter
rolb
or
jo
fdivs
sub
sub
add
mov
xchg
jno
xor
popf
adc
add
and
mov
aas
mov
jae
add
fiaddl
loopne
ret
add
push
jno
movsb
add
fsubs
inc
add
in
sbb
jle
loopne
mov
mov
add
mov
cmp
dec
leave
add
or
dec
sbb
pop
aam
subl
in
pusha
pop
adc
xchg
jnp
rcrl
mov
int3
aaa
pop
add
xchg
mov
loop
add
jbe
cmc
sub
daa
pop
add
mov
fcmovb
popa
jp
add
cli
into
xchg
in
lds
sti
roll
adc
imul
int
shll
shrl
mov
and
add
jle
adc
aam
sub
fisttpll
pop
cmp
mov
and
inc
jnp
dec
xchg
into
jae
lret
mov
lahf
sbb
in
js
cmp
mov
popf
sub
nop
mov
cli
add
rclb
int3
add
push
sub
pop
sarl
pop
ret
add
jge
aas
aad
fsubs
add
out
loop
addl
cmp
mov
xchg
iret
add
pop
mov
loopne
shrb
arpl
push
xor
add
call
insl
sub
cltd
sbb
cmp
mov
add
mov
enter
out
bound
cmp
push
xor
dec
push
xor
mov
push
pop
ret
xor
in
sbb
leave
cmp
push
js
push
sbb
add
jmp
add
jecxz
cmp
bound
popl
and
cmp
mov
cli
add
pop
sbb
xor
testl
pop
mov
stos
fiadds
hlt
in
add
mov
xor
mov
daa
mov
clc
into
adcl
nop
stos
scas
pop
pushf
mov
stos
stc
sbb
js,pn
mov
jne
in
repz
pop
or
mov
movsb
add
out
pop
dec
jo
cwtl
cmp
sbb
ss
lock
cld
add
fsubs
mov
rcl
or
cwtl
sub
add
ja
imul
dec
repnz
cmp
orb
insb
push
jle
ljmp
mov
add
dec
cwtl
pusha
add
add
cmp
outsl
inc
pop
add
mov
ftst
inc
repnz
lret
mov
jmp
add
jbe
pop
ds
ja
sbb
arpl
jl
add
pop
adc
cmp
cmp
push
bound
fidivl
pop
or
adc
and
aad
pusha
lcall
or
sub
cmp
gs
add
js
test
sub
inc
inc
push
mov
pop
test
insl
add
out
ja
iret
add
xchg
repz
flds
jmp
movhps
lock
loopne
fcomps
jb
in
mov
or
mov
push
sub
movsl
push
inc
fs
xor
ljmp
aas
inc
nop
cmc
xchg
lds
repnz
es
adc
and
scas
cmpsb
add
inc
add
sub
jo
lods
xchg
pushf
add
fmul
and
les
out
add
cld
jmp
dec
cmpsb
sarb
inc
jmp
and
jnp
fists
jb
roll
clc
lock
int
nop
dec
sbb
scas
cltd
sbb
int3
push
add
stc
int3
out
loop
jnp
mov
les
cmp
or
imul
add
lret
pop
cmp
xorb
push
aas
jae
sub
add
test
leave
pusha
sbbb
call
enter
add
pop
mov
aam
movl
leave
cwtl
mov
xchg
notl
pop
mov
mov
pop
arpl
into
inc
dec
cltd
xchg
insb
adc
xor
xor
movsb
add
adc
jmp
xchg
mov
xchg
cld
cmp
or
nop
inc
inc
push
add
pushf
repnz
inc
ret
lock
andl
and
sbb
jo
xchg
je
jp
addb
stc
fwait
adc
sub
add
push
add
sbb
pop
pushf
cmpsb
scas
adc
mov
test
fsub
pop
sub
xor
popa
pop
pop
stc
xchg
das
sbb
add
ja
mov
push
mov
stos
xchg
xlat
mov
add
in
mov
inc
cmp
mov
add
cmc
or
sarb
test
jl
cs
loop
or
mov
shl
push
outsl
xchg
or
enter
adc
sub
pop
or
xchg
addl
pop
add
hlt
fdivs
xor
and
push
sbb
mov
fcmovnb
sub
adc
jne
rol
cmp
movsb
fisubrl
shlb
ret
add
test
or
xchg
inc
scas
pop
add
addb
pop
mov
inc
repz
mov
add
sub
mov
jnp
mov
mov
insb
fimuls
mov
fsubrs
push
inc
enter
adc
outsb
shl
fnop
push
loope
dec
lea
ret
add
nop
dec
cmp
add
push
xor
lcall
bound
add
and
cmp
leave
addb
or
jo
add
sar
imul
pop
jmp
fcomp
add
inc
movsl
fucomp
fstl
pusha
cmpsl
gs
add
cwtl
hlt
js
inc
xor
stos
psrld
bound
push
push
das
repz
cli
add
mov
pop
ljmp
xchg
add
mov
rcll
shlb
adc
inc
cmc
mov
inc
cmpsl
jbe,pt
test
lcall
nop
mov
out
xor
inc
or
insb
js
xorb
mov
add
push
dec
or
cmp
loopne
add
cmp
mov
and
pusha
dec
mov
pusha
cmp
loop
cld
cmpsl
and
add
push
rolb
popa
repnz
and
add
sbb
jo
inc
out
cmp
mov
add
fdivrs
dec
mov
int3
mov
in
mov
outsl
in
pop
cmp
ss
add
fdivl
push
adc
repz
aad
inc
adc
pop
shr
jp
add
xor
dec
mov
clc
mov
fdivs
fldenv
mov
in
loop
out
outsl
nopl
xchg
push
cmp
outsb
adc
add
push
xchg
or
cwtl
inc
xchg
inc
fisubrl
loop
enter
roll
sbb
out
or
or
test
pop
cmp
jae
outsl
or
jl
jge
ds
pushf
or
pop
xchg
movsb
iret
shlb
mov
faddl
adc
sub
inc
sbb
into
rcr
fldl2t
rcl
xor
or
pusha
dec
mov
add
xchg
adcb
movl
mov
push
add
jae
pop
cmp
lcall
mov
inc
dec
jg
sbb
xchg
push
push
loopne
cld
xchg
push
push
push
push
cmp
push
gs
dec
decl
popf
sbb
inc
shll
popa
aam
call
out
xor
dec
push
cmpsl
or
pop
rcr
adc
jb
mov
push
xchg
jae
add
fisubl
loop
fwait
inc
pop
push
pop
add
shr
dec
cmp
bnd
mov
sub
sub
mov
arpl
fucom
dec
in
mov
pminsw
movsl
fldcw
add
add
or
add
lock
push
pop
mov
mov
mov
ss
lret
gs
xor
jl
pusha
cmc
cmp
int3
sub
push
shl
imul
lods
cwtl
add
dec
out
sub
or
notl
add
mov
xchg
icebp
shlb
and
jecxz
call
outsl
xchg
test
xlat
loopne
shlb
aas
add
ret
sbb
mov
cld
nop
sarb
fldt
dec
cmp
pop
push
cli
rorb
loop
push
jo
les
mov
pop
fsubl
popf
call
xor
adc
pop
mov
stos
add
cwtl
adc
mov
test
leave
fsubrs
xchg
cmp
popa
cmp
add
add
sub
mov
leave
in
into
pop
fidivrs
dec
add
mov
and
out
in
xor
cwtl
or
mov
hlt
xchg
inc
xorb
xor
mov
jo
insl
adc
incb
or
jge
test
orb
sbb
sbb
repz
insl
add
in
fstpl
test
dec
cmpsb
add
notl
popf
dec
mov
ss
mov
push
add
loope
jl
lods
push
or
movsb
pop
arpl
or
clc
aam
pushf
lret
xchg
stc
mov
and
pusha
adc
imul
pop
or
sub
pop
nop
aaa
jg
mov
test
add
adc
sub
insb
mov
fimull
insb
xchg
mov
add
imul
add
pop
idiv
add
cmpsl
or
mov
add
add
mov
sub
jnp
out
add
scas
test
and
adc
loop
push
jns
sbb
pop
cmc
add
xorl
nop
je
sbb
testl
lahf
mov
xchg
fucomip
add
cmp
mov
add
sbb
sbbl
or
lcall
mov
sub
add
mov
add
lock
sub
inc
push
adcb
xchg
arpl
testl
inc
popa
iret
or
pop
cs
inc
pop
shlb
les
ds
and
jl
jmp
jb
adc
pop
movq
dec
push
jecxz
mov
inc
mov
sbb
xor
cmp
add
push
pop
daa
add
cmp
jbe
add
inc
cs
sub
dec
mov
mov
sub
mov
psllq
ror
or
addr16
add
lret
dec
jmp
push
in
hlt
ljmp
roll
mov
inc
add
sarl
jb
pop
add
jp
lea
divb
gs
jne
int3
in
loope
xor
into
repz
sbbb
push
shlb
mov
ret
movhps
xchg
mov
out
sbb
dec
das
jl
add
xchg
jno
xlat
pop
sbb
add
scas
sub
add
sti
jae
and
cmp
mov
inc
lcall
addl
mov
hlt
and
mov
xchg
aad
xor
std
shrb
paddb
sahf
adc
xorb
pop
pop
testl
jb
test
and
inc
inc
jno
pop
add
fcoms
cld
int3
adc
mov
sahf
dec
mov
mov
push
sbb
notl
sbb
cmc
lea
inc
ja
fiaddl
add
jb
xor
add
in
or
pusha
cld
xchg
adc
das
ss
mov
cmp
dec
xor
call
movsb
js
pop
pop
sbb
aas
dec
adc
dec
push
mov
push
testb
loope
pop
cmpsl
add
pop
test
and
jo
cmp
sub
mov
fsubr
cltd
mov
pusha
add
push
shrl
mov
mov
or
xor
scas
aaa
sbb
js
inc
rolb
sbb
pop
aaa
aam
mov
loopne
xchg
sub
enter
nop
push
push
jno
cmp
movsl
es
popa
data16
shrb
ja
fsub
sti
mov
inc
xor
pop
stc
lods
idivb
mov
dec
out
or
sbb
mov
iret
repz
cmp
mov
or
pop
push
cmpsl
daa
cmc
aas
or
or
cmp
aaa
push
xchg
inc
in
sbb
push
loop
mov
fildl
and
mov
shrl
in
lret
dec
fwait
xor
and
popl
lock
testl
mov
iret
cmp
dec
inc
mov
mov
sub
pop
clc
scas
sub
jnp
fdivrs
inc
pop
addb
in
pop
cmpsl
push
pop
dec
mov
subb
mov
flds
idivb
pop
jo
out
ror
add
test
push
es
push
mov
ss
add
mov
xchg
shrl
jbe
scas
dec
xor
add
sbb
jno
enter
out
push
adc
loopne
add
ljmp
xchg
mov
mov
push
iret
mov
dec
mov
mov
fisttps
jns
and
cmp
icebp
repnz
dec
pop
mov
mov
mov
mov
sub
cmp
pop
gs
dec
mov
mov
out
push
mov
jo
push
inc
sbb
push
lods
int
sub
mov
mov
or
add
dec
mov
push
jo
fnstcw
mov
fdivl
add
push
add
mov
or
nop
and
cmpb
shll
jecxz
add
cmp
roll
repz
clc
and
pop
push
xchg
dec
sbb
push
add
in
cwtl
or
and
add
fdivs
addb
sar
enter
jo
sarb
pop
mov
shlb
push
or
addb
addl
add
add
cmp
scas
sbbb
sbb
nop
push
adc
pop
pusha
outsl
incl
or
jo
iret
fistpl
or
int3
into
mov
xor
lret
inc
add
pop
push
pop
or
or
adc
cmp
loope
dec
cmp
jne
leave
jp
jp
jno
mov
nop
popa
icebp
stc
mov
cmpl
push
cld
pop
addr16
jbe
lret
rclb
out
lea
inc
bound
add
push
fwait
movsb
iret
inc
shlb
add
mov
mov
in
std
jp
pop
fcmovnb
push
std
dec
leave
cmp
sbb
and
or
fnsave
pop
cli
xor
scas
cs
mov
je
ret
push
xchg
fdivs
sub
mov
add
nop
in
sti
loop
cmp
sbb
mov
js
or
xchg
clc
test
sub
add
jl
cmpsl
xor
dec
mov
insl
dec
push
jae
pop
fsubrp
sti
test
dec
mov
pop
sub
cwtl
or
and
pop
std
or
popf
push
cmp
add
inc
rcll
push
jp
lcall
xor
shlb
add
pop
xchg
idivl
push
stc
or
push
rorb
mov
mov
mov
insb
jae
add
dec
jb
test
mov
mov
cwtl
sbb
or
inc
add
daa
mov
push
jns
dec
sub
test
add
stos
jecxz
lahf
fsubs
sti
hlt
rol
sub
mov
mov
mulb
adcb
push
add
movb
insl
xor
fadds
pop
fiaddl
inc
mov
sti
dec
lret
out
xchg
push
aam
xchg
mov
and
out
adc
jl
push
fwait
cmp
inc
stc
dec
mov
sub
nop
insb
faddl
int3
aaa
shl
mov
gs
ds
ret
sub
cwtl
jmp
jmp
mov
pop
call
xorps
pop
mov
clc
aam
daa
push
rcr
imul
test
insl
cmc
loope
das
add
leave
pusha
inc
add
xchg
imul
xor
or
ss
sbb
sub
xlat
movsb
popl
xchg
xchg
ljmp
dec
add
lock
add
jbe
jnp
or
cmp
fsubl
sahf
loopne
cmp
push
push
xchg
push
inc
pop
in
adc
dec
jg
add
and
rorb
mov
dec
xchg
push
sub
sbb
add
add
fs
out
pop
jo
aas
fwait
popf
nop
xchg
jmp
xchg
sbb
out
sti
lods
pop
hlt
and
push
inc
sahf
dec
sbb
push
add
pop
xchg
pop
dec
loopne
sub
hlt
nop
psubsw
scas
imul
mov
fisttpll
mov
sbb
push
add
outsl
or
sbb
js
add
repz
aas
pop
xchg
sbb
add
test
cmp
push
push
pusha
test
ret
lret
lock
dec
adc
add
lods
mov
ss
sub
mov
loope
lods
jmp
sahf
add
inc
jle
mov
inc
add
mov
std
repz
xchg
js
ds
je
addr16
pushf
aas
pop
mov
nop
add
mov
mov
shrb
xor
in
in
mov
ss
outsb
gs
xchg
add
push
repz
push
jae
jecxz
jg
cmp
inc
aas
or
mov
add
jbe
movsb
rorb
arpl
inc
add
outsl
xor
enter
pop
out
pushf
dec
add
arpl
mov
imul
aaa
inc
adc
xor
dec
nop
pop
add
ljmp
push
loopne
jns
movsl
es
push
cmp
cwtl
adc
je
add
loop
xchg
mov
or
test
rorb
pop
loopne
xchg
jecxz
or
sbb
push
xchg
lea
dec
in
add
jne
add
pop
inc
pop
sub
mov
add
fs
lret
test
das
push
fnstsw
mov
ficomps
inc
push
xchg
popa
cwtl
and
fs
cltd
jb
adc
mov
cmc
xor
std
lock
mov
sete
ja
loopne
jo
xchg
lret
jno
pop
and
cmpsb
fs
shrb
push
mov
jno
sahf
test
mull
adcb
in
nop
adc
sub
std
and
loope
into
mov
pop
add
cmp
jecxz
or
mov
ss
sbb
jnp
adc
or
jae
add
cmp
push
push
cld
imul
pop
xchg
adc
cwtl
push
je
test
in
test
jnp
sbb
shlb
lret
xor
pop
cltd
add
enter
ljmp
jle
jl
push
pop
or
inc
inc
mov
push
aad
and
nop
dec
lcall
sub
outsl
nop
add
gs
xlat
adc
mov
loopne
imul
les
js
pop
xchg
dec
push
fdivrl
push
push
push
shrb
jle
push
or
inc
add
add
std
pop
scas
pinsrw
and
xchg
mov
add
push
roll
dec
xchg
out
push
stos
sldt
imul
or
mov
push
mov
mov
and
cmp
adc
cmpsb
xor
neg
mov
adc
cmp
icebp
mov
cmovns
jo
test
inc
cld
ja
add
cmp
pop
cwtl
fdivrs
nop
leave
ret
arpl
pusha
test
testb
add
cmp
pop
scas
leave
pop
nop
jno
pusha
sub
cmp
or
popa
sbb
cmpl
pop
and
mov
loope
mov
inc
xchg
testl
mov
xchg
ss
push
ljmp
int3
add
mov
add
push
add
rclb
fisttpl
xchg
scas
adc
sub
incl
in
aad
add
std
add
sub
add
mov
movsb
or
enter
add
mov
pushf
lock
add
add
xor
xor
decl
insb
mov
mov
mov
lahf
sub
cld
add
repz
leave
out
add
addr16
cwtl
rclb
insb
fisubs
cmpsl
lds
hlt
jmp
imul
add
into
fists
rcr
mov
ss
xchg
jae
add
mov
inc
addl
and
cmpsb
test
ds
popa
cmp
mov
int3
fsts
ja
icebp
ret
push
lods
add
inc
jo
leave
das
iret
add
jbe
cld
add
lret
clc
popa
pop
mov
int
add
gs
sub
or
lea
add
cs
xchg
mov
fmull
xchg
ds
add
aad
xor
push
clc
xorb
pop
fists
jmp
and
dec
mov
mov
or
ss
add
mov
js
add
mov
add
lahf
push
mov
dec
mov
call
mov
xchg
fimull
cltd
push
stos
add
lods
and
pop
es
add
sbbb
xor
and
adc
xor
pop
pop
mov
adc
sub
sbb
dec
int
sar
cmp
mov
xchg
inc
loopne
rcrb
push
sbb
js
add
cmp
es
push
mov
mov
push
sbb
lahf
repnz
mov
adc
adc
push
add
cmp
sub
add
int
dec
int3
cmc
rcll
es
push
decb
pop
pop
push
popa
sbb
sbb
imul
rorl
call
add
ljmp
cltd
push
leave
mov
fcmovb
pop
mov
add
sub
hlt
les
mov
int3
mov
cmp
adc
hlt
mov
inc
fadds
and
in
xchg
mov
dec
popa
dec
xchg
dec
sbb
inc
addr16
lret
insl
sub
or
outsb
iret
sbb
jb
lahf
pushf
and
push
mov
fnstsw
pusha
pop
and
push
add
push
cmpsl
clc
call
add
cmp
test
jbe
adc
shlb
cmp
pop
sbb
xorl
add
xchg
testb
rcll
lret
mov
mov
movsl
das
rcll
js
dec
mov
adc
scas
cwtl
pop
pushf
and
mov
add
sub
leave
or
into
mov
or
jp
add
xchg
sbbb
dec
scas
add
cmp
jl
addb
out
std
icebp
nop
dec
mov
repz
loope
in
or
ret
movsb
xor
cmp
stos
jmp
push
push
xchg
cmp
add
out
ja
push
out
and
lret
sbb
flds
movsb
mov
add
jmp
cld
subl
xor
add
je
inc
or
mov
sbb
add
fidivs
cld
push
or
dec
xor
repz
cmp
jne
sub
ficoms
jnp
push
movsl
and
rolb
push
jb
jae
push
sub
pop
pusha
sbb
xor
lea
mov
or
mov
or
mov
ljmp
subb
pcmpeqb
pushf
clc
xchg
cs
xchg
and
sbb
rcrl
and
dec
dec
inc
sub
sahf
pop
aaa
add
and
xchg
jp
mov
pusha
cmpl
inc
fmuls
dec
scas
xchg
add
divl
add
mov
xchg
scas
fisttpl
cli
gs
mov
sub
and
fiaddl
add
repz
addb
rcrb
add
cmpsb
mov
sub
insb
test
into
cli
inc
xor
sbb
jle
inc
dec
aad
fldl
push
sbb
add
sub
jl
add
rclb
int
loope
cwtl
and
add
daa
sub
pop
and
test
int3
mov
mov
sbb
cld
sbbb
or
sub
arpl
outsb
xor
push
lods
mov
dec
lcall
mov
pop
cmp
xchg
loopne
jae
imul
scas
out
pushf
add
sub
ss
push
mov
inc
jg
lcall
lcall
les
or
test
push
idivl
incl
scas
movsl
inc
std
xchg
sbb
fwait
mov
mov
cmp
andb
aad
add
les
xchg
mov
add
push
lods
aaa
adc
aad
inc
dec
mov
test
daa
cmc
jecxz
loopne
iret
dec
xchg
or
aad
mov
notl
inc
lcall
cmpb
xor
in
sbb
loop
mov
and
ds
movsl
push
cwtl
add
xor
out
jne
sbb
adc
scas
mov
mov
stc
mov
jnp
pop
xor
lcall
push
add
xor
loopne
jne
sub
scas
add
out
movsb
pusha
xor
jbe,pn
adc
mov
or
adc
dec
xchg
hlt
and
push
cmp
js
fnstsw
ja
mov
mov
adc
mov
xchg
pop
icebp
sub
cmc
movb
int
or
inc
jg
adcb
je
dec
fsubp
movsb
loope
add
sbb
pop
popf
pop
stos
xor
in
imul
in
call
cmpsl
sub
call
popf
add
and
add
ret
sbb
add
jae
sub
xchg
push
sbb
sub
adc
pop
and
hlt
dec
push
rcl
adc
xor
mov
push
and
mov
mov
dec
in
nop
sub
je
dec
cmp
daa
and
and
adc
jb
inc
dec
ret
dec
inc
dec
lock
pop
xor
hlt
cmpsl
rolb
dec
addb
push
or
outsb
xor
cmpsl
cmp
loop
cli
xsha256
add
sub
sbb
pushf
push
loop
xchg
leave
loopne
and
fsubl
inc
ret
repnz
lods
jb
sub
cmpsl
fs
loop
push
movsb
shrb
rcrl
cs
add
dec
bnd
xchg
cmc
dec
add
mov
push
or
addb
mov
rcll
int
add
daa
mov
xchg
loop
les
outsl
cwtl
jl
cmp
add
imul
or
add
movsb
mov
jp
mov
rcr
push
int3
add
and
fdivr
out
outsl
add
ret
hlt
fsubrp
sub
cwtl
aas
lea
inc
add
pop
add
add
ja
mov
sbb
sbb
xchg
pop
xor
cmp
lret
sbb
lods
pop
jns
movsb
add
jo
pop
call
add
cmp
mov
add
stos
xchg
insb
imul
pop
sub
addl
popf
in
sbb
in
xchg
frstor
ret
sub
add
sbb
inc
pop
sub
pop
adc
adc
jns
in
jnp
ret
outsb
loope
test
in
pop
add
jecxz
ret
in
add
call
shll
sbb
jo
fmull
clc
sub
push
add
in
lret
int3
aaa
hlt
ljmp
mov
decl
jmp
adc
jmp
mov
dec
dec
les
push
ja
rorb
mov
andb
popa
jne
mov
add
lea
and
lcall
js
hlt
mov
xor
xchg
js
repz
movsl
enter
add
adc
adc
sub
jge
ret
lock
mov
rep
add
sbb
mov
addl
add
cltd
sub
dec
xchg
iret
nopl
icebp
and
jg
add
lcall
add
push
push
pop
add
fs
jg
ja
jp
lret
xchg
cmp
push
js
pop
shll
jno
add
adc
sahf
mov
or
ret
adc
pop
mov
cli
gs
cmp
xchg
add
mov
mov
push
and
pusha
bound
mov
scas
pop
add
aam
in
pop
and
adcb
jo
js
push
imull
fldenv
xorb
xchg
push
cmp
xor
add
pop
mov
add
or
push
mov
add
cli
mov
jmp
push
call
addb
mov
testb
nop
out
jae
add
add
and
pop
call
inc
jp
loope
or
rcrb
adc
ljmp
idivl
add
loope
sub
mov
xchg
stos
or
xchg
dec
add
in
arpl
fsubr
inc
mov
pop
sbb
js
aaa
push
pop
pop
add
shr
nop
call
add
mov
add
imul
mov
daa
inc
adc
add
mov
push
mov
addb
lods
rolb
pop
addl
adc
nopl
sub
jns
add
inc
sarb
add
mov
push
mov
rolb
add
sub
push
dec
lds
push
cltd
inc
dec
andb
push
xlat
pusha
je
lods
cmp
add
jno
sub
xlat
icebp
inc
mov
jecxz
push
adc
inc
sbb
sub
or
jb
cli
push
test
ss
jmp
add
sbb
xchg
push
iret
add
loop
sbb
add
xchg
addr16
test
cmp
add
sahf
dec
jmp
lret
mov
mov
mov
mov
fildl
and
add
movb
add
add
stos
cli
rcrl
mov
add
and
testb
out
xlat
mov
loop
adc
lock
add
fucomp
mov
in
pop
mov
imul
das
dec
fnsave
dec
les
inc
cltd
mov
lock
jns
sub
sahf
lods
sub
mov
pushf
sub
mov
lock
in
mov
and
popa
mov
cld
mov
adc
loopne
xor
and
mov
xchg
int3
pop
cli
lret
mov
mov
lock
enter
dec
dec
and
push
pop
push
add
jp
inc
repz
imul
xchg
outsl
add
push
mov
cmpsl
xor
sbb
mov
mov
xor
addr16
add
lods
scas
das
sbb
xchg
enter
mov
imul
push
add
ds
inc
mov
and
xchg
sbb
xor
repnz
faddl
jne
xor
lods
out
pop
in
sbb
add
add
add
repnz
hlt
inc
xchg
loop
add
idivb
iret
push
xchg
sub
bound
add
shll
jno
mov
add
mov
orb
cmpsl
loop
add
xchg
insl
xchg
jg
lahf
mov
shll
dec
jno
ret
pop
push
les
cs
xor
mov
hlt
sbb
jnp
mov
cmp
roll
popa
push
pop
insl
fs
sar
push
test
jmp
lods
sub
add
in
call
das
dec
add
hlt
adc
pop
mov
insl
cmp
aas
sbb
test
cmpsb
jmp
push
shrl
push
jge
sub
test
ljmp
add
gs
test
jo
cmp
icebp
jmp
out
add
loop
mov
es
enter
push
mov
pop
xor
add
out
add
jmp
fwait
nop
aam
js
insb
sub
lahf
or
js
pop
mov
shll
xchg
in
pop
sbb
mov
mov
arpl
pop
push
mov
jnp
movsl
jl
movsb
add
push
xor
xor
add
ss
dec
aas
enter
hlt
lret
mov
shlb
cwtl
cmp
popf
xchg
and
jbe
out
jb
add
insl
ljmp
push
xor
dec
fidivrl
add
push
loop
push
dec
fcoms
cmp
or
aas
jbe
subb
adc
cmp
and
mov
loopne
clc
pop
or
shl
repnz
add
sub
fadds
add
cmp
xchg
dec
aaa
rcll
out
pop
xor
xchg
mov
push
add
xor
addb
xchg
lret
inc
dec
pop
sub
inc
add
ja
popa
add
and
push
mov
and
cmp
pop
or
dec
scas
cld
scas
sub
in
pop
lcall
jle
add
popf
mov
xor
add
jo
mov
add
in
pop
iret
push
push
jo
fiaddl
or
aaa
dec
or
xchg
mov
lcall
and
int
push
jg
orb
mov
lods
dec
jo
inc
xchg
sbb
add
xlat
imul
data16
add
cs
loope
lret
cmp
lcall
mov
es
jo
mov
adc
sub
mov
mov
imul
mov
mov
pop
jg
push
inc
pop
inc
push
pop
sbb
outsb
add
xchg
scas
popa
mov
mov
dec
jne
ds
adcb
inc
add
mov
push
loop
add
or
cwtl
gs
mov
es
nop
dec
insb
ds
xlat
mov
out
call
add
daa
mov
test
movsl
clc
in
in
test
rcll
add
pushf
dec
mov
in
and
clc
cmp
data16
and
ret
ss
pop
xor
xlat
sub
adc
add
rol
jb
xor
jecxz
addr16
jmp
insl
mov
sbb
cmc
in
lods
addl
xchg
pop
divl
jbe
rcrb
sub
stos
pusha
mov
pusha
mov
sbb
push
in
lret
add
je
push
js
rol
pop
das
je
xor
pop
nop
sbb
pusha
data16
add
jbe
pop
or
sub
fadds
sub
daa
std
mov
pusha
loopne
fcomps
fildl
pop
jnp
dec
pop
flds
or
xchg
lret
je
push
sbb
xor
or
xchg
add
dec
mov
mov
mov
add
cmp
cli
add
scas
sbb
arpl
pop
ja
sub
mov
mov
test
andl
sar
add
sub
sbb
mov
and
repnz
add
loop
addr16
rclb
push
ret
imul
cmpsl
inc
xor
jecxz
push
cmp
sbb
push
rolb
dec
inc
mov
std
add
mov
add
fucomip
sti
pushf
rolb
sahf
add
sub
mov
sbb
adc
out
xor
pop
inc
push
cltd
sbb
insb
mov
sub
scas
cld
out
add
sbb
cmpsb
dec
test
stos
mov
cmpsl
mov
add
jmp
es
dec
subb
cmp
stc
outsb
cmp
and
jecxz
pop
lods
rcrl
push
test
fdivrl
add
xchg
out
lock
and
inc
movsb
or
scas
jp
add
cmpsl
sub
mov
int3
clc
mov
mov
bound
push
dec
xchg
or
sub
mov
mov
dec
data16
add
fldenv
add
fidivrl
sbb
jb
and
test
xchg
push
and
mov
mov
sbbl
shlb
cvtps2pd
loopne
or
flds
add
adc
jns
jno
pusha
dec
xlat
add
xchg
loopne
popf
xorb
les
ss
or
pushf
arpl
pop
sbb
js
push
dec
es
movsb
mov
xor
xchg
mov
mov
xor
sbb
mov
or
js
mov
fwait
cmp
hlt
xchg
pop
das
push
mov
inc
add
mov
xchg
call
pop
dec
sbb
xor
or
js
pop
and
fbld
hlt
add
in
push
stc
or
mov
adc
pop
add
add
or
iret
das
xor
jnp
lea
sahf
sbb
mov
and
jg
js
dec
cwtl
or
fs
pusha
mov
cmp
test
xor
je
dec
adc
mov
jae
ja
inc
cmp
xor
shrb
xchg
dec
ret
enter
ret
add
add
dec
shrl
or
test
xor
scas
popa
xor
sub
out
jae
lahf
push
sub
xlat
cld
inc
loope
push
packuswb
add
inc
cld
into
cmc
xlat
push
and
cli
add
insb
cmp
dec
pop
dec
sarl
mov
imul
cltd
sbb
orb
xor
loope
cli
fdiv
xchg
daa
pop
cmp
mov
gs
mov
mov
testl
andb
xchg
xor
push
add
sub
daa
adc
mov
lock
test
ljmp
pop
das
iret
pop
repnz
rolb
sub
pop
cmpb
add
lahf
inc
xor
push
rorb
adc
aam
jmp
mov
add
push
jecxz
and
in
cli
sbb
push
xor
arpl
enter
add
xchg
rcl
jbe
add
push
add
test
pop
pusha
cmp
adcb
in
pop
adc
cltd
xor
or
pop
push
mov
out
mov
dec
ljmp
pop
cmp
js
sbb
je
add
outsb
nop
dec
add
jne
aas
fisubl
pop
pusha
adc
cltd
out
pop
test
push
add
test
mov
xor
scas
add
bound
sbb
xor
jae
inc
inc
loopne
jge
add
xchg
sbb
mov
lds
xchg
xchg
ljmp
loopne
outsl
mul
add
adc
and
fsubrl
jo
add
rclb
adc
aas
incl
inc
testl
add
sbb
sbb
test
gs
pushf
scas
mov
ret
std
mov
cmp
cmp
push
hlt
es
call
pop
or
jecxz
cmp
sbb
xchg
jnp
arpl
outsb
bswap
outsb
xchg
lods
stc
add
or
mov
sub
fs
dec
pop
add
jne
nop
insl
add
dec
pop
fildl
or
adc
pop
add
out
data16
sarb
fwait
aad
in
mov
lret
pusha
test
add
js
xor
xor
pushf
lods
lods
inc
mov
insb
jge
or
sub
mov
add
mov
pusha
sub
mov
loope
pop
mov
in
jns
xchg
dec
cmpxchg
jbe
loopne
movsl
or
push
sub
mov
sbb
or
or
cmp
add
fwait
jl
test
imul
add
call
dec
push
add
add
adc
xchg
xchg
imul
fsubr
add
es
mov
movsl
incl
out
cld
fwait
push
nop
addr16
lahf
jo
add
jle
add
and
cli
and
add
mulb
mov
loopne
inc
fbld
ret
jb
orl
add
inc
mov
push
bound
cwtl
pop
xchg
push
xor
dec
pusha
dec
rolb
sub
hlt
testb
jl
ret
mov
and
add
xchg
lahf
jl
sahf
daa
lods
jno
rcrb
rclb
inc
enter
es
xor
and
cld
dec
pop
xor
outsl
shr
fwait
sahf
jle
jp
xchg
mov
jmp
pop
jg
xchg
getsec
xchg
test
sbbb
scas
jnp
mov
dec
pop
dec
sbb
lret
lods
enter
jb
mov
mov
pusha
pop
xor
sbbl
and
add
mov
mov
dec
scas
sti
fldcw
add
ja
cmp
dec
jo
les
fmull
in
adc
fiadds
and
cmpsb
mov
mov
jo
inc
loopne
data16
cmp
popa
jl
cli
add
xchg
mov
lret
aam
dec
or
incl
and
sti
hlt
mov
pop
cmc
mov
pusha
popf
ret
repz
fldcw
dec
or
js
xor
leave
lds
sbb
dec
mov
iret
sub
inc
ljmp
xchg
fdivrl
or
loopne,pn
nop
js
add
inc
xor
insb
sbb
mov
sbb
cmp
push
jno
pop
add
iret
lock
xchg
popa
js
cmpsl
sub
sbb
clc
pop
mov
push
es
adc
sbb
add
mov
les
add
popf
mov
outsl
fwait
mov
add
adc
repnz
rcrb
pop
sbbb
aad
push
xor
push
daa
mov
je
add
sbb
enter
add
aaa
into
ret
ljmp
filds
fdivl
jne
ret
js
and
jo
inc
push
sbb
dec
ficoml
shrl
xchg
in
cltd
add
movsl
xchg
cli
cwtl
and
add
mov
in
cmp
and
das
test
incb
leave
hlt
shlb
mov
outsb
add
inc
push
cmc
cmp
sub
jl
popa
lcall
mov
ljmp
call
cwtl
cld
or
ficoml
add
imul
pop
xchg
adcl
sbb
mov
add
dec
adc
jle
ljmp
pop
cmp
mulb
popa
sarb
sbb
fildll
push
add
jbe
mov
pop
add
push
sub
add
push
pop
push
lcall
mov
in
fyl2xp1
xchg
and
sbb
leave
pop
test
mov
out
fldenv
or
adc
add
sub
in
push
call
add
clc
sbb
ljmp
add
push
add
mov
call
add
imul
mov
adc
cmp
and
sub
js
test
or
repnz
flds
mov
lcall
aaa
mov
sbb
cmp
add
xchg
imul
jb
add
loopne
fstpt
ret
fldl
sbb
add
popf
jae
bound
call
jb
mov
sub
mov
mov
dec
pop
add
sarl
test
fisttpl
and
cmpb
rorb
pop
outsl
popf
xchg
cmp
in
roll
nop
pop
roll
xlat
aad
sti
mov
ret
lret
dec
cmpsl
les
jne
movsb
les
xchg
loopne
add
and
pushw
adc
sahf
fsubl
icebp
jo
icebp
and
sub
aad
fmull
add
push
into
mov
inc
pop
add
fistpl
lea
mov
jo
mov
nop
es
adc
das
sahf
orb
adc
jbe
xchg
mov
add
lahf
inc
inc
ja
pop
inc
add
pop
pop
adc
inc
mov
jnp
mov
cmp
ss
mov
aad
push
jp
push
inc
add
pop
insl
dec
add
adc
and
and
sub
sbb
cmp
addr16
push
cmp
jge
fiadds
pop
nop
fwait
adc
outsb
mov
cmp
cwtl
push
sub
jmp
adc
add
dec
mov
je
out
or
xor
lcall
cmc
js
sbb
dec
das
movsl
loopne
pushf
cld
adcb
mov
rcll
adc
jbe
mov
pusha
push
cltd
std
lcall
and
mov
mov
in
and
pop
cs
xor
mov
jg
and
add
mov
andl
xor
adc
inc
add
cmpsb
pop
aad
shl
popf
or
add
stc
pop
dec
xor
test
pop
add
mov
mov
add
pop
fsqrt
call
xlat
test
sti
dec
in
cmc
daa
add
pop
sub
add
jnp
int
imul
imul
scas
es
rcrb
pop
add
int
adc
and
fstps
adc
push
sbb
nop
xchg
mov
jl
add
test
or
loopne
sub
and
mov
cltd
out
add
push
mov
mov
pop
rcrb
add
mov
rclb
and
jp
inc
aaa
ljmp
push
and
sbb
sub
fstpl
stos
add
dec
mov
ljmp
mov
sbb
test
adcl
jne
imul
into
push
outsl
jecxz
jl
rcll
adc
cmp
pop
sub
out
adc
xchg
negl
add
mov
inc
sbb
add
mov
ja
pop
push
or
popf
cmp
xchg
add
shlb
mov
lcall
lahf
mov
pop
push
hlt
push
inc
adc
pop
imul
sbb
data16
inc
cmp
dec
cmp
les
enter
pop
jge
js
xor
add
cmpsb
inc
lock
adc
dec
loop
add
inc
push
insb
dec
lods
inc
stos
jge
and
lea
xchg
gs
xchg
add
jge
shrl
cld
out
add
shl
xchg
adc
xor
fdivr
cmp
cli
jo
xor
mov
lea
pop
pop
pop
insl
ss
adc
rcrl
and
push
and
sbb
dec
ds
insb
sub
jge
add
mov
or
add
mov
clc
inc
add
mov
fs
and
pop
mov
add
pop
clc
faddl
movsb
nop
testl
insl
dec
repnz
push
xchg
sahf
pop
in
out
mov
mov
jno
mov
scas
push
leave
mov
jg
or
adc
scas
mov
add
jl
pop
xor
add
sub
std
pop
lock
adc
hlt
push
ret
shr
mov
cmp
pop
rcr
cmp
ja
adc
ffree
rorb
jno
shrl
push
adc
stc
fdivrs
decl
sbb
push
pusha
test
mov
std
pusha
add
movsl
and
fs
pop
jnp
out
pop
and
push
pop
or
je
add
xchg
mov
insb
pop
fadds
lds
imul
fcmovnbe
loope
movsl
sub
or
cmpsl
stos
or
inc
test
cmp
add
dec
sub
cmp
pop
push
xor
jmp
add
push
mov
xlat
mov
jp
cltd
test
pop
jo
pusha
loopne
mov
inc
and
sub
pop
mov
addb
adc
pop
ret
movsb
pusha
adc
andb
mov
mov
mov
les
ret
sub
push
and
add
outsb
stos
out
add
pop
ja
add
xorl
mov
js
xor
dec
enter
sbb
xchg
insb
xor
hlt
scas
repz
aam
lcall
ret
push
sub
pop
lock
mov
and
test
lret
pop
sbb
and
cmp
sbb
push
faddl
mov
test
lret
cwtl
add
cmp
jmp
add
call
mov
mov
idivb
andl
jle
fadd
cmp
aaa
mov
into
inc
stc
or
add
fwait
movsb
cli
insb
popl
adc
in
push
cld
pop
int3
rorb
add
daa
imul
push
sub
mov
fcmovu
das
mov
js
shl
es
mov
add
iret
jge
cmpb
dec
push
stos
xchg
repz
lret
mov
fildl
and
or
fdiv
inc
arpl
pop
adc
lea
das
test
pop
incb
out
addr16
inc
inc
cld
fsubrs
add
dec
popa
mov
add
cld
or
push
cmpl
and
aaa
or
sub
js
mov
push
shl
inc
inc
mov
push
sub
aaa
pop
pop
aam
pop
movsb
inc
add
or
mov
push
in
test
add
pop
fucom
add
fwait
sub
pop
int
les
xor
ljmp
sahf
fadds
mov
add
or
fistl
and
fdivs
in
add
neg
int
mov
pushl
pop
cs
inc
push
icebp
scas
push
cmp
cmpsl
dec
jmp
mov
cmc
mov
mov
add
rcr
roll
shll
insl
xor
mov
add
pop
rcrb
bnd
inc
sub
mov
les
repnz
push
in
adc
insb
and
jo
das
jo
dec
or
cmp
xchg
lock
test
lods
mov
mov
loope
div
loopne
gs
fistps
inc
adc
jg
into
adc
insb
popa
cmp
test
in
shl
cmp
jecxz
aaa
sahf
loopne
popf
fwait
rcll
add
mulb
dec
mov
aad
mov
into
and
mov
jb
or
adc
clc
mov
leave
subl
add
xchg
mov
inc
cmp
adc
or
push
pop
dec
cli
and
lret
out
jecxz
cli
jo
inc
pop
push
push
in
push
ds
or
mov
clc
dec
das
loope
jmp
sbb
dec
push
pop
repz
push
or
loopne
mov
bound
aam
push
add
aas
inc
incl
shrb
movsl
inc
add
test
xchg
push
mov
negb
int
add
xchg
push
dec
movsl
popf
push
pop
in
add
repnz
and
dec
xor
clc
pop
add
mov
jle
mov
jno
cwtl
movsb
mov
cmp
les
das
xlat
aam
sub
push
call
xchg
jbe
add
dec
lcall
out
cmp
pop
sbb
adc
push
call
pinsrw
in
add
stos
push
push
js
in
add
xchg
mov
loop
test
mov
addl
sub
dec
push
jns
aaa
insb
inc
adcl
filds
and
or
mov
sub
sahf
ja
repnz
push
imul
test
add
in
rorb
pushf
arpl
subl
add
add
mov
lds
dec
es
insl
push
push
scas
sub
push
into
add
stc
adc
js
mov
iret
and
and
outsl
add
xor
sub
faddl
out
pop
jmp
add
push
hlt
loopne
mov
xchg
and
hlt
jns
add
ret
enter
pop
mov
and
mull
mov
xchg
jae
insb
push
flds
testb
mov
xor
cmp
scas
sbbb
push
mov
xchg
jg
add
aas
insb
inc
xchg
push
cmc
movsb
ss
add
pop
xchg
mov
test
and
pushf
incb
pushf
rolb
mov
adcb
aad
push
call
cld
add
mov
test
add
pop
cmp
jns
clc
ss
adc
and
mov
add
inc
inc
cmpsl
dec
cmpxchg
sbbl
shrb
add
daa
inc
sti
mov
test
nop
subb
jo
aaa
les
jl
xor
add
movsb
mov
outsl
xchg
cwtl
mov
fistpll
xchg
or
xchg
and
add
loope
repz
cmp
sbb
mov
adc
sti
add
jno
in
dec
xchg
les
mov
cwtl
dec
dec
jle,pt
pop
adc
pop
mov
or
int
lock
lock
cmp
mov
add
sbb
or
sub
push
mov
adc
es
xchg
repz
xor
cmpsl
inc
in
movsb
xchg
adc
movb
cmp
aam
add
mov
test
push
push
loope
sahf
rcrb
popf
cmpsb
add
ret
xchg
push
cmp
call
push
mov
daa
testb
outsl
push
repnz
jmp
sub
mov
nop
fdivl
adc
inc
dec
testb
pop
inc
fcomp
jae
aaa
sub
cmpsb
scas
xor
inc
and
and
lret
in
mov
rorb
dec
xor
mov
push
push
call
and
inc
push
imul
inc
cmp
xchg
fbstp
mov
jp
sbb
je
add
and
cwtl
add
push
inc
in
ja
ret
jecxz
lock
mov
inc
daa
xor
add
gs
sub
cwtl
or
and
mov
loopne
push
js
test
add
adc
push
in
imul
stos
dec
out
lea
sahf
cwtl
lock
rcrb
mov
cmp
add
into
aas
push
andb
add
je
fs
push
inc
jb
adc
cmp
aad
jmp
dec
add
add
cltd
out
adc
mov
lods
fsubs
add
jno
xlat
les
jecxz
push
cmp
in
gs
orb
pop
add
fwait
xchg
test
fldl
pop
clc
int3
movsl
or
dec
rcll
adc
bound
xor
mov
xlat
or
pop
movsl
inc
mov
sbb
lret
insb
dec
popa
sarl
or
push
rdseed
push
add
push
mov
loopne
out
mov
ror
add
mov
in
mov
adcb
out
inc
in
push
fmul
loopne
fidivl
lock
dec
jecxz,pn
cmp
mov
pusha
xor
test
and
int3
add
arpl
pop
cltd
stos
fisttpll
mov
adc
fidivs
xchg
mov
cmp
and
sbb
shrl
pop
cld
inc
pop
add
nop
push
adc
aas
shr
xchg
sbb
sub
outsb
mov
inc
cmc
inc
enter
add
repz
pop
fbld
pusha
pushf
xor
dec
mov
pop
inc
mov
add
imul
jae
sub
xchg
mov
ljmp
ficoml
adc
popf
mov
xchg
inc
jl
enter
js
add
lea
xchg
add
push
mov
and
xor
rolb
clc
jns
aam
mov
xor
inc
js
addr16
jo
jp
nop
dec
mov
jp
push
jno
f2xm1
jae
dec
add
dec
decl
fmul
test
adc
push
call
mov
aam
cltd
es
outsb
xor
pop
sbb
lods
pop
add
clc
enter
mov
pusha
push
or
mov
push
push
push
pusha
aad
roll
outsl
ret
mov
adcl
pcmpeqw
mov
dec
add
fnstsw
lahf
ds
pop
jge
cmpsl
xchg
test
dec
add
xorb
rdmsr
cmpsb
add
int3
pop
adc
add
inc
xlat
cmp
dec
push
dec
push
push
repz
adc
inc
mov
add
and
loopne
or
ret
xor
pushf
out
mov
fucomi
xor
ret
enter
popa
das
lcall
xchg
mov
dec
es
inc
loope
adc
jge
stos
icebp
stos
push
jbe
lods
cmp
out
imul
inc
mov
fs
push
subb
imul
testb
xchg
testl
or
cmpb
push
outsb
cmp
andb
xor
mov
adc
mov
sub
xchg
dec
push
add
sbb
jnp
add
mov
addb
push
frstor
test
stos
fwait
test
pop
cmpsb
test
mov
iret
pop
mov
incb
inc
inc
les
pop
jmp
outsb
cmp
adc
popa
ret
fcmovnbe
in
in
mov
add
dec
popf
int3
mov
stos
and
mov
push
scas
cmpb
int
inc
pavgb
mov
sbb
cmpsb
cmp
add
insb
outsb
cli
in
cmp
int3
pop
push
andl
sti
gs
and
lcall
sub
ss
leave
add
jnp
sub
sahf
pop
sti
pusha
push
and
push
cmp
dec
push
mov
movsb
ret
mov
push
and
hlt
fcoml
cmp
cli
xchg
icebp
mov
int3
addr16
or
call
push
imul
mov
fimuls
mov
mov
sbb
mov
push
aaa
icebp
andl
or
in
add
jg
popa
add
bound
sahf
pop
repnz
lahf
shll
nop
inc
rol
push
sbb
test
or
sbb
add
ret
add
jge
sbb
add
rcrb
push
fmull
xor
mov
sub
add
and
and
fnstsw
nop
push
sbb
cmc
clc
lahf
std
std
xor
pop
test
hlt
push
andl
sub
loopne
pop
in
add
push
xchg
xchg
ljmp
fs
mov
xor
or
sbb
pop
mov
outsb
dec
js
sarb
or
testb
mov
mov
add
sub
xlat
add
pop
sub
fsts
push
scas
cmpsl
mov
sbb
cmpsb
pop
mov
xor
jae
mov
add
sub
inc
add
adc
push
pop
pop
mov
add
int3
ja
cmp
adc
mov
fdivs
mov
int
loopne
push
fwait
rcll
xchg
or
out
stos
push
out
hlt
push
mov
adc
add
sub
movsl
mov
or
mov
dec
mov
push
or
jno
pusha
insb
add
lea
sbb
push
push
push
daa
dec
in
out
push
test
jl
call
stc
pushf
xor
jp
pusha
bound
add
sti
ss
add
int
xor
pop
packuswb
fsubrl
out
or
jmp
mov
fldenv
or
mulb
push
push
cmp
or
push
mov
sbb
add
call
pop
iret
push
add
pop
cmp
enter
xchg
out
aad
les
and
mov
mov
sbb
sub
aaa
out
sbb
jo
adc
add
fiadds
into
outsl
cmp
jle
pop
test
push
mov
sbb
je
add
sbb
roll
repz
sbb
scas
das
call
and
add
adc
mov
repnz
js
jge
sub
sahf
mov
lret
ja
mov
mov
flds
pusha
mov
mov
mov
xchg
add
mov
inc
and
test
jno
xor
enter
add
in
jne
xor
add
or
jge
push
xorb
lods
cmp
fldenv
aam
pop
add
sbb
adc
inc
jmp
fwait
jle
xchg
ja
mov
inc
sahf
sbb
insl
inc
fcompl
add
xchg
inc
mov
sub
aam
jno
adc
inc
or
hlt
push
std
mov
addr16
adc
je
dec
or
add
inc
xchg
mov
mov
js
mov
inc
or
and
inc
push
dec
testl
mov
or
outsl
xchg
inc
mov
jbe
pop
jno
add
shll
jmp
call
push
and
dec
outsl
mov
testb
add
or
cmp
pop
and
push
mov
rolb
cltd
adc
cmp
mov
lahf
and
hlt
inc
mov
lods
out
cmp
fs
js
sbb
sbb
mov
cwtl
insb
test
rolb
xchg
std
push
fmuls
or
ljmp
push
jo
push
sub
stos
pop
mov
adc
push
imul
test
aad
testl
jno
fidivl
push
pop
pop
mov
jecxz
add
int
sbb
pop
and
cmc
add
pop
test
and
hlt
ffree
aam
fisubl
addb
pop
mov
xchg
inc
sub
add
mov
pop
fists
add
or
add
cli
pusha
mov
into
inc
pop
inc
cmpl
arpl
sub
add
sbb
icebp
adc
add
mulb
dec
inc
into
sbb
add
jl
sbb
mov
sbb
ds
mov
scas
adc
mov
repnz
mov
and
xor
adc
stos
xor
sbb
inc
addr16
jo
aas
outsl
pop
ss
sub
cld
sarb
lock
sbb
gs
das
adc
cmp
shlb
and
or
cmpsb
sahf
push
sbb
push
subb
pop
mov
add
rol
mov
ss
js
add
jno
mov
scas
add
dec
orb
iret
les
mov
out
rolb
int
sbb
movsl
out
pop
imul
xchg
mov
pusha
addr16
pop
cltd
sub
xchg
dec
rcrb
add
iret
pop
xor
inc
inc
add
in
xor
jge
xchg
and
pop
adc
stos
lret
pop
rcr
test
cli
outsb
dec
ja
sti
outsl
add
mov
enter
sbb
adc
imul
fstl
mov
push
or
dec
add
jae
sbb
cmp
mov
mov
xor
xor
fcmovu
add
pmulhw
ret
push
add
into
add
jl
jns
cwtl
xchg
add
mov
xor
comiss
adc
add
mov
hlt
dec
inc
add
mov
out
xchg
push
call
dec
push
in
ss
sbb
sbb
jae
jbe
cmc
cpuid
jge
test
loope
xchg
test
add
fdivp
mov
sbb
sub
pop
jo
leave
inc
mov
adc
addl
out
popa
daa
mov
je
add
shll
aas
jmp
leave
jmp
mul
sbb
cmpsl
push
sbb
ret
ljmp
add
dec
push
aaa
in
andb
or
in
out
cmp
sbb
arpl
js
movsl
rol
add
xor
mov
loopnew
repnz
ficoml
divb
les
pushf
rolb
pop
sub
mov
lret
jnp
dec
cli
push
into
adc
addr16
pop
and
sbb
aaa
push
push
inc
sbb
add
adc
xchg
mov
pushf
scas
or
mov
pop
rolb
out
push
add
xor
stos
xchg
in
mov
add
sub
pop
dec
shlb
add
cmp
scas
add
cli
insb
je
adc
ljmp
ds
push
sub
adc
xor
mov
pop
mov
dec
and
fdivs
and
inc
pop
mov
dec
fsts
pop
or
cmp
dec
rcrb
push
shl
movsl
add
repz
out
aam
out
add
mov
mov
out
jl
aas
faddl
aam
test
sub
add
clc
movsl
xchg
mov
add
jmp
cmp
addb
sub
sbb
or
shll
ret
cmp
push
std
icebp
lds
rcl
xchg
test
sbb
mov
push
insl
repnz
roll
push
int
sarb
inc
jl
dec
popf
cmpsb
add
cmp
loope
clc
and
dec
into
pop
dec
sti
push
and
cmp
xorb
das
or
mov
push
lcall
jb
push
and
aas
test
sub
inc
xlat
test
inc
in
fwait
lock
sahf
pop
and
push
jae
in
cmp
rolb
push
push
into
movsb
cmp
jecxz
mov
add
sbb
inc
mov
add
ficomps
mov
imul
inc
adc
add
fwait
je
jl
mov
repnz
out
in
push
movsl
mov
test
cmp
pop
lret
jo
dec
pop
mov
ss
push
inc
dec
mov
jbe
lahf
fisubl
lds
mov
out
push
xlat
ds
cmc
add
jp
fiadds
jge
icebp
outsb
add
jbe
pcmpeqb
cmp
aas
adcb
mov
add
xchg
mov
add
push
stos
xchg
push
shll
add
shrb
xor
mov
js
or
xchg
push
movsl
rol
outsb
pop
sahf
inc
shrb
mov
mov
mov
mov
mov
pop
mov
call
ljmp
cmp
jbe
jp
or
add
out
xchg
ss
lock
lock
add
mov
add
and
in
in
mov
aas
test
add
inc
data16
pop
cmpsl
add
push
and
sub
aad
cltd
pusha
pop
pop
gs
or
add
es
mov
mov
jbe
or
cwtl
movsb
lret
sbb
adc
gs
arpl
inc
cmpsb
loopne
test
add
dec
mov
cmp
enter
aas
adc
fs
sti
rep
in
inc
fsubl
add
sub
int3
xor
pop
jle
leave
add
pop
bound
dec
sbb
push
inc
cmp
nop
es
sbb
inc
pop
data16
mov
push
sbb
sub
aad
adc
jno
mov
add
and
jmp
jns
inc
sub
cltd
fs
jbe,pn
clc
xor
scas
and
andb
jbe
add
dec
imul
jge
and
call
xchg
add
xchg
or
add
mov
push
mov
mov
xor
cmp
scas
shl
fs
mov
add
jp
out
push
imul
js
add
sub
add
add
dec
or
icebp
jl
mov
push
ja
jne
add
xor
iret
into
sbb
adc
mov
incl
call
cs
add
mov
imul
loope
test
nop
loop
arpl
add
push
inc
inc
fdivrp
sbb
arpl
cltd
push
adc
pop
lods
ret
add
dec
mov
and
shl
xlat
ret
fidivrl
divb
add
aam
hlt
fldt
jae
mov
pop
adc
inc
nop
and
aad
pop
jmp
fiadds
sub
mov
jo
lock
mov
add
mov
stos
add
or
xchg
add
imul
add
test
cmp
icebp
sub
add
lahf
mov
sbb
cmc
dec
loop
int3
sub
adc
jnp
adc
punpcklwd
shlb
dec
fmull
mov
add
fwait
icebp
push
fstpl
jb
add
pop
xchg
mov
mov
add
adc
inc
jge
jae
xor
jg
cmp
jnp
push
les
enter
lea
sbb
aaa
xchg
orb
adcl
or
and
stc
cmp
add
dec
mov
xchg
sub
cmp
add
std
push
aas
mov
xchg
inc
jo
jmp
mov
neg
add
jno
push
rclb
mov
aad
push
adc
clc
push
cmp
cmp
imul
lods
sarl
orb
or
dec
fldl
adc
jb
add
sbb
jo
add
daa
push
mov
xchg
cmpsb
icebp
insl
hlt
int3
or
lock
call
lahf
adc
or
add
push
mov
mov
lret
scas
xor
xor
in
incl
mov
add
pop
fsubs
add
pop
add
enter
mov
xchg
aad
negb
mov
faddl
dec
mov
adc
cmpsb
cmp
rorb
add
pop
clc
xchg
add
in
inc
add
cmp
pop
add
sub
pop
mov
js
in
out
add
add
mov
popa
ret
shr
enter
jae
pop
int3
call
daa
pushf
xchg
fiadds
nop
jnp
into
jecxz
xor
push
add
loope
add
fsubrs
dec
lods
nop
jo
dec
push
add
jp
add
cmp
or
cltd
add
dec
cmp
push
add
lret
mov
and
push
nop
scas
dec
add
ja
pop
add
xor
fidivrl
jle
rcl
add
inc
imulb
mov
and
clc
fwait
divl
popa
aaa
pusha
or
clc
jns
cmc
add
daa
jne
and
cmpsb
cmpsl
xor
jae
add
scas
test
xchg
pop
jo
xchg
cwtl
cmp
jnp
inc
and
jne
jnp
add
sub
into
sub
ds
cmp
fmull
cltd
jmp
outsl
pusha
sbb
inc
out
add
mov
add
dec
pop
sbb
pop
sti
add
lret
mov
mov
add
push
in
mov
cmp
cmp
je
pop
jle
add
push
mov
dec
and
rol
adcl
movsl
lgs
out
popf
pop
aad
jp
aam
mov
push
or
push
incl
rcpps
sbb
int3
mov
lret
and
scas
mov
cltd
add
adc
add
ja
add
jns
testl
pusha
pop
cmp
adc
push
cld
xchg
imul
or
in
add
and
lods
call
jge
cld
xlat
icebp
test
orl
jp
add
push
sub
add
lea
cmc
in
add
fldenv
sbb
push
mov
ds
es
mov
imul
xchg
movsb
and
pushf
xor
add
scas
fwait
dec
inc
ret
jne
add
adc
adc
mov
add
pusha
push
mov
sbb
dec
pop
les
push
aas
cmp
xor
popa
push
call
add
fneni(8087
scas
jnp
add
mov
addl
ret
mov
insl
inc
flds
das
sub
dec
dec
ret
or
add
xchg
fsubl
shrb
add
push
mov
dec
dec
add
mov
pop
lret
sbbl
dec
mov
sbb
dec
mov
shll
jl
inc
test
jb
and
insb
in
pop
inc
cmp
push
cmp
xor
fiaddl
scas
jae
jno
and
movb
stos
jle
mov
xchg
and
pop
fwait
add
xlat
pop
mov
push
xchg
leave
addr16
cmpb
inc
sarl
fadds
xor
fmull
lcall
cmp
pop
nop
out
orb
xchg
mov
jo
add
pop
mov
or
pop
fstps
adc
dec
xor
aas
cmc
and
dec
adcl
pop
daa
sub
loope
jae
sbb
mov
sub
pop
push
cmp
jno
xchg
loopne
imul
movsb
xchg
push
out
icebp
rol
push
aas
add
jmp
pop
pop
adc
fsub
popl
inc
mov
mov
and
mov
push
add
inc
push
xchg
add
repz
jecxz
mov
or
dec
add
out
cmc
insb
or
add
stos
xor
mov
sub
push
loop
daa
add
adc
push
loope
in
stos
cmp
xchg
sbb
lock
test
jle
femms
into
and
dec
dec
addb
jnp
test
jae
mov
not
add
mov
das
dec
shlb
movsl
mov
negl
scas
dec
loop
inc
jbe
mov
jb
enter
adcl
scas
push
pop
cmp
sarb
ljmp
ret
sbb
xor
cmp
push
adc
ja
inc
xchg
inc
inc
jnp
and
mov
lods
sbbb
add
and
add
push
sbb
add
cmp
js
sbb
ja
xchg
push
add
and
push
inc
pop
xor
add
adc
jae
dec
into
add
testb
inc
jo
add
fwait
push
add
test
or
loopne
ljmp
xchg
movsl
rcr
out
mov
cmp
add
imul
mov
or
add
inc
pop
xor
int
sub
lahf
insb
add
adc
daa
adc
sbb
nop
lods
ror
fwait
out
cmpsb
ss
les
and
push
aas
das
adc
dec
leave
dec
add
xlat
sbb
movsl
insb
add
cmp
test
loopne
not
or
shlb
aad
fisubrs
add
push
push
and
dec
add
lret
mov
out
dec
add
dec
std
cld
pop
loopne
imul
cmp
sbb
test
mov
imul
mov
adc
and
add
stos
jp
decb
mov
dec
popl
jl
adc
add
mov
mov
jae
movsb
movb
mov
jmp
pop
aas
lods
jl
inc
lock
xchg
hlt
psubb
shlb
sbb
dec
test
inc
in
popf
jle
add
jge
leave
or
pop
and
sbb
sbb
sysret
es
je
push
out
aaa
test
fildl
test
pop
out
add
clc
call
or
aad
in
call
mov
fimuls
cmp
sub
add
lahf
outsl
inc
fwait
dec
add
mov
push
call
cs
or
leave
push
rcrl
jnp
pop
insb
inc
sbb
rolb
or
jge
iret
pusha
test
jne
inc
inc
fadd
in
fistps
add
loope
mov
add
cmp
ja
out
insb
pop
ficoml
and
je
add
leave
cld
movsb
clc
icebp
push
pop
add
int3
adc
add
dec
add
scas
incb
sub
push
and
adcl
cmp
mov
hlt
mov
pop
iret
stos
adc
adc
sbb
hlt
add
movsb
cmp
and
adc
out
test
lods
jge
add
mov
popf
add
lock
or
lods
xorb
push
mov
insl
roll
jge
cmp
jbe
jns
call
push
add
dec
jmp
mov
push
scas
stos
or
out
cmc
das
ret
xor
loopne
adc
or
inc
jbe
adc
loop
pop
hlt
sub
faddl
std
fwait
ljmp
imul
ficoml
add
ss
fdiv
sbbb
cmp
cltd
aad
pop
in
or
jp
rolb
pop
sbbb
xchg
bswap
in
popa
loopne
daa
and
sbb
lret
pushf
shrb
out
xchg
imul
je
and
jl
mov
fstpl
sarb
adc
add
bound
and
adc
fistpll
ss
int3
add
jae
adc
scas
xchg
sbb
mov
js
jl
pop
push
sahf
pop
test
pop
lcall
jno
mov
int3
dec
xor
dec
stos
lea
adc
daa
mov
insb
or
leave
das
sbbb
cmp
mov
pop
add
fldenv
ret
iret
add
adc
pusha
stos
clc
dec
repnz
sbb
push
hlt
inc
sbb
add
clc
lcall
mov
mov
pop
shr
popf
inc
fstpl
add
mov
xor
orb
pop
pusha
add
inc
dec
pop
arpl
sbb
pop
add
xchg
jecxz
add
pop
pushf
pop
mov
loopne
sbb
add
fs
push
xchg
pushl
lret
adc
iret
clc
sub
cmp
les
dec
fwait
cmp
xlat
mov
or
pop
testl
lds
pop
push
jge
popa
pcmpeqd
xor
rclb
sbb
pop
scas
dec
jmp
cmp
mov
lahf
mull
in
xchg
sbb
inc
shrb
in
inc
data16
or
add
dec
arpl
js
push
lret
cmc
xchg
jno
pop
pop
jne
push
and
into
inc
loopne
sub
xchg
dec
dec
xchg
je
sti
and
ljmp
push
mov
movl
dec
mov
jg
inc
jge
dec
dec
or
popf
aam
bound
inc
out
sub
lods
sbb
jnp
xchg
movsb
sub
fisttpll
pop
xor
add
jae
xchg
sbbb
pop
icebp
sbb
add
lods
add
imul
sar
jns
movb
xor
shl
mov
dec
lods
sti
lock
add
je
dec
es
add
enter
into
xchg
add
jmp
and
sbb
or
push
icebp
mov
call
push
xor
cs
add
pop
inc
lock
mov
lods
xorb
inc
xlat
ja
xchg
add
rcl
or
lea
in
add
addl
popf
mov
rcr
fldenv
pop
inc
or
nop
cli
jg
dec
hlt
sub
pop
loop
cmpsl
dec
xchg
adc
xchg
fbstp
push
add
adc
ret
inc
test
scas
sti
lods
xchg
imul
ret
xchg
jo
aaa
outsb
add
push
xlat
fmull
mov
imul
arpl
pop
and
mov
jge
xchg
sbbb
mov
or
ret
inc
lret
add
or
aad
hlt
mov
rclb
cmpsb
add
das
ljmp
xchg
mov
adc
cli
imul
das
push
inc
fldl
mov
out
out
inc
xor
sub
iret
out
add
pop
lahf
flds
loope
cltd
out
sub
lods
aad
orb
std
cmp
add
orb
xchg
lds
loop
sub
xchg
sub
add
mov
adc
add
mov
addb
adc
or
add
sbb
rorb
cs
cltd
jb
stos
add
xlat
add
lret
mov
add
mov
dec
add
stos
push
add
pusha
pop
out
sbb
ss
and
sub
stos
in
lcall
dec
jp
jmp
adc
in
or
add
ljmp
add
aaa
hlt
push
das
jne
add
outsl
js
test
xchg
dec
jb
ss
push
inc
sub
insl
sti
pop
adc
push
add
es
xlat
enter
in
lods
xor
pop
imul
cmpl
in
rolb
mov
shl
push
sub
iret
lcall
popl
outsb
out
adc
cmp
negb
or
cmpsl
ss
push
insb
pop
faddl
mov
ljmp
xchg
jae
stc
in
jl
push
enter
add
ljmp
cmp
cmc
aam
pop
jno
push
xor
sub
fsubs
in
xor
aas
add
in
pop
pop
pop
sbb
fwait
rclb
add
iret
fcomip
scas
jns
lea
pop
sub
push
mov
sub
setl
pop
andb
fnstcw
add
outsb
imul
ljmp
enter
add
hlt
loope
mov
pusha
xor
cmc
mov
enter
cmp
push
cld
xchg
push
lahf
pop
jae
cs
mov
ret
mov
fisttpll
in
andl
add
gs
add
les
pusha
pop
lock
xchg
scas
stos
sub
pop
movswl
jge
inc
sbb
leave
fisttpl
testb
loopne
xor
add
pop
cltd
movsb
or
mov
jle
inc
cld
pop
int
sbb
jo
xchg
fistps
jbe
add
add
nop
scas
loope,pn
call
cmc
push
mov
std
les
xor
pop
inc
mov
mov
loope
cmp
or
mov
loop
sbb
pop
scas
lahf
dec
sub
fsubrp
repnz
or
arpl
ds
mov
add
add
pop
neg
jno
cs
enter
pop
mov
lcall
pop
cmp
push
int3
push
cmpsb
jae
std
xorl
fdivs
testl
mov
outsl
clc
packsswb
cs
mov
mov
or
add
sub
add
inc
inc
mov
pop
add
jp
cwtl
ja
call
mov
inc
testb
ds
jecxz
faddl
inc
stc
test
hlt
aad
xchg
add
addr16
scas
add
push
sbb
scas
add
maxps
cmp
adcb
add
xchg
mov
push
add
sub
fsubs
and
mov
mov
pop
sbb
sbb
in
fidivl
xor
sbbl
inc
mov
shrl
cltd
pop
mov
xchg
fcompl
add
add
rcll
add
out
or
add
stos
loope
jb
xlat
add
mov
add
mov
popf
add
movb
jae
scas
sbb
testb
sahf
pop
add
aaa
pop
mov
inc
icebp
add
cmp
inc
and
push
es
and
divb
in
data16
jmp
mov
out
xchg
cld
add
pop
testl
add
repz
adc
fdivrl
mov
fidivrs
mov
mov
scas
aad
cmp
and
xor
cmp
mov
mov
pusha
jge
and
add
mov
or
mov
inc
test
insl
mov
fisubs
mov
test
lea
js
jecxz
mov
inc
jg
mov
repnz
add
fldenv
inc
cmc
or
cmp
in
fsubr
mov
in
inc
or
push
test
mov
adc
cmp
dec
out
push
imul
xchg
jg
js
cmp
cmp
movsl
dec
push
test
and
adc
aam
push
or
cmp
outsb
pop
push
cmp
xchg
lret
add
jge
mov
test
mov
fildll
cmp
daa
push
add
push
sub
xchg
adc
pop
adc
clc
jmp
cmpl
inc
sub
and
inc
in
cmpsb
add
sbb
add
add
jle
cwtl
inc
mov
lahf
insl
add
call
xor
daa
sti
call
mov
jl
jg
rorb
push
or
push
or
mov
xor
iret
add
std
mov
mov
adc
mov
hlt
or
or
xchg
shlb
pusha
pop
pop
xor
jecxz
shlb
cmp
mov
inc
sahf
jo
cltd
sbb
cli
add
pusha
les
nop
sahf
cmp
inc
xchg
pop
xchg
pusha
int3
mov
push
xchg
mov
ret
push
xchg
pop
jmp
add
std
mov
popf
lds
data16
push
add
lret
out
mov
mov
inc
outsb
add
cmpsl
mov
fsubrl
addr16
fiaddl
ret
ja
ds
frstor
int
lcall
iret
sbb
xor
and
outsl
aaa
ds
jmp
sti
mov
setnp
or
pop
pop
daa
addb
push
and
enter
push
paddd
mov
jno
cmp
or
add
out
xchg
ss
add
adc
aaa
push
test
sub
stc
rorb
cltd
data16
cmpsl
add
ss
mov
cmc
sbb
ffreep
push
repz
dec
sub
mov
mov
mov
orl
inc
call
add
idivl
test
xor
add
mov
add
mov
pop
mov
rcrl
fwait
add
test
clc
add
ficoml
cs
decb
or
pop
mov
jecxz
fwait
cmp
movsl
sub
or
or
das
xor
and
aaa
sbb
sbb
mov
mov
sbb
add
adc
xor
xchg
xchg
pop
out
cmc
lds
sbb
call
jo
add
jg
push
xor
push
sbb
sbb
push
inc
cmpsb
add
icebp
mov
jg
test
xchg
add
sbb
fildl
push
adc
outsb
repz
aam
pop
and
cmp
add
sub
add
sarl
in
sub
or
add
ja
dec
and
push
sub
xchg
arpl
mov
int
and
lods
cmp
push
out
push
cs
repz
mov
ja
mov
mov
dec
push
dec
pop
aad
mov
mov
add
inc
pop
out
xchg
je
fs
mov
and
cli
enter
inc
add
fsubrl
sbb
jecxz
clc
xchg
femms
add
xor
jmp
and
es
in
aad
out
xchg
pop
push
and
in
stos
xchg
mov
sbb
jecxz
les
fsubs
scas
cmp
push
insl
cmpsl
and
sbb
lret
mov
push
jle
add
idivl
add
ret
xor
and
adc
and
push
sbb
xlat
dec
adc
in
jne
add
aaa
cmpsb
sub
xor
sub
pop
stos
sbb
mov
cwtl
add
pop
enter
add
add
adcl
es
and
mov
mov
cmpsl
fcoml
arpl
fisubrs
loopne
pop
cli
lock
jp
popa
mov
add
divb
fwait
in
cwtl
fadds
pusha
or
lahf
lock
add
and
bound
cmp
add
clc
jae
test
jp
sbb
jno
call
loopne
xchg
loope
mov
stos
arpl
ret
addl
movsb
xlat
sar
rcrb
add
push
mov
xchg
pop
cwtl
stos
add
jp
xchg
lods
insb
shrb
add
xchg
cmp
roll
pop
test
jmp
and
popa
pop
gs
neg
lret
int3
ret
or
dec
push
add
inc
fdivl
adc
out
cld
mov
and
and
inc
lcall
cmp
ljmp
pusha
jecxz
daa
or
dec
inc
jl
xorl
add
push
push
in
pop
mov
pop
hlt
add
stos
fcmovnbe
add
addb
test
adc
push
int
sbb
inc
rorb
out
scas
pop
enter
push
mov
ret
and
dec
rolb
hlt
imul
dec
xor
out
push
jmp
outsl
add
shl
push
ret
pop
andl
mov
cmpsb
mov
push
lock
xor
mov
xor
xor
sub
ret
int
dec
mov
mov
test
push
add
gs
lcall
mov
cmpsb
in
sbb
add
sbb
or
pusha
jg
add
pop
mov
mov
pop
mov
xchg
insl
sub
fs
fwait
and
incb
cld
andl
cwtl
cltd
popf
mov
call
lcall
jno
mov
or
mov
rorl
je
sub
add
sbb
push
es
cmp
sahf
xchg
movsb
mov
rcrb
jne
fdivrs
les
test
sahf
mov
push
or
pop
push
push
jmp
pop
insb
dec
call
and
repnz
cmp
add
or
aas
sub
jmp
cmove
out
add
and
jmp
add
jo
mov
inc
mov
mov
pop
adc
lret
aas
lcall
mov
or
psubw
push
inc
push
add
mov
pop
inc
or
jo
or
loopne
cmpsl
add
lret
xor
daa
loope
mov
add
lea
mov
adc
test
cltd
std
cmp
stos
xchg
inc
or
mov
add
jg
pop
clc
gs
add
cmc
cmp
sbb
je
or
pop
add
mov
or
adc
add
sbb
cmp
in
in
stos
nop
sbb
fstl
ds
jb
mov
imul
mov
jns
xchg
adc
lahf
adc
iret
adc
adcl
push
scas
es
add
stc
add
test
sub
xor
push
inc
sub
testb
add
dec
sbb
add
push
cmp
add
clc
movsl
mov
sarb
pushf
push
divb
mov
arpl
stc
push
xor
xor
adc
rcrb
or
pop
repz
int3
imul
aam
pop
inc
add
mov
inc
sub
adc
cmc
sar
rolb
mov
call
mov
jge
cmp
mov
adc
add
mov
add
movsl
sub
push
lds
xchg
xorb
cmpsl
inc
jp
jnp
inc
xchg
cli
das
and
pop
decl
cmp
xor
add
adc
cmp
inc
int
mov
jg
in
or
imulb
adc
es
movsb
jle
jl
cmp
sbb
add
xchg
lods
inc
fdivs
fsubrl
add
incl
mov
inc
and
arpl
adc
popa
add
push
idiv
push
dec
ficoms
and
orb
xlat
adc
and
mov
cld
jmp
dec
add
das
out
add
aaa
in
dec
jmp
jno
add
jmp
insl
rorb
jl
xchg
aas
iret
jnp
mov
in
dec
out
aam
or
mov
rorb
jp
in
icebp
std
jle
inc
dec
cmp
les
out
mov
adc
gs
and
xor
lds
sub
test
iret
xchg
mov
mov
in
repz
mov
mov
sub
cld
shrb
sub
and
cmpb
aam
scas
mov
mov
sbb
pop
cli
cmp
adc
mov
dec
adc
cmp
xchg
stos
add
not
and
cmp
add
and
in
mov
jl
add
adc
fwait
and
nop
je
divb
stos
std
clc
inc
pop
add
cmp
cmp
enter
fdivrl
cld
jge
cmp
add
loop
add
jge
repz
push
lahf
mov
sub
not
das
sbbb
stos
add
push
add
std
xchg
add
xchg
cmp
inc
push
jae
xor
push
movsb
fisttpl
add
sbb
mov
insb
pop
adc
pop
push
repz
js
add
add
out
out
xchg
pushf
cmpsl
and
push
cmp
mov
adc
mov
xchg
adc
in
xchg
std
xchg
xor
fldt
pop
es
add
jno
mov
in
pop
and
cs
sbb
add
push
jb
nop
mov
in
mov
inc
lods
push
imul
imul
insb
out
lods
pop
movsl
aas
mov
mov
add
and
add
cwtl
mov
into
ficoml
dec
lods
and
or
sub
push
andl
jle
insb
push
mov
sbb
add
int3
sbb
ficoml
or
test
add
and
subl
daa
jl
push
push
out
jae
rolb
pop
test
addr16
sub
pop
sub
out
xchg
lock
test
fs
ret
add
daa
mov
pop
xor
add
insl
pop
push
je
cld
popf
js
push
stc
push
fdiv
xor
adc
aad
inc
lahf
shrb
sbb
pop
jae
cmp
sbb
push
enter
push
xor
dec
lock
popa
sahf
insb
lcall
add
mov
xchg
pop
orb
pop
jl
jo
mov
xor
or
lret
sbb
sub
loope
xchg
mov
and
inc
xchg
jns
pop
leave
add
mov
rol
fiadds
pushf
cld
mov
aam
push
xor
xchg
add
out
sbb
lcall
pop
icebp
fistl
jle
arpl
clc
jp
lret
add
stos
mov
cld
mov
add
add
sbb
cli
in
sbb
add
cmp
adc
mov
lcall
lock
add
add
outsb
mov
push
or
xchg
cmp
movsb
cli
pop
popa
andl
lods
pusha
aad
inc
sub
cmpl
stc
push
lods
out
in
mov
add
mov
jmp
clc
sarb
mov
mov
jbe
fucom
sub
sub
cmp
ret
mov
xchg
jmp
jno
jne
add
xor
push
push
mov
add
sub
scas
clc
xchg
push
call
aad
daa
cmp
imul
mov
add
xchg
ss
and
stc
add
mov
inc
add
xchg
int3
sbb
cli
out
push
pop
xor
add
ljmp
popa
orb
idivb
sub
xchg
jle
adc
pushf
push
and
push
jb
jle
add
inc
insl
sub
lret
jg
mov
data16
push
or
inc
push
aam
sbb
xchg
pop
xorl
addr16
xchg
pop
mov
xor
add
mov
das
loopne
lods
popa
xchg
daa
add
stos
push
fistpll
roll
and
pop
mov
add
fcom
popa
fiadds
cmp
jno
loopne
mov
sbb
stos
adc
dec
or
add
xor
pop
jne
repnz
add
mov
pop
setle
inc
pushf
xorl
lea
negl
nop
or
xor
movsb
add
std
pop
xor
add
mov
cmp
addl
sbb
cld
pop
imul
push
add
xlat
test
aaa
loopne
pusha
pop
jb
add
lcall
cmp
out
adc
icebp
jae
jg
xor
int3
xor
and
loope
add
ja
add
jle
incb
jo
shlb
pop
sub
sbb
iret
lret
mov
mov
popf
xchg
push
clc
cmp
jmp
cmpsl
cs
mov
xchg
add
les
adc
or
lods
jecxz
mov
or
mov
cmp
ljmp
adc
out
shll
cmp
xchg
mov
mov
push
shlb
pop
inc
or
enter
add
mov
mov
xchg
popf
mov
popa
mov
fstl
lret
sub
or
in
sbb
jno
cmpb
xor
xor
lock
add
add
add
iret
out
sub
push
add
mov
stos
cs
out
add
xor
or
cwtl
push
mov
push
fnstcw
repz
test
dec
pop
push
mov
hlt
fidivl
xchg
bnd
insb
shl
add
jle
inc
jg
and
pop
loopne
sbb
push
add
addr16
mov
mov
and
dec
inc
fldl
std
sbbl
add
repnz
popf
iret
cmp
test
fstpt
xor
pusha
hlt
popa
add
stos
push
xlat
in
stos
inc
dec
add
xchg
es
fstp
xor
mov
inc
icebp
xchg
fdivrl
sbb
test
outsl
jmp
lods
and
les
insl
add
pop
inc
mov
lret
lahf
xchg
fstl
int3
mov
add
addl
cwtl
sub
dec
repz
cmp
xchg
sbb
scas
mov
inc
cltd
add
and
out
push
dec
add
add
loop
sbb
xor
aam
sbb
cmp
xchg
sub
enter
ljmp
push
sbb
fdivr
cmpsb
mov
loopne
in
cmp
cmp
pusha
mov
and
xor
mov
push
cld
stos
dec
js
add
negb
les
dec
rorb
mov
fcoms
cmpsl
call
xchg
pusha
test
outsl
add
dec
aas
aam
subl
adc
insb
xchg
mov
ret
stos
sbb
outsl
add
aad
test
jne
add
jno
push
add
inc
pop
repnz
mov
mov
test
push
push
aaa
or
filds
pusha
or
pop
mov
sbb
add
pop
lahf
shl
cmp
or
dec
or
loopne
add
shlb
xlat
push
sbb
xchg
loope
inc
cmp
mov
int
adc
mov
xchg
test
add
inc
aad
sbb
sti
xor
add
pop
lock
dec
add
and
and
aam
pusha
add
add
les
adc
loopne
cmc
add
xchg
mov
out
cwtl
mov
add
loope
mov
and
nop
out
and
arpl
stc
cs
inc
add
mov
daa
push
push
xchg
ret
ret
xchg
arpl
inc
shr
cmpsb
stos
add
in
jp
mov
push
or
sbb
pop
adc
add
clc
sar
cmp
dec
cmp
incb
xchg
imul
inc
sub
sbb
ja
or
push
fsubs
inc
mull
pop
jae
inc
jnp
inc
cli
jg
xchg
repnz
adc
or
arpl
add
cld
or
add
movsl
sarl
add
in
dec
add
add
xor
mov
push
enter
and
sub
movsb
shl
lods
es
add
mov
cld
lds
shlb
cld
add
pushf
iret
outsb
mov
lea
sub
scas
inc
xchg
push
ret
xchg
mov
mov
aam
les
add
cmp
hlt
sar
fldl
inc
cmp
push
clc
cmp
mov
xor
shr
orb
popf
loopne
mov
jnp
cld
cmp
or
ret
pop
cmpsb
mov
xor
out
push
loop
add
cs
add
notl
add
sbb
in
dec
decb
jecxz
mov
add
mov
adc
ss
repz
ds
pop
clc
add
and
add
push
stos
in
jecxz
fwait
cs
pop
pop
mull
push
add
enter
add
loope
mov
add
call
or
ret
popa
adc
into
jp
add
stos
or
add
out
sahf
stc
lods
insb
idivb
xchg
xchg
lcall
mov
cwtl
add
mov
test
adc
jmp
aad
or
adc
add
andl
cmp
mov
add
hlt
adc
add
xchg
fisubl
inc
sub
shlb
sub
xor
lea
in
arpl
lret
repnz
lock
insl
lods
loopne
push
sbb
pop
xor
sbb
dec
sarb
mov
or
jecxz
push
lods
cwtl
push
fstpl
out
in
nop
test
sub
and
push
outsb
and
and
addr16
adc
push
xchg
jns
jnp
mov
loopne
movsb
jb
in
or
test
xchg
ljmp
addr16
sahf
outsb
movsl
sbb
pop
jne
aad
fs
js
negl
nop
out
bound
add
add
ja
nop
cmp
add
out
fwait
lods
add
cmpsl
adc
or
push
cmpps
rclb
lret
xchg
pop
es
rolb
sub
mov
cld
orb
sar
hlt
lret
add
in
push
add
dec
mov
and
fucomp
add
cltd
pop
xchg
jb
test
repz
sub
xor
mov
xchg
inc
mov
es
xor
out
pop
shr
and
mov
cwtl
repz
inc
xor
lret
mov
adcb
out
movsb
leave
dec
dec
sub
pushf
jno
dec
ret
sub
sbb
push
add
enter
cmpsl
fsubs
jb
into
outsl
adc
dec
push
loopne
sbb
repnz
bound
data16
dec
or
test
push
add
mov
mov
fisttpl
push
stc
roll
and
lret
mov
cmp
mov
scas
or
lahf
pusha
cmp
test
lret
lock
es
sbbb
mov
cmp
adc
push
stc
jb
jbe,pt
adc
dec
pop
mov
sub
int3
add
das
shrl
xor
ljmp
push
lret
int3
push
sbb
arpl
add
mov
add
scas
stc
sti
dec
push
in
add
movsb
cmpsl
out
sub
clc
xor
xor
xchg
lcall
clc
add
jae
add
push
jno
int
pandn
lret
inc
cli
pop
movsl
xchg
shr
icebp
sahf
pop
adc
repnz
push
cmp
fs
dec
xor
dec
incl
push
stc
faddl
jne
add
mov
fnstsw
roll
pop
movsb
jns
cltd
nop
loopne
fmuls
add
js
addb
setle
rcrb
cmp
lahf
lods
loopne
scas
sub
lret
inc
sbb
loopne
pop
push
addb
enter
aas
adc
xchg
cmp
pop
xor
xchg
push
or
insb
add
sub
stc
add
adc
sub
loopne
jl
and
xchg
add
push
mov
xor
xrelease
mov
push
cmp
dec
mov
int
and
add
lock
fadd
push
clc
imul
sbb
dec
lea
add
outsb
lds
adc
and
dec
sbb
pop
mov
push
loop
inc
push
or
xchg
ret
sbb
lcall
dec
add
or
leave
xchg
add
orl
imul
dec
icebp
loopne
cmpsb
and
cmp
test
cmpsl
into
ror
xchg
stos
mov
pushf
pop
js
daa
cmp
add
sub
fdivrs
fisubs
and
bound
add
add
js
add
int
out
sub
or
xchg
loope
in
inc
dec
mov
sbbb
insb
jo
daa
push
pop
add
mov
xlat
add
cs
in
mov
test
andb
pop
scas
test
mov
add
mov
jnp
es
xor
lods
jo
pop
add
sub
add
lea
movb
test
dec
cmp
lock
test
pushf
mov
dec
addr16
sub
cmp
out
lock
ljmp
in
ss
movsb
sbbl
repnz
and
add
jns
loope
cmp
push
iret
mov
outsl
adc
add
adc
leave
loopne
add
jae
outsb
jecxz
in
inc
add
cwtl
rorb
push
and
cli
pop
adc
inc
sbb
or
je
lret
sub
int3
es
jl
or
js
add
fucomp
and
std
jl
or
bound
dec
mov
xchg
popf
add
enter
xchg
movl
gs
in
add
dec
mov
loope
or
push
lods
xlat
add
adc
and
in
popf
pop
daa
ror
push
add
shrb
ret
incl
xchg
outsb
mov
xchg
lock
stc
add
cmpsl
ljmp
in
add
shlb
jp
mov
shrb
ret
xchg
ja
push
pop
outsb
ret
hlt
pushf
and
add
jne
mov
subl
push
sti
jmp
scas
hlt
or
sarb
adc
in
out
add
jnp
pop
cmpsl
inc
pop
pop
mov
adc
loopne
shl
enter
jg
aam
add
jnp
push
insb
adc
mov
add
push
adc
cwtl
loop
add
adc
mov
adc
cmpsb
push
pop
push
add
cmp
decb
ret
mov
push
fildll
adcb
pusha
popf
stos
lcall
or
jmp
ljmp
push
scas
nop
xchg
add
inc
out
pop
insb
pop
pop
add
int3
pop
cmp
leave
in
les
mov
repnz
ret
fidivrl
add
leave
push
adcb
out
add
movsl
sbb
sub
shl
xor
lret
push
lret
hlt
mov
inc
in
aaa
add
cmp
out
lods
rcr
or
or
out
loopne
and
or
rolb
add
mov
mov
add
mov
out
push
std
cld
stc
lds
test
add
scas
sbbl
pop
rolb
mov
stos
or
inc
out
into
push
mov
scas
cld
in
bound
dec
ljmp
insb
mov
fbld
xlat
and
in
call
or
sbb
xorb
xor
bound
aad
nop
movsb
add
call
je
dec
dec
or
and
jno
push
or
sti
cld
mov
repnz
popf
xchg
jle
and
mov
add
test
jp
inc
xchg
mov
loopne
in
pushf
movsl
int
cld
or
mov
inc
rcr
lods
rclb
inc
mov
incb
ret
push
pop
aad
push
lock
add
xlat
or
add
xor
xchg
push
pushf
stc
add
mov
xchg
call
pop
jge
iret
cmpsl
loope
sbb
jl
and
cwtl
xchg
dec
add
stc
jo
cmpsl
jp
xchg
add
jbe
movsl
add
daa
xor
add
sbb
and
or
and
clc
dec
adc
hlt
add
movsb
aam
rdmsr
shlb
mov
test
les
andb
cld
add
xor
sti
movsl
add
nop
lcall
test
add
shlb
and
call
sub
add
daa
sub
pop
inc
add
mov
cmp
jge
mov
sar
cltd
mov
fadds
sbb
std
or
fildl
push
push
outsl
lahf
mov
sarb
scas
jmp
mov
mov
dec
js
in
loopne
jno
add
push
or
cmc
xchg
dec
push
arpl
loop
lret
jb
in
xchg
sub
stc
dec
inc
mov
mov
lcall
push
add
orb
mov
fsts
cmpsl
jae
sahf
rcrl
cmp
mov
xchg
subl
inc
add
jl
pop
mov
dec
pop
jp
lods
jo
sub
incb
sbb
add
gs
mov
inc
add
int3
cmp
fwait
add
mov
inc
cmp
pop
xor
stos
das
mov
mov
add
pop
jg
cmp
adc
jae
fs
dec
lds
js
rcrb
sbb
clc
ljmp
rolb
push
lret
add
mov
jecxz
loopne
mov
inc
cwtl
sbbb
adc
and
mov
mov
pusha
push
sbb
repz
outsl
aam
icebp
es
add
mov
loope
xchg
sbb
jns
cmpsl
imul
and
nop
int3
lods
insb
out
sbb
imul
pop
jle
and
push
test
sub
mov
and
add
mov
imul
mov
call
addl
sub
dec
jae
aas
or
mov
sub
insl
pusha
add
mov
mov
jno
and
adc
not
in
mov
add
out
add
push
ret
xchg
dec
aad
leave
movsl
lahf
ja
ljmp
sbb
cld
jns
clc
add
arpl
mov
test
jnp,pn
add
ljmp
js
jnp
or
sbb
test
fildl
add
jp
jbe
inc
mov
das
ja
rclb
out
add
leave
jp
jo
cltd
pop
xchg
sub
sahf
add
adc
add
mov
pop
add
fwait
jo
loopne
add
mov
xchg
js
or
sahf
adc
jp
and
xor
incl
mov
popa
fwait
cld
add
sbb
push
rolb
repnz
ret
in
imul
add
sbbl
flds
cmpsl
ljmp
add
xor
mov
and
jp
cmpsl
sti
xor
std
add
pop
inc
or
into
fidivs
jl
pop
or
into
add
push
add
or
out
mov
scas
sub
daa
and
jmp
lea
dec
inc
add
jg
incl
bound
in
insb
mov
xchg
mov
add
mov
mov
xchg
lock
cmp
cwtl
fistps
in
adc
outsb
dec
int3
jns
dec
mov
cmp
fnsaves
repz
or
jns
jl
scas
ret
sarl
rolb
add
lods
loope
pop
cld
pop
inc
mov
add
adc
fdivr
xor
mov
loopne
es
xchg
adc
jmp
mov
sbbl
xor
jns
lret
or
dec
mov
mov
push
ja
outsl
push
jns
test
inc
mov
cmpsb
cmp
movb
and
add
push
jge
cmp
pop
fsubp
mov
add
lods
sub
lock
add
mov
rol
add
push
xchg
cmpsl
lret
mov
add
jl
adcl
orl
and
fwait
sbb
add
push
add
imul
test
inc
stos
mov
add
xchg
pop
pop
leave
andb
sub
mov
loopne
js
ds
pop
dec
mov
popa
cmp
dec
orl
add
fadds
pop
pusha
add
loope
xchg
mov
std
xor
adc
cmpsb
dec
testb
loopne
and
outsl
inc
adc
rolb
ficomps
enter
xor
cmp
lock
inc
sahf
sbb
fldl
ret
loopne
jmp
add
pop
mov
add
or
xor
or
lock
add
mov
inc
add
movsb
pop
into
adc
add
mov
inc
jg
cmp
into
push
xchg
jecxz
mov
outsb
add
cmp
test
add
add
les
xor
lea
adc
sub
mov
jle
add
lods
xor
xor
loop
push
xor
in
std
cmp
push
jecxz
xor
out
mov
iret
or
into
push
and
cmc
filds
dec
fcoms
pop
stc
jmp
or
cmp
out
mov
wrmsr
mov
lret
pushl
pop
add
adc
jmp
sub
outsb
add
bound
popl
lods
lea
call
daa
cwtl
mov
int3
fsubs
aas
sbb
stos
rclb
adc
adcb
fcoms
es
ret
negb
add
add
inc
enter
add
add
sti
cltd
and
jle
and
add
xchg
fstl
mov
mov
fdivr
jp
adc
add
jo
std
loopne
push
cmp
arpl
or
mov
sub
pop
or
loopne
lea
pop
cld
xor
inc
and
pusha
cwtl
and
iret
mov
jmp
cmpsl
cmp
lock
xchg
jecxz
divw
mov
push
mov
faddl
icebp
mov
rcrb
mov
mov
cltd
sbb
or
gs
repz
sub
pop
dec
pop
je
call
dec
repz
repnz
imul
fisttpl
or
inc
jbe
push
cli
pop
add
mov
sub
out
js
loop
int
add
push
and
in
xchg
mov
adc
faddl
sbb
inc
addr16
push
dec
adc
rcrb
unpckhps
push
lds
push
jp
cmp
add
cs
rolb
repnz
fadds
pusha
adcb
shl
data16
dec
pop
cmp
ficoml
leave
jo
push
gs
inc
lods
inc
add
fldt
ret
sbb
andl
lret
push
mov
pop
jp
cmp
mov
movl
push
add
sub
dec
hlt
dec
ja
pop
sub
les
jmp
pop
cmc
fcoms
dec
rcr
fsubl
push
nop
cmp
sub
adc
std
push
hlt
add
fbstp
mov
cld
outsb
or
js
cmpsb
push
rolb
cmp
cmc
pop
sbb
dec
push
test
pop
push
pop
xchg
sub
in
add
jnp
dec
xchg
pop
in
or
add
insb
fcoms
jnp
insl
push
cmp
das
and
xor
mull
or
pop
and
loopne
in
subb
ficoml
sub
testb
sarb
dec
cld
mov
xchg
add
jp
sbb
pop
jge
add
mov
cmp
int3
cmpsb
add
xor
inc
add
ss
sub
mov
or
pop
into
rolb
or
mov
jmp
add
cli
bound
add
adc
and
stos
xchg
cmp
es
js,pt
jae
xor
add
das
lods
sbb
aas
sarb
jbe
and
ja
sbb
andb
push
sub
dec
pop
test
xchg
add
movsl
fs
pushl
mov
push
add
lods
sahf
jbe
aaa
pusha
int3
xchg
xchg
sar
add
ljmp
inc
adc
jo
xchg
ja
add
mov
idivl
add
inc
sbb
sub
adc
cs
scas
lods
dec
add
sbb
fcom
jo
sbb
mov
mov
arpl
loope
add
lock
ret
out
pop
iret
flds
stc
cwtl
orl
movsl
add
sbb
mov
or
in
leave
add
fisubl
imul
in
testl
test
cmpsl
jl
cmp
and
xchg
adc
sbb
add
fstps
repnz
mov
push
mov
and
xchg
dec
test
int3
add
push
mov
ja
push
pop
xchg
int
out
ds
add
jl,pn
stc
jae
jecxz
sub
aad
cmp
or
dec
add
xlat
lods
test
cld
mov
movsb
mov
xlat
add
xor
cli
and
cmp
jno
nop
push
data16
add
or
addr16
decb
push
add
into
inc
sbb
aad
xchg
jo
inc
add
popf
mov
adc
pop
pop
adc
xor
fs
pop
imul
jecxz
push
pop
push
add
clc
in
jae
dec
mov
jnp
int3
adc
rcrl
push
imul
xor
mov
inc
mov
cli
pop
fs
cmp
insb
mov
inc
xchg
test
test
popa
add
jno
dec
cli
test
xor
in
pop
add
xor
cli
add
fwait
xchg
pushf
sbb
sbb
dec
mov
lock
outsb
call
add
iret
xor
lds
sub
pusha
add
xchg
les
dec
repz
nop
push
add
cmp
daa
sarb
pusha
jmp
sysexit
in
push
jo
fiadds
out
aas
or
pusha
js
imul
cmp
in
sbb
jo
pop
es
fs
andb
add
rep
add
ja
movsl
add
jge
add
cmpsb
cmc
inc
fistpl
push
jl
ficomps
inc
add
pop
jae
cmp
dec
xor
jne
jno
mov
jb
dec
inc
push
fsubrp
xchg
pusha
jp
mov
sbb
rol
daa
push
xor
lds
mov
xor
test
adc
add
clc
mov
dec
test
add
test
mov
ja
add
sub
add
xchg
cs
and
nop
cmp
subl
loop
push
jge
inc
add
rolb
ljmp
hlt
cli
in
in
rolb
adc
lock
push
aam
cmp
dec
stos
xor
sub
lcall
or
lret
out
add
add
andl
mov
out
hlt
mov
jno
call
mov
je
push
add
ss
lock
add
jo
in
inc
xlat
sub
hlt
nop
pop
ja
add
aaa
aad
lea
lods
js
pop
adc
and
adc
or
subl
cli
push
add
out
mov
or
mov
daa
adc
push
or
add
add
xchg
fisubrs
pop
testl
add
push
push
rcl
stos
lret
jno
add
sub
pop
cmp
movsb
popf
mov
add
and
push
jmp
out
xlat
add
add
test
or
and
cwtl
jle
dec
mov
dec
adc
fidivs
add
jno
cwtl
cld
and
scas
fsubs
mov
add
aas
roll
pop
subl
xchg
lret
and
and
or
pop
mov
cmpl
lea
rcrb
arpl
fsubl
jnp
jbe
jo
add
inc
inc
sbb
mov
cli
and
and
push
test
add
daa
pop
adc
out
iret
sbb
scas
pop
int3
xchg
in
sub
mov
and
imul
nop
add
mov
jge
add
cmp
mov
aaa
jmp
scas
mov
lods
lahf
scas
cmp
sbb
add
fcmovnu
push
push
sub
or
fs
popa
mov
mov
sub
pop
and
mov
dec
pop
and
jne
clc
mov
add
sbb
cmpsb
cld
cli
xchg
or
pop
imulb
mov
clc
jae
mov
std
fistl
mov
jmp
adc
or
shlb
xor
loope
lods
aam
and
jle
out
lret
arpl
or
repnz
and
movsb
andb
rol
mov
leave
inc
cmp
lds
stos
add
inc
orb
inc
lods
cmp
pushf
dec
add
ror
cmp
xrelease
in
dec
lods
fldl
xchg
inc
negb
jl
dec
sub
add
scas
and
les
sbb
mov
add
leave
push
adcl
xchg
cmp
sub
out
pop
add
cmp
loope
mov
cmp
cwtl
xor
xlat
sub
cmc
into
jns
add
sbb
mov
sbb
add
sub
jge
lock
add
jle
or
das
clc
dec
add
loope
jnp
sahf
int3
sbb
pop
and
cmp
and
fldt
add
push
mov
xor
loop
cmp
test
jae
loope
in
imul
daa
addr16
lods
mov
push
insb
jge
xchg
and
inc
xchg
mov
lods
push
jge
shlb
push
test
push
adc
mov
movsl
enter
pop
add
mov
out
mov
and
jle
fisttps
add
sbbl
sbb
pushf
lock
push
test
shl
lcall
push
rcrb
push
xchg
xchg
nop
xchg
sahf
hlt
jp
iret
jb
cltd
jno
inc
andl
inc
and
dec
shll
jmp
mov
sub
mov
cli
add
aaa
aam
add
add
movsl
js
cmp
jl,pn
test
xchg
pushl
push
adc
stc
mov
insb
outsb
shll
sub
mov
jle
insl
fmuls
dec
jmp
int3
sub
je
jns
add
or
or
jp
pop
addb
lea
sbb
pop
leave
in
test
fstpt
inc
push
adc
push
dec
fs
dec
pop
xor
cmp
std
shll
add
inc
fcmovnb
cmc
lock
test
loope
mov
div
es
sub
sub
mov
scas
stos
testb
add
sbb
jnp
add
fldl
into
loopne
bound
lods
jl
or
outsb
add
cmp
xchg
add
fnstsw
add
push
sbb
pop
pusha
dec
mov
sbb
ror
jns
icebp
cmp
adc
hlt
xchg
nop
out
add
push
mov
pushf
push
mov
xor
jnp
jmp
repnz
pavgb
and
or
lock
fisttps
xlat
jg
add
push
sbb
cwtl
mov
push
cmp
jo
mov
xchg
xchg
faddl
shll
clc
or
inc
in
not
lret
cmpsl
outsl
add
addl
add
sahf
push
mov
lock
mov
or
notb
xor
inc
dec
inc
gs
jbe
sub
bound
sbb
in
mov
int
inc
dec
or
add
and
push
pop
outsb
push
add
cmpsl
adc
adcl
mov
cmp
jg
add
push
movsl
add
and
test
mov
repnz
sub
sbb
cmp
sub
sbb
stos
gs
ret
dec
dec
sbb
dec
pusha
shrb
pop
push
push
add
mov
shr
popa
insl
fcoms
sbb
and
push
sub
xchg
push
or
sub
sbb
andb
mov
pop
out
imul
fcomi
inc
loop
push
push
fnstsw
adc
push
adc
lcall
or
xor
hlt
push
jns
jbe
pop
inc
sub
fiadds
sub
loop
pushf
shrl
push
out
xchg
out
push
xchg
and
or
and
pop
add
insl
aaa
cmpsl
pusha
add
and
into
xchg
or
pop
or
imul
inc
mov
dec
pop
test
imul
mov
aas
rcr
jmp
nop
dec
ficomps
scas
dec
xor
stos
add
mov
iret
aas
nop
add
jne
outsb
enter
pop
bound
dec
test
add
add
cwtl
in
cmp
jae
lcall
sub
add
jnp
icebp
adc
pop
cld
sbb
add
dec
cwtl
dec
add
out
ja
cmp
and
sbb
mov
popl
xlat
negb
mov
aad
push
std
add
jnp
loop
push
out
mov
sbb
in
pop
jge
mov
xchg
iret
add
sahf
aad
add
or
idivb
inc
xor
add
lret
or
lcall
sbb
xchg
repz
add
push
sub
or
add
cmp
xchg
jns
inc
test
ret
sahf
mov
cmp
incb
add
mov
call
cmp
sbb
scas
jo
jne
mov
sbb
mov
lds
push
rclb
mov
scas
jno
sbb
pop
inc
xchg
xor
mov
pusha
cmp
je
pusha
pusha
and
dec
mov
mov
shlb
into
jae
cmpsb
addr16
add
xchg
mov
lahf
mov
or
clc
inc
and
data16
testl
rorb
fiaddl
adc
mov
xchg
bound
and
jle
lea
add
dec
lock
mov
mov
enter
add
push
arpl
das
xor
dec
add
mov
lret
sbb
imul
jecxz
dec
dec
addb
aas
fcoml
in
out
cmpsb
push
pop
jp
and
adc
shrb
fnstcw
mov
xorl
stos
imul
lcall
scas
cmp
mov
add
xchg
rorb
test
xchg
iret
push
subb
mov
add
lahf
incl
cmp
add
dec
pop
add
adc
pusha
into
add
or
call
push
sub
add
or
adc
pop
add
aad
xchg
dec
add
sbb
rcl
lcall
sbb
xor
dec
mov
add
mov
rclb
std
xor
loopne
faddl
hlt
add
xchg
xchg
sbb
mov
and
scas
rcrb
in
xor
inc
hlt
xor
loope
push
pop
outsl
fs
sbb
xchg
cwtl
movsl
into
fiadds
cmp
add
in
mov
adc
lock
ficoms
lsl
mov
dec
nop
clc
sub
add
cmp
fnstsw
mov
and
mov
sub
sbb
add
push
xchg
push
mov
fldt
push
add
cmp
imul
sbb
add
loope
jg
pusha
ja
push
push
nop
lods
test
aam
xchg
cmp
adc
add
push
pop
inc
xchg
scas
addr16
fdivr
jmp
gs
test
sub
pop
bound
xchg
inc
loope
sbb
pusha
inc
push
add
sbb
fnstsw
push
cwtl
fwait
cmp
dec
push
mov
lret
pop
jl
add
push
stos
sbb
loope
push
push
xor
xchg
xor
movsl
sub
or
inc
clc
adc
add
cld
and
js
or
add
jle
or
pop
sti
or
add
sub
adcb
test
push
jbe
in
invd
adc
inc
sub
cli
xor
xchg
adc
and
inc
jg
subl
adc
inc
out
lods
lret
je
rclb
add
cli
push
lret
in
cmpb
push
sub
cwtl
mov
enter
and
mov
imul
pop
test
jl
or
mov
addr16
loope
lods
jle
push
cmpsb
call
cmp
lahf
adc
cwtl
and
add
jle
jp
xor
mov
data16
add
xorb
sub
loope
push
xchg
sahf
push
cmp
add
inc
adc
jb
add
push
in
mov
xchg
jp
mov
aaa
js
cmp
push
stos
jne
shll
inc
add
cwtl
loope
jl
pop
mov
push
scas
ja
pop
lods
lods
hlt
xchg
xor
loope
scas
stos
adc
or
mov
in
mov
pushf
call
imul
ss
jp
mov
shll
daa
scas
bound
dec
inc
call
jge
outsb
clc
je
add
insb
jb
jge
sbb
xchg
lock
push
mov
lds
pusha
out
subb
sub
and
add
mov
outsl
movsl
mov
rcrl
cmpb
jmp
mov
add
xor
xchg
adc
xor
insb
testl
sti
cltd
icebp
push
loopne
add
std
outsl
jmp
leave
inc
jb
mov
xor
add
lahf
mov
xor
into
cwtl
dec
sarb
insl
adc
push
jne
call
add
cmp
cmp
aaa
lods
enter
mov
sub
mov
and
adc
bound
add
je
and
enter
ljmp
jecxz
add
movsl
hlt
arpl
dec
and
insl
push
or
push
cmp
dec
mov
sbb
mov
adc
cld
mov
cmc
mov
push
aas
gs
inc
fists
inc
sub
sub
inc
fs
in
pop
fwait
and
sbb
movsl
or
in
es
xor
sub
and
cltd
mov
sbb
add
push
ret
out
fldl
sbb
loopne
mov
mov
sti
stos
mov
ja
add
repnz
mov
int3
sbb
stos
adc
lret
add
pop
ret
xorl
out
iret
sub
shlb
add
hlt
jbe
pop
mov
js
rolb
pop
sbb
xor
incb
lcall
add
pop
push
aad
lcall
call
pop
mov
leave
xchg
jnp
stos
add
xlat
in
cmp
arpl
leave
mov
addr16
jecxz
xchg
inc
clc
add
mov
fnstenv
adc
lods
mov
jbe
cmpsl
xchg
dec
add
sub
dec
jns
test
les
mov
mov
adc
jb
add
add
scas
popf
insb
loopne
lock
mov
fwait
cmpsb
add
and
int3
scas
xor
aas
fmull
cwtl
and
xor
mov
mov
inc
mov
add
cmp
dec
push
movl
hlt
adc
fwait
test
or
es
push
or
imul
lods
inc
mov
pop
cmp
rcrb
ret
add
mov
dec
add
jp
dec
cli
sar
mov
adc
sbb
add
sbb
fiadds
adc
lahf
cmp
mov
test
jp
ficomps
fmull
mov
sub
or
scas
movb
pop
jg
cmp
mov
jae
mov
arpl
push
and
pop
loope
xchg
adc
loopne
adc
mov
mov
xchg
or
add
cmpsl
ds
add
in
mov
add
adc
stc
loope
ljmp
test
lcall
addr16
bound
mov
rclb
add
lret
stos
std
arpl
xchg
cmpsb
jle
xchg
clc
add
sti
inc
jae
ja
repz
cli
push
add
pop
mov
jb
add
cwtl
or
xchg
dec
push
out
mov
xchg
bound
rorb
add
xchg
inc
xchg
rcrb
inc
add
pop
xor
mov
add
pop
mov
cmp
add
std
xchg
faddl
inc
inc
sarb
adc
scas
out
stc
addr16
paddq
lcall
ss
add
and
shlb
stc
pushf
push
je
dec
mov
cld
daa
js
in
mov
add
and
lock
dec
decb
aad
push
sub
jl
pop
hlt
pop
pop
je
xchg
aad
dec
sbb
mov
shll
xor
push
push
sub
ja
cltd
adc
jae
and
mov
lods
sbb
add
cld
mov
sbb
out
sahf
mov
loope
aas
jns
jecxz
shrb
nop
mov
fwait
ds
sub
addl
push
imul
shrb
sbb
lcall
jge
pushf
stc
inc
shlb
adc
fdivp
cwtl
add
addb
pop
add
dec
test
les
rorb
push
mov
jmp
call
pop
inc
icebp
dec
movsb
ss
in
sub
test
jecxz
jns
aas
xchg
gs
sti
pop
std
mov
add
cmp
iret
call
inc
ret
mov
fistl
pop
xchg
in
sub
testl
or
or
cmp
mov
subl
data16
push
sbb
mov
mov
push
imul
mov
lahf
xchg
xchg
mov
int
in
and
pushf
cmpl
add
and
cmp
dec
scas
adcb
or
inc
mov
add
mov
and
adc
jp
adc
mov
clc
cmp
imul
pop
add
jp
scas
sub
jg
jmp
test
jnp
shll
pop
push
in
sub
xor
add
dec
aam
add
pop
ret
and
add
pop
and
mov
pop
ficompl
lahf
mov
movsl
adc
fstl
sbb
cmp
loopne
add
push
inc
fisubl
sbb
jmp
pop
and
fiadds
movsb
jmp
out
push
pop
jne
cwtl
add
add
out
inc
mull
pop
stc
popa
setbe
mov
out
lcall
cmp
and
inc
or
jo
enter
sbb
sbb
add
js
in
add
rolb
in
jl
add
xor
add
push
bound
inc
hlt
fs
pop
leave
movsb
out
addr16
push
loopne
xchg
sbb
sbb
push
hlt
xor
add
inc
mov
mov
adc
push
enter
mov
imul
mov
sbb
pop
add
enter
shld
sub
cmp
out
outsl
inc
xchg
stos
rcrb
dec
inc
push
pop
mov
sbb
mov
add
push
mov
add
pop
cmp
icebp
mov
hlt
add
out
xor
addr16
add
xchg
lahf
sarl
add
loope
icebp
aam
cwtl
mov
or
fwait
jmp
push
nopl
imul
xor
mov
cltd
and
in
clc
hlt
rol
mov
push
add
daa
les
add
rcrl
arpl
xor
add
and
fdivl
je
add
paddsb
dec
cld
sub
pop
scas
dec
fdivl
call
js
lret
sbb
sahf
add
dec
xor
shl
cmp
add
arpl
push
or
sarl
cmpsb
jmp
mov
sahf
cmpb
fsts
add
arpl
adc
add
test
mov
hlt
jb
push
add
inc
ret
jl
fmuls
arpl
lahf
jecxz
mov
loop
mov
lods
xorb
add
jp
xchg
jb
roll
cwtl
push
mov
imul
jmp
mov
sahf
add
mov
jno
inc
mov
or
jae
push
adc
lods
add
pushf
scas
xlat
popf
xor
clc
xchg
out
sarb
imul
dec
dec
cmpb
test
out
dec
movsl
add
jge
push
std
hlt
lret
ljmp
cmpsb
pop
mov
mov
add
cmp
mov
int
movsb
add
bound
inc
add
pusha
and
ret
mov
sub
add
pop
jns,pn
mov
push
mov
adc
add
sub
ss
fmuls
dec
stc
jbe
xor
push
in
jp
adc
add
enter
jl
movsl
add
lods
test
add
imull
pop
xchg
push
in
push
adcb
rcr
sub
in
push
ficompl
sbb
clc
pop
add
xchg
pop
push
push
shrb
jae
movsl
test
sbb
loopne,pn
roll
push
add
and
jbe
dec
jb
pop
push
out
cmpsl
movsl
dec
add
rol
add
push
jl
stc
cmp
xchg
pop
mov
add
scas
lret
test
inc
out
pop
sahf
lcall
fwait
add
dec
sub
jl
int
or
fnstcw
inc
or
rcrl
inc
push
mov
jp
mov
xchg
fs
ja
shr
mov
neg
lret
sub
fstpl
call
lea
sub
xchg
hlt
loope
and
ret
lret
push
mov
stos
cli
popfw
jo
push
sarl
out
adc
or
inc
inc
xchg
fcomps
jo
cs
cwtl
pop
lahf
aam
xchg
add
push
dec
es
popa
xor
sub
add
leave
pop
data16
sub
sub
inc
icebp
outsl
or
test
cs
add
and
rolb
nop
cmp
dec
cmp
lock
iret
and
add
mov
repnz
mov
mov
inc
add
cmp
imul
call
stos
adc
and
int
add
push
out
mov
cltd
mov
fwait
inc
fimull
add
mov
cmpsb
fcompl
pop
xor
popf
imul
mov
cli
loopne
or
mov
xchg
cld
sbb
test
xchg
imul
push
jae
in
add
mov
repz
loop
add
and
shl
add
les
sub
shrb
in
pop
dec
add
jmp
test
or
std
je
rol
xchg
psubusw
mov
add
add
or
aad
push
adc
int
sbb
fisubl
lock
pop
pop
into
jne
fisttps
jge
insl
test
sbb
and
adc
and
mov
loopne
mov
and
insb
test
cmp
fldt
push
cmp
and
and
mov
adc
dec
xchg
into
xor
popa
sbb
xchg
sub
scas
fsts
mov
dec
outsl
outsl
mov
mov
xor
mov
adc
cmpb
adc
and
outsl
adc
mov
adc
insl
add
sbbl
lret
dec
pop
in
mov
mov
les
cli
mov
bound
ds
fmuls
push
rorb
mov
or
inc
xorb
enter
xor
cmp
adc
adc
pop
lock
mov
and
push
xchg
fcoml
and
bound
xor
adc
dec
adc
xor
cltd
adc
and
cwtl
mov
adc
mov
mov
int3
and
xor
mov
push
adc
xor
ljmp
add
inc
push
test
inc
jecxz
int3
popa
js
jbe
adc
push
lcall
lods
mov
xchg
icebp
push
and
sub
push
bound
and
mov
mov
lods
xor
cs
push
test
push
clts
sahf
mov
dec
sbb
push
push
mov
dec
fmull
jo
sbb
pop
into
pinsrw
jb,pt
rcr
fdivrs
add
push
inc
dec
mov
pop
jp
leave
add
pop
and
pop
mov
xchg
add
push
les
jbe
fnstenv
lds
cmp
push
cltd
sbb
mov
lahf
rorb
adc
bound
jle
ret
in
shlb
mov
mov
jae
push
xlat
jb
push
inc
or
sbbl
or
xor
insl
stos
add
loopne
xchg
mov
adc
pusha
scas
add
cltd
lahf
push
fisubrl
sbb
repnz
getsec
pusha
nop
lods
add
daa
popa
dec
sbb
icebp
mull
mov
jle
xlat
es
inc
cmpps
std
negb
sbb
pop
icebp
addr16
pop
clc
movl
mov
sarb
sbb
repnz
pop
nop
push
std
icebp
fimull
lahf
adc
stc
add
mov
cmpsl
sbb
pinsrw
sub
fldenv
sbb
shlb
movl
jnp
push
xchg
adc
iret
adc
lret
jnp
push
xor
inc
mov
or
or
and
xor
mov
pop
adc
sbb
sti
sbb
jnp
loopne
imul
and
sbb
insb
lret
push
pop
adc
sbb
scas
das
sbb
fwait
adc
mov
sbb
ljmp
sti
xor
jnp
sti
sub
cmpsl
loopne
or
test
shrb
inc
sbb
fcompl
jg
int
xchg
adc
mov
lock
gs
cwtl
push
add
lret
je
outsl
pop
add
jnp
lock
pushf
push
lret
sti
test
inc
cmp
push
add
loope
xor
negb
jmp
and
sub
add
cmc
and
or
jbe
xchg
mulb
jb
mov
cmp
inc
cmp
mov
inc
adc
movsb
mov
pop
lahf
and
loope
jne
pop
pusha
insl
jmp
arpl
cmp
int
add
bound
adc
mov
inc
inc
mov
adc
lds
sub
subb
shl
std
push
imul
rcll
fadds
dec
icebp
lods
pop
or
sub
lret
and
outsl
iret
or
or
dec
out
mov
or
ds
sahf
repz
sti
repnz
and
mov
cmp
call
out
adc
push
sbb
movsl
and
daa
jecxz
in
inc
cli
adc
sbb
adc
int3
shrl
ret
movsb
mov
enter
cld
push
mov
rclb
push
enter
push
movsb
notb
sbb
sub
sub
fstps
or
adc
sar
mov
inc
mov
ret
es
and
pop
inc
mov
mov
cmpsl
jae
dec
jecxz
ret
insb
loope
mov
sbb
jae
cmp
bound
mov
sarb
dec
dec
inc
pop
fs
cwtl
xor
das
rorb
cmpsl
or
cmc
popa
mov
gs
ds
mov
das
push
popa
sbb
mov
jno
or
fsts
ret
mov
dec
sbb
and
outsb
mov
add
xor
add
adc
cltd
insl
gs
insb
mov
sub
mov
enter
sub
add
inc
push
out
dec
sti
outsb
pop
ror
neg
mov
mov
das
imul
and
filds
mov
in
test
out
mov
adc
inc
das
pop
push
mov
dec
add
insl
les
adc
movsb
sbb
imul
xlat
aas
push
pop
add
cmc
scas
cmp
std
jp
push
ror
rclb
addb
inc
push
out
dec
add
into
cmpsl
adc
lcall
sbb
sbb
mov
sbb
fldenv
adcl
sbb
add
pop
mov
add
fisubrl
add
stc
pop
loop
fcomp
call
ss
push
push
adc
mov
mov
addl
xchg
xchg
dec
and
push
pop
pop
add
adc
incb
lds
in
push
repz
add
xor
ss
cmpsb
jb
nop
pop
sbbb
pushf
push
fldl
loop
or
mov
test
add
out
lods
or
add
lret
pop
push
lods
push
sbb
ret
arpl
mov
add
mov
pop
jnp
dec
popf
sub
push
dec
pop
or
cmp
push
lcall
outsb
or
mov
inc
cmpsb
lds
push
mov
rclb
xlat
pop
fs
inc
pop
fisubrs
lds
shll
addb
push
in
pusha
push
push
or
jl
mov
outsl
and
inc
pop
aad
imul
rol
gs
iret
and
movsb
ret
xchg
jle
xchg
sbb
mov
pop
push
add
loopne
and
dec
es
fidivs
mov
add
xor
rcrl
pop
lock
punpckhdq
cmpsl
loopne
pop
mov
shl
mov
push
out
mov
lock
dec
popa
aas
pop
adc
cwtl
xlat
mov
add
sub
andl
imul
sti
mov
mov
add
pop
mov
andl
dec
add
lahf
insl
into
add
mov
popa
cmp
add
rorb
xchg
jmp
sub
sbb
xor
shlb
inc
stos
and
mov
cmpsl
popa
add
cmp
jecxz
andb
clc
add
push
or
shl
sub
add
push
mov
pop
shll
inc
std
xor
add
cld
jae
shrl
add
cltd
pop
mov
lock
add
cs
insb
or
mov
rcrl
push
push
sahf
addb
jns
lcall
mov
mov
push
xor
rcl
out
add
and
mov
test
cmp
and
test
test
mov
call
adc
inc
leave
shl
in
into
sub
jno
add
sub
and
add
jp
push
mov
xor
testl
mov
ss
stos
xor
and
jo
or
pop
lret
cmp
setae
test
orl
add
mov
icebp
pop
outsl
pop
call
sbb
sub
jg
insb
dec
and
inc
inc
scas
dec
add
add
sahf
sub
pop
xor
lahf
dec
cmp
jecxz
pop
fistps
movsl
int3
rclb
add
stos
andl
xor
out
lock
clc
aaa
pop
mov
hlt
cmpsb
adc
pop
add
aam
out
add
lods
and
popf
mov
cwtl
es
js
mov
xchg
das
mov
xchg
pop
cmp
fcmovb
loop
sahf
rorb
dec
fidivrs
movsb
jl
push
cmpsl
add
popf
enter
out
push
sbb
mov
ja
rorl
sub
sbb
adc
or
loopne
sbb
mov
jns
add
jmp
lods
mov
scas
and
mov
arpl
push
pop
push
mov
ret
std
loopne
testl
dec
out
fbstp
outsl
mov
flds
push
call
sbb
call
mov
nop
sbb
jp
mov
mov
subb
add
sti
add
xchg
and
cmp
and
add
insb
orb
orb
xor
nop
cmp
push
stos
in
mov
sbb
addb
inc
pop
xorb
xchg
loop
pop
push
data16
add
decb
ds
fdivrl
sub
subb
mov
inc
je
lds
loopne
jl
and
jmp
das
push
add
loope
leave
shll
adc
sbb
inc
mov
add
arpl
dec
sub
repnz
adc
and
mov
loopne
insl
ret
ljmp
das
mov
lahf
push
xor
sarl
mov
add
jbe
mov
push
bound
adc
insb
popf
pop
jne
xchg
lds
in
or
insb
cmp
scas
sub
or
loop
pop
add
mov
xlat
mov
add
fidivrl
ja
insl
cmp
mov
in
sub
dec
lock
lret
aad
jo
outsb
mov
adc
mov
fdivrs
jne
rol
mov
enter
repnz
out
lock
imull
push
mov
mov
push
fbld
xchg
inc
leave
je
jp
push
or
sub
jecxz
sar
inc
lods
xor
insb
and
xchg
outsb
cvtps2pd
lock
fiaddl
imul
inc
xlat
add
xor
or
and
sarl
out
leave
mov
test
js
js
ret
sbb
jmp
add
pop
cmp
pop
jmp
arpl
pop
push
insb
add
mov
shrb
add
lds
sub
push
pop
lock
inc
xchg
or
add
push
nop
pop
lds
leave
xor
inc
aas
ds
das
cmc
sbb
add
jg
or
jmp
icebp
popa
stc
add
cmp
pop
jo
lcall
push
nop
pusha
hlt
daa
addb
sbb
dec
push
inc
notl
leave
sbb
loop
enter
cmp
push
idivl
out
cwtl
push
jb
popf
add
sbb
and
adc
mov
add
dec
cs
sub
jns
push
or
pop
push
xlat
popa
mov
shrb
pop
inc
jns
ds
subb
cltd
add
jne
cmp
insb
aad
sbb
into
sahf
inc
cmc
incb
sbb
mov
shrb
sub
pop
adc
loopne
dec
inc
xchg
in
in
or
inc
pop
mov
xchg
or
shlb
push
pop
inc
or
push
add
negl
scas
pop
mov
push
and
mov
cs
inc
xchg
mov
sarb
sub
push
lds
adc
jne
js
sbb
mov
std
fistl
lcall
add
test
mov
daa
dec
sbb
add
adc
pop
lret
loopne
push
sub
stc
dec
mov
sub
es
push
lret
adc
xor
xor
inc
sbb
sub
add
std
cmp
addb
rcll
addl
add
sub
xchg
popf
xchg
ror
iret
int3
pop
add
sbb
dec
add
out
popf
xchg
in
loopne
add
adc
push
adc
sahf
xor
pop
enter
orb
cmp
rcll
movsl
es
stos
jo
stc
cmp
add
jmp
lcall
add
gs
add
sbb
fucomi
mov
mov
push
jnp
mov
jmp
hlt
inc
data16
popf
push
lret
test
sub
in
pop
fstpt
mov
dec
add
push
out
add
and
cwtl
dec
push
push
outsb
add
insb
fldenv
add
and
sub
add
call
cmc
add
sbb
pop
ljmp
cmp
popa
test
outsl
in
aaa
mov
adc
add
adc
dec
mov
daa
add
sub
jb
xor
and
pop
sbb
xlat
mov
add
imul
cmpsb
inc
mov
jmp
jle
pop
and
pop
ljmp
imul
push
shl
add
cmp
hlt
out
push
inc
adc
mov
gs
jne
and
jns
test
fwait
xchg
nop
push
add
daa
xor
adc
xor
pop
adc
cwtl
insb
pop
add
pop
bndldx
lahf
xchg
mov
xor
cmpsl
test
adc
fidivl
xor
sub
arpl
or
testb
faddl
sub
mov
cld
in
cs
lods
and
repz
mov
gs
dec
fcompl
cmp
cmp
loopne
int3
test
xor
and
repz
inc
cmpsl
adc
cld
sbb
test
rol
add
mov
sub
push
push
shlb
scas
ficompl
loop
mov
inc
pop
shlb
xlat
fnsave
stos
int3
fistpll
and
sbb
jmp
aad
int
sbb
fmull
sub
cld
ret
inc
sbbl
pop
push
cmpsb
testl
fimull
add
mov
in
roll
imul
sub
jbe
mov
xlat
dec
add
cmp
fwait
xor
xchg
and
jae
xor
lds
inc
neg
adc
xchg
inc
scas
add
call
sbb
sbb
movzwl
adc
add
js
lret
ljmp
lret
das
mov
test
mull
data16
mov
xchg
scas
inc
lret
inc
xchg
push
cld
cmp
sub
int
or
test
sub
dec
add
push
in
mov
mov
add
push
jp
stc
in
xor
add
jg
mov
outsl
add
mov
js
cmp
xor
xchg
nopl
cmp
mov
pop
test
int3
add
imul
pop
std
add
fwait
and
clc
add
mov
and
lret
lcall
int
add
lock
mov
arpl
add
mov
dec
mov
sbbb
les
add
lods
clc
lea
add
jl
iret
mov
js
mov
cli
loopne
cld
dec
add
mov
mov
sahf
and
jb
inc
sub
lock
push
and
popa
bound
fidivrs
movsl
gs
jg
js
stos
mov
test
pusha
cltd
mov
int
out
inc
push
add
mov
mov
mov
jge
sbb
push
aas
mov
xchg
and
xchg
nop
and
push
daa
sbbl
rcr
out
nop
inc
add
mov
sbb
cli
add
dec
pop
push
adc
add
mov
xchg
fnsave
int3
xchg
jle
push
add
rorl
push
inc
add
inc
decb
sbb
xchg
into
cltd
mov
mov
loope
fiadds
adc
add
dec
cmpsl
pop
mov
add
pushf
push
fsubrl
or
popf
subb
add
and
inc
add
pop
mov
ja
loopne
xorl
or
inc
sub
cmp
xchg
pop
por
and
pusha
sarl
push
xor
jecxz
jae
out
add
idivb
das
sub
stc
sahf
adc
loopne
mov
or
jae
jp
lods
fiadds
rol
int3
jnp
call
fcmovnb
sbb
cwtl
xor
sub
mov
jns
adc
dec
add
inc
faddl
or
fdivrp
sub
sbbb
fisttps
enter
insl
sub
loop
add
xchg
in
test
test
arpl
add
mov
or
test
xor
inc
shr
sbb
in
pop
out
icebp
push
cmpl
dec
push
mov
or
repz
sbb
in
jl
test
jo
incb
add
push
dec
lock
bound
cmp
insl
or
loop
mov
hlt
pop
out
push
or
add
int3
icebp
dec
or
or
aad
mov
shlb
addl
xor
sbb
sbb
cmp
loopne
sub
cmovg
leave
daa
bswap
movsb
repz
sbb
aam
or
jnp
std
js
push
lock
add
cld
test
xchg
inc
ds
add
sub
jnp
movsl
fcomps
dec
sbb
add
sub
adc
pop
push
jmp
daa
stc
mov
out
sbb
dec
mov
loopne
add
cmp
rorb
subb
ja
movsl
popa
xor
cmpsl
fists
fcmovnb
jne
cld
inc
xor
sub
mov
and
jb
push
cmp
add
stos
call
pop
lock
movb
jge
pop
mov
jp
add
clc
clc
jnp
addl
pop
mov
cmc
add
jb
lods
add
mov
mov
add
stos
cwtl
jp
or
inc
es
decb
add
out
mov
xor
and
push
sub
cli
ja
loopne
and
fidivrl
mov
mov
aad
inc
in
mov
repz
lock
daa
inc
xchg
push
sub
pop
enter
sbb
mov
inc
dec
lds
rolb
xchg
xor
push
sbb
clc
jns
ljmp
mov
ror
rol
daa
mov
fcoms
testb
jge
das
jb
je
add
out
or
dec
int3
sti
push
sar
add
mov
mov
lcall
rorl
je
hlt
xchg
imulb
sbb
or
xchg
dec
fstpl
jne
add
add
lcall
add
sub
daa
sub
adc
jge
xor
push
xchg
sub
or
sbb
stos
test
clc
pop
add
cltd
push
mov
arpl
sub
rclb
mov
scas
xchg
outsb
sbb
push
out
cmp
incl
add
mov
cmp
int
jne
add
xlat
out
dec
rcrl
loopne
je
add
imul
imul
jp
push
add
and
std
jmp
das
push
clc
mov
add
shrb
xchg
aam
add
fcmovnu
mov
int
add
in
mov
and
xchg
inc
or
or
add
addl
sub
gs
fwait
inc
mov
cmp
add
lret
add
out
fists
mov
outsl
insb
pop
add
fimull
fsub
pop
rol
lock
pop
and
xchg
push
cmpsb
fs
add
and
pusha
jno
hlt
arpl
cmp
add
mov
xchg
push
in
adc
pop
and
push
dec
scas
and
ror
jbe
pop
sbb
add
xorb
int
dec
push
cmp
and
ljmp
sbbb
inc
fnsave
sbb
add
jbe
add
inc
sbb
xchg
xchg
in
and
rolb
push
inc
adcl
and
pop
in
sysret
push
fldenv
inc
lret
cmp
add
stc
movsb
decb
outsb
test
xlat
add
and
xor
lods
dec
cld
add
cmc
and
add
push
outsb
sub
pop
inc
sbb
movsl
pop
sarb
mov
xchg
aad
fdivr
shlb
adc
xchg
es
out
xor
enter
fisubl
push
or
pop
dec
mov
sahf
push
inc
cmp
push
scas
dec
and
lods
add
mov
jns
cld
fmuls
fcomp
popa
jno
push
dec
rolb
out
xchg
pop
xchg
push
add
test
hlt
mov
movsl
xchg
les
mov
pushl
stos
dec
xlat
push
jp
sub
lret
rcrb
mov
push
add
push
mov
add
test
push
loop
cmp
aad
or
mov
je
push
sbb
or
add
decb
mov
inc
cmp
out
rolb
call
dec
clc
xchg
lret
mov
jnp
or
popa
and
sti
dec
jb
sbb
cmp
aaa
sahf
cmc
insb
sbb
jecxz
sub
mov
ret
pop
xor
xor
add
stc
lret
mov
ss
xlat
outsb
cmp
shlb
add
mov
mov
push
pop
lret
dec
add
shl
lea
cmpsl
lods
bound
mov
inc
icebp
into
idivb
repnz
fsubp
ja
rolb
loopne
mov
jb
jmp
adc
loopne
mov
inc
mov
jl
mov
and
pop
add
lcall
clc
shr
adc
ljmp
dec
sbb
mov
rclb
xchg
jns
adc
aad
jl
loope
imul
divb
add
push
or
push
dec
int3
add
imul
in
shll
mov
lret
outsl
ret
sbb
jbe
add
fwait
or
adc
adc
dec
pop
aaa
insl
jo
in
hlt
inc
and
mov
btr
out
adc
aad
pop
push
in
push
out
jo
add
jae
or
push
test
mov
inc
add
movb
dec
test
lock
mov
insb
mov
add
stos
inc
js
lret
mov
sbb
jl
test
add
push
orb
mov
out
mov
lock
adc
inc
pop
repnz
add
stos
jg
xor
into
icebp
xor
mov
sbb
fs
shrl
add
push
pushf
sub
pop
sub
inc
mov
push
or
lea
add
ss
adc
mov
cwtl
xchg
add
cmpsb
test
xchg
jge
mov
ret
in
mov
mov
and
adc
scas
push
xchg
mov
dec
shlb
add
cltd
jo
push
pop
xor
fs
xchg
xchg
lds
push
pop
mov
add
incb
rorb
add
ja
jecxz
add
inc
icebp
insl
mov
pop
fldl
and
lods
sbb
mov
inc
push
lret
pusha
jo
shlb
dec
pop
int3
cmp
add
inc
pop
mov
sbb
stc
add
out
jbe,pt
add
mov
loopne
jb
add
xchg
stos
inc
add
mulb
cmpb
sbb
mov
push
inc
add
mov
mov
inc
push
xlat
and
cmpb
out
dec
push
cmp
cltd
sbb
mov
jle
clc
dec
or
mov
add
out
pop
mov
or
jmp
pop
loopne
ljmp
mov
adc
adc
jne
daa
and
scas
add
aaa
push
js
lcall
cmp
cmp
pop
pop
pop
cwtl
or
es
outsb
add
insl
mul
adc
xchg
dec
add
adc
mov
test
call
bound
mov
add
test
sbb
add
sbb
inc
sbb
push
scas
add
xchg
cmp
sbb
add
jb
jne
rcll
add
mov
imull
test
inc
xchg
fmull
je
aad
punpckhbw
shlb
xor
enter
push
fcoms
add
pusha
inc
das
int3
loop
add
push
test
sbb
mov
adc
push
aaa
in
sbb
pop
and
lods
cli
nop
sbb
pop
add
clc
out
std
ja
into
mov
push
sub
test
adc
leave
lods
clc
xchg
sbb
dec
add
push
jl
sbb
or
lds
stos
add
mov
aam
add
insl
cmc
cmp
psraw
pop
mov
sbb
push
int3
add
into
mov
sti
jge
mov
push
fwait
iret
mov
imul
orl
push
js
push
stc
mov
roll
mov
fwait
icebp
mov
mov
jo
lods
adc
mov
movsb
mov
add
dec
addr16
adc
insl
add
cld
push
jge
cmp
add
ret
and
add
xlat
xchg
xor
aam
rdpmc
popa
push
stc
sub
pusha
jl
jne
adc
mov
into
ss
sbb
pop
lahf
lods
and
int
mov
aaa
out
icebp
test
jbe
bound
add
fdivl
insb
in
in
ljmp
push
push
and
pop
xchg
div
in
mov
add
mov
xlat
mov
aad
das
in
add
test
add
cld
cwtl
jge
and
add
mov
shll
add
inc
nop
sbb
loop
mov
outsb
popa
fsubrl
out
imul
xor
pop
cmp
dec
fldt
mov
scas
dec
sbbb
sbbb
cwtl
lret
sbb
xor
pushf
shrb
sub
shr
jae
sbb
or
mov
jne
push
sbb
decl
faddl
into
or
xor
cli
pop
add
jns
inc
bound
jb
add
add
and
enter
sbb
popf
xor
mov
pop
shl
jge
scas
add
add
sbb
pop
xor
add
bound
sub
jmp
rorl
mov
int3
clc
das
cmp
popa
call
add
or
add
pusha
adc
repz
dec
push
pop
inc
fdivs
mov
add
cmp
fistpl
packsswb
adcb
mov
orb
or
ss
shlb
psubd
loopne
addr16
mov
mov
roll
popa
jo
repnz
hlt
jp
cmp
dec
vprotd
add
pushf
lret
hlt
add
mov
mov
add
scas
loope
add
icebp
pushf
cmpsl
jae
cmp
aad
xchg
pop
sub
nop
mov
jne
pop
xor
cmp
sbb
loopne
add
jno
in
pop
push
push
xchg
xchg
inc
push
cmpsl
adc
scas
rolb
pop
pushf
jnp
ficoms
adc
add
cmp
shlb
and
int3
test
jp
rcrb
std
pushf
imul
sbb
mov
cwtl
push
setge
nop
push
add
cmc
jecxz
add
subl
push
adc
add
movsl
imul
test
sbb
pop
or
jmp
push
or
loopne
into
adc
xorl
sbb
inc
cwtl
sub
add
cmp
into
add
push
xor
jg
call
lret
dec
fcoml
sub
add
lods
pop
or
out
add
shlb
dec
jp
mov
cltd
pusha
adc
clc
mov
mov
add
push
dec
inc
in
xchg
mov
sub
pop
pusha
sti
inc
adc
in
jl
sbb
fisubrs
push
pop
mov
mov
ss
jnp
je
mov
lcall
inc
push
idivb
ja
roll
xor
mov
add
push
ficoms
cmpl
push
pop
cmp
les
shr
inc
mov
add
jg
mov
sub
je
movl
shl
xchg
mov
inc
pop
sbb
sbb
sub
and
sub
pop
add
mov
pop
xchg
fmuls
and
add
mov
lret
jge
add
lea
cmp
outsb
add
push
into
pop
add
int
dec
cmp
ret
out
pop
mov
lock
jno
cmp
mov
pmaxub
or
aaa
mov
inc
addr16
jle
sets
pop
dec
lea
fisubrl
jo
jne
mov
sub
mov
cwtl
mov
push
and
imul
push
mov
scas
xchg
js
stos
addr16
adc
mov
jbe
jge
add
aaa
pop
mul
inc
sub
jl
das
and
lock
add
pusha
xchg
loop
adc
inc
push
jbe
aaa
xor
and
jns
jle
mov
std
cltd
inc
mov
or
adc
repnz
aam
inc
mov
xchg
decl
cmp
in
shl
inc
cmp
mov
repz
sahf
adc
mov
add
pop
daa
xor
adc
js
add
loopne
push
insl
pop
push
mov
pop
or
f2xm1
cmp
loopne
xchg
add
xor
dec
xor
sbb
mov
cmp
push
stc
les
lret
adc
mov
shll
clc
adcl
xchg
sti
idivl
mov
sub
push
pop
pop
and
mov
roll
mov
mov
pop
mov
or
and
push
add
jb
add
push
call
std
test
nop
jno
jb
nop
pusha
add
pop
popa
lds
inc
cmp
push
lret
cwtl
out
jnp
add
adc
lahf
jl
hlt
xor
sbb
dec
dec
dec
xor
testb
aas
jns
add
or
in
add
loope
mov
add
dec
pop
inc
xor
data16
cld
add
std
push
pop
jne
sbb
mov
sub
add
fldl
bnd
cmp
popf
ljmp
mov
rorl
aad
mov
nop
add
loopne
xor
or
push
dec
test
and
xor
test
lock
pop
dec
or
add
sarb
hlt
push
or
shl
aad
mov
pop
and
lret
add
jecxz
lock
outsl
add
iret
or
or
and
sbb
int
enter
sub
dec
loop
sti
xchg
fcomps
addb
sarb
clc
or
cmp
loop
imul
scas
sbb
or
push
gs
sbb
mov
push
scas
shlb
sets
pusha
int3
mov
xchg
pop
pop
cmp
lock
add
int3
cwtl
scas
ss
add
mov
inc
repz
add
dec
sub
mov
or
pop
imul
mov
jmp
lcall
loopne
mov
xchg
leave
pop
pmulhuw
and
lcall
add
xor
cmp
mov
insb
push
ljmp
sbb
pop
push
shl
sub
mov
push
and
xor
cmp
loope
fsubs
add
testl
xchg
fmull
add
or
add
jne
cmpsb
cmp
insl
mov
push
testl
loop
movsl
lcall
out
lret
pop
mov
mov
push
mov
inc
aam
jae
in
mov
scas
cs
add
xor
aaa
loopne
enter
mov
ret
or
loopne
adc
add
xor
adc
push
incl
cmpsl
jp
sahf
sti
add
repz
push
sub
lock
ds
pop
movsl
mov
test
lret
add
xacquire
jg
adc
sbb
pop
push
jmp
sub
sub
pop
mov
out
push
jecxz
inc
fcompl
mov
mov
scas
jle
stos
mov
sub
jg
add
sub
and
jecxz
xlat
add
xor
add
scas
jge
pop
shll
mov
sarb
or
daa
inc
mov
sbb
xchg
cmp
cmp
mov
testb
push
shlb
dec
sbb
push
loopne
mov
or
call
sti
add
xchg
or
sbb
pop
and
call
push
pushl
gs
test
insl
int
stc
pusha
add
sti
cmp
lock
frstor
and
cmpxchg
mov
pop
dec
pop
mov
mov
sub
lret
cmpb
cltd
pushl
data16
in
sub
push
add
dec
ror
jns
add
fld
add
mov
cmc
lret
xchg
pop
ljmp
pushf
ja
add
rorb
pop
cmp
jge
inc
pop
jbe
jno
pop
nop
fidivl
lods
outsb
inc
out
add
fisttpl
and
loopne
push
ss
inc
cmc
push
rcl
add
pusha
testb
mov
dec
fimuls
rorb
mov
das
repnz
push
add
cld
aaa
call
add
pop
sahf
popa
dec
lahf
add
cltd
mov
pop
push
fwait
jns
lods
out
negb
xor
mov
leave
cltd
lods
pusha
enter
or
inc
add
add
ds
push
sbb
add
popw
add
add
loope
je
insb
add
jl
jb
fisubrs
and
cmp
lds
stc
adc
xlat
bound
cmpsb
xor
test
xchg
mov
add
dec
sub
cmp
out
inc
sahf
cli
in
dec
es
jge
incl
push
rolb
add
ja
xchg
clc
sarl
jne
add
cwtl
cld
xchg
or
test
in
add
push
ljmp
test
mov
and
or
aas
dec
jne
sub
sub
push
mov
inc
xchg
add
mov
mov
loop
cmp
aas
cmp
push
add
pop
pop
outsl
mov
outsb
mov
sub
push
add
cmpsl
daa
les
dec
pop
pop
addb
xchg
sbb
lods
fbld
lock
add
imul
repnz
mov
pop
pop
jl
push
push
ret
shrb
add
sbb
cmp
add
add
std
xor
repnz
lret
shrl
pusha
adc
add
jp
or
pop
cltd
popf
cmp
roll
addr16
cwtl
and
psubq
mov
dec
mov
sub
inc
cmpsb
lea
ljmp
sub
mov
mov
test
sbb
out
inc
rcrb
xchg
pusha
pop
aam
inc
xchg
add
mov
xor
nop
fldl
test
cmp
push
in
dec
xchg
leave
dec
int3
into
mov
add
push
jne
nop
shll
dec
xorb
dec
test
and
xchg
imull
rcrl
dec
add
xor
imul
jge
add
lods
jge
add
hlt
add
fdivr
jne
pop
cmp
or
es
add
jns
add
jae
or
sbb
mov
clc
hlt
mov
xchg
xchg
jg
jecxz
loopne
jmp
dec
cmp
add
cld
pusha
daa
out
mov
mov
add
push
mov
and
add
sbb
or
sub
jne
xchg
add
outsb
loopne
adc
push
cmp
lret
es
enter
jmp
push
inc
xchg
outsb
xlat
mov
insl
cmp
add
or
arpl
add
inc
out
add
fwait
cmovs
add
or
dec
mov
xchg
cmp
adc
push
fs
fisubrs
jge
adcl
es
dec
mov
dec
aas
shl
rclb
addr16
sub
hlt
fidivrs
add
pop
xor
xor
xor
and
add
mov
sbb
test
mov
mov
daa
mov
inc
loope
loopne
pop
js
add
scas
adc
pop
jbe
addr16
int
enter
add
lods
shl
add
or
and
cld
scas
in
lock
aad
leave
cmp
out
sbb
inc
pop
xor
nop
mov
pop
roll
jl
mov
sti
dec
and
push
sahf
mov
mov
sub
loopne
ljmp
flds
test
add
mov
push
add
xor
add
adc
fs
push
add
aas
loop
or
add
xor
pop
ljmp
and
cmp
fidivl
and
popl
or
jecxz
cmp
nop
dec
adcb
aas
xor
jns
xchg
ret
mov
fcompl
inc
test
out
add
fistpl
xchg
adc
add
out
dec
leave
mov
nop
cmp
cmp
ror
inc
leave
in
ljmp
enter
xchg
inc
in
sub
jne
jp
lock
adc
mov
xor
add
cmp
mov
mov
push
scas
repnz
mov
add
jns
insl
les
xchg
pushf
mov
loope
dec
add
xchg
dec
xchg
jp
sarb
pop
leave
in
mov
inc
adc
xchg
fstpt
imul
xchg
into
inc
lds
loope
shrb
popa
and
fisubs
dec
sbb
xchg
test
test
or
mov
pop
scas
push
daa
jg
mov
jecxz
je
addr16
testb
cld
rol
xor
lahf
add
pusha
int
jmp
add
push
sub
insb
cmp
jb
es
imul
jp
add
xchg
inc
ljmp
inc
push
mov
lahf
jnp
stos
nop
sbbb
or
add
add
xchg
cmpsl
aaa
add
incl
movsb
into
pop
ljmp
scas
adc
xchg
and
test
xchg
push
push
dec
add
decb
add
data16
fcomps
test
mov
xor
add
test
fs
and
fsubl
mov
cld
dec
cmp
jo
negb
sbb
movsl
pusha
cmp
or
dec
sbb
add
scas
xchg
sub
push
mov
cli
pusha
rclb
add
cmp
in
or
pop
pop
pop
dec
xor
popf
dec
inc
jae
jne
add
cmp
daa
push
into
add
jp
xor
cmpxchg
pop
xchg
and
lahf
xchg
add
icebp
xlat
and
jne
in
movlps
lea
or
add
or
pop
insb
sub
jmp
sar
mov
xchg
aad
shl
dec
pop
cmp
add
add
icebp
dec
mov
pop
ficompl
jg
mov
mov
aam
es
adc
fsubrs
add
loopne
pop
arpl
adc
fcomps
fisubl
adc
cld
rcll
daa
add
xlat
in
adc
or
push
lcall
lds
xchg
jecxz
xchg
icebp
add
pop
push
sbb
in
out
adc
xchg
pop
add
ret
movsl
test
sbb
inc
and
jnp
xchg
add
xchg
arpl
dec
xchg
out
and
test
flds
insb
mov
inc
pop
add
in
rolb
sbb
clc
mov
push
xorl
mov
testl
sbb
sub
push
add
mov
add
lds
sub
testl
add
es
mov
xlat
lret
xchg
in
into
int
sete
inc
add
pop
add
adc
push
bnd
add
sbb
outsl
loopne
add
xchg
cmc
lods
fisubs
dec
incb
pop
enter
fdivrs
inc
lahf
push
ss
xchg
inc
and
int
and
cmp
add
cmp
pop
add
mov
add
sbb
clc
sbbb
leave
push
mov
enter
jno
pop
out
hlt
lea
add
bound
incl
mov
int3
in
pushf
testl
jae
pop
lods
ljmp
jmp
push
roll
and
or
lcall
jns
addl
popf
jp
bound
repz
loopne
rolb
aam
xorb
add
and
gs
pop
jo
ss
xor
fmull
pop
dec
aad
cmp
int3
mul
cmp
inc
push
es
idivb
in
ja
cld
lret
push
add
repz
add
rcrb
adc
push
mov
repz
pop
push
inc
jl
jmp
or
lret
sub
shr
stos
rcll
outsl
xor
mov
mov
xchg
cli
out
mov
add
fldenv
add
stos
call
mov
sbb
jno
je
pop
jg
addr16
add
pop
mov
add
jns
outsb
xorl
and
mov
xchg
imul
jecxz
add
out
inc
push
cmpb
add
shlb
inc
scas
gs
test
popf
inc
add
fbstp
xchg
cvtps2pd
pop
orb
jle
shrb
iret
cwtl
les
scas
js
sbbl
call
insl
fmull
xor
inc
xchg
add
fisubl
mov
jae
pop
sbb
imul
loope
stc
pmaxub
add
xor
movb
sub
icebp
shlb
push
add
pop
mov
add
fwait
test
cmpsl
js
cltd
outsb
jns
jg
jmp
mov
aas
bound
add
divb
add
sub
nop
push
test
mov
add
dec
movsb
xor
leave
aaa
pop
add
push
in
mov
push
mov
push
xchg
sarl
sbb
adc
add
cld
pop
cmp
loope
add
push
push
mov
cwtl
je
add
pop
sub
dec
and
xchg
pop
ror
jbe
fdivrs
hlt
dec
adcb
in
ret
mov
pop
push
leave
sub
ret
jb
sbb
clc
shr
lds
push
out
mov
add
sbb
inc
movsb
jne
add
fisttpl
fnstcw
add
pushf
xor
push
mov
or
pop
ljmp
mov
pop
stos
out
lahf
mov
mov
xchg
mov
not
add
movl
inc
and
jmp
shlb
push
fcmovb
sbb
add
repnz
test
fs
jmp
loop
xchg
mov
cwtl
xchg
adc
ret
test
icebp
mov
mov
jge
mov
js
dec
push
or
add
enter
sbb
pop
sbb
cmp
aam
outsl
or
test
xlat
mov
or
popa
addl
shrl
and
adc
inc
dec
mov
sbb
fdivr
or
xlat
jae
sysenter
imul
loopne
in
aam
add
jo
add
pop
in
enter
jne
pop
xor
push
cmpb
sub
test
das
sbb
je
mov
test
rcll
adc
push
sub
pop
mov
out
or
std
daa
jmp
icebp
mov
add
jbe
lock
es
mulb
sub
ss
add
or
pop
xchg
pop
mov
jle
loop
or
xchg
jl
mov
pop
add
enter
sbb
shlb
jb
in
scas
add
jle
xor
jp
sub
pop
mov
iret
bound
invd
sahf
inc
jmp
and
clc
sti
xchg
lret
imulb
insb
inc
test
add
out
pusha
push
hlt
in
ss
xchg
ja
nop
mov
mov
lods
arpl
in
test
aam
rolb
aad
cltd
pop
cmp
add
outsb
xchg
rorb
xorl
push
fisttpll
push
or
fwait
ret
xor
nop
jo
mov
dec
sbb
add
loope
nop
pushf
or
add
dec
loop
add
dec
aaa
xchg
int3
call
inc
cmpsl
or
dec
and
xchg
shrb
mov
cwtl
xchg
cmp
dec
add
jp
aaa
mov
cs
xchg
mov
jg
popa
jo
cmpsb
decb
js
cwtl
jl
mov
dec
adcb
sbb
lds
dec
xchg
inc
fdivrl
dec
incl
pop
repnz
lcall
add
mov
mov
xor
addb
inc
nop
sahf
sbb
xchg
aaa
cli
cwtl
mov
add
or
cli
add
pop
nop
add
mov
lods
add
xor
lock
idiv
add
out
pop
and
add
vhaddps
jge
add
cmp
push
sbb
inc
stos
push
fcomps
pusha
outsl
lods
pop
push
push
lcall
pop
adc
sbb
pop
sub
add
pop
test
add
out
lret
dec
clc
aam
orb
data16
add
adc
into
mov
cmp
dec
sub
mov
cld
lea
sti
outsl
mov
mov
push
mov
loope
adc
xor
add
sub
push
or
out
pop
mov
outsl
cli
xchg
sbb
or
test
and
cmp
ja
mov
dec
push
hlt
add
push
jle
dec
shlb
outsb
int
pop
addr16
sub
mov
mov
imul
cld
rol
push
jecxz
aad
insb
fwait
incb
sahf
lahf
jge
pop
out
shld
iret
mov
inc
xchg
adc
mov
sub
push
sbb
pop
dec
push
xchg
or
lahf
lret
add
popa
add
inc
addr16
lock
sbb
add
aad
push
and
test
sti
xchg
xchg
adc
imul
aad
inc
or
test
icebp
add
xchg
andb
loope
pop
insb
xor
imul
mov
inc
mov
xchg
andl
push
add
pushf
dec
enter
icebp
sahf
sti
scas
xor
pusha
add
fldl2e
lcall
cmpsl
xor
js
fsubr
adc
cs
les
xlat
sbb
xchg
pop
sbb
jge
mov
fwait
cmp
lods
mov
jle
push
mov
sbb
jecxz
mov
cmp
jmp
adc
sarl
loope
shll
repnz
loopne
fstpt
es
mov
jl
push
inc
or
inc
adc
mov
jge
or
sahf
test
cmp
or
and
cwtl
xchg
mov
stc
push
test
dec
dec
jge
xchg
jle
and
loop
sbb
push
or
movsl
pusha
sbb
or
sub
and
shlb
sbb
rolb
jle
ja
pop
loope
or
cli
sub
add
icebp
shll
jne
xor
jge
movsb
imul
call
clc
cltd
popf
sbb
jbe
inc
cmp
sbb
lods
jmp
add
mov
add
push
imul
add
pop
rol
shlb
and
mov
xchg
push
aaa
test
pop
imul
mov
sbb
lret
add
je
test
shl
movsl
sub
cmp
push
mov
dec
lret
push
jmp
lea
and
lods
sti
cmp
mov
push
mov
jo
push
xchg
push
jge
add
or
dec
or
cmc
shlb
mov
add
popf
mov
inc
push
xlat
sbb
push
out
leave
ret
cltd
cmp
fisttps
xchg
movsl
jnp
sbb
mov
fldcw
mov
jmp
mov
sbb
push
les
pop
sbb
loopne
sub
movsl
xchg
test
test
sar
out
rorl
xor
shlb
push
call
xor
cmp
push
outsl
mov
and
cmpsl
ret
mov
xchg
test
int3
xor
jmp
scas
mov
pop
test
int
test
or
mov
test
or
cmp
cmp
in
cmp
adc
lock
ss
sub
repz
cwtl
rorb
pop
jmp
mov
push
adc
inc
dec
hlt
lret
fldl
nop
mov
sbb
or
mov
jmp
inc
dec
lock
push
dec
dec
or
cmp
sbb
cmp
mov
mov
inc
cmp
mov
pop
dec
das
or
data16
and
insl
je
xchg
and
bound
mov
enter
int
fsubr
dec
jno
xor
mov
or
ds
in
test
mov
imul
adc
cli
rcl
dec
inc
je
push
mov
mov
add
cmp
mov
nop
jo
dec
add
pop
movsb
xchg
insl
jo
sub
mov
and
mov
sub
xor
pop
sbb
test
mov
xchg
mul
loope
add
sbb
cltd
movsl
xor
add
mov
adc
pop
ret
sub
add
out
dec
dec
or
test
sbb
mov
mov
gs
fbld
inc
inc
pop
pop
or
orb
shrl
xor
dec
test
xchg
pusha
test
imul
and
push
mov
pusha
mov
or
add
xorb
faddl
jl
fnsave
je
cmpl
jge
mov
xor
addb
dec
test
mov
mov
and
cmpsl
jae
or
packsswb
testl
or
add
imulb
outsb
push
pop
add
fiaddl
jmp
jo
xor
pop
pop
xlat
add
xchg
jb
inc
dec
pop
and
aas
mov
leave
xor
lds
push
mov
inc
or
and
mov
mov
icebp
cmp
inc
mov
adcl
fbstp
testl
lahf
inc
cmc
into
paddd
leave
and
enter
aam
and
jg
rorb
fsts
stos
add
fsubl
cli
test
jae
add
sub
test
jb
outsb
stos
push
loop
adc
aam
dec
pop
mov
xor
push
dec
push
fldenv
js
mov
insb
mov
movsb
ja
add
std
mov
les
add
outsl
and
pop
stos
imulb
inc
sbb
xchg
cli
sub
nop
pop
pop
sbbb
aas
push
mov
aas
sbb
jns
les
enter
or
cld
loopne
or
xchg
clc
or
sub
or
cmpl
push
and
pop
in
and
mov
sar
imul
inc
adc
cmp
or
push
ljmp
dec
and
mov
mov
push
add
aaa
or
xor
inc
mov
inc
jg
add
inc
or
xorb
cltd
mov
mov
jne
inc
inc
loope
and
inc
xchg
sbbb
add
andl
mov
pcmpgtb
ljmp
sahf
call
leave
adc
cwtl
and
mov
cmp
addl
adc
mov
cli
cld
ljmp
cmovo
loope
cmp
sarb
ss
add
xchg
adc
jbe
fdivl
lock
nop
cmp
es
mov
fwait
int3
xchg
xchg
pop
dec
lock
adc
mov
lret
xorb
adc
adcb
inc
ds
notb
add
loope
cmp
inc
pop
clc
insl
jmp
rolb
pop
popf
call
or
jo
mov
pusha
rolb
lret
sub
adcl
xchg
scas
popa
fidivrs
mov
or
add
and
loopne
rolb
pop
lods
dec
adc
jb
fnstenv
xor
test
cs
inc
sbb
xor
sub
jecxz
inc
rcrl
add
xchg
adc
lock
push
sahf
and
fnstcw
insb
dec
aaa
or
jl
les
pop
test
sbb
adc
sub
lret
add
jl
jge
and
inc
sub
popa
and
fwait
cmp
xchg
roll
and
inc
jns
rol
inc
inc
leave
mov
jecxz
nop
lahf
or
sbb
adc
enter
jmp
pusha
mov
add
add
jg
mov
lock
jbe
mov
insb
pusha
adc
sub
pusha
sbb
nop
adc
mov
inc
xor
daa
shl
repz
popf
and
mov
pushf
add
int3
jl
jb
bound
pusha
or
push
iret
cmc
xor
mov
pusha
or
and
loopne
scas
lods
xor
addl
popl
and
ds
adc
repnz
loope
lock
cld
out
mov
add
pusha
fcomp
sti
xor
scas
xor
or
ficoml
mov
pop
xor
and
cld
loope
stos
addl
and
adc
lea
push
lret
pusha
sarb
loope
pushf
jns
in
loopne
rcrb
add
mov
ds
popf
nop
jae
adc
std
icebp
imul
mov
test
pushf
add
and
jo
xor
inc
mov
pusha
add
xor
arpl
push
jle
add
data16
mov
xchg
loop
mov
out
clc
shll
or
and
inc
sub
data16
dec
dec
sbb
pop
inc
xor
loop
call
add
inc
ss
or
aaa
into
mov
hlt
push
add
pusha
inc
sbb
lods
xor
mov
xor
add
mov
lea
dec
xor
int
subl
and
pop
push
push
inc
pop
lock
and
and
push
loopne
push
lcall
rcl
dec
sbb
fcmovnu
fsts
add
pusha
mov
in
popl
and
sub
mov
xor
sti
cltd
add
lock
and
and
add
xchg
mov
fiadds
sbb
addr16
rdmsr
stc
ret
ds
sbb
dec
mov
xlat
int
stos
add
xchg
xchg
xor
adc
mov
nop
and
and
lahf
and
loopne
std
lea
add
mov
mov
mov
jmp
lock
adc
loope
xchg
adc
cmp
adc
fisttpll
addr16
adc
push
notl
jp
loopne
icebp
adc
pop
cmp
cmp
pusha
js
shlb
pop
imul
pop
pusha
add
sub
push
add
repz
add
sti
jl
adc
stos
insl
fists
lret
pop
mov
add
ret
mov
sbb
xchg
and
out
inc
xchg
or
mov
aad
scas
mov
out
cmp
popa
push
lock
cmp
imul
stc
adc
push
jecxz
mov
es
roll
addr16
test
xchg
ljmp
xorl
add
and
cmpsl
lea
pop
jle
pop
mov
xor
punpckhwd
inc
push
cmpsb
dec
rcr
scas
pushf
mov
daa
test
fsubs
push
iret
rclb
shlb
jge
addr16
or
rolb
sahf
pop
and
mov
arpl
and
and
cmpsl
loopne
push
nop
push
bound
out
outsl
js
push
mov
push
popa
inc
dec
cld
js
sub
push
outsl
js
les
cli
addl
cmp
sub
pusha
xchg
xchg
enter
or
repnz
cmpsl
xchg
or
and
xor
xor
inc
pop
enter
dec
addl
dec
popa
daa
dec
pop
pusha
jns
push
enter
xchg
call
jge
inc
dec
rorb
jg
add
push
lea
fdiv
xchg
adc
adc
dec
lock
out
mov
or
out
nop
xor
lock
ret
inc
push
daa
repnz
popa
adc
xchg
pop
add
js
xor
addr16
ds
jno
sti
das
or
push
or
imul
loopne
clc
xor
push
dec
shlb
sti
popl
xor
out
ds
fstps
cmp
loopne
push
mov
xchg
loopne
pop
sahf
xlat
inc
mov
in
rcl
jb
test
dec
sbb
popa
sub
push
jns
adc
mov
movsb
jecxz
and
loopne
icebp
shufps
push
pop
aaa
adc
mov
adc
call
popl
mov
pusha
add
wbinvd
test
or
push
or
hlt
sub
xchg
cmpsl
push
inc
pusha
rcl
jo
adc
dec
pop
or
mov
or
out
pusha
fcomps
icebp
inc
repnz
pusha
add
lret
inc
daa
hlt
jl
cmp
inc
mov
loope
mov
addr16
pop
add
push
popa
insl
xor
sub
sbb
sbb
add
ljmp
sbb
xor
cmc
insl
pusha
in
mov
mov
inc
clc
pusha
fdivs
les
and
adc
cli
lock
mov
xchg
loopne
pop
rcrb
adc
jl
sub
pusha
shlb
jecxz
arpl
xacquire
and
stos
mov
mov
or
lret
popa
inc
push
mulb
addl
andb
popl
cmp
addr16
pop
add
jbe
push
xor
sub
fldt
cmpsl
sbb
cmp
pop
mov
idiv
shl
mov
mov
insl
cmp
push
sub
xor
outsb
fisubrs
aad
xchg
jae
mov
add
aad
xlat
cmp
clc
add
adc
cmp
push
loopne
inc
xorb
pop
push
js
fmull
jne
js
rorb
xor
popa
out
lock
xchg
inc
push
nop
inc
adc
aam
daa
jne
insb
mov
repz
jnp
sahf
pop
add
xorb
add
lods
into
rcrb
rcr
sbb
add
mov
inc
lods
or
mov
adc
add
sbb
and
xor
popl
incl
popf
hlt
jl
push
not
outsl
mov
lods
leave
xchg
pop
inc
cmp
inc
or
adc
std
sti
clc
mov
mov
lock
pop
jnp
les
cmp
cmp
std
cli
cmp
rolb
add
push
dec
sti
xor
dec
loope
push
cmc
pop
push
test
xor
push
or
popl
xchg
rolb
add
sub
sub
xor
out
mov
add
decb
ja
js
sub
popf
dec
shr
leave
adc
mov
adc
xor
fstpl
sub
pusha
out
xor
and
dec
lock
insl
adc
adc
ss
mov
pop
dec
clc
in
jo
icebp
jge
jl
adc
sub
test
mov
sbb
add
push
sarl
std
push
popl
xchg
sarb
repz
push
add
and
push
ds
dec
mov
ss
pop
clc
cwtl
inc
adc
scas
xor
dec
bound
mov
and
lret
jl
sub
dec
xor
std
pop
loopne
and
aaa
sbb
decb
mov
call
sbb
orl
push
movsl
fcomps
dec
pop
pop
xor
das
jge
adc
push
mov
adc
daa
pop
add
add
sub
fsub
mov
sbb
pop
inc
and
dec
xor
sbbb
sub
cmp
add
adc
lock
xchg
and
push
loopne
insb
xchg
and
inc
sbb
inc
fnstsw
mov
fisttps
fcoms
pop
xor
ja
jge
push
popl
stos
mov
js
pop
jnp
call
mov
push
mov
jecxz
or
push
ja
shrl
seto
leave
pusha
and
rorb
movsb
rclb
rcl
enter
jge
pop
dec
jo
icebp
outsb
mov
sbb
mov
xchg
xor
xor
dec
jl
or
stos
push
xor
std
dec
push
jbe
mov
xchg
fdivrp
fwait
or
add
sbb
jnp
cmpsb
fadds
test
xlat
add
xchg
mov
int3
fnstenv
sbb
mov
pusha
inc
outsl
pop
out
dec
int
sti
nop
sbb
mov
shl
les
pop
test
push
push
mov
xchg
out
adc
lock
fwait
cli
and
push
stos
rol
xchg
add
add
xor
mov
sbb
cli
cmovb
dec
sti
and
test
or
clc
sahf
ss
mov
adc
ret
and
fwait
mov
inc
ds
xor
pusha
rcr
sbb
sbb
popl
daa
mov
adc
movups
mov
pop
dec
jnp
loopne
sti
mov
pusha
push
scas
inc
mov
pop
lock
add
dec
loopne
clc
scas
orb
mov
adc
mov
push
pop
and
cmpsb
push
mov
dec
arpl
mov
mov
addb
mov
sbb
push
test
addb
cmovno
add
in
call
jb
sbb
sbb
mov
aaa
dec
andl
push
lods
dec
addr16
jo
xlat
std
and
inc
dec
push
filds
movsb
pop
dec
sub
inc
rol
in
mov
pusha
fadds
push
adc
xor
test
sub
mull
cmpsl
pusha
add
hlt
ds
sarb
or
dec
mov
lock
nop
cmp
push
pusha
lock
cs
pusha
ror
enter
inc
and
mov
push
push
js
adc
cmp
sub
mov
xchg
inc
and
cmp
rorl
aaa
push
push
addr16
in
xor
xlat
imul
lds
ja
insb
pusha
jae
ss
xor
adc
pusha
and
dec
or
and
fwait
cwtl
sbb
notl
lock
and
cmp
pop
lods
pusha
mov
dec
add
pop
jl
sbb
lods
pusha
and
pop
and
xor
cld
cmp
mov
cwtl
dec
inc
jns
test
loop
jo
negl
out
mov
and
xchg
sub
daa
lcall
data16
xlat
gs
add
inc
pop
in
cmp
data16
sbb
scas
xor
adc
pusha
lcall
jp
lods
xor
xor
gs
xor
pusha
xlat
adc
pop
jmp
xor
inc
push
nop
xchg
inc
and
inc
xorb
aaa
inc
push
add
adc
popl
adc
mov
pop
sub
push
xchg
roll
rcrl
enter
and
inc
popa
push
js
mov
leave
cltd
xor
and
xor
jmp
outsb
push
add
add
cmpsl
or
dec
mov
add
pusha
inc
cmp
ja
iret
rolb
adc
ds
xchg
mov
sub
cmc
cld
inc
mov
cmp
adc
jle
and
xchg
xchg
in
cmp
aaa
fs
add
xlat
arpl
int3
test
bound
ja
dec
and
orb
push
mov
inc
mov
lahf
sub
imul
adc
push
in
cmp
mull
stos
test
xchg
cwtl
xor
push
fisubl
mov
pusha
mov
xor
insl
pusha
ficoml
add
or
xor
subb
shll
ret
aad
mov
push
mov
adc
jg
popa
mov
les
loop
mov
call
push
sbb
lods
sbb
adc
imul
sub
push
push
pusha
jno
xchg
bound
xchg
dec
movsb
push
inc
dec
mov
fwait
push
pop
dec
test
popl
and
vmptrst
adc
jmp
xor
ss
push
jne
andl
jnp
sbb
les
push
add
xchg
dec
xor
or
adc
mov
or
scas
ds
call
into
jns
inc
enter
inc
ja
mov
jns
pop
push
fadd
and
lret
pop
test
shlb
xchg
jl
dec
mov
xor
shrb
gs
and
and
aaa
mov
xorb
and
inc
ds
outsb
pusha
jp
sub
loop
inc
xorl
jge
push
les
cld
mov
xor
ds
and
or
cwtl
or
fiaddl
sbb
or
sub
pusha
shll
push
lahf
push
pop
rorb
clc
add
or
xchg
fsubr
adc
les
and
inc
sbb
or
push
xor
inc
mov
popf
or
test
cmp
movsl
xchg
das
or
mov
loop
in
insl
pushf
add
inc
sbb
lods
dec
add
pop
xor
mov
out
adc
and
arpl
cwtl
and
add
cmp
pop
je
add
sbbb
xchg
sbb
add
cmpsb
adc
das
push
and
loopne
push
add
inc
xchg
pop
test
cmp
pusha
dec
push
mov
add
cmp
push
pop
jecxz
in
filds
or
in
out
xchg
pop
pop
sbb
das
jle
cmp
js
add
rol
xor
cmp
xchg
shrb
sub
mov
pop
ret
nop
cmp
xchg
lods
add
add
lret
rolb
add
mov
popl
adc
mov
int3
pop
push
fcoms
adcl
in
sub
aam
shlb
add
push
pop
ficoms
adc
repnz
add
jmp
ss
add
sub
nop
push
or
adc
lahf
in
pusha
loopne
sbbb
fs
ds
jb
dec
jo
add
popa
clc
pop
pop
aaa
sub
hlt
mov
xor
adc
insl
addr16
cmp
sub
das
arpl
mov
rolb
fwait
fs
add
or
addr16
je
xchg
pop
repnz
fs
ret
cmp
sub
mov
rolb
fadd
xlat
xor
mov
jbe
roll
adc
lods
scas
pusha
cwtl
incl
mov
jb
mov
les
mov
or
out
inc
push
or
loop
andb
add
inc
in
mov
mov
cmp
mov
rol
jbe
jl
call
jnp
add
mov
xchg
ret
lods
icebp
std
sub
lcall
rol
xor
scas
mov
add
xor
xor
cmp
ret
jp
pusha
int3
fdivrl
pop
daa
add
xchg
xor
cltd
ror
xor
pop
call
dec
in
sub
sub
out
sub
adc
call
or
xchg
pop
mov
and
xor
es
push
push
jnp
cld
cwtl
enter
jecxz
push
cmp
adc
add
cmp
hlt
aaa
sub
inc
nop
pop
jle
sbb
inc
enter
test
lods
inc
in
mov
cmp
dec
test
xor
popf
std
jns
cld
add
sub
lock
xor
fs
xlat
xchg
inc
mov
xor
sbb
add
pushf
mov
sub
or
stos
xor
sbb
pusha
inc
mov
push
leave
mov
add
sbb
adc
aaa
test
inc
les
dec
decb
popf
mov
nop
cmpsl
xchg
push
sbb
notl
mov
aas
add
jg
mov
dec
xor
xor
jmp
push
or
lea
cmpsb
imul
cs
or
xchg
fs
pop
loope
ljmp
addb
push
cwtl
xchg
fs
push
shl
ljmp
movsl
or
roll
dec
out
or
int
sarb
iret
add
cmp
xor
cld
mov
cmp
mov
movsl
fs
fmul
in
add
xchg
int
adc
ja
mov
add
addb
fsubrs
adc
push
fldcw
push
mov
push
movsl
add
mov
xor
adc
lcall
sbb
add
jne
loopne
lea
inc
xor
mov
sbb
lods
dec
hlt
add
add
iret
sbb
movswl
loopne
ss
fstl
push
mov
push
ds
mov
or
loop
xchg
sub
mov
sbb
push
clc
and
leave
pop
mov
lret
adc
std
cwtl
jo
add
das
mov
mov
jmp
xchg
pop
add
movsl
stos
call
sbb
inc
sarl
cs
adc
jg
xchg
lock
jo
gs
add
push
jge,pn
loopne
das
xor
add
push
stos
push
sbb
jmp
push
les
enter
add
daa
pushf
icebp
jae
cmpsb
push
ficoms
addr16
add
or
and
mulb
or
push
cwtl
pop
shlb
into
pcmpgtb
and
inc
data16
add
or
lods
insb
mov
mov
push
les
insl
mov
xor
adcb
adc
lea
out
jecxz
rolb
popa
and
cmpsl
popa
mov
or
and
sti
and
add
stc
xlat
mov
in
mov
push
push
mov
pop
inc
pusha
cmpsb
rcrl
push
popf
gs
filds
and
loope
mov
mov
pop
and
sub
pusha
jge
add
leave
pop
xor
call
push
mov
jbe
pop
pusha
clc
xchg
mov
add
lods
addb
jns
pop
sti
loopne
push
add
les
shl
and
sub
jb
xchg
adc
clc
lea
pop
lods
jl
cmp
popf
ds
fs
adc
and
inc
imul
xorb
pushf
fcomps
mov
xchg
add
pushl
clc
jecxz
and
faddl
loopne
in
mov
cmp
add
mov
fwait
add
cmc
cwtl
mov
andb
in
inc
adc
lods
add
mulb
into
cmp
movb
std
sbb
add
dec
mov
xchg
dec
test
inc
jp
add
jbe
in
cwtl
xor
push
add
subb
in
jno
jns
jae
jp
adc
and
adc
leave
push
int
rolb
jno
ret
ljmp
jmp
or
and
add
mov
dec
add
mov
arpl
add
shrl
jl
and
out
mov
popa
sbb
cmp
shll
or
sti
popa
rolb
xchg
add
xchg
pop
cmpsl
jb
jno
cld
lods
sbb
mov
cmp
add
or
mov
jbe
pop
daa
shrb
xchg
adc
js
jmp
icebp
cmp
xor
sub
push
sbb
fiadds
cmp
xchg
adc
fiaddl
dec
enter
ret
add
int
add
inc
lea
cmpsl
add
xor
jg
add
repnz
add
lcall
xchg
call
inc
jp
or
out
inc
add
push
xchg
sbb
lods
pop
push
add
cmp
add
repnz
inc
sub
sbb
sbb
call
add
jae
mov
add
or
test
xchg
add
pop
xchg
mov
mov
add
fisubrl
mov
push
test
inc
call
arpl
mov
inc
xstore-rng
cmpsl
mulb
aad
cmp
jg
inc
cmp
push
add
pcmpeqd
jmp
xor
push
sarl
cs
mov
push
add
fbld
clc
lret
mov
shrb
cmp
add
pop
aad
fs
mov
inc
adc
test
push
add
pop
out
add
jns
dec
in
adc
bound
push
add
mov
push
std
sbb
iret
jp
mov
call
xchg
mov
sub
add
stos
push
mov
inc
mov
call
mov
xrelease
gs
add
xor
and
inc
add
adc
loopne
pop
dec
sbb
inc
lret
inc
sahf
roll
and
or
test
xchg
mov
into
hlt
pop
and
push
and
push
add
orl
jne
nop
pop
js
add
ss
push
loope
notb
and
add
fadds
mov
add
movsb
dec
cs
mov
test
aad
les
add
and
inc
cwtl
rolb
push
jge
fbstp
cld
scas
adc
cmp
add
inc
xchg
add
mov
adc
jbe
dec
add
xlat
push
test
adc
xchg
lea
sbb
cli
rclb
xchg
or
mov
xchg
jno
add
test
js
scas
sub
lock
in
vmovd
roll
nop
sub
cmc
adc
add
outsl
sbb
lahf
sbb
cwtl
mov
and
loope
std
jns
jnp
cmpb
and
add
xor
pusha
in
fadds
jle
and
inc
and
cmp
mov
jno
repz
popf
sbb
lret
sbb
adcl
shll
sbb
shr
fiadds
and
testl
out
push
and
dec
filds
adcl
sub
add
aaa
cmp
push
add
ja
les
or
repnz
mov
mov
ret
push
nop
stos
notl
sbb
add
mov
adc
loopne
cwtl
adc
adc
add
or
insl
in
in
icebp
outsl
movsl
aaa
fildl
add
clc
out
mov
cs
pop
mov
pop
aaa
test
add
je
cmp
cmp
jnp
hlt
lahf
fcmovnbe
jmp
repz
add
mov
cmp
loop
movsl
push
lods
ljmp
or
xchg
or
insl
or
lret
add
or
out
loopne
xorl
xchg
pushf
pop
jmp
add
roll
or
dec
fildll
push
data16
xor
icebp
in
fadd
fcoml
fstl
sbb
xor
mov
fdiv
call
jecxz
scas
les
mov
ror
lods
test
add
test
gs
mov
adc
inc
inc
dec
dec
pop
mov
dec
lods
out
int3
loop
es
lea
add
in
lahf
dec
pop
mov
mov
add
test
jmp
lret
call
insb
add
jl
aas
cmp
dec
ds
and
dec
push
mov
inc
push
inc
push
outsl
mov
push
sub
mov
mov
jle
push
pop
test
test
bound
add
jmp
shl
and
addb
inc
leave
mov
mov
add
pop
and
add
fs
mov
xor
jmp
popa
jbe
pop
cmp
pop
xorb
adc
add
push
movsb
xchg
jo
adc
sbb
pop
mov
fdiv
repnz
mov
jecxz
insb
fdivs
loopne
mov
lahf
dec
in
inc
mov
loop
cld
add
sub
add
aam
push
mov
test
sub
ficoml
cmp
and
pusha
push
mov
bound
inc
push
mov
gs
icebp
add
cld
pop
inc
xor
out
loopne
add
es
mov
in
rclb
and
stc
xor
mov
pop
inc
mov
mov
sbb
pop
dec
add
movl
stc
xlat
mov
shll
push
and
jne
pop
inc
clc
in
and
addb
cwtl
add
cld
daa
jl
jnp
and
cmpsl
push
lods
dec
inc
or
ljmp
mov
mov
sbb
mov
xchg
mov
push
or
xor
dec
mov
clc
cltd
add
jno
sub
arpl
jmp
clc
rcl
out
pop
adc
fildl
push
sbb
add
pop
andb
pusha
adc
fmuls
mov
call
push
icebp
dec
repnz
mov
leave
add
sub
sbb
js
pop
outsb
int3
sub
cli
add
jns
add
test
and
fsubs
mov
add
stos
test
add
mov
fxch
add
dec
dec
dec
scas
pop
push
cmp
lahf
in
mov
adc
pop
and
or
add
adc
inc
mov
mov
adc
lahf
sub
jbe
xchg
mov
rcrl
jae
cmpsb
or
rcl
pop
rclb
rcrb
or
jns
sub
mov
stc
divl
outsl
cmc
jge
add
lods
add
in
jns
loop
dec
mov
nop
mov
jmp
insl
add
xchg
sub
jecxz
sbbl
fs
fisubrs
sbb
lock
testl
cmp
rcrb
rclb
fimull
test
imul
pop
dec
fmulp
cmc
jne
pop
lock
testb
scas
pusha
jo
push
pop
sbb
jl
adc
mov
add
mov
xor
orl
cmp
fstl
xchg
sbb
push
adc
pop
setge
or
hlt
or
out
cs
jp
jne
pop
jle
dec
adc
push
sbb
dec
clc
les
test
add
cmpl
add
xlat
popa
sub
push
imul
mov
adc
ljmp
cmp
movsb
subl
lcall
cmp
daa
and
pop
faddl
inc
jae
add
orb
es
out
cmp
fmuls
inc
add
dec
repz
inc
cmp
xchg
mov
das
jae
push
popf
mov
js
and
arpl
out
cmp
ss
mov
mov
mov
mov
or
add
adc
fbstp
pop
iret
lock
add
mov
cmpl
out
enter
popa
jne
xor
push
mov
lods
das
cmp
call
add
movb
fcomi
inc
dec
repz
data16
pop
ja
sub
cmp
addl
icebp
sahf
inc
arpl
roll
xchg
repz
jns
frstor
popf
jb
in
xchg
or
mov
mov
sbb
mov
loope
cmp
leave
pop
aaa
dec
cmc
add
dec
pop
sldt
les
add
mov
pop
stos
lahf
cmp
jge
dec
les
jns
push
xor
clc
pushw
stos
std
add
mov
jge
sbb
inc
cmc
mov
addr16
sub
stc
xchg
add
divb
lret
loop
push
xchg
in
rclb
jnp
cltd
push
sbb
psrlw
insb
sbb
shlb
add
addr16
jnp
lock
mov
int
sbb
sub
out
test
add
rcll
scas
stos
mov
gs
cltd
xor
inc
loopne
shlb
sahf
add
pop
int3
aaa
add
pop
bound
jbe
add
and
or
mov
cmpsb
out
pusha
mov
in
leave
inc
fildl
add
xchg
enter
adc
rolb
popa
inc
call
xor
enter
loopne
je
add
cld
jae
lds
scas
add
stc
sbbb
loopne
push
sbb
js
mov
add
leave
dec
cli
cmp
push
call
add
jne
sub
mov
data16
gs
or
pushl
mov
push
xchg
pop
adc
in
add
and
rcll
clc
sbb
mov
jg
out
fwait
add
movsb
push
push
icebp
ret
adcl
or
aaa
pop
lret
add
xchg
lods
push
jge
pop
test
xor
sarb
clc
dec
xchg
add
inc
mov
add
dec
adcl
push
push
mov
sub
add
incl
xor
fdivs
lret
xchg
js
out
or
and
in
call
pop
cmp
adc
dec
aad
add
xor
pop
and
jbe
cwtl
repnz
sub
add
lret
imul
pop
in
push
jb
mull
fdivs
and
xchg
mov
stos
add
aaa
jecxz
test
inc
and
add
or
add
pop
pop
repz
fisttps
mov
fnstsw
mov
insb
mov
out
lock
add
scas
sub
inc
bound
out
in
in
mov
sbb
orb
mov
or
dec
shlb
lcall
shl
sbb
dec
add
pop
mov
xor
cmp
jl
xor
nop
das
call
loope
lret
in
inc
and
dec
add
cmc
popa
fstps
andl
arpl
cmp
pop
mov
filds
ficomps
and
sub
idivl
cld
sbb
pop
ss
push
dec
xchg
adc
push
cmpsb
test
push
push
cmpsb
inc
cld
xorl
inc
mov
mov
addl
adc
shlb
in
lahf
mov
add
push
pushf
mov
int
xchg
push
ja
jmp
or
clc
leave
or
out
cwtl
pop
in
lret
xchg
push
int
testl
cmp
test
insb
and
xchg
sbb
push
hlt
cmpsb
scas
add
test
lock
mull
pop
cld
cmp
shlb
jg
sub
loopne
adc
test
sbb
in
outsl
sbb
es
ja
jg
adc
les
inc
and
push
int3
and
cs
jbe
popa
sbb
imul
and
fldcw
adc
push
lcall
jecxz
adc
mov
push
adc
mov
aas
pop
adc
daa
add
cmp
pop
inc
adc
mov
mov
jae
inc
xchg
cs
push
pusha
add
xor
frstor
fisttpl
fwait
or
pop
nop
mov
sub
adcb
mov
mov
pop
pusha
push
xlat
mov
loopne
cli
adc
xlat
lahf
ret
sarb
cmc
scas
mov
and
cmp
ret
sbb
bound
mov
sbb
inc
jae
jmp
add
pop
xchg
leave
xchg
je
and
xor
jmp
ficoms
lods
add
test
cwtl
add
lods
jae
or
xchg
out
hlt
push
int
push
test
repz
add
jmp
sbbb
and
xchg
adc
pop
push
jg
xor
addr16
shrl
and
inc
nop
and
fmull
push
xor
mov
rolb
sbb
repnz
rcrl
in
xchg
adc
je
xor
mov
out
mov
mov
bound
popa
bound
les
sub
aas
lods
or
adc
push
xor
adc
jo
adc
add
and
adc
sbb
fimuls
or
mov
jmp
lcall
orb
enter
and
add
push
jne
mulb
or
test
mov
mov
cli
push
lcall
jge
cmp
xchg
jecxz
and
mov
cmp
sub
sub
ficomps
adc
pop
scas
xlat
or
inc
adc
xchg
dec
cwtl
mov
test
dec
hlt
push
add
bound
add
mov
mov
add
lea
sub
fadd
cwtl
or
add
jo
icebp
xchg
inc
and
cmpsb
int3
add
daa
inc
mov
push
mov
sub
xorb
cs
inc
add
adc
popa
jp
ret
xor
and
imulb
int3
and
test
les
pop
shlb
pusha
and
std
mov
mov
sbb
dec
xor
and
dec
popa
add
enter
sbb
cwtl
cmp
addr16
aaa
mov
xor
sti
mov
dec
mov
shrb
in
cltd
rol
js
std
add
lcall
stos
shr
aad
pop
sub
mov
xchg
xor
rol
sub
xchg
pop
lods
adcb
les
push
mov
jp
inc
mov
add
dec
push
and
adc
movsl
cmpsb
and
in
xchg
arpl
subb
aad
add
leave
mov
test
sub
sbb
xchg
inc
add
and
loop
outsl
ret
sub
add
inc
stc
stos
insl
pusha
push
pop
inc
mov
xor
sbb
nop
cmp
or
call
jno
mov
pop
aaa
or
mov
cmp
shlb
or
cmpsb
adcl
add
xchg
pop
sbb
pop
jbe
add
mov
lcall
insb
test
and
lock
sbb
adc
test
out
sub
imul
sbb
dec
fs
clc
or
les
cmovo
das
loopne
out
sub
shrl
negb
frstpm(287
pop
xchg
xchg
insb
arpl
and
adc
daa
out
fisubs
and
popf
lods
adc
adc
daa
jb
pop
inc
xchg
int
cmp
shlb
jmp
cmp
mov
cmp
or
fcomip
pusha
in
mov
daa
xchg
mov
or
push
fnstsw
mov
xor
add
cmpsb
lds
loop
xchg
incl
xor
lock
in
push
jmp
pop
xchg
xchg
sbbb
psrad
add
xor
cmp
add
das
xor
ret
ret
and
pusha
add
out
incl
fcomp
cld
mov
nop
and
in
dec
inc
or
ss
jo
sbb
cmpsl
mov
bound
push
repz
clc
xchg
cltd
add
lahf
aaa
adc
frstor
outsb
lcallw
std
inc
dec
arpl
mov
cmp
lret
dec
icebp
mov
daa
mov
xchg
pop
pushf
pop
js
xor
fdiv
loop
fwait
sahf
pop
outsl
xlat
push
or
mov
mov
xor
cmp
mov
je
filds
cmp
repz
and
dec
xor
push
arpl
adc
sbb
or
or
fnstenv
fistpl
cmp
sbb
xchg
dec
add
xchg
clc
lcall
add
or
add
pop
xlat
dec
leave
xchg
adc
and
imul
push
inc
add
cwtl
jo
mov
out
cmpsb
icebp
xchg
in
pusha
test
fistpll
add
lret
cmpsl
addb
inc
mov
pop
add
fwait
pop
aaa
cmp
dec
xchg
xor
push
mov
test
fmuls
enter
les
jnp
add
dec
add
das
mov
int3
in
add
jp
lret
ja
lea
hlt
bound
xor
dec
rolb
xor
pop
ds
test
xor
arpl
add
mov
add
jbe
lahf
rcrb
mov
scas
sub
add
inc
fcmove
and
sar
add
adc
clc
cwtl
add
repz
pop
push
lea
add
in
add
pop
fs
outsb
or
std
lahf
dec
cmp
loopne
aam
add
mov
pop
cwtl
loope
mov
les
and
cltd
adc
mov
clc
mov
ljmp
enter
call
stc
lods
push
inc
mov
lds
leave
jbe
sbb
roll
inc
jle
cli
rcrl
mov
inc
push
xchg
mov
sbb
addb
call
cmp
or
mov
add
add
scas
stos
add
in
testb
fistpll
jp
pop
das
stos
add
lods
fnstsw
cs
add
pop
xorl
mov
mov
and
adc
dec
xchg
mov
arpl
xchg
add
and
outsl
and
xchg
dec
jl
jne
lock
popa
mov
inc
adc
insl
mov
add
jne
cltd
jp
mov
mov
or
xor
push
mov
rorl
jge
push
sahf
or
jmp
xchg
add
push
mov
add
pop
sbb
roll
add
movsl
or
roll
ds
add
adc
clc
das
sbb
dec
or
and
add
testb
lds
push
dec
add
add
pop
cmp
cmp
xorl
cld
test
add
popf
popa
sbb
lcall
aaa
push
push
push
pop
int
aas
add
out
or
call
push
cld
movb
pop
in
aam
mov
scas
mov
adc
adc
pop
add
add
inc
jo
xor
sub
cmp
jl
sbb
call
out
daa
sub
out
lea
add
cmp
sub
mov
sub
les
popa
ficoml
imul
add
inc
scas
stc
aas
mov
call
cmp
fldl
sti
ja
pop
fsubs
xor
shlb
in
icebp
movsl
movb
xchg
insl
xchg
xchg
stos
jb
add
push
mov
or
insb
nop
dec
push
jg
and
push
inc
add
pop
inc
adc
push
xlat
pop
imul
sbb
push
outsl
add
sub
xchg
add
add
pop
in
add
mov
xchg
pop
clc
rol
jp
sbb
nop
mov
sub
icebp
lock
fiadds
or
call
ja
mov
pop
loop
push
or
std
pusha
loop
xchg
jg
sub
jb
dec
gs
sub
nop
push
lea
or
mov
pop
stos
adc
sub
outsb
stc
mov
adc
shrl
nop
push
xor
sbb
hlt
fxch
add
mov
add
subl
xchg
repz
or
loope
cvtps2pd
mov
sub
xor
cs
int3
jae
addb
mov
in
pushf
adc
add
xor
add
insb
cli
mov
add
push
mov
pop
je
xor
inc
mov
stc
jnp
mov
mov
xchg
mov
pusha
stos
clc
add
sub
movsl
popa
and
ss
int3
jecxz
jno
adc
xchg
sub
cmp
cmp
mov
sahf
add
and
lds
call
std
test
xchg
jge
xchg
das
push
mov
mov
sbb
lret
add
dec
aam
shrl
in
xchg
add
sbb
push
pop
inc
cmpsl
sarb
mov
inc
inc
mov
xchg
es
sub
iret
mov
push
or
lea
cmp
fmull
add
adc
jo
into
inc
repnz
rclb
fsubrl
push
add
pop
xor
and
mov
stos
fildl
lea
push
fnsave
inc
les
call
inc
mov
sahf
xchg
test
in
mov
add
cmp
sarb
mov
jmp
add
fsubrp
or
sbb
hlt
jae
or
ds
int3
and
pop
sub
out
jge
mov
lea
add
or
and
pop
lret
rolb
pop
mov
cmpsb
jns
add
data16
or
inc
add
add
sub
pushf
fsts
jo
push
add
je
inc
aas
into
gs
pop
outsb
push
call
dec
es
add
stos
lret
loopne
insb
cmp
add
pop
jp
clc
add
pop
inc
adc
xor
lret
mov
cltd
test
shlb
lock
add
inc
adc
or
orl
xor
cmp
sbb
add
js
pop
rcl
call
push
add
test
fsubl
mov
add
mov
int3
addb
lahf
add
and
popa
xchg
adc
or
cmp
imul
test
negb
js
add
dec
xchg
pop
push
or
cmp
or
mov
int
or
pushf
pop
pop
jp
mov
cs
ret
adc
out
or
enter
xlat
sti
jle
psllw
mov
adc
mov
decb
test
mov
ret
add
fldl
pop
fmull
sbb
add
rclb
inc
xchg
bound
cwtl
add
dec
or
mov
add
sbb
cmp
daa
cmpsb
movsl
add
rcrb
pop
movsb
repz
pop
and
sub
test
or
cs
wrmsr
jbe
out
std
mov
aas
adc
rcrl
add
addr16
cwtl
pushf
scas
add
inc
nop
sbb
mov
or
mov
xchg
popf
cmpsl
push
pop
pop
xor
and
inc
cmpb
setne
jo
insl
mov
lret
pusha
pop
push
aas
cmp
clc
sub
nop
out
cmpsl
leave
mov
out
mov
popa
and
push
or
push
mov
imul
add
gs
aam
andl
ret
push
add
int3
dec
cmpsl
and
stos
add
jmp
sbb
push
and
and
out
inc
add
mov
and
add
or
add
pop
movsb
enter
lock
test
test
bound
add
addb
fmull
loopne
add
inc
outsb
cld
shlb
add
movb
test
pusha
mov
mov
sbb
ret
cmp
pusha
leave
sbb
jo
xlat
add
repz
sbbl
jg
adc
lock
loopne
dec
lea
sbb
inc
fadd
sub
fwait
lock
dec
mov
pop
xchg
daa
lret
xchg
push
addr16
rol
pop
jae
add
cmc
cmp
sahf
mov
mov
add
dec
add
push
shl
pop
mov
add
lock
enter
add
lods
sbb
pop
xor
mov
add
and
cmc
into
dec
pop
xchg
add
and
mov
int
outsl
mov
mov
and
sahf
add
les
loope
xchg
fsub
jge
sub
jae
fiaddl
les
push
mov
add
ret
mov
jae
daa
mov
ljmp
jns
enter
add
out
mov
pop
je
int3
xchg
jae
cmp
jbe
addr16
shll
lcall
inc
push
jns
rorb
sub
rorb
fnstcw
jecxz
mov
adc
add
push
jge
pusha
andl
dec
fldenv
out
inc
push
pusha
cld
add
out
jb
sub
xchg
pop
loopne
add
jne
hlt
test
pop
out
jne
add
out
push
xchg
push
lock
aam
sub
lds
sub
mov
aam
adc
pusha
inc
jp
add
push
jmp
fld
and
aad
xor
add
adc
call
jo
ljmp
xor
mov
arpl
push
clc
or
pop
xor
add
rcr
sbb
mov
aad
fcoms
aas
loopne
test
dec
add
xchg
shlb
xchg
add
xor
xor
fadds
xchg
std
test
fldenv
push
test
repz
sbb
dec
push
jne
add
add
bound
push
pop
cwtl
push
pop
sub
int3
add
rcrb
push
in
rorb
or
mov
scas
les
dec
scas
loop
mov
mov
inc
dec
flds
dec
and
arpl
shl
std
xlat
add
push
aas
insl
mov
lret
div
xchg
loop
push
pop
pop
ss
pusha
xchg
rclb
pop
add
cmp
ds
je
lahf
cmp
jo
mov
mov
daa
or
addl
mov
inc
popf
mov
cmp
mov
mov
dec
into
add
or
stc
stc
aas
xor
arpl
test
and
fsubrs
mov
or
push
and
fimull
pop
add
jecxz
loopne
mov
add
push
jle
mov
sub
int3
jae
dec
mov
lods
add
arpl
sbb
jnp
movsb
push
enter
mov
mov
mov
mov
add
inc
out
fwait
cmc
xchg
mov
and
cmpsb
out
add
sub
insb
dec
cmp
sbb
mul
or
push
lea
mov
lahf
je
xchg
in
fs
pop
mov
in
push
or
cmpb
test
hlt
push
pop
les
aam
dec
int
add
sub
lahf
repz
mov
push
in
and
sub
mov
mov
push
popl
cmp
mov
lds
sbb
call
mov
or
fsubrp
cmp
pusha
xchg
loopne
pop
inc
out
jb
jns
int3
insb
loopne
mov
insl
lret
xchg
cmp
loop
push
add
pop
sbb
subl
cmp
out
jmp
or
lea
clc
push
add
bound
pop
nop
inc
push
es
rcr
cmp
loopne
arpl
das
mov
pop
push
inc
add
scas
cs
shlb
xor
mov
in
jp
add
xor
out
in
xor
and
testb
call
test
loopne
push
jb
int
push
mov
sbb
jmp
or
leave
add
push
xchg
imul
xchg
testb
loopne
sbb
mov
pop
pop
mov
inc
inc
aaa
mov
fsts
sbbl
add
pop
dec
mov
add
mov
sub
fwait
movsb
xor
cwtl
push
cmp
aas
dec
dec
popf
xchg
push
inc
push
sbb
lds
sub
inc
leave
popf
add
cmpsb
dec
pop
arpl
in
fisttps
inc
cld
movsb
add
decl
or
mov
xor
add
adc
jmp
int3
add
lea
mov
xchg
sbb
stos
loopne
pusha
shrb
enter
mov
or
rclb
jbe
add
push
sbb
inc
ret
xchg
jl
add
jle
cld
ret
add
pushf
adc
scas
repnz
enter
mov
add
icebp
in
push
mov
and
or
sub
test
rclb
add
push
pop
ljmp
dec
ret
add
rclb
mov
jnp
out
dec
addl
mov
js
push
mov
mov
imul
jle
fs
sbb
jo
dec
nop
out
jno
xlat
lds
sbb
js
cmpl
stos
jne
sbb
testl
clc
adc
in
stos
enter
imul
adc
mulb
mov
cli
adc
jns
je
add
arpl
ja
ficoms
test
add
dec
jge
add
leave
cmc
mov
pop
add
in
in
fadds
setb
and
and
dec
mov
sub
cmpsl
cmp
andl
and
add
xor
push
jbe
add
gs
adc
pop
xchg
pop
in
out
xchg
mov
orb
repnz
jp
and
mov
shll
push
inc
ffreep
stos
cmpsl
mov
leave
jg
add
add
push
out
add
and
add
push
addr16
in
mov
add
pop
or
mov
xlat
or
rcl
cmpsb
scas
add
push
mov
xchg
movsb
jecxz
mov
cmp
lea
add
sbb
dec
loopne
pop
mov
nop
sbb
dec
ffree
inc
aas
ds
lock
notl
push
ja
or
les
and
sub
idiv
add
mov
sahf
test
pop
fwait
inc
adc
fsubrl
fmul
mov
rolb
insl
leave
push
cli
add
mov
pop
push
and
popl
je
popf
repnz
ret
push
cmp
add
adcb
enter
imul
mov
add
inc
iret
cli
mov
cmp
and
push
mov
pop
add
xchg
add
sub
xchg
adc
popf
nop
dec
adc
xlat
sbb
into
add
push
jb
leave
mov
pusha
fsubl
sub
repz
aam
cwtl
mov
inc
xchg
and
aad
iret
out
pop
jne
dec
sub
ds
dec
or
add
out
cmpsl
popf
xchg
fnstenv
xchg
hlt
stc
test
movsl
add
in
fadds
mov
and
insl
repz
test
arpl
bnd
mov
cmp
jp
pop
in
popf
mov
cs
pusha
mov
daa
add
sub
add
xchg
add
xchg
xor
add
pop
mov
sbb
mov
call
sub
insl
mov
or
push
in
in
bound
pop
cmpl
fnsave
mov
pop
rclb
stos
sahf
or
nop
loop
adcb
inc
inc
add
cmp
add
mov
sub
out
and
testb
test
dec
cs
pop
jl
addb
inc
mov
in
dec
in
or
test
nop
or
and
lcall
or
dec
jp
jbe
jle
out
xchg
add
inc
loop
outsb
add
sub
out
mov
cmpsb
push
push
jp
or
add
jno
aad
sahf
dec
fdivs
in
mov
movsb
add
cmp
dec
pop
mov
mov
addr16
rolb
mov
je
push
jp
pop
cld
mov
inc
cli
shrb
xchg
add
pop
push
inc
ljmp
jae
inc
dec
add
push
pop
call
insb
pop
pop
into
cmp
mulb
insb
jb
and
shll
and
adc
xor
pop
add
add
fcmovnu
nop
out
rorl
outsl
or
pop
lods
inc
bound
lahf
filds
sub
insb
cmp
mov
xor
cmp
test
rol
mov
add
stc
xchg
dec
test
bound
add
mov
mov
mov
or
es
sub
mov
adc
pop
sbb
hlt
or
mov
lock
fisttps
and
adc
mov
and
mov
push
sbb
inc
ja
mov
in
push
add
lods
js
out
dec
add
jbe
adc
push
pop
pop
imul
sub
popa
aaa
sub
add
jo
lret
sbb
push
mov
xchg
jmp
mov
les
icebp
push
fisttpll
or
test
fadds
aaa
xlat
repz
adc
inc
icebp
out
test
dec
pop
add
or
popa
pushf
xor
sub
lahf
xor
adc
add
jge
xor
fnsave
jmp
xor
sub
repz
clc
lds
loopne
xor
andl
insb
push
and
add
push
pushf
jb
cmp
fdivl
jb
add
nop
cmp
and
jl
sbbb
sti
mov
xor
cltd
out
pop
add
mov
cmpl
or
icebp
adc
add
leave
push
int3
dec
lds
and
inc
add
sub
add
ljmp
xor
outsb
dec
sub
aaa
push
or
jmp
push
and
xor
jo
cld
jmp
insl
popa
js
xchg
std
add
pop
xchg
test
lahf
pop
add
jne
add
adc
shlb
jmp
pop
add
or
test
add
cmp
push
mov
jp
dec
jns
das
pop
cwtl
push
cmpsb
add
mov
pop
movsl
or
mov
sahf
and
push
mov
insb
stc
sub
mov
mov
pop
fdivl
and
add
xchg
pushf
mov
mov
xor
xchg
cmp
inc
lret
adc
lock
clc
or
push
mov
data16
add
div
sarb
push
xor
popa
test
mov
jae
jnp
mov
xchg
lods
bswap
xchg
cmpsl
into
push
out
out
sub
outsl
cwtl
jbe
fists
dec
test
dec
inc
cmp
mov
pusha
repnz
sub
loop
notb
dec
jl
rcrl
xor
inc
mov
jno
pop
mov
or
inc
xor
inc
push
je
mov
cmp
orb
or
mov
icebp
add
sbb
jbe
fsubrl
cmp
pop
dec
push
and
push
cmpl
subl
adcb
and
cmp
scas
mov
call
mov
inc
push
and
stos
cmpsl
add
sub
add
mov
jmp
or
adc
mov
pop
pop
loopne
dec
in
add
add
leave
sbbb
orl
and
bound
add
lea
jle
cmp
in
adc
add
pop
cwtl
aad
lds
pop
cmc
ja
xor
insl
sahf
add
imul
xchg
add
or
out
icebp
add
fisubrl
hlt
push
test
add
pop
subl
mov
enter
fisttpll
dec
sub
fidivrs
fdiv
adc
push
pop
sub
enter
shl
pop
jb
repz
xchg
xlat
and
fisttpll
push
and
adc
adc
add
mov
test
xchg
and
jae
aas
adc
inc
adc
xchg
hlt
push
xor
add
fildl
mov
add
push
in
dec
mov
or
in
jge
aaa
lods
inc
aam
inc
int3
or
loop
insb
fsts
cmp
cmp
mov
jno,pt
clc
add
and
test
add
iret
pop
push
lret
adc
mov
add
es
jb
jbe
shlb
rcl
mov
es
cmpsl
mov
inc
pop
enter
inc
cmp
mull
stos
cmp
movsb
push
fistps
add
mov
addl
mov
inc
pop
mov
inc
ss
dec
mul
adc
jge
sbb
push
int
jnp
jg
mov
push
add
ret
loopne
push
cld
push
out
add
push
mov
sbb
cmpsb
add
repnz
rorb
add
pop
mov
sub
jge
pop
loop
sbb
or
in
sub
or
inc
mov
jnp
dec
rorb
or
arpl
mov
pop
mov
pushf
or
dec
cmp
sarl
shlb
push
and
sub
inc
adc
add
ss
sbb
lock
fsubrs
test
js
add
jg
push
stos
orb
add
aas
jle
xor
mov
xchg
shrl
inc
js
and
add
mov
mov
js
push
test
push
out
add
dec
push
mov
cmp
pop
xorb
cmp
push
pop
push
pop
mov
je
mov
mov
lock
adcb
cli
test
push
push
insb
adcl
mov
xor
add
fdivrl
orb
dec
loope
add
or
lea
pusha
fsubrl
add
jb
ret
imul
cmp
and
mov
add
jp
inc
shl
add
cwtl
dec
aas
jb
sub
mov
rcrl
adc
xchg
pop
rcrl
sbb
js
add
mov
or
cwtl
bound
adc
and
xor
jo
pop
aas
inc
bound
lret
add
adc
jl
add
iret
inc
sub
mov
xor
or
sub
sub
dec
adc
push
inc
push
fcmovb
pop
dec
fcoml
stos
or
mov
out
add
aam
mov
cmc
lock
imul
add
sub
xor
push
xor
sbb
jl
add
mov
xor
pop
pop
je
cwtl
sbb
or
das
pop
clc
cmp
pusha
cmpsb
cwtl
mov
xor
add
icebp
add
push
cltd
inc
cmpsb
orb
out
push
arpl
pop
xchg
adc
push
pop
mov
in
outsb
dec
loop
shrl
dec
jge
add
fwait
mov
mov
shrl
testb
loop
bound
inc
lcall
add
mov
dec
int
pop
in
sbb
lock
mov
sub
imul
movsb
shl
xor
sub
and
sbb
mov
imul
inc
add
push
pushf
adc
jo
pusha
mov
push
addr16
push
cmp
inc
mov
aad
pop
xchg
cmc
in
mov
std
lea
jp
cmp
push
test
adc
lds
sub
mov
ljmp
dec
imul
call
lods
gs
pop
add
dec
xchg
inc
or
xor
mov
jns
cld
arpl
and
add
and
stc
push
lret
sub
flds
ret
repz
jge
add
adc
dec
adc
pop
adcb
lds
inc
mov
jno
push
add
mov
aam
addb
orl
testl
mov
gs
push
lds
adc
and
call
divl
mov
mov
int3
fs
cs
dec
outsl
add
mov
inc
pop
push
cmp
add
rclb
or
mov
lahf
pop
dec
and
addr16
rcrb
daa
shlb
xchg
xchg
cmp
stc
std
jnp
testl
dec
scas
sub
add
mov
sbb
pop
cmp
pop
sar
arpl
dec
sbb
add
dec
mov
movsb
lfs
mov
lret
hlt
sub
or
add
fucomp
cmp
mov
mov
fcmovb
dec
xor
pop
pop
pop
lds
pop
xlat
push
rol
cmp
sub
or
fwait
int
cmpsl
jge
sti
enter
add
sbb
in
cwtl
stos
sub
sub
leave
mov
sahf
inc
xchg
sbb
xchg
sub
sbb
jb
fwait
push
loop
mov
pop
int
movsb
addb
add
push
add
jns,pn
or
or
add
xor
cltd
jae
pop
call
or
rolb
jo
jbe
imul
pop
push
add
xchg
dec
add
test
out
jp
fdivrl
or
sbb
gs
pusha
hlt
and
aam
pop
and
ret
lds
cmp
add
mov
pop
in
data16
and
inc
cmp
inc
adc
push
outsl
pusha
jae
or
scas
jle
cmc
ret
verw
loopne
xor
mov
shlb
and
xor
jo
add
test
std
pusha
pushl
and
add
je
jge
dec
and
xor
xchg
jbe
jnp
outsb
mov
mov
pop
cwtl
push
adc
lret
loop
adcb
cltd
roll
sub
mov
mov
jle
lret
sets
in
xchg
jns
add
aaa
arpl
add
sbb
dec
cmpsl
xchg
mov
sbbb
push
jnp
add
nop
insl
jp
mov
sbb
mov
add
xchg
mov
add
cmpsl
xor
leave
mov
pop
sbbb
nop
outsl
xchg
add
push
pop
cmp
lods
pop
dec
add
or
fwait
cmp
sti
sbb
dec
ret
xlat
pusha
outsb
inc
mov
sub
or
ds
pop
xorb
mov
mov
add
cld
iret
sahf
out
mul
add
mov
addr16
aas
jle
add
out
rcl
and
hlt
or
inc
pusha
add
xchg
incl
pop
cld
out
add
lods
adc
cmp
push
push
or
mov
loope
lret
addr16
jl
pop
inc
loopne
lcall
lock
jg
add
bound
sbb
arpl
stos
stos
add
dec
or
lock
adc
add
stos
daa
or
xchg
stc
fabs
jge
test
add
mov
pusha
dec
cmp
or
xchg
leave
into
cmp
mov
adc
pop
mov
add
adc
je
mov
jmp
std
jno
lcall
add
nop
dec
in
pop
add
arpl
dec
pusha
cmp
int3
pop
les
mov
in
shlb
pop
or
mov
and
sbb
cmpsl
mov
mov
ljmp
lods
add
jl
dec
add
int
mov
pop
sub
fidivs
jae
push
popf
mov
add
lock
imul
sarl
push
mov
pop
ds
call
lret
jne
push
sbb
cmpsl
fcmovnb
sub
nop
shlb
mov
loopne
mov
add
sbb
mov
popa
imul
or
xor
add
ficompl
es
push
hlt
or
rcr
pop
andb
ja
inc
xchg
test
xor
add
fmull
cs
or
pop
sbb
out
cmpb
sub
sbb
scas
mov
or
rcrb
add
insl
lret
cmpsb
add
sub
out
pop
popl
mov
pop
xor
add
adc
test
pop
xor
add
into
xor
outsb
stc
and
pop
icebp
dec
inc
popa
or
loop
add
sbb
push
mov
rcrb
test
mov
insl
jns
aad
sti
pop
xorl
call
sub
jne
leave
rclb
clc
cltd
adc
in
repnz
add
add
xor
dec
xor
pop
add
mov
pusha
imul
out
add
rol
gs
adc
adc
stos
repz
imul
and
push
pop
mov
sarl
pushf
aad
inc
adc
push
adc
jp
lods
adc
insb
xorb
pop
les
sub
cmp
mov
clc
inc
sbb
add
mov
jnp
ds
faddl
mov
cmp
std
inc
mov
fadds
sub
dec
icebp
jns
faddl
xchg
inc
cmp
punpcklbw
and
cwtl
leave
adc
nop
add
repz
rcl
or
rcrb
xchg
jb
add
jmp
mov
sbb
call
js
and
mov
jno
icebp
cmp
mov
push
insb
push
inc
cs
subb
sub
push
mov
pop
pop
stos
lods
pop
pop
stc
pushf
mov
mov
out
cmp
cwtl
push
dec
jns
iret
movsl
dec
add
or
insl
lods
xor
mov
inc
add
ret
pop
add
fs
call
add
and
sbb
clc
and
clc
nop
das
fs
das
inc
sub
sub
add
mov
add
rclb
fimull
das
arpl
pushf
and
lcall
jecxz
xchg
daa
add
cli
int3
sbbl
out
add
push
test
pop
mov
or
outsb
gs
ret
add
in
jbe
and
out
mov
or
xor
lods
xor
pop
mov
adcl
jle
movsl
inc
nop
mov
rclb
inc
sbb
sub
mov
cmp
in
scas
and
push
dec
andl
nop
inc
pop
dec
pop
sub
add
xchg
repz
adc
mov
or
adc
sub
rorl
aam
iret
add
pop
add
xchg
popa
loopne
mull
add
addr16
lret
inc
ljmp
aam
repz
jnp
push
mov
push
je
vmread
ja
xor
or
add
dec
add
dec
andb
mov
mov
add
ret
adc
xchg
add
mov
cmp
add
test
sbb
pop
or
sbb
rcll
ljmp
mov
fs
inc
imul
adc
and
sub
add
shl
xchg
mov
adc
add
cmp
push
decl
cwtl
stos
and
repnz
mov
mov
adc
fadds
fmuls
sub
sbb
ja
mov
movsb
xchg
repnz
mov
mov
repz
dec
dec
add
hlt
aas
stos
outsl
test
out
xlat
mov
int
cmpsl
add
das
mov
pop
je
or
or
xchg
inc
jmp
pop
stos
movsb
dec
cmp
push
mov
pop
pop
addb
and
xorb
add
pushl
inc
cmp
popa
add
fnstenv
mov
lods
pop
xchg
ret
out
pop
jl
add
cmp
xchg
add
push
jle
sbb
jae
push
stc
add
call
push
les
mov
std
add
xchg
push
les
add
daa
sbb
mov
faddl
sbb
add
xor
test
cmc
lret
movnti
in
jg
cmp
add
fsubrl
repnz
les
inc
inc
xchg
cmp
out
dec
xorb
pop
aas
cmc
inc
daa
out
add
xchg
in
cmp
mov
call
add
jl
pop
sarb
mov
mov
sbb
shlb
cmpsb
add
adc
lods
pop
push
jo
mov
movsl
cmp
mov
stos
sub
data16
add
sub
xchg
and
cmp
mov
pop
test
jbe
lret
movsl
push
or
outsb
sub
mov
push
jle
add
dec
or
inc
pop
adc
mov
sar
add
jmp
pop
nop
popf
sub
stos
add
jae
mov
and
movsb
add
ljmp
int3
movsl
cmpsl
xorl
call
and
add
pusha
loopne
push
inc
in
fcompl
jg
jge
and
inc
add
pop
adcb
clc
add
dec
loope
mov
add
scas
ret
xchg
ljmp
scas
jnp
mov
add
cmpsl
and
enter
dec
fidivs
sbbb
mov
fldlg2
add
mov
add
lock
dec
inc
enter
jo
pop
xlat
lods
cmp
mov
mov
push
jge
and
cmp
jae
push
int3
mov
add
xchg
jb
movsl
xchg
add
call
into
xor
mov
add
adc
divl
or
add
push
lods
xor
pop
ljmp
jmp
enter
cld
mov
nop
imul
aad
gs
push
jge
add
inc
lcall
cmp
mov
jecxz
and
dec
movl
or
jle
call
xor
ror
mov
jmp
add
mov
iret
jns
enter
test
pusha
rcll
sbb
add
cmp
jmp
add
jl
or
lret
xchg
add
or
roll
fcompl
push
inc
mov
shrb
shlb
push
in
wbinvd
sub
add
mov
add
lret
pop
add
aaa
ret
imul
inc
add
jbe
cmp
out
enter
cmp
cmp
xchg
push
push
sbb
cmpsb
inc
inc
pop
test
ja
or
push
inc
mov
add
repnz
popa
mov
imul
jp
psadbw
mov
ffree
loopne
sbb
mov
mov
in
inc
or
push
adc
push
lock
std
jns
mov
push
or
and
cmp
add
call
mov
xor
or
inc
add
push
lret
add
mov
add
negl
fisttpll
fstps
lahf
xor
cmp
lret
mov
push
add
pop
dec
pop
ja
add
aas
mov
pop
add
loop
jle
xchg
fimuls
ss
mov
jae
or
mov
add
cmpsb
dec
shll
dec
insl
add
inc
xchg
lcall
dec
sub
cltd
mov
push
sahf
jne
fisttpl
rorb
pop
pop
or
push
cmp
cli
add
repnz
pop
shrb
ret
loop
add
adc
sbb
pop
and
xchg
or
inc
push
add
and
add
pop
sub
pusha
inc
adc
xchg
or
jne
mov
dec
mov
pop
jge
add
push
pop
shrl
sbb
dec
adc
lock
inc
popa
stos
pushf
ljmp
lea
pop
pop
add
and
aam
daa
test
jb
cmp
xorb
mov
sahf
mov
xchg
and
sbb
sub
inc
subl
stos
add
mov
dec
mov
dec
add
sbb
xchg
outsb
mov
mov
dec
add
in
addr16
add
ret
das
xchg
sbb
cmp
mov
add
inc
out
or
filds
pop
mov
push
dec
push
xchg
scas
repnz
addb
test
push
out
cmpsb
sahf
outsl
cmp
shlb
xchg
push
jg
add
rcl
mov
mov
test
mov
test
cwtl
add
rorb
pusha
jno
add
pusha
pop
jmp
dec
mov
lods
jb
mov
pop
addb
pop
lock
or
add
ret
les
pop
ret
add
mov
faddl
repnz
mov
push
xor
nop
dec
repnz
fcmovu
ret
arpl
jo
or
ret
sub
jecxz
add
clc
xchg
add
mov
mov
imul
cltd
pop
add
push
sbb
add
rcrb
fcompl
adc
sub
test
stc
and
adc
adc
stos
pop
dec
movsl
jb
and
push
ret
imul
xchg
orb
mov
sub
mov
push
cli
mov
and
dec
mov
fimull
adc
pop
andl
mov
jbe
mov
ror
dec
ss
and
cmp
daa
mov
dec
add
dec
pop
fstpt
shlb
push
xor
in
out
dec
inc
and
repz
push
pop
dec
add
bswap
stos
inc
lds
mov
es
inc
testb
aaa
nop
add
jmp
ljmp
push
adc
pop
lds
inc
shrb
add
sub
sub
dec
cmpl
mov
cmp
add
cs
mov
int3
sbb
jp
adc
nop
add
xchg
adc
and
add
cld
push
ss
lock
out
pop
mov
stos
pusha
cmp
mov
sub
inc
or
pusha
add
pop
dec
sbbb
hlt
jge
or
mov
inc
cmp
jp
cld
imul
and
dec
cmp
push
bound
jecxz
mov
movsl
or
or
sti
std
jbe
div
add
add
repnz
lods
add
and
jecxz
add
or
cmp
jge
adc
push
xor
pop
or
push
add
mov
subl
das
sbb
adc
lock
bound
and
ss
add
movsb
sarb
daa
pop
ljmp
push
push
jle
into
mov
incl
andb
rorb
gs
mov
xchg
push
mov
jo
jmp
jae
jnp
pusha
xor
ror
sub
sbb
xchg
pop
cmp
sub
adc
sbb
ret
inc
cmp
addb
xor
cmp
xchg
or
repnz
add
inc
xchg
test
sub
subb
cld
or
xchg
ljmp
mov
loope
sbb
pop
test
out
insl
and
adc
pop
sarb
jmp
mov
cltd
loopne
xor
cli
repz
cld
cmc
or
add
clc
push
push
cltd
mov
cli
cmpb
cld
adc
sub
pop
jns
outsb
pop
add
xchg
and
cmp
imul
adc
add
xor
hlt
adc
sub
adc
mov
or
add
mov
push
add
xchg
jp
loopne
adc
add
dec
push
icebp
scas
sbb
lahf
lock
pop
lea
jle
shrb
call
cwtl
add
sub
and
popf
aam
jmp
mov
outsl
xchg
and
cmp
cmp
mov
or
pop
sub
in
and
out
loopne
test
stos
add
pusha
or
and
lock
mov
xor
or
repnz
and
in
cwtl
push
sub
xor
cmpsl
add
sbb
movsb
mov
pop
xchg
inc
aad
mov
das
aas
fcmovnbe
adcb
xchg
enter
cmpsb
mov
and
rol
bound
in
int
mov
rorl
in
test
aaa
mov
hlt
movsl
addb
xlat
xor
jo
mov
pop
push
in
add
insb
mov
ja
and
sbb
mov
sbbb
pop
insb
cld
push
cmp
xchg
repnz
add
cli
and
dec
and
xor
mov
and
jecxz
mov
shll
enter
xor
cmp
jns
test
mov
or
cltd
sbb
mov
nop
and
ficoms
notb
add
dec
mov
popf
jmp
jnp
push
add
jns
add
popa
cmc
test
daa
pop
leave
hlt
pop
inc
mov
lods
add
outsl
sub
and
cmpsb
xor
inc
jno
pop
call
mov
push
loopne
xlat
fdivrs
and
dec
dec
add
mov
nop
and
out
pop
dec
pop
push
rorb
sbb
mov
shrb
fwait
in
push
or
addr16
mov
dec
fcomps
fsts
pop
add
out
pop
es
adc
or
and
mov
xchg
sub
xchg
sbb
es
push
adc
mov
cwtl
dec
xor
cltd
int
loopne
inc
out
add
mov
lods
mov
and
and
add
loopne
push
icebp
mov
dec
adc
pushf
stos
jmp
inc
cmp
xchg
xor
in
insb
xchg
dec
sbb
pop
xor
adc
shrb
lods
and
dec
scas
and
jecxz
adc
repnz
inc
cmp
or
or
xchg
js
pushf
cmp
repz
add
arpl
jl
dec
out
dec
lods
cmp
in
jmp
shlb
cmp
lcall
js
or
and
mov
das
push
inc
dec
xchg
mov
add
mov
ja
mov
pop
sarb
bound
int3
jno
scas
xorb
popa
add
test
pop
daa
fwait
add
out
sub
and
in
fisubrl
mov
or
sub
or
pop
aam
notb
mov
pop
mov
mov
imul
lods
ret
inc
mov
and
jns
xlat
push
bound
push
add
add
sbb
push
fdivs
or
jo
insb
fdivs
scas
push
cmp
ss
ljmp
add
xchg
push
rcll
adc
and
xor
dec
inc
mov
push
mov
loop
addb
pop
subb
add
push
jle
sub
push
mov
ret
pop
add
xchg
xor
es
dec
add
cmp
push
xchg
adc
dec
jb
and
push
mov
cwtl
xchg
ja
cmp
test
add
and
ljmp
nop
xor
cwtl
xchg
dec
mov
cmp
jno
push
and
fwait
shl
add
or
adc
dec
sahf
fidivrl
pop
mov
pushf
sbbb
inc
into
jp
ret
pop
popa
lcall
pop
add
cmp
sbb
scas
or
fwait
out
add
jbe
cmp
or
xchg
mov
sub
mov
ja
shlb
shlb
add
cmp
addr16
cs
mov
push
jae
jns
add
loopne
xor
xchg
mov
repz
add
in
je
mov
xchg
inc
rolb
mov
sub
lahf
test
adc
fmull
std
jns
sarl
psubsb
or
pop
dec
fistl
inc
ds
jnp
fmuls
and
sbb
test
or
enter
outsl
fadd
movsb
push
or
in
cmp
mov
push
xchg
push
popa
arpl
mov
inc
fildl
and
dec
clc
adc
push
pop
add
leave
out
add
loopne
es
lret
les
fmuls
mov
inc
add
sti
sahf
jl
es
add
out
inc
sbb
movsl
add
cmp
xchg
mov
push
lcall
fcoms
mov
cld
sbb
jg
add
icebp
sahf
add
loope
sub
xor
pushf
sbb
inc
add
pop
lods
adc
dec
inc
xchg
hlt
or
cmpsl
xchg
push
add
push
std
repz
cmc
jecxz
push
mov
sbb
pop
lret
push
loopne
mov
cwtl
pop
mov
adc
add
inc
dec
outsl
or
pop
lods
repnz
int3
push
add
cmpsb
cmp
popa
or
add
movsl
loopne
rcrl
jl
push
shrb
fs
or
pop
int
cmp
and
leave
xor
cwtl
add
cld
lret
push
add
mov
push
stos
xchg
enter
loopne
int3
add
scas
lea
xor
aas
push
orb
dec
jns
sarb
ret
repnz
les
jg
jno
pop
sub
aam
xchg
pushf
adc
jne
pop
inc
pop
adc
lahf
loop
jle
dec
fists
ja
dec
add
js
or
loop
add
lret
dec
loopne
cmp
xchg
cmp
mov
aaa
add
xorl
dec
jb
mov
ss
xchg
xchg
dec
and
mov
add
jmp
ljmp
adcb
jl
aam
std
add
jecxz
mov
cmp
jecxz
sub
pusha
and
mov
in
mov
jecxz
add
sub
jae
and
mov
or
adc
int3
dec
mov
add
mov
aas
sbb
xorb
cmpsb
js
xor
fs
rcll
testl
mov
ret
inc
fimuls
lea
inc
adc
dec
sbb
add
cmp
mov
or
add
adc
pop
mov
xchg
leave
popa
sti
xchg
or
xchg
pusha
sub
dec
adc
mov
cmp
int
sar
lods
ret
or
jae
lds
cmp
ror
fs
sub
and
push
sahf
or
cli
adcb
inc
or
mov
fs
pop
add
leave
cld
addl
or
sub
xchg
jns
hlt
adc
xlat
js
sahf
imul
das
and
xor
cmp
mov
jnp
mov
dec
cmpsb
les
xchg
add
bound
dec
insb
adc
xchg
add
inc
and
adc
loope
xlat
pop
roll
in
test
and
pop
enter
jo
cmp
mov
add
add
inc
lock
lahf
stc
enter
or
cmp
adc
cmp
fldt
dec
dec
mov
and
cmpsb
xchg
mov
dec
in
cmp
adc
xor
fldenv
jb
dec
and
xlat
orb
sbb
xor
flds
sub
add
loope
sub
jmp
sbb
xchg
cmp
lahf
add
add
stc
jp
cmp
lods
inc
and
mov
loopne
inc
mov
dec
dec
jp
xchg
lcall
cld
pop
pop
filds
sub
fsubs
insb
arpl
add
dec
fsubp
pop
sub
sub
shll
pop
adc
call
jno
jmp
or
dec
cmp
js
mov
jb
arpl
sahf
inc
int
add
aaa
test
lahf
in
add
jmp
jne
mov
pop
lds
and
out
lods
sub
add
mov
xor
mov
pushf
and
xor
outsl
enter
cmpsl
lcall
inc
inc
inc
dec
sbb
cmp
arpl
mov
xor
cli
pop
adc
push
pusha
fs
cs
fwait
fs
pop
add
add
sbb
std
test
mov
pop
insb
loopne
push
daa
lods
in
dec
subb
gs
add
or
jno
decb
out
dec
sub
int3
add
es
jle
xchg
or
push
mov
stos
call
lcall
enter
jns
stos
ja
mov
add
dec
or
pushf
add
jns
jns
mov
rolb
xlat
addb
and
test
cwtl
subb
pop
mov
nop
jl
inc
out
lock
ss
mov
imul
mov
lcall
adc
add
test
add
sti
mov
jg
lods
loop
push
shr
or
idivb
aad
leave
or
js
loop
adc
ret
std
xchg
fs
insl
jl
pop
xchg
rcrl
inc
cld
pop
xor
push
dec
mov
call
adc
enter
or
out
adc
cld
loop
sbb
jnp
and
fxch
add
mov
mov
jb
femms
xchg
cs
add
pop
mov
sub
nop
mov
sub
xor
push
xchg
jp
sub
mov
push
nop
add
in
dec
and
pop
and
sar
jp
cwtl
xchg
push
or
dec
mov
fwait
lea
fdivrp
xor
sti
call
sahf
or
cmp
jo
lods
push
push
jno
mov
mov
jo
cmp
pop
jmp
xor
mov
pop
stos
add
push
pop
insb
xor
push
movsb
mov
daa
xlat
sub
cmp
add
cli
mov
or
cmpsl
add
sahf
pusha
fmul
dec
push
xor
sub
mov
shlb
cmp
and
and
sub
ret
adc
adc
or
bound
sahf
out
rolb
push
or
sti
mov
cld
or
pop
jp
lret
add
shlb
pop
cmc
xor
or
out
cmp
jp
cwtl
inc
pushf
insb
fwait
mov
dec
pushaw
add
cld
push
pop
lahf
ret
arpl
inc
cmp
pop
mov
and
lcall
mov
mov
test
in
and
jle
add
ret
add
int
in
xor
mov
xchg
mov
rclb
mov
dec
rcrl
or
mov
test
ja
xchg
or
cmp
push
out
inc
add
pop
or
xor
add
add
mov
cmp
push
add
mov
jg
imul
ret
or
ja
mov
jmp
add
cmpsl
leave
sub
push
into
sub
sub
dec
mov
sub
sub
hlt
sub
cwtd
mov
mov
in
inc
js
mov
push
sub
dec
cmpsl
dec
fs
push
inc
cmp
jmp
cmp
sti
adc
push
sbb
cmp
lods
fsub
sub
sub
fmulp
push
rolb
stc
or
mov
adc
add
push
sbb
or
jbe
mov
lods
xor
dec
mov
pusha
or
outsl
in
inc
daa
adc
xor
mov
es
rcrb
push
iret
fwait
cmp
jge
sbb
add
cld
icebp
jge
clc
sub
jne
les
mov
cmp
add
test
or
xchg
lret
xchg
xchg
push
xor
pop
sub
incb
imul
and
filds
jo
mov
fistpll
test
add
mov
and
stos
lods
inc
push
jae
jge,pn
pop
fldcw
stos
movsb
rcrl
or
lods
fdivs
inc
add
scas
ret
fadds
jnp
mov
xchg
sahf
sub
imul
cmp
ret
adc
push
or
jl
lahf
xchg
mov
fsubrl
sbb
orb
jo
adc
enter
and
lds
push
adc
push
lcall
dec
adc
gs
add
xor
inc
mov
push
shll
out
cmp
mov
mov
inc
mov
push
test
xor
cmp
pop
adc
inc
dec
lcall
arpl
add
clc
inc
add
cmc
jne
enter
or
pop
sbb
adc
icebp
xorb
pop
das
pop
cmc
cmp
xchg
in
lret
jp
into
push
pop
mov
stc
jae
add
das
daa
or
imul
movsl
push
aaa
cmp
shrl
sahf
add
dec
cmpsl
jge
je
call
adc
add
lds
push
test
loop
js
jle
xchg
andb
mov
pop
lcall
sub
cmp
pop
add
arpl
cmpb
push
int
jecxz
sub
or
pop
les
pop
fdiv
roll
iret
mov
inc
push
in
cmpsl
jb
mov
insb
cmp
add
pop
and
add
jmp
xor
adc
sahf
arpl
imul
add
push
add
fdivrp
add
hlt
sarb
mov
pop
popf
sub
jae
cmp
cmp
xchg
mov
daa
rolb
out
es
push
test
mov
lret
mov
es
sub
out
push
xchg
or
jl
xchg
xor
movsb
daa
sbb
adc
adc
mov
dec
xor
jns
popa
mov
or
in
in
add
pop
jno
test
dec
test
xor
or
pop
inc
dec
dec
pop
fcomps
push
cmpsl
fmull
push
adcb
adc
add
test
adc
addb
push
add
sub
mov
out
mov
and
addb
shrb
clc
cmp
mov
fisubs
add
or
add
mov
in
add
push
in
adc
xchg
mov
add
mov
ja
add
sbbl
clc
and
or
fstpt
pushl
cld
and
enter
jne
aam
jno
insl
iret
sub
leave
clc
cmp
fs
xorb
mov
push
pop
imul
and
add
inc
int
pop
stos
je
aam
and
pop
int
xor
pop
into
mov
sarl
movsl
je
push
jnp
in
ljmp
xor
loop
ja
add
fs
ja
ljmp
les
mov
push
push
sub
scas
jbe
mov
jle
shl
inc
fdivs
xor
jne
subl
scas
rorl
add
cmpl
and
hlt
sub
fadds
mov
stc
pop
aas
xor
dec
inc
push
in
pop
adc
roll
or
call
daa
aam
push
push
pop
pusha
dec
adc
stc
js
int3
and
xchg
sbb
rcrl
mov
sti
cmpsb
clc
out
push
adcb
pop
mov
in
test
add
fs
xchg
inc
flds
push
stos
nop
pushf
outsb
in
sub
andb
and
inc
add
push
push
cmp
cmpb
dec
test
stc
mov
mov
js,pn
sbbl
sbb
mov
insb
add
jbe
gs
add
push
jo
inc
in
int
mov
movsb
das
and
xor
mov
je
je
dec
in
enter
push
in
push
ret
xchg
sbb
sbb
pop
lret
ret
fcoms
cld
push
mov
push
push
int3
stos
je
call
insl
cmpsl
fsubrs
inc
cmp
xlat
cwtl
fs
push
fwait
call
mov
push
add
xor
or
add
inc
push
ret
std
jbe
mov
add
lods
int3
test
lahf
repz
jecxz
stos
ja
orb
hlt
jp
out
ret
nop
into
fidivl
dec
adc
insb
imul
mov
mov
loopne
stc
add
fnsave
paddusb
xor
pop
inc
addr16
dec
push
out
add
int3
or
mov
adcl
adc
jecxz
pop
cmp
mov
nop
adc
xor
movsb
jae
add
xchg
addr16
mov
test
ds
cmp
add
and
lods
or
pop
xchg
pusha
rorb
gs
pop
xor
out
mov
push
inc
pop
add
cmp
std
fsubrs
mov
insb
jge
iret
popa
sub
and
jbe
mov
sub
dec
aam
jl
and
pop
push
test
or
xchg
loop
pop
or
inc
sbb
jge
add
in
test
and
adc
adc
xor
mov
andl
push
dec
add
rclb
orb
fdivr
inc
push
cmp
adc
jecxz
adcb
dec
push
dec
mov
jge
stos
inc
loopne
pushf
aas
mov
outsl
inc
dec
fwait
lcall
push
push
lea
adc
dec
repnz
fyl2x
test
or
pop
xchg
nop
or
mov
loopne
push
push
adc
test
xor
sbb
dec
jg
mov
mov
inc
test
jmp
scas
cld
add
lock
sbb
rorb
andb
lods
adc
sub
add
in
inc
add
aaa
jo
jmp
or
xor
pop
test
lods
xchg
jmp
mov
jmp
add
in
and
pop
shl
stos
sub
xlat
or
cmpsl
cltd
dec
push
and
or
movsb
push
mov
or
leave
mov
pop
mov
xchg
clc
sub
push
mov
cmpsl
and
mov
pushw
cmp
lock
mov
je
sbb
shlb
fsubs
adc
cmp
add
or
dec
and
xchg
sub
bound
les
adc
add
inc
jecxz
cmpsl
or
and
rcl
imul
sahf
imul
shr
inc
add
xor
xchg
mov
sub
je
mov
ret
dec
arpl
out
jnp
push
add
ret
adc
cmp
insb
xor
jmp
inc
fimuls
xchg
and
dec
mov
hlt
add
sti
add
push
lods
cwtl
adc
mov
std
mov
je
ds
mov
pushf
daa
mov
aaa
inc
nop
daa
cld
jg
mov
loope
jae
mov
cmp
or
in
mov
test
sahf
sub
fmull
and
cli
pop
shrb
les
pop
mov
shll
add
push
add
mov
pop
or
jle
pop
faddl
bound
pusha
in
cmpsl
pop
dec
add
dec
cltd
pusha
push
imul
add
jbe
jnp
les
in
nopl
or
adc
mov
mov
imul
xchg
loop
cmc
and
cld
add
int
fidivrl
cmp
shll
dec
mov
sub
xor
pop
add
pop
pop
pop
add
add
stos
leave
aam
subb
push
xor
sub
mul
push
dec
nop
pushf
inc
pushf
push
or
pop
xchg
push
call
xorl
cld
add
adc
bound
fdivs
in
and
shl
test
add
hlt
jno
mov
jg
pop
insl
and
jno
cmpsl
add
adc
shrl
das
push
iret
sub
and
dec
test
test
jno
add
add
cmp
dec
jp
andb
mov
jnp
push
leave
aas
pop
js
xchg
fisttpll
push
inc
xor
insb
loopne
xchg
and
insl
inc
imul
call
movsb
clc
mov
movsl
dec
xor
out
adc
lcall
pop
and
enter
push
mov
add
sbb
push
mov
jmp
add
dec
sbb
cmp
call
jp
inc
leave
sub
and
ss
or
cmp
adc
lret
test
flds
test
movsl
ret
dec
nop
aad
in
xor
test
aad
int
mov
or
or
sbb
aad
mov
and
or
mov
cmp
adc
das
add
rolb
inc
fsubrs
adc
rorb
dec
mov
cmp
fs
xchg
dec
pop
enter
lds
add
ss
xchg
xchg
hlt
cs
jle
sub
xchg
xor
lods
xchg
shll
cmp
sub
add
mov
pop
jae
loope
jne
mov
adc
shrb
pop
or
pusha
fisubrs
rolb
shlb
mov
test
and
ljmp
mov
jp
stos
pop
mov
cmpsb
push
into
cmp
fwait
cwtl
clc
shl
or
call
je
mov
xchg
sahf
pop
mov
xchg
add
jl
inc
or
aaa
add
xor
xor
mov
pop
dec
repnz
fiadds
andl
ss
jns
and
jmp
rcrl
sub
mov
inc
pop
lods
push
das
dec
push
dec
inc
addr16
xorb
mov
xor
fiadds
or
inc
lods
js
je
lods
adc
xor
xlat
add
push
std
mov
cmp
cmp
xlat
mov
push
sbb
bound
das
nop
pop
sub
xchg
shll
xchg
ret
lods
inc
add
adc
je
int3
xor
cmp
cmpsb
and
lods
movsl
xor
roll
pop
xlat
add
xchg
xchg
mov
adc
mov
pop
dec
clc
cli
add
into
cmc
push
cli
jo
es
xchg
and
int
sub
push
lock
dec
fbstp
mov
jl
inc
add
sarb
add
cld
jo
mov
add
test
aaa
fsts
dec
adc
jns
ret
adc
test
jo
cs
rcrb
nop
fs
gs
and
and
rorl
sbb
sub
lahf
loop
das
imul
xor
inc
xor
fs
push
ss
pop
push
scas
cs
arpl
and
jne
or
rcrb
mov
push
lods
insb
add
mov
mov
push
loope
insl
popa
add
lahf
mov
dec
or
insb
orl
and
or
cmp
push
mov
mov
mov
sub
xchg
out
push
daa
cmp
into
push
das
xlat
add
hlt
xchg
jnp
jae
cmp
test
xor
sub
cmp
addb
stos
adc
push
mov
enter
lock
notb
sbb
sarb
sub
nop
sbb
aam
decb
and
xor
aam
in
sbb
or
mov
dec
stos
lods
lds
cmpb
loopne
nop
inc
addr16
sub
mov
dec
pop
sarb
inc
and
hlt
jbe
add
dec
inc
movsl
adc
mov
add
sub
lahf
pop
rorb
pushf
lahf
adc
mov
adc
adc
inc
adcb
cli
dec
outsb
popa
and
sbb
pusha
mov
or
out
xor
inc
adc
pop
das
cwtl
call
adc
pop
fsubl
mov
jecxz
sbb
rcll
cli
shlb
xchg
in
mov
aam
xchg
imul
fwait
mov
jnp
push
sub
adc
sbb
dec
xchg
shrl
jnp
xchg
cmpsb
cwtl
test
inc
sbb
push
or
dec
dec
inc
mov
and
adc
andb
cwtl
aad
mov
adc
scas
inc
mov
sbb
pop
jb
add
sub
sbb
jo
cmp
mov
in
int3
jp
popa
xchg
lret
fs
mov
add
rorb
stc
mov
andb
mov
scas
loopne
mov
and
pop
adc
inc
cli
dec
pop
adc
add
and
fyl2xp1
or
mov
xchg
sub
xchg
ror
daa
cs
fdivrs
jo,pt
test
jmp
add
ficoms
and
mov
inc
out
cmp
aaa
jbe
adc
cld
add
faddl
mov
mov
outsl
mov
xchg
add
jp
aas
pmaxsw
mov
ret
and
dec
faddl
loopne
hlt
inc
mov
cmp
push
mov
jo
xchg
stos
pusha
sub
mov
xchg
imul
and
addr16
leave
nop
jo
loopne
das
adc
add
lds
and
fadds
insl
decl
arpl
sub
pop
xchg
mov
pop
daa
mov
hlt
mov
sbb
xor
inc
adc
xor
add
add
int3
adcb
push
add
push
jle
insl
aas
dec
jecxz
adc
das
and
adc
or
jno
jmp
test
sbb
or
je
xchg
inc
stos
mov
iret
gs
inc
jecxz
add
incl
push
cmp
ret
mov
add
inc
aaa
push
mov
addr16
mov
icebp
dec
cmp
fwait
add
imul
and
sbb
lea
dec
jb
sti
sbb
mov
add
add
je
adc
jns
jmp
lcall
adc
sub
mov
shrl
jnp
lods
add
lahf
nop
aad
sbb
add
sub
dec
cmp
std
add
int
or
add
and
gs
stos
inc
clc
mov
jne
sub
cmp
add
pushf
adc
lods
xchg
jl
aaa
lods
xor
enter
sub
add
xchg
addr16
dec
fcmovne
add
dec
out
push
mov
cli
cwtl
add
jo
mov
jecxz
nop
dec
iret
dec
add
mov
mov
inc
xchg
repnz
jl
pop
sahf
cmp
les
jns
jmp
adc
test
pop
or
add
into
xchg
ret
cs
cmp
mov
push
xchg
in
pushf
rolb
adc
shrb
jmp
adc
adc
jae
pop
add
faddl
xchg
aas
or
xchg
ljmp
dec
push
mov
sub
test
das
add
cmp
mov
loop
and
bound
adc
popf
cmp
mov
subl
mov
mov
hlt
push
sti
add
roll
leave
lods
add
cmp
fwait
pop
and
push
call
xchg
or
call
insb
xor
jmp
aas
js
inc
inc
add
shl
adc
pop
add
push
inc
fwait
xchg
addl
inc
out
add
out
jnp
sub
test
pushf
out
sub
mov
sbb
cmp
xor
lds
xor
jmp
pop
mov
xchg
dec
bound
pop
or
add
push
test
stos
add
jmp
fdivs
dec
scas
inc
add
nop
clc
jno
pushf
aas
add
mov
imull
pop
aad
loope
lock
sti
sbb
cmpsb
test
daa
addb
adc
jmp
dec
in
ss
sub
add
sahf
cmpb
dec
daa
adc
push
or
xchg
and
insb
pop
pop
jg
dec
lahf
iret
mov
xor
push
jns
and
movzbl
sbb
xchg
cmp
and
adc
lret
adc
xchg
sub
mov
jl
loopne
sahf
jge
or
add
lahf
xchg
jae
movsl
rcrb
pusha
jg
mov
or
aam
pop
daa
jmp
addb
push
fcmovbe
or
cli
push
lahf
sbbb
nop
or
jg
adc
sub
mov
or
stc
and
lods
mov
lahf
les
xchg
insl
mov
lds
lds
clc
pushf
push
xorb
mov
dec
lods
adc
add
cmp
or
mov
add
and
sahf
test
ja
sbb
bound
loope
ficoms
sbb
pop
shrl
daa
or
test
loop
leave
add
mov
mov
xchg
rcrb
ror
clc
stc
xchg
adc
push
mov
sub
cmp
sbb
data16
add
and
dec
sub
add
lods
cwtl
aad
out
push
push
sub
jno
dec
mull
in
mov
adc
in
add
fldenv
stc
add
aas
cmp
add
sbb
enter
ja
xchg
addl
loopne
adcb
mov
shll
adc
out
inc
inc
sbb
sub
cmp
daa
mov
xor
xlat
jo
lcall
cmp
cmpsb
adc
daa
cmp
xchg
add
lahf
and
jb
es
pop
adc
jo
movsb
mov
dec
push
pop
adcb
orl
je
or
fisttpll
or
out
pop
push
lds
lahf
jle
bound
js
xor
fwait
into
lods
cs
push
les
jp
pop
int3
setg
xor
fcoms
cmp
hlt
lea
mov
mov
or
or
push
sbb
pop
test
xchg
adcl
shrd
imul
loope
faddl
jmp
add
or
sbb
mov
lret
dec
cmp
movsb
fs
call
mov
dec
cmp
push
std
mov
and
sahf
xlat
rorb
rclb
cltd
lcall
int3
add
out
push
negl
cmp
sub
push
rolb
pusha
mov
adc
rol
mulps
sub
ret
dec
and
data16
sbb
lahf
add
sub
inc
cmp
pop
sbbl
add
in
int3
or
std
cmpl
jl
mov
mov
push
inc
jbe
jl,pt
or
add
mov
nop
push
add
loop
les
add
xor
test
mov
pop
out
adc
sbb
push
nop
xchg
dec
or
test
cld
pop
push
loopne
dec
mov
jbe
xchg
add
rcrl
fsubl
jnp
push
adc
add
rclb
add
test
je
test
and
lock
add
mov
aad
adc
in
mov
test
cmp
add
fucomp
test
in
cmp
sahf
jb
and
dec
add
aaa
push
movsb
xorb
cld
loope
and
add
inc
icebp
push
jmp
out
ret
int
fs
adc
jle
popa
pop
sub
adc
push
mov
push
js
test
int3
adc
lods
xor
add
rcrl
xchg
mov
sub
and
xchg
dec
add
les
roll
add
and
dec
add
loop
mov
cmpb
lret
cmpl
sbb
add
sbb
add
xorl
inc
add
nop
jge
sub
xor
mov
pop
xchg
add
pop
push
scas
rcrl
movl
das
ret
add
mov
sub
pop
iret
loopne
sub
adc
xchg
jle
imul
mov
push
bound
push
loop
scas
sbbb
and
mov
add
mov
inc
out
test
or
fcmovnb
mov
add
pop
or
sbb
push
inc
jbe
mov
mov
ficoml
filds
dec
bound
or
add
scas
sub
out
and
jp
frstor
add
cwtl
jecxz
or
or
lret
popa
iret
shl
dec
adc
and
repz
pop
cmp
mov
cmp
out
rcr
mov
stos
or
add
push
out
pushf
lock
jbe
push
sbb
add
sarl
int
mov
xor
icebp
push
inc
daa
into
iret
loopne
sub
jg
add
test
mulb
jnp
jns
add
ret
sub
rcll
cmpl
shl
jno
jmp
push
xchg
push
sbb
jmp
sbb
mov
xor
sub
jno
outsl
repnz
orb
or
adc
subb
stc
add
inc
dec
sbb
dec
or
dec
push
movsl
cltd
pop
jg
add
addr16
dec
add
test
add
adc
jg
dec
xchg
jle
int3
xchg
xchg
pop
mov
adc
mov
cltd
pop
std
mov
aaa
mov
or
add
cmpl
call
imul
add
sbbb
hlt
xor
addl
mov
add
insl
aam
test
mov
jle
adc
mov
xor
adc
cmp
dec
jl
clc
into
jbe
es
jnp
xchg
xor
cld
push
adc
cmp
xchg
add
jmp
or
ss
and
or
in
or
les
test
aas
out
add
jns
nop
xor
cmp
pusha
lds
or
xor
jecxz
out
add
adc
test
test
add
shll
add
aaa
mov
cmp
jb
ror
jae
mov
jl
adc
lods
or
xchg
sbb
add
fs
icebp
fildll
or
mov
shll
pushf
std
mov
lock
inc
add
jnp
cmp
add
nop
test
push
pushf
and
xchg
aaa
enter
sti
and
fldl
das
rcrb
cmp
mov
call
mov
outsb
subb
outsl
inc
cmpl
push
pop
inc
les
roll
dec
scas
test
das
dec
ljmp
in
insl
ds
xchg
cs
into
dec
lcall
jo
add
data16
jg
add
xchg
ds
inc
add
xor
push
sbb
jno
data16
xchg
inc
shrl
addr16
shlb
add
sbb
jnp
fnstenv
xorb
push
sub
or
in
add
xor
cmc
mov
xlat
push
in
jo
scas
add
cmp
mov
or
dec
mov
inc
out
or
repnz
xor
sbb
test
clc
lret
jnp
mov
stc
rcr
sbb
rolb
in
aas
clc
sbb
rol
xchg
arpl
repnz
fsubr
frstor
or
add
xor
dec
nop
push
pop
add
lods
xor
inc
loope
ljmp
add
movsl
push
scas
das
jg
adcb
adc
xchg
stos
aam
add
cs
mov
and
add
hlt
icebp
negb
and
push
sub
jg
add
mov
and
repz
stos
adc
sbb
or
repnz
in
xorl
adc
fsubr
inc
mov
add
ss
leave
mov
xor
cli
xchg
adc
pop
cmp
pop
cmp
mov
xchg
fwait
mov
xchg
clc
or
icebp
pop
and
dec
jne
mov
and
jecxz
cltd
mov
ficompl
aam
hlt
add
add
sbb
fdivp
adc
mov
sbb
sahf
sbb
fnstenv
outsl
xchg
cmp
movl
add
addr16
fcompl
cmp
mov
and
sub
push
stc
add
fcmovnb
pop
and
fldl
sub
and
xchg
mull
aaa
dec
enter
mov
out
imul
aaa
icebp
neg
cmp
and
or
mov
mov
mov
add
jb
popl
mov
mov
add
fsub
outsl
ret
add
mov
lahf
js
ja
das
leave
aam
add
es
cmpsb
add
test
ret
mov
test
aad
add
xchg
jo
daa
test
inc
lock
push
add
dec
shlb
inc
out
pop
pop
bound
ds
pop
ret
push
ljmp
mov
in
add
cltd
nop
hlt
mov
dec
adc
cmpsl
adc
movl
xchg
out
or
inc
cmp
mov
cmpsb
xor
roll
dec
lret
add
ja
add
shll
pop
mov
sub
or
dec
mov
push
shr
popa
and
daa
fadds
mov
imul
add
and
cmc
cmp
and
add
jl
lods
xchg
push
out
push
fsub
and
cmpsb
xchg
arpl
sbb
dec
add
rep
mov
mov
icebp
bound
dec
cmp
dec
aam
add
sub
or
mov
cmpl
pop
mov
mov
flds
add
fs
add
rorb
insb
out
sbb
rorb
adc
jle
sti
add
xor
pop
inc
xorl
sub
lds
sbb
or
mov
cli
jp
in
xlat
add
xchg
ja
mov
insl
scas
dec
or
int
adc
outsl
sub
cwtl
xor
mov
adc
daa
push
lcall
mov
add
lds
and
and
sbb
dec
add
es
outsl
xor
sbb
mov
jle
scas
fs
andb
mov
popf
pusha
out
and
jb
aad
ljmp
jl
test
xlat
repnz
inc
mov
add
sbbb
add
loopne
push
bound
imul
pop
pop
add
daa
jno
pop
or
ss
and
xorb
loopne
sbb
dec
sbb
jg
add
lret
bswap
mov
loope
mov
test
dec
mov
xor
jge
addb
mov
jg
fdivl
sbb
dec
add
mov
mov
and
mov
inc
jecxz
cmp
mov
xchg
jl
add
fsubrl
and
pop
loopne
sbb
or
inc
mov
frstor
ret
push
out
ja
and
push
xchg
mov
outsb
xor
mov
sbb
add
inc
and
insb
popf
xor
jge
adc
into
pop
mov
dec
cmp
aad
or
push
add
stos
and
jae
out
int3
mov
cmc
lock
stos
rcrl
push
insb
cs
fldt
mov
inc
lret
popa
push
fcomps
mov
fmul
js
loopne
pop
lcall
je
add
cmp
clc
cmp
hlt
clc
int
mov
inc
and
mov
adc
or
and
out
or
and
arpl
cmp
dec
rol
push
mov
add
imul
ljmp
cmp
mov
add
sbb
pop
add
pop
lods
shrb
add
add
or
pop
cmp
das
push
ljmp
xor
sub
sbb
cwtl
aam
inc
or
fmul
mov
xchg
call
into
xchg
les
add
leave
loopne
movl
mov
dec
xchg
inc
aad
ljmp
shll
and
test
sub
jbe
xchg
loopne
push
and
dec
dec
fs
outsl
testl
lea
int3
out
call
mov
mov
scas
aaa
ss
aas
pusha
add
add
imul
mov
push
cmpsl
mov
pop
pop
add
jle
jo
add
shlb
aam
fwait
xor
jae
adc
das
mov
add
dec
test
push
daa
sbb
cmp
shlb
sub
pop
sbb
outsb
ljmp
cwtl
sbb
movsl
sbb
roll
lds
sbb
jo
and
xor
lea
dec
add
addr16
cs
pop
dec
push
ljmp
lock
shll
in
or
pop
mov
popf
mov
pop
add
mov
add
pop
adc
pop
ficomps
cltd
jmp
pop
ja
fcomps
sub
scas
fwait
add
xor
jnp
test
or
pop
dec
test
add
push
lea
fnsave
pop
arpl
out
ss
in
shll
cmp
inc
xchg
push
shrb
std
jnp
add
xorb
pop
xchg
push
dec
dec
fdivr
pushf
sub
cwtl
mov
add
xor
cmc
stc
inc
add
xlat
divb
adc
lret
adc
and
cltd
or
adc
mov
fisubrs
data16
jmp
lock
xor
in
add
cmpsb
jo
add
add
or
mov
int
push
dec
js
pop
and
xlat
or
pop
sub
sbb
nop
or
inc
mov
adc
insb
xor
push
stc
ret
scas
cmp
sub
js
add
sarb
pop
jo
add
xchg
insb
sub
lret
repnz
pop
ss
inc
std
sbb
xor
sub
xchg
jae
fldcw
and
sub
faddl
jo
stos
loopne
das
add
addr16
inc
mov
add
rol
vmread
cmc
lds
add
jae
mov
xor
mov
cld
cld
xchg
jp
punpcklwd
xchg
and
pop
data16
aaa
cli
rorl
push
pop
xchg
adc
fisubs
add
pop
jno
pop
add
fsubr
mov
je
and
stos
insb
fidivs
lock
pop
lret
and
cwtl
shl
insb
lods
into
daa
add
push
std
shl
xchg
les
cmp
adc
add
or
add
movsl
mov
mov
mov
inc
rolb
push
pop
xorb
add
loope
and
ret
sub
nop
subb
and
sbbl
or
aam
pushf
and
daa
mov
cmp
aaa
adc
roll
inc
movb
inc
aam
lcall
aas
pop
cmpsb
mov
mov
repz
aaa
int3
pusha
cltd
rcrb
data16
or
pop
mov
xor
and
das
loope
mov
mov
sbb
add
mov
xchg
push
les
sbb
lds
mov
outsb
aaa
cmp
sub
cmp
out
cmp
push
arpl
cltd
ljmp
cmp
mov
jae
shl
cmpsb
femms
test
repnz
cmp
test
fstpl
add
ret
pop
cltd
out
cmp
cmp
mov
cmp
inc
mov
add
mov
hlt
fdiv
loopne
shr
loopne
push
cmp
sarl
inc
add
or
fcomps
jp
outsl
sbb
push
and
push
add
les
xchg
dec
clc
pop
pop
fs
call
cmp
sbb
lcall
xor
fildl
sub
test
sub
mov
mov
ffreep
mov
pop
pusha
add
inc
adcl
jg
fs
fxch
loopne
adc
rolb
jl
pop
dec
adc
ret
out
and
out
inc
shll
add
add
inc
lahf
jl
jb
into
add
sbb
or
jns
enter
mov
and
lret
sub
dec
pop
das
fdivs
sbb
outsl
jmp
repnz
popf
and
add
enter
adcl
mov
and
mov
repz
ljmp
pop
cld
insl
inc
fdivr
sub
dec
call
and
inc
and
xchg
adcl
test
pusha
shrl
aad
or
insb
xor
and
add
cmp
jns
mov
sub
sbb
mov
inc
loopne
out
movb
push
fs
or
cmp
mov
add
lret
sbbb
lea
insl
jecxz
mov
inc
or
mov
xchg
repnz
push
out
inc
mov
cwtl
pop
adc
add
or
add
mov
pop
sbb
or
movsl
cwtl
mov
cmpsl
mov
decb
mov
dec
loop
and
loop
dec
xor
aas
les
sub
pop
or
out
mov
push
ljmp
out
pushf
lock
push
int
push
aaa
add
enter
addb
xor
sub
pop
push
mov
inc
incb
shrl
test
add
add
flds
xor
mov
inc
push
add
xchg
pusha
ljmp
mov
das
cld
clc
imul
add
and
push
dec
mov
scas
add
xor
popa
jecxz
rorb
inc
inc
dec
jge
loopne
out
mov
scas
sub
negl
jae
push
pop
insb
xchg
mov
nop
add
sub
clc
cmp
jl
mov
push
and
ret
aad
addr16
mov
push
fcmovnu
iret
pop
jb
add
inc
rcrl
jecxz
xor
rcll
inc
xor
sbbl
sbb
cmp
dec
dec
inc
and
add
aaa
stos
rorb
test
push
aaa
mov
sub
xor
xchg
mov
pop
pop
mov
std
add
push
cmp
imul
dec
dec
movl
xchg
jbe
or
inc
cmp
addl
imul
dec
or
je
pop
rcll
and
adc
lcall
mov
and
and
and
and
stos
js
stos
scas
stos
movsl
rol
mov
fnstsw
rcr
push
cmp
cmp
dec
gs
pusha
and
iret
dec
fs
mov
adc
adc
mov
sbb
push
xor
ljmp
add
sbb
cmp
loope
mov
fstpl
leave
pop
adc
adc
or
hlt
es
fadds
sbb
notb
popf
or
push
outsl
in
and
cmpl
xor
gs
cltd
cmp
cmp
in
push
and
pop
add
or
sub
xchg
jmp
or
lock
mov
push
add
add
inc
push
popf
mov
jo
mov
add
and
or
out
adc
stc
add
pop
adc
pop
pop
sub
fisubl
pusha
adc
push
add
enter
add
shrd
pop
push
dec
in
into
pop
sbb
inc
cmp
fdivrs
aam
xchg
add
push
push
sbb
jo
mulb
mov
nop
adc
pop
xor
inc
stos
add
scas
lods
inc
test
xchg
add
add
out
mov
fwait
pop
push
xor
dec
jo
fmull
lahf
cmpsl
out
jne
xchg
call
or
push
inc
andl
int3
and
add
ss
into
icebp
loopne
pop
and
fidivl
mov
inc
xor
stc
mov
fsubrl
imul
fsubrl
add
xorb
fsub
xor
fs
test
xor
jmp
outsb
and
inc
pop
shl
mov
cltd
test
sbb
pop
or
and
cmp
lock
lds
mov
add
shll
push
je
lods
xor
sub
cmp
repnz
les
add
addr16
jmp
pop
fs
fs
daa
lret
or
or
jecxz
mov
push
jno
fcmovnu
sub
mov
roll
sti
or
lds
add
xchg
imul
mov
scas
fs
mov
test
push
es
jle
mull
fs
mov
add
int3
sbb
sti
dec
aas
inc
test
icebp
andb
mov
add
cmp
cmp
fistpl
cmc
add
cld
adc
xlat
adc
lock
push
mov
and
and
scas
andb
adc
lock
les
and
clts
rorb
cltd
les
adc
jp
sub
cmp
pop
loopne
mov
add
int3
inc
inc
add
cli
rolb
sub
in
data16
mov
mov
int3
arpl
inc
push
fs
outsl
xchg
repnz
and
mov
rorb
filds
jne
insb
adc
ljmp
cmc
mov
test
inc
lock
or
cmp
cmp
ret
sbb
sbb
lods
add
sub
in
loopne
in
loopne
pop
dec
xchg
mov
mov
dec
and
xchg
cli
adc
push
inc
cmp
mov
add
imul
inc
cmp
sub
pop
loope
dec
aam
inc
push
je
outsb
leave
mov
sub
call
jecxz
sbb
or
mov
and
call
rorb
dec
xchg
push
inc
bound
aas
fmuls
push
pop
and
lcall
insb
mov
pop
add
fsubl
fdivs
push
xor
ficoms
call
shrb
xlat
sub
cmp
imul
add
in
hlt
lock
xchg
cmp
add
call
and
lret
sub
fsubs
icebp
add
outsl
inc
pop
scas
scas
orb
hlt
jns
and
xchg
dec
fsubr
mov
adcb
cmp
xor
dec
xchg
fldl
sub
jg
das
test
cmp
jp
add
sbb
sbb
pop
sahf
sbb
cld
data16
mov
mov
test
call
sbb
iret
stc
data16
fs
adc
jns
shlb
dec
test
mov
cmp
cmp
or
pop
inc
push
pop
push
test
pop
push
out
pop
mov
faddl
pop
ds
icebp
sahf
xlat
or
mov
or
mov
clc
stos
and
sbbb
gs
and
add
out
or
add
or
es
xorl
into
and
rcrb
inc
inc
add
out
inc
add
enter
fs
dec
ret
sbb
call
shll
adc
push
mov
xchg
sub
cwtl
pop
hlt
les
push
push
sarb
and
lods
mov
add
inc
adc
test
mov
add
mov
aas
nop
loop
inc
jnp
loopne
rclb
add
repz
aaa
and
mov
mov
add
or
pop
in
daa
test
add
xchg
jae
jo
iret
sbb
add
pop
or
dec
icebp
dec
adc
push
sub
shll
fmull
stos
inc
xchg
movsl
xchg
pop
jo
jecxz
sub
and
xor
into
in
int3
xchg
or
mov
ret
pop
nop
sbb
leave
ret
and
or
inc
cmp
inc
add
mov
das
ljmp
pop
jno
insb
or
xchg
xchg
test
mov
and
sub
mov
mov
push
shl
xor
pop
push
ds
mov
pop
mov
pop
or
or
inc
clc
dec
stos
push
add
cmp
mov
add
pop
popf
cs
in
mov
aas
ret
and
dec
loopne
xor
loope
jns
popf
mov
adc
mov
int
pop
and
in
adc
enter
inc
adc
clc
mov
xor
insb
js
out
jp
pop
xchg
jge
mov
xadd
push
jnp
and
pop
pop
add
and
xor
cwtl
pop
lock
std
aas
inc
mov
xor
ja
roll
jle
xchg
sub
or
nop
jl
sar
pop
and
or
mov
cmpsl
sub
ljmp
mov
jp
rcll
inc
outsl
and
add
loopne
mov
push
xchg
lock
ja
fdivl
jecxz
sbb
inc
mov
outsb
cwtl
cli
movzbl
rep
xor
lock
add
rorl
add
cmp
push
add
and
cmp
sbb
pusha
mov
in
ret
mov
sbb
and
enter
cmp
rolb
mov
scas
jnp
xchg
push
or
mov
push
stc
shl
js
or
or
add
inc
pop
dec
in
pop
push
jnp
movsb
lea
popf
push
aad
xor
mov
std
add
lea
sti
daa
push
mov
jno
adc
scas
pop
mov
mov
inc
inc
out
add
and
mov
rcrb
jnp
push
mov
sbb
inc
mov
stc
add
mov
jp
adcl
xchg
mov
jle
cmp
sbb
in
or
mov
mov
mov
pop
and
dec
adc
leave
int3
pusha
adc
jns
fucom
or
jl
xchg
jle
sub
mov
ds
test
inc
inc
push
sub
roll
enter
and
mov
or
sbb
mov
jge
xor
add
mov
adc
test
pop
push
push
dec
mov
add
inc
mov
mov
sub
adc
test
adc
dec
leave
jl
das
test
inc
sbb
jnp
adc
and
movsb
inc
xchg
cmp
lcall
testb
shr
jecxz
cmp
rorb
loopne
in
pop
fnstcw
fucomip
push
push
arpl
cmp
jmp
mov
call
andb
mov
out
loop
add
cmp
int3
pop
push
fsub
add
movsb
cltd
mov
rol
lock
inc
sbb
pushf
mov
cmp
dec
outsl
xor
pop
add
loop
aad
pop
push
leave
mov
jb
outsl
mov
sbb
push
and
fldl
jbe
adc
test
adc
push
cmp
mov
push
mov
sbb
and
call
pop
mov
add
or
mov
pop
cmp
push
popa
inc
andb
bound
es
add
loop
gs
idiv
icebp
roll
push
and
add
popf
in
fmull
lods
push
and
xor
and
adc
ret
sti
arpl
icebp
xchg
or
pusha
out
sbb
pushf
in
push
jg
sub
inc
pop
jne
cmp
push
jbe
xchg
inc
adc
mov
jle
or
sbb
or
addl
int3
adc
clc
les
gs
test
add
dec
xchg
clc
sub
mov
jne
inc
test
scas
push
rcl
or
fsubs
mov
xchg
movsb
adc
mov
fmull
sub
pusha
and
push
sti
adc
add
mov
in
push
adc
loop
fmull
mov
xchg
test
andl
add
mov
xchg
mov
les
loop
mov
fsubr
pop
or
inc
outsb
dec
mov
xchg
pop
xor
dec
pop
fcompl
subb
clc
std
icebp
adc
xlat
jne
insb
inc
sub
mov
rcll
int3
arpl
mov
clc
add
addr16
adc
cmpsl
add
and
xor
je
cmp
incb
cs
push
or
fs
daa
mov
add
cmpl
push
cmpb
add
bound
cltd
mov
inc
xor
ds
cmpsb
xchg
cmp
divb
cwtl
dec
pop
push
or
jg
jbe
sbb
mov
jmp
popa
pop
mov
mov
pop
add
add
dec
inc
push
leave
roll
icebp
mov
outsl
divl
rclb
pop
loope
push
mov
sbb
hlt
gs
sti
scas
xor
add
test
xorb
or
decl
arpl
and
testb
pushf
pop
mov
mov
dec
popf
sbb
les
mov
in
test
stos
add
xchg
in
push
push
mov
add
adc
dec
sbb
lret
add
fwait
pop
shrb
add
add
inc
lock
rolb
dec
aad
inc
cltd
fs
daa
push
sbb
inc
adc
sbb
js
shlb
adc
inc
mov
loopne
add
sub
push
out
jmp
xor
clc
adc
inc
test
faddl
sub
int
jl
mov
xchg
daa
ja
das
stc
and
adc
dec
add
dec
imul
int
add
add
in
fwait
out
jg
cmp
mov
sbbb
cli
fistpll
push
loopne
and
hlt
jbe
and
bound
shlb
inc
popf
lret
push
test
cmp
xor
arpl
mov
js
mov
test
ljmp
nop
cltd
cmpb
and
push
incl
pop
and
arpl
sbb
pop
push
scas
cwtl
xchg
inc
testb
popa
sti
mov
scas
cwtl
call
loop
fstpl
pop
stc
lcall
es
push
in
je
add
into
mov
fidivl
cmpb
jge
mov
xor
stos
mov
inc
movsb
adc
dec
and
or
jle
sar
ja
pop
jmp
inc
mov
filds
sbb
push
es
cwtl
dec
and
xlat
cmc
jae
and
ljmp
dec
cmp
mov
testl
add
push
out
je
adc
xchg
add
xchg
add
clc
loop
cmp
pop
add
movsl
in
add
jle
xor
add
sub
arpl
cmp
idivb
and
jno
hlt
loopne
dec
push
or
iret
mulb
mov
and
mov
call
and
dec
push
arpl
or
enter
dec
es
xchg
xchg
mov
nop
int
popl
mov
pop
adcb
test
fmul
pop
rolb
mov
xstore-rng
cmpsl
test
mov
add
push
inc
mov
xor
arpl
inc
sahf
decb
dec
xor
scas
or
add
dec
mov
aas
scas
push
fsubrl
ljmp
std
pusha
loop
fs
rolb
lds
ret
cmpb
sarl
push
cmpb
enter
mov
loopne
sahf
pop
mov
shlb
jmp
add
or
jns
lret
sbb
add
mov
rol
mov
cld
rolb
inc
dec
add
sub
jbe
test
xlat
mov
hlt
add
in
jb
dec
inc
mov
out
int3
leave
nop
in
cmp
fmull
aam
test
cltd
add
mov
adc
and
outsb
xchg
outsl
inc
push
push
fwait
jb
add
aad
mov
ret
lahf
rcrb
pop
cld
sub
adcl
add
jp
mov
push
and
and
in
inc
mov
add
addb
int3
jnp
in
cmp
sub
movsb
sbb
cmpsb
cs
rclb
mov
ret
lret
outsb
jmp
loop
enter
or
lock
pop
nop
lock
fdiv
rcrb
inc
nop
adc
push
add
stos
inc
call
push
push
xchg
mov
in
mov
addb
imul
cwtl
clc
mov
test
push
in
in
dec
sbb
xchg
aam
inc
sti
sbb
lcall
and
push
decb
pop
lods
shl
std
add
bound
imul
mov
sub
xor
or
lock
aaa
insl
push
cmp
data16
adc
das
sub
lock
or
orl
jp
pop
inc
fsubrl
push
mov
mov
sbb
adc
sub
test
add
out
xor
inc
js
xor
add
arpl
in
pop
ret
inc
pop
adc
or
push
test
faddl
xor
jne
dec
inc
aam
adc
cmp
lock
fsubs
inc
add
xor
mov
je
rorb
or
push
dec
aaa
xchg
pop
aam
fcmovnb
sbb
xchg
inc
scas
push
cmp
mov
mov
mov
xor
insl
xchg
inc
dec
test
and
cmp
outsb
mov
add
pop
fs
mov
xor
aaa
test
add
cmp
sub
loope
mov
dec
out
je
rolb
mov
push
sahf
pop
adc
out
adc
rorb
cwtl
clc
xchg
sbb
call
mov
cmp
loope
cmp
or
push
push
nop
icebp
std
cltd
mov
dec
fnsave
test
insb
adc
add
or
sub
push
add
enter
lock
insb
and
inc
dec
popf
jl
add
jb
xchg
rolb
fldl
or
sub
or
jbe
mov
or
add
je
jo
dec
cmp
out
add
push
cmp
loopne
cmpsl
push
xor
pop
cmp
hlt
inc
xchg
add
in
mov
cmp
push
jne
push
inc
dec
mov
in
cmp
aas
jecxz
gs
jo
xor
int3
lcall
nop
rorl
fldl
mov
insb
movsb
mov
cmp
inc
test
mov
jne
push
xchg
out
in
xor
pusha
push
and
sub
movsb
pop
push
sarb
jnp
jmp
sbb
sub
inc
gs
jo
dec
call
pop
mov
aas
sarl
cmp
or
orb
and
jno
mov
add
lds
jmp
sub
jo
movsb
inc
jl
loop
fdivrl
idivl
and
inc
push
sub
rcrb
mov
mov
clc
sbb
add
stos
pusha
pop
divb
in
add
sahf
les
cmp
shll
sbb
or
mov
sub
dec
pusha
xchg
test
fwait
ret
test
inc
jl
or
inc
jmp
ret
and
inc
lret
jo
push
pop
xchg
push
pop
test
fcoms
add
sarl
mov
mov
inc
cli
test
or
out
xchg
xchg
shrb
cmp
sub
clc
xor
clc
jbe
out
sub
xchg
or
in
mov
and
mov
inc
xor
int3
pusha
pop
dec
xchg
jl
add
adc
rorb
xchg
xor
loop
inc
into
push
and
sbb
dec
xchg
inc
dec
add
repz
add
xchg
mov
dec
mov
rclb
dec
js
adcb
repz
inc
inc
add
mov
je
mov
cmpsb
jne
adc
inc
push
jmp
xchg
cmp
inc
out
fisubs
test
lds
aas
add
pop
scas
jmp
cltd
pop
mov
pop
std
add
xor
popf
add
sub
xor
leave
call
je
mov
js
and
adc
cmpsb
sub
sub
jecxz
aas
aam
int
addr16
dec
das
inc
pop
xchg
adc
cmp
add
fsubs
enter
mov
lods
and
popa
xor
mov
mov
cmp
or
ret
outsl
in
inc
jno
jo
add
hlt
mov
or
in
mov
add
loopne
idiv
adc
sbb
stos
cmp
add
shlb
mov
data16
stc
loope
jle
mov
cmp
fcomps
in
push
fcoms
dec
ret
clc
push
add
call
dec
mov
notl
sbb
push
or
adc
pusha
pop
xor
inc
aam
fcoml
insb
jl
adc
jo
adc
mov
dec
add
and
jno
push
dec
mov
cmp
adc
fwait
cwtl
rcrb
dec
data16
out
in
add
lahf
xor
dec
outsb
push
push
call
lahf
jmp
push
ss
data16
clc
rcrl
push
jge
fwait
push
sahf
add
out
pop
mov
pop
pusha
ret
push
lcall
adc
imul
rcrl
cltd
cld
cs
mov
dec
and
xor
les
dec
in
outsl
push
jb
test
sub
loope
mov
mov
and
into
je
shlb
adc
in
inc
xchg
pop
int
insb
adc
lahf
dec
in
mov
rorb
mov
jnp
sub
sub
ljmp
sbb
mov
add
cmp
jnp
ret
adc
or
inc
xor
push
test
fdiv
mov
bound
mov
add
xchg
in
lds
adc
js
test
lds
fs
dec
add
icebp
sti
dec
pop
out
fwait
hlt
pop
nop
out
mov
adc
dec
or
mov
cwtl
add
dec
das
xlat
test
push
lock
mov
dec
insl
xchg
and
int
sbbb
mov
add
hlt
loopne
fcoms
dec
cmp
mov
addr16
or
sbb
and
movsb
andl
push
add
scas
xchg
add
roll
notb
add
xchg
ds
push
mov
hlt
insl
xchg
mov
mov
xchg
sub
push
lods
sub
mov
jno
push
xchg
loopne
and
cmpl
fdivr
cmp
add
jl
add
xchg
or
repnz
movsl
ljmp
jbe
rorb
mov
pop
mov
loop
cs
and
test
int
adc
js
or
sub
sub
mov
repnz
sub
mov
add
stos
in
sub
cmp
out
lcall
jle
loopne
mov
push
add
and
lock
paddw
jmp
add
jns
mov
cmp
sbb
cld
lods
xchg
push
sub
or
mov
cwtl
adc
sub
sbb
mov
jmp
xchg
push
or
rorb
xlat
fdivl
lock
push
inc
call
xor
clc
xchg
mov
call
lock
cld
push
or
out
mov
or
pop
pop
sub
and
xchg
std
and
in
hlt
cmpsl
pop
dec
ficoms
mov
sub
ja
mov
in
jbe
jno
sub
lock
ficoms
and
repnz
arpl
jo
and
orb
cmp
add
cwtl
ret
divb
incb
push
cmp
aas
adc
or
and
pop
mov
xor
inc
cwtl
adc
lods
add
push
subb
aas
pcmpeqb
add
xchg
mov
xchg
mov
ljmp
pop
dec
roll
mov
mov
jo
add
test
out
push
stc
xchg
cld
mov
mov
ss
sbb
cmp
fildl
dec
lods
pushf
add
adc
insl
shr
or
fwait
adc
jle
fisttpl
and
out
add
inc
call
es
cmp
sub
inc
xor
and
and
cmp
fldl
lds
or
rclb
cmp
subl
mov
dec
sub
orps
jl
sbb
xor
add
loop
sbb
add
sub
jp
add
std
loop
mov
add
pop
mov
mov
mov
std
xor
movsb
mov
mov
add
lods
xor
and
jns
sub
in
cli
add
cld
addr16
scas
pushl
loop
jae
xchg
pushf
loopne
cmpsl
rclb
pusha
dec
jmp
add
dec
ret
pop
rol
popf
xchg
sbb
das
mov
pop
stos
sahf
pop
xor
ret
add
cmp
or
mov
mov
sub
jge
daa
flds
sub
sub
add
and
nop
shll
xchg
into
inc
rcrb
add
cmp
adc
cli
int3
push
stc
or
adc
add
adc
loop
ret
test
cmp
xor
cmp
xchg
pusha
mov
fyl2xp1
or
add
fs
mov
pop
mov
outsb
js
add
push
ret
dec
stos
into
sarb
pop
sbb
mov
cmp
adc
cmp
xor
hlt
inc
js
xor
dec
sbb
xchg
scas
xchg
mov
mov
jb
cmpsl
sub
mov
clc
roll
sub
and
mov
mov
sub
push
das
add
cmpsl
adc
jmp
jns
or
flds
xchg
sub
mov
xchg
sti
and
mov
loopne
movsl
pop
sub
addl
xchg
jne
pop
cmpsb
out
push
jl
inc
lods
jg
or
sub
jg
mov
dec
mov
add
fwait
or
mov
and
dec
jbe
xlat
lcall
das
inc
nop
popa
sub
sbb
loope
lock
sbb
pop
xor
mov
mov
add
add
inc
pop
sub
stos
push
bound
add
push
pop
inc
shl
push
push
arpl
popa
cwtl
pop
lock
jmp
push
stos
stc
out
add
mov
jbe
jge
in
xor
sbb
insb
jne
nop
mov
push
xor
repnz
jg
push
add
mov
push
pushf
sbb
pop
aam
cmp
cltd
push
pop
fucomi
add
or
mov
clc
and
popf
addb
js
nop
fbld
add
push
sub
insl
add
outsb
pop
xor
add
mov
inc
jle
xor
fsubs
hlt
push
pavgb
adc
ror
inc
xchg
dec
push
inc
daa
mov
lods
sbbl
pusha
sbb
sub
push
lea
lcall
lods
sbb
fiaddl
pop
pushl
test
inc
mov
push
mov
imul
mov
pushf
sub
outsb
in
subl
xchg
jl
cwtl
push
mov
xor
xor
mov
cltd
dec
add
xor
shrl
dec
add
lret
inc
daa
cwtl
mov
mov
movsb
test
scas
xor
jp
cmpsl
ss
mov
sub
cwtl
aas
jne
mov
mov
cmp
inc
inc
push
setae
or
dec
js
ret
cmp
lret
pop
rcrl
push
adc
pop
fcoml
into
ret
iret
pusha
lock
jb
xor
adc
imul
out
jmp
xchg
add
shll
add
xor
cli
xchg
add
aam
out
jo
jl
add
imul
mov
adc
int
jmp
and
cmp
std
pop
push
jno
add
cli
push
rcrb
pop
jns
push
popa
adc
les
std
mov
push
sub
jo
test
cmp
xor
dec
sub
cmp
push
cli
test
pop
adc
mov
lock
add
adc
lods
jle
dec
mov
outsl
imul
dec
or
sbb
or
fimull
jmp
adc
mov
cmp
inc
fwait
cli
jmpw
pushl
stos
inc
adc
jl
mov
jne
in
sbb
mov
enter
ja
dec
setle
imul
mov
mov
fidivs
daa
or
add
lods
scas
jne
sub
and
dec
call
pushf
jl
adc
or
inc
and
movl
mov
gs
xchg
pop
adc
fsubrs
sub
cmc
ljmp
in
cwtl
xlat
add
pop
cmp
mov
mov
pusha
mull
mov
mov
imul
movl
add
icebp
out
dec
sarl
add
scas
and
lods
or
dec
mov
leave
int
pushf
adc
pusha
pop
arpl
add
adc
add
call
pop
and
insl
cmp
xchg
cmc
add
aas
fwait
roll
nop
mov
add
js
jge
aaa
sub
and
mov
mov
adc
adc
push
lods
sub
pop
sub
in
xchg
insb
push
jg
aas
scas
rolb
dec
lods
xor
push
mov
xlat
add
sbb
jns
push
cwtl
and
add
sbb
and
mov
cmpb
cmp
test
mov
mov
popf
push
jmp
pop
add
inc
stc
mov
cmp
dec
and
ljmp
dec
add
cltd
mov
cmp
cmp
out
inc
hlt
lcall
or
dec
mov
mov
add
ret
addb
rolb
imul
rorl
lods
or
mov
rcrb
push
lock
fcoms
mov
add
stos
jl
jae
fbld
mov
mov
push
pop
jecxz
mov
push
stos
add
dec
mov
adc
ljmp
cmp
inc
inc
pop
dec
fistpl
jecxz
mov
inc
fcompl
pop
and
cmp
dec
push
adc
xor
and
dec
mov
test
mov
mov
jo
rcrb
cmp
cmp
mov
insb
or
add
cmp
mov
lret
aam
cltd
mov
daa
inc
lods
lods
loopne
mov
iret
in
shlb
sub
add
shrl
jo
fsubl
les
mov
xchg
mov
rorb
add
dec
int
adc
aad
add
int3
cmpsl
push
outsl
add
rolb
in
out
xchg
aam
inc
dec
dec
ja
add
pushl
das
sub
ljmp
jno
inc
clc
stc
mov
mov
inc
sbb
stos
pushf
jmp
jns
int
add
jo
jne
pop
sbb
adc
xchg
mov
adc
sar
mov
adc
dec
test
and
inc
mov
xor
stos
dec
loope
nop
call
mov
test
cmp
sbb
or
pop
jno
sub
cmp
or
push
mov
dec
pusha
movsb
imul
push
sub
addr16
fs
push
call
mov
adc
adc
pushl
mov
ret
int
push
and
add
loop
pop
cmp
xor
bound
add
inc
add
inc
sub
add
ficoms
mul
jo
add
and
in
xor
aad
fidivrs
add
mov
xchg
insb
add
jnp
and
adc
lods
cmp
cmc
mov
add
shlb
mov
xor
and
inc
sti
xchg
adc
jl
and
jmp
jmp
mov
lea
nop
das
add
scas
xchg
imul
pop
into
xor
or
loop
lods
aam
cmp
nop
int
fistpll
or
cld
sbb
add
push
stc
sbb
mov
dec
add
dec
cld
xchg
lret
or
iret
pop
das
mov
xchg
xor
jo
repz
inc
adcb
test
add
inc
inc
cmp
or
inc
fistl
push
or
and
adc
xor
daa
and
push
pop
inc
arpl
add
addr16
outsb
jl
pop
push
inc
sub
test
add
lds
xchg
cwtl
dec
jno
sub
jb
fs
loopne
pop
add
add
pusha
sbb
pusha
or
insb
mov
test
pusha
inc
repnz
xor
test
mov
adc
or
imul
shlb
testb
mov
or
mov
bound
push
cmp
and
adc
or
fcoml
clc
loopne
push
movsl
mov
call
adc
daa
int3
push
xorb
scas
sbb
push
add
mov
and
test
hlt
les
jle
dec
mov
or
in
or
and
adc
cmp
add
or
sbb
cli
pop
arpl
and
mov
pop
pop
imul
loop
dec
mov
pop
jb
lret
adc
and
mov
imul
xlat
xor
fbstp
add
cmc
push
add
jmp
fs
shrb
inc
xlat
mov
push
pop
pop
call
loopne
adc
fbld
sub
inc
pop
mov
or
sub
outsl
inc
jns
cmovle
jno
push
inc
js
push
repnz
adc
gs
movsb
add
pop
imul
mov
lods
stos
dec
push
xchg
fisubs
jno
lods
mov
add
sub
inc
jp
clc
cmp
scas
outsl
adc
adc
xchg
cltd
inc
mov
push
sbb
sub
dec
mov
hlt
jecxz
cwtl
repz
jno
mov
push
jl
call
test
loope
mov
add
push
sbb
daa
jp
push
sub
add
mov
icebp
add
in
test
adc
jns
add
sbb
adc
xchg
and
xor
test
push
mov
aam
inc
dec
lret
ljmp
subb
cmp
bound
popa
cwtl
iret
xor
orb
mov
scas
or
sub
cmp
dec
xor
sub
jecxz
mov
dec
dec
mov
add
leave
cmc
inc
mov
daa
sub
pop
xchg
adc
cli
mov
sub
adc
rolb
pusha
xor
mul
test
repnz
sbb
pop
popa
add
shlb
push
pushf
add
fwait
insb
pop
outsl
imul
jns
xor
adc
dec
add
or
mov
imul
cmp
call
adc
testl
decb
enter
xchg
stc
jecxz
adc
les
scas
jge
add
ss
mov
push
or
mul
pop
loopne
mov
aas
fiaddl
or
push
mov
mov
imul
add
mov
scas
dec
pusha
push
mov
add
mov
cmp
inc
sbbb
pusha
cmp
sbb
xchg
sti
mov
lock
out
add
xchg
in
xchg
fwait
mov
add
and
inc
mov
lahf
dec
pop
cmpsl
push
loop
fistps
nop
pushf
mov
add
aaa
rorl
adc
adc
mov
cmp
sbb
inc
stc
out
outsl
sub
pop
idivb
mov
inc
and
pop
aaa
xor
or
call
clc
std
aam
mov
xchg
push
push
pop
dec
push
sub
jns
dec
and
dec
call
add
push
clc
lds
nopl
cld
push
dec
mov
int
cmp
jbe
or
nop
scas
or
mov
adc
faddl
outsb
sbb
iret
shll
into
xchg
inc
push
imul
and
or
or
adcb
dec
mov
lods
xchg
mov
add
hlt
xchg
lds
movsl
ret
or
cmp
loope
cmpl
adc
sbb
pop
xchg
or
enter
test
jle
fists
add
lahf
or
jno
or
sti
loop
hlt
cmp
xchg
mov
stos
push
fnstcw
adc
aam
adcb
sub
shrb
mov
mov
pop
je
roll
xchg
iret
enter
mov
cmp
dec
cmpsb
je
insb
xlat
cltd
pushf
xchg
pop
or
xchg
mov
outsb
pusha
and
int
cmp
imul
xchg
js
loopne
push
push
dec
js,pt
and
fwait
jae
hlt
std
roll
movsb
or
pop
push
andb
push
faddl
rolb
jne
cli
test
pop
shrb
in
adc
dec
imul
in
in
push
jp
add
mov
cmp
pop
pusha
pop
mov
xchg
push
add
cmp
clc
out
fwait
add
sbb
call
inc
add
sub
fnstcw
jmp
mov
xchg
loopne
frstor
subps
sbb
cmp
or
cmpsl
mov
lret
add
clc
lret
pushf
lods
jle
jg
jno
sub
adc
pop
and
mov
adc
xor
dec
dec
xchg
in
cmpsb
pushf
or
mov
add
fcomp
pusha
cltd
inc
adc
mov
mov
adc
mov
and
jno
add
jae
outsl
leave
mov
inc
and
scas
test
rcrl
fsubrs
and
rorb
fnsave
dec
enter
xorl
jnp
out
stc
push
decl
cmp
jae
mov
jecxz
lahf
pop
sbb
mov
jbe
pusha
add
mov
or
sbbb
mov
movsb
outsl
rcrb
out
ret
xchg
add
cltd
push
jo
aad
cli
xchg
inc
dec
push
lcall
sub
les
aaa
adc
rorl
pop
pop
loopne
and
adc
out
jnp
jno
addr16
pusha
jmp
in
mov
inc
add
shl
dec
scas
dec
or
and
sub
fimull
test
or
add
add
mov
xor
pop
xchg
xor
ljmp
jbe
and
cmpl
repnz
cmp
and
jno
dec
lods
sub
call
adc
mov
stos
and
icebp
xlat
dec
sub
inc
inc
adc
cli
cltd
aad
sub
clc
iret
dec
cld
shlb
cld
adcb
or
repz
das
cwtl
mov
add
fisttpll
mov
sarb
out
xlat
leave
cld
add
mov
add
ficompl
xchg
xor
and
mov
enter
adc
fldcw
mov
popl
lret
sbb
mov
xchg
rcrl
loop
test
adc
and
sbbb
xchg
mov
out
popf
outsl
xchg
add
sub
cwtl
ss
xchg
test
add
adc
dec
mov
jae
inc
jmp
sub
add
inc
inc
dec
fimuls
data16
pop
and
xchg
int3
push
lret
cltd
push
and
pop
loop
inc
cli
mov
mov
cli
pop
sti
stc
xchg
jmp
inc
cmp
add
mov
or
add
stc
pop
shrb
xchg
push
pusha
pop
ret
pop
inc
push
les
and
je
adc
mov
jg
outsl
add
mov
nop
loope
rorb
cmp
push
mov
xor
dec
mov
mov
pop
loope
pop
mov
loopne
and
jne
sub
mov
jl
jno
xchg
adc
loop
cmp
out
jne
pusha
cmp
add
mov
pop
jmp
or
push
fcoml
call
shll
mov
pop
push
add
stos
test
ror
test
cld
mov
mov
dec
adc
in
icebp
mov
ficompl
aam
les
aam
and
add
push
shlb
jecxz
mov
mov
xchg
cmp
push
das
out
js
add
cmpsb
inc
scas
ficoml
jl
sar
pop
test
js
jns
jo
inc
sbb
js
ret
call
call
jmp
movaps
inc
sub
inc
nop
jno
scas
add
adc
fidivrs
xchg
and
addr16
jns
add
xorb
mov
jmp
popf
cs
xchg
in
mov
add
loopne
mov
ror
or
aam
sub
les
fmuls
mov
in
add
hlt
push
and
cmp
stos
add
insl
adc
loop
jnp
xor
dec
or
cmp
jo
xor
shll
lods
jo
xor
add
cld
fiaddl
icebp
sub
mov
pusha
popa
adc
gs
xlat
shl
xchg
sub
test
mov
orb
jb
rcll
xor
in
or
mov
imul
fwait
and
jle
and
cmp
loopne
mov
mov
inc
les
shlb
repnz
add
fsubrs
add
inc
mov
pusha
add
or
pop
mov
dec
outsl
loopne
adc
sbb
and
aaa
xchg
add
cmp
mov
out
mov
mov
mov
into
inc
xchg
add
adc
and
or
daa
mov
popa
xchg
testb
test
out
hlt
test
or
xchg
bound
mov
push
mov
sbb
xchg
jns
ret
outsl
lahf
mov
dec
push
cli
or
push
mov
push
enter
fisttpll
jno
mov
sbb
mov
xor
mov
adc
jo
cmp
jge
in
sahf
call
and
push
adc
dec
mov
pop
imul
sub
ficoml
sahf
std
pop
mov
dec
mov
add
sarb
mov
shrb
and
pusha
add
xchg
stc
dec
aas
sbb
fwait
cmp
out
cli
dec
iret
add
jnp
mov
test
ret
rcl
xchg
add
xor
xchg
add
xchg
cmp
pop
inc
mov
idivb
aaa
sub
fdivl
out
aas
cmp
leave
aaa
xor
dec
sahf
cltd
dec
andb
mov
call
jl
je
mov
cli
and
enter
or
add
es
aas
inc
bound
stos
inc
in
dec
arpl
push
mov
gs
dec
loopne
stos
in
xor
cwtl
and
adc
mov
mov
pushf
add
or
or
dec
add
inc
shll
jb
cs
aam
addr16
push
ss
das
aaa
adc
add
lods
mov
xchg
add
push
dec
les
mov
xchg
or
or
faddl
testl
cwtl
or
push
clc
fsubl
jnp
dec
fldenv
jle
add
aam
xchg
pop
xchg
mov
inc
out
and
loop
xor
in
repnz
dec
enter
pop
popf
xor
sub
mov
add
sub
and
cli
xchg
std
dec
jmp
mov
xchg
in
mov
push
push
pushf
les
jecxz
add
push
mov
sub
faddl
sbb
hlt
movsb
jae
add
cmp
mov
sub
out
je
mov
adc
add
xchg
push
xor
mov
dec
add
jmp
mov
lods
mov
adc
insb
out
xchg
inc
enter
and
adc
pusha
mov
inc
fidivrs
loope
push
int3
pusha
jae
and
push
jle
xor
jns
xorb
ja
or
inc
vprotb
pop
add
pusha
repnz
push
fnstcw
pop
or
mov
adc
mov
aas
pop
js
push
insb
sbb
dec
cmp
push
cli
mov
lds
push
aas
data16
mov
movsl
mov
sbb
mov
mov
sub
push
mov
mov
xchg
sub
es
pop
mov
jae
xchg
fldenv
pusha
pop
out
cs
xor
mov
popa
pop
jb
insb
push
ss
adc
inc
fistl
sub
das
pop
mov
clc
or
jb
rcl
add
add
lret
mov
or
sbb
icebp
sbb
adc
movsb
pop
rolb
pusha
xor
sbb
addb
push
cwtl
adc
scas
dec
pop
add
clc
loop
pop
adc
call
loop
add
mov
sahf
cld
adc
push
les
dec
imul
sbbb
jno
inc
xor
shr
jnp
jp
pop
std
push
shlb
ret
add
xchg
pop
pop
xor
jge
dec
je
lods
lret
mov
addb
loope
shrb
push
clc
adc
push
cld
adc
mov
mov
jmp
fnstsw
xor
pop
sub
add
add
stos
call
xor
int3
lahf
ficoms
xchg
push
jo
sbb
leave
mov
xchg
in
pusha
xor
xor
lds
mov
sub
or
push
fistps
xchg
mov
jle
repnz
add
mov
mov
call
push
add
and
or
enter
sub
repnz
test
jnp
pop
adc
mov
dec
test
pop
fcomps
rcr
pop
add
nop
loopne
les
aaa
rcr
movups
fcmovnb
call
pop
xchg
sub
pop
or
movsb
mov
push
orl
cli
mov
push
mov
shrb
iret
add
pop
stc
test
add
push
mov
scas
or
add
mov
out
add
xor
dec
inc
xchg
xchg
or
mov
jle
adcl
pusha
cmp
mov
add
cwtl
or
lods
adc
jb
aam
mov
sub
push
sub
inc
or
or
stc
mov
int3
push
add
in
ret
stos
xchg
inc
push
cld
inc
jmp
icebp
pop
mov
pop
setle
arpl
sub
outsb
push
push
mov
sub
adcl
shr
mov
scas
jo
in
sub
stc
push
je
rclb
add
jno
xorl
stc
cmp
inc
adc
lods
or
in
and
push
popf
sbbb
and
add
sbb
jp
aas
sub
movsb
call
jle
add
addb
repnz
je
xchg
jle
jo
lock
xchg
lcall
outsl
jb
add
shlb
or
pop
fcoms
cwtl
dec
lods
std
or
stos
or
aam
inc
xor
scas
mov
lock
sbb
add
lods
leave
sbb
mov
xchg
sbb
pusha
xchg
dec
lret
pop
jge
jmp
inc
and
fstps
push
xor
out
jae
push
rcrl
inc
dec
lock
rolb
movsl
mov
inc
ds
and
out
dec
and
mov
sub
and
sub
xor
repnz
xor
or
aad
cmp
sbb
push
add
mov
mov
test
sub
movsb
sub
aas
jo
sub
adcb
sbb
test
psubd
into
add
jle
jae
sti
xchg
adc
inc
pop
lea
add
iret
pop
adc
testb
xchg
sbb
push
push
jnp
adc
push
lods
insb
decl
sub
outsl
mov
jb
pop
and
inc
mov
test
inc
popf
pop
adc
loop
add
sti
dec
or
inc
mov
xorb
sub
add
mov
arpl
shrb
add
dec
add
pushf
jge
and
rorb
pop
xor
inc
xchg
cltd
aas
add
cmp
leave
xor
and
push
sub
and
and
dec
jne,pt
or
stc
mov
xor
lods
xchg
xchg
fsubrs
cwtl
pusha
inc
fimull
loopne
mov
movzwl
add
inc
fcoms
shlb
pop
cld
add
pop
insb
mov
pusha
in
mov
sub
cmp
loop
inc
sti
imul
sbb
les
inc
xchg
jle
add
ffree
jp
jno
aas
mov
add
mov
push
jge
add
fdecstp
mov
arpl
add
daa
test
shrb
je
les
ror
add
mov
jo
and
push
in
add
lret
cmpsb
ja
imul
aaa
push
mov
pusha
lahf
and
sti
call
dec
imul
or
add
cwtl
or
pop
dec
test
or
push
out
test
imul
adc
pusha
cs
jecxz
outsl
test
and
out
dec
daa
mov
add
sbb
xor
xchg
icebp
faddl
in
mov
sbb
push
xchg
in
fcoms
jmp
jecxz
mov
int
dec
or
add
cmp
sbb
add
mov
and
or
mov
mov
subl
enter
pop
bound
cmpsb
enter
add
stos
xchg
inc
xchg
mov
push
cmp
sbb
insl
dec
fwait
pop
pushf
setne
inc
lods
scas
push
loopne
add
inc
mov
mov
add
push
stos
jb
jo
mov
push
ss
mov
je
jae
add
fwait
dec
aad
dec
mov
jle
or
in
cltd
movsb
pusha
arpl
sub
or
rol
insb
mov
sub
mov
orl
aaa
pop
test
adc
popl
xchg
jle
add
adc
fsubrs
nop
inc
cmp
pop
call
dec
aam
mov
mov
in
mov
mov
xor
sub
pusha
enter
add
sbb
adc
cld
jbe
jge
cmp
push
mov
rolb
push
add
mov
add
pop
add
pop
rol
jg
mov
insb
dec
mov
in
and
jo
add
xchg
inc
cs
jl
or
sub
add
or
cmp
adc
in
add
mov
andl
cmp
arpl
push
adc
pop
push
mov
add
flds
shrl
ss
icebp
push
add
mov
movsb
pop
pop
and
xor
add
in
loope
pop
jp
jne
and
fisubrs
or
test
sahf
in
xor
mov
push
pop
outsb
jnp
cmpsb
call
insb
call
mov
mov
sahf
pop
repz
xor
add
pushf
les
jecxz
pusha
je
aas
push
jbe
add
inc
sarb
xchg
jo
out
dec
mov
inc
and
cwtl
pop
fwait
pop
cmc
ds
push
or
pop
adc
movsl
cld
movsb
pusha
mov
lret
and
ds
cmpb
mov
call
nop
sub
sub
inc
and
or
dec
and
test
mov
add
pop
ret
test
add
jae
stc
aam
xor
cmc
imul
test
scas
jno
dec
shlb
mov
cmp
mov
add
dec
ds
jne
inc
pop
dec
push
add
cmpsb
mov
popa
dec
ficompl
int3
mov
mov
test
push
pop
cmp
add
and
ret
loope
add
nop
mov
insb
inc
xorb
adc
sbb
xor
mov
sbbb
cmp
pop
mov
les
inc
notb
out
adc
dec
cmp
adc
xor
fildl
xchg
push
pusha
jl
sub
insl
mov
mov
scas
loope
dec
nop
add
xor
roll
in
rcr
add
repz
xor
jecxz
xor
nop
daa
inc
in
cmpsl
dec
add
dec
fldt
push
dec
add
sbb
add
mov
ja
dec
push
pusha
lods
or
insb
cmp
test
aad
lret
add
xchg
push
sub
idiv
xchg
mov
jl
push
int
xchg
add
jg
jl
cmp
or
shlb
or
xchg
sbb
and
aaa
mov
mov
dec
cwtl
arpl
shlb
or
inc
jno
mov
and
push
orb
mov
xchg
sbb
pop
sarb
mov
xor
dec
mov
mov
in
mov
push
lret
mov
push
adc
mov
rorb
in
add
repnz
jns
je
rclb
jae
ja
cmp
imul
imul
push
inc
sub
inc
dec
xchg
inc
push
xor
inc
daa
and
stc
outsb
subl
aaa
or
add
jb
cmpsb
mov
lods
lret
add
ds
mov
jl
test
scas
jge
test
push
mov
cmc
add
jne
idiv
aaa
mov
mov
jnp
jae
faddl
ds
stos
pop
inc
mov
leave
cmp
mov
lret
jo
enter
shlb
aas
ficoml
jbe
inc
js
push
xchg
rcrb
js
out
mov
push
mov
stc
popf
adc
rorb
add
leave
inc
call
add
and
xor
cmp
lods
fsubrs
mov
sbb
mov
add
adc
dec
lods
sub
movsb
cli
stc
addr16
mov
imul
in
push
adc
push
mov
pop
mov
sub
sub
dec
jnp
and
mov
aas
mov
test
mov
add
fwait
push
pop
adc
mov
jae
adc
push
pop
mov
test
rorl
clc
bound
stc
push
adc
jae
fcomps
dec
lret
add
mov
sub
inc
mov
rdmsr
dec
std
addl
jo
mov
stos
jnp
pop
aad
jp
xor
push
mov
sub
push
repz
add
js
ds
add
pusha
aas
jmp
push
pop
js
fcmovnbe
nop
sbb
jmp
daa
pop
mov
test
mov
add
rcll
and
fbld
decb
mov
outsb
fs
stos
inc
push
inc
cmp
mov
add
mov
dec
clc
xor
fsubrs
cs
push
push
push
sbb
ds
dec
test
adc
dec
in
cs
sahf
loope
push
or
push
daa
push
jge
add
dec
dec
insb
mov
xor
fildl
mov
adc
movzwl
mov
push
fldcw
lcall
sub
pop
cmp
or
out
dec
push
jle
and
sub
pop
enter
add
nop
mov
or
xor
mov
mov
dec
mov
dec
cli
xchg
mov
icebp
stos
mov
faddl
cmp
jmp
test
aas
add
mov
xchg
and
mov
lret
mov
add
and
loope
rol
dec
mov
call
pusha
pop
cmpsl
rcrl
fldt
xor
cmp
pop
stos
lods
mov
sbbl
mov
andl
jmp
fisttps
add
arpl
and
push
cmpsb
in
lret
mov
sbb
mov
popa
or
sbb
incb
or
mov
loopne
mov
fimuls
pusha
and
inc
shl
and
mov
xor
rcrb
pop
cmp
not
push
dec
fcomip
push
js
les
xor
pop
fbstp
stc
scas
jo
stos
push
jmp
lods
in
mov
cmp
out
xchg
push
pop
enter
insb
sub
rcl
iret
fisttpl
push
pop
repz
mov
dec
inc
and
imul
stos
fwait
jecxz
cmpsb
add
mov
pop
fimull
add
lret
and
xor
dec
je
cmp
addr16
fadds
unpckhps
xor
add
mov
cmp
loop
inc
dec
dec
xorb
mov
add
popf
in
nop
dec
jecxz
js
add
movsl
and
push
mov
cmp
les
dec
mov
scas
jnp
in
mov
add
xchg
fiaddl
cmpb
sub
mov
pop
loop
add
or
pusha
adc
cwtl
and
cmp
mov
add
js
pop
imulb
cmp
imul
lcall
xor
mov
std
addr16
jle
arpl
shll
sub
add
sbb
lock
ret
xor
mov
aad
pusha
fsubrs
fidivrs
add
rcrb
sarb
lret
adc
dec
cmp
add
dec
mov
xchg
mov
rcl
scas
add
mov
bound
movsb
fisttpl
sti
push
rorb
std
push
pop
pop
sub
jge
xchg
popa
cmpsb
xor
or
push
in
inc
dec
loopne
pop
add
imul
mov
jno
xor
call
leave
lods
cmp
je
mov
xor
aam
enter
stos
out
xor
mov
inc
lret
lock
cmpl
mov
test
pusha
xchg
cmp
fdivrl
inc
adc
jecxz
in
sti
inc
add
add
int
pop
sahf
push
loopne
gs
mov
and
inc
testl
dec
mov
mov
fldenv
dec
jmp
stc
add
pop
push
add
outsb
int
or
xchg
loop
jno,pn
sub
and
lds
adcb
mov
mov
dec
mov
in
add
push
dec
outsl
loope
jecxz
and
mov
sti
cld
ss
mov
call
xchg
pop
pop
stos
push
shrl
sarb
sub
or
adc
cld
xchg
imul
pop
les
fadds
or
mov
add
loope
mov
frstor
sti
stc
mov
adc
je
push
add
adc
nop
shlb
dec
daa
pusha
sub
sub
loope
push
icebp
inc
aas
movsl
adc
push
mov
ud2
nop
hlt
xchg
adc
int3
sbb
dec
push
shrb
lahf
out
mov
mov
scas
cmp
add
out
jbe
add
jo
add
inc
nop
movsb
add
shlb
popa
repz
dec
mov
cwtl
dec
mov
inc
in
test
cltd
add
loopne
les
mov
adc
repz
cli
call
test
sub
push
sbb
and
push
inc
mov
jle
mov
loopne
sbb
adc
mov
sub
cld
call
pop
cmp
mov
cmpsl
push
cmpl
adc
sub
jb
pop
mov
iret
adc
testb
push
int3
loop
cmp
mov
add
inc
xchg
xor
xor
testb
or
jge
rclb
cltd
xlat
loopne
add
mov
jb
xchg
cs
imul
jl
daa
repz
mov
add
xchg
cmp
sahf
xchg
jo
bnd
in
outsl
sar
js
adc
cwtl
sbb
push
popa
jecxz
test
popf
add
out
fwait
stos
sub
flds
add
cs
pop
mov
push
aas
sbb
movsb
add
push
jo
ljmp
sub
or
xlat
add
cmp
jmp
push
repnz
adc
sub
lods
xchg
xor
call
dec
xorl
xor
add
cmp
mov
lods
dec
jo
adc
pusha
push
cltd
pop
inc
mov
insl
mov
add
fisttpll
pop
lahf
xchg
cmp
add
xor
jno
inc
pop
add
insb
aam
push
into
nop
sub
and
stc
mov
pusha
sbb
add
push
inc
notb
incb
mov
call
inc
inc
jp
clc
xchg
ljmp
jmp
mov
mov
push
fidivrs
mov
je
repz
add
mov
icebp
dec
jmp
xorb
inc
fcompl
loope
fcoms
jl
test
std
xor
sbb
jae
imul
cli
xchg
and
clc
mov
addl
lods
insb
movsb
cmpsb
add
mov
inc
inc
push
inc
pusha
sub
mov
push
mov
shlb
addl
sub
movsb
in
sbb
imul
mov
std
add
dec
xor
mov
cli
mov
jns
adc
adc
loope
pop
adc
adc
movd
cmp
dec
stos
cmp
loope
push
pusha
jae
sub
xor
cltd
jecxz
adc
cwtl
imul
xchg
cs
push
fimull
xor
mov
push
cmpsb
xor
add
addl
rorl
adc
xor
cmp
test
push
sub
jg
add
dec
jne
mov
loopne
js
xchg
das
sub
in
mov
daa
xchg
jo
lret
pop
js
jno
add
and
mov
es
mov
and
mov
adc
or
sub
cmp
push
mov
push
fiadds
inc
sub
adc
mov
jno
je
and
rcrb
mov
cs
fcmovb
mov
int3
in
add
leave
or
cli
dec
cmp
push
cltd
or
daa
sub
frndint
cmp
enter
int
stos
xchg
dec
and
or
xor
call
mov
hlt
dec
push
cmp
enter
mov
popa
pop
into
sahf
jae
mov
add
dec
sub
test
outsl
sbb
add
insl
xor
cmp
xor
or
nop
mov
cmpsl
pushl
gs
adc
nop
stos
jl
mov
and
aam
add
mov
cmp
adc
mov
cli
and
cmp
arpl
shlb
inc
pusha
dec
jle
mov
sti
call
mov
std
lahf
cmp
cmp
out
sbb
jp
or
xor
pusha
jge
out
cld
mov
pop
dec
or
add
add
xchg
cmp
cmpsl
dec
pusha
pop
aas
lds
mov
inc
movsb
push
or
lods
fs
dec
cmp
scas
loope
repz
xor
xchg
push
inc
xchg
les
push
cmp
hlt
orb
in
aam
movsl
add
aam
or
and
or
movsl
hlt
adc
add
in
xor
add
cmc
and
test
xlat
sahf
pop
mov
pop
call
sub
jge
cwtl
push
les
xor
es
mov
push
insl
xor
pusha
decl
out
fcomi
ret
mov
push
stos
pusha
cmp
mov
and
neg
xor
fildll
add
lahf
mov
pusha
push
pop
and
mov
push
fmuls
xchg
mov
sbb
mov
add
mov
jns
sti
xchg
cli
mov
nop
or
test
cmc
and
xchg
add
in
insb
adc
andb
testl
subb
and
cmp
nop
inc
lods
and
adc
imul
cmp
rclb
xchg
adc
push
mov
rcrb
or
dec
add
mov
push
xchg
in
mov
push
inc
orb
add
iret
imul
push
jp
add
xor
adc
sarl
add
aas
add
into
data16
scas
mov
movsl
popa
push
xor
cmp
gs
test
inc
pusha
leave
inc
push
mov
lds
sarl
dec
lock
push
inc
cmp
dec
mov
sbb
pop
shll
mov
mov
dec
add
nop
aas
jo
adc
test
imul
daa
cmpl
nop
inc
inc
sbb
pushf
mov
dec
outsl
repnz
sbb
cli
inc
jmp
and
xchg
mov
adc
cltd
not
aas
mov
push
push
pop
inc
dec
mov
adc
shrb
and
xchg
push
sub
lock
sbb
jp
inc
mov
cmp
xor
sub
sub
test
stc
dec
loopne
adc
popa
call
add
iret
push
rcrl
xchg
dec
add
fs
clc
mov
aas
enter
cmp
out
mov
data16
xchg
push
fsts
inc
fdivr
lods
add
sbb
clc
std
insb
int3
jbe
faddl
and
pop
push
mov
xor
jle
in
ljmp
jb
cmp
lods
or
mov
add
jp
adc
cmp
pop
loop
int3
jb
adcb
pushf
into
call
sub
and
jmp
loop
stc
cld
dec
loopne
imul
outsl
pushf
dec
xor
shl
adc
mov
and
and
sub
dec
xlat
stos
mov
orb
add
arpl
push
jne
sbb
pop
add
cltd
dec
adc
or
adc
fs
stos
mov
arpl
dec
in
std
in
or
push
data16
push
add
stos
and
ret
jbe
jns
nop
push
pop
leave
jae
pusha
dec
or
mov
in
lods
mov
pusha
repz
sbb
shrb
shlb
dec
lods
push
je
inc
inc
push
mov
cmp
js
out
push
fidivrl
add
imul
mov
out
bound
outsb
nop
add
fisubrl
xchg
or
cmp
jle
pop
pushf
cmp
pop
lret
int
xlat
push
ret
adc
lods
clc
adc
and
scas
imul
sub
xchg
pop
fs
add
adc
shl
out
addl
lcall
and
ret
testb
test
add
out
addb
or
inc
push
push
nop
sub
fwait
test
daa
test
orl
cld
mov
ljmp
divl
pop
add
or
xor
cmp
cmc
aaa
mov
aad
pop
push
dec
adc
bound
push
clc
lahf
sub
call
sub
or
mov
fstps
jns
test
data16
mov
cltd
pop
sbb
sbb
stos
addr16
dec
mov
in
cmpl
orl
add
lea
sarb
rcll
imul
mov
fstpt
dec
aam
mov
add
sti
mov
aam
xchg
or
imul
cltd
jbe
test
outsb
mov
rolb
lahf
ja
or
pop
int3
cmp
add
mov
pop
cs
enter
js
mov
cmp
mov
shufps
push
adc
dec
sbb
adc
push
xlat
add
push
mov
popf
pushf
sub
mov
push
dec
jns
daa
cmc
add
ret
sbb
xchg
add
inc
add
call
dec
jmp
fwait
or
into
xor
inc
or
sbb
jae
cmp
pop
sub
je
or
cmp
sub
adc
xchg
adc
aas
mov
add
xchg
and
pop
jecxz
pop
pop
test
cmpsb
mov
and
fs
cmp
daa
jp
or
and
jne
adc
cli
inc
mov
push
dec
and
scas
add
int
pop
add
jmp
push
data16
rclb
push
fs
addb
push
cs
cmp
add
cltd
adc
lods
jl
dec
je
or
adc
pop
add
inc
jae
mov
pusha
ss
add
arpl
nop
in
mov
adc
pop
mov
dec
sbb
movsb
push
mov
orl
mov
add
mov
in
or
cli
call
rcrl
je
fwait
insb
add
bound
mov
out
jno
ss
clc
dec
xor
test
xorb
or
test
pop
sbb
call
aad
dec
rcrb
mov
into
jb
sub
mov
sahf
loope
add
mov
cld
stos
rcrl
mov
sbb
dec
adc
outsb
into
or
aad
in
call
adc
adcl
mov
mov
lret
sub
xchg
add
popa
xor
dec
mov
lods
out
test
adc
or
addl
das
adc
add
mov
sbb
mov
mov
mov
mov
std
adc
imul
loopne
lcall
inc
dec
subb
data16
lods
mov
addb
ljmp
pusha
cwtl
jl
rolb
lods
test
mov
cld
add
mov
popa
das
or
mov
add
jl
mov
loope
add
xchg
xchg
shrl
xchg
add
cmp
xchg
add
ljmp
jmp
and
sub
aas
xchg
xchg
add
adc
outsl
cmpl
shlb
shrl
dec
outsb
lret
jb
sbb
mov
cltd
sar
cmc
testl
xchg
pop
lods
cmp
cmp
aad
xor
mov
or
add
lret
ja
push
in
addb
shlb
faddl
xor
sbbb
jl
sbb
xor
int
mov
ret
xchg
or
pop
xchg
aam
jb
pusha
nopl
cmp
ficoms
dec
pop
lahf
inc
sub
je
filds
ret
enter
lods
inc
dec
mov
pusha
or
jb
cli
adcb
cmp
push
jns
stos
in
data16
cmpb
xor
xor
mov
push
je
jne
ret
jmp
push
or
mov
jecxz
mov
pop
in
add
mov
adc
call
xor
imul
lock
add
pushl
call
xchg
push
fdivrl
xor
add
add
and
xchg
pop
jle
add
lods
push
add
ret
push
cmp
cld
inc
mov
pop
arpl
cmp
adc
push
add
sahf
push
call
adc
aam
outsb
add
std
ret
clc
or
jo
sub
pusha
dec
or
dec
imul
aad
and
and
or
add
test
popf
jg
roll
fbstp
and
pop
and
loop
ret
dec
push
add
sbb
out
loopne
sub
add
cwtl
lods
mov
xorl
sbb
add
cld
add
dec
mov
add
popf
or
sbb
les
outsb
ret
push
pop
out
into
and
flds
sub
pop
cmpsl
mov
mov
inc
enter
add
add
rolb
or
mov
mov
xor
add
push
inc
in
and
sbb
mov
out
xorb
mov
test
scas
es
pop
nop
icebp
or
and
cmp
rcl
roll
hlt
test
or
jge
push
insl
icebp
push
and
or
xor
xor
xchg
lock
movsl
shrb
repz
adc
jmp
mov
sub
xchg
dec
loop
xchg
mov
add
cmp
add
xor
add
rorl
les
mov
pop
add
mov
adc
push
adc
jp
cmpsl
mov
fstl
repnz
scas
dec
imul
or
mov
int3
fisttpl
stc
xor
in
jle
inc
xor
orb
inc
xor
fdivrs
psrld
dec
inc
mov
shll
xlat
jae
add
pop
push
popl
cmpsb
add
add
cwtl
jne
mov
pop
xor
idivb
insl
cmc
push
add
xchg
cmp
mov
dec
push
sbbl
mov
fiaddl
sbb
das
daa
and
pushf
into
xor
jae
push
clc
or
add
fsubs
add
orl
jo
cmp
clc
daa
mov
and
rclb
js
xchg
jle
add
es
ficomps
imulb
iret
ljmp
pop
xchg
xchg
scas
add
and
fadds
add
jae
add
lret
cmp
in
add
push
add
out
imul
xchg
pop
scas
xor
sbb
or
pop
scas
jge
add
mov
aad
shll
or
add
rolb
push
push
adcl
inc
cmp
mov
add
aas
adcb
pop
outsb
add
lea
movsl
and
ds
nop
inc
subb
xchg
lea
daa
push
arpl
data16
xorb
into
inc
ljmp
cmp
add
repz
jbe
out
addb
mov
adcb
andb
cmp
add
int
jl
scas
mov
repnz
jle
mov
adc
insb
insw
dec
mov
mov
rorb
mov
and
sbbb
mov
lret
pop
iret
popa
jo
add
test
add
cmpsl
ss
add
and
pop
xchg
mov
add
sbb
pop
pushf
adc
sbb
in
imul
sbb
push
push
pop
sbb
jmp
in
mov
or
add
mov
pop
xchg
and
push
lock
add
dec
insl
les
shr
cmp
dec
daa
push
rol
das
push
nop
cli
dec
add
dec
and
idivb
xor
bound
cmc
loopne
into
push
dec
mov
add
push
test
fldt
cld
jp
mov
add
xor
les
insl
daa
scas
adc
jnp
shlb
popf
je
rolb
or
add
pop
sub
jns
aas
mov
inc
sbbb
dec
ffreep
xlat
cmp
or
xchg
es
in
add
jge
adc
shl
mov
adc
jb
andl
jle
mov
xchg
cmpsb
and
add
xchg
mov
mov
fs
outsl
xor
add
or
add
sahf
jmp
imul
rcll
dec
cli
sbb
mov
repz
lds
mov
insb
sub
or
xchg
mov
adcb
sub
mov
pushl
lds
xchg
pop
add
xorb
adc
or
ljmp
imul
int
clc
gs
dec
aaa
scas
test
mov
inc
ficomps
adc
cmc
nop
add
nop
jno
xor
sub
loopne
hlt
mov
lcall
movsb
and
imul
in
inc
fildll
lcall
inc
call
add
add
in
jmp
jmp
lcall
add
insb
xor
pusha
xchg
xor
fdivr
divb
inc
bound
mov
rorl
mov
inc
add
add
jns
aam
or
iret
stc
xchg
fnstsw
add
pop
add
scas
xchg
inc
push
test
cmp
inc
aaa
outsb
sub
shr
addb
jge
jmp
or
lods
add
add
lock
sub
cld
mov
cmpb
dec
aad
outsl
addr16
pop
adc
rorb
add
jns
mov
add
xor
or
mov
and
mov
pusha
insb
push
inc
cmp
mov
add
stos
push
inc
jle
imul
icebp
pop
mov
mov
xchg
pop
add
imul
subb
mov
jns
dec
mov
sub
loop
div
mov
add
cmp
dec
lods
cmp
andb
xor
xor
outsb
iret
out
jge
loopne
shlb
mov
mov
rolb
bound
scas
add
mov
roll
daa
insl
xor
popa
xor
jl
jb
xor
cwtl
addr16
in
add
cmpb
dec
cs
cli
xchg
pop
sub
lret
inc
rcrb
adc
lea
push
sbb
das
push
shlb
sbb
ja
dec
sub
add
sbb
mov
dec
add
lret
pop
pop
cli
lods
scas
or
xchg
dec
mov
fdivrp
add
cmpsl
pop
dec
orb
in
pop
pusha
ljmp
shlb
mov
in
add
sbb
movsb
pop
movsb
or
add
add
and
mov
cld
xor
add
bound
mov
push
sbb
or
sub
cmp
jle
shrb
sbb
pcmpgtb
add
inc
dec
rorb
test
cld
mov
in
shrb
mov
add
dec
adcl
int3
mov
daa
mov
cmc
movsb
bound
pop
dec
dec
cmp
and
jp
mov
xlat
fidivrl
cmp
cmp
loopne
mov
xor
ret
fcompl
push
lret
cmp
add
fbld
jno
xlat
push
adc
add
jne
xchg
in
jae
push
in
mov
icebp
out
int
pop
add
mov
dec
lds
cmp
adcb
mov
jnp
add
add
jno
jno
out
shl
mov
test
push
enter
jp
mov
sbb
dec
aam
movsl
adc
sbb
test
mov
aad
sbb
clc
test
lea
add
out
outsl
jae
nop
inc
out
repz
or
pop
je
dec
pop
mov
andb
hlt
xchg
fisubs
push
mov
add
mov
je
icebp
add
addr16
ret
sbb
clc
sbb
jno
mov
stc
mov
jmp
lock
adc
in
inc
and
shll
sub
push
aam
xchg
repz
aaa
out
lret
daa
xor
clc
jmp
push
cmp
cld
or
stos
jno
sbb
sbb
cli
pop
jg
xor
add
out
sbb
mov
ds
pop
addb
cmp
fwait
shlb
bound
push
adc
mov
pop
in
xorl
ret
and
adc
mov
adc
lods
daa
test
inc
xchg
add
cmp
pop
sub
loopne
add
dec
movsb
divl
add
arpl
lock
cmp
in
add
loope
push
stos
cmpb
aas
add
fnstcw
js
cmp
stos
xchg
sarb
cs
cmc
daa
fisubrl
push
mov
imul
add
cmpl
jno
or
stc
add
mov
or
sbb
dec
xchg
cmp
mov
in
xchg
add
enter
fcomps
mov
test
mov
ret
push
inc
pop
outsl
jo
or
xchg
shl
call
mov
loope
int
rcl
and
fadds
mov
std
fidivrs
pop
fld
outsl
jp
push
xorb
mov
dec
mov
in
pop
lods
add
and
scas
inc
lret
loope
es
pushf
xorb
push
cmp
xchg
scas
out
mov
xchg
loopne
jecxz
jmp
or
pop
mov
or
mov
add
mov
jg
nop
mov
popf
aad
jnp
push
xor
in
lret
inc
xor
add
lock
lods
stos
andb
xchg
xchg
int
jnp
aam
xchg
mov
add
mov
daa
std
ret
push
jo
fidivrl
mov
add
repnz
fs
outsb
mov
in
inc
mov
sub
daa
imul
icebp
shll
pusha
xchg
test
aas
mov
and
not
add
test
icebp
sub
jns
scas
add
outsb
ljmp
or
push
and
or
pop
jge
add
clc
cmovb
pusha
adc
test
in
fdivr
inc
sbb
mov
and
adc
cmc
mov
or
jl
add
xorb
pop
aaa
xchg
movsb
insb
pop
lods
sbb
cmc
ret
dec
pop
test
mov
push
inc
fildll
fcoms
mov
xor
and
mov
cmpsl
cmp
or
xor
loope
ljmp
scas
sbb
fcompl
aam
dec
pusha
adc
divb
je
add
or
ss
mov
mov
rcrb
hlt
and
in
pop
pop
ds
mov
mov
cmp
roll
cmp
aad
sbb
add
pop
mov
pushf
adcl
loopne
and
or
xor
add
mov
jb
das
adcl
sub
cld
lret
or
jae
ret
out
or
push
bound
adc
inc
and
subb
test
inc
imul
aaa
loope
pop
inc
dec
sub
or
in
xchg
inc
adc
and
and
roll
adc
adc
mov
inc
dec
in
cwtl
jo
add
fdivrl
push
into
sti
xchg
pop
pop
out
mov
mov
dec
lods
mov
jne
xchg
loope
add
push
out
ja
add
pop
lods
test
lock
or
sbb
movsl
repz
xlat
pop
imul
out
std
add
push
mov
add
pop
stos
push
add
cmp
mov
pop
add
pop
sbb
mov
or
dec
outsb
mov
sub
add
and
cmp
add
enter
scas
icebp
cld
incl
into
nop
aas
ds
imul
ret
xlat
loope
xor
mov
repnz
movsl
mov
cmp
test
jne
adc
xchg
adc
add
cmp
mov
or
jmp
scas
arpl
scas
insb
add
fs
adc
xor
repz
add
xlat
sub
cltd
add
cli
and
mov
or
arpl
cmp
add
dec
add
sub
add
add
push
addb
pop
add
adc
popf
mov
jmp
or
sti
sub
mov
repnz
test
pushl
and
add
fistl
and
aas
inc
lods
in
adc
add
jbe
and
add
sbb
sbb
pop
add
push
insl
sbb
cmp
mov
nop
cmovo
shll
pusha
rorb
aas
jns
aad
lock
xchg
cmp
jnp
sti
xor
or
fldl
dec
mov
bound
in
icebp
or
inc
mov
pop
cmp
pusha
mov
enter
jno
sub
push
and
jmp
lahf
fs
andb
jns
shl
xchg
shlb
insb
lcall
in
jle
add
rcr
fwait
dec
add
sar
add
cwtl
xor
inc
stc
cmp
sbb
arpl
cmp
loop
add
out
rorl
jne
loopne
add
inc
jo
and
out
outsb
clc
sar
pusha
add
sub
push
pop
cs
cltd
add
sub
hlt
stc
xor
in
dec
jg
fbld
in
rorb
jle
mov
pop
jae
aas
ja
dec
xor
aam
inc
adc
lret
ret
add
aas
dec
in
mov
sbbb
shl
sbb
add
xchg
lods
ret
loope
pushf
aas
pop
and
ret
imul
jmp
shrb
test
xorb
dec
faddl
inc
outsb
add
cwtl
shlb
and
js
sbb
mov
jne
add
adc
cmp
dec
adc
inc
push
push
popl
xor
in
sub
add
popa
in
mov
fildl
xlat
dec
add
dec
mov
cmpsb
in
fadds
inc
mov
aam
adc
mov
and
and
pop
xor
fadds
fistpll
push
lret
out
les
cwtl
add
mov
sahf
mov
aas
loope
mov
outsl
clc
pusha
pop
add
stc
imulb
arpl
xchg
pop
push
jp
jne
add
fsts
js
inc
movsl
add
leave
stc
dec
xor
mov
sbb
andb
shrb
add
pop
lahf
dec
push
shl
push
outsl
out
or
pop
fsubs
les
fistl
add
out
adc
sub
bswap
mov
outsb
push
xchg
loopne
sbb
movl
add
inc
pop
push
ret
test
sbb
push
pop
mov
mov
push
pop
mov
faddl
jp
shrl
dec
push
loop,pn
cmp
fiadds
fildl
sbb
pop
sbb
add
xor
fmuls
cmp
pushf
sub
sub
add
and
adc
jmp
add
push
add
cmp
les
ja
vaddps
push
ret
mov
test
add
sti
fildl
sbb
sbb
inc
push
push
xor
aad
clc
popa
and
jno
adc
ljmp
repz
js
add
movb
push
xchg
jo
adc
cmp
incl
dec
jl
add
mov
out
lcall
xor
sub
push
orb
xchg
jne
daa
add
add
cmpsb
fnstsw
mov
rorb
push
mov
hlt
add
sbb
les
xor
push
dec
sbb
xor
jl
test
and
mov
sti
gs
sub
xor
andb
rolb
jp
xor
orl
mov
js
push
push
cld
add
cmpsl
xor
lahf
mov
stos
in
pop
and
dec
addb
adc
out
pop
test
rorb
adc
pop
out
pop
loop
dec
test
and
inc
cld
repnz
testl
fdivs
pop
and
sub
dec
leave
dec
and
icebp
xchg
push
sub
lahf
shl
hlt
fsubrs
inc
dec
jle
maxps
mov
and
push
shlb
jo
cld
cmc
xor
and
xor
jae
lds
je
in
out
add
sub
inc
pop
mov
add
lods
repz
nop
mov
cmp
ljmp
addb
xchg
pop
mov
pop
push
cmpsb
aas
movsl
addr16
out
loope
out
jecxz
add
mov
jns
dec
notb
subb
addr16
push
add
jno
inc
cs
hlt
pop
mov
or
outsb
nop
sub
jmp
call
lcall
sub
cmpsb
cmpsl
dec
mov
add
pop
xorl
mov
cmp
lret
jl
in
inc
add
and
sub
roll
shl
pop
mov
popf
outsb
cmpsl
add
pop
faddl
mov
or
inc
inc
adc
xchg
xorb
sbb
iret
or
fsubs
adc
subb
js
xor
mov
mov
add
aam
xor
aam
jg
adc
hlt
cmp
lret
sub
and
shll
add
mov
or
ret
pop
mov
subb
mov
mov
jnp
out
sub
add
pop
jae
and
add
test
adc
inc
shrl
pop
add
mov
scas
push
in
pusha
shrd
mov
cmp
add
ljmp
je
mov
and
scas
jae
in
es
js
loope
xchg
xor
call
repz
or
cld
mov
mov
lahf
out
add
pop
mov
sbb
data16
jbe
adcb
lock
dec
int
incb
inc
mov
fsubrs
add
mov
js
loopne
and
xchg
mov
insb
sbb
adc
mov
cs
xorb
mov
les
push
and
bound
call
or
push
lods
or
cmpsb
add
int3
jmp
jne
xor
pop
stc
push
mov
bound
add
enter
push
imul
inc
adc
mov
dec
add
fyl2x
aam
inc
add
popf
dec
lahf
add
dec
xchg
ret
cs
mov
scas
mov
xor
adc
rolb
orb
push
insb
push
scas
add
ret
stc
cs
xchg
inc
ds
push
mov
sbb
cwtl
popa
mov
in
lcall
insb
loop
mov
call
adc
faddl
mov
dec
fcomp
jmp
add
addr16
cmp
enter
add
xor
cmc
jae
cmpb
sbb
cld
add
pop
loop
jmp
idivb
lock
fisttpll
jo
insl
inc
sbb
push
add
gs
mov
repnz
mov
add
cmc
fidivs
jb,pt
add
xor
rcl
cmpb
or
and
jb
add
push
mov
sbb
jecxz
add
ljmp
add
jp
mov
outsb
sub
pop
push
or
loop
pop
sbb
and
push
in
or
jp
mov
and
or
fld
mov
pop
call
xor
xchg
icebp
xor
add
xchg
stos
dec
aas
jo
add
add
add
std
cmp
stos
mov
jmp
scas
loopne
xchg
push
ficoms
inc
lahf
ror
jecxz
add
iret
ret
mov
cld
mov
add
dec
mov
in
add
and
lcall
cli
push
stos
mov
adc
mov
mov
repz
rolb
cmp
add
iret
das
xor
mov
push
add
add
ja
rorb
pop
pop
xchg
dec
dec
add
es
or
jg
cmpsl
and
dec
mov
lcall
dec
popf
je
loopne
das
sbb
mov
sbb
mov
add
mov
sbb
jge
jae
xlat
shlb
scas
jnp
pop
pusha
add
fistpl
adc
aaa
repnz
add
adc
cli
add
scas
inc
es
jb
cmpsb
push
stos
loopne
mov
cmp
subl
dec
add
nop
jae
dec
pusha
out
jg
sbb
arpl
into
sbb
fsubs
bound
adc
lds
inc
cmp
cld
sub
lret
js
push
mov
add
fcompl
push
loopne
add
ficoms
add
loop
jo
lods
movsl
mov
repnz
sbb
aam
hlt
dec
or
dec
incb
rolb
push
and
loop
pushf
xchg
ret
push
cld
xor
repz
push
aad
sub
pop
xor
inc
jnp
arpl
pop
inc
jmp
jl
outsl
in
mov
pop
jne
mov
and
inc
sub
add
lea
add
mov
add
xor
cmp
movsl
push
clc
aas
pop
int
orl
mov
cwtl
out
or
and
pop
repz
mulb
pop
sbb
mov
add
aad
jbe
sti
add
orb
pop
shlb
je
lret
gs
aas
ror
add
lods
insl
or
mov
js
inc
dec
add
pushf
xlat
out
add
mov
call
dec
mov
arpl
xchg
dec
mov
subb
xor
orl
int3
sub
lock
mov
mov
shrl
add
clc
mov
add
jg
mov
outsb
pop
leave
jne
add
test
vmread
sbb
adc
pop
int
pushf
mov
test
dec
sub
addb
mov
daa
sbb
mov
int
add
jg
xchg
mov
adc
mov
and
data16
pop
rcl
xlat
add
movsl
ret
lds
push
add
jge
pop
add
add
in
popa
ljmp
lret
xor
pusha
jns
loopne
push
jb
push
xchg
stos
pop
test
xor
add
jne
mov
inc
dec
shlb
jo
dec
add
nop
push
xor
call
insb
loopne
sbb
rorl
pop
and
push
sub
loope
testb
and
pop
nop
xchg
sbb
mov
pusha
xchg
les
mov
push
lret
xchg
scas
add
mov
les
aam
and
jae
xor
inc
add
das
fisttpl
fcoms
shll
xor
and
dec
add
jl
nop
lods
loope
add
xor
sti
add
inc
out
rcll
dec
lret
cmc
iret
js
xor
adc
sub
xchg
repz
add
scas
aas
mov
in
icebp
add
sub
fsubrl
dec
les
movsb
fisubs
lahf
sbb
adcl
push
icebp
cld
ljmp
sbb
push
lret
jbe
add
inc
mov
stos
fs
and
sub
addr16
inc
cwtl
lret
ds
pop
add
and
inc
sub
xor
adc
in
mov
mov
mov
pop
sub
mov
push
rol
mov
cmp
add
pusha
mov
add
xchg
mov
dec
jne
cmp
add
jmp
or
loop
add
daa
mov
dec
test
in
push
mov
data16
arpl
jne
daa
rolb
sub
pop
and
fisubs
pop
cmc
jl
and
mov
popa
addl
xor
jecxz
faddl
inc
add
sbb
movsb
xchg
dec
add
jmp
or
push
add
les
ds
adc
outsl
inc
movsb
fildl
rcrl
inc
mov
add
push
push
jmp
adc
sbb
cmp
incl
push
sbb
ffree
fwait
inc
popa
mov
clc
add
int
add
jg
push
inc
lods
jmp
sub
lret
pop
add
scas
mov
add
stc
ljmp
filds
cmp
in
push
jg
xor
inc
adc
das
adc
loopne
xor
lcall
inc
adc
push
or
dec
clc
adc
xchg
lods
mov
cmp
orb
push
add
fisubrs
sbb
xor
lea
mov
dec
xorb
cmp
pop
aad
jge
mov
inc
fwait
es
add
dec
mov
cmp
movsl
sbbb
hlt
pop
xchg
test
cmp
push
loop
jmp
es
sub
out
jp
mov
int
cmp
movsb
bound
mov
pop
insb
inc
jno
jecxz
xorb
fs
pop
push
jne
adc
stos
sti
mov
push
imul
nop
ljmp
jo
pop
cmp
lods
mov
popf
mov
and
je
or
clc
push
pop
pop
xchg
add
adc
xor
fildl
call
jne
aas
leave
mov
and
rcrb
adc
push
cmp
test
je
jbe
adc
ss
negl
jnp
mov
imul
dec
addr16
sarb
fldl
jnp
rorb
mov
add
push
jmp
mov
movsb
push
lods
add
or
xchg
mov
push
add
call
cmpsl
pop
sbb
stos
dec
add
add
ljmp
push
xchg
loop
inc
in
adc
dec
dec
cmp
pop
push
xor
mov
push
sub
mov
xor
jne
js
pop
jecxz
push
jl
jns
movsl
fdivs
cs
xchg
mov
add
and
or
inc
mov
aam
ds
pop
sbb
fstpl
push
mov
add
xchg
xchg
push
pop
push
lods
bound
in
adc
add
or
dec
sub
or
cmpl
shll
int3
icebp
jno
loopne
or
add
mov
loopne
dec
add
cmp
or
jmp
xchg
adc
pop
sti
dec
das
push
test
add
dec
jb
cmp
stos
imull
fisubs
push
push
in
mov
sbb
add
add
mov
jne
sub
roll
xchg
add
repnz
cli
dec
cltd
inc
leave
push
jno
and
mov
lock
fs
in
lcall
cwtl
push
sbb
iret
and
and
pop
and
xchg
fldenv
add
push
add
lds
push
xor
loop
xorb
add
sub
fnsave
cs
test
mov
mov
dec
addb
hlt
popf
outsb
add
out
mov
cmpb
repnz
xchg
mov
out
xchg
mov
out
sub
mov
repnz
xchg
ret
shrb
gs
shrl
je
inc
mov
and
loope
insb
add
ljmp
fwait
add
jg
rolb
cmp
out
add
inc
sbb
mov
or
add
lret
add
or
mov
mov
pop
lret
aaa
mov
sbb
add
jo
cld
imul
adc
ds
push
mov
lods
ja
cvtps2pd
dec
loope
out
aas
pusha
pop
add
cmp
push
adc
mov
roll
incl
adc
push
push
jmp
xchg
lods
add
in
fwait
pop
aaa
or
add
inc
shl
sbb
cmpsl
pop
xchg
addr16
add
in
cmp
add
xlat
jg
dec
repz
test
xor
cmp
push
sbb
cmp
test
cmc
dec
shll
push
enter
dec
sub
hlt
push
pop
cmp
add
xor
sbbb
inc
testl
std
and
xchg
xchg
sbbb
sbb
add
xor
push
rorb
std
fwait
dec
pop
push
sub
dec
xlat
jb
js
in
cmp
mov
mov
aam
dec
push
stc
ret
jno
add
loopne
xor
mov
mov
je
pop
jg
add
cmpsb
in
es
add
adc
das
mov
les
jecxz
js
add
push
pop
roll
mov
les
cwtl
imul
je
xor
in
push
xor
add
fmul
mov
mulb
xchg
add
popf
push
push
add
mov
scas
mov
rcll
call
add
jno
test
mov
pop
push
std
push
repnz
pop
test
mov
push
pushl
dec
xchg
rorb
pop
pop
test
repz
sub
insb
and
dec
into
cmp
sbb
cmp
jbe
pop
mov
mov
jno
and
push
testl
es
rclb
dec
ljmp
addb
sbb
cmp
push
inc
add
dec
dec
sbb
sub
jmp
cmp
js
orl
jne
pop
je
or
xchg
monitor
dec
xor
orb
adc
lcall
mov
inc
rolb
and
dec
cltd
dec
out
jne
rclb
fmull
fwait
add
mov
sbb
scas
pop
paddsb
aam
pusha
mov
dec
dec
push
aas
cli
roll
ljmp
rol
xor
call
and
cmp
mov
clc
xchg
insl
push
cltd
push
jb
enter
or
jg
cmp
fcompl
scas
xchg
adc
xlat
push
pop
pushf
addb
sbb
loopne
pop
sbb
inc
sub
enter
addb
out
pcmpeqb
stos
mov
pop
int
pop
mov
aas
adc
pop
add
jle
shll
rcll
push
cmp
push
cli
adc
pop
lock
xchg
out
xor
jae
pop
xchg
adc
mov
sbb
daa
or
out
add
push
push
icebp
mov
mov
jb
add
mov
add
jmp
test
lret
sti
adc
mov
add
mov
cmc
mov
cld
push
jecxz
fsubrs
xor
aaa
and
testb
add
mov
lds
les
mov
aaa
out
cmp
mov
mulb
inc
fsubrp
iret
mov
ret
add
ljmp
xchg
outsb
js
push
sbb
clc
adc
jle
jae
add
ljmp
push
fs
js
cmp
aam
sbb
cmp
or
mov
jns,pn
mov
dec
lods
mov
pop
and
daa
roll
mov
cld
dec
xchg
add
sub
nop
mov
mov
and
pusha
lcall
mov
add
mov
add
outsl
mov
fsubs
rcl
adc
sti
jge
loop
movsb
loopne
xorl
subb
add
push
jge
add
test
dec
incl
jmp
mov
arpl
dec
sbb
inc
adc
pop
outsb
add
sub
imul
pop
rcll
fwait
add
sbb
dec
popa
out
add
sbb
push
sub
mov
inc
or
add
add
insl
es
xchg
fsubrs
add
fldl
push
cmp
lcall
xchg
clc
mov
enter
frstor
loop
xchg
ret
pop
scas
sti
or
test
add
or
nop
shl
xchg
add
pushf
pusha
mov
add
adc
das
and
push
dec
mov
test
jns
int
or
hlt
add
mov
icebp
and
push
inc
es
adcb
inc
cwtl
dec
jg
add
lret
and
fisubl
loope
dec
jp
cli
rcrl
mov
pop
xor
inc
daa
cld
add
test
inc
add
addr16
call
add
cmp
pop
add
pop
loopne
mov
add
pop
addb
add
xor
outsl
sub
popf
loopne
cmpsb
fistpl
adc
dec
and
pop
mov
mov
sahf
mov
aaa
and
add
incl
inc
cwtl
decb
aam
mov
mov
add
les
testl
sub
je
add
aas
xlat
xchg
in
inc
add
into
add
add
mov
sbb
jno
mov
aas
adc
add
inc
rclb
push
cmp
xchg
dec
add
ja
or
add
daa
enter
jp
and
mov
imul
aam
cmpsb
or
add
inc
pop
test
std
loop
lods
mov
insb
push
aas
clc
dec
jge
cmpsb
cs
and
cmp
add
inc
nop
jno
xor
pushw
out
out
add
and
pop
sub
mov
push
xor
and
js
repz
xor
add
inc
sahf
scas
adc
pop
lret
cmp
cmp
mov
nop
push
xchg
jo
cld
sbb
bnd
cmpsl
cmp
dec
out
cmp
bt
push
rorb
daa
mov
adc
rolb
push
mov
mov
jno
mov
enter
push
shlb
cmp
mov
imul
in
orl
fsts
adc
jns
cmp
mov
mov
mov
add
add
xchg
pop
mov
ret
add
popf
fldl
into
pop
movsl
dec
out
shrb
inc
push
pop
sbb
add
lds
int
jmp
scas
pop
addl
cmp
xchg
mov
out
insb
add
pop
adc
loopne
and
sub
dec
daa
shl
add
lahf
mov
sbbb
fimull
aad
movsb
dec
adc
dec
es
int
lock
sub
xchg
add
dec
out
add
dec
xorb
cmp
pop
clc
clc
push
dec
scas
push
add
xchg
push
decb
repz
or
add
shl
dec
test
pop
add
in
ds
ljmp
dec
xchg
shlb
jb
cmp
jmp
xchg
push
and
repnz
icebp
test
in
add
xor
jle
add
dec
pop
flds
adc
cmpb
jmp
adc
mov
add
les
in
aas
cmp
pop
adc
or
dec
pop
lock
mov
inc
inc
xchg
call
test
inc
fsubl
insb
dec
sti
shlb
dec
lret
inc
sbb
incl
push
push
xchg
cmpsb
pop
sbb
faddl
daa
adc
fiadds
mov
test
add
push
aas
cmp
insb
xchg
inc
faddl
leave
cwtl
repnz
das
aaa
xor
jg
fwait
xchg
sub
pusha
int
add
or
mov
jo
mov
sub
ret
jo
bound
ja
out
dec
sti
call
movb
aas
mov
adc
push
add
das
data16
mov
xchg
inc
add
adc
andl
jnp
add
push
cmpb
into
insb
addb
imul
daa
mov
mov
loop
sbb
mov
cmp
sub
or
popa
int
add
xchg
lcall
dec
fists
push
push
test
jmp
xchg
mov
fbld
xor
and
popf
xor
pop
loope
dec
sub
pop
aaa
roll
sti
lret
xchg
shl
sahf
or
aad
jne
push
xor
sbb
ret
and
and
jbe
add
jp
cli
add
sbb
add
mov
add
xor
int3
mov
lds
pop
adc
jnp
mov
movsl
pop
testl
in
xor
dec
in
add
movsb
mov
pop
sarb
add
xchg
ret
and
loopne
sub
cmp
pop
push
pop
add
xchg
mov
adc
jae
fdivl
jmp
enter
add
inc
stc
cmpsl
ret
xor
aaa
mov
jo
loop
sbb
flds
inc
push
mov
and
mov
xor
adc
mov
add
imul
jo
add
enter
adc
mov
dec
cld
jmp
dec
fucomi
add
sbb
lods
inc
add
xchg
and
das
jb
xlat
add
jmp
push
or
add
paddw
out
inc
addb
fidivrs
add
mov
dec
and
mov
or
subl
push
sbb
shr
mov
jecxz
and
aad
and
xchg
popf
outsb
mov
cmp
or
add
dec
jecxz
jp
dec
cwtl
add
push
loopne
jb
aad
add
lahf
cs
mov
xor
sub
movsl
lret
and
add
cmp
add
sub
insl
adc
and
xor
lcall
insl
and
in
add
hlt
into
stos
add
jl
mov
mov
inc
sub
mov
ret
cmp
jg
add
cld
add
leave
mov
stc
sbb
add
push
add
loopne
xchg
repnz
in
dec
jbe,pn
pop
add
cltd
push
push
add
lds
int
dec
pusha
cmp
fldt
ja
pushf
jmp
mov
daa
dec
xchg
inc
lock
pusha
and
repz
nop
icebp
lahf
mov
iret
jle
add
dec
movsb
push
push
data16
add
add
mov
add
jg
loopne
add
mov
sbb
into
mulb
jl
cmp
clc
aaa
sub
add
push
pop
xchg
int
outsl
jbe
mov
fsubrs
adc
insb
and
lods
loopne
addr16
add
dec
cmp
cmp
and
sbb
jge
aaa
sub
pop
adcb
mov
and
pop
out
adc
push
push
xor
movsb
jbe
xchg
cmpsb
push
fists
mov
jo
lock
int3
pusha
sbb
or
pop
popf
icebp
adc
nop
dec
mov
sbb
xchg
std
jecxz
addl
scas
cltd
daa
pop
sub
xor
mov
fmull
mov
add
and
addr16
dec
pusha
or
or
jb
sbb
mov
sbb
add
pop
jbe
ret
scas
or
inc
push
rorb
dec
pop
sbb
hlt
pop
lret
shlb
mov
sub
test
jp
pusha
fcmovne
add
inc
testl
fwait
cmp
les
dec
fcoms
dec
xor
jl
or
clc
imul
jl
and
mov
loopne
scas
add
or
jo
test
add
sub
cld
movsb
add
cmp
inc
cwtl
xorb
sbb
call
sbb
dec
xchg
lret
pusha
sub
pop
add
rcl
cmc
int
add
lds
and
rorb
int
inc
lahf
mov
lock
ss
adc
cmp
push
dec
loopne
pusha
add
sub
fadds
mov
xor
out
mov
mov
pop
pop
andl
dec
push
pmaxsw
mov
mov
pop
int
push
out
rorb
stos
fs
push
mov
out
cmc
aaa
xchg
mov
and
mov
dec
adc
xor
cmp
lret
ret
add
sbb
mov
sbb
mov
movsb
add
mov
add
roll
sub
pop
lods
mov
xor
fldcw
cmp
xchg
adc
add
sub
ret
popf
cwtl
icebp
and
xorl
sub
cs
cmpsb
and
es
jl
stos
add
in
xor
jecxz
scas
pusha
repnz
sbb
xchg
outsb
dec
lret
xchg
outsl
pop
sub
sub
and
lret
pop
loopne
loope
add
popa
add
pop
jge
scas
mov
test
shrl
push
jb
mov
rcr
mov
fisttpll
daa
jmp
mov
cld
das
jae
mov
add
sbb
jmp
or
sub
iret
mov
fadds
out
nopl
fdivs
add
mov
movsl
repnz
out
notl
add
imul
outsl
and
out
nop
push
push
pop
add
or
and
sub
insl
sbb
jmp
stos
test
add
push
xor
sbb
iret
xor
je
adc
pop
xor
das
sbb
leavew
push
pop
pop
inc
add
push
scas
out
jo
add
insl
push
xor
sub
repz
in
jae
push
xor
add
add
jmp
fcoml
pop
add
lods
clc
popa
rcrl
mov
aaa
add
push
pop
jecxz
cmp
inc
add
xchg
lea
outsb
pop
ss
adc
cwtl
in
add
mov
movsb
loop
pop
stos
add
aas
aam
shrb
fld
inc
pushf
outsb
xor
jmp
ror
dec
out
daa
mov
push
xchg
inc
popf
mov
cmpl
nop
enter
mov
dec
lahf
lea
mov
out
sbb
mov
push
mov
icebp
pop
lds
add
popa
outsl
scas
lods
in
inc
aaa
adc
xorb
outsb
add
dec
jb
adc
add
pop
scas
icebp
mov
mov
xlat
mov
inc
push
push
add
cmp
fwait
icebp
stmxcsr
xor
xchg
ja
ret
andl
adcb
xor
xlat
inc
fcomps
cmpsb
mov
cmp
lret
or
mov
in
js
aad
pop
movsb
movb
sub
push
adc
cmp
xor
sbbl
and
enter
xor
inc
pop
mov
add
lahf
mov
das
xchg
inc
stos
push
stc
mov
sub
ljmp
cmp
jns
add
jae
outsl
sbb
xor
push
sub
les
jae
adc
ds
or
mov
cs
sbb
sar
or
mov
icebp
push
or
add
xor
popf
xchg
mov
dec
add
outsb
movsl
aam
les
xor
hlt
add
inc
out
jne
sbb
movsb
ret
add
sub
jecxz
shl
dec
push
add
xor
push
hlt
push
mov
lds
nop
cld
lock
adc
inc
pop
scas
fistpll
jg
mov
gs
cmp
mov
iret
xor
xor
or
fs
outsb
push
adc
add
adc
pushf
mov
js
or
mov
and
and
add
pop
xor
adc
ja
insl
arpl
in
cmc
push
and
cmp
add
mov
add
add
in
xchg
leave
mov
das
push
jl
mov
jge
not
in
ss
adc
stc
xor
call
test
add
decb
add
inc
fsubrl
je
test
cmp
xchg
add
adc
add
jae
xchg
inc
rolb
fidivl
fistpll
shl
jbe
adc
lret
insb
pusha
jp
cmp
ret
daa
lahf
mov
pop
aas
or
xchg
add
jg
insl
jmp
rcrb
punpckldq
js
add
negl
pusha
inc
insb
add
lods
adc
addb
mov
mov
dec
pop
pusha
add
xlat
movsb
add
sbb
add
mov
push
add
cmp
cmpsl
cmp
je
test
push
lret
xchg
cmp
add
mov
or
add
fwait
inc
enter
add
xchg
mov
pop
pop
pop
nop
lock
mov
sbb
add
xlat
std
xchg
imul
pop
lea
inc
jge
loopne
popf
test
test
dec
add
or
pop
daa
rol
clc
mov
ds
mov
cmc
adc
mov
mov
and
pop
jbe
movsb
add
adc
sbb
stos
mov
add
das
xor
enter
dec
lcall
dec
xor
nop
push
dec
loopne
sbb
cmp
mov
pop
xor
or
ljmp
sub
pop
test
dec
inc
add
leave
add
aas
shlb
les
stos
dec
cwtl
les
sarl
fcomip
imul
cmp
mov
cmp
test
mov
addl
test
push
adc
push
andb
inc
inc
popf
lock
add
mov
or
call
push
push
add
pcmpeqb
faddl
push
cmpsb
out
rclb
add
push
and
stos
dec
lret
pushf
loop
xor
jnp
shll
lcall
pop
push
add
push
sbb
push
push
in
pop
jnp
pop
sarl
repnz
jo
icebp
cmpsb
int
out
push
dec
jmp
add
mov
das
iret
add
mov
pop
xchg
adc
dec
orb
outsl
cmovbe
insb
jecxz
jae
cmp
xor
adc
sub
inc
dec
les
mov
mov
movsb
out
mov
pop
in
scas
or
sbb
mov
xor
insl
incb
cmp
mov
pop
mov
test
ret
add
ja
adc
or
mov
jbe
sbb
mov
mov
push
fwait
cmc
xchg
add
out
sahf
arpl
add
mov
cmp
mov
push
aas
loopne
int3
mov
jns
icebp
scas
xchg
inc
mov
cmp
adc
or
test
xchg
popf
sub
lret
sub
es
sbb
or
mov
movsl
in
add
mov
iret
push
test
add
out
popf
fbstp
sub
fdiv
dec
aas
loope
sbb
andl
das
mov
add
xor
lcall
fs
dec
mov
pop
data16
aas
jg
add
mov
or
push
and
or
sbb
icebp
stos
jbe
push
unpcklps
and
jle
jg
and
add
inc
bnd
xlat
and
sbb
roll
cmp
or
add
xchg
data16
dec
add
hlt
mov
or
or
cltd
sbb
mov
add
mov
stc
mov
sub
mov
les
leave
icebp
sbb
adc
ljmp
clc
cs
enter
popa
fldcw
loopne
test
and
add
in
popa
sbb
lods
out
test
add
in
hlt
adc
sbb
daa
loopne
shl
enter
push
sbb
aaa
jo
jmp
insb
rolb
cwtl
xchg
mov
xlat
aas
adc
hlt
add
add
out
call
push
mov
and
sti
jmp
push
mov
aam
cmp
jg
inc
inc
repnz
call
mov
push
in
shlb
sbb
aad
or
outsb
dec
add
sub
les
mov
or
lds
cmp
pop
xor
adc
je
push
inc
inc
out
cmp
sbb
addr16
or
or
and
imul
cwtl
call
xchg
fildll
and
mov
add
sbbb
xchg
rclb
out
test
inc
mov
popf
xor
loop
aaa
enter
jo
lret
jg
push
in
ror
les
add
xor
mov
std
jb
cmc
dec
add
sbb
push
mov
inc
mov
jbe
or
icebp
add
testl
hlt
pop
add
pop
adc
lahf
sarb
xor
inc
daa
or
aaa
mov
lcall
sbb
sub
pop
ret
dec
arpl
lret
js
std
cmp
mov
pop
xorl
mov
lock
jne
push
mov
mov
shl
inc
sbb
add
lock
fisubs
std
xor
jge
clc
push
add
scas
push
js
cmp
das
add
cmpsb
inc
pop
cmpsl
scas
pop
cltd
cmc
int
sub
mov
add
test
xor
cmp
sbb
add
xchg
sub
push
xchg
into
pusha
cmp
ret
les
sbb
stc
mov
push
inc
fcomi
jp
loopne
pop
rclb
clc
lret
cmpb
mov
xor
or
dec
fs
jl
inc
jne
jecxz
add
test
out
or
xor
loopne
test
mov
jg
or
add
fwait
mov
inc
jl
pop
roll
fsubr
sub
push
pusha
out
call
push
aaa
loopne
enter
dec
add
mov
inc
dec
and
xor
pop
lret
aad
mov
testb
inc
mov
mov
mulb
push
jl
ljmp
pop
fisubrl
aad
lods
jne
fldcw
and
add
lea
sub
cwtl
mov
rolb
cmp
or
pop
imul
or
xor
mov
inc
imul
add
loope
xchg
sbb
mov
inc
movsb
jp
cmp
mov
out
in
mov
and
pop
or
repnz
cmp
push
and
cmpb
cmp
jno
fs
add
push
out
adc
pop
call
pop
add
aam
test
mov
pop
out
cwtl
mov
adc
ret
push
mov
mov
cli
les
add
scas
scas
lods
dec
jp
pop
stos
bound
and
dec
fldl
in
pusha
lds
sarl
incl
or
pop
xor
jne
cmp
int3
jp
das
mov
xchg
fldl
or
shrb
jge
aad
xlat
daa
incl
adc
fistpll
std
pop
cld
js
rcl
inc
es
xchg
sub
fs
stos
bound
loop
ss
mov
adc
add
add
xchg
jg
arpl
add
movsl
dec
sbb
idivb
mov
js
push
ret
ds
push
xchg
pop
in
fldl
dec
sbb
mov
aaa
inc
mov
push
xchg
adc
test
mov
psubusw
or
add
pop
dec
std
pushl
cwtl
in
sub
jp
xchg
mov
sub
es
push
mov
mov
or
shlb
add
push
pop
fcomi
insl
mov
push
sbb
sbb
cmc
mov
push
sbb
lods
jb
js
pushf
div
pushf
or
ficoml
adc
getsec
sbb
sbbb
sub
xlat
sub
push
andb
ja
push
push
pusha
repnz
test
call
lods
pop
mov
popa
out
dec
icebp
push
jns
add
in
cmp
add
mov
and
jnp
jbe
cwtl
test
repz
out
and
inc
popa
push
lods
pusha
push
xlat
fcompl
sbb
push
insl
sub
fwait
adcl
pop
cli
inc
xchg
push
nop
rcr
lods
pop
iret
sbb
in
or
push
ret
dec
repnz
jmp
repz
pop
scas
outsb
pop
or
pusha
in
lcall
nop
ja
in
add
add
arpl
pop
add
lea
out
cld
jle
sub
rol
subb
push
sub
xlat
inc
repz
add
das
ss
fstps
lea
sbb
mov
xchg
mov
adc
ficompl
mov
sbb
stos
add
add
roll
add
inc
rep
popf
mov
cmp
xorb
pop
xor
lcall
add
adc
int
shlb
mov
inc
jb
push
sbb
sub
insl
jmp
sbb
in
movsb
adc
imul
adcl
mov
js
push
pop
sarl
scas
das
cwtl
add
or
icebp
je,pt
mov
in
inc
jb
push
mov
loopne
rolb
pusha
xor
xor
sarb
dec
mov
addr16
mov
cltd
xchg
or
and
jae
fsub
into
or
les
or
pop
cmp
cmp
cwtl
xor
xor
xor
mov
sbb
imul
mov
loope
or
push
jg
xor
mov
sbb
mov
and
pop
jge
push
sbb
adc
add
cmp
imul
sbb
repz
inc
mov
negb
push
or
jo
push
sbb
cmp
add
sub
repz
lods
divl
sbb
adc
sbb
xlat
fildll
and
pop
jmp
adc
pop
adc
scas
data16
fldl
mov
stos
nop
cmp
xchg
sbb
loopne
repz
loop
push
push
sahf
cmp
and
dec
mov
mov
add
nop
addr16
inc
in
push
fdivs
lcall
xor
adc
dec
add
fldenv
pop
lahf
sbb
fsubrs
cmpsb
pop
cmp
add
and
adc
push
pop
push
add
jle
push
jb
movsl
push
lock
int3
pop
sbb
nop
sub
inc
fisttpll
add
imul
pop
add
int3
push
fcmove
ljmp
mov
add
adc
cli
inc
push
mov
int3
aam
mov
mov
mov
in
adc
sti
clc
enter
outsl
fisubrl
adc
test
xchg
mov
loopne
pop
add
test
stc
mov
lret
mov
leave
pop
push
test
cmp
and
in
inc
sbb
jnp
mov
or
fs
xchg
sbb
jb
pop
mov
ffreep
mov
imul
cld
lret
stc
in
int3
js
add
jl
or
out
add
out
dec
ja
pop
popf
loop
add
shr
mov
add
ret
xchg
dec
inc
dec
jl
ja
inc
in
arpl
cmp
mov
dec
inc
les
mov
pop
add
sbb
call
jo
xor
lock
add
or
arpl
movsb
xor
test
mov
jae
xchg
cmp
add
dec
shl
pop
test
cmp
mov
cwtl
lods
and
int3
in
sti
pop
sbb
push
jmp
movsb
addr16
jo
adc
fxch
xor
inc
cmp
sbb
mov
or
push
xor
cmc
add
scas
xor
shlb
xor
ljmp
adc
inc
pop
pop
sbb
mov
lds
adc
cmovnp
dec
test
in
cmp
test
sbb
mov
ror
cmp
push
add
add
out
sub
jo
add
jp
adc
jbe
add
add
jno
mov
adc
push
sub
mov
test
popa
sbb
adc
cmp
push
and
push
pinsrw
mov
xor
push
pop
add
jmp
mov
addb
addl
cwtl
aaa
dec
cmpsb
sub
mov
add
mov
add
push
lock
negl
push
loopne
mov
inc
fbstp
cli
and
movsl
inc
out
add
dec
mov
dec
flds
scas
lcall
add
repz
jle
cmp
lret
data16
sbb
inc
sub
jecxz
xorb
cmc
pop
add
mov
add
xchg
cwtl
add
nop
mov
add
repnz
add
clc
xor
rol
xchg
add
push
lea
shll
pop
std
add
pop
add
int3
mov
xchg
jns
aad
inc
add
jl
inc
clc
repnz
or
and
pop
icebp
push
adcb
aaa
jge
pop
in
pop
movsb
rolb
xor
jmp
sub
lahf
je
cli
les
adc
jg
add
out
pop
leave
lods
sbb
lret
into
adc
ss
inc
xor
shlb
aad
sbb
mov
stos
add
jns
inc
mov
scas
add
xchg
clc
pusha
inc
xchg
push
ficoms
cmp
add
push
add
mov
andl
iret
dec
or
sub
add
push
lret
ret
mov
inc
push
mov
adc
int3
sub
mov
les
add
lds
cmp
lods
mov
lock
mov
inc
jnp
push
xor
arpl
jge
xchg
mov
gs
xor
mov
mov
add
loop
idivl
pop
add
test
enter
add
insb
or
add
in
and
mov
push
ret
jnp
jo
cmp
clc
loopne
out
sub
xchg
stc
pop
inc
mov
ljmp
xor
cwtl
pop
fstp
mov
lahf
add
aad
dec
add
aas
xchg
call
pop
aam
mov
cmpsb
mov
jg
and
popf
pushf
add
and
movsl
fmull
pop
outsb
xlat
cld
mov
sbb
dec
int
sub
xor
hlt
cmp
xchg
inc
cs
xor
mov
add
stos
insl
pop
nop
xor
js
mov
in
push
ja
mov
icebp
pop
or
ds
sbb
into
adc
cmp
push
add
lods
xlat
push
or
out
es
cmpl
pop
cmc
jae
inc
sub
imul
cltd
mov
mov
jno
add
sbb
out
clc
hlt
lea
mov
jne
or
add
xor
dec
gs
pop
repz
cmc
loop
or
inc
or
call
pop
mov
psubd
dec
ret
and
lret
cs
cli
into
popf
add
fsubrl
add
bound
in
mov
ret
pop
ret
cwtl
sbbl
ljmp
jns
and
sbb
insl
lret
xchg
xchg
add
movntq
icebp
add
out
xchg
mov
negl
je
add
xchg
mov
push
xor
add
and
popl
call
aam
and
aam
dec
mov
push
or
cli
nop
hlt
push
add
adc
flds
in
loopne
mov
jnp
mov
lock
je
cmp
pusha
xor
pop
push
insb
cli
or
add
add
or
push
mov
add
out
loop
fiaddl
add
xchg
dec
add
sarl
sbb
loopne
cli
xor
add
test
adc
lds
cmp
test
and
cs
out
or
daa
test
push
push
xchg
cli
xchg
jb
dec
xchg
lods
call
push
add
sarb
movb
outsb
dec
cmp
add
or
add
xchg
in
scas
jge
out
rcll
dec
adc
add
inc
sub
mov
enter
adc
xor
mov
in
imul
test
in
adc
jl
push
or
fs
cmp
ret
cmp
in
shll
mov
add
clc
lret
icebp
lcall
xchg
jne
and
lods
std
xor
and
lahf
push
sub
xchg
fcomps
shlb
inc
add
mov
xchg
test
std
jne
pop
leave
push
or
sti
pop
mov
fxch
sbb
sub
push
rcrb
inc
iret
js
push
pop
push
pop
add
insb
popa
gs
mov
addr16
fdivs
cmova
mov
mov
cmp
in
push
mov
adc
sbb
jo
dec
add
push
rcrl
push
push
adc
push
jle
add
inc
xchg
cmpsb
shr
popa
loop
cmpxchg
xorb
sbb
add
fnstcw
outsl
jecxz
daa
mov
add
or
xor
roll
insl
adc
loopne
add
iret
subl
sbb
xchg
clc
pop
cmp
and
in
dec
lret
das
mov
shrb
out
in
add
push
pop
push
push
xor
add
add
mov
gs
insb
cwtl
int3
mov
fisttpll
push
lods
movb
in
sbbl
xor
cmpsl
xchg
add
jp
movsl
sub
push
cmp
push
jmp
mov
and
test
mov
add
rolb
add
mov
ljmp
or
call
mov
jp
xchg
inc
adc
pusha
add
mov
lret
cmp
and
sub
int
dec
add
add
jno
inc
pop
addl
mov
add
sbb
lret
add
xor
push
test
call
in
and
aaa
ljmp
mov
jns
pop
jp
aas
dec
outsl
and
dec
or
add
jg
mov
hlt
out
add
mov
or
aas
pop
pop
jle
add
movsl
rep
pop
rcrb
adc
xchg
dec
fwait
rol
sbb
stc
divl
add
das
daa
add
scas
jo
or
push
test
int3
jne
add
fistps
lcall
pop
xor
sbb
jmp
gs
sbb
loopne
dec
rcr
daa
cmp
add
xor
cmp
pop
hlt
and
mov
sarb
pop
loopne
mov
push
push
sarb
push
add
mov
bound
sbbl
jmp
xchg
push
push
pop
add
jns
data16
jb
add
int
xchg
stos
sub
and
js
mov
mov
in
add
mov
lret
fiaddl
pop
inc
fmulp
jb
mov
fs
or
mov
add
lds
std
xchg
add
mov
movsb
sahf
push
pop
out
push
cmp
gs
fdivr
add
test
cmp
inc
push
pusha
insb
or
mov
shll
cmpsl
or
mov
push
test
addr16
cwtl
cld
out
and
pop
int3
pop
dec
push
adc
inc
adc
pop
scas
out
pop
dec
or
scas
inc
and
jge
add
xor
out
add
cmp
pop
pop
jno
add
cwtl
inc
in
rcrb
and
jo
test
daa
sub
add
mov
fsub
lea
xchg
ss
imul
ret
dec
loopne
shr
movsb
popa
nop
mov
push
je
cmp
xchg
add
push
popa
add
insb
add
into
mov
faddl
clc
pusha
add
and
test
cmp
dec
push
add
pop
adc
pop
add
xor
or
popa
fwait
jecxz
hlt
add
mov
add
mov
cmp
mov
inc
daa
sti
mov
push
ds
imul
shll
xchg
and
popa
xlat
add
add
xchg
or
out
clc
push
and
mov
xchg
cld
dec
pop
push
inc
pusha
test
cmp
pop
das
dec
adc
add
in
notb
cmp
repz
pop
stc
addb
push
pop
pusha
imul
mov
inc
mov
cs
jnp
mov
inc
or
hlt
std
pop
add
jl
bound
jb
add
leave
push
jmp
cmp
add
jl
call
sbb
xchg
jbe
andb
sub
lea
mov
ljmp
or
int3
adc
dec
mov
sbb
aad
int
negb
jae,pn
sbb
test
add
dec
and
inc
cld
into
addb
in
out
push
add
sub
aaa
jb
ret
xor
jmp
scas
mov
loope
mov
outsb
adcb
loop
inc
cmp
ds
push
add
lret
jno
xor
insb
jmp
inc
pop
mov
add
jns
add
in
push
sbb
rcrl
imul
pusha
jno
xor
stos
jb
out
ljmp
add
daa
scas
in
sub
nop
xor
imul
test
add
inc
fidivs
mov
mov
add
andl
pop
sub
mov
cmpsb
aam
add
jge
and
inc
pop
js
pop
mov
sbb
inc
fiadds
scas
pop
pushl
rol
fwait
mov
push
lds
jae
xor
inc
movsb
dec
in
call
pop
mov
fucomp
inc
or
jnp
mull
sub
jno,pn
jp
add
dec
add
je
sbb
fstpl
sbb
outsl
add
pop
scas
enter
add
push
xchg
imul
in
cwtl
xchg
mov
and
sub
cs
into
add
push
sti
outsl
cltd
fs
and
sbb
add
stc
scas
leave
iret
aaa
add
imul
or
daa
int3
or
das
push
scas
shlb
pop
pushf
call
dec
aas
add
outsl
dec
scas
push
mov
nop
xor
lret
lock
rcr
push
sbbb
sbb
adc
pop
lock
aad
push
mov
rolb
xchg
arpl
mov
add
out
ffree
arpl
add
gs
jecxz
sbb
pop
cmpsl
mov
in
or
andb
fbld
ficoml
and
xchg
mov
adcb
sub
cmp
inc
and
and
rclb
sahf
lock
lahf
jae
lcall
in
mov
fdiv
jg
stos
mov
movsl
push
pop
test
inc
or
notb
adc
inc
mov
lods
and
daa
xor
or
das
and
fucomip
mov
or
testl
andl
repnz
xchg
push
bound
xchg
dec
jae
js
xor
lahf
adc
insb
push
push
fcoml
mov
roll
mov
inc
cmp
jbe
movsl
inc
int3
cmp
faddl
pop
test
inc
mov
fcomp
in
pop
push
shr
add
cwtl
stc
dec
inc
orl
dec
bndldx
data16
push
xchg
and
or
inc
adcb
inc
cmpsl
xchg
mov
roll
jno
sbb
loop
or
push
pop
xchg
pop
and
gs
xchg
leave
fdivl
fcoms
lods
pop
add
dec
jp
add
or
dec
fisubl
cmp
outsl
pop
mov
movsb
es
popa
and
in
inc
push
cwtl
dec
sbb
adc
mov
add
push
pop
orl
clc
add
add
jmp
jle
xorb
and
call
leave
dec
mov
sub
or
add
xchg
adc
rol
nop
lods
or
fdivrl
sbb
loopne
in
iret
adc
add
insb
mov
popa
iret
adcl
mov
pushf
add
and
jne
or
or
jge
mov
push
nop
in
xor
add
aas
mov
mov
sub
xorb
in
test
inc
push
loop
xor
pop
mov
ljmp
imul
shrb
mov
pop
mov
push
popf
pusha
fs
outsb
out
lock
and
dec
pop
xchg
xor
fwait
outsb
icebp
adc
aaa
enter
aaa
push
jmp
adc
push
cmp
push
adc
mov
dec
mov
jno
test
and
pop
push
pop
and
push
pusha
dec
mov
mov
mov
movzbl
cltd
in
jl
pop
sbb
js
or
fisttps
je
adc
jbe
fxch
push
fs
js
pop
scas
add
mov
gs
inc
push
or
lock
repz
xchg
pop
xor
push
add
xor
mov
push
xchg
call
mov
in
lock
mov
inc
add
sarl
arpl
and
mov
cs
add
cmpsb
and
sbb
in
inc
mov
xorl
and
addb
lret
add
popa
xor
adc
or
push
pop
xchg
add
xor
lret
mov
adc
and
pushf
adc
es
adc
sub
push
adc
push
jbe
cmp
rorb
pop
xor
pushf
es
les
fimull
push
sub
pop
aad
jne
cwtl
mov
popf
pop
adc
ror
pushf
sbb
inc
add
xlat
push
jb
rorl
adc
or
or
outsb
loop
adc
mov
test
xor
popa
test
mov
and
or
adc
ljmp
flds
jg
inc
add
shl
cmp
fiadds
push
lcall
or
inc
mov
add
cmp
inc
sbb
bound
fsubl
xchg
or
shrb
dec
scas
sbb
mov
xchg
fidivrs
cmpsl
sub
sbbb
pop
sub
enter
cmp
nop
xchg
push
dec
or
mov
xor
lock
jns
cs
movsb
pop
fcmovbe
aam
jne
fldl
jae
movsb
push
rorb
pusha
jo
stos
jb
das
cwtl
and
add
jns
std
or
aad
cwtl
push
push
cmp
fisttps
stos
das
sbb
dec
je
out
subl
adc
pop
cwtl
jge
xchg
cmp
or
push
push
stc
int3
add
pop
leave
push
inc
or
pushf
pusha
dec
cmp
jo
push
mov
cmp
sbb
pop
xchg
add
xor
sbb
lock
test
add
lds
mov
cmp
stc
cmp
ds
out
popf
lock
mov
mov
ljmp
xor
sub
lds
jg
sti
jmp
xchg
pop
adcl
or
mov
faddl
bound
mov
popa
in
lock
add
lods
dec
out
push
out
icebp
pop
mov
push
jae
movsl
mov
adc
data16
adc
mov
add
pop
inc
adc
cmp
push
cmp
fimuls
push
xor
push
sbb
pop
stos
nop
sub
cld
or
adc
fs
sbb
cmp
mov
or
outsl
sbb
pushf
dec
sbb
adc
movsb
add
out
xor
sub
pop
jbe
mov
and
push
mov
popa
pminub
repz
ds
jecxz
sub
and
mov
test
jns
scas
mov
add
xor
les
cwtl
int3
loop
popa
sub
ror
adc
mov
imul
push
xor
cmp
jmp
add
fcoms
xchg
inc
xor
adc
in
mov
xchg
sub
out
ljmp
add
push
push
add
jecxz
test
push
xor
dec
into
dec
pop
jno
ficoms
xchg
clc
adc
mov
add
mov
xlat
repz
and
mov
inc
push
daa
sbb
and
loopne
adc
sahf
nop
inc
xchg
add
push
cmp
xchg
aas
dec
or
cmc
popf
es
int3
or
cmp
push
add
dec
adc
inc
xchg
addl
mov
stos
in
aaa
stos
loopne
imul
cmp
jp
pop
addl
cmp
stos
cltd
clc
jns
sbb
js
sbb
cwtl
popa
imul
cs
or
add
lahf
fsubrl
adc
jbe
in
inc
test
sbb
push
cwtl
rclb
and
add
dec
and
adc
movsb
cld
adc
sbb
jbe
and
daa
adc
mov
jae
or
shlb
jecxz
fcomps
adc
push
shrb
inc
mov
cld
push
cmp
mov
pop
adc
jo
mov
or
mov
add
mov
or
mov
push
jge
cmpb
lahf
add
lods
bound
cmpsl
imul
sbb
add
inc
dec
outsl
add
lahf
stos
and
dec
mov
add
xor
push
add
cmpb
cmp
popa
subl
aaa
test
into
in
lods
pop
rep
push
sub
testb
pop
add
adc
sbb
push
add
mov
fsubp
in
add
pop
push
sbb
mov
inc
subl
add
push
fwait
stos
add
add
leave
insl
cwtl
xor
pop
push
mov
ja
orb
jno
cmp
popa
jo
iret
push
xchg
mov
fwait
cmpb
push
add
dec
push
mov
jmp
ret
insl
rolb
das
rcl
in
fildl
fists
jmp
add
out
mov
sub
mov
mov
sbb
add
add
ret
aad
pop
mov
ss
mov
push
lcall
add
cs
cmp
inc
push
mov
push
aam
fldl
repnz
aad
std
add
mov
push
int
jle
lds
xchg
fs
out
pop
rorb
movsl
add
add
adcb
cmp
cmp
adc
scas
lret
push
leave
lods
loop
jbe
daa
mov
aam
add
mov
and
push
daa
fnstenv
inc
in
adc
add
mov
pop
mov
stc
data16
jp
xchg
jo
pop
cltd
or
inc
sahf
and
je
inc
sub
pop
sti
lahf
mov
push
adc
idivl
je
add
ret
out
add
and
pop
lock
pop
repz
out
ss
dec
jno
add
fsubs
inc
inc
call
jl
push
inc
sub
subl
and
imul
or
mov
push
jle
pop
add
mov
jecxz
add
jb
mov
cmp
xor
push
cmp
push
xchg
add
std
fdivrs
mov
movsb
add
and
push
jnp
adcb
inc
add
fimuls
adc
or
add
adc
inc
mov
js
dec
mov
es
push
imul
push
push
sub
dec
xor
out
clc
nop
cmp
imul
adc
loop
loop
add
icebp
ljmp
add
or
js
jp
mov
mov
add
rolb
je
das
outsb
insb
and
add
mov
mov
jo
adc
cmpb
adc
lds
stc
dec
inc
or
mov
das
or
daa
ds
and
jp
or
inc
adc
test
enter
xchg
rorb
lret
int3
add
in
add
test
lret
aaa
sbb
rorl
xor
sbb
popl
xor
push
xor
sub
or
lock
mov
xchg
ss
out
mov
popa
push
cli
aas
xorb
mov
stos
mov
movsb
loope
push
lret
or
add
rcrl
clc
testl
adcb
cmp
addr16
dec
or
cli
add
movsb
cmp
mov
dec
xchg
outsb
add
push
fdivl
mov
cmp
and
jnp,pt
jmp
enter
and
sub
jnp
in
sti
cmpsb
mov
cmp
push
les
addr16
outsl
add
data16
xchg
or
mov
test
xor
add
mov
and
adc
inc
push
shrl
int3
inc
fldl
cmp
pop
addr16
leave
dec
add
inc
jp
sbb
and
subb
add
cld
daa
adc
fs
je
pop
out
mov
add
pop
loope
and
push
cs
jb
add
mov
lds
adc
push
inc
add
mov
jne
push
ret
aaa
movl
sub
add
sbb
mov
jns
add
cmp
pop
add
sub
hlt
sub
into
adc
add
outsb
pop
in
loopne
xchg
adc
and
das
hlt
push
je
mov
cmovo
xor
test
es
add
sub
testl
pushw
jns
mov
stc
fsubrs
sahf
add
dec
std
xchg
mov
add
nop
sbb
dec
xchg
sti
xchg
rorb
arpl
push
cmp
mov
and
or
pop
xor
in
test
or
stos
addr16
bound
pop
popl
sub
adc
scas
add
enter
ret
loope
mov
xorb
xor
iret
lret
push
and
add
push
sbb
fs
ret
cmp
mov
inc
mov
add
sbb
lea
push
xchg
fstpl
mov
sbb
loopne
aam
xchg
xor
scas
dec
popf
repz
xor
mov
jne
or
mov
pop
jl
add
test
jp
push
sbb
inc
cmp
inc
add
add
in
iret
clc
add
add
mov
outsb
push
or
paddd
push
adc
js
mov
movsb
nop
cmpsb
nop
xchg
stc
insl
dec
pop
cmp
ss
shl
ds
leave
pop
xlat
faddl
ljmp
aas
sbb
xor
nop
adc
aad
cmp
add
pop
xor
xor
jo
jle
dec
push
sbbl
and
js
ja
lahf
sub
add
and
sbb
cmp
inc
and
in
fildl
scas
fisubl
imull
insb
xchg
ja
addr16
call
pop
clc
imul
mov
cmp
jle
into
xchg
orl
xchg
mov
pop
fptan
sbb
adc
lods
mov
or
fstpl
add
jp
out
add
outsl
adc
and
adc
pop
jmp
dec
loop
xchg
frstor
mov
or
or
shlb
and
arpl
mov
lret
adc
sbb
out
cwtl
inc
add
mov
out
aam
add
push
sbb
add
sbbb
lret
pop
inc
pop
jecxz
and
push
jae
xor
xchg
addr16
pop
lahf
fldl2e
rolb
inc
sbb
mov
dec
in
fmuls
xor
push
add
sbb
jle
push
repnz
sbb
ja
cmp
mov
push
jnp
into
lds
and
stos
jne
test
add
test
scas
nop
add
fisttps
xor
push
sti
cld
add
sbb
push
adc
sahf
adc
push
add
pop
mov
mov
jb
rcr
add
lret
cmpl
ret
adc
xor
jl
adc
arpl
out
daa
in
cmp
push
fldt
add
add
std
and
lea
cli
mov
jp
mov
popa
dec
es
ret
pop
mov
fisubs
hlt
pop
inc
jl
push
in
dec
loopne
fwait
in
xchg
add
mov
add
sub
lods
pop
add
daa
pop
call
pop
xchg
inc
add
aaa
and
dec
cmpsl
xchg
adc
mov
dec
adc
out
add
and
fwait
mov
pop
sbbb
test
mov
lods
mov
inc
popa
push
clc
and
or
cmc
xchg
add
mov
mov
ds
mov
pop
fucom
or
add
sti
ds
inc
dec
into
pop
add
shlb
pop
and
icebp
mov
pusha
les
xchg
clc
fisubrl
pop
cmp
orb
mov
and
stc
loopne
push
in
jnp
mov
sarb
jl
andb
sbb
pop
dec
shl
add
mov
lea
mov
std
push
cmp
arpl
dec
and
mov
dec
mov
mov
pop
stos
jmp
scas
jo
pusha
pop
mov
lods
add
cmp
mov
sahf
adc
test
inc
shlb
push
mov
cli
notb
add
mov
add
bswap
pop
das
sbb
daa
fcoms
add
sbb
shll
mov
cmp
in
adc
push
cmp
aaa
add
gs
add
push
push
mov
fwait
push
fiadds
arpl
ds
iret
pop
push
xor
in
in
sahf
stc
jp
push
xor
jb
shrd
loopne
jecxz
out
int3
add
aaa
loop
adc
sbb
adcb
sbb
xchg
jo
or
add
xorb
movsb
add
lods
adc
mov
jnp
outsl
fistpll
ljmp
ja
out
add
dec
jbe
repnz
mov
test
sti
lock
xchg
sbb
mov
inc
add
cmp
int3
and
xchg
xorb
pop
ja
negb
jae
add
lea
pop
jmp
rolb
xlat
ds
push
mov
pop
mov
js
mov
jge
mov
add
add
fldt
add
xor
jb
mov
cmpsl
inc
sub
test
idiv
fistpl
js
push
push
mov
add
jbe
sahf
add
jp
lahf
je
push
xor
aad
daa
loop,pt
inc
add
xor
inc
add
sub
mov
cli
cmpl
add
pop
adc
fstps
sub
out
incb
mov
adc
test
jecxz
insl
cwtl
addb
mov
das
stos
repnz
std
mov
add
test
addl
arpl
add
inc
mov
jge
test
rep
sbb
les
mov
xor
push
hlt
mov
int
jne
cmp
jp
add
dec
inc
nop
add
jo
out
or
sub
cwtl
fisubs
scas
and
add
xor
hlt
add
dec
scas
movsl
push
xchg
sbb
adc
movsb
fs
or
xor
jmp
in
sub
add
xchg
push
pop
cmp
dec
cwtl
pop
and
add
push
lods
xchg
add
sbb
add
cmc
imul
out
add
pop
cmpb
inc
inc
fsub
jl
add
fidivl
dec
jge
test
xor
xchg
loopne
lcall
dec
mov
add
xchg
dec
jno
dec
xchg
xor
rolb
mov
xchg
add
pop
add
jno
hlt
insl
out
pop
pop
mov
pusha
movsl
push
call
add
xor
in
sub
or
mov
aas
or
cld
popf
pop
pushf
add
jno
fsubrs
sub
mov
or
inc
cltd
js
add
push
pusha
mov
adc
xlat
push
jecxz
mov
add
into
aad
int3
pushw
imul
jbe
loope
jb
call
jecxz
pusha
mov
adc
adc
adc
enter
cmp
pop
push
outsl
in
xchg
daa
in
repnz
push
pop
pop
adc
add
inc
filds
add
mov
and
stc
lret
push
dec
fs
insl
in
pushf
pop
fwait
lods
dec
sub
nop
xor
mov
add
cmp
add
mov
lea
out
dec
add
sub
and
adc
add
mov
dec
pop
int3
or
fmull
add
pop
push
cmp
div
add
call
xor
xor
add
outsl
add
repnz
xor
lds
icebp
andb
imul
and
leave
xorb
clc
sarl
popf
aam
jp
add
ljmp
jns
inc
daa
mov
or
fiadds
add
push
int
add
dec
rcrb
push
adc
mov
or
jae
fsub
inc
scas
js
orl
test
jae
gs
leave
call
roll
popf
jecxz
push
mov
aam
fisubl
sbb
mov
pop
lret
push
testb
add
mov
fmuls
insl
shl
add
and
mov
sti
add
mov
popf
pushf
aas
out
lret
jnp
push
add
imul
mov
or
mov
in
dec
into
mov
push
jle
loopne
and
mov
nop
add
xor
inc
xlat
mov
add
fiaddl
pop
xor
in
fimuls
inc
ds
enter
scas
repz
jg
or
jae
xchg
push
nop
out
add
inc
xchg
add
ljmp
aad
jo
pusha
negl
cltd
popa
movsb
fwait
add
ljmp
or
push
outsl
stc
gs
lret
dec
adc
xchg
xchg
loope
iret
mov
in
je
test
stc
xchg
xor
ret
and
pop
aaa
lods
cmpsb
cmp
shlb
jecxz
xadd
outsb
add
mov
pop
cmp
cmc
ja
mov
pop
xchg
push
ljmp
or
push
xor
sub
in
inc
imul
jne
or
pop
sbbl
mov
shld
in
mov
dec
lods
mov
mov
lods
fcomip
sub
js
xor
jne
repnz
or
clc
jle
sbbb
sub
dec
inc
push
into
add
outsl
lcall
push
add
dec
imulb
lcall
std
pop
or
call
faddl
sti
xchg
push
add
mov
mov
and
xor
sarb
inc
sbb
add
lcall
shrb
inc
lods
cmp
sub
jo
cmp
pop
and
pop
aas
mov
imul
int3
rorl
test
cmpsl
pop
jae
lcall
pushf
add
sub
dec
push
xorb
mov
lret
lcall
mov
mov
add
adc
pop
jbe
mov
aad
outsl
add
mov
or
sbb
mov
add
enter
out
jl
mov
add
xchg
negl
add
dec
orl
push
jo
loop
sbbb
test
data16
lret
and
mov
cmp
pop
or
pusha
call
pop
out
jbe
xchg
stos
inc
sbb
loope
mov
push
mov
ja
and
pop
pop
sbb
dec
imul
mov
mov
and
jo
dec
add
inc
mov
cli
ds
dec
or
push
aaa
adcb
push
mov
mov
cmpsb
int
shrb
negb
call
mov
mov
sub
fimull
pop
rcrb
mov
fsts
xor
cmp
ret
scas
sbb
mov
sub
add
lods
pop
mov
bnd
xor
dec
add
lds
cld
pop
movsl
push
cmp
or
int3
mov
add
cltd
mov
repnz
sbb
jl
daa
cmp
pop
cmp
js
push
or
out
sti
xchg
inc
add
sbb
js
add
add
inc
push
add
cmpsb
push
ja
pusha
mov
jo
push
lock
jecxz
les
dec
push
clc
cli
mov
fdivs
sbb
addl
insl
cli
add
rclb
and
sub
dec
cmc
mov
fadd
add
sub
add
and
outsl
loop
in
mov
ljmp
add
dec
ss
xor
and
cmpsl
mov
mov
pusha
mov
loope
pop
orl
enter
push
mov
and
mov
fwait
dec
int3
mov
mov
mov
ljmp
movsb
cmp
add
or
gs
push
pop
add
push
or
insb
mov
add
vmread
mov
and
cmp
fiadds
inc
xchg
inc
xor
adc
orb
jge
push
dec
in
clc
add
cwtl
add
cli
push
test
sbb
test
inc
aas
cmp
mov
jnp
jg
mov
sub
mov
or
push
inc
mov
movb
test
cmp
lock
mov
add
insb
sub
add
and
add
andb
pop
mov
push
pop
out
add
lcall
cltd
pop
add
fadd
mov
xchg
xor
pop
pop
mov
rcrb
xchg
pop
repz
inc
xchg
and
out
push
inc
xor
rclb
adc
mov
push
xor
sub
adc
dec
pusha
int
mov
jecxz
pusha
out
aam
add
idivl
test
sub
imul
push
das
pop
add
mov
in
aad
adc
add
std
lods
sbb
icebp
mov
inc
movsl
repz
and
dec
int
cmp
ds
sbb
dec
mov
jge
or
cmp
mov
pop
cmpsl
dec
mov
jnp
pop
lcall
loopne
pusha
mov
cwtl
push
ja
cmpb
or
hlt
aaa
mov
push
add
lock
roll
push
inc
push
fidivrs
imul
add
lahf
xchg
sarb
scas
adcb
addl
imul
jno
pop
cld
stc
add
adcl
sub
test
xchg
cltd
xchg
add
dec
inc
fs
dec
add
cli
je
mov
mov
pop
inc
js
push
xor
aad
data16
add
repnz
adc
sub
add
icebp
in
adc
fs
loopne
mov
es
cmpsl
jb
fcomi
xchg
mov
add
mov
xchg
aaa
ja
push
mov
gs
jp
add
or
mov
pushf
xchg
dec
fldenv
sbb
int3
jne
add
mov
lret
pop
xor
jb
inc
and
or
add
repz
mov
aas
outsb
push
add
sub
nop
push
loopne
lahf
flds
lods
shr
out
mov
mov
into
in
enter
or
xchg
mov
cmp
out
inc
xor
add
pop
xchg
and
xor
xor
add
test
pop
jle
orb
add
inc
mov
add
scas
ljmp
jl
lock
or
andl
stos
add
lods
repnz
pop
push
add
out
insb
adc
or
add
repnz
fcoms
add
sahf
dec
sbb
inc
fldl
xor
popl
ja
rol
add
inc
outsl
arpl
xor
push
daa
and
test
cmp
cld
out
imul
xor
jge
or
xchg
jmp
out
ja
xor
jb
add
fmuls
mov
ret
idivl
add
insl
outsl
jns
cmpsb
mov
inc
add
cmc
lods
cmp
in
mov
mov
pop
fmulp
es
fsts
cmpsl
jecxz
adc
test
fbstp
in
mov
lret
and
mov
ret
fcomps
incb
aad
jne
out
push
stos
sbb
lock
cmp
sbb
out
mov
int
pushf
adc
xchg
dec
ror
and
mov
lods
sub
add
fcompl
aad
mov
cltd
in
inc
je
add
negb
add
push
xchg
loope
enter
add
and
mov
cmp
mov
adc
add
mov
fstl
add
sbb
mov
sub
out
in
jecxz
in
xchg
cld
add
cmpsl
sub
push
push
add
enter
out
add
xchg
jmp
and
call
out
xlat
popa
fimull
clc
cmp
pop
int
orb
ljmp
nop
or
add
imul
mov
les
nop
dec
cmc
xor
leave
out
adc
pop
add
xchg
cmp
sti
add
fdivp
mov
jge
add
aad
call
adc
clc
or
xchg
xchg
in
nop
mov
add
add
jge
clc
in
sbb
xchg
cmp
mov
mov
call
push
sbbb
pop
cmp
mov
push
push
fisttpl
movsl
push
pop
scas
inc
add
push
orb
add
xchg
dec
dec
cld
ljmp
inc
bswap
sahf
clc
inc
test
movsb
insl
out
mov
mov
idiv
jnp
mov
jmp
sub
sbb
js
fsubs
inc
dec
mov
int3
cmpl
bound
mov
xor
loopne
mov
and
cmpl
loope
repz
movlps
pop
jge
sub
push
pop
inc
mov
xor
mov
xor
or
adc
sub
movsl
js
or
pusha
xor
push
movsb
ds
mov
xchg
add
bound
xchg
fsubrl
push
pusha
aad
add
loope
cmpsb
sarb
mov
lds
push
and
cmp
push
into
ds
mov
faddl
or
sar
jmp
call
icebp
and
shlb
shl
push
test
addb
in
pop
xor
jl
and
cmp
push
pop
stos
test
ret
cmp
es
cmp
push
xor
pop
push
xchg
lods
test
sub
jnp
es
mov
fadd
fiaddl
repnz
fldl
xor
inc
push
into
and
jp
lcall
lret
mov
or
pop
outsl
pop
push
and
pop
sbb
sar
add
sbb
sti
cmp
popa
add
fldcw
scas
sub
inc
je
shll
incl
push
hlt
lock
out
mov
push
pop
movsb
xor
pop
loop
scas
out
test
lret
hlt
lods
jecxz
mov
fists
movsl
jae
addl
xchg
adc
incl
inc
add
mov
aaa
lock
sbb
push
loop
les
sbb
pushf
cmpsb
push
dec
add
imul
adcl
fwait
mov
in
and
lcall
pop
mov
dec
mov
shlb
add
xor
jge
add
nop
cmp
or
std
lcall
xor
cltd
xor
leave
subb
mov
sarb
mov
jl
clc
in
cmpsl
and
hlt
shlb
les
out
pop
nop
cmp
ret
shlb
fs
rorb
mov
dec
in
nop
mov
add
mov
push
mov
mov
push
popa
js
out
push
jb
add
movsl
add
rcll
and
mov
inc
jle
faddl
ds
loopne
dec
icebp
ljmp
inc
aaa
add
movsl
cmp
lock
jne
push
mov
fdivl
int
add
mov
outsb
mov
scas
push
add
adc
push
jge
rclb
aas
pop
sbb
rolb
dec
or
xchg
sbb
addl
inc
mov
xor
push
outsl
mov
or
mov
push
lret
cld
les
subl
push
push
push
scas
shlb
movsl
cmp
leave
mov
out
testb
jb
rcr
movsb
sub
dec
cmp
dec
mov
pushl
es
lock
cmp
movsb
cmpb
jbe
pop
incb
insl
shrb
test
cmpsl
les
pop
xchg
pusha
add
inc
idivl
and
mov
sahf
popa
sbb
out
push
pop
pop
mov
jb
xchg
inc
aas
aad
mov
mov
add
cmp
in
fdivrs
add
cld
sbb
inc
ficomps
add
mov
imulb
mov
loopne
add
popa
repz
inc
dec
push
ja
test
xchg
outsb
or
add
mov
or
cmp
jbe
sbb
pop
adc
cmc
in
nop
sbb
add
xor
fcomps
mov
lret
hlt
mul
jg
push
xchg
sbb
lret
dec
add
cmp
xchg
add
inc
cmp
push
adc
or
sahf
push
rclb
pop
or
jb
xchg
xor
jl
adc
or
roll
lock
stos
rorl
sub
add
cmp
xlat
bound
adc
ds
in
inc
pop
popl
sbbb
inc
push
jns
mov
pop
jecxz
fildll
xlat
add
inc
adcb
pop
fidivs
ljmp
fnsave
fistl
push
push
repnz
mov
in
or
aaa
push
das
adcb
out
pop
fs
mov
and
es
pushf
add
mov
mov
xchg
iret
pop
lods
stos
in
adc
repz
xchg
xor
jle
jns
or
into
inc
add
cmp
lods
xor
int
dec
jno
xchg
stos
fcomps
mov
xor
add
negl
add
sbbb
push
cltd
nop
loopne
push
inc
mov
cmp
mov
pop
add
iret
stos
loop
ret
int3
loop
mov
add
sub
dec
cmp
and
add
jbe
xorb
outsb
mov
addb
movl
ret
lock
pop
add
sbb
dec
testl
xor
sbb
adc
dec
add
push
icebp
push
or
add
ret
sub
jno
leave
inc
sbb
inc
lahf
sub
add
jle
adc
xor
mov
pop
shrb
iret
loopne
add
in
das
ret
inc
ret
add
mov
sbb
add
in
aam
xchg
jl
push
fidivl
xor
ja
loopne
xchg
add
push
or
dec
mov
imul
or
add
jle
divb
add
push
pusha
cmpsl
dec
inc
jp
and
fsubrl
sbb
shr
mov
out
rcrb
hlt
sbb
mov
inc
adc
cmp
xor
or
fisubrl
shrb
fs
push
adc
cltd
xbegin
add
and
repz
push
pop
push
in
stos
xor
and
sub
bound
shl
test
add
jno
std
add
inc
push
bound
nop
dec
or
xchg
jmp
mulb
rcrb
jp
in
nop
cmp
ljmp
push
outsb
add
pop
or
fcomp
add
push
add
scas
inc
xchg
sahf
jecxz
ljmp
dec
add
xchg
test
in
fsubrs
jge
adc
loopne
add
mov
loop
add
cmpsl
out
mov
pusha
cmp
jecxz
rorb
movsl
mov
jno
shrb
les
push
mov
mov
mov
nop
testl
pop
enter
pop
mov
mov
fwait
mov
and
cltd
sbbb
jp
or
out
subb
rclb
movzbl
and
xor
sub
mov
pop
mov
call
adc
divl
stos
and
sbb
sbb
repz
mov
fnsetpm(287
push
or
js
pop
add
mov
jne
cld
fs
cmp
sub
cmc
inc
xchg
add
xlat
mov
lahf
adc
jg
jne
test
lcall
pusha
cwtl
sub
hlt
jecxz
test
xorl
das
fnsave
jb
add
into
dec
pop
xor
mov
or
in
add
mov
int3
rclb
rcll
cld
mov
dec
or
add
mov
sbb
pop
icebp
or
xchg
shl
in
inc
cwtl
mov
add
xorl
jge
mov
movsl
add
stos
pusha
jne
notl
cmp
jb
fs
cmp
mov
and
or
mov
inc
dec
ds
stos
add
or
mov
shr
xchg
adc
add
aaa
outsb
xor
dec
add
out
mov
lcall
mov
dec
pop
mov
pop
jmp
subb
sbb
pop
xor
xchg
inc
mov
pshufw
or
mov
dec
mov
inc
fisubl
nop
xchg
aas
add
dec
push
mov
sub
leave
jmp
adc
hlt
mov
xchg
add
push
pop
leave
fsub
inc
lock
or
inc
sub
cmp
add
cmp
mov
sub
mov
and
out
test
ljmp
push
lock
jnp
push
pop
add
cwtl
ret
lds
add
sbb
filds
stos
xchg
hlt
dec
je
inc
adc
inc
or
xchg
mov
dec
cli
pusha
pop
mov
pop
add
inc
and
in
ljmp
sub
movsl
sub
std
and
or
sbb
sbbl
dec
cld
xchg
mov
arpl
add
cmp
sbb
dec
add
leave
xlat
in
dec
sbb
adcl
pop
test
or
jb
aad
sbb
add
or
xchg
jmp
jo
mov
add
sub
xchg
call
add
in
jle
dec
subl
adc
inc
sbbb
add
jecxz
xlat
xchg
and
mov
push
loopne
in
add
lods
dec
mov
test
mov
or
arpl
sub
mov
add
mov
sbb
mov
mov
add
test
xor
jno
roll
dec
dec
xor
xchg
movsb
cltd
sub
mov
sub
lock
pop
sub
xchg
popa
hlt
xchg
iret
add
jno
xor
add
cld
xor
mov
jle
sti
mov
rolb
push
push
pop
lea
mov
xchg
fidivl
repz
cmp
xchg
cmp
jno
clc
mov
add
cmpsl
xor
movsb
aam
lds
xor
lods
mov
aam
popa
dec
mov
or
pop
leave
nop
int
int
in
sub
push
sbb
mov
nop
cmp
jb
inc
nop
sti
pop
mov
aad
fadds
loopne
xchg
xchg
jae
in
add
negl
xchg
je
cwtl
mov
inc
rolb
and
arpl
sahf
push
jae
test
nop
sbbb
rol
or
nop
nop
incl
sub
inc
fnstenv
nopl
imul
daa
add
sbbl
mov
aas
push
jns
sub
sahf
cltd
add
cmp
ret
js
pop
xchg
jb
arpl
add
movsl
cwtl
jo
sub
lock
je
jb
cmp
in
adcb
sbb
cmc
cwtl
mov
insl
movsb
push
and
loope
cld
pop
and
jg
and
int3
add
inc
dec
inc
stos
xchg
or
sub
nop
xchg
loope
or
lds
inc
lea
mov
and
sub
enter
mov
inc
into
sbb
mov
les
cwtl
mov
sub
cmp
cmp
fidivs
cltd
aaa
in
loop
pminsw
and
mov
and
lea
popa
cmp
stc
loope
jg
movsb
dec
sbb
lcall
adc
rolb
or
sub
push
pusha
cwtl
inc
push
xchg
inc
sbb
jb
sbb
inc
add
push
push
or
push
in
fwait
mov
and
sub
ja
xorb
ret
mov
adc
pop
sahf
inc
dec
or
sbb
sbb
xchg
clc
inc
lds
cmc
cmp
mov
cmp
mov
xchg
xchg
add
jns
test
gs
sbb
lods
sbb
loopne
mov
or
lock
lret
jl
nop
sub
in
rcr
lahf
adc
add
adc
adc
repnz
mov
subb
ret
mov
daa
adc
xchg
pop
out
or
jl
add
add
adc
adc
mov
inc
sbbl
loope
js
adc
testb
push
add
loop
fisubrs
push
and
jb
push
sbb
mov
sub
fcmovnu
in
jmp
pop
jnp
inc
inc
fisubrl
mov
mov
pop
add
pop
jb
add
pusha
pop
leave
dec
mov
and
scas
in
loope
clc
aas
subb
addb
loop
jne
mov
out
add
and
mov
dec
sub
push
fstl
hlt
push
andb
sarl
add
in
negb
push
push
and
add
pop
adc
lds
mov
mov
xorb
sbb
or
call
sbb
mov
pushf
mov
mov
mov
xor
push
shl
ret
adc
add
test
es
lods
push
add
sub
dec
enter
pop
subl
push
mov
inc
add
push
movsb
push
shlb
dec
lret
pop
lods
rolb
sbb
dec
mov
aam
adc
aaa
sub
adc
mov
jnp
inc
je
add
xchg
mov
add
jbe
loopne
rclb
out
xchg
in
push
cmpsb
das
enter
enter
inc
fcomps
aaa
dec
jae
jl
push
mov
dec
shlb
or
jne
aam
lock
adc
add
dec
loop
mov
aam
xor
test
inc
data16
stos
or
add
push
nop
adc
pusha
out
ja
add
aam
mov
out
xchg
rcrb
cmp
inc
shll
cmp
subb
into
mov
jb
or
data16
adcb
leave
outsb
push
add
sub
imul
xchg
pop
nop
in
aas
or
cmp
jmp
xchg
xor
lcall
mov
jg
fincstp
and
aam
jmp
mov
add
xchg
and
sbb
call
jo
hlt
cmp
or
mov
mov
sbb
pushf
pusha
mov
mov
add
sub
jne
sub
cmp
or
or
sbb
xchg
in
inc
icebp
aam
or
int3
add
cmp
fimuls
and
mov
jl
testb
mov
pop
call
data16
sub
pop
cmp
fdivs
jno
add
or
je
test
mov
add
push
xlat
mov
addl
add
xchg
fcoml
imul
nop
les
pop
jne
mov
rorb
dec
pop
pop
sub
nop
sbb
and
xor
or
add
out
xor
sbb
or
fdivrl
sub
aas
call
dec
push
jbe
mov
out
ja
cltd
cmc
jge
test
hlt
xorb
mov
add
aad
pop
stc
mov
rcrb
not
stos
movsb
inc
rclb
movsb
rorb
and
dec
cs
cmpb
pop
push
fidivrs
insb
mov
add
out
sbb
shlb
mov
movsb
push
fisubrs
das
rclb
sbb
insb
in
sub
inc
jg
add
dec
int
cmp
inc
in
rolb
sbb
mov
mov
xchg
pushf
and
sbbl
mov
fcomps
add
jbe
cmpsb
add
mov
int3
add
xchg
cmpl
mov
test
mov
pop
enter
addb
mov
sbb
adc
mov
scas
inc
loop
pop
dec
sub
ret
std
pop
jno
mov
mov
fstps
xor
sub
add
lods
sub
jb
adc
ja
xchg
inc
in
xchg
jae
add
pop
shlb
rolb
xor
cmp
popa
sbb
xchg
push
and
and
pusha
lcall
mov
sub
cmp
sub
jns
repnz
xchg
dec
pop
add
xchg
inc
in
push
hlt
cmp
call
sub
push
xor
add
inc
mov
mov
lods
add
cs
stos
add
mov
pop
inc
add
jmp
add
mov
ror
fwait
mov
rcl
or
mov
pop
jno
sbb
push
mov
clc
add
xor
cmp
imul
jge
dec
add
call
stos
lods
rcrb
add
push
mov
jno
dec
xorb
ljmp
loop
sub
and
lret
cld
js
sbb
ficompl
add
mov
or
push
add
add
gs
sub
shlb
adc
add
push
lret
push
pop
jmp
mov
add
hlt
fadd
sti
push
in
add
cmpsb
push
pop
or
pop
lret
mov
imul
enter
mov
inc
das
jle
mov
sar
loope
xor
mov
ret
jno
mov
clc
cmp
dec
sbb
dec
rclb
div
sti
pop
addb
mov
sarb
xlat
test
fcoml
pop
les
and
inc
mov
add
repnz
testb
imul
pusha
inc
loop
cmpsb
add
test
cmp
roll
xchg
sar
sbb
sti
push
add
cmpsb
dec
sahf
sub
es
add
or
insl
and
lock
dec
jne
bound
push
jge
xchg
mov
add
in
sub
adcl
mov
subb
add
jns
add
mov
and
test
pushf
insb
or
leave
pop
incb
lahf
andl
xchg
std
mov
lock
arpl
dec
sti
ret
out
clc
incb
loopne
sub
jne
cwtl
mov
dec
hlt
fcomps
mov
push
pushf
pop
mov
int3
or
subl
std
cs
mov
jle
loope
mov
pop
sub
and
or
add
push
pop
cmp
inc
add
adc
test
push
pop
or
insb
dec
cmp
out
or
dec
pop
cmp
mov
rcrb
mov
and
adc
lds
ret
shlb
cmpsl
add
repnz
sbb
and
xchg
pop
xchg
stos
mov
add
adc
clc
dec
xchg
cmp
bound
jno,pn
sbb
inc
lcall
and
add
notb
and
shlb
adc
call
call
cmp
add
out
mov
jmp
fnstcw
cmpsl
xchg
mov
push
add
repz
shlb
js
add
jo
push
lock
insl
fwait
dec
add
out
lret
or
inc
adc
or
rorb
push
add
mov
pushf
pop
pop
movl
call
sbbb
gs
or
add
lds
repnz
mov
fwait
int3
insl
xlat
lret
ss
sbb
std
shrl
movsl
mov
sub
cwtl
int3
sub
mov
sbb
mov
repz
add
and
sbb
sbb
add
mov
dec
and
scas
into
push
pop
add
mov
call
test
mov
pop
rcl
shr
lock
xorl
pop
xor
ljmp
stc
mov
clts
movl
xor
stos
pusha
pop
aad
xor
aam
push
icebp
out
jne
and
adc
and
push
mov
add
sub
popa
test
cmpsl
xchg
mov
loopne
and
cwtl
aam
dec
cmp
and
jnp
rorl
xor
jo
shl
add
push
or
es
xor
adcl
fisubrs
mov
hlt
dec
cmp
mov
lahf
and
es
or
add
pop
sbb
lahf
and
test
icebp
stc
dec
and
cmp
xor
je
es
and
adc
push
xorl
rorl
scas
jno
push
xchg
push
jge
xchg
jmp
aaa
mov
sub
pop
divb
xchg
add
int
pop
cmp
outsb
jae
sbb
sbbb
and
testb
pop
lods
lods
pusha
add
ja
test
inc
pop
in
or
adc
test
loopne
rcll
add
mov
lds
sub
fs
and
dec
mov
sbb
push
lret
pop
xor
ds
loope
je
mov
mov
ss
aaa
lahf
jmp
aad
in
adc
hlt
dec
pusha
jne
dec
mov
mov
inc
sub
mov
push
pusha
hlt
repnz
pop
into
arpl
aad
fadds
xchg
sti
cmp
push
inc
jnp
cld
mov
cmp
addr16
add
fstl
add
pop
enter
pusha
mov
ds
cmpl
loopne
cltd
push
pop
inc
int3
jg
jnp
jp
ret
lock
aam
fdivr
jo
cmp
shrb
std
pop
and
cmp
dec
scas
add
js
adc
xlat
sbb
xorb
mov
inc
loop
push
addl
leave
mov
dec
adcb
addl
xchg
jp
test
test
popf
mov
and
rorb
xor
les
fisubs
adc
mov
add
sub
imul
push
and
inc
icebp
lcall
popa
or
hlt
shlb
or
cmp
sbb
std
into
mov
stos
clc
xchg
scas
lods
dec
add
push
iret
mov
push
lods
in
out
pop
pop
dec
fstl
push
in
xchg
test
neg
fwait
add
push
jl
sub
sbb
aaa
jne
add
aas
add
iret
and
loopne
add
inc
out
daa
jmp
test
add
jo
fwait
or
adc
push
jl
pop
das
stc
pop
add
movsl
popf
jne
add
adc
or
fdiv
push
out
popa
jno
loope
adc
daa
cltd
inc
nop
enter
rolb
lock
add
scas
sub
dec
dec
jne
enter
imul
and
icebp
dec
insl
push
push
add
dec
icebp
ret
and
rolb
push
xchg
movsl
cmp
repnz
loopne
arpl
sbb
or
lcall
mov
cmpsl
sarb
lods
jecxz
mov
xor
jbe
adc
fs
ja
pop
mov
enter
and
test
int
mov
pop
cwtl
sbb
mov
jl
cmp
mov
add
test
ret
lods
xor
sbb
aad
pop
push
jnp
in
sarl
jo
sbb
or
movsb
test
or
fsubl
out
dec
ret
daa
mov
adcb
and
inc
add
inc
pop
and
push
popa
fs
gs
add
ja
call
movsb
leave
jno
pusha
push
mov
out
xorl
fs
je
rol
add
inc
push
sub
and
or
lds
paddsw
and
xor
dec
or
je
addb
push
push
xchg
je
add
pusha
mov
add
jecxz
push
add
and
into
and
aaa
test
pusha
xchg
add
xchg
push
pop
pop
into
sub
test
cmpsl
cs
and
sbb
fs
scas
leave
add
or
push
enter
sub
stos
mov
xchg
push
push
xchg
cltd
adc
mov
cli
idivl
jnp
sbb
or
mov
call
imul
or
jns
pop
add
dec
mov
movsl
scas
daa
xchg
jo
mov
mov
in
pop
xchg
push
or
outsb
inc
mov
pop
add
sub
adc
insb
inc
aas
inc
mov
add
cwtl
and
les
scas
adc
cmpsl
movsb
fistpll
sbb
or
mov
sub
out
sub
dec
add
mov
push
aad
jnp
fwait
sbb
data16
xorb
add
faddl
mov
jb
stos
push
enter
add
rcrb
adc
mov
mov
cmp
fsubs
xchg
sub
mov
cmp
inc
cmp
mov
lods
int
jbe
jmp
xor
cltd
into
xchg
or
cmp
stc
jbe
sub
add
and
sarb
jo
nop
inc
add
xchg
push
sahf
int3
and
pop
or
sbb
dec
mov
adc
or
pop
sahf
jnp
and
imul
sti
pusha
ja
lods
fadds
std
xor
and
insb
add
add
cld
adc
pop
sub
pop
add
andb
enter
test
xchg
and
mov
psubsw
inc
fists
mov
pop
sar
push
bound
add
xchg
jne
insb
mov
std
add
jae
lds
insb
or
add
sbb
leave
sub
push
or
or
adc
push
insb
bnd
and
sub
data16
pop
dec
ja
push
xchg
cs
mov
fwait
lcall
dec
insb
pop
jbe
std
adcl
int3
and
push
ljmp
adc
add
fxch
test
pop
sub
add
jnp
std
mov
mov
and
and
in
add
nop
ret
cmpl
adc
adc
or
in
jne
jge
add
sbb
mov
mov
lea
ljmp
fwait
mov
call
dec
xlat
jne
or
daa
mov
push
call
dec
pop
or
adc
mov
push
sbb
enter
push
jno
sub
push
jge
jl
dec
or
add
mov
xorb
ljmp
pop
test
adc
clc
add
jmp
arpl
mov
mov
inc
xlat
dec
rclb
and
xchg
and
inc
jae
aas
push
out
repnz
pusha
jb
pop
mov
scas
in
fldl
or
test
add
pop
xchg
std
cmpsb
sub
aad
mov
lret
fs
pop
cltd
sub
sub
js
lods
outsb
lock
pusha
jo
add
cli
fwait
rol
dec
sbb
adcb
add
or
imul
cmp
ja
push
test
dec
adc
mov
xor
add
mov
cmp
subb
mov
aad
cld
mov
push
or
add
dec
push
lds
add
int
pop
and
lods
nop
clc
leave
push
mov
lock
loopne
sbb
dec
loope
pop
mov
or
hlt
add
mov
je
jmp
xor
jo
addb
andb
pop
lahf
mov
cmpb
shl
push
add
xor
jbe
sbb
inc
dec
lock
sub
jno
xor
xor
fs
sub
sub
test
dec
fiadds
arpl
out
add
int
add
scas
imul
mov
mov
xchg
sub
roll
or
sub
adc
pop
int3
mov
add
ficoml
clc
lret
test
add
jmp
movb
adc
std
or
adc
push
pop
pop
jmp
add
sbb
test
push
add
callw
cs
jp
xchg
mov
push
int
stos
and
and
sbbb
add
outsl
test
shr
repnz
push
add
es
or
les
xlat
cmp
call
nop
xor
repz
jns
xchg
sahf
push
fucomp
shl
add
add
jbe
jl
icebp
das
xchg
adc
add
add
pop
sbb
pusha
push
in
and
xor
add
loopne
xlat
int3
ret
sbbb
add
jno
push
cwtl
addb
push
mov
idiv
sahf
and
insl
rcl
fcom
cmc
cwtl
add
mov
shrl
lcall
xorb
out
lahf
shrb
or
repnz
sbb
sbb
jnp
push
scas
dec
cwtl
cmp
inc
stos
popa
add
xchg
mov
jecxz
cmpsl
divb
adc
adc
xchg
clc
inc
faddp
mov
add
jnp
jbe
push
push
sbb
test
imul
das
and
mov
add
pop
test
shrb
and
lcall
and
mov
pusha
cli
push
sub
add
or
test
shl
xorl
adc
or
sbb
enter
cmp
inc
rcrb
inc
hlt
shrl
enter
das
pop
mov
test
or
inc
add
push
jno
test
icebp
mov
scas
xor
dec
jge
fsubrl
lret
or
iret
addb
push
stc
jp
pop
cltd
and
in
push
and
or
mov
addb
mov
add
rorb
in
ja
xchg
lods
insl
aam
cmp
and
mov
and
enter
ljmp
popf
jle
js
mov
pushf
call
jge
add
and
pop
aas
das
xchg
sub
adc
jo
or
stos
loope
xor
pop
push
add
aas
out
or
add
imul
imul
mov
out
cli
xlat
add
xor
dec
shr
cmp
out
je
stos
inc
cld
xchg
mov
outsl
mov
xchg
sahf
mov
cmovnp
jg
roll
and
test
xchg
mov
cld
jl
pop
lods
addb
sbb
push
nop
add
lahf
add
test
movsb
add
ret
push
rcrb
push
adc
add
pusha
mov
daa
mov
test
add
pop
inc
pusha
enter
mov
xchg
mov
imul
inc
movsl
aaa
and
jle
push
pop
outsb
or
mov
pushf
add
adc
adc
add
call
ljmp
sti
adc
adc
pop
leave
int3
test
sti
mov
repz
lods
mov
lock
pop
dec
jo
mov
cmp
sbb
shll
out
jl
stc
inc
das
pop
add
add
cmc
dec
push
and
dec
inc
aas
add
gs
icebp
add
and
mov
out
sbb
cmc
outsb
cmpb
sbb
inc
cltd
or
xchg
adc
xor
jl
out
js
clc
add
dec
aad
inc
xor
mov
adc
addb
cmp
cmp
and
add
sarl
push
outsb
mov
adc
adc
fdivs
call
mov
cmp
es
cld
add
mov
adc
and
lods
into
jecxz
mov
test
add
xor
data16
rol
call
inc
popf
loopne
js
aas
sbbb
hlt
sbb
push
insl
sbb
imul
sarb
cli
aaa
loopne
addr16
add
sub
pusha
xchg
add
lods
in
inc
inc
clc
or
mov
fcmovnbe
repnz
repz
push
adc
inc
or
addb
out
push
rcrb
mov
dec
mov
or
jbe
cmp
mov
inc
fs
add
lock
shr
mov
sub
lret
push
push
les
out
pop
adc
jbe
icebp
or
in
orb
int3
lock
movsb
xor
or
pop
lret
mov
mov
add
jne
cmc
pop
icebp
fldt
leave
cltd
into
jb
add
insb
xchg
mov
add
pop
je
adc
mov
fiadds
movsb
sahf
xchg
cmp
xor
sbb
add
aad
cmpsl
add
cmp
push
cld
cmp
movsb
and
add
pop
out
pop
enter
enter
add
push
ss
in
xchg
add
les
or
lds
outsb
out
push
add
pop
or
jecxz
xor
adc
sti
imul
dec
ret
dec
mov
out
add
add
adc
in
xchg
add
pushf
andb
mov
dec
mov
in
inc
xchg
cwtl
pop
and
add
loop
pop
mov
xbegin
in
pop
pushf
adc
in
sbb
js
insb
inc
xchg
aam
add
mov
jo
cmp
test
pop
call
pop
mov
insb
or
add
xchg
cwtl
cltd
sub
dec
popf
adc
cmp
sbb
xor
mov
xchg
xchg
xchg
sub
and
or
test
dec
icebp
push
ret
adc
loopne
aaa
mov
das
push
movsb
and
jg
rcrl
add
dec
add
fmuls
dec
add
sarb
pushl
enter
rolb
loop
cmpsl
stos
pop
and
add
adc
fwait
pop
lock
subb
lcall
dec
js
or
loope
and
in
or
xlat
or
mov
fs
cmpsl
adcl
jo
push
push
aaa
add
lret
pushf
cld
clc
adc
ror
imul
jns
sbb
test
jmp
mov
filds
loopne
icebp
and
push
mov
add
rcrb
ficompl
sub
mov
mov
add
inc
add
adc
pop
lock
jno
xor
sahf
jnp
add
jns
mov
add
ret
icebp
lret
imul
lods
movsl
mov
cmp
push
out
mov
icebp
add
sub
mov
cmp
jo
and
pushf
in
pop
std
clc
test
frstor
ret
or
jl
pop
mov
repnz
cmp
mov
ja
pop
add
mov
adc
cmpsb
fs
add
mov
add
ds
pop
mov
xchg
pop
shlb
xor
or
shlb
push
xor
add
pop
shrb
pop
mov
and
sub
cpuid
xchg
imul
popf
insl
pop
jbe
dec
jns
xorb
add
push
js
add
and
ret
es
dec
xchg
lods
add
test
ficompl
xchg
das
fs
mov
shlb
add
inc
inc
or
add
in
mov
push
sub
loope
stos
adc
xchg
rcr
and
sbb
cmpb
test
inc
xchg
adc
dec
add
ljmp
add
sbb
cltd
cwtl
add
arpl
imul
lods
sarb
mov
cmp
inc
jae
xor
sub
orb
pop
cld
jg
pop
clc
iret
add
xchg
pusha
insl
pop
xor
pusha
nop
nop
ss
rcrb
iret
mov
pop
ret
adc
repnz
dec
push
ljmp
mov
in
xchg
and
lods
nop
adc
pop
add
popf
cmc
push
jbe
pop
sub
mov
xchg
xchg
pop
add
xor
fiadds
dec
xchg
cmp
std
mov
lods
iret
sarl
add
mov
xor
add
repnz
mov
hlt
jb
fmul
fwait
repz
mov
adc
dec
xor
dec
adc
es
mov
add
cmp
and
dec
jo
hlt
mov
mov
add
ds
popa
pushf
xchg
sbb
int
ja
adc
add
cmp
add
clc
sub
xor
inc
inc
or
and
inc
ret
roll
pop
nop
dec
xor
and
aad
popa
or
and
mulb
nop
xor
pop
mov
cli
add
pop
daa
jl
xchg
xchg
mov
and
jo
lcall
push
jge
inc
out
lahf
xor
push
stc
sbb
or
push
ss
push
shlb
cmpsb
and
pop
mov
int3
sbb
mov
adc
pop
aas
test
adc
mov
add
pop
jbe
jmp
xor
xchg
into
clc
and
test
add
pusha
fisubrs
sahf
cmp
or
aaa
push
push
or
xchg
add
lcall
imulb
mov
mov
mov
addl
push
jo
repz
lea
xor
pusha
push
jbe
push
ljmp
fcomip
hlt
pop
jle
xor
sub
add
xor
cmpsl
call
dec
stos
push
cmp
mov
ja
sub
in
cmpsl
push
test
adc
sahf
shlb
gs
test
es
and
ds
inc
test
aaa
and
test
movsb
add
cmpb
out
adc
add
and
add
jb
mov
mov
les
incl
xlat
xchg
add
shlb
mov
push
adcl
inc
rcl
das
mov
jo
xchg
pop
adc
pop
dec
nop
mov
pop
hlt
inc
test
int
add
imul
test
bound
xchg
jbe
xor
pop
add
add
seto
xchg
add
in
loopne
inc
lods
jge
cli
das
daa
rdpmc
into
pop
add
push
and
jmp
icebp
stc
xchg
and
sbb
add
jge
add
push
ret
mov
add
add
and
insb
rolb
push
add
fadds
repnz
addb
sbb
add
mov
dec
inc
movsb
xchg
mov
adc
xchg
pop
jmp
fs
ror
cmp
fdivl
sub
cmp
mov
add
test
pop
mov
popa
add
clc
jo
rolb
mov
dec
enter
lcall
roll
add
rclb
hlt
cmp
cmp
enter
add
mov
iret
daa
shrl
push
add
add
jne
push
push
loopne
cmp
lods
xor
add
roll
push
nop
sbb
push
cmpb
call
lret
add
ds
hlt
andb
fnstenv
sahf
jl
lahf
or
sbb
pop
popf
out
cld
add
jnp
add
ret
sbb
repz
xor
mov
pop
gs
xorb
push
and
pop
test
xor
xor
js
pop
cltd
mov
clc
dec
icebp
or
add
scas
loopne
add
push
lea
add
cli
imul
sub
adc
test
pop
or
rorl
movsb
cmp
add
rclb
repnz
xchg
cmp
test
rcrl
sbb
in
adc
shlb
jbe
popf
add
test
cmp
pop
inc
lcall
sbb
jecxz
mov
pusha
jne
add
push
das
mov
add
test
sub
daa
adc
add
je
into
push
fstpl
pop
adc
loop
ljmp
lret
sti
cwtl
in
cmp
aas
cwtl
mov
push
sbb
mov
andl
loopne
jo
push
insl
xchg
imul
push
push
outsb
adc
call
xchg
jae
sbbb
jo
leave
push
push
xor
or
mov
fwait
push
lea
int3
sbb
mov
add
ret
jne
jno
pop
cmc
out
push
in
outsl
cmpsl
jns
lock
add
pop
mov
sub
pop
je
push
rcrb
fisttpll
in
and
adc
call
in
dec
and
add
and
movb
out
sub
fwait
pop
or
movsb
xchg
popa
add
xchg
add
and
add
add
iret
add
mov
nop
rolb
ja
sub
imul
cli
in
pop
add
cs
jo
cmp
sbbb
scas
mov
dec
cmp
and
add
loope
mov
push
iret
ss
sub
and
sti
pop
push
pop
sub
int
inc
add
aas
mov
xchg
adc
ret
mov
sar
inc
je
sbb
jne
adc
xorb
fcomp
insl
dec
or
adcb
jno
imul
jnp
add
sub
jo
and
cwtl
add
int
clc
andb
je
dec
jge
in
xchg
cmp
test
cmpsl
pop
fwait
rorb
dec
repz
jns,pt
add
cmp
roll
insb
scas
inc
add
mov
jmp
divl
icebp
loopne
push
xor
push
xlat
movsb
or
mov
sub
xchg
jle
mov
lcall
adc
hlt
sbb
mov
xchg
rcll
pusha
mov
add
repz
lcall
and
dec
sub
pusha
cmp
incl
adc
int3
mov
or
pop
adc
push
or
inc
or
sub
xchg
lret
add
lods
add
into
or
add
mov
in
xor
pop
jnp
inc
in
cld
mov
adc
fbstp
mov
or
ljmp
fwait
mov
dec
jmp
add
enter
push
add
ja
pop
pushl
popf
adc
inc
xchg
add
add
pusha
test
add
jne
sbb
rolb
sti
or
shll
loope
imul
or
mov
inc
fmuls
hlt
jo
sbb
sbb
and
xlat
cld
loop
fmull
test
xchg
mov
mov
rorl
and
mov
shll
lret
mov
add
dec
inc
xor
sbb
push
icebp
mov
mov
and
arpl
jne
jns
add
cmpsb
push
pop
cmc
sub
or
cwtl
push
adc
sub
aam
shll
push
bnd
add
inc
hlt
inc
jmp
in
mov
xchg
mov
cmp
call
pushf
and
ljmp
push
pop
cmc
push
dec
es
ja
sub
dec
movsb
jbe
add
add
int
ljmp
mov
into
out
adc
inc
pop
or
or
add
mov
push
add
das
xor
repnz
test
add
je
dec
push
add
xorb
rorb
pop
dec
sbb
bound
hlt
test
or
xchg
mov
lock
cltd
pop
mov
push
enter
ja
and
jp
daa
xlat
xchg
cwtl
add
inc
addb
imul
pop
add
jb
xchg
nop
je
pop
in
mov
lods
add
adc
push
sub
jge
push
fadds
stos
stos
mov
scas
mov
in
or
test
push
pusha
inc
daa
xchg
sub
add
mov
jle
sub
and
cltd
adc
fwait
and
xchg
cmpsb
or
inc
sbb
xchg
adc
jae
leave
adc
les
scas
inc
rclb
inc
jmp
icebp
das
xchg
fwait
push
call
mov
pop
movsl
ljmp
lcall
int3
add
cmc
ror
mov
testb
adc
mov
or
jne
xchg
clc
and
jl
lahf
ds
ljmp
pop
push
inc
test
test
mov
xor
cmp
test
rcl
das
out
aam
xor
sub
mov
jle
jnp
inc
inc
pop
imul
enter
jg
xor
rclb
add
sub
pushf
dec
inc
sub
mov
sti
dec
cmp
stos
pop
in
lea
faddl
dec
adc
mov
fiadds
test
iret
sbb
outsl
ret
aas
shll
js
pop
js
lock
loope
mov
add
cmp
cmc
ljmp
std
icebp
add
imull
bound
ljmp
je
imul
fiaddl
sbb
addb
inc
pop
aas
call
add
cmp
add
cs
rcrl
lahf
sub
dec
fcoml
rol
jns
mov
push
jb
outsl
dec
and
dec
push
imull
dec
aas
and
imul
xchg
dec
lcall
inc
mov
mov
jg
and
add
subb
mov
testl
cld
cli
pop
out
jge
adc
add
daa
sbb
sbb
push
xchg
int
gs
stc
shlb
ret
inc
dec
or
push
jne
sbb
ret
cltd
ret
or
leave
add
icebp
and
lret
mov
in
dec
sbb
adc
xor
stos
les
sub
sbb
cwtl
mov
mov
ds
rolb
or
sub
inc
adc
test
dec
xor
mov
push
sbb
sbb
push
mov
sub
add
pop
cli
or
in
add
xor
repnz
or
push
xchg
lods
cs
push
cld
push
ss
sub
cmp
lret
outsb
lock
das
xor
sbb
xor
cmp
push
jns
pop
xchg
jl
pop
add
xor
ret
pop
sti
in
add
insl
loop
je
bound
test
cmp
sub
repnz
rol
push
jns
pop
sbb
push
mov
rol
mov
push
call
mov
xor
add
push
repz
jp
rcrb
jae
test
jecxz
cld
pop
add
ljmp
add
jbe,pt
adc
ret
sub
sub
outsl
pop
add
push
xor
mov
inc
push
repz
or
xchg
fstpl
inc
lahf
add
jb
sub
xchg
mov
imul
cltd
add
mov
repnz
mov
adcb
imul
dec
loop
stc
pop
decl
sub
jns
xor
pop
or
dec
shll
xor
and
xchg
out
push
adc
mov
sarb
loop
rep
jle
or
setno
sub
rclb
push
shl
mov
ljmp
sub
dec
sub
out
cmp
mov
imul
add
std
jns
dec
ret
dec
add
dec
lret
in
mov
orb
jns
mov
enter
ja
xchg
sbb
mov
sub
jp
add
rorl
sbb
mov
repnz
cmp
shl
add
test
pop
ljmp
add
sbb
and
inc
ja
dec
push
nop
pusha
ficomps
lock
push
adc
cld
es
add
sub
rolb
mov
int3
fcmove
pop
insl
popf
sub
xor
fnsave
daa
add
sub
ret
and
test
push
and
sub
and
mov
xor
sbb
or
pop
nop
call
adc
xchg
pop
fisubl
mov
jb
sbb
push
out
jb
ret
lcall
push
stos
add
mov
xlat
ljmp
or
sbb
popa
mov
sub
mov
jno
adc
dec
dec
mov
sbb
ljmp
daa
pop
jbe
test
cmpsb
inc
mov
jge
movsb
int
push
jb
add
imul
lock
add
subb
push
xor
dec
inc
bound
jo
mov
dec
cmp
test
pusha
lock
lahf
movsb
or
mov
lret
and
loopne
adc
mov
jb
jmp
sti
aas
iret
jg
push
popa
mov
add
sub
std
and
les
movsl
adc
add
pop
sbb
add
neg
lea
sarb
add
sahf
cs
gs
cmp
cmpsb
not
out
ret
mov
cmpb
add
mov
rorl
ds
loop
mov
mov
xor
push
ret
orb
decl
insb
pop
das
push
imul
add
cmc
sub
sub
inc
add
movsb
mov
pop
nop
dec
pop
pushf
ljmp
rolb
aam
add
add
clc
dec
sbb
mov
ret
adc
add
rcll
add
test
xchg
enter
mov
adcb
testl
lea
jle
cwtl
sub
xchg
ds
addb
cmpsb
shlb
in
jp
push
clc
mov
sub
dec
sub
rol
lock
pusha
test
lock
cmp
andb
cmp
popa
mov
in
sub
jl
and
mov
and
daa
mov
dec
sbbb
cli
cmp
leave
nop
or
jne
faddl
cld
xor
mov
inc
nop
nop
sbb
insl
and
rcll
jmp
xchg
add
repz
adc
xorb
jg
inc
ret
insl
leave
icebp
sarl
xor
adc
xchg
sbb
pop
std
add
mov
adc
mov
cmp
inc
repz
mov
es
sbb
das
sub
cmp
out
imul
xor
daa
mov
xchg
aam
mov
dec
jae
int3
in
cmp
inc
sub
mov
icebp
push
ret
xchg
jb
dec
lret
dec
shll
fadds
cld
out
insb
xor
adc
lcall
shr
xor
in
push
mov
fucomip
inc
clc
xor
jecxz
and
test
int3
or
ja,pn
jns
add
addr16
rorb
out
mov
cwtl
lret
inc
add
mov
std
shlb
subl
pop
push
add
jge
data16
iret
int3
dec
cmpsl
clc
or
jne
mov
out
cli
repnz
or
adc
xchg
aad
loopne,pt
or
or
ret
movsb
xchg
insb
enter
outsl
cmp
cmc
mov
jae
lcall
add
repz
pop
push
je
sbb
xchg
cmp
lods
or
jns
je
and
les
mov
add
lock
cld
sub
add
rorl
inc
bound
add
sub
aaa
in
jecxz
or
lcall
movsl
rolb
mov
ret
repnz
cwtl
in
jne
dec
mov
cmp
sbb
xchg
sub
pusha
dec
pop
pop
jl
jp
inc
out
add
cwtl
add
mov
mov
ror
xor
mov
push
mov
leave
je
jmp
jne
xor
add
pushf
adcb
adc
flds
jge
pop
lods
or
imul
push
enter
sub
add
cli
lcall
add
pop
int3
dec
inc
scas
lods
je
inc
inc
sbb
sub
jne
ds
add
dec
jmp
shrb
ret
insl
inc
inc
and
lods
rcrb
xchg
movsb
pusha
nop
or
mov
enter
xlat
push
subl
pop
je
jno
add
mov
or
add
lds
and
shll
add
and
jp
add
out
shll
negb
push
call
dec
add
push
mov
clc
dec
dec
jne
subb
in
ret
lods
icebp
roll
mov
jns
inc
insb
out
cmp
fadds
sbb
jb
je
adc
roll
adc
lahf
lret
outsb
mov
fcmovu
lock
jg
fisttpll
jb
mov
xchg
mov
pushf
enter
mov
push
les
outsb
mov
xor
je
xor
lods
xor
call
pushf
push
and
jns
inc
dec
add
xor
mov
push
std
loopne
add
jbe
xor
fsts
fdivs
add
jns
push
mov
ljmp
rolb
wrmsr
pop
pusha
add
mov
out
pop
in
mov
mov
insb
popa
pop
fmuls
xor
xor
add
lock
mov
jnp
es
cmp
cltd
lods
add
adc
rcrl
das
inc
rcrb
bswap
inc
sbb
repz
mov
add
icebp
subb
mov
push
shll
movl
jbe
fucomi
jo
lds
notl
cwtl
adcl
sbb
adc
xor
jae
pop
pop
dec
js
and
mov
xchg
sbb
xchg
inc
mov
add
fld
dec
aas
incl
bound
enter
bound
xor
shlb
push
sbb
pushf
outsl
dec
cmp
or
mov
pop
push
andb
fldl
daa
sarb
jne
jns
xor
les
fmuls
cwtl
aam
incl
cmp
xchg
adc
arpl
xchg
xor
add
cmp
jb
repz
cmpsl
jbe
add
daa
sbbb
mov
xor
dec
pop
push
mov
add
xor
and
push
fbstp
sbb
jo
cmp
fcomps
clc
cmpsl
push
repnz
icebp
mov
and
nop
jp
add
movsb
cmp
push
mov
dec
or
ret
push
dec
mov
and
sub
adc
mov
add
lods
and
xchg
push
cli
push
std
insb
rorb
out
lods
inc
mov
mov
orb
mov
lods
mov
mov
lret
ljmp
sbb
mov
aad
add
xor
push
out
xlat
inc
leave
jle
add
loop
add
test
fsubrs
aas
gs
andl
insb
mov
dec
xchg
sub
inc
mov
addl
push
inc
sbb
scas
imul
lock
outsl
pusha
dec
or
pop
lods
popf
add
ret
inc
add
add
dec
mov
pop
pop
push
hlt
xchg
shlb
cld
adc
into
sub
cmp
mov
pop
imul
in
push
or
lock
pushf
inc
or
movsl
das
xchg
test
inc
xor
pusha
leave
int3
arpl
pminsw
or
pop
adc
mov
sarb
fs
bound
add
or
clc
orb
and
mov
push
jb
add
cmp
mov
mov
nop
pusha
sbb
addr16
pop
jp
ja
mov
xchg
fadds
in
pop
in
xchg
add
clc
ja
dec
sub
les
mov
xchg
add
inc
sub
or
aas
ljmp
jne
in
inc
add
mov
add
xor
add
cmpsl
pop
mov
jg
cmp
mov
les
or
in
into
push
add
pop
xor
rorb
mov
ret
rorb
sbb
orb
repnz
cmp
pushl
add
push
dec
add
dec
