incl
and
mov
xchg
adc
jb
cmp
andb
xchg
js
je
mov
insb
in
jb
cmp
sbb
sub
cmp
push
cli
add
jbe
addl
fmul
mov
pop
sbb
clc
clc
sbb
mull
sub
pop
ret
push
push
push
and
adc
shlb
sub
aaa
or
ret
mov
jmp
sbb
add
stos
sbb
je
mov
sbbl
inc
xor
pop
jne
in
dec
and
mov
cmp
push
xor
or
out
lea
pop
adc
test
push
push
mov
mov
jg
cmp
and
es
data16
call
mov
cmp
sbb
xor
mov
enter
test
bound
movsl
aad
push
out
mov
and
jmp
stc
add
sbb
jecxz
sbb
shlb
mov
enter
or
jl
cmp
movsb
jmp
enter
mov
loope
xchg
cmp
and
add
clc
add
jmp
rep
cld
dec
cld
stc
sbb
js
adc
les
xor
pop
pop
mov
por
inc
call
adc
add
add
cmpb
jne
aam
add
or
add
jmp
out
in
mov
arpl
xor
xor
sbb
push
jae
test
ljmp
push
pop
sbb
icebp
std
lods
daa
jp
lea
mov
call
cmp
ds
jmp
jno
cmp
and
adc
ret
jbe
mov
adc
adc
enter
or
shrl
and
in
subl
ficompl
sub
in
add
add
jne
push
lea
push
push
call
enter
mov
add
push
mov
daa
roll
mov
push
cmp
add
add
jmp
pusha
dec
xchg
mov
add
loopne
mov
shrl
adc
xor
add
jmp
jmp
inc
movsbl
ds
xor
lcall
push
push
call
push
xchg
add
cli
in
push
xor
mov
pop
pop
lcall
or
inc
out
push
xchg
fsubl
movl
iret
push
movsl
aaa
call
and
mov
add
sub
lret
inc
or
and
jae
or
movl
arpl
sub
aad
jg
and
stc
nop
mov
lock
sub
xchg
ret
inc
std
jle
mov
or
mov
rcrb
mov
push
mov
and
inc
out
mov
data16
test
mov
jnp
lds
xchg
and
push
movl
or
mov
jp
es
cmp
nop
out
jle
adc
movb
stos
adc
xor
xchg
cmp
push
pop
sbb
adc
ja
iret
push
and
or
add
adc
ss
jo
or
cmpl
push
adc
je
in
and
bound
jne
adc
test
jne
or
pushf
mov
enter
rcrl
sub
inc
adc
xor
xor
scas
push
mov
jae
cmp
push
add
cli
sbb
and
jle
sub
jge
je
and
pop
loop
xor
mov
test
mov
pop
jmp
sub
sbb
add
mov
ret
test
add
sub
dec
jl
call
or
lea
call
or
mov
scas
mov
adc
movl
or
cmpsl
lods
push
dec
leave
fistpl
inc
inc
jg
cwtl
lods
sbb
call
ret
sbb
imul
fcomp
outsb
xchg
adc
in
inc
or
push
jne
nop
inc
sub
fiaddl
pcmpgtd
inc
add
movsb
inc
clc
int
inc
fmuls
iret
fldt
add
cli
stc
mov
lcall
call
fcoms
sbb
mov
push
push
dec
loop
cmp
pop
pop
adc
add
imul
and
test
mov
jns
aas
pop
rolb
cmp
je
sub
cmp
sub
dec
adc
jl
mov
jns
and
jp
out
jmp
movsb
cltd
or
mov
popf
and
clc
or
push
arpl
lcall
sarb
pusha
or
and
sbb
ret
mov
clc
stc
xchg
jae
jecxz
pushf
push
jo
movb
shrl
jne
add
dec
xor
jmp
icebp
jl
repz
sti
push
stc
fcoml
cmp
in
cmp
adc
outsl
aad
iret
data16
cmp
mov
jb
xchg
or
mov
xor
movl
addl
sub
mov
sbb
jmp
adc
adc
dec
pop
sbb
pop
cmpsb
jl
inc
add
cmp
arpl
sbb
inc
negb
or
xor
mov
fidivs
jno
frstor
inc
push
pushl
into
mov
cmpsb
add
adc
sbb
or
sub
mov
lret
dec
adc
push
sub
pop
pusha
adc
sub
and
dec
notl
xchg
or
stos
lods
sbb
inc
xor
push
push
inc
notl
mov
repnz
arpl
decb
dec
in
out
sbb
xchg
fisubrs
les
jmp
push
mov
push
popf
jmp
mov
test
adc
fs
repnz
popf
mov
dec
daa
add
jbe
enter
daa
sahf
mov
lret
xor
cmpsl
lods
inc
mov
rcrb
out
pusha
movsb
pop
inc
fs
adc
test
js
pusha
inc
loope
sbb
sbb
test
loop
daa
add
cltd
inc
cmp
sbb
out
shr
sbb
stos
mov
mov
mov
lods
or
nop
xor
push
jns
and
adc
dec
cwtl
jnp
hlt
cs
mov
jmp
stos
inc
ret
jo
push
call
adc
nop
js
inc
push
hlt
rcrl
lock
rolb
add
jmp
repz
sub
dec
sbb
cmp
adcb
mov
int
mov
inc
scas
jmp
loope
call
xor
aam
fsubr
lea
push
cli
add
movzbl
roll
hlt
ror
test
rolb
or
or
mov
mov
jne
pop
mov
xchg
pop
daa
jns
inc
fbstp
pusha
xchg
icebp
orb
jne
incl
popf
dec
jne
sub
mov
clc
cli
pop
mov
lcall
das
xchg
inc
clc
mov
pop
adc
push
or
in
push
sbb
ret
movsl
add
mov
rcrl
rorb
inc
imul
clc
enter
mov
and
rcrb
mov
shl
jo
lock
or
pop
je
sub
shrb
in
pop
xor
mov
aas
dec
xchg
xor
or
inc
cmpb
sub
sbb
movsl
sub
dec
loopne
dec
inc
movsb
pusha
nop
pop
dec
les
jmp
and
push
inc
add
adc
sbb
push
dec
stos
int
or
dec
orb
sbb
mov
stos
push
inc
push
xor
or
cmp
push
xor
pop
xlat
test
dec
inc
add
mov
nop
aam
mov
inc
xchg
loope
or
dec
mov
pushf
xchg
icebp
sub
push
hlt
mov
test
test
push
pop
dec
adc
mov
daa
fisttps
mov
sti
and
push
cltd
xchg
fs
xor
test
pop
adc
mov
pop
sbb
cwtl
and
and
push
insl
and
add
mov
clc
add
push
cmc
pop
sbb
cmp
out
stc
mov
mov
sbb
stc
clc
sar
add
cld
not
out
bound
and
out
ljmp
hlt
loope
f2xm1
sti
jge
cmc
dec
xor
lret
in
stc
jmp
loop
add
mul
out
bound
and
clc
loop
dec
inc
sub
out
repz
arpl
jecxz
enter
sar
mov
or
mov
lds
out
sbb
or
push
lock
sbb
inc
xchg
xor
add
push
es
out
push
je
cltd
dec
inc
mov
stos
call
lcall
push
sub
outsl
mov
fsub
pop
dec
sub
not
inc
data16
rorl
fwait
pop
loopne
push
push
mov
movb
and
clc
lods
jae
or
and
int3
and
daa
stc
mov
popa
test
sbb
or
add
push
sbb
xor
cwtl
push
gs
cltd
mov
sbb
call
adc
push
dec
add
inc
or
add
add
push
adc
pop
and
mov
cmc
jne
adc
dec
xchg
push
or
and
cmp
cs
jl
or
movsb
mov
push
add
mov
and
test
test
adc
lods
aad
fimull
push
or
lods
inc
mov
adc
ss
inc
dec
pop
cmp
call
cmpsb
lods
push
pop
dec
cmpsl
cmp
fiaddl
rorb
lcall
je
inc
fs
adc
adc
push
adc
movsl
pop
xor
mov
and
dec
ss
cltd
movsb
adc
sbb
or
inc
pusha
and
stos
or
lahf
push
mov
push
sub
inc
in
push
mov
mov
push
xchg
int
or
pusha
jnp
xchg
add
insl
pop
arpl
jbe
and
and
xor
aam
or
test
sub
push
fisubrl
sbb
adc
pop
xchg
insl
fwait
adc
aam
inc
jecxz
push
ret
lea
inc
and
testl
xchg
adc
push
push
adc
xor
dec
sbb
int3
xor
cwtl
pop
cld
dec
add
inc
inc
or
pop
xchg
mov
pop
xor
roll
cwtl
call
mov
hlt
and
in
dec
popa
pop
adc
adc
push
rcrb
and
lea
xchg
xchg
lahf
mov
or
pop
call
rcrl
adcb
xchg
push
leave
sbb
cmp
clc
adc
inc
call
in
jp
mov
mov
iret
andl
inc
push
aas
dec
fmulp
xor
push
fsubl
leave
add
add
sub
jl
xor
in
test
inc
dec
sbb
in
xchg
xchg
fwait
jns
cs
pop
sub
jno
mov
cmp
inc
dec
sub
enter
fsubr
cmp
mov
scas
dec
mov
loope
pop
mov
cmp
xorl
jo
sub
jecxz
and
icebp
call
pop
ret
jmp
jmp
jno
add
and
or
in
dec
dec
call
jg
lret
push
lret
daa
push
push
stos
xchg
inc
cmp
cmp
mov
mov
mov
sbb
cmp
lock
ret
sub
mov
pop
pop
mov
dec
jnp
mov
imul
mov
add
notb
cs
lods
dec
fwait
das
mov
in
mov
ds
pop
in
inc
mov
mul
pushf
mov
es
xchg
es
daa
sbb
lods
in
sahf
pushf
or
jl
xor
and
push
hlt
and
adc
dec
adc
inc
pusha
push
call
add
ss
xchg
adc
fisttps
sbb
sbb
ds
jmp
mov
repnz
mov
repnz
sub
and
movsb
mov
cs
clc
lea
or
mov
mov
enter
or
mov
enter
iret
add
into
fcmovnu
lret
add
fstp
fnstsw
loope
shl
rcll
push
add
pop
and
and
daa
xlat
sub
xchg
sub
xor
xor
add
cmp
cmp
cmp
add
inc
inc
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
pop
push
sbbb
mov
aad
add
movsl
dec
add
add
mov
push
sbb
sbb
cli
add
pop
sbb
mov
movsb
in
call
push
stos
loope
ljmp
push
xchg
xchg
xchg
cwtl
rcrl
and
loopne
daa
add
sahf
jl
cmc
xchg
jo
lock
add
mov
loopne
insb
cmp
in
pusha
xlat
decb
sbb
xchg
repnz
xchg
notl
ljmp
pop
test
and
loopne
add
mov
hlt
imul
shlb
in
in
out
out
lock
repnz
mov
divl
xor
add
add
add
push
pop
or
jbe
ja
add
or
inc
sbb
adc
add
push
sbb
sbb
shrl
in
pop
and
sub
sub
sub
cmp
xor
sbb
sbb
dec
mov
push
push
xor
pop
add
pop
pop
pop
dec
pusha
popa
add
fs
push
insb
insl
outsb
outsl
jo
add
je
gs
inc
add
jl
imul
add
addb
mov
nop
xchg
cld
xchg
add
fwait
les
mov
cmpsb
cmpsl
add
lods
scas
scas
add
mov
mov
mov
mov
rol
nop
loopne
lret
int
iret
shlb
adc
xlat
fmuls
out
xor
loop
and
add
jmp
lcall
hlt
iret
cli
idiv
cmp
cmp
ret
or
or
adc
add
gs
outsb
jp
sbb
push
sub
push
or
int3
pushf
xor
inc
jp
pop
adc
adc
cmp
rcrb
sbbb
call
movsl
das
sub
cmp
repnz
je
xchg
js
cli
or
jge
add
addb
std
jecxz
icebp
addb
mov
and
adc
add
cwtl
vpmullw
rsqrtps
pushf
data16
pop
add
adc
jmp
roll
lahf
pop
xor
loopne
mov
add
dec
int3
cmc
jmp
mov
add
lods
stos
test
aaa
mov
std
inc
cmp
inc
aas
das
or
or
xchg
fwait
add
lcall
sub
push
jecxz
push
and
push
pop
test
add
sti
adc
js
inc
or
int
mov
cmp
loopne
cli
stos
dec
std
add
pop
push
sbb
adcb
fisttpll
sub
inc
ja
bound
pop
out
xor
cmpsl
dec
outsl
add
verw
and
push
mov
mov
mov
dec
jae
add
mov
pop
adc
inc
popw
push
call
test
sub
push
test
jns
in
mov
pextrw
adc
cmp
scas
shll
rorb
loop
mov
fiaddl
push
inc
mov
clc
add
aam
pop
push
fcomip
ficomps
andb
xchg
fdivrs
and
bnd
pushf
cwtl
jnp
js
jno
addl
jns
aad
call
pop
xchg
jo
pop
push
push
cmp
push
push
mov
pop
adc
adc
lahf
cmp
gs
inc
add
loopne
mov
cld
jmp
hlt
mov
orb
fnsave
add
xchg
mov
mov
lcall
and
mov
inc
inc
or
mov
test
pop
pusha
push
fistps
arpl
stc
cli
xor
outsb
jmp
daa
and
js
jns
pop
jo
jg,pt
call
lock
or
cltd
add
pop
clc
jge
popf
rcll
add
inc
arpl
pusha
ja
cmovb
jmp
push
js
dec
cmp
nop
test
in
sahf
mov
scas
stos
rcll
mov
mov
movsb
iret
addl
fadds
inc
and
dec
mov
add
mov
fs
ret
add
and
mov
jo
add
out
lods
aam
pop
pop
nop
cmpsl
pop
lret
imul
nop
incb
loop
cs
dec
dec
add
adc
pop
pop
ja
dec
add
fs
sub
cli
jge
add
cmp
shrl
jnp
push
ret
jl,pt
xchg
adc
inc
mov
inc
add
fistl
jo
jl
stos
dec
sbb
mov
or
cmpb
out
and
dec
pop
add
add
es
dec
sbb
mov
mov
pop
sub
lcall
fldl
outsl
insb
imul
lahf
adc
mov
mov
mov
pop
jno
inc
cs
push
push
add
xchg
add
mov
std
mov
fstps
or
inc
xor
mov
sub
add
and
add
push
mov
adc
cmp
or
jbe
lcall
jno
fiadds
xchg
cltd
out
inc
add
adc
push
jge
add
fdiv
repnz
mov
add
fwait
push
xor
pop
sbb
or
jb
sahf
jno
add
stos
in
and
cmp
int
jae
mov
in
imul
ret
cwtl
xchg
add
and
pop
or
test
lods
test
mov
cmpsl
cmpsb
flds
lahf
push
aam
jnp
add
and
push
fwait
js
mov
xchg
mov
add
xor
adc
mov
loop
adc
iret
mov
leave
mov
jne
add
pop
mov
jno
notb
or
mov
sub
movsl
cld
add
push
push
or
add
jb
adc
mov
inc
js
mov
nop
cmp
xchg
loop
inc
adc
mov
add
aam
cld
sbb
sti
jecxz
mov
mov
imul
scas
mov
xchg
jg
jae
xor
call
add
xor
pop
call
popf
pop
add
nop
cmp
add
add
inc
in
pusha
add
repz
dec
in
outsl
sbb
push
divb
sub
ss
jge
sbb
cmp
gs
mov
lret
add
or
sbb
push
aam
push
jg
or
pop
xor
add
aaa
inc
and
subb
add
movsb
and
jmp
mov
test
cmp
lret
in
add
or
mov
je
test
insl
xorl
loopne
rorb
cld
sbb
insl
lds
push
aas
mov
add
dec
rorb
sti
mov
cli
xchg
mov
adc
addb
mov
mov
pop
rorb
out
ds
adc
stc
jnp
mov
loopne
pop
sbb
mov
jmp
push
clc
mov
int
adc
and
push
add
jp
add
push
call
fsubp
loop
pushf
in
sub
sub
add
insb
sub
pushf
add
lret
lret
xor
ret
nop
cmp
and
add
fdivrl
pusha
std
or
and
testb
xchg
mov
add
cld
sahf
mov
sub
xchg
add
push
or
sbb
jne
sbb
add
idiv
xchg
jge
pop
sbb
pop
mov
adc
xchg
and
int3
and
shl
in
lods
in
push
mov
pop
or
add
jge
sub
inc
cmp
xchg
jne
mov
fmuls
enter
dec
sub
sub
enter
das
pop
add
push
in
mov
mov
sub
add
pop
push
outsl
testl
jno
pusha
out
mov
dec
pop
cmp
hlt
sbb
or
fildl
inc
cli
fucomp
ljmp
pop
cmp
jbe
add
popa
and
ss
add
jp
cltd
aam
rolb
mov
cmp
add
push
or
jge
rolb
adc
les
mov
xchg
and
pop
scas
inc
adc
test
frstor
push
sbb
add
sub
pop
aas
cwtl
add
jg
add
insb
aas
cmpb
les
fnstsw
jb
add
mov
std
dec
pop
test
add
addr16
sahf
pusha
jbe
icebp
cwtl
xchg
add
and
mov
mov
arpl
add
ljmp
inc
add
lock
je
xor
cmpl
sub
add
rcll
cli
mov
in
sbb
test
jmp
sbb
jno
cld
jl
shr
add
xchg
add
jae
jge
add
shl
cmc
hlt
insb
add
jl
lock
adc
nop
pop
add
enter
fcmovu
cmp
cmpsb
xchg
mov
addb
and
loope
sarl
xchg
ret
add
sti
dec
enter
sub
and
mov
or
mov
cli
rcrl
add
cmp
bound
sub
mov
xchg
nop
add
mov
cli
xor
pop
add
imul
add
shrl
js
ja
dec
addl
fldl
gs
int3
jne
fisubl
pop
and
sub
fmull
decb
dec
in
pushf
inc
add
cmp
aaa
sti
in
jmp
xor
add
sbb
sub
inc
add
ljmp
sub
xor
adc
out
add
in
clc
adc
inc
add
jecxz
cli
stc
test
add
push
add
adc
add
dec
dec
or
mov
cld
cmp
add
push
inc
shll
inc
dec
in
add
fwait
ror
mov
jns
outsl
sub
add
inc
sub
add
rcll
jae
rcr
jg
in
pop
pushf
pop
or
pushf
mov
mov
or
push
add
mov
push
sbb
jne
std
cmc
xor
jge
add
fidivrs
add
mov
jb
fisttps
push
add
push
popf
adc
test
add
cmc
mov
or
push
and
mov
add
mov
inc
jbe
cmp
into
jge
mov
pushf
xchg
cmp
pop
call
bound
in
push
gs
jg
jo
mov
in
divl
mov
imul
je
jno
add
push
scas
fists
test
or
pop
add
pop
sub
and
adc
xorb
fdiv
add
pop
and
cmc
add
mov
inc
xchg
cmp
das
push
pusha
lcall
xor
mov
testb
int
pop
idiv
das
das
add
pop
sbb
sub
mov
cmp
hlt
inc
pop
xor
xor
xchg
jle
bound
outsl
std
adc
jne
jmp
sti
mov
incl
mulb
pop
test
mov
shlb
jo
add
pusha
hlt
test
cmpsl
jae
pop
shrb
dec
xchg
dec
hlt
enter
mov
lods
adc
pop
clc
dec
ss
jne
add
rolb
pop
mov
nop
mov
fiaddl
mov
mov
mov
mov
je
add
mov
cmp
push
fwait
rep
or
adc
sti
cld
add
stos
fisttpl
mov
inc
insl
or
arpl
popa
or
push
adc
jnp
jns
jg
jge
cmp
sbbb
push
dec
and
flds
jne
aam
cmp
ss
push
sub
add
mov
adcl
gs
outsl
adc
idiv
jp
mov
shll
dec
outsl
std
adc
cmc
ds
cmc
fwait
adc
sub
pop
sbb
jg
xchg
or
ja
fiadds
popf
es
std
add
lcall
bound
or
test
and
add
mov
mov
push
rcrl
xor
add
inc
mov
leave
repz
lods
fimuls
push
pop
ficoml
aad
fmull
xchg
xlat
loope
sti
mov
ljmp
cld
pop
pop
repz
fwait
shlb
insl
ja
push
push
adc
mov
pop
test
pop
addb
scas
inc
out
pop
das
sbb
push
jg
rcrb
dec
adc
movsl
or
or
push
jg
sbbb
ret
and
je
pop
mov
xor
sbb
into
cmp
jb
cmp
push
add
fstl
punpckldq
jge
adc
add
insl
push
add
sbb
or
jbe
dec
jo
add
dec
pop
jns
xchg
cmc
add
scas
repnz
popf
loopne
jg
iret
pop
stc
and
add
dec
cwtl
add
jmp
aad
enter
add
hlt
sti
push
mov
scas
lcall
dec
dec
dec
cmp
das
pop
jmp
scas
add
sub
int3
inc
mov
fwait
and
add
mov
cmp
mov
rcrl
les
push
ret
or
test
incb
cmc
loop
pop
cli
add
aas
add
sar
xor
inc
or
imulb
xor
dec
push
ret
sub
aad
inc
shlb
cmp
fdivr
das
and
cmp
imul
mov
ds
push
inc
inc
daa
push
xchg
cwtl
icebp
pop
sub
and
adcb
pop
pop
mov
jo
data16
jl
push
js
outsb
add
fs
cmp
insb
add
dec
push
or
repnz
sbb
lcall
push
xchg
stos
in
xor
or
and
add
cmp
cmp
repz
movb
arpl
call
sub
mov
hlt
sbb
xchg
cmp
clc
repnz
pop
mov
popa
jbe
jo
outsl
pop
dec
inc
jge
jns
jg
dec
push
inc
pop
mov
dec
lock
nop
ljmp
repnz
pop
js
pop
testb
or
cmp
cmp
sbb
inc
or
and
jl
sub
or
push
jl
sub
adc
das
jge
sbb
cmp
sbb
cmp
push
push
sbb
in
in
or
add
loop
loopne
out
int
mov
add
jecxz
out
sar
aad
fs
fistpll
aam
in
imul
cmpsl
in
int3
fidivrs
leave
pusha
or
movsb
incl
rcl
fucomip
fmul
fcmovnu
mov
cmpsb
dec
test
icebp
test
test
mov
or
mov
test
mov
addb
sahf
xchg
xchg
cwtl
add
xchg
xchg
cltd
jl
add
insb
imul
pop
outsl
jg
fs
jbe
adc
jae
pop
jo
jle
and
push
inc
inc
push
addr16
dec
pop
out
ljmp
pop
pop
sti
add
inc
pop
push
shrb
xor
cld
es
and
push
sbb
sbb
or
pop
ret
ds
sti
cmp
in
push
outsl
add
push
out
push
loopne
and
or
push
sbb
xor
js
cmp
sub
hlt
add
jno
push
stc
jecxz
fucomp
in
shl
out
push
std
add
aad
call
rol
divl
ficoml
ffree
or
rcl
lock
adc
add
mov
and
push
lock
mov
cmpsb
mov
rcl
fwait
add
mov
mov
xchg
icebp
and
int3
jno
sbb
rorb
inc
cmp
jg
inc
adc
mov
cld
jno
adc
mov
out
dec
js
adc
and
mov
ja
dec
mov
adc
pop
pop
dec
add
adc
adc
adc
push
pop
jmp
shlb
or
add
xor
dec
add
or
push
cmp
adc
add
or
sub
jl
dec
jecxz
add
cli
add
in
cld
clc
cmp
repz
lock
pusha
pushf
popf
rorl
jne
rcl
push
lret
ret
das
enter
enter
fldl
loope
movsl
subb
out
mov
mov
mov
xchg
pop
xchg
mov
xchg
mov
test
mov
orl
mov
pushf
xchg
mov
lea
mov
mov
jno
jbe
je
dec
imul
jae
jo
jg
add
pop
add
xchg
push
inc
push
inc
xor
ja
inc
pop
pop
jg
add
dec
push
jl
inc
stc
test
jns
cld
mov
add
xor
sub
ljmp
enter
add
and
cmp
ds
sub
hlt
adc
push
push
dec
add
jns
aaa
daa
add
add
adc
sbb
xchg
inc
xor
jnp
sbb
or
in
mov
inc
std
pop
out
adc
cs
jae,pt
test
add
xlat
sub
jnp
inc
rcr
xchg
mov
inc
cmp
loope
cld
fucomip
bswap
jmp
pusha
adc
sbbb
cmpxchg
add
or
add
xor
mov
add
sub
dec
cmp
das
dec
insb
out
or
jp
cmp
sub
sub
aas
mov
es
push
lahf
sbb
add
adc
sub
xor
add
sbb
cmp
adc
loop
loope,pn
pop
out
inc
test
movsl
jle
cwtl
or
ss
fabs
repz
out
jmp
in
clc
mov
ja
adc
stc
in
add
leave
loopne
hlt
clc
repnz
popf
adc
je
je
jbe
pop
fdivrp
or
faddl
mov
loopne
movsb
mov
or
mov
stos
test
mov
lea
mov
xor
lods
xchg
push
loope
inc
xchg
mov
add
lahf
icebp
lods
lods
out
pop
dec
xchg
bound
sahf
fdivr
add
pop
pop
jo
jno
pop
in
push
add
imul
fstpt
adc
sbb
sbb
popf
jp
add
and
es
dec
inc
cld
push
pop
inc
and
xor
in
jb
push
inc
jne
rorl
jbe
jo,pn
es
add
push
das
aas
sbb
and
adc
jne
cs
and
add
cmp
adc
add
add
push
sbb
addr16
pop
sbb
addb
sbb
or
aas
jg
sti
add
call
repz
and
hlt
dec
and
leave
out
jmp
call
repnz
add
sahf
adc
in
mov
pusha
and
shlb
or
pop
leave
nop
in
pusha
ss
cwtl
push
pop
xchg
cld
movsl
std
adc
cli
dec
dec
mov
inc
insb
imul
in
inc
xchg
mov
es
and
sub
and
cmpsb
xlat
stc
subb
jo
pop
push
inc
cmp
ds
fidivrs
jp
inc
and
dec
test
mov
push
pop
push
cld
out
arpl
gs
je
nop
sbb
cld
insl
loopew
jbe
jne
mov
in
icebp
ss
mov
mov
hlt
scas
add
or
add
ror
pushf
int
shlb
xchg
sub
push
sbb
jge
mov
mov
mov
mov
loope
mov
in
jmp
inc
jne
adc
xor
sub
stos
outsb
inc
pop
mov
xchg
in
pop
in
popf
add
rclb
add
dec
inc
fiadds
scas
fldl
sub
add
adc
add
dec
jbe
pop
xchg
cmc
insb
cmpsl
mov
ja
add
in
xlat
pop
sti
into
jmp
sbb
adc
bound
sub
add
jne
jbe
ja
or
enter
jns
test
cwtl
decl
xchg
cld
dec
lcall
es
addr16
sub
test
fdivs
add
mov
xor
add
out
in
and
mov
add
decb
sbb
lcall
loope
es
decb
ljmp
int
imul
xor
sub
stc
and
dec
jno
and
or
insl
pop
jmp
jns
jp
push
bndldx
hlt
loopne
addb
mov
pop
adc
mov
stc
ror
test
mov
mov
andl
or
loop
mov
xchg
lds
cmp
jae
sti
es
std
shr
mov
pushl
fwait
adc
adc
in
div
add
sbb
xchg
or
fstps
pop
xor
inc
std
and
push
pop
push
stos
xchg
std
pop
mov
call
pop
call
div
popf
push
cmp
inc
test
jb
jns
sub
add
xchg
aas
test
add
inc
sbb
mov
add
test
lds
mov
das
imul
daa
aad
pushf
adc
pop
in
mov
xor
sub
les
dec
roll
int
and
jmp
loop
add
pop
xchg
xor
loop
pop
sbb
add
scas
xchg
sub
mov
and
addr16
jns
mov
jg
hlt
pop
jo
jmp
cmp
into
add
inc
dec
pop
inc
iret
dec
inc
dec
adc
enter
adc
pop
or
sbb
sub
out
jne
and
push
sub
repnz
imul
pushl
dec
cmp
push
mov
test
fcompl
pop
add
add
scas
outsl
mov
sub
ljmp
add
jnp
testl
xchg
mov
lret
add
xor
and
pop
jb
mov
pop
sbb
movsl
jmp
mov
out
lods
mov
je
add
mov
cli
ljmp
test
sub
shlb
lret
add
inc
loopne
rol
pop
or
push
push
push
mov
sbbb
and
mov
stos
add
in
mov
add
js
movl
add
push
ljmp
pop
pop
loop
sub
inc
sti
sbb
xor
inc
xchg
push
adc
call
mov
add
insb
pop
std
mov
adc
jo
andb
mov
jae
outsb
sbb
xchg
sbb
lret
insl
cmp
popf
mov
rcrl
mov
and
pop
cmp
cmpsb
cmp
dec
ljmp
mov
and
cmp
push
roll
in
ja
jne
add
xchg
sbb
sbbl
mov
adc
sbb
fwait
mov
imul
add
xor
mov
cli
pusha
ljmp
cwtl
push
hlt
mov
out
sahf
jmp
dec
smsw
addl
clc
leave
push
pop
push
cmp
imul
pusha
outsb
paddsb
push
jns
mov
jle
mov
lods
scas
add
inc
add
adc
jne
addl
mov
inc
std
adc
cmp
popf
add
pushf
pop
cmp
outsl
cmpsl
inc
jle
xchg
and
out
daa
sub
into
jne
sbb
jnp
sub
pop
jae
sbb
insb
inc
lea
push
add
cmp
dec
xor
pop
mov
je
out
sub
add
outsb
insl
add
std
xor
stc
incb
sar
testl
cmpsl
movb
aam
dec
pusha
mov
jno
add
xchg
xchg
cld
adc
lret
stos
das
mov
loopne
and
call
outsl
cmp
cmp
xorl
les
mov
rcl
inc
pop
add
mov
inc
lds
movsl
lock
xchg
inc
in
xchg
sub
loope
fcmove
push
mov
repz
idiv
movsb
in
add
adc
add
inc
lock
jnp
mov
or
mov
orb
or
into
dec
enter
aas
fistl
cld
stos
imul
sbb
jmp
test
mov
xor
dec
dec
sub
int
add
inc
enter
and
mov
jge
push
add
and
pusha
push
outsb
popf
add
fsubl
cld
jecxz
loope
cmp
cmp
add
jb,pt
jle
insb
add
hlt
cmp
or
push
add
cwtl
cmpsb
out
xchg
pop
adcl
inc
sub
lds
ret
dec
mov
test
std
add
lds
dec
mov
push
aas
cmp
je
dec
aas
mov
add
cli
fmull
popl
xchg
xlat
into
movsl
out
sbb
orb
shlb
je
push
adc
add
sti
sarl
jno
mov
je
jecxz
and
push
pop
neg
mov
insb
xor
arpl
xchg
pop
dec
aas
or
loope
clc
pusha
and
test
js
loopne
insl
sub
inc
wrmsr
pop
xor
cmp
lds
and
das
roll
je
adc
push
in
and
pop
rcrb
mov
iret
xchg
push
or
jns
lret
add
adc
sub
repnz
push
add
mulb
add
inc
dec
adc
stos
lahf
mov
dec
aad
mov
jg
jp
pop
xchg
cli
add
and
push
mov
add
cmp
mov
add
xchg
lods
mov
rol
fsubs
push
pushl
rclb
pop
nop
ret
add
rcll
cmpb
gs
sub
xchg
out
sub
add
jne
add
adc
push
or
lret
push
int
adc
add
and
or
adc
and
mov
or
mov
jbe
add
jmp
inc
push
add
mov
pop
sub
add
inc
incb
lahf
and
lock
dec
add
scas
cmpsb
es
je
cltd
add
ljmp
sub
pop
std
js
stc
stc
mov
out
xlat
push
jp
aad
mov
xchg
negb
enter
adc
bound
es
mov
test
pop
out
test
stc
ss
cmpsl
jnp
push
mov
add
int3
test
mov
push
add
ds
clc
add
ficompl
fsts
les
ret
cwtl
in
pop
daa
sbb
hlt
les
sbb
incb
out
mov
pop
cmpsb
jne
mov
dec
push
add
mov
cli
pop
lock
repnz
nop
pop
cmp
fldl
test
xor
cmp
adc
int
mov
dec
xor
paddw
test
dec
or
or
sbb
les
xchg
push
sub
adc
jge
rorb
mov
rolb
fsubp
mov
add
out
dec
jg
mov
add
mov
dec
sti
mov
sub
pushf
test
add
dec
rcl
add
or
cltd
push
sbb
mov
add
out
lcall
addr16
cld
cli
clc
or
sti
pop
mov
xor
mov
out
lahf
mov
mov
xchg
dec
fiadds
add
xchg
mov
inc
call
pop
pop
popf
lds
pop
xor
and
adc
push
jmp
icebp
add
js
sbb
push
pop
mov
add
jnp
ja
xchg
stc
hlt
lret
or
adc
jmp
pop
adc
sub
das
add
imul
mov
pushf
addr16
adc
mov
clc
mov
add
pop
add
fcomps
mov
xor
add
sub
stos
imul
mov
jnp
ja
jns
and
mov
shll
pushf
jbe
lea
mov
mov
add
out
mov
sub
xchg
je
mov
mov
xchg
lods
jge,pt
in
and
cmp
loopne
rcll
sbb
ficoml
xchg
mov
mov
repnz
push
sbb
and
loopne
inc
add
fs
sbb
add
mov
add
test
cmp
mov
pop
push
pop
pop
pop
lds
or
out
add
xchg
ret
dec
dec
nop
insl
add
jbe
push
pop
xor
xor
lahf
sti
sub
mov
testl
or
insb
les
in
ds
pop
loop
pop
test
xor
roll
mov
popf
mov
xlat
mov
add
jmp
stos
in
test
jne
scas
xchg
xlat
clc
mov
mov
icebp
or
mov
ret
xchg
scas
inc
or
cmpsb
fnstsw
pop
sbb
push
loop
test
pop
xchg
add
sub
dec
cmp
test
dec
ljmp
adc
mov
xor
loope
iret
scas
xchg
shlb
or
xchg
mov
orb
fsubrp
pop
and
mov
fs
add
pop
and
sub
ret
xor
pop
aas
pop
add
mov
cs
dec
dec
sub
push
sbb
add
cld
ds
fucomi
outsb
add
cmp
sub
xor
pop
ljmp
sub
lea
inc
mov
inc
push
int3
mov
mov
xor
push
fdivr
push
mov
aad
xchg
mov
popf
loopne
out
adc
loope
in
std
jae
cwtl
jo
adc
mov
sbb
and
add
push
xchg
scas
iret
inc
call
mov
sbb
adc
nop
sahf
pop
rolb
loop
sub
in
mov
outsl
movsb
mov
cmp
mov
add
addr16
aam
cmp
loop
repz
cld
add
adc
aad
fwait
pop
cld
rcrl
cmc
cmp
or
xor
cmp
xor
mov
hlt
jnp
pop
repnz
loope
adc
jecxz
or
repz
sbb
dec
and
dec
xchg
rcrb
fidivrl
pop
dec
dec
ja
adc
xor
jno
fdivrs
cmp
movsb
sti
mov
pop
dec
cmp
and
lea
and
out
adc
and
test
fstps
push
shl
pop
inc
or
dec
jmp
add
out
xor
loope
add
mov
cli
pop
mov
std
es
and
ret
gs
filds
jp
loopne
add
inc
xchg
xchg
or
fwait
cwtl
xchg
stos
dec
add
push
mov
mov
test
sti
clc
aaa
pop
icebp
lcall
inc
mov
iret
fildll
jo
dec
xorb
cld
rolb
mov
pop
add
push
and
or
add
fnstenv
jae
das
pop
sti
sbb
ljmp
inc
lock
psubq
xor
ljmp
lahf
cmp
rolb
fldcw
cmp
fldl
and
xor
add
sub
sub
ds
sub
inc
mov
dec
pop
lea
adc
xchg
jl
add
xor
or
ljmp
outsb
add
add
arpl
or
mov
int3
add
add
mov
das
sbb
ds
cld
and
inc
mov
hlt
add
mov
push
push
fisubl
lds
lcall
mov
or
shlb
and
add
nop
shl
and
sbb
inc
dec
cltd
add
movsl
xor
cmp
test
adc
int3
fimull
sbb
adc
sahf
fdivr
xchg
adc
mov
add
cmp
add
and
loope
and
add
mov
inc
stc
add
mov
add
mov
push
push
mov
stos
fistpl
je
add
jg
pop
mov
fwait
sahf
add
and
jns
xchg
add
mov
jle
sbb
ja
add
cld
inc
xchg
inc
sub
or
sbb
fcmovb
jl
bound
scas
add
mov
pop
mov
mov
movsl
mov
and
fimull
mov
aaa
jae
shr
dec
mov
mov
add
add
inc
add
call
nop
movsb
into
mov
push
loopne
pop
and
and
loopne
out
mov
daa
mov
cs
xchg
in
dec
test
jecxz
test
add
adc
add
push
cli
adc
mov
mov
jp
dec
dec
nop
es
pop
xchg
fdivrl
fcoms
lds
jo
add
outsb
add
cs
cmp
ds
inc
aaa
daa
imul
sub
inc
push
out
add
int3
pop
add
pop
dec
ret
sbb
add
pop
mov
jp
lahf
je
push
and
in
xchg
sbb
xor
add
pop
scas
sub
mov
enter
hlt
inc
or
or
push
test
add
jecxz
lock
adc
mov
popf
xchg
sbb
xor
cli
lret
push
mov
adc
jmp
stc
xor
mov
cmpsl
add
divb
or
aaa
sub
inc
notb
fstl
inc
sub
pop
mov
mov
sahf
jmp
inc
fsubl
add
in
cs
std
out
lock
out
add
xchg
cli
xchg
add
stos
xchg
mov
adc
add
mov
out
loopne
xchg
rorl
sahf
sub
hlt
jns
add
add
lods
ret
xor
pop
pusha
popa
mov
mov
pop
sbb
push
xchg
inc
iret
mov
hlt
imul
jge
icebp
nop
std
inc
pop
xlat
pop
cmp
jg
and
dec
je
sub
push
lret
in
testb
hlt
pop
dec
xor
enter
sub
push
sub
int
add
sar
or
xchg
cld
cmpb
fistpl
fnstcw
lock
ss
mov
adc
repnz
add
loope
jle
inc
add
lds
enter
sahf
testl
mul
cmp
or
lea
mov
ret
clc
jmp
in
hlt
imul
repnz
rol
cmc
clc
stc
fiaddl
cmp
xchg
push
add
leave
add
inc
verw
add
fucompp
add
movsl
repnz
imul
test
rcr
addl
dec
xchg
inc
mov
add
enter
lcall
imul
or
add
mov
add
xchg
movsb
outsl
and
or
rolb
mov
jne
sbb
out
sahf
sbb
or
arpl
pop
dec
add
addl
jns
pop
inc
mov
xchg
incl
data16
loopne
fwait
add
push
push
jae
adc
adcl
cmpb
aas
leave
add
xor
lock
dec
or
add
pop
rcl
fadd
sti
or
mov
adc
push
sub
das
add
jge
testb
jo
push
inc
push
mov
ds
pop
or
xor
push
adc
sbb
cltd
fldl
push
or
lds
mov
inc
sub
mov
or
add
les
mov
add
push
sar
je
add
iret
dec
rolb
arpl
rorb
xchg
push
fsubrl
in
data16
cltd
jb
adc
imul
popa
jmp
fwait
add
jge
jle,pt
add
movsb
lahf
addb
mov
add
xchg
push
xchg
les
xchg
mov
sbb
sahf
mov
aaa
or
add
test
out
cmp
loop
cmp
sti
orl
stos
add
repnz
loope
inc
lds
lahf
call
push
jp
mov
cld
int
mov
mov
imul
dec
aad
xlat
in
or
cli
pusha
mov
cld
jno
mov
jae
pop
push
sti
cmp
inc
adc
push
mov
enter
rcrl
adc
push
jo
xchg
and
sub
and
dec
jl
daa
es
jnp
ds
aas
mov
lea
add
hlt
mov
aas
inc
lds
testl
xor
xchg
pop
push
fsubs
fscale
std
movsl
add
rcrb
add
cmp
mov
sbb
test
dec
enter
je
mov
lock
and
pop
incb
xlat
aad
push
xchg
add
stos
test
mov
xchg
lock
sub
sbb
and
sub
stos
mov
add
xchg
movsb
cmp
xchg
and
sbb
flds
mov
add
fiaddl
rol
pop
push
sub
sbb
xlat
loopne
shll
imul
out
or
insb
pop
add
jns
shr
cli
adcb
jbe
add
add
and
push
pushf
inc
inc
cltd
fdivr
dec
push
mov
xchg
shl
pop
loopne
movsb
loope
push
stos
jnp
mov
call
xor
xor
cmp
andl
ret
adc
mov
pop
out
inc
rcr
pushl
add
cwtl
mov
mov
or
movsb
repz
loopne
and
mov
punpckhdq
dec
fstl
inc
mov
pop
enter
cli
pop
dec
sbb
adc
ja
daa
fsubs
in
mov
and
out
leave
daa
mov
enter
pop
in
sarb
dec
mov
dec
push
adc
jns
in
incb
sbb
jbe
jecxz
cmpsl
test
and
push
add
push
or
mov
lods
in
ret
sti
jp
pop
stos
les
add
pusha
rcll
jo
push
mov
xadd
in
pop
in
lahf
fdivrp
shlb
nop
cwtl
in
push
test
add
xlat
mov
cmpsl
sbb
cld
mov
ficompl
add
dec
shlb
mov
add
or
push
inc
add
add
mov
dec
pop
mov
or
out
scas
adcb
cmpl
in
dec
mov
ss
jp
inc
xchg
and
pusha
mov
add
ja
jne
sarl
pop
add
cltd
jle
insb
data16
leave
xchg
hlt
fwait
repnz
dec
ficoms
pop
and
test
sahf
fs
faddl
dec
ds
add
push
loop
sar
xchg
add
inc
add
dec
xor
int3
into
or
stc
xchg
shlb
pop
dec
inc
add
pop
push
shlb
in
add
pop
adc
add
sbb
jmp
scas
test
jb
sbb
inc
mov
sbb
or
or
dec
loope
add
lcall
call
dec
cmc
dec
add
out
lret
fcmovu
add
rolb
mov
shlb
add
mov
clc
xchg
cli
add
push
mov
mov
out
rcll
cltd
dec
in
adc
sub
push
mov
shlb
fwait
push
addr16
cmc
sub
adc
das
jg
rolb
push
mov
pusha
fwait
cwtl
mov
fists
push
fwait
pop
push
jbe
and
sbb
lea
push
repnz
loop
mov
mov
xor
out
inc
fsubrs
xor
add
lahf
test
aad
mov
adc
shrb
pop
dec
test
sarb
shrb
inc
test
pop
pushf
imull
repz
push
clc
sbb
sbb
cwtl
mov
rolb
add
or
popf
mov
std
loopne
jp
jl
gs
sub
es
mov
roll
imul
add
mov
rolb
imul
dec
push
std
add
sbb
inc
pushf
sbb
push
ljmp
imul
xchg
push
xor
mov
das
add
xchg
fsubrl
les
jnp
pop
inc
addb
cld
adc
rcl
aad
push
adcl
mov
adc
mov
roll
int3
adc
mov
out
pop
shlb
cmp
loop
and
and
pushf
in
fimull
or
jmp
mov
push
mov
cld
add
outsl
loopne
std
mov
jecxz
bound
add
adc
jge
mov
cmpsl
jl
negb
add
jne
and
push
push
out
xchg
clc
cmc
hlt
adc
pop
cld
sarl
cltd
pop
xor
inc
incl
push
cmp
das
stos
leave
test
add
sub
mov
movsb
cli
testl
les
repz
insl
leave
mov
outsb
push
sbb
mov
add
pop
add
cmp
lahf
adc
jnp
or
mov
add
lods
adcb
xchg
xchg
cmp
mov
mov
repz
xchg
dec
jl
and
add
inc
or
call
sbb
cltd
addr16
pop
add
insl
push
pop
pop
leave
mov
inc
push
pop
push
lock
sbb
sbb
out
add
popf
stos
in
aaa
leave
lcall
sar
sub
dec
adc
mov
fmul
pop
shlb
lret
push
pop
mov
orl
bnd
stos
jmp
imul
push
clc
jno
fiadds
out
and
and
cld
add
sbb
add
or
mov
andb
add
mov
sub
daa
cmpsl
cmp
out
mov
sarb
inc
movsl
ret
js
inc
add
insb
pop
rorl
pop
dec
add
and
lahf
cmpsl
ds
in
pop
lds
mov
dec
insl
jecxz
ljmp
jb
jge
mov
cmp
out
add
pop
icebp
mov
lret
push
pushl
call
addr16
xlat
clc
jmp
and
cmp
mov
push
or
rsm
mov
dec
push
add
inc
sbb
push
shrl
sub
arpl
sub
enter
mov
xchg
lock
shrb
push
push
bound
sbb
and
cmp
std
jnp
xor
sbb
push
push
jl
jp
add
mov
incl
add
mov
hlt
aas
int
mov
lods
insb
mov
pop
add
out
mov
ret
and
cmpl
std
mov
mov
imul
sbb
push
mov
mov
test
mov
inc
arpl
std
aam
mov
fs
popa
loop
sbb
mov
jb
add
lock
std
mov
addl
jmp
clc
daa
and
sbb
sbb
adc
push
js
add
movsl
daa
arpl
pop
adc
stos
outsl
add
lea
and
mov
sub
out
add
dec
add
mov
iret
cmp
adc
lods
out
lahf
clc
add
sahf
pop
sbb
loopne
cmc
add
adc
gs
mov
icebp
mov
bnd
mov
mov
rorb
orb
push
xchg
dec
jmp
add
cld
ds
push
aas
or
mov
lret
popa
add
push
idivl
filds
repnz
fs
mov
and
lods
into
mov
adc
mov
jae
dec
pop
add
add
jbe
nop
pop
fists
push
rcrl
pushf
mov
add
fs
pop
cmp
jl
mov
pop
jle
add
add
clc
lock
jbe
cmpsb
fmuls
std
lahf
push
leave
adc
mov
mov
inc
subl
add
jne
cmpb
leave
add
mov
inc
add
cld
into
rcl
fmull
cmp
pop
add
xchg
out
push
inc
movsb
push
cmp
flds
test
in
add
out
mov
movsl
add
jmp
fldz
cmp
shl
inc
xchg
inc
xor
imul
cmp
movsl
jmp
test
jo
addr16
adc
add
pop
in
lds
mov
sbb
lret
mov
movsl
dec
inc
dec
ret
shlb
mov
popf
or
pop
scas
stc
add
bound
jae
shlb
or
idiv
adc
sbb
sub
testl
inc
mov
push
jb
xorb
mov
mov
inc
push
fiaddl
mov
sbb
sbb
add
addb
and
shlb
movl
rol
jmp
inc
push
int3
inc
xor
push
aam
or
rolb
cltd
repnz
ficoms
fstl
sti
clc
and
ret
shrb
fcoml
daa
jb
sti
add
xor
xlat
cmp
mov
iret
les
mov
out
add
cmovbe
sbb
pop
sbb
fistpll
mov
add
mov
cmp
xor
fs
pop
das
nop
jbe
jns
add
mov
addr16
mov
nopl
rclb
push
pop
jmp
inc
push
andb
cld
nop
and
lock
in
hlt
push
pop
jg
daa
cld
or
ja
sti
sub
adc
scas
cwtl
std
jno
pop
fcmovu
shlb
jno
push
lea
xchg
lret
inc
pop
push
mov
negl
leave
movsb
int
mov
test
das
adc
push
mov
add
mov
cmp
roll
or
mov
dec
or
xchg
add
lds
enter
clc
shrl
add
call
addr16
cld
orb
lret
hlt
stc
cli
adc
jbe
mov
push
and
or
and
ds
subb
xchg
pop
cli
add
add
and
xchg
cmp
cld
xchg
and
je
add
sub
shr
mov
xchg
dec
shlb
add
lods
inc
jno
or
rorl
mov
cmp
gs
add
lahf
fsubs
push
pop
mov
and
cld
add
jno
or
mov
jbe
jae
add
xchg
add
lods
inc
dec
into
int3
adc
pop
test
sub
lea
cld
loopne
xchg
xchg
dec
xor
lahf
cmp
mov
inc
add
inc
add
cmp
ss
lahf
call
lds
rol
pop
xchg
repz
push
movsl
lock
sub
stos
jg
sbb
and
adc
lea
mov
or
cmovo
jbe
adc
sbb
int
xor
jb
and
mov
mov
arpl
pop
xor
sub
sub
in
add
leave
pop
pusha
inc
adc
cmp
orl
or
rclb
jno
fnsave
push
mov
test
sbb
out
push
sub
aas
push
fcomps
mov
les
adcb
inc
into
or
push
shlb
and
jb
pop
jno
leave
negl
scas
xchg
imul
addr16
add
cmpsl
mov
sbb
cmp
icebp
xchg
mov
test
rorb
out
add
out
sarb
loope
enter
in
popf
push
mov
sub
out
mov
xor
call
ss
mov
adc
cld
mov
pop
xor
cld
mov
push
in
add
ficoms
rorb
and
and
ljmp
sub
insb
sub
sub
adc
cmp
sbb
push
jb
add
mov
shlb
imul
dec
fsubl
loopne
adc
sti
cmp
jb
pop
rolb
xchg
mov
inc
sub
mov
clc
xchg
les
mov
push
pop
jmp
test
cmpsb
ljmp
incb
push
mov
add
mov
add
dec
push
inc
add
int
xor
mov
mov
push
aaa
in
arpl
in
xchg
shl
mov
insb
add
mov
in
ds
stos
int
push
les
xchg
sbb
adcb
adc
xchg
aaa
icebp
adc
popl
add
int
mov
adc
add
sti
sbb
xor
movsl
push
mov
mov
into
enter
and
sbb
add
and
cltd
xlat
daa
add
cmp
cmp
cmp
inc
xor
push
jo
or
lds
fnstcw
push
jnp
jnp
in
pop
lods
add
fwait
or
lds
sbb
shll
xor
int
data16
mov
push
mov
cld
xchg
or
ss
cs
dec
or
mov
out
cwtl
outsb
add
mov
add
das
pop
pop
lahf
add
cltd
pop
inc
cld
and
sbb
inc
and
or
push
sbb
sbb
int3
fucomp
jmp
add
jp
rolb
rorb
test
scas
js
xorps
fbstp
add
pushf
outsb
aaa
xor
dec
mov
notb
pop
inc
addr16
fidivl
out
ds
add
into
add
pop
jne
es
xor
mov
fs
inc
add
adc
ficomps
and
inc
dec
fst
jbe
insb
cmc
pop
aas
adc
and
xchg
enter
into
popa
insb
add
cmp
in
xor
adc
mov
outsb
mov
xchg
fbstp
dec
jne
fidivrs
mov
push
cmp
cwtl
push
add
mov
fistps
movsl
mov
jb
add
fsubrs
cmp
inc
xor
xor
shll
cld
add
ror
leave
mov
nop
add
in
fisubs
addb
repz
aam
push
sbb
aad
sbb
push
icebp
popa
sub
popl
push
inc
sbb
mov
out
mov
xlat
jg
cmp
jp
jbe
push
cli
add
test
or
push
cmovb
push
loope
adc
dec
ror
in
jl
add
cmpsb
in
sub
inc
out
and
adc
es
push
pusha
and
cmp
cmp
ret
xchg
inc
push
cli
lds
add
aaa
push
jne
pop
cmpsb
add
xor
loopne
inc
insl
lahf
in
fldl
jne
cmp
scas
mov
outsb
jbe
addb
add
je
jb
add
adcb
clc
lret
add
mov
rol
insl
xchg
lods
push
fistpl
lods
lret
movsb
mov
sbb
jg
dec
mov
faddp
mov
out
dec
outsb
rol
and
incb
scas
les
xchg
in
jmp
dec
popf
mov
pop
es
mov
mov
in
dec
lock
push
add
mov
sbb
repnz
sbb
jns
add
jo
fisttpl
push
cmp
lahf
cmc
push
rcr
pop
inc
xlat
push
add
pop
sbb
add
mov
push
sbb
dec
cmc
add
cmp
and
sub
add
and
adc
cmp
inc
xor
push
loopne
inc
cmp
mov
dec
dec
mov
add
push
xor
pop
add
or
inc
shl
punpckhwd
test
in
sbb
and
popa
mov
add
das
test
scas
jg
outsl
mov
fmull
jb
dec
mov
cmc
xor
fdivr
addr16
jl
mov
ja
or
negl
out
push
fmull
cltd
hlt
mov
loope
movb
inc
nop
add
out
jnp
jns
int3
mov
sbb
push
cmpsl
clc
add
dec
add
cltd
inc
cwtl
in
daa
add
sbb
icebp
hlt
cmc
or
aas
pop
mov
addb
push
imul
pop
pop
negl
dec
add
push
inc
in
jno
jbe
invd
mov
dec
xchg
cwtl
jns
and
xor
in
pop
inc
jmp
sub
gs
and
add
cmp
jecxz
inc
adc
call
test
add
iret
es
inc
add
sbb
inc
add
pusha
jb
mov
cmp
xchg
jle
mov
add
pushf
int3
mov
testb
rol
test
xchg
loope
add
stos
mov
and
mov
mov
cld
sub
mov
add
dec
push
push
daa
xor
inc
ljmp
add
cmp
mov
testb
dec
test
cli
lcall
shrl
pop
push
sub
add
into
mov
pop
hlt
add
in
mov
in
insl
add
jle
pop
pusha
add
add
rolb
adc
push
and
and
dec
das
adc
inc
add
inc
sahf
inc
xor
inc
pushf
clc
add
dec
xchg
or
scas
push
add
pop
rorl
fildl
out
ret
leave
enter
mov
loopne
push
cmp
mov
pop
add
cmp
pop
ja
fiadds
jae
or
pop
loopne
or
push
xor
mov
xor
fstps
jecxz,pt
push
flds
add
or
or
mov
cli
pop
clc
repz
jns
insb
adc
add
sahf
je
cmp
pop
sbbl
arpl
mov
and
xchg
in
popa
ftst
les
add
stc
add
dec
rcr
add
sub
incl
fwait
insl
pop
data16
rolb
mov
call
jp
mov
imul
add
jne
mov
je
in
cmp
mov
clc
clc
hlt
cmp
add
adc
adc
push
inc
add
ja
enter
mov
sub
add
daa
push
lock
aaa
xor
inc
mov
lock
and
inc
add
aam
call
pop
add
push
mov
test
mov
incl
insl
or
jl
add
jp
lock
mov
jb
jne
add
mov
adc
jnp
nop
add
push
mov
or
xchg
sbb
mov
push
repnz
jb
pusha
testb
mov
jbe
cld
sub
lods
es
pop
sbb
in
mov
pushf
clc
dec
mov
sbb
lret
fistpl
rol
push
incl
add
jge
push
sbb
sbb
mov
add
dec
push
icebp
repnz
xchg
jg
dec
into
sti
jge
cmp
add
roll
xchg
loop
cli
or
call
add
gs
add
cmpsl
and
add
xor
sub
xchg
sti
pop
or
fnstcw
add
pop
ja
pop
adc
dec
dec
add
js
cmp
cs
add
sbb
add
cmpl
xchg
pop
repnz
add
arpl
test
xchg
movsb
fmul
cmpsb
mov
lret
test
add
push
push
dec
xor
fsubp
dec
add
mov
shrb
das
fcmovb
pop
lds
iret
int3
cmpsl
cmp
not
cld
jmp
mov
mov
mov
adc
in
pop
incl
pusha
and
and
call
in
xchg
sahf
shr
add
add
jl
lds
incl
lea
xchg
mov
add
stc
adc
jmp
add
sbb
and
sbb
and
jb
enter
add
push
icebp
andl
int3
add
aas
das
and
push
push
adcb
shrl
pop
notl
mov
sub
sub
add
xchg
pop
or
or
cmp
cld
dec
mov
rcrl
fdivl
mov
movb
in
ret
out
xchg
loop
das
bound
hlt
fadd
sti
xchg
add
imul
xchg
add
add
int3
repz
add
sarb
and
sub
jno
adc
pop
test
subl
testb
jne
daa
cmp
push
cmp
es
jl
cli
add
out
push
push
pop
seto
add
subl
push
adc
arpl
clc
mov
decb
pop
fwait
push
add
rolb
in
cmc
hlt
addl
out
inc
jecxz
subb
in
add
verw
fimull
add
cmp
sti
mov
xchg
subps
inc
ss
mov
ror
push
add
adc
pop
or
fisubs
push
mov
or
in
or
adc
add
loopne
mov
jnp
lret
cmpl
jp
js
jmp
cld
lcall
add
pop
in
mov
add
mov
dec
test
pop
sti
push
mov
fdivs
incl
hlt
into
fs
push
stos
dec
roll
lds
sbb
fmull
mov
push
enter
cltd
or
int3
mov
and
cwtl
xor
repz
jns
dec
out
push
call
icebp
test
aas
js
add
xor
pop
or
and
repz
loope
adc
add
hlt
jae
adc
and
and
jg
icebp
xchg
rcrl
mov
sti
add
cmpsl
test
jmp
jmp
testb
fmul
lahf
test
rclb
ret
hlt
pop
dec
add
jmp
xchg
add
outsl
insl
mov
and
cld
dec
sub
cmp
adcb
xchg
jge
pop
or
dec
sub
add
jae
jb
fadd
popa
dec
aad
add
pop
xchg
sbb
cld
sahf
mov
cmp
add
test
push
mov
mov
mov
daa
mov
loopne
mov
dec
cld
pop
stc
inc
cmp
add
leave
mov
es
pusha
mov
mov
sub
sbb
fadds
lret
out
shrb
inc
jecxz
jp
add
jmp
jmp
and
cmc
in
pop
ret
or
push
mov
add
push
push
mulb
das
fs
add
and
pop
pop
xchg
push
into
add
sbb
loopne
xchg
icebp
pop
and
aad
addb
das
aas
mov
in
add
cmp
cmp
js
add
mov
push
lret
repnz
mov
mov
pop
cmp
lods
inc
sbb
aam
lock
or
and
add
repnz
nop
xchg
xchg
aas
loopne
mov
and
arpl
stos
js
push
icebp
mov
cmpb
sarb
add
inc
je
jo
stc
xchg
out
test
daa
jmp
mov
repz
mov
pop
dec
mov
shrb
or
push
inc
inc
rol
mov
mov
sarl
pop
dec
mov
ret
aad
lcall
bound
cs
das
and
push
add
and
xor
pop
aas
out
add
cmpsl
push
out
es
std
sbb
inc
xchg
add
cld
in
cmp
unpcklps
lea
push
push
cmp
imul
dec
pop
fbld
icebp
arpl
icebp
inc
pusha
mov
scas
ret
cmp
mov
cmp
sub
xor
ds
inc
inc
aas
popf
leave
incl
add
pop
add
adc
fadds
pop
outsb
sahf
rcrb
and
push
or
jecxz
push
jge
pop
ja
in
addr16
aam
jl
cld
or
xchg
leave
mov
lahf
outsl
inc
pop
push
fbstp
xchg
int3
adc
mov
mov
mov
testl
scas
fidivl
cmpsb
call
inc
test
dec
fucomip
push
adc
jg
dec
xchg
dec
or
cmp
rorl
adc
aad
fs
mov
mov
je
popf
call
push
hlt
xchg
testl
jge
hlt
push
jl
sub
xor
jbe
push
fs
std
add
fadds
lcall
jb
cmpsl
xchg
movl
scas
add
aaa
pop
xor
add
cmpb
pop
addr16
mov
pop
jle
mov
sbb
scas
fdivl
add
pop
inc
jge
jecxz
aas
ret
jge
sbb
ja
push
jne
mov
sar
xchg
add
cmpsl
nop
icebp
in
pop
sbb
mov
xchg
nop
add
lds
xchg
mov
jb
jno
jmp
mov
and
loope
and
scas
lcall
cwtl
add
cmp
mov
add
mov
int3
into
iret
pop
pop
jnp
enter
and
or
jl
mov
pusha
fistpll
call
clc
cmp
test
jle
pop
cmpsl
loop
imul
jl
sbb
push
adc
add
js
repnz
stos
repnz
ror
das
sti
ret
dec
fs
mov
dec
fdivrl
pushl
add
mov
aaa
insl
stc
pop
mov
pop
add
je
flds
fcompl
pushf
mov
and
andb
dec
xchg
loope
inc
jp
add
in
into
jb
idiv
add
clc
xchg
jne
xor
aam
je
out
add
sbb
sub
pop
mov
xchg
rorb
push
push
ret
shrl
sbbb
xor
cmp
iret
in
dec
scas
loopne
jmp
dec
mov
roll
call
shlb
rcl
add
and
or
or
fnsave
fidivl
push
insl
xchg
inc
loop
fdivrl
sub
stos
outsb
add
push
ficompl
scas
pusha
ja
push
or
out
test
xchg
xchg
hlt
imul
sti
add
lods
popw
js
ja
iret
cltd
push
cmp
cmpsl
sbb
xor
mov
idivl
add
fs
jp
cmp
add
and
loop
inc
push
nop
mov
push
inc
fldenv
jb
xchg
pop
mov
dec
xor
sahf
mov
xor
xor
pop
in
dec
add
repz
inc
cmpsb
sub
es
mov
or
push
out
in
add
xchg
xor
cmc
mov
or
mov
shl
sub
loopne
mov
and
and
fmuls
add
stc
xchg
scas
add
mov
adc
or
sub
lret
inc
movsl
lret
add
aad
arpl
sbb
and
in
movsl
inc
ljmp
lods
testl
cmpb
lock
push
movsl
cwtl
je
incl
fxam
or
or
flds
test
stc
dec
or
jmp
push
cmp
adc
outsl
rorb
xlat
and
jle
call
jmp
sub
jb
xor
xchg
mov
bound
mov
mov
rol
test
dec
adc
mov
xor
pop
xchg
push
pop
adc
fldl
cmp
jg
pop
adc
aas
arpl
mov
lcall
sub
add
pusha
cld
jge,pt
inc
imul
xchg
dec
shl
outsl
jns
addb
pop
xchg
or
sbb
sahf
sbb
add
mov
push
mov
lahf
dec
shr
and
sbb
fdivl
xor
add
mov
dec
repnz
ret
inc
filds
addb
aam
add
aas
mov
xor
loope
lods
cld
data16
jecxz
rolb
bound
jnp
out
sbb
xor
lret
js
stc
cmpl
push
or
dec
sub
icebp
out
pop
inc
sti
push
lahf
pop
xor
inc
add
js
hlt
mov
call
cmp
je
ss
xor
xor
stos
icebp
div
arpl
pop
fisttpll
dec
pop
or
sti
push
cmp
xchg
push
add
or
jl
add
out
stos
mov
add
das
and
cmc
pop
mov
daa
mov
mov
imul
jmp
inc
shr
lea
xchg
rcrl
pop
cmp
enter
pop
xchg
lahf
loopne
insb
add
dec
xor
add
loopne
sbb
mov
mov
xor
push
add
shrl
popf
imul
and
nop
or
sbb
sbb
ficomps
or
jmp
out
sub
mov
jmp
jecxz
cmp
add
stc
cli
movsl
ds
push
mov
lret
out
xor
or
push
add
add
inc
cwtl
adc
std
xor
in
inc
add
adc
je
dec
and
dec
and
dec
daa
inc
pop
stc
inc
outsb
add
cmp
lcall
cmp
jl
ds
or
add
add
or
fs
add
adc
test
sbb
outsl
sbb
add
and
jg
add
sub
add
fimull
test
aad
or
jnp
xchg
les
or
add
push
mov
repz
cmc
sub
dec
popa
loop
test
hlt
mov
add
cld
mov
mov
rorb
add
dec
into
and
rorl
sub
ljmp
push
test
sbbb
dec
mov
mov
mov
test
jo
idivl
add
lcall
pop
add
pop
mov
test
cli
inc
jne
sub
arpl
lcall
jns
daa
inc
cmpsb
in
push
aaa
inc
adc
jnp
adc
cwtl
jo
aad
jmp
add
add
dec
pop
aad
add
push
inc
and
sbb
ret
cmp
daa
mov
fiadds
push
xor
cltd
cs
cmp
add
loopew
data16
add
sub
xchg
or
ljmp
push
jbe
das
pop
mov
xchg
dec
std
add
or
addr16
add
mov
test
add
test
push
loop
add
mov
rolb
movsl
jmp
mov
ds
dec
add
ss
cmpsl
test
por
mov
rcl
loopne
pushf
clc
add
cwtl
lods
or
xchg
add
xchg
jnp
out
add
scas
aas
aaa
rcll
out
sbb
out
imul
mov
jp
ja
cmpsb
mov
aas
cli
dec
mov
lds
pop
add
sbb
adc
xchg
sarl
cmp
and
loop
fildll
lods
sub
jne
ja
lret
jb
xor
xchg
outsb
cmp
pop
adc
sti
sbb
outsl
loopne
dec
cmp
xchg
jmp
sar
cwtl
aam
es
cmp
sbb
xchg
enter
mov
add
inc
cmp
add
cld
xor
xchg
jg
jl
inc
inc
mov
inc
icebp
cmp
rorl
dec
mov
push
lcall
mov
mov
fcompl
cs
mov
mov
js
add
inc
scas
pop
outsl
mov
int3
pushf
sbb
dec
or
or
rcrb
stc
fdivs
repz
push
mov
lods
mov
jmp
xor
arpl
add
aas
and
loop
push
add
lret
cmp
cld
sar
push
and
jne
lods
pop
test
fidivrs
add
add
lahf
arpl
pop
emms
mov
sub
or
sub
cmp
fs
sar
mov
in
inc
push
movl
lret
dec
dec
push
xchg
add
filds
jb
loope
sahf
imul
addb
in
dec
add
lea
pop
mov
pop
test
subb
shr
mov
pop
movl
testb
add
adc
leave
mov
pop
in
not
jno
insl
fsubrl
insb
add
mov
test
repnz
enter
iret
mov
add
mov
xchg
cmp
add
ret
xor
pause
js
daa
push
inc
out
jmp
in
add
mov
pusha
insl
and
int
shrb
xor
rol
aaa
mov
add
jbe
jb
lock
insb
pop
bound
pusha
or
popf
dec
ss
pusha
mov
sub
ret
ffreep
jg
loop
add
sub
jmp
fs
sahf
xor
sbb
push
ds
inc
pop
adc
or
bound
dec
dec
adc
imul
push
adcb
inc
repz
dec
rcr
jns
call
add
loopne
in
pop
dec
pusha
clc
es
inc
cld
and
lock
mov
lea
and
test
add
mov
mov
mov
icebp
sahf
lcall
adc
cli
sti
call
popa
jl
add
sti
cmp
pushf
pop
adcl
add
pop
and
int3
fiadds
cmc
pop
xchg
rcl
aad
mov
ljmp
inc
insl
popf
shrl
add
pop
scas
sbb
test
out
add
mov
ds
add
inc
fadds
push
sbb
cs
pop
and
add
add
pop
aas
loopne
dec
or
cmp
ss
into
fdivr
add
enter
pop
adc
and
add
lods
int3
cmp
add
xor
pop
add
sbb
mov
std
test
pop
dec
xlat
xchg
fstpt
popa
arpl
loop
enter
clc
insb
jo
inc
mov
orb
addr16
jle
jg
add
roll
cmp
fxch
stos
cmpsl
add
pop
adc
add
mov
test
mov
movsl
mov
add
jnp
inc
scas
pop
or
mov
inc
adc
xor
je
mov
pushf
lret
or
aas
sbb
add
clc
shl
adc
push
cmp
andb
les
insb
jbe
push
mov
popf
mov
stos
jo
ja
popa
std
xor
fstpl
mov
xchg
jmp
or
les
adc
incl
adc
xchg
ja
or
pop
cmp
dec
subb
pop
add
movsb
mov
dec
aam
pop
mov
pop
dec
aas
jb
aas
sub
inc
push
adc
push
push
or
dec
pop
iret
mov
add
jb
mov
pop
pop
or
stc
lea
jmp
cltd
out
adc
jb
dec
add
and
sbb
mov
bound
xchg
lcall
fadds
mov
dec
mov
out
nop
test
gs
pop
mov
ja
jnp
insb
iret
in
sti
xor
fiadds
mov
mov
hlt
rcll
mov
push
mov
add
andb
subl
mov
scas
mov
mov
shrb
test
add
mov
test
add
adc
jp,pt
fstpl
jo
mov
shr
add
mov
mov
add
mov
or
add
jmp
rcrl
sbb
xchg
pop
cmp
stos
pop
push
cmp
lods
and
mov
lock
adc
mov
xor
jp
js
push
push
dec
lds
sbb
jne
xchg
pop
shlb
movsl
movsb
xlat
adc
xor
or
jecxz
xchg
pop
jle
sub
addr16
push
es
xchg
pop
dec
shr
push
fs
mov
or
stos
lock
decl
mov
loop
pusha
std
leave
adc
mov
repz
mov
test
and
inc
std
push
js
jne
ds
xchg
cmpsb
cmp
xchg
in
aas
aam
adc
aad
dec
pop
dec
xor
cmp
loop
mov
mov
call
mov
test
adc
scas
add
mov
repz
jecxz
jmp
and
xchg
out
subb
adc
addb
out
out
in
clc
cwtl
lcall
loop
pushf
in
xor
rep
fcoms
inc
and
fs
and
cmc
nop
leave
mov
das
xchg
inc
push
adc
dec
pop
jg
aad
invd
pop
dec
sarb
movsb
sub
add
pop
pop
scas
jo
jmp
bound
cmp
std
and
and
cmp
jnp
sti
call
xlat
shlb
in
xchg
mov
ret
std
xchg
clc
xor
xchg
cld
xchg
inc
lock
lret
popa
mov
jb
inc
push
push
fsubl
or
mov
cmp
pushf
adc
testl
fdiv
sbb
fldl
cwtl
xor
loope
rol
pop
add
fwait
and
aas
pop
lahf
xor
outsl
cmp
sub
mov
add
cmp
cmc
add
push
loopne
call
mov
and
add
orl
repz
add
xchg
enter
pop
in
add
lds
aad
andl
arpl
das
xor
ret
lret
and
ja
sub
mov
popa
jecxz
test
addl
rcll
sbbb
fistl
jnp
jg
add
xchg
fisttpll
pop
add
push
shrb
push
add
push
repnz
pop
cld
jae
sti
add
cmp
jl
idiv
std
subl
dec
xchg
sbb
nop
add
cld
xchg
lret
enter
das
lea
out
addl
movsl
int3
out
in
mov
inc
xor
mov
cmp
sahf
adc
add
jns
stos
dec
rorb
add
inc
popf
lds
add
sub
sub
mov
lret
jecxz
dec
outsl
je
insl
sub
cmp
test
add
mov
mov
lock
pop
and
or
push
roll
cltd
outsl
xor
inc
call
add
flds
jl
loope
and
cmpsl
aam
cs
mov
mov
add
mov
mov
inc
enter
leave
or
pop
test
dec
add
mov
push
push
xor
xchg
loopne
rcrl
fisubl
out
cmp
cmp
subb
std
xor
or
fcmove
jle
add
or
push
inc
cmp
xlat
mov
jmp
call
push
pop
filds
mov
dec
callw
mov
or
dec
nop
ljmp
xor
sub
xchg
xchg
xchg
dec
mov
add
inc
and
or
push
test
xchg
sub
adc
xchg
sub
cmp
outsl
inc
mov
add
sbb
lock
mov
dec
mov
jnp
mov
xor
push
mov
adc
push
js
pop
cltd
dec
ss
add
push
sbb
hlt
filds
sbb
je
push
xor
mov
adc
mov
adc
xor
cli
mov
shl
cmp
adc
loop
pop
rorb
sbbb
inc
push
sbb
push
fiadds
pop
rcrl
push
in
pop
push
mov
and
xchg
imul
cli
cmp
testl
xorb
add
outsl
dec
pusha
push
mov
int3
mov
sbb
enter
les
adc
scas
cwtl
shlb
sbb
stos
mov
cmp
dec
xchg
xchg
shl
in
mov
mov
and
inc
add
add
scas
insl
and
add
mov
or
aad
mov
jno
push
add
jp
je
fistpll
push
icebp
test
sti
adc
inc
or
insb
mov
jo
lock
sbb
push
sahf
pop
daa
or
adc
pop
inc
decl
scas
add
cmp
cmpsb
test
out
xor
add
xor
addr16
sub
and
sub
jl
push
insb
enter
dec
dec
dec
sbb
and
mov
pop
outsl
sahf
mov
popf
lock
add
push
mov
xor
sbb
pop
jno
jb
xor
addr16
cmc
lods
mov
sub
sub
enter
xchg
lock
mov
lcall
inc
add
add
pop
sbb
pop
dec
in
andb
mov
popf
jo
sbb
hlt
mov
xor
lahf
sbb
xor
lret
jmp
std
add
jecxz
andl
inc
shr
pop
cmp
xlat
cltd
fmul
call
das
insl
lods
sti
mov
jnp
add
pop
stos
ljmp
jp
xlat
call
jg
ret
stos
lods
les
jmp
cmp
and
lret
cwtl
push
arpl
add
loopne
stos
pop
push
es
add
daa
add
cs
cmpsb
pop
loopne
xor
int
add
dec
cmp
add
pop
inc
enter
push
cli
jbe
jl
jo
add
fstpl
inc
pop
ficompl
jnp
imul
loope
jb
and
push
add
mov
or
inc
test
jp
mov
sarb
mov
inc
jns
popa
dec
insb
das
mov
add
adc
mov
mov
call
sub
cld
ds
mov
loop
dec
cmpsb
andb
cmpsl
cmp
inc
inc
pop
inc
and
xchg
cmp
shrl
xchg
inc
push
inc
hlt
inc
ds
mov
jg
fs
and
ljmp
scas
and
data16
lret
cmp
cmpsl
addl
jl
push
mov
sub
xor
int
inc
jp
dec
dec
dec
sarb
clc
ja
test
cmp
mov
call
mov
push
or
jne
dec
mov
loopne
cli
lret
enter
add
cmp
movl
push
fcompl
pop
ficomps
aas
popf
jbe
and
push
add
and
cli
mov
ss
stc
inc
inc
ljmp
sub
or
dec
sarl
ds
mov
cwtl
add
fcoml
jno
jno
lahf
pusha
aad
mov
repnz
loope
and
fldenv
add
mov
scas
cmp
inc
cmp
testl
fcmovne
inc
mov
popa
fstl
add
sbb
sub
mov
push
add
mov
loop
xlat
and
sbb
shrb
push
pop
jl
fstpl
jae
or
popa
std
cmp
addl
adc
lock
inc
jbe
enter
repnz
fldl
jnp
aam
pop
pop
add
mov
inc
add
mov
es
ret
add
mov
and
movl
inc
cmp
pop
pop
fcompl
mov
test
cmp
jae
mov
or
mov
mov
das
pop
adc
icebp
nop
xchg
xchg
enter
psrlw
mov
dec
cmpsl
shlb
in
maxps
jbe
jnp
adc
ja
add
rclb
inc
mov
pushf
add
rol
out
sbb
add
push
xchg
call
sbb
imul
int3
std
sahf
lods
outsl
adc
es
les
add
icebp
je
fistl
mov
in
aaa
mov
or
cmp
add
pushf
inc
xor
jecxz
rcr
and
add
jecxz
add
xlat
aad
aam
cs
add
mov
mov
sbb
mov
jae
push
test
dec
pop
loopne
daa
inc
sahf
and
icebp
push
sarb
stc
pop
aaa
add
jbe
nop
add
in
inc
jb
fnstcw
js
or
inc
in
add
je
mov
add
pushf
lcall
jb
flds
sar
data16
cmpsb
dec
fs
mov
add
jmp
aad
mov
jmp
shll
enter
icebp
fcmovnbe
add
xchg
xchg
jo
and
rol
out
sbb
mov
jmp
cmp
fidivrs
fucomp
xchg
add
jle
pop
push
add
negl
add
or
sub
adc
xchg
or
cmp
xor
add
and
je
call
aaa
pop
movsb
jp
sub
fldl
jb
cmp
popa
inc
sti
orl
sub
rol
ja
ja
nop
or
imul
popa
icebp
loopne
adc
sub
xchg
imul
jp
sti
adc
mov
stc
movl
shll
lods
fstpl
mov
mov
jnp
mov
pusha
pop
pop
dec
dec
dec
ljmp
sbb
xchg
sbb
dec
lods
stc
add
sti
add
mov
fstl
push
add
leave
imul
movsl
in
adc
jmp
mov
xchg
adc
in
ds
mov
add
or
dec
add
inc
call
lret
adc
rcrb
push
adc
inc
fildll
call
or
daa
sub
scas
ljmp
jb
add
mov
push
xor
leave
or
dec
inc
iret
je
adc
inc
dec
inc
rcr
scas
push
jmp
aad
dec
pushf
add
jmp
adc
xor
add
sbb
sbb
das
in
cmpsl
jmp
add
test
in
andl
cmc
mov
inc
out
incl
orb
and
stos
and
cmpsl
cmp
mov
lock
xor
inc
sti
add
mov
dec
cmp
mov
mov
push
xchg
call
int3
sbb
cltd
call
xchg
in
add
shlb
popf
fldenv
jmp
jg
iret
movsl
jnp
pop
test
adc
adc
jle
add
test
add
add
out
add
push
adc
insb
adc
shl
or
test
fidivl
out
push
jo
movsb
and
adc
ficoms
mov
ret
sbb
int
dec
jb
add
cli
sqrtps
sub
add
xchg
mov
xor
adc
enter
jge
clc
jmp
and
and
xor
repz
cld
jg
fstpl
roll
scas
mov
and
adcb
xchg
add
adc
mov
loopne
add
sub
lods
sbb
add
icebp
mov
aas
repz
and
xor
movsl
dec
pop
lret
mov
inc
scas
fnstenv
lock
jno
daa
addl
pop
sub
pop
fmuls
js
shl
addr16
inc
lods
ja
fiaddl
out
cmp
push
aad
and
test
adc
arpl
xchg
out
in
hlt
jle
add
and
pop
push
xlat
jno
add
scas
ficompl
dec
mov
ss
mov
jne
int3
popa
lds
fwait
std
dec
daa
mov
ja
mov
pop
fsts
add
pop
cltd
adc
xchg
lock
sub
mov
and
pushf
xchg
xchg
ja
cli
mov
pop
add
movl
push
sahf
mov
jecxz
xchg
iret
jb
jl
and
sub
or
cmpsl
cmp
pop
and
jb
add
mov
push
loope
or
daa
into
add
cmc
sarb
clc
add
sub
jns
mov
add
loopne
mov
xor
insb
int
jmp
dec
ds
cmp
inc
test
imul
push
mov
enter
xchg
fldln2
cwtl
mov
cli
aas
adc
add
adc
aam
mov
in
sub
jg
mov
push
ficomps
movb
mov
sbb
stc
les
inc
add
scas
jno
mov
jno
sub
ds
shlb
mov
mov
sub
loope
xchg
push
xchg
cli
pop
xchg
xchg
push
fwait
jp
sbb
or
icebp
sub
in
add
cmp
call
cmp
add
inc
les
pop
stc
jb
dec
add
mov
mov
in
xchg
add
cmovge
pop
mov
mov
lcall
cmc
push
add
xchg
in
out
sbb
push
adc
pop
adc
or
divb
shlb
mov
subl
hlt
add
cmp
out
roll
sbb
out
push
push
and
jo
add
shll
add
adc
cmp
aas
inc
shl
add
arpl
dec
add
mov
jae
xor
pop
outsl
popf
cmp
and
add
imul
pop
ffreep
in
mov
add
jp
sbb
mov
call
loopne
mov
cwtl
cltd
mov
rcrl
add
cmp
mov
mov
in
test
ja
mov
xchg
jnp
pop
pop
push
jae
add
repnz
push
lock
inc
out
inc
aaa
ss
or
pop
pop
repnz
cmp
xor
arpl
sbb
sbbl
leave
sub
or
sbb
mov
mov
add
cmp
cmc
xchg
outsb
adc
jnp
and
or
leave
or
sbb
out
xlat
and
fsubrs
add
sti
out
rcl
mov
js
push
add
pop
mov
add
mov
dec
std
jns
inc
cmp
pusha
pop
dec
cmp
lods
inc
pushl
out
inc
push
cmpl
sti
inc
xchg
jg
or
in
add
push
imul
push
pop
jmp
mov
jns
xlat
add
push
inc
sti
insb
dec
dec
add
jnp
cmp
fdivs
mov
and
in
lds
xlat
sbbb
cmp
es
xchg
clc
lds
pop
jl
xchg
outsl
loop
and
and
and
pop
out
jl
aad
rorb
add
out
xchg
dec
std
hlt
in
cli
int3
lock
lcall
sub
xchg
std
and
and
mov
push
in
add
cmp
pop
loope
shrb
adc
inc
data16
mov
sbb
jno
mov
std
add
pop
jo
cs
je
xor
jp
call
mov
sahf
cmp
or
push
repnz
movsl
xchg
inc
andl
data16
add
adc
sbb
stc
pop
push
xchg
jo
es
jle
subb
and
mov
mov
mov
jp
cmp
add
cltd
scas
jns
in
and
adc
je
adc
aas
iret
or
pop
enter
inc
loope
cld
lock
es
and
movsb
std
adcb
sub
ud2
jp
xlat
cmp
and
pop
faddl
call
inc
jp
pop
cmove
in
jbe
inc
mov
cld
push
adc
shl
cli
call
inc
push
iret
punpcklbw
das
call
mov
push
pop
insb
mov
mov
fcomps
jae
mov
cmp
mov
idivl
mov
jnp
jle
mov
pop
std
cmp
push
add
mov
pusha
push
fdivs
repz
adc
mov
ja
outsl
loop
and
insl
and
jle
adc
xchg
pusha
mov
rorl
scas
cld
roll
and
add
das
cs
pop
lock
mov
ljmp
cli
cmpsl
stc
rolb
stos
mov
push
cli
adc
dec
add
sbb
in
js
push
dec
cmp
roll
sbb
fsubs
or
or
lods
incl
mov
les
add
mov
xor
imul
subl
loopne
rolb
dec
lds
sbb
rcll
loopne
jle
cwtl
sbb
pop
ficomps
push
xor
scas
aas
subb
pusha
dec
incb
add
or
das
pop
popa
es
aam
orb
mov
xor
add
popa
mov
cmp
push
jmp
test
insl
and
loopne
xor
cltd
jne
adc
cmc
jae
add
sbb
lods
roll
ret
mov
es
add
adc
jmp
dec
adc
add
adc
mov
orb
lods
add
loope
adc
add
xlat
inc
sahf
mov
pop
pop
mov
inc
add
xor
pop
dec
adc
or
aas
rcl
ret
push
cmp
jns
sbb
call
add
sub
push
jp
sub
leave
or
xchg
rolb
shl
push
stos
inc
push
clc
int3
adc
lods
js
jecxz
pusha
push
push
cmp
xor
scas
rcrb
lret
lret
mov
testl
movsb
add
xorb
sub
incl
ret
sarb
add
adc
mov
xchg
fadds
cmc
testl
mov
outsb
fidivrl
je
aaa
jae
mov
stc
push
cmp
mov
ds
cmp
mov
clc
pop
push
popf
test
and
xlat
ljmp
lods
rorb
ret
lods
lods
clc
push
add
stos
lret
mov
in
jecxz
pusha
clc
ljmp
loop
add
or
cmovge
icebp
dec
dec
ja
pop
add
inc
dec
or
ret
or
pusha
mov
inc
aas
addr16
gs
push
and
mov
mov
pop
nop
in
inc
clc
les
lcall
in
add
inc
insb
call
cmp
add
pop
outsb
add
je
jb
jno
add
sub
ret
loope
ret
dec
decb
push
pusha
nop
andb
push
enter
sbb
xchg
sarl
inc
and
lods
jnp
adc
xchg
fisubrl
mov
call
push
enter
lds
loope
pop
test
popf
dec
aam
dec
cmc
dec
jnp
enter
je
or
jmp
in
add
lock
mov
in
push
sub
in
jnp
push
adc
inc
sub
or
inc
inc
fmul
pop
or
into
jbe
add
sub
fnsave
add
mulb
aaa
movsl
jge
inc
adc
clc
add
adc
add
dec
cmp
insb
ret
add
outsb
ror
xchg
pop
sbb
mov
jb
imulb
jmp
outsb
in
je
cmc
test
inc
sbb
mov
dec
add
add
mov
push
pop
mov
add
idivl
pop
push
repz
fcom
shr
test
add
out
cld
or
xchg
repnz
add
inc
dec
lahf
ffreep
nop
arpl
and
ret
dec
stos
std
and
addb
mov
add
xchg
mov
jl
clc
sti
add
and
xor
mov
fiaddl
jmp
cmp
fadds
fs
xchg
hlt
out
pop
cld
xor
cld
in
dec
es
es
add
mov
cmp
jge
daa
or
jecxz
adc
adc
lods
adc
sub
dec
dec
nop
bound
add
rorb
cmc
hlt
mull
inc
xor
gs
add
sub
incb
roll
jp
or
cmp
add
xor
xchg
sub
pop
jno
pusha
scas
xor
lods
jbe
sub
outsl
js
cld
dec
mov
loop
cmc
cmp
rcl
rolb
push
repnz
or
dec
lock
sbb
mov
pop
add
mov
adc
test
pop
aam
sahf
scas
sarb
mov
and
subb
mov
les
dec
lods
jns
jp
dec
ret
lds
movb
enter
call
sub
dec
dec
adc
inc
rclb
jmp
aaa
cwtl
call
insb
out
mov
mov
les
cmp
fadds
icebp
ja
add
rcrb
sbb
sub
enter
out
sub
popa
cld
add
cmpsb
loop
add
jmp
or
jno
adc
xor
inc
lea
push
test
fcoms
mov
inc
push
cmp
sbb
les
push
sar
pop
popf
pop
dec
pop
mov
pop
daa
sbb
xchg
mov
incb
push
gs
jnp
test
insl
xchg
lea
mov
and
jae
or
push
out
jge
jecxz
les
shl
daa
sbb
fwait
imul
cld
in
loopne
mov
pushf
lods
in
xor
cltd
sahf
call
sub
add
into
rolb
leave
test
int
mov
xchg
loope
mov
fldcw
mov
cs
in
jg
rcl
jge
cmp
shlb
push
push
adc
in
sbb
inc
testl
add
add
leave
xor
xchg
out
add
cmpsb
iret
call
mov
mov
les
scas
scas
shrl
dec
fdivp
pop
jp
sarb
and
push
inc
add
aam
flds
lret
iret
out
adc
xchg
jle
test
pop
sti
jl
fdivl
push
shlb
outsb
repz
push
xchg
mov
aam
xchg
loop
xchg
js
add
arpl
pop
test
lcall
and
mov
mov
mov
int3
aad
inc
mov
cmp
int
adc
clc
rcrl
in
pop
push
sbb
adcb
or
sbb
andb
lret
popa
test
inc
mov
repnz
stc
or
js
loope
cld
xchg
and
mov
rcrb
add
inc
dec
jno
outsb
sbb
xor
into
pop
pop
lods
insb
and
add
mov
aaa
push
imul
mov
adcl
stos
push
in
inc
ficoms
jno
add
jg
jbe
faddl
mov
das
pop
bound
add
out
dec
cmp
icebp
add
sub
std
js
jg
add
push
inc
icebp
fistps
mov
cli
xchg
mov
aas
ficompl
iret
add
lcall
mov
and
mov
fdivl
mov
stos
imul
cld
inc
add
add
lods
aaa
cltd
xor
fbld
add
js
sbbl
rcrb
shlb
or
in
add
das
in
jo
push
sbb
andb
jb
sbb
inc
add
push
or
push
lret
loopne
add
dec
dec
xor
jbe
pop
inc
lcall
sbb
data16
jmp
das
pop
and
mov
repnz
add
subl
mov
add
push
xchg
unpckhps
xlat
incb
cmp
dec
mov
push
jnp
arpl
cmc
out
ja
jns
dec
in
lods
cmp
orb
mov
stc
js
mov
into
test
cld
movsl
sbb
orl
mov
test
or
and
and
add
sub
test
lods
lds
add
mov
push
pusha
mov
daa
inc
dec
inc
or
xor
shll
out
sahf
pop
sbb
push
push
lock
and
imul
push
jno
add
repz
jge
jne
mov
cld
or
add
xchg
add
cmc
aam
cmp
adc
push
loopne
mov
lods
push
and
test
orb
cmp
daa
xor
mov
add
lds
test
mov
xor
add
pop
push
dec
ficompl
and
popf
pop
out
add
adcb
popa
jle
add
mov
out
stos
sbb
fistl
xorb
jns
lock
imul
inc
shl
push
dec
call
mov
inc
mov
mov
adcl
push
xchg
adc
add
pop
ja
test
lock
popf
pop
mov
mov
scas
push
out
add
xor
xchg
out
sbb
out
aaa
add
inc
aad
addb
aam
cmp
add
rcl
aam
push
mov
sbbb
inc
movsb
xchg
daa
jge
sbb
xor
sbb
mov
sti
jmp
call
adc
mov
jne
fstps
lea
inc
jnp
pop
inc
nop
push
cmp
add
xchg
push
push
cmc
jmp
or
cmp
inc
out
adc
sbb
push
mov
mov
fldl
test
jne
mov
sub
cmp
inc
clc
pusha
jge
pop
mov
fwait
add
jns
das
call
xchg
aam
xchg
pusha
leave
ja
stos
icebp
stos
add
push
push
push
clc
push
aaa
add
fs
mov
je
outsb
push
pop
add
data16
inc
mov
push
pop
cmp
inc
mov
dec
push
rolb
clc
out
test
sbb
dec
mov
shrl
and
mov
mov
int3
sbb
cmc
add
daa
lock
fldenv
mov
dec
repz
add
ja
mov
or
repnz
push
dec
adc
adc
dec
dec
lahf
in
pop
dec
push
push
test
lods
outsb
movntps
cmp
push
ljmp
ss
jne
paddb
mov
inc
add
movl
into
mov
scas
inc
xchg
add
push
inc
fsubrl
pop
dec
or
lods
cltd
push
push
aas
cwtl
lds
mov
mov
push
cld
mov
stos
lock
or
cmp
jl
pushf
imul
sub
adc
lret
mov
movsl
lahf
adc
pop
mov
aam
addb
dec
cmp
dec
aaa
jl
test
dec
jns
pop
insb
divl
ds
dec
mov
mov
ljmp
les
pop
add
sub
pop
cmp
add
xchg
in
push
rol
adc
pusha
and
hlt
dec
cs
cli
mov
mov
add
jo
mov
sub
lds
pop
inc
test
icebp
sbb
jmp
and
xchg
push
add
dec
mov
push
mov
je
sub
cmp
inc
mov
ret
int3
out
dec
les
aad
jo
add
scas
push
sub
lock
xchg
and
xor
lahf
jmp
xchg
loopne
cmp
lea
mov
pop
pop
add
mov
push
inc
imul
or
js
add
add
xchg
pop
xlat
mov
mov
push
mov
xchg
imul
in
scas
xor
hlt
aaa
add
cli
xor
lahf
pushf
pop
mov
lds
rorl
hlt
or
inc
add
and
xchg
shl
lods
incb
mov
mov
add
sbb
arpl
gs
das
jp
idivb
aaa
jmp
aam
loop
add
adc
cmp
adc
push
xor
add
cmp
shr
sub
rcr
outsl
add
add
divb
sub
loopne
xor
xchg
cmp
mov
mov
add
xchg
es
xchg
adc
add
or
bound
jmp
or
stc
add
lea
imulb
pop
pop
add
xchg
nop
xchg
ja
jbe
mov
dec
lret
sub
and
cli
adc
lret
push
mov
cmc
pop
mov
repnz
fstpt
dec
mov
add
scas
add
pusha
cltd
dec
or
mov
test
add
lret
mov
sti
lock
imul
adc
adc
cld
je
xor
mov
jp
add
mov
fdivl
and
add
push
pop
arpl
pop
pop
in
repnz
out
out
xchg
xlat
add
into
or
inc
add
sbb
stos
ss
dec
mov
das
jg
ret
and
int3
inc
jl
testl
jle
push
inc
ret
add
inc
mov
aas
js
sbb
outsl
shll
add
or
jp
or
aam
sbbb
add
sub
add
pop
dec
jo
jl
adc
jp
es
das
fcomp
lds
mov
sub
push
fdiv
cld
icebp
sahf
push
adc
mov
loopne
xchg
lea
or
xchg
xchg
cmp
repz
xchg
add
xor
cltd
cwtl
or
dec
ss
cs
cmc
shll
mov
lea
or
addr16
cvtpi2ps
lock
xor
pusha
rol
inc
std
ja
fsubs
or
orl
pop
pop
dec
add
cmc
out
jmp
push
dec
jecxz
ficomps
ret
lds
ja
push
dec
add
mov
popl
or
cmp
adc
cmpsb
sbb
pop
sbb
cmp
add
push
inc
stos
inc
out
mov
push
repnz
and
pop
jo
fiaddl
lret
gs
out
jge
lds
add
jo
sti
shlb
jbe
cmp
jp
mov
cmp
push
loopne
fimull
jo
stc
xchg
ret
xor
dec
add
cld
hlt
shlb
mov
pop
add
mov
cmpsb
mov
ds
inc
adc
pop
lahf
nop
xchg
mov
out
dec
adc
popf
addb
ljmp
xchg
mov
out
push
mov
sti
hlt
push
test
add
jmp
mov
aad
jp
sarl
shr
js
loopne
dec
mov
mov
decl
and
lar
or
or
dec
jbe
add
aad
fisubl
ljmp
popa
sti
in
arpl
pusha
imul
rol
icebp
test
stc
dec
xacquire
inc
dec
dec
leave
mov
cmp
dec
les
sub
add
mov
pop
cmpsl
std
xchg
sbb
popa
and
inc
dec
push
insl
jecxz
rcrb
jns
jecxz
sbb
jg
pop
cmp
mov
ds
lock
add
xchg
cwtl
cltd
push
jae
popf
mov
lods
es
fcomps
and
daa
decl
mov
jecxz
in
mov
xor
xchg
sub
int
popf
out
testl
sbb
ret
sub
push
loopne
mov
dec
or
mov
std
xchg
cmp
mov
or
aad
cmp
shrb
fldt
pop
jmp
xchg
push
xchg
dec
cmc
subb
xor
lahf
add
push
sbb
dec
dec
out
mov
and
bound
sub
sub
adc
cmp
out
add
call
insb
add
add
ret
add
std
add
adc
adc
jae
xor
add
jge
pop
jo
bound
push
fs
sub
xchg
jg
mov
mov
mul
fsub
add
mov
filds
cmp
mov
dec
xlat
and
xchg
out
pop
shll
xlat
mov
repz
lock
mov
inc
das
notl
lret
add
mov
jge
aad
enter
icebp
clc
in
cld
cltd
fwait
xor
pop
mov
into
rclb
mov
cld
hlt
subl
fsub
xchg
ret
add
idivb
jo
xor
test
sub
imul
jnp
add
add
roll
sbb
xchg
cwtl
xchg
sub
repz
dec
incb
clc
xor
stc
arpl
into
in
lock
add
loopne
std
inc
inc
mov
adc
mov
push
fists
jo
add
sbb
pop
pop
sbbb
push
cli
add
movsb
push
mov
in
cmp
popl
outsl
add
ss
rcr
cli
test
test
push
ljmp
xchg
shrb
popf
add
push
shlb
add
mov
xchg
stos
add
test
hlt
setne
jo
adc
in
xor
jge
imull
mov
add
cwtl
das
les
aad
sbb
lods
xlat
mov
out
pop
mov
pusha
jmp
pop
test
les
scas
push
sub
aam
jo
add
inc
das
sub
ds
pop
lock
xchg
jg
pop
jb
ja
xlat
lret
loopne
sub
sub
sbb
pop
arpl
les
roll
test
inc
loop
pop
xchg
out
loopne
push
mov
int3
fs
call
in
cmc
pop
dec
in
sbb
and
sbb
lds
popl
cmpsb
mov
xchg
inc
ljmp
cmp
jle
jmp
jns
je
pop
mov
nop
aad
xor
aad
add
pop
xlat
xchg
and
mov
pop
cmp
push
scas
cmp
in
add
jmp
add
xchg
xchg
xchg
cmp
imul
sarb
sub
test
inc
out
addb
and
sarb
xor
test
lret
add
inc
daa
sbb
push
lea
fiadds
aaa
pop
xor
or
stos
addr16
add
xor
in
lea
sbb
adc
add
jg
adc
sbb
push
add
lret
pop
pusha
arpl
fs
dec
add
sbb
cmp
add
fmull
jae
je
cmp
jns
push
adc
add
stos
sbb
out
add
and
adc
jle
add
shr
test
add
aad
pushf
sbb
lea
sahf
insl
xchg
mov
sub
sbb
out
sub
addb
cli
stc
inc
adc
aaa
pop
lret
in
mov
out
fsubrl
js
or
hlt
lahf
lret
add
popf
adc
imul
das
rol
nop
dec
jg
ja
mov
movsl
into
dec
cmp
out
fistpl
div
stos
test
mov
mov
or
dec
push
mov
push
add
xchg
mov
pop
add
sarb
loopne
xchg
cli
add
add
ret
lcall
xor
stc
adc
push
xchg
push
adc
dec
cld
shll
mov
mov
fldenv
gs
icebp
push
sub
add
dec
jnp
jno
fwait
repz
jle
addl
mov
incl
les
pusha
loope
int3
mov
mov
lcall
adc
add
add
aaa
cwtl
sti
movsb
cmpsl
test
jbe
push
inc
inc
push
daa
cld
shlb
dec
ret
pop
rcl
lret
test
sub
cmp
mov
in
fcompl
inc
sbb
xchg
loopne
je
or
std
mov
repz
sbb
ljmp
and
into
mov
mov
stos
push
repnz
fst
jb
fldenv
mov
push
mov
or
pop
mov
ja
push
and
lcall
mov
sub
fdivrs
cmp
xor
mov
mov
jmp
mov
dec
adc
loopne
jbe
subl
add
xchg
pop
pop
shl
inc
loop
pop
add
aaa
xor
add
pop
adcl
inc
sub
push
call
add
jg
mov
xchg
test
rorb
stos
mov
push
shlb
lcall
mov
adcb
lods
mov
xchg
addl
inc
dec
adc
mov
jmp
nop
decb
ss
dec
xchg
fistl
jno
in
add
repnz
jmp
icebp
push
je
and
jno
cwtl
sbb
dec
std
add
or
clc
add
cmp
out
cmp
jno
or
sbbb
adc
mov
fsts
daa
cs
sub
sbb
and
jmp
pop
adc
cmc
ja
stc
pop
fbld
call
add
add
dec
sub
push
jg
addl
xor
cmp
or
test
mov
in
mov
ds
cltd
repnz
add
or
add
cmp
lock
faddl
in
cld
add
mov
repnz
cmc
sti
and
add
jae
jbe
sub
leave
mov
pop
icebp
jns
cmp
add
inc
sbb
loopne
rcl
mov
mov
sbb
sbb
fstl
jge
and
insl
add
arpl
in
add
dec
repnz
cmc
lds
aaa
jne
fmulp
scas
std
incb
or
mov
adc
and
out
aam
xchg
aad
jne
sbb
push
xchg
pop
add
dec
mov
adc
jge
cmp
pop
mov
aaa
mov
inc
and
push
pop
cmpsb
add
inc
iret
mov
fsubrs
add
outsb
dec
push
fnstsw
pop
pop
pop
jne
arpl
cmp
pop
ffree
lahf
ljmp
into
push
inc
ja
and
pop
insl
repz
inc
inc
das
mov
adc
outsl
xchg
les
and
mov
adcb
push
mov
mov
xor
jno
ljmp
fcomp
cmp
add
clc
imul
inc
add
jae
loope
rcl
mov
pop
ds
shlb
adc
out
add
jmp
dec
out
push
lock
test
stc
cmpb
int
incl
push
mov
or
pop
in
loop
cmc
lahf
call
test
pop
add
sarb
test
and
xor
jns
push
leave
mov
ss
jl
and
scas
adc
dec
dec
sbb
push
add
lds
add
cmpsb
shrb
inc
mov
sarb
mov
in
js
mov
jno
icebp
dec
push
xchg
jp
xchg
add
pop
rcrb
push
ja
jne
jge
testb
insl
insb
pop
pop
sbb
and
cwtl
add
sbb
xchg
jl
add
mov
add
inc
pop
or
mov
mov
dec
movlps
inc
add
into
cmp
jg
sub
test
movsl
xchg
push
adc
mov
ss
push
push
subb
add
add
aas
cmp
sbb
jb
pop
push
pop
inc
adcl
cmc
sti
mov
test
sar
adc
add
sbb
mov
jecxz
mov
stc
test
add
aad
das
sub
icebp
les
adc
xchg
jg
xchg
icebp
mov
push
scas
lret
jno
and
add
ficoms
push
inc
add
test
rclb
jg
xchg
mov
cmp
mov
test
daa
jno
push
jo
cmpsb
xor
repnz
les
jns
test
or
filds
stos
mov
xchg
cmp
adc
mov
scas
mov
add
cmp
mov
mov
dec
xor
pop
add
jge
loop
in
jle
push
inc
shl
enter
or
int
dec
hlt
fpatan
nop
incb
xchg
test
mov
and
loopne
and
adc
std
mov
sub
imul
add
pop
nop
pop
push
jb
jae
lock
pop
es
ret
inc
and
push
mov
pusha
sbb
xchg
fstps
outsl
in
pushf
fsubs
push
das
add
insl
push
cmp
loopne
pop
or
pop
xor
cmp
push
cmp
scas
inc
add
or
mov
add
push
push
rcll
pop
ror
jp
popa
adc
fs
sub
sub
xchg
mov
push
adc
push
push
popa
ja
js
sub
sbb
mov
popl
inc
add
lret
inc
hlt
out
lahf
sti
or
push
cmp
pop
cwtl
push
cli
arpl
bound
adc
xchg
mov
test
popa
test
popf
scas
mov
out
xchg
fisubrl
cli
add
les
call
push
cli
sub
pop
add
or
mov
data16
add
jmp
das
ljmp
out
lahf
js
sbb
xchg
cld
or
enter
in
add
push
stos
aad
ljmp
dec
jnp
sar
and
xlat
cmp
push
mov
adc
pop
and
arpl
jl
sub
sub
lahf
or
xchg
mov
adc
pop
pop
jle
mov
fists
cltd
fucom
daa
popf
pop
mov
popa
loope
dec
and
or
add
mov
imul
in
in
leave
stos
pop
stc
nop
xchg
mov
push
fistpl
test
or
xor
add
fs
xor
xor
cwtl
popf
jg
jecxz
xchg
dec
sub
push
mov
pushf
or
aam
ret
push
outsl
lcall
and
stos
aad
mov
and
lods
rorb
mov
mov
fsubr
stos
dec
adc
sbb
decb
sbb
idivl
jle
add
aam
rclb
or
popf
pop
filds
mov
dec
dec
testb
lods
add
pop
cmp
jge
cmp
add
push
repnz
cli
cmp
ss
cmp
dec
adc
adcl
xor
lock
bswap
xchg
dec
nop
adcl
stc
fucomp
xchg
aaa
mov
add
xor
pop
ja
push
loop
pop
push
int
jne
sbb
repnz
stos
add
shlb
enter
add
nop
andb
adc
fwait
pop
sbb
mov
cmpsb
dec
mov
mov
decb
push
push
rolb
mov
fwait
mov
dec
push
pop
jecxz
sti
pushf
and
add
pop
sub
sub
pop
pop
les
add
cmpsb
in
mov
mov
pusha
mov
lock
or
jb
add
push
aad
rolb
cmp
or
add
test
push
mov
jb
sub
pop
pop
out
add
js
insb
bound
lock
sub
xor
addb
sub
jmp
pushl
adc
pop
mov
loopne
scas
push
inc
incb
push
cmpsb
in
xlat
cmp
in
aam
shll
fs
push
sub
push
lock
fs
mov
xchg
pop
mov
loop
ds
cmp
dec
push
adc
test
sbb
mov
call
mov
or
or
cs
sbb
das
fs
pushf
lock
out
int3
inc
sbb
xchg
add
call
dec
or
or
or
pop
add
loopne
push
aaa
aam
hlt
add
lcall
xchg
loope
push
inc
dec
push
loope
faddl
ret
mov
out
jg
fnstsw
repz
add
lds
addr16
repz
jmp
fcoms
mov
lods
add
ja
xlat
cld
mov
rcrl
mov
dec
es
sbb
cmp
enter
add
ror
imul
dec
jl
and
jbe
or
loop
add
xchg
hlt
repz
add
xchg
mov
mov
add
testl
jb
dec
into
clc
movsb
add
mov
loop
add
dec
adc
pop
nop
fs
or
jns
and
jl
add
sbb
gs
cmp
aad
adc
cmp
jle
add
dec
mov
enter
add
cld
adc
jl
add
push
std
pop
pop
subb
pop
xor
popa
daa
lods
or
add
cwtl
xlat
gs
jl
jle
mov
sub
cmp
mov
arpl
repnz
xchg
xchg
sti
add
dec
repz
fiaddl
and
je
pop
in
jne
or
xor
divl
aaa
test
mov
sbb
cmp
jae
mov
inc
push
int
ds
movl
aam
daa
rcr
push
add
fwait
rcrb
jb
or
xchg
add
es
add
jne
je
insl
and
pop
mov
jle
testl
add
adc
jg
gs
add
sbb
movsl
hlt
pop
jge
sahf
imull
cld
cmpl
and
mov
jle
and
addb
mov
push
lods
fcomps
ljmp
repnz
cmpl
push
lahf
clc
std
fmul
add
mov
das
das
lods
into
stc
ret
add
mov
rol
push
nop
jno
fiadds
ret
cmp
bound
cli
adc
int3
push
jae
add
out
pop
lahf
push
sarb
out
inc
ds
add
lock
sbb
cmp
and
call
ljmp
mov
daa
clc
inc
inc
push
adc
pop
daa
lock
jge
pop
jb
pop
stos
sbb
cmp
inc
jno
arpl
fs
cwtl
pop
test
ret
cltd
mov
push
insl
add
mov
mov
add
mov
pusha
dec
add
scas
add
push
bound
mov
rcrb
push
lock
xchg
add
jmp
push
stos
and
in
cmp
add
xchg
scas
xor
xchg
in
scas
adc
ret
incl
mov
cmp
outsb
and
dec
aaa
int
out
pop
sbb
mov
gs
repnz
xchg
add
and
out
inc
insb
in
bound
mov
clc
sti
xor
push
cmova
cli
mov
cmpsl
add
sti
lods
dec
add
xchg
add
nop
repz
add
xchg
jle
push
jae
daa
add
outsb
pop
out
stos
lock
mov
cmp
push
mov
inc
push
mov
outsb
orb
push
sti
clc
mov
mov
xlat
stos
test
std
add
aad
dec
mov
sti
push
movsl
loopne
push
in
shl
nop
hlt
jno
or
enter
repnz
jbe
mov
jmp
mov
adc
icebp
xchg
add
cmpl
mov
addb
lahf
sub
and
pop
fsts
mov
nop
cmp
add
outsb
adc
mov
loop
lret
lcall
cld
movsb
add
push
add
lret
and
mov
repz
sbb
pop
bound
sbb
loope
adc
test
push
call
cmp
sub
push
add
fwait
pushf
pop
hlt
jnp
xor
and
xchg
jmp
imul
int
xchg
aad
xlat
clc
scas
dec
push
inc
add
fmuls
adc
lods
out
xor
jns
imul
add
enter
jno
add
push
inc
test
subl
mov
xchg
push
xchg
mov
mov
aam
in
sbb
incl
pop
sub
sub
arpl
addb
lds
mov
inc
xchg
ret
movsl
jp
mov
fnstcw
mov
test
in
cmpsb
mov
es
dec
mov
aas
or
pusha
xchg
add
pop
andl
mov
rolb
lret
rcl
adc
add
fstp
fistpl
cltd
cli
movnti
and
insb
jl
cs
in
std
or
dec
in
jmp
fwait
ja
and
and
xchg
dec
jno
and
imul
aaa
fwait
inc
xor
jmp
pop
aas
or
lcall
je
lock
sub
push
or
into
in
mov
loopne
or
cld
sub
out
add
addl
dec
dec
sub
add
fmuls
ja
fimuls
jae
dec
aas
rorl
mov
inc
ja
push
jns
imul
xor
adc
xchg
test
push
repnz
lods
into
mov
test
and
jo
xchg
cmpb
icebp
dec
xor
add
sub
xchg
inc
push
adc
fistl
mov
shrl
pusha
mov
inc
add
lret
jl
subb
int3
iret
shrb
jnp
pop
lret
jno
add
jbe
lock
in
popf
dec
add
pop
in
add
outsl
add
in
popf
es
popl
out
mov
sbb
jl
mov
sbb
dec
push
and
jge
jae
jno
loop
or
aam
fsubs
daa
lods
mov
arpl
add
gs
xor
cmp
mov
ljmp
mov
call
imul
push
push
xor
pop
pop
or
add
ljmp
dec
push
pop
and
ss
pop
js
aaa
pop
and
stc
mov
mov
or
test
sbb
add
xchg
movl
mov
bound
stos
adc
psubq
mov
mov
stos
mov
js
out
add
cmp
push
out
jle
xchg
jl
out
lcall
fildl
add
jmp
push
test
mov
into
gs
js
add
clc
fisubrl
add
jge
test
lock
addps
jne
and
mull
cmc
add
push
mov
xlat
das
pop
jbe
loopne
int
and
and
push
out
mov
repnz
cmp
xchg
pop
jmp
leave
jmp
inc
inc
lret
mov
lea
push
mov
lods
scas
rcrb
jmp
jmp
add
movsb
pop
scas
add
xchg
jb
xlat
int
jle
je
push
pop
cmp
mov
jmp
lods
fwait
cmp
or
stos
call
xlat
add
bound
push
cltd
lods
pop
pusha
cld
dec
inc
jecxz
jns
ja
add
rorb
inc
cmpsb
inc
sbb
inc
data16
xor
lahf
shlb
dec
mov
cmpsb
xchg
add
sbb
pop
clc
inc
lahf
repnz
cmp
sub
das
in
sub
or
xchg
mov
add
imul
mov
jno
cmp
aam
xor
pop
mov
xlat
and
add
sbb
pop
sub
inc
add
inc
in
in
pop
cmp
push
dec
fcomip
jb
int3
in
add
fcom
stos
out
xor
insb
nop
mov
push
clc
aas
dec
cmp
sarl
push
dec
inc
inc
inc
adc
pop
nop
or
pop
daa
pop
push
add
mov
call
cs
sti
push
xor
mov
jo
jo
push
mov
sub
pop
jae
rcll
inc
push
scas
add
popa
loopne
fnstcw
out
xchg
xchg
adc
fadds
mov
mov
cmpsl
std
push
mov
lods
sub
add
mov
mov
mov
ss
xor
notl
mov
or
in
cmp
sbb
mov
ret
sbb
pop
sub
scas
aas
xchg
add
cli
sub
in
mov
in
push
adc
scas
lods
lea
je
push
std
cmpb
pop
push
rolb
leave
add
std
sbb
iret
xor
es
jnp
insb
cmc
adc
adc
leave
mov
mov
sbb
es
packuswb
in
add
jb
outsl
test
pop
inc
aam
rorb
sbb
xor
xchg
cld
add
jmp
ds
add
inc
fldt
cmpsl
hlt
mov
inc
mov
jmp
lahf
pusha
aad
rcll
mov
fwait
or
hlt
adc
imul
xchg
xchg
cli
inc
cmpsb
mov
mov
mov
mov
dec
push
push
mov
dec
add
inc
mov
test
or
aam
mov
dec
lock
int
lahf
xor
leave
pop
nop
mov
cwtl
mov
mov
and
leave
pop
jecxz
lret
sub
lock
or
pop
dec
cmc
filds
lods
inc
shlb
std
adc
or
add
outsb
das
rorl
sbb
adc
adc
or
push
lods
incl
movsb
filds
inc
pushf
fiaddl
loopne
iret
cli
dec
add
mov
xor
push
insl
mov
jb
mov
mov
push
inc
mov
pop
movsl
cld
loope
pop
add
jbe
sar
enter
cltd
jb
sub
sbb
fists
pop
xor
pop
sarb
dec
adc
in
adc
mov
jno
clc
adcb
test
add
data16
inc
cmp
daa
popa
scas
push
test
stos
stos
add
mov
inc
cmp
xchg
leave
push
cmpb
call
ss
pop
int3
ficoms
cmp
out
add
or
push
stos
cld
bound
sbb
adc
inc
jecxz
jp
cwtl
pop
xchg
mov
xchg
add
adc
mov
enter
mov
jo
mov
add
add
or
pop
scas
or
and
sbb
in
outsl
cwtl
cmp
adc
clc
lock
and
jecxz
mov
imul
push
mov
shrl
pop
inc
mov
jae
jbe
ljmp
dec
adc
outsl
jg
std
cltd
add
incl
jnp
std
add
popf
jmp
outsb
add
je
jne
dec
mov
and
sub
xor
aam
popa
lods
xorb
push
mov
outsl
les
test
ret
xor
cmpsb
pop
lahf
pop
xor
inc
sti
aas
mov
or
xchg
mov
repnz
add
hlt
push
mov
add
leave
push
loop
sbb
xor
imul
in
pop
out
mov
or
pop
popf
push
loop
xchg
pop
roll
and
pop
push
das
or
rcl
adc
sbb
sbb
mov
jo
add
aad
or
pop
add
movsl
pop
adc
fs
and
add
clc
xor
pop
fisubrs
add
adc
inc
sub
mov
rcrl
and
add
or
mov
mov
ds
dec
push
sbb
mov
jbe
jmp
jnp
xchg
jne
add
test
cmpsb
pop
push
sti
push
pushf
sbb
lret
daa
sbb
add
sahf
lret
negb
pop
adc
sub
push
push
fbld
mov
loopne
test
or
je
cmp
in
popf
sub
dec
fistps
xchg
pop
push
fistps
sub
lods
pushf
cld
xchg
add
sbb
call
push
jmp
cmc
imul
cld
cmp
add
cmc
popa
or
std
jp
nop
adc
push
jg
sbb
hlt
pop
loope
add
dec
xchg
xor
sub
inc
and
das
aas
dec
pop
clc
mov
mov
cli
jg
xchg
push
cmp
ds
sub
rol
inc
push
xor
lret
pop
loopne
roll
xchg
adc
push
cmp
dec
xor
pop
dec
aaa
bound
add
fsubrl
call
movsl
add
jb
sbb
sbb
pushf
orb
inc
jmp
out
pop
dec
or
mov
mov
in
inc
jno
add
sbb
sti
repz
enter
and
lock
push
push
add
outsl
in
sti
cmp
xor
fildl
sub
mov
sarb
add
inc
aas
ds
stos
push
inc
add
xlat
mov
movsl
pushf
clc
add
pop
sub
add
test
fdivp
mov
add
in
ljmp
cli
adc
repz
out
push
incl
cli
mov
mov
jae
pop
aad
xor
add
push
sbb
jmp
add
cs
add
inc
add
mov
dec
adc
mov
inc
inc
lds
and
pop
arpl
push
add
push
cmp
rcrb
pop
fsubl
in
jae
mov
add
sbb
jge
add
out
add
in
add
ja
jae
dec
lahf
pop
mov
add
add
mov
inc
subb
movsb
in
add
push
out
mov
mov
mov
clc
out
dec
lock
xchg
fnstenv
xlat
mov
nop
negl
fistl
iret
mov
sbb
lret
add
in
psubq
mov
pop
leave
jg
mov
xorb
xor
add
stos
icebp
and
or
daa
rcll
rolb
std
pop
in
xchg
rcrl
mov
test
add
dec
sub
js
cmp
adc
in
mov
cmp
and
stos
adc
loope
add
rclb
cli
xor
lret
icebp
lea
mov
or
std
pop
pop
jecxz
jle
loopne
call
loope
cmp
int
psubq
repz
fadds
jns
and
mov
or
cltd
dec
and
jo
adc
imul
lock
add
xchg
inc
cmp
push
and
cmp
jno
mov
es
rolb
add
outsb
nop
aas
xchg
mov
test
pushf
popf
cwtl
pop
sub
adc
clc
lcall
lock
or
outsl
mov
mov
hlt
icebp
bnd
lahf
or
cmpsl
pop
in
ret
pop
jne
push
int3
stc
addl
pop
stos
or
dec
mov
push
adc
dec
pushf
xlat
loopne
aas
or
std
or
jno
cmp
jne
adc
and
xor
jecxz
cmpsl
add
push
in
or
xchg
dec
push
stc
loope
popa
dec
dec
in
fsubs
add
mov
les
fmul
push
mov
add
mov
push
or
push
test
or
cmpxchg
fbstp
shrl
mov
push
sbb
jo
lret
mov
fisubs
rorb
jo
jne
in
stos
add
inc
stos
sbb
cmp
aaa
pop
cltd
inc
shrb
cwtl
cld
mov
leave
pop
sbb
cmc
imul
pop
cld
dec
cld
aam
imul
and
inc
mov
ss
lods
mov
push
jge
aad
out
lock
cmova
and
and
sub
in
jo
pop
fildl
sub
call
incl
sarl
addr16
add
insb
ljmp
ss
pop
xlat
xchg
mov
cs
decl
lock
mov
movsl
add
jmp
nop
outsb
sbb
and
inc
cmpsl
push
iret
or
lret
add
add
out
pusha
mov
sbb
lcall
idivb
sub
mov
adc
mov
add
add
pop
mov
shl
dec
pusha
jns
stc
outsl
inc
out
mov
mov
xor
adc
leave
or
int
mov
pop
xchg
push
repnz
repz
mov
xchg
in
xchg
mov
sub
rorb
movsb
js
sbb
and
fucomip
add
test
push
cld
adc
inc
push
add
outsl
cmpl
sbb
xchg
in
and
aas
lcall
jo
xor
and
inc
dec
daa
xlat
cmp
push
shll
insl
mov
call
lds
movsl
cmp
aas
es
xor
adc
pop
and
leave
push
push
mov
pop
mov
cmc
sbb
cmp
fsubs
pop
ds
out
xchg
push
imul
or
popl
pop
adc
cmp
gs
call
pop
andl
add
dec
xchg
popl
iret
adc
imul
lcall
std
andl
outsb
leave
int
pop
jmp
sub
cmp
push
mov
mov
mov
loopne
lcall
add
mov
pop
das
push
xchg
or
nop
push
test
xor
cmpsl
adc
fstpl
test
add
imul
jne
pop
jl
adc
mov
add
ret
sbb
movsl
add
jmp
scas
mov
pop
call
add
popa
add
int
lock
add
test
mov
loope
mov
or
pop
jnp
lea
add
hlt
fisubrl
xchg
int
clc
mov
je
mov
jne
xor
push
xor
add
lock
jbe
in
dec
hlt
shrb
pop
notb
mov
insl
data16
pop
stos
mov
sbb
loopne
int
insb
add
sub
push
add
insl
test
scas
pushf
add
and
sahf
sub
sub
mov
popa
add
scas
les
stos
cmp
addb
cmp
mov
js
sti
jle
lds
call
add
mov
repz
stos
xchg
lcall
call
lea
arpl
pusha
push
pop
stc
push
push
cwtl
std
cmp
jbe
sbb
outsb
jne
out
sub
cmp
add
sub
pop
xor
xchg
imul
outsl
push
loopne
inc
sbb
push
xchg
add
es
and
cmp
cld
mov
fiaddl
pop
dec
mov
arpl
popa
call
xlat
imul
mov
adc
jbe
add
pop
jg
add
in
fsubl
mov
push
scas
lcall
push
sbb
ss
adc
movsb
mov
cmpsl
int
jmp
add
repz
fdivs
jne
mov
in
push
add
inc
push
fisttps
pop
push
xlat
int3
psubq
popf
outsb
scas
cmpb
xchg
rclb
jo
add
push
xchg
imul
or
mov
stc
repnz
hlt
cmpsb
pop
xor
push
and
jmp
and
orb
lahf
push
lock
aad
sbb
or
stos
insb
jg
mov
cmp
jae
add
jge
cmp
movsb
mov
int
or
cmpsl
js
or
inc
lcall
sub
add
xor
out
xor
mov
mov
subb
ret
addl
lea
jg
add
fists
cltd
adc
cmp
add
outsl
clc
adc
fucomip
xchg
cld
cli
pop
sub
stos
and
movsl
cmp
mov
cmp
mov
repz
cs
inc
xor
dec
into
scas
push
jg
and
loopne
imul
adc
push
dec
shrl
mov
shr
sub
test
out
add
in
sarb
dec
or
sbb
sbb
add
jecxz
or
scas
xor
das
adc
loopne
cmp
dec
push
je
jb
sub
push
mov
in
or
subb
in
pop
add
xor
push
jmp
sbb
cmpsl
push
xchg
dec
inc
int3
push
test
push
rclb
mov
test
add
pop
scas
cmp
push
fildll
cmp
pop
ds
xorb
outsl
pusha
aas
mov
add
adc
jp
dec
outsb
and
and
add
test
dec
cli
shrl
lret
loop
sub
jge
cmp
pushf
scas
push
adc
dec
sbbl
and
pop
pop
in
test
pop
cmp
jns
add
cmp
rcll
cmp
jl
es
cmp
xor
jmp
mov
and
outsb
addb
test
mov
sbb
mov
jno
jns
cmp
test
cmpsb
cmp
mov
adc
dec
enter
or
mov
lock
push
and
into
or
scas
jl
pop
jle
ret
subb
sub
add
jo
xor
pusha
ja
cmp
sub
incl
push
iret
rolb
mov
inc
inc
ds
je
in
pop
dec
inc
aad
jno
cmp
dec
negl
push
xchg
incb
jmp
shrb
jle
pop
sarb
cmp
pop
xchg
bound
xchg
adcl
pop
pop
xor
and
jmp
int3
daa
and
out
ljmp
mov
mov
loopne
test
inc
dec
ret
aam
push
fldl
into
mov
xor
loopne
andb
xchg
out
jg
ret
fdivrl
mov
jge
jmp
loop
jg
add
sbb
inc
pop
mov
pop
inc
mov
pusha
or
pop
js
inc
hlt
add
or
pop
cmp
ja
add
dec
es
add
push
sub
inc
scas
pop
add
and
pop
ss
add
mov
mov
lahf
in
int
pop
int3
ret
pop
cmpb
xchg
add
cmp
mull
sub
pop
bound
out
repz
push
jo
ljmp
mov
xlat
add
icebp
mov
or
sbb
mov
fadds
dec
jecxz
pop
loopne
andb
xchg
test
adc
mov
add
lahf
mov
sub
mov
add
cmpsl
mov
popl
aas
scas
mov
or
aam
mov
rolb
fadds
pop
or
fdiv
pop
add
push
push
inc
xlat
enter
int3
call
mov
je
out
iret
js
cld
imul
cmp
addr16
add
imul
je
call
jno
xchg
fidivrl
lahf
ljmp
aad
add
sbb
or
cmp
and
dec
movsb
stc
dec
ret
fstpt
jne
mov
icebp
das
clc
push
push
jb
call
jle
lds
pop
fdivrs
bound
cmp
cld
pop
pop
add
pop
in
inc
data16
xchg
add
daa
and
jo
cmp
pop
adcb
add
jnp
dec
push
mov
int
lahf
sbb
imul
ljmp
adc
insb
push
icebp
add
pop
mov
jnp
or
add
mov
mov
inc
das
mov
cmp
cmp
inc
cltd
xor
cs
sbb
add
pop
push
adc
into
add
push
add
loopne
inc
pop
sbbb
clc
adc
xorl
or
sbb
mov
pop
js
inc
add
out
rorl
push
enter
sub
xor
cli
add
cmp
or
pop
int3
xor
dec
sub
imul
jae
loope
mov
cwtl
add
lahf
sbb
cld
sbb
push
inc
cmp
cmpsl
sbb
dec
or
bound
jb
mov
and
dec
jle
add
mov
adcb
push
bound
push
xchg
mov
xchg
mov
ljmp
andl
mov
mov
movb
loop
imul
les
ss
add
add
leave
adc
scas
push
push
add
mov
imul
inc
imul
mov
xchg
in
add
popa
and
pushl
stc
adc
adc
mov
ljmp
sbb
insb
or
and
add
add
loopne
adc
xchg
fadds
test
and
jns
pop
sub
out
out
and
add
jns
aaa
inc
xor
adc
loopne
mov
dec
mov
lea
icebp
dec
aam
adc
pop
dec
mov
pop
push
cld
mov
mov
push
insl
jge
into
jo
jae
loope
push
or
jl
sahf
testl
mov
add
in
jp
mov
sti
mov
add
pop
es
je
cmp
enter
cmc
mov
add
mov
dec
or
leave
or
pop
iret
or
das
sbb
sbbb
add
pop
sahf
and
aam
mov
jmp
pop
cmp
jb
stc
sub
movsl
js
mov
cli
xchg
clc
stos
cmp
les
sar
mov
into
mov
inc
inc
dec
xchg
outsb
aas
add
dec
xchg
push
add
scas
dec
and
dec
cmp
pop
loopne
loope
inc
shrb
mov
stc
sarb
mov
cmp
jae
mov
enter
cmpsb
dec
add
mov
push
mov
push
frstor
add
cltd
push
cmpsl
fistpll
int
add
lcall
sub
rcr
mov
adc
lea
stc
stos
fwait
jnp
pop
pop
inc
xchg
test
sarb
mov
pop
mov
mov
lock
sub
add
scas
clc
lds
nop
frstor
orb
mov
aas
cmp
sbb
test
pop
add
pop
shl
xchg
popa
inc
mov
push
mov
add
push
mov
stc
sbb
std
jp
and
aas
lahf
jns
pushf
jle
std
push
dec
ja
push
and
hlt
repz
test
clc
xchg
adc
push
not
addb
push
and
iret
pop
bts
jl
xor
in
pusha
leave
hlt
out
add
cmp
inc
push
int
add
ret
mov
testl
rcll
and
roll
sbb
mov
scas
inc
addb
sub
pop
jge
and
clc
mov
inc
xchg
add
mov
adc
xchg
std
mov
add
scas
test
push
cmp
inc
add
sub
xor
mov
fsubrs
pop
xchg
add
mov
xor
push
movsl
sbb
addl
mov
adc
add
xchg
jp
hlt
ja
cmpsb
movsb
mov
cmp
popf
push
pop
add
addb
dec
loop
or
fwait
push
dec
pop
inc
xchg
incb
fdivp
aas
mull
inc
aam
rorb
cmp
jecxz
je
cs
add
sub
stos
or
std
push
out
add
int3
or
mov
les
dec
sub
shufps
dec
pop
pop
pop
lock
int3
inc
pop
jle
xchg
add
loop
ds
xor
add
repz
fs
add
shll
inc
push
negb
add
jmp
push
push
adc
cmp
cwtl
ljmp
leave
mov
jae
pop
stos
and
nop
push
sub
nop
cmp
sbbb
push
popl
xchg
fldl
lds
jge
ds
add
inc
sub
pop
aaa
fisubrl
pop
mov
stos
add
xlat
negl
xchg
jg
testb
sub
mov
jo
pop
addb
cmp
out
or
xchg
frstor
or
mov
xor
jge
cmp
inc
pushf
insl
and
mov
sub
daa
push
leave
add
int3
push
push
jns
sub
pop
sbb
jl
xchg
shrb
addr16
sub
jp
out
add
add
arpl
mov
cmpsb
add
pop
repnz
cmp
js
pop
stc
or
add
add
xchg
mov
pop
movsl
pop
adc
pop
add
pushf
rorb
push
cs
aam
mov
mov
and
cmp
popf
cmpsb
jge
add
xlat
ret
test
sbbl
xor
adc
filds
sub
in
mov
mov
xchg
inc
jle
jecxz
imul
stos
adc
pop
add
add
pop
or
bound
pusha
adcb
add
ret
inc
jmp
lahf
fsts
mov
add
cmp
movsb
mov
xchg
cld
arpl
adc
popa
lcall
inc
iret
jmp
inc
push
mov
lahf
sbb
sbb
ret
inc
xor
ret
or
mov
xchg
or
fs
jg,pt
add
sub
je
pop
in
idivb
subl
in
sbb
pop
mov
adcb
push
sbb
std
imul
repnz
push
add
lods
cld
pop
into
xchg
daa
xchg
mov
mov
pop
adc
or
std
test
dec
jo
lods
dec
xchg
call
pushf
and
cs
pop
fdivl
add
rcrb
mov
xchg
jecxz
sbb
mov
jne
sub
dec
pushf
and
icebp
and
in
sti
add
push
stc
xor
or
incl
jl
bound
or
add
dec
hlt
and
loopne
mov
push
inc
into
inc
movsl
inc
lret
test
loop
fimuls
jb
mov
xchg
mov
and
mov
pop
mov
stos
xchg
pop
sti
icebp
mov
out
add
aaa
adc
jbe
mov
xchg
xchg
add
mov
sarl
testl
dec
nop
sbb
sarb
das
sub
push
sbb
cwtl
add
sub
pop
and
add
and
fsub
movb
movsb
dec
pusha
out
and
add
jp
arpl
andb
xor
and
push
add
cmove
mov
xchg
out
add
cmp
add
adc
bsr
cwtl
jb
and
xchg
jne
and
arpl
sbb
inc
cwtl
jno
dec
outsl
sbb
enter
call
cmp
jmp
movsbl
xchg
aaa
daa
out
cmp
mov
scas
add
out
loopne
push
inc
popf
pop
pop
aas
or
loop
decl
cmp
imul
mov
mov
aam
stos
stos
incl
add
jmp
rclb
popa
daa
inc
jo
and
or
incl
adc
lahf
popl
pop
ja
dec
pop
pop
pop
pop
lahf
jo
adc
adc
aas
and
dec
sub
in
push
daa
inc
stc
jnp,pt
mov
push
adc
cmpsl
fadds
pop
rol
sub
xchg
in
and
jl
xor
or
adc
add
or
or
pop
shrb
decl
or
add
pop
in
cmc
lock
xchg
add
sbb
xchg
add
scas
and
add
bnd
push
rcl
aad
test
and
sbb
add
mov
add
call
mov
dec
jmp
cltd
add
pop
ficoml
test
or
aas
add
sarl
mov
add
loopne
add
pushf
shl
xchg
add
lods
pop
cmp
or
frstor
push
lock
fisttps
jl
add
cmc
sti
shlb
push
push
push
push
cs
adc
inc
pusha
or
bound
incl
shr
enter
in
pop
adc
ret
pop
mov
mov
mov
cmpsb
and
pop
and
xor
pop
add
add
loop
and
push
add
not
mov
add
sbb
push
pop
jmp
mov
xchg
aaa
popf
pop
pusha
sbb
adc
inc
pushl
dec
push
sbb
lods
jmp
pop
out
sub
pushf
jmp
rcr
add
or
pop
dec
mov
cltd
cwtl
std
lret
add
inc
decl
loop
sbb
pop
jne
add
mov
add
std
mov
push
dec
inc
add
pop
fsubr
popf
add
push
insb
imul
cmp
push
call
sarl
cld
inc
add
ja
push
loop
test
cmpsl
xor
ret
sarl
adc
add
or
insb
push
pop
add
int
or
enter
loopne
scas
cmp
mov
das
stos
adc
or
repnz
pop
adc
in
add
loope
addb
jmp
enter
jge
sub
clc
jg
fcomps
lret
int3
inc
mov
aas
fwait
push
inc
jmp
add
sahf
sbb
mov
in
icebp
lahf
push
xchg
call
popf
aad
jo
mov
mov
add
iret
and
mov
js
push
stos
sub
sub
inc
lea
add
cmp
add
xchg
test
jo
add
arpl
pop
xchg
add
inc
jno
inc
sub
add
fsubrs
add
dec
dec
xor
mov
and
outsb
jl
subb
sbb
and
jmp
loopne
push
or
ja
add
add
sbb
xor
adc
dec
pop
and
add
add
sub
xchg
test
subb
cmpb
popa
pop
pop
stos
andl
mov
mov
xor
int
fs
adc
mov
sahf
imul
and
das
sbb
dec
pop
mov
push
jne
add
pop
hlt
test
mov
mov
jmp
cmp
add
stos
js
and
add
nop
idivl
outsl
add
imul
lock
adc
cmp
sub
sbb
pop
and
push
inc
incl
es
pop
cmp
out
sbb
inc
lahf
sub
call
add
fnsave
sbb
jbe
add
jp
cpuid
lcall
add
notl
aas
mov
mov
push
and
decl
divb
adc
rclb
out
push
mov
ret
mov
jo
xchg
sbb
mov
ret
stc
mov
pop
cmp
out
imul
lret
stos
push
xchg
incl
ret
and
inc
rorb
test
mov
cmpsl
fldl
push
cmp
jp
test
cmp
stos
call
or
xchg
jp
or
pusha
pop
jl
out
xchg
in
call
adc
sbb
or
jle
jmp
mov
inc
add
and
aas
inc
add
lret
addr16
adc
push
add
sub
jl
add
es
and
and
fs
or
sub
sub
jp
subb
mov
pop
sti
pop
shlb
cmp
ficoms
int
adc
xlat
test
outsb
std
and
mov
sub
jmp
pop
xlat
pop
mov
mov
xchg
inc
lcall
daa
push
inc
pop
add
sbb
div
push
call
loope
add
sbb
sub
or
mov
mov
or
in
shl
mov
gs
jp
outsb
adc
pushf
ss
inc
inc
ret
adc
mov
testb
push
push
add
imul
out
aad
mov
sub
cld
aam
shrb
cmpsl
call
xlat
daa
add
mov
pop
sub
and
and
cmp
mov
and
add
push
jns
hlt
pop
and
sub
sbb
punpcklbw
or
xchg
fcom
add
jmp
rcrb
adc
cmp
pop
add
fdivr
jns
sbb
xchg
add
inc
jmp
mov
push
imul
mov
mov
mov
out
dec
lcall
add
dec
ja
push
and
mov
add
jns
jb
or
add
sub
movq
add
mov
pop
add
imul
dec
add
sub
add
jl
inc
sub
or
mov
xor
mov
rcl
dec
adc
cmp
ss
sti
push
add
pop
inc
pop
mov
rcll
and
push
sbb
inc
out
dec
in
cmp
lcall
out
push
cs
inc
xchg
or
imul
inc
std
pop
dec
jecxz
lock
pop
push
int3
pushl
dec
call
sar
jle
pop
add
int
mov
ds
call
jle
jecxz
enter
sbb
mov
mov
lds
add
pushf
xchg
loop
inc
jg
rclb
lods
enter
lcall
add
loopne
sub
xchg
lahf
mov
add
in
xchg
movsb
jmp
dec
pop
add
inc
xchg
subl
pop
jg
dec
in
xchg
adc
adc
and
loopne
pop
inc
mull
mov
fiaddl
stos
add
movl
and
ds
jo
push
test
cmp
add
sbb
add
push
imul
cmp
and
add
scas
pop
pop
icebp
cld
xacquire
fdivrp
adc
pop
push
cmp
ret
lock
inc
in
movsl
cs
and
xor
rol
subb
pop
ret
call
cmpsb
pop
mov
test
push
mov
faddl
or
mov
mov
addb
cwtl
xchg
xchg
out
stos
shll
andl
add
jbe
jp
add
subl
out
push
add
push
sbb
dec
lret
je
pusha
int3
pop
and
stos
adc
adc
sub
outsl
cmp
and
dec
test
test
mov
sub
sbb
add
sub
push
adc
jnp
xchg
or
and
pop
add
and
imul
lock
sahf
inc
push
or
decl
cmp
adc
push
in
mov
div
mov
add
out
push
fdivr
jmp
xchg
jg
fadds
sbb
jecxz
dec
mull
add
fsubl
cli
mov
test
pop
repnz
pop
sbb
nop
test
mov
andb
add
dec
pop
scas
xchg
mov
test
popf
push
clc
mov
fldl
or
jns
mov
sahf
mov
mov
outsb
scas
movsb
test
xlat
cli
adcb
add
adcl
shr
cmovns
xchg
inc
cld
or
cmp
pop
lods
mov
enter
pop
add
jg
cmp
add
je
mov
cmpsl
out
add
sbb
inc
pop
test
movsl
push
fcom
shrl
es
push
add
aam
xor
add
daa
adc
js
loopne
add
xor
push
pushf
sub
test
andb
push
jg
push
pop
std
sbb
xor
je
pop
cwtl
push
add
hlt
jae
sbb
xchg
call
in
std
jmp
sub
cmp
ljmp
call
call
inc
add
sbb
or
xor
xor
push
lcall
sbb
sub
lock
and
xchg
xchg
repnz
cld
sbbb
scas
push
sbb
xrelease
add
lahf
leave
inc
sti
lock
popf
jb
sbb
mov
ljmp
lret
shl
cmc
add
inc
je
xor
cmp
loopne
pop
push
imul
es
sub
pop
mov
fstpl
jg
push
inc
add
adc
xchg
or
add
cmc
clc
scas
add
lock
jne
or
in
aad
mov
jg
int3
dec
shll
push
push
ljmp
push
inc
add
and
arpl
stos
shrl
add
or
and
sarl
push
ljmp
dec
dec
je
add
test
mov
adc
add
adc
aam
sbb
aaa
or
inc
imul
lods
add
dec
std
hlt
mov
es
mov
jp
or
lcall
dec
and
fs
xlat
outsl
imul
clc
int3
add
mov
inc
lods
jo
add
dec
and
jg
jb
add
cmp
mov
je
sbb
cmp
xchg
cmp
adc
mov
sub
ds
in
fwait
std
add
jecxz
test
out
faddl
add
pop
cltd
or
loopne
xchg
cmp
mov
adc
negl
add
or
ret
xchg
add
xchg
aad
pushf
call
add
xchg
lcall
imul
ret
sub
push
cli
add
addr16
lret
jge
stc
cmp
jle
push
adc
push
enter
sbb
pop
pop
sbb
inc
add
sub
add
cmpsb
dec
xchg
mov
fisubl
shll
mov
loopne
rorl
insl
filds
mov
add
mov
jge
jnp
ret
cmpsl
add
int3
outsb
push
xorb
push
roll
mov
add
or
fs
pop
jge
aad
je
mov
sbb
dec
push
inc
dec
pop
addr16
loopne
cmp
cmp
sub
add
xor
ret
cmp
lods
inc
add
xchg
pop
pop
sub
lret
mov
insl
lods
push
ret
ss
sti
mov
xlat
add
push
mov
and
call
insb
xchg
or
test
pop
popa
xchg
dec
fwait
mov
ljmp
pop
jle
mov
fbstp
or
and
add
jmp
repnz
jge
test
sub
cmp
jge
or
mov
fdivrl
cmpsb
std
out
dec
fisubl
fisubs
push
and
lods
sub
add
mov
cld
ret
incl
xor
jg
call
or
pop
pushf
fsub
mov
inc
outsb
fstpl
jmp
out
pusha
arpl
test
add
sub
es
mov
scas
inc
add
lahf
cmp
mov
adc
cmp
sar
pop
sbb
sub
mov
enter
daa
push
and
mov
gs
addr16
adc
mov
cmc
in
bound
bound
xchg
incb
add
fmuls
dec
pushf
lahf
ret
jmp
pusha
or
dec
ja
mov
xor
test
jp
sub
add
mov
cmp
mov
and
or
into
add
aad
mov
movnti
jg
test
test
add
dec
xor
add
sahf
cltd
cwtl
inc
mov
gs
lock
icebp
add
xor
xchg
mov
icebp
out
ss
jne
shl
jnp
pop
inc
mov
jmp
gs
call
lea
popa
sub
jns
ljmp
dec
mov
push
call
mov
adc
push
rcl
imul
enter
add
addr16
add
jle
leave
add
fmul
push
ja
icebp
add
in
pop
dec
call
in
std
mov
pop
add
in
pop
clc
jmp
or
push
add
jg
mov
xchg
loope
lock
push
adc
jge
and
or
jb
add
inc
stos
push
scas
pop
push
add
js
mov
mov
sbb
ret
xor
repnz
shrl
inc
pop
fmuls
stos
sbb
rolb
add
push
add
or
push
push
pmullw
sbb
popf
jbe
mov
add
test
add
cmp
and
sbb
in
add
icebp
jo,pn
cmc
cmp
sarl
pusha
cli
add
or
lahf
inc
inc
sbb
add
mov
call
idivb
and
inc
incl
daa
out
cld
clc
inc
mov
jecxz
cmp
stos
lock
and
xchg
dec
lea
adc
sbb
rolb
adc
xchg
cmp
push
filds
lahf
mov
mov
mov
decl
aas
in
lock
cmpsl
jl
and
xchg
sub
add
in
sub
adc
or
sbb
pop
dec
in
clc
into
pop
shld
add
scas
pusha
ss
fs
jp
cmp
xor
add
jb
das
hlt
mov
or
mov
scas
sbbb
jo
mov
daa
fstps
jno
add
sarb
push
or
sahf
ja
jo
add
sub
mov
mov
fnstenv
sbb
add
jle
jl
adcb
jb
shrl
add
adc
and
das
loope
repz
addb
pop
les
add
jg
sahf
out
mov
lahf
out
jo
mov
mov
popf
add
adc
pushf
std
fsubs
movsb
fwait
mov
pusha
xchg
add
mov
mov
notb
add
xor
dec
cs
xorl
sub
xchg
push
fistps
daa
lahf
bound
out
or
arpl
adc
push
add
jne
jnp
dec
add
jge
ja
inc
popa
cld
jle
mov
and
add
and
es
pop
inc
in
adc
push
pop
xor
sbb
mov
pusha
jb
arpl
jae
adc
scas
outsb
pop
push
mov
pop
clc
jnp
sbb
lock
adcl
pop
fistps
add
nop
adc
sbb
add
fistpll
scas
lret
leave
movsb
iret
scas
sub
pusha
inc
push
mov
xorl
mov
rcrb
mov
dec
xchg
pop
es
inc
std
add
lret
fisttpll
add
vmovupd
xchg
int3
fnstenv
gs
mov
adc
adc
scas
addr16
cmpb
fdivl
js
cmp
mov
ret
pop
les
xchg
int3
loopne
xchg
inc
mov
push
cld
aam
dec
xchg
cmp
xor
jno
sub
imul
xor
ljmp
jno
daa
sbb
les
dec
in
push
inc
mov
pop
add
test
add
clc
in
loop
cmp
adc
xchg
or
dec
stc
jg
add
fildl
inc
sar
shlb
jns
lea
fwait
out
out
lret
add
daa
mov
sub
scas
stos
cmp
les
ret
mov
rcll
decb
jmp
xor
cli
shrb
dec
pop
cmp
or
test
roll
xchg
les
lahf
clc
stc
fistpll
clc
js
notb
out
cmpsl
aas
rcl
adc
test
jmp
jg
ljmp
dec
cs
add
push
clc
sbb
add
pop
sub
add
and
lods
mov
andb
add
shlb
mov
xor
lock
data16
add
push
push
rol
dec
add
mov
enter
cmp
movsl
ficompl
cmpsl
cmpsb
call
mov
ja
roll
or
rolb
mov
dec
mov
cmp
sbb
rcll
jns
sub
fldl
repnz
fldl
icebp
add
pusha
jbe
mov
out
cli
pop
push
mov
cmp
mov
lods
add
mov
loopne
or
lret
mov
xchg
push
adc
push
mov
jnp
mov
int3
loope
int3
lea
sub
jmp
add
repz
push
scas
je
sbb
jmp
jp
mov
ljmp
loopne
dec
or
adc
add
add
jg
sbb
lock
push
jmp
jo
shrl
xor
arpl
mov
add
sub
sub
mov
dec
cmpsb
enter
fcom
sti
mov
icebp
subb
and
jb
pushf
add
in
jp,pn
xor
mov
data16
sti
fisubrs
sbb
fsubrs
jle
adc
test
out
push
addr16
out
add
adcb
cmp
inc
adc
loop
sbb
mov
das
stos
popf
jmp
imul
jae
mov
inc
out
push
xchg
dec
xchg
lock
inc
sti
mov
std
inc
mov
push
insl
push
imul
out
jno
or
cmp
fdivrl
dec
cld
in
jne
jmp
cli
mov
les
or
dec
aam
fldl
pop
add
jo
jns
fcmovnu
lods
push
adc
mov
subb
push
mov
cmp
lret
push
pusha
mov
mov
dec
fistpl
aaa
fstpl
dec
pop
aad
sahf
mov
bound
jecxz
and
pmulhw
loope
sti
clc
das
xchg
cmp
mov
push
imul
out
add
flds
fiadds
inc
fs
sar
inc
pop
sbb
test
push
mov
push
shrl
sub
div
and
js
cli
cmp
mov
aaa
je
and
ljmp
fidivl
int
gs
or
push
adc
faddl
pop
cltd
lret
or
mov
loop
mov
mov
out
fs
mov
clc
insl
cmp
stos
jae
jmp
shlb
add
push
push
les
add
dec
sbb
mov
js
add
cs
outsb
jno
push
jno
leave
push
leave
add
mov
add
aam
push
cmp
lret
jno
adc
into
inc
jmp
stos
or
mov
push
add
pop
dec
jbe
pusha
jno
add
fs
aad
jns
add
insb
jge
fnsave
test
jae
js
aam
jl
insl
mov
adcb
jae
mov
popf
pusha
ds
adcl
add
adc
adc
mov
or
push
dec
in
test
sbb
in
in
aad
mov
out
sti
pop
iret
adc
push
xor
decb
dec
mov
ror
push
pop
and
inc
stos
push
adc
pop
ss
inc
add
popw
in
dec
popa
add
adc
or
div
xchg
stc
scas
cmp
lret
push
stc
pop
and
pop
clc
in
and
inc
inc
arpl
xchg
loopne
jmp
leave
xchg
nop
ljmp
insl
mov
pop
movsb
mov
cmp
mov
add
ret
lods
movb
roll
push
fnstenv
add
push
and
add
xchg
or
andb
add
in
sub
jg
cwtl
xor
divb
and
and
sub
das
js
add
sbbb
dec
cmp
mov
jo
xchg
inc
nop
push
outsb
adc
in
scas
es
and
pop
fucomp
add
lods
sti
inc
dec
xor
xor
iret
xchg
jnp
mov
add
xchg
dec
mov
lahf
cmp
push
sbb
add
xchg
inc
xor
cmp
and
mov
xor
insb
fs
in
mov
mov
insl
sub
xor
cmpsb
jg
pushf
or
in
cltd
pop
cmc
and
xchg
dec
push
pop
pop
add
sbb
loopne
jae
sbb
outsb
in
jecxz
shl
add
fcompl
jmp
pop
inc
aad
imul
mov
inc
aaa
mov
hlt
sarl
rol
lock
ja
icebp
inc
push
test
add
aas
movsl
cmpsb
sub
mov
shl
out
sbb
shll
cmpsl
add
mov
mull
lock
xchg
insb
jnp
outsl
push
inc
nop
lods
or
mov
lahf
sbb
jnp
xchg
xchg
xchg
enter
jae
addr16
pusha
lret
sti
or
out
and
push
fidivrl
add
mov
dec
fistpll
ljmp
test
push
enter
int
add
sub
bound
add
sbb
loopne
loope
or
inc
fcomp
add
daa
xchg
js
pop
icebp
cwtl
movsl
or
mov
or
lea
decl
push
add
mov
mov
sub
rcll
inc
cld
xchg
pop
or
loopne
xor
xchg
jmp
imul
ficompl
add
sarb
mov
test
ljmp
adc
and
xchg
nop
add
pop
pusha
push
xor
add
dec
gs
pop
mov
clc
test
std
loopne
inc
jl
cmp
jo
sarb
mov
jle
test
sbb
mov
mov
sub
sub
pop
and
mov
and
mov
int3
les
ja
jne
add
icebp
xor
or
mov
lcall
cmp
mov
stos
imul
rcr
call
outsb
or
jo
cld
mov
pushl
push
dec
jo
test
or
cs
clc
sti
mov
out
nop
cmp
dec
enter
repnz
int
cmp
nop
inc
xor
xor
pop
xor
call
ret
pop
outsb
inc
out
add
leave
pop
cld
sti
add
push
cmp
mov
lcall
or
loop
ja
xlat
imul
cmpsb
mov
outsl
ja
jl
adc
out
cwtl
pop
mov
xor
xchg
adc
in
stc
push
adc
idiv
mov
mov
repz
imul
sti
add
mov
mov
mov
movsl
inc
stos
int3
adc
rorl
scas
lds
aad
and
sbb
stc
xor
sbb
or
aam
add
loopne
and
mov
clc
icebp
cli
or
add
repnz
add
lret
add
push
adcb
movb
fistl
sbb
xchg
and
mov
and
sub
rcrb
add
filds
sub
mov
dec
add
pop
lret
and
inc
iret
out
rorb
or
popa
inc
arpl
jae
push
lret
mov
mov
inc
and
mov
out
seta
sarb
js
inc
add
xchg
add
jmp
mov
sub
push
rcll
cltd
data16
mov
orb
mov
mov
repz
mov
xor
add
xor
add
sarb
add
or
cmp
and
and
std
fiadds
scas
xlat
and
xorl
repnz
js
and
jmp
jbe
cmpb
mov
mov
push
pop
and
add
and
lret
leave
or
add
xlat
sbb
mov
lcall
test
cmp
out
jae
add
mov
insl
roll
mov
xlat
cmp
inc
inc
movl
inc
lea
rorb
loopne
or
mov
push
xchg
mov
add
push
sub
sbb
call
inc
cmp
or
adc
inc
mov
xchg
add
rcrb
cld
aas
mov
add
call
pushf
shll
test
and
and
cld
leave
sbb
jle
mov
lods
xchg
add
xchg
ljmp
mov
mov
loope
xchg
jg
ret
jge
faddp
inc
and
orb
adc
adc
push
mov
cwtl
gs
sub
popa
pop
fsubp
bound
repz
adc
push
shll
dec
cmp
jb
pop
add
inc
shl
sbb
les
add
lret
xor
or
aad
loop
testl
jnp
sub
call
aam
lcall
pushl
sbb
mov
mov
inc
add
imul
hlt
mov
mov
push
sahf
stc
flds
lcall
mov
je
cmp
push
add
call
cmp
jle
and
or
sub
add
or
into
rolb
cmpsl
add
int3
push
stos
sarb
add
in
out
scas
out
dec
ljmp
cltd
jg
cmp
adc
cld
add
int
div
mov
lds
inc
push
sbb
add
add
lcall
sbb
iret
jae
xchg
pop
xor
addr16
fwait
add
outsb
mov
ficoms
arpl
pop
jne
add
int3
jmp
mov
or
mov
inc
pop
sbb
ret
int
dec
pop
and
ficomps
adc
das
test
lock
das
adc
and
add
mov
jecxz
adc
clc
mov
push
xchg
jbe
jl
cmc
add
lods
or
repz
into
mov
inc
add
xchg
xchg
xchg
pop
ret
mov
adc
in
negl
insb
dec
inc
mov
into
and
jmp
add
cmp
add
push
in
dec
cmp
scas
dec
xchg
fdivs
popf
nop
sbbb
push
add
mov
in
sbb
add
popa
sbbb
push
js
mov
cmpsb
sub
mov
mov
dec
push
loop
dec
sbb
mov
lcall
inc
jns
or
cmpb
sbb
jae
and
mov
cs
sar
sub
jp
sar
lds
xchg
fdivrl
add
jp
add
sbb
aam
ljmp
pusha
loopne
test
cmp
ror
data16
ret
jnp
jl
loop
cmp
xchg
add
mov
xchg
xchg
xchg
mov
shll
jbe
push
dec
add
subl
insb
add
jne
cmp
je
mov
sub
roll
inc
cmp
and
lods
stc
out
insl
cmc
adc
sbb
push
rolb
cmpsl
cmpsb
push
mov
leave
into
out
incl
or
cmp
lods
mov
add
sbb
add
adc
sbb
mov
xchg
sbb
inc
inc
inc
in
push
lock
inc
lcall
pop
stc
add
js
aas
jnp
jle
mov
imul
sub
cmp
push
adc
int3
mov
add
push
rclb
xor
mov
and
add
sbb
jecxz
push
cmp
cwtl
xor
mov
out
add
ret
add
or
xchg
shrl
pop
push
xchg
fsubr
insb
adc
ds
lds
scas
pop
cs
shrb
das
inc
dec
mov
mov
test
push
aas
xor
pusha
sub
mov
inc
enter
into
add
mov
push
push
movsb
sti
xor
fstp
loopne
push
mov
lods
test
cmp
add
mov
hlt
add
fadds
in
mov
imul
fimull
mov
fs
xchg
outsl
mov
js
or
cwtl
shll
das
pop
pusha
stos
jmp
push
fsubl
into
daa
dec
repnz
add
dec
aas
mov
aad
ret
sbb
mov
pop
iret
add
dec
sbb
or
cld
aad
push
sub
add
push
jmp
callw
or
in
out
aad
xchg
aas
ds
mov
jne
cld
cs
add
or
loop
rorl
ret
lcall
lods
fiadds
adc
xchg
mov
cltd
pop
add
mov
bound
loopne
mov
pop
xor
cmp
jp
cltd
imul
cli
or
mov
nop
inc
adc
and
decb
movsl
loopne
adc
add
loopne
icebp
jp
add
push
or
bound
imul
outsl
sub
or
dec
push
mov
jb
mov
mov
mov
lret
dec
cmp
mov
push
test
dec
push
adc
add
or
xchg
cmpb
je
fdiv
push
scas
xor
in
pop
add
pop
xor
es
out
rcr
mov
cmp
cmpb
scas
mov
mov
mov
push
cmp
orl
fwait
lock
add
add
loope
jb
dec
not
push
push
and
fs
xchg
or
repnz
add
xor
hlt
test
add
in
mov
loopne
fimuls
out
in
add
xchg
loope,pt
lock
add
std
mov
sub
imulb
outsl
inc
add
push
lods
push
cmp
out
ds
ljmp
negl
jl
ret
rol
cld
out
inc
add
mov
clc
add
cli
test
insl
int
adcb
inc
push
leave
in
loope
add
outsl
mov
bound
xchg
out
add
cld
sar
js
pop
shl
jl
fucom
clc
ss
add
add
mov
add
xor
jno
test
add
pushf
adc
add
sahf
aad
sbb
add
sub
loop
mov
in
gs
or
mov
cmp
add
add
cld
inc
add
mov
rolb
fwait
rcl
js
in
dec
pop
pop
push
sahf
pop
pop
add
cmp
mov
push
in
push
jbe
mov
jno
add
insl
mov
nop
mov
ret
rolb
jmp
aad
mov
lods
sbb
popf
push
popa
add
dec
cltd
jo
add
popf
je
pop
ret
jne
mov
push
mov
xor
dec
xor
loope
out
sub
xor
popa
pop
pop
incl
notl
leave
push
and
add
and
fucomi
dec
add
pusha
sbb
and
shrb
pusha
gs
inc
mov
cmp
cmp
sbbb
out
add
sbb
add
adcb
out
popf
sahf
mov
faddl
pop
sbb
xchg
in
push
dec
cmp
and
sub
sub
mov
addr16
leave
and
jmp
adc
rclb
add
push
mov
loope
push
pop
xlat
popf
and
shlb
sbb
push
test
call
ljmp
loopne
std
and
inc
cmpsb
xor
mov
repz
lcall
or
rorb
dec
or
or
nop
pop
push
add
adc
popa
adc
int3
push
xlat
cmp
xchg
das
arpl
adc
repnz
out
ja
add
int
mov
ss
mov
dec
push
shr
adc
mov
pop
sahf
testl
and
loop
jbe
jns
fldl
in
mov
repnz
xlat
sbb
add
push
lea
dec
inc
pop
pop
push
rolb
cli
out
add
adc
inc
fsts
jno
jb
lods
pop
or
xor
aad
aad
xor
mov
mov
push
mov
inc
push
lahf
enter
pop
dec
ret
daa
cmpsl
jge
fnstcw
add
fcoms
cmp
sbb
or
push
repnz
pop
jecxz
jge
pop
sahf
in
xchg
inc
lds
fs
jnp,pt
aas
push
clc
and
in
xor
pop
pop
sub
jl
mov
adcb
add
faddl
cwtl
lcall
ret
xchg
popf
adc
lock
loope
clc
cli
push
mov
dec
add
mov
mov
rcrl
xor
sub
xchg
push
cmc
mov
add
es
and
xchg
or
stc
imul
add
adc
aam
mov
popa
fldenv
cmp
add
mov
mov
imul
xor
pop
scas
aaa
sbb
sbb
into
imul
out
arpl
out
add
jb
mov
mov
or
xor
mov
repnz
mov
fcoml
jl
ret
ja
lods
pop
fcomps
mov
cmp
and
jb
mov
movsb
stc
add
psubusw
loop
add
addl
popf
mov
gs
mov
loopne
and
sub
loope
add
xchg
mov
xor
pop
gs
dec
popa
out
cmp
cli
mov
add
pop
xchg
ret
js
add
mov
cli
cmp
mov
loop
mov
mov
add
out
lcall
xchg
pusha
push
pop
rorl
cmp
adc
dec
jb
mov
push
not
adc
push
sbb
jmp
xchg
shll
bound
popa
mov
arpl
xchg
jl
sub
inc
ret
ss
nop
add
push
push
inc
movsb
push
adcb
add
aad
pop
repnz
sbb
in
andb
inc
loopne
add
in
mov
icebp
mov
add
mov
sti
mov
jns
cmpsl
repnz
imul
xchg
pop
loope
call
or
mov
inc
push
pop
lcall
mov
pop
div
and
pop
insl
shlb
je
mov
dec
mov
ret
flds
lcall
xor
add
push
idivb
loopne
xchg
add
outsl
cltd
ret
xor
popa
sub
out
and
jo
idivl
mov
add
mov
aad
fidivrl
movl
out
cmp
jns
pop
cmp
jmp
incb
test
loop
sbb
lret
add
or
or
xlat
orb
aaa
gs
push
sbb
cli
cli
out
or
adc
testl
pop
mov
cld
testl
dec
clc
enter
js
aad
inc
jne
cmp
push
dec
scas
add
push
jbe
mov
push
add
sub
and
gs
add
jg
mov
lahf
insb
push
xchg
cmp
enter
cwtl
mov
cmp
sub
dec
and
mov
add
loope
nop
mov
inc
inc
xor
cli
dec
fwait
out
inc
inc
add
mov
and
sub
add
fistpl
imul
out
popa
push
psrad
sti
sbb
test
movsl
sbb
dec
xchg
ja
mov
xchg
add
pop
arpl
sbb
lock
and
inc
popf
sti
cmp
add
and
jnp
hlt
arpl
inc
scas
or
jns
mov
aas
cmp
mov
xor
dec
roll
inc
into
cmpsl
add
push
inc
or
cwtl
mov
xlat
adc
stc
add
cmp
scas
shrb
daa
cltd
dec
jl
cmpl
jb
cmp
sbb
popa
fadds
or
dec
into
jo
call
imul
sahf
inc
int3
pusha
in
add
movsl
bound
repnz
cmp
add
stos
js
aaa
or
dec
int3
push
arpl
pop
xchg
inc
das
xchg
push
or
pop
xchg
daa
sarl
push
mov
add
xor
pop
mov
mov
sbb
pop
mov
testb
stos
scas
jge
movsl
cmp
sti
inc
add
cmp
adc
mov
push
bound
push
push
push
fwait
hlt
dec
roll
sbb
push
rcrb
push
sub
add
and
aaa
iret
testl
jns
les
lods
mov
arpl
fildl
bound
mov
inc
mov
std
adcb
push
fnsave
pop
sbb
sbb
paddsb
push
pop
insl
aas
add
gs
incl
popf
dec
add
hlt
out
mov
sarb
pop
test
mov
scas
call
inc
into
inc
adc
mov
jne
ds
clc
sub
add
rol
pop
pop
fwait
and
xchg
cmpb
add
out
cs
pop
out
add
cmc
sbb
test
in
push
movsl
jmp
scas
loop
sbb
or
xchg
ret
test
jns
jae
iret
jbe
loopne
movsb
push
jge
jnp
stc
or
in
mov
lret
pop
cmpsb
add
testl
adc
add
sbb
xchg
push
loopne
sahf
add
aas
lcall
jb
mov
imul
lods
mov
cld
mov
or
push
call
rcr
add
arpl
in
mov
gs
shrb
ficompl
adc
dec
jecxz
xor
add
fucomp
stos
mov
icebp
and
xor
and
xorl
rol
mov
popf
cwtl
inc
add
cmp
sbb
sub
lcall
rol
mov
mov
xchg
adc
jge
rolb
jbe
push
shll
lock
jg
pop
xchg
pop
adc
mov
in
lea
and
fnstenv
add
cwtl
pop
loop
add
mov
xor
mov
sbb
cld
shll
and
xchg
xor
sub
mov
fstpl
mov
xor
popf
pushf
cmp
cmp
push
int
mov
jg,pt
sub
mov
orl
dec
add
imulb
sbbb
xchg
incb
xchg
cld
sub
adcb
stos
fmuls
cmp
mov
or
stos
pop
sbb
aad
ds
push
push
dec
xor
xor
fbld
adc
push
adc
mov
outsb
in
repz
jmp
add
jnp
stos
lods
or
incb
push
fiaddl
lret
cwtl
add
ds
jb
nop
or
sbb
mov
repz
outsb
loopne
add
in
add
fisubrs
add
sarb
mov
and
les
push
outsl
push
inc
or
add
push
je
adc
jl
jp
jno
push
inc
das
gs
punpcklbw
leave
cmp
mov
rcr
dec
inc
mov
pop
pop
cmp
jg
movlps
jp
jae
jg
mov
pushf
xchg
arpl
cmpsb
pop
in
add
mov
add
test
and
mov
cwtl
cmp
xchg
lock
mov
jg
inc
push
repz
dec
jecxz
add
loope
ljmp
fisttpl
daa
out
lahf
push
fidivl
pop
ret
add
data16
jo
idivl
inc
fdivl
cmp
pop
cmc
mov
clc
in
repz
call
andb
cmp
add
js
jo
and
cmp
out
enter
dec
add
sub
push
mov
inc
push
sub
dec
add
lds
rorb
scas
adc
add
lahf
je
out
add
in
movsb
xor
test
jp
in
xchg
push
adc
shrb
das
sahf
sub
enter
add
xchg
xchg
pop
ret
add
out
addb
pop
jb
loope
mov
scas
jl
xor
popa
ljmp
loopne
test
pushf
in
into
cli
pop
xchg
sti
aad
xchg
leave
or
pop
pop
rcrb
and
lds
loop
pusha
hlt
xchg
ljmp
cmpb
pmulhw
aaa
jge
xchg
mov
in
and
adc
ja
add
pushf
pop
cmp
je
jo
sti
inc
sbb
addr16
fst
cs
cmc
pop
testl
lods
inc
add
inc
inc
cld
inc
scas
mov
in
jne
pop
or
aad
xchg
dec
add
sub
cwtl
inc
cli
insl
or
cmp
jge
xchg
mov
dec
mov
mov
dec
add
or
cmpsl
xchg
xlat
jns
push
add
in
push
sti
cmp
nop
clc
shrl
push
xlat
cltd
sbb
adc
fnstcw
out
lock
or
cmpb
aas
mov
mov
jge
mov
xor
in
lret
mov
lahf
sahf
cwtl
or
movsl
pop
loopne
pop
xchg
test
push
xchg
push
test
xor
loopne
pmulhw
dec
loopne
enter
add
add
movsl
and
pop
movb
xchg
push
out
rorb
pop
pusha
mov
aaa
xchg
orl
rcrb
leave
icebp
mov
sub
xchg
sbb
out
xchg
inc
mov
rclb
aam
pusha
cld
and
out
ds
sbb
push
inc
dec
xlat
mov
rcrl
mov
aam
mov
xor
out
push
add
out
add
xor
mov
xchg
jo
add
mov
push
push
inc
ljmp
hlt
popf
xchg
fimull
lret
adc
loopne
es
insl
mov
push
sub
in
fidivs
enter
fidivrl
aas
push
jmp
daa
test
daa
in
xor
dec
inc
mov
lahf
mov
ret
mov
lret
mov
pop
add
out
in
insl
stos
pusha
cld
arpl
scas
enter
aam
stos
sarb
sbb
stos
ja
test
push
rol
add
negb
outsl
scas
loopne
inc
add
popf
out
mov
int
popw
and
cmpsl
jmp
lods
hlt
and
dec
jge
mov
inc
adc
jb
or
pusha
inc
mov
jnp
push
push
inc
add
inc
test
fcomip
xchg
push
shr
inc
jo
loop
xchg
sub
mov
xchg
dec
pusha
call
adc
jge
cs
ret
push
enter
das
rolb
hlt
gs
pop
xor
test
pop
in
xchg
adc
add
sub
jl
mov
xchg
add
sarb
pusha
mov
dec
jl
and
jp
cs
fists
cmpsb
fnsave
pop
cwtd
clc
jmp
or
imul
mov
roll
stos
jo
test
sarb
testl
adc
jmp
sbb
dec
loop
jecxz
popf
pop
mov
nop
add
imulb
mov
add
mov
pop
ss
lock
imul
shrl
add
mov
xor
pop
push
lret
dec
xchg
pop
lods
inc
pop
movsb
mov
das
push
add
aam
das
rol
and
lock
cmp
mov
mov
nop
ret
test
rorb
push
loop
pmuludq
cmp
frndint
adc
data16
outsl
fstpl
orb
gs
push
inc
enter
add
loop
sbb
stos
mov
pop
xchg
push
orl
mov
xor
lds
sar
pop
and
out
add
or
push
or
add
sbb
out
outsb
sub
add
mov
cltd
icebp
repz
sahf
nop
daa
jmp
pop
fstps
pop
bound
xor
xchg
mov
jg
pop
out
repz
movsb
in
decb
adc
jg
sbbl
and
jne
mov
aad
sub
mov
inc
sub
mov
pop
sbb
mov
insb
mov
add
movsb
jbe
cmp
push
or
xchg
or
mov
fildl
arpl
lahf
add
ljmp
gs
cmpsb
add
scas
dec
cmpsl
or
mov
cmp
mov
add
add
sti
nop
fstps
dec
sahf
mov
pop
pop
add
ret
adc
add
into
xchg
xchg
cmp
add
xor
and
mov
and
dec
fmull
mov
add
cmc
fwait
lea
clc
int
sub
pushl
leave
addr16
mov
jnp
aad
std
ljmp
test
inc
and
xlat
push
sub
sub
lods
lret
or
stos
repnz
mov
je
in
jne
movsl
icebp
mov
add
cmp
repnz
inc
enter
inc
sub
enter
rcl
push
add
inc
ficomps
pop
popf
sbb
or
stos
imul
scas
sbb
and
cmp
add
jge
cld
ljmp
outsb
push
loope
add
push
push
xchg
mov
add
mov
mov
mov
loope
fstps
mov
movsl
aas
icebp
decl
mov
xorl
and
cltd
loopne
xchg
cmp
sbb
mov
adc
arpl
mov
sub
in
add
mov
add
jae
lods
jo
icebp
mov
add
daa
test
clc
roll
mov
jnp
lcall
xchg
fsubrs
nop
push
or
ror
data16
and
mov
sar
mov
inc
cmp
pop
jae
pop
push
push
add
aaa
cmp
aas
adc
mov
and
sub
aas
roll
andb
fidivs
sub
and
cmc
mov
push
jl
and
loope
jp
sbb
ror
push
or
ret
rcrb
incl
cli
add
xchg
cld
nop
ja
lods
enter
push
dec
std
or
jb
and
out
mov
loope
clc
dec
cmpsb
mov
addr16
out
sarb
repnz
jns
shl
lret
enter
inc
xchg
test
sbbb
mov
in
out
jecxz
jmp
loope
inc
loopne
xor
pushl
fdivp
stos
jbe
xchg
mov
aaa
lea
leave
loopne
clc
test
pop
adc
mov
push
push
inc
out
les
pop
or
and
and
out
jns
and
jnp
xor
mov
adc
decb
dec
jae
ret
loopne
mov
sbb
mov
lret
nop
and
jno
popl
push
cmp
js
sub
xor
lcall
out
lods
sar
repnz
or
sub
mov
inc
loope
aam
jne
rclb
into
mov
sbb
push
cld
xchg
repnz
inc
cmpsb
cwtl
popf
sahf
jg
ret
scas
loope
sub
adc
shlb
movsb
pop
xor
mov
jle
add
add
call
lahf
inc
cmp
scas
xor
add
push
adc
mov
fstl
hlt
push
iret
repz
popa
loopne
scas
out
pushl
xchg
jg
mov
cmp
jb
aad
push
adc
incb
aam
xchg
js
add
cmpl
in
sti
leave
xchg
outsb
add
out
add
cld
das
and
pop
xor
xor
std
pop
push
in
mov
push
sbb
sbbl
subb
dec
js
lock
cs
xchg
push
dec
xor
push
push
pushl
popf
aam
subb
nop
adc
mov
mov
jg
addb
mov
in
clc
or
xlat
xchg
sarl
add
lcall
stc
mov
push
sahf
add
pop
ds
mov
and
dec
fs
jae
movsl
cmp
scas
mov
les
dec
mov
mov
dec
sbb
movsl
mov
nop
icebp
xchg
push
sbb
lods
adcl
add
jmp
movsb
out
insb
mov
mov
jnp
mov
xchg
jg
clc
mov
incb
js
loop
push
add
dec
loopne
add
xchg
pop
out
les
shll
popf
push
adc
ja
mov
mov
je
jo
out
imul
pop
lods
cld
add
add
scas
and
or
orl
inc
sbb
adc
std
inc
fildl
jl
add
push
dec
pushl
add
sub
xchg
mov
pmulhuw
sbb
jl
jp
add
sarl
mov
mov
sahf
jl
mov
lds
loopne
enter
sbb
scas
sub
xor
or
pushf
scas
subb
out
loop
repnz
dec
popa
std
add
jp
loopne
jns
add
rcll
push
es
cmc
push
fidivrl
mov
icebp
lods
push
mov
leave
or
imul
sub
adc
push
sahf
pop
and
ljmp
xchg
push
orb
xchg
cltd
pop
cmp
pop
cmp
mov
and
movsl
jecxz
adc
dec
mov
mov
sub
and
inc
adc
mov
dec
push
mov
mov
push
es
add
mov
push
xor
setns
adc
imul
mov
std
push
aas
inc
jnp
sub
movsb
cmp
xchg
fcmovnu
dec
lret
and
subb
dec
fwait
mov
pop
shll
xor
incl
jae
add
push
mov
dec
add
int3
fwait
mov
jecxz
das
fists
push
xchg
sbbb
fsubr
sbb
fiadds
push
cmp
sbb
xchg
movsl
test
bound
ljmp
rdpmc
cli
repz
out
or
roll
aad
das
lock
mov
add
or
jne
push
jmp
mov
dec
push
jo
jae
lods
and
sub
sti
stc
xor
clc
xor
and
stos
jecxz
adcb
data16
enter
fimull
mov
add
ss
jmp
sbb
out
pop
inc
pushf
aad
cmc
mov
mov
jg
inc
cmp
inc
pop
scas
insb
rclb
adc
lret
loopne
mov
testb
pop
pop
sub
add
jmp
and
shld
jae
add
out
mov
mov
and
in
push
mov
out
test
pop
add
push
lcall
dec
lods
bound
push
out
dec
bound
push
out
mov
shl
std
jl
jle
sbb
daa
adc
mov
push
mov
push
xchg
mov
adcb
stos
jae
pop
sbb
push
sub
add
stc
inc
dec
mov
insb
sbb
mov
inc
adc
add
rolb
add
fcomps
jno
and
pop
rolb
dec
loopne
mov
jl
add
mov
mov
adc
dec
sahf
push
cld
cmp
testl
ja
enter
add
jnp
add
loopne
jl
xor
roll
jnp
add
pop
lcall
repz
call
outsl
push
das
imul
add
xor
sarl
xlat
fists
add
mov
adc
add
hlt
jmp
mov
mov
fisttpll
mov
pop
sbb
push
lock
dec
ljmp
sub
in
pop
fisttpl
xor
inc
push
mov
jno
jp
xchg
push
adc
iret
sbb
lds
daa
aaa
jecxz
pop
and
pop
cmpsb
and
xor
lret
loop
xchg
jnp
cli
add
mov
test
cmp
add
pop
movsb
mov
push
add
fsts
add
mov
in
test
xchg
out
jg
hlt
mov
pop
mov
lods
jnp
inc
jmp
jg
xor
jmp
pop
pop
loopne
pop
pop
push
inc
sub
inc
ret
pusha
sub
jp
add
sub
dec
add
and
testb
pop
sub
repnz
xor
stos
icebp
mov
sar
loop
shlb
insl
sub
xor
ds
jne
fidivrl
push
out
cmp
mov
add
add
cmp
clc
out
cltd
add
call
and
aas
fcompl
xor
add
fstpl
loope
imul
jl
push
sti
add
arpl
add
fdiv
jl
jno
nop
jnp
lds
into
add
insb
inc
aas
je
add
stc
jl
adc
mov
lahf
call
inc
add
sub
xorl
add
aaa
push
jle
fs
dec
add
arpl
scas
add
shrb
cmpsl
incl
xchg
mov
add
mov
xchg
add
addl
and
mov
into
add
mov
add
les
mov
and
add
cltd
shlb
loopne
std
adc
outsb
mov
outsl
mov
jnp
or
lock
pop
jge
jae
mov
inc
call
push
insl
popa
gs
dec
or
fadds
xchg
cwtl
pop
pop
psrlq
popa
and
xchg
pop
or
insb
loop
or
push
push
mov
out
jb
es
adc
shlb
clc
popa
add
xor
sbb
push
out
and
or
mov
or
xor
lock
push
xchg
push
add
test
xor
ja
rdmsr
es
add
repnz
add
stos
scas
xchg
mov
mov
dec
xchg
add
loop
lret
xchg
sub
and
popl
mov
dec
dec
dec
adc
repz
add
in
or
xlat
int3
addl
lcall
fwait
scas
add
push
loopne
popf
les
push
xchg
cld
push
lcall
inc
subl
sub
sub
pop
push
inc
lods
jo
jbe
mov
inc
lcall
or
add
push
adc
mov
rorb
sub
jge
or
ret
jnp
rep
push
insb
jmp
ret
adc
cmp
insl
aam
popf
fs
addb
dec
add
sbb
inc
mov
mov
cmp
sbb
shlb
loopne
adc
jnp
insl
jp
adc
sub
clc
add
leave
or
add
mov
les
icebp
jl
mov
mov
push
lock
enter
add
cmc
push
and
imul
dec
jno
pushf
sbbl
pop
leave
inc
pop
testb
movsb
lret
cmpb
push
ljmp
pop
and
stos
shrl
push
jmp
or
imul
femms
ja
pop
sub
xor
add
and
push
add
push
loop
or
sahf
dec
adc
jno
adc
mov
sbb
cmpsl
jno
imul
add
cmp
outsb
popf
add
push
mov
add
inc
sub
push
pop
push
orb
outsl
inc
test
outsb
add
and
adc
roll
mov
icebp
add
pop
jae
jns
adc
jne
inc
orb
add
mov
and
call
pop
sahf
and
popa
add
push
mov
cld
sub
push
cmp
in
movsl
pop
clc
dec
mov
shl
inc
push
sti
dec
pop
std
mov
fildll
call
xorb
stc
rorb
sbb
add
fs
sub
add
ret
and
leave
xor
ret
xlat
stos
ja
adc
mov
cmpl
pop
sti
roll
inc
xchg
hlt
adc
jb
cmp
add
push
cmovge
adc
mov
jmp
aam
rcl
in
mov
imul
movsb
xor
xor
xchg
es
jns
adc
push
or
push
jmp
add
jnp
xchg
inc
cmp
repz
mov
dec
imul
movb
jle
out
sub
cld
add
ds
cwtl
and
sahf
and
lods
incb
fisttps
int3
loope
cmp
mov
stos
pop
shl
jecxz
cmp
lret
or
cmp
ljmp
add
adc
enter
repz
cli
stos
out
es
mull
ret
ja
shlb
stc
int
jno
mov
inc
add
add
cld
pop
lea
sbb
xorl
pop
adc
fidivrs
imul
add
pop
adc
inc
push
fldl
sub
and
js
mov
lock
add
mov
and
fwait
pop
xchg
adc
xchg
or
sbb
iret
sbb
aam
add
sbb
or
add
ja
jne
mov
loop
add
test
xchg
fmuls
sahf
add
adc
mov
insb
and
xchg
mov
into
int3
push
lret
sub
les
mov
ret
in
mov
cli
mov
mov
dec
add
aaa
jno
fsubl
dec
mov
aam
xor
enter
mov
push
pusha
aad
fcomps
fistpl
rcrl
cs
add
sar
cmp
imul
push
pop
adc
adc
jmp
dec
lock
imul
inc
pop
or
push
lea
xor
pushf
push
adc
popf
pop
sbb
shl
cwtl
js
rolb
imul
and
pusha
daa
jb
mov
mov
sub
mov
dec
or
push
cmp
add
inc
mov
inc
xchg
adc
ds
cs
add
cld
aam
gs
arpl
test
push
push
cmpsb
sbb
dec
jl
cld
and
bound
in
subl
das
mov
mov
enter
popf
pop
std
xchg
xor
rolb
stos
push
adc
cltd
loopne
test
sub
pop
das
sti
mov
add
lahf
jg
mov
in
pop
cmp
rolb
aaa
xor
adc
das
testb
inc
mov
lock
pop
roll
cmc
pop
lahf
ret
add
into
push
mov
or
xor
adc
leave
xchg
outsb
xchg
cli
add
add
stos
fsub
and
je
rolb
mov
pop
loop
add
dec
sbb
setnp
xchg
pop
xlat
sbb
xchg
ficompl
and
loope
dec
sub
test
jmp
nop
mov
inc
cmp
mov
xor
jnp
lock
lret
pop
iret
mov
adc
dec
sbb
inc
dec
adc
shr
push
add
xchg
sub
bound
mov
popa
xchg
xchg
stos
insl
loop
cmc
sub
add
cld
jae
bnd
cmc
sub
add
int
push
add
push
jne
add
fstl
fwait
cmp
data16
sub
lods
das
imul
cmp
mov
cli
xor
mov
nop
pop
add
adc
dec
add
add
add
pop
rclb
lahf
sbb
xlat
out
subb
and
cli
add
mov
std
jg
cld
jb
out
add
je
mov
mov
in
or
addb
mov
fcom
pop
pop
adc
loopne
inc
test
dec
sub
insl
sub
cmp
out
daa
mov
icebp
mov
nop
ja
lret
mov
ret
add
pop
push
mov
push
es
std
andb
add
add
call
ss
stc
test
adc
jb
outsl
or
call
aad
rcl
dec
add
adc
sbb
nop
stos
dec
dec
adc
add
out
sub
inc
mov
and
lock
add
cld
mov
dec
cmp
popf
sbbb
inc
add
nop
loop
add
fstpl
les
add
push
mov
and
insb
mov
arpl
mov
jmp
incb
jl
mov
sub
sahf
movl
orb
dec
cmp
cwtl
push
sbb
inc
or
nop
adcb
sub
push
xor
ss
inc
xchg
mov
sub
or
int3
add
orps
add
inc
jge
fiaddl
sbb
nop
aam
rcll
push
rcrb
xlat
pop
add
daa
jle
sub
out
xor
aaa
mov
pop
push
leave
sub
stc
shll
cltd
lcall
sbb
mov
jne
adc
sub
pop
pop
shll
mov
clc
xchg
adc
cmc
pop
and
jnp
shll
pop
rolb
andb
aad
and
sub
frstor
sub
xor
lds
aaa
fadds
leave
call
loopne,pt
icebp
inc
add
cmc
cmp
add
in
std
orl
jns
mov
in
mov
scas
fadds
scas
je
or
cmp
insl
or
popa
add
add
ss
repnz
shlb
je
sbb
sbb
jnp
add
addr16
xor
mov
add
mov
inc
les
enter
push
fldcw
jo
sti
jo
push
jno
sbb
in
dec
lahf
sahf
add
and
add
jno
test
push
loope
je
fs
and
add
jnp
cmp
xchg
adcl
jo
jne
cmpb
fidivl
mov
cmpsl
jl
inc
push
jl
in
mov
scas
rcrl
xor
lret
adc
add
inc
mov
mov
mov
clc
dec
sbb
pop
xchg
idiv
out
pop
cmp
push
add
fcom
push
movsb
test
pop
push
mov
mov
out
addl
mov
xorb
jno,pt
cltd
std
cmpsl
add
sbb
add
mov
mov
add
fwait
mov
sbb
inc
mov
rclb
pop
outsl
push
rolb
xlat
jl
std
loopne
mov
loope
mov
xor
jle
jge
mov
jno
xchg
pusha
push
call
lods
into
push
sbb
add
pop
sbb
sbb
jo
fstl
data16
pop
jno
pop
push
or
ljmp
in
aas
inc
push
imul
stc
jo,pt
jns
pop
insb
push
pop
or
pop
mov
test
mov
inc
xor
xchg
pop
outsl
add
adc
nop
loopne
hlt
scas
add
repz
and
out
add
xchg
sub
test
sbbl
add
adc
add
fxch
dec
add
cwtl
inc
into
or
inc
mulps
xchg
cmp
push
push
dec
dec
loope
cs
imul
rclb
xchg
and
jae
xchg
push
addb
xor
shrl
in
mov
pop
jle
inc
mov
repz
push
dec
dec
dec
rorb
add
inc
dec
fdivrp
xor
bound
add
jecxz
in
jnp
dec
dec
mov
add
sbb
outsb
add
adc
or
or
jge
shl
pop
fldl
sbb
push
dec
rorl
and
sti
jnp
xor
xor
loopne
in
mov
sti
cmp
incl
add
mov
sub
dec
test
sub
adc
push
stos
push
sti
mov
ds
mov
add
lds
stc
jnp
mov
lods
out
inc
cmp
enter
pop
int3
dec
and
add
rcl
pop
xchg
fildl
pop
sbb
pop
sbb
sti
arpl
add
xchg
out
outsb
movsl
jecxz
sub
mov
mov
jg
je
in
pop
lock
clc
repnz
add
add
dec
push
add
jl
stos
adc
nopl
fwait
add
dec
scas
in
out
incl
xchg
in
aas
mov
cmp
inc
or
movsl
popa
sbb
mov
cmp
cmp
mov
inc
jle
add
les
add
xchg
and
sahf
js
add
inc
mov
movsl
je
pop
adc
fs
popf
inc
cmpsb
outsb
add
jb
sbb
sbb
inc
mov
inc
cltd
pusha
or
shlb
shl
inc
add
cmc
insl
xor
lds
sarb
lcall
jecxz
inc
sub
xchg
mov
incb
mov
test
mull
into
cwtl
clc
lahf
aas
cmp
add
or
leave
dec
shld
pop
jmp
pusha
pop
and
scas
notb
rol
jb
repnz
pushl
adc
sub
js
pop
icebp
lret
insl
cli
stc
and
push
jb
sub
addb
andb
dec
xlat
nop
add
bound
xchg
push
ja
aam
imul
add
mov
sub
add
mov
push
jp
sub
roll
cmp
leave
mov
cmp
dec
mov
push
enter
mov
pop
xchg
xchg
cmpsl
bound
dec
cmpsb
add
in
push
test
call
cmc
mov
jl
inc
mov
repz
fwait
lods
mov
clc
test
ficomps
repz
rcl
addr16
call
fcmovnu
add
popf
das
out
movsb
ret
shl
and
add
pop
add
push
inc
push
out
jnp
movl
add
add
out
xchg
add
cld
adc
xor
xchg
add
sbb
sbb
jbe
out
mov
mov
adc
mov
xor
sbb
cmpsb
mov
sub
mov
and
es
add
loope
push
fs
add
jecxz
ljmp
jl
loop
rcr
mov
insl
aas
mov
inc
xor
cli
push
add
mov
or
leave
push
xorb
push
roll
push
adc
adc
mov
or
rolb
adc
push
mov
out
add
jae
mov
jp
add
and
add
xor
add
insl
and
aaa
add
inc
pop
mov
lcall
sbb
addb
ret
inc
out
fwait
adc
dec
sbb
sub
mov
sub
add
and
cmpsl
insl
add
adc
pop
mov
adc
rcrl
mov
into
or
aad
addb
flds
mov
pop
lcall
push
or
add
mov
arpl
imul
test
jns
cld
jl
movntq
cmp
add
add
loop
je
test
add
fistl
cltd
xchg
sti
shll
push
or
pop
pop
es
iret
pop
stos
lods
xchg
add
mov
add
outsb
mov
imul
inc
sahf
ret
push
or
clc
jmp
pop
fadds
jge
add
and
push
lret
add
pop
loope
das
adc
add
and
xor
emms
sub
jge
aad
push
inc
popl
xchg
loopne
shld
mov
mov
push
sbb
pop
fiaddl
ss
stc
add
adc
push
sub
xor
lahf
jae
or
mov
dec
add
dec
popl
mov
inc
xor
mov
add
xchg
push
mov
push
xchg
push
push
and
or
ljmp
mov
sarl
add
mov
sbb
popf
ja
jne
mov
jge
jo
and
mov
lcall
jno
xchg
cmpsb
addps
jo
pop
pop
in
inc
lods
mov
movsb
pop
dec
mov
inc
xchg
sub
mov
pop
mov
loopne
add
or
int3
add
rorl
cld
xchg
fnstcw
push
add
sub
ficompl
in
and
ljmp
add
test
sar
cli
add
xchg
mov
xchg
add
ret
ljmp
add
xchg
rclb
xor
mov
dec
iret
nop
arpl
enter
cmp
add
mov
ret
imul
aaa
stc
movsb
adcb
rolb
enter
cmp
add
test
fsubl
push
sar
add
js
ror
pusha
cli
movd
sti
jnp
loop
xor
jb
ds
jo
test
add
xlat
sub
jge
stos
aaa
fstl
add
xchg
fsubrl
setae
sbb
negb
loopne
add
jno
jae
divl
sub
sub
bound
dec
lret
lock
clc
add
mov
push
les
imul
roll
push
scas
cmp
xchg
mov
mov
fbld
xor
add
add
cmp
cmp
es
insl
add
jg
xor
xor
ja
addl
xchg
or
xchg
in
inc
pop
std
cltd
mov
addb
push
jbe
ret
pop
movups
push
add
add
pop
sub
push
outsl
jmp
aad
mov
lcall
loopne
dec
test
xchg
cmpsb
fstpt
push
mov
pop
adc
imul
sbb
sti
add
jle
fmull
pop
dec
push
push
add
mov
push
pop
xor
daa
enter
test
movl
mov
gs
push
add
pop
dec
xor
stos
push
dec
scas
push
arpl
adc
ljmp
inc
mov
cmp
dec
cli
cld
sbb
inc
imul
dec
cmp
fisubl
aad
pop
push
popa
xlat
pop
gs
int3
dec
cmpsb
add
pavgw
sbb
stc
cmp
jo
mov
pop
or
push
sbb
add
aam
lea
push
lahf
xchg
pop
sbb
negb
bound
repnz
sub
xchg
sub
sbb
test
repnz
xchg
cmp
aaa
div
pushf
add
dec
addl
inc
fdivp
lea
xor
cmp
loop
pop
xchg
and
das
dec
dec
push
pushf
xchg
popf
cld
push
bt
mov
cld
inc
push
shlb
xchg
jno
pop
xor
add
and
test
fwait
add
pop
or
xchg
add
xchg
dec
das
jae
lret
mov
pusha
add
xor
inc
add
mov
loopne
cli
aad
aas
int
lret
mov
mov
int3
add
dec
test
dec
xchg
add
push
push
fcoml
pop
push
cmp
cltd
scas
pop
pop
nop
clc
cmp
jne
mov
inc
mov
ds
jle
cmpsl
xlat
push
push
mov
into
in
sbb
mov
loope
pop
add
mov
sbb
aad
cld
and
test
out
cmp
loop
in
pop
cmp
xor
repnz
ret
testl
mov
mov
add
xchg
pop
xchg
cli
pop
xchg
loope
stc
sbb
mov
mov
insb
cmpsb
lea
adc
cmp
std
add
rcrl
outsb
adc
add
pop
pop
out
adc
add
sahf
pop
inc
xchg
pop
inc
in
out
sbb
mov
lods
mov
aas
mov
jmp
add
push
mov
adc
aam
mov
or
push
and
add
pop
dec
dec
enter
add
jno
lret
daa
dec
pusha
in
das
inc
hlt
and
out
icebp
jl
insb
in
dec
lock
add
cmp
iret
shlb
xchg
add
sbb
sahf
and
cmpsb
pop
sbb
cld
ret
js
je
test
add
scas
lock
cmp
insl
in
roll
jo
dec
xor
aaa
mov
stc
jnp
sub
pop
sarb
add
sbb
xchg
inc
xchg
cmpl
mov
adc
out
push
xchg
mov
sbb
lods
mov
mov
add
mov
lds
jno
jae
and
incb
rorb
mov
cmp
xchg
add
and
lcall
pop
xchg
xor
inc
add
sbb
imul
push
mov
les
in
push
mov
add
or
add
jns
dec
pushf
movl
add
rcrl
aam
pop
mov
orb
test
lods
out
sub
lcall
dec
sub
hlt
push
sub
add
test
xor
ljmp
sbb
xchg
adc
add
mov
sub
xchg
or
push
add
andb
xor
sub
mov
stos
mov
dec
dec
push
rolb
push
shlb
xchg
popf
mov
push
xor
cltd
test
pusha
jne
mov
movsb
add
jnp
ret
xor
lret
stos
add
push
push
push
add
repnz
or
imul
inc
cld
out
call
sbb
xchg
pop
xor
jbe
cmpb
out
aaa
mov
fldl
xor
sbb
mov
adc
int3
push
sub
sbb
lock
fstl
pop
cmp
sarl
add
jne
mov
jns
stos
sbb
in
inc
mov
lea
sbb
mov
add
es
or
cmpsl
loopne
add
jge
xchg
dec
roll
stos
outsb
adc
int
leave
jecxz
pop
sub
and
pusha
inc
repz
add
lea
call
xlat
aas
cli
xchg
leave
add
lcall
sub
pop
dec
pop
sarb
ss
add
dec
push
add
hlt
andb
lahf
jo
dec
push
loopne
or
and
inc
dec
pusha
mov
jbe
je
add
fbstp
push
shll
add
xchg
xchg
push
pop
cmp
sub
ljmp
popf
inc
xor
outsb
sbb
add
add
add
sub
cld
adc
pop
and
mov
jge
in
test
add
inc
dec
ret
add
cmovg
pop
rcl
cld
jnp
ficompl
pop
cmp
adc
in
and
outsb
sbb
push
in
jo
xor
add
repnz
ds
jl
add
mov
push
lret
and
sbb
xchg
xlat
shlb
daa
lahf
fidivrs
sbbb
mov
mov
lcall
mov
ss
add
call
std
inc
pop
xor
add
idiv
pop
xor
cmp
lea
push
lcall
outsl
add
mov
lods
int
rcrb
fwait
loope
mov
out
jnp
mov
add
jl
add
add
jbe
cmp
jb
mov
jb
mov
mov
sbb
addl
cmp
or
sbb
negl
lock
pop
or
lds
mov
adc
mov
cmp
xor
lahf
mov
scas
dec
incl
into
mov
push
pusha
stc
push
cmp
lods
or
rorl
int3
add
or
ljmp
pop
pop
mov
loope
jl
in
dec
inc
add
icebp
aas
cmp
hlt
lods
or
lods
flds
loope
mov
or
testl
pop
fwait
enter
ret
pop
fcomi
sbb
add
shrl
icebp
add
repz
jmp
and
mov
rorb
loopne,pt
add
sahf
nop
imul
mov
adc
in
in
jle
cltd
loop
rcr
jmp
mov
lahf
addb
lcall
adc
gs
incb
outsl
adc
bsf
xor
sti
pop
in
sti
add
mov
ja
icebp
stos
fmull
sub
jne
mov
pop
js
add
outsl
push
test
mov
movsb
inc
rclb
movsl
in
add
je
mov
cmp
mov
jae
fs
and
inc
push
int
and
pop
incb
rcl
loopne
push
push
lods
add
inc
ror
or
dec
pop
pop
pop
or
jle
push
ljmp
mov
jbe
push
shlb
cmp
or
sbb
pushf
stos
jo
xchg
push
rcrb
mov
mov
gs
mov
cmp
testl
adc
xor
sub
pop
dec
pop
aam
les
stos
cmp
adc
add
mov
jae
cld
adc
clc
pop
add
imul
test
mov
add
xchg
jns
mov
mov
lret
into
aaa
jne
add
xor
cmpb
lret
cltd
push
push
jne
lahf
sub
sti
and
fdivrl
test
lods
popa
sub
dec
cld
add
cmpsl
and
inc
jl
add
inc
dec
xchg
mov
push
cmpb
add
test
and
nop
lds
and
push
xor
test
add
femms
fimuls
push
popa
dec
mov
add
mov
xchg
pop
fs
enter
sbb
repz
add
or
leave
cltd
push
cmovnp
jnp
and
enter
stc
pop
pop
xchg
sbb
cmc
add
cmc
shrb
xchg
and
add
mov
mov
add
and
xor
push
sahf
stos
fidivrl
cmp
rorl
rol
movl
int
lret
std
pop
cmp
xlat
pop
inc
dec
add
and
gs
add
std
in
in
mov
lock
loopw
imulb
cld
add
dec
push
cmp
pop
cmp
iret
or
cli
add
and
sahf
inc
jae
sbb
xor
dec
dec
dec
test
scas
sub
add
insl
cwtl
lds
cwtl
std
add
push
mov
add
jne
push
or
sti
add
ljmp
ficomps
xor
adc
add
add
sub
out
cs
enter
jo
dec
sub
icebp
repnz
hlt
jmp
out
addb
or
incb
stos
xchg
or
push
xchg
ret
add
or
push
mov
add
cmpsl
scas
and
cli
jne
clc
add
dec
call
scas
add
dec
call
cmpsb
add
inc
dec
pop
inc
mov
fwait
add
adcb
fists
pushf
jmp
sbb
fst
and
xor
addr16
loop
jl
mov
out
mov
stc
loope
divl
jno
add
ljmp
push
mov
pop
xchg
adc
fs
add
ficoml
inc
fildl
jp
loopne
scas
out
movsb
shrb
out
jb
iret
imul
cld
data16
loopne
int
insb
inc
sbb
cmp
inc
sbb
sbb
push
rolb
pop
shlb
jns
fcompl
out
dec
adc
sub
or
mov
hlt
mov
xor
sub
imul
mov
in
sbb
loopne
shlb
popa
repz
arpl
jecxz
mov
cmc
icebp
sbb
dec
fs
mov
add
xor
loope
add
mov
loopne
mov
out
fsubl
lock
test
sub
rolb
stos
in
rcrb
orb
in
xchg
sub
jg
dec
fadd
jmp
jbe
pop
xlat
clc
xchg
adc
mov
push
push
push
int
add
cwtl
push
cmp
dec
in
cmp
ficoml
test
in
cmp
add
mov
je
arpl
enter
incl
sub
pusha
push
sbb
rcrb
add
dec
dec
mov
shlb
pop
aas
push
pop
shlb
mov
xchg
jae
ljmp
test
das
push
dec
push
cmp
es
jge
daa
add
pop
notl
testb
movsl
mov
iret
mov
ret
add
mov
add
sbb
mov
sbb
mov
fsubr
lahf
mov
aad
lcall
sub
xorl
mov
mov
xchg
xor
aad
xor
enter
cmp
dec
and
fildl
dec
or
add
sbbb
ljmp
xor
sub
add
sub
add
mov
lock
shr
jno
fiadds
jmp
xor
js
add
test
push
add
out
adc
cli
pusha
add
sbb
lar
and
dec
mov
sub
shll
fcompl
add
mov
push
les
ret
ret
fs
pop
pop
pusha
sbb
lret
sbb
sbb
push
add
push
ja
pop
add
mov
pop
lock
add
and
cmp
es
add
aas
in
push
cmp
pop
pop
mov
hlt
mov
inc
add
push
addl
add
test
xchg
push
adc
xorl
pop
jo
sub
aad
mov
stos
pop
stos
sub
push
push
pop
dec
cld
add
nop
lods
cmp
jmp
adc
mov
add
push
cmp
dec
adc
jb
lock
xchg
pop
jg
pop
fcompl
adc
cmp
push
pushf
add
imul
push
movsl
gs
add
iret
cld
lahf
cmp
jp
add
je
or
stc
cli
cli
push
add
int
push
xchg
add
or
leave
test
inc
or
xchg
cmp
cli
cmp
adc
enter
mov
aam
test
mov
or
aaa
mov
mov
insb
lret
add
xor
or
data16
and
outsb
xchg
enter
pop
jbe
pop
add
test
jecxz
or
and
push
sub
stc
cmp
push
push
and
sub
adc
shll
add
test
ret
ds
add
out
sbb
shll
push
aad
mov
loopne
mov
add
xchg
jp
call
cmpb
fwait
popl
lods
add
imul
xorb
dec
or
inc
add
inc
pushf
cmc
hlt
push
add
faddp
sti
push
mov
mov
and
sub
adc
gs
add
faddl
jmp
jne
mov
out
dec
lock
adc
lret
scas
mov
data16
add
ljmp
arpl
add
push
daa
mov
mov
push
add
add
mov
pop
fcoms
lods
dec
push
mov
add
sub
cmpsb
push
add
push
call
sahf
push
data16
push
loopne
pop
add
xor
xchg
and
add
add
or
mov
lret
psubd
arpl
mov
loope
add
cmpsb
sar
push
nop
fsubl
pop
mov
lods
incb
es
push
push
rclb
pop
dec
pop
mov
mov
out
scas
ret
pop
int3
dec
sub
inc
rol
rcrb
add
incb
lock
push
add
popa
loopne
mov
loop
add
mov
test
std
sahf
push
add
sbb
sbbl
test
iret
in
sbb
gs
fwait
in
push
push
xor
out
sub
cmpsb
lcall
mov
popa
adc
mov
mov
add
xchg
addr16
or
int3
inc
sbb
or
ret
dec
adc
enter
add
mov
add
jne
push
and
shlb
outsl
in
add
jp
std
inc
cld
mov
mov
test
or
sub
icebp
add
jecxz
sbb
pushf
or
sbbb
xorb
pop
xchg
adc
xor
mov
add
cmpsb
xchg
js
insl
cmp
add
aaa
clc
lods
or
xor
add
dec
roll
and
loope
into
ds
adc
pop
xchg
lock
xlat
pop
inc
add
push
pushf
call
mov
bound
lret
add
mov
pop
sbb
cmp
sbb
add
or
xor
add
test
add
and
xlat
movsb
daa
xchg
daa
jle
or
adc
cmp
outsl
loop
pop
push
adc
mov
mov
add
push
lds
add
movl
and
push
addl
push
sub
aaa
movsl
fs
test
je
cs
das
cli
jo
add
repnz
xchg
imulb
or
cmp
or
dec
out
pop
cli
add
push
sub
in
add
aam
sbb
out
xchg
add
loop
nop
aas
xor
or
xor
in
cmp
cmp
adc
push
and
daa
out
xorb
pop
xchg
rcl
pop
enter
add
or
push
movl
stos
adc
mov
aad
enter
add
loop
ss
je
es
add
push
iret
test
pop
xor
fcompl
es
xchg
jle
test
outsb
add
lods
stc
stos
lret
xor
js
sbb
cs
cmp
mov
pop
and
cld
add
dec
lds
lea
out
jle
xor
shrl
jmp
adc
sti
add
mov
inc
jns
push
scas
jecxz
sub
and
in
xchg
sti
and
and
or
repnz
add
cmp
or
pop
cli
push
inc
insl
lea
xchg
add
dec
nop
shr
pop
xchg
pop
sbb
aam
sub
add
mov
cld
cmp
cmp
xchg
xchg
xor
mov
add
sub
inc
and
inc
add
fmuls
inc
lcall
mov
pop
popf
lahf
mov
movsl
mov
test
outsb
sub
jns
loopne
xor
dec
std
ja
int3
mov
pop
cmp
andb
es
inc
cli
or
lahf
and
mov
mov
mov
sarb
mov
lahf
pop
hlt
aaa
xor
mov
sbb
addb
add
sbb
pop
ret
and
dec
fisubrl
fcoml
add
aam
pop
add
xor
jecxz
dec
das
push
rolb
out
inc
lcall
mov
jb
scas
xchg
add
or
mov
int
filds
js
mov
mov
rolb
scas
adc
lret
ljmp
outsl
add
mov
adc
hlt
filds
enter
imull
les
dec
sub
pop
dec
mov
add
inc
aad
pandn
xlat
pushl
popf
jp
pop
xor
cmpsb
push
lods
insb
xchg
andb
pusha
and
incb
cwtl
stc
fnstcw
jg
rolb
mov
adc
fdivs
inc
pop
sub
xor
add
and
inc
push
data16
add
insb
scas
jb
add
pop
or
pop
cmp
add
sbb
cmp
sub
int
dec
into
jo
sbb
sbb
sarl
or
xchg
pop
push
add
add
sahf
imul
sbb
ljmp
outsb
pop
and
jae
xor
in
addr16
or
pop
popa
cmc
int3
mov
add
xchg
lea
mov
xchg
jnp
ret
popf
pop
scas
lret
adc
je
into
in
lods
ds
add
loope
out
ret
cmp
test
mov
xor
mov
dec
dec
ret
or
inc
lahf
js
push
inc
cmpsb
fdivrs
loop
lret
neg
dec
xchg
shl
mov
add
and
sub
out
in
mov
jp
cltd
or
mov
xor
push
fidivs
push
mov
add
and
or
test
add
adc
add
sub
shrb
mov
enter
out
bound
cmpb
jge
mov
push
sub
jo
sub
xchg
pusha
mov
inc
in
add
dec
movsl
fildl
adc
or
js
pop
xor
sub
mov
push
addr16
test
xor
mov
and
outsl
cmp
add
les
cltd
or
add
add
mov
pop
loopne
adc
scas
pop
out
add
repnz
dec
in
xchg
sub
mov
cmc
pop
sub
xorl
and
stos
cmp
movl
repnz
lods
sbb
dec
push
nop
xchg
mov
in
sarl
pop
xor
rcr
jle
push
shlb
push
scas
rorl
loop
sub
sub
stc
hlt
lods
stos
or
les
pop
inc
jbe
sub
add
push
or
dec
popf
add
repnz
inc
cmp
fcompl
nop
dec
in
xchg
add
dec
test
dec
or
add
adc
mov
sbb
xor
rolb
test
ret
add
insb
les
or
pop
fcompl
cmp
jle
or
and
incb
cmpb
jecxz
and
pop
cmp
mov
cmpsb
fwait
add
xchg
or
test
int
movsb
jo
mov
xor
push
das
xchg
sahf
xlat
add
fdivrs
test
int3
mov
add
cmp
pop
mov
sub
xor
lock
mov
fistl
std
and
fnstsw
call
int
movsb
shrb
outsl
add
insl
test
cmp
add
mov
jl,pt
mov
mov
stos
adc
mov
push
mov
loop
and
dec
dec
xor
sub
ficoml
aaa
jb
jno
jne
loopne
xor
ljmp
mov
add
mov
and
jg
pop
xchg
clc
xchg
add
push
inc
popa
pushf
lds
ljmp
test
ficoms
rorb
pop
imul
cmp
xor
pop
scas
in
adc
push
pop
pusha
roll
repz
push
sub
addb
pop
add
inc
xchg
push
scas
cwtl
add
sbbb
mov
stos
add
rcrb
xchg
mov
jnp
and
xchg
cli
in
out
addb
sbb
lahf
add
add
jge
xchg
pop
sub
pop
add
or
nop
xlat
lret
ss
pusha
test
pop
mov
js
and
sbb
daa
jp
jmp
add
mov
push
loopne
xchg
add
aaa
pop
sahf
push
pop
or
cmp
ja
lret
jge
nop
incb
mov
sbb
or
inc
add
add
mov
push
mov
gs
enter
scas
sbb
xorb
lds
pop
add
fidivrl
pop
fistps
cwtl
sti
add
mov
jae
pusha
loop
xor
add
lods
or
stos
outsb
jbe
sbbb
sbb
testl
xchg
pop
jg
xchg
ror
add
xchg
add
mov
nop
incl
test
enter
pop
add
inc
out
pop
xchg
test
mov
jno
dec
je
stc
cmp
stc
lcall
dec
mov
dec
test
fiaddl
rorl
inc
lcall
cvtps2pd
punpcklbw
fwait
jecxz
mov
movsl
insb
mov
mov
add
ret
adc
lods
loopne
stos
add
roll
out
dec
sbb
sbbb
data16
popf
pop
sbbb
xchg
iret
dec
sub
imull
lock
jns
inc
test
cmpsl
or
mov
push
sarl
add
jae
mov
mov
pop
xorl
add
movsl
pop
dec
andl
popa
add
cmp
xchg
add
xchg
mov
xor
jp
inc
jmp
fiadds
add
test
in
mov
cs
gs
mov
add
mov
iret
pusha
testb
cli
stc
push
std
mov
loopne
out
dec
add
nop
ss
mov
ret
pop
andl
call
xor
cmp
enter
or
mov
add
icebp
outsl
xor
imul
lock
jb
cmovne
jbe
cmp
add
sub
xchg
pop
adc
test
sar
push
cwtl
shl
int3
cli
sbb
aam
add
push
hlt
lods
pop
jle
sub
das
rcrb
xor
ss
add
mov
insb
enter
cmc
jae
out
adc
inc
cmpb
sbb
popa
add
mov
mov
or
test
loopne
xchg
push
in
mov
ja
mov
cmpb
stc
mov
jl
dec
mov
mov
ja
pop
mov
sub
jbe
pusha
pushf
pop
mov
lock
add
push
jecxz
add
xor
add
je
repnz
mov
dec
add
hlt
sbb
xor
int
cmp
pop
push
insl
and
aad
pop
adc
or
pop
add
cmpsl
push
fiaddl
mov
or
shl
xor
mulb
mov
add
inc
pop
clc
xor
lret
fnstsw
movl
sub
ds
test
push
dec
mov
mov
add
cmp
jnp
cmovo
lret
popa
dec
inc
inc
rol
in
dec
dec
add
xchg
rorl
push
push
daa
into
lds
add
inc
push
pop
pop
cmpsl
loope
add
gs
cmc
imul
outsb
outsl
mov
push
cld
inc
cmpb
hlt
leave
push
add
xchg
test
arpl
pop
push
mov
stos
jns
cmp
fdivr
adc
addl
cmp
ja
add
lret
inc
inc
add
vmovq
clc
in
rsm
inc
inc
adc
fwait
cmpsb
and
iret
loopne
xchg
pusha
pop
and
scas
xchg
pop
popa
pop
dec
cli
xor
add
in
hlt
jl
pop
hlt
stc
cld
jb
dec
gs
xchg
mov
ficoms
or
dec
ljmp
xchg
les
push
nop
xchg
test
add
cs
inc
lods
jae
cmp
jns
cmpsl
leave
mov
push
cmp
adc
mov
mov
lock
inc
int3
pop
ja
cmp
add
inc
jle
fcoms
sub
fists
rcll
xlat
adc
aad
add
out
das
jl
psrlq
or
in
int3
cltd
testl
int
jnp
and
xor
add
scas
fwait
pop
outsl
cmp
xchg
and
xchg
xchg
push
push
aaa
adc
adc
testl
cli
inc
lret
mov
repnz
mov
out
add
into
lahf
mov
push
mov
call
mov
inc
add
lcall
int3
fcmovnu
push
in
outsl
negb
hlt
insl
test
jecxz
sti
add
jnp
sarl
ljmp
idiv
jbe
add
inc
fs
sbb
adc
cmp
test
xchg
shl
cltd
add
out
xchg
cwtl
stos
and
add
lods
mov
xor
add
dec
es
and
scas
mull
mov
sub
hlt
incl
ja
and
pop
addl
dec
pop
cmc
adc
add
lahf
adc
add
mov
mov
in
sub
packsswb
das
fdivrl
jecxz
data16
ljmp
add
fiadds
mov
xchg
and
int
add
cltd
push
subl
sub
sbbl
mov
sub
jo
iret
jns
cmp
mov
xor
push
stos
push
add
ret
cmovg
jl
incb
lcall
pop
pusha
ret
xlat
push
and
pop
cmc
push
arpl
add
mov
int3
insb
or
cld
dec
icebp
mov
jb
add
or
xorb
mov
rcrb
pop
pop
nop
push
seta
add
xor
push
sub
xchg
inc
xor
mov
mov
hlt
xchg
jmp
add
ror
mov
imul
test
mov
ljmp
jo
mov
in
fistpll
icebp
mov
mov
imul
inc
add
dec
lret
clc
fsts
lods
jbe
in
fnsave
pop
ja
add
mov
push
loop
adc
mov
mov
mov
addr16
repnz
leave
lods
xor
stos
xor
jne
ljmp
jae
int3
cmp
lds
mov
adc
insl
inc
mov
add
jecxz
hlt
xor
insb
pop
std
sub
aas
pop
jmp
adc
jle
add
test
stc
dec
xchg
in
out
repnz
rorb
jno
add
jbe
push
pop
xor
out
jo
add
jle
dec
add
ficomps
fisubs
mov
mov
adc
mov
inc
inc
incb
xorb
mov
pop
loop
or
leave
shlb
xchg
ret
test
gs
pusha
mov
jbe
mov
insb
inc
mov
jnp
jge
push
int
or
clc
cmpb
test
xchg
das
call
lret
out
les
or
dec
loope
andb
and
add
mov
mov
stc
mov
adc
daa
dec
mov
shrb
inc
mov
dec
gs
fcoms
lret
into
inc
mov
mov
insl
sub
jge
sti
out
out
js
stc
out
jnp
cmp
or
add
add
sub
loop
into
incb
adc
jb
nop
cmpsl
push
sbb
and
jmp
add
sub
add
jnp
and
pop
sub
xlat
mov
add
in
inc
inc
int3
xor
insl
push
mov
ret
sbb
or
mov
cmp
add
dec
shll
jmp
sub
incl
loop
inc
out
jnp
pop
jne
add
sub
mov
mov
sti
orb
stos
bswap
xchg
or
cmp
pop
roll
mov
jo
pop
outsb
pop
add
ret
xor
jle
leave
mov
add
movd
jne
ror
lea
lahf
addl
pop
rorb
push
pop
push
pusha
stc
mov
or
cmc
icebp
mov
ljmp
rep
adc
addr16
pop
and
sti
shlb
push
xor
add
and
pop
pop
pop
mov
scas
outsb
sub
dec
jmp
adc
push
and
std
std
loopne
sub
aas
jge
inc
incb
cmp
nop
cs
cmp
imul
pusha
notb
jb
inc
sbb
mov
out
sti
and
add
out
xor
scas
in
pop
and
pop
fwait
ja
mov
inc
jbe
enter
push
mov
inc
ud2
into
xchg
popf
pusha
fnstenv
rorl
push
push
add
pop
ficoml
mov
icebp
lods
pop
cmpsl
test
insl
scas
mov
ds
push
pushl
inc
mov
dec
push
push
aad
sti
add
push
jne
rorl
aam
pop
pop
sub
std
mov
jmp
out
add
test
sti
addr16
fwait
idivb
mov
pusha
sarl
ja
das
add
pop
stc
mov
pop
loope
jle
xchg
xchg
call
cli
add
xchg
pop
cmp
shlb
cmp
mov
btr
add
arpl
cmp
cmp
or
mov
push
or
mov
sbb
clc
jo
push
adc
add
gs
mov
ds
pop
insb
insl
in
cmp
jb
cmp
divb
sar
aam
mov
arpl
sub
rcrb
sbb
movb
int
lahf
mov
mov
sbb
push
incl
jb
stc
xchg
lock
jns
sarb
nop
aad
out
push
addl
fs
pop
stos
inc
addl
pop
pop
mov
jo
cltd
add
fisttps
or
int3
loop
std
loopne
insl
movsb
dec
stc
hlt
xlat
push
jo
testl
ja
imul
pop
pop
or
popf
inc
sbb
add
rcrl
inc
add
sbb
and
out
add
aas
test
sub
sbb
pop
mulb
or
adcl
jmp
hlt
push
add
push
add
and
ror
add
dec
pop
pop
or
int
aaa
outsl
mov
pop
push
mov
jg
incb
pop
popa
add
dec
test
add
sub
in
loopne
push
cmp
add
ds
test
out
add
mov
push
popf
int3
mov
mov
mov
cmpsb
clc
jnp
fisubrs
mov
out
add
xor
or
fsincos
adc
cwtl
in
cltd
fdivrp
add
leave
add
nop
out
push
mov
inc
push
xchg
cli
cmp
xor
imul
in
cmp
jp
clc
mov
jne
mov
cmpsb
jo
jae
idiv
lcall
rorb
fsubs
adc
sub
add
inc
inc
inc
fsubrl
fsubrl
adc
outsb
mov
mov
je
mov
dec
enter
pop
adc
ret
pop
roll
movb
pop
flds
pop
fiadds
adc
jle
or
aam
pusha
or
addr16
test
idivl
test
add
fdivrp
cmc
decl
add
mov
mov
xchg
add
inc
mov
aas
ret
nop
xchg
aam
push
pop
pusha
mov
popf
clc
and
adc
add
in
xchg
sub
rolb
xchg
sarb
int3
popf
cmp
xor
cltd
cmp
mov
lret
std
adc
push
stos
ficomps
stos
cld
leave
push
push
fwait
push
mov
sahf
xbegin
pop
add
and
lea
aam
xchg
or
jo
ret
stc
leave
add
xor
cli
daa
mov
test
xchg
test
jmp
push
pop
mov
mov
pop
xor
ret
or
mov
out
dec
mov
mov
and
mov
sbb
or
test
mov
jecxz
dec
dec
jp
out
les
jno
aam
pop
adc
add
and
jp
loope
add
jl
xchg
adc
movsl
clc
insb
add
xor
sub
add
shll
orl
iret
test
add
xchg
rorl
stos
sti
and
pop
add
ret
clc
repz
xor
cmpb
xor
adc
leave
jecxz
xorb
dec
adc
mul
mov
adc
stos
aad
scas
sbb
or
pusha
sahf
iret
fdivr
jmp
add
cmp
cwtl
rcr
mov
add
dec
ds
mov
add
ret
jno
mov
and
add
imul
add
sbb
aaa
test
inc
scas
add
mov
cmpsl
imul
pushf
mov
inc
fbstp
lods
rol
mov
pop
cmp
push
mov
mov
ljmp
nop
daa
dec
outsl
add
loop
push
je
mov
jmp
cld
pusha
and
jl
add
dec
in
add
jae
sti
fs
mov
adc
ljmp
in
lods
push
imul
outsl
shr
iret
and
cmp
movsl
andb
dec
dec
pusha
mov
out
fidivs
out
imull
mov
dec
add
into
test
adc
lea
add
cld
loop
jmp
arpl
repz
shrb
lcall
filds
dec
mov
cmp
adc
loopne
rolb
lret
fadds
shlb
dec
scas
sbb
add
cmp
inc
inc
into
or
rcr
pop
mov
adc
add
nop
or
xlat
adc
sahf
movsl
daa
inc
imul
push
iret
jbe
cld
add
repz
cmp
enter
or
mov
out
dec
into
adc
push
lahf
inc
addr16
ret
add
les
rclb
enter
push
xchg
insb
subb
shrb
mov
enter
add
lea
push
lock
add
jecxz
add
lods
xor
mov
mov
push
fldl
xor
pop
and
add
pop
out
out
out
out
mov
push
in
inc
or
and
testb
lock
mov
in
sbb
pop
mov
or
scas
adc
add
jns
sbb
mov
cli
movsl
loop
sub
outsl
or
mov
int3
punpckhwd
insb
jmp
inc
push
rorb
add
arpl
sarl
pop
sbb
fsubp
xor
scas
pop
or
add
movsb
add
aam
mov
sub
jno
outsb
fstps
cmp
adc
ret
jle
imul
add
repnz
loopne
movb
sahf
add
aad
rcrl
sti
xor
and
cmp
push
sub
mov
aas
arpl
add
jno
add
outsl
pop
fdivs
pop
ret
inc
jle
loope
inc
pop
fs
push
jnp
add
rclb
and
inc
add
repnz
loope
gs
das
shl
jno
int3
jbe
add
xor
mov
dec
addl
sbb
fwait
adc
cmpsb
add
or
mov
xor
lret
cmpsl
add
shrl
cwtl
add
cs
push
mov
xor
jle
sbb
fbld
or
repz
pop
jmp
vcvtdq2ps
or
out
push
push
fldl
cmp
mov
mov
mov
in
sub
arpl
mov
daa
inc
jp
push
sub
decb
xchg
or
cmp
adc
add
loope
fstl
mov
clc
mov
add
mov
inc
sub
pop
and
sbb
cmp
mov
mov
push
cmp
pop
ja
mov
push
push
outsb
mov
lahf
add
ss
sahf
insl
jg
scas
ljmp
xchg
repz
jle
and
sbb
out
lcall
rcll
lea
cmp
or
add
cwtl
dec
sbb
and
mov
aaa
xor
lods
cmp
aas
mov
mov
jl
add
es
pop
adc
pop
add
aad
std
mov
aam
mov
shrl
cli
add
movsl
insb
arpl
adc
rcrb
dec
push
decb
add
jmp
loopne
data16
add
and
cmp
push
loopne
into
add
bound
mov
pop
push
adc
mov
sub
loope
addr16
sub
pop
mov
out
mov
adc
xchg
or
shr
or
push
dec
subb
pushf
pop
into
hlt
out
insb
xchg
int
outsb
adc
loop
fcomip
icebp
bnd
adc
mov
out
push
mov
mov
call
jp
cli
loope
xlat
dec
add
cvtpi2ps
lcall
cmp
push
cmc
adc
pop
sub
cmpsb
mov
add
push
mov
xor
repz
rcr
cmp
int
jns
fstpl
lock
das
push
jecxz
repz
jbe
and
aad
loope
push
out
jp
sub
add
popa
sar
repnz
imul
xchg
psadbw
xchg
add
lret
add
cltd
push
call
mov
add
adc
sub
push
add
xor
mov
test
incb
mov
leave
cmp
add
imul
jl
popf
rcr
or
dec
dec
push
lahf
call
cs
loopne
pop
add
filds
fimull
bound
xor
clc
and
add
jg
add
repnz
cli
inc
in
adc
cld
cmp
lret
jnp
xor
outsl
sbbl
repz
pop
pop
jns
add
xchg
pop
xor
xor
daa
mov
rolb
add
sti
mov
sarb
push
sub
push
enter
push
inc
dec
or
add
cmp
jns
xor
leave
ljmp
push
xchg
jmp
shlb
addr16
out
xchg
add
jns
cld
add
pop
jae
lock
orl
xor
fcomps
add
scas
lods
push
mov
aam
add
dec
xchg
std
adc
lea
imul
xchg
add
and
sbb
popa
push
add
std
mov
lods
add
pop
jae
loope
dec
loopne
inc
add
jecxz
pop
and
lahf
push
pop
mov
xor
repz
mov
out
xchg
fiaddl
cmp
jle
dec
xchg
add
jo
enter
xchg
mov
push
pop
sbbl
sub
adc
test
sbb
mov
incl
sbb
test
xchg
xor
lods
mov
add
mov
add
mov
jb
sub
xor
cs
sbb
pop
xchg
les
fldcw
add
fst
call
add
outsb
andb
subb
fs
lret
add
adc
push
stos
nop
add
mov
xchg
insb
cmc
add
aaa
sahf
mov
mov
inc
jbe
lahf
pop
sub
cld
pop
pop
jnp
dec
in
mov
daa
pop
lods
test
mov
fdivr
addb
add
mov
cmp
or
inc
pop
and
sub
add
popf
fidivs
enter
or
push
repnz
outsl
add
popa
xchg
clc
data16
out
cmp
inc
jecxz
add
mov
icebp
loope
dec
or
mov
push
imul
jb
cld
add
mov
add
shrl
mov
xor
movsb
popa
movsl
cmp
mov
pop
xor
cmp
enter
or
std
pop
dec
add
inc
psrlw
test
cmp
jbe
call
fdivrs
imul
pop
loopne
add
or
std
lock
cmp
sete
int
or
push
repnz
jb
adc
das
xor
or
test
add
dec
pusha
push
rcrl
mov
push
aas
jl
lret
into
rol
dec
jb
ror
leave
stc
cmp
jno
stc
insb
sar
repz
loope
adc
mov
jb
pop
out
cld
adc
addr16
movsb
xchg
je
mov
jecxz
popa
dec
in
cld
std
jbe
cmp
jnp
add
cmp
addb
push
cwtl
push
pushf
sbb
pop
push
sti
add
popa
aam
aaa
jle
add
daa
dec
add
dec
inc
adc
mov
bound
enter
ljmp
pop
and
int
hlt
inc
add
sub
jmp
cltd
rorl
test
cs
out
outsl
sbb
push
ljmp
sti
cmp
adc
xor
push
xchg
addl
addl
add
and
out
adc
adc
pop
out
mov
cmpb
add
xor
cmp
add
scas
mov
push
test
inc
pop
xor
sub
add
aad
pop
popa
and
fsubr
or
cmp
cld
add
ljmp
mov
sbb
enter
cli
dec
sbb
add
or
mov
mov
ljmp
sub
add
xchg
arpl
enter
jne
add
jmp
ret
mov
cmp
iret
aad
push
sbbl
pusha
mov
shll
push
pop
pop
aam
sarb
mov
pusha
jecxz
jge
insl
in
jae
xor
mov
cmpsb
enter
jne
popf
clc
stos
cmp
or
xor
add
ljmp
add
pushf
push
dec
dec
inc
sub
stos
ret
inc
and
mov
pop
mov
cmp
repz
lods
xor
mov
clc
out
aam
add
lock
dec
push
jbe
jp
xchg
fdivr
inc
add
ret
xchg
push
add
fidivrs
xor
push
cmp
dec
dec
lock
xchg
jge
insl
stc
pushf
sub
push
fwait
testl
push
leave
push
out
scas
or
inc
aas
test
xchg
pop
rolb
in
xchg
add
add
xchg
mov
jl
cmp
cli
push
shlb
stc
dec
inc
mov
lret
mov
fldl
stc
inc
inc
into
cs
pop
ret
xchg
cltd
test
xchg
push
push
push
fadds
or
call
aam
jne
cmp
and
out
out
ja
xlat
loop
jns
push
test
sub
js
std
aas
insb
jg
dec
iret
lock
or
leave
xchg
in
lea
in
pop
bound
ficomps
mov
call
loopne,pn
sti
sbb
dec
push
mov
outsl
dec
andl
jle
pop
lret
xor
push
cmp
or
mov
ds
or
adc
add
xchg
rol
push
and
and
push
mov
push
xchg
loope
icebp
pop
repz
int3
cmp
pop
fsubr
push
les
lret
scas
jle
jl
add
sub
lcall
adc
fwait
dec
add
push
daa
fcompl
sbb
stos
or
sub
mov
mov
xlat
sbb
push
ds
rcr
fdiv
add
and
les
pusha
shrl
addr16
push
out
scas
add
jo
cwtl
jns
mov
dec
mov
jns
es
push
add
out
pop
fdivrs
testb
pop
loope
xchg
adc
mov
movsl
push
fmulp
xchg
add
repnz
add
dec
mov
sub
lods
xor
pop
or
rorb
int
sbbb
inc
jp
add
fmulp
aam
sqrtps
push
ljmp
cmp
es
addl
jg
dec
mov
jno
test
daa
sbb
in
add
pop
lea
cltd
jg
push
xor
adc
out
jno
mov
fldt
cmp
mov
push
jne
sub
cwtl
push
push
push
repnz
jbe
xor
fisubl
push
pop
ds
subb
sahf
adc
call
loopne
pop
dec
sbb
add
js
mov
testb
repz
pop
add
or
nop
add
cwtl
jmp
mov
pop
sbb
andb
jne
or
sub
sbb
mov
add
jns
lret
dec
pop
add
mov
cmp
cld
dec
xor
xor
lahf
push
enter
sbb
inc
dec
jnp
cmp
and
aam
adc
std
fbld
fwait
dec
test
pop
jmp
and
mov
mov
adc
stc
push
sbbb
je
test
and
fistpl
add
arpl
xchg
jo
add
xchg
jg
aam
mov
ljmp
fcoml
test
mov
ja
lret
shl
push
add
mov
dec
inc
dec
aaa
add
out
pop
add
xchg
aam
jmp
cli
nop
std
jo
push
in
in
outsb
inc
insb
xor
out
frstor
je
cmc
mov
jne
scas
add
sub
frstor
js
mov
cld
pop
sub
icebp
add
test
dec
add
push
imull
daa
or
mov
loopne
sbbb
add
inc
hlt
lret
je
cmp
ret
lds
xchg
lock
inc
daa
arpl
jg
adc
in
mov
fimull
fdivl
test
incl
aas
mov
jge
add
repz
stos
xor
jle
je
add
or
cmp
lret
mov
push
sbb
add
cli
vsubpd
hlt
inc
add
stos
gs
ret
je
mov
test
cmp
add
mov
add
push
and
lret
adc
enter
into
sbb
cmpl
ror
dec
fdivr
jae
adc
add
sbb
pop
jmp
incb
adc
lods
repz
jg,pt
sub
icebp
in
bnd
xchg
pmullw
inc
lret
addb
hlt
mov
sbb
adc
sub
pop
sub
div
pop
imul
roll
or
stc
addb
decl
add
dec
xchg
rorb
jns
lock
js
add
pop
add
add
int
adc
andps
mov
jmp
mov
movsl
cli
fdivrl
xchg
jno
dec
inc
push
clc
jno
dec
and
movsl
cmp
lret
add
aad
adc
add
adc
inc
or
xchg
dec
loopne
js
xchg
test
xor
and
dec
pushl
out
lods
mov
addr16
rorb
mov
sbb
mov
aad
jne
pop
loopne
repz
clc
jae
and
loopne
pop
dec
ss
jmp
xor
mov
and
cmp
jg
test
hlt
xor
bound
dec
add
mov
add
ficomps
sbbb
adc
jo
daa
jno
mov
and
mov
movsb
cmp
mov
xorb
in
std
divl
sahf
aad
mov
lahf
lcall
inc
lock
add
xchg
repz
and
data16
xchg
les
int
popa
mov
add
jns
sar
jle
jmp
cmp
in
orb
pop
leave
cwtl
in
add
add
inc
inc
xchg
insl
ds
cmp
test
or
add
lods
addr16
add
sbb
std
add
sbb
xchg
push
rclb
mov
mov
data16
pop
add
pop
orb
dec
bound
inc
jl
iret
add
repz
push
pop
jge
ja
jmp
adc
mov
iret
mov
test
aam
pop
xchg
add
xchg
sbb
popf
mov
cltd
push
pop
fnstcw
stos
sub
xchg
sub
cli
mov
cmpl
ds
cmpsl
cmp
jmp
push
fadds
rorb
out
out
inc
xchg
xlat
inc
sub
loop
xor
pop
mov
pop
add
out
push
movsb
nop
loope
sub
add
popa
movsl
rolb
and
xor
xlat
loopne
sub
mov
add
add
or
add
fwait
out
lds
fidivs
lahf
dec
push
xor
es
movsb
push
sub
or
clc
ss
ja
cwtl
jl
pop
pusha
insl
pop
inc
cmpb
inc
add
ja
popa
mov
xchg
lods
mov
mov
call
call
stc
aaa
add
push
mov
je
add
test
dec
std
clc
or
mov
enter
js
fidivs
mov
adc
add
mov
add
loop
add
jmp
mov
loop
shrb
inc
dec
jle
mov
xlat
rcrb
add
sub
pop
or
fsubr
cmp
add
and
push
adc
push
movsb
nop
sti
call
adc
jmp
test
js
aas
add
fsubrp
jne
notb
dec
push
stc
mov
dec
sub
add
aad
pop
pusha
dec
icebp
and
sub
cmp
insl
push
add
jno
push
xor
pop
add
jnp
aas
ret
orb
into
or
arpl
outsl
pusha
or
sti
pop
lcall
rcll
js
jns
xchg
jmp
out
rcrl
dec
movsb
out
dec
pusha
jo
dec
ja
fildll
lcall
and
idiv
inc
inc
test
lock
mov
lahf
dec
nop
xchg
sar
sbb
fwait
add
roll
fists
lods
lcall
nop
std
addb
inc
std
cmp
sahf
xchg
jge
cli
rolb
lret
pop
and
or
stos
add
fstps
pop
xchg
repnz
add
add
stc
cli
lods
sub
adc
inc
jmp
mov
push
incl
std
mov
js
aas
add
xor
fsub
je
loopne
add
and
out
addl
cmp
aaa
lahf
add
setb
in
fimull
imul
mov
outsl
and
fldl
xor
addr16
xor
sub
jno
jg
shlb
pop
mov
enter
repnz
jb
pop
scas
sbbl
mov
or
push
ja
add
outsb
fcompl
push
fiaddl
mov
inc
pop
sub
mov
mov
mov
mov
push
sbb
mov
test
inc
add
pushf
adc
ss
test
mov
scas
sub
call
lea
add
insb
ds
xchg
test
mov
or
ljmp
add
out
aam
loopne
sahf
sub
stc
jmp
aaa
fldcw
outsl
add
sbb
and
add
js
icebp
jae
idivl
sbb
cmp
and
or
orb
filds
punpcklwd
popf
push
sub
add
stos
lock
add
or
sub
mov
mov
cwtl
fwait
add
imul
adc
mov
jle
or
jg
dec
popa
mov
outsb
add
jo
adc
mov
jmp
add
scas
aad
cmp
inc
push
add
outsl
incl
cmp
mov
inc
ss
push
stos
inc
lret
xchg
addl
mov
fwait
cld
jmp
xchg
cltd
adc
scas
adc
incl
out
clc
mov
test
daa
sbb
cmpsl
cmp
cmp
nop
lods
dec
mul
fsubs
dec
out
dec
or
lods
add
inc
and
ret
cwtl
mov
push
pop
xchg
adc
mov
nop
adc
adcl
adc
sti
jne
std
jbe
jle
push
add
shrb
mov
add
popl
mov
add
lret
test
sub
add
aas
xlat
pop
cld
push
xchg
jmp
lcall
inc
add
or
jl
js
cmp
mov
pop
pop
add
ret
movnti
inc
sbb
andb
cmpsl
dec
lds
inc
jp
fcmovbe
add
pop
mov
adc
adc
sbb
loop
push
mov
mov
cltd
jne
push
fstps
ret
pop
imul
inc
mov
in
push
ljmp
cwtl
push
popa
fsubrs
movsb
push
adc
lods
mov
mov
jmp
in
add
push
push
push
ja
mov
lock
push
repnz
fildl
dec
lcall
add
lds
sti
sbb
ja
sbb
push
repz
cltd
pop
imul
mov
ret
in
loope
xor
lods
adc
call
in
add
or
pop
aam
sbb
sub
mov
rcrb
add
rolb
pop
sub
out
dec
ficoml
jge
imul
cmpsl
add
fs
fsubr
ds
aaa
cmp
testb
inc
push
lds
add
dec
nop
add
pop
rclb
xlat
jo
test
addb
add
cmp
aam
jb
add
mov
sub
and
clc
add
xchg
mov
or
lret
mov
pop
sbb
cmpsl
pop
repnz
mov
in
sahf
lahf
pusha
outsb
xchg
cmp
ljmp
fistps
add
in
scas
cmp
fcoms
icebp
mov
cmovle
popf
inc
xchg
lds
add
ljmp
cmpl
and
add
imull
jmp
mov
mov
fdivs
out
loop
xor
mov
popl
sub
or
or
sahf
add
cwtl
cmp
and
in
ljmp
hlt
aas
xor
push
add
push
cmpsb
jbe
mov
sub
mov
ss
sub
iret
or
gs
cmpsl
xchg
push
sbb
xchg
pop
add
push
add
fcomps
sub
sub
out
es
jecxz
jo
push
jno
mov
xor
mov
test
sub
cmp
or
mov
push
and
adc
add
adc
push
sbb
jp
mov
sahf
mov
xchg
cmpsb
shrb
mov
mov
inc
add
mov
fists
mov
push
inc
mov
add
popf
inc
mov
fstpl
push
cld
test
xchg
outsl
add
mov
iret
or
orl
scas
push
and
add
sarl
push
mov
xchg
fidivrl
adc
pop
cmp
xchg
dec
loopne
jne
test
stos
test
es
xor
pop
adc
dec
add
imul
mov
sbb
or
jnp
add
jae
popf
mov
sarb
cmp
loopne
sahf
adc
adc
imul
test
jb
lret
add
sub
cs
add
movsl
add
push
inc
fstps
dec
stos
and
sbb
xor
sub
cmpsb
hlt
add
jmp
pop
mov
push
orl
xor
in
aaa
ret
in
dec
mov
mov
call
hlt
mov
pop
stos
cld
lods
push
push
cmpsl
clc
add
les
xchg
enter
out
dec
jns
adc
fiadds
sar
ja
and
push
mov
add
andb
adcb
push
pop
pushf
ds
cmc
and
outsb
aas
dec
push
pop
or
ret
mov
or
sub
sub
pop
cmpsb
outsb
insb
and
cmc
insl
mov
cld
cmp
adc
mov
xchg
inc
aad
call
push
cmp
andb
sbb
lcall
xchg
ljmp
sti
add
insb
loop
dec
jle
in
lret
jge
mov
ret
pop
jmp
inc
or
cmpb
add
fsubrs
add
test
icebp
sub
mov
jne
pop
imul
inc
stc
sub
cmp
mov
add
insl
stos
popa
push
mov
or
mov
jb
add
iret
nop
dec
mov
loop
push
inc
mov
mov
daa
push
sbbb
and
fbld
loop
or
sarl
jmp
movsb
fwait
jecxz
ret
push
scas
je
cmp
data16
mov
lock
add
sub
pushf
inc
xor
xchg
mov
jo
dec
sbb
jg
fmull
mov
adc
mov
nop
outsl
sbb
or
addl
aas
adc
lds
fisubs
fs
jge
lret
lock
add
inc
dec
push
test
decl
jne
mov
dec
cld
lret
outsb
or
jmp
or
inc
fiaddl
lock
scas
pushf
sbb
shl
out
mov
pusha
sub
icebp
add
xorl
sarb
cmp
jns
xor
in
popf
sahf
add
sub
add
loope
dec
les
inc
fmul
rcl
jmp
testb
add
push
lcall
out
cmp
enter
xchg
add
fldenv
jge
shl
ret
sub
add
ja
jne
and
cs
testl
enter
pusha
icebp
xor
adcl
push
cmp
sbb
add
scas
jmp
loope
or
hlt
inc
xor
dec
mov
xchg
sbb
sub
add
test
or
andl
scas
pusha
add
pop
push
fsubrl
mov
fldl
gs
loopne
cmp
jne
imul
cli
lcall
lds
rorl
jmp
mov
rcl
add
sbb
mov
push
fildl
mov
and
sub
sub
add
pop
cmp
add
loope
xchg
mov
orb
xadd
jecxz
add
inc
lods
cmc
ljmp
nop
mov
pop
shrb
sbb
sbb
ret
bnd
cmp
fsubs
cld
ret
add
jae
fsubp
push
rol
or
ja
rorl
lret
out
test
popa
test
and
imul
enter
icebp
movsb
movl
add
repz
clc
fdivrl
mov
xor
inc
inc
movb
les
push
rcll
fcoml
jne
jmp
cmpsb
mov
out
scas
mov
push
add
in
push
pop
xor
jg
sbb
dec
sbb
push
lock
dec
stos
hlt
dec
or
inc
mov
add
ljmp
fdivrl
and
dec
jns
pop
jns
add
rcrl
rcr
pop
pop
stos
adcb
addb
pusha
push
cmp
sub
std
xor
add
loope
mov
push
es
and
in
inc
mov
clc
or
pusha
cmc
push
adc
pop
xor
ljmp
popf
or
cli
and
daa
mov
mov
mov
or
testb
add
xchg
rclb
push
lahf
loope
adc
sbbb
clc
add
stos
jno
lret
test
adc
push
sarl
jge
sbb
repz
or
mov
mov
mov
or
xchg
push
popf
push
mov
xchg
cmpsb
loop
push
xor
ds
sbb
mov
sub
cmp
outsb
jg
cmpsb
mov
push
push
jp
add
pop
cmc
xchg
inc
mov
add
fcom
aam
ja
jae
jno
leave
push
sbb
les
notb
maskmovq
idivl
mov
repnz
or
adcb
std
inc
call
imul
mov
in
sub
cmp
cwtl
add
dec
cmp
dec
xchg
lock
push
out
mov
rcll
lds
push
movsb
int
rcrb
lret
enter
repnz
xchg
add
xlat
dec
add
push
push
testb
pop
pop
in
cmc
lahf
pop
test
ds
ja
dec
mov
std
pushf
sbb
push
or
movsl
fsubs
push
add
pop
jo
outsb
add
js
into
popa
pop
mov
adc
add
jmp
mov
iret
push
outsb
adc
sbb
dec
pop
pop
scas
dec
add
nop
pop
fstl
add
adc
call
ss
sub
enter
rorl
es
add
mov
add
inc
add
inc
lret
xchg
and
lea
popf
xor
outsb
insl
sbb
add
mov
and
or
std
and
mov
loope
stc
in
ja
add
dec
jmp
cmp
jg
ss
sahf
pushf
cltd
lcall
lds
push
shrb
ret
pop
test
mov
and
stc
mov
je
push
mov
mov
jne
add
out
stc
jmp
loopne
push
nop
daa
add
addb
and
rcl
adc
pop
pop
filds
sbb
mov
enter
push
add
hlt
inc
sbb
add
mov
push
sahf
add
inc
enter
int
add
jo
cmp
mov
sub
js
das
push
filds
jb
dec
lods
push
loop
jge
add
fs
xor
add
xor
sub
scas
or
mov
xadd
push
repnz
jge
add
adc
mov
pop
jle
mov
mov
scas
add
mov
fsubrs
xor
mov
movsl
xchg
sti
nop
cld
loopne
mov
les
add
inc
mov
xchg
adc
in
xor
add
pop
xor
mov
lods
into
lret
mov
inc
jnp
add
fdivs
mulb
mov
call
add
ja
mov
pop
pop
pop
pop
hlt
fdivrl
xor
and
xchg
xchg
add
xchg
out
enter
add
jecxz
loop
outsb
dec
cmpsb
shl
roll
mov
push
push
and
adc
iret
cs
inc
stc
pop
jnp
add
scas
nop
push
mov
add
loope
jo
and
mov
cmp
es
cli
in
jmp
and
or
dec
sub
add
divb
add
cltd
mov
pop
xchg
incl
mov
add
sbb
mov
push
adc
sbb
ret
scas
or
mov
mov
cld
xchg
sahf
cmp
mov
popf
cmp
mov
lcall
add
inc
adc
and
push
push
xor
and
jo
or
sar
cmc
popa
lahf
enter
and
cmp
and
jg
filds
dec
add
enter
loopne
add
in
push
sbb
scas
adc
popf
jp
add
lock
xor
loopne
add
mov
cmp
dec
repnz
aas
in
add
popa
outsb
mov
mov
mov
scas
inc
add
lock
inc
jns
pop
pop
adc
dec
ljmp
push
pop
dec
jb
add
cmp
repz
mov
fwait
std
mov
movb
mov
imul
add
jmp
add
xchg
test
sub
mov
sub
mov
repz
lcall
sbb
add
pextrw
or
adc
jae
das
cli
add
in
aad
push
cmp
sbb
push
pop
sub
xchg
cs
add
fisubs
clc
cld
add
addr16
incb
aam
idivb
push
xor
sbb
testl
and
inc
xor
andl
adc
sbb
push
sbb
or
pop
add
imul
add
pop
fsubl
pinsrw
mov
dec
add
dec
sbb
das
outsl
pop
mov
andb
mov
mov
cmp
insl
add
inc
enter
das
movhps
loop
icebp
out
enter
cmp
pusha
xchg
sub
dec
bound
lds
pusha
mov
xchg
add
fsub
fs
stc
add
test
in
add
loop
and
inc
stos
and
stc
les
add
xchg
scas
pop
mov
repnz
dec
rorb
lock
fisubs
test
aas
add
xlat
addb
stos
loopne
mov
xchg
rorb
cmp
sbb
outsl
ror
pusha
mov
ror
cmc
push
xor
imul
rorb
jb
mov
xorl
and
jmp
add
sarl
push
mov
inc
cmp
or
test
in
fcoml
lock
cmpsl
out
jae
or
sbb
mov
hlt
xchg
enter
pop
leave
add
leave
popf
orb
or
push
add
inc
jp
pushf
mov
push
aad
push
add
push
add
mov
test
sbb
lock
add
cmp
lock
cmp
orl
lods
andb
test
std
inc
and
cli
or
xchg
inc
mov
push
add
lods
das
jmp
addb
hlt
mov
inc
push
add
cli
cmp
adc
mov
int
xor
inc
aad
std
and
add
push
add
int
or
in
mov
data16
enter
jp
aad
jecxz
pop
call
je
mov
jmp
orb
jle
lcall
rcr
pop
adc
repz
in
ds
pop
pusha
pop
leave
adc
pusha
js
sub
sbb
and
push
or
push
jg
or
pop
jbe
inc
test
xchg
sub
test
aaa
dec
pop
stos
cmpb
add
lcall
and
clc
jg
xor
lods
add
dec
jp
sbb
xchg
cmp
push
add
mov
mov
jo
push
push
push
repz
insb
pop
sbb
hlt
mov
cmpsl
inc
pushf
mov
mov
enter
or
inc
mov
in
mov
ret
call
jmp
pop
cmp
push
ss
jp
push
daa
outsb
mov
sahf
loop
push
jmp
and
rorb
sub
ljmp
loopne
mov
in
push
outsb
mov
addr16
mov
add
jp
and
push
daa
pop
es
jl
or
mov
mov
inc
xor
sub
xlat
mov
rorb
add
pop
adc
add
push
push
inc
cli
add
mov
pop
out
adc
add
out
movsl
add
imul
cmp
subl
adcl
shlb
dec
adcl
push
lret
lahf
into
adc
xchg
in
push
pusha
jecxz
push
xlat
stos
daa
pop
cwtl
jae
mov
xor
les
mov
dec
mov
xchg
push
rclb
insl
mov
outsb
xchg
and
add
and
cs
adc
cmp
mov
and
bound
mov
daa
sbb
ffreep
or
cmp
pop
add
mov
test
cli
loop
adc
enter
dec
add
add
or
dec
dec
fcomip
stos
data16
scas
arpl
ja
jno
out
and
add
iret
adc
jb
and
inc
dec
mov
add
dec
pop
mov
rolb
push
inc
stos
jo
push
pop
add
jle
sbb
dec
lahf
add
gs
inc
call
xchg
dec
loop
jno
lea
cld
xor
addr16
mov
cmpb
roll
jp
jbe
inc
inc
and
hlt
daa
adc
aam
jb
ret
popa
pusha
sub
arpl
jecxz
movsb
mov
xor
push
push
dec
push
inc
aad
incl
xor
dec
jmp
add
inc
inc
aas
cwtl
add
lods
xchg
movl
xor
push
cs
icebp
adcb
and
pmulhuw
inc
cmp
mov
adc
ret
das
mov
subb
cmp
std
mov
pop
loope
div
repz
fists
lahf
mov
add
add
rol
jge
mov
pusha
aas
fdivrl
xabort
jbe
mov
pushf
add
mov
mov
xchg
cmc
xchg
enter
or
mov
pushf
popf
lcall
out
xor
xchg
mov
clc
out
sub
addb
inc
insl
cmp
ja
call
addr16
call
jg
add
pop
outsl
jp
xchg
fs
pop
inc
push
aad
push
dec
cmp
add
je
pop
push
mov
push
ljmp
cmp
or
inc
add
daa
and
pop
lahf
aas
add
ds
lock
in
add
pop
sbb
xor
sub
cmpsl
movlps
enter
loope
xchg
mov
mov
adc
les
xchg
je
cli
icebp
lock
xor
push
adc
dec
orl
test
mov
push
shlb
cs
cld
add
stc
orl
push
and
cmpsb
cld
add
movb
mov
stos
fcomp
xchg
movsl
cmpsb
in
or
mov
pop
mov
out
add
nop
cltd
add
lea
faddl
adc
push
nop
mov
jb
jo
les
imul
sbb
mov
paddd
mull
pop
cld
add
es
push
push
push
add
push
dec
dec
cmp
xchg
mov
fwait
cld
cmp
sahf
js
rol
sub
cmp
fs
mov
xor
lcall
movb
mov
hlt
or
sbb
pop
push
movsb
aam
shlb
js
add
add
mov
out
cmp
idivb
adc
leave
loope
adc
aaa
pop
push
ljmp
out
hlt
mov
add
int
adc
aaa
pop
daa
shll
test
mov
ss
pop
sti
add
add
add
inc
mov
adc
adc
rcrl
outsl
jg
mov
les
imul
cmpb
mov
sarl
dec
lret
incb
sub
adc
arpl
incb
cmc
or
xchg
dec
aam
mov
in
scas
sub
hlt
ja
pop
add
jge
xchg
mov
cs
call
test
in
or
mov
in
std
pop
jle
push
push
or
cld
cmpsl
push
jo
rclb
pop
std
cld
popl
dec
testb
repnz
mov
adcb
std
cmp
daa
call
pop
add
dec
enter
fstpt
lods
insl
sub
add
shrb
mov
fiadds
ret
incl
add
mov
aad
pop
dec
inc
mov
std
scas
xorl
sbb
inc
cmpsl
out
fsubrp
daa
mov
pusha
jge
inc
dec
add
es
xchg
call
lods
incl
inc
pop
sarb
sbb
or
add
mov
pop
pop
pop
mov
loopne
inc
enter
or
sub
xor
sub
or
pop
jl
add
into
sarb
ljmp
lds
shrl
push
push
enter
or
test
mov
cmp
mov
add
test
clc
add
inc
inc
xor
mov
fldcw
pop
inc
outsl
hlt
cmp
add
sub
cmp
mov
shlb
clc
icebp
divb
and
sti
mov
ror
movsb
add
iret
cmpsb
test
ret
stos
lods
add
mov
jnp
mov
mov
les
xor
mov
movsb
into
rolb
mov
mov
fcoml
mov
mov
out
add
out
lock
repnz
inc
pushf
idiv
add
xchg
incb
fsubrs
pop
out
insl
or
hlt
popa
or
adc
js
insb
mov
inc
and
adc
and
cltd
dec
and
sub
inc
sub
sbb
in
cmp
clc
push
cmp
loop
sub
inc
incl
call
xor
jno
sbb
xor
les
popa
adc
imul
or
mov
cmp
jge
enter
loop,pn
mov
mov
adc
ljmp
adc
xchg
and
negb
mov
mov
loop
cmp
test
and
shlb
mov
and
fidivrs
inc
cmp
int
and
jno
sbb
mov
js
mov
inc
sbb
loopne
dec
xorl
inc
xchg
inc
jbe
in
adc
icebp
les
sbb
stc
inc
and
add
out
gs
cld
imul
or
and
adc
sub
add
enter
inc
and
roll
adc
dec
sub
or
jecxz,pn
push
xor
aas
push
xor
lret
daa
pop
cmp
data16
add
sub
stos
add
xor
scas
add
cmp
inc
aas
add
add
pop
pop
add
or
xor
cmp
adc
cmp
je
movntps
js
loopne
jl
sti
jecxz
addb
jmp
mov
dec
repz
xchg
jg
lcall
sahf
xchg
mov
movsb
cmpsb
popf
int3
test
add
enter
incl
and
leave
add
mov
pop
pop
into
xor
xchg
lods
add
lret
int3
into
inc
sbb
rolb
iret
mov
fnstsw
mov
loopne
call
pop
mov
ljmp
xchg
lock
add
testb
add
add
inc
mov
adc
adc
sbb
fwait
sub
and
sub
add
das
pop
sub
or
xorb
add
aas
mov
orb
ret
roll
pop
cwtl
std
jg
or
cmp
pop
xlat
mov
fistpl
fildll
jecxz
and
fs
pop
inc
out
subb
push
adcb
rorl
xor
scas
inc
mov
lret
xor
stos
mov
mov
jmp
mov
cmpsl
mov
add
push
mov
pop
lret
pop
into
fbld
fs
sub
daa
and
lds
loop
pop
in
xor
enter
pop
repnz
pop
mul
dec
loop
add
mov
mov
ret
pop
sbb
iret
or
sbb
fisttps
add
les
add
add
pop
or
rcrl
inc
jmp
filds
jno
add
inc
push
dec
or
add
aas
jae
add
pop
push
pop
dec
sbb
or
add
iret
inc
arpl
and
sub
and
ds
inc
cs
adc
je
cld
xorb
je
je
je
pop
push
insb
dec
addb
jb
mov
add
pop
xchg
jnp
cmp
add
movsl
push
mov
lahf
nop
push
pusha
xchg
test
xchg
add
mov
insb
lahf
add
and
or
mov
xor
inc
mov
cltd
mov
add
add
add
aam
mov
lret
add
or
dec
lock
mov
mov
and
out
cwtl
mov
pop
loop
stc
push
mov
and
pop
popa
pop
inc
aas
inc
mov
dec
cs
jb
xchg
pop
mov
push
lods
enter
or
les
jle
mov
sbb
nop
scas
pop
mov
into
dec
mov
les
mov
fidivl
daa
repnz
xlat
adc
loope
add
out
pop
jmp
and
stc
and
std
out
testb
add
or
lret
push
outsb
push
jae
push
adc
push
pop
push
jp
jp
or
outsw
cld
and
cmp
repz
jecxz
jo
jb
je
jbe
add
jp
jl
jle
add
lea
mov
add
cltd
xchg
iret
xchg
cmp
cwtl
xchg
add
and
pop
cmpsb
pop
test
stos
movsb
lods
add
add
mov
mov
pusha
sti
int
and
int3
lds
pop
shl
adc
rcr
jmp
insl
incb
adc
add
in
gs
repnz
clc
icebp
cli
add
cld
cmc
push
add
add
outsb
add
add
add
or
sbb
adc
sbb
sbb
sbb
and
and
add
daa
shrb
and
shrb
xor
xor
ds
add
cmp
cmp
cmp
mov
dec
inc
scas
dec
inc
mov
dec
push
testl
mov
add
pop
push
pop
pusha
cmc
arpl
mov
imul
notl
jae
adc
add
jnp
add
sub
xchg
pop
mov
notl
and
fwait
inc
mov
mov
push
pop
adc
notl
mov
adc
popf
add
ret
movsl
add
sub
iret
inc
inc
not
test
xlat
or
in
mov
mul
xchg
add
sbb
in
pop
or
jns
or
mov
pop
sti
aad
ljmp
add
loopne
pop
or
adcb
mov
sbb
inc
pop
sbb
andb
mov
sub
inc
pop
sub
add
mov
divl
add
cld
inc
pop
cmp
addb
testl
and
push
divl
sbb
inc
pop
pop
push
mull
ficompl
jo
xor
cmp
js
inc
pop
jl
addb
orb
nop
out
mov
cwtl
inc
nop
pop
and
movsb
fadds
push
lods
mov
or
mov
mov
xchg
ret
lret
add
into
enter
int3
out
in
loop
rcr
aam
push
fcmovnbe
fsubrl
jecxz
in
add
out
call
mov
in
add
jb
add
add
push
or
or
or
adc
cmp
sbb
xchg
mov
mov
and
dec
and
xchg
shrl
nop
xor
xor
cmp
cmp
gs
dec
inc
sbb
inc
cmp
dec
stc
add
pop
push
imul
stc
cmp
pop
stc
aas
and
add
gs
addr16
lahf
ret
jno
stc
jge
icebp
ja
in
jp
in
jg
mov
inc
xchg
in
mov
in
popl
cltd
xchg
mov
popf
xchg
xor
out
in
lahf
add
movsl
inc
cmpsl
out
in
stos
out
in
scas
in
cli
mov
mov
into
sub
mov
push
int
adc
decb
lret
stc
iret
in
push
fst
popa
xlat
decb
inc
test
loop
in
in
out
dec
sbb
out
stc
icebp
push
icebp
inc
cmc
jns
mov
mov
stos
add
dec
add
rorb
add
sbb
cmp
adc
inc
sbb
and
and
es
les
sub
cmp
loopne
cmp
test
call
xor
pusha
inc
dec
inc
sbb
inc
dec
inc
cwtl
incb
xchg
dec
inc
dec
jo
push
pop
push
insb
push
pop
push
call
add
pop
and
bound
gs
cbtw
incb
xchg
insl
fs
push
jbe
xor
push
js
jp
jl
aam
orb
adc
jge
mov
mov
xchg
sbb
fistl
lcall
cmpsb
sbb
sti
movsb
cli
sbbl
mov
sbb
divl
mov
stos
rol
ret
cli
xor
int3
iret
scas
cmp
push
dec
xchg
xchg
sbb
cld
inc
inc
test
hlt
repnz
cli
add
clc
cld
cli
mov
add
adc
ud2
push
or
fldl
pop
sbb
sbb
and
and
jae
jmp
sub
js
jae
ljmp
xor
cmp
cmp
inc
inc
push
pop
jge
cmovns
push
dec
jge
push
pop
push
mov
pop
pop
loope
iret
lods
xchg
and
gs
loop
add
imul
jne
iret
jo
add
mov
add
xchg
cltd
sahf
lahf
pushf
add
xchg
xchg
outsb
loope
pusha
repnz
jo
pop
lods
push
xor
push
dec
jb
push
xor
int3
xor
mov
ret
ret
add
fcompp
fcomp
cmp
xlat
sub
add
out
out
jmp
out
in
loop
loopne
loope
cld
jge
scas
cmp
hlt
cmc
repnz
or
pushf
or
or
or
jne
ret
add
push
pop
sbb
mov
push
pop
adc
adc
adc
adc
das
sub
sub
sub
sub
addb
and
mov
or
cmp
push
xor
or
dec
fbld
sbb
inc
inc
inc
add
pop
pop
pop
pop
pop
cmp
popf
cli
adc
mov
add
addr16
push
jnp
jg
loop
mov
pop
adc
outsl
add
imul
inc
lahf
mov
pop
test
xorl
mov
mov
mov
in
or
cmc
add
scas
pop
lods
lods
scas
push
or
fcmovu
fcomp
fimuls
fst
xor
inc
icebp
add
lret
lret
enter
mov
sub
clc
mov
mov
ljmp
xor
les
mov
outsl
dec
adc
mov
adc
icebp
and
xor
sub
das
sub
sub
or
adc
pop
icebp
pop
inc
pop
push
inc
push
push
inc
push
sub
and
or
mov
or
mov
jnp
call
mov
jno
div
jno
out
add
add
cli
or
icebp
and
and
xchg
repz
divl
and
jb
add
mov
mov
mov
add
push
mov
or
or
jno
and
add
mov
dec
rcll
dec
or
and
int
and
aas
repz
fldcw
jmp
jnp
in
std
add
push
or
or
cmp
sbb
add
add
add
call
hlt
and
mov
inc
or
and
pop
pop
pop
add
pop
pop
pop
push
jg
inc
xchg
repnz
or
adc
or
std
and
cli
repnz
sub
dec
test
stc
cmp
and
movsb
or
xor
pop
cmp
xchg
andl
or
js
and
add
or
lock
adc
dec
ret
xchg
pop
loop
jmp
mov
adc
and
dec
sbb
sub
cmp
push
je
cwtl
adc
adc
xchg
and
xchg
and
pop
imul
xor
int3
cmp
add
inc
push
dec
push
dec
push
inc
push
and
sbb
inc
add
inc
and
inc
aaa
pop
inc
pusha
jo
ss
roll
out
movsl
shl
xor
mov
and
stc
xor
and
ljmp
xor
call
mov
or
je
fistpl
lods
jmp
add
or
jecxz
and
out
and
fwait
inc
popl
out
sub
sub
xor
xor
dec
clc
stos
mov
cmpsl
sbb
and
inc
cmp
mov
inc
and
dec
dec
xchg
push
and
pop
pop
mov
pop
xchg
insb
jne
cli
adc
and
inc
or
mov
add
cmp
mov
pop
mov
add
pushf
pop
shl
adc
mov
cmp
enter
int3
lcall
rolb
rcl
sbb
cmc
repnz
orl
add
adc
ljmp
pop
sub
and
inc
and
mov
mov
mov
mov
dec
outsb
xchg
push
mov
mov
mov
imul
and
hlt
addb
mov
mov
sti
lods
inc
mov
lods
dec
out
roll
out
pop
ror
negb
sbb
xlat
add
shr
std
into
ljmp
xchg
cmpsb
stc
jmp
pop
sbb
sub
sbb
adcb
jp
dec
cltd
sbb
inc
rcrb
js
add
sbb
call
xchg
popf
ja
daa
fs
out
and
outsb
add
dec
je
push
jge
mov
cld
xchg
adc
adcb
jle
add
movsl
pushf
mov
movsb
mov
add
lods
adc
lea
adc
mov
mov
in
jo
lods
faddl
and
add
ljmp
inc
shrl
push
add
test
add
pop
cmp
add
mov
and
cmp
push
dec
push
push
scas
les
repnz
and
inc
call
popf
orb
push
je
bnd
cwtl
sub
jnp
pop
sub
push
xchg
xchg
inc
movsb
sbb
xor
cli
stos
and
mov
pop
out
and
mov
das
rol
mov
xlat
jne,pn
fsub
jmp
test
mov
stc
or
mov
push
sbb
or
or
mov
test
subl
xchg
popf
adc
pushf
fwait
daa
lcall
sbb
insb
cld
xchg
jae
mov
jge
mov
fisttpll
std
movsl
das
lahf
mov
cld
js
xchg
add
lods
popf
inc
lcall
mov
sub
enter
in
lock
shl
std
jb
lock
stos
mov
out
fidivrs
sbb
xor
xchg
cs
lock
push
or
sub
ds
and
lock
pop
inc
push
cld
jmp
movsl
add
jno
or
jl
cmpb
div
in
push
mov
mov
xchg
mov
test
inc
push
push
xchg
mov
and
or
lcall
ljmp
mov
in
cmp
pop
add
out
jg
hlt
in
incl
test
mov
jmp
clc
sub
add
or
sbb
mov
sbb
ss
pop
add
jnp
push
inc
sub
jae
add
ficoms
adc
add
mov
rcl
ficomps
jo
incl
dec
inc
js
pop
jns
and
add
imul
xchg
ljmp
bound
fwait
mov
xchg
test
mov
stos
loop
cld
popf
pop
pop
mov
jmp
ret
roll
adc
fwait
mov
or
or
addr16
clc
ljmp
inc
insb
push
pop
pop
push
mov
jg
xchg
nop
jnp
cld
add
mov
push
and
mov
ss
icebp
out
cmp
mov
pop
call
xchg
aam
and
mov
stc
dec
cld
xchg
xchg
frstor
decb
dec
clc
push
addl
inc
lcall
and
pusha
stc
jns
fs
mov
cli
add
loop
cmpsl
mov
ret
dec
lds
enter
mov
mov
iret
push
out
lret
pushf
cld
push
lock
js
lods
push
push
shll
pop
inc
sbb
mov
or
out
js
movsl
and
cmp
push
mov
sub
or
std
or
pop
dec
xor
cs
cli
jmp
addr16
insb
pop
int3
in
cltd
inc
subl
xchg
cmp
mov
pop
or
dec
mov
mov
out
rorb
sbbb
cmc
out
and
fsubrs
inc
mov
pop
pusha
sar
cmp
std
push
outsb
pop
or
or
mull
decl
xlat
mov
inc
aaa
cmp
inc
push
jnp
loopne
push
inc
add
push
lret
inc
pop
inc
sahf
pop
cmp
mov
jns
sahf
out
in
cld
dec
decb
jg
inc
cli
xchg
cmpb
mov
cld
dec
mov
sub
jl
mov
pop
mov
push
add
loop,pn
aad
add
fildll
mov
adc
call
loope
mov
sbb
imul
push
nop
std
jnp
pushf
clc
sbb
outsb
cmp
ds
lock
fldl
jo
pop
outsl
push
ret
xchg
incb
out
add
pop
pop
add
push
out
nop
mov
incl
pop
sbb
cld
outsl
leave
nop
sbbb
pop
movsl
mov
lods
cmp
mov
add
mov
mov
loop
push
stos
call
adc
sub
cwtl
hlt
fists
mov
cli
scas
divl
out
fisttps
add
sbb
sbb
hlt
lock
aaa
add
sub
xor
aas
das
jmp
inc
xchg
mov
adc
xchg
clc
loopne
or
fs
ja
pop
jl
jmp
fildl
enter
fwait
sti
movsb
loopne
movsb
call
ljmp
stos
clc
ljmp
push
sbb
femms
or
adc
cli
add
push
call
and
pop
bound
sar
and
sub
hlt
sub
xor
mov
pop
cmp
inc
pop
inc
xchg
inc
jns
mov
add
fisubl
dec
outsb
int3
clc
cmp
sahf
stc
or
mov
test
fwait
cld
jge
pop
insb
clc
into
inc
imul
jns
int
andb
iret
shl
cmp
leave
incb
loope
fcmove
fdivrl
or
cld
mov
or
das
mov
add
adc
push
ljmp
xor
inc
mov
xchg
xor
push
jb
push
inc
xchg
push
xbegin
pop
pop
dec
jg
jecxz
lock
mov
push
dec
jns
pop
jle
fs
jg
add
test
adc
mov
std
movsl
call
loope
decl
sahf
and
into
cmp
and
leave
popl
int
clc
inc
pop
mov
cltd
jno
pop
cs
sti
pop
cmp
icebp
and
lods
cmc
inc
decb
inc
add
push
or
cmp
xchg
and
and
insb
or
call
inc
daa
and
dec
cmp
push
push
ret
dec
cmp
pop
pop
jmp
add
pusha
bound
inc
add
xchg
sbb
jns
push
je
popa
adc
push
add
jl
cmp
pop
out
test
out
mov
mov
cli
nop
xchg
adc
add
cwtl
lcall
lret
jno
movsb
add
inc
lods
add
mov
sbb
xlat
mov
add
mov
enter
cmpsl
int3
into
inc
mov
mov
fcoms
fisubrl
add
sbb
add
call
repnz
hlt
negb
clc
cli
add
fwait
cld
mov
mov
insl
pop
adc
popa
add
or
jb
and
push
sarb
loop
and
test
dec
sub
push
xor
mov
pop
cmp
xor
and
and
and
dec
mov
dec
loop
cmp
push
nop
bound
je
pop
and
andl
add
loop
cmp
imul
adc
sahf
adc
sbb
stos
sbb
and
in
mov
jmp
in
mov
xchg
and
jle
pop
std
jno
sbb
shlb
inc
enter
int3
jno
sbb
shll
adc
fdivrl
mov
lret
mov
stos
iret
loop
cmp
xlat
and
mov
adc
inc
xchg
sbb
mov
inc
cmp
repz
xchg
jno
sbb
fwait
sti
inc
lock
call
pop
popa
add
sub
xor
insl
cmp
adc
jno
adc
jne
sbb
add
sbb
jl
and
sbb
inc
sub
mov
dec
xor
adcl
cmp
in
pop
cmp
ss
inc
jo
inc
dec
popa
add
dec
dec
ja
dec
push
sbb
ss
push
or
add
pop
pop
and
pusha
adc
bound
push
cmp
add
sbb
adc
add
jp
ja
jle
add
addb
out
mov
cmp
xchg
xchg
pslld
lcall
movl
int3
std
fnstcw
xlat
mov
mov
std
cmp
add
cmp
rol
cld
dec
into
add
std
push
repnz
push
jmp
cld
pop
lock
pop
in
pusha
inc
cmp
push
add
bnd
add
mov
and
mov
lea
add
dec
push
add
pop
dec
imul
sub
pop
inc
adc
xchg
xorb
std
add
aaa
pop
push
or
jl
outsw
add
add
add
cmova
or
cmp
jb
call
ja
cmp
add
pop
pop
arpl
add
cld
add
push
les
jge
cmp
or
aas
jg
ret
shr
hlt
or
dec
repnz
lahf
std
out
ss
xor
mov
in
push
rcl
pop
loopne
xchg
stos
xchg
fists
in
pop
pop
mov
icebp
faddp
jo
pop
in
out
int
fdivl
stos
movsl
mov
mov
mov
mov
clc
xlat
xchg
mov
mov
orb
enter
popf
pushf
test
test
mov
std
mov
popaw
sti
add
or
jae
inc
and
ja
xor
or
xor
lock
push
inc
dec
push
and
in
cmovnp
dec
popa
sub
sti
inc
fistl
sbb
arpl
jg
mov
xor
xor
and
pop
leave
cmp
pop
repnz
sub
sbb
es
shll
adc
or
or
jae
mov
je
sbb
andb
out
in
cli
mov
sar
in
jecxz
xor
jl
nop
adc
cld
ljmp
int
leave
add
stos
or
xlat
aas
fcomp
jecxz
rcl
mov
ret
std
xchg
f2xm1
add
add
mov
or
stos
mov
aam
jmp
add
pop
mov
mov
in
addl
sbb
cmpsb
fs
add
insl
jae
pop
stos
add
dec
bound
outsl
jnp
jns
pop
jbe
data16
mov
pop
dec
insl
inc
cmp
cmp
inc
push
pop
pop
jmp
push
add
jne
inc
js
inc
lock
pop
push
pop
imul
xor
jbe
in
sub
out
and
push
ss
es
inc
cmp
aas
add
or
or
lahf
fs
xor
jno
cli
add
sbb
add
jo
js
xor
jp
add
das
repnz
loope
idivl
not
jne
in
in
out
sti
int
fcoml
dec
jmp
inc
in
leave
lahf
inc
add
mov
sar
lods
adc
idiv
in
add
mov
mov
lods
outsl
xchg
cmpsb
mov
subl
pop
mov
xchg
mov
jb
add
xchg
lods
mov
xchg
lahf
fcoms
inc
jbe
cld
add
add
pop
call
jg
data16
jg
jnp
cmp
xchg
jno
jle
jmp
daa
call
pop
add
inc
push
push
pop
sysenter
ds
jo
dec
dec
dec
add
adc
xor
scas
inc
or
add
das
sbb
and
and
push
push
notb
adc
pop
wrmsr
xor
outsl
loopne
cmp
adc
ss
or
ds
outsl
jo
xor
sbb
adc
sbb
push
jg
stc
nop
shl
icebp
dec
sar
sbb
call
loop
xchg
insb
xchg
fsubr
cld
hlt
pop
shl
in
add
rolb
lret
test
stos
in
leave
add
sti
ret
std
rcr
arpl
or
xlat
into
loopne
lret
dec
test
movsb
movl
stos
call
mov
xchg
add
out
mov
jnp
nop
testb
nop
lcall
mov
jb
push
insl
imul
push
pop
addr16
mov
mov
add
jbe
dec
inc
dec
push
and
pusha
mov
jnp
sbb
jg
inc
inc
xor
test
test
inc
push
pop
ja
dec
js
imul
and
pop
cmp
push
scas
cmp
pop
ss
aaa
xor
pop
pop
lcall
sub
adc
sbb
insl
sbb
push
cmpsl
cmp
jns
add
sbb
sbb
out
xlat
mov
cmp
jecxz
jmp
in
ljmp
hlt
loopne
repnz
enter
xor
adc
mov
mov
add
lods
lods
bound
xadd
loopne
add
fidivrs
mov
xchg
add
push
mov
push
mov
pop
mov
outsl
fists
pop
mov
inc
mov
xor
cmc
cmpl
lea
scas
add
add
inc
fs
jp
push
ja
clc
adc
outsb
jnp
repz
imul
add
inc
outsl
dec
dec
sub
sar
xor
push
push
jp
les
add
cmp
ds
and
daa
daa
or
adc
and
pop
aas
or
cmp
push
add
sbb
sbb
pop
jae
or
add
or
and
sub
add
dec
jg
add
dec
dec
push
sbb
adc
jmp
cmc
out
loope
out
ljmp
fcom
shl
in
clc
cmc
jmp
shr
ror
bt
iret
mov
aam
shl
xlat
loopne
ljmp
lcall
mov
mov
rcrb
mov
cmp
ficoml
adcb
push
movsl
movsb
xchg
incl
sahf
popf
addb
pop
not
clc
add
test
mov
jno
jbe
inc
jp
push
push
pop
inc
inc
add
es
jl
jbe
sbb
push
and
dec
inc
add
sbb
inc
dec
mov
shll
in
pop
pop
mov
or
pop
jb
fcompl
dec
pop
sub
ljmp
aam
das
stc
sar
and
add
pop
sbb
sbb
sub
das
and
sbb
xor
incb
push
hlt
sub
dec
in
or
inc
cmp
fxtract
cld
sti
repnz
jmp
leave
fisubrl
push
shr
clc
repz
loop
pop
rcl
mov
mov
or
ffreep
adc
int3
fiaddl
clc
icebp
cmc
in
pop
mov
lods
cld
out
cs
xchg
add
and
leave
cmc
hlt
inc
repnz
mov
mov
sti
xorl
xchg
mov
popf
cltd
stos
pop
lods
push
fwait
test
rcll
lcall
inc
xor
add
insb
dec
dec
pop
xchg
loop
mov
xchg
xor
testl
cmp
inc
push
push
dec
inc
jnp
scas
push
add
dec
rorb
adc
cmp
jnp
hlt
inc
push
mov
cs
jnp
cmp
adc
shlb
sub
add
inc
lds
sbb
sbb
sbb
push
push
sbb
cmp
clc
outsl
push
xor
sub
push
add
add
or
sbb
or
jo
ret
add
clc
aam
out
std
in
shl
out
push
repz
int3
shld
repnz
out
out
fwait
add
lret
push
repz
call
stc
loopne
mov
lahf
xchg
cmpsl
jb
add
test
mov
mov
mov
mov
sti
pop
xchg
orl
lcall
rcl
loopne
fwait
xchg
cs
adcl
mov
mov
incl
inc
sti
dec
push
dec
pop
dec
dec
push
decl
pop
adc
mov
and
insl
jbe
mov
dec
add
outsb
jg
or
std
js
inc
es
pop
and
jne
cmp
push
pop
data16
sub
and
cmp
or
jge
adc
daa
xor
add
int3
pop
pop
add
bound
aaa
adc
push
dec
mov
cmp
pop
std
add
adc
ds
inc
pop
push
jb
add
fdivp
icebp
in
mov
push
xchg
iret
scas
mov
in
in
xor
faddl
fcmovu
lods
loopne
rcl
sarb
out
rorb
jle
test
out
ljmp
in
out
lcall
mov
mov
lods
add
cmpsl
lods
loopne
cwtl
mov
mov
in
sbb
mov
mov
fildll
cltd
cs
lea
int
inc
jo
popa
inc
inc
pop
cmp
or
pop
xchg
fsubl
lock
sub
sbb
pop
dec
orb
adc
add
insl
sub
dec
pop
jbe
cld
push
add
xor
jp
dec
dec
dec
mov
adc
sub
pop
sub
adc
add
push
rcrb
cmp
xor
sbb
xor
or
iret
subb
add
or
cmp
cld
aaa
loope
sbb
ja
jb
add
sbb
or
in
ljmp
mov
mov
in
call
icebp
hlt
repnz
cwtl
mov
int
shr
mov
sub
shrb
fsubrs
iret
mov
xlat
or
or
fxch
sti
in
jl
add
test
in
mov
sarl
mov
fdivl
xchg
mov
cmp
lods
xchg
jne
in
lock
mov
imul
push
or
mov
pusha
adc
inc
adc
add
push
pop
jl
dec
jns
nop
jno
add
jae
pop
daa
insb
dec
nop
cli
sbb
pop
push
shlb
xor
push
jg
push
push
pop
outsb
pusha
inc
and
sub
xor
dec
dec
jae
push
add
push
inc
daa
cmp
sbb
pop
arpl
xor
test
or
pinsrw
repz
xchg
pop
aad
fmuls
jnp
test
aad
loopne
movb
repnz
mov
idiv
in
xorb
cltd
rcrl
shlb
xlat
ret
ret
sti
fsubr
roll
scas
mov
repz
fcmovnu
clc
mov
inc
aam
lret
add
pusha
fidivrl
lods
mov
xlat
push
xchg
fistl
les
mov
mov
mov
test
pop
negb
xchg
loope
call
imul
mov
dec
mov
adc
add
jbe
int
sub
call
push
push
cmp
add
cs
xor
inc
jns
pop
push
inc
or
jb
pop
icebp
jmp
or
add
sub
cmp
flds
adc
cmp
daa
or
aaa
xor
xor
and
or
and
outsb
add
push
adc
in
and
sbb
jg
in
out
loopne
call
in
mov
loope
icebp
jne
cli
out
lock
lods
cltd
fidivs
fists
cmp
repz
add
fcmovnu
stos
sbb
shll
sarb
ffreep
add
mov
std
jmp
decb
lock
incb
cwtl
inc
out
mov
mov
notb
and
push
adc
and
inc
cmc
int
lcall
movsl
add
incb
loop
add
xor
cmp
adc
lcall
sbb
and
icebp
and
je
shlb
pop
push
push
imul
aas
add
sub
and
and
hlt
cmp
cmp
into
decl
mov
sub
mov
movsb
hlt
out
aad
jno
or
data16
dec
mov
jp
and
xor
adc
popa
arpl
or
adc
pop
pop
mov
daa
sub
sbb
rorl
push
out
cmp
or
adc
insb
lds
adc
sbb
push
cmp
cvtdq2ps
pop
add
xor
lock
add
inc
stos
mov
out
testb
out
mov
sbbb
test
fisubl
loopne
add
xchg
mov
lock
andb
sbb
mov
mov
or
int
xchg
add
loope
mov
mov
mov
mov
add
jmp
in
shr
icebp
shl
add
cmc
xchg
notl
std
add
add
push
add
or
xor
mov
inc
decb
mov
push
add
enter
dec
push
inc
jns
jb
add
outsb
cmp
outsl
je
pop
inc
sbb
inc
adc
or
dec
sbb
pop
push
add
lahf
push
push
pop
add
pop
and
sub
pusha
adc
cmp
add
insb
add
jo
jb
add
daa
js
jp
add
sbb
test
xchg
mov
mov
mov
pushf
out
and
test
stos
add
lods
call
mov
lock
mov
mov
mov
add
les
mov
into
add
mov
add
stos
fiadds
mov
and
in
out
mov
int3
std
mov
mov
mov
push
add
pop
or
or
dec
das
adcl
push
pop
outsl
mov
and
pop
pop
inc
add
add
dec
inc
mov
cmpb
inc
sub
and
dec
ds
adc
add
push
pop
push
add
pop
push
add
pop
jo
and
and
arpl
mov
outsl
adc
adc
jne
ja
jns
jnp
or
jg
andl
add
out
xchg
popf
cmpsb
std
int
add
lock
cmpsl
mov
jecxz
loopne
fadds
mov
mov
mov
in
add
sti
lret
add
iret
mov
or
mov
sbb
xchg
loope
and
add
jmp
sbbb
xchg
negl
dec
std
push
add
jno
pusha
push
data16
insl
or
or
push
dec
add
arpl
popa
adc
push
add
cmp
cmp
cld
add
jl
je
jge
dec
outsb
lret
add
jae
jb
pop
jo
add
dec
cmp
add
inc
aaa
inc
jne
add
jp
pop
dec
push
dec
push
sub
push
and
pop
or
add
bound
and
incb
pop
outsb
add
jo
jb
je
jbe
adc
mov
add
fadds
add
mov
mov
mov
mov
cli
nop
jecxz
loope
lock
add
cwtl
in
lcall
mov
lret
xchg
dec
je
add
mov
mov
mov
mov
mov
nop
mov
ret
mov
xchg
enter
xchg
jle
into
scas
shlb
mov
fidivrl
lods
cld
add
call
in
mov
mov
mov
repnz
cltd
testb
mov
add
cmp
sti
add
adc
nop
pop
jbe
sysenter
sbb
inc
pop
push
inc
dec
and
sub
sub
xor
xor
xor
push
xchg
or
and
or
xor
or
cmpsb
ret
push
clc
aad
prefetchwt1
adc
add
push
or
sub
cmc
mov
push
js
clc
call
jb
pop
xchg
add
lds
lret
cltd
add
lahf
in
mov
add
fcom
sti
nop
and
or
loope
mov
mov
stos
iret
mov
dec
lock
test
fnstcw
and
jecxz
mov
mov
test
mov
fdivp
push
fcoml
fscale
lcall
sub
add
push
sub
push
jl
add
cli
add
push
or
add
push
pusha
or
pop
sub
or
pop
xor
xor
mov
pop
aam
outsb
jae
jg
jb
jnp
jo
ds
das
daa
sub
cmp
adc
imul
ss
outsb
inc
push
push
push
inc
and
cmp
jl
cmp
add
pop
sbb
add
adc
test
add
scas
mov
mov
lret
test
faddl
xchg
test
jmp
mov
out
add
fbld
cmpsb
mov
mov
scas
dec
mov
ljmp
lods
dec
ret
shrb
cmc
cmp
fadds
mov
faddl
mov
jl
add
enter
add
popa
mov
loop
hlt
push
lcall
inc
push
xchg
out
loopne
mov
in
mov
js
add
adc
in
mov
sbb
ja
sbb
xchg
jg
je
jg
pop
or
arpl
xor
and
pop
cmp
sub
and
dec
mull
inc
std
sub
push
push
aas
inc
push
inc
cmp
push
sbb
xor
inc
pop
das
fldl
sub
dec
data16
cmc
dec
sarb
jno
pop
cmp
add
imul
adc
popa
and
push
das
or
jo
jg
add
add
sahf
sti
mov
cltd
loop
lea
outsb
jg
pop
test
mov
icebp
lea
add
movsl
add
shrb
out
fistps
enter
int3
icebp
test
testb
rcl
mov
mov
int
lret
je
pop
scas
test
shrl
jp
xor
add
movsl
loope
inc
lahf
in
push
cs
jmp
std
ret
xchg
clc
loope
in
mov
jmp
clc
and
push
scas
js
push
xorb
jns
or
jg
adc
mov
ja
add
dec
popa
sbb
push
pop
add
xor
pop
and
pop
push
add
cmp
push
sub
and
and
dec
cmp
add
sub
inc
decl
les
push
lahf
pusha
inc
push
xchg
xor
add
ss
pop
mov
push
cs
inc
add
pop
dec
mov
pop
js
add
pusha
jb
push
fs
adc
jp
pop
insb
jle
or
bound
add
xchg
push
jl
out
cld
adcb
pop
repnz
lock
xchg
cwtl
mov
out
jl
add
mov
mov
shrb
mov
mov
inc
ret
loopne
mov
rcl
mov
enter
mov
fiadds
stos
rol
scas
scas
aam
and
fadds
pop
cmpsb
fmul
rcrb
in
pop
xchg
call
repnz
scas
sbb
cmp
addl
jg
xorb
jno
pop
in
push
add
popa
cld
pop
in
bound
or
data16
pop
and
mov
pop
daa
aaa
mov
sub
movsb
pop
push
das
aas
dec
dec
icebp
and
daa
pusha
jg
pop
sub
das
js
inc
push
push
push
xor
dec
ss
je
jg
jl
jg
pop
inc
clc
and
lock
les
sbb
inc
adc
outsl
pop
jg
or
fisubs
add
shrl
adcl
mov
pop
stc
popf
pop
cmp
or
call
shlb
dec
fcoml
ret
rorb
or
out
in
or
jmp
rorl
not
xchg
aad
rolb
int3
loopne
push
push
xchg
stc
push
dec
dec
cld
pop
sar
push
dec
push
xchg
outsb
and
repnz
data16
dec
jnp
push
and
sbb
and
inc
cmp
mov
adc
das
adc
cmp
mov
adc
cwtl
dec
xchg
mov
leave
inc
mov
mov
adcl
and
dec
pushf
xchg
fwait
adc
ret
adc
adc
adc
adc
adc
adc
adc
xchg
imul
cmovne
add
adc
push
pop
nop
ds
pop
dec
and
mov
adc
dec
insb
xchg
jge
sbb
mov
and
dec
adc
and
mov
inc
or
mov
adc
and
dec
fists
fisttps
stc
dec
adcl
lahf
mov
dec
jmp
mov
stc
inc
cld
addl
fisttps
test
mov
mov
subl
test
cltd
testl
push
push
outsb
or
or
or
push
push
orb
push
inc
sbb
jbe
and
inc
and
es
and
je
add
popa
xor
xchg
movsb
nop
push
cmp
or
push
inc
sbb
inc
inc
dec
or
and
adc
hlt
or
xor
pop
xor
pusha
xor
fs
call
sbb
xchg
add
jp
jl
and
hlt
fadds
cli
mov
mov
pop
mov
nop
and
clc
pushf
out
sahf
add
mov
test
stos
enter
repnz
mov
mov
add
lock
ret
mov
mov
int3
nop
icebp
hlt
add
fmuls
xchg
fiaddl
mov
out
stos
push
repz
rcr
lcall
xchg
jo
jbe
aaa
das
mov
and
dec
dec
xchg
dec
jl
push
adc
pop
dec
popa
xchg
sbb
xor
daa
and
xchg
sub
cs
pop
adc
imul
dec
xchg
push
and
mov
and
dec
mov
call
les
repz
adc
lock
mov
add
inc
xchg
xchg
add
mov
jmp
pushf
fnsetpm(287
fst
and
in
out
jmp
stos
pop
icebp
mov
ret
pusha
cmpsl
std
mov
pop
rclb
or
jbe
xchg
dec
push
push
sbb
sbb
jp
and
pop
es
xor
xor
pop
bound
jle
mov
mov
adc
shll
xor
adc
mov
xor
pop
jg
pop
xor
add
push
push
mov
xor
jb
je
jbe
js
add
jl
jle
sub
sub
jmp
hlt
lock
loop,pt
add
call
cld
lcall
fildl
mov
iret
test
int3
stos
lods
shll
mov
mov
mov
in
pop
lods
ret
hlt
mov
into
mov
cmc
loopne
mov
mov
ficomps
hlt
xchg
in
out
call
xorb
or
clc
nop
cli
pushf
sub
mov
mov
leave
inc
ret
sub
inc
pop
mov
pop
popa
gs
add
jl
xor
push
or
cld
sbb
adc
adc
dec
sub
or
imul
sub
add
jb
cmp
and
pop
xor
add
push
add
lock
jle
out
jle
and
fstl
int3
push
pop
call
add
icebp
call
cmpsl
jmp
in
mov
fcompl
push
iret
std
jmp
mov
int
rcrb
iret
hlt
ret
ljmp
rcrl
ret
lock
adc
test
ret
pop
mov
mov
mov
mov
cmp
incl
xchg
mov
cltd
addb
fcmovu
xlat
cmc
repz
mov
enter
outsl
cltd
pop
sub
and
sbb
push
jns
aas
jae
xorl
call
add
dec
push
add
xlat
mov
inc
rcrb
add
jp
sbb
pop
push
in
pop
les
insb
add
das
and
jle
adc
xor
insl
add
pusha
stos
pop
ret
mov
pop
imul
ss
pop
cmp
dec
es
add
inc
and
bndstx
sbb
push
inc
ds
inc
add
dec
dec
pop
test
in
jb
dec
mov
test
cld
mov
loopne
cmp
pop
lock
dec
flds
xlat
leave
ffree
xor
enter
std
loop
notb
cmp
rolb
loope
xchg
add
lock
test
pushf
xor
cli
mov
jecxz
call
nop
lcall
jle
cmp
fsubr
or
mov
iret
rorb
cld
add
add
add
pushf
outsl
add
or
adc
pop
adc
in
jle
mov
and
jge
pop
and
pop
or
or
test
sar
adc
adc
sbb
pop
cmp
cmp
cmp
inc
addr16
and
inc
inc
mov
add
or
push
es
add
push
and
pop
cltd
pop
push
adc
fisttpll
ds
addr16
inc
add
jne
ja
jns
xchg
add
or
addl
call
clc
rorb
xchg
icebp
xchg
and
popf
add
lahf
in
in
mov
test
lods
shrb
mov
mov
mov
add
ret
mov
leave
add
iret
mov
mov
repnz
lock
mov
and
mov
mov
cmc
add
sti
mov
add
imul
or
dec
or
push
jnp
add
jl
jns
inc
mov
sbb
add
pop
and
dec
push
and
push
add
inc
sub
jno
jnp
xor
xor
ss
or
push
cmp
repnz
inc
adc
inc
aaa
inc
add
dec
sub
cmp
add
push
xor
push
and
pop
sbb
sub
cmp
sub
repnz
adc
xor
push
outsb
daa
inc
out
pop
es
add
jp
jl
jle
xor
lock
sti
inc
cli
jecxz
rclb
xchg
and
icebp
sahf
pop
int3
cld
sub
stos
and
lds
sbb
jmp
fdivrl
rolb
out
repnz
int3
adc
mov
mov
mov
cld
stos
ret
push
mov
dec
mov
shl
out
mov
hlt
fdiv
call
mov
push
pop
pop
add
dec
or
push
rcpps
adc
adc
jge
sbb
fcompl
dec
and
push
and
inc
add
das
rcrb
ja
xor
dec
cmp
cmp
and
inc
adc
inc
cmp
and
and
push
add
push
cmp
sub
pop
adc
arpl
and
mov
push
mov
add
or
inc
xor
add
and
inc
in
mov
lea
jmp
xchg
test
fistpl
lock
shlb
mov
in
loope
mov
mov
mov
mov
mov
in
ret
xor
mov
lods
leave
movsb
lret
mov
bsf
mov
pop
mov
or
mov
loopne
and
lcall
out
cwtl
pop
add
negl
xchg
std
lods
jmp
daa
jae
clc
push
movsb
lods
icebp
add
adc
inc
pop
push
filds
push
sbb
pop
push
push
and
push
and
es
add
pop
sub
inc
cs
and
inc
incb
push
adc
cmp
fistl
shll
sub
cmp
push
inc
or
push
xor
dec
pop
daa
pop
sbb
in
cld
fs
adc
cli
sbb
and
sub
and
xor
jp
daa
jl
jle
xor
adc
test
cmp
mov
add
pop
lock
xchg
sti
loopne
incb
pushf
jmp
mov
rorl
test
stos
les
in
lock
mov
nop
les
mov
mov
add
fdivs
mov
daa
loop
loopne
mov
adc
out
mov
hlt
add
stos
clc
mov
shlb
lea
add
ja
imul
or
adc
jbe
add
outsl
sbb
cmp
push
push
pop
stos
jle
and
push
jo
inc
pop
inc
xchg
adc
mov
push
cmp
inc
sub
dec
add
and
cmp
sub
pop
xor
clc
dec
push
add
packuswb
add
imul
sbb
jno
xchg
incb
ja
jns
cld
jmp
roll
ret
mov
mov
lret
mov
lea
xchg
sti
xchg
add
xchg
icebp
cltd
stc
call
shll
dec
test
lods
mov
mov
sarl
scas
jge
jge
or
lcall
mov
lock
mov
pop
cltd
sub
and
test
addr16
sahf
fs
cmpsl
and
movsb
incb
inc
incb
add
push
dec
add
dec
or
pop
push
dec
pop
adc
xchg
push
mov
das
sbb
rol
inc
push
cmp
xorb
sub
xchg
decb
sub
lock
dec
ds
inc
dec
xor
sbb
pop
dec
cs
aas
and
push
mov
or
pop
loope,pt
icebp
pusha
shll
or
ljmp
jb
ds
adc
lock
sti
ljmp
xchg
out
mov
je
mov
mov
mov
hlt
cwtl
inc
shl
je
adc
sub
cli
stos
add
mov
gs
fdivrs
inc
fidivl
test
cmpsl
lret
mov
addb
fimull
add
out
call
in
scas
out
cmpsb
lock
repnz
mov
mov
cltd
mov
dec
push
imul
js
popa
imul
jae
sbb
jae
call
dec
mov
push
add
push
and
inc
add
add
pop
pushf
clc
xor
push
push
dec
push
lahf
pop
dec
inc
or
daa
xor
and
xor
add
and
pop
aas
sbb
cmp
std
add
or
push
adc
jl
add
add
add
cmp
adc
xor
sbb
jge
adc
repnz
int3
loopne
or
out
xchg
push
and
in
sti
add
fcomi
dec
inc
cmp
rolb
enter
int
add
lret
hlt
fadd
stc
out
icebp
add
sti
fcom
ljmp
sbb
stos
lods
push
cltd
pop
sbb
fwait
mov
xor
scas
mov
mov
lcall
xchg
cmpsb
mov
negb
mov
mov
mov
mov
xchg
fs
popa
int3
jae
call
bound
pop
add
inc
jno
push
add
je
jle
icebp
dec
ds
in
fildl
nop
inc
dec
pop
cmp
jns
pop
push
data16
loopne
xchg
push
pop
cld
pop
ja
pop
inc
push
inc
add
cmp
and
sub
loope
hlt
cmp
imul
add
and
push
push
daa
push
pop
sub
es
adc
push
adc
sbb
adc
sbb
hlt
add
icebp
loopne
fucomi
clc
add
in
jmp
in
out
out
repz
push
clc
in
int3
inc
rcl
lret
in
loop
ret
rorb
mov
rol
ds
xchg
iret
shl
aas
out
movsl
fdivrp
leave
mov
call
mov
movsl
mov
stos
adc
push
test
mov
mov
out
lea
lahf
xchg
mov
xchg
mov
pop
mov
outsb
jbe
inc
and
adc
mov
pop
jno
push
outsl
pop
dec
add
dec
js
push
movb
push
daa
sti
dec
lock
dec
dec
push
testl
aaa
push
pop
je
inc
or
inc
jle
cmp
sub
and
or
outsb
dec
out
pop
mov
aaa
sub
pop
push
cmpsb
std
inc
sub
sbb
jl
mov
xor
and
ja
push
or
xor
or
pop
aam
out
loopne
cmp
fcomi
add
jmp
lds
fdivr
popf
leave
out
push
jmp
jmp
repz
sarl
clc
fcoms
fcmove
hlt
out
nop
adc
fld1
lret
aad
add
int
xchg
movsb
mov
scas
lods
stos
cmpsl
mov
std
mov
pop
mov
mov
loope
jecxz
addb
test
xchg
xchg
addb
scas
rclb
inc
imul
popa
and
inc
jp
bound
dec
js
add
inc
adc
ja
insb
add
imul
inc
insl
inc
dec
inc
inc
sar
clc
pop
push
inc
cmp
inc
pop
push
inc
dec
inc
insl
cmp
push
add
pop
sub
and
js
pop
or
cs
and
xor
jp
out
sub
hlt
sub
and
push
push
adc
add
sbb
or
pop
push
movsb
sbb
add
inc
dec
sub
add
push
push
adc
add
add
cli
out
loope
sarb
in
stc
repz
jo
cmp
icebp
bswap
aam
mov
les
ret
out
and
rcl
jmp
fmul
int3
xchg
scas
test
add
mov
mov
mov
push
mov
les
test
xchg
push
jnp
cltd
dec
xchg
neg
mov
pusha
incl
bound
gs
cmc
push
loop
inc
jb
pop
jnp
jno
in
jp
std
cmp
addb
outsb
pop
cmp
inc
xor
popa
push
inc
jbe
xlat
dec
pusha
dec
imul
mov
sub
and
sub
xor
or
xor
cmpl
pop
aaa
xor
cs
add
adc
or
jnp
ljmp
xor
rclb
adc
jmp
in
pop
int
loope
shll
ficoms
out
shl
std
jbe
cmp
out
test
jmp
push
rol
aam
mov
lret
out
rol
in
rol
in
in
adc
int
loopne
idiv
mov
decb
lods
mov
mov
stos
in
add
movsl
sarl
add
mov
mov
das
loope
inc
out
call
xchg
pushf
adcl
xchg
lcall
jne
pop
std
pop
sbb
jbe
add
fs
jnp
or
inc
push
jbe
dec
test
pop
inc
jge
lock
push
push
inc
pop
push
cmovp
jb
push
sub
push
cld
add
sub
cmp
xor
aas
ss
popa
add
sub
psrlq
pop
xor
in
add
stc
sbb
sub
les
add
sbb
and
sbb
add
loopne
in
push
jecxz
incb
jmp
or
test
lock
jmp
fcomi
sbb
cld
in
test
stos
fdivs
mov
aas
add
clc
in
mov
push
stos
movsl
lods
stos
test
mov
cmp
mov
xchg
xchg
mov
add
cwtl
in
xchg
xchg
cli
add
pushf
fwait
cltd
mov
push
add
jb
sbb
jl
mov
pusha
aad
jecxz
push
js
imul
xchg
inc
std
dec
pop
ljmp
push
add
dec
pop
jns
push
xchg
push
mov
sub
xor
sub
hlt
add
cmp
cmp
inc
adc
adc
cmpsl
or
or
loopne
aas
loopne
add
adc
or
jo
pop
adc
add
xor
jl
in
iret
jae
dec
repnz
inc
in
std
xor
clc
cld
or
lcall
rcl
out
nop
out
das
ret
fucomip
jecxz
or
rcr
repnz
cmc
sub
jb
jbe
add
lret
mov
scas
test
andl
into
xchg
mov
mov
mov
xchg
xchg
aaa
add
nop
cltd
lahf
mov
cmpb
cmp
stos
fdiv
pop
dec
jb
push
and
imul
dec
imul
arpl
push
repz
and
push
fs
pop
pop
mov
sub
sysenter
jo
inc
pusha
inc
jns
push
dec
cwtl
or
or
inc
inc
push
sub
and
comiss
xor
ss
cmp
cmp
adc
add
add
nopl
adc
adc
xor
add
movsl
loop
clc
repz
loop
loopne
out
std
ud0
jmp
in
jne
js
daa
cwtl
lock
out
cld
sahf
add
mov
mov
stos
stos
and
mov
scas
lret
ficomps
mov
lods
test
lock
push
and
sbb
mov
stos
mov
orl
out
push
lock
shl
testb
cld
sar
fwait
add
add
in
clc
add
jge
jbe
cld
fdivrs
sub
jno
add
dec
jp
add
dec
inc
jne
dec
inc
ja
dec
pop
std
cmp
push
push
xchg
push
adc
adc
pop
out
or
pusha
stc
mov
xor
das
add
push
sub
and
pop
cmp
add
cmp
adc
cmp
aaa
xor
adc
ud2
or
push
add
pusha
adc
and
jne
xor
idivl
int
and
in
pop
icebp
std
rclb
or
loope
stc
sbbl
jmp
in
in
rolb
sbbl
mov
mov
fldt
div
in
sub
ficomps
add
int3
stos
xchg
je
lods
add
stos
movsb
xchg
adc
mov
test
fwait
clc
in
cwtl
mov
test
hlt
xchg
and
mov
xchg
stos
mov
clc
pushf
lods
push
pop
loopne
shrb
push
add
pusha
popa
jns
push
jnp
jno
mov
jl
dec
dec
xchg
in
xchg
jno
inc
push
cmc
inc
div
dec
pop
cld
add
push
inc
push
jno
jg
imul
shll
and
xor
cmp
pop
xor
adc
xor
cmp
call
loopne
or
and
xor
or
cmp
or
sub
ret
lock
mov
popf
or
add
notl
jo
clc
add
jmp
loop
into
aam
je
jns
ds
jmp
shlb
test
mov
in
ret
lock
jge
cmp
lret
mov
sbbl
xchg
xchg
fmull
mov
stos
in
mov
lock
shl
testb
sar
into
add
lock
add
pop
cmp
jb
sub
adc
xor
int3
sbb
popf
sub
and
add
jns
insb
sub
sti
shrb
add
jae
jg
gs
cmp
cmpb
inc
add
add
inc
pop
dec
sbb
lahf
add
jne
jg
add
bound
pop
jp
vmwrite
pop
out
popa
pusha
arpl
gs
addr16
imul
ret
jae
jne
add
jns
jnp
jge
adc
addl
sti
mov
jnp
and
jle
and
pop
sti
mov
pop
movsl
shll
fisubrs
cmp
mov
xchg
shrl
leave
add
mov
aad
orb
mov
loope
jecxz
outsb
add
lret
jmp
in
or
icebp
ret
add
xlat
lret
aad
fs
outsl
add
pusha
and
nop
movsl
in
insb
push
jl
adc
jo
addr16
cli
push
cmp
imul
dec
in
fadds
pop
add
inc
adc
push
jno
repnz
in
dec
push
incb
sub
cmp
div
and
outsl
mov
and
xor
adc
pop
cwtl
pop
or
loop
dec
add
jae
add
add
jb
sbb
add
push
adc
pop
or
pop
icebp
out
cmpsl
cli
in
cs
in
std
cld
mov
cmp
mov
jns
add
int3
aad
cmp
jp
mov
xlat
ret
mov
rcr
fistps
cmpsb
jb
mov
in
mov
mov
incl
mov
cld
xorb
cmp
std
jnp
cld
add
pop
pop
repnz
lahf
js
xor
incb
adc
add
sbb
pop
cltd
or
add
ja
xchg
push
addr16
jae
jo
imul
aam
sub
dec
pop
adc
push
cwtl
out
mov
xchg
dec
fstl
xchg
or
pop
cli
add
sub
data16
sub
xor
xor
jne
fidivl
aas
xor
adc
or
xchg
enter
loopne
cmp
cmpsb
add
es
sub
pop
push
pop
sbb
mov
ffree
dec
ret
testb
popf
mov
xchg
pop
arpl
push
out
movsl
mov
mov
xchg
adc
pop
pop
andb
adc
mov
pusha
sbb
mov
ljmp
mov
clc
sbb
ficomps
lahf
fsubr
xchg
call
shr
push
ljmp
test
sbb
adc
adc
or
dec
sub
call
sub
xor
fisubs
rcll
inc
call
cmp
xchg
imul
mov
call
aam
push
loope
or
pop
and
inc
imul
js
repz
cmp
mov
inc
lea
nop
addl
adcl
or
adcl
ficoml
fadds
mov
fcoml
jmp
cmpsb
in
jecxz
and
clc
icebp
bnd
hlt
mov
adc
sub
adc
push
jnp
add
adc
inc
jp
out
sbb
or
nop
fbld
and
std
cmpl
call
testl
mov
orb
dec
mov
mov
pop
js
out
add
call
popa
jnp
or
test
lock
incl
dec
arpl
cmp
and
mov
pop
insb
xor
frstor
mul
mov
enter
xchg
push
cmp
or
cmpsl
cld
scas
stos
stos
decl
enter
mov
ret
mov
push
lcall
testl
pop
lock
jmp
call
out
loope
sti
stc
add
lock
and
popa
adc
add
mov
pop
jns
sub
incl
inc
shl
adc
sbb
sub
icebp
je
and
lcall
push
push
push
adc
xor
std
xor
cmp
cmovno
dec
inc
inc
cmpl
dec
ljmp
aaa
incl
pop
pop
jg
movsl
icebp
imul
shll
and
jo
jae
je
stos
cmc
add
aas
hlt
out
mov
std
popa
pusha
stc
incl
notl
mov
add
stos
adc
std
lods
add
scas
dec
mov
test
xchg
std
lret
adcb
sbbb
dec
cli
fiaddl
cld
mov
and
fimuls
push
out
loop
inc
out
cli
cmpb
repnz
push
adc
mov
adc
adc
or
loop
test
or
inc
xor
or
mov
dec
inc
pop
xor
adc
sar
addr16
push
jge
gs
call
pop
or
cmp
mov
std
push
clc
adc
out
sbb
filds
xchg
addl
cld
lods
or
adc
subb
xor
sbb
mov
fcmovnbe
mov
and
pop
lock
out
cwtl
std
adc
call
adc
das
js
out
xor
mov
incl
inc
or
imul
std
adc
adc
ret
pop
lock
call
movsb
or
jns
test
xor
inc
mov
push
inc
inc
add
or
dec
test
decb
and
inc
insl
lds
mov
add
js
or
and
lea
gs
decl
in
sub
add
cwtl
cltd
or
lods
push
xor
xor
xchg
mov
into
movsb
cmc
mov
std
xchg
roll
or
mov
fcompl
push
or
neg
in
in
std
and
paddw
icebp
or
pop
jle
in
cwtl
std
adc
sti
je
pop
out
adc
add
sbb
add
or
nop
lahf
inc
mov
jg
xor
sbb
std
dec
cmp
add
add
inc
add
or
std
ja
lods
inc
std
lods
add
add
bound
or
xchg
sti
add
add
jge
std
imul
ret
push
cli
dec
mov
das
std
gs
and
popf
add
xchg
sub
std
pop
xor
std
jecxz
cli
inc
mov
pop
add
std
rol
int3
add
out
std
out
stc
dec
das
mov
in
xor
int
loope
inc
in
push
and
ljmp
mov
std
jne
cli
add
add
add
or
incl
pop
or
std
adc
in
push
add
dec
sbb
add
or
shl
cs
std
pop
ljmp
adc
xor
inc
ds
and
cmp
jb
inc
inc
inc
dec
mov
add
push
testl
inc
push
inc
and
inc
outsl
iret
xchg
cli
xchg
pushw
std
jb
jae
jle
cli
jp
adc
ret
pop
std
outsl
push
icebp
or
mov
add
mulb
mov
cmpl
test
dec
stc
mov
pop
and
cli
bnd
or
es
leave
std
aas
nop
rcl
and
fst
adc
adc
out
and
in
out
cli
add
cmp
lret
testb
add
push
pop
push
fdivr
sub
incl
cmc
ds
std
das
xor
lahf
data16
jge
add
aas
orl
dec
addl
inc
push
or
outsb
or
inc
or
jg
std
inc
ja
lds
fs
fsubp
inc
fwait
and
inc
mov
cli
out
add
adc
add
adc
add
pushf
js
ret
adc
dec
int
in
out
popa
std
push
insl
cmc
es
add
repz
or
add
sti
cld
or
add
add
sbb
call
adc
dec
pop
xchg
xor
jae
and
jge
out
sbb
test
jae
inc
fiadds
inc
pop
push
or
cmp
push
adc
enter
and
lock
fists
adc
mov
mov
mov
enter
fiadds
inc
sahf
xlat
or
in
and
add
daa
js
pop
enter
and
add
dec
or
jle
inc
push
adcl
adc
and
add
inc
arpl
or
in
and
jo
cmp
test
sbb
test
inc
test
add
cmp
shlb
cwtl
adc
lcall
inc
test
pusha
inc
xor
mov
and
inc
clc
enter
and
mov
adc
add
daa
cwtl
adc
clc
in
and
add
dec
or
and
add
adc
dec
and
dec
aaa
mov
mov
bound
mov
ja
dec
rorb
jb
adc
inc
adc
call
mov
daa
mov
push
xchg
xchg
cmp
or
mov
mov
test
inc
lret
popf
leave
loopne
sbb
mov
ljmp
jb
cmp
or
or
mov
adc
enter
and
sub
mov
adc
inc
dec
jo
dec
out
addl
pop
in
and
inc
daa
cwtl
adc
frstor
adc
cmp
shlb
xchg
sbbl
out
xor
or
in
and
add
dec
lret
adc
adc
sbb
test
enter
push
cmp
sbb
test
dec
mov
fiadds
repnz
jae
add
sbb
dec
adc
and
inc
jle
or
and
dec
and
dec
orl
addl
sbb
and
and
xchg
in
sbb
test
mov
cmp
loopne
or
decb
lock
adc
and
cmp
pop
mov
and
or
and
sbb
jne
and
cmp
or
xor
jae
inc
dec
jge
dec
out
fwait
dec
add
inc
and
dec
jns
fistpl
lea
or
les
nop
int3
clc
inc
std
and
add
daa
loopne
adc
enter
or
sahf
int3
pusha
inc
or
lea
in
add
daa
cwtl
adc
cmc
in
and
add
dec
or
inc
adc
and
and
xor
sbb
cld
and
jp
dec
lock
sbb
test
dec
test
add
cmp
add
cmc
dec
jbe
clc
lds
and
lock
and
mov
cli
ja
inc
into
repnz
fiadds
inc
xchg
pop
jecxz
mov
loopne
inc
ja
inc
mov
cmove
repz
daa
inc
js
pop
enter
and
int
gs
or
fadds
jge
dec
pusha
inc
popf
pop
out
pop
pop
in
and
dec
daa
cwtl
adc
enter
and
xor
jge
movb
add
sub
mov
or
xor
or
shll
adc
and
cmp
dec
mov
sbb
test
add
sbb
in
adc
inc
sbb
and
sub
xor
cmp
loope
pop
adc
add
dec
or
mov
addb
sbbl
data16
insl
and
jne
mov
jge
xor
test
mov
rorl
xchg
push
sub
or
popf
cmp
movsl
and
add
lods
add
adc
cld
out
add
std
add
call
stos
inc
aad
std
mov
fists
test
std
adc
in
ret
scas
decl
cmc
mov
sub
lock
std
std
jne
inc
add
std
add
or
std
push
int
rorb
or
jne
jno
jns
mov
push
inc
add
dec
cltd
dec
inc
inc
fimuls
pop
push
push
inc
push
pop
pop
inc
pop
inc
push
std
jl
cmp
pop
dec
pusha
or
xor
daa
aaa
das
and
xor
xor
jb
cmp
aaa
mov
xor
jle
add
add
arpl
sbb
dec
add
pop
add
fists
or
jmp
jecxz
mov
pop
clc
out
jmp
in
lahf
dec
mov
std
loope
in
popf
mov
imul
fsubr
enter
jp
adc
int
iret
add
lret
fst
rclb
fwait
lret
aam
or
mov
inc
mov
sti
cmp
std
pop
mov
push
mov
mov
rsm
scas
mov
xchg
xchg
xchg
xchg
jbe
sbb
cltd
cwtl
mov
add
cli
orl
fbstp
mov
and
pop
and
adc
jno,pn
pop
inc
rolb
into
inc
xor
jmp
ret
mov
add
add
xorb
or
add
das
add
out
andb
add
push
sub
push
inc
mov
inc
and
dec
or
xchg
stos
dec
adc
inc
push
arpl
subb
sub
aas
insl
daa
outsl
inc
jno
jae
jp
push
ja
jns
jnp
ljmp
xchg
adc
fwait
leave
rolb
lahf
xchg
popl
cmpsb
mov
cmp
pop
mov
ljmp
lret
mov
pop
add
mov
mov
push
fildll
shl
inc
cmp
in
out
jmp
movsl
inc
mov
loop
and
add
add
cmp
pop
push
push
mov
adc
push
push
je
imul
sbb
mov
push
and
daa
es
fiaddl
pop
sub
cs
xor
adc
jne
ficoml
push
push
decl
fs
or
mov
clc
int3
add
push
xor
add
pop
das
pop
xor
lock
bsr
enter
push
add
jo
jb
je
jbe
cmp
jp
jl
jle
push
call
aad
int3
cmp
mov
nop
hlt
xchg
add
cwtl
std
lcall
mov
enter
fbstp
mov
fcmovb
xchg
ret
mov
or
mov
xor
loop
in
stc
out
pop
fsubr
fisubs
loopne
sti
sar
lret
out
fcomp
ljmp
lock
movsb
hlt
mov
cmpsb
cli
lret
pop
roll
xor
and
cmp
xor
and
cmp
adc
adc
clc
push
es
imul
and
lock
sub
rclb
xor
push
cmp
inc
xor
aam
cs
bound
dec
jne
in
pusha
fcomps
pop
jno
dec
adc
popf
arpl
or
imul
pop
outsl
add
jae
or
ja
adc
pop
jg
addl
hlt
xchg
jecxz
call
xchg
xlat
xchg
push
xchg
ljmp
lahf
add
mov
leave
cmpsl
add
test
out
scas
adc
mov
or
mov
add
mov
hlt
shl
inc
fisubl
scas
lret
mov
sar
rorl
std
sbb
fxch
fcmovnu
and
scas
and
out
jmp
test
cltd
add
sahf
repz
cmc
cwtl
and
push
add
insb
add
xor
push
je
insl
and
bound
imul
aas
adc
fsubrs
jnp
cmp
add
dec
push
sub
pop
add
cs
xor
pop
ss
ds
inc
and
add
inc
add
es
sub
loope
jno
add
push
lret
fadds
and
shlb
push
or
sbb
enter
sbb
mov
jl
clc
aam
sti
sub
cld
arpl
mov
jp
lret
icebp
add
out
pushf
lret
jbe
or
xlat
xchg
out
and
shlb
mov
add
hlt
call
sub
fs
inc
rcrb
mov
or
ds
ljmp
sbb
mov
adc
lods
jg
aam
add
insl
add
or
bound
mov
or
pop
sbb
dec
sbb
sbb
flds
inc
jle
jbe
pushf
clc
inc
aas
inc
mov
mov
push
inc
sbb
mov
and
and
out
and
add
and
push
jns,pn
jge
cmpsb
adc
cltd
push
cmp
sbb
add
add
push
add
push
or
inc
push
add
ja
jno
jae
adc
sub
jns
jnp
cltd
mov
bound
sti
insb
in
subb
jae
add
and
push
sbb
in
pop
fcomps
pop
mov
js
pusha
mov
incl
push
inc
mov
mov
mov
pushl
stos
jno
mov
mov
push
movsb
jo
int
lahf
add
pop
xchg
mov
add
ss
jnp
sbb
test
xchg
pop
sub
cmc
add
mov
inc
stc
cmp
jecxz
hlt
div
stos
lock
out
jnp
in
ljmp
jo
cli
roll
pop
xlat
add
hlt
fidivrl
jb
pop
ret
mov
and
or
xor
aam
add
xor
xor
cmp
aas
add
cmp
and
add
sub
add
adc
add
pop
adc
dec
push
add
or
add
add
jns
jg
jp
jle
lcall
insb
xchg
outsb
lcall
fbld
popa
testb
in
pop
fcompl
pop
push
cs
cs
cmp
rorb
add
xchg
dec
jge
pop
add
inc
ds
xor
xlat
mov
mov
inc
mov
nop
mov
mov
test
cmpb
xchg
and
cmp
sahf
pushf
in
addb
or
xor
or
add
cmc
nop
sti
add
std
dec
jecxz
pop
loope
out
in
jmp
jmp
in
adc
cmp
add
xlat
cmpsl
shlb
fadds
lds
push
roll
ret
clc
into
ror
iret
lret
enter
xor
xor
cmp
xchg
pushf
andb
add
sub
sub
enter
leave
adc
sbb
adc
inc
adc
lahf
or
stos
or
loope
add
add
inc
jp
push
jl
jle
jo
jb
je
jbe
push
insb
mov
mov
push
addr16
gs
pop
pop
pop
aaa
pop
cmp
adc
push
add
push
push
les
dec
add
inc
addl
inc
imul
mov
jmp
in
add
ja
jg
data16
add
cmpsl
mov
push
xlat
mov
sbb
xchg
out
xchg
loopne
std
xchg
add
mov
mov
loopne
orl
clc
test
mov
jno
std
jnp
adc
cmp
addb
pop
bnd
xor
rorb
and
and
jmp
pop
push
xorb
js
add
dec
fadds
inc
faddl
pop
fiadds
ret
add
cmp
xor
xor
add
into
out
call
sbb
aas
cmp
cmpb
and
and
es
subb
das
jae
adc
fistl
cmp
adc
add
push
sbb
in
push
roll
fiadds
leave
or
verw
adc
imul
add
jno
jo
jle
jl
clc
jp
jns
addr16
outsb
inc
aam
add
jb
push
pop
pop
enter
test
push
pop
jo
call
dec
call
inc
addl
inc
push
mov
mov
jge
xor
jge
add
or
cmpsb
mov
add
fwait
rolb
fcoml
or
lea
push
mov
testb
cmpsl
orl
pop
sti
cld
and
scas
add
je
adc
imul
inc
sbb
push
rcr
sarb
or
push
fcom
pop
fildll
fucomp
les
fcmovnb
stos
add
fwait
int3
into
pusha
enter
dec
xor
cld
nop
sub
out
cmp
cmp
add
stc
and
aas
and
lea
inc
pop
mov
adc
lods
add
or
or
or
add
push
add
and
cmp
pushf
jnp
je
les
jo
bnd
insb
subl
in
add
cmp
popa
loop
add
pop
fstpl
pop
xchg
push
add
push
jo
call
push
dec
cmovs
jo
inc
xchg
sti
out
pop
fadds
push
mov
mov
ror
test
add
push
nop
data16
enter
cltd
pop
lahf
push
popf
mov
sbb
inc
test
lea
add
sti
hlt
mov
add
decl
inc
add
inc
out
in
loop
add
inc
out
adc
std
sarl
add
xor
push
filds
aam
mov
xcrypt-ecb
cmpsl
leave
add
int
ret
arpl
add
lds
mov
xor
add
sub
mov
mov
pop
and
add
sbb
adc
adc
adc
push
add
bound
push
or
pop
mov
add
idivb
js
jbe
jne
lea
ds
push
xchg
sub
add
clc
push
insb
add
cmp
push
repz
push
sbbb
sbb
pop
adc
inc
cmovbe
or
inc
cmp
dec
ret
stos
mov
mov
mov
mov
stos
mov
mov
movsl
xchg
lods
ret
inc
mulb
movsb
inc
cmpsb
xchg
cltd
xchg
lahf
lds
cs
add
decb
xorl
sti
in
jns
clc
and
testl
lods
lock
dec
jmp
in
out
loope
sbb
fistps
fptan
fadds
call
inc
aam
shlb
push
int3
xchg
lret
mov
add
pusha
lds
roll
ds
mov
cld
ss
add
xor
adc
add
adc
or
clc
sub
add
popa
das
mov
mov
jecxz
pop
stc
sbb
add
pop
mov
inc
or
jae
mov
ja
je
jp
push
jl
bound
sub
data16
xchg
mov
mov
inc
imul
xor
push
adc
pop
out
pop
lcall
pop
rolb
inc
aad
fiaddl
inc
mov
dec
mov
dec
jne
pushf
pop
mov
mov
mov
mov
mov
push
cmpsb
pop
add
scas
faddl
stos
into
test
add
xchg
sbb
mov
cmpsl
xchg
cltd
orb
mov
mov
divb
lock
add
imul
cli
js
sbb
out
in
loop
loopne
add
sub
out
and
add
hlt
je
add
das
leave
add
enter
add
in
lds
sbb
pop
cmpl
mov
sub
sub
inc
das
dec
sub
mov
sbb
push
sbb
add
mov
adc
fistl
cmp
sbb
sbb
and
dec
add
repz
loop
inc
jl
jp
js
add
je
jb
jo
mov
imul
mov
cmp
and
and
aas
gs
adcb
jne
dec
pop
add
adc
inc
xor
sub
dec
add
dec
fbstp
dec
jp
jne
cmpsb
mov
adc
cmpb
das
add
popa
nop
add
imul
jne
jae
push
adcb
pop
test
dec
mov
mov
inc
repnz
add
int
lret
sti
scas
stc
and
add
push
fs
enter
add
jmp
aam
add
mov
fcomps
push
dec
shlb
hlt
jge
add
cltd
leave
mov
inc
xor
ja
add
fdivl
cli
cmp
cmp
cmp
and
add
loopne
cmp
push
sub
sub
adc
mov
mov
adc
lret
clc
add
or
sbb
movlps
add
jge
jae
sub
sub
jne
imul
insl
shll
repnz
mov
pop
add
push
fwait
push
add
dec
bound
insl
dec
mov
inc
cmp
add
mov
loope
add
mov
mov
mov
stos
add
test
scas
cmp
pop
cmpsb
push
movsb
jno
add
inc
sahf
dec
pushf
push
xchg
add
xchg
mov
lods
pop
fwait
clc
rolb
test
xchg
filds
test
dec
cmc
dec
sbbb
repz
in
arpl
jmp
in
out
loope
jecxz
fisttpll
loop
mov
repz
repnz
int
ret
ja
mov
stos
les
add
jo
cmpb
cmp
xor
das
loopne
fisubrl
add
and
repz
in
sbb
sub
cmp
ud2
adc
adc
adc
push
jo
cld
arpl
or
add
add
mov
int3
jp
js
pop
jbe
je
clc
repz
outsb
addb
mov
push
lods
bound
push
pop
jo
pop
inc
pop
inc
pop
dec
push
push
ds
sub
bound
pusha
dec
dec
add
add
inc
repz
in
mov
mov
dec
mov
add
jo
bound
stos
arpl
fwait
cmp
pop
add
xchg
sbbb
sahf
jmp
clc
in
ljmp
add
mov
mov
lock
push
hlt
imulb
add
or
or
add
cwtl
cli
add
in
out
call
in
shr
lret
sar
sarl
lret
xlat
aam
stos
mov
xchg
ret
xchg
lds
adc
add
imul
xor
mov
mov
sarb
add
ds
and
and
add
sbb
or
add
das
jecxz
or
pop
popa
adc
mov
add
add
mov
xchg
or
jno
ja
jne
jnp
add
jg
jge
arpl
pusha
push
inc
fs
push
xchg
inc
int
insb
pop
push
add
push
xor
xor
loopne
dec
add
sub
test
inc
call
leave
dec
les
dec
add
push
mov
mov
mov
fs
mov
cmpsl
mov
les
shrl
int
add
xchg
fistpl
add
fwait
sub
addl
jnp
insl
mov
push
divl
add
repz
sar
clc
add
cli
hlt
in
out
cs
incl
ljmp
popa
add
fdivrl
dec
fmuls
ficompl
dec
xor
xor
ret
and
and
adc
lret
cli
xor
or
sbb
cmp
sub
push
mov
inc
bnd
sub
push
pop
adc
add
mov
mov
mov
add
sbbb
push
cmc
add
cmp
in
add
push
fimull
or
add
ret
jne
jae
add
jg
jge
jnp
vmwrite
xor
lds
popa
test
inc
fs
and
nop
roll
pop
mov
push
cmp
push
or
dec
in
dec
xor
je
dec
jns
gs
lock
in
lret
or
das
mov
mov
mov
dec
sar
scas
add
lods
add
sub
cltd
addr16
insl
popf
imul
jne
jae
add
push
pop
lea
add
dec
xchg
sti
lcall
or
sub
aas
repnz
add
out
test
mov
mov
stos
loope
jecxz
fstpl
add
xchg
fmuls
xor
cwtl
or
not
lods
iret
mov
aaa
leave
and
sbb
adc
pushl
hlt
add
add
sub
xchg
mov
es
hlt
lock
jb
xchg
sub
add
jbe
jl
lock
or
push
add
movl
or
inc
push
cltd
or
or
ja
pop
mov
jle
js
jp
mov
stos
or
pusha
mov
mov
imul
imul
pop
rcrb
cld
jl
dec
bound
hlt
outsb
dec
fs
popf
js
add
inc
sarb
mov
sbb
mov
test
lods
xchg
ret
add
cltd
and
lahf
ss
aas
xchg
push
xchg
insl
add
lods
mov
mov
mov
add
jb
and
sub
clc
stc
sar
nop
cmc
xchg
add
outsl
icebp
psllq
in
ss
cmp
cs
in
add
loop
faddl
or
xlat
dec
add
or
sbb
out
filds
int3
or
enter
in
sbb
xor
aaa
pop
shrl
and
and
lahf
es
emms
das
shrb
icebp
pop
xchg
adc
pop
mov
dec
cmp
inc
add
or
or
cmp
je
jb
jo
jle
add
dec
jns
adc
gs
arpl
popa
fisubrs
add
imul
sub
pop
pop
push
add
sub
daa
dec
add
dec
cmc
inc
add
inc
leave
inc
mov
mov
mov
add
mov
test
scas
in
sub
mov
incl
cwtl
leave
xchg
les
mov
jge
push
addl
inc
xchg
xor
xchg
test
clc
mov
mulb
lock
fldln2
fwait
out
mov
add
pop
out
add
es
fmulp
fbld
xchg
add
inc
aam
rolb
rorb
push
into
jecxz
orb
leave
xchg
mov
pop
rcll
cmp
sarb
push
xlat
or
xchg
sub
and
jp
mov
daa
fsubrl
sti
sub
sub
adc
adc
inc
add
dec
sbb
scas
sbb
cmp
hlt
add
add
add
push
or
or
mov
or
jno
filds
pop
adc
js
xor
jl
bound
or
pusha
imul
or
push
add
pop
movsb
pop
mov
lcall
je
cli
dec
pop
loopne
aad
cmpsl
pushf
loopne
mov
mov
shlb
mov
stos
hlt
scas
sahf
test
repnz
xchg
mov
icebp
inc
or
cmpb
add
xchg
test
xor
cli
mov
add
pop
negb
push
fs
cld
es
out
jmp
out
inc
in
popa
ljmp
and
aaa
rol
aam
shlb
add
ljmp
lret
pop
popa
cmp
cmp
dec
mov
xor
xchg
add
add
subb
sub
adc
adc
sbb
fstpl
rcrl
rcrl
das
add
add
add
or
or
jp
lods
jl
sbbl
and
push
shlb
loope
sub
add
add
xchg
pop
fs
lret
push
packssdw
mov
lods
inc
sahf
inc
test
sbb
jae
hlt
cmp
popf
mov
mov
mov
mov
stos
mov
push
lods
jo
pop
popa
pushf
sahf
dec
adc
leave
cwtl
ficompl
push
mov
movl
mov
mov
lea
icebp
add
pxor
mov
cli
outsl
clc
add
jg
adc
lret
loope
add
in
add
xlat
xchg
aad
pushf
shll
mov
fildl
dec
flds
dec
lds
adc
adc
hlt
les
fadd
cmpb
cmp
arpl
mov
inc
xor
cmp
sub
adc
xor
mov
lea
sbb
sbb
sbb
push
sub
push
add
push
dec
testb
cld
add
add
add
push
sbb
pop
sub
js
jle
jl
jb
fwait
jo
jbe
je
insl
add
sbb
imul
add
addr16
popa
andl
push
pop
daa
pop
xor
cmpsl
and
jae
and
mov
pushf
dec
lcall
mov
xchg
mov
mov
movsb
cmpsb
scas
aaa
fdivs
add
lods
cld
xchg
ret
xchg
add
xchg
les
add
pushf
jo
jle
insb
xchg
push
test
inc
mov
cmc
out
test
enter
or
push
incl
sub
loopne
cli
ljmp
rclb
jle
pop
fcoms
sub
add
ficomps
push
ret
add
leave
mov
add
ss
add
ds
add
adc
push
and
sub
popf
sub
add
pop
leave
adc
prefetchnta
sbb
gs
outsl
rcrb
mov
test
or
jmp
mov
jae
push
jge
jg
jns
jnp
fdivl
fldenv
insl
stc
outsl
add
imul
gs
add
pop
das
pop
add
inc
repz
jge
add
push
dec
inc
dec
sub
cmc
mov
mov
mov
and
pop
mov
stos
lods
fsubrs
cli
add
lcall
nop
test
mov
out
jmp
cmp
xchg
stc
imul
aas
icebp
leave
lock
mov
hlt
lahf
ljmp
in
ja
gs
out
add
fildl
add
inc
rcrl
das
xlat
cmp
aad
lret
add
jnp
xchg
add
mov
xchg
mov
in
sbb
adc
adc
daa
xor
subb
sub
inc
ljmp
cld
sbb
push
lock
sbb
aam
fiaddl
fadds
movb
or
ret
or
add
ja
jne
jae
push
jno
jg
jge
in
jns
add
js
popaw
insb
outsl
add
pusha
imul
and
add
push
sub
push
cmp
add
pop
xor
pop
adc
inc
inc
add
inc
push
inc
or
add
dec
add
dec
add
or
mov
mov
add
mov
cmp
scas
and
test
push
jl
jb
jo
add
push
xchg
pop
addl
orl
mov
hlt
enter
lock
sar
sar
ds
clc
mov
loop
stc
jnp
iret
test
sahf
call
aam
shlb
mov
mov
mov
add
xchg
add
jle
add
xor
xchg
cmp
mov
mov
das
add
sub
pop
adc
adc
pop
std
sbb
sbb
pop
aad
fildl
add
add
bswap
or
or
js
jp
add
push
jo
jb
add
outsl
push
pop
outsb
adc
insl
loopne
popa
or
pop
and
pop
aaa
push
dec
cmp
push
cmovs
dec
pop
add
inc
add
cld
add
or
add
mov
mov
test
stos
add
lods
cmp
and
xchg
pop
add
mov
andb
test
daa
mov
lock
or
lret
lock
daa
fwait
stc
in
std
push
jb
adc
sub
jae
sub
pusha
xor
xor
je
arpl
add
push
inc
add
or
testl
pusha
push
push
mov
pop
pop
mov
cmp
and
outsl
into
into
push
cmp
xchg
mov
daa
mov
adc
xchg
sti
xchg
add
xchg
repz
rcrl
popf
icebp
cmp
inc
cmpsl
loop
add
lcall
mov
cmp
mov
lds
dec
out
ret
loopne
mov
loope
jecxz
test
mov
xchg
jmp
adc
out
xchg
inc
stc
lret
scas
aam
adc
or
or
push
adc
sbb
jne
add
pop
push
jp
cmpb
sub
sub
mov
inc
push
add
psubb
sbb
ds
inc
or
cmpl
dec
mov
dec
es
ss
add
mov
pop
dec
sub
loopne
push
push
insb
pop
outsb
inc
jo
jb
je
xchg
inc
loop
cmp
sbb
jle
xchg
lods
sbb
inc
mov
mov
mov
and
pop
std
mov
xlat
lcall
nop
movsb
adc
mov
jmp
dec
stos
loopne
cmc
lahf
push
stos
cmp
mov
add
jle
mov
movsb
into
test
fcom
cmpsl
mov
fwait
mov
leave
loop
in
int3
out
call
fucomp
add
lock
shl
testb
clc
stos
cli
lcall
sub
mov
imul
push
xchg
adc
pop
adc
enter
sbb
loop
inc
and
inc
sub
push
cmp
rolb
and
das
inc
es
add
dec
or
cmp
loopne
push
push
cmp
pop
aaa
pop
leave
scas
std
mov
gs
add
imul
outsl
adc
jno
lds
stos
loopne
ret
push
push
loopne
test
xchg
mov
mov
sti
mov
std
mov
adc
mov
int3
test
lods
fisubrl
mov
mov
std
pusha
mov
shll
mov
int
iret
shll
adc
pop
add
mov
mov
loope
jecxz
in
add
sub
std
ret
fdivp
aam
mull
int3
std
sar
and
xor
xor
inc
das
push
sbb
add
gs
jb
jp
call
jae
arpl
push
and
dec
es
sub
cld
jne
mov
popa
cmp
pop
cmp
add
sarb
dec
and
cld
jne
push
push
dec
add
or
pop
xor
or
pushw
push
fs
sbb
inc
mov
sarl
in
movsb
add
cmpsb
adc
add
stos
adcb
out
xchg
call
cltd
add
fwait
test
sub
lea
jae
add
pop
cmc
xor
cmp
add
lock
out
add
in
loop
inc
loope
out
in
sbb
add
jmp
or
add
fsubp
rcr
rcl
aam
test
outsb
enter
int3
add
xor
and
sbb
add
movb
daa
adc
push
mov
add
add
and
and
es
test
add
sbb
push
ret
pop
adc
pop
and
ret
and
insl
add
push
pop
dec
add
jns
jg
jge
jae
add
ja
jne
imul
insb
inc
bound
pusha
cmp
pop
mov
pop
xchg
pop
inc
pop
sub
push
dec
mov
mov
dec
dec
adc
sbb
sbb
inc
add
inc
clc
inc
hlt
inc
adc
sub
cmp
inc
mov
lods
add
jp
gs
cwtl
cmpsl
add
movsl
sbb
lahf
cmp
popf
pop
and
xchg
pop
pop
xchg
enter
dec
jo
or
jb
inc
cli
xlat
bound
cmpsb
jmp
add
sbb
add
js
lds
add
aaa
or
mov
inc
inc
jae
je
ljmp
push
mov
add
pop
js
push
in
fisubrl
pop
hlt
std
mov
pusha
dec
pusha
data16
push
adc
pop
push
jno
aam
imul
jl
jle
add
testb
out
sti
shrb
cmpsb
mov
outsl
xor
popf
mov
repz
loope
mov
gs
sub
sbb
add
or
inc
jns
cmp
or
enter
mov
mov
loopne
outsb
add
test
das
in
rcr
lret
stos
gs
out
repz
sar
fmul
add
icebp
cmpsb
lock
cld
stos
pop
xchg
xchg
sarb
xor
add
or
aas
cmp
mov
rolb
and
daa
sub
or
and
sub
sub
jl
jae
cmp
pop
pop
sbb
sub
xchg
sub
pop
pop
inc
adc
pop
inc
or
roll
xor
push
dec
dec
mov
fnsave
add
pusha
push
push
adc
shlb
std
xor
cmp
outsl
xor
mov
mov
sub
sub
leave
fstpl
das
mov
in
cmp
aas
enter
add
cmp
aam
inc
iret
pop
and
xor
add
sbb
scas
lock
add
out
mov
fimuls
fcmovnu
psrlq
aad
fxch
add
jecxz
movsb
cmp
cwtl
mov
andl
add
dec
pushf
xchg
xlat
xchg
mov
lret
mov
mov
add
mov
lret
jl
in
sbb
das
add
pop
test
xlat
sbb
imul
pop
and
push
sbb
jo
push
add
add
inc
push
stos
cmp
add
push
mov
add
xor
aaa
add
dec
inc
inc
cmp
negb
dec
pusha
inc
jno
fcoms
fisubrl
std
ja
mov
add
mov
add
rorl
add
adc
and
cli
jns
les
mov
ret
clc
and
enter
loopne
popf
inc
mov
mov
xchg
jecxz
fwait
cwtl
add
inc
mov
add
jecxz
mov
mov
test
jmp
lcall
sti
jno
push
mov
rol
rcll
lcall
and
mov
ret
mov
in
cmp
call
aam
mov
popa
push
xlat
mov
add
mov
out
idiv
stc
push
scas
clc
imul
arpl
push
dec
bound
cmp
and
pop
xchg
daa
in
push
mov
add
testb
inc
push
pop
or
dec
dec
pop
mov
cmp
adc
cmp
add
mov
adc
or
inc
dec
outsb
push
ret
push
sarl
jle
rcr
push
arpl
inc
push
fstps
xchg
add
jno
mov
jb
lahf
sbb
fcomip
mov
ret
rcll
sub
push
pop
fidivrs
pusha
movsb
idiv
repnz
loope
jo
pop
adc
push
jmp
push
push
xor
popa
xchg
into
pop
or
inc
hlt
int3
add
cmovne
lea
fdivl
nop
mov
pop
mov
dec
mov
sub
clc
cmp
das
cmp
hlt
push
jp
add
fcoms
jne
add
sub
sbbb
sti
stc
ffree
fistpll
roll
shll
call
add
loop
sti
fdivp
lock
pop
clc
je
fisubl
je
adcb
adc
jbe
add
or
push
sbb
jge
test
add
arpl
jae
mov
inc
scas
xor
add
fcomps
sbb
cmp
jae,pt
int
test
sbb
hlt
clc
in
lods
out
push
mov
add
or
xor
push
or
jnp
mov
push
cmp
inc
addb
sahf
and
add
push
mov
add
push
add
xchg
daa
mov
mov
mov
push
add
or
jg
das
dec
add
dec
scas
xchg
cmpsb
test
and
scas
nop
subb
xorb
repnz
push
call
mov
into
push
enter
mov
jecxz
in
mov
std
out
jle
mov
nop
mov
enter
xlat
call
xchg
pushf
xorb
lcall
lahf
cwtl
filds
inc
xor
adc
aaa
aas
cmp
cmp
iret
jmp
test
add
and
and
jp,pn
es
adc
pop
and
sub
sub
cwtl
sub
add
and
xor
out
cmpsl
lock
dec
add
adc
and
imul
jp
js
jl
push
add
push
cmp
aas
xor
xor
or
or
inc
aaa
adc
or
jp
aas
dec
ds
sbb
add
push
pop
pop
xchg
or
repnz
leave
add
rclb
jnp
popl
xchg
xchg
xchg
nop
sub
cmpsl
sbb
cwtl
sbb
sbb
repz
pop
sub
add
out
pop
lds
and
jo
sbbb
cs
str
fiadds
dec
or
sarb
inc
daa
inc
jge
fs
mov
mov
jmp
add
mov
add
ret
pop
stos
sub
cmp
and
add
jo
fwait
outsb
dec
or
nop
sbb
shl
insl
ljmp
jno
repnz
nop
jecxz
popa
jae
addr16
inc
lock
loop
add
pop
sub
and
aaa
xchg
xor
repz
inc
mov
in
call
cmp
cmp
popa
mov
arpl
jmp
mov
js
sub
in
js
jne
imul
daa
out
push
pop
inc
cmp
cmp
cmp
add
mov
mov
sti
out
cli
call
pop
cmc
std
mov
xchg
int3
ret
roll
into
xchg
mov
movsl
repnz
add
lahf
mov
mov
idivb
idivb
add
ret
popa
mov
int3
lret
or
ror
int
enter
in
jb
call
cmp
mov
push
loope
loop
ret
cmpsb
fld
jecxz
shr
out
add
je
stc
hlt
div
jne
in
jns
cld
add
scas
les
and
sub
clc
or
ds
jge
inc
das
adc
inc
or
cli
es
std
and
mov
insl
mov
mov
test
inc
add
xchg
pop
hlt
cld
add
cltd
sub
dec
or
testl
jge
scas
mov
pop
das
loopne
mov
orb
stc
out
fnstsw
xchg
ror
adc
cld
mov
rcll
inc
daa
hlt
loopne
cmp
es
shlb
sbb
mov
xchg
cltd
sub
mov
jbe
daa
inc
or
mov
adc
mov
jns
cmp
movb
and
add
mov
jb
jle
imul
mov
aad
pop
add
sub
inc
in
hlt
cmp
and
mov
in
addb
lss
mov
iret
or
xor
add
and
lock
push
scas
or
xchg
cwtl
inc
push
pop
out
roll
push
adc
mov
push
mov
mov
cs
mov
add
cmp
daa
std
pop
sarb
jg
push
add
inc
inc
adc
pop
in
sbb
push
add
jno
xor
add
dec
pop
pop
or
dec
imul
pop
adc
add
mov
pop
bound
dec
ja
push
data16
adc
faddl
sbb
fwait
xchg
xchg
xchg
faddl
fwait
cld
clc
call
jecxz
cli
repnz
scas
arpl
mov
add
ror
cli
jbe
pop
aam
aad
jae
nop
lcall
int
sbb
adc
xor
out
cmp
lods
dec
xchg
enter
mov
loope
cmpl
div
cmpsl
add
mov
xchg
add
insl
sub
aaa
sub
and
pop
and
sbb
xor
popa
jge
jg
add
dec
jb
js
dec
add
push
dec
dec
inc
pop
jp
or
inc
dec
aam
adc
add
fcomp
add
mov
inc
inc
sbb
inc
inc
inc
lds
dec
jnp
aas
dec
inc
mov
push
push
and
lahf
in
xchg
loop
pmuludq
xlat
add
adc
stos
sub
mov
or
jae
lret
inc
cmp
repnz
and
add
mov
add
std
je
cs
xor
and
subb
incw
pop
sub
mov
xor
cmpsb
imul
mov
int
or
or
or
into
loope
mov
movsl
les
mov
addl
jle
mov
lret
fbld
jg
add
mov
scas
in
add
dec
leave
inc
iret
add
dec
add
ret
popa
lret
push
and
add
pop
sarl
xor
jmp
inc
push
ret
add
int
xlat
mov
sbb
add
sti
xchg
sub
ljmp
gs
mov
mov
push
mov
xor
add
sbb
test
xchg
enter
lods
decb
mov
mov
add
imul
add
pop
mov
fiaddl
push
andl
shl
push
inc
push
je
pop
add
jb
jle
jp
add
or
icebp
mov
in
clc
cmpsl
cld
out
in
add
idiv
mov
test
pushf
lahf
pusha
movsb
sbb
xchg
movsl
jp
pop
ja
lcall
scas
mov
mov
call
aad
lret
sti
in
in
cmpsl
mov
stos
jmp
mov
mov
fsincos
cmp
add
xchg
sbb
lea
mov
neg
push
std
jmp
lock
in
icebp
jge
cld
clc
ret
aam
or
nop
add
or
or
and
xor
add
or
push
sub
mov
daa
adc
and
cmp
outsb
add
push
sbb
add
cmc
or
faddl
pop
mov
es
inc
add
inc
dec
enter
es
movsl
or
das
add
jae
in
lock
mov
inc
sub
shr
cmp
mov
xor
cmpsb
jge
mov
pushf
xor
add
leave
sahf
mov
enter
pavgw
enter
add
mov
cmp
jns
add
mov
shl
xor
shl
mov
imul
divl
and
add
push
jecxz
or
jge
dec
je
and
sub
out
enter
add
push
pop
aam
out
jmp
shl
aad
out
loopne
out
inc
mov
repz
inc
cmp
push
mov
subb
add
pop
cmp
or
push
scas
inc
and
adc
sbb
cwtl
js
ljmp
add
das
or
and
sub
add
aaa
xchg
push
mov
push
sbb
cmc
addl
mov
scas
push
leave
mov
mov
je
addl
out
and
in
pushf
inc
sti
outsb
jne
jno
repnz
pop
ret
push
pop
add
movsb
dec
test
jg
lahf
je
add
pop
inc
clc
sub
loopne
cmp
subb
fxch
mov
js
inc
repz
loopne
push
mov
and
shlb
je
add
push
sbb
add
dec
mov
stc
mov
into
jle
mov
sub
mov
jp
add
cmp
push
aas
sarl
cmp
mov
add
sub
ja
mov
popf
jg
cmpsl
add
pop
int
push
je
popa
leave
js
call
add
repz
push
mov
mov
dec
pusha
dec
js
js
adcl
sub
sub
sbb
cmp
and
adc
test
xor
jbe
pop
add
pop
adc
jae
pop
cmp
jb
adc
std
push
push
pop
das
cmp
jno
jns
daa
xor
mov
aaa
sub
mov
lsl
sub
imul
adc
ljmp
lods
and
test
andl
aam
mov
or
pop
push
gs
xchg
pushf
dec
cmpsb
scas
lahf
loopne
sbb
sbb
lods
mov
mov
sub
cmpsb
mov
mov
lock
push
cmc
fwait
and
ret
in
inc
orb
int
lret
aad
jmp
popl
cmp
cmp
xor
jge
pop
int3
aas
cli
shlb
add
push
push
xlat
icebp
cmc
out
add
mov
or
push
mov
cmc
cmp
cld
cmp
add
movsl
mov
xor
jp
sbb
cmp
jne
or
xchg
cld
push
jo
nop
add
mov
out
lock
fsubp
shrb
add
jb
test
clc
mov
orl
mov
mov
inc
outsb
adc
out
leave
mov
adc
iret
pop
pop
es
add
mov
inc
negb
lods
icebp
mov
add
repz
cmpsb
or
add
addr16
xchg
xchg
xchg
xor
sbb
inc
lahf
inc
sahf
xchg
scas
xchg
nop
mov
push
sub
lds
mov
stos
sbb
mov
mov
xchg
repnz
ret
in
ror
lret
dec
sti
jecxz
shl
pop
rcl
aam
mulb
pop
xchg
fneni(8087
fucom
filds
loope
jecxz
call
sub
in
lcall
cmc
enter
leave
idiv
hlt
xlat
js
jl
cmp
push
add
pop
or
cmp
and
jecxz
enter
xor
add
adc
and
sub
sub
aas
cmp
or
psrad
and
dec
jb
inc
inc
adc
pop
dec
jg
push
jl
jg
push
push
push
push
pop
inc
repnz
cmp
push
xor
add
push
push
ja
in
add
outsl
imul
adc
add
push
and
push
sbb
dec
add
jle
jnp
xchg
xchg
add
in
in
repz
test
sti
jecxz
clc
cld
hlt
mov
and
mov
test
lcall
ror
rol
out
lds
ret
jecxz
dec
loopne
rol
cwtl
je
add
aad
xlat
shrb
fcmovnb
lds
rcrl
mov
popa
cmpl
lods
loopne
mov
mov
add
int
fsubr
loopne
shrb
sbb
icebp
clc
add
in
test
xchg
rorl
cmp
pop
outsb
data16
push
test
inc
or
sub
mov
sub
ljmp
push
sbb
pop
adc
adc
ljmp
mov
shrb
adc
add
or
pop
pop
jbe
enter
and
and
push
prefetch
pop
pop
aas
adc
or
in
pop
imulb
jmp
mov
add
xchg
lcall
icebp
add
repz
std
jmp
stos
incl
ror
int
mov
out
fmulp
adcb
in
mov
ljmp
cmp
mov
mov
xchg
xchg
out
jb
add
shl
pop
xchg
pop
pop
in
pavgw
in
loopne
lcall
ret
add
test
clc
mov
sahf
dec
rcrb
xor
push
and
pavgb
adc
xchg
xchg
cwtl
add
daa
cltd
nop
sbb
sub
dec
test
std
in
push
ret
sub
add
fsubrl
mov
and
pop
insb
lret
imul
inc
int3
add
adc
pop
add
push
sbb
js
add
add
fisubrl
jo
add
imul
and
int3
mov
mov
push
push
push
add
sub
fcmovnbe
ja
ja
aas
or
cmp
jle
fiaddl
subb
add
scas
push
test
scas
dec
mov
xor
mov
mov
xchg
cmp
cmp
int3
ret
xor
mov
dec
dec
lret
loope
or
lds
in
pop
or
mov
loopne
xchg
roll
xchg
pop
std
das
fcoms
add
cmp
int3
or
mov
dec
cli
cmp
adc
and
leave
shlb
add
mov
inc
nop
add
stc
mov
insb
add
sbbb
dec
mov
ljmp
lods
lea
mov
addr16
in
mov
dec
pop
or
add
pusha
rcll
hlt
push
push
in
jno
cmp
add
sub
xchg
push
subb
mov
js
jo
jno
add
cmp
add
jns
aam
mov
sti
std
out
stc
inc
cli
int
movsb
subb
movsb
test
or
repnz
ror
xchg
mov
stc
test
add
rol
test
aam
sbb
scas
cmpsb
loop
cmpsl
hlt
cmp
notl
sahf
add
fst
xchg
mov
push
mov
lods
pop
inc
mov
lea
xchg
mov
stos
lahf
sbbl
rol
in
mov
jmp
scas
xchg
popf
jno
add
push
sub
jle
imul
pop
sbb
adc
pushf
and
add
xor
push
push
inc
dec
inc
pop
pop
inc
push
pop
dec
push
pop
push
mov
out
pop
pop
mov
sub
jno
jo
and
cmp
sub
add
aaa
insl
dec
pop
dec
push
push
or
push
clc
gs
popa
fnsave
pop
dec
insb
cmc
enter
cmp
add
lock
call
add
cmc
movsb
scas
ret
in
mov
add
shll
movb
cmp
lret
aas
movl
xchg
cmc
cmp
dec
sar
rol
inc
inc
leave
cli
dec
ror
dec
push
dec
rclb
push
repz
fdivrl
pop
dec
add
mov
nop
adc
or
sbb
popf
cltd
adc
pop
push
rorb
adc
xchg
jno
insb
add
dec
pusha
add
inc
mov
lock
sub
add
xor
adc
push
mov
cmp
dec
jno
dec
mov
add
push
insb
rclb
push
aas
dec
push
add
push
and
aad
xor
imul
mov
lcall
mov
push
pop
push
adc
clc
ljmp
pop
arpl
jo
gs
fisubs
aas
mov
inc
xor
and
push
jl
dec
dec
daa
dec
fimuls
mov
lods
in
inc
shl
mov
add
sti
clc
lock
in
popf
mov
into
repz
ret
push
cli
stc
rol
in
sarb
lret
hlt
push
fcmovnu
add
out
out
cmp
mov
mov
movsl
pushf
xchg
mov
or
mov
pop
add
push
loope
mov
lret
enter
loop
xchg
cmp
stos
fnclex
push
fsin
pop
loope
mov
cli
stc
in
enter
dec
lock
shr
ret
add
cmc
mov
lods
dec
js
mov
sbb
sarb
cmp
cmp
sbb
xchg
pop
xchg
loope
sbb
pop
cmp
sbb
lahf
sahf
and
mov
cmp
add
mov
in
cld
pop
ja
add
jp
mov
stc
push
int
ljmp
icebp
fists
test
dec
dec
mov
orb
lcall
das
cmp
cmp
jge
test
jle
aaa
push
and
sarb
xrelease
sbb
sub
add
mov
test
scas
cmp
jo
cmp
fwait
pop
pop
popf
sub
mov
fnstcw
stos
pushf
pop
ret
mov
jge
mov
xchg
and
sbb
or
mov
dec
dec
aam
sub
imul
push
int3
lret
sbb
fldl
loopne
mov
aad
notl
add
hlt
in
mov
in
jo
mov
mov
sbb
fadd
ror
nop
std
ljmp
and
ja
je
push
outsb
sub
arpl
inc
pushw
jb
gs
test
dec
jle
mov
push
add
adc
sbb
out
nop
in
outsl
and
cmp
or
or
jne
ja
push
ljmp
dec
dec
sbb
loopne
pop
loopne
fmull
pop
push
dec
add
or
roll
or
dec
and
inc
pop
pop
pop
mov
jo
gs
cs
adc
adc
adc
mov
movsl
lods
scas
rcrl
ljmp
divl
add
add
out
mov
xchg
add
mov
add
mov
mov
mov
aaa
cmp
mov
cmp
mov
add
jns
inc
test
add
adcl
loope
mov
out
nop
mov
cmp
das
popf
pusha
into
and
push
add
inc
mov
push
mov
sahf
mov
xchg
dec
cmovge
out
inc
xchg
or
pop
or
iret
ficompl
aaa
fldt
imul
aas
mov
add
div
les
pop
in
add
lods
push
or
mov
inc
push
sub
insl
fadds
jno
add
mov
mov
inc
add
push
push
push
push
scas
inc
pop
jno
jge
insb
jns
orb
data16
incl
jno
pop
add
sbb
adc
add
loopne
sbb
sbb
push
sbb
in
add
lcall
jl
pop
mov
mov
sbb
cmp
addb
rcl
popf
xchg
sbb
ret
fcmovbe
fistpl
xchg
iret
inc
into
xchg
fsubl
add
rol
lret
pushf
xlat
out
int
int3
xor
inc
rcl
lret
in
loop
hlt
pop
in
in
sbb
lock
sub
cmpsl
repz
dec
movb
repnz
in
cmp
push
sbb
add
and
gs
inc
pushf
inc
and
jb
outsl
in
add
cmpsl
test
add
xchg
xor
cmp
lock
negb
sbb
push
ja
adc
and
add
adc
add
fisubrs
mov
add
jne
inc
aad
mov
aaa
rcrl
mov
mov
je
push
add
push
xor
or
aas
cwtl
or
sbb
pop
std
jg
testb
ret
mov
icebp
push
pop
xchg
cmpsb
inc
mov
pop
cmp
push
add
pushl
fnstsw
jns
adc
mov
push
xchg
int3
jnp
push
jl
cmpps
mov
add
jle
mov
sub
add
out
push
pushf
clc
jo
test
loope
lods
repz
cmp
rorb
fxch
add
mov
add
add
loopne
xor
sbb
inc
inc
cmpsl
push
adc
adc
adc
sub
xor
and
jne
test
and
out
jg
add
jb
inc
dec
insb
shl
and
jb
popa
rcr
sbb
pop
data16
std
dec
pusha
dec
pop
add
push
add
xor
addr16
or
adc
adc
push
adc
dec
imul
mov
icebp
mul
out
incl
jecxz
loopne
mov
jne
and
sahf
fwait
add
jmp
sti
scas
mov
cmpsl
lock
ret
int
fiaddl
lret
xlat
rol
rolb
fmul
rcl
mov
sub
xchg
rol
aam
popf
mov
add
test
lods
mov
mov
mul
rcrl
jp
divb
rol
mov
adc
ret
movsb
aam
xor
xor
pop
or
pop
push
ds
and
pop
inc
adc
cld
add
inc
dec
push
add
insl
dec
inc
or
add
enter
jnp
xor
adc
inc
cmp
pop
pop
push
sbb
push
pop
pusha
adc
and
xor
sbb
cmp
jb
adc
imul
fcoms
out
aas
outsl
fcoml
imul
subb
jp
sbb
jb
inc
fistpll
pop
rolb
je
or
enter
dec
test
in
xor
hlt
lea
cmp
test
adc
jge
fsubrs
pop
fimuls
add
mov
and
add
orb
adc
pop
cmp
mov
outsl
push
push
lods
pop
cwtl
xchg
mov
fbld
push
cmp
pop
mov
call
aas
mov
add
clc
mov
into
enter
in
mov
scas
loopne
lret
cmp
iret
subb
jbe
xchg
dec
inc
add
test
mov
pushf
inc
add
push
or
cmpsb
leave
jo
in
dec
in
sub
icebp
xchg
sub
cmpsl
adc
or
out
inc
cmp
movsl
xor
fcomps
lock
fcompl
jmp
adc
cmp
mov
jle
or
lret
ljmp
lea
int3
xchg
push
rcr
dec
shl
mov
jne
jne
mov
add
pop
mov
orb
pop
cli
jp
inc
xchg
popf
xor
pushf
lahf
in
call
aad
rcrl
nop
cli
jae
cli
fsubrl
ret
fildl
mov
mov
adc
hlt
ret
push
iret
aaa
fadds
cld
mov
int3
test
sbb
jnp
pop
xorb
cmp
test
test
pushf
mov
add
fldenv
cltd
jle
add
push
sub
dec
mov
jl
and
adc
push
inc
or
adc
sub
sbb
and
adc
jl
cmpsl
sub
mov
adc
cmp
insb
daa
sub
and
and
dec
pop
cld
mov
push
dec
dec
pop
dec
and
sbb
adc
pusha
arpl
insl
jnp
add
imul
push
sub
xchg
dec
fs
fsubr
in
ljmp
mov
loopne
incb
aas
loopne
add
sarb
popf
into
add
pmaxub
push
andl
xchg
rcrl
mov
or
add
push
rclb
lcall
pop
add
mov
js
das
hlt
add
mov
test
in
or
add
xchg
adc
add
fs
or
jne
add
movsl
sub
rolb
add
enter
cld
repz
int
shll
ret
movsb
push
sbb
cli
clc
inc
stc
in
pushf
lds
test
dec
addr16
and
lock
jns
sti
clc
sub
adc
and
repz
sbb
xor
add
sub
pop
dec
dec
pop
cmp
shrb
sub
and
popa
sbb
xor
ljmp
cli
pop
pop
dec
and
aaa
add
les
inc
add
or
or
in
pop
pop
add
xor
jp
ret
cmp
dec
xchg
imul
ret
mov
push
test
adc
cmpsb
xchg
out
test
mov
jle
add
mov
mov
or
xchg
pushf
mov
mov
scas
mov
mov
in
lret
pusha
and
mov
mov
pop
lods
test
lret
push
xchg
xchg
ret
lret
scas
addb
iret
mov
add
lods
lock
jecxz
lcall
inc
test
arpl
push
jle
push
jbe
aas
jo
std
sbb
sub
add
daa
and
es
push
inc
inc
or
arpl
fcoms
pop
pop
adc
push
movsb
inc
pusha
add
xor
js
dec
imul
sbb
mov
pop
pop
pop
fiadds
pop
push
jecxz
arpl
out
xor
sti
dec
add
sbb
fsts
inc
add
stos
repnz
push
sbb
test
mov
add
mov
pop
push
nop
jne
fs
mov
xor
add
and
daa
jnp
mov
add
mov
push
pop
cltd
pcmpgtd
jmp
push
add
jns
inc
bound
cmp
test
mov
test
sbb
fdivrl
jle
mov
jnp
vmread
or
scas
pop
mov
mov
mov
hlt
mov
mov
inc
add
sub
xchg
ret
push
mov
shlb
cmpsl
add
add
das
mov
xchg
insb
xchg
frstor
es
mov
add
push
or
bound
push
mov
add
jnp
cli
mov
stos
cmpsl
sub
sahf
mov
fstps
jns
scas
sarb
jae
add
xor
lret
cmp
xor
out
cmp
insb
add
pop
add
les
lock
int3
icebp
test
inc
jp
jnp
pop
addr16
xorb
test
fimull
call
cmp
or
jecxz
add
mov
mov
lret
add
ret
mov
mov
clc
cs
add
icebp
mov
add
rcl
call
lock
in
push
into
sar
inc
enter
das
shl
adc
push
loope
and
fistps
jecxz
cmc
ljmp
out
out
cli
fldl
inc
xchg
cmc
mov
cld
clc
bnd
call
xor
add
push
or
out
rcll
and
rclb
pop
jb
pop
sbb
sbb
cs
cmpsb
in
add
push
sbb
pop
inc
adc
pop
pop
sub
and
sbb
cmp
pop
pop
mov
add
inc
lock
dec
sbb
dec
inc
std
add
aam
pop
push
push
cmp
idivb
fcmovu
subb
into
push
and
pop
jecxz
push
fidivrl
rcll
leave
jge
mov
mov
mov
fbld
mov
movsl
add
jl
pop
jnp,pt
or
ds
jge
push
cmp
inc
add
pop
clc
fsubl
mov
aad
out
sarl
enter
xchg
iret
adc
loopne
fwait
add
xchg
cmp
cmp
pop
xchg
inc
repnz
packuswb
push
sar
insb
inc
adc
dec
sarb
popa
out
in
jmp
or
in
stc
pop
loopne
repz
mov
in
add
push
push
or
sbb
cmp
mov
dec
frstor
enter
aaa
xor
bound
inc
movlps
cmp
ljmp
inc
inc
push
adc
push
les
push
push
pop
cs
add
cmp
int
add
xor
add
pcmpgtw
push
jae
pop
adc
stos
push
pop
mov
push
mov
and
cltd
dec
jno
dec
inc
popa
jae
pop
jle
nop
jp
dec
icebp
faddl
scas
addb
jne
mov
jmp
pushf
cwtl
sbb
cmpsl
stos
mov
and
and
test
icebp
popf
test
pop
or
inc
out
adc
aam
pop
add
stc
leave
out
ret
lret
test
roll
loopne
jb
loopne
in
fsubr
xchg
add
cmc
jge
repz
add
rcrl
xchg
xchg
fxch
idiv
hlt
aam
jns
test
add
push
or
xlat
enter
add
movb
pop
pop
add
fistps
movsb
sbb
nop
inc
testb
mov
xlat
lods
mov
rorb
jo
gs
mov
and
leave
fisubrs
call
push
fisttps
fdivrs
sub
popa
add
fxch
lret
cmpb
jo
fildl
sahf
jp
pop
jge
scas
ja
roll
stc
fwait
sahf
testb
jmp
xchg
or
fnstsw
pop
push
dec
es
movsb
add
xchg
bound
adc
pushaw
or
cmc
imul
jg
push
pop
sub
repnz
in
inc
cwtl
out
ljmp
lock
xor
add
pop
mov
pop
lods
in
add
fildl
add
or
xor
push
mov
add
inc
cmpsb
or
or
xchg
cmpb
jbe
add
cli
and
add
mov
loopne
int
les
shll
movb
mov
dec
xor
push
jo
scas
xchg
adc
xchg
adc
mov
cmp
add
movl
dec
pop
arpl
cmp
cmp
cmp
sub
outsb
movaps
mov
ljmp
jb
cmp
js
jae
in
maxps
pop
pop
add
push
push
or
xor
aas
add
and
test
sbb
adc
jae
add
mov
add
ljmp
mov
inc
into
inc
dec
cmpsb
add
imul
mov
jno
cmc
mov
popf
ds
icebp
cmp
add
sub
ret
cld
rcr
loope
adc
mov
out
sbb
call
arpl
ljmp
subb
sbbl
inc
les
iret
je
add
orl
fsubrl
pop
xchg
jp
call
cwtl
jp
aam
pop
sbb
add
jl
fldt
push
js
or
lahf
sub
dec
push
rol
xchg
cwtl
add
mov
popa
or
jmp
subb
add
or
sbb
mov
add
and
dec
fisttpl
add
out
popl
pop
push
test
cli
mov
sbb
es
pop
push
add
in
fisttps
in
je
repz
fsubs
push
icebp
add
adc
lea
add
lock
inc
jo
push
enter
movsb
adc
loopne
lods
and
inc
inc
mov
xor
enter
or
xchg
or
and
dec
pop
mov
and
dec
pushf
xchg
stos
and
or
mov
shll
data16
inc
or
adc
imul
xor
jne,pn
in
or
je
inc
jne
jnp
outsb
cwtl
push
push
dec
mov
imul
mov
push
outsb
ja
cmp
ds
sbb
ds
xor
je
outsl
outsb
inc
iret
dec
insl
sub
ds
filds
inc
and
push
sub
fnsave
xchg
push
inc
push
ss
stos
adc
inc
clc
push
or
dec
hlt
fs
out
dec
fnstcw
inc
dec
adc
inc
imul
push
jge
popf
out
shlb
popa
gs
dec
or
or
push
push
inc
push
sbb
xchg
lds
xor
jne
mov
push
js
inc
and
push
or
rolb
les
mov
and
xchg
pop
mov
fimull
cld
inc
pop
les
mov
jo
popa
and
fistps
push
add
jo
or
add
pusha
pop
or
push
fmuls
add
lds
add
mov
jmp
sbb
pop
pop
sbbl
data16
mov
xorl
sarl
jge
sbb
and
sahf
fdivs
push
subl
sbb
mov
insl
adc
sbb
sub
mov
and
push
mov
in
and
xor
mov
movb
lret
and
and
dec
insl
mov
sbb
mov
dec
ret
dec
or
add
rcrb
xchg
sahf
loope
lea
push
cmp
ja
loop
dec
inc
sub
push
inc
orb
les
jl
rclb
cld
rep
pop
add
and
jb
test
das
ss
test
adc
jmp
cmp
rcrb
sbb
xor
inc
cmp
add
into
xor
lods
out
sub
rcll
mov
je
pop
push
add
lds
jo
mov
jmp
movzbl
adc
add
pop
jmp
call
insl
pop
clc
mov
push
add
or
out
add
rcr
inc
add
pushf
xor
mov
mov
test
sub
push
mov
rclb
push
inc
inc
mov
rcll
es
add
jo
call
sbb
adc
nop
nop
add
xchg
movsb
adc
int
jbe
adc
ret
or
push
out
cmp
sbb
xchg
lds
mov
and
arpl
es
adc
es
fs
or
xchg
dec
addr16
sub
ljmp
adc
dec
and
js
sarb
mov
jl
sub
and
in
adc
data16
cltd
adc
popa
jae
xchg
sub
adc
sbb
loopne
test
out
xchg
inc
mov
pop
xchg
inc
push
push
sbb
or
fstl
mov
push
dec
adc
fs
push
adc
data16
jb
mov
adcb
and
dec
push
sub
mov
adc
lods
movsb
xchg
shl
inc
movsb
sysenter
push
aam
jecxz
and
sbb
rol
enter
adc
ret
stos
add
sub
or
nop
xor
insl
push
xchg
adc
enter
and
xchg
cmp
sub
call
mov
les
hlt
or
sub
insl
call
cmp
imul
dec
pop
pop
fsubl
mov
adc
mov
loop
cltd
and
pop
mov
pop
sub
adc
xchg
sbb
or
mov
nop
add
dec
fstpl
fdivrs
mov
mov
enter
jb
ss
iret
test
cwtl
fadd
mov
cmpl
and
or
mov
fcomps
push
push
xchg
lock
adc
pop
cs
shld
lret
mov
inc
sub
mov
fildl
push
mov
shlb
mov
push
ss
mov
cmp
fsubr
inc
mov
inc
push
adc
pop
adc
int
imul
mov
push
xor
adc
pop
adcb
push
push
push
jne
cmp
push
and
sub
in
in
sarb
mov
lea
jmp
jns
mov
orb
mov
sub
fdivl
xor
sub
cmp
cmp
add
adc
cltd
jae
push
cmp
mov
sbb
jl
pop
lea
inc
ljmp
hlt
adc
jo
call
push
sbb
jns
je
cmp
pusha
ficoms
and
inc
js
jo
or
outsb
jmp
repz
mov
adc
scas
or
filds
jno
sbb
adc
add
or
pop
pushf
push
ljmp
fwait
add
lods
jno
cmp
or
lods
or
xchg
jns
pop
out
orb
xchg
adc
aas
add
dec
aaa
or
sbb
add
inc
insb
pop
inc
xlat
or
adc
sbb
push
adc
xor
call
pop
mov
idiv
fidivs
pop
icebp
dec
movsb
add
scas
lret
shll
adc
sbb
scas
fdivp
push
or
inc
loop
cmc
jo
mov
push
in
pop
std
push
cmp
jmp
xor
jle
ja
cmp
cld
mov
mov
decl
pop
icebp
sub
movsb
aas
out
mov
ret
xchg
je
sub
pop
dec
cmp
inc
sub
cmpsb
es
js
scas
sbb
data16
cltd
xor
inc
lahf
or
xchg
scas
cmp
push
dec
and
add
xor
jg
push
push
mov
dec
in
xor
jmp
cli
inc
daa
add
insb
test
adc
je
jp
dec
daa
push
cmp
and
aam
xor
cmp
mov
test
fisubs
arpl
cmp
jo
xchg
rorl
xor
or
fidivrl
call
jb
ror
and
sub
dec
cwtl
mov
push
xor
loope
cmpb
add
sbbb
inc
stos
lods
push
dec
jmp
sbb
xor
icebp
xchg
sbb
adc
xchg
or
sub
sub
out
xchg
cltd
pushl
call
lcall
cmpsb
xchg
mov
inc
idivb
or
sbb
testl
pop
push
dec
inc
mov
xchg
lcall
mov
popf
push
jp
cmp
xor
inc
xchg
iret
inc
cmpsb
push
pop
shr
and
icebp
out
out
and
addl
lds
icebp
pushl
clc
and
mov
insb
sub
jns
push
mov
and
cmp
unpcklps
bound
mov
xchg
int3
adc
add
pop
fs
inc
push
dec
xchg
xchg
or
push
cld
add
jb
xor
xor
es
sub
dec
cmp
sub
sub
add
sub
or
dec
add
mov
pusha
in
into
aas
imul
ja
xchg
adc
rclb
adc
xor
inc
jecxz
test
ljmp
cmp
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
je
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
add
dec
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
xor
add
add
push
jmp
and
sahf
pop
mulb
dec
movsb
bound
push
push
add
add
cmp
push
add
add
imul
push
add
jb
jae
imul
add
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
and
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
add
add
add
add
outsb
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
xor
or
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
add
add
push
jmp
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
and
xor
sub
and
xor
sub
and
xor
xor
xor
xor
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
push
call
pop
pop
not
not
and
push
jmp
pop
pop
imul
push
push
pushfw
jmp
fadds
jmp
fsubl
jmp
pop
mov
jmp
pop
pop
imul
push
push
pushfw
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
pop
popw
jmp
fistpl
jmp
pop
mov
jmp
pop
popl
jmp
fdivl
jmp
mov
push
jmp
pop
pop
mul
push
push
pushfw
jmp
lods
mov
push
jmp
fchs
jmp
fcompl
jmp
fsts
jmp
pop
jmp
movzbl
inc
popl
jmp
mov
push
jmp
pop
popw
jmp
ftst
jmp
pop
pop
pop
div
push
push
jmp
pop
pop
shl
push
jmp
pop
popw
jmp
fsin
jmp
fildll
jmp
push
mov
add
add
add
imul
add
add
out
add
and
mov
add
add
xor
add
jno
add
pop
mov
add
mov
add
add
add
add
je
jne
jb
outsb
je
push
dec
add
jb
gs
xor
cs
insb
add
mov
add
add
add
add
popa
jb
gs
inc
add
gs
xor
fs
insb
add
mov
add
add
add
add
je
push
inc
outsl
outsb
je
js
add
jb
gs
xor
cs
insb
add
add
add
add
add
inc
gs
jb
arpl
fs
jae
add
jb
gs
xor
cs
insb
add
js
add
mov
add
mov
add
dec
gs
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
fs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
add
push
add
push
add
xor
jo
pusha
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
pusha
mov
mov
cld
mov
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
inc
mov
call
adc
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
jae
jne
stos
jmp
call
sub
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
jne
call
jmp
lods
shr
je
adc
jmp
xchg
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
dec
shl
lods
call
cmp
jae
cmp
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
inc
adc
ret
xor
inc
call
adc
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
call
jb
ret
sub
mov
popa
ret
call
sub
popl
add
or
add
popl
add
fwait
cwtl
dec
jne
xor
and
mov
mov
testb
dec
push
push
inc
add
loopne
lret
sub
outsb
pop
mov
pop
pop
dec
sub
sar
push
push
mov
les
incl
or
movsb
pop
enterw
stc
xor
pop
add
ret
or
jne
mov
mov
aaa
cmp
jmp
ret
or
movsl
dec
push
pusha
mov
shlb
pop
pop
sbb
rcrb
add
jge
mov
in
testl
sbb
dec
and
push
push
cltd
push
jmp
pop
mov
pop
pop
pop
jmp
sbb
inc
sbb
cmp
shlb
lahf
sbb
jle
add
in
cld
test
ret
jo
test
push
test
push
pop
outsl
andb
loop
adc
xchg
cmp
or
mov
repz
push
inc
sahf
push
es
jne
mov
mov
aas
xchg
pushf
cmp
dec
inc
sarl
lcall
jb
mov
lret
pushf
mov
sub
inc
mov
pop
clc
mov
pop
pop
sbb
add
push
mov
jmp
shll
aas
lods
imul
mov
iret
test
mov
ss
and
cmp
pop
divl
and
lahf
or
xchg
pop
int3
fchs
test
mov
imul
xchg
std
mov
pop
aaa
mov
lahf
cmpsl
mov
or
or
xor
addr16
mov
mov
cli
aaa
or
sahf
loopne
mov
mov
cmp
comiss
sub
and
mov
pusha
mov
jno
scas
mov
shll
xchg
sbb
xchg
outsb
dec
std
out
test
es
push
xchg
cli
dec
roll
jne
repz
daa
mov
adc
clc
in
pop
or
pop
cmp
pop
out
es
mov
outsl
mov
jp
xor
iret
and
pop
sbb
adc
sbb
jl
out
movsb
imul
loopne
dec
mov
out
add
or
mov
mov
pop
movsb
je
mov
clc
hlt
xchg
pop
push
jbe
cltd
xor
test
jns
cmp
in
xchg
dec
movb
mov
inc
lods
mov
or
mov
iret
cmp
cmp
push
leave
int3
adc
adc
and
add
jbe
cmp
gs
sbb
pop
popa
jmp
loope
lock
cwtl
rolb
push
xchg
inc
push
mov
clc
sub
pop
push
movsl
and
sub
aas
xorl
pop
mov
add
loope
pop
xlat
mov
push
dec
scas
imul
repnz
out
mov
push
push
cmp
cli
push
xor
cwtl
dec
out
lods
adc
popf
pop
test
mov
pop
xchg
shrl
xchg
imul
mov
in
fidivrs
adc
push
jecxz
fdivrp
lcall
popf
rcrb
decl
shlb
push
outsb
mov
and
test
cmp
in
pusha
sub
xchg
pushf
sti
testb
pop
je
fnstcw
adc
push
or
testb
fwait
stos
ficoms
bnd
lods
das
inc
mov
stos
outsb
mov
sahf
sahf
jmp
out
xor
out
mov
movsl
xlat
dec
call
bound
or
jge
sbbl
xchg
outsl
mov
pop
call
xchg
inc
adc
jmp
cmp
movsb
aas
sbb
adc
or
call
subb
outsb
or
inc
xlat
lock
in
fwait
xchg
jl
or
pop
dec
and
push
shrl
mov
mov
pop
aaa
lea
jmp
enter
ret
ret
cmpsb
mov
popf
sub
add
dec
out
rorb
ret
xchg
add
and
sbb
stc
xchg
inc
mov
xchg
ret
add
idiv
fcmovb
xor
loop
cmp
and
xchg
lea
mov
jno
cs
push
xchg
jle
mov
mov
cld
jbe
xor
je
lret
les
dec
loopne
cmc
dec
lea
shlb
adc
aad
bound
sbb
cs
dec
lods
and
xchg
gs
xor
jno
jae
outsl
hlt
lock
outsb
cwtl
fistps
xchg
add
pop
cwtl
xor
and
xchg
push
fstp
adc
xchg
push
pop
or
cmp
jecxz
popf
int
in
jno,pt
mov
add
ret
jl
mov
jg
jb
pop
cmp
cmp
dec
push
push
aam
pop
cmp
pop
movsl
daa
repz
xor
fisubs
testb
mov
outsb
test
fcoml
pop
add
jg
int
arpl
push
in
cwtl
dec
jbe
push
loope
push
jmp
lods
sbb
into
inc
or
xlat
jno
sbb
ljmp
adc
sub
lock
andl
rcrb
dec
or
scas
and
inc
addr16
sbb
loop
mov
shrb
int3
xor
cwtl
push
pop
cmp
cmpsb
dec
stc
leave
mov
insb
xchg
xchg
arpl
shlb
xchg
inc
fsubrl
data16
adc
sbb
sbb
outsb
pop
jnp
popa
les
vunpckhps
ja
inc
or
sbb
out
inc
mov
mov
push
aad
gs
push
stc
cmovg
lods
cltd
and
mov
fsubrl
mov
or
int3
push
pop
outsl
pusha
mov
and
aaa
lock
pusha
jns
xor
xor
popf
rcll
push
jecxz
push
es
push
loope
hlt
mov
scas
clc
shlb
pop
cmp
ljmp
mov
sbb
test
jg
adc
or
dec
mov
mov
mov
fucompp
cmp
aad
nop
dec
into
push
cmpsb
xor
ljmp
pop
es
push
mov
lods
jns
outsl
mov
jno
push
gs
pop
add
mov
filds
sbb
push
dec
jbe
cltd
and
cmp
mov
cmp
movsl
pusha
incb
arpl
bound
pop
aaa
dec
adc
mov
jecxz
sbb
inc
pusha
lods
mov
sub
jnp
inc
push
xor
mov
xchg
sbb
jbe
pop
push
mov
pop
xchg
sub
cmp
int
orl
push
push
arpl
pop
mov
leave
loop
subl
popa
rcll
cli
xor
repz
or
rolb
adc
mov
sbb
out
adc
sarl
xor
sbb
lods
addb
mov
cmp
sbb
fnstenv
negb
stos
imul
icebp
lahf
call
jp
lcall
inc
test
cmp
jp,pn
lds
test
push
fldenv
mov
scas
lea
jl
fists
ja
adc
cmpsl
mov
outsl
ljmp
mov
int
inc
pop
cmpsl
xor
pop
mov
cmp
jmp
fnstcw
add
pop
sub
scas
jno
pushl
push
sub
testb
push
mov
jne
mov
adc
xchg
and
inc
mov
lcall
cmp
pop
les
or
push
inc
mov
dec
cld
jb
push
inc
shrl
xor
cmpsl
xorl
fildll
test
sbb
xor
xchg
paddd
jmp
mov
push
imul
xchg
ds
test
pop
lret
jb
nop
cwtl
loopne
mov
arpl
xor
decl
inc
adc
xor
imul
jmp
sbb
add
repz
mov
mov
mov
stos
or
loop
dec
pop
add
mov
js
sbb
jb
mov
sub
pop
add
adc
sbb
mov
aad
push
jecxz
inc
outsb
loop
and
aad
dec
shrl
mov
int3
and
push
lods
mov
pop
sub
filds
ja
cmpsb
sbbb
adc
dec
stos
rcrl
popa
or
mov
and
fs
sub
subb
fcomps
xchg
enter
in
add
pop
mov
inc
jnp
xchg
adc
imul
cmp
xchg
and
ds
aam
push
xor
lret
push
sbb
xor
cs
xchg
jnp
je
fstpl
mov
js
test
mov
cmp
insl
ss
push
or
add
icebp
pop
pop
mov
xor
push
pop
test
mov
stos
lods
mov
cmp
out
add
xchg
mov
fs
jge
dec
sub
and
mov
push
out
mov
ljmp
sbb
aas
mov
notb
adc
loope
xchg
push
sub
icebp
js
xor
enter
adc
aas
pop
cmp
pop
add
test
and
pusha
sbb
xchg
cmp
inc
xchg
fwait
insl
and
pop
mov
loop
inc
adc
mov
enter
mov
notl
mov
bound
cmpl
xchg
orl
or
cli
cmp
xor
test
lcall
push
mov
adc
cmp
fidivl
push
daa
jmp
mov
scas
push
cli
cmc
xchg
imul
push
mov
mov
pop
cmpsb
lcall
movsl
mov
cmpsb
pop
pop
pop
xor
stos
lea
adc
cltd
xor
test
jbe
arpl
inc
pusha
ljmp
insl
inc
cmp
jns
dec
xor
rolb
mov
jne
shr
fldcw
mov
or
push
adc
ret
or
fistl
and
popa
aad
pop
pushf
or
cmp
add
sarb
pop
pop
rorb
out
out
mov
or
flds
in
pop
pop
cmc
test
sub
rcll
lds
or
fldenv
aas
sub
push
sbb
cltd
enter
daa
push
pop
shll
data16
sbb
es
sahf
sub
mov
pop
rolb
cltd
ret
jp
mov
vmovss
dec
mov
mov
adc
popa
adc
addb
adc
pop
mov
in
add
mov
adc
and
mov
inc
orl
lret
sub
lods
test
ret
lret
jne
out
push
sub
jne
jae
pop
dec
pop
xchg
cmp
jmp
int
je
sbb
in
inc
push
sbb
and
pushf
cmp
jns
mov
fnstcw
lcall
jge
popa
cmp
dec
cmpsl
pavgb
negl
lret
or
les
subb
pop
push
push
xchg
adc
fwait
push
xor
cmp
movsb
adc
outsl
icebp
nop
out
jb
ja
xchg
iret
sub
lcall
xchg
mov
and
out
adc
cmp
daa
push
sbb
adc
into
std
cmp
and
push
loopne
push
cmp
int3
lcall
adc
sbb
mov
out
hlt
inc
pop
popa
cmpsb
inc
repnz
inc
into
loopne
imul
je
jmp
aaa
xor
xchg
inc
or
ss
cmpsb
das
mov
xchg
out
jae
push
in
lret
dec
mov
dec
pushf
cltd
adc
inc
into
ret
out
push
jae
xor
sarl
fs
decb
pop
lods
sub
cmp
and
jnp
insl
jno
push
lret
nop
or
sub
fsubrs
repz
mov
aad
std
or
decb
popf
xchg
fnsave
or
xor
sbb
sbb
pop
out
pop
cmpsb
xchg
or
add
mov
test
in
outsl
mov
pop
test
push
mov
repnz
push
jno
push
cwtl
pop
adc
add
bound
or
cmp
les
loopne
cmp
repnz
xchg
in
xor
adc
add
gs
lahf
popa
inc
leave
pop
xlat
push
or
subb
clc
xchg
test
loopne
out
int3
imul
sbb
push
rclb
js
shl
in
sbb
push
sti
adc
mov
inc
sbb
push
pop
repnz
inc
jnp
je
les
mov
dec
shll
add
insb
sub
pop
fistps
cmp
sarb
pop
cmp
push
mov
dec
dec
sbb
fisttpll
sbb
cmp
dec
sbb
loop
pop
pop
test
arpl
dec
or
dec
jmp
cmp
outsl
xchg
test
loopne
aaa
pop
mov
xor
pop
mov
xor
mov
cmp
push
ljmp
shlb
mov
repz
lret
push
test
pop
jmp
mov
jle
dec
inc
std
push
push
xor
or
stos
adc
bound
jnp
mov
and
or
rorb
add
sbb
insl
not
mov
xor
gs
pop
roll
sbb
mov
mov
jmp
or
sbb
sbb
movsb
or
mov
lods
hlt
repnz
dec
sarl
aaa
stc
fwait
les
xchg
pop
lea
inc
add
xchg
mov
movsb
daa
xorb
int
push
mov
cmpsb
pop
jle
jnp
fdivp
scas
je
call
pop
lret
popa
js
clc
push
adc
xchg
or
loopne
mov
sub
loop
cmp
in
out
outsb
dec
mov
sbb
mov
pop
sub
hlt
jp
inc
lret
adc
call
out
cmp
arpl
je
jmp
xchg
sub
addl
aaa
fisttpll
mov
xchg
mov
imul
lcall
leave
push
fisubs
lcall
pop
sbbb
dec
push
dec
add
xor
cs
mull
lret
or
inc
pop
xlat
xchg
mov
xchg
jecxz
adc
fcmove
sub
mov
loopne
cmpsl
pop
push
insl
stc
push
mov
enter
arpl
xchg
mov
das
mov
dec
xorb
scas
xor
push
fst
fstpl
push
dec
pop
jle
push
or
test
dec
add
in
xlat
fdivrl
push
cld
xor
add
les
ror
push
fwait
pop
imull
inc
fmulp
mov
jecxz
out
sbb
and
sub
stos
pop
push
sub
inc
clc
jnp
sub
jae
lea
push
push
loop
ror
ljmp
sbb
int
inc
adcb
str
gs
insb
adcl
or
dec
std
inc
data16
xchg
cmp
push
mov
sbb
out
sar
xor
jnp
inc
inc
cmpsb
or
inc
sub
push
or
and
sub
inc
xor
mov
push
xor
pop
out
ret
dec
mov
notb
aaa
jg
das
orl
mov
insb
in
lcall
clc
loope
dec
xchg
add
add
sbbb
fidivrl
mov
subb
dec
xor
fnsave
pop
cld
xor
stos
clc
and
mov
dec
inc
lods
outsl
mov
sub
cltd
cmc
inc
mov
push
jmp
sbb
and
imul
jo
cmp
stc
dec
sahf
cli
mov
pop
dec
jle
inc
sub
insl
xchg
loop
addr16
inc
jno
mov
scas
rcrb
mov
xchg
mov
loopne
lahf
jb
xor
loope
rcl
inc
in
inc
outsl
or
dec
sti
stos
dec
cli
jecxz
lret
pop
popf
movsl
cmpl
vmread
sar
int3
scas
in
call
push
sarl
sub
mov
popa
mov
or
int3
aaa
fimuls
pop
scas
das
pop
call
scas
sub
mov
mov
in
pop
loop
repz
mov
insb
dec
out
jmp
ds
loope
pusha
in
jecxz
ljmp
fisubrs
andb
and
sub
ds
push
mov
adc
test
or
jnp
inc
lahf
aaa
push
aad
enter
add
ret
test
sbb
js
data16
sub
arpl
aam
fwait
ret
sahf
lods
push
jg
mov
test
push
sar
cmc
ret
inc
mov
js
xlat
sbb
xorb
bound
cmp
mov
adc
mov
sbb
pop
jno
mov
sub
cmp
cmp
inc
stc
jmp
insl
mov
shrl
mov
xor
mov
dec
and
mov
ljmp
icebp
jl
xor
pop
jnp
pop
mov
dec
add
test
not
mov
or
sbb
xlat
inc
sbb
or
mov
xchg
sub
mov
xor
enter
test
cmp
dec
aam
lahf
push
sub
clc
stos
jle
adc
pushf
loope
push
cmp
jmp
pop
add
in
cmp
cmpl
orl
jl
mov
in
cmpsb
push
lock
push
loopne
xchg
mov
fistps
mov
clc
add
mov
adc
jmp
fldt
inc
and
or
into
enter
or
das
shll
jne
pop
xor
cmp
int
mov
pop
sbb
out
test
or
sub
bound
ficoms
jg
aas
pop
mov
sub
xorb
pop
int
mov
aad
xor
out
xor
imul
push
pushf
mov
and
lods
xchg
xor
push
jl
aam
xlat
adc
jo
ja
sbb
jge
cmp
or
jg
pusha
aaa
xchg
scas
dec
scas
inc
add
lret
mov
push
and
paddb
bound
cmp
outsl
fiadds
lahf
adc
les
stc
stos
xchg
rcr
je
daa
inc
xchg
stc
popf
inc
pop
inc
pop
test
int3
dec
fwait
xor
into
in
push
loope
mov
ss
pop
or
sub
mov
addr16
push
mov
pop
xchg
xchg
orb
mov
push
aad
icebp
xor
int
std
cmp
adc
mov
out
std
mov
data16
icebp
pop
lock
cmp
flds
adc
stos
fnstcw
stos
sbb
std
enter
sbb
out
jae
jecxz
mov
cmp
and
xrelease
ss
int
mov
out
xor
push
mov
pushf
push
rolb
xchg
gs
xchg
lods
mov
pop
jbe
mov
in
nop
jg
push
mov
xchg
sti
push
push
sub
leave
imul
icebp
mov
mov
jle
arpl
push
mov
in
cmp
mov
mov
sub
stos
pop
cmpl
sti
pop
jecxz
mov
fucomip
ja
insb
fnstsw
pop
decb
lods
je
adc
gs
lock
push
sbb
notl
es
pop
pop
adc
enter
sub
xchg
sub
push
cmpl
inc
jl
out
les
mov
cmpsb
mov
mov
leave
rcr
popf
mov
cmc
inc
sub
xchg
add
push
call
scas
sbb
cmp
mov
jg
test
std
test
xchg
sti
sub
jecxz
cmp
pushf
add
mov
loop
std
fsubrl
fnstcw
in
fs
sub
mov
mov
jge
or
add
xchg
mov
and
hlt
stos
dec
pop
ret
pop
adc
xor
inc
sub
test
lahf
sbb
mov
adc
bound
cwtl
mov
mov
movsb
mov
in
mov
mov
aas
jge
stc
outsl
adc
pop
push
or
push
dec
xchg
jo
test
mov
push
mov
filds
jno
in
mov
cmp
xor
scas
mov
imul
lahf
fdivr
cmp
hlt
jns
and
mov
cmp
lods
push
lock
or
sarl
sub
sbb
mov
cli
cmc
rorl
jo
jle
push
push
pusha
push
push
out
clc
jbe
dec
mov
push
jl
pop
inc
dec
sbb
or
les
and
dec
xor
dec
xchg
ret
fwait
into
lods
call
lods
mov
jmp
sub
adc
imull
stos
sbbb
test
mov
in
cld
lahf
mov
popf
loopne
lcall
push
rcrb
jg
nop
xchg
inc
fcoms
mov
decl
das
or
div
cmp
out
insb
adc
imul
jge
inc
xchg
cmpsl
shlb
xor
xor
ficompl
aas
dec
xor
es
xlat
pop
pop
adc
sbb
or
aam
mov
repz
ret
dec
mov
pop
lahf
lock
daa
xchg
jge
jns
jp
mov
in
add
jno
mov
bound
test
aas
mov
mov
pop
pop
cmp
jo
or
dec
scas
push
test
test
outsb
pop
push
sti
bnd
or
cwtl
out
daa
pop
fisubrl
jecxz
sbb
dec
push
push
loopne
in
cmp
push
dec
mov
or
dec
xor
lcall
push
push
shll
mov
push
decl
stos
inc
shlb
jo
lahf
iret
inc
jb
repz
outsl
out
shr
icebp
pop
jg
shlb
cmp
mov
cltd
mov
fisubl
pusha
stc
adc
insb
and
mov
shlb
mov
and
adc
sti
inc
arpl
dec
pusha
sti
fmull
addr16
pop
arpl
inc
and
adc
xchg
lret
scas
lods
sub
add
icebp
mov
dec
nop
aad
rcl
mov
cmp
push
pop
cmp
or
jecxz
or
out
ret
pop
push
loop
xchg
ds
mov
push
loopne
mov
in
lahf
rcl
rorl
inc
fstps
inc
fiaddl
jb
dec
icebp
shlb
and
xchg
add
lret
ret
xor
xchg
sbb
lods
ds
jnp
mov
or
or
insb
aad
ss
mov
sub
movl
cmp
mov
or
add
pop
jge
repnz
cmp
rcr
jmp
and
mov
xchg
imul
jg
pop
inc
adc
xor
popf
inc
les
in
outsb
pmullw
rol
pop
dec
sarb
pop
mov
push
xor
rcr
out
pop
leave
addr16
fcoms
testb
dec
dec
movsl
mov
dec
xchg
cli
xor
insl
in
xchg
cwtl
je
notl
insl
and
repz
and
xorl
push
or
sbb
lods
hlt
fldl
mov
ja
out
jno
push
pushf
xchg
adc
jg
mov
test
fcomip
add
icebp
std
cmpsb
push
bound
int3
sub
xchg
xorb
lcall
push
les
mov
loope
pop
pop
xchg
nop
idiv
insb
push
inc
push
dec
iret
cwtl
hlt
in
add
fsubrs
shr
gs
popf
nop
push
adc
aas
push
push
jecxz
mov
subl
mov
and
das
js
cmp
push
lods
push
pop
je
push
adc
mov
test
mov
mov
adc
test
inc
gs
int
add
ss
mov
ja
in
mov
jb
data16
xchg
jecxz
loope
fildl
negl
mov
or
lret
sbbl
inc
xor
cmc
xor
cmp
mov
pop
js
mov
leave
jnp
div
mov
addb
jmp
xor
pusha
mov
jle
in
xchg
and
out
lock
adc
inc
dec
mov
lock
fists
arpl
ret
or
jae
jnp
mov
lahf
dec
ficomps
jnp
cmp
and
jbe
stos
fsts
in
adc
push
push
addr16
xor
enter
mov
jne
xor
rolb
jns
and
addb
fstps
mov
ret
sub
ret
jns
pop
xor
aad
mov
sti
adc
xchg
sub
cmp
sbb
mov
or
mov
cmp
inc
sti
cmp
mov
addr16
jmp
mov
jge
mov
shr
cmp
add
addl
dec
das
test
push
hlt
lods
cwtl
les
int3
imul
std
jge
jg
pop
data16
push
jle
mov
enter
push
dec
or
adc
jbe
cmp
ds
pop
mov
pop
test
int3
xchg
jmp
add
sahf
pop
dec
test
cmp
dec
mov
or
insb
enter
lcall
xchg
js
or
dec
pop
sbb
in
pop
pop
pop
ror
adc
adc
push
cli
stos
push
sub
adc
pusha
aam
xchg
mov
jo
sbb
sub
std
mov
cmp
lahf
or
icebp
cld
mov
dec
popa
mov
int
push
adc
jmp
jb
fmull
sub
ljmp
std
jns
add
mov
out
add
popa
js
mov
ret
adc
loop
in
mov
es
xchg
jne
mov
ds
jbe
inc
icebp
out
dec
fadd
mov
gs
jge
lcall
sub
xchg
and
jecxz
stos
test
inc
push
or
les
test
mov
es
test
aas
add
rclb
lea
das
or
lret
repz
cs
aaa
mov
je
je
and
push
andb
dec
jae
mov
dec
stos
lock
scas
pop
js
popl
pusha
das
pop
jg
mov
scas
test
inc
daa
jne
mov
imul
lds
inc
xchg
sbbb
xlat
sarl
hlt
cmp
lcall
pop
push
and
sub
mov
jne
shrl
in
jae
push
pop
xor
dec
shl
mov
fisttps
ljmp
xor
sbb
insl
enter
mov
dec
add
rcll
mov
in
sbb
push
dec
mov
daa
mov
das
in
inc
cmc
dec
mov
adc
stos
stos
push
loope
dec
adc
lret
data16
fwait
xchg
mov
addr16
xchg
repz
xchg
add
jle
add
mov
push
push
xchg
add
xor
repnz
push
movsl
adc
insb
lret
into
or
dec
pusha
xchg
ret
shll
cmp
movswl
cld
inc
fs
outsl
lock
dec
sbb
add
cmpsb
sbb
mov
jne
sub
and
mov
push
iret
mov
push
rcrl
pop
mov
into
sub
and
lcall
popa
jge
xchg
add
out
pop
fsubs
xchg
jl
sub
movsl
pop
push
icebp
adc
orb
jb
jge
cmc
ret
mov
rorb
fwait
mov
cwtl
dec
or
jbe
ljmp
push
rol
shlb
mov
pop
lea
push
int3
jge
dec
mov
inc
rol
leave
divb
hlt
mov
insl
jnp
mov
mov
dec
mov
fdivs
xor
lcall
dec
ret
insb
lahf
repnz
imul
aad
inc
jmp
jg
dec
ret
add
addr16
dec
ret
mov
and
popa
push
ja
mov
lds
lods
xlat
push
mov
popa
jg
pop
mov
xchg
push
jae
xor
xchg
mov
es
movsb
scas
and
xor
pop
push
jo
mov
add
mov
aad
ficoms
push
insb
push
xor
and
push
movsb
lock
cltd
fstp
jmp
stos
mov
mov
out
ffree
popa
clc
pop
mov
stc
das
add
cmp
fwait
adc
and
lds
jo
loopne
xchg
mov
mov
pop
pop
pop
add
push
loope
jge
xchg
dec
or
data16
or
dec
cmp
jbe
rclb
in
in
or
out
in
call
loop
push
adc
xchg
daa
nop
and
fwait
cs
outsb
pop
addl
sub
xor
mov
dec
cmp
xor
insl
mov
lahf
jecxz
push
in
add
test
rcl
mov
xchg
in
add
pushf
add
xlat
mov
psrld
dec
fs
out
cmp
or
and
sbb
stos
adc
and
nop
fdiv
or
push
pop
repz
sbb
leave
push
sub
cmpl
ds
add
orb
loopne
push
hlt
loope
jle
in
cld
mov
jno
adc
out
movsl
test
lds
pushf
sahf
insl
cmp
out
or
lret
fwait
leave
jecxz
iret
test
in
in
mov
lock
xor
pusha
xchg
lahf
xchg
aam
addr16
add
sbb
dec
das
mov
pop
in
jne
test
jo
aaa
mov
cwtl
fwait
mov
jnp
je
mov
cli
cmp
mov
enter
and
call
sar
mov
out
lret
inc
cld
mov
ret
shl
dec
addr16
pop
push
iret
insl
mov
mov
stc
orb
fstpl
ljmp
and
insl
sub
push
movsl
sbb
push
cmp
and
pop
inc
and
sub
mov
add
pop
dec
sub
inc
movsl
js
jae
dec
insb
lcall
xchg
push
bound
xchg
jl
repnz
and
xor
pop
shll
in
push
sarb
sbb
aaa
xlat
pop
es
hlt
pop
dec
xchg
movsb
shll
pop
lock
adcl
jge
xchg
add
push
push
mov
mov
sub
mov
mov
mov
aaa
mov
push
hlt
aad
aas
add
xor
sub
dec
xor
sub
cmp
cvtpi2ps
pushf
xor
cmpl
xchg
and
ljmp
lods
shrb
in
lods
adc
xchg
out
pop
loope
push
mov
ret
sbb
mov
scas
bswap
cmpsb
nop
fsts
sub
cwtl
mov
and
xor
push
iret
dec
je
push
dec
xchg
test
mov
fsubrl
adc
imul
dec
xor
add
jnp
push
lods
dec
mov
adc
test
loopne
test
andl
jl
jge
sub
push
fs
adc
fs
int3
xor
cmpsb
insb
out
cli
sahf
rorl
mov
adc
cmc
ds
add
imul
insb
pushf
xchg
test
aad
inc
or
mov
push
push
sub
gs
xchg
mov
inc
cli
jg
ficoms
xchg
hlt
movsb
mov
daa
and
loop
mov
dec
dec
push
lock
test
or
mov
inc
mov
andb
movsb
pop
add
mov
aad
sub
js
das
pop
lods
mov
int3
inc
dec
inc
lea
or
or
insl
push
xor
jb
cmp
xchg
aaa
scas
sbb
push
jp
lea
xor
icebp
sub
cwtl
and
and
out
mov
mov
jmp
aas
cmp
sbb
rcl
mov
xchg
or
movsb
out
sbb
push
cmp
mov
cmp
xchg
or
cmp
sbb
push
hlt
rclb
pop
negl
ds
scas
js,pt
add
das
mov
mov
dec
outsb
xchg
inc
imul
and
xorb
in
push
popa
add
shlb
adc
mov
jo
popf
mov
mov
push
shll
stc
jbe
scas
sub
not
sbb
mov
int
cltd
sbb
mov
jge
add
ljmp
ss
fldcw
lret
pop
cs
int
dec
xchg
jmp
mov
sarb
adc
xchg
clc
lods
stos
jno
sub
lahf
adc
stos
mov
cmp
adc
mov
fldcw
xchg
lods
jp
push
or
test
cwtl
leave
mov
sub
ja
ds
xchg
in
pop
push
pusha
movsb
call
fbstp
and
sub
cmp
mov
fadds
pop
push
push
adc
add
add
popa
mov
cli
icebp
jnp
add
mov
xor
out
mov
push
test
negb
icebp
insb
cld
iret
mov
inc
rcr
imul
gs
mov
push
sub
pop
aad
mov
add
out
pop
incl
leave
and
xlat
dec
rclb
xchg
pop
or
sub
push
stos
arpl
jecxz
jbe
mov
rclb
mov
das
add
or
les
ret
inc
pop
jo
das
add
push
scas
jnp
adc
fnstenv
stos
or
cld
loope
push
mov
sub
cmp
sbb
std
cmp
pusha
sub
lods
pop
int3
inc
push
add
hlt
or
notl
mov
cmpl
cs
jno,pt
push
sbb
add
faddl
cmc
out
stos
add
lahf
fidivrs
add
mov
inc
bound
les
testb
ror
call
cmc
int
cmp
sub
lret
or
fidivrl
pop
mov
sbb
add
pusha
sbb
shlb
mov
jl
loopne
jl
ss
and
into
xor
cld
or
push
add
mov
lods
add
lret
mov
scas
inc
not
test
and
pop
insl
inc
pop
jecxz
mov
sbb
call
push
clc
push
pop
push
xchg
lods
jecxz
add
cmc
jnp
adc
xlat
add
sti
clc
jg,pn
push
mov
push
sbb
adc
mov
mov
xchg
inc
inc
pop
push
sub
and
int3
pop
pop
ret
inc
pop
or
sbb
mov
aaa
pop
lods
imul
and
mov
pop
fsubl
aas
enter
sbb
xor
cltd
or
sti
add
xchg
mov
fstl
add
add
sarb
loope
sub
movsb
jecxz
dec
aam
jmp
xor
jg
xor
add
ljmp
xlat
ds
fsts
jne
push
push
jl
inc
ds
fs
sub
hlt
daa
into
xor
call
in
inc
jle
cmc
outsl
cmp
insl
and
xchg
or
jl
mov
test
test
fldcw
mov
pop
dec
sub
sub
lea
subl
mov
pop
inc
jle
int3
dec
ret
mov
clc
push
lcall
xchg
and
sbb
nop
adc
cwtl
das
mov
inc
pushw
or
in
shrl
jge
lods
sarb
inc
idivl
insl
fcmovnb
pop
push
data16
pop
add
sbb
xchg
insb
repnz
sbb
or
das
std
mov
lret
into
sti
pop
fs
mov
adc
in
cltd
and
mov
in
mov
mov
les
and
dec
lahf
pop
lahf
fs
and
aaa
aam
aam
cmp
fstpt
fcmovne
add
shr
adc
gs
aaa
in
xor
test
out
outsb
das
pop
dec
xor
ljmp
cmpsl
fsts
shrl
mov
jge
aas
adc
test
add
xchg
xor
loope
std
pop
ds
mov
fsubr
insb
add
xchg
test
and
inc
andb
rcll
ret
in
pop
mov
ret
test
stos
je
popf
shlb
mov
mov
hlt
roll
push
fwait
jne
outsb
cwtl
sub
ret
jg
jecxz
ljmp
inc
loop
sahf
push
pop
loope
adcb
jae
loop
arpl
je
cmp
push
mov
rorl
xchg
mov
cmp
icebp
cltd
shll
add
test
addr16
push
in
jg
adc
fidivrl
aad
xor
pop
xor
addr16
jno
mov
push
decb
out
lds
imul
adc
mov
add
mov
sbb
cmp
outsb
insl
je
xlat
in
stos
sub
xchg
lcall
mov
ret
mov
andb
or
jno
mov
inc
and
shl
mov
and
hlt
push
xchg
jmp
xlat
jp
sbb
out
push
dec
mov
sub
inc
rcrb
or
scas
or
icebp
or
or
test
insb
sbb
sub
mov
push
xchg
pop
push
in
test
dec
dec
and
mov
clc
adc
add
lret
in
jg
mov
pop
dec
cmp
test
mov
fldenv
xchg
push
xor
xor
push
or
pop
mov
movsl
shll
outsl
jmp
lods
pop
mov
adc
cmpsl
test
add
cmpsb
push
mov
stc
imul
leave
xor
dec
in
adc
shlb
pop
add
addr16
fistpll
repnz
aam
cmp
push
scas
arpl
std
test
pop
or
scas
rcrl
xor
mov
pop
and
add
xor
inc
mov
negb
xor
xchg
and
std
or
ret
jno
adc
mov
xor
inc
jecxz
xor
jecxz
fstpt
imul
dec
sub
or
jle
sahf
or
cmpsl
sbb
aam
add
mov
or
hlt
jle
push
push
push
popa
pop
call
negb
insl
test
cmp
push
lods
or
nop
in
call
jne
test
or
add
fisubl
push
mov
lods
add
xchg
arpl
hlt
lods
xor
lock
sub
sub
jmp
mov
inc
add
push
nop
out
dec
hlt
sbb
mov
mov
mov
out
addr16
in
out
aaa
dec
mov
sbb
jle
enter
lahf
sahf
and
into
repnz
jno
mov
test
pop
xor
cld
fistpl
mov
testl
inc
cmpl
sbb
popf
out
push
xor
sbb
sub
sti
xchg
cltd
test
sahf
jmp
mov
mov
mov
es
adc
lock
sbb
xchg
lahf
sbb
xor
idivl
sbbl
subb
dec
fldl
test
xor
dec
cmp
inc
sti
rol
mov
cli
out
popf
sahf
pop
scas
test
mov
addr16
jbe
mov
sub
hlt
jne
movsl
call
jo
push
pusha
dec
sbb
adc
data16
jge
xor
dec
lret
lds
in
shr
or
cmc
bound
imul
cwtl
xor
loope
int3
cmp
sub
adc
mov
push
icebp
test
icebp
xchg
sti
mov
push
cmp
fxtract
lahf
inc
popa
pop
movsl
pop
cmpl
lret
fisubl
fldt
mov
mov
ret
loope
filds
or
adc
jne
pusha
push
movsl
pop
les
dec
jb
cmp
test
test
cmpsb
std
imul
mov
lret
imul
mov
sarl
add
dec
pop
add
loope
stos
push
mov
fdivl
loop
and
xor
push
cmpsl
int
dec
push
daa
clc
xchg
imul
jg
lret
mov
cs
test
fcomps
test
xchg
jmp
fnsave
mov
orl
rcl
testb
loop
xchg
jne
shll
mov
mov
dec
and
aam
jmp
ficoml
jne
lret
stc
mov
or
mov
shl
ds
jnp
or
push
xor
pop
in
pushf
xchg
gs
and
test
dec
sbb
sub
lahf
push
nop
push
add
dec
jge
fstps
push
mov
sbb
test
adc
jle
roll
iret
imul
in
movsl
jbe
mov
add
enter
mov
sbb
mov
out
scas
inc
ret
enter
sub
jg
js
nop
aam
inc
add
gs
and
mov
es
nop
outsb
sbb
iret
sar
test
sti
inc
imul
push
sbb
iret
aas
loope
add
pushl
lret
push
in
mov
adc
das
fs
test
aam
push
jp
inc
dec
fistps
daa
outsb
pop
fists
popf
xor
pop
or
xchg
lods
lock
sub
dec
mov
adc
mov
xchg
pop
push
and
and
imull
mov
lods
out
pop
sti
dec
es
pop
push
xchg
in
or
ja
in
dec
cmp
add
inc
pop
shlb
xchg
rolb
outsb
rcrl
js
push
pop
cmpsb
cld
push
clc
iret
mov
ss
popf
pop
mov
push
mov
push
cmp
int3
mov
mov
xor
jge
popf
cmpl
mov
sbb
xlat
lds
or
pop
into
jno
add
icebp
jl
push
sub
mov
push
mov
outsl
cmp
nop
inc
and
pop
test
out
lds
add
popf
xchg
dec
mov
xchg
jno
gs
xor
or
sub
sbb
inc
mov
int3
or
out
ds
stc
dec
rol
add
cmpsl
mov
xlat
inc
adc
mov
mov
notl
icebp
dec
sbb
fldcw
mov
rcrl
pop
xlat
pop
subb
inc
jl
mov
and
or
fadds
xor
adc
repnz
ja
or
adc
xor
xchg
imul
pop
xchg
fwait
pop
and
popa
or
pop
ja
and
inc
pop
push
xor
sti
sbb
jmp
clc
sbbl
sub
mov
push
cli
in
xchg
movsb
subl
xchg
hlt
test
lods
xor
mov
jp
testl
xor
mov
cmp
mov
sub
add
jle
mov
mov
add
push
push
mov
pop
adc
fwait
adc
mov
outsl
push
in
mov
mov
insb
insl
xchg
mov
and
cld
push
inc
lds
in
or
sbb
push
jne
jge
daa
rcrl
adc
shl
in
cmp
pop
icebp
scas
cmp
insb
test
std
mov
dec
rcrb
enter
mov
cmp
sub
push
lock
test
lods
adc
pop
in
shll
dec
fstl
call
xchg
loope
aad
test
lea
mov
push
mov
jle
xor
inc
fidivrl
sahf
dec
sbb
or
push
push
dec
jl
imul
push
push
popf
rclb
outsl
rcl
mov
mov
fwait
and
imul
pop
jno
aaa
loope
jno
inc
lret
loope
inc
gs
out
mov
jl
sbb
xor
sub
jmp
fimuls
pop
ret
adc
jno
push
lret
push
mov
or
xor
sbb
jle
pusha
sahf
addr16
out
fsub
mov
fadds
sbb
mov
icebp
mov
arpl
mov
sarb
imul
cld
movsl
adc
dec
mov
lret
mov
mov
scas
lods
cmpsl
adcb
sar
or
pop
in
es
fwait
enter
mov
pop
fldenv
shrl
shll
sbb
pop
jp
xor
rorl
pop
vpsllw
lret
movsl
lret
repnz
or
mov
std
arpl
pop
sbb
mov
adc
nop
fnsave
repnz
insl
xchg
fstpl
mov
pop
pusha
mov
ds
into
cmp
xor
dec
movsb
rolb
xchg
ljmp
das
in
ja
jg
cmp
push
dec
adc
out
push
mov
sub
testb
repz
emms
mov
dec
js
jnp
inc
es
mov
idiv
jb
test
test
lahf
mov
jl
cmp
test
adc
scas
dec
fwait
xchg
std
jp
shr
sbb
add
add
addr16
push
insl
cld
cltd
inc
adc
popf
xchg
push
mov
push
stc
push
dec
mov
imulb
inc
xchg
enter
pop
mov
xor
pop
aas
out
dec
leave
out
mov
pop
push
popf
movsb
lock
lret
arpl
jbe
testl
enter
mov
enter
or
je
sub
pop
ljmp
sbb
mull
scas
ret
cmpsb
lock
jmp
mov
stos
and
cmp
adc
xchg
push
arpl
pop
pop
rep
push
mov
shlb
sub
loopne
lods
faddl
sub
push
push
mov
mov
ret
xchg
rol
jp
mov
inc
lahf
je
daa
ja
dec
out
icebp
aas
adc
push
or
pop
push
daa
add
pop
cmp
das
cmp
cmpsl
push
push
or
push
mov
movsl
and
push
fistpl
mov
loope
pop
out
dec
scas
adc
lea
cli
imul
mov
mov
das
add
mov
pshufw
fwait
ljmp
enter
cmp
fstpt
mov
stos
lcall
or
std
xchg
aaa
dec
adc
mov
cmpsl
inc
xchg
lahf
daa
inc
mov
sub
xchg
push
xlat
rcr
mov
je
sub
and
xor
xchg
pusha
pusha
xor
xor
ret
movsl
xor
fnstcw
mov
lods
or
sbb
loopne
test
cld
and
loope
mov
pop
stos
jnp
inc
ret
push
mov
lods
dec
notl
popf
test
pop
inc
rol
out
test
dec
notl
arpl
nop
lds
mov
daa
les
dec
push
sub
cmpsb
xchg
loop
dec
dec
movsl
jmp
scas
xor
pop
andb
xor
daa
mov
andl
cmp
ja
jmp
cwtl
fcoml
jnp,pn
ret
mov
adc
jbe
cltd
stos
push
mov
pop
inc
jmp
sbb
gs
in
js
aam
adc
test
xchg
adc
test
cmp
push
leave
je
out
mov
adc
mov
mov
sbb
mov
mov
mov
push
mov
outsl
cmpsl
sbb
xchg
mov
int3
icebp
adc
sbb
popa
adc
insl
jecxz
push
add
loope
es
int3
into
xchg
xchg
cwtl
jns
lods
cli
lret
hlt
adc
xlat
adc
push
xlat
arpl
xchg
sbb
outsl
jle
xchg
fs
imul
out
stc
ja
popa
add
dec
enter
pop
popf
xchg
lahf
mov
adc
push
pop
xor
ficoms
mov
adc
jmp
es
sub
cli
stos
xchg
xchg
lods
lods
mov
into
pop
pop
push
test
jl
dec
push
dec
mov
pop
xchg
bound
xorl
xor
or
dec
jmp
subb
idiv
setae
add
jnp
lds
lret
sbb
aam
xor
jnp
in
clc
xchg
int3
cld
adc
mov
add
pop
jnp
rorb
adc
negb
out
cmp
shr
and
or
hlt
mov
lods
jns
lcall
dec
andl
mov
mov
and
xchg
pop
je
push
xor
int
popa
xor
jle
mov
push
xsavec
imul
mov
xlat
clc
or
cwtl
sarl
cmp
cmp
ret
les
data16
sub
jne
mov
sub
push
outsb
sub
and
scas
push
ret
jecxz
sub
ficoml
or
jb
adc
inc
mov
gs
aam
decl
es
cmpsb
je
lahf
in
pop
iret
sub
pop
ror
cmp
scas
mov
sbbl
pop
divb
xchg
mov
jno
lret
les
fadds
jge
xchg
adc
imul
icebp
add
jp
and
mov
std
jmp
jl
pop
jge
rcrb
and
into
icebp
lea
jb
xchg
dec
xchg
mov
fwait
jecxz
mov
addr16
mov
fstl
not
cmp
fwait
mov
cs
mov
clc
jg
iret
mov
xchg
mov
dec
xchg
jno
xchg
mov
push
cld
push
xchg
add
pop
imul
xor
std
pop
or
or
lock
ss
push
push
scas
cmp
push
add
push
dec
mov
ljmp
lods
or
in
mov
call
lcall
cli
or
ljmp
pop
ds
jb
jmp
fiaddl
pop
lea
xchg
shlb
or
mov
dec
pusha
mov
or
sub
xchg
dec
nop
dec
adc
push
addl
or
pusha
je
jo
adc
sbb
cmpsl
stc
dec
lea
xlat
nop
inc
jge
repnz
jne
jb
lret
jo
ficoml
in
inc
sbb
sbb
imul
cmp
cmp
aam
adc
pop
push
aad
addl
ficoml
xchg
cmp
icebp
mov
cli
outsl
add
mov
mov
shr
mov
or
aam
test
cmp
movlps
aaa
js
mov
gs
dec
cmp
mov
pop
js
dec
adc
outsb
in
je
mov
test
sub
xchg
push
cld
fmuls
int3
rcrb
into
xchg
cmp
adc
fisttps
or
mov
in
fwait
jle
inc
rclb
pop
dec
arpl
xchg
adc
pop
sbb
das
insb
popf
std
push
arpl
lea
bound
sti
jns
imul
cmpsb
shl
loop
inc
add
pop
mov
testl
xchg
jp
push
rcll
stc
scas
sbb
aas
aas
sbb
mov
mov
inc
jg
outsb
push
and
mov
mov
sti
inc
push
sahf
jle
or
cwtl
in
test
or
aaa
lock
push
imul
hlt
loope
xlat
subl
rclb
test
enter
repz
adc
or
scas
inc
cmpsl
dec
jl
in
push
pop
jecxz,pt
pop
or
inc
lret
cmp
jbe
push
into
stos
or
imul
sub
test
std
mov
out
and
aad
out
adc
test
cmc
das
repnz
and
or
sub
mov
push
jno
out
push
shlb
add
mov
xchg
cmp
mov
fbld
jg
addr16
incl
xchg
nop
jae
or
jnp
out
mov
push
mulb
cmp
aaa
enter
daa
outsl
out
les
mov
sub
pop
fadd
dec
inc
cmp
xor
cltd
sub
mov
dec
scas
es
push
and
popa
dec
out
mov
push
mov
enter
adc
mov
mov
or
les
je
lcall
pop
and
fistpl
leave
or
arpl
mov
pop
in
xor
enter
sub
cld
xchg
mov
and
mov
into
inc
push
enter
mov
aam
pushf
ljmp
inc
pop
mov
popa
insl
sbb
add
xchg
mov
scas
out
fisubl
into
lret
out
aad
pop
daa
clc
aaa
shlb
filds
bound
push
loope
insb
jp
xchg
add
adc
or
into
mov
in
cs
imul
fists
leave
out
add
or
outsb
imul
mov
js
cmc
sbb
insb
cmp
and
sbb
into
imulb
addb
decb
jl
rorl
lret
pop
jo
xchg
jmp
jbe
stos
out
jnp,pn
mov
cmpsb
jnp
divl
or
dec
loopne
mov
jl
sbb
sbb
insb
mov
pop
mov
mov
ret
pop
lods
pop
je
xor
push
shrl
xor
and
imulb
push
dec
adcb
stc
clc
jae
dec
sbb
mov
xor
adc
stos
cltd
repnz
pusha
xchg
push
pop
xchg
inc
repz
popa
pop
pusha
cmp
jmp
push
cmovg
jg
loopne
lock
ficoml
xlat
clc
daa
aad
ja
dec
sbb
lret
sahf
push
push
aaa
xchg
cwtl
sub
out
push
imul
mov
xchg
mov
xor
popa
pop
dec
pop
or
adc
stc
add
aam
lcall
jmp
enter
pop
in
inc
shl
and
pop
mov
ret
je
std
add
sti
cmp
test
ljmp
jmp
push
pusha
sub
inc
mov
dec
push
mov
and
dec
int
or
loope
cmp
lcall
pop
out
jl
xchg
jp
inc
iret
adc
sar
xchg
inc
aas
setne
sub
cmp
shlb
add
jbe
pop
out
insl
jmp
repnz
stos
insl
cwtl
les
xor
adcb
mov
xchg
js
xor
cmp
cmp
pop
clc
outsl
movsl
add
jecxz
and
mov
cmp
test
xor
sysret
outsl
xchg
add
hlt
pop
mov
mov
stos
push
sti
rcrb
cmp
rclb
movsb
cmp
pop
jno
notl
unpckhps
pop
pushf
cs
fists
test
inc
icebp
scas
inc
lods
hlt
cmc
pop
pop
int
ljmp
pop
or
and
stos
jmp
sub
jno
push
ss
cli
mov
mov
sbb
mov
adc
jge
fisttpll
mov
xchg
cltd
xchg
jmp
test
inc
push
mov
pusha
xor
or
fs
cmpsb
adc
xor
div
pop
and
out
xchg
or
enter
shll
mov
pop
or
cs
cltd
jg
and
pop
push
push
cld
cld
rorb
sub
insb
mov
pop
pusha
icebp
fdivrl
xchg
cmpsb
cli
call
bnd
push
in
inc
push
jg
rol
dec
sbb
xor
clc
es
pop
lods
fists
loopne
pop
test
mov
lock
call
movsb
in
lock
outsl
dec
aaa
or
shll
or
cwtl
xor
imul
insl
aad
adc
shlb
into
and
ja
cli
and
lret
sbb
lcall
fadds
pop
add
push
mov
movsl
sbb
sbb
outsl
sbb
mov
sbb
dec
ja
sti
mov
mov
mov
pop
adc
fsubrp
and
inc
mov
pop
push
sub
push
shlb
pop
outsb
cmp
mov
pop
pop
jae
xor
xchg
add
jns
es
fs
sbb
jne
cmp
adc
fucomip
mov
loopne
leave
outsl
hlt
inc
gs
inc
clc
and
lret
rcrl
cli
mov
pop
sbb
jbe
cmpsl
je
jae
les
or
cmp
rcrl
testl
xchg
push
imul
shll
dec
add
je
test
in
adc
push
leave
mov
daa
or
mov
lock
xchg
data16
jns
arpl
xchg
fdivrs
and
pop
adc
xor
push
ljmp
in
cmp
pushw
sub
sbb
mov
jbe
mov
dec
inc
int
hlt
inc
jg
mov
cwtl
jnp
jp
jae
enter
nop
mov
fildll
lods
cmp
pop
insb
mov
add
enter
cltd
lahf
sbb
mov
jne
and
xchg
out
jmp
shl
xor
dec
jmp
mov
sub
add
das
aas
shlb
ret
pop
push
mov
mov
shr
mov
fisttpl
inc
rorb
flds
xchg
mov
pop
pushw
jmp
pop
pop
shr
push
pushfw
jmp
fldt
jmp
pop
popl
jmp
fcomps
jmp
pop
mov
jmp
notl
pop
and
jmp
mov
push
jmp
mov
push
jmp
pop
mov
jmp
mov
push
jmp
mov
push
jmp
mov
push
jmp
mov
add
push
jmp
pop
pop
shl
push
pushfw
jmp
pop
pop
shl
push
jmp
mov
push
jmp
popw
jmp
pop
popw
jmp
pop
mov
jmp
pop
pop
pop
idiv
push
push
jmp
pop
add
jmp
fsubs
jmp
pop
pop
shr
push
pushfw
jmp
mov
push
add
jmp
popw
jmp
frndint
jmp
mov
push
jmp
popw
jmp
pop
mov
jmp
pop
mov
jmp
pop
pop
shl
push
pushfw
jmp
pop
pop
shr
push
jmp
fldcw
jmp
fistps
jmp
mov
push
jmp
fyl2x
jmp
fldpi
jmp
fsubrl
jmp
fstpl
jmp
pop
pop
mul
push
pushfw
jmp
fldl
jmp
pop
pop
mov
jmp
pop
popw
jmp
fptan
jmp
pop
pushw
jmp
pop
pop
mul
push
push
pushfw
jmp
pop
movzbw
push
jmp
movl
pop
popa
popf
ret
pop
pushw
jmp
pop
mov
jmp
lods
cbtw
cwtl
push
jmp
pop
mov
jmp
pop
jmp
mov
push
jmp
fmull
jmp
pop
popw
jmp
pop
pop
not
not
and
push
pushfw
jmp
fabs
jmp
movl
pop
popa
popf
lret
mov
push
jmp
fsqrt
jmp
fprem1
jmp
fld1
jmp
pop
pop
shr
push
jmp
fdivs
jmp
notl
pop
and
pushfw
jmp
pop
add
pushfw
jmp
pop
pushl
jmp
fcos
jmp
pop
mov
jmp
pop
pop
shr
push
jmp
pop
popl
jmp
pop
pop
shl
push
pushfw
jmp
pop
jmp
fldln2
jmp
pushf
pusha
push
mov
mov
cld
call
mov
mov
mov
repnz
je
mov
xchg
mov
repnz
mov
mov
sub
shl
lea
add
lods
movzbl
jmp
lods
pop
mov
jmp
lods
push
jmp
fmuls
jmp
pop
add
jmp
pop
pushw
jmp
pop
mov
push
jmp
pop
pop
pop
shld
push
pushfw
jmp
fstpt
jmp
pop
pushl
jmp
pop
pushw
jmp
fisubl
jmp
pop
mov
jmp
pop
pushl
jmp
pop
pop
mov
jmp
mov
push
jmp
pushw
jmp
pop
pop
mov
jmp
mov
push
jmp
pop
pop
mov
jmp
pop
mov
jmp
fninit
jmp
pop
not
notl
and
jmp
pop
pop
mov
jmp
pop
mov
jmp
pop
popl
jmp
fsubrs
jmp
pop
pop
idiv
push
jmp
movzbl
popw
inc
jmp
fildl
jmp
pop
pop
pop
idiv
push
push
jmp
mov
push
jmp
fprem
jmp
faddl
jmp
fstps
jmp
pop
pop
mov
jmp
movzbl
inc
pop
mov
jmp
fwait
jmp
mov
push
jmp
fldlg2
jmp
pop
pushw
jmp
pop
add
pushfw
jmp
fisubs
jmp
pop
mov
jmp
pop
mov
xor
push
jmp
pop
mov
push
jmp
pop
mov
push
jmp
mov
push
jmp
pop
mov
jmp
pop
add
jmp
f2xm1
jmp
fdecstp
jmp
arpl
add
or
jo
or
add
pop
add
mov
jo
add
add
or
add
push
add
add
jo
pop
add
add
add
add
jo
or
add
or
jo
or
jo
push
add
push
add
or
jo
or
jo
or
jo
mov
jo
pop
add
or
add
mov
jo
push
add
mov
jo
pop
add
add
add
or
add
or
jo
mov
jo
push
add
add
add
or
jo
pop
add
add
jo
or
add
add
jo
add
jo
add
add
mov
jo
push
add
pop
add
push
add
add
add
mov
jo
or
jo
or
jo
push
add
add
jo
or
jo
or
add
mov
jo
push
add
push
add
pop
add
pop
add
or
jo
pop
add
or
jo
push
add
add
jo
add
add
or
jo
add
jo
push
add
or
jo
or
add
pop
add
mov
jo
mov
jo
mov
jo
push
add
mov
jo
push
add
add
jo
or
add
add
add
mov
jo
add
jo
push
add
add
add
or
jo
push
add
mov
jo
or
jo
add
add
or
jo
mov
jo
or
jo
push
add
or
add
add
add
or
jo
push
add
or
add
mov
jo
pop
add
push
add
mov
jo
or
jo
mov
jo
add
jo
mov
jo
mov
jo
pop
add
pop
add
add
jo
or
jo
add
jo
add
add
add
add
pop
add
or
add
push
add
mov
jo
push
add
mov
jo
mov
jo
or
add
push
add
add
jo
or
jo
push
add
or
jo
add
add
push
add
or
jo
or
add
add
add
add
jo
or
jo
mov
jo
mov
jo
add
jo
push
add
add
add
or
add
add
add
or
jo
mov
jo
add
jo
pop
add
push
add
or
jo
push
add
add
add
add
add
or
jo
push
add
or
add
add
jo
push
add
add
jo
or
jo
or
jo
add
jo
or
add
add
add
mov
jo
or
jo
add
add
push
add
mov
jo
push
add
push
add
add
jo
or
add
mov
jo
add
jo
add
jo
mov
jo
push
add
mov
jo
add
jo
pop
add
add
jo
add
add
push
add
or
jo
pop
add
add
jo
or
jo
pop
add
mov
jo
or
jo
push
add
add
jo
push
add
push
add
mov
jo
push
add
push
add
add
jo
add
jo
mov
jo
pop
add
or
jo
mov
jo
or
add
push
add
add
add
pop
add
push
add
or
jo
add
add
add
add
pop
add
add
add
or
jo
pop
add
pop
add
pushfw
jmp
pop
mov
jmp
pushw
jmp
fnstcw
jmp
pop
pop
shl
push
jmp
lods
mov
push
jmp
pop
mov
jmp
pop
popl
jmp
lods
cwtl
push
jmp
pop
pushl
jmp
pop
pop
div
push
jmp
fistpll
jmp
fstl
jmp
lods
pushw
jmp
pop
mov
jmp
fldz
jmp
pop
pushl
jmp
pop
pushl
jmp
fpatan
jmp
pop
pop
imul
push
pushfw
jmp
mov
pushl
add
jmp
fnstsw
push
jmp
pop
pop
pop
div
push
push
jmp
flds
jmp
fnclex
jmp
fincstp
jmp
popw
jmp
pop
popl
jmp
mov
push
jmp
pop
pop
shr
push
pushfw
jmp
pop
mov
push
jmp
pop
not
notl
and
pushfw
jmp
push
jmp
pop
pop
pop
shrd
push
pushfw
jmp
pushw
popw
data16
data16
add
pushw
add
adc
adc
fimuls
add
sti
lods
ljmp
fwait
add
mov
fisubs
fwait
or
add
fwait
or
or
push
xor
or
data16
add
data16
data16
fwait
add
cmp
das
sub
add
cmc
push
add
add
fwait
or
add
add
setnp
fwait
add
data16
or
data16
data16
test
pushw
add
data16
fimuls
data16
pop
fwait
add
fwait
or
or
sti
and
and
lods
lods
ljmp
push
gs
ficomps
push
fwait
add
fwait
add
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
fwait
pop
or
data16
data16
popw
data16
or
popw
data16
add
add
add
pushw
add
fwait
add
fwait
push
fwait
or
adc
fwait
or
add
add
add
add
add
or
data16
or
data16
pcmpgtd
data16
add
data16
pop
add
or
or
data16
add
add
fwait
add
call
fwait
add
or
or
add
data16
data16
pushw
or
pushw
data16
add
add
fwait
or
dec
test
sti
and
add
lods
call
subb
add
sti
lods
test
rep
call
rclb
pop
ds
ds
ds
or
push
fwait
or
fwait
pop
adc
ficomps
add
push
fwait
push
fwait
or
or
or
or
or
or
or
or
or
or
or
add
add
add
add
data16
add
add
add
add
pushw
pcmpgtd
or
data16
rolb
fwait
or
or
ficomps
add
pop
fwait
pop
fwait
or
or
or
or
or
or
add
data16
add
add
popw
or
or
data16
data16
pushw
or
das
mov
add
add
das
daa
or
add
add
or
or
add
push
jmp
clc
xor
gs
push
jmp
nop
or
dec
jno
sub
add
inc
cmc
.byte
.byte
mov
add
mov
mov
jmp
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
mov
not
not
and
mov
pushf
popl
jmp
mov
sub
mov
jmp
mov
jmp
movzww
add
cwtl
sub
mov
jmp
mov
add
mov
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
sub
add
pushf
popl
jmp
mov
add
pushf
popl
jmp
notl
mov
sub
and
pushf
popl
jmp
movzbl
inc
mov
sub
mov
jmp
mov
mov
inc
add
mov
jmp
mov
pop
pop
popf
pop
pop
pop
pop
pop
pop
pop
ret
mov
mov
mov
add
shld
mov
pushf
popl
jmp
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
push
push
push
push
push
push
push
pushf
push
push
mov
mov
sub
mov
add
mov
inc
movzbl
jmp
mov
jmp
mov
mov
not
not
sub
and
mov
pushf
popl
jmp
movzbl
mov
sub
inc
mov
jmp
mov
sub
add
pushf
popl
jmp
mov
sub
mov
jmp
mov
mov
add
mov
jmp
mov
add
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
movsb
sub
jmp
fmuls
cmpsl
movzbl
add
cbtw
cwtl
sub
mov
jmp
mov
mov
add
mov
jmp
mov
mov
add
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
movzbl
mov
add
mov
sub
jmp
and
mov
add
mov
jmp
mov
mov
sub
shl
mov
pushf
popl
jmp
mov
mov
mov
add
shrd
mov
pushf
popl
jmp
and
mov
sub
mov
jmp
ret
xor
jo
xor
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
add
and
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
add
and
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
xor
jo
xor
jo
xor
jo
xor
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
add
and
jo
and
jo
and
jo
xor
jo
xor
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
xor
add
xor
jo
xor
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
xor
add
and
jo
xor
jo
xor
add
xor
jo
xor
add
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
xor
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
xor
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
xor
jo
xor
add
xor
jo
and
jo
xor
jo
and
jo
xor
add
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
add
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
xor
jo
xor
jo
and
jo
xor
jo
and
jo
xor
add
and
jo
xor
jo
and
jo
and
jo
xor
jo
xor
add
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
add
xor
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
xor
jo
and
jo
xor
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
xor
jo
xor
add
and
jo
xor
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
xor
jo
and
jo
and
jo
xor
jo
and
jo
and
jo
and
jo
and
jo
and
jo
xor
jo
and
jo
xor
push
sub
sub
mov
jmp
mov
mov
add
mov
jmp
mov
sub
inc
mov
jmp
lea
cmp
ja
mov
lea
sub
lea
and
sub
mov
pushf
push
mov
lea
push
mov
cld
rep
pop
pop
popf
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
mov
lea
sub
mov
jmp
mov
mov
sub
shr
mov
pushf
popl
jmp
add
push
and
sub
ds
push
cmp
into
push
add
pop
cmc
push
add
cmp
xor
xor
sbb
.byte
sub
