mov
adc
add
inc
outsl
outsl
insb
gs
outsb
add
or
add
mov
insb
jae
add
jb
lea
sub
add
push
outsl
notl
inc
add
dec
outsb
je
addr16
and
rcrb
xor
add
jns
insb
daa
push
outsl
jb
add
push
sahf
sub
orb
movsb
imul
add
adc
fdivrp
in
outsb
mov
mov
push
jae
jb
or
inc
sbb
aas
sub
cmp
rol
idiv
cmp
or
sub
dec
bound
arpl
mov
pop
sbb
push
push
jns
gs
xchg
xor
out
sbb
ds
dec
jmp
gs
inc
mov
je
rolb
xchg
mov
and
clc
jmp
adc
cmpl
int3
popa
mov
mov
sbb
or
scas
pop
adc
or
mov
dec
out
addr16
addr16
adcb
lea
push
and
jbe
adc
push
inc
popa
ficoml
imul
dec
add
push
pushf
xchg
xchg
xchg
xchg
cwtl
xchg
nop
adc
xchg
xchg
xchg
mov
xchg
xchg
adc
xchg
xchg
xchg
xchg
jo
push
xchg
pusha
pop
pop
push
xchg
xchg
xchg
xchg
or
dec
dec
fcmovne
leave
enter
hlt
inc
aas
popf
fsubrl
inc
paddsb
call
jb
mov
xor
mov
call
les
testb
mulb
je
movzwl
mov
ss
pop
ret
cmpsl
sub
mov
loop
frstor
testb
dec
jb
idiv
cmpsb
stos
inc
and
je
outsl
outsb
and
xor
or
scas
jp
and
add
and
imul
mov
jle
outsl
data16
push
mov
push
push
je
popa
inc
inc
outsl
push
cld
gs
insb
outsl
jo
mov
adc
cmpsb
outsb
in
mov
mov
mov
mov
dec
add
inc
or
and
or
or
adc
imul
cmpl
adc
mov
xor
sbb
fildll
fildll
add
pop
mov
sbb
cs
jp
add
jp
cmp
inc
and
bound
mov
xchg
sub
adc
push
int
dec
sbb
cmp
in
push
pop
mov
add
fs
call
into
sub
add
add
neg
push
pop
icebp
fnstcw
fistpll
jl
push
cmp
add
divb
fdivrl
and
mov
pop
mov
gs
add
dec
or
mov
add
xchg
push
or
mov
loop
add
sub
movsb
dec
add
movzbl
mov
and
jge
loopne
mov
and
ljmp
push
shr
adc
ret
and
add
ja
or
xchg
mov
cmp
mov
rolb
push
or
mov
les
iret
in
fsubr
shl
or
mov
cmpl
shl
outsl
mov
cld
add
orl
fistpll
xor
xor
add
clc
cmp
jo
andl
mov
cld
sub
mov
mov
mov
jge
jmp
pusha
push
mov
inc
push
and
add
jbe
cli
jnp
out
jl
add
and
js
rclb
pcmpeqd
lahf
or
push
mov
mov
push
cmp
add
push
mov
sarb
add
lock
mov
mov
mov
out
stos
notb
ljmp
cmc
or
sbb
nop
cmpb
jmp
adc
fld
mov
out
mov
add
test
cmp
mov
xor
jle
push
push
push
sti
adc
mov
mov
and
push
xchg
movb
inc
sub
mov
or
ja
pushf
pop
or
std
movl
pop
mov
sbb
add
cmp
ret
adc
pop
pop
jno
fucomip
mov
mov
sub
jae
mov
adc
mov
or
and
or
test
jne
addb
push
push
cmpb
jmp
or
cmp
sti
mov
and
push
push
lea
or
push
inc
or
ja
fistpl
pop
jne
push
push
mov
cmp
jbe
sub
add
repz
test
jne
lods
fimull
push
addr16
scas
dec
mov
sub
fcmovnb
inc
and
loopne
repnz
sub
mov
push
jmp
fidivs
loope
mov
bound
add
cmp
jbe
ljmp
out
mov
adc
xchg
orb
xor
push
or
cmpl
test
jo
fs
mov
stos
inc
ja
xor
pop
mov
add
dec
and
sti
fidivrl
ret
jae
fdiv
and
lods
insb
jo
iret
lea
sbb
mov
rolb
pop
mov
push
pusha
or
lds
movsb
dec
sar
das
imul
add
ret
test
mov
push
jp
mov
xchg
mov
cmp
shr
cmp
jb
addb
push
ja
jmp
dec
and
jae
out
mov
subl
and
add
add
xchg
test
clc
jmp
jbe
cmpb
ss
mov
clc
dec
outsl
xchg
inc
or
je
addl
xchg
jmp
push
sub
idiv
je
cmp
mov
dec
adc
mov
add
sarl
or
jbe
mov
cmp
jbe
mov
adc
add
rcrl
pusha
and
sub
fs
and
xchg
xorl
cmpsb
nop
jns
pop
je
or
dec
jecxz
pop
sbb
adc
je
xchg
jl
insb
and
xchg
movsbl
incl
adc
xor
mov
or
push
clc
push
mov
mov
adc
int
ja
push
test
fldl
mov
jne
mov
push
jne
btr
loopne
sarl
or
jg
cmp
jb
mov
dec
jnp
sub
lea
rolb
jmp
sbbb
ror
ja
cmp
jb
mov
xchg
sti
jge
xor
enter
iret
sub
sub
cmp
and
orl
inc
sbb
mov
mov
push
add
testl
mov
mov
push
pop
addb
or
jae
lea
mov
pushl
mov
add
sub
mov
addr16
jge
and
dec
sub
mov
xchg
cmp
push
aas
cld
rorb
jecxz
push
mov
cmp
jne
lea
roll
fwait
jle
imul
and
dec
loope
mov
testb
pop
mov
cmp
xor
mov
enter
sti
mov
shl
push
xor
sbb
sub
xor
push
clc
adc
jmp
mov
inc
push
inc
insb
pop
xchg
adc
loopne
add
cmp
xchg
cmp
adc
test
push
pop
xorb
xchg
adc
jb
xchg
or
testl
neg
mov
test
pop
inc
jns
ret
mov
sub
ss
roll
test
dec
inc
add
mov
jne
subl
je
push
jl
sub
rorb
pop
pop
cmpsb
daa
test
lcall
in
adc
xor
sub
fcoml
mov
dec
add
aad
insl
inc
adc
cmp
jne
mov
insb
cmpsb
outsb
push
mov
iret
js
sub
mov
scas
ljmp
ret
leave
outsl
xor
stos
jmp
aaa
inc
loopne
add
and
add
mov
clc
and
fmull
scas
testl
sub
xor
testb
jne
cmpl
mov
mov
add
mov
xlat
mov
pop
shll
push
cs
lock
cmp
mov
ret
mov
into
sub
mov
xor
sub
popa
mov
in
mov
lahf
mov
stos
flds
nop
das
fmull
scas
into
sahf
movsl
movl
ret
call
sub
subl
lcall
out
dec
roll
stos
and
in
or
push
or
cmp
jb
sbb
or
xor
cmp
jb
cmpsl
cmp
lock
pop
lds
ret
jg
cld
add
cli
or
es
or
push
mov
jo
sti
aaa
adc
roll
add
hlt
repz
push
sub
mov
and
sbb
clc
fildll
lock
jo
addr16
mov
mov
add
xchg
stos
jg
and
cmp
push
xchg
cvttps2pi
cmp
jb
cmp
cli
sub
jae
add
imul
push
mov
jns
jbe
lea
add
sub
cs
cmp
push
pop
pusha
sbb
add
inc
or
sti
outsl
sbb
shlb
pop
cld
or
mov
jae
roll
push
mov
add
or
adc
mov
jmp
nop
mov
mov
roll
xlat
inc
add
mov
addl
inc
or
lea
pusha
xor
rorl
fdivr
lea
sbb
and
cld
test
mov
xchg
loopne
sbb
add
ljmp
adc
or
rol
subl
nop
xlat
movsbl
or
or
je
xchg
mov
pop
mov
call
cmp
enter
rolb
add
pop
add
xor
andl
add
jmp
or
mov
jp
jl
mov
add
jmp
cmp
or
mov
add
jae
xchg
shrl
cmp
jl
iret
or
sub
mov
daa
in
jge
nop
pop
xor
cmp
add
and
lea
fdivr
push
cmc
popf
mov
lea
or
outsl
jge
adc
fcmovnu
out
fstl
add
js
or
loop
mov
clc
mov
mov
in
mov
faddl
rorl
lods
or
test
jne
xor
push
sbb
mov
adc
adc
mov
and
rclb
adc
je
sub
outsl
ja
ret
and
adc
mov
cmp
jbe
mov
mov
sub
cmpsb
lds
sbb
add
scas
inc
add
fmuls
addr16
inc
or
add
fbstp
jo
mul
ss
mov
loop
arpl
sbb
xchg
add
pop
fisubl
rcr
incl
aas
wbinvd
rcll
xchg
dec
aaa
sbb
add
cs
enter
sbb
add
cmp
jg
es
lret
adc
xchg
adcl
jecxz
sub
scas
icebp
mov
mov
aas
and
mov
add
addr16
mov
push
inc
cli
sbb
mov
arpl
idiv
lods
mov
jbe
or
push
lock
push
xlat
clc
sti
fbstp
ss
mov
push
adc
mov
inc
sbb
add
push
adc
adc
fs
push
testb
je
adc
js
jmp
notl
pop
mov
pop
pop
push
nop
notl
mov
sbb
scas
loop
call
push
mov
jge
data16
and
fdivrl
inc
fmull
scas
jge
sbb
test
daa
dec
cmp
cmpsl
repnz
adc
mov
sbb
popa
sar
pop
out
add
in
sbb
inc
lock
xor
mov
mov
xor
fistpl
pop
mov
dec
pop
and
scas
mov
pop
jne
xor
push
cltd
mov
xor
ss
lock
ret
adc
cmp
sbb
lock
mov
pop
addb
add
or
dec
mov
out
pop
subl
nop
xorl
stos
lcall
pop
mov
pusha
jl
lods
sub
addb
je
add
lods
add
push
mov
data16
adc
or
sbb
or
push
add
dec
jne
mov
jo
loopnew
cld
mov
sub
insb
xchg
add
lea
lea
sub
dec
in
call
lock
add
mov
add
jne
lods
or
push
adc
sar
ja
jg
movb
aaa
adc
incl
sbb
orl
jns
push
or
loopne
jno
cmpl
mov
mov
inc
add
or
jecxz
or
ficomps
and
loopne
jge
push
hlt
clc
jge
mov
cmpb
jb
jo
fbstp
xor
dec
loopne
add
pop
jle
das
mov
cli
cmp
je
add
push
or
xchg
jle
ud0
movq
incl
cmp
pop
add
and
cmpxchg
and
xchg
push
scas
das
shrb
xchg
push
mov
insb
push
dec
jne
ret
pop
add
faddl
lea
xchg
fdivrl
and
lock
test
mov
jo
push
cmp
pop
fcompl
xchg
add
mov
ss
push
xor
mov
call
je
push
loope
insb
pop
jmp
outsl
in
mov
and
pop
fnstcw
in
mov
dec
jne
jnp
sti
cmp
loope
xchg
cmp
test
adc
jne
mov
test
add
push
mov
push
push
cmp
jmp
jne
out
cmp
mov
xchg
mov
je
pop
lahf
orb
mov
mov
xchg
jne
call
sbb
fadds
sub
sub
push
jmp
fadd
test
cmp
and
fmull
int
xor
cmpsb
cld
dec
insb
fcomp
xchg
stos
js
add
in
insl
mov
scas
mov
xlat
decl
cmp
ja
out
repz
jg
or
xchg
in
scas
mov
daa
cwtl
loopne
lahf
lock
push
fdivr
jne
movb
inc
push
or
pop
inc
dec
adc
addl
cs
pop
sbb
test
push
dec
in
stos
popf
dec
out
sub
mov
xchg
adc
xchg
je
jmp
mov
daa
dec
pop
jmp
mov
mov
cmp
xchg
movzbl
fldcw
jg
or
das
js
pop
dec
dec
xor
incl
pop
cmp
incw
jae
jl
and
repz
lcall
jle
andb
add
sbb
cmp
pop
hlt
or
jb
inc
js
jl
hlt
pop
sub
je
xchg
xorb
pop
ja
jle
fimuls
imul
xor
popa
or
cltd
push
xchg
push
push
xor
insb
adc
mov
push
ss
outsb
and
gs
ljmp
loopne
les
and
insl
outsl
jb
pop
popa
imul
popa
jae
outsl
pop
ljmp
fs
push
pusha
pop
jae
popa
insb
insb
and
dec
imul
mov
add
es
sar
les
addr16
outsb
imul
outsb
add
pop
fdivrs
mov
mov
cltd
in
add
imul
sub
fldenv
mov
push
popa
jb
sbb
pop
rorb
sti
cmpb
pop
std
add
sbb
add
cmp
jbe
mov
xor
ja
pushf
inc
add
cmp
jne
cmp
mov
ud0
cmpl
jne
movl
in
inc
clc
or
mov
lock
lock
out
rolb
add
add
iret
mov
mov
pop
fnstcw
shr
cmp
jbe
ja
mov
shl
mov
shl
xchg
push
or
mov
mov
shrl
loope
lea
add
shll
out
adc
mov
xchg
imul
sarl
xlat
mov
xor
setp
shl
icebp
imul
mov
add
mov
daa
xor
in
dec
inc
push
add
out
lock
movl
adc
ret
mov
jnp
inc
add
or
repz
cmp
xor
call
mov
jne
and
mov
jmp
mov
rcll
test
jg
std
cmp
jne
mov
push
fwait
mov
or
ja
aaa
pop
mov
dec
or
and
mov
mov
mov
movsl
mov
repz
jnp
aas
andb
mov
cmp
mov
icebp
mov
test
je
mov
nop
xchg
inc
dec
inc
xchg
mov
je
rorl
jl
mov
pusha
or
jns
pop
sbbb
sahf
js
sbb
call
cld
jae
adc
repz
mov
add
call
xor
xor
inc
xchg
lret
jbe
sub
add
or
shlb
mov
inc
xor
cmp
stos
pop
mov
lods
inc
mov
xor
lcall
bound
rcr
arpl
pop
push
cmpsb
out
dec
pop
mov
mov
add
mov
lds
sbb
add
hlt
fmulp
lret
mov
sbb
out
push
push
lret
mov
call
out
mov
add
cmp
jl
and
sahf
or
or
test
jne
mov
push
cwtl
lahf
cwtl
push
jmp
cmp
ja
movzbl
add
inc
js
pop
nop
scas
and
jo
orl
dec
in
push
push
push
or
dec
pop
mov
pop
pop
pop
jne
or
xor
push
pusha
pop
jo
mov
mov
mov
incl
push
je
pop
jle
cmp
jg
sub
inc
adc
jl
cmp
jg
add
mov
inc
rep
jmp
mov
jmp
lock
call
movb
repz
incl
out
cmp
je
cmp
ja
sub
jg
jmp
iret
addb
sub
or
add
out
push
adc
xchg
mov
jb
mov
sti
dec
inc
xor
dec
dec
pop
popa
scas
cmp
insb
jns
push
fildll
lea
push
imul
dec
or
adc
flds
adc
jl
fistpll
sbb
ret
jle
or
shrl
lret
in
jg
lock
jbe
adc
add
clc
sub
pop
mov
cmc
pop
pop
dec
or
insl
in
or
or
decb
fldl
ret
scas
ret
and
add
mov
push
cmp
sbb
add
inc
adc
ret
and
pop
cmp
xlat
push
fucomp
or
add
fisubrl
cmpsb
add
and
cmpb
add
rolb
jmp
xor
mov
jmp
sub
test
fisubrs
ret
add
js
sarb
adc
push
in
mov
out
mov
aad
inc
nop
mov
cs
jmp
mov
or
jbe
out
add
inc
sbb
iret
mov
lods
jb
and
mov
lock
lahf
add
decb
mov
imul
push
push
xor
ret
mov
aas
cmp
jmp
mov
insb
arpl
rcrl
mov
femms
test
jmp
mov
std
out
cmpl
add
push
mov
ljmp
testl
aaa
add
mov
sbb
out
popa
jb
cmp
ja
sub
sti
int
fucomp
mov
fldcw
fnstcw
pop
push
mov
push
popa
sub
and
pop
pop
push
testb
or
fldcw
fwait
orw
addr16
push
add
fldcw
pop
inc
cmp
jne
push
movsb
adc
mov
test
jb
mov
incl
data16
jae
mov
call
fsubr
sbb
fucomi
pop
cmp
sbb
push
pop
cmp
push
pop
mov
scas
lods
pop
hlt
loope
jle
and
mov
push
and
fdivs
jb
xor
mov
ja
and
adc
jne
xchg
cltd
inc
loope
add
mov
adc
or
shrl
jg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
jg
pop
ja
inc
add
xor
mov
sub
jbe
mov
sub
xchg
orl
lret
jbe
mov
mov
inc
sbb
xchg
push
or
testb
lods
push
xchg
inc
inc
in
ljmp
add
push
outsb
je
mov
mov
cmp
jne
dec
je
mov
cs
out
mov
sbb
add
sahf
loop
push
in
mov
add
add
push
cmp
jne
push
adc
cmpsb
imul
dec
add
adc
add
jne
add
jmp
pop
int3
xor
mov
jbe
cmp
jne
shr
rcll
adc
push
mov
shr
or
iret
inc
dec
dec
add
pop
cmp
imulb
je
shlb
mov
cmp
jne
dec
lcall
dec
dec
dec
add
or
lcall
lret
cmc
jg
cmp
jl
dec
sbb
add
xor
add
push
cmp
adc
fstl
mov
sbb
xor
mov
add
neg
sub
ffree
loopne
mov
fiadds
mov
fidivrs
lods
idiv
cmp
push
sub
inc
add
loop
nop
xchg
sbb
cmp
repz
sbb
push
adc
mov
push
or
sti
push
adc
or
jg
mov
andb
mov
push
rcr
outsb
incl
sti
and
add
je
and
mov
pop
pop
je
xor
dec
and
mov
dec
and
add
sub
or
mov
cmp
ja
lea
push
add
push
mov
lcall
in
int
or
jge
jmp
inc
xchg
neg
jle
js
pop
sub
jmp
inc
mov
and
jmp
mov
filds
add
push
adc
data16
ret
or
stos
aad
push
lcall
mov
mov
push
daa
or
push
cmp
mov
inc
add
incb
inc
push
inc
mov
dec
jne
pop
testb
outsb
and
loope
repz
mov
xchg
push
push
das
data16
dec
sub
add
fs
jl
cmp
dec
pop
jge
adc
push
push
ja
fldt
leave
loop
jns
inc
into
out
sub
je
das
cmp
add
popa
push
in
daa
clc
insl
push
inc
iret
and
push
pop
xchg
jge
mov
test
mov
in
call
fstp
fldt
jnp
inc
mov
fldz
mov
outsl
and
scas
enter
leave
popa
adc
or
or
inc
ds
mov
and
adc
mov
mov
sbb
add
jg
cld
mov
aam
push
test
mov
daa
xor
out
sub
pop
jecxz
add
repz
mov
xor
cs
jbe
imul
cmp
aas
call
mov
bound
cmpb
xlat
fsubrs
cld
fwait
inc
nop
lods
outsb
xor
xchg
push
or
push
rorb
std
jg
in
int3
into
sbb
rorl
mov
push
pop
test
enter
mov
inc
pushl
and
daa
lret
into
pop
inc
test
xchg
clc
js
aas
sbbl
pop
mov
incl
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
inc
aad
mov
dec
pop
js
inc
mov
stos
mov
cmp
or
mov
call
out
sub
imul
divl
jl
xor
cmp
call
mov
stc
lcall
push
inc
mov
push
sbb
sarb
repnz
test
nop
cmp
movsb
lahf
nop
inc
pop
stos
clc
scas
adc
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
push
jmp
dec
jp
iret
inc
bound
ds
push
cmpsb
scas
mov
pop
or
cmp
jne
leave
dec
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmpsb
lock
jmp
pop
mov
and
addr16
repz
mov
subb
and
pop
adc
jmp
outsb
bound
xor
jmp
loop
fimull
sub
loop
sbb
add
inc
push
fsts
adc
mov
mov
adc
add
movzwl
mov
sti
clc
lea
push
push
inc
or
and
or
rclb
insl
jnp
mov
mov
movl
push
clc
xchg
imul
mov
pop
pop
pop
pop
push
adc
cmp
in
ret
ljmp
jmp
jecxz
and
clc
data16
subb
adc
or
addl
jmp
incb
push
inc
push
inc
pop
ret
pop
inc
gs
jo
imul
dec
add
push
dec
popa
jae
push
popa
insb
jne
fninit
fwait
jecxz
jl
in
shlb
pop
scas
jb
lret
aas
xlat
mov
xor
mov
push
pusha
test
scas
push
les
lods
cmc
add
dec
cld
mov
leave
out
cmp
insb
sub
push
sbb
ret
std
xor
pop
push
xor
and
mov
mov
inc
pop
jg
sbb
sete
fdivl
and
jo
lock
aaa
mov
cmp
xchg
xor
sti
std
sub
mov
cwtl
mov
sbb
jle
cwtl
aaa
stc
push
mov
or
loop
add
outsl
test
out
adc
and
das
xchg
push
dec
das
in
fs
aam
mov
xor
jle
fadds
xor
in
pop
mov
or
push
cld
mov
inc
xlat
stos
mov
xor
push
shr
dec
rep
pop
and
rep
mov
mov
sub
jl
push
mov
lods
jp
in
cmp
dec
insb
call
je
pop
mov
add
jae
fiaddl
mov
mov
jg
lock
sbb
jne
jne
lods
mov
mov
rorb
movsb
fmuls
lock
jmp
stc
fdivr
jae
inc
xlat
mov
pop
shufps
and
loope
pop
or
mov
add
add
loop
add
mov
outsl
adc
clc
out
pop
clc
mov
mov
clc
push
sub
push
subl
sub
inc
scas
scas
test
add
mov
shlb
push
mov
aam
js
push
sub
lea
push
sbb
sub
insb
clc
mov
lahf
lret
sbb
jns
cmp
inc
andl
pop
jbe
xchg
sub
sahf
xor
xor
jb
jo
jne
push
or
jbe
fmull
jne
or
je
inc
inc
faddl
lds
mov
mov
cs
add
or
xor
scas
and
sub
sub
mov
mov
cmp
je
mov
daa
cli
xchg
leave
jne
mov
in
push
xchg
jmp
lock
std
lret
test
test
add
scas
je
pop
xchg
std
mov
ret
pop
add
sub
mov
adc
idivl
inc
push
xchg
mov
cmp
pop
je
jmp
pop
mov
jl
xchg
xor
das
shlb
or
jbe
jmp
mov
sub
outsl
push
pop
push
mov
mov
sub
cmp
inc
push
stos
and
mov
pop
mov
test
scas
mov
ds
mov
rcrl
decb
sti
xchg
adc
mov
cmp
sbb
add
dec
out
fnstenv
icebp
fucomi
sbb
add
sbb
and
jne
dec
xchg
test
pop
lahf
loopne
enter
enter
lea
imul
pop
jmp
pushf
xor
call
xchg
in
push
pop
add
mov
jl
sub
fists
rorb
mov
mov
mov
movl
inc
call
fmull
or
xor
push
in
mov
or
inc
or
adcl
xor
dec
pop
adc
push
clc
addr16
shr
jg
sti
xor
push
push
push
negl
and
inc
in
jae
sub
or
sbb
push
loope
test
stos
mov
movsl
add
add
inc
loop
pop
pop
xchg
add
lea
in
push
call
int3
push
pusha
push
push
cmp
mov
or
push
data16
xlat
jp
loopne
add
cmp
add
mov
in
xor
in
sbb
xchg
pop
sbb
cli
push
cmp
je
or
jne
movsbl
inc
inc
jmp
add
mov
decb
push
jecxz
add
nop
loope
adc
addl
loop
fmull
adc
dec
aas
add
cmp
inc
add
jne
mov
inc
mov
adc
outsb
add
daa
push
pop
adc
add
test
psrld
mov
or
loopne
fiaddl
into
cli
out
push
je
fidivl
push
sub
dec
mov
and
xor
clc
add
dec
js
jbe
leave
das
dec
or
xor
ret
and
jne
push
dec
jo
adc
or
jo
fidivs
dec
add
push
xor
vpunpcklwd
cmp
sub
sub
js
sbb
stos
movsl
sub
sub
jg
mov
mov
lock
push
add
xor
jecxz
push
cs
hlt
lods
fbld
adc
out
adc
xor
lock
mov
je
jp
daa
ret
dec
or
decl
loopne
xor
repz
rcl
or
mov
pop
add
lea
mov
mov
or
out
lods
aas
jb
loope
xchg
and
cmp
inc
loopne
lods
lock
aam
push
sub
or
out
shrb
cmp
fsubl
jne
outsb
dec
jne
shll
mov
adc
out
loop
outsl
inc
jmp
lcall
daa
push
cmp
cmp
lds
adc
insl
or
mov
pop
adc
les
or
dec
pusha
mov
jmp
xor
jbe
sbb
outsb
sbb
xchg
push
sub
cmp
setae
cmp
imul
icebp
in
call
or
sbb
movsb
jcxz
and
es
mov
fwait
jp
inc
in
inc
push
mov
jo
mov
out
mov
or
ljmp
mov
pop
push
push
push
push
push
mov
cmp
and
dec
jbe
jbe
inc
inc
dec
movsb
add
fsubrs
mov
jb
mov
add
das
cmp
cwtl
sbb
sahf
test
adc
adc
push
insb
lea
and
push
add
jbe
pop
mov
adc
loop
xor
mov
or
xor
or
mov
ret
push
add
xchg
mov
jg
je
cmp
push
sub
cmp
sub
je
jmp
add
aas
sub
jb
je
jmp
cmp
cmp
lods
sti
inc
adc
jmp
sub
cmp
mov
jmp
push
pushl
int
and
sbb
into
jmp
mov
jmp
mov
jmp
rcrb
push
mov
mov
rclb
add
enter
pop
ret
loop
out
mov
push
lods
xor
imul
je
mov
jo
aaa
pop
cmpb
mov
cmp
outsb
inc
sbb
int
push
push
cli
orb
add
out
pop
push
pushl
xor
scas
add
leave
je
js
flds
inc
bound
push
sbb
fidivs
inc
scas
xchg
sbb
and
jg
enter
push
dec
aas
mov
lret
xor
sbb
cmp
idivb
push
dec
or
cmp
jne
and
push
jo
sub
mov
outsl
or
mov
add
ret
bnd
inc
test
jle
dec
mov
je
add
push
loopne
cmp
sub
xor
adc
test
xor
xor
or
insb
dec
leave
push
mov
xor
js
cld
mov
in
sti
jle
jbe
fadds
mov
lret
xlat
iret
sub
jmp
popf
test
jle
add
adc
sub
mov
jl
loopne
sub
daa
ss
hlt
fisubl
outsl
xchg
ret
dec
xchg
mov
outsl
push
test
push
mov
add
pop
js
dec
jne
pop
pop
fimull
inc
or
in
das
add
inc
xchg
mov
mov
add
mov
add
cld
in
pop
or
cs
dec
jbe
in
push
fdivl
clc
or
cmovbe
add
mov
hlt
pop
pop
push
push
jg
jecxz
adc
sbb
inc
mov
and
pop
sbb
ja
add
mov
mov
imulb
movsl
push
leave
out
cmpb
inc
push
data16
mov
adc
cmp
mov
add
sbb
cld
dec
mov
push
push
xchg
jmp
sbb
cmp
add
dec
mov
xor
mov
adc
lret
sbb
js
stc
add
add
cmp
jmp
outsl
pusha
and
pop
gs
adc
pusha
mov
sub
adc
mov
mov
ret
mov
sbb
icebp
cmp
add
cmp
or
sbb
daa
data16
ds
cmpsl
xlat
call
inc
cmp
xor
jbe
je
mov
sahf
sbb
pop
inc
add
push
sbb
jne
cmp
je
pop
cmp
push
loopne
add
out
insl
jne
call
sbb
cmp
cs
cwtl
sbb
stmxcsr
adc
lahf
ss
add
ljmp
inc
push
test
add
sub
popl
imul
mov
orl
xchg
call
repz
sub
sub
sub
xor
push
lahf
mov
cmp
push
nop
jl
fstps
mov
add
xlat
pop
pop
mov
jbe
and
mov
addl
fdivrl
cmp
pop
sbb
outsl
adc
or
or
push
mov
rorb
push
adc
push
cmp
outsb
jg
shlb
imul
lcall
fisttpl
adc
decl
imul
jge
jle
mov
push
sbb
gs
fsubl
or
fidivl
dec
and
inc
jg
sbb
jp
inc
mov
dec
lcall
jmp
mov
jmp
adc
out
or
push
or
and
add
adc
pop
xor
scas
push
cwtl
pop
movw
dec
mov
movl
push
movsb
xlat
aad
loopne
cltd
mov
mov
roll
or
rcll
or
sarl
jo
cmp
mov
or
mov
shrl
cmpsl
testb
push
sarb
sbb
icebp
and
sbb
or
outsb
add
std
cmp
push
adc
mov
nop
pop
cld
add
jl
lea
sarl
add
jle
xor
je
nop
push
fisubl
pop
jge
mov
clc
lock
jp
jg
push
mov
mov
mov
ret
cmp
je
and
push
jae
cmp
add
jo
out
mov
push
mov
pop
sub
jmp
fists
cmp
or
or
fcmovu
stos
or
or
addr16
in
add
fnstenv
mov
inc
xchg
nop
push
push
push
das
add
add
pop
add
scas
push
jl
pop
pop
xor
push
jg
jle
je
pop
cld
and
cmp
jl
mov
xchg
loopne
loopne
or
mov
sbbb
clc
xchg
lock
pop
inc
out
test
fcomip
enter
jns
push
cld
add
jo
outsl
mov
push
push
xchg
xorb
iret
add
sbb
sbb
cmpsl
std
jecxz
inc
jmp
leave
xchg
xor
adc
or
roll
adc
cmp
jl
ds
fcomip
xchg
jb
mov
xor
add
jo
mov
hlt
inc
xchg
rorl
std
aad
push
sbb
popf
jns
inc
dec
cmc
mov
mov
xchg
adc
jno
cmp
cmpsb
mov
xor
sbb
adc
or
je
fwait
call
cld
dec
jmp
mov
or
push
jo
and
ret
cmp
nop
push
dec
jne
mov
idivb
loopne
add
fldt
and
aaa
add
dec
push
stos
push
push
add
xor
ret
xchg
mov
jne
sahf
xor
call
dec
pop
sub
jg
pop
lea
jmp
and
cld
outsl
push
jle
xor
sub
jne
push
mov
sub
push
push
xor
sar
and
sub
mov
xor
je
push
fwait
or
fcos
jg
mov
add
jns
mov
cmp
pop
and
or
cmp
cmp
pop
sub
clc
inc
dec
aas
rcr
xchg
ret
cmpsb
and
or
inc
cmp
xor
pop
movsb
dec
cmpsb
movsl
bound
push
stos
insb
addb
pop
adc
mov
sbb
jnp
or
loopne
mov
daa
inc
adc
xchg
loopne
test
push
adc
lock
cmp
jge
sub
jle
shlb
cmp
add
loopne
xor
stos
adc
jmp
bnd
xchg
insb
pop
sbb
adc
push
sub
inc
pop
aaa
xor
outsl
fdiv
dec
jl
int3
jge
mov
ss
aas
inc
ljmp
popa
clc
xor
push
pop
repz
inc
inc
add
dec
pop
lahf
lds
sub
dec
jge
cmp
rorl
mov
mov
ljmp
loopne
fimuls
adc
lock
push
inc
outsl
add
push
mov
cmpsl
xor
or
clc
rcr
enter
cld
fdivrl
fidivrs
cmp
dec
call
add
mov
add
inc
neg
scas
jge
test
push
stc
jp
or
inc
dec
stos
cmp
jle
adc
or
jb
add
xor
and
xor
and
in
scas
jnp
ret
mov
sub
push
pusha
loopne
adc
cmp
xor
push
xor
push
sub
or
push
cmp
roll
jl
daa
and
xor
mov
xor
outsb
mov
xor
jne
mov
jmp
mov
xor
push
icebp
arpl
mov
xor
xor
or
add
pop
sarb
scas
sbb
loopne
lcall
mov
jo
aam
sub
das
push
fildll
out
push
cmp
jno
jmp
xor
xchg
jo
and
mov
sbb
jle
sbb
adcb
mov
pop
or
add
push
add
pop
in
dec
cmpsl
js
inc
mov
xlat
mov
push
clc
add
mov
mov
sbbb
or
xor
adc
sub
xlat
inc
call
fldl
outsl
jecxz
repnz
test
popf
push
sbb
insl
add
andl
inc
push
jmp
cld
dec
sahf
lret
pop
mov
inc
inc
jmp
mov
lock
lret
inc
pushf
pop
nop
and
lret
cmp
inc
sbb
sarb
or
push
fcmovnb
push
push
pop
pushl
mov
mov
notl
sub
add
or
mov
add
adc
loopne
nop
mov
push
test
inc
cld
mov
shr
scas
cmp
cmp
faddl
xor
mov
inc
xor
mov
mov
add
data16
mov
dec
sbb
adc
cvtps2pd
or
adc
cmp
mov
rolb
test
pop
dec
cmp
nop
clc
jecxz
idivb
or
ret
cmp
push
jmp
rolb
sbb
or
movsb
cmp
push
push
mov
xor
lcall
or
add
jle
mov
add
mov
sub
adc
sbb
jp
icebp
popf
inc
pop
xchg
and
xchg
lock
or
push
mov
stos
xchg
xor
aaa
pop
je
or
shlb
pop
bound
lcall
out
fisttps
shlb
push
add
leave
cmp
add
pop
movsb
and
je
cmp
xchg
cmp
je
cmp
je
loopne
jl
cmp
push
cmp
je
mov
notb
jp
jg
jmp
adc
jae
ret
or
ljmp
xor
aad
push
or
sub
dec
cs
pop
aas
push
fnstcw
adc
xor
add
loopne
sub
cmp
rclb
sbb
out
clc
or
cmp
adc
mov
lret
stc
add
mov
fcoms
fstpt
out
and
shrl
pop
test
push
mov
inc
mulb
jmp
pop
int3
and
lret
fldpi
in
pop
cmp
std
mov
push
add
add
repz
sub
pop
repnz
mov
inc
shr
sub
stc
je
add
sbbb
icebp
ret
cmpsb
and
icebp
jmp
ficomps
dec
and
pop
xor
xchg
daa
orl
mov
adc
jg
loopne
sbb
pusha
cmp
jnp
sub
jp
inc
pop
push
outsl
push
daa
cmp
jp
add
lock
ret
push
movntps
and
push
pop
xchg
orl
jae
adc
lret
dec
sbb
push
hlt
or
out
add
scas
sbb
scas
push
dec
rcrb
std
mov
lea
outsl
push
in
mov
push
add
sarl
add
adc
iret
xchg
mov
or
lods
xor
push
or
rorb
push
or
jo
jo
cmp
jb
pop
and
push
mov
sub
adc
les
enter
mov
sbb
push
push
stos
xchg
jmp
adc
jbe
je
orb
dec
push
pop
jmp
mov
mov
push
mov
jns
xor
mov
cwtl
lea
cwtl
adc
and
test
add
adc
test
push
loop
rorb
sbbb
mov
add
aaa
test
insb
and
mov
in
inc
push
sub
movsl
push
popa
jg
sahf
dec
xchg
pop
jb
push
dec
dec
push
adc
jne
pusha
dec
inc
sub
mov
fimull
push
cld
push
push
loope
sbb
dec
xor
add
or
lock
pushl
incb
pop
add
inc
call
cli
xor
xor
mov
mov
loop
add
je
cmp
jmp
iret
xchg
cmpsb
sbb
iret
adc
popa
push
mov
andl
out
ret
or
push
cwtl
mov
mov
adc
cmp
push
mov
mov
cmpl
adc
and
mov
out
mov
and
add
xchg
notl
lret
ret
add
or
inc
push
add
ljmp
fcos
movl
push
adc
push
nop
xor
sub
les
jl
dec
adc
push
out
lods
fwait
inc
inc
sbb
inc
jmp
cmp
jne
les
inc
and
sub
inc
idivl
je
sub
out
scas
xor
das
and
inc
std
ljmp
roll
or
add
sub
jb
add
or
jmp
subl
mov
xor
push
getsec
jmp
push
cmpl
je
sbb
inc
jmp
jl
andl
mov
pushl
jmp
jg
mov
cltd
xor
gs
adc
movsb
loop
mov
andb
xor
inc
ret
or
xor
mov
adc
dec
dec
push
mov
loop
mov
rolb
neg
or
pop
stos
mov
xor
sbb
dec
inc
int3
jne
adc
sahf
or
and
jg
inc
or
pop
xorl
addl
orb
xchg
and
sub
call
jmp
add
setb
jmp
setl
cmp
mov
pop
je
dec
add
pop
je
pop
movsb
jmp
xor
mov
mov
push
inc
and
or
add
dec
aam
ret
inc
mov
cli
pushw
decb
inc
jge
xor
mov
mov
xchg
das
lods
pop
inc
test
repnz
mov
ljmp
jg
pop
pop
mov
pop
mov
or
stos
dec
jne
adc
dec
xchg
pop
or
adc
or
add
nop
test
add
sub
fmull
add
xor
testb
dec
into
in
imul
cltd
idiv
cmp
je
andl
mov
subb
cmp
jne
mov
cmp
jge
xchg
mov
pop
mov
test
imul
sub
push
jnp
dec
clc
lea
mov
push
int3
mov
pop
decl
stos
imul
ds
in
xchg
cltd
pusha
in
jge
or
push
fsubrs
in
push
xchg
js
in
bound
lds
dec
in
dec
inc
dec
mov
lods
lret
pop
or
sti
cmpsl
lock
mov
clc
xlat
sub
lahf
test
insl
xor
add
cmpsl
cmpl
jle
cwtl
or
ja
xchg
xchg
fidivrs
arpl
inc
adc
jnp
add
adc
lcall
insl
jl
push
dec
jne
enter
or
cld
xchg
nop
push
xorl
sbb
dec
clc
jne
ret
pop
adc
scas
jge
adc
push
int3
pop
pop
outsl
pop
adc
dec
lods
call
jl
push
sbb
in
dec
jg
cmpxchg
dec
jl
push
push
mov
incl
mov
lds
pop
pop
jo
ret
xchg
fiadds
lods
loop
clc
inc
in
sbb
test
adcl
xor
loope
clc
ret
or
mov
adc
insl
mov
or
mov
add
mov
mov
mov
push
mov
mov
mov
add
add
inc
jle
xor
cmp
dec
andb
jae
jae
pop
fmuls
or
or
mov
push
cmp
clc
jmp
sbb
cmp
or
aas
or
xor
sub
sbb
cmp
jne
popf
pop
int
xor
enter
clc
jo
hlt
or
in
push
mov
xor
movsb
gs
je
push
jno
outsb
imul
mov
sub
call
mov
inc
je
and
lea
pop
lahf
scas
adc
mov
ja
fdivl
js
pop
sti
sbb
push
jl
add
push
mov
arpl
pop
push
std
hlt
inc
sub
ljmp
fisubrs
neg
imulb
lea
jecxz
push
lea
xchg
adc
out
inc
cmp
inc
jg
movb
addr16
push
pop
xor
aam
mov
loopne
mov
out
je
jmp
je
fidivrs
fmull
clc
cltd
shrb
sbb
sub
dec
push
rol
xchg
movl
andl
push
je
sbb
pop
cwtl
ja
decl
gs
gs
xor
cs
insb
dec
inc
gs
test
decl
addr16
popa
je
dec
popa
insl
gs
daa
ja
push
sub
loopne
and
aas
inc
lret
pushf
movb
xor
sbb
push
add
mov
inc
lock
inc
push
sub
xchg
pop
push
xchg
iret
call
push
cmp
add
mov
adc
data16
sub
out
aaa
scas
lret
push
push
cmpsl
inc
ror
shl
imul
clc
jg
or
aam
mov
repnz
mov
arpl
adc
and
dec
sti
arpl
push
in
repz
push
mov
xchg
xor
cmpb
mov
cmp
or
push
fs
jnp
enter
fcomps
negb
add
cmp
lock
cmp
jne
adc
out
sahf
push
push
inc
xorl
mov
fildll
imul
adc
jbe
je
das
outsl
repz
adc
add
and
fbld
pop
fstps
mov
jae
aaa
sbb
dec
xlat
inc
sahf
movsb
lahf
lock
aaa
push
inc
xchg
sbb
jecxz
adc
mov
add
pop
ret
call
sbb
pushf
mov
sbb
mov
movsb
out
push
mov
sub
mov
testb
mov
mov
adc
push
mov
dec
jl
add
push
aad
scas
loop
ret
add
jle
insb
cmp
mov
xor
sub
inc
mov
sti
dec
sbb
icebp
pop
xor
xor
add
out
jne
mov
push
test
outsb
adc
cs
loope
inc
int3
push
loope
cld
inc
js
inc
sub
mov
repnz
data16
cmp
add
jmp
mov
dec
push
push
push
cld
jne
mov
les
adc
cwtl
in
pop
pop
mov
mov
inc
or
js
testb
test
push
pusha
pop
mov
jb
mov
mov
push
inc
ret
xor
je
sbb
ja
pop
mov
sub
mov
rclb
pop
in
pop
sbb
shr
mov
pop
pop
push
lea
cmpsb
adc
pop
mov
js
add
pop
pop
ret
sahf
mov
xor
cltd
push
or
mov
dec
adc
xor
shr
mov
outsb
sbbb
aaa
or
xchg
test
sub
sahf
lock
outsl
push
push
js
xor
into
inc
adc
inc
or
inc
adcl
or
in
lret
out
jo
mov
mov
test
xor
sub
push
fidivl
leave
mov
jmp
xor
dec
inc
cmp
ja
popl
xor
pop
cmp
pop
add
pop
cld
ja
ja
or
lret
loopne
sbb
adc
sbb
fwait
divb
add
xor
add
jmp
pusha
add
fstpl
dec
lret
shlb
cmp
mov
add
mov
add
dec
movb
jmp
lods
xor
je
sbb
or
clc
mov
pop
add
cmp
lea
ret
fcomps
test
mov
inc
andb
lods
pop
sbbb
inc
xor
dec
imul
jg
jmp
hlt
movzbl
inc
test
je
add
jae
add
je
cmp
rol
sti
orb
mov
push
inc
and
push
or
mov
push
mov
mov
inc
dec
cld
data16
xor
out
adc
inc
nop
jae
cmp
shl
movb
loop
cmp
ret
mov
test
shrb
lock
adc
push
cmp
xorb
sbb
sub
jb
inc
pop
xor
negl
in
js
cltd
bound
fs
lods
jo
aas
jb
cmpsb
dec
xchg
arpl
cmp
fistpll
rorb
ljmp
das
inc
xor
cmp
inc
mov
jmp
sbbb
or
in
mov
ja
or
cmp
push
or
les
imul
mov
popa
jmp
cltd
xchg
ja
adcb
pop
imul
imul
pop
out
icebp
inc
mov
aam
inc
pushf
push
loopne
mov
push
and
mov
pop
pop
or
je
test
and
pop
popa
inc
cmp
jne
mov
sbb
in
imul
ret
mov
xchg
jecxz
mov
inc
xchg
popa
fldcw
sbb
sbb
sbb
or
pop
mov
jbe
pusha
addr16
notb
sbb
add
or
clc
or
lahf
mov
fmuls
add
lock
push
push
cli
xchg
jmp
insb
xor
xor
mov
push
rorb
jne
mov
mov
adcl
mov
mov
and
add
add
sbb
clc
pop
push
into
mov
xchg
fildl
push
adc
hlt
xchg
das
inc
mov
cmp
test
cmp
cmpl
movsl
and
mov
push
mov
mov
sub
push
outsb
add
mov
pop
ret
mov
push
outsb
and
fcomps
sbbb
and
imul
clc
add
mov
fcmovnb
mov
pop
add
and
fdivrl
cltd
ss
hlt
mov
int
in
or
or
mov
jge
aaa
cld
mov
arpl
push
incb
cwtl
test
movsb
adc
fdivs
mov
ss
out
ljmp
and
call
sbbb
cmc
and
outsb
add
add
lret
push
or
insl
loopne
add
push
dec
inc
test
mov
add
xor
jmp
std
ja
mov
or
push
gs
mov
adc
mov
jle
jb
jns
fs
imul
inc
push
pop
imul
outsl
arpl
inc
gs
jne
je
dec
outsl
je
insl
jp
dec
imul
arpl
jbe
dec
outsl
inc
arpl
idivb
xlat
lods
or
or
or
lock
xor
xor
outsl
insl
bound
outsl
js
aas
push
ds
push
imul
outsb
cmp
prefetch
or
dec
ja
inc
xor
je
push
pusha
shlb
cmp
jns
add
cld
sub
cmp
lock
cmp
aam
cmp
cmp
int3
enter
cmp
cmp
cmp
lods
test
mov
pushf
cwtl
xchg
nop
cmp
cmp
mov
cmp
jl
je
cmp
cmp
insb
push
cmp
pop
pop
push
push
cmp
cmp
dec
dec
inc
inc
cmp
cmp
cmp
xor
cmp
cmp
sub
and
cmp
cmp
sbb
adc
cmp
cmp
or
add
pushf
fcoml
cld
sub
pmuludq
pushf
pushf
pushf
pushf
in
call
pushf
pushf
aam
pushf
pushf
pushf
pushf
int3
enter
pushf
pushf
pushf
mov
pushf
pushf
pushf
lods
test
mov
pushf
cwtl
xchg
nop
pushf
pushf
pushf
pushf
mov
pushf
pushf
js
insb
push
fs
pop
pop
pushf
pushf
pushf
pushf
push
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
sub
cld
sub
dec
dec
dec
outsb
pmuludq
in
call
in
dec
dec
dec
dec
aam
int3
enter
dec
sarb
mov
test
dec
dec
dec
movsb
mov
dec
dec
xchg
nop
mov
test
dec
dec
je
insb
fs
dec
dec
dec
pusha
push
dec
inc
dec
dec
dec
dec
inc
push
dec
pop
dec
dec
dec
dec
pop
cmp
xor
dec
dec
dec
xor
and
dec
dec
dec
and
adc
dec
dec
dec
adc
add
adc
sub
pmuludq
daa
daa
daa
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sarb
mov
test
daa
daa
daa
daa
mov
daa
daa
daa
nop
mov
daa
cmpb
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
mov
adc
or
leave
leave
add
cld
sub
jb
clc
hlt
lock
jb
jb
call
jb
jb
aam
int3
jb
jb
enter
jb
jb
mov
jb
jb
movsb
mov
jb
xchg
nop
mov
jb
mov
jb
je
insb
jb
jb
push
jb
jb
push
push
dec
daa
daa
pop
jb
inc
inc
cmp
daa
daa
daa
cmp
sub
daa
daa
daa
sub
sbb
daa
daa
daa
sbb
or
daa
daa
daa
or
cmovle
and
pmuludq
dec
dec
dec
dec
in
call
dec
dec
aam
dec
dec
dec
dec
int3
enter
mov
pop
jae
mov
leave
adc
cli
mov
and
insb
sahf
out
pop
or
adc
sbb
inc
sub
jns
sub
icebp
mov
cltd
and
mov
lock
and
cmpb
cmp
adc
sbb
mov
jp
fs
mulb
popf
pop
addr16
mov
push
push
arpl
pop
sahf
sbb
loopne
mov
push
mov
fwait
or
or
inc
imul
inc
pop
add
nop
pop
or
add
incb
pop
add
dec
popa
gs
int3
and
add
dec
push
push
dec
inc
inc
dec
dec
outsl
out
imul
adc
dec
push
inc
push
dec
pop
dec
mov
push
push
push
dec
push
push
pop
sub
dec
cs
inc
dec
pop
dec
enter
dec
dec
inc
push
das
pop
cmpsl
jp
jge
jl
out
mov
je
mov
push
pop
inc
in
scas
jp
lea
or
and
lock
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
movsb
pop
dec
lock
cli
jb
jmp
std
paddd
aas
loopne
movsb
jnp
and
loop
bswap
leave
leave
leave
in
out
leave
leave
leave
leave
call
leave
leave
leave
in
in
out
out
leave
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aam
xlat
leave
leave
leave
leave
fcomp
fcmovu
leave
leave
leave
leave
leave
leave
leave
leave
rol
ret
leave
leave
leave
leave
leave
leave
leave
leave
enter
leave
leave
leave
leave
int3
int
iret
leave
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
pop
sub
leave
mov
pushf
fmull
bsf
lcall
dec
outsb
cpuid
mov
dec
dec
cmpsb
cmpsl
test
dec
dec
dec
dec
stos
stos
lods
lods
pop
add
jge
jge
adc
push
mov
jae
adc
adc
or
je
insb
jae
ficompl
fmull
or
gs
jmp
in
push
push
or
popa
jb
push
xchg
mov
rolb
fsubrs
dec
add
ret
push
jle
mov
mov
ds
out
mov
rclb
push
cmp
inc
pop
cmp
lock
gs
mov
sbb
iret
or
int
orb
push
add
bound
je
adc
cmpsl
pop
fiaddl
or
push
inc
ret
xchg
inc
push
inc
dec
inc
jo
nop
insb
test
mov
mov
addr16
fs
dec
jne
dec
xchg
sbbl
aas
outsl
jle
adcl
and
inc
jb
and
sbbb
mov
int3
aas
scas
jb
je
ficoml
inc
popa
insb
mov
js
and
into
aas
scas
aam
adc
fdivrs
cmpb
xchg
sub
xor
xchg
inc
imul
push
in
outsl
nop
mov
jl
jle
popa
outsb
gs
jbe
cmpb
jbe
in
or
outsl
ja
cmp
and
test
mov
fiaddl
sub
nop
xchg
scas
add
into
sub
or
mov
fs
jo
or
fsubl
insl
popa
popa
insl
jle
gs
orl
cmpb
test
rcl
scas
outsb
or
fdivrl
scas
mov
sub
hlt
scas
aas
scas
aaa
sbb
add
cmovne
ljmp
pop
aas
loope
addb
adc
js
inc
push
cmpb
inc
outsl
and
push
mov
test
mov
aas
daa
xchg
and
inc
rclb
fdivs
push
imul
bound
jbe
mov
cwtl
mov
push
insl
add
adc
out
scas
push
inc
mov
arpl
nop
sbb
daa
in
xor
aas
mov
fbstp
mov
scas
je
aas
inc
ret
sub
push
popa
sbb
pop
mov
aas
shlb
push
and
push
mov
inc
popa
fsubl
xchg
mov
shl
in
cmpb
aas
mov
pushf
mov
test
and
mov
scas
pop
call
ja
inc
scas
aas
or
push
stos
push
inc
mov
sbb
popa
data16
push
pop
mov
or
xor
and
jnp
jo
xor
into
xor
insb
pop
mov
das
xor
inc
outsl
jb
adc
je
outsb
addr16
shrl
fcomps
mov
loope
adc
outsb
push
cmp
fistps
scas
ret
sbb
fldcw
mov
xchg
pushf
push
andb
adc
aaa
xor
outsl
dec
and
cmpsb
xor
dec
push
inc
cmp
adc
aam
fnsave
pop
mov
aas
inc
rorl
jg
push
push
push
xchg
inc
cmp
jne
int3
add
loop
and
mov
das
push
ja
rorl
lahf
and
mov
jns
adc
stc
ljmp
rcrl
adc
sbb
push
loopne
sub
cmp
dec
test
xchg
and
push
cmp
mov
test
adc
sbb
sbb
pop
xor
dec
push
imul
shrb
inc
push
mov
jns
and
shrl
outsl
outsb
jb
dec
and
ljmp
div
mov
mov
add
pop
mov
enter
lret
mov
mov
cmp
cs
xor
add
pmovmskb
push
mov
adc
ds
sahf
lcall
mov
unpckhps
mov
push
mov
mov
iret
push
call
xor
popa
xor
and
add
inc
adc
mov
mov
mov
pop
inc
incl
push
test
jp
shlb
pop
inc
sbb
mov
cmp
jo
fimuls
mov
lret
dec
add
sub
xchg
sub
mov
sub
imul
pop
dec
into
jo
add
outsl
or
bound
aam
fcoml
outsb
outsb
cvtdq2ps
mov
jb
outsl
push
shlb
or
mov
add
decb
cmp
psrld
sub
ret
or
pop
sbb
cmpsb
inc
or
push
add
and
sub
out
sub
fs
sbb
aaa
jge
popa
mov
xor
and
add
sbb
jg
scas
cmp
mov
movsb
sahf
add
fnstcw
sub
pop
xchg
outsb
incl
add
pop
adc
pop
sub
idivb
jle
cmp
jg
aaa
sub
lods
imul
mov
add
jg
pusha
dec
std
add
pop
pop
jne
push
mov
cmc
popa
inc
pop
sar
sub
fadd
jp
mov
cli
or
mov
cmp
fstl
ret
ret
fcomip
add
add
mov
push
cmp
sub
add
mulb
pop
cmp
jg
outsb
cmp
icebp
popa
mov
jmp
sub
jne
pop
cmp
je
jg
or
jmp
pop
pop
pop
jl
mov
pop
adc
sbbb
mov
pop
or
mov
cmp
jne
push
cld
xchg
mov
push
and
mov
mov
xchg
hlt
push
fadds
imul
fimull
pop
arpl
lahf
sbbl
lock
enter
and
mov
mov
mov
popa
rcr
ret
adc
ss
xchg
or
jg
mov
inc
popa
add
pop
mov
jo
or
fstps
or
out
imul
push
ficoms
aad
rclb
test
mov
inc
cmp
fadds
jbe
adc
or
rcl
dec
fcoml
dec
sub
clc
cmp
lret
inc
push
inc
push
test
arpl
push
mov
mov
subl
mov
sbb
or
add
imul
mov
ss
add
nop
les
imul
sub
dec
je
sbb
test
adc
xorb
aaa
and
mov
fbstp
jmp
sub
adc
inc
das
sti
jmp
test
in
or
mov
mov
popa
loopne
and
mov
mov
cmp
jne
mov
dec
bound
sbb
dec
andb
adcb
cmp
lret
loopne
or
fcomi
in
jle
leave
sub
mov
sub
mov
int
mov
add
add
push
xorl
rcr
push
or
loope
jl
out
lds
dec
jmp
and
add
add
sub
jb
fdivrl
je
sbb
add
leave
jmp
ds
rorl
fwait
and
test
stos
cs
dec
stos
rorb
outsl
inc
mov
or
call
jns
jb
push
sti
je
stc
mov
inc
dec
jne
jmp
test
cmp
pop
sub
shlb
or
hlt
pop
push
fcmovu
add
or
sarb
mov
adc
mov
ret
push
push
push
xor
dec
adc
cmp
jb
ljmp
outsb
push
pop
mov
adc
pop
pop
sub
sub
jbe
add
mov
ljmp
xor
jmp
mov
lcall
in
adc
leave
push
xor
add
testl
xor
testl
add
in
mov
sbb
sbbl
negl
jmp
ja
pusha
movb
dec
inc
scas
cmpsb
mov
add
sbb
hlt
or
adc
fsubl
jne
mov
sbb
dec
daa
andl
xor
fildll
fistps
ret
add
jno
sub
insb
rorl
fdivr
mov
pusha
mov
xor
add
push
sub
daa
add
fcom
fstsw
sahf
jae
lret
ffree
fstl
or
cld
ret
ffree
pop
aad
aam
add
and
aad
sbb
jns
and
add
subb
pop
xchg
inc
rcrb
add
push
shlb
scas
outsb
aaa
and
lret
and
lods
ret
or
aas
es
inc
sbbl
fwait
mov
or
test
mov
sarl
sub
out
push
push
lock
shlb
insb
imul
xor
sub
mov
sete
jnp
fld
pop
outsl
das
hlt
lea
es
inc
add
mov
jno
inc
je
insb
cld
sbb
addl
icebp
add
add
lahf
mov
add
mov
aam
sub
mov
xchg
pop
mov
divl
aaa
dec
nop
orb
xchg
and
les
out
pop
insl
push
jecxz
or
das
mov
cmp
fcomps
jb
and
popa
insb
jae
mov
rolb
decl
add
inc
mov
sub
movb
lock
addb
sub
out
aas
mov
add
add
adc
ret
inc
lret
les
dec
push
mov
scas
jp
dec
hlt
jne
dec
inc
xchg
inc
icebp
es
or
or
movsl
movsb
xor
adc
fldt
fcomps
mov
add
dec
loop
lock
xchg
cli
jnp
sbb
sbbb
movb
jo
clc
xchg
push
imul
inc
add
mov
push
mov
stos
das
dec
fmul
popf
es
xchg
sub
shl
icebp
lods
adc
ret
adc
add
and
pusha
ss
mov
mov
dec
outsl
or
enter
dec
cmp
mov
incl
ja
mov
and
ja
and
or
push
adc
cmp
and
test
test
mov
xchg
inc
or
pop
pop
pop
into
adc
aas
lea
fistl
sub
mov
push
stos
dec
lahf
loopne
or
inc
ja
popa
mov
or
push
out
xor
adc
sar
pushf
or
out
dec
cli
sbb
jne
pop
out
ds
xor
faddp
xchg
push
xchg
rorb
or
stos
pop
and
dec
scas
cmc
sbb
dec
dec
adc
pusha
adc
dec
add
mov
xchg
clc
add
xchg
pop
jle
dec
pushf
xchg
inc
pop
fdivrs
mov
insb
mov
jo
call
xchg
inc
std
inc
clc
adc
or
adc
sub
loopne
dec
inc
je
bound
adcb
inc
js
mov
pop
shlb
not
enter
shrb
sub
and
jne
outsb
jae
lock
in
adc
push
push
sub
sbb
rcrl
cld
jmp
pushf
mov
mov
sub
or
pop
push
or
inc
sub
int
call
adc
and
add
add
adc
or
cld
cmpsl
add
add
add
add
out
lea
adc
ljmp
sbb
push
add
fidivrs
xchg
jno
inc
in
xchg
cltd
inc
mov
cmp
icebp
xchg
or
jl
sbb
push
inc
sub
inc
or
pushf
push
ds
xor
add
ja
push
test
sub
or
in
adcb
mov
add
hlt
jmp
dec
jecxz
sub
mov
mov
sub
scas
mov
cwtl
jne
jns
insl
add
cmp
mov
mov
inc
in
fcmovnb
adc
add
pushf
jp
je
mov
mov
or
leave
jmp
js
nop
subl
push
mov
lods
sbb
or
pop
lock
mov
fldenv
and
sbb
das
inc
adc
dec
jmp
rorb
add
out
ret
mov
pusha
lock
dec
cmc
ret
mov
pop
stos
push
js
jp
jmp
lea
inc
andb
inc
stos
pop
sub
jmp
inc
sti
dec
in
and
jne
push
inc
xor
push
adc
pop
addb
sbb
rclb
add
or
testb
or
mov
ja
or
fistps
lea
mov
xchg
pop
rcrb
lcall
mov
mov
not
and
pop
sbb
dec
dec
xchg
add
dec
mov
mov
xchg
xor
imul
jno
sbb
jmp
pop
or
cmc
lock
push
sbb
mov
ror
mov
mov
push
addl
xor
mov
pushf
repnz
adc
inc
push
push
mov
loope
das
cmpsb
js
cwtl
sub
mov
in
or
jbe
mov
fdivs
lods
add
mull
test
and
popl
addl
inc
add
das
push
std
leave
adc
ret
mov
imul
sti
je,pn
mov
test
cmpsb
pop
js
rcrb
or
mov
xor
arpl
cmp
sbb
leave
sbb
outsb
dec
mov
mov
jge
sbb
aas
push
fs
xchg
adc
cmpsl
push
mov
loopne
insl
and
push
pop
jne
inc
mov
or
jo
roll
dec
sbb
sbb
and
pop
call
popf
outsl
jle
jne,pn
pop
xchg
and
aad
outsl
movsb
xor
cmpsl
ud0
lods
or
or
cmp
inc
mov
jecxz
xchg
xchg
push
pop
test
dec
aad
pusha
add
xor
loop
sahf
mulb
push
hlt
clc
pop
fadds
cld
repz
mov
cld
imull
mov
hlt
in
and
hlt
aam
sbb
cld
dec
je
dec
or
xor
aaa
test
cmp
add
push
sbb
into
mov
fisttps
pop
sarb
rolb
cmp
imul
cli
call
push
sahf
cbtw
add
je
test
jne
push
out
sub
add
ret
or
cmpb
lcall
shl
lea
mov
ret
sub
lea
loopne
adc
lret
call
add
sub
inc
adc
pusha
nop
pop
add
sub
jg
fnstenv
pop
ret
mov
nop
jne
or
mov
std
sbb
inc
sub
mov
mov
ljmp
rep
or
xchg
pop
pop
insl
in
dec
and
pop
sbb
ret
lret
jg
mov
or
dec
addr16
cmp
pop
popa
cmp
xor
ret
jg
push
fimuls
or
cli
jb
add
cmp
jne
lret
jns
popa
add
jne
push
in
mov
jne
andb
jno
jns
fnstcw
sbb
jne
mov
loopne
cwtl
cmc
cli
add
push
lock
nop
adc
and
fs
pop
jbe
mov
repz
jle
or
je
mov
cmp
mov
cmp
ret
call
sbb
or
add
je
xor
or
fisubl
cmpb
jne
push
scas
mov
cmpsb
push
je
inc
out
sti
outsl
pop
xchg
xchg
mov
cs
mov
pop
pop
sub
sbb
lods
or
loop
loopne
enter
pop
mov
jne
call
sub
jb
loope
add
push
cwtl
mov
test
fldl
sarl
or
inc
dec
add
jge
xor
pop
inc
or
pop
ret
mov
ljmp
mov
add
cmp
int3
fs
jbe
clc
movsl
add
insl
leave
push
add
js
xor
les
push
movb
shrb
test
and
and
and
or
push
pop
mov
mov
ss
and
sub
and
sbb
pop
adc
sahf
shrb
or
rclb
cli
popf
mov
xchg
push
mov
rcrb
xchg
lods
pop
or
jb
add
jge
jmp
pop
ficoml
or
sub
lods
cmp
je
stos
in
mov
outsl
add
clc
push
xchg
stos
sub
jmp
call
mov
xor
sub
scas
std
or
adcb
cs
and
movl
loope
enter
in
pop
sub
inc
sub
mov
cmp
shrb
sub
jae
pop
add
cmpb
or
lret
roll
fadds
rep
sbb
cmpl
addb
push
xchg
xchg
sbb
paddsb
mov
sub
xor
cmp
ja
imul
push
add
ret
cld
add
jo
xlat
push
in
xchg
jle
cmp
dec
or
cmpb
fldl
xor
ret
je
xchg
imul
mov
xlat
cmp
scas
add
pop
jne
lea
mov
push
add
and
lahf
xlat
xchg
cltd
mov
push
fisttpll
arpl
movsb
xchg
scas
jae
repz
das
aaa
pop
movsb
push
iret
jp
leave
jnp
es
push
hlt
xor
xchg
fwait
mov
dec
fsubrs
shrl
mov
test
push
nop
pushf
lea
and
stos
mov
jg
ret
inc
je
mov
dec
adc
cmp
push
shll
imul
push
pop
or
adc
out
je
emms
int3
sbb
sbb
flds
jno
jmp
pop
js
ret
sbb
jmp
cmp
jbe
mov
aad
hlt
ret
xor
cmp
lods
and
jmp
mov
pushf
dec
out
add
cld
andl
aas
je
stos
call
pop
js
mov
or
ja
mov
jmp
dec
fdivl
fcoms
inc
data16
test
jecxz
cmpsl
jns
aas
rorb
fcomps
push
leave
sbb
sbb
jmp
shlb
mov
out
mov
dec
inc
je
mov
or
je
mov
inc
je
mov
lods
mov
dec
je
dec
jl
mov
mov
loope
pop
cmp
jbe
mov
adc
int3
adcb
mov
dec
adc
dec
rcpps
xchg
mov
inc
iret
dec
insb
pusha
fwait
jmp
call
xor
and
or
sahf
push
hlt
jle
iret
add
out
adc
leave
mov
cwtl
daa
xchg
sahf
adc
out
xchg
out
jb
in
in
testb
mov
ljmp
push
push
fistl
cmpsl
into
gs
ja
push
andl
aaa
pop
jge
out
sbb
inc
push
sahf
ljmp
add
insb
push
xchg
sbb
nop
jmp
roll
ljmp
out
xchg
push
push
or
inc
mov
cmp
inc
pop
dec
notl
dec
cmpsb
notl
test
leave
adc
mov
push
push
loop
stos
mov
mov
mov
sub
xor
ret
mov
fdivrs
mov
cmp
daa
jg
insb
notl
mov
jg
or
sub
xchg
scas
add
jmp
cltd
cs
cltd
shr
inc
ljmp
pop
movsl
push
cmc
push
xchg
sbb
ret
cmpsl
push
or
sub
roll
pop
incb
test
sbb
xchg
pusha
aaa
popa
stos
xchg
jmp
movsb
xorb
dec
cmp
outsl
add
jg
jmp
jo
mov
sub
mov
clc
push
xchg
add
addr16
jg
dec
cmpl
add
repz
dec
cmp
add
dec
arpl
ja
arpl
in
dec
xchg
pop
adc
mov
jb
js
sub
add
inc
push
jmp
mov
lods
mov
push
xor
stos
or
jne
jg
xor
or
jge
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
add
add
mov
int3
decl
adcl
dec
enter
jg
dec
mov
stos
cmp
jne
pop
pop
pop
clc
aam
pop
test
mov
cld
mov
sti
mov
add
std
cmp
pop
repz
inc
in
je
mov
or
fsubl
sarb
scas
rorb
je
jnp
mov
dec
jge
add
pop
lea
xchg
jge
push
sub
shlb
mov
and
fsubrl
je
int
jbe
lea
enter
filds
mov
je
add
or
mov
add
testl
add
call
jo
pop
test
cmc
xor
lods
push
mov
dec
dec
inc
dec
inc
dec
lods
or
pusha
test
xor
xor
cs
stos
cmp
mov
aam
cmp
jg
cmp
jl
pop
sbb
xchg
outsb
je
mov
stos
neg
sbb
stos
jmp
jge
lcall
imul
pop
stos
loop
movlps
adc
pop
inc
clc
dec
lods
shrb
mov
push
ret
add
fidivs
sub
jl
dec
sub
leave
mov
mov
mov
enter
lcall
jb
mov
jle
es
and
decl
scas
je
mov
dec
mov
div
mov
int
clc
outsl
hlt
test
je
dec
jne
sbb
in
sti
rorl
mov
xor
call
add
xor
decb
or
jne
and
test
shl
repz
or
repnz
lcall
jmp
pushf
fwait
push
lods
xor
push
sub
mov
fistpll
inc
je
push
push
cmp
je
add
sbb
popf
inc
jmp
pushf
inc
sub
mov
inc
loop
ret
push
test
fdivrp
mov
adc
shlb
inc
add
and
and
adc
jbe
out
and
sub
inc
sub
adc
es
es
sbb
es
pop
sub
or
sti
sahf
inc
mov
xor
sub
sub
std
mov
pop
aaa
cmpsl
call
push
rcrl
adc
pop
jle
or
or
cltd
add
xor
adc
add
jae
scas
sahf
mov
sbb
scas
dec
add
scas
push
pusha
lret
enter
cld
scas
adc
popa
mov
mov
and
scas
adc
scas
or
push
sub
and
xchg
adc
and
and
mov
in
inc
adc
add
or
mov
mov
cmp
jbe
fcoms
mov
lock
jne
testw
loope
push
adc
cmpl
add
movb
inc
fstp
mov
aas
scas
imul
clc
adc
sub
ret
push
fabs
loopne
cld
cmp
frndint
sbb
fs
divb
fcomp
fstsw
fwait
mov
testb
je
fidivl
loop
pop
fbstp
lea
mov
inc
sub
mov
shr
add
scas
incl
xor
stos
ljmp
mov
jns
xor
mov
xor
dec
or
cmpb
clc
mov
movb
js
decb
and
pop
data16
fisttpll
clc
sub
jmp
mov
or
inc
xor
push
inc
clc
shr
es
aad
mov
push
add
inc
out
adc
jo
xchg
mov
sub
insl
mov
dec
add
rorl
je
push
neg
jo
sbb
and
add
leave
or
or
sbb
adc
jl
mov
pushl
sbb
jae
dec
add
fisubrl
loopne
push
in
insl
or
sbb
fimull
cmp
mov
shll
xor
fwait
or
jne
mov
std
lcall
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
lock
ja
inc
or
ljmp
sub
movb
xor
fcomps
cmpb
divl
pop
jmp
rclb
mov
sbb
ret
mov
or
ret
push
test
push
dec
inc
ret
scas
mov
lock
jg
loop
je
fldz
cmpsb
mov
ljmp
notb
lock
dec
ljmp
mov
add
cmp
jne
inc
inc
adcb
mov
dec
mov
and
cmp
jne
inc
mov
push
add
subb
jmp
sahf
jne
fcoml
pop
fs
add
loopne
push
add
aas
jmp
fstpt
test
sbb
jle
add
test
insl
and
or
jmp
jl
cmp
mov
add
add
jae
fimull
movsl
sub
aaa
mov
negb
jo
jg
es
push
inc
imul
push
cmp
add
jb
xorb
push
xor
shrb
push
pusha
das
mov
lcall
push
rorb
pusha
xchg
es
and
aaa
xchg
pop
mov
pop
add
test
js
clc
cs
mov
adc
push
repnz
aam
sbb
sub
fstpl
fwait
out
and
push
addr16
add
pusha
ret
cmp
adc
out
xor
mov
ret
fldl
fmuls
jb
jge
hlt
and
pop
pop
adc
mov
xor
push
fcomip
insb
jmp
adc
adc
or
xchg
or
fstpt
adc
cmp
jae
or
cmp
inc
stc
aaa
cmp
xor
movsb
sahf
jae
pminub
xlat
mov
data16
add
shrb
pusha
cmp
adc
fsts
outsl
pop
xchg
fildl
xor
fstpl
cli
and
loop
pop
mov
or
dec
mov
jno
or
mov
mov
mov
or
mov
shrb
call
xchg
ret
notl
lea
cs
xchg
movsb
les
dec
mov
jp
mov
push
inc
jnp
fs
cmp
push
repz
push
mov
dec
add
sahf
js
or
enter
loopne
into
loop
sub
adc
aam
mov
loop
mov
sbb
mov
add
or
add
cltd
mov
lcall
or
std
add
movsb
cmpsb
adc
jg
add
lea
sbb
jge
add
addb
adc
ja
and
add
or
jb
or
sti
push
insb
je
mov
ja
mov
mov
push
daa
popw
pop
pusha
incl
pop
dec
incb
jne
sub
dec
mov
aas
cltd
imull
imul
jns,pn
ret
cli
imul
sub
ds
ds
add
pusha
ret
or
pusha
icebp
bound
adc
std
add
mov
clc
push
xor
cmpl
and
mov
mov
sbb
popl
cmp
test
jg
andb
push
add
add
data16
test
cmpsb
sbb
pop
pusha
sbb
inc
xchg
xor
cmp
jl
addl
add
push
pushf
and
jl
xchg
lods
mov
sub
lock
fwait
mov
jle
decl
cmpl
mov
fcoms
and
pop
mov
data16
sbb
rolb
insl
push
sarl
lock
shll
shrb
cmpsl
adc
cmpsb
add
pusha
pop
rorl
insb
int
cmp
jb
and
daa
jmp
adc
sbb
fists
imul
hlt
or
lock
mov
in
push
aaa
push
scas
mov
add
cmpsl
dec
pop
and
orl
add
cld
mov
mov
ret
nop
mul
dec
mov
pop
shrb
or
pop
out
and
inc
and
cmpsl
sbb
pop
and
sub
dec
inc
sbb
push
adc
mov
fmull
fstpl
insl
fldl
push
push
xchg
mov
adc
pop
dec
test
sub
loopne
shll
fisubrl
sbb
mov
subl
aaa
subl
mov
add
shll
fnstcw
mov
pop
sbb
cmpsl
loopne
dec
push
mov
adc
add
in
and
loopne
add
mov
mov
lea
mov
cld
mov
xor
or
add
sbb
dec
sti
je
mov
sub
mov
sub
or
in
add
fwait
mov
mov
add
push
lea
or
lcall
xor
push
test
adc
inc
in
add
xor
add
outsl
jecxz
jb
inc
mov
in
jl
call
inc
movsl
mov
add
adc
adc
add
jns
mov
pop
push
xchg
out
adcl
lock
sub
repnz
sub
push
push
sbb
sbbb
rolb
xchg
pusha
scas
pop
andb
lret
jo
lea
cmp
sbb
adc
enter
mov
pop
je
or
cmpsl
std
cmp
adc
mov
sbb
mov
insl
cmpl
sub
test
clc
mov
inc
lods
add
cmp
clc
insb
aas
dec
dec
add
or
xchg
shrl
cmp
adc
push
cmp
fbstp
daa
xor
pusha
test
add
imul
mull
inc
mov
loope
xchg
addr16
adc
push
or
lods
nop
add
mov
add
nop
out
jmp
sbb
stos
cmp
jne
inc
cmpb
jne
stos
mov
or
push
mov
add
push
inc
sbb
add
arpl
lea
jg
fistpll
loopne
mov
sbb
push
cmp
das
jle
xor
mov
add
test
fmuls
pop
arpl
xor
lods
mov
sub
pop
movsl
pushf
pop
incl
mov
push
jecxz
sbb
call
sti
adcb
add
inc
lret
jp
mov
add
xchg
psrld
xchg
push
loopew
push
jge
and
mov
add
sub
jae
jmp
adc
push
in
aam
dec
jne
jge
dec
jne
mov
mov
adc
push
aad
ret
or
into
cmp
xchg
pop
faddl
sbb
adc
cmp
test
test
fsts
and
sub
call
add
add
filds
add
add
add
out
jnp
lea
cmpsl
fnstcw
fwait
dec
rorb
fnstcw
jecxz
ret
fistpll
outsb
and
push
mov
sbb
addb
mov
add
pop
clc
inc
mov
sub
inc
mov
loop
adc
push
repnz
adc
push
lea
mov
xchg
cmp
test
jb
pop
aam
adc
loope
mov
pop
hlt
dec
add
mov
jmp
pop
lock
mov
test
call
imul
inc
mov
fmull
dec
add
jmp
inc
jne
add
dec
movsl
in
icebp
mov
mov
orb
adc
lods
sub
and
and
adc
mov
pop
loopne,pn
aaa
cmp
incb
lahf
push
and
push
lock
add
adc
and
add
fnstsw
pusha
or
je
or
je
jmp
push
jp
xchg
jne
mov
out
xor
ret
je
mov
rorl
int3
dec
pop
sub
jne
into
add
push
jmp
jmp
mov
inc
push
jl
inc
cmp
ljmp
lret
sbb
fmuls
data16
xchg
imul
or
or
add
addb
xor
mov
and
repz
sbb
sbb
call
add
and
mov
dec
bswap
push
sub
mov
stos
mov
jmp
daa
sub
jbe
cmp
sbb
lret
sbb
loop
loope
xor
and
sub
add
xor
jae
in
sbb
xchg
andb
jmp
and
push
add
xchg
pop
mov
mov
add
xchg
or
xchg
xchg
fdivl
adcb
adc
ret
lea
cmp
loopne
mov
push
mov
push
adc
fidivrl
call
js
adcl
mov
ficoml
cmp
out
jae
pop
imul
jg
pop
cmp
pusha
or
push
cmp
and
jmp
mov
orb
ret
inc
adc
pop
sub
sub
sbb
xor
mov
les
cmp
test
add
cld
clc
push
sbb
or
push
mov
inc
aam
adc
test
test
dec
das
push
jl
int3
ficomps
push
add
nop
jae
or
mov
scas
push
push
xchg
mov
out
push
sub
cmp
call
outsb
iret
adc
lea
add
or
inc
pop
jg
sbb
push
mov
jmp
inc
fists
incb
cli
xor
fdivrs
je
mov
fldl
hlt
dec
jmp
idivl
dec
loopne
ret
mov
clc
inc
fidivs
idiv
cmp
lea
fcoml
ljmp
call
adc
cmpsb
xor
popf
loopne
and
jo
cmp
jle
xchg
mov
pop
push
or
xor
fidivs
adc
ja
push
les
add
ss
repnz
dec
cmp
icebp
shlb
pop
mov
adc
push
repz
cmp
inc
push
push
in
fs
mov
dec
imul
inc
adc
mov
add
lret
jge
vmovaps
les
add
adcb
xchg
or
cltd
xor
ss
ds
nop
loopne
fs
cmp
jl
add
push
cmp
jne
sub
jns
sbb
int
push
jo
or
decl
fildll
je
dec
je
sub
fsincos
pop
sbb
je
jmp
mov
jmp
push
push
push
sahf
jbe
fldl
jmp
inc
out
clc
jle
out
push
and
cwtl
outsb
aad
mov
mov
or
mov
popa
roll
mov
jl
jnp
jl
xchg
fstpt
pop
mov
das
inc
adc
fidivrs
push
pop
mov
aad
aam
mov
je
andb
mov
jle
cmp
aad
lock
mov
xor
jmp
jb
mov
jne
clc
scas
incb
in
xor
cmp
sub
adcb
xor
and
fists
cltd
xor
sub
add
shr
jg
outsl
imul
add
mov
push
adc
pop
cld
jmp
jmp
dec
cld
gs
xchg
lahf
mov
mov
outsb
in
mov
sub
or
dec
js
jb
xor
sarb
leave
cmp
call
add
xorl
fdiv
scas
cld
and
xchg
dec
add
mov
rorb
inc
loopne
push
or
mov
scas
movb
pushf
ds
mov
lods
mov
js
or
jg
inc
out
lea
lods
mov
test
mov
cmp
and
fucompp
mov
int3
das
and
out
and
repnz
out
or
add
flds
call
sub
jb
and
inc
sbb
jge
mov
loop
fadds
cmpsb
and
ljmp
imul
sarb
iret
mov
sar
out
cmp
call
cmpl
shll
jo
jge
imul
int3
fnstenv
push
or
rclb
pop
data16
sbb
xlat
out
ds
add
outsl
neg
incb
and
fs
jne
mov
add
add
leave
add
jnp
and
xchg
adc
cmpsb
cmp
inc
cwtl
adc
dec
inc
inc
dec
repnz
push
jl
enter
adc
push
mov
arpl
jne
jl
and
ret
scas
rcrb
pop
fcoml
gs
dec
mov
add
fsubrl
pop
dec
jnp
jle
mov
test
push
fsubrs
push
jne
addl
call
adc
and
push
mov
in
lret
fadds
adc
movsl
and
sahf
push
ret
in
xor
cmp
jb
push
pop
repnz
cld
add
or
xor
jl
mov
or
and
test
fcomps
add
jp
push
enter
push
nop
add
xchg
dec
inc
or
sbbb
cmp
rorb
fsubs
and
cmp
mov
or
xchg
hlt
pop
fs
je
test
ficoml
rolb
dec
or
adc
pop
xchg
mov
orl
inc
or
push
inc
push
cmp
push
xor
lock
je
xadd
jo
or
jne,pt
insb
inc
cs
sbb
adc
cmp
push
dec
outsl
pop
sbb
and
dec
cmp
or
sub
mov
movsl
ret
out
dec
xlat
mov
xchg
rolb
push
push
out
test
xor
mov
stc
mov
add
adc
cmp
pushf
sbb
add
inc
mov
push
call
add
mov
adc
aam
mov
mov
push
repnz
or
es
out
mov
mov
sub
push
sbb
mull
sbb
pop
fmul
fstpl
fwait
jmp
sbb
adc
xchg
fs
rcrb
ret
adcl
lods
mov
push
mov
push
sbb
insl
fistpl
jmp
mov
inc
repnz
sub
jb
or
arpl
pusha
test
jne
xor
pop
fwait
sahf
icebp
mov
xor
test
jns
dec
cmp
and
int3
adc
pop
cmp
xor
cmp
addr16
mov
into
add
push
push
mov
es
subl
adc
pop
lock
jle
sub
out
mov
cmp
jne
fsubrs
mov
add
cmpsl
pop
js
or
or
or
test
jnp
xchg
and
aaa
loopne
add
repz
jg
mov
sub
mov
or
test
lea
dec
push
mov
test
mov
addb
mov
lock
loope
sub
jl
sti
or
push
rorw
ss
adcb
pushf
mov
shlb
pushf
int
xor
dec
call
enter
in
jne
popf
ret
sbbb
adcb
cli
xchg
roll
das
push
xor
add
bound
push
pop
jo
je
jp
popf
push
or
mov
clc
mov
jle
cmp
aaa
pop
mov
or
lahf
ss
pusha
loope
sub
or
cwtl
dec
in
pushl
cmp
or
pop
xor
scas
test
loopne
insl
xor
push
xchg
loopne
mov
addr16
pop
add
push
in
xlat
adc
std
mov
mov
aam
sbb
mov
test
or
andl
sbb
mov
xchg
xlat
and
popa
push
mov
negb
hlt
push
push
enter
add
fsubrp
nop
stos
adc
mov
xor
or
add
mov
sahf
rcl
fs
xor
lea
xchg
sbb
pusha
cmp
fcom
mov
clc
cmpb
test
orb
pop
insl
cwtl
pop
or
repz
outsl
mov
aaa
jmp
push
push
ljmp
add
je
sub
je
mov
push
mov
pop
lahf
inc
ds
pop
test
test
lret
adc
js
hlt
mov
sbb
xor
enter
and
loope
mov
mov
add
addb
push
ret
xchg
mov
dec
js
push
shl
pusha
add
fucom
loope
call
xchg
mov
xchg
push
daa
push
adc
lahf
stos
std
pop
add
jmp
mov
adc
insl
sahf
loopne
jmp
icebp
pop
je
jne
add
in
sbb
or
and
and
enter
mov
das
data16
lea
pop
pop
add
mov
add
pop
lahf
sbb
pop
lods
xorl
xlat
sub
pop
jo
ds
sub
xor
add
or
mov
add
dec
shlb
in
out
cmpl
mov
out
jne
aam
rol
hlt
mov
ret
mov
test
loope
and
daa
les
jmp
sub
mov
pop
js
in
rolb
repz
add
lods
aad
dec
jb
mov
hlt
push
push
push
sub
xchg
adc
cmp
jo
adc
mov
rolb
incl
mov
adc
sarb
in
cmpsb
inc
add
ficoms
push
fbld
lea
out
push
and
push
cli
sbb
xor
test
mov
movsl
xor
mov
mov
sbb
cmp
lea
lock
mov
mov
imul
or
or
les
mov
adc
int3
pop
mov
mov
pusha
and
pusha
pop
hlt
test
das
xchg
hlt
mov
cmp
dec
pop
xorb
mov
pop
int3
lock
mov
push
push
ret
sbb
push
xchg
mov
xor
add
adc
inc
lds
inc
inc
add
jns
hlt
ret
xchg
dec
test
add
das
xchg
mov
stos
shld
xor
rorb
and
dec
das
in
popl
mov
fists
jo
pop
and
adc
inc
xor
scas
int
insb
dec
or
dec
addl
xlat
popa
les
leave
sti
sti
push
psubq
sbb
push
lock
js
pop
test
or
sbb
and
test
cmp
or
xchg
es
xor
pop
daa
and
inc
nop
cmpb
je
add
adc
sub
ret
sbb
daa
add
jmp
or
push
or
cltd
nop
aas
dec
pop
push
into
clc
xor
and
mov
jbe
mov
push
jg
cmp
jg
shr
sbb
jns
js
sbb
jecxz
and
push
clc
rolb
sub
mov
mov
adc
decl
push
cli
jecxz
clc
mov
dec
push
cmpsl
xchg
push
adc
ljmp
mov
add
sub
sbb
inc
insb
xchg
mov
sub
andl
outsb
or
inc
adc
ret
dec
pop
pop
mov
xlat
inc
mov
pop
je
enter
adc
das
insb
push
cmp
loop
fsubs
mov
incl
lret
in
inc
call
or
imul
mov
hlt
clc
pop
in
add
push
jb
mov
test
mov
mov
mov
imul
dec
ret
push
stos
push
mov
add
loopne
aam
push
add
dec
popa
mov
xor
test
fldenv
mov
adc
fstl
loope
add
sub
pop
cmp
cld
jl
je
sub
xorb
add
dec
je
jmp
add
je
push
mov
cmp
xor
adc
imul
sub
cmp
mov
ret
mov
add
cmpsb
imul
imul
out
leave
lock
mov
add
dec
push
dec
nop
out
rclb
in
pushf
mov
mov
ljmp
fdivr
pop
cld
cmpl
lret
push
sbb
mov
inc
lock
jae
push
outsl
inc
or
jo
or
sub
xor
or
push
jne
test
rclb
orb
sahf
incb
shr
or
xchg
pop
mov
cmp
pop
pop
mov
jnp
addl
jb
cld
xchg
enter
pop
int3
pop
mov
fadd
push
adc
push
lea
outsb
mov
jne
jmp
mov
xchg
jge
mov
add
pop
mov
inc
cs
sbb
mov
adc
pop
mov
mov
lea
pop
mov
test
mov
mov
test
mov
mov
xchg
in
gs
insl
std
jne
lods
jg
add
sub
push
sbb
and
or
imul
cmp
lret
add
inc
xor
cld
jle
mov
push
mov
or
dec
lock
in
adc
fsubrl
push
push
jbe
dec
pop
rcrb
fldl
ret
add
push
sti
mull
sti
mov
test
dec
adc
mov
out
add
test
mov
pusha
mov
mov
je
and
fnstsw
push
pandn
sti
mov
mov
enter
mov
rcrb
fsubrs
sbb
mov
sbb
in
je
mov
shufps
adc
test
loopne
jae
cmpl
xchg
add
sbbb
jbe
adc
adc
adc
iret
loopne
daa
adc
adc
scas
adc
adc
sti
mov
jne
daa
cmc
or
test
adc
sbb
push
sub
les
xchg
aas
ljmp
inc
adc
pop
imulb
cmp
jns
mov
jne
xor
and
jbe
mov
pop
adc
dec
lods
nop
mov
mov
imul
mov
dec
push
neg
jl
pcmpeqw
cmp
add
add
das
cld
or
adc
notb
fildll
movsl
das
xor
lret
or
fiadds
pusha
or
aaa
je
inc
shlb
popa
jae
mov
push
xchg
in
or
mov
lock
push
inc
imul
push
in
push
push
rcrl
xor
nop
pusha
pop
mov
mov
arpl
repnz
das
cmp
inc
sub
int
addr16
xchg
fwait
pop
fdivr
cmp
dec
aas
lds
inc
jbe
bound
push
aam
test
jne
add
dec
pusha
jmp
mov
dec
jmp
dec
test
jl
push
pop
and
nop
mov
bt
or
mov
sub
and
sbbl
daa
jmp
incb
mov
jmp
inc
cmp
pop
aaa
xlat
lea
mov
pop
pop
or
es
pop
iret
fidivrl
and
mov
test
loopne
xor
cmp
in
or
xchg
mov
cmp
jl
adc
jle
mov
sub
mov
add
xor
test
push
aam
jg
pop
pop
lret
lods
inc
sub
lds
cmp
popa
ret
das
mov
cmp
jl
push
xchg
xorb
and
mov
loope
xchg
rcll
inc
sub
adc
inc
jge
mov
out
test
dec
mov
in
pop
popa
and
out
test
pop
hlt
jge
jl
int
push
sbb
adc
dec
clc
mov
into
mov
adcb
es
nop
adcb
js
es
ret
stc
dec
ret
not
and
cmp
add
dec
xchg
call
sbb
insb
jle
adc
sahf
pop
testl
or
popa
sub
mov
and
ret
in
sbb
dec
mov
jle
mov
add
pop
cmpps
rolb
int3
mov
push
clc
in
push
dec
jge
pop
insb
add
and
sbb
xchg
xchg
sub
add
or
pop
push
and
es
add
imulb
pop
and
cli
rclb
mov
outsb
shlb
inc
sub
and
jbe
jmp
add
imul
movsl
pop
push
outsl
in
sub
xchg
cld
popf
daa
push
inc
push
xchg
add
mov
popa
push
adc
fs
or
fisubrs
xchg
mov
sub
push
jge
push
adcb
add
fs
xchg
test
ret
fdivrl
pop
mov
pop
mov
jno
aas
fsubrl
and
or
jp
cmp
push
sub
jae
pushf
jp
cmpsb
ja
test
int3
xlat
mov
xchg
rorb
loop
mov
out
push
cmp
adc
xor
test
jp
decb
iret
add
inc
mov
xlat
adc
add
fisttps
mov
gs
aad
lret
pop
pop
mov
mov
push
sbb
and
aad
call
mov
mov
fcmovu
cmp
addl
orl
movd
sub
ljmp
cmp
jl
dec
fisttpl
je,pt
cmpb
jb
add
dec
sub
clc
push
pop
scas
adc
push
sbbl
dec
addb
sbb
dec
mov
clc
sub
aaa
mov
inc
inc
xorb
pushl
sub
mov
sub
cmp
jbe
pop
or
sbb
pop
fbstp
bts
ds
adc
inc
and
popa
add
and
out
mov
addr16
inc
and
xlat
rcrb
dec
test
inc
inc
test
fdivrl
loope
lock
in
push
sbb
xor
decl
daa
mov
mov
fdivs
inc
mov
sub
xor
stos
icebp
sbb
lret
jne
mov
or
or
insl
pop
pop
or
pop
jne
push
xor
fsub
xchg
call
movl
adc
pop
fbstp
add
add
shlb
loop
fwait
mov
lea
push
shr
in
fisttpl
mov
mov
mov
shl
movsl
pop
cmpl
and
jg
add
movb
jmp
push
data16
icebp
mov
push
sbb
aam
sbb
cwtl
pop
inc
pop
pop
sbb
inc
and
test
push
ds
dec
jne
push
addb
pop
loopne
ljmp
sahf
mov
iret
cmp
cmp
jmp
scas
push
lock
xor
mov
movsb
add
sbb
mov
add
cli
pop
xchg
pop
cwtl
mov
add
lods
pop
add
jmp
xchg
cmp
and
inc
adc
clc
inc
or
sub
les
rcr
sbb
cld
mov
mov
ret
and
mov
mov
in
xlat
push
out
mov
mov
test
mov
add
lret
dec
fmull
xchg
or
sub
mov
daa
cmp
pop
aam
mov
shll
dec
dec
in
pop
fdivrs
mov
inc
pop
inc
push
mov
sarb
pop
ret
int3
pushf
inc
sub
shll
mov
jcxz
rorl
fs
es
and
add
sti
test
inc
outsb
sub
les
rorb
les
inc
rolb
jmp
ret
hlt
mov
and
mov
bound
loopne
push
hlt
mov
add
add
in
inc
xchg
mulb
je
lock
and
lret
insb
daa
pop
and
pop
pop
pop
mov
push
inc
jecxz,pn
mov
jl
sti
jg
es
add
das
sti
adc
iret
ljmp
and
daa
fimull
insl
pop
jo
mov
popa
mov
push
adcb
es
add
outsb
pop
cmpsl
sbb
pop
out
cmp
jg
pushf
sbb
lahf
push
cmp
pop
in
ss
pop
lahf
in
mov
mov
inc
out
or
or
jle
jmp
adc
sbb
add
outsl
pusha
adc
adc
push
into
sub
pop
lods
cmp
in
xchg
dec
int3
fmull
add
inc
das
add
dec
xor
jmp
cmp
push
pushl
xor
cmp
ss
inc
push
mov
popf
inc
pop
pop
lea
in
imul
jne
mov
adc
sbb
call
int3
hlt
adc
movsl
in
jo
sarl
adc
and
push
xchg
icebp
sbb
roll
jnp
ret
hlt
sti
xchg
stos
ret
inc
or
ss
pop
mov
call
push
push
push
outsb
imul
sbb
add
mov
cmovg
decl
push
dec
outsl
fs
gs
outsb
outsw
fistl
pop
jns
jne
and
xor
std
rol
add
or
call
or
xor
inc
jmp
pop
pop
ret
ret
add
push
repnz
jno
adc
inc
add
push
mov
jo
jne
in
imul
jo
adc
fcomps
dec
push
adc
pushf
or
in
mov
jle
adc
inc
paddw
addb
fmull
mov
scas
dec
clc
std
inc
xor
lea
cmpl
adc
add
push
and
adc
jbe
nop
xor
inc
lea
sarb
fwait
push
inc
ret
mov
mov
mov
mov
fisubl
outsb
add
inc
cmp
ret
popf
sub
dec
mov
in
outsb
mov
xchg
cmp
xchg
adc
inc
in
rorb
jl
rorl
sbb
xor
scas
mov
pop
ret
xchg
push
push
push
adc
xchg
mov
sbb
jmp
jge
pop
or
hlt
dec
in
add
in
sub
ljmp
lock
mov
and
add
es
aam
lea
sub
aam
or
pop
ss
xchg
adc
data16
orb
rorl
xlat
test
push
mov
mov
mov
dec
push
bound
add
call
sub
call
inc
les
test
rolb
stos
adc
fidivrs
loopne
inc
jp
arpl
mov
sbbb
jmp
inc
mov
subb
add
loopne
sub
dec
imul
add
jnp
repnz
ljmp
imul
push
jo
popa
add
dec
adc
xor
xadd
inc
aad
pop
dec
ret
xchg
mov
dec
sbb
das
pushf
xor
push
xchg
in
mov
jo
mov
sysret
jnp
inc
test
cmp
mov
cmp
jne
movzbl
cld
shrl
dec
cld
jbe
xchg
jle
sbb
in
mov
scas
js
incl
into
mov
xor
and
pop
pop
cmp
inc
cmp
jbe
clc
mov
fistpll
mov
insb
xchg
add
mov
sub
in
jne
dec
sbbl
fnstenv
mov
ljmpw
inc
push
jg
xlat
into
xor
iret
fists
loopne
add
mov
daa
mov
xor
mov
or
das
fdiv
add
pop
daa
add
pop
add
push
outsl
in
lea
aaa
xchg
push
mov
inc
mov
icebp
adc
lret
mov
inc
xchg
add
shlb
inc
movl
dec
pushf
incl
mov
add
lret
pop
enter
mov
mov
add
flds
sub
xchg
clc
aaa
adc
out
pusha
into
aad
adc
rcrl
sbb
inc
fisubl
mov
aam
test
adc
adc
lods
and
mov
sbb
jg
inc
push
pusha
enter
pop
xchg
call
sbb
sbb
cmp
aas
pop
cld
bound
mov
xchg
cmp
add
and
jmp
mov
or
or
or
ret
les
add
and
add
cmp
sbb
mov
popa
push
fistps
rcr
cmp
add
mov
sti
in
mov
mov
jge
mov
cmp
cmp
sete
incl
push
call
push
or
aam
daa
or
jnp
mov
aas
pop
and
js
loope
add
subb
ja
push
pop
loopne
pop
pop
orps
clc
inc
out
add
mov
inc
or
add
cmp
loopne
je
dec
jne
test
test
rolb
sbb
jecxz
pushf
jne
jg
add
loopne
xlat
shlb
xchg
testb
dec
fildl
or
in
cmp
xor
hlt
add
outsl
ror
cmp
sbb
int3
inc
xor
rclb
mov
pop
xor
mov
sub
xor
sbbl
and
or
mov
dec
push
xor
jae
daa
hlt
loopne
jo
enter
adc
and
adc
rclb
xchg
mov
adc
test
cmp
into
push
sbb
cs
rcrl
mov
inc
mov
leave
adc
jle
or
popa
pusha
loopne
mov
sti
fnstcw
and
pushf
jo
jmp
mov
mov
jmp
cmpsl
shll
retw
mov
loopne
adc
rep
je
xchg
dec
and
inc
add
pop
add
jp
sbb
mov
xchg
mov
push
jo
mov
push
xchg
push
shl
imul
iret
jnp
cmp
push
inc
dec
enter
out
not
push
mov
dec
test
or
repz
add
jnp
jnp
nop
aas
push
mov
loopne
push
js
mov
cmp
pop
pusha
dec
pop
push
pusha
push
mov
mov
push
addb
cmp
sahf
iret
mov
xor
sbb
sbb
pop
out
sbb
adc
call
adc
repnz
sub
das
or
cwtl
mov
adc
add
fwait
cmp
pop
cld
js
mov
clc
push
cmp
mov
lods
inc
lock
dec
fsubrp
mov
call
testb
inc
loopne
mov
js
push
push
sahf
xchg
out
push
je
rclb
int3
dec
out
js
enter
xlat
inc
jae
outsb
out
sarb
mov
mov
sahf
fstpt
push
lock
test
negb
cmpsl
movsb
fbld
pminsw
data16
mov
push
mov
mov
mov
inc
or
das
pusha
inc
aaa
popa
rcll
mov
jg
dec
into
and
adc
icebp
push
pop
xchg
jne
or
imull
cld
jecxz
mov
inc
mul
enter
lock
fidivrs
push
jo
mov
adc
xlat
cmc
xchg
and
sbb
or
jo
cmp
dec
pop
jo
ja
or
mov
xchg
xor
mov
and
cmp
sbb
fsubrl
xor
dec
dec
aas
push
push
mov
rorl
xchg
mov
inc
cmp
push
push
andb
andb
pusha
push
les
and
inc
xchg
cmpsl
adc
lods
xchg
icebp
jmp
arpl
test
inc
pop
sub
jmp
es
cmp
xor
or
xchg
fidivrs
lret
leave
mov
jmp
jle
fs
movsb
arpl
push
imul
pop
ret
in
inc
jmp
mov
test
add
data16
cmpl
popl
inc
sti
add
push
xchg
mov
pushf
mov
ljmp
andl
pop
sbb
std
ja
xchg
push
pushl
mov
xlat
movsb
jl
adc
xchg
popf
add
and
sti
xchg
pop
and
outsb
mov
mov
xchg
cmp
test
loop
sub
inc
push
cmpsb
clc
mov
add
imul
rorb
inc
clc
lea
icebp
dec
sti
and
incl
cmc
sbb
je
mov
and
pusha
cld
lods
outsl
inc
mov
rcll
sbb
rcll
int3
pop
mov
lcall
push
wrmsr
movsb
add
sbb
frstpm(287
push
xchg
mov
rcll
in
cmpsb
push
add
fistpll
std
in
jbe
nop
sbb
call
mov
inc
std
adc
adc
mov
xchg
rolb
adc
out
sub
or
dec
cld
jmp
mov
aad
jmp
dec
mov
sub
mov
fmull
and
iret
movsl
jg
push
fs
jns
add
inc
fs
cld
outsb
sub
mov
pop
in
add
ret
push
pop
testb
dec
rclb
scas
mov
pop
jle
loopne
mov
sub
xchg
dec
adc
cltd
fs
lret
sbb
dec
es
and
and
dec
es
sub
cltd
fs
insb
xor
gs
dec
jl
les
cmp
mov
out
inc
cmp
pushf
inc
out
xchg
lret
dec
adc
xchg
lret
mov
xchg
lret
in
fcoml
xchg
out
cld
in
pop
fmul
out
xchg
cld
pop
push
std
or
mov
outsl
insb
gs
jne
xor
cs
test
les
inc
inc
push
sub
fadds
mov
dec
add
outsl
je
fs
jne
ret
pop
dec
movzbl
dec
adc
outsl
dec
mov
outsb
cmovg
pop
outsl
jb
insl
jo
cmp
iret
pop
xor
jb
insl
push
je
outsl
push
pop
xorl
je
and
add
pushf
fadds
aas
inc
outsl
mov
inc
pop
xchg
cltd
mov
mov
dec
lcall
cmp
test
fistps
outsl
xchg
sahf
or
mov
fdivs
pop
stc
dec
xor
or
sahf
mov
int3
xchg
clc
jnp
mov
jmp
sbb
pop
add
je
orb
add
fcompl
push
jnp
aaa
push
cs
std
xorb
shr
jp
add
and
adc
add
mov
adc
shll
push
sbb
xor
out
sbb
xor
out
mov
aas
es
adc
mov
push
test
daa
sbb
pusha
mov
xor
adc
pop
mov
mov
pop
dec
cmp
xchg
fs
push
inc
mov
or
inc
lea
pop
sbb
or
pop
mov
aam
or
jl
aas
mov
ret
int3
sub
loopne
fists
ret
adc
push
inc
jb
lret
inc
adc
mov
push
std
pop
jl
popa
xor
mov
test
rol
aas
sbb
in
fs
or
adc
or
aas
movl
sbb
je
xor
push
and
shlb
iret
faddl
iret
adc
dec
and
std
outsl
je
insl
jo
movl
xchg
ds
pop
xchg
addr16
jne
dec
dec
gs
in
jns
test
add
sub
push
push
outsb
divb
arpl
xchg
sub
pop
xchg
aas
push
sarb
lret
rorb
iret
arpl
fsubrs
cli
inc
mov
cld
pop
and
stos
int3
ret
js
push
cmp
call
pusha
popf
sub
lods
out
aas
add
push
push
add
add
in
fidivrl
adc
push
inc
jmp
pop
stos
negb
shrb
or
push
pop
sub
mov
cwtl
or
daa
or
in
push
or
loopne
sbb
rorl
fistps
fimuls
inc
pusha
int3
mov
fildll
jecxz
and
and
mull
sbb
add
add
inc
decb
or
fisttps
jns
jno
add
or
sti
popf
or
mov
cmp
jg
je
pop
cmp
push
sub
sbb
sti
sub
pop
add
and
or
aas
dec
je
pusha
sbb
xlat
pop
sti
mov
adcb
add
lahf
gs
add
mov
add
mull
insl
or
daa
mov
push
and
clc
imul
xchg
out
dec
pop
clc
adc
mov
lods
test
lret
pop
stos
hlt
mov
dec
aas
hlt
pop
add
gs
xchg
lock
add
dec
rorb
je
xor
scas
in
nop
notl
call
dec
hlt
pop
add
jecxz
shlb
xchg
fucomi
jae
xchg
orb
sarl
roll
push
sbb
push
or
add
or
inc
push
les
ret
push
dec
fcomp
cmp
rcrb
shl
je
xchg
push
xor
rcrb
or
mov
loopne
push
jnp
fists
sbb
insl
lretw
jmp
push
push
je
ds
inc
jbe
mov
divl
movb
adc
shrb
add
adc
mov
and
addr16
or
xchg
shrb
cmp
dec
push
add
add
mov
add
or
cmp
dec
cmp
push
xchg
add
jge
out
push
and
jmp
test
sub
insb
jnp
and
pushf
mov
popa
mov
xchg
jg
js
mov
add
jmp
dec
mov
fcoms
subb
movsb
mov
jo
cld
add
pop
inc
test
dec
lahf
xchg
cld
sub
test
adc
and
push
add
icebp
in
roll
idiv
test
movzwl
dec
add
loopne
out
or
test
sbb
ja
nop
xchg
imul
inc
je
dec
fdivs
test
xchg
jmp
and
and
popf
rcrl
or
jl
inc
xor
lea
in
and
mov
add
and
in
and
and
pop
jo
and
aaa
rcrb
idivb
out
xchg
inc
sub
inc
xchg
mov
inc
add
dec
jne
mov
dec
xchg
cmpl
mov
testb
in
repz
dec
shr
add
xchg
push
pop
inc
sub
add
lahf
enter
and
outsb
inc
cmp
push
fcomps
orl
pusha
jl
cltd
mov
pop
fsubs
lcall
or
fidivrs
jmp
jo
lea
xor
psubusw
loope
push
inc
sub
or
fisubs
jl
jmp
div
and
aas
add
das
dec
call
mov
shl
gs
js
push
and
or
or
jl
ss
jb
call
std
push
pushf
movsl
inc
pop
pop
sbb
xor
pop
xchg
and
inc
adc
adc
push
and
add
inc
subl
mov
or
adc
or
mov
enter
push
or
push
and
or
inc
xor
adcl
pop
adc
jb
sbb
dec
in
shl
loope
lds
notb
or
adc
mov
xchg
lock
lea
mov
imul
xor
cs
cmp
call
mov
fs
push
cmp
xchg
pop
aad
inc
outsl
movsb
data16
jmp
push
fldt
sub
jp
lcall
add
mov
ds
sbb
adc
push
xor
ja
repnz
je
jns
call
pop
add
shll
mov
jmp
cmp
adc
cmpsl
and
mov
les
pushl
adc
ds
addb
jl
sub
call
pop
adc
mov
and
call
dec
cmc
lock
push
and
and
inc
loope
jge
jne
or
imul
push
in
jno
inc
add
inc
or
inc
or
shll
int3
pop
xor
or
dec
pop
dec
pop
ret
inc
push
mov
sbb
jecxz
insb
sbb
data16
push
inc
sti
mov
inc
push
add
inc
pop
cmp
push
jge
sbb
mov
mov
in
lahf
push
push
sub
push
mov
add
sbb
movzbl
mov
push
push
and
inc
add
or
adc
in
jl
sbb
in
mov
es
lock
insl
sub
and
jnp
jbe
out
popa
mov
jae
add
shrb
movhps
push
in
or
cmp
scas
rolb
lods
pop
push
sub
mov
and
mov
add
add
lcall
mov
loopne
push
sbb
push
dec
pop
sub
add
pop
dec
push
es
cmpsl
cmp
repz
sbb
filds
mov
ljmp
push
daa
or
xchg
inc
push
mov
insb
imul
adc
std
push
call
pop
add
xor
or
and
inc
in
adc
popf
or
cld
ret
inc
data16
mov
mov
cmpb
or
and
cmc
mov
push
cmpb
cmp
or
pop
popf
sbb
sub
or
add
cs
push
addr16
adc
push
lods
or
enter
add
cmp
ja
jnp
sbb
into
notb
push
jns
out
sub
cmpsl
movsl
jge
repz
popf
int3
push
jae
pop
out
iret
shll
out
sbb
mov
push
xor
or
popa
sub
stos
decb
add
ds
pop
push
divl
jp
jbe
mov
movswl
and
xor
mov
mov
pop
fldcw
fistpl
sbb
test
mov
push
adc
pop
movsb
cmp
adc
lock
mov
or
add
xchg
push
xchg
mov
push
sub
nop
inc
mov
add
xor
or
dec
push
loopne
les
sbb
xor
fmull
mov
adc
jle
xor
ss
add
and
push
or
je
add
cmp
inc
outsl
test
push
sub
enter
inc
mov
fs
pop
dec
je
jmp
push
xor
shrb
add
add
outsb
les
jno
sub
test
in
int3
pop
sub
incl
test
shl
jns
mov
pop
dec
sbb
cmpsb
sahf
outsb
jnp
leave
call
lds
jmp
push
push
outsl
mov
cmpsb
sub
pop
rclb
dec
pop
loop
sbb
xchg
inc
dec
jb
int
aam
bound
inc
pushl
pushl
pop
nop
cmp
and
mov
outsb
cmp
fmull
adc
cwtl
mov
fs
jo
jl
lcall
cmp
inc
push
jmp
lods
shl
and
sub
xor
add
and
mov
mov
adc
shl
inc
popf
adc
leave
fs
sbb
stos
jo
push
mov
sbb
aad
and
mov
arpl
push
mov
mov
xor
inc
in
mov
das
loope
sbb
fwait
adc
or
push
lods
mov
cmp
lds
in
push
stos
add
insl
mov
cmp
cmp
stc
mov
push
div
sbb
jle
mov
and
or
push
insb
and
loopne
ret
mov
loopne
push
test
cld
add
in
mov
je
cs
inc
fists
mov
jmp
cs
inc
xor
dec
dec
ret
fimull
inc
movsb
or
sub
es
int
mov
in
adc
cmp
repz
mov
test
pop
daa
stc
dec
clc
mov
dec
push
push
orb
pop
cmp
push
inc
mov
dec
cmp
inc
dec
fcoms
xor
inc
cmp
dec
cmp
ret
cmp
lcall
adc
pop
gs
and
adc
pop
fdivl
or
pop
xor
lcall
xor
ljmp
mov
xor
pop
jne
and
addb
or
cmp
ja
add
adc
and
xchg
or
and
insb
movl
jns
cmp
repz
xchg
mov
shrl
xlat
pop
daa
inc
sahf
lock
fs
sbbl
inc
push
js
lcall
or
and
sbb
fsubrl
or
imul
in
and
adc
and
cmp
popa
imulb
cmp
ret
lods
and
or
js
fwait
pop
inc
lock
and
or
adc
daa
cmp
pop
cmp
jne
rorl
pop
xor
int3
test
pushf
arpl
lcall
insb
fdivs
decb
mov
and
add
lcall
or
adc
cmpb
sub
and
or
cwtl
mov
int3
cmp
add
sub
cmp
nop
mov
rorb
pop
aas
mov
pop
js
push
push
lods
loope
xchg
ret
xor
call
movl
or
gs
outsb
dec
sbb
add
mov
mov
cmpsb
inc
or
or
outsl
orl
or
or
andb
mov
or
xchg
pop
add
xchg
imul
daa
pop
rcll
mov
mov
jb
mov
sbb
xchg
sub
int3
bnd
or
push
adc
push
jg
inc
fwait
and
xchg
mov
mov
sbb
or
movsl
notb
mov
inc
add
mov
inc
insl
jo
sub
leave
jp
das
dec
jne
das
add
push
insl
popa
and
je
mov
inc
xchg
sbb
xchg
jp
addr16
push
ds
gs
or
bound
sbb
xchg
jb
outsb
arpl
scas
or
dec
and
scas
popa
movb
out
cmp
push
or
xor
and
out
arpl
popa
outsb
cmpsl
pop
jl
aas
xchg
xor
push
outsb
imul
aas
inc
arpl
push
rcrb
aas
add
inc
pop
pop
dec
inc
iret
push
fdivs
sub
inc
jns
aaa
push
inc
add
sub
outsl
out
mov
add
inc
test
xor
pushf
cmp
add
xchg
jp
pop
lea
adc
lods
aas
sti
and
ss
dec
pop
and
mov
mov
scas
xchg
int3
push
sti
inc
or
mov
xor
das
add
xor
rorl
test
rolb
cmp
aad
lea
adc
pop
mov
jne
and
leave
lcall
les
push
mov
add
js
xchg
andl
xchg
pop
adc
mov
and
rolb
or
push
nop
les
mov
in
xchg
pop
adc
sbb
mov
jns
xor
xlat
cmp
out
mov
gs
push
push
aas
push
aas
jp
push
mov
pop
jle
xor
enter
xchg
mov
xor
mov
jle
push
or
push
mov
movsl
ds
xor
push
push
or
pushl
mov
sbb
mov
aad
aam
dec
xorl
sbb
add
cmp
push
push
jne
popf
cmp
out
jb
pusha
jae
movsl
xchg
shr
push
mov
sbb
imul
bound
xchg
push
bndstx
cs
add
adc
add
add
xchg
sbb
addb
pop
test
pushl
mov
fcomip
insl
jge
cmp
inc
mov
xchg
adc
into
xorl
xchg
or
movsl
test
lea
push
push
ljmp
xor
or
add
js
pusha
add
lret
add
adcb
into
dec
push
mov
or
mov
call
mov
cmp
adc
ret
call
xor
xor
dec
push
sti
push
shlb
jb
daa
xor
inc
add
sub
xchg
shlb
call
and
jo
jns
daa
rep
arpl
push
xchg
sbb
sub
data16
das
in
ret
pop
dec
je
xor
ret
cwtl
sarb
add
nop
movw
add
push
push
in
and
mov
push
psubq
mov
mov
sbb
push
adc
enter
add
lcall
adc
jnp
and
and
in
adc
inc
ds
or
je
lock
nop
loope
cmp
std
repnz
dec
jb
or
pop
jbe
sub
imul
cmp
rorb
mov
jnp
push
mov
int3
fisubrs
ret
jno
jge
ja
inc
mov
dec
push
add
test
push
fnstenv
dec
mov
imul
add
loope
sub
inc
enter
jne
add
aam
push
fdiv
push
or
fwait
stc
dec
sub
pusha
insb
and
clc
addr16
mov
xchg
jl
inc
xor
dec
js
add
hlt
cmp
lock
add
leave
xor
add
sbb
rclb
add
cli
mov
xor
sub
and
mov
add
dec
jne
sti
cwtl
arpl
subb
cmp
or
jno
dec
mov
pop
cs
out
cmc
adc
jl
jg
add
clc
scas
jne
xor
adc
call
or
adc
mov
adc
pop
lea
adc
mov
add
fcmovb
cmpsb
add
dec
out
imul
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
cwtl
cltd
leave
leave
leave
leave
lcall
leave
sahf
lahf
addb
addl
xchg
leave
mov
jmp
addr16
popa
insb
jae
shrb
xlat
or
jb
rclb
mov
sbb
lea
fbld
xor
mov
out
cli
incb
mov
mov
adc
or
call
dec
cld
jne
mov
xor
test
jne
dec
jne
jmp
xor
cs
dec
xor
cmp
jle
aam
inc
fsubr
inc
daa
cmpb
dec
jl
int3
rolb
cmp
negb
cmpl
xor
adc
push
movsb
mov
cmp
adc
scas
lock
rcrb
pop
push
push
subb
pop
ss
or
mov
push
dec
adc
mov
and
pop
jo
sbbl
pop
clc
jl
or
popf
add
enter
mov
and
cmp
mov
lret
je
mov
dec
and
sbb
inc
add
and
outsb
mov
jmp
jle
in
je
jmp
cmp
rcll
insb
sbb
test
out
jne
mov
out
mov
sub
pushl
rorb
rep
mov
push
dec
sarl
or
or
dec
sbb
sbb
add
dec
jne
mov
mov
mov
jmp
cmpsl
push
mov
mov
mov
cmpb
mov
or
dec
add
and
decb
in
jb
ja
mov
adc
sbb
std
add
popf
enter
add
movsb
push
add
add
xchg
cmp
or
movsbl
and
ret
jle
add
ret
pop
iret
adc
cmp
mov
add
ds
pop
in
incl
adc
mov
mov
cmpb
mov
or
push
add
out
pop
mov
or
add
or
mov
fcomps
imull
popa
add
or
xor
push
adc
por
inc
stos
adcl
fimuls
mov
jmp
sbb
fwait
rol
lret
dec
cmc
sbb
cmp
in
fcoml
inc
inc
xlat
add
lock
mov
shl
push
sub
or
mov
mov
jle
mov
shl
xchg
int3
incl
cmp
pop
test
sub
and
incb
sub
cmp
fmull
rep
test
outsb
mov
push
jmp
mov
test
les
in
sbb
cmc
cs
cmp
pop
add
dec
insl
xchg
scas
cmpsb
and
dec
pop
lahf
aaa
clc
sbb
sub
pshufw
addr16
loope
addl
inc
sub
ret
insl
and
ret
xchg
imul
push
mov
push
push
mov
or
adc
pop
ffree
insb
stos
pop
and
mov
add
jmp
les
loopne
mov
and
xor
add
fwait
loope
movsb
mov
push
jo
lcall
mov
clc
inc
mov
and
jmp
jmp
loop
inc
cld
call
adc
adc
ficoms
mov
dec
push
loopne
rorb
push
mov
cld
xchg
cmp
jecxz
fs
cld
call
jmp
iret
mov
pop
sbb
cmp
xor
xchg
rorb
lds
mov
loopne
pusha
add
adc
mov
mov
inc
xlat
lcall
xchg
iret
jnp
mov
fisubl
outsl
movsl
fldt
fstps
fwait
add
sub
call
add
sti
mov
mov
inc
or
cmp
or
cmp
lret
add
mov
mov
dec
add
fiaddl
cmp
cmc
js,pn
pop
jne
sahf
out
inc
sub
cmp
adc
sbb
xchg
xor
lock
fldenv
add
mov
add
sbb
sarl
push
and
test
ret
bound
ja
cmp
adc
rolb
loop
jo
js
pop
rcrb
xor
and
pop
jmp
sbb
sub
fucomp
push
and
push
mov
and
push
push
stos
push
je
jmp
and
mov
jp
loopne
lock
enter
pushl
int3
fildl
sbb
mov
adc
add
mov
mov
mov
mov
mov
mov
ja
jae
loopne
and
inc
pop
aas
add
xor
enter
imul
jl
dec
add
lahf
jl
dec
mov
mov
cmp
leave
std
or
push
cwtl
jmp
cmpl
jmp
add
mov
mov
or
test
or
pop
call
adc
mov
add
loop
ljmp
test
mov
mov
pop
sbb
and
nop
int3
sbb
or
mov
outsb
insl
outsb
je
add
decl
data16
mov
jns
sbb
scas
sbb
dec
push
gs
inc
insb
popa
jae
gs
add
divl
sbb
imul
jnp
push
adc
xchg
bound
test
lods
mov
sbb
sbb
adc
dec
outsl
sub
pusha
nopl
sub
popa
fs
hlt
out
push
testb
jns
mov
mov
add
xor
sub
test
pop
adc
push
ja
fwait
push
mov
inc
je
insb
or
ss
lock
dec
imul
pop
jle
xchg
test
or
clc
jg
sub
or
dec
gs
jo
outsl
lock
ds
nop
adc
sbb
aaa
xchg
or
or
gs
cli
lret
fistl
jae
dec
add
mov
jne
push
add
pusha
xchg
adc
inc
jbe
xor
shrb
or
push
push
fcoms
push
fldt
aam
lret
sub
rorb
fistpl
xlat
ds
pop
push
insl
wrmsr
aaa
or
aaa
dec
aas
mov
push
cmc
rolb
mov
inc
inc
imul
nop
aas
ret
pop
and
mov
dec
and
mov
xor
aas
mov
dec
jo
xchg
xlat
xchg
cmp
dec
ret
ds
daa
pop
and
or
pushf
aas
jmp
clc
aaa
or
fimull
enter
scas
jecxz
adc
aas
scas
pop
push
jb
shll
in
cmp
aas
inc
pop
xchg
push
inc
sbb
out
insl
shrl
enter
aas
mov
inc
add
cmpsl
push
jae
jae
in
pop
add
aas
mov
mov
imul
mov
fsubl
cltd
xor
aas
push
pop
or
mov
add
push
adc
scas
sbb
mov
jo
sub
push
sub
smsw
aas
push
and
imul
jg
push
cwtl
outsb
rcr
mov
or
mov
inc
call
inc
and
jb
je
cmpb
hlt
sub
es
push
add
lods
popa
dec
dec
arpl
nop
imul
push
js
push
add
nop
push
xor
and
and
xchg
or
jbe
mov
inc
or
xchg
repz
inc
or
call
and
mov
pop
push
cmp
fnstcw
push
push
push
mov
aam
in
pop
clc
push
and
adc
add
inc
sbb
push
inc
subl
add
test
movl
adc
mov
pusha
or
fimuls
xor
int3
lea
fwait
push
movsl
test
xchg
test
sub
mov
cmp
push
xor
ja
pop
adc
jp
mov
cmp
xchg
imul
shll
inc
imul
jb,pn
cmp
jmp
fucom
pop
xor
dec
adc
push
lock
addr16
push
aas
addr16
dec
addr16
dec
sub
outsb
push
cmp
test
ficoms
add
push
cmp
push
repnz
insb
arpl
mov
dec
js
jbe
pop
or
imul
sub
cwtl
dec
sar
rorb
jmp
in
push
xlat
dec
repnz
outsb
and
sahf
cmpsl
insl
xor
push
cmp
xor
add
out
mov
icebp
add
in
mov
sti
sbb
inc
push
push
mov
push
sub
sub
rorl
jns
insb
jnp
mov
mov
xchg
push
pushf
push
mov
pop
cmpb
jg
enter
add
xchg
inc
adc
outsb
nop
imul
incl
xor
fildl
adcl
loopnew
cmovns
in
mov
xor
pushf
jae
push
rclb
sahf
cmpsb
add
scas
cmp
or
sub
or
scas
leave
loopne
or
cli
inc
out
or
jbe
insb
daa
jmp
add
les
fnstcw
jle
jg
addb
out
fsubrp
andb
jbe
push
and
stc
fisubrl
ss
ja
jo
mov
jl
jae
xorl
sahf
push
cmp
iret
loopne
hlt
cmpb
test
jno
aas
lret
xor
or
mov
mov
pusha
jo
push
dec
lods
xchg
adcb
js
sbb
push
decl
inc
cmp
outsl
bound
push
cmp
push
xlat
dec
or
addb
push
out
lahf
jo
mov
mov
div
mov
pop
push
fadds
fdivl
xchg
ret
xlat
into
outsl
mov
mov
mov
jle
mov
outsb
pushf
mov
jo
mov
nop
mov
mov
add
paddusw
lea
cwtl
add
sub
addl
add
and
push
mov
movb
lea
jnp
imull
xchg
mov
popl
pop
or
xor
sbb
mov
inc
inc
das
test
add
pusha
inc
cli
push
sbb
xchg
push
push
pushl
daa
test
or
fs
mov
arpl
cmp
shlb
adc
addb
adc
push
lock
clc
aas
enter
and
pop
addr16
inc
mov
lea
or
sbb
pop
or
xchg
les
mov
push
test
iret
lahf
dec
push
pushf
loop
xchg
iret
cmp
adc
xchg
push
pop
ror
ljmp
divl
inc
sbb
pushf
jecxz
inc
xchg
rclb
enter
je
push
div
xchg
pop
inc
pusha
push
lahf
repz
and
stos
loopne
inc
dec
out
lea
out
loopne
or
dec
push
addb
inc
adcb
cmp
icebp
pop
adc
push
ret
add
xchg
inc
in
cltd
call
push
andps
fdivrs
shlb
pusha
or
mov
adc
aaa
sbb
cwtl
pop
xor
pop
inc
push
sub
in
push
imul
push
in
out
mov
int3
inc
dec
pop
imul
out
xchg
subl
mov
inc
ret
daa
mov
dec
xor
add
dec
pop
testb
addr16
adc
fcmove
jecxz
and
loope
pop
push
rorb
out
loop
adc
jbe
push
and
add
repz
dec
les
mov
test
sub
lea
pushf
inc
aaa
aas
mov
jp
xlat
add
push
mov
test
test
xchg
out
mov
mov
lcall
push
add
outsl
sub
mov
jp
adc
xchg
es
stos
cmp
fsubs
or
movsl
scas
mov
into
lds
sbb
push
pusha
dec
or
jl
mov
adc
push
lahf
movb
adc
cs
lods
add
iret
aas
or
inc
xlat
nop
jns
fcmovbe
cmpsl
fdivrs
add
loope
cwtl
roll
cs
shl
int
sbb
or
mov
popa
insl
gs
dec
das
add
pop
jo
gs
test
jg
sbb
das
pop
call
rcll
stos
mov
or
mov
mov
test
sub
fsub
shrb
mov
push
movsb
aam
adc
cmp
loopne
xor
dec
sub
iret
outsl
outsl
pop
sbb
clc
in
pop
inc
int
dec
addb
jns
mov
sub
mov
sub
int
cmc
and
pop
push
push
aam
movsl
cmpb
bound
les
ss
scas
jl
push
inc
fldl
inc
lock
insb
add
dec
fldenv
lcall
sub
pop
jbe
push
ret
shl
cmp
fs
mov
incl
and
adc
cli
stc
clc
out
or
push
push
push
push
push
push
inc
icebp
push
call
mov
jns
loopne
sub
cld
push
add
iret
repz
aam
fcoml
push
in
rolb
sbb
or
push
xlat
pop
and
rolb
add
insl
test
imul
add
mov
adc
decl
pop
push
cmp
addr16
xchg
stos
ds
push
push
cmp
divl
fidivrs
out
push
les
loopne
cmpsb
jl
rcr
push
inc
popa
pop
push
and
dec
cli
imul
dec
fidivrs
dec
push
push
push
push
push
push
cmp
and
push
mov
jb
mov
fcompl
jns
xor
dec
loopne
inc
addb
test
loopne
out
cmp
pushl
sub
aaa
pop
or
sub
fs
jnp
dec
leave
push
sbb
push
dec
dec
bound
sub
or
jo
or
icebp
cli
and
or
pushf
inc
jecxz
pop
push
xchg
je
adc
add
inc
pop
outsl
push
xchg
inc
push
fistpl
adc
pop
ret
dec
sbb
jg
jl
cmp
jne
cmpl
je
movl
in
dec
and
mov
addr16
jb
jne
mov
fsubrl
xchg
jl
das
scas
and
nop
mov
pushf
push
enter
fsubrs
and
inc
jmp
in
mov
jo
jae
push
push
clc
cmp
ja
bound
xchg
roll
dec
cs
and
and
or
in
and
jmp
xchg
pop
and
lret
mov
ljmp
mov
mov
xchg
or
and
lret
add
lock
loopne
pop
add
test
mov
aas
sub
mov
add
test
add
jge
test
sbb
idivl
and
cmp
xor
filds
sub
clc
shlb
mov
add
cmp
addl
add
mov
and
jne
int
jb
js
cmp
or
push
add
outsb
or
sub
inc
push
setne
sbb
push
cmc
addb
push
filds
movsl
pop
mov
sub
fdiv
mov
dec
cmpb
lock
and
sub
or
sub
pop
add
jne
mov
push
loope
imul
or
jle
add
jmp
push
push
mov
xchg
push
pop
shrl
mov
pop
or
adc
std
in
push
inc
int3
sbb
xchg
sarb
jne
inc
dec
jne
pop
adcb
sbb
leave
jnp
mov
mov
xorl
mov
test
inc
pop
push
mov
xchg
movb
sbb
add
cmpsb
jle
addl
sub
ja
cmpl
dec
popa
jo
or
andb
adc
sub
fwait
mov
cmp
adc
add
mov
inc
mov
and
and
cmpsl
jo
ljmp
jnp
or
fdivs
jbe
movl
push
push
push
dec
inc
cmpl
cli
inc
jns
movsb
sbb
xor
add
mov
push
adc
subl
fistpl
mov
cmp
in
imul
imul
incl
cmp
jl
mov
mov
pop
bound
jne
dec
fists
enter
inc
insb
sub
mov
adc
lcall
in
sbb
mov
sbb
xchg
lret
les
inc
adc
jecxz
xchg
jecxz
nop
lahf
ficoml
and
jns
mov
inc
or
ret
add
mov
sub
dec
add
fisttpl
data16
adcb
in
cmovg
mov
sbb
jo
daa
pop
call
push
push
lock
sti
jp
fsubr
dec
jmp
div
leave
rcrb
pop
push
mov
call
popa
add
add
mov
push
inc
push
inc
push
inc
xor
cmp
lahf
xchg
mov
js
add
rcr
xchg
lret
push
adcb
xchg
fcomps
shrl
xchg
repnz
test
inc
mov
in
cmp
and
add
rcrb
push
xchg
jg
test
pop
pushf
aam
xor
mov
and
pop
out
mov
and
mov
call
hlt
mov
or
rorb
add
lock
int
jne,pn
cmp
inc
pusha
pop
and
aas
in
adcb
cld
fiaddl
jle
push
call
xor
test
pop
lock
andb
cmp
inc
push
clc
mov
fucomi
mov
dec
fs
es
in
clc
cmp
ret
pop
push
dec
jnp
dec
jno
inc
negl
mov
inc
jl
dec
call
add
lock
mov
dec
mov
popl
push
std
push
add
adc
jmp
sbb
add
stos
popf
into
inc
inc
enter
push
shlb
out
jge
roll
mov
mov
mov
or
fldl
sbb
pop
int
and
pop
cltd
shl
mov
sub
pusha
push
xlat
imul
xchg
call
lock
add
push
orl
jcxz
or
adc
insb
loopne
xor
lret
test
dec
pop
pop
push
push
push
pop
xlat
and
mov
xchg
sub
mov
adc
add
rolb
inc
mov
inc
rcrl
hlt
or
mov
mov
scas
iret
xor
ja
dec
loope
adc
xchg
sbb
cmp
push
test
cmpb
add
sub
int
xorl
je
push
lock
outsb
out
loopne
mov
or
ja
pop
pop
adc
sub
leave
lahf
xor
imul
push
cmp
inc
or
sub
xchg
jmp
push
out
scas
icebp
inc
or
clc
xor
jo
lock
cmpsl
jo
adc
clc
add
enter
adc
xchg
hlt
sbb
or
jae
pop
lods
clc
lret
mov
mov
testl
movsl
jg
andb
les
xor
xlat
enter
fnstsw
xor
in
arpl
cmp
pop
fcoms
out
sub
dec
sub
inc
add
jne,pt
add
testb
in
in
and
jmp
pop
loop
es
out
sub
insb
cmp
arpl
mov
adc
in
add
cmp
nop
push
mov
or
push
or
pop
cmp
mov
dec
push
and
popf
mov
cwtl
fs
push
mov
cli
cli
inc
push
add
dec
pop
xchg
inc
mov
nop
pop
hlt
scas
test
sub
or
jmp
psraw
or
push
add
addr16
sub
dec
or
or
xor
lret
shlb
push
lret
inc
ds
add
pop
mov
mov
inc
push
add
scas
adc
cld
cmp
repz
sbbb
add
sbb
adc
js
jne
xchg
lcall
arpl
or
lea
js
push
dec
pop
fsubs
inc
push
cld
cwtl
mov
and
lea
mov
sub
add
dec
cld
mov
jmp
add
dec
jne
mov
pusha
inc
add
push
inc
mov
cmp
jne
movb
mov
jmp
jmp
jns
sub
jle
stos
xor
fadds
jo
sub
das
mov
add
adc
cmpsl
insl
scas
sarb
push
enter
fisttpl
push
mov
xor
loopne
cltd
loope
mov
cli
clc
call
rolb
and
xor
jbe
je
fdivrs
dec
adc
cmc
or
dec
insb
test
cmp
clc
adc
ja
push
mov
lret
popl
push
cmc
xor
and
push
xor
repnz
repnz
dec
pop
inc
icebp
inc
jp
push
push
sub
push
dec
fadds
jo
rcl
dec
mov
pop
mov
inc
movsb
addl
add
add
cmp
nop
dec
nop
mov
sbb
push
aas
test
mov
data16
lods
cmpsl
adc
rolb
out
pop
repz
jle
subb
xor
mul
push
outsb
xor
push
mov
push
or
add
mov
jnp
adc
push
sbb
hlt
outsb
loop
popf
jo
out
lock
cmp
sub
push
lock
daa
mov
fstpt
xor
popf
push
inc
or
jo
je
push
push
out
sub
add
pop
enter
call
push
notl
xorl
test
lea
pop
jbe
fnstenv
dec
rorb
add
in
sbb
test
dec
rclb
hlt
leave
mov
loopne
fstl
popa
ret
div
sbb
and
adc
sar
cmp
sete
cmpb
add
imul
push
std
sub
cwtl
test
cwtl
mov
push
lods
dec
arpl
mov
push
in
aas
or
adc
xchg
or
inc
fisttpll
push
pop
and
cmp
adc
jae
ljmp
jp
mov
inc
or
xor
pop
dec
call
push
dec
iret
adc
mov
sbb
push
fmull
dec
loopne
movsl
cld
testb
orb
xor
into
add
xor
stos
mov
fcomps
jge
ljmp
adc
aam
mov
ret
and
adc
lret
inc
add
pop
stos
addl
xchg
push
sub
jo
mov
sbb
add
ds
aaa
jmp
ja
mov
clc
bound
inc
pop
js
rclb
xor
fnsave
pop
cmpsb
mov
pop
dec
sbb
inc
add
adc
or
xor
loopne
ret
ds
push
lock
decl
cli
inc
jle
mov
test
jns
add
sar
jmp
and
jle
mov
into
jmp
mov
dec
xchg
xor
int3
pop
idiv
xchg
cmp
jge
pop
add
adc
jne
sbb
ret
icebp
leave
decl
adc
mov
sub
push
lds
mov
sbb
jns
cmc
and
push
hlt
push
icebp
push
rolb
daa
lea
divl
pop
push
lret
mov
mov
loopne
mov
addb
inc
mov
cmp
or
push
movsl
pop
sahf
pop
mov
pop
and
jns
xor
xchg
test
imul
inc
adc
js
mov
popa
test
jp
sbb
pop
mov
xchg
push
je
push
add
add
xlat
push
int3
sbb
cmp
push
pop
push
jns
mov
dec
jle
aas
sub
in
sbb
rclb
xchg
orb
rolb
aaa
cld
mov
nop
jmp
dec
dec
mov
sub
jg
dec
movsb
aaa
loopne
or
push
add
dec
cmp
inc
add
das
xlat
lea
orl
and
xchg
in
adc
fucomi
hlt
adc
or
dec
data16
pop
popf
push
or
xchg
cmp
push
pop
loopne
fisttpll
mov
call
jno
cltd
xor
aaa
jle
ficompl
jmp
add
adc
push
sbb
pushf
inc
jne
addr16
mov
dec
add
stos
loopne
fcompl
lret
xchg
shll
out
ja
sbb
sub
fisubs
les
mov
mov
sub
sbb
aaa
inc
and
jns
sbb
mov
mov
shrb
xor
push
or
jo
orb
push
loope
jle
adc
adc
in
xor
add
cmp
jge
stos
lcall
mov
loope
je
push
sbb
cmp
xor
xor
fdivr
rcrb
clc
add
add
sbb
shll
mov
add
out
je
jp
and
or
jbe
push
das
push
cwtl
sbb
xchg
adc
je
jae
lock
adc
xlat
add
mov
sbb
inc
out
aad
jnp
adc
sub
add
cmp
jae
add
leave
je
icebp
fistl
inc
stos
adc
btr
cmp
jl
mov
push
push
push
inc
pop
adc
pop
jmp
ret
inc
jo
sub
ss
call
dec
inc
cmp
test
hlt
fdivrl
adc
je
sbb
mov
mov
cmp
ja
and
bt
jb
nop
add
cmp
ret
in
dec
cld
cmp
jl
adc
push
inc
cmp
jne
inc
decl
jne
imul
pop
add
xchg
push
or
mov
ss
xor
leave
mov
in
push
out
imul
sbb
adcb
or
rorl
sarb
mov
adc
jae
mov
or
xchg
ja
add
pop
pop
fstps
ret
mov
test
push
es
push
cmc
imul
dec
inc
outsb
imul
sbb
pop
lcall
mov
or
aas
mov
pop
mov
imul
add
push
ret
mov
aam
subl
pop
sbb
stos
xor
test
jle
add
pushl
push
js
in
ja
add
mov
dec
leave
mov
out
xchg
dec
mov
push
pop
cmp
les
adc
jo
and
pop
or
mov
xor
mov
hlt
and
or
sub
stos
jmp
dec
enter
aas
or
dec
inc
sub
fwait
sub
cmpsl
mov
dec
pusha
xor
mov
cmp
add
cld
addb
adc
or
mov
mov
bound
jmp
pop
push
adc
dec
dec
sti
pop
fisubl
add
add
mov
or
icebp
pop
jne
or
push
std
ret
xchg
mov
lret
jecxz
adc
inc
mov
fbstp
inc
cmp
jle
rorl
jbe
stos
add
aad
dec
add
mov
push
mov
pop
cmpl
ficompl
jmp
dec
jne
hlt
sub
pop
testl
sub
and
ret
loop
mov
adc
xchg
adc
and
sbb
ret
data16
and
das
ja
mov
in
xchg
lock
cltd
jnp
cmp
xchg
or
and
hlt
and
in
mov
or
pop
sbb
orb
dec
lock
and
mov
rorl
mov
ret
mov
sti
insb
sub
inc
test
imul
and
inc
push
add
js
ja
cmp
je
aas
add
jge
aam
mov
bound
fs
lsl
push
pusha
shr
sbb
outsb
pop
repnz
into
jne
adc
add
js
mov
mov
add
or
nop
adc
push
inc
loope
idivb
mov
pop
insl
pop
enter
ret
test
sbb
fdivrs
adcb
pop
sbb
cmpb
pop
xchg
enter
bnd
adc
into
out
push
and
sahf
outsl
gs
pop
adc
add
dec
loopne
adc
ljmp
pusha
je
sti
add
pop
rorl
test
rcr
scas
outsl
int3
adc
in
mov
shrb
inc
and
add
and
mov
add
cmp
push
push
lret
cli
add
jle
jle
inc
es
nop
dec
ret
addr16
lea
jmp
fidivrl
movsl
addb
jo
pop
jmp
decl
pop
mov
das
testl
adc
call
stc
fcomp
mov
ljmp
mov
or
test
push
arpl
mov
jo
nop
hlt
push
sarl
pusha
sub
dec
clc
jge
jno
inc
bound
pop
cmc
mov
cmc
inc
imul
push
rolb
push
pop
pop
add
adc
push
clc
pop
inc
pusha
adc
sahf
jno
push
movsb
lcall
and
push
test
inc
sub
sub
and
mov
fldt
out
je
inc
lcall
and
mov
xor
outsw
adc
ret
movsb
fisubrs
popf
inc
add
sub
andl
jl
inc
testl
cwtl
jb
cmp
jne
sbb
adc
sbb
scas
popa
xchg
jl
adc
push
sbb
cmc
inc
dec
jne
fstps
push
andl
cmp
mov
jmp
push
lods
or
test
rol
sub
movsl
nop
and
cld
or
iret
cs
dec
sbb
pop
jl
in
inc
rcrl
inc
inc
incl
mov
call
xchg
push
mov
or
jle
dec
sbb
pop
ret
push
test
insb
add
popa
sub
jmp
fstps
rcrb
rclb
fwait
xchg
mov
test
pop
scas
sub
jb
dec
je
jmp
push
clc
jmp
mov
outsl
pop
ret
adc
inc
adc
mov
inc
sbb
pop
fs
inc
add
cmp
mov
ret
xlat
adc
jo
arpl
xchg
xor
sub
mov
popa
addb
incl
xchg
jp
es
mov
stos
dec
mov
pop
xor
cmp
lea
mov
daa
cld
pop
and
and
ffree
je
mov
stos
mov
into
mov
push
imul
jns
scas
test
push
cld
clc
fistpll
push
xchg
enter
cmp
dec
jne
loopne
jp
scas
mov
int
dec
dec
out
sub
into
je
or
daa
das
js
adc
in
cmpsl
cmpsb
adc
push
xchg
add
jne
pop
test
pop
je
movzbl
adc
testl
xchg
pop
adc
loopne
popa
cs
sbb
ret
mov
or
pop
outsl
add
daa
sub
dec
in
fdivl
jp
adc
jne
xor
ja
test
jno
mov
stos
jo
or
pop
sub
mov
inc
xlat
cmp
or
pop
pop
fnstenv
add
adc
and
add
inc
or
add
xor
push
pop
add
shlb
pop
mov
mov
rolb
push
or
icebp
out
adc
test
and
xor
xlat
adc
dec
push
cmc
jbe
js
add
cmp
jne
icebp
jo
mov
pop
loop
cmp
jge
push
sahf
in
lods
pop
jecxz
in
cwtl
aas
cwtl
jne
adc
jecxz
or
out
cld
jbe
in
dec
xorl
add
addr16
add
mov
pusha
cmpsl
dec
loopne
mov
xchg
rcrl
iret
mov
ja
lds
add
mov
pop
cld
xor
dec
ja
sub
mov
js
rcll
push
sub
cld
rcl
sbb
shlb
xorps
sbb
mov
jns
aad
mov
ja
sub
fcoml
call
jecxz
js
push
dec
jle
cld
add
mov
ljmp
frndint
adc
ret
xchg
mov
or
cmp
jbe
mov
add
pop
imul
js
aam
jo
aaa
jae
inc
nop
and
pop
inc
jo
dec
decb
cmp
push
push
push
aam
push
fisttpll
jb
mov
lcall
dec
clc
ds
adc
sbb
clc
js
pop
sbb
mov
lret
fs
xor
dec
and
cmc
pop
mov
movsb
jne
inc
es
mov
or
add
lea
push
dec
insl
movsl
xchg
nop
pusha
jnp
adc
dec
rcl
and
lock
fsubrl
sahf
lock
cmp
pop
add
jp
add
loope
xchg
outsb
call
push
jl
jne
jne
iret
aas
inc
imul
test
dec
addl
inc
clc
and
push
sub
add
scas
mov
xor
dec
add
add
add
push
leave
insb
dec
or
addl
outsb
loopne
pusha
cld
adc
stos
fmuls
push
loopne
lret
pop
add
movsl
mov
inc
clc
lret
into
stc
test
hlt
jp
dec
cmp
fwait
test
js
push
mov
fadds
cmp
pop
loop
lods
pop
and
push
sub
clc
and
ltr
sahf
lea
mov
cld
push
add
imul
jnp
jg
xorb
aaa
iret
cld
inc
mov
packssdw
jl
push
push
lahf
lock
lahf
sub
mov
or
xor
subb
push
cli
sbb
stos
mov
or
sub
push
mov
aas
pop
jl
xor
adc
push
mov
add
jae
call
dec
pusha
push
cmp
and
aad
js
push
addr16
xchg
int3
hlt
popa
sub
lock
push
fistpll
lret
popa
cmpsl
xor
mov
add
je
addl
dec
adc
addl
pop
testb
ud0
or
mov
push
jne
les
fsubrp
outsl
jle
mov
jecxz
push
inc
inc
add
and
sub
sub
or
inc
icebp
push
loope
je
insb
out
or
in
or
sbb
lods
xchg
pop
xor
pusha
test
sbb
jp
or
xor
fwait
jmp
push
lock
pop
je
mov
xor
or
je
mov
push
push
test
add
insb
daa
fwait
jge
loope
into
aaa
add
mov
out
pop
cld
xchg
insb
adcl
andb
adc
roll
lock
lret
add
or
inc
dec
mov
stc
inc
or
call
jle
inc
jle
add
andl
cs
fistpl
or
mov
and
shll
xor
and
popa
mov
dec
and
adc
push
xchg
xlat
hlt
adc
or
nop
daa
jmp
xchg
jmp
inc
pop
pop
loopne
int
fs
cwtl
jno
pop
adc
imul
sbb
movsl
or
scas
cmp
sbbl
push
or
xchg
cmp
sbb
mov
and
mov
dec
pop
pop
mov
push
mov
cmpsl
pop
or
in
aaa
mov
dec
push
sub
and
xor
xlat
pop
mov
sbb
popf
mov
inc
cmp
and
sbb
adc
fcoml
sub
mov
aas
mov
mov
adc
lock
xorl
mov
xchg
push
adc
adc
cmp
cwtl
das
or
cmp
xchg
cmpl
hlt
cmp
sbb
and
sbbl
mov
loopne
in
inc
jb
jl
ficoml
adcb
jmp
push
fwait
sub
lock
popf
push
inc
test
je
dec
outsl
xor
inc
in
mov
adcb
cwtl
adc
ret
insb
mov
add
inc
jo
decl
sub
je
sub
jne
lret
sub
jns
and
andb
cmp
mov
or
jne
or
jg
or
mov
or
loopne
inc
add
or
call
push
call
fsubrs
rolb
andl
inc
in
inc
clc
add
call
in
popf
shrb
add
cmp
jne
sbbb
and
je
add
xor
jp
add
xor
or
nop
rolb
ss
je
fndisi(8087
inc
popa
pop
inc
je
or
push
cwtl
or
scas
das
jge
popf
nop
pop
bound
test
pop
cmc
or
mov
rcrl
sbb
roll
sub
xbegin
jge
fdivrp
push
mul
sub
addr16
jns
push
jp
jno
pop
or
adc
test
insb
cmc
pop
sbb
shlb
pop
fistps
cmpsl
testb
jb
loopne
mov
jmp
inc
fdivs
pop
pusha
in
sbb
aas
jb
in
jmp
mov
jge
in
aas
sarl
mov
mov
je
fwait
xor
rolb
add
scas
psubq
pop
add
xor
add
add
out
inc
and
or
cmp
sub
mov
inc
rcrl
test
std
stos
jp
icebp
call
lea
mov
testb
insb
and
scas
or
or
pop
sar
add
xor
jne
mov
add
push
mov
test
fists
adc
jl
add
or
push
int3
int3
das
adc
jne
loopne
ret
push
mov
push
testb
pop
ret
push
out
dec
or
scas
xorb
stos
fcmovnb
pop
adc
push
pop
push
orb
ret
pop
pop
cmpsl
in
movb
and
aaa
push
or
push
xlat
jmp
mov
lret
mov
lea
ja
add
mov
adc
mov
mov
loop
repz
clc
mov
call
aaa
leave
ror
jbe
mov
or
lret
add
or
inc
rorb
xor
cld
adc
movsb
mov
push
in
subb
enter
adc
sbb
jo
rclb
imull
fistpll
cs
ret
pusha
imul
nopl
cld
dec
dec
cmpb
pusha
scas
add
cmp
push
add
mov
mov
jo
cmp
and
in
xchg
push
shrb
jnp
push
cld
and
test
jp
cmpl
insl
inc
add
data16
fadds
sub
out
arpl
aaa
xor
loope
xchg
xor
sbb
pusha
add
mov
stos
inc
aam
sbb
adc
sub
xor
das
sub
sbb
testb
addr16
push
test
lea
dec
or
les
xchg
sbb
adc
lea
mov
mov
test
or
in
or
addl
mov
lahf
mov
sarl
fcom
sbb
fs
dec
dec
xchg
add
pop
add
add
adc
movsl
lahf
add
mov
enter
clc
jno
jnp
add
sbb
add
cmp
dec
mov
sub
jle
jmp
inc
mov
or
mov
xor
adc
incl
jge
lea
jmp
cld
imul
outsb
lds
xchg
jle
testb
and
call
aad
push
das
loopne
aam
pop
fcoml
repnz
mov
push
xchg
je
sbb
pop
sub
pop
mov
shr
add
ljmp
loope
shrb
scas
lret
mov
test
lock
pop
scas
xor
mov
mov
insb
ljmp
scas
jmp
lret
sbb
or
push
xchg
xchg
push
sub
dec
fbstp
push
lock
pop
and
pop
xchg
stos
push
sub
aam
je
push
sub
daa
fisttpll
pop
sub
ret
push
inc
bound
out
sub
test
jne
es
pop
jns
and
orb
repnz
nop
cmp
xor
xchg
sbb
adc
addl
ja
jmp
ja
inc
stos
sub
ja
adc
sbb
ret
xchg
push
loopne
in
mov
shlb
inc
jg
xchg
ret
mov
les
add
shr
inc
add
pop
pushf
nop
sbb
dec
xor
sbb
fldl
and
cmp
jl
lods
add
or
xor
add
mov
jne
mov
insl
jae
mov
or
sbb
dec
inc
jge
pop
adc
adc
into
mov
dec
in
hlt
jl
and
pop
mov
out
js
cmp
out
or
sbb
cmc
cmp
je
adc
loope
test
pop
push
xchg
nop
test
add
pop
mov
sub
or
sbb
mov
enter
rcrb
xor
jo
das
add
push
cwtl
xchg
xchg
xchg
pop
pop
sbb
jp
pop
sub
xchg
inc
es
push
cmp
jp
mov
js
add
sbb
add
add
sbb
nop
cwtl
movsb
xchg
xchg
jle
mov
mov
sbb
js
jo
dec
and
test
dec
push
or
jp
in
mov
insl
daa
mov
jb
faddl
or
add
fwait
call
loop
jo
pop
or
xchg
add
mov
or
fistpl
ret
ja
enter
jne
cmpl
xorb
add
add
icebp
in
pop
sbb
and
pop
mov
mov
cmp
mov
add
or
jns
cmpsl
ja
xchg
popa
and
inc
fldenv
sub
movsb
jecxz
push
add
inc
aas
sahf
data16
dec
fcomps
out
lock
pushf
add
mov
push
dec
mov
jmp
lahf
jo
adc
cmp
cmpl
add
and
add
mov
adcb
in
dec
cmpsb
je
data16
mov
rcrl
push
push
aam
adc
sbb
pop
mov
clc
lret
push
rorb
test
cltd
inc
inc
call
mov
push
orb
or
or
hlt
add
adc
pop
lret
inc
cmpl
adc
mov
cmp
outsl
adc
mov
lahf
nop
adcl
inc
lods
cli
ds
push
ficoms
int
jge
mov
jbe
mov
adc
cld
push
or
jno
mov
lock
add
dec
jbe
push
or
add
mov
mov
dec
mulb
aam
jmp
xor
cmp
outsb
pop
test
or
add
mov
nop
lret
inc
pop
loopne
stc
jg
adc
cltd
test
lahf
mov
pop
sbb
mov
loopne
stc
mov
dec
xor
in
push
dec
scas
icebp
add
mov
filds
add
push
ds
pushf
dec
add
add
cmp
data16
sub
popl
add
mov
inc
sahf
fidivrl
pusha
pop
mov
ja
test
cmp
jno
or
repz
add
cmp
add
and
imul
jo
dec
faddl
pushf
mov
cmp
pop
pop
iret
aad
sub
in
mov
pop
jecxz
scas
fstp
inc
add
mov
and
adc
add
sub
sbb
or
adc
push
pop
ror
fmull
fsub
neg
add
movsl
sbbl
xchg
pop
sub
pushf
xchg
cmp
xor
mov
add
pop
add
add
pop
repnz
adc
orl
je
cmp
mov
ss
and
pop
or
pop
mov
lea
mov
dec
lahf
and
clc
or
push
lods
sub
dec
xchg
xchg
mov
arpl
push
add
push
add
or
jge
lock
leave
mov
loopne
fmull
repnz
xorb
leave
mov
add
insl
mov
inc
mov
or
mov
xchg
adc
and
test
dec
mov
rorl
lea
and
leave
subb
sub
test
jle
cmp
jge
mov
imul
mov
or
pop
or
test
clc
or
addr16
dec
or
adc
push
or
fcmovbe
jo
in
ret
adcl
jle
fidivrl
inc
dec
push
nop
inc
add
ret
xchg
add
test
xchg
mov
ja
inc
enter
inc
add
rol
test
ret
lock
or
cwtl
sbb
add
adc
movsb
push
add
push
rolb
pop
cmpsl
decl
add
rorb
add
fwait
xchg
mov
mov
jns
sbb
loope
fcomps
in
das
lods
and
or
adc
mov
movsb
adc
gs
cmp
jge
mov
loopne
adcl
and
sub
push
add
adc
push
loopne
call
mov
or
cmp
je
nop
psraw
mov
ret
addr16
test
jne
icebp
inc
push
rol
or
adc
ret
lock
bound
mov
sahf
lea
in
or
call
mov
mov
test
incb
jle
cmp
jle
or
jle
fldl
and
add
lret
push
loop
or
sbb
shlb
out
jnp
mov
lds
cmp
std
ficoms
pushf
inc
mov
dec
sbb
xor
cwtl
add
and
add
cs
add
jg
inc
leave
lock
pop
inc
nop
outsl
lea
xor
pop
mov
jnp
sbb
jmp
add
adc
xor
jmp
adc
mov
shr
mov
sarl
and
xor
dec
es
hlt
adc
pusha
jno
mov
lea
xchg
adc
sub
outsb
in
arpl
shlb
push
push
data16
or
mov
add
mov
xchg
call
les
daa
push
pop
sub
mul
cwtl
sbb
jmp
test
and
jle
add
in
pushw
jl
add
cmp
sub
hlt
push
lock
test
ficomps
call
adc
in
aam
and
sahf
rorb
test
adc
mov
push
push
xchg
mov
pop
xor
adc
out
decb
aas
mov
divb
add
in
js
popa
sbb
orb
sbb
pop
push
cs
inc
dec
pop
pusha
push
push
jb
xor
jecxz
popf
xor
and
mov
leave
cmp
scas
mov
adc
ja
xor
add
nop
aas
inc
push
push
add
shlb
jmp
push
mov
sbbb
push
sbb
lods
insb
pop
sub
es
jg
or
inc
pop
andb
cld
jg
or
jb
jo
imul
push
xchg
xlat
mov
outsb
out
sbb
xchg
out
sub
lock
movsb
add
shr
sbb
adc
or
or
inc
add
loope
fwait
adc
mov
add
mov
lods
inc
mov
xchg
lcall
dec
adc
add
repz
mov
sub
mov
and
sbb
insl
and
adc
adc
sub
mov
or
add
or
jp
push
or
pop
sbb
dec
divb
leave
rolb
add
aam
or
nop
rolb
inc
jge
jecxz
mov
ret
cs
push
or
and
xchg
pushf
jns
add
bound
add
adc
aas
cld
pop
sbb
aad
rcll
adc
push
jmp
mov
mov
clc
xchg
add
sub
jae
adc
popl
inc
loope
test
lret
jne
mov
xchg
ss
add
sbb
or
or
or
or
mov
clc
imul
xor
fcom
jo
mov
dec
clc
push
xor
movsl
hlt
nop
daa
and
xchg
leave
jbe
es
push
inc
and
inc
jl
mov
scas
push
stos
mov
pusha
cmp
outsl
cmp
or
add
sbb
outsb
pop
mov
aaa
mov
mov
mov
in
and
out
xor
call
ret
dec
cld
xor
mov
repnz
es
cld
mov
sahf
dec
dec
insb
cmp
cmp
or
mulb
mov
and
sub
push
enter
push
movsb
insb
mov
rsm
or
aaa
sbb
aad
or
je
pop
testb
jne
cmp
movb
add
jae
mov
push
mov
jmp
sbb
lcall
push
push
and
xlat
ss
or
ja
jl
jno
cmpsl
sahf
adc
mov
je
jl
in
sub
js
cmp
push
decb
addr16
ljmp
fldenv
stc
mov
sbb
cmp
mov
sub
dec
cmp
sub
bound
cmp
ud1
cwtl
inc
stos
push
fisttpl
dec
filds
or
jns
fs
push
mov
push
popa
sub
push
hlt
xor
pop
mov
mov
add
xor
dec
or
cmpsl
cmp
fimuls
imul
mov
push
inc
sub
inc
mov
xlat
xchg
adc
lahf
push
mov
push
clc
adcl
mov
clc
xchg
data16
mov
jae
test
add
aam
pop
or
cwtl
push
fisubs
add
jo
fs
add
and
loopne
push
jno
sub
js
imul
xchg
ret
pop
mov
iret
mov
push
mov
cmp
je
sbb
push
decl
add
push
ret
adc
push
add
icebp
sbb
adc
je
insb
inc
adc
push
adc
inc
test
dec
out
jo
xor
hlt
jmp
nop
sub
inc
or
xorl
ror
lret
adc
push
mov
cmp
je
push
decl
mov
sbb
movb
shrb
ljmp
inc
sub
mov
jmp
xchg
je
cmp
je
lds
xchg
js
sahf
push
add
stos
loopne
movsb
fnstenv
scas
cmp
stos
inc
popa
lea
pop
xor
ret
mov
xor
clc
pop
xor
dec
adc
push
push
int
mov
bound
inc
lret
call
cmovae
xchg
scas
bsr
jne
push
pop
push
mov
jnp
inc
stos
xorl
xchg
lea
pop
mov
xchg
inc
imull
hlt
sbb
outsl
inc
shrb
push
push
mov
fildl
rolb
add
cmpb
adc
push
adc
push
sbb
call
xchg
cmpsl
lahf
xlat
adc
push
xor
in
push
cmpl
mov
mov
pusha
dec
cmp
loopne
fdivrp
call
lods
cmp
push
mov
or
out
mov
sbb
and
mov
scas
and
add
push
push
lret
fwait
or
jne
xchg
cmp
and
mov
and
out
push
subl
jne
test
cmp
hlt
sbb
call
adc
mov
add
clc
pop
jno
sbb
pop
jecxz
ljmp
xor
testb
enter
hlt
mov
clc
mov
jecxz
and
insb
lea
jge
out
and
push
js
cli
dec
mov
imul
sub
cmp
mov
inc
jg
cmp
insb
jmp
in
cmp
icebp
clc
adc
jne
cmp
and
push
movsl
xor
inc
sub
xchg
cmp
dec
cmp
xchg
jge
xchg
adc
adc
int3
ja
pop
xchg
je
mov
es
addl
and
lea
push
or
push
adc
es
and
jmp
sub
xchg
sub
sub
xor
mov
movl
outsl
pop
inc
xchg
loop
pop
js
and
add
cmp
loopne
lock
mov
sub
shlb
sbbb
xor
mov
add
ds
stos
rolb
adc
mov
subb
ja
sub
sub
xlat
out
add
pop
in
push
lret
pop
idiv
fists
popa
nop
nop
inc
push
push
push
mov
mov
mov
jmp
mov
push
lret
cli
dec
adc
mov
xchg
rcrb
jb
mov
push
sub
cmpsl
aad
lret
sbb
mov
dec
and
jg
lret
add
rep
mov
and
rep
pop
or
jne
pop
test
fwait
iret
loopne
push
dec
mov
out
les
push
adc
lahf
adc
cmp
sbb
stos
jp
or
ds
push
inc
cmpsl
cld
xorl
jle
fadds
jmp
mov
dec
add
ljmp
loop
lret
lahf
sti
cltd
cwtl
fcmovb
mov
mov
enter
movsb
rolb
mov
mov
fdiv
and
push
xchg
push
cli
les
push
and
xchg
movsb
sub
jae
pop
or
mov
and
js
mov
test
cs
and
ja
mov
test
adc
cs
lea
js
xor
dec
insb
movsb
mov
out
lock
dec
fwait
jecxz
xor
lods
jnp
adc
add
push
outsl
inc
xor
sbb
mov
lods
mov
push
pop
mov
hlt
jne
incl
enter
add
or
ja
inc
iret
mov
loopne
rol
cld
in
adc
sbb
movsb
dec
xchg
add
inc
stos
xlat
clc
push
outsl
dec
aam
pop
xor
or
cmpsl
int3
ficompl
xchg
out
mov
mov
mov
add
jge
fcomps
in
in
aas
aaa
sarl
mov
sbb
or
fs
mov
xor
not
and
aaa
out
xchg
xchg
jp
ret
adcb
sbb
in
test
jo
pop
popf
add
mov
ja
into
pop
xchg
mov
cltd
mov
lock
inc
inc
dec
mov
sbb
dec
jo
sbb
cmp
push
jg
popa
ja
and
enter
or
call
je
test
push
syscall
pop
xor
int
mov
xchg
xchg
jo
pop
push
or
je
push
jo
fdiv
pop
xchg
in
add
nop
call
in
mov
das
adc
in
orw
insl
pop
add
inc
adc
add
cld
insb
test
shl
or
dec
sub
mov
pusha
xchg
push
pop
mov
jmp
js
imull
push
mov
xor
popa
xchg
pop
movsb
jge
add
outsl
in
or
push
dec
scas
pop
les
ficomps
adc
sub
mov
fdivs
lea
icebp
xor
iret
in
int3
adc
in
int
test
or
jne
lods
adc
or
sub
inc
iret
cmp
lods
pop
enter
insl
cmp
inc
jmp
push
add
fmul
stos
add
loopne
pop
mov
adc
dec
cmpl
sub
fs
das
lea
iret
fdivs
in
pop
or
mov
sbb
lea
mov
mov
and
bound
rorl
adc
sub
fcompl
push
jmp
jo
in
cmpl
adc
je
fcompl
mov
cmp
je
inc
push
imul
cmc
inc
out
mov
sbb
add
ss
mov
push
pop
lahf
loope
mov
lea
movsl
mov
push
outsl
nop
add
xchg
outsb
out
or
inc
in
mov
popf
add
sbb
int3
paddsb
adc
pusha
sbb
push
js
xchg
sbb
movsl
inc
loop
mov
sub
cmp
mov
mulb
sbb
fldt
push
add
xor
pushf
pop
aaa
push
enter
in
sbb
aas
and
jp
int3
xchg
or
sub
adc
mov
shl
mov
clc
adc
out
sbb
inc
aad
mov
sbb
mov
rcl
cmc
xchg
adc
lds
pop
xlat
cmpl
dec
sbb
or
xor
dec
pop
cltd
sub
dec
or
cmp
scas
sub
mov
mov
mov
pop
push
mov
sbb
jmp
mov
jg
ljmp
scas
cmp
sbb
test
test
aaa
sub
insl
push
pop
add
adc
pop
mov
add
cmp
cmp
sub
pop
inc
adc
and
jl,pt
mov
push
clc
sti
cld
adc
mov
xor
sub
pop
arpl
adc
outsb
mov
cwtl
shll
pushf
clc
outsl
add
cmp
fldt
sbb
mov
add
outsl
xor
mov
xchg
push
adc
xorl
push
nop
lock
dec
fldl
sub
push
xor
testl
xor
xchg
ds
cmp
add
fstps
push
loopne
movups
and
ds
jl
or
adc
scas
adc
push
inc
inc
push
lea
mov
cmp
jmp
mov
mov
lods
add
sahf
lcall
fldl
mov
out
mov
icebp
dec
push
or
mov
and
mov
mov
in
mov
dec
shrb
arpl
xor
sub
fisubrs
sbb
and
and
dec
adc
js
and
andl
jae
pop
jb
enter
jb
sbb
lahf
mov
or
movsl
mov
xchg
cmc
pop
xor
sub
or
cmp
add
inc
lea
mov
jp
das
xor
dec
mov
mov
push
adcb
adc
idiv
adc
sti
enter
adc
in
push
adc
cltd
push
rclb
and
xor
aam
adc
push
add
scas
mov
clc
fildl
mov
mov
jne
insb
mov
add
and
testb
push
or
xor
jne
push
pop
faddl
add
ret
mov
aam
sbb
cmp
mov
or
push
lods
adc
adcb
or
arpl
daa
xor
jno
mov
test
movb
jp
add
sub
sbb
call
popf
in
or
xchg
or
or
jno
std
mov
mov
scas
loope
pusha
pop
pop
add
daa
hlt
aad
mov
mov
jns
lret
jmp
push
clc
xchg
sbb
les
loopne
sbb
cmp
xor
or
rcrb
dec
lock
jne
cmp
or
inc
test
adc
hlt
and
pop
sbb
sbb
jne,pn
and
pop
and
pusha
sub
push
mov
push
in
pop
mov
pop
insb
push
or
loopne
rol
popa
jge
insl
sub
fstps
jo
add
xorl
xchg
je
mov
or
psubusb
fiaddl
mov
dec
shlb
inc
cld
les
sbb
adc
push
aad
fisubs
movsb
pop
pop
testl
sub
jge
iret
or
or
jmp
push
pop
js
sarl
sbb
dec
icebp
or
pusha
inc
pusha
or
andl
cmp
mov
incb
sub
xor
sbb
int3
mov
lahf
roll
lret
lret
mov
xor
daa
into
shlb
jbe
xlat
rorb
xchg
call
mov
inc
lods
gs
mov
or
adc
adc
aaa
gs
inc
sbb
push
js
lahf
add
lods
mov
jl
mov
das
jge
mov
sbb
inc
mov
add
xchg
xor
hlt
push
sbb
push
hlt
addr16
xchg
inc
jo
dec
int
mov
mov
mov
test
mov
mov
out
adc
sub
or
aad
js
pop
clc
push
and
jmp
mov
push
loope
call
add
pop
push
dec
clc
cwtl
xchg
lcall
insl
jno
cmp
iret
call
push
pop
mov
push
mov
stc
xchg
push
shrl
nop
add
push
inc
imul
sub
mov
adc
mov
pop
push
jl
mov
sbb
adc
dec
js
clc
adc
xchg
hlt
pop
mov
fidivrs
dec
push
popl
mov
inc
arpl
stos
daa
sub
icebp
jne
sub
push
ss
pmuludq
jne
and
jbe
call
stos
sbb
dec
std
enter
mov
cmp
bnd
mov
fstpt
les
ret
inc
sbb
mov
and
and
in
lods
mov
jg
fisttpl
cmp
or
dec
mov
adc
xor
outsl
xchg
lock
sub
je
repnz
add
dec
in
sub
out
insb
mov
out
xchg
int3
shll
lds
push
dec
mov
sub
dec
fcoms
sbb
add
lcall
mov
and
mov
pop
add
inc
adc
shlb
mov
push
push
pusha
add
add
cmpsl
pop
pop
adc
mov
enter
and
imul
cwtl
jnp
adc
loopne
aaa
mov
xor
adc
inc
mov
sbb
and
push
rcrb
jge
mov
jns
movsb
xor
mov
pop
add
dec
lods
lret
test
ja
jae
and
adc
mov
and
add
push
je
test
aaa
adc
sti
push
scas
fcompl
hlt
inc
test
xchg
popa
out
mov
cmpsl
push
mov
movsb
xorl
add
call
xchg
mov
cmp
ljmp
push
mov
push
and
addr16
loope
jo
cmc
sbb
pop
push
cmp
or
repz
jne
cmp
pushf
jmp
sub
mov
jge
add
xlat
ror
enter
mov
pop
xor
inc
ror
outsl
loop
dec
mov
fmull
sarb
or
adcb
push
addl
xchg
inc
shlb
ret
les
je
cmp
push
xor
adc
xor
enter
xlat
movsl
jne
shrb
and
xchg
push
sub
lret
je
xchg
mov
xor
loopne
shlb
xor
rorb
and
inc
lock
add
fiaddl
add
pushl
dec
jne
insl
pop
xchg
outsl
jo
push
orl
shll
pop
lock
mov
pop
jae
inc
ljmp
or
loop
sub
mov
adc
xor
jmp
mov
daa
jge
sahf
nop
cmp
pop
lret
in
inc
push
pusha
mov
stc
mov
ret
sbb
jmp
xchg
jae
cwtl
scas
nop
xor
lods
into
inc
jns
test
lret
lods
inc
ret
or
rcrb
xor
adc
fxam
adc
jmp
mov
loopne
stos
ret
jmp
lock
add
loope
movsl
push
cs
mov
add
mov
mov
fiadds
pop
scas
add
cmp
mov
loope
adc
push
aas
jmp
xor
test
jo
out
sbb
rcr
pop
and
hlt
adc
jne
jle
mov
jmp
clc
mov
push
outsl
js
mov
push
je
sub
add
push
adc
push
or
push
and
mov
mov
sub
inc
pop
xchg
jmp
hlt
rclb
pop
wbinvd
pop
or
xchg
repnz
or
push
dec
jmp
leave
cmpb
inc
mov
xchg
or
mov
jmp
jg
adc
movb
push
lea
xchg
push
filds
lret
cmpsb
xchg
daa
add
jle
adc
inc
add
push
sub
adc
roll
and
xchg
adc
sbb
lcall
xchg
daa
mov
jo
lahf
inc
inc
inc
repnz
add
push
mov
ret
inc
or
fimuls
or
cld
jmp
divl
xor
mov
jmp
inc
addb
shll
jne
dec
mov
out
xchg
out
add
scas
cmp
add
xor
leave
xchg
aaa
fwait
mov
pusha
repz
ret
xchg
and
pushf
mov
add
push
fistl
fists
adc
aas
daa
ret
inc
jns
negl
dec
test
nop
push
mov
fsub
fdivrs
pop
call
out
xchg
les
push
sbb
sub
inc
or
jnp
loope
jb
mov
xchg
or
cmp
fisubs
adc
cmp
or
pop
and
outsb
xchg
jo
push
cltd
mov
or
jmp
push
push
jmp
sbb
mov
jmp
mov
fsubr
inc
sbb
mov
sub
mov
sarl
xchg
pushf
les
outsl
mov
mov
xor
js
ror
cmp
xor
mov
in
cmc
inc
or
cmp
add
lcall
loop
ljmp
sub
push
das
shlb
cs
fdivs
out
jmp
iret
cmp
inc
and
cmp
xchg
or
adc
xchg
cmp
sub
inc
cmp
or
or
and
sbb
inc
mov
lret
or
inc
adc
test
mov
call
int
mov
gs
aas
popf
cmp
push
bound
das
test
lds
add
adc
or
dec
dec
push
insl
js
fimull
sub
rclb
sub
mov
pop
loopne
mov
sbb
mov
dec
adc
add
add
fsub
and
xchg
mov
test
pop
fidivrl
xchg
jle
inc
sbb
test
pop
out
xor
push
push
and
insl
arpl
inc
insb
in
push
push
adc
loop
aaa
addl
add
push
cld
inc
sub
jle
cmp
mov
adc
xchg
je
jmp
jmp
mov
fwait
bound
pop
jg
jmp
addr16
xchg
scas
dec
push
in
enter
out
pusha
mov
xchg
and
add
sub
pop
mov
xchg
subl
call
adcb
test
add
dec
call
scas
mov
mov
ret
in
aas
xorl
jo
jmp
ret
jmp
ret
inc
ret
lock
xor
cltd
sbb
add
fcomps
incb
and
subl
outsl
loop
fbstp
pop
add
add
mov
mov
sbb
lods
addl
fs
ficoms
cmp
cmp
arpl
jge
jge
xorb
enter
ret
xor
loopne
mov
call
inc
pop
sub
aas
sbb
xor
fsubs
cmpsl
adcb
push
lret
loopne
jp
and
push
out
das
ja
lcall
lret
out
ret
push
clc
adc
je
das
mov
push
pop
mov
es
fcomi
mov
into
jne
adc
cmp
je
pop
pop
mov
hlt
inc
cwtl
rcrb
fimull
xor
xor
push
fs
ficoml
shll
adc
mov
int3
cmp
and
adc
ljmp
inc
jo
adc
insl
daa
rorb
sub
clc
dec
pop
adc
lods
mov
ret
jmp
push
mov
push
push
test
mov
outsb
movsl
or
jmp
pop
cs
adc
jmp
aad
lret
shl
push
outsb
lods
je
jecxz
mov
add
push
loopne
jecxz
imul
or
dec
lock
pop
cs
lret
push
add
in
or
add
dec
adc
dec
es
gs
dec
cmp
loopne
mov
shrb
or
mov
sysret
fadd
mov
and
jg
sbb
mov
or
mov
cmp
jl
adc
jg
jg
mov
push
insl
mov
inc
dec
sbb
mov
adcb
movsb
xor
cmp
bsf
lods
mov
pusha
push
push
sub
push
and
lret
aas
cwtl
je
and
jl
pop
daa
inc
add
mov
pop
dec
scas
sbb
or
add
mov
notb
gs
add
scas
in
mov
push
and
cwtl
pop
mov
lea
int
xchg
add
sbb
xchg
push
icebp
and
push
test
push
add
xor
cmpsb
push
mov
sub
mov
int3
dec
mov
pusha
push
push
mov
enter
cmpl
mov
fucomp
ret
andl
mov
nop
dec
sbb
fcoms
cmc
pusha
enter
popa
dec
test
mov
test
dec
mov
pop
ret
nop
pop
dec
daa
add
push
scas
mov
jl
or
sbb
cmp
je
push
js
addr16
push
nop
sbb
adc
jge
or
pop
lret
nop
out
incl
cltd
iret
mov
hlt
inc
push
push
xchg
xor
mov
jp
jg
inc
inc
mov
inc
ret
inc
jmp
mov
mov
popa
sub
repnz
push
mov
push
and
xor
adc
fmuls
sbb
fsts
or
add
mov
call
jmp
xorb
pop
or
pop
pinsrw
adc
out
sbb
movsl
loopne
pop
out
adcl
sub
add
jmp
push
add
xor
push
mov
aas
adc
sbb
jg
inc
out
iret
pop
lods
inc
cwtl
arpl
mull
adc
ss
shlb
subb
sarb
je
add
shlb
sub
fildl
inc
sbb
jns
dec
mov
sub
dec
rclb
stos
and
jo
adc
movb
mov
and
push
and
sbbb
adc
pop
scas
push
push
test
or
iret
fnstenv
nop
ljmp
jnp
add
bound
xor
ss
loopne
push
sarb
test
add
fidivrs
fs
enter
shlb
nop
pop
pop
dec
stos
add
shrb
push
mov
cmp
lds
add
pop
jno
dec
inc
adc
movb
subb
dec
shll
cmpb
popf
add
sahf
sbb
or
or
mov
shr
loopne
adc
and
ret
je
mov
sub
add
cmp
mov
ret
push
push
push
dec
fcoml
in
sbb
shl
cmp
jp
add
pop
andl
lret
movsl
js
sbb
and
add
popa
sub
mov
into
inc
shl
in
shll
mov
and
rorb
scas
or
cmp
pop
mov
pop
adc
cmp
roll
mov
mulps
pop
xorb
pusha
and
fcoms
dec
push
test
add
cmp
or
aaa
sbb
pop
or
adc
jae
fisttpll
cmp
cmp
jp
popf
and
shr
mov
arpl
and
aaa
cmp
imul
push
mov
mov
sbb
addb
sub
jb
mov
or
cli
or
mov
push
add
push
lea
movsb
pop
daa
test
xor
inc
or
addr16
or
mov
xchg
aam
outsl
pop
sbb
das
mov
mov
adc
mov
inc
xchg
ret
shll
push
enter
push
insb
inc
lahf
inc
add
std
push
call
xchg
push
in
push
add
ret
or
popa
dec
jnp
aam
xchg
mov
cmp
add
test
xor
pop
daa
xor
jo
sbb
xor
daa
shl
sbb
inc
and
dec
rclb
adc
push
sub
or
lea
leave
xorl
adcl
pop
setge
ret
jne
movb
lahf
push
jl
or
or
or
mov
outsb
push
lods
lock
pushf
sbb
pop
xor
add
mov
mov
ja
jo
ret
addr16
add
and
dec
cli
add
dec
inc
andps
inc
out
je
ds
xchg
add
jmp
imul
sbb
push
adc
pop
cwtl
cmp
sbb
inc
imul
sub
or
inc
and
addl
daa
loop
sbb
sub
xor
shrb
and
enter
outsb
fdivs
jmp
push
or
jno
lcall
daa
ret
bound
sar
jg
lea
jecxz
dec
adc
enter
shlb
aam
movsb
and
je
adc
xor
test
das
in
adc
test
xchg
jbe
mov
in
mov
cmp
je
or
mov
mov
out
lock
adc
inc
je
js
add
mov
dec
sbb
cmpsl
jg
push
dec
mov
inc
sbb
push
daa
sbb
cmpb
pushw
sbb
inc
sarl
adc
movups
in
or
mov
add
and
push
jmp
mov
sbb
pop
out
test
pop
xor
mov
xchg
pop
jmp
outsb
push
xchg
popa
jb
xchg
xorl
sbb
adc
and
inc
fadds
pop
pop
push
cs
jbe
das
movb
add
push
arpl
pop
add
outsl
mov
push
adc
loop
sbb
pop
pop
lock
mov
jb
rcrb
sbb
mov
and
adc
cmp
dec
jmp
ret
aam
pop
xchg
jp
push
lahf
mov
mov
loop
test
mov
sarl
xorb
jle
pop
sub
lds
sub
dec
or
and
sbb
push
push
sbb
movsl
push
and
push
inc
daa
adc
pop
pop
jb
sbb
xchg
push
dec
dec
movsb
mov
mov
push
mov
pop
or
mov
add
adc
xor
inc
pop
popf
mov
xchg
xlat
jo
jle
adc
cmp
jl
push
push
jge
je
cmp
pop
cld
adc
shl
out
and
dec
sbb
push
push
sbb
or
jle
add
sarl
xlat
jle
add
hlt
inc
adc
incb
add
xchg
sbb
ljmp
dec
gs
rcrb
jo
add
push
nop
out
pop
push
add
arpl
add
jg
mov
mov
cmpsl
pop
jb
pop
push
arpl
decb
add
das
sahf
int3
push
jmp
adc
and
inc
lcall
rolb
push
cld
adc
cmp
jne
das
lret
mov
mov
gs
xchg
fadd
add
enter
icebp
pop
mov
inc
mov
push
push
pusha
xlat
jne
jo
ljmp
lock
push
dec
push
lea
ret
hlt
pop
xchg
push
pop
ljmp
mov
xor
mov
jl
inc
xor
aad
fdivrs
mov
add
push
inc
dec
sub
mov
incb
scas
add
inc
pcmpeqb
test
mov
hlt
push
mov
push
inc
cmp
stos
mov
orps
xor
gs
mov
or
push
gs
aaa
bswap
mov
adc
inc
sbb
das
push
add
mov
and
jge
or
movsl
movsl
xchg
adc
add
ret
fcmovb
lds
stos
shr
add
aas
cmp
test
and
in
sbb
and
jge
sub
sarb
jg
mov
dec
cmp
xlat
cmpb
adc
jp
lret
sub
or
cmc
pushf
popl
mov
adc
mov
dec
sbb
or
sbb
push
je
mov
andl
test
jl
inc
mov
jo
xor
mov
xchg
adc
pop
inc
dec
jne
or
popa
clc
mov
push
mov
cs
add
inc
inc
or
push
out
mov
jmp
dec
add
adcb
movl
lcall
push
or
jl
mov
xchg
inc
xchg
dec
cmp
sbb
inc
and
jmp
lret
jg
movsl
test
mov
pop
int3
pop
jnp
jne
shlb
xchg
add
jmp
mov
jmp
rcl
mov
inc
and
arpl
orb
push
or
fsub
lret
inc
aas
push
add
lahf
mov
sub
inc
insl
pop
inc
or
or
inc
rolb
lds
rorb
popw
out
adc
cmc
shlb
test
mov
fmul
test
mov
lea
test
shlb
xchg
inc
mov
adc
jo
int3
mov
and
rcrb
mov
cvttps2pi
sbb
scas
sbb
popl
lds
mov
out
loope
pop
dec
cmp
cmc
mov
or
pop
push
add
mov
clc
nop
fld
push
or
sub
test
mov
lea
jecxz
lret
mov
add
in
inc
insb
rcr
push
mov
lds
jno
jnp
enter
or
ja
ljmp
pop
scas
rcrb
ret
sahf
inc
or
dec
mov
movsb
add
add
mov
pop
rorl
inc
imul
dec
aaa
bts
scas
lea
inc
inc
jne
or
aad
shlb
je
notb
sbb
add
mov
sub
das
stos
or
pushf
adc
out
call
push
mov
xor
xor
shlb
xor
sbb
push
enter
xchg
incl
es
std
pop
mov
sbb
and
call
ret
bound
test
frstor
rclb
pushf
popl
pop
jo
mov
jo
test
sub
cltd
test
dec
scas
dec
and
inc
scas
or
push
lret
idivl
insb
mov
push
inc
out
push
adc
hlt
cmp
xlat
outsl
xor
push
push
mov
lods
xor
je
mov
xchg
ret
xor
dec
adc
pop
adcl
out
and
xor
sbb
jno
bswap
dec
shrb
dec
addr16
pop
lret
cmpsb
movsb
xchg
setb
adc
add
xchg
and
out
dec
cs
adc
push
xchg
aad
xor
fwait
xor
test
jl
sbb
add
inc
lret
mov
adcl
stos
aad
mov
xchg
sbb
mov
push
and
dec
dec
mov
mov
add
aam
outsl
push
add
cmc
adc
pop
jbe
push
sbb
jge
push
push
sbb
cs
adc
push
adc
and
add
xor
movsl
or
data16
xchg
jmp
push
es
add
add
and
inc
xor
shll
push
adc
sub
add
mov
in
lcall
adc
fdivl
push
hlt
sbb
rorb
pop
pusha
imul
shlb
fistl
adc
pop
mov
int
jne
jle
hlt
jle
or
addl
add
or
loopne
push
fadds
fwait
sbb
cmpsl
aad
jmp
push
in
add
test
lea
sub
add
adc
sbb
outsl
cmpsl
aam
pop
loopne
imul
push
fsubr
sbb
mov
pop
jbe
shll
adc
test
adc
mov
pop
push
jp
push
add
test
and
xchg
push
mov
dec
rolb
mov
cwtl
mov
lock
or
cmp
in
fcomps
je
call
cmp
rol
lods
adc
xchg
shr
or
mov
iret
jb
dec
add
push
sbb
jmp
mov
mov
xlat
and
pop
leave
push
sbb
pop
pop
push
jge
mov
mov
loope
jmp
mov
inc
add
inc
inc
imul
dec
aaa
cs
adc
push
push
and
and
sub
out
shll
imul
rolb
cmp
mov
test
xor
and
pop
pop
rolb
xor
loopne
cmp
pop
or
push
addr16
or
fsubr
sbb
and
mov
out
push
arpl
xchg
jl
shrb
pop
out
dec
adc
xor
lret
sub
call
mov
call
inc
pop
pop
inc
ret
ds
xchg
inc
xchg
xchg
mov
push
dec
aas
lcall
add
or
mov
sbb
push
lea
mov
rolb
push
sub
add
in
insb
mov
pop
or
add
dec
mov
and
add
pop
add
add
cmp
loope
mov
fisttpl
mov
jmp
in
test
push
or
je
push
fisttps
out
jbe
add
push
push
push
je
insb
push
imul
test
mov
clc
lock
xor
adc
sub
push
scas
aam
or
inc
mov
mov
sub
and
jp
pop
sbb
inc
jle
jle
pop
cwtl
push
addr16
mov
pop
add
andb
push
adc
lds
outsb
imul
push
push
adc
add
je
push
push
pusha
inc
sub
test
xorl
sbb
movl
cmp
mov
out
push
push
icebp
jo
incl
adc
lret
or
adc
mov
mov
rorb
pop
mov
adcb
cmp
push
adc
cmp
mov
in
mov
jno
add
sbb
xor
scas
sar
or
mov
imul
cmpl
xlat
push
jl
in
xorb
sub
push
adc
je
clc
decl
dec
jb
gs
fs
imul
adcb
lods
or
daa
iret
dec
mov
iret
push
push
push
je
arpl
cmp
ret
fsubrp
shll
sub
pop
adc
ret
pop
xchg
and
add
add
jne
mov
push
jno
scas
fldl
scas
shll
jae
enter
or
test
add
jmp
push
pop
mov
gs
ljmp
push
arpl
xor
test
pop
xchg
cld
mov
pop
rcll
mov
lret
std
rorb
cmp
inc
sub
add
jmp
nop
outsl
or
adc
insl
ljmp
mov
mov
adc
jne
outsl
insl
lahf
push
imul
mov
jmp
dec
inc
js
xor
lret
sarb
test
data16
cmp
add
jbe
orb
stos
sarb
mov
rol
adc
push
in
pop
mov
jo
outsl
outsb
push
int3
add
in
jmp
pop
and
mov
jb
daa
sub
add
adc
enter
fsubr
mov
loop
out
cmp
jb
call
hlt
sbb
outsl
lods
fsubrs
aam
sbb
jge
lods
dec
aam
dec
cmp
mov
add
popf
jns
iret
rep
lods
or
adc
out
fistpl
jecxz
jmp
sti
add
repz
imull
rorl
xor
push
inc
sub
lcall
add
add
ret
dec
inc
cltd
icebp
sbb
xchg
cmp
pushl
mov
outsb
xor
dec
loop
push
inc
mov
movsl
leave
aam
mov
xor
sub
xchg
idiv
aas
mov
stc
dec
and
pop
and
outsb
sub
adc
inc
push
fs
mov
mov
xor
mov
sahf
out
mov
push
sarb
les
cmpsb
fdivrs
cmp
inc
out
push
loope
jmp
mov
adc
lret
mov
outsb
popa
addr16
fsubr
cmpsl
lock
ljmp
xchg
out
push
imul
cltd
fimuls
xlat
cmp
pushf
je
or
call
jno
or
pushf
pushf
jae
cmpl
jmp
jne
loop
in
add
rorb
sarb
ljmp
popf
mov
add
mov
fisubs
push
adc
jo
sub
push
les
setne
xor
inc
and
mov
or
addb
adc
adc
inc
and
sbb
fcomi
mov
mov
push
push
sarl
mov
js
and
lea
jne
dec
mov
add
fiadds
add
std
jbe
mov
mov
lds
add
in
adc
xor
xor
imul
mov
mov
sbb
mov
push
enter
push
out
jno
inc
mov
or
xor
mov
clc
adc
ret
rcl
mov
or
lret
sbb
cwtl
imul
mov
loopne
mov
sldt
cmp
push
aas
sbb
add
sub
push
jb
push
ljmp
mov
in
sbb
jecxz,pt
fmuls
repnz
or
sub
inc
adc
inc
inc
and
sbb
insb
cmp
and
or
fstl
sbb
sbb
push
adc
loopne
push
add
mov
dec
jne
sbb
jne
add
and
add
cwtl
mov
and
adc
test
jle
js
and
adc
insl
add
cltd
lods
inc
shlb
popf
dec
xor
imul
xchg
cmpsl
jo
arpl
icebp
test
addl
or
stc
insl
sub
jmp
mov
jmp
lret
sub
test
repnz
dec
adc
mov
pop
xchg
xor
inc
mov
aad
inc
repz
hlt
mov
sbb
cs
les
test
dec
imul
mov
mov
jo
pop
or
push
or
fcomps
imul
jmp
clc
mov
ja
xlat
aas
xchg
add
xchg
repz
and
jnp
scas
and
jecxz
push
adc
cmp
clc
divl
pop
ffreep
add
push
mov
cmc
pusha
lods
sub
shlb
daa
loopne
or
je
add
jle
xchg
push
fiadds
pop
cmp
lods
pop
jl
and
xor
fdivl
jno
and
call
jbe
decl
jne
push
loopne
jo
push
adc
xor
and
into
fcomps
adc
mov
aam
push
add
mov
push
loope
push
cs
add
cwtl
adc
push
popf
stos
jo
out
jecxz
test
or
xor
int3
jl
pop
xchg
jge
or
sub
in
aam
cmp
out
in
cmc
lcall
in
sub
shl
daa
adc
mov
adc
js
out
xchg
mov
mov
xchg
sbb
jg
push
test
inc
xor
add
inc
pop
test
lock
and
mov
test
pop
dec
xor
sub
mov
dec
shl
mov
cmc
xor
shlb
ss
cmp
and
xchg
dec
fst
adc
mov
mov
pop
lds
mov
inc
cmp
mov
rcrb
or
std
fadds
cltd
test
push
ss
or
add
adc
mov
or
inc
cmp
add
or
push
xor
call
dec
int3
adc
sarl
jge
or
hlt
scas
pop
add
adc
push
aaa
nop
arpl
cli
push
push
loope
movsl
mov
data16
sbbl
imul
and
rcrl
cmp
jmp
mov
or
pop
add
mov
push
cwtl
mov
nop
mov
fadd
in
lahf
cmp
push
inc
add
inc
add
lea
push
mov
adc
add
push
aam
ss
les
inc
xor
inc
je
mov
push
or
mov
je
jmp
outsb
lock
add
shll
xlat
ret
scas
and
or
loopne
arpl
inc
lea
mov
enter
stos
aam
stos
rolb
mov
add
pop
shr
rcll
mov
outsb
lock
dec
lea
mov
aad
iret
int3
int3
add
xor
inc
lea
mov
jae
pushf
clc
jmp
ret
int3
add
fsubs
inc
sbb
pop
icebp
ret
xor
andb
xchg
push
push
sub
stos
sarb
ret
sbb
loopne
inc
jge
jns
add
add
jnp
stc
adc
cmpsb
lret
or
dec
xchg
and
inc
sbb
loope,pn
cmp
dec
and
enter
sub
pushf
stc
push
pop
movaps
xor
out
and
or
mov
mov
and
lret
cwtl
or
ret
test
arpl
adc
shl
popa
insb
adc
add
pop
xchg
imul
and
mov
cmp
jp
cld
mov
je
and
dec
je
or
das
sub
loopne
clc
add
inc
push
and
jg
out
jmp
sbb
cmp
sbb
lods
jmp
test
loopne
xchg
stos
or
adc
add
sub
sahf
icebp
or
push
add
dec
push
dec
aam
pop
stc
loope
sbb
sti
movb
push
out
xchg
push
xor
clc
mov
adcl
pop
hlt
fidivrl
adc
loopne
inc
les
jmp
lds
jbe
inc
jno
aad
mov
xor
in
les
or
cld
inc
adc
loope
jbe
mov
xchg
pop
xor
loopne
or
or
add
jmp
pusha
jmp
out
mov
push
test
es
inc
adc
jno
es
test
sti
mov
iret
or
lock
cltd
dec
sahf
adc
popw
addl
les
or
repz
add
jl
nop
inc
in
push
cld
sbb
cmp
sti
fistpll
dec
xchg
sbb
shlb
cmp
or
fidivs
addr16
pop
mov
jo
fisubl
test
mov
push
jne
movsl
aad
cwtl
addl
into
and
xlat
push
push
mov
jns,pt
std
movsb
outsl
sbb
pop
testb
cmpb
jle
jne
cmp
test
jne
cmpb
pop
notl
xor
adc
in
mov
pop
imul
mov
inc
ret
or
pop
ret
push
push
or
mov
je
in
push
ret
lods
add
movb
jl
sbbb
insb
cmp
cmova
outsl
outsb
imul
inc
dec
sbb
pop
or
andl
adc
push
clc
outsb
loopne
sbb
jne
pop
sub
push
call
add
pushl
je
dec
je
dec
adc
adc
orl
or
add
lea
jg
data16
rcrl
and
push
dec
add
xor
imul
cpuid
jge
sbb
out
mov
add
ret
je
push
sbb
ss
add
loopne
cs
cmpb
or
jle
push
popa
cmp
jle
push
sbb
mov
pop
inc
add
add
adc
int
das
es
sbb
inc
jb
insl
push
lcall
mov
icebp
je
movsl
and
mov
mov
jae
xchg
pop
and
dec
les
fdivr
shlb
pop
mov
cmpsl
rorb
sbb
push
jle
call
jmp
push
pop
pusha
push
jl
js
adc
adc
add
or
mov
pop
ja
test
and
mov
sub
pop
push
mov
sbb
andl
push
mov
sbb
dec
lock
pusha
jb
dec
ret
jl
inc
or
ret
test
jg
mov
das
push
outsl
imul
cmpsl
jge
mov
cmp
and
mov
negl
jmp
xor
jmp
outsl
adc
aad
fs
push
pop
lock
add
sarb
ret
fiadds
or
adcl
mov
push
lea
lea
movsl
add
inc
and
jge
in
mov
dec
jb
push
sub
inc
ret
lods
movsl
mov
xchg
xchg
add
or
push
dec
inc
pop
pop
repnz
xchg
cmp
movsl
or
loop
stos
or
stos
inc
repnz
iret
xchg
daa
inc
add
es
add
into
rolb
pop
cmpsl
invd
jns
add
pop
add
scas
or
test
cmpsl
cs
push
ret
sub
pop
sbb
push
push
call
pop
xchg
repz
pop
test
ret
shll
flds
xchg
call
gs
bound
xchg
add
push
jle
clc
test
scas
test
ja
neg
xabort
or
je
xchg
push
ret
pop
sbb
cbtw
cwtl
aam
in
and
ss
sub
and
loopne,pn
jne
push
jmp
ds
jbe
sbb
push
push
push
mov
addr16
adc
dec
add
adc
jne
inc
imul
cld
or
jle
add
cs
fsubs
rol
add
jo
rclb
mov
adc
and
in
jp
orl
fsubrs
bound
mov
lcall
jo
xchg
pusha
mov
push
push
inc
push
xor
cs
dec
dec
sti
add
add
and
cmp
dec
popa
decl
mov
mov
add
pop
and
sub
pop
addb
das
je
push
mov
xor
add
insl
arpl
loope
cmc
ljmp
pop
add
or
outsl
insb
jae
js
mov
xchg
cs
into
jmp
jb
jb
test
jb
je
insb
jb
jb
push
jb
jb
push
push
dec
mov
jb
dec
inc
je
lock
xor
mov
mov
pop
pop
cs
mov
sub
popa
dec
xor
add
add
mov
mov
sub
push
popa
jae
dec
mov
insb
outsl
andb
adc
lea
ja
cmp
cmp
jp
cmp
cmp
jl
jle
cmp
cmp
pusha
popa
bound
cmp
cmp
cmp
cmp
push
cmp
cmp
outsl
cmp
cmp
push
push
push
push
cmp
cmp
push
push
push
push
cmp
cmp
pop
pop
pop
pop
cmp
cmp
pop
pop
pop
pop
cmp
cmp
inc
inc
inc
inc
cmp
cmp
inc
inc
inc
inc
cmp
cmp
dec
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
cmp
xor
xor
cmp
cmp
xor
ss
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ds
cmp
cmp
and
and
cmp
cmp
and
es
pushl
mov
add
into
inc
mov
pop
xor
clc
addr16
mov
jne
mov
pushf
push
ret
mov
cs
or
outsb
push
and
add
fsubs
clc
or
call
inc
push
gs
push
xorl
fs
pop
leave
jbe
sbb
repnz
xor
adc
adc
mov
or
arpl
and
adc
or
and
sbb
xlat
mov
xchg
clc
cmpb
jne
fidivl
lret
add
add
mov
jmp
adc
jmp
add
pop
pop
aam
push
daa
rolb
add
test
aas
add
rorb
or
lea
or
and
loop
lea
movsl
and
ds
mov
sbbl
or
stos
and
out
mov
sbb
or
aaa
js
inc
add
jae
loopne
rolb
mov
xor
xor
daa
dec
jnp
push
lret
and
push
out
shrl
mov
popl
popf
or
lea
fs
xor
test
andl
adc
inc
sbb
sbb
add
dec
hlt
push
mov
or
xor
xor
xchg
pop
push
fwait
addb
cli
aam
nop
mov
mov
or
jle
ds
jg
adc
fdivs
jbe
push
cld
sbb
cmp
adcl
cld
orl
or
mov
xor
fucomip
data16
enter
or
iret
add
add
lock
sti
sub
xchg
pop
add
xlat
mov
movsb
mov
xor
mov
add
das
insb
and
loop
js
sahf
push
sub
inc
fstps
adc
dec
push
js
xor
mov
lret
xor
pop
vmulps
mov
mov
pop
xchg
mov
out
out
add
icebp
test
aad
std
or
sbbb
cld
and
xor
aas
sti
insl
fcompl
push
or
movzbl
mov
add
and
jmp
dec
mov
lods
stc
jl
pop
imul
cmp
jbe
sub
xchg
xchg
ret
sbb
out
leave
loope
ss
mov
inc
movsb
les
jecxz
adc
outsl
jmp
dec
test
and
push
cmp
je
cmp
jns
pop
sbb
loop
clc
mov
push
inc
outsl
insb
outsl
jb
addb
arpl
or
dec
outsb
jbe
jae
idiv
insb
imul
arpl
mov
mov
pop
xor
dec
jo
enter
sub
or
jge
pop
clc
push
imul
jg
loopne
xor
data16
gs
jne
rclb
push
popa
jb
popa
bound
add
gs
data16
or
xchg
out
jg
nop
movsb
push
or
xchg
insl
gs
mov
add
dec
sti
jl
push
stos
call
jns
sahf
mov
xor
int3
xor
data16
mov
fwait
sbb
mov
dec
je
arpl
adc
fstl
ljmp
add
jbe
jge
gs
jne
cmc
fisubs
adc
add
jae
xchg
cmp
es
in
jnp
fisubl
int
xor
pop
jo
outsl
gs
push
inc
popa
jae
add
sbb
js
in
or
push
inc
dec
push
outsb
adc
inc
jae
gs
jb
or
mov
lods
jb
push
inc
inc
sbb
popa
or
mov
cmp
lret
lods
mov
insl
inc
insb
data16
inc
sahf
mov
push
shrb
mov
cmpsb
imull
outsl
jo
call
and
je
out
insl
dec
mov
gs
dec
ret
int3
xor
fucomi
or
and
sbb
imul
mov
aas
mov
loopne
loope
rcrl
or
popf
sbb
sbb
adc
inc
sahf
iret
xor
pop
jo
bound
orl
or
dec
mov
sbbb
push
data16
push
pop
mov
adc
enter
inc
adc
pop
inc
shll
outsl
jb
jae
ds
inc
cmpsl
outsl
cmp
out
pusha
pop
inc
add
or
push
dec
push
lahf
scas
mov
push
cmpsb
push
adc
cmp
std
decl
andps
dec
bound
mov
pop
sub
call
cmp
cmp
push
out
testb
dec
cmpsb
outsb
and
dec
inc
cld
shrb
imul
sahf
xchg
add
cs
and
in
push
nop
or
out
mulb
pop
sub
dec
sbb
push
in
mov
das
push
sub
rcll
xor
jnp
or
and
pop
adc
add
dec
cmpsb
jge
adc
in
xor
hlt
aad
dec
cmp
inc
pop
pop
outsl
pop
bound
orb
call
fisttpl
mov
mov
ss
das
mov
addb
imul
rep
pop
in
cmp
inc
loop
push
jg
or
mov
xor
push
push
in
sahf
or
test
dec
mov
mov
mov
add
add
xor
push
or
ret
push
xor
xchg
aam
push
cs
jo
jl
jno
enter
mov
loop
das
les
mov
jb
aas
mov
jo
jae
std
dec
lahf
pop
sbb
fcmovnb
xchg
mov
add
leave
call
mov
xor
add
addr16
push
test
pop
mov
add
add
mov
int3
xor
popa
shll
cmp
nop
mov
cmp
or
jge
add
push
sahf
je
scas
lods
adc
sub
jmp
jb
incl
cmp
les
sbb
add
rorb
xor
cwtl
push
inc
outsb
pop
int
loope
scas
in
sbb
dec
aaa
inc
mov
ret
addb
jo
xchg
pop
mov
fldt
add
outsl
insb
outsb
push
test
mov
push
inc
popa
dec
jae
sub
push
movsl
xor
cmp
shl
fs
mov
sub
daa
and
pop
scas
lcall
or
or
add
shlb
test
mov
lea
xor
stos
add
pop
ret
xor
test
jb
jae
test
insb
je
or
inc
add
push
xchg
rcr
pop
hlt
push
jne
outsb
adc
inc
outsb
adc
push
or
sbb
push
mov
push
push
sbb
or
xadd
ljmp
arpl
outsl
outsb
gs
jns
add
push
gs
pushl
ja
outsl
ja
inc
outsl
outsl
mov
adc
push
inc
cli
popl
dec
jae
push
ret
test
cld
mov
dec
push
cwtl
cwtl
jo
rolb
and
fsubrp
mov
xchg
ret
es
iret
dec
fcomps
pop
fwait
mov
cmp
pusha
or
adc
sahf
xlat
add
adc
daa
sbb
xor
sbb
test
jg
adc
mov
sbb
pusha
mov
dec
sbb
xchg
int3
push
pusha
sbb
dec
sbb
xor
push
cmp
pop
fwait
loopne
inc
jg
int3
ds
xor
iret
or
xor
pop
daa
dec
push
inc
pop
imul
inc
hlt
lret
cmpsl
cwtl
push
movsbl
push
mov
jbe
adc
pop
jo
paddq
pop
add
mov
lcall
daa
outsl
pop
and
std
incl
ffreep
pop
adc
outsl
pop
and
fs
mov
pushf
add
add
sbb
addl
not
loope
stos
adc
dec
xor
insl
jne
stos
mov
push
mov
aaa
or
push
sbb
shlb
ds
je
pop
rolb
mov
sbb
xor
shrl
add
add
inc
hlt
sbb
pop
das
push
imul
sbb
and
xchg
pop
rcl
shlb
test
aam
mov
arpl
dec
or
push
xor
xor
dec
insl
outsb
pop
xor
pushf
call
sbb
test
ljmp
ds
adcb
imul
nop
ret
mulb
or
clc
or
sbb
shlb
add
flds
js
push
xchg
bound
push
je
xor
dec
or
sbbb
insb
push
mov
pusha
xchg
cmp
sti
sbb
push
mov
inc
sbbb
clc
push
je
xchg
ds
jno
mov
inc
inc
imul
mov
mov
push
cmp
sbb
cmp
xchg
int
jl
jle
jle
and
addb
orb
push
aam
ja
xlat
rcr
jle
cmovs
dec
xlat
loopne
cmpxchg
out
out
sub
push
cld
xchg
pop
mov
xor
outsl
pop
pop
mov
test
inc
ret
and
cmp
lock
xchg
xor
push
or
outsl
outsb
pop
sbb
nop
stos
xchg
bound
test
enter
int3
xchg
cld
xchg
pop
pop
xchg
jo
loopne
mov
loopne
fsub
inc
pop
sahf
loopne
pop
sbb
enter
xchg
and
jo
out
jo
cwtl
mov
shrb
pop
add
shrb
cmp
ljmp
nop
or
mov
dec
mov
aaa
adc
mov
pop
lock
incl
sbb
faddl
sub
iret
adc
sahf
je
rcrb
mov
cmp
iret
mov
xchg
sar
mov
mov
xor
rol
xor
inc
dec
jne
daa
jmp
test
dec
adc
pusha
imul
sbb
fcomi
popa
pop
call
adc
negl
ret
pop
adcl
loopne
andb
and
lock
in
add
nop
mov
mov
aam
jecxz
adc
hlt
and
lret
pusha
or
testl
mov
mov
and
not
adc
cmp
jne
fadds
out
jge
sti
cmp
jne
cmp
xor
cmp
cld
pop
mov
fiaddl
push
mov
jo
inc
inc
rcr
dec
or
imul
enter
pop
mov
push
clc
inc
clc
xchg
ret
cmc
push
push
add
lock
push
mov
and
pop
je
xor
leave
loopne
mov
xchg
mov
decl
or
cmp
leave
popf
lock
mov
cmp
mov
sbb
mov
mov
jne
sti
adc
jno
sub
xchg
and
xchg
daa
mov
or
sbb
mov
mov
subl
mov
or
and
popa
cld
aaa
not
pop
inc
xor
and
jnp
xchg
insl
xchg
adc
aaa
sbb
pushf
cmp
xchg
mov
xlat
dec
xchg
xchg
inc
jo
add
and
mov
movsl
rcll
xchg
ss
or
mov
sbb
inc
inc
lcall
add
frstor
filds
loopne
pushf
push
inc
or
pop
add
test
loope
and
add
pop
jg
fst
push
mov
adc
sub
out
jge
push
addb
inc
shlb
loopne
daa
and
sbb
and
iret
ret
dec
adc
mov
int
jp
outsl
loop
push
jb
cmpsl
icebp
leave
rolb
sbb
and
neg
pop
pop
js
jg
mov
mov
sub
sbb
pop
cld
loop
mov
dec
push
cmpsl
subb
test
push
in
or
add
loopne
lahf
pop
jbe
arpl
mov
mov
dec
push
stc
imul
outsl
outsb
out
inc
inc
jb
outsb
and
insb
imul
cmp
popa
jbe
scas
xchg
jne
jo
incl
cwtl
inc
pop
in
popa
insb
pop
shlb
adc
ds
imul
mov
scas
cld
add
cltd
shrl
addr16
imul
jmp
inc
sahf
out
dec
add
pop
or
jne
push
testl
outsl
and
or
jo
jmp
outsl
xchg
push
imul
xorb
insl
inc
dec
gs
fdivrs
xchg
jns
push
sahf
inc
arpl
xchg
pusha
inc
outsl
insb
ja
test
sbb
inc
popa
stos
xchg
in
fistpl
jo
pop
imul
arpl
lods
sub
es
inc
jl
cmp
outsb
fisubrs
je
inc
push
xchg
dec
adc
sbb
or
add
adc
cmp
push
sub
inc
daa
or
add
mov
cs
pop
xchg
fs
iret
clc
pusha
add
sbb
dec
outsb
popa
add
inc
das
and
xor
push
nop
rolb
andl
nop
dec
daa
pop
das
adcl
je
xlat
xchg
fs
or
mov
insl
inc
inc
aaa
pop
mov
xchg
adc
adc
add
jg
xchg
in
dec
pop
push
outsb
jne
aaa
dec
adcl
adc
or
inc
inc
dec
cs
aas
ret
mov
inc
insb
mov
lahf
inc
xor
shll
push
cs
inc
outsl
out
daa
or
jg
das
adc
add
add
data16
push
mov
shrb
shrd
aam
iret
or
dec
adc
push
in
jb
push
fidivl
popa
mov
dec
pop
inc
dec
sti
jnp
stc
inc
push
push
inc
push
pop
inc
inc
inc
inc
push
dec
push
xor
das
push
pop
dec
inc
dec
dec
arpl
pusha
cmova
inc
mov
dec
dec
inc
push
dec
dec
push
mov
push
imul
movsb
xchg
inc
dec
dec
xor
mov
xor
xor
pusha
das
fsubrs
xchg
inc
dec
inc
jbe
dec
inc
xor
ror
inc
push
inc
inc
dec
xchg
mov
sub
js
push
push
dec
sub
dec
mov
push
cmp
jecxz
cmpl
xor
mov
mov
mov
ret
lahf
mov
push
push
push
push
dec
push
inc
jecxz
jns
scas
dec
inc
dec
push
mov
imul
mov
sti
mov
ficomps
in
rep
pop
add
xchg
int
cltd
clc
rclb
les
les
test
add
mov
cmpl
and
sti
orb
sbbb
add
add
cmp
or
mov
and
mov
and
adc
cmp
sbb
jge
mul
movsb
shlb
or
and
mov
sbb
ljmp
or
dec
sbb
dec
cli
jne
movb
jmp
sub
jmp
add
mov
ja
or
shlb
add
adc
lea
sbb
jmp
sahf
dec
push
or
inc
or
packssdw
mov
dec
sbbb
and
rclb
cmpsb
or
test
adcb
ret
pop
pop
sub
addr16
xchg
ljmp
loop
or
add
dec
inc
jo
es
sbb
arpl
mov
in
jecxz
sbb
je
jne
xor
and
or
insb
stos
arpl
outsl
or
cmp
adc
add
pop
mov
cmpsb
sbb
or
cli
mov
add
dec
or
pop
dec
cmp
jne
mov
mov
mov
clc
arpl
ficoms
push
sbb
adc
inc
ja
dec
into
xor
cmp
or
out
adc
or
and
andb
out
lret
data16
mov
rclb
ss
imul
add
mov
ret
xchg
lahf
inc
das
roll
fcoms
cli
pop
cld
jae
sarl
dec
sbb
sbbb
mov
adc
fisttpll
jmp
sbb
add
push
testb
je
movl
aaa
jmp
adc
aaa
and
sbb
or
dec
pop
mov
adc
cld
outsb
pop
dec
ret
xlat
jmp
or
popf
ds
add
cmp
mul
filds
ss
sbb
aas
push
in
shll
mov
push
push
and
das
push
or
add
neg
mov
call
push
xchg
sbb
mov
mov
sbb
push
or
mov
ret
or
xchg
pop
add
data16
mov
cmp
mov
pop
nop
cmp
int
sub
insb
addb
fs
push
int
dec
sbb
cwtl
add
fnstcw
divl
mov
or
or
or
add
push
ljmp
aas
adc
add
and
mov
inc
test
pop
dec
pusha
jo
dec
dec
jo
addl
dec
arpl
cmp
loop
out
push
push
aam
lahf
push
pop
add
push
mov
test
xor
and
sub
or
test
lods
sbbl
and
jne
mov
sarb
inc
addl
or
xchg
mov
int3
push
aad
push
and
xorl
xor
ja
rcl
fstpl
jmp
push
push
out
or
jo
inc
mov
neg
ret
jne
and
imul
pusha
cwtl
outsb
neg
push
mov
ficompl
sbb
inc
shll
int3
lods
fadds
insb
cmp
je
incb
jl
pop
rcll
pop
pop
xor
fnsave
xchg
ret
scas
int3
in
mov
stos
loopne
fcoms
popa
clc
insl
jge
mov
sbb
int
fs
outsw
push
call
dec
je
aaa
and
sbb
leave
nop
or
mov
movsb
test
jnp
movb
sbb
sbb
outsl
push
roll
xor
xchg
push
cmp
sbb
rolb
shrb
aaa
aaa
inc
pop
dec
adc
sbb
mov
mov
add
add
mov
add
in
adc
stc
sbbl
shlb
mov
sbb
stos
jmp
xchg
lods
sub
in
add
xor
adc
adc
jp
jne
andl
cli
test
cmpsb
xor
movsl
push
sub
test
or
adc
test
add
mov
sbb
add
loopne
addl
mov
cmpsb
dec
adc
or
outsb
cmp
inc
das
lock
xchg
mov
push
cmp
aaa
sbb
pop
and
aas
mov
inc
adc
ja
and
test
inc
and
sub
insl
mov
pcmpeqb
cmp
sbb
mov
pop
and
xor
call
or
pop
lea
cs
cmpsl
xchg
cmpsl
add
cmpsl
mov
xor
mov
imul
and
pop
and
insb
js
inc
out
jo
or
and
daa
sbb
das
mov
loop
data16
add
pop
pop
xor
inc
add
mov
out
aaa
add
jecxz
test
aas
xor
aaa
in
jl
test
jp
cwtl
push
inc
mov
add
shr
dec
jo
mov
add
or
sbb
jmp
ljmp
jb
je
jmp
xchg
jo
mov
sbb
push
adc
or
test
and
add
jg
xor
inc
lahf
hlt
mov
mov
adc
push
inc
subb
lahf
dec
jmp
jne
ss
inc
mov
sahf
je
jo
xor
imul
pop
ret
clc
lods
or
insb
cmp
jne
test
cmp
movsl
dec
clc
addr16
inc
lea
movsl
pusha
add
ret
add
adc
lahf
loopne
ja
mov
movl
mov
inc
nop
xchg
out
pop
int
and
adc
jmp
and
inc
adc
add
inc
and
je
adc
jb
cmp
push
inc
add
push
dec
inc
aaa
add
mov
imul
add
es
mov
or
jb
xchg
push
lea
add
push
jecxz
call
fnstcw
inc
call
js
loopne
sub
or
icebp
jl,pn
js
sbb
inc
lds
fcompl
sbb
sbb
push
and
and
or
push
add
or
pop
or
or
mov
push
xor
or
sbb
mov
arpl
cmp
leave
ret
idivb
adc
pop
sahf
xchg
push
movsb
adc
mov
test
xor
js
dec
xor
push
sbb
fdivrl
shll
testb
sub
sbb
push
jle
and
nop
and
add
enter
sbb
jbe
loope
rcrb
shll
adc
pop
adc
js
mov
mov
shrl
sbb
pop
es
push
cmp
xor
test
rolb
jge
pusha
or
and
mov
enter
mov
push
inc
push
sbb
mov
pusha
push
popf
jbe
inc
out
fs
mov
add
stos
xchg
cmpsb
mov
clc
mov
add
fdivs
add
or
fists
push
arpl
sub
pop
aaa
mov
rorl
cmp
sub
dec
mov
inc
jbe
loope
out
loopne
pusha
pop
arpl
or
sbb
fldl
fldt
jmp
sbb
jmp
mov
bound
mov
out
cs
add
popa
cmp
xchg
aaa
inc
sbb
pop
bound
pop
mov
cmp
add
mov
sub
jecxz
dec
lods
fwait
inc
sub
popf
push
sub
and
outsb
inc
leave
push
sub
dec
pop
clc
sub
outsl
mov
push
sub
jno
js
mov
xor
loope
ret
xchg
cmp
xlat
inc
cmpsb
adc
cmpb
lea
mov
add
jmp
mov
mov
push
mov
xchg
mov
mov
dec
add
iret
push
push
adc
add
mov
jb
push
out
and
enter
inc
add
insb
pop
lock
in
jg
sbb
dec
not
and
push
or
shlb
in
inc
cmpsl
dec
push
loope
sbb
enter
push
jnp
add
fs
adc
lock
sub
out
aas
ds
mov
sub
mov
out
add
inc
pop
add
arpl
neg
clc
mov
dec
or
adc
xor
mov
sub
jae
mov
or
shll
sbb
push
insb
int3
cmc
cmp
je
test
je
aad
or
inc
arpl
and
cli
or
or
ss
jl,pn
add
sbb
push
rorb
fmuls
mov
push
cmp
push
movsb
adc
xor
push
xor
daa
sub
inc
cmpsb
cmp
xchg
or
and
dec
sbb
sbb
mov
fadds
cmp
aam
sbb
mov
pop
add
loopne
pop
adc
adc
and
and
ret
loopne
and
push
pop
add
inc
add
push
dec
mov
rorb
insb
adc
push
scas
idiv
sbbb
aas
sti
jnp
aas
mov
jno
or
mov
pop
test
cld
hlt
push
or
out
cwtl
inc
loopne
lock
das
add
pop
jbe
mov
sub
out
push
push
inc
lea
je
enter
add
adc
and
sub
jae
lret
cwtl
jp
popa
jne
inc
sub
jge
ja
int
pop
pop
mov
or
lret
and
sbb
sar
pop
mov
pop
push
imulb
lea
lahf
cmpsl
lea
adc
and
inc
jo
dec
sbb
lea
out
dec
pop
dec
test
mov
sbb
les
xor
nop
or
add
orl
dec
imul
jg
movsl
out
testb
add
loope
fld
xor
inc
fidivl
inc
das
jno
pop
inc
int3
push
push
andb
rcrb
add
hlt
in
cwtl
push
or
test
cmpl
sbb
mov
inc
add
aam
int3
mov
push
jp
or
faddl
arpl
iret
inc
movsl
addr16
addb
xor
xchg
fs
sub
adc
push
aam
lcall
mov
pop
mov
fmuls
arpl
push
rcr
loop
push
adc
inc
fdecstp
push
fldenv
cmp
pop
mov
xchg
mov
dec
or
or
sub
je
or
sarl
and
push
imul
add
mul
notl
mov
stc
mov
aam
inc
sarl
fcoml
out
decl
adc
pop
sbb
inc
testl
sarb
rolb
adc
sub
and
cmp
xchg
pop
jmp
icebp
into
adc
lock
push
pop
rorb
lds
add
mov
or
push
sbb
push
and
pop
rorb
sub
jne
xor
shlb
mov
mov
bound
push
or
and
xchg
cmp
test
push
and
sub
cmp
sarl
insb
fsubl
and
add
int3
lods
or
sub
jmp
and
push
push
popa
nop
ret
cltd
dec
add
jg
ret
or
sbb
pop
mov
add
bound
inc
das
inc
pop
inc
sub
sub
arpl
push
fbld
sbb
hlt
push
mov
movsl
arpl
inc
add
fldcw
movsl
stos
dec
mov
imul
mov
cltd
outsb
cmp
xchg
push
jp
fisttpl
popaw
clc
cmp
adc
ficompl
mul
sub
fwait
sub
xor
pusha
addr16
mov
lea
add
dec
pop
add
aad
pop
and
mov
movb
dec
cld
fcmovnb
sbb
fadd
inc
adc
add
add
outsl
sub
dec
test
jle
mov
add
mov
add
xchg
pushf
out
mov
add
fiadds
in
ret
and
adc
mov
sub
pop
push
sbb
push
xor
rclb
adc
adc
dec
mov
into
cmpl
call
movl
dec
clc
dec
js
fstpt
pop
add
bswap
shr
mov
dec
jns
mov
sbb
mov
sub
shl
mov
mov
jmp
lea
sahf
mov
fisubs
test
add
adc
adc
xchg
cld
sbb
inc
add
dec
ds
cld
mov
push
in
out
push
adc
mov
bound
inc
or
lods
std
dec
cmp
cld
rolb
jne
lea
add
ret
sub
inc
ret
sti
testl
test
jg
sub
push
rcll
sbb
add
daa
jmp
addr16
and
data16
push
inc
idivb
out
icebp
mov
js
aas
test
push
mov
cmp
adc
add
test
add
jmp
clc
cmp
jl
dec
jne
das
lea
icebp
inc
and
or
add
or
dec
fnstsw
adcb
clc
test
lds
xor
jbe
sub
notb
pop
pusha
add
add
cmp
pop
push
inc
push
clc
ja
add
daa
bound
data16
add
add
and
mov
dec
mov
pusha
push
js
bound
leave
add
int3
cmpw
rclb
movups
fldenv
xchg
push
xorb
outsb
dec
mov
xor
fs
mov
xor
jp
pusha
mov
dec
inc
push
cmp
cmp
mov
loopne
adc
ss
push
or
push
push
mov
lea
cmp
pop
lock
add
dec
jo
or
shlb
adc
inc
cmpsb
jg
hlt
sbb
or
inc
imul
je
jbe
jae
lahf
add
xchg
sub
push
mov
fadds
adc
inc
push
bound
je
pop
sbb
rcrb
pop
pop
dec
adc
dec
push
push
push
xchg
jge
mov
rolb
sbb
add
mov
xchg
pop
mov
vcmpngtps
mov
lret
dec
pop
add
loope
push
movsb
leave
mov
pop
xchg
icebp
xor
add
rorb
faddp
loope
xchg
out
mov
add
data16
adc
xor
rolb
addl
inc
jle
and
pop
mov
loop
and
jb
cld
push
push
test
nop
add
insb
mov
loopne
inc
fiaddl
jae
dec
call
lods
lock
mov
outsl
call
sub
inc
push
mov
dec
xchg
adc
add
enter
jne
loope
sub
sub
jne
ss
lea
mov
je
cmp
xor
mov
cltd
xor
sub
aam
cmp
cmp
jg
test
jle
cmp
jl
mov
aaa
enter
imul
dec
cmp
xchg
inc
ret
mov
sub
dec
cmp
sbb
inc
jl,pn
ss
or
shl
notl
mov
dec
inc
fadds
cmp
dec
in
mov
xor
push
pop
add
call
pop
data16
addl
repnz
or
iret
adc
adc
sub
cmp
inc
cmp
jecxz
fadds
sbb
xor
cmp
lods
movsl
push
ds
sbb
scas
add
shlb
pop
cmp
or
in
adc
sbb
mov
addb
imul
dec
cmovae
jo
cmp
dec
mov
xchg
add
cmpb
ret
jo
inc
scas
outsb
in
sub
loopne
imull
cmp
adc
lock
div
daa
imul
fmull
mov
addr16
xchg
pop
and
xor
sbb
aam
sbb
lds
ss
add
push
in
add
sub
mov
add
arpl
test
das
icebp
test
or
lea
add
int3
mov
jb
lret
xor
int3
xor
nop
pop
cwtl
xchg
or
mov
mov
insl
mov
push
mov
cmpsb
pop
and
push
call
sbb
clc
shlb
or
dec
das
cmp
inc
rolb
repz
test
adc
ss
loop
jb
adc
add
mov
add
jbe
mov
out
sarl
or
push
cmp
cmpw
add
scas
sbb
add
cs
mov
jb
and
outsl
aas
pop
dec
mov
inc
adc
test
pop
add
dec
or
scas
add
outsb
rorb
pop
xor
cmp
sarb
stos
aad
sbbb
lock
push
push
lea
mov
aas
and
sbb
sub
push
out
mov
sti
lea
mov
jmp
es
and
mov
fiadds
or
sub
shll
cs
in
je
dec
or
jle
lock
jmp
movw
mov
mov
jmp
in
jg
jmp
and
imulw
data16
in
js
or
inc
and
inc
and
add
and
pusha
pop
inc
pop
and
push
sub
sub
sub
adc
clc
pop
loop
les
add
xor
lret
mov
and
inc
out
lds
mulb
add
add
es
cltd
aam
ds
sbb
add
pushf
mov
sbb
sarb
jle
push
and
pop
testl
movsl
pop
aam
mov
daa
roll
sub
loop
out
mov
inc
and
mov
test
mov
inc
sbb
arpl
addl
cld
subb
outsl
or
bound
sbb
adc
inc
call
jo
in
add
jns
sbb
popa
or
pop
lods
or
das
rcrb
xchg
lahf
mov
pop
push
or
inc
nop
mov
lods
mov
sbb
idiv
push
les
fldt
fstpl
jg
lock
xchg
push
pop
add
adc
enter
lcall
in
out
sub
int3
scas
or
add
subl
incb
sbbl
push
call
xor
loopne
in
call
cmp
adc
push
lcall
loopne
sub
cmc
enter
push
adc
add
loopne
add
adcl
and
adc
or
out
or
xor
mov
push
cmpsb
add
push
lods
or
lods
pop
push
mov
push
orb
jbe
stos
mov
mov
add
jle
adc
add
dec
hlt
lods
push
fcompl
std
jecxz
push
mov
push
mov
je
andl
sub
xor
add
leave
mov
clc
rcll
pusha
add
mov
ja
mov
aas
int3
insl
fwait
subl
scas
pop
and
inc
add
adc
push
jle
movb
adc
mov
add
popa
cld
jno
pop
add
and
pop
push
xor
movsb
sub
xorb
scas
sarl
cwtl
add
es
ret
das
pop
mov
xor
lahf
cli
jno
loopne
push
sub
mov
jge
sbb
push
push
loopne
stos
inc
inc
lock
mov
js
call
fcomps
sbb
mov
xchg
bnd
lock
pop
push
add
dec
cmp
adc
adc
adc
adc
xchg
sbb
cs
adc
and
je
sub
movsb
jb
imul
sar
je
mov
jo
mov
push
inc
int
push
push
jo
add
mov
imul
sbb
aas
or
cli
add
cmp
fsubrs
pop
jne
cmp
pushf
push
inc
loopne
or
inc
or
jno
inc
dec
mov
mov
iret
or
sbb
cmp
and
mov
push
adc
mov
fsubs
push
push
insb
pop
add
pop
lret
inc
fdivl
dec
cmpsb
or
pop
cmp
sub
push
or
push
cld
add
loopne
pop
fstpl
sbb
int3
pop
adc
lods
add
or
test
mov
or
fsub
inc
sbb
sbb
nop
clc
jo
sahf
inc
push
and
out
push
push
sub
pop
into
and
test
mov
adc
jo
bound
add
pop
inc
lcall
cmp
je
mov
mov
sub
ret
daa
pop
adc
das
xchg
push
out
inc
outsl
jb
lods
aaa
mov
pop
lret
sbb
mov
and
mov
pop
jmp
mov
loopne
sbbb
insb
push
dec
dec
arpl
gs
add
sub
rcll
jae
popf
ret
sahf
xor
push
add
pop
xchg
push
cmp
push
mov
loope
repnz
mov
mov
ds
imul
mov
roll
hlt
mov
xchg
jl
and
lock
mov
leave
mov
lea
pop
adc
lods
test
dec
push
scas
ja
psubw
imul
push
ret
mov
loope
adc
lret
rcrb
inc
xor
sub
loop
adc
testl
dec
jne
inc
or
test
push
test
pop
scas
push
nop
pop
add
lahf
add
jg
push
dec
outsl
dec
cmp
cmc
scas
pop
outsl
popf
inc
xchg
dec
test
ficoms
lock
xor
aas
add
inc
aad
or
add
das
test
push
or
push
enter
inc
jns
pop
mov
mov
mov
mov
daa
les
xchg
pop
add
cmp
mov
xchg
clc
cmp
negb
ja
push
clc
test
pop
aas
cwtl
je
cltd
mov
jo
jne
mov
roll
gs
add
add
and
lcall
inc
pop
xor
add
push
inc
insb
imul
outsl
popa
jb
pop
jae
pusha
or
add
les
inc
add
or
add
pop
and
adc
nop
insw
inc
add
inc
xchg
bndldx
add
xor
test
daa
mov
lea
jl
mov
push
xchg
xor
pop
cmp
adc
gs
add
movsb
add
adc
pop
mov
subl
cmp
add
mov
scas
mov
push
pop
add
lods
mov
popf
shlb
mov
sbb
dec
loopne
inc
dec
or
inc
les
dec
and
dec
or
das
or
jb
or
jp
pop
in
xor
or
add
pop
jle
test
push
xchg
mov
xlat
inc
jne
inc
jl
cwtl
dec
jo
or
mov
fiadds
test
pop
icebp
adc
pusha
cmpsb
cmpsl
test
xor
push
and
test
sbb
jns
and
xchg
ret
fisttps
xor
bound
jo
ljmp
sbb
adc
cltd
sbb
es
and
dec
push
lock
sub
test
adc
sub
xchg
out
add
adc
sbb
xchg
jnp
das
sbb
xlat
addl
in
add
test
icebp
lods
inc
or
mov
into
icebp
dec
loop
sbb
sub
arpl
cli
mov
xlat
adc
push
pop
and
add
or
xchg
adcl
pushf
mov
sbb
or
enter
cmp
and
jmp
or
aaa
or
and
mov
sbb
or
push
sbb
insl
sbb
inc
sbb
adc
sahf
test
sbb
push
and
mov
or
pop
shrb
popa
orl
or
mov
mov
xor
jno
xchg
ds
mov
imul
ret
sub
sbb
xor
add
sub
add
and
xchg
andl
pop
sub
lret
cli
cmp
addr16
or
push
add
mov
xor
xchg
adc
fsubs
add
sub
and
rol
leave
push
sub
jecxz
test
push
inc
xchg
inc
add
or
and
aas
imul
and
push
mov
sbb
lea
daa
fimuls
or
lcall
sbb
push
sbb
adc
jge
or
add
pop
mov
fwait
ds
inc
clc
and
sbb
pop
xchg
lock
lahf
aaa
es
push
push
push
adc
dec
xor
pop
jne
adc
sbb
lods
adc
fildll
and
addl
mov
inc
dec
fmull
clc
scas
add
test
or
sub
xchg
daa
mov
ret
das
in
std
fwait
push
test
inc
sub
and
mov
and
and
lcall
lea
cmp
push
call
adc
adc
push
ret
imul
lret
js
or
adc
xchg
xchg
loopne
jecxz
and
mov
push
jmp
xor
in
in
pop
psubd
leave
mov
daa
jmp
jne
lcall
and
push
push
movsl
shr
popf
fidivrl
or
fidivs
adc
je
push
loop
or
in
or
push
push
pop
add
jmp
call
or
add
push
push
lea
clc
test
dec
adc
add
adc
cmp
jns
imul
arpl
test
push
push
dec
adc
push
adc
enter
mov
cwtl
shlb
out
or
das
add
mov
xor
loopne
sub
jne
cli
sbb
and
xor
popa
mov
sub
pop
imul
out
sbb
icebp
lahf
inc
adc
jmp
push
pushf
and
dec
pusha
pop
pop
out
cmpb
std
imul
mov
inc
jl
loopne
pop
bound
mov
adc
scas
jle
and
mov
mov
loop
clc
mov
or
pop
icebp
inc
pusha
outsb
or
ret
jo
popa
pushf
add
cli
mov
push
and
fistps
and
gs
dec
or
inc
shld
aas
inc
xchg
jbe
pop
loopne
or
add
sbb
jg
dec
notl
push
jo
jge
pop
sub
aaa
cmp
imul
sbb
rorb
push
mov
and
and
outsl
jecxz
add
push
cmc
push
cs
popf
outsb
bound
or
cmpsl
or
daa
out
mov
mov
sub
push
into
shrb
lock
dec
out
js
push
cwtl
mov
loopne
jg
cmpl
je
cld
mov
mov
push
pop
sub
hlt
add
inc
ja
faddl
in
dec
enter
pusha
jmp
pop
fs
jae
push
popf
sbbb
mov
popf
add
cld
or
cmpb
lcall
adc
jne
xchg
fidivs
jge
sub
mov
mov
dec
int
lods
add
mov
mov
add
xlat
int
lcall
loopne
mov
pop
cmp
lret
subl
xchg
sbb
imul
mov
xor
sbb
addr16
push
adc
add
in
pop
lods
faddp
push
xor
ljmp
subb
stos
movswl
push
push
sbb
nop
jecxz
sub
stc
mov
dec
repnz
into
push
mov
clc
rorb
fimull
sub
mov
aad
js
lea
push
xor
inc
adc
pop
xchg
xchg
mov
jnp
xchg
inc
popa
clc
cmpsl
cld
shl
jno
lods
xchg
data16
clc
adc
add
test
xor
rclb
cld
inc
lods
hlt
mov
mov
xchg
xor
xor
into
ljmp
pop
push
adc
orl
sarb
cwtl
jne
adc
mov
fnstsw
test
icebp
fs
js
sub
adc
push
sub
sbb
dec
addr16
xor
rorb
imul
mov
cmpb
dec
push
cmp
pop
inc
xor
pushf
outsl
ret
pushf
in
push
add
mov
jp
xor
jo
jmp
in
add
fdivr
test
fiaddl
out
pop
fs
push
lock
out
mov
mov
pop
aaa
sahf
jno
add
pavgw
and
jo
je
xor
dec
das
pop
inc
lret
movsb
sbb
xorl
and
rcrl
test
mov
fistps
push
pop
sub
loopne
sub
fists
fidivl
loopne
pop
lahf
adc
orl
cld
fs
mov
inc
pop
add
orl
inc
ja
movsb
mov
inc
adc
or
pop
sub
pushf
inc
xchg
inc
mov
push
add
jmp
sbb
mov
add
xor
outsb
js
or
sub
cld
sbb
xor
adc
adc
sbb
cmp
adc
and
mov
out
cmp
ret
addr16
push
pop
cmpl
pop
inc
mov
ret
sbbl
push
scas
scas
inc
call
add
jle
aaa
push
xor
add
pop
and
push
inc
adc
add
pusha
notb
cltd
xor
push
push
adc
dec
clc
jnp
push
cs
push
test
lea
add
or
adcb
jecxz
push
mov
jae
push
stos
popf
lock
dec
clc
xor
movsl
jbe
lret
push
dec
inc
cmp
inc
outsl
pop
xchg
sbb
shlb
lods
je
pop
cltd
fimuls
add
inc
sbb
sahf
add
cmpsb
shrl
jbe
cmp
sub
shr
add
inc
shl
test
pop
out
sub
add
add
sub
lea
test
and
dec
aaa
mov
add
js
mov
lret
add
inc
bound
test
imul
push
dec
call
jae
xor
adc
pop
lods
add
adc
orb
imulb
push
pushf
les
sbb
jae
mov
dec
pop
xchg
cmpsl
pushf
shlb
push
mov
int3
clc
clc
inc
mov
mov
sbb
mov
mov
mov
imul
cli
inc
shrb
mov
adc
and
push
or
add
lods
adc
sbbb
or
insb
sub
call
and
sbb
pop
subb
xchg
adcb
dec
or
xorb
mov
jae
xchg
push
sub
shl
adc
pop
mov
adc
out
xor
mov
pop
aas
loop
in
clc
pop
in
and
inc
loopne
bound
jg
outsl
inc
adc
addb
sbb
ret
mov
movl
imul
dec
dec
or
mov
mov
outsb
inc
clc
stos
xchg
clc
dec
cmp
jl
xchg
mov
add
icebp
xlat
sbb
xor
inc
mov
loopne
test
cltd
outsb
mov
cld
into
mov
xchg
dec
fisubrl
push
or
fldz
orl
or
push
sbb
push
aas
sbbb
sbb
xchg
pop
inc
adc
shrb
sbb
adc
mov
ss
nop
outsl
pop
cwtl
out
or
inc
xchg
icebp
mov
hlt
xchg
ja
cli
ss
movsb
cmpsl
ret
cmpl
and
cmp
rolb
test
repz
inc
jo
pop
inc
mov
and
mov
arpl
push
pusha
sub
push
and
pusha
xor
pop
add
mov
sub
lds
sti
cld
adc
flds
xchg
sub
or
inc
xchg
push
shll
movsl
arpl
jno
push
pop
test
and
pop
sbb
ja
mov
je
lahf
pop
adc
add
les
das
pop
jbe
das
jmp
inc
pop
sar
jle
dec
or
int3
push
mov
jle
pusha
addr16
add
xchg
cmp
loopne
xchg
xchg
xchg
xor
xchg
jp
nop
mov
and
push
decl
lret
or
mov
ret
adc
jle
adc
adc
inc
adc
stc
adc
sub
test
pop
test
inc
insb
mov
push
outsl
push
mov
adc
cmpsl
jo
adc
int3
pop
loope
jno
and
sbb
aad
inc
test
sbb
cmp
bound
adc
add
lock
xchg
lock
out
dec
sahf
cmpw
ja
jge
xchg
aas
dec
dec
mov
out
pop
add
mov
adc
loopne
arpl
push
daa
sbb
daa
xchg
mov
lea
sbb
testl
mov
sbb
adc
jge
and
rcl
je
imulb
inc
sbb
cmp
jle
mov
adc
movl
dec
insb
or
loopne
dec
pop
xchg
sbb
and
adc
test
aaa
fisttps
pop
mov
or
je
adc
adc
and
sbb
and
xchg
test
add
cmp
fisttps
sbb
add
inc
pop
mov
js
fisttps
leave
push
stc
push
in
ss
in
and
je
mov
outsb
nop
fs
in
pop
jns
sub
pop
inc
cmp
mov
or
andl
repz
daa
inc
and
out
cs
xchg
xlat
push
mov
daa
ret
pop
sbb
aas
pop
fbstp
inc
mov
pop
push
jnp
faddl
fs
mov
popf
or
rcll
inc
inc
adcl
sub
fiadds
hlt
xor
bound
adc
stc
pop
add
pop
es
push
fmull
sub
and
sbb
lods
dec
inc
mov
and
ss
cmpsl
mov
or
sub
cmp
fwait
addl
push
mov
mov
push
fcoms
cmpsl
and
mov
stos
jne
insl
mov
push
push
nop
add
enter
mov
and
cmp
pop
shlb
inc
cmp
and
sarb
or
loope
getsec
fstl
popf
mov
mov
movsl
fdivs
cmp
je
sub
mov
jnp
pop
daa
sub
sti
add
test
bound
imul
inc
adc
lea
lds
xor
jne
xchg
and
daa
pop
inc
jle
ret
push
mov
test
dec
sbb
cmp
insb
xor
ret
jne
mov
xor
sbb
pushf
or
sbb
or
mov
imul
jo
add
lock
mov
xorb
out
xchg
inc
sbb
popa
inc
or
and
cli
js
int3
inc
pop
mov
addr16
pop
shrb
and
mov
sbb
dec
mov
bound
inc
jnp
cmp
cmpsb
sub
dec
dec
test
push
dec
in
fsubrp
shrb
add
cmp
xchg
mov
inc
adc
sub
push
roll
push
orb
mov
push
lcall
add
loopne
cmp
bound
cmp
loopne
push
repnz
loopne
scas
mov
aaa
test
dec
add
sbb
out
add
push
push
aaa
and
adc
lock
xor
push
add
sub
popa
cwtl
rcrb
add
add
mov
bound
or
call
push
add
pop
push
adc
xor
out
cmp
jno
js
aad
jo
out
int
cmp
shld
and
mov
push
add
xor
popa
mov
inc
jmp
aam
mov
fldenv
cmp
adc
xchg
popa
jg
call
bswap
bswap
jp
xchg
shll
push
and
mov
insl
mov
push
or
aam
cmp
pop
test
xor
jle
sub
data16
add
lock
lods
and
push
lea
add
sbb
mov
inc
fcomps
add
and
cmp
push
decb
mov
or
lea
rclb
mov
clc
frstor
inc
nop
cmp
adc
mov
mov
push
pop
int
bsf
push
push
lahf
cmc
or
sub
pop
jne
add
in
sbb
inc
sub
dec
mov
imul
xchg
xchg
xor
dec
mov
xor
shlb
into
dec
arpl
xor
out
subb
jbe
enter
xchg
sub
out
bound
int3
test
sbb
and
pop
test
lea
add
cmpb
and
adc
nop
shr
fisttpll
add
scas
in
arpl
cmp
jnp
sbbb
mov
or
add
sub
cld
lea
add
add
inc
clc
pop
lods
movlps
inc
sub
sub
leave
cli
movsb
or
cmp
pushf
and
mov
jmp
mov
fs
arpl
dec
daa
jb
les
lahf
clc
addl
mov
addr16
sbb
das
lea
adc
adc
mov
dec
pop
mov
mov
movsl
int
scas
push
sub
mov
mov
jmp
push
mov
add
repz
stos
add
or
and
xor
fs
mov
push
sahf
inc
cli
and
push
out
jo
or
sub
movntps
pusha
xlat
push
mov
lahf
lods
and
cld
add
rorb
fldl
add
mov
jne
lea
add
push
mov
inc
add
jno
in
sahf
insb
dec
mov
jle
xor
mov
jne
jmp
aad
ficoml
jmp
imul
cmp
push
push
fstpt
das
add
and
push
and
aaa
or
add
es
or
lods
cmpsb
push
test
rolb
and
aas
pop
jno
std
mov
xchg
push
push
push
ljmp
add
jbe
inc
adc
movhps
call
jno
sbb
cltd
adcl
getsec
adc
movb
or
or
add
lea
mov
js
fs
scas
push
xor
or
pop
in
mov
jp
mov
loopew
sub
mov
inc
clc
test
sbb
dec
outsl
call
lock
xor
sbb
arpl
nop
imul
mov
jg
movzwl
push
dec
imulb
mov
add
cmp
cmp
push
movsl
out
punpckldq
sbb
pop
pusha
cmp
inc
dec
adc
inc
shll
sbb
insb
xchg
push
xor
into
or
iret
ret
add
inc
je
sub
fcoml
add
add
std
arpl
test
pusha
mull
rcl
xchg
mov
xchg
int
dec
xchg
inc
cmp
mov
das
clc
xchg
push
inc
or
pop
push
inc
or
inc
inc
cmp
rorb
lret
inc
ret
push
les
call
adc
mov
inc
add
jno
daa
nop
mov
push
sbb
or
xor
fistl
test
or
scas
sub
pop
icebp
adc
das
sbb
mov
daa
add
adc
mov
loopne
outsb
sub
lahf
pop
cld
dec
push
imul
in
jae
cmpb
jecxz
push
and
les
pop
lea
mov
pop
mov
pop
and
adc
and
push
test
xchg
push
sub
into
fwait
mov
and
mov
sbb
sub
or
adc
push
lock
cmc
sub
das
inc
sub
jne
aas
jo
mov
hlt
sbb
pop
subb
pop
jne
idivb
jae
mov
mov
xchg
mov
mov
xor
inc
ret
add
pop
movl
mov
sbb
cmp
or
test
mov
add
pop
sbb
xor
add
es
mov
jmp
and
add
test
and
xorl
sahf
je
jne
or
or
add
add
imul
iret
inc
xor
int3
and
push
nop
push
add
dec
ret
inc
and
push
loopne
clc
pop
loopne
mov
sbb
cmp
add
mov
emms
pop
jb
lcall
fcomps
andb
sbb
jbe
cmpsb
std
movb
dec
add
dec
add
or
outsb
inc
movsb
or
dec
repnz
data16
ja
push
adc
inc
incb
rcl
mov
rorb
ret
adc
adc
scas
dec
iret
pop
in
jne
imul
add
mov
inc
cwtl
mov
push
lock
testl
popa
cmp
stos
mov
outsl
incb
adc
test
add
jg
add
mov
es
push
fcomps
adcl
popa
inc
out
adc
inc
sub
cmpsb
mov
adcl
push
or
dec
sbb
xor
imul
test
inc
xor
push
xor
pop
xchg
push
or
mov
cmpb
test
inc
jge
adc
scas
xor
rclb
mov
inc
or
pop
dec
imul
ds
sub
cld
aaa
cld
pop
jne
sbb
mov
mov
lock
daa
push
add
loope
mov
push
adc
sub
ljmp
adc
jmp
mov
mov
mov
inc
sbbb
push
aad
sbb
icebp
mov
xor
ljmp
fld
xchg
add
inc
sbb
lea
cmpsb
or
push
lods
jecxz
mov
mov
mov
push
roll
inc
jo
inc
jo
adc
loop
add
inc
and
xor
adc
cs
cmpb
lea
xor
cli
push
mov
add
icebp
pop
xchg
mov
clc
inc
lret
test
push
cmp
lea
adc
fwait
test
mov
adc
orb
shrl
jmp
inc
pop
icebp
popf
sbb
pop
mov
add
lahf
dec
adc
or
adc
push
loopne
fcoms
push
xor
ret
xchg
jb
rcr
les
sbb
or
push
push
mov
repnz
or
and
and
les
icebp
jmp
aaa
rorb
fcomps
test
clc
loopne
pop
jno
or
push
or
loopne
and
ffreep
fildll
shlb
movl
add
mov
pop
in
lahf
movsl
ljmp
das
dec
mov
orl
stos
adc
jbe
mov
xor
sbb
cmp
sarl
mov
or
push
push
out
or
js
test
loop
or
call
mov
push
lcall
cmpsl
push
jo
jo
dec
pop
mov
push
vpmacssdql
loop
mov
inc
orb
or
sub
add
and
mov
or
mov
orb
pop
pop
and
jmp
push
push
push
adc
fildl
mov
hlt
sub
ficompl
mov
clc
or
mov
mov
add
add
in
sub
outsb
push
push
into
pop
push
push
sbb
je
bound
sbb
test
and
pop
dec
scas
repnz
jno
fcoms
or
mov
xchg
adcb
les
enter
xchg
in
jle
xchg
dec
sub
push
je
mov
test
cwtl
lods
mov
js
lock
pop
fistps
cld
mov
mov
pop
imul
adc
loop
push
xchg
icebp
pop
cmp
add
lahf
pop
mov
in
rorl
push
in
mov
rcll
jne
ss
inc
lock
mov
test
aam
jo
xor
jbe
mov
pop
dec
lods
lahf
push
add
cld
inc
push
shl
test
lea
sub
cmpsl
std
push
call
call
dec
movsb
push
dec
push
pop
adc
mov
lahf
add
pop
loop
cltd
scas
mov
int3
add
xorl
and
adc
adcl
call
sbb
fldl
out
loope
cmp
and
loope
cmp
mov
sub
cmp
lea
sub
jb
ret
loop
cwtl
test
pop
out
push
or
adc
sbb
rolb
ret
and
sbb
adc
fs
cmp
movb
pop
int3
repz
jae
cs
cwtl
and
mov
sub
jo
sub
or
xchg
imul
adc
rcr
push
hlt
xchg
mov
dec
adc
rcr
jmp
addr16
clc
push
test
pushf
mov
es
push
icebp
push
sub
xor
xchg
jmp
aam
push
in
xor
cmpw
pop
add
sbb
das
pop
lock
mov
repz
das
pop
lea
sub
or
pusha
push
xchg
stos
daa
adcl
stos
andl
add
push
jmp
sbb
pop
ljmp
daa
sub
in
movsb
adc
sbb
add
inc
dec
cld
xor
sub
int
xor
test
pushf
je
mov
daa
lock
jb
cmp
loopne
add
sub
jle
cmpl
or
adc
or
ja
inc
xor
jle
push
xor
je
jne
mov
or
inc
add
addb
fidivrl
pusha
pop
neg
or
je
or
sub
sarb
push
test
adc
outsl
lock
ficoml
lea
push
movzbl
push
cwtl
int
rclb
add
dec
xchg
mov
lea
dec
adc
pop
mov
js
rolb
rclb
push
sbb
or
push
push
mov
ret
add
stos
nop
inc
movsb
mov
push
jecxz
mov
fisubl
inc
mov
jmp
push
pop
push
bswap
adc
in
pop
outsl
adc
popf
and
inc
sub
sbb
and
lods
cli
inc
push
clc
mov
lea
and
and
add
mov
mov
dec
add
jge
jo
add
pop
add
mov
adc
adc
dec
push
push
or
xlat
adc
loopw
and
test
sub
cmp
sub
mov
and
add
dec
xor
sbb
rcrl
xchg
outsl
add
es
adc
mov
xchg
sbb
jo
cwtl
rclb
iret
inc
pop
inc
stc
nop
sub
add
adc
outsl
sbb
lea
test
mov
jb
add
pop
dec
test
dec
and
and
push
push
and
aam
inc
loope
pop
scas
lock
and
pushl
xchg
test
je
mov
int3
push
adc
push
cli
lock
popf
adc
add
adc
add
sub
setge
adc
fsubrp
adc
sbb
push
push
lea
negb
cld
cmpb
je
fmuls
sub
movsl
aam
cmp
xor
adc
adc
cmp
clc
sub
sbb
clc
lods
and
out
xor
ficoml
adc
popa
cwtl
or
or
lock
jae
bound
rorl
imul
mov
push
inc
or
ss
inc
xchg
pusha
xchg
ss
cs
add
xor
sub
sub
sub
or
je
fld
loopne
sbbb
xchg
subl
out
cli
inc
xchg
movd
sub
out
daa
and
or
or
out
mov
call
xor
orl
jl
and
or
outsl
sub
int
mov
push
fwait
jmp
cmp
push
pop
inc
sub
testb
je
lea
jns
mov
mov
inc
jo
mov
fildl
sub
js
sbb
mov
inc
pusha
sbb
xorb
jl
lahf
add
daa
push
fcoms
add
cmp
push
add
mov
inc
and
cltd
mov
sbb
in
xlat
and
arpl
and
xchg
cli
add
push
or
lea
inc
or
cmp
push
jmp
sub
add
inc
dec
add
hlt
jecxz
mov
sbb
add
jo
adc
inc
addb
cmpsl
push
inc
daa
sub
mov
adc
loope
in
push
dec
loope
xor
add
pushf
aaa
incl
mov
ja
sbb
add
sbb
sub
xadd
and
das
scas
test
lea
hlt
nop
mov
mov
mov
mov
fwait
or
or
jns
lret
loope
aam
imul
bound
test
xchg
sub
add
mov
sbb
add
mov
pusha
pop
push
jo
loopne
jnp
add
xchg
jb
pop
cmp
or
addr16
jne
lock
inc
adc
sub
jb
push
push
add
daa
xchg
add
pop
pop
mov
ret
iret
pop
jge
aas
gs
aam
hlt
inc
std
or
add
add
call
mov
xor
and
and
mov
jp
ljmp
pop
adc
add
push
add
push
pop
add
lock
dec
pop
cmpsl
jge
xor
in
jnp
orl
cmp
push
arpl
adc
stos
imul
testb
imulb
inc
pop
cmp
insb
mov
mov
inc
mov
adc
mov
pop
sub
xchg
dec
repnz
scas
xchg
daa
in
pop
adc
dec
outsb
popa
test
pusha
insb
sbb
dec
push
add
test
pop
lret
enter
outsb
lret
adc
aas
les
cmp
inc
imul
xchg
adc
rcrb
shrl
je
sbb
out
js
xchg
icebp
inc
stos
rorl
add
or
imul
push
dec
leave
mov
inc
or
mov
xchg
clc
adc
push
sbb
pop
mov
add
sbb
dec
lock
sbb
aas
or
in
je
lock
pop
jge
push
aam
or
or
inc
xor
bound
cmp
pusha
movsb
sbb
xchg
aaa
pop
jns
inc
xor
mov
and
mov
rcr
aas
or
mov
pop
cmp
add
out
mov
nop
sub
xchg
push
mov
and
mov
rol
mov
ret
daa
push
int3
add
leave
cltd
ret
rclb
add
or
pop
test
mov
pop
test
dec
push
ss
mov
inc
inc
into
enter
call
sub
add
adc
push
sbb
push
movzbl
movsb
adc
mov
xor
sbb
daa
adc
push
push
loopne
jp
aad
push
pusha
addb
sbb
xchg
cld
mov
inc
fwait
mov
or
sbb
add
movsl
leave
or
push
call
and
cmpb
fistpll
add
call
mov
pop
pushf
daa
std
xor
sbb
jne
out
lcall
inc
mov
push
cld
sahf
push
mov
jmp
xor
lsl
icebp
pop
hlt
mov
shll
enter
imul
jg
test
push
popa
push
inc
push
xlat
inc
push
dec
inc
push
push
inc
rclb
push
inc
pop
dec
imul
fnstenv
pop
inc
jne
jb
outsb
je
gs
imul
ljmp
je
jne
jae
imul
test
lods
dec
push
and
cli
mov
inc
insb
and
xor
fwait
mov
add
aas
scas
fdivrs
pushf
mov
push
push
popa
je
jb
push
pop
adc
aaa
test
je
pop
test
rol
mov
sbb
add
xor
popf
fisttps
lods
adc
pop
or
and
bt
push
push
mov
pop
sbb
pop
mov
inc
or
lea
inc
and
ja
sbb
or
push
insb
jmp
out
adc
sub
cmp
popa
call
cld
loopne
sbb
mov
fmull
sbb
jnp
addl
or
sbb
push
mov
or
xchg
xchg
out
daa
and
inc
fsubrs
in
mov
push
bound
fmull
jbe
sub
ljmp
sub
call
xchg
cmp
cli
and
dec
or
inc
and
lahf
insl
test
lret
cmp
decl
js
cld
push
stc
movl
adc
lret
decb
ret
jne
sbb
push
push
lds
fmulp
call
pusha
mov
andl
cs
add
add
movlps
or
hlt
mov
cmp
pusha
inc
mov
pusha
xlat
mov
pop
mov
xchg
jmp
xchg
ja
push
negl
sbb
xor
mov
xor
jl
mov
push
lods
mov
test
test
or
loopne
pop
mov
enter
inc
xchg
icebp
pushf
xchg
mov
mov
stc
adc
loopne
or
cmpb
adc
add
xlat
mov
and
call
push
call
stos
pop
pop
adc
dec
incl
xorb
mov
pop
pop
sub
js
icebp
outsb
add
pop
sahf
adc
das
sbb
add
mov
fs
nop
push
xchg
push
push
push
push
mov
outsb
arpl
dec
bound
arpl
insb
or
ss
aaa
push
dec
fmuls
mov
inc
jb
loopne
add
imul
adc
push
sub
inc
adc
pusha
pusha
and
inc
pop
fldl
push
mov
adc
and
jb
je
test
adc
cld
and
scas
sbb
inc
add
jbe
insb
or
mov
push
addl
adc
push
inc
call
imul
mov
or
lock
pusha
jbe
push
add
int3
jge
pop
loopne
dec
cmpsl
es
imul
sbb
mov
push
push
lods
lea
push
add
jb
test
rorl
jnp
aaa
sub
ss
xchg
xor
push
mov
inc
cmp
xchg
adc
inc
imul
jb
fs
popa
push
je
ja
and
or
in
and
adc
push
cwtl
pop
dec
outsl
or
lahf
cli
push
sti
ret
inc
outsb
fs
push
ret
icebp
popf
jnp
insb
js
push
outsl
pop
mov
jmp
mov
or
push
lret
movsl
xchg
or
mov
daa
loope
jmp
push
je
inc
insb
jo
push
mov
xchg
sbb
mov
jnp
add
decl
adc
je
mov
add
sbb
lcall
or
and
and
test
mov
and
and
mov
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
add
and
and
or
adc
and
and
sbb
and
and
and
sub
xor
and
and
cmp
inc
and
and
dec
dec
push
push
dec
dec
sub
adc
mov
lcall
movb
test
push
stos
add
jnp
pop
arpl
xchg
out
sbb
push
jo
add
fcoms
stos
mov
mov
push
subl
mov
push
push
les
inc
add
mov
stc
jb
mov
pusha
jnp
push
jl
inc
pusha
jnp
cmp
and
jns
mov
mov
and
add
and
adc
push
xchg
push
or
add
or
mov
pusha
jnp
push
cmp
push
pusha
sbb
pop
pusha
sbb
sub
add
andb
push
pusha
and
mov
sbb
inc
orl
fsubs
inc
subl
fisttpll
mov
repz
rcll
and
push
dec
and
adc
add
orl
ja
cmpsl
rclb
lea
and
out
and
push
les
push
pusha
cmp
sti
adc
add
adc
lods
sub
and
mov
add
cmp
push
leave
sub
xchg
addb
jmp
xchg
add
daa
cld
aas
popa
js
add
fs
insb
add
outsb
pop
imul
add
and
incl
arpl
jb
jne
fidivrl
inc
gs
inc
adc
jle
mov
lcall
jb
push
imul
scas
adc
mov
pop
dec
cmpsb
jb
arpl
test
and
imul
push
movl
arpl
cmp
jno
jae
sbb
cld
imul
fsubs
inc
jns
jb
outsb
jae
popa
or
xchg
ret
cwtl
addb
pop
xchg
fdivs
aaa
outsl
pusha
out
in
pop
xor
mov
outsb
jne
push
aam
push
xor
push
das
push
or
fmuls
sub
adc
adc
pop
sbb
movb
push
jl
add
sbbb
xchg
sub
or
sahf
out
push
clc
mov
popa
insl
dec
push
jns
clc
popa
arpl
in
daa
inc
jb
jae
and
js
pop
cs
fstl
push
in
pop
xchg
aas
xchg
ss
mov
push
lds
or
inc
divb
add
rcll
fs
inc
aaa
or
popa
bound
pop
jno
outsl
addr16
jne
mov
subl
insl
push
das
fldl
leave
push
scas
das
jl
xor
dec
dec
icebp
adc
push
xchg
inc
outsl
arpl
hlt
popa
jns
add
subl
dec
cld
dec
gs
sbb
adc
add
or
cmp
stos
test
mov
clc
mov
loopne
bound
dec
cmc
pop
or
mov
add
xchg
add
into
ja
repnz
add
out
xor
data16
dec
sub
sub
jne
push
and
adc
jbe
push
int3
sbb
jge
aaa
lahf
aas
cld
jg
aaa
inc
push
dec
inc
push
dec
cs
dec
dec
inc
ja
inc
js
fs
jb
cld
outsl
add
push
aam
xchg
inc
test
push
push
xor
into
pusha
adc
dec
hlt
dec
add
push
daa
inc
scas
das
jge
or
or
inc
jecxz
xchg
das
dec
ds
push
cli
insl
jo
outsl
push
mov
push
adc
jl
sbb
inc
push
and
adc
pop
mov
and
cmp
inc
ja
jl
shl
adcb
or
add
mov
test
add
push
jge
clc
lea
jne
pop
add
testl
push
scas
or
mov
push
mov
dec
or
fs
lods
insb
jae
les
gs
adc
push
stos
jae
add
ret
sarb
lds
dec
outsl
outsb
gs
or
push
mov
sbb
sbb
push
dec
lea
call
jnp
fiaddl
add
and
movsb
fisubrl
stos
inc
scas
fldl
enter
push
sar
lcall
cmpsb
sub
sbb
inc
add
subps
and
dec
enter
push
jo
divl
push
pop
jbe
fiaddl
cmp
repz
test
addb
stc
rcr
data16
loope
and
sbb
add
jnp
divl
adc
data16
sub
data16
insb
push
movsb
out
jmp
pop
mov
mov
shr
push
inc
fdivrl
ljmp
aam
add
mov
mov
inc
jmp
je
fsubp
push
cwtl
in
push
ret
or
and
cmp
gs
mov
pop
xchg
shrl
je
mov
pop
inc
cmp
in
test
mov
lock
jbe
ret
and
push
sub
mov
sbb
xor
sbb
sub
mov
sbb
inc
mov
mov
loope
subb
add
enter
outsb
sub
pushf
add
clc
leave
inc
push
add
xadd
pusha
lock
mov
lock
flds
or
add
inc
mov
jle
add
cmp
mov
call
pop
lret
adc
shll
push
adc
rcrb
inc
je
pop
shld
inc
adc
out
sti
incb
outsl
fs
shl
mov
iret
hlt
add
inc
popa
jo
orb
or
outsl
je
jo
mov
dec
adc
mov
lcall
adc
sar
adc
adc
or
std
movsl
push
cwtl
jb
jae
mov
fwait
andb
pop
pop
hlt
stos
adc
mov
scas
adc
fcoml
dec
popl
dec
and
out
in
add
dec
dec
imul
jmp
pop
movsl
mov
inc
das
cpuid
xor
lret
or
sbb
xchg
mov
push
sar
sbb
and
push
cmp
cwtl
insb
adc
cmp
jae
xchg
incb
insb
cmp
mov
les
mov
push
cmp
push
pusha
xchg
inc
es
add
xchg
sbb
and
rolb
mov
loope
test
fistpll
jnp
pop
dec
cld
call
xchg
cwtl
dec
out
inc
xchg
mov
xchg
movsb
push
aas
pop
out
push
push
push
mov
hlt
sbb
roll
push
outsl
jo
jo
outsb
popa
leave
inc
xorl
or
mov
and
lea
arpl
popa
jb
push
mov
dec
call
pop
xlat
test
dec
cmc
andb
fldl
mov
int3
lock
add
push
and
loop
and
inc
and
cmp
xlat
jge
mov
lea
sbb
xor
and
jno
and
je
imul
or
pop
inc
xor
es
push
fidivrl
pop
ss
dec
inc
pop
inc
mov
push
fdivs
daa
dec
outsb
push
imul
mov
inc
pop
and
mov
js
dec
xchg
sbb
push
sbb
push
inc
sbb
lock
aam
mov
pop
jecxz
sbb
add
adc
pop
dec
sub
dec
jmp
dec
jbe
jb
lcall
xchg
fdivrl
je
adc
subb
add
pop
jbe
and
cwtl
int3
add
mov
pop
fldcw
add
jl
adc
lcall
xor
xor
pop
push
das
fdivrl
dec
outsb
push
out
outsb
test
enter
enter
test
xchg
ror
pusha
pusha
out
pop
dec
xor
jmp
out
mov
cmp
inc
xor
filds
out
xor
sbb
dec
gs
lock
pushf
lock
pop
sbb
das
push
je
arpl
incl
arpl
test
xor
mov
mulb
ds
mov
inc
inc
xor
add
test
je
aam
sub
in
jnp
cmp
jl
rolb
clc
rcrb
pop
pop
pop
mov
inc
adc
dec
repz
push
push
inc
enter
repz
pushf
mov
inc
jbe
push
pushf
nop
mov
rorb
push
and
mov
cmp
add
or
push
add
mov
adc
ja
mov
outsb
stc
or
mov
fidivs
pushf
mov
mov
push
pushf
insb
cmpsb
aas
andl
test
into
clc
jge,pt
cs
pusha
lock
sub
sbb
add
mov
in
or
mov
adc
inc
aas
pushf
in
push
jns
pop
inc
jge
movsb
int
pushf
outsb
fnstcw
push
push
testb
mulb
nop
das
pop
and
xchg
sub
sub
sub
lahf
out
xor
loopne
test
test
push
clc
jg
cmp
lock
mov
cmp
adc
out
fcos
sbb
addb
sub
sbb
mov
xchg
popl
xchg
pop
push
loope
xlat
mov
xor
hlt
lret
push
adc
daa
xor
hlt
ss
pusha
stos
sbb
iret
pop
mov
into
lock
push
fcoms
cmp
pop
je
sbb
or
pop
mov
mov
das
push
jmp
ljmp
push
pusha
rcrl
push
mov
push
dec
pop
jo
pop
adc
mov
sbb
adc
aaa
shrl
xchg
ret
jp
jo
jae
and
push
jno
inc
xchg
mov
and
push
adc
push
jno
into
pop
out
pop
loopne
add
imul
or
mov
roll
rcrl
popa
xor
enter
pop
push
push
mov
add
insb
je
and
add
jb
push
daa
lods
inc
sbb
pop
lcall
add
mov
push
gs
xchg
test
sbb
sub
and
bound
adc
xor
and
icebp
lds
sbb
subb
jbe
mov
xchg
and
bound
fs
sbb
inc
rorl
push
je
jo
mov
add
push
xchg
ror
xor
push
and
and
and
bound
inc
and
pop
es
mov
leave
sub
push
dec
cmp
lock
lods
pop
mov
pushf
inc
clc
dec
xor
sub
js
cmp
je
push
or
adc
adc
inc
adc
inc
sub
jge
push
jb
jae
sbb
loop
or
mov
or
ret
xchg
cltd
sub
push
push
xor
popa
mov
push
orl
test
cltd
mov
in
pusha
xor
add
push
insl
cmp
or
mov
inc
filds
mov
pop
test
mov
movb
and
mov
mov
jnp
std
jbe
shlb
jp
jmp
popf
and
sub
mov
or
pushf
and
add
add
int3
out
dec
loopne
js
out
inc
or
add
addb
fstpl
mov
xchg
ret
add
jno
stos
inc
push
bound
and
pop
or
add
and
pop
orl
push
sar
adcb
inc
pop
push
cmpsl
lea
mov
adc
add
add
lods
addb
and
outsl
sbb
jg
inc
rclb
cs
push
fdivl
rcll
add
mov
pop
inc
xor
push
push
adc
sub
inc
pop
scas
addb
leave
testb
adc
inc
adc
fs
inc
cld
testb
and
push
sbb
sub
push
add
add
fimull
add
fcmovnu
jne
fbstp
fistpl
mov
cld
mov
fcoml
test
ds
rcrl
iret
xlat
imul
inc
mov
pop
jmp
addl
push
jb
mov
fs
xchg
or
dec
adcb
pop
and
fmull
or
loop
pop
mov
clc
inc
lea
movl
xor
sbb
add
roll
mov
cmpb
jne
mov
dec
jne
clc
mov
mov
jne
or
inc
inc
add
andb
mov
je
arpl
xchg
pop
push
rcl
push
xchg
inc
dec
push
xor
hlt
in
mov
or
mov
pop
or
fs
lahf
jge
lret
movzbl
inc
add
sub
jae
push
les
jge
mov
inc
clc
cmpl
mov
pop
sub
cmp
mov
test
sub
mov
dec
or
inc
mov
xchg
mov
push
outsl
jbe
stos
out
inc
mov
sub
lds
rcll
lock
mov
sbb
mov
mov
or
jne
clc
popf
mov
imul
fdivp
dec
mov
insl
add
ret
rclb
jne
dec
cmpsb
push
mov
mov
out
add
cmpl
dec
insl
add
popw
mov
cmp
test
pop
push
push
push
test
scas
mov
pop
cs
inc
mov
inc
jo
push
xchg
sub
add
xlat
popa
mov
push
call
fcompl
call
cmpsl
adc
mov
xor
rolb
inc
sub
hlt
inc
cs
cmp
xchg
adc
int3
add
inc
add
aas
xchg
mov
push
call
mov
or
adc
sbb
cltd
and
xchg
inc
fsubrs
aaa
fldl
pop
xor
cmp
in
fs
mov
mov
xchg
fistpll
push
lret
or
das
fs
push
arpl
fbstp
push
cs
clts
testb
dec
jmp
enter
stos
out
scas
and
pop
adc
cmpsl
mov
mov
aam
aaa
cmpb
ljmp
push
jo
and
xor
daa
and
aas
jo
mov
sub
mov
jmp
lock
addl
bound
and
test
or
xchg
adc
push
and
pop
movzwl
es
or
and
adc
and
and
loop
xor
cmpb
adc
fs
nop
aad
sub
sbb
addl
lods
test
rolb
inc
dec
sub
push
cmp
lds
jmp
xor
ljmp
adc
stos
cmp
addl
cld
or
flds
lcall
pop
push
scas
addb
push
in
add
aad
int3
enter
mov
in
out
inc
add
inc
lods
or
xor
ficoms
fs
sbb
sub
cmp
cmp
cmp
push
leave
nop
fwait
loope
dec
xor
or
mov
nop
dec
mov
out
nop
mov
sbb
mov
mov
dec
je
int3
gs
cli
movsb
jle
sub
add
pop
inc
enter
xchg
popf
cmp
das
jmp
mov
inc
dec
jp
mov
scas
je
mov
les
rcrb
xchg
and
addr16
lock
aas
push
fildl
jne
pop
aas
dec
or
push
cmp
shufps
mov
push
cmp
xchg
shlb
mov
fadds
xchg
mov
mov
rcrb
xor
jl
fildll
xchg
push
or
add
in
cmp
sbb
out
jnp
mov
js
daa
lahf
inc
push
inc
xorl
cmp
ja
xchg
je
mov
xchg
push
pop
or
adc
jmp
mov
mov
pusha
lea
mov
and
cld
adc
mov
mov
rcrb
push
and
insl
add
test
testl
push
lret
leave
cwtl
imul
fistpl
lea
push
ret
icebp
notl
dec
cmpb
add
ja
out
stos
and
add
mov
fwait
insl
stc
mov
adc
aad
movl
ss
sub
rclb
outsl
bound
pop
fisubrs
add
loop
and
lock
out
cmp
das
add
and
loopne
sbb
push
decl
mov
pop
pop
cmp
imul
and
out
and
inc
lea
je
sbb
cmc
mov
sbb
mov
fdivl
xor
mov
or
sbb
inc
pop
jo
mov
sub
push
mov
mov
nop
ja
pop
xchg
and
icebp
adc
loopne
mov
add
pop
cmp
rcrl
inc
xchg
adc
push
clc
or
movzbl
xchg
sbbl
loopne
pop
mov
shrl
nop
pop
dec
js
inc
addl
add
je
pop
cld
mov
push
mov
testb
jne
mov
out
icebp
lock
jne
movb
pop
fwait
cmp
daa
add
xchg
popf
jecxz
jmp
js
add
dec
sbb
mov
add
inc
outsl
outsl
pop
aas
xchg
adc
sbb
mov
sub
mov
cmpb
mov
inc
jmp
movsl
sub
sbb
or
dec
add
add
and
roll
or
andl
outsl
xor
and
add
cmp
popl
pop
add
andb
add
push
mov
add
and
out
fisttpll
pusha
inc
and
je
mov
scas
and
adc
mov
setns
test
sbb
or
pop
adc
pop
popa
push
movsb
fdivs
pop
insl
adc
enter
loop
or
test
xcrypt-ofb
cmpsl
test
push
in
int3
ficompl
ds
in
cmp
push
cld
cmc
sub
scas
add
add
imulb
xor
dec
and
ret
jl
cmp
je
push
push
push
rcrb
decb
xchg
insl
fldcw
cmp
push
add
push
ljmp
or
mov
mov
add
xchg
cmp
rcrl
dec
mov
inc
mov
ret
xchg
incb
push
push
dec
dec
push
sbb
shl
faddl
cmpw
test
pusha
movsl
inc
jmp
not
fsub
in
xor
or
adc
dec
jmp
aas
pop
popf
ss
testb
adc
cli
adc
jne
sbb
add
mov
push
roll
dec
mov
jns
aas
rcrb
pusha
xchg
insl
pusha
and
add
in
pop
pop
rcll
inc
sub
repnz
lret
inc
int
sbb
xor
cmp
loopne
jmp
push
sbb
sbb
adc
imul
mov
orps
xchg
stos
das
jns
ret
xchg
cmp
add
inc
xlat
sub
push
jne
xor
mov
ss
add
and
ja
adc
hlt
mov
add
add
dec
aam
mov
inc
sarb
leave
ja
mov
add
cwtl
out
insl
inc
push
jbe
lcall
or
int
inc
or
push
bound
outsl
ja
sbb
push
adc
inc
mov
cmp
je
cmp
into
addr16
mov
subb
in
inc
insb
jg
leave
pop
fnstenv
pop
aaa
dec
insb
fs
sbb
cmp
or
sahf
jns
sti
pop
xchg
sbbl
and
mov
outsb
push
imul
outsl
sub
inc
outsb
je
jno
gs
pop
or
aaa
pop
sub
in
add
push
pop
cmp
cmp
jg
enter
inc
push
and
jo
pop
cmpsl
pop
push
cmp
jae
subb
sbb
dec
inc
push
lock
jne
push
popa
jo
or
popa
enter
dec
outsb
popa
in
movl
iret
dec
outsl
arpl
aas
xorb
jne
insb
mov
stc
jns
outsl
outsl
fs
jp
or
fwait
xchg
adc
arpl
iret
sub
pop
sub
pop
xchg
or
nop
push
iret
dec
gs
pop
inc
je
data16
cmp
aas
mov
pusha
pushf
adc
fs
insb
inc
fs
icebp
nop
pop
dec
or
cmp
push
adc
push
mov
xchg
pop
push
popa
ret
cwtl
mov
addr16
xchg
cltd
clc
andl
popa
jb
dec
les
jg
dec
pop
jae
enter
das
scas
inc
sbbl
andb
dec
js
stos
pop
pop
arpl
rcpps
push
inc
clc
cwtl
xor
inc
outsl
insb
inc
pop
jnp
ja
or
and
movsb
je
daa
push
mov
aas
insb
sub
mov
and
out
aam
xchg
in
lods
popa
add
pop
es
jns
mov
gs
das
xchg
ljmp
mov
popa
aaa
pushl
xor
inc
xchg
fcomps
mov
out
daa
pop
das
inc
adc
inc
imul
out
in
fs
xorl
mov
pushf
outsb
popa
sbbb
jb
aas
mov
pop
test
out
fiadds
aad
xor
xchg
push
jae
rcrl
cvtpi2ps
pop
or
pop
xor
ffreep
fwait
adc
popa
sbb
or
xchg
jne
inc
or
imul
sub
mov
push
daa
out
andl
popf
jg
sub
xor
pop
sbb
scas
stc
xchg
push
fisttps
popa
imul
and
mov
scas
bound
mov
movb
sbbb
add
sbb
das
add
xchg
sbbb
imul
mov
dec
aas
bound
xor
xchg
jo
mov
test
arpl
iret
lahf
movsb
loopne
imul
hlt
cmpsl
pusha
fs
inc
pop
ss
or
jecxz
aaa
push
jo
aaa
sub
sbb
out
xlat
push
and
pusha
inc
das
xchg
es
rorl
dec
mov
pusha
xor
or
sahf
push
jne
cmp
xchg
scas
sbb
dec
mov
jns
aaa
add
ret
cmpsl
or
sti
lea
imul
ja
push
cmp
xchg
ja
push
mov
pop
pop
ja
add
push
ds
lds
or
jp
cmpsl
pusha
adc
or
xchg
filds
jl
nop
cwtl
aas
sbb
adc
adc
pop
push
test
inc
sbbl
dec
push
xchg
daa
xor
lock
imul
cmp
out
inc
popa
push
mov
iret
push
dec
sub
push
out
scas
andl
xchg
inc
mov
jo
popl
adc
addr16
mov
push
jns
nop
sbb
push
imul
ret
arpl
daa
lahf
add
popa
addr16
add
or
iret
adc
adc
add
or
xlat
bound
aas
aas
and
dec
jb
fisttps
dec
insb
lcall
add
insb
sbbl
cmp
ffreep
pusha
cltd
adc
xor
pop
mov
rolb
insb
mov
xor
mov
popa
jnp
fildll
dec
outsl
shrl
test
lods
and
incl
je
and
pop
push
ljmp
ja
ss
jns
daa
push
and
mov
test
sub
inc
pop
jnp
push
or
rorl
and
aaa
fdivs
aad
and
push
insl
outsl
imul
insb
ret
and
sahf
inc
imul
sub
jns
xorps
mov
aaa
addr16
arpl
loope
xchg
dec
int3
clc
jae
outsl
jb
maskmovq
testl
rclb
into
das
xor
iret
nop
xor
std
xor
push
xchg
jecxz
nopl
je
cmpsl
inc
mov
jbe
repnz
cmpsb
cmp
pop
and
cs
nop
cmpsl
sbb
inc
mov
add
inc
aas
add
in
push
out
in
inc
mov
aas
fdivr
in
push
adc
mov
add
inc
lcall
adc
jmp
push
mov
insl
push
ficomps
push
pop
add
pop
sbb
pop
cli
das
add
mov
shrl
and
mov
push
xchg
mov
add
cmpps
cmp
in
adc
mov
push
arpl
adc
xor
mov
movlps
enter
push
pop
nop
or
pop
xchg
loope
fists
dec
outsb
mov
adc
sbb
insb
hlt
jae
orb
lahf
roll
icebp
shrb
add
pop
ja
push
pop
pusha
sbb
pop
push
or
and
xorb
arpl
xchg
jecxz
push
inc
xor
lods
pushf
fildll
push
inc
and
sbb
popa
insb
loope
pop
gs
add
dec
add
roll
insb
sbb
enter
push
sbb
arpl
stos
inc
test
and
nop
inc
pop
adc
push
xor
popf
mov
mov
and
and
and
nop
es
add
add
add
enter
popf
add
jl
loopne
push
pop
pop
and
movb
icebp
adc
sub
out
mov
mov
pop
mov
add
rorb
aam
inc
fiadds
mov
out
push
in
adc
flds
or
mov
push
call
sub
inc
xorl
out
jecxz
decl
lock
sbb
or
mull
push
mov
rorb
daa
sub
jmp
and
out
cmp
add
jl
jbe
mov
jo
or
cs
pop
mov
mov
cmp
add
add
idiv
cmp
push
decl
adc
pop
cmp
gs
push
jb
popf
inc
fcomps
dec
test
mov
mov
scas
dec
mov
movl
and
adc
pop
or
cli
mov
es
iret
add
into
int3
dec
cmpb
pusha
add
test
ret
pop
pop
pop
test
push
or
xlat
xchg
inc
dec
rcl
add
sbb
pop
pop
push
bound
add
aaa
loopne
xor
hlt
ret
add
and
ljmp
js
dec
clc
mov
push
adc
add
push
test
sub
mov
add
mov
clc
int
cmp
jg
cmp
jle
cld
aaa
je
idivb
test
jle
mov
iret
and
mov
adc
stc
fstpl
fwait
cmp
div
jge
mov
and
inc
cld
and
std
out
into
in
lea
mov
xor
jmp
mov
mov
sub
jle
xchg
pop
and
pusha
fs
gs
adc
pop
jge
xor
and
sub
push
sbb
pop
dec
sbb
push
sub
sbb
adcb
bound
scas
mov
fdivrs
cmp
bound
dec
add
xchg
jo
add
out
rolb
clc
loopne
arpl
adcb
cmpb
sub
xchg
mov
ljmp
call
mov
and
adc
jmp
adc
adc
mov
add
add
adc
add
adc
jno
dec
lods
dec
push
jns
sbb
sti
sub
mov
mov
movb
loope
jmp
dec
dec
les
aam
inc
lcall
adc
adc
xor
fs
jmp
mov
jne
adc
sbb
dec
outsl
cld
push
ret
xor
push
sti
mov
jnp
push
stos
xor
call
mov
push
push
jnp
inc
sbb
jne
mov
jno
jle
push
imul
push
movb
pop
je
loopne
and
mov
je
cmpb
icebp
inc
pop
andb
mov
push
faddl
aad
lar
adc
and
and
loopne
test
mov
lock
testb
add
pop
adc
adc
pop
fstpt
in
jo
mov
sub
les
xor
nop
cmpw
je
fadds
adcb
ror
xchg
xchg
xlat
mov
mov
adc
cmp
sbb
cmp
fdivl
jle
iret
lret
rcrb
dec
dec
dec
jae
jmp
cmovg
stos
out
fdivs
comiss
pop
popa
xor
add
pop
inc
mov
repnz
jle
sbb
in
sbb
cmp
push
dec
inc
mov
out
sbb
dec
sub
js
pop
or
popf
movl
inc
sbb
popa
pop
add
subl
xchg
insl
adc
test
adc
mov
sub
mov
sbb
jg
imul
adc
inc
dec
jl
adc
jl
mov
inc
jbe
jmp
out
sub
inc
and
mov
pop
or
push
fiadds
or
adc
push
dec
add
and
or
testb
popa
inc
mov
inc
pop
imul
mov
ss
add
sub
jae
push
mov
xor
arpl
fcom
mov
add
or
adcb
lds
daa
mov
shr
fnsave
xor
loopne
test
jbe
es
jne
pop
push
sub
loope
and
push
push
cmp
cld
clc
xor
aas
orb
mov
out
sub
jecxz
mov
xchg
cwtl
inc
pop
es
sub
cwtl
xor
rorb
add
mov
sbb
cmpb
sub
imul
into
mov
int
xlat
jg
push
push
data16
mov
push
inc
cmpb
adc
je
xchg
cmp
fs
or
jo
and
cmp
push
js
cld
mov
pop
js
mov
add
and
and
js
xor
xor
out
and
je
loope
pop
fnstcw
cmp
je
mov
push
pop
and
lods
jge
cmp
push
mov
pop
ss
adc
push
and
cmp
pop
test
sub
and
mov
pop
ljmp
jg
ucomiss
pop
cwtl
lock
and
icebp
fdivl
cld
push
scas
dec
sbb
loopne
pop
call
nop
inc
cmp
hlt
into
mov
push
shrb
test
xor
and
lahf
out
fdivrp
je
mov
movsb
je
mov
dec
lock
pop
pop
sub
incb
pop
dec
jae
and
test
mov
dec
cli
fistpl
je
xor
inc
jb
sarb
addl
fmuls
insb
jo
mov
pop
pop
cmp
inc
pop
pop
rcl
sbb
inc
mov
jo
push
fnstsw
sbb
nop
inc
mov
fadd
lods
inc
xor
mov
mov
xor
dec
and
inc
or
je
mov
inc
repnz
cmp
push
or
mov
nop
mov
sbb
nop
mov
addr16
adc
mov
inc
cmpb
dec
xchg
xchg
xor
loope
inc
sarb
pusha
add
inc
push
xor
mov
cmp
lods
lods
sbb
cmp
mov
xchg
push
cmp
push
mov
idivb
mov
in
or
stos
ja
fisttpl
arpl
loope
or
cmp
das
stos
pusha
popf
les
and
push
or
or
in
dec
xchg
mov
add
cwtl
das
movb
mov
aaa
ficompl
out
or
add
shl
mov
push
into
cmp
or
testl
testb
xchg
pop
push
lock
mov
inc
add
or
fs
call
jge
and
fistpl
or
mov
call
pop
and
sbb
inc
fnclex
fldcw
repz
cmp
repz
ss
xchg
add
addr16
into
lds
add
loop
lcall
sub
ja
cmp
imul
push
push
aas
int
pop
lcall
pop
pop
push
add
pop
sbb
aam
dec
inc
mov
inc
inc
cmp
mov
ds
pop
push
push
inc
jg
lock
cltd
idivl
or
xor
cmp
cltd
fmuls
pop
inc
fisttpl
loop
fdivl
inc
pop
sub
push
inc
mov
inc
lahf
sub
pop
sub
nop
insb
es
fs
inc
nop
cmp
push
hlt
push
xor
inc
pop
or
and
push
mov
repnz
push
cmp
inc
dec
inc
movsb
xchg
push
xchg
jle
add
dec
inc
add
mov
push
inc
lahf
dec
scas
add
jbe
pop
nop
ss
inc
pop
xor
insl
in
pushw
xor
push
inc
insb
inc
push
shr
mov
push
in
inc
pop
sbb
inc
fwait
insl
cmp
pushf
xchg
push
jo
push
and
lock
or
mov
cmpsb
scas
call
clts
fwait
int
xchg
mov
es
roll
mov
push
mov
lahf
pop
sub
enter
test
push
adc
daa
add
jno
negb
push
negl
mov
pusha
movl
pop
or
jp
xor
inc
push
inc
les
push
outsl
loope
es
push
cmp
sub
mov
andb
mov
sahf
xchg
add
daa
pop
mov
movzbl
mull
ds
jne
cli
iret
fsubrs
lock
roll
call
ret
repz
cmp
add
loopne
mov
jbe
bound
aas
lock
test
les
and
sbb
jne
jecxz
clc
inc
imul
mov
xor
dec
dec
adc
cmpsl
pusha
push
xchg
cmp
test
push
jmp
mov
loopne
loope
adc
dec
add
divl
cwtl
jno
add
adc
ljmp
sub
andl
pop
jnp
pusha
dec
pop
cmp
aam
xchg
clc
popf
arpl
cltd
out
mov
mov
lret
inc
rorb
xor
clc
out
xchg
sbb
aas
mov
mov
add
in
call
lock
clc
pop
mov
adc
ss
pop
mov
dec
lock
pop
pop
and
mov
mov
mulb
test
jl
inc
xor
adc
enter
sbb
sbb
xor
mov
lea
in
or
and
shlb
jg
aas
add
dec
jne
pushf
nop
fdivrl
in
mov
js
adc
loopne
loope
sbb
ret
gs
xchg
movb
ret
loopne
mov
pushf
mov
movsb
xor
repnz
push
mov
add
mov
int
cmpsb
cs
pop
mov
out
adc
clc
int3
sarb
aam
xlat
mov
fsub
lcall
out
test
cwtl
mov
inc
mov
xor
adc
sahf
sbb
cmp
lock
xor
sbb
arpl
mov
filds
loope
es
and
jae
xadd
or
dec
xor
gs
dec
cmpsl
dec
dec
mov
movsb
icebp
pop
dec
lret
or
jp
movsb
xchg
mov
gs
fstpt
pop
out
pop
dec
outsb
outsl
ret
push
mov
pop
push
outsl
pop
add
and
andl
mov
xchg
mov
pop
xchg
add
pushf
inc
stc
mov
or
pusha
cs
cmp
push
inc
cwtl
lods
shrl
xor
hlt
xor
add
lds
or
xchg
je
add
loop
fmuls
movaps
pusha
dec
sbb
adc
and
xorb
push
add
mov
or
or
add
loope
out
js
add
cwtl
or
add
push
xchg
shr
fcomps
lock
pop
in
cmp
ja
cmp
xor
rorl
fidivrl
jg
push
add
subl
and
bt
jae
addl
jne
cli
mov
dec
movsl
dec
add
rorb
dec
inc
cmp
sub
das
inc
sub
mov
pop
loope
cmpsl
sub
out
and
test
mov
mov
mov
cmp
fbstp
jbe
add
cmp
jne
push
inc
pop
pop
push
dec
aam
pop
call
or
xchg
add
push
scas
nop
pusha
add
xchg
lods
add
add
and
fcompl
xor
movsb
add
fiaddl
mov
sbbb
test
or
test
arpl
or
es
adc
jge
and
sub
pusha
sbb
mov
cli
jne
push
add
ret
cmp
test
push
mov
insl
rolb
fdivrs
fidivrs
cmp
das
aam
add
rclb
sub
shll
aam
fsubl
in
shrb
rorl
rcl
cli
fcom
inc
xor
mov
inc
dec
icebp
mov
in
cmp
push
cld
das
lea
jge
add
and
xlat
add
rolb
and
cmp
cs
jmp
mov
popa
es
sbb
sbb
mov
call
inc
loopne
push
mov
call
sbb
adc
insb
push
jae
push
aaa
data16
cmp
sub
or
xchg
add
push
shl
ljmp
in
or
xchg
mov
push
mov
sub
out
or
sarl
loope
push
insb
imul
insl
lods
orb
cld
xchg
vpmullw
pop
imul
jne
sbb
hlt
mov
xor
adc
rcll
les
inc
dec
inc
inc
pop
inc
xor
xor
aaa
js
inc
pop
mov
call
sti
outsl
dec
or
inc
ret
add
adc
add
jmp
and
cmp
xchg
ret
repz
sbb
into
mov
cmp
cmc
shl
jae
aam
lar
adc
jge
dec
inc
mov
push
cmpl
fisttps
mov
mov
bsf
pop
or
sub
add
mov
cmp
popa
mov
ret
and
mov
add
test
fcoms
inc
aam
lods
dec
adc
add
lock
or
push
enter
add
add
mov
dec
mov
jo
adc
dec
adc
lock
lahf
cltd
pop
cmpsb
ss
and
shl
cmp
lea
mov
ret
and
popa
add
xor
dec
add
xorl
aas
add
mov
testb
add
add
or
add
cli
xor
leave
mov
data16
cwtl
sub
push
inc
clc
mov
push
dec
jl
lahf
cltd
jecxz
cmpsb
cmp
cmp
in
xor
das
icebp
or
push
test
mov
addl
cld
add
xor
cmp
xchg
fs
ds
ret
lea
push
jge,pt
rclb
test
pusha
cld
call
pavgw
add
adc
jmp
addr16
xor
out
mov
jge
jge
clc
push
pop
shll
cmpb
dec
pusha
mov
jge
pop
xor
push
push
xchg
or
adc
fs
dec
push
ret
stc
dec
jmp
aas
push
mov
pop
adc
lea
push
dec
cmp
outsl
fdivs
jo
push
push
andps
imul
mov
fdivs
add
icebp
inc
iret
mov
sub
xchg
insb
pop
punpckldq
sub
add
scas
lock
lret
inc
lock
or
cmp
xchg
mov
jmp
xchg
mov
cld
dec
daa
add
mov
add
jbe
mov
ds
lea
dec
ja
movsb
xor
rcrb
jle
adc
mov
sti
loop
bound
in
add
lock
sbb
std
adc
mov
cmp
cmpl
dec
add
call
push
aam
or
dec
das
push
lds
lret
add
sub
dec
push
cmc
xchg
into
adc
mov
dec
push
mov
sahf
or
and
fmuls
and
jl
sarl
sbbb
or
jecxz
nop
lods
pusha
sbbb
andl
ds
js
cmp
push
add
mov
sbb
je
push
pop
je
loopne
push
push
hlt
cmc
das
decl
test
fidivrs
pop
xor
add
lea
push
inc
or
mov
inc
sub
or
call
mov
adc
inc
jbe
fmull
mov
andl
dec
ljmp
push
aad
mov
sub
loope
insb
scas
sub
push
add
shlb
inc
subl
stos
enter
adc
inc
out
je
clc
lea
aam
push
lock
jmp
aam
mov
mov
mov
sahf
in
shl
push
pop
pushf
popf
hlt
adc
popf
stos
and
popf
mov
inc
pop
mov
cld
mov
mov
mov
inc
cld
mov
cmp
or
fcmove
lahf
adc
add
or
push
scas
xchg
test
iret
or
imull
mov
pop
insb
or
test
testb
mov
xor
shll
mov
sub
jne
dec
add
mov
ljmp
xor
pop
pop
inc
inc
push
fisttps
mov
mov
xor
mov
loope
je
sbb
bound
test
loope
sbb
faddl
test
sbb
mov
mov
xchg
mov
add
and
outsb
jle
push
push
jg
dec
outsl
mov
callw
sbb
pop
pop
ret
inc
lret
lahf
fmuls
xor
sbb
cmp
sub
mov
scas
xchg
rorb
sbb
push
pop
mov
inc
pop
fcomps
sub
sti
adc
jnp
mov
je
xor
in
or
and
or
sub
imul
dec
in
pop
push
adc
pop
int3
insl
add
cmp
xchg
inc
add
jge
or
add
loopne
jecxz
sbb
je
cwtl
mov
mulb
jbe
ret
push
lea
mov
ds
and
test
dec
inc
clc
pop
pop
xor
hlt
cli
mov
push
mov
mov
enter
adc
sbb
sub
enter
or
data16
push
fadds
cmc
jb
cmp
arpl
or
test
mov
pop
pop
shrb
push
filds
mov
push
notb
scas
push
xchg
or
js
in
dec
jne
imul
or
jecxz
sbb
inc
mov
add
in
loop
push
mov
addl
mov
push
ret
push
push
in
fdivl
cmp
sbb
ret
mov
jmp
adc
jae
add
mov
adc
push
xor
dec
adc
mov
xor
lcall
jg
mov
add
push
test
cmp
or
push
add
ficompl
movb
inc
pop
js
sub
mov
cmp
lock
sub
and
outsl
test
cwtl
cmp
cmp
fwait
or
mov
add
addr16
and
fwait
add
mov
pop
inc
lods
push
gs
inc
shlb
hlt
push
adc
pop
xchg
jb
cmp
push
push
xor
fstl
loopne
dec
insl
add
test
jnp
das
and
mov
repnz
movsb
inc
sbb
adc
jl
mov
in
adc
mov
cmp
or
jp
sub
in
int
xchg
push
mov
mov
push
pop
xor
mov
or
incl
jo
sub
cmpl
adc
sahf
icebp
sbbl
cmpsb
mov
or
sbb
pop
or
cmp
fwait
mov
inc
call
call
sub
test
pusha
lds
aam
dec
insb
mull
xchg
or
or
sub
outsl
enter
mov
add
adc
pop
pop
mov
add
es
fisubrs
rorb
ds
inc
addb
pop
mov
jns
mov
push
testl
jl
cli
or
loopne
xorl
xchg
sbb
mov
iret
cmovs
pop
jl
adc
push
push
xchg
mov
dec
xchg
pmulhuw
mov
clc
add
inc
pusha
add
js
lock
adc
clc
sbb
or
dec
cmp
call
add
outsl
pop
mov
mov
addr16
in
adc
dec
sbb
test
push
fadds
test
push
addl
pushf
lret
imul
xor
push
arpl
test
jne
mov
mov
insb
push
sbb
add
fnstsw
add
sbb
inc
clc
sbb
ja
hlt
jne
push
fldt
cmp
push
cmp
sbb
inc
fmuls
in
pop
sbb
inc
xchg
push
push
cmp
insb
sbb
jl
and
and
pop
xor
dec
outsb
push
add
xorb
push
sub
jnp
lcall
inc
dec
bound
insb
in
pop
push
mov
outsb
das
push
inc
cwtl
cmp
popa
jb
pop
fcomp
lcall
xor
das
add
stos
pop
lretw
or
test
mov
daa
mov
sub
jg
fistpll
dec
repnz
xchg
mov
rclb
test
les
repz
sbb
adc
aaa
pop
mov
ds
ds
sbb
push
das
add
sbb
or
inc
jb
jb
and
push
sti
scas
add
push
and
imul
or
push
insl
iret
jo
cmp
or
mov
lock
scas
mov
fs
or
jg
push
xchg
inc
aam
movsb
or
push
out
lret
rorb
pop
push
rcrl
add
sti
jne
arpl
push
dec
je
insl
add
push
bound
insb
fs
ret
pop
loopne
outsb
add
adc
mov
adc
cltd
cmp
mov
pop
inc
loopne
pop
add
jbe
jae
movups
inc
mov
or
insb
gs
or
nop
push
sub
sub
push
inc
fs
aam
push
jb
mov
add
mov
pmuludq
gs
popa
pop
iret
xchg
pop
mov
or
sbb
out
incb
adc
push
imul
outsb
dec
add
dec
gs
fadds
xchg
fstpt
sub
les
adc
adc
add
pusha
out
ja
in
or
das
or
add
xor
or
jp
or
push
jne
adc
or
pop
or
into
xchg
xchg
enter
cmp
inc
cmpsl
and
inc
pop
jns
sbb
and
mov
cmpb
push
call
jl
sbb
push
mov
push
in
and
push
pushf
mov
add
push
lock
push
js
repz
scas
cmp
pop
jl
sahf
str
fwait
or
mov
cmp
cmpb
cs
lods
push
sbb
pop
inc
sub
loope
dec
or
push
test
inc
lock
andl
enter
out
call
push
push
insb
pop
outsb
pop
push
adc
or
pop
scas
add
or
cmp
mov
pop
aas
std
stc
jmp
or
clc
push
push
jmp
stc
fidivrs
push
add
clc
pop
cmp
movsb
xor
in
cmpsb
clc
sub
sbb
mov
mov
or
add
in
xor
dec
or
xlat
mov
pop
cmp
imul
add
inc
enter
outsb
imul
dec
cmp
insb
call
add
sub
mov
bnd
push
sbb
pop
and
sub
add
adc
jo
dec
cwtl
cld
pop
add
push
dec
add
xchg
or
push
lock
push
pop
or
mov
addb
add
inc
test
adc
arpl
loopne
push
rorb
jne
mov
inc
fwait
cmp
orb
push
enter
dec
sahf
cmpsl
or
cmp
sub
inc
fs
mov
or
dec
pop
out
or
or
sbb
jo
gs
je
andb
xor
add
push
gs
and
dec
dec
orb
jbe
mov
js
inc
in
add
cmp
xchg
or
sbb
js
sbb
fistpll
popa
imul
add
lods
sbb
mov
xor
xchg
loopne
sub
inc
int3
outsb
and
scas
out
adc
mov
lea
call
in
and
jne
mov
orl
ja
adc
cmp
adc
pop
dec
out
rorb
rclb
outsb
and
pushf
adc
add
mov
cmpsb
cmp
scas
pop
test
les
negl
push
cmp
ret
rcrl
adc
cmp
es
inc
loopne
pop
cmp
fisubrs
fistpll
js
jae
pop
inc
xor
ds
out
rorb
pop
das
add
das
rcrl
mov
xor
inc
push
shlb
ljmp
mov
push
pop
sbb
out
add
add
add
addl
lahf
add
clc
andb
xlat
or
cmp
sub
sbb
cld
ds
xchg
cmpb
jno
or
pusha
jle
jge
test
fwait
mov
mov
rolb
lahf
and
cmp
xor
or
inc
hlt
sbb
jno
test
insb
nop
shrl
rolb
mov
orb
add
jb
shlb
mov
sarb
fstpt
inc
rolb
cltd
add
js
js
movsb
stos
pusha
push
mov
inc
ja
and
or
add
inc
jl
sub
pop
add
inc
xor
pusha
push
inc
and
sbb
cmp
fmuls
loope
or
push
cmp
jo
and
inc
sti
dec
gs
or
or
hlt
out
pop
push
pop
jns
jg
push
push
jb
mov
jns
mov
jmp
xchg
xor
je
imul
int
sbb
pushl
xor
and
mov
rcl
insl
call
or
adc
jo
fnstcw
rcrl
adc
sub
iret
mov
sbb
int
inc
sbb
or
iret
add
shll
inc
push
adc
test
es
pop
mov
sbb
or
daa
lea
and
adc
add
pop
lea
sub
aaa
pop
inc
mov
push
and
and
add
dec
xlat
dec
mov
leave
adc
je
lahf
and
mov
sbb
cwtl
add
or
adc
insl
inc
sub
inc
push
or
inc
pop
pop
dec
imul
dec
scas
xchg
mov
xchg
adcb
pop
dec
xchg
rol
jmp
mov
or
xorb
sbb
adc
rorb
pop
mov
loopne
inc
ljmp
popa
ds
arpl
nop
add
xlat
push
icebp
mov
or
pop
mov
xlat
shlb
jmp
ljmp
adc
mov
das
xor
xchg
nop
loopne
scas
pushl
xor
xor
ss
cmp
xor
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
cld
or
lock
pop
pop
pop
mul
clc
xor
pop
add
mov
mov
in
xlat
xor
xchg
andb
mov
movsl
pusha
faddl
pop
inc
and
or
and
mov
sub
xor
lret
lret
push
push
enter
xor
es
push
xchg
mov
mov
loope
fidivrl
jne
xchg
mov
inc
std
scas
data16
adc
loope
mov
sar
insb
jno
fidivrl
or
ret
int3
mov
jecxz
adcb
mov
je
push
push
jo
fistpl
xor
push
sbb
mov
pop
cmp
push
fistps
shlb
and
and
dec
lret
or
sub
mov
or
je
push
je
fisttpl
mov
mov
inc
push
arpl
dec
jae
jge
shrl
cs
mov
adc
nop
aas
sarb
sbb
cli
inc
inc
pop
rcrl
test
test
hlt
rorl
dec
cmp
jg
push
xchg
test
shlb
rcll
jg
in
and
sbb
js
or
in
jmp
aad
ljmp
jbe
jmp
and
cmp
pusha
dec
sub
call
mov
pop
orb
notb
scas
mov
and
ds
or
clc
mov
sbb
sbb
or
rcrb
jmp
je
sbb
loopne
adc
and
hlt
addb
add
sahf
sbb
jmp
xchg
xor
into
lock
fwait
mov
and
jg
jle
xchg
xlat
hlt
add
movb
or
push
cli
test
cld
addb
adc
add
inc
aaa
sbb
adc
and
xchg
and
or
les
insb
pop
sahf
add
sub
push
adc
cli
and
push
mov
es
pop
icebp
mov
loope
jl
movl
test
inc
movl
fidivs
loopne
orl
cld
mov
sbb
add
int
stos
mov
lret
les
mov
xor
out
and
cmp
jo
jg
push
lock
pmulhuw
xorb
jne
mov
sbb
push
lret
loope
and
mov
add
cmp
mov
cmp
or
das
clc
cmpsb
clc
sarb
jmp
inc
jo
push
add
andl
cmp
push
cs
clc
shlb
pop
xchg
push
mov
mov
mov
repnz
fisttpll
add
loop
ret
pop
jno
xor
not
mov
je
pop
inc
testl
addl
mov
cli
sub
cs
aas
test
inc
pushl
insl
mov
pushl
incl
mov
mov
incl
push
data16
arpl
rolb
divl
cmp
enter
cmc
inc
mov
xor
xor
pop
sub
push
jb
xchg
cmpb
xchg
lret
add
lock
enter
ljmp
jmp
sbb
ss
cmp
jle
mov
cmp
add
jne
jle
in
int
sbb
mov
jmp
cmp
adc
pushf
les
imull
mov
ljmp
in
mov
popa
dec
add
neg
adc
rcrl
xchg
pushl
jmp
in
filds
cmp
adc
add
outsl
jne
jbe
adc
add
inc
add
mov
adc
cld
add
aaa
sbbb
add
add
ss
adc
std
mov
xchg
xchg
test
add
add
idiv
jnp
lock
jecxz
dec
gs
pop
lock
insb
inc
xor
add
and
arpl
jnp
imul
dec
xchg
arpl
push
repnz
leave
cmp
xchg
cld
or
je
cmp
nop
mov
test
push
pop
pop
bound
inc
pop
or
in
in
test
jecxz
js
flds
jp
aas
cmp
filds
dec
pop
insl
cwtl
andb
inc
and
inc
push
inc
lods
shlb
test
loopne
data16
xadd
movsb
xchg
mov
adc
sbbb
mov
jmp
adc
adc
push
js
jmp
sbb
add
aaa
ret
mov
andb
cmp
pop
sbb
loopne
sbb
mov
mov
psrad
jl
aas
jl
and
dec
sub
mov
and
xor
push
mov
aaa
divl
jle
pop
or
inc
cmp
pop
fbld
sub
jg
jbe
movd
cld
xchg
add
or
fdivrs
inc
mov
in
push
gs
lock
or
testb
push
or
in
pop
call
push
pop
adc
or
aas
mov
ds
inc
cmp
cmp
cmp
mov
test
test
movsl
data16
inc
inc
pop
rolb
push
sbbb
daa
sub
dec
stos
dec
mov
or
inc
or
fs
inc
sbb
mov
jle
mov
cmp
mov
add
sbb
inc
inc
test
push
loopne
clc
je
jmp
mov
or
loope
testl
dec
jg
cmpl
cmp
imul
int
adc
inc
inc
std
test
or
cmp
pop
pusha
inc
push
mov
shlb
leave
adc
lods
jo
dec
scas
mov
adc
into
inc
loopne
mov
or
shl
mov
cld
mov
sub
jg
push
test
adc
mov
push
push
cld
sbb
add
add
jmp
mov
mov
pop
mov
fs
or
mov
add
ljmp
rolb
clc
mov
pusha
bound
sbb
mov
es
das
mov
sbb
add
andb
mov
inc
shlb
loope
movl
or
cmp
inc
sub
push
or
nop
jne
cmpl
push
or
sub
dec
or
sbb
add
sub
sbb
xor
or
jo
das
je
repnz
out
into
int3
pop
das
shlb
ss
iret
popf
cmpsb
je
ret
adc
dec
lock
xchg
pop
cmpsl
xor
or
cwtl
mov
mov
mov
dec
push
push
mov
or
push
testl
add
pop
jle
mov
cmp
xor
out
xor
int3
jb
rorb
or
fcoml
xor
inc
or
add
inc
push
sbb
nop
into
sbb
loopne
test
test
inc
dec
addl
cmp
sbbl
add
fadds
aaa
and
popa
lcall
and
or
push
in
in
inc
inc
bound
imul
aaa
cmp
loope
loop
and
push
and
push
ds
sub
fbstp
js
insl
cld
mov
les
les
jb
fs
out
and
pop
jg
mov
cmp
aas
std
inc
shl
adc
aaa
push
nop
arpl
test
ljmp
imul
in
lret
sbb
sbb
mov
cmpsl
nop
push
push
les
iret
fadd
xchg
in
mov
stos
cmpsb
sub
clc
mov
mov
cmp
pop
rcll
push
shlb
sub
add
or
lds
mov
inc
sbb
jne
ret
shlb
inc
sti
or
dec
insb
mov
mov
sbb
mov
shrl
mov
sub
add
ss
sbb
mov
push
mov
mov
sahf
dec
cmp
aam
cmpb
or
mov
pop
jnp
push
xor
movsl
cs
call
cld
out
popa
xchg
adc
je
movb
nop
push
icebp
int
loopne
outsb
insb
out
sahf
and
dec
jp
xlat
push
cmp
test
into
test
lcall
mov
hlt
mov
dec
push
or
shrb
paddsb
sub
dec
data16
push
dec
adc
xor
enter
lea
sbbb
inc
sbb
add
sbb
mov
sub
fwait
addr16
push
xchg
sub
and
imul
fidivrl
xor
cmp
jge
mov
das
mov
pop
aas
jae
mov
mulb
inc
add
cmp
xor
dec
scas
mov
fwait
mov
jne
pop
ret
push
mov
mov
or
pop
sbb
clc
insb
jp
adc
adc
or
or
cmpl
lock
vpcmpgtd
add
or
sgdtl
lods
hlt
clc
leave
inc
push
push
cmp
mov
das
repnz
mov
call
xchg
rcrb
js
sbb
xchg
in
cld
add
jl
xchg
mov
add
xor
sub
inc
sub
mov
jmp
test
xchg
add
jmp
mov
add
add
and
add
lret
add
push
and
adc
add
add
lcall
cld
mov
mov
add
jae
xor
mov
es
adc
adcl
call
push
push
nop
shlb
cmc
std
shlb
ret
inc
and
push
mov
lods
mov
adc
and
inc
cmp
clc
pop
mov
lret
or
push
lock
ds
adc
or
subl
sbb
add
sbb
subb
mov
or
or
xchg
mov
lret
push
cmp
jne
iret
push
fwait
and
xchg
repz
rolb
mov
mov
jno
or
clc
pop
out
lock
lea
out
cmpl
mov
jo
xchg
or
rolb
je
push
adcl
xchg
pop
iret
xor
sbb
pop
xchg
andl
xor
inc
mov
in
jo
mov
ret
or
sbb
loop
push
adc
pusha
mov
mov
jae
out
cmp
lods
mov
inc
cmp
orl
sbb
inc
mov
push
sbb
inc
test
push
hlt
inc
jle
mov
dec
pop
js
add
pop
sbb
xorl
sbb
icebp
pop
mov
push
fs
negl
add
mov
sbb
dec
shrb
jecxz
xor
dec
mov
es
sbb
inc
das
cwtl
scas
xlat
arpl
cld
add
ss
fimull
push
cmp
scas
or
js
mov
add
adc
sub
jp
iret
in
inc
mov
and
rorb
sbb
jmp
dec
push
pusha
pusha
xchg
sbb
add
push
subb
call
test
in
testl
sbb
rol
movsl
aas
arpl
xorl
or
or
xchg
pop
sbb
add
mov
mov
lea
call
sub
adc
shrl
push
arpl
sbb
ljmp
xor
loopne
outsl
adc
xchg
add
add
ljmp
mov
add
add
sbb
mov
jp
jmp
clc
inc
or
inc
call
out
and
push
jle
push
lea
lea
adc
pop
xchg
jle
xchg
movsl
pop
mov
in
cmp
jle
dec
icebp
xchg
outsb
or
inc
imul
xor
jle
repnz
push
inc
call
push
sti
out
sbb
inc
fcoms
inc
nop
and
loopne
mov
insb
sbb
out
pop
jo
push
mov
loop
mov
lods
mov
incb
sbb
clc
or
adc
leave
xchg
and
lock
inc
cs
fmuls
jmp
and
sub
lahf
rolb
inc
fsubrl
sub
mov
push
mov
adc
inc
iret
jne
ret
or
call
pop
pusha
xchg
mov
das
inc
into
test
add
mov
lea
mov
pop
cmp
push
inc
jle
xchg
stos
sbb
aam
movl
push
insl
jg
xor
xor
dec
xchg
sbb
inc
fsubrp
sbb
into
rclb
jne
je
push
ret
in
pop
jne
mov
out
jnp
xorb
jle
icebp
test
outsl
xchg
push
fmull
mov
adc
jmp
push
add
push
inc
mov
push
mov
mov
stos
push
pop
dec
loopne
fsubrs
enter
xor
ss
stc
sar
add
cmp
aad
pusha
adc
sub
stos
xchg
pop
inc
loop
or
xchg
fildl
xchg
cmp
push
int
adc
mov
mov
sbb
add
inc
loopne
ret
ljmp
sub
bound
nop
imul
sub
in
sub
push
inc
fisttps
push
cwtl
sub
push
aaa
mov
dec
xchg
test
dec
fisubl
je
and
pushf
push
je
test
pop
inc
aas
push
dec
dec
lea
inc
xchg
int3
sub
pop
js
xor
jne
adc
push
mov
sbb
xorl
or
jp
mov
inc
aad
aad
pop
and
les
daa
xchg
sbb
or
movsb
jge
xor
push
push
adc
mov
sub
mov
jge
push
loopne
lret
mov
lea
mov
fidivrs
mov
lret
pop
mov
dec
dec
pop
add
pop
push
push
push
popf
mov
std
stos
fcmove
movzwl
enter
fildll
dec
cmp
testb
je
mov
dec
mov
in
popa
mov
lea
pop
push
push
aas
push
jle
xor
mov
stos
inc
enter
fs
ljmp
xchg
fs
add
inc
xchg
sysret
push
xchg
adc
adc
aas
js
les
sub
adc
xor
or
sub
push
pop
mov
lcall
repz
dec
sti
in
and
sbb
add
ficoml
xor
inc
filds
push
add
out
or
sbb
out
fsubs
xchg
lock
movsb
in
mov
add
push
fcomps
pop
jg
adc
fsubl
mov
add
std
xchg
jmp
call
rolb
cmp
add
dec
pop
sbb
dec
or
mov
push
mov
pop
and
pop
cmp
into
inc
jle
rolb
into
inc
jmp
mov
f2xm1
test
sbb
mov
test
daa
jns
mov
pusha
pop
dec
aas
adc
sbb
mov
sub
inc
mov
int
jg
inc
dec
cmp
mov
lock
hlt
or
cmp
inc
adc
pop
mov
sbb
call
shl
inc
popa
das
sub
mov
push
jne
dec
cld
aas
andl
divb
mov
cld
ss
mov
cltd
pop
inc
cmp
nop
std
adc
cmp
jl
aas
mov
adc
lock
loopne
cmp
add
out
ret
xchg
add
pushf
enter
addr16
and
and
add
cld
or
sti
add
fmuls
sbb
aas
fsubrl
xor
add
in
push
push
add
dec
sbb
dec
call
into
jle
sub
scas
or
and
arpl
out
lret
mov
mov
sbb
popa
or
cmp
mov
xlat
aaa
mov
dec
jno
arpl
pop
insb
cmp
inc
scas
adc
imul
jle,pn
lea
insl
pop
pusha
loopne
testl
dec
inc
xchg
or
cmp
mov
adc
pop
imul
gs
jge
fcoml
sbb
jo
inc
adc
adc
pop
aas
xchg
xor
or
movsl
push
decb
pop
pop
mov
lods
cmp
out
lods
dec
sub
dec
jg
clc
jg
inc
addl
or
add
jl
mov
aaa
pop
or
adc
aaa
or
subb
ret
arpl
xor
push
cs
enter
loopne
fsubrs
inc
push
cmp
rcl
inc
sbb
pop
adc
test
jno
jnp
inc
lock
add
add
in
jg
xchg
sahf
or
or
cmp
push
fdivrs
ret
and
pusha
mov
inc
cmp
shrb
sbb
inc
out
adc
ret
adc
in
xchg
and
pusha
mov
iret
push
adc
les
mov
and
dec
mov
xor
mov
dec
fbstp
decl
dec
repnz
jnp
stos
lea
xor
push
push
cwtl
scas
jmp
ret
xor
ret
push
add
aas
or
or
or
shll
xor
and
ds
or
test
mov
pusha
hlt
pop
call
mov
loopne
arpl
cli
or
nop
lock
addr16
sbb
mov
push
aad
sub
les
sbb
add
jnp
pop
sub
aad
push
add
and
shll
bound
or
jbe
pop
fists
loopne
cmpsl
add
and
dec
add
movsb
filds
enter
jne
push
adc
ja
ret
dec
or
ret
xchg
cmp
pop
lock
push
push
mov
test
call
sub
mulb
mov
lods
adc
or
leave
sub
xchg
adc
adc
push
jns
xchg
les
gs
je
xchg
call
arpl
negl
mov
lds
pop
pop
dec
mov
mov
pop
add
pop
add
fcoms
sarl
xor
daa
call
sbb
test
jl
call
sbb
das
cmp
push
rclb
out
sbb
daa
push
sahf
push
icebp
pop
movsb
and
and
inc
add
push
and
out
push
adc
in
adc
mov
jne
adc
push
push
pop
clc
dec
mov
pop
jl
xor
push
popa
rolb
mov
sbb
inc
and
rcll
or
pop
and
mov
pop
lcall
push
nop
mov
inc
dec
fsubrl
adc
das
or
adc
mov
divl
sbb
idivl
scas
and
orb
sbb
inc
and
sub
popa
movsl
les
pop
sbb
xor
dec
inc
xor
je
call
xor
ljmp
cmp
inc
sbb
fsubrs
or
out
decl
jmp
mov
add
jno
mov
and
das
icebp
mov
inc
or
cs
cmpsl
add
adc
adc
jp
clc
test
inc
lock
add
push
mov
mov
pop
or
push
bound
insl
push
jo
pop
ret
sbb
cmc
mov
pop
mov
add
std
filds
mov
testb
setne
mov
or
fs
jg
adc
fisubs
xor
jo
cmpl
jg
xor
jle
mov
add
pop
add
enter
sub
int
and
dec
mov
push
and
pop
in
iret
fildl
inc
push
mov
mov
adc
stos
fdivrs
insl
inc
shl
push
mov
xor
pop
pop
jle
clc
and
aaa
in
sbb
rclb
mov
loope
divb
je
movsb
test
mov
inc
dec
in
mov
sbbl
xor
mov
cwtd
test
sbb
outsb
je
push
cmp
sbb
outsb
mov
jne
mov
and
pop
jmp
aas
adc
jo
inc
mov
call
fcoms
jmp
mov
xor
or
cmpl
and
dec
jb
pop
jl
or
push
loopne
xor
mov
pop
dec
sbb
lea
pop
fists
inc
cld
mov
testb
or
dec
in
mov
cmp
fcoml
rcrl
add
add
repnz
inc
imul
jg
ficoms
adc
sarb
cmp
inc
cmpsb
mov
adc
mov
mov
cmovb
hlt
jle
loopne
jo
fdivr
jg
adcl
add
lock
mov
dec
data16
fisttps
addr16
test
pop
jne
or
loopne
lcall
xor
adc
adc
insl
cmp
fwait
popa
lcall
fcoml
jl
cmp
hlt
add
xchg
loopne
or
and
icebp
or
adc
stc
call
stos
sub
add
loopne
in
add
xchg
sbb
addl
sub
lds
imul
imul
cmp
arpl
sbb
mov
add
mov
addl
roll
dec
fwait
cld
adc
pop
arpl
test
pop
dec
sbb
in
icebp
jmp
mov
inc
aam
nop
cmp
sub
nop
sub
xlat
pop
mov
pusha
data16
lea
stos
adc
dec
adc
ffreep
testl
mov
jno
or
in
push
pushf
out
rolb
and
push
push
orb
cmp
or
jg
aas
insb
add
push
enter
add
add
xor
mov
add
inc
xchg
fdiv
dec
dec
mov
addr16
loopne
add
les
jp
jl
enter
pop
clc
sub
xchg
in
mov
lock
fwait
test
filds
pop
inc
push
mov
pop
pop
sub
mov
js
sti
es
mov
xor
rorl
ljmp
jge
sti
hlt
adc
movsb
pop
lret
andb
sbb
push
ljmp
imul
jno
pop
fstl
jg
gs
ja
add
test
sub
arpl
or
jmp
mov
push
push
daa
jne
lods
push
popf
mov
lock
sbb
in
jle
sbb
in
inc
mov
pusha
addl
pop
or
pop
shlb
sbb
ss
and
test
or
cmp
scas
rorl
xlat
jnp
or
fstpt
adc
je
les
rorb
mov
adc
push
xchg
subb
or
test
into
sub
pop
js
pop
dec
pop
rolb
mov
mov
and
scas
add
js
add
sar
icebp
adc
cmp
mov
adc
aad
pop
fistpll
jo
call
and
xchg
ret
nop
cmp
sub
or
mov
stos
ret
mov
jno
lahf
inc
xor
aas
cwtl
add
out
mov
adc
inc
push
packuswb
fs
cmp
test
sub
inc
inc
fs
arpl
scas
stos
mov
fdivs
adc
mov
push
aas
jne
notb
js
mov
jne
xor
push
outsb
cmp
je
mov
mov
aad
outsb
stos
pushl
add
adc
sub
mov
cmp
push
loopne
inc
js
shrl
dec
mov
cmp
mov
dec
xor
mov
cmpsb
cmp
adc
orl
rcll
cmpl
mov
pop
cmp
add
or
rolb
mov
pop
and
testb
je
popl
xchg
arpl
fadd
addb
and
push
add
push
addb
mov
lods
loop
adc
mov
out
ret
push
cs
jne
daa
inc
or
xlat
enter
lods
cmpl
cmp
pop
fsubrl
faddl
add
dec
nop
cmp
insb
rcll
mov
ret
outsb
mov
ds
inc
push
sbb
push
push
or
or
dec
xchg
movb
shll
add
movsl
icebp
xor
ret
pop
pusha
idivb
idivb
jg
dec
inc
or
clc
decl
cmp
je
mov
mov
in
inc
call
add
imul
arpl
popa
notl
cmpsl
fnstenv
xor
inc
dec
jne
out
add
add
roll
xlat
stos
lea
dec
add
pop
push
push
nop
js
ds
call
dec
xor
pop
je
add
movsl
imul
lret
and
jl
daa
orb
pop
movb
xor
mov
mov
push
daa
dec
rcrb
ret
add
outsl
dec
icebp
mov
mov
add
lcall
push
xchg
push
sahf
mov
push
mov
dec
test
jl
xor
sub
cmp
jge
mov
inc
fidivrs
data16
adc
fnstcw
mov
cmp
xlat
sti
clc
mov
adc
pop
sarb
mov
and
inc
inc
mov
mov
adcb
mov
adc
ss
sub
enter
clc
lahf
push
adc
inc
or
jbe
and
cmp
jmp
fwait
clc
add
fadds
add
inc
pop
or
ret
jae
xchg
mov
add
xor
and
cli
push
cmp
mov
and
sub
cmp
mov
cmp
loopne
pop
in
cmpl
add
outsl
cmpsl
jmp
testb
jne
sub
mov
mov
inc
inc
jmp
popf
push
fdiv
inc
bound
push
or
jo
cmpsb
cmp
fstl
pop
inc
fadds
mov
into
sti
stos
iret
pop
cmp
add
lock
xor
decl
adc
add
cmp
pop
add
dec
call
add
addr16
inc
pop
push
sbb
clc
dec
xchg
mov
mov
sub
in
ret
mov
lock
sar
xchg
jmp
jo
pop
daa
adc
mov
push
or
aad
adc
push
jmp
sub
rclb
or
je
add
test
aam
or
inc
loope
mov
js
inc
out
leave
dec
adc
adc
nop
flds
test
push
and
sub
cmp
sub
jmp
int
adc
jl
test
push
adc
ja
or
xchg
out
movsb
decb
or
je
inc
sbb
test
or
jae
mov
xorb
or
adc
lret
pop
and
push
cmp
mov
out
add
push
imul
cmpl
pop
add
clc
ljmp
xor
pop
popl
xchg
aaa
inc
rolb
test
dec
mov
jmp
cmp
rorb
cld
add
xlat
jne
out
pusha
mov
cmp
je
mov
cmp
sbb
dec
daa
xor
test
fcomi
push
mov
add
adc
pop
cmpsb
fmull
hlt
xchg
dec
cmpb
loop
lret
pop
xor
scas
cmp
mov
stos
dec
or
pop
add
or
imul
jl
add
jnp
imul
dec
movsb
mov
push
pop
test
xor
xor
inc
pop
mov
lock
std
adc
xor
insb
add
inc
call
xchg
scas
adc
cld
sub
or
pusha
pop
mov
inc
out
xor
mov
add
mov
stos
shl
jns
das
in
or
incl
inc
inc
mov
flds
adc
notl
lds
mov
clc
cmp
cwtl
push
add
jg
fmuls
adc
pop
test
or
aas
xor
mov
aas
sahf
push
mov
push
test
or
cmp
adc
ret
jo
je
push
cmp
or
out
mov
out
std
fimull
pop
daa
out
adc
pop
add
in
push
pushl
mov
xor
or
pop
add
mov
shlb
repnz
sbb
inc
mov
movsl
or
fnstsw
dec
sub
push
cmp
jne
push
fsubr
push
push
ret
ja
sub
sub
xor
jl
adc
and
iret
js
nop
pop
orb
adc
push
iret
cmp
add
sbb
das
lock
mov
adc
into
mov
lds
add
cmp
ljmp
inc
enter
inc
jl
rcrb
sbbl
es
ret
sbb
add
mov
cli
pop
xor
jo
pop
ret
aas
pop
push
jns
call
jns
add
adc
push
adc
in
mov
fs
xchg
and
inc
sbb
inc
inc
ja
int
nop
int
mov
add
pop
or
inc
dec
jne
inc
or
mov
test
ds
cmp
scas
call
pop
call
cld
inc
imul
aam
add
lock
sbb
push
jg
decb
push
xor
mov
bt
shrb
or
jae
test
jne
push
inc
add
inc
lcall
cli
test
add
sub
ret
inc
mov
ljmp
mov
add
mov
add
int
mov
icebp
imul
sub
xor
add
add
pop
pusha
add
push
sbb
fidivrl
fstpt
add
aaa
pushl
dec
inc
push
inc
adc
out
xchg
dec
clc
mov
add
das
into
pop
data16
push
push
orb
cmpl
mov
xchg
add
es
adc
iret
sbb
xchg
dec
sarb
sbb
jne
push
sbb
inc
mov
mov
add
int3
jecxz
push
call
sub
sbbb
add
mov
std
je
or
sbb
outsl
clc
lock
push
loopne
push
jp
inc
xchg
sub
mov
xlat
sbb
js
adc
int3
mov
pushf
or
xchg
loop
mov
nop
lcall
xchg
and
cmp
pop
daa
push
pop
les
cmpl
mov
and
xchg
mov
nop
adc
adc
jnp
cmp
mov
adc
push
adc
test
outsb
out
jmp
scas
sbb
mov
je
push
cmp
jp
arpl
shlb
inc
xor
out
cwtl
mov
mov
orb
decl
and
jo
loopne
push
inc
fmull
cmp
dec
cmp
dec
xor
scas
mov
aam
fcomip
push
inc
pop
mov
cmp
mov
lea
cld
xor
or
aam
mov
mov
mov
sbb
sub
dec
in
add
add
jmp
in
rorl
pop
andl
ja
push
cmc
je
mov
add
cmpsl
mov
add
jmp
push
or
cmp
mov
add
cmp
sub
sbb
popf
std
fcoms
jmp
inc
sub
and
cmp
xor
fmuls
mov
test
rcrb
adc
popf
addb
rcll
aad
and
or
inc
adc
insl
xor
and
aam
pop
ljmp
push
dec
mov
aam
jo
sar
mov
xor
and
fidivrl
sbb
or
or
pop
add
sbb
lret
push
pop
push
push
sub
inc
sbb
arpl
xchg
adc
pop
sti
mov
leave
sbb
jne
out
inc
add
dec
imul
test
jno
pusha
aam
sbb
int
adc
icebp
pop
inc
daa
loope
push
inc
sub
xorb
sbb
lret
cmp
add
hlt
adc
cmp
inc
mov
imul
fcompl
stos
pop
add
pop
test
sub
add
cmp
scas
cmp
mov
cmp
mov
mov
fdivrl
out
rclb
sbb
add
add
dec
je
and
inc
and
xchg
pop
add
add
xor
mov
push
sub
jl
inc
xchg
je
sbb
pop
push
inc
adc
movb
jmp
std
rolb
jmp
mov
mov
and
pop
test
je
cmpb
or
inc
adc
test
add
adc
xchg
popa
pop
jne
outsb
loope
jl
sahf
fsubl
add
fs
jle,pn
aaa
dec
and
dec
inc
jne
sub
inc
iret
idivb
xchg
cmp
jne
xor
pop
sarb
xor
cli
mov
lods
and
mov
in
push
cmpsb
push
pop
cmp
and
sbb
stc
and
lret
pop
fstl
xchg
xchg
decb
add
les
jle
out
mov
pop
jo
xchg
mov
inc
je
dec
cli
push
outsb
movb
mov
xor
inc
lds
push
inc
inc
jge
insb
loopne
or
cmc
or
adc
les
pop
jb
dec
js
mov
or
cmp
sar
sarb
ljmp
mov
iret
xor
xlat
and
pop
pop
xchg
ja
popa
mov
repz
push
add
inc
sbb
nop
push
mov
pop
sahf
pop
push
ja
jo
mov
negb
jne
nop
push
rol
sbb
sahf
scas
incl
jne
clc
cmp
push
adc
xor
push
ljmp
pusha
jne
mov
push
sub
inc
sub
add
gs
xor
popf
mov
add
pop
nop
pop
dec
push
add
adc
dec
fbld
iret
xchg
movsb
and
mov
or
mov
cmp
ret
outsl
mov
mov
push
pushl
je
xor
scas
daa
pop
add
inc
push
call
and
or
shr
add
js
inc
clc
addr16
sub
inc
cli
push
pop
mov
mov
xor
aam
js
or
add
shlb
add
pop
addr16
test
mov
cltd
push
bsr
add
add
pop
dec
rorb
inc
inc
mov
adc
ret
inc
dec
push
sub
das
and
mov
or
pop
in
cmpb
loop
cmp
subb
xchg
sar
cwtl
sbbl
sub
jo
mov
xor
pusha
sbbb
cld
sub
mov
add
ret
ss
adc
add
aaa
testb
mov
or
pop
loopne
xchg
in
jecxz
or
divl
xor
xor
js
testl
xor
int
testb
push
add
orb
pop
test
sub
inc
mov
loopne
or
mov
mov
pop
mov
push
call
lea
mov
add
xor
popf
lods
add
outsb
in
dec
inc
mov
push
scas
ljmp
aam
data16
mov
add
xchg
add
or
ret
jnp
inc
fdivrs
inc
in
push
and
iret
das
mov
or
jno
xor
cmp
mov
sar
xor
push
push
inc
dec
pop
inc
jne
jb
add
pushl
pop
dec
gs
outsl
popa
jb
and
outsl
jne
jae
popf
or
inc
imul
dec
bound
gs
jb
jo
pop
fisubl
jbe
movsl
cltd
mov
test
gs
jge
imul
cld
cmp
cli
pusha
rcrb
xor
mov
call
push
ljmp
cwtl
pushf
sbb
cmp
ss
sar
std
addr16
add
and
and
inc
and
and
xor
cmp
jmp
nop
dec
push
push
and
test
jle
adc
dec
push
imul
cli
push
pop
pop
shl
fs
jmp
test
sbb
push
lea
aaa
shrl
loopne
sub
imul
xor
sub
mov
push
cmpb
push
shl
js
cld
push
xchg
pop
loopne
cmpsb
cmp
cmpsb
cli
cwtl
jp
int
push
push
cli
xchg
mov
xor
aad
dec
cmp
mov
outsl
jne
cli
add
mov
lock
jmp
push
jo
add
cmp
or
bound
push
push
cmp
jp
aad
repnz
je
testb
xor
lods
or
add
push
add
cld
inc
jo
sarb
dec
pop
push
xchg
sub
shlb
mov
xor
lock
cmp
loopne
cmpsl
adc
dec
addr16
mov
les
bound
mov
shll
cli
outsb
inc
push
in
or
in
jae
stos
jne
repz
push
cli
mov
pop
sbb
icebp
push
mov
push
add
pushf
add
mov
arpl
je
xchg
pop
inc
test
push
mov
in
ds
rorl
xor
hlt
mov
add
jmp
test
xchg
push
mov
ret
jno
xor
out
fcmovu
or
adc
cmpl
pop
hlt
inc
js
shll
movl
cmpsl
mov
xor
push
xor
sbb
jo
mov
sbb
lock
mov
and
sbb
or
ret
xor
lea
inc
cmp
jge
lcall
mov
push
cld
or
add
shrl
cmp
xchg
and
arpl
aam
or
cmpsl
imul
imul
push
ja
sub
push
mov
cmp
into
loope
insb
adc
fmuls
jno
xor
add
sbb
pop
rorb
leave
in
push
movb
inc
push
add
inc
inc
push
xchg
lret
add
cmp
or
lea
pop
clc
jb
pop
rorl
xchg
mov
or
mov
shlb
cli
adc
sbb
xchg
mov
or
pop
cmp
mov
inc
mov
ret
out
lea
cmp
mov
push
mov
push
sarb
push
aaa
loopne
pop
pop
ret
jne
addl
mov
mov
js
cmp
mov
sti
je
mov
out
xchg
cli
xor
push
push
adc
mov
out
ja
or
movsb
dec
adc
or
push
outsl
lret
faddp
outsb
ljmp
mov
sbb
hlt
inc
cld
dec
js
xchg
out
xchg
add
or
push
js
cmpb
lret
into
xchg
aam
jmp
addr16
adc
push
es
cmp
call
aaa
pop
push
aas
xor
xor
sub
xor
or
cvtps2pd
mov
sbb
adc
pminsw
jne
pop
dec
pop
pusha
dec
jge
movl
dec
mov
push
dec
mov
pop
sbb
fidivs
add
andb
and
dec
jo
mov
jl
mov
rolb
cmp
push
adc
add
sbb
push
xchg
jp
jo
stos
or
test
push
xor
test
je
push
cmp
or
add
xchg
lcall
lock
xor
cmp
je
cmp
push
test
add
hlt
push
xor
fs
icebp
mov
pusha
sahf
mov
sbb
out
inc
mov
call
jp
inc
clc
push
pop
add
and
jmp
sbb
sub
pop
cmp
jge
loopne
into
and
xor
outsl
enter
ljmp
xor
popa
or
clc
jg
out
add
cmp
adc
hlt
popa
push
fs
adcb
add
or
jae
mov
dec
inc
adc
add
add
adc
jmp
cmp
xchg
mov
xor
int
aas
add
mov
daa
or
adc
outsb
ljmp
in
mov
gs
fisubrs
movsl
pusha
add
js
call
scas
out
aas
out
rcll
push
xchg
sahf
and
adc
mov
inc
dec
addb
jge
mov
pop
jmp
sbb
xchg
mov
movl
int
add
test
aad
or
jl
adc
cmp
sbb
fbstp
data16
jge
dec
cld
add
jb
mul
insb
or
ss
jns
pop
or
pop
inc
and
jo
or
or
sbb
add
cmpb
cmp
rclb
aaa
in
mov
dec
sbb
int
js
lock
pusha
push
enter
and
inc
shrb
adc
sub
lret
repnz
dec
push
imul
push
xorb
ds
mov
test
call
cmp
sbb
push
mov
cmp
enter
mov
or
or
inc
cwtl
out
mov
ret
es
inc
loopne
or
enter
lahf
or
out
sbb
mov
cmp
cmpxchg
jo
mov
cmp
fists
adc
or
sub
and
adc
lods
cmpsb
cmp
subb
add
out
insb
push
xchg
movsb
xor
cmp
test
inc
cmp
adc
push
cmpl
cmp
punpcklwd
scas
mov
seto
nop
sub
cmpl
mov
mov
or
cltd
loopnew
ret
jno
fs
push
and
xor
add
loopne
add
rcrl
cmp
mov
cs
jg
dec
mov
nop
ss
dec
push
or
adc
jmp
ds
in
pop
xor
push
cmp
push
lock
add
shrb
in
lock
mov
mov
cmpsl
inc
lcall
cmp
les
or
subl
inc
jl
cmp
rorb
push
repnz
pushf
repnz
jbe
adc
je
sub
je
aas
lea
fiaddl
xchg
jae
jge
out
mov
inc
sub
je
inc
pop
add
mov
mov
inc
jl
lods
pusha
inc
mov
faddp
movzwl
lcall
popa
sub
jne
jbe
xor
movsb
xor
xchg
pop
mov
pop
jnp
jmp
movb
testb
add
add
inc
adc
push
jl
call
push
rcll
punpcklbw
adc
or
or
push
or
inc
add
lock
xlat
inc
inc
mov
repz
sbb
add
cmp
mov
jmp
lea
jmp
sub
data16
mov
push
sbb
mov
xor
sub
mov
enter
and
or
cmp
push
or
mov
hlt
ljmp
push
or
jge
jnp
xchg
ljmp
or
jge
pop
mov
jbe
ficoms
rorb
clc
sbb
or
aam
xchg
or
mov
mov
enter
sub
xor
jo
jne
cmp
jo
lret
lcall
or
mov
pop
add
sub
push
dec
roll
dec
and
fsubrs
sbb
adc
push
adc
pop
push
sbb
fbld
adc
pop
sub
push
jne
pop
and
lock
add
lea
xchg
sahf
mov
jecxz
pushf
test
adc
mov
sbb
mov
pop
xor
and
jnp
nop
push
lock
adc
push
jb
das
je
fdivr
push
test
push
dec
dec
in
dec
inc
leave
data16
scas
xchg
lahf
inc
in
jo
rorl
push
in
adc
jl
add
fmuls
lock
addl
sbb
pop
pop
or
jne
aaa
popa
xor
lret
addr16
rolb
mov
mov
icebp
and
mov
push
add
add
or
aam
push
jmp
inc
test
sub
out
and
je
xor
fs
or
add
jno
testl
pop
cmpl
cli
sub
push
push
push
xlat
xor
mov
add
xlat
lds
push
mov
push
xlat
in
pusha
add
adc
hlt
adc
movl
push
inc
pop
inc
xor
mov
pop
add
mov
push
outsb
xchg
out
cmp
inc
popa
add
mov
push
test
add
push
cs
add
test
popa
je
cmpsl
add
test
jle
in
and
jb
xor
inc
xor
call
ja
inc
push
ret
nop
push
sbb
sbb
push
das
gs
pop
cmp
pop
xor
pop
ds
adc
adcb
cs
popf
fidivrs
inc
ds
or
in
dec
aam
fwait
jns
cmpb
or
andl
mov
pop
or
imul
add
mov
pop
dec
sub
jp
stc
inc
int3
sti
push
dec
enter
jmp
push
or
fcom
out
adcb
mov
adc
and
sub
dec
gs
ret
xchg
push
add
mov
xchg
sub
dec
jle
or
sbb
shl
or
push
cmp
inc
push
push
movsl
xchg
rclb
push
sub
mov
mov
mov
sub
push
pop
es
pop
inc
testb
adc
xchg
je
cmp
clc
inc
add
jo
call
insb
sbbb
jbe
sub
add
inc
push
aaa
sbbb
push
pop
sbb
sub
inc
das
pop
dec
add
cli
and
sbb
push
dec
xchg
mov
or
je
cmpb
pop
pop
or
sbb
pop
popf
sub
push
inc
in
sete
push
sbb
lock
push
je
jbe
dec
cltd
fsubs
out
sbb
pop
orb
ret
sbb
jmp
add
leave
mov
outsb
pusha
nop
aas
inc
movb
das
add
les
cmp
fs
cmp
stos
mov
loope
inc
push
js
bnd
mov
jne
mov
cli
arpl
mov
sub
cli
outsl
mov
in
fisubrs
sub
cmp
setge
jmp
or
jp
je
sub
es
loopne
jb
sub
push
add
push
popa
mov
dec
test
cmpsb
lods
je
xchg
cld
adc
xchg
or
cmp
xor
popa
fidivs
clc
jle
adc
adc
pusha
push
sbbb
mov
and
clc
cmp
jl
mov
mov
stos
or
pusha
sbb
mov
pushaw
sub
dec
jl
inc
sbb
popf
int3
inc
dec
ret
cmp
lock
jae
push
xlat
xor
jp
jo
or
mov
in
add
mov
lea
or
clc
sbb
push
or
imul
xorb
adc
mov
lock
add
fisubl
pop
and
dec
or
add
sahf
mov
mov
inc
lahf
or
mov
adc
jl
ds
and
rolb
mov
cmpsl
push
in
or
call
repz
in
adc
loopne
xor
adc
js
push
xor
out
xor
push
jl
xor
int3
mov
cmp
jle
add
testl
sahf
idivl
fs
mov
in
lock
sahf
imul
incl
movsl
sbbb
mov
inc
rclb
adc
and
adc
insb
push
mov
sub
cmpsb
mov
add
dec
outsl
fs
insb
push
jbe
hlt
clc
gs
insb
je
addb
push
push
mov
outsl
jb
add
mov
mov
add
push
or
mov
push
int3
lret
xchg
or
xor
scas
or
lret
sub
or
or
push
xor
inc
insb
imul
fbstp
adc
mov
or
mov
mov
jg
mov
fisttpl
xor
xor
movsb
je
mov
mov
push
rcrb
push
int3
or
fcmovnb
or
pusha
adc
sti
pop
mov
mov
xchg
inc
jns
add
inc
pop
ds
and
inc
mov
mov
mov
cmp
push
push
inc
popa
jae
ja
or
nop
je
cmp
pop
mov
cmp
cmpsl
mov
lock
int
lea
in
add
push
ds
mov
js
sbbb
push
xchg
fbstp
shll
jg
lea
pop
pop
movsb
mov
sub
add
mov
in
inc
js
or
dec
ds
js
iret
aaa
mov
mov
sbb
sub
out
mov
inc
mov
push
add
push
loop
ds
cmp
push
filds
imul
loopne
fldenv
pop
sub
inc
je
popa
jo
dec
aam
shll
inc
adc
rorb
xchg
mov
popa
and
mov
jae
mov
mov
shll
push
inc
loopne
and
jl
mov
adc
insb
ds
pop
push
test
push
push
frstor
or
xlat
dec
nop
movl
sub
nop
pop
sub
adc
inc
xor
fwait
test
push
out
jmp
inc
aas
adc
and
and
hlt
lods
push
inc
mov
push
pusha
in
es
sarl
inc
cmp
fs
or
mov
repz
in
inc
addb
test
inc
out
push
inc
cmp
jg
xchg
ret
inc
sbb
dec
pop
cmp
clc
pop
add
nop
cld
scas
arpl
and
lods
or
nop
xchg
inc
addr16
roll
or
push
cwtl
fisubs
rorb
call
push
clc
rcrb
and
out
insl
dec
cmp
push
dec
pusha
push
add
push
pushf
repz
jbe
push
pushf
loopne
out
cmp
dec
mov
mov
add
push
insb
jle
push
add
or
mov
adc
adc
test
inc
pushf
nop
and
test
add
jne
gs
inc
inc
lcall
mov
test
pop
insl
ja
mov
dec
imul
dec
js
dec
push
lods
jbe
je
pop
es
out
or
or
inc
gs
mov
or
inc
adc
data16
ret
inc
adc
cmp
sbb
arpl
fistps
or
push
aad
push
or
popa
outsb
or
or
jne
insb
or
cmp
arpl
xchg
ja
scas
inc
or
je
rcll
aad
jae
inc
outsb
jle
pop
dec
gs
jbe
adc
enter
jbe
mov
adc
test
xchg
fbstp
fsubrl
push
imul
add
jbe
sbb
bound
fs
decl
jle
push
fisubrl
or
cmp
je
outsl
outsb
dec
cmp
add
or
enter
mov
popa
imul
or
pop
or
test
int3
cltd
imul
test
mov
jae
jns
cwtl
pop
xor
and
jp
mov
popa
popa
sbb
jg
add
sub
adc
push
xor
clc
lock
clc
push
ds
pop
fcoms
enter
xchg
jnp
push
loope
std
insb
adc
movl
mov
popa
pop
add
adc
xchg
mov
subb
dec
pushf
add
push
pop
cmp
gs
popa
mov
mov
dec
xlat
pop
or
jle
push
or
lea
vfrczsd
adc
pop
into
popa
incl
inc
fistl
pop
push
call
jb
sub
and
push
xchg
dec
xchg
js
repnz
das
push
inc
jnp
negb
push
or
insb
push
or
xorl
and
pusha
and
sub
cmp
add
cmp
jge
jge
push
add
out
push
loopne
jae
rcrl
add
cs
imul
pop
push
inc
lds
xchg
fs
das
nop
pop
mov
loope
xchg
das
add
fisttps
xor
das
xor
push
and
inc
push
popa
pop
sub
out
shll
and
je
and
nop
cmp
nop
mov
or
push
mov
cmp
or
loopne
seta
xor
sbb
pop
push
in
cli
sub
dec
sbb
pop
js
push
or
xor
rolb
xchg
addr16
pop
outsb
jp
xor
scas
cmp
inc
orb
pop
out
out
js
testl
mov
xchg
int3
push
pop
dec
iret
pop
pop
jg
add
dec
imul
or
add
mov
and
xor
push
and
add
loop
add
ss
outsl
jb
or
sbb
adc
push
push
xchg
push
dec
and
mov
dec
fdivl
sub
test
dec
xor
pop
xchg
pop
jb
push
push
outsl
jne
arpl
adc
pop
or
scas
or
push
inc
arpl
data16
mov
gs
outsb
repz
js
loope
inc
sbb
sub
push
sbb
int3
sub
lret
sub
lcall
jb
pop
cmovns
or
je
mov
or
sub
js
mov
mov
outsb
gs
ficoms
mov
out
sub
dec
popa
push
pop
push
xor
sub
icebp
push
inc
fwait
pop
mov
movsl
iret
negl
aam
test
sbb
or
push
outsb
and
cld
popf
dec
test
xlat
or
dec
gs
lea
xor
push
push
imul
loopne
icebp
insb
insb
outsl
ja
cmp
ficoms
pop
inc
and
jmp
wrmsr
call
minps
mov
add
mov
loop
inc
fdivs
outsb
outsw
fwait
mov
loopne
mov
in
jle
fists
or
outsb
inc
push
arpl
or
or
popa
mov
push
outsl
jae
or
ret
inc
popa
das
mov
or
scas
pop
pop
or
cmp
hlt
lea
adc
or
cmp
xchg
xchg
sub
lods
mov
and
fists
fbld
and
add
out
and
sbb
sti
xlat
jge
xor
add
sbb
gs
add
mov
inc
cwtl
lret
mov
cmp
add
sub
pop
orps
push
jo
ja
insb
adc
repz
mov
jmp
lahf
imul
xor
mov
jne
call
mov
mov
mov
cmpsl
dec
mov
bound
push
movsl
sbb
dec
inc
inc
shl
mov
pusha
ss
xchg
push
cmp
push
cwtl
pop
das
lods
push
add
push
add
es
push
or
in
inc
inc
scas
mov
jl
test
push
adcb
fcomp
loope
jnp
dec
cmp
jmp
push
add
xor
cmpsb
data16
sahf
testl
push
sub
push
movsb
out
movsb
or
jmp
into
inc
loopne
test
imul
push
inc
fdivr
push
pop
mov
out
add
mov
aaa
xchg
push
jbe
subps
dec
add
add
add
push
add
add
add
dec
add
add
add
or
or
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
add
out
in
in
jmp
ljmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
fdivrp
fdivr
fcos
fdivr
call
call
call
call
call
call
call
call
dec
clc
dec
dec
dec
dec
dec
push
dec
cmpsl
sar
icebp
dec
dec
inc
pushl
mov
jl
out
pushf
push
rcrb
push
js
pop
jns
out
in
or
mov
insb
or
movsb
mov
sub
out
lcall
lock
out
out
push
test
shrb
adc
int3
ss
aam
out
pop
and
xor
fs
test
ret
sbb
mov
push
in
add
dec
imul
out
pop
add
mov
aam
fistpll
in
push
push
sub
je
and
lcall
in
hlt
cld
pop
add
adc
mov
cmpsl
jge
pop
scas
hlt
bound
inc
push
push
lock
ss
lret
cld
ljmp
cmp
xchg
ss
out
sbb
adc
fidivrs
add
call
sbb
nop
jg
sbb
sbb
mov
pop
or
test
in
adc
adc
jp
loopne
rclb
and
lods
push
scas
pop
das
jae
inc
xchg
push
push
insl
push
addb
mov
cs
cmp
xlat
test
sub
aas
dec
add
loopne,pn
sahf
push
add
pop
enter
inc
mov
add
sbb
lods
pushl
add
or
dec
mov
ss
add
fisttpll
je
add
or
cmpsb
ffreep
insb
jo
jns
and
xor
or
mov
sub
xor
add
sub
dec
xor
les
mov
lock
fisubrs
movsb
jge
inc
pop
aaa
mov
cli
lods
orl
xor
adc
int3
push
sbb
xor
in
and
push
adc
push
pop
mov
sub
dec
insl
gs
popa
push
push
call
outsb
inc
outsl
mov
sbb
outsb
inc
lds
or
cmpsb
cs
mov
xor
inc
pop
jns
sbb
stos
pusha
push
dec
mov
sbb
or
cmp
pop
rcr
or
je
gs
pop
jle
add
ficomps
xor
xor
push
loopne
jo
ret
mov
dec
adc
leave
and
or
pop
and
arpl
outsl
mov
pop
inc
adc
nop
xor
les
dec
test
or
and
mov
cs
or
mov
mov
nop
cmpsl
mov
mov
stos
push
inc
loopne
or
dec
pop
out
jo
das
and
ds
jo
inc
push
loop
decl
loope
inc
sub
sbb
inc
mov
jle
int3
outsb
push
fsubs
push
jmp
cld
adc
mov
inc
call
in
inc
jge
dec
cmp
addr16
pop
addr16
push
bound
pushf
mulb
data16
push
nop
das
insb
sub
cwtl
sub
dec
repz
xor
test
insb
ss
jl
push
clc
bound
lock
loope
mov
movsb
push
mov
mov
dec
add
cmp
sub
push
mov
push
mov
inc
add
add
add
add
add
add
add
add
int3
and
addl
push
add
cld
pop
test
adc
sbb
sbb
ret
push
jnp
aaa
mov
mov
mov
mov
mov
or
adc
mov
dec
mov
mov
mov
mov
mov
lcall
sub
and
and
mov
mov
mov
or
mov
sub
dec
mov
mov
mov
mov
dec
adc
call
inc
inc
inc
inc
inc
mov
ljmp
cld
mov
es
mov
mov
aaa
push
push
mov
stc
mov
mov
mov
mov
mov
mov
rorl
pop
dec
push
mov
jns
dec
xor
js
rcrb
mov
dec
enter
cmpsl
stc
xor
les
mov
shr
shrl
pop
dec
pop
hlt
adc
push
negl
fcomip
push
push
and
call
int
ja
pop
mov
out
hlt
push
add
cmp
sti
inc
sbb
push
cmp
jp
cmp
mov
pop
lods
ror
iret
mov
fiadds
mov
jnp
jns
pop
pushf
push
or
test
clc
push
push
push
js
fsubrl
test
push
in
push
hlt
jns
sti
cmp
cmp
popa
push
jo
aas
out
jnp
sbb
mov
push
insb
xor
ljmp
xchg
push
shlb
call
mov
sahf
push
out
cmp
fs
xor
ja
jnp
and
push
test
inc
outsb
jbe
mov
push
push
lock
add
mov
call
outsb
or
jp
insb
fiaddl
push
dec
outsb
scas
pop
and
add
cmp
enter
stos
aas
or
fs
xchg
add
adcl
sbb
jg
inc
aad
loopne
pop
andps
popa
jo
rcrb
movsb
shrb
iret
pop
sub
scas
push
xchg
inc
in
daa
out
dec
mov
inc
in
enter
push
dec
inc
repnz
inc
add
sbb
leave
add
mov
inc
mov
xlat
mov
xchg
aad
pop
sub
cmpsl
mov
subl
pop
pop
lods
fisubs
adc
pop
scas
dec
push
data16
add
lock
pusha
mov
in
and
jg
scas
add
addb
push
xor
cmpsl
fnstcw
clc
es
add
mov
mov
add
ret
orl
aas
inc
mov
outsl
sbb
xchg
jbe
fstl
jne
icebp
loopne
jne
imul
loop
aam
pop
adc
pop
call
pop
mov
out
or
pop
outsl
outsb
push
int3
add
jmp
paddb
call
xchg
orb
ret
sbb
dec
enter
and
cmp
icebp
fwait
or
in
jl
mov
clc
add
adc
scas
jnp
iret
sub
scas
std
add
fimuls
inc
dec
xor
hlt
jns
push
movsl
pusha
pop
mov
repz
les
mov
scas
pop
add
push
jp
mov
add
loopne,pn
addr16
push
aas
stc
sub
and
xchg
lcall
dec
mov
xchg
jo
fwait
call
out
push
test
lahf
or
mov
stos
push
mov
fmuls
cs
outsb
mov
scas
das
push
jb
fdivs
or
aas
xor
call
adc
movzbl
sub
jb
je
jmp
or
add
fiaddl
lea
cld
mov
mov
add
mov
popf
sbb
add
push
push
test
push
push
rolb
push
push
test
pusha
je
push
and
inc
or
rclb
xchg
dec
mov
pop
jmp
xchg
js
push
into
and
push
dec
or
push
nop
xchg
js
push
and
adc
inc
rcrb
jb
sbbl
lock
add
jge
movl
cmpsl
shlb
lock
incb
pop
pop
pop
ret
push
pop
popa
mov
mov
adc
fcmovnu
hlt
pop
jo
add
mov
push
mov
push
jecxz
cmp
pop
pop
ret
stos
lods
xchg
clc
push
daa
push
jne
sbb
xor
xor
dec
xchg
ficoms
jmp
jne
inc
push
mov
dec
or
in
add
xlat
xor
and
add
bound
jle
hlt
rorl
adc
mov
nop
and
into
ffreep
test
les
push
push
jno
add
inc
jbe
nop
xchg
add
push
arpl
add
jo
aas
daa
pop
es
jb
cmp
pop
inc
sbb
jae
mov
mov
dec
inc
gs
insl
and
xchg
std
inc
nop
dec
inc
push
push
xchg
push
iret
fmuls
push
inc
daa
or
push
inc
daa
push
jo
xchg
mov
add
sahf
les
inc
insb
popa
punpcklbw
xchg
xchg
xorb
xchg
prefetch
dec
push
jo
imul
mov
aaa
adc
mov
popa
jns
lock
pusha
testb
inc
jo
xchg
and
or
or
ja
adc
add
addr16
fneni(8087
add
cmpsb
out
outsl
icebp
push
outsl
cs
and
mov
add
sbb
mov
ficomps
nop
aas
mov
inc
mov
aam
xor
arpl
les
mov
lods
add
jmp
push
mov
dec
dec
lcall
mov
lock
jl
pushf
lods
and
xchg
lea
mov
push
push
arpl
bound
int3
mov
punpckhbw
roll
mov
fsubs
enter
inc
pop
ds
xor
fcmovne
push
dec
inc
pop
frstor
push
sub
mov
xor
rclb
ja
aam
adc
inc
xor
mov
push
insl
mov
pop
insb
das
add
negb
insb
cmpsb
ja
add
and
jnp
xor
push
outsb
je
mov
push
add
cmp
movl
clc
adc
imulb
inc
add
nop
sub
shlb
xchg
fiadds
jle
jbe
imul
ljmp
xchg
and
movsl
clc
popf
scas
mov
add
xchg
or
incl
mov
or
fmul
jl
dec
xor
cmpsl
dec
dec
arpl
jo
pop
cld
mov
repz
or
jmp
leave
xchg
movsb
mov
cmp
lock
sar
fwait
ds
cwtl
cs
mov
incb
jmp
sahf
cmpsb
scas
clc
mov
lea
jp
jle
add
orl
mov
adc
rcll
add
rorb
adc
incl
cmp
add
pushf
jmp
add
and
adc
pop
das
sbbb
cmpsl
dec
pop
inc
jl
mov
or
lret
lret
test
aam
inc
test
jbe
outsb
cld
xlat
push
mov
mov
dec
dec
jne
js
ficoms
push
cmp
cmp
sbbb
xor
mov
inc
mov
or
sahf
shr
mov
push
or
cmp
adc
decb
fisttps
mov
mov
shll
adc
dec
shll
sub
xor
shll
sub
xor
push
call
xor
push
push
loope
jo
sahf
idivl
sbb
sbb
pop
ret
mov
push
aas
xor
jne
sub
cmp
jb
mov
mov
mov
and
xchg
popa
push
inc
popa
jae
in
add
add
je
sub
cwtl
je
sub
je
or
je
mov
gs
mov
je
imul
adc
push
and
cmp
inc
test
addr16
push
dec
rorb
aam
mov
cld
out
push
add
add
fsubr
gs
adc
or
fisttps
xor
addl
add
jne
mov
add
sub
add
adc
or
dec
in
adc
sbb
or
movsl
or
mov
mov
or
lea
push
lahf
pop
cmp
rcll
ret
add
or
enter
push
mov
jmp
or
incl
xchg
xorb
inc
or
pop
mov
xor
cli
inc
mov
sub
mov
pop
cs
mov
add
pop
jmp
loopne
jne
inc
sbb
inc
das
in
fs
mov
ss
xor
rol
frstor
push
xor
push
mov
pop
push
xchg
push
rorb
push
push
jle
subb
test
add
loope
jge
pop
stos
imulb
cmpsl
in
add
mov
dec
pusha
or
iretw
add
nop
and
lods
sbb
mov
ss
inc
call
jle
and
dec
fistps
lods
xor
xor
xchg
aas
jl
xor
sub
sub
inc
cmp
imul
mov
cmp
call
mov
arpl
popf
and
sub
mov
dec
add
hlt
xchg
roll
pusha
loop
rclb
scas
mov
pop
mov
movsb
mov
sbb
and
push
hlt
outsl
fimuls
pusha
sbb
lea
lea
insl
imul
fs
dec
add
or
pop
cmp
lcall
push
add
out
aas
add
add
ret
xchg
mov
add
or
jo
cmp
pop
fs
shlb
add
cmp
jl
cmp
lods
rclb
push
sub
sbb
pop
sub
repnz
add
or
adc
repnz
cld
xchg
aam
add
neg
push
neg
mov
iret
dec
xor
mov
push
fs
push
push
jg
fcmovb
outsl
add
adc
xor
test
mov
cltd
rcrb
roll
jg
rorb
scas
and
jo
das
dec
pushaw
pushl
add
pop
sub
enter
sarl
jb
outsb
mov
add
cmc
jmp
cmp
mov
cmp
dec
or
add
cmpsb
xchg
jne
out
or
cmp
loopne
test
sbb
hlt
push
dec
fistpll
lcall
xchg
or
push
xor
ja
lcall
mov
push
cs
xchg
or
shrl
movsb
notb
repz
js
sti
mov
cmp
inc
pop
pop
call
test
loopne
mov
push
mov
movsl
in
sub
inc
dec
je
ret
test
jmp
dec
add
jae
inc
clc
fdivrs
aaa
pop
imul
fcoml
inc
out
popa
insl
mov
enter
test
xchg
add
cmp
push
mov
aam
ljmp
lds
in
push
fidivl
mov
mov
in
sub
cli
cmpl
in
and
idivb
cmp
je
rol
push
fildl
test
cwtl
ljmp
dec
scas
mov
add
fisttpll
mov
pop
loope
test
and
pusha
rcrb
iret
pop
shrl
jge
sbb
xor
lock
cmp
cmpl
cli
add
int
add
sub
xor
sbb
push
sbb
mov
dec
popa
mov
sub
cmp
adcl
inc
adc
fiadds
ret
mov
push
sub
sbb
popl
jp
clc
mov
scas
dec
jbe
sbb
push
or
xor
ljmp
inc
and
negb
pop
add
jne
add
inc
fsubrs
je
nop
cmp
or
inc
jp
cmpsb
mov
add
fcomi
cmpl
or
gs
pop
adc
add
ds
popf
js
add
xchg
add
rorb
and
xchg
inc
inc
mov
mov
adc
inc
jne
mov
push
xchg
sub
adc
inc
test
dec
push
adc
inc
and
pop
mov
and
sbb
or
int
mov
sbb
or
lock
add
xchg
rorl
mov
push
push
cmp
dec
test
and
mov
iret
add
pop
add
pop
lcall
xchg
sahf
fidivs
leave
movsb
pop
or
jne
mov
sbb
call
fucomip
or
add
sbb
outsl
add
or
add
sbb
xchg
lcall
pop
or
xor
shr
int3
lock
dec
adc
lock
mov
xchg
mov
mov
and
mov
mov
add
mov
mov
push
cmp
jg
fdivs
insb
adc
add
jne
repnz
and
mov
mov
adc
sahf
int
test
aaa
or
fiadds
imul
or
cs
and
bound
add
scas
push
xchg
cmc
add
inc
inc
je
sbb
arpl
push
push
hlt
push
jl
push
je
and
lea
xchg
cmp
jg
mov
jne
inc
mov
push
lods
pop
sbbl
clc
sub
add
mov
in
clc
out
add
mov
sub
mov
lock
mov
aas
sbb
and
test
scas
daa
jnp
xchg
test
adc
shlb
xchg
pushf
ljmp
or
shr
aas
popa
add
xor
fadd
fdiv
pop
cmp
lret
push
pop
inc
fimull
xor
xchg
sarl
mov
and
adc
mov
xchg
xchg
push
xlat
insl
rcll
inc
shll
test
push
mov
cmpsb
enter
mov
rcll
shrb
mov
sbb
push
mov
push
in
push
inc
popa
push
clc
or
jg
jne
testb
jne
cmpb
push
adc
inc
push
adc
adc
inc
outsb
xchg
sub
jne
lahf
ret
fwait
pop
jle
push
jmp
mov
adc
cmp
pop
sub
movswl
out
add
lock
sub
sarb
push
leave
test
cmp
psubb
xor
push
inc
xchg
mov
cli
and
mov
mov
adc
andb
push
invd
pop
frstor
sbb
pop
pusha
inc
adc
cltd
inc
cmp
rcrb
push
inc
dec
inc
fdivl
sbb
repnz
cmc
jge
enter
in
inc
aad
das
ret
mov
or
andb
sub
sub
adc
movl
mov
loope
lret
or
ja
pop
dec
adc
out
push
aaa
sub
enter
adc
inc
mov
inc
aas
ret
cmp
mov
lea
jo
or
stc
push
and
insl
push
jle
jp
adc
aas
mov
bound
stc
fstpl
fstps
icebp
sub
mov
cmp
xchg
cli
lret
jle
push
jns
sub
imul
dec
push
push
mov
xor
mov
push
and
adc
adc
aam
pop
add
xor
sbb
or
fwait
mov
popf
jmp
sub
mov
test
outsb
sbb
adc
push
gs
stos
sub
int3
iret
inc
cmp
loopne
ret
repnz
jg
pop
pushf
repz
dec
leave
sub
sbb
imul
inc
xchg
mov
nop
fsubr
jne
add
sbb
jo
bswap
jne
xor
pusha
lret
stos
mov
xchg
jecxz
jbe
dec
pop
jbe
mov
aam
in
inc
mov
sbb
mov
ja
les
dec
push
adc
add
pop
xchg
imul
mov
xor
lock
add
push
jmp
sbbb
and
cmp
add
outsb
fadds
shlb
mov
loopne
adcb
out
fwait
ja
js
add
dec
add
pop
and
dec
fdivs
push
jl
xor
mov
fdivrp
jb
xor
dec
lret
push
inc
push
stos
jnp
mov
xor
rolb
add
inc
adc
add
dec
insl
jne
gs
mov
inc
push
sbb
jne
dec
sub
test
mov
cmp
test
xchg
or
addr16
add
inc
in
push
xor
add
jno
or
add
xchg
mov
mov
popf
das
add
add
jne
pop
decl
and
or
mov
js
out
and
aaa
dec
bswap
dec
mov
mov
insb
pop
mov
and
or
xchg
adc
lods
ljmp
out
xchg
sbb
repz
and
adc
mov
sahf
push
stc
push
cmpb
jne
cmpsl
lods
add
adc
dec
clc
pop
ss
pusha
pop
mull
je,pn
outsl
adc
pop
mov
loopne
or
aam
mov
inc
add
shrl
add
sub
cmp
sbb
stos
and
or
jmp
mov
fnsave
or
mov
test
xor
sbb
mov
sbb
add
jne
mov
pusha
pop
add
xor
pop
ja
or
or
sub
inc
jno
das
push
push
repnz
xchg
adc
add
es
cmp
les
xorb
pop
jbe,pn
and
xchg
call
jmp
xor
mov
add
push
jo
add
je
test
cmp
repz
push
and
dec
out
adc
sbb
adc
cmp
cmp
inc
mov
adc
xor
pop
rcr
sub
cwtl
ja
daa
adc
stc
in
cmc
daa
je
sbbb
dec
push
jecxz
fwait
mov
pop
mov
stc
xchg
add
sbb
xchg
jne
push
adc
pusha
out
scas
mov
std
add
pusha
dec
mov
sbb
cmc
pushf
or
push
sub
ret
hlt
mov
add
or
push
push
arpl
push
movsl
xor
out
sbb
and
dec
sub
je
or
xor
xor
lock
jne
rolb
mov
shrb
and
lea
sub
mov
call
fsubs
into
insb
insl
add
inc
js
into
insb
hlt
movl
inc
inc
xor
roll
testb
cwtl
fidivrl
dec
popf
jnp
cmpsl
imul
rorb
loope
inc
icebp
jmp
stc
movsb
dec
jne
mov
mov
lahf
dec
lret
sbb
cmp
jns
nopl
hlt
outsb
iret
roll
cmp
jl
or
add
add
hlt
cmc
imul
inc
insl
hlt
imul
pop
push
ds
xor
pushl
dec
jne
add
or
scas
add
movsl
add
rdtsc
cmp
jge
sub
or
wbinvd
mov
add
cld
imulb
incb
inc
or
js
sub
addl
fiadds
push
add
testl
pusha
inc
pop
loopne
inc
mov
pop
or
pusha
sub
enter
cmp
sub
jle
pop
loopne
add
mov
rcrb
dec
jle
pop
pop
inc
addr16
jmp
inc
and
bound
push
popl
pop
test
outsb
pop
cmp
xor
cmp
je
mov
push
mov
pop
pop
clc
push
push
cwtl
or
inc
cs
andl
test
out
cmp
icebp
dec
ja
push
mov
dec
ja
push
mov
aas
sub
pop
and
xchg
mov
xor
xchg
je
and
cltd
or
sbb
push
adc
adc
jo
add
or
or
sub
mov
pop
mov
aaa
sarl
je
dec
out
pop
jmp
test
je
mov
test
jbe
push
push
pop
lret
rclb
jl
and
adc
cmp
out
xchg
xchg
sti
adc
call
cmp
or
sbb
jl
cmp
or
jl
test
xor
mov
sbb
push
sbb
cmpsb
push
aas
dec
mov
sbb
mov
clc
mov
or
mov
lret
rorb
add
inc
adc
jbe
rol
mov
mov
jo
out
fs
cmpb
rcr
lods
push
idivb
cmpl
pop
and
aas
or
mov
jle
add
or
mov
lods
lret
rorb
in
lock
pop
add
hlt
or
les
mov
add
cwtl
mov
mov
inc
fdivl
lea
jo
imul
pusha
xchg
adc
add
dec
lock
sub
fiaddl
sub
sub
and
or
cmp
or
sub
pop
sbb
mov
cmp
xlat
int3
add
les
cwtl
lret
or
add
mov
ror
call
cmp
sar
or
xor
adc
mov
rol
mov
fstp
rolb
push
dec
addr16
iret
add
popl
inc
pop
jl
movl
pop
xchg
jbe
cmp
movsl
shrb
sbbb
mov
faddl
je
xchg
xor
and
pop
das
jle
loopne
inc
cmp
data16
outsb
cmp
jg
inc
xlat
add
xor
jle
push
adc
add
aaa
add
xchg
hlt
ret
and
push
cwtl
and
cmpsl
dec
xlat
fcmovb
push
fcoml
inc
sbb
rcrb
inc
fidivs
jp
push
repz
cltd
imul
ret
insb
cld
in
rol
bound
loopne
adc
ret
push
sub
add
push
push
rcr
xor
fs
mov
xchg
verr
jne
inc
push
js
insb
lds
cmp
cmp
mov
jo
xchg
fstpt
dec
add
js
aas
rcl
pop
int
enter
mov
out
or
fmull
xchg
mov
ret
outsl
and
fadd
fsubp
jmp
rcrb
cmp
js
lcall
outsb
push
push
xchg
js
addr16
rclb
sbb
mov
and
pop
adc
sub
andb
filds
popa
xchg
mov
add
sbb
dec
sbb
movsb
daa
orb
jo
cmp
bound
xchg
fsubr
push
outsb
ss
inc
jo
inc
inc
push
add
repz
push
pop
pop
pop
cmp
jnp
pusha
adc
push
pop
add
jle
jmp
cwtl
adc
and
lods
jl
icebp
add
dec
stos
push
or
rclb
fnstsw
jge
pop
test
jo
jle
dec
div
add
or
mov
enter
loope
in
inc
bound
mov
mov
inc
pop
insb
mov
xor
lock
pop
shl
mov
add
daa
adc
mov
add
push
inc
insb
popf
add
sbb
sarb
add
pcmpgtb
dec
aaa
xor
js
dec
jge
pop
movsl
subb
lea
push
inc
mov
cmp
dec
add
or
xchg
rol
push
adc
pop
pop
cmp
je
add
je
iret
je
and
sarb
add
sub
cmp
inc
mov
sub
sbb
adc
dec
lea
das
js
add
fcomps
shlb
push
push
push
arpl
punpckldq
or
pushf
test
pop
jecxz
cmp
subb
fiadds
add
inc
mov
xor
add
jne
add
cmp
je
popa
in
jno
mov
jo
add
ret
cmp
je
adc
aaa
cmpsl
std
add
jne
adc
inc
jne
jge
mov
or
sub
or
pop
mov
sbb
mov
lock
leave
int3
loopne
outsl
mov
scas
inc
cli
inc
mov
arpl
lcall
sbb
add
adc
out
or
xor
je
inc
adc
jne
mov
sbb
adc
xor
in
mov
inc
mov
je
or
cmp
mov
je
cmpsb
jne
mov
or
add
jmp
data16
push
sbb
fcoml
ret
cmp
out
mov
ret
xor
stos
xor
stos
xchg
adc
fs
or
push
adc
sub
dec
pop
inc
fcoms
sub
int3
pop
dec
mov
mov
aam
inc
rol
or
and
lret
div
incb
rolb
or
iret
movsb
mov
or
and
cmp
or
idivl
cmp
cwtl
rcl
sub
lds
clc
sub
insb
jmp
push
loope
lods
push
or
mov
push
inc
push
sbbb
adc
mov
scas
sub
lds
nop
or
enter
test
adc
or
or
pop
lcall
sbb
fdivrl
insb
xchg
dec
sub
fdivrl
rcrb
sub
ret
jne
xor
add
and
add
imul
push
push
dec
dec
inc
mov
push
push
mov
loopne
cmp
sbb
lods
xchg
xchg
inc
int
inc
xchg
add
push
rcrl
test
rclb
ret
nop
ss
push
mov
outsl
lret
or
hlt
add
dec
aaa
mov
jnp
in
shll
or
inc
dec
test
push
sbbb
or
inc
push
push
mov
mov
inc
mov
popa
cmp
pusha
or
je
adc
addr16
lock
xor
call
icebp
adc
sub
add
in
adc
sbb
daa
jg
jl
sarl
or
mov
insl
inc
js
inc
test
mov
sar
jns
adc
add
push
xor
daa
inc
xor
inc
icebp
lods
push
rolb
aam
or
mov
adc
sbb
out
and
shlb
jns
pop
test
je
fldenv
sub
add
push
push
jo
sti
mov
cmp
and
and
mov
das
or
mov
andl
std
add
daa
fdiv
pop
cmp
mov
lea
mov
adc
clc
loop
shll
inc
sbb
push
add
inc
and
inc
add
jl
and
xorl
adc
jmp
fcomps
lret
xchg
int3
imul
sbb
popa
adc
insl
push
leave
push
inc
iret
add
addb
push
xor
pop
or
or
loope
pop
out
movsb
adc
notb
mov
je
loope
adcb
and
testl
adc
jge
mov
pop
pop
aad
push
inc
pushf
and
enter
jae
push
pop
cmpl
enter
orw
and
loopne
pusha
add
gs
ret
jmp
mov
pop
je
lcall
orb
pop
lods
aad
cld
stos
les
mov
adc
or
mov
add
sbb
lret
xor
and
loope
push
pop
ds
push
sti
dec
pop
pop
dec
sbb
aaa
inc
int3
or
sub
arpl
das
fmuls
mov
pop
jmp
fadds
nop
rcll
add
sbb
dec
ret
xchg
adc
lock
mov
jno
movb
xchg
adc
pop
lods
nop
fwait
cmp
add
ja
push
jg
rorb
mov
dec
ficompl
inc
add
fcomps
dec
mov
mov
xor
into
push
mov
mov
sub
adc
mov
sub
jb
and
jge
jbe
add
push
inc
adcb
sub
xor
arpl
push
xor
xorl
sahf
les
jb
push
cmp
adc
aam
lods
popa
lds
add
sbb
inc
movsl
mov
test
ret
add
jo
push
push
hlt
mov
adc
adcb
mov
xor
add
outsl
fwait
addb
inc
cmp
push
or
add
cmp
xor
push
sbb
pop
lock
fwait
js
pop
pop
or
mov
add
and
pop
mov
xchg
inc
inc
add
clc
add
or
pop
pop
je
imul
add
sar
pusha
cwtl
mov
rcrb
add
repnz
cmp
adc
repnz
cmp
or
mov
sbb
adc
push
sbb
loopne
and
jb
cmpsl
pop
sub
aaa
ljmp
hlt
add
xchg
pusha
or
jae
mov
data16
fbstp
test
xchg
pop
push
test
pop
divb
sub
mov
jecxz
xor
ja
stos
fcoml
inc
and
inc
movsl
or
add
mov
shrb
mov
outsl
add
push
sti
lock
shl
cmp
je
fildl
cld
je
movzbl
sbb
push
loopne
adc
xchg
push
nop
call
in
outsb
inc
je
xor
test
push
jb
inc
adc
cmp
add
and
mov
add
fidivs
lds
sbb
sub
out
ja
testl
mov
imul
das
mov
adc
mov
rorb
cmp
rcl
nop
imul
lock
insb
nop
mov
call
jge
and
xchg
or
dec
push
mov
pop
xor
add
mov
cwtl
jmp
push
pop
cmpb
sbb
mov
je
pop
push
in
xchg
xchg
rcrb
lret
xchg
stos
out
pushf
mov
mov
fs
cmp
je
mov
sbb
lcall
pop
enter
aas
enter
ret
dec
out
inc
push
and
clc
mov
scas
jne
jno
push
fs
lcall
int3
dec
ja
popl
or
jp
mov
rolb
cld
ror
jl
inc
clc
xlat
cld
jmp
and
add
fwait
test
cwtl
dec
shr
or
or
inc
stos
cwtl
mov
cli
and
add
mov
push
inc
jge
push
or
aas
or
or
xorl
add
sbb
and
aaa
xor
sbb
and
sub
mov
adc
aas
outsl
add
sbb
sbb
cmpsb
mov
adc
xor
pop
push
je
lock
push
push
sub
adc
inc
xor
fs
cmp
adc
ljmp
clc
and
push
push
pop
pusha
dec
jecxz
cwtl
jle
nop
mov
or
jle
mov
add
dec
iret
mov
and
mov
daa
dec
xchg
xorl
outsb
adc
pop
dec
cmp
add
mov
dec
push
dec
add
sub
cmp
or
mov
push
adc
push
rcrl
mov
xlat
and
inc
test
cmp
inc
or
dec
add
add
dec
xlat
fs
dec
inc
test
jg
call
dec
mov
jno
adc
mov
sub
mov
add
pop
call
sbbl
mov
or
inc
pusha
add
jg
lods
push
push
es
add
push
test
adc
test
xor
nop
popa
sbb
xor
sub
mov
xchg
adcl
mov
adc
or
pop
add
call
mov
fiadds
or
adc
mov
out
xlat
in
je
xchg
repnz
mov
movsb
lahf
cmp
dec
lock
mov
shrb
into
inc
mov
and
inc
and
je
mov
sub
out
and
jne
xor
inc
ja
fisttps
call
mov
or
jo
dec
sub
rorb
inc
push
pusha
inc
pusha
iret
jbe
jbe
inc
cmp
cli
mov
fcmovnbe
dec
xor
movsl
in
bound
fmuls
xchg
cmpsl
jae
incb
fisubl
fdivs
mov
inc
clc
movsl
test
xchg
adc
rolb
mov
jae
mov
mov
jne
subb
mov
test
jl
adc
push
xor
jge
std
in
adc
add
cmp
je
mov
aam
adc
add
mov
lret
pop
push
pushf
mov
and
stc
sbb
testb
mov
add
or
mov
jo
out
bound
je
mov
mov
lret
or
fidivl
adc
inc
sbb
cmp
push
aam
mov
mov
inc
inc
pop
inc
xchg
into
insl
adcb
add
push
or
add
push
jo
loop
dec
popf
cmc
push
pop
rol
jmp
inc
sbb
jl
testl
push
inc
cld
add
cmpb
cld
add
jle
adc
dec
outsl
push
adc
incb
loope
cmp
inc
je
faddl
mov
neg
lcall
in
jle
daa
cwtl
sbb
fadds
mov
mov
add
push
mov
push
mov
jo
dec
xchg
jno
adc
push
je
adc
jne
inc
js
cld
pop
push
wrmsr
add
pop
in
dec
ljmp
cmpb
sub
lods
mov
aas
jp
jne
mov
les
fcmovnb
ljmp
fadd
cmp
push
inc
out
stc
mov
or
outsl
setne
movsb
push
adc
pop
jno
lds
nop
mov
pop
sub
int
adc
inc
and
dec
adc
or
add
aas
or
dec
sbb
cli
inc
call
loopne
xchg
xor
cmp
add
mov
into
outsl
loop
and
and
je
cmp
sub
je
jge
or
inc
js
mov
jl
cmp
loope
adc
mov
xor
jmp
inc
or
adc
mov
add
inc
nop
loopne
movsl
and
xchg
mov
divl
or
xchg
cwtl
adc
or
das
push
cmpb
pop
dec
adc
testl
loope
stc
and
movnti
sbb
xor
and
adc
and
jge
xor
dec
jp
xor
lock
outsl
sub
test
mov
cmp
mov
mov
add
push
popa
inc
mov
sbb
fs
rorb
adc
lock
out
mov
popf
cmpsl
jbe
dec
test
jne
call
adc
notl
inc
cmpb
cmp
pop
dec
loope
addl
lcall
pop
scas
jb
mov
pop
imul
adc
loopne
mov
adc
push
call
mov
add
addb
les
mov
inc
or
mov
ja
mov
adc
jne
in
mov
push
js
push
pop
rcrb
mov
adc
rcll
or
scas
jecxz
mov
data16
into
call
or
bound
sbb
addl
ret
mov
ss
mov
mov
mov
mov
adc
cmp
xchg
hlt
lods
add
jge
sbb
or
mov
mov
and
loopne
addb
pop
ret
adc
jmp
pop
iret
dec
push
xor
shl
fcoms
mov
mov
mov
and
fwait
add
or
call
sub
inc
xchg
subl
scas
and
inc
or
and
in
popa
sub
dec
repnz
adc
mov
adc
aas
xor
mov
fmull
fildl
fsubp
fstpl
decb
in
fwait
mov
adc
and
fwait
lea
frstor
pop
sbb
push
and
frstor
call
mov
add
mov
lea
or
jmp
add
adcb
add
je
cwtl
inc
sub
loop
sbb
push
outsb
push
mov
clc
sbb
push
and
movsb
sbb
push
imul
sbb
adc
push
imul
pushf
das
push
pop
dec
or
cs
repnz
loopne
xor
hlt
arpl
xor
pop
pusha
call
stos
lcall
add
cmp
ret
insl
xorb
aad
loopne
aam
jo
jle
pop
push
inc
mov
daa
adc
movb
mov
lahf
sbb
notb
mov
push
sub
mov
inc
cmpb
jge
pushf
mov
jmp
bound
add
pushf
ret
inc
adc
mov
call
les
je
inc
neg
xor
enter
int3
loope
pop
ss
jmp
sub
add
fnstcw
jo
cltd
jo
pop
ja
hlt
fidivl
add
daa
les
adc
mov
fsubs
mov
dec
pop
push
pushf
sbb
je
adc
inc
mov
inc
ficoms
lret
push
push
movzbl
shlb
mov
sahf
mov
cmp
addb
push
outsl
sub
add
imul
sbb
mov
add
push
lea
add
fcomi
and
add
cmp
hlt
arpl
cmp
dec
add
inc
sub
sub
sub
fldt
xchg
aam
in
testb
dec
loopne
outsb
mov
inc
and
cmp
aaa
out
outsb
lret
fsubr
push
popl
sub
das
mov
push
int
inc
in
push
xor
sbb
jo,pt
aas
loop
jb
leave
int3
les
arpl
std
mov
leave
push
call
orps
mov
jo
ljmp
pop
je
gs
cmp
mov
jne
mov
loopne
lret
lea
lock
sbb
mov
mov
inc
inc
mov
add
add
je
push
cmp
lock
dec
sub
and
lea
adc
or
mov
push
adc
std
and
inc
lock
jns
aam
jmp
movsb
sbb
add
jmp
sbb
mov
mov
cmp
mov
and
xchg
jne
das
addl
push
je
cmp
and
es
das
sarl
js
adc
mov
xor
cmp
adc
mov
fsubrl
push
or
loopne
jp
notl
inc
or
mov
ds
sti
pop
add
int3
push
daa
inc
jp
or
mov
ficoml
push
jbe
sub
fsubs
fsub
lret
pop
ljmp
scas
mov
xor
xor
sar
mov
je
leave
sbb
cmp
es
andb
hlt
ror
testl
or
test
mov
mov
xchg
jecxz
mov
test
or
into
dec
les
hlt
cmp
mov
and
pop
push
test
inc
daa
out
shrb
push
adc
dec
push
and
xor
scas
jecxz
or
lret
iret
testl
insl
sbb
stos
add
mov
cmpsl
fcmove
jo
xchg
test
cld
add
insl
mov
rcll
xor
sarl
sub
jmp
adc
and
loopne
adc
inc
das
fists
data16
dec
ja
pop
cmp
add
das
mov
push
sbb
sub
push
in
sbb
adc
shlb
add
fiadds
jecxz
clc
lock
je
data16
test
add
adc
sbb
xchg
loopne
push
push
mov
push
pop
cmpsb
test
je
add
sub
jae
push
cmc
xchg
sub
add
xchg
mov
mov
mov
xchg
add
daa
aaa
push
push
jns
dec
add
mov
jmp
push
pop
xchg
mov
jo
cltd
sar
xchg
mov
ss
test
add
cwtl
push
adc
stc
roll
outsb
lock
mov
fwait
mov
test
sub
xor
incb
je
push
add
dec
pop
or
push
in
ss
ss
cld
pop
jecxz
xchg
dec
push
je
push
adc
shlb
into
mov
sarb
popf
jge
sahf
adc
push
jmp
sub
mov
or
or
inc
jo
cmp
shr
jp
xor
push
fnstsw
cmp
xchg
push
sub
sbb
xor
and
or
push
dec
jno
add
fisttpll
dec
jns
or
or
push
or
popf
loop
mov
jmp
sub
add
sub
rol
and
xchg
jg
mov
sbb
jmp
jg
pop
les
push
push
add
enter
lahf
and
adc
jb
cld
jp
pusha
sub
loope
lods
adc
lods
pop
push
jge
loope
cmpb
and
jae
imul
je
add
sub
mov
pop
addr16
or
inc
loopne
adc
dec
mov
sub
and
adc
add
call
cmp
adc
sbb
sbbb
dec
jbe
stos
adc
ror
loope
add
mov
or
or
aas
mov
cmp
inc
xor
adc
jnp
aaa
xchg
inc
sbb
insb
inc
in
jb
pop
mov
xor
and
inc
cmp
out
sti
push
jb
adc
inc
push
xorb
add
mov
ds
pop
insb
add
bound
pop
ja
pop
push
lock
stos
std
jl
into
insb
std
bswap
pop
sahf
ss
adc
faddl
int
mov
and
or
test
fnsave
adc
inc
push
movzwl
jne
sbb
std
push
in
and
loope
inc
jmp
mov
mov
out
add
pop
push
mov
add
push
push
sub
ljmp
mov
sub
jle
insl
nop
inc
lcall
shll
loopne
inc
lock
sbb
dec
adc
push
ret
or
add
mov
mov
dec
dec
push
add
jle
push
jmp
shrl
jg
cmpb
insb
popf
sbb
popa
pop
cld
pop
dec
and
push
lea
mov
fistl
push
adc
adc
mov
data16
mov
fwait
xor
loopne
sbb
cmp
push
or
jnp
adc
shll
inc
sbb
addr16
xlat
xchg
pop
sbb
stc
stos
decb
xor
or
dec
dec
je
clc
and
faddl
jmp
stos
test
add
cwtl
dec
loop
push
test
mov
in
cs
aas
mov
pushl
push
push
mov
cmp
and
in
add
mov
test
sub
pop
das
loop
mov
fistl
mov
mov
lcall
mov
lcall
push
loop
and
inc
pop
sub
scas
sub
clc
das
daa
dec
icebp
push
push
push
sub
jb
pusha
jle
cmp
add
pshufw
icebp
cmp
cmpsl
pop
and
push
push
cmp
adc
stos
cmp
shlb
inc
subl
pop
clc
add
inc
pop
pop
push
sbb
popa
and
mov
adc
es
or
inc
and
mov
loopne
push
xor
es
aas
mov
pop
push
xor
dec
lcall
add
repz
add
loop
cltd
inc
inc
inc
repz
inc
jo
shl
pop
jne
loopne
add
out
or
out
inc
dec
xchg
sub
loope
in
inc
es
cs
in
pop
stc
pop
or
or
in
pop
jno
subl
add
or
xchg
rorl
imul
repnz
pop
pop
pusha
add
call
fisttpll
cld
pushf
out
add
cmp
pop
or
xchg
into
jbe
lcall
js
nop
ss
or
pop
sti
aas
xchg
movb
jmp
mov
mov
xor
mov
outsl
mov
mov
in
outsl
inc
dec
cs
enter
and
add
sbb
mov
addb
pop
or
popl
push
add
mov
add
andb
jp
insb
fs
mull
dec
sub
int3
cmpsl
or
daa
mov
and
das
daa
mov
push
cmpw
inc
sub
ljmp
push
push
cmp
mov
popa
sahf
call
addl
ret
mov
inc
std
sbb
sbb
sbb
add
rcr
dec
xor
nopl
add
lahf
add
push
ret
jmp
enter
sub
pop
mov
jo
test
inc
movsl
std
and
push
adc
cmpl
dec
shl
popa
jle
jecxz
jl
add
sub
add
sbb
mov
adc
xchg
cli
sbb
cmp
push
and
pop
or
stos
ret
adc
pop
rol
sarb
test
mov
and
out
inc
fidivl
or
mov
loop
loopne
or
push
push
jle
rep
rclb
push
add
das
shll
movsb
mov
rcll
adcl
fsubr
aas
jge
enter
fst
adc
dec
sbb
lret
inc
js
push
xor
pop
xor
mov
mov
inc
outsb
add
test
jle
xchg
add
sbb
gs
jo
push
inc
and
add
cmp
jle
add
pushf
call
jecxz
adc
outsb
push
mov
lock
pop
dec
sbb
lret
or
repnz
adc
inc
adc
ljmp
lret
mov
int
jo
mov
add
not
stos
fs
push
adc
scas
add
cmp
inc
push
scas
xchg
push
inc
add
lret
in
push
jo
mov
bound
sbb
orl
xor
enter
cmpl
mov
les
mov
xor
inc
je
mov
pop
adc
sub
inc
mov
les
pop
rcl
xor
ffreep
subb
and
aaa
rorb
fcmovbe
ret
xor
push
xchg
pop
sub
push
add
xor
dec
lret
pop
add
or
push
xchg
test
movsb
pushl
test
adc
cmpl
arpl
jmp
and
and
jo
xor
push
sbb
inc
xor
xchg
popl
inc
mov
adc
pop
aas
push
data16
sub
inc
and
mov
mov
jp
mov
sbb
jo
and
gs
jle
lock
das
and
sbb
je
orl
inc
aam
push
sbb
adc
rcrl
mov
leave
aad
divl
mov
push
fbld
mov
mov
or
dec
mov
xor
sub
lea
push
or
jle
adc
mov
dec
dec
dec
or
scas
mov
adc
leave
mov
add
sbb
inc
sbb
jne
cmpl
or
sbb
mov
mov
cmp
or
add
inc
js
jl
je
xor
push
icebp
nop
push
shrl
xchg
mov
lahf
mov
add
rclb
sbb
inc
jo
daa
test
test
pop
push
xadd
shll
mov
fstpl
in
push
sbb
push
push
dec
je
or
or
inc
sbb
rcrl
adc
fldl
data16
inc
mov
repnz
pop
shlb
xor
add
mov
je
inc
pusha
add
ret
test
iret
add
outsl
pop
andl
push
out
pop
inc
lret
mov
loop
jecxz
clc
or
jmp
mov
push
in
adc
and
outsb
dec
scas
dec
mov
loope
dec
add
adc
jne
out
pop
or
add
mov
mov
sub
testb
leave
mov
ret
adc
mov
test
jnp
sbb
lahf
mov
jnp
jo
cld
xor
dec
mov
or
adc
aad
sbb
test
pop
call
sbb
nop
fisttpl
dec
push
add
inc
das
inc
jbe,pn
sbb
loope
add
cmpl
mov
js
lret
cmp
add
or
ja
cmp
sub
mov
and
pushl
pop
and
push
pop
cmp
popa
ffree
or
lcall
or
ret
sub
subl
cwtl
cmc
test
sub
sub
insl
pop
push
mov
add
fldz
adc
lods
sub
mov
lea
and
loop
test
or
mov
adc
push
sbb
push
add
lock
sub
pop
mov
jnp
jo
pop
push
sub
insb
loopne
mov
cmp
jnp
add
mov
inc
add
sub
inc
add
sub
adc
add
pop
mov
push
lods
ret
cmp
je
xor
xchg
mov
inc
cmc
add
dec
sbb
dec
xor
cld
add
sbb
inc
mov
mov
fdivrs
pop
push
lods
pop
rol
xchg
fwait
and
std
mov
push
cwtl
mov
mov
add
cs
bound
int3
cmpl
pop
pop
fisttpll
stos
loop
mov
cld
push
cmp
push
mov
push
push
addb
cmp
xor
push
sub
cmpsb
push
mov
pop
push
xchg
jge
jbe
in
in
cld
data16
dec
sarl
inc
mov
mov
inc
adc
xchg
imul
je
xchg
pop
mov
push
ret
mov
inc
xor
adc
fs
mov
andl
mov
popf
mov
push
adc
sarb
jg
mov
aas
and
cmp
or
testb
or
lret
loop
mov
xchg
push
mov
adc
inc
xor
mov
ret
pop
movsb
jecxz
or
mov
cltd
push
test
orb
mov
stos
test
cld
xchg
cmp
loop
xchg
add
pop
push
cmp
xor
pushl
dec
pusha
insb
test
pop
add
lds
stos
mov
ficomps
and
cmc
add
test
in
mov
jmp
into
and
jg
add
fldl
xor
sbb
fstsw
sahf
jae
fiadds
dec
jne
mov
lods
cmp
loopne
das
enter
lods
stos
adc
js
loop
jg
cli
pop
lock
mov
jmp
lock
mov
jmp
mov
jg
push
add
insl
cmp
push
add
gs
sub
inc
sub
push
sbbb
and
fwait
mov
sbb
pop
or
sub
push
jl
fwait
sbb
and
xor
fwait
hlt
pop
pavgw
fwait
dec
add
call
jo
dec
je
add
jmp
bnd
in
test
mov
jl
loope
sbb
mov
sbb
or
add
add
adc
cmp
mov
or
call
dec
sub
or
or
push
pop
aas
mov
std
decl
cmp
jne
and
jmp
sbb
pop
add
rorb
es
or
mov
rcl
mov
pop
mov
dec
push
inc
mov
cmpsl
aas
aas
pop
mov
fstps
inc
cmc
leave
ret
in
sbb
cmp
xchg
or
add
pop
movl
aaa
dec
ds
or
dec
adc
ret
shrb
sub
loop
dec
add
ret
sti
push
adc
mov
jl
or
cmp
xor
mov
bound
or
addb
jmp
cmp
loop
pop
ljmp
inc
fs
jne
lea
add
and
pusha
daa
out
adc
clc
cmpb
leave
sbb
aad
dec
sub
popa
add
setbe
or
fists
sbb
pop
add
mov
stc
lods
jbe
mov
inc
addr16
jne
lret
or
sbb
imul
cmp
push
and
icebp
jbe
jl
call
jp
add
mov
fnstenv
xor
xchg
shll
cmp
popf
or
adc
push
adc
into
add
adc
xchg
xchg
cltd
push
shr
adc
inc
jo
adc
div
ja
push
add
inc
add
cmove
inc
and
jmp
xor
mov
push
xor
stos
jle
adc
jne
outsb
xchg
inc
jle
repz
stos
jae
xor
adc
test
cmpps
or
jg
add
imul
sbb
jle
mov
fidivs
xchg
cmpsl
or
or
rol
mov
dec
cmp
out
movb
sbb
jbe
orl
mov
out
call
mov
jne
or
loopne
cmp
mov
cmpsb
jb
or
sub
pop
loopne
divb
mov
cmpl
aas
mov
cwtl
mov
mov
test
mov
bound
sbb
jg
scas
cmpsl
popa
dec
shlb
movsl
xor
das
sub
loope
xor
testl
out
pop
xor
in
xchg
or
cmp
push
mov
sub
je
pusha
push
lock
std
inc
jl
mov
data16
push
add
adc
push
push
arpl
mov
sbb
mov
sbb
jo
movsl
gs
jmp
or
sub
sti
pusha
and
les
mov
mov
movb
into
or
push
xchg
je
sbb
adc
push
add
pop
int
jo
pop
or
out
sbb
or
flds
push
push
maxpd
test
cmp
lds
xor
fcoml
test
jbe
and
xchg
aas
mov
lea
add
push
orb
xchg
fcmove
xor
int
add
pop
cmpl
aam
daa
jne
push
pop
mov
pop
fdivrl
mov
dec
pop
mov
add
mov
xlat
movsl
cld
push
jne
enter
icebp
dec
insl
test
add
inc
xlat
or
or
dec
mov
xor
adc
das
and
filds
push
mov
pop
xchg
sub
or
and
add
push
test
pushl
pop
pusha
inc
xor
rolb
add
mov
dec
test
jl
pop
add
adcl
test
jl
cmp
jge
sub
out
addr16
insb
in
outsl
shlb
sbb
xor
jg
xchg
mov
pop
add
mov
sbbl
mov
and
push
push
add
add
clc
icebp
mov
loopne
fs
mov
adc
lea
scas
cli
lret
lahf
sub
add
inc
add
je
cmp
push
adcl
mov
mov
ljmp
negb
jmp
or
jg
les
adc
xor
jg
inc
movb
push
mov
or
call
fldcw
jge
xor
sub
movsl
push
rclb
cmp
cmp
mov
fiadds
jp
xchg
sbb
pop
and
jle
fs
inc
sahf
inc
ds
mov
in
notb
add
fnstsw
lcall
leave
sub
sahf
fisubrl
jmp
sub
jmp
pop
jne
mov
add
cmc
adcl
outsb
test
rolb
cmp
or
add
push
iret
add
xchg
jae
jge
mov
jmp
sub
jmp
sub
and
arpl
xchg
int3
inc
cli
inc
push
mov
in
or
pop
rep
push
jne
mov
adc
lock
je
lret
sbb
inc
jb
cmc
add
nop
adc
mov
in
push
push
adc
loop
dec
pop
inc
js
mov
xchg
pop
xchg
mov
or
pop
xchg
and
jl
lods
rolb
jl
inc
adc
jb
sub
mov
mov
sub
in
jl
pop
test
insl
pusha
aam
add
test
pop
hlt
dec
cmp
loopne
cmp
ja
jmp
push
dec
push
mov
fcomi
popa
push
in
add
flds
enter
mov
add
jmp
or
or
mov
rclb
fldl2e
push
jbe
xchg
mov
ds
mov
xchg
pop
push
ljmp
out
xorb
inc
mov
lds
jne
and
or
mov
mov
pop
xor
cmp
cs
xchg
sbb
sahf
cmp
pop
addl
movsb
sbb
mov
sub
push
add
xchg
fimull
pop
jmp
sub
jmp
sub
mov
pop
rorb
inc
pop
pop
mov
sub
inc
jecxz
arpl
dec
daa
sbb
inc
lods
cmpsb
mov
ljmp
mov
cli
or
orl
out
jb
mov
add
add
rorb
sti
mov
lcall
or
outsb
sub
ss
push
dec
push
dec
ja
fidivs
shl
and
iret
jp
jno
jno
sub
call
sbb
rcrb
push
in
adc
outsl
mov
dec
push
fisubl
sub
fimuls
popf
shr
insl
xchg
shlb
and
iret
push
mov
jmp
aas
mov
inc
add
pop
lds
add
xchg
adc
push
jno
mov
das
sub
xor
nop
cltd
adc
jecxz
jecxz
test
xchg
fidivl
js
inc
loopne
or
dec
addr16
adc
and
hlt
mov
fnstenv
je
sar
mov
and
lock
sbb
lea
pop
add
iret
lcall
jne
adc
imul
jo
jmp
add
in
pop
fsubrl
loopne
jl
test
dec
mov
das
push
pusha
pop
jle
add
dec
cmp
out
and
or
mov
pop
aad
inc
mov
je
or
adc
iret
or
pop
roll
cmp
add
cmp
jmp
inc
jecxz
add
adc
or
outsl
mov
lret
fnstenv
or
cmp
rcrb
clc
and
and
incl
hlt
push
or
mov
push
pop
add
mov
push
pop
cmp
arpl
rorl
pop
cmpsl
jne
add
add
lods
cmc
mov
and
insb
or
loope
decl
incb
jl
mov
rolb
sbb
jg
cmp
push
popa
jne
push
pushl
xor
aaa
pop
ret
and
push
sbb
push
mov
notl
fwait
adc
sub
es
xchg
xorb
bound
lds
jo
jo
aas
sub
push
cmp
mov
and
cmp
xchg
jo
inc
hlt
cmp
fcoml
lods
test
loopne
pop
adc
call
mov
add
out
and
pop
jno
xchg
jle
mov
dec
and
xor
pop
xchg
cmp
imul
pop
in
push
fnsave
xchg
add
xor
jne
gs
nop
or
adc
sbb
adc
imul
out
cmpsl
dec
inc
push
cmp
mov
loop
sahf
mov
add
pusha
push
out
mov
addb
data16
jmp
ffreep
push
mov
jne
pop
call
lock
and
xchg
or
mov
scas
mov
inc
lods
and
rcll
ljmp
adc
sbb
inc
shll
enter
andb
ficoml
sub
push
lods
push
sub
sub
mov
add
shll
idivl
fwait
jl
cwtl
push
outsl
js
cs
push
and
push
in
push
lds
clc
and
ds
cmpsl
mov
addr16
xlat
rcrl
sbb
aas
mov
sbb
push
push
notb
dec
test
jl
inc
mov
and
mov
jp
adc
mov
jle
roll
aam
mov
pop
cmc
mov
orb
xor
lret
mov
add
sbb
pusha
adc
push
or
push
adc
push
mov
shlb
js
pop
adc
je
dec
or
fs
roll
ja
or
mov
into
cltd
push
inc
mov
push
callw
adc
ret
test
int3
inc
dec
add
pop
bound
or
out
add
sbb
cmp
sbb
pop
shr
mov
and
mov
push
mov
mov
xchg
pop
jne
test
lods
add
cmp
rolb
ret
cmc
mov
cli
sub
add
push
cmp
push
test
mov
mov
mov
dec
jnp
adc
rsm
jne
mov
push
sbbl
and
sbb
in
mov
push
add
push
ss
sub
add
pop
add
fdivs
ret
lds
cmp
pop
lods
dec
jb
shr
jns
icebp
xorl
sbb
xchg
rolb
push
push
pop
scas
loope
rcr
xchg
les
pop
mov
push
xor
daa
andb
push
push
aam
pop
mov
stos
icebp
push
cmc
xor
adc
add
idivl
ljmp
loopne
dec
call
xorl
jmp
xchg
and
leave
je
add
lahf
test
sbb
push
xor
push
rorb
add
jp
push
mov
cmp
push
cmp
push
xlat
into
flds
mov
cli
xchg
ffreep
pop
lret
mov
icebp
sbb
add
mov
mov
add
cmp
and
sub
lahf
out
mov
ds
xor
or
or
aam
mov
and
push
add
mov
lea
push
push
int
ficomps
jno
enter
jne
gs
and
pushf
mov
shl
jae
mov
xor
das
xor
insb
mov
ds
xor
lsl
cmc
popf
add
verr
jnp
cmp
and
and
push
rcl
mov
lret
lods
jge
pusha
inc
jb
adc
in
add
xchg
push
mov
sahf
adcl
mov
nop
add
jae
mov
cmpsb
and
movl
inc
lea
push
sbb
scas
mov
push
orl
pop
mov
dec
jne
cmp
push
mov
adc
sbb
mov
cmc
stc
and
inc
or
adc
push
ret
inc
adc
inc
sbb
or
xor
mov
jbe
xchg
repnz
and
data16
mov
mov
sub
jg
addl
pop
mov
dec
xchg
aas
popa
imulb
mov
cmp
push
sbb
xor
push
out
jo
rorb
pushf
adc
jge
aas
push
inc
cmp
cmp
pop
sub
je
icebp
xchg
icebp
and
jge
leave
cmp
call
sub
push
pop
add
inc
sbb
mov
sub
mov
adc
test
fildll
test
or
adc
out
arpl
add
mov
mov
or
mov
test
jne
pop
inc
clc
xchg
xchg
push
inc
je
pop
inc
jo
and
xchg
loopne
adcl
es
mov
rolb
xor
test
and
jle
mov
in
stos
xchg
pop
test
sahf
adc
lods
mov
push
push
js
xchg
inc
mov
cmpb
pop
lock
inc
sbb
vpminsb
lret
add
and
push
rolb
aas
and
in
call
mov
mov
adc
sbb
push
rcrb
push
xor
push
or
loopne
iret
inc
add
mov
cmp
push
xchg
mov
sbb
inc
sarb
sbb
rol
clc
addr16
mov
inc
mov
lcall
xor
subl
push
xchg
data16
mov
sbb
loop
out
sub
cmp
fmull
inc
push
jo
xor
sub
pop
jb
rorb
add
clc
add
push
mov
pop
xchg
pop
or
jl
sbb
cmp
add
movsl
cmp
cmp
popa
in
xchg
cmpb
mov
mov
inc
popa
jne
sbb
or
in
add
cmpsb
xchg
inc
pop
lods
out
or
cmpsb
push
push
fwait
pop
in
xchg
xor
xchg
je
xchg
shlb
mov
icebp
idiv
push
push
add
mov
inc
add
sbb
mov
loop
add
add
jae
outsb
notl
push
jo
fildl
outsl
push
testl
loopne
call
pop
xor
pop
jle
mov
pop
sbb
clc
dec
dec
mov
mov
add
dec
jg
add
sub
or
aaa
pop
je
mov
or
xor
pop
push
je
push
loope
cmp
jmp
xchg
jne
mov
mov
outsl
out
push
mov
mov
in
pop
aam
pop
mov
inc
sbb
jmp
push
ljmp
xchg
mov
cmpl
mov
mov
add
push
add
rcrl
sub
and
push
push
mov
xchg
rcr
rorb
loope
leave
add
adc
pop
out
or
lcall
jecxz
in
xchg
or
outsl
jae
mov
sub
sub
pop
ret
or
imul
pop
lock
mov
jno
into
fadds
adc
mov
dec
mov
outsb
sub
xchg
push
mulb
adc
sbb
push
mov
push
je
inc
adc
clc
pop
mov
xchg
cli
dec
cmp
jne
outsb
inc
lods
push
sub
dec
pusha
push
pop
int
pop
notl
jo
xor
pop
mov
mov
lea
sub
stos
shl
add
jne
cmp
push
and
cmp
ret
aam
push
fs
lahf
pop
inc
mov
outsl
sahf
mov
cld
cltd
xor
xor
sti
mov
add
mov
xor
into
push
sbb
fs
fwait
add
shrb
or
pop
test
mov
sub
lods
add
clc
push
inc
jmp
lret
sub
and
or
and
lea
and
cld
xchg
ds
or
test
mov
imul
popf
je
or
push
push
rcrb
sbb
scas
bound
dec
pop
imulb
and
or
hlt
dec
loopne
mov
shr
dec
inc
test
cmp
and
dec
fldl
and
sub
and
dec
mov
inc
xor
xchg
aaa
xchg
mov
cmp
pop
nop
dec
mov
imull
xorb
bound
and
jl
xchg
rorb
lock
xor
sub
addb
push
add
or
shlb
adc
push
sbb
and
test
cwtl
cmc
ds
add
add
lahf
jge
fld
rorl
gs
cs
aaa
dec
or
cmp
mov
xor
aas
or
nop
ret
rcl
adc
shlb
ret
inc
leave
faddl
or
jp
mov
adc
mov
mov
dec
js
adc
sub
outsl
cmp
punpckhdq
jmp
or
fdivrl
cwtl
imul
dec
js
lea
mov
push
lea
movsb
mov
out
pop
into
cmpl
jl
mov
jne
cwtl
mov
mov
xor
jmp
dec
pop
add
xor
adc
cmp
dec
xor
test
fistps
lods
sub
rorb
add
daa
sub
inc
sbb
pop
sbb
push
cmp
loopne
loopne
fcmovnb
push
add
add
inc
rclb
add
test
push
cmp
or
imulb
jp
cmpb
pushl
add
mov
movsb
hlt
addl
xchg
arpl
adc
notb
mov
mov
push
dec
inc
inc
adc
add
fistpll
or
cmpsb
hlt
or
into
mov
rclb
cmpsl
loopne
cli
fcomi
shr
push
sub
push
int3
mov
incb
je
aaa
test
hlt
add
mov
test
or
pusha
jns
adc
mov
add
and
scas
pop
enter
xor
cmp
js
sbb
sbb
cmpb
mov
mov
jne
mov
sti
or
jne
rcrl
and
fcomps
mov
loop
loopne
and
ffree
and
add
inc
jge
xchg
mov
loope
inc
push
mov
int
sub
adc
pop
adc
sub
xorb
cmpsl
jmp
inc
jecxz
ret
cmp
jle
mov
mov
mov
sbb
mov
mov
sbb
inc
or
xchg
adc
scas
mov
cmp
pop
lods
dec
ja
test
xor
jb
std
and
ss
sbb
jmp
es
xchg
andb
jmp
adc
jmp
das
xor
cmp
cmp
gs
inc
in
adc
test
and
ss
das
dec
adc
and
dec
sbb
push
mov
ret
xchg
and
pop
jo
mov
or
clc
jne
cmpl
mov
pop
xor
sbb
fucomi
sub
mov
iret
or
dec
pusha
or
testl
and
mov
mov
xchg
ret
loope
loope
xor
lods
and
push
and
jge
lret
jecxz
mov
mov
mov
nop
fcomps
cld
mov
mov
inc
or
xor
push
cmp
std
jge
cmp
jg
ss
sub
in
xor
cmpsb
sub
roll
arpl
ds
cmp
xor
or
or
jb
clc
lcall
sub
push
popa
jns
push
and
jmp
ficoms
lcall
sahf
mov
push
stc
test
push
pop
jne
xchg
sti
lret
mov
arpl
pop
cmp
and
loope
nop
mov
jae
sbb
xchg
mov
in
cmp
adc
add
add
filds
push
mov
xchg
sbb
or
stos
dec
rolb
or
add
shl
lcall
push
xchg
insb
mov
out
jnp
cmpsb
sub
pop
lock
and
xorl
jmp
xor
lds
add
fdivl
dec
xor
or
out
push
in
add
sub
sbb
or
and
push
or
jnp
inc
sbb
xor
cmp
cmpb
pop
arpl
push
and
ret
std
jmp
lahf
mov
add
rclb
stc
andb
fidivrl
add
jle
push
and
push
jo
jo
cli
or
loopne
xor
jge
push
fs
cli
cmp
fs
xor
pcmpeqw
mov
adc
pop
loopne
cwtl
test
and
int
nop
xor
insb
jg
cmp
adc
mov
cmp
mov
sbb
sub
aad
test
mov
pop
cmp
sbb
add
push
flds
push
or
lahf
mov
movb
jle
cmpl
or
mov
test
pop
xor
push
jl
fildl
jne
pop
add
inc
aam
sub
dec
push
fdivrs
dec
mov
and
incl
add
test
add
sub
fsubrl
nop
mov
xor
pop
ret
cmp
test
cmp
lret
scas
add
aam
ljmp
in
sub
cmpb
mov
daa
inc
mov
adc
out
leave
jno
push
test
ficoms
rorb
sbb
cmpl
dec
fstp
scas
ret
addb
imul
cmp
jne
add
add
inc
loopne
arpl
jns
bound
dec
xchg
dec
pop
ds
popa
call
fnsetpm(287
arpl
cmpl
push
xlat
jbe
mov
lock
dec
cmp
mov
cmp
mov
cmp
jne
rcrl
mov
cmp
push
jns
pop
pop
call
add
rorl
push
cli
cmp
call
pop
inc
jge
cld
insl
dec
adc
pop
mov
push
mov
ret
mov
subb
imul
sbb
sbb
add
push
mov
xor
push
mov
sub
cmp
bound
or
pop
cmp
loopne
imul
mov
movsl
rcrb
fisubrs
clc
or
sbb
sbb
call
pop
loop
and
repnz
pop
jle
ljmp
xor
clc
test
ret
scas
mov
ret
ljmp
mov
rclb
mov
and
xor
and
jne
and
inc
push
cmpsb
mov
arpl
jl
add
adc
adc
cld
loope
sbb
pushf
mov
xor
test
mov
adc
add
ror
inc
mov
jns
das
adc
xchg
popf
or
inc
inc
push
sbb
jb
pop
or
mov
popa
sub
lock
push
loopne
adc
add
in
push
push
push
push
mov
bound
into
add
xchg
or
popf
dec
je
push
sub
test
push
outsl
or
pusha
cmpsl
ret
ljmp
or
mov
inc
cmpl
jns
or
movl
pop
sbb
or
fsubl
or
dec
es
or
jmp
cmpsl
cwtl
cltd
and
je
pop
ja
sub
inc
jmp
and
lcall
add
mov
jge
mov
rcll
inc
or
jge
mov
call
aaa
jbe
and
test
daa
and
icebp
xchg
xchg
leave
cmp
ljmp
xor
inc
pop
int3
push
call
mov
xor
test
add
shlb
sub
lods
fisttpll
xorb
cmp
push
cmp
fucomp
dec
jmp
add
mov
sarl
inc
rcrl
add
in
pusha
push
pop
loope
rcrb
clc
mov
je
lock
lock
push
cmp
sub
cmp
pusha
in
mov
lock
fidivl
les
adc
mov
push
mov
cmp
mov
inc
movl
inc
mov
sub
sub
movsb
and
push
ds
push
push
rclb
call
add
shlb
ljmp
mov
pusha
call
test
hlt
lock
pop
inc
rcrb
inc
add
pushf
dec
inc
sub
jbe
add
push
inc
dec
sub
mov
fs
add
das
fdivrs
daa
mov
sbb
mov
xchg
adc
les
sbb
push
arpl
pop
push
mov
jecxz
add
inc
rcrb
pop
dec
lds
enter
xchg
add
mov
flds
adc
andl
pop
sub
dec
push
out
test
mov
ja
mov
sub
adc
mov
xchg
push
add
data16
xor
in
fldenv
ret
jecxz
add
pushf
cmp
cmp
mov
jmp
rcr
xor
cmp
pop
push
dec
test
je
mov
inc
fmull
dec
and
addb
or
pop
xchg
pop
cmp
les
ret
or
mov
ret
lock
or
hlt
movsl
and
repnz
sub
popa
push
mov
or
roll
imul
sarb
enter
scas
push
scas
pop
fwait
adc
fcoms
or
push
dec
in
sub
lock
mov
jmp
dec
sub
out
adc
push
push
adc
test
xchg
adc
inc
mov
sbb
or
mov
test
sub
and
sub
add
sbb
inc
mov
xor
sahf
xlat
movsl
or
rclb
or
aaa
hlt
and
add
xor
rorb
lods
dec
pop
and
or
mov
jnp
or
je
and
sub
xor
mov
lock
jne
jp
adc
das
mov
mov
data16
adc
push
dec
push
or
mov
jl
rcr
xchg
fcoms
sbb
jo
sti
sub
sbb
cmp
xchg
fwait
test
mov
mov
cmpl
xchg
rclb
scas
fwait
or
push
in
aas
inc
mov
push
jns
cmpb
ret
test
fcmovnbe
shlb
xchg
jae
add
popa
test
jb
ret
add
loop
movsl
dec
repnz
cmp
add
jmp
arpl
cmp
aaa
and
dec
push
fs
fs
ds
divb
pop
pop
lret
enter
mov
ficoms
or
pop
lahf
arpl
adc
or
sub
lods
mov
std
sbb
fisubs
inc
xor
pop
add
das
insb
sub
je
sbb
xchg
lock
orb
pop
outsb
popf
fidivrl
push
imul
and
mov
add
and
or
es
inc
sub
daa
pop
push
push
and
addl
pusha
adc
imul
xchg
mov
adc
popa
xchg
cmp
lock
mov
je
xor
mov
adc
add
and
fwait
jecxz
push
inc
inc
push
imul
inc
mov
sub
cli
xchg
adc
testb
lock
xor
adc
movsl
sub
push
bound
jbe
add
sarb
out
mov
out
nop
inc
test
inc
or
sbbl
inc
xor
dec
dec
sub
pop
hlt
push
fs
inc
mov
jo
inc
push
in
mov
divl
adc
xor
gs
stos
fisttps
add
sbb
pop
xchg
call
test
add
popa
add
fadd
mov
inc
and
xchg
andl
push
je
loopne
fimull
sbb
call
lock
clc
mov
mov
jne
shlb
rcr
pop
je
loopne
fcoml
pusha
ja
pop
les
mov
sbb
mov
adc
push
adc
clc
loope
xchg
jne
orl
ret
fadds
add
in
pop
rorb
or
xor
pop
cmpsb
mov
test
xchg
jns
inc
add
mov
jmp
pop
call
inc
jbe
push
daa
dec
pop
imul
outsl
movsb
dec
add
call
decb
test
lods
pop
and
adc
inc
or
add
inc
pusha
sub
adc
add
inc
inc
icebp
adc
dec
test
jbe
mov
xchg
idiv
jmp
jl
adc
push
and
sub
sub
pop
movswl
loope
cmp
lcall
inc
cmpw
mov
add
mov
iret
daa
mov
add
adc
gs
popf
pop
shrb
mov
push
daa
xor
xchg
jg
std
cmpl
int3
pop
and
or
scas
outsl
aas
test
mov
cmp
aaa
movb
add
daa
add
cwtl
andl
stc
or
fwait
dec
xchg
xchg
xor
mov
pop
push
shr
inc
aaa
insb
nop
imul
jo
orl
repz
jge
push
out
aas
add
or
enter
in
mov
jnp
push
push
test
sub
insb
adc
sarb
or
sub
adc
aad
js
cmpb
add
jb
xchg
movsl
cwtl
push
or
rcrl
adc
out
sarl
fcoms
arpl
xlat
sahf
xchg
xchg
pop
scas
sub
mov
stos
adc
adc
push
pop
pusha
clc
mov
je
push
inc
repz
mov
ds
ss
ss
mov
shll
or
sbb
mov
jecxz
cmp
cwtl
mov
loop
push
mov
or
out
ss
cmp
mov
out
repnz
sub
pusha
hlt
lock
rorb
sbb
test
mov
or
mov
into
mov
test
jl
xchg
loop
popl
or
push
cmp
popa
mov
mov
test
ljmp
fists
in
imul
add
popf
mov
adc
imul
jle
add
loopne
and
jmpw
ret
pop
mov
pusha
add
sbb
add
and
lods
pop
push
iret
and
loopne
mov
and
inc
sub
into
je
mov
rol
fxch
add
loop
add
subl
pushf
sbb
mov
mov
jo
lret
adc
je
pop
sub
aad
ret
mov
mov
pop
les
push
jne
sub
and
xchg
pop
jne
lea
les
xchg
push
inc
loop
in
inc
push
pusha
push
add
data16
rorb
js
mov
mov
sub
ss
loopne
and
xchg
pop
movsb
cmpsb
adc
daa
aas
jmp
insl
inc
and
jle
mov
dec
cmp
jl
adc
push
sbb
adc
imul
xor
jne
arpl
nop
inc
das
out
mov
pusha
loop
jne
js
or
adc
push
adc
or
aam
andl
push
call
sar
add
ja
add
push
xchg
dec
dec
test
loope
mov
add
pusha
fdivs
and
or
push
cli
popa
das
and
ja
pop
add
dec
paddusw
leave
sahf
jecxz
push
cmp
pop
inc
jcxz
xlat
fs
lcall
and
pop
fildll
sub
fcmovb
or
xchg
xorl
jae
add
xor
jno
xchg
dec
cld
cld
xchg
xchg
push
sbb
xorb
adc
lock
das
fimuls
lods
rolb
sahf
or
adc
lret
orb
js
jo
insl
daa
loopne
sbbl
or
jo
add
movsl
lock
fcomps
adc
pop
pop
push
xchg
adc
ja
jno
test
outsl
inc
mov
push
mov
or
xchg
pusha
push
xor
jle
mov
dec
pop
pop
pop
imul
repnz
test
insb
sbb
movsl
push
push
adcl
out
psrld
pop
test
inc
in
pop
dec
aaa
or
ss
or
pop
or
daa
push
inc
lcall
jg
sbb
decb
pop
icebp
call
mov
sub
push
mov
push
xchg
or
cmc
lds
lea
or
add
icebp
dec
push
or
pop
dec
and
pop
xor
adc
std
cmp
js
mov
push
add
sbb
or
clc
js
jg
pop
incl
cmp
ds
clc
inc
mov
jg
popa
or
mov
cmp
dec
out
cmpb
inc
sbb
test
ss
mov
cmp
rcrb
popa
and
and
jp
jae
adcl
fs
icebp
xchg
aaa
add
add
lods
sbb
lea
inc
movsb
and
cmpb
aam
add
inc
lea
and
lea
movzwl
add
xchg
xor
jmp
mov
lds
sbb
jo
xchg
sbb
push
push
jns
test
loope
sbb
push
or
and
fstpt
fisttps
hlt
push
mov
lea
mov
adc
aas
inc
inc
pusha
mov
xor
mov
xchg
adc
pop
testb
or
push
and
add
subl
mov
stc
or
andb
dec
xor
push
jge
sbb
sbb
dec
or
pop
or
jb
cwtl
rol
mov
mov
je
pusha
add
es
pop
cmp
sbb
and
inc
jne
adc
mov
cmp
or
xchg
dec
xchg
push
push
sbb
jmp
xor
xlat
mov
push
roll
push
add
lock
outsl
fbstp
stos
in
js
and
sub
mov
data16
aam
mov
xor
and
mov
mov
popf
into
addb
add
sti
pusha
rcr
js
adcl
jne
pop
pop
sbb
movsb
push
imul
je
add
jge
add
or
jne
imul
clc
dec
xchg
sbb
stos
mov
xchg
adc
mov
jl
je
sbb
int3
enter
inc
sahf
out
inc
rcrl
mov
int
cmpps
dec
adc
or
movsb
addl
js
movb
add
psubusw
and
sbb
dec
cmc
adc
push
in
mov
fs
mov
pop
enter
js
xchg
push
loopne
notl
outsb
push
clc
stc
and
adcb
lret
rcrb
xchg
mov
fsubrs
dec
ds
shlb
daa
adc
push
add
mov
stos
sbb
cmp
daa
push
mov
pop
mov
fiadds
add
push
decl
push
fimuls
jmp
in
popa
cmp
push
ret
sarl
loope
arpl
es
shlb
adc
push
ja
rcrb
jnp
or
jmp
dec
cmp
rolb
push
jo
mov
aaa
mov
pop
inc
and
adc
add
fwait
mov
add
clc
pop
sbb
aaa
cmp
fnstenv
sbb
rol
popa
daa
jp
xor
ljmp
stos
movsl
into
or
popa
or
pop
cmpsl
adc
sub
xlat
mov
test
ja
adc
sub
mov
loope
ljmp
sub
sub
jne
mov
sbb
in
cmc
rcr
jp
mov
push
lahf
stc
mov
fisubrs
in
or
cmp
ror
pop
stc
mov
adc
sbb
test
das
popa
test
dec
sub
lea
mov
dec
cmp
pop
pop
pop
inc
mov
and
add
adc
aaa
lret
rclb
faddl
lret
cli
sbb
shlb
add
dec
rorl
and
add
call
push
lock
adc
jne
sbb
xor
adc
or
push
xchg
pop
dec
in
sub
jmp
adc
push
mov
pusha
and
inc
das
mov
sarb
add
add
push
decb
adc
cmp
jg
ss
movsl
dec
test
jno
arpl
or
rcll
adc
adc
push
or
adc
xchg
imul
mov
push
lods
xor
mov
push
test
orl
mov
pop
pusha
cmp
xchg
loopne
sahf
pop
jb
adc
dec
add
or
pop
push
dec
inc
add
push
adc
add
push
xor
mov
and
adc
mov
pop
mov
mov
out
nop
inc
in
icebp
lret
loope
push
pop
jnp
pushf
xorb
popf
jne
add
or
pop
or
sbb
cmp
je
jg
sti
push
cwtl
sub
push
je
add
pop
jmp
add
js
mov
inc
je
jmp
dec
add
frstor
jmp
mov
cmp
into
dec
cmp
rolb
mov
mov
dec
nop
lds
loopne
mov
push
add
add
mov
or
repnz
lods
testb
adc
push
jle
mov
push
sbb
jmp
insb
push
xchg
add
rolb
adc
fcom
inc
pop
pop
cmp
jb
inc
test
push
xchg
test
aas
xor
jne
mov
push
in
faddl
and
push
sbb
data16
movaps
les
sub
sbb
jnp
jne
or
inc
dec
jne
push
lods
mov
test
mov
push
mov
clc
dec
inc
or
push
push
inc
adc
imul
mov
adc
cmp
adc
and
add
jecxz
add
lea
pop
lea
ss
add
add
jge
lods
adc
cmp
mov
inc
mov
and
mov
add
mov
hlt
ret
cs
clc
repz
and
addr16
sbb
jecxz
xor
lahf
test
sbb
sbb
fs
arpl
popf
push
sub
xchg
inc
xchg
dec
mov
js
lods
pop
jmp
cmpb
pop
hlt
sub
cld
mov
bound
push
rolb
faddl
sub
aas
hlt
or
adcl
jecxz
scas
lock
add
les
or
dec
in
je
push
mov
or
fdivs
loope
push
clc
insb
inc
xor
dec
push
mov
into
or
xchg
rcrb
jne
add
push
pop
aas
jle
or
jmp
lret
jne
inc
ret
mov
fnstcw
sahf
scas
inc
add
adc
loopne
mov
fadd
mov
dec
jne
repz
add
xchg
mov
push
pusha
and
mov
xchg
inc
inc
or
sub
push
cmp
ret
and
mov
or
and
push
push
call
test
rorb
mov
lock
cmp
mov
inc
test
dec
pop
mov
ret
je
fildl
test
insb
pop
outsl
jmp
xchg
jp
mov
cmp
xchg
daa
and
adc
and
pop
pop
jo
adc
jle
add
into
popa
sbb
push
out
pop
dec
add
push
lds
pop
pop
sub
pop
xor
shr
xchg
lds
dec
push
xor
pop
push
leave
ss
test
out
outsl
mov
add
mov
push
fwait
mov
ret
and
or
cmp
dec
pushf
push
fdivrl
push
je
push
dec
mov
es
sbb
cmp
and
pop
fcomps
mov
mov
adc
add
jge
pusha
cltd
or
rolb
mov
rolb
sbb
cli
dec
mov
call
mov
add
stos
lock
rolb
pop
dec
add
test
fbld
inc
dec
jne
pop
add
push
dec
pop
add
movl
adc
xchg
and
add
sub
mov
mov
add
xor
lea
mov
adc
push
imul
ficoms
add
sbb
xchg
mov
add
adc
out
jne
mov
add
jp
inc
add
mov
add
push
pop
lds
push
push
addl
andl
daa
sub
cmp
lds
push
cmp
pop
add
and
add
or
xor
push
iret
aaa
push
xor
jae
or
jg
or
bound
faddp
lock
jl
xchg
mov
out
pop
loop
cmp
jne
jmp
in
mov
mov
cmp
inc
sbb
cmp
jge
sbb
dec
sbb
adc
pop
ror
aam
ja
push
cmp
xchg
add
cmp
jle
aas
pop
push
sbbl
or
and
xchg
mov
or
fiaddl
adc
dec
cmp
adc
mov
andb
xor
mov
pushf
cmpsb
dec
adc
das
xchg
and
inc
sbbb
lret
inc
xchg
idivl
ja
outsb
xchg
adc
lock
mov
push
enter
mov
xorb
andb
repnz
jge
adc
sub
cs
mov
push
ljmp
jg
fiadds
pop
jl
mov
push
xor
sbb
add
mov
aaa
xor
cmp
hlt
repnz
adc
cmp
jne
shlb
jb
jnp
pop
and
mov
pop
lret
dec
insb
test
sahf
push
pushf
xchg
or
rorb
fimull
sahf
xor
je
mov
mov
shll
and
incl
and
cmp
cmp
mov
cmp
stc
sub
js
es
or
sbb
imul
add
das
mov
shlb
adc
push
test
je
lea
xor
push
cs
mov
popa
and
jecxz
xchg
adcl
rorl
cmp
hlt
out
cmp
jmp
ja
mov
shlb
mov
es
or
sbb
es
sub
popa
add
or
push
add
call
sbb
pop
popa
push
stos
add
sub
ljmp
sub
push
push
cmp
sub
ss
outsb
call
xchg
les
addb
cmp
xor
and
into
rorl
xchg
push
push
shll
fwait
xchg
sub
inc
psubq
dec
or
add
arpl
outsb
push
sub
xor
arpl
mov
xlat
popf
clc
shlb
jne
sub
ret
or
push
jl
cmpsl
sarb
lock
or
loop
rolb
in
adc
mov
fwait
clc
pop
mov
pop
je
pop
dec
ja
inc
or
shll
mov
into
xor
loop
push
add
cmp
shlb
or
in
xor
add
mov
add
ret
sbbb
repnz
pop
or
movsl
mov
add
cs
iret
xchg
enter
mov
cwtl
pop
add
adc
jne
dec
sub
xchg
add
loopne
loop
xchg
sub
or
cwtl
or
and
jnp
cs
lahf
je
fidivl
pop
dec
js
jbe
cmpb
pop
add
add
push
push
loopne
bound
mov
sbb
cs
insb
data16
adc
adc
out
ss
add
dec
fidivrs
mov
jmp
test
xor
mov
lahf
xor
and
pop
xor
sbb
sbb
adc
js
pop
pop
js
inc
adc
add
jb
add
or
add
movsb
cmp
rorb
fistps
inc
xor
inc
cmp
ret
outsl
cmpsl
mov
aaa
clc
daa
mov
cmpb
sbb
pop
fcompl
sbb
mov
xchg
inc
adc
loopne
pop
mov
enter
insl
shrd
pop
or
mov
push
add
stos
sub
hlt
dec
xchg
data16
adc
inc
jmp
sub
test
in
sub
inc
push
test
lret
shlb
sbb
adc
clc
clc
push
lcall
or
call
cmp
es
or
push
sub
enter
push
test
xor
pcmpgtb
mov
mov
bound
add
les
das
add
or
push
dec
mov
push
sub
push
pop
or
in
sub
push
push
je
jmp
movb
sti
jne
insl
or
jmp
cmp
movsl
add
push
sub
or
mov
cmpl
sbb
inc
iret
shrb
mov
add
mov
daa
add
sub
mov
and
add
or
or
or
in
roll
mov
mov
or
mov
or
es
jae
test
sub
mov
mov
and
mov
std
xchg
push
ficomps
pop
jmp
mov
cmp
ja
sarb
scas
fsubrs
sahf
mov
add
push
roll
push
mov
idiv
pushf
mov
sub
push
fsubr
and
in
sbbl
add
mov
push
xchg
mov
mov
mov
mov
ficompl
add
sub
mov
or
or
add
add
pop
dec
push
and
cld
stos
cmp
mov
mov
decb
add
jnp
sub
or
mov
out
xor
xor
shll
mov
insl
iret
and
dec
fadds
mov
cmp
cmp
nop
lcall
les
pusha
pop
bound
dec
lahf
in
lods
je
je
repz
leave
sub
push
pop
pusha
repz
adcb
insb
rolb
pop
adc
xchg
mov
push
and
aaa
jne
and
aas
sbbl
fcomps
jmp
cmp
sub
bound
lea
mov
je
sarb
and
jo
add
pop
inc
xlat
adc
call
dec
cmp
fistpll
mov
or
xor
lods
decb
add
jb
pop
add
push
add
imul
mov
nop
roll
je
fmul
add
test
pop
sbb
adc
xchg
push
push
incb
jbe
in
test
inc
xor
lret
in
mov
call
ja
shlb
pop
push
dec
mov
decl
add
sub
jae
jne
sub
enter
call
cmpsl
pop
sarb
mov
xchg
push
or
xor
xchg
repnz
clc
jmp
dec
jne
push
or
sub
sti
push
pop
mov
in
jo
popa
imul
outsl
fildll
dec
cld
add
or
sub
sub
clc
add
sbb
cli
add
cld
test
cmp
fldenv
mov
adc
add
xor
and
call
sub
push
test
ret
repz
add
push
dec
add
or
adc
xlat
cmp
adc
mov
dec
jo
mov
ficoms
or
push
rclb
add
clc
fmuls
sbb
sbb
in
jnp
sbb
push
adc
inc
add
lods
xchg
lret
sub
pop
or
arpl
push
inc
add
jp
cmp
add
xchg
xor
cmp
in
jecxz
lea
in
sbb
imul
fneni(8087
cmp
testl
jo
es
dec
mov
xchg
mov
jns
mov
bound
lea
lea
cmp
ret
lock
push
insl
pusha
and
xchg
cmpsb
cmp
aam
adc
mov
push
push
mov
add
xchg
dec
out
sub
adc
imul
cwtl
pushaw
inc
pop
pop
xor
push
pop
mov
clc
jno
sarb
movl
mov
mov
lret
jne
sub
nop
fsubrs
add
sbb
or
rorb
fwait
sub
jmp
or
inc
and
and
or
jnp
mov
push
or
enter
mov
ljmp
fwait
sbb
jle
pop
sbb
clc
test
xor
test
sub
mov
jmp
pop
xor
repnz
sbbb
cltd
xor
bound
xor
mov
or
addr16
sbb
push
push
enter
ljmp
xor
loopne
sarb
add
mov
fstl
jb
mov
jns
add
lcall
in
push
sbb
sub
inc
add
sbb
popf
es
or
pop
sbb
or
adc
subl
bound
popa
popa
shlb
add
push
fidivrl
mov
pop
insl
cmp
or
lcall
adc
and
lret
and
mov
in
and
and
arpl
adc
cmp
cmp
addr16
or
dec
sbb
mov
cmp
and
inc
fisttpll
mov
mov
cld
sub
mov
lea
mov
pop
push
cwtl
outsl
jmp
ret
icebp
shr
sti
lock
pop
sub
nop
sahf
inc
jae
and
imul
testl
or
mov
or
or
shlb
sbb
ret
add
sar
mov
lea
dec
xor
add
xchg
dec
xor
mov
jne
adcb
test
enter
sbb
jo
sbb
out
scas
mov
daa
enter
push
imul
cmpsb
iret
addr16
sub
int
dec
jg
sti
add
cmp
mov
dec
jg
sbbb
xor
pop
stos
aas
cwtl
inc
daa
call
dec
push
xor
daa
cmc
fucomi
push
push
gs
fisttps
jo
dec
outsl
mov
pop
js
loopne
mov
sbbb
call
or
cwtl
sbb
lods
lods
das
test
inc
mov
or
add
and
sub
mov
sbb
jne
and
inc
dec
add
mov
sarb
dec
pop
push
xchg
adc
sub
cli
mov
or
push
and
or
mov
roll
jmp
or
call
or
sbb
add
cmp
or
jg
sub
mov
mov
sar
ljmp
inc
inc
pop
pop
outsb
inc
loopne
adcb
xor
ss
fnstsw
mov
loop
xor
add
sbb
inc
das
out
inc
popf
mov
clc
xor
lea
pop
pop
sbb
stos
xchg
add
add
mov
sbb
inc
mov
and
inc
ljmp
movd
or
lret
dec
mov
dec
insl
and
mov
hlt
pop
adc
mov
lahf
add
xor
div
ja
insl
loopne
adc
insb
sbb
xchg
add
xchg
add
mov
adc
in
sbb
wbinvd
aaa
sbb
sub
fs
or
sub
mov
add
addb
push
mov
add
sub
leave
inc
mov
shufps
test
scas
push
add
add
push
dec
add
pop
int3
fcoms
inc
sbb
aaa
inc
repnz
xor
inc
xorb
dec
mov
lock
and
inc
xor
pop
leave
xlat
popa
test
mov
inc
in
jmp
mov
inc
lock
hlt
add
sub
ljmp
push
add
or
sbb
into
ljmp
lret
and
mov
mov
and
lock
push
add
mov
and
add
or
pop
cmp
pop
cmp
js
cmp
add
cmp
notl
je
adc
je
mov
adc
adc
test
pop
mov
jbe
push
or
or
add
rcrb
loope
add
lock
inc
push
daa
repz
loop
mov
mov
pop
int3
jne
lret
xlat
int3
jle
xchg
mov
add
or
inc
lret
or
inc
clc
sub
add
inc
or
dec
test
sbbl
sbb
icebp
pop
inc
orl
add
roll
mov
loopne
cld
jl
adc
sbb
addl
dec
loopne
call
pop
shll
loopne
xor
and
add
add
jge
es
or
sbb
adc
aas
dec
lods
iret
add
jns
mov
shll
adc
outsl
pop
sub
clc
jge
jge
and
mov
xor
ret
xor
loopne
call
cmp
dec
push
jle
pop
movsb
and
adc
hlt
enter
stos
mov
jle
subb
sbb
pusha
add
aas
push
inc
sub
popa
mov
sbb
xchg
mov
clc
fs
scas
mov
cmpl
fdivl
add
je
push
adc
test
rolb
push
pop
das
sbb
aad
fnstenv
sbb
xor
insb
stos
inc
nop
pop
popf
or
jle
movzbl
add
fadds
fs
dec
stos
or
nop
call
mov
push
xor
and
cld
test
andl
inc
jb
stos
cmp
xchg
pop
rorl
int3
rorb
pop
inc
lahf
stos
js
loopne
and
mov
add
rcr
sbb
call
push
adc
or
rol
call
mov
das
shlb
dec
or
scas
sub
xor
sub
push
mov
xorb
or
outsb
in
dec
push
adc
jle
jmp
dec
mov
or
jmp
jne
push
push
andl
out
push
imul
scas
popa
daa
loopne
cwtl
dec
and
insl
mov
and
push
ds
or
push
stc
xor
addb
xor
mov
das
clc
mov
jne
into
dec
cld
mov
ret
loopne
lock
mov
cld
int
orb
push
in
adc
mov
mov
ret
mov
push
xchg
xchg
adc
mov
jae
mov
mov
add
or
add
aad
adcl
hlt
fadds
push
sbb
bound
stos
mov
push
dec
push
xor
and
inc
clc
hlt
adc
sbb
aaa
xor
sbb
dec
cmpb
and
mov
push
js
mov
cmc
cwtl
xlat
pop
and
test
pop
jne
push
fisttpl
inc
inc
faddl
sbb
inc
sbb
rcrb
fists
test
ljmp
cmp
ja
je
pop
ja
mov
mov
cli
shr
aam
in
jne
loopne
into
inc
inc
sub
repz
inc
fildl
in
fwait
add
dec
arpl
adc
jnp
push
test
and
mov
lock
inc
add
xor
and
iret
and
insb
push
mov
fsubrs
or
filds
cmp
clc
sbb
sbb
cs
iret
pop
loop
ret
dec
cmc
add
xchg
fdivrs
jne
cmpsl
das
popa
xchg
int3
sub
cmp
je
hlt
add
loopne
fadd
loopne
movb
clc
adcb
and
pop
dec
jl
jmp
jno
push
sahf
loopne
jg
push
sub
mov
aas
jg
cmp
mov
popa
add
insb
decl
push
pcmpgtd
out
add
mov
push
push
mov
and
loope
dec
cld
mov
mov
aaa
push
bound
arpl
push
cwtl
add
jo
sub
jo
mov
dec
mov
and
push
dec
mov
push
mov
jle
fadd
sbb
or
push
mov
jns
push
out
scas
mov
in
ja
mov
inc
push
sbb
inc
fs
js
orb
jp
sub
sub
sbb
ret
inc
daa
mov
or
mov
clc
mov
dec
clc
mov
scas
xor
inc
sbbb
jge
sbb
pop
jg
sbb
loope
outsb
mov
imulb
push
add
movzbl
jmp
mov
popa
sbb
pop
pop
int3
adc
push
es
cmp
dec
nop
add
fisubrl
and
dec
adc
mov
mov
or
lock
pop
jmp
fdivr
icebp
pop
jg
or
jp
js
xor
ret
mov
jns
jnp
push
popl
pop
adc
xchg
xor
dec
mov
cmp
jne
fs
and
sbb
sbb
jg
or
dec
add
sbb
pop
push
addb
push
add
stos
sbb
jne
or
push
jne
ja
test
push
mov
sub
int3
add
sbb
sbb
mov
lock
inc
inc
shr
std
fwait
in
push
mov
cmp
jne
dec
inc
mull
rorb
ss
cmp
sbb
add
out
cmp
add
outsb
mov
jmp
adc
sub
dec
mov
pop
rcrl
dec
mov
jg
adc
imul
jp
sub
jmp
push
push
cli
outsl
out
add
ljmp
cmp
add
cmp
or
popl
subl
nop
xor
pop
cwtl
mov
push
dec
out
xchg
inc
adc
jle
push
sbb
adc
and
scas
lock
and
clc
jmp
outsb
add
jge
pop
adc
cmp
push
pop
pop
mov
cltd
idiv
movb
cmp
adc
mov
add
sub
pop
sarb
jge
xor
pop
insb
cmp
xor
dec
mov
or
sub
sbb
mov
call
inc
jl
arpl
les
data16
scas
lret
adcb
push
data16
jg
rorb
or
mov
mov
lock
test
xchg
inc
decl
sbb
mov
lock
lea
add
nop
inc
mov
sti
pusha
or
in
push
push
cmp
sbbb
lods
js
push
sahf
and
psubusw
movsl
pop
aaa
mov
add
ss
pop
mov
ljmp
pop
push
mov
into
dec
pop
push
lds
jo
fs
dec
mov
sub
cmpl
jecxz
sbb
or
mov
mov
jnp
lock
jge
scas
sbb
adc
add
aam
addl
pop
or
xchg
shlb
push
sahf
rcll
cmc
idivl
sub
jge
shll
adc
test
push
cmp
push
je
scas
mov
fs
sub
xor
jo
push
lea
add
push
loopne
mov
out
sbb
and
push
outsb
push
dec
mov
aam
mov
pusha
enter
shl
nop
sub
call
sbb
push
jns
pusha
add
jg
push
inc
and
aam
adc
shlb
sbb
scas
or
shlb
cmpsl
add
xchg
mov
or
or
shlb
mov
pop
inc
inc
push
lock
faddl
mov
push
mov
pop
imul
jnp
add
sbb
sbb
xchg
push
jns
je
jle
adc
clc
xchg
push
std
jle
push
push
mov
adc
sti
rcll
nop
mov
psraw
xlat
mov
mov
cmpsb
in
sbb
dec
and
aaa
addl
sbb
daa
cmp
sub
repnz
cmp
xor
push
adc
and
push
mov
adc
or
hlt
movsb
push
aaa
xor
cmp
mov
add
pop
jle
sub
loope
orl
dec
insl
add
push
or
jo
mov
adc
add
mov
mov
add
mov
hlt
daa
inc
pusha
xor
nop
mov
call
mov
fwait
sti
outsl
xor
jnp
cmp
inc
cmp
gs
imul
cltd
idivb
mov
or
jge
add
ljmp
adc
test
pop
push
cmp
push
pop
mov
and
imul
or
add
jnp
inc
sbb
push
push
sub
and
xchg
and
scas
or
push
pop
and
push
lcall
add
addl
idiv
inc
insb
ret
decl
add
shrb
fs
lahf
fadds
movsb
out
push
adc
addb
clc
cmp
sbb
je
clc
add
loopne
inc
jp
or
pop
aaa
or
ss
das
aaa
outsb
sub
lcall
aad
xor
fs
fisttpl
clc
xchg
jbe
adc
adc
cld
inc
add
lcall
pop
adc
xchg
lcall
in
add
adc
adc
cmp
push
out
push
jns
sub
push
dec
push
or
data16
test
nop
jmp
mov
inc
sbb
xchg
and
xor
roll
xchg
mov
xchg
mov
jmp
sar
add
test
je
or
mov
jge
and
jbe
dec
test
test
mov
std
das
test
call
push
pop
loopne,pn
mov
cmpb
sbb
mov
fldcw
dec
jne
sbb
push
push
sarb
pop
jg
lea
lea
mov
cmpsb
sub
lret
mov
and
push
mov
les
shrb
sub
les
mov
pop
xchg
mov
les
adc
mov
adc
inc
idivl
fimuls
out
jns
dec
jne
jnp
testl
sub
inc
fmuls
mov
jae
aad
jo
sarl
iret
mov
jmp
push
mov
jnp
test
push
ficomps
and
mov
lods
lcall
fs
jne
inc
test
stos
fildl
test
jle
inc
ljmp
aaa
mov
and
push
xchg
in
jp
jge
xor
ret
xchg
jmp
xor
push
cmp
test
test
push
sub
mov
xor
add
inc
mov
mov
mov
es
sbb
push
jmp
push
sub
inc
dec
test
inc
in
clc
inc
movl
xor
popf
dec
popa
jle
pop
or
jo
lds
fs
add
or
cli
mov
pop
fs
ret
shr
insb
jnp
cltd
cwtl
or
adc
js
add
psrlw
add
or
rolb
sbb
test
lods
int3
adc
inc
adc
adcb
test
cmp
add
dec
lret
clc
ja
adc
dec
jo
lods
add
inc
dec
lods
or
test
clc
push
sti
ret
sti
repnz
sbb
adc
sbb
hlt
aas
pop
adc
aas
js
lock
mov
sbb
roll
js
jmp
mov
adcb
les
cmp
xchg
jnp
call
and
imul
adc
inc
jne
cs
test
je
push
lock
fadds
negl
xor
add
sbb
adc
data16
sub
push
jle
or
and
rorb
sub
jnp
loop
testb
stos
and
or
adc
adc
pop
or
repnz
dec
rolb
add
rcr
lret
daa
mov
jmp
cld
adc
cmp
jg
fcmovnb
inc
loopne
jp
cmp
and
add
xchg
dec
inc
mov
add
cmp
sub
jg
or
loopne
mov
dec
sub
lods
adc
jge
sub
add
jmp
push
inc
jo
adc
fstl
mov
dec
or
sbb
push
xchg
jg
idivb
imul
and
sub
sbb
push
inc
add
ret
sbb
or
rclb
add
pop
pusha
hlt
dec
jb
or
loope
push
xchg
dec
outsl
pop
sbb
pop
or
mov
pop
pop
sub
int3
pushl
pop
xor
push
xor
mov
adc
mov
test
icebp
xor
sub
push
out
call
push
lret
fs
inc
test
rcrl
icebp
cld
and
sub
repz
and
cld
mov
sbb
jo
outsl
jae
add
xchg
add
add
sub
addr16
add
sbb
std
pop
or
nop
xor
push
inc
mov
pop
out
lock
inc
jmp
idivb
sbb
imul
jmp
cmp
dec
hlt
aaa
lock
clc
es
mov
push
lock
xchg
ds
xor
data16
lods
xor
adc
or
shr
push
enter
rorb
roll
inc
dec
add
cltd
sar
push
inc
nop
mov
jg
push
lock
pop
add
mov
mov
mov
or
add
das
jle
shl
push
stos
and
xor
sbb
mov
pusha
mov
adcl
sahf
mov
add
add
inc
arpl
mov
and
ds
push
es
sub
inc
out
adc
cmpl
jle
mov
xor
fisubrs
inc
jo
in
stos
cmp
inc
push
push
je
arpl
inc
lds
or
pop
jmp
pop
xor
add
les
mov
enter
aaa
adc
mov
push
dec
insb
mov
pop
push
orl
mov
dec
enter
mov
insb
rclb
orb
aam
cmp
sub
js
jg
sub
lock
in
pop
and
mul
sbb
shlb
test
add
hlt
pop
je
lret
xchg
mov
je
mov
fildll
movsl
adc
fucom
adc
xor
jp
sub
bound
sbb
test
xor
gs
dec
jp
mov
lock
insl
ficompl
and
pop
enter
pop
pop
adcl
icebp
ret
mov
adc
dec
push
test
push
pushf
jl
jne
orl
test
and
lret
call
cmp
add
dec
push
mov
jbe
imulb
mov
mov
inc
mov
cmp
jmp
pop
jle
sub
adc
inc
pop
jge
jmp
fdivl
or
sub
jb
sti
dec
js
leave
push
or
cmp
or
popa
mov
call
push
pop
inc
jns
sahf
sbb
ds
fisttpl
cs
adc
xchg
rcll
enter
pushf
add
lea
xchg
in
add
out
pop
inc
dec
in
sbb
or
cmpb
add
jbe
pop
andb
iretw
add
sub
orl
sti
push
push
xorl
mov
addb
sbb
ret
dec
notb
cmp
mov
mov
cmp
jp
sub
xor
xchg
adc
cmp
in
and
sbb
xlat
add
or
xchg
mov
inc
in
inc
mov
addl
les
lret
mov
xorb
fisubrs
push
dec
rclb
adc
inc
inc
or
mov
or
or
divl
or
mov
and
dec
lods
and
xor
push
jbe
cld
fisubrs
mov
inc
mov
out
ss
ret
inc
or
ljmp
pop
xchg
dec
sbb
inc
mov
test
pop
test
xor
cwtl
mov
push
sbb
rorb
dec
sbbb
inc
or
inc
sbb
add
inc
sbb
js
sbb
sub
push
dec
roll
daa
inc
add
enter
dec
js
add
out
jmp
aaa
call
add
push
xorb
roll
sbb
cltd
orl
push
mov
ret
les
mov
loopne
add
mov
aam
adc
add
inc
inc
adc
xlat
inc
std
sub
jo
imul
sahf
or
and
movl
xchg
xor
loope
mov
mov
dec
in
mov
nop
adc
push
add
lret
push
push
insl
push
mull
ljmp
cltd
popa
xchg
add
xor
ret
push
pop
cmp
out
dec
mov
and
cmp
and
lea
dec
add
sbb
add
cmpb
dec
incl
jge
loopne
sti
add
xchg
or
inc
jo
sti
inc
inc
xor
popa
pop
mov
or
mov
ds
adc
sahf
xlat
mov
or
add
cmp
je
or
mov
inc
push
test
pop
mov
xor
ds
in
or
add
jle
inc
inc
ljmp
leave
dec
add
dec
pushf
pushl
test
lods
or
or
sar
jns
adc
jmp
pusha
sub
lea
mov
or
mov
cmp
or
jne
add
jmp
add
or
iret
ds
out
sbb
or
pop
push
and
js
mov
mov
xor
add
xchg
xchg
das
imul
js
test
push
out
jb
aad
clc
test
inc
dec
out
mov
outsl
sbb
fdivp
add
movsb
jmp
pop
push
sbb
or
sbb
cmp
jne
daa
add
fs
add
xchg
adc
ret
pop
mov
inc
cmp
sbb
rol
out
or
xchg
mov
xor
jae
xor
push
add
add
dec
jno
xchg
pop
mov
dec
cmp
mov
push
inc
imul
cld
push
inc
push
sbb
and
sbbb
or
jmp
cmp
dec
sbb
hlt
hlt
and
cmp
mov
icebp
test
jnp
cmpl
aaa
inc
adc
stos
or
inc
adc
loopne
sub
movb
test
or
clc
xchg
push
rcrl
rclb
sub
mov
aam
cmp
jp
mov
sarb
pushf
mov
shrb
mov
add
mov
push
sbb
rorb
sti
imul
mov
lahf
aam
push
adc
mov
and
mul
or
test
or
or
sti
mov
push
int
or
fstl
mov
xchg
add
xchg
cmp
inc
outsl
es
pusha
sub
xor
mov
out
sbb
cltd
inc
js
inc
nop
or
push
lods
mov
shr
cmp
das
cmp
mov
enter
pop
inc
push
and
or
shrb
testb
push
add
or
movb
cmpsl
loopne
mov
clc
mov
xchg
adc
lahf
push
out
adc
pushf
or
pop
add
sub
add
xchg
xchg
mov
sub
push
jp
ret
or
cld
aad
mov
mov
mov
mov
insl
jge
in
js
lea
orb
jo
xchg
push
push
adc
lret
push
sbb
xor
or
adc
fwait
mov
ret
outsl
fldenv
inc
push
push
in
xchg
ret
ret
xchg
add
pusha
subb
sub
or
xor
insb
mov
icebp
popa
clc
add
or
cwtl
push
mov
fst
xchg
push
inc
cs
inc
dec
movsb
outsl
or
cmp
jne
cltd
ljmp
fmull
dec
and
aad
mov
popl
inc
aas
dec
xchg
mov
fincstp
test
adc
test
adc
adc
sbb
add
jle
xor
or
sbb
push
mov
test
sbb
scas
sub
test
insb
inc
inc
js
in
add
imull
jo
jnp
or
dec
xor
shrl
imul
jecxz
push
xor
mov
clc
sub
mov
sbb
inc
mov
inc
and
std
lock
xchg
cli
hlt
mov
loopne
and
in
add
cltd
add
or
mov
sbb
stos
hlt
dec
pop
ret
jle
mov
pop
call
stos
xor
add
repz
inc
and
lret
and
imul
inc
in
sbb
popf
xor
cmp
pop
fs
mov
inc
sbb
es
clc
adc
dec
shl
inc
cmp
or
jne
cmpl
push
movsb
pushf
cmp
mov
jne
sbb
cld
inc
lock
rcll
adcl
jl
scas
leave
cmc
add
push
xchg
hlt
arpl
sti
or
add
lcall
loop
xor
stos
arpl
xchg
adc
add
push
push
push
in
andb
icebp
adc
jno
cmp
roll
or
dec
pop
insl
call
dec
cmp
dec
mov
hlt
aad
sub
pop
add
jae
cmp
cmpsl
and
push
dec
sbb
xchg
loopne
and
xchg
jb
imul
push
dec
and
adc
inc
dec
push
add
shrb
push
or
and
sub
imul
sbb
lahf
xor
inc
cmp
xlat
cs
insb
jb
pop
lahf
xchg
cli
pop
adc
rolb
push
inc
or
loopne
jb
push
loope
add
icebp
lea
into
fmuls
add
dec
add
lock
push
add
lods
xor
mov
inc
push
mov
clc
rcrl
scas
js
xchg
pop
cmp
pop
mov
mov
adc
jo
push
push
adc
add
mov
int
push
push
jmp
daa
ret
rclb
aad
dec
push
or
and
sete
jnp
sbb
xor
pop
push
xchg
and
inc
aas
mov
jge
outsb
push
loopne
lods
add
inc
ljmp
addr16
aas
stc
jae
test
je
add
mov
pusha
fdivrs
fs
add
and
add
add
iret
cmp
adc
jmp
addr16
adc
sbb
and
inc
insl
mov
pop
das
push
mov
test
mov
push
mov
rorb
arpl
push
push
stos
adc
sub
adc
inc
push
dec
loopne
arpl
pop
movsl
aaa
rcr
adcb
mov
xchg
adc
push
popf
inc
leave
and
lock
shrb
add
or
mov
mov
jle
addl
xor
mov
cmp
dec
enter
les
and
pop
and
xorb
mov
mov
lock
inc
clc
aaa
add
inc
lahf
adc
add
je
push
jne
push
add
ja
lds
push
test
pop
pop
mov
fs
mov
mov
pusha
int3
rcl
pop
mov
les
lock
pop
cld
push
sbb
or
jle
jl
push
add
adc
enter
out
outsb
aaa
daa
aaa
inc
add
adcl
in
dec
mov
jg
mov
and
inc
fcoms
jecxz
sbb
scas
cmp
add
and
clc
inc
pop
lock
push
inc
mov
push
loop
aam
lods
or
popf
mov
scas
filds
dec
roll
or
jg
push
push
sub
push
cmp
inc
lahf
sbb
shrb
andl
mov
test
clc
aas
les
scas
jns
dec
je
cmpl
and
add
xchg
mov
shlb
daa
sbb
add
add
shl
adc
xchg
idivb
pop
sbb
adc
push
clc
or
stc
pop
sub
cmp
jge
pop
inc
je
jbe
sub
sub
and
outsb
xchg
scas
rcll
in
in
or
adc
inc
pop
pop
in
inc
jl
jp
xchg
push
mov
js
add
xor
lock
mov
add
test
inc
sti
and
pop
pop
call
lret
inc
inc
andb
cmp
cld
push
jb
pushf
and
mov
adc
mov
pop
add
pop
das
jge
push
hlt
inc
lahf
mov
sbbb
stos
aad
adc
clc
out
mov
push
cmp
and
sub
pop
loopne
jo
inc
sub
sub
sub
movsb
jmp
or
pop
add
imul
jno
add
in
dec
or
sub
mov
adc
test
loopne
or
lcall
adc
or
push
inc
daa
add
or
adc
dec
mov
orb
sub
sbbl
fisttps
push
push
adc
or
lahf
mov
into
or
sub
or
dec
lahf
fs
push
leave
sbb
xor
add
or
inc
jnp
or
push
aad
or
mov
lcall
cmp
jne
mov
enter
or
sahf
sub
xchg
jne
add
xor
push
mov
adc
out
pop
add
mov
xor
push
xor
cmpsl
and
outsb
or
jmp
lock
push
je
and
or
mov
add
movsb
push
imul
clc
cmp
andl
fildl
fmulp
call
mov
movsb
nop
inc
sbb
pop
outsl
mov
sbb
pop
pop
stc
fmuls
arpl
or
dec
in
lock
xchg
rcrb
shrb
cli
add
push
movsb
jo
loopne
and
dec
add
inc
inc
add
sub
jle
in
mov
adc
or
push
pop
dec
sub
mov
sub
or
sub
dec
and
ret
fiaddl
or
icebp
cmpsl
and
dec
aam
in
fadds
sub
out
testb
je
dec
add
mov
xchg
aam
adc
loopne
sbb
inc
or
test
sarb
adc
pop
add
lods
addl
aas
ds
xchg
sub
and
adc
adc
enter
add
test
add
popf
or
fildll
inc
inc
mov
loopne
mov
enter
xchg
xor
pusha
mov
cmpb
js
add
arpl
call
add
xor
mov
mov
jge
add
pop
pop
cmpb
or
cwtl
mov
ss
leave
add
mov
cmp
jl
or
inc
repz
mov
pop
int
sub
add
xor
leave
enter
imul
pop
clc
dec
push
jg
push
push
lock
loop
pop
hlt
push
mov
incl
sti
xor
into
popf
fdiv
fildl
imul
xlat
cmpsb
pop
pusha
pop
add
push
push
jle
or
adc
or
loopne
in
mov
fucomi
push
out
pop
cmpl
dec
lea
leave
add
loope
sbb
das
lret
xor
in
add
push
mov
mov
sbb
mov
add
mov
popf
sub
add
jle
mov
inc
push
add
dec
push
dec
mov
mov
dec
cmpsb
adc
mov
dec
lahf
add
cwtl
test
or
or
add
mov
and
loopne
inc
inc
loopne
jmp
dec
push
je
xor
pop
ficoml
in
mov
das
sub
pinsrw
and
rcrb
add
pushf
fadd
int3
mov
clc
es
fidivs
enter
clc
lea
or
mov
sbb
mov
mov
cmp
sbb
fwait
lea
mov
mov
or
jge
daa
dec
xchg
das
in
mov
daa
jg
adc
mov
sub
mov
jge
lea
xor
test
gs
inc
leave
test
repz
pusha
fsubrl
push
dec
sub
cmpb
arpl
cmpsb
xchg
jno
and
test
call
mov
lods
xchg
and
mov
sub
out
call
add
fcomi
add
int3
sub
and
mov
mov
sub
inc
push
pop
lock
test
push
daa
mov
mov
lahf
lea
mov
sbb
lock
cmp
inc
push
inc
addr16
incb
add
adc
push
cmc
iret
inc
push
lea
lea
lea
xor
test
jo
or
mov
add
and
mov
fdivr
stos
cmp
lock
inc
jg
add
push
addr16
push
push
push
mov
and
pop
add
inc
jecxz
inc
inc
mov
clc
jecxz
mov
jb
or
lcall
stos
test
or
iretw
mov
mov
andl
ss
jo
jnp
adc
inc
adc
jo
mov
rorl
sub
sub
sbb
pushf
adc
or
pusha
loopne
push
mov
cmpl
sbb
sti
fsubrl
fsubrs
push
dec
pop
loopne
cmp
dec
add
popa
out
fldcw
push
pusha
jo
sub
push
add
or
jnp
inc
mov
nop
lret
sub
sub
push
mov
pop
dec
in
mov
or
movsb
jb
hlt
mov
mov
mov
mov
mov
imul
in
fstpt
sbb
push
xor
adc
dec
dec
dec
push
outsb
popa
bound
dec
inc
jg
outsl
cmp
insb
insb
inc
dec
push
inc
gs
outsl
outsb
je
fsubr
in
gs
pop
push
gs
popa
jae
daa
inc
pop
mov
jb
imul
ja
das
sahf
testb
jo
push
push
insl
jo
arpl
std
xlat
test
imul
das
ss
addb
call
jb
addr16
fs
jae
mov
sbbl
pop
jno
pop
or
into
cmp
sbb
push
push
call
test
cld
mov
mov
je
jp
push
insl
xor
mov
scas
cli
mov
stc
sbb
scas
xor
mov
ljmp
repnz
jmp
push
sub
push
xor
push
and
xor
subb
das
ja
push
insl
movsb
loopne,pn
mov
popa
or
hlt
mov
test
add
pop
mov
addb
arpl
iret
add
pop
cs
sbb
xorb
sti
aam
inc
adc
mov
cmp
divl
shlb
int3
mov
mov
cmp
cltd
mov
xchg
sub
inc
or
jb
mov
lret
sbb
into
adc
addb
pop
jo
sub
jl
sbb
sub
jecxz
mov
push
mov
inc
ja
or
mov
hlt
out
mov
and
pop
js
mov
in
lcall
stos
mov
mov
lahf
mov
cmpb
test
push
sub
mov
push
xchg
icebp
cmp
add
movsb
sub
mov
push
jno
pushf
sbb
add
add
mov
das
movsl
add
mov
aas
std
mov
xchg
mov
enter
add
movsl
add
push
insl
repz
and
mov
sar
cmp
popf
pop
shl
push
push
inc
lea
imul
js
stos
pop
push
inc
mov
push
pop
in
push
sub
daa
je
jb
insb
dec
data16
jp
int3
das
aaa
push
outsl
inc
outsb
push
dec
fistps
shlb
scas
push
and
xor
mov
xchg
clc
xchg
pusha
daa
out
ret
ja
and
pushl
popa
ss
xor
jno
add
xchg
daa
popa
add
mov
jo
ror
rclb
adc
adc
sbb
cli
adc
stos
xor
add
mov
and
pusha
and
adc
lods
dec
leave
pusha
adc
sub
mov
loopne
inc
adc
inc
add
hlt
into
or
fdivrs
je
dec
je
add
jmp
cmp
je
mov
lods
mov
ret
and
sub
adc
lcall
adc
test
mov
add
pop
add
mov
mov
push
dec
cmp
and
scas
lea
mov
mov
or
add
jp
and
inc
pop
test
push
add
push
lea
int
xor
adc
and
jmp
adc
add
fadds
and
jmp
dec
loopne
pop
ss
movsb
scas
sbb
xchg
aaa
jnp
pusha
inc
cmp
or
cwtl
add
mov
fwait
jne
adc
jg
ficomps
pop
ja
xchg
scas
jns
out
push
fisttpll
les
out
add
push
inc
mov
aad
push
iret
push
adc
sub
loop
sub
pop
push
push
pop
adc
mov
mov
mov
inc
xchg
adc
mov
add
insl
pop
adc
insl
sub
add
ret
dec
or
adc
out
inc
adc
xchg
pop
ret
iret
loopne
jmp
inc
sbb
pusha
aas
add
imul
add
xor
jbe
jmp
popa
and
das
popa
mov
ja
jmp
popa
and
jle
test
lds
add
mov
clc
lock
hlt
scas
adc
jo
movsl
hlt
sub
mov
sbb
add
cs
sbb
std
outsb
or
movsb
dec
clc
pop
ret
in
inc
int3
dec
sbbb
or
cmp
sti
jns
jo
adc
ds
iret
repz
or
sub
dec
inc
leave
push
push
push
push
push
push
gs
imul
cmp
outsb
popa
addr16
jg
outsl
xor
test
xor
xor
dec
imul
arpl
pop
aas
xchg
pusha
add
faddl
outsl
add
out
mov
insb
push
or
arpl
insl
inc
outsl
pop
inc
mov
add
cmp
mov
out
imul
pop
jb
jb
popa
or
push
sbb
fs
imul
neg
imul
scas
gs
pop
jo
addr16
popw
subb
data16
out
ret
fcoml
mov
sub
outsb
inc
mov
insb
fbld
subb
and
fisubrl
int
add
sub
je
bound
pcmpgtd
pop
fbld
mov
shll
cmp
pop
inc
mov
push
push
imul
popf
or
dec
scas
daa
jns
inc
sub
jb
data16
fwait
gs
insl
push
imulb
xor
cmp
inc
jns
mov
decl
push
xchg
push
adc
pop
mov
or
jle
jle
xchg
shrb
inc
push
push
outsb
je
adc
mov
outsb
gs
nop
mov
pop
or
adc
and
or
push
xchg
orb
mov
adc
or
add
push
add
xchg
rorb
sub
pop
insl
mov
pop
arpl
push
je
in
inc
inc
movsb
out
xchg
lea
dec
and
fidivrl
mov
insb
add
cmpl
sar
in
sti
and
mov
rcr
mov
mov
incb
rcrl
add
dec
xchg
je
dec
add
addr16
add
fadd
cmp
aas
mov
push
jnp
movsb
mov
inc
adc
add
shlb
add
es
cmp
jne
mov
dec
and
ficomps
inc
test
rcll
pop
xlat
cmp
psubsb
lea
dec
out
loope
ficoms
ror
sbb
push
cld
clc
push
push
push
and
mov
shlb
and
mov
mov
adc
pop
jne
adc
cmc
push
pusha
ret
repz
es
or
loopne
pusha
add
adc
and
pop
ficoml
push
adc
adc
xchg
cmp
lods
pop
inc
add
test
movb
mov
fidivl
icebp
fwait
pop
adc
sbb
inc
add
pop
xor
adc
or
enter
jmp
es
or
popa
mov
mov
fdivrl
ja
mov
and
test
addb
add
add
push
lret
out
sahf
xlat
sub
push
sbb
adc
pusha
fistpll
add
xor
adc
adc
jl
mov
movsl
loopne
sarl
pop
lret
lret
cmp
ja
lret
out
lret
insl
add
inc
aas
push
add
cmp
repz
or
or
or
or
or
or
cmp
repz
adc
push
pop
sbb
sbb
mov
cmp
sbb
and
and
loopne
fadds
jns
xchg
test
lret
cmp
repz
push
int
xor
cmp
repz
arpl
iret
repz
cmpsl
mov
repz
cmp
das
inc
push
iret
repz
bound
mov
cmp
ror
in
sbb
mov
ljmp
push
ret
mov
pop
ret
or
sub
lcall
jb
mov
push
call
adc
insl
mov
sarl
outsb
jecxz
sbb
inc
mov
xlat
and
test
movaps
mov
ret
imul
fidivrl
xchg
imul
scas
mov
adc
add
test
or
fbld
pop
dec
and
mov
movsb
jb
xchg
pop
push
scas
in
mov
mov
je
sub
xor
popa
sbb
jge
repnz
stos
jmp
sbb
sub
mov
pop
aad
dec
stos
jmp
and
adc
and
mov
jb
adc
add
fsts
push
add
popa
es
dec
test
je
dec
lock
dec
sbb
fcompl
mov
cmp
lea
add
mov
mov
push
dec
dec
ss
dec
sarb
fadds
sub
mov
mov
add
pop
dec
shrl
xor
pop
push
xchg
cmp
sub
fsubrs
add
fwait
call
or
hlt
sub
lock
mov
imul
add
cmpps
insl
inc
je
andb
enter
or
xor
jl
or
dec
faddl
pop
loopne
mov
test
and
dec
mov
xlat
push
rcrb
sbb
movsl
mov
xor
push
pop
push
mov
mov
lahf
mov
inc
sbbl
mov
and
popf
inc
and
xor
loopne
jge
mov
rclb
repnz
aam
nopl
sbb
nop
mov
add
mov
call
stos
mov
jo
xor
xchg
sbb
rorl
xor
addr16
scas
adc
inc
lods
out
add
mov
call
popa
outsb
addr16
imul
dec
insl
nop
inc
add
fs
adcb
fcmovu
mul
inc
rclb
and
jg
jnp
sub
mov
inc
fldl
fists
inc
clc
dec
push
fldl
fsub
xlat
mov
and
fadds
xor
neg
jnp
sub
pop
jbe
push
cmp
fs
lods
pop
fsubrs
jl
push
rcll
fiadds
out
jmp
je
insl
imul
je
aaa
pop
xor
outsb
sbb
add
pop
addr16
decb
add
mov
mov
sub
int3
pop
je
dec
je
jmp
enter
out
adc
xchg
xor
sbbb
mov
pop
aas
and
add
mov
inc
mov
sbb
mov
inc
aam
adc
add
clc
jmp
xor
das
push
push
into
lock
outsl
ret
mov
out
inc
sub
testb
sbb
jecxz
inc
push
sub
dec
aas
pop
add
js
movb
add
xor
bound
mov
aad
aam
and
addl
fisubrl
inc
mov
jg
lock
jge
jbe
xchg
cmp
addr16
cmp
pop
inc
cmp
inc
inc
add
mov
sbb
cs
cli
cld
xchg
out
or
aam
sbb
add
xchg
sub
push
push
sbb
xor
cmpl
shlb
pcmpeqw
cmc
add
mov
lock
call
lea
jg
cmp
mov
ljmp
mov
or
rcl
popa
test
jl
cmp
loop
jno
sbb
and
add
and
sar
insb
je
sub
jp
mov
xchg
inc
fs
or
nop
add
adc
add
popf
sbb
push
idivl
mov
jne
sub
push
jmp
xorb
mov
mov
push
scas
push
jle
sbb
mov
sti
xor
xor
add
test
sub
cmp
fsubs
mov
adc
xchg
push
or
pop
pop
pop
xchg
cmp
out
scas
ret
mov
daa
ror
cmp
mov
fcmovne
add
daa
add
sbb
add
test
adc
push
or
lcall
mov
test
leave
inc
lds
add
imul
nop
push
xor
js
mov
push
push
cmp
imul
mov
xor
sbb
or
push
mov
daa
jmp
dec
sub
or
mov
adc
insl
jno
and
cmp
movsl
aaa
jb
dec
out
pop
pop
pop
test
icebp
fldenv
inc
hlt
int3
inc
xlat
mov
push
mov
inc
imul
cmp
les
inc
and
pop
inc
leave
lds
faddl
enter
sbb
icebp
call
xchg
pop
pop
pop
mov
push
mov
adc
js
jns
cmp
outsl
add
fsubs
add
cmp
mov
jge
pop
add
mov
sub
mov
repnz
add
mov
xor
and
pop
cmp
jl
subl
pop
push
scas
shlb
cmp
adc
stc
adc
inc
pop
nop
or
add
subb
call
das
in
mov
push
push
hlt
mov
add
inc
ja
inc
push
mov
or
inc
addr16
jnp
mov
add
je
outsl
add
stos
int3
fimuls
push
jae
jo
clc
add
adc
push
dec
cli
pop
addb
add
inc
jge
push
pop
stos
enter
cmpl
and
xor
clc
stos
mov
jle
push
fisubrl
inc
adc
mov
lock
inc
push
fldl
xchg
add
rcrl
dec
sbb
cmpb
dec
xor
pop
pop
push
adc
or
lcall
xchg
xorb
or
inc
addb
inc
jmp
adc
mov
push
adc
call
call
and
add
les
insb
pusha
andl
arpl
push
loope
loop
xchg
rclb
in
movsl
mov
rolb
or
inc
cmp
popa
mov
aas
int3
push
or
fwait
pop
xchg
scas
out
xlat
movsl
xlat
push
mov
push
or
xchg
rclb
fstpl
or
or
lret
adcb
and
sbb
push
push
je
mov
lahf
outsb
or
add
out
test
sbbb
adc
and
scas
scas
cs
dec
mov
idivb
push
sub
xlat
test
xchg
inc
ret
inc
cmp
dec
add
xchg
or
inc
ficoml
xor
dec
add
xor
sub
jle
sbb
dec
mov
and
test
cmp
icebp
sub
dec
sarb
fildl
fbstp
pop
sub
mov
loopne
fsub
hlt
or
sbb
push
add
lret
jae
fstpl
lea
push
mov
mov
hlt
add
nop
inc
dec
jne
aas
sub
mov
out
mov
inc
cmp
rolb
xlat
in
adc
inc
notl
jg
xchg
clc
imul
aas
lret
test
fisttps
sub
sbb
fwait
scas
ffree
stos
sbb
xor
enter
jns
xor
inc
inc
or
inc
push
inc
addr16
add
inc
inc
lret
and
add
lock
shlb
dec
sub
mov
dec
cmc
and
xchg
adcb
pop
enter
test
dec
dec
mov
sbb
add
cmc
and
sub
sub
sub
pop
mov
roll
cmp
and
imul
movsb
sbb
pushf
sbb
jo
jge
jle
inc
push
cmp
mov
cmpsb
push
stos
sub
xor
jo
jno
and
mov
data16
mov
data16
push
rorb
test
and
inc
pop
add
loopne
push
sahf
sub
or
sbb
es
sti
xchg
mov
push
and
pop
bound
call
bound
sbbb
xorb
push
adc
in
cmp
jne
call
test
inc
cmpsb
fisttpll
adc
dec
jl
mov
lock
enter
or
pop
inc
adc
fwait
mov
mov
and
pop
jne
sub
mov
rorb
push
nop
add
mov
sub
negl
add
or
test
pop
mov
dec
fldl
mov
ret
out
outsl
push
or
pushf
mov
adc
lea
jbe
ret
insb
loopne
sbb
lret
aad
add
dec
mov
pop
cmp
jmp
or
add
or
sbb
xorl
testl
pop
and
lods
push
jbe
and
popa
lea
cmc
push
fiaddl
xchg
iret
mov
adc
rclb
inc
pusha
xorl
dec
dec
out
jbe
add
inc
lods
daa
addb
cmp
pop
xlat
das
mov
cmp
sarb
mov
sub
lahf
xor
and
bswap
daa
loopne
xchg
inc
imul
fimull
scas
inc
push
lea
and
inc
fldl
jg
mov
xor
add
mov
pop
rorb
jl
sbb
clc
sbb
push
rorb
add
cltd
push
shll
shl
dec
fwait
fwait
jge
imul
or
mov
les
adc
in
setno
in
adc
or
pop
call
mov
xor
push
and
dec
das
sbb
scas
orb
jl
xor
orl
test
pop
mov
sub
xor
add
add
push
mov
stc
dec
cmp
movsl
inc
in
sahf
jbe
shrb
scas
xlat
adc
adc
clc
loopne
mov
adc
rcrb
xor
sbb
xchg
push
xchg
mov
mov
les
jo
in
jae
dec
in
dec
jne
stos
or
push
loopne
push
cmp
xchg
jecxz
sub
sbb
stos
mov
cwtl
fidivrs
mov
scas
add
das
jbe
add
rclb
adc
jmp
shlb
in
ret
mov
aad
pop
inc
and
sub
das
in
push
cmp
int3
dec
inc
mov
adc
xor
movl
dec
inc
imul
ret
sbb
adc
adc
test
aam
push
out
and
push
mov
dec
jne
cmpb
jne
push
dec
out
pusha
imull
or
dec
xchg
add
daa
xor
dec
sete
sbb
sbb
cmc
fdivl
rcl
xchg
dec
xor
cmp
lock
dec
in
jno
sub
cmp
movsb
and
insl
and
sub
fs
mov
cmp
mov
inc
pop
loopne
cli
lret
lds
hlt
inc
mov
aam
arpl
cmp
jg
pusha
pop
and
and
movzwl
shr
mov
mov
jg,pn
rcll
add
cmp
dec
jne
dec
add
sbb
or
adc
jmp
pop
and
add
sarl
and
aaa
jne
sbb
out
and
xchg
notl
cs
jle
cmp
push
and
outsb
mov
imul
das
adc
jb
push
decl
push
imul
enter
mov
adc
enter
cmp
je
xor
test
mov
cmp
cmp
mov
mov
xor
adc
sbb
or
mov
cmp
push
lods
pop
add
sub
xor
push
jb
cmp
clc
push
pop
decl
inc
pop
ret
push
subl
dec
pop
cmpb
ret
test
inc
or
nop
out
inc
add
pop
mov
enter
repz
movsb
and
nop
or
mov
inc
or
push
or
inc
push
sbb
mov
mov
movsb
add
int3
jle
fmuls
sahf
mov
pop
bound
ror
dec
or
dec
fldenv
inc
movl
fisttps
pusha
in
inc
out
scas
jns
loopne
inc
addb
test
out
pop
dec
add
jg
bound
add
add
jnp
out
push
push
pushl
ds
push
inc
scas
push
in
les
sbb
shlb
outsb
gs
arpl
out
shlb
orl
and
or
outsb
sbb
fistps
fcoml
cmp
inc
subl
outsl
jb
mov
push
xor
push
xorb
push
test
inc
pushf
lock
or
or
and
fidivrs
or
push
or
stc
push
push
dec
xor
sub
dec
push
adc
in
and
enter
push
sub
push
pop
xor
xorl
sub
and
stc
jecxz
xchg
add
je
cmp
cmp
je
jns
mov
imul
mov
inc
sbbl
imull
imul
jle
outsb
mov
jbe
cmp
jbe
jl
call
dec
fcmovu
jl
jge
dec
jle
jg
addb
mov
outsb
insb
push
jo
mov
nop
mov
or
push
push
push
je
cmpsb
fsubs
mov
movl
dec
pop
ret
shll
fs
jns
mov
xchg
sub
sbb
add
lods
push
aas
pusha
jb
repnz
or
test
sbb
cmp
pop
shr
and
inc
inc
cmpsl
repz
xchg
xchg
out
push
jnp
jbe
hlt
push
or
sbb
lahf
pop
sub
mov
pop
fcoml
insb
in
xlat
imul
xorl
data16
cmp
push
pushl
out
sub
les
iret
repz
enter
sahf
out
out
push
rolb
adc
xchg
and
cmp
sahf
out
je
pushf
mov
out
sahf
out
fsub
in
popf
out
sahf
in
lock
clc
cld
loopne
jge
sbb
add
push
aas
outsb
imul
xor
add
sbb
paddusw
mov
xor
sarb
mov
test
imul
cli
leave
cld
ret
test
sbb
or
jno
mov
sub
jle
pushf
adc
sub
fiadds
add
push
scas
push
icebp
frstor
filds
inc
jl
mov
mov
nop
test
jge
xor
lock
cmp
jg
repnz
cmp
add
daa
xor
mov
and
inc
add
xchg
nop
mov
pop
push
ss
jp
aas
cwtl
je
lea
imul
add
les
add
lea
xchg
sub
mov
pusha
or
shl
test
xchg
ds
add
loopne
loopne
pop
and
add
and
icebp
dec
mov
movsb
inc
jp
push
insb
jnp
mov
xchg
mov
divb
sar
adc
int3
add
jp
inc
mov
adc
mov
inc
inc
mov
sbb
cmpl
lock
cltd
in
fmul
aas
add
adc
loopne
adc
jp
xor
xor
pop
shrb
xor
test
add
adc
inc
add
and
sar
sub
popf
jmp
add
outsb
cmp
push
hlt
dec
ja
flds
mov
pop
jmp
test
xor
push
adc
and
xor
ficompl
pop
or
and
inc
test
divb
adc
push
clc
jne
or
fdiv
add
add
add
gs
arpl
loope
xchg
jl
pop
sarb
adcb
pop
loopne
lret
nop
pop
dec
shr
or
xor
repnz
push
push
mov
jno
inc
rcll
and
xor
and
mov
cmp
jne
mov
xor
fnstenv
push
sti
lock
jle
or
add
into
lahf
jmp
dec
or
sub
jge
mov
push
icebp
push
enter
add
out
dec
or
or
push
pop
dec
cmpsl
inc
xchg
inc
ja
xorb
adc
push
scas
mov
xchg
jne
gs
or
mov
pop
adc
arpl
aad
lock
push
js
sbb
dec
sbb
roll
data16
sbbb
loop
jle
push
xchg
adc
add
mov
test
je
add
push
repz
push
and
sbb
loopne
inc
ret
xor
stos
test
sbb
mov
aad
ljmp
pop
pop
or
add
add
scas
movzbl
mov
add
add
dec
int3
sbbl
inc
mov
push
sbb
push
pop
rol
pop
out
push
mov
xchg
mov
cmp
idivl
or
fadds
inc
mov
data16
add
or
jge
in
cmp
inc
sub
jb
mov
jmp
movsb
adc
push
cmc
add
xor
fistps
test
push
inc
jmp
inc
sbb
roll
inc
push
xchg
shlb
adc
cmpsb
cmp
push
adc
pop
inc
sub
inc
sub
jle
sbb
les
sbb
clc
add
fcoms
test
movb
add
and
test
xchg
pusha
add
mov
adc
sbb
test
xchg
fisttpl
lea
push
fsubr
cwtl
push
jno
arpl
cmp
or
fs
pop
in
mov
dec
mov
xor
jp
sbb
je
dec
bnd
std
push
mov
pop
xor
cmp
mov
popf
and
aaa
jmp
add
mov
xor
mov
or
aaa
dec
sarl
cmp
jmp
pop
pop
popa
and
xchg
xchg
sub
xchg
rcll
fisttpll
push
lods
test
stos
cwtl
je
mov
jp
xchg
pop
jnp
adc
orb
adc
add
mov
mov
lods
mov
js
pop
or
in
xor
pop
cmpsl
xchg
insb
sbb
imul
sub
push
jne
divb
mov
call
sbbb
icebp
pushf
loopne
pushf
sub
adc
adcl
pop
adc
fiaddl
jle
jle
adc
ficompl
cmp
clc
dec
bnd
pop
mov
xchg
in
pop
cld
je
mov
insb
insb
daa
nop
outsb
insl
jecxz
jne
sub
mov
rol
xor
rcrl
sub
test
and
pop
mov
out
or
lods
cmpsb
cmp
je
inc
test
and
enter
scas
or
fisubl
push
jno
mov
or
mov
mov
or
and
add
outsl
mov
loopne
add
sbb
mov
dec
mov
or
xor
addr16
cmpsl
push
and
dec
adc
xor
add
pusha
rcl
js
sub
nop
mov
fists
pop
notb
aas
lea
mov
ss
inc
jl
fs
cmp
je
jne
das
enter
jnp
sbb
jns
sub
sbb
cmpl
inc
push
mov
push
js
aas
gs
andl
push
jns
jge
test
in
mov
inc
cmp
push
test
je
enter
add
ds
mov
mov
jne,pn
adc
addr16
push
push
push
cli
daa
incb
cmpw
aam
inc
andl
cmp
xchg
imul
add
add
stos
or
cmpb
sbb
push
and
out
std
or
push
add
push
imul
or
ficomps
rorb
lret
jne
adc
pop
push
cld
addl
or
and
stos
out
push
out
push
add
cli
mov
aam
lds
fs
and
or
mov
das
xor
sub
adc
popa
or
add
stos
sbb
add
add
or
sarl
stc
lods
pop
cmpxchg
sti
incl
nop
aaa
sub
jne
push
movsb
adc
push
add
inc
jecxz
or
insb
inc
popa
jb
outsb
arpl
cmp
and
ret
jg
dec
add
push
je
insb
gs
sti
or
cmp
dec
cmp
jae
push
gs
sub
inc
or
or
outsl
je
jb
in
pusha
sar
arpl
inc
outsl
jb
jae
sti
xlat
cld
pop
rorb
jecxz
in
lock
dec
cmp
pop
adc
lods
cmpsl
scas
cs
and
dec
and
daa
sbb
push
ss
in
dec
xor
pop
sub
cmp
test
or
inc
xor
xchg
or
push
jle
in
sbb
push
inc
add
dec
je
pop
jnp
jbe
mov
mov
lock
dec
adc
decl
inc
cmp
sahf
mov
jnp
repnz
outsb
inc
add
mov
out
fistps
fdivrl
sbb
jno
add
push
sahf
testl
nop
leave
xor
addr16
push
add
or
adc
or
add
add
repz
clc
sub
sub
sbb
cmpl
pop
adc
clc
je
aaa
push
insl
outsl
fs
test
bound
movsb
add
fistpl
jbe
scas
xor
mov
mov
jne
cmp
enter
push
jne
bound
pop
addb
shll
sub
jge
cli
pop
push
imul
hlt
in
cs
pop
icebp
aaa
inc
das
lock
xor
ja
dec
mov
popa
insb
or
dec
cmpsb
imul
mov
pop
je
aaa
hlt
fisubs
cwtl
lcall
jle
add
or
nop
das
push
pop
test
mov
mov
ss
pop
pusha
packssdw
lock
in
cmpsl
aam
xor
dec
pop
int3
outsb
out
clc
xchg
fidivrl
inc
mov
data16
aaa
push
push
add
xor
xchg
push
inc
fiaddl
mov
cmp
sub
inc
jge
negl
call
inc
pushf
outsb
rcrb
pop
push
nop
ss
push
xor
xor
insl
push
nop
das
sahf
push
push
lahf
out
les
push
loopne
test
mov
insb
mov
inc
js
clc
fs
negl
lock
and
push
push
xor
xchg
inc
add
mov
lret
xlat
jnp
adc
xor
nop
pop
adc
xchg
movsb
lds
add
xor
adc
hlt
xor
into
out
jge
jne
incl
dec
xorb
outsb
inc
insb
mov
jae
jb
inc
gs
cmp
ja
gs
pop
xor
pop
push
add
mov
clc
bound
or
stos
jne
mov
orb
dec
nop
jp
enter
dec
push
sbb
sbb
xlat
push
in
dec
insb
add
push
pop
imul
jle
xor
fiaddl
mov
push
outsb
or
xchg
enter
jp
adc
es
imul
rcll
popf
or
inc
call
or
imul
das
shl
sahf
add
sub
dec
mov
das
mov
pop
fbld
and
or
data16
jmp
mov
in
xchg
inc
pop
shl
int
push
rcl
cltd
mov
mov
pop
add
cmp
push
push
push
jo
jo
outsb
fs
jb
popa
jns
and
fwait
xchg
syscall
lret
shll
add
or
imul
fidivrs
or
dec
inc
dec
inc
push
adc
jno
adc
xor
popa
cmp
out
divb
arpl
pushf
pop
jo
rdmsr
cmp
push
jns
mov
gs
dec
outsb
jne
sbb
scas
mov
insb
mov
jge
jnp
or
jae
mov
nop
sbb
add
jp
adc
out
js
or
mov
sbbb
popa
jne
je
adc
insb
jns
and
rcrl
pusha
lahf
and
push
scas
inc
addl
lock
imul
dec
mov
cmc
and
inc
lcall
andps
mov
iret
icebp
dec
push
imul
or
mov
push
jb
ret
in
dec
or
jns
adc
lds
and
cmpsl
or
push
loope
sbb
ja
sbb
fimuls
xor
adc
pusha
add
inc
or
or
into
sbb
lea
rorl
out
or
jmp
push
xchg
mov
div
dec
pop
push
or
imul
or
mov
adc
iret
pushf
pop
or
jg
jg
inc
jbe
add
or
push
push
jb
push
dec
bound
xchg
std
push
arpl
rcr
inc
mov
push
loopne
adc
mov
xchg
out
shlb
mov
add
mov
push
mov
ljmp
adc
dec
jae
push
push
push
dec
dec
gs
pop
dec
pusha
fs
push
jo
jns
pop
pusha
shl
and
neg
outsl
add
sub
insl
pop
add
or
add
popa
call
pop
dec
sbb
add
insb
insb
pop
xchg
sbb
inc
add
cmp
push
dec
sub
push
fs
mov
lds
jne
or
icebp
jo
imul
mov
jl
inc
push
or
pop
outsb
add
movsb
sub
mov
cmp
arpl
sub
pop
stc
jb
xchg
cwtl
cmp
nop
cmp
pop
hlt
push
xor
inc
xchg
or
stc
orb
fcomps
cmp
inc
pop
in
add
movsb
xchg
inc
dec
dec
or
pop
push
dec
inc
xchg
scas
fcomi
jb
xchg
sbb
in
pushw
xor
push
inc
insb
adc
or
jo
xchg
and
enter
inc
pushf
xchg
inc
mov
adcb
cmp
scas
call
shll
adcb
xor
push
or
adc
ret
test
rorb
fdivrp
cmp
rolb
push
xor
cmp
popa
loopne
mov
test
add
add
push
cmpsb
cmp
add
add
add
std
inc
push
mov
sbb
and
sub
add
push
inc
add
push
add
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ljmp
in
ljmp
ljmp
std
ljmp
call
imul
dec
dec
jmp
jp
jnp
shl
ffree
out
add
or
push
pusha
out
xor
in
cmpb
add
out
xor
lods
sub
mov
xor
aam
sbbl
cwtl
test
xchg
cmp
cltd
mov
push
dec
data16
xchg
push
mov
mov
mov
push
mov
in
cmp
cmpsb
push
inc
push
lods
imul
ja
jne
inc
push
mov
push
faddl
cld
sbb
adc
mov
push
mov
pop
dec
out
dec
inc
and
pop
negl
pop
pop
cmpb
or
fstps
sub
lret
pop
pop
or
fmul
in
and
in
mov
sub
fcompl
mov
je
dec
cmp
call
add
dec
xlat
add
or
das
jmp
je
shlb
push
add
adc
ret
outsb
popl
sbb
icebp
shlb
lds
int3
push
xchg
cld
pusha
mov
jo
inc
xchg
cmp
jno
jae
adcb
or
push
xor
in
sbb
add
aam
mov
add
xor
push
test
loop
jo,pt
popa
inc
insb
adcb
cmp
dec
dec
call
cmp
popa
insb
jne
adcb
wbinvd
stos
shr
insl
call
push
add
inc
outsb
arpl
mov
xor
xchg
pop
mov
hlt
std
dec
pop
scas
xor
add
rcrb
add
xor
lea
xchg
add
pop
lret
adcb
xorl
mov
loopne
inc
and
arpl
nop
pop
add
jno
fcoml
sbb
dec
test
in
dec
add
sbb
push
push
adc
ljmp
fs
sub
lds
in
call
or
jo
xlat
cwtl
loope
rcll
sbbb
imul
mov
imul
and
mov
dec
fldl
jo
pop
mov
ror
cld
pop
and
flds
ds
mov
jo
xchg
push
push
pop
mov
adc
and
push
rol
lock
cmc
sub
pop
sbb
loopne
and
mov
mov
pop
push
je
mov
push
inc
ds
xchg
js,pt
stos
and
decl
push
jae
inc
outsl
arpl
mov
adc
es
test
es
push
daa
sub
push
jo
pusha
add
popl
mov
sub
dec
imul
inc
pop
ljmp
inc
shl
ds
push
rorb
lock
push
dec
sub
out
mov
mov
pop
mov
std
mulb
push
and
jle
and
and
les
call
test
pop
sub
add
out
pop
push
out
ja
xchg
add
adc
cmp
test
movsl
push
push
cltd
loopne
je
incl
mov
imul
imul
mov
pop
mov
xor
in
cmp
adc
in
jo
cmp
push
jb
jbe
ja
xchg
dec
mov
inc
jo
jne
jb
rcl
push
sbb
mov
pop
mov
xor
dec
lret
jl
push
add
lahf
xor
dec
insb
aam
fsubs
push
dec
bound
adc
adc
imul
scas
and
test
jo
fbstp
pop
test
movsl
jge
pusha
lea
or
ss
call
incl
or
insb
jae
gs
inc
push
dec
pop
or
outsb
cmp
out
xor
test
popa
cmp
repnz
dec
sub
je
or
cmp
imul
cmpl
popa
test
jo
mov
inc
pop
inc
mov
mov
mov
cmp
and
xchg
ret
movsl
dec
enter
adc
xchg
add
jg
push
outsb
int3
fildll
fs
and
faddl
adc
sbb
jo
add
loope
pop
dec
push
mov
or
mov
andb
cwtl
pop
xchg
xor
inc
je
inc
test
and
les
or
mov
ret
mov
jae
fsubs
jp
pop
xchg
or
and
sub
or
or
push
fwait
pop
xor
lods
jo
add
lock
xor
add
add
stc
jo
int3
inc
mov
jae
popf
sbb
pop
dec
fisubl
dec
ljmp
or
pop
dec
lret
lock
inc
loopne
in
popf
mov
inc
add
test
mov
inc
push
dec
dec
outsb
rorb
gs
lahf
pop
and
pop
jo
push
pop
dec
pop
aad
cmp
pusha
jmp
sbb
cmpl
sbb
inc
xchg
sbb
adc
dec
cmove
iret
dec
and
aad
pop
add
dec
dec
add
sbb
jns
call
lret
dec
roll
xlat
mov
movsb
fcomps
and
ja
fistpll
inc
or
fwait
dec
call
orl
fldt
popw
loope
jne
mov
dec
dec
loopne
and
jae
dec
push
xchg
jl
js
push
es
push
out
cld
test
sbb
mov
mov
lock
aaa
push
dec
add
mov
clc
adc
outsb
outsw
or
imul
xor
xor
jo
movsl
pop
mov
inc
pop
mov
mov
outsl
push
inc
jle
cwtl
rorb
pusha
jo
or
gs
sbb
pop
cmp
sbb
adc
bound
lods
xorl
insb
add
orb
ret
sti
sbb
dec
push
jo
aam
into
pop
cmc
add
adc
push
lcall
sarb
or
arpl
jo
shrb
out
lods
iret
arpl
dec
inc
cmp
fadd
lock
inc
add
pop
dec
add
jecxz
pop
ret
enter
cmc
cwtl
dec
pop
out
mov
mov
addr16
imul
out
adc
inc
nopl
faddl
das
pop
push
push
gs
pushf
dec
dec
pop
dec
loopne
test
jbe
dec
mov
into
rcll
pusha
test
add
push
add
bound
loopne
imul
mov
icebp
loopne
jnp
mov
popf
andb
popa
fisttpll
pop
add
dec
gs
jo
hlt
mov
pop
mov
data16
push
jb
rcr
fsub
test
pop
dec
xchg
fisubrs
addr16
shrb
pop
clc
sbb
lods
push
in
orl
xlat
rcrb
leave
pop
popf
or
adc
inc
mov
mov
mov
mov
repnz
out
jl
add
pop
inc
mov
push
push
push
mov
sbb
setge
into
sysret
sub
mov
pop
adc
add
cmp
nop
nop
sbb
push
outsb
sub
pop
or
jp
push
addb
or
fldt
rorb
mov
sbb
sbb
sub
pop
pop
pop
xchg
paddusb
xchg
inc
bndldx
cmc
test
pop
fimuls
pop
push
pop
add
pop
sbb
call
or
sbb
push
xor
add
fadds
xchg
mov
sbb
pop
add
sbb
addl
nop
in
out
sbb
or
pop
pop
push
push
nop
inc
and
pop
sub
pop
pmaxsw
rol
ljmp
cmp
add
je
jmp
or
inc
jo
popa
add
pop
pop
nop
ja
and
or
jae
mov
loopne
sahf
or
pop
jo
or
pop
sub
rolb
popa
imul
insl
gs
into
and
dec
jo
repnz
push
or
adc
in
inc
adc
sub
daa
pop
shrb
xor
pop
add
adc
push
add
adc
sbb
dec
jnp
lods
pop
sub
pop
ret
inc
aas
add
push
inc
outsl
lock
addb
pop
test
add
push
je
mov
fmuls
adc
xor
adcb
fdivrl
ret
sub
pop
mov
rolb
adc
mov
test
divb
in
mov
stos
or
or
pushf
jmp
push
je
and
aad
addr16
push
les
nop
pop
fmuls
adc
push
ja
clc
pushf
or
cwtl
xchg
push
xlat
mov
test
cmp
xor
andl
add
mov
add
or
je
in
or
mov
adc
jno
add
or
rorl
jne
cmpb
jo
call
push
mov
adcb
rcrb
cmp
jo
push
mov
jbe
add
pop
enter
or
sti
add
push
aas
add
cmp
bnd
adc
fsubs
mov
outsb
call
movb
decl
adc
push
out
mov
fs
dec
jbe
push
pop
outsl
ss
jge
pop
adc
mov
mov
mov
pop
jo
xchg
movb
fldl
sub
ret
push
clc
loopne
pop
cmp
sbb
add
mov
jmp
mov
mov
or
xor
nop
mov
sahf
mov
push
cld
adc
insl
loope
pop
inc
add
loop
fisubs
add
ficomps
rolb
or
sbb
sub
push
mov
jo
dec
inc
aam
dec
xor
xchg
dec
lret
cmp
je
stos
lahf
mov
sub
sub
mov
ret
inc
cmp
mov
sbb
push
popa
pop
xorl
mov
jo
mov
inc
test
xchg
fstpt
lahf
je
mov
js
cmpsl
xchg
mov
rclb
clc
push
adc
daa
cmc
dec
jp
iret
or
mov
cmp
bound
ret
cld
icebp
dec
xchg
bound
pop
lods
push
mov
push
jne
dec
pop
adc
inc
loopne
mov
test
xchg
inc
wbinvd
pop
sub
jl
fs
jae
loopne
js
les
mov
jno
shr
adc
adc
mov
dec
gs
inc
cld
call
fcompl
jno
xchg
sub
sub
sub
mov
testb
mov
cmp
mov
mov
loopne
xchg
jo
and
inc
cltd
call
cwtl
jns
aam
push
loopne
mov
outsb
sti
xlat
add
and
test
add
repnz
sahf
lret
or
or
lock
adc
gs
adc
push
sbb
push
outsb
dec
mov
scas
in
arpl
int
and
dec
add
imul
shlb
in
jg
loopne
add
adc
jae
cs
add
loopne
pop
lcall
in
lods
sbb
lret
adc
pop
and
adc
add
js
roll
clc
movb
pop
mov
aam
ret
pop
iret
test
add
cmpsb
cmpsb
xor
xor
les
andb
in
add
mov
mov
loop
test
add
jg
xchg
testb
je
ds
adc
ret
pop
loopne
add
js
test
test
jne
test
push
sbb
mov
or
push
mov
pusha
push
push
jno
outsb
mov
mov
in
or
loopne
and
bound
cwtl
popf
add
test
movsb
push
dec
mov
mov
or
pop
jne
dec
or
sarl
lcall
inc
sbb
movl
in
mov
or
mov
sub
push
inc
add
call
pop
xor
stos
mov
inc
mov
notb
inc
cmpsl
sub
imul
sub
adc
or
inc
and
movsb
xor
and
es
movb
stos
movsl
pop
sub
push
dec
lret
ss
push
inc
add
cld
push
jmp
sub
insl
or
jmp
test
push
aam
cli
cmpsb
xchg
aad
popf
inc
cmpsl
shrl
pop
mov
in
dec
jecxz
add
jmp
movsb
pop
add
add
xor
adc
adc
push
inc
clc
outsb
fidivrs
dec
cmp
jl
ret
mov
ror
xchg
adc
add
or
and
stos
pop
mov
addl
push
ficoms
enter
pusha
roll
pushf
and
inc
dec
test
dec
add
jne
daa
mov
pop
mov
sbb
cwtl
and
xchg
and
loope
xchg
push
outsl
add
adc
hlt
sbb
dec
pop
pop
fcoml
pop
pcmpgtd
out
cmp
pop
mov
jmp
sub
sbb
inc
add
clc
push
sbb
rolb
add
pop
add
inc
sub
mov
mov
adc
add
and
jo
push
xlat
pop
jo
mov
adc
repnz
push
mov
outsl
cmp
bound
pop
xorb
mov
jge
setne
and
flds
mov
add
ss
mov
cli
mov
sbb
scas
add
sbb
faddl
je
push
xchg
and
pop
hlt
neg
jmp
arpl
mov
arpl
incl
pop
add
push
mov
mov
subl
sbb
rolb
and
inc
mov
repnz
push
mov
xor
sar
mov
pop
js
cld
rcll
scas
jb
adc
add
push
inc
or
dec
cltd
push
test
aas
sbb
pop
xor
inc
adc
pushf
rcr
sbb
outsl
in
movl
or
into
pop
repnz
shll
add
add
movswl
lea
or
mov
mov
sbb
adc
jne
ret
add
cs
out
in
in
mov
cmpsb
pop
push
and
rcr
sti
mov
call
enter
xchg
or
push
dec
mov
imul
inc
cmp
out
xchg
stc
jmp
inc
inc
or
xor
cmp
sbb
adc
dec
jg
mov
test
jle
adc
repz
cmp
jae
or
sub
repz
mov
push
test
jg
dec
push
je
dec
je
or
jmp
pop
sbb
shll
sahf
mov
and
cmpsb
idiv
and
adc
and
and
es
inc
pop
subl
rorb
or
je
ss
jmp
ret
mov
mov
imul
push
add
push
mov
mov
push
hlt
and
or
inc
add
push
inc
bound
movsb
aam
sub
mov
adc
mov
or
lods
sbb
cmp
push
push
loopne
aaa
aas
xor
lods
dec
sbb
in
or
inc
scas
sbb
add
add
in
js
arpl
adc
int3
outsb
pushl
push
fsubr
fs
push
push
and
push
adc
sub
inc
sub
add
sub
fwait
push
std
mov
gs
adc
jg
stos
icebp
mov
je
mov
xor
hlt
sbb
push
sbb
lock
jmp
inc
add
fmuls
loope
and
aad
inc
and
jnp
mov
je
mov
movb
push
dec
aas
rcrb
adc
push
cmp
je
lods
sub
adc
adc
or
sahf
sbbb
nop
fimuls
test
sbb
sarb
shr
push
test
jge
push
push
mov
imul
or
mov
pop
das
adc
ret
jno
cld
add
enter
or
int3
push
ret
mov
inc
push
adc
adc
mov
popa
cmpb
xchg
fisttpl
pop
movsb
mov
cmp
je
add
or
cmp
ficoms
pop
pop
jbe
and
and
xor
scas
inc
mov
je
mov
outsl
jmp
mov
das
mov
mov
test
jge
ret
adc
rcll
cmp
add
orl
fadd
cmp
sub
mov
sbb
ds
add
jne
add
sti
jb
mov
or
hlt
clc
and
lahf
sbb
lea
and
jnp
mov
in
push
pop
add
mov
cmpl
jle
or
xor
cmp
aam
nop
inc
xchg
xor
insb
and
adc
cwtl
xor
test
and
add
cmp
mov
lret
or
pop
sbb
mov
add
dec
cli
mov
push
push
aaa
pop
jne
push
mov
clc
sbb
movsb
test
jge
ja
inc
ficomps
push
pop
sbb
and
out
test
sbb
adc
outsb
push
mov
xchg
lahf
mov
out
inc
or
add
push
or
ds
sbb
add
lea
cmp
push
dec
and
mov
fdivl
or
and
xchg
adc
lret
sbb
jno
xorl
or
xor
cwtl
cmpsl
lcall
inc
lahf
adc
add
sub
and
movb
es
and
adc
push
inc
or
scas
sub
inc
dec
addr16
lret
fsubr
and
fwait
mov
adcl
cmpsl
mov
and
outsl
sub
sbb
arpl
pop
ret
inc
dec
add
pop
sbb
mov
out
mov
hlt
pushf
into
xchg
lods
jno
daa
int
call
add
pop
add
movsb
sbb
and
andb
movsb
clc
mov
push
push
je
adc
jo
scas
adc
lock
dec
mov
adc
jge
mov
xor
push
in
aas
movsb
add
push
sub
cwtl
sbb
mov
dec
adc
clc
jg
inc
testl
sub
xor
or
jp
scas
das
pop
fsubrl
jbe
clc
out
insl
mov
pop
mov
fwait
jp
push
fdivrl
enter
cmp
push
dec
add
dec
add
fs
int3
mov
pop
adc
cmpsl
mov
pop
push
mov
mov
push
in
inc
nopl
mov
pop
dec
cmp
in
mov
lahf
xor
jecxz
loopne
jno
cmpsb
imul
pop
ljmp
cmpl
adc
add
clc
ja
xchg
pop
je
mov
sbb
push
xor
add
xor
popa
outsl
sbb
pop
jae
pop
outsb
lret
loopne
int
aas
inc
data16
push
pop
mov
cmp
je
push
int
pusha
sbb
rcr
stc
test
xchg
mov
test
ret
scas
loop
xor
sbbb
jp
clc
addb
cmp
or
pop
stos
mov
inc
or
xor
outsl
xchg
outsl
iret
adc
inc
outsl
cmp
or
xchg
xchg
dec
and
sbb
xor
clc
sub
adcl
scas
mov
testb
dec
sub
or
add
xchg
push
imul
and
push
pop
loopne
mov
dec
sar
test
daa
orb
lea
or
sub
add
xlat
sbb
inc
add
or
sbb
shlb
lock
adc
divb
mov
or
push
push
lea
pop
cmpb
or
or
adc
loopne
push
and
fcmovnu
fs
leave
dec
mov
cmp
jge
sbb
daa
sub
sub
sbb
addb
mov
dec
andl
movb
inc
jl
xchg
mov
sahf
data16
xor
xlat
fistpl
mov
movsb
outsl
adc
xchg
rcll
push
mov
push
or
stc
movsl
cmp
je
pop
and
adc
inc
mov
enter
jns
xchg
lods
dec
cmp
aam
stos
cmp
push
push
sub
mov
mov
jne
je
push
stos
and
imul
in
bound
lahf
movsl
add
push
imul
flds
nop
repnz
jo
dec
clc
push
stos
pop
inc
add
leave
jmp
xor
sub
or
in
loope
sbb
pop
dec
je
lods
shr
mov
jmp
mov
int3
jp
roll
xchg
loopne
add
cmp
lret
xor
fstpl
mov
mov
sbb
and
mov
stc
ss
je
jp
mov
xorb
mov
jne
cmp
jo
lock
adcl
dec
test
in
jns
das
lock
mov
cmp
mov
inc
cmc
inc
daa
les
ret
repnz
cli
cmp
inc
and
xor
cmp
jge
cmp
mov
ret
adc
orb
jle
cli
push
sub
and
xchg
mov
sbb
ds
add
dec
negl
add
xchg
inc
fstpt
cwtl
ljmp
inc
mov
lock
aaa
test
rorb
xchg
mov
or
pop
inc
clc
movl
leave
mov
ret
js
adc
push
hlt
mov
pop
loope
xorb
je
leave
adc
rcrb
test
or
fistps
call
fisttpl
insb
icebp
movsl
fsincos
movl
mov
mov
adc
in
and
cmp
mov
jg
or
mov
jg
sub
add
dec
mov
add
jne
pop
add
loopne
arpl
jns
xchg
add
js
jle
add
mov
dec
mov
fsubrl
lea
shr
loope
hlt
add
clc
inc
adc
mov
js
lea
int3
dec
or
gs
cmp
sbb
aaa
andb
xor
mov
loope
cmpsb
daa
mov
ret
push
fsubrl
and
push
push
dec
jo
cmp
test
and
xor
pop
or
in
fs
fiadds
lea
in
add
iret
in
ret
out
mov
cmpl
mov
cmpsb
adc
dec
or
or
icebp
add
mov
mov
pop
cli
orb
and
ss
dec
mov
mulb
adc
test
loop
aaa
into
int3
mov
inc
loopne
enter
test
pop
dec
sbb
mov
movsb
sub
push
daa
out
dec
sbbb
dec
sub
call
adc
movb
mov
cmp
hlt
add
lods
addb
push
or
xor
pop
xor
sub
mov
popa
imul
add
mov
adc
mov
mov
mov
lock
mov
sbb
je
xchg
std
cmpsb
int3
dec
rorl
in
or
movsb
jmp
jno
inc
mov
sbb
pusha
pusha
lods
sbb
sub
lahf
sbb
adcl
xchg
inc
jmp
fld
fdivr
mov
aas
xchg
and
dec
jb
pushf
movl
hlt
incl
movsl
sub
pop
orb
add
xor
mov
and
scas
inc
jl
add
cltd
xchg
sub
cmp
mov
cli
cld
adcl
shlb
add
cmp
and
insb
push
jo
aaa
shrl
lds
hlt
push
cmc
stos
loopne
inc
or
jmp
cwtl
cmp
add
jb
dec
mov
movsw
or
mov
add
mov
lods
mov
into
inc
aam
xchg
add
jecxz
sub
cmp
fs
sbb
add
mov
test
cmp
pop
movsb
sub
mov
or
pop
sbb
mov
and
or
idivl
add
adcl
in
sbb
movsl
mov
push
sbb
fcompl
xor
dec
clc
test
lcall
fiaddl
testb
cmp
jnp
pop
push
aad
inc
stos
push
pop
cmpsl
sbb
mov
sbbb
cmpb
or
pop
xchg
jecxz
and
lret
mull
inc
jno
or
in
and
pop
lods
test
xor
cmp
scas
orl
pop
jp
xor
pusha
mov
mov
lret
xor
cmp
mov
add
mov
mov
fiaddl
fldenv
sub
and
fstpl
cmp
bound
je
cmp
testb
repz
inc
pop
jecxz
mov
jle
ret
mov
je
out
mov
test
sub
xchg
add
lret
cmp
leave
imul
or
insb
push
dec
test
call
test
xchg
cmp
lcall
mov
sub
enter
xor
push
faddl
add
xchg
adc
nopl
in
xchg
in
cmp
add
push
push
js
adcb
test
pop
cld
xor
push
push
mov
js
int3
push
fcomps
nop
mov
adc
adc
xor
inc
cld
in
xor
loopne
adc
inc
add
cmp
mov
jo
or
pop
cmp
mov
aam
cli
dec
cmpl
mov
testb
mov
cmp
je
jae
inc
loopne
push
cmpsl
mov
xor
and
jo,pn
icebp
pop
test
sti
test
or
add
hlt
mov
rclb
imul
inc
mov
sub
lock
adc
inc
or
mov
enter
scas
xor
cmp
nop
loopne
add
push
sub
push
add
shll
add
orb
jmp
pop
or
pop
int
and
in
sub
loopne
xor
sbb
idivb
jmp
xor
push
add
adc
imul
jno
mov
mov
setne
and
push
adcb
lret
mov
sbbb
inc
test
rclb
xor
add
and
ja
mov
xchg
out
ds
sarl
inc
push
sub
dec
inc
outsb
andl
loopne
push
cmp
dec
jae
loopne
lds
sbb
xchg
pop
adc
int3
sbb
sub
pop
push
dec
clc
pop
fisttps
pop
rcr
add
and
rcrb
das
push
push
push
pushl
icebp
add
cmp
push
add
dec
push
mov
push
lock
and
es
mov
fisttpll
rolb
push
mov
hlt
xor
sbb
sbb
or
in
ficoml
push
xchg
xchg
xor
xchg
push
dec
push
enter
leave
les
insb
dec
insb
in
es
add
enter
push
jmp
xorb
push
adc
sbb
ss
hlt
xchg
js
xor
and
mov
cmp
or
aaa
pop
les
inc
cld
cmp
jecxz
aaa
inc
shlb
inc
mov
getsec
and
adc
mov
mov
fucom
addr16
stos
mov
loopne
fisubrs
aas
mov
or
mov
outsb
add
fdivr
ds
add
aas
mov
movsb
and
fwait
mov
cmpsb
sarb
shll
push
pop
aaa
inc
hlt
adc
pop
adc
or
mov
and
movswl
ret
push
dec
les
adc
pusha
push
mov
sbb
cmp
sbb
add
inc
loop
sub
ret
xchg
pop
inc
cmp
or
push
inc
add
data16
add
mov
or
repz
loopne
push
fldenv
insl
adc
xchg
jge
sub
push
cmc
jge
adc
pusha
push
imul
test
cli
add
xor
sbb
fisttpl
xchg
cmp
xchg
mov
roll
pop
jecxz
shll
rolb
cmp
lods
in
std
addr16
push
push
push
jl
jmp
loopne
mov
sbb
or
and
arpl
sbb
xchg
push
das
mov
jl
add
cmpb
int3
nop
int3
cmpl
xorb
ss
add
outsl
mov
cld
sbb
sub
inc
xchg
addl
add
cmp
xlat
fiaddl
test
call
mov
cmp
clc
pop
loop
test
fcoml
adc
jnp
and
clc
mov
popf
les
xchg
loopne
cmp
sar
cld
jmp
xchg
shl
sbb
cmp
xchg
jo
sub
imul
sub
add
mov
addl
add
add
rorb
ficompl
pushl
add
cmp
inc
cmp
jne
dec
push
scas
and
ss
mov
pushf
loope
push
inc
cld
cmc
cmp
clc
les
clc
mov
pop
add
sub
test
mov
jb
clc
jne
imulb
xchg
add
mov
sbb
ret
push
insb
jle
inc
add
mov
test
nop
movsb
mov
icebp
push
pusha
mov
push
aam
add
sarb
ja
mov
mov
call
jne
sub
outsl
cs
pop
mov
pop
outsl
add
fsubrl
inc
sub
mov
pop
movl
test
loopne
add
jmp
sub
adc
and
mov
jmp
or
or
hlt
adc
mov
fldt
mov
pusha
test
clc
leave
mov
ftst
loop
adc
ljmp
mov
sbb
jmp
or
mov
and
nop
add
add
bound
fs
lods
push
pop
sbb
pop
testb
je
cmpsb
or
inc
imul
and
mov
or
pop
push
je
sti
push
adc
push
loopne
lods
add
in
xlat
push
shl
mov
out
out
dec
fcoml
out
and
jne
cmpb
repnz
add
and
sbb
daa
loopne
cmc
lea
insl
lock
sbb
mov
pop
movhps
pop
add
xor
fmuls
xchg
clc
adc
mov
inc
sti
int
lock
js
cld
inc
pop
movsb
aaa
ss
bound
jne
mov
out
or
mov
les
shlb
insl
inc
mov
and
xchg
add
fs
xchg
sbb
or
cmp
das
call
sbb
jne
ror
into
mov
add
mov
adc
arpl
and
aaa
test
inc
clc
dec
mov
xchg
cli
adc
call
sub
pop
add
sub
jb
in
aad
sbb
je
dec
or
nop
xor
mov
ljmp
in
push
jmp
add
add
test
mov
ljmp
rolb
repnz
sbb
or
lock
outsl
lret
outsb
jbe
and
or
sbb
cmpsl
data16
ficompl
xchg
mov
jbe
push
and
mov
test
push
mov
sbb
outsl
jbe
xor
ffree
int
cmpb
lods
mov
cmp
sbbb
adc
dec
jae
add
lds
jne
rorl
cld
sub
pushf
icebp
push
inc
xor
fwait
push
or
jp
xor
add
pop
gs
lock
fcoms
add
inc
pop
jecxz
loopne
add
sbb
lods
ret
mov
and
mov
dec
cmp
mov
js
inc
stos
imul
push
cmp
xor
gs
lock
ss
cmp
xchg
xor
xor
mov
call
js
xor
movsb
nop
scas
imul
xor
cli
pop
or
and
adc
xchg
adc
rclb
and
add
fldl
add
inc
or
es
scas
roll
add
add
adc
xsaves
das
mov
push
fisubrl
mov
add
push
stos
je
sbb
xchg
mov
adc
cmpl
pop
cmp
pusha
xorl
xor
sbb
in
pusha
inc
dec
addr16
in
sarb
adc
push
testb
rclb
cmp
div
pop
jge
sbb
nop
mov
and
adc
lea
push
mov
test
ret
jbe
roll
ret
push
push
sbb
or
push
jp
push
fisubrs
jno
loopne
pushf
jle
hlt
pushf
call
cld
cmc
mov
push
sub
mov
mov
jl
cmp
mov
adc
add
out
dec
mov
xor
and
add
ret
dec
or
hlt
cmp
dec
or
adc
dec
leave
inc
xchg
pusha
loopne
inc
lock
mov
dec
clc
out
push
fldenv
fcompl
aaa
and
fs
xchg
push
dec
std
cltd
add
repz
push
bound
mov
xor
or
add
mov
dec
sub
sbbb
xchg
mov
iret
dec
push
cmp
mov
out
icebp
or
and
jl
sahf
mov
aad
dec
sti
jne
and
rcrb
sbb
jl
hlt
jecxz
cmpsb
out
push
add
dec
rorb
je
or
sbb
jmp
call
movsb
roll
inc
lods
pop
je
or
pop
movl
pop
inc
inc
loopne
push
and
adc
push
sbb
add
inc
lea
movb
rorb
sbb
cmp
dec
movsb
mov
add
jge
adc
call
sbb
mov
clc
add
or
cld
mov
out
add
add
add
add
add
mov
sbb
jnp
jge
add
sub
push
dec
dec
mov
mov
aaa
jns
adc
pop
shl
inc
roll
pusha
lea
sbb
add
dec
out
mov
std
cmpsb
or
neg
xchg
movsb
fcoms
pop
mov
mov
and
das
mov
mov
jmp
xchg
in
pop
lock
inc
orl
into
in
or
xchg
loopne
add
push
ss
sub
push
pusha
xchg
adc
sub
push
push
push
push
mov
sti
sub
add
push
popa
sub
dec
or
daa
or
addl
pusha
xchg
icebp
add
jl
out
jg
push
imul
mov
in
aam
sbb
push
fldt
icebp
adc
inc
inc
daa
sub
pop
jecxz
js
fistps
dec
and
push
outsl
lret
enter
sub
negl
sbb
ficoms
out
and
adc
pop
jne
cmp
mov
sub
pusha
add
mov
add
nop
ljmp
lahf
arpl
cld
je
or
push
pop
cmp
xchg
jecxz
jno
jo
cmpsl
push
aad
dec
sub
and
xchg
icebp
pop
pop
pop
xlat
inc
add
lea
ja
add
fidivrl
gs
les
dec
and
lea
lea
inc
das
add
add
outsl
pushl
add
push
mov
adc
mov
lock
xchg
add
test
repnz
cli
hlt
incl
jb
call
mov
cmpb
daa
cwtl
or
add
add
sahf
adc
push
test
mov
jbe
aad
jmp
rcl
jmp
leave
pop
icebp
fsts
add
jmp
sbb
xchg
arpl
add
push
or
bswap
adc
std
repz
xor
pop
orl
add
xor
add
xchg
fdivp
addl
fisttps
jno
xchg
jge
or
arpl
xor
popf
sbb
es
or
and
jg
loope
and
test
pop
and
pop
push
inc
stos
mov
push
sub
cmpsb
xor
lea
mov
and
pop
pop
push
icebp
mov
xor
andl
outsb
jle
sub
and
xlat
jae
das
push
cld
prefetchw
add
mov
enter
sbb
and
push
mov
jns
jb
push
dec
push
pop
pop
invlpg
or
pop
aas
loopne
mov
xorl
sarb
cmpb
je
aaa
adc
mov
push
mov
mov
or
sbb
std
sbb
out
xchg
pusha
inc
cltd
aaa
dec
inc
add
popf
add
mov
mov
pop
adc
dec
pop
adc
arpl
mov
inc
shrd
pop
pop
pop
dec
popl
inc
xchg
hlt
adc
mov
imul
mov
jmp
pop
add
xor
xchg
in
add
pusha
and
xor
jae
scas
or
adc
xchg
cmc
cmp
adc
xor
push
xor
inc
cmp
cmc
dec
int3
add
sub
and
push
pop
sub
xor
cmp
and
and
add
pusha
loope
cmp
jge
inc
lods
inc
jo
or
arpl
mov
cld
push
popa
cli
rcll
fwait
loopnew
push
push
and
mov
mov
arpl
pop
sub
inc
sbb
mov
cmp
xchg
adcb
xor
fists
or
or
lea
pop
stos
adc
mov
int3
add
or
xor
inc
js
adc
clc
jne
cmp
insl
add
mov
push
inc
addl
push
lock
lds
or
loop
lret
add
addr16
lods
lret
aaa
mov
mov
movb
popl
iret
push
mov
lea
cmpl
pop
mov
push
cs
push
in
cmp
loopne
jmp
aaa
cmpl
cs
lea
jp
push
sbb
icebp
inc
daa
add
out
or
push
mov
xor
xchg
dec
mov
sbb
adc
pop
adc
mov
mov
inc
sbb
adc
push
mov
or
mov
ret
push
add
push
push
data16
jmp
mov
mov
or
jle
sub
cmp
mov
call
fildl
and
movsb
dec
test
arpl
fisttpl
push
or
or
loop
daa
mov
push
scas
cmpb
sub
sbb
push
cmp
inc
cmp
test
push
jg
mov
jo
add
je
cmp
sub
adc
pop
push
or
dec
fisttps
dec
mov
cltd
sub
push
sub
xor
daa
mov
es
push
fmuls
nop
jbe
flds
lret
or
pusha
and
fmull
insb
or
xchg
sarb
jne
aam
xchg
rclb
fs
shr
aam
les
inc
xchg
lcall
add
cmp
jne
mov
pop
stos
adc
cmp
lret
jnp
insb
xchg
inc
xchg
movsb
dec
xor
inc
aaa
shrb
sbb
imul
aaa
ja
pusha
call
cmpl
pop
jle
loop
add
or
repnz
and
and
les
pop
lock
loope
push
mov
push
push
pop
sbb
icebp
pop
or
test
or
xor
add
sub
jecxz
mov
rolb
out
out
aad
cmp
xor
pop
jl
ret
ret
cld
lods
dec
insb
aas
scas
jno
decb
leave
mov
cmpsb
mov
aad
es
pop
sub
popa
cld
dec
imul
mov
inc
mov
nop
push
int
cld
frndint
xor
movb
push
lock
adc
pusha
jge
cld
jne
es
andl
inc
and
stos
and
adc
nop
rolb
ds
sub
sub
or
lea
pop
mov
mov
pop
js
dec
and
cmc
or
pop
mov
testb
je
cmp
jb
push
mov
jb
shll
push
xlat
pusha
jmp
sbb
les
fwait
jns
clc
pop
sub
imul
arpl
je
aaa
jl
adc
add
gs
loop
and
inc
hlt
adc
cmp
stos
test
and
mov
cmpsl
dec
xor
ror
js
pop
xchg
adc
arpl
popa
xchg
lock
dec
popa
fs
xchg
mov
mov
addl
sbb
addl
das
ret
or
insl
orb
or
movsb
das
out
loop
jge
add
mov
jl
test
pop
jmp
xchg
inc
orb
xchg
jle
mov
cmp
lret
in
btc
loopne
lods
aaa
scas
fdivrs
xchg
xor
je
mov
arpl
lock
sahf
adc
test
scas
push
jo
add
ljmp
push
sbb
mov
rolb
test
sbb
fmull
inc
dec
mov
sub
enter
adc
sbb
cmp
rcll
or
xchg
and
xchg
iret
aas
add
push
pop
sbb
mov
xchg
adc
insl
rorb
aas
loopne
xchg
arpl
rorb
inc
adc
push
jo
or
xlat
and
pop
pop
add
push
add
inc
sbb
dec
pop
sbb
aas
ljmp
cmp
jne
mov
scas
inc
iret
xchg
cmpl
add
xchg
jecxz
flds
mov
pop
or
ds
aas
cld
lods
push
shrb
dec
xor
fisubl
push
out
sahf
dec
jg
addr16
jne
cmpb
notl
ret
adc
xchg
or
add
arpl
or
mov
xorl
mov
cmpl
xor
xchg
cmp
push
test
rcll
mov
dec
adc
divb
jmp
les
add
mov
jo
push
sbb
push
adc
push
adc
jo
xchg
sbb
xchg
sbb
cs
jl
xchg
inc
nop
adc
aaa
out
xor
jne
ret
push
sbb
mov
mov
pop
dec
and
dec
mov
jo
sbb
add
pop
sub
xchg
xor
jne
hlt
jle
pop
add
pusha
xchg
enter
call
and
add
rclb
in
xchg
xchg
mov
and
add
aad
sbb
add
call
test
push
pop
cmp
sti
pop
push
lahf
add
jg
xor
xor
jae
xchg
sub
xchg
inc
loopne
pushf
pop
inc
cmp
lds
sarb
mov
fisubrl
dec
push
enter
loopne
add
or
lods
jbe
das
pop
sub
mov
insl
mov
lods
sbb
dec
and
adc
push
dec
mov
test
insb
adc
jno
stos
jecxz
clc
dec
xchg
fiaddl
adc
rolb
add
and
cmpsl
mov
js
in
mov
and
loopne
call
cmp
pop
inc
inc
enter
dec
out
dec
test
jne
pop
cmpb
pop
xor
sub
lret
adc
jo
outsl
add
xchg
ja
cld
test
loopne
cmovp
movsw
imul
scas
sbb
inc
negb
mov
jmp
lret
pop
loopne,pn
or
add
adc
lods
iret
or
mov
mov
xchg
js
mov
push
push
and
adc
in
subl
pop
push
pop
inc
cwtl
fstl
in
mov
push
and
cmp
or
mov
or
mov
push
sbb
sbb
jns
push
ret
jp
adc
jmp
cmpsl
roll
outsl
sbb
cmp
sbb
xor
pop
add
push
push
jo
sub
xchg
adc
outsw
sub
push
adc
mov
push
inc
xor
pop
mov
jg
adc
cmpsl
sub
mov
push
jne
lahf
xchg
mov
or
sbb
pop
mov
pop
push
dec
xchg
xchg
rclb
or
push
out
into
mov
lods
adc
pop
mov
jp
push
xchg
insb
cld
addb
or
sbbl
add
jmp
push
and
aaa
jp
roll
sbb
mov
mov
and
inc
jno
mov
scas
je
pop
mov
jg
lds
inc
jmp
cmp
cmp
jo
inc
lods
jmp
cmpl
sub
xor
scas
jecxz
sub
sahf
les
and
jbe
sahf
mov
jl
filds
je
mov
cld
mov
lock
sub
inc
mov
iret
add
and
in
sbb
cmp
insb
lret
add
mov
add
lea
lea
sbb
and
cs
lds
rolb
mov
sbb
add
sub
pop
xchg
push
fimuls
cmp
add
adc
decb
push
subb
push
add
andb
stos
inc
jne
shll
lods
adc
adc
xchg
movb
es
sbb
mov
adc
sub
mov
sbb
aas
pushl
pop
sub
inc
add
sub
cmp
inc
mov
cmp
push
and
roll
sub
cmp
ret
cmp
add
mov
dec
or
sbb
clc
ss
fsubs
int
or
or
rcll
inc
push
pop
movl
jmp
mov
test
add
mov
loope
pop
xor
or
outsl
mov
repnz
mov
mov
fimuls
in
mov
das
push
pop
pop
sub
push
ret
dec
ret
lea
push
insb
mov
and
push
loope
sub
leave
mov
xchg
mov
mov
add
je
rclb
jns
lods
jg
divl
xor
push
adc
fstpt
js
rclb
pop
add
sbb
lahf
adcb
orl
push
jo
subl
sbb
and
add
adcl
lock
push
or
lock
addr16
mov
les
test
sbb
mov
add
xor
inc
dec
lret
sub
fs
sub
push
cld
lea
dec
jp
sub
xchg
test
adc
mov
push
imul
test
sbbl
aam
in
mov
push
leave
mov
in
inc
sub
lea
mov
add
loopne
push
in
lock
push
call
cli
inc
xor
jo
add
mov
and
lea
dec
adc
push
add
push
jns
xchg
add
lea
rclb
jl
cld
rep
andl
xorb
scas
sbb
mov
cmp
cmp
addl
cltd
mov
test
loopne
aaa
mov
cmp
je
add
xchg
push
xlat
cmp
push
jne
mov
lds
xchg
dec
push
xchg
movsl
jo
addb
or
pop
call
ret
adc
gs
repnz
lods
mov
adcl
and
fs
mov
or
pop
outsl
jae
add
movl
movsl
lock
jno
sti
dec
push
push
clc
adc
or
inc
cmpsl
and
xchg
jo
jl
fidivl
pop
push
enter
and
sbbl
fildl
jo
test
fstpt
mov
decl
cld
adcb
pop
pushl
outsl
pop
leave
out
push
mov
inc
hlt
mov
rorb
add
add
faddl
incb
je
pop
jo
inc
pop
push
popf
adc
add
inc
or
add
sub
dec
push
stos
sub
daa
and
sbb
inc
push
xor
cs
dec
ds
mov
cmp
and
in
lahf
cmp
push
inc
cmp
je
jmp
add
jecxz
jne
lea
pop
aaa
test
sbb
cmpsl
mov
add
test
jge
jb
ret
add
scas
stos
sbb
xchg
aaa
mov
inc
mov
outsb
sbb
xchg
xchg
andb
xorl
push
shlb
scas
pop
sbb
pop
inc
add
pusha
xor
adc
pop
es
sbb
lea
add
inc
cld
jne
cmp
je
out
jmp
adc
fidivrl
fisttps
push
fs
inc
push
push
mov
mov
iret
sbb
add
cmp
test
mov
adc
jno
dec
mov
jno
or
adc
inc
cmp
add
test
dec
push
outsb
dec
jo
or
mov
es
mov
jne
js
bound
loope
fcomp
mov
mov
adc
and
mov
cs
js
inc
cmp
or
mov
dec
push
mov
jne
mov
mov
cmp
jmp
adc
movsb
sbb
mov
test
mov
divl
mov
mov
cmp
push
and
pop
shll
sbb
scas
inc
adc
jne
mov
xor
sub
and
or
das
or
mov
fisubs
sbb
dec
call
cltd
jae
push
nop
test
lods
ss
cmp
pop
mov
mov
cmp
fcoms
inc
not
and
mov
adcb
shlb
sbb
add
icebp
pusha
dec
mov
cmp
fmuls
push
loopne
or
xchg
pop
and
dec
addb
cmpsb
dec
xor
xchg
pop
or
cmp
xor
jp
cmp
andl
lods
xor
mov
andb
movsb
mov
test
pop
mov
mov
cmpb
jne
cmp
rorb
pop
cs
sub
hlt
xchg
jmp
adc
inc
push
test
sbb
adc
das
pop
adc
add
mov
jbe
movntq
les
push
jns
mov
sti
inc
lret
mov
mov
xchg
jg
jnp
into
ljmp
iret
ss
mov
cmpl
inc
inc
js
fadd
je
xchg
cmpb
je
xor
mov
inc
fnstcw
xchg
orb
rol
inc
sbb
adc
xchg
jge
add
dec
fs
add
pop
jg
push
sbbl
xor
aas
mov
je
out
adc
jo
out
push
cmp
cmp
adc
or
dec
loopne
loopne
fdivs
shlb
fiaddl
jl
xor
pop
add
cmp
add
adc
data16
mov
sbb
sbb
movsb
jb
movb
add
jbe
ffreep
jg
inc
rol
jecxz
mov
xchg
lret
cli
xorb
push
aad
jmp
add
jp
les
ret
dec
mov
aaa
adc
clc
add
clc
adcb
xor
and
pusha
sbb
popl
data16
fisubs
lea
mov
insl
outsb
jne
sub
jle
enter
pop
or
xor
test
lock
sbb
adc
adc
adc
push
or
or
in
and
adc
das
jne,pt
push
js
mov
inc
in
addb
sti
movsb
add
jmp
xlat
inc
adc
jae
mov
and
mov
push
daa
jno
jbe
into
aam
mov
xchg
sbb
add
cmpsl
sub
pusha
dec
sbb
lret
scas
jns
xchg
push
adc
arpl
and
jecxz
pop
ret
sub
pop
mov
mov
pop
sti
xchg
cld
jno
and
pushf
ss
fisttpll
rcll
sub
xorl
data16
rorb
test
push
and
mov
fcmovnu
stos
ljmp
cmpl
dec
cmpsb
cmp
push
add
rcr
fiadds
cld
cmpsb
dec
dec
dec
test
jl
inc
roll
push
jne
push
xchg
mov
cmp
mov
xchg
fsubrs
in
sti
orb
gs
addb
test
adc
scas
sbb
shlb
sti
jne
movzwl
cmp
lods
pop
mov
and
jp
iret
jle
shlb
xor
xor
mov
sbb
pop
int
add
fs
fs
lock
mov
outsl
addr16
adc
or
dec
loope
in
push
cli
inc
cmp
test
xchg
add
inc
je
daa
or
clc
jle
lea
addr16
xor
in
or
inc
lock
daa
fstpl
mov
cmp
push
daa
add
mov
je
adc
test
or
xor
jno
pop
add
or
ds
xor
orb
sbb
inc
sub
sarl
and
mov
fwait
aas
rorb
cmp
xor
ret
xor
cmpl
dec
push
or
jns
mov
sbb
arpl
add
push
dec
and
cmp
add
jmp
jae
aad
adc
jne
mov
outsl
mov
xor
and
std
jae
pop
out
call
mov
nop
bound
adc
jle
pop
or
push
insb
adc
in
xor
decl
imul
loope
pushf
dec
in
cmpl
je
mov
sub
shll
and
and
adc
adc
sub
stos
push
or
loope
js
and
cli
sbb
push
repnz
test
add
jl
into
js
mov
out
jecxz
cwtl
and
push
cwtl
ss
push
movsb
pop
imul
dec
or
pusha
mov
movsb
push
xchg
je
mov
cmc
push
and
fisttpl
xchg
sub
xor
push
enter
mov
in
inc
inc
mov
sar
add
cwtl
pop
rorb
lea
mov
mov
cmp
adc
jne
int3
test
ss
add
test
pop
aad
nop
sbb
or
xchg
adc
cmp
push
cmpsl
xchg
dec
iret
xorb
sub
push
push
and
jb
fwait
pop
jmp
je
cmpb
sbb
cmp
push
and
mov
jae
sbb
xchg
mov
and
outsl
imul
sbbb
test
push
add
xor
pop
enter
mov
test
popl
pushf
call
inc
in
and
cmp
or
gs
mov
mov
adc
call
xchg
clc
ljmp
pop
stc
je
xor
xorw
jp
pushl
cmpw
xor
lods
cmp
inc
inc
add
inc
push
adc
add
inc
or
out
cmp
pop
sub
add
ss
sbb
test
dec
movsb
call
inc
mov
or
sbb
cmpsb
add
mov
and
fnstsw
dec
cmp
inc
pcmpgtd
popl
push
mov
mov
rclb
adc
aam
loope
insb
push
mov
cmp
scas
into
pop
and
fidivs
pop
mov
sbb
leave
js
loopw
hlt
cmp
jg
bound
push
or
jno
jp
push
daa
adc
xlat
or
lea
or
inc
xchg
adc
data16
loopne
pop
sub
jecxz
push
movl
addr16
xlat
popa
fmull
cmp
jne
pop
jne
pop
xchg
jecxz
nop
orb
and
punpckhbw
push
and
add
fsub
cltd
dec
inc
pop
cmp
popa
bswap
add
jne
adc
pop
pop
addr16
mov
cmp
popa
sub
mov
add
add
les
jp
xchg
or
xorl
jmp
icebp
lock
sbb
mov
add
andl
adc
or
pop
mov
rclb
adcl
and
mov
xor
jmp
loopne
loopne
jae
inc
or
ret
add
jecxz
dec
in
je
add
insl
test
stos
test
imul
inc
jg
jne
mov
and
dec
add
stc
add
leave
cmc
add
add
adc
and
push
pop
and
xchg
jp
and
addb
clc
xor
cwtl
in
mov
push
gs
inc
loopne
lret
les
ja
dec
leave
add
xor
xor
mov
loop
pop
out
stos
mov
cmpl
inc
mov
jmp
sub
or
pop
add
fildll
dec
add
outsl
movb
xorl
imul
jecxz
imul
mov
push
out
pop
or
test
or
cmp
test
cmpsl
mov
adc
or
push
add
pop
xor
test
hlt
lods
lods
push
adc
sbb
test
lea
jne
test
inc
jae
fimull
bound
out
aaa
jge
sbb
out
shlb
out
mov
push
jmp
dec
ds
adc
out
jmp
movb
push
mov
pop
mov
jnp
xlat
ret
adc
insb
out
mov
fldt
sahf
not
push
mov
testb
or
jge
jne
dec
out
mov
mov
xbegin
xor
dec
and
sub
push
pushf
jo
adc
or
sub
loopne
xchg
test
mov
xchg
push
push
stos
sub
loope
lock
cld
push
rorl
and
jg
inc
je
push
sbb
jbe
add
mov
les
sbb
and
out
xor
mov
push
icebp
sbb
test
cmp
fwait
sbb
movsb
sar
pop
push
lock
adc
add
shrl
cltd
xor
sub
mov
cmp
push
jge
sub
mov
test
pop
fbstp
xchg
dec
movsb
sub
lock
xchg
pusha
add
add
movsb
sub
cmpb
jmp
xor
adc
push
loopne
inc
adc
add
test
jle
and
in
pop
subl
inc
dec
jne
adc
dec
jne
arpl
push
xor
dec
adc
mov
popf
add
xchg
sub
lea
sbb
pop
xchg
jo
rcrl
jo
mov
pop
mov
and
add
imul
fsubr
mov
rcll
mull
stos
jle
sbb
mov
jo
sbb
sbb
mov
jne
jb
add
cli
xorb
pop
sub
push
adc
dec
lea
test
lods
pop
arpl
jg
xchg
xor
add
inc
sbb
dec
and
clc
xchg
sub
push
ljmp
shlb
call
insb
jle
adc
ret
enter
push
nop
or
stos
idiv
stos
inc
outsb
push
inc
add
pop
call
call
push
adc
aam
mov
jle
sub
bound
imul
pop
xchg
xchg
fsubrl
push
adc
xchg
xchg
or
push
jg
add
or
cwtl
jb
daa
sub
ljmp
xor
dec
movsb
ret
popa
std
sub
mov
push
aad
inc
loopne
ret
xchg
fadds
mov
cltd
mov
inc
mov
test
jb
test
sar
jl
inc
loopne
das
add
or
add
inc
add
sub
jb
jmp
sarl
add
jl
push
or
popf
rorl
test
dec
pop
adc
inc
test
push
fstpl
sbb
daa
je
or
or
jmp
sub
add
xor
or
dec
mov
add
ss
add
inc
arpl
adc
imul
jp
jecxz
je
lea
mov
push
clc
jge
je
rcrb
sbb
add
mov
push
xchg
cwtl
scas
lahf
and
repz
cmpb
xor
add
mov
jmp
push
jmp
mov
dec
xor
aam
cmpsb
aaa
cmc
ret
aas
cmpsb
inc
sub
ret
lds
mov
testl
sub
sar
adc
test
cld
fists
mov
jo
sar
jns
adc
jmp
addb
xchg
lods
aas
popf
xchg
rcrb
add
addr16
les
fcoms
lock
popa
ljmp
lock
lahf
inc
dec
lret
inc
dec
or
adc
aam
xchg
push
sub
inc
js
mov
filds
fidivrs
test
ret
pop
add
push
rol
dec
pop
pop
jne
adc
mov
push
mov
push
mov
pop
cmp
rcrl
and
inc
dec
jns
in
or
inc
xor
rcl
rorb
js
add
ret
xor
js
or
popa
xchg
testl
push
or
popa
mov
or
pop
xchg
jnp
mov
adc
add
xor
sub
rorb
jo
movsb
cmp
and
dec
shrl
lock
xchg
xor
jnp
push
xor
xor
sarl
shl
xchg
jne
add
pop
leave
sbb
adc
ret
add
xor
push
testl
mov
mov
adc
ret
add
mov
mov
mov
lahf
xor
jnp
pusha
fdivrl
in
xlat
dec
mov
mov
and
insb
pop
add
push
mov
add
cmp
shrb
rorl
roll
mov
push
je
push
sbb
jae
sbb
and
addb
rorl
mov
pop
shlb
mov
xor
mov
rolb
jmp
mov
mov
mov
aam
sbb
addl
adc
inc
imul
add
sti
adc
leave
loope
mov
xchg
leave
pusha
mov
adc
comiss
rcr
imul
mov
add
xlat
add
jno
aaa
xchg
mov
daa
add
pop
and
jle
mov
or
push
push
jmp
xchg
rclb
test
sbb
inc
push
insb
inc
inc
mov
jmp
add
lock
mov
xor
dec
movsl
mov
pop
inc
inc
or
inc
roll
pusha
fsubrs
sbb
clc
adcl
xorl
push
ret
jb
adc
mov
and
jmp
or
jmp
add
fiaddl
loop
cmpb
cmp
add
jg
daa
fucomp
daa
ss
jmp
push
sbb
or
ljmp
out
push
sarb
add
fildll
xchg
sbbl
xchg
cmp
movsl
cltd
and
or
je
mov
das
mov
xor
push
loop
int3
addb
sbb
xchg
loopne
insb
add
clc
inc
nop
lods
push
cmpsl
push
push
xchg
aaa
pushf
mov
adc
fiadds
push
or
ret
mov
jg
and
por
cmp
cltd
jmp
andb
lcall
mov
inc
push
add
xchg
in
ficoml
add
cmp
aas
sbb
and
subb
jg
lock
xchg
mov
fcomp
sbb
jne
dec
or
stc
xlat
push
inc
test
push
cmp
push
sub
xor
hlt
cmp
and
add
pop
das
dec
arpl
pshufw
pop
xchg
rcrl
and
push
inc
aaa
jg
push
or
js
roll
add
loopne
mov
and
add
mov
shlb
sub
mov
cmp
test
rorb
adc
jmp
dec
jge
add
adc
sbb
jne
addr16
lock
scas
js
dec
adc
test
sub
pop
add
adc
ss
je
lcall
adc
push
add
mov
jl
sub
or
sbb
subl
sbb
stos
sbb
push
test
mov
daa
inc
rolb
or
pop
pop
pop
push
cwtl
sbb
movsb
xchg
inc
sub
mov
rcrl
sub
xor
dec
jmp
cmpl
add
addl
daa
sahf
mov
insl
and
fldlg2
pusha
std
nop
ja
cmp
xor
xchg
push
rorl
push
cmpb
inc
sbb
jo
ret
imul
adc
push
out
xor
cmp
jae
lcall
bndstx
subl
notl
pop
sub
sub
mov
mov
xor
lret
aaa
js
lock
mov
jge
and
sub
orb
cmpl
fadds
test
inc
push
inc
push
enter
stos
movsb
popa
insl
xchg
loopne
adc
movlps
and
enter
pop
inc
lods
and
jo
push
outsb
push
xorb
jmp
insb
cmpsb
xchg
aas
rcrb
je
test
mov
clc
prefetch
pop
notb
jne
cmpb
dec
mov
add
adc
andl
mov
xor
xchg
test
cmpb
xchg
lock
test
scas
add
add
or
cmp
add
sub
add
rcr
scas
mov
addb
mov
or
xchg
add
test
addr16
sub
mov
lret
add
add
addb
pop
cmp
ljmp
jno
fadds
in
data16
xor
sbbl
pop
sub
pop
jmp
lds
mov
dec
sub
loope
sti
xchg
out
inc
xchg
adc
push
jnp
mov
push
push
push
test
ret
push
ds
int3
push
fdivs
and
mov
xchg
mov
mov
sub
sub
ljmp
call
call
dec
add
test
jl
mov
js
add
lahf
lods
mov
fld1
icebp
add
movsw
loope
jecxz
jp
sbb
sub
outsl
testl
mov
lods
pop
jb
jg
push
test
sbb
test
pusha
or
adc
dec
sti
inc
or
or
pop
ja
jne
xor
dec
sbb
dec
cwtl
loop
sub
out
pop
adc
mov
push
adc
inc
adc
jge
or
jge
xchg
push
push
add
pop
pop
and
adc
ljmp
int
je
cmp
test
or
push
mov
xor
mov
inc
mov
stos
dec
cmp
sub
fnstsw
filds
adc
mov
push
add
lock
jmp
push
cmp
lahf
movsb
adc
sbb
orb
pop
push
sub
pop
pop
ja
dec
or
push
or
pop
push
push
lret
push
gs
popa
sub
bsr
sbb
or
adc
sbb
in
adc
dec
movsl
call
and
sub
out
mov
push
push
out
and
add
cmp
add
mov
pop
ret
es
sub
daa
cmp
sub
mov
daa
loopne
mov
je
mov
adc
xor
pop
les
aaa
sbb
popa
sbb
std
xchg
jo
enter
adcl
mov
ret
inc
pop
orl
and
daa
sub
into
adc
lret
lock
mov
popf
push
cltd
add
push
add
push
lods
fs
ja
jnp
pusha
mov
subl
pop
lods
or
incl
out
sub
mov
push
mov
call
jb
and
or
loopne
mov
sti
inc
fmuls
mov
mov
and
xor
int3
push
out
xchg
fisttpl
and
mov
push
inc
clc
push
or
mov
and
jne
xor
mov
inc
lea
cmp
mov
or
sbb
jmp
mov
inc
add
lret
pop
dec
lcall
call
jnp
stos
add
incl
cld
addr16
lea
inc
nop
xchg
inc
push
into
xchg
push
out
das
bound
sub
mov
inc
mov
mov
pop
cmp
pop
xor
sbb
cmp
sahf
or
inc
pop
insl
das
and
sbb
inc
cwtl
and
mov
lods
xchg
ret
sub
add
aam
pop
call
repz
pop
sbb
rcrl
add
mov
fs
test
test
jle
lea
imul
dec
add
sub
xchg
add
and
or
add
xchg
lock
add
dec
add
cmp
cmpsl
mov
jl
jae
loopne
movsl
insl
pop
sarl
push
je
xor
test
dec
cmpsl
jo
add
push
test
out
les
inc
cmova
inc
dec
pop
addr16
xchg
mov
mov
mov
jnp
cmp
inc
jne
sahf
in
or
or
int3
adc
popa
jl
pop
or
ficompl
adc
in
mov
xchg
jne
xchg
sbb
dec
decb
test
in
fs
sti
inc
xlat
adc
jmp
ljmp
or
push
jge
inc
ljmp
aas
xor
inc
mov
enter
cmp
scas
push
xchg
and
mov
mov
add
dec
flds
dec
aam
daa
popf
add
sbb
fcoms
push
in
jp
fadd
dec
mov
mov
cmp
and
push
das
sahf
subl
xchg
sub
push
mov
aaa
das
or
lahf
mov
hlt
movsb
dec
pop
fimull
mov
push
mov
add
int
push
sbb
mov
pop
shrb
adc
mov
rcrb
imulb
add
add
scas
dec
add
mov
mov
pop
add
lds
add
add
cmpsb
incl
add
cmp
inc
cli
dec
add
gs
inc
cmp
cltd
fsub
xchg
mov
or
shld
push
cmp
subb
sub
ficompl
mov
sub
add
es
rolb
mov
add
adc
add
addl
addl
rorb
inc
or
add
pop
sbb
dec
imul
pushf
xor
jp
push
push
mov
rol
or
cmp
inc
adc
dec
leave
dec
mov
inc
cwtl
wrmsr
xor
call
cs
mov
push
mov
add
in
call
pop
lds
xchg
cwtl
xchg
out
inc
mov
pop
mov
inc
clc
sbb
add
add
orb
or
ret
cld
jb
and
dec
adc
and
sub
mov
pop
and
hlt
mov
sbb
jno
cmp
scas
dec
pop
sbb
xlat
dec
adcl
inc
push
aaa
push
add
dec
inc
push
and
lret
sub
shl
mov
jo
add
addps
insl
adc
mov
shl
repnz
cmp
and
int3
je
cmp
pusha
popa
aas
outsl
push
mov
dec
inc
dec
ss
inc
sub
icebp
cmpl
enter
jno
cmpsl
jae
orb
push
ret
das
pop
test
sub
addr16
mov
adc
mov
ljmp
mov
jl
or
jle
rorb
aam
add
push
mov
pop
fldt
mov
inc
inc
add
dec
pushl
pusha
test
fiaddl
pop
xor
subl
push
cmp
repz
cmp
sbb
jg
call
mov
cmp
je
mov
addb
pop
mov
adc
adc
mov
cmpsb
inc
in
mov
jnp
and
jne
sbb
xlat
aam
adc
es
add
pop
or
lahf
cwtl
mov
mov
mov
mov
add
cmpsl
notl
std
xchg
rorb
dec
sub
orb
and
push
push
and
push
mov
lcall
repnz
cmpsl
mov
mov
cli
inc
lcall
pop
add
xor
rorl
test
jmp
add
aam
sahf
push
mov
cmp
test
add
jbe
mov
and
filds
icebp
cwtl
cmp
or
nop
leave
sub
cmp
mov
ret
mov
lahf
sbb
faddl
pusha
xchg
sub
cwtl
dec
dec
cmpsb
js
stos
fucomi
lea
cmp
mov
mov
inc
xor
cmp
rcrl
adc
jecxz
and
sub
daa
pop
inc
cltd
out
adc
ret
or
xchg
testb
icebp
xchg
sub
add
jl
jo
es
pop
xor
jecxz
loopne
pusha
cmp
gs
jns
je
insl
pop
inc
jne
jb
outsb
mov
outsl
push
jb
insb
push
gs
adc
bound
jb
and
sti
jns
jne
jae
and
insb
sbb
jbe
je
das
scas
dec
or
push
add
mov
mov
orl
fs
cmpl
data16
loopne
fstl
jp
sbb
rclb
inc
lcall
aad
outsl
push
mov
outsb
push
add
add
xor
cmp
sub
pop
mov
or
adc
ret
jne
es
bound
sub
xchg
aad
xchg
cmp
je
mov
data16
gs
xor
aas
nop
mov
clc
sub
add
data16
sub
cmp
jne
movzwl
jne
fcom
ficoms
push
adc
jle
jge
roll
push
xlat
add
sarb
sbb
cli
jmp
movswl
add
mov
sbb
inc
dec
pop
pop
cmp
clc
xchg
insb
cs
add
xor
add
jecxz
dec
mov
fdivrp
stos
mov
mov
test
add
push
push
push
sbb
rolb
cmp
jl
dec
jecxz
push
cmp
movl
pop
add
sar
sub
xchg
xor
dec
sbb
jle
xor
or
packuswb
adc
and
dec
lcall
out
iret
sbb
sahf
inc
sbb
test
test
pop
mov
add
lock
lods
inc
cmp
nop
mov
push
imul
add
ss
and
cli
or
add
testb
cmp
inc
inc
pushf
xor
push
mov
inc
ds
sar
or
iret
jmp
push
push
and
dec
jmp
add
pop
jae
iret
xor
dec
adc
add
inc
sbb
dec
cmp
adc
mov
shlb
and
sbb
xchg
mov
dec
scas
in
xchg
in
push
insl
jmp
loop
pop
jo
mov
subl
add
dec
adc
add
jo
mov
pop
mov
call
sub
cmpl
jl
out
add
push
out
sbb
add
add
cmp
and
aas
sub
and
xor
inc
and
popf
xchg
test
sahf
add
mov
mov
scas
dec
dec
push
sbb
xor
inc
adc
add
jmp
sbb
and
sub
sub
sti
ret
xor
xor
cmpsl
sub
mov
inc
sbb
enter
xchg
dec
cmc
adc
imul
sub
fdiv
push
fwait
rorl
je
adc
cmp
pop
push
add
xchg
or
push
clc
cmp
xor
scas
mov
pushw
dec
push
sub
inc
cmp
add
jmp
sub
inc
insl
shll
inc
jmp
sbb
inc
and
es
push
mov
fdivrl
add
add
add
pop
dec
int
hlt
add
das
jbe
pop
add
cmp
rorl
lock
je
jge
mov
jo
movsb
dec
ds
jnp
xchg
dec
cmp
mov
inc
lea
pop
sbb
popl
xchg
xor
mov
add
fisttpl
ljmp
cmp
je
xor
jmp
inc
rcrl
pop
mov
cmp
jge
mov
jns
mov
sbb
cmp
push
add
fmuls
subl
adc
xchg
mov
and
jnp
mov
clc
lcall
xorb
lock
cmp
sbb
adcl
mov
sbb
jl
scas
mov
insb
clc
shlb
setne
imul
jae
xchg
int3
xor
jbe
push
add
mov
mov
or
pushf
xor
lahf
int3
xchg
xor
call
test
sbb
mov
sahf
jl
xorl
sbb
adc
mov
scas
adc
xchg
outsl
dec
je
or
pop
add
addr16
insl
add
mov
call
pop
cwtl
mov
mov
in
mov
rolb
cmp
in
sbb
sub
add
mov
xchg
sub
das
xchg
mov
push
inc
adc
arpl
fcomps
js
jo
sbb
dec
cwtl
xchg
pop
push
adc
xchg
sub
or
mov
rorl
push
addl
inc
cmp
add
inc
mov
or
std
dec
or
xchg
lret
add
adc
cltd
int
xchg
lock
inc
adcb
punpckhwd
mov
pop
ret
clc
push
mov
jno
mov
mov
cmp
and
add
les
lods
xor
popa
mov
push
push
mov
nop
bound
popa
dec
cmp
or
add
add
jg
or
or
push
mov
or
push
mov
dec
and
into
or
inc
cmp
sbbb
push
int
iret
inc
pop
add
pop
adcl
dec
cli
ret
jbe
dec
mov
add
cwtl
mov
rorl
or
enter
lock
jp
push
add
mov
push
lock
pop
loopne
cmp
nop
leave
je
pop
push
cmp
ret
popa
inc
sbb
mov
outsl
mov
jmp
pop
sub
lock
lock
nop
pop
decb
add
ja
or
insb
sbb
mov
subl
mov
pop
popa
sbb
cmc
sbb
mov
rcll
add
add
out
and
addb
mov
mov
mull
inc
sbb
adc
inc
jns
pop
out
xchg
pushl
pushl
mov
int3
mov
rorl
loopne
mov
clc
pop
clc
mov
mov
movsl
add
jae
push
sbb
test
jo
pop
in
pop
iret
mov
push
movsb
movsb
aad
mov
sub
sbb
in
orb
leave
es
rolb
and
imul
aas
fstpl
add
sarb
jo
insb
imul
out
xchg
cld
test
or
andl
cmp
and
and
xor
fdivr
pop
pop
xor
aam
inc
xor
or
lods
sub
pop
sbb
mov
popa
adcl
test
and
inc
pusha
push
loop
sahf
aam
movl
jo
imul
xor
mov
les
andl
rcrb
or
and
mov
sub
mov
pushf
inc
sub
pop
mov
incl
cmc
add
lock
std
in
ficoml
lea
imulb
arpl
daa
or
xchg
mov
sbb
in
push
lea
jae
mov
daa
and
cmp
pop
or
adc
sarb
sbb
inc
aaa
test
jnp
xchg
andb
jecxz
cwtl
push
inc
lock
rcll
or
jl
xor
andl
mov
mov
push
cmp
push
sub
add
cmp
insb
sahf
pop
pop
andl
addr16
flds
shld
pusha
mov
jg
dec
inc
dec
dec
dec
inc
dec
dec
aaa
loope
pop
jno
insb
mov
jo
lock
ss
jnp
stc
adc
or
das
mov
sub
sti
lock
or
pop
lret
arpl
icebp
push
clts
cmp
inc
movb
add
iret
push
arpl
iret
cli
adc
adc
aam
or
mov
ss
and
mov
sbb
push
push
mov
sub
mov
xor
pusha
add
dec
inc
adc
adc
js
xchg
mov
push
pop
fs
cmpl
imul
push
subb
gs
mov
rorb
jns
mov
insl
inc
insl
adc
lods
out
adc
test
or
jg
pop
aam
icebp
mov
inc
jne
pop
aas
dec
in
xchg
sbb
xchg
ror
lods
aaa
push
loopne
inc
mov
add
cli
add
inc
fdivrs
loope
xlat
xchg
imul
adc
mov
push
pop
or
sub
mov
xchg
test
je
mov
popf
shrb
and
xor
addl
or
das
cli
mov
test
xor
mov
xchg
jl
inc
shrl
loopne
sbb
sub
cmp
and
das
repnz
movsb
rclb
add
sbb
mov
sub
les
and
xchg
clc
mov
mov
mov
inc
dec
stos
push
ljmp
lock
scas
and
cmp
mov
insl
insb
jae
sbb
sbb
xor
aaa
insb
sub
js
pusha
js
rorl
push
clc
subps
das
hlt
pop
or
aam
stc
pop
fnstsw
jne
shll
jecxz
or
add
add
js
mov
pop
mov
lret
inc
fs
nop
cmp
subb
shll
cs
dec
mov
push
bound
or
outsl
clc
push
ss
cmpsl
and
test
jle
xchg
mov
jo
in
icebp
push
push
fs
or
add
je
push
cmp
mov
mov
mov
dec
ss
in
xor
ficomps
inc
add
pop
cmpsl
movsb
into
out
movsl
xor
movsl
adc
andb
mov
incl
add
add
xor
inc
outsb
frstor
xchg
pop
imul
js
mov
sti
sbb
xchg
adc
pop
ret
aas
stos
aam
dec
jbe
ret
aam
push
dec
or
sbb
bound
inc
lea
mov
js
jl
add
xchg
pop
pusha
adc
mov
pop
fidivs
add
add
dec
jne
aas
pusha
lock
je
cmpsl
jle
decl
ret
lds
cmp
add
aaa
fsubrs
push
rolb
mov
sbb
adc
cs
xor
adc
pushf
insl
and
inc
outsl
jb
jae
add
jne
or
test
jmp
xor
push
pop
or
mov
mov
adc
jo
adcb
rolb
rcrb
stc
adc
sub
mov
mov
cmp
sbb
cmp
je
jmp
cmp
push
jbe
or
or
aam
mov
pop
repz
mov
inc
testb
cmp
sbb
sbb
mov
mov
addb
inc
sbb
or
mov
lret
xor
faddl
jle
movsl
push
popa
mov
or
or
incl
jl
in
mov
mov
and
push
sbb
int3
aam
ja
and
mov
mov
or
or
scas
jmp
movsl
popa
out
mov
and
or
sub
xchg
adc
adc
sti
jg
ret
push
insb
hlt
xor
out
or
or
fcmove
das
hlt
pop
cwtl
mov
or
lcall
ja
clc
sbb
cmpb
xor
sti
fs
popa
adc
xlat
js
pop
mov
in
lcall
adc
mov
addr16
je
mov
in
test
ficomps
js
ficoms
mov
fistpll
dec
loopne
or
std
mov
pop
mov
push
or
add
sub
pop
or
mov
fs
inc
pop
sub
pop
or
xchg
xor
and
lahf
mov
pop
mov
sub
add
add
sub
rclb
arpl
rep
mov
cmp
xor
fs
cmp
in
push
shld
push
fmull
inc
insl
lods
or
cld
daa
in
icebp
dec
popa
clc
out
inc
add
pop
xchg
pop
andl
rcl
add
push
mov
test
pop
push
xor
hlt
je
lcall
cs
adc
xchg
jmp
mov
sbb
push
and
pop
fwait
in
ret
mov
pop
enter
out
dec
mov
mov
add
movsl
jge
call
leave
add
fisttpl
call
fldl
and
and
jmp
data16
in
ret
sbb
and
sub
xchg
jnp
sub
shl
pop
jb
out
sub
cmpsl
sub
push
fdivrl
add
cmp
jmp
push
mov
dec
add
and
sub
add
lret
ret
cmp
adc
and
xor
hlt
or
ljmp
sub
test
dec
and
pop
scas
jmp
add
mov
lret
test
adc
fsubrs
jl
inc
lock
or
inc
lea
add
push
jle
mov
out
push
add
mov
pop
repz
sbb
mov
adc
subb
je
imul
and
test
mov
or
sub
cmpsb
adc
jmp
push
mov
imul
cmpb
test
fsubs
xchg
pop
inc
add
lret
jp
fcoml
and
lock
inc
loopne
in
daa
andl
aaa
add
cltd
rolb
insb
or
push
test
daa
jo
out
cmpb
stos
fadds
movsl
cmp
cli
andl
add
mov
sbb
cld
mov
pop
jb
rorb
add
add
pushf
push
cmp
int
mov
or
das
sbb
js
sbb
ret
jnp
xchg
adc
mov
pop
mov
inc
mov
dec
cmp
cmc
clc
orl
test
fsubrs
sub
add
call
xchg
out
scas
add
dec
adc
orl
mov
pop
jbe
cmc
and
xor
pop
add
jb
xor
push
mov
inc
inc
mov
inc
cmp
cmpsb
jo
adcb
mov
repnz
xchg
push
dec
pusha
outsb
pop
sub
add
adc
leave
cmp
scas
and
sbb
xchg
add
das
gs
sub
test
sub
jb
xor
mov
mov
movsl
test
lds
gs
sub
test
jmp
popa
cmp
sti
jnp
scas
adc
mov
imul
mov
mov
inc
lahf
pushl
ljmp
mov
mov
mov
das
test
enter
jmp
jmp
packuswb
lea
add
push
mov
mov
lods
mov
add
mov
das
and
sbb
mov
adc
xchg
aam
adc
cmp
aas
jmp
inc
add
scas
scas
dec
loopne
stos
add
andb
adc
or
cmp
or
xchg
rclb
jp
sbb
stos
shlb
mov
cmpsl
aad
clc
fnstsw
mov
ds
mov
pop
sub
jb
inc
push
outsl
adc
or
and
je
imul
pop
cltd
je
mov
cmp
add
add
mov
addr16
push
cmp
sub
sbb
push
stos
pcmpgtb
jmp
mov
loopne
jno
mov
inc
outsl
cld
push
inc
repz
lods
and
fadd
test
and
shll
cltd
xor
and
mov
sbb
inc
jo
jl
sub
mov
test
add
add
pop
push
add
add
std
nop
aad
movsl
push
dec
cmpsl
and
or
mov
jne
mov
jno
subl
xor
mov
subl
or
xlat
and
sub
call
addb
push
push
cmc
and
and
adc
or
dec
cmc
lret
add
sub
fists
xor
adc
jle
js
add
sti
sub
add
clc
aam
arpl
ret
jne
mov
and
pushf
ret
pushw
xor
push
push
mov
xor
sbb
or
sub
push
xchg
insb
call
loope
jp
sbb
mov
js
lret
sub
cmp
sub
mov
je
adc
mov
mov
add
nop
mov
sbbl
add
push
sub
xchg
fsubs
cmpb
inc
and
sbb
cltd
ja
push
or
push
pop
repnz
inc
add
lret
jb
ror
js
xchg
pop
inc
push
pop
mov
xor
mov
jb
jnp
sbb
test
lock
popl
sbb
pop
pop
hlt
add
mov
jmp
push
add
data16
mov
dec
add
adc
xor
jge
dec
mov
cmp
push
sbb
xchg
cmc
xchg
js
inc
or
adc
adc
lea
in
and
sub
pop
aaa
add
je
out
js
cs
lock
mov
mov
pusha
movsb
std
xor
add
mov
jbe
mov
int3
jo
shl
or
mov
int
cs
jnp
and
xchg
sbb
push
xchg
jbe
test
adc
cmp
push
adc
ljmp
adc
sub
popf
stos
jne
test
testl
pop
mov
cmp
jne
imul
dec
sbb
pop
cmpb
cmpl
inc
mov
mov
xor
sub
mov
fs
bound
ljmp
push
jbe
inc
fdivrs
aaa
push
add
das
inc
or
add
push
mov
jno
jo
adc
movsl
and
pop
push
bound
ljmp
hlt
push
sbb
movb
mov
les
sbb
in
movsl
push
cmp
call
xor
pop
jl
pop
cmpsl
aam
fcompl
push
idivb
daa
mov
adc
sbb
xor
mov
and
pop
fs
jmp
mov
hlt
addps
xchg
lcall
in
daa
add
jmp
jbe
mov
repz
das
or
cmp
ljmp
jne
mov
lea
in
or
test
add
testl
or
push
cwtl
pop
mov
or
rolb
dec
add
push
enter
sbb
sbb
and
add
dec
js
fs
idivl
and
out
mov
cmp
sbb
fcoms
xchg
pop
cmpsb
jmp
jp
sub
in
roll
ja
ss
ror
jnp
sbb
dec
cld
imul
loopne
sahf
ret
xor
aam
loop
pop
fnstenv
jbe
movsl
fmull
adc
add
and
andb
movsl
leave
fidivs
adc
xlat
iret
xor
lret
hlt
test
call
adc
xchg
push
test
or
std
cmpb
push
add
test
pop
dec
mov
pusha
mov
or
and
add
cmp
add
sub
leave
mov
jge
lahf
inc
xor
add
leave
push
pop
sahf
icebp
mov
loope
fisttpl
outsl
cmp
jg
adc
xor
mov
addl
adcb
xlat
rolb
ret
mov
mov
pop
pop
sbb
inc
mov
sub
adc
in
add
or
and
out
mov
push
aam
push
pop
dec
push
fidivrs
mov
dec
or
add
mov
popa
loopne
popa
and
ss
jnp
addb
ds
push
push
mov
add
clc
or
mov
inc
xchg
rcr
mov
nop
xchg
loope
movb
mov
inc
les
xlat
add
xchg
shrb
paddw
icebp
sub
jmp
xchg
and
ret
pop
rcrl
sbb
mov
inc
jbe
insb
xor
and
xchg
rcrb
ja
addl
or
add
lods
xor
pop
mov
jo
inc
fs
cmp
pop
add
addl
inc
int3
sub
hlt
and
push
pop
mov
xchg
pop
push
lds
xor
dec
cmp
jne
push
test
arpl
mov
loope
mov
push
adc
nop
inc
add
mov
in
push
mov
movl
and
mov
sbb
and
adc
pusha
push
mov
cmp
sub
sar
mov
push
sbb
dec
scas
mov
shrb
rclb
je
jns
push
push
inc
shrb
sbb
ret
notl
jb
sbb
adc
xchg
add
scas
ss
aam
and
push
push
outsl
aas
xchg
jp
inc
fadd
pop
pop
pop
sub
push
rcrl
call
mov
mov
test
adc
sbb
ljmp
adc
int
lahf
dec
add
subb
sahf
xor
daa
push
add
adc
call
clc
pop
loop
add
or
xchg
or
mov
sub
or
ficoms
lahf
jge
imul
or
ds
adc
sbb
test
scas
lea
leave
mov
aam
pop
mov
lea
fidivs
icebp
xchg
adc
jo,pn
clc
adc
push
push
push
hlt
mov
test
test
xor
lret
jl
js
in
aad
mov
adc
jne
mov
sub
adc
incl
pop
add
fistps
aam
incl
adc
jg
fidivrs
xchg
dec
xorb
stos
adc
inc
adc
dec
test
fistps
int3
cld
cs
sahf
sarb
mov
dec
sub
cld
ljmp
push
les
xor
and
adc
or
xchg
dec
and
pop
aaa
std
push
or
mov
push
push
add
xor
ja
cs
movsb
mov
dec
loope
push
mov
movb
xor
mov
fs
xor
and
xor
sbb
xor
iret
je
je
xchg
pop
andb
add
iret
lods
xchg
data16
sub
mov
jns
jnp
out
add
int
rcl
inc
xor
sbb
jb
in
xor
test
pop
cmp
popa
shr
xlat
xchg
push
adc
push
push
pop
int
mov
xchg
lock
or
ficoms
cmp
sub
sbb
push
xchg
mov
xlat
cmp
mov
cmpsb
imul
add
mov
and
jmp
mov
mov
inc
push
and
adc
aam
add
and
pop
das
fimull
ja
dec
inc
xlat
fdivrs
or
mov
rol
mov
xor
lret
sbb
push
mov
push
pusha
mov
fldcw
jo
adc
push
add
enter
xchg
mov
sahf
add
inc
mov
add
mov
xchg
aaa
adc
sti
add
stos
adc
ret
adc
or
movsb
enter
xchg
incl
mov
je
mov
pop
pop
cmpsb
mov
inc
lahf
lahf
push
xor
sahf
jl
fldenv
lods
popf
shll
jle
push
dec
les
push
pusha
mov
xor
and
movsl
int
push
movb
les
jmp
add
pusha
pop
je
iret
push
lock
inc
jae
sbb
xchg
lret
dec
adc
mov
imul
test
push
ret
xchg
popa
fcoml
and
fstpt
loopne
push
fistps
pusha
jmp
cmpl
fsub
sbbl
pop
push
jl
jo
push
and
pop
cmp
enter
adc
jecxz
fimuls
imul
pop
add
pop
rol
mov
syscall
dec
popl
fidivl
test
cmp
jmp
outsb
or
and
xor
or
mulb
xor
xlat
mov
inc
dec
in
pop
sub
or
jmp
mov
loop
mov
dec
add
lret
js
mov
rcl
aam
mov
mov
cwtl
je
lea
cmp
and
push
cltd
xchg
push
and
and
push
aas
jge
push
mov
or
addr16
out
addb
mov
lcall
pop
lret
xchg
hlt
out
sbb
lahf
les
movsl
pop
adc
shr
jmp
add
ret
fs
cmp
mov
je
cmpb
dec
fcompl
sub
xchg
add
mov
push
sbb
inc
int3
inc
jnp
sub
mov
push
pop
fst
jb
and
int
cli
xchg
add
aad
xor
sbb
adc
in
aaa
addl
lods
mov
add
push
es
pop
data16
or
clc
cmc
mov
jmp
push
mov
or
pop
pop
add
ret
jge
push
inc
enter
inc
fimuls
call
push
pop
into
push
ret
push
cmpsl
addr16
add
icebp
int
push
aas
std
xchg
sub
xchg
ljmp
pop
pop
jle
adc
imul
xor
ficoms
push
iret
data16
sub
push
test
jmp
call
ret
das
in
rclb
adc
and
cs
and
dec
push
shlb
mov
ds
jbe
js
or
adc
cmpsb
outsl
add
pusha
repnz
lcall
xchg
fcmovnbe
adc
and
mov
sub
lea
jns
add
push
jg
neg
subb
pop
pop
test
add
iret
mov
push
mov
mov
push
ss
mov
pop
push
dec
and
jbe
sbb
frstor
or
shl
enter
sbb
push
jp
movsb
int
imul
sub
rcll
test
ljmp
sbb
mov
sub
add
and
push
lock
pop
pop
mov
pusha
rcl
imul
mov
cmp
sub
inc
aam
jnp
xchg
adc
adc
mov
or
dec
adc
sub
or
push
out
xchg
iret
scas
pusha
add
cmp
inc
pusha
movb
mov
imul
cli
mov
push
dec
inc
pop
repz
mov
mov
lahf
fcomps
or
lock
aas
cmc
cmc
add
mov
pop
sub
pusha
leave
daa
mov
sub
loopne
mov
adcb
mov
xchg
add
je
or
push
movsl
pop
add
clc
divb
mov
xor
jl
icebp
cmpl
outsl
jg
push
lcall
scas
roll
loopne
shrb
jg
hlt
ret
cli
add
jge
ds
sub
mov
iret
jl
add
pop
adc
add
add
cmp
jl
ss
movsb
add
mov
mov
mov
idiv
leave
loopne
sub
mov
dec
mov
push
hlt
jae
sub
xor
xchg
arpl
inc
pop
daa
popa
mov
mov
pop
in
add
fdivl
push
sbb
andb
dec
sbb
ret
sub
pop
test
mov
sub
subb
cld
aam
mov
push
cld
mov
push
addr16
cmp
test
loope
pop
cmc
test
clc
mov
popa
and
dec
adc
sar
pop
ds
or
sub
jne
mov
sub
subb
mov
jle
jge
mov
lock
imul
add
or
mov
in
loope
xchg
shrl
add
out
outsb
jae
push
xchg
and
icebp
add
jge
movsl
movsl
jmp
outsl
mov
lea
xchg
rolb
ret
movb
or
je
adc
cld
xor
add
jle
and
mov
in
outsl
aad
adc
inc
sahf
test
hlt
push
lret
and
out
inc
mov
mov
mov
add
push
je
lcall
pop
rorb
dec
sub
sub
shl
lea
jbe
loope
pop
sub
loopne
es
lcall
jo
push
mov
or
das
jo,pn
dec
sbb
sbb
mov
jl
mov
ret
jp
pop
mov
sti
into
inc
mov
sub
inc
lods
push
cmp
cmp
xorb
lea
and
adc
test
inc
jo
push
test
pop
jnp
jl
adc
out
pop
inc
inc
pop
sub
mov
sub
xchg
je
data16
mov
rorb
cmp
pop
sub
es
inc
mov
jo
rclb
call
xor
js
xor
mov
and
push
pop
cld
inc
jne
adc
scas
popf
add
mov
rcrb
push
pusha
clc
pusha
shl
pop
repz
je
rolb
adc
sub
stos
fidivrl
jb
xchg
mov
call
xor
pop
les
ret
ds
pop
ja
mov
aam
adc
jmp
roll
rolb
cwtl
add
cmpsl
aam
fs
mov
stos
push
adc
stos
push
push
or
insb
jo
clc
inc
inc
or
add
insb
push
sbb
imul
in
nop
outsb
and
add
cmp
jo
mov
lods
shr
aam
lock
inc
xorb
filds
cmp
and
test
dec
lret
lods
or
xchg
mov
arpl
adc
ficompl
xor
dec
cs
jmp
out
adc
mov
mov
add
push
roll
cmpl
sbb
insl
dec
add
sbb
pop
fdivrs
call
cmp
sbb
adc
ss
dec
imul
add
loopne
add
or
mov
repz
addb
dec
xchg
jecxz
mov
mov
sub
mov
pop
push
add
insb
loopne
cmpsb
xchg
adc
xlat
jmp
sbb
mov
les
js
aaa
addr16
push
je
xchg
lcall
or
add
xchg
xor
lock
sbb
and
jge
cwtl
or
cltd
in
adc
cli
cld
test
pusha
or
push
es
add
aas
in
fstps
adc
push
sub
hlt
rol
jl
dec
cmp
inc
lret
xor
lock
je
and
lds
jne
test
mov
pop
pop
imul
sbb
add
and
or
inc
shlb
jnp
pop
aad
or
out
mov
sbb
dec
or
inc
cmp
test
add
out
cmp
push
add
outsl
decl
sbb
push
rclb
dec
jnp
pop
loopne
sub
rcrl
xchg
adc
jnp
mov
push
lcall
mov
dec
inc
add
gs
xor
fs
insb
xchg
outsl
and
hlt
rcrb
gs
imul
outsl
ja
je
jb
bound
gs
jo
add
arpl
pushf
xchg
jle
push
mov
movl
sbb
add
into
int
scas
nop
inc
js
das
mov
js
fs
and
sbb
inc
and
xor
comiss
mov
mov
popl
push
add
add
popa
loopne
mov
pop
fstp
in
mov
outsb
int3
shlb
jg
xchg
cld
pop
bound
lret
xor
mov
aaa
outsl
xchg
mov
xor
sub
xchg
xor
cmpsl
xor
inc
cld
cmpsl
rclb
and
push
ds
popf
mov
pop
xor
jb
inc
aaa
mov
mov
gs
fucomi
push
adc
dec
push
adc
xchg
clc
lea
push
adc
stos
mov
or
outsb
popa
pushf
or
push
mov
mov
adcb
jmp
add
pop
cmpsl
aam
data16
aam
pushf
out
add
sub
jmp
shlb
xchg
adc
xor
imul
cmp
mov
mov
add
xor
cwtl
pop
sub
push
push
icebp
mov
add
pop
add
clc
sub
mov
sbb
or
adc
add
scas
sbb
inc
cli
lcall
push
in
popl
add
xlat
es
sbb
add
xlat
fimull
imul
or
push
pop
push
adc
adc
movsb
cmpsb
imul
or
ret
inc
sub
push
jne
sbb
sub
jl
add
inc
sbb
push
mov
fld
cmp
je
daa
jne
push
xor
aad
imul
pop
ss
rcll
adc
sbb
push
inc
and
add
enter
push
dec
fildl
mov
sbb
xor
cli
sub
jne
mov
push
push
add
fisttpll
push
jo
inc
mov
mov
or
xchg
dec
xchg
es
pushf
xlat
inc
or
imul
mov
add
add
jge
mov
dec
addl
pop
movsb
orl
lea
loopne
jp
movsl
pop
ret
pop
jae
dec
aam
sub
sub
mov
cmp
mov
jno
cmp
je
cld
pop
push
adc
lahf
fdiv
inc
cmp
push
mov
out
adc
push
sub
jb
je
dec
jmp
add
jmp
cmp
je
mov
inc
jne
movb
jae
lcall
adc
and
dec
jae
je
adc
nop/reserved
add
imul
addb
sbb
mov
js
sbb
adc
dec
shll
adc
sbb
mov
lds
inc
out
ret
adc
or
je
cwtl
fcmovnu
dec
fnstcw
adcb
jge
mov
cli
ret
xchg
lods
inc
push
imul
out
fadds
test
ds
jne
call
mov
cli
imul
jp
or
or
mov
push
or
sbb
sub
sahf
adc
push
sbb
dec
jg
faddp
mov
les
sbb
rcrb
daa
popa
sbb
insl
mov
inc
ds
bound
nop
xchg
arpl
fs
push
nop
inc
push
gs
inc
push
nop
inc
mov
inc
push
nop
lods
push
push
imul
or
lock
and
enter
push
enter
insb
orb
fdivrs
aas
in
movsl
loopne
aas
jo
in
cmp
jno
inc
cmpsb
loopne
jb
icebp
jb
sbb
jae
sub
sbb
sbbb
insb
sbbb
jbe
jb
sbb
js
ja
jb
sbb
jns
daa
add
aas
xchg
fs
repnz
cmp
add
nop
add
dec
fcoms
add
mov
or
pop
aas
pop
inc
push
nop
inc
lods
cmp
pop
in
add
das
push
and
enter
sub
enter
dec
xor
and
xor
lods
xor
int3
ss
add
add
nop
add
fdivrs
aas
sub
in
add
dec
inc
insb
add
nop
add
add
movl
nop
add
inc
cltd
addb
in
inc
push
add
add
sub
add
dec
dec
dec
jb
add
dec
mov
jb
add
pop
and
pop
or
dec
aas
push
mov
fs
notb
enter
sub
dec
pop
enter
insb
push
and
enter
enter
lods
push
int3
pop
enter
in
push
insl
les
pushl
mov
js
gs
in
lret
jne
pop
or
fdivp
or
clc
test
xchg
dec
mov
push
hlt
pusha
mov
enter
ds
inc
mov
lods
pop
xchg
outsl
in
in
mov
push
add
jb
dec
sahf
fmul
fcoms
fwait
mov
iret
ret
xor
incl
jl
jne
out
sbb
or
lea
add
dec
xchg
cwtl
push
test
inc
and
mov
add
push
push
gs
dec
popa
xor
les
jb
lock
arpl
pop
pop
stc
jne
dec
outsl
fs
in
xor
insb
or
jle
outsb
arpl
insl
jnp
push
bound
sub
jbe
push
scas
mov
jae
outsl
cmp
sub
sti
in
insl
jns
jb
dec
outsl
dec
jbe
ja
imul
in
gs
or
inc
js
outsb
imul
cltd
divb
inc
outsl
insl
jo
jae
call
dec
gs
insb
jnp
fdivrs
or
inc
popa
mov
jbe
jg
adc
outsb
and
popa
jne
je
dec
popa
js
shr
out
fcoms
push
push
jb
addr16
inc
jbe
std
or
mov
or
push
push
out
pop
push
dec
bound
arpl
or
insb
popa
rolb
mov
popa
ret
add
imul
mov
jne
inc
outsl
outsl
pop
popa
outsb
add
adc
not
ss
adc
shrb
push
nop
dec
stc
fists
gs
into
imul
shll
cmp
cmp
add
andb
push
cmp
push
adc
or
fists
add
cld
dec
add
pop
xchg
adc
or
jge
jo
lahf
xlat
or
adc
xor
test
pusha
jbe
insl
or
inc
mov
inc
inc
repnz
out
jb
testl
adc
dec
adc
sbb
das
cmp
out
imul
fistpl
or
std
add
pusha
pop
loopne
je
sub
aam
cmp
inc
fldl
enter
push
rol
mov
dec
repz
or
sub
or
dec
fyl2xp1
lcall
call
jbe
push
cmp
fs
mov
add
in
rclb
push
mov
loope
xchg
pop
and
imul
push
push
xchg
jb
ret
in
add
inc
testb
mov
push
insb
popl
jle
out
sbb
ja
into
mov
and
push
dec
sub
xchg
push
cs
mov
dec
popl
jb
sub
mov
dec
pop
mov
add
add
and
test
pop
xor
ljmp
xor
pop
dec
pop
jp
scas
shrl
gs
cmp
inc
subb
or
lods
pop
dec
push
push
aam
sub
push
pop
push
or
in
push
xchg
inc
stc
dec
jo
dec
xrelease
or
cwtl
dec
js
out
mov
or
mov
xor
incl
mov
xor
sbb
xor
pusha
push
mov
mov
dec
lret
lret
fs
adc
cwtl
inc
mov
out
or
push
popa
je
push
gs
push
lret
sbb
or
adcb
in
jle
pusha
addb
incl
cmp
cmp
movaps
sub
cmp
cmp
in
jmp
inc
ds
or
dec
add
mov
nop
out
xchg
icebp
mov
imul
xchg
dec
push
push
jb
jne
mov
sbb
stos
fs
add
mov
leave
inc
sbb
adc
cmp
je
xchg
mov
inc
cmp
mov
ret
pop
dec
push
popa
add
out
std
sar
clc
pop
ja
mov
cmp
jnp
mov
testb
mov
cmp
sbb
push
test
rclb
or
and
sbb
push
pusha
dec
jge
xor
push
or
das
jmp
push
or
lret
xchg
add
xor
sbb
dec
adc
and
add
out
or
jne
push
xchg
shlb
sbb
add
movsl
sbbb
fstps
mov
jge
add
xor
cmpb
je
clc
mov
pop
or
out
mov
sbb
cwtl
push
ficompl
dec
xchg
inc
pop
pop
jp
fcoms
sub
inc
and
mov
cmpb
xor
mov
fdivrs
loopne
pop
mov
or
add
push
cwtl
inc
ret
inc
xor
addb
leave
std
sbb
dec
adc
push
add
mov
enter
cmp
adc
and
hlt
adc
dec
js
xchg
lea
mov
dec
mov
mov
sub
dec
mov
ss
cwtl
and
sub
xor
data16
andb
mov
pop
cld
or
outsl
int3
and
mov
mov
inc
add
mov
clc
mov
hlt
sub
int3
and
lcall
inc
cwtl
data16
lock
imul
das
add
mov
dec
ja
cmpsb
push
push
ss
push
dec
shl
and
inc
ror
mov
pop
sbb
imul
jnp
stos
or
orl
cmp
je
lock
call
jmp
cs
mov
adcb
adc
or
nop
cwtl
mov
lret
jo
mov
adc
inc
push
sub
mov
outsb
xor
mov
dec
mov
arpl
adc
outsl
cmp
add
stos
sbb
pop
je
js
or
lea
outsl
daa
sbb
push
push
nop
add
faddl
cld
sub
fdivrs
clc
imul
sbb
shll
adc
adc
push
adc
dec
adc
jge,pn
push
inc
push
push
pop
testl
call
mov
sbbb
jo
mov
gs
mov
scas
ret
jne
mov
in
mov
enter
cs
add
jb
mov
jno
jb
jb
mov
push
pop
pop
or
scas
cmp
dec
fs
jl
ret
sub
xor
arpl
scas
adc
xchg
test
inc
pusha
dec
jl
xchg
add
clc
add
jg
sbb
sub
xor
arpl
jmp
loope
mov
jae
xor
mov
dec
and
mov
pop
in
fstl
sub
xor
add
hlt
cmp
push
in
jmp
xchg
jp
mov
push
inc
push
icebp
sbb
jecxz
jl
js
fcoms
xor
insl
mov
pusha
pop
movsb
fs
sub
mov
add
imul
add
or
push
add
addl
add
jno
incl
dec
sbb
dec
add
add
jno
or
jo
or
mov
mov
add
int3
fwait
scas
adc
loopne
add
mov
lock
clc
jne
mov
pop
pop
adc
pop
xchg
pop
pop
pop
or
push
xchg
lcall
ret
fadds
call
mov
int
or
out
mov
mov
js
inc
cmp
cmp
sbb
dec
or
push
shl
imul
mov
pop
pop
cmp
push
inc
inc
dec
add
fcoms
pop
in
dec
inc
pop
push
cmp
push
pop
jecxz
cmp
fdivr
int3
pop
ss
pop
pop
inc
dec
dec
inc
cmp
test
andl
mov
inc
or
jle
mov
push
lcall
sub
mov
sbb
test
xchg
lock
mov
sub
mov
adc
fnsave
daa
lea
lea
adc
mov
push
or
add
popa
or
push
stc
inc
add
push
adc
loope
js
inc
setg
inc
cltd
xor
or
ret
ret
outsb
and
out
mov
inc
inc
xor
inc
cmp
lcall
and
or
das
rorb
jb
cli
aas
fwait
push
mov
test
jge
movl
cmp
inc
push
cmp
mov
jno
mov
ret
movl
jmp
mov
xor
adc
mov
lret
push
adc
mov
jmp
in
ret
lea
jmp
lock
pop
push
push
adc
add
adc
jnp
inc
or
xor
push
push
add
add
aas
sarb
sub
adc
add
xor
add
sbbw
adc
fdivrp
fmuls
dec
mov
add
push
dec
add
mov
push
rclb
outsb
subl
pop
cmp
pop
or
outsl
jle
rclb
pop
mov
call
filds
fdiv
add
add
add
enter
add
and
pop
in
pop
aas
lods
mov
mov
add
jg
in
hlt
mov
mov
add
outsl
jp
mov
dec
adc
rclb
or
sub
mov
sub
push
push
sbb
push
and
push
sbb
out
mov
das
shll
cmp
inc
sub
dec
aam
sbb
sub
dec
sbb
or
cmp
xchg
ljmp
mov
mov
std
aaa
mov
or
mov
dec
cmp
sti
das
fimull
imul
outsb
push
dec
and
or
and
std
inc
xchg
inc
and
js
sbb
adc
sbb
and
xor
add
cld
or
outsb
rcrl
push
or
or
sbb
faddp
inc
jns
xor
jl
or
jle
icebp
or
jmp
mov
ja
mov
mov
cmp
loopne
inc
or
add
lods
mov
jmp
mov
push
or
dec
ret
sub
inc
adc
jg
imul
pushf
push
icebp
loopne
inc
push
mov
cmp
ret
nop
mov
and
rorb
into
pop
xor
orl
mov
add
nop
inc
or
cli
mov
jb
adc
adc
imul
or
imulb
or
out
mov
push
jo
iret
mov
add
in
mov
lcall
incl
add
incl
push
rorb
mov
pavgb
je
movl
scas
repnz
xchg
inc
add
xor
push
pop
jg
push
shr
ret
pop
adc
adc
shll
and
xchg
pop
push
cmp
add
je
dec
cmp
push
push
mov
sbb
or
loopne
push
add
mov
pop
mov
icebp
pop
push
je
xor
push
xchg
xor
shll
jne
push
add
adc
dec
mul
mov
or
mov
leave
mov
push
mov
rol
scas
jmp
mov
xchg
xor
or
add
mov
rclb
clc
icebp
das
lods
mov
add
mov
loopne
jbe
xor
pop
loope
ja
cmp
xor
mov
test
js
push
jo
sub
std
jne
lea
mov
dec
je
xchg
add
cmp
je
xlat
jnp
mov
inc
adc
dec
add
lds
loope
or
dec
xchg
je
loope
ret
push
add
mov
or
ret
or
sbb
pop
ret
adc
inc
xchg
or
inc
jno
jmp
and
adc
mov
das
addl
loop
mov
jmp
mov
add
pcmpeqw
stos
inc
loop
cmc
cwtl
adc
or
or
sbb
fnsave
loopne
cwtl
pop
int3
cmp
cmp
mov
inc
mov
jo
int
loop
bnd
mov
mov
aaa
out
sub
add
xor
cmp
insb
cmpsl
jmp
pop
push
push
push
sbb
jno
lds
popf
sbb
popa
adc
or
sbb
jae
or
fucomip
jae
cld
stos
fmull
and
xchg
sbb
call
jne
inc
jmp
test
push
or
hlt
mov
mov
inc
dec
insb
fiaddl
aad
fsubs
sub
add
cmp
mov
sbb
push
les
adc
pushf
jnp
iret
stc
pushf
mov
mov
mov
jno
addl
dec
cs
adc
mov
xor
push
ret
pop
inc
adc
nop
mov
jb
pop
mul
enter
push
test
jl
inc
inc
fmuls
adc
ret
push
mov
negb
pop
jl
cs
mov
mov
mov
add
popa
jl
addl
jmp
push
sub
sub
jp
popfw
sbb
fwait
incb
add
or
mov
mov
rolb
pop
in
add
pcmpeqd
ret
mov
jbe
adc
movl
xor
push
mov
mov
test
pop
in
jmp
sub
fsub
cmp
jbe
or
mov
adc
or
xchg
loope
cmp
lea
sub
les
les
call
add
les
ljmp
pop
dec
mov
jmp
call
js
pop
push
mov
popa
in
ret
fcoms
cs
bound
test
test
add
fs
ja
mov
sub
cmp
mov
push
aam
dec
or
ljmp
adc
aam
jb
pause
insb
adc
jo
notb
leave
sahf
rorb
clc
pop
sub
or
outsl
into
test
xchg
sbb
mov
flds
mov
andb
and
movsb
jg
cmpsb
jne
inc
ficoms
jnp
call
cmpsl
push
repz
mov
mov
mov
push
dec
faddl
push
enter
fldt
mov
bnd
out
outsb
jbe
add
into
fisubl
sub
mov
std
aad
sub
js
cmp
jbe
sub
sar
mov
add
cmp
jbe
jmp
add
mov
sbb
sub
inc
es
jo
loope
adc
lret
cmp
adc
jbe
int3
shl
sti
fisubs
push
add
mov
push
add
or
sbb
mov
adc
and
int3
adc
sub
int3
xchg
mov
sbb
adc
pop
cmpl
ss
es
mov
mov
mov
or
mov
enter
loopne
jl
adc
mov
mov
ret
push
sub
andl
sbb
int3
shr
jge
hlt
test
lock
push
stos
sbb
pusha
inc
rcll
jo
inc
sar
mov
and
rcrb
addl
clc
and
repnz
push
pop
and
popf
xchg
jle
subl
insb
js
add
rorb
pusha
dec
int
lock
insl
jmp
xor
shrl
or
sub
xor
rcll
mov
dec
fsubrp
sbb
orl
cld
call
sub
fwait
and
adc
push
addl
int3
cmp
xor
adc
loopne
stos
mov
je
inc
jecxz
dec
in
dec
jne
cmp
pop
add
mov
sbb
testl
push
inc
mov
test
and
jl
jmp
cmpsl
roll
sub
adcb
scas
pop
lock
cld
push
or
push
mov
pop
push
mov
test
add
sbb
lcall
cmp
je
pop
adc
push
iret
cmp
mov
cmp
addr16
aaa
or
adcl
pop
mov
cmpsb
loopne
icebp
push
mov
push
aas
aam
sbb
movl
add
dec
and
movsb
push
or
dec
lods
movsb
sub
add
mov
hlt
dec
loop
cs
push
stos
push
sub
cmp
jne
inc
sbb
inc
repz
je
add
aaa
in
jmp
mov
xlat
insb
mov
adc
adc
sbb
inc
ja
xlat
ljmp
into
loope
cmpsb
sub
adc
shlb
dec
and
daa
jbe
mull
and
sti
jne
idivb
xchg
sbb
and
sbb
loopne
or
and
and
sbb
ja
icebp
xchg
xchg
mov
sbb
add
or
mov
add
push
or
outsb
add
out
addb
insb
and
test
jmp
and
in
or
in
jbe
addb
mov
stos
mov
sub
adc
sahf
jg
mov
shl
mov
mov
add
xor
add
add
mov
idivl
sub
pop
sub
orl
add
push
pop
or
enter
or
enter
or
mov
orl
add
or
call
push
cmp
sbb
or
add
push
inc
xor
hlt
mov
test
mov
sbb
xlat
push
jl
xchg
nop
adc
sbb
mov
push
mov
enter
mov
mov
mov
cmp
inc
test
add
icebp
insb
shl
cmp
outsb
jl
movsb
dec
pop
clc
fsubs
add
or
inc
sbb
mov
sub
cmpb
jl
insb
movsl
cmp
cmp
jns
fs
mov
and
sbb
mov
fidivrl
mov
mov
and
daa
inc
or
adc
ljmp
addr16
adc
imul
pop
sub
pop
add
mov
outsb
mov
add
jns
inc
pusha
xor
mov
js
or
push
mov
outsl
mov
mov
cmpsb
inc
xor
aam
add
cmp
jae
imul
frstor
nop
push
dec
dec
jmp
push
sub
mov
or
test
fbstp
sahf
pop
sbb
addb
sbb
sbb
nopl
jmp
dec
and
jg,pt
mov
imul
movsb
mov
add
aaa
xchg
cmp
or
fcmovu
xor
push
cmpsb
add
es
addb
or
push
out
lret
ret
inc
sub
xor
xchg
jle
idiv
icebp
or
add
rcl
loop
xchg
jl
or
jb
cmpb
mov
scas
notb
jb
add
inc
jmp
je
dec
je
je
jl
or
push
cmp
add
rcrb
add
dec
push
push
push
mov
and
icebp
enter
cmp
out
fldenv
repnz
and
or
pushf
lock
add
inc
or
push
sbb
lret
adc
sub
xor
addb
clc
sbb
add
add
pop
xor
adc
xor
out
jl
adc
inc
mov
addr16
lea
push
or
inc
cwtl
xor
cmp
into
imulb
mull
and
and
dec
cmp
incl
and
pop
xor
dec
mov
enter
shlb
dec
aam
lret
push
xor
mov
pop
test
jne
xor
nop
stc
mov
mov
jne
aaa
xchg
jmp
xchg
mov
mov
push
pusha
ret
add
movsl
mov
xor
adc
jnp
rorl
test
mov
neg
test
xor
je
stos
dec
xchg
popf
aad
or
adc
popf
movsl
loope
xchg
sbb
adc
movsb
cmp
mov
pushf
popf
adcb
repnz
xor
fnstenv
inc
xchg
subl
push
stos
or
adc
cmp
jae
mov
leave
ds
cmp
jmp
into
push
in
push
push
in
aam
add
popa
out
scas
xor
inc
sub
add
dec
push
add
shll
mov
rcrb
sub
push
push
push
xor
add
push
aas
out
or
roll
loopne
cmp
ja
je
enter
add
sbb
push
mov
jb
rcll
je
mov
xorb
cmp
and
test
push
jl
dec
cmc
or
ficoml
or
sbb
or
dec
or
push
cmp
sbb
sarb
clc
adc
add
call
cmpsl
out
test
or
ja
outsl
push
jl
pop
xor
or
dec
adc
mov
inc
adc
dec
adc
push
jle
loope
popa
add
cmp
aaa
cs
pop
mov
rcr
data16
std
jne
pop
mov
inc
adc
movsl
shll
add
push
dec
clc
xor
outsl
arpl
xor
add
scas
ret
sahf
stos
mov
mov
shl
or
push
popa
scas
xchg
cmp
jb
mov
ret
add
adc
or
push
add
or
loopne
mov
push
jge
js
inc
das
sub
subl
inc
adc
aas
jmp
mov
sub
dec
adc
je
clc
push
sub
push
loope
jmp
popa
adc
aad
adc
push
pop
popa
subb
pop
dec
or
push
lock
iret
shl
or
add
push
dec
inc
lock
jb
imul
int
mov
lahf
ja
rol
lcall
fwait
stos
in
test
in
add
mov
add
add
fistpll
int
or
jne
test
push
loope
popa
sbb
sbbl
push
xor
xor
or
cld
jmp
mov
inc
inc
mov
jne
mov
xchg
xchg
add
push
clc
dec
mov
sub
inc
xchg
push
lock
call
xor
push
ficoml
add
cmp
and
push
mov
or
scas
mov
cmp
or
add
inc
mov
push
push
imul
xor
adc
adc
sarb
adc
xor
addb
testl
add
test
in
mov
dec
mov
mov
and
pop
and
push
add
out
push
xor
push
and
add
or
inc
pusha
test
pop
pop
push
imul
add
mov
psllw
ret
lds
push
sub
sbb
push
lea
push
shlb
xor
sub
dec
std
add
inc
push
jecxz
fucomip
jp
pop
call
cmp
add
push
jnp
les
dec
ljmp
hlt
and
sarl
sub
push
and
bswap
adc
dec
icebp
mov
push
push
and
lcall
mov
inc
adc
push
popa
mov
dec
lret
push
mov
test
loopne
jg
mov
xchg
rorl
dec
cld
mov
mov
mov
outsl
test
test
jp
or
dec
sbb
mov
pop
cs
ret
fsub
repnz
std
and
ds
icebp
popa
lret
mov
sbb
or
sub
dec
jmp
in
mov
adc
adc
inc
fisttpll
add
dec
sub
data16
loopne
sahf
sub
sub
sub
fwait
cs
mov
psubb
andb
rclb
adc
arpl
push
out
add
jbe
sub
fwait
enter
mov
push
push
filds
xchg
adc
mov
adc
adc
stos
xorb
adc
pushw
ds
adc
imul
add
mov
mov
adc
lock
inc
dec
cmp
fmull
lahf
bound
das
shlb
sbb
add
std
sbb
dec
cs
xor
pushaw
mov
dec
bound
cmp
cmp
jae
jne
sub
je
jmp
mov
clc
rcrl
imul
inc
aaa
adc
faddl
jb
adc
inc
adc
es
adc
popa
movsl
adc
mov
fldln2
add
shrb
add
mov
or
lock
ljmp
mov
cli
test
push
push
out
je
add
sbb
push
in
arpl
or
shrl
pop
arpl
daa
insl
or
sbb
into
gs
shl
aad
ja
pusha
out
arpl
je
mov
js
out
add
inc
sbb
mov
xor
inc
mov
pop
testl
mov
xor
imull
adc
sub
cmp
inc
xor
and
clc
mov
flds
dec
dec
int
mov
jno
mov
addl
sbb
inc
inc
ret
ret
mov
and
or
mov
addr16
loope
mov
sbb
aaa
xor
enter
es
clc
xchg
adc
sarl
mov
sub
mov
mov
pop
cmp
sbb
imull
pop
das
inc
xor
fs
sub
xor
enter
sub
cmp
jbe
inc
test
inc
push
sub
lret
push
pop
jl
and
dec
push
aad
scas
pmuludq
lea
mov
je
repnz
or
push
xor
rorb
add
pop
lcall
outsl
xchg
faddl
jl
mov
test
xor
push
push
insb
and
outsb
inc
xor
out
fldt
cmpsb
xchg
insb
shr
out
add
sub
jbe
sbb
mov
pop
push
cmc
mov
cmp
jmp
mov
push
pop
push
insb
add
sbb
jo
and
aas
and
pusha
inc
cmp
cmp
jbe
adcl
pop
sub
adc
mov
mov
adc
bound
or
inc
xor
data16
sbb
and
sub
and
push
sub
out
hlt
xor
jmp
mov
dec
mov
inc
sbb
ja
mulb
jmp
or
fistpll
inc
adc
sbb
loop
jbe
ret
or
jp
clc
sti
jne
fisubrl
aam
clc
out
sub
dec
add
mov
out
adc
test
inc
cmp
sbb
cli
mov
push
push
mov
mov
lock
dec
sub
jne
scas
loope
daa
movsb
cli
mov
shll
xor
add
bound
repnz
add
jle
add
aam
cmpsb
and
cmp
aam
stos
leave
jge
mov
mov
dec
or
pop
sbb
push
mov
imul
adc
adc
sub
or
sub
in
push
jo
lcall
or
adc
sbb
lods
lret
loope
psllw
add
shl
or
xor
mov
ret
and
lcall
hlt
and
out
cmp
mov
mov
addr16
push
sub
and
mov
push
mov
inc
xchg
movsb
test
inc
inc
out
jle
testb
je
pop
lock
data16
outsl
or
loopne
shll
rorb
add
jae
xor
mov
adc
mov
ds
adc
or
ss
fdivrl
jge
or
iret
movzbl
sub
dec
subl
sub
jecxz
neg
pop
mov
jae
scas
dec
ja
jbe
mov
jb
mov
mov
decl
and
rcr
push
xor
xchg
lock
or
call
fsubrs
data16
out
push
inc
iret
dec
ret
fisttpl
add
mov
movups
mov
aam
pop
dec
jmp
sbb
push
out
xchg
lock
push
push
insl
push
jmp
dec
sub
es
dec
jne
jmp
inc
jne
cwtl
loope
mov
jbe
add
push
filds
popa
bound
data16
ja
adc
inc
sbb
sbb
in
sub
shr
in
sbb
dec
enter
inc
xor
adc
test
xchg
add
or
push
pop
and
push
inc
cmpsb
fistpll
jb
adc
sub
add
lods
mov
push
sbb
or
adc
cmpsl
push
cs
cwtl
sub
lock
cmpsl
jecxz
popf
and
jne
cmp
stos
out
and
or
add
push
or
inc
fnstsw
adc
inc
sbb
jecxz
mov
jmp
in
jb
sahf
cmp
das
xor
or
cmpl
sub
jg
inc
or
pop
or
sbb
leave
jno
xor
hlt
sbb
dec
nop
pop
add
sbb
adc
sbb
enter
fisubrl
push
push
addl
or
ret
out
pop
rorb
je
mov
sbb
push
sti
xor
cmp
push
insb
xor
push
jg
enter
std
test
inc
hlt
push
and
pusha
mov
test
arpl
loopne
lcall
sbb
sub
inc
sub
pop
or
adc
pusha
pop
sub
call
xchg
mov
fwait
mov
inc
or
lods
decl
jl
inc
aam
clc
add
mov
and
dec
or
inc
out
push
sub
pop
sti
lcall
mov
push
mov
ror
mov
pop
inc
add
xor
push
push
mov
inc
dec
jne
sub
or
xlat
ja
or
mov
push
mov
push
mov
ret
and
or
or
sar
add
dec
sbb
lret
cmpsl
imul
add
mov
add
pop
pop
and
push
shrb
pop
lcall
or
inc
sbb
loope
lea
pop
imul
jle
inc
call
outsb
lea
jle
adc
push
es
mov
mov
mov
mov
inc
push
or
mov
out
push
pop
mov
rolb
int3
mov
mov
jb
lock
push
jbe
jo
std
add
sahf
push
cmp
fimuls
daa
xchg
leave
mov
in
cmp
popa
insb
movsb
cmpsl
daa
sbb
adcb
mov
icebp
and
push
fildll
add
test
sub
rorb
mov
fstpl
enter
dec
mov
pop
fidivrs
rcr
sbb
push
sub
aaa
rcll
sahf
inc
add
je
loopne
or
jo,pt
jl
push
push
test
sbb
loopne
ret
mov
cmp
xor
pusha
push
shl
nop
nop
add
pop
or
fdivrl
mov
push
ljmp
imul
jns
inc
mov
jnp
popa
jae
nop
push
jo
mov
xor
inc
push
scas
ret
jb
push
inc
dec
jbe
cli
or
add
inc
add
or
ss
sbb
and
push
add
cs
mov
sbb
mov
cmpsl
sbb
aam
sbb
sbb
mov
in
sbb
add
and
sbb
jns
daa
sub
xor
cmp
mov
jns
daa
jns
mov
inc
mov
daa
dec
mov
push
mov
pushf
push
mov
jns
cmpsl
sbb
pusha
mov
sbb
aaa
push
cld
imul
or
je
sbb
cmp
imul
movsb
or
push
fcomps
add
fdivrs
fadds
mov
sbbb
in
movsl
xchg
cli
mov
add
fcomps
fiadds
rclb
pop
js
in
add
xchg
dec
and
pop
popa
and
test
ret
inc
lcall
and
mov
orl
adc
hlt
add
pop
cmp
pop
loopne
sub
mov
and
daa
lcall
fs
jns
repz
ds
dec
jnp
neg
and
cmp
ja
sbb
push
cmp
insl
cmp
and
sub
cli
push
cs
das
sub
repnz
add
inc
bound
dec
popa
jb
imul
dec
jne
dec
imul
insb
pop
jne
pop
push
enter
gs
arpl
jbe
mov
arpl
push
jne
pop
push
cltd
hlt
daa
es
or
inc
insl
dec
data16
xchg
imul
ljmp
xor
pop
insb
cmpsl
shlb
add
inc
jne,pt
je
inc
por
inc
je
insl
bound
add
push
jbe
push
outsl
and
punpcklbw
add
pop
imul
fsubrs
lahf
push
daa
repnz
dec
outsl
aas
push
jne
push
gs
pop
push
push
lock
dec
popa
push
pop
cmpsb
fs
xor
scas
pop
sub
mov
inc
fistpll
and
xor
ss
popl
scas
dec
leave
sahf
pop
push
out
and
subb
mov
mov
push
repnz
mov
inc
sbb
repnz
cmpl
sub
lea
mov
push
push
int3
int
push
cmc
mov
lock
xor
js
loopnew
fisubrl
rcr
add
jg
push
push
das
cwtl
mov
dec
dec
or
andl
xor
aas
adc
add
pusha
jae
ds
add
add
addr16
es
adc
sub
mov
mov
sbb
mov
test
mov
int
cwtl
mov
xlat
sub
in
add
inc
jo
dec
or
or
xorb
cmpsl
push
mov
sbb
lods
push
push
xchg
lock
dec
sub
mov
lret
add
orl
jne
sbb
faddl
ret
rcrb
cmpsl
push
mov
xor
in
aad
cs
lods
add
xchg
neg
mov
xor
addl
sub
jg
pop
rclb
fbld
aas
adc
jnp
add
test
fucom
jo
lcall
fldl
pop
pop
aaa
mov
dec
sub
rol
and
adc
jg
mov
ficoms
sbb
call
and
shlb
pop
adc
adc
inc
jbe
addl
jno
pop
adc
lock
test
xor
pop
xor
mov
push
fcmovb
sub
adc
movsl
ret
lock
pop
clc
dec
inc
clc
ret
mov
testb
andl
sbbb
daa
mov
add
and
inc
mov
loop
hlt
inc
flds
mov
hlt
ljmp
add
fcoms
loopne
push
xor
jo
movsb
or
push
in
xor
nop
sar
inc
out
mov
xor
or
lods
xlat
aaa
sbb
aaa
les
rcr
scas
sbb
incb
sub
cli
xor
add
mov
sub
fs
mov
arpl
and
pusha
adc
imul
cld
cmp
push
cli
sahf
adc
add
mov
dec
call
xor
ss
fidivs
call
sub
lock
or
enter
xor
push
sub
lahf
sti
scas
jo
mov
dec
and
and
or
rolb
jae
pop
xlat
decb
inc
dec
push
push
and
xor
push
js
gs
xor
mov
arpl
add
movsb
test
push
mov
and
sbb
shrb
mov
xchg
and
mov
mov
mov
lods
push
xorl
pop
sarl
pushf
xchg
dec
popa
je
xchg
fs
jge
dec
jle
lahf
xchg
inc
ljmp
daa
daa
daa
mov
movlps
adc
daa
daa
daa
daa
push
pop
sbb
daa
daa
daa
daa
sbb
sbb
daa
daa
daa
daa
push
pop
add
daa
daa
daa
daa
add
add
daa
daa
daa
daa
push
pop
or
daa
daa
daa
daa
or
or
lret
daa
daa
daa
push
incb
xchg
xchg
xchg
xchg
icebp
repnz
xchg
xchg
xchg
xchg
cmc
div
clc
xchg
xchg
xchg
xchg
stc
cli
sti
cld
xchg
xchg
xchg
xchg
std
jmp
xchg
xchg
xchg
xchg
loope
jecxz
xchg
xchg
xchg
xchg
in
out
xchg
xchg
xchg
xchg
jmp
xchg
xchg
xchg
in
out
out
shrb
dec
xor
imull
roll
mov
clc
out
dec
dec
push
inc
dec
fs
js
sub
cmp
cmp
mov
jl
dec
inc
adc
sbb
nop
in
dec
cmpb
cmp
pop
sar
jmp
outsb
inc
insb
outsl
jae
fs
jb
pushf
inc
ret
add
push
dec
push
xor
in
dec
xchg
adc
outsb
addr16
cs
pop
mov
or
jmp
imul
shlb
adc
shll
xchg
and
insb
dec
cltd
lods
cs
push
adc
and
insb
lcall
mov
into
mov
dec
outsl
je
inc
jns
sub
inc
mov
call
and
mov
pushf
push
push
dec
addr16
dec
fwait
ret
sbb
sub
mov
outsl
jb
dec
outsb
pop
outsb
rcl
out
in
adc
lcall
and
lahf
sub
cmp
xor
push
pop
data16
outsb
insb
dec
push
pushf
adc
mov
push
push
in
pushf
cwtl
inc
and
sbbb
fimull
movsl
mov
popf
lock
insb
xor
cmp
js
or
xchg
cmp
mov
popf
pop
popa
sub
or
mov
repnz
ds
bnd
pop
std
sbb
mov
pop
push
cmp
jg
cmp
jle
push
push
add
je
lret
xor
xor
ret
mov
in
insb
dec
mov
pusha
inc
or
adc
xor
les
enter
push
jl
pop
inc
popa
js
cmp
out
ret
inc
jb
inc
push
imul
pop
dec
outsw
jae
sub
filds
or
push
push
dec
sub
add
add
sub
pusha
adc
and
dec
je
add
xor
inc
lret
jmp
int3
mov
fs
js
lea
fs
scas
cmp
roll
mov
mov
jmp
adc
std
push
bound
orl
xchg
test
call
pop
cltd
imul
js
es
daa
sarl
pop
cld
jge
pop
call
fstpt
flds
clc
pushf
loopne
ret
and
popa
loopne
mov
adc
aaa
cs
mov
and
add
insb
push
ds
add
verr
adc
gs
jo
jb
mov
or
mov
cli
test
aas
xchg
mov
add
pushf
or
out
pop
dec
daa
es
xor
cmp
dec
rolb
pop
or
sti
js
mov
aas
add
lahf
fdivr
add
sub
pop
push
adc
aaa
hlt
das
adc
push
or
sarl
ret
mov
loopne
in
ret
push
pop
add
aas
dec
mov
daa
jo
push
jb
or
xorb
rorb
ret
cld
mov
inc
ss
cmp
add
jae
push
jo
fs
adc
fs
sbb
add
sbb
mov
pop
dec
inc
bnd
push
sbb
insb
cs
adc
mov
scas
and
jne
push
push
xor
xchg
pop
jle
mov
push
stos
inc
and
or
cmc
clc
loopne
rcr
jmp
inc
fldenv
lock
add
adc
push
sbb
xchg
pusha
or
jle
xchg
jp
adcb
je
test
ja
push
push
mov
push
out
dec
jns
data16
xchg
inc
add
call
pop
repz
mov
aad
and
jbe
cmp
nop
popa
hlt
int
push
lahf
mov
pushf
sub
inc
inc
fdivrs
or
push
imul
insb
push
arpl
xchg
iret
cwtl
push
ret
or
daa
cmpsl
dec
push
jbe
pushf
xchg
adc
mov
add
nop
mov
dec
imul
mov
or
jmp
outsb
push
push
jo
push
or
insb
outsl
bound
arpl
ret
or
ja
mov
sahf
lock
xor
xor
outsl
or
adc
test
and
mov
push
inc
inc
lahf
mov
fldcw
js
mov
dec
rcrb
rclb
aam
cld
nop
xor
andl
lock
out
dec
pop
inc
cli
push
dec
jle
pop
je
hlt
les
pop
cld
lock
mov
je
loopne
shrb
jge
mov
add
daa
push
push
push
decl
inc
add
dec
jne
or
add
test
leave
cmp
shll
xchg
pop
int
out
jge
negb
xchg
movsl
ds
pop
sub
popa
mov
cmp
jle
ja
mov
cmpb
loope
lock
or
add
mov
xor
mov
scas
mov
dec
mov
inc
add
cmp
shlb
push
data16
adc
jl
loopne
sarl
push
inc
cmp
pop
les
sub
cmpsl
mov
rcrb
icebp
xchg
insb
mov
cwtl
out
das
ret
jne
mov
jmp
sbb
adc
xchg
shl
jne
ret
sahf
mov
cmp
add
cmp
inc
negl
dec
outsl
fwait
iret
dec
mov
xor
imul
aam
outsl
out
add
ss
sub
cmp
mov
jg
jmp
addr16
add
jb
ss
cwtl
push
test
add
das
xchg
lock
cltd
mov
jno
sub
push
rorl
add
lock
lea
pusha
mov
enter
push
and
mov
hlt
pop
sub
or
movsb
lds
sbb
cmp
into
sbb
sub
aas
aaa
mov
test
adc
test
add
popf
ret
filds
mov
or
loopne
je
lret
insl
cld
jnp
pusha
mov
and
faddl
jg
and
shl
and
loopne
jmp
pop
or
pop
pusha
or
mov
and
sbb
inc
cmp
dec
push
adc
ljmp
enter
rclb
dec
add
or
mov
add
pop
in
not
pop
lock
cmp
jb
cmp
jbe
mov
mov
dec
cmp
push
jo
or
add
jmp
add
call
scas
push
inc
mov
dec
xchg
cmp
adc
add
fildl
nop
std
sti
das
dec
xchg
cmp
cmp
cmpsb
inc
jbe
cmp
add
push
in
push
data16
and
mov
rcrl
mov
adc
pop
and
leave
mov
jne
cmp
push
pop
ja
mov
mov
pushl
push
ret
adc
clc
push
movzwl
andnps
enter
fdivr
jne
aam
jmp
mov
into
leave
push
outsl
inc
and
inc
insl
adc
rorl
push
cmp
inc
sub
repnz
xor
xor
xchg
pop
push
inc
repz
cmp
sbb
or
adc
test
fwait
cmpb
jne
dec
dec
cld
mov
pop
jg
mov
mov
cmp
dec
or
xor
push
or
inc
pop
mov
jp
jg
sbb
push
add
cmp
jg
in
call
cmp
and
jb
inc
dec
pop
movsl
fnsave
cmp
out
sub
leave
loopne
inc
clc
add
lea
lcall
mov
hlt
or
insb
insb
std
pop
hlt
enter
repz
inc
fdivl
jle
sti
mov
add
test
sub
add
mov
add
fcmovnb
in
call
out
sbb
insl
clc
inc
test
cmp
mov
push
sub
add
je
nop
adc
int3
dec
and
sub
cs
mov
sub
js
mov
addl
add
mov
inc
or
push
pop
push
xchg
movb
add
add
add
mov
lea
dec
mov
xor
cmp
jne
cmpb
inc
jnp
enter
add
ret
cmpl
jle
cmpl
add
mov
jne
jmp
jb
bound
jbe
ret
mov
inc
add
lods
cs
xchg
or
mov
addb
fwait
jle
pushl
inc
push
sbb
mov
mov
test
stos
cld
ret
add
jno
pop
xor
sub
jle
test
mov
inc
and
adc
xchg
pop
mov
xor
pushf
mov
jns
loop
mov
pop
adc
dec
shlb
sub
xor
push
cwtl
cmc
or
ret
and
test
xchg
inc
sti
mov
cmp
xchg
les
sbb
lds
dec
inc
mov
fmuls
lcall
data16
push
insb
leave
xor
push
test
cmpb
mov
push
xor
pushl
sbbb
loopne
xor
shlb
out
rorb
inc
nop
insl
sahf
pop
add
aaa
sbb
inc
in
and
push
enter
xchg
sahf
cs
mov
mov
inc
push
xor
cmpsl
leave
push
add
ret
ja
pop
pop
add
test
int3
push
inc
and
pop
inc
nop
clc
pop
movsl
sbb
mov
push
add
ficoms
pop
in
insb
lock
aam
jge
lret
dec
aas
mov
xchg
pop
dec
push
xchg
outsl
or
push
lea
mov
mov
ja
cmpsb
icebp
sub
mov
sub
add
andl
js
mov
adc
aad
cmp
xchg
roll
adc
inc
add
aaa
das
pop
sub
clc
jne
cmp
iret
sbb
jae
jmp
jge
hlt
inc
jge
les
fadds
adc
faddl
lods
clc
pop
notb
clc
jg
sub
add
sbb
and
mov
adc
nop
movsl
and
lods
loope
and
add
mov
sub
adc
xor
jmp
inc
mov
in
into
pusha
jno
mov
cwtl
mov
insl
inc
les
arpl
pop
lret
ret
out
lock
xchg
jp
std
dec
sarb
test
hlt
pop
loop
mov
mov
test
cmpsb
jmp
mov
push
mov
mov
dec
movb
mov
mov
lret
jo
jge
pop
cmp
and
arpl
sahf
xchg
dec
clc
jg
jae
arpl
imul
or
cmp
push
inc
out
adc
jmp
and
jnp
and
adc
sbb
imull
pop
push
mov
je
lcall
xchg
pop
mov
fisubs
xor
clc
fimull
cs
sbb
daa
or
and
imull
mov
insb
ss
mov
hlt
bound
push
sbb
arpl
add
aam
push
lea
push
or
sbb
in
inc
arpl
enter
pop
xor
outsl
addb
pop
add
push
jns
or
cld
lea
pop
or
or
pop
adc
test
bndldx
into
bound
push
xchg
movntps
adc
fs
adc
fs
and
sbb
inc
roll
cmp
dec
dec
in
call
loope
movzwl
pcmpgtw
xchg
inc
pop
loopne
in
adc
mov
or
xchg
xchg
mov
push
sub
daa
outsl
hlt
and
or
neg
xchg
mov
pop
ror
push
popa
jae
add
and
mov
push
lock
jg
mov
sbb
mov
dec
fs
mov
xchg
pushf
or
mov
outsl
mov
inc
nop
aam
xlat
push
jl
pusha
inc
pusha
fdivrp
add
sub
lret
jp
lahf
es
mov
imul
adc
sti
or
and
je
data16
adc
push
sbb
ja
push
je
push
sub
push
add
jmp
jl
add
pop
inc
add
cld
push
push
inc
mov
jno
add
xor
mov
or
pop
pop
test
sbb
cmpl
mov
inc
cwtl
aad
adcl
jno
or
divl
pop
dec
test
cs
sahf
mov
adcb
sub
insl
adc
push
adc
add
pushf
ret
push
test
mov
dec
inc
test
jle
sbb
cmp
jno
add
mov
push
sub
push
push
adc
loopne
pop
mov
add
and
push
jae
imul
fmuls
xor
aas
dec
loope
sbb
incl
xchg
out
btcl
lods
push
mov
push
dec
nop
rcrb
jo
lods
or
add
lock
pop
cmpsl
inc
popa
pusha
aas
stc
outsl
shl
mov
push
pop
and
jae
push
je
bound
lods
lock
sub
adc
adc
loope
mov
insb
loopne
incl
mov
movsl
xor
popa
mov
jmp
push
in
cmp
or
cmp
mov
shll
xchg
cmp
push
push
jge
pushl
xchg
aas
arpl
jmp
or
jno
pop
ljmp
ret
add
mov
rolb
xor
jne
lret
filds
cmp
sbb
scas
cld
or
jb
cmpsl
cmp
pop
les
jne
push
add
mov
mov
adc
pop
xor
pop
incl
mov
xchg
jno
mov
fwait
les
jns
leave
add
ret
nop
mov
push
fadds
enter
pop
inc
pop
or
push
repnz
lahf
mov
xor
js
loope
and
dec
loope
mov
push
outsl
dec
mov
imul
inc
add
outsb
scas
mov
out
mov
into
jb
or
daa
dec
iret
push
cmp
push
arpl
xchg
push
addr16
adc
es
xlat
inc
arpl
fadds
add
lods
jle
push
outsl
mov
test
imul
hlt
aaa
ja
lock
gs
faddl
pop
jns
pop
xor
mov
pusha
je
sbb
xchg
sbb
mov
xor
adc
incb
and
adc
xchg
cmp
xchg
push
or
xchg
dec
push
movsb
fdivl
adc
pop
or
xor
insb
or
xchg
adc
fadd
daa
push
or
sbb
fs
test
xor
and
xchg
outsb
cmp
addr16
cmpsb
push
js
or
jo
call
aaa
insb
imul
js
add
adc
daa
inc
or
or
pop
fdivl
shrb
nop
xchg
and
sbbb
inc
cmpsl
mov
inc
aas
jl
inc
pop
popl
pop
aas
sub
and
test
sbb
add
out
and
out
lods
xchg
outsl
sub
or
xchg
mov
xchg
jae
insb
cmp
jg
out
xchg
cmpsb
lret
xchg
nop
inc
add
push
and
push
lret
inc
loopne
xchg
xchg
andb
jg
and
inc
xlat
jae
and
cs
xchg
mov
push
ja
pop
daa
or
outsl
aam
addl
in
or
sub
mov
aaa
outsl
shrl
push
scas
imul
addl
outsl
and
or
sub
outsl
adcb
pop
or
iret
mov
out
lods
outsl
mov
das
outsl
out
mov
push
jo
jb
shlb
divl
add
das
ja
mov
mov
aas
daa
pop
roll
das
movsb
inc
mov
enter
sbb
outsb
jne
out
sarb
mov
and
je
mov
mov
daa
outsl
test
mov
dec
sar
insl
inc
in
sarl
add
or
sub
jb
les
jb
sbb
addr16
pop
mov
mov
add
dec
xlat
aam
pop
xor
pop
adc
push
outsb
dec
outsl
imul
and
roll
int3
jne
inc
xchg
pop
daa
daa
lahf
adc
dec
in
jns
shlb
out
ret
cwtl
out
popa
outsb
arpl
insl
rcrb
pop
aam
out
lret
scas
dec
scas
jg
fcoms
popl
jns
pop
push
mov
dec
scas
xchg
pop
pop
sub
push
mov
mov
aaa
mov
aaa
fsubl
mov
or
dec
xchg
inc
push
jmp
dec
xlat
loopne
in
xor
pop
and
jle
subl
in
add
push
xlat
lds
out
cmpsl
jmp
lahf
cwtl
and
inc
jno
push
scas
sbb
or
add
and
outsb
xchg
in
scas
fsubs
cmp
jg
lds
cli
jae
gs
or
popa
in
and
pop
aas
xor
orb
ret
hlt
xchg
lret
test
mov
sti
fs
pop
pop
jp
inc
js
jmp
clc
ja
or
iret
das
xor
into
pop
popf
xchg
xchg
les
jae
addr16
inc
add
cs
xor
sub
daa
push
xor
adc
pop
pop
push
nop
scas
sub
xchg
pop
scas
test
push
cmp
addr16
pop
mov
gs
or
fcompl
inc
aaa
pop
inc
push
inc
arpl
mov
inc
and
out
or
fcoml
adc
aaa
xchg
and
xor
inc
aaa
xchg
ret
and
jg
adc
aaa
xchg
push
sbb
ljmp
ja
ja
jb
xorl
lods
cmp
popa
cs
popl
dec
ljmp
arpl
jae
pop
sbb
lock
lcall
inc
push
dec
and
aaa
mov
xchg
xor
je
rol
xor
add
pop
sub
test
data16
gs
popa
jo
gs
sbb
in
out
sub
or
aaa
jl
or
push
nop
scas
lds
xorl
jg
pop
and
and
popl
ss
inc
xor
mov
push
and
dec
dec
lods
and
push
jg
and
jno
cmp
sub
and
addr16
mov
dec
pop
xor
lahf
cmp
jp
pop
push
lahf
pop
sahf
and
sahf
dec
outsl
imul
je
movl
push
pop
aaa
aas
dec
test
and
jo
shrl
dec
mov
hlt
das
movsb
sbb
add
mov
sbb
loopne
mov
daa
dec
pop
sub
das
pop
ja
push
adc
jae
int
dec
arpl
push
jg
ret
dec
dec
addr16
ljmp
push
andb
and
repz
pop
pop
mov
add
pop
addl
jo
daa
push
pop
decl
inc
xchg
scas
pop
cmp
das
shl
push
andl
daa
add
cwtl
daa
and
daa
fbld
outsl
aas
cmpsl
int3
mov
fs
push
enter
and
adc
jmp
push
sbb
iret
in
sub
push
push
insb
pop
dec
pop
inc
push
xchg
dec
decl
xchg
push
movsb
dec
popl
dec
and
dec
pop
push
xchg
out
je
call
faddl
notl
jo
popa
imul
jo
xor
repnz
lahf
js
jle
sub
adc
out
adc
inc
jl
adc
and
and
adcb
inc
xchg
addr16
inc
sub
mov
test
jg
pusha
adc
orb
les
int
xchg
insb
inc
xchg
xchg
dec
mov
mov
add
das
sub
xchg
cld
daa
xor
fdivl
daa
ja
icebp
pop
mov
jp
jo
imul
fs
xchg
xchg
inc
subb
xchg
xchg
or
or
aaa
push
nop
sbb
pop
addr16
push
xchg
out
mov
xchg
pop
frstor
jg
pop
jg
lahf
or
add
js
dec
mov
mov
xchg
aas
xchg
inc
mov
xchg
jo
mov
xchg
aas
xchg
pop
scas
add
das
aas
test
add
xchg
mov
daa
pop
insb
rorl
out
out
inc
outsb
fs
dec
testl
daa
pop
xchg
push
cwtl
ja
push
hlt
push
cwtl
hlt
outsb
jae
js
inc
insb
popa
jae
and
lahf
mov
cmp
sub
pop
daa
jg
mov
and
and
mov
dec
fistpll
pop
inc
daa
jg
or
jmp
jge
and
out
aas
mov
ret
mov
aas
pop
aas
pop
insl
cmp
push
cmc
lock
cmp
loope
pop
shl
aas
xor
les
test
aas
xchg
and
mov
lahf
rcll
enter
inc
je
das
das
pop
push
sbb
in
fbld
fstl
pusha
jbe
fs
adc
repz
sbb
out
je
or
fs
xchg
dec
push
sbb
add
mov
cltd
or
aaa
xchg
xlat
mov
adc
xchg
dec
icebp
push
jo
jns
lds
cmpsl
add
jg
stos
mov
fsubs
jl
fcompl
rcll
or
dec
adcb
loopne
ret
mov
inc
cmp
inc
addr16
pop
nop
outsb
or
sub
int
cmp
mov
inc
dec
lods
mov
add
scas
dec
xchg
xchg
push
add
aaa
test
dec
inc
div
and
js
imul
rcrb
int3
xchg
mov
push
lock
push
jb
jge
outsl
mov
imul
add
aaa
cwtl
subb
lods
or
adc
cmpb
imul
push
adc
mov
push
push
fsubl
adc
add
mov
adcb
add
adc
mov
sahf
in
fmull
adc
arpl
sarb
adc
mov
ljmp
jbe
outsb
arpl
sarb
adc
out
adc
in
mov
pop
loopne
bound
push
sarb
adc
sbb
dec
loop
add
adc
adc
sarb
adc
add
dec
mov
adc
js
fiadds
lock
sar
loopne
and
jb
xorb
dec
adc
add
add
adc
mov
jge
adc
scas
fs
lods
ja
and
mov
pop
adc
mov
sahf
xor
sbb
and
into
mov
ljmp
cld
cmp
cmc
ds
xchg
push
cmc
cs
adc
ja
jp
jb
mov
inc
mov
add
cmp
mov
loop
adc
fsubrl
mov
jns
xchg
xchg
ficoms
xchg
adc
jecxz
fsubrp
adc
cmp
inc
out
dec
out
push
je
sbb
cld
adc
cmp
dec
mov
nop
adc
adc
adc
push
adc
aaa
fiadds
fcoms
sbb
sbb
and
subb
negl
out
push
mov
jp
jle
mov
mov
notb
jb
adc
adc
jg
sti
sti
out
adc
adc
sbb
cmp
pop
adc
cmp
adc
adc
out
jmp
dec
test
adc
les
mov
cmpb
ja
testl
cmp
ja
les
rclb
orl
ret
pop
adc
test
sar
cmp
adc
cmp
pop
adcb
aam
lock
loopne
sub
ja
lock
xor
adc
adc
add
adc
sub
inc
jns
push
movsl
loopne
clc
test
sbb
push
push
push
inc
xchg
enter
or
fstl
clc
fisttpl
cwtl
push
push
sub
jmp
or
call
das
lock
sub
in
mov
mov
test
fsubrs
jo
adc
sbbl
and
add
std
pop
shlb
push
or
dec
push
sub
jecxz
inc
pop
insb
movsl
sbb
or
popf
dec
mov
ret
vmovss
outsl
fbstp
pop
xor
cs
dec
dec
xlat
lock
dec
jnp
daa
ss
je
jb
push
push
mov
rorb
rolb
ret
adc
hlt
lahf
ss
and
enter
cld
jl
push
adc
shrb
inc
ret
das
push
js
neg
mov
cmp
testb
out
add
cmp
xor
not
and
mov
js
or
add
push
push
insb
xchg
push
adc
sub
rol
decb
jge
jmp
mov
mov
in
mov
ret
jmp
xchg
or
push
adc
push
adc
mov
jp
adc
adc
cwtl
sahf
mov
rcr
test
xchg
push
dec
sub
das
jbe
mov
incl
imul
mov
cli
or
xchg
cmp
mov
cmp
roll
pop
and
xor
iret
repz
aas
inc
dec
push
pop
bound
jmp
mov
mov
es
or
mov
aas
cs
jbe
daa
mov
stc
or
adc
clc
popa
fnstsw
fcomp
call
daa
cmpsb
pop
cmpsl
jbe
loopne
jmp
push
push
jns
add
jle
mov
cs
push
in
add
or
or
adc
cmp
xor
xor
add
dec
mov
or
test
xchg
cmp
push
jb
push
cmp
push
jb
push
cmp
loopne
pop
icebp
add
push
jle
ret
add
or
push
jae
imul
dec
dec
add
imul
ret
pop
data16
xor
adc
mov
lds
popf
cmpsl
xor
loop
pop
clc
dec
dec
mov
inc
mov
mov
rcll
pop
mov
dec
or
enter
subps
fisttpl
pushf
xorb
pop
sbb
fwait
inc
nop
shrb
push
shrb
pop
pushf
push
lock
sti
cmpsb
jge
popf
dec
call
mov
mov
push
inc
rcr
mov
push
push
pcmpeqb
inc
push
inc
push
es
lea
adc
adc
mov
aas
lock
inc
mov
cmp
xchg
xchg
xchg
and
dec
adc
pop
xchg
inc
xchg
sub
dec
sbb
outsb
mov
xor
cmp
popa
mov
sahf
enter
rcr
int3
flds
inc
mov
cmp
push
mov
inc
cmc
gs
xchg
scas
and
or
xor
iret
ss
jle
jge
outsb
jae
jo
into
je
pop
pop
ja
adc
or
dec
cld
push
push
sub
jb
je
jmp
test
movzbl
xor
add
push
cld
pushl
push
out
pop
xor
lock
mov
mov
pop
movsb
mov
add
call
add
adc
jmp
leave
mov
mov
mov
call
rorb
enter
pmulhuw
sub
push
add
ret
lret
rclb
pop
ljmp
adc
lock
mov
lea
mov
pop
in
and
sub
mov
pop
add
sarb
int3
push
mov
es
push
in
cmp
adcb
mov
xchg
cmpsl
sbb
pop
mov
or
test
sub
test
lret
add
push
add
fcmovb
movsl
addb
cmp
loope
aaa
mov
pop
ljmp
xor
fcoms
out
inc
add
popa
xchg
lret
popa
add
mov
pop
xchg
in
mov
aas
add
sub
aam
mov
or
mov
call
lea
sti
movsl
add
pop
sub
or
in
mull
mov
push
push
xchg
enter
lds
xchg
sti
test
or
sbb
xor
add
dec
xor
hlt
inc
jne
mov
add
sub
jg
and
leave
test
jl
cmp
jle
mov
mov
mov
jmp
inc
dec
jne
mov
rolb
or
fildl
or
hlt
ds
divb
mov
and
mov
adc
or
sbb
xchg
jp
xor
outsb
imul
push
and
les
cmp
or
lock
rorl
jecxz
mov
lret
fsubrs
in
mov
or
repnz
cmp
test
jle
jmp
sbb
push
clc
add
mov
lods
cld
mov
fwait
call
ss
std
push
clc
ja,pt
test
mov
adc
daa
out
negl
outsl
or
add
insl
cmpsl
pop
push
cmp
jns
out
dec
pop
outsb
jg
sahf
out
sahf
mov
idivb
sarl
sbb
cmp
cmp
repz
insl
jle
mov
scas
mov
sbb
imul
imull
xorl
clc
mov
mov
or
pusha
mov
stos
inc
inc
nop
or
sbb
mov
aam
inc
mov
test
xchg
xchg
insb
gs
nop
inc
shll
or
and
leave
push
xor
xchg
adc
push
mov
sub
or
xchg
push
jl
xor
in
push
and
ficoml
jo
xor
fdivrs
enter
mov
jmp
sbb
jmp
sbb
mov
cmp
inc
sbb
mov
insb
and
nop
out
mov
add
or
cmpsl
inc
mov
xchg
push
mov
jo
mov
or
fists
call
mov
fwait
sbb
pop
push
inc
aad
outsl
fdivrp
lea
adc
add
xchg
out
mov
in
insl
or
add
mov
loopne
jnp
mov
mov
loopne
xchg
xor
aam
punpckhbw
clc
push
mov
int
pusha
test
jle
jge
pop
add
outsl
push
pop
hlt
inc
jl
push
das
lock
fisubl
cmp
jb
lea
cs
mov
gs
mov
aas
push
jo
mov
add
cld
pusha
jge
out
xchg
lret
test
push
aad
aad
ret
imul
mov
mov
sub
aad
pop
xchg
mov
jbe
rorl
push
sbb
fsubs
addl
xchg
push
push
add
lahf
loopne
add
pop
pop
mov
pop
push
lock
in
sub
sub
push
inc
xchg
mov
xlat
aam
or
add
and
loopne
jae
incl
pop
enter
push
push
push
jle
push
mov
insb
jnp
push
sbb
pop
movsb
sbb
inc
or
js
mov
sbb
mov
rorl
sbb
sub
push
arpl
adc
popa
syscall
sbb
sub
xor
fcmovnb
sarl
pop
jo
addr16
push
inc
je
movl
add
add
xchg
cmp
pminub
sub
or
xor
clc
or
clc
mov
pop
ret
pop
arpl
or
dec
dec
mov
add
lods
jle
jp
in
fs
in
sub
inc
pusha
mov
leave
hlt
mov
lahf
xchg
pop
pop
subl
pop
popa
std
lcall
popa
bound
lcall
mov
inc
xchg
testl
int
push
jo
push
adc
aam
loopne
xor
mov
insl
mov
pop
mov
push
adc
mov
dec
sub
lock
hlt
inc
repnz
mov
adc
setb
push
mov
xchg
lods
push
lods
or
inc
cs
adc
pop
clc
lcall
mov
stc
push
inc
scas
mov
hlt
mull
xchg
rcrb
out
sarb
push
xor
pop
test
fimull
es
stc
pop
jnp
pop
push
mov
cmpsb
sbb
cmp
pusha
shl
insb
test
lock
ss
movsb
mov
push
cmp
xor
in
scas
cmpsb
pop
inc
dec
imul
insb
ja
mov
lea
das
mov
sub
lods
hlt
mov
or
sub
inc
clc
jne
lea
add
add
jnp
inc
jne
ret
bound
add
mov
mov
or
cmpsb
pop
cmpb
cs
sti
pop
and
in
fsubrs
cmp
add
sub
mov
or
imul
jne
mov
lahf
shll
je
push
in
push
push
mov
or
mov
call
mov
and
lea
test
and
out
lar
push
clc
push
nop
out
loope
mov
call
mov
mov
scas
dec
loop
and
je
std
pop
je
fs
push
sub
xlat
mov
pop
or
mov
xorb
and
adc
mov
shlb
inc
repnz
add
std
push
pop
mov
daa
por
aam
add
in
or
stc
xor
adc
cmp
add
nop
loop
fmul
out
mov
jecxz
push
aam
dec
rorl
pop
insl
mov
insb
mov
jmp
aam
jno
jne
lahf
sub
dec
mov
push
mov
sbb
dec
push
push
mov
mov
or
ret
cmp
pop
out
out
xchg
xchg
pop
mov
inc
pop
icebp
cmp
jne
mov
mov
xchg
lret
pop
pop
sub
mov
sub
xchg
push
adc
out
lods
aam
mov
cli
fcompl
test
fcomps
shrb
popf
inc
jo
rolb
shlb
add
push
aas
pop
cmp
lds
rcrb
jmp
push
mov
dec
dec
stos
jbe
xor
loopne
sbb
test
xchg
lock
inc
mov
clc
or
add
pushf
mov
mov
mov
xor
inc
cld
push
es
inc
and
adc
xchg
mov
pop
test
aaa
cmc
mov
aam
or
pop
pop
rclb
ficompl
cli
add
mov
js
sbb
xor
rol
mov
or
fsubs
icebp
add
pop
push
outsl
or
inc
cmp
mov
dec
dec
mov
jecxz
pusha
and
add
ljmp
mov
xchg
xor
xchg
frstor
fbld
or
push
push
or
dec
int3
mov
ljmp
pop
pop
ja
pusha
lods
adc
lahf
mov
enter
mov
rol
mov
xor
dec
addr16
adc
enter
inc
mov
and
lods
inc
aad
push
xchg
mov
movsl
and
enter
push
push
mov
sbb
test
clc
sbb
cltd
arpl
adc
fiadds
sbb
lock
jae
mov
and
imul
je
lock
mov
ret
lods
lds
pop
das
sti
fdivrs
pop
or
mov
dec
lock
pushl
pop
cmp
cmc
xchg
and
and
int3
aam
aas
xor
popf
sbb
dec
cli
jmp
cmp
je
enter
cmp
inc
jno
inc
into
test
adc
xor
adc
and
lea
dec
cmp
in
inc
aam
inc
lock
or
loopne
std
or
dec
inc
inc
jmp
or
cltd
int3
cmc
mov
or
fidivl
add
cmp
lds
daa
das
inc
add
adc
fwait
or
pop
ja
jl
jmp
sbb
test
push
and
add
push
and
lea
add
scas
loopne
xchg
lcall
or
aaa
mov
jmp
mov
arpl
pop
repz
jmp
or
jl
pop
cmc
stos
pusha
test
and
xchg
movb
test
shlb
in
push
lock
loop
adc
lret
xor
xchg
push
stos
or
sbb
cs
cmp
add
xor
add
mov
push
xor
inc
add
xor
pop
xor
fldenv
mov
clc
xchg
pusha
push
adc
pop
stos
push
or
ds
jl
sti
pop
orb
sbbb
addb
or
jle
fmull
pop
hlt
mov
loopne
xor
mov
push
add
or
sti
movsb
xchg
push
sahf
outsl
pop
mov
ja
out
pusha
mov
movsl
adc
pop
pop
and
cwtl
cmpsb
mov
xchg
pop
outsb
pop
dec
or
cmp
lods
stos
mov
lcall
ret
fisttpll
icebp
adc
ret
nop
push
insl
pop
shlb
or
cs
js
push
push
mov
pop
sbb
and
test
sbb
outsl
ljmp
ret
dec
hlt
cmpsl
ret
add
lahf
jecxz
add
fistpl
pusha
add
push
sarb
inc
cmc
dec
xor
into
push
inc
cmpsl
pop
add
lea
je
aam
pop
add
push
xchg
sub
clc
test
mov
jo
mov
stos
les
call
int3
lods
pop
cmpsb
and
dec
cmp
lods
lea
adc
test
adc
sbbl
push
mov
mov
push
mov
push
es
and
or
pushf
rcrb
in
mov
mulb
adc
cmp
mov
movsl
jae
js
fsubl
rcrl
pop
test
out
mov
sub
shll
xchg
push
mov
fmuls
arpl
neg
push
faddl
sub
test
dec
or
pushl
pop
mov
je
or
loop
sbbb
and
lea
insb
mov
scas
push
fcoml
les
bound
jp
daa
sub
or
and
pop
push
mov
in
daa
add
mov
arpl
sti
xor
je
ret
add
loope
outsb
ja
mov
sub
inc
loop
push
cs
pop
das
lret
or
test
add
add
rorb
mov
aas
and
movl
inc
jl
add
sub
inc
addl
mov
or
mov
and
xorl
leave
add
inc
in
popa
cmp
mov
and
mov
xchg
push
enter
push
jb
or
jo
cmp
mov
jp
jns
pop
pop
out
outsb
mov
mov
pop
push
jl
mov
or
mov
cmp
out
inc
jb
xchg
mov
add
imul
mov
mov
bound
or
inc
hlt
pop
hlt
or
lea
dec
jno
imul
mov
jge
cmp
addb
enter
jmp
hlt
mov
dec
fnstsw
cmp
mov
in
sbb
cld
jo
push
sub
mov
or
scas
xor
arpl
mov
test
jl
inc
add
cmp
incb
je
or
push
mov
push
cmp
jb
dec
xor
cmp
push
xchg
or
outsb
mov
pop
movsb
inc
dec
cld
sub
jmp
inc
dec
jne
dec
movsl
mov
lahf
mov
or
jp
cmp
inc
fdivrl
mov
mov
push
shrb
sub
sbb
call
mov
jmp
test
mov
push
add
mov
fildl
movsl
mov
outsb
into
lea
add
mov
lea
arpl
add
aas
clc
lods
repnz
jbe
add
je
jne
jo
push
push
or
sbb
js
jmp
outsb
loopne
ficoms
call
pop
add
scas
xor
mov
adc
or
jge
mov
ret
sbb
ret
and
aaa
dec
sub
xchg
pop
adc
adc
mov
xchg
ret
push
sbb
add
sub
or
dec
mov
xchg
and
cmp
cmp
and
fs
mov
inc
or
clc
movsb
and
mov
xor
inc
lahf
pop
loopne
xchg
test
cmpsl
test
xchg
push
lea
js
adc
mov
in
loope
mov
ds
in
imul
inc
jbe
push
sarb
push
pop
bound
das
ret
sbb
cwtl
inc
or
pusha
cmp
mulb
xchg
and
push
pop
cmpsb
xchg
and
add
add
xlat
mov
repz
mov
rep
aad
mov
lock
and
popa
xchg
daa
push
cmpsl
lea
sti
cmpsl
add
push
ljmp
pusha
sub
icebp
add
add
push
push
jo
ss
mov
add
test
pop
dec
jl
mov
sub
ja
or
iret
data16
addb
xchg
cmp
mov
pop
sub
and
xor
dec
loopne
cltd
gs
sbb
shlb
lret
adc
cmpl
shl
cmpsl
pushf
sbb
pusha
daa
sbb
ss
cmp
std
push
add
inc
add
jle
pop
cs
enter
lds
inc
cltd
xchg
imul
adc
into
test
push
add
ret
hlt
mov
jecxz
scas
mov
test
ja
pop
mov
push
rcrl
mov
xor
mov
aaa
mov
push
adc
add
pop
and
xlat
les
sar
sub
push
test
adc
popl
dec
hlt
mov
mov
xchg
sbb
pop
rol
sbb
nop
adc
pop
addb
add
add
add
jno
fsubrl
daa
lods
xor
or
add
cmp
aaa
lds
pop
int3
mov
sbb
sbb
add
mov
inc
adc
and
push
bound
push
or
mov
xchg
lock
push
js
push
lcall
inc
test
aaa
add
call
popa
add
push
dec
scas
jle
ljmp
sub
add
mov
add
cwtl
push
xor
add
lods
push
and
sub
out
push
push
mov
jp
pop
sete
iret
sarb
fs
add
mov
or
push
mov
fdivrp
mov
jecxz,pn
push
dec
and
les
mov
popf
adc
xor
push
add
cmp
pop
sbb
stos
pop
and
mov
push
pop
xor
test
mov
add
push
inc
push
add
test
lea
or
shlb
mov
popf
scas
mov
push
push
mov
ficompl
jbe
adc
or
add
jbe
rorb
test
push
fbstp
cmpl
jmp
mov
test
lret
cli
xlat
xor
mov
push
stos
outsb
addl
adc
in
adc
and
jle
mov
test
add
adc
pop
add
adc
push
push
push
les
aam
sahf
fwait
shlb
stos
sub
add
add
in
adc
xchg
xor
xor
ja
test
shrb
xor
push
sub
lea
dec
aam
mov
js
ret
adc
out
or
lods
adc
or
push
mov
mov
jnp
add
and
adc
inc
movb
xor
nop
mov
add
pop
subb
add
push
mov
test
rolb
adc
xchg
adc
mov
sub
jecxz
aam
data16
andb
mov
add
mov
mov
and
or
dec
shl
addb
cmpl
jle
jge
mov
push
lret
sbb
jo
mov
jnp
mov
push
sub
ret
gs
and
or
call
add
aaa
add
movl
lcall
movsb
cmpsb
imul
stos
loop
xchg
jae
dec
in
out
cmp
mov
rorb
xor
pushf
test
int3
ljmp
mov
lods
sbb
push
jmp
mov
lods
mov
mov
fadds
xchg
dec
repnz
add
jo
pop
pop
mov
push
nop
insl
jge
dec
std
pop
clc
mov
test
inc
or
mov
inc
dec
loope
jmp
and
or
test
xlat
mov
movsl
test
movsb
mov
mov
bound
jne
orl
arpl
adc
fstps
fadds
mov
and
push
pop
cld
push
aam
ret
and
sbb
push
movsb
adc
push
mov
adc
mov
xlat
inc
call
ror
roll
jno
and
mov
adc
and
or
inc
daa
adc
adcb
xor
test
or
and
xchg
ret
mov
sbb
shrl
cmpsb
push
call
flds
popf
xchg
push
adc
out
push
loopne
mov
or
push
pop
xor
add
push
cmp
clc
xor
xor
xor
dec
nop
pavgw
mov
add
ret
jbe
jbe
fsubs
les
and
push
or
ret
xchg
ficoml
mov
pop
and
into
ret
xlat
prefetcht1
bound
ljmp
aam
adc
xorps
fmuls
insl
aas
jg
adc
aaa
pop
jg
inc
or
mov
add
rcr
mov
adcb
jp
les
rorl
xchg
xor
call
je
pop
push
rcrb
push
adc
or
lea
arpl
les
fimuls
add
movsb
loopne
lcall
add
rcrl
loop
ret
push
or
mov
lock
and
lods
mov
adc
push
jne
sbb
push
add
or
push
in
adc
loopne
inc
sub
xor
bswap
push
push
pop
adc
xor
test
mov
sub
test
jle
das
add
loopne
incb
jl,pt
add
and
test
or
daa
shr
mov
fs
adc
xchg
movsl
jg
in
cs
jg
add
push
cmpsb
adc
jge
cmp
inc
dec
je,pt
or
jecxz
push
movb
or
dec
jno
pop
sbb
or
and
add
pop
inc
sbb
push
bound
int
sub
es
call
push
ds
or
sbb
dec
enter
pusha
inc
dec
fildl
add
push
fldenv
cmp
aaa
jl
and
adc
arpl
adc
cmp
jne
out
mov
inc
mov
inc
jo
out
mov
inc
add
and
push
sub
mov
subl
cmc
add
sub
add
push
out
sub
pop
sub
rol
insl
add
notb
inc
mov
jmp
sub
inc
fiaddl
push
xchg
inc
push
push
add
hlt
pop
lods
rcrl
inc
jns
insb
sbb
fs
xor
clts
mov
cmc
or
out
popf
fwait
or
insb
sbb
fnstenv
int
roll
jmp
sub
inc
shlb
std
fistps
push
add
orb
rol
ret
mov
sbb
fbstp
sbb
mov
test
sub
insl
shll
nop
dec
inc
lods
mov
push
mov
ds
jne
inc
jecxz
ret
sub
test
or
jmp
mov
jle
pop
cmpl
push
mov
jmp
dec
mov
iret
xchg
ret
dec
xchg
or
aad
and
popa
adc
pushl
push
and
add
frstor
push
push
jle
jecxz
or
xchg
cltd
decb
shl
rolb
xlat
nop
add
shr
aas
dec
and
je
aas
dec
inc
add
aas
dec
loopne
push
inc
mov
loopne
sarb
cmp
lock
shlb
pop
or
lret
sub
je
cmpsl
pop
jo
push
add
sbb
je
sbb
bound
push
push
inc
inc
sbb
xor
les
inc
adc
xor
incl
jmp
xor
or
add
sahf
sbb
int
dec
jb
addb
xchg
or
or
das
cltd
jb
xchg
add
es
inc
dec
adc
enter
enter
rol
jno
cmp
ret
and
movsl
sbb
xchg
sbb
mov
mov
aam
xor
ret
xor
push
sti
stos
xorb
dec
mov
les
jl
cmovb
into
ja
push
invd
iret
rorl
adc
mov
fildll
push
cmp
xor
lret
adc
sub
popa
add
jne
sub
addr16
inc
xorl
out
adc
lods
dec
call
not
decb
mov
dec
dec
dec
push
push
daa
xor
aaa
xor
sbb
add
cs
sub
push
dec
cmpsl
icebp
sbb
fadd
aas
aaa
adcl
push
mov
mov
pop
loopne
cmp
mov
iret
test
roll
cmp
icebp
mov
popa
iret
subl
test
cmp
adc
push
popa
xchg
push
add
out
pop
dec
or
aaa
sub
test
sbb
and
inc
adcl
inc
sarb
leave
and
xor
add
jl
mov
inc
and
popf
mov
js
lahf
icebp
sbb
fildll
push
add
mov
lea
xchg
shrb
pop
dec
xor
pop
or
push
mov
add
add
ljmp
adc
add
push
xchg
inc
enter
shrl
fstpt
sbb
cmp
inc
nop
ja
imul
lods
sarl
lcall
or
push
out
sbb
push
mov
and
adc
sbb
pop
aas
dec
shrl
push
mov
xor
jp
mov
cli
and
sbb
pop
clc
push
and
cmp
cmp
cwtl
in
icebp
or
lock
sbb
movsl
out
repnz
roll
pusha
aam
mov
inc
ljmp
push
or
rorl
mov
mov
test
add
fimuls
adc
jg
test
jle
test
xor
fbstp
mov
cmpsb
cmp
call
sbbl
outsb
and
sub
not
pop
clc
sbb
addr16
xor
add
rcrl
add
inc
aas
into
lds
in
shll
filds
out
aam
inc
add
enter
mov
scas
push
rol
push
or
sub
or
dec
fldenv
and
mov
fdivs
push
sub
pop
jbe
test
push
fs
loopne
scas
sbb
push
pop
lcall
movsl
xchg
sbb
gs
outsl
insl
jo
outsb
push
and
loopne
outsb
je
pop
cmp
dec
push
fcom
dec
mov
cmovns
and
add
add
aam
orb
insb
jo
pop
aam
add
and
add
adc
imul
pop
pop
xor
pushf
or
xchg
leave
mov
add
push
or
adc
xor
sbb
jg
movsl
add
pop
jnp
testb
adc
and
push
jg
rsqrtps
fdivr
out
aad
aaa
mov
not
pop
call
ret
sub
shrb
pop
scas
mov
inc
xlat
inc
dec
les
adc
inc
push
mov
push
jp
pop
or
add
sub
pop
cmp
add
addr16
adc
test
ljmp
insl
pop
aaa
orb
pop
inc
arpl
clc
cmpl
in
mov
imul
jns
xchg
or
mov
neg
ficoml
cld
insb
gs
imul
cmp
fwait
push
out
lods
add
jns
push
pop
pop
nop
push
push
or
mov
inc
popa
and
add
add
rclb
and
test
push
cmp
pusha
mov
arpl
std
scas
sub
fdivs
cmpb
je
sub
adc
or
test
jmp
inc
es
adc
mov
add
lds
or
add
jae
mov
fnstsw
clc
test
xor
push
xor
movl
and
jecxz
mov
mov
and
xchg
pop
dec
nop
int3
cmp
or
je
jae
or
enter
jae
sub
fcoml
insb
jbe
or
inc
jge
mov
gs
ss
pop
sahf
cmpl
mov
inc
jmp
add
fnstcw
pop
or
mov
adc
rol
add
pop
jo
jge
and
mov
jbe
cld
addl
mov
pop
push
dec
bound
sarl
add
je
les
mov
and
add
call
call
nop
fsubr
push
out
imul
gs
loopne
or
cs
ja
xor
or
rcr
push
pop
andb
cld
daa
andps
add
add
sub
lock
fmuls
inc
mov
pop
lret
add
push
jne
dec
popa
js
dec
or
addr16
out
xchg
cmp
icebp
movsl
out
pusha
fstps
imul
dec
and
leave
xchg
rorb
movsb
xchg
mov
mov
outsl
orl
cmpb
ficoml
or
pop
insb
pushf
pop
mov
call
lcall
lock
sbb
and
pop
sub
xchg
sub
add
lods
fcoms
subl
divb
addr16
and
and
pop
loope
call
lea
and
and
cmp
loopne
fisubrs
fcomp
or
push
xlat
jle
ds
inc
mov
ss
ret
xorb
dec
hlt
mov
mov
add
and
inc
bound
inc
inc
xor
push
xor
sub
sbb
or
mov
pop
pushf
dec
mov
xor
add
or
xorl
js
decl
fimull
add
pushl
add
mov
repnz
data16
sarb
inc
shll
push
jne
mov
cmpsl
std
push
or
or
movl
stos
push
jo
add
and
dec
or
sar
cmp
pop
je
mov
jo
push
mov
inc
inc
sbb
xchg
push
lret
pop
in
add
pop
cmp
dec
mov
dec
lock
pusha
add
mov
adc
add
cmp
mov
jmp
mov
int
cmp
mov
icebp
jno
dec
mov
xor
clc
loop
aaa
xor
jo
dec
call
insb
test
jl
cmp
rol
mov
daa
push
push
add
icebp
pop
adc
mov
jae
inc
sbb
xchg
call
push
pusha
push
xor
leave
lods
sbb
xchg
lock
push
mov
hlt
adc
pop
pop
pop
dec
push
nop
movb
mov
xor
push
mov
repz
lods
pop
xorl
xchg
ds
add
sbb
mov
aad
loopne
adc
cmp
push
sub
iret
mov
push
xor
loop
lods
filds
dec
inc
adc
sbb
and
jnp
push
rcr
arpl
dec
popa
lods
addl
pop
sub
imul
test
fcomp
pop
pop
and
push
pop
pop
mov
or
out
or
popf
out
dec
imul
fdivl
js
sbb
pop
add
mov
dec
push
out
cwtl
mov
in
inc
cwtl
iret
loope
adc
jne
add
bound
shll
sub
add
add
sar
inc
cmp
pop
jb
cmpb
pop
sbb
aam
lock
or
push
sbb
mov
cltd
mov
dec
pop
aad
aad
sbb
xchg
ja
cmpb
lret
pop
fnstenv
add
inc
bound
loopne
inc
cld
movb
add
ss
and
or
fnstenv
movsb
cmc
sbb
xchg
mov
popa
in
aas
push
push
add
mov
cld
dec
inc
out
in
add
in
dec
and
pop
inc
mov
rcrb
popa
adc
mov
not
mov
movsb
pop
popf
and
or
mov
imul
lea
push
cmpsb
xchg
jmp
push
mov
fiadds
adc
loopne
cmp
pop
lock
push
mull
loop
dec
adc
lret
pop
test
xchg
ret
push
dec
push
adc
jo
push
ret
mov
and
sbb
sahf
aam
popa
fstpt
jne
cmpb
sub
out
sub
mov
or
inc
adc
or
add
push
pop
xchg
bound
xor
dec
movl
mov
in
mov
sti
aad
xor
dec
xlat
jns
in
mov
xchg
mov
aam
scas
cmp
or
fsubl
add
mov
jo
jbe
mov
or
addr16
cmp
push
lea
enter
std
cmp
mov
seto
addr16
mov
or
jb
sbb
push
outsl
and
repz
clc
ja
adcb
inc
xchg
add
inc
xor
jae
pop
add
or
adc
outsb
mov
pop
push
mov
sbb
leave
loope
cmp
out
into
pop
and
pop
cwtl
pop
jge
push
cld
cmpb
pop
xchg
test
add
mov
aam
movsb
ret
push
dec
mov
jecxz
lock
cli
add
rclb
insb
pop
push
mov
in
notl
push
rorl
xor
jmp
sub
fdivrs
les
xlat
adcb
xchg
fisubs
jne
push
pop
xor
fwait
cmp
daa
push
cmpsb
adc
aad
dec
mov
loop
adc
cmp
je
dec
add
jmp
mov
push
sbb
les
inc
and
popa
outsb
pop
popf
push
and
sub
adc
lea
push
lea
popa
xchg
stc
push
xor
sub
sub
dec
pop
push
nop
lock
jl
add
mov
lea
jo
fbstp
pop
jl
sbb
sbb
loopne
js
rcl
iret
adcl
in
std
inc
in
pop
push
sub
push
push
add
dec
adc
add
jb
sbb
sub
cltd
or
sbb
mov
pop
adc
pop
call
dec
into
cli
pop
subb
jg
dec
mov
pop
insl
sbb
neg
je
mov
add
inc
jne
pusha
and
push
ds
inc
fdivs
bound
or
leave
xchg
xabort
mov
ret
inc
add
pop
sbb
xor
and
mov
pop
mov
push
adc
movsl
or
adc
push
xchg
test
push
dec
cmp
xor
cmp
je
sub
jne
push
inc
xor
flds
mov
inc
out
decl
movsb
push
mov
hlt
out
add
daa
daa
daa
popf
lcall
daa
daa
daa
xlat
fcomp
daa
daa
daa
daa
fcmovu
daa
daa
daa
daa
rol
daa
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
lret
int
daa
daa
daa
into
iret
mov
rcrb
xlat
call
dec
adc
test
cli
xchg
jno
es
jmp
dec
call
ljmp
push
nop
jnp
movsl
int3
cwtl
iret
or
and
xchg
pop
bound
cld
push
je
pop
into
add
arpl
call
push
push
gs
jns
or
pop
sbb
xor
es
fs
and
loop
adc
push
xchg
adc
ljmp
mov
cmp
daa
jne
mov
fdivrs
dec
mov
ja
or
and
xor
pop
inc
rolb
loopne
push
out
jne
cmp
pop
mov
push
sbb
hlt
aam
sbb
sub
sbb
cmp
rcrb
into
mov
add
nop
adc
jo
addl
filds
leave
jb
inc
adc
fchs
push
cld
mov
sub
adc
adc
jb
lcall
lea
test
loopne
or
mov
ja
add
ljmp
adc
sarb
jae
push
orb
js
cmp
in
rolb
xchg
mov
xlat
and
out
push
cmpsl
insl
push
inc
ret
imul
mov
andb
outsl
xor
add
push
sub
pop
mov
cmp
sub
inc
in
cld
out
rolb
push
adc
sbb
dec
jmp
jl
and
iret
mov
loope
add
push
jmp
popa
mov
es
mov
enter
xor
das
mov
xchg
inc
in
lret
sub
inc
dec
or
sbb
dec
add
sub
popa
fstps
add
inc
hlt
or
lea
mov
shlb
shlb
sub
dec
inc
push
sub
cmp
xor
sub
in
mov
mov
movsl
adc
in
mov
adc
dec
shll
add
push
xchg
out
and
in
jle,pn
sub
rol
lahf
jmp
push
add
aas
and
jb
ja
jg
and
mov
and
jb
ret
nop
sbb
fiaddl
mov
mov
push
adc
push
jle
push
shrb
adc
xlat
andl
in
xchg
add
xchg
aas
adc
adc
incl
outsl
add
lock
push
dec
outsb
inc
jne
scas
adc
rorl
outsb
in
xlat
insb
in
sar
push
push
outsl
outsl
dec
jne
rcll
or
loop
and
inc
xor
shr
inc
add
add
add
adc
movsl
sub
lock
push
pushf
mov
daa
add
adc
setl
mov
sbb
dec
clc
pop
pop
out
xor
js
out
and
mov
cmpl
test
mov
leave
mov
jmp
mov
mov
clc
push
test
sub
push
pop
lcall
adcb
add
nop
xor
sub
xchg
shl
sbb
mov
push
mov
clc
cmpsb
xchg
sub
xlat
inc
xor
add
ret
test
pop
and
pop
push
fistl
das
das
repz
cmp
add
adc
jne
jmp
xor
dec
aam
and
jl
iret
push
in
sbb
cmpsl
cmp
push
inc
sbb
or
data16
adc
xchg
addl
cmp
int
or
adc
test
jle
jg
inc
adc
ljmp
xchg
mov
je
clc
dec
pop
adc
xor
xchg
push
in
cld
fisubl
cmp
je
or
rolb
rolb
clc
sbb
rclb
jne
mov
push
xor
jmp
clc
daa
cltd
push
push
fimull
les
bound
adc
enter
xorb
add
jo
pop
pop
enter
clc
add
add
mov
jmp
xor
gs
rcr
cmp
sbb
pop
test
jge
push
popf
ret
cmp
inc
sbb
orl
clc
add
cmp
pop
sarl
pop
pop
add
lcall
leave
xchg
mov
adc
hlt
pop
repnz
push
or
xor
sbb
loop
mov
pop
iret
pop
push
mov
cli
ljmp
push
inc
cwtl
inc
mov
dec
push
loope
sbb
add
mov
mov
mov
repnz
jecxz
repnz
mov
sbb
jl
sbb
jmp
add
or
sbb
jae
call
jmp
or
dec
mov
nop
fiadds
into
sahf
ss
push
sbb
jno
cmp
inc
adc
push
cwtl
cmc
punpcklbw
push
lea
jo
mov
adc
dec
popa
push
testb
xchg
sub
adc
xchg
ss
cmp
test
aaa
adc
inc
sub
lea
fadds
loopne
push
xchg
mov
addb
rcll
jno
rcrl
or
das
push
in
popa
xchg
repz
arpl
mov
mov
adc
addl
push
fdivl
mov
mov
push
sub
push
fmull
pop
pop
neg
mov
sub
rclb
std
xchg
push
movb
mov
dec
or
int3
lcall
loopne
inc
test
push
add
xchg
es
mov
clc
mov
pop
arpl
push
fsubl
or
movb
mov
ret
add
adc
rolb
pop
adc
lcall
jmp
sub
jl
ficomps
jmp
in
test
fadds
fsts
arpl
pop
cltd
pop
lock
mov
mov
add
mov
clc
sub
sbb
je
shrb
add
sbb
sbb
push
stos
mov
xchg
or
dec
in
test
rclb
push
cmc
cmc
icebp
fcompl
pusha
push
mov
loope
inc
shrb
fsts
std
inc
movb
pop
inc
or
mov
pop
push
out
nop
push
adc
jg
notl
addl
or
enter
push
aas
fs
inc
ss
jg
mov
add
lea
mov
sarb
dec
fdivs
cmp
pop
xor
add
mov
push
addr16
add
dec
push
lea
loope
mov
jl
pop
aad
add
mov
cmp
xor
or
icebp
jle
add
mov
mov
outsb
add
push
cmc
cmp
dec
add
pop
xor
cmp
jl
lret
mov
xlat
mov
inc
push
xor
fadds
ds
fdiv
sbb
std
inc
ret
jb
gs
inc
imul
popa
jb
imul
inc
ret
mov
gs
dec
outsl
je
data16
js
popa
nop
add
das
outsb
outsb
arpl
pop
adc
cmp
jle
clc
dec
test
mov
insl
xor
add
inc
das
fsub
adc
jns
jae
push
loopne
js
jbe
cmovo
pop
and
adc
pop
testb
les
dec
cli
push
add
js
jg
push
lods
rcll
ret
cmp
pop
pop
insl
add
ror
scas
cmp
dec
clc
push
pushf
adc
ss
mov
adc
add
pop
in
outsb
cmpl
sub
aaa
xor
xchg
push
dec
pop
dec
add
add
gs
rcr
inc
pop
pop
inc
push
add
inc
inc
sub
mov
push
cmp
ljmp
dec
call
sti
xchg
mov
fbstp
xchg
jae
inc
aam
int
inc
inc
inc
mov
pop
mov
pop
sub
xor
inc
xchg
outsl
pusha
xor
push
lds
xlat
jo
push
cmpsl
xor
js
sbb
rclb
in
out
lock
cmp
inc
addb
sti
mov
loope
lock
jne
inc
test
mov
cwtl
xor
adc
sub
test
add
fdivs
mov
mov
inc
mov
aam
xor
mov
adc
std
mov
jne
add
addb
mov
call
addr16
push
add
in
jae
pop
adc
dec
cld
test
sti
dec
cmp
jne
add
add
inc
mov
mov
fisubs
and
and
sbb
gs
adc
in
cmp
test
mov
inc
insb
outsl
jae
jb
push
sbb
in
call
pop
or
pushf
outsl
jne
nop
inc
std
inc
rorb
inc
add
addps
dec
outsb
and
gs
outsb
addr16
inc
js
mov
mov
mov
pop
mov
jno
imul
adc
lahf
sbb
sbb
and
mov
and
mov
rolb
inc
push
pop
outsl
outsb
in
dec
add
sub
sub
push
pop
popa
xor
sbb
push
jns
gs
push
pop
add
jle
rorb
mov
xlat
or
test
das
dec
stos
jb
xor
inc
ret
outsb
jbe
fs
and
mov
jp
adcl
dec
xor
mov
adc
mov
mov
xchg
movsb
leave
inc
pop
les
je
add
cmp
je
and
mov
loopne
ds
out
push
push
dec
add
outsl
insb
or
out
cmp
push
adc
adc
xchg
jmp
xor
adc
nop
mov
mov
scas
mov
add
das
rcrl
mov
test
jb
mov
jns
popa
outsb
je
imul
nop
je
mov
stos
add
mov
aam
push
out
jl
imul
and
xchg
inc
dec
xor
cmp
addr16
add
adc
popw
or
movsb
xlat
fs
jb
sbb
push
or
stos
dec
mov
adc
addb
add
cmpl
imul
xor
jbe
iret
jl
xchg
popa
add
jno
std
xchg
or
shlb
mov
ret
shll
out
jne
push
inc
dec
xor
rorl
push
add
pop
daa
iret
inc
enter
mov
mov
cmp
xchg
adc
popa
insb
in
rcrl
sbb
lahf
and
dec
adc
inc
push
mov
insl
imul
es
in
and
sbb
cmpsb
arpl
lock
inc
lahf
add
or
and
jmp
in
in
and
fidivs
data16
gs
mov
lock
clc
pop
lds
js
adcb
or
ret
mov
push
popa
enter
cmp
jb
leave
mov
scas
cmp
jecxz
add
imul
rolb
jo
jne
loopne
mov
xlat
movsb
in
out
or
outsl
scas
and
or
add
xchg
add
push
mov
cwtl
pusha
into
pop
pop
mov
loope
dec
popa
jb
gs
aaa
mov
mov
fbstp
cmpsb
pusha
or
dec
push
pop
cmp
inc
xchg
int3
or
dec
push
xchg
inc
nop
or
fidivl
xor
push
push
jl
push
dec
pop
mov
sti
push
clc
sbb
adc
rolb
sub
sbb
pop
xchg
fimuls
mov
push
mov
sub
hlt
data16
insb
ss
nop
push
sbb
push
inc
push
dec
and
push
int
mov
push
and
mov
xchg
insb
push
pop
push
test
lock
je
lods
inc
pusha
mov
inc
ret
lock
xchg
add
dec
add
xor
ret
cmp
pop
or
push
or
pop
cmp
jecxz
test
imul
lret
decl
movsl
scas
add
pushf
mov
popf
mov
mov
int3
cltd
add
pop
shl
push
add
rolb
or
add
pop
dec
jne
mov
xor
orb
or
jae
cmp
ffree
pop
ljmp
clc
jbe
and
push
push
les
xor
push
or
sub
push
push
subl
movb
pop
xchg
mov
insb
aad
mov
int
xchg
out
pop
popaw
add
lods
mov
lret
push
push
fidivl
mov
push
xchg
jge
test
decb
in
mov
pushf
idivb
push
test
ljmp
mov
sti
or
mov
push
mov
addb
xor
dec
rorl
add
fs
jo
ret
push
std
lock
mov
sbb
lds
pop
cmpl
fsts
push
or
mov
dec
adc
jne
mov
add
push
enter
sbb
loope
mov
jg
test
mov
sub
jle
clc
cs
imul
jo
mov
sub
insl
in
adc
jnp
mov
adc
or
jo
xchg
out
or
or
mov
fdivs
in
xor
lea
lods
test
add
inc
cmpsl
or
in
addr16
dec
setno
and
push
mov
and
aam
push
fwait
js
fmull
or
je
cs
pop
mov
ljmp
mov
inc
pop
mov
mov
adc
jnp
enter
push
loopne
mov
xor
lock
fsts
mov
push
jno
sbb
push
enter
pop
and
pop
push
jg
pusha
adc
mov
imul
test
stos
in
inc
enter
pop
pop
ret
sub
popf
push
mov
adc
mov
ss
jmp
loop
imul
adcl
inc
cmpsb
fldenv
roll
stos
xchg
shrl
or
add
das
and
mov
xchg
xor
adc
or
cld
xlat
hlt
xor
add
mov
shrl
lock
sbb
sarb
outsb
pop
add
daa
pop
and
pop
fadds
and
xchg
add
xor
movb
clc
push
add
ljmp
mov
jne
mov
insb
inc
stc
enter
xchg
xchg
jns
aas
orl
in
sbb
xor
sbb
mov
cmp
cmpl
add
out
fwait
orl
sbb
inc
adc
xchg
adc
sub
lods
cmp
adc
je
mov
mov
dec
push
ret
lods
xor
in
add
dec
sbb
aas
lock
jbe
and
repz
push
repz
lock
cli
jns
scas
mov
pop
aaa
adcl
adc
rolb
pusha
fldl
push
iret
cmpsl
push
push
add
jo
pop
xchg
movsb
xchg
add
in
testl
or
xlat
addr16
pop
clc
mov
pop
or
mov
adc
mov
mov
or
lods
xorl
inc
mov
jg
lods
cmp
movb
repnz
inc
mov
inc
nopl
jle
jb
cmp
jle
mov
roll
jecxz
cmc
ja
ss
add
sub
jle
cmp
jle
rol
pop
push
in
mov
mov
xchg
aas
clc
cld
inc
clc
out
fs
sub
into
add
scas
xchg
lock
insb
lret
dec
stos
or
nop
outsl
cmp
call
xor
faddl
cmp
mov
adc
pop
inc
pop
mov
clc
sub
jne
dec
jl
jle
mov
inc
shrb
lods
push
ret
dec
add
gs
add
jmp
mov
rolb
mov
sbb
mov
add
rorl
int
outsl
mov
aas
cwtl
jne
sub
add
andb
aam
mov
cli
or
xchg
and
sar
repnz
inc
or
jmp
int
int
add
ret
jecxz
cmpsl
sbb
pop
pop
xchg
popa
repnz
ss
imul
and
pop
mov
pop
add
lret
jg
cmp
push
or
pop
jle
push
cld
jl
pop
or
xor
push
sub
ret
lret
lock
ja
pop
rcrb
jl
or
inc
and
add
add
push
add
stos
adc
xor
xchg
jae
jo
jnp
push
xor
out
sub
sbb
inc
sub
pop
pop
dec
stos
imul
imul
adc
xchg
mov
or
pop
lods
rolb
cmpb
add
or
popf
push
fadds
scas
jge
sub
sbb
sub
pop
add
pop
lods
clc
inc
adc
sbb
lds
sti
add
pslld
add
sbb
clc
xor
xor
jb
sbb
sbbb
clc
xor
mov
test
clc
lods
inc
jl
call
and
cs
adc
mov
xchg
call
cmp
adc
imul
sbb
pop
or
ja
jmp
push
jg
shlb
xchg
gs
rol
inc
loopne
and
jne
sbb
lea
dec
add
loop
cmp
inc
or
test
xchg
push
bnd
inc
pusha
clc
cmpsl
pshufw
fidivrs
jmp
push
add
mov
pop
pop
xchg
push
cmp
and
stos
sbb
add
push
push
ror
jg
or
je
aaa
inc
jne
xchg
ret
push
test
outsl
movb
xchg
test
call
inc
outsl
jb
pop
dec
fs
mov
add
inc
jae
gs
and
add
cmp
aaa
scas
pand
jg
sbb
rclb
jns
lahf
cmp
xchg
in
inc
sbb
addl
jne
pop
sbb
or
pop
jecxz
mov
dec
rorb
jno
push
nop
and
sbb
push
cli
rol
or
cmpb
enter
mov
adc
outsl
and
add
mov
mov
mov
call
lods
aas
xlat
pop
mov
lret
ret
and
push
cld
int3
lods
shlb
je
xchg
add
inc
jae
xchg
sub
or
jmp
loopne
push
loope
testl
push
push
dec
inc
add
in
sbb
xchg
movsb
ljmp
xor
cmp
movsl
add
mov
and
orl
add
jb
ljmp
push
in
push
ss
adc
pop
sub
pop
or
sub
mov
in
add
jmp
pop
push
cmp
out
loopne
jne
loopne
xlat
stos
and
or
cmpsl
cld
cmp
scas
imul
fisttpl
mov
mov
ss
adc
insl
or
push
mov
loope
es
cltd
sub
in
ror
sbb
and
xlat
add
cwtl
pop
and
sbb
test
adc
ret
movsl
mov
pusha
cwtl
mov
shl
insb
add
adcl
hlt
xlat
inc
and
push
sbb
sbb
sub
push
rcrb
adc
clc
imul
repz
xor
aas
scas
nop
jmp
or
adcl
jle
cmp
mov
arpl
and
aam
jne
push
jno
scas
sbb
mov
loopne,pt
ja
mov
scas
movsl
cmp
push
call
inc
loope
sti
outsl
adc
pop
pop
jae
jmp
or
add
mov
sub
icebp
fsubrs
rclb
push
add
aas
push
or
lea
sub
sbbl
xlat
mov
cli
push
iret
mov
and
loopne
ja
les
push
push
xor
cwtl
and
cmp
cld
mov
add
lea
push
sub
insl
dec
aaa
imulb
dec
xor
cmp
push
shrb
cmp
imul
lret
inc
dec
es
jle
or
shlb
pop
inc
xchg
push
xorb
test
test
jmp
adc
js
sbb
in
mov
inc
cmp
jno
orl
sbb
icebp
mov
mov
sub
and
jne
movsl
cmpsb
rclb
sti
inc
nop
movsl
popa
lret
add
fucomip
xor
ret
mov
inc
add
lock
add
js
lock
mov
cmp
jb
xlat
and
add
sub
jno
or
jge
jp
jbe
add
xchg
cli
aaa
sbb
and
pop
call
or
call
lock
inc
aaa
cld
sub
adc
inc
cmp
pop
int3
adc
dec
jg
pop
out
test
push
push
je
push
xor
or
or
ret
scas
pop
rolb
or
test
ret
sub
and
mov
or
cmp
and
xor
inc
in
add
jecxz
ds
cmpsb
cs
sub
or
and
cmp
cmp
cmp
jne
xor
add
ret
sti
cwtl
incb
xor
mov
pop
push
push
cld
cmp
jg
sar
lret
adc
cmp
add
sbb
aam
jecxz
pop
outsb
jmp
add
cmc
or
cmp
add
sahf
pushw
cmp
sarl
push
std
sbb
incl
xchg
mov
cmp
and
adc
pusha
popf
js
hlt
adc
adc
jle
push
adc
add
and
ret
nop
cs
pop
mov
mov
inc
popf
jo
rolb
test
test
loope
jmp
fsubrp
jmp
jle
mov
cmp
aas
fsubr
ds
dec
sub
push
jmp
jmp
dec
call
call
mov
jg
mov
push
andl
or
test
pop
sub
xor
scas
jle
xor
sbb
jmp
decl
push
lock
jns
je
cwtl
into
xor
mov
or
arpl
sbb
and
mov
add
cmpsl
xor
and
punpckhbw
cli
nop
sbb
shlb
sbb
jmp
sub
or
push
ja
push
mov
cli
lret
js
jmp
add
and
adc
add
mov
add
jecxz
mov
movsb
fadds
rcrb
jecxz
mov
push
loopne
cld
add
cmp
jl
xor
inc
sub
mov
addl
icebp
push
add
pop
in
mov
lods
dec
xor
gs
in
mov
paddsb
pop
call
lods
in
call
mov
test
enter
rcrb
and
pop
add
dec
rorb
inc
loopne
lret
jecxz
sbb
sub
mov
push
mov
push
sbbb
fistpl
and
fadds
dec
dec
bound
clc
cwtl
push
or
into
clc
mov
movb
pusha
movsb
int
movl
lock
jp
adc
int3
dec
pop
fcmovnb
adcl
adc
pop
lcall
ret
pop
xor
dec
jo
push
jo
adc
add
sbb
roll
xchg
int3
pop
push
es
incl
femms
pushf
xor
ss
loope
aaa
lock
fs
push
push
pop
lods
pop
lock
mov
and
xchg
mov
cmpsb
ffreep
xlat
inc
cmp
inc
push
add
pusha
in
dec
lods
push
in
pop
je
push
add
scas
jo
ds
sub
inc
fsubrs
add
inc
subl
negw
ss
and
push
shrb
push
jl
fadds
jl
add
out
cmp
sarl
adc
mov
pop
sbb
jae
outsl
insl
notl
pop
cmp
adc
add
dec
push
adc
ret
stc
adc
rcll
dec
decb
or
shrb
and
in
mov
xchg
xchg
andb
adc
or
shll
add
stos
icebp
sbb
divb
inc
sub
mov
jne
add
mov
leave
lea
dec
mov
inc
push
movsl
mov
lods
inc
insw
pop
mov
mov
mov
aaa
or
add
xchg
fdivs
call
das
test
out
mov
lods
out
jbe
jmp
ja
pop
lds
add
xor
aaa
lock
nop
imul
cwtl
out
enter
sbb
filds
dec
sub
nop
mov
cmp
dec
lcall
and
mov
pop
hlt
cltd
xor
fstpl
aas
cmp
sbb
icebp
sti
pop
aaa
pop
fwait
lahf
mov
shlb
call
xor
add
dec
sub
enter
sub
adc
mov
leave
mov
jne
mov
xchg
outsl
test
jbe
push
lods
or
pop
jb
scas
sbb
pop
leave
into
scas
lds
xor
and
mov
sub
or
push
push
adc
sub
fcomps
pop
xor
add
sub
inc
mov
cltd
in
and
push
nop
xor
cmp
push
mov
or
inc
inc
daa
pop
dec
nop
inc
pusha
and
or
push
and
sbb
dec
sub
inc
push
aas
mov
shlb
xor
rsm
push
pusha
pusha
cmp
movsl
jg
adc
add
insb
imul
rolb
out
ficoml
push
push
cmp
ret
daa
das
shlb
mov
cs
rorb
xor
jle
clc
int
sti
fs
cmp
cwtl
movsl
xor
push
pushf
mov
xlat
daa
in
and
aas
sub
dec
pusha
daa
push
sbb
mov
jae
jmp
mov
push
pushl
lcall
sti
push
ret
xor
pop
sbb
dec
call
pop
or
push
outsl
jl
jle
hlt
xor
aas
cmp
jge
inc
push
jl
mov
rclb
ret
lock
test
add
out
lahf
cmp
xor
in
push
mov
sbb
test
aas
cmp
rclb
hlt
jne
jmp
xor
add
inc
push
inc
sub
jne
jno
roll
imul
jbe
loope
imul
rol
lock
jmp
push
jecxz
mov
pusha
cmp
push
dec
pusha
in
xor
cwtl
push
popa
pusha
rol
cmp
push
sub
mov
das
lds
imul
scas
sub
mov
pop
push
arpl
add
popf
pop
and
ret
xor
sbb
mov
ja
pusha
cmpsl
popa
dec
or
cmpsl
jg
je
cmp
pop
outsb
mov
push
dec
fisttps
aas
jle
in
popa
dec
inc
lods
mov
or
lahf
xchg
sub
sub
inc
inc
add
cs
mov
hlt
sbb
sub
inc
mov
or
lock
gs
out
inc
test
jo
sbb
fsts
in
or
iret
ds
arpl
pop
test
cmp
sbb
push
ja
pop
rolb
pushf
and
scas
mov
mov
adc
out
es
inc
inc
jb
mov
mov
sbb
shlb
mov
push
jl
cmp
push
mov
pushf
xchg
inc
out
mov
xchg
test
add
mov
jo
lods
fcomi
fidivrs
push
cs
lock
pop
push
int3
cmp
or
mov
cmp
cmp
ret
bound
pop
add
enter
mov
psubsw
xor
adc
jge
sbb
dec
int
inc
aas
pop
mov
push
stos
xor
mov
mov
ret
xor
sbb
aam
cmp
dec
push
cld
and
push
and
dec
iret
cmp
sbb
lahf
sub
add
adc
or
xor
pop
add
movsb
clc
les
lret
and
sbb
push
mov
mov
cmpsl
sbb
xor
inc
mov
mov
in
cmp
sbb
fisttpll
test
decl
add
xor
nop
cmp
sub
pop
ss
pop
sbb
pop
and
or
xchg
gs
mov
push
fstpl
add
add
mov
or
loopne
adc
xchg
jp
inc
gs
gs
add
adc
pop
jb
imul
and
movl
les
mov
or
subb
sbb
sbb
add
push
adc
sti
mov
cmc
push
jb
mov
ds
std
stc
or
aam
xor
add
jne
pop
xchg
adc
or
loopne
scas
dec
sub
add
in
mov
or
movb
add
push
lods
add
pop
jg
cld
add
inc
lcall
pop
mov
cwtl
shll
movsl
nop
sbb
mov
shll
scas
jae
mov
or
sbbl
jle
inc
inc
cwtl
leave
fisttpl
test
jne
lds
shrl
sbb
xchg
pop
js
lods
test
test
and
mov
lock
cmp
jle
or
mov
and
nop
add
mov
mov
xchg
divb
jo
mov
xor
xor
sub
es
insb
or
aam
jl
sbbb
add
scas
push
and
mov
rolb
cmpsb
jl
add
rolb
xchg
sbb
or
int3
adc
testl
add
push
pushl
ret
mov
push
inc
cmpsl
pop
sub
add
pop
addr16
inc
outsb
xchg
aas
shlb
sar
push
ret
test
popf
dec
cmp
movsb
cmp
and
jne
push
push
lret
add
fsub
adcl
xchg
mov
test
je
mov
fimull
mov
dec
call
lea
adc
repz
mov
clc
pushl
xchg
cmp
std
xor
mov
mov
outsl
js
push
sbb
add
lods
lea
or
sbb
dec
xchg
mov
mov
pop
jmp
fcoml
aas
fs
jecxz
push
jno
mov
sub
or
or
cld
mov
adc
sti
icebp
and
cmpb
xchg
add
mov
outsb
in
outsl
jmp
loope
cmc
outsl
out
outsl
push
rcl
mov
cwtl
movb
jno
dec
cmp
push
ficoms
dec
sub
jmp
xchg
fstpl
xlat
je
iret
xchg
leave
xchg
rcrb
pop
xchg
mov
xchg
imul
stos
xchg
pop
cs
cs
movsl
nop
xchg
pop
cs
es
lahf
nop
xchg
nop
movb
movsb
in
and
xlat
mov
loopne
mov
pop
mov
and
mov
cmpb
test
pop
and
clc
gs
push
cmp
imul
xor
adc
movsl
cmp
daa
movl
pushf
push
or
xor
jnp
sub
inc
or
cmp
add
xor
xor
pop
mov
cltd
cmp
cltd
mov
out
test
or
dec
cwtl
sub
ja
clc
add
adc
add
xorl
cld
stos
inc
cmp
stos
cmp
mov
inc
mov
pop
test
adc
inc
or
xchg
jp
inc
sbb
and
dec
inc
mov
inc
cli
cs
jo
insb
jle
mov
movsb
lret
add
je
jmp
add
les
jno
add
lock
pop
push
push
push
fsubr
dec
push
jne
fildl
ss
movzwl
xchg
rcl
cmp
loopne
aaa
sub
inc
pop
or
pop
jl
cld
lahf
ljmp
dec
jne
and
shlb
add
cld
sub
jmp
and
dec
lock
aaa
xor
nop
xchg
xchg
add
pop
add
push
rcrb
adc
lock
hlt
and
cmp
movb
mov
outsl
mov
xor
xchg
and
jg
mov
add
test
add
das
mov
adc
sti
mov
add
add
out
or
sub
pop
sub
in
mov
dec
stos
adc
test
out
jg
xchg
push
pushf
cmc
xchg
inc
call
jl
jl
rcl
xchg
push
sbb
test
pushl
orb
mov
enter
and
lock
add
dec
mov
jge
mov
and
repz
aam
repz
int
outsb
mov
sub
or
adc
or
aas
lcall
inc
test
mov
or
mov
xchg
wrmsr
js
inc
and
or
pop
pop
in
inc
cmp
ja
mov
add
cmpb
push
mov
fimuls
shll
inc
jno
mov
mov
jp
test
clc
mov
pusha
cs
mov
mov
add
dec
jne
arpl
xor
hlt
repz
ret
cmpsl
xchg
cs
and
sbb
lods
shlb
pop
sub
mov
inc
and
push
xor
lret
inc
cmp
repz
xor
das
dec
mov
je
js
fnstsw
jl
add
add
inc
inc
idivb
adc
mov
cmp
aam
cmpb
jmp
dec
bound
adc
or
sbb
push
ja
inc
cmp
mov
je
ja
add
test
xchg
je,pt
cmp
dec
mov
or
xchg
or
dec
cmpsb
dec
push
dec
ss
daa
add
aaa
dec
sub
adc
inc
push
clc
jg
ss
sub
hlt
or
lea
inc
and
pushf
adc
leave
or
bound
cmp
jb
xchg
pop
add
aad
popa
nop
add
inc
jo
sbb
mov
inc
inc
into
inc
push
iret
add
add
or
rclb
and
adc
dec
and
adc
and
and
fwait
cmp
adc
or
in
mov
icebp
dec
or
lods
push
andl
add
jmp
iret
dec
xchg
and
mov
jg
lods
test
adcb
pop
shll
or
or
ret
popf
inc
or
cmp
cmp
cmp
dec
or
mov
js
and
xchg
sbb
add
aam
rcll
xlat
sbb
and
add
ss
inc
pop
adc
dec
push
cmp
push
mov
add
mov
dec
cli
cmp
or
and
pop
push
inc
cmp
loopne
das
cmc
push
adc
inc
fwait
cmp
and
push
push
sbb
or
jo
sub
mov
loopne
aas
inc
or
sbb
pop
or
ret
push
loope
xor
inc
aaa
and
jmp
pop
incl
xchg
adc
jns
dec
inc
dec
push
push
gs
mov
mov
dec
scas
add
pop
cmc
sub
add
or
dec
outsl
cmp
adc
xor
arpl
popa
ret
adc
xor
mov
sahf
pushf
adc
mov
imul
lds
lods
fbld
les
and
scas
outsb
popa
insl
gs
cmp
jae
outsl
jb
lods
decb
jae
add
loope
rcl
add
dec
cmp
pop
aaa
sti
push
test
cwtl
push
out
push
int3
jo
repz
push
mov
arpl
aas
cmp
pop
arpl
pop
dec
outsb
outsw
jle
or
sbbl
cmp
mov
push
or
ret
add
adc
repz
sub
push
pop
xchg
and
push
fidivs
ret
dec
jae
pop
insb
lods
mov
or
jl
or
and
pop
add
shlb
cmp
jo
pop
xchg
div
xchg
pop
mov
pop
test
ja
testl
inc
xchg
test
mov
xor
call
loopne
cli
clc
sub
inc
lods
test
push
cmpsb
jo
jo
out
outsb
adc
sbb
pop
sub
pop
sbb
movsl
daa
mov
xchg
loopne
pop
sbb
cmp
add
or
mov
jecxz
push
mov
or
xchg
mov
insl
out
dec
call
push
adc
push
dec
sub
aam
daa
add
push
sub
add
push
or
in
je
sub
or
or
xor
push
add
add
mov
mov
movsb
mov
fistpl
clc
cmp
jmp
jbe
xor
sbb
outsb
sub
in
fsubl
sbb
inc
int3
mov
jae
in
rolb
fcomp
add
and
add
and
repnz
mov
cmp
nop
test
dec
loopew
lea
mov
pop
loope
les
add
ss
sub
dec
sarb
xor
mov
and
xor
jb
outsl
sbb
test
xor
cmc
dec
mov
es
adc
inc
repz
cmp
push
cmp
sbb
lods
movsl
arpl
shrb
aam
fcmove
sbbl
addb
fiaddl
and
push
scas
outsl
cmp
es
dec
shll
cli
repz
xor
cmp
mov
sub
cmp
clc
movl
dec
je
add
sub
imul
dec
std
cmp
loop
addb
sub
in
inc
cmpsb
jge
adc
mov
sub
add
sbbl
inc
js
inc
pusha
cmp
inc
xchg
push
dec
in
inc
test
sbb
imul
ret
sbb
sbb
sbb
push
lods
mov
and
aaa
lods
lock
mov
mov
xorb
adc
xor
decb
dec
xor
pop
mov
nop
dec
add
inc
sbb
movl
push
mov
clc
pop
test
dec
mov
add
add
adc
lret
cmp
mov
sub
xchg
shl
dec
or
rcrb
cmp
sub
rolb
or
inc
sarl
rcll
pushf
mov
push
mov
add
push
xor
ret
inc
xchg
sub
xchg
insb
dec
lock
push
rol
add
add
push
jg
adc
jmp
and
or
leave
push
push
mov
int
xor
and
jecxz
add
inc
or
inc
cmp
imul
mov
add
in
xchg
push
addr16
cwtl
ret
fiaddl
xchg
jnp
push
xchg
cmpsl
push
inc
push
das
lahf
xor
and
loopne
scas
push
mov
xor
pop
rcrb
sbb
test
mov
dec
in
sub
xchg
aaa
inc
or
or
push
mov
xor
push
add
jg
loopne
cmp
pop
insb
push
push
push
stos
mov
sar
inc
jbe
pusha
ret
add
adc
add
ds
scas
movsb
xor
mov
sub
sub
push
ja
add
mov
pusha
scas
cmp
ja
neg
sub
push
fistl
xchg
push
mov
sahf
filds
je
rolb
xlat
cmp
inc
push
and
fwait
cmpb
add
add
shl
mov
push
loopne
xor
jnp
or
dec
loopne
mov
xchg
push
lock
dec
jl
pop
xchg
fsubs
popl
mov
mov
aam
add
pusha
pop
jmp
shlb
or
xchg
adc
sbb
in
loopne
pop
aam
add
jmp
mov
imul
or
roll
pop
bound
adcb
jb
xor
xchg
inc
movsl
and
insb
test
cmp
mov
xchg
mov
fld
shlb
or
test
icebp
cld
or
adc
xlat
das
loop
js
dec
pop
inc
xor
fdivs
push
fwait
add
stos
lds
sbb
push
dec
inc
and
cmpsl
mov
and
outsb
in
xchg
xorl
xchg
adc
and
sbb
jmp
mov
js
lahf
test
repz
mov
adc
test
add
roll
inc
pop
test
pop
and
je
test
mov
call
in
pop
xchg
push
sub
sbb
xchg
or
fildll
xor
adc
adc
cli
push
xor
inc
jno
jbe
push
add
pop
push
fcoms
orb
fsubrs
pop
rorl
adc
loop
lea
mov
inc
in
mov
sbb
mov
cld
pop
js
add
enter
dec
or
and
xor
stos
dec
sarb
sti
insl
rcrb
push
lcall
adc
push
dec
ljmp
sub
cmc
push
pop
mov
imulb
inc
sub
dec
fstp
lock
xchg
push
movzbl
add
dec
inc
xor
or
cld
adc
call
adc
pop
cmc
sub
or
push
orb
setb
and
pusha
and
int
movb
fdivrs
add
scas
lret
xchg
loopne
test
mov
cmpl
les
arpl
mov
and
cwtl
mov
lds
fucom
add
or
mov
jmp
aaa
pop
pop
arpl
inc
insb
mov
and
mov
jmp
add
sub
pop
mov
sub
rorb
dec
das
mov
insb
add
nop
cmp
push
decl
mov
je
add
jb
mov
dec
cwtl
mov
sbb
jnp
jne
mov
or
mov
push
ds
xor
push
and
mov
sbb
shrb
call
xchg
or
sbb
test
sbb
cmpb
jbe
push
je
cmp
arpl
fwait
mov
ljmp
add
add
sbb
jae
mov
xchg
cmpsb
insl
ret
adc
and
adc
xlat
scas
call
mov
pop
dec
movsl
mov
add
in
mov
cmpb
and
adc
and
pop
fbstp
xor
pop
daa
xchg
rcrb
adc
sbb
stos
inc
pusha
push
mov
aas
pop
movsb
inc
or
fstl
sub
js
aas
out
sub
clc
cltd
or
fs
test
loope
bound
pop
xchg
into
inc
sti
test
pop
inc
sbb
scas
adc
and
test
test
mov
adc
push
test
cmp
mov
add
dec
cmp
lea
call
addl
pop
movsl
push
ret
or
pop
imul
test
neg
stos
loope
imul
lock
pop
push
dec
out
jns
testl
loope
cs
arpl
push
dec
pop
imul
push
or
imul
xor
xchg
call
fsubrs
aad
arpl
push
mov
lea
push
imul
mov
imul
into
pop
xor
mov
pop
jb
imul
dec
sbbl
nop
mov
pop
lock
jns
cwtl
dec
sahf
sub
hlt
jne
arpl
aam
addr16
in
lcall
add
test
jbe
push
ret
sbb
fs
push
addr16
leave
mov
and
or
lods
pop
repz
mov
test
addr16
pop
lcall
xchg
mov
pop
lods
mov
and
lods
mov
and
push
daa
jmp
add
inc
lods
mov
and
and
push
movsb
mov
xor
cs
ja
adc
push
repnz
xor
and
mov
in
add
in
nop
jmp
stos
dec
nop
stos
pusha
sub
adc
scas
js
lock
aam
adc
rorb
add
fs
mov
mov
inc
xor
push
push
push
push
adc
cmp
arpl
popf
add
sbb
je
bound
jno
inc
xor
add
jg
sbb
push
fcompl
rolb
mov
icebp
xor
jmp
mov
adc
mov
enter
push
mov
rolb
dec
insb
push
adcl
orb
mov
push
sarl
add
lahf
push
cld
fisttpl
aas
sub
or
push
dec
push
je
jnp
out
lcall
push
gs
push
xchg
sub
sub
dec
loopne
jne
in
or
subl
or
or
pop
xchg
or
or
call
mov
or
je
test
cmp
pop
inc
pop
jb
xor
push
and
pop
jb
jne
or
jne
inc
divl
sub
lcall
jnp
cwtl
add
in
and
or
xor
loopne
cmp
push
sub
fs
les
push
and
mov
pop
rcl
add
mov
jo
aad
popf
int
loopne
jmp
mov
jb
xor
mov
and
rclb
dec
pop
push
subl
push
adc
test
adcb
ss
incl
push
sbb
push
addr16
inc
movsl
popa
pop
imul
jne
cmp
movsw
sbb
cmc
sbb
aas
xor
fwait
loope
push
lcall
adc
lds
lds
das
xor
pop
jnp
cwtl
mov
mov
xor
call
add
ret
stos
imul
or
inc
xchg
sub
daa
push
add
push
mov
test
add
pop
into
mov
mov
mov
add
mov
xor
push
loopne
js
cmp
sbb
clc
addl
jne
sarb
repz
aam
das
mov
enter
imul
jbe
outsl
test
rcll
dec
clc
mov
jp
loopne
and
push
push
dec
dec
or
mov
pusha
jg
ds
jmp
inc
pop
lea
roll
movsl
lock
adc
inc
mov
xor
lea
dec
add
les
mov
and
add
jb
nop
push
push
push
fcomip
cmp
jbe
ret
ss
mov
pop
outsb
jo
adc
mov
push
mov
push
mov
dec
in
push
and
loopne
inc
and
bound
push
adc
dec
fdivs
and
dec
mov
push
mov
mov
sbb
push
mov
sub
int3
dec
imul
and
test
dec
mov
adc
andb
imul
dec
movsb
jmp
movl
shr
xor
pop
hlt
jmp
in
mov
icebp
inc
lock
sahf
inc
mov
sbb
jecxz
cwtl
mov
mov
and
and
lods
orb
fs
jne
adc
sub
stos
add
mov
stos
test
sub
pop
xor
pushf
cmp
shl
popa
fs
ret
addr16
xor
xchg
les
add
shrb
out
inc
or
sub
js
decb
xor
flds
stos
ss
add
sbb
pop
sub
push
push
imul
mov
jmp
dec
ss
and
jg
test
add
pop
and
mov
je
and
outsl
mov
mov
loopne
pusha
xor
testb
test
faddp
push
mov
xchg
pop
adc
loopne
inc
cmp
js
push
fdivrl
ljmp
adc
loop
fcom
mov
xor
insb
jmp
pop
adc
test
push
add
pop
pop
cmp
cltd
dec
jb
add
inc
ret
adc
cltd
add
out
ja
jmp
push
dec
cld
mov
inc
adc
xor
cmp
wbinvd
aas
les
cmp
jmp
mov
subb
mov
xor
in
xor
mov
pop
in
mov
mov
test
mov
jo
xor
or
jl
xchg
xchg
mov
nop
push
roll
fldl
popa
jo
mov
idivb
push
adc
scas
inc
or
daa
outsl
movzwl
or
add
addl
inc
pop
or
and
sub
and
xlat
xorl
in
lea
push
mov
lcall
and
imul
fidivl
sub
push
push
outsb
movsl
push
inc
call
and
sbb
jge
inc
loop
lock
xor
push
fdivs
adc
addb
popa
sti
jns
add
ret
icebp
add
inc
jns
xor
cs
mov
leave
jne
push
ret
stc
jmp
into
jne
pop
mov
lock
xor
filds
pop
xor
lahf
add
cmpl
jbe
rolb
sarl
cmp
push
mov
mov
repnz
push
sbb
test
and
movsl
and
mov
push
xor
pop
push
add
and
movsb
xchg
clc
pop
or
sti
xlat
mov
mov
and
leave
loopne
loopne
xor
sbb
mov
jbe
mov
xchg
loopne
adc
loope
xor
addr16
xchg
test
xor
xchg
jb
jo
aaa
popl
inc
add
mov
aad
jns
aas
or
jmp
jae
xchg
inc
call
inc
add
dec
aam
les
and
cmp
fdivs
aas
push
mov
or
jl
push
push
in
iret
and
rcrl
mov
push
pop
push
mov
push
es
les
addl
pop
mov
int3
add
popa
pop
push
mov
or
aad
push
sbb
sbbl
jns
push
dec
adc
dec
aam
shll
mov
xchg
lcall
pop
aas
or
mov
dec
dec
sub
test
mov
mov
loopne
dec
fs
pushl
leave
mov
or
shll
jnp
clc
dec
cmp
dec
pop
mov
or
inc
ret
hlt
inc
clc
inc
push
xor
lea
cmpsb
icebp
mov
jo
inc
xchg
js
fidivl
jnp
js
pop
xor
or
js
test
lock
dec
popa
and
addl
fcmovu
inc
out
push
lock
xchg
or
jg
xor
add
pop
into
xchg
rolb
ljmp
decl
addb
loopne
out
scas
mov
xor
inc
xchg
push
dec
imul
js
test
mov
lds
adc
insl
pop
or
adc
xorl
insl
push
cmpsl
test
xor
testb
or
cwtl
cmpsl
jl
pop
cwtl
test
xor
or
and
iret
insb
pushf
test
inc
gs
jne
je
or
jne
push
incl
xchg
push
lock
insb
imul
mov
pop
lldt
pop
xchg
add
pop
call
sbb
rorl
insb
gs
pop
gs
mov
pusha
pop
xchg
cld
lods
pop
fmuls
xor
fistl
mov
sbb
add
daa
fs
inc
lds
iret
outsl
inc
in
fisubs
dec
pop
cmpl
push
add
out
sbb
xchg
pop
sbb
inc
and
orl
adc
dec
pop
push
xor
inc
mov
add
xchg
jno
mov
pop
push
and
push
xor
push
je
sub
add
stc
mov
add
push
push
sbb
pop
test
gs
cld
enter
sub
ljmp
xchg
push
sub
bound
sbb
mov
ljmp
mov
xor
xchg
mov
and
mov
xor
push
xchg
xchg
in
mov
aas
dec
pop
cmp
idivb
pushl
mov
cld
cmp
stos
mov
dec
add
or
xchg
xchg
push
rol
inc
sarb
pusha
add
into
cmp
fimuls
mov
sub
call
push
or
and
cmp
cwtl
push
shl
mov
jbe
jbe
jmp
mov
movsl
jns
pop
leave
push
xchg
push
adc
mov
xchg
sub
adc
jge
jle
mov
jp
push
lock
push
xor
aad
lcall
push
stos
cld
in
sbb
adc
sub
jno
xor
movsb
xor
jmp
add
roll
add
push
inc
xchg
inc
mov
sbb
popf
andb
mov
jnp
mov
jg
jg
cmp
xor
mov
filds
push
mov
leave
setne
dec
add
push
sbb
mov
movl
push
sbb
fisttps
outsl
or
leave
jne
dec
xor
adc
mov
push
add
into
imul
mov
popa
lds
not
push
push
push
add
je
lahf
cmpl
clc
fisttpll
jnp
adc
mov
mov
dec
jecxz
dec
add
stos
inc
in
je
mov
xor
fistpl
xchg
sub
add
mov
int3
jno
jmp
and
mov
pop
icebp
iret
loopne
shll
adc
pop
mov
add
jmp
popa
sbb
sub
pop
andb
push
jo
jne
sbb
notrack
mov
iret
nop
cmp
xchg
mov
add
ret
push
adc
add
repz
dec
or
popa
push
adc
mov
das
and
shlb
cmpsl
add
push
pop
cmc
adc
adc
std
mov
mov
sbb
or
clc
dec
cmp
andb
les
sub
nop
pushf
xchg
loopne
cmpb
mov
sub
push
cwtl
xchg
sub
jbe
xchg
push
xchg
and
test
loope
adc
popa
arpl
push
jmp
ss
pop
xor
or
sbb
sub
jle
mov
adc
sub
adc
aas
out
add
dec
test
imull
or
ds
add
push
fdivp
xor
les
sub
dec
rolb
add
and
dec
adc
and
mov
arpl
pushf
fs
xor
xor
orl
sbb
ja
push
call
rolb
orb
decb
xchg
ret
call
mov
push
push
imul
inc
cld
xor
jno
cld
mov
flds
dec
fadd
cli
loopne
pusha
aad
mov
pop
cli
mov
push
inc
xor
adcl
jo
pop
add
je
out
cli
sbb
jge
movb
push
test
sub
and
pop
insb
test
test
je
js
push
jmp
sbb
fimull
pop
inc
not
mov
dec
push
imul
pop
inc
test
adc
insb
sbb
fldl
rclb
xor
decl
daa
ds
xor
loope
or
adc
adc
cmp
sarb
xor
add
loopne
leave
mov
dec
push
or
cmp
test
or
add
pop
mov
add
daa
add
enter
lock
lea
sbb
sbb
jo
cmc
mov
mov
and
test
add
mov
xlat
ret
cmp
mov
xchg
fwait
jmp
dec
jbe
inc
and
push
in
xorl
jmp
inc
push
jne
mov
ret
es
in
ss
jne
pop
data16
push
cs
sub
inc
lock
adc
xchg
movsb
je
pop
dec
jmp
push
iret
mov
hlt
sarb
jmp
cmp
sti
test
mov
push
dec
fidivs
insb
cmpsl
lret
xchg
push
stos
or
das
mov
xchg
xor
insb
rclb
and
mov
cmp
inc
hlt
jne
pop
push
push
mov
mov
and
jmp
mov
pop
push
dec
mov
outsb
pop
sub
and
cmp
addb
shlb
and
dec
push
push
and
das
xchg
pop
testl
xchg
pusha
push
xor
js
sarl
sub
mov
loopne
jae
xor
lods
test
iret
iret
std
mov
idivb
sub
mov
ret
pop
add
adc
ja
mov
mov
mov
push
and
adc
pop
orb
loopne
loopne
push
adc
mov
cmp
negl
js
dec
je
jl
pop
pop
and
jmp
jb
push
and
dec
pop
pop
mov
add
into
sti
sbb
mov
sbbl
pushl
rorb
pop
and
add
fisttpl
adc
push
jb
dec
push
call
pop
pop
lldt
dec
ljmp
pop
inc
jmp
rcll
jecxz
cmp
gs
cmp
sub
cmp
int3
lds
sbb
xchg
enter
stc
or
and
and
std
rcr
out
push
push
push
int3
hlt
ja
mov
mov
adc
je
and
pop
orl
jecxz
imul
dec
ljmp
mov
cmp
cmp
pop
sbb
adc
in
mov
fmull
aaa
xchg
push
ret
or
pop
mov
pop
in
mov
xor
loop
adc
or
push
pop
lds
cmp
jecxz
push
daa
cmpb
faddl
adc
add
and
es
sub
movsb
fcompl
adc
push
data16
cs
inc
and
cmpb
into
and
add
mov
adc
add
or
cmpl
je
mov
loopne
ficoms
rcrb
add
je
lock
adc
test
sub
xchg
push
mov
or
or
js
int
pop
adc
inc
cmp
xchg
in
dec
mov
imull
xor
add
jo
rorb
jg,pn
or
inc
push
jb
push
or
adc
pop
je
push
ss
rolb
inc
lret
fdivl
rcr
jge
add
mov
and
adcl
add
test
in
inc
pop
aad
test
stos
outsl
and
sub
jl
incl
mov
fsubrs
adc
mov
lea
jl
stc
xorb
flds
mov
inc
mov
xchg
inc
add
push
inc
or
inc
adc
dec
sub
imul
addb
rcpps
add
shlb
dec
lsl
pop
add
test
shr
xchg
ret
stos
push
dec
outsb
inc
imul
lahf
gs
sarl
jmp
int3
push
push
push
outsl
jb
clc
fadds
and
push
sub
mov
imul
orb
outsl
ljmp
outsb
loopne
mov
jo
mov
testb
xchg
pusha
rol
pop
sbb
loopne
mov
mov
sbb
xor
xor
mov
inc
pop
sub
aad
xchg
lret
aaa
cmp
jo
rolb
jmp
xor
and
xorb
xor
mov
mov
push
imul
popf
inc
loopne
or
aas
xchg
mov
sub
lcallw
test
xor
sbb
stc
and
jle
aad
push
mov
ret
pop
jp
and
or
push
push
xchg
dec
and
out
cld
push
or
mov
orl
xchg
sbb
inc
nop
sbb
sbb
push
les
shlb
mov
dec
fsubr
test
outsl
test
inc
and
xor
psllw
sbb
mov
mov
pusha
mov
enter
arpl
arpl
and
data16
add
ret
pop
adc
clc
mov
cmp
jne
cmp
sbbb
mov
push
out
mov
sahf
push
ja
je
orb
mov
lea
or
pop
jecxz
add
mov
nop
adc
mov
sahf
adc
fsubs
fstl
mov
stos
adc
pop
or
std
or
cltd
sbb
push
je
cs
nop
push
pop
data16
loope
lods
or
mov
dec
adc
or
add
mov
inc
mov
pop
cmpb
movb
and
xor
mov
jl
cmp
jle
mov
sub
out
jno
push
inc
add
add
dec
jne
push
jne
shl
adc
cmp
lahf
lods
cld
cmp
xchg
loope
inc
movnti
adc
insb
pusha
dec
inc
fwait
sub
jns
imul
orb
adc
pop
add
call
cmp
sbb
lahf
cld
add
sub
fcmovnbe
pop
sbb
push
cmp
mov
das
fsubrl
push
add
sub
dec
inc
imul
mov
add
or
or
dec
pop
or
dec
adc
scas
lds
adc
pop
push
sbb
icebp
test
or
mov
xchg
fprem
add
pusha
outsl
loopne
adcl
lea
pop
je
cmp
fcomps
cmp
jmp
xchg
xchg
into
add
aaa
adc
scas
mov
add
xchg
inc
data16
cmp
jp
xchg
cmpl
pop
inc
movaps
or
jle
mov
and
add
and
cmp
adc
and
outsl
or
lods
fnstsw
push
pop
hlt
out
es
cmp
cmp
btr
cmp
ljmp
sub
dec
in
lock
dec
push
dec
pop
push
cs
xor
ss
fstpl
jae
sub
ss
sbb
xor
orb
pop
ss
cs
jbe
mov
xor
or
push
loope
fs
push
sub
and
jne,pt
pop
mov
outsl
xchg
std
dec
inc
dec
xor
aaa
pop
jg
jo
xlat
cmp
pop
sub
mov
pop
shll
push
inc
adc
and
cltd
dec
xor
push
xor
xor
bound
imul
mov
aaa
xchg
data16
fidivrs
dec
dec
aaa
or
inc
xchg
inc
push
dec
jb
xchg
pop
sub
xchg
movsl
push
das
rcl
mov
xor
jle
or
mov
sub
xor
je
push
sub
dec
pusha
in
push
cmovb
enter
xor
xor
lahf
xor
and
inc
addr16
pushl
scas
out
imul
xor
outsb
imul
dec
imul
dec
inc
push
jb
inc
inc
jno
or
jno
cmp
fidivrs
cmp
cmp
dec
xchg
push
dec
or
jb,pn
add
jl
imul
sub
test
cmp
push
xchg
pusha
outsb
mov
and
fsubrl
pop
jmp
lock
lock
dec
pop
cmp
pop
xchg
sub
xor
inc
push
inc
xchg
dec
xlat
sub
outsl
daa
movsb
daa
adc
sub
jae
outsl
push
ja
and
inc
mov
inc
loope
and
aaa
repz
pusha
fwait
mov
jb
dec
xor
xor
inc
outsl
jb
xor
gs
pop
pop
dec
mov
jmp
mov
pop
xor
cmp
push
dec
rcll
xor
pop
push
or
xor
das
pop
test
lds
gs
outsb
fbstp
sbb
int
xchg
stos
mov
test
fidivl
xor
daa
iret
mov
fidivrl
and
push
inc
pop
xchg
push
jae
mov
push
cs
ret
xchg
daa
mov
faddp
mov
xor
out
dec
int
cs
xchg
jmp
and
aas
es
push
dec
cwtl
ss
mov
fisubrl
out
iret
aaa
inc
loope
and
inc
cmpsl
xor
imul
push
outsb
popa
pop
add
js
inc
aaa
xorb
xor
pusha
lahf
outsl
fbld
loope
jns
jns
xor
popa
mov
aas
adc
lahf
pop
fwait
or
dec
push
xchg
xor
sub
dec
dec
mov
imul
ret
dec
cli
xchg
jo
mov
cmpsb
sbb
mov
aaa
aaa
mov
aaa
aaa
push
jo
cmpsl
push
or
daa
pop
addr16
shlb
imul
outsl
insb
cmpsl
cmp
mov
cmp
dec
pop
pop
pop
add
outsb
sub
pop
cmp
loopne
cmp
cmp
addr16
dec
mov
push
adc
pop
xchg
or
xor
mull
sbbb
incl
mov
gs
add
mov
xor
push
fisubrs
inc
pop
pop
lock
lahf
adc
out
out
loopne
loopne
push
pop
scas
cltd
sbb
push
dec
testl
aaa
push
jo
push
decl
nop
mov
xor
cmp
jb
insb
into
arpl
sbb
loop
ss
jg
xor
out
pop
mov
ss
aaa
lahf
push
mov
sub
jbe
gs
pop
pop
test
pop
push
pop
push
icebp
ss
fcomps
cmp
pop
mov
xor
cmp
ja
popa
sub
sub
cmp
add
and
rcrb
arpl
add
mov
call
loopne
and
test
mov
pushf
or
pop
push
xchg
jo
push
sbb
jg
fcompl
cmp
pop
mov
aaa
popa
xchg
or
cmova
stos
sbb
inc
pop
cmpsb
cmp
aas
xor
pop
das
arpl
fsts
dec
stc
xor
pushf
pushf
fwait
das
cmpsl
mov
inc
or
add
dec
push
ret
add
pop
mov
cmp
xchg
push
or
cmpsb
xor
adcb
pop
xchg
xchg
or
outsb
outsl
pop
mov
inc
pop
dec
outsl
and
lock
cmpsl
mov
push
mov
pop
subb
inc
fcoms
lahf
ja
jge
lock
xor
popa
inc
lahf
ja
inc
nop
mov
ss
pop
out
data16
mov
inc
das
bound
or
shrb
xor
jae
jo
insb
divl
xchg
out
ret
and
push
bound
cmpl
rcll
insb
add
jo
xchg
push
dec
cmp
inc
push
lahf
out
add
dec
lahf
sbb
jecxz
mov
cmp
mov
testl
cmp
add
inc
inc
dec
push
mov
jns
adc
jg
ss
jne
addr16
jb
aaa
mov
pop
lods
inc
cs
iret
bound
mov
sbb
out
ja
or
cmp
inc
cmp
xor
jle
iret
sbb
lahf
pop
cmp
test
cli
pop
push
lahf
push
inc
push
dec
dec
jp
cmp
cmp
xor
add
pop
shlb
arpl
out
pop
js
jno
cmp
movsl
mov
mov
cmp
dec
jne
pop
sbb
xchg
iret
cmp
xor
pop
xorb
xlat
inc
cmpsl
inc
imul
outsl
arpl
daa
divb
cmp
xor
jmp
bound
jno
bound
loope
mov
push
sub
jnp
and
mov
idivl
sub
bound
cvttps2pi
pop
out
xor
push
push
dec
lret
int3
sbb
cmp
aad
orb
or
rclb
fs
cmp
mov
int3
push
xchg
iret
dec
jl
insb
mov
cmp
pop
in
movsl
out
jo
push
inc
lahf
lahf
cmc
and
int3
xchg
push
sbb
sbb
xlat
inc
cmpsl
test
add
adcl
idivl
ss
arpl
xor
fcmovb
xor
lds
and
test
xor
push
push
mov
push
mov
add
bound
jg
das
fcomp
incl
inc
pop
push
xor
inc
test
jecxz
dec
push
xlat
outsl
sahf
int
xorl
dec
jg
pop
adc
push
pushf
xor
push
lods
nop
daa
cli
push
ljmp
sub
jg
add
aas
out
testb
xor
addr16
push
sbb
ja
lret
sub
or
pop
inc
add
xor
loopne
xor
es
jg
mov
orl
pop
inc
jecxz
and
pop
pop
push
addb
aam
je
iret
or
inc
pop
das
pop
mov
out
xor
mov
push
into
and
cmp
daa
ja
adc
sub
push
add
jmp
xor
jo
imul
daa
cmp
xchg
outsl
mov
popa
sbb
pop
sbb
pop
daa
xor
add
pop
rcll
xchg
inc
mov
ja
pop
pop
xchg
mov
pop
pop
pop
xor
cwtl
icebp
lea
sub
rclb
enter
addr16
inc
xchg
pop
xor
addl
inc
mov
mov
and
popa
aaa
jno
push
pop
pop
arpl
addb
mov
ja
xchg
or
cmp
imul
xchg
mulb
inc
pop
nop
xor
push
xlat
scas
xlat
testl
test
inc
xor
xor
dec
push
das
xchg
mov
inc
test
cmp
pop
jg
and
ds
cmpsl
subl
ja
pop
jo
out
iret
lock
addb
cwtl
mov
lds
dec
sub
inc
fiaddl
das
out
add
mov
inc
push
addr16
insb
mov
add
dec
insb
xchg
add
sbb
pop
aaa
insb
subl
jg
xor
inc
dec
dec
push
pop
cmp
xchg
xorb
aaa
or
outsl
mov
pushf
aas
shrl
pop
xor
inc
mov
mov
push
jg
sub
add
add
push
add
shll
mov
insb
push
out
imull
jle
bound
ja
xor
mov
push
mov
cmp
add
inc
mov
cmp
dec
pop
pop
and
cmp
xchg
sub
testl
xchg
push
movsl
inc
inc
jg
cmp
decl
push
push
pop
dec
cs
xor
xor
mov
xor
add
ljmp
mov
jns
and
mov
dec
rol
scas
ja
xor
xor
ja
pop
jo
dec
daa
fists
je
jo
inc
in
insl
insl
pop
test
push
xor
cwtl
sbb
pop
divl
lods
test
out
and
pop
cltd
cmp
jne
xor
loopne
xor
xchg
adc
jg
jge
test
daa
xchg
loopne
xor
push
mov
or
adc
mov
pop
push
cwtl
faddl
inc
inc
lods
inc
mov
lods
ss
je
insl
test
insl
popa
cmp
jmp
gs
outsb
fcoms
add
aaa
dec
pop
cmp
out
add
fcoms
sub
xchg
push
sub
pop
pop
xor
daa
xlat
sub
je
and
jne
push
xlat
insb
mov
xor
dec
add
cmpsl
int
inc
dec
push
aaa
lahf
mov
sbb
lods
dec
inc
or
cmp
fadds
into
or
ja
mov
aas
push
insl
mov
jg
add
nop
jmp
shlb
xchg
sarb
xchg
inc
xchg
push
add
ds
push
xlat
iret
insl
push
aaa
jg
sub
push
xor
adc
pop
xor
loope
cmpsb
aas
pop
xor
xchg
aaa
daa
push
mov
push
xlat
pop
shll
cmpsl
dec
sub
xor
fistpl
jg
push
push
jp
outsl
js
xchg
inc
push
pop
aaa
scas
je
push
pop
daa
xor
fildll
dec
fistpll
xor
aad
add
ss
cmpsl
push
add
or
scas
pop
xor
mov
mov
xor
dec
push
lahf
sbb
fmull
ljmp
out
xor
lahf
ret
cmp
jb
imulb
jmp
movsb
aam
inc
inc
push
pop
push
ljmp
push
sbb
into
out
dec
lahf
movsl
xor
xchg
outsl
nop
jge
lret
aaa
jne
sub
mov
enter
push
cld
das
rorl
jle
cmp
ds
mov
cmpsl
pop
pop
outsb
xor
jg
popa
insb
push
imul
jp
push
scas
ret
xor
add
cmpsl
push
or
sub
scas
inc
push
cmp
adc
and
push
inc
arpl
and
xchg
daa
pop
push
mov
xor
push
xlat
repz
inc
inc
sub
mov
push
mov
cmp
dec
loopne
or
jo
jb
adc
xor
in
xchg
push
pop
mov
push
push
popa
ret
xchg
imul
push
xchg
out
mov
jo
arpl
dec
inc
sbb
dec
xor
arpl
clc
push
loope
mull
arpl
sub
mov
or
ljmp
ja
popf
adc
aad
outsb
insb
pop
jae
jecxz
orb
and
clc
sub
inc
inc
inc
inc
dec
pushf
dec
pop
sbb
rorl
push
popl
pop
mov
aaa
jbe
scas
mov
lcall
pop
ss
mov
sbb
cmpsl
testl
xchg
popl
and
repz
inc
out
pop
mov
sbb
pop
popl
and
mov
pop
aaa
mov
popl
sub
arpl
and
je
xor
add
push
mov
inc
jae
xchg
int
insl
and
movl
or
bound
adc
ret
xor
push
xchg
mov
xchg
xchg
and
sub
je
adc
inc
in
pop
dec
pop
xchg
mov
fcoms
mov
or
pusha
fdivs
push
jo
cmp
sub
inc
sbb
cltd
ret
cmp
xor
and
and
sbb
aas
inc
pop
popa
jb
xchg
orb
xchg
pop
movb
insl
sbb
fldenv
das
push
xchg
in
test
inc
test
sarb
sbb
jg
pop
push
inc
cmp
inc
nop
mov
gs
daa
xor
push
pop
sbb
mov
or
dec
fstpl
test
loopne
mov
aaa
popa
pop
dec
lock
sbb
and
adc
loope
insb
je
je
cmp
pushf
inc
cmp
sbb
mov
xchg
pusha
ss
cmp
daa
cmp
add
scas
cmp
adc
dec
lock
idiv
xlat
mov
sub
jo
jg
arpl
enter
out
mull
cmp
xor
cmp
jg
mov
and
jg
push
ret
cmp
decl
fdivrl
pop
sbb
cwtl
test
mov
mov
cmp
or
ss
sub
int3
inc
mov
in
faddl
lahf
ss
inc
push
scas
push
je
mov
or
mov
scas
cs
pop
ja
dec
adc
ss
cmp
xchg
and
mov
in
test
adc
ds
xchg
packuswb
fdivl
daa
cmp
or
pop
aaa
sbb
ljmp
and
cmp
lahf
pop
pop
cmp
testb
loop
pop
cmpsl
or
pop
andb
and
imulb
jb
arpl
mov
xor
mov
or
pop
out
aaa
pop
loope
test
das
std
or
xchg
and
push
in
adc
ret
shll
push
and
test
sbbl
cmp
adc
arpl
out
pop
xchg
cmp
scas
sbb
addr16
enter
xlat
imul
or
outsl
and
sbb
pop
je
pop
sub
or
cmp
dec
adc
sbb
adc
xor
js
xor
xor
dec
jbe
aas
daa
mov
add
inc
fists
inc
push
sub
ret
lcall
icebp
maxps
dec
xchg
xchg
ret
push
inc
sub
or
scas
pop
inc
inc
das
lea
fists
xchg
int
inc
aas
xor
das
pop
and
pop
pop
pop
pop
mov
mov
sub
sub
xor
mov
pop
mov
inc
stos
movl
pusha
popa
and
daa
dec
mov
lea
and
or
fisttps
dec
insb
imul
inc
sbb
add
fdivr
dec
cwtl
mull
sub
dec
subb
jg
daa
fildll
mov
mov
test
pop
add
cvtps2pi
orl
push
cmp
mov
push
dec
sub
push
inc
sti
out
push
outsb
imul
outsb
xor
xor
jg
cmovge
dec
dec
dec
dec
inc
in
clc
mov
dec
outsb
gs
outsl
outsb
add
xchg
jbe
lods
cs
xorps
push
dec
push
gs
sub
aas
and
xlat
inc
int
and
cs
push
xchg
imull
dec
dec
cmp
movsb
push
loopne
pop
push
aaa
aaa
enter
xor
or
ja
inc
push
gs
mov
dec
inc
xor
scas
mov
loop
icebp
rcrl
sbb
sub
adc
sub
and
mov
sub
pop
fdivs
test
inc
cmp
loopne
daa
cmpsl
cmp
sub
popf
sbb
cmpsl
sub
and
jle
push
or
dec
xor
aaa
push
cmpsl
ret
and
cmpsl
jno
add
mov
cmpsb
shlb
cmpsl
fs
js
cmpsl
dec
pop
pusha
sbb
scas
test
xor
insl
cmpsl
aas
cmpsl
pop
or
imul
jnp
mov
dec
push
ret
inc
push
cmp
cmpsl
fisttps
cmpsl
imul
rcrb
push
mov
or
xchg
xlat
mov
imul
cmp
adc
or
aaa
cmpsl
xlat
mov
movsb
and
nop
out
jae
out
or
cmpsl
pop
jns
or
dec
outsl
cmpsl
bound
in
daa
push
nop
sbb
repz
cmp
lahf
scas
cmpsb
movsl
ret
aaa
cmpsl
cmp
in
sbb
xchg
push
xor
or
sbb
iret
mov
shlb
mov
pop
pop
mov
jle
in
aaa
xor
imul
sbb
mov
push
push
mov
push
dec
inc
inc
sub
add
jg
ja
pop
jo
push
sub
and
xor
fstpl
daa
dec
mov
daa
mov
jbe
add
add
push
xchg
xor
movsl
addr16
negb
xlat
xlat
adc
xchg
sbb
push
xor
jo
movsb
out
dec
test
pop
testl
pop
dec
mov
cmp
sub
mov
sbb
icebp
sarb
push
xchg
sbb
nop
daa
pop
sub
cmpsl
arpl
add
sub
mov
mov
daa
inc
cmpsb
or
jg
adc
inc
inc
inc
dec
xchg
cmp
xchg
pop
cmpsl
add
jno
ja
outsl
ja
sub
xorl
push
push
inc
outsb
adc
call
pop
popa
pop
xor
sub
jmp
push
push
add
filds
pop
and
inc
mov
push
xchg
sarl
inc
js
jp
sbbl
pop
add
push
and
xorl
enter
lods
popa
jo
ret
insl
sbb
xchg
fistps
push
imul
cmp
sahf
inc
imul
xor
pop
sahf
dec
inc
lahf
add
cmp
rcll
mov
and
sub
and
lahf
sub
push
mov
sub
lahf
fists
rolb
push
pop
xchg
inc
mov
push
pop
loopne
add
sbb
cmp
subb
rol
sbb
ja
pop
sub
aaa
out
ja
rorl
ja
add
ja
ja
aad
test
test
push
xchg
cmpsl
sub
dec
sub
dec
inc
mov
xchg
addb
dec
xor
sbb
xor
adc
dec
pop
jg
jb
sbb
add
scas
dec
out
and
sub
mov
fs
mov
daa
inc
inc
aas
jp
add
push
bound
popa
mov
rcrb
out
sub
xor
sbb
dec
dec
mov
popa
cmpsl
out
loope
fildl
cmpsl
xlat
push
sub
mov
nop
test
idivb
or
add
call
push
imul
sub
call
jbe
jns
bound
jae
dec
and
rcrb
push
and
fwait
scas
dec
push
cs
testl
sub
lahf
ret
and
outsl
dec
push
imul
sub
mov
dec
dec
popa
je
pshufw
lahf
sub
lods
mov
mov
daa
mov
gs
push
outsl
jo
in
or
jg
sub
inc
loope
inc
daa
cmpsl
jnp
mov
pop
pop
xor
xchg
imul
je
jne
insb
adc
push
movb
sbb
inc
scas
push
xor
test
das
aas
sub
inc
mov
inc
fadds
fisubs
out
sbb
sbb
test
sub
pop
xor
imul
adc
out
das
sbb
test
mov
test
mov
lahf
das
add
test
mov
bound
das
dec
push
push
fadds
je
xor
dec
pop
add
mov
inc
add
jle
aad
add
push
outsb
jne
mov
mov
adc
mov
fildl
mov
adc
sub
nop
mov
ret
lods
psraw
push
jne
fisttps
add
cmpsl
es
push
incl
xchg
push
push
repnz
pop
inc
jb
push
popa
rcrb
dec
popa
popl
bound
stos
pop
inc
jo
sub
push
xor
das
dec
pop
push
push
cmpsl
inc
jne
xlat
adc
insl
xchg
out
das
dec
arpl
sbb
das
inc
jl
cmp
bound
into
add
aaa
add
fdivs
dec
setae
insb
outsl
bound
push
add
inc
inc
notb
mov
shrb
enter
mov
mov
mov
imul
daa
mov
cmpsb
fcomp
mov
mov
push
mov
and
insl
mov
push
in
xor
movb
push
loop
addr16
xor
int
pusha
xchg
mov
mov
jne
jg
dec
inc
aam
jmp
mov
xor
aad
rcr
fistl
sbb
mov
in
adc
pusha
enter
dec
pop
cld
pop
or
inc
cmp
jne
cmpb
test
int3
lea
and
jg
pop
add
sub
push
push
add
push
pop
je
and
sub
fidivl
cmp
lock
jmp
jl
sbb
lahf
add
add
mov
mov
dec
xor
cmp
int
dec
xor
pop
in
lock
mov
cmp
push
sub
jecxz
sub
or
mov
add
add
jecxz
in
xchg
stos
loop
outsl
cmp
adc
jle
dec
cmp
adc
mov
inc
loopne
pshufw
hlt
sub
imul
int
push
in
and
int3
cmp
cmp
fs
aas
xchg
enter
or
pop
fdiv
xchg
jg
fdivp
push
fld
add
aas
add
cmp
icebp
popa
jne
outsl
adc
xchg
add
push
push
popf
or
cmp
push
xchg
mov
inc
rolb
clc
sbb
mov
push
add
xchg
ret
xor
or
jmp
xchg
add
scas
pop
pop
fs
or
push
je
sahf
pop
das
out
sbbl
stc
push
fidivl
cmp
xchg
ret
jb
inc
xchg
xchg
decb
loop
jne
add
adc
lret
jne
dec
pop
fcmovbe
inc
lea
pop
fadds
mov
dec
push
icebp
aad
mov
imulb
mov
repnz
pop
add
add
sbb
push
push
mov
fstp
mov
or
inc
testb
adc
adcb
xor
add
rorb
xor
sub
aaa
aaa
jp
loope
sub
enter
inc
call
in
sbb
das
cmc
add
inc
fimuls
sub
call
shlb
push
adc
add
pop
fdivl
call
jb
adc
cld
push
sbb
mov
sbb
hlt
rcr
bnd
push
xchg
xchg
cwtl
jp
roll
aam
lock
lea
jne
scas
inc
xchg
xor
xchg
sarb
push
mov
xor
mov
rorb
push
push
mov
cmp
cmp
rcrl
mov
cmp
xlat
dec
jle
mov
out
cmpsb
inc
int3
or
call
cmp
jge
je
imul
jmp
sbb
add
xor
in
inc
les
mov
in
fisttps
mov
pop
pop
jmp
adc
ja
cmpl
clc
int
add
lcall
sbb
adc
sub
dec
and
mov
pusha
mov
cmp
jae
insb
repz
pop
jae
inc
jmp
es
popa
outsl
aas
enter
inc
notb
dec
hlt
mov
cmpsl
cld
lret
xor
pop
call
sarb
add
shrb
push
and
into
insl
push
jb
xchg
mov
add
sbb
pop
cmp
jo
inc
lock
pop
inc
or
fwait
xchg
mov
enter
mov
push
add
out
mov
lock
xor
int3
mov
xor
inc
sub
lods
lods
std
xchg
cmp
testb
cmp
insl
into
jecxz
jae
hlt
movl
rorb
clc
pop
and
pop
xor
mov
cld
and
cld
faddl
aas
test
or
es
aad
adc
push
fildll
adc
ja
fstp
test
add
adc
xchg
in
rolb
or
fstp
add
fwait
sub
push
dec
cmpsb
inc
and
out
dec
xlat
pop
xchg
mov
rolb
mov
mov
jno
addl
nop
mov
xor
clc
in
adc
push
xor
push
sub
lock
or
push
pop
sahf
adc
xor
cmp
or
and
mov
pop
les
add
pusha
fs
popa
mov
je
push
loope
cld
sbb
mov
cmp
jne
adc
mov
xchg
sub
pusha
dec
xchg
movsl
fdivr
cs
cmp
jge
mov
jmp
inc
mov
xchg
add
into
pop
addb
xchg
push
inc
or
clc
pusha
cmp
add
push
cld
add
fdivs
loope
sbb
adc
push
sub
push
add
fisttpl
mov
imull
repz
xchg
mov
xchg
test
pop
inc
sub
decl
push
xchg
mov
add
psraw
sbb
loopne
aad
loop
cmp
shrl
and
stc
bnd
mov
mov
mov
add
pop
mov
mov
add
pop
pushf
mov
lea
in
dec
pop
mov
dec
or
add
and
push
xchg
jo
and
pop
push
push
iret
in
ss
inc
inc
push
dec
push
cmp
fidivrl
push
scas
xchg
push
dec
ret
inc
push
push
int3
mov
daa
test
dec
enter
bswap
xchg
aas
rcl
paddq
scas
loope
lock
divps
ret
imul
sub
pop
xor
pop
lock
divps
int3
leave
or
lods
fstps
jecxz
je
push
dec
inc
inc
inc
lahf
mov
inc
xlat
pop
inc
push
ret
sub
and
inc
pop
scas
xlat
inc
popl
dec
push
dec
andnps
cli
movsb
mov
cmpb
push
dec
dec
push
cmp
mov
outsb
lret
mov
call
mov
push
mov
cmp
sbb
test
je
adc
in
jne
jo
xchg
cmp
jle
xor
daa
add
jg
pop
cmpb
je
jp
add
test
push
mov
push
xchg
xorb
or
mov
fwait
call
mov
in
xchg
xchg
xchg
test
or
hlt
add
pop
addb
fstpl
fwait
dec
sub
push
fldl
fchs
dec
xor
sbb
jae
out
in
jno
adc
sbb
call
xor
jne
sbb
in
push
cld
lret
jmp
xchg
pop
lret
test
pop
pushf
jge
mov
negl
and
or
pop
aam
mov
lock
loopne
jae
sbb
loope
divb
mov
or
fsubl
pop
test
ds
dec
stos
out
lcall
rolb
mov
sti
mov
cmp
shl
out
add
xchg
mov
inc
sar
out
pusha
push
sbb
test
clc
add
adc
cs
push
sahf
add
add
pop
cmp
lea
clc
jmp
mov
mov
add
mov
cmp
clc
test
or
mov
inc
outsl
into
jge
sbb
mov
mov
outsb
mov
stc
ds
pop
je
popa
inc
jl
ljmp
inc
stos
sarb
lods
mov
add
fsts
pop
jo
out
scas
repnz
mov
mov
sbb
adc
cs
sub
ret
xchg
mov
incb
clc
mov
popa
inc
nop
popf
aaa
cmp
lds
outsb
add
call
dec
jne
mov
mov
fistl
loope
jo
or
xlat
rclb
loopne
scas
sbb
je
or
loope
jle
je
scas
incb
rorl
xchg
jbe
and
sub
xor
shll
lds
cmp
in
fmull
jnp
ds
inc
xchg
addr16
mov
push
fidivl
fildl
push
cmp
inc
call
clc
jne
cmp
aad
cmp
jge
jecxz
push
and
lret
push
mov
outsl
je
adc
dec
loopne
push
pop
push
pop
iret
and
scas
out
dec
pusha
cmp
jne
daa
adc
cmp
or
out
cmp
rolb
jmp
test
loopne
and
test
mov
push
jmp
add
sti
nop
sub
test
adc
mov
push
and
pop
movsl
add
pop
mov
out
push
cmp
and
xchg
mov
cmp
sub
loope
fwait
pop
int3
ret
push
and
clc
cmp
jle
adcl
xor
enter
xchg
inc
xchg
and
sarl
jmp
test
push
push
adc
or
lock
cs
out
xchg
mov
setb
aas
movsb
rorl
pop
add
ja
push
push
mov
push
loopne
push
in
mov
rolb
andb
xor
pushf
mov
inc
mov
ja
add
in
or
es
cmp
lock
out
pop
xchg
es
and
and
enter
cmp
jbe
fsubrs
cld
in
mov
add
push
add
dec
pop
jnp
jo
sarb
xor
xorb
sbb
out
sbb
pop
and
push
sbb
push
push
push
dec
lods
or
add
add
dec
prefetchnta
shl
inc
shl
mov
inc
bound
push
and
inc
js
gs
inc
aaa
add
dec
jo
add
shlb
das
xchg
mov
in
xor
inc
sub
add
addb
push
fdivrs
xor
paddusb
rorb
cmc
das
in
fs
mov
js
scas
cmpsl
adc
mov
iret
mov
jge
ja
push
dec
cltd
pop
inc
sbb
push
rcl
sbb
pop
or
ret
stos
aam
add
aaa
mov
outsb
push
pop
jne
add
xchg
nop
xor
adcb
pop
mov
mov
and
xchg
pop
pop
nop
add
leave
pop
jp
xor
jnp
repnz
or
hlt
lea
sub
lea
in
adc
pop
push
mov
or
lret
cwtl
mov
rorb
push
adc
rcrb
jo
xchg
xchg
xchg
testl
adc
xchg
sub
inc
sub
push
push
clc
mov
shlb
mov
insb
mov
jbe
push
and
xorb
sub
xchg
gs
int
ja
pop
in
test
and
aaa
popa
mov
jo
and
int
sub
mov
jb
js
nop
ja
jo
mov
push
push
mov
hlt
and
jne
add
mov
push
sub
jp
mov
sbb
push
xlat
or
push
adc
and
out
dec
lock
fstpt
in
push
sbb
mov
xor
add
and
inc
shlb
lahf
je
xchg
sbb
mov
xor
or
cmp
loop
lret
pop
sarb
add
push
mov
adc
jge
andl
mov
mov
mov
loopne
jnp
rcr
sti
add
mov
inc
and
iret
sbb
sub
and
shrl
or
cs
test
adc
rclb
fcoml
jo
ret
and
and
push
or
xor
pop
adc
sbb
jne
aam
jecxz
and
fsubs
cmp
int3
fdivrs
rcll
orl
adc
xchg
das
lods
dec
cmpsl
xchg
das
out
pop
pop
or
and
pop
aas
cmp
and
cmpl
repz
adc
xor
or
fs
add
inc
xchg
mov
into
xor
dec
inc
xchg
xor
xrelease
aaa
std
leave
into
sbb
add
or
push
inc
and
mov
pop
add
aaa
hlt
jae
add
cmc
lea
mov
add
push
out
out
add
sbb
mov
mov
or
xor
push
aaa
inc
aam
xor
push
shl
fs
sub
test
mov
push
jmp
cwtl
imul
jmp
push
add
cmpsb
ss
lock
adc
test
ja
mov
sbb
pop
mov
icebp
pop
test
and
insl
or
pop
addr16
das
popf
inc
sti
int3
cmc
ficoms
inc
xchg
jnp
adc
and
sbbl
mov
imul
sbb
xchg
pop
jle
add
inc
sti
add
push
outsb
push
cmp
and
or
push
pop
pushl
lea
lock
cmp
mov
and
or
fistpll
arpl
mov
mov
or
scas
xlat
adc
cld
adc
add
xor
rclb
xchg
pause
lret
je
jb
jns
negb
mov
xor
jecxz
iret
mov
lock
in
add
subb
add
cwtl
ljmp
daa
jbe
popa
scas
lahf
negb
and
sbb
iret
add
out
push
push
jbe
adc
addb
out
jbe
fdivs
mov
jns
insb
jo
les
mov
xor
sbb
inc
sbbl
imul
and
xchg
enter
out
cmp
jbe
jl
call
dec
fcmovu
jl
jge
dec
jle
jg
addb
mov
outsb
insb
push
jo
mov
nop
mov
or
mov
dec
pop
hlt
or
bound
imul
adc
outsl
stos
cmp
or
js
test
hlt
xchg
fimull
adc
into
sub
lea
mov
fdivp
dec
in
inc
cmp
push
cmp
inc
inc
dec
sub
movsb
test
addr16
cmp
jmp
subl
add
and
arpl
xlat
and
lock
jmp
ret
cmp
adc
dec
sub
cmp
xchg
cli
push
cmp
push
fs
aad
mov
lret
clc
or
xlat
add
jno
loopne
jno
and
das
or
mov
add
mov
xor
fisttps
hlt
in
xor
adcl
sub
out
test
inc
pusha
jp
or
lea
and
ljmp
cs
rcll
hlt
mov
inc
dec
jne
test
in
popa
out
xor
out
loopne
pushf
pop
push
clc
push
pusha
divl
shlb
cld
js
jmp
xor
mov
mov
jle
fadds
add
hlt
mov
mov
dec
or
int3
and
add
sub
enter
xlat
scas
ret
or
cmp
xor
or
inc
add
inc
test
leave
push
add
leave
mov
arpl
push
adc
mov
inc
movsb
clc
push
mov
cld
rorl
pop
int3
jmp
inc
or
mov
sbb
cli
popf
in
pop
xchg
out
xor
shr
clc
adc
cmpl
jecxz
cli
inc
jns
and
leave
cli
cmp
outsb
hlt
sub
add
xor
or
sub
or
sbb
pop
push
jg
add
or
cltd
sti
push
jge
icebp
lret
mov
fwait
cmpb
sbb
xor
push
add
push
sub
push
xor
push
cmp
pop
adc
push
hlt
jo
adc
rclb
and
adc
mov
movsl
movl
mov
outsl
pop
adc
or
hlt
sub
or
adc
push
jg
rol
adc
xor
test
mov
pusha
mov
std
test
jl
mov
pop
jmp
rcl
xor
cmpsb
mov
ficoms
push
repz
and
or
stos
push
add
mov
cmc
ss
mov
xchg
mov
scas
std
jecxz
test
outsl
out
inc
std
hlt
sub
xor
jne
push
or
lahf
cs
adc
fwait
inc
mov
movb
in
jg
dec
add
icebp
rcrb
aad
outsl
xor
xchg
iret
call
xchg
test
dec
mov
arpl
sahf
mov
push
loopne
adc
hlt
mov
ret
outsl
outsl
pop
fisttpl
enter
outsl
add
faddl
imul
sbb
mov
cli
adc
outsl
add
or
lock
jge
mov
scas
inc
loop
mov
cmpb
sub
pushl
and
push
adc
test
xchg
bound
call
pop
sbb
pushf
subl
jmp
into
or
adc
js
lods
cmp
dec
mov
repz
addl
test
pop
sub
ja
mov
out
mov
mov
pop
dec
and
push
and
call
pop
xor
sub
push
pop
fldl
cmp
or
aam
sbb
push
xorb
or
test
pop
and
insb
push
dec
pop
dec
and
nop
xchg
sbb
movsb
inc
arpl
pop
in
hlt
pop
in
xor
push
add
adc
in
stos
push
sbb
ja
gs
mov
sbb
ja
dec
jo
lock
ja
push
xor
xor
andl
or
cmp
pop
sub
inc
inc
mov
outsl
sub
insb
pop
and
psraw
or
test
ret
add
pop
sub
inc
icebp
xchg
jbe
mov
cmp
and
pop
dec
push
add
or
or
push
or
and
out
inc
loop
inc
dec
pop
dec
inc
or
sbb
xor
dec
vpextrw
lds
das
pop
sub
add
or
pop
add
or
mov
fistpl
cltd
push
popa
test
bound
adc
call
aad
push
add
inc
ficompl
jb
or
pop
dec
push
jo
or
jo
mov
aas
or
movl
add
sbb
leave
xor
push
push
dec
xor
dec
sub
xchg
add
fsubr
and
add
nop
add
es
pop
fmuls
inc
dec
jne
addr16
jle
dec
test
je
inc
rorl
dec
push
decl
xchg
cwtl
push
clc
leave
dec
cmp
cmp
cld
cmpsl
push
js
sti
insl
mov
inc
dec
jne
cmp
cwtl
or
imul
call
ror
push
aam
pop
inc
sbbb
and
adc
testl
clc
and
sbb
sarl
mov
push
cld
loope
je
pop
repz
sbb
mov
in
or
ljmp
add
int3
or
fnstcw
in
or
dec
jl
adc
aaa
pop
cld
xchg
rolb
mov
push
incl
adc
hlt
xor
cmpl
or
pushl
adc
lcall
sti
add
clc
add
pop
mov
jmp
inc
or
cltd
idiv
orl
push
and
push
andl
and
jo
dec
out
call
pop
repz
dec
test
push
pop
ret
sbb
inc
mov
add
mov
lcall
and
icebp
repz
jb
pop
repnz
subb
pop
repz
andb
xor
lock
cmp
inc
testb
mov
loopne
jbe
dec
cmp
out
lods
inc
sbb
pop
loop,pn
or
xor
in
and
inc
subl
mov
jg
push
cmpb
push
inc
or
fiaddl
mov
push
pop
cmpl
inc
or
or
cmp
adc
rcl
fiaddl
ret
aam
ret
xor
dec
sbb
jecxz
inc
repnz
hlt
jg
das
mov
repz
movl
or
cld
push
les
jne
mov
jmp
cmp
xor
clc
in
inc
and
ss
sub
xor
pop
sbb
and
or
cmp
loopne
or
outsl
sbbb
cmp
jge
sub
add
sbb
pop
pop
and
cltd
or
sbb
pop
cmp
pop
je
or
jle
push
pop
push
xchg
sarl
inc
jl
arpl
mov
push
jl
jp
jbe
jmp
icebp
xor
mov
jmp
sub
push
stos
sbb
cmp
pop
out
popf
add
cmp
orl
stc
mov
jo
and
xor
xchg
push
std
popa
jp
loope
in
cli
cmc
inc
mov
fcom
add
pop
push
inc
xchg
test
notb
inc
arpl
scas
hlt
dec
add
xor
push
pop
or
mov
shr
enter
push
dec
pop
inc
out
xchg
inc
push
sahf
fs
and
fildl
cmp
add
or
sub
mov
mov
cld
test
add
or
andb
in
add
idivl
out
mov
in
add
sub
inc
xor
jg
mov
mov
test
dec
cmp
and
mov
mov
push
xor
add
add
es
loopne
stos
pop
rolb
shr
pop
outsl
in
imul
orl
aas
dec
cmp
out
aam
xchg
add
dec
sub
jnp
adc
mov
and
ljmp
ljmp
int3
sbb
mov
push
or
and
dec
cwtl
imull
ficomps
sub
lea
outsl
in
jne
push
int
lret
inc
cld
aam
lock
aaa
add
rorb
push
cmp
mov
int3
ss
data16
mov
lds
jl
mov
and
inc
dec
lods
push
xor
aas
nop
in
adc
xor
fbld
jae
and
dec
in
or
scas
xchg
sub
es
adc
cwtl
jo
lret
jge
push
xor
xchg
subb
mov
add
push
clc
pop
outsl
push
mov
call
orl
jne
cmp
mov
clc
pop
pop
je
les
js
les
add
and
shrb
mov
cs
pop
rclb
mov
and
mov
push
loopne
fcompl
ret
sar
scas
mov
rsm
inc
cmp
imul
rclb
outsb
adc
fs
gs
sub
push
inc
arpl
adc
jmp
jo
aas
movb
loopne
jae
clc
inc
sub
popa
mov
enter
or
movsl
call
cmp
inc
popa
insb
arpl
test
cmp
and
addr16
and
jg
fstpl
jo
arpl
sub
cmc
incl
jb
push
sub
popa
bound
je
je
and
aaa
sbb
ja
sub
outsl
data16
ljmp
and
call
cmp
add
outsl
mov
or
jmp
xor
mov
jecxz
mov
cs
jne
sub
and
dec
in
inc
stos
sbb
pop
add
jo
sbb
pushf
sahf
inc
fldl
push
sub
stos
orb
inc
cmp
or
sub
inc
and
fisttpll
mov
dec
inc
nop
pop
lahf
sub
rorb
lahf
sub
lock
mov
out
testb
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
push
incl
addr16
imul
jno
jae
jne
ja
and
js
jp
xor
xor
sub
push
pop
hlt
jae
lods
lds
lea
push
adc
dec
inc
ret
movsl
movb
pop
pop
adc
enter
adc
adc
or
add
in
cmpsl
pop
fwait
sbb
xor
scas
js
pusha
cmp
cmp
cmp
ficompl
js
incl
dec
lahf
adc
notb
xchg
adc
es
into
push
jl
adc
push
addr16
pop
mov
inc
push
push
jb
decl
jnp
ss
inc
fs
push
pusha
inc
add
push
adc
mov
lret
pop
adc
out
jg
sbb
sbb
jnp
or
pop
jle
push
push
mov
incl
mov
lahf
lods
lea
addl
je
inc
lock
sarl
sub
ret
subl
insb
jb
rol
push
jns
aam
pop
jne
pop
gs
adc
push
sbb
outsl
adc
sbb
ds
aaa
lock
loopne
andps
inc
loop
or
jbe
in
cmp
fdivrs
bound
psrlw
cmpl
mov
filds
mov
jl
test
jge
pop
sub
adc
push
pop
add
enter
movl
fstl
adc
push
mov
test
mov
lea
std
cwtl
ljmp
movb
subl
inc
addr16
pop
and
add
mov
sub
mov
push
and
sub
aad
mov
movsb
addl
vminps
in
clc
mov
sbb
push
add
inc
jns
jne
xor
jmp
mov
push
jmp
xchg
stc
call
sub
push
dec
jge
loope
sbb
inc
mov
mov
or
xchg
or
add
shlb
lea
orl
or
arpl
mov
test
jle
inc
das
in
popl
cmpl
fcoms
mov
les
sbb
negl
or
fmuls
pop
bound
push
mov
or
push
sbb
inc
inc
add
or
divb
mov
sahf
notl
aas
loop
decl
inc
decl
jne
xchg
je
sub
pop
push
xor
xor
repz
cmp
or
ret
pop
mov
into
mov
pop
jmp
push
dec
andl
js
ja
jb
aaa
mov
jne
imul
ficoml
shrb
lret
mov
in
inc
sbb
in
les
and
add
push
loop
push
or
daa
xchg
or
jo
push
sbb
mov
pusha
push
push
pop
mov
popa
les
ljmp
std
scas
in
push
cwtl
pushl
push
in
and
inc
xor
jmp
or
in
lock
outsl
jg
mov
mov
pop
pop
pop
mov
push
sub
lock
shr
roll
or
in
adc
xor
addb
repz
iret
imul
lea
sbb
je
push
mov
add
clc
xor
pop
mov
or
shrl
jmp
pop
or
push
in
xchg
push
jns
cwtl
inc
dec
jecxz
or
mov
ret
pusha
jl
cmc
xchg
inc
mov
mov
push
mov
mov
jb
fnsave
sub
add
je
test
decl
gs
pop
jb
je
jmp
movsb
cmp
inc
test
sbb
jo
sbb
jle
mov
or
loope
or
jmp
add
insb
jl
adc
xchg
negl
sti
mov
les
mov
sub
iret
pop
scas
sub
adc
push
add
lock
insb
and
pusha
sub
sub
add
call
push
push
mov
fadds
cmp
arpl
xor
add
adcl
mov
mov
sub
pop
mov
imul
call
inc
sbb
dec
adc
jg
pop
xor
inc
mov
ds
lock
push
fcomps
sub
adc
jns
outsb
push
cmp
cmpb
mov
hlt
mov
insl
out
out
cmp
and
dec
cmp
mov
ljmp
add
mov
ss
sbb
or
or
xchg
shr
xchg
rolb
inc
add
out
cltd
aad
fnclex
les
icebp
cmpsb
inc
push
sahf
adc
arpl
adcl
jmp
xchg
nop
outsl
add
sarb
xor
fdivr
mov
adc
test
fdivrl
adc
adc
adc
or
adc
cld
sbb
incb
outsl
outsl
imul
ret
xchg
fildll
or
or
cmp
dec
test
pop
adcb
es
mov
repnz
inc
inc
pop
into
fists
or
push
fistps
ds
arpl
jns
fs
add
test
sbb
cmp
sub
lock
jl
pop
jae
popa
jo
sarl
nop
cwtl
sbbl
sub
outsl
idivl
push
aas
je
shl
into
push
push
xor
push
shll
in
loope
sub
negl
push
xor
pop
add
sub
dec
idiv
xchg
pop
adc
adcb
pop
cmp
dec
push
inc
inc
xor
xor
nop
aas
pop
sub
mov
mov
into
and
nop
adc
dec
es
adcb
aaa
adc
pop
xlat
mov
loopne
mov
into
push
dec
xor
or
pushf
test
movsb
sub
add
hlt
sub
clc
inc
pusha
das
sarl
ss
fsubl
ljmp
loopne
cs
pop
addb
inc
lods
xchg
js
fdivl
and
jae
cmp
repz
sub
mov
daa
xor
or
fbld
int
aaa
and
mov
sbb
dec
xlat
adc
inc
and
movsl
fwait
or
add
sub
jl
imul
lahf
xor
pop
or
lods
and
mov
fs
push
clc
xor
pop
data16
mov
xchg
push
and
cmp
mov
jb
cmp
or
add
add
ljmp
add
push
dec
xor
cs
leave
cmp
inc
inc
inc
pushf
jmp
aam
inc
pop
xor
rcll
push
loopne
xorl
adc
iret
mov
adc
sub
out
adc
sbb
adc
xorl
inc
loopne
rorb
stos
clc
and
test
popa
sbb
mov
pop
mov
dec
ss
mulb
fimuls
lock
mov
xor
jle
jnp
out
push
xchg
mov
cmp
insl
daa
xor
fdivrl
pop
jmp
cwtl
popf
xor
add
ljmp
insb
add
cmpb
sub
das
in
pop
pop
pop
adc
mov
pop
aad
lcall
mov
pusha
adc
or
push
sti
dec
jo
lock
pop
loop
js
inc
sub
lcall
push
inc
mov
scas
test
mov
or
sbb
movsb
inc
imul
bound
sete
mov
push
inc
xchg
pop
xchg
xlat
pusha
push
ja
movsb
xor
mov
popf
sbb
rorl
xchg
gs
mov
push
test
push
es
ja
icebp
and
xor
mov
rcrl
or
xchg
movl
insl
clc
mov
sub
cmpsl
inc
sub
push
testb
dec
and
pushl
push
pop
sbb
cmp
mov
xchg
test
push
mov
push
xor
data16
imul
fimuls
adc
pop
popa
sahf
js
mov
jne
pop
or
or
pop
shlb
stc
inc
adc
fdivr
xchg
dec
jle
aaa
cmp
mov
push
lea
mov
or
ja
mov
and
mov
add
adcb
fnsave
imul
xchg
dec
push
push
imul
jmp
flds
daa
and
mov
jo
addl
clc
cli
je
adc
xorl
lock
jge
sub
fs
inc
xchg
fwait
mov
mov
fmuls
sub
imull
or
in
nop
jmp
mov
cmp
cmp
inc
add
and
hlt
mov
mov
je
imul
xchg
rorb
xchg
js
xor
fists
push
adcb
dec
pop
addr16
cmp
testl
loope
sbb
inc
dec
dec
jo
fisubl
push
add
dec
pop
xchg
lods
push
call
les
sub
or
add
or
stos
add
test
loope
xor
hlt
clc
add
jnp
jns
jp
mov
add
mov
push
jbe
cmp
daa
pushf
xorb
mov
test
jne
fistpll
es
push
adc
mov
outsl
jg
mov
sbb
inc
stc
sub
pop
popa
xchg
push
xor
pop
add
or
cwtl
lods
or
xor
fcompl
loopne
jne
pop
mov
les
jmp
leave
mov
dec
pushf
jl,pt
clc
dec
lret
mov
or
sbb
adc
cmp
inc
sbb
mov
sbb
add
imul
push
enter
lcall
enter
mov
int
rolb
adc
inc
mov
mull
inc
or
jecxz
dec
jne
inc
jno
or
xchg
push
mov
inc
inc
mov
xor
sbb
fiadds
ds
pop
xchg
out
or
adc
inc
xor
xor
jo
inc
dec
add
leave
mov
mov
aaa
push
push
adc
xor
jne
dec
pop
aad
dec
xor
lock
adc
fdivs
xchg
inc
xor
loope
cmp
xor
dec
clc
fprem
adc
mov
sub
add
leave
mov
aaa
push
lods
lret
movsb
jl
inc
iret
jnp
push
and
lock
sub
jae
in
cmpl
or
pop
sbb
jbe
jmp
jle
mov
imul
dec
xor
xchg
clc
adc
push
mov
or
sbb
cmp
nop
test
pusha
xor
push
mov
lock
sbb
mov
cli
addl
insl
popa
js
popa
addr16
add
scas
xchg
cs
inc
outsb
jg
jbe
jb
pop
push
dec
add
aam
arpl
sbb
lcall
cmp
das
xchg
xchg
out
cs
cltd
mov
push
xor
mov
add
clc
lea
mov
or
cmp
jle
inc
aad
lret
ret
sub
lock
jb
jl
sub
push
sbb
add
lahf
insl
call
push
push
pusha
cmpsb
decb
aam
scas
jecxz
push
lret
fldt
faddp
lock
pop
xchg
clc
fstpl
fwait
xor
loope
or
mov
addr16
pop
pop
lahf
jge
dec
std
dec
inc
pop
sub
push
inc
push
push
dec
adc
inc
dec
dec
dec
inc
nop
pop
daa
sbb
dec
and
add
mov
fistpll
sbb
pop
add
sbb
adc
dec
mov
ja
sub
mov
lock
sarb
sub
out
rolb
movsl
push
rcrb
in
xchg
aaa
sub
ds
scas
sbb
and
test
inc
add
test
mov
nop
jns
mov
mov
push
add
movl
cmp
xlat
inc
clc
mov
add
cli
adc
push
adc
adc
or
sarb
lock
fs
add
aaa
addl
jecxz
push
inc
jecxz
push
cmp
out
or
or
inc
jb
mov
pop
sub
cmp
cmp
js
pop
or
xor
movsb
pop
push
push
push
adc
pop
inc
push
ret
mov
mov
jb
outsb
ret
or
xchg
inc
les
ljmp
jnp
icebp
add
dec
jg
xor
mov
cmp
mov
jbe
mov
mov
sbb
dec
shlb
clc
mov
push
mov
sub
rol
push
sub
loopne
mov
dec
popa
bound
jb
outsb
adc
int
inc
add
push
mov
jo
jnp
arpl
mov
ret
xchg
movsb
mov
sbb
inc
aad
sbb
sbb
push
push
sub
cmp
pop
sti
push
add
push
inc
xor
xor
xlat
sbb
jne
xorb
mov
and
pusha
mov
jne
pop
mov
sub
aas
adc
das
in
jmp
leave
adc
add
xchg
xor
dec
movsl
adcl
inc
jne
xchg
mov
enter
jb
pop
cmp
mov
jl
sbb
icebp
push
idivb
jne
inc
into
sub
mov
push
mov
dec
call
nop
adc
jnp
hlt
cmp
or
subl
add
or
sub
lret
xor
sbb
adc
sub
or
adc
into
pop
loop
jmp
adc
movsb
fsts
or
adc
adc
add
mov
pop
add
popa
mov
add
sbb
fwait
mov
sub
fxtract
mov
mov
push
or
push
dec
outsb
dec
gs
mov
jbe
add
pop
inc
push
frstor
pop
push
andl
inc
add
push
inc
arpl
pop
inc
outsl
outsl
insb
gs
push
rcrb
push
scas
push
or
bswap
ret
es
xor
adc
insb
mov
add
rcr
jb
test
xor
inc
push
add
push
xor
rolb
mull
xorb
scas
hlt
cmp
cmp
js
sahf
ret
sbb
loopne
xlat
xor
rorb
ret
push
sub
mov
add
pop
mov
cmc
and
or
pop
add
inc
fcoml
gs
push
pop
push
xorb
fmuls
xor
jns
jmp
rorb
clc
sub
adcl
inc
push
iret
or
mov
jp
lea
mov
movb
mov
fsubrl
test
dec
pop
fmull
xrelease
or
ret
pusha
pop
cmp
mov
add
xlat
out
or
test
xlat
pop
in
jle
loopne
ljmp
xor
ret
stos
jo
loopne,pn
testb
stos
in
mov
cld
inc
popf
in
sbb
test
js
lea
fldt
and
aas
adc
cmp
jl
push
push
loope
inc
in
sbb
scas
inc
sbb
std
and
fwait
or
dec
jne
xor
mov
and
inc
repz
cmpb
cmpl
push
sub
pop
inc
stos
push
add
add
test
cmp
push
jp
mov
cmpsl
dec
loopne
test
cmp
xor
and
xchg
or
pop
out
pop
xor
cld
xchg
call
push
movsl
shlb
pop
sbb
jne
and
mulps
inc
sub
xor
clc
mov
daa
and
jne
popa
cmp
jo
or
inc
adc
pop
push
xchg
mov
pop
jle
fimull
or
lds
push
cmp
inc
push
inc
add
sarb
ljmp
cmp
jmp
cmp
andb
adcb
rorb
sbb
mov
xor
push
push
add
sub
or
lock
or
dec
xchg
and
sbb
mov
das
adc
cmp
pop
sbb
mov
jns
cmp
push
imul
cmp
int
outsl
jecxz
mov
inc
pusha
in
pop
clc
push
imul
sbb
bound
mov
dec
or
xor
adcb
pop
add
and
xor
dec
pcmpgtb
aaa
cmp
sub
and
cmpw
or
orb
jbe
push
sub
inc
daa
cmp
add
dec
cmp
fwait
add
cmp
pop
mov
inc
dec
cmpsl
jg
pop
pop
popf
push
jmp
cmp
and
pop
jno
xlat
pop
test
push
loop
mov
ss
pop
pop
inc
rolb
mov
lock
xchg
push
and
add
sub
jo
add
pusha
scas
adc
ret
cmp
je
jb
sbb
cmc
int
in
pop
in
popa
pop
add
jbe
lods
pop
addr16
mov
inc
hlt
cmp
jne
sub
nop
decl
lcall
lods
xchg
sarb
movsb
cmp
movsl
in
cmp
ss
adc
mov
in
or
int3
sub
jl
inc
push
xor
pop
adc
fs
aam
mov
cmp
add
movsb
push
add
das
push
cmp
sbb
jle
cmp
lahf
ret
cmpsl
enter
add
hlt
pop
dec
imul
jb
or
push
lcall
push
repz
movsl
push
inc
push
aad
dec
fs
dec
xchg
add
mov
imull
xor
add
dec
hlt
add
mov
lock
mov
xchg
adc
xchg
out
lahf
and
cmp
jne
mov
pop
loopne
icebp
mov
call
push
cmp
pop
push
push
test
mov
sbb
mov
add
sub
jne
enter
jbe
mov
and
mov
cmp
add
xchg
cmp
mov
dec
push
mov
les
repnz
xor
jae
ret
add
int
add
inc
mov
bound
add
jne
aas
ds
data16
adc
in
and
mov
inc
dec
ret
push
dec
or
push
pop
enter
xor
dec
test
sbbl
test
push
cld
or
inc
cwtl
rorl
adc
adc
fiaddl
add
push
mov
fmull
cmp
iret
aas
lock
push
inc
jne
pushf
dec
lahf
movsb
sub
ljmp
scas
sahf
pop
movsl
xchg
lcall
and
pop
test
outsl
outsb
or
rdmsr
jb
sbb
add
cmp
mov
mov
mov
jo
icebp
pop
cmp
push
mov
popa
data16
inc
mov
adc
ja
inc
daa
xchg
pushf
popa
cmpl
shlb
fiadds
lea
push
loop
imul
add
outsb
gs
lea
adc
add
ret
ds
out
xor
in
leave
inc
mov
mov
inc
mov
inc
inc
pop
jnp
pop
inc
push
mov
loop
add
jo
sarb
lea
inc
mov
adc
xlat
aas
test
mov
xchg
jg
or
ucomiss
dec
jno
push
sbb
inc
outsb
je
jns
inc
aas
add
cmpsl
fildll
add
clc
fwait
sub
xor
out
and
dec
aas
aas
pop
dec
roll
shll
out
rcrl
sub
clc
aam
add
rcll
push
push
mov
add
inc
jae
jge
test
fbld
btl
and
test
pop
xor
jo
roll
nop
and
cmp
fidivrs
mov
adc
addps
clc
dec
sbb
dec
push
incl
push
jo
push
cld
es
dec
pop
add
negl
add
pop
not
shrl
add
test
mov
adc
je
je
inc
mov
sar
outsw
ficomps
push
add
outsl
pop
xor
cmp
sysenter
or
imul
dec
ud0
incl
adc
and
and
inc
popa
arpl
pop
std
adc
in
outsl
insb
pop
decl
ljmp
outsb
or
xchg
adc
add
stos
or
shrl
jbe
add
call
add
addb
jne
orb
dec
cmp
pop
shrl
pop
out
or
mov
cmp
adc
push
cmp
add
push
sub
mov
push
cwtl
push
push
add
jp
sub
push
fiaddl
stos
pop
pop
jecxz
sbb
pusha
adc
add
mov
or
or
pop
ret
subb
push
jns
gs
bound
adc
or
push
inc
cld
adc
push
mov
inc
cmp
pop
add
jne
mov
out
outsl
insl
popf
jae
adc
decl
inc
std
bound
xor
out
pop
in
mov
ja
sti
inc
pop
pop
inc
push
push
cmp
or
mov
imul
roll
lods
clc
push
add
push
jb
insl
popa
inc
je
cmpsl
cmp
push
rcrb
mov
push
stos
cmpsl
inc
movsl
jmp
push
cmpsl
add
or
or
xor
push
mov
jns
adc
movsl
sub
pop
int
fistpll
je
add
mov
adc
inc
stos
mov
decl
push
and
sbb
or
in
je
fwait
pushf
pop
mov
mov
dec
cld
mov
mov
mov
or
lods
xor
push
inc
jecxz
imul
push
or
das
sub
mov
push
clc
mov
movsb
aam
notl
addl
das
in
add
mov
inc
js
push
in
pop
xlat
add
push
stos
cmp
lea
mov
dec
ja
push
mov
lods
leave
jl
das
test
daa
daa
mov
jl
jmp
cmp
push
gs
les
imul
mov
xor
push
or
cwtl
faddl
pop
adc
add
test
ljmp
or
push
out
xorl
orb
inc
push
out
ss
push
adc
imul
push
adc
nop
cmpl
es
outsl
jae
push
out
jl
cmp
xor
xchg
addb
scas
or
dec
incl
pop
stos
sbb
out
dec
and
cmp
push
push
lcall
jl
pop
inc
sbb
jns
int3
popf
rcll
jae
pop
push
lahf
push
cwtl
pop
push
lcall
mov
dec
pop
mov
imul
jo
pop
push
push
jo
leave
add
mov
test
and
push
cwtl
out
mov
fldl
pusha
fbstp
dec
stos
iret
pop
test
fidivl
cmp
xor
das
aaa
xor
test
push
inc
mov
and
fs
or
inc
pop
and
jae
or
jb
rorb
inc
sub
ret
adc
inc
js
push
bound
popa
out
adc
sbb
icebp
add
or
daa
addb
fcmovb
sbb
adc
push
rcrb
cmpsb
or
and
jg
push
aas
mov
mov
jp
inc
push
subb
imul
add
adc
sub
lea
add
outsl
xor
push
mov
cmc
fcmovb
cmp
test
and
loopnew
mov
mov
int
jge
sub
cmp
adc
sarl
adc
push
or
flds
adc
sbb
inc
sbb
sbb
lcall
sub
sub
lcall
xor
imul
imul
push
push
sbbb
pop
add
adc
push
cwtl
adc
roll
xchg
xor
cld
jo
inc
sbb
sbb
pop
sbb
mov
or
ret
lods
movsb
xchg
or
inc
mov
or
pusha
add
push
xor
sub
push
imul
sub
push
orb
inc
inc
pusha
and
sbb
inc
adc
and
movsl
or
and
sbb
push
lock
in
inc
lea
in
mov
insl
push
inc
and
push
call
testb
xor
lods
pop
sbb
mov
mov
adc
fcoms
mov
adc
add
pop
aam
test
les
push
rorl
sbb
xchg
shr
setge
sbb
insb
movsl
jge
jb
jmp
jbe
cltd
mov
aam
or
shrb
imul
psrlq
rolb
xor
pop
ficoml
movsl
and
je
popa
sub
inc
add
jmp
sub
push
inc
int3
cmp
pop
les
pop
dec
fwait
push
mov
jae
enter
push
push
les
sarb
sbb
rol
dec
and
enter
push
fwait
inc
jge
fildl
fdivs
pop
lcall
jmp
jbe
inc
mov
icebp
push
mov
push
or
mov
adc
adc
push
add
inc
in
ficoms
or
adc
daa
cwtl
fisubl
jb
outsb
adc
mov
xchg
das
jge
add
xchg
aaa
arpl
mov
outsl
into
or
sub
cmpsb
adc
add
repz
fdivrs
gs
mov
pop
inc
adc
sbb
ljmp
xchg
lcall
xchg
and
push
ret
push
add
test
pop
loopne
fwait
xchg
xbegin
leave
cmp
jae
adc
cld
mov
mov
mov
les
in
les
add
cmp
fs
data16
xor
adc
cwtl
xor
cmp
jecxz
les
movsb
and
jae
int3
push
push
push
orb
add
cltd
outsb
fcomps
mov
fcomps
cmp
dec
dec
or
xchg
inc
cpuid
and
sub
push
movsl
sbb
push
push
pcmpeqd
popa
mov
add
cmpsb
sbb
xor
out
jle
rolb
rcll
outsb
inc
and
in
xchg
mov
cmp
cld
shlb
leave
inc
push
pop
in
mov
rcl
add
adc
out
mov
arpl
inc
mov
push
and
ja
push
dec
cli
mov
or
mov
ret
inc
inc
or
loopne
or
cmpl
or
cmpsl
add
inc
fs
ret
push
idivb
xor
and
jns
add
xchg
rol
lahf
push
sbb
xchg
jo
pop
jns
daa
push
adc
adc
pusha
xchg
incl
pusha
les
jns
push
sahf
push
mov
push
mov
add
mov
push
std
je
inc
mov
and
add
or
cmp
pop
test
and
pcmpeqb
add
mov
sbb
or
in
ret
insl
and
mov
cmpsl
add
scas
orl
add
loope,pn
xchg
jns
sub
mov
pusha
push
sti
inc
jmp
dec
insb
ret
fidivs
test
jb
mov
add
dec
xchg
stos
hlt
jl
inc
push
push
nop
add
mov
mov
push
pop
js
or
cmp
scas
pop
sub
cli
outsl
jb
jp
out
xor
pop
dec
mov
leave
daa
pop
daa
cmp
insl
fsubs
and
sub
and
mov
jne
push
mov
add
jne
data16
cltd
and
pop
sbb
outsb
and
fldl2e
or
or
xor
or
imul
cmp
jl
jo
mov
bswap
daa
in
shl
orl
fistpl
cmp
mov
enter
fdivrl
add
divb
fdivs
outsl
das
loopne
cld
mov
jne
test
adc
xchg
sarb
inc
int
pop
jbe
test
mov
daa
cli
movsl
ds
sub
jnp
push
and
ds
lods
mov
add
jg
mov
or
sub
rsqrtps
lods
aam
cmpl
ret
pop
pushf
pop
sbb
cmovg
enter
dec
jns
mov
daa
push
aaa
inc
insb
adc
inc
jo
test
je
fldl
adc
cmpsb
jo
jne
clc
mov
fwait
mov
dec
and
and
and
pop
mov
pushf
fmuls
adc
mov
jg
call
ds
fisubrs
cmp
roll
jne
jo
mov
ret
das
stos
add
or
shll
stc
ljmp
gs
das
push
and
das
sub
add
sbb
dec
outsl
jp
popa
das
xor
xor
sub
imul
cmp
dec
and
es
pusha
jb
jb
sub
push
and
enter
pop
cmp
and
xor
out
adc
pop
sbb
jmp
jns
hlt
inc
sbbb
insl
and
les
xchg
push
xor
insb
mov
mov
sub
xor
cwtl
inc
inc
mov
jl
pop
adc
mov
subl
inc
outsl
inc
pusha
mov
mov
aad
push
mov
mov
cmpsl
cmp
mov
jg
clc
pop
fcomps
pushl
lea
mov
jnp
ret
mov
jl
inc
out
negb
jns
pop
jmp
cmpb
add
clc
mov
mov
sbb
inc
dec
inc
sub
fcoms
into
push
test
roll
cmp
fists
pop
cmp
and
pcmpgtd
sbb
sub
inc
add
aaa
pop
fdivs
mov
cmp
aaa
cmpsl
cli
loope
inc
xchg
jmp
push
imul
xchg
roll
cwtl
nop
or
xchg
cmpl
cmpsl
fmull
cmp
addr16
mov
dec
mov
fadd
sarl
add
jo
out
cmp
clc
nop
orl
movsl
xor
and
mov
sbb
popf
pop
jl
popa
or
arpl
test
cld
mov
clc
jge
sbb
mov
hlt
mov
xorl
jl
push
jmp
aas
mov
push
inc
call
sub
jne
js
xor
arpl
orl
bound
decl
movl
jecxz
xor
mov
mov
sahf
cmpsb
adc
fcmovnu
lea
cmpsl
mov
mov
pop
pavgw
movsl
cmp
outsl
xchg
shrb
or
cld
es
int3
push
cld
mov
pop
mov
fbld
ret
adc
mov
mov
ss
inc
je
je
dec
in
xchg
idivb
fadd
inc
loopne
push
in
call
pop
adc
adc
adc
shrl
fsts
pusha
mov
pop
dec
fwait
or
in
imul
xor
dec
lods
loop
bnd
je
push
mov
mov
jbe
mov
mov
xor
lret
jmp
or
dec
push
push
lds
mov
int
fmuls
pop
fistpl
inc
add
pop
and
xchg
mov
push
out
sub
pop
inc
insl
push
mov
or
dec
dec
mov
addr16
testl
push
jae
lret
sbb
sbb
inc
sbb
mov
xchg
xchg
or
orb
add
lods
and
fisttpll
fdivs
punpckhbw
outsb
and
push
loopne
jbe
adc
dec
gs
sbb
out
jb
sub
outsl
insb
adc
outsl
jb
pop
ret
popa
jb
insl
jae
fistpll
xchg
cmp
out
in
and
mov
or
adc
insb
aaa
fwait
mov
or
push
in
fnstsw
jbe
pop
xor
xor
xor
dec
aas
dec
outsb
push
gs
je
sbb
add
das
mov
inc
xor
add
outsb
add
aas
add
in
dec
jne
popa
pop
insl
add
dec
popa
outsb
rcrb
fsubs
inc
xor
xchg
push
test
mov
jl,pn
add
mov
and
and
push
add
add
mov
adc
mov
dec
into
cli
pusha
xor
or
and
or
jne
dec
fstpl
inc
es
xlat
sbb
and
fidivrs
mov
add
sub
mov
inc
and
loopne
stos
cmp
sub
sbb
adcb
add
leave
jle
push
ficoms
pop
sti
or
mov
add
xchg
add
outsl
xor
fsincos
test
popf
or
xchg
cmp
jg
push
add
adc
mov
xchg
clc
les
stos
pop
or
or
sbb
fiaddl
sub
pop
mov
adc
dec
popf
ja
mov
mov
mov
cmp
or
or
in
outsl
int3
enter
lods
mov
daa
popa
cwtl
jmp
pop
adc
fnstsw
and
mov
push
mov
sbb
nop
cmp
add
add
aas
xchg
cwtl
xchg
mov
mulb
mov
xlat
inc
push
adc
push
pusha
out
aam
pop
stc
sub
xor
and
sahf
test
inc
fsubrl
imul
jl
into
cmp
push
mov
stc
lcall
push
xchg
test
add
lcall
lods
push
push
cs
nop
lock
in
jnp
push
int3
cmp
or
cmp
mov
xor
mov
mov
or
insb
ja
xor
push
imul
roll
jbe
add
je
xchg
dec
enter
aas
jl
pop
jo
popa
push
or
dec
imul
pop
pop
sti
fists
sbb
push
push
pop
js
js
adc
sbb
pop
out
xorb
dec
mov
dec
popa
js
filds
push
inc
shr
gs
or
pop
mov
or
popf
das
adc
mov
roll
add
xchg
inc
mov
jae
adc
mov
push
ud2
nop
or
inc
xor
inc
sbb
push
push
rcrb
fwait
push
imul
ja
cmpsb
sub
pop
adc
mov
in
mov
jge
inc
jbe
xchg
xchg
push
test
ret
adc
sbbl
cmp
mov
out
mov
test
nop/reserved
xor
adc
inc
pusha
dec
stos
adc
movsb
cmp
mov
or
test
jo
cltd
adc
addr16
dec
pop
adc
push
bound
add
mov
or
mov
pop
mov
add
sub
loop
sub
pop
lret
adc
test
rcrl
js
pop
dec
cs
les
scas
push
and
pop
loop
pop
add
cmp
cmp
dec
pop
lods
pop
mov
cmp
and
lock
outsb
popl
push
adc
imul
or
pop
jns
nop
in
insl
mov
outsl
cmpsl
cld
sub
aaa
or
dec
fs
dec
inc
sub
mov
xor
pop
adc
sbb
xchg
adc
arpl
inc
js
nop
and
dec
dec
out
xor
dec
pushf
movsl
push
push
xor
js
jmp
imul
rorb
sub
cmp
shlb
adc
xchg
aaa
stos
or
sub
sub
mov
lea
enter
pop
jle
jo
loopne
out
icebp
sbb
leave
cmp
fbld
cld
test
jne
mov
es
pop
insl
xor
icebp
xor
fwait
andb
je
dec
sbb
jo
sbb
cmp
push
xor
push
xor
outsl
das
mov
lea
pop
xchg
add
sbb
lret
fidivl
jno
nop
fcmovb
test
ret
sub
jge
pop
ljmp
test
pusha
sti
testb
and
push
ja
sub
cli
enter
mov
jbe
call
sbb
mov
bound
adc
nop
pop
add
cwtl
or
pop
dec
push
or
xchg
test
push
cmp
mov
jo
xor
lcall
jae
cmp
les
je
or
push
callw
lods
cld
mov
cli
cmp
js
outsl
std
xor
sub
out
test
xchg
in
mov
pop
dec
in
dec
pop
cli
xor
inc
mov
in
lcall
call
pop
repz
lock
inc
aas
dec
add
test
shl
xor
jb
xor
add
pop
sbb
repz
cli
icebp
mov
lock
mov
gs
imul
sarl
or
dec
jle
push
std
push
push
lea
mov
mov
data16
mov
cld
mov
movsl
add
xor
and
shlb
into
pop
jmp
and
inc
fldenv
add
xorb
adc
or
xor
and
ficomps
enter
cmp
inc
cmc
jnp
es
das
xchg
lock
cmpl
lock
cmpsb
jo
mov
mov
xchg
adc
shrb
mov
add
mov
outsb
or
inc
inc
mov
jmp
sbb
out
sbb
cltd
jns
or
push
xchg
pop
inc
ja
add
pop
mov
inc
or
sub
lds
lds
add
out
out
lock
and
jo
mov
js
or
fldt
outsl
jb
sub
add
and
nop
or
lds
arpl
xchg
jbe
sub
movb
lahf
jbe
jbe
jl
or
insb
push
mov
cmp
push
fs
orb
sub
in
pop
and
sbb
sbb
inc
rcll
push
sbb
out
cmp
ja
fs
lock
inc
imul
gs
mov
add
movzbl
pop
rcrb
cmpw
pop
or
and
sbb
fsubrl
dec
cmpl
xchg
cmp
enter
sar
cmovb
inc
push
push
jb
mov
js
clc
xor
mov
aas
jnp
add
or
mov
xchg
ret
xlat
cmc
sub
adc
or
or
inc
js
mov
xor
and
and
cmpsl
icebp
lods
jp
or
js
mov
mov
in
sub
mov
inc
ret
sbb
xchg
test
push
ficoml
mov
arpl
sti
or
xchg
je,pn
cmpsl
or
mov
and
cmpsl
lret
andb
sub
insb
bound
enter
add
add
push
adc
cld
push
pop
insb
hlt
in
add
fmul
jmp
inc
adc
loope
add
add
dec
mov
mov
jmp
sbb
or
add
pop
in
xchg
cmp
cmp
and
sub
push
xor
fwait
push
and
xor
and
push
inc
loope
cmp
lock
mov
xorl
mov
aaa
test
add
xchg
adc
in
jne
hlt
mov
xor
xor
loope
incl
xor
in
xchg
scas
adc
mov
fwait
adc
repz
push
test
or
sbb
dec
lods
xchg
aaa
xor
dec
jl
jnp
inc
push
and
cmpb
jmp
inc
xor
and
jno
inc
sbb
add
pop
loopne
jnp
add
mov
xor
and
fdivrs
jnp
pushf
test
orl
out
sbb
das
fmul
lcall
fsub
in
cmp
pop
jle
mov
fsubl
xchg
cli
nop
jp
cld
cli
je
push
xorl
sarb
cwtl
jne
dec
mov
or
or
inc
inc
cmpsl
in
pop
loopne
jo
add
dec
xlat
pop
or
sub
add
adc
and
hlt
jmp
dec
or
and
jge
xchg
lods
and
jbe
push
test
cmp
jle
loop
jb
hlt
subb
mov
cmp
push
add
and
or
aas
pop
and
add
es
pop
jb
rclb
lods
cmp
ret
lds
jnp
arpl
lods
das
fs
xchg
sub
sub
lods
jno
cmp
icebp
add
jmp
mov
xor
sbb
cs
imul
push
dec
dec
ds
pushl
mov
out
jmp
xchg
in
shlb
jl
mov
movsb
idiv
xor
cmpb
sbb
jmp
ret
xchg
mov
push
lock
add
dec
je
add
jmp
addr16
iret
loop
mov
ja
jae
inc
mov
sbb
push
fldcw
ja
and
popa
xor
in
jle
xchg
test
ret
xor
inc
data16
jecxz
or
das
and
xchg
rclb
add
jp
call
imul
pop
mov
push
dec
xor
dec
and
divl
gs
jg
pop
test
mov
mov
mov
movb
filds
lret
add
pushl
testb
cmp
jle
inc
fsubrl
loopne
mov
mov
ljmp
jne
movzbl
pop
fnsave
scas
popl
mov
pop
cwtl
add
push
lock
in
jns
mov
fs
sub
lds
pop
push
ja
or
das
lock
add
mov
push
push
and
cmp
adcb
in
push
adc
lret
rolb
insb
das
nop
pop
subl
sbb
ja
addb
sub
pop
or
jbe
cmp
push
dec
add
or
mov
push
or
mov
jmp
daa
sbb
test
or
sub
add
push
adc
fmull
out
sbb
es
fs
das
inc
ljmp
xor
outsl
and
sbb
dec
cld
iret
or
jmp
jno
mov
lock
mov
test
xor
ret
in
mov
lds
rorl
mov
add
loop
and
push
add
add
sbb
mov
cmp
inc
jbe
mov
pop
test
sub
inc
sub
xchg
cmp
mov
mov
mov
sbb
loopne
lods
push
in
and
js
jmp
or
pop
cmp
test
mov
fsubs
add
or
pop
mov
pop
mov
sbbb
or
mov
or
aam
pop
pop
adc
xchg
jne
je
dec
ret
loopne
das
sbb
cmp
adc
out
jb
shll
add
adc
scas
sbb
add
call
pop
xchg
cmpb
pop
cmp
add
jmp
scas
inc
aam
or
xchg
xor
and
push
push
loope
ljmp
add
push
push
les
mov
ja
sbb
push
inc
inc
inc
test
mov
jo
jg
dec
inc
push
inc
add
mov
add
cmpsl
mov
je
lcall
hlt
cmp
pushf
dec
sub
mov
sub
sbb
push
cld
popa
and
add
or
sub
out
push
sub
les
or
or
dec
add
and
inc
add
and
or
incb
jge
clc
push
xor
and
jno
jmp
in
add
mov
adcl
movsb
jg
jo
add
mov
jp
addb
sbb
jl
add
jge
clc
add
ja
cmpsb
sbbb
jb
je
dec
je
push
das
jmp
or
daa
cmp
cs
sub
cmpsb
or
adc
pop
mov
nop
mov
outsb
cmp
adc
and
adc
mov
ja
and
jb
mov
jo
xor
pop
push
movsb
mov
cmp
add
mov
xor
fcompl
sub
sarl
loope
les
sub
scas
pop
adc
add
push
ret
out
mov
add
xchg
cwtl
xchg
insl
fwait
jo
scas
je
xor
xchg
mov
inc
pop
fcompl
mov
pusha
mov
and
fdivs
sbb
add
jae
cmpsl
pop
adc
adc
nop
sbb
testb
subb
xchg
push
push
mov
xchg
push
adc
xor
add
and
test
enter
mov
adc
pop
out
cmp
cmp
dec
mov
and
sbbl
push
jmp
or
xchg
dec
or
and
popf
xchg
and
jo
push
fiaddl
ret
mov
test
or
jmp
loope
inc
js
or
js
shlb
loopne
ss
mov
ja
mov
mov
stc
lods
mov
mov
cld
mov
lock
or
mov
pop
xchg
cmp
addb
pop
loope
dec
mov
in
pop
psubsb
aaa
inc
xchg
mov
dec
sbb
jg
xor
shr
inc
and
jg
jp
fnstcw
orl
popl
or
gs
pushf
sbb
out
icebp
testb
aas
sub
sbb
adc
fisttpll
cld
and
je
pop
daa
outsb
add
jecxz
sub
push
mov
mov
lock
inc
divl
jbe
add
xor
push
dec
dec
daa
rolb
pop
arpl
out
inc
rclb
call
std
sbbl
aam
cmpsl
in
outsl
inc
push
mov
mov
inc
cwtl
insl
fsubrs
cmpl
je
cmpb
or
xor
lds
mov
mov
sbbl
rorb
test
ret
ret
cmp
sub
sub
enter
push
call
xor
and
sbb
inc
pusha
inc
and
loopne
cmp
cmp
addr16
sbb
imul
pusha
js
jne
mov
push
movsl
xorb
in
clc
in
int3
les
mov
mov
shlb
xchg
daa
pushl
xor
pop
pcmpeqd
mov
adc
sti
add
cmp
pop
mov
mov
and
cld
and
jmp
or
mov
and
mov
push
mov
sbb
dec
mov
xchg
xchg
cwtl
ret
test
cmp
leavew
test
push
mov
push
sbb
outsl
add
dec
cld
lods
dec
hlt
adc
sub
ljmp
pop
sbb
jne
es
xchg
or
adc
lret
in
sub
or
leave
dec
pusha
jne
cmp
imul
add
add
add
out
mov
sub
lods
and
jp
add
jmp
ret
pop
or
inc
repz
jle
enter
sbb
inc
sbb
lock
pop
sbb
xchg
loopne
and
data16
call
subl
fiadds
dec
jg
cmpsb
lea
dec
loopne
insb
sti
cs
mov
mov
cmpb
or
jb
jge
mov
shr
add
push
jbe
adc
ret
or
orl
dec
fdivrl
mov
and
mov
scas
roll
push
pusha
dec
rolb
lahf
inc
dec
and
loope
je
jmp
sub
imul
clc
push
push
repz
out
sub
push
call
insb
test
je
inc
add
repz
add
jo
push
fmuls
dec
jg
aam
insb
ss
pop
inc
and
in
inc
outsb
add
repz
mov
ljmp
pop
lcall
or
pop
sbb
jle
loopnew
pop
in
cld
mov
push
sarl
shrb
mov
xor
adc
add
sub
sbb
in
jmp
icebp
js
popa
or
dec
pop
dec
or
xchg
cltd
sub
fsubl
mov
jbe
loope
cmp
jg
sub
fs
sbb
dec
adc
pop
orl
cmp
adc
push
mov
mov
int
add
je
mov
xor
sbb
mov
add
std
xor
jae
mov
dec
imul
enter
add
add
xlat
sub
je
inc
insl
push
mov
arpl
shlb
imul
std
pop
pop
push
add
inc
jne
data16
fsubl
add
imul
das
mov
imul
jns
push
adcl
or
test
inc
add
pop
into
push
shlb
nop
adc
adc
les
mov
xlat
pop
jg
dec
pop
or
lea
ret
push
mov
std
adc
cmpl
jne
mov
dec
loop
pop
nop
or
les
push
enter
xchg
jo
xor
mov
cmpl
jg
adc
inc
mov
sbb
xchg
lods
jae
or
dec
jecxz
leave
int3
shlb
test
push
icebp
outsb
test
sti
pop
xor
mov
mov
dec
into
and
adc
icebp
xchg
in
loope
scas
cmp
or
push
inc
push
dec
lock
xchg
jge
pusha
push
sbb
call
inc
add
sbbb
in
adc
sbb
xchg
and
push
enter
inc
fs
out
cmp
test
je
push
jb
xchg
mov
or
pop
enter
cmpsl
inc
and
mov
dec
loopne
or
stos
test
cwtl
push
je
inc
lock
mov
outsl
lret
icebp
jmp
repnz
add
in
mov
pop
sub
mov
inc
mov
sbb
js
xchg
add
ljmp
add
or
dec
push
cmp
lock
inc
inc
push
sub
dec
ds
cmpsl
rcl
xchg
cmp
or
or
inc
in
inc
popa
pop
xchg
popa
jl
outsb
and
sub
xor
nop
test
movsb
inc
rep
mov
jns
jo
cltd
into
xchg
and
nop
cmpsl
stos
and
or
mov
scas
cmp
rcrl
xchg
xchg
sub
add
movsl
out
stc
mov
mov
pop
scas
mov
scas
aam
pop
enter
adc
mov
addr16
fldl
int3
orb
cmpb
je
push
das
in
fs
mov
mov
nop
cmpsl
add
or
xor
stos
jg
or
pop
cwtl
ficompl
adc
outsl
adcb
addb
mov
loope
add
jb
mov
cmpsb
dec
movsb
add
or
lret
test
xchg
cmp
test
popf
jle
inc
mov
or
mov
push
add
and
mov
push
and
mov
pop
xchg
pushl
jmp
mov
aas
add
cmpsl
pushf
movsl
or
cmp
or
pop
xor
push
scas
cmp
mov
inc
cltd
inc
roll
sub
outsl
orl
sub
cmp
cmpsl
out
add
in
push
or
roll
jne
mov
push
sub
pop
add
aam
push
add
fwait
aam
mov
add
xchg
sbb
lahf
sub
and
jmp
xor
xor
or
out
cltd
cwtl
andl
push
test
mov
lea
push
jle
mov
loopne
fucomi
das
sbb
lahf
mov
addr16
xor
test
cmp
insl
add
jo
lcall
idivb
cmp
jg
or
xor
adc
loop
loop
cwtl
inc
outsb
cwtl
in
inc
sub
add
xchg
add
mov
cwtl
out
sbbl
lock
push
in
in
mov
add
inc
test
js
shr
or
incl
mov
dec
push
jns
mov
cmp
cltd
test
ja
insb
test
and
inc
nop
cmp
andb
lods
mov
pop
push
push
mov
xor
popa
sub
notb
dec
imul
test
cli
jle
xchg
test
rcr
sarb
test
jl
cmp
ja
decl
movswl
cmp
jne
adc
dec
jne
sbb
dec
xor
adc
bound
add
mov
and
mov
and
pop
xor
shlb
cmp
cltd
xchg
jno
jbe
sub
addr16
or
mov
and
call
testl
clc
cld
ljmp
pop
je
sub
mov
sub
movsb
or
sbb
cmc
fstps
mov
inc
arpl
movb
jecxz
xor
enter
or
lds
inc
js
or
test
sub
aaa
dec
daa
adc
inc
clc
push
flds
fildl
xchg
lock
lcall
jb
lock
loopne
test
push
mov
in
les
jmp
rorb
xor
mov
xchg
jle
mov
add
adcb
jne
les
inc
xorl
shll
insb
in
sti
jno
and
aas
cld
add
sbbb
mov
loopne
popa
inc
mov
push
lahf
xchg
adcb
aas
test
push
outsb
push
push
ja
cmp
ret
rcl
hlt
lds
fildl
and
push
adc
into
jae
or
add
add
lret
add
and
mov
mov
pop
pop
mov
shrl
stos
hlt
hlt
dec
into
xchg
lods
add
mov
mov
xchg
cmp
jmp
push
sub
lock
mov
inc
jnp
lret
addl
push
sub
cmp
shrb
add
test
int3
cmc
add
mov
in
push
das
loopne
fs
shll
lock
aaa
das
sbb
out
jno
sub
mov
mov
xlat
ret
mov
push
jl
andb
incb
xchg
add
adc
sub
push
je
das
adc
ljmp
add
adc
sbb
xchg
sbb
add
adc
jl
ret
shrl
inc
sub
pop
push
imul
mov
sti
aas
mov
add
add
xchg
ret
jmp
aad
lds
in
nop
or
add
cmp
shll
jmp
popl
adc
fdiv
test
je
lods
out
add
daa
cmpps
ja
rorb
jo
call
push
sbb
pusha
mov
jmp
sahf
vmovups
push
sbbb
jmp
jge
jne
loop
mov
aaa
inc
inc
push
add
add
or
jmp
xchg
xchg
fiaddl
fcompl
and
test
cli
mov
cmp
pop
sti
mov
fcmovb
push
subl
sbb
mov
xchg
addb
mov
mov
icebp
or
mov
pusha
das
pop
jl
inc
push
imul
shll
out
clc
push
xor
loopne
or
cltd
int3
add
cmpsl
inc
jns
mov
mov
inc
cmp
outsb
inc
and
je
mov
or
push
push
mov
jmp
adc
imul
inc
dec
or
xchg
test
clc
hlt
xor
add
fneni(8087
inc
pop
push
push
pushf
sub
add
inc
test
push
sar
cmp
add
jns
mov
movsl
or
movsl
jne
addr16
push
add
and
mov
cmp
loopne
cmp
push
pop
sbb
je
pop
incb
jge
mov
iret
push
ds
push
adc
fs
es
xorl
lock
add
daa
call
and
sbb
dec
cs
in
push
sub
mov
xchg
pop
sub
add
pusha
adc
fwait
adc
add
or
sar
cmp
pop
je
xor
or
push
jmp
clc
in
and
cmpl
vmovapd
lahf
daa
mov
mov
push
incb
int3
xorl
or
mov
outsb
sar
int
cmp
add
add
and
loopne
xchg
xor
rorb
and
adc
repnz
sbb
int
push
lods
push
fnsave
pop
sub
clc
xchg
lods
adcl
test
xchg
aaa
pop
jns
out
inc
cmp
je
mov
mov
je
or
loopne
xor
ja
mov
mov
movsb
sysexit
cmp
jnp
push
jno
pop
lds
xchg
pusha
cmpsl
xor
pop
or
fisubs
cltd
push
push
cmpsb
jns
push
aaa
inc
sbb
adc
and
cmp
xchg
test
call
cmpsl
mov
andl
cmpsb
inc
mov
clc
daa
aam
push
adc
pop
lea
dec
and
jne
roll
mov
in
adc
adc
jno
or
xchg
incl
jge
adc
add
rclb
jno
xor
adc
aaa
pop
mov
mov
and
repz
jne
adc
sbb
and
imul
out
push
mov
cmp
mov
dec
jns
mov
fcoms
mov
jmp
fbstp
mov
lea
movzwl
add
or
dec
popa
lcall
int3
jb
inc
xor
lea
mov
test
je
mov
jne
int
lret
sbb
jne
mov
lret
addr16
add
dec
mov
testl
adc
cwtl
fcomp
pop
or
pushl
and
fildll
into
sbb
into
sbb
dec
or
mov
add
mov
jno
jmp
int3
int3
sbb
pop
cmpsl
cmp
mov
lcall
jae
or
int3
mov
sbb
cltd
in
sbb
jae
adcb
dec
sbb
dec
push
sbb
int3
inc
lcall
inc
lcall
and
outsb
dec
jae
jecxz
sbb
dec
int
and
and
push
sbb
inc
lcall
or
push
or
and
inc
lcall
pop
add
sbb
sbb
pop
jae
mov
sbb
mov
xor
sbb
dec
mov
sbb
dec
sbb
push
add
push
jmp
cmp
cmp
mov
add
xchg
sbb
and
or
add
sbb
xor
and
add
xorl
lds
sbb
inc
xchg
pop
adc
movsl
mov
and
pop
cmp
dec
sbb
jo
and
xchg
sbb
dec
add
and
gs
pop
sbb
jo
pop
cmp
pop
loopne
sbb
xchg
sbb
add
and
std
or
into
imul
inc
lcall
les
dec
jae
and
fists
xor
sbb
in
jno
sbb
mov
cmp
xchg
sbb
jno
lcall
xchg
pop
pusha
int
and
mov
add
xor
sbb
dec
icebp
xor
sbb
fwait
cmpsl
dec
enter
mov
les
sbb
out
inc
rclb
and
push
pop
fmul
add
xchg
mov
sbb
int
fs
std
pop
push
sar
xorb
mov
add
cmp
pop
sub
sbb
sbb
add
sbb
or
adc
push
jo
ret
sbb
pusha
add
sub
jo
leave
sbb
sbb
sbb
mov
sub
sbb
pusha
add
dec
sbb
stos
add
dec
clc
mov
inc
clc
mov
and
gs
aam
ret
ds
inc
js
xorb
sbb
mov
lea
or
mov
adc
repnz
dec
test
jb
inc
xor
lea
cmp
jbe
lea
mov
inc
dec
jne
cmp
mov
mov
xchg
push
in
into
in
xchg
loopne
xor
mov
js
jb
enter
adc
or
push
lock
fimull
push
imul
insb
pusha
test
or
mov
stos
les
jmp
xor
inc
loopne
mulb
inc
xchg
rcrb
leave
mov
adc
and
and
and
push
push
inc
pop
sub
mov
punpcklwd
sub
sub
pop
fadd
ja
iret
jge
adc
mov
test
jne
pop
adc
pop
cmp
push
mov
popf
cmp
push
adc
cmp
push
push
insl
rcll
jne
cs
ret
loopne
cmpl
xor
popa
pusha
gs
add
sub
popa
or
pusha
rolb
in
lods
dec
mov
in
shl
inc
push
nop
pop
adc
jp
or
mov
or
inc
and
shl
and
jg
cld
imul
dec
rorl
ss
cmp
push
add
loopne
test
xchg
xchg
addr16
jecxz
mov
sub
xchg
mov
push
mov
sub
rorl
or
addr16
mov
fprem
pop
jo
lock
pop
add
or
lods
lahf
lret
hlt
into
push
iret
cmp
push
or
sti
lods
arpl
inc
dec
dec
mov
dec
loopne
jmp
out
xchg
ljmp
cmp
mov
call
and
call
or
adc
push
push
adc
aam
fisttps
das
dec
xor
inc
rcrb
lods
ror
loopne
imul
push
inc
fsubs
popf
or
cmc
xor
subb
xor
dec
lock
das
test
fstl
scas
inc
cli
cmp
jl
enter
loop
add
lock
xchg
rcr
cmp
xor
pop
inc
popa
sbb
popa
aad
push
sbb
sub
xchg
mov
inc
xor
pop
icebp
add
jmp
hlt
orl
push
cmpb
xchg
mov
jmp
shl
ret
scas
xor
xor
cmp
jne
sub
push
mov
in
and
adc
mov
sahf
sbb
mov
loopne
mov
fcoml
xchg
fistl
orb
push
mov
aas
inc
cmp
and
lea
cmp
jl
lcall
adc
pop
sbb
sub
int3
xchg
xor
enter
mov
sarb
js
movsl
lock
push
add
xor
cmp
and
pushf
mov
or
mov
int
int
mov
lods
fisttps
sbb
inc
mov
lcall
mov
loop
mov
lock
push
movsb
test
adc
jb
cwtl
xchg
dec
lods
loopne
jns
stos
xchg
sbb
roll
pop
fistps
cltd
xchg
pushf
mov
test
and
imul
lds
ret
aam
push
dec
mov
jecxz
icebp
rcr
dec
mov
test
mov
mov
xchg
push
outsb
in
cmp
mov
mov
sbb
adc
jbe
adc
mov
push
loope
fiadds
mov
mov
mov
dec
out
jp
mov
adc
ficoml
sbb
mov
cmp
jae
nop
xor
sbb
bound
int
or
mov
xor
mov
inc
rcrb
mov
and
adc
inc
jle
inc
pop
shl
mov
cmpsl
sbb
es
rcrb
mov
insl
inc
ljmp
mov
loope
sub
or
push
mov
push
loopne
push
adc
mov
shl
sbb
adc
xchg
inc
test
pusha
mov
pusha
insb
xor
sub
mov
push
scas
sub
lds
sub
out
sub
and
sbb
ds
jo
xor
sub
push
or
imul
pop
push
test
add
xchg
push
jge
inc
sbb
stos
insb
rorb
mov
outsb
popa
imul
fsubp
xor
popf
loopne
adc
lea
adcb
ss
dec
xchg
je
rclb
or
mov
cld
sub
add
adc
lods
mov
adc
sbb
rorb
rcrb
add
mov
sub
jno
hlt
mov
adc
fildll
mov
outsb
mov
mov
pushf
xchg
adc
pop
mov
cmp
mov
mov
or
pusha
adc
xchg
or
lcall
mov
stos
rorb
orb
mov
mov
out
test
push
jae
std
adc
add
push
push
cmp
push
gs
mov
int3
lods
mov
add
lret
cmp
and
cmp
push
sub
pusha
or
shrl
mov
sbb
push
mov
insl
add
jp
jnp
mov
inc
jnp
mov
out
push
push
dec
push
add
mov
sub
xorb
movsl
or
mov
push
inc
cmc
cmpsb
or
push
mov
test
daa
add
addr16
lret
leave
mov
push
fcoms
xor
pop
jns
jns
sbb
enter
add
and
jns
int3
or
xchg
xor
repz
add
mov
dec
rclb
and
mov
sbb
fisttps
add
sbb
push
cwtl
xchg
es
test
js
add
lds
dec
sbb
push
push
add
and
adc
cmpsl
sbb
lock
xchg
clc
adc
cmp
jne
mov
out
lods
testb
movsl
add
cmp
ds
inc
cmp
sbb
inc
popf
hlt
rorb
cmp
sar
dec
inc
lea
cmp
jl
lahf
lock
adc
test
add
inc
js
jo
cmp
aas
cmp
lods
cmpl
and
xorl
jo
or
cmp
mov
inc
ja
pop
mov
push
sbb
sarl
xor
insb
adc
sub
inc
xchg
mov
iret
arpl
icebp
and
mov
pop
or
in
in
mov
sbb
insb
sbb
in
sarb
mov
dec
inc
mov
sub
or
inc
lea
in
repz
cmpsb
push
mov
or
test
mov
sbb
inc
mov
jo
sub
sub
repz
jle
loop
pushf
in
and
subl
xchg
and
repz
lods
in
nop
pusha
xor
out
test
addl
das
loopne
jo
pop
mov
addr16
and
pop
stos
mov
sbb
pop
pop
addl
xorb
rcrb
and
iret
jo,pn
push
je
mov
into
add
jecxz
movsb
add
enter
cmp
xchg
or
pusha
dec
and
fcomip
aam
mov
dec
les
dec
js
sbb
test
mov
lds
test
out
sbb
ret
add
out
cltd
add
mov
fcompl
loope
and
mov
pushf
nop
mov
dec
pop
add
in
sub
cmp
shlb
dec
fbstp
sbb
adc
out
inc
or
jmp
sbb
cmp
shl
cmp
outsb
jecxz
xor
add
and
cmc
cmp
add
mov
pop
and
and
add
loop
add
adc
sahf
add
std
mov
xor
fldenv
adc
sbb
pop
das
cmpsl
inc
mov
in
push
add
loopne
sbb
or
jo
cmp
imul
and
orb
add
incb
test
lea
ljmp
popf
and
fwait
push
faddl
loopne
mov
cmp
add
push
push
notl
push
adc
sub
in
pop
add
add
es
push
sub
and
arpl
push
or
add
loopne
mov
loopne
cmp
mov
lret
cmpb
dec
push
fdivrl
sahf
mov
xchg
dec
frstor
add
loope
sbb
mov
daa
jo
mov
outsb
add
imul
jnp
mov
inc
jb
or
loopne
mov
sub
scas
adc
imul
insb
loop
in
or
insb
adcb
insb
dec
inc
dec
dec
add
loopne
xor
and
and
pop
and
and
inc
and
mov
stos
lahf
and
andl
push
loope
js
adc
inc
or
pop
push
sub
jne
sahf
clc
mov
outsl
pop
outsl
adc
and
and
cmp
xchg
adcl
lret
icebp
push
mov
and
mov
adc
push
dec
fwait
mov
sbb
fwait
test
lods
mov
inc
and
inc
loopne
inc
scas
and
mov
xor
or
mov
in
pusha
and
stos
scas
popa
dec
add
sbb
pusha
and
push
add
orb
mov
inc
xor
popa
cmpsb
pop
mov
lock
mov
outsl
jnp
inc
xor
adc
mov
mov
orb
data16
add
dec
add
std
jnp
adc
dec
cld
jnp
add
push
outsl
jnp
or
nop
mov
nop
cmp
and
mov
test
or
adc
xor
sbb
add
inc
or
inc
or
adc
imul
loopne
or
imul
pushf
adc
popa
add
fs
arpl
or
sbb
or
inc
sbb
inc
add
addb
test
jg
ret
imul
inc
mov
icebp
imul
xorl
add
imul
push
mov
jl
jmp
xchg
movsl
mov
rolb
add
add
mov
adc
inc
popa
dec
cmp
mov
jae
and
js
push
dec
mov
inc
lock
sub
mov
cmc
je
xor
fcompl
shrb
and
pop
sbb
dec
inc
sbb
pop
sbb
dec
loop
je
pop
xor
std
sbb
xchg
or
sbb
std
add
add
xor
loopne
push
dec
outsb
xor
loope
gs
and
orl
and
cmp
sbb
dec
outsb
dec
fstpl
dec
orb
inc
sbb
fsubl
inc
adc
sbb
or
xor
je
leave
lods
dec
sbb
add
sbb
js
jb
adc
jo
adc
daa
jno
loope
or
outsb
dec
sbb
dec
mov
test
adc
js
jmp
jo
pop
adc
pop
pop
sbb
jmp
nop
out
sbb
movb
mov
cmp
dec
jae
and
and
fmull
inc
lcall
or
and
filds
pushf
add
sbb
dec
cmpl
pop
inc
or
out
xor
in
in
sbb
fstpl
sbb
pop
and
push
jae
and
inc
lcall
mov
in
sbb
ds
cwtl
adc
xchg
dec
mov
dec
aaa
sbb
pop
sbb
sbb
outsb
int3
or
xchg
sbb
mov
sbb
outsl
rorb
and
subb
cmpsb
sbb
sub
int
xchg
mov
push
jo
and
sbb
sbb
inc
sub
imul
ja
xchg
pusha
add
sbb
fmull
test
adc
push
sahf
sbb
add
rcrb
sbb
int3
jo
jb
add
adc
add
xor
pop
inc
je
xchg
sbb
sbb
jne
out
or
sbb
dec
and
add
cwtl
add
jno
dec
jae
ret
sbb
dec
orl
js
mov
sbb
pop
dec
mov
mov
inc
stos
test
lea
lods
add
sbb
mov
rorb
rcll
adc
test
bound
aam
jnp
xchg
cmp
xchg
jo
mov
pop
sub
xorl
insl
jmp
add
lea
pop
movsb
or
jo
or
mov
adc
mov
daa
lahf
pop
aam
cmc
and
mov
jo
mov
lods
pop
mov
stos
jle
aad
pop
jo
add
xchg
add
add
lea
push
hlt
lahf
add
xchg
pop
jne
sbb
sub
adc
in
push
add
adc
fdivs
push
pop
ljmp
mov
mov
adc
je
xor
adc
mov
jmp
xor
mov
adc
dec
in
sub
adc
inc
cwtl
adc
lods
or
stos
inc
add
push
and
addb
jne
lea
mov
outsl
xor
bound
pushf
mov
mov
jp
sub
jle
and
mov
inc
inc
xchg
xchg
jle
push
push
inc
jbe
nop
sbb
mov
js
rcrb
test
xchg
scas
lea
xor
into
or
and
cmpsl
pop
jecxz
rcl
cmp
out
outsl
mov
es
add
test
xor
sbb
add
hlt
push
sbb
push
test
ficomps
fcompl
inc
lcall
or
and
fildll
and
pop
and
dec
sbb
rcr
add
sbb
inc
jo
or
sbb
in
cmp
mov
xorb
test
push
and
jo
push
jno
in
sbb
add
and
push
add
sbb
xchg
adc
sbb
jno
lcall
sbb
mov
push
inc
adc
sbb
adc
adcl
lock
sbb
cld
and
or
jp
sub
pop
seto
shrb
mov
add
pop
test
mov
sbb
jle
cwtl
push
cmp
jge
cmp
mov
jne
xchg
mov
cmp
clc
pop
mov
and
or
data16
loopne
xchg
in
mov
test
mov
imul
cmpsb
pop
sbb
nop
push
add
outsl
mov
daa
pusha
leave
mov
loopne
or
out
outsl
adcb
in
int3
stos
sbb
jecxz
test
mov
in
push
add
push
andl
add
xorl
subl
outsl
add
mov
fisttpll
inc
add
or
push
or
nop
mov
ret
mov
push
add
lods
or
or
shlb
push
add
shrb
and
adc
and
gs
add
out
gs
shlb
add
push
add
sub
and
loopne
das
xchg
test
add
mov
mov
add
loop
jo
mov
push
cmp
mov
das
xchg
adc
push
cwtl
cmpl
pop
cld
cltd
movsl
stos
pop
enter
mov
push
cmp
mov
lock
cli
cwtl
push
clc
sbb
cmp
ja
lock
mov
pop
nop
lea
mov
add
inc
nop
push
cmovo
cmp
lea
jge
mov
sub
sbb
loopne
or
jb
sub
mov
mov
popl
and
in
pop
inc
mov
dec
add
lcall
les
add
out
addr16
dec
mull
mov
or
push
loop
outsl
adc
add
cmpl
sahf
insl
or
add
pop
add
int3
insl
add
das
fistl
inc
pop
pusha
and
sbb
pop
dec
sbb
add
and
and
or
je
insl
das
jmp
mov
aaa
insb
dec
jl
sub
pop
ret
pop
mov
call
mov
andb
insl
or
and
cmp
jge
mov
add
pop
rcrb
iret
aas
mov
xor
inc
cmp
jns
jo
adcl
loopne
lock
jp
pop
out
movd
movb
inc
cmc
mov
nop
daa
js
cld
jo
mov
imul
xor
das
add
and
jb
cmp
jne
mov
pmovmskb
push
jle
fildl
popf
je
mov
loopne
and
xchg
cmc
add
mov
xchg
inc
adc
or
jbe
nop
xor
sbb
inc
movsb
aas
or
sub
test
test
popa
and
push
xor
push
mov
add
int3
mov
or
push
lret
push
mov
inc
enter
cmp
je
fcmovne
into
adc
popa
lcall
aaa
or
add
adc
mov
sub
lock
and
test
mov
push
inc
adc
fsubrs
imul
mov
in
pusha
test
faddl
addr16
fstp
sub
inc
xor
and
shr
mov
mov
je
xor
jge
push
je
adc
adc
cmp
mov
mov
cmp
hlt
pusha
and
lock
mov
dec
cmp
jecxz
es
ja
scas
rolb
fisubrs
dec
xor
iret
leave
sbb
int3
frstor
dec
jnp
pushf
sbb
mov
scas
add
fdiv
aaa
xor
pop
data16
ljmp
jne
sbb
pusha
adc
idivl
pop
rcr
iret
jecxz
sbb
and
hlt
pop
dec
dec
sbb
mov
push
jns
test
sub
or
and
inc
cmpsl
insb
sub
arpl
pop
sub
adc
les
cmpsl
and
cmpsl
or
jo
or
loope
repnz
add
pusha
and
bound
jne
ret
test
and
or
adc
ret
nop
ret
nop
or
dec
ret
add
lods
cli
ret
inc
and
loope
sub
jo
adc
xchg
das
cmp
mov
jecxz
insl
and
sub
mov
mov
mov
punpcklbw
pop
mov
adc
or
add
test
es
sbb
add
add
jo
add
xor
xor
mov
addl
mov
add
add
xchg
sub
adc
xchg
pop
dec
clc
dec
scas
cmc
lcall
sub
jmp
cmp
cmp
adc
aaa
add
ret
push
inc
and
or
jo
pop
into
call
subl
or
mov
adc
and
and
loopne
sub
jnp
adc
adc
xchg
xchg
jnp
push
sbb
inc
roll
xchg
mov
cmp
cli
cmpsl
hlt
xor
dec
lret
add
cs
fs
mov
xchg
pusha
nop
fwait
jmp
fwait
add
jmp
and
or
test
jnp
jb
outsb
pop
mov
or
push
xor
push
arpl
or
andl
xchg
inc
and
or
dec
or
in
roll
pop
xchg
xlat
or
pop
adc
pop
bound
push
mov
out
popa
nop
scas
adc
inc
subl
shll
subl
aam
sbb
andl
or
pop
nop
cmp
lods
jae
push
jo
adcl
rcrl
and
or
add
add
push
sub
iret
jno
nop
sbb
push
adc
adc
inc
and
push
cmp
pop
push
dec
push
mov
push
inc
cmp
adc
cs
cmp
aad
push
leave
and
or
and
imul
pop
loope
dec
and
or
hlt
sub
adc
pop
scas
pop
sub
or
in
inc
jb
push
pop
jno
xchg
ret
insb
push
push
imul
loope
test
dec
mov
orb
dec
sbb
repnz
mov
in
popf
adc
aad
or
icebp
lea
cmp
and
mov
inc
fiaddl
mov
popa
or
popf
push
and
push
jbe
xor
or
add
xchg
aaa
pusha
mov
mov
cwtl
and
mov
sbb
test
push
jo
mov
push
mov
pop
and
or
xchg
pop
shll
pop
mov
pop
test
popf
int
mov
arpl
xchg
pop
sbb
or
add
cmp
or
movsb
xchg
xor
sub
loopne
jnp
jo
and
lock
sbb
mov
mov
add
sub
movsl
cmp
test
sbb
adc
xor
imul
or
out
pop
and
xor
lods
inc
sub
into
or
inc
sub
imul
sbb
mov
loope
and
sub
inc
fldcw
and
push
jo
inc
and
orb
sub
test
lea
cwtl
push
stos
jg
ret
push
fcomps
lea
and
jg
mov
sbb
out
mov
or
sub
or
jg
or
adc
push
mov
mov
pop
shll
or
or
out
pop
sub
addl
push
ret
push
cmp
ficompl
rclb
cmc
test
push
xchg
xchg
pop
pop
and
mov
xchg
ret
add
adc
pop
mov
xchg
or
lret
or
pop
or
nop
jecxz
xchg
sub
test
movsl
add
push
push
rcll
add
push
push
test
dec
ret
add
pop
loopne
inc
and
mov
push
sbb
xor
sub
movsb
push
inc
out
add
inc
adc
xchg
sbb
adc
addb
inc
movsl
lcall
call
xchg
dec
push
and
outsb
push
or
adc
mov
js
xchg
push
or
sub
or
push
mov
mov
sbb
or
sbb
xchg
push
and
adc
shr
addb
mov
dec
mov
pusha
push
jo
mov
pop
or
loope
jmp
mov
xchg
xchg
mov
xchg
mov
pop
lea
or
pop
sbb
test
or
addb
push
call
xchg
test
mov
pushf
rcrl
lea
and
mov
xorl
imul
sbb
sbbb
jo
daa
dec
mov
and
xor
fimuls
sbb
jno
ret
add
test
jmp
push
movsl
sbb
adc
push
pop
stos
nop
add
sbb
pop
sbb
mov
and
inc
test
mov
mov
adc
fwait
sbb
xor
mov
out
mov
sbb
test
add
sbb
sub
sbb
popf
pop
inc
xor
xor
sbb
xor
mov
push
dec
pop
addb
mov
lock
out
or
push
xchg
pusha
xorb
push
mov
push
adc
or
test
lret
sub
jg
les
and
push
scas
add
rorl
or
sbb
mov
popa
sbb
addb
das
popa
test
ficomps
fwait
mov
adcl
loope
mov
add
scas
mov
scas
insl
scas
shll
add
mov
add
add
xchg
mov
sub
sbb
insl
sbb
adc
inc
sub
sbb
loope
xor
dec
sbb
push
pop
push
xor
sti
daa
cs
xchg
inc
sbb
adcb
and
or
xchg
xchg
inc
fisttps
mov
mov
fisttps
push
xor
xchg
or
ret
sbb
sbb
or
sbb
lcall
dec
loope
and
adc
cli
dec
fs
sbb
sub
add
loope
clc
jecxz
loope
addl
mov
dec
add
lods
sbb
jno
mov
mov
or
jecxz
push
rolb
int
pop
xor
and
cwtl
add
test
sbb
mov
xor
push
cwtl
fwait
jo
push
sbb
adc
push
pop
cwtl
push
sbb
cmp
add
jecxz
add
adc
mov
cwtl
les
mov
clc
imul
je
clc
mov
popa
cmpb
and
mov
add
add
sbb
jo
xchg
push
mov
sbb
clc
inc
sbb
mov
testb
lock
outsl
popa
or
add
push
xchg
sbb
or
in
and
arpl
sbb
add
add
xchg
mov
push
or
call
test
pop
inc
fcoms
add
int
cltd
sbb
cli
cltd
inc
push
jnp
cltd
sbb
xorb
mov
roll
or
sbb
add
or
faddl
and
or
out
adc
add
sbb
adc
add
xor
jno
sbb
sbb
orb
pop
and
pusha
push
inc
js
sbb
add
mov
dec
jae
xchg
sbb
inc
loope
fsubrl
sbb
or
mov
mov
push
sbb
dec
sbb
imul
lds
or
int3
ficoms
xor
push
xchg
adc
or
adc
inc
pop
int3
xor
xchg
xor
fnstsw
idivl
xor
jnp
js
jmp
mov
cltd
jnp
es
js
dec
movsb
std
jp
fisubrl
xchg
lods
pop
pusha
mov
xchg
inc
and
loopne
add
dec
xor
mov
mov
hlt
orl
bnd
nop
adc
inc
fadd
stc
pop
ret
dec
add
jne
popa
cmpsb
mov
clc
movsb
ss
sub
addr16
hlt
outsl
ret
jnp
push
lock
lock
adc
int3
dec
push
imul
or
mov
sbb
pop
sub
jbe
movsb
sub
pushf
cltd
clc
ds
jecxz
fmuls
aaa
in
rorl
jecxz
enter
mov
mov
or
jecxz
test
inc
and
test
roll
inc
ds
xor
jb
sbb
out
or
add
jecxz
inc
roll
dec
mov
test
adc
and
mov
nop
mov
cmp
or
jnp
jecxz
stos
adc
sarl
fsubr
mov
orl
adc
ret
inc
fnstsw
nop
pop
adc
lods
sbb
bound
mov
inc
mov
and
xor
test
mov
daa
push
and
push
mov
and
mov
or
das
daa
loopne
mov
test
xchg
or
and
or
push
fbld
insb
mov
test
or
or
or
cwtl
fbld
and
test
and
aad
adc
fimull
sbb
test
jb
or
adc
adc
nop
sub
xchg
in
sbb
pop
and
sub
push
das
xchg
push
mov
loop
or
and
xchg
popa
and
and
and
test
inc
and
cltd
jecxz
shll
cltd
or
and
cltd
inc
and
mov
mov
cltd
and
cltd
repnz
cmp
xchg
and
loopne
adc
fmul
dec
das
xor
imul
data16
lret
popa
push
lock
and
push
sbb
rcrl
and
or
mov
insl
cmpsb
das
add
inc
xlat
or
sub
push
call
sbb
mov
aaa
sub
cmc
fstpt
and
xor
mov
in
push
or
and
jno
packuswb
or
pushf
adc
add
and
mov
jno
or
sbb
xchg
lods
stc
rcll
test
adc
pop
mov
dec
adc
and
mov
push
loop
fwait
and
xchg
and
jnp
in
test
xor
adc
sbb
xchg
dec
adc
es
adc
dec
adc
xchg
sub
sub
adc
stos
sub
sub
xchg
das
xor
nop
pop
adc
sub
add
jnp
or
test
sub
pop
les
lods
out
shlb
push
lods
xor
or
call
xor
mov
cmp
mov
xor
sub
push
iret
outsl
mov
test
xchg
push
outsl
or
mov
inc
nop
mov
adc
cmpl
loopne
in
add
jne
xor
ret
xor
sbb
mov
adc
mov
mov
pop
adc
test
adc
adc
xchg
inc
out
jbe
adc
sub
std
mov
je
pop
push
paddd
adc
lods
mov
inc
add
add
fcompp
jle
push
xor
push
sarb
inc
add
jno
or
push
cwtl
xlat
insb
fwait
jmp
test
inc
add
imul
int
int
aas
mov
jbe
dec
cmp
push
fcomps
mov
pop
fsubs
push
rcr
mov
imul
data16
add
xor
mov
adc
fiaddl
sub
fisubrs
mov
dec
push
or
fs
inc
pushf
fstpt
addr16
push
bound
nop
ss
push
fldt
nop
das
push
in
data16
push
inc
insb
sub
push
mov
push
in
push
test
push
add
push
mov
mov
ss
push
js
clc
fs
shll
push
jo
push
and
lock
scas
call
adcb
pusha
je
outsb
es
xchg
ja
adc
shlb
push
leave
dec
insb
jo
js
leave
leave
leave
jl
mov
xchg
cwtl
pushf
ret
iret
leave
leave
mov
adc
aas
jp
inc
outsl
jb
inc
jb
popa
je
or
cmp
aaa
cmp
rcrl
sub
enter
or
adc
inc
nop
push
mov
jge
subl
add
mov
fcoml
fisttps
mov
movl
ret
nop
dec
shl
fistpll
dec
add
inc
mov
cmp
in
mov
and
jle
push
push
in
xor
aaa
int3
into
jl
pop
enter
and
lea
out
cmp
mov
and
lea
pop
inc
cmp
mov
xor
mov
out
and
pop
lea
mov
adc
ret
out
and
icebp
fs
lea
int3
pop
jle
xchg
jno
sarb
test
dec
and
xchg
pop
sbb
mov
xor
add
sbb
fldt
push
adc
pop
pop
dec
adc
outsl
mov
lcall
add
and
int3
lea
xchg
in
jns
or
hlt
ss
movsb
jns
sbb
or
cmc
fbld
pop
xlat
les
mov
xor
fnsetpm(287
xor
mov
lea
cmpsl
addl
pushl
mov
aas
inc
imul
insb
push
or
xor
loope
mov
xchg
testb
add
outsb
insl
aas
add
inc
mov
push
pop
call
jb
mov
xchg
clc
fimull
rcll
mov
jle
cmp
mov
add
mov
add
inc
stos
mov
repnz
jb
cmp
mov
push
sti
or
sbb
jmp
cld
mov
int
mov
adc
hlt
loope
out
sbb
push
fldl
cmp
arpl
mov
mov
rorb
dec
jb
lcall
mov
add
mov
inc
sub
cs
mov
out
inc
not
sbb
in
outsl
ret
test
jle
int3
mov
sbb
or
hlt
mov
pop
or
enter
enter
or
scas
test
add
test
sbb
and
pop
out
fldl
or
popa
sbb
push
loope
sub
dec
rol
call
mov
and
rcl
fsub
inc
xchg
inc
or
xchg
or
test
mov
pop
mov
mov
xchg
pusha
push
ret
add
push
fsubr
adc
inc
dec
inc
repz
mov
inc
lds
push
stos
mov
stos
and
pushf
mov
pop
rol
cmp
sbb
flds
stos
xchg
mov
or
inc
aaa
xorl
lds
std
aaa
popa
xor
std
aaa
std
add
xchg
aaa
sub
and
mov
sub
mov
movsb
add
test
popf
movntps
int3
jno
or
and
sbb
clc
add
mov
inc
sbb
rcr
fwait
jo
pop
cmpb
cld
mov
mov
mov
sbb
push
stos
push
lock
inc
and
jb
pop
js
xor
lds
xchg
sbb
sbb
outsb
push
mov
or
jno
push
test
xchg
and
movsb
bswap
aas
adc
mov
inc
inc
jno
or
sub
xchg
mov
js
inc
js
xor
push
sbb
cmc
jge
jnp
sbb
add
je
iret
xor
dec
shl
scas
test
mov
mov
or
add
push
jg
cltd
or
out
xor
fsubrs
pop
scas
dec
rolb
js
fnstenv
js
cld
mov
in
push
test
jns
inc
mov
pop
pop
jns
call
or
cmovnp
std
cmpsb
inc
jl
mov
sahf
adc
sbb
add
movsb
ss
insb
xchg
push
addl
mov
sarl
add
dec
inc
push
fcoms
xchg
jno
int3
setne
jae
adc
xor
push
or
sbb
ret
loope
and
and
sbb
outsl
pushf
xchg
inc
aaa
add
cs
pop
xor
shll
scas
rorb
push
loope
jo
add
add
stos
inc
add
icebp
divb
andb
rcl
hlt
add
mov
add
andl
rcll
cmp
jle
mov
jg
adc
fadds
add
jecxz
push
or
aas
rcl
or
cmpsb
or
push
push
sub
mov
dec
jecxz
mov
call
inc
push
jp
movl
mov
and
loop
enter
xor
dec
or
add
pop
mov
cwtl
movsl
sarb
xchg
push
mov
pusha
cmp
lahf
test
push
das
pop
dec
fmuls
push
xchg
push
or
pop
pop
mov
and
pusha
xchg
insl
lods
add
xor
and
addl
xchg
sbb
inc
push
inc
push
pop
mov
inc
mov
adc
movsb
pop
movsb
test
and
inc
data16
pop
pop
push
movl
sub
add
add
mov
aaa
sbb
push
inc
push
aas
ljmp
inc
dec
xchg
xchg
pop
mov
insb
fidivl
aas
outsl
mov
ss
add
addb
stos
test
cltd
and
mov
notb
push
cmpsl
in
add
sbb
mov
loopne
test
std
sbb
or
test
pusha
or
add
mov
pop
inc
das
test
dec
push
stos
aad
lea
xor
sub
and
lods
call
adc
fildll
shlb
jo
sar
mov
dec
scas
pop
add
loop
sahf
dec
adc
xor
test
popf
or
test
and
lea
xchg
sbb
jno
or
mov
sub
loope
mov
jo
dec
adc
and
dec
sahf
imul
add
adc
push
add
nop
sbb
xchg
jno
sbb
pop
mov
lret
mov
andl
mov
push
push
das
iret
lea
scas
lods
addb
in
xchg
or
dec
push
imul
add
shlb
add
push
imul
and
enter
movsb
mov
lds
idivb
inc
lea
bound
xchg
adc
push
mov
sarl
push
rolb
loopne
rcrl
mov
or
adc
fs
stc
das
loopne
jo
int3
test
add
lea
loopne
xchg
ja
mov
bound
fistpl
add
cmp
add
add
mov
inc
insb
pop
into
add
xor
push
mov
dec
hlt
add
add
insb
and
fstpt
sbb
and
fstpl
mov
sbb
sbb
aaa
mov
sbb
addl
adc
dec
andl
add
into
push
mov
jecxz
adcl
in
xchg
test
push
test
subb
and
mov
xchg
or
push
lea
loope
mov
insb
and
addb
popf
loope
xor
popf
dec
cmp
inc
mov
sbb
dec
loope
loopne
mov
dec
popf
andl
xor
mov
mov
loopne
test
js
inc
adc
xchg
lea
add
inc
or
loope
mov
test
gs
arpl
push
mov
js
xchg
and
orl
push
call
les
pop
ret
ret
xchg
cmp
ret
les
ret
movsl
push
js
sbb
inc
sub
add
push
push
jns
loopne
sbb
mov
push
mov
movsb
loope
loope
mov
cmpb
cmp
add
faddp
sub
cmp
jge
ret
shrl
mov
cmpb
adc
sbb
pop
push
push
pop
enter
ds
adc
ret
pop
lea
push
stos
fisttpll
push
push
fsub
sbb
mov
in
mov
inc
or
and
add
loope
mov
or
push
xchg
add
loope
adc
sub
ret
ret
inc
filds
lods
xorl
add
loope
test
pop
inc
in
loope
cmp
push
or
adc
inc
or
loope
mov
mov
sbb
enter
inc
add
cmp
push
add
cmp
add
jo
sahf
add
mov
lock
xor
roll
insl
and
mov
add
mov
sbb
js
loope
mov
add
movsl
or
inc
add
ss
xchg
add
and
out
mov
leave
inc
out
jmp
out
shrl
add
xlat
bound
or
mov
adc
inc
pop
add
xlat
add
roll
test
rolb
push
push
or
lea
add
or
sbb
inc
add
std
mov
sbb
mov
or
or
sbb
subl
adc
mov
add
lea
mov
mov
jae
add
and
jae
add
nop
sub
and
cmp
jecxz
lea
test
lea
lea
cmpsl
into
orb
add
pop
add
mov
enter
mov
adcb
filds
dec
pusha
push
add
fucomi
addb
jmp
pop
dec
incl
and
jmp
push
jmp
outsb
decl
incl
mov
adc
lea
sbb
nop
lea
lea
mov
nop
inc
and
xor
cmpb
lea
sbb
sbb
add
mov
add
xchg
rorl
push
ret
and
test
sub
rcll
and
rcll
push
test
aad
jg
pop
inc
stos
push
and
cmp
sbb
inc
mov
dec
test
adc
inc
cmpsl
inc
or
dec
sub
popf
sbb
mov
sbb
xchg
sahf
add
and
loope
sbb
ret
add
js
and
and
xorl
jno
faddl
js
add
aaa
xchg
pop
add
cmpl
and
adc
and
cmp
mov
xchg
std
test
cmp
xchg
jno
inc
fs
xor
loopw
jne,pn
and
pop
sbb
mov
insl
fwait
aaa
and
fwait
aaa
cmp
aaa
and
fwait
aaa
and
fwait
sbb
scas
inc
inc
popf
add
aaa
jno
test
or
int3
aaa
sub
push
aaa
and
mov
inc
or
sbb
cmp
sbb
add
insb
in
nop
lea
sbb
mov
pushf
shll
adc
sbb
sbb
repnz
mov
jo
jecxz
and
sbb
and
movsb
popl
repnz
aam
outsl
and
shlb
lea
aaa
addr16
xor
aaa
and
pop
lea
aaa
ficoms
mov
enter
adc
sbb
test
cmpsl
ret
cmp
iret
push
loope
sahf
cmp
push
ret
ficoms
cmp
mov
and
cmp
divb
mov
dec
insl
sub
jo
push
insl
test
lds
adc
enter
mov
adc
fistpl
cmp
les
test
add
fsub
dec
cmp
cmp
mov
sbb
add
jno
cmp
mov
loop
sbb
gs
cmp
cmp
ss
add
cmp
sbb
and
inc
dec
cmp
jae
mov
mov
pop
rcrb
aas
jecxz
adc
dec
pusha
out
outsb
aas
negl
pushl
or
xchg
xchg
inc
loop
outsb
mov
faddl
mov
dec
xchg
mov
dec
add
faddl
dec
inc
mov
dec
or
inc
cltd
inc
mov
dec
fmull
sbb
fstpt
pusha
jo
jle
xchg
imul
add
xor
ficoms
hlt
jno
ss
popf
sahf
pop
cld
sbb
js
mov
push
mov
push
icebp
push
jns
xchg
xchg
icebp
test
pop
adc
icebp
test
test
xchg
shl
mov
inc
lock
dec
or
push
xor
push
and
or
push
mov
ret
and
add
ret
and
out
imul
daa
imul
push
icebp
cmp
sbb
inc
xchg
jl
cmp
and
ss
jl
movb
and
xor
test
xor
mov
test
sbb
adc
xchg
adc
dec
or
insb
add
jns
inc
lcall
mul
pop
mov
and
shrb
inc
dec
push
out
mov
mov
and
push
xchg
sbb
test
sbb
dec
add
add
and
in
shlb
and
fcompl
shrb
sbb
add
push
pop
sbb
jb
fcoml
sbb
adc
sbb
sbb
mov
pop
sbb
lods
sbb
adc
and
xchg
push
sbb
mov
or
xorl
jecxz
rolb
leave
add
add
xchg
stc
les
loopne
clc
sbb
addl
pop
mov
rol
mov
sub
and
dec
hlt
and
test
rcrb
push
arpl
and
in
xor
addr16
sbb
mov
lea
popf
orb
or
inc
xchg
or
xor
sbb
lcall
sbb
fmull
pop
mov
jo
icebp
mov
in
push
sbb
jle
mov
push
and
add
mov
lods
and
add
xor
loopne
icebp
test
or
loop
adc
add
mov
jge
or
mov
enter
fdivr
sbb
push
arpl
dec
insb
sbb
ljmp
and
add
inc
enter
sbb
and
inc
push
les
inc
jae
ret
sbb
mov
loopne
into
mov
subb
jne
push
mov
fsubrl
mov
adc
sbb
cmpsb
nop
mov
sbb
add
imul
mov
add
sbb
sbb
lds
rcrl
cs
xor
test
add
push
ret
mov
iret
loope
je
xchg
pop
mov
push
and
aam
xchg
push
and
dec
arpl
add
xor
sbb
dec
pusha
push
mov
dec
faddl
pop
sbb
addr16
jne
enter
sbb
sbb
add
sbb
dec
mov
nop
out
clc
inc
xchg
pop
mov
test
jae
adc
in
pop
dec
sbb
add
push
pop
scas
sbb
int
pop
dec
sbb
sub
lock
sub
adc
inc
test
mov
dec
pop
or
fwait
pushf
movb
sbb
ret
adc
mov
pop
cmp
mov
mov
in
inc
lock
push
sub
gs
add
adc
jge
je
sbb
ror
clc
clc
and
or
aas
pusha
andl
or
push
lock
dec
jge
mov
jno
sub
fdivs
jno
lock
fcmovu
dec
and
js
in
push
xchg
in
mov
dec
clc
bound
js
push
inc
dec
ret
out
mov
and
loopne
test
addb
push
cs
pop
xor
fcoms
and
or
mov
pop
xchg
imul
xor
scas
mov
stos
shlb
push
out
push
repnz
pusha
mov
in
or
mov
xor
pop
ret
mov
mov
and
sbb
les
jo
mov
or
mov
mov
jo
mov
cmp
scas
loopne
and
pusha
sub
loopne
add
shrb
popa
fcomps
pop
and
dec
lods
add
mov
loopne
inc
jae
mov
adc
push
sub
and
fildl
xor
cwtl
xlat
ss
and
loopne
test
push
push
push
sub
nop
aaa
sbb
or
dec
cs
lds
fcomps
pop
and
dec
mov
imul
pop
sbb
or
and
jl
ret
adc
sub
dec
enter
lds
repnz
icebp
je
jno
mov
js
xchg
xchg
push
lock
push
dec
insb
sub
pop
and
sbb
sub
adc
xor
pusha
xchg
sbb
sub
inc
push
pop
and
arpl
pop
lret
mov
or
xchg
inc
test
pop
sbb
sub
push
pop
nop
push
sub
sub
push
pop
xchg
dec
and
sbb
loopne
xchg
sub
xor
test
and
jo
sub
and
sub
sub
push
cmp
orl
sub
and
sub
and
sbb
xor
add
push
or
sub
sub
xchg
nop
roll
xor
dec
ret
insb
add
cmp
fwait
jne
ds
push
push
sbb
jbe
adc
adc
inc
rolb
xor
andl
xchg
sub
or
mov
ds
sahf
push
sbb
test
add
mov
add
mov
pop
sub
xchg
jbe
sarb
mov
js
jno
sub
sub
jo
or
pop
adc
push
sar
and
lock
les
adc
jecxz
cwtl
les
push
mov
lcall
inc
or
aas
lea
mov
inc
pop
mov
aas
stos
or
cmp
push
mov
aas
mov
jmp
paddusw
dec
sbb
dec
cmpsl
es
inc
xor
hlt
cmp
arpl
dec
out
lahf
mov
outsb
mov
das
push
jbe
cmp
xchg
mov
mov
dec
clc
inc
loopne
adc
add
mov
dec
cmp
aaa
cmpsl
or
sbb
shlb
add
sarb
mov
jmp
add
sbbl
arpl
loope
dec
pusha
pusha
mov
es
jo
mov
or
inc
jo
or
cmp
in
or
nop
cli
and
push
stc
xor
aaa
inc
push
jge
adc
stos
push
test
push
bswap
ds
cmp
cmp
dec
jb
int3
mov
push
mov
iret
insb
inc
xchg
add
int3
sub
nop
dec
jb
mov
adc
and
addr16
pusha
mov
xchg
jne
outsb
pop
adcb
jg
push
push
cmc
xor
lret
xor
mov
adc
cmc
adc
xor
cld
push
sbb
or
inc
mov
fcoms
clc
mov
test
ljmp
or
mov
mov
or
sub
in
arpl
mov
or
add
and
mov
movb
and
xlat
sub
rol
sbb
fcompl
inc
sub
cmp
mov
cmp
mov
push
rol
or
shlw
inc
sbb
aaa
andl
push
push
imul
orb
pop
aad
sbb
sbb
daa
mov
fs
int3
add
add
das
sbb
add
or
or
popa
daa
push
xor
mov
inc
mov
pusha
xor
daa
pop
mov
inc
test
leave
scas
xchg
shr
test
mov
int
test
jmp
and
push
int3
bound
push
bound
imul
inc
mov
or
movl
outsb
adc
loopne
sbb
or
ret
jb
adc
inc
xchg
cmp
mov
mov
sbb
ret
jns
cmp
popa
or
and
push
xor
mov
pop
popa
mov
sub
inc
pop
pop
pop
adc
add
test
mov
xchg
inc
mov
lea
push
int
push
xchg
jmp
and
mov
add
nop
pop
nop
cwtl
add
sbb
test
movsl
add
scas
pop
sbb
push
xchg
inc
movsb
pop
or
dec
inc
loope
shlb
mov
or
mov
cmp
dec
fildll
adc
popa
push
cmp
lret
mov
and
pusha
sbb
pop
roll
mov
popa
nop
sub
pop
shll
test
packsswb
adc
cmpsl
scas
cmpsl
inc
popa
mov
mov
xchg
add
mov
std
out
fldl
adc
inc
lods
addl
or
xor
jmp
sbbl
sbbl
fwait
push
arpl
add
inc
and
sbb
or
cli
daa
xor
mov
lods
mov
add
je
add
js
push
sbb
add
cld
xor
xchg
imul
sbb
mov
or
pop
les
adc
xor
sbb
xor
or
fwait
sbb
in
addr16
dec
xchg
xlat
test
int
mov
xor
or
rcll
sub
mov
add
enter
pushf
arpl
sub
shlb
lods
and
xchg
add
or
sbb
pop
pop
imul
jno
stc
icebp
mov
and
fimull
inc
add
adc
cs
mov
shll
add
mov
mov
push
mov
and
pop
mov
inc
xor
icebp
push
mov
pop
inc
or
or
xor
or
mov
inc
xchg
decb
inc
rorl
xchg
xchg
xor
and
inc
ret
mov
push
add
inc
dec
pop
jnp
jmp
sahf
and
or
dec
push
sub
mov
jmp
xchg
jb
xchg
inc
jmp
fisubl
fmul
push
mov
add
arpl
sbb
out
mov
sbb
ljmp
pushf
inc
mov
movsl
cmp
jo
sbb
imul
pop
jo
jo
sbb
popa
or
loope
push
push
les
jo
outsl
cmp
subb
mov
xchg
lods
xchg
sub
insl
adcl
fsubs
mov
leave
mov
mov
fs
data16
push
cwtl
dec
pop
jp
dec
call
dec
sbb
ret
mov
jbe,pn
pop
in
dec
mov
push
push
pop
insb
sbb
pop
pop
cmc
incl
dec
outsb
imul
lea
lea
call
outsb
and
daa
pushf
mov
xchg
ret
shrb
shll
xor
xor
xor
inc
xor
dec
xor
mov
int
dec
dec
or
and
xor
push
inc
inc
inc
inc
push
dec
dec
dec
push
idiv
dec
dec
dec
inc
inc
inc
push
push
push
inc
push
push
xor
dec
xor
pop
ss
cmp
inc
push
inc
fcomi
fistpl
dec
inc
dec
aaa
xor
pop
push
xor
push
inc
cmp
xor
inc
add
decl
xor
das
jnp
dec
cmp
or
ret
jl
orb
daa
jne
add
imul
ja
dec
repnz
insb
jp
adc
int3
divl
push
sbb
lock
push
sub
adc
push
js
mov
adc
movsb
bound
inc
add
cmp
inc
pop
mov
lock
or
dec
cwtl
lods
shll
xchg
pop
cld
add
fisubrl
movsb
ds
es
decl
inc
popf
pusha
cs
inc
add
fists
aam
inc
rclb
cmovae
mov
std
das
fmull
lock
fs
mov
or
clc
push
dec
or
lods
pop
inc
out
and
cmpsb
jle
push
mov
inc
aaa
adc
rolb
inc
pop
add
inc
lcall
lods
les
je
outsl
dec
ds
push
aam
mov
aam
aas
push
cs
loopne
pushf
inc
mov
fs
imul
push
fcomps
dec
mov
add
clc
scas
xor
inc
mov
iret
dec
orb
sbb
xchg
jl
shll
sbb
xor
sub
push
jge
cld
dec
lahf
push
push
mov
jno
mov
dec
incl
add
jae
idiv
movb
add
mov
or
adc
adc
xor
rolb
std
pop
add
inc
pusha
stc
fisttpl
jbe
call
fisttps
pop
push
mov
sub
xlat
adc
call
mov
sti
cmp
fstl
cmp
mull
mov
jo
xor
inc
data16
pop
cs
out
pop
xor
mov
test
gs
mov
mov
fnstsw
jo
mov
cmpb
outsl
sti
je
mov
xor
ljmp
jl
iret
int3
in
and
call
lea
cmp
in
je
clc
pop
ret
jb
add
xorb
push
in
or
into
pushf
mov
das
in
jle
std
incb
mov
loopne
or
mov
or
ja
repz
pop
mov
xor
lret
out
fistpl
mov
mov
mov
mov
xchg
mov
add
in
xor
jbe
mov
push
lea
push
mov
jbe
andl
scas
andl
popa
call
dec
out
lea
xchg
je
mov
jnp
std
jbe
aaa
mov
test
je
sub
mov
cmp
ja
push
mov
pop
inc
cmp
aaa
add
sub
es
or
loope
pop
mov
aaa
lock
or
movsl
popf
clc
push
cmp
push
cmp
mov
in
mov
pop
and
xchg
or
notl
je
push
call
in
push
icebp
and
lahf
pop
push
or
fimull
push
jb
adc
pop
jae
int
push
mov
lcall
inc
xor
dec
cmp
adc
std
mov
pushf
sub
pop
xchg
or
lods
fwait
psubusw
jecxz
test
and
and
loopne
dec
adc
cwtl
inc
mov
mov
pusha
mov
push
je
stc
push
mov
out
es
sub
push
out
sti
shlb
or
adc
sub
push
es
jl
dec
mov
aas
push
sbb
sub
mov
fstl
lods
inc
insb
popf
add
lahf
sbb
movsb
jb
mov
xchg
sbb
dec
js
imul
cmp
js
add
dec
add
xlat
es
adcb
std
andl
cmp
adc
testl
divl
jae
mov
and
bound
lahf
fs
test
aad
clc
xchg
mov
mov
in
int
into
movsl
xchg
sbb
mov
dec
lock
daa
push
sub
rcrb
push
rorl
loop
pop
mov
std
incl
jo
imul
jne
gs
inc
outsl
insl
jo
outsb
outsb
je
roll
or
mov
stc
push
sbb
jnp
test
dec
int
push
xor
xor
cmc
inc
jns
push
sbb
mov
js
add
cli
xor
hlt
loope
mov
std
mov
sub
sbb
push
mov
iret
push
and
lahf
pop
xchg
xor
fdivs
js
pusha
add
xchg
add
shrl
out
pop
sti
push
cmp
cmc
jae
repz
out
lock
pop
sbb
dec
cmc
adc
data16
mov
roll
jno
loopne
fcoms
mov
ret
adc
add
lcall
or
lret
fsubrs
mov
xchg
popl
cmp
adc
sbb
inc
mov
negl
mov
adcl
sub
testl
sbb
cmp
or
xor
mov
xchg
xor
add
rorb
loopne
imul
push
add
and
out
std
imul
and
sbb
iret
addr16
mov
add
pusha
ds
pop
fs
arpl
mov
repnz
ret
sbb
std
cld
pop
mov
inc
in
mov
daa
mov
aas
pop
adc
adc
and
clc
or
mov
add
mov
mov
lods
inc
fisttps
sbb
xor
sbb
andb
cltd
nop
arpl
jg
cwtl
xchg
jbe
ss
filds
sbb
sbb
adc
fdivrs
addl
cmp
jg
push
out
idivl
jno
push
xor
pop
add
and
or
aam
stos
and
adc
movb
add
dec
jne
inc
into
push
cltd
scas
movsb
ret
jmp
add
mov
pop
pop
pushf
push
je
dec
aaa
cltd
imul
sbb
int3
mov
mov
mov
test
mov
shll
xorb
jmp
cmp
testb
call
mov
xor
mov
cmpsl
mov
xor
pusha
sub
mov
dec
lock
push
pop
loopne
inc
idivl
inc
dec
push
push
sbb
inc
and
ficoms
inc
out
adc
push
xor
pop
adc
mov
roll
ficompl
adc
les
xchg
xor
test
xor
imul
xchg
push
xchg
testb
jle
jo
idiv
adc
inc
test
loop
or
jg
dec
popa
imul
lods
inc
pop
repz
mov
ret
aas
sub
and
faddl
outsl
and
jo
lock
in
call
fs
pop
movb
rolb
xchg
sbb
ficomps
lds
call
add
add
loope
add
sti
xor
mov
add
pop
jns
pusha
or
mov
push
add
aas
aam
adc
lea
loopne
cmp
aas
fs
add
arpl
aas
test
repnz
cmp
add
aam
daa
sbb
ja
mov
and
mov
aas
jo
cs
mov
mov
and
cs
cwtl
mov
and
shlb
mov
ficoml
inc
adc
and
cs
mov
inc
pusha
and
mov
cs
mov
adc
inc
aas
jo
inc
jb
mov
pop
and
aas
pop
mov
mov
cmp
jno
jg
mov
cmpb
pusha
inc
mov
loopne
scas
fadds
adc
aas
shrb
xor
subb
mov
adcb
xor
aas
test
ss
int
inc
add
and
and
jg
out
lret
int3
enter
enter
fcomp
fxch
loopne
jecxz
in
filds
outsl
jb
mov
push
jne
je
insl
and
and
in
and
popa
je
xor
xor
push
cli
out
mov
inc
inc
inc
inc
inc
inc
mov
lods
xor
sbb
push
push
or
sbb
mov
aaa
xchg
xchg
cmpb
push
mov
inc
dec
push
popa
icebp
rorl
cmp
dec
jnp
jnp
inc
jbe
imul
cmp
ja
test
dec
aas
sahf
or
dec
add
and
jns
fs
inc
addb
nop
cwtl
mov
test
mov
sahf
out
fsub
call
lahf
clc
add
adc
and
repz
xor
inc
dec
repz
repz
pop
pusha
push
iret
js
mov
loope
and
leave
xor
pmulhuw
ret
xchg
push
sbbl
xor
xchg
sub
sbbl
or
dec
dec
popw
shlb
cmp
sarb
mov
cmp
scas
push
add
add
adcl
sahf
filds
push
adc
adc
adc
movb
repz
inc
add
and
dec
pop
push
jl
pushf
mov
xor
iret
repz
lock
iret
repz
inc
push
add
add
idivb
add
xchg
sbb
into
hlt
sub
dec
mov
pop
hlt
rorb
pop
jmp
jl
sub
cmpsl
and
add
rol
pusha
ss
push
sub
xor
out
or
sub
and
outsb
jae
cwtl
imul
jg
and
hlt
push
adc
jnp
or
and
push
add
adc
pop
xor
mov
fdivrl
pop
xor
pop
rolb
sbb
nop
cmpb
nop
mov
fidivs
push
mov
push
les
fdivrs
push
call
in
push
cld
cmpsb
lret
and
mov
ljmp
push
mov
jmp
or
cmp
out
sahf
out
push
adc
adc
out
sahf
aam
call
jnp
into
mov
adc
push
sbb
sub
sbb
cmp
repz
adc
push
add
call
lods
or
add
cmp
repz
clc
sbb
daa
out
sahf
cmpsl
pop
sub
inc
push
cltd
out
sahf
push
sbb
out
sbbl
pop
nop
daa
ud0
cmp
repz
int3
add
ds
hlt
or
daa
mov
mov
sub
mov
dec
shrb
outsl
in
cmpl
push
xchg
iret
repz
jno
dec
push
mov
repz
mov
mov
repz
repz
sub
iret
hlt
out
or
mov
bound
inc
add
mov
incb
out
loop
jne
pushl
or
dec
push
dec
or
punpckhdq
pop
pop
ret
in
mov
jle
and
leave
or
xor
pop
orb
out
ret
or
pushf
pushf
mov
add
testl
aaa
cmp
pop
pop
idiv
xchg
cli
cli
jne
ret
sahf
push
mul
mov
lock
test
push
std
cmc
out
shrl
pushl
imul
psubb
jbe
cmc
cmc
pusha
aam
jbe
cli
jmp
add
mov
push
in
repz
push
clc
mov
xlat
lock
in
loopne
aam
in
dec
cmp
out
aad
pmaxub
pop
iret
hlt
jae
push
fidivrs
mov
jge
cmc
jle
pop
mov
cmp
sub
push
enter
inc
por
inc
pop
clc
jg
aad
fidivrl
or
shlb
pextrw
jnp
lcall
test
ja
push
int
pop
sahf
push
cli
jmp
cmp
xorb
jg
pop
push
std
in
addr16
scas
arpl
push
fcoml
mov
dec
lock
mov
mov
outsb
dec
pop
cmp
mov
mov
clc
imul
push
mov
inc
mov
push
mov
incb
xlat
mov
jle
push
mov
out
call
add
cmp
add
cmp
fisubl
mov
das
add
jg
cld
ljmp
nop
dec
fcomps
aam
push
mov
inc
xor
push
push
jl
shl
imul
push
imul
lahf
add
xor
jl
cmpsb
mov
add
push
cwtl
sti
cwtl
ss
data16
add
clc
cmp
jno
push
mov
mov
fisubl
ds
push
imul
push
mov
mov
sbb
mov
sahf
xchg
loopne
jbe
cli
lcall
jecxz
pop
fimull
and
out
cs
push
loopne
push
jl
fisubs
lods
fdivrs
ret
push
out
nop
push
fs
in
ss
push
jge
scas
enter
loopne
dec
rorl
sti
ds
rcr
fildl
sub
mov
jle
aas
inc
gs
fucomi
ds
inc
imul
loopne
ret
sbb
jo
cmpsl
clc
or
into
sarl
push
pop
sahf
mov
loope
mov
fcompl
xlat
jl
push
nop
cmp
add
push
lock
xchg
cmp
cltd
xor
arpl
pop
push
nop
fdivl
ds
scas
mov
cmpsl
clc
cmp
adc
jo
cs
js
stos
loop
sub
into
ffree
push
outsb
xor
xchg
fcmovbe
cmp
sub
dec
sahf
push
jl
or
shll
push
fidivl
adc
ror
sahf
push
frstor
mov
adc
inc
fisubrs
lret
scas
push
mov
fisubs
imulb
fimuls
jnp
outsb
dec
push
ja
cltd
scas
aas
pop
test
add
ds
imul
push
mov
subb
scas
out
or
lahf
rcr
cmpsl
and
imul
ror
jle
mov
dec
cmp
dec
dec
into
xchg
add
les
fbstp
rorb
das
add
add
push
and
pop
lock
cwtl
inc
add
push
add
jg
repz
stc
enter
push
loopne
cld
sahf
out
ds
sbb
cmp
jns
jns
xor
sahf
out
sahf
pop
pusha
push
add
jl
pop
lahf
push
jno
bound
fistps
rolb
cmp
mov
jbe
pop
jecxz
orl
sbb
or
fdivrs
push
or
shrl
and
sub
inc
insb
adc
pop
xchg
or
xor
and
pop
loope
sub
add
lods
mov
dec
pop
inc
pop
ds
pop
popf
add
pop
popa
dec
sti
shlb
or
pop
addb
test
ret
push
sub
add
or
mov
mov
add
or
push
push
jg
lock
mov
or
or
jle
lcall
push
cld
sub
cmp
repz
stc
decl
divl
iret
repz
cmp
mov
shl
icebp
repz
cmp
into
cld
push
out
out
sahf
out
mov
and
xor
out
sahf
in
dec
jmp
ljmp
mov
add
test
or
ss
dec
cld
aaa
add
or
std
sbb
jp
add
pushw
and
mov
testb
or
or
jns
cmpsl
lods
pop
or
push
xor
push
fs
sahf
out
mov
jns
fsub
clc
add
sbb
iret
repz
xor
pop
push
js
movsb
mov
push
lahf
push
sbb
jnp
pop
lods
movntq
pop
arpl
jecxz
ficoms
jae
sbb
xchg
mov
shr
cmpsl
cmp
outsb
add
sbb
mov
inc
comiss
mov
test
push
jae
popa
mov
dec
mov
repz
stos
xchg
stc
push
mov
iret
cli
sti
cld
std
cmp
aas
test
push
test
or
xchg
mov
iret
outsl
hlt
mov
pop
iret
test
push
push
push
mov
test
rcr
sub
loopne
outsb
lock
mov
xor
jne
imul
outsb
and
jb
jae
imul
insl
gs
outsl
add
jbe
insb
imul
fnstcw
mov
jp
es
jb
arpl
gs
fs
lahf
pop
push
add
gs
cmp
dec
jne
mov
dec
fs
je
dec
add
add
and
pop
outsl
mov
jbe
fidivrs
push
xchg
ds
adc
into
jle
and
sub
and
pop
mov
jle
push
sbbl
ljmp
jns
pop
sbb
out
outsl
int3
and
mov
pop
pop
pop
pop
add
or
cs
shll
pop
add
sbb
fdivrp
nop
lock
out
adc
push
and
daa
jne
loop
adc
mov
inc
xadd
lea
stos
repz
add
add
lds
repz
or
adc
sbb
xor
movsb
loopne,pn
mov
scas
lahf
mov
aaa
aas
and
push
dec
inc
dec
cmp
pop
pop
or
push
sbb
ja
shrb
fnstcw
aas
mov
cmpsb
add
orb
pop
push
ds
imul
addl
add
cmc
popf
or
lock
out
cmpb
adc
add
jg
ds
faddl
add
inc
sarb
mov
into
adc
ds
jle
mov
ds
rcrb
or
add
addb
dec
loopne
dec
push
pop
fldl
fmull
push
fildll
xlat
add
cmp
pop
push
push
test
jb
aas
lcall
push
mov
jp
sub
loopne
enter
mov
and
test
es
push
lds
jae
call
adc
pop
aas
jg
pushf
push
xchg
sub
mov
cs
jle
and
daa
sub
push
pop
ja
jg
pop
imull
jae
jbe
pop
dec
jg
pushl
adc
lods
cmp
adc
cmp
add
dec
jmp
pushf
fdivrl
mov
aas
mov
and
movsb
pop
leave
sbb
pop
addr16
ret
jle
jmp
sahf
pop
stc
ds
pusha
jo
lods
mov
pushl
repnz
jp,pt
aam
lcall
aas
mov
fildll
imul
aam
dec
hlt
mov
ds
push
shrb
add
xchg
outsl
jbe
movsb
lds
ss
decl
dec
fcomi
aam
outsb
es
xchg
xchg
pop
xchg
inc
addb
pushf
add
pusha
shr
outsb
pop
push
jg
inc
leave
lods
cmp
jle
ds
cmp
leave
mov
outsb
and
aas
mov
popf
xchg
xchg
mov
lcall
pusha
xor
lcall
pushl
xchg
push
aas
ret
sbb
iret
inc
mov
cmp
aas
negb
lds
add
pop
push
pop
pop
call
loop
aas
pop
sbb
xchg
jns
xor
cmp
sarb
aas
sub
das
mov
mov
cwtl
or
imulb
repnz
aas
push
test
pop
xchg
pop
add
ljmp
in
jne
lret
out
xlat
outsb
and
mov
jo
test
leave
leave
inc
cmc
ljmp
leave
lcall
aad
ljmp
mov
jo
jg
lcall
lea
aas
cli
dec
lahf
subl
or
faddl
push
lahf
pop
jle
sbb
mov
adc
cmpsb
fildll
lahf
jg
push
inc
add
ds
call
xor
ds
jp
cwtl
pop
jnp
ds
faddp
in
ljmp
ds
push
and
pop
aas
push
decl
pop
push
daa
idiv
push
dec
push
test
sahf
pushl
orl
pusha
jmp
mov
mov
imul
xlat
ljmp
sahf
stc
jo
mov
sub
mov
cmpb
outsb
dec
xor
aas
mov
pop
dec
jg
incl
mov
rorb
addl
jmp
pop
xchg
nop
or
and
mov
mov
dec
and
jmp
cltd
cltd
dec
es
fnstcw
sub
movsl
dec
es
mov
xchg
mov
aad
xchg
nop
mov
and
lods
jb
test
adc
inc
fnstsw
std
ds
adc
sub
decl
lcall
shll
repz
adc
lret
mov
cs
jmp
and
and
test
test
and
mov
adc
xchg
pop
mov
decl
negl
scas
out
dec
cs
fistpll
sahf
push
arpl
push
pmaxub
xchg
sti
movsb
add
push
push
int
das
add
add
push
push
test
jle
pop
nop
push
enter
mov
add
inc
pop
pop
push
add
xchg
add
movb
rcrb
jg
stc
push
cmc
push
jle
add
repnz
jl
insb
iret
iret
jg
incl
adc
push
mov
pushl
adc
movsb
addr16
call
push
mov
outsb
jmp
imul
and
and
jg
ljmp
jns
imul
xor
dec
popa
jb
and
insb
lods
imul
xchg
add
or
bound
dec
cli
outsl
idiv
mov
imul
outsb
addr16
jae
je
gs
in
or
and
fs
sub
insb
xchg
lea
sbb
loopne
inc
sti
je
outsb
arpl
xor
mov
mov
daa
xorb
add
jmp
push
test
pop
push
ficoms
scas
mull
icebp
mov
push
or
lcall
arpl
sub
add
outsl
jb
xor
mov
outsl
and
jns
dec
sbbl
jns
bound
jae
imul
nop
mov
adc
pop
cmc
inc
nop
mulb
fs
cmc
sub
add
fildll
sbb
into
cmp
loopne
out
sbb
lock
push
sub
aas
ret
pop
jg
out
lods
addl
push
add
mov
mov
sbb
cld
rorb
cmpl
test
add
cmp
movl
addb
add
adc
movl
xchg
adc
imul
cmp
add
adc
daa
inc
das
lods
mov
call
lock
clc
test
dec
sti
mov
shlb
test
push
sbb
hlt
push
push
call
movsb
sbb
cs
inc
lcall
movsb
data16
sbb
mov
lcall
push
push
sub
push
lods
enter
rcrb
sbb
or
aas
je
clc
mov
dec
and
jne
lea
lds
or
popf
lods
fdivrs
push
push
nop
push
pop
push
fcomi
fidivrs
add
cmp
push
push
test
or
mov
inc
cmp
sarb
jg
cli
mov
and
and
mov
push
call
and
test
jne
popa
icebp
sub
push
pop
mov
add
mov
test
mov
ss
inc
test
add
pusha
aas
jmp
int3
push
mov
adc
lahf
dec
dec
daa
push
mov
cmpl
rorb
sti
mov
jge
xor
cmpsl
std
sahf
or
cmp
lods
push
ret
push
rolb
xor
push
push
jo
mov
xchg
cwtl
or
xor
inc
push
sbbl
xchg
lret
xor
or
xor
mov
mov
mov
adc
out
and
inc
in
mov
adc
ret
add
fisubrs
and
dec
cmp
jl
inc
sub
shl
jmp
xchg
mov
rcll
inc
inc
fimull
xor
lea
jmp
hlt
pop
cmp
das
or
add
cvtpi2ps
xlat
adc
jne
lds
mov
cwtl
add
and
mov
pop
dec
dec
scas
das
test
inc
sub
sub
dec
mov
adc
arpl
adc
pushf
push
popf
and
jp
and
sbb
jecxz
and
ret
push
call
mov
imul
gs
xor
cs
insb
add
faddl
sub
dec
pop
imul
or
push
daa
enter
xchg
pushf
rcrb
jb
arpl
ljmp
jmp
inc
gs
push
mov
inc
outsl
outsb
gs
xor
in
push
jle
pop
mov
jmp
push
pusha
cltd
dec
gs
outsl
imul
add
call
push
imul
cs
in
cmp
arpl
xor
loopne
mov
inc
insb
adc
sub
jmp
push
or
test
mov
cmpsb
sahf
fmul
fdivs
insl
gs
mov
dec
aam
daa
pop
pop
pusha
cltd
sub
shr
or
insl
and
or
sbb
int3
add
pop
ja
outsb
insl
popa
jo
gs
data16
fsubs
enter
outsl
add
sti
jne
gs
imul
cmp
jmp
cmp
and
outsb
xor
jmp
add
ret
nop
add
inc
sahf
out
sahf
pop
push
sbb
xor
dec
jns
out
pop
fs
mov
jns
out
mov
push
pop
lahf
rcr
inc
das
enter
pop
outsl
imul
incl
push
in
jecxz
ret
popf
inc
bound
ret
adc
adc
fmuls
sahf
daa
and
inc
jns
out
pop
je
cwtl
movsb
repz
out
aam
add
iret
repz
and
pop
jo
cmp
repz
lods
int3
fdiv
jns
cmpsl
stc
add
adc
dec
out
sahf
out
je
mov
sahf
int3
loopne
or
movb
out
sahf
out
fs
cwtl
lahf
out
sahf
movsb
mov
cltd
cmp
repz
inc
push
insb
xor
iret
pause
test
shl
out
lcall
dec
sahf
out
sahf
pop
je
test
sarb
out
jns
cld
push
fwait
out
cmp
jns
out
push
out
sahf
mov
aam
add
adc
repz
cmp
js
cmp
repz
test
fsubr
out
sahf
out
popf
or
cmp
out
sahf
push
fdivrs
repz
add
cmp
repz
test
mov
loopne
add
pop
push
xor
cmp
repz
fs
lods
cmpsl
stc
cmp
fdiv
add
sbb
cmp
js
jns
out
mov
sahf
out
testl
dec
pusha
insb
jns
out
mov
int
call
inc
iret
repz
push
push
lcall
or
sbb
out
xor
pusha
jo
out
sahf
out
mov
fdiv
jns
out
add
movb
inc
push
fs
sahf
out
xchg
test
in
repz
clc
adc
cmp
repz
mov
loopne
jns
cmpsl
stc
adc
xor
pusha
test
jns
out
mov
in
add
jns
and
push
insb
jl
jns
out
test
aam
jns
ja
clc
add
mov
and
dec
out
sahf
out
js
pushf
test
out
sahf
mov
test
cmp
dec
pusha
js
repz
repz
cmp
mov
into
push
xor
push
repz
rep
andb
iret
in
add
jns
dec
pusha
jo
test
out
out
fdiv
or
jns
inc
pop
push
lahf
out
enter
lods
and
cmp
repz
mov
repz
cwtl
test
aam
add
adc
inc
push
fs
out
sbbb
int
hlt
or
repz
fs
cwtl
movsb
rcrb
add
sbb
sahf
out
inc
pop
jo
cwtl
repz
out
enter
mov
repz
and
adcb
aam
lock
repz
sub
pop
je
iret
repz
cwtl
lods
fmul
repz
sti
lock
mov
cmp
iret
repz
xchg
test
fdivrs
out
in
add
adc
cmp
jns
out
fs
cwtl
lahf
out
sahf
lods
rcr
cld
sbb
cmp
repz
cmp
pop
je
cmp
repz
ds
fdiv
add
sbb
out
sahf
inc
pop
jo
nop
pushf
jns
out
mov
aam
hlt
repz
repz
iret
repz
pusha
js
test
int3
repz
repz
lock
pushw
and
repz
cmp
insb
adcb
mov
fdiv
jns
cmpsl
stc
or
out
sahf
out
adcb
sahf
int3
fdiv
add
jns
out
dec
pusha
jo
sahf
out
sahf
cwtl
lods
mov
iret
sarl
sbb
inc
push
repz
repz
mov
iret
enter
adc
sahf
out
sahf
sub
dec
push
jo
jns
out
nop
test
aam
repz
out
or
sbb
cmp
repz
push
fs
xchg
movsb
cmp
repz
rcl
hlt
iret
repz
push
and
inc
push
cmp
repz
je
xchg
movsb
repz
repz
shl
hlt
out
sahf
out
mov
sahf
out
sahf
pop
insb
jl
mov
jns
int3
loopne
and
out
push
or
xor
out
sahf
out
je
nop
mov
mov
aam
add
sbb
repz
cmp
je
cmp
repz
mov
outsb
ret
cmp
cmp
repz
pop
push
cmp
movsb
mov
fdiv
add
adc
push
insb
jns
out
test
int
cld
adc
sub
pop
iret
repz
je
pushf
mov
fdiv
mov
lds
sub
repz
push
fs
mov
cmp
in
or
sbb
sahf
out
sub
push
pusha
jo
jns
out
nop
mov
jl
fdivr
adc
and
push
cmp
repz
js
movsb
mov
int3
fdivr
or
and
jns
out
dec
push
jns
mov
leave
mov
push
sub
push
sbbb
mov
iret
sarl
sub
pusha
repz
xrelease
lcall
cmp
pusha
jo
xchg
movsb
lcall
adc
adc
out
and
dec
push
out
mov
sarl
hlt
add
adc
cmp
repz
push
lcall
cmp
out
sahf
out
mov
xor
hlt
adc
xor
mov
enter
and
out
dec
mov
out
or
sub
iret
repz
jl
mov
lock
and
push
push
jns
movsb
mov
fucom
hlt
or
cmpsb
push
cmp
fs
out
jl
mov
call
adc
adc
xor
out
sahf
out
je
movsb
mov
aam
add
sbb
pushf
cmp
repz
mov
int3
fdivs
iret
repz
cld
or
out
outsl
jo
decb
sub
cmp
jns
push
pop
push
repz
movsb
xor
mov
mov
repz
in
clc
add
adc
out
sbb
xor
dec
pushf
jge
out
fs
xor
inc
xor
mov
test
push
jo
xor
xchg
dec
mov
push
push
jp
sbb
scas
adc
inc
jbe
inc
dec
mov
ficomps
cs
and
push
cmp
push
cwtl
push
push
push
negb
out
xchg
scas
sub
sbb
mov
xchg
xor
pop
mov
jo
cmpsl
inc
ds
push
xchg
cmp
imul
sbb
sbb
pop
pop
mov
push
push
insb
push
cmovs
inc
into
js
aam
push
and
sub
cmpsb
jo
into
add
xchg
mov
push
adc
dec
pop
call
sbb
mov
stos
or
neg
jnp
clc
sahf
jo
dec
orb
div
mov
mov
je
add
push
fcompl
dec
enter
jle
int3
inc
inc
inc
imulb
and
mov
out
push
pop
pop
sbb
pushf
inc
adc
push
fidivrs
pop
xchg
mov
sub
inc
mov
dec
out
jp
lahf
sbb
sbb
mov
dec
cmpsb
sbb
or
adc
sbb
out
es
mov
testb
inc
push
rorb
hlt
test
rolb
cwtl
decl
movsb
adc
dec
scas
or
mulb
mov
xchg
out
scas
cmp
adc
nop
mov
in
jl
icebp
fdivp
push
dec
rorb
sti
fdivp
mov
sub
enter
push
fsubrl
testb
push
inc
xchg
out
or
add
cmp
clc
mov
jge
mov
mov
push
cmp
push
mov
lock
sahf
es
loopne
push
cmp
or
push
sahf
push
sbb
xor
fsubrp
das
call
or
dec
loopne
sbb
xchg
sbb
or
out
jns
pushfw
push
pusha
pop
adc
inc
lock
cmp
scas
mov
inc
mov
ja
lock
mov
cmp
sbb
movsb
imul
scas
loopne
mov
push
mov
cmp
push
outsb
mov
or
sbb
imulb
xchg
adc
xchg
cmp
adc
int3
es
fisubrs
xor
push
call
sysret
jbe
xchg
test
inc
out
outsl
enter
push
inc
out
xor
cmp
negb
mov
inc
test
mov
sti
cs
pop
into
push
out
movsb
into
aam
jnp
out
mov
lock
push
mov
cmp
out
xchg
xchg
addl
insb
insb
or
sbb
dec
out
sbb
push
and
lock
pop
add
scas
movsb
out
cmp
sbb
pop
jnp
mov
push
push
dec
pop
es
ss
mov
and
and
pop
movsb
mov
out
push
xchg
fbld
sbb
mov
dec
pop
inc
pop
out
cs
cld
shlb
push
shl
idivb
push
pusha
pushf
push
loope
jae
mov
add
mov
push
cmpsb
les
and
in
inc
aaa
mov
mov
push
xchg
outsb
cmp
mov
mov
jbe
push
nop
push
pushf
xchg
call
xchg
les
aas
push
out
leave
loopne
dec
outsb
dec
push
ds
js
jns
lods
mov
mov
cmp
pusha
push
fsubr
jl
pusha
into
inc
lock
or
ss
push
cmp
hlt
inc
add
dec
mov
inc
or
pop
sbb
rorb
mov
ss
push
jmp
outsb
out
loopne
cmc
ja
xchg
ss
lods
ficoms
iret
jnp
mov
dec
out
inc
ds
mov
negl
aas
push
dec
xor
xchg
push
lock
mov
jnp
sbb
push
shlb
mov
push
push
fisubrs
aas
sbb
and
in
faddl
pop
and
inc
ja
out
testl
enter
les
test
lret
push
jo
cmp
add
xor
jp,pn
cmp
mov
push
sbb
xor
jbe
inc
testb
enter
sbb
dec
scas
testl
xchg
add
fsubs
gs
es
fbstp
ds
aam
push
inc
push
add
outsb
push
roll
daa
pop
cmp
loopne
test
sub
dec
or
call
xchg
sub
sbb
sub
andl
mov
clc
fisttps
cmp
xchg
ja
add
pusha
dec
or
push
aam
pop
inc
push
aad
nop
add
add
inc
push
add
add
jg
sub
pop
add
inc
push
dec
add
idivb
in
push
add
or
inc
cmp
or
jnp
mov
dec
pop
push
and
inc
dec
mov
mov
dec
add
ds
xor
xchg
push
out
mov
push
inc
mov
rcr
dec
dec
add
iret
es
dec
ss
rcrl
push
push
xchg
iret
fimuls
inc
pop
push
inc
push
scas
dec
dec
push
lcall
pop
sub
pop
xor
push
lcall
loopne
jne
jb
pop
push
aaa
push
adc
xlat
in
xchg
mov
pop
aad
push
fiadds
jle
dec
or
dec
mov
jnp
fiadds
mov
or
sbb
inc
xchg
dec
fwait
push
jnp
xchg
xor
out
jg
sbb
add
add
add
push
or
add
sub
and
inc
sbb
flds
repnz
add
add
pop
xorb
incb
call
je
pop
sub
pop
shlb
dec
imul
push
sbb
xchg
push
add
es
add
pop
cld
scas
cld
jb
jg
clc
aas
push
add
jmp
add
cld
add
cld
nop
popf
in
or
push
aas
jg
xor
pusha
packuswb
sbb
addr16
out
or
mov
xlat
mov
pusha
sbb
ret
roll
mov
divb
aas
jg
data16
pop
jae
or
sbb
ficompl
neg
out
cmp
sarb
add
jnp
pusha
push
pop
jo
pop
test
pop
push
cwtl
lret
dec
cld
pop
das
aas
pop
xchg
addr16
xor
pop
lock
xor
pop
std
insl
push
ss
cmp
mov
push
mov
pushw
jbe
in
cmp
jle
rolb
dec
out
push
lret
pop
cmp
add
sar
cmpsb
sbb
cltd
pop
lock
repz
lcall
or
gs
push
cmpsl
xor
jg
ds
jnp
cmp
add
lret
decl
sbb
sub
inc
aaa
iret
push
lcall
and
cmp
fisubrl
push
comiss
idivl
dec
pop
outsl
jg
cmp
stos
pop
xor
fwait
out
clc
push
lock
aas
rcrb
mov
add
pop
push
lcall
jg
jmp
adc
loope
stos
inc
push
aaa
add
cwtl
shll
xlat
pop
sbb
int
test
cs
nopl
xor
add
inc
cmp
pop
fwait
int
pop
in
les
test
mov
jg
mov
roll
rorl
xorb
pop
cld
mov
pop
cmp
faddl
mov
xor
cmp
cwtl
pop
jo
shll
les
fldenv
rolb
jge
cmp
fwait
int
sbb
cmp
sub
inc
add
int
fldcw
inc
shll
and
xor
sbb
push
push
push
sbb
arpl
push
adc
sub
pop
xor
mov
jbe
notb
clc
fcompl
jl
sbb
push
sbb
mov
popw
or
test
push
shl
rol
cmp
test
pop
and
jo
into
adc
fstpl
pusha
adc
icebp
fnstenv
push
roll
add
add
loopne
popf
push
adc
fiaddl
cwtl
or
add
dec
mov
and
aas
adc
cmp
jge
push
lcall
sbb
int3
sahf
das
cmp
and
daa
push
xchg
adc
xor
add
xor
daa
and
pushf
cltd
mov
add
out
mov
jns
andl
xor
dec
xor
ja
daa
push
je
mov
xor
pop
cmp
outsb
notb
sbb
push
dec
dec
or
cmp
inc
aas
mov
push
outsl
orl
mov
push
out
sbb
sbb
cmp
inc
cwtl
loop
mov
pop
pop
or
stos
add
adc
or
dec
push
xor
cmp
xor
and
push
xor
inc
es
adc
ss
add
aas
xchg
int
imull
mov
pop
jnp
dec
sub
clc
cmp
jbe
iret
loope
dec
and
push
les
sbb
mov
and
je
nopl
push
cmp
mov
inc
movntq
pop
push
cmp
gs
xor
mov
out
rclb
daa
push
and
fcompl
xor
adc
xor
or
lahf
mov
xor
sbb
rcll
mov
jb
pop
push
xchg
adc
aas
sbb
in
das
push
inc
inc
inc
or
mov
addr16
es
xor
mov
repnz
aad
cmp
lock
jl
fidivs
xchg
daa
mov
out
in
push
test
mov
add
or
aas
clc
lea
mov
dec
divb
inc
adc
push
dec
or
test
daa
dec
popf
dec
jo
adc
data16
add
ss
arpl
rclb
xor
loopne
es
mov
dec
clc
jns
sbb
cmp
xchg
fbld
lahf
cmp
lahf
cmp
pusha
xchg
push
pusha
es
pop
fadds
pop
jns
push
jmp
mov
xor
popf
shl
xor
lcall
push
daa
dec
inc
inc
dec
incl
iret
faddl
in
daa
dec
add
push
cmp
jnp
dec
mov
and
jle
clc
pop
repz
jnp
popa
adc
leave
stos
xor
cmpsl
aas
popa
sbb
xor
testb
push
out
push
call
or
stos
movsb
push
in
cmp
repz
daa
xor
xor
cmpsb
mov
sbbl
out
mov
lcall
push
inc
sub
cmp
out
push
dec
xor
mov
daa
push
fs
rcll
pop
jb
stos
inc
push
mov
jo
cmp
push
inc
mov
data16
and
inc
addr16
aas
clc
dec
sub
das
cmp
xor
sub
adc
xor
dec
test
xchg
cwtl
pop
xor
fildl
pop
dec
push
lahf
mov
ss
pop
ss
jbe
xor
cmp
popa
lahf
jo
xchg
dec
cmp
movsl
icebp
push
ret
jne
jb
aas
adc
xor
bound
inc
sub
and
xlat
cmp
sbb
jge
mov
sbb
cmp
sahf
pop
cmp
sahf
xchg
jl
xor
clc
daa
test
or
jl
pop
dec
mov
jle
sbb
xchg
fdivs
daa
dec
xor
dec
xor
cmp
xchg
daa
dec
daa
dec
daa
jae
jmp
dec
clc
lret
dec
cmp
dec
jl
mov
lcall
xor
loopne
mov
sbb
repz
cmp
cltd
push
cltd
out
inc
add
cltd
cltd
and
adc
or
inc
sub
mov
ja
sbb
mov
cmp
icebp
int
xor
mov
outsl
cmp
outsb
push
sbb
mov
push
or
cmp
movsl
cmp
aaa
xor
inc
push
or
adc
popa
ja
xor
daa
cmp
enter
push
mov
ret
adc
sub
add
sbb
push
sbb
cmpsb
push
mov
pusha
and
cmp
dec
mov
xor
jne
push
cmp
aaa
xor
sbb
sbbb
push
sbb
xor
clc
mov
and
comiss
mov
faddl
aaa
jbe
cmp
nop
enter
add
sub
stos
inc
cmp
out
daa
cmpl
jbe
js
hlt
cmp
adc
sbb
js
xchg
es
xor
push
xor
xor
and
adcl
cmp
test
and
xchg
jno
and
sub
aas
aad
and
imul
inc
push
or
in
lret
pop
add
test
fdivs
add
pop
and
add
jo
pop
push
pop
jg
cmpsl
jl
jo
push
add
push
test
rorl
outsb
push
xor
lahf
ds
invd
jnp
sub
iret
jae
mov
insb
stc
jnp
pop
outsl
or
sti
add
mov
adc
int3
shrb
mov
mov
or
adc
push
popa
testl
or
push
cmp
add
add
jnp
add
mov
icebp
into
jnp,pt
imul
pop
sbb
cmpl
add
mov
movq
repnz
fbld
push
out
add
pop
iret
add
out
imul
cmpsb
pop
iret
pop
mov
inc
jo
or
push
jbe
aas
pop
rcrl
mov
aas
testb
adc
cli
pop
lock
pinsrw
sub
pop
cld
int3
iret
pushf
push
jbe
xchg
jg
or
xchg
mov
push
mov
pop
push
sahf
ja
push
js
ja
push
addb
adc
mov
jle
or
mov
mov
ja
pop
dec
mov
int3
pop
or
jo
mov
dec
jg
add
clc
sahf
jo
pop
fmul
add
pop
aas
jg
or
add
stos
push
pop
jg
filds
add
add
aam
stos
dec
jae
je
popa
adc
and
out
mov
outsb
and
jae
push
jbe
out
std
out
dec
insb
push
add
add
add
jo
jns
inc
push
imul
arpl
lock
mov
dec
xchg
mov
bound
jne
xlat
push
pinsrw
sti
idivb
adcb
mov
add
inc
add
ficomps
add
cmpsl
adc
push
imul
or
ficompl
add
out
push
outsl
inc
sub
imul
xchg
sub
fnstsw
imul
add
mov
ss
addr16
outsb
js
xor
cmp
inc
cmp
popa
inc
jnp
iret
scas
xchg
xchg
out
mov
rcr
iret
jge
inc
jae
push
fs
popw
int
bnd
lret
fcmovb
imul
popa
jnp
addb
fldt
js
xor
gs
insl
movl
xchg
data16
dec
popa
adc
insb
js
push
inc
lcall
rcll
jne
add
xlat
xchg
and
push
xchg
arpl
das
xlat
out
in
fistpl
xchg
adc
outsl
push
sbb
pop
xchg
outsl
xchg
mov
je
shll
out
bound
insl
inc
out
negb
inc
outsl
add
xchg
data16
ss
in
push
cld
adc
and
or
sbb
inc
or
pop
repz
or
pop
xor
gs
ja
push
dec
push
push
ficoms
and
dec
adc
pop
mov
push
inc
lcall
loopne
scas
imul
scas
dec
push
push
js,pn
pop
xor
push
addr16
sbb
js
push
cmp
xchg
das
adc
jae
cmpsl
addr16
int
scas
out
inc
cmpsb
out
or
not
loopne
daa
jg
insl
arpl
sbb
data16
pop
push
inc
mov
jb
add
jae
lods
or
mov
scas
js
xchg
add
dec
lret
adc
pop
jne
scas
imul
jae
movsl
mov
bound
add
jo
mov
xchg
sbb
andb
insl
rcrb
ljmp
popa
pusha
in
mov
jae
xchg
insb
ljmp
icebp
jmp
dec
push
jle
pop
inc
and
sub
add
push
bound
cmpsb
dec
adcl
mov
in
or
xchg
das
mov
xchg
cmp
sub
xor
mov
mov
add
sbb
inc
lock
pusha
adc
xlat
xor
add
sti
out
lret
call
xor
and
jl
add
arpl
xor
jb
scas
xchg
add
pop
fcoms
pop
and
jecxz
pop
subb
ds
mov
or
clc
subb
imul
adc
rol
daa
jb
sbb
xchg
sbb
xlat
add
adc
push
add
outsb
add
xorl
fiadds
pop
pop
movsl
and
cmp
or
imul
add
imul
push
jecxz
mov
push
clc
sbb
repnz
push
pusha
pop
push
ffreep
out
mov
fisubs
je
dec
jg
add
js
add
push
or
ficoms
add
inc
scas
inc
adc
daa
lahf
data16
rclb
cmp
dec
add
jae
push
subl
je
insl
cmp
test
inc
jnp
adc
xchg
or
pcmpgtd
fists
je
and
inc
pop
arpl
shll
add
rol
arpl
mov
inc
popf
mov
push
sub
or
lahf
xor
nop
mov
pop
mov
jecxz
movsbl
rcl
mov
es
sub
adc
dec
push
pop
inc
adc
add
sub
and
sbb
push
adc
out
iret
sub
inc
sub
xchg
daa
mov
inc
mov
push
insb
push
cmpsb
cmp
add
and
adc
add
fmuls
xor
cmp
and
rcll
dec
adc
popa
lea
push
sbb
push
stos
repz
push
or
jbe
fwait
jae
adc
aas
push
add
or
pop
pop
push
scas
jecxz
or
cmpsb
mov
cmp
inc
pop
or
and
aaa
adc
sub
adc
adc
cwtl
fwait
lahf
adc
inc
test
or
xchg
or
pushf
pop
mov
jecxz
popf
sbb
add
push
ss
addr16
xor
or
fs
sahf
or
outsl
lods
xor
test
pop
and
outsl
roll
adc
mov
out
and
mov
je
ja
aaa
jne
xor
pop
shll
pusha
mov
push
sbb
sub
or
shlb
jne
inc
and
scas
arpl
sbb
jp
popa
out
and
jnp
and
rclb
arpl
sbb
jae
mov
movsb
pop
add
out
aam
inc
xorb
push
cmp
mov
sbbl
pop
rorb
cvttps2pi
sar
fistl
daa
mov
sub
mov
negl
or
cli
sti
adc
push
mov
imul
adc
and
inc
pop
bound
aam
js
jae
push
bound
or
xchg
pop
iret
rcrb
cmp
jp
lock
aaa
jp
xchg
and
outsb
sub
rcrb
adc
xchg
dec
or
mov
cmpb
sti
add
adc
andl
cmp
mov
jnp
cltd
jno
pushw
cs
das
mov
ljmp
dec
push
jl
rorb
push
xchg
aaa
mov
sub
push
mov
addr16
jnp
dec
popl
pop
dec
add
fisttps
jo
inc
test
sbb
scas
aas
ret
fisttps
xor
rcl
mov
fimull
jae
dec
adc
stos
xchg
test
adc
dec
aas
cmp
push
pusha
aam
and
into
add
ret
jg
aad
inc
inc
sbb
jno
push
xchg
jns
adc
pop
iret
push
cmp
ret
cmp
jecxz
push
xor
and
adc
push
mov
lret
mov
fists
xor
xchg
test
mov
jg
sbb
sbb
mov
push
xor
jnp
jge
jns
je
fldt
or
jb
dec
pop
aaa
out
sub
sbb
mulb
dec
sub
cmp
test
add
rclb
fs
mov
and
bound
jb
data16
add
rcll
addl
stos
addr16
mov
jnp
mov
cmp
mov
and
jo
outsb
mov
mov
push
push
pop
cmp
add
ljmp
pop
or
aas
imul
pop
xor
or
stos
add
inc
and
outsb
rcrb
jae
scas
or
insb
jae
mov
andl
lret
or
stos
jg
sbb
or
add
cmpsb
scas
add
mov
push
adc
test
sahf
scas
push
pusha
jecxz
fwait
inc
jle
xchg
mov
pop
pop
jae
mov
adc
mov
out
or
adcb
shrb
lret
mov
ficompl
out
jo
aas
cmp
adc
adc
iret
sbb
and
mov
ss
add
adc
daa
arpl
out
addr16
fisttps
or
roll
cmp
mov
jbe
lods
pop
sub
loopne
test
pusha
sbb
cmp
mov
cmp
sbb
xor
aam
xchg
cmp
push
cmp
push
add
add
ret
xchg
mov
fsubs
mov
imul
push
jmp
xchg
and
or
fists
mov
lods
in
clc
ret
xchg
and
lds
lcall
sub
adc
add
sbbb
pusha
add
mov
pop
sbb
ret
ret
dec
and
push
out
inc
push
jl
add
cmp
adc
dec
or
outsl
inc
cmpl
roll
daa
add
push
add
lods
dec
je
jmp
add
lock
jae
outsb
cs
into
movsb
arpl
add
sub
xlat
sbb
movl
sbb
mov
jg
pop
inc
add
pop
test
inc
jb
add
pop
mov
shlb
stos
add
dec
fidivrs
lret
dec
cmp
jo
push
inc
fcmovnb
adc
sub
repnz
shlb
out
addr16
and
add
loopne
es
jecxz
lret
in
shlb
mul
mov
xchg
leave
scas
shrb
add
adc
xchg
sub
pop
adc
sbb
outsl
add
mov
jmp
xor
inc
sub
rclb
orb
mov
add
inc
dec
movsb
sbb
out
adcb
dec
ljmp
mov
or
pop
push
out
and
jl
sbb
outsl
jp
and
cmovns
cmp
pop
dec
cmp
xor
rolb
xor
and
inc
cwtl
test
mov
lcall
push
popl
popl
mov
xchg
inc
cmp
add
or
and
mov
add
mov
ret
inc
lock
xor
push
or
and
pusha
adc
add
push
or
and
pop
pop
hlt
xchg
and
jecxz
jle
rolb
outsb
jae
and
adc
into
dec
cs
cwtl
ret
mov
mov
out
mov
aaa
sub
pop
adc
addr16
push
mov
pop
or
stos
push
sub
push
iret
imul
xchg
loop
jp
push
outsl
mov
ret
daa
dec
inc
bound
cmpsl
push
sub
pop
jecxz
mov
xchg
data16
arpl
sbbl
xchg
jo
lods
loope
or
cmpxchg
adc
test
je
call
pop
jbe
loope
push
cmp
jmp
xchg
dec
or
sbb
mov
jb
add
inc
add
out
push
xor
addb
loopne
lret
ljmp
push
lret
add
mov
xorl
rcrb
push
daa
call
xor
mov
outsl
mov
sahf
dec
outsl
dec
sub
jno
shrl
sub
xor
mov
cli
or
sub
mov
es
mov
mov
sub
rolb
lahf
jecxz
and
push
mov
aas
xchg
cmp
mov
adc
jnp
das
aam
or
bswap
mov
adc
fsts
mov
notl
xchg
and
movhlps
movsb
lods
es
and
sbb
dec
shlb
inc
push
fwait
pop
jbe
outsl
sbb
repz
sbb
pusha
fadds
lret
and
mov
mov
jbe
sub
mov
cwtl
push
sti
add
je
fldt
mov
sbb
dec
popa
es
pop
push
sbb
arpl
xor
daa
rolb
push
mov
pop
and
aas
mov
ret
fsubs
mov
sbb
popa
add
bound
pop
adc
fisubrl
les
mov
sbb
xchg
sbb
push
ja
je
mov
push
mov
or
xor
rorl
or
iret
imul
mov
adc
idivl
sbb
pop
fsubrp
mov
sub
sbb
outsb
lcall
sub
test
sub
xchg
sub
fists
mov
imul
add
inc
jnp
das
popa
add
scas
sbb
mov
fcoms
js
mov
sahf
adc
repz
or
ja
pop
adc
sub
outsb
daa
jo
pop
mov
xchg
adcl
mov
pop
or
and
sbb
jbe
mov
xor
adc
adc
popa
adc
xchg
ja
add
sbb
inc
xchg
dec
arpl
subl
out
sbb
cmpsl
loopne
xor
scas
pop
fldl
adc
fwait
dec
xlat
lcall
pop
inc
or
push
add
orb
xor
dec
pop
lcall
pop
push
pop
inc
mov
scas
sub
sub
iret
and
fbld
into
stos
add
mov
cmp
pop
pusha
xor
or
cmc
out
xor
aaa
out
outsl
pop
repz
xchg
pop
arpl
xchg
xchg
cmp
mov
sbb
dec
sbb
mov
mov
push
jge
addr16
pusha
or
adc
repz
sub
lea
mov
xchg
addr16
loope
sub
and
inc
mov
movsl
pop
push
push
ds
push
jecxz
filds
jae
leave
adc
stos
js
adc
dec
jbe
mov
xlat
and
xor
pop
mov
xchg
and
push
jecxz
and
shll
adc
aaa
push
imul
je
or
and
jno
and
jne
dec
sbb
pop
int
add
mov
and
test
and
sbb
daa
jg
xchg
push
mov
add
bnd
xor
adc
popl
mov
sbb
mov
rcrb
push
dec
ss
mov
les
or
pop
mov
popa
pushf
or
jnp
lods
adc
add
bound
mov
adc
cmpsl
pop
xor
adc
jmp
jecxz
add
or
pop
push
dec
add
inc
insb
mov
sbb
dec
sbb
xor
mov
and
inc
add
dec
sbb
inc
pop
iret
xor
cltd
jo
inc
push
fistpl
lcall
or
push
aad
sub
fwait
out
adc
rcll
pop
mov
or
add
or
sti
jae
xchg
cmp
iret
xchg
aas
iret
add
pop
inc
and
and
jne
jae
imul
inc
js
ljmp
fcmovnb
lahf
and
sbb
test
add
pop
mov
lods
into
push
arpl
test
dec
pcmpeqw
inc
sbb
and
mov
push
dec
sbb
fisubs
mov
push
dec
sub
movl
and
and
loopne
sbb
mov
push
mov
push
or
dec
jecxz
dec
pop
jo
pop
outsl
pop
or
mov
int
or
addr16
ret
mov
test
lock
jbe
adc
lock
xor
adc
shrl
pop
cmpsl
lock
popa
out
pop
sub
mov
dec
insl
jmp
adc
test
divl
pop
adc
jbe
mov
sub
loop
inc
idivb
sbb
aas
cmovo
inc
subb
dec
popa
jae
addb
mov
inc
out
daa
inc
xorb
or
insb
xor
xlat
or
test
fistps
add
sahf
mov
pop
js
push
outsl
jg
outsl
and
and
and
cmp
jbe
add
or
and
jnp
cmpsl
sbb
add
aas
jb
ret
cmp
pop
xor
fstpt
sahf
mov
add
mov
out
jnp
push
pop
xor
xlat
jns
push
fildll
sub
push
mov
jb
es
xlat
xlat
mov
push
arpl
pop
cmpsl
pop
dec
rclb
notb
push
pop
aas
xchg
movb
push
push
loop
nopl
mov
popa
jg
addr16
or
inc
in
inc
cmp
adc
fwait
sbb
mov
and
ret
outsb
dec
jmp
mov
cmp
cmp
add
mov
out
mov
aas
push
out
aam
adc
lahf
sti
mov
notl
iret
shll
mov
xchg
sub
xor
test
mov
sbb
fbld
outsl
out
pop
sbb
add
adc
add
sbb
pop
jae
or
jnp
mov
out
and
inc
push
mov
ret
sub
shll
out
mov
incl
loopne
cwtl
mov
pop
mov
or
lds
dec
pop
jg
out
sbb
push
push
push
sub
dec
aas
dec
dec
pop
inc
arpl
or
ret
test
push
arpl
jbe
pop
ret
fisttpl
test
aas
and
fs
pusha
xorl
pop
movnti
inc
push
test
add
mov
sub
stos
and
inc
push
dec
outsl
movsl
lock
dec
xchg
fwait
mov
mov
stos
test
sbb
inc
lret
subl
sbb
shlb
lods
jecxz
fucomi
fsubl
and
xor
adc
movsb
push
inc
jo
arpl
jo
adc
add
pop
xchg
add
outsl
movlps
and
inc
xor
xchg
pop
mov
mov
shll
insl
inc
inc
xlat
push
jecxz
pop
and
pusha
gs
pop
mov
lods
xor
jmp
lock
inc
add
add
and
or
or
xorb
pusha
mul
insb
out
sub
call
rcr
inc
je
imul
outsl
stos
add
stos
or
or
pop
add
das
ds
clc
adc
inc
and
movsb
fcmovnbe
out
push
es
insl
negl
insl
add
iret
popa
jae
ffree
adc
mov
inc
jns
aaa
rcrl
orb
bt
or
add
inc
pop
lock
pop
add
jo
adc
sbb
in
mov
pop
andl
add
mov
dec
sub
add
or
xchg
jmp
es
aaa
mov
pop
fwait
cmp
push
ret
adc
xchg
in
outsl
lcall
popa
jne
outsl
arpl
fmuls
dec
push
push
push
adc
int
pushl
push
jns
push
imul
push
ja,pt
push
jle
fcomip
push
jns
gs
add
je
je
insl
xlat
outsb
mov
xor
bound
outsl
jne
mov
jb
addr16
fisubrl
mov
es
js
jo
imul
adc
cltd
mov
dec
insl
popa
addr16
insb
jo
popf
sub
mov
and
push
rclb
dec
adc
jl
dec
sti
inc
popa
jae
push
push
dec
popa
test
cmp
rorl
dec
dec
dec
popa
ss
gs
jle
xchg
rcrb
je
cmp
aaa
jnp
and
inc
jne
pop
adc
inc
insb
test
call
and
dec
add
jae
arpl
sub
jae
inc
push
call
fsubs
cmp
push
popa
mov
je
and
rcrl
cltd
xchg
in
gs
insl
or
jns
jne
insb
outsl
bound
inc
in
adc
or
dec
dec
dec
bound
add
jns
popa
jnp
cmp
int
pushf
mov
and
push
sub
cmpsl
xor
xchg
inc
push
pop
lret
pop
inc
push
inc
rolb
or
bound
push
jb
and
outsb
lock
push
pop
xor
jo
orb
and
jne
and
sub
mov
sub
outsl
js
xor
mov
inc
xchg
cltd
insl
fdiv
lods
mov
xchg
mov
lds
inc
xchg
gs
mov
dec
clc
push
inc
push
xchg
arpl
push
insl
jo
jns
inc
inc
cmp
sbb
xchg
push
lcall
pushf
push
insb
imul
fs
or
push
imul
bound
je
je
arpl
sbb
jnp
cmp
sbb
addr16
inc
xor
adc
loope
pushf
push
loope
shrl
dec
inc
push
sbb
mov
pop
add
insb
cwtl
jb
inc
loop
pop
aas
mov
inc
dec
popa
sub
adc
push
mov
dec
mov
mov
inc
xor
dec
inc
scas
and
scas
shl
pop
push
cwtl
loop
imul
xor
outsl
imul
and
cwtl
addl
dec
stc
sub
xor
pop
xor
adc
jp
pop
xchg
mov
adc
hlt
out
and
add
arpl
fs
fadds
or
int3
push
push
popa
dec
cmpsb
sti
pop
inc
sbb
xlat
das
cltd
adc
push
xor
cmp
jo
push
fimull
xor
xchg
pushl
shlb
mov
inc
jo
jae
cmpsl
imul
sbb
js
leave
lock
insl
inc
fdivl
xor
adcb
push
and
les
hlt
sbb
movsb
mov
xor
stos
fs
hlt
outsl
push
xchg
sbb
push
push
push
js
mov
sbb
sub
loop
mov
xchg
adc
dec
gs
insb
inc
push
lods
or
push
fstps
cmp
dec
in
bound
sub
imul
enter
cmpsb
imul
iret
mov
movsl
mov
imul
shll
xchg
outsb
mov
andb
notl
fldenv
add
inc
insb
insl
xchg
aam
mov
and
sahf
push
sarl
fsubrl
mov
stos
call
das
push
push
das
or
push
adc
dec
xorb
inc
insb
es
inc
and
push
cmp
pop
push
dec
shrb
cmpsl
xchg
push
popl
xor
insl
and
sbb
sahf
les
adcl
jne
imul
popa
pusha
lret
stos
std
push
mov
push
insb
scas
xor
push
jl
jne
repz
mov
inc
xor
push
data16
add
data16
add
push
outsl
fs
fwait
jo
inc
add
shrl
fsts
sbb
add
pop
insb
jo
or
inc
pop
inc
mov
or
movsb
sti
jg
test
cmove
inc
push
dec
push
pop
inc
dec
inc
push
push
inc
push
or
jo
cwtl
das
addr16
push
gs
or
leave
cmc
or
dec
popa
rolb
sbb
push
jns
xchg
loope
rorb
add
dec
insb
lods
pop
push
addr16
cmpsb
dec
jb
or
dec
outsb
sbb
push
push
imul
mov
pusha
or
rorl
out
or
cmp
aaa
cmp
adc
inc
and
clc
add
std
ret
or
enter
std
loope
add
and
and
mov
ret
daa
mov
addl
int
mov
daa
push
daa
add
imulb
and
push
sub
mov
pop
jle
push
add
mov
add
insb
bound
mov
arpl
inc
adc
imul
arpl
dec
ljmp
sub
imul
popa
imul
hlt
insb
gs
idivl
imul
jne
insl
sbb
mov
xor
sbbb
mov
xchg
or
jp
outsl
data16
cmpsl
mov
je
dec
push
lods
and
fisubl
js
xor
cmp
shlb
cmp
inc
bound
filds
daa
inc
jbe
mov
inc
jb
jb
outsl
fs
outsb
fs
iretw
loopne
mov
push
jne
stc
data16
imul
add
popa
jae
insl
sub
dec
cmova
add
and
xor
popa
outsb
cmpsb
push
jno
adc
xor
movsl
insb
xor
repnz
imul
xor
data16
imul
jo
push
sbb
push
outsl
std
cltd
or
shlb
popa
sub
dec
shl
push
jb
jb
dec
insb
pushf
inc
push
loopne
or
ss
push
adc
pop
je
xor
lods
push
outsb
insb
negb
and
pop
lods
das
sub
inc
pushf
inc
out
mov
cmp
fsubl
adc
sbb
jae
or
outsl
lods
jnp
add
pop
xor
pop
lret
data16
jb
cmpsl
das
pop
flds
sbb
test
xchg
inc
insl
and
lods
inc
outsb
and
pop
push
shrb
sub
iret
pop
sub
push
sub
inc
pop
and
inc
daa
fnstsw
or
pop
or
dec
popa
push
cmp
xor
insb
fs
cs
jnp
fnstcw
push
inc
sbbb
add
add
outsb
jbe
sbb
mov
mov
xor
cmc
pop
jae
xchg
pop
popa
outsl
sbb
popa
arpl
xor
pop
mov
adc
xchg
sub
aad
lahf
jecxz
ret
or
adc
int3
rol
xchg
pop
xchg
pusha
mov
sub
rclb
xor
pop
inc
and
nop
xor
jnp,pt
stos
pop
cwtl
xlat
sbb
xor
pop
inc
cmp
pushf
dec
push
int3
jno
in
fsubs
push
and
in
cltd
add
dec
sub
ret
push
cmpsb
inc
mov
fisubrl
mov
imul
sarl
jns
inc
xor
sub
pushf
pop
cltd
push
xor
xchg
sbb
pop
jno
sbb
dec
in
jns
mov
mov
pop
out
add
test
jo
insb
jae
ret
nop
iret
cmc
push
insb
stos
sbb
and
sub
sbbl
test
aaa
add
jmp
sbb
inc
andb
mov
inc
shl
andb
or
inc
jns
popa
out
jo
mov
loop
test
mov
popa
xor
adc
mov
add
rclb
jo
pop
cli
outsb
daa
and
and
add
fsubs
out
ja
sbb
and
lock
imul
addb
mov
insb
cmp
js
inc
mov
icebp
or
or
add
dec
lock
mov
adc
mov
jmp
dec
jo
dec
gs
inc
out
push
or
push
jnp
stc
mov
cmp
hlt
pop
sahf
imul
or
imul
adc
fisubl
jmp
cld
loopne
add
dec
arpl
jecxz
adc
mov
inc
cltd
pusha
sub
cmp
rorb
push
cmp
shll
adc
imull
add
add
andl
push
pusha
and
push
jbe,pn
lods
pop
rcll
roll
adc
loopne
pusha
xchg
inc
imul
xor
sub
ret
sbb
jecxz
int
xor
xor
cmp
mov
mov
daa
pop
insb
sbb
repz
loop
test
insb
stos
or
dec
jb
scas
dec
sub
inc
in
push
dec
or
inc
imul
push
gs
outsl
jp
mov
add
in
fdivrs
movsl
add
inc
mov
push
dec
push
xor
push
sbb
clc
sti
inc
dec
inc
lea
out
inc
jb
xor
mov
cwtl
movsl
scas
pop
sub
dec
insb
xchg
push
ret
xor
dec
sbb
inc
incb
fdivs
ja
fistl
adc
lret
lock
push
xor
pop
or
pop
cwtl
mov
aad
outsl
inc
dec
add
and
sbb
sbb
push
pusha
adc
pop
cmp
mov
mov
pop
mov
cmc
mov
icebp
fistl
je
jb
arpl
lods
add
fiaddl
js
loope
dec
shrl
xor
or
adc
roll
les
adc
pop
subl
outsb
inc
outsl
js
adc
jne
lret
add
outsl
gs
pop
ret
cmp
mov
loopne
inc
cmp
mov
xor
xor
push
inc
push
fmull
dec
xor
fcmovb
adc
test
xchg
dec
adc
insl
lret
test
insb
jne
gs
ret
lret
and
addr16
outsl
shlb
subb
dec
data16
repz
sti
addr16
popa
sbb
fcomps
je
pop
dec
test
sbb
fidivl
inc
fadd
popa
divps
bswap
ret
fwait
inc
in
cwtl
xchg
add
inc
sub
or
fstpt
cmp
outsl
jo
add
jl
xor
sahf
lea
adc
rdtsc
not
sbb
and
addb
inc
and
fmuls
loopne
stos
or
or
jne
and
fsub
daa
dec
cwtl
pop
mov
fwait
sbb
sbb
lods
dec
les
sbb
inc
push
xorb
lods
loope
sbb
pusha
cmp
imul
push
mov
adc
dec
pusha
cltd
adc
ret
mov
dec
arpl
jo
ret
cld
adc
lods
enter
sub
and
outsl
imul
mov
outsl
icebp
insb
outsb
lea
dec
sbb
out
fs
arpl
out
imul
test
push
outsb
inc
and
or
xor
jae
popa
pop
adcb
add
push
arpl
insb
inc
inc
sbb
loopne
outsb
mov
pusha
xchg
pop
imul
fdivrl
inc
out
arpl
add
dec
cwtl
addr16
mov
arpl
adcl
out
inc
filds
jb
gs
or
mov
int
popa
cmp
adc
lock
fnstenv
push
and
jmp
loop
dec
add
cli
gs
repz
dec
mov
sub
test
outsl
mov
daa
outsl
test
loopne
and
xchg
je
or
movsl
jge
daa
movsl
je
mov
push
adc
push
fadds
pop
push
test
mov
dec
xchg
test
add
push
js
add
mov
adc
inc
jae
or
outsb
cmp
xor
mov
adc
pop
xor
push
and
mov
outsb
sbb
jne
frstor
shll
imul
clc
icebp
sbb
adc
jae
or
imul
cmp
and
addr16
xor
sub
mov
jp
in
and
dec
les
lock
imul
je
add
insl
dec
lods
adc
fcmovu
lret
pushf
pop
or
loopne
aaa
dec
push
hlt
mov
in
mov
and
xchg
fstpl
dec
imul
nop
cmp
movsb
push
js
outsb
inc
test
loop
out
dec
and
mov
mov
and
insb
insl
mov
mov
fdivs
jae
xor
or
push
sub
mov
and
lock
bound
push
fwait
outsb
jbe
jnp
add
sbb
inc
sub
jno
mov
sbb
mov
xchg
push
xchg
inc
cmpsl
in
or
out
pop
inc
lods
push
jno
dec
rolb
adc
sbb
test
outsl
mov
addl
jg
sbbb
add
and
bound
mov
in
xchg
pop
xchg
xor
scas
mov
xchg
js
push
xchg
aad
fcomps
adc
lds
sub
cmp
ds
sbb
pop
xlat
out
and
xor
add
testl
clc
mov
inc
imul
xchg
dec
insb
les
das
adc
cmpl
dec
mov
xchg
and
or
xor
pop
push
inc
adc
loop
and
je
mov
mov
and
add
mov
loopne
add
mov
outsb
add
icebp
push
lods
sbb
lret
aad
insl
imul
adc
push
sbb
inc
les
cmp
stos
inc
cld
sub
test
inc
jno
popa
adc
mov
sahf
push
lret
in
jmp
and
out
mov
in
sbb
rclb
outsb
ret
inc
imul
jo
jo
out
sbb
push
cmp
jae
pop
jp
mov
cmp
mov
fs
push
push
add
mov
mov
xor
pop
sbb
or
cwtl
push
push
xchg
or
andb
jmp
int3
cmpsl
dec
inc
dec
cmp
sarb
dec
sbb
inc
or
fwait
pop
ret
xchg
jmp
or
push
outsl
push
aaa
scas
arpl
ret
xchg
push
and
outsl
pop
pop
shll
hlt
add
pushf
mov
sti
dec
test
xor
int3
aaa
pop
pop
add
ja
ja
jb
pop
pusha
shll
push
jo
aaa
add
cmp
cli
daa
ss
fs
jae
xchg
ljmp
stos
daa
push
shr
mov
ret
aaa
pop
add
decb
shll
push
cltd
andb
dec
dec
xor
in
mov
pop
and
dec
loope
sbb
scas
adc
in
push
inc
push
dec
add
add
pop
and
loopne
sar
decl
sbb
push
add
push
and
push
add
xchg
inc
verr
or
ljmp
pop
adc
or
subb
fcmovnbe
sub
ds
push
fsubrs
and
stos
mov
cs
add
and
pusha
inc
scas
sti
outsb
sub
or
imul
pushf
sbb
dec
pop
ret
mov
fs
js
cs
dec
push
push
dec
mov
loopne
or
bound
pop
test
mov
sarb
dec
xor
js
popa
add
clc
sub
dec
xor
cs
test
adc
push
pusha
dec
jmp
xor
jb,pn
enter
or
out
dec
cmpsb
sahf
int3
sub
int
dec
inc
jae
arpl
fldl
ja
pushl
fisttpll
das
xor
or
inc
and
pusha
mov
lea
movl
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
pusha
int
add
ja
