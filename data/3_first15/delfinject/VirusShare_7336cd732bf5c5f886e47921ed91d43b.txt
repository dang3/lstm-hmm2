add
dec
outsl
outsl
imul
jb
jbe
insb
gs
popa
insb
jne
inc
add
addl
add
enter
add
xchg
sar
inc
seto
mov
call
add
inc
gs
gs
push
gs
imul
gs
push
inc
gs
je
jo
clc
cmp
pushf
add
pushf
lea
jmp
stc
ror
stc
cmp
cmc
xor
jmp
add
push
insb
gs
add
push
gs
arpl
jne
insl
sbb
test
adc
dec
dec
sub
imul
jbe
lret
and
jbe
loop
shr
js
add
movb
adc
mov
ret
adcl
stc
cld
mov
jle
jecxz
fidivl
mov
mov
cmpsb
popl
movsb
sbb
ret
xor
xchg
or
mov
dec
sub
mov
mov
inc
sahf
stos
push
std
cmpsl
push
dec
cmp
loope
inc
ds
sarb
sub
mov
in
mov
jo
pusha
push
shlb
leave
out
dec
cmp
pop
cvtps2pi
and
mov
sahf
dec
jle
out
pop
push
stos
loop
fistpl
movsb
sbb
jmp
js
inc
cmpsl
int3
and
jmp
adc
shll
jno
outsl
outsl
pop
dec
dec
dec
roll
jmp
out
sbb
inc
cmpsl
mov
movsl
dec
pop
mov
lods
cmc
pushf
bound
mov
cmc
cmp
ret
inc
xor
sahf
inc
adc
scas
xchg
jnp
jne
push
pop
es
mov
enter
push
ret
mov
pop
fnstcw
cwtl
inc
clc
test
inc
insb
outsl
jae
inc
insb
imul
add
jge
leave
rol
insl
xchg
mov
push
sub
out
mov
jp
mov
sub
pop
iret
rclb
cmp
push
push
call
mov
push
push
outsb
je
insb
insb
cs
insb
add
test
sbb
shr
btc
pusha
add
neg
lea
sbb
mov
cmp
pusha
test
push
lea
je
push
bt
pushl
add
pushf
push
pusha
pushl
lea
jmp
add
push
jb
je
inc
imul
outsb
pop
inc
es
push
push
push
repnz
outsl
sub
sub
dec
test
popf
sbb
adc
mov
enter
shl
xchg
dec
add
jns
sbb
pop
fnsave
aas
in
jg
mov
stc
mov
jl
icebp
adc
popf
ds
sbb
std
fidivs
int3
lds
dec
pushl
lret
cmp
add
push
xchg
test
lcall
inc
inc
dec
pop
pop
std
scas
mov
movsl
dec
loope
lds
ffree
and
push
pushf
mov
and
add
fidivs
addr16
mov
insb
nop
jns
inc
mov
fistpll
rorb
pop
jle
and
fcmovb
out
fnstcw
sub
popf
fmul
xor
ljmp
pop
xor
idivb
push
dec
pop
or
sub
add
dec
popf
cld
out
fcoml
ljmp
mov
push
inc
push
lock
andb
inc
xor
mov
das
push
dec
cmc
sar
hlt
stc
shlb
into
iret
fsub
in
jbe
sbb
jg
pop
xlat
imul
mov
xchg
inc
imul
jne
arpl
add
loope
ret
mov
dec
lods
movl
gs
gs
gs
fs
imul
je
gs
je
jo
imul
add
outsl
bound
dec
gs
outsl
jb
push
je
je
jae
js
push
call
cltd
adc
iret
outsl
sbb
lgdtl
mov
jns
daa
shl
in
jb
js
nop
xchg
mov
pushf
cltd
pop
pop
xchg
lods
add
adc
pop
and
adc
dec
insb
fadd
popa
fs
jo
xor
cs
insb
add
in
inc
call
jmp
sbb
push
pop
dec
inc
inc
dec
hlt
lods
sub
leave
jg
sbb
xchg
and
pusha
inc
push
mov
imul
ds
leave
mov
jns
lcall
inc
fistpll
rolb
adc
sub
div
add
mov
push
test
out
push
int3
mov
mov
adc
loope
jg
scas
fldenv
xchg
push
jo
ja
adc
and
sbb
and
and
mov
pop
pop
pop
pusha
mov
sbb
nop
andl
xor
dec
mov
jnp
inc
arpl
sub
dec
xor
sbb
std
fs
cli
mov
jecxz
mov
je
rclb
mov
dec
loope
jg
jecxz
mov
cmpsb
dec
lock
frndint
push
or
in
fmull
js
clc
and
in
pop
loope
jg
jne
pop
pop
pusha
call
fsub
jmp
leave
mov
pop
mov
aas
cmc
insb
mov
dec
inc
dec
push
dec
inc
pushf
in
fidivs
push
sub
and
adc
add
jb
jbe
pslld
mov
add
je
push
inc
outsl
outsb
je
js
add
les
stc
test
push
mov
lea
je
pushf
cmc
test
push
lea
je
pusha
and
pushf
pushf
mov
pushf
lea
jmp
add
inc
add
add
push
gs
insb
imul
inc
popa
je
add
je
add
movl
movb
mov
movb
pushf
pushl
pushl
ret
adc
fcmove
rol
aam
jo
clc
push
mov
mov
adc
push
lods
rolb
roll
sbb
in
pop
fucom
cmpsl
xchg
in
mov
xor
aam
movsl
ja
fsubrl
test
mov
jg
fwait
in
inc
cmpsl
pop
xchg
pop
loope
shrb
repz
jle
jbe
xor
hlt
sub
jge
cmpsb
jne
mov
and
loope
andl
fwait
sahf
xchg
xorb
cwtl
sarb
dec
cs
int3
test
loop
cwtl
cmp
int
dec
loopne
pop
rclb
xchg
aaa
xchg
sub
mov
js
cmpsl
dec
imul
mov
pop
in
shlb
pop
fmuls
jle
daa
scas
cmpsb
lahf
xor
popf
lds
je
lods
aad
cmp
push
xchg
mov
adc
dec
adc
shr
or
mul
dec
dec
push
cld
cmpsb
dec
clc
hlt
insb
in
sub
aad
out
dec
jg
clc
mov
pop
ss
fwait
jns,pn
fiaddl
inc
out
jbe
addr16
jb
sti
fmulp
push
notl
aad
std
inc
inc
sbb
adc
imul
add
mov
loope
stos
call
push
or
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
insb
arpl
push
arpl
pushf
lea
je
cmc
bt
shr
add
neg
cmc
mov
xchg
jmp
add
inc
jb
ja
arpl
add
add
popa
jo
insb
insb
outsl
arpl
mov
xor
rcl
sar
mov
je
clc
add
pusha
pusha
call
add
dec
jae
push
jo
popa
dec
jne
gs
arpl
cmp
pushf
clc
add
jmp
test
mov
cmp
out
push
mov
outsl
add
gs
sbb
sbb
dec
pop
cli
aam
cld
mov
stos
adc
pop
dec
cmp
retw
jns
sahf
push
ror
insl
push
and
imul
sbb
jb
and
mov
push
std
test
mov
mov
push
aas
adc
std
add
pop
mov
or
push
mov
outsb
adc
adc
imul
mov
jle
bound
xor
push
or
mov
outsb
in
sbb
rclb
sbb
call
push
fdivrs
cmp
and
xor
test
add
xor
ljmp
mov
es
pushf
push
hlt
ffreep
mov
test
mov
in
iret
add
xchg
mov
leave
ljmp
push
add
insl
test
iret
inc
mov
jae
scas
pop
adc
aad
iret
addr16
lock
cmp
mov
movsb
shlb
jg
pop
dec
add
cmp
imul
pop
fnstsw
or
fimuls
cmp
add
sti
adc
sub
aam
bound
and
jae
pushf
pushf
lea
jne
push
pusha
push
mov
stos
movb
lea
jmp
and
push
pushl
clc
add
add
push
add
pusha
push
dec
pushf
jmp
add
inc
gs
jae
jb
popa
insl
gs
add
add
outsb
jae
popa
je
dec
gs
popa
add
sub
lock
jb
add
and
sbb
mov
inc
ss
je
rcl
xchg
add
clc
cld
lahf
dec
cmpsl
xchg
cld
shlb
mov
out
lret
call
pop
pusha
insl
add
pop
pop
pop
insb
in
xchg
xchg
pop
scas
dec
dec
xlat
or
cmpsl
pop
mov
xorb
data16
lea
orl
jae
sub
jne
mov
or
repnz
xchg
push
shll
andb
mov
cmp
or
mov
dec
push
stc
lea
pop
add
aas
mov
imul
subb
xchg
popf
shll
clc
sbb
mov
rorl
and
mov
je
push
jb
arpl
jp
or
mov
fildll
and
push
jo
and
push
add
incl
cmc
fmulp
ss
inc
lock
cwtl
adc
pop
pop
xchg
push
push
cmp
push
jo
sub
lret
inc
jo
repnz
fcmovnu
sbb
aas
test
mov
ss
popa
dec
sub
or
out
pop
sub
test
mov
push
and
cmp
push
imul
mov
add
imul
or
orl
je
mov
not
inc
jmp
add
dec
jo
outsb
dec
jne
gs
add
stc
adc
xor
pusha
setae
movb
stos
pushl
mov
lea
pusha
mov
lea
call
jmp
add
inc
gs
jb
arpl
fs
jae
add
shrb
push
stos
push
lea
jae
jmp
call
add
inc
gs
jns
je
insl
dec
gs
imul
insb
gs
js
add
push
push
inc
push
je
jb
jne
add
add
jo
imul
gs
add
or
add
add
arpl
add
jl
add
mov
daa
add
test
add
daa
add
mov
add
rolb
add
or
add
call
add
add
add
add
add
inc
sub
dec
push
add
mov
sub
adc
add
add
add
xor
add
pusha
and
inc
add
sub
pusha
add
flds
add
add
sub
mov
add
rolb
add
movntps
rorb
add
or
sbb
add
enter
mov
sub
rorb
add
mov
sub
fmuls
add
rorl
add
xor
add
lock
add
sub
clc
add
addb
push
sub
add
add
rolb
add
pop
sub
adc
add
mov
sub
pushf
push
xchg
movsbl
cwtl
lea
push
call
add
push
gs
jne
jae
jb
outsl
jae
jmp
add
imul
outsl
popa
add
add
jae
insl
gs
push
add
add
inc
popa
je
push
imul
insb
gs
imul
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
gs
je
inc
imul
jns
add
add
je
push
jne
jb
dec
outsb
outsw
inc
add
add
imul
jo
imul
jb
popa
je
dec
jne
gs
add
enter
add
pusha
jmp
add
dec
outsl
popa
fs
jne
jae
jb
add
pusha
lea
je
call
add
push
imul
je
gs
pusha
pushf
lea
jae
push
jmp
add
inc
jb
popa
je
push
gs
imul
inc
gs
jns
je
insl
inc
imul
jns
add
add
push
gs
popa
insb
jne
add
add
je
je
dec
popa
outsb
fs
add
add
je
js
je
outsl
fs
push
add
add
je
imul
gs
add
inc
jb
popa
je
push
jb
arpl
jae
add
sub
test
pop
push
aad
xchg
pop
and
inc
cmp
xor
push
mov
shrl
inc
fdivl
lods
into
test
lahf
bound
dec
dec
scas
jl
dec
negb
in
pushf
dec
sahf
mov
call
mov
dec
incl
ret
js
sbb
jo
mov
xchg
fcmove
in
movb
lods
in
xor
jp
insl
add
andps
ja
adc
incl
push
stos
pushf
push
lea
jmp
add
inc
gs
dec
inc
imul
imul
cs
insb
add
xor
mov
bswap
pop
pusha
pushf
pushl
ret
add
push
imul
jae
jne
arpl
add
push
gs
jbe
outsb
je
mov
jmp
push
xor
rcr
call
dec
push
push
inc
push
xor
cs
dec
dec
add
add
gs
je
push
push
add
push
sbb
clc
in
fmul
mov
fdivs
out
mov
shl
pop
xor
pop
or
and
int
mov
push
mov
cwtl
sbb
jae
cli
jmp
mov
add
enter
sbb
repz
pop
rcr
push
and
sbb
push
mov
jmp
pop
loop
mov
ja
std
add
repnz
shlb
dec
pop
test
mov
pop
and
mov
out
jecxz
push
repnz
mov
jle
add
es
or
jnp
xchg
add
mov
mov
mov
mov
pusha
or
loopne
loopne
or
cmp
ds
cmpb
lock
test
mov
movb
xor
sbbb
imulb
xchg
inc
dec
inc
cmp
daa
dec
push
inc
dec
repnz
jp
outsb
jnp
sub
xor
or
jg
ret
inc
adc
loopne
lcall
icebp
pusha
not
mov
movb
pushf
pushf
push
lea
jmp
subb
imul
in
fadds
jne
in
dec
ficoms
out
cmp
shll
int3
push
xor
xor
xor
imul
mov
fisubl
test
cwtl
push
sbb
dec
and
mov
dec
adc
inc
sahf
shlb
aas
xlat
mov
sub
ficompl
ss
cmp
push
pop
dec
dec
pop
adc
xchg
push
sbb
pop
or
or
test
mov
les
sbb
in
mov
sbb
lds
push
sahf
or
fisubrs
dec
add
jle
and
cli
jp
outsl
pusha
popa
andb
jae
ret
xlat
loop
mov
into
sub
clc
push
jnp
cli
mov
cmp
add
in
and
pop
or
cmc
sub
push
mov
push
push
dec
dec
push
cltd
mov
pop
bound
mov
pop
fldl
stos
push
test
popa
xchg
pop
andb
sub
test
shl
dec
out
xchg
cmp
loop
and
mov
cmc
lds
sbb
pop
ds
loop
xchg
pop
xor
sbb
pop
adc
cmpsl
cwtl
popf
cmpsb
lahf
sahf
test
xchg
fldl
mov
jmp
popa
loope
sbb
jg
jmp
push
out
inc
sti
jp
and
xlat
pop
push
in
xchg
jg
pop
dec
out
push
jbe
jmp
pop
push
jmp
out
ret
jle
aad
sub
adc
push
add
in
lret
inc
imul
pop
pop
add
dec
gs
jo
jb
add
add
je
imul
push
call
and
add
fs
lea
jmp
add
dec
inc
push
outsb
fs
gs
popa
add
leave
push
cmp
cmp
cmc
push
shld
adc
bt
push
sub
rcr
sar
and
push
sub
bswap
not
bts
mov
rcr
pushf
jmp
xor
push
push
jmp
jmp
add
push
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
scas
mov
add
push
jae
add
and
sbb
outsb
pop
dec
xor
mov
ret
jl
shl
mov
jecxz
inc
in
cmpsb
loopne
or
ljmp
pop
sub
sti
pushf
cltd
pushf
adc
mov
inc
adc
js
push
lcall
sbb
add
scas
add
inc
jb
popa
je
inc
imul
push
add
add
outsb
fs
gs
inc
imul
gs
gs
popa
addr16
add
lea
jae
stc
bt
test
pushf
xor
mov
lea
call
jmp
xchg
lods
jmp
pusha
pusha
jmp
add
push
imul
popa
jae
inc
add
gs
xor
fs
insb
add
jle
pop
sub
mov
push
dec
bound
push
push
and
inc
dec
sbb
sahf
aad
into
sub
fs
dec
pop
cmc
stos
cltd
push
addl
insl
mov
push
push
fidivs
xchg
scas
sahf
xchg
mov
and
cmpsb
add
ja
ret
add
mov
in
and
adc
scas
dec
xchg
jne
jge
mov
sub
scas
test
sbb
dec
mov
inc
and
popf
mov
push
push
push
ficoms
repz
in
jo
sahf
pop
sbb
orb
je
mov
test
mov
rcl
faddl
dec
fidivs
cmpsl
sub
pop
les
jns
dec
aad
scas
sub
pop
push
cs
test
cmp
cli
decb
cmp
scas
fldcw
dec
out
fidivrl
cmp
or
xchg
stc
in
push
jle
cld
cmp
inc
imull
inc
fs
inc
or
mov
inc
push
pop
mov
in
insl
repz
and
cs
push
imul
jo
jae
ljmp
imul
mov
cs
xlat
or
sub
repnz
push
hlt
scas
and
lods
dec
aad
xchg
pop
sub
mov
mov
ja
movsl
sbb
insl
fildll
shll
mov
jbe
addr16
mov
stc
sbb
fnstcw
sbb
push
leave
int
pop
cmp
addr16
sub
cmp
xlat
daa
in
test
mov
sti
or
mov
arpl
daa
rcrb
cld
mov
mov
or
adc
or
sbb
mov
push
aad
push
push
and
mov
push
or
rolb
jbe
lea
jp
je
cmp
lret
shrl
out
sub
insl
push
push
aad
insb
mov
adc
sub
pop
enter
dec
jbe
dec
sbb
test
mov
addr16
nop
push
sbb
sub
pop
fdivrl
inc
mov
popf
pop
inc
daa
aad
es
adc
leave
push
out
xchg
jbe
fldenv
adc
inc
es
xchg
leave
test
js
sub
dec
repz
push
mov
xchg
insl
push
movsl
jo
xor
std
jle
xchg
icebp
mov
sbb
cs
add
xchg
cmp
xor
mov
gs
jle
push
ljmp
gs
ja
lods
jle
sub
repz
ljmp
ljmp
push
int
dec
mov
push
insl
mov
mov
dec
push
insl
inc
sub
or
push
pop
jp
daa
idiv
push
scas
dec
mov
xlat
scas
cmpsl
pop
cltd
iret
cmpl
sbb
in
xchg
repz
inc
add
jecxz
cmpsb
mov
sbb
xchg
pushf
xor
es
les
and
xchg
mov
pop
out
cmp
adc
hlt
lcall
add
push
push
int
jle
jle
test
sub
cli
pop
dec
addr16
xor
push
adc
push
push
add
and
mov
xor
out
xchg
adc
jg
in
inc
mov
mov
lods
adc
inc
inc
dec
dec
es
fdivl
push
dec
inc
mov
rclb
hlt
cmpsl
call
jle
xchg
or
cmp
test
add
ret
jle
out
outsl
xchg
pop
jbe
sahf
xchg
sub
inc
pop
xchg
mov
push
inc
sbb
and
add
push
stc
pop
cs
lret
fidivrs
into
scas
mov
push
push
xchg
adc
icebp
xlat
sub
mov
ss
pop
sar
lcall
popa
ret
int
cmp
mov
dec
or
into
mov
push
out
mov
stc
xorl
es
jle
jo
push
loopne
cld
lods
or
adc
push
loop
fwait
test
pop
or
sub
inc
jbe
out
sbb
mov
sbb
jle
dec
and
lds
push
es
pop
cmp
or
imulb
aas
idivl
std
pop
out
shrl
and
pop
sub
push
adcl
add
dec
mov
insl
add
fst
insl
stc
loopne
rclb
es
or
shrb
aaa
sub
movsl
pop
inc
ret
cmpl
xchg
bound
mov
push
inc
and
push
fstl
call
xlat
add
sti
pop
lods
scas
mov
add
push
sbb
pop
test
pop
dec
ret
ljmp
mov
mov
inc
mov
and
andb
dec
mov
inc
mov
xchg
or
add
loopne
adc
out
inc
dec
cltd
pop
jge
sbb
cmp
push
adc
and
stc
imul
jg
rcrb
or
insl
les
pop
inc
push
lods
outsb
push
jbe
stos
testb
add
jmp
insl
jg
cmp
js
sub
insb
jecxz
jne
repnz
sbb
cmp
aad
lods
push
xchg
movsl
jecxz
jg
dec
ljmp
push
inc
adc
adc
es
mov
inc
je
hlt
and
cltd
sbb
adc
fwait
in
jp
add
ja
orl
mov
lea
sbb
sub
call
jbe
cs
scas
xchg
sti
inc
mov
sbb
mov
inc
stc
in
inc
jp
mov
popf
jbe
sub
call
sti
daa
fsubrl
fcomps
clc
add
sbb
jmp
lahf
aad
jns
retw
xchg
jge
or
inc
shr
xchg
and
loopne
cltd
dec
sub
lret
sbb
dec
dec
or
sbb
fs
xchg
push
lods
sbb
std
or
xchg
push
and
mov
ds
push
sub
sbb
mov
data16
out
ss
push
xchg
andb
cmp
pop
into
or
ret
cmp
rol
mov
sub
adc
int3
in
scas
dec
inc
jne
lods
lahf
mov
push
jle
inc
push
mov
jne
test
adc
icebp
pop
lock
cmp
shll
jle,pn
cmpl
mov
dec
jge
or
jg
and
sub
mov
outsl
sub
sub
repnz
adc
dec
or
xor
jbe
inc
pop
imul
or
and
clc
xchg
jge
inc
movsb
adc
mov
int
lret
flds
jno
push
pop
lods
es
dec
jge
or
adcl
ja
div
jbe
push
stc
out
mov
dec
test
sub
int
inc
mov
imul
cltd
and
popf
in
xchg
mov
dec
and
mov
stc
subb
test
jecxz
mov
lods
jge
ffree
in
pop
lds
outsb
enter
fstpt
inc
lds
pop
inc
adc
push
add
aad
push
cli
cmp
insl
jbe
fwait
dec
sub
andl
push
repz
ds
push
pop
outsb
jae
std
add
push
cs
xchg
cld
adcl
push
neg
push
dec
cmpsl
fisubrl
xchg
loopw
mov
cmp
aaa
repz
sub
pop
or
sub
ret
inc
les
mov
pop
mov
daa
ss
push
push
inc
cmpsl
scas
xor
test
lret
and
icebp
push
jmp
add
lea
cs
insl
mov
push
daa
into
adc
addr16
loop
jno
add
inc
and
pop
testl
jmp
out
in
cltd
mov
int
pop
call
fildl
mov
movsl
cmp
popf
mov
xchg
sub
inc
jl
jg
sahf
fisubs
lods
sti
mov
lea
daa
mov
test
xchg
mov
jecxz
test
cmp
pop
movsl
push
jle
push
inc
dec
daa
dec
pop
push
xor
aas
lods
es
sub
pop
out
addr16
pop
sbb
xlat
jno
and
pop
cmp
sbb
int
sub
outsl
inc
in
pop
ljmp
mov
jne
and
mov
paddusw
stos
leave
inc
ss
add
mov
pop
mov
leave
std
ficoms
int3
mov
jl
jo
imull
jl
cltd
cmc
loopne
jo
xchg
inc
divb
xchg
ds
lods
sahf
xchg
dec
int
gs
xchg
sbb
pop
inc
pop
or
sub
fidivrs
fcoms
scas
inc
shll
out
pop
aad
mov
and
pop
outsb
xor
sbb
inc
sub
test
das
mov
mov
sub
fs
push
push
ret
addb
lods
jbe
bound
sub
jo
xchg
push
js
cmp
mov
outsb
jbe
jo
jb
out
movsl
ficomps
or
mov
insl
lret
sahf
iret
jle
mov
arpl
push
mov
and
mov
aad
daa
repz
mov
mov
push
xor
adc
fdivl
push
sub
adc
roll
pop
fstpt
jecxz
cmp
sub
out
inc
sub
outsb
movsl
dec
mov
jbe
fists
adc
lret
jle
push
cmp
push
push
insb
mov
pusha
jecxz
cmpb
xchg
adc
int3
or
repz
sub
daa
jge
sub
cs
mov
or
jns
cs
ds
push
fxch
incb
or
insl
shl
jl
jne
push
mov
sbb
leave
cmc
sub
sti
icebp
jecxz
fstps
outsb
ja
push
and
adc
fdivrs
fmull
rcrl
sbb
pop
xchg
push
sub
int
fsts
inc
popf
push
addb
pop
push
inc
cs
pushf
pop
insl
lock
push
outsb
jbe
and
jle
sub
js
negl
jmp
mov
aad
leave
mov
mov
sub
cmp
sub
les
bound
cpuid
push
cmpsb
ss
xlat
stos
fisubl
cmpsl
inc
ret
movsl
ds
cmp
jns
decb
and
sub
sti
loopne
push
xor
cmp
test
lods
mov
mov
or
insl
dec
pop
mov
stc
add
ljmp
loop
shll
or
or
subb
std
add
clc
ljmp
fcompl
fsubrl
test
test
mov
test
test
test
test
test
stos
dec
test
nop
lods
test
cs
push
mov
sub
scas
mov
or
adc
pop
imul
jge
sbb
mov
aam
xor
pop
fs
xor
pop
jecxz
mov
fs
mov
push
mov
jno
arpl
addl
inc
aaa
inc
and
sub
or
jbe
daa
pop
inc
and
daa
cltd
rorb
sbb
sbb
fs
xlat
cwtl
hlt
xorl
fwait
mov
lret
gs
repnz
mov
adc
rorl
jge
push
cmc
out
sub
jne
fstl
int3
ret
daa
inc
in
push
push
jbe
push
push
test
je
xchg
push
jle
in
std
out
fmul
pop
and
leave
cltd
sbb
in
jle
and
jo
sub
sub
loop
leave
push
push
fcoml
jae
xchg
fldcw
jbe
mov
and
mov
sub
jo
lock
sub
push
add
ss
out
and
sbb
pop
dec
inc
les
into
dec
cli
fnsave
or
sti
insb
es
mov
cmp
pop
push
ljmp
xchg
xchg
cmp
inc
out
add
and
pop
mov
pop
scas
jb
add
sarb
push
adc
xchg
popa
mov
faddl
imul
dec
divb
adc
cmp
and
cs
call
ss
std
sub
cmpb
jp
sbb
in
imul
push
mov
xchg
jl
jo
mov
jbe
ss
scas
inc
aaa
pop
cs
mov
cld
push
cmp
icebp
insl
sub
leave
lods
popf
jle
pop
jp
inc
cmp
xor
sbbl
inc
shll
sub
inc
outsb
and
je
dec
mov
outsb
lahf
push
dec
movsl
fdivs
stc
inc
mov
dec
lea
notl
insl
xor
cmp
jno
adc
in
and
clc
push
or
mov
daa
int
pop
or
std
push
cs
jno,pt
movsl
loope
cs
std
je
mov
mov
sub
xor
sbb
inc
insl
je
dec
cmpsb
dec
test
sub
es
lds
mov
inc
repnz
fs
dec
inc
scas
and
cs
mov
xchg
testl
pop
pusha
int
imul
dec
lods
pop
inc
popa
ja
xchg
sbb
jne
pop
mov
rcrl
cmp
sub
xlat
orl
dec
adcl
sub
sahf
and
insb
leave
sub
pop
jae
add
cs
and
xchg
mov
push
clc
test
mov
scas
clc
mov
or
sub
jp
insl
inc
add
into
or
xchg
leave
xor
jle
stos
lcall
mov
stc
or
adc
pop
cmp
sub
push
adc
inc
inc
dec
xchg
insl
fstps
clc
leave
call
sahf
jl
inc
xor
pop
mov
mov
fsubrs
lret
xchg
mov
xchg
or
stc
jle
loope
pop
inc
pop
push
xchg
mov
mov
std
bound
push
mov
push
sahf
fcomp
les
in
jge
inc
or
insl
aad
pop
fldcw
vucomiss
xchg
addr16
lret
in
mov
inc
rcl
push
aam
cwtl
fsubr
movsb
into
push
cltd
roll
adc
inc
aad
int
push
lret
add
adc
xorb
add
and
sti
in
movsl
cmp
pop
mov
rcrl
jle
inc
and
xchg
lods
adc
fldcw
jno
mov
inc
mov
push
out
js
sti
inc
rcll
and
dec
gs
dec
pop
mov
loop
scas
addr16
mov
inc
push
mov
lods
sub
push
mov
test
or
mov
sub
scas
ret
fsubrl
lock
push
lcall
mov
fsubrs
pop
and
or
scas
int
mov
mov
je
inc
or
cs
fdivr
inc
lcall
insb
leave
adcb
push
fst
jl
andb
and
test
or
push
push
mov
add
xchg
mov
repnz
pop
jo
cmpsb
cmpl
xor
movsb
mov
sbb
jge
js
mov
xor
stc
jle
pop
mov
push
push
cmpsb
lea
in
sub
jecxz
mov
sbb
mov
fcmove
jb
std
sbb
mov
jp
int3
cwtl
jle
jle
lods
push
pop
repz
inc
jne
gs
ret
xor
xor
mov
pop
adc
jg
push
call
dec
xor
js
outsl
xchg
and
movsl
mov
nop
daa
enter
sbb
repz
int
inc
das
test
and
out
ds
sub
daa
jg
sbbl
xor
pop
fstps
pop
mov
out
imul
sbb
std
mov
icebp
inc
out
jge
push
jp
stc
arpl
stos
jg
pop
or
inc
in
xchg
mov
mov
imul
into
push
ds
mov
jbe
mov
add
adc
and
lcall
lret
mov
cmp
sub
stos
xchg
adc
lea
cltd
shll
jle
insb
aam
push
movsb
adc
adc
jno
data16
loope
pop
jbe
sub
jge
subl
sbb
mov
movsl
insl
jl
fisubrl
sub
sahf
sub
stc
icebp
jg
ret
xchg
and
xchg
mov
scas
fs
sub
ljmp
test
mov
insl
fstpt
or
bound
mov
sub
xchg
mov
jecxz
jge
imul
fidivrl
repz
cmpsb
les
jecxz
sub
adc
jp
fs
cmp
jp
jge
adc
mov
dec
push
negl
sbb
dec
lret
rcrl
pop
jmp
fistl
pop
es
jecxz
and
rcr
fmull
push
mov
jbe
inc
stc
test
insl
enter
arpl
pop
stos
dec
pop
inc
pushf
cs
xor
push
popf
out
les
outsb
fldt
dec
movsb
cli
lret
pop
mov
push
cmc
loop
fsub
inc
lds
enter
push
jp
popf
repnz
or
ss
xlat
add
dec
fdivrl
mov
push
insl
add
outsb
inc
push
js
das
pop
xlat
mov
repz
pushf
mov
mov
outsl
sbb
pusha
push
push
and
mov
test
fdivp
push
cmpsb
inc
sbb
mov
out
mov
push
scas
mov
add
rol
adc
inc
mov
js
add
int
lahf
push
inc
jle
mov
fsubrs
pusha
pop
jbe
js
stos
fisubrl
cwtl
insb
cltd
movsl
gs
addr16
mov
mov
cli
int
ja
js
push
outsl
push
jb
pusha
es
out
addr16
sub
loop
into
mov
sub
into
pop
and
add
and
add
push
mov
pop
push
ds
mulb
add
push
arpl
rcrl
jb
lcall
push
and
sub
push
lods
jo
xchg
and
xchg
mov
push
pushf
scas
sbb
jg
stc
dec
and
cmp
movsl
and
sti
mov
sub
fistl
out
pop
cmpsl
jo
mov
pop
xchg
ds
push
faddl
and
pop
jbe,pt
adc
jbe
in
fs
out
mov
loope
dec
jb
iret
and
xchg
stc
hlt
cs
cmpsb
cmp
adc
mov
push
cli
scas
icebp
lret
fnstenv
cmpb
lret
ljmp
and
cmpsl
iret
push
aas
sbb
scas
data16
push
pop
fnstenv
mov
lds
sub
insl
adc
jle
arpl
jecxz
jge
mov
and
push
sbb
sub
jns
or
cmp
lahf
ja
and
outsl
mov
into
mov
add
out
xchg
pop
das
dec
mov
shll
gs
in
cmc
mov
scas
sbb
xchg
dec
testb
std
jb
rcr
and
or
adc
inc
iret
popf
jns
mov
aad
jo
dec
sti
xchg
loope
sub
jbe
mov
inc
jl
push
sbb
fs
xor
mov
scas
pop
test
jns
cmc
and
pop
mov
movsb
jne
dec
ds
xchg
daa
xchg
dec
test
mov
pop
clc
movsl
adc
dec
cmp
imull
loop
mov
inc
push
daa
push
dec
jns
scas
mov
es
cltd
aad
into
outsl
dec
jle
fisubrl
pop
dec
xchg
mov
pop
mov
cwtl
push
add
dec
or
mov
xchg
jb
add
cld
js
push
cltd
incb
sub
or
add
pop
insb
mov
mov
mov
mov
subl
dec
cmp
pop
out
mov
andl
fwait
cmp
inc
cltd
xchg
mov
sub
insl
lods
cwtl
cmc
mov
lds
test
add
call
lcall
mov
inc
push
scas
movsb
sarl
xchg
sub
std
pop
iret
cmp
mov
sub
lea
push
test
adc
xor
les
fisubl
pop
push
mov
inc
hlt
mov
push
xorb
jmp
testl
mov
mov
push
jbe
mov
push
js
fdivs
or
repz
add
pop
xchg
sub
mov
out
cltd
test
jle
imul
xchg
in
cmc
aad
filds
xor
ret
sub
mov
sub
jle
es
cs
push
mov
mov
and
movsl
add
ja
scas
sahf
jle
jp
jg
or
jno
xor
test
mov
push
jge
std
push
ds
push
cmp
or
inc
out
fucomi
add
ja
scas
inc
xchg
dec
mov
es
cs
or
jne
cs
mov
mov
inc
xchg
and
sahf
add
ja
scas
notb
scas
inc
and
add
ja
scas
in
in
mov
inc
and
dec
add
ja
scas
and
or
test
fisttpl
scas
xchg
outsb
mov
lds
fcmovne
add
ja
scas
movsl
xchg
lods
mov
push
and
push
add
ja
scas
out
out
mov
and
ja
scas
adc
or
jne
fstpt
and
xchg
pop
mov
mov
fstpt
scas
xchg
xchg
popf
mov
and
or
add
ja
scas
outsb
xchg
xchg
mov
int
fcomi
add
ja
scas
lods
xchg
aad
fisttpll
push
inc
push
and
ss
ja
scas
out
xchg
push
mov
dec
and
jbe
jle
es
cs
push
mov
cmp
mov
scas
xchg
xchg
sahf
mov
mulb
add
ja
scas
imul
cli
fcomps
jns
insl
sub
ja
and
xchg
or
add
lahf
xchg
mov
mov
xor
es
push
jbe
dec
ja
sbb
aad
out
daa
xchg
xor
and
inc
dec
jl
cs
loop
fisubl
xor
and
jp
push
and
test
jmp
jge
mov
inc
clc
shrb
lret
rol
xchg
in
lea
cmp
js
mov
and
shll
sbb
pop
mov
push
mov
jb
jg
push
shrb
pop
and
cmp
mov
mov
xor
movb
leave
mov
jne
pusha
sub
popa
dec
and
sub
daa
ss
nop
pop
sbb
sbb
sub
xlat
loop
inc
leave
sub
push
ret
jae
sub
cmpsb
xlat
rcr
scas
jp
leave
gs
inc
sbb
bound
stos
int
sbb
sub
pop
insl
dec
sbb
push
mov
inc
adc
push
xchg
cmpsb
inc
lahf
jae
fisttpll
fstpt
pop
sahf
mov
cmpsl
scas
mov
cs
adc
daa
cmp
inc
pop
fsubrl
lea
nop
xlat
xchg
dec
xchg
shr
arpl
aas
movsl
int
sub
sarb
pop
xlat
call
pop
inc
mov
mov
and
sub
ror
push
jp
mov
push
sub
sarb
imul
in
repnz
inc
fisubrs
test
jl
cmp
into
insl
pop
and
mov
pop
stc
icebp
cmp
mov
ds
mov
sub
imul
clc
cmp
xchg
inc
sub
popf
mov
daa
xchg
inc
push
gs
test
mov
mov
jbe
adc
rorl
ds
leave
in
xchg
and
sbb
sahf
sub
ds
jp
cmp
pop
rcl
mov
mov
in
pop
adc
pop
lret
pop
ret
test
xchg
out
jp
popa
insl
in
ret
sbb
push
xchg
mov
pushf
mov
dec
ret
int3
pushw
cs
sub
fcmovb
fcoms
xchg
pop
sub
divb
mov
sub
testl
cld
push
pop
loop
in
int3
sahf
inc
mov
pop
rcll
les
fidivl
jo
xchg
jge
xlat
xchg
push
imul
cmp
ret
imul
pop
cmp
mov
push
rcr
cs
neg
sub
insl
mov
test
out
out
outsl
addl
or
movsb
fildll
es
sbb
jnp
fnstsw
adc
jb
pop
inc
gs
sbb
xor
push
jp
shlb
ss
jb
out
mov
jne
adc
mov
int
cs
pushw
and
xchg
mov
mov
testb
cmp
shll
cmc
inc
xor
rcl
insl
jo
aaa
cmc
jl,pn
stc
sub
lock
mov
xchg
dec
dec
sub
dec
xchg
lds
mov
or
push
sub
dec
push
shll
pushf
test
aam
call
pop
fwait
dec
dec
inc
jnp
dec
insl
shrl
and
daa
mov
fcompp
cmpsl
xor
sarl
std
xor
stc
xchg
and
jge
inc
in
and
outsl
xlat
push
push
xor
pop
mov
shrl
jecxz
ljmp
push
and
insl
nop
stc
andb
jl
mov
stos
dec
xchg
fcompl
dec
and
cmp
xchg
arpl
and
cs
mov
cmc
loopne
lret
ss
aam
push
mov
icebp
insl
fucom
psllw
aas
pop
jge
xor
ja,pn
scas
or
mov
aad
ret
iret
scas
stos
scas
cmp
cmpsl
mov
fstl
sub
push
idiv
outsb
push
lret
test
push
jle
mov
movsl
cs
and
jne
jge
and
inc
popl
pop
js
pop
data16
xor
lcall
xchg
subb
aaa
int
xor
jl
pop
js
mov
or
mov
jnp
xchg
sub
cmpsb
fwait
dec
xchg
mov
pop
arpl
cmp
pop
mov
ljmp
pop
jle
sahf
push
pushf
mov
sbb
gs
sub
scas
jge
sub
push
les
in
daa
xlat
in
jns
pop
jno
sti
cmpsl
or
or
jb
xchg
sbb
cwtl
jl
lret
rcl
int3
outsl
jmp
jmp
loopne
ficoml
pop
lahf
test
jp
std
lds
mov
push
mov
mov
pop
dec
sahf
adc
test
pop
movb
mov
mov
loopne
xchg
jle
sub
fmull
divl
outsl
pop
sub
stos
loop
movsb
mov
pop
and
cmp
lea
pop
lods
bound
jae
mov
pop
jp
cs
in
jnp
xchg
mov
outsb
das
xchg
in
or
repz
mov
loop
pop
dec
or
jge
sub
add
andb
xchg
jle
dec
dec
sub
lods
lcall
sub
push
cmp
mov
push
pop
mov
clc
push
cld
xor
out
mov
push
sbb
sbb
imul
es
cmp
pushf
ljmp
inc
ror
test
ret
xor
push
sbb
jbe
movsb
iret
pop
and
pop
ficoms
add
fst
leave
pop
sbb
push
mov
enter
iret
gs
sbb
sub
mov
adc
lea
push
push
sti
jb
lahf
cmpsl
or
mov
addr16
mov
test
jb
addr16
push
insl
mov
jg
pop
fxch
mov
fsubrl
inc
rcrb
mov
std
rclb
pop
sbb
sbb
inc
ja
lcall
jle
adc
out
and
stos
xchg
es
xchg
out
push
cmp
add
inc
faddp
jp
pop
iret
jl
insb
clc
out
jbe
das
cli
cltd
shlb
and
inc
out
xor
push
adc
mov
push
sbb
dec
out
cmc
and
insl
das
les
mov
ja
outsb
jne
pop
test
push
add
push
push
pop
in
sub
out
andb
enter
daa
out
and
jbe
mov
add
inc
insl
cmp
or
pop
outsb
scas
mov
insb
mov
push
fwait
mov
iret
sbb
es
xor
es
mov
or
jbe
pop
cmp
cwtl
push
dec
les
scas
fwait
cmpsl
and
in
xor
pop
jg
sub
nop
pop
mov
mov
mov
dec
out
rcr
fnstcw
sbb
xchg
ljmp
push
mov
sub
cmpb
outsb
test
inc
into
rorb
inc
sbb
mov
scas
frstor
jns
leave
test
lahf
nop
adc
or
xchg
das
repnz
sarb
mov
sbb
in
into
inc
and
inc
lahf
ljmp
aas
icebp
ret
or
pop
ljmp
push
mov
xchg
iret
xchg
cs
clc
addb
testl
enter
xor
pop
addb
xlat
xchg
cli
dec
cwtl
jg
js
pop
push
jecxz
pop
jb
shrl
inc
fldl
popa
bswap
jo
mov
cmpl
and
and
std
sbb
cmc
dec
jge
mov
addr16
cmp
sub
jle
inc
add
fimuls
ds
push
cmp
push
out
fs
int3
mov
xor
fcomps
and
cmp
leave
std
loop
or
mov
hlt
pop
enter
jecxz
xchg
aad
xchg
outsb
xchg
in
insb
popa
xor
shll
xlat
sahf
ja
xchg
lds
loop
cmpsl
push
jmp
sarl
xor
cmp
mov
mov
pop
leave
test
ljmp
shrb
out
insl
nop
nop
adc
pop
push
call
mov
cmp
xchg
dec
pop
or
sbb
aam
sub
loop
push
aad
test
pop
pop
cmpsb
mov
loop
out
inc
jl
add
mov
push
push
cmp
xchg
hlt
lods
cltd
cmp
dec
or
jo
cltd
scas
dec
in
fnstcw
push
cmp
loope
lods
jge
scas
insl
pop
and
daa
mov
push
mov
je
dec
sub
jle
rcrl
popa
negb
fs
mov
ret
andl
gs
mov
xor
mov
and
testl
cmp
cmpsl
cli
push
sub
outsb
and
sbb
inc
out
insl
push
adc
int3
repnz
pop
cmp
sub
push
insl
sbb
dec
mov
call
fildll
aam
test
adc
dec
add
push
jno
dec
aad
xchg
les
xchg
push
fnstenv
andb
or
sti
cmp
aad
or
lods
push
mov
pop
and
pop
pop
incb
sub
adc
jbe
jmp
pop
nop
into
push
std
test
add
test
loope,pn
xchg
cmp
mov
pop
mov
int3
cs
lds
sub
negb
pop
shlb
dec
dec
ret
leave
fidivrl
std
jecxz
adc
icebp
and
sub
fisttpll
jge
dec
lret
cmp
adc
dec
sbb
xorb
test
sbb
push
daa
inc
sbb
mov
jp
xlat
mov
and
inc
lret
sub
scas
test
insl
lods
pop
aaa
fnstcw
out
sbb
or
dec
jns
push
daa
loop
adc
jp
push
adc
dec
adc
fldt
inc
sbb
cs
cld
mov
and
cs
mov
js
add
ja,pn
scas
or
push
cmpsl
push
inc
pop
cs
fnstenv
inc
repz
lods
jge
lds
cltd
cmc
fwait
sub
cmp
mov
dec
sbb
sub
push
pop
js
imul
push
fisttpl
mov
cmp
repz
fwait
cmpsl
outsb
xlat
sub
cmp
sub
fcmove
in
dec
in
push
addr16
das
and
scas
xor
push
test
jp
rcrb
dec
scas
jb
hlt
lea
ljmp
cmp
push
outsl
outsb
stc
in
sub
pop
dec
mov
pop
dec
and
jb
lods
jbe
jo
pop
js
jp
sub
std
push
xchg
lods
ljmp
sub
movsl
cmp
pop
xchg
xchg
mov
mov
loop
inc
push
pop
imull
les
mov
subl
jbe
cmp
dec
gs
push
mov
xchg
push
sub
cmp
dec
lcall
sub
or
test
cmpsl
enter
sbb
mov
aas
ljmp
test
adc
dec
xchg
es
into
pop
pop
push
icebp
lods
jbe
jp
orl
cs
idivb
and
rol
push
adc
inc
cs
jo
dec
sbbb
aaa
inc
aam
and
mov
sarl
dec
test
pop
pop
mov
push
pop
outsb
jle
jno
pushf
sub
jl
xor
jge
xor
or
push
push
je
stc
xor
lahf
frstor
mov
repnz
shll
dec
and
pop
roll
sub
sbb
or
mov
outsl
jne
ja
test
or
inc
xor
pop
xlat
test
sbb
sbb
clc
ffree
insl
jg
ja
lcall
sub
out
dec
and
shrb
test
ficoms
repz
testl
stos
adc
sub
insb
mov
cmp
sbb
insb
push
mov
sarl
fdivs
js
mov
adc
jb
inc
ja
dec
shrl
pop
push
lock
aam
dec
adc
into
cmp
repnz
ret
mov
jbe
push
sbb
pop
mov
mov
mov
adc
int
fwait
and
xor
sub
xor
jo
stos
idivb
xchg
jbe
inc
jo
push
push
sub
pushf
and
outsb
jecxz
jp
mov
in
int3
jle
sub
mov
push
fnstenv
sub
jnp
test
les
dec
js
jle,pn
fldenv
scas
xchg
aad
sbb
or
fstpl
add
dec
add
adc
jne
popf
mov
mov
inc
js
mov
cmpsl
sbb
les
jecxz
xlat
enter
and
popw
gs
mov
xchg
mov
cmc
insb
sub
jecxz,pt
mov
inc
je
xor
movsl
push
mov
mov
pop
inc
sbb
mov
xchg
std
mov
rcrl
jecxz
sarl
jle
xor
push
cmp
push
mov
outsb
aaa
adc
or
jle
or
dec
lahf
insb
stos
scas
data16
adc
add
lods
mov
in
xchg
push
push
jecxz
jo
cmpsl
into
ljmp
insl
jno
flds
pop
mov
arpl
add
flds
idivl
mov
aaa
jge
mov
cmpsb
loop
mov
inc
lea
ljmp
sarb
shr
jle
push
pop
jnp
rcl
int
cmp
xchg
add
loopne
push
dec
ljmp
push
lret
jb
ljmp
outsb
clc
mov
test
dec
ss
outsl
add
sub
movsb
sbb
stc
mov
pop
dec
jbe
fs
sbb
mov
cmp
sar
pop
inc
mov
xchg
icebp
fs
cmp
sub
adc
mov
push
cmc
in
push
adc
cs
jecxz
shrb
mov
rol
or
and
dec
idivb
out
jmp
outsl
push
sub
scas
clc
sub
scas
push
xor
pop
incb
movsl
cmp
push
pop
inc
xor
iret
pop
mov
and
ja
xchg
xlat
ret
pop
stc
dec
sbb
iret
sarb
cmp
call
sbb
nop
inc
in
pop
jle
test
in
adc
pop
adc
xor
mov
xchg
lods
rolb
push
add
pop
clc
dec
xchg
push
pop
cmpsb
fstps
aad
xchg
lcall
dec
cmp
mov
dec
and
les
push
mov
pop
xchg
adc
stos
and
test
hlt
gs
xor
mov
dec
fnstsw
and
imul
xchg
jo
out
cmp
sub
lret
or
sti
mov
xchg
es
and
lea
mulb
scas
jle
in
sub
jo,pt
and
xor
cmp
stos
dec
pop
sub
pushf
or
rcll
int3
inc
call
ljmp
mov
sub
out
movsb
subl
sub
rolb
cmp
outsb
sahf
dec
push
fldl
loop
mov
dec
mov
add
sbb
stos
inc
cmc
or
inc
jg
inc
inc
pushf
xlat
cld
test
in
es
add
mov
or
sbb
gs
jmp
test
out
mov
pusha
adc
test
fcomi
jmp
sub
pop
gs
cmp
fdivl
test
rcrl
sbb
icebp
into
outsb
jbe
icebp
jle
test
into
dec
data16
jnp
jbe
icebp
arpl
fbstp
jge
int
add
leave
cltd
or
cmc
leave
scas
stos
cmpsb
popf
mov
push
push
test
push
shl
and
push
sti
mov
cmp
xlat
jno,pt
sbb
push
push
sub
pop
popf
stos
pop
lds
xor
cs
inc
push
call
popf
dec
test
sub
push
int
fidivl
sti
aas
fldenvs
ds
push
ret
scas
cmp
insb
pusha
xchg
add
lea
jbe
sbb
and
inc
popl
mov
mov
test
sti
cmpsb
fmul
rclb
hlt
sbbl
aad
mov
xor
es
push
xchg
aad
mov
jae
push
cmp
push
jnp
jl
jno
dec
and
push
ljmp
insl
push
jne
sbb
mov
xor
movsl
cmp
rorl
jg
xlat
repnz
ds
shrl
into
in
mov
pop
es
fcomps
jbe
push
mov
mov
stos
test
aaa
xor
fbstp
jbe
mov
out
pop
es
dec
cli
test
ds
loope
push
fldl
daa
jns
out
mov
std
es
mov
andl
test
xchg
fadds
fmuls
xchg
js
adc
addr16
pop
cmpsb
stos
and
push
or
stos
push
jl
insl
aad
cmc
and
pop
xlat
xor
sbb
cwtl
jbe
scas
mov
fdivrl
cmp
repz
jbe
xor
sub
inc
test
mov
push
fldcw
pop
mov
xlat
mov
fsubs
insl
cld
cmp
cmp
push
pop
pop
lock
stos
std
loopne
lods
test
adc
je
dec
mov
push
jbe
jnp
add
pop
inc
add
sub
lret
in
movl
stos
mov
cmpsb
fwait
arpl
dec
fldt
aas
lds
div
outsl
repz
pop
fidivrl
movsb
jmp
fsubrs
pop
shll
push
cmp
push
jmp
inc
mov
mov
lret
pop
imul
push
push
pop
shrb
xor
sub
aam
cs
repz
rcrl
fistps
je
fdivp
xchg
rorb
push
jo
adc
out
cmc
fidivs
outsl
jle
push
push
jg
in
adc
jmp
out
in
call
scas
in
pop
lea
jge
push
cmpl
sub
scas
and
xchg
lds
push
or
mov
cli
mov
sbb
sahf
lock
stc
push
mov
cmp
and
xchg
fcoml
sub
cmp
xor
int
jbe
insb
lock
sub
lret
xchg
dec
jle
jge
daa
js
aaa
push
sub
testl
jno
xchg
xchg
je
scas
popa
mov
pop
movsl
outsb
rorb
out
iret
xchg
cmpsb
loopne
lock
repz
sti
dec
ror
mov
jb
push
jo
jnp
cmc
xor
leave
sbb
aaa
jg
push
lods
dec
cmp
inc
mulb
sbb
fmull
lret
aad
push
pop
push
dec
scas
jecxz
js
inc
std
push
xchg
shll
mov
jle
das
mov
push
dec
in
out
inc
jecxz
jbe
inc
jl
mov
xor
daa
fldz
mov
fimull
dec
cli
sub
mov
pop
fnstcw
jne
push
dec
xor
sbb
mov
jp
movsb
sub
cs
push
dec
jle
pusha
shll
and
pop
loop
jne
getsec
jo
mov
and
xchg
add
pop
sbb
dec
mov
roll
sub
sub
or
fnstsw
sbb
jp
adc
jg
lock
aam
fwait
je
sbb
addl
xor
mov
sub
es
push
pop
jo
pop
mov
fnstsw
jp
cmc
dec
ja
jle
add
dec
out
insl
loop
add
std
xor
pop
out
jle
je
dec
pop
and
dec
es
shrl
and
in
fidivl
push
or
test
and
sarl
insb
addr16
cmc
subb
jno
dec
add
idivw
and
aas
ja
lret
cmp
enter
cmpsb
jecxz
adc
xchg
cli
and
insl
sub
xchg
jbe
pop
ljmp
lea
insl
jecxz
xchg
jbe
mov
sbb
insl
sub
xor
ret
inc
popf
sub
into
mov
ret
popf
daa
xchg
adc
outsl
bound
cmpsb
es
in
nop
xor
loop
push
dec
repz
sbb
mov
sub
or
dec
dec
icebp
dec
xor
cs
jg
cli
sbb
test
mov
jnp
iret
clc
jp
dec
pop
push
jle
cli
sub
shl
sub
inc
imul
dec
fisubrl
in
das
add
scas
jge
std
and
mov
push
in
or
repz
data16
rolb
and
iret
xor
cmpsl
fimull
xlat
int
daa
inc
inc
jbe
ljmp
push
gs
cmp
pop
mov
cmp
inc
insl
sar
pop
std
fisubrl
and
xchg
jp
stc
inc
pop
aad
sub
loope
xchg
add
rcr
cmp
andb
add
es
fldl
or
insl
jecxz
push
push
adc
fnstcw
xor
jl
andb
aam
loop,pn
inc
daa
divl
push
adc
in
in
cmp
sub
push
jo
call
mov
ds
push
dec
in
addb
ret
rclb
das
cmpsb
decb
inc
jg
push
push
pop
ljmp
push
call
xor
mov
or
xlat
neg
jne
js
jns
jge
xchg
mov
xchg
daa
lahf
imul
pop
scas
mov
mov
jbe
mov
pop
scas
xlat
inc
sub
icebp
push
mov
push
pusha
testb
dec
push
daa
leave
mov
push
push
mov
cmp
dec
gs
in
sub
imul
adc
xchg
cmp
sub
and
daa
ljmp
and
sub
jle
aaa
mov
push
pop
sbb
jne
xchg
ds
ds
cs
or
es
lods
leave
cs
lea
mov
dec
jl
test
mov
loopne
pop
nop
adc
bnd
jl
mov
ss
inc
mov
jmp
pop
mov
mov
cwtl
adc
sub
test
xchg
jle
inc
sub
push
inc
in
divl
imull
push
dec
pop
mov
push
sub
jl
or
pop
repz
inc
jbe
cs
in
or
or
sub
in
testb
push
movl
dec
jmp
notb
sbb
shll
push
xchg
mov
leave
movb
sbb
sbb
mov
xchg
jnp
stos
pop
arpl
xchg
jne
cmc
aam
rclb
push
mov
out
mov
lcall
jbe
scas
ds
jle
xor
cmp
push
mov
out
dec
scas
cli
inc
insl
outsb
loope
jle
sub
movsb
mov
jne
mov
loop
pop
test
push
inc
js
mov
jae
xor
mov
and
jle
sub
pop
adc
in
iret
sbb
fisttps
dec
rclb
out
xor
aad
sub
jo
mov
and
ds
roll
push
jge
jbe
out
nop
cmpsb
pop
les
xchg
cmc
adc
out
in
loope
push
fwait
jle
outsb
pop
pop
cmc
ret
xchg
bound
int
push
jbe
int
jle
bound
cmc
fldcw
pusha
xchg
cmp
push
xchg
add
lods
jle
sub
mov
inc
fnstsw
and
mov
xchg
or
outsb
xlat
cwtl
or
mov
mov
xchg
dec
xor
cs
dec
aam
sbb
sub
pop
lods
mov
ds
fimull
push
and
cmp
pop
cmp
scas
aad
mov
add
aam
jb
xor
das
lcall
imull
cmc
and
mov
jg
pop
ja
rolb
push
cmp
cmp
sarl
cmp
stos
test
imul
jmp
sub
lds
cltd
or
insl
imul
mov
sub
jae
fidivs
sub
add
jle
jno
iret
adc
sub
jb
out
xor
notb
test
repz
stc
xor
mov
dec
daa
ljmp
daa
push
out
pop
subl
mov
pop
cmp
mov
outsb
imull
mov
mov
and
and
mov
mov
pop
sub
mov
jp
push
sub
mov
cmpsl
mov
clc
add
fisubrs
xor
pop
jno
sub
inc
pop
xchg
sbb
or
lea
adc
push
inc
push
sub
fmuls
cs
jle
xchg
mov
sbbl
jle
cli
les
inc
adc
addr16
or
jge
push
mov
dec
cs
inc
scas
mov
cmp
jmp
push
movsb
push
mov
imul
xchg
stos
push
dec
jle
sub
sub
std
push
cs
scas
adc
or
decl
test
js
fisttpll
or
pop
sub
mov
pop
push
imul
inc
xchg
cmp
and
jbe,pt
sbb
push
cs
dec
ds
mov
jmp
test
icebp
push
test
iret
pop
pop
xor
cmovle
mov
loop
rcll
xor
push
jecxz
push
cmpsl
mov
inc
add
fistpl
dec
or
iret
je
sbb
fucomip
enter
fildl
data16
xlat
lret
and
push
dec
sbb
ljmp
pop
push
mov
fldl
ss
mov
pop
mov
inc
insl
cmpsb
pop
movsb
xadd
out
sbb
outsb
loope
faddl
jp
lea
pop
add
cmpsl
pop
fsubs
pop
loopne
inc
mov
lods
outsb
out
mov
ficoml
pop
push
je,pn
add
scas
mov
push
and
lods
int
jb
xor
adc
mov
jge
lods
sbb
fs
iret
movsb
pop
push
push
add
inc
cs
inc
and
adc
sub
cltd
daa
shll
cld
cmc
lret
roll
aad
sbb
mov
mov
cs
push
jno
mov
dec
mov
mov
insl
daa
in
iret
sub
dec
adc
inc
std
adc
adc
aas
sub
inc
add
outsl
push
xor
inc
data16
js
popl
orl
adc
cmc
cmc
xchg
in
pop
mov
pop
inc
mov
out
jnp
push
sbb
jb
add
adc
je
addr16
push
pop
xchg
scas
dec
push
cmp
push
push
cs
dec
push
add
jns
lods
lahf
mov
jno
outsb
sbb
aad
stc
push
pop
mov
cmpsl
popa
mull
lcall
loopne
cli
push
xchg
dec
mov
out
lds
push
and
roll
and
xor
xchg
jnp
test
sti
cltd
cmp
ds
mov
ret
in
pusha
stc
sar
out
mov
std
out
push
ficoml
mov
cmpl
sub
pop
mov
movsb
jp
rolb
in
movsb
sub
popa
enter
sbbl
pop
pop
aaa
jb
push
pop
pop
ja
add
daa
loope
negl
daa
sub
out
insl
inc
adc
push
or
orb
sar
rclb
cs
adc
out
pushf
mov
loop
inc
lahf
imul
sbb
push
sarl
dec
outsb
imul
xchg
imul
pushf
mov
mov
or
jl
shll
fwait
mov
and
lock
fildll
js
loope
shll
push
insl
xchg
aaa
jg
dec
push
push
push
in
sub
mov
sub
fbstp
cltd
cmc
loope
and
adc
jle
divl
ljmp
scas
ljmp
jle
loopne
shlb
adc
addb
call
inc
in
push
fiaddl
push
cwtl
std
adc
jle
jl
mov
push
es
pop
and
je
push
scas
fnstenv
shr
sub
add
in
pop
es
dec
sub
inc
sub
push
inc
je
jp
jbe
shrl
aaa
scas
cs
sahf
xchg
or
push
push
movsl
adc
into
jno
addr16
push
cmp
fs
loopne
loopne
subl
fldenv
xchg
and
shlb
cmc
std
mov
fnstsw
scas
push
fnstenv
sbb
mov
std
pop
ss
in
fstpt
xchg
jp
jb
dec
adc
or
inc
sub
lea
mov
mov
jb
push
pop
sub
adc
mov
xchg
jmp
js
and
jmp
adc
int
adc
mov
cmc
push
dec
mov
push
stc
es
dec
cs
sti
sahf
sub
mov
pop
shr
xor
dec
ror
test
push
icebp
sti
movsl
pop
addr16
icebp
xchg
mov
pop
fucomp
pop
mov
fs
in
pop
addr16
xor
jmp
xchg
pop
adc
ss
mov
push
popf
mov
adc
or
pop
pop
inc
push
adc
xor
pop
push
out
xchg
add
mov
jns
daa
pop
inc
not
fs
push
and
and
sbb
and
adc
loopne
shrb
fs
adc
xor
or
pop
aam
imul
mov
dec
stos
scas
cs
mov
xchg
sti
cmp
scas
icebp
cmpsl
outsl
andl
fnstenv
sub
cmp
fists
addr16
push
push
lock
mov
inc
scas
shll
mov
or
sub
mov
xor
fldenv
je
mov
cltd
and
xor
lods
es
xor
repz
adc
mov
adc
decb
jp
mov
adcb
and
shrl
iret
in
ret
adc
add
out
sahf
mov
sub
pop
cmpb
dec
sub
jbe
sub
push
push
outsb
and
push
inc
mov
jmp
sub
or
ljmp
jle
mov
loopne
in
popl
push
fstps
sub
jp
cmpsb
add
mov
ljmp
iret
mov
sbb
inc
push
fiaddl
dec
addr16
out
cmp
cmc
in
xlat
mov
adc
xchg
stos
and
out
in
rcll
jnp
and
xor
in
popf
add
daa
lods
sbb
sbb
ss
in
cmp
pop
xchg
ror
jle
sub
push
ret
ss
shl
push
or
mov
aam
push
test
sbb
in
mov
cs
dec
outsb
cmpsb
adc
sbb
mov
jbe
fs
mov
es
xor
fstps
xchg
incl
add
shrl
cwtl
rcr
pop
push
pop
cli
mov
lock
or
jb
mov
xor
leave
lret
cwtl
mov
lds
aam
xlat
add
rcrb
shrl
mov
xor
jnp
cmpsl
scas
push
cld
cmp
or
jb
jmp
out
jmp
push
into
push
lds
add
jmp
sub
sub
lret
inc
jne
bound
or
and
aad
xchg
in
out
mov
and
mov
inc
pop
aad
js
aam
fstpl
xchg
ss
pop
in
repz
je
lahf
sbb
fs
lock
ss
lea
xor
jbe
jl
bswap
and
ds
push
cmp
repnz
push
cs
sub
push
xlat
push
jne
or
push
repz
mov
add
push
push
fwait
pop
pop
pop
std
dec
cmp
cmp
lods
daa
or
sbb
dec
imul
inc
pop
xchg
lock
mov
xchg
insb
aad
mov
mov
mov
sub
sub
and
inc
insl
pop
mov
addb
fadds
pop
scas
jle
push
cld
es
ljmp
pop
fistpll
cmc
pop
push
std
push
inc
fimull
pop
nop
pop
leave
cltd
insl
add
sub
add
adcl
rcl
pop
push
add
ja
mov
inc
fldcw
faddl
leave
movsb
test
sbb
out
ja
int
xchg
sti
scas
es
or
jecxz
stc
ljmp
ret
sahf
xor
fisubs
test
and
mov
es
dec
jle
icebp
adc
adc
mov
adc
cmp
mov
jp
ja
clc
jle
mov
mov
add
scas
push
xlat
cmp
push
les
and
mull
or
outsl
and
jno
shll
mov
sub
sti
arpl
sbb
and
ret
and
push
and
add
test
mov
pushl
in
roll
int
push
jb
jle
repnz
adcb
mov
ds
jl
cmp
fldl
jge
incl
adc
setle
test
imul
aad
dec
addr16
jl
or
xchg
arpl
mov
sbb
push
cltd
insl
mov
inc
lds
test
mov
shll
cltd
inc
and
rcrb
push
in
mov
adc
into
aaa
push
mov
out
js
cmp
es
je
mov
in
jns
sbb
ds
es
jle
mov
push
cmp
scas
aad
xor
cs
test
dec
icebp
lret
subb
fistpl
xor
mov
push
stos
insb
add
ds
andl
pop
mov
push
sub
insl
sbb
aad
dec
jg
sbb
push
loope
aad
fcmovnbe
insl
mov
add
push
aam
jmp
jp
pop
add
xchg
jle
xchg
cmc
add
xor
incb
xor
xchg
loopne
shlb
push
cld
rcll
dec
push
mov
iret
xor
cs
jae
je
sub
cmc
push
rcl
int
xor
sti
sub
int
push
roll
out
mov
in
mull
rcrb
push
xor
push
inc
out
xchg
cmpl
jg
pop
cmc
push
insb
sar
sub
fdiv
or
adc
dec
inc
aaa
and
dec
fcoml
add
in
xor
dec
insl
ss
out
mov
pop
xchg
popf
mov
aam
js
jg
adc
pop
loopne
cmp
dec
stos
cmp
sahf
cmc
in
or
pop
mov
in
aad
cltd
inc
in
lods
inc
ret
pushf
mov
sbb
jl
call
mov
clc
out
xchg
mov
mov
mov
cmp
or
mov
mov
aad
cmp
xchg
push
jge
cwtl
mov
out
push
pop
add
es
push
imul
filds
push
push
jbe
sub
inc
cmp
movsl
cmpsl
xor
or
int3
frstor
and
pop
stos
mov
divl
push
push
mov
jno
push
jle
lahf
aas
popf
sub
cmpl
push
in
sub
inc
std
es
fstl
stos
inc
mov
es
push
mov
or
loopne
mov
inc
mov
jl
cs
data16
inc
in
inc
dec
shl
inc
sub
fldl
cs
mov
sbb
in
mov
aas
arpl
adc
jp
cmp
xchg
ja
jp
mov
nop
sub
or
lea
or
add
and
aaa
inc
daa
mov
cmpl
adc
pop
jecxz
mov
ja
jnp
push
jg
mov
fldl
push
int
pop
es
rcll
in
ss
call
loopne
ljmp
je
sub
push
icebp
pop
lcall
mov
sub
testl
pop
outsb
add
push
pop
jl
cmp
je
or
mov
or
dec
xor
and
inc
push
mov
pop
repnz
sbb
cmp
imul
out
loope
aas
pop
dec
nop
sbb
inc
loopne
jecxz
jmp
cwtl
cmp
fldenv
and
pop
stc
or
sbb
mov
and
es
and
out
dec
js
icebp
dec
push
add
std
pop
jle
jge
jge
jns
cs
imul
add
inc
lcall
mov
add
fisttpl
or
mov
movsl
insl
lea
push
sbb
dec
fisubl
dec
jno
mov
adc
push
lds
in
cmc
and
pop
dec
cmpsb
cld
aad
es
cmc
aad
xchg
xor
pop
pushw
mov
push
xor
lcall
int3
sbb
mov
and
xor
jbe
jno
cmp
and
and
xchg
jle
mov
add
lds
mov
xchg
inc
mov
into
xorl
xor
jp
and
add
or
in
cmpb
mov
xchg
push
jmp
clc
out
sub
negl
xchg
int3
adc
and
pop
repnz
sub
sbb
inc
dec
fwait
push
test
pop
test
loop
xorl
loop
pop
adc
mov
sbb
out
movsl
loop
push
es
sbb
inc
mov
push
sbb
in
ss
mov
jno
out
jge
dec
orl
sbb
test
and
mov
push
das
addb
dec
pop
push
loopne
push
xstore-rng
cmpsl
movl
adc
sub
jle
mov
sub
movsl
pop
fnsave
test
mov
jl
jmp
negl
push
jecxz
cmp
mov
dec
cmp
mov
mov
ljmp
incl
adcl
outsb
ds
testl
jle
mulb
xor
ds
or
pop
lcall
push
fbstp
pop
jbe
je
pop
js
sbb
inc
push
pop
mov
js
leave
xor
inc
lods
jge
push
mov
out
inc
js
sar
divb
add
icebp
adc
push
mov
in
idivb
sub
pop
or
test
inc
xor
mov
push
pop
mov
lret
andl
adc
call
jne
outsl
or
mov
filds
add
sub
data16
int
jp
mov
in
inc
mov
jmp
jnp
and
es
loope
scas
add
pop
jne
dec
jbe
imul
jnp
nop
mov
pop
ljmp
mov
lods
sbb
jle
adc
negl
lret
jge
dec
mov
dec
daa
fisttpl
in
push
sub
lock
daa
fimuls
push
xchg
or
lahf
shll
cld
add
cmp
jns
pop
pop
fcoml
sbb
mov
mov
push
lahf
and
out
arpl
das
xchg
jle
mov
insl
and
jb
dec
push
or
pop
test
jle
andb
jle
jl
adc
inc
sub
jecxz
je
pop
add
xor
pop
dec
cld
js
or
xchg
je
bound
js
dec
test
out
inc
push
fstpt
into
mov
and
xchg
cmp
outsl
out
jge
sbb
push
push
push
sbb
adcl
pop
push
push
mov
mov
push
cmp
test
insl
popa
xor
js
mov
xlat
rcrl
test
cwtl
mov
insl
pop
mov
mov
into
cmp
ret
in
cmp
xchg
cmpsb
mov
insl
cmpsl
pop
and
out
sub
pop
icebp
call
sub
outsl
rorl
mov
cmp
cwtl
stc
push
out
add
push
hlt
pop
lods
push
cmc
pop
insl
adc
sbb
mov
es
jle
mov
aas
pop
lods
sub
insb
cmpsb
popa
mov
dec
jno
pop
insl
push
lds
sub
sarl
test
insl
xchg
icebp
dec
adc
inc
fucomi
sub
push
pop
push
push
outsl
dec
ficomps
pop
mov
loopne
xchg
and
mov
rcrb
outsl
leave
pop
test
jae
popa
jmp
in
setne
sub
push
mov
cltd
dec
jne
loopne
outsl
nop
mov
mov
popf
gs
insl
clc
mov
dec
scas
dec
repz
fldl
adc
flds
movsl
adc
loopne
shrl
push
fsubs
out
cs
addr16
daa
lea
sub
push
dec
dec
aam
dec
leave
repnz
scas
xchg
pop
mov
mov
ds
inc
jle
xchg
aas
inc
sub
outsb
test
inc
movsl
aaa
mov
pop
adc
shrb
aad
mov
pop
inc
sbb
push
inc
inc
sub
je
in
jb
push
out
inc
cli
inc
subb
jp
jo
cmp
or
outsb
mov
or
fwait
sbb
cli
mov
addr16
xchg
mov
test
sbbb
sbb
cwtl
mov
lahf
out
mov
insb
cmp
lret
insb
pop
inc
xor
orl
into
lods
sbb
or
inc
imul
adc
cmp
out
dec
loopne
imul
and
cmp
inc
scas
loopne
cmc
xchg
adc
in
out
fs
add
cmp
sub
dec
pushl
sub
mov
mov
rol
bound
sbbl
lret
divb
inc
adc
jecxz
inc
in
lahf
jo
mov
stos
scas
js
in
lret
cmp
xchg
ret
scas
int
sti
dec
test
test
into
inc
push
mov
push
aam
sti
add
loop
js
sub
inc
fisubrs
xchg
push
cmc
push
cwtl
mov
into
xchg
jmp
lods
jg
push
rolb
xor
insl
iret
sarl
repnz
test
pop
or
je
sbb
jo
push
cs
js
xchg
arpl
scas
pop
insl
xchg
inc
mov
fwait
dec
lds
hlt
ljmp
jge
test
fcmovbe
cs
cmc
dec
dec
call
and
xor
stc
daa
sbbb
dec
adc
popf
adc
adc
mov
and
cmp
in
out
fsts
push
mov
mov
dec
push
push
xchg
jle
sub
call
add
jp
push
jl
fs
ret
mov
iret
sbb
add
and
sub
fwait
cld
lock
cmc
and
bnd
cli
movsl
ficoms
pop
cmpsl
scas
mov
xchg
jbe
adc
inc
mov
out
test
adc
int
pop
mov
sub
dec
push
loopne
data16
dec
insl
scas
cmpsl
hlt
inc
adcb
cmp
sub
cmc
mov
cwtl
inc
arpl
sub
adc
cmp
xor
fwait
pop
xchg
pop
sbb
sbb
xor
sbb
iret
mov
adc
push
push
and
pop
divb
in
inc
inc
fmull
rcrl
daa
es
pop
mov
jp
push
mov
std
xlat
lods
sub
js
push
clc
scas
cmpsl
add
dec
mov
jae
out
xchg
adc
push
adc
push
pop
lahf
sahf
aad
jno
push
and
push
mov
int3
mov
les
fwait
mov
sub
pop
sbb
int
pop
mov
fs
in
out
out
std
xchg
push
push
cmp
adc
jmp
sarl
push
imul
mov
push
push
dec
jecxz
mov
mov
js
sub
outsb
movhlps
aad
xor
ljmp
adc
inc
mov
jl
sub
push
and
jb
push
js
inc
jnp
out
xchg
mov
ret
push
inc
fucom
or
adc
adc
jnp
fcmovnbe
int
jecxz
and
cmc
jle
scas
mov
insb
std
sub
sub
aad
sti
rorl
adc
movsb
sub
jle
inc
adc
jge
push
test
std
push
add
add
sbb
xor
and
mov
and
inc
adc
cs
sub
cmpsb
cmp
fs
dec
push
pop
add
mov
in
jge
fsubrs
mov
insl
inc
sub
cmpsb
mov
ljmp
stos
xchg
xchg
push
testb
jp
jg
mov
clc
mov
pop
and
arpl
decb
jb
fs
fisubl
xchg
push
pop
dec
cmp
insb
stos
mov
add
lods
mov
sub
es
test
sarb
jg
xor
and
jle
loopne
cmp
jl
pop
mov
mov
fiadds
push
cmp
mov
es
dec
sbb
fbstp
rep
xor
mov
and
push
xchg
xor
enter
push
movsb
and
xchg
add
dec
das
bound
jecxz
cmp
dec
pop
std
clc
cmpsl
cmp
sbb
dec
mov
aad
or
stos
sbb
mov
pushf
sbb
aas
xchg
les
js
int
mov
inc
jecxz
push
dec
sarb
leave
shrb
push
pop
lods
mov
mov
ja
cmp
xchg
fsubrl
mov
fs
sbb
js
sbb
sbb
pop
push
fstp
pop
push
cmpl
sub
test
mov
rorb
fs
cmp
xchg
sbb
fldenv
inc
mov
mov
push
loop
push
int
xor
cmpsl
cmp
js
sbb
insl
clc
popa
xor
gs
push
push
push
dec
inc
fcoml
sub
xor
ja
xchg
sub
ss
push
ret
mov
mov
jmp
stos
jg
xchg
add
scas
xor
test
fldenv
xchg
cmpb
lods
cmp
rclb
add
add
or
repnz
mov
or
bound
adc
mov
mov
jg
or
scas
imul
aad
lahf
int
jmp
divl
add
jne
mov
test
mov
xorl
outsb
jle
imul
sbb
xchg
imul
cld
dec
cli
outsb
push
adc
test
sub
add
xlat
in
sarb
mov
jo
inc
aad
sbb
inc
es
outsl
xchg
inc
out
stos
ficoms
xchg
push
test
outsb
out
xchg
cmp
lret
arpl
clc
mov
shll
mov
cmpb
fnstenv
lods
xlat
stc
aad
and
iret
jecxz
andl
movsb
incb
pusha
sbb
fisubrs
xchg
test
jg
aas
aaa
lods
loopne
xor
sub
lods
mov
fldl
aas
jbe
iret
ljmp
notl
cmp
xchg
xchg
pop
shlb
into
ljmp
xchg
pop
dec
into
int3
push
or
clc
ja
push
or
jge
mov
and
fnstenv
lahf
popf
push
je
xchg
dec
cmp
mov
sbb
mov
xchg
inc
adc
sub
pop
xchg
mov
outsl
sbb
out
pop
cmp
mov
push
dec
loopne
lahf
mov
push
sti
push
adc
jecxz
xchg
mov
xchg
dec
pop
lds
mov
xor
xchg
sbb
scas
mov
sbb
sbb
jbe
aad
sbb
cmc
adc
bsr
divl
push
sub
outsl
jp
js
cs
sub
adc
movsl
pop
xchg
pop
scas
stc
add
xchg
outsl
movsb
mov
mov
popa
mov
inc
mov
jp
dec
sahf
sarb
ds
test
cld
pop
or
sub
insl
icebp
inc
mov
ret
fdivs
pop
lds
push
or
lock
push
adc
pop
popa
xor
cmp
sub
popf
imul
inc
lock
stos
adc
fildll
sti
jp
outsb
cmpsb
dec
mov
jp
outsb
into
call
dec
and
fnstcw
cmp
mov
or
inc
xchg
mov
outsb
sbb
pusha
dec
dec
pop
push
cmp
jle
dec
movsb
cs
ret
or
or
or
inc
xor
in
pop
ljmp
push
addl
mov
jge
adc
mov
mov
add
push
outsb
mov
inc
push
adc
sbb
dec
sub
xchg
jo
and
inc
movsl
ds
ret
test
mov
push
pop
xor
imul
rcl
push
scas
iret
and
sbb
fs
aas
push
fistpl
adc
icebp
jno
and
mov
sbb
mov
lcall
jp
and
cmp
xor
sysexit
dec
or
push
pop
push
out
outsb
or
or
call
adc
repz
cltd
cmp
push
sti
pop
fs
cmc
negb
xchg
xchg
mov
call
mov
ja
mov
gs
test
cli
das
pop
or
jle
inc
adc
jb
aaa
jae
fsubs
daa
dec
enter
jne
mov
hlt
dec
sbb
mov
daa
jbe
cmpsl
ret
adc
pop
inc
sub
loope
dec
push
push
je
lds
outsl
mov
add
mov
sub
inc
push
ret
mov
push
movsl
and
push
sbb
aad
out
scas
js
aad
mov
insl
adc
mov
and
dec
aad
adc
xchg
fnstenv
cmp
dec
cmp
pop
push
ljmp
xor
insb
mov
fs
xor
addr16
icebp
fnstsw
pop
fwait
pop
mov
xchg
aad
pop
push
sub
loopne
in
push
ds
or
daa
cmp
cs
jnp
push
xchg
push
je
cmp
push
rolb
loope
test
cli
fcomps
inc
sub
and
push
es
loope,pn
shll
ja
stos
cmpsl
dec
pop
push
popa
jle
pop
sbb
inc
scas
es
push
daa
inc
push
sbb
sarb
iret
pop
jb
fmul
test
add
int
mov
test
cld
jb
jge
lahf
add
cwtl
sub
jae
pop
dec
sub
adc
shll
and
push
pop
je
mov
outsl
pop
call
mov
fsubrl
jbe
stos
push
test
stos
inc
or
dec
mov
push
mov
inc
mov
push
sub
inc
mov
cmpsl
mov
stc
mov
inc
adc
and
test
sbb
lret
inc
jbe
xchg
and
pop
cmpsl
pop
push
add
lret
iret
cli
sub
aad
dec
std
sub
popa
sub
sbb
mov
sbb
xor
int
sbb
xlat
bnd
push
and
outsl
mov
insl
test
shll
and
in
lcall
test
ss
adc
push
divl
std
iret
xchg
jp
sub
adc
jae
jae
pop
adc
add
jb
inc
jmp
fidivs
lahf
out
jle
push
test
fs
scas
push
sub
jne
mov
mov
pop
addr16
mov
insl
sub
ds
fistpl
inc
mov
fsts
in
xchg
mov
in
aas
push
sbb
bound
das
subl
xchg
lea
and
dec
lds
mov
insb
push
add
sbb
and
xchg
xchg
mov
popf
and
mov
sub
out
pusha
clc
jae,pn
adc
add
inc
lods
adcl
cltd
out
outsb
inc
addps
fidivrl
push
jae
cli
push
daa
sub
lds
es
or
jle
rorb
push
mov
cwtl
lahf
sub
jge
push
pop
cmp
inc
xor
push
pop
loop
adc
out
lods
sti
jb
or
push
or
pop
xor
into
test
pop
cmp
cmpsl
int3
push
ficoml
mov
pop
sub
jge
not
cmp
inc
mov
push
cwtl
sahf
aad
cmp
lret
nop
popa
sbbl
lret
andl
xor
rolb
fdiv
jle
cmp
cli
insl
sbb
fwait
ja
pop
fs
jle
jne
sbb
out
lcall
fisubrl
out
jmp
mov
jne
das
and
sub
push
xchg
sbbb
pop
scas
xor
fwait
das
ror
inc
push
xchg
adc
adcb
lds
sti
mov
dec
fsubrs
iret
addr16
pushf
mov
mov
test
jb
push
fildll
inc
into
dec
push
mov
sbb
xchg
ficoml
out
jge
jns
pop
fs
push
mov
pop
imul
ret
push
das
pop
iret
jle
xor
pop
cmp
sub
ds
push
mov
sub
pop
cmpsl
roll
sbb
daa
cld
mov
dec
cmpb
stos
add
pop
and
adc
xchg
enter
icebp
pop
jp
fisubrl
sbb
pop
out
cs
jle
sbb
jbe
push
sub
sbb
aad
push
inc
sarb
lods
lods
dec
mov
in
repnz
stos
inc
xorl
dec
pop
fcoms
fcmovbe
inc
push
hlt
out
jnp
inc
cmp
rcrl
pop
mov
xor
mov
cmp
scas
pop
imull
sub
sub
es
out
and
sub
in
inc
mov
fidivs
pop
mov
dec
out
xchg
dec
rep
arpl
fbld
xchg
xchg
insl
sub
movsb
adc
dec
or
imul
push
lcall
push
sub
out
sub
push
push
lods
adc
cmpsl
adc
je
cmp
popa
js
inc
inc
int3
pop
ss
leave
cmp
mov
inc
fistps
movsb
arpl
xchg
adc
call
or
xor
mov
jmp
aaa
mov
sbb
jg
cs
mov
orb
fwait
es
andb
in
shlb
icebp
or
cld
mov
jmp
mov
push
pop
pop
addl
xor
iret
push
push
mov
adc
mov
test
push
and
mov
pop
mov
scas
push
xor
dec
test
sub
mov
jp
push
push
outsb
jle
pop
xor
orl
sbb
add
pop
shr
mov
push
mov
xchg
inc
ss
fs
aaa
repz
je
lods
scas
pop
ret
out
lcall
adc
jbe
mov
lods
jp
test
ss
jmp
divl
xor
lods
clc
or
in
jecxz
scas
sbb
lods
incb
js
scas
lods
neg
sbb
xor
fsubl
das
dec
sti
loope
repz
add
mulb
rcl
imul
push
es
inc
push
dec
push
sbb
dec
jp
pop
jbe
dec
cwtl
bound
es
xchg
stc
ret
xlat
pop
clc
imul
push
test
jp
cmpsl
sub
shrl
daa
in
jne
mov
xchg
rolb
cmpsb
arpl
sub
push
sub
lcall
cmp
daa
ret
mov
fs
pop
push
sbb
inc
inc
sub
add
xchg
in
rcll
dec
pop
scas
jle
push
ljmp
sbb
inc
xchg
dec
fwait
jle
cmpsb
pop
lock
jbe
daa
dec
inc
and
mov
sbb
loopne
imul
lahf
sub
add
adc
inc
insl
icebp
popf
inc
jecxz
mov
lret
mov
int3
shll
sub
adc
or
cmc
inc
aad
xor
mov
add
ret
std
call
adc
mov
xor
pop
dec
and
add
push
push
rcrb
fstl
and
add
mov
stos
cmpsb
std
fldl
shlb
test
in
inc
xor
mov
lahf
push
cmp
sbb
dec
sbb
jg
inc
sbb
push
push
sub
cli
cmpsl
xchg
stc
xchg
mov
out
ss
jb
imul
ret
pusha
jbe
ljmp
jg
push
mov
push
pop
mov
push
shlb
call
sti
sbb
sarl
test
rcll
push
jl
fs
mov
mov
repnz
pop
push
or
xorb
xor
cli
and
mov
repnz
cmp
inc
xchg
mov
lret
ret
sti
sbb
repz
daa
push
xor
inc
ds
push
stc
inc
xchg
rcll
fwait
sbb
cmpsl
push
and
pop
out
repz
pushf
cwtl
cmp
fldcw
xor
sbb
lea
js
xor
sbb
daa
cs
cmp
ljmp
out
in
and
push
and
loop
mov
sbb
int
xchg
loopne
inc
jnp
push
push
frstor
jge
mov
lods
test
mov
pushf
xchg
inc
lea
jmp
insl
ficomps
test
inc
and
or
or
stos
adc
push
pop
push
mov
in
sbbl
out
popa
sbb
movsl
shll
cmp
add
lods
dec
mov
xor
xchg
push
cmpsl
je
dec
test
sub
les
fsubrl
sbb
mov
adc
sbb
mov
jbe
stos
mov
or
push
out
fnstsw
ljmp
adc
or
inc
mov
jle
mov
rcl
inc
mov
mov
xchg
cli
sbb
xchg
xchg
mov
sub
mov
sub
es
mov
mov
xor
push
and
jae
mov
std
xchg
aas
pop
mov
sub
lret
fs
lods
and
inc
xchg
push
mov
ljmp
shl
outsb
mov
fcomps
or
xor
jnp
jg
sub
sti
sub
lahf
shrb
rclb
and
jge
fcomps
loope
sub
shlb
push
push
xchg
negl
or
out
inc
dec
jl
test
clc
insl
inc
neg
in
std
pushf
icebp
push
insl
mov
cmp
insl
popf
adc
ret
lcall
cmp
insl
pusha
jg
nop
xchg
cmp
outsb
insb
adc
sbb
imul
dec
inc
test
cmpsl
add
dec
aad
test
sbb
adc
je
xchg
mov
jmp
ja
in
push
arpl
jbe
aam
outsl
adc
enter
test
inc
push
inc
and
mov
scas
jbe
and
das
ljmp
xchg
lock
xchg
lcall
dec
jno
xor
dec
sbb
lods
or
pop
test
lcall
inc
fdivrp
movsl
adc
movsb
imul
addb
dec
daa
xchg
out
jp
ja
movsl
mov
xchg
or
scas
js
xchg
es
sahf
flds
mov
xlat
leave
clc
out
xchg
xchg
cmpsl
flds
mov
mov
mov
sub
imul
inc
repz
fwait
mov
sub
pushf
jle
mov
push
loop
jnp
xor
mov
xchg
push
adc
ss
ljmp
inc
in
iret
mov
lea
inc
jno
stos
mov
sub
sub
js
pop
popf
iret
mov
push
call
sub
icebp
insl
sbb
xchg
dec
outsb
sbb
insl
mov
mov
loope
ss
xchg
inc
outsb
insl
fs
xchg
lods
cmp
js
add
sbb
inc
cli
ds
stos
lds
popf
xchg
mov
add
add
js
mov
jne
lods
push
iret
push
or
lods
sbb
cs
adc
cmp
pop
arpl
mov
inc
addr16
test
add
jge
sub
scas
arpl
cs
fldl
fnstenv
adc
sub
push
push
mov
outsl
dec
movsl
adc
scas
dec
aam
pop
jp
stc
sbb
sbb
inc
mov
adc
js
insl
xchg
mov
and
sti
addr16
mov
pop
push
jl
sbb
jns
push
jbe
shl
push
xor
insb
xor
sub
jge
dec
ret
test
xor
out
push
or
jmp
loop
dec
out
arpl
fstpt
aad
dec
lea
sbb
cmp
aam
mov
jecxz
inc
push
lds
xchg
add
aad
jecxz
adcb
mov
lods
jg
mov
daa
lds
dec
int
push
xchg
sbb
and
mov
aad
dec
imul
lret
shll
xor
push
mov
ss
or
push
dec
pop
inc
gs
fisubl
je
fisubl
xor
jge
mov
sahf
pop
dec
push
mov
sub
lret
mov
add
push
out
sub
lret
jge
mov
pop
and
movsb
sbb
push
xchg
sarl
outsl
test
mov
fwait
xlat
dec
dec
int3
mov
cs
ss
out
push
or
jbe
std
movsb
clc
pop
mov
enter
adc
xorb
xor
mov
inc
fimuls
mov
adc
or
je
or
add
popa
in
jp
dec
mov
shll
pop
stos
es
mov
in
xchg
dec
std
mov
mov
neg
pop
xchg
inc
cmc
xchg
leave
push
mov
adc
test
push
fmull
mov
movsb
stc
shlb
mov
icebp
fisttpll
xchg
pop
lods
inc
mov
jg
lret
sub
std
in
sbb
mov
jmp
fcomps
out
shlb
out
mov
adc
mov
dec
xor
cmpb
cmp
sbb
jb
fsubrl
mov
pop
inc
shlb
outsb
mov
ss
jbe
mov
adcb
pop
and
push
outsb
aaa
xchg
int
pop
xor
inc
fldl
lods
pop
push
loopne
push
imul
rorb
fs
stos
stc
test
daa
sub
push
out
fildl
mov
inc
mov
cld
dec
insb
cltd
xlat
rorb
mov
pop
cltd
sub
sarb
push
sub
push
jle
test
sahf
loopne
insl
mov
shrl
pushf
push
icebp
shlb
mov
daa
push
mov
stos
jl
cmpsl
add
ret
es
push
sti
pop
dec
rcrb
mov
lret
add
hlt
fiaddl
jg
xor
or
sub
pop
pop
adc
cmc
jge
jb
cli
xchg
adc
daa
or
outsb
scas
inc
pop
outsl
hlt
and
in
lods
push
test
cmc
adc
jno
ret
cmp
daa
in
fdivp
pushf
mov
fs
cmc
or
jns
lods
sbb
addr16
in
sub
mov
pop
add
xchg
shrl
sbb
fmuls
aam
lods
adc
push
lcall
stos
jle
js
add
jb
jp
js
push
stc
enter
in
cmp
and
sbb
adc
scas
inc
push
fnstcw
mov
xchg
js
xchg
fucom
aas
push
ret
fstpl
lock
sub
inc
in
push
or
dec
movsl
push
rcll
mov
push
adc
cmp
in
sub
std
fisubrl
rcl
shlb
add
dec
pop
mov
mov
loope
ds
jle
lds
scas
jb
or
nop
mov
and
sbb
push
xchg
inc
push
jae
xchg
leave
cli
leave
inc
jge
mov
xor
vsqrtpd
ss
lods
jle
pop
xchg
or
sub
test
xchg
push
arpl
repz
xchg
mov
jne
dec
inc
push
mov
sbb
push
adc
and
fimuls
pop
dec
jge
leave
loope
aaa
fcmovu
sti
pop
sub
lcall
fiadds
pop
pop
adc
call
mov
roll
orb
int3
dec
mov
jl
movsl
cmp
ss
test
mov
aam
sbb
cmp
test
ja
test
adc
out
jns
cmc
sub
aad
or
xchg
icebp
xchg
sbb
packsswb
les
test
push
add
jl
js
jl
addr16
jge
mov
lods
xor
inc
addr16
sub
in
aad
icebp
leave
dec
pop
push
ja
inc
push
add
addb
test
jle
sub
mov
fisttpll
dec
sub
jae
fsts
inc
fcoml
mov
and
dec
pushfw
and
dec
das
movsl
inc
xchg
ficoml
cmp
mov
fwait
xor
sbb
mov
mov
mov
jbe
icebp
jo
xchg
push
push
mov
and
mov
or
sbb
data16
jp
push
lds
popa
rcl
xchg
nop
fisubs
push
lods
cmp
mov
sub
pushl
in
popf
bound
sahf
dec
mov
mov
sbb
mov
mov
stos
sarl
scas
fbld
rclb
jle
imul
addl
dec
lea
and
int
jnp
cld
out
add
jbe
lret
out
xchg
xchg
in
fs
fisttpll
xchg
rcrl
shll
xchg
xor
movsl
mov
cli
cmp
icebp
std
fdivrs
es
popa
push
jg
xor
insl
stc
clc
jecxz
jns
lret
arpl
aam
push
add
sbb
mov
sbb
in
inc
ficoms
out
js
js
out
push
aad
push
sub
mov
or
push
cmp
xchg
jbe
sub
pop
flds
push
xchg
mov
js
imul
push
sub
pop
test
pop
jge
addl
pusha
add
add
cmp
in
aam
es
inc
jp
gs
stos
mov
xchg
push
push
and
lahf
dec
adcl
mov
pop
and
jbe
or
sub
sub
stos
sub
loopne
fwait
rolb
inc
dec
add
dec
fldcw
std
dec
mov
pop
mov
ds
mov
or
test
je
ds
or
in
xor
jmp
and
int
mov
push
push
cmp
and
mov
jge
jb
rclb
fldcw
xchg
cmp
fs
cmpsb
subb
jge
andl
popf
aam
divb
push
push
fmuls
push
and
cmpl
fdivs
loope
aad
dec
repz
jl
cs
inc
cmpsb
push
test
add
jb
dec
xor
sbb
push
dec
push
int
inc
pop
cmp
ficoml
push
push
decb
adc
rclb
mov
sbb
mov
daa
jno
dec
in
jle
jp
mov
mov
add
loope
pushl
and
cmc
inc
adc
dec
push
inc
lods
lret
jmp
aad
pop
or
mov
in
sub
xor
push
out
mov
fs
arpl
adc
aaa
sub
and
push
cwtl
add
pop
pop
std
orb
push
daa
xchg
xchg
shlb
int
xchg
and
loopne
fnstcw
inc
mov
iret
or
fnstcw
xlat
jmp
mov
test
pop
dec
xchg
cli
jge
adc
xchg
cmpsl
mov
cltd
imul
dec
cmc
and
jbe
pop
push
sub
xchg
mov
xchg
pop
imul
push
and
mov
imul
ret
pop
lret
in
cmp
shlb
adc
movsb
jb
in
psllw
adc
mov
fstl
push
jno
fisttpl
and
subb
mov
inc
jmp
ficoml
xlat
addr16
push
lea
data16
fimuls
rcrb
mov
lret
sbb
fidivrs
mov
push
dec
testl
xchg
outsb
test
iret
out
jp
or
push
arpl
cmpsl
hlt
movsl
in
test
addr16
inc
sbb
jl
or
push
fnstenv
in
mov
daa
add
sub
rolb
daa
xor
icebp
xchg
push
les
adc
push
cmp
test
es
dec
jg
mov
push
sbb
push
dec
add
push
add
push
adc
jle
push
xor
push
and
ret
or
rolb
dec
push
cmpsl
test
daa
ret
and
shll
imul
push
mov
fnsave
adc
pop
jne
push
and
rol
jne
and
arpl
aam
mulb
xchg
leave
mov
lds
and
arpl
jae
add
fwait
push
hlt
cmp
sub
hlt
das
push
stc
pop
jge
inc
aam
jne
mov
sub
sub
daa
dec
xlat
inc
imulb
dec
or
dec
aaa
xlat
aas
sub
sub
lea
insl
repnz
mov
xlat
out
inc
lea
push
jbe
add
mov
pop
mov
sub
mov
jle
pop
sbb
mov
imul
and
stc
mov
inc
sub
or
stc
and
fcmovb
mov
cmp
jbe
pop
sub
lret
jmp
dec
shll
dec
xor
cmpl
xchg
mov
dec
shlb
mov
loopne
jp
push
cmp
es
dec
and
sbb
pop
or
mov
mov
inc
jbe
add
iret
ficoms
les
scas
aas
and
dec
cld
sbb
push
push
bound
fldl
mov
jmp
std
jbe
inc
arpl
hlt
or
jne
or
paddw
clc
jb
pop
jo
jle
or
out
es
pop
inc
cs
push
mov
ret
bound
aam
and
mov
push
scas
insb
fcoml
pop
push
shrl
clc
dec
xchg
cmc
sub
xor
stos
sub
pop
cmpsl
je
dec
ljmp
xchg
iret
inc
gs
xchg
mov
jl
outsb
cs
movsl
and
mov
pop
push
cwtl
mov
je
jne
je
mov
pop
push
orb
std
inc
imul
add
inc
call
xchg
pop
xlat
push
shrl
add
cwtl
mov
adc
cmp
xchg
inc
adc
jbe
enter
scas
pop
test
jbe
cmp
push
xor
or
dec
scas
pop
test
dec
cmp
in
mov
repnz
or
xor
jg
inc
les
bndstx
prefetcht0
addr16
in
pop
xchg
push
stos
mov
pop
dec
inc
dec
pop
fcmovbe
inc
mov
ficoms
sbbl
or
add
and
bound
inc
sti
cltd
mov
or
repz
sbb
ja
sub
sub
lcall
mov
xchg
je
popf
mov
jp
hlt
scas
sub
add
jge
mov
repnz
into
mov
stos
dec
mov
push
insl
icebp
mov
add
adc
and
and
adc
or
xlat
mov
sub
xchg
inc
add
and
lods
test
imul
js
arpl
stos
scas
jb
fisttpll
push
jbe
and
xor
jg
mov
xor
leave
pop
inc
or
mov
xchg
fldenv
subl
and
shrl
call
add
xchg
shl
outsb
sub
mov
into
in
inc
lods
insl
outsb
mov
mov
dec
bound
sbb
test
sbb
pusha
pop
mov
pop
push
fidivrl
push
jl
insb
std
movsb
xchg
xchg
in
adc
call
inc
or
pushf
scas
push
mov
xchg
shll
and
mov
adc
pushf
dec
xor
sub
lret
pushf
lret
inc
fsubrs
ss
out
adc
roll
popa
fisubl
push
pop
sbb
xor
insb
shrb
rcrb
add
fstpl
or
push
cs
sbb
adc
sub
leave
cmp
xor
mov
fnstcw
xor
jg
loope
jp
cmp
jge
mov
lods
sahf
js
lcall
mov
insl
jge
mov
sti
cmp
jge
xchg
push
dec
and
je
stos
stc
push
xchg
ret
cmp
add
test
insl
aaa
jecxz
or
or
movsb
test
rorl
adc
dec
dec
xchg
test
and
mov
inc
sbb
out
add
inc
jp
adc
icebp
inc
sbb
xchg
sarl
jmp
sbb
out
cmp
pop
arpl
stos
jb
mov
pop
scas
xor
cmpl
cld
movsl
stc
or
jecxz
inc
ljmp
js
adc
shll
outsb
or
mov
cs
pop
leave
loopne
repz
incb
sbb
into
sbb
mov
cwtl
pop
push
cmp
das
sbb
out
sti
xchg
aas
push
jbe
dec
cmp
jno
ja
pop
ljmp
dec
sbb
daa
mov
jp
fisubrl
mov
inc
inc
mov
push
sub
xchg
push
pop
mov
stos
push
xor
mov
dec
icebp
push
lods
mov
push
cwtl
mov
addr16
mov
mov
push
dec
jmp
xor
arpl
pop
mov
xchg
das
cli
jne
pusha
bnd
push
test
scas
sub
scas
jecxz
imulb
mov
addr16
fistl
sbb
int3
pop
pushf
daa
aaa
cmpsb
cli
stos
arpl
xchg
xlat
fldcw
mov
cli
call
or
sbb
cmp
int
lret
or
les
jo
inc
mov
pop
aad
cmp
inc
sbb
jecxz
fistl
scas
sub
xor
aad
test
setle
add
sub
insl
lret
push
add
leave
push
xor
adc
jge
int
dec
pop
xor
hlt
xchg
push
in
jp
test
fsts
dec
sbb
push
loop
lods
loopne
xchg
scas
mov
jge
jne
xor
dec
rorl
enter
mov
jne
dec
mov
aam
or
cmp
mov
push
cmp
sbbl
add
aaa
addr16
pop
or
hlt
sub
dec
popf
and
dec
dec
fs
mov
fsts
es
call
es
ljmp
ret
sub
sbb
loopne
pop
popf
fisubs
aas
testl
or
push
jno
int
leave
enter
mov
notb
aam
sarl
mov
ds
mov
jge
ficoms
fsubs
aaa
flds
pop
dec
es
pop
iret
mov
je
sbb
insb
mov
out
mov
cmc
xchg
in
sub
stc
and
add
xor
jb
lods
pop
jmp
daa
addb
jae
scas
sub
and
lods
cmp
lods
jmp
mov
fsincos
inc
js
insb
mov
daa
push
dec
pop
in
sbbl
fwait
mov
loope
adc
test
daa
jge
mov
dec
stos
mov
leave
ret
scas
sub
mov
aad
scas
add
mov
xchg
jmp
es
into
inc
test
insl
inc
push
aam
fisubrs
push
push
xchg
inc
and
add
call
test
js
adc
jb
mov
aaa
aam
daa
adc
jno
pop
test
mov
lds
jle
fsubr
jno
inc
imul
and
xor
sub
ja
stos
xor
in
fucomip
dec
push
sbb
or
inc
punpcklwd
xchg
scas
adc
lahf
cmpsl
lcall
mov
lret
push
mov
cld
out
xchg
jle
ljmp
adc
test
inc
sub
mov
sub
inc
sbb
or
scas
lret
push
add
and
rolb
adc
subb
push
int3
fisubl
push
divb
mov
in
dec
xchg
fwait
aad
out
xchg
cmp
adc
xor
mov
outsb
out
cs
jo
adc
xchg
stos
push
nop
and
enter
push
shlb
test
stc
cmpsb
jo
js
mov
jb
jecxz
or
mov
pushf
jge
testl
testl
inc
sub
pop
inc
fimull
cmp
in
xchg
flds
roll
xchg
data16
neg
into
dec
into
popf
sbb
in
push
pop
enter
inc
mov
mov
addl
jbe
sub
fldenv
add
scas
jl
clc
pop
orb
sbb
cmp
ds
inc
loope
sbbl
fidivrs
ret
iret
inc
jle
dec
adc
scas
andb
push
push
sbb
add
test
dec
enter
lret
into
icebp
lret
add
test
xchg
mov
fildl
ja,pn
scas
push
pop
sub
aad
mov
dec
test
jge
es
pop
aad
outsb
out
hlt
push
sub
add
ss
dec
pop
sub
std
pop
push
jo
les
out
mov
adc
xor
stc
movsl
stos
add
out
push
sub
hlt
jbe
push
push
pop
sub
lahf
adc
dec
xor
add
inc
ja
lahf
loop
in
int3
sbb
sbb
inc
stos
add
xchg
insl
mov
xchg
ret
stc
sti
fnsave
fldcw
jg
mov
pop
sub
out
mov
push
sub
shl
ret
aaa
pop
icebp
inc
cltd
lret
pop
and
mov
insl
xor
inc
jb
jo
insl
cmp
jg
insb
push
sub
lock
sub
jge
rcrb
dec
test
jbe
jns
test
sub
fidivrs
shrl
sbb
lods
sub
xchg
sub
inc
pop
jecxz
mov
and
sub
data16
out
mov
pushf
mov
xchg
inc
fcom
xor
and
adc
stc
adc
gs
jmp
ret
add
lods
std
push
push
std
popf
ss
push
mov
sbb
cmpsl
sub
rcrb
inc
cltd
cwtl
or
jle
sub
ds
loop
dec
xor
mov
mov
inc
ret
rorb
jb
mov
out
or
mov
dec
mov
mov
ljmp
sbb
int3
inc
arpl
add
sub
int
jecxz
scas
fldcw
fldcw
push
scas
gs
ja
push
jbe
adc
fisttpl
ljmp
push
lret
pop
pop
mov
lods
sbb
fstpl
inc
fldenv
ret
or
lods
adc
js
xlat
mov
cmp
clc
icebp
sub
insl
sub
mov
mov
testb
movsl
lcall
out
roll
call
and
clc
jne
lret
cmp
roll
loop
lea
push
mov
int3
mov
xchg
and
jle
rclb
or
js
mov
addr16
xor
dec
ds
cmpsb
jae
push
scas
cmp
ja
loop
pop
push
sahf
mov
push
stos
jle
in
and
faddl
push
jns
mov
ds
mov
into
add
and
push
ror
in
cwtl
rcl
int3
mov
sub
data16
out
mov
dec
js
add
xchg
xchg
xorb
bnd
sbb
jle
sub
or
sarl
push
lds
int
cmc
scas
std
xchg
movsl
and
stos
push
popf
jbe
sbb
je
mov
cmp
rorb
or
sub
fstpl
or
jmp
testb
and
lret
filds
jnp
hlt
xchg
xchg
test
pop
dec
gs
xor
pop
inc
insl
xor
cmovle
push
push
es
xchg
arpl
adc
lock
scas
aad
rcrl
mov
stos
outsl
inc
jo
fnstsw
aad
push
jb
and
int
and
cmpsl
ds
dec
push
fisubs
sub
fsubrl
aad
add
sub
push
xlat
push
add
pop
loope
sub
mov
add
cwtl
loop
push
mov
push
jle
cwtl
push
or
push
dec
fldcw
fstpl
lods
lcall
xchg
ds
add
push
cmp
cmp
adc
cltd
adc
jae
dec
inc
inc
adc
xlat
jle
insl
xchg
dec
and
mov
mov
out
cmp
cmp
popl
insl
hlt
cltd
cmpsb
fstps
add
jp
ret
inc
sbb
pop
pop
leave
add
or
cs
clc
dec
xor
add
fwait
sbb
movb
out
gs
cwtl
jnp
pop
xorb
pop
dec
jbe
or
xlat
fs
and
inc
sbb
or
js
in
rorl
cmp
cltd
out
in
push
xlat
jno
movsl
fstpl
jo
mov
xchg
jbe
icebp
rcrb
xchg
add
cltd
mov
cmc
dec
iret
and
jle
jae
fidivrl
push
ror
sub
iret
adc
sub
fst
jle
add
daa
and
fdivr
out
cs
push
pop
push
push
ret
xchg
push
mov
ret
arpl
cmpsb
dec
icebp
cmc
ret
shll
dec
push
scas
fldt
aas
push
jbe
or
ja
add
test
add
push
jbe
xchg
xor
cmp
fadd
lock
cmp
dec
push
aad
or
std
lea
sub
sub
xor
imul
push
or
xlat
and
push
and
sbb
mov
mov
test
push
sub
jo
sub
mov
fistps
cmp
cmp
mov
in
xlat
cmp
sbb
or
popf
push
xor
cs
mov
mov
xor
popf
std
mov
mov
xchg
fs
nop
cmpsl
scas
sbb
stos
test
lret
fbld
nop
xor
sbb
push
or
imul
sbb
mov
adc
mov
sub
stc
push
add
cmp
jmp
rolb
jp
mov
sbb
ds
dec
ss
add
fbstp
cmp
je
popa
daa
mov
cld
mov
scas
jns
rorl
or
popf
daa
faddl
add
std
jo
push
jle
mov
xchg
sub
add
test
imul
in
sub
mov
aad
adc
sub
shr
data16
addr16
mov
or
or
cmp
test
shrl
stc
orb
inc
adc
inc
inc
jo
pop
sbb
jns
adc
data16
jbe
cmp
add
jle
push
jge
jp
push
cmc
test
inc
adcb
xchg
dec
out
or
pop
je
xchg
dec
loopne
xchg
inc
into
add
xor
mov
daa
fwait
push
aad
mov
cli
jns
and
pop
sub
sbb
test
jmp
test
add
mov
mov
dec
lret
rcrb
jnp
jbe
jo
dec
popa
cmp
dec
inc
xchg
sbb
mov
dec
cmp
mov
addr16
nop
in
sub
or
sbb
shlb
add
adc
sbb
in
xchg
fnstsw
xchg
es
push
ret
cmpsb
sbb
sub
push
fs
mov
lcall
mov
adc
mov
dec
outsl
out
aad
sub
push
sbb
inc
mov
adc
rorl
int
add
cs
inc
cs
mov
aad
xchg
push
dec
push
dec
push
test
sbb
push
dec
push
pop
jmp
pop
cmp
lcall
rclb
mov
mov
adc
mov
pop
fistl
lods
dec
and
push
mov
jp
dec
pop
jle
orl
xchg
pop
and
out
sub
sub
out
addr16
mov
out
push
pop
fwait
push
stc
push
cmpb
push
push
aad
addr16
jb
mov
sbbb
xor
jo
sub
rcll
dec
call
testb
pushf
iret
mov
lahf
sub
pop
jno
sbb
jg
push
repnz
out
pop
push
pop
dec
fiadds
pop
push
mov
decl
out
fs
pop
add
sbb
mov
adc
vpsadbw
push
mov
dec
clc
sbb
push
cmpsb
push
inc
push
cmpsl
popa
sub
push
xlat
sub
cmp
xchg
je
or
cmp
mov
xlat
push
out
in
mov
into
ret
and
mov
mov
push
adcl
push
cld
and
dec
sbb
mov
xchg
cs
insb
cmpl
lea
xor
fiadds
pop
out
cs
scas
arpl
sbb
jbe
lods
jp
push
xor
cmp
out
add
adc
mov
in
jle
and
sbb
repnz
mov
push
sub
push
idivb
sub
xchg
jo
mul
xlat
or
es
addr16
and
or
pop
js
insb
jle
fnstenv
adc
push
mov
push
add
mov
divl
cmp
sbb
stc
dec
aad
sbb
jl
inc
aaa
or
sub
pop
js
push
mov
pop
sbb
fisubl
into
xor
cs
dec
dec
xchg
mov
inc
dec
push
jbe
fstl
sub
js
mov
je
cmpsb
sbb
sbb
loopne
js,pt
sub
negl
mov
stc
mov
or
mov
sub
fsubl
jle
mov
movsl
pop
loope
addr16
pop
imul
inc
cmp
aas
jbe
mov
aad
pop
pop
ja
scas
outsb
enter
mov
out
inc
and
and
daa
ret
leave
lcall
mov
sbb
iret
or
cmp
pusha
cs
clc
jmp
push
add
pop
xchg
xor
scas
lea
mov
push
lods
lahf
fnstcw
jl
sub
push
or
jns
stos
cs
je,pn
pop
addr16
incb
or
mov
xor
je
push
scas
sbb
sub
inc
loop
inc
scas
not
or
push
test
addr16
aas
js
mov
out
sub
fld1
dec
jo
scas
sub
push
js
push
adc
push
xchg
fstpl
mov
mov
enter
cwtl
and
ja
cmp
push
pop
mov
jecxz
lods
shl
mov
icebp
xchg
iret
add
ja
xor
icebp
fnstcw
jp
inc
jl
inc
adc
loop
adc
mov
xor
mov
cs
dec
dec
enter
clc
mov
sarb
les
and
xor
mov
mov
push
andl
xchg
push
in
add
mov
lds
push
into
sbb
pop
aas
enter
inc
daa
jns
mov
stos
or
dec
aad
scas
into
cmpsb
aas
push
inc
shll
lahf
lret
rorb
std
inc
and
mov
js
jo
jp
or
sahf
mov
cmc
js
cmp
pusha
jecxz
out
stc
push
insl
and
loopne
pushl
imul
out
iret
loop
and
gs
add
adcb
mov
jp
adc
add
aam
mov
loopne
ljmp
out
jmp
xchg
dec
ljmp
dec
add
das
iret
cwtl
pop
test
inc
pop
loopne
es
lds
hlt
clc
adc
push
dec
iret
leave
loop
rcll
jge
repz
int
ret
movsb
and
inc
pop
insl
fdivrs
cmp
push
sbb
mov
xchg
bt
pop
adc
test
sub
xor
out
fnstenv
data16
jecxz
xchg
inc
xchg
push
movsl
insb
fwait
mov
repnz
out
shl
jb
jne
adc
mov
sbb
mov
scas
jp,pn
mov
sub
outsb
mov
aad
popa
cmp
adc
jbe,pn
adcl
jp
pop
pop
xor
add
sbb
jbe
jp
enter
cmpsb
adc
popa
sub
fnstenv
sbb
cld
sarb
icebp
mov
das
sbb
stc
jp
gs
adc
push
add
push
je
xor
pop
jle
jno
loope
iret
stc
inc
mov
push
mov
pop
adc
xor
es
adc
rcll
or
enter
jp
popf
mov
insl
incb
cmp
or
dec
outsb
loopne
mov
mov
repnz
lcall
or
cwtl
decb
aam
lods
fstpt
or
jnp
scas
les
xchg
mov
pop
leave
mov
push
xchg
pusha
fwait
mov
adc
sub
dec
jle
mov
dec
call
popf
mov
push
dec
outsb
add
and
mov
mov
xchg
test
ss
sbb
leave
xchg
fidivs
scas
mov
mov
inc
ljmp
ret
xorb
xor
ja
xlat
add
cmp
nop
dec
iret
push
sub
pop
inc
adc
dec
jb
outsb
sub
jge
sbb
add
cmp
mov
add
out
js
push
sbb
or
js
insl
inc
lods
shrl
xchg
xchg
loopne
repz
es
subb
cmp
mov
ss
add
in
popa
push
jle
sub
outsl
sbb
cmc
xchg
xor
mov
into
push
call
outsb
sub
bound
sbb
iret
loope
iret
push
pop
fcomip
mov
outsw
pop
pop
push
dec
push
mov
and
adc
repnz
cmp
xor
pop
sbb
mov
or
rcrl
je
js
sub
es
pop
addb
std
sbb
lds
pop
test
push
cs
cmp
sub
daa
xor
and
test
cmp
inc
and
xor
cld
popl
ret
mov
jle
adc
test
jnp
out
insl
mov
fstpl
movsl
mov
ret
dec
push
lods
sbb
ds
imul
push
xchg
addb
test
push
mov
daa
scas
mov
das
xchg
push
and
xor
iret
in
jp
mov
dec
dec
cmc
sbb
push
movsl
mov
jle
stc
gs
mov
xchg
cmpsl
pop
adc
out
fsubrs
dec
sub
jb
push
es
pop
mov
push
adc
insb
pop
inc
pop
add
pop
filds
clc
fmuls
or
pop
mov
dec
imul
mov
push
inc
shl
lods
sub
pop
cmp
pop
jg
rorb
cmp
movsl
sub
out
sub
frstor
jo
xchg
pop
sbb
dec
mov
inc
icebp
push
movsl
js
cmc
jo
mov
jb
mov
mov
mov
mov
mov
mov
dec
and
out
push
add
push
xor
ljmp
lret
je
jbe
push
push
jle
sub
pop
in
mov
pop
addr16
popf
jno
es
sub
adc
adc
test
cmpsl
xchg
repz
inc
idivl
sarl
ljmp
pop
lret
mov
mov
mov
insl
adc
mov
lret
push
das
shrl
sub
aad
xchg
sarb
scas
sub
ja
adc
pop
jp
lcall
jbe
cs
lret
and
rcll
imul
dec
sub
aam
std
push
jl
and
iret
in
mov
sub
lods
and
adc
inc
and
xor
jbe
addr16
sbb
movsb
push
sub
fistl
sub
cmc
in
jns
fistpll
test
push
lods
dec
addr16
push
push
xchg
pop
cmp
mov
pop
cltd
pushf
push
fucom
jle
push
rcrb
inc
insl
add
mov
sub
arpl
dec
mov
inc
hlt
jg
dec
ret
xchg
sbb
sbb
stos
sub
sarl
sub
sbb
mov
bound
fs
sbb
inc
cs
fmull
les
inc
push
and
pop
sbb
rcrb
test
xlat
mov
xchg
dec
adc
cmp
mov
fs
std
scas
push
imul
clc
mov
add
int
ljmp
int3
popf
bound
iret
subl
adc
cmp
rol
je
fidivrl
sub
xchg
cli
stos
movsl
icebp
and
mov
dec
or
mov
into
xrelease
inc
push
pop
add
popa
ret
daa
inc
mov
in
lea
push
gs
mov
inc
cmc
sub
arpl
pop
js
xchg
jge
filds
inc
xchg
mov
je
jo
call
dec
cltd
or
loopne
lcall
sub
push
je
push
js
jecxz
adc
mov
jmp
or
pop
sub
mov
shlb
outsl
sub
inc
test
aad
popf
ret
xor
inc
sub
negb
int
mov
inc
inc
cmpsb
mov
sub
hlt
rep
pop
inc
enter
aad
int
in
add
adc
dec
jg
cld
jne
pop
or
out
xor
inc
push
and
dec
add
addr16
or
add
mov
mov
insb
ret
sbb
push
push
shlb
mov
iret
fists
fs
dec
push
pop
out
rcrl
mov
cs
js
and
shll
cli
mov
inc
mov
add
or
clc
inc
sarb
mov
pop
test
fsubl
cmc
dec
mov
inc
ret
int
pop
jb
pop
imul
jl
inc
mov
dec
mov
movsl
dec
sahf
jge
outsl
ret
popa
mov
iret
push
test
fcomp
sub
call
mov
popf
or
fsubrs
rcll
push
inc
push
sti
adc
lcall
push
mov
push
xor
add
jp
das
adc
jecxz,pn
mov
out
cmc
enter
pop
popf
dec
out
mov
cmp
push
dec
aad
mov
xchg
ret
imul
pop
lock
pop
out
test
jle
mov
jle
scas
pop
jecxz
xchg
lods
adc
adc
jecxz
sbb
dec
js
jbe
fidivl
mov
mov
ret
and
pusha
xchg
ds
stc
xchg
mov
std
insl
lock
ret
sarl
mov
orb
popa
jbe
pop
inc
daa
into
cmp
lret
jge
jnp
fucomip
insl
sahf
mov
adc
lcall
lret
mov
fisttps
adc
xchg
push
sahf
and
clc
jle
test
jns
cltd
outsb
mov
sbb
pop
lea
pop
call
lods
mull
mov
scas
sub
imul
out
fisttpll
xchg
sub
mov
cmc
popl
dec
push
mov
cmpsw
scas
adc
sbb
cs
ds
shl
outsb
rcrl
fistpl
lea
subb
or
aad
dec
ret
xchg
push
stos
mov
sub
js
jbe
mov
jb
cmpsl
es
stc
cmp
aaa
lret
dec
js
mov
mov
pop
mov
xchg
pop
subl
insl
adc
hlt
cmpsb
loope
fwait
add
test
pop
push
lock
rorb
pop
aad
mov
aad
popf
adc
sbb
mov
sahf
dec
subb
sbb
int
dec
dec
pop
xor
and
xchg
insl
cmc
pop
insl
lods
cmp
adcl
sarl
aaa
cwtl
push
rcrb
pop
int3
cwtl
outsb
cmp
mov
inc
mov
dec
sbb
push
cmpsl
jns
pop
cmpb
dec
push
sarl
sub
and
mov
cmpsb
add
cs
inc
insb
jne
cs
mov
jbe
jle
fdivrs
test
sub
clc
mov
stos
sahf
cmp
pusha
es
push
fdivs
mov
add
push
jg
pop
test
int3
clc
in
iret
add
push
fadd
cwtl
out
subl
xchg
push
and
xor
popf
mov
sub
cmp
jmp
jns
pop
mov
cltd
pop
pop
xor
clc
sahf
mov
jecxz
clc
in
rcll
mov
dec
gs
adc
ret
adc
dec
lret
jbe
out
nop
xchg
daa
pop
mov
and
jle
jo
vmovapd
mov
out
daa
push
fiaddl
loop
lds
xchg
mov
loopne
je
jle
repz
aam
cmpb
mov
adc
cmp
sub
push
jae
mov
cs
dec
mov
out
jp
push
mov
aaa
or
sub
cmp
mov
cvtpi2ps
mov
fld1
pop
jbe
push
mov
ds
cltd
sbb
sub
jge
sub
lods
sbb
xchg
mov
sub
outsb
xchg
mov
or
jo
push
push
and
insl
jmp
mov
add
cltd
leave
adcl
idiv
fwait
dec
and
jno
rcl
inc
testl
incb
roll
cs
mov
out
jne
pushf
xor
xor
jge
and
incb
dec
jae
inc
push
pop
fldt
pop
dec
jmp
pusha
push
jl
test
dec
mov
imul
out
push
cmpsl
sub
cmp
int3
cmp
mov
mov
xlat
test
sbb
out
pop
xor
adc
add
push
js
xlat
int
fs
je
pop
daa
jb
pushf
aam
jb
sbb
sub
xlat
es
iret
jle
cwtl
push
lock
add
pop
sbb
xchg
int
push
jbe
adc
pop
sub
addr16
inc
scas
inc
or
shrl
xorb
aad
jl
packsswb
aam
stc
sbb
push
push
jg
imul
jbe
push
data16
jle,pn
insb
or
gs
sbb
popa
cmpsb
addb
fisttpll
lea
lret
cmp
cmc
bnd
sbbb
mov
jle
ljmp
pop
pop
call
push
add
es
insl
inc
lock
test
scas
push
repz
push
mov
out
outsb
scas
cmpsl
cmove
or
test
out
mov
in
imull
cmc
out
out
cmp
shrl
dec
push
push
std
push
cmp
enter
and
testl
push
jle
std
fstpt
cld
cmovp
sbb
js
shl
stos
arpl
jle
rolb
mov
mov
xchg
lahf
sbb
xor
psubusw
push
outsb
jge
xchg
out
pop
push
pop
inc
or
xchg
aam
out
push
pop
add
push
enter
push
sub
dec
cmp
cmc
inc
ret
pop
sbb
xchg
push
cmp
and
mov
dec
dec
and
cltd
fldt
mov
inc
rorl
insl
imul
jecxz
add
scas
ret
adc
aaa
pop
ret
xchg
mov
mov
repnz
cmpsb
gs
into
pop
cmp
aam
out
adc
call
mov
adc
aad
mov
cs
jecxz
scas
xchg
bound
push
pop
xor
cmp
or
mov
dec
fnstenv
inc
arpl
outsl
or
jle
in
jnp
sub
or
mov
loope
mov
mov
push
mov
jo
mov
out
out
xor
cmp
mov
xor
jo
jle
cs
es
out
clc
jle
test
mov
adc
add
xlat
in
idivl
push
shll
cmpsb
dec
out
mov
dec
dec
shr
aam
sub
outsl
sbb
pusha
lcall
sbb
das
mulb
xchg
cli
or
or
lcall
mov
push
insl
add
js
ret
ds
out
movsl
or
or
lds
push
sub
add
mov
test
push
lods
out
adc
out
mov
adc
and
je
lahf
ret
cmp
xchg
mov
fs
lret
dec
push
inc
int
push
dec
jecxz
xchg
push
fs
mov
test
xchg
xlat
lcall
lods
subb
push
and
fnstenv
push
xor
xbegin
or
and
insb
dec
popf
cmp
pop
ror
clc
lds
mov
fisttpll
mov
ficompl
cmp
jo
xchg
jle
mov
sbb
add
and
add
or
ljmp
int
and
cs
sub
lret
add
js
jo
lcall
mov
out
int
cs
test
add
or
call
add
dec
cs
cmc
aad
and
cmc
mov
ljmp
les
insl
es
pop
xchg
gs
jg
call
jbe
repz
sub
sti
and
push
rcrl
jle
push
ficompl
jl
push
jle
add
lcall
jbe
repnz
sbb
jo,pn
lea
jle
jbe
fucomp
mov
std
dec
and
clc
inc
push
cmp
xor
ss
jns
mov
movsl
insl
cmp
imulb
xchg
pop
inc
ja
and
repnz
rcrl
es
jbe
idivl
xchg
mov
repnz
push
ljmp
inc
add
jg
cmpsb
cmpl
lret
icebp
mov
sub
adc
sbb
jge
stc
ss
mov
xchg
dec
sbbl
dec
aad
icebp
aas
sbb
sub
lcall
imul
inc
out
daa
addr16
lock
icebp
adc
pusha
jp
mov
jb
test
lock
rcll
add
scas
cmp
push
das
fdiv
mov
mov
jl
sub
and
push
mov
jns
testl
push
rorl
mov
fnstenv
std
je
jb
ret
std
pop
inc
dec
sbb
sbb
cmp
ficoms
dec
lahf
push
int3
xlat
out
jae
xchg
mov
jno
jbe
loop
lea
cld
scas
inc
outsb
inc
stos
jle
test
jge
fs
dec
ljmp
mov
adc
stos
jp
cmp
sbb
or
int
aaa
jle
adc
add
push
cmpl
das
or
fldl
mov
ljmp
pop
xchg
aad
test
xchg
sbb
add
and
jle
lods
repz
out
lcall
dec
inc
lods
rcll
rcr
xor
inc
int3
or
xor
push
sub
ds
xchg
cmp
pop
ror
fs
ret
and
mov
pop
xor
sbb
stc
into
repnz
and
xchg
sbb
insb
inc
mov
aam
mov
stos
and
push
sbb
fistps
xchg
popfw
jo
sbb
pop
pusha
lcall
jmp
jmp
jle
sub
xchg
nop
arpl
popa
iret
js
jle
outsb
sbb
arpl
shrl
mov
adc
push
mov
sub
std
jb
inc
inc
in
arpl
adc
fmul
jb
inc
test
adc
inc
sti
out
xchg
adc
xchg
je
repz
negl
ds
mov
and
push
and
jo
mov
insl
sbb
pop
inc
xchg
ss
push
sbb
pop
cs
fdiv
ljmp
sub
addr16
in
mov
or
jge
cmp
daa
cmpsl
inc
repnz
gs
dec
stos
sub
aad
cmpsb
push
scas
jge
and
mov
pop
push
pop
lock
scas
adc
xor
lods
in
sahf
mov
rcll
xchg
dec
sub
iret
push
xchg
cmpsb
repnz
fld
gs
mov
das
xchg
mov
lcall
sbb
pop
xchg
push
ds
js
mov
sbb
fstpt
mov
mov
clc
sub
pop
cs
cltd
dec
inc
fldl
add
or
sahf
push
cs
mov
daa
dec
mov
sub
mov
jae
xorl
cmp
fsts
aas
cwtl
xchg
jl
outsb
inc
ja
push
pop
or
pop
shl
dec
mov
cmp
push
cmp
cli
jne
lcall
dec
je
test
push
pop
dec
ljmp
lds
jae
cs
int
dec
dec
ja
shrl
add
mov
sub
ljmp
adc
call
push
push
mov
xor
popf
mov
cmpsl
mov
xor
scas
cs
cli
add
inc
mov
or
ds
push
cmpsl
mov
and
cs
mov
jle
push
fsts
lret
and
xlat
fildll
cmp
in
js
insb
add
sub
add
inc
or
jle
pop
cwtl
dec
iret
push
jl
inc
addr16
sahf
orb
or
pop
push
dec
into
sub
cmp
dec
sbb
nop
cmp
and
xchg
mov
repz
ret
xchg
pusha
dec
stc
dec
ds
pop
push
sbb
test
mov
pop
sbb
jl
lods
xchg
es
fucomi
test
bnd
jg
jnp
mov
mov
inc
rcrl
std
stos
adc
sbb
xchg
je
aas
sbb
movsl
in
jno
andb
sub
stos
push
push
aad
daa
insb
mov
pop
dec
cmp
or
fisubrs
jl
cltd
repnz
addb
ja
test
imul
outsb
xorb
pop
mull
fldt
push
jecxz
outsb
push
xchg
or
sub
adc
mov
and
jp
daa
jo
jle
sub
scas
nop
icebp
push
push
dec
sbb
pop
js
push
and
out
outsl
cmpsb
inc
popa
add
add
sbb
in
sub
subl
sub
jle
push
inc
adc
push
adc
pop
flds
jnp
cs
pop
fsts
mov
jno
push
insl
cmp
or
jg
push
fnstsw
sbb
loope
mov
insl
pop
stos
test
sub
flds
jp
ja
inc
outsb
mov
sub
loopne
dec
in
lret
subb
ret
inc
int3
jne
and
xor
mov
insl
test
jmp
ds
cs
inc
push
add
adc
dec
push
rcl
jb
sub
add
adc
imul
xchg
inc
fcompl
xchg
int
jmp
in
mov
push
lds
lods
mov
jb
dec
sbb
and
pop
sub
sbb
call
es
dec
inc
data16
sahf
cmpsl
icebp
out
xor
cs
mov
jmp
cmp
push
dec
inc
aad
inc
push
pop
pop
fcmovnb
push
push
fstpl
clc
mov
inc
es
and
add
add
mov
pop
push
outsb
mov
popf
subl
aad
fdiv
daa
out
pop
inc
out
fsts
js
test
and
and
push
sbb
pop
jge
add
jecxz
sbb
ficoms
xchg
std
outsb
fsubrs
jbe
jle
daa
cmp
inc
decl
out
in
imul
pop
push
jmp
push
dec
pop
pop
int
cmp
decl
xor
cmp
insl
aaa
arpl
icebp
js
test
in
mov
jo
popf
sbb
std
out
pop
popa
insl
andb
pop
jne
mov
fldcw
jmp
mov
xor
push
xchg
inc
pop
mov
mov
subb
shrl
out
pop
and
xchg
add
shlb
outsb
inc
sbb
push
pusha
je
inc
js
pop
and
push
sti
push
aad
push
or
push
loop
or
cli
or
mov
cmp
jne
in
scas
lea
adc
adc
add
es
cmp
inc
or
dec
arpl
je
outsl
push
jbe
jg
addb
pop
pop
test
sub
dec
pop
addr16
rorl
hlt
dec
pop
mov
inc
or
pop
arpl
cmp
and
test
add
aad
xlat
or
xlat
int
insb
xchg
mov
sbb
cli
sbb
jle
je
cmpsl
sub
push
pop
cmp
or
mov
in
stos
push
jp
and
fstpt
scas
cmpsl
pop
push
dec
lcall
ret
xchg
mov
das
dec
sub
cs
andl
or
repz
ja
rorl
dec
and
xlat
loopne
dec
sub
or
push
out
scas
int
je
daa
pmaxsw
mov
and
push
stc
hlt
jns
inc
aaa
jge
dec
fst
adc
aad
int
test
jb
jo
sti
lds
fisttpll
fs
ret
push
js
or
incb
es
jo
jno
fimull
or
xor
lods
pop
sub
test
pop
loope
and
adc
sbb
shrl
mov
int3
fidivl
pushf
ficomps
out
mov
jecxz
jo
and
rcrl
out
mov
clc
aad
clc
orb
inc
cmp
fcoml
add
or
sub
pop
repz
jo
sub
es
lahf
insl
inc
leave
adc
shlb
jb
and
cmpsb
mov
jno
in
cmpl
push
sbb
sbb
push
ljmp
aam
xchg
cs
fnstsw
sub
es
mov
aad
sahf
sub
push
insl
int
scas
shlb
jle
aad
icebp
ja
int3
subb
push
push
fidivrl
insl
xchg
and
test
mov
mov
mov
pop
test
into
push
adc
mov
adc
mov
cmp
jp
xchg
inc
xchg
sub
out
insl
in
fsubrp
pop
dec
xchg
cmp
ss
cwtl
adc
pop
lcall
gs
xor
or
scas
mov
adc
outsl
mov
clc
mov
sarl
or
out
movsl
cmp
adc
enter
jbe
xchg
mov
pop
jns
mov
scas
mov
outsl
pop
push
push
mov
pop
out
stc
xchg
cmp
cmc
inc
out
pop
and
cltd
les
cmpsl
data16
es
outsb
push
loopne
fldcw
jo
dec
xchg
iret
adc
das
sbb
adc
arpl
pushf
adc
leave
mov
cmpb
je
das
insl
adc
push
lock
mov
out
jbe
ret
fld
mov
mov
call
mov
or
fxch
adc
cld
or
ljmp
xchg
insb
push
aad
cmpsb
dec
cmp
push
arpl
add
jle
adc
add
sbbb
js
cltd
imul
sarb
mov
stos
xor
popf
xor
xor
out
or
cmc
ret
insb
bound
das
xchg
icebp
add
xchg
jmp
ss
jle
addb
into
stc
xor
push
aaa
rcrl
aam
addb
xor
and
psraw
dec
aad
cmpl
nopl
mov
push
or
pop
push
xchg
fisttpll
out
push
sub
cmp
mov
xchg
int3
push
push
inc
mov
pop
sub
jle
in
push
mov
cmc
loop
orb
movsl
sub
inc
cs
push
int
adc
xor
out
push
cmpsb
push
es
adc
ja
and
insl
dec
and
es
cmp
sub
push
cld
int3
call
ss
lock
or
test
xchg
ror
jle
es
push
sbb
int
add
cmc
sub
push
test
jb
test
dec
dec
cmpsl
and
inc
lods
mov
push
pop
pop
sub
push
es
push
pop
and
sub
popl
js
add
pop
dec
fs
movsl
clc
movsb
xor
cs
push
push
mov
dec
in
js
jle
sbb
mov
pop
mov
pop
fs
mov
cs
adc
icebp
fildll
mov
jp,pn
sub
mov
pop
or
dec
sub
dec
imul
jbe
sub
out
mov
and
test
jle
inc
subb
gs
int3
or
and
and
mov
daa
jle
cmpsb
pop
inc
push
push
jbe
xlat
push
or
cs
push
mov
sub
aad
cmp
jle
sub
xchg
jb
cli
pusha
out
add
cs
mov
loope
fsubrp
vpshufhw
jg
sbb
xchg
lods
mov
add
call
mov
xchg
cmp
daa
push
dec
lods
add
push
aad
outsb
adc
xor
or
test
xor
test
add
sub
testb
pop
xchg
pop
mov
fnstsw
mov
pop
push
jmp
push
push
mov
in
adc
jle
adc
adc
mov
pusha
es
push
pop
and
dec
insl
test
in
sbb
cmp
lret
in
js
out
adc
sbb
call
xchg
cmpsl
sti
mov
push
jge
rolb
arpl
jg
stc
lret
adc
fstps
sub
cmp
imul
sbb
loopne
mov
subb
gs
insl
xor
mov
fs
scas
ss
or
pop
mov
scas
mov
mov
push
scas
fnstenv
cltd
std
xchg
popa
stc
sub
dec
push
aam
inc
adc
push
jl
add
mov
jl
push
mov
dec
std
sub
xlat
push
pop
sbb
sub
das
push
inc
outsb
adc
push
fistpll
jns
jge
mov
mov
jge
in
push
push
sahf
sub
sbb
out
jns
push
out
pop
mov
mov
fnstenv
mov
pop
cltd
push
in
xor
and
aas
and
push
pushf
outsb
jge
mov
std
sub
mov
scas
adc
ss
and
pop
adc
adc
cmp
call
mov
jl
stos
mov
addb
negl
cld
sub
into
or
cmp
push
push
jno
ljmp
data16
adc
cmp
dec
lret
faddl
sub
mov
dec
mov
int3
iret
push
sub
aad
test
fists
pop
push
std
outsb
jbe
decl
jb
and
int
push
pop
cmp
addr16
sti
aad
ljmp
ret
sbb
mov
xor
ljmp
int3
pusha
movsl
and
inc
xchg
and
xchg
push
dec
jge
in
pusha
sub
cltd
push
out
pop
add
dec
aam
mov
adc
ret
sbb
lea
gs
dec
repnz
cwtl
mov
sbb
std
cmpb
cmp
addl
jb
iret
mov
push
cmc
push
sbbl
jl
mov
fisubrs
lds
or
and
adc
sub
pop
pop
pop
in
mov
outsl
and
lret
xchg
into
inc
xor
fisubrl
jbe
or
push
sbb
mov
popa
push
pop
inc
and
mov
int
xor
sbb
outsb
push
dec
mov
es
pop
xchg
adc
mov
sbb
insb
mov
push
js
pop
mov
pop
jne
mov
in
addr16
movsb
dec
ret
cwtl
jg
js
outsb
push
adc
push
push
pop
stos
data16
sub
sub
mov
mov
pop
sub
sub
mov
sub
mov
cltd
sbb
test
sbb
jge
sub
cltd
ja
js
jo
jmp
in
fs
jbe
pop
outsb
aaa
cltd
jne
sbb
sbb
in
fisubl
mov
sbb
gs
loope
xor
ret
xor
int
jno
stos
mov
push
fs
jae
pop
mov
or
ficompl
rclb
out
cmp
stc
out
scas
mov
mov
xor
push
push
leave
cmp
movd
cmpsb
psrad
in
jecxz
ret
ss
mov
sub
and
pop
mov
int
mov
std
cmc
mov
aad
xchg
sbb
add
sbb
cmp
cmp
mov
enter
mov
aam
xchg
scas
pop
inc
pop
ret
inc
xchg
dec
js
cmp
aad
jbe
setge
sahf
xchg
mov
pop
sub
mov
stos
hlt
mov
fiaddl
sbb
ja
cli
stos
adc
cmpb
push
mov
lods
ds
rcl
adc
inc
mov
es
jl
gs
sub
jecxz
popa
stos
push
push
ret
cmc
lcall
xchg
xchg
or
push
push
push
pop
pushf
andb
nop
sbbb
xchg
sbbb
fldenv
flds
cmp
test
dec
rolb
call
cwtl
scas
xor
cmp
cmc
mov
sub
inc
cmp
push
into
cs
and
sbb
push
lret
je
out
push
jno
push
in
sarl
jbe
sbb
fstpl
stos
mov
rcrl
inc
or
or
stos
xor
or
movsl
test
push
lret
xchg
fs
adc
lods
std
popa
aas
xor
je
and
sbb
push
mov
dec
mov
sub
mov
mov
xchg
sub
add
pop
ljmp
insl
call
lods
push
jg
pop
orl
lock
popa
and
pop
and
sti
outsb
popf
call
and
mov
or
mov
pop
dec
dec
jl
push
jle
dec
push
jl
adc
pop
js
or
jo
or
frstor
add
and
shlb
cmp
inc
mov
xchg
ja
cli
adc
inc
sub
ret
inc
xchg
popa
add
lahf
or
gs
into
ret
fld
pop
xchg
or
xchg
inc
mov
dec
mov
lock
insb
jecxz
out
rcrb
testl
stc
ds
xchg
and
fldenv
ja
lret
or
mov
pop
fnstcw
ffree
sub
aad
push
push
push
ret
jg
push
iret
mov
adcb
stos
lcall
or
js
xor
mov
jge
fldl
repz
fisttps
jp
movsl
jecxz
out
iret
lret
or
jb
pop
bound
xor
mov
call
xlat
mov
jmp
inc
jb
insl
push
add
cmc
lock
jne
pusha
xchg
jb
jbe
out
dec
dec
cld
sub
pop
adc
dec
or
mov
leave
sub
xor
notb
in
inc
sbb
ret
mov
fcomp
cmpb
xchg
out
sbb
xor
add
lcall
xor
jle
addr16
push
movsl
sub
add
enter
out
cmpsl
sub
in
push
lcall
sbb
pop
dec
xor
xor
aad
addr16
sub
fisubrl
or
cs
test
sets
lds
add
add
cwtl
lcall
out
push
sbb
or
xor
dec
sub
fnsave
mov
fistl
fsubrs
jbe
lahf
mov
push
fidivrs
cmp
gs
add
dec
and
stos
push
and
push
lret
inc
mov
mov
std
xlat
dec
clc
push
or
cmpsb
jecxz
loope
dec
sbb
movzbl
sbb
test
negb
mov
mov
add
in
test
adc
inc
xor
popa
sub
js
inc
insb
stos
mov
sbb
into
xchg
push
lea
ds
std
pop
test
jo
orb
inc
bound
fcomi
mov
gs
mov
xchg
lcall
pop
jl
cltd
fstpt
xor
and
mov
add
es
lods
jecxz
lods
mov
outsb
push
pop
and
sub
pop
or
pop
sbb
push
outsb
push
pop
push
mov
loop
push
ljmp
inc
jbe
popf
add
push
adc
inc
cwtl
testl
cmpsb
xchg
fisubs
jge
scas
xchg
into
push
xchg
pop
jmp
jp
daa
push
add
lds
mov
lahf
rol
adc
push
jle
repnz
push
mov
or
cmp
imul
xor
jle
adc
insl
add
iret
das
xlat
and
cmc
cmp
mov
outsb
outsl
sbb
pop
aad
sbb
scas
dec
mov
mov
scas
cmc
in
cmpsb
push
fsts
xor
lcall
js
fisubs
dec
dec
sbb
push
jo
cmp
cmc
inc
jle
in
out
sbb
aad
dec
scas
jno,pn
xchg
xchg
jb
es
in
outsl
push
sarb
int
pop
aam
jbe
cmp
ret
mov
dec
fs
shrb
add
stos
adc
pop
shrb
inc
mov
lcall
out
es
sub
loop
xchg
mov
push
or
mov
aad
int
repz
xchg
dec
sub
lea
jbe
push
sahf
fwait
insb
mov
cld
stos
push
lods
xchg
push
aad
mov
push
jg
xlat
sti
sahf
xchg
push
rolb
push
mul
and
jbe
test
out
out
push
std
test
mov
sub
push
popa
repnz
lret
or
mov
push
lds
and
push
fnsave
pop
sub
sub
xchg
jle
xor
push
push
mov
lods
aaa
dec
sub
inc
sahf
sbb
cltd
dec
sub
mov
cmpsl
testl
aad
add
icebp
pop
insl
out
pop
in
pop
data16
adcl
sub
xchg
cmpsb
test
inc
shrl
in
aaa
ja
pop
push
dec
out
std
sub
outsb
int
orl
out
push
xchg
sar
pop
sbb
into
fisttpll
sub
sub
dec
mov
mov
insl
movsb
pop
es
mov
ss
cmpsb
lods
push
sub
fstpl
outsb
jge
pop
or
xlat
ja
lcall
inc
mov
enter
sub
addr16
mov
adc
push
bound
lods
int
pop
addb
push
adc
sub
sub
xchg
sub
sbb
push
push
mov
fsubr
les
popf
or
push
xchg
aad
dec
mov
fwait
test
fidivrs
les
es
mov
pop
pop
addr16
ret
push
rcr
sub
outsb
les
push
inc
inc
lea
lahf
cmc
das
mov
mov
pop
mov
adcl
negb
pop
fldt
out
push
mov
push
addb
inc
jmp
stos
mov
ds
push
js
pop
mov
arpl
xor
ret
ja
iret
xor
mov
ds
addr16
pop
and
push
sahf
mov
stc
es
jns
in
dec
jns
xor
or
inc
daa
sbb
inc
popf
cs
dec
push
inc
xorb
sub
mov
cs
scas
daa
mov
mov
fdiv
xchg
dec
es
pusha
int
sub
or
push
mov
addr16
outsl
xchg
lods
std
xorl
int3
aad
sbb
cmc
repz
xchg
push
push
push
addr16
sub
push
stos
push
sub
pop
mov
outsb
icebp
adc
popf
mov
xchg
add
mov
into
ja
and
jl
xor
jecxz
divb
mov
mov
aad
lea
and
insb
and
test
mov
insl
lock
push
negl
stos
out
xchg
mov
jp
inc
lret
pop
hlt
mov
push
outsb
clc
stc
movsb
push
push
cmc
je
addr16
jmp
daa
out
dec
push
pop
xchg
jne
arpl
push
adc
out
outsb
cli
dec
out
inc
push
rorb
mov
out
sub
mov
dec
jbe
jns
xor
mov
push
cmpl
mov
cmp
mov
mov
push
jp
movsl
out
daa
popf
jge
outsb
adc
insl
mov
pop
sub
movl
es
xchg
loopne
inc
mov
iret
mov
push
out
addr16
mov
pop
rorl
ficomps
xorb
cltd
jmp
sahf
inc
inc
out
enter
daa
movsb
dec
orb
ficoms
popf
mov
ds
add
fsubrl
and
stos
fdivrs
mov
fcomps
subl
pop
mov
mov
cwtl
shlb
push
push
sahf
xor
mov
std
movl
outsl
in
popa
inc
aas
xchg
mov
lret
xchg
mov
jge
out
pop
je
pushf
inc
frstor
sub
ficomps
pop
mov
mov
movsl
add
cli
scas
ljmp
fs
mov
cmp
roll
xor
cmp
repnz
scas
xor
mov
dec
add
cmp
inc
ficoms
adc
pop
push
iret
dec
int
inc
pop
push
popa
dec
jb
shll
push
mov
sbb
push
imul
dec
ret
shrb
pop
data16
sbb
popf
test
repz
scas
and
sub
xor
cmp
mov
xchg
jbe
insl
pop
lea
lahf
sti
sub
es
test
inc
add
fs
fbld
cmpsb
sub
push
mov
sarl
jl
insl
adc
mov
std
icebp
push
push
xor
dec
repnz
xor
pop
outsb
mov
push
sub
lds
cs
sti
fwait
mov
jcxz
mov
dec
mov
dec
loop
inc
jle
insl
outsl
iret
test
sub
fcoms
in
push
daa
mov
mov
pop
test
es
xchg
clc
xlat
les
cs
loop
push
sti
pop
jo
push
mov
outsb
push
mov
movsb
daa
fsubs
jle
xlat
mov
mov
push
gs
mov
rcrl
or
xor
sbb
mov
pop
lods
sbb
or
shlb
jle
aas
mov
xor
mov
ss
mov
sub
push
mov
cmp
stos
push
dec
and
cwtl
jle
aad
cmpsb
es
outsb
mov
sub
enter
cmpsl
mov
adc
aaa
add
sub
push
mov
fstps
repz
movsl
mov
lcall
inc
aam
out
imul
mov
outsl
push
fmul
insl
sbb
xor
xlat
xchg
test
fs
xchg
and
inc
sub
pop
ret
std
movsl
xchg
icebp
out
pop
imull
sti
xlat
xchg
es
push
arpl
mov
insl
bnd
xchg
int3
test
dec
ds
arpl
and
addr16
push
cmp
cmpsl
imul
mov
push
adc
bound
pushf
frstor
mov
cs
lods
adc
bound
pop
jmp
add
imul
fs
add
add
icebp
sahf
stos
mov
or
add
sub
lea
xchg
ja
lret
pop
faddp
mov
addr16
outsl
lahf
mulb
mov
out
sub
xchg
shrl
aad
fcmove
das
xchg
mov
adc
add
fidivl
sbb
add
mov
lods
mov
mov
lcall
sub
push
mov
scas
outsb
ljmp
std
add
test
enter
stos
add
test
xchg
in
scas
outsl
das
imul
push
into
xorb
adc
add
out
std
cmp
push
int
test
sub
cmpsb
cmp
imul
mov
jo
push
scas
dec
cmp
addl
ljmp
into
cmp
push
std
outsb
fs
or
jle
addl
outsb
ljmp
fistpll
popf
outsb
push
add
adc
sbb
xchg
jg
cmp
mov
jecxz
mov
aas
cmovbe
jmp
or
in
mull
pop
ljmp
iret
mov
bt
xor
push
push
lea
call
js
pusha
movl
mov
lea
jae
xchg
not
mov
pusha
mov
mov
inc
jmp
add
insb
jae
jb
insl
jo
add
mov
lea
js
pushf
rep
movzbw
mov
pushf
mov
pushf
pusha
lea
jmp
lea
je
clc
push
and
push
movb
pusha
pushf
lea
jmp
add
push
gs
arpl
insb
gs
add
in
stos
call
in
and
add
inc
gs
jb
jns
imul
add
outsb
push
jb
arpl
jae
outsl
imul
pushl
lea
jae
jmp
add
dec
outsb
je
jb
gs
jo
outsb
inc
add
add
outsb
fs
imul
gs
add
call
pushf
lea
jne
push
stos
pusha
push
lea
jmp
lea
call
jmp
add
dec
outsl
arpl
inc
imul
outsl
inc
imul
add
dec
outsl
jbe
inc
imul
gs
push
inc
gs
je
jo
add
inc
imul
stos
push
mov
pusha
pushf
pushl
jmp
cmc
add
call
add
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
add
aas
cmp
fwait
fwait
xchg
xchg
fwait
cmp
negb
xchg
scas
pop
mov
and
and
push
les
hlt
notb
lods
mov
ljmp
loop
jbe
fistl
add
inc
insb
popa
jae
push
imul
push
pop
push
dec
cmp
jle
jb
loop
loopne
rorb
dec
negb
mov
mov
mov
out
pop
pop
data16
stos
fwait
mov
jnp
pop
push
decl
popf
rorb
rorb
sub
jmp
add
push
gs
gs
jae
inc
inc
add
xorl
push
mov
popf
or
add
gs
gs
jne
arpl
add
inc
gs
popa
insb
gs
gs
outsb
je
imul
sub
adc
lods
push
jnp
stc
add
inc
xor
sarl
or
fwait
mov
pop
dec
hlt
movsl
pop
cmc
loopne
enter
add
popa
jb
push
gs
imul
insb
jae
jb
jo
inc
add
insb
and
jb
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
mov
mov
lea
mov
mov
lea
pushf
mov
pop
mov
pusha
pushf
push
pushl
pushl
ret
sub
sbb
xor
pop
xchg
mov
enter
and
and
pop
lret
stos
adc
dec
outsl
in
lea
xor
cld
ss
loop
xchg
in
lcall
fsubrs
mov
stc
daa
scas
mov
test
xor
push
pop
pusha
jge
xor
sub
add
repnz
jb
add
jle
jg
dec
scas
les
lret
clc
outsl
popf
pop
popf
xchg
or
mov
test
call
jmp
aaa
leave
fs
pop
lret
jnp
add
andb
or
popf
jg
cmp
mov
mov
and
orb
es
lock
out
dec
inc
gs
lock
out
into
pushf
push
jg
dec
scas
xchg
out
or
mov
sbb
into
xchg
pusha
xor
dec
ret
pop
xchg
jg
dec
stos
xchg
lret
in
and
js
in
pop
push
inc
dec
push
push
pusha
push
repnz
addr16
leave
lods
in
mov
jecxz
cmpsl
hlt
lret
shrb
sbb
loopne
test
xchg
scas
fcmove
ror
rcr
movsb
pop
mov
cld
mov
jl
lods
and
int
pop
das
enter
inc
add
push
gs
arpl
jo
jns
add
lea
rol
bswap
jmp
add
insb
adc
push
loopw
mov
popl
xchg
add
mov
faddl
test
pushf
inc
out
in
clc
mul
iret
mov
add
repnz
mov
or
test
fwait
out
inc
or
xchg
sbb
mov
out
jns
fimull
int3
jmp
add
sub
pop
clc
xchg
inc
dec
push
mov
jge
sub
mov
mov
sub
mov
jmp
lahf
pop
scas
cmpsl
xchg
repnz
push
gs
jae
addr16
add
add
jb
jo
outsb
inc
add
add
outsl
outsb
insb
add
lret
or
add
in
leave
mov
mov
iret
ret
add
mov
ret
sub
pop
dec
and
push
adc
shrb
bound
in
xor
push
adc
rol
int3
mov
xchg
adc
push
xor
hlt
jbe
cmpsl
pop
mov
sbbb
jecxz
repnz
add
std
inc
out
arpl
js
iret
jbe
mov
or
xor
jmp
cmp
imulb
pusha
pop
inc
cmp
cmpsl
push
inc
cmp
xorb
mov
test
enter
lcall
xor
test
add
and
cmc
lock
cmp
add
orl
inc
push
leave
dec
push
int3
les
int
aad
mov
jne
loop
or
xor
push
jmp
mov
daa
fistl
in
inc
out
out
jns
je
sarb
cld
mov
cmpsb
or
xor
bound
push
aas
jae
insl
dec
lods
and
sub
mov
insb
adc
pop
jg
xor
sub
mov
sub
lods
jmp
jg
cwtl
mov
mov
lea
out
and
cmp
mov
fs
scas
push
lock
jp
pop
enter
xchg
or
inc
push
xor
mov
mov
mov
std
ret
xlat
inc
aas
inc
xor
sbb
mov
jmp
gs
outsl
insl
insl
popa
outsb
fs
imul
imul
arpl
je
add
push
gs
outsl
arpl
add
fprem1
cmp
pushf
jmp
add
inc
gs
gs
inc
inc
add
add
gs
je
push
imul
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
outsl
imul
jbe
push
je
imul
add
outsl
jae
inc
gs
je
jo
add
jae
outsb
add
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
fs
sub
and
xchg
rol
jb
shl
mov
ror
inc
sbb
clc
mov
clc
push
or
mov
stc
clc
sub
pushf
mov
rep
call
mov
and
add
dec
mov
cmp
add
jo
jmp
dec
cmp
add
add
and
std
and
sub
add
test
psadbw
mov
popa
add
add
dec
lahf
hlt
mov
add
add
lcall
or
add
mov
or
cmp
add
rclb
sub
or
add
mov
mov
sub
sub
add
sbb
hlt
and
dec
cmp
add
lock
inc
push
sahf
dec
cmp
xor
cmp
or
mov
cmp
add
jo
mov
cmp
add
jo
lahf
out
jge
cmp
push
hlt
repnz
or
add
sub
push
sti
xchg
dec
cmp
add
lock
stc
xor
nop
add
jo
lods
repnz
sub
or
add
lock
lcall
add
popf
outsb
sub
or
add
xor
dec
cmp
add
jo
stos
stc
andl
and
push
sub
dec
lods
add
push
jg
lcall
dec
cmp
add
lock
cmc
jo
dec
cmp
add
fcomi
scas
cli
sub
dec
cmp
push
add
push
shrl
subb
cmp
add
mov
xor
sub
or
add
jo
mov
out
dec
cmp
add
adc
clc
rep
sub
or
add
lock
dec
cmp
add
add
xchg
cmp
add
jo
inc
imulb
add
add
lret
andl
lods
std
out
dec
cmp
add
mov
cltd
repz
add
dec
mov
jle
mov
xlat
cmpsb
push
jns
mov
enter
cmpsb
insb
repz
addr16
fldenv
call
outsb
dec
leave
xlat
dec
nop
test
cs
sbb
jne
pop
xor
sub
in
out
push
call
jecxz
in
test
push
mov
and
jge
jb
add
aas
icebp
jno
inc
mov
ret
inc
adc
bound
cmpsl
stos
fistl
push
sbb
in
mov
push
mov
mov
scas
std
sbb
lea
jae
stc
jmp
pushf
mov
mov
push
push
mov
movw
lea
call
call
cmc
stc
cmp
push
mov
shl
sbb
stc
mov
pusha
pushf
cmc
pushl
mov
test
stc
mov
clc
movb
bt
bt
mov
bt
clc
pusha
mov
stc
pushf
stc
mov
movb
cmp
bt
test
jmp
add
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
outsb
je
outsl
insb
push
gs
imul
and
jne
pusha
pushf
movb
pushf
lea
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
call
mov
not
rcr
test
pusha
mov
add
cmc
dec
or
sub
mov
mov
not
lods
jmp
add
inc
jb
popa
je
inc
outsl
outsb
je
add
clc
pusha
xor
push
mov
movb
lea
call
cmp
pusha
jmp
add
arpl
gs
arpl
je
mov
dec
inc
call
pop
rclb
pop
popl
insl
insl
movsl
data16
sbb
xor
outsb
pop
pop
dec
repnz
or
pop
stc
dec
sbb
enter
sub
xchg
pushf
dec
shrl
bound
addr16
ret
pusha
lea
call
pushf
pushl
call
push
call
mov
stc
cmp
add
pushf
pusha
pusha
lea
jne
pushf
not
push
pushfw
popw
setg
setae
push
mov
pusha
jmp
add
push
popa
imul
insb
gs
bound
arpl
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
jge
inc
out
ja
std
std
jge
add
fisubrs
repz
push
pop
sub
rolb
or
inc
jmp
pop
and
or
pop
lea
cmp
adc
mov
pushf
mov
mov
pushl
popl
mov
jmp
add
inc
jb
popa
je
push
imul
inc
add
in
out
call
xor
and
jne
jmp
push
call
movswl
aad
pmulhw
add
and
add
push
pushf
movb
lea
jne
pusha
lea
call
pushf
pusha
mov
pushl
lea
jmp
add
dec
jae
push
jo
popa
inc
add
lret
cmp
pushl
call
cmc
test
pushl
lea
je
clc
mov
push
add
pushf
pushf
clc
stc
add
pushf
movb
pusha
lea
jmp
add
push
popa
je
insb
je
push
call
add
inc
gs
js
je
outsl
fs
jb
arpl
jae
pushf
xor
lea
jmp
add
push
imul
jb
je
arpl
inc
pushf
ror
pushf
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
push
call
and
jns
jae
dec
inc
inc
xor
dec
add
mov
repnz
icebp
call
pop
jecxz
ror
mov
pop
pop
stos
cmp
xor
pusha
cs
test
jns
sbb
xor
jne
push
cmp
ss
divb
shr
gs
and
jl
mov
mov
mov
aad
into
cmpsb
push
aas
xor
cwtl
push
or
sbb
sub
mov
sub
or
lahf
addr16
jp
mov
add
dec
dec
roll
cs
jbe
mul
loope
loope
stos
lahf
lods
pop
add
cmpsb
fstpt
mov
aad
dec
dec
call
add
movsb
mov
or
test
popf
mov
mov
imul
push
mov
mov
in
sub
lcall
xor
fmull
js
mov
out
jo
push
pop
pusha
or
adc
sbb
inc
outsl
movsb
popf
iret
repz
xchg
in
hlt
jl
ja
push
jo
sub
adc
clc
mov
bnd
xchg
imul
mov
idivl
and
sbb
mov
ret
leave
ret
out
hlt
mov
mov
sbb
push
pop
movsb
lods
mov
addl
and
std
idivl
stos
movsb
and
mov
dec
inc
cmp
sub
je
ret
xchg
jnp
mov
aam
iret
xor
cwtl
adc
psllq
cmpsl
sbb
fwait
push
xchg
inc
mov
mov
adc
pop
inc
fwait
push
aaa
xor
xor
xor
lret
xor
dec
aas
das
and
fdivl
shll
and
mov
pop
int3
lcall
sub
inc
lock
mov
dec
and
mov
add
push
or
add
mov
sti
dec
pop
repz
inc
scas
in
stos
mov
add
notb
pop
pop
adc
sahf
in
xor
into
adc
sub
inc
in
faddl
add
je
je
arpl
bound
arpl
pushf
not
mov
lea
jmp
push
pushf
mov
inc
not
ror
dec
stc
xor
clc
call
add
dec
jo
outsb
push
inc
dec
popa
outsb
popa
addr16
add
in
call
repz
sti
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
aaa
ds
cmp
fdivl
jbe
loopne
dec
inc
or
lret
sub
sbb
jge
pop
lahf
dec
loope
jb
lea
sub
sub
cmc
sbb
icebp
pop
xchg
mov
adc
jnp
div
xchg
bound
mov
and
fstps
mov
xor
jae
dec
mov
flds
pushf
pop
xlat
or
in
movsl
dec
sti
jne
sbb
cli
out
fadd
jg
call
mov
mov
nop
outsb
xchg
add
mov
xchg
call
inc
xor
push
cli
fmull
add
xorl
inc
add
jmp
aad
int3
dec
push
dec
mov
fcompp
shl
loop
xchg
cmp
cmp
sahf
scas
mov
push
lds
mov
mov
pop
pop
std
lods
mov
aas
add
mov
xchg
xchg
or
xlat
add
mov
xchg
cmc
adc
addr16
pushf
and
adc
cld
pop
ja
std
jmp
pop
jo
cmc
sub
mov
fcmovnbe
jg
out
push
xor
and
sub
push
dec
xchg
sbb
loop
out
fcom
jle
push
shll
add
sbb
jbe
or
pop
cmp
loop
jp
cs
sub
fwait
test
test
call
imul
push
push
mul
shlb
fstl
inc
mov
clc
test
mov
push
ret
dec
leave
in
mov
div
out
hlt
in
popa
fxch
sub
rorl
hlt
test
mov
pop
add
out
add
sti
incb
add
inc
imul
je
outsl
outsb
inc
add
sbb
add
clc
pusha
pusha
cmp
jmp
shr
bt
add
add
cmc
xor
movb
mov
stos
call
push
call
cltd
pop
xor
jmp
add
push
gs
jb
popa
je
dec
gs
js
add
pop
xchg
sub
mov
inc
fisubrs
mov
cli
lret
sub
push
addb
push
xor
fcoml
pop
mov
inc
out
iret
cmp
out
push
xchg
mov
pop
inc
shrb
inc
addr16
mov
lcall
daa
or
xchg
les
addr16
popf
daa
mov
push
rcll
adc
and
loope
bound
xor
imul
add
les
inc
mov
stos
shr
fsubrs
cs
inc
push
mov
add
cmp
mov
xchg
dec
sub
pop
roll
pop
sbb
push
pop
lock
lret
loop
dec
xor
fldl
out
insl
imul
inc
pop
jle
std
scas
pusha
mov
push
aad
inc
es
mov
xor
dec
call
mov
js
mov
test
dec
pop
fmulp
shrl
xor
outsb
mov
shl
outsl
push
and
inc
inc
xlat
or
jne
insl
divb
std
sbb
insb
repz
insl
inc
sub
sub
sbb
cmp
add
ds
mov
es
mov
lods
addr16
cmpsl
es
xor
push
sub
dec
jge
ds
xor
addr16
jmp
stos
mov
jge
pop
insl
lcall
mov
cmp
inc
sub
pop
cli
popf
inc
pop
pop
mov
outsb
lea
sti
dec
aas
pop
lods
or
mov
xchg
leave
jae
je
repz
sub
hlt
sbb
and
xor
fisubrs
mov
fpatan
push
sub
or
push
call
out
mov
jle
call
jg
pop
lea
cmp
ret
shrd
in
sbb
and
stc
xor
jle
sarb
push
outsb
daa
xchg
xor
lret
jle
push
es
cmp
gs
adc
int3
cmpsl
push
pop
jle
dec
xor
maskmovq
notl
adc
inc
and
sub
jmp
jecxz
fstps
sbb
popl
inc
sbb
scas
pop
dec
neg
pop
sbb
mov
sub
scas
std
in
and
inc
add
xcrypt-ecb
cmpsl
iret
std
cs
fstp
and
sahf
dec
in
adc
pop
fwait
lahf
arpl
cmpsl
sbb
test
ss
or
cmp
lds
outsl
fucom
xlat
lods
out
cmpsl
adc
aad
sbb
push
in
sbb
in
jo
xchg
cmp
dec
jle
lea
push
cmc
sbb
call
push
js
insl
dec
outsb
fs
icebp
push
cmp
aad
xor
mov
out
inc
shlb
scas
and
in
icebp
sub
bound
outsl
xor
push
movsl
cmpsl
mov
out
sbb
sub
out
cmp
push
call
push
cmc
scas
std
mov
icebp
stc
dec
jne
fnstcw
iret
out
cmpsl
pop
lea
je
pop
lock
push
arpl
out
dec
sbb
std
movsl
cmc
and
push
xor
jle
sbb
mov
xchg
insl
and
mov
xor
cmp
mov
sbb
out
mov
std
negb
pop
iret
dec
mov
mov
xchg
pop
fcoml
mov
jbe
mov
mov
lret
xor
mov
jle
mov
shlb
sahf
push
pop
in
sbbl
ficomps
aam
sub
in
push
or
insl
inc
int3
dec
pop
leave
dec
mov
sub
fdiv
ss
dec
mov
sarl
scas
cs
cltd
push
jp
ficoml
rorb
mov
out
movsb
daa
xlat
arpl
sbb
pusha
push
jne
push
out
outsb
iret
insb
mov
shl
mov
les
mov
dec
cmp
mov
adc
lods
or
insl
xlat
jecxz
mov
cmp
add
addb
inc
popf
jbe
lcall
fwait
inc
mov
sbb
outsb
pop
mov
jge
call
add
fiadds
add
adc
scas
and
cmp
out
sahf
movsl
scas
cwtl
pushf
dec
xor
mov
sub
stos
shlb
ss
hlt
dec
in
outsl
fidivl
inc
cmpsl
mov
pushf
push
mov
inc
pop
push
inc
insl
xchg
xchg
jle
add
icebp
daa
movsl
push
lods
cmp
mov
mov
addr16
push
outsb
xor
hlt
dec
xchg
test
push
xchg
test
rclb
push
popf
mov
inc
iret
xlat
fistpll
cmp
test
stos
loopew
sub
push
das
lret
adc
je
push
xor
in
add
mov
out
out
mov
push
sub
inc
movsb
inc
push
cmpl
add
cld
daa
jbe
popf
iret
cltd
ret
test
gs
daa
rcrl
lret
or
lods
xchg
daa
popf
jle
xor
sub
and
std
addr16
pop
push
pop
lods
push
pop
xlat
or
std
insl
mov
es
jge
outsb
pusha
fs
xchg
push
cmp
mov
lods
enter
jecxz
lds
push
int
lods
outsb
sub
push
mov
or
in
popf
mov
sahf
data16
adc
es
push
pop
pop
mov
push
les
xor
adc
fldl
imulb
mov
into
xor
sub
adc
dec
and
inc
loopne
mov
sbb
out
outsl
push
enter
in
push
imul
and
scas
cs
mov
clc
jbe
addr16
or
sti
pop
lret
iret
pop
sbb
arpl
loop
dec
pop
cmp
aaa
xor
outsb
loope
aam
lds
xor
addr16
ret
xor
pop
sub
jbe
jne
nop
iret
fdivr
push
add
addr16
dec
adc
in
ja
mov
outsb
xor
push
jmp
sub
lret
mov
sub
jb
test
ficomps
sub
mov
orl
daa
stos
mov
inc
inc
fsubrs
or
xchg
adc
xor
stos
pop
dec
sar
bound
mov
inc
pop
pop
orb
and
jns
shl
xchg
popf
pop
pop
sub
ficoml
pop
mov
xchg
cmp
sti
inc
shlb
test
movsb
mov
int3
fxch
jae
cmp
fcomps
addb
push
cli
into
ljmp
pop
mov
gs
leave
cli
sub
test
aas
rcrb
sub
sahf
pop
jo
adc
mov
jo
xchg
rolb
into
outsb
mov
sub
cltd
popf
xor
sub
fsubrs
ljmp
adc
jb
mov
popa
mov
leave
or
das
lock
enter
mov
xchg
pop
lret
sbb
fidivrl
fsubrs
les
ss
inc
add
addr16
jle
scas
xchg
aaa
xchg
push
fcomp
push
daa
cmp
aam
adcb
int
out
sbb
fwait
popf
outsb
inc
push
dec
insl
mov
aad
jle
int3
adcl
daa
dec
or
adc
dec
mov
sti
mov
or
pop
cmp
or
push
sbbl
push
sbb
test
pop
push
pop
das
mov
add
scas
push
pop
lock
pop
sub
lcall
and
fstl
cmp
pop
mov
popa
mov
inc
cmp
popf
xorl
dec
mov
ficoml
insl
bound
fdivs
jae
push
xlat
mov
adc
pop
es
test
dec
lcall
mov
xor
insl
scas
jmp
std
daa
enter
movsb
push
gs
cmpsb
fcoml
push
addr16
pushf
jo
fadds
in
sahf
sub
and
pop
sar
test
and
mov
stos
push
scas
mov
daa
outsb
jns
xchg
fs
mov
cmp
push
jl
inc
sbbb
ret
insb
jbe
fsubrs
loope
jp
insl
cwtl
aad
testb
repz
sahf
adc
pop
popf
addr16
in
push
insl
and
sti
add
out
jmp
das
jp,pn
insl
xor
cmp
cld
mov
xor
inc
inc
mov
addr16
enter
mov
ja
jnp
pop
xlat
sub
rorb
fisttpll
out
and
dec
mov
jge
in
fimuls
out
push
ds
pop
and
divb
test
xchg
inc
jbe
add
test
mov
dec
push
push
cli
out
fst
enter
mov
int3
mov
jae
jne
push
pop
pushf
sbb
sarl
jp
cmp
popf
or
ds
icebp
test
jle
mov
add
fmull
pop
cmp
mov
insl
aaa
push
test
inc
jg
scas
jp
insl
xchg
mov
aad
mov
icebp
js
sub
push
addr16
aad
icebp
add
loop
in
cmc
dec
lds
cs
pop
pop
mov
or
ljmp
pop
push
sarl
andl
les
sub
dec
insl
cmc
ret
mov
aas
sub
sub
js
inc
mov
adc
inc
shll
mov
into
add
imul
sti
movsl
xor
push
xchg
cmp
lcall
out
out
jp
stc
cmp
bound
jns
test
and
cmp
aas
jle
addr16
mov
fs
or
mov
es
cmpb
inc
iret
mov
jle
popf
mov
sbb
mov
pop
dec
push
add
shlb
or
push
gs
scas
mov
lods
into
pop
mov
pop
in
xorb
jle
enter
sub
addb
mov
or
stc
ds
addr16
int
sub
pop
push
mov
out
pop
jp
jbe
es
ficoms
jmp
into
sbb
jle
xchg
mov
iret
mov
pop
mov
pop
inc
test
push
inc
and
loopne
and
popf
pop
or
push
pop
pop
stos
jmp
mov
push
cmpsl
sbb
rcrb
add
sbb
aas
js
sub
pop
sbb
popf
scas
mov
or
and
adc
xchg
dec
mov
lcall
clc
sub
pop
xor
lret
adc
pop
pop
mov
inc
sub
sub
cwtl
jns
movsb
lock
push
mov
fldl
cmc
mov
gs
mov
sub
add
fs
dec
test
lods
popf
loop
xor
mov
pop
mov
add
cmp
xchg
or
mov
inc
fadd
mov
xchg
pop
add
rcll
into
movsb
push
outsb
xchg
sbb
mov
pop
das
adc
scas
mov
jno
mov
jo
fnstsw
mov
das
mov
repz
mov
pop
xchg
push
out
sti
mov
sbb
mov
push
lcall
push
mov
mov
popf
addr16
adc
cmpsl
xchg
std
js
ljmp
lret
clc
dec
xchg
imulb
xor
fsubrl
mov
fs
cs
xchg
imul
jecxz
mov
push
dec
mov
lret
pop
jo
fs
cmpsl
ret
addr16
fs
aad
mov
sub
pop
dec
xor
or
fs
incl
inc
popf
push
popa
mov
pop
enter
shlb
sahf
test
and
mov
aad
lds
and
mov
sbb
push
mov
es
aas
test
int
add
pop
mov
pop
lds
popf
lcall
inc
fs
mov
xchg
cmpsl
or
xchg
popf
cmp
pop
dec
mov
adc
test
imulb
xchg
xchg
cmp
pop
sbb
ret
repz
movsb
jne
sub
popa
mov
dec
enter
inc
xorb
pop
repz
rorb
jle
popf
cli
test
cmpb
js
sub
jp
js
mov
ret
fmuls
movsl
inc
pusha
mov
pop
sbbl
ficoms
push
fnsave
jmp
add
test
jbe
aam
pop
mov
outsb
pusha
xchg
push
push
ljmp
stc
mov
sbb
add
lods
xchg
xchg
dec
pop
dec
shl
lea
jmp
test
jg
and
add
jge
mov
sarl
mov
pmuludq
push
ljmp
xchg
add
inc
jp
and
or
aad
xchg
push
sbbl
cmp
shl
notb
ret
add
pop
test
cli
dec
sahf
xchg
in
lcall
ljmp
lcall
and
pushf
push
dec
cmpsl
movsb
pop
inc
cmp
lret
in
vldmxcsr
mov
cld
push
pop
pop
xor
loop
push
mov
push
jns
fs
imul
mov
jb
les
jnp
push
pop
xchg
repz
movsb
dec
out
arpl
jg
rcrl
adcl
inc
in
es
sbb
mov
std
and
ds
repnz
pop
popf
in
pop
loope
sbb
sub
add
repz
stos
xor
pop
scas
mov
mov
push
int3
mov
nop
dec
xorps
or
or
sub
mov
jb
cmpsb
loope
xor
mov
jle
jns
push
and
mov
fnsave
pop
in
mov
add
pop
add
dec
push
test
int3
jbe
cmp
mov
push
repnz
scas
pop
adc
push
mov
xchg
je
pop
xchg
inc
or
sub
lcall
xorb
in
movsl
fnsave
arpl
outsb
dec
pop
rorl
dec
mov
out
ds
sbb
in
test
dec
inc
xor
or
dec
add
xchg
fs
pop
pop
adc
rclb
test
addr16
stos
dec
pop
inc
mov
in
fnstsw
mov
pop
push
fisttpll
lret
pop
movsl
pop
insl
and
xchg
pop
pop
out
sahf
leave
inc
mov
jb
in
sbb
adc
push
aad
ljmp
cmp
sbb
jmp
cltd
pushf
loope
lret
fdiv
loopne
mov
inc
mov
inc
mov
loop
push
sub
insb
in
push
or
dec
lret
pop
rcr
or
fcomp
xchg
outsb
std
cmp
pop
out
pop
mov
jne
mov
push
sbb
or
cltd
roll
imul
inc
shrb
jb
mov
jnp
xor
fs
add
dec
iret
fwait
pop
mov
and
mov
cmpsl
mov
xchg
push
inc
scas
lret
mov
movsl
pop
aas
sbb
nop
mov
adc
xchg
xor
add
in
int
xorl
push
mov
mov
inc
mov
xor
dec
insl
aam
xchg
push
les
cmp
inc
dec
xchg
cld
mov
imul
mov
cmc
cmpsl
push
lcall
cmpl
dec
ss
inc
inc
jns
shll
sbb
filds
mov
lret
and
call
pop
jp
es
push
mov
dec
jb
inc
lods
pop
pop
fcompl
sbb
lcall
push
fsubrp
cli
mov
pop
sbb
pop
inc
mov
mov
sub
or
sbb
loop
cli
cmpsb
outsb
inc
jle
dec
push
fwait
daa
pop
dec
sub
and
in
leave
xor
dec
aas
popa
pop
lret
fmull
pop
and
pop
lods
test
enter
mov
jns
push
mov
jb
pop
push
mov
les
mov
filds
xor
pop
movsl
out
sahf
lds
ja
fildll
mov
imul
mov
pop
pop
push
scas
adc
jp
add
inc
sahf
adc
and
ja
nop
cmp
pop
push
mov
mov
orb
lock
dec
cmp
test
pop
push
ss
push
xchg
stc
pop
insb
pop
jle
xchg
pop
push
test
stos
pop
xor
cmp
mov
mov
pop
setge
fdivs
out
mov
pop
pop
outsb
mov
push
in
testl
mov
cmp
mov
fcomps
shll
movsl
pop
push
xor
dec
push
out
movsb
mov
pop
mov
inc
jmp
and
jae
add
jno
dec
push
push
testl
xlat
sahf
lcall
ficomps
mov
jne
test
out
lds
sub
xchg
stc
loope
insl
adc
mov
cli
lret
inc
and
jnp
mov
call
mov
fistps
pop
loop
push
idivb
in
adc
sub
mov
xor
cltd
outsb
mov
sub
clc
imul
sbb
je
pop
xchg
arpl
or
std
fidivrs
icebp
pop
fsub
pushf
jecxz
cli
xchg
xchg
jmp
and
roll
add
xor
xor
incb
pop
outsb
in
and
sub
mov
mov
mov
xchg
test
mov
pop
rcrb
punpckldq
loopne
and
hlt
lods
and
fdivr
push
das
out
mov
dec
sbb
js
pop
xor
in
mov
xchg
and
test
ljmp
ss
loop
dec
dec
pop
xchg
jecxz
imul
push
das
cld
push
pop
push
mov
in
icebp
test
xor
cld
jae
test
push
and
stos
sahf
outsl
popf
push
cmp
sbbl
cltd
stos
pop
and
add
mov
pop
mov
clc
lret
sarl
popa
mov
pop
ret
xor
mov
int3
pop
fdivrs
or
pop
mov
les
testl
aas
out
fcomp
pop
inc
test
mov
inc
gs
adc
sbb
cmpsb
adc
mov
push
es
push
or
adc
dec
jns
mov
je
outsb
shll
pop
jbe
or
pop
push
loope
fldenv
push
popa
in
fldl
pop
add
mov
lods
dec
shr
mov
adc
mov
dec
or
cmpsb
shlb
push
ljmp
lret
sub
mov
mov
lret
clc
pop
cmp
iret
inc
imul
mov
push
xchg
sahf
daa
and
test
jmp
pop
insb
sub
call
sbb
cmp
or
adc
push
fwait
xchg
leave
fcomps
push
cmp
jo
fnstsw
mov
outsb
je
inc
jb
mov
mov
or
cwtl
pop
inc
push
cvttps2pi
pop
repnz
shrb
pop
rcrb
dec
mov
cwtl
sub
xor
lret
pop
cli
loop
ret
repnz
dec
mov
push
and
sub
pushf
pop
cmpsb
add
dec
lahf
or
lods
scas
gs
mov
push
shll
imul
iret
mov
fstl
mov
inc
loopne
cmp
pop
xor
pop
in
jecxz
es
add
mov
scas
insl
aam
repnz
xchg
test
xchg
jbe
jp
pop
ror
repz
scas
adc
test
mov
insb
jo
addl
in
pmaddwd
movsb
pop
push
lahf
pop
mov
pop
push
pusha
lret
inc
and
sahf
cmpb
mov
inc
and
mov
add
sbb
sbb
aam
pop
lret
int
pop
dec
fxch
fidivrl
xchg
aad
cmp
sarb
and
dec
cmp
pop
xchg
rorb
pop
pop
stos
in
jbe
ljmp
jl
jmp
dec
add
pop
jo
out
lahf
mov
scas
mov
adc
clc
dec
pop
aaa
loop
ss
lret
sbb
sbb
pop
outsl
push
pop
mov
pop
push
push
jae
mov
fwait
pop
lock
insb
popf
sub
scas
or
loopne
and
mov
and
xor
adc
mov
mov
fnsave
insl
sub
mov
sub
mov
lahf
mov
mov
inc
push
mov
fildll
xchg
mov
arpl
push
jecxz
es
into
test
adc
sbb
loopne
inc
loop
outsb
add
lret
inc
dec
sbb
loopne
jl
jg
data16
cld
cmp
mov
pop
adc
frstor
fwait
sbb
pop
push
int
pop
sbb
cmp
pop
bound
mov
cmp
fwait
outsl
leave
in
or
pop
pop
fcomip
lret
push
loopne
mov
xor
xor
push
outsl
int
or
push
in
ja
test
mov
iret
pop
les
dec
imulb
pushf
pop
dec
outsb
pop
cmc
scas
in
xchg
cmp
add
sub
movsl
pop
mov
jae
mov
xchg
lcall
sub
pop
cld
aas
adc
pop
in
idiv
into
rol
outsb
int
inc
push
test
pop
push
pusha
xchg
mov
and
pop
push
cmp
movsl
lods
fstpl
mov
cli
pop
int
jp
mov
out
adc
popa
enter
lcall
pop
nop
cmpsb
les
dec
and
std
addr16
outsb
xchg
dec
mov
fcmovbe
mov
fmull
cmp
movsl
pop
test
ljmp
pop
shr
std
adc
popf
xor
scas
mov
pop
rcrl
bound
push
pop
cmp
test
inc
and
pop
mov
enter
push
xchg
push
data16
inc
leave
ds
pop
pushf
jnp
xor
sbb
mov
jecxz
inc
adc
pop
aad
sbb
add
xchg
or
add
sti
push
das
fucomp
dec
jge
clc
subl
pop
push
pop
cmpsb
pop
mov
sbb
test
add
ljmp
xchg
pop
subps
jp
jl
pop
sub
ss
mov
push
insl
ficompl
pop
pop
repnz
mov
jno
add
adc
add
or
dec
xor
pop
inc
insl
call
out
mov
or
dec
push
xor
lcall
clc
mov
sti
lods
or
mov
enter
enter
pop
push
das
test
ss
fs
xor
mov
dec
dec
fstpl
sti
and
dec
cmp
sub
insl
aad
sub
inc
ror
lds
cltd
push
popf
mov
or
in
jo
cmp
js
mov
mov
dec
jbe
call
pop
sub
hlt
pop
movsb
jno
mov
add
adcl
gs
adc
and
pop
and
mov
jg
sub
pop
leave
push
add
sahf
gs
mov
pop
rclb
pop
xor
jno
inc
in
push
push
loopne
mov
mov
add
sbb
cmp
push
pop
push
mov
jp
pop
cmc
pop
pop
push
mov
pop
and
test
push
pop
rcrb
inc
fadd
lcall
in
push
hlt
and
adcl
out
lcall
and
mov
mov
fisttpl
repnz
mov
fildl
mov
mov
mov
pop
pop
sbb
paddsw
sub
mov
sbb
repnz
push
pop
out
lahf
mov
dec
push
mov
movsb
and
cli
fldl
stos
rcr
xor
push
inc
cs
js
push
mov
sub
leave
sub
pop
pop
shl
cmp
pop
cmp
cmpsb
ficomps
mov
inc
int
jb
into
lods
sub
jo
dec
push
test
pop
xor
je
add
scas
push
lds
out
test
movsb
dec
pusha
shrb
xchg
pop
xor
xchg
pop
sub
test
pop
sbb
push
flds
lods
push
mov
push
pop
xor
sti
xchg
adc
mov
test
scas
fwait
addr16
into
aam
pop
xor
outsl
sub
cs
jle
adcb
shlb
fwait
pop
mov
xor
or
mov
rorl
push
or
mov
pop
or
xor
pop
movsb
sarl
push
sbb
pop
mov
mov
or
push
jp
pop
es
dec
fsubrl
enter
aaa
repz
mov
pop
mov
dec
data16
inc
shll
call
lahf
push
xor
or
mov
mov
mov
in
lcall
sub
adc
push
ss
pop
cmc
mov
imul
arpl
push
lods
rcl
mov
stc
cli
insl
movb
push
xchg
setbe
fstl
mov
xor
pop
pop
and
mov
daa
pop
or
ret
cmp
in
pop
in
hlt
push
adc
in
sahf
je
cmp
inc
xor
dec
ds
mov
sbbb
mov
stos
pop
mov
xchg
insb
sti
xchg
jp
jb
mov
mov
gs
addb
jno
pop
in
jno
xchg
jecxz
pop
dec
aad
inc
pop
subb
aas
lods
lahf
mov
mov
mov
pop
call
fsubp
aam
pop
fldcw
test
pop
mov
ret
das
int
xchg
add
dec
lea
mov
jbe
stos
out
dec
pop
push
mov
mov
mov
idiv
leave
xor
mov
les
add
sti
loopne
jecxz
push
add
cmc
pop
sahf
inc
pop
push
dec
adc
push
fiadds
jmp
lods
hlt
sub
sti
jge
jno
pop
mov
cmc
jae
in
in
pop
add
adc
fldenv
sbb
pop
loopne
scas
mov
lock
lods
push
stos
jns
xchg
and
inc
out
clc
mov
xchg
outsb
adc
adc
adcb
popf
add
inc
imul
lcall
fwait
pusha
xchg
jecxz
shll
add
push
clc
and
push
or
and
movsb
xchg
xchg
mov
push
dec
jne
sbb
stos
mov
pop
push
gs
push
or
pop
and
sub
xlat
pop
cmp
cmp
mov
jbe
sti
push
insl
out
movsb
pop
repnz
and
dec
pop
outsl
pop
inc
mov
push
pop
xor
leave
scas
in
sub
into
pop
in
ret
fwait
mov
mov
mov
aaa
lods
mov
or
inc
pop
lds
add
movsl
icebp
lcall
cmp
xchg
dec
btc
dec
lret
xchg
pop
mov
cltd
mov
pop
dec
inc
push
mov
xchg
nop
frstor
inc
adc
push
cmpsb
stos
add
or
mov
cmp
idivl
dec
dec
and
icebp
bnd
lcall
loopne
mov
fs
clc
enter
xor
mov
js
loopne
pop
test
test
pop
and
sar
push
jmp
xor
outsb
pop
sbb
mov
pop
push
pop
push
out
cmp
sub
jge
dec
mov
call
roll
pop
jle
sbb
or
call
push
pusha
xchg
jecxz
cmp
test
inc
mov
and
lods
scas
sbb
enter
sub
loop
xorb
xlat
repnz
pusha
lret
xor
push
push
pop
jae
mov
out
mov
outsb
mov
cmc
lock
mov
xchg
int
std
pop
inc
mov
mov
jnp
add
cmpsb
addr16
pop
jne
neg
jp
dec
lds
mov
fnstsw
adc
pop
cmpsb
mov
testb
pop
mov
mov
mov
jp
adc
cld
or
pop
fwait
adc
adc
je
pop
pop
shll
test
ret
gs
and
cmp
loope
dec
sub
pop
sub
dec
dec
sbb
lret
xchg
or
pop
pop
pop
shll
inc
mov
jle
jp
add
and
push
dec
es
stos
push
repnz
dec
pop
jbe
inc
dec
mov
xchg
scas
mov
mov
loopne
dec
jle
fsubp
notb
mov
pop
shll
jae
outsl
pop
xchg
outsb
or
lcall
inc
push
or
mov
sbb
and
and
nop
adcb
adc
pop
int3
mov
in
mov
in
jae
fwait
dec
dec
inc
mov
inc
sahf
jns
arpl
mov
xchg
add
gs
test
hlt
aad
mov
loopne
jg
pop
in
clc
jl
xchg
push
sub
rol
in
and
sahf
inc
int
fucompp
ljmp
jne
test
mov
inc
pop
and
das
xchg
pop
xchg
mov
jo
push
pop
bnd
insb
mov
mov
cmpb
lret
fcomps
divl
sub
stos
ja
repnz
ror
ret
outsl
pop
lods
fs
test
pop
mov
jne
dec
sub
les
push
call
test
gs
inc
xor
inc
lods
pop
movsl
rorl
pop
decb
add
jb
lods
int3
xchg
pop
add
dec
cmp
push
pop
mov
push
imull
pusha
sub
mov
mov
or
in
push
lret
pop
mov
cmp
pushf
sbb
divl
cltd
test
shl
mov
or
fwait
shr
jb
push
sub
leave
mov
mov
xchg
pop
inc
andb
push
fs
sub
dec
pop
lcall
or
push
push
pop
pop
xorl
add
jp
dec
pop
cmp
inc
insl
lret
sub
mov
pop
pop
adc
dec
mov
inc
inc
fsubrs
jns
push
jle
push
jle
pop
jns
xchg
lahf
fists
or
fldl
xlat
ljmp
out
aad
gs
adc
mov
pop
jbe
and
sahf
jo
outsb
hlt
pop
jae
das
sub
cmp
imul
pop
testl
dec
inc
pop
xchg
mov
iret
or
dec
fs
add
enter
popf
lods
cmp
pop
inc
mov
mov
xchg
jae
xchg
sub
pop
aam
sub
jecxz
lea
push
sub
xor
cwtl
popf
mov
lret
push
pop
pop
mov
imul
pop
dec
cmp
mov
xor
sbb
cmp
fnstsw
lds
ss
push
and
lods
mov
cs
lcall
js
sarb
divps
imul
xlat
les
add
repz
mov
jnp
xchg
into
mov
or
add
leave
test
xor
adc
mov
jmp
push
push
pop
clc
inc
dec
add
push
in
pop
repnz
and
jb
mov
dec
push
stc
not
or
in
adc
outsb
xchg
leave
cmp
push
ds
hlt
je
add
fimuls
stc
pop
in
out
adc
jecxz
inc
mov
dec
cmpsb
or
push
add
mov
jbe
cmpsb
xchg
in
inc
and
push
xor
xor
sub
mov
sub
fists
jmp
fisubs
test
push
pop
add
inc
aas
mov
lret
les
push
sbb
xchg
inc
add
test
pop
sub
dec
mov
and
ljmp
dec
xor
jl
sarl
mov
inc
dec
rcrl
ds
cwtl
repnz
fcomps
arpl
stc
adc
xor
in
icebp
stos
mov
insl
jo
mov
and
xchg
jb
lret
jmp
jae
ret
inc
negl
xor
or
outsb
iret
pop
cli
cli
insl
inc
rolb
lcall
xor
sbb
xchg
lret
dec
jb
sbb
inc
push
sbb
ret
fistpll
lods
icebp
pop
sbb
shll
mov
push
inc
es
push
or
dec
aas
jns
pop
inc
push
lock
clc
outsb
popf
pop
mov
insl
in
ret
scas
dec
pop
test
int3
inc
ja
sub
ds
jge
nop
add
mov
jl
jg
fwait
dec
dec
and
cld
stos
push
data16
cmp
pop
mov
cs
sti
roll
or
cmp
je
hlt
mov
sahf
cmc
jl
jnp
push
iret
pop
pop
jl
or
mov
push
je
movsl
cmp
pop
jns
mov
outsb
push
mov
mov
dec
jne
pop
cwtl
dec
sbb
je
mov
pop
imul
cmp
fdiv
jno
and
jne
sti
adc
pop
testb
jmp
dec
jge
push
outsb
sub
xchg
pop
fstl
cld
xchg
stos
addb
lret
rolb
push
mov
add
fsubl
push
cmp
or
cmp
push
scas
or
loope
xor
mov
jle
jnp
mov
fdivrs
popf
cmp
sub
fildl
sbbb
insl
xor
out
rorb
and
lods
sub
dec
mov
mov
sub
pop
adc
popf
sbb
mov
nop
pop
pusha
push
pop
stos
mov
imul
mov
cltd
jl
fcoms
aad
int3
xchg
popa
pop
mov
orb
fimuls
ret
dec
dec
xchg
inc
cltd
fcmovnu
iret
ss
or
nop
xor
sbbl
adc
ret
push
shrl
and
pop
cli
repnz
mov
mov
scas
mov
pop
sub
stos
inc
gs
clc
inc
pop
fisubrs
inc
jge
inc
xchg
repz
xchg
adc
or
inc
add
lock
lahf
pop
lods
or
mov
leave
sub
mov
pop
push
lea
dec
imul
lret
das
adc
cmp
cld
rorb
in
push
lcall
jnp
adc
lock
push
imul
aaa
mov
popa
and
dec
add
popf
push
fidivrl
repnz
mov
orl
pop
scas
inc
inc
sbb
int
lret
lds
outsb
fldl
sub
dec
xchg
mov
pop
pop
sub
mov
add
hlt
pop
dec
jae
add
pop
push
pop
mov
jo
mov
loop
int
and
cli
pop
addr16
aas
pop
pop
bound
push
mov
push
pusha
mov
inc
pop
pop
in
mov
ret
mov
aam
mov
gs
push
sub
cs
addl
loope
pop
fcomip
pop
cld
out
mov
pop
std
push
push
push
sbb
inc
pop
aas
cmp
in
jns
jp
pop
fwait
pusha
mov
pop
insl
xchg
xchg
test
hlt
xacquire
sub
fisttpll
cmp
mov
fscale
lret
cmp
orb
cmpsb
nop
pop
lods
out
aam
sbb
inc
pop
or
adc
movsl
xchg
lock
or
pushf
inc
mov
xchg
iret
in
adc
and
mov
cmc
pop
shrb
mov
scas
mov
pop
shll
xorl
pop
cmp
test
outsl
loop
scas
mov
dec
lret
dec
push
mov
push
arpl
sbb
mov
pop
leave
ret
xor
cmp
jge
mov
pop
xchg
xor
iret
dec
jnp
xor
jecxz
jnp
mov
mov
mov
loop
or
mov
pop
fists
xchg
pushf
pop
sub
loope
xor
fstp
aad
gs
ds
imul
jecxz
add
or
fwait
add
pop
lret
cmp
xchg
pop
lds
insl
sub
inc
mov
jnp
pop
in
fsubl
jp
jg
pop
xchg
dec
adc
shlb
mov
js
pop
mov
addr16
inc
pop
add
popa
cmp
data16
add
rorl
testb
xchg
rcll
mov
movsb
sub
cmpsl
xchg
repnz
xor
pop
mov
lods
cmp
mov
push
dec
test
jmp
or
dec
pop
rcrb
loope
xchg
and
cwtl
xchg
into
insl
sahf
test
jns
jecxz
mov
mov
lods
add
xor
ss
pop
ds
sub
cs
or
popa
xchg
loop
or
xlat
mov
inc
cli
pop
stos
pop
clc
sbb
iret
subb
pop
jae
mov
inc
jno
push
pop
out
lods
xchg
inc
add
cmp
sub
mov
sbb
es
rolb
inc
outsb
in
arpl
movsb
pop
jmp
mov
push
mov
xchg
and
jmp
push
mov
push
inc
pop
rolb
test
fisttpll
test
or
rcrb
pop
ljmp
daa
pop
fbstp
xor
inc
pop
pop
fdivs
mov
pop
repnz
popa
mov
pop
outsl
add
jnp
pop
push
pop
scas
xchg
inc
and
pop
sbb
cmc
jecxz
and
xchg
xor
push
cwtl
inc
push
adc
or
mov
fs
mov
fbld
pop
xor
pcmpeqb
test
pop
rcl
ret
add
fs
sbbb
push
shrl
pop
out
push
adc
add
icebp
or
or
cli
or
fiadds
inc
dec
push
push
fnstcw
inc
dec
mov
push
clc
out
into
pop
sub
notl
add
jae
fiadds
sbb
cwtl
test
jecxz
loop
rorl
mov
push
pop
mov
daa
sub
into
test
mov
addb
push
mov
mov
insb
dec
pop
pop
push
movsl
call
pop
fbld
jne
arpl
ja
push
fisubl
call
xor
sbb
jns
loopne
and
pop
out
jg
fwait
push
dec
pop
int3
inc
popf
jp
jl
pslld
scas
in
jg
aaa
mov
jecxz
jns
or
sbb
cmpsl
arpl
inc
inc
jae
xor
test
jne
fsubrp
jo
fisubrl
pop
mov
lcall
and
pop
inc
jmp
fidivs
mov
cmp
pop
push
dec
cld
fists
lcall
scas
scas
xchg
aad
aas
sbb
ss
or
popa
popf
movsb
test
pop
push
jmp
and
pop
nop
push
push
mov
int3
pop
pop
hlt
sub
push
xor
or
dec
inc
cli
push
jbe
adc
out
fs
pop
gs
scas
pop
add
outsl
pop
aad
pusha
repz
mov
gs
push
sahf
pop
daa
test
sbb
push
fcompl
stos
xor
out
mov
jno
lret
in
pop
out
fcompp
cwtl
ret
lods
rcl
mov
push
mov
adc
scas
popf
inc
testb
and
pusha
pushf
jo
pop
add
call
or
loope
cmp
cli
fdivrl
out
scas
and
adc
ja
mov
and
pop
mov
pop
std
call
sub
xchg
add
mov
mov
insb
ds
jp
jl
ss
push
mov
pop
popa
xlat
ret
jle
movsl
pop
push
arpl
pop
jg
shrb
pop
mov
jge
mov
xor
dec
pop
in
inc
fdivs
mov
popf
xchg
icebp
cltd
lret
into
jbe
and
add
dec
pop
popa
insl
fcom
mov
iret
loopne
push
cmp
movsb
adc
or
pop
push
stos
pop
push
sub
sub
push
pusha
mov
rorb
lahf
lods
inc
movsl
inc
inc
ds
pop
dec
lret
iret
fs
jne
pop
xor
mov
xchg
sbb
sub
xor
pop
dec
fimuls
jge
push
in
push
or
pop
fistpl
pop
cmpl
inc
pop
test
cltd
js
mov
aaa
sub
out
inc
mov
xor
mov
data16
mov
mov
sbb
pop
cmpsl
gs
mov
sub
and
pushf
cmpsb
mov
dec
shr
in
inc
mov
lods
pop
adc
jl
sbb
aad
push
xor
xlat
shrl
jge
push
adc
outsb
and
jns
outsl
jne
inc
mov
arpl
sbb
push
xchg
call
add
xchg
mov
js
cmpsl
mov
bnd
bound
popf
push
sbb
test
push
push
fisttpl
std
rcrl
stc
mov
pushf
into
ficompl
in
add
mov
call
or
pop
lods
in
mov
aaa
xchg
sub
adc
jmp
dec
add
lret
loopne
movsb
mov
fnstsw
test
push
pop
mov
sbb
gs
loop
dec
dec
inc
push
pushf
aam
inc
fs
mov
out
pop
pop
and
lret
lahf
cmp
pop
inc
sbb
xor
and
xorb
pop
jmp
pop
cwtl
add
sbb
mov
xchg
adc
lods
aam
ds
pop
sub
sub
fdivrs
cmp
aas
push
pop
pusha
lret
adc
push
push
subb
mov
mov
dec
push
out
pop
out
inc
pushf
xor
in
xchg
pop
sarb
mov
stc
inc
sub
inc
xor
les
jmp
lcall
sbb
ss
rolb
cltd
insb
outsb
mov
xor
fdivrl
dec
push
jmp
mov
xchg
fiaddl
mov
cmp
pop
pop
and
push
push
jg
pop
movsl
adc
push
sbb
or
faddl
jecxz
mov
vorpd
inc
test
jns
outsb
mov
pop
xlat
ss
addb
clc
dec
adc
loop
in
lock
cs
mov
jge
stc
aad
xor
ds
pop
xchg
pop
and
scas
jbe
pop
pop
adc
fstpl
repnz
and
call
jp
ret
jne
stc
pop
inc
pop
aam
cmp
in
inc
cs
pop
mov
test
sub
lahf
push
mov
ficomps
int3
out
mov
jno
cs
into
int
inc
jae
and
xchg
adc
addl
pop
adc
pop
popa
test
andb
ljmp
rcrl
mov
cmp
xchg
sti
adc
fistpl
jb
shlb
ja
push
pop
gs
dec
sbb
in
stos
inc
hlt
daa
pop
inc
mov
dec
jo
sub
mov
mov
dec
xchg
loop
jp
cld
pop
mov
out
test
out
leave
pop
cmc
cmpsl
mov
fcoms
test
mov
pop
hlt
mov
sub
pop
les
lock
push
push
push
out
push
pop
rcrb
xchg
std
lahf
pop
mov
cmp
in
pop
pop
pop
xor
pop
xor
fidivrl
dec
push
mov
pop
lock
shll
repnz
mov
pop
into
decl
mov
test
loopne
int
loope
es
repz
xchg
imul
popf
rcrb
xchg
push
pushf
pop
sbb
pop
cld
or
push
stos
dec
xor
cmpsb
out
mov
add
inc
into
mov
jmp
mov
xchg
mov
adc
or
pop
iret
lret
inc
mov
xor
pop
call
mov
sbb
fstp
fs
push
adc
add
pop
xchg
mov
dec
sub
scas
sub
dec
test
sub
add
push
jb
ds
ret
push
scas
lcall
add
jl
dec
jns
dec
xchg
ja
test
mov
loope
fucomi
pop
sbb
sub
out
push
shll
into
push
fimull
push
cs
pop
inc
dec
jmp
int3
mov
mov
and
mov
push
sbb
popf
aad
push
test
push
sbb
adc
addr16
rcrl
inc
cmpsb
test
ret
jle
outsl
pop
pop
inc
and
imul
push
hlt
jecxz
sbb
push
and
popf
push
dec
insb
push
lcall
int
cs
xchg
js
pop
dec
sbb
mov
mov
popf
sub
es
mov
sbb
push
int3
sbb
aaa
out
out
fldl
adc
daa
dec
jle
hlt
mov
adc
pop
cmpsl
mov
aad
cltd
push
jge
mov
sub
out
sbb
rorb
scas
cmp
pop
cs
inc
jle
test
jbe
adc
cmpb
cwtl
push
mov
es
mov
sub
in
dec
ret
jmp
movsl
lods
push
dec
stos
fisttpll
imul
cmp
mov
cs
stc
dec
dec
mov
lods
push
cmp
and
aaa
scas
pop
jae
int3
jp
cmp
xchg
fisubs
fs
ret
xchg
push
fimuls
cmpsb
sarl
inc
out
js
es
inc
mov
arpl
stos
add
fcmove
outsl
push
push
lds
push
mov
sbb
jle
mov
sbb
dec
js
aam
push
sar
in
ds
or
xchg
pop
inc
sbb
fdivl
fcmovu
xor
push
jb
jne
fsubrs
dec
add
sub
cmp
sub
mov
xor
movsl
ror
sbb
popf
pop
pop
es
pop
jb
inc
mov
pop
fidivrs
shll
mov
int
pushf
xchg
cmp
fldl
mov
lret
xlat
int3
faddl
sub
lods
es
and
inc
ss
push
push
dec
pusha
sbb
movsl
sub
xchg
jae
pop
and
mov
jbe
shlb
push
push
inc
xchg
rclb
pop
rcll
xchg
test
mov
jmp
mov
pop
fldl
push
dec
jge
fs
mov
xchg
lahf
ja
pop
int
ljmp
push
pushf
push
cs
insl
js
test
popf
mov
pop
arpl
pop
sub
and
mov
add
or
dec
mov
jb
sub
mov
mov
sbb
mov
xchg
inc
sub
call
cld
movsl
jbe
mov
mov
jge
xchg
ja
xchg
clc
cs
in
movsb
jp
mov
xor
xor
push
stos
add
negb
push
mov
sbb
jbe
push
popf
popf
pop
and
cwtl
ss
cmp
cs
stos
mov
jle
push
into
mov
xchg
pop
outsb
pop
mov
sbb
pop
test
mov
mov
dec
les
and
jge
inc
aad
or
inc
sahf
repz
aam
into
out
pop
pusha
fincstp
mov
push
fs
mov
xchg
dec
add
lods
jp
repnz
dec
mov
adc
jno
mov
pop
ja
test
pop
push
pop
mov
into
stc
mov
in
push
idivl
arpl
xchg
push
movsb
add
pop
and
test
outsl
inc
push
les
inc
cmpsl
cmc
lret
push
gs
sbb
and
rcrl
pop
xchg
in
push
and
mov
ffree
lods
sub
mov
loope
jle,pt
or
out
enter
mov
dec
add
movsb
daa
fisubs
aas
add
add
push
sub
xchg
ja
dec
sub
mov
push
cmp
jle
lods
cwtl
shll
enter
add
lods
cmp
cs
into
out
dec
mov
pop
mov
sub
push
pop
and
dec
mov
mov
or
lods
mov
push
jg
pop
mov
lds
lcall
mov
dec
fimull
cwtl
mov
lea
jp
cltd
mov
xorb
cs
dec
add
js
jno
jp
push
aad
sbb
mov
jle
and
repnz
mov
fistl
cmc
nop
pop
int
and
cld
popf
push
ret
sub
mov
leave
sub
insl
mov
lods
push
pop
fdivp
aas
pushf
mov
push
in
popf
push
cmc
pop
aad
outsb
mov
adc
mov
into
nop
icebp
mov
pop
dec
push
xchg
mov
push
in
aad
dec
and
mov
dec
push
push
push
into
sub
in
xor
das
lcall
neg
lea
xchg
push
std
jle
fs
out
testl
je
adc
or
jle
cwtl
ret
jle
inc
ficoms
inc
pop
or
push
jbe
fadds
ljmp
repnz
mov
int
daa
fs
adc
inc
mov
lods
dec
jbe
mov
jbe
nop
push
xor
les
jle
shrb
push
lods
fs
cmc
and
xor
das
insb
movsb
inc
sub
nop
pop
sub
sbb
push
or
out
xchg
sbb
iret
pop
lea
mov
int3
pop
pop
push
jae
pop
sub
test
and
mov
mov
push
add
push
lods
cmp
lods
and
int3
es
inc
add
outsb
sbb
mov
jo
xor
pop
and
jle
adc
sbb
cs
sub
fisttpll
cld
push
xchg
popf
fmul
test
sub
lods
es
or
and
repnz
scas
sbbb
xchg
idivb
lods
push
sahf
lock
dec
and
and
lods
pop
lods
add
fiaddl
mov
inc
or
js
faddp
mov
mov
add
pop
fisubrs
ficoml
cmp
add
mov
aas
and
sbb
pop
push
mov
dec
mov
xchg
iret
push
dec
mov
gs
sbb
outsb
imul
add
mov
adc
add
jns
lock
in
pop
mov
fisttpll
push
stc
ffree
xor
scas
dec
push
jb
loope
ds
outsb
dec
mov
lret
fnstsw
inc
sub
int
clc
ds
xorl
aaa
sub
inc
pop
push
test
push
std
fimuls
jl
pop
sub
mov
in
jo
mov
int
mov
repnz
mov
push
dec
into
inc
push
and
pop
xchg
dec
insb
cmc
dec
sub
sahf
out
push
and
fstpl
push
hlt
mov
test
mov
jle
push
adc
dec
pop
add
sub
mov
xchg
into
inc
shrl
and
adc
stos
xchg
xchg
insb
or
cmp
mov
jb
scas
adc
push
lods
jb
mov
sub
xor
push
fmul
popf
mov
andb
pop
movsb
push
mov
mov
andl
shlb
ja
insb
dec
insw
lret
mov
push
mov
fs
addb
gs
sbb
mov
xchg
dec
push
outsb
mov
sbb
insb
jbe
xchg
cli
imul
mov
xchg
mov
adc
mov
push
test
push
sbb
fcoml
cmpsl
rol
push
stos
sbb
mov
cmpsl
fldt
test
push
or
lods
add
mov
mov
loop
add
cmp
int3
mov
test
rclb
into
jbe
push
inc
inc
mov
das
jno
push
scas
mov
out
pusha
scas
fsubr
pop
std
out
mov
cmpsb
inc
adc
lods
sahf
jno
sti
inc
aaa
push
push
fidivs
mov
push
inc
pop
xchg
aas
jmp
lods
inc
and
mov
cmp
mov
jne
sbb
fmulp
je
mov
push
sahf
es
pop
or
sub
push
mov
mov
into
pop
int3
in
mov
pop
sub
loopne
pop
out
into
lea
out
xor
mov
mov
mov
push
rcrb
out
es
es
mov
negb
sbb
jg
pop
pop
and
int3
cld
add
inc
movsb
aad
scas
adc
aam
mov
scas
cli
je
jne
jle
pop
sahf
nop
xchg
jne
int
js
add
mov
fsubrs
jle
and
jl
mov
push
daa
ret
gs
jb
outsb
loopne
pop
sub
inc
cmp
movsl
mov
mov
xchg
repz
loopne
repnz
fimuls
xor
push
popf
cmc
sub
dec
sbb
out
pop
cs
mov
addr16
pop
dec
jns
lcall
mov
mov
pop
or
sbb
jne
pop
rcll
jge
icebp
jno
int3
jg
loope
call
adc
xor
dec
arpl
pop
lahf
ds
mov
sub
dec
ds
adc
aad
int3
sub
xchg
xchg
dec
push
out
fldcw
mov
ss
mov
out
pop
ja
push
insl
in
cmp
cmpl
pop
mov
movsl
dec
add
push
in
test
sub
mov
adc
inc
es
ja
popf
fldl
mov
mov
in
les
mov
pop
outsb
jbe
mov
add
pop
push
push
mov
xchg
sbb
lds
xorb
mov
fists
mov
aas
ds
fisubrs
adc
inc
xor
sub
int3
push
ffree
popf
mov
repnz
aaa
ja
stos
prefetch
inc
xor
lods
sarl
aad
fisttpll
in
mov
cltd
movsl
ficompl
insl
mov
jbe
into
jle
sub
outsb
sub
add
jo
xchg
xchg
jbe
sub
lods
pushw
lret
push
push
aas
xchg
in
cmp
mov
out
movsl
jle
shr
mov
and
mov
xchg
nop
push
pop
sub
int
cmp
repz
scas
push
jb
mov
dec
push
repz
xor
fdivs
into
sub
inc
push
cmp
aad
ss
outsl
stc
mov
out
jb,pt
cmp
xor
mov
cmc
popfw
mov
pop
popf
es
aas
scas
fmuls
pop
sahf
or
dec
scas
into
sub
stc
jbe
sbb
push
mov
push
cmp
cmpb
dec
sbb
pop
in
out
mov
jne
mov
inc
dec
aaa
xor
cmp
vpmullw
push
xchg
lods
cmp
mov
mov
test
leave
pop
fs
sbb
pop
mov
inc
cmp
and
popa
mov
lcall
push
cmpsl
mov
adc
je
xchg
mov
les
pop
fdivr
enter
cltd
into
vxorpd
jle
scas
cwtl
mov
xor
adcb
push
ja
pop
dec
movsl
cmp
xor
push
pushf
bound
mov
mov
cli
enter
dec
jp
jl
and
int3
push
jb
cmpsb
lds
or
sub
lods
push
sbb
xchg
push
jge
mov
shr
gs
leave
jmp
cmc
mov
fiaddl
push
int
sub
add
adc
out
fisubrs
push
movsb
rclb
mov
push
les
outsb
repz
mov
jg
lods
push
push
and
jle
and
pop
in
ss
cmp
xor
fidivrl
push
insl
xor
rclb
xchg
or
sbb
and
out
insl
jecxz
xchg
test
push
push
mov
aad
mov
mov
loopne
stos
jno
adc
out
mov
repz
adc
and
sbb
std
fsts
cmpsb
jb
movb
aaa
mov
loopne
shrl
mov
popf
cmp
ja
mov
stc
in
dec
cwtl
insl
xchg
in
mov
mov
and
jnp
jno
cs
jecxz
pop
ficompl
repnz
xchg
cmpl
ds
xchg
je
insb
nop
jp
je
int
dec
js
sub
cltd
xor
cs
add
push
mov
out
adc
pop
movsb
adc
adcb
mov
cmpsb
push
fidivl
rcr
dec
jo
mov
pop
inc
insl
lcall
out
stos
test
cmpsb
out
insb
push
decl
sub
and
in
inc
dec
ja,pt
movl
loopne
dec
dec
mov
mov
scas
mov
push
jge
fstl
mov
mov
jno
fiaddl
lcall
push
xlat
jle
in
jb
mov
cmpsb
in
sub
jae
js
mov
sub
into
sahf
roll
sbb
lea
inc
inc
out
pop
push
mov
pop
pop
cmpsb
sbb
cmc
fucomp
shll
lods
fisubs
xchg
mov
push
and
pushf
mov
insl
mov
movsb
ja
inc
loop
loope
jp
and
std
cs
sub
pop
mov
lods
mov
and
outsb
test
pop
hlt
les
xor
xchg
cmp
fst
test
ficoms
xchg
rcr
sub
imul
xor
jb
mov
mov
jge
cmpsl
and
outsb
sub
jne
lods
inc
lds
scas
mov
aaa
loop
pop
and
add
and
cmc
mov
push
mov
sbb
mov
mov
ret
sbb
ja
ret
xchg
dec
mov
dec
fwait
in
mov
mov
dec
adc
sbb
push
sbb
cmpsl
adc
clc
fmuls
pop
lods
or
push
pop
sub
mov
popf
insl
and
shrb
mov
fisubs
enter
dec
scas
notl
mov
fmulp
mov
mov
pop
or
xlat
mov
inc
pop
movsl
mov
mov
push
fstpl
fcmovbe
sub
pop
pop
into
loope
fs
jp
sahf
fwait
and
and
dec
movsb
ret
test
jns
push
scas
jo
xor
jne
loope
dec
sub
mov
dec
mov
addl
arpl
pop
ss
mov
mov
scas
out
es
sbb
cmp
mov
in
into
fidivl
xchg
inc
ret
adcb
out
aaa
mov
sbb
lea
ret
mov
fwait
push
sbbl
roll
mov
xchg
mov
cmpsb
inc
scas
je
pop
fidivs
push
push
xlat
mov
insb
sub
pop
ret
lea
push
loop
push
fisubrs
shll
pop
popf
test
adc
push
ss
push
into
add
mov
lcall
dec
push
pusha
xchg
jecxz
out
inc
imul
xchg
or
pop
pop
sub
int
mov
cltd
adcl
mov
lea
cmp
dec
aam
out
pop
lret
or
outsb
mov
out
inc
cwtl
pop
pushf
ljmp
pop
test
dec
jecxz
sub
xor
outsl
mov
pop
adc
les
mov
data16
call
xchg
into
mov
pop
lods
push
icebp
mov
mov
stos
cs
dec
mov
push
jb
xchg
and
push
or
outsb
in
aaa
sub
dec
pop
mov
fbld
mov
stc
pushf
mov
data16
lea
and
rcll
sub
fstpl
outsl
mov
aas
into
cmp
mov
dec
int
adcl
sti
addr16
push
adc
aad
scas
loop
aam
in
cmp
in
push
stos
lahf
ret
dec
aam
inc
lds
into
push
dec
fsubrs
cltd
fcoms
movsl
fs
les
xchg
mov
sub
inc
sub
mov
das
xchg
popf
cs
mov
mov
and
jp
mov
les
stos
pop
arpl
xchg
mov
hlt
fcmovne
in
ja
mov
pop
popf
jne
loopne
mov
and
inc
xchg
push
ds
mov
jbe
test
shrb
test
vmread
sbb
mov
ds
push
cmp
add
mov
mov
push
scas
pusha
aad
mov
push
sub
pop
dec
dec
jg
movd
shrb
pop
mov
mov
outsb
jle
sub
mov
push
jge
mov
push
out
fisubrs
imull
and
lock
pop
push
xchg
mov
ds
add
add
pusha
sbb
mov
sbb
inc
ror
cltd
mov
test
aad
inc
push
pop
mov
pop
sub
adc
popf
dec
movsl
es
loop
or
shll
outsl
cs
cmc
inc
dec
gs
xchg
pop
jge
ret
aad
popf
xchg
push
push
inc
jle
sub
jo
cld
jae
pop
jge
xchg
into
insl
push
jp
movsb
cmpsl
push
mov
inc
out
lcall
and
mov
bswap
pop
shrl
jno
mov
xor
cmp
enter
sbb
mov
or
adc
dec
inc
pop
jb
loop
xor
xchg
add
cwtl
cwtl
aas
add
in
or
shlb
dec
push
mov
xor
cwtl
and
dec
push
out
aad
lock
fnstenv
inc
adc
jbe
das
xor
ret
pop
into
fmull
stos
pop
push
lods
fisttpll
arpl
aam
add
stos
cmp
shlb
xchg
lahf
and
inc
lock
pop
fisttpll
xor
ret
add
das
xor
or
popf
or
repz
pop
call
movsb
pop
jne
mov
jp
mov
cmc
xlat
sub
jle
ljmp
movl
pop
mov
inc
and
pop
sub
in
popf
xchg
dec
mov
cs
jnp
cs
mov
bound
into
fists
xchg
int3
cmp
pop
mov
jge
mov
scas
aad
rcll
mov
lods
dec
pop
imul
fidivl
xchg
fimull
fdivrs
int
imul
pop
outsl
dec
mov
adc
ss
nop
jle
lds
les
ret
cmc
aaa
pusha
xor
lahf
inc
and
jno
xor
and
dec
jmp
in
scas
shrb
daa
jp
or
scas
mov
dec
lea
aam
xchg
test
call
push
pop
fcmovbe
xchg
mov
aad
pop
jmp
mov
mov
stos
mov
xchg
inc
cs
add
dec
rcrb
push
out
insl
sbb
add
push
outsb
les
mov
mov
shlb
pop
xor
push
lea
nop
and
cmp
in
outsl
xchg
push
push
dec
cmp
mov
push
lods
dec
sbb
imul
jp
sbb
sbb
jle
fadd
fimuls
push
lods
lods
in
negb
popa
mov
pop
mov
add
xchg
push
cmpsb
inc
lds
inc
dec
fldlg2
pop
pop
pop
fstpt
pop
mov
push
dec
iret
mov
push
test
add
jle
insl
mov
into
adc
add
cs
fldl
pop
ds
popa
shr
pop
jb
sahf
mov
pop
outsb
or
xor
adc
ss
cmp
cli
ficoml
fucomp
jae
mov
lods
mov
inc
mov
pop
jbe
sub
cmp
dec
in
mov
test
test
ficomps
and
mov
outsb
jge
je
sbb
int3
pop
pushf
fdivrs
mov
inc
pop
or
dec
ficoml
push
daa
leave
mov
rorb
cs
pop
hlt
add
adc
ror
rcl
sub
adc
cltd
pop
pop
movsl
movsb
push
mov
scas
add
fs
mov
xchg
dec
out
in
push
mov
mov
lods
cs
fsubrs
testb
iret
mov
jl
ss
cli
andl
cwtl
or
sbb
iret
insb
mov
out
lcall
push
and
and
push
subl
adc
fidivrs
outsb
sub
mov
scas
sub
arpl
in
es
or
fildll
mov
ficomps
mov
jne
std
mov
fadds
push
fstp
pcmpgtd
js
clc
or
dec
mov
popf
dec
in
cmpb
orl
mov
jo
mov
in
daa
jle
sub
push
arpl
xchg
add
pop
jae
test
scas
lods
mov
out
sbb
arpl
mov
push
movsl
sub
push
xor
je
adc
add
push
pop
push
je
add
scas
pop
xchg
mov
data16
dec
fmull
scas
into
testl
mov
mov
push
jo
in
lea
repz
fcmovnbe
mov
sub
adc
ja
jnp
data16
pop
jmp
fimuls
int
xor
inc
inc
dec
lds
cmp
orl
dec
jo
js
mov
xor
ret
mov
adc
in
jle
inc
push
popf
sub
xchg
jo
adc
or
dec
inc
outsl
jno
movsl
push
sub
ds
fsubrs
dec
shl
mov
mov
xchg
pop
push
pop
dec
inc
adc
mov
push
aaa
push
dec
lea
popf
in
push
les
xchg
in
mov
lods
cltd
sbbb
out
push
leave
jle
sbb
xchg
cmp
adc
test
test
push
mov
arpl
test
and
int
xlat
inc
ss
mov
lds
mov
test
cmpsb
xor
mov
adc
arpl
mov
inc
jbe
aas
jecxz
es
mov
divb
mov
mov
push
in
sub
mov
mov
mov
mov
mov
cmpsl
pop
mov
push
mov
shrl
test
scas
push
inc
ret
push
inc
fsub
xlat
mov
repnz
mov
gs
push
jb
mov
dec
lret
cmc
pop
dec
add
mov
and
loop
lea
mov
insl
push
sbb
ret
dec
xor
stos
sub
jnp
mov
aad
dec
sbbl
enter
ja
lcall
mov
adc
ficoms
std
fidivl
int
push
mov
mov
push
pop
push
fistpll
vmovaps
ds
cmp
andps
push
fisubrs
ret
pop
push
and
shll
imul
into
pop
xchg
mov
iret
mov
lods
fs
push
test
push
scas
push
push
sbb
cmc
mov
jl
movsb
das
mov
xchg
dec
push
mov
es
popf
mov
cmp
jp
sahf
inc
add
pop
dec
dec
inc
movsb
or
jbe
jbe,pn
mov
hlt
sahf
out
aad
out
inc
jmp
sub
mov
arpl
js
call
test
fisubrs
cmp
mov
or
cs
jbe
lea
cltd
sbb
shll
mov
dec
add
movsb
pop
mov
js
pop
dec
mov
mov
push
pop
jae
dec
repz
stc
mov
xor
mov
cmc
mov
add
into
aam
xor
out
dec
xchg
lcall
jle
dec
shll
das
mov
xlat
push
or
lcall
pop
shrb
mov
test
xchg
addb
xor
lea
mov
popa
movsl
push
pop
test
push
aad
fwait
push
fs
inc
mov
pop
dec
lods
push
mov
test
push
out
mov
popf
in
int
adc
xlat
add
or
mov
jb
inc
sahf
lds
popf
out
jecxz
fidivs
mov
in
loope
dec
push
cs
movsl
push
test
lea
lods
pop
mull
in
push
sub
lods
sub
sbb
mov
mov
lahf
push
add
cmpb
insl
cs
mov
push
roll
push
cs
push
pop
scas
pusha
and
inc
dec
test
add
xchg
loope
mov
xchg
and
xchg
out
jp
xlat
mov
pop
xor
pop
enter
push
arpl
and
push
ja
dec
inc
mov
push
pushf
shll
scas
add
pop
outsb
sarb
adc
sub
inc
loop
dec
jbe
cmpsb
mov
loopne
inc
fdivrs
and
jmp
out
inc
dec
test
pop
push
xor
aad
sub
mov
into
stos
addr16
test
and
jb
lcall
cmp
sbb
test
dec
lock
inc
inc
shlb
push
push
pop
arpl
aam
jbe
insl
inc
aaa
movsl
stos
ds
mov
sbb
pushf
outsl
nop
sub
mov
dec
xchg
lea
into
in
mov
aam
popf
cltd
xor
movsl
push
pop
push
ljmp
sub
dec
inc
mov
ret
fnstcw
mov
or
in
xchg
mov
loope
call
ds
fisubrs
pop
inc
adcb
push
lds
sbb
out
xlat
lods
in
addr16
in
outsl
rol
push
test
jp
dec
insl
push
add
ja
cmpsb
loop
cs
push
fdivrl
push
repnz
dec
jne
jge
mov
dec
aam
jl
jle
dec
pop
push
int3
outsb
push
fisubrs
mov
jne
es
mov
adc
add
adc
push
adc
or
jb
subl
mov
or
pushf
call
mov
out
aas
lahf
mov
mov
scas
xchg
mov
les
dec
popf
sahf
mov
std
jle
push
sarb
testl
int
lea
ds
jle
mov
insl
outsl
movsl
mov
mov
out
stos
sub
jl
ds
mov
pop
fwait
test
out
xchg
lods
jle
mov
sti
jbe
jno
push
pop
mov
push
sbb
aam
push
jbe
in
jge
stos
pop
loop
in
jl
ja
push
jle
mov
dec
in
dec
xchg
sub
jmp
divb
aad
insl
and
in
lea
fwait
cli
push
xchg
or
jl
dec
fwait
in
fdivrs
mov
dec
push
pop
dec
pop
mov
movsb
iret
inc
inc
and
scas
popf
mov
stos
ss
into
mov
pop
xlat
mov
sti
dec
mov
sub
mov
fisubrs
pop
mov
in
hlt
shll
cmp
dec
jb
lea
lods
out
test
in
xor
js
mov
fcmovnb
push
pop
repnz
lods
int3
ret
frstor
dec
insl
das
lret
out
shrb
mov
push
lret
mov
xchg
sbb
out
outsl
and
push
xchg
sub
mov
xlat
jne
jle
jns
pop
add
push
add
movsb
mov
cmp
xlat
xchg
lea
lock
xchg
push
push
mov
data16
in
mov
in
imul
in
popf
mov
push
push
mov
jb
jecxz
xchg
fmulp
add
je
ret
stos
loopne
ja
sub
and
les
mov
daa
mov
iret
or
mov
xor
cmpsl
mov
in
cmpsb
mov
pop
mov
dec
ds
xchg
adc
ds
push
xchg
std
movsl
mov
int3
mov
bound
dec
push
in
mov
jbe,pt
mov
dec
inc
sarl
stos
adc
rolb
lods
dec
dec
dec
movsb
ss
or
cmp
movsl
push
dec
mov
pop
shlb
mov
fisttpll
mov
mov
das
cld
adc
neg
push
ret
mov
ret
mov
xchg
fs
add
pop
push
andl
data16
shll
xor
mov
xor
mov
addr16
xchg
mov
push
cld
aad
and
mov
into
jle
push
cli
dec
mov
mov
in
mov
mov
sbb
jl
mov
out
dec
cwtl
movsb
inc
aam
push
pop
stc
ret
cmp
ror
loopne
lcall
jno
pop
push
ss
add
jge
ja
mov
insb
out
xchg
or
into
sbb
mov
aad
mov
mov
loopne
rcl
dec
lret
and
push
pop
fidivrl
and
aad
xchg
sub
sbb
int
sbb
add
divb
popf
into
jns
or
cs
movsl
pop
cs
cmpl
mov
test
test
aam
divb
pop
in
lea
lcall
sbb
push
outsb
xchg
jno
shrl
popf
mov
fisubs
or
popf
mov
pop
enter
out
jge
jp
enter
dec
mov
xchg
fs
push
inc
xchg
movsb
test
ja
inc
lods
test
mov
lods
sub
push
sub
aam
ds
sub
and
mov
stc
movsb
dec
les
sub
pop
aas
rcrb
fsubrs
pop
xor
mov
pop
inc
out
push
aaa
data16
and
push
sub
add
or
sbb
push
lods
mov
aam
and
std
pop
dec
sub
push
mov
and
out
mov
in
fadds
sahf
sahf
mov
push
add
push
dec
and
jl
scas
cli
popf
aad
dec
jge
mov
aam
xchg
push
into
mov
xchg
mov
lcall
test
out
cmp
pop
xchg
push
mov
das
nop
into
daa
push
mov
in
xchg
push
xchg
popf
push
cmp
mov
inc
pop
out
sbb
inc
fwait
sub
mov
xchg
pop
dec
mov
add
and
into
pop
dec
add
xchg
jbe
or
cmc
in
popf
mov
lods
aaa
stc
outsb
adc
jle
imul
xchg
sub
enter
clc
mov
insl
pop
jmp
push
mov
push
or
xchg
cwtl
mov
ds
ret
push
inc
adc
mov
mov
pop
iret
xchg
cmpsb
push
pop
imul
ds
push
sub
push
and
loop
testl
popf
imul
mov
or
mov
dec
pushf
jne
push
les
jnp
es
icebp
jge
shll
ja
enter
or
mov
jg
fimuls
pusha
mov
jle
cmp
xchg
aas
movsl
push
push
dec
inc
popf
mov
pop
pushf
xor
fimuls
push
icebp
mov
pop
xor
mov
sub
push
andb
jmp
rclb
ficomps
subb
dec
cmc
loope
lods
mov
lods
nop
in
daa
and
test
fwait
dec
testl
xchg
popf
xlat
pusha
mov
xor
fs
mov
jbe
lods
popl
mov
shlb
fiadds
mov
ja
xchg
std
jmp
jne
mov
jnp
pop
add
jnp
mov
movsl
lcall
ret
dec
mov
dec
pop
xor
fwait
mov
push
jne
mov
push
fstl
addr16
adc
lcall
mov
ss
stc
push
pushf
call
std
mov
sbb
adc
sbb
push
push
int
push
mov
dec
mov
xchg
fs
push
popf
mov
out
int3
lea
push
mov
inc
push
cmp
out
lea
jbe
or
mov
pop
in
ds
cmp
in
pop
xchg
test
cmp
out
pop
push
jp
push
mov
push
testl
icebp
nop
adc
out
xor
dec
adc
out
mov
mov
sahf
sbb
sub
xchg
xchg
fs
daa
mov
loopne
mov
dec
pop
repz
ja
pop
outsl
rol
push
inc
cmc
jle
dec
mov
add
fadds
xor
mov
popf
xchg
pop
orl
dec
shr
out
cs
xor
push
sbb
test
or
cmp
popa
push
dec
add
push
or
push
adc
rorl
push
dec
scas
sub
mov
into
mov
jmp
ds
ljmp
pop
add
cmp
mov
orl
mov
jbe
mov
lea
rcrb
rorl
in
sbb
xchg
xchg
insl
dec
movsl
mov
aad
loopne
ds
pop
rorl
shll
rorb
gs
stos
push
int
add
out
imull
mov
in
xor
popf
in
mov
mov
inc
clc
mov
stos
xor
mov
ret
loopne
xchg
es
jbe
daa
insl
dec
pop
ret
popf
mov
inc
xchg
imul
sub
jmp
mov
into
int
jg
or
add
cmp
clc
pop
cwtl
fcomp
xchg
xchg
sub
movsb
scas
mov
incb
push
insb
mov
aaa
sbb
xor
xchg
repnz
iret
jae
and
push
mov
sub
mov
int3
jnp
int
outsb
mov
sahf
sbb
pop
jns
fwait
mov
cli
push
cltd
in
jle
xor
inc
push
dec
sub
pop
sbb
movsl
int
lret
out
call
jp
out
out
adc
jae
sbb
and
push
imul
loopne
int
push
jb
dec
test
sub
push
add
jnp
xchg
push
in
enter
sub
adc
adcb
mov
sbb
pop
inc
aam
inc
es
push
popf
aad
cmp
or
mov
cmc
int
xchg
outsb
pop
mov
add
fsubs
int
dec
add
dec
loope
in
aad
push
scas
call
push
push
push
cs
mov
push
out
xchg
pop
add
add
scas
pop
scas
scas
mov
lods
jge
push
fldt
popa
adc
icebp
movsb
lods
cs
pop
sub
rolb
daa
mov
dec
cmp
dec
daa
insl
lds
cmp
sahf
add
cmpsb
xchg
mov
cmc
out
inc
sub
push
pop
lods
jo
mov
jp
in
and
inc
ficoms
popa
ds
mov
lea
jecxz
fs
mov
mov
or
aaa
movsb
inc
dec
sbb
and
add
rcrl
leave
lcall
mov
lock
pusha
mov
jbe
cli
add
push
cwtl
and
ds
lret
adc
xchg
into
push
repnz
or
test
sub
pop
push
push
mov
fcmove
out
lods
jecxz
into
test
xchg
out
pop
push
mov
sbb
xor
push
cmp
jne
adc
je
fs
loopne
movsl
jge
scas
xchg
inc
push
lea
mov
shlb
test
add
cmp
push
push
dec
aaa
andl
mov
dec
aas
mov
lcall
push
inc
jl
hlt
pushf
ficoms
ds
jbe
add
int
pushf
jnp
mov
sbb
out
inc
popf
outsb
xchg
test
and
lock
jle
push
arpl
xchg
insl
push
push
cld
jecxz
outsl
mov
lcall
push
sbb
mov
aam
cmp
int
fcom
insl
xchg
mov
into
push
insl
fisubrs
pop
inc
mov
popf
repnz
mov
xchg
test
pop
pop
insl
cmp
pop
sub
lret
dec
lods
add
sbb
jne
popf
and
mov
sub
push
jb
push
jbe
jbe
inc
mov
scas
fidivrs
or
lods
mov
mov
hlt
outsb
rorl
mov
lods
mov
sub
daa
test
push
sub
and
sub
jb
cmpsb
push
pop
xor
mov
cs
add
into
add
outsb
in
aaa
out
and
mov
ds
std
push
mov
pop
and
xor
cmpb
cmp
out
pop
pop
sub
sbb
xchg
cmp
sahf
in
std
mov
xchg
mov
add
sbb
xchg
mov
and
xchg
pusha
jns
aad
lods
push
movsl
rorl
jb
rcrb
xchg
std
les
test
mov
mov
int
mov
insl
push
sahf
fsubs
mov
push
leave
xchg
add
mov
xor
sub
insb
dec
mov
pop
mov
pop
and
xchg
pop
fdivl
push
hlt
mov
call
outsl
sbb
cltd
pop
sub
push
leave
mov
xchg
inc
int
xorl
fstpl
jp
pop
insl
arpl
mov
sahf
test
lea
gs
dec
fidivs
dec
lds
or
iret
movsl
pop
cld
hlt
in
push
adc
pop
inc
add
popl
sub
jns
xor
addb
mov
jge
lods
js
or
pop
loop
adc
inc
jmp
pop
inc
aaa
adc
js
sti
push
pop
leave
xchg
addb
cwtl
and
nop
pop
adc
pop
shrb
gs
pop
mov
mov
cmpsl
jge
enter
jmp
or
pop
lret
lcall
mov
popa
hlt
lret
pop
movsl
xor
push
mov
cmp
fs
mov
push
imul
idivb
lods
push
lea
mov
pop
outsl
pop
shr
cmp
mov
pop
imul
loope
xchg
in
scas
mov
pop
pop
repnz
lcall
adc
fs
test
sub
lret
mov
dec
sbb
pop
and
adc
and
add
jmp
inc
sub
xor
lret
push
sub
mov
push
ja
mov
sub
rorb
leave
pop
and
subb
push
pop
mov
xchg
clc
rcrb
pop
jg
jb
xchg
std
loope
inc
mov
popa
cmp
adc
add
add
pop
xlat
dec
dec
mov
jns
pop
sbb
in
fsubl
lahf
pop
sub
daa
add
sahf
ss
push
in
cwtl
cmp
sarb
pop
mov
mov
cmpsb
push
lcall
add
pushf
scas
es
js
cltd
xlat
sub
dec
test
xor
pop
int
hlt
lock
jns
sub
mov
mov
pusha
pop
or
cmpsb
pop
subb
sarl
scas
xchg
fsubs
push
jae
roll
pop
jne
adc
fwait
enter
int3
rorl
pop
push
cli
xchg
and
mov
dec
pop
shlb
fsubl
test
dec
mov
pop
popf
aaa
push
mov
pop
addl
xor
daa
sbb
mov
jmp
mov
imul
sub
aas
stos
lea
add
aad
addr16
dec
pop
nop
pop
ficoml
pop
sahf
inc
jle
mov
out
insl
sbb
loope
test
js
lcall
jl
dec
inc
lret
sub
pop
rcr
rcl
or
push
scas
popa
cmpsb
pop
lock
addl
mov
pop
cld
fildll
fcomps
mov
jo
ret
fisubs
push
and
ret
jp
repz
pop
mov
pop
sub
imul
pop
or
cmp
lods
xchg
dec
int
mov
sahf
mov
popf
cmc
test
pop
cmp
sbb
cmp
pop
outsb
lea
and
aaa
scas
sarl
mov
push
pop
iret
mov
mov
inc
ds
cmp
pop
shrl
dec
mov
adc
nop
pop
pop
cmc
fst
cmpsl
out
cmpsb
pop
insl
stc
jbe
dec
cmp
loope
pextrw
xchg
push
sti
xor
pop
and
sub
push
mov
fiaddl
sbb
sahf
lea
add
xchg
dec
repnz
dec
and
push
pop
jl
out
dec
pop
ret
xchg
pop
pop
push
scas
and
iret
mov
push
add
lret
cmpsb
loope
dec
pop
adc
lds
mov
mov
pop
orb
xchg
out
push
or
pop
add
mov
fstps
incl
enter
jmp
xchg
pop
in
das
dec
addps
inc
jecxz
xlat
je
fcomps
dec
and
cmc
aaa
fldt
dec
sbb
pop
into
xchg
stc
inc
add
mov
pop
mov
mov
inc
push
lcall
dec
sbb
cmpsb
xor
bound
push
in
add
stos
cmp
push
mov
int
repnz
fistps
in
xchg
mov
and
pushf
test
jbe
loope
push
push
call
pop
inc
dec
sahf
sbbl
adc
mov
xchg
ficoms
pop
ljmp
mov
scas
inc
test
dec
mov
pop
xchg
pop
add
dec
fstps
ret
stos
call
out
jge
fiadds
add
sub
lds
leave
jl
lret
xchg
sub
push
adc
pop
xor
shll
leave
xor
out
push
fimuls
jge
pop
fisttpll
push
push
pop
hlt
sub
adc
pop
add
push
lret
sub
xchg
enter
mov
insb
jo
mov
dec
cmp
add
bound
inc
lods
jecxz
cwtl
in
into
sbb
sbb
or
lock
aaa
pop
and
aam
mov
inc
xchg
rclb
mov
xor
dec
sbb
pop
aaa
add
adc
push
pop
notb
cld
jae
ja
mov
loop
xlat
pop
data16
sahf
pop
fwait
xchg
add
pop
cmp
xchg
scas
mov
pop
imul
int
mov
pop
imul
jg
push
mov
inc
and
xchg
jbe
sbb
pop
pop
outsl
mov
sub
cld
cmp
std
daa
js
fwait
mov
out
sbb
loopne
fwait
sub
push
clc
mov
jl
pop
pop
sbb
pop
std
out
lahf
mov
daa
push
bound
fiaddl
push
and
mov
int
pop
cmp
push
leave
sub
mov
push
push
adc
imulb
xchg
pop
add
sbb
mov
aad
popa
or
or
xor
in
add
pop
lock
dec
mov
hlt
pop
cltd
lret
test
pop
cmp
les
xchg
adcb
pop
nop
movb
lods
mov
sub
pop
cs
loopne
data16
inc
loop
pop
jne
push
mov
loopew
cmp
adc
lock
movsl
pop
aas
cmp
sbbl
xchg
pop
sub
pop
ret
rcrb
stos
pop
shlb
add
inc
pop
sub
mov
jl
test
ja
mov
or
mov
std
dec
lcall
ljmpw
movsl
pop
out
adc
sbb
out
inc
cmp
xor
lret
imul
outsb
fcomps
xchg
out
call
jmp
in
fcmovnbe
pop
mov
xor
mov
xor
pop
iret
daa
shr
andl
repz
push
push
pop
cmpsb
jno
popa
pop
adc
jle
cmp
sbb
lcall
sahf
inc
jecxz
push
cmp
lods
cmp
mov
pop
sbb
or
xor
push
and
pop
mov
rcll
adc
mov
lods
pop
rcrl
xchg
pop
mov
aas
test
push
mov
pop
out
int
stc
pushf
sub
dec
std
loope
push
mov
mov
pop
xor
ja
out
jle
pop
cwtl
pop
ret
cmp
repnz
scas
jl
pop
orb
ret
in
xchg
mov
push
push
sbb
stos
dec
add
in
pop
inc
jl
cli
sub
insl
mov
mov
jb
movsb
inc
sarb
test
push
pop
call
dec
cmpb
fldz
pop
int
inc
mov
mov
mov
cmp
daa
shll
cmp
or
popa
pop
pop
xchg
ja
inc
mov
mov
je
test
fcoms
jge
mov
sbb
pop
pop
add
sbb
pop
mov
xchg
rcr
dec
push
mov
dec
pop
sbb
aam
mov
inc
mov
nop
mov
push
pop
mov
adc
fcmovne
pop
pushf
sti
loopne
sub
pop
or
inc
gs
fidivrs
mov
std
jp
addb
or
in
xor
dec
jb
popa
sbbb
mov
andl
pop
xchg
cltd
add
imul
pop
sub
sti
call
movsb
ds
pop
mov
pop
aas
js
xchg
cmp
stos
inc
divl
push
lock
bound
pop
cmp
push
dec
pop
insl
cli
leave
stos
daa
out
int3
lcall
pop
inc
sub
std
test
or
mov
cmpsl
clc
pop
aad
mov
push
pop
adc
mov
iret
bound
rcr
and
push
dec
cmp
and
loopne
pop
sub
mov
addr16
rolb
push
jg
in
stc
jp
and
jo
lret
sbb
inc
popa
jno
mov
xor
pop
and
into
aam
pop
adcl
in
outsl
mov
or
mov
pop
lods
mov
push
pusha
mov
mov
vfmaddpd
xor
cli
std
in
fmuls
out
pop
pop
adc
in
xor
inc
in
inc
and
and
enter
daa
add
pop
shlb
div
mov
mov
mov
inc
enter
pop
in
scas
jecxz
testb
mov
xchg
jle
outsl
pop
arpl
sbb
add
lds
pop
clc
stos
xchg
mov
cld
add
jge
dec
sbb
pop
or
add
pop
in
add
push
sub
cmp
cltd
insb
pop
lods
lea
and
clc
ficoms
pop
sub
inc
scas
fxch
jae
pop
scas
xchg
es
and
popf
mov
movl
or
aam
mov
scas
lcall
mov
pop
arpl
xchg
xchg
jle
lahf
xchg
fs
inc
adcl
sbb
cs
sub
mov
push
xchg
add
aaa
fstps
adc
cld
adc
lock
loopne
pop
pop
ret
or
inc
clc
pop
pop
les
inc
pop
jns
test
int3
fistl
sbb
popf
sub
inc
leave
fwait
mov
es
cmp
cmp
mov
and
ss
aas
pop
outsb
add
and
pop
xor
aad
movsl
mov
pop
movsb
lret
fisubl
lds
cltd
jle
pop
fs
xchg
add
or
pop
inc
popf
add
pop
lret
push
fisttpl
inc
inc
outsb
push
cltd
pop
and
pop
sar
jg
push
cmpl
xorb
sbb
mov
jecxz
pop
ficomps
cltd
sarb
sahf
test
jge
popf
cmpsb
push
out
mov
sub
or
loopne
mov
enter
and
jmp
dec
je
xor
aad
jmp
ret
inc
cmp
xor
in
jae
adc
fcmovnbe
scas
xchg
ret
test
into
repnz
or
pop
xor
lods
scas
movsb
lcall
pop
xchg
aaa
push
or
icebp
int3
cmc
repnz
out
sub
inc
leave
dec
insb
fiadds
divps
dec
add
push
inc
xor
ret
out
cmp
jnp
mov
pop
mov
and
push
fucomip
pop
mov
lds
jg
pop
in
xchg
push
loopne
sub
scas
add
pop
aaa
cltd
je
pop
inc
pop
jle
idivl
pop
mov
ficomps
push
jnp
stc
pushf
pop
push
divl
cmp
ret
mov
cmp
lds
rcrl
xor
daa
sub
cs
and
push
push
pop
sub
fwait
mov
fcompl
je
andl
pop
data16
outsl
dec
gs
into
dec
adc
xor
fcompl
add
mov
repnz
js
ret
test
lcall
mov
lock
jne
pusha
imul
adc
jns
pop
and
pushf
pop
icebp
push
subb
fstp
mov
pop
push
jge
jbe
push
pushf
push
pop
cli
and
cld
sub
pop
xor
jae
pop
out
inc
pop
mov
fsubs
out
pop
mov
into
ljmp
cli
mov
inc
inc
cmp
in
pusha
les
mov
pop
pop
lods
gs
mov
stos
mov
pop
inc
jge
push
cmp
push
loop
pop
lahf
xchg
xchg
jae
inc
or
mov
mov
stos
leave
jg
ret
shll
pop
pop
push
pushf
lods
shl
sbb
pop
add
mull
mov
add
adc
pop
cmp
xchg
imul
lcall
movsl
int
sbb
cs
ja
cmp
inc
push
sahf
adc
jg
inc
lcall
in
jp
jmp
pop
ja
pop
dec
sbb
insl
repnz
lods
mov
adc
das
or
pop
int
jb
xor
pop
sub
cwtl
mov
pop
jae
js
mov
xor
pusha
leave
pop
xor
test
les
je
xor
pop
arpl
add
cwtl
dec
sahf
and
mov
stos
add
pushf
pop
jl
das
repnz
in
shlb
add
imul
test
pop
pop
outsb
icebp
add
mov
arpl
pop
inc
push
cmp
xor
jle
loop
pop
xor
inc
std
sbb
ret
popa
leave
jecxz
adc
pop
inc
mov
adc
or
mov
stos
in
push
lods
cmc
lahf
pop
sbb
pop
mov
lcall
or
shrl
jbe
push
or
imul
push
sbb
xchg
daa
mov
es
pop
pusha
xlat
mov
inc
pop
and
mov
pop
loope
pop
gs
xor
pop
scas
arpl
les
xchg
cltd
dec
cld
pop
jge
adc
cmp
pop
idiv
int
insb
cmpsb
push
add
adc
and
fwait
pop
repnz
cs
scas
sahf
mov
xchg
push
and
mov
addr16
sahf
mov
pop
or
mov
popf
lea
or
fwait
dec
inc
es
pop
adc
sbb
rcr
xor
sti
pop
push
je
or
pop
xor
jb
xorl
aad
call
mov
and
jb
sub
inc
cmp
into
xchg
ret
out
inc
cs
and
lret
test
pop
outsb
cmp
push
pop
and
pusha
cmp
lock
cmp
test
adc
or
or
jbe
lods
ficoms
mov
ret
xlat
lahf
repz
test
sub
pop
jle
cmp
rcll
jg
adc
adc
jecxz
and
lret
pop
or
popf
sbb
enter
add
mov
xor
mov
and
icebp
insl
pop
rcll
inc
adc
xor
sbb
mov
pop
scas
popa
add
inc
adc
stos
sub
std
mov
xor
pop
fst
out
repz
mov
or
dec
pop
fisttpll
and
push
pop
xor
mov
out
jnp
cwtl
loope
fimuls
insl
inc
push
mov
pop
sbb
mov
repnz
sub
mov
jmp
push
push
adc
fsubp
cmpsl
scas
pop
cmp
popf
sub
pop
jo
in
push
bound
mov
mov
jns
sti
jge
pop
xchg
dec
cmpl
stos
out
mov
lock
push
pop
ljmp
xor
pop
cmp
jl
push
mov
and
push
repz
inc
push
sub
test
and
dec
sahf
aaa
mov
sti
jae
into
jnp
push
leave
add
ficomps
fnstsw
sub
pop
mov
loope
pop
insb
jb
mov
jl
cmp
sbbb
jg
pop
sti
pop
cmp
stos
mov
xchg
xor
out
pusha
ja
lahf
loope
adc
sbb
fstl
pop
jne
xor
imul
pop
dec
cmp
lret
pop
mov
mov
jg
pop
orb
pop
mov
in
pop
jbe
out
ljmp
push
jnp
mov
and
push
mov
mov
lret
enter
dec
push
aas
stos
pop
mov
jge
ret
out
mov
pop
loop
pop
pop
xchg
pop
faddl
js
cs
ds
sbb
fnstsw
insl
mov
jno
pop
pop
dec
shl
fisubrl
lahf
ss
pop
stos
mov
inc
mov
fidivl
mov
xchg
iret
test
inc
jmp
jno
shll
push
dec
fidivrl
fsubp
fldl
dec
xchg
test
xchg
dec
pop
addr16
jle
adc
adc
lods
and
jecxz
push
in
loope
insl
mov
das
push
and
and
jae
aas
xchg
pop
pop
fnstsw
mov
scas
cltd
repnz
mov
pop
nop
adc
pop
int3
notb
or
mov
insl
cli
inc
mov
pop
dec
inc
fmul
sbb
adc
push
test
pop
xchg
lods
fxam
pushf
rol
or
imul
shlb
dec
sub
pop
out
push
daa
xchg
and
dec
ret
push
incl
lret
mov
rol
pop
std
dec
test
jecxz
popa
push
test
mov
outsb
xchg
dec
add
stos
ds
and
lahf
adc
sbb
popl
xor
lods
cwtl
push
sub
pop
cmpsl
mov
mov
push
cmp
add
daa
fcoms
pop
outsb
inc
and
cmovl
jbe
fidivrs
dec
xlat
mov
je
mov
int
inc
inc
jmp
cltd
xor
cwtl
mov
arpl
lcall
xchg
repnz
in
imul
pop
cmp
fisubs
mov
push
sti
jle
add
aaa
mov
push
cltd
aam
pop
insb
mov
popf
hlt
loopne
pop
cmc
cmp
insl
cmp
jnp
arpl
out
jns
add
dec
inc
push
pop
popf
inc
inc
jb
jno
sti
sub
lahf
inc
repz
sbb
pop
and
in
xor
xchg
insl
xor
push
mov
aad
leave
xchg
mov
ja
fidivrl
out
lret
xchg
jle
pop
xor
xchg
pop
xchg
mov
pop
mov
ja
push
lret
pop
into
fstpt
rol
outsb
cmp
inc
nop
and
xchg
add
mov
lock
stc
mov
jge
test
cmpsl
pop
pop
mov
ja
xchg
fimuls
pop
aad
repnz
push
repz
pop
inc
cmpsb
sti
add
pop
xchg
rcrl
dec
jo
cmp
les
mov
mov
jp
out
push
or
push
or
pop
sbb
hlt
jmp
lods
dec
lcall
and
and
mov
test
dec
pop
loop
push
xchg
inc
or
mov
je
lea
ss
ficomps
cld
add
data16
out
in
pop
stc
popf
sub
dec
fildll
flds
xchg
gs
pop
mov
insl
insl
popa
pop
js
pop
lret
cmp
mov
push
fwait
add
or
jmp
pop
loop
out
sub
adc
push
aaa
sbb
add
lock
movsl
pop
xchg
fs
int3
incb
mov
pop
ss
sub
test
insl
dec
insb
and
dec
das
jge
out
mov
mov
pop
sub
cmp
int3
in
pop
add
aaa
mov
pop
outsl
inc
jbe
popf
shll
pop
push
aaa
push
or
icebp
mov
adc
mov
rcrl
aaa
dec
cmp
loop
jge
dec
lods
and
lcall
int
xchg
pop
cmpsl
push
cmp
xor
fmull
in
arpl
jl
mov
cmpsb
fwait
incb
and
and
inc
jbe
xchg
clc
negl
dec
or
lret
jb
mov
popa
adc
sbb
sub
pop
incl
xor
nop
xchg
sub
out
mov
or
out
inc
pop
iret
ret
jb
mov
mov
dec
pop
inc
addb
imul
add
pop
and
jne
sub
scas
jp
insl
leave
lods
test
xchg
mov
das
int
pusha
inc
pushf
mov
lods
mov
sti
pop
test
stos
adc
clc
pop
fisttps
xor
rclb
xchg
and
add
jbe
mov
sub
outsb
lret
mov
mov
push
cmp
xchg
mov
pop
mov
mov
push
jns
out
ret
pop
jp
cmpsl
in
mov
or
fisttps
add
stc
mov
lcall
mov
lock
cs
repz
inc
jns
out
pop
ja
cmpsb
popf
and
pop
imul
pop
dec
push
daa
adc
pop
xchg
add
mov
jnp
push
inc
cs
push
test
out
stos
aad
ds
lock
pusha
xor
and
pop
stc
dec
cmpsl
shrb
mov
imul
pop
jle
and
pop
xor
dec
sub
cwtl
lcall
outsb
jecxz
xchg
adc
xchg
sarl
push
lea
pop
push
sub
cmpsb
mov
sarl
xor
scas
jle
ficoml
pop
inc
add
ds
or
xchg
jge
mov
pop
push
fisubrs
out
or
pop
pop
mov
cmova
add
test
and
aam
xor
and
sbb
sbb
pop
mov
shll
popa
dec
pop
fldl
push
ret
lock
cmp
loope
mov
pop
pop
xchg
jl
filds
sbb
jo
add
add
pop
lcall
mov
adc
mov
sti
push
pop
lods
outsb
imulb
or
mov
inc
int
lret
cmp
lcall
add
test
sbb
xchg
icebp
rcr
xlat
xchg
outsb
enter
xchg
test
lcall
popf
and
push
jno
movsb
and
adc
add
sbb
lcall
orl
pop
divl
inc
inc
test
mov
push
xor
popa
sub
pusha
jo
pop
insl
fnstcw
pop
adc
pop
xor
insl
pop
jb
popa
imul
aaa
inc
cmp
cmpsl
push
sarb
insl
mov
inc
pop
push
push
pop
xchg
mov
mov
add
cmp
pusha
dec
jmp
stos
test
dec
ret
sub
sub
dec
inc
in
pop
scas
jns
cs
push
lea
mov
test
subl
subl
pop
subl
sbbl
orl
addl
mov
jp
dec
lea
mov
test
orl
xor
xorl
cli
jge
inc
cmp
aas
mov
inc
xor
sbb
fcomi
fwait
out
jmp
into
test
clc
xchg
into
xor
aam
addb
popf
aas
cmp
or
rcll
mov
push
or
sbb
or
and
loop
clc
mov
addr16
scas
mov
mov
es
mov
lea
cmp
sbbl
cmc
sbbl
or
adc
push
xor
push
stos
ljmp
orl
out
cmp
adc
inc
push
and
aas
loopne
xor
inc
std
dec
lds
daa
dec
in
dec
aaa
dec
xor
dec
xchg
jno
pop
xchg
ss
push
pushf
cmp
or
lds
fwait
inc
inc
mov
push
add
sbb
fistl
stos
and
lods
out
xor
lods
shrb
pop
or
arpl
add
and
mul
xchg
lcall
pop
sub
sub
stos
jl
inc
lods
add
ljmp
lods
shrl
jae
in
push
cltd
and
movsb
pop
movsb
sub
movsb
jmp
fimull
xchg
xchg
sub
jp
dec
push
sbb
ljmp
test
pushf
cltd
xchg
push
sub
mov
mov
cmp
fadds
mov
mov
mov
sub
sbb
push
inc
test
xchg
mov
xchg
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
jp
dec
push
sbb
ljmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
sub
sbb
stos
cmp
push
test
cltd
mov
mov
mov
mov
dec
mov
mov
mov
mov
mov
mov
mov
xchg
mov
mov
lea
or
sub
sbb
rcrl
icebp
pop
rcrl
lods
in
sarl
dec
inc
sbb
inc
cmp
out
dec
jecxz
popf
dec
mov
pop
sub
loopne
sbb
dec
jnp
sub
in
adc
xor
cmp
xchg
xlat
or
and
mov
ss
arpl
int3
sub
sti
xchg
mov
fsubs
or
inc
or
mov
es
mov
inc
arpl
sbb
jmp
test
movsb
stos
movsb
cli
movsb
lret
movsb
movsb
mov
dec
add
and
add
aad
sti
movsb
push
mov
movsb
dec
movsb
shld
cmp
movsb
repnz
movsb
test
mov
jbe
dec
gs
mov
mov
lods
movsb
lahf
movsb
stc
movsb
rep
cltd
movsb
push
movsb
cmpl
xchg
inc
insl
push
mov
jge
pop
and
arpl
add
and
and
jb
push
insl
or
mov
mov
addl
orl
adc
xor
mov
int
or
inc
xor
push
add
add
or
or
or
mov
push
dec
add
les
test
inc
cmp
inc
xchg
and
pop
pushf
mov
js
lods
cmpsl
insl
jg
fidivrs
or
push
xor
inc
jecxz
repz
orl
mov
dec
jno
inc
dec
loope
add
pop
out
xor
xchg
xor
push
clc
lods
cwtl
movsl
addr16
mov
lds
outsb
mov
mov
mov
mov
mov
mov
fidivrs
xchg
cs
test
jbe
dec
mov
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
sbb
xchg
xchg
xchg
xchg
xchg
mov
xchg
nop
aas
pop
fldl
inc
lods
dec
movsl
dec
std
dec
cmc
dec
int
lds
lods
data16
mov
lods
test
add
pop
fstpl
insl
ret
mov
or
xor
push
cmc
add
add
and
dec
out
xor
dec
xchg
dec
mov
add
movsl
pop
movsl
mov
in
xchg
xchg
xchg
pop
or
xor
aaa
and
or
mov
mov
mov
test
mov
push
sbb
in
add
or
loop
cmp
inc
cmp
insl
dec
inc
mov
dec
dec
xchg
dec
insl
dec
gs
mov
dec
xchg
stc
jp
inc
xchg
cmpsl
cmc
aad
icebp
pop
mov
cmp
std
adc
cwtl
sub
xor
ret
adc
das
in
lcall
jo
push
mov
lea
adc
or
pop
xor
sbb
fildl
sbb
fwait
jle
jbe
dec
faddl
or
push
jno
and
daa
mov
push
fdivrs
ret
xor
cmp
mov
xchg
add
xlat
sub
pop
xor
test
imul
mov
or
pop
mov
xlat
inc
push
into
scas
pop
add
add
aas
jecxz
andl
mov
dec
push
adc
xchg
rcrl
xchg
fs
dec
gs
mov
mov
movsb
shll
andl
mov
les
popa
xorl
jbe
push
push
fwait
push
push
out
cwtl
pop
arpl
sub
subl
daa
ret
adc
xor
adc
pop
jbe
and
test
clc
push
into
sti
ss
data16
push
cmp
scas
pop
push
jge
movsb
clc
das
xchg
xchg
pop
fdivl
push
call
or
xchg
jge
in
sub
ds
or
push
test
mov
adc
pop
inc
repz
outsb
sbb
push
jno
add
or
adc
pop
or
pushf
int3
pushf
gs
sbbb
out
jne
add
lock
adc
cmp
jg
mov
mov
std
xor
dec
inc
xor
in
jg
jnp
mov
mov
loope
stos
mov
test
adc
mov
dec
lea
mov
xor
ret
cmp
push
mov
and
fdivp
add
sub
loope
mov
f2xm1
cmp
ret
cwtl
jp
aad
icebp
sbb
fidivrs
cmp
mov
enter
mov
dec
or
test
push
loop
push
adc
int
sbb
xor
jp
xlat
sbb
test
icebp
or
push
sahf
fisubs
loop
xchg
out
xchg
push
ljmp
cmp
inc
pop
cmp
aas
in
pop
sarb
jno
xsave
push
xor
push
cmp
test
out
jp
mov
sub
sahf
mov
insl
cmp
mov
sbb
pushf
jge
dec
pushf
inc
pushf
sbb
pushf
in
cmp
pushf
add
pushf
repnz
ret
cwtl
pop
xor
test
clc
jb
sbb
insl
add
sub
and
mov
sub
ret
in
add
arpl
cvtpi2ps
xchg
les
xlat
or
mov
jmp
jbe
aaa
mov
sub
jbe
lods
xor
cmc
cmp
or
or
or
or
loop
mov
jnp
lods
add
and
mov
jbe
inc
xchg
push
insl
push
gs
mov
xor
fldl
andl
lods
mov
mov
inc
push
roll
xor
mov
orb
dec
repnz
hlt
dec
mov
pop
inc
sbb
aad
sahf
dec
fwait
mov
mov
outsl
xchg
inc
jle
or
pop
inc
xor
adc
sub
inc
cmp
jnp
mov
les
add
and
lcall
mov
jns
and
pop
sbb
xlat
jo
mov
fwait
lcall
sbb
and
dec
test
clc
lret
xchg
dec
jecxz
cmp
addr16
test
clc
stc
enter
addr16
xchg
leave
popa
xchg
or
pop
movsl
mov
or
int3
popa
cs
loopne
cmpsl
push
sub
mov
and
aas
test
cmp
arpl
cli
inc
test
sub
aam
clc
aam
call
cmpsl
mov
add
add
xchg
inc
dec
dec
imul
rorl
icebp
into
pop
mov
adc
sarl
sbb
mov
xchg
aas
sbb
enter
loopew
es
mov
mov
inc
fistpl
xchg
push
sahf
sbb
mov
xchg
xchg
mov
add
sarl
stc
inc
mov
add
xchg
push
sub
mov
cmpb
enter
sub
les
idivb
mov
push
mov
enter
and
iret
loop
mov
test
movsl
mov
cmpl
pop
or
aas
in
inc
insb
inc
mov
dec
dec
jno
pop
dec
int3
dec
pushf
dec
arpl
push
inc
pop
mov
test
lahf
pop
stos
lods
scas
adc
fidivl
jp
fcmovbe
out
xor
mov
cmpsl
inc
and
sbb
rcrl
xchg
out
xchg
sub
sbb
sbb
push
scas
pop
xor
pop
fs
push
adc
jne
dec
xchg
dec
mov
dec
jge
jne
dec
dec
inc
dec
sbb
cmpsl
xchg
cmp
in
mov
dec
mov
clc
adc
cmp
adc
repnz
xor
loopne
pusha
jp
mov
les
lods
jns
int
or
xor
mov
fisttpll
mov
fldcw
xchg
xor
sub
or
jge
mov
lcall
std
cmc
rorb
mov
mov
mov
enter
lods
pop
push
push
jle
cmp
lock
ficomps
xlat
mov
mov
sti
mov
jb
fiadds
xor
inc
push
inc
mov
mov
push
jge
push
addl
lock
jl
pop
aas
arpl
add
mov
sub
mov
xchg
out
sbb
sbb
xchg
lcall
add
mov
xor
or
or
or
or
or
or
ljmp
xchg
push
dec
icebp
in
ja
jno
cmpsb
les
mov
pop
pop
adc
pop
sbb
mov
ds
out
jo
lcall
cmp
inc
sbb
add
xchg
jnp
inc
sbb
rcrl
cwtl
in
xor
adc
jno
stos
movsl
lret
test
sbb
stc
adc
mov
push
pop
push
ss
test
stc
loopne
push
icebp
rcrl
add
sbb
ficomps
cli
jbe
xchg
push
lods
repnz
loopne
pop
dec
popa
ret
pop
or
sbb
xchg
enter
sub
xchg
loope
lea
inc
inc
icebp
dec
mov
add
dec
int3
mov
cli
lods
and
in
fldl
int3
insl
gs
fldt
gs
insl
jecxz
pop
movsb
push
movsb
sub
jb
dec
sub
sbb
in
imul
leave
fimuls
cmpsb
mov
mov
mov
out
mov
insl
fiaddl
jb
mov
cmp
cs
es
addr16
out
xchg
mov
xchg
jns
cmp
xchg
subl
mov
lea
push
subl
fnsave
sub
sub
adc
mov
pusha
mov
outsb
sub
mov
cmp
and
lods
jle
jbe
dec
inc
jno
les
cli
jo
lcall
mov
push
xchg
or
push
pop
int
lds
jge
jne
dec
addr16
mov
in
mov
mov
mov
leave
ds
inc
cmp
xor
jmp
fwait
add
out
push
push
fnstsw
or
sahf
pop
rorl
xchg
or
or
and
cmpsl
add
mov
adc
ret
movl
cmc
cmp
push
pusha
push
mov
pushf
xchg
neg
xchg
rcr
mov
shl
mov
mov
bsf
test
mov
sub
shl
stc
mov
rcl
or
pusha
mov
rcl
neg
not
lea
ja
xor
call
not
pushl
mov
pushl
mov
pushf
pushf
pushl
ret
add
inc
jb
popa
je
inc
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
test
jecxz
leave
or
xlat
inc
std
aad
ret
sahf
rcr
stos
mov
test
lahf
loope
test
out
fucomi
cmc
iret
jbe
movsb
mov
xlat
push
mov
in
mov
int
mov
lods
aad
out
mov
push
add
xor
popa
icebp
fbld
jecxz
push
in
cmp
pop
ret
test
test
cwtl
stc
or
addr16
ret
ljmp
push
add
xchg
movsl
mov
dec
inc
adc
fimuls
ficompl
or
inc
jl
or
sbb
dec
popf
sub
jecxz
cmp
mov
pop
jle
out
out
push
sbbl
cld
pop
es
popa
bound
mov
adc
pusha
jp
daa
cmpsl
aaa
xchg
out
cmc
insl
mov
or
ret
sub
jecxz
mov
mov
test
ljmp
dec
jmp
cmp
jo
xchg
mov
sbb
mov
fwait
jl
in
dec
and
fabs
cmp
mov
scas
lods
lock
mov
ret
ss
data16
add
cmp
mov
mov
clc
iret
lea
sbb
mov
or
cltd
enter
lret
jecxz
mov
movsl
inc
out
add
inc
loop
ret
pusha
xchg
fldcw
fcmovne
xchg
mov
jbe
fmul
or
cmp
sub
jp
inc
adc
inc
sbb
cmp
xchg
jp
push
pop
es
insb
push
push
and
inc
mov
mov
xor
add
add
mov
xchg
std
ljmp
cmc
lods
pushf
dec
mov
lcall
mov
cltd
jp
popa
movsl
clc
and
lds
mov
sub
sbbb
je
popa
jae
inc
jb
outsl
jb
add
inc
imul
gs
cmpb
gs
inc
add
stos
push
add
lea
call
pushf
lea
jb
push
pusha
pushl
ret
call
pushl
jmp
push
call
sbb
loope
and
dec
jp
add
and
add
insb
gs
imul
jae
popa
je
push
imul
lea
push
call
add
dec
outsl
arpl
gs
jne
arpl
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
in
mov
add
gs
jb
arpl
jae
gs
jo
add
inc
fs
jae
push
outsl
imul
jb
jbe
insb
gs
add
dec
jo
outsb
push
jb
arpl
jae
push
call
pop
data16
lahf
movzbw
not
mov
pushf
pusha
lea
jmp
add
dec
gs
jo
gs
insb
insb
outsl
arpl
add
inc
gs
imul
je
or
mov
sbb
movsb
dec
push
loop
arpl
or
add
mov
adc
adc
and
jne
xchg
pop
int
js
push
jecxz
xchg
negb
jns
ret
sub
push
das
cs
popf
push
add
mov
push
xchg
in
or
jne
jle
lea
gs
pop
sarb
mov
cli
lods
push
mov
repz
xchg
lahf
std
mov
add
xchg
shrl
add
loopne
xor
jecxz
mov
inc
mov
fcmovb
xchg
data16
movsl
ret
xchg
aam
add
ficomps
test
enter
pop
stos
push
inc
cmp
gs
mov
sub
dec
add
lret
or
jb
sarb
add
push
gs
outsb
jne
dec
gs
add
inc
and
stos
pusha
movl
mov
jmp
add
inc
js
je
jb
arpl
jae
add
imul
fs
gs
outsb
je
pushf
xor
cmp
push
bt
movw
add
test
pusha
xor
jmp
add
stc
pushf
mov
pusha
xor
bt
cmc
cmc
pushw
popfw
pushl
pushf
push
jmp
add
inc
js
je
push
add
in
ds
push
pusha
lea
jae
pusha
movl
lea
jne
push
pushf
pushf
jmp
lea
jae
jmp
jo
popa
jo
cs
insb
add
add
outsl
ja
imul
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
sbb
sahf
cmpsb
xchg
add
pop
or
or
jl
test
ficoms
leave
jbe
pushf
and
mov
xchg
popf
xor
fiaddl
ljmp
sub
rcrb
addl
out
pop
dec
pop
and
or
enter
fst
mov
inc
pop
in
inc
jmp
adc
jnp
pop
lret
and
mov
fisubrs
js
push
mov
sbb
pop
push
in
sahf
aas
add
push
jle
addb
and
mov
test
pop
and
arpl
push
mov
daa
pop
inc
ljmp
nop
or
push
jp
shlb
push
cmp
lds
or
nop
pop
cmc
es
push
jb
mov
loopne
lahf
lret
in
fiadds
cmp
scas
jp
dec
or
jg
rorl
pop
add
jmp
mov
test
xchg
inc
les
ds
adc
pop
hlt
jae
push
sub
call
movsl
addr16
pushf
dec
jns
into
pop
push
push
mov
and
pop
js
mov
cwtl
ret
mov
pop
lret
jecxz
call
inc
mov
mov
push
adc
mov
sbb
scas
mov
pop
xchg
lock
xorl
pusha
pop
mov
xor
push
std
push
fincstp
mov
xchg
dec
insl
pop
scas
mov
out
mov
xor
shlb
roll
add
div
or
icebp
pop
loope
and
pop
cmp
dec
scas
sub
ja
sbb
aad
sahf
daa
xchg
mov
inc
push
ljmp
aad
mov
pop
jp
push
sbb
cmpsb
aad
mov
push
mov
push
ljmp
les
add
sub
sub
xor
lods
into
ja
mov
inc
test
scas
sub
or
popf
daa
data16
push
and
sbb
aad
sahf
daa
insl
jp
sbb
xchg
lods
loop
aad
std
aad
mov
push
sbb
sbb
pop
mov
jp
push
shrl
mov
in
jp
push
cmpsb
lods
ja
jle
mov
dec
aad
fldenv
std
jp
push
mov
xor
cmpsb
sahf
daa
mov
push
test
enter
cmp
push
pop
dec
daa
cmp
push
into
lods
insl
ja
je
jg
sbb
adc
xor
lock
mov
sub
sbb
push
imul
aad
lods
daa
int
xchg
push
mov
and
aad
ret
jle
mov
mov
ja
push
sbb
aad
leave
daa
outsb
jp
push
and
fcmovbe
mov
pop
pop
pop
and
push
lods
cmp
sbb
aad
test
and
lods
shlb
sbb
push
out
daa
push
jp
push
push
lea
sbb
cmpsb
jp
push
imul
aad
cmc
daa
xchg
jp
pop
rcl
xchg
scas
sub
ja
sbb
aad
mov
enter
cs
es
loope
cmc
js
scas
sub
aad
or
inc
lret
popa
js
fiadds
pop
sub
jp
push
aad
stc
ja
sbb
test
push
jno
sbb
sbb
aad
mov
pop
dec
lods
into
js
fisubrs
pop
mov
std
into
jnp
leave
push
scas
mov
mov
sti
mov
dec
aad
add
popf
js
ret
addr16
aad
xchg
pop
xchg
jmp
sbb
inc
fisubrs
adc
pop
xchg
jo
lods
sub
adc
sbb
enter
pop
mov
ret
jae
and
adc
dec
sbb
pop
dec
mov
lcall
sbb
pop
jmp
mov
pop
or
and
nopl
pop
adc
dec
dec
add
push
xor
enter
fs
std
fnstsw
sahf
cltd
insl
pop
out
pop
in
out
imul
mov
cmp
pop
std
pop
mov
test
bound
xor
push
scas
push
sub
inc
mov
stos
pop
xor
pop
push
mov
fwait
imul
shrb
adc
mov
and
fsubs
je
push
cmp
or
inc
jo
test
lods
adc
xorb
pop
push
leave
lcall
or
sbb
pop
mov
cwtl
pop
jl
mov
mov
dec
add
jae
cltd
aam
ljmp
push
push
subl
inc
out
nop
into
push
or
push
les
cmp
adc
jbe
cld
popa
dec
sub
sbb
pop
cmc
inc
dec
xchg
cmp
fmull
or
jno
pop
push
pop
cwtl
adc
es
insl
jo
int3
ss
fistps
dec
pop
in
and
test
out
xchg
lods
fwait
imulb
lret
lea
push
push
shlb
sub
mov
pop
lods
sbb
movb
pop
inc
repz
xchg
cmp
stc
jb
test
cmp
fcoml
pop
cmp
call
push
rcrb
or
arpl
xchg
popf
dec
push
and
in
loopne
fdivrl
dec
mov
xor
hlt
cmpsb
pop
shll
jle
mov
jne
pop
mov
lock
int3
cld
push
pop
pop
push
sbb
pop
adc
sbb
mov
adc
mov
cmpl
inc
stos
fdivl
inc
mov
xlat
push
ss
push
push
sbb
in
stc
aam
gs
mov
test
ficompl
idivb
popf
insl
outsb
sbb
adc
sub
aam
push
or
shrl
test
and
pop
pop
lcall
xor
aam
leave
pop
pop
mov
test
je
cmp
mov
sahf
adc
inc
pop
sahf
insb
add
lret
mov
and
dec
fstl
insl
xchg
xor
ljmp
mov
sbb
lea
fdivrp
fdivrs
mov
pop
clc
mov
and
xor
setg
movsl
pop
pop
add
loop
push
sub
stc
sahf
sti
push
cmp
fimuls
mov
cmpsb
push
ret
jle
mov
ret
test
sbb
es
test
nop
cmp
out
arpl
mov
fsubrp
inc
cltd
pushf
push
sbbb
jno
or
aaa
or
in
mov
out
out
fs
sbb
rcrl
mov
lcall
push
fmull
xor
insl
mov
pop
adc
jns
pop
aas
loop
lahf
ret
scas
ficomps
insl
js
and
mov
dec
jl
push
test
xchg
and
push
jp
dec
inc
fsubr
xlat
loope
xchg
pop
jp
addr16
mov
andl
sub
jecxz
pmulhuw
or
pushl
pop
jbe
xchg
lret
inc
lcall
call
push
popf
sbb
loop
push
sbb
xchg
add
shll
inc
lret
mov
sahf
repnz
fbstp
popa
push
xchg
addr16
pushf
jmp
pop
aad
out
sub
pop
dec
sub
and
mov
mov
dec
pop
sbbl
ret
and
std
jl
push
fcompl
adc
push
fwait
adcl
mov
mov
and
out
hlt
pop
jp
push
xchg
push
cmc
fstpl
fnstcw
sub
mov
inc
pop
insl
cmp
pop
inc
jge
fadd
loop
pop
inc
lock
sti
pop
dec
and
sub
pop
pop
dec
jne
mov
xlat
loop
adc
sub
cwtl
pop
cmp
into
shll
push
ds
sahf
jle
adc
xchg
add
jns
fcom
dec
repnz
and
jp
jge
cmc
cwtl
and
pop
mov
add
mov
test
loopne
ficomps
dec
stos
pop
lea
rcrb
jno
and
pop
xor
repz
mov
ret
pop
pop
adc
mov
push
or
enter
add
pop
dec
test
outsl
mov
jb
mov
loopne
and
fstpl
inc
or
outsb
push
arpl
fwait
pop
push
push
xor
add
lcall
cld
mov
cli
pop
imul
fsubl
lret
lret
push
xchg
stc
call
sub
sahf
or
jge
inc
sub
pop
adc
cld
scas
jg
cmp
loopne
xchg
jmp
or
loop
mov
mov
mov
inc
repnz
mov
xor
out
xchg
cmpsb
push
ljmp
xchg
adc
pop
sub
leave
dec
fstl
pop
insb
outsb
in
push
imul
fldln2
stos
push
mov
shrb
add
mov
gs
mov
inc
add
int3
pop
les
int3
out
xchg
ljmp
sbb
repz
scas
inc
push
jl
sbb
and
jecxz
pop
stos
outsl
imul
stc
mov
testl
mov
sahf
test
nop
push
pop
mov
or
ds
cmpsl
or
xor
insb
sub
test
sbb
aaa
cmp
push
sbbl
pop
pop
lods
jg
mov
dec
push
inc
out
inc
sub
or
loopne
jecxz
pop
jp
push
sub
js
lahf
add
pop
mov
xchg
pop
push
and
aad
sti
add
addb
cwtl
pop
jb
sbb
mov
rcrl
or
hlt
stos
fcomps
fimull
adc
pop
add
mov
and
add
popf
jg
pop
mov
mov
inc
or
xchg
push
push
dec
pusha
dec
js
shlb
adc
push
fcoml
push
fsts
xor
push
movsb
jnp
pop
jmp
out
pop
lds
inc
addr16
dec
gs
push
mov
subb
xchg
jb
inc
imul
xchg
aad
jecxz
popa
adc
jbe
sbb
cwtl
out
rolb
mov
pop
inc
dec
adc
pop
cmpsb
adc
popa
stc
add
pop
cmp
shrl
jmp
fstps
push
lods
jmp
jb
xor
into
scas
pop
aam
in
std
icebp
mov
outsl
dec
push
clc
mov
cwtl
cmp
lods
pop
mov
leave
pop
iret
pop
div
aam
jl
incl
ficoms
pusha
enter
movb
lods
inc
nop
sarl
les
xor
mov
inc
push
in
jp
stos
or
adc
push
mov
loopne
int3
inc
jne
lock
aam
or
dec
and
popa
fsubr
sub
push
lds
out
mov
push
shl
fists
pop
and
shl
leave
fnstenv
mov
inc
or
sbb
pop
jo
mov
lcall
lods
scas
jle
jecxz
insb
inc
out
pop
jmp
decl
add
aas
pop
out
or
pop
jae
in
cld
jbe,pt
mov
loop
cmp
pop
subb
pop
orl
les
jns
pop
jb
sarb
and
repnz
pop
push
aas
xchg
pop
xor
inc
mov
dec
repz
fisttpll
mov
pop
sbb
push
jl
lock
dec
repnz
movsb
push
mov
inc
pop
mov
test
insb
fsubp
pop
test
ficompl
shr
mov
mov
push
pop
xchg
pop
addl
gs
cmc
ds
mov
pop
add
das
push
jle
mov
pop
sub
and
fisubs
sub
cmpsl
sbb
cmp
sub
pop
jmp
cmpsb
pop
push
dec
pop
orb
dec
pop
pop
cmp
fimuls
std
mov
jae
out
imul
cs
scas
cld
hlt
aam
inc
inc
dec
sti
movsb
push
push
fwait
cltd
bound
mov
mov
ljmp
dec
pop
dec
cmp
jmp
pop
mov
movsb
xchg
iret
stos
das
ftst
sbb
test
pop
push
and
cmp
fcompl
add
dec
test
xchg
xchg
fdivrs
cwtl
rcrb
inc
jmp
sbb
cs
adc
pop
inc
sub
mov
popa
insl
aaa
sbb
es
mov
out
pop
js
xchg
loop
xor
cmp
xchg
sarl
sbb
imulb
sbb
stc
sarb
xchg
ja
filds
jecxz
dec
fwait
cmpsl
inc
and
fidivs
xor
lret
inc
popa
xchg
rcll
sbb
jl
pop
mov
or
push
dec
daa
test
inc
pop
cmp
mov
sub
sub
pop
mov
dec
aaa
out
jbe
pop
dec
xchg
pusha
fisubrs
mov
ret
daa
cmp
arpl
sub
leave
pop
nop
mov
mov
test
out
adc
icebp
sahf
inc
xchg
mov
push
or
repnz
mov
mov
mov
dec
lret
dec
push
out
pop
dec
mov
sti
cmp
inc
out
adc
out
das
xor
imul
addl
pop
cwtl
jge
pop
and
adc
movsb
fistps
adc
fstl
pop
dec
pop
sbb
inc
and
mov
mov
rcll
jb
pusha
pop
mov
enter
lods
scas
dec
push
push
jae
outsl
into
pop
aad
insl
add
jge
cmp
pop
fisubs
adc
push
and
mov
rep
std
popf
xchg
mov
push
pop
mov
pop
imulb
mov
faddl
test
dec
xor
rorb
outsb
stc
pop
repnz
scas
scas
cld
push
jne
fadds
push
pop
jmp
mov
lcall
ds
xchg
fcoml
cmc
pop
mov
call
mov
push
jcxz
sub
push
xor
pop
enter
in
push
and
outsl
push
or
mov
inc
pop
add
pop
dec
mov
pop
in
xorl
pop
lea
or
pop
push
inc
push
int
adc
pop
sbb
pop
mov
les
bound
push
cmp
ja
jp
data16
pop
lds
xchg
sub
sbb
push
push
pop
sbb
pop
adc
shl
pop
das
fcmovbe
inc
add
ret
pop
mov
call
mov
enter
fstp
sub
pop
adc
in
sqrtps
jmp
out
lcall
cli
fcoms
mov
sub
inc
leave
add
sbb
jmp
imul
sub
xor
jb
lock
bnd
pop
ja
sub
stos
adc
pop
sub
inc
push
pop
fs
push
sahf
sub
jnp
lds
pop
inc
adc
icebp
cmc
cmp
sbb
insl
and
cmpl
jno
xchg
rcr
mov
fwait
lock
adc
imul
inc
shrl
cmpsb
stc
in
cmpsl
inc
xchg
pop
cmc
pop
or
cli
inc
cmp
mov
sbb
pop
mov
xchg
push
cli
push
mov
out
pop
arpl
pop
dec
cmp
hlt
pop
sbb
jbe
insb
movsb
pop
push
inc
jbe
sbb
popa
pop
orb
pop
aaa
or
jmp
add
popf
push
jo
xchg
mov
pop
ljmp
xchg
pop
and
lahf
mov
sub
and
rcrl
xchg
push
cmp
fdivrl
in
rcrb
pop
pop
add
push
cmpsl
incl
dec
stos
cwtl
aad
rcll
ds
insl
ss
or
inc
fidivs
pushf
mov
pop
and
xchg
or
imul
pop
jbe
test
add
adc
pop
and
data16
inc
mov
sti
fcmove
inc
jge
pop
imul
loope
pop
loop
js
out
fsts
fstl
xchg
mov
daa
sbb
out
mov
sbb
xchg
aaa
or
mov
dec
lcall
jne
xchg
push
enter
ret
mov
pop
rcrl
xchg
mov
rcrb
int
or
mov
pop
mov
mov
mov
sahf
jo
sbb
pop
fs
icebp
push
dec
push
fistpll
add
lcall
fmul
ss
sub
mov
cs
iret
hlt
cmp
sahf
mov
cmpsl
pop
pop
inc
xor
push
xor
popf
pop
pop
sbb
cld
fwait
adc
xor
mov
xchg
pop
pop
pop
xchg
adc
pop
sub
insb
leave
mov
push
addr16
inc
pushf
xchg
xor
out
mov
or
jb
cld
sbb
out
sub
sub
jno
adc
mov
and
adc
sahf
push
sbb
or
out
jg
push
dec
pop
mov
sti
addr16
jo
sbb
mov
cwtl
pop
fnsave
mov
xlat
push
sbbl
and
in
add
imul
jle
into
and
inc
adc
test
loop
lods
cltd
add
lock
pop
lods
xor
out
lea
pop
mov
sahf
movsl
imul
repnz
push
push
fsubl
in
push
sub
call
ss
aad
add
pop
xor
cmc
shrb
jb
mov
pop
stc
mov
xlat
subl
fsubrl
out
lock
dec
pop
loop
es
pushf
fiadds
mov
inc
mov
xor
jb
popa
pop
xchg
mov
ret
pop
xchg
lahf
dec
sti
jns
inc
bound
movb
outsl
sub
mov
int3
sahf
orb
xchg
inc
imul
mov
mov
sbb
inc
push
mov
jns
pop
adc
repz
loop
imul
pop
into
lret
ds
push
push
xchg
pushf
pop
or
decl
cmove
mov
xor
mov
and
pop
jl
ret
sub
test
insb
xchg
scas
sub
shll
pushf
scas
lret
insb
mov
adc
lods
push
lcall
xlat
fs
dec
adc
pop
xchg
leave
xchg
pushf
pop
or
xlat
sub
icebp
add
ret
sbb
sbb
or
jno
pop
loop
fucompp
push
enter
sub
fwait
push
mov
mov
pop
lret
lea
mov
dec
or
pop
pop
xchg
inc
mov
pop
push
xchg
cli
pop
cs
test
dec
inc
mov
or
inc
mov
int3
mov
push
pushw
mov
leave
dec
iret
call
pop
jno
cmp
out
sti
in
or
inc
inc
inc
outsl
orb
jp
mov
arpl
adc
lea
pop
push
xchg
lds
out
lods
pop
push
in
adc
sbb
jno
mov
sub
xchg
roll
push
frstor
fadd
mov
pop
rolb
jb
out
imul
icebp
pusha
xchg
jecxz
mov
leave
add
or
sbb
addl
int3
pop
icebp
push
stos
cmpl
iret
out
mull
outsl
int
adc
lahf
pop
mov
pop
in
mov
out
xorb
xchg
fs
pop
pop
sbbb
xor
jbe
pop
mov
pop
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
jne
jae
jb
outsl
jae
inc
out
ljmp
mov
mov
xor
in
xor
adc
jae
sarl
jmp
sbb
push
cmp
cmpsb
xor
inc
mov
xor
xchg
push
popl
inc
pusha
fsubrl
dec
adc
dec
out
dec
pop
mov
jmp
push
clc
imul
js
cld
inc
rorl
out
add
xchg
adc
rolb
rol
sarb
adc
ret
cmp
jmp
mov
push
call
xor
add
fs
imul
add
mov
push
pushl
ret
mov
lea
je
not
mov
shl
shrd
mov
test
push
bt
add
pusha
cmc
pushf
stc
mov
movl
test
jmp
cmp
jmp
mov
movzbw
mov
pushf
lea
jae
push
pusha
mov
movsbw
call
stos
mov
lea
jmp
push
call
add
and
jne
pushf
pushf
pushf
stos
push
lea
jmp
sub
int3
rorb
dec
out
repz
push
mov
dec
xchg
mov
dec
leave
mov
outsl
push
adc
or
xchg
and
adc
jno
mov
hlt
jno
stos
lcall
push
mov
imul
mov
cmp
js
rcrb
mov
cwtl
jle
bound
loope
pop
pop
in
mov
adc
mov
xor
data16
in
test
mov
inc
pusha
cs
pop
mov
dec
dec
cmp
lea
je
shl
movzbw
mov
btc
btr
shl
bts
mov
cmc
sub
clc
shr
stc
pusha
mov
movl
cmpl
movb
pusha
push
jmp
lea
je
push
mov
pusha
push
lea
jmp
add
dec
inc
inc
outsl
insl
jo
gs
outsl
jb
jb
add
and
int
push
pop
pop
dec
xor
xor
jae
orb
cmovp
loopne
fwait
pusha
push
lds
fbstp
fwait
mov
roll
dec
icebp
sub
inc
mov
pop
cs
aam
adc
js
gs
ret
mov
fcoml
jl
sbb
and
out
test
shl
rclb
cmp
dec
push
push
push
push
dec
cmc
xchg
ja
mov
jnp
or
pop
xchg
rcrl
pop
and
in
lea
pop
lea
je
not
test
btc
add
mov
cmp
bswap
bswap
sub
xadd
bts
rol
shr
cmc
inc
mov
clc
pushf
adc
add
shld
shl
jmp
add
outsb
je
push
and
sub
sbb
and
sbb
xor
jg
cmp
sti
ja
adc
adc
ljmp
adc
mov
cltd
icebp
into
test
test
out
jne
scas
scas
xchg
adcb
loope
sbb
nop
sbb
xor
aam
lock
mov
inc
or
mov
hlt
pushf
pop
shlb
jnp
mov
out
cmp
cltd
data16
sbb
dec
cmp
xchg
cwtl
mov
dec
xchg
fmull
fistl
lret
adc
cmp
xor
andb
and
mov
insb
gs
imul
arpl
inc
imul
mov
not
stos
pusha
push
pushf
mov
call
add
inc
gs
jne
jb
outsb
je
push
dec
add
mov
cmp
and
daa
xor
jg
sbb
loop
push
mov
aad
or
mov
paddq
insl
pusha
pop
jbe
lret
add
push
rclb
bound
jle
jb
in
xchg
push
jl
and
cld
inc
inc
mov
stc
jae
aam
scas
mov
in
push
out
inc
jmp
pop
mul
cmp
out
fidivs
and
jg
test
movsl
or
mov
pop
ret
dec
cmp
addr16
outsl
jae
bound
popa
insl
gs
mov
lea
jne
call
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
lcall
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jo
outsb
push
imul
popa
je
outsl
outsb
inc
add
add
outsl
bound
dec
outsl
arpl
imull
sahf
test
jb
push
jo
mov
testl
jecxz
add
into
dec
rcr
fprem
pop
shrb
jge
and
mov
mov
sbb
xchg
in
lcall
stos
adcb
cwtl
cwtl
ja
repz
ljmp
cli
jle
lcall
sbb
add
shlb
adc
ffreep
stos
mov
stos
cmpsl
cwtl
xor
lods
outsl
mov
or
insb
ss
fwait
sbb
fisttpll
dec
xor
xchg
adcb
pop
fwait
sbb
jmp
sbb
push
aam
call
sbb
xor
mov
inc
repz
or
jle
mov
jg
mov
into
dec
faddl
mov
jle
xor
gs
popa
addr16
outsl
js
add
je
cmc
push
push
pushl
test
push
pusha
push
lea
je
clc
test
push
cmp
and
pushf
pusha
pushl
lea
jmp
pushf
jmp
add
arpl
outsb
arpl
js
aam
mov
movsb
xchg
xchg
aam
fcomps
push
in
sub
imul
mov
shr
mov
or
push
push
insl
andb
insb
hlt
lea
outsb
icebp
test
xor
sub
lret
hlt
sbb
sti
inc
lret
mov
and
mov
xchg
dec
pop
sbb
mov
je
sub
jnp
les
sub
jp
pop
arpl
sub
jle
arpl
dec
int3
int3
mov
orb
xorb
inc
dec
dec
inc
jecxz
mov
iret
rcrl
sub
fwait
sub
sbbl
jb
pushf
fimull
dec
jo
ret
mov
add
adc
bound
sub
jbe
imul
add
cwtl
xchg
test
into
inc
mov
mov
fnstsw
push
mov
sub
popa
sub
mov
and
push
mov
mov
and
mov
add
popa
cs
mov
pushf
inc
mulb
mov
cltd
adc
add
xor
mov
or
mov
shlb
in
and
stc
loope
push
arpl
xchg
jecxz
xchg
fmul
mov
push
cmc
mov
sub
xor
das
bsf
mov
cmp
test
call
inc
pusha
mov
not
not
not
inc
not
call
jmp
add
inc
gs
gs
dec
bound
arpl
loope
lret
rol
adc
mov
inc
mov
push
testl
and
nop
adc
mov
sbb
xor
xchg
xchg
cltd
notb
arpl
pop
inc
scas
out
push
sti
shr
out
push
xchg
ds
in
xchg
or
daa
stos
pop
lds
lods
cmp
mov
pop
int3
gs
imul
cmpb
cmpsb
and
mov
xchg
xor
ds
xor
or
push
mov
dec
sbb
cmpsb
lcall
in
xor
insl
xchg
rclb
arpl
cmc
lods
xchg
push
add
in
leave
outsb
adc
in
fsubrp
cmp
add
add
gs
je
push
popa
insb
gs
add
add
gs
insb
inc
js
arpl
gs
add
sub
push
pushf
pushl
call
push
call
je
lcall
jo
les
test
out
pop
push
lret
ljmp
push
pop
dec
repnz
sahf
or
ficompl
mov
rcr
js
mov
xor
stos
dec
xor
xor
push
adc
pop
mov
in
repz
jecxz
sbb
cmp
xchg
xchg
hlt
in
mov
outsl
lea
mov
dec
mov
ret
xor
pusha
dec
sub
xchg
cltd
call
arpl
add
in
enter
imul
and
scas
in
push
dec
push
aam
fs
hlt
imul
sbb
sub
mov
test
test
add
add
add
inc
jno
popf
int3
add
pop
aas
push
push
push
negb
mov
movsb
add
lcall
cmp
fbstp
xor
pusha
pushf
lea
call
push
lea
jae
bt
bt
pushf
xor
push
call
call
add
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
gs
outsb
add
nop
ss
in
out
mov
stos
inc
xor
fwait
stos
test
xchg
push
psrlq
jae
push
jae
ja
daa
push
or
xor
das
scas
mov
call
mov
dec
sub
inc
or
lret
jne
mov
dec
sarb
sub
iret
jb
dec
cmp
xchg
mov
aaa
xor
mov
xchg
add
and
iret
jle
adcl
ljmp
cmp
xor
dec
or
fwait
stos
mov
test
lcall
or
jmp
loope
adc
jle
bound
push
dec
sub
andb
jae
add
test
sub
xchg
int3
inc
sbb
out
test
push
push
lds
xchg
mov
bound
lahf
xchg
or
ret
addl
inc
sbb
cltd
out
push
adc
push
sbb
push
es
jmp
sahf
push
adc
mov
jnp
hlt
test
addr16
mov
mov
xor
dec
mov
jnp
gs
ljmp
cmp
dec
push
inc
in
xchg
cmp
test
mov
pop
dec
aaa
and
sbb
and
mov
test
add
dec
cmp
pop
adcb
add
mov
js
sub
pop
mov
adc
sahf
and
xchg
sub
sbb
nop
stos
inc
insb
mov
mov
std
out
in
in
nop
push
or
mov
xor
pop
xchg
imul
push
xor
jmp
add
inc
jb
popa
je
inc
jbe
outsb
je
add
stos
lret
sar
mov
test
and
clc
bt
jmp
ljmp
pop
or
cmc
fbstp
movsl
test
xor
out
mov
adc
adc
inc
adc
mov
cltd
mov
lock
push
in
stc
mov
inc
dec
add
push
and
test
out
sub
std
xor
int
xchg
xor
ds
mov
es
sbb
sub
dec
lea
or
jecxz
leave
pop
sub
or
call
xor
mov
movsl
jb
aaa
call
push
mov
lea
movzbl
pop
pushf
pushl
ret
add
arpl
inc
gs
jb
jbe
jb
gs
jb
jo
imul
popf
daa
add
push
call
decb
inc
insb
outsl
jae
push
gs
imul
insb
add
push
cmp
pushf
addl
pushf
lea
jmp
lea
jae
push
inc
clc
push
bt
ror
bt
call
lea
call
push
push
lea
jae
pushf
xor
pushl
lea
call
jmp
jmp
neg
jmp
or
xchg
xor
repz
sbb
leave
out
mov
cltd
add
js
cwtl
daa
push
scas
pop
dec
xor
xorb
inc
add
inc
gs
gs
arpl
popa
jo
add
cmp
loop
xchg
xchg
lcall
stc
push
or
xchg
or
repz
xchg
stos
and
and
aad
xchg
mov
leave
jecxz
mov
cld
icebp
ljmp
inc
repnz
dec
scas
fs
xor
add
icebp
pop
push
dec
cmp
pushf
cmpsl
clc
cmc
pushw
popfw
mov
inc
jmp
add
inc
gs
bound
arpl
add
inc
gs
gs
imul
adc
call
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
seto
push
shrd
xor
lea
jmp
mov
stc
cmp
mov
pusha
sub
inc
call
push
call
and
add
jb
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
in
pop
call
pop
jmp
movzbw
bswap
movzbw
pusha
mov
lea
setbe
movzbw
mov
jmp
adc
in
frstpm(287
repz
xlat
lds
mov
mov
fwait
and
aad
negb
into
mov
pop
pop
xchg
or
add
push
imul
xor
cmpsl
js
test
adcl
mov
nop
test
push
test
call
add
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
cmpsb
test
fisttps
or
fcoms
insb
stos
add
inc
stc
cmp
pop
push
xor
mov
into
cmp
popa
xchg
and
push
enter
orb
jmp
mov
sub
rcrb
cs
stc
xor
and
cmc
nop
in
leave
cmp
jp
out
lods
out
shl
fwait
adc
lret
sahf
push
mov
js
lea
pop
int
addr16
insl
pop
iret
lret
mov
jl
divb
add
inc
pop
sahf
cmp
andl
lret
jl
pushf
jecxz
push
jg
mov
ljmp
cmp
maxps
into
jne
out
mov
fisttpl
push
clc
mov
mov
lret
sub
daa
pop
pushf
xor
inc
fisubrl
xchg
xchg
jp
js
push
leave
shlb
jmp
add
inc
gs
imul
outsl
arpl
add
inc
gs
imul
add
inc
imul
dec
gs
popa
addr16
add
xor
lea
call
pusha
jmp
add
inc
gs
outsl
fs
gs
imul
js
add
in
pop
call
cmp
ror
test
push
test
mov
xor
clc
call
add
inc
imul
loope
ljmp
in
sub
aas
add
push
jmp
cmp
mov
stos
push
aas
sub
mov
ret
dec
add
lcall
outsb
push
sbb
mov
inc
jno
cmp
loopne
fadd
mov
pop
into
inc
mov
add
and
lods
jne
pop
mov
ss
lret
mov
add
push
outsb
fs
gs
popa
addr16
add
jb
gs
xor
cs
insb
add
xorb
push
mov
xchg
mov
stc
adc
inc
dec
mov
push
cmp
sti
jno
adc
pop
jl
pop
test
lock
les
adc
es
and
xor
xor
xor
mov
jmp
inc
sub
mov
pop
adc
mov
jb
lods
fwait
dec
inc
cmp
aad
and
pop
dec
ljmp
cmp
sbb
sub
orb
aaa
stc
xor
adc
fidivl
add
mov
xchg
jge
push
and
test
mov
inc
std
sub
or
or
jl
mov
cmc
stc
xor
repnz
xor
shll
inc
mov
push
jne
xor
aad
xor
nop
or
push
ljmp
movsb
sti
push
and
stos
flds
leave
aad
call
arpl
jmp
jge
stc
out
out
outsl
push
ljmp
pop
lcall
mull
add
fcmovne
leave
enter
cmpsl
adc
loop
cwtl
jb
pop
int3
adc
adc
enter
dec
sarb
mov
jns
and
pop
adc
sub
mov
lea
repnz
hlt
mov
mov
je
pop
sbb
mov
cmp
xor
pop
xchg
xchg
mulb
push
inc
and
xor
repnz
pushf
test
je
popa
jae
dec
outsb
jo
je
outsb
outsw
add
mov
mov
leave
imul
les
aam
sub
dec
xlat
jge
dec
inc
dec
rorl
sarl
xchg
push
shrb
and
cmp
fisttpl
loopne
ljmp
push
and
jb
bound
enter
cmp
jp
out
sbb
fildl
jg
pop
js
xchg
out
cmpl
push
stos
sub
sub
outsl
push
lret
sarb
add
push
inc
lcall
sbb
cmpb
push
push
push
call
std
xlat
lret
faddl
sarb
xchg
jle
jo
add
pop
movb
icebp
jno
stos
mov
mov
jne
aam
inc
into
mov
orl
pushf
xor
xor
push
clc
stos
jmp
sub
sub
pushf
out
dec
in
adc
cmpsl
mov
inc
inc
cmp
xorl
xrelease
xchg
lods
mov
shll
ja
adc
sub
outsl
pop
dec
inc
inc
in
xchg
aas
in
in
jae
aad
rcll
mov
push
sub
scas
and
sub
and
aaa
cmp
lret
sub
bound
clc
xor
xchg
mulb
inc
pop
outsl
lret
sbb
jb
std
mov
xrelease
xchg
stos
push
cs
pusha
inc
push
mov
and
fmul
mov
xrelease
mov
movq
leave
dec
fsub
shlb
or
mov
notb
and
xchg
mov
add
pop
jne
les
jmp
rclb
jmp
cmp
bound
add
jb
mov
insb
outsl
jae
push
imul
popa
je
outsl
outsb
add
sar
shrb
adc
jmp
xchg
sti
stc
in
jmp
negl
test
add
pop
jp
add
mov
pop
ss
pop
xchg
in
mov
sbb
or
add
jb
imul
je
gs
xchg
movsb
xchg
fimuls
adc
xor
dec
dec
add
popf
addr16
jae
adc
sahf
cmp
cwtl
add
sbb
in
jmp
xlat
xchg
fidivl
bswap
lea
jmp
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
out
rol
int3
enter
adc
add
cmc
xchg
addb
inc
ja
fimull
fdivrs
sti
out
les
add
cmpsb
movsl
testb
mov
xchg
cmp
repnz
in
mov
and
mov
jno
out
xchg
cmp
sbb
cwtl
rolb
lea
stc
popf
sarl
repnz
subl
in
xchg
mov
arpl
fistl
pop
sub
cmpsb
sub
add
add
cld
pushl
loope
sub
inc
add
in
add
inc
insb
outsl
bound
inc
jb
add
in
lret
dec
add
jle
push
popl
dec
push
push
aas
and
fnstenv
js
and
loope
jno
jg
pop
aas
scas
lods
jns
cld
std
xchg
mov
xchg
dec
lcall
xor
sub
sub
mov
push
pop
xor
push
outsb
clc
nop
sub
fcos
jno
cmp
mov
movsl
mov
xchg
test
nop
addb
pop
fstl
sbb
sar
out
in
fst
leave
scas
dec
movsb
dec
ds
or
cmp
cmc
fnstsw
orl
mov
cmp
mov
sbb
sbb
adc
adc
lcall
inc
popf
loopne
mov
pop
xchg
ljmp
xchg
dec
clc
scas
hlt
sub
out
pop
mov
jecxz
stos
dec
jecxz
and
xchg
or
scas
jp
jns
in
cmp
fwait
inc
inc
dec
xor
sub
cmpl
sub
and
ret
cs
in
dec
xor
jne
mov
aam
fs
mov
cs
push
push
jecxz
push
sbb
mov
add
sbb
movsb
jb
push
mov
movsl
mov
addr16
insb
pop
mov
in
xchg
mov
cmp
clc
jle
mov
xchg
ret
sbb
pop
pop
xchg
xchg
lea
je
cmp
clc
test
mov
pusha
aas
shr
mov
movb
test
call
pusha
pop
mov
push
pushl
bswap
jmp
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
in
cs
cmpsb
add
and
ja
dec
setnp
inc
call
add
push
gs
jb
outsl
jb
outsl
fs
in
mov
mov
shr
jmp
fs
je
clc
pusha
cmp
push
test
jmp
add
inc
js
je
imul
js
add
push
insb
jae
gs
popa
insb
jne
add
xchg
jmp
incl
add
insl
push
outsl
inc
push
add
push
je
push
outsb
ja
outsb
add
add
gs
imul
jbe
xchg
jmp
icebp
cmc
popf
iret
lret
in
xchg
psubd
inc
fisubrl
push
add
xor
push
popa
push
push
dec
in
mov
mov
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
in
push
call
mov
lea
je
pushf
pusha
cmp
pusha
call
ja
outsb
imul
insb
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
xchg
inc
call
call
add
inc
gs
imul
bound
gs
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
data16
imul
mov
xchg
test
icebp
jns
inc
aaa
mov
jge
pushf
cmp
addb
mov
and
sbb
fdivs
xor
cmp
adc
das
lret
inc
rorl
and
jnp
incl
add
je
imul
push
jo
arpl
js
add
in
or
hlt
dec
add
stos
lods
pushf
xchg
call
cld
mov
fdivrs
xorb
loop
movsl
gs
mov
push
sbb
adc
stos
roll
cmp
adc
mov
lahf
sub
in
mov
mov
ret
out
mov
push
ja
jp
outsb
xchg
or
sbb
or
adc
or
test
ss
leave
int3
cmp
test
sub
and
ljmp
xchg
adc
and
or
dec
inc
aas
inc
cmp
sub
xor
cmpb
jmp
icebp
xchg
inc
popf
xor
and
jl
out
or
xchg
scas
jle
and
push
mov
imul
loope
adc
cmp
repnz
paddb
rcl
xchg
clc
push
shl
lea
add
and
pop
subl
sbb
inc
mov
cmp
push
fs
aas
push
or
testl
test
push
jo
xor
out
mov
pop
xor
lds
push
dec
addr16
clc
addr16
cmp
mov
in
cmpsb
mov
or
out
inc
push
add
pop
aam
sbbl
loopne
into
jne
add
lea
call
add
dec
outsb
je
jb
gs
jo
outsb
push
jb
inc
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
push
push
inc
inc
gs
popa
jae
inc
jb
outsl
jb
push
call
insl
push
mov
jbe
push
mov
out
push
jp
fldl
cmpsb
mov
push
clc
xor
inc
aaa
sbb
test
fs
call
pushf
adc
push
call
mov
pushf
pushf
pushf
pushl
ret
mov
mov
bt
test
push
shr
push
call
je
test
pushf
jmp
lea
call
push
call
add
outsb
je
push
xor
incl
shrd
shrd
lea
cmc
bt
mov
jmp
sbb
add
ja
add
loop
add
push
xchg
add
xchg
addb
dec
and
add
popl
add
add
dec
or
mov
add
adc
add
cs
add
out
add
add
inc
add
jg
add
mov
add
sub
add
and
add
mov
add
and
push
or
and
add
add
out
add
add
add
dec
and
add
or
add
pop
and
push
fadds
add
push
add
xchg
and
cmp
add
jbe
add
call
add
add
add
filds
add
aas
add
jno
add
out
and
xchg
addb
add
add
dec
add
lods
sub
add
lock
mov
add
cmpsl
mov
add
add
aam
add
adc
add
loope
add
and
add
in
add
fildl
add
lods
mov
add
add
mov
add
imul
add
mov
add
add
jbe
add
shll
add
mov
add
rcl
add
add
lret
add
hlt
add
testl
add
cmpsb
std
add
pop
xlat
add
pop
incb
add
popl
add
add
mov
add
inc
add
and
add
cs
add
or
add
int
add
push
dec
add
fsubr
add
orb
add
dec
add
push
dec
add
xchg
aas
add
push
or
testl
add
das
add
repz
xchg
add
inc
sub
add
dec
daa
add
ljmp
add
popl
add
inc
add
and
add
push
sti
add
out
mov
add
and
into
inc
add
add
add
mov
cmp
add
lcall
add
repz
mov
add
movsb
aas
add
cltd
std
add
and
add
stos
nop
add
ret
add
testl
add
testl
add
dec
add
loope
add
fisttpll
add
add
add
push
add
add
add
inc
dec
add
xchg
and
add
add
add
flds
add
addb
adc
add
addb
add
mov
add
add
jns
add
bound
add
xchg
dec
add
rolb
add
hlt
add
lahf
and
test
add
loopne
add
cmp
add
mov
mov
add
popl
add
dec
add
xchg
or
pushf
add
xchg
mov
add
mov
add
add
mov
add
sub
add
out
add
mov
aas
add
sbb
add
and
add
outsb
mov
add
incl
add
cmp
add
popf
add
add
inc
add
in
add
add
add
pop
icebp
add
sarl
add
push
stc
add
xor
add
pop
xchg
add
jae
add
pusha
and
add
sbb
cld
add
add
add
out
add
xor
add
xor
add
mov
add
data16
add
add
add
sbb
add
add
add
mov
add
sub
repz
cmp
add
jge
add
add
das
add
sbb
add
dec
repnz
fmull
add
xchg
inc
add
mov
cmp
add
sub
add
js
add
adc
add
add
add
add
cmpsb
std
add
add
add
nop
xor
add
add
fimull
add
add
add
clc
add
add
add
push
test
add
add
mov
popl
add
add
add
clc
add
add
add
or
add
add
add
aas
dec
add
push
and
ja
add
add
add
adc
add
add
add
pop
adc
cmp
pop
pop
push
js
rcrl
jbe
dec
out
adc
push
mov
pop
sbb
jle
pop
and
js
outsb
sbb
and
scas
test
lods
frstor
stos
enter
ret
push
cwtl
test
xchg
nop
pop
aad
in
inc
mov
push
push
jle,pn
dec
push
jge
inc
sbb
push
sarb
or
insb
mov
fimuls
push
jecxz
mov
and
std
les
out
push
and
scas
sub
ja
sbb
jle
push
push
jbe
inc
dec
jbe
sub
aaa
roll
push
cltd
sub
and
push
int
inc
mov
or
push
out
test
ret
dec
and
es
jb
clc
dec
sub
pop
outsb
push
lahf
jbe
dec
jle
cmp
cmp
pop
push
xchg
xchg
xchg
mov
ror
sub
ret
insb
mov
fwait
outsb
mov
or
xor
push
cmp
mov
test
inc
data16
scas
mov
fdivrl
xchg
insl
push
enter
inc
xchg
push
test
add
aad
push
push
scas
pop
xchg
cs
push
and
es
add
dec
inc
jo
int
mov
sub
movsl
cmpsb
daa
out
in
lods
gs
sbb
push
jp
push
test
pop
aad
fisubl
sbb
push
cltd
lods
lcall
cli
daa
cmp
push
mov
sbb
aad
stos
daa
ljmp
ja
sbb
leave
lret
jp
push
mov
push
aad
shlb
adc
push
xchg
lods
xchg
ja
sbb
icebp
repnz
xor
push
mov
mov
and
and
mov
loope
bound
inc
aad
ret
jp
push
subl
daa
sbb
push
xchg
lods
cwtl
ja
sbb
idiv
daa
cmp
push
mov
mov
aad
test
call
lods
addr16
sbb
enter
pop
push
xchg
dec
aad
shlb
adc
push
lods
nop
ja
sbb
out
lock
xor
push
scas
lods
mov
and
pop
aad
mov
push
pusha
lods
pop
ja
sbb
aad
shlb
jp
push
jg
subb
mov
pop
arpl
cmp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
sbb
jp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
sbb
jp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
sbb
jp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
sbb
jp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
sbb
addr16
loop
sbb
sbb
addr16
loop
sbb
jp
loop
sbb
jp
loop
sbb
addr16
loop
sbb
addr16
loop
sbb
scas
sub
ja
sbb
std
ds
mov
lods
out
ja
sbb
int
daa
lea
push
aad
push
ja
sbb
cmc
ss
mov
inc
cmp
sub
push
les
add
mov
push
cmc
pop
rolb
jbe
aad
inc
daa
pop
jp
push
sub
jb
and
pop
jp
push
sub
jo
and
fs
je
pop
fs
pop
fisubl
sbb
adc
cmp
jbe
dec
ja
sbb
aad
ds
push
jp
push
std
lods
popf
arpl
sub
jns
ret
mov
push
data16
cmp
movsl
cmc
popf
adc
int
jecxz
inc
and
imull
pop
and
inc
sub
in
jne
push
std
stc
movsl
jne
daa
sub
sbb
fs
jle
pop
ficoml
push
push
push
es
and
and
add
cmpl
pop
lods
cs
sub
scas
es
mov
mov
jo
lds
inc
jo
jb
jl
dec
sub
mov
xchg
mov
mov
pop
flds
ret
call
pop
js
jp
fs
jbe
jo
jb
add
xchg
dec
mov
mov
pop
nop
inc
xor
fstps
hlt
adc
lcall
leave
test
and
push
jmp
int
push
data16
lds
scas
jle
in
fwait
sbb
xchg
data16
sub
int
scas
sbb
std
or
popf
cs
or
sbb
add
dec
cmp
incl
add
outsb
inc
insb
imul
add
and
pusha
inc
lea
pusha
pusha
lea
call
pusha
adc
jmp
btc
sar
cwtl
push
mov
cmc
call
add
push
gs
imul
bound
gs
add
add
arpl
je
call
pusha
mov
mov
jmp
inc
pop
rcrb
iret
adc
and
pop
push
sub
sub
shlb
add
or
int3
es
xchg
inc
sub
mov
or
inc
push
xorb
sub
cmc
jne
pop
mov
cmp
xor
daa
lods
adc
ds
jp
int3
shlb
or
and
popf
inc
int3
out
push
cmp
inc
jmp
dec
cli
mov
cmp
push
daa
xor
pop
popf
sbb
mov
or
pop
ss
aad
push
cli
dec
fsubr
sbb
or
ret
dec
les
movsb
daa
xchg
dec
lods
insl
imul
or
inc
or
fst
inc
mov
rclb
scas
push
scas
aas
scas
ss
icebp
dec
aam
cmp
xchg
jle
xchg
sub
rcr
hlt
ss
pop
inc
xchg
popf
xor
push
popf
cmc
sub
push
lret
out
addr16
test
jbe
pop
pusha
pop
add
aas
add
in
pop
mov
push
fadds
pop
outsb
lods
mov
pop
movsl
imul
lds
out
hlt
pop
pop
xor
addr16
subb
push
jge
bound
out
dec
push
insl
dec
push
jp
jns
lods
lret
fwait
sub
xchg
leave
sub
movb
jbe
mov
inc
add
or
shl
mov
stc
adc
out
popf
cmc
jp
pop
cmp
pop
sbb
mov
ss
inc
repnz
lods
cmc
sub
sar
mov
fcoml
or
push
rorb
inc
fmuls
xchg
mov
std
insl
mov
aam
pop
mov
hlt
inc
lock
adc
aam
inc
sub
dec
mov
pop
test
push
fdivp
pop
sbb
dec
mov
cmpl
dec
dec
push
and
or
sub
jle
imul
mov
inc
add
xchg
mov
xchg
in
repnz
mov
and
scas
adc
inc
cli
fisubs
mov
mov
test
pop
pop
sub
mov
jp
jecxz
sub
pop
pop
xor
ja
pop
gs
lea
sbb
and
imul
sbb
mov
xor
mov
xchg
push
lods
hlt
push
arpl
movsl
std
fucomip
shll
les
push
outsb
sub
cmp
test
popf
pop
icebp
jnp
jb
shrl
addr16
fs
push
sub
cmpsl
inc
repnz
dec
pop
lods
jecxz
push
lods
addr16
out
testb
in
dec
pop
xchg
out
jno
or
mov
outsb
das
push
inc
call
pusha
je
xor
nop
push
pop
jnp
xchg
sbb
mov
jbe
push
repz
inc
sub
jmp
cmp
ret
mov
sbb
adc
lods
push
or
push
fscale
mov
mov
mov
pop
stos
inc
and
loopne
call
push
xchg
int3
test
iret
pop
mov
popa
les
jecxz
push
scas
dec
imul
std
xor
dec
mov
cmp
aad
jle,pt
test
fwait
ficoms
clc
push
sub
hlt
push
mov
cmp
clc
cs
rcll
aam
dec
pop
sbb
mov
xchg
xchg
mov
imul
test
ds
outsb
mov
out
jne
shrb
cld
out
mov
jge
sbbl
push
call
pusha
ss
push
cmp
movsl
addr16
imul
test
das
fisubrs
ss
dec
and
out
mov
pusha
xchg
push
push
sahf
adc
outsl
pop
mov
sbb
insl
outsb
pop
imul
xchg
loop
jl
stc
jmp
jp
sarl
in
mov
out
shrb
hlt
addr16
sbb
push
mov
iret
ja
and
arpl
daa
pop
int
dec
pop
push
pusha
jge
test
insl
xor
push
adc
shlb
inc
in
mov
xor
rcll
xchg
sbbl
imul
mulb
jns
inc
and
push
pop
mov
push
dec
push
lahf
and
inc
out
mov
xchg
push
jbe
sbb
movsb
cmp
jle
insl
jb
sub
adc
std
in
or
in
and
test
nop
outsl
pop
jno
dec
push
inc
addr16
jne
lods
test
adc
call
shlb
out
jp
cwtl
fnsave
mov
popf
mov
jle
push
lahf
fisubrs
mov
pop
cmp
fcoms
stc
mov
mov
ret
icebp
sbb
cld
ds
std
and
fimuls
sub
fsubs
and
loop
sti
dec
adc
push
inc
lock
mov
fcomps
jno
or
imul
out
xlat
add
ret
mov
sbb
sti
lahf
cmc
popa
pop
jle
subb
sub
shlb
jge
outsb
fimull
inc
inc
dec
cltd
jg
addr16
inc
or
dec
sub
int
xlat
js
std
das
cli
mov
and
mov
cmp
jnp
mov
mov
cltd
lahf
push
addr16
jns
insb
out
adc
push
ret
insl
cld
xchg
in
sub
jp
frstor
xchg
cmp
push
sub
lahf
add
ljmp
loope
js
and
mov
mov
xchg
pushf
ds
fsubrs
add
xchg
test
movsb
test
cmp
inc
pop
imull
jp
xchg
aad
jo
addr16
xchg
fbld
shll
push
adc
xlat
cs
mov
frstor
nop
sbb
popf
push
decb
test
mov
ss
push
fidivl
inc
pop
mov
sub
xchg
test
mov
js
lret
adc
push
out
enter
ja
insl
lahf
flds
out
pop
leave
aaa
pop
test
mov
aad
int
cs
mov
or
insl
aam
movsl
test
add
out
shll
xchg
fildl
andb
xor
testl
aas
sbb
jp
shrl
je
scas
cmp
push
sbb
mov
fwait
push
cmp
roll
xchg
ds
pop
outsb
sub
jae
jns
popf
push
sbb
dec
sarb
jmp
xchg
imul
cli
aaa
ds
ljmp
or
fdivs
cmp
xchg
xlat
or
cmp
stc
addr16
in
inc
cmpsb
cmc
push
je
mov
sbb
fstpt
inc
repnz
stos
dec
lcall
cli
insb
popf
lcall
out
pop
cmpsl
jns
mov
ss
jle
ljmp
sbb
and
dec
sbb
sub
test
and
pop
add
sub
jecxz
lret
dec
inc
push
idiv
pop
mov
mov
and
loop
mov
and
xor
into
mov
aad
lds
sub
cltd
jle
xchg
fidivrl
das
fsubrs
mov
mov
aas
lahf
ficomps
fisubl
or
jl
insl
push
arpl
jle
arpl
ds
and
mov
insl
inc
jl
lds
test
icebp
dec
jp
sbbb
cmc
cli
jmp
xor
lahf
jle
push
xor
mov
test
and
scas
mov
daa
lds
and
fstl
sub
mov
stc
add
dec
xor
rol
mov
and
pop
std
pop
idivl
les
in
fxch
and
xchg
stc
pop
fs
cmp
mov
popf
es
out
cmp
rorb
push
enter
mov
stc
ja
lret
pop
dec
insl
icebp
mov
push
cs
pop
les
mov
dec
mov
and
or
inc
pop
scas
inc
outsb
ljmp
fsubs
and
popf
ret
aam
insl
xor
mov
std
fcomps
jp
push
mov
movsb
add
xchg
and
mov
inc
mov
push
popa
or
addr16
movsl
adc
mov
adc
xchg
outsl
lahf
adc
push
outsl
dec
pop
add
sahf
push
mov
out
into
popa
xchg
subl
fisubrs
mov
outsb
sub
push
inc
popa
int
mov
push
sub
leave
xchg
je
mov
std
jge
repz
sbb
cmp
xchg
cli
mov
cmpsb
mov
mov
popf
clc
ljmp
ja
mov
sbb
pop
dec
xchg
jae
mov
popf
xchg
cmp
sub
insb
sub
push
cmpsl
fsubrs
cli
xchg
pop
cld
lods
out
scas
and
or
in
fsubs
and
sub
or
xor
inc
mov
and
xorb
dec
mov
cld
jno
jne
out
sub
add
andb
jp
mov
lcall
xchg
lock
xchg
repz
push
mov
and
jno
mov
cmp
repz
fwait
std
out
or
scas
out
popf
insl
jb
jbe
lods
cltd
je
mov
stc
xchg
sub
nop
and
pop
outsb
popa
test
popf
gs
dec
xor
lds
xchg
add
out
jo
mov
push
clc
test
ret
push
pop
mov
push
fdivrs
cmp
pop
gs
push
fmulp
push
out
les
test
ror
lods
js
lock
aaa
aam
es
xchg
clc
xlat
or
add
enter
mov
jp
xchg
pop
push
aad
out
push
sub
jbe
lea
inc
sub
mov
push
lret
loop
mov
scas
add
inc
add
add
dec
push
fisubl
pop
or
jo
lods
leave
push
jb
xchg
fisubrs
add
adc
jns
mov
scas
pop
test
adc
lea
push
pushf
lahf
and
xor
ljmp
jns
fs
pop
sub
popf
ja
insl
je
adc
xchg
fiadds
dec
test
push
pop
sub
roll
dec
sti
adc
xchg
sbb
sub
daa
sbb
popf
add
outsl
fisubl
push
adc
add
sbb
std
xchg
in
dec
mov
xchg
cmpsl
je
add
sub
ds
cltd
pop
icebp
xor
xchg
add
sub
jl
shll
orb
loopne
out
jmp
leave
push
cmpsl
icebp
jle
dec
ljmp
test
into
cmp
lock
mov
inc
mov
adc
mulb
outsb
popf
adc
js
dec
inc
test
mov
andb
daa
add
dec
cmc
leave
popf
cltd
mov
pusha
mov
push
outsl
dec
test
insl
push
sub
roll
add
cmpsl
push
and
inc
and
faddp
push
jp
or
dec
cmp
mov
test
cltd
fisubs
push
jo
mov
inc
push
xor
mov
idivb
jns
icebp
hlt
push
push
push
addr16
xlat
in
insl
mov
mov
add
push
jmp
xchg
sub
inc
mov
insl
test
inc
outsb
cmpsb
adc
popw
das
adc
stc
ss
push
inc
out
insl
fs
and
pop
or
pop
add
push
imul
insb
insb
outsl
arpl
add
rclb
lock
add
push
jb
je
push
jb
arpl
jae
gs
outsl
jb
add
fs
call
pushf
pushf
movl
movb
adc
call
push
call
mov
popa
cmp
in
or
mov
push
add
mov
call
add
pusha
push
lea
jmp
inc
push
dec
inc
inc
push
xor
cs
insb
add
cmpsb
dec
out
fcmovb
mov
call
xchg
push
out
shlb
clc
sti
jb
push
cmp
fadds
das
fldenv
jb
sarl
dec
inc
inc
das
sbb
dec
jo
outsb
dec
outsb
jo
je
gs
je
jo
push
call
ret
add
dec
outsb
je
jb
gs
insb
outsl
jae
dec
popa
outsb
fs
add
add
fs
gs
jne
arpl
push
call
xor
push
gs
imul
outsl
arpl
jae
add
jae
jne
outsl
ja
add
add
je
outsl
fs
gs
imul
add
add
jo
jns
insb
imul
add
in
mov
add
enter
lea
call
push
mov
push
adc
jmp
add
push
gs
jo
outsb
dec
gs
add
enter
mov
or
repnz
mov
cmpsl
add
push
gs
outsb
fs
inc
imul
call
add
push
gs
insb
outsl
jae
dec
gs
mov
mov
push
pushl
push
pushl
ret
add
inc
gs
insb
imul
inc
popa
je
add
mov
cmc
pushf
mov
cmp
pusha
and
call
add
inc
outsl
jo
inc
imul
mov
movl
pushl
mov
movb
lea
jmp
mov
inc
jmp
mov
mov
pusha
mov
pushf
inc
not
pushf
pushf
mov
jmp
add
dec
inc
push
gs
outsl
insl
jo
gs
inc
jb
insl
gs
je
jb
add
add
push
gs
js
gs
imul
gs
add
push
gs
gs
imul
xor
cs
insb
add
loop
xchg
pop
sbb
add
or
mov
jne
gs
gs
outsb
je
xor
clc
shr
mov
lea
je
pusha
adc
push
pusha
push
mov
lea
jmp
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
lea
je
bt
test
clc
cmp
jmp
dec
pushf
cmc
mov
stc
shl
call
push
lea
jae
pusha
stc
pusha
cmp
pushf
jmp
xchg
out
aam
shlb
push
data16
loopne
pop
gs
pop
shll
and
adc
push
adc
add
mov
repz
xchg
nop
jne
add
popa
jb
gs
inc
add
mov
jmp
add
dec
inc
dec
jo
outsb
add
add
je
imul
add
out
xchg
xor
adc
fnstsw
rolb
sahf
repz
test
pop
sub
lret
push
out
dec
pop
decb
jnp
push
loopne
push
imul
jb
or
addr16
push
push
lods
movsb
push
clc
lea
call
pusha
sub
call
cmp
icebp
fwait
dec
inc
in
lea
inc
leave
lret
mov
adc
stos
cld
div
jl
roll
lret
mov
xchg
mov
movsb
pop
and
enter
add
inc
and
pusha
sbb
mov
dec
lods
aad
mov
xchg
das
pop
or
add
xchg
cmp
inc
pop
cmp
jl
jb
ja
in
test
adc
cmp
int3
jae
aad
jo
mov
mov
jg
shll
mov
xrelease
mov
incl
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
in
pop
call
mov
outsl
jp
add
je
imul
js
inc
add
in
bnd
jp
loope
fs
je
cmp
stc
test
mov
cmc
add
cmc
cmp
jmp
movb
jmp
movw
clc
mov
pushf
test
test
mov
or
call
pushf
lea
jae
setp
mov
pushf
pusha
inc
movb
setle
not
setp
mov
movb
push
lea
call
push
adc
pusha
lea
jae
push
push
call
add
inc
gs
gs
inc
imul
xchg
sar
je
or
adc
sbb
add
ja
add
loop
add
push
xchg
add
xchg
addb
dec
and
add
popl
add
add
dec
or
mov
add
adc
add
cs
add
out
add
add
inc
add
jg
add
mov
add
sub
add
and
add
mov
add
and
push
or
and
add
add
out
add
add
add
dec
and
add
or
add
pop
and
push
fadds
add
push
add
xchg
and
cmp
add
jbe
add
call
add
add
add
filds
add
aas
add
jno
add
out
and
xchg
addb
add
add
dec
add
lods
sub
add
lock
mov
add
cmpsl
mov
add
add
aam
add
adc
add
loope
add
and
add
in
add
fildl
add
lods
mov
add
add
mov
add
imul
add
mov
add
add
jbe
add
shll
add
mov
add
rcl
add
add
lret
add
hlt
add
testl
add
cmpsb
std
add
pop
xlat
add
pop
incb
add
popl
add
add
mov
add
inc
add
and
add
cs
add
or
add
int
add
push
dec
add
fsubr
add
orb
add
dec
add
push
dec
add
xchg
aas
add
push
or
testl
add
das
add
repz
xchg
add
inc
sub
add
dec
daa
add
ljmp
add
popl
add
inc
add
and
add
push
sti
add
out
mov
add
and
into
inc
add
add
add
mov
cmp
add
lcall
add
repz
mov
add
movsb
aas
add
cltd
std
add
and
add
stos
nop
add
ret
add
testl
add
testl
add
dec
add
loope
add
fisttpll
add
add
add
push
add
add
add
inc
dec
add
xchg
and
add
add
add
flds
add
addb
adc
add
addb
add
mov
add
add
jns
add
bound
add
xchg
dec
add
rolb
add
hlt
add
lahf
and
test
add
loopne
add
cmp
add
mov
mov
add
popl
add
dec
add
xchg
or
pushf
add
xchg
mov
add
mov
add
add
mov
add
sub
add
out
add
mov
aas
add
sbb
add
and
add
outsb
mov
add
incl
add
cmp
add
popf
add
add
inc
add
in
add
add
add
pop
icebp
add
sarl
add
push
stc
add
xor
add
pop
xchg
add
jae
add
pusha
and
add
sbb
cld
add
add
add
out
add
xor
add
xor
add
mov
add
data16
add
add
add
sbb
add
add
add
mov
add
sub
repz
cmp
add
jge
add
add
das
add
sbb
add
dec
repnz
fmull
add
xchg
inc
add
mov
cmp
add
sub
add
js
add
adc
add
add
add
add
cmpsb
std
add
add
add
nop
xor
add
add
fimull
add
add
add
clc
add
add
add
push
test
add
add
mov
popl
add
add
add
clc
add
add
add
or
add
add
add
aas
dec
add
push
and
ja
add
add
add
adc
add
add
add
add
dec
inc
inc
insb
outsl
jae
add
add
je
outsl
arpl
jo
add
add
jae
outsb
fs
push
add
add
popa
insb
imul
je
add
fdivrs
orb
adc
xchg
aad
loope
dec
xor
jne
add
push
push
enter
xlat
faddl
inc
sub
xor
sub
or
lds
and
jnp
sbb
ret
pusha
ljmp
movsb
xchg
xor
push
pushf
inc
ljmp
dec
cwtl
sbb
outsb
mov
inc
fistps
mov
lods
mov
push
lret
xchg
mov
add
loop
iret
imul
iret
and
shrl
inc
xor
sub
sub
inc
call
push
movsl
movsb
clc
dec
leave
and
add
and
fldl
cmp
shlb
mov
pop
in
mov
ss
enter
movsl
jns
xchg
mov
or
test
fchs
in
imul
loop
mov
xchg
mov
sbb
imul
pop
cs
lock
jne
mov
mov
popa
and
mov
adc
pop
sub
sbb
sub
mul
rclb
movsb
pop
hlt
lods
mov
jae
mov
lea
shll
mov
outsb
cmp
push
mov
pop
adc
or
jb
cmc
loop
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
addl
lret
add
push
add
add
outsb
push
gs
imul
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
push
push
adc
movb
movb
pushl
ret
push
movl
call
mov
sar
pushf
shr
inc
mov
test
movb
test
call
jae
gs
insb
xor
cs
insb
add
add
jb
jne
insb
push
jb
je
arpl
add
rcrb
fisttpl
fwait
ret
setge
pusha
xchg
lods
lea
jge
inc
bt
mov
bt
ror
add
add
xor
bt
dec
add
shl
xor
xor
shl
xor
jmp
shrb
add
lods
inc
xor
xchg
ljmp
ret
dec
jnp
int3
int3
mov
je
jnp
pop
dec
loope
imul
lods
cmpsb
xchg
test
xchg
xor
adc
inc
imul
loope
sti
jbe
xchg
ret
cld
test
xchg
inc
stc
mov
push
cmp
adc
insl
pusha
inc
cs
or
rorl
mov
loopne
loopne
add
mov
add
popa
fs
imul
jmp
imul
sbb
pop
subl
mov
inc
ljmp
leave
mov
mov
ret
xor
sbb
xlat
mov
xchg
stos
pop
aaa
fcompl
jb
and
sub
dec
cwtl
dec
hlt
lea
bound
add
jbe
add
push
cmp
mov
dec
jg
or
stos
dec
dec
dec
cmp
add
pushf
pushf
pushf
pushl
lea
jmp
add
jae
insb
arpl
mov
bound
stos
movsb
mov
ds
imul
mov
stos
jne
movsb
ja
mov
and
in
add
jnp
out
shlb
inc
mov
cmpsb
mov
add
sti
iret
add
out
jg
shll
cmpsb
sbb
xchg
outsl
inc
loop
lret
add
dec
jo
outsb
inc
gs
je
jo
add
add
add
jmp
dec
push
pushf
inc
push
ror
add
xor
sar
dec
shr
add
rol
xor
xor
jmp
push
call
push
out
lcall
adc
incl
mov
add
add
sub
movl
call
push
call
and
outsb
inc
js
arpl
cwtl
mov
movsl
push
out
aad
daa
sub
and
rcrl
mov
in
in
outsl
push
xchg
ja
jge
loopne
add
push
fldt
mov
cmp
lea
jb
push
pushf
mov
lea
pusha
pushl
popl
pushl
lea
jmp
lea
je
clc
pushf
bt
stc
mov
bt
bt
sub
mov
jmp
add
dec
outsb
je
jb
gs
gs
outsl
outsb
outsb
arpl
push
je
je
add
sbbl
jmp
jmp
neg
and
add
mov
push
pusha
jmp
sub
jmp
pushl
pushl
popl
push
movb
pushf
mov
lea
jmp
bt
ror
stc
cmp
sub
clc
jmp
pusha
pusha
add
test
push
xor
bt
xor
test
cmp
mov
sub
jmp
add
jb
mov
pushf
pushl
mov
pusha
pushf
pushf
push
lea
jmp
sar
test
mov
shr
ror
and
mov
cmc
cmp
pushf
movw
add
movl
pusha
movb
push
mov
pushl
pushf
pushf
lea
jmp
pushl
popl
movl
pushf
pushl
lea
jmp
movb
xchg
call
pusha
mov
sub
call
pushl
call
mov
not
pushf
pusha
not
xchg
std
mov
movsbw
cld
not
pushf
lea
pushf
mov
pusha
pushf
mov
pushf
cld
pushl
pushf
cld
jmp
sub
test
bt
bt
pusha
add
pushf
jmp
call
mov
mov
pushl
ret
pushl
mov
pushl
jmp
call
call
pusha
inc
push
not
jmp
pusha
cmp
jmp
not
movzbl
movl
push
not
movzbw
mov
pushf
lea
jmp
add
jle
sub
cmp
cmp
clc
shr
call
push
mov
movzbw
mov
call
clc
xor
cmc
pushf
xor
call
mov
push
mov
pushf
push
pushf
lea
jmp
jmp
pushl
pushf
mov
push
mov
lea
jmp
sub
push
add
push
stc
stc
jmp
pop
mov
mov
jmp
xor
pushf
lea
not
sets
mov
lea
push
jmp
pushf
push
not
rcl
mov
pushl
mov
sub
pusha
mov
push
pushf
lea
jmp
mov
test
mov
cmc
pushf
sub
push
call
rol
clc
call
mov
pusha
pushf
popl
push
jmp
xor
movzbl
test
test
cmp
stc
add
clc
stc
ror
call
movsbw
movsbl
mov
sbb
clc
add
mov
pusha
pop
sbb
mov
shr
bsf
sub
pop
bsf
dec
movzbl
btc
rol
btr
bts
movzbw
pop
xor
setnp
and
neg
mov
add
bsr
dec
shl
cmc
pop
bts
sub
jmp
mov
pushf
movl
pushf
pop
movzbl
lea
mov
push
mov
lea
jmp
rol
cmp
cmc
test
add
call
not
pushf
jmp
btr
sub
movzww
stc
jmp
stc
xor
stc
clc
pusha
call
movzbw
inc
stc
sar
xor
setl
bts
lea
sub
cmc
lea
stc
rol
sub
rcr
inc
lea
adc
sub
btr
mov
jmp
jmp
mov
pusha
lea
jmp
pop
mov
lea
jmp
call
push
push
divl
mov
call
mov
pusha
movb
pushf
popl
jmp
pushf
mov
movb
movb
mov
pushf
movb
pusha
pushf
popl
call
clc
jmp
mov
push
pusha
lea
jmp
jmp
not
jmp
push
mov
mov
push
lea
jmp
cmc
mov
xor
add
sbb
test
mov
cmc
add
call
jmp
sete
rcr
btr
movzbl
stc
pushf
ror
mov
bt
rol
cmp
bt
test
xor
mov
pusha
push
pushl
inc
pushf
jmp
pop
bsf
sub
adc
lea
mov
cmp
xadd
stc
rol
mov
shrd
rol
add
rcr
mov
neg
dec
sub
dec
bsf
dec
clc
setno
clc
rol
shld
ror
stc
xor
or
push
neg
neg
rol
shl
bsf
add
bsf
pop
dec
dec
test
sub
rcr
movzbl
ror
stc
btr
mov
jmp
mov
pusha
lea
jmp
sub
stc
and
pushf
pusha
pushf
push
pushf
popl
pushl
pushl
popl
pushf
mov
lea
jmp
mov
call
pushl
popl
movw
pushl
movw
lea
jmp
pushf
mov
pushf
popl
movw
pushl
popl
push
pushl
push
push
lea
jmp
test
not
test
call
call
cwtl
pusha
call
pusha
jmp
call
stc
pushl
popf
movw
mov
mov
lea
jmp
add
jmp
mov
mov
pushf
popl
pushf
movb
pushl
popl
mov
movb
movb
movb
lea
jmp
movb
add
test
lea
jnp
clc
xor
call
jmp
mov
jmp
mov
mov
dec
mov
movb
lea
jmp
mov
pusha
pushf
push
pushf
lea
jmp
add
rcr
shl
jmp
jmp
pusha
inc
cmc
call
lea
setp
push
bswap
push
mov
push
pushf
pushf
movzbl
mov
inc
call
bt
pushl
popl
stc
test
clc
add
pusha
pushl
popf
pushl
movb
lea
jmp
push
mov
bswap
pop
movl
mov
pusha
mov
movzbw
mov
mov
pushl
lea
jmp
bswap
lea
ja
bt
bt
cmp
add
push
mov
pusha
mov
movw
pushf
pushl
ret
pusha
pushf
popl
pusha
jmp
pushf
lea
jnp
mov
pushf
call
push
pushl
popl
pushf
mov
lea
jmp
mov
bswap
pushf
movzbl
mov
not
push
pusha
movsbw
movsbw
mov
pop
mov
mov
push
mov
pusha
lea
push
pushf
mov
push
call
rep
bsr
shld
shrd
mov
test
add
dec
mov
test
test
call
btc
sar
push
aad
mov
std
bts
std
pop
bswap
pop
pushf
shrd
cmp
mov
rcr
inc
mov
btr
movzbw
mov
btr
test
adc
mov
and
add
cld
sub
mov
mov
cld
mov
dec
rcl
xor
and
mov
pusha
jmp
rol
mov
mov
shrd
mov
clc
push
cmp
add
call
bt
not
call
not
pushl
test
movl
neg
test
stc
add
jmp
mov
pusha
not
pop
jmp
clc
xor
cmc
cwtl
cmc
sub
push
mov
push
lea
jmp
lea
jno
pusha
mov
pusha
mov
push
pushf
lea
jmp
rcl
not
mov
and
mov
cmp
jno
stc
add
push
push
pushf
movl
mov
pushf
pushl
movb
lea
jmp
pushf
popl
push
pushl
popl
mov
push
movb
movb
lea
jmp
mov
pushf
popl
jmp
test
stc
add
call
mov
movzbw
bt
lea
push
das
sub
shl
adc
dec
lahf
lea
and
pushf
and
lea
sub
lea
jmp
mov
push
movb
lea
jmp
inc
jmp
mov
inc
mov
pushf
call
jmp
pop
not
movl
movw
movsbl
mov
mov
mov
pushf
pushf
push
pushf
lea
jmp
push
sub
cmp
shr
jmp
add
movw
pushl
mov
pushf
lea
jmp
push
shr
mov
sbb
sub
stc
clc
add
jmp
xchg
clc
xor
pushf
pushl
jmp
mov
mov
call
call
add
movw
jmp
pushf
mov
movb
pushf
pushf
mov
lea
jmp
rol
inc
bsr
mov
mov
test
bt
add
pushf
pushl
lea
jmp
push
mov
pusha
pusha
pushf
lea
jmp
pushf
popl
jmp
pushf
pushf
shr
call
call
mov
pop
bswap
pusha
mov
pushl
movzbw
mov
bswap
mov
pushf
mov
jmp
movsbw
mov
bswap
call
mov
not
mov
movzbw
pusha
movsbw
bswap
mov
movsbl
movzbw
movsbw
mov
push
mov
call
pushf
popl
pushf
push
pushf
mov
bswap
pop
mov
lea
pushf
jmp
mov
pushf
pushf
popl
pushl
pushl
popl
pushf
push
push
lea
jmp
and
push
lea
je
test
cmc
test
test
push
neg
neg
jmp
mov
pushl
popl
push
pushf
push
pushf
lea
jmp
setae
js
pushf
pushf
movl
pusha
call
pushf
popl
push
mov
call
movw
movzbl
mov
pushl
pusha
mov
pushl
lea
jmp
jmp
and
mov
mov
jmp
pushf
call
mov
movb
pushf
pusha
pushl
mov
push
push
lea
jmp
mov
pusha
call
pop
mov
call
shl
lahf
btr
neg
mov
seta
rol
adc
adc
mov
call
bsr
add
sub
sub
mov
call
pusha
not
call
sub
mov
rcr
mov
bt
call
pusha
add
jmp
neg
stc
mov
add
shl
mov
xor
push
rcl
ror
mov
call
pushf
pushf
mov
pushf
lea
jmp
lea
not
movl
pushf
movw
mov
movb
lea
jmp
shr
pusha
dec
neg
add
shr
shl
or
xor
test
not
movzbw
xor
setbe
jmp
mov
cmc
jmp
xchg
movzbw
mov
movzbw
movzbl
movsbw
pushf
mov
pusha
mov
mov
mov
call
jmp
mov
pusha
pushf
popl
mov
pushl
pushl
popl
pushl
pushf
push
mov
lea
jmp
inc
call
jmp
mov
movsbw
mov
mov
not
pusha
mov
pop
not
movzbl
mov
movsbw
movl
mov
mov
jmp
mov
pushf
call
mov
sub
call
sub
pushl
pushf
pushf
mov
movb
push
lea
jmp
pusha
movw
jmp
lea
movl
mov
call
call
pushf
pushf
popl
pushf
jmp
movb
pushf
popl
jmp
bt
bt
pusha
pusha
add
push
jmp
call
bt
clc
xor
call
shr
call
not
ror
shl
mov
cmc
cmp
add
pusha
jmp
pusha
jmp
movl
movsbl
mov
mov
mov
pushf
pushl
pushl
lea
jmp
pushf
xchg
pushf
mov
lea
jo
movsbw
lea
push
push
call
pushf
cmp
add
cmp
cmc
shrd
movl
pusha
movb
mov
pushf
pushl
push
pushf
popl
jmp
movb
push
mov
jmp
shrd
and
ror
mov
pusha
stc
jmp
setge
movzbw
mov
mov
movzbw
call
mov
pushf
movb
push
lea
jmp
push
call
lea
push
lahf
lea
mov
pushl
pushf
call
pushf
mov
decl
pushf
call
mov
not
lea
bswap
movzbl
mov
call
pusha
movb
pushf
mov
push
lea
jmp
pushl
popl
pushf
pushl
mov
mov
lea
jmp
mov
pushf
push
pushf
pushf
pushl
ret
push
test
cwtl
pusha
test
jmp
pushf
mov
pushf
popl
call
sub
clc
cmc
jmp
not
pusha
sub
bt
stc
mov
call
mov
clc
mov
shld
mov
pusha
pushf
add
pushl
call
pushl
call
pushf
call
clc
pushl
shl
mov
bt
clc
movb
add
pushf
bt
sbb
mov
jmp
pushf
popl
pusha
xchg
call
clc
push
rol
push
xor
jmp
movl
inc
pushf
cmc
bt
rol
jmp
mov
call
call
shl
test
movzbl
cmp
cmc
clc
add
pushf
push
ror
jmp
mov
pusha
lea
jmp
push
pushf
lea
jbe
dec
bt
sub
push
pushf
pushf
pusha
mov
mov
pushf
lea
jmp
mov
jmp
stc
shl
mov
bt
mov
pushf
sub
pusha
clc
test
stc
shl
jmp
pushl
popl
movw
movw
movw
pushf
lea
jmp
pusha
pushf
pushf
mov
push
pushf
pushf
movw
lea
jmp
xchg
mov
and
pushf
shr
rcl
mov
bt
cmp
sub
test
jmp
or
or
mov
bt
pushf
push
stc
xor
pushf
rol
test
xor
clc
pusha
add
clc
xor
pushf
jmp
pushf
bsf
pushf
movzbl
dec
pushl
not
bsf
dec
test
shld
ror
xor
bt
rol
not
bsf
and
pusha
xor
ror
rol
add
setns
rol
xor
shl
xor
not
lea
jns
cmc
cmp
mov
pusha
add
jmp
pusha
jmp
mov
push
pushl
lea
jmp
push
pusha
push
mov
push
lea
jmp
neg
adc
shrd
or
rcl
add
movzbw
movzbw
mov
dec
rcr
sub
bswap
rol
movzbl
bswap
not
mov
mov
pushf
pushf
pushf
pusha
rol
pushf
xor
jmp
lea
jnp
bt
xor
jmp
mov
movw
movzbw
mov
push
bswap
mov
jmp
xchg
not
push
pushf
mov
jmp
sar
shl
xchg
mov
btr
inc
add
clc
mov
call
pushf
pushf
popl
push
pushl
movb
call
cmc
pushf
movl
add
pusha
mov
pushf
lea
jmp
push
jmp
movsbl
pop
mov
pushf
bswap
mov
movzbw
jmp
jmp
pushf
popl
push
pushl
jmp
call
or
neg
bt
movzww
test
jmp
call
rcl
seto
movzbw
pusha
mov
setne
setle
mov
jmp
jmp
jmp
movw
pop
mov
bswap
movsbw
mov
movsbw
movzbw
mov
lea
jp
push
lea
push
mov
push
lea
not
push
lea
push
jmp
jmp
mov
pushl
lea
jmp
pushf
pusha
sub
call
mov
bswap
call
pushf
lea
movl
lea
jmp
pushf
jmp
cwtl
not
bswap
jmp
mov
movw
bswap
mov
mov
movsbw
mov
push
pusha
movsbw
mov
bswap
pushf
movsbl
mov
lea
call
pop
jmp
call
rol
movb
push
add
cmp
cmp
bt
cbtw
cmp
clc
cwtl
pusha
clc
sub
movw
jmp
pushl
popl
push
pushf
pushf
lea
jmp
movb
dec
pushf
pushf
sub
mov
mov
push
pushf
pushl
lea
jmp
mov
call
cmp
pushf
neg
clc
lea
jns
add
cmp
xor
cmp
call
push
lea
jmp
mov
push
call
push
btr
mov
shr
inc
rcr
sub
bsr
inc
dec
bswap
movzbw
jmp
shl
adc
mov
shr
stc
not
mov
test
add
pushf
jmp
push
mov
pushl
lea
jmp
pushf
pusha
mov
pop
mov
bswap
pusha
lea
mov
jmp
movsbw
mov
dec
bsf
pushf
setge
not
mov
dec
movzbl
inc
xadd
shld
xor
xor
add
sub
pushf
xchg
rol
rcl
pop
adc
add
lea
call
pusha
pushl
mov
pushf
pushf
pushf
lea
jmp
pusha
xchg
mov
movl
pop
movsbw
mov
pop
pushf
movw
not
not
bsr
lea
xchg
inc
push
xchg
xor
neg
xadd
sub
clc
movsbw
pushf
rol
btr
rcr
movsbw
call
pushl
pushf
mov
push
call
bswap
cmp
clc
cmp
add
mov
pushf
call
mov
mov
push
lea
jmp
pushf
mov
pushf
mov
mov
pushf
pushf
pusha
lea
jmp
dec
or
bswap
mov
and
push
mov
stc
cmc
stc
cmp
not
bt
bt
not
pusha
sub
cmc
push
test
bt
and
jmp
dec
mov
movsl
sahf
push
mov
pop
xchg
dec
mov
pop
xchg
movsl
jp
xchg
scas
or
dec
mov
pop
xchg
test
or
dec
mov
pop
xchg
push
and
xchg
pop
ficompl
inc
push
pop
xchg
push
mov
pop
xchg
scas
or
dec
mov
pop
xchg
pop
or
dec
ficompl
jnp
pop
xchg
dec
mov
xchg
dec
jp
sahf
mov
pop
xchg
mov
cmp
push
jle
sahf
pop
add
push
sahf
pop
xchg
push
jle
sahf
dec
lret
push
movsl
sahf
dec
jp
sahf
jno
pop
xchg
mov
pop
xchg
pop
or
pop
ficompl
mov
sahf
pop
xchg
pop
ficompl
scas
jp
sahf
pop
add
mov
les
movsl
push
movsl
sahf
jnp
pop
xchg
test
push
pop
xchg
jno
pop
xchg
pop
push
pop
xchg
dec
mov
xchg
stos
movsl
sahf
push
mov
pop
xchg
dec
rcrb
mov
pop
xchg
push
movsl
sahf
mov
pop
xchg
mov
pop
xchg
pop
lret
dec
ficompl
cmpsl
mov
dec
jp
sahf
jne
pop
xchg
movsl
push
movsl
sahf
movsl
jp
xchg
movsl
cmp
push
sahf
pop
xchg
pop
dec
movsl
sahf
push
and
xchg
mov
and
push
mov
pop
xchg
scas
mov
pop
xchg
dec
mov
pop
xchg
movsl
push
movsl
sahf
jne
pop
xchg
dec
lret
jno
pop
xchg
push
and
xchg
scas
or
dec
mov
pop
xchg
test
or
dec
mov
pop
xchg
pop
lret
push
clc
pop
xchg
pop
lret
push
mov
pop
xchg
mov
pop
xchg
jne
pop
xchg
pop
add
push
movsl
sahf
push
out
xchg
jno
pop
xchg
push
jle
sahf
push
mov
pop
xchg
push
jle
sahf
push
sahf
pop
xchg
push
jle
sahf
cmpsl
mov
push
sahf
pop
xchg
pop
lret
movsl
cmp
push
and
xchg
push
and
xchg
pop
lret
jne
pop
xchg
scas
jp
sahf
cmpsl
mov
mov
movsl
sahf
mov
clc
pop
xchg
mov
pop
xchg
pop
or
dec
rcrb
mov
or
scas
mov
movsl
sahf
pop
push
pop
xchg
test
jp
sahf
movsl
cmp
push
mov
pop
xchg
push
out
xchg
jne
pop
xchg
mov
push
pop
xchg
mov
out
pop
xchg
jne
pop
xchg
cmpsl
mov
push
out
xchg
inc
push
pop
xchg
test
mov
pop
xchg
jne
pop
xchg
scas
jp
sahf
push
mov
pop
xchg
push
mov
movsl
sahf
dec
rcrb
dec
rcrb
pop
add
jno
pop
xchg
movsl
cmp
pop
dec
movsl
sahf
push
movsl
sahf
jne
pop
xchg
jne
pop
xchg
jno
pop
xchg
mov
pop
xchg
jne
pop
xchg
pop
lret
mov
xor
test
les
mov
pop
xchg
pop
dec
movsl
sahf
mov
pop
xchg
movsl
push
movsl
sahf
pop
add
jno
pop
xchg
push
mov
pop
xchg
jnp
movsl
sahf
test
ficompl
movsl
cmp
pop
or
mov
pop
xchg
mov
pop
xchg
cmpsl
mov
mov
pop
xchg
mov
xor
stos
movsl
sahf
mov
movsl
sahf
push
out
xchg
jnp
movsl
sahf
dec
lret
mov
pop
pop
xchg
jno
pop
xchg
jne
pop
xchg
pop
add
jno
pop
xchg
movsl
push
movsl
sahf
movsl
push
movsl
sahf
mov
or
mov
pop
xchg
mov
clc
pop
xchg
jnp
movsl
sahf
push
movsl
sahf
test
movsl
sahf
pop
dec
movsl
sahf
mov
pop
xchg
push
out
xchg
push
mov
pop
xchg
pop
ficompl
scas
or
dec
mov
movsl
sahf
dec
ficompl
scas
or
dec
mov
pop
xchg
pop
ficompl
scas
or
dec
mov
pop
xchg
jno
pop
xchg
scas
or
dec
mov
pop
xchg
jne
pop
xchg
scas
or
dec
mov
pop
xchg
jno
pop
xchg
scas
or
dec
mov
pop
xchg
mov
pop
xchg
scas
or
dec
mov
pop
xchg
push
out
xchg
scas
or
dec
mov
pop
xchg
push
mov
pop
xchg
push
call
jmp
inc
mov
rol
jmp
lea
pushf
mov
movw
pushf
mov
mov
pushl
jmp
jmp
mov
not
bswap
movzbw
movl
bswap
jmp
mov
pushf
pushf
lea
jmp
jmp
shl
jmp
pusha
call
movw
pushl
popl
pushf
mov
lea
jmp
mov
call
bts
and
bsr
mov
bt
test
sub
call
movsbw
mov
jmp
pusha
movb
call
not
bswap
push
push
pop
push
movsbl
lea
lea
push
movzbw
push
bswap
push
mov
call
dec
not
rol
bsf
bswap
movsbw
inc
rol
pusha
bts
bts
ror
rol
adc
sub
bts
mov
stc
add
jmp
movsbw
sar
mov
bt
rcl
ror
add
mov
call
call
bt
bsf
bts
add
ror
shrd
rol
bsf
xor
bsr
setne
not
call
call
jmp
cmc
stc
sub
pushf
call
jmp
pushf
push
mov
mov
push
pushl
ret
test
jmp
mov
pushf
jmp
push
push
pushf
popl
push
movb
mov
bsr
xchg
mov
push
mov
movsbw
call
pusha
movw
jmp
lea
movzbl
bswap
push
movzbw
push
mov
lea
push
mov
push
mov
movsbl
push
lea
mov
push
lea
mov
pushf
pusha
bswap
push
movl
pusha
not
movzbl
mov
mov
pushf
push
pushl
lea
jmp
mov
cmp
cmc
sub
pushf
push
call
pusha
pushl
pushl
popl
pushf
push
lea
jmp
pushl
pushf
pushl
popl
push
pushf
lea
jmp
movl
mov
pushl
mov
mov
mov
pusha
mov
lea
jmp
movsbl
mov
xadd
mov
xor
adc
pushf
cmp
mov
pushl
stc
add
movb
push
test
shld
call
sar
neg
setnp
mov
cmp
jne
sub
cmc
add
push
pushf
popl
jmp
pushf
bt
sub
pushf
mov
push
mov
movb
pushl
lea
jmp
mov
bswap
mov
lea
jb
push
movzbw
lea
mov
push
pushf
pushf
lea
jmp
pushf
mov
pushf
lea
je
pusha
pushf
mov
push
lea
jmp
pushf
popl
call
bswap
mov
not
not
mov
movzbw
call
btc
bswap
mov
cmp
sbb
test
shl
mov
stc
test
test
sub
pushf
pushf
clc
stc
shl
pusha
call
mov
cmc
cmc
pushf
shr
pushf
call
pusha
pushf
pushf
popl
pusha
call
movb
mov
call
lea
jb
push
xchg
mov
mov
bsf
pusha
pusha
not
xchg
sets
call
xchg
pusha
cmp
xor
push
pushf
xchg
jmp
xor
pushf
sbb
mov
rol
lea
add
rol
bt
bts
btr
sub
sub
push
rcr
bswap
setge
movzbl
jmp
adc
bts
mov
stc
bswap
bt
pushf
add
push
pusha
inc
pushf
bt
cmc
movw
ror
clc
stc
push
pushf
neg
stc
ror
push
add
mov
pushl
clc
clc
sub
movb
jmp
call
sub
call
mov
rol
sar
sbb
shld
adc
xor
sar
jmp
jmp
movsbw
rol
mov
stc
call
pop
mov
pushf
movb
pusha
push
divl
movb
pushf
jmp
call
movzbl
mov
movsbl
not
movzbw
mov
lea
pop
lea
mov
not
pusha
pop
mov
pop
jmp
push
pushf
popl
call
mov
lea
jmp
movzbw
bswap
mov
movl
bswap
mov
push
mov
lea
push
mov
lea
pushf
mov
lea
bswap
mov
call
pushl
movb
mov
inc
pushf
rol
bt
stc
test
bswap
bt
clc
push
add
push
call
lea
movzbw
xchg
shl
sub
shld
adc
mov
shld
mov
add
movsbl
add
movsbw
mov
bt
mov
bts
rol
dec
sub
movsbw
dec
clc
jmp
push
call
movb
pusha
lea
jne
pusha
pushl
jmp
mov
dec
and
add
mov
call
aam
bt
shl
not
mov
pushf
add
pushl
pusha
jmp
shr
call
push
pushf
popl
pushf
pushf
movb
call
not
jmp
call
inc
clc
movsbl
mov
dec
mov
pusha
call
lea
pushl
jmp
bsr
clc
add
ror
notl
bswap
mov
clc
cmc
jmp
jmp
shr
shr
sbb
mov
xor
mov
pushf
push
call
not
movl
lea
movzbw
movzbw
mov
pushf
lea
jmp
jmp
cmc
xor
call
pushf
push
movb
mov
pusha
pushf
popl
push
pushl
popl
push
push
pushl
movl
lea
jmp
lea
movl
call
pusha
mov
pushf
popl
pushf
mov
pop
call
call
movl
movzbw
push
not
mov
pushl
lea
jmp
push
movzbw
not
call
bswap
mov
pusha
jmp
inc
daa
lea
cmc
clc
cmp
pusha
pushl
mov
lea
ja
jmp
jmp
mov
push
call
call
pushl
popf
push
pushf
pushl
mov
pushl
ret
mov
pushf
pop
mov
pushf
pushf
pushf
lea
jmp
mov
mov
push
mov
push
movw
lea
jmp
call
sub
jmp
sub
pushf
pushf
call
push
mov
movb
mov
movw
lea
jmp
