push
call
ret
ret
out
jle
sub
xlat
cwtl
dec
dec
fiaddl
xor
rcrl
mov
add
ljmp
scas
inc
sub
loop
lahf
xor
das
xchg
push
xor
andb
xor
adc
lahf
add
test
lcall
mov
popa
pop
jbe
orb
cwtl
dec
mov
cs
loopne
xchg
call
aas
xor
sbb
push
add
std
push
push
lcall
sub
ljmp
mov
sub
cli
xor
or
je
fcmovnb
push
dec
mov
fbld
inc
aam
lock
int3
nop
mov
out
push
dec
inc
test
aas
push
push
or
fcmovne
cltd
mov
aam
or
sbb
enter
cmp
rorb
jns
ds
push
lea
clc
xchg
mov
mov
sahf
in
cmp
mov
nop
add
shrl
inc
pop
jbe
pop
xchg
dec
inc
fisubs
sub
jg
and
inc
lret
call
in
pop
dec
insb
xorb
movb
nop
gs
fucom
jmp
xchg
cltd
jb
or
es
pop
mov
or
sbb
xchg
jl
pushf
jmp
mov
push
mov
jle
push
adc
jmp
rcll
jmp
sbbb
sub
je
or
sub
xchg
pop
gs
add
pop
lea
fcomi
neg
xchg
sub
mov
je
push
ljmp
push
mov
mov
cmpsl
add
jmp
mov
cmp
cld
push
jns,pn
in
dec
loope
adc
or
mov
jb
mov
imul
jbe
jl
lret
add
loope
jle
mov
inc
dec
pop
mov
inc
sbb
std
inc
loop
cli
jmp
loop
repz
pusha
rdpmc
push
pushf
inc
xlat
cmpb
out
repnz
test
pop
push
jb
mov
and
enter
dec
mov
repnz
ja
inc
leave
lock
push
fsts
push
inc
repz
push
jl
add
leave
pop
inc
pop
sub
ror
dec
fldcw
add
cltd
rdtsc
jp
inc
mov
mov
leave
mov
sbbl
fisubs
fildll
cmpsb
push
pop
pop
pop
gs
sbbb
scas
out
les
xchg
jns
mov
inc
mov
scas
andb
cmp
fsub
mov
mov
in
xchg
rcll
out
mov
mov
xchg
nop
mov
rcll
mov
int
repnz
xor
mov
std
push
mov
ret
push
in
pusha
aaa
mov
shrl
push
sarb
cmpsl
adc
cld
lods
mov
cld
adc
or
js
inc
mov
add
xchg
lods
inc
std
ss
stos
push
mov
test
insl
pop
mov
in
fdivr
dec
out
mov
xor
sub
neg
xchg
mov
adc
scas
xchg
cld
lock
shlb
jns
loop
pop
notl
hlt
mov
ljmp
orb
sbb
int3
std
sub
inc
movsl
add
loope
or
cwtl
out
and
pop
lret
js
pop
sbb
movsb
sub
mov
in
push
mov
ret
sbb
adc
int3
ret
xlat
mov
pop
ljmp
lahf
movsl
movsb
fstpl
popf
jb
mov
into
call
cld
mov
ficomps
mov
sub
adc
or
enterw
sbb
jmp
fwait
fwait
and
adc
adc
xchg
inc
ret
outsl
push
jge
imul
sti
mov
movsb
xchg
pop
movsl
jle
cltd
fsubl
mov
xchg
pop
mov
pusha
adc
ret
imul
aaa
mov
mov
or
outsb
enter
shlb
into
inc
pop
aam
push
mov
xor
loope
cmpsb
jo
pusha
adc
stos
lea
ret
lret
lods
fsubl
sub
adc
sbb
lea
hlt
xor
ss
shr
mov
enter
and
iret
xchg
lods
mov
pop
xchg
clc
int3
sub
adc
nop
sub
push
pop
sub
inc
jae
add
jmp
xchg
push
fs
push
inc
pop
and
clc
pop
out
or
sub
and
xchg
leave
ja
cmc
ret
mov
xchg
jne
mov
mov
push
ja
clc
mov
adc
sbb
fs
pop
imull
leave
ds
mov
jmp
out
test
cmp
pushf
jb
mov
and
jl
in
pop
hlt
mov
xchg
roll
mov
jb
aam
lcall
nop
pop
lea
mov
sub
mov
stos
das
sbb
add
mov
sub
xor
cmpsb
push
pop
xchg
repz
stos
imul
jbe
dec
bound
loopne
ret
cmp
mov
fsubrs
mov
xor
mov
rorb
in
gs
scas
ss
ja
inc
push
inc
xchg
xor
adc
imul
stos
imul
popl
inc
fnsave
mov
fisubrs
pop
hlt
push
int
mov
push
out
jg
clc
les
add
sub
ret
out
shlb
nop
and
mov
and
inc
mov
aaa
rcr
call
js
pushf
test
jmp
scas
dec
mov
and
jge
sub
pusha
jne
mov
addb
out
lds
push
lock
sub
jnp
mov
or
stos
pop
xor
es
xor
and
aaa
cmc
mov
out
stc
fs
mov
sub
data16
mov
cmp
lahf
mov
and
mov
mov
sbb
aam
push
cmpsb
adc
mov
lock
rclb
out
push
jo
sbb
popf
movsb
and
mov
enter
enter
jne
out
and
js
dec
sub
scas
mov
jecxz
xlat
loope
push
sub
mov
jmp
outsl
xor
mov
data16
cmpsl
int
inc
ret
loope
loopne
push
lcall
loop
sub
lock
push
ja
js
out
adc
test
cmp
jge
dec
xor
clc
shl
sub
rol
in
mov
sbb
mov
mov
ficomps
xchg
nop
xchg
addr16
rcl
mov
push
cmpsb
loop
cs
cmp
jnp
mov
int3
inc
fwait
lcall
arpl
xchg
movsl
negb
inc
mov
pop
pusha
add
das
mov
sub
add
jmp
dec
jbe
mov
gs
scas
mov
sub
sub
out
scas
fwait
mov
dec
std
cmpsl
mov
adc
cmpl
mov
in
mov
and
mov
adc
inc
or
loopne
std
xchg
jg
inc
fs
fisttpl
sbb
cmpsl
mov
stc
push
cld
or
jbe
movb
das
add
loop
gs
ror
lret
leave
jbe
add
ret
icebp
pop
jmp
daa
inc
insl
add
or
lcall
or
lods
js
push
adc
cli
dec
bswap
test
sub
jg
in
pop
pop
cmp
and
adc
sbb
into
inc
mov
push
loope
pop
je
call
mov
mov
loopew
shrb
push
sti
cltd
add
popf
test
push
fistps
xchg
jmp
push
sarl
shll
sub
test
mov
adc
stos
sbb
arpl
je
into
sbb
add
mov
dec
push
test
xchg
sahf
clc
jae,pt
sbb
pop
pop
movsl
xor
cmp
mov
and
pop
lds
fcoml
fcom
or
push
popl
js
ret
xchg
xor
inc
and
sub
lods
jo
mov
inc
cld
movsb
ja
pop
push
cmpsl
jno
clc
ja
add
xor
fcompl
data16
pop
cs
and
cltd
sub
adc
int
addr16
mov
aaa
mov
xchg
cmp
cld
inc
ficoms
les
jo
ljmp
jmp
push
cltd
test
inc
fcmovnu
jns
shrl
jecxz
and
xchg
jecxz
push
push
and
cltd
push
lcall
ret
adc
je
push
and
inc
cmovl
or
loop
jno
mov
and
ss
js
test
mov
inc
mov
xchg
jnp
xor
dec
mov
addr16
pop
push
ret
xor
call
xor
xchg
daa
addr16
jl
xor
cmp
xor
in
out
popf
push
nop
imul
push
addr16
inc
push
jno
add
ds
push
lahf
adc
xor
iret
mov
mov
xchg
jae
mov
sahf
xchg
arpl
cmpsl
rorb
or
push
test
imul
dec
mov
enter
shrb
sbb
jnp,pt
mov
push
lock
add
movsb
push
inc
inc
clc
loope
mov
or
push
stos
std
dec
insl
mov
mov
xor
fiaddl
mov
push
xlat
dec
inc
lods
fimuls
sub
into
movsl
or
lea
nopl
enter
jecxz
mov
xchg
aam
xor
mov
and
sub
test
mov
sub
jno
push
mov
imul
cmp
inc
hlt
add
mov
out
xor
pushw
mov
insl
sahf
fcompp
pushf
fs
and
xorl
imul
ss
fwait
mov
dec
mov
enter
popa
mov
xchg
and
ljmp
cwtl
pusha
and
daa
push
mov
es
mov
mov
adc
nop
or
orb
mov
rcl
xchg
lahf
xlat
into
or
sbb
popf
gs
lds
mov
jp
mov
movsb
push
jmp
fyl2xp1
and
pop
mov
pop
push
pushf
jmp
imul
and
xor
pop
movsl
cli
cmpsl
jmp
dec
in
enter
test
mov
mov
sub
mov
test
mov
lds
pushf
fiaddl
movsb
cmp
out
push
jns
enter
inc
mov
out
sub
imul
sahf
test
fisubrl
inc
or
xchg
decl
aam
or
repnz
inc
lock
push
mov
ds
cmovge
orl
scas
xor
subl
mov
mov
xor
mov
shrl
dec
stos
pop
fsubrp
lahf
fs
adc
push
adc
jmp
xor
and
mov
mov
push
cmp
mov
xor
scas
data16
adc
push
loop
daa
cmp
xor
pop
mov
in
xor
and
dec
xchg
mov
or
in
popf
fiaddl
cld
rcrl
sub
cmp
pusha
xor
and
lods
mul
pop
jl
and
outsb
addr16
push
pusha
mov
or
mov
pop
mov
lea
fidivrs
ds
sub
ja
out
les
lret
sub
dec
nop
xor
dec
adc
lods
xlat
cwtl
xlat
les
pop
or
repnz
add
cs
in
xchg
cmp
lea
fst
mov
cmpsl
xor
test
pop
lods
push
dec
and
mov
jecxz
fmuls
orl
ss
into
sub
or
daa
out
sub
test
mov
jmp
mov
aas
inc
hlt
addb
dec
in
pop
dec
and
into
or
shrl
out
arpl
popf
in
jge
push
fwait
js
fwait
push
adc
add
jle
pop
cmp
xor
mov
mov
pushf
push
pop
mov
repnz
adcb
jo
lds
sub
arpl
push
cld
add
repz
jnp
aam
pop
mov
sub
or
iret
sbb
jmp
add
sub
in
xorl
add
and
pop
xor
in
stos
mov
mov
and
mov
je
dec
jnp
into
xor
rorl
and
inc
jecxz
arpl
add
xor
mov
jo
adcl
push
and
ret
test
jg
pop
mov
push
nop
bound
mov
aad
inc
fcoms
rorl
cmp
xchg
icebp
sbb
cmpsb
xchg
mov
push
push
dec
inc
xor
lock
cmpsb
mov
mov
mov
mov
loop
in
fcmovnb
or
ret
add
adc
mov
push
push
in
push
push
ljmp
add
mov
pop
pop
push
jp
dec
daa
divl
dec
loopne
add
fisttpll
add
or
ret
mov
xchg
xchg
test
or
mov
xor
and
pop
call
repnz
adc
jbe
das
dec
nop
cld
sub
jbe
int3
mov
ljmp
cmp
add
lret
sbb
pop
lcall
jle
fs
aad
outsb
in
aam
test
push
dec
inc
bound
dec
push
pop
imul
sarl
inc
mov
inc
mov
repz
mov
outsb
ficompl
inc
jo
ret
sub
add
jb
sub
xchg
xor
inc
insb
ds
call
aaa
shrb
jnp
stos
mov
cmp
insl
popf
add
insl
in
mov
inc
test
mov
fs
rorb
ffree
movsl
sbb
aad
sub
cmp
xor
dec
mov
xchg
xor
inc
inc
imul
shr
bound
iret
subb
ljmp
push
enter
movsl
mov
adc
mov
adc
push
pop
or
add
xchg
gs
stos
icebp
push
jno
or
mov
cmp
int3
popf
iret
and
test
mov
pop
inc
loopw
mov
mov
add
inc
inc
push
aam
pusha
cmp
xchg
jl
pop
add
cmp
and
jle
jnp
sbb
adc
mov
in
aaa
test
adcb
xchg
inc
mov
fwait
push
ficomps
outsb
xchg
lret
mov
jecxz
cmp
mov
cmp
cs
fsubrl
xchg
adc
jmp
xor
sub
mov
jl
negl
xor
pop
lods
lcall
cmp
cld
je
hlt
jmp
ja
dec
and
sbb
mulb
jno
clc
cmc
cli
icebp
test
std
aam
sbb
in
ja
mov
mov
mov
pop
nop
push
popa
js
ds
fdivp
test
adc
cld
pop
popa
ror
mov
sbb
push
mov
bound
dec
ja
inc
ret
dec
fcmovu
add
push
push
sbb
leave
push
jl
sbb
dec
cmp
push
push
cwtl
cmpsb
xor
ljmp
or
jbe
iret
cmp
in
sbb
sub
push
mov
sbbb
aaa
hlt
pop
cmpsl
and
mov
movsb
sub
psubsb
cld
jge
add
jae
jne
inc
xchg
decl
dec
outsl
repz
mov
sub
push
lret
jns
xor
push
jo
adc
scas
popf
jp
mov
cmc
sbb
cmpsl
into
dec
mov
cmc
inc
cltd
in
fxch
jno
inc
test
xor
scas
test
mov
popa
mov
xchg
xlat
icebp
pushf
dec
insb
loop
or
push
dec
and
fiaddl
in
xchg
cld
pop
stos
int
pop
pop
mov
xor
pop
dec
cmp
adc
test
jle
mov
lcall
jae
push
js
dec
xor
int
mov
or
loopne
lock
pop
xchg
sbb
sub
or
lret
lods
sbb
xchg
cs
add
mov
je
mov
scas
test
cmp
add
mov
test
mov
cmpsb
mov
mov
das
xchg
ret
ret
mov
mov
mov
sbb
add
clc
and
inc
fisttpll
ljmp
in
cmpsl
pop
xchg
jg
cmp
aad
fwait
cmp
cmp
bound
jp
pop
adc
ret
lcall
lods
movsl
mov
xchg
fcoml
ret
and
mov
in
mov
or
rcll
cmp
mov
push
jae,pt
fdivrs
xlat
std
mov
push
imul
mov
js
jmp
inc
scas
scas
insl
jg
add
incl
push
ja
xor
jmp
daa
and
dec
sub
xor
loope
aam
outsb
movsb
adc
ret
mov
or
cld
lea
mov
notl
fisttpll
pop
inc
jnp
xor
popf
mov
aaa
mov
push
addl
jl
jbe
mov
mov
xchg
out
rcr
imul
inc
imul
orb
xchg
leave
rcrb
clc
dec
mov
push
jle
or
xor
xor
cli
xchg
stos
sbb
xlat
dec
lahf
mov
mov
pop
mov
sbb
outsl
lods
sahf
or
mov
cmp
add
jge
cmp
sub
adc
sahf
sbb
xor
cmp
insb
in
jne
test
sbb
std
push
gs
roll
cli
fdiv
push
dec
mov
push
mov
push
jns
cmc
xor
cld
pop
lret
dec
sbb
cmp
repz
enter
dec
mov
mov
jle
mov
mov
lea
add
mov
loopne
mov
jmp
mov
addr16
jl
adc
adc
popf
mov
je
icebp
or
and
mov
push
cmc
or
jns
pop
sbb
cmpsl
mov
fstpl
rcr
pusha
lea
cli
dec
add
cmp
fmul
mov
add
aam
pop
lock
cltd
xor
xor
out
aam
ds
out
ds
loop
loop
cmp
pusha
cmpb
inc
mov
in
lea
sbb
sub
adc
mov
jmp
add
test
aam
bound
mov
clc
mov
fwait
dec
mov
mov
dec
scas
stos
push
out
pop
xchg
sahf
jo
cmp
daa
inc
xor
popa
push
inc
adc
jmp
fcmovnu
pop
mov
push
nop
in
nop
sahf
cwtl
call
cmp
pop
mov
xor
push
das
mov
das
xchg
mov
sahf
ret
jbe
mov
jo
xor
ds
addl
jnp
jno
insl
mov
mov
jns
dec
sbb
fdivr
push
sar
inc
dec
bound
das
inc
jge
movsb
aas
pusha
pop
jecxz
inc
jne
cmp
xchg
xor
testl
cwtl
cmp
adc
mov
add
push
mov
fwait
dec
jbe
mov
movsl
lret
insl
jnp
bound
dec
addl
inc
push
out
insb
imul
xchg
pushf
sbb
jbe
or
sub
xor
cwtl
cmp
push
test
cmc
jo
jg
push
lods
xor
out
add
inc
jp
lds
dec
pop
je
push
icebp
mov
sub
insl
sub
icebp
popf
mov
mov
cwtl
loope
lea
cltd
insb
push
pop
sbbl
mov
in
lahf
mulb
sbb
ss
add
imul
push
cmc
adc
and
mov
pop
dec
pop
xchg
mov
inc
push
lods
lods
lcall
in
add
xchg
fwait
xchg
roll
xchg
scas
jbe
ror
repnz
fstps
enter
data16
in
or
pop
sub
jmp
enter
in
sub
ljmp
mov
insl
loopne
jae
or
sub
aas
jmp
lea
ja
lds
dec
jne
inc
lods
lock
xchg
or
shlb
mov
into
or
xchg
loop
mov
jbe
xchg
inc
mov
xorb
pop
mov
sub
push
aaa
add
pop
movsw
xor
les
jb
rcl
shll
scas
and
jbe
dec
add
decl
xchg
stc
adc
sub
daa
pop
inc
ret
popl
push
xor
inc
push
jno
or
es
out
nop
ret
push
pop
mov
sbb
inc
ss
enter
cmpsl
xchg
imul
mov
mov
add
sbb
sbb
push
mov
mov
add
cwtl
dec
inc
jns
enter
jl
cmpsb
xchg
rorb
jae
add
sbb
cltd
mov
push
and
pop
lock
dec
iret
adc
aas
or
xchg
jbe
cltd
fwait
push
cld
add
mov
xchg
.byte
dec
add
add
add
add
or
add
sbb
add
add
add
add
add
add
add
mov
add
or
add
add
xorb
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cwtl
add
add
add
add
add
add
add
test
add
lock
add
in
add
add
add
rolb
add
add
add
add
add
add
add
inc
add
inc
add
add
add
add
add
add
add
pop
add
push
add
add
push
add
add
dec
add
dec
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
add
push
and
daa
and
and
in
fidivrl
inc
and
sbb
ljmp
cmp
pop
pushf
pop
push
movsl
mov
jno
dec
push
add
jmp
inc
dec
sub
add
add
inc
les
dec
add
aad
es
dec
adc
push
test
add
faddp
cmp
push
fs
cmp
and
aas
and
inc
add
adc
lds
cmp
insl
arpl
xor
jne
add
cmp
jno
adc
pop
mov
jge
lock
sbb
fucom
imul
rorb
fwait
movsl
mov
inc
test
adc
mov
or
push
push
push
inc
sub
and
fisttpll
pop
push
or
pop
int
pop
cs
sub
xlat
cli
out
leave
daa
aad
mov
stc
pop
cmp
in
rcr
stos
mov
in
das
and
push
push
dec
dec
inc
fiaddl
sahf
sbb
loope
nop
push
movsl
cs
xchg
push
fldcw
and
addl
cmp
stos
mov
and
mov
ror
adc
in
dec
cmp
jge
adc
lahf
fadds
inc
ja
sbb
lods
es
and
fdivr
mov
shlb
and
es
and
xchg
jp
adc
pusha
jge
inc
jns
push
add
jb
pop
out
add
ficoms
cwtl
and
push
dec
movsb
pop
and
and
push
ficompl
xor
in
in
inc
test
and
and
imull
bound
cmp
movsl
cmp
and
frstor
stc
fcomp
daa
scas
and
xor
mov
or
in
jno
xlat
lods
stc
cli
fisubl
mov
jb
or
mov
and
xchg
dec
push
jle
addr16
xchg
lds
cli
sti
shlb
and
loope
push
into
rcr
sbb
test
add
xchg
and
pushf
enter
bound
mull
jbe
aad
and
stc
dec
xchg
cmp
aaa
mov
sub
and
add
cmc
add
leave
fstps
in
sub
movsb
lods
std
push
int3
pop
lock
and
mov
jl
lods
stos
inc
push
cli
cmp
jg
ficomps
push
push
and
pop
pop
fimull
call
iret
and
jmp
jl
es
cmp
dec
es
and
pop
sub
cmp
into
mov
scas
push
mov
push
in
push
fbld
xchg
pop
lock
and
add
data16
sub
or
imul
imull
adc
sahf
xchg
test
jbe
sbb
push
mov
mov
movsl
pop
pop
popf
aad
shll
and
lahf
sub
or
fistpll
das
rol
lahf
test
push
cmp
and
and
lods
pop
mov
es
hlt
popa
inc
in
pop
ljmp
and
test
or
stc
cmp
and
scas
call
inc
dec
and
and
das
and
push
cmp
call
push
imul
push
cld
dec
and
adc
jecxz
frstor
and
sub
add
xor
neg
insb
into
and
sbb
lods
out
addr16
push
pop
push
adc
mov
and
push
jb
ds
das
jecxz
mov
inc
jbe
xchg
fistpl
daa
movsb
fdivrl
subl
pop
sub
xchg
pusha
flds
cmp
scas
movsb
es
pop
dec
pop
sbb
xchg
or
mov
jnp
shll
ret
and
shrb
cmp
movsb
in
sub
les
dec
adc
sub
test
incb
sbb
js
pop
sti
fiaddl
stos
push
push
and
push
mov
cs
push
cmp
es
mov
push
jne
add
or
adc
incb
sub
inc
test
and
mov
in
ret
mov
push
aas
and
and
sbb
xchg
filds
cmp
and
lret
fsubs
cmp
mov
mov
inc
in
sub
pushf
je
movsl
sbb
ficoml
and
outsb
mov
cld
and
sub
gs
bnd
cmpb
enter
sub
movsl
arpl
cmpl
cs
push
in
pop
and
or
fiadds
and
cmpsb
sbb
andl
and
and
outsl
and
aad
xchg
hlt
and
daa
inc
popf
frstor
or
push
roll
xchg
imull
test
stos
clc
lea
cmpb
jns
jp
es
cmp
pop
sub
in
mov
xor
lret
scas
dec
int
and
and
mov
sbb
sbb
sub
adc
stos
dec
aas
and
mov
icebp
or
insl
add
test
jbe
cmp
cs
mov
jo
and
mov
lods
test
mov
rcll
and
les
es
push
jg
jmp
xchg
add
cwtl
cmp
mov
adc
push
cmp
and
movsl
push
out
movsl
and
xchg
xchg
push
in
sbb
out
dec
leave
pop
and
fists
cltd
mov
ds
lods
add
xchg
push
inc
pop
in
movsb
shlb
adc
inc
and
imul
rcll
movsl
sub
xor
pop
into
aam
sahf
cmpsb
lahf
int
adc
and
sbb
cmp
xlat
out
in
cwtl
xchg
icebp
sti
das
and
loop
mov
and
mov
xchg
jnp
scas
aaa
dec
test
cli
pop
int3
ficomps
rolb
sub
dec
out
out
sbb
mov
cmp
sub
and
xorb
out
cmp
adc
scas
pop
arpl
inc
xchg
daa
inc
sarb
and
mov
cmp
xlat
push
and
int3
add
outsb
jl
lods
shl
shll
push
and
pop
sub
pushf
and
mov
and
xchg
clc
inc
pop
iret
out
jecxz
fsubl
or
lods
shll
xor
scas
inc
jne
sbb
mov
inc
lds
loop
nop
insb
lret
nop
pop
in
push
and
and
fimuls
and
push
int
loopne
stos
fisttps
fnstcw
scas
in
daa
movsl
lret
and
pop
sub
jg
fwait
cmp
das
lret
and
sub
and
out
and
sbb
and
in
lret
movsb
inc
jo
fadd
movsl
inc
and
test
dec
fsubrs
int3
xor
inc
sub
movsb
and
mov
pop
and
and
mov
and
aad
adc
push
or
cld
jne
idiv
and
out
adc
and
nop
xchg
cmc
rcrl
and
push
out
vmovntps
and
and
imul
clc
jb
and
notb
sub
add
dec
jo
in
daa
cld
aaa
mov
inc
fsubl
es
imul
cmpsb
pop
fsubs
sbb
and
xchg
and
add
movsl
xchg
andl
cmpb
cmpsb
test
sub
or
ficompl
repnz
push
sbb
xchg
jb
movsl
popf
cmpsb
fildll
daa
es
push
stc
int3
loopne
out
jp
repz
fwait
lods
dec
xor
icebp
or
mov
stc
cs
fisubs
jl
and
sbb
lcall
idivb
dec
and
cmpsl
dec
lds
and
in
sarl
push
xchg
bound
pushf
jno
loop
into
outsb
push
and
test
adc
inc
out
or
pop
and
cmc
ss
and
jle
nop
gs
pop
fisubs
xor
jl
push
sbb
pop
test
or
popf
fsubs
mov
movsl
and
dec
es
or
sub
das
std
mov
and
aaa
movsl
out
cmp
xor
in
cmp
lods
and
imul
and
aad
and
stos
xchg
adcb
mov
mov
sub
adc
sbb
lret
outsl
sbb
pusha
icebp
inc
jae
fldcw
and
xchg
mov
in
out
test
cs
and
xchg
cmp
cmp
jge
and
xor
scas
clc
pop
mov
and
add
inc
rclb
pop
stos
sbb
movsl
add
push
repnz
dec
or
in
and
jns
das
mov
out
or
sub
sub
in
loop
mov
cmpsl
bound
sub
and
pop
sbb
fwait
push
cmpsl
mov
cmp
test
mov
xchg
mov
sbb
pop
sub
xor
xor
mov
mov
lret
and
sbb
cmp
push
push
pop
and
sub
orb
cmp
xchg
cmpsl
les
pop
fs
and
es
repnz
mov
cmpsb
lret
adc
adc
sub
mov
or
and
and
gs
or
sub
mov
dec
mov
and
jb
or
xchg
push
and
and
ficompl
add
push
movsl
arpl
and
add
out
inc
mov
cltd
test
adc
sub
jle
pusha
scas
and
xchg
and
mov
jno
subl
and
shlb
icebp
or
data16
sub
mov
insb
and
pop
in
ret
leave
jns
cmp
lcall
insb
movsl
out
cmp
sub
sub
mov
cmp
test
in
sub
push
loope
dec
and
or
lea
stos
ja
pop
cli
imul
cmp
shrb
in
aas
js
and
xor
aam
and
mov
lods
cmp
out
rolb
das
mov
sbb
fisubl
xchg
cltd
and
in
outsb
fwait
dec
and
test
leave
fs
movsb
sub
sbb
mov
loop
in
ss
mov
and
sbb
arpl
push
push
or
inc
loopne
sbb
push
sti
and
or
xor
cmp
and
ds
and
sub
lock
fsts
movsl
and
cmpsb
pop
and
and
push
enter
movl
cwtl
xor
sbb
hlt
mov
test
inc
and
and
inc
jb
out
and
les
pop
sub
es
pop
rep
sub
and
jecxz
fsubr
out
jae
mov
in
stc
push
addr16
sbb
inc
jae
inc
daa
into
push
push
and
lds
cmp
lcall
ss
jne
daa
pusha
inc
adc
repnz
and
and
push
mov
mov
inc
xchg
add
cmp
inc
xchg
mov
mov
sbb
shlb
pop
sub
cmp
and
and
or
ds
cmp
xlat
test
push
cli
dec
cmp
or
jmp
xchg
outsl
push
in
call
cmc
sbb
pop
or
mov
push
lahf
and
mov
js
aad
das
sbb
les
cld
sbb
lods
jl
jb
push
or
sub
jae
and
add
lahf
fadd
mov
adcl
sub
dec
int3
inc
and
xor
pop
pusha
mov
inc
les
aaa
and
cmp
push
sub
outsb
stos
add
filds
xor
es
dec
push
and
in
mov
xlat
jae
sbb
xor
mov
and
add
pop
and
fnstenv
push
inc
ret
adc
push
sub
adc
pop
insb
repnz
adc
sbb
or
and
adc
pop
cmp
adc
and
pop
mov
xor
xor
daa
adc
jecxz
ret
add
mov
cmpsb
bound
fsubrp
cld
rcll
sub
cmp
das
fisubl
mov
push
lds
test
and
mov
sub
and
pop
mov
ss
push
in
ja
jbe
cmpsb
pushf
lods
xchg
cltd
cwtl
pop
jnp
jge
pop
pop
loop
xor
and
mov
popf
push
pop
outsl
and
jp
dec
cli
and
and
loopne
pop
cmp
sbbl
cmc
addr16
push
loopne
pop
xor
lock
sub
cmp
in
rcll
push
leave
sub
and
and
jnp
and
inc
mov
sub
mov
adc
sbb
ss
push
and
jne
test
jle
cmc
repnz
pop
pop
es
ss
push
mov
and
movsl
and
es
push
adc
lods
pop
sbb
pushf
cmpsl
pop
push
xor
xchg
inc
test
and
sahf
jp
in
ret
lret
pop
das
lods
and
push
enter
scas
int3
cmp
and
add
and
lahf
std
rcr
and
adc
adc
or
cmp
pop
push
leave
and
mov
and
test
aad
cmp
lods
sbb
ror
je
push
cmpl
mov
movsl
xor
in
sub
xchg
inc
xchg
stc
and
push
roll
cmp
cmc
addl
push
jo
cmpsl
pop
pushf
test
icebp
fisubrl
inc
or
mov
and
pop
cmpsb
jbe
and
sub
sbb
jmp
or
push
jb
dec
enter
sub
movl
pop
cmp
jno
sbb
xor
ss
pop
addr16
scas
pusha
iret
and
add
xchg
xchg
aad
loope
push
inc
and
and
es
inc
scas
jb
and
dec
out
imul
fcomp
iret
in
jge
cmp
sbb
daa
or
lret
adc
enter
and
inc
cmpsl
push
and
dec
loopne
and
movsb
es
jp
xchg
push
push
and
inc
sbb
xor
push
and
popf
inc
pushl
sub
test
mov
fxch
movsl
loop
and
and
jbe
je
in
xlat
add
and
sahf
mov
mov
dec
and
sub
punpckldq
sub
cmp
ja
clc
xor
leave
dec
xor
or
dec
push
daa
mov
and
outsb
in
gs
adc
cli
push
sub
push
dec
add
push
jo
and
sti
icebp
xor
xor
repnz
popa
scas
pop
and
mov
insl
fisubl
jecxz
push
sub
sbb
xor
and
lock
push
fs
xor
mov
std
lcall
cs
outsb
push
add
sahf
rorl
iret
imul
andl
ss
sti
sub
push
jne
cmp
dec
inc
and
seta
testl
and
and
popa
imul
and
test
sub
enter
fldt
jne
adc
pop
rol
and
dec
dec
xor
movsl
fsts
es
dec
imul
in
mov
lods
les
test
and
enter
es
jne
adc
aam
pop
push
sti
push
push
dec
mov
test
loopne
in
fidivl
std
sub
movsl
js
push
push
leave
and
xchg
fwait
mov
cmp
jmp
jl
push
cs
xchg
mov
andnps
insl
push
cli
jmp
stc
shl
adc
xchg
add
jb
mul
sbb
and
push
repz
inc
and
sub
enter
arpl
and
push
clc
ret
aam
lods
cwtl
inc
les
scas
xor
mov
inc
dec
lahf
pop
and
inc
xor
sub
fsubl
loopne
loopne
and
dec
ret
and
xor
bound
mov
aad
lret
and
sub
inc
mov
test
pop
ds
mov
das
sbb
xor
add
inc
aas
cli
mov
sub
cmpsl
sub
mov
cmp
stos
fbld
jbe
pop
adc
push
fcom
enter
fisubl
sub
and
xor
or
sub
lret
and
xchg
sahf
sub
xor
inc
jnp
and
push
fsts
fldt
and
stos
mov
xor
icebp
sub
cwtl
cmpsb
in
sub
jp
dec
in
xor
lods
xchg
and
std
jae
jp
and
movsb
adc
push
and
dec
mov
push
and
sub
popf
push
push
inc
and
xchg
add
push
cmp
mov
and
fisttpl
xorl
stos
and
xor
and
push
xor
ljmp
sbb
repz
xor
and
in
or
clc
jbe
shrb
sub
mov
mov
xchg
int3
cmp
ljmp
cmpsb
rolb
jg
jp
lods
call
xchg
lcall
push
clc
push
popa
push
testl
lods
out
push
and
movsl
and
ret
daa
and
sbb
push
inc
jl
outsb
daa
and
outsl
es
add
cltd
mov
stos
adc
sbb
out
xor
jo
ss
daa
cmp
in
and
flds
jmp
dec
adc
sub
mov
out
popf
xor
out
and
and
and
fstpt
push
xor
push
aam
sbb
mov
fisubs
mov
or
dec
and
popf
and
inc
dec
aaa
ficomps
mov
ja
and
pop
pop
sub
xor
outsb
daa
cmp
add
ljmp
sub
test
fcoms
mov
and
mov
clc
pop
int
and
mov
daa
loope
addr16
sub
lds
scas
mov
mov
es
mov
mov
rcll
shll
xchg
xchg
and
or
cltd
dec
sub
pushf
inc
daa
push
mov
insl
and
and
leave
sub
adc
inc
test
add
mov
out
in
mov
and
add
jl
imul
cmp
scas
sub
push
dec
cmp
je
lods
test
test
or
imul
cmp
add
gs
daa
inc
jl
lds
popf
call
and
push
imul
and
fstps
xor
pop
add
pop
xor
fldcw
push
and
and
sub
and
nop
and
scas
adc
mov
js
or
leave
adc
shlb
addr16
insb
inc
and
sub
mov
xor
pushf
fcmovnbe
push
and
lods
xlat
sub
xchg
adc
arpl
adc
mov
add
or
and
cli
add
mov
repz
lock
push
shll
and
and
imul
movsb
lea
and
je
pop
inc
popf
arpl
push
fstps
sub
jo
incb
jno
and
scas
xor
cmp
and
sub
pop
lret
sub
lods
xor
and
aam
shll
popf
sub
loope
je
aaa
cmp
mov
xor
jne
xchg
enter
and
add
cwtl
jg
mull
push
push
dec
and
popa
push
icebp
pushw
cmp
push
inc
fisubrs
jecxz
and
int
mov
jo
mov
cmp
pop
es
notl
cmp
cs
mov
test
and
push
dec
lret
push
dec
movsl
frstor
loopne
aaa
and
inc
jge
sti
test
cs
xor
xlat
xor
scas
and
fbstp
and
xchg
daa
xchg
stc
clc
sub
or
add
xchg
and
movsb
fiadds
mov
cmp
aad
faddl
sub
push
shrl
pop
sbb
dec
and
je
pop
and
dec
cmp
lcall
popa
mov
fst
add
push
push
or
jnp
pop
xchg
rol
cmp
push
ja
stc
push
xor
lahf
sub
xor
iret
and
shld
shll
push
add
frstor
and
and
and
or
fstpt
jmp
bound
lahf
and
stc
pop
popa
pop
cmp
or
lret
jecxz
leave
out
and
inc
sub
fs
movsl
insb
out
dec
leave
lret
push
int
pop
xchg
push
mulb
lahf
and
leave
and
adc
or
arpl
jb
and
daa
pop
xchg
dec
and
insb
vmovaps
daa
scas
push
push
and
pop
lahf
pop
repz
or
add
dec
xchg
xchg
fwait
jne
imull
shll
gs
addl
lcall
mov
pushf
sbb
and
decl
sbb
and
add
adc
sbb
jge
shl
inc
aas
and
cs
adc
popf
add
rcr
sbb
repnz
sub
push
and
and
sub
and
in
xor
and
jl
jne
or
or
pop
jecxz
cmp
inc
cmp
push
cmp
lock
sbb
mov
sbb
push
and
push
lods
aaa
sbb
jl
and
mov
mov
and
repnz
mov
xchg
mov
and
sbb
jo
dec
pop
adc
and
loop
aad
and
imul
loopne
jno
and
pop
xor
out
fcmovne
cmp
push
in
jns
lods
adc
call
sub
xor
pop
sub
pop
in
bound
jno
ja
jge
dec
push
dec
inc
int3
out
in
faddl
imul
jp
jbe
daa
and
jno
inc
mov
inc
fcoml
movsb
addr16
pop
mov
or
xchg
push
leave
enter
das
fidivs
cmpsb
pop
xor
xor
movsl
xor
lret
jl
sub
xor
icebp
push
sarb
movsl
outsl
adc
lret
je
mov
shrl
dec
mov
mov
lret
and
cmp
pop
dec
movsl
stc
pop
add
mov
push
sub
fdivrs
dec
and
loop
lretw
pop
lods
inc
int3
and
xchg
and
cmp
jl
mov
add
frstor
jle
jnp
and
xchg
lds
jp
jbe
mov
inc
shlb
xor
lcall
out
clc
loope
sbb
and
sub
das
and
dec
pop
jne
or
xchg
push
mov
rolb
jmp
leave
mov
mov
fiaddl
cmp
lcall
mov
mov
pop
inc
xchg
sbb
lods
rorl
es
pop
pop
inc
sub
incl
push
cmp
xor
mov
jbe
leave
push
and
decb
inc
scas
cmp
and
aaa
dec
mov
and
xor
leave
lods
push
and
and
dec
sbb
arpl
stos
cmp
cmpsl
in
jbe
fadd
jnp
sub
pop
xor
lods
mov
dec
das
add
repnz
push
mov
lahf
lods
imul
inc
pop
scas
lds
adc
sub
and
push
sbb
and
sub
mov
and
movsl
inc
and
and
sub
daa
xor
roll
lds
and
dec
mov
imul
test
ljmp
add
bound
mov
lods
mov
ret
out
insb
mov
push
and
xchg
cmp
jecxz
in
sarb
and
cltd
std
add
or
sub
push
and
or
fcmovne
sbb
movl
movsl
lret
pop
pop
ficompl
push
and
or
or
dec
push
ss
fldt
add
sbb
pusha
rcr
pop
lret
in
iret
or
xchg
jmp
addr16
sbb
aad
and
mov
ljmp
push
and
cld
sbb
out
es
lea
xchg
mov
in
jbe
and
xor
mov
cltd
mov
and
mov
push
inc
and
sbb
xchg
stc
mov
loop
inc
sahf
dec
movsl
push
cmp
fsubrl
and
inc
xor
gs
mov
mov
push
rcl
andl
leave
movsb
jno
je
xor
leave
call
cmpsb
and
push
push
and
mov
sub
subl
sub
lds
push
dec
and
dec
push
stos
and
not
int
and
mov
xor
sub
jge
arpl
push
and
dec
mov
xor
stos
cmp
pop
mov
sub
and
cld
fcmove
jg
mov
jle
or
lret
js
fldl
adc
fcompl
and
pop
ret
sbb
scas
cwtl
jmp
and
je
shlb
in
jbe
pop
and
sub
jb
and
cwtl
fwait
imul
xchg
cmp
loopne
in
loop
add
jns,pn
in
push
push
inc
stos
dec
call
and
aaa
aaa
sbb
and
sub
and
lods
xor
ss
lahf
sub
imul
stos
mov
xchg
ds
cs
xchg
mov
aad
and
loopne
and
cld
pusha
or
and
rorl
loop
inc
jle
dec
xor
int
in
and
test
orl
shlb
jmp
push
sbb
pop
ja
cmpsb
push
sbb
test
test
jno
add
fmuls
lahf
xchg
sub
mov
arpl
es
and
inc
cmp
mov
sub
push
mov
mov
in
sub
shlb
ror
cltd
xchg
add
and
testb
mov
xchg
cmp
fcomi
int
lret
cmpsl
dec
ret
sub
and
lea
and
cmp
loop
pop
fs
lds
cmp
gs
cmp
cld
xor
test
and
xchg
cmp
and
push
pop
cmpb
pop
push
rcrl
xchg
pop
xor
push
and
and
mov
jno
fiadds
cmpsl
lea
jns
and
in
mulb
insl
push
push
daa
push
sbb
fsubrl
lods
and
adc
dec
insl
lret
xor
sbb
lcall
and
bound
mov
jge
sub
and
scas
inc
cli
adc
and
add
xor
and
adc
sbb
jb
jg
pushf
and
jno
movsl
stos
mov
fs
and
add
insb
fisubs
fisubl
adc
and
fcoml
and
mov
enter
loop
and
pushf
in
jl
imul
add
cli
pop
addr16
aas
ja
iret
test
cmp
dec
and
out
inc
sub
mov
mov
test
and
xor
je
out
lret
jno
xchg
sub
cmpsl
gs
xor
jnp
fadds
and
in
lods
and
movsb
loopne
sub
pop
sub
insb
sbb
sbb
lock
push
jno
jo
int
xchg
subb
xchg
sahf
adc
and
sub
insb
xchg
xor
data16
int
and
lds
and
or
xchg
andb
mov
inc
and
mov
xlat
pusha
and
lret
js
push
and
mov
xchg
xor
cltd
jno
pop
call
and
sbb
and
lods
data16
push
sbb
loopne
mov
lods
pop
fstps
ja
and
xor
es
inc
dec
aaa
lods
jmp
cmp
repnz
and
pusha
jno
and
sub
push
sub
push
sub
or
jo
lods
ljmp
lahf
adc
loopne
ljmp
and
es
jle
sub
addl
jbe
and
pop
iret
movsb
jne
adc
das
sti
dec
push
and
inc
and
sub
push
push
cs
sbb
xor
loope
enter
xor
fiadds
jb
and
adc
sub
scas
jbe
popa
mov
dec
sub
jp
imul
int3
fwait
mov
add
clc
scas
imul
jo
lods
stc
movsl
add
gs
adc
sbb
ror
dec
andb
shrb
push
es
jbe
int3
mov
shr
shrb
cmp
imul
movsl
in
movsb
out
sti
xchg
inc
push
in
jle
cmpsl
shlb
jge
dec
pop
pextrw
mov
je
xchg
sbb
xor
and
mov
aad
pop
push
and
inc
into
cmp
and
and
dec
mov
mov
and
dec
enter
mov
sahf
mov
and
sbb
aad
and
xor
js
and
inc
inc
xlat
mov
jge
adc
stos
pop
and
loop
out
clflush
add
cmp
and
or
xor
es
ret
scas
je
test
leave
rorb
pop
and
sub
and
sahf
xlat
dec
adc
pop
or
pop
add
sbb
or
sub
pop
es
aad
and
and
mov
sub
cs
test
hlt
adc
and
imul
cmc
hlt
xlat
orb
sbb
jl
into
es
mov
popf
jo
scas
and
xor
leave
jae
and
popf
ss
cmp
iret
test
shrl
std
les
ds
and
push
jns
aas
and
push
shrb
sahf
and
in
sub
in
push
call
in
or
add
and
and
iret
pop
out
jl
leave
daa
in
sub
jns
xchg
and
sub
push
mov
jecxz
jo
movsl
scas
cmp
mov
stos
and
sub
sub
xchg
pop
aaa
ret
int3
pop
adc
jge
call
dec
jno
clc
and
and
pusha
xchg
and
lret
ja
cmp
and
jnp
jmp
push
jecxz
daa
std
test
dec
xchg
and
and
rol
pop
imul
es
in
push
xchg
enter
sub
aaa
mov
and
xchg
or
insl
adc
into
jnp
add
ds
or
cmp
push
xlat
gs
cld
ret
cmp
push
in
addr16
mov
daa
aaa
in
mov
cmc
sbb
jp
adc
push
or
push
cld
scas
xor
mov
imul
xchg
aaa
jo
cmp
mov
and
adc
into
dec
and
sahf
lret
cmp
mov
sub
adc
inc
cmovge
sti
pop
push
gs
xor
sub
xor
ss
shll
test
adc
sub
and
inc
inc
sub
jl
pop
loop
add
cmpsl
je
jns
bound
loopne
sub
test
out
and
and
mov
imul
lock
and
jecxz
inc
add
and
in
cmp
fs
xchg
popa
test
push
and
iret
push
cs
cltd
popa
sub
pushf
push
jae
ret
bound
mov
jl
jecxz
jle
lods
sbb
and
cwtl
cltd
jns
in
into
and
cmp
add
gs
mov
or
pop
pushf
shrl
and
addr16
fwait
adc
dec
out
and
lds
fsubl
flds
and
fnstcw
int
pop
test
push
out
and
lret
adc
adc
add
push
data16
es
mov
repz
and
and
pop
int
mov
loop
xor
ss
xchg
or
and
push
xor
add
push
sbbl
loop
xchg
adc
scas
sub
lods
aad
inc
sub
hlt
movsl
clc
or
add
loop
inc
mov
and
insb
bound
mov
sub
in
mov
or
dec
adc
adc
mov
in
orb
leave
and
mov
push
and
pop
movsl
add
mov
and
pop
or
push
and
xor
mov
mov
jle
and
daa
push
adc
and
mov
add
es
idivl
pop
mov
in
incb
aad
pop
mov
cltd
adc
sbb
inc
adc
push
cmpsl
and
sub
outsb
test
cld
cmp
out
sbb
cmp
lea
stc
mov
add
sbb
inc
cmpsl
in
and
std
sub
outsl
jae
sbb
adc
lret
and
popa
iret
cmp
or
mov
movsl
stos
mov
dec
add
fdivrp
insb
cmc
lret
xchg
and
xor
das
cmpsl
shrl
sub
xor
and
xchg
dec
add
pusha
and
repnz
test
push
orl
dec
fnstenv
mov
popf
and
and
dec
call
mov
push
loop
adc
mov
cmpsl
add
cmp
dec
inc
cmpsl
inc
cmp
xchg
in
das
push
and
notb
pop
and
int
or
push
lret
in
ljmp
movsl
and
pop
inc
mov
es
jno
fs
jp
shlb
test
adc
fnsave
pushl
rcr
and
sub
jbe
and
fstl
lods
sub
sub
inc
dec
mov
jl
or
fists
ficoml
cs
and
push
test
sbb
fidivrs
ret
pop
and
xchg
icebp
xchg
lret
rcrl
and
sbb
or
pushf
insl
sub
outsb
and
adc
insb
ss
or
push
jl
pop
mov
sub
jmp
and
mov
add
cmp
push
mov
add
movsl
sub
sub
inc
push
aam
fisubs
pop
xchg
and
cs
in
add
out
and
xchg
sub
pop
adcl
mov
stos
in
sub
lods
mov
pop
loope
push
cld
test
insl
inc
jge
xor
daa
push
outsb
sub
sbb
and
add
mov
and
sub
inc
sub
mull
cmp
mov
out
out
fwait
cmp
adc
mov
mov
test
ds
mov
and
mov
mov
inc
daa
pop
push
push
inc
mov
dec
dec
inc
inc
adc
insl
jbe
imul
fs
push
adc
push
gs
and
sub
filds
xor
into
and
dec
test
jne
dec
bound
or
xchg
and
orl
sub
and
cmp
xchg
add
and
push
xchg
jg
and
pop
push
ret
push
mov
or
and
pusha
and
sub
mov
fisubl
mov
ss
into
int
mov
mov
or
pop
jb
mov
and
ss
pop
sub
mov
mov
ds
cmp
sbb
aaa
mov
push
dec
cmp
rclb
sbb
jb
sbb
adc
popa
jbe
and
shrl
popf
dec
and
stos
cs
cmp
push
and
cmc
jne
dec
sbb
mov
inc
push
push
inc
push
push
and
push
fcmove
fmuls
cld
dec
pop
es
dec
dec
lret
push
in
push
push
test
jo
inc
and
lds
jle
insb
sub
adc
es
xchg
es
add
push
cmpsb
pop
shlb
inc
mov
sbb
sub
dec
in
dec
inc
dec
and
ja
jnp
shlb
or
mov
sahf
test
dec
shlb
ja
and
and
and
sbb
and
and
sti
adc
dec
push
mov
pop
inc
cs
popf
inc
lcall
sti
cmp
mov
add
scas
mov
andb
push
jbe
lahf
mov
and
fisubrs
insl
pop
push
add
xor
sub
popa
in
aas
and
xchg
and
imul
frndint
stc
and
mov
ljmp
cld
and
lcall
sbb
adc
adc
cmp
fwait
rcrl
loope
test
dec
jae
push
sub
cmp
test
jle
push
rorl
test
xor
xchg
xchg
cmp
dec
mov
xor
std
and
ljmp
je,pn
inc
fstps
and
mov
pop
and
inc
push
xchg
je
ret
aad
and
and
sbb
lea
bound
xor
dec
mov
pusha
aas
pop
std
sub
and
lea
orl
les
jl
pop
nop
sub
jmp
les
cmp
and
inc
xlat
add
imul
inc
push
enter
adc
sbb
xor
mov
ret
scas
repnz
and
or
mov
and
fs
fisubs
lret
inc
mov
or
pop
jg
inc
xchg
les
cwtl
es
and
inc
notb
and
rorl
and
fwait
leave
push
sbb
or
in
push
shll
push
or
pop
enter
shlb
sub
dec
or
xchg
gs
push
and
fildl
fwait
jne
sub
and
mov
dec
ljmp
dec
sbb
and
add
inc
dec
cmp
dec
gs
sti
ret
adc
xor
push
cmp
cmpsl
and
push
push
inc
dec
push
inc
xor
imul
dec
inc
pop
push
push
movsl
and
dec
dec
adc
lds
popa
std
and
or
push
dec
gs
dec
and
add
sbb
push
lret
xor
arpl
hlt
jno
lea
and
ret
add
add
outsl
sub
and
jbe
xor
push
cmp
out
clc
in
adc
and
dec
xchg
insl
pop
cltd
inc
xchg
and
xorb
and
pop
sbb
movsl
push
adc
push
and
cltd
add
push
enter
pop
sub
rol
jbe
sbb
int
dec
aaa
lods
jg
cwtl
cmp
inc
and
mov
aas
mov
jae
and
aad
popa
or
ftst
es
push
adc
cltd
cmp
and
dec
sub
add
jmp
es
dec
adc
pusha
pop
add
shlb
inc
or
xor
sbb
xlat
push
and
inc
insl
or
and
inc
dec
cmp
jl
push
rcrl
and
dec
dec
outsl
push
into
in
lds
and
mov
mov
cmpsl
cmp
int
jo
add
test
jl
and
push
popa
mov
scas
arpl
xchg
es
jne
movsl
pop
and
shll
aad
cmc
lods
clc
scas
jae
xor
jl
inc
add
fucomi
xchg
insl
push
dec
loop
dec
or
pop
add
sub
mov
sub
and
mov
jge
cmp
stos
ss
outsb
jp
fiadds
and
adc
and
mov
cmp
inc
sbb
sub
lock
pop
stos
and
inc
and
pop
add
jl
mov
shlb
mov
dec
pop
cmp
scas
je
shlb
addr16
jg
aam
fbstp
cwtl
mov
sub
push
or
scas
xor
dec
ja
sub
lods
data16
mov
fldenv
pusha
cld
push
cmp
inc
repnz
insb
mov
loope
ds
add
repnz
xchg
and
fistpl
xchg
sbb
and
cltd
jbe
movsl
std
movsb
rcrb
jge
fstp
sbb
cwtl
scas
insl
addr16
sbb
push
rolb
popa
mov
xor
cltd
mov
outsb
and
xchg
pop
stc
sbb
stos
movsb
ljmp
sbb
lcall
hlt
and
and
sbb
icebp
dec
sbb
inc
ficomps
jmp
test
insb
sub
cmc
mov
pop
aas
jge
andl
adc
outsb
jmp
sahf
fidivrl
cltd
and
dec
fst
and
fsubs
cmp
jbe
sbb
inc
jmp
push
and
bound
xor
and
scas
jp
dec
loop
pop
fsub
mull
mov
sub
aas
roll
loopne
cmpsb
sbb
outsw
testl
fldpi
push
cwtl
cmp
or
fcompl
adc
jmp
xchg
cmp
push
sahf
sti
dec
and
fcom
sub
sub
push
lods
movsl
lcall
and
fistl
aaa
mov
sahf
mov
and
xchg
jae
ret
mov
cmp
stc
rolb
and
shll
fs
pushf
sti
pusha
hlt
and
mov
push
mov
cmp
inc
js
mov
fimull
pop
xchg
and
shll
pusha
outsl
gs
pop
je
or
dec
sbb
lahf
test
shrb
or
mov
sbb
iret
and
xor
push
sbb
and
sbb
or
adc
sub
daa
pop
and
sub
inc
sahf
in
xor
inc
in
xor
and
and
rolb
mov
inc
out
loop
and
jg
loope
pop
and
mov
add
xchg
gs
es
sti
and
pusha
aad
std
out
sub
rcrl
dec
mov
je
xor
cmpsl
shll
xor
pop
popa
lods
and
fsubs
imul
bound
xor
mov
push
cmp
dec
xor
adc
movsl
and
push
inc
pusha
cmp
xor
add
int
add
sbb
and
pop
xor
and
xchg
jge
daa
and
push
scas
and
popa
push
iret
into
and
jbe
ja
cmp
adc
in
mov
jmp
push
and
lods
rcrl
lea
out
daa
andb
sub
and
loop
mov
aam
in
jecxz
and
sub
mov
nop
jns
sbb
cmp
inc
mov
dec
mov
pop
xchg
and
lds
mov
movsl
lods
lahf
sub
lods
add
fistpll
bound
and
dec
xor
mov
and
inc
fsubrp
lret
mov
testb
push
add
pop
daa
and
push
roll
add
inc
loope
hlt
mov
jb
fsubrs
dec
fistps
push
add
cmp
mov
ret
shrb
cmp
cmp
cs
test
aad
push
es
inc
cmovae
fldenv
sbb
hlt
and
lds
push
sub
bnd
jae
and
loopne
insb
cmp
jbe
inc
cmp
into
inc
xchg
ftst
dec
xchg
mov
mov
xchg
sbb
adc
and
push
add
pop
es
cmp
scas
fdivr
and
xor
ret
shrb
loop
xor
and
cmpsb
sbb
inc
inc
int
inc
and
sub
inc
and
insb
out
cli
and
mov
mov
xchg
movsl
sbb
jge
mov
dec
clc
and
sbb
dec
pop
aaa
pop
gs
push
mov
aam
jnp
or
cmp
movsl
and
int3
into
cmp
out
int
jnp
roll
pop
jg
movsl
jle
inc
cmp
jl
sbb
xor
push
dec
es
aas
nop
ja
xor
bound
jo
add
ljmp
fdivrl
dec
subb
outsb
sub
cmp
cmp
sub
sub
ds
das
test
adc
xchg
or
xchg
cmp
and
push
xor
xor
sub
movsl
jge
int
dec
into
and
js
mov
xor
roll
out
gs
push
shrl
daa
ds
mov
adc
into
fnstenv
cmp
scas
frstor
mov
inc
dec
daa
pushf
and
fimuls
stos
je
out
xchg
out
sarl
out
cmp
pop
inc
sub
mov
inc
movsl
xor
outsb
sbb
push
cltd
pop
sub
gs
fiaddl
pop
and
push
movsb
cmpb
and
aam
inc
outsb
cmp
pop
sbb
push
cmp
and
daa
xchg
cmp
imul
lods
and
cmp
jmp
xor
inc
arpl
and
jns
outsb
lahf
and
pop
adc
in
and
mov
ret
and
mov
and
sub
es
into
pop
mov
fcoms
mov
insl
jo
mov
xchg
push
xor
xchg
and
aas
pop
inc
in
push
cmp
mov
mov
fsub
cmp
in
or
daa
cli
sar
cmp
out
testl
and
add
sarb
dec
shll
and
push
mov
and
mov
mov
jecxz
mov
and
mov
es
js
jge
icebp
movsl
jno
lahf
push
roll
mov
imul
inc
outsb
and
dec
jge
stos
and
daa
xor
xchg
xchg
sub
adc
and
aad
and
fldt
pusha
adc
fsubrl
inc
cmp
add
and
xchg
and
jae
fdivs
and
popf
jo
je
dec
and
pusha
in
push
inc
jnp
and
xor
sub
and
xchg
mov
lret
dec
and
and
cmp
fwait
add
dec
pushf
xor
hlt
scas
and
push
ja
das
daa
sbb
test
cld
sbb
mov
xor
js
adc
scas
icebp
and
lock
xor
adc
in
and
ror
pop
inc
test
cmpsb
pusha
fs
in
leave
rcr
and
int
shl
mov
dec
inc
jo
mov
push
adc
aam
or
out
gs
ds
movsb
lds
fsubs
and
dec
fisubrs
pop
push
xor
mov
int3
scas
inc
and
addl
cwtl
mov
movsl
shll
and
hlt
or
cs
std
xor
inc
popf
cmp
movsl
sbb
push
cwtl
lea
loop
shll
movsl
out
pushw
das
push
cmc
cmp
or
data16
and
and
lods
inc
and
mov
test
inc
rclb
loope
cs
int
aaa
xor
and
js
lret
out
fwait
dec
movsl
jmp
cwtl
or
int3
sbb
leave
or
in
xor
in
and
idiv
sbbb
movsb
rep
or
adc
mov
lret
ljmp
add
dec
and
add
push
add
ljmp
lock
dec
test
push
sbb
pop
push
and
lcall
push
sub
push
xlat
jo
or
outsb
inc
cmpsl
push
iret
push
jne
fnsave
sbb
and
or
inc
outsl
cmpsb
lret
cmp
insb
pop
out
lahf
fistl
fldenv
loopne
sub
stos
push
in
pop
mov
inc
dec
and
inc
xor
sbb
andl
aad
dec
dec
lret
pop
pop
mov
fimuls
adc
and
sahf
and
inc
sub
lock
aaa
cmp
ds
lods
and
cmp
and
sbb
sub
cmp
dec
les
inc
pop
add
ret
mov
jo
and
sub
jge
fnstenv
add
pop
jne
mov
test
and
and
icebp
push
vpsubusb
sbb
jne
xchg
jmp
mov
rorl
and
and
dec
mov
inc
ja
xor
jns
mov
xchg
fstpt
insb
cmp
push
outsb
sbb
movsl
and
imul
pop
ds
je
into
and
jbe
dec
inc
and
repnz
push
pop
and
cmp
sbb
pop
jne
and
in
mov
jno
sub
es
dec
out
stc
cmp
lds
aad
and
jle
lret
daa
bound
icebp
sub
xchg
movsl
mov
je
scas
icebp
cmp
add
pop
add
mov
inc
and
jecxz
sbb
add
adc
pop
in
xor
in
leave
out
cmp
shlb
sub
int
arpl
fisubs
lds
mov
jns
cmc
movsb
mov
nop
and
fidivs
in
pop
aas
and
cmc
adc
out
inc
and
pop
pop
push
pushf
cmpsb
ret
int3
push
push
ljmp
out
mov
cmp
push
mov
or
xchg
jl
nop
fucomp
pop
and
and
xor
and
sub
add
scas
xchg
and
pop
loop
add
loopne
sub
and
push
mov
push
int3
cmpsl
ja
and
sub
sub
insb
fists
xchg
and
mov
inc
mulb
xchg
xor
out
fnstcw
and
mov
sub
dec
jecxz
adcl
ds
xor
arpl
ficoms
and
nop
cmc
adc
push
adc
sbb
push
and
subl
pop
aad
pop
fisubl
es
and
call
pop
jnp
cs
xor
add
movsl
pop
inc
popa
ss
out
and
cld
cwtl
in
cmp
mov
and
push
mov
fwait
push
mov
and
and
and
movl
gs
movsb
mov
and
out
jp
arpl
out
stc
mov
in
jg
and
cmp
insl
sub
pusha
jle
pushw
cmp
imul
and
lods
pop
jae
jo
sub
jno
arpl
aaa
ret
add
popa
imul
sahf
inc
push
pop
bound
in
out
adc
inc
outsl
push
cmpsb
fidivl
arpl
data16
fs
xor
pusha
outsl
cmp
sub
jl
adc
mov
out
or
xchg
or
mov
jecxz
into
mov
and
mov
cmp
xlat
cmp
jnp
mov
sub
and
hlt
jbe
push
and
jne
cs
pushf
dec
cmp
outsb
and
mov
jge
aad
bound
pop
push
and
out
movlhps
daa
rol
xor
push
cmp
cmpsl
and
movsb
sub
out
and
popa
mov
cwtl
add
addr16
push
aaa
adc
out
into
pop
es
movsl
dec
cltd
or
fwait
orb
cmp
mov
and
ja
fists
cmpsb
pusha
aad
rep
push
rorl
test
pop
inc
dec
mov
and
inc
data16
and
cmpsl
add
lds
adc
dec
push
mov
dec
push
push
xlat
lret
dec
test
and
out
and
cmpsl
mov
adc
addr16
push
lahf
and
cli
into
adc
and
dec
and
inc
adc
jmp
dec
out
aas
gs
movsb
stc
sbb
adc
jnp
pop
ja
addr16
or
hlt
mov
loop
add
push
push
add
inc
rorb
into
inc
dec
inc
xchg
outsl
in
movsb
ds
lcall
inc
and
cmp
sbb
dec
mov
insb
sbb
inc
pop
jle
and
inc
lret
cmp
inc
mov
sbb
push
negb
pop
mov
pushf
out
jo
sub
outsb
mov
mov
into
mov
xor
cmp
cltd
push
sub
pop
in
push
loop
adc
sbb
xchg
cmp
loope
mov
and
out
lret
push
popa
das
jmp
adc
aaa
arpl
push
inc
loope
inc
xor
fldl2e
movsl
cmpb
movsb
je
mov
push
jle
test
cmp
or
push
sbb
and
test
mov
scas
leave
in
pop
mov
and
rorl
cmp
outsb
push
movsb
cmpsb
cmp
mov
xchg
pop
es
push
adc
ss
hlt
pop
and
mov
cli
and
fs
lahf
cmc
mov
add
mov
mov
sbb
fisubs
cmpsb
rorl
push
add
xchg
inc
mov
insl
and
jb
in
shll
or
pop
or
pop
and
mov
pop
xchg
pop
hlt
mov
pop
scas
cmp
movsl
ss
inc
lods
sub
cs
lds
jb
fcmovnu
sbb
pop
inc
gs
pop
mov
sub
and
jle
pop
ret
pop
and
jnp
jge
jmp
cmp
incl
and
pusha
in
push
dec
and
jno
or
icebp
stos
test
mov
push
pop
xchg
pop
sub
mov
mov
pop
sub
gs
into
pop
outsb
stc
xor
jno
clc
movsl
cmp
cli
and
mov
pop
loopne
jnp
mov
push
mov
test
je
pop
inc
and
push
in
and
outsb
sahf
cmp
icebp
lret
bnd
mov
adc
mov
and
stos
and
inc
out
xchg
jle
cmp
movsb
outsl
jae
sbb
pop
add
and
push
adc
in
xor
mov
sbb
loope
lahf
xor
shlb
iret
and
movsb
jp
pop
and
sub
jge
pushf
std
call
stc
push
mov
jbe
jp
and
std
push
pop
push
arpl
pop
adc
and
push
jb
mov
jp
das
inc
pop
sub
cmp
inc
fnstsw
pushf
dec
insl
arpl
push
and
cmp
pop
test
and
xor
and
aam
mov
push
pop
jge
and
out
aad
daa
out
leave
jmp
lea
add
fbld
push
xor
and
sub
cld
xor
mov
pop
cmp
jo
addr16
aas
sbb
arpl
cmp
mov
cwtl
lcall
data16
movsb
aaa
mov
out
scas
cld
push
mov
cmc
dec
mov
dec
sub
ret
int
fistps
sbb
bound
mov
cs
xor
push
test
aam
ljmp
and
push
inc
xchg
mov
icebp
in
dec
and
mov
pusha
pop
out
cmp
mov
and
push
loopw
negb
movsl
fnstsw
out
sub
inc
push
or
adc
xchg
adc
add
mov
stos
icebp
movsl
dec
fsubrl
cmp
and
jne
and
mov
loopne
cmpsb
or
arpl
popf
jmp
iret
and
and
inc
outsb
and
aam
add
and
xor
pop
movsb
cmp
sbb
push
and
mov
and
push
and
outsb
lcall
imul
fisubl
repnz
adcb
push
and
mov
and
out
sbb
and
sub
cmpsb
dec
and
add
push
mov
es
movsb
or
je
outsb
aad
imul
and
jns
sub
and
cmpsb
ret
and
mov
xor
in
sub
inc
push
dec
and
pop
dec
push
add
movsl
popf
jnp
and
mov
pop
dec
call
insl
add
das
inc
inc
aaa
add
and
push
fidivl
mov
es
movsl
sbb
add
and
xor
data16
in
das
and
and
dec
and
xor
and
lret
movsb
push
dec
ret
add
xlat
scas
mov
pop
push
and
xor
pusha
and
dec
inc
dec
xlat
and
cmp
test
mov
dec
sub
and
jmp
push
add
jae
inc
and
addr16
push
inc
xor
push
push
and
dec
xchg
add
pop
pop
push
push
or
and
pop
or
push
pop
inc
sbb
push
movsl
dec
dec
inc
lea
sbb
aaa
cwtl
cmp
xchg
inc
sbb
fisttpll
movsb
and
sub
shlb
pop
cli
lods
push
scas
dec
and
movsl
in
push
movsl
adc
cmp
inc
movsb
mov
dec
lock
aad
scas
jge
dec
and
divb
popa
pop
and
add
or
and
shlb
cmp
aaa
popa
cli
ja
sbb
adc
add
dec
adc
and
pop
mov
push
and
punpcklbw
jp
dec
and
adc
das
and
fisttps
stc
sub
push
movsl
arpl
push
imull
cmc
in
jge
cmp
xchg
and
mov
xchg
pop
aam
pop
pop
jp
add
and
jmp
add
mov
aam
insl
das
sub
cmp
xchg
in
enter
push
and
mov
and
lret
xor
and
aas
xchg
addr16
xchg
and
or
push
aaa
and
and
pop
fldl
pusha
xor
loop
fcmovb
xor
and
xor
add
negl
test
es
xchg
fiaddl
and
fistps
jl
std
jno
push
scas
push
dec
and
je
jne
fisttpl
jae
or
andb
test
dec
xchg
adc
inc
jns
and
sub
hlt
into
es
loop
movsb
cmp
les
sti
and
or
mov
xchg
pop
jb
fsubs
popf
inc
addr16
out
and
test
rcl
jne
xor
push
mov
xchg
and
and
sbb
es
daa
add
movsl
push
stc
xor
push
andps
adcl
aas
jne
aaa
and
pop
and
mov
fsubrp
and
leave
sub
fbld
pop
shlb
xlat
and
mov
and
mov
sub
jo
mov
xchg
sbb
jbe
aaa
adc
dec
pop
jb
xor
dec
ret
arpl
xchg
dec
push
pop
fwait
and
sub
loop
xlat
cmp
dec
mov
lret
inc
lret
dec
in
movsl
mov
sub
shll
inc
or
les
mov
lods
test
lods
insl
and
mov
pop
cmp
and
inc
mov
jmp
add
or
bound
sub
mov
lds
aad
and
jle
das
push
xchg
cmpsl
addr16
popa
repz
add
cmp
xor
insl
in
movsb
jp
sub
mov
sbb
and
cmp
stos
int
adc
inc
inc
and
dec
popf
popa
in
inc
shll
jecxz,pt
movsl
push
ret
cmp
cmp
mov
movsl
dec
repz
das
mov
xor
jge
push
dec
movsl
test
xchg
in
and
mov
mov
aad
pop
fisubl
lea
cmp
push
inc
push
cmp
dec
inc
gs
mov
and
mov
xor
push
popf
insl
mov
out
test
push
and
leave
cmp
adcl
sub
nopl
in
pop
add
movsl
add
out
nop
mov
and
dec
pop
or
and
mov
in
dec
inc
es
sti
mov
in
sbb
dec
iret
and
push
fadds
dec
and
add
rclb
sahf
mov
adc
inc
sub
ss
inc
es
rcrl
jnp
cmpsb
popf
mov
jp
push
adc
stos
xor
mov
pop
mov
mov
adc
popl
push
int
ljmp
cs
lods
popf
and
mov
or
inc
into
dec
xor
dec
and
push
bndstx
mov
pusha
ret
fisttpl
and
movsb
fnstcw
fdivs
fisubrs
mov
push
sbb
fsubrl
in
push
popa
or
repnz
daa
scas
ja
mov
stos
es
fcmovne
scas
mov
push
xorb
lods
shrl
ljmp
mov
scas
std
sub
jne
xchg
and
or
sahf
insb
push
cmc
sbb
adc
mov
sbb
push
and
int
into
xor
mov
and
sub
int3
aad
and
movsb
sub
lods
out
in
cs
and
loope
jl
add
cmpb
cmp
shlb
push
ret
fisubrs
mov
movsl
in
jnp
xorl
hlt
shlb
mov
xchg
mov
and
insl
and
mov
mov
pop
sub
subl
pop
das
xchg
add
cwtd
and
in
cmpsl
sbb
and
pop
pop
out
add
and
jo
fidivl
call
and
dec
add
int
iret
and
fiaddl
pusha
push
mov
sti
jo
cmp
and
pop
es
popa
and
add
iret
daa
insw
jo
jb
in
lahf
fstpl
and
icebp
fildll
xchg
inc
pop
pop
add
push
loop
jae
mov
cmp
daa
and
arpl
stos
pop
and
mov
dec
mov
sbb
mov
push
int
xchg
shlb
std
cmpsb
mov
cmp
mov
pop
and
mov
lcall
aas
and
adc
jecxz
xchg
aad
daa
mov
pop
ss
movsl
fmul
jne
mov
in
test
xchg
jnp
cmp
push
mov
push
adc
int
pop
and
xchg
mov
pop
xchg
roll
inc
or
fs
inc
sub
xor
push
sub
push
and
cmp
add
jb
adc
pop
movsl
cmp
shll
inc
mov
jge
cs
in
pop
arpl
and
jle
sub
cmp
lea
sub
cmp
add
lcall
les
adc
lea
sbb
pop
inc
sbb
mov
push
or
and
fstpl
sub
and
push
add
loope
daa
dec
and
in
and
mov
or
add
inc
push
ja
add
sub
rcrl
arpl
mov
sbb
sbb
jg
fs
jne
into
cmp
and
dec
and
push
shlb
xor
jns
sbb
test
pushf
or
cmp
es
mov
icebp
or
gs
adc
mov
add
popa
or
sbb
or
and
es
and
mov
gs
and
rorb
dec
adc
pusha
mov
sbb
nop
cmc
xchg
push
pop
ss
or
adc
add
and
in
mov
push
push
and
dec
fbstp
aam
fsts
hlt
and
int3
mov
sub
push
jg
cmp
stos
push
dec
daa
pop
cmc
out
fbld
je
iret
or
ret
movsl
xchg
mov
loopne
dec
mov
jge
or
xor
sarl
jno
add
sub
xorl
out
push
sub
jl
and
adc
lcall
outsb
xchg
and
movl
movsl
mov
and
and
add
jge
push
add
in
mov
inc
cmc
fistl
fnsave
popf
shrb
xchg
into
or
and
es
and
sub
and
and
jbe
mov
inc
aaa
pop
adc
dec
and
or
pop
push
push
int3
jns
mov
stc
push
add
subl
in
jo
aad
and
popf
test
and
push
in
sub
shl
and
mov
and
imul
or
int
push
filds
leave
aam
and
ds
and
inc
popa
jge
and
test
lods
cld
inc
and
push
or
sub
fstpt
and
rorb
pop
std
push
pop
cmp
xchg
mov
and
mov
and
sub
pop
add
and
xor
cmpsb
iret
lods
in
jmp
sub
dec
sub
fs
xor
int
add
data16
cmpsb
inc
and
lret
mov
add
cmp
sub
lds
sub
test
std
push
mov
iret
and
jle
push
imul
es
cmp
mov
jb
inc
imul
sbb
push
inc
int3
or
xchg
and
subl
pop
dec
sub
sbb
cmpb
and
sub
and
cld
push
fldt
mov
mov
and
aas
lret
push
jl
and
inc
mov
pop
and
dec
repnz
aad
mov
call
pop
mov
mov
addr16
movsb
lds
fs
and
sub
out
dec
sub
stos
ss
cli
add
jo
mov
push
jnp
icebp
pop
in
push
popl
mov
push
mulb
mov
lcall
scas
and
imul
daa
clc
std
in
dec
inc
and
xchg
and
stos
and
add
sub
mov
roll
sbb
mov
and
cmpsl
aas
sub
jmp
adc
sub
push
and
push
cmp
pop
and
sti
cmpsl
loope
lret
jo
pushf
sahf
test
aam
stos
mov
data16
dec
add
dec
mov
pop
and
sub
xchg
ss
jge
and
mov
mov
xchg
add
out
and
cltd
ja
jge
dec
push
imul
cmc
add
cmp
mov
in
insl
out
and
ds
inc
cs
jp
and
jle
andl
and
sub
sbb
add
inc
and
pop
jbe
sbb
and
test
inc
insb
xor
mov
and
sub
and
mov
data16
ja
repnz
movsb
addr16
and
and
sub
bsr
cmc
popa
push
and
and
pextrw
sub
pop
pop
push
jb
aaa
xlat
or
and
cmp
pop
and
andl
sti
push
test
js
mov
inc
and
and
pop
sub
inc
and
cmp
and
sahf
in
adc
push
sub
cli
fidivs
test
shrb
and
data16
shrl
fsubrs
test
cmp
and
aaa
fwait
sbb
mov
xor
and
lea
mov
and
in
xchg
sub
daa
je
xlat
les
jb
add
push
je
mov
sub
dec
in
and
mov
fsubrs
es
lods
mov
cmp
data16
je
ret
cmp
stos
fsubs
mov
and
pop
mov
arpl
and
inc
jns
add
mov
lods
push
and
pusha
cmp
call
daa
push
xchg
push
fldt
mov
push
fldenv
adc
aas
bound
xchg
inc
stc
sbb
sub
pop
mov
fiadds
ret
shll
adc
mov
lea
pop
push
cltd
cmp
imul
out
sub
pushf
sub
inc
shr
lahf
adc
xor
movsl
inc
ss
adc
cmp
sbb
pop
movsl
add
sbb
and
pusha
and
mov
and
gs
inc
out
fwait
cld
sbb
adc
in
outsb
fcmovu
xor
insb
jae
data16
xor
cmp
and
dec
fisubl
outsb
or
clc
lahf
inc
es
pop
lcall
pop
cmp
cwtl
clc
and
ss
lret
fstp
out
sub
pop
imull
mov
push
test
das
ljmp
adc
xchg
cmp
ss
cmp
mov
jne
sub
sub
or
imul
and
pushf
xchg
outsb
les
sbb
inc
push
sub
or
and
inc
add
pop
fs
push
adc
es
and
popa
sub
add
pop
jb
jo
lea
clc
or
xchg
push
jl
movsb
loopne
xchg
sbb
fcmovne
imul
jne
and
sub
cs
adc
push
inc
push
and
dec
adc
and
jle
hlt
push
and
clc
cmpsl
dec
cs
cmpsl
adc
and
jns
fsubrl
shll
jo
stc
push
xor
lds
and
or
insb
xlat
mov
dec
push
adc
or
adc
sub
bound
lds
mov
fstpl
and
sarl
fadds
and
pop
pop
adc
mov
cld
cmpsb
and
cmp
inc
loope
popl
lcall
cmpsb
in
dec
fs
inc
lods
pop
movsb
and
andl
dec
jmp
insb
or
data16
xor
sub
fcom
lds
pop
mov
popf
adc
jae
sti
mov
sub
into
pusha
or
clc
jns
rclb
fnstenv
and
jecxz
scas
sub
into
int3
loope
test
es
dec
sub
and
call
fsubl
sbb
and
call
pop
sub
sub
add
pop
or
popf
test
sub
lds
or
lods
and
dec
dec
bound
pop
pop
test
sbb
cwtl
and
mov
cmp
adc
movsl
or
leave
and
xor
inc
dec
pop
mov
mov
inc
or
pop
xor
shll
aas
jg
pop
mov
call
imul
jp
test
not
popa
and
cli
mov
lcall
and
inc
cwtl
scas
push
jmp
lcall
dec
mov
cmp
fsubrs
cmp
jp
mov
adc
mov
movsl
pop
sbb
daa
stos
mov
jge
push
and
sbb
or
and
jo
jbe
and
fstl
and
pop
shrl
sub
xor
in
xor
ds
cmp
cmpsb
inc
cwtl
xor
sbb
xchg
jp
sub
das
cmpl
fwait
popa
and
xor
dec
adc
sub
mov
shlb
cmpb
push
cmpsb
mov
das
pop
and
add
lcall
add
cwtl
xchg
lods
jbe
rcl
mov
xchg
and
inc
mov
icebp
int
sub
add
xor
mov
stos
mov
jns,pn
lods
cmp
mov
push
push
jo
call
scas
stos
mov
add
mov
fs
pop
and
std
and
or
pop
and
nop
mov
lret
fwait
out
andb
pusha
lods
ja
and
sub
jg
int3
or
jb
mov
das
shll
movsl
xchg
insb
vmptrst
pop
cmpsb
mov
dec
xchg
sahf
es
sub
inc
xchg
lods
rcrl
sbb
out
bound
cs
fstpt
in
push
je
cmpsb
es
notl
int
jmp
or
mov
jb
push
xor
fstp
in
xchg
xor
data16
cmp
outsb
mov
xor
xchg
cmpsl
cmpsb
pop
push
mov
iret
adc
ja
fsubrl
mov
xchg
jmp
int
gs
xchg
adc
gs
aaa
and
cmp
imulb
mov
jmp
sub
push
sbb
and
das
movsl
mov
in
call
out
cld
xor
push
in
and
cltd
inc
and
and
out
and
mov
lea
cli
push
nop
and
daa
dec
jle
cmp
jo
icebp
sub
aad
std
gs
iret
inc
push
and
push
push
test
sub
and
mov
mov
roll
shlb
loopne
popa
mov
rcr
add
cmp
sub
in
insl
xor
std
inc
dec
add
jle
inc
leave
or
and
jbe
push
sbb
and
xlat
sub
and
lcall
mov
add
loop
jne
sbb
xchg
and
jae
dec
and
and
push
addr16
push
jp
sub
out
aam
icebp
es
inc
xorl
push
add
or
outsb
jmp
jae
and
fcoml
and
inc
loope
mov
out
jmp
call
test
mov
sbb
cltd
popf
adc
adc
cmp
pop
mov
lcall
pop
sar
aas
shl
sbb
mov
mov
pop
push
push
sub
jns
mov
jge
xor
and
test
mov
mov
xchg
movsl
mov
out
ret
cmpsb
mov
cwtl
std
out
and
aaa
es
out
testb
shl
sub
inc
mov
ljmp
lcall
lret
add
mov
test
ret
stos
in
jbe
push
and
test
jns
loop
cmc
and
jmp
push
lods
movsb
jp
aam
mov
inc
and
int
push
cmpsb
mov
jl
cmp
loope
out
cltd
shrl
or
inc
subb
jo
sub
and
dec
jne
dec
movsl
push
sbb
push
fwait
and
inc
in
sbb
inc
ret
mov
movsl
out
dec
xor
and
cmp
pop
mov
add
sbb
cmp
gs
and
xchg
inc
es
in
movsl
repnz
jno
add
dec
in
push
mov
test
mov
jne
jnp
and
cwtl
sub
adc
in
and
mov
push
stos
cmp
ss
push
movsb
and
popa
ss
std
xor
mov
and
js
lret
sub
pop
movsl
je
sub
rcll
adc
inc
mov
dec
cmp
sbb
pusha
add
movsl
js
pop
out
add
inc
or
mov
aad
pop
lea
lahf
and
mov
sub
or
es
xchg
mov
push
jmp
push
add
lea
add
mov
mov
cmp
shrl
and
lret
xor
cmp
std
and
jl
pop
fcoms
jb
push
out
sub
and
add
fsubrs
and
fldenv
aaa
add
test
sbb
mov
ffreep
xor
xor
jno
imul
test
push
and
dec
dec
xchg
dec
sub
stc
js
sub
jbe
pop
jnp
inc
and
inc
dec
je
fildll
push
mov
daa
or
or
cs
sahf
shrl
push
xchg
inc
in
scas
lahf
popf
ret
or
gs
xchg
and
cmp
test
push
dec
xchg
sub
daa
sbb
jecxz
inc
push
inc
push
push
and
int
add
and
test
enter
jnp
imul
inc
dec
add
and
jp
jne
and
or
push
js
daa
push
sub
inc
test
imulb
movsl
mov
imull
push
ret
sub
cld
or
sub
and
and
and
lds
mov
add
push
cmp
jns
in
cmp
fmull
and
adc
es
and
dec
inc
jle
push
popf
and
int3
int
popa
push
and
xchg
sarl
je
addr16
adc
cmpsb
dec
dec
inc
push
inc
shlb
fstl
push
pop
push
cmp
cmp
cwtl
popl
ds
sub
cmc
add
jb
pop
gs
sub
imul
xor
sbb
jp
mov
gs
xchg
daa
aam
es
cmp
xorb
and
xchg
push
adc
insb
jbe
aad
xor
popf
adc
pusha
xchg
int
movsl
pushl
cmp
flds
adc
aas
ds
lds
xchg
ja
gs
jl
dec
cmp
push
cmpsb
out
jp
dec
movsl
push
add
mov
cmp
pop
fisttpl
fs
incl
push
movsl
jno
push
out
push
pusha
and
outsl
pop
push
int
ja
out
push
mov
inc
pop
and
or
jmp
test
insl
and
mov
adc
dec
icebp
aas
lds
pop
stos
and
dec
and
adc
and
lret
outsl
push
aaa
fidivrl
lock
in
es
dec
adc
jno
jo
ja
pusha
gs
sarl
add
ret
add
mov
inc
or
jl
dec
xor
sbb
dec
adc
lock
dec
fwait
push
push
and
mov
movsl
mov
lahf
jecxz
pop
xchg
and
insb
loope
jp
and
and
sub
jnp
pop
jno
in
out
jne
pusha
mov
int
pop
addl
dec
inc
mov
pop
jmp
jo
mov
lret
mulb
sub
popf
and
add
add
std
aas
gs
inc
and
and
cmp
lock
add
dec
stc
xchg
jnp
pushl
in
inc
and
lret
in
cltd
insl
in
insb
iret
sbb
mov
pushf
int3
xchg
aas
dec
add
cmpsb
sbb
and
and
sbb
and
frstor
outsl
mov
testb
inc
shrb
inc
sub
sub
fsubs
add
mov
add
and
das
lret
cmp
out
es
inc
and
adc
fdivrs
mov
test
xlat
pusha
sub
push
cmc
das
or
fcmovne
roll
adc
lods
call
add
xchg
and
cmpsb
xchg
jo
and
ret
sub
ss
mov
mov
jae
push
xchg
add
and
mov
mov
push
mov
je
ret
mov
test
in
jle
and
subl
sbb
and
inc
jge
scas
and
or
add
and
vmwrite
add
add
or
and
in
cmc
out
std
test
push
push
add
jns
inc
and
ljmp
or
imul
in
mov
cwtl
cmpsb
pop
and
mov
ret
xor
push
jmp
ljmp
aad
and
add
cmp
and
inc
out
movsl
xor
adc
adc
rclb
mov
add
sbb
outsb
lcall
call
push
sbb
and
rcrb
xor
mov
push
and
mov
mov
repnz
sub
and
int3
mov
mov
adc
imul
dec
pop
add
and
lahf
popa
and
in
mov
push
sbb
in
mov
cmpsb
cld
roll
cmpsl
and
movsl
and
adc
jle
movsl
jmp
insl
mov
sub
push
frstor
adc
and
sub
test
es
xor
inc
int
insl
mov
in
pop
pop
cmp
cmp
inc
scas
add
add
sub
xor
xchg
gs
sub
sub
movsl
std
push
pushf
or
mov
xchg
fwait
cltd
and
jmp
ds
cli
jo
sbb
jecxz
mov
aaa
and
and
inc
pop
adc
in
lods
xor
and
fdivr
and
sbb
movsl
fs
sbb
pop
and
fsubrp
xor
mov
popf
and
pop
xor
push
and
sbb
jb
sub
or
cmpsl
xchg
std
js
and
popf
and
stc
push
sub
or
stos
loopne
xor
dec
and
jb
inc
in
sub
enter
cmp
es
out
mov
dec
and
jb
cmc
dec
in
inc
scas
addr16
je
leave
xor
and
inc
sbb
gs
dec
jnp
in
cs
and
inc
and
test
lcall
and
shll
pop
fldt
ret
aaa
xchg
cmp
popa
and
adc
and
mov
mov
sbb
xchg
movsl
mov
daa
cld
call
in
mov
push
cmp
and
rcr
and
and
cmp
pop
in
pop
fisttpl
cmp
jge
xchg
es
push
js
sub
push
jbe
aaa
in
push
add
popa
xchg
and
cmp
xchg
jle
and
mulb
xlat
icebp
cmp
scas
pop
andb
push
fisubrs
jge
aaa
sub
test
sub
popf
loop
pusha
shll
push
sub
jmp
out
and
outsb
mov
popa
sbb
lds
push
sbb
movsl
arpl
ja
rorl
dec
jmp
adc
cmpsb
stc
sub
outsb
es
ljmp
leave
adc
gs
int
xor
lods
loopne
ret
notl
gs
dec
mov
adc
movsl
nop
pop
lcall
aam
adc
ljmp
iret
add
pusha
push
cmp
cmp
mov
push
es
jle
mov
adc
movsb
cmp
fisubs
push
and
sub
or
into
stc
inc
cmp
repnz
cmp
and
jp
test
and
pop
daa
pop
popa
adc
push
movsl
popf
mov
or
push
xchg
and
or
repnz
in
inc
lahf
add
gs
inc
push
movsb
dec
je
data16
les
add
and
pop
cs
and
push
out
and
hlt
insb
sub
and
cmc
xchg
popf
inc
rol
mov
lret
push
rcll
es
push
incb
in
add
and
xor
adc
and
aas
cmp
mov
dec
test
in
dec
push
xchg
fdivl
std
sbb
push
xchg
add
cmp
mov
in
into
lret
sbb
push
testl
daa
adc
xchg
in
rol
mov
and
add
cmp
xchg
mov
jge
shlb
and
sbb
lds
inc
stc
repnz
ja
cmp
pop
int
sbb
daa
or
pop
clc
std
outsl
inc
scas
push
sarb
and
sarl
std
jecxz
sahf
and
nop
push
fbld
fxtract
daa
cmpsl
inc
dec
cmpl
push
and
mov
pusha
pop
movsb
sbb
es
mov
lret
repnz
and
sub
jo
aaa
icebp
ret
dec
adc
rcrb
pop
loop
inc
or
mov
jae
sbb
pop
std
and
push
sti
dec
sub
dec
push
and
sub
popf
gs
or
div
jns
xor
sub
test
int3
pop
in
xchg
and
icebp
and
and
pop
insb
aas
addr16
sbb
lds
scas
fwait
lcall
mov
pop
and
aaa
aas
fs
push
adc
sbb
bound
and
int
and
xchg
cmc
out
dec
sarb
movups
out
fsubp
sub
push
jne
enter
std
int3
push
and
stos
mov
jno
add
and
jecxz
pop
icebp
and
xor
dec
inc
mov
and
iret
push
sbb
jle
roll
push
pop
and
aas
repz
lds
and
pop
push
sahf
test
sub
int
jecxz
aam
push
jmp
outsb
jp
and
xor
pop
inc
jne
ljmp
sarl
cmp
mov
ds
or
cmpsb
add
sub
inc
int
xlat
mov
jnp
jne
and
js
cmp
scas
dec
jmp
and
movsl
add
in
and
into
sbb
mov
jge
inc
jbe
clc
and
push
xchg
test
inc
sbb
adc
add
insl
rcl
pop
cmp
bound
adc
addr16
push
jp
jb
xchg
pop
test
bound
ret
andl
shll
cmp
lfs
dec
jg
sub
stc
jo
js
data16
adc
ljmp
mov
cld
sbb
mov
and
cmp
push
enter
and
mov
sub
and
xlat
pop
push
mov
movsl
das
inc
sub
cmpsl
bound
cmpsb
add
sub
mov
and
imul
inc
stos
sub
sbb
jnp
lock
xlat
sarl
and
outsb
sub
gs
mov
jnp
movsl
sbb
pop
and
mov
add
sub
push
insl
arpl
fidivl
push
mov
sti
mov
push
out
sub
add
pusha
or
in
mov
or
and
xchg
aam
pop
and
and
je
and
out
cmp
in
and
out
xchg
pop
and
out
or
and
add
and
dec
insl
add
mov
lock
adc
stos
out
and
call
inc
pusha
popf
and
fldenv
jl
daa
mov
push
xchg
imul
gs
inc
fidivrl
sub
aas
out
inc
inc
ljmp
sub
sbb
or
cmpsb
shrb
das
lea
sbb
ficoml
push
shll
cmpsb
adc
mov
push
sbb
and
nop
push
mov
sub
jmp
imul
stc
and
arpl
pop
xor
fldt
daa
fnstenv
sub
inc
xchg
popa
cmpsb
jnp
mov
and
sbb
dec
adc
xor
clc
push
stos
and
dec
lret
jbe
pop
adc
and
addr16
mov
dec
inc
cmp
sarl
sbb
cmpsb
stos
inc
popl
vhaddpd
push
into
mov
and
xchg
xor
jno
jmp
xchg
sbb
dec
movsl
clc
loopne
xchg
sbb
or
sbb
stc
and
cmp
and
sbb
and
pop
cmp
xor
ds
push
adc
iret
and
or
inc
xor
jbe
in
lds
gs
sar
cmp
sti
fs
jns
xor
fwait
and
je
lods
loope
and
movsl
int3
stos
rcll
popf
stos
pop
fwait
and
xor
sbb
push
mov
es
and
lods
and
faddl
jg
rcrl
pop
sub
pop
and
inc
xchg
push
dec
cmp
push
aas
mov
ja
movsl
rcrl
cmp
xchg
sahf
xor
fsubl
cmp
and
mov
dec
pop
jns
and
add
inc
jbe
in
mov
aam
cli
mov
das
pop
clc
imul
insl
add
inc
test
stos
loopne
dec
popa
sbb
add
sub
inc
add
mov
clc
icebp
pusha
in
and
int
idivl
and
dec
lcall
pop
or
jp
sbb
inc
lds
das
lods
popa
orb
and
pop
lds
push
stos
adc
jbe
imul
or
inc
inc
jae
mov
and
movsl
mov
popa
cltd
and
push
loope
lret
in
in
frstor
xchg
cld
dec
in
sbb
hlt
and
roll
stos
aad
lds
xor
and
xchg
ljmp
fcmovnb
jmp
push
cmp
incb
pop
clc
pop
inc
daa
push
ret
or
sbb
pop
and
scas
cmp
or
sub
or
div
lea
jmp
stc
jae
out
rcll
cs
jb
sub
sub
adc
add
aaa
aaa
jl
jnp
push
pop
stc
xor
mov
adc
adcb
cmp
and
and
xor
sti
gs
adcl
cmc
fdiv
fcmovb
loope
mov
or
out
ljmp
les
add
mov
and
addr16
sub
and
in
jns
and
adc
and
jg
push
cmp
push
stc
xor
cmp
mov
or
and
cltd
mov
jb
mov
fstpl
or
cmp
add
roll
adc
popf
ret
mov
ja
xchg
add
scas
repnz
push
aaa
sbb
cmp
xor
sbb
cmpsb
sti
sub
ljmp
out
aas
not
in
cmp
mov
es
add
loop
pushf
inc
cmp
jg
mov
push
cmp
addr16
or
mov
add
ret
mov
out
lret
jbe
pusha
adc
lcall
and
mov
ret
das
arpl
pop
jbe
inc
inc
lcall
push
and
and
dec
lods
daa
and
sbb
mov
push
xchg
add
lea
jns
mov
xor
movsl
movsl
add
sbb
cmpsb
xor
ja
sub
pop
adc
cmp
mov
loop
sahf
or
push
adc
cmpsb
jbe
xchg
mov
sub
ljmp
jge
sub
push
leave
addr16
mov
and
jb
inc
test
jnp
dec
xor
lods
cmpsl
jle
and
and
dec
mov
call
jae
sub
cmp
in
jne
and
and
mov
adc
inc
mov
outsb
and
mov
inc
hlt
out
imul
push
in
jg
bound
loope
inc
cld
int3
and
out
mov
xchg
add
push
inc
movsl
adc
mov
in
ds
cs
fsubrs
or
dec
int
inc
ss
insl
out
and
push
outsl
and
add
lahf
pop
ljmp
and
loope
jno
xchg
xchg
and
lret
push
hlt
sbb
aaa
and
int3
cli
sbb
and
cltd
mov
sub
divl
and
lock
in
jns
andb
mov
xor
rcrl
pop
mov
jmp
and
mov
test
sahf
xchg
int
cmp
shlb
mov
or
xchg
daa
inc
insl
and
mov
imul
sub
das
int3
leave
fisubl
daa
stos
adcl
iret
add
subb
mov
outsb
test
jg
cmp
sub
push
fdivrs
sbb
add
movsb
pop
mov
movsl
or
pusha
sbb
popa
and
mov
std
adc
push
cs
xchg
fadd
jle
daa
and
cmp
arpl
into
fldenv
mov
and
inc
push
aad
inc
and
sub
add
and
or
bswap
lret
pop
leave
pop
cli
test
iret
sbb
jg
into
cmp
fwait
add
nop
add
and
pop
mov
and
mov
add
or
or
insb
icebp
inc
loop
aad
daa
lock
fwait
adc
mov
test
mov
adc
out
mov
fcmovu
lcall
jl
xlat
pop
dec
sub
pop
aam
daa
mov
rolb
xor
and
popf
cmp
and
sub
sahf
mov
sub
pop
add
fsubl
mov
mov
inc
cmp
gs
mov
pop
lods
mov
dec
notb
and
sub
and
and
sbb
inc
push
push
mov
mov
and
nop
adc
aaa
outsb
outsl
addl
andl
push
pop
lods
xorb
popf
jecxz
sbb
sub
int
push
xor
scas
jb
add
and
adc
xor
dec
pop
in
pop
movsl
inc
mov
and
xor
sub
out
adcb
push
cmp
add
lods
or
and
lret
push
out
in
and
roll
test
popf
stos
or
adc
fwait
es
dec
and
jnp
cmp
and
test
mov
cmp
and
inc
and
daa
int3
sbb
daa
lods
push
in
xor
inc
ret
or
sub
ja
pop
std
mov
and
leave
pop
out
imul
and
aaa
inc
popa
mov
sbb
test
fldcw
pop
mov
jle
and
inc
arpl
jg
popf
xor
add
mov
push
in
add
push
fisttpl
test
dec
xchg
cmp
movsl
mov
mulb
bound
test
jmp
stos
push
jno
and
sub
cmp
aad
fadds
sub
punpcklbw
mov
cs
push
loopne
mov
sub
and
jno
inc
gs
adc
daa
inc
pop
fs
adc
addr16
adc
and
and
or
lods
xchg
aas
push
sub
arpl
lea
adc
sub
add
sbb
rcll
pop
adc
jnp
dec
pusha
jle
dec
and
mov
and
mov
int
aaa
and
add
push
xor
fistps
movsl
or
sahf
sub
sub
hlt
insl
and
scas
and
mov
mov
sbb
and
shll
mov
ss
mov
push
loop
cmpsb
ret
inc
repnz
and
fs
push
test
aam
and
push
pusha
cmp
and
aas
inc
mov
and
push
or
or
cli
add
xor
and
scas
pop
xor
fidivl
pushf
xchg
aam
adc
out
aaa
cmp
add
inc
aad
push
add
outsl
test
mov
or
and
dec
inc
outsb
inc
cmp
inc
and
xorb
or
adc
and
push
faddp
stc
rorb
int
pop
sub
add
mov
test
and
arpl
fcmovbe
mov
daa
in
test
fwait
aaa
inc
push
or
cmpsl
push
and
dec
fbld
and
pop
mov
mov
push
or
cli
movsl
insl
dec
and
sub
inc
out
mov
push
inc
and
fmuls
and
stos
fstl
repz
xor
mov
xchg
test
jno
cmp
add
ds
and
sbb
pop
inc
and
or
cmp
dec
daa
sbb
in
aaa
sbb
cmp
adc
sub
je
and
and
sbb
cmp
dec
add
push
in
sub
sub
xor
inc
sbb
in
adc
adc
push
cmove
mov
pushf
cmp
inc
mov
and
bnd
das
jg
loop
push
inc
push
dec
adc
in
mov
movsb
mov
xchg
int3
jns
cld
sti
pop
mov
push
and
adc
jns
lcall
fistl
roll
jno
mov
jecxz
pop
scas
es
dec
xchg
popa
or
loope
mov
out
movsl
aam
sub
and
lea
movsb
cld
in
mov
sbb
sub
jae
xchg
movsb
sbb
add
dec
lds
inc
pop
jge
pop
sub
cmp
jbe
enter
movsl
fs
inc
dec
leave
fisubl
add
mov
scas
mov
xchg
incl
dec
mov
fsubl
jb
or
and
add
and
sub
fcmovu
push
xor
imul
and
out
daa
es
and
int
scas
cmp
inc
cmp
in
push
stc
movsl
pop
fldt
sub
sub
in
xor
adc
and
out
add
popa
lds
add
pop
add
cmp
dec
pop
fcomi
and
out
mov
push
add
and
push
nop
add
jecxz
mov
and
subb
movsl
bound
push
or
fldcw
xor
push
push
add
ss
ds
lods
mov
dec
out
mov
insb
ja
fisubl
es
inc
arpl
stc
pop
stos
daa
pop
in
jae
pop
inc
data16
scas
frstor
adc
outsb
and
sub
cmpsb
sbb
cmc
cmp
dec
jge
pop
pop
rorb
lds
outsl
popa
add
orl
and
cmc
cs
stos
lds
lea
add
lret
dec
cmc
cmp
xor
shr
jne
fcompl
repz
push
ret
rorl
jge
adc
test
fxch
mov
and
inc
sub
lret
and
sbb
push
jge
cmp
jns
xor
pop
inc
daa
stc
es
cld
insb
and
pop
fst
dec
xchg
and
add
and
sbb
fs
and
lods
sub
insl
cli
inc
or
jb
or
xor
jne
mov
fs
and
stos
jne
push
push
ss
filds
adc
push
mov
rcl
lds
sub
fisttpll
mov
cs
cmp
sbb
das
fwait
aam
and
mov
adc
dec
fs
ret
and
cmp
leave
aas
pop
call
lods
data16
cmp
ljmp
loopne
mov
add
lahf
repnz
test
adc
mov
frstor
cs
xchg
and
mov
psubusw
mov
dec
add
cltd
daa
sub
jp
push
int
push
jmp
es
mov
or
pop
mov
lods
call
inc
sti
adc
shll
cld
shlb
add
xchg
iret
mov
and
nopl
aad
sbb
pusha
es
int3
or
es
push
out
mov
mov
sbb
mov
jns
lods
aaa
pop
sub
scas
nop
std
push
xchg
or
in
mov
scas
pop
and
clc
xor
cmp
sub
sub
xchg
gs
stc
and
nop
data16
lods
test
sbb
lods
dec
mov
adc
ret
test
pop
or
and
cltd
add
sbb
mov
data16
movsl
mov
and
push
xor
roll
sub
mov
loope
mov
xor
aad
add
sbb
add
pop
pop
jle
addr16
mov
idiv
inc
jg
arpl
and
insb
cli
into
cmpsb
add
add
fucom
in
and
mov
cmp
push
push
stos
and
aam
sub
shl
mov
xchg
mov
and
sbb
xor
or
or
dec
ret
and
mov
bound
sub
and
fbstp
mov
imul
movsl
xchg
pop
andb
add
mov
inc
cmp
inc
sbb
ja
fs
and
and
outsl
je
aaa
out
in
cmpsl
repz
cs
inc
icebp
inc
cld
and
std
bound
outsl
test
movsb
cmp
insb
das
je
sbb
mov
and
pop
and
dec
add
ds
inc
popf
outsb
and
jno
aaa
sub
sub
and
aad
das
inc
xor
fadd
sub
pop
inc
and
in
sub
push
dec
and
inc
out
xchg
es
fmulp
leave
push
std
pusha
arpl
je
daa
ja
cmp
sbb
xchg
ret
int
sub
and
and
jo
and
jbe
dec
lds
push
jg
movsl
mov
inc
mov
lret
mov
lea
or
jecxz
xchg
int
aad
daa
mov
bound
cld
sub
cmp
cltd
and
lret
jne
xor
push
and
and
and
arpl
add
pop
and
dec
bound
xchg
and
outsb
adc
and
pop
dec
add
sbb
add
loop
flds
data16
popa
xchg
cmpsb
test
int
sahf
movsb
and
and
xchg
cmp
cmc
mov
and
xchg
cmpsl
and
add
aam
pop
sub
popf
cs
imulb
jecxz
inc
movl
push
cmp
sub
bound
cmp
inc
pop
sbbl
sub
xlat
adc
push
push
or
and
lods
push
xor
and
and
fbld
pushl
mov
inc
inc
sbb
insb
pop
arpl
and
movsb
insl
sbb
push
pop
push
pop
add
sub
sub
pop
xor
fcompl
add
int3
sub
dec
sti
and
das
and
enter
pop
fwait
push
cmp
aas
fcmovnu
iret
xor
or
sbb
and
jp
std
dec
and
aad
and
sbb
out
sub
xor
mov
fldl
pusha
movsl
movsl
insb
jg
jo
in
and
cmp
sub
inc
addr16
pop
aad
daa
sbb
shrl
andl
ret
and
mov
roll
and
push
pushf
and
in
imul
jae
adc
das
xorb
into
and
sbb
cmp
inc
or
and
roll
rorb
xor
mov
dec
and
push
mov
pop
pop
sbb
imul
ret
mov
and
jle
xor
cmp
cmp
lods
popf
sub
loopne
es
test
cmp
lds
mov
arpl
or
pextrw
outsb
push
push
pop
shlb
jne
aaa
sahf
add
insb
jnp
sbb
lcall
inc
and
and
test
outsl
sbb
cmpsl
mov
cmpl
enter
stos
pusha
scas
cmc
clc
or
mov
fyl2x
and
push
jge
test
test
shrl
in
shlb
xchg
cs
popf
pop
inc
and
push
es
or
ja
lods
jmp
xchg
cmp
and
shlb
pop
sti
sbb
lods
jno
cmpsb
fldenv
push
aas
push
testl
xchg
shll
es
xchg
and
add
cltd
dec
xor
and
mov
jmp
xor
and
cmp
les
pop
push
jmp
mov
imul
pop
xor
sti
loope
adc
push
test
lds
decl
pop
and
sbb
push
cwtl
xchg
movsl
mov
out
add
xor
into
sub
and
jmp
sbb
push
pop
mov
add
xor
mov
and
mov
nop
lret
or
frstor
lret
and
cvtpi2ps
dec
das
xor
adc
and
cmp
cltd
shll
out
sub
and
cmp
ret
sti
add
add
lods
sub
jl
movsl
pop
mov
dec
pcmpgtd
and
cmp
popa
cmp
push
leave
ss
andb
and
sbb
sbb
sub
in
add
sbb
pop
or
and
sub
push
fidivl
icebp
xchg
and
xor
das
pop
sahf
and
xchg
push
or
and
mov
xlat
stc
jae
push
movsl
bound
sub
int
leave
or
sti
xor
and
cmp
and
cmp
mov
ds
aad
cmp
xchg
fnstsw
in
xor
cmp
sbb
jecxz
scas
mov
and
and
jno
sub
outsb
out
movsl
es
test
and
pop
scas
mov
sub
loopne
sbb
insb
daa
std
movsl
movsl
cld
mov
shll
xlat
movsb
rclb
sub
dec
lahf
adc
shll
dec
daa
movsl
mov
sbb
cmp
mov
and
mov
mov
dec
adc
js
mov
insl
std
dec
outsb
jno
in
lea
sub
fwait
or
in
jge
insb
xor
cs
jae
leave
sub
inc
fwait
pop
sbb
movsl
and
test
mov
pushl
stos
cs
mov
sbb
cwtl
pop
xor
cld
sub
or
sub
lret
and
adc
sub
out
scas
and
jle
and
push
test
sbb
ljmp
into
fdivs
movsl
aad
mov
and
mov
and
inc
out
aad
and
cmc
xchg
xchg
icebp
and
loop
dec
lret
and
movsl
dec
dec
sub
and
sub
mov
stos
and
jge
push
dec
es
dec
test
inc
lods
xchg
sbb
cmp
inc
mov
or
dec
or
in
push
inc
es
popa
aaa
in
in
lds
sub
movsl
shrl
mov
scas
inc
mov
cs
ja
sbb
cmp
movsb
push
cmp
lds
xor
scas
cmc
push
lds
sti
dec
std
jg
push
cmp
xchg
aas
mov
fs
sbb
in
shrl
cmp
xlat
xorl
push
cmpsb
add
xchg
and
and
ss
popf
push
sbb
push
xor
in
push
jp
xor
or
outsb
aam
cs
push
dec
and
sbb
push
sub
pop
stc
dec
dec
push
sbb
cs
in
and
and
mov
fidivs
jno
and
sub
std
in
and
mov
in
and
nop
out
inc
and
or
das
shrl
pusha
out
and
add
cmpsl
and
sub
xchg
dec
push
inc
aam
rcr
jmp
jbe
in
pop
arpl
inc
jg
es
cmp
pop
jb
daa
push
mov
mov
rcll
jnp
dec
int3
and
mov
adc
repz
push
fisubs
mov
xchg
push
enter
ficomps
das
leave
stos
and
sbb
ss
pushf
and
jg
and
arpl
push
jl
and
adc
and
in
das
popf
and
push
out
or
cmp
jne
gs
push
shrl
movsl
mov
cmc
sbb
add
cmp
nop
push
into
in
cmp
xor
sbb
pop
and
cltd
popf
push
sbb
xor
ljmp
and
pop
mov
mov
adc
push
xor
rcll
rorb
and
push
scas
lret
lock
jecxz
test
xchg
sub
daa
cmpsb
pop
xor
mov
movsl
clc
sub
sbb
cltd
sub
es
push
xor
cmc
icebp
xchg
xor
sbb
loope
xchg
cmp
movsl
loop
dec
out
sbbb
jnp
dec
shlb
mov
xor
imul
call
push
and
xchg
frstor
sub
ret
xchg
add
cmp
mov
insb
idivb
shll
movl
sti
push
pop
and
test
lods
das
daa
xor
and
mov
add
jno
sub
cmpb
je
insl
or
sbb
fidivrl
cmc
mov
in
sub
add
push
push
lods
cmp
sbb
int
test
jns
and
push
fiaddl
or
sbb
iret
mov
fisubs
jmp
repnz
cmp
sbb
movb
inc
push
test
and
imul
cmp
enter
adc
and
and
in
inc
jbe
pop
out
push
and
add
adc
xchg
ret
aaa
icebp
jge
mov
push
sbb
xchg
and
adc
aaa
xor
cmp
call
mov
push
xor
adc
push
sub
icebp
imul
and
imul
and
jnp
rcrl
bound
scas
jo
xchg
and
aaa
out
pusha
int
push
fisubs
push
xor
movsl
movsb
sub
addr16
jecxz
sub
lret
ds
cmp
iret
pop
jnp
and
xor
sub
movsl
cmpsl
inc
leave
and
inc
push
loop
inc
jl
xchg
pop
aad
or
and
in
and
mov
push
jne
jmp
jne
dec
call
cmpsb
out
ja
and
popf
and
inc
dec
scas
sbb
aaa
jg
pop
sub
xor
gs
adc
test
mov
and
or
sub
mov
jbe
lods
fs
ret
push
pop
sub
cmp
inc
in
add
xor
jne
pop
rcrl
xor
dec
loop
repnz
push
or
mov
rcl
fsubs
aas
ficoml
and
bound
sti
mov
and
popa
sub
sbb
ja
push
pop
std
pop
mov
imul
xchg
rclb
cmp
lds
icebp
sahf
add
lahf
sbb
push
aaa
aam
das
test
leave
pop
popf
and
sub
out
and
push
clc
or
aaa
add
jo
cwtl
fmuls
scas
in
gs
add
repz
popf
addl
sub
mov
aas
and
xchg
and
rcrb
and
inc
cmp
mov
popf
mov
fldl
dec
and
xchg
imul
in
call
jecxz
ds
xor
clc
pop
fidivrs
push
lods
sub
push
lret
mov
movsl
add
das
add
popf
add
faddl
stos
addr16
movsl
data16
and
movsb
and
inc
adc
aaa
add
andb
test
cmp
arpl
and
cwtl
shl
frstpm(287
xlat
int3
xchg
test
cld
cmpsb
pop
adc
mov
sub
mov
stos
mov
and
jo
test
mov
jp
or
cmp
cmp
mov
jno
push
push
push
in
xchg
or
and
dec
mov
sub
aam
jg
push
out
out
jns
lods
jo
add
and
fldl
js
mov
jb
pop
and
xor
sbb
lock
pop
bound
push
dec
gs
scas
out
dec
and
shll
int
nop
loop
scas
add
and
in
out
xor
popa
push
in
add
mov
lret
outsl
mov
mov
addr16
jne
and
mov
lea
and
and
leave
and
xlat
mov
movsb
add
mov
adc
sbb
push
and
and
and
push
adc
popa
addb
lahf
in
mov
sbbl
dec
and
cmc
cmp
imul
sub
fisubl
mov
and
rorb
and
and
lods
or
push
sub
xor
cmc
xor
cs
cmp
push
in
and
xchg
addr16
dec
dec
cmc
inc
or
outsb
pop
jno
xor
add
xor
lea
fwait
sub
arpl
ret
xor
adc
mov
movsl
mov
das
push
and
pop
xchg
jp
pop
insl
and
xor
adc
rcrl
test
and
xor
pop
and
daa
jb
mov
cmp
mov
lods
jge
sub
repnz
es
pusha
xor
and
imul
mov
or
and
pop
sub
jge
neg
and
sbbl
aaa
push
xor
out
stos
mov
push
push
sub
das
cmp
xchg
or
cmpl
test
ds
fsubrl
and
cwtl
and
fs
and
adc
mov
adc
pop
stos
pop
call
dec
cli
leave
xchg
in
scas
aas
sub
cltd
insb
or
sbb
ret
gs
vcvtsi2sdl
sbb
loope
lahf
sti
inc
and
dec
rorl
xchg
out
push
cwtl
push
add
fldenv
or
and
out
jne
loop
inc
inc
sub
push
and
movsb
push
daa
and
cmpsl
mov
add
jbe
jl
and
push
xor
and
repnz
mov
ja
or
fiaddl
adc
push
or
and
and
sub
rcr
sub
sub
sub
shll
and
xor
xor
and
cmp
cmp
and
or
flds
sub
or
stos
adc
es
and
push
pop
and
cmp
stc
bound
outsb
xlat
fnstsw
js
cmp
and
out
repnz
push
push
and
inc
test
adc
es
mov
cld
cmpsl
jo,pn
mov
push
xor
jb
jmp
sbb
arpl
negb
mov
adc
dec
mov
repz
inc
imul
and
adc
push
insb
xchg
dec
mov
jmp
ret
dec
and
in
sbb
iret
cmp
daa
in
iret
and
mov
ss
dec
in
fdivrp
adc
and
pop
lock
icebp
and
cli
fdivrl
aad
cld
adc
and
mov
push
gs
movsl
sub
mov
jbe
shll
lahf
addr16
imul
aam
adc
jge
and
test
out
push
clc
aas
cmp
push
aaa
fs
pop
into
xchg
setg
cmc
and
fnstsw
stc
xor
leave
and
push
cmp
jno
xchg
cmp
push
mov
cmc
mov
mov
mul
jecxz
xchg
std
inc
out
sbb
out
pop
in
mov
ljmp
dec
lcall
add
push
add
out
push
mov
xchg
movsl
jp
and
xchg
or
add
mov
push
add
in
mov
jge
and
mov
cmp
movsl
scas
test
cmpsb
cmp
movsl
js
stos
mov
in
or
and
mov
adc
in
adc
cwtl
shrl
push
push
fisubs
jg
add
xchg
xchg
and
leave
imul
sub
sub
jmp
pushf
xchg
popa
mov
push
cmc
inc
mov
aas
dec
jle
pusha
adc
movsl
icebp
sub
icebp
and
inc
pop
ficoml
xor
jecxz
movsl
and
jge
cwtl
leave
jle
stos
popf
loope
xor
aam
dec
loope
push
shlb
pop
movsb
sub
shll
jne
mov
adc
sbb
movsl
push
outsb
add
xor
jp
in
bound
add
outsl
insl
addr16
sub
cwtl
test
adcl
or
and
or
push
mov
sbb
and
gs
or
movsl
mov
mov
mov
xor
inc
inc
sub
mov
or
xor
inc
and
pushf
cmp
and
mov
and
sub
pushf
add
adc
imul
and
gs
pop
and
adc
push
leave
and
xchg
xchg
mov
and
movsl
test
pushf
lds
fsubr
mov
cmp
lods
push
in
int
jge
movsl
and
js
sbb
mov
cmpsb
scas
in
add
jmp
fs
add
js
push
and
out
test
cwtl
lods
sub
in
mov
xchg
pop
xchg
xchg
lods
xchg
add
pushf
and
in
subb
or
push
in
jne
and
inc
pop
out
cmc
sbb
or
mov
aas
sub
pusha
shll
sbb
xor
popf
xor
dec
jns
out
adc
scas
mov
inc
mov
test
insl
mov
pushf
aad
and
cli
repnz
popf
das
pop
test
adc
lods
xor
xor
xchg
pop
pop
mov
inc
ret
dec
aad
aaa
push
in
xchg
dec
and
stc
sub
and
inc
mov
and
xchg
mov
push
and
lock
mov
and
sub
or
das
daa
mov
call
test
sub
add
cwtl
js
inc
and
inc
test
insl
loope
lea
push
add
jnp
scas
mov
jno
push
and
mov
test
and
inc
and
xor
mov
sub
xchg
lahf
inc
sbb
movsw
aaa
loopne
mov
cmp
and
xchg
hlt
pusha
or
arpl
and
cmpsl
das
in
pop
out
and
sarb
sbb
adc
xchg
mov
push
jae
inc
sti
pushf
es
cwtl
xor
movsl
mov
pop
loope
dec
data16
mov
or
push
xchg
sub
jecxz
jbe
fisubrl
add
test
std
jmp
jne
mov
mov
sub
dec
shlb
cmc
aas
scas
or
sub
add
imul
scas
xor
in
hlt
and
pop
adc
and
sar
xlat
aaa
sub
xor
inc
insb
cmpsl
fildll
add
or
and
movsb
es
inc
ror
mov
ss
fs
fdivrs
jp
rcr
int3
xlat
aad
repnz
enter
add
lret
nop
cmp
popf
pop
stos
movsb
js
int
push
push
int3
adc
aas
mov
push
mov
frstor
inc
shll
aam
loopne
cmc
add
mov
movsb
inc
jmp
and
cmp
popf
in
fidivrl
jp
popf
push
test
adc
loop
and
add
push
adc
mov
xchg
andb
andl
sub
and
mov
jns
xorl
pop
insl
cmpsl
push
stos
pop
dec
pop
lods
loope
pop
jno
in
test
mov
pop
mov
dec
and
sbb
pop
ss
push
push
pusha
mov
push
push
jns
mov
outsl
pop
push
mov
push
and
popa
and
or
xchg
js
mov
mov
and
insl
push
movsb
outsb
and
pop
or
inc
jge
jl
out
ljmp
inc
aas
das
sbb
and
mov
add
jne
gs
cmc
sub
jno
out
sbb
arpl
mov
and
dec
inc
popa
imul
sbb
lods
cmp
das
jge
popa
gs
push
adc
out
or
xchg
or
and
mov
push
shll
xor
rolb
fldl
cmpsl
inc
dec
fnstsw
and
bound
dec
fldenv
inc
icebp
dec
inc
sub
or
mov
xor
push
fldenv
into
pop
adc
filds
inc
aaa
and
int3
jg
rcr
sbb
mov
int
push
and
cmp
mov
outsl
lods
pop
in
pop
and
push
sbb
nop
and
jo
ds
sbb
inc
mov
ret
stos
ret
push
es
jns
iret
jae
cmc
dec
push
xchg
xor
prefetcht1
add
or
pop
or
push
inc
es
dec
dec
xor
inc
popf
jb
insb
and
inc
shll
xchg
mov
cmp
and
sub
push
loopne
das
mov
sub
mov
and
dec
dec
push
push
cmp
arpl
xchg
movsb
adc
push
and
stc
mov
dec
sub
or
sbb
jae
lds
jb
and
push
jno
and
rorl
shl
cmp
movsl
int3
outsb
push
addr16
dec
xchg
sub
in
inc
push
push
fisttpl
lds
popf
pop
pop
mov
inc
sub
inc
inc
pusha
xchg
lret
fnsave
and
mov
adc
lods
cmp
sub
mov
xchg
and
dec
in
inc
fisttps
add
pusha
add
test
mov
jno
movsb
das
xchg
sub
inc
add
inc
and
and
or
fs
mov
sub
lret
and
xchg
and
mov
cld
fld
jge
inc
or
adc
and
mov
mov
std
and
dec
add
aam
neg
pop
inc
sbb
jns
jmp
sub
mov
arpl
dec
cs
sub
and
adc
or
cmp
nop
loope
and
imul
pop
push
inc
inc
dec
daa
and
inc
add
sub
unpcklps
lret
cmp
jae
in
mov
xchg
cmpsb
and
sti
fisubrl
add
mov
jp
arpl
sub
mov
sub
push
sub
mov
or
pop
addr16
shl
and
push
es
sub
aas
imul
mov
add
add
sub
in
push
push
gs
imul
lock
cmc
icebp
dec
and
sub
out
and
push
nop
jmp
in
shll
repnz
sbb
ljmp
mov
mov
push
adc
or
mov
mov
add
sub
dec
and
andb
shll
adc
dec
and
loope
or
mov
stos
mov
and
pop
cvtdq2ps
es
and
mov
and
xor
ror
mov
and
lods
xchg
and
mov
fisubrl
add
out
and
xchg
jge
ret
jl
and
inc
movsl
mov
rolb
fsubs
push
pusha
mull
add
ret
in
adcl
sub
sahf
movsb
adc
mov
and
dec
popf
mov
pop
bound
xor
subl
movsb
cmp
mov
and
in
sbb
movsl
movsl
pop
popf
rcr
ficoml
pop
xchg
inc
push
cmp
pop
jae
xor
pop
jmp
push
cmp
and
xor
imul
and
and
inc
movsb
pop
fldenv
mov
jo
push
xchg
sub
loope
repnz
and
out
ror
shlb
xchg
insb
cmpsb
and
xlat
inc
push
and
adc
dec
adc
dec
cmpsb
push
cmp
xlat
sub
mov
or
add
jb
test
jl
fsubrl
xor
lahf
jmp
insb
negl
dec
and
push
mov
movsl
xor
test
and
sahf
outsl
cmp
jno,pn
mov
daa
and
les
and
mov
mov
and
rorb
push
jmp
inc
mov
and
push
inc
add
sub
insl
ss
ja
pop
xor
xor
inc
mov
sub
mov
sub
cltd
xor
sbb
fwait
clc
push
and
pop
ds
pop
and
lea
test
sub
and
fwait
xor
ss
gs
lods
hlt
sbb
fs
sub
sbb
inc
push
jecxz
ss
xchg
jne
les
gs
sub
fisttps
pop
cltd
lods
and
mov
cmp
arpl
add
daa
sub
and
inc
lds
and
jno
lods
and
xchg
jb
ss
pushf
and
push
das
add
inc
and
out
adc
andb
inc
dec
ret
and
cmc
push
xchg
and
repz
push
in
dec
sub
xchg
sub
jle
xchg
and
push
dec
cmp
or
sahf
cmpsb
loop
and
out
and
daa
xor
sub
jg
pop
lods
xor
lds
andb
aas
dec
and
addr16
and
sar
add
mov
rolb
sub
mov
in
xor
ret
cmpb
mov
adc
movsl
fwait
and
adc
jmp
fisttpll
dec
adc
cmc
std
xchg
mov
sbb
imul
and
dec
dec
aad
cmpsb
aam
jl
test
inc
addr16
cmpsl
lea
jp
dec
sbb
cmp
cmp
movsl
lea
fs
sub
shll
adc
jg
inc
jp
dec
and
xchg
xor
je
movsl
mov
or
jno
arpl
daa
outsl
lea
add
nopl
adc
stc
or
lods
pop
gs
ljmp
mov
icebp
sbb
and
fucomip
rcrb
and
sub
mov
int
pusha
push
push
jae
pop
into
mov
daa
shll
cs
mov
cmpsb
js
xchg
inc
pop
stos
bound
fs
mov
xchg
mov
mov
mov
stos
je
or
cmpsl
dec
inc
and
in
xchg
mov
dec
insl
sub
adc
and
ret
jbe
sub
sbb
inc
es
call
insl
in
add
je
xchg
iret
test
insw
ss
and
movsl
and
or
adc
xchg
jbe
ja
test
mov
lods
push
aas
and
adc
in
mov
lret
std
jmp
sub
xchg
jbe
fiadds
push
cltd
and
mov
sub
cmp
adc
mov
and
and
lahf
sbb
xchg
sub
jecxz
and
rol
jmp
jmp
or
pop
push
roll
scas
jne
jb
dec
hlt
push
rcll
cmp
out
jnp
and
inc
sub
push
out
in
test
pop
leave
sbb
jp
and
std
or
int
cmpsb
cli
xor
fsubp
pop
movsl
jle
and
push
xor
into
cmp
arpl
out
aaa
ret
jno
and
jo
es
popf
sti
lods
pop
pop
pop
cmp
and
or
mov
sub
or
in
jg
pop
daa
add
mov
push
sbb
pop
xchg
dec
lds
mov
mov
jmp
and
in
or
and
mov
push
and
push
pop
push
pop
or
and
gs
xchg
inc
xchg
and
in
lret
fs
cltd
mov
stc
and
add
out
inc
and
push
xor
add
mov
and
sbb
or
xor
fs
and
push
sarb
and
aaa
mov
sub
lea
test
sub
or
cmovnp
es
das
xor
and
out
repnz
pop
xor
in
or
cmp
rcr
add
dec
pop
and
call
in
push
call
pop
cli
sti
push
and
ret
sbb
in
cmc
and
push
dec
dec
cs
out
push
adc
pop
cli
inc
pop
and
pop
xor
xor
cmp
adc
sbb
jmp
lahf
push
leave
jb
std
and
jge
push
push
bound
jne
dec
inc
push
pop
push
and
popa
xor
add
inc
xor
or
inc
xchg
fcomp
mov
adc
icebp
dec
aad
mov
mov
test
mov
push
or
inc
add
sub
cmpsb
cwtl
les
sub
and
sub
cmp
call
test
adc
pop
insl
jo
jbe
leave
inc
and
xchg
test
test
xchg
test
lea
fnstcw
or
in
inc
aas
and
sub
mov
ss
jg
mov
and
movsb
stos
and
and
mov
sub
pop
out
ja
leave
daa
sub
fwait
mov
and
je
sbb
imul
and
pop
xchg
sub
bound
push
or
adc
arpl
or
insb
cmp
and
pop
lds
sbb
sbb
xlat
ret
xor
sbb
and
xor
aaa
and
addr16
and
gs
dec
lods
lahf
xor
das
mov
cmpsb
dec
popa
les
fs
fisubl
xor
pop
push
and
jno
outsb
js
adc
sbb
sbb
add
sub
je
mov
aad
es
sub
mov
in
dec
push
and
aaa
push
inc
pop
and
lcall
dec
inc
jge
aaa
and
sldt
cwtl
cmp
or
insb
xor
fxam
and
jo
push
cmp
stc
and
sub
pop
jb
lds
inc
push
xor
mov
mov
and
and
lods
push
clc
jne
adc
and
popa
push
ja
jp
add
and
xor
clc
sbb
insl
shll
frstor
sbb
push
test
xchg
mov
repz
popa
dec
xor
inc
roll
dec
and
sub
outsb
dec
ja
xchg
and
lahf
std
arpl
inc
lea
repz
inc
cmp
inc
movsb
dec
xor
mov
pop
dec
and
in
mov
sub
cmp
xor
gs
clc
add
imul
push
push
div
and
push
xor
push
sub
aaa
and
xor
imul
adc
inc
mov
fcomip
xchg
ret
in
mov
adc
lds
int
mov
dec
push
call
daa
push
inc
icebp
sub
sub
dec
test
adc
ss
xor
addr16
pop
sub
sub
and
or
sub
cmp
xor
out
je
push
pop
and
scas
shlb
cmp
adc
and
inc
push
push
and
hlt
out
inc
stc
outsb
and
push
dec
bound
ds
dec
sub
adc
xchg
jne
call
cs
mov
scas
lods
fistl
cmp
pop
aam
jmp
nop
xor
jecxz
dec
mov
pop
sub
xchg
mov
or
outsl
pop
in
dec
push
pop
sub
pop
adc
add
push
jp
inc
dec
mov
add
addr16
mov
loop
xor
pusha
mov
push
and
adc
das
and
and
ds
out
scas
mov
push
add
incl
sub
scas
and
cmpsl
push
stc
pop
mov
add
jne
add
outsb
and
fwait
dec
ja
out
sub
xchg
adc
and
or
ss
and
add
aad
sub
pop
adc
pop
jne
mov
mov
pop
jbe
test
stc
xor
aad
mov
lock
adc
in
das
in
pop
fdivp
cmp
enter
xchg
xor
movsl
negb
popa
aas
xchg
xor
adc
ds
sub
sub
adc
mov
movsl
inc
lret
xor
aaa
and
pushf
add
pop
and
movsl
or
scas
sbb
xor
sti
sub
and
fists
stos
arpl
and
push
mov
jne
ja
inc
pop
and
fildll
push
adc
jmp
aam
mov
add
pop
sub
fisttpl
cmp
pusha
or
inc
dec
sub
and
je
sbb
gs
lock
push
mov
movsb
jmp
das
jp
or
aaa
out
ss
fisubs
dec
gs
movsb
div
outsl
and
out
xor
scas
add
mov
cmp
test
mov
outsb
and
cwtl
xchg
imul
pop
inc
inc
jns
inc
outsb
sub
jnp
and
dec
and
jb
dec
ror
cli
cmc
or
dec
sbb
outsl
ja
gs
inc
push
mov
pop
sti
push
mov
and
ss
mov
sbb
and
xor
cwtl
sub
daa
leave
inc
dec
inc
in
repz
xor
loope
cmp
xor
inc
in
cmp
mov
adc
push
sbb
and
inc
add
mov
movsb
jae
add
and
jl
mov
and
ds
adc
push
lds
and
out
xchg
and
bound
dec
xor
sbb
sub
sub
adc
adc
and
sahf
dec
and
pop
xchg
and
xchg
jnp
sub
mov
fwait
bound
or
dec
push
aaa
int3
sbb
lea
addr16
add
push
sub
insl
call
sbb
movsl
xor
mov
push
add
cwtl
and
sbb
jnp
and
cld
and
rorb
adc
test
stos
sbb
lea
inc
mov
push
pop
push
and
jmp
pop
add
data16
cld
pop
imul
and
testl
or
sbb
and
nop
xlat
bound
pop
jb
dec
and
sub
cmp
sti
mov
dec
idiv
ds
push
mov
xor
jbe
fpatan
test
dec
outsb
push
out
insl
in
and
adc
jns
aad
sub
test
in
add
inc
dec
dec
dec
lahf
and
ret
inc
inc
sub
push
js
movsl
jae
adc
and
push
sbb
adc
mov
sub
inc
jge
std
dec
shr
adc
dec
bnd
dec
rcrl
push
cmp
fld
inc
cli
cmp
ret
cmp
inc
push
cmc
add
sub
jg
push
cltd
rcl
ficomps
shll
and
icebp
push
xor
and
ss
and
es
mov
xlat
xor
cmp
in
or
pop
aad
popf
cmp
in
int
in
mov
and
dec
and
mov
mov
sub
shlb
lds
add
add
pop
xchg
movsl
lods
es
and
pop
sub
gs
jbe
xchg
and
mov
daa
out
or
aaa
sbb
pop
hlt
pop
pop
push
jge
xchg
sbb
fisubs
outsb
sub
mov
int
sbb
je
inc
out
es
outsl
out
ss
and
clc
push
push
jne
mov
add
ds
movsl
xor
mov
daa
lret
mov
lahf
or
sbb
lahf
and
mov
mov
sbb
fcmovne
sub
scas
and
in
gs
cmp
push
lock
lret
and
push
movsl
test
sub
cld
push
lret
and
fnsave
push
sub
adc
movsb
sbb
sub
cmpsl
fscale
push
scas
in
adc
and
ss
and
xor
lret
scas
cmp
enter
xchg
shll
daa
rcr
xor
cmpsb
fnstenv
xchg
scas
and
hlt
popa
outsl
push
inc
mov
in
fnstenv
jecxz
lods
stos
movsl
in
cmp
sub
in
int3
imul
js
aad
pushf
dec
sub
gs
sbb
cmpsb
and
and
leave
cmp
movsb
loope
fldenv
lods
and
inc
cld
insb
sub
and
loope
sbb
adc
push
push
and
ja
gs
mov
ret
jb
adc
and
outsb
rorb
insb
and
sub
push
push
push
lods
and
rcr
push
and
enter
fnstenv
out
gs
es
push
or
adc
mov
jp
xchg
adc
xor
sub
scas
adc
fprem1
mov
aam
or
jp
xchg
jno
pop
lret
dec
cmp
add
test
add
xor
insl
jae
sub
flds
xor
ljmp
inc
test
xchg
ret
sub
gs
xchg
sub
jne
popa
in
les
stos
jns
outsb
cmp
pusha
cmp
movsb
ds
mov
out
jne
daa
popa
gs
mov
prefetch
mov
mov
je
mov
movsl
add
push
pop
lods
in
inc
out
cmpsl
fs
lods
fstpt
add
xor
sub
push
or
push
push
xor
arpl
fcomp
test
pop
push
add
add
out
fstpl
sub
sub
or
sub
arpl
xor
in
xlat
sub
in
leave
or
add
loope
in
arpl
sub
shlb
bound
test
test
push
stos
in
es
std
add
insl
mov
stos
pop
arpl
mov
xor
hlt
movsl
cmp
stos
mov
test
fdivrl
mov
pop
ja
shlb
jmp
cmp
jge
movsl
mov
add
xor
and
xor
xor
stos
aaa
data16
jge
xchg
adc
adc
jle
pop
ljmp
xlat
incl
push
pop
int3
lods
pop
cmp
bound
scas
sub
and
cmp
push
add
fs
or
sub
rcll
sbb
cmp
sahf
mov
in
pusha
jne
jmp
or
imul
and
adc
or
ljmp
dec
imul
jge
sub
inc
push
push
adc
or
std
and
cmp
inc
dec
push
dec
xchg
push
cmp
push
cmp
loop
dec
mov
rolb
or
push
or
inc
and
adc
sbb
inc
dec
in
push
inc
lds
sbb
push
das
push
pop
fs
bound
push
cmp
pusha
cli
inc
repnz
ds
sub
dec
inc
fdivs
push
bound
dec
dec
push
fildll
mov
adc
cmpsb
jno
es
push
jnp
and
fs
jno
fisubs
push
inc
inc
jne
je
dec
inc
xor
and
push
push
inc
add
inc
jecxz
test
outsb
dec
push
inc
push
push
in
inc
adc
jbe
mov
inc
movsl
add
dec
inc
push
push
xchg
shlb
daa
inc
dec
sub
push
inc
and
sub
push
dec
aad
stc
xor
or
sub
inc
and
pop
push
inc
dec
or
stc
daa
es
jbe
out
xchg
fs
push
aaa
dec
inc
sub
bound
dec
dec
or
pop
xchg
push
mov
dec
popa
push
dec
out
push
jmp
dec
inc
cmp
clc
and
push
push
aas
sbb
and
sbb
adc
sub
mov
jmp
es
push
push
push
inc
movsb
xor
jbe
cli
loop
push
inc
push
sbb
movsb
sahf
pop
sbb
mov
loop
pop
push
dec
aaa
scas
cmp
dec
dec
sbb
imul
adc
xor
adc
add
add
add
int
pop
out
add
push
jge
pop
sub
mov
mov
pop
in
fwait
mov
xor
fdivr
or
xchg
add
lret
mov
outsb
fiaddl
leave
pop
and
fidivrs
sub
fstl
pusha
inc
push
scas
jle
xorb
punpckhdq
rcrl
loope
adc
sti
lea
outsl
shrl
lahf
mov
dec
test
sbb
dec
pop
pop
dec
sbb
in
dec
push
inc
popa
std
jl
or
mov
jp
xchg
shll
push
push
inc
cwtl
aaa
and
cmp
push
or
jle
xorb
iret
bound
lods
out
int
arpl
pop
mov
dec
pop
ror
mov
xchg
inc
les
dec
push
cmp
dec
push
xchg
repz
dec
cwtl
int3
pop
jg
gs
aaa
xchg
popa
pop
leave
dec
andb
shl
push
lods
cld
xor
cltd
push
push
stos
ljmp
ljmp
scas
ja
mov
out
jae
or
cmpsb
sbb
push
mov
cmp
test
aas
inc
xchg
aam
inc
fwait
scas
push
push
jo
dec
sbb
mov
xorl
sub
cmpb
mov
adc
cmp
ret
and
push
and
mov
adc
pop
lea
repnz
sti
cmp
push
jge
inc
out
mov
fildll
sbb
je
call
sti
adc
mov
or
imul
out
lods
scas
mov
jo
mov
inc
daa
mov
push
jecxz
bound
push
pop
into
fnstsw
out
pop
pop
popa
fstps
ljmp
cmp
mov
lods
shll
xchg
inc
adc
lock
mov
add
and
add
xor
subb
adc
psraw
test
cmp
and
aam
ret
das
dec
mov
std
add
movsl
xor
jmp
push
rclb
mov
shl
fs
fs
xchg
and
and
sub
pusha
adc
adc
mov
sbb
push
fnstcw
xchg
mull
shll
lcall
in
cmp
popf
mov
mov
movsl
lahf
sbb
insb
cmc
mov
loopne
mov
pop
mov
lods
cld
sub
dec
dec
test
dec
push
jmp
sbb
loope
or
fildll
push
inc
repnz
mov
cmp
data16
push
push
fldcw
mov
pop
imul
mov
aas
fisubrl
and
adc
mov
push
sbb
rorl
inc
inc
in
stos
out
fists
enter
cli
cld
push
adc
push
xchg
cwtl
ds
push
push
jae
or
mov
stc
xor
pop
jne
mov
pop
mov
jae
das
ljmp
addr16
in
inc
dec
fsubrl
rcr
mov
pop
add
loop
adc
cmp
arpl
lock
mov
add
mov
popf
pop
imul
and
mov
xchg
inc
adc
das
ja
in
pop
pop
fsub
loopne
je
js
sbb
clc
pop
sub
adc
xor
leave
sbb
out
or
out
mov
ja
div
ds
faddl
mov
lea
cs
dec
mov
shr
mov
lcall
xchg
inc
aam
sub
jbe
shrl
mov
mov
pop
xor
mov
cmp
sbb
or
mov
adc
sbb
xchg
cmp
movsl
cmp
xor
and
movd
inc
dec
xchg
stos
jmp
pop
xor
mov
ss
jge
and
xlat
dec
mov
data16
pop
lahf
add
mov
out
dec
cmp
cmc
sahf
outsl
dec
pusha
mov
pop
scas
test
xlat
adcl
lret
in
test
jmp
push
gs
sub
adc
dec
loopne
push
xor
movsl
mov
jecxz
xchg
mov
fprem1
sbb
jnp
out
fwait
into
pop
shrb
subl
mov
shlb
test
ja
sub
xchg
icebp
loop,pn
loopne
nop
cmpsl
dec
and
sbb
es
shlb
cmpl
into
out
or
bswap
ds
andl
in
jae
push
dec
inc
jmp
std
mov
addr16
xchg
aad
addl
push
popf
push
jge
add
rcl
negb
sub
mov
pop
lret
xor
mov
mov
adc
xor
add
pop
lcall
imul
mov
push
popa
icebp
popa
lds
inc
pop
xchg
xor
fldenv
jnp
lods
sti
dec
pusha
sub
xchg
sbb
sahf
std
dec
xchg
inc
fdivp
lds
mov
pop
dec
sub
dec
pop
jecxz
cwtl
insb
pop
fcoms
je
sbb
lahf
lahf
out
out
or
pushl
pop
push
mov
shrb
out
mov
mov
in
pop
popf
jae
pop
xor
pusha
fnstsw
xlat
popf
sbb
stos
lods
push
mov
je
jnp
xor
mov
inc
mov
ret
mov
add
jns
cmpsb
push
xchg
nop
les
xor
mov
cli
jo
mov
add
xchg
mov
jle
aaa
add
sbb
or
cmc
jge
xlat
shr
hlt
sbb
xchg
lock
jns
cwtl
popa
sarb
sbb
ror
pop
sbb
mov
ret
std
stc
sbb
test
fmul
fs
pop
pop
in
pusha
cmp
fwait
test
data16
inc
dec
das
inc
rcll
loopne
icebp
push
in
lods
xlat
mov
loopne
cltd
jg
mov
das
xchg
and
stos
outsl
push
or
pop
mov
jmp
ret
push
jb
sub
mov
stc
in
pop
pop
jmp
mov
call
mov
push
ss
lret
cmp
jecxz
ret
shll
fstps
mov
fnstcw
push
add
orl
inc
xchg
jmp
mov
dec
sbb
xchg
cmpl
fldcw
loop
into
inc
push
mov
push
and
xor
jle
push
lds
clc
cld
ds
mov
push
lods
ret
aaa
mov
pusha
jbe
fcoml
fstl
lods
andl
xchg
push
mov
lcall
ja
nop
pop
in
fucomp
ror
push
inc
cmp
mov
fadd
or
js
fcomps
jae
dec
mov
push
pop
dec
fwait
lds
push
stc
je
into
xchg
push
icebp
or
jecxz
sbb
mov
je
pop
push
cmp
and
push
dec
popa
cmp
das
xor
cltd
cwtl
test
movsb
dec
cmp
rcl
cltd
scas
test
arpl
cmp
andb
xchg
sbb
lret
sub
jnp
adc
test
dec
dec
push
cmpsl
cld
imul
sbb
ficoml
test
cmp
push
add
jecxz
dec
into
in
rcl
aad
adc
std
pop
lahf
mov
or
or
push
je
lods
sub
pop
jo
mov
jo
jp
int
add
sahf
aaa
push
test
ja
int3
ret
mov
dec
movl
lods
xchg
sub
outsb
dec
cmc
add
mov
jmp
dec
fucomi
cmp
imull
scas
sub
or
cmp
cwtl
cmpsb
std
xchg
popf
cli
jno
push
mov
mov
rcrb
sub
add
mov
mov
fsubs
adc
xor
call
scas
push
xchg
inc
pop
lcall
jp
es
xchg
cld
stos
mov
inc
xor
nop
mov
jmp
push
sub
sbbb
sbb
dec
jb
dec
add
stos
and
cmp
movsl
lcall
in
jne
push
push
shll
xor
cld
stos
cmpsb
pop
xchg
cli
leave
xor
or
jecxz
xor
in
lret
mov
stos
test
mov
inc
cmp
or
insl
mov
test
push
xor
fistpll
jmp
daa
adc
cmp
ljmp
call
hlt
dec
jns
sbb
mov
push
or
cmp
pop
or
fistl
add
adc
aas
enter
fidivl
stos
lods
push
popa
sub
mov
push
jnp
xchg
sub
gs
ficompl
daa
pop
repnz
push
dec
jbe
push
fisubs
loope
mov
lret
arpl
data16
inc
jns
xchg
sti
test
test
gs
add
inc
popa
sub
mov
inc
dec
inc
adc
mov
sub
arpl
pusha
je
call
and
adc
inc
push
mov
bound
dec
push
enter
mov
or
push
sti
sub
lods
lahf
repnz
and
aad
push
or
sub
inc
jle
fstp
daa
and
and
mov
dec
shl
rcrl
mov
push
sbb
and
jbe
fadds
inc
cmp
and
movsl
dec
addb
arpl
jp
notb
and
imul
xlat
adc
jbe
jecxz
outsb
test
mov
mov
or
and
add
or
jne
add
icebp
adc
jae
rol
jg
or
insb
popa
dec
jmp
pop
test
and
add
pop
insb
push
mov
fistpll
lock
rol
lods
pop
push
dec
jb
jmp
insb
scas
inc
lods
cmc
fisttps
iret
aas
xor
clts
push
cmpsb
cmp
iret
subl
push
lcall
lret
aam
and
jbe
xchg
sub
xrelease
mov
out
xchg
out
movsl
inc
lcall
push
adc
sub
jns
inc
add
and
jge
cwtl
jns
mov
les
dec
jb
jnp
insb
pop
or
xlat
out
jg
or
pop
lret
dec
jge
inc
in
lods
xchg
out
adc
outsb
sahf
daa
mov
inc
jl
lret
dec
mov
jbe
pusha
out
pop
imul
cmp
movsb
sahf
mov
loopne
jge
and
mov
push
pushf
gs
xor
adc
jno
sub
or
enter
outsl
jl
pop
push
cwtl
pop
add
sbb
xor
inc
sub
aam
mov
fucomp
xor
mov
shlb
mov
pop
sub
loop
das
push
mov
or
or
sarb
jb
mov
movsb
lcall
push
cmpsb
jle
les
pop
loopne
hlt
push
pop
mov
je
movsl
test
inc
add
adc
nop
sub
lock
xlat
push
sub
ds
mov
test
scas
adc
mov
xchg
jns
fcmovbe
dec
lret
pop
lcall
xor
or
jecxz
xor
test
nop
pop
inc
stc
mov
pop
pop
jp
mov
xor
sub
pushl
push
inc
push
movsb
xchg
ljmp
test
xchg
xchg
cld
cmp
add
add
jg
stc
push
sbb
jmp
scas
mov
arpl
push
push
pop
lds
jae
pop
mov
rcrl
scas
icebp
lods
xlat
xchg
in
xchg
pop
push
push
mov
repnz
xchg
jae
ds
ljmp
cmovg
xor
mov
ja
enter
inc
push
pop
call
mov
psubsb
cmp
pop
into
fadds
scas
push
adc
xchg
xchg
mov
push
ja
mov
and
jb
push
xchg
mov
ret
jg
mov
rcrb
cmp
jbe
lods
loopne
test
pop
add
fadds
out
fidivl
sub
popf
xchg
inc
mov
scas
push
pop
push
fidivl
mov
mov
fistps
mov
jns
sbb
out
adcb
adc
cli
std
inc
iret
pusha
cmp
mov
xchg
or
pusha
stc
xchg
out
ret
dec
mov
stos
pop
out
add
and
xchg
inc
enter
pop
xchg
jae
loop
dec
lods
pop
lods
cmp
aaa
adc
shlb
cwtl
jge
or
and
dec
out
loope
mov
push
sbb
cld
iret
push
dec
stc
xchg
loope
lahf
pop
scas
iret
idivb
fcoms
shr
pop
rep
sub
loop
sbb
cmp
sbb
popa
idiv
add
add
scas
rolb
scas
dec
insb
dec
into
jne
out
inc
scas
mov
rorl
mov
pop
imul
pop
cmp
jmp
sbb
inc
sbb
pop
xchg
sarl
sarb
xor
cltd
iret
xor
out
lret
jae
dec
in
and
gs
fisubrl
ja
dec
movntq
out
fmuls
cli
scas
jmp
lahf
gs
xor
push
jne
insl
lock
inc
xchg
xchg
out
imul
xchg
pop
pop
shrb
mov
pop
cwtl
lods
fnstcw
pusha
cmp
pop
dec
lock
mov
and
icebp
icebp
mov
aaa
inc
ja
add
sub
sub
mov
xor
mov
add
push
lds
fdivp
vpsllq
xchg
test
pop
jbe
sbb
or
movsl
bound
orb
cmpsl
sbb
inc
jecxz
sub
pop
rolb
push
arpl
cld
sub
push
adc
pop
stos
and
or
lahf
int3
ret
cmpsb
and
in
xchg
and
out
xchg
sbb
int3
add
adc
xchg
repnz
test
sahf
push
imul
adc
js
mov
xor
std
mov
in
and
sbb
shll
ds
push
jo
pop
insb
jecxz
outsl
pushf
lock
mov
mov
sub
fbld
push
cmp
sub
mov
sub
out
jae
xchg
in
push
push
imul
in
cmp
xchg
and
sbb
jp
dec
ss
popf
loopne
pop
frstor
inc
mov
pop
add
call
cli
add
pop
jo
movl
push
and
loopne
jbe
js
jecxz
stc
fldt
cmp
cli
rcl
lods
lahf
imul
das
mov
pop
lahf
sti
push
and
out
push
cmpsb
popa
jb
cwtl
jnp
push
pop
aas
add
xchg
int3
xchg
mov
jns
test
push
sub
mov
and
jge
inc
xchg
mov
jge
stos
popf
or
push
xchg
sbb
push
pop
mov
dec
fldt
int
fdivl
je
test
movsl
orb
inc
push
in
lds
je
mov
or
lret
mov
push
loopne
int3
cmp
lods
insl
je
mov
and
xchg
mov
movsl
mov
and
sbb
inc
jmp
int3
stos
add
and
ljmp
clc
fidivrs
xchg
iret
loop
jmp
pop
leave
mov
fcmovb
jno
jbe
scas
js
pop
les
shll
push
pop
add
das
mov
int
fnstenv
fdivrl
mov
lock
dec
mov
jg
stos
sbb
mov
mov
jb
rcl
inc
sti
cmp
stc
aam
jmp
mov
jbe
test
and
lea
cmpsb
in
pop
lea
sbb
pop
mov
jmp
out
cli
inc
scas
xor
push
mov
and
sub
push
and
stc
cmp
out
insb
js
enter
cli
cmp
inc
pop
aad
in
adc
mov
or
sti
mov
dec
inc
scas
addl
addr16
pop
aam
xchg
out
push
push
xchg
cmp
mov
or
lock
ret
into
loopne
dec
dec
nop
mov
add
add
ja
ficomps
pop
lahf
test
enter
sahf
fucomp
ror
in
sbb
ljmp
cmp
dec
cmc
paddd
cwtl
pop
dec
test
add
push
mov
jnp
pop
das
add
and
daa
cmp
xor
add
hlt
xchg
lods
loope
mov
pop
and
fsubrs
and
loopne
mov
divl
sarb
sbb
cmp
pop
or
jg
stos
loopne
shl
mov
push
rcr
jecxz
int3
std
mov
dec
pop
test
loopne
shrl
inc
stos
push
out
cmp
cmp
in
dec
js
and
ljmp
push
cli
cli
je
xchg
bound
mov
out
mov
mov
add
fs
jbe
leave
mov
mov
movsl
pop
push
sbb
dec
or
idivl
xchg
pushw
insb
and
in
dec
sbb
sub
leave
or
popf
dec
sub
cmc
je
xchg
stos
cmpsl
pop
pop
popf
pop
xchg
inc
cmp
xchg
lret
ja
jnp
mov
xorl
lds
fsubrl
arpl
and
inc
sbb
add
sub
aad
movsl
jmp
adc
mov
mov
cmp
add
jnp
inc
jmp
mov
inc
sbb
les
and
js
pop
add
out
sub
xlat
cmp
sbb
dec
sub
movsb
xchg
scas
xchg
push
cmpsb
lock
and
sub
jle
pushf
inc
pop
gs
jns
push
into
sub
jmp
sbb
xor
ja
stos
lret
or
push
in
bound
xchg
mov
call
adc
fs
shll
movsb
adc
or
sub
xchg
data16
lret
ja
xchg
push
pusha
movsb
scas
in
and
das
shrb
out
mov
bnd
shrb
dec
fwait
arpl
rclb
lret
repnz
das
dec
push
testb
sbb
and
int
sbb
je
ljmp
cmp
mov
inc
xchg
adc
dec
repz
cmp
outsb
xor
js
out
jb
sub
gs
dec
inc
push
mull
scas
cli
mov
push
inc
and
jmp
xchg
out
xchg
pop
faddl
pop
scas
in
in
ja
and
fidivs
ss
add
cmp
xor
out
nop
xor
lret
out
push
xchg
jbe
pop
jb
sbb
or
mov
rclb
and
mov
dec
nop
inc
sbb
push
adc
add
into
dec
xchg
and
cwtl
dec
mov
mov
xchg
add
fsubs
lods
fldl
pop
inc
arpl
mov
xor
repnz
xor
push
mov
pop
or
add
mov
xchg
xchg
push
nop
pop
arpl
mov
out
dec
out
daa
xchg
cmp
fisubl
mul
or
mov
push
fcmove
std
ficoms
gs
sub
push
xor
fwait
aas
into
dec
sti
sahf
mov
mov
xchg
cmp
pop
sbb
cmp
fdivl
daa
fwait
lret
jmp
xchg
sbb
mov
pop
fadds
add
icebp
mov
or
jg
cmp
pop
xchg
ret
mov
aaa
jne
pop
xor
mov
mov
into
ljmp
dec
bound
lahf
data16
mov
popf
aaa
sbb
test
mov
ret
insl
mov
push
rcl
mov
cld
cmpsl
jl
lock
repz
fimuls
xchg
lea
roll
push
dec
das
cmp
cmpxchg
jnp
xchg
js
sbb
jp
cwtl
xchg
daa
xchg
loop
add
xor
dec
mov
int3
out
sub
pop
sbb
pop
or
xchg
xchg
jmp
in
fwait
xchg
cmp
test
clc
pop
adc
and
mov
jnp
shll
rorl
pop
data16
cmp
cmp
call
sbb
stos
cmpl
mov
lcall
fstp
sti
adc
or
or
jo
inc
adc
xchg
repz
sahf
jne
xchg
bound
cmp
lahf
pop
inc
pop
insb
lods
ljmp
add
call
or
iret
sti
mov
mov
ret
dec
and
daa
stc
dec
xchg
lds
adc
aas
mov
dec
in
rorb
xor
pop
ret
lcall
or
dec
sarb
xlat
test
lds
xor
xor
mov
ret
clc
and
and
inc
dec
jmp
repnz
add
push
cmc
sub
and
xchg
cmpsl
xchg
ljmp
push
jbe
mov
out
push
cmp
lcall
jne
lods
movb
push
shrl
mov
je
pop
mov
mov
add
add
or
cltd
xchg
push
and
mov
inc
mov
enter
xor
out
cmp
loopne
or
or
xchg
cmp
hlt
cmp
mov
ljmp
xlat
and
aaa
imul
shrl
push
cmc
jns
loope
mov
xor
aaa
mov
scas
daa
mov
mov
fs
shlb
cmp
cmp
aam
xchg
xor
repz
stc
cmp
imul
jge
cmc
push
mov
pop
mov
xchg
mov
jecxz
mov
add
mov
ret
xor
cmc
in
sbb
loopne
mov
int3
sub
push
inc
sbb
or
jmp
jne
cwtl
popf
pusha
lret
lcall
lret
test
lahf
lahf
fbstp
add
cmp
cmp
cmpb
jmp
in
out
in
or
cmp
les
sub
fldl
pop
orl
je
aam
mov
pusha
mov
sbb
inc
addr16
mov
pop
mov
fsts
ja
nop
fwait
push
loopne
in
lret
testl
sub
int3
adc
cmp
fwait
adc
jb
mov
mov
lret
sub
mov
sbb
and
cmp
push
out
out
lcall
xchg
cmp
lea
fisubrl
cld
ror
add
mov
je
je
stc
or
jae
shrb
pop
xor
push
dec
xchg
jmp
xchg
in
imull
shlb
mov
xchg
xchg
inc
and
movsl
fsubl
mov
jecxz
fadds
jnp
and
dec
xchg
mov
push
fwait
pop
dec
sahf
fidivrl
adc
jnp
push
ret
pop
outsl
je
lods
out
scas
ds
fimuls
cmpb
xchg
xlat
into
imul
xchg
sbb
mov
fmuls
loop
xor
or
mov
shrb
mov
sti
adc
bound
add
cwtl
mov
xor
push
adcb
lock
add
sahf
dec
es
pop
imul
or
rcl
scas
ret
mov
pop
jbe
mov
lods
sbb
lds
fbld
stos
mov
sbb
mov
pusha
mov
pop
js
mov
adc
mov
insl
add
or
sbb
les
loopne
pop
cmp
loopne
mov
icebp
sbb
inc
repnz
mov
dec
wrmsr
add
orb
sub
jo
push
cmp
fneni(8087
movsb
test
subb
jmp
jg
lcall
pop
inc
add
test
into
xor
jae
xor
gs
mov
test
das
inc
out
pop
aaa
mov
jmp
jno
in
imul
lret
out
mov
dec
push
lods
or
or
xchg
sti
mov
js
sbbl
jmp
stc
loopne
das
add
fmull
dec
pop
push
nop
pop
inc
and
push
loope
sub
push
jno
scas
subl
xchg
bound
adc
fwait
pop
mov
dec
ljmp
addr16
add
fiaddl
sarl
lret
mov
add
bound
cmp
mov
leave
pop
mov
fidivrl
xor
scas
xchg
orb
mov
xlat
mov
movsl
xor
cmpsb
fidivrl
and
xor
mov
add
cmc
clc
jl
push
stos
nop
mov
jge
xchg
iret
rolb
jp
push
dec
outsb
mov
inc
jbe
jg
xchg
sub
xchg
dec
cmc
gs
inc
jmp
and
popf
aas
mov
out
inc
pop
push
adc
mov
das
push
dec
shll
aad
sub
mov
in
jns
push
out
cmp
xchg
cmpsl
js
jmp
push
pop
or
push
std
push
bound
arpl
lock
cmp
int
mov
andb
mov
jp
ds
push
and
js
adc
and
xchg
mov
xchg
sbbl
sbb
xor
fwait
and
lods
push
leave
inc
pushf
jae
data16
inc
ljmp
les
jl
fwait
mov
dec
cmp
push
bnd
mov
sbb
scas
negb
mov
xchg
dec
cmp
xchg
out
inc
push
xchg
hlt
push
jg
xchg
adc
dec
nop
adc
mov
sahf
xlat
stos
cld
loopne
cmp
cmp
mov
repnz
jle
or
ds
stos
mov
sbbl
stos
sbb
cmp
call
mov
push
mov
dec
cltd
jge
loope
loop
icebp
and
adc
jae
dec
push
cmpsb
mov
add
adc
in
xor
sbb
lahf
ret
pusha
sub
mov
rolb
xor
cmpb
add
jmp
or
je
fistpl
or
dec
jb
fsubp
lret
repnz
dec
imul
push
mov
js
cmpsb
mov
lods
in
or
push
xchg
jne
add
xchg
sarb
ret
fwait
aad
adc
scas
divb
cltd
mov
mov
jmp
addr16
push
mov
or
not
pusha
cmc
jo
lods
stos
popf
push
mov
out
xor
xlat
xsavec
mov
movsb
orb
and
int3
hlt
scas
ljmp
adc
add
enter
mov
mov
daa
and
cmpsb
ljmp
in
dec
sbb
add
test
jb
sbb
ret
pusha
jp
push
add
push
into
out
xor
mov
mov
push
pushf
je
aam
fcoms
mov
cwtl
sbb
out
lods
push
mov
inc
xchg
les
pop
and
int3
ljmp
nop
out
mov
xchg
repz
pop
jnp
jae
lock
or
xor
ret
push
out
push
rcl
mov
sahf
xor
dec
cs
pop
push
mov
mov
adc
jo
cmp
out
xor
loopne
out
roll
push
adc
push
outsl
jmp
and
std
jne
cmp
stos
cmpsl
leave
ja
clc
int
xchg
adc
or
dec
fldpi
cmc
into
mov
or
xchg
sbb
push
adc
or
push
gs
imul
rol
mov
stos
jg
inc
lods
pop
das
cmpsl
push
inc
mov
inc
mov
mov
mov
xchg
jne
inc
in
loop
ljmp
ror
dec
cs
push
loopne
arpl
popf
mov
mov
cwtl
cmc
das
bound
mov
sbb
jle
xor
mov
jl
push
aas
lea
or
rcl
or
into
daa
mov
into
lods
xor
push
sbb
in
imulb
ficompl
xchg
xchg
add
xor
data16
add
int3
inc
jp
or
cmpsb
xlat
dec
or
aad
push
movsl
ret
lods
fisubl
push
add
mov
adc
push
push
push
xlat
jmp
push
outsb
inc
fidivrl
inc
ret
lds
test
push
cwtl
xor
int3
push
addb
jae
lock
cmp
push
push
arpl
adc
xchg
push
add
stc
xor
xor
cmp
test
push
enter
dec
xor
std
cmc
mov
mov
int3
fldenv
or
or
int
mov
cmp
leave
in
lods
es
or
push
xchg
xor
iret
popa
and
sub
int3
pop
or
push
sti
jo
push
popa
push
sbb
pop
sub
inc
lea
mov
lods
mov
stos
sub
sub
push
in
lret
jl
in
cli
arpl
and
pop
push
in
pop
jne
inc
movsb
or
jnp
pop
fdivrl
in
dec
dec
push
fs
out
sbbb
dec
jo
push
or
push
mov
imul
add
jmp
lods
sbb
push
mov
stos
in
cwtl
mov
xchg
add
lods
push
pop
xorb
xchg
lock
mov
or
rcl
xchg
or
inc
test
leave
lods
cltd
jbe
mov
cmp
lret
sbb
xchg
call
cmp
mov
push
inc
ja
or
and
xchg
orl
stos
hlt
mov
jnp
fs
clc
fcoms
iret
dec
inc
fwait
daa
add
sub
test
add
pop
lods
mov
imul
out
adc
leave
sub
fwait
lock
hlt
pop
push
sbb
inc
data16
push
xchg
xchg
fs
nop
add
out
mov
jecxz
pop
ljmp
ss
or
jge
repnz
gs
icebp
arpl
mov
ret
std
fists
addr16
cmpl
add
xor
mov
in
add
mov
and
adc
inc
add
fstps
xor
cld
mov
sbb
loope
cmp
xorb
fs
call
push
xor
mov
sarl
ficoms
sbb
addr16
or
mov
jae
inc
push
lock
jle
sbb
mov
jo
push
mov
adc
or
jns
mov
and
jg
sbb
jnp
leave
pushf
add
adc
dec
mov
lods
addr16
iret
lods
xchg
out
mov
inc
aas
cld
inc
arpl
and
sbb
fiadds
fcmovnu
leave
sub
and
xor
ret
mov
pop
sahf
icebp
push
mov
xchg
bt
add
fnstcw
jne
ficoms
sarl
cmp
loope
sahf
mov
popf
pop
jno
test
lret
testb
xchg
cmp
addr16
mov
cwtl
jmp
popf
imul
dec
std
pusha
cmp
push
movsb
push
sbb
rcrb
out
push
popf
sub
insb
gs
dec
dec
cmp
mov
filds
sar
loopne
pop
scas
push
pop
insl
sbb
sub
inc
scas
enter
lods
or
or
mov
jecxz
pop
mov
jb
sub
cli
jne
andl
hlt
pusha
pop
sbb
ss
cmpsl
xor
daa
xchg
cmp
sbb
out
jae
js
sub
fsubrl
cli
jge
xor
push
fwait
mov
aaa
or
xchg
add
dec
scas
mov
faddl
call
mov
cwtl
jmp
jnp
loope
fdivrs
mov
movsb
repz
xor
sub
mov
ret
pop
and
pop
xchg
mov
add
sub
push
xor
mov
mov
inc
adc
stos
addr16
cmpsb
test
ds
pop
push
rcl
loop
dec
xor
cwtl
adc
and
nop
add
sbb
mov
imul
cmc
mov
or
insl
dec
sub
imul
lret
negl
loope
and
dec
or
sbb
mov
sub
push
loopne
jmp
mov
cld
mov
iret
cmp
xchg
or
insl
int
ret
jo
dec
or
jge,pt
sbb
push
lds
js
cmp
jle
cmp
mov
int3
jecxz
idivl
xchg
pop
pop
and
and
xlat
outsl
lods
dec
orb
and
mov
push
jmp
add
mov
add
aad
add
out
stc
gs
stos
add
in
mov
lods
jle
and
sbb
cmpb
cltd
xor
or
mov
xchg
hlt
movups
xchg
aaa
sbb
lret
lcall
jl
or
sbb
xchg
cmp
mov
stos
push
iret
sub
sahf
mov
add
pop
jns
push
pop
pusha
repnz
mov
lock
stos
aad
ja
mov
jecxz
mov
adc
or
loop
push
int
jg
cld
icebp
and
mov
pop
dec
cltd
sahf
mov
cmp
jl
xchg
out
das
jle
out
fsubs
push
arpl
cli
ret
jnp
outsl
int3
sti
jge
shlb
xor
xor
int3
lret
pop
lcall
mov
mov
imul
cwtl
testl
sub
test
nop
lock
outsb
decl
movsb
mov
inc
movsb
jge
lods
popa
mov
pop
pop
xor
cmp
push
data16
or
jg
cmpb
pop
pop
int3
xor
lods
in
pop
fcompl
jo,pn
push
or
xchg
xchg
lds
jnp
call
xchg
jbe
push
jl
cmp
scas
jb
je
cs
std
fldcw
jmp
push
adc
out
pop
jp
cmp
inc
fisttpl
inc
dec
outsb
daa
mov
xchg
or
sub
jg
gs
jmp
scas
add
popa
int
or
dec
xchg
nop
rclb
rolb
in
push
imul
and
pop
push
xchg
das
negl
cs
push
sub
fwait
sub
xchg
mov
add
pop
faddl
ss
adc
insl
loopne
cmp
xchg
iret
xor
pushw
sbbb
push
addb
or
xchg
gs
je
stc
xlat
dec
insl
jbe
mov
xor
mov
loopne
iret
repz
stos
lahf
pop
jae
inc
adc
sub
and
pop
test
mov
cmp
arpl
addb
xor
dec
dec
mov
cmp
dec
fisttpl
mov
fldl
insb
call
mov
inc
mov
push
fidivl
push
daa
jns
ljmp
test
aad
sbb
push
out
push
aad
iret
add
sub
cmp
scas
adcb
add
pop
dec
sbb
fs
lret
push
je
jmp
int
jo
cs
pop
and
ret
enter
and
pop
repnz
push
push
sub
test
mov
popa
inc
and
fldt
adc
cmpl
sub
and
fdivr
mov
inc
fiaddl
inc
xchg
ror
arpl
fcmovb
scas
into
mov
das
ret
push
jg
lret
out
dec
and
out
out
mov
jmp
xor
sbb
test
out
or
sbb
inc
loopne
loop
and
xchg
cmp
add
cmp
push
xor
dec
bound
mov
lods
mov
insb
add
das
test
ljmp
je,pn
pop
xchg
lock
rcr
mov
mov
push
cmp
cli
cmpsb
aad
ja
lea
das
out
shr
push
sbb
sbb
rcrb
pop
xchg
movb
inc
or
mov
scas
xchg
mov
xchg
and
ret
xchg
call
jb
push
push
testb
fs
lea
rclb
cmp
fldcw
into
test
scas
scas
cmpsb
inc
fstp
lcall
fxch
test
je
xchg
rorl
movsl
pushf
cmp
sbb
dec
adc
and
adc
mov
push
jg
mov
xchg
xor
outsl
insb
and
out
mov
xchg
in
ret
ret
out
or
mov
in
in
adc
arpl
test
mov
xor
jae
sti
jo
and
mov
cmp
sub
jl
aas
ljmp
addb
mov
call
and
or
inc
ret
cmp
add
mov
in
push
adc
data16
jg
push
sti
in
aam
divl
ljmp
and
add
aaa
jle
mov
fs
xchg
rcr
xor
xor
lods
dec
cs
xor
into
and
or
jno
jmp
and
outsl
lret
rcrl
xchg
jb
in
sub
cltd
dec
pop
lods
lock
lcall
sbb
xor
pop
addr16
ds
push
push
enter
cmp
in
int
xlat
mov
cmp
sahf
or
mov
addr16
or
lods
jp
enter
inc
lcall
or
inc
out
jle
mov
mov
aad
cltd
jne
arpl
jae
lret
and
or
stc
sarb
sti
outsl
lds
das
cli
pop
movsb
out
pop
add
repnz
es
mov
dec
sub
inc
dec
push
andb
and
jp
insl
and
fwait
cwtl
int3
in
inc
mov
pop
push
mov
mov
roll
std
or
inc
push
mov
dec
inc
adc
fsubs
mov
les
fcomps
aad
jge
sub
jmp
dec
add
push
and
or
xrelease
and
inc
arpl
adc
add
add
and
insl
popf
xchg
jbe
push
xor
sti
xchg
arpl
rclb
jg
das
adc
aaa
stos
fsub
xor
mov
or
movsb
insl
push
jo
add
xor
push
int
xlat
and
popa
inc
adc
jne
fucomip
daa
imul
mov
lods
fcmovnbe
push
mov
xchg
add
loope
and
mov
sbb
dec
je
scas
je
pushf
loope
lea
jg
imul
sarl
mov
in
test
stos
es
mov
inc
xchg
sbb
cmp
int3
insb
aad
adc
push
mov
mov
cmp
pop
xchg
pop
dec
jns
push
add
das
shrl
fadds
sub
or
insl
xor
or
jl
out
shrb
xor
arpl
xchg
xorl
mov
mov
movb
or
nop
fprem1
inc
out
jp
lret
xchg
clc
sbb
test
out
pushf
mov
adc
push
xorb
repz
mov
and
aam
mov
fwait
test
aas
dec
push
pop
ss
jg
jmp
leave
xorb
lods
jecxz
pop
in
js
shr
cmpsb
dec
or
cmpsl
mov
sar
mov
jmp
clc
sahf
xchg
cwtl
icebp
cli
pop
jo
ljmp
cs
ret
int
fadd
popa
adc
stos
sub
test
int
sbb
pop
push
jmp
inc
sbb
ret
xorl
jp
cli
adc
mov
xor
test
inc
pop
lahf
cmp
dec
cltd
cmpsb
cmp
push
fucomi
and
inc
mov
outsl
or
int
das
aaa
in
sbb
shlb
lcall
cmp
pusha
mov
adc
arpl
cmp
pop
mov
cli
inc
fcmovnu
mov
fcompl
fwait
cmp
nop
loope
stc
pushf
add
push
js
push
inc
mov
fdivl
roll
nop
cmp
bound
sbb
stos
mov
loopne
popa
mov
jmp
stos
leave
out
pop
data16
pushf
nop
gs
xor
or
sbb
in
lret
inc
fsubrs
or
fs
mov
je
pop
jno
lret
scas
cmc
ja
insl
cmp
icebp
dec
movsb
xchg
out
fadd
jmp
flds
jecxz
adc
fcmove
fadds
push
dec
push
and
lds
sahf
xchg
mov
mov
pop
xchg
cmp
lret
xor
jb
stos
xchg
mov
mov
jns
js
test
test
mov
addl
add
jb
fsubs
ljmp
inc
mov
repnz
ret
shlb
aad
insl
dec
clc
push
mov
cs
push
imul
les
and
xchg
jne
sarl
and
push
cmp
adc
subb
pop
or
pusha
sbb
cs
push
xchg
xchg
pop
fstpt
cmp
movsl
or
or
mov
mov
pushl
fdiv
push
cmp
iret
pop
cs
add
clc
lahf
lahf
lods
pushaw
icebp
push
xchg
pop
shrl
xor
imul
shl
push
xchg
or
sbb
ror
int
sub
lret
dec
divl
dec
sub
pusha
ret
test
lock
sub
out
iret
loopne
loope
adc
adc
daa
pop
adc
mov
test
lret
lcall
mov
jns
rolb
test
cmpsl
jmp
or
movsb
lret
mov
rcrb
rolb
arpl
movsb
stc
aam
xchg
mov
inc
or
cwtl
dec
sub
lea
sti
or
sbb
in
mov
xchg
mov
dec
pop
adc
pop
test
lret
inc
pop
mov
subl
sub
loope
push
push
sbb
push
xchg
outsl
jns
pop
hlt
add
push
nop
das
sub
dec
movsb
mov
ljmp
xchg
aas
aam
popa
lods
inc
cltd
daa
stc
pop
ljmp
fdivl
fldcw
dec
shl
mov
dec
gs
and
out
scas
add
loope
pop
daa
clc
or
sub
test
xchg
or
ret
sub
cltd
push
xchg
mov
sbb
sbb
dec
xor
mov
jns
cmp
lock
jg
pop
cmpsb
push
jae
loope
mov
lds
imul
cmp
lcall
movl
imul
add
adc
aaa
repz
inc
fidivrl
jmp
jns
sub
addl
mov
jge
fcomps
pop
mov
add
xchg
cmp
outsl
les
or
push
cltd
lret
sbb
in
mov
outsb
in
sub
fsubs
ficoms
lods
xchg
xchg
mov
stos
scas
mov
and
xor
mov
icebp
ret
sub
or
cmp
arpl
shrb
pop
jo
xor
call
cmp
pushf
pop
and
mov
mov
icebp
mov
or
adcb
je
adc
scas
xchg
mov
cmc
adc
mov
popf
cld
push
fisubl
fucomip
decb
ja
add
stos
push
inc
arpl
loop
pop
iret
ret
or
xchg
xor
mov
and
mov
ja
nop
in
push
add
es
sarl
pop
mov
les
shrl
xor
xchg
inc
or
int
scas
mov
jl
mov
push
jle
fldl
cltd
out
in
sarb
fsubrs
and
mov
sahf
addr16
push
inc
hlt
jo
inc
call
xor
outsl
scas
xchg
xchg
pop
subl
mov
test
inc
and
mov
sub
lea
aad
mov
sub
push
cs
mov
mov
test
int
jne
xchg
adc
mov
push
pop
cwtl
dec
cld
sub
adc
in
ja
jno
rcl
sub
sbb
ja
cmp
pop
clc
lods
aaa
out
adc
out
loop
out
negl
adc
int3
in
sub
adc
ret
out
inc
mov
add
imul
sbb
push
mov
bound
ljmp
pop
subb
pop
cmp
loopne
adc
dec
rorb
xlat
sub
enter
push
lods
mov
mov
ss
mov
aam
mov
js
loop
push
imul
sbb
xchg
loop
cmpsb
or
inc
fisttpl
out
or
jne
mov
cmp
inc
sbb
mov
sar
je
jbe
cwtl
fisubrl
subb
mov
cmpsb
out
pop
imul
xor
dec
jp
in
fistpll
push
test
mov
out
jnp,pn
dec
cs
sub
add
call
mov
imul
lds
bound
movl
adc
mov
out
test
insl
mov
std
daa
mov
xchg
push
out
xor
and
lcall
in
push
xor
fwait
cmp
test
sahf
jb
pop
je
cld
inc
mov
cmp
pop
jb
and
xor
aas
push
mov
xor
pop
mov
mov
sbb
pop
in
dec
inc
push
push
dec
les
or
insl
bound
jno
out
scas
xor
inc
xchg
std
movsl
data16
sbb
pop
ss
jmp
mov
sbb
cmpsb
ds
cmp
xlat
xlat
lock
lcall
imul
sbb
icebp
mov
sub
xor
xor
call
daa
mov
das
fnstsw
pop
and
test
jne
xchg
test
jp
push
addb
jmp
push
mov
imul
jae
test
call
cmp
jne
and
adc
das
lret
rcrl
jmp
shr
adc
sahf
pop
lcall
pop
dec
lods
sti
adc
cmp
and
inc
jg
outsl
sbb
sub
inc
lret
mov
cltd
mov
fldl
mov
imul
bnd
adc
test
inc
in
fstl
movsb
test
inc
mov
mov
pop
leave
lcall
icebp
pushf
fwait
js
xchg
mov
lcall
push
ss
in
xchg
adc
sbb
and
adc
mov
mov
jl
fwait
das
push
sub
out
int3
sarl
mov
adc
aam
pop
adc
insb
aad
fists
iret
and
leave
decb
lock
or
fsub
popa
arpl
out
jl
insb
imul
push
sub
loop
mov
cmpsb
inc
cld
inc
cs
lret
and
xchg
fsubrs
mov
mov
ret
lahf
popa
int
or
push
xor
xor
mov
je
sbb
shrl
shll
outsb
in
in
mov
add
and
mov
and
repnz
mov
jp
push
imull
inc
adc
sahf
ss
inc
inc
aas
push
movsl
and
jb
push
sti
iret
test
mov
bound
inc
and
cld
mov
lods
in
push
mov
push
cmovne
add
cmpsb
xlat
mov
mov
js
add
out
cmp
add
ja
out
mov
dec
xchg
jecxz
loopne
and
adc
and
jne
push
scas
scas
push
in
loopne
mov
xchg
push
data16
and
push
xorl
jnp
inc
test
xchg
mov
dec
into
js
xor
mov
loopne
push
xor
call
subb
pushf
sahf
cmpsb
into
jl
rolb
or
jae
aaa
push
orb
in
into
push
dec
lods
lods
and
xor
cmp
ret
xchg
push
and
aas
outsl
jmp
cmpsl
fwait
pop
sbb
lock
sbb
sbb
jns
das
dec
mov
add
mov
inc
sti
ja
es
lock
pop
les
add
aad
or
insb
aad
popa
dec
addl
jns
call
push
leave
xor
movb
or
shlb
jo
scas
insl
mov
ficoml
add
cmp
sbbl
lods
mov
popa
push
add
dec
xlat
ss
adc
xor
mov
xchg
xchg
jmp
jb
xchg
mov
leave
adc
scas
lock
ljmp
mov
jecxz
jne
imul
call
sbb
adc
lahf
fwait
sub
adc
test
movsb
push
hlt
xor
xchg
inc
xchg
adc
aam
int
pop
pop
xor
test
inc
push
stc
sbb
or
shll
mov
insl
in
xchg
jno
filds
addr16
sbb
add
fabs
push
pop
xchg
bound
jle
das
mov
dec
cmp
rcrb
es
addr16
mov
adc
jmp
adc
jecxz
mov
roll
pop
data16
mov
xor
aam
mov
adc
daa
fbstp
sti
lea
push
das
clc
jb
ret
xor
mov
push
mov
inc
xor
mov
xchg
pop
cmc
lods
adc
mov
jbe
cmp
decl
mov
icebp
mov
ret
xchg
loopne
imul
lods
fbld
pop
outsl
sarl
mov
sub
mov
lods
outsb
sbb
sub
test
push
pop
and
jl
sbb
lahf
sbb
xor
mov
or
pop
fs
mov
int
rolb
cmp
int3
fiadds
lea
adc
stc
jno
inc
or
ficoml
or
sbb
daa
xor
mov
aaa
gs
aad
iret
out
xchg
push
jp
rolb
dec
pcmpeqb
xchg
add
xor
stos
jp
ret
data16
in
or
push
push
movsb
lcall
shlb
and
rcll
adc
sti
pop
adc
out
push
mov
inc
dec
xor
or
xlat
and
lea
test
push
movsb
xor
or
sub
dec
iret
in
or
inc
push
leave
lret
mov
mov
sbb
sbb
lds
adc
sbbl
inc
leave
and
test
cmp
pop
or
fsubrs
in
mov
fmull
and
push
pop
das
je
int3
ja
mov
imul
pop
dec
jge
das
clc
mov
loopne
add
jno
push
and
sub
dec
fnsave
push
mov
mov
in
inc
inc
xor
fwait
push
aad
push
call
push
mov
cwtl
call
loope
sbb
imul
lods
cmp
popf
sbb
icebp
push
sbb
pop
mov
into
xlat
xor
testl
xchg
jno
out
cwtl
xchg
test
loop
inc
int
dec
dec
jb
xchg
ds
pop
lret
arpl
fs
cld
or
mov
and
mov
adc
push
testl
shlb
aam
adc
jle
roll
xchg
mov
dec
ja
sbb
lods
pop
lods
push
ss
sbb
xchg
int3
ret
loopne
or
adc
fsubs
mov
jns
ret
call
cld
lds
loop
adcl
cmpxchg
iret
push
insb
enter
mov
aad
sub
enter
movsb
xchg
aad
out
arpl
jns
sub
popf
lock
cmp
lcall
notl
mov
inc
push
xor
lock
xchg
jle
jbe
mov
cmp
adc
and
movsb
pop
pop
or
cmp
sbb
rol
ljmp
aaa
adc
dec
push
outsb
aas
cmc
mov
repz
mov
cmp
daa
pop
repz
and
pushf
in
fldenv
arpl
insl
icebp
adc
adc
jbe
dec
sbb
dec
jbe
test
inc
xor
mov
push
push
cld
push
out
outsl
sub
clc
lods
cmpsb
cld
loopne
adc
or
jmp
add
jge
mov
push
push
data16
adc
inc
mov
insl
add
dec
jb,pn
sbb
inc
movsl
ret
shlb
jmp
imul
dec
jne
pop
and
mov
fwait
mov
test
ljmp
nop
mov
xchg
lds
mov
dec
pop
pop
jecxz
in
sbb
push
cmp
cwtl
push
btr
jns
lret
push
or
subb
dec
jbe
sbb
cmpb
mov
mov
sub
icebp
cmp
push
aaa
lods
scas
insl
pop
jns
lods
and
or
rcrl
popa
test
xorl
icebp
fists
push
jp
leave
xchg
xchg
push
push
xor
jmp
sbb
enter
cs
in
jl
icebp
shll
insl
mov
fdivrl
out
jb
ficoms
into
les
xchg
gs
xchg
ret
jno
or
mov
je
clc
mov
sub
testl
adc
xor
je
sti
jns
fucom
std
jns
fs
ret
orl
and
jno
jnp
mov
test
jns
xchg
loop
pop
lahf
push
mov
inc
mov
jl
not
cmp
cltd
fisubs
movsb
and
jns
lods
lahf
lea
mov
in
cmpsl
imul
mov
mov
lahf
jne
into
sub
dec
pusha
mov
test
push
je
push
stc
aaa
add
lods
enter
mov
dec
inc
mov
es
lea
test
or
sbb
inc
cmp
rcrb
xchg
push
bswap
dec
leave
pop
scas
pop
call
mov
popf
rolb
cmpsb
dec
push
lods
lods
sub
jnp
and
xor
mov
int3
test
dec
cli
jnp
mov
xchg
and
les
mov
lods
movsl
lock
mov
xlat
inc
cmp
into
jns
mov
jae
sub
out
inc
mov
imul
flds
loope
push
mov
cmpsb
pop
xor
ljmp
dec
jnp
xchg
enter
movsb
mov
add
test
jmp
push
adc
dec
mov
test
or
cli
sbb
cld
sbb
fnstenv
cld
test
jae
insl
jae
jl
mov
outsl
inc
repnz
lods
dec
mov
lods
rol
fs
stc
add
pop
mov
test
stos
gs
repz
je
mov
cmpl
fnsave
inc
xor
cmpsb
inc
out
frstpm(287
xor
leave
movsl
popf
shrl
fldenv
fadds
cld
jl
sub
jb
jne
rcrl
es
daa
jl
out
stos
cli
inc
dec
in
jb
mov
fwait
add
mov
aaa
jo
sahf
divl
es
push
test
mov
sub
xchg
popf
mov
icebp
xchg
pop
sbb
mov
mov
lds
mov
xor
roll
out
cmpsb
sub
not
lcall
test
pop
or
xchg
pop
out
mov
sbb
lcall
add
ss
pop
pop
jp
roll
repz
push
push
sbb
fistpl
mov
mov
daa
and
add
jbe
int3
enter
inc
out
fisubrs
mov
add
loop
in
mov
xchg
mov
ret
xchg
arpl
adc
or
mov
push
cmc
lahf
sbb
gs
push
and
mov
jne
ss
push
call
jo
sti
popf
inc
add
int3
mov
jo
pop
int
test
fwait
add
mov
sbb
push
push
mov
imul
mov
stos
insb
rcrb
lds
mov
xor
xor
push
ret
rorl
push
jg
adc
mov
cs
mov
pop
jecxz
pop
cmp
push
xor
mov
frstor
mov
mov
cmpsb
ret
and
mov
loop
lea
ss
jne
push
mov
iret
pop
fisttps
sahf
sbb
sub
hlt
insl
ja
movl
add
negb
jl
lcall
sub
cltd
cmp
jne
fistl
xchg
and
mov
pop
mov
scas
imul
sub
add
xor
and
nop
ljmp
or
fsubl
andb
aam
and
dec
std
or
dec
mov
jecxz
jp
or
mov
xor
mov
cmpsl
mov
aas
pop
jae,pt
dec
mov
cwtl
sbbb
sub
or
mov
out
cmp
xor
fwait
cmpsb
es
pop
add
jge
fisubrl
sbb
cltd
jmp
sti
sbb
fwait
sub
sub
inc
xchg
scas
dec
inc
enter
adc
jecxz
addl
and
mov
dec
mov
inc
jle
adc
xchg
xor
xor
xor
dec
out
jmp
mov
fwait
in
mov
in
pop
fldt
mov
dec
pop
adc
nop
sbb
pop
aas
aas
ljmp
nop
jns
mov
insl
into
loop
shlb
aad
repz
fisttps
mov
sub
or
lahf
jne
adc
mov
xor
sub
or
adc
lret
sub
stc
rclb
movsb
and
add
dec
in
or
aaa
scas
mov
cwtl
loopne
icebp
adc
int
jmp
mov
dec
pop
cmp
enter
mov
xor
int3
sti
jb
sbb
xor
push
or
daa
or
dec
out
das
inc
aaa
in
sub
jmp
jl
loope
ds
add
insl
sbb
out
and
fdivrl
sarl
in
cmp
cmpsl
push
inc
fyl2x
rorb
std
cld
fcomps
icebp
push
push
mov
lods
cmc
fwait
adc
inc
inc
int
sar
data16
jp
jle
add
add
adc
mov
add
xor
cmpsb
jecxz
pop
mov
stos
mov
pop
mov
add
fwait
mov
jo
int3
xorb
lock
add
mov
jmp
int
nop
sbb
add
sub
mov
xchg
sub
roll
sbb
out
xor
sbb
fs
lea
mov
aas
jle
add
xor
test
mov
cmp
pop
lret
push
dec
sub
enter
leave
data16
adc
scas
nop
test
or
sbb
imul
mov
out
popa
mov
repz
aaa
or
sahf
hlt
mov
pop
int
xor
inc
call
mov
mov
bound
repz
jb
js
in
adc
mov
stc
xchg
lods
test
loope
lret
sbb
add
jnp
lock
pop
jne
push
sahf
sub
dec
xchg
dec
adc
mov
pcmpeqd
jmp
mov
fs
mov
adc
mov
and
mov
pop
jg
mov
shl
lods
lea
outsl
pop
inc
push
fsubs
cmp
or
inc
push
xor
mov
ja
xchg
icebp
mov
mov
xchg
test
shll
jb
jmp
cmp
lock
dec
jb
out
loopne
movsb
lods
push
sbb
jno
sub
xlat
int
mov
or
or
movsl
inc
sub
xor
pop
push
push
or
pusha
icebp
adc
jns
out
cmp
test
cmp
and
or
dec
cmp
and
test
sbb
cmp
mov
int
imul
xchg
pop
add
shrl
sbb
jae
xchg
imul
sbb
leave
scas
sub
push
xchg
inc
mov
push
sti
mov
insb
out
dec
mov
icebp
out
in
scas
lcall
fdivrp
adc
mov
insb
nop
add
mov
pusha
icebp
xor
xlat
aas
mov
and
mov
cli
test
mov
imul
stos
sub
cmpsl
inc
xchg
icebp
dec
xchg
xlat
dec
sahf
scas
insb
adc
popf
ljmp
lods
xor
sub
insb
popf
mov
jp
mov
call
inc
ja
scas
xchg
jo,pt
or
repz
inc
fcomp
lods
icebp
jne
lods
repz
cmp
pop
mov
jae
jg
add
inc
bswap
ficompl
gs
pop
pop
aam
push
loope
sub
dec
in
scas
out
int
or
clc
mov
mov
lahf
pop
lret
push
pushl
daa
hlt
data16
repnz
test
push
in
sti
push
inc
test
cmp
aaa
std
jl
out
jns
ljmp
fbld
mov
fldcw
dec
ss
fcmovne
adc
popa
sbb
out
add
sahf
shll
mov
pop
push
outsl
xor
sbb
add
outsl
adc
das
sahf
xor
mov
maskmovq
loop
movsl
in
cmpsl
xchg
push
cltd
inc
pop
cltd
imul
add
push
add
mov
jmp
and
jmp
dec
sahf
jne
push
cmp
sarl
loop
mov
inc
push
stc
aaa
loop
lret
incb
jp
fistps
inc
pop
dec
pusha
push
arpl
cli
sbb
ljmp
ljmp
and
call
jecxz
and
sub
inc
xchg
sbb
lods
jmp
xor
inc
push
outsb
ljmp
jmp
cmp
sti
push
fwait
lret
sub
int3
xlat
pushf
inc
add
pop
mov
and
jg
or
cmp
lods
mov
call
cmp
mov
shrb
aas
pop
xor
push
xchg
mov
jne
xor
jns
insb
xchg
adc
push
icebp
mov
int
xor
sub
out
adc
or
inc
loopne
aam
jns
and
sbb
fnstcw
inc
fwait
or
pusha
inc
mov
dec
rorb
movsl
sbb
pushf
xlat
jne
xchg
sub
pop
inc
fwait
sbb
hlt
inc
and
dec
in
jno
outsb
jge
mov
xor
test
jge
mov
inc
mov
or
adc
add
xor
test
sbb
or
or
arpl
iret
mov
mov
pop
mov
sbb
xor
add
mov
add
call
dec
mov
mov
inc
in
cltd
xchg
aam
out
je
int3
dec
cmpsl
out
mov
jmp
mov
lds
pop
and
pop
bound
xchg
xorb
cs
aaa
loope
dec
xor
loop
pop
jns
fsubl
push
int
sub
inc
rcrb
sbb
pushf
and
and
pushf
push
jo
repnz
cmc
ljmp
sbb
adc
xor
repz
out
test
sbb
add
js
jle
mov
inc
add
inc
notl
mov
pop
sahf
jecxz
push
mov
shlb
push
stc
adc
shlb
pushf
cwtl
add
push
fcomi
add
push
and
and
push
repnz
xchg
add
insl
popl
lock
cmp
adc
test
mov
mov
roll
std
or
mov
and
mov
sbb
pop
clc
cmpsb
jno
aam
adcl
push
xor
test
pop
cmpsb
mov
repnz
das
mov
loop
cmp
aam
ja
cmpsl
aam
mov
cmp
lret
fs
or
cmp
out
fists
test
mov
cmp
jmp
cmp
adc
orb
cmp
adc
jecxz
in
dec
insl
mov
pop
push
cmp
and
and
jle
icebp
ret
push
jb
jae
sub
add
repnz
leave
mov
shlb
stc
ret
data16
pop
xchg
xchg
add
rolb
or
lods
je
xchg
pop
jle
and
icebp
adc
sahf
or
inc
lea
add
out
iret
inc
push
outsb
stos
dec
dec
jne
cmp
fs
aam
stos
jb
gs
fcoml
mov
fidivrs
fbld
lock
je
mov
daa
xor
out
fsubrl
lret
in
idivb
cmp
cld
lods
cmp
xchg
rcrl
fildl
push
data16
xchg
call
or
dec
inc
jae
int3
sub
mov
stos
fisttpl
sbb
xchg
lea
xchg
imulb
test
ret
mov
lret
shr
jb
adc
mov
ss
cmpsb
aam
mov
inc
mov
fcmovb
add
rorl
pop
es
ds
push
add
sti
outsl
stos
xlat
aam
leave
mov
and
push
xlat
xchg
ss
movsb
cmp
push
lcall
pusha
adcl
jb
cltd
clc
push
add
and
dec
in
and
jnp
mov
jg
pop
xchg
push
xor
push
aas
movsl
outsb
imul
lahf
add
out
sbb
movb
aam
pop
dec
pop
mov
bound
and
rcl
and
mov
or
lret
nop
test
mov
cs
test
mov
dec
lock
clc
pop
xor
mov
loopne
jle
fcmovbe
sarl
sbb
sarb
js
cltd
iret
xor
sub
xlat
push
sub
iret
dec
les
negb
rolb
insb
lds
and
push
insl
repnz
rcll
pushf
xor
lret
cmp
dec
cmpsl
shl
dec
push
aam
xlat
xlat
jmp
je
repz
lahf
xchg
and
dec
in
mov
xor
pop
sahf
push
aam
je
fcompl
out
xchg
enter
inc
xlat
sahf
repnz
and
add
int
and
inc
adc
aam
iret
jno
je
or
pop
jg
adc
sahf
mov
add
pop
outsl
jecxz
xchg
enter
and
in
mov
cmp
fnsave
push
outsl
int
fcoms
scas
push
mov
pop
pop
xor
imul
or
js
fldln2
mov
or
ss
icebp
xchg
lcall
incb
lock
les
dec
adc
sub
lds
fisubrl
lret
pop
cmpsb
xchg
sbb
xchg
jo
mov
in
fwait
popa
xor
mov
add
subl
sbb
xchg
jge
xchg
mov
sbb
mov
mov
loop
adc
cmp
pop
pop
xchg
ljmp
fiaddl
mov
ja
xchg
mov
xor
or
in
lcall
fs
dec
test
or
inc
or
les
test
in
enter
push
push
mov
test
dec
insb
loop
xor
pop
shll
test
inc
cmp
cwtl
negl
les
sbb
sub
dec
adc
lock
add
in
popf
mov
pusha
push
inc
addl
cltd
mov
sbb
xchg
dec
pop
xchg
sbb
int
int
stos
shrb
in
ss
and
int3
pop
aas
pusha
jns
pop
mov
pop
fcomi
rcrl
adc
xor
fwait
in
inc
and
or
mov
mov
stos
pop
rorl
int3
ss
js
and
mov
jg
mov
nop
movsb
adc
out
mov
xchg
test
dec
std
dec
pop
fadd
cmp
test
jmp
repnz
mov
push
jecxz
aam
push
pop
cmpsb
jle
icebp
jmp
inc
cmp
out
lea
inc
xchg
mov
hlt
mov
aad
pop
movsl
out
jns
xor
movsl
repz
inc
or
int3
push
adc
es
mov
and
divl
inc
cmp
aaa
jae
stos
sar
stos
je
popa
aam
sub
xor
push
hlt
jo
adc
cmp
jp
mov
in
jle
into
pusha
add
mov
ljmp
jne
sbb
int3
and
aaa
inc
xchg
pushf
lods
jp
sarl
ds
or
xchg
pushf
adc
or
mov
sub
jnp
divl
test
jp
mov
pop
jecxz
xchg
jl
stos
push
inc
xchg
outsl
repnz
mov
mov
inc
test
pop
pop
negb
leave
bound
or
inc
inc
fwait
leave
ljmp
jge
sbb
sub
jg
xor
fisubrs
stos
mov
stos
or
jp
mov
pop
or
and
loopne
inc
stos
aam
cmp
fbld
cmp
cmp
pushf
jmp
or
mov
lidtl
or
or
jnp
fisubrs
das
xchg
xchg
loop
mov
sti
inc
dec
bnd
push
adc
jecxz
jmp
ja
mov
std
popa
sbb
mov
mov
fdivr
push
jp
push
jnp
lock
iret
stos
xchg
inc
lods
push
or
add
cmpsb
or
xor
aas
cmp
add
dec
outsl
mov
mov
mov
mov
roll
inc
addr16
insl
into
inc
adc
or
mov
cmp
jle
int
and
mov
add
in
mov
add
pop
not
sbb
sti
mov
xor
jmp
in
push
outsl
mov
sub
clc
movsb
pushf
fidivl
sbb
stos
push
or
jno
arpl
insb
push
mov
adc
ret
cltd
ja
adc
sbbb
and
loope
jge
fcoml
push
ffree
aad
push
addr16
mov
in
lods
imul
pop
sub
xchg
mov
call
das
inc
pushf
ss
pop
sbb
sub
mov
sub
or
xchg
jnp
xchg
or
movsb
movsb
push
jne
jb
inc
fldcw
in
push
iret
cwtl
pop
push
shll
cmp
test
or
sahf
jne
data16
push
sbb
xchg
lahf
pop
jle
ljmp
mov
cmpsl
vpsubw
mov
add
adcb
add
or
xchg
mov
mov
mov
cwtl
mov
out
icebp
add
leave
push
stos
daa
hlt
addr16
shlb
and
mov
cmpsb
inc
shrb
rorl
iret
loopne
in
cmp
into
fistpl
jno
test
rcrl
mov
sbb
mov
pop
sbb
arpl
or
sub
not
cwtl
sahf
cmpb
cld
push
push
mov
add
aaa
push
mov
sub
lcall
lods
das
mov
mov
adc
aaa
pushf
sbb
and
imul
shll
push
xchg
out
adc
sahf
les
adc
adc
rolb
cmpsl
cmp
bound
mov
and
adcb
xor
xor
inc
int3
or
movsl
or
adc
fwait
stc
xor
mov
les
dec
test
inc
inc
scas
or
out
rcrl
dec
out
add
fucomp
push
jbe
dec
mov
cmp
clc
xchg
cmp
push
out
sub
cli
mov
pop
inc
or
cltd
mov
cmpl
aas
xor
hlt
fldcw
pop
fmull
xor
xchg
pop
mov
lahf
adc
enter
push
test
push
aas
adc
fsts
jno
lea
xor
fmulp
out
mov
or
adc
imul
stc
outsl
pop
mov
jmp
sub
add
push
jl
inc
mov
xchg
push
fidivrl
adcb
es
in
jne
lea
sub
jp
xchg
xchg
loop
add
stc
mov
aad
mov
jo
adc
fildll
fstps
fcomi
and
test
test
jge
adc
xor
dec
jmp
addr16
aam
xor
push
xorl
dec
mov
cmc
dec
repnz
insb
and
sbb
xor
fs
pop
pop
lock
inc
jb
test
fsubs
mov
ds
or
mov
xchg
jnp
dec
xchg
sub
and
mov
jne
add
imul
into
das
orl
nop
lds
divl
inc
add
mov
inc
inc
or
test
notb
sub
inc
outsl
add
pusha
enter
add
mov
imul
and
xor
mov
dec
ds
sarl
leave
pop
in
cmc
dec
in
lods
or
leave
sbb
shlb
fisttpl
xchg
addr16
les
out
jp
mov
call
cmp
pop
xchg
sbbl
add
cmp
xor
dec
dec
or
or
popa
and
lods
addl
fwait
xor
push
je,pt
xor
lods
out
mov
jg
inc
ret
dec
sub
add
jbe
inc
sbb
std
in
mov
dec
sti
cmp
mov
ja
les
lock
xor
pop
sub
dec
out
mov
shl
or
push
inc
shrl
push
fsubrl
cmp
sbb
loope
aad
push
insb
mov
xor
dec
test
dec
sub
and
jns
cmp
enter
test
loope
mov
xchg
fmull
in
sub
jne
loopne
sbb
push
mov
out
mov
sub
in
push
xchg
adc
cmp
push
xchg
pop
dec
aad
movsl
fsts
sub
test
mov
mov
test
jb
lret
out
rcrb
scas
pop
cld
orl
cmpsl
dec
ljmp
inc
int
mov
shll
jne
adc
mov
cli
mov
loope
adc
insl
je
addr16
imul
sbb
sub
in
xor
xchg
lock
xor
jmp
jo
lock
inc
mov
pop
inc
push
push
clc
mov
aad
mov
mov
test
jae
and
icebp
insl
lods
shl
mov
cmpsl
push
out
faddp
cwtl
std
mov
lret
sub
mov
imul
xchg
adc
push
icebp
ss
xchg
shl
das
or
cmc
test
jmp
icebp
or
xor
and
and
mov
outsb
sub
insb
cld
hlt
daa
std
mov
iret
call
out
push
daa
cmc
cmp
sahf
das
jae
mov
sbb
inc
jno
jle
mov
mov
push
lods
imul
imul
mov
cmp
daa
daa
in
xchg
mov
ds
insb
movsb
jns
rorb
sub
lds
pop
sub
sub
or
test
lahf
sbb
and
xlat
sbb
xchg
shlb
in
mov
inc
xor
push
out
into
popl
loope
repz
leave
jae
hlt
cwtl
adc
mov
cmp
xor
xor
loop
and
adc
mov
adc
out
adc
es
jecxz
int
and
fimuls
mov
xchg
adc
lock
pop
add
cltd
or
repnz
fiadds
add
cmp
mov
xor
ss
pushf
cmp
iret
mov
mov
inc
popa
dec
cmp
jp
cmp
inc
lods
dec
mov
adc
push
sbbl
push
inc
sub
call
cltd
jmp
ljmp
nop
cmc
mov
loopne
jg
iret
cwtl
push
xor
cs
jp
icebp
xchg
pop
and
cmpsl
mov
lock
fcomps
inc
and
lret
mov
mov
push
ss
xor
enter
push
cwtl
dec
mov
cmp
movsb
cli
xor
mov
imul
cmpsl
enter
testl
jno
roll
ds
push
pop
jecxz
mov
dec
xchg
jge
jle
lret
imul
push
clc
mov
stos
cmp
test
jnp
fs
lds
pop
push
bound
std
dec
adc
pop
orb
dec
bound
hlt
adc
dec
fwait
loop
adc
stc
jp
ss
mov
dec
sub
popf
lcall
adc
movsl
push
jo
xor
cmp
cmp
jbe
jg
cmpsb
mov
lcall
xchg
imul
das
les
and
xor
subl
mov
xchg
cmc
cmp
cld
cmpsl
mov
xchg
fucomp
inc
xchg
stos
aad
pushf
sub
loope
sarl
xor
and
push
pop
and
cs
inc
and
aam
repnz
push
std
jne
xor
sub
mov
shrl
rorl
inc
in
adc
daa
pushf
mov
ljmp
pmuludq
repnz
cmpb
xlat
jae
scas
lahf
mov
cmp
in
dec
add
and
loopne
sbb
or
jbe
xchg
or
inc
add
rol
cmp
and
or
cmp
pusha
jle
adc
ret
add
das
popa
je
cmp
xor
jne
pop
dec
jp
push
mov
and
add
call
arpl
in
jno
push
lgs
sub
mov
out
add
inc
dec
xlat
and
out
pop
xchg
pop
xchg
daa
lods
test
ss
push
xchg
add
or
sti
sub
jecxz
mov
cld
stos
je
mov
jae
xor
xlat
mov
fdivs
mov
inc
and
or
xchg
pop
in
clc
cmp
jecxz
popf
lret
stos
fidivs
cmp
fstps
pop
mov
test
test
stc
adc
add
dec
adc
push
sarl
mov
aaa
out
jl
and
adcl
xchg
inc
jb
mov
mov
pop
ror
inc
fucom
out
pop
sbb
cwtl
loopne
filds
xor
ficoml
loope
dec
pushf
rcrl
in
fwait
jne
pushf
cli
pusha
ja
sahf
pop
push
xchg
cmp
jbe
mov
add
jl
arpl
xor
fmul
xchg
aas
int3
aad
in
outsb
insb
clc
ja
repz
addr16
xor
insb
mov
adc
das
pop
ds
push
pusha
and
inc
orl
push
aaa
mov
xlat
add
clc
int
push
cmp
cmpsb
jbe
cltd
xchg
sub
out
mov
sub
loope
xor
into
push
movsb
inc
pop
push
adcb
mov
pop
mov
addr16
xchg
pop
cmp
gs
ror
mov
pusha
ja
mov
repnz
shrl
and
js
xor
das
mov
sub
sbb
aam
loopne
mov
pop
rorl
mov
mov
enter
xchg
bound
push
xchg
shlb
ret
scas
sbb
mov
mov
ret
ljmp
ficompl
insb
fstpt
adc
gs
test
fs
pop
dec
test
and
pushf
xchg
lahf
mov
shrl
leave
jge
ja
stos
add
leave
cmp
call
out
jne
add
ljmp
test
xor
sub
call
push
movsb
push
xor
lret
rcrb
jno
rolb
sub
int
add
push
lock
je
xlat
insl
jg
inc
push
testb
out
outsb
int
add
push
setge
popa
cli
push
pop
rcr
jp
jg
or
mov
mov
lds
pop
mov
add
mov
and
fstpl
pop
in
cltd
dec
push
mov
add
clc
xor
jo
scas
push
insb
lea
jmp
shr
repz
add
push
pop
mov
jmp
push
sub
jmp
mov
jo
insb
push
ja
call
push
sub
loopne
test
lcall
add
mov
or
leave
pop
mov
and
cmpl
push
and
jns
into
mov
dec
out
xor
into
mov
mov
jge
aam
pop
aaa
pop
pop
cmp
xchg
int3
addr16
inc
push
enter
mov
fldcw
mov
call
jecxz
out
add
in
enter
das
sub
sub
adc
test
sarb
stc
les
lds
test
je
or
pop
sbb
out
loop
in
stos
loope
lods
inc
les
mov
in
xchg
int3
std
or
mov
scas
std
test
jb
add
maxps
mov
fiaddl
sub
jg
subb
mov
mov
add
mov
mov
insb
jnp
in
loop
imul
cli
sub
fiaddl
add
repnz
inc
mov
loope
and
test
out
mov
xlat
incb
sub
fsubrl
cmp
popf
or
in
fstpt
fwait
xchg
sahf
xor
outsl
ret
sahf
fidivrl
mov
cmpsl
xchg
fistpll
scas
push
mov
jl
sub
movsl
mov
push
mov
fs
cmp
hlt
jmp
sub
test
pop
gs
pop
pushf
stc
sbb
push
mov
mov
inc
mov
aas
aam
pop
fdivrl
adc
insl
in
jno
filds
imul
ror
mov
jb
mov
lcall
xor
xchg
divb
pop
or
mov
test
je
call
idiv
gs
cmp
jnp
inc
pop
aad
pushf
jle
pop
add
loop
or
dec
rcll
xor
in
and
adc
mov
sbb
addr16
add
in
sbb
mov
cmpsl
mov
test
inc
dec
loope
mov
cld
xchg
push
mov
in
jae
inc
test
dec
mov
sbb
cmp
cmpsb
sbb
std
jae
lcall
mov
addb
or
std
dec
push
cmp
enter
and
repz
mov
aas
push
dec
insb
dec
int3
js
dec
pop
xlat
rolb
rorb
sbb
push
test
scas
or
cwtl
lcall
xchg
add
imul
ljmp
xchg
push
sbb
mov
and
lcall
lret
jl
scas
mov
bound
adc
mov
xor
lahf
pop
xchg
lahf
mov
negb
stc
add
inc
lcall
inc
and
fs
sbb
rolb
out
push
sar
mov
iret
cmp
or
filds
ret
jae
out
shll
aad
inc
jno
push
inc
ret
jne
dec
mov
iret
sub
xor
mov
leave
jae
adc
and
pop
sub
inc
add
and
lds
scas
mov
add
sub
adc
stos
pushf
imul
sub
scas
aas
xchg
push
mov
jecxz
jno
bound
fmull
xchg
loopne
mov
jmp
push
push
popf
es
add
and
icebp
inc
and
jo
jg
lcall
out
fs
pop
mov
std
jle
movsb
mov
sbbl
mov
and
add
rolb
int
lock
mov
mov
add
cli
jle
inc
jmp
loopne
push
push
cmp
xchg
leave
pop
push
je
mov
dec
stc
bound
pushf
push
sbb
sbb
and
cmpsb
push
int3
loope
in
cmpb
ljmp
or
cmpsl
mov
and
pop
pop
mov
out
stos
adc
in
aad
inc
loopne
dec
mov
or
mov
ljmp
mov
imul
inc
inc
stos
dec
ret
out
test
daa
adcb
mov
loop
or
cmp
sbbb
or
je
repnz
cmp
jb
sbb
jb
mov
mov
movsb
scas
imul
add
and
daa
aam
movsb
int
mov
in
jo
fistpll
or
insb
xor
enter
xor
iret
test
mov
rcrb
pop
adc
cmpsl
flds
addr16
cli
mov
into
xor
int
iret
mov
xchg
fs
xchg
outsb
adc
outsb
push
xlat
out
lret
outsl
nop
xor
push
cs
push
or
adc
sub
in
dec
push
add
push
jo
jne
rcrb
xchg
rclb
lods
scas
mov
pop
pop
pushf
enter
jmp
insb
jae
lret
jmp
mov
sysenter
xor
xchg
inc
pop
jp
mov
pop
in
arpl
pop
decl
lret
add
scas
sbb
fstp
ror
and
mulb
or
das
add
sahf
sarb
stos
cwtl
push
scas
sub
adc
jmp
out
mov
inc
out
data16
jg
or
push
push
mov
repz
mov
lret
inc
adc
fs
ror
pop
jo
dec
bound
insb
lahf
cld
movsb
xchg
pop
scas
mov
sub
pushf
or
mov
cmp
or
adc
cmp
adc
sub
ja
pop
fwait
sub
data16
dec
lahf
cli
mov
addr16
adc
jp
loopne
mov
mov
rclb
add
test
or
xlat
pop
sbb
xchg
dec
sahf
cmp
xor
sbb
adc
and
loopne
jnp
adc
pop
mov
mov
mov
mov
sub
and
test
test
cli
xchg
imul
cmp
mov
pop
lahf
pushf
cli
and
sti
popa
mov
enter
addb
jge
incl
leave
pop
fmuls
cmp
scas
jo
pop
aas
adc
int
jns
and
jmp
xor
sbb
cmp
inc
sbb
xchg
jo
pop
push
xchg
jecxz
es
xor
pusha
in
and
adc
adc
xchg
fistps
push
imul
dec
jnp
sub
shlb
mov
push
testl
rorl
xor
dec
push
xlat
fs
cmp
pop
aaa
ja
inc
adcl
mov
aaa
adc
das
mov
cmp
testl
jg
psrlq
pushf
sub
arpl
ret
adc
mov
mov
push
mov
xor
pop
test
cmp
mov
inc
ja
leave
mull
cmpsl
add
pop
jle
pop
xlat
imull
lds
pop
sub
int
sti
mov
and
lahf
push
jns
and
sub
mov
fs
leave
cmpsb
jb
lods
es
pop
outsl
insl
xchg
or
in
mov
je
dec
mov
or
pop
cmp
and
jne
ja
pop
xor
in
xchg
xchg
mov
cmpsl
das
mov
mov
mov
shll
jb
mov
rorb
loope
mov
fdivrl
adcb
pop
icebp
shll
sub
cmp
pop
stc
cli
mov
out
sahf
xor
dec
fwait
sar
cmp
adc
icebp
sub
out
in
movsl
push
fcoms
out
scas
inc
push
lods
inc
xchg
in
jb
hlt
mov
bnd
push
stos
das
stos
sarb
sti
bound
lock
adc
mov
sarl
xchg
ljmp
test
arpl
out
pop
aas
cmp
iret
es
hlt
lds
adc
mov
add
movzbl
jp
out
rcll
das
shl
xchg
loope
and
lahf
cmp
jno
or
rcrb
ljmp
dec
in
push
filds
mov
in
out
les
imul
dec
loopne
add
aaa
mov
decb
add
xchg
cmp
popa
lret
adc
jmp
xchg
sti
or
adc
pop
stc
inc
sub
nop
inc
cmpsl
and
lcall
jecxz
inc
pop
xchg
xchg
popf
sbb
cld
test
sti
loopne
or
fnsave
stos
jbe
out
fadd
iret
xchg
mov
mov
mov
inc
inc
ror
test
push
out
sbb
shll
and
xchg
ljmp
dec
es
in
fistpll
push
arpl
push
int
dec
dec
outsb
repnz
pop
pop
xchg
rcrl
xchg
sbb
loopne
test
mov
ss
scas
xor
xchg
push
mov
push
mov
mov
and
cld
xlat
enter
stos
shll
call
fidivs
fldl
data16
jge
lods
inc
test
repnz
mov
test
gs
stos
dec
inc
mov
pop
icebp
test
loopne
inc
pop
push
inc
aaa
lea
daa
test
xchg
je
push
sub
pop
mov
push
dec
pop
daa
mov
enter
movb
mov
aas
out
out
iret
dec
movsl
dec
mov
pop
xchg
mov
xor
daa
shl
adc
adc
cwtl
or
movsb
or
cmp
das
lock
inc
add
and
ljmp
scas
dec
call
and
shlb
test
add
push
sti
jnp
sbb
pop
mov
out
inc
lret
push
inc
je
dec
jge
add
mov
lds
mov
adc
lret
or
push
daa
xchg
fbld
add
or
ja,pn
cmpsl
mov
addl
popf
iret
call
sarb
dec
das
insb
sub
daa
repz
lea
jge
jae
scas
adc
fsubrs
jb
subl
or
lods
addr16
push
pusha
stos
rcrb
sub
pop
mov
rcll
mov
jg
jmp
push
stc
mov
insl
push
ret
push
clc
stc
cmpl
stos
aad
jnp
jae
mov
inc
in
decb
xchg
aam
negb
in
stos
pop
cmp
inc
cltd
ret
pop
call
xchg
scas
xchg
fsubl
and
and
fiaddl
jbe
insb
lahf
inc
mov
int
std
mov
mov
sbbl
arpl
adc
sbb
les
dec
and
es
sbb
and
sub
inc
loopne
sbb
sub
add
lcall
pop
cld
dec
cmp
dec
push
nop
into
mov
rcrl
adc
lods
fmul
pushf
xor
add
out
mov
mov
xor
popa
xchg
sbb
xchg
mov
xchg
and
pop
or
xchg
inc
int3
xchg
bound
pusha
sub
fxch
mov
push
pop
lcall
lret
cltd
xchg
mov
mov
sbb
push
insl
add
cmpsb
in
ret
mov
les
xchg
mov
sub
adc
adc
cmp
fcmovb
inc
push
les
sub
pop
idivl
jae
and
push
xor
out
shrl
ret
dec
jge
xrelease
daa
addr16
flds
mov
lods
jo
push
xor
out
pop
add
cmc
in
sti
xchg
mov
imul
repz
test
scas
ss
or
testb
jmp
fcomip
lret
call
push
stc
push
in
jno
lahf
loop
push
rolb
pop
dec
sub
lock
and
push
jb
and
mov
andl
ja
test
stc
dec
cwtl
and
mov
and
push
push
add
or
call
push
mov
pop
sbb
pop
ljmp
sti
mov
or
insb
es
xor
adc
pop
loopne
mov
xchg
push
xor
loop
movsb
leave
mov
cld
lods
adcb
dec
lahf
add
jp
add
dec
pop
ljmp
push
dec
les
lcall
pusha
pop
mov
xchg
inc
jmp
ss
pop
push
cmc
or
lea
cmp
sub
or
jge
mov
adcb
inc
or
push
pop
cmp
xor
in
xchg
scas
sub
lods
out
frstor
lods
mov
rcl
and
dec
xchg
das
shll
inc
cmp
cmpsl
and
js
rcl
mov
fidivl
std
mov
cmp
mov
jmp
add
in
or
push
inc
cmp
xor
fidivs
mov
orl
dec
lea
fs
sub
cmc
mov
ljmp
adc
shl
mov
push
jge
popf
hlt
shlb
scas
jp
jl
int
mov
cmpsl
sbb
jge
faddl
adc
mov
pop
jmp
into
inc
jl
fdivrl
mov
pop
stos
xchg
and
push
xlat
jecxz
repz
sarl
cmc
or
mov
lock
mov
jecxz
jne
cmp
inc
xor
sahf
jbe
ja
lcall
sbb
jbe
adc
jg
cmp
cld
gs
or
clc
cmp
xor
dec
adc
in
cld
mov
adc
movsb
filds
mov
mov
aas
inc
mull
add
jle
xor
push
sbb
ret
or
hlt
push
push
in
mov
pop
cltd
lods
mov
popf
cwtl
xor
in
adc
es
sahf
call
arpl
push
aad
out
jbe
loopne
sub
test
out
xchg
cli
xor
iret
mov
push
xchg
or
lea
outsl
sbb
dec
mov
call
addr16
roll
movsb
in
dec
movsb
cltd
idivl
rorb
cs
test
push
jne
lret
mov
pop
jg
pop
out
cld
push
dec
xlat
dec
movsb
call
inc
and
dec
or
into
sbbb
inc
mov
fst
fidivrs
xor
sbb
mov
cmp
jns
negl
sbb
fsts
sahf
lret
push
fsubrs
mov
inc
loopne
shl
leave
pop
lret
loope
mov
sbb
outsl
fldenv
jbe
or
cltd
adc
sub
aas
arpl
shlb
jmp
jmp
mov
fwait
popl
and
mov
fdivs
int
addr16
push
sbb
out
inc
addb
outsl
test
rclb
test
xchg
imull
or
inc
roll
and
pop
lahf
xchg
push
jb
ja
movsb
subl
stos
cld
fisubs
hlt
mov
pop
dec
add
push
pop
and
sub
call
test
mov
dec
xchg
fsts
ljmp
cli
or
arpl
shlb
fwait
icebp
mov
fs
cmc
testb
inc
mov
test
shr
cltd
pop
jl
mov
test
push
mov
push
in
mov
lcall
not
push
popa
adcl
jmp
rcl
xchg
mov
inc
fiadds
das
nop
jae
daa
xor
jnp
adc
mov
or
aad
push
and
mov
jbe
std
jl
dec
pop
sbb
inc
sbb
cmpb
cwtl
je
pop
mov
xchg
loope
lock
lret
push
sbb
push
sub
push
cs
cmp
dec
lret
add
out
or
lds
dec
add
cmp
and
and
fdivr
cmp
shll
and
dec
push
loop
pusha
movsb
xchg
in
ret
mov
jp
sbb
aas
xor
aaa
movsb
sub
aad
mov
sahf
mov
add
imul
icebp
cwtl
sarb
push
test
mov
pop
insl
lret
cmp
lret
xchg
fs
inc
enter
jmp
addl
adc
jmp
in
fimull
push
movsb
and
pop
rorl
lock
add
jb
inc
leave
dec
mov
add
xchg
loop
xchg
jno
xchg
and
jp
cld
jne
sub
sub
nop
rcl
cmpsl
sbb
push
fmulp
mov
mov
cmp
xchg
data16
push
push
aas
mov
pop
popf
cmp
push
arpl
jae
mov
xchg
push
pop
test
and
mov
lcall
sbbb
cmpsb
scas
inc
pop
aad
fdivrl
dec
int
inc
call
cltd
and
add
clc
add
bound
testb
sti
jo
push
dec
lds
jae
xchg
movzwl
mov
xchg
dec
hlt
and
shr
ljmp
mov
jle
jne
xor
gs
dec
inc
pusha
mov
add
js
shll
iret
pop
aas
xchg
ja
sub
shlb
mov
xlat
and
enter
sub
cld
or
mov
dec
mov
dec
cmpsb
data16
sahf
and
fsubl
fstpt
mov
push
fs
push
repz
divb
scas
cmp
pushf
fld
das
cmp
pop
out
mov
xchg
movsl
ljmp
pushf
mov
xor
adc
repnz
add
testb
lret
ljmp
xchg
lret
and
scas
mov
lods
movsl
adc
pop
jp
mov
test
push
add
add
ret
pop
jmp
dec
ds
cmp
push
psllq
mov
lahf
gs
lcall
inc
dec
or
pop
cwtl
ds
xchg
fidivrl
pop
shrb
xor
stos
mov
sbb
sbb
mov
rcr
ljmp
cmpsb
subb
insl
pop
add
ss
into
xlat
ljmp
xchg
lock
js
testl
test
lcall
fwait
push
rcr
sbb
xor
sbb
rcrb
xchg
and
and
aas
jge
stc
lock
outsb
mov
jecxz
outsb
push
leave
cli
loope
add
sbb
flds
sbb
inc
xchg
movsb
xchg
rol
mov
fs
aam
adc
sub
addl
out
in
lahf
pop
aam
push
fs
add
xchg
lods
pop
pop
and
fldl
mov
in
subb
sub
imul
adc
and
pop
lea
mov
jns
fwait
pop
flds
xor
mov
adc
jnp
adc
mov
adc
idivb
std
jbe
inc
sub
jge
dec
or
cmp
repnz
sub
push
pushf
dec
std
dec
addr16
xor
xlat
roll
pop
jno
mov
adc
subl
ret
cmp
push
cmp
cmpsl
out
mov
cmpsl
pop
leave
push
aam
into
fstl
xor
mov
or
mov
jne
pop
dec
insl
loop
fistpll
push
fisubrl
inc
cltd
je
dec
xlat
clc
cmp
sub
add
enter
xlat
xor
mov
pop
and
sub
or
xlat
mov
adc
mov
fmul
or
push
lret
sub
add
or
insb
jl
or
dec
clc
daa
neg
outsb
or
push
and
mov
sbb
das
pop
dec
repnz
pop
jae
call
test
sub
xor
or
cwtl
add
cmp
out
out
mov
ljmp
out
in
fwait
loopne
test
adc
int3
mov
mov
cmp
xchg
mov
xor
push
outsl
jle
pushl
or
shrb
push
stos
push
cmp
jns
and
cltd
test
cmp
sbb
dec
shr
outsl
pop
mov
test
fnstenv
jno
fcomps
and
jmp
je
push
leave
push
leave
pop
sahf
and
mov
movups
dec
sub
push
or
movsb
and
ljmp
hlt
lahf
mov
dec
andl
xchg
pop
inc
adcl
lods
pushf
testl
sub
les
jne
sbb
xchg
mov
das
or
movb
sarb
stc
sub
leave
mov
loope
dec
iret
inc
loope
pop
xchg
dec
pop
adc
lock
jae
push
dec
cmpsl
lcall
mov
mov
push
pop
pop
push
in
ret
enter
xor
sub
mov
hlt
cmp
adc
dec
pop
jmp
jns
shll
int
fmul
mov
inc
fwait
push
sahf
adc
mov
call
mov
fisttps
pushf
fstps
int
mov
mov
pop
shlb
cli
adc
les
xlat
popa
cmp
mov
out
fmul
xchg
xchg
or
les
mov
jno
inc
insb
je
pop
aas
call
sbb
jb
insl
xchg
inc
and
idivb
lret
adc
sbb
mov
test
mov
dec
inc
xor
mov
mov
or
cmpsl
in
adc
test
notl
jge
cmp
out
xor
jp
mov
cmp
into
adc
fwait
inc
test
icebp
rcrb
movsl
mulb
inc
lahf
adc
pop
cmp
add
cmp
arpl
cwtl
ja
add
jge
push
xchg
loopne
adcb
xchg
cmp
loopne
movsb
jb
xchg
push
pop
xchg
mov
fs
mov
rol
aaa
in
sbb
popa
or
or
aam
cmp
inc
add
cmp
mov
cmc
decl
incl
xchg
mov
dec
dec
out
sahf
repnz
lcall
ss
xchg
lret
test
add
cld
in
sti
mov
cmpsb
pop
adc
cs
inc
pop
repnz
les
jbe
sbbl
arpl
fdiv
bound
lcall
sub
nopl
stc
and
dec
mov
mov
and
test
flds
js
jbe
mov
mov
xor
outsb
dec
test
loope
sub
imul
dec
cmp
pop
cmp
movsb
adc
xlat
mov
ret
mov
dec
dec
rolb
cmp
daa
ds
jns
mov
movsb
cld
rcl
dec
dec
xchg
xor
outsl
stos
incl
xor
push
jl
pop
pop
lods
push
ret
mov
in
aaa
sarb
and
fisubrs
ds
test
icebp
xlat
dec
cmp
loope
faddl
out
and
add
lcall
pushf
cmp
sti
add
lods
shlb
mov
out
fcomp
sarl
jno
bound
adc
sbb
xchg
dec
fdivr
jg
mov
cmpsb
bound
adc
bound
aad
js
lret
cmpsb
inc
sbb
mov
das
mov
mov
shlb
pop
add
add
nop
sub
dec
in
sub
xor
pop
out
adc
sbb
cld
push
test
loopne
lret
inc
enter
xchg
mov
jns
mov
dec
and
out
jmp
sbb
cmp
xchg
push
call
or
xchg
rcrl
or
aam
xchg
gs
ds
in
fcmovnbe
ds
xor
call
ss
loopne
push
mov
fmuls
mov
into
ja
jb
cmc
cmp
outsl
and
jmp
xor
in
xchg
shrl
lock
add
int3
mov
xchg
adc
fwait
rcrl
lods
lods
cltd
mov
dec
xlat
jnp
dec
xchg
out
push
sti
test
pop
inc
xchg
shll
push
loope
bound
scas
repnz
icebp
and
xchg
fsubrp
jmp
jbe
cmp
sti
push
mov
popf
mov
iret
mov
sbb
lahf
fwait
sbb
cmp
cwtl
test
mov
adc
aaa
xchg
test
ja
imul
lods
adc
push
insl
shrb
adc
addb
lds
jecxz
in
mov
outsb
xchg
out
loope
rcll
inc
mov
mov
cmp
inc
in
popa
loope
mov
out
arpl
cmp
jge
inc
jl
gs
xor
sbb
and
pop
inc
mov
out
dec
jae
fadd
push
lods
repz
and
jbe
ret
mov
test
push
add
dec
pop
cmp
sbb
cmp
les
mov
in
scas
pop
dec
lahf
cmp
movsb
addl
adc
xor
or
dec
shl
xchg
adc
fs
out
xchg
push
pop
or
cmpsl
or
xor
sub
xchg
jno
add
scas
shl
xchg
sub
adc
xchg
imul
iret
rcll
jb
adc
insb
lods
mov
fwait
cs
inc
sbb
xchg
cmp
cmc
mov
cld
cwtl
nop
lahf
mov
subb
in
in
rcl
xchg
inc
mov
mov
dec
mov
sbb
cmpsl
fldenv
dec
sbb
push
lods
jl
imul
jb
arpl
xchg
push
repnz
sub
stos
bound
fsts
fsubs
mov
outsl
adc
test
mov
cmc
mov
in
aaa
into
mov
ror
lcall
add
pop
and
jp
loope
pusha
pusha
xchg
icebp
mov
push
pop
sarl
arpl
pop
or
addr16
push
rolb
xor
lea
xor
pop
fmull
iret
or
loop
add
adc
enter
pop
cmp
xchg
xor
aad
hlt
or
addr16
rcll
lods
insb
adc
sbb
xor
test
lret
in
add
fwait
mov
cld
loopne
mov
cmp
mov
stos
stos
push
popf
mov
jbe
sbb
cmpsl
sub
fildl
xor
xchg
scas
daa
loop
mov
arpl
fistpl
mov
ss
sub
xchg
sahf
and
push
xchg
aaa
dec
sbb
lds
dec
xchg
movsl
mov
or
enter
add
mov
cmp
dec
aad
das
and
pop
stc
lcall
xchg
xchg
inc
mov
cmpsb
pop
mov
adc
adc
xor
mov
mov
or
push
mov
sarb
fistps
popa
int
ss
in
sbbl
or
in
push
ljmp
ljmp
push
push
mov
jns
lods
les
pop
cmpsb
mov
pop
mov
pop
fidivl
fs
lds
daa
pop
ljmp
dec
lret
jno
sub
adc
ljmp
jp
out
mov
xor
jae
mov
inc
imul
sub
fwait
daa
cmp
je
or
dec
daa
add
fwait
jge
int
inc
jo
loop
movl
out
nop
pop
or
mov
xlat
and
imul
jmp
jae
fisttpl
stc
push
push
xor
dec
scas
dec
outsl
sub
js
mov
mov
dec
incb
mov
clc
fadd
xor
mov
xchg
sub
and
imul
mov
xlat
sbb
mov
sahf
out
insb
xchg
cmp
lea
leave
pop
and
mov
fidivs
hlt
psrad
inc
and
arpl
or
imul
cmc
scas
dec
daa
adc
testb
inc
adc
cmp
outsl
mov
add
leave
jbe
es
xor
mov
les
mov
xor
dec
mov
inc
leave
xor
std
gs
jmp
or
leave
test
xchg
sahf
lcall
mov
popf
push
je
mov
xor
cld
jb
cmpsb
adc
sbb
adc
loop
sarb
movsl
into
sbb
cmp
notb
sub
fistl
add
aas
jle
pop
inc
mov
sti
or
shr
lcall
jge
fwait
xor
test
repnz
inc
movsb
dec
scas
mov
push
xchg
xlat
xor
sti
pop
aam
pop
notl
cmp
aas
mov
xor
push
push
dec
jmp
popf
jae
imul
inc
hlt
shl
pusha
xchg
test
fdivrl
es
xchg
add
mov
call
pop
xor
notb
lods
mov
daa
cltd
pop
sbb
xor
jecxz
xor
mov
cmc
xchg
xchg
outsl
and
mov
sub
sbb
jno
pop
es
add
inc
and
and
roll
sub
and
cmp
mov
xchg
sbb
imul
push
pop
and
push
xorl
mov
inc
popf
and
sbb
mov
icebp
mov
repz
loop
xchg
loope
iret
outsb
mov
push
loope
fldl
int
aam
push
mov
mov
pusha
mov
jnp
push
stos
jb
and
sub
inc
mov
add
sub
out
cmp
mov
jbe
aam
iret
hlt
cmp
pop
in
rcll
std
push
inc
out
lods
or
movsl
xchg
jno
xchg
popf
sub
and
or
popf
mov
inc
mov
sbbb
cmp
test
lahf
cli
sbb
adcb
pop
ss
push
ds
add
inc
sbb
pop
pop
shll
xor
jns
mov
mov
xor
fidivl
cmp
dec
enter
mov
stos
iret
push
out
cltd
les
and
stos
mov
iret
das
sub
mov
or
sbb
mov
xchg
dec
js
and
fistpll
mov
sbb
dec
add
sti
lock
icebp
pop
push
pop
pop
pop
or
subb
scas
adc
pop
sbb
pop
fwait
cltd
sarl
rclb
jns
or
imul
andb
clc
cwtl
imul
fists
cmpsb
xor
sub
or
out
lock
mov
sar
cmp
aad
js
jmp
adc
mov
adc
adc
mov
sahf
sub
mov
add
and
test
and
out
pop
push
stos
out
dec
mov
dec
xchg
dec
mov
dec
clc
push
pop
popa
xlat
pusha
sahf
loope
push
add
clc
dec
data16
add
test
mov
arpl
inc
fidivrs
or
pop
push
fbstp
push
gs
in
push
pusha
cmp
and
pop
dec
rorl
dec
cmpsl
xor
sbb
dec
mov
mov
or
and
into
xor
mov
popf
je
inc
loopne
hlt
sbbb
ficoml
adc
outsl
jb
movsb
cmp
dec
push
jbe
pop
add
cltd
sbb
pop
inc
mov
lret
sbb
loope
pop
mov
cmpsl
aas
fisubl
adc
xchg
lahf
aam
loop
test
insl
dec
xor
mov
xorb
cli
fstpl
ss
repz
scas
popf
std
pop
js
adc
in
jnp
loope
fnstenv
push
sbb
mov
pop
cmpb
mov
jg
sub
inc
sahf
jl
mov
pop
xchg
jb
int3
mov
lret
cmpsl
cmp
and
push
imul
in
push
aad
lock
add
repnz
push
js
sub
leave
jb
add
add
lret
mov
mov
jg
add
jns
dec
sub
jge
pop
sub
lea
outsl
or
add
jmp
icebp
out
insb
mov
fucomp
andl
fs
js
and
dec
out
mov
repnz
and
ret
push
mov
in
mov
hlt
stc
rcrb
cld
xchg
xchg
out
mov
sbb
arpl
mov
mov
xor
cmpsb
xchg
push
or
fistpl
scas
addr16
test
xchg
jbe
dec
and
sahf
cwtl
movsl
out
cwtl
out
repnz
adc
mov
mov
jle
xchg
ds
idivl
inc
mov
add
dec
jb
inc
cmp
cmp
shlb
mov
push
mov
dec
jle
push
push
jae
fsubrs
adc
lock
aaa
sub
mov
bound
sbb
clc
add
pop
cmp
jnp
stc
sbb
sub
sbb
mov
mov
pop
leave
roll
xchg
es
gs
and
shlb
push
fcomps
in
mov
movsl
mov
arpl
call
adc
nop
xabort
les
cmp
mov
pusha
std
ret
mov
or
xor
cmp
xchg
xor
das
inc
push
aas
and
imul
and
sub
push
inc
js
jl
nop
mov
xchg
sub
fcmovne
imul
lahf
test
lea
cmpb
push
sub
mov
shrb
dec
sbb
aad
lret
mov
int3
cmp
outsb
outsb
adc
xchg
insb
out
in
mov
mov
lret
sarl
and
and
mov
rol
repz
popf
les
stc
movsb
jmp
into
insb
sbb
adc
adc
mov
in
movsb
jmp
cltd
add
xchg
push
test
mov
jle
push
add
sbb
sbb
jl
into
div
adc
stos
cmp
rolb
divl
lea
ljmp
jp
outsl
adc
test
insb
dec
xchg
push
das
adc
or
pop
popf
dec
add
aam
movsb
pop
inc
mov
sbb
in
das
or
aaa
enter
inc
mov
xor
cmp
xlat
fldenv
repnz
push
fsts
insl
ret
leave
enter
scas
xor
and
mov
jo
ja
out
loopw
test
mov
adc
cwtl
or
mov
push
lahf
test
adc
neg
sbb
and
insl
add
mov
sahf
pop
mov
in
rcrl
popa
mov
mov
imul
mov
xchg
sub
xchg
xchg
sub
ret
dec
jecxz,pn
out
cmpsb
loop
pop
pop
or
xorb
ret
outsl
adc
shll
push
pusha
popf
in
test
and
sub
jae
sbb
fmuls
scas
into
mov
xlat
ficompl
push
jp
jmp
dec
ret
je
or
addb
outsl
dec
mov
dec
or
arpl
popf
ljmp
stc
inc
mov
ja
and
fcomip
adc
in
jb
sbb
repz
dec
xchg
sbb
clc
push
aas
sub
test
roll
lahf
inc
cmp
test
js
or
aad
mov
xchg
scas
push
and
and
sbb
inc
add
sub
fldt
jnp
aad
shl
outsl
mov
test
jge
pop
mov
push
xchg
out
cmp
sarl
or
arpl
test
lods
imul
into
and
ret
fcoms
sahf
xor
push
jno
aaa
in
aam
mov
mov
inc
lds
jle
fs
push
stos
mov
out
scas
jecxz
incl
dec
xchg
push
imul
mov
cmp
xchg
loope
movsl
jno
in
push
cmp
aas
and
pop
lret
clc
movsl
call
ljmp
ffree
pop
adc
mov
push
enter
js
into
mov
xchg
cmpsl
jns
jle
aad
addr16
mov
icebp
lahf
inc
inc
jle
fimull
inc
cmc
push
push
inc
cs
inc
stc
xchg
and
rol
shlb
fiadds
mov
fsub
daa
popf
cmp
fadd
fadds
lcall
push
mov
sbb
clc
sbb
bound
sbb
in
sub
ss
inc
push
adc
and
push
mov
rolb
xor
rcr
loopnew
mov
add
imul
jl
fmuls
fcompl
ljmp
push
pop
pop
testb
sti
leave
or
je
arpl
cmp
cmc
movzbl
mov
push
mov
mov
mov
es
ss
xlat
cmp
jne
xor
pop
fisubrs
mov
into
or
imul
push
std
mov
adc
jge
cltd
jb
pop
inc
mov
xchg
fisubrs
clc
std
dec
add
add
aas
add
xchg
mov
cmpsl
jo
std
xchg
add
repnz
test
das
fistpll
mov
mov
mov
shlb
sub
add
adc
dec
and
es
push
inc
mov
lea
mov
inc
mov
add
jp
xchg
adc
aam
fucom
or
jl
sbb
fistpll
xchg
aad
jl
sti
and
push
adc
or
or
loope
sub
in
push
xchg
push
and
inc
gs
or
sbb
aam
sub
jge
jp
dec
mov
cmp
test
mov
enter
mov
mov
es
add
in
jmp
sub
iret
pop
sub
or
jnp
int
push
pop
sub
xorb
pop
filds
insb
lret
std
jo
ret
jp
gs
and
inc
xchg
pusha
lds
loopne
sbb
icebp
mov
mov
pop
inc
aaa
jl
cmp
pop
mov
inc
imul
xor
jmp
jge
add
mov
inc
cld
cmc
mov
sub
and
and
jl
stos
lods
neg
and
adc
popa
mov
loopne
add
jp
leave
pop
pop
push
adc
or
fwait
sub
add
pusha
push
aad
divb
pusha
cwtl
into
ljmp
clc
mov
and
xor
mov
imul
dec
pop
es
mov
mov
fwait
cmpl
lods
enter
ja
imul
push
movsl
fs
or
aas
xor
jecxz
popfw
pop
push
or
ret
scas
aas
xor
mov
popaw
lds
popl
mov
shlb
outsb
gs
insl
add
das
or
lods
popf
ds
pop
xchg
jmp
imul
lock
mov
ja
mov
jbe
lahf
xchg
and
les
push
sbb
ss
mov
je
xchg
xor
add
lods
outsb
loopne
mov
ror
jo
sub
xor
loopne
movsb
out
jg
mov
sbb
mov
xchg
test
inc
scas
push
xchg
xor
add
inc
fsubl
sar
imul
filds
mov
sub
rorb
ja
in
es
orl
outsl
test
lcall
pop
mov
dec
cmp
lret
jecxz
add
inc
gs
lcall
mov
and
sub
push
fisubrs
bound
stos
sbb
test
fldcw
pop
ret
loope
cwtl
cmp
xchg
popf
ja
cmp
inc
pushf
adc
sbb
mov
es
movsb
outsb
mov
mov
add
out
call
sbb
lock
flds
popa
pop
cmc
xchg
sahf
mov
pop
cltd
loop
xchg
sahf
jno
fisubrl
jne
aam
daa
xor
cmp
std
push
push
dec
lods
jg
popf
xchg
push
mov
or
pop
jo
mov
add
pusha
sbb
inc
aas
mov
icebp
xchg
cmpsb
adc
cmp
loope
cmp
fnstsw
mov
movlps
add
in
or
push
stos
xchg
xlat
fwait
or
mov
sub
and
gs
pop
cltd
dec
mov
shrb
inc
cmp
jbe
xor
cmp
out
cli
or
or
stc
outsl
pop
fisttps
imul
or
pushf
out
mov
adc
push
out
push
sbb
cld
das
or
imul
leave
pop
mov
push
xchg
pop
stos
mov
sub
dec
pop
adc
mov
pop
mov
xchg
jno
loope
inc
sbb
std
adc
in
sub
inc
arpl
popf
cmpl
es
nop
loopne
push
addr16
lret
mov
pop
out
sar
outsl
push
mov
add
lret
cs
jne
cmpsl
jle
pop
cmpl
in
shl
sub
pop
push
mov
pop
sub
mov
ret
movsb
sub
rep
mov
enter
fwait
in
jecxz
and
xchg
and
push
shl
jmp
push
pop
and
cwtl
fcmovbe
mov
in
sub
inc
and
rol
cmp
or
xlat
stc
mov
inc
inc
pop
adc
sub
js
inc
cld
adc
or
scas
mov
adc
push
popf
mov
jge
mov
loopne
adc
fcoml
leave
mov
mov
outsl
add
cld
mov
test
mov
sbb
jns
movsl
jle
inc
or
mov
clc
jae
test
jg
idivb
mov
fidivrs
and
cmpsl
sub
test
add
cmp
pop
cmpsb
out
xchg
mov
ja
xor
xchg
into
push
add
mov
inc
rolb
and
cwtl
pop
pop
push
call
add
pop
lds
mov
dec
push
dec
pop
addr16
cmp
shlb
addl
inc
outsb
add
stos
xor
loopne
mov
in
mov
sub
into
ret
xchg
mov
test
arpl
jnp
fsubr
pop
xor
jno
inc
cmpsl
mov
movsb
movsb
test
cltd
stos
cmp
repz
and
xchg
int
popa
rcll
sbb
clc
sbb
cltd
mov
cmpsb
roll
ds
das
mov
inc
add
push
and
jg
jl
mov
add
cli
stos
push
orl
xchg
cwtl
lods
pop
xor
mov
lret
cmp
nop
mov
cltd
cmp
movsb
pop
mov
sbb
jbe
andl
jnp
fisttpll
or
push
inc
fisttpl
nop
adc
js
outsb
xchg
mov
flds
ret
adc
xchg
cmp
inc
mov
jecxz
cmpsl
loopne
std
or
aam
xchg
outsl
cmp
imul
imulb
das
aad
push
sub
enter
std
dec
enter
add
inc
mov
cltd
dec
sti
test
or
pop
push
in
inc
aam
and
shl
mov
ljmp
jo
shl
xor
inc
rorl
loope
adc
inc
mov
mov
std
aaa
inc
sub
xchg
sbb
add
dec
mov
pminub
loopne
fwait
lods
mov
sbb
mov
or
cmp
and
sub
mov
mov
fs
jle
test
out
xchg
jo
push
out
stc
xorb
stc
mov
sbbb
mov
imul
adc
add
cltd
insl
dec
sbb
das
mov
adc
cmpsb
pop
not
es
cli
scas
int3
push
daa
cld
stos
xchg
mov
jmp
sarb
mov
icebp
outsl
je
or
sbb
lahf
fsubl
imul
pop
jo
cli
jl
nop
sbb
adc
int
or
cli
rol
lret
sub
dec
scas
in
clc
popf
pushw
lods
mov
scas
cli
leave
in
xor
xor
inc
bound
jp
pop
js
cmp
cmp
aad
xchg
fistps
in
lret
mov
test
push
and
pop
movsl
inc
ret
pop
sbb
jbe
dec
adc
in
xchg
aam
aaa
sahf
mov
ret
sti
adc
inc
movsb
sub
jb
dec
mov
xchg
xor
ret
je
in
xlat
adc
sbb
dec
mov
jno
cmpsb
sti
out
inc
xor
hlt
push
jle
lret
jecxz
pop
sub
not
fmull
rcll
outsb
in
enter
cld
add
lea
xor
xchg
sbb
mov
mov
or
icebp
andl
mov
ja
je
mov
adc
dec
dec
icebp
scas
mov
jmp
imul
xchg
cmpl
hlt
mov
pop
adc
and
jge
or
stos
pop
test
shll
cmp
stos
idiv
std
xchg
adc
lret
pop
pushl
push
neg
mov
outsl
lcall
shr
fcom
sbbl
cmpsl
jns
mov
in
lods
dec
sub
int
adc
push
hlt
inc
jns
sbbb
paddb
idivl
lcall
sbb
fidivrl
lds
dec
adc
sbb
je
and
adc
clc
mov
fildl
ss
cmpb
fcoms
rcll
sub
cmp
mov
pop
in
or
fiaddl
daa
inc
mov
fwait
push
dec
pop
jns
adc
mov
cmp
jbe
mov
cmp
pop
rorl
or
icebp
leave
cmp
loope
in
clc
jae
or
ret
mov
lea
cmpsl
jmp
fsubrs
push
mov
out
andl
dec
loope
sbb
or
in
fcmovb
xchg
stc
movsb
cmp
mov
xor
stos
or
push
inc
mov
andl
into
cmp
and
fistps
inc
xlat
jmp
jb
adc
push
sub
adc
add
push
lods
xchg
inc
arpl
shl
enter
pop
popf
lods
inc
std
mov
pop
sti
cmp
mov
pop
mov
cwtl
in
xor
mov
clc
dec
aam
and
cld
dec
jne
cmpb
mov
insl
adc
adc
jnp
adc
sub
jl
xor
cmp
mov
sbbb
mov
aas
push
ja
test
adc
mov
mov
xchg
mov
sub
xor
insl
scas
bound
js
sti
sbb
mov
xor
pop
cltd
icebp
or
sbb
daa
cmp
int
mov
mov
or
pushf
in
rol
adcl
cli
and
xor
call
lock
sub
lods
mov
sbb
push
int
int
incb
sub
hlt
adc
sub
call
cmp
dec
adc
mov
je
jnp
pop
mov
jle
jnp
sub
jnp
fsubr
popa
aad
incb
int
sti
scas
xor
cmp
test
jecxz
mov
add
test
xor
lock
cmp
insl
cmp
imul
insb
ds
inc
lahf
or
in
mov
jo
jp
div
push
xchg
in
pop
lods
mov
pop
xchg
pop
aaa
stos
fwait
mov
jnp
mov
out
iret
ljmp
inc
cmp
dec
or
mov
xor
cmpsb
cmc
push
dec
or
daa
enter
enter
or
and
imul
and
jo
jae
inc
outsl
jmp
sub
xor
enter
mov
xlat
ja
jle
in
inc
mov
or
inc
daa
dec
scas
movsb
mov
cmp
pop
add
rolb
jmp
or
jb
sub
fwait
xorl
pop
frstor
mov
jae
int3
stc
push
js
out
inc
ja
test
pop
push
or
into
pushl
in
out
int
lods
leave
pop
movsl
test
std
fadds
mov
pop
std
lcall
into
and
ret
xor
sub
insb
sub
cmp
inc
sub
jecxz
clc
mov
mov
shl
and
jle
add
dec
or
xchg
sub
push
push
pop
popa
call
and
jmp
jg
stc
cmp
into
jno
test
pop
xlat
cmp
insl
decl
mov
pop
outsl
jnp
push
push
adc
inc
out
and
dec
in
clc
inc
mov
cs
cltd
sbb
xchg
pop
cmp
stc
je
xor
xchg
lock
adc
lods
dec
stos
data16
imul
test
pusha
jp
fcoml
inc
or
cmpsl
outsb
repnz
sbb
jns
out
sarl
rorb
cmp
out
test
xchg
push
xorb
ret
pop
jg
cmpsb
dec
test
or
jl
in
aaa
add
xchg
movsb
jp
inc
push
cmp
js
jmp
rolb
stos
cltd
data16
scas
adc
ljmp
pop
imul
es
cmp
xchg
inc
push
es
xchg
cli
push
or
out
mov
jbe
mov
cmc
adc
jo
sbb
shrb
mov
dec
gs
adc
mov
or
sbb
xchg
leave
cmp
mov
roll
and
ret
sub
sub
pop
pop
test
push
pop
jecxz
aad
bound
sub
jne
sub
lcall
jecxz
in
push
adc
lcall
cmp
pusha
movsl
fimull
out
sti
loop
sub
xchg
bound
aaa
dec
jg
or
pop
jae
inc
fcmovnb
iret
xchg
jnp
sbb
repz
emms
cmp
out
or
push
push
mov
pop
in
pop
int3
xchg
xchg
out
add
insl
jle
mov
test
adc
test
cmc
adc
xchg
ret
fldcw
jne
gs
inc
clc
iret
cmp
jo
mov
jl
lods
push
sar
divb
in
cmp
inc
or
inc
pop
movsl
push
jl
adc
outsb
icebp
fstps
push
repz
imul
ljmp
out
test
mov
movhps
jb
cmc
push
mov
into
mov
mov
or
push
xor
cmp
jp
incl
cmp
fnstcw
mov
test
or
mov
sbbl
add
arpl
cmp
push
repnz
cld
aas
lock
out
test
cmp
mov
loopne
addl
imul
int
sti
sbb
sub
fcomip
and
push
int3
bound
pushf
es
dec
ficomps
divl
cmpb
mov
in
nop
cmp
and
push
repz
cmp
mov
sub
xchg
sbbl
push
cmpl
sub
loopne
cs
imul
and
inc
add
enter
roll
std
fwait
cltd
mov
leave
add
das
movsl
xor
sub
popa
xchg
and
xchg
jmp
jne
jmp
test
out
push
mov
jecxz
cs
xor
mov
cmp
mov
push
or
stos
xchg
popf
jg
into
dec
shrl
scas
push
into
divb
adc
cmpsb
sarl
loope
mulb
adc
push
cmpsb
in
cmp
ficomps
cmpsb
data16
call
mov
mov
sarl
xchg
sbb
pop
pop
jecxz
das
sub
jne
push
mov
ret
and
add
pop
lea
jb
into
lods
lea
inc
and
inc
inc
arpl
idivl
cs
pop
aas
daa
jmp
and
icebp
lds
imul
pop
push
outsb
call
imul
inc
cmc
xor
and
popf
das
and
mov
pop
mov
sti
aam
mov
in
out
push
cmp
sbb
mov
scas
mov
pop
lret
mov
xchg
sahf
pop
cmp
cmc
shlb
cmpb
shl
sbb
or
sbb
sarb
pop
inc
pop
or
into
cmp
push
js
enter
sbbl
push
aaa
cmp
fstpl
test
lret
jo
xchg
repz
es
in
fcmovnbe
daa
ja
rcrl
dec
jbe
pusha
fistps
cmp
stos
xchg
sub
out
cmp
outsl
in
push
out
sub
sub
loop
add
in
mov
enter
xchg
pop
xchg
nop
imul
push
mov
lret
sbb
fdivl
dec
push
loop
fsubr
inc
adc
push
rcrl
aas
into
cld
inc
idivb
sbb
sub
jecxz
jge
and
insl
xor
pop
pop
and
pop
jmp
lahf
test
xor
or
into
in
loop
and
adc
add
scas
in
aam
push
or
loopne
cmp
push
ret
repz
mov
sbb
fstpt
dec
imul
imul
and
jg
xor
jp
xchg
divl
loop
iret
std
int3
imul
push
movsl
ja
jge
fadds
jp
out
fiaddl
loopne
daa
jae
mov
subl
les
rol
xor
adc
enter
sbb
sahf
cld
and
adc
push
mov
or
scas
out
ljmp
std
adc
les
in
setno
cs
inc
jne
jl
jg
into
mov
mov
pusha
jnp
jns
loopne
lods
sbb
fnstsw
or
icebp
repnz
mov
insb
dec
in
cs
mov
xor
les
push
or
sub
mov
mov
jecxz
rorl
add
cmpl
int
lahf
sbb
mov
addr16
push
div
loope
push
mov
jmp
cmp
cs
lds
pop
iret
ja
sbb
pop
jle
jno
andps
push
xchg
jg
adc
inc
stc
sbb
cmp
add
mov
addr16
dec
movsb
fcmovnb
es
test
push
xor
dec
aam
je
ja
shrb
jo
fst
lahf
gs
fdivs
mov
lcall
sbb
inc
push
stc
jmp
std
mov
sbb
cmp
rclb
xchg
addr16
je
in
repnz
fwait
pop
mov
notl
cmp
jmp
inc
hlt
movsl
iret
call
sub
aam
sub
dec
int3
fisubrl
mov
xlat
xor
mov
jae
mov
mov
fisttpl
jl
pop
sbb
pushf
dec
xchg
jo,pt
xchg
push
inc
mov
mov
sahf
mov
mov
sbb
aad
xchg
iret
jmp
lcall
add
shll
imul
pop
negl
xor
in
or
pop
inc
std
add
add
push
mov
adc
fisttpl
das
insl
mov
pushf
push
test
mov
fcompl
push
dec
hlt
in
inc
out
jne
leave
mov
popa
mov
stos
test
dec
jns
icebp
cmp
mov
inc
xchg
xor
lret
push
jnp
mov
fldl
push
cmc
add
mov
sub
dec
or
adc
mov
inc
pop
cmp
mov
push
fnsave
mov
adc
dec
std
in
xchg
inc
les
push
xor
cmpsb
sbb
mov
sbb
movsb
or
jno
and
imul
icebp
lret
mov
xor
push
dec
cmp
test
roll
inc
jecxz
loope
or
or
cmp
add
test
ja
push
push
or
xchg
shl
lahf
pop
mov
clc
xlat
aas
data16
and
sub
dec
xchg
data16
fcoml
mov
out
icebp
inc
sub
je
sti
mov
mov
nop
jmp
or
mov
adc
daa
inc
imull
outsb
stc
movsb
in
push
xor
xchg
aaa
stc
adc
cmp
out
and
call
add
xchg
dec
popa
and
dec
lret
add
mov
cmp
sub
or
push
and
jo
mov
add
les
push
insb
mov
out
cmpsb
fstpt
xlat
popa
in
mov
loopne
push
xor
sahf
jmp
pop
or
jb
jnp
sub
stos
lock
clc
iret
daa
push
mov
jge
cmpl
ret
or
adc
and
mov
and
stc
rol
jno
xchg
inc
xor
enter
lock
shlb
or
nop
mov
mov
pop
ftst
dec
adc
std
jecxz
cltd
std
add
bound
outsl
das
mov
ffree
inc
in
sub
scas
popf
leave
push
mov
mov
jecxz
add
idivb
lret
incb
aaa
iret
cmp
xor
add
add
les
cmp
and
call
imul
sub
movl
fisubs
pushf
js
mov
cmp
in
push
jmp
jp
sti
cmp
insb
icebp
add
pushf
in
dec
clc
jg
xor
jge
leave
mov
jecxz
push
sti
sbb
sbbb
test
and
mov
cmp
iret
js
mov
shll
addr16
adc
out
fimull
pop
push
xor
cwtl
dec
pop
nop
dec
imul
iret
xor
cli
into
lods
mov
es
adc
xor
mov
mov
mov
xchg
or
sub
cmp
nop
jp
in
das
cmp
mov
loop
mov
push
pop
add
sub
movsl
pushf
loop
and
push
jno
add
mov
daa
mov
jo
sti
inc
xlat
cmp
jnp
xchg
jle
dec
icebp
mov
mov
lret
js
and
ljmp
int3
int
jle
or
add
mov
mov
push
fildl
cwtl
inc
nop
or
jmp
sbb
ss
adc
push
fidivs
lea
xor
inc
lds
and
icebp
and
adc
xchg
or
pusha
gs
xchg
lods
and
cmpxchg
mov
cmp
xchg
fiaddl
xlat
mov
cmpsl
add
lods
iret
mov
pop
lods
mov
lahf
insl
movl
fld
fmuls
sti
jns
addr16
push
lret
jne
sahf
fisubs
and
lods
and
lret
adc
mov
fidivl
aas
adc
pop
fsubr
fcompl
icebp
mov
jns
fcomps
mov
call
int3
adc
in
sarb
push
or
push
xor
imul
cwtl
sbb
mov
dec
adc
jo
sub
sub
ja
jbe
ds
dec
adc
pop
repnz
das
or
pop
out
icebp
cs
insb
lock
mov
into
cmp
bound
cmp
or
sbb
mov
cltd
movsl
out
sbb
fistpll
mov
fnstenv
pusha
or
mov
mov
adc
imul
imul
or
call
shr
bound
add
inc
push
pusha
sub
ss
cld
mov
jnp
data16
sub
mov
cld
in
or
add
leave
out
mov
mov
fwait
mov
lods
jne
dec
adc
jae
mov
loopne
adc
mov
push
and
inc
add
adc
push
xchg
or
xlat
cmpb
lcall
outsl
pop
ja
inc
jb
aam
jmp
mov
sbb
in
aas
inc
out
push
jg
dec
nop
insl
jmp
dec
adc
mov
gs
cmp
fcom
in
cmp
dec
xor
fdivr
lret
xchg
fstps
add
lods
dec
dec
cmpsb
negb
xor
mov
cltd
xor
stos
loop
xor
pop
xchg
sbb
sub
out
cmp
cs
and
jb
mov
xchg
xchg
fisttpll
inc
sub
push
pushf
or
or
jbe
gs
jno
insb
jp
rclb
out
js
xchg
push
inc
push
cmp
out
or
test
clc
dec
sub
pop
out
in
sub
enter
push
sbb
hlt
or
int
imul
popa
cmpsb
mov
push
mov
jbe
dec
hlt
jnp
mul
inc
loop
and
jge
push
adc
subl
mov
sub
sbb
cmp
stc
rorb
test
inc
imul
jno
outsb
xchg
sub
cld
ret
movl
repz
sbb
sub
push
sbb
mov
mov
dec
adc
cmp
xchg
stos
and
cmc
in
mov
inc
xor
mov
fsubs
add
or
xchg
mov
cmp
fsub
lret
pop
out
out
loop
shlb
icebp
mov
cmpl
sub
pop
xchg
or
sbb
push
ja
dec
jno
lods
mov
mov
sbb
add
imul
rorl
leave
jo
rolb
jbe
lret
repz
mov
dec
arpl
sbb
out
fistpl
shll
shrb
ljmp
insl
push
xchg
add
les
jmp
gs
xor
lret
push
dec
mov
xchg
mov
mov
or
mov
pop
es
fistl
cmp
gs
hlt
push
imul
adc
mov
mov
xchg
cmp
and
push
int3
data16
xor
mov
adc
mov
mov
int3
rcrl
ret
sub
push
xor
jns
inc
repz
jmp
pop
xchg
sbbl
test
into
pop
cwtl
cwtl
cmpsb
in
std
arpl
jnp
mov
cmpsl
xchg
call
sub
jnp
sub
lea
inc
add
scas
es
nop
mov
sahf
stos
mov
stos
sar
clc
shlb
dec
push
pop
aad
cmc
in
gs
mov
decb
inc
jnp
sbb
xor
in
sbb
daa
dec
mov
push
push
pushf
imul
push
es
enter
stos
xchg
aas
imul
adc
or
pop
leave
inc
ficoms
xchg
push
push
arpl
jb
jns
sti
mov
or
sub
push
sbb
mov
arpl
sub
repz
lret
jmp
int
aad
mov
xor
mov
lcall
test
push
xor
lock
add
sbb
sbb
and
adcl
cs
mov
inc
cmpsb
xchg
dec
lahf
xchg
dec
divb
or
mov
jmp
dec
and
imul
cs
les
rolb
hlt
push
fimull
fmuls
mov
stos
ret
adc
mov
aad
adc
stc
push
sbb
or
push
lods
sub
push
out
aam
xchg
bnd
dec
and
sahf
sahf
xchg
imul
adc
mov
fucom
push
jp
jmp
fs
pop
xor
jnp
cmpsb
xchg
pop
sub
aam
xchg
inc
push
pop
xchg
in
inc
imul
aad
stc
fsubs
and
enter
not
xchg
mov
and
pop
test
sbb
outsb
xchg
inc
push
sub
es
xor
imul
or
mov
sti
pop
dec
mov
pop
je
cltd
push
or
add
es
mov
jecxz
mov
arpl
sub
sub
test
dec
xorl
repnz
testl
push
nop
roll
sbb
jbe
mov
mov
jnp
mov
lret
xchg
mov
rcrb
adc
std
mov
int
cmp
dec
and
mov
jae
jo
data16
inc
rorl
and
mov
mull
icebp
jns
pushf
cvtps2pi
dec
fsubrl
shlb
mov
les
dec
jle
inc
insl
fldcw
fmul
push
clc
pop
enter
mov
sarl
lods
imul
mov
inc
sub
adc
jl
and
ja
push
cmpsb
xchg
ljmp
adc
and
mov
mov
stc
fimull
mov
lcall
mov
divl
inc
sbb
outsb
pushf
stos
xchg
lahf
fdiv
push
push
adc
xor
and
mov
in
cmp
xchg
or
mov
test
and
xchg
jb
int3
aaa
stc
pop
inc
pushf
fdivl
inc
in
pause
mov
mov
cmpsl
bnd
adc
mov
psraw
cmp
mov
mov
dec
add
inc
ret
sarb
lods
sub
fwait
enter
xor
add
adc
into
leave
ret
inc
lahf
and
pop
fwait
repz
adc
sbb
mov
and
adc
int3
or
add
cmp
scas
jecxz
add
les
stc
adc
pop
sub
in
mov
pop
mov
dec
popa
ficoms
pusha
std
rorl
cs
inc
jnp
pop
stos
push
sbb
push
adc
daa
pop
add
pop
iret
sbb
in
lock
add
call
dec
or
mov
pop
sbb
sti
inc
or
jle
pop
jb
in
dec
add
enter
loope
mov
add
nop
orl
sub
jo
in
pop
test
cmp
repnz
testb
loop
test
inc
inc
aaa
imul
push
sub
pop
daa
or
shll
imul
bound
repnz
call
mov
xchg
dec
nop
push
popf
xor
daa
adc
inc
nop
cmp
mov
mov
cmp
outsb
addr16
mov
std
pop
inc
xchg
psllq
cs
rcrl
lods
lea
scas
mov
es
mov
mov
shl
dec
inc
data16
lds
cltd
sbb
sub
mov
addl
idivl
mov
je
rol
ja
push
aaa
lret
icebp
call
mov
imul
pop
and
std
ret
xor
clc
mov
cmpsl
cmp
cmp
adc
pop
cmpsb
or
fimuls
cmpl
xor
adc
dec
in
test
ss
add
fstl
leave
xor
out
mov
and
or
repz
sub
mov
push
push
shrb
clc
in
dec
pushf
sbb
cmc
movsl
mov
sub
sub
bound
out
mov
or
fisttps
iret
add
add
add
jecxz
sbb
dec
xchg
dec
sub
pop
loop
xor
lret
pop
xchg
sahf
loopne
rclb
and
popa
xchg
push
jne
xchg
rolb
pop
xor
pop
inc
cmp
pop
dec
mov
mov
pusha
jle
aaa
adc
xor
add
shrb
adc
lea
loop
mov
xchg
or
push
xchg
repnz
sbb
mov
gs
inc
enter
mov
sbb
and
mov
cmp
adc
test
clc
movsb
sti
jno
lcall
sbb
shrl
jmp
pop
add
das
arpl
insl
and
add
test
and
xor
pop
xchg
push
data16
mov
enter
sbb
pop
push
and
call
sub
les
sbb
mov
or
mov
or
sti
or
or
pop
xchg
and
xchg
cli
mov
std
out
es
xor
add
jecxz
dec
test
andl
pushf
xchg
scas
daa
inc
das
adc
arpl
sti
div
mov
sbb
sbb
rclb
cli
cmovl
fistl
push
dec
sub
frstor
idiv
inc
adc
inc
mov
pushf
sbb
mov
and
lret
ret
adc
sub
pop
imul
std
inc
mov
inc
dec
nop
add
mov
dec
jns
xchg
sbb
frstor
fcmovne
xchg
inc
and
loopne
ror
sbb
addb
pop
push
test
and
int
lret
sar
mov
mov
pusha
jne
mov
outsb
addr16
ret
mov
test
mov
cmp
out
stc
mov
sbbb
mov
notb
add
in
mov
fadds
sub
push
jge
fwait
imul
mov
or
call
cmovbe
scas
push
leave
cmpsl
or
data16
add
and
push
cmp
sub
ret
insb
jp
or
sti
xchg
push
mov
xchg
lods
enter
ret
movsl
mov
dec
inc
sti
and
fs
int
in
sbb
test
pop
inc
loop
sub
loop
pop
and
add
pop
fbstp
sbbb
fistl
es
int
mov
sarb
in
sbb
imul
inc
fidivrl
andb
mov
xor
loopne
mov
adc
sub
mov
dec
ja
shrb
inc
xchg
cmp
andb
adc
pop
inc
out
orl
cmp
inc
adc
outsl
enter
and
fistps
addr16
cli
cmpsb
jp
outsl
push
and
add
sub
inc
cld
mov
push
test
repz
pop
adc
js
ds
data16
jg
shr
popa
add
call
xor
scas
xchg
pushf
push
inc
add
xchg
and
cmp
out
in
push
sub
aad
mov
cvttps2pi
pop
out
and
cs
leave
xorl
sub
daa
add
add
fsubr
add
xor
fimull
imul
jg
push
dec
mov
rcl
dec
sbb
inc
and
sbb
add
jmp
cld
jge
xor
aam
mov
pop
mov
jg
mov
cmc
push
pop
popf
push
xlat
arpl
addr16
mov
mov
fs
cwtl
xor
mov
jae
and
mov
cmp
fcomps
jb
jecxz
ljmp
xchg
mov
lret
rcrb
ret
jns
sub
lcall
mov
or
or
adc
loop
fstps
ss
cwtl
jp
dec
test
dec
les
sub
add
add
jecxz
bound
sbb
int3
sub
into
ljmp
imul
cwtl
bound
push
or
or
mov
push
fldl2t
cwtl
xor
fsub
push
je
ud0
inc
shl
lds
add
imul
mov
mov
pop
test
and
insl
into
seto
pushf
loope
lahf
test
sar
das
jne
xor
and
popa
push
lds
cld
mov
jbe
out
push
scas
fwait
mov
mov
adc
or
int3
scas
leave
clc
sub
ret
cmp
xchg
or
ljmp
jmp
fsts
mov
and
repz
add
into
test
jns
add
pop
jmp
leave
arpl
je
jb
add
mov
fiaddl
xchg
insb
roll
dec
test
fcmovnb
scas
jmp
scas
dec
fisubrl
dec
mov
sbb
leave
mov
sub
pusha
out
ljmp
stos
mov
mov
cs
scas
push
aaa
or
dec
movsl
mov
sub
stos
adc
and
div
pop
arpl
jb
loop
pop
sub
push
jne
fs
rcr
nop
clc
insl
in
dec
clc
sbb
iret
inc
fldcw
mov
imul
ror
xlat
data16
inc
add
jge,pt
and
lret
sti
lock
sahf
movsb
push
jb
iret
mov
dec
ficoml
cld
loopne
jae
lods
and
rcll
cmpsl
stc
sub
scas
repz
jno
inc
std
jb
cs
mov
inc
xlat
inc
fistpll
repz
dec
mov
sub
jno
jle
mov
stc
push
mov
pop
adc
fisubl
fiaddl
nop
adc
movsb
aad
jg
aam
sbb
daa
fnstsw
out
sbb
out
push
cwtl
mov
xor
ja
mov
jle
ss
cmp
sbb
jae
jns
jnp
sub
lock
sub
mov
inc
lods
xor
out
sbb
test
or
cltd
pushf
add
sub
shlb
mov
jae
mov
lods
loop
and
ss
sti
int3
push
dec
xchg
int3
sub
out
mov
add
addr16
mov
in
push
cmp
push
outsb
cmp
pushf
mov
pushf
and
fwait
push
test
aad
int
sbb
clc
pop
push
fistpl
and
inc
fwait
push
pop
sti
fidivl
ja
sbbb
mov
mov
popa
push
adc
mov
fiadds
push
sahf
pop
cmp
rcr
dec
and
das
mov
adc
xor
xchg
xchg
and
imul
cli
xchg
xchg
cmp
mov
das
daa
pop
mov
jnp
sub
push
divb
add
xor
lcall
mov
mov
imul
jmp
dec
jbe
loop
fldenv
jo
mulb
jmp
lds
out
inc
insb
inc
frstor
pop
and
pop
jmp
icebp
fistl
and
sbb
mov
dec
test
pop
dec
lcall
test
leave
dec
dec
fidivs
xchg
out
sti
xchg
sbb
xchg
in
jecxz
mov
das
fs
in
jbe
mov
mov
mov
es
icebp
icebp
pop
hlt
jo
pop
xor
cmpb
loope
icebp
std
aad
or
push
cmp
cmp
call
iret
and
xor
lret
cs
inc
test
cmp
bound
xor
mov
hlt
pop
stc
loop
pop
cmp
adc
push
cld
mov
xchg
scas
mov
repz
imul
ljmp
repz
jmp
or
push
cmpsb
pop
pop
push
lods
xor
jecxz
outsb
loop
mov
scas
jl
mov
jno
scas
mov
repz
sub
cmp
scas
es
pop
jae
dec
cmc
cltd
adc
adc
in
imul
pop
dec
hlt
into
or
adc
out
es
cli
repnz
sbb
or
dec
jg
mov
dec
sub
loope
push
std
shlb
inc
insl
jecxz
mull
lret
shl
cs
jmp
cmp
sub
jno
nop
dec
cmc
sarl
or
popf
fwait
sbb
cmp
pop
dec
jae
rorl
mov
jmp
stos
leave
rcrl
addb
stc
gs
and
jnp
outsl
and
gs
inc
cs
aad
cmpsb
mov
lret
adc
sbb
pop
mov
int
dec
daa
add
lods
gs
mov
cs
mov
insb
popf
sarl
push
add
adc
add
out
push
js
pop
ret
adc
mov
add
mov
pusha
xchg
push
fdivs
pop
insl
pop
add
in
mov
leave
out
lret
nop
fistpll
mov
jp
sbb
call
mov
pop
movsb
pop
dec
incb
mov
stos
lods
test
push
jl
push
and
ss
shrl
fldt
int
mov
fdivrp
in
mov
lock
shr
fildl
xchg
xor
mov
or
sub
mov
rcrb
or
ds
fidivrl
lods
jo
or
cmp
fdivs
push
sub
or
sbb
mov
or
mov
adc
stos
aas
jne
inc
aas
imul
ljmp
movsb
and
popl
test
lea
dec
rorb
out
add
sbb
push
in
in
or
mov
and
aad
xor
sbb
fbld
fnstsw
sti
aam
pop
xchg
aas
lds
imul
aam
out
popf
sub
push
pop
dec
pop
test
mov
inc
loop
and
fbld
pop
outsb
dec
and
push
rcl
int3
jg
cld
iret
xchg
pop
shll
call
sarb
fistpll
aaa
dec
enter
mov
or
ss
ret
cmp
sub
fdiv
mov
adc
cmpsb
loopne
pop
ret
stc
cmpsb
std
mov
jg
out
jns
mov
sbb
xchg
in
mov
popf
xor
mov
lcall
cmp
or
mov
ret
clc
add
dec
xchg
pop
imul
dec
hlt
sub
adc
arpl
add
jns
mov
sbb
mov
dec
mov
xchg
loop
push
mov
sbb
repnz
ret
push
out
loope
mov
cwtl
jne
addr16
lods
imul
mov
pop
lahf
pop
aad
setl
push
jge
dec
test
es
mov
inc
lcall
ss
xchg
in
pop
mov
xchg
mov
xlat
or
outsb
clc
test
out
dec
jmp
sbb
adc
das
test
fidivl
or
adc
aam
fwait
insb
xchg
mov
popa
popa
repz
ds
fwait
xor
or
or
and
sub
test
push
jns
dec
push
testb
pop
ljmp
xchg
subb
jle
add
int3
into
clc
inc
jae
xchg
or
mov
jle
cmpb
add
jne
cli
dec
jge
ja
inc
pushf
jnp
cmp
stc
lret
loopne
fisttpll
mov
mov
sub
jae
dec
mov
fxch
loope
ficoml
je
movsb
push
mov
lahf
stos
lret
or
lret
xchg
jl
and
add
sbb
fwait
cs
xchg
mov
in
stc
jb
pop
inc
mov
jns
jg
mov
cmp
pop
add
fldenv
cltd
or
adc
adc
call
popa
mov
mull
lahf
push
dec
or
xchg
fcomps
and
out
repnz
push
inc
outsl
sub
inc
cld
push
cmp
cmpsb
pop
imul
sub
and
xor
vcomisd
push
push
inc
mov
add
jmp
jo
out
ret
icebp
and
lret
mov
test
pop
jmp
mov
dec
int
mov
adc
xorb
shrl
xchg
and
leave
push
orl
inc
fnstenv
and
sub
cmp
ljmp
mov
enter
mov
arpl
lods
rorb
loope
mov
xchg
enter
push
or
popa
adc
aas
pop
loopne
aaa
lods
jno
lods
loope
popf
sbb
sub
and
mov
flds
sbb
jmp
mov
xor
and
fucomip
xchg
push
fnstsw
push
cltd
mov
out
lock
xor
add
mov
mov
push
or
inc
stos
lods
lahf
push
adc
pop
or
loopne
or
iret
mov
lods
shlb
pop
testl
push
repnz
dec
push
mov
jge
push
push
sarl
std
flds
xchg
outsb
jnp
dec
jg
pop
adc
mov
ret
loopne
pop
xchg
pushf
repnz
mov
fmul
mov
cmpsl
sbb
mov
sub
jmp
sub
push
xchg
adcb
outsb
xchg
xor
push
outsl
sbb
xchg
adc
pop
ljmpw
out
mov
push
mov
iret
das
mov
dec
aad
pusha
addl
scas
xchg
mov
imul
cmp
lahf
std
xor
cmp
shlb
xchg
fistl
std
out
enter
ljmp
repz
loop
leave
jle
lods
xchg
out
and
jnp
mov
or
fs
push
push
inc
scas
imul
mov
push
xor
xchg
jmp
inc
xor
inc
addr16
rcrb
mov
jecxz
jnp
movsl
jp
in
inc
sbb
ja
jne
cmp
sub
add
inc
lea
adc
movsl
xchg
or
sub
jecxz
sbbl
scas
fs
or
pop
gs
shlb
or
pop
jo
sbb
cmp
add
int
movsb
lret
inc
sbb
sti
sub
fsqrt
push
pop
add
in
sub
inc
popf
or
lods
lods
imul
test
mov
call
pop
adc
push
mov
and
dec
and
stc
rorb
std
std
sti
notb
fimull
adc
inc
pop
add
cs
loop
gs
xchg
aam
bound
adc
sub
xor
movsb
xrelease
scas
daa
pusha
cmp
psllq
js
cli
paddsw
fistpl
jmp
or
je
lret
stos
orb
cmp
mov
mov
jge
xchg
mov
shrb
jle
xchg
cmpl
pop
dec
rol
test
shrb
inc
xchg
mov
jmp
cmp
inc
cli
enter
aas
nop
stos
and
inc
push
lret
jnp
pop
das
push
pop
in
icebp
cld
or
cmpsl
sbb
cmp
push
fwait
aas
test
test
mov
xchg
adc
push
test
push
lods
stc
pop
add
pop
mov
loope
stos
mov
pop
mov
sub
cmpsb
pop
dec
mov
push
das
movsl
addb
adc
push
cld
ljmp
sbbb
icebp
sub
jp
sbb
repz
push
cmpsb
cltd
ficomps
lock
ret
or
imul
scas
in
dec
cmp
insb
jbe
test
adc
aas
push
in
and
sahf
aad
mov
mov
in
sbb
inc
ret
in
push
mov
fldt
sarb
pusha
fwait
push
dec
push
ret
jne
adcb
dec
lock
pop
loopne
xchg
sbb
fildll
rorb
xor
sti
cmc
mov
xchg
sbb
cli
sub
adc
mov
sub
push
mov
popa
fwait
mov
lcall
and
jecxz
xchg
ljmp
fimull
loope
push
cmpb
filds
bound
push
sbb
xchg
int
dec
movsl
mov
cmp
fucomip
xor
push
and
adc
addr16
fstps
inc
roll
insb
cmp
jb
fistpl
add
mov
inc
or
add
mov
and
mov
scas
mov
fsubl
and
sub
rolb
mov
xchg
and
push
into
push
addr16
inc
pushl
jp
pop
fsubp
jo
xchg
jbe
fadd
or
popa
cmpsl
scas
test
leave
sarl
div
out
aad
cli
ss
fiadds
leave
test
insb
push
outsl
jnp
out
in
stos
cmp
cmp
mov
lahf
imul
loope
jbe
clts
sub
lahf
cld
ja
stos
fcoml
rorb
nop
sbb
xchg
adc
mov
fs
xchg
loopne
or
in
clc
enter
cld
dec
out
and
cltd
cwtl
mov
fld
mov
inc
into
stos
loop
adc
aaa
xchg
push
dec
adc
arpl
js
inc
fdivr
xchg
insb
je
dec
sbb
imul
push
jg
sbb
pop
adc
stos
daa
and
mov
pop
fcmovnb
fwait
mov
fimull
pop
fimull
cmpsb
js
xor
pop
xchg
or
pop
imul
cs
mov
sti
jge
data16
pop
arpl
mov
push
inc
jecxz
and
je
mov
int
setl
xor
mov
xchg
xor
push
cmp
xchg
or
sub
cltd
pushf
cltd
mov
mov
out
inc
and
xor
cltd
lcall
stc
cltd
sbb
add
test
dec
xchg
jns
fsubrl
xchg
or
loopne
sti
pop
jp
fwait
popf
loop
in
aaa
mov
shll
mov
mov
cmpsb
lahf
xchg
vmread
ja
nop
rorl
mov
pusha
xchg
cmp
lret
or
xor
call
xor
dec
xor
jg
inc
int3
mov
clc
or
jmp
addr16
inc
xor
mov
in
cmp
jbe
fwait
sub
es
pop
das
leave
pop
push
lods
cmc
add
adc
dec
mov
loopne
xchg
int3
cs
mov
or
fnstcw
xchg
sbb
imul
mov
xchg
data16
nop
test
jle
mov
inc
and
and
pop
sahf
rcl
jp
fistpll
sbb
gs
jg
sbb
loop
jl
mov
cmp
out
fs
add
sahf
xlat
jb
adc
xor
nop
xchg
inc
push
xor
imul
inc
dec
stos
fistps
dec
cli
scas
rclb
out
rcl
lods
hlt
pop
aam
mov
xchg
pusha
mov
fcoml
xchg
iret
sbb
add
push
jne
push
xchg
pop
and
inc
add
rcl
test
lds
sbb
push
dec
mov
sub
ret
int3
adc
jmp
clc
pop
push
nopl
cltd
mov
bound
cmc
not
xchg
jg
ds
mov
aam
mov
lods
das
lahf
test
dec
mov
cmp
push
add
pop
lret
out
xchg
dec
call
aad
cmp
inc
adc
and
xlat
dec
mov
add
lahf
pushf
pop
fs
das
push
jl
lea
inc
loopne
pop
mov
scas
push
shlb
fistpl
xor
or
out
data16
aam
imul
clc
cli
ret
pop
sbb
aam
or
and
jae
mov
orl
mov
push
roll
into
fistps
aam
outsl
jns
mov
iret
adc
xchg
mov
cmp
int
mov
hlt
rol
push
mov
push
or
imul
pop
adcb
xchg
push
mov
imul
je
mov
or
jns
push
inc
xchg
push
outsb
dec
and
inc
xchg
push
cs
and
xchg
jg
pop
fcoms
cwtl
mov
aam
mov
pop
out
in
ljmp
and
fcmovne
call
xor
inc
pop
dec
push
sahf
adc
and
lea
xor
mov
inc
and
es
mov
andl
jle
push
ret
adc
mov
cs
aaa
sbbb
push
stos
xor
jge
ret
fwait
scas
mov
repnz
pusha
movsl
neg
mov
jg
sbb
jp
adc
inc
imul
sbb
jp
loop
and
idivl
cld
xchg
add
stc
and
shlb
ljmp
and
xchg
ret
stos
into
pop
test
xchg
fwait
clc
outsl
mov
push
mov
fisttps
js
push
mov
adc
or
adc
test
dec
mov
inc
or
cltd
loope
add
inc
cmpsb
enter
inc
dec
mov
push
cli
lods
mov
in
and
stos
cmc
mov
xor
icebp
nop
and
or
pusha
scas
in
cmp
icebp
mov
xchg
imul
xlat
pop
or
cmpsl
and
push
jl
stos
dec
test
in
nop
dec
adc
xchg
mov
mov
lods
clc
mov
sbb
add
bound
loop
sbb
xor
scas
ss
aaa
jo
lea
adc
xor
mov
cli
cmp
repnz
xrelease
into
stos
mov
pop
jle
ficoml
mov
push
or
dec
xor
or
add
and
push
mov
sub
sbb
imul
es
mov
test
data16
jecxz
ret
popa
fnstcw
pushf
scas
ds
jne
or
pop
es
sub
and
jo
cmpsl
or
inc
cwtl
ss
push
sub
ljmp
sbb
mov
dec
jnp
add
cmp
xor
ret
testl
jmp
fstp
jns
fisubrl
ficompl
mov
ret
cltd
sub
lcall
xorl
mov
scas
adc
mov
xor
test
leave
into
bnd
mov
pop
push
es
add
stc
imul
push
sbb
daa
mov
and
sbb
lret
pop
aam
xor
push
int3
aad
dec
jl
popf
popf
sti
aas
pusha
pusha
adc
or
jecxz
inc
dec
rcr
mov
stos
adc
pop
mov
xchg
xlat
mov
sub
neg
sub
or
cmc
push
aam
fs
test
mov
dec
out
repnz
lods
cmpsb
xchg
jbe
jge
mov
sti
sub
lahf
sti
leave
in
mov
lret
xor
mov
ss
lea
xor
movsl
movsb
jl
dec
mov
cs
or
std
mov
js
es
xchg
pusha
clc
fwait
mov
adc
jb
rorl
andl
aam
sub
sbb
pop
inc
fst
sub
or
cli
and
test
sub
xchg
or
dec
mov
mov
add
lods
jne
repz
out
out
xchg
pop
mov
andl
cmpsl
test
xor
sub
hlt
xchg
ja
in
mov
fs
lds
sbb
inc
mov
sarb
add
mov
stos
cmp
test
push
and
dec
aas
xchg
mov
jns
orb
clc
popf
sub
mov
aam
loope
sbb
lahf
jmp
arpl
adc
fistpll
push
out
mov
xchg
push
pop
xchg
or
add
xlat
pop
test
jp
pop
sahf
pop
pop
cwtl
inc
or
mov
pop
sbb
push
shll
pop
push
popa
jmp
insl
cltd
push
dec
xor
sbb
aaa
ds
pusha
jno
insl
outsl
das
xchg
xchg
jge
mov
add
in
mov
dec
and
push
pop
cmp
mov
pop
pop
rorb
fcmovne
fstl
fisubrl
jle
inc
or
add
sub
mov
and
mov
cli
bound
jae
out
fildl
sub
ds
fdivrl
xchg
mov
xor
mov
mov
xor
hlt
jnp
fadds
sbb
dec
stos
mov
mov
pop
or
aas
sub
inc
call
and
sbb
or
xor
shr
cmp
mov
leave
pop
or
pusha
int3
fldenv
adc
or
jecxz
push
xchg
mov
inc
jae
add
mov
bnd
js
in
call
mov
sub
fcoms
pop
inc
dec
xor
je
mov
ficoml
sbb
test
mov
jbe
cmpsl
xchg
std
adc
jne
sub
mov
jnp
int3
jmp
rolb
jl
les
outsb
pop
inc
inc
pop
mov
popf
sub
and
int3
push
es
in
iret
push
inc
stos
ficoml
movsb
sbb
dec
pop
cltd
divb
pop
into
out
test
call
shll
mov
dec
add
aad
testl
rclb
ljmp
cli
jns
cmp
and
jmp
push
je
and
push
cmp
pop
repz
pop
mov
cld
pop
or
pop
ret
ja
push
fucomip
push
push
lcall
xchg
iret
in
add
and
mov
cmp
xlat
fldenv
fstpl
jg
sbb
pop
xlat
jnp
lds
mov
orl
or
enter
or
mov
or
mov
jno
fcmovnu
ljmp
mov
mov
repnz
xchg
jg
subl
mov
je
push
adc
insl
pop
out
dec
data16
inc
cli
lods
pushf
mov
fistpl
test
hlt
aaa
loopne
sbb
xlat
jle
cmp
cmpl
outsb
in
lret
orb
out
xchg
sbb
mov
stc
jb
or
ja
mov
aad
nop
fisttpl
cs
in
push
shr
mull
ljmp
insl
xchg
ficomps
int3
push
pusha
jp
add
pop
mov
sti
lahf
aad
mov
dec
iret
mov
shll
inc
outsb
icebp
push
add
xchg
in
jmp
mov
into
shll
inc
xrelease
aas
stos
stos
pop
mov
aas
daa
fdivl
jns
lods
test
and
addr16
in
inc
and
mov
jmp
jmp
ds
movsl
imul
dec
loop
lock
xor
popf
cmpsb
sub
add
push
cmpsl
cltd
std
sub
sbb
or
inc
fidivrs
repnz
dec
adc
pop
fwait
inc
outsl
cltd
pop
sti
pop
rolb
dec
das
sbb
rol
cld
cmpsb
xchg
pushw
fsubr
popa
dec
pop
lret
lret
jl
popf
jbe
scas
test
jae
xor
push
call
shlb
mov
sbb
jecxz
fistpll
insl
stos
jge
xor
pushf
xor
cwtl
adcl
jmp
gs
adc
inc
loop
gs
jno
lret
pop
mov
mov
lcall
repz
mov
js
orb
pop
mov
in
idivb
jbe
out
lea
mov
jnp
mov
pusha
xchg
stos
ljmp
in
ljmp
xchg
dec
adc
int3
ja
adc
mov
in
inc
add
sti
inc
rcrl
push
mov
xchg
and
sub
mov
into
dec
jecxz
cmp
mov
lea
sub
inc
mov
push
push
lcall
mov
push
test
jne
adc
leave
rcl
push
inc
or
mov
mov
test
lret
movsl
cmpsb
ss
leave
mov
and
inc
adc
add
mov
inc
pop
fwait
scas
mov
orb
fbld
das
and
xor
stos
outsb
out
fldl
mov
js
jl
and
inc
lcall
dec
rorb
and
test
jns
popa
jb
and
pop
repnz
fdivs
lods
jbe
clc
lea
pop
push
pop
iret
jns
lcall
mov
out
leave
enter
and
fildll
scas
pop
push
push
push
dec
xchg
push
jbe
jge,pt
das
add
add
dec
adc
jecxz
adc
pop
pop
xlat
xchg
xchg
not
fldcw
push
out
subl
push
adc
sbb
xchg
in
bound
inc
inc
inc
adc
cld
inc
or
lea
mov
jb,pt
notl
mov
sbb
and
ss
lcall
fwait
xor
sahf
out
dec
jo
mov
add
mov
inc
fs
scas
mov
fnsave
xchg
jge
inc
jbe
xchg
pop
adc
xchg
or
stos
and
jnp
or
jns
aas
xchg
popa
xchg
lods
cli
adc
nop
jae
movsl
adc
sbb
test
fdivr
divps
pop
cli
cld
xor
xchg
jg
and
ljmp
lahf
nop
mov
adc
popf
testb
leave
sbb
jne
aad
dec
add
xor
sub
aas
mov
insb
adc
movsl
xchg
aad
nop
popa
ret
adc
pop
aas
mov
rolb
and
adc
lock
mov
shl
mov
fnclex
hlt
xor
or
je
push
sbb
ja
xchg
jb
out
test
add
aas
mov
add
movsb
push
lods
lret
xor
clc
pushf
cltd
shll
add
fildll
scas
jp
jae
cmc
jo
lahf
jnp
or
xchg
imul
mov
sbb
cmpsl
cmp
into
push
das
idivb
push
mov
js
insb
xor
xor
stc
stos
sahf
repz
stos
test
sbb
push
mov
aas
dec
pop
push
sub
bound
mov
xchg
js
inc
rcrl
sub
jle
mov
jbe
cli
dec
sbb
jo
adc
cmp
cld
push
mov
sub
fdivrp
and
mov
imul
adc
push
inc
jp
out
cli
adc
ja
inc
jb
sub
mov
cmp
ja
imul
dec
adc
push
out
js
xchg
sub
aas
xchg
add
mov
and
xor
enter
or
adc
cmp
int3
inc
arpl
arpl
dec
pop
push
or
mov
xor
js
sbb
imul
push
decl
in
push
sbb
sub
scas
aam
testl
nop
jecxz
cmp
mov
adc
xchg
xchg
adc
popa
cwtl
cmp
xor
ss
insl
push
test
pop
mov
mov
aaa
js
clc
pop
dec
xchg
insl
inc
dec
push
stos
lea
aad
xor
or
aam
pop
popa
add
inc
mov
popf
mov
ljmp
push
in
sbb
dec
stos
inc
stos
jae
xor
cwtl
jge
lods
mov
pop
or
inc
xor
push
adc
cwtl
jae
dec
insl
sbb
inc
orb
clc
pop
sti
sbb
fsubrs
jg
cwtl
mov
cld
aad
cmp
popf
cmp
fwait
push
sbbl
rorl
lret
out
sub
sahf
cltd
add
adc
ret
fcomps
in
imul
cld
push
jne
jg
insb
inc
orb
fldenv
loop
push
jmp
inc
and
jb
andnps
push
test
mov
insl
mov
inc
sub
mov
js
lock
pop
and
repz
int
pop
cmpsb
cmp
int3
out
mov
mov
sub
xor
call
dec
das
pop
loop
cmc
sbb
push
pop
stc
loop
pop
mov
adc
push
fsubrs
pop
popa
dec
jae
mov
sbb
mov
cmp
or
mov
repz
int
fistpll
dec
dec
cmp
clc
push
cmpsb
sub
or
arpl
mov
sbb
add
push
lods
mov
mov
fucomi
push
outsb
xor
mov
lea
int
push
mov
fstpl
xor
xchg
fucomip
push
test
xchg
xchg
or
int3
lahf
mov
jge
fistl
mov
pop
aas
addb
push
test
pop
rolb
out
mov
xchg
mov
lret
pop
sbb
xor
sahf
sub
xorl
hlt
testl
jnp
pop
adc
push
loope
gs
sub
stos
stos
xor
adc
mov
dec
cmc
nop
cmp
pop
lods
pushf
cs
mov
add
std
iret
ret
adc
sbb
shl
sub
cwtl
lds
incl
mov
in
dec
cmpsb
lea
out
daa
jne
dec
mov
xchg
dec
lds
mov
cmp
imul
pushf
mov
out
fstl
add
nop
das
xchg
insb
cli
xchg
sbb
push
xchg
inc
add
int
aaa
call
jmp
loope
jbe
or
imul
aam
sub
dec
pop
aam
cmp
push
les
xor
jns
loop
sub
in
scas
cmpsw
sbb
or
ss
inc
pop
pop
xchg
push
push
mov
xchg
out
fildll
pop
mov
xor
mov
lds
lea
dec
mov
gs
aad
mov
xacquire
aaa
sahf
frstor
in
mov
dec
lret
test
jg
xor
jecxz
cmp
aam
shl
and
mov
shlb
inc
mov
insb
xchg
insb
inc
mov
xlat
dec
mov
adc
bound
jp
xor
daa
push
add
jne
js
rclb
js
inc
mov
inc
push
jb
mov
mov
pop
or
in
in
sbb
add
mov
addl
dec
mov
gs
jae
ja
push
std
out
mov
daa
mov
cli
stos
leave
push
jge
roll
inc
data16
and
ljmp
lods
rorl
pop
and
fstenv
aad
mov
invd
lods
stos
xchg
lea
es
rclb
in
test
sbb
adcb
jb
mov
xor
adc
in
cmp
loop
aas
jae
mov
inc
mov
lcall
std
jbe
mov
fnsave
nop
rolb
mov
orb
fs
ds
addr16
lret
pushf
jb
and
imul
fldenv
dec
out
adc
andb
loop
xchg
sbbb
xor
adc
pushf
ret
test
je
into
mov
xchg
insb
popf
sub
out
notl
mov
sub
jns
jg
mov
or
adc
lcall
mov
adc
sub
lcall
out
fcoms
hlt
fisttps
pop
or
cmc
stc
adc
mov
mov
je
adc
cli
and
inc
lcall
nop
jno
mov
cmc
and
adc
mov
ljmp
ret
or
push
mov
add
mov
or
je
mov
insb
push
mov
jno
les
xchg
daa
movsl
into
mov
sub
imul
mov
stos
push
add
rorl
sahf
fwait
inc
leave
dec
rcr
mov
mov
ret
inc
push
rcll
sbb
adc
dec
mov
jg
mov
loop
decl
fiaddl
adc
sub
jecxz
popa
jmp
push
xchg
lods
jno
jg
sub
rcrb
mov
cmp
fdivr
shld
adc
inc
xchg
loop
popa
leave
sbb
mov
movsl
cmpsb
daa
in
aaa
push
dec
mov
sbbl
pop
inc
iret
pop
xchg
scas
int3
in
outsb
xor
sub
and
popf
cltd
out
add
loop
and
mov
cmp
loopne
xchg
jno
fadds
sub
stos
leave
cmc
daa
xor
push
aas
xlat
adc
imul
aas
xchg
jmp
gs
dec
pop
or
push
mov
std
ret
rorb
add
in
ror
enter
fcmovb
sahf
das
lock
pmulhuw
jno
ljmp
xchg
hlt
pop
popa
sar
jb
xor
out
push
mov
mov
enter
jnp
pop
fsubs
jo
pop
movsl
shl
cltd
loop
mov
cmp
scas
xchg
push
daa
or
int
ret
xor
ret
fstps
mov
xchg
ja
mov
mov
jne
subl
sub
in
pop
icebp
std
xor
and
xlat
jecxz
mov
iret
mov
adc
push
pop
subl
pop
insl
clc
sti
outsl
iret
int3
mov
jg
ss
and
sbb
push
xlat
std
mov
xlat
xor
sbb
sub
sub
enter
cwtl
xor
sbb
add
push
test
arpl
pop
pop
adc
xlat
adcl
nop
cltd
cltd
or
adc
les
xchg
fldl2e
fisubrs
adc
clc
jb
ss
ds
gs
mov
or
insl
leave
sarb
pushf
mov
adc
dec
mull
xchg
pop
cmp
inc
sbb
xor
cmp
dec
scas
addr16
popa
imul
into
ss
out
jmp
jle
das
adc
and
or
mov
pop
and
stc
and
inc
outsl
fdivrp
test
push
push
sbb
sbb
lret
push
test
xchg
push
jl
test
out
popa
adc
cmp
insl
mov
mov
mov
cli
mov
mov
jp
test
jmp
pop
fnstsw
mov
insl
mov
mov
es
inc
cwtl
insb
or
cld
adc
fcomps
cmpsl
or
lret
js
jp
mov
movsl
dec
dec
or
or
and
xchg
mov
or
and
or
enter
push
aam
rcrb
sbb
lods
movsb
jb
jle
or
push
sub
dec
stc
cmp
sbbl
inc
mov
imul
add
mov
out
and
cmpsb
fdivrl
rcrb
pop
iret
mov
bound
sar
arpl
rcr
xchg
in
shrb
inc
rorl
push
mov
sbb
push
and
out
fwait
fildll
dec
sbb
mov
scas
mov
fcomi
mov
shrl
pop
jns
and
scas
cmpsb
pop
stos
mov
movsl
cmc
ja
sub
mov
inc
jmp
jp
cwtl
pusha
shrb
ret
mov
cmp
mov
lods
mov
lahf
loope
jbe
jae
adcb
cmpsl
and
and
push
cmp
jbe,pn
jle
mov
xlat
push
into
fisttps
jnp
rol
inc
or
cs
mov
jb
sahf
dec
jbe
in
cmpsl
or
call
mov
dec
mov
xchg
push
ljmp
mov
mov
lret
xor
jp
int3
call
rcr
rcrb
sbb
or
lret
sub
loopne
inc
pop
daa
lret
iret
sbb
inc
fiadds
ja
je
rorb
insl
pop
add
insb
cltd
mov
add
aaa
lds
popa
aas
cmp
pop
mov
and
push
inc
push
push
mov
pusha
jp
lea
jge
jno
cld
out
addr16
cs
andb
popf
inc
int3
adc
or
push
in
push
cltd
decl
sub
or
jne
add
add
orl
mov
xor
int
imul
pop
movswl
sub
aad
mov
sbb
pop
inc
nop
lret
idivb
pop
dec
push
dec
or
gs
adc
jne
js
leave
mov
test
or
lcall
int
and
and
lock
cwtl
fwait
cmp
in
xlat
push
dec
cld
push
jno
aaa
mov
divb
jns
imul
jbe,pn
cmp
mov
insb
and
pop
movsb
xchg
ret
ss
add
fnstcw
push
ss
cmp
das
and
and
call
iret
jecxz
scas
mov
dec
mov
fidivs
sub
insl
cmp
int
sub
sbb
xchg
add
push
dec
sub
cmp
cmpsl
add
sahf
xchg
adc
jns
ss
mov
push
test
fidivrl
cmp
add
loopne
daa
xchg
jae
jb
lcall
dec
aad
push
and
mov
push
fs
dec
jo
pop
mov
push
jo
jnp
aam
lods
pop
movsw
shl
or
sbb
mov
outsb
push
bound
ljmp
cltd
lret
xchg
outsl
adc
push
jbe
push
insl
xchg
dec
mov
test
xchg
adc
popf
mov
push
popf
rorb
loop
jno
ret
sbb
fidivrl
jmp
in
add
jne
adc
fisubl
jne
subb
mov
dec
sbb
test
jns
movsl
pop
dec
scas
push
mov
xchg
jbe
cmpsb
aaa
or
and
das
mov
xlat
jmp
sahf
inc
pop
xor
dec
cmc
cltd
fimull
adc
add
hlt
xor
imul
jae
adc
enter
push
xchg
scas
repnz
and
scas
scas
xchg
out
repnz
inc
jl
mov
ret
sbb
jmp
or
and
adc
aam
scas
movsb
push
inc
xorl
or
lret
xchg
pop
sbb
push
fdivrs
cmpb
add
push
dec
add
push
push
lods
mov
mov
inc
mov
into
stos
mov
jp
sub
push
lods
aas
sub
mov
mov
out
pusha
sub
inc
repz
push
push
mov
cmpsl
leave
cmp
hlt
dec
iret
adc
dec
stos
mov
jge
jecxz
dec
insb
jno
sbb
nop
fcoml
out
mov
rcll
insl
insb
stos
inc
sub
push
out
daa
adc
loope
pop
pop
inc
sbbb
in
mov
push
ja
or
xor
movsl
inc
pop
push
add
jmp
adcl
sbb
pop
sbb
cwtl
outsb
dec
and
rorb
dec
jb
call
jmp
xorps
lret
jo
mov
cmp
aad
inc
test
inc
or
mov
cmpsb
pop
and
mov
mov
push
stc
cmpsb
notl
and
xchg
incb
jb
stos
xchg
or
aam
or
sub
popa
movsb
jb
pop
adcl
push
lock
loopne
stos
push
inc
arpl
adcb
icebp
pop
mov
jne
dec
add
ljmp
neg
add
loopne
cmp
pop
cld
sub
jo
fidivrs
lret
in
mov
pop
sbb
and
outsb
nop
stos
pop
inc
push
xor
mov
mov
cmpsl
mov
outsb
cmpsb
push
test
scas
jb
add
jne
int
lret
lcall
in
and
int
test
out
adc
push
imulb
xor
cmp
sbb
adc
mov
push
xorb
test
cmpsb
and
fbld
and
outsb
repz
scas
ss
rcrb
loopne
xor
and
faddl
daa
out
out
pop
gs
jne
or
jae
data16
add
test
in
in
ret
loopne
xchg
lea
in
sbb
popa
or
dec
sbb
xchg
adc
pop
in
icebp
int3
mov
dec
sbb
sub
jle
dec
in
divb
mov
ljmp
fsubr
cli
mov
daa
pop
mov
jnp
or
test
sbb
push
inc
mov
xchg
inc
jp
sbb
popa
mov
gs
sub
mov
pop
sahf
sub
mov
sbb
ljmp
mov
push
xchg
fs
mov
dec
cmp
mov
js
insl
push
stc
iret
loope
imul
mov
and
xor
int3
lcall
jge
fidivs
ret
imul
bound
hlt
xchg
sbb
movsb
mov
mov
out
mov
lock
and
xchg
jl
push
leave
xor
fldenv
or
jns
imul
lock
mov
out
jge
mov
stos
or
loopne
callw
xlat
mov
and
arpl
out
mov
lock
in
push
jo
pop
rcl
sbb
pop
mov
and
adc
insb
lret
push
cltd
and
or
push
or
nop
pusha
xchg
push
ss
push
jecxz
add
out
sbb
mov
movsb
rorb
xchg
mov
sbb
cld
adc
shll
push
je
mov
inc
fisubs
jns
mov
pop
int3
in
les
cmp
sti
push
rcrb
and
mov
aas
pop
gs
mov
push
fcomps
into
mov
and
adc
xor
pop
pop
xchg
in
xlat
lret
sbb
inc
cmpsl
xchg
pop
pop
lcall
cld
pop
cli
out
in
movsl
xor
dec
pop
mov
popf
dec
mov
xorl
jp
adc
or
xchg
jne
jbe
mov
adcb
in
jae
loop
cmp
test
sbb
jbe
pushl
popf
pushf
inc
inc
sbb
or
fsubl
sub
cmp
fistps
out
xchg
stc
jne
inc
inc
pop
push
lds
xor
mov
jbe
push
mov
mov
in
subb
pop
fbld
adc
lret
and
int
ljmp
push
xacquire
call
dec
fmull
pushf
lret
xchg
cmp
sti
loope
cmp
cmp
enter
icebp
xchg
test
xchg
cmp
jnp
xchg
cmpsb
jge
popf
fadd
cmp
xor
xchg
dec
jmp
js
lcall
inc
push
mov
add
add
xor
in
mov
test
cwtl
int
pusha
add
mov
push
adc
jb
sti
stos
or
or
inc
mov
test
inc
dec
inc
mov
and
flds
push
out
loop
std
jno
mov
mov
mov
xchg
jne
dec
jge
mov
leave
cmp
pushf
mov
imul
stc
mov
xrelease
lret
push
or
pop
xchg
xor
nop
lret
xorb
addr16
jmp
pop
js
outsl
lods
jl
outsb
adc
imul
cli
jb
mov
mov
pop
jmp
shlb
adc
jmp
jmp
call
into
into
xor
push
cli
add
gs
jae
dec
mov
insb
push
dec
add
and
int
inc
pop
filds
aaa
rcrb
fnstcw
in
mov
out
imul
lods
cmp
xor
mov
jbe
cmc
addr16
mov
xchg
fsubl
or
adc
add
push
mov
scas
mov
fisttpl
cmp
and
mov
or
dec
push
in
les
adc
ljmp
fists
add
xlat
sbb
add
cmp
pop
mov
mov
cmp
sub
pop
popf
jns
push
mov
mov
pop
sub
insb
add
pop
out
mov
leave
ret
leave
fs
push
mov
int
in
setp
push
mov
jecxz
loope
dec
xor
int
mov
and
dec
outsb
aaa
push
push
xor
outsb
xor
adc
into
mov
fdivrs
ret
inc
fdivrs
push
and
sub
mov
mov
popf
ds
add
mov
out
add
lret
jecxz
lret
clc
mov
add
idivb
jno
mov
fisttps
call
sbbl
push
mov
pop
das
dec
push
clc
sbb
cmpsb
les
xchg
cs
testb
dec
and
ret
dec
aad
jl
push
incl
icebp
sub
mov
lret
add
cmpsb
aam
mov
inc
andl
into
aam
mov
lea
insb
or
call
leave
mov
push
sbb
stos
and
push
add
dec
inc
adc
and
test
jp
test
sbbl
cmp
mov
jae
xchg
or
pop
lcall
push
push
mov
cmp
cltd
nop
pop
or
int
imul
jae
adc
negl
adc
fldenv
mov
clc
xorps
adc
js
mov
movsl
pop
xchg
pop
aad
sub
or
or
inc
adc
nop
mov
xor
jo
push
push
pushf
sub
and
mov
sbb
lods
stc
enter
out
xchg
mov
pop
push
mov
pushf
xor
shl
lret
lds
push
xchg
and
or
or
imul
inc
mov
scas
cs
jnp
dec
pop
mov
and
sbb
insb
fstps
rclb
pusha
enter
inc
pop
lahf
aad
divb
pusha
xchg
sbb
aam
cmc
loope
andl
int3
stc
inc
lds
pop
mov
push
ffree
cwtl
xor
cvttps2pi
pop
decb
pop
inc
aaa
pushf
adc
daa
iret
pop
lods
pop
xor
and
xchg
in
dec
mov
mov
and
jg
push
shlb
and
mov
mov
icebp
inc
push
or
push
jae
push
pop
mov
and
les
push
jp
inc
push
lods
mov
mov
push
cmp
xchg
push
sub
std
fidivrs
cmpl
xor
test
movsl
pop
jge
lods
cmpsb
mov
jbe
mov
sub
mov
push
pushf
mov
jae
jle
or
outsb
addr16
mov
and
xchg
in
xchg
pop
mov
sbb
xor
jl
mov
sbb
imul
lock
int
sti
sbb
and
or
jne
xor
mov
mov
pusha
or
icebp
dec
lods
jae
xchg
daa
std
aas
lea
or
lret
js
fcoml
sbb
fcmovne
or
ss
cli
out
cs
mov
stc
popf
jp
popf
xorl
sub
nop
lahf
iret
ljmp
inc
xchg
jmp
dec
mov
fwait
lea
inc
pop
cmpsl
lods
push
cmp
fistpll
adc
jno
inc
ret
dec
sbbb
les
mov
cmp
xchg
rol
sbb
pushf
add
clc
push
lock
out
lea
xchg
dec
mov
mov
push
out
mov
pop
movsb
dec
jmp
mov
rolb
xchg
rclb
jbe
add
dec
jmp
push
xchg
repnz
pop
push
mov
inc
add
adcl
incb
push
leave
decl
fnstenv
in
int
pop
bound
mov
sub
inc
inc
in
sbb
dec
popf
mov
pop
outsl
mov
mov
ret
or
int
xlat
mov
lahf
cs
xor
cld
jbe
in
dec
xor
mov
xchg
inc
adc
jno
jp
add
out
out
das
fwait
mov
mov
push
push
test
shlb
div
push
or
das
jb
pusha
mov
fidivrs
jmp
aam
xor
ja
mov
inc
cmp
in
xchg
cmpsb
adc
fcmove
imul
sbb
pop
pop
pop
in
inc
pop
xor
inc
mov
pop
xor
dec
and
jg
arpl
orl
adc
pusha
mov
bound
jns
pusha
pop
add
jnp
mov
data16
inc
push
push
shlb
pushl
pusha
hlt
sub
cmp
adc
push
pop
sub
shll
jae
in
mov
mov
mov
add
decl
out
pushl
daa
lahf
push
movsl
hlt
xor
fdivrl
add
int
jnp
in
mov
dec
movsl
push
mov
aad
mov
imul
dec
fs
xor
mov
sti
pushf
mov
bound
in
insl
push
insb
mov
mov
cltd
sbb
stos
push
sub
jns
cmp
or
loopne
mov
mov
push
std
and
lcall
add
clc
pop
jns
lcall
stc
mov
cs
and
adc
loopne
adcb
aaa
std
incb
imul
mov
pop
or
in
mov
pop
dec
test
cmpsl
stos
xchg
test
adc
hlt
xchg
or
test
je
or
pop
scas
mov
adc
add
in
xlat
or
dec
lss
add
inc
jae
out
popf
adcb
or
lods
adc
pop
ret
popf
in
push
xchg
imul
in
or
lods
cmp
push
inc
sub
daa
daa
adc
repz
xchg
roll
outsl
sbb
sarl
push
jae
inc
in
sub
cs
lods
pop
imul
je
sbb
dec
push
jb
aad
mov
lods
mov
cmp
repz
lcall
mov
push
push
pop
pop
mov
or
mov
inc
xorl
sbb
mov
ret
add
lea
sub
ja
scas
roll
push
add
mov
int3
fldl2t
aad
pop
adc
inc
or
xchg
add
into
pop
add
clc
sbb
sbb
push
pushf
ljmp
mov
imull
and
cmp
negl
xor
xor
pop
push
mov
fcoms
ret
icebp
pop
mov
movsb
xchg
jns
push
popa
or
mov
repnz
call
insl
adc
insb
xchg
fadd
xor
xor
and
in
jb
loopne
ds
sbb
cld
mov
subb
mov
inc
lahf
sarl
pop
inc
xchg
push
adc
push
movsl
and
and
mov
sbb
sub
cwtl
lret
imul
push
sub
adc
dec
cltd
imul
sub
add
add
cmp
mov
jmp
movsl
and
dec
cmc
hlt
pop
mov
lea
add
cmp
int3
imul
push
jb
pop
sub
fnstsw
mov
ror
add
fadds
das
imul
ja
mov
lods
inc
jb
test
mulb
je
ret
mov
repz
inc
imul
aas
hlt
popa
pop
push
jne
or
cmovb
sub
adc
cmp
popf
test
cmpsl
and
xchg
xor
jg
mov
insl
or
mov
dec
jnp
pop
loop
out
dec
cmp
xchg
int
jmp
sbb
and
or
subb
xor
xor
mov
lds
adc
sbb
and
mov
lods
sub
aad
addb
insb
pop
cmpsl
mov
lahf
imul
outsb
in
xor
mov
fsubrs
push
addr16
out
rolb
dec
stc
xchg
xor
cmpsl
mov
test
pop
jmp
ss
xor
insl
mov
js
dec
psrlw
out
mov
leave
rcll
shrb
or
movsb
jecxz
push
jmp
in
inc
dec
pop
fcomi
lea
adc
sbb
divps
mov
sub
cmpsl
pushf
dec
fucomip
fnsave
ss
mov
jmp
mov
testl
enter
jl
cmpsl
cmpsb
out
imul
cmp
cmp
fdivr
in
fdiv
push
repz
lods
cld
pop
xor
jns
orl
xor
mov
lods
cmp
leave
mov
movsb
dec
xorl
loop
mov
jl
repz
xlat
jae
fmuls
jns
imul
rclb
pop
and
sbb
adc
dec
testl
add
icebp
lcall
pop
fidivs
insb
jmp
and
ror
fucomip
cmpsb
std
xlat
les
mov
xor
mov
pushf
dec
jno
and
xor
xlat
test
mov
or
lcall
jmp
sbb
cmpsb
out
mov
loopne
jecxz
faddl
cld
pop
adc
enter
dec
lcall
adc
sbb
cmp
shl
pop
sub
lret
leave
imul
frstor
jbe
mov
or
mov
rolb
mov
jno
cmp
pop
scas
lcall
lods
pop
outsl
es
and
hlt
mov
popa
arpl
lds
data16
pop
scas
fwait
lock
iret
ds
xchg
movsb
stos
nop
dec
imul
aad
mov
push
adc
jns
jno
cld
mov
fistpl
shrl
lahf
add
mov
pushl
nop
xor
incb
addl
inc
push
clc
push
inc
jbe
inc
add
lock
mov
and
shl
add
aas
mov
xor
xchg
scas
pop
add
xchg
popf
cltd
lcall
inc
mov
in
std
test
imul
imul
and
mov
sbb
insb
mov
cwtl
dec
jge
leave
cmp
mov
cmp
sub
mov
gs
les
mov
mov
push
add
icebp
pop
fsqrt
setns
add
sbb
mov
inc
sub
test
test
out
fwait
add
push
bound
adc
mov
imul
in
jp
ret
mov
lock
inc
mov
fwait
in
int
fmuls
jg
pop
dec
or
dec
sub
sti
and
mov
mov
enter
sbb
lds
imul
or
adc
ljmp
pop
daa
dec
add
push
xor
negl
push
cli
mov
rep
ja
or
mov
mov
lahf
pop
shll
jns
cmpsb
push
pop
inc
xchg
jbe
jmp
sbb
or
jecxz
or
push
or
push
add
mov
adc
sarl
fdiv
arpl
dec
add
gs
pop
dec
fistl
push
push
outsl
pop
repz
das
mov
shll
jbe
push
lret
jmp
mov
mov
movsb
lods
dec
push
adc
fstpl
xor
aaa
movsb
sub
or
and
shlb
xchg
sub
sub
cmp
ret
cmc
xor
cmp
jl
push
popa
mov
cwtl
jae
adc
sub
fidivl
adc
es
adc
adcl
das
test
mov
std
out
pushf
imul
mov
mov
enter
xchg
mov
xchg
add
jge
call
ss
jae
jne
push
insl
inc
adc
movsl
xlat
cmpsl
in
insb
lds
lahf
and
push
jp
xor
pop
das
rolb
daa
mov
scas
arpl
mov
enter
fdivrs
call
sbb
cmp
pop
jl
xor
fiaddl
loopne
pusha
loop
sbb
sarb
add
dec
mov
aaa
inc
fwait
int3
in
xchg
int3
inc
out
sub
xchg
inc
test
mov
jp
dec
test
aas
mov
aam
out
jle
mov
add
popf
fstl
dec
arpl
lock
inc
sub
lcall
sub
popa
frstor
xor
rorl
jnp
mov
push
test
xorl
repnz
sub
fistl
hlt
imul
and
add
mov
loop
lods
in
add
insb
add
adc
jmp
or
xchg
jle
test
or
xor
repz
dec
fstl
lahf
jmp
lds
inc
out
ret
in
cld
xor
fisubrs
jnp
cmc
adc
stos
xchg
xor
in
je
pop
jmp
lret
xchg
xor
sbb
mov
imul
loop
insb
andl
loopne
push
pop
stos
jo
dec
popf
mov
push
stc
sbb
push
xchg
jno
xchg
ljmp
mov
pop
xchg
jno
mov
jno
dec
jne
adc
push
insl
jae
ds
inc
mov
sbb
in
mov
dec
iret
add
xor
pop
clc
push
mov
shlb
jno
mov
add
cmp
repz
iret
jns
mov
push
inc
mov
or
sbb
sub
jl
cmpsb
mov
pop
jns
pushf
cmpsb
jbe
xor
fldenv
popf
sub
mov
mov
imul
cmp
insl
in
lock
add
mov
loopne
mov
aas
ds
lods
mov
ret
adcb
cwtl
mov
pop
nop
push
lods
sub
sub
sub
and
and
out
mov
fcoms
mov
and
mov
pop
mov
dec
inc
inc
call
lods
xor
push
gs
ljmp
jne
popf
imul
dec
adcl
popf
inc
dec
jnp
push
mov
jmp
adc
pop
inc
xchg
lds
ljmp
dec
stos
xor
cld
inc
adc
inc
inc
sub
push
icebp
nop
sub
fists
pop
mov
adc
add
cmp
negl
out
loopne
mov
rcrb
dec
pop
es
sub
into
icebp
inc
xlat
leave
scas
stc
pop
bound
sub
or
dec
jne
repnz
mov
cltd
lcall
rorl
or
aad
icebp
in
push
mov
lock
push
sti
inc
mov
mov
enter
sahf
inc
lret
and
jo
fwait
cltd
data16
std
adc
ret
icebp
mov
pop
in
iret
test
push
sbb
into
adc
ds
jae
pop
cwtl
lea
push
inc
xchg
sbb
sub
daa
push
push
jg
inc
mov
mov
mov
clc
mov
push
imull
hlt
test
cmp
data16
push
addr16
lock
das
nop
test
addl
movsb
add
push
pop
add
or
call
xchg
push
lds
pop
pop
int
icebp
cmp
sbb
fistpl
pop
call
in
andb
stos
test
test
or
mov
xor
test
xorl
jecxz
pop
or
adc
pop
xor
negb
lods
xchg
adc
jmp
cmp
inc
es
pop
and
xchg
int3
push
mov
in
mov
cmc
fs
dec
sbb
cli
pop
stos
addr16
icebp
jne
fcompl
xor
int3
lcall
out
cmp
xlat
add
jmp
sub
push
insb
pushf
movb
mov
hlt
mov
ljmp
jg
sahf
test
cmp
mov
push
fildll
fcmovnbe
ljmp
outsl
mov
xchg
dec
loop
imul
adc
mov
loop
nop
daa
lcall
xchg
rorb
xor
push
jle
fcoml
jg
inc
lret
cmpsl
inc
enter
aad
idivb
gs
scas
ljmp
pop
inc
pop
cmp
clc
pop
or
push
jbe
in
cmp
fistpll
out
and
push
insl
sub
and
or
inc
adc
ja
je
and
sub
in
jae
mov
mov
xor
adc
nop
fcoml
jmp
stc
cli
add
fs
movsl
cmp
clc
push
outsb
fcomi
fninit
inc
or
imul
fcoms
pop
fldl
std
cmp
jmp
dec
stos
dec
inc
jmp
mov
mov
or
pop
mov
inc
cmp
sbb
les
xchg
or
jo
push
shll
mov
loopne
test
sub
xlat
dec
and
pop
ja
inc
sub
cmp
sub
ds
repnz
xchg
adc
repz
scas
icebp
sub
adc
pop
push
in
fisttpl
sub
pop
test
scas
xchg
cmpsl
and
hlt
or
xchg
ds
cli
adcl
sbb
mov
mov
sub
pop
pop
lds
sbb
jb
dec
pop
mov
add
jne
xor
cwtl
cmpsb
cmp
cltd
adc
rcl
arpl
lret
cmp
jno
jo
push
lods
add
sbb
test
push
add
or
and
pusha
dec
jae
xor
mov
rorb
sbb
leave
push
jecxz
loope
repnz
xchg
out
pop
lods
arpl
jne
inc
jae
cmpsl
push
insl
enter
push
out
xchg
loopne
rorb
shlb
sbb
sbb
iret
xchg
loop
lahf
bound
sbbl
in
lds
pop
mov
sub
flds
xlat
jge
ret
mov
xchg
repz
pushf
sbb
xchg
pop
xor
cmc
cmpsb
and
mov
jp
out
jnp
cmc
std
lods
or
push
push
out
aad
fcoms
jbe
inc
xor
mov
xorb
out
dec
scas
add
subb
mov
ret
pop
ss
call
shl
insl
shr
xchg
out
pop
add
gs
scas
cmp
pop
sbbl
imul
frstor
pushf
ljmp
sub
adc
ds
repnz
hlt
xor
cmpsl
dec
ljmp
push
jmp
lahf
movsb
mov
ss
push
out
push
imul
xchg
sbb
aas
les
jp
stos
shr
js
mov
in
and
lret
dec
add
or
and
sbb
lods
les
test
add
jo
repnz
pop
jno
insb
dec
fcomps
adc
push
sbb
xchg
lret
fdivs
jno
sbb
sahf
inc
adc
aas
stc
jns
je
xchg
jecxz
push
fs
sub
cmp
leave
out
mov
test
std
jmp
cmp
xchg
pop
cwtl
rcrl
mov
clc
lods
or
fmull
sbb
or
mov
dec
or
adc
nop
pop
sbb
cwtl
outsl
addl
inc
lret
shlb
inc
in
jmp
pop
std
sbb
mov
test
aad
dec
mov
cwtl
dec
jo
push
movsb
inc
stos
idivl
add
fwait
xchg
cmp
lds
scas
cmp
cmp
lcall
xor
push
sub
jbe
pop
shrb
in
sbb
and
pop
sbb
push
pop
call
adc
xor
adc
mov
fists
daa
leave
cli
outsl
and
stos
sbb
sti
cmp
aam
pop
add
clc
pop
movsl
insl
lcall
jmp
in
push
enter
jne
test
xchg
fwait
add
xor
mov
sarl
and
push
cmpl
cmp
pop
add
jecxz
mov
shlb
loope
push
jecxz
adc
adc
push
out
cwtl
dec
xor
pop
pushf
xor
and
xchg
ss
mov
mov
push
pop
cmp
push
mulb
scas
mov
or
mov
xor
push
pop
mov
test
mov
push
xlat
add
sbb
mov
cmp
mov
lcall
repnz
push
push
jmp
dec
jns
cld
lods
xchg
stos
loopne
and
lods
push
jo
pop
mov
or
xlat
mov
pop
fisttpll
push
push
mov
shlb
scas
shr
enter
movsb
ds
fucomp
mov
mov
stos
or
xchg
xlat
cld
xor
or
mov
sub
fldt
arpl
cltd
jbe
gs
and
cmp
mov
out
aaa
cmp
or
imul
add
and
shrl
push
jle
cmp
xor
xor
in
pop
scas
movsb
jnp
mov
out
adc
fwait
imul
lods
xchg
mov
dec
cli
inc
push
xchg
gs
lcall
pop
jb
jle
and
jl
sahf
sbb
mov
push
jmp
mov
not
jecxz
scas
xchg
imul
and
in
loop
popa
mov
sti
aam
rcrb
add
sbb
data16
fists
adc
adc
in
mov
clc
add
pop
sti
push
mov
add
mov
cld
sub
popa
je
sub
arpl
das
iret
xchg
adc
adc
test
test
cmp
pop
jge
mov
jge
mov
scas
mov
fwait
push
push
imul
inc
inc
int
in
add
push
pushl
imul
jo
dec
xchg
rolb
push
pop
add
inc
mov
cltd
in
sbb
pushf
sub
or
roll
sbb
dec
sbb
push
xlat
or
arpl
ja
addr16
mov
loop
adc
insl
hlt
cwtl
xor
ja
pop
mov
xor
lods
imul
icebp
bound
mov
adc
stos
scas
mov
jmp
push
test
xchg
out
cmp
mov
in
xor
push
mov
cmp
mov
push
decb
xchg
test
adc
mov
cwtl
cmp
mov
faddl
sub
fs
popa
in
mov
sub
mov
stos
push
adc
dec
sub
dec
and
add
aam
pop
leave
adc
sub
lods
jp
out
shlb
sub
push
out
bound
mov
cmp
mov
pop
imul
dec
cmp
sub
rclb
pop
push
int3
fwait
mov
or
mov
cmpb
inc
pusha
cmpsb
out
int
cwtl
pop
sub
dec
fs
mov
in
stc
mov
ret
bound
cmp
and
mov
xor
out
xchg
out
inc
cld
daa
shlb
ret
inc
movsl
and
sub
pop
jo
inc
das
ret
sub
mov
jae
adc
in
add
push
arpl
rcll
inc
and
popa
dec
jno
sbb
mov
mov
outsl
bound
ficomps
pop
cmp
cwtl
dec
insb
insl
xchg
xchg
push
pop
and
sahf
out
sarb
sub
dec
arpl
aam
dec
jbe
pop
jmp
add
push
jg
dec
ret
fucomip
js
repnz
enter
mov
jg
cwtl
ss
dec
xor
mov
jmp
push
mov
test
cmpsb
mov
pop
rclb
xchg
cmp
pop
jg
shrb
fstps
inc
push
test
repz
outsl
loope
data16
mov
mov
mov
scas
adc
imul
or
ds
test
jne
xlat
add
inc
aam
sbb
jl
bswap
test
pop
xor
lods
in
fst
stos
xorb
scas
or
or
xor
out
xor
fists
dec
lods
lret
dec
cltd
and
mov
jns
xor
in
sbb
daa
mov
jp
mov
xchg
iret
mov
scas
cmpsb
pop
pop
sub
add
lret
enter
push
jmp
test
pop
imul
jo
das
pop
and
inc
fisubrs
aad
imul
sbb
out
mov
enter
xor
mov
in
movsb
das
inc
stos
adc
imul
mov
adc
ja
sub
xchg
pusha
sub
mov
or
shlb
adc
mov
cmp
fdivrs
pop
sbb
cmpsb
pop
xor
mov
sub
lock
lret
ljmp
cmp
imul
les
jns
jns
aad
cmc
or
xchg
imul
enter
pop
std
aaa
push
mov
dec
mov
test
popa
cmpb
push
push
push
enter
and
aas
dec
jge
out
cmpsl
loop
and
shll
sub
mov
test
jmp
shl
call
mov
mov
sbb
jle
loop
popf
mov
loopne
pop
mov
int
fidivs
fisttpl
scas
imul
ret
insl
xchg
in
sub
adc
imul
and
aad
data16
aam
and
add
push
sbb
mov
xchg
mov
lret
mov
jle
leave
push
test
or
cli
pop
mov
xchg
daa
push
pusha
popa
addr16
loop
mov
std
and
call
ficomps
decl
push
je
or
push
icebp
push
out
cmp
stos
jmp
push
fs
cmpsb
sub
nop
rolb
ja
sahf
lahf
shr
xor
popf
jo
pause
rorb
add
and
lods
sbb
mov
add
add
sahf
into
push
lret
sarb
or
scas
mov
xchg
cltd
mov
mov
ss
mov
enter
mov
push
imul
xchg
or
imul
cltd
sbb
inc
push
in
add
push
popa
lret
sbb
pushf
sbb
scas
sar
push
lret
dec
mov
ljmp
xor
inc
ds
in
adc
jmp
imul
addr16
push
frstor
add
movlps
pop
xchg
or
xor
push
lods
in
sbb
dec
fwait
fwait
xor
iret
push
inc
add
ret
xlat
dec
shr
add
mov
imul
sti
enter
or
xor
in
or
sbb
insl
hlt
fwait
mov
repnz
cmpsb
in
sbbb
outsb
mov
jecxz
mov
xchg
pusha
push
pop
scas
add
addl
lock
sbb
cld
inc
inc
arpl
xchg
xorl
pop
stos
loopne
cmovge
jns
pop
cwtl
iret
fadds
cmp
je
std
pop
dec
vmread
fcmovnb
gs
jge
rorl
dec
adc
xchg
xchg
jp
fninit
xlat
idivb
cmp
xor
mov
aad
sbb
mov
cwtl
cmp
test
mov
cmpsl
fwait
outsb
adc
pop
sbbb
and
jmp
jge
dec
sbb
sahf
adc
xchg
or
mov
cltd
dec
add
divl
lret
jmp
std
mov
sbb
les
out
pop
js
mov
cmp
cmc
and
mov
in
into
dec
mov
push
out
mov
mov
imul
fiaddl
lds
das
push
xor
or
push
shr
shl
repz
sub
adc
das
cmpsl
ljmp
dec
rorl
fsub
xchg
xchg
faddl
cmp
dec
sub
add
iret
inc
inc
mov
stos
fs
push
xchg
add
push
mov
jno
push
mov
lods
mov
xor
js
adcl
clc
fs
ljmp
sub
mov
icebp
push
mov
and
pop
push
leave
lods
cld
push
insl
popa
add
adc
inc
dec
pop
and
cmp
mov
mov
mov
lods
mov
mov
push
mov
jge
fstpl
test
mov
icebp
lahf
add
insl
aaa
stc
mov
and
xchg
dec
decl
pop
sbb
pmaxsw
andb
fnstsw
out
jae
fsubrl
ret
adc
jns
or
dec
pop
mov
dec
fistpl
lods
cmp
lcall
cmc
push
pop
shrl
inc
sti
vpsubq
fwait
lea
sub
add
outsb
dec
sarb
cld
mov
ja
call
add
pop
pushf
callw
arpl
addr16
cmc
ds
xlat
or
push
push
sub
xor
outsb
and
pushf
fldenv
jbe
mov
test
xchg
imul
mov
int3
mov
data16
sbb
push
inc
ds
pop
xchg
addr16
lret
and
mov
inc
xchg
mov
push
sbb
cmp
sbb
int
or
and
aaa
mov
xchg
test
sbb
inc
adc
pop
loop
mov
pop
jmp
hlt
xchg
sahf
inc
adc
jecxz
cmp
xlat
mov
xchg
aad
mov
sbb
sub
and
sub
rclb
roll
mov
dec
sarl
push
ffree
xchg
dec
sbb
xlat
mov
jecxz
push
iret
insb
mov
fs
push
add
daa
arpl
std
aaa
nop
stos
nop
xchg
int3
stos
mov
insl
jmp
mov
pop
lods
lahf
pop
mov
shll
gs
add
mov
rcr
cwtl
dec
sti
cmp
dec
push
movsl
movd
ficoml
inc
push
ljmp
pop
loopne
inc
popa
lds
xor
xor
mov
loopne
or
xchg
push
dec
jl
pop
or
scas
inc
jl
mov
scas
sbb
aas
xor
xor
lret
pop
push
lahf
jne
iret
enter
sub
repz
pop
mov
push
lods
adc
xor
jle
cmp
test
or
movsl
loop
push
jle
and
xchg
cmp
mov
fistl
hlt
push
pop
insl
jg
push
repz
repz
std
mov
inc
loope
xchg
stos
outsb
ret
ljmp
in
jle
jmp
sahf
xchg
xchg
divl
jl
push
xor
mov
jae
jo
jl
jbe
clc
cmpsb
jecxz
mov
xor
push
mov
sbb
and
aam
xor
jne
adc
mov
dec
test
mov
out
jne
int3
inc
mov
cmp
imul
mov
fldcw
jb
ds
out
mov
mov
and
enter
dec
stos
mov
decb
xchg
mov
es
pop
sub
lcall
fldenv
adc
lock
xchg
mov
aas
push
pushf
negl
jae
fdivrp
add
aaa
ret
test
mov
jne
xor
xchg
mov
dec
or
push
jmp
cmpsl
inc
or
xor
xchg
pop
sub
xor
jbe
aas
sub
pusha
ret
jbe
pop
dec
out
loop
sbb
xchg
xor
ret
scas
inc
push
jb
in
or
enter
rcll
xchg
test
inc
xchg
cltd
dec
jp
cli
adcl
mov
adc
xor
ds
inc
xchg
pop
imul
mov
adc
xchg
not
dec
fsubr
lods
mov
inc
aas
push
or
test
cmp
push
cmpsl
lcall
push
leave
loop
jnp
inc
dec
loope
xor
outsb
fsubrs
gs
imull
lds
xchg
out
xchg
shlb
and
lcall
movswl
jp
adc
pop
cli
div
shrb
fisubrs
adc
ficomps
lahf
push
movsl
and
decl
xor
pop
jg
jle
inc
pop
sbb
out
inc
movsl
aas
dec
insb
fadd
sbb
xor
adc
jne
ljmp
mov
push
lahf
jne
mov
add
adc
xor
mov
xor
out
cmpsl
xchg
push
movsl
pop
pusha
sub
mov
fisttpl
or
loope
sub
mov
push
xor
outsl
xor
mov
jno
orb
lds
fs
inc
inc
outsb
fwait
mov
fildll
push
sub
push
aam
jns
jp
jnp
aas
push
cmpsb
mov
cwtl
stos
mov
adc
xchg
mov
xchg
filds
mov
sarb
sbb
pop
aad
jns
xchg
dec
repnz
mov
add
std
in
inc
mov
and
xchg
adc
jg
and
xchg
or
push
aam
xor
cmpsb
pushf
inc
cmp
and
scas
out
mov
sbb
mov
adc
add
ljmp
jo
xchg
rorl
test
jo
leave
fmul
in
xor
jg
out
jl
repz
adc
int3
xlat
std
or
in
aaa
mov
out
popf
lods
mov
sbb
cwtl
std
dec
mov
fwait
push
push
xor
stc
push
test
pop
pop
fst
ret
xor
xchg
push
ret
mov
hlt
cmp
and
daa
por
psllq
mov
scas
sub
data16
shll
dec
sbb
pop
repz
repnz
pushf
cltd
aam
fwait
nop
push
jmp
cld
or
sub
rorl
mov
push
stos
dec
les
jmp
lea
daa
push
sbb
fsubl
sub
fidivrl
mov
inc
mov
cs
imul
cmp
xchg
mov
inc
fldt
inc
adc
mov
cmpl
cmp
push
test
push
mov
sbb
cmp
mov
scas
repz
stos
into
ja
jo
sahf
ds
shl
push
std
mov
and
push
mov
push
mov
adc
movsl
mov
lret
inc
mov
paddusw
stc
mov
testl
or
sub
movsb
ret
data16
mov
mov
cmp
push
jno
add
jge
dec
inc
test
adc
fs
inc
sub
std
xchg
loop
cmpl
and
jae
and
out
add
adc
adc
xlat
aas
mov
add
icebp
dec
xchg
nop
jno
dec
insb
cmp
inc
data16
inc
xor
push
push
dec
or
or
cld
outsl
mov
out
xor
mov
pusha
repnz
cmp
jb
push
pop
add
repnz
nop
xor
cmp
inc
and
inc
add
add
ret
outsl
jbe
inc
push
mov
jmp
xchg
ret
adc
xor
or
xchg
pushf
push
into
cmp
mov
js
pop
mov
dec
push
pop
mov
cmp
xlat
adc
stc
fists
or
and
out
push
jmp
push
xor
jae
mov
test
add
inc
jnp
leave
cmp
pushf
sbb
mov
icebp
sbb
cld
jecxz
pushf
and
sahf
dec
inc
push
loop
push
lahf
sub
inc
lret
xor
aas
jno
mov
jno
mov
push
mov
sbb
outsb
xchg
jo
js
enter
repnz
adc
test
in
notl
jmp
push
out
adc
xlat
pop
cmp
fistl
mov
lret
fadds
mov
rep
mov
mov
mov
fwait
and
out
in
mov
mov
sub
ss
and
rcrl
out
ficoms
sub
aad
mov
or
mov
cli
mov
xor
mov
jb
sub
adc
bound
jl
loopne
les
xor
sub
mov
mov
pop
rclb
addw
rclb
cmp
xchg
cmp
js
push
arpl
jne
mov
ja
movsl
shr
push
sub
lret
jo
adc
or
pop
das
pop
inc
dec
mov
push
stos
insl
stos
popa
rolb
xor
mov
lock
insl
jo
mov
dec
adc
dec
adcb
test
lock
in
das
fldenv
sbb
mov
sahf
push
test
or
inc
inc
iret
cmp
pop
inc
jo
cmp
add
insl
mov
sbb
or
mov
aaa
subb
cmp
pusha
ss
xor
add
shl
mov
cmp
out
pop
movsl
cmp
jne
mov
push
mov
mov
push
aas
insb
sub
mov
lds
mov
xor
lret
adc
sub
fsubl
and
inc
fld1
sub
movsl
shlb
xchg
mov
cmp
pusha
daa
mov
adc
ss
inc
mov
push
push
xchg
push
sub
push
add
xchg
or
ds
aad
dec
pop
mov
fisttpll
aad
iret
loopne
adc
outsb
adc
jns
pushf
mov
inc
gs
js
jne
and
push
std
push
fnstenv
push
stos
aaa
sub
pop
jg
popf
jge
loopne
test
movsl
mov
mov
fildll
imul
fsubrs
or
fadds
push
pop
add
pop
dec
mov
scas
or
loopne
lret
mov
sbb
stos
fimuls
add
ljmp
ss
sbb
push
lret
inc
stmxcsr
imul
push
mov
das
test
insl
sbb
shr
sub
push
mov
dec
lea
out
jl
out
and
lods
lahf
mov
pop
aam
mov
push
jae
jg
and
enter
and
mov
push
jmp
loopne
fistpll
cmp
pusha
push
icebp
sti
into
or
lcall
adc
sub
add
emms
mov
stos
stc
cmp
fimuls
and
inc
push
lea
jns
leave
pop
je
daa
ret
inc
ja
jg
test
mov
push
sbb
test
fcompl
jmp
pop
push
dec
pop
iret
loope
sbb
sti
mov
mov
xor
xadd
sub
mov
sarl
inc
xchg
fld
adc
mov
movsb
xchg
pop
pusha
mov
dec
ret
clc
ret
dec
xchg
shlb
mov
sub
push
mov
inc
inc
scas
xor
lret
in
push
mov
pop
rol
daa
in
push
jnp
mov
std
push
cmp
int3
rolb
add
push
lods
js
adc
jge
cmpsl
mov
push
das
lock
dec
adcl
movl
ljmp
je
in
or
test
test
imul
rcl
cmp
cmp
stos
adc
mov
lret
out
and
sbb
out
pop
into
mov
xchg
stos
movsl
fwait
sbbb
sarl
dec
scas
xchg
mov
push
and
les
lock
out
ficoms
dec
jns
test
rcl
imul
mov
addr16
mov
adc
loope
repz
mov
shlb
sub
pop
pushf
pop
xchg
sahf
loop
adc
pop
jl
stc
push
std
xchg
push
jbe
sbb
lcall
es
xor
outsl
mov
mov
loopne
iret
add
and
pop
sbb
je
imul
bound
into
test
adc
fistpl
adc
dec
repz
sbb
testl
pop
scas
aaa
cmp
push
mov
xor
dec
fdivs
mov
mov
lock
fisttpl
pop
mov
sti
imul
mov
cs
sub
or
ds
imul
dec
inc
shrb
jns
push
mull
out
mov
cs
aaa
sti
cmp
jecxz
add
sbb
lcall
sub
pop
cmp
test
outsl
dec
out
repz
pushf
ret
fldt
cmp
enter
mov
and
jno
jl
lcall
dec
sbb
pushf
cmp
mov
test
push
mov
loop
jge
stc
or
mov
repz
add
mov
std
cmp
cmp
and
dec
xlat
js
or
aad
sub
js
addb
out
inc
mov
dec
mov
pop
mov
shlb
xchg
xchg
sub
sub
sbb
sbb
mov
jne
mov
push
mov
cmpsl
addr16
lret
xorps
or
inc
lret
dec
push
addr16
and
push
and
lret
pop
xlat
or
fildll
xor
dec
cmpb
lds
sub
mov
sbb
inc
xorl
icebp
sub
js
jmp
mov
idiv
jg
cld
in
or
inc
sahf
cmpsl
xor
rolb
xor
imul
hlt
sub
js
iret
sbb
adc
dec
test
pop
int3
inc
lods
icebp
mov
lret
mov
into
cltd
push
push
add
add
push
jle
xor
nop
push
testb
rcll
fs
push
pop
sti
cld
jg
scas
fimuls
xor
xchg
xchg
push
arpl
xchg
dec
loopne
bound
inc
rclb
insb
test
xchg
movsb
mov
sub
sbb
sbb
lret
stc
lea
and
adc
pop
lcall
mov
jle
hlt
cmpsl
sub
test
cmp
jns
and
jecxz
jno
sbb
jnp
push
sbb
adc
sbb
leave
ljmp
out
jno
popa
and
mov
add
arpl
adc
adc
aas
cmp
jmp
je
pop
int
inc
push
loope
jne
jns
push
or
sub
test
pusha
mov
shl
out
outsb
leave
les
dec
sti
cli
shlb
jns
adc
fisttps
cmc
sbb
jb
dec
xchg
jl
pop
ja
mov
mov
scas
ret
cmp
xchg
stc
nop
add
xor
mov
push
loopne
fisubrs
aam
push
fildl
in
cmpb
mov
add
les
addr16
sarl
pusha
jb
add
enter
jo
xchg
lret
pop
cltd
scas
jg
jge
xchg
mov
jmp
mov
pop
or
dec
jle
mov
cmpsb
call
pop
push
mov
jae
pop
mov
sbb
fnstenv
jae
inc
shll
hlt
jle
jecxz
aaa
pop
add
mov
stos
inc
popf
popa
mov
dec
lock
out
subl
and
lods
mov
and
inc
mov
sub
mov
pop
mov
lock
arpl
stos
push
imull
aaa
pop
movsl
mov
ja
arpl
fcomi
arpl
inc
add
lcall
jbe
mov
mov
jecxz
xchg
jno
and
add
cmc
test
leave
jp
mov
adc
push
cli
and
lahf
jge
pop
in
imul
sbb
outsl
and
jl
das
repz
add
popa
stos
mov
mov
jl
leave
pop
pop
and
cld
and
cmp
push
repz
dec
bnd
jecxz
test
das
and
icebp
aas
adc
jecxz
das
stos
lahf
jae
mov
mov
push
lods
fnsave
loopne
or
scas
inc
pop
repnz
dec
pop
leave
les
rcll
imul
sub
je
addl
cmp
pop
mov
inc
cwtl
push
aas
pushf
xor
or
movsb
lods
push
jne
xchg
int3
inc
out
fidivl
push
add
adc
pop
xlat
xlat
and
adc
pop
hlt
dec
cmp
mov
or
inc
decb
cmc
and
movsb
dec
fmulp
dec
add
or
insb
in
lret
add
into
sbb
jp
push
dec
cmc
push
outsl
fisubl
in
adc
in
leave
or
cld
mov
enter
fldenv
shll
scas
loope
test
xor
das
repnz
addr16
das
jno
adc
inc
cltd
dec
pop
jne
scas
push
xor
mov
jae
fistps
xchg
test
jbe
fstpl
fcmovnu
out
lock
push
movsl
sbb
jmp
cmp
push
xchg
arpl
xor
or
jae
into
xchg
aas
push
in
inc
aaa
and
adc
sbb
xor
sub
aad
jns
inc
mov
pop
jbe
pop
push
add
outsb
out
sbb
ljmp
cmp
pop
addr16
mov
cltd
jo
insb
xorb
jge
xor
jp
add
pop
xchg
push
dec
jl
and
test
inc
int3
fsubr
push
iret
jns
and
sub
cli
pop
xchg
andb
movsb
xor
or
adc
xor
mov
cmp
test
xor
mov
iret
or
mov
mov
fnstsw
in
pop
popa
mov
jbe
cmp
inc
xor
call
push
sti
push
loop
mov
inc
or
and
adcl
imulb
add
shrl
push
in
mov
aas
sar
mov
shr
fstps
sbb
faddp
or
pop
jg
fs
adc
pop
jnp
adc
push
shl
mov
pop
loopne
imul
and
sbb
gs
sarb
ds
mov
pop
or
out
mov
insb
clc
into
scas
push
repz
adcb
cmp
cli
mov
adc
in
inc
imul
cmp
mov
jl
push
xchg
sub
push
xlat
movsb
shl
sub
scas
dec
mov
dec
and
jge
dec
inc
test
clc
mov
shr
aaa
lods
cvtps2pi
jmp
clc
int
call
push
pop
mov
sub
fcomi
lock
sbb
sub
fs
xchg
push
cwtl
add
pop
jmp
shlb
inc
gs
inc
enter
fwait
add
stc
hlt
or
cltd
das
sbb
push
mov
idiv
in
mov
xchg
repnz
test
xchg
ss
or
push
in
mov
or
push
mov
scas
sub
repnz
push
jmp
mov
mov
cld
xchg
sub
shr
iret
sub
imulb
mov
cmp
pop
dec
lock
xor
mov
sahf
ficoml
sub
not
repnz
test
fwait
mov
movsl
outsl
jp
daa
lret
int
lock
xchg
sub
dec
pushf
mov
stc
mov
cltd
pop
aad
dec
push
lahf
cmp
push
or
push
pop
xlat
and
mov
mov
jl
cmp
inc
out
dec
in
es
fsubs
dec
xchg
repnz
add
sub
mov
and
enter
cmp
pop
adc
jg
adc
and
add
or
adc
fwait
adc
or
in
stos
or
jnp
ja
pop
pusha
lea
loop
arpl
sbb
jnp
cmp
pop
shrl
cld
popa
mov
cmp
xchg
stc
fsubl
jno
mov
in
mov
push
pop
push
dec
mov
out
mov
int3
outsl
dec
int3
xor
mov
cmp
cmp
cmpsl
inc
mov
sbb
adc
ret
push
cmpsb
es
adcb
dec
or
and
push
subl
adc
aam
jecxz
push
jmp
pop
ret
jno
xor
xchg
mov
cmp
ds
cld
out
pop
pop
xor
lret
push
xchg
sbb
inc
data16
push
jl
jp
and
rorb
add
movl
subl
or
push
jnp
mov
fwait
sbb
shlb
int3
das
dec
and
lods
jle
arpl
jo
cli
shlb
rolb
jg
mov
add
jge
aam
call
pop
push
pop
jmp
or
imul
cmpsb
mov
lahf
inc
scas
pop
sbb
add
adc
add
adc
arpl
rorb
movsb
aad
es
jo
std
iret
sahf
movsb
in
dec
fs
or
cmp
cmpsb
fidivrl
jl
jo
xor
outsb
popa
imulb
ficompl
imul
sarb
jge
push
lcall
fimuls
insl
mov
lods
ss
std
test
not
cltd
andb
or
in
cmp
call
mov
fsts
inc
jl
das
pop
pop
dec
cmpsb
pop
jecxz
cmp
mov
pop
cmp
ret
out
jne
xchg
and
dec
sti
sahf
jb
repz
jmp
stc
cwtl
sub
add
mov
sub
mov
roll
cmp
adc
xor
daa
mov
cwtl
xchg
pop
pushf
push
mov
adc
push
ret
jo
je
sbb
pop
mov
das
jmp
dec
jbe
pop
xchg
shlb
adc
test
jmp
rcll
jne
rclb
hlt
pop
pop
insb
mov
inc
mov
idivl
pop
popf
xor
inc
sbb
sbb
and
jo
mov
aas
cmp
xchg
pop
push
pop
or
movsl
sub
xor
jne
push
inc
push
es
pop
add
sbb
shll
inc
imul
push
lds
mov
mov
mov
fmuls
into
dec
mov
shrb
inc
out
mov
adc
sbb
and
mov
cmc
or
fs
shl
sub
fistpl
inc
aaa
cli
jbe
stos
sti
lock
and
push
add
fidivrs
cmpsb
fimuls
andl
loope
divps
arpl
xchg
aam
or
xlat
xchg
faddl
dec
add
add
mov
dec
call
and
insb
imul
ja
dec
ret
in
and
fmul
jge
mov
loopne
sbb
jp
loopne
ret
sbb
nop
stc
sub
imul
outsb
push
ds
js
push
adc
add
js
mov
push
imul
mov
fcomps
not
xor
mov
dec
mov
imul
or
inc
xor
jl
mov
scas
test
movsl
or
arpl
mov
into
fwait
into
xchg
pop
loop
std
mov
push
out
pop
jp
push
xchg
cmpsl
mov
and
rep
imul
sub
shrl
bound
adc
mov
add
pop
rorb
fstenv
sbb
mov
inc
into
jmp
cwtl
enter
mulb
loopne
inc
dec
jge
movsl
push
xchg
jmp
cltd
gs
mov
jmp
fdivl
shrl
xchg
push
ficompl
pop
sbb
mov
ljmp
xor
aam
xchg
pop
or
dec
mov
rcrl
popa
aam
inc
jns
mov
ret
scas
dec
outsb
cwtl
sub
ljmp
push
xor
add
imul
sbb
xchg
xor
outsb
or
mov
jmp
fstl
ljmp
in
and
sbb
push
mov
jecxz
or
ss
outsb
jmp
or
xchg
repz
push
cld
xor
setns
push
xor
sub
xchg
outsb
aam
shll
mov
andb
jbe
sbb
in
aam
mov
sub
mov
mov
mov
adc
sbb
sub
or
jge
jge
pop
pop
push
lods
mov
popf
cltd
mull
pop
mov
pop
adc
loop
sub
loope
jp
fadd
pusha
idivl
into
mov
mov
fdivp
ret
loopne
mov
sti
pop
mov
jmp
xor
dec
out
inc
sbb
xor
and
lret
aas
out
lret
mov
rcrb
cmpsl
int3
jnp
out
add
icebp
dec
outsl
push
cmpsb
fstpl
mov
mov
xor
jns
or
aaa
out
lret
out
and
std
aaa
out
pop
ja
pop
cmp
sbb
adc
mov
data16
mov
lock
ljmp
mov
aam
lahf
pop
jl
stos
xchg
pusha
pop
xchg
push
mov
xor
insb
jmp
adc
out
sahf
pop
mov
sar
jne
sbb
sub
leave
mov
xchg
lcall
xor
lods
and
push
jns
test
cmp
sub
movsl
and
jg
popa
movsl
inc
add
jl
adc
sbb
dec
andb
mov
loopne
jecxz
sbbb
cmp
loope
out
mov
test
movsb
xchg
fdivp
aam
lahf
cmp
adcb
push
mov
fidivrs
cmp
into
es
hlt
jmp
push
add
jae
pop
mov
mov
mov
outsb
inc
sbb
inc
pop
sub
popf
loope
mov
lods
in
repnz
es
cmp
ljmp
sbb
pushf
add
xchg
test
scas
jecxz
adc
repnz
push
outsl
pop
ja
inc
aas
test
lds
mov
mov
mov
jno
std
popa
call
xchg
pop
adc
test
inc
ror
add
roll
ja
int
es
mov
sbb
dec
scas
push
jle
stos
pop
outsb
rcrl
in
jp,pn
dec
cmp
xchg
push
jno
movsl
dec
or
lods
fs
sbb
sbb
aad
xchg
lock
scas
and
lods
ficompl
scas
movsb
jne
jg
popa
push
push
add
push
dec
mov
fldenv
daa
inc
jp
xor
and
test
loopne
mov
sbb
mov
and
xor
pop
cmp
push
jmp
cli
cmp
test
test
sbb
test
imul
mov
push
pushaw
sub
push
lcall
xchg
mov
or
test
repnz
xor
sub
jbe
cld
sarb
add
mov
sbb
lcall
ret
xor
mov
stos
pop
push
push
pop
adc
and
xchg
stos
shll
std
push
and
xchg
xchg
mov
out
push
out
xchg
loopne
xchg
clc
insl
popf
adc
mov
cmpb
mov
xlat
enter
out
add
push
into
int3
leave
push
movaps
dec
lea
ja
push
leave
rolb
aam
in
dec
repnz
fs
mov
out
test
lahf
mov
pop
push
into
adc
scas
mov
int
cmp
adc
mov
jne
shlb
add
fldenv
mov
outsl
dec
test
iret
bound
idiv
push
das
xchg
repnz
adc
adc
in
and
es
cltd
xchg
es
leave
push
fidivl
mov
ret
inc
xlat
test
cmp
in
lcall
fcoms
mov
sbb
lods
mov
add
stc
cwtl
adc
mov
dec
lret
mov
push
cwtl
and
sbb
pop
data16
imul
xorb
dec
and
ss
jmp
aaa
pop
push
sar
jmp
pop
xor
nop
and
jmp
jecxz
iret
inc
or
int3
es
mov
xchg
dec
cmp
ljmp
push
mov
or
rcl
ss
pop
mov
xchg
daa
dec
push
ret
adc
ja
xchg
add
hlt
cmp
mov
push
and
jmp
shr
daa
pop
mov
cwtl
loop
ds
jle
push
push
push
xor
inc
out
jmp
mov
push
cmp
lahf
cmp
sbb
out
cs
daa
or
or
adc
loope
dec
nop
or
test
cmp
cmp
sbb
aaa
fiadds
sarl
pop
popf
xchg
lea
or
jle
dec
addr16
or
cmc
sbb
push
mov
pop
pop
in
mov
xor
call
ret
adc
or
aaa
xchg
xor
adc
inc
or
jmp
cmp
push
psubw
pop
out
ret
or
push
xchg
outsb
cmpl
out
cmc
fs
mov
mov
lret
movsl
mov
dec
xchg
in
lahf
mov
push
loop
and
inc
cli
imul
jne
outsb
mov
jp
jnp
insl
xchg
repz
adc
push
adc
mov
repz
test
sub
je
cmp
adc
loopne
mov
cmp
ja
mov
js
pop
cmp
mov
flds
out
dec
mov
push
imul
pop
stos
dec
mov
scas
jne
xchg
cs
inc
sarb
sub
lret
imul
jmp
fiadds
incl
push
push
sbb
sub
inc
mov
shr
cmpb
xchg
add
or
push
lock
sti
sub
inc
ja
add
dec
pop
shl
cs
mov
icebp
int
aad
adc
dec
js
xor
stos
hlt
mov
or
sbb
push
sbb
adc
cwtl
push
xchg
mov
shll
aad
sub
pop
jmp
fadds
into
adc
xor
loope
ret
neg
dec
pop
mov
pop
pop
outsb
icebp
dec
adc
or
lea
daa
inc
xchg
in
cmp
cmp
lret
adc
inc
mov
mov
push
mov
adc
ret
in
dec
push
dec
push
mov
push
or
cmp
mov
xchg
scas
mov
jnp
push
jbe
mov
xor
cli
ret
insb
aam
scas
roll
jae
lods
imul
bound
add
sub
cmpsb
ds
dec
setnp
mov
into
or
pop
sbb
add
in
jb
mov
inc
fwait
xor
adc
into
lret
mov
fisubs
inc
repz
xchg
push
jp
push
andb
jmp
and
or
hlt
out
rorb
andb
xor
adc
lret
aas
inc
ja
mov
sbb
xor
stos
das
push
loopne
jnp
lret
push
outsl
in
xchg
jmp
sub
inc
ret
je
flds
mov
orb
std
jno
fst
fnstcw
imulb
out
xor
push
sarb
mov
in
shlb
cli
push
dec
mov
je
adc
scas
inc
and
rclb
mov
das
mov
or
mov
mov
je
out
push
mov
sbb
adc
cmpsl
imul
jnp
lcall
sahf
inc
sub
jge
inc
faddl
xor
and
pop
shlb
add
jg
and
test
sbb
add
ljmp
in
xor
push
or
insl
mov
mov
mov
mov
xor
bound
rcr
jns
pop
out
xor
sub
lock
insl
pop
adc
fmull
pop
das
cwtl
mov
lcall
or
lea
out
incl
mov
in
fcmovb
xchg
divl
aaa
int
repz
xor
xor
fs
test
mov
dec
push
adc
out
xchg
fldcw
shll
lock
stc
nop
shrb
or
xor
aas
ljmp
push
jnp
ficompl
sub
js
insl
rcr
aad
sbb
aad
xchg
and
xchg
cltd
mov
popa
cli
xchg
mov
pop
xor
jle
lcall
scas
pop
enter
call
insl
lea
push
decl
pop
nop
pshufw
push
and
fisttps
ss
nop
dec
insb
lret
bound
out
push
xchg
cmpsl
xchg
cli
xchg
jb
inc
nop
mov
jl
jo
cmp
or
cld
jno
or
movsb
mov
dec
bound
adc
sub
lret
icebp
mov
pop
or
cmpsl
add
sub
pop
movsb
popf
cltd
gs
mov
mov
cmpsl
mov
icebp
mov
mov
aas
push
sbb
daa
testl
mov
aam
and
sub
jae
cmp
repz
pop
dec
push
lret
out
mov
pop
mov
scas
rcrb
mov
inc
adc
popf
and
adc
ds
dec
sub
mov
jae,pt
mov
addr16
mov
dec
fs
subb
shlb
push
clc
or
lods
mov
ret
cmp
pop
dec
inc
cmp
aad
lods
pop
dec
jge
cwtl
popf
pop
andl
loop
pop
or
jne
aas
dec
adc
fcompl
push
cmc
std
inc
imulb
jae
int3
testb
mov
mov
jl
xlat
mov
mov
jmp
lea
and
jns
jp
stos
fisttpll
push
int
and
adc
andl
xchg
add
fists
mov
cmp
jge
inc
mov
inc
push
xchg
daa
call
imul
xlat
cmp
dec
test
shl
mov
test
add
jp
push
arpl
test
pop
ja
mov
xor
das
and
lds
fidivrl
xchg
shl
data16
test
jge
out
or
idivl
xchg
push
shr
jne
mov
mull
rol
xor
adc
jecxz
sbb
popf
xor
dec
mov
lret
loope
xor
jmp
push
es
jl
push
cmp
pusha
cmp
fimuls
xor
sahf
lods
or
adc
scas
adc
mov
xorl
mov
cltd
sub
push
std
mov
hlt
dec
dec
stos
and
lcall
popa
test
inc
mov
lcall
mov
push
lds
xor
lret
out
movsb
shlb
sub
cwtl
lahf
push
negl
shlb
fldcw
lods
pusha
inc
es
mov
aam
mov
xor
aaa
testl
adc
repz
lcall
icebp
sti
jmp
notb
mov
stos
inc
pop
cmp
push
inc
fisttps
xchg
lods
cwtl
cmp
or
jae
pop
jp
test
and
cmpsb
dec
xor
or
lahf
adc
stc
push
les
cmpb
xchg
pushf
inc
jle
mov
xchg
daa
cwtl
fbld
sub
clc
fwait
sub
ljmp
lahf
xchg
dec
lods
ds
mov
pop
add
xchg
sbb
push
jle
push
and
push
pusha
xchg
or
enter
mov
cli
gs
aam
jns
loop
call
ljmp
dec
insl
pushl
cli
or
xchg
js
sbb
mov
push
push
xchg
cli
jecxz
mov
dec
xchg
in
add
sbb
lahf
add
pop
sti
movsb
inc
repnz
push
and
shl
and
push
pop
mov
cmp
jmp
hlt
mov
xchg
fcmove
loop
fmuls
and
jae
outsb
bound
call
outsb
xchg
je
clc
stos
popl
jo
mov
inc
incl
int
and
or
flds
jle
add
in
add
mov
mov
inc
ja
lret
sbb
or
test
adc
in
inc
lods
add
or
xchg
inc
mov
sub
gs
lahf
outsb
xchg
inc
jnp
stos
jg
xor
test
cwtl
push
cmp
sub
addr16
sahf
cld
mov
dec
xchg
cltd
fisttpll
xchg
ret
sbb
push
clc
arpl
inc
jae
push
lret
mov
push
or
enter
push
mov
cmc
mov
push
cld
add
aas
cld
xor
sbb
push
add
into
cmp
adc
mov
inc
xor
mov
add
add
cld
out
xor
xor
push
hlt
mov
and
repnz
sbb
in
in
xor
sbb
test
dec
lods
and
nop
or
pop
xor
and
sub
icebp
mov
pop
loopne
sbb
add
mov
lock
dec
arpl
cmpb
out
leave
mov
sub
push
push
stos
jecxz
jp
in
xor
mov
outsl
jmp
rorl
insb
pop
and
movsb
cmp
pop
or
dec
dec
mov
btr
fldenv
pop
mov
xchg
adc
mov
cld
or
hlt
pop
fidivl
test
mov
or
mov
je
aas
dec
pop
lret
and
pop
sbb
adc
imul
and
hlt
inc
jne
ljmp
jne
je
push
and
pop
xchg
mov
iret
cs
hlt
bound
add
addr16
addr16
sbb
test
mov
mov
cwtl
into
add
enter
jae
je
push
test
push
adc
and
jge
repz
mov
in
add
sbb
pop
or
movsb
mov
and
testb
fucompp
scas
outsb
dec
sub
ret
fcoms
mov
push
mov
pop
repnz
pop
xchg
cld
and
cltd
sub
adc
jnp
jmp
push
hlt
arpl
icebp
outsb
dec
mov
notl
or
int
cmc
testl
cwtl
pop
xchg
push
mov
imul
jp
xchg
std
sub
hlt
fwait
cmp
movsl
ljmp
push
or
adc
cmpsl
aas
mov
pop
push
adc
xchg
fstpl
sub
and
cmpsl
fisubrs
subl
adc
test
sarl
addr16
push
aad
sub
dec
push
jge
jae
out
jle
cli
out
stos
repnz
mov
addr16
xor
xchg
mov
outsb
pusha
and
enter
insb
pop
jo
sub
aad
out
mov
push
mov
and
in
push
adc
cwtl
push
shlb
push
test
pop
xor
or
or
push
xor
or
or
push
or
jg
popf
test
push
jns
mov
inc
fnstenv
sbb
rolb
or
inc
mov
jne
jae
andl
xchg
sbb
inc
pop
out
jl
mov
imul
out
pop
popa
lret
or
fwait
ret
test
hlt
mov
fcmovb
loop
test
mov
data16
loope
push
clc
sub
das
shll
test
xchg
xchg
mov
je
lds
or
xchg
xlat
popf
add
pop
insb
push
add
fcomp
imul
sbb
mov
add
pop
arpl
and
test
jmp
call
test
adc
out
cmp
mov
xchg
mov
fists
mov
push
jb
fmull
push
xchg
jne
mov
fistl
xor
xor
jmp
enter
lods
and
mov
outsb
mov
xor
and
aam
stc
mov
push
out
das
mov
xor
jmp
add
mov
sbb
jg
mov
out
cli
sub
cltd
jmp
mov
inc
cmpb
cmpsl
cld
sbb
leave
cmpsl
mov
or
and
ret
mov
add
dec
fmul
icebp
inc
pause
add
mov
fadd
pushf
xchg
shlb
mov
gs
mov
inc
mov
les
dec
xorl
push
push
mov
fs
outsl
pop
out
inc
arpl
in
sub
jle
and
dec
push
aam
pop
ss
leave
add
push
mov
mov
jle
adc
xor
leave
fcoml
aam
leave
dec
mov
imul
int
jl
cmp
loope
jo
adc
dec
sub
in
xor
fsts
call
nop
inc
jb
sti
or
jmp
aaa
movsb
xchg
fistpl
outsb
push
push
cmp
jg
sub
enter
rol
lahf
mov
leave
pop
shl
bound
call
and
cmp
adc
cmpsl
mov
xor
repz
rorl
push
daa
out
pop
std
out
sub
aam
shlb
stc
addr16
jne
aam
pop
sub
test
fidivrs
sbb
push
adc
pop
test
and
std
sbb
mov
or
fdivrs
fidivrl
fs
dec
loope,pt
adcl
iret
into
shrb
jbe
insb
or
lea
adc
xchg
pushf
jns
mov
cmp
jae
xor
push
cli
shrb
dec
int
in
xor
scas
test
test
pop
outsl
pop
leave
pop
mov
mov
mov
in
pop
lret
cmc
sti
inc
add
test
ffreep
adc
aaa
xor
lcall
pop
aaa
fisttpll
jo
mov
out
fiadds
ja
inc
add
addr16
mov
pop
lods
pop
outsl
in
mov
roll
pop
pop
pop
sbb
lock
adc
hlt
pop
daa
jb
ret
sbb
scas
pop
into
xor
pop
sti
mov
inc
lock
cmp
xchg
fcmovne
sarl
mov
pop
js
pusha
punpckhdq
sub
daa
dec
adc
rcll
jne
shll
mov
data16
jbe
loop
jb
mull
or
ret
xchg
out
lahf
jmp
or
adc
jmp
xor
dec
mov
addps
mov
mov
inc
mov
or
add
test
push
clc
add
xor
dec
in
stos
aas
test
test
enter
pop
loopne
lcall
adc
std
mov
mov
mov
or
lsl
or
mov
int3
notb
mov
adc
fcoms
mov
daa
pop
jle
mov
or
in
outsl
cli
cs
adc
stc
add
out
sbb
imul
clc
movsb
pop
mov
add
cmp
mov
and
sbb
dec
aaa
in
jle
loopne
les
jns
inc
mov
fwait
setne
out
inc
js
adc
pushf
dec
sbb
pop
repnz
mov
mov
xor
addr16
daa
lcall
lds
test
mov
inc
stos
sub
add
cli
mov
inc
xchg
jo
out
call
or
in
pusha
fwait
cmp
popf
es
pop
mov
lock
fld
sti
enter
icebp
mov
ficoms
mov
aaa
addr16
push
repz
fdivrl
inc
aam
lea
xchg
jno
arpl
mov
fstpl
mov
lds
imul
and
push
loop
int3
dec
inc
fiadds
lret
jle,pn
xchg
and
inc
lods
in
mov
lock
shl
test
orb
ss
add
inc
pop
jne
xor
xchg
sbb
dec
xor
nop
xor
pop
fstps
adc
movsb
outsb
scas
mov
and
xor
out
in
cli
test
lcall
lods
jo
jle
rcrl
pusha
test
mov
or
dec
mov
popa
xchg
test
push
scas
pop
sar
push
les
xor
push
or
je
pusha
pop
or
mov
repz
nop
int3
outsb
jg
mov
sarl
cmpsb
fisttpll
mov
cs
addr16
call
jno
mov
jecxz
and
scas
sahf
push
ret
mov
add
mov
rcrb
cmp
xor
insb
iret
cmpsl
ljmp
iret
daa
or
aaa
jnp
add
push
stc
jne
inc
sbbb
jecxz
roll
stc
ret
inc
jl
out
inc
dec
mov
shl
repnz
mov
lock
or
ja
push
or
xchg
mov
lahf
fwait
es
jg
and
std
sbb
aam
cmp
push
pop
add
fwait
push
and
pop
push
dec
jmp
mov
and
sub
sar
mov
pop
shll
outsl
repnz
pop
pop
mov
mov
adc
cmp
jae
cmc
rdmsr
dec
mov
out
and
mov
fnstcw
xchg
aas
int
es
fincstp
pop
adc
push
and
in
jns
cmpsb
mov
jne
jno
xchg
mov
xor
mov
fs
cmp
pusha
out
insb
out
xor
roll
jbe
inc
xchg
adc
imul
inc
adc
add
loope
stc
lods
and
movsl
decb
push
pusha
sti
mov
cmp
pop
cmp
leave
cli
shll
lods
scas
adc
repz
icebp
jb
arpl
or
nop
dec
scas
imul
sub
imulb
and
in
mov
pop
mov
testl
fistpl
jl
pop
das
sub
cmpsl
out
sarl
cmp
mov
int
xchg
and
push
stc
ljmp
out
mov
inc
pop
mov
lcall
mov
mov
scas
and
movb
jge
and
pusha
lret
dec
jb
mov
ja
inc
sbb
aam
cmp
bnd
imul
xchg
scas
loop
jb
sbbl
cli
fdivp
sbb
out
icebp
xor
fbld
inc
adc
jmp
jnp
add
lcall
aad
stos
lret
xchg
pop
pushf
fdivr
dec
pop
mov
push
jno
push
imull
aas
add
dec
xorl
pop
fidivl
pop
fisttpl
pop
leave
mov
addr16
pusha
inc
mov
xchg
ljmp
jno
lods
push
cmp
sbb
push
mov
mov
jge
cwtl
sahf
xor
fsubrs
aam
mov
lret
test
and
pop
movsb
cmpsb
jmp
int
xor
and
mov
and
mov
push
mov
imul
pop
push
sub
lds
cmpsb
fcom
imull
cmp
push
lock
cmp
push
jg
fiaddl
pop
mov
xchg
mov
hlt
inc
sub
xchg
jb
pop
xor
into
call
inc
stos
aam
xchg
dec
iret
das
push
xchg
ja
es
add
aaa
sub
fwait
mov
cmp
fdivl
in
loop
ds
adc
xchg
xchg
xor
stc
adc
pop
jo
push
cmp
sub
mov
mov
and
cld
insb
cmp
xchg
push
xor
leave
lock
or
xchg
adc
fcmovnu
call
sub
aas
add
fwait
xchg
jge
movsb
popa
push
inc
popf
insb
into
iret
xchg
sub
cmp
xor
shll
lock
insb
mov
and
jbe
cmp
add
shl
mov
mov
out
pmullw
in
ret
lret
jae
icebp
dec
xlat
inc
pusha
ss
cmp
ror
outsb
inc
sbb
rcrl
jp
jg
mov
jecxz
loop
xchg
shll
pusha
ja,pt
ret
sbb
in
sub
sbb
mov
dec
rorl
icebp
mov
mov
cld
jmp
mov
and
mov
lahf
js
xchg
mov
xlat
or
nop
jb
mov
sub
adc
sub
lcall
cmp
and
sahf
enter
jo
je
aad
lock
adc
sub
or
mov
outsl
inc
cmpsb
inc
data16
push
shlb
cmp
add
or
xchg
and
cld
cmpsb
ds
psubsb
push
mov
and
or
insb
outsl
ss
push
mov
cli
mov
clc
notl
mov
xor
inc
js
dec
inc
ds
mov
movsl
inc
mov
stc
push
push
pop
pop
and
inc
sub
push
sub
fistps
inc
jno
cmp
bound
mov
jmp
or
pop
dec
xor
in
stos
out
rcll
jns
xor
cmp
sbb
mov
fmuls
or
add
or
push
gs
lret
aad
scas
inc
and
add
fstps
push
xorb
aaa
jge
sti
repnz
clc
mov
push
or
je
ja
ja
sbb
test
dec
std
in
mov
xchg
lock
dec
sub
stc
cld
xchg
ror
mov
push
xor
xchg
mov
inc
or
imul
push
mov
stc
rorb
cmp
jg
sbb
out
pop
xchg
jo
hlt
jl
cltd
lahf
das
sbb
mov
in
subb
lds
outsb
shrb
or
fistpll
and
lods
mov
mov
push
enter
loopne
jg
fimuls
test
in
sti
cli
xchg
xchg
popf
sahf
sub
pusha
insl
loope
push
push
in
popa
aad
insl
adc
std
je
mov
push
inc
push
push
and
pop
jns
inc
fcomip
mov
ds
movsb
dec
daa
dec
cmp
cmp
and
daa
xlat
icebp
xor
scas
out
mov
cmp
dec
dec
push
sbb
movsb
daa
mov
mov
cmp
das
jle
shlb
or
and
fimull
out
shr
imul
mov
aad
jb
sti
or
scas
xchg
adc
dec
push
addr16
sub
mov
rorb
icebp
enter
cmpsl
pusha
jg
loop
mov
cmp
sub
cmp
pop
not
test
cli
lret
sbb
and
add
push
or
cmp
push
pop
adc
addr16
int
data16
or
cs
cmpsb
mov
imul
fs
rcrb
in
mov
hlt
mov
ret
fldcw
inc
nop
cwtl
or
cmp
lods
imul
xchg
push
mov
incl
js
fcoml
jmp
shlb
mov
or
jl
popa
xchg
sbb
in
cli
rcrl
jbe
into
out
push
incb
out
bound
outsb
fstp
shlb
mov
imul
pop
cmp
lret
clc
push
jecxz
shrl
addr16
sub
orb
xchg
push
icebp
ret
add
gs
xchg
xor
push
add
pop
adc
sbb
mov
xchg
sub
mov
mov
cli
aaa
push
loope
mov
bound
sbb
jp
mov
or
mov
and
xchg
xchg
dec
xchg
fdivrl
aas
popa
xchg
pushf
mull
jne
bound
cmpb
ljmp
lock
fisttpll
or
lock
js
dec
jl
mov
jp
aam
std
lods
fsts
mov
mov
inc
loop
and
lret
jp
sbb
fdivrs
jl
inc
xchg
push
in
cmc
scas
test
outsb
nop
dec
add
sub
or
xchg
add
sub
mov
movl
xor
sbb
int3
repz
lret
cltd
aaa
sbb
ficompl
sbb
sbb
cmp
jns
ljmp
aad
sub
insb
sbb
pop
stos
adc
cwtl
roll
mov
adc
stc
ljmp
rcl
sub
jl
jae
test
xor
fwait
pop
sti
sti
mov
mov
jg
push
adc
subl
jb
sti
jge
add
aam
and
enter
or
add
in
xchg
test
movsb
es
xchg
pop
scas
xchg
stos
inc
xchg
sub
js
cwtl
in
out
loope
xor
dec
fisttps
jecxz
lds
pop
insl
cmp
loop
inc
aam
bnd
mov
rcrl
and
fisttpl
xchg
fsubrs
ss
aam
or
leave
xor
mov
mov
lods
fistl
movsl
push
popa
push
fnstcw
bound
cwtl
loope
add
cmc
int
mov
mov
scas
test
xor
mov
sbb
mov
shlb
fxtract
das
int
push
push
pop
imull
out
fstp
aaa
out
push
scas
repnz
lock
adc
not
and
imul
stos
inc
inc
add
addr16
sbb
sbb
iret
stc
ljmp
stos
jo
icebp
or
test
shrl
fadds
inc
ss
aaa
test
or
daa
push
mov
rcrl
in
outsb
add
in
in
lret
and
lret
adcb
daa
sbb
outsb
sub
fadd
pusha
enter
lds
icebp
xor
aam
jns
leave
loopne
ss
mov
lds
shld
xor
repnz
daa
mov
outsl
push
jg
outsb
mov
std
mov
movsl
andl
mov
cmp
dec
aad
jne
imul
pop
adc
cmovo
mov
aad
iret
inc
lock
dec
lods
push
insl
jne
mov
push
ds
andl
and
sub
cmp
mov
inc
jle
xchg
xchg
popf
push
rorl
nop
jl
out
sbb
mov
inc
jnp
aaa
ja
add
dec
arpl
push
fcmovnbe
mov
sub
jecxz
leave
cmpsb
lret
sbbb
pop
adc
add
imul
pop
bound
into
push
out
aas
and
mov
mov
fwait
and
lret
push
jg
out
call
jb
shr
cmp
shrl
jae
mov
ss
mov
rorb
out
mov
stos
lea
push
out
jne
jge
add
add
mov
xor
jge
shlb
pop
sbb
aam
sbb
stos
pop
icebp
out
xchg
push
sub
mov
outsb
cmp
xchg
cwtl
adc
dec
mov
inc
popa
pusha
in
hlt
dec
xchg
push
ds
mov
or
in
fnstcw
mov
xchg
xor
pop
jne
jnp
or
xchg
inc
repnz
adc
jl
lock
xchg
xchg
inc
js
cltd
popa
cmp
sbb
fs
ljmp
lods
mov
cmp
add
mov
xchg
and
or
orb
lock
or
adc
add
add
inc
out
es
jb
cmp
ror
xchg
stos
test
flds
arpl
dec
arpl
lods
mov
sar
negb
xor
shll
ret
xchg
pop
outsb
sub
push
dec
xchg
mov
je
add
mov
jp
cld
or
cwtl
or
mov
jo,pn
mov
sarb
push
cmp
push
pop
and
dec
aas
xchg
adc
aam
jg
sub
clc
iret
sbb
push
xchg
xor
adc
cmp
imul
jno
popf
ds
cld
cmc
sub
test
jo,pn
mov
pushf
mov
hlt
jl
test
je
btc
popf
loopne
rclb
mov
insb
xchg
adc
xor
call
or
adc
loopne
add
aas
push
hlt
sahf
inc
pop
and
insb
sub
or
dec
dec
stos
lods
das
sub
cmpsb
ds
scas
jl
jnp
jne
loope
mov
call
mov
adc
jecxz
inc
aam
jge
inc
xor
pop
iret
sti
and
insl
nop
mov
mov
pop
es
int
dec
inc
bound
aad
add
jge
int3
sbb
mov
pusha
std
and
add
repnz
push
adc
into
sbb
fs
mov
dec
jnp
leave
cmp
mov
adc
pop
sub
sbb
add
cmp
push
fidivl
out
cwtl
movsb
cmpl
jmp
mov
jge
lret
sub
jae
add
lret
fcmovbe
pop
shrl
aad
push
clc
in
ret
push
cs
aas
fwait
or
jmp
jno
mov
repz
push
and
add
and
push
ds
jno
mov
push
mov
lret
ret
or
pushf
out
sbb
jle
hlt
mov
pop
pop
and
add
daa
xor
mov
cmp
or
jbe
or
into
xchg
popf
imul
es
inc
xchg
sub
adc
movl
sbb
mov
mov
push
cmp
inc
xchg
cwtl
fcmovu
arpl
inc
xor
jnp
sub
pusha
insl
mov
mov
add
mov
cmp
sub
out
stc
rol
rol
pop
pushf
notb
js
jb
xchg
jnp
ffreep
int3
stc
push
fbld
xor
inc
lds
add
in
test
in
clc
cmp
imul
sbb
cld
pop
jo
fisubs
insl
and
add
ret
mov
mov
push
jmp
outsl
gs
stos
fmul
adc
pop
jo
cmpsb
fistpll
add
popf
lret
js
push
insl
dec
cmp
in
fdivrs
sub
jo
dec
lahf
mov
adc
jo
lds
xor
push
or
lcall
cmpsl
mov
cltd
mov
repnz
push
scas
fdivrp
mov
mov
sub
mov
insl
sbb
mov
xchg
cmp
mov
xchg
fmul
mov
pushf
pop
sti
and
mov
subb
and
pop
in
and
repz
jecxz
dec
pop
cltd
icebp
pop
ds
push
es
div
adc
pop
inc
mov
sub
ror
jb
mov
mov
in
pusha
jg
in
add
call
push
jge
scas
int3
aad
scas
dec
or
sahf
loopne
xchg
hlt
sub
or
xor
sbb
mov
cli
mov
jns
test
aam
clc
sub
jns
movsb
int
jl
ja
push
mov
jmp
xchg
or
fdivrs
outsl
dec
clc
loopne
adc
repnz
data16
fwait
or
xchg
movsl
dec
into
les
adcl
pop
mov
mov
push
ljmp
mov
das
out
jecxz
jmp
stc
inc
in
stc
cmc
dec
xor
sub
repz
fstl
lret
bound
jae
pop
movsl
jl
xor
xlat
ss
pop
jmp
xchg
insb
inc
mov
xchg
push
movsb
sub
mov
iret
mov
dec
push
mov
roll
jge
push
add
mov
sbb
mov
in
in
ficomps
insb
cld
pusha
dec
lods
mov
sahf
loope
out
fdivs
dec
fistl
jbe
daa
jno
fistpll
xlat
pop
inc
sbb
dec
lret
pop
in
mulw
cwtl
adc
hlt
jg
or
xchg
mov
cltd
fadds
leave
add
add
aad
push
in
gs
rclb
inc
les
mov
sub
jo
sub
into
enter
push
add
xchg
lods
scas
adc
sbb
cs
outsl
push
sarl
gs
dec
xor
subb
js
mov
push
loope
cmp
dec
cmpsl
jle
push
fiaddl
int
xor
lret
pop
fcompl
addr16
cmpsl
cli
push
imul
cmp
jg
cli
ret
mov
inc
xchg
shll
cmpsl
cltd
mov
xor
jae
xor
xor
ret
dec
lret
or
in
lret
fwait
push
daa
push
mov
or
push
ror
loopne,pn
in
cmp
movsl
xchg
lock
xchg
out
pushw
inc
mov
xor
sub
inc
js
jns
xor
ja
popa
mov
je
xor
repz
inc
movsl
js
scas
xlat
in
insl
lea
popf
mov
sub
lea
rolb
fadd
fsts
mov
pop
pop
adc
mov
push
jne
mov
addl
xchg
loop
pop
addr16
imul
js
push
iretw
jg
repnz
inc
inc
mov
or
stos
insb
xor
gs
xor
cmp
xchg
mov
dec
pop
xor
std
sbb
cmp
aad
mov
inc
push
int3
sub
pop
cmp
scas
pop
rcrb
jnp
int
xor
jl
test
inc
pop
in
jl
inc
popa
xchg
cmp
loop
popf
push
lret
test
mov
push
dec
fimull
or
jne
or
dec
adc
cmc
pop
jo
lods
rorb
clc
js
daa
cmp
shrb
and
es
dec
popa
repz
and
jle
aad
jnp
xor
sbb
mov
and
dec
cmp
add
mov
faddl
ds
sarl
adc
lods
cmp
and
xchg
dec
jmp
jmp
xor
and
pop
dec
cmc
mov
pop
dec
push
cmp
mov
sub
leave
mov
arpl
or
rcl
movsb
jmp
in
jns
aam
ljmp
fwait
xor
scas
jecxz
fistpl
push
push
cmp
mov
or
inc
adc
enter
popf
test
sbb
movsb
aas
dec
fsub
test
cmp
sub
ret
pop
or
jmp
ret
xor
adc
scas
cltd
das
cmp
mov
push
fmuls
and
jae
mov
and
pop
lds
and
sbb
xchg
imul
mov
mov
push
gs
stos
js
sahf
test
cmp
stos
mov
lahf
cmp
js
cmp
sarl
sub
rclb
mov
lds
inc
or
loop
shlb
xchg
cmp
pushf
cmp
push
push
push
mov
sbb
add
push
fucomi
cmpsb
es
jnp
push
and
rcrl
push
push
imul
and
sahf
xchg
jnp
adc
mov
mov
stc
pop
cmpsl
and
fwait
sbb
bound
loop
mov
cmp
movsb
pop
lcall
inc
push
stc
sbb
stos
xorb
popa
dec
pop
jmp
mov
ja
adc
stc
inc
inc
stos
cmp
jnp
xchg
int3
pop
mov
es
sarb
adc
mov
dec
in
jno
mov
scas
sub
adc
jbe
or
or
pop
stos
or
ficoml
dec
xchg
scas
sbbl
insb
mov
xchg
xor
inc
push
cmp
adc
leave
aad
sbb
pop
fstl
adc
adc
mov
jp
lds
pop
hlt
or
outsl
int3
cs
inc
cmp
iret
test
dec
mov
sbb
add
bound
pop
jns
sbb
mov
lahf
dec
loopne
into
int3
jmp
xchg
pop
and
lcall
pop
jno
push
insb
jp
je
lret
addr16
mov
or
push
leave
scas
fsubs
jp
jb
cltd
xlat
pop
xlat
roll
in
push
out
sub
mov
push
iret
inc
shlb
push
inc
cmp
adc
adc
jmp
imul
lret
xor
inc
push
jmp
dec
loop
in
inc
jo
cmp
mov
push
sub
xor
xor
sti
cmp
or
mov
arpl
repz
pushf
fwait
adc
js
inc
cmp
push
cmp
push
lret
jne
or
popf
add
insb
sti
pop
inc
cltd
inc
sub
jb
xor
xor
push
gs
in
call
cmp
mov
xchg
cs
cmp
in
cld
sbb
add
adc
sbb
jecxz
js
add
stos
pop
outsl
and
bound
insb
pop
adc
xor
aaa
jmp
dec
xchg
pushf
ud1
mov
scas
mov
fwait
or
pop
cli
xchg
fsubl
mov
cmp
mov
xchg
push
fisttps
xor
lret
mov
aaa
add
adc
fstl
jbe
pop
movsb
cmp
jge
xor
sub
daa
rclb
repnz
arpl
cld
nop
out
js
cltd
ret
xchg
call
outsb
pop
sbb
jo
sbbl
jne
movsl
test
rolb
dec
std
xchg
xchg
sub
gs
jg
ja
rcr
mov
pop
test
push
scas
push
cmp
shrl
shrb
scas
push
push
mov
loop
stos
sbb
jle
inc
xchg
add
add
fisttps
adc
jmp
dec
jne
cmp
idivb
daa
arpl
in
mov
push
stos
mov
push
es
mov
fs
in
fsubp
jno
push
sbb
push
dec
int3
mov
fdivp
pusha
sar
add
and
pop
das
mov
enter
pop
dec
add
sub
scas
pop
mov
adcl
inc
jg
in
or
cli
outsb
movsb
xchg
fdiv
xorb
mov
shlb
push
ficomps
lods
sbb
push
into
scas
clc
cmp
ficoml
pop
addr16
xchg
leave
or
jp
scas
lcall
sub
pop
xchg
jp
cld
adc
mov
sbb
xor
lahf
hlt
and
out
jl
or
hlt
fiadds
dec
mov
andl
jmp
xchg
inc
pop
dec
shll
pushf
out
ds
xchg
push
push
sub
push
xor
push
pop
divb
cld
push
xchg
xor
fst
mov
in
gs
pop
dec
and
fistl
daa
sub
add
xchg
mov
bound
out
dec
push
test
frstor
mov
adc
pop
dec
xchg
in
shl
push
sub
cmp
fbstp
mov
cmc
scas
out
add
mov
out
jecxz
fcmovu
lcall
out
and
std
pop
or
xchg
imul
in
in
sbb
dec
les
imul
sbb
jnp
lock
add
and
in
cmp
stos
cltd
sbb
xchg
push
int3
ret
jnp
jecxz
sbb
jg
fsts
cmp
sahf
negl
out
xor
fildl
dec
mov
cli
mov
sbb
out
and
pop
lahf
pop
stc
mov
pop
stos
adc
sub
daa
pop
adc
add
bound
xor
ds
sti
pop
movl
dec
mov
jecxz
fcmovne
cmp
daa
jle
ret
cmc
imull
loopne
pop
call
add
orb
std
sub
test
xor
rol
loopne
sub
repnz
dec
or
outsb
in
cmpb
leave
addr16
mov
or
sub
daa
jg
or
pusha
nop
mov
test
mov
dec
test
dec
popf
addr16
mov
outsb
pusha
cmpsl
int3
cmpsl
sub
je
lret
shlb
jnp
sub
fcmovne
add
mov
xor
push
mov
xchg
mov
pop
xchg
sbbl
or
inc
fs
inc
test
stos
dec
pop
sub
push
inc
mov
mov
mov
scas
or
add
push
lret
mov
xchg
push
out
push
mov
mov
jmp
cvtps2pd
aaa
inc
sbb
idiv
inc
loopne
sti
push
fbstp
aad
pop
out
jg
xchg
call
imul
push
xchg
scas
dec
and
roll
inc
or
and
xor
cmp
push
and
repz
fimull
dec
and
cmp
cmpsl
fmul
inc
push
test
xchg
daa
mov
sbb
in
lcall
jne
ljmp
jo
lea
pop
out
imul
int
jns
into
add
dec
mov
cltd
imul
jo
imul
out
jl
test
jno
lahf
dec
icebp
mov
daa
xchg
mov
cwtl
inc
insl
test
xlat
lock
stc
lcall
sub
push
fs
pop
mov
out
out
inc
and
arpl
and
lahf
shrl
test
addr16
jl
mov
out
insl
push
mov
cmpsl
and
dec
or
push
fsubs
mov
daa
jmp
sub
jbe
mov
lea
scas
loope
stos
push
pushl
sub
mov
loop
popa
push
pop
cwtl
fdiv
pusha
loopne
mov
jl
push
sbb
fisubl
test
mov
inc
ljmp
loop
les
jae
js
repnz
ret
shr
outsb
outsl
scas
sbb
mov
adc
xor
dec
mov
sti
fstl
outsb
out
dec
not
or
cmc
rorb
mov
push
or
xlat
push
lods
jno
jbe
neg
out
push
adc
mov
cmc
cmp
cmp
lcall
pop
mov
jo
inc
xchg
loopne
push
add
lds
cltd
ljmp
adc
stos
shrl
mov
cmc
pop
push
pop
repz
aad
jns
xchg
pop
inc
les
cwtl
addl
clc
ds
test
xchg
inc
ret
jno
in
and
mov
push
sbb
fistl
mov
lret
jns
dec
mov
scas
outsb
adc
out
call
jl
push
adc
inc
and
pop
in
and
pop
add
jle
stos
ljmp
sbb
out
mov
cmp
and
push
lock
dec
or
roll
jp
add
cmp
adc
pusha
lds
lret
pop
jo
cs
into
cmp
add
xor
int3
cmc
sarb
add
push
inc
iret
cmpsl
arpl
sar
stos
inc
es
out
popf
jge
xor
fdivl
mov
inc
dec
and
rcrl
inc
push
sbb
mov
jbe
cmp
pushf
jmp
lock
lcall
ds
jae
jb
dec
push
addr16
hlt
cmp
inc
xchg
push
in
xor
sub
lret
inc
inc
pop
stc
repz
and
add
or
or
cmp
idiv
cmpsb
cmpl
imul
es
in
push
xchg
sub
sub
jne
jb
and
cmp
sbb
insb
stos
pop
adc
jae
add
or
out
jbe
xchg
mov
daa
testl
mov
push
hlt
cmp
aaa
jp
fldenv
aaa
push
inc
or
mov
loopne
xor
dec
divb
out
stc
stc
addr16
add
sbb
dec
out
mov
xor
mov
dec
loop
sub
mov
mov
sub
xor
es
negb
lret
out
xor
inc
mov
stc
ja
push
mov
sub
les
mov
and
cmpl
cmp
xor
adc
add
push
jb
sub
mov
mov
adc
dec
sbb
lahf
mov
pop
into
lret
gs
jmp
and
pop
push
mov
lock
push
mov
mov
adc
push
fbstp
adc
and
iret
sub
push
mov
cmc
lods
daa
adc
es
mov
nop
insb
ret
shlb
lcall
xchg
mov
js
cmp
add
jp
or
cmp
mov
iret
call
popf
jne
xchg
ljmp
std
fisubs
mov
or
xlat
leave
mov
lahf
call
push
mov
xchg
mov
popa
cwtl
cmp
mov
mov
lods
jl
xchg
or
cmp
sbb
mov
mov
popf
inc
xor
test
cmp
hlt
fdiv
adc
jecxz
dec
sbb
lock
test
out
les
fistpl
cmpsl
popa
pop
cwtl
lahf
fldt
out
pop
stos
scas
nop
stc
test
lahf
hlt
push
int3
movsb
and
or
fisubl
rorl
pop
imul
sbb
jno
cli
outsb
add
push
sbb
push
add
sbb
popa
pop
fdivrl
jmp
xchg
int3
and
ret
addr16
cmc
and
loop
or
jb
daa
mov
outsb
out
and
push
das
mov
scas
mov
mov
sub
xchg
sbb
xor
rcrb
sbb
and
mov
shlb
decl
push
pop
movsl
jp
fadds
cltd
std
lds
adc
sbb
andb
mov
adc
ret
insl
xor
push
jge
fnstenv
add
mov
or
cmp
cmp
add
mov
mov
test
iret
in
lret
vandps
rorb
inc
jne
repz
xchg
xlat
ret
les
xchg
push
push
ja
nop
and
or
sub
fs
dec
mov
lea
pop
movsl
loopne
xchg
push
decl
stc
lret
sub
leave
mov
adc
sub
ljmp
lret
std
push
mov
push
mov
stos
ljmp
push
mov
jg
bound
add
js
in
adc
adcb
repnz
sbb
icebp
out
mul
aam
nop
mov
pop
repnz
jmp
roll
or
fdivrl
mov
out
movsl
xchg
rep
imul
adc
bound
test
out
inc
hlt
insb
mov
mov
out
repnz
cs
lahf
mov
cmp
adc
insb
adc
out
mov
ja
inc
cltd
add
jne
sarl
pop
xor
xchg
inc
or
jo
xlat
test
in
add
xor
dec
das
scas
arpl
lahf
mov
mov
sub
outsb
ficomps
rcr
shrl
dec
dec
call
inc
std
mov
icebp
dec
jg
cli
push
xchg
inc
insl
mov
dec
jmp
mov
sbb
das
xchg
mov
aam
push
shll
add
mov
mov
int3
pop
and
dec
pop
mov
cmp
lahf
pop
ficoml
push
bound
cli
fildll
popa
shll
les
mov
mov
cwtl
outsl
pop
cmp
xlat
jg
or
ja
add
lcall
adc
rclb
sub
lret
pop
popf
sub
mov
cwtl
push
fwait
or
imul
imul
out
cld
ror
sub
mov
sub
or
mov
inc
adc
ljmp
popa
add
lret
or
dec
pop
or
outsb
push
xchg
adc
insb
sbb
sub
outsb
les
push
rcrb
fimull
aaa
ss
cld
ss
adc
jmp
xchg
mov
and
negl
mov
pop
ja
jecxz
out
sahf
and
test
and
sbb
jmp
iret
std
jne
xor
sbb
lahf
iret
mov
jmp
lds
adc
fs
sub
sbb
lcall
adc
push
push
popa
push
xor
sahf
mov
mov
cltd
shrl
movsb
ja
icebp
mov
js
sub
xor
ret
sub
mov
cmp
fisubl
daa
into
mov
in
sbb
mov
icebp
out
data16
test
add
jp
in
jbe
dec
flds
iret
inc
add
loopne
mov
sar
pop
sub
xorl
pop
fcoms
outsl
mov
jge
in
aam
dec
shrl
mov
mov
popa
mov
or
push
fisttpll
lret
dec
int
jbe
inc
xlat
cs
mov
inc
arpl
mov
jns
push
loopne
lds
int3
mov
jbe
daa
decl
gs
adc
jns
pop
mov
scas
in
lock
mov
lods
add
cs
lods
inc
rcrl
pop
push
rolb
fdivl
cmpsb
out
adc
in
clc
lea
fdivrl
pop
inc
push
mov
push
pop
mov
xor
shrb
aad
mov
sti
daa
mov
xor
test
mov
dec
std
addr16
popf
repz
shrl
add
testl
jecxz
lock
rclb
lret
insl
mov
mov
sub
sub
pushf
mov
out
fmul
rolb
xchg
repz
mov
sub
cltd
rol
and
cld
xor
push
mov
out
scas
jne
in
fs
or
lods
iret
movsl
shlb
shrb
out
adc
and
shll
addb
xchg
or
rcrb
bound
mov
in
mov
popa
stos
cwtl
mov
repz
cli
pop
inc
in
push
cmovs
int3
jle
inc
or
inc
loop
adc
dec
push
sbb
decb
fs
lret
push
mov
scas
lds
cmp
and
push
xor
in
movsl
cwtl
movsb
enter
testl
push
pop
inc
inc
jb
jl
push
add
in
jne
loop
pop
mov
pop
iret
pop
push
pop
adc
aad
cmp
data16
jb
outsl
outsb
xor
fiaddl
cwtl
jae
ds
fwait
nop
jg
mov
push
dec
pop
and
jbe
adc
jmp
mov
xor
dec
mov
add
sbb
mov
inc
cmp
jae
mov
loopne
add
xor
out
and
sub
sarl
mov
xor
lret
rclb
adc
xchg
into
test
es
push
scas
fisttps
in
rcr
push
mov
mov
pop
test
iret
dec
pop
inc
cmp
add
sbb
lret
or
test
out
in
and
fcoms
rolb
dec
jne
lret
mov
pusha
dec
fdecstp
xor
fisttps
mov
mov
jne
push
sub
cmp
add
mov
dec
popa
loope
sbb
push
call
xchg
call
insl
add
mov
sbb
xchg
jmp
mov
xchg
sbb
push
daa
int3
xor
pop
mov
cmc
xchg
outsb
sbb
sub
push
ret
jno
in
sub
mov
jl
fdivrl
add
add
addr16
sbb
test
cmp
adc
xor
fmuls
sbb
pushf
aam
pusha
and
xchg
cmp
jle
and
repz
xor
fisubl
mov
cmp
jnp
add
aad
inc
popf
inc
inc
aam
div
lock
mov
mov
mov
pop
addb
mov
pop
repz
jl
mov
mov
cs
sbb
nop
push
pop
xor
xchg
adc
dec
frstor
nop
and
and
lock
sbb
popf
stos
outsb
mov
adc
sbb
sarl
sub
sbb
imul
dec
add
cli
roll
in
xchg
lcall
sahf
add
ss
std
cwtl
or
dec
pop
stos
xchg
faddl
add
ss
nop
mov
mov
stos
repz
dec
and
mov
sub
outsb
aaa
xor
or
enter
inc
lods
xor
js
imul
mov
push
mov
fwait
lahf
xchg
add
add
mov
ljmp
mov
inc
dec
inc
in
xor
mov
aam
or
xor
in
push
loop
fbstp
sub
test
dec
inc
pusha
pushf
sbb
aam
mov
hlt
inc
adc
cli
xchg
leave
or
das
xchg
iret
cwtl
or
cmpl
xor
cwtl
push
loopne
lock
ret
out
dec
js
data16
inc
fsubl
inc
mov
fimull
adc
inc
xchg
pop
je
inc
leave
mov
cmp
pop
sahf
loopne
lea
loop
into
imul
rorl
sbb
and
leave
add
xchg
insb
or
test
mov
repnz
ficoms
inc
or
inc
lock
jecxz
gs
dec
mov
mov
call
adc
dec
ss
and
inc
adc
fsubp
xchg
repnz
cltd
icebp
in
es
cmpsb
pop
mov
pushf
ficoms
xchg
insb
stos
fwait
adc
sbb
cli
cmp
ja
ljmp
push
aaa
mov
cmp
xor
or
std
shll
xor
mov
sub
cld
inc
lcall
pop
push
cltd
inc
xchg
jnp
pushf
mov
adc
mov
inc
jno
cmp
add
ja
push
mov
jb
xchg
roll
sub
adc
in
in
add
sbb
imul
dec
clc
or
sbb
fstps
mov
ret
pushf
push
cwtl
loop
pop
xor
dec
loopne
movsl
mov
fsubr
pop
jne
dec
push
add
shrb
out
xchg
sub
inc
sahf
stc
or
daa
adc
pushf
or
dec
imull
xlat
fadd
in
imul
pop
push
pop
xchg
pop
or
aad
inc
ja
sahf
pop
lret
fs
iret
or
jb
mov
outsb
repnz
cs
xchg
jp
hlt
andb
outsl
iret
sbb
jne
test
sbb
and
sahf
add
jnp
addb
mov
rcll
shlb
pop
sbb
pop
aam
sub
mov
cmp
xor
addb
aas
jnp
pop
adc
cltd
ret
mov
pop
xchg
mov
pop
push
push
push
dec
adc
jns
sbb
stc
mov
sbb
sbb
mov
out
mov
sahf
jp
mov
loopne
fldcw
loop
mov
fcomp
pop
and
adc
pop
cli
xchg
pop
jnp
sbb
pop
jl
lret
jne
rolb
xchg
cltd
xchg
push
xchg
inc
or
or
adc
sub
adc
jne
mov
pusha
lock
out
lods
sbbb
add
mov
mov
xor
mov
bound
nop
xchg
fildll
push
pop
cmpsl
or
cmp
cmc
xor
test
pushw
inc
pop
ret
adc
mov
pop
mov
adc
push
mov
rcrb
cmp
dec
out
inc
hlt
xchg
pop
imul
push
or
push
frstor
inc
out
xchg
loopne
add
add
cmp
fbstp
mov
js
inc
dec
stos
loopne
xchg
inc
jb
push
cli
mov
lahf
add
or
fists
jle
add
push
add
sahf
fnstcw
test
cld
mov
negb
mov
cmp
dec
int
xchg
pop
xor
push
lock
mov
add
xchg
ficoms
scas
fstpl
popa
and
insl
mov
ljmp
fildll
pop
jnp
cmpsb
leave
incl
cmp
dec
sbb
pop
sbb
movsl
dec
pop
dec
les
out
and
or
repz
jno
fsubr
jne
inc
stos
mov
mov
xchg
fs
cltd
mov
mov
inc
fisttpl
jb,pn
dec
sbb
inc
lcall
ljmp
gs
push
test
pusha
inc
fstps
ss
andl
das
lods
mov
out
aad
jp
push
cmp
es
mov
cmp
jno
xchg
lods
mov
das
movsb
in
mov
mov
std
push
sub
cmpsb
in
cmp
jmp
stos
std
stos
sbb
mov
scas
cmp
aaa
inc
inc
mov
dec
cmp
jae
jmp
cltd
ljmp
outsl
fimuls
push
add
cmp
insl
inc
pop
pop
xor
wbinvd
xchg
fucomp
rcll
leave
pusha
lock
pusha
mov
fstpt
add
cwtl
mov
lret
sahf
lods
sbb
mov
adc
scas
inc
mov
mov
or
jp
or
int3
inc
popa
xor
out
fmull
jl
nop
dec
push
mov
insb
lahf
test
push
xchg
insl
shlb
lcall
or
jnp
or
sbb
push
jbe
addl
inc
xchg
push
out
sahf
cmc
in
divl
scas
repz
orl
dec
lcall
in
lahf
psrlq
sbb
fcompl
fxch
int
and
sti
stos
pop
cmp
inc
lods
or
addr16
cld
jae
icebp
inc
out
sub
inc
push
int
lret
push
fcoml
and
fildll
jecxz
inc
cli
add
iret
roll
or
stos
jle
stos
pop
ljmp
cmpsb
ja
std
in
test
pusha
clc
js
popa
push
icebp
push
pop
cld
jecxz
or
adc
mov
or
clc
pusha
pop
in
jl
push
fcompl
int
cltd
aam
ret
mov
dec
adc
enter
mov
out
push
rcrl
xchg
and
out
lea
lret
add
scas
aam
fildll
enter
scas
pop
js
jno
dec
mov
int
pop
cld
inc
adc
in
push
mov
pusha
cs
cltd
dec
data16
push
lods
into
cmpsl
push
cmp
icebp
adcb
xor
cmp
lea
xchg
mov
mov
lret
outsl
xchg
cmpsl
dec
sub
sub
cmp
sbb
mov
notb
and
dec
jge
add
push
add
ss
call
jg
es
mov
jg
dec
movsb
cmp
test
adc
int3
aaa
push
mov
add
in
or
std
cmp
xchg
xchg
mov
out
int
add
lret
aaa
aad
cmp
movsb
es
fs
xchg
aaa
jno
sub
mov
dec
xor
std
rcrb
movsl
jo
cmpsl
aaa
rorl
loopne
shrl
cmc
ss
mov
sub
rorl
mov
mov
cmc
subb
sbb
add
adc
cltd
sbb
inc
aam
adc
inc
add
shlb
or
out
jle
sbb
sub
rorb
xor
mov
std
sub
adc
ljmp
stos
add
mov
cmp
xor
leave
cmp
les
shl
aam
cmp
or
jecxz
ja
dec
pop
in
pop
mov
ret
and
pop
aas
fucomp
jp
jbe
lret
mov
aas
jecxz
repnz
idivb
mov
mov
std
push
jno
jge
popa
mov
pop
mov
mov
dec
in
imul
mov
sub
pop
loopne
in
jb
js
ljmp
add
sub
mov
mov
out
push
push
iret
add
push
dec
push
sarb
outsl
into
outsb
and
xchg
imul
testl
inc
test
pop
mul
jae
hlt
dec
divl
out
cmp
and
popf
icebp
mov
sbb
in
inc
enter
and
lock
not
xchg
js
cmp
push
sarb
in
dec
sub
shll
stc
push
aam
lods
stos
lock
sub
push
pop
insl
cmp
pop
mov
add
jmp
stc
inc
add
div
push
aaa
mov
mov
aad
cs
dec
xor
adc
pushf
or
dec
sbb
mov
cmp
pop
mov
sbb
cmc
add
mov
cli
lret
mov
mov
js
stc
mov
addr16
sbb
cwtl
xchg
das
outsl
loopne
jge
sbb
or
cmp
jmp
mov
sti
cmp
mov
rcll
dec
das
sbb
jge
pushf
xlat
xor
lock
sbb
or
fnstsw
sbb
pop
lcall
sub
and
imul
aam
push
rcll
jno
add
lahf
jne
push
scas
enter
imul
adc
mov
stos
inc
sub
ja
pop
es
dec
sbb
jmp
repnz
mov
mov
imul
push
dec
add
sbb
mov
jecxz
inc
push
clc
fxch
scas
fistl
mov
push
cli
repz
bound
inc
cmp
fidivs
bnd
inc
jge
mov
push
sbb
xchg
xchg
repnz
das
pusha
mov
mov
lock
inc
xor
lock
cmp
jo
jmp
cs
ja
sbb
pop
imul
push
dec
and
bound
cli
mov
sub
dec
aam
testb
mov
mov
push
and
aaa
mov
aad
adc
push
xor
jno
xor
test
loope
cld
xchg
hlt
in
and
xchg
mov
sub
ds
and
sub
xor
testb
mov
dec
mov
ss
sub
push
loop
add
push
add
pusha
xchg
xchg
and
xor
aas
jae
or
gs
rcrb
dec
arpl
jne
int3
inc
fisttpl
sbb
inc
mov
and
xchg
jp
adc
pop
mov
push
orl
pushf
fs
xor
xor
and
in
imul
and
orl
jmp
movsl
pop
in
cld
mov
fsts
cmp
or
sbb
in
mov
sbb
mov
jbe
jl
pushf
ficoms
lret
inc
xor
mov
pop
das
stc
sub
lret
fs
sub
adc
jae
mov
inc
dec
sarl
cmp
xchg
out
inc
or
push
push
data16
cld
push
push
adc
adc
adc
clc
xlat
add
jl
call
in
pop
popf
mov
mov
in
clc
fs
insl
ljmp
adc
hlt
popl
out
and
inc
push
push
stos
push
cmp
dec
jae
lret
int
leave
mov
into
icebp
jbe
push
out
jmp
dec
jno
mov
and
push
add
andb
pop
lods
and
inc
adc
les
outsl
into
adc
add
movsl
dec
aam
or
add
add
mov
mov
das
add
hlt
or
mov
clc
fisubl
dec
mov
rclb
out
or
pop
mov
jnp
or
inc
outsb
adc
leave
pushf
push
lcall
out
aaa
sub
xor
xchg
inc
out
push
and
push
push
mov
repz
mov
loopne
sbb
mov
mov
adc
xchg
pop
js
xor
cmc
out
xor
rcll
cli
sahf
addr16
cmp
jnp
fcmovnu
imul
push
dec
jb
push
xchg
out
adc
subl
jbe
rclb
jge
fcomps
dec
notl
fisubrl
jl
ftst
cmp
shlb
repz
sub
aas
mov
sub
and
lds
daa
mov
stos
sbb
stos
xor
xor
lahf
inc
icebp
xorb
div
lret
sub
push
jmp
outsl
fsubrs
hlt
adc
flds
adc
in
loop
jne
loop
adc
fstpl
dec
pop
movsb
aaa
aam
out
loope
jmp
add
pop
shlb
push
out
sbb
xor
cld
pop
mov
fwait
cmp
inc
xor
cmp
or
xchg
dec
sbb
nop
pushf
cwtl
movsb
mulb
icebp
sahf
mov
cmp
xor
adc
fcoms
xor
pop
pop
xor
getsec
es
xor
idivb
fsts
sbb
jno
das
std
jns
test
out
add
push
lahf
mov
xchg
rol
cmp
cmc
push
data16
aas
fstpt
in
push
aas
addl
add
jg
mov
shll
fmul
pop
icebp
sub
imul
sub
pop
aam
xchg
cwtl
add
outsl
push
clc
movsb
jmp
fdiv
xor
cld
outsl
pushw
mov
das
inc
cmp
fmull
in
fcompl
inc
cld
mov
out
xor
add
xchg
jae
outsl
push
cmpsb
popa
kunpckwd
sub
push
pop
jmp
xchg
xchg
push
imull
aam
mov
in
adc
outsl
and
fcomp
mov
dec
jp
mov
mov
loope
inc
es
inc
call
insb
icebp
in
mov
xor
dec
psubd
arpl
dec
out
int
cmp
mov
scas
or
out
subl
adc
clc
add
std
xor
or
push
add
loop
fnsave
mov
rcll
or
pushf
xchg
int
test
mov
outsb
lret
mov
or
cmp
daa
push
xchg
mov
cmp
stos
loope
mov
out
outsl
mov
jmp
imul
push
cmp
mov
mov
mov
cmpsl
int
lea
mov
push
lcall
stc
push
xchg
cmc
aaa
jbe
jnp,pn
xlat
adc
divb
clc
push
lcall
xor
subb
mov
stc
mov
mov
iret
pop
and
mov
cmc
mov
mov
mov
jae
pcmpgtd
xchg
insb
into
js
sbb
cmp
add
jmp
and
or
jl
sbb
pop
aam
mov
push
aam
push
sbb
push
dec
in
adc
cld
cmp
mov
add
pushl
add
mov
sbb
jp
out
add
sub
ss
in
aad
push
sub
push
test
cwtl
adc
lock
lock
jl
adc
loope
iret
xchg
outsl
inc
mov
jno
aaa
adc
lods
push
inc
outsb
punpckhwd
jbe
and
sub
or
mov
sti
push
sub
jecxz
in
popa
in
dec
xchg
cmpsb
mov
add
xlat
cmp
push
mov
div
jbe
mov
test
xor
cmp
pop
out
pusha
or
fwait
insl
arpl
int3
cwtl
enter
dec
mov
fistpll
jecxz
loopne
in
xor
outsl
add
pop
flds
cmp
pop
lods
cmp
lods
add
sti
cmp
pop
test
pop
cld
jno
and
popf
shlb
stos
dec
dec
push
dec
call
repnz
mov
test
jmp
pop
lret
jl
fwait
cmp
add
pop
lcall
mov
cmp
sub
js
jne
and
iret
fst
push
sub
push
movsl
push
fwait
pusha
cmp
addl
std
popf
mov
sbb
js
rorl
lea
push
stos
sbb
or
outsl
js
cmp
xor
dec
fadd
xchg
xchg
push
in
mov
shl
test
sarl
cmp
inc
jmp
push
pop
in
sub
lcall
mov
pop
cmp
das
push
fisttpll
in
push
mov
int
ret
mov
mov
stos
pop
ret
inc
sub
test
xchg
faddp
dec
fs
int3
loope
data16
cmp
js
mov
push
and
jae
fistps
mov
aaa
repz
pop
or
mov
fsubrs
jg
and
mov
ljmp
mov
mov
in
mov
inc
or
mov
pop
xor
out
cwtl
pop
pushf
cmp
mov
in
jae
jns
inc
pop
adc
push
test
sub
bsf
xor
int3
inc
sbb
out
jge
out
popl
out
push
sbb
les
fildll
cmpl
leave
push
jecxz
inc
mov
inc
dec
clc
or
out
out
punpckhwd
das
push
or
in
hlt
jmp
cmp
pop
mov
xlat
gs
adc
jno
test
lds
mov
je
dec
arpl
aaa
sbb
gs
xchg
lcall
sbb
cmc
jo
mov
push
mov
out
or
mov
xchg
stc
push
pop
add
ret
lret
inc
movsb
mov
ds
cmp
xor
aad
ss
cmpsb
dec
je
mov
add
shll
popf
cs
push
movsb
loopne
mov
jbe
pop
mov
inc
bound
xor
in
inc
js
shl
stc
jo
lods
movsl
or
sub
mov
xor
mov
and
sbb
push
aam
adc
pop
mov
sub
inc
gs
aas
add
dec
ss
clc
inc
lcall
jb
fsubrl
adc
and
push
push
jae
ret
lods
add
pop
into
movsl
or
adc
aam
fmull
adc
iret
push
imul
pop
cld
cmc
xor
xor
and
addr16
repnz
daa
push
cmp
int
lahf
mov
lds
hlt
or
cmp
incl
push
mov
fcoml
adc
addr16
sbb
sub
xlat
mov
xor
pop
push
sti
push
mov
into
push
dec
clc
aam
jecxz
push
jb
mov
adc
mov
adc
ret
jne
pop
sbbb
sub
pop
cmp
and
sti
adc
add
pop
mov
jl
xchg
int
pusha
and
out
cmp
push
sbb
rcll
pop
daa
pop
and
xchg
mov
or
jge
nop
inc
inc
mov
mov
xlat
dec
mov
imul
icebp
stc
popa
inc
ss
lret
nop
jae
mov
bound
sahf
pop
and
jecxz
mov
cmovbe
push
jo
push
in
cmpxchg
jle
jmp
jp
cmovs
iret
inc
xor
daa
mov
mov
mov
lcall
insb
mov
in
push
add
into
cli
adc
orl
sahf
jns
lret
fistl
mov
or
mov
fists
xor
push
rcrl
jg
pop
in
xor
mov
push
mov
ficoms
rcr
pop
fwait
xchg
mov
ljmp
fadd
and
xchg
fsubl
divb
jae
sbb
movsb
cwtl
jnp
push
fnstsw
mov
int
cwtl
lds
mov
push
leave
cmpsl
sahf
lret
orb
or
jecxz
cmp
out
cmpl
push
push
ljmp
xor
pop
xchg
ret
or
js
repnz
jne
sub
lcall
sti
pop
dec
stos
aaa
repnz
dec
jno
sbb
cmpsb
add
pop
sbb
xor
jecxz
pop
in
or
stc
insl
xchg
xchg
add
xchg
add
add
out
arpl
pop
test
pop
and
or
test
mov
cmpsl
sub
jp
cwtl
or
jecxz
xchg
cmc
repz
adc
ja
rcrl
and
hlt
test
dec
out
mov
push
dec
js
imul
decb
js
xlat
cli
pusha
in
lds
scas
int
adc
pop
adcb
loopne
sti
dec
rorl
xchg
xor
adc
xchg
fstpt
pmulhuw
xchg
mov
arpl
pushf
dec
pushf
mov
mov
xlat
mov
lods
fs
out
xchg
into
rcr
inc
adc
nop
out
pushf
fdivrs
mov
pop
shlb
and
frstor
push
lsl
ss
addr16
mov
and
pop
adc
push
lock
loopne
pop
adc
mov
jbe
push
push
pusha
lds
hlt
test
adc
fwait
cmpsl
add
xchg
mov
stc
mov
jmp
imul
xor
pop
fwait
xchg
sub
xchg
sub
call
loope
movsb
xor
nop
jbe
aaa
pop
jns
sub
scas
mov
in
aam
cltd
add
test
pop
lods
push
xchg
push
or
rcrl
das
mov
adc
pop
xor
dec
data16
loop
sbb
add
xor
mov
cmp
pop
lcall
imul
lret
loop
mov
jns
inc
sbb
test
jns
mov
sbb
lds
fisubs
std
push
mov
pop
xchg
pop
push
mov
dec
dec
fnsave
jmp
cltd
subl
and
pop
imul
dec
aaa
scas
daa
imul
sbb
aaa
call
ret
and
lds
jl
movsl
lret
addb
stos
inc
adc
push
movb
jns
bound
sub
mov
cmpb
and
push
negl
jb
or
fwait
sbb
icebp
jmp
icebp
mov
mov
in
je
fcomps
test
mov
jne
in
inc
cltd
je
fdivrl
inc
fs
sbb
xor
sub
push
negl
adc
nop
dec
dec
jbe
xor
jp
andl
sub
jnp
jns
je
push
jb
sub
xor
cmp
or
fs
push
push
loope
sahf
xor
mov
pop
add
cmpsl
js
xlat
dec
pusha
aas
ret
cmpsb
dec
outsb
fdivr
or
mov
shrl
popa
insl
movsl
pop
test
adc
iret
int
inc
adc
jb
xlat
add
imul
add
fwait
push
pop
ljmp
icebp
je
fwait
add
out
aas
aad
mov
sahf
mov
jbe
ss
add
xor
dec
mov
cwtl
push
mov
mov
and
popf
mov
pop
xor
xchg
int3
int3
dec
mov
scas
mov
insl
mov
mov
int3
push
out
hlt
div
imulb
sub
cmp
cltd
ds
jl
daa
aas
jmp
out
es
or
cwtl
inc
fcmovb
adc
xor
in
call
loope
in
subb
mov
adc
ret
cmpb
repnz
lock
aam
iret
or
or
or
mov
jg
sub
xlat
dec
cli
jl
push
out
insl
dec
or
mov
aam
push
cmpl
inc
movsl
adc
aas
movsb
mov
repnz
test
mov
push
std
stos
or
ss
call
inc
jb
cld
push
or
jle
and
dec
js
mov
test
daa
lcall
lret
push
cld
dec
dec
int
ret
inc
xor
mov
or
inc
cwtl
jbe
xchg
mov
pop
cli
test
leave
mov
xchg
inc
push
stos
xchg
xchg
jmp
movsl
jnp
cmp
insl
mov
cmp
adc
scas
sarl
jecxz
jae
add
enter
or
sbb
add
inc
push
sub
xchg
cmp
scas
xchg
pop
sbb
ret
les
jge
jo
lret
lea
lret
dec
xorb
mov
ret
xor
xchg
push
test
and
fnsave
stc
xchg
daa
sub
xchg
sbb
sbb
jns
rcll
jecxz
push
mov
cwtl
or
mov
lahf
dec
push
fldcw
jle
mov
int3
mov
dec
mov
cmp
std
pop
lods
or
lds
push
pop
fwait
dec
out
leave
xlat
insl
dec
pusha
test
jl
int3
push
inc
push
jl
jecxz
jne
adc
pushf
mov
in
nop
fisubl
push
or
push
add
loope
mov
cmp
ret
mov
les
imul
leave
mov
add
stos
ret
mov
adc
mov
adc
xchg
outsb
dec
mov
cltd
lret
ljmp
jle
add
shr
jl
sarl
add
fnstcw
dec
out
cmpl
cmp
scas
sti
mov
mov
add
xor
les
enter
mov
and
fstps
fiadds
lret
mov
scas
movsl
fildll
or
or
inc
movsl
jnp
pop
repz
lea
sub
and
aad
movsb
lahf
inc
nop
jb
sub
out
pop
gs
xchg
ret
mov
ret
push
ja
inc
push
jg
sub
add
jp
xchg
adc
insb
lods
pop
pop
jno
clc
fsubs
or
clc
sub
jmp
aaa
imul
ds
out
mov
mov
mov
mov
mov
daa
ja
mov
sbb
call
into
dec
xor
mov
loop
pop
xchg
cmp
mov
adc
jle
adc
push
pop
loop
inc
into
out
loopne
lcall
and
push
jo
or
mov
jns
xchg
in
push
ret
fiadds
lcall
sbb
xor
xlat
jo
sbb
dec
pop
divb
jb
sbb
ret
aas
fadds
rcll
jmp
xchg
fwait
shl
jo
data16
fisubs
test
repz
orb
pushf
out
jl
push
subb
fcomps
inc
enter
mov
jnp
daa
cmp
mov
pop
add
mov
ret
imul
fisubrs
rcrb
sbb
aaa
sub
mov
outsb
pop
cld
add
push
adc
dec
data16
scas
pop
xor
addl
movsl
call
aaa
xchg
xor
pop
xchg
aam
xchg
xor
clc
add
dec
mov
inc
mov
aam
push
loop
cwtl
lahf
jl
mov
mov
lret
popf
dec
mov
jecxz
xchg
pop
xchg
cmp
dec
mov
pop
stos
or
out
mov
xchg
sbbl
stc
sub
pop
cmc
std
push
stos
clc
nop
adc
ss
mov
dec
dec
sub
cmc
dec
sub
xor
iret
pusha
dec
cmpsb
cmc
and
lret
test
out
jg
popf
ljmp
mov
jmp
in
inc
mov
fs
mov
pop
call
stos
mov
stc
dec
xchg
cmpsb
incl
push
loop
sbb
cmp
roll
insb
testl
cmpsb
popa
dec
push
mov
push
cmpsb
aam
or
pushf
fwait
movsl
std
mov
mov
mov
and
mov
shll
arpl
stc
frstor
jle
pop
std
ud2
sbb
mov
dec
dec
push
and
shrl
mov
dec
cmp
xorb
testl
cmp
ret
std
pop
lods
pop
jb
mov
dec
add
out
mov
pop
shrb
div
int
mov
inc
jbe
pop
pop
ljmp
or
mov
xor
pop
into
or
sbb
sub
sbb
mov
xchg
inc
stos
adc
loop
sub
xchg
push
jne
jge
icebp
mov
bound
lahf
popf
movsb
add
out
or
cmp
jns
sub
cmpsb
jg
push
dec
xchg
inc
jg
jl
lods
insb
and
pop
addr16
mov
mov
fbld
push
cmpsl
inc
xchg
pop
dec
ficoms
mov
push
push
mov
mov
in
loop
clc
ret
push
and
pop
addr16
std
nop
mov
cmp
leave
shlb
dec
loop
add
dec
xor
int
aaa
cmovge
push
and
mov
cmc
pop
out
loope
mov
sbb
sahf
xchg
cmp
xor
inc
jle
jbe
cmpsl
sbb
aad
dec
outsl
ret
popa
pushf
cmp
cmc
jg
add
xchg
sbb
test
jb
xor
dec
xor
bound
jnp
push
lret
mov
adc
ljmp
sahf
mov
out
and
xchg
push
mov
fdivs
adc
inc
push
into
pop
adc
adc
fldt
icebp
and
cmpsl
pop
sbb
pop
andl
pop
cmc
mov
repnz
imul
add
fldt
mov
jnp
mov
jnp
les
jmp
push
adc
add
xchg
aas
sub
repnz
jge
ds
pop
stc
jle
out
mov
jp
push
lods
dec
adc
push
frstor
and
or
push
mov
push
data16
sub
movsl
dec
rorb
fxch
jae
test
mov
les
push
or
xchg
pop
dec
ret
sub
add
fistpll
lret
pop
mov
arpl
and
mov
iret
cmp
imul
aam
scas
lds
mov
mov
dec
cmp
stos
lea
aam
icebp
out
jb
je
xchg
xlat
mov
dec
jg
sub
push
pop
jmp
fdivp
rcl
add
bound
or
pop
mov
movsl
jg
cmp
jae
inc
out
mov
sub
dec
arpl
mov
inc
mov
jmp
gs
arpl
push
adc
mov
mov
gs
je
ret
cmp
sbb
dec
jg
dec
cmpsl
mov
xorb
in
jnp
bound
inc
shll
out
pop
sub
hlt
jmp
inc
outsl
inc
cmp
inc
aam
and
gs
insl
mov
pop
je
imul
test
enter
insl
inc
enter
lret
pop
in
pop
ds
mov
or
pop
movsb
nop
jno
sbb
leave
jne
xchg
shll
mov
pop
jmp
dec
or
and
mov
xchg
add
andl
add
cli
stos
and
jecxz
xor
push
xor
jne
orl
shlb
mov
cmp
pop
repnz
popf
sbb
in
jl
mov
movsl
push
icebp
cmp
pop
out
xor
std
test
repnz
aam
jo
ja
xchg
pusha
xchg
mov
xchg
mov
clc
push
cmpsl
out
ljmp
dec
inc
sub
scas
sbb
rclb
mov
push
addr16
pop
add
cli
je
movsl
mov
mov
xchg
xor
mov
in
adc
dec
orl
fimull
adc
pusha
test
addr16
sub
lds
cmp
imul
rcrl
pusha
pop
in
jae
insl
mov
idivb
cmpsb
test
sarb
sub
sti
lcall
and
loopne
jb
xor
mov
sbb
mov
into
mov
mov
lods
pop
xchg
jmp
mov
add
sub
xchg
fsubs
adc
aas
xor
xorb
ja
dec
enter
jae
outsb
sub
cmpsb
rcrb
lock
jns
cltd
icebp
mov
icebp
mov
loop
inc
fdiv
xlat
push
div
jo
or
js
mov
jno
mov
daa
mov
ja
mov
cld
xor
mov
mov
mov
out
adc
aas
push
repz
cmpsb
dec
pushf
rep
mov
in
cmpsl
imul
mov
test
cmp
loop
inc
cmpsl
ffreep
test
sarl
cli
mov
ja
or
lcall
mov
xchg
fs
dec
clc
lea
loope
and
mov
ljmp
loop
cmp
push
xchg
lahf
pop
repz
scas
repnz
mov
negl
test
test
mov
aas
aam
push
add
movsl
adc
icebp
mov
mov
push
xchg
ljmp
and
adc
pop
std
inc
mov
pusha
xchg
or
cwtl
repnz
sbb
shl
jns
pop
iret
cli
sahf
dec
bound
enter
push
and
out
clc
shll
xor
rcrl
mov
call
or
aaa
movsl
sbb
cmpsl
and
dec
flds
mov
push
out
xor
in
xor
test
pop
jle
add
test
dec
cld
or
mov
lds
push
mov
inc
jno
mov
test
leave
fxch
dec
out
mov
jno
lcall
or
cmp
int3
add
pop
or
shlb
sbb
fildl
dec
pop
int3
sbb
dec
inc
ljmp
inc
dec
sub
adc
mov
ja
sub
daa
imul
inc
cmpl
add
mov
sbb
mov
mov
jecxz
inc
nop
jne
clc
push
mov
cmp
jns
imul
lods
cmp
rcll
xor
cmpsl
pop
pushf
mov
mov
hlt
xor
cmp
lods
leave
xor
loope
leave
mov
sbb
data16
mov
dec
xor
or
repnz
lods
arpl
lret
fmul
jp
jecxz
popf
ret
ret
sub
js
and
fildl
xor
dec
stos
scas
lods
pop
sbb
mov
jbe
outsb
incl
and
push
aaa
cwtl
and
xor
bound
xchg
orb
shll
mov
jno
xchg
push
nop
push
daa
lods
mov
sub
stc
ljmp
repz
and
pop
inc
jl
hlt
lods
iret
mov
mov
outsb
add
stos
mov
sahf
or
add
pop
sti
addr16
push
ljmp
mov
movl
call
pop
and
fldl
loope
mov
call
and
mov
inc
inc
dec
pop
adc
mov
inc
sbb
mov
inc
adc
inc
mov
mov
jmp
movsb
cmc
sub
or
pop
pop
pop
pop
loop
push
xorl
pop
add
icebp
cwtl
fstl
push
pop
hlt
data16
into
mov
sbb
push
cmpsb
sarl
imul
push
inc
xor
insb
popa
sti
iret
lock
iret
push
and
js
iret
pop
xor
es
inc
loop
push
mov
call
mov
mov
in
jns
mov
sbb
je
test
pushf
ss
xorl
pop
inc
cmp
pop
test
inc
lods
iret
push
dec
nop
sbb
adc
lcall
mov
cmc
sbb
mov
leave
cmp
or
mov
decb
insl
lret
cmp
xchg
fidivs
xlat
push
stos
sbb
scas
in
arpl
or
pop
sti
push
mov
pusha
outsb
xchg
out
and
mov
xchg
xchg
idivl
inc
xchg
dec
repz
pop
in
add
mov
xchg
cmp
rorl
in
inc
mov
ret
mov
mov
cmp
sub
insb
add
dec
xor
sub
std
push
sbb
mov
jp
xor
movsl
pop
iret
jge
pop
jg
sti
shr
push
adcl
repnz
nop
sub
jecxz
ja
cli
jno
jl
xor
in
repnz
movsl
sub
lahf
jno
push
inc
dec
mov
icebp
loop
push
mov
xor
mov
loope
pop
addl
cmp
repz
xchg
test
push
imul
stos
push
gs
mov
mov
rep
pop
insl
test
fcoms
ljmp
sbb
dec
loopne
roll
jb
cmc
aad
mov
jl
std
cmp
ret
bound
sbb
mov
sub
lahf
jne
sti
push
xchg
mov
ljmp
insb
sub
inc
sub
fildl
movsl
mov
les
jb
and
mov
jb
cld
xor
xchg
shlb
out
sti
cwtl
out
jb
gs
popa
adc
cli
or
pop
push
pop
mov
fs
and
subb
xor
ja
icebp
in
into
clc
and
push
and
inc
push
jg
xor
fprem1
and
int
xor
dec
cs
xchg
push
mov
push
and
adc
loope
sbb
lds
sbb
dec
add
dec
add
push
mov
std
adc
adc
pop
mov
adc
mov
inc
cmp
lods
push
das
out
scas
mov
popf
mov
add
mov
fnstcw
sub
rcrb
int
call
cmc
add
imul
jns
repz
add
cmp
icebp
enter
adc
aaa
scas
and
adc
dec
jecxz
outsb
jl
mov
push
dec
aad
mov
cmc
mov
in
mov
and
add
xor
jns
outsb
push
push
pop
addb
nop
enter
sti
dec
dec
loop
jmp
and
xchg
lock
stos
stos
push
shl
roll
repz
and
jns
jno
test
shrb
rorb
xchg
xchg
sahf
xor
mov
stos
insb
or
in
xor
outsl
mov
or
pop
mov
imul
cmp
mov
imul
jle
xor
mov
pop
mov
sub
setp
mov
push
ja
aas
push
and
mov
icebp
lds
hlt
jp
dec
pop
imul
fs
inc
das
cmpsl
bound
idivb
in
dec
stos
fnstcw
xchg
jae
pop
xchg
bound
inc
xchg
rcrb
jmp
jnp
and
add
xchg
adc
es
jle
adc
std
shlb
add
mov
int
xor
adc
cmc
lcall
xchg
xchg
std
cli
pop
cmp
call
das
push
nop
sahf
or
and
jecxz
ja
mov
push
adcl
and
dec
cli
or
iret
mov
mov
fisubs
dec
mov
mov
pop
jmp
or
fisttpl
inc
push
in
inc
fstps
mov
cmp
clc
jg
lcall
loop
inc
imul
dec
fdivl
pop
mov
add
xchg
fs
inc
int3
dec
xchg
cmpsb
pop
cmp
xchg
imul
sub
cmp
pop
outsb
inc
and
das
push
and
std
xlat
cmp
into
hlt
inc
aaa
aaa
mov
pop
in
lds
mov
xor
mulb
or
jbe
aaa
dec
inc
pop
xchg
or
lahf
daa
sahf
and
jns
aaa
jmp
gs
pop
sbbl
xor
dec
das
push
push
repz
pop
aam
lock
jecxz
pop
pop
push
mov
dec
mov
inc
mov
push
or
mov
arpl
gs
dec
mov
push
sti
out
add
mov
filds
stc
data16
dec
dec
xlat
imull
inc
pop
pop
jmp
jl
mov
es
jg
inc
stc
xchg
mov
ror
pop
sub
dec
xorl
fbstp
xchg
mov
push
jo
fwait
pop
add
mov
add
push
sti
xor
repz
popa
xchg
ror
sub
in
cmp
pop
jge
insb
xchg
out
ljmp
push
xchg
jne
notb
push
stos
in
in
pop
lds
icebp
or
fldt
pop
stc
fwait
rcrl
cltd
inc
adc
add
enter
fsts
xchg
jl
jl
pop
push
fdiv
hlt
inc
inc
jge
sbb
mov
push
popa
lock
mov
lds
sbb
sbb
jae
clc
aas
mov
adc
arpl
in
sub
ffree
mov
xor
inc
bound
std
ss
and
outsl
lahf
lcall
rcrb
jmp
shrb
jns
jg
sbb
jmp
jbe
ret
jmp
dec
xor
push
loope
jg
cmpsb
int3
push
lahf
cmpsl
lret
jo
dec
or
ja
test
cmp
inc
push
pop
and
scas
push
lods
cmp
pop
shr
aas
inc
jne
inc
jne
es
sbb
lea
aam
mov
mov
scas
or
jp
mov
jmp
push
les
add
sub
or
test
mov
in
dec
cld
xor
mov
and
pop
mov
in
daa
mov
mov
jg
and
gs
jle
dec
and
adc
ja
sbb
lods
add
insl
cmc
sub
rorb
loop
and
ss
out
rcr
ret
lds
mov
cli
icebp
imulb
and
sbb
cmp
rorb
rcll
insb
fisttpl
std
std
adc
mov
in
lret
sbb
icebp
push
insl
ret
sti
push
stc
push
mov
lcall
arpl
in
aaa
jae
out
jecxz
xchg
lret
lret
out
mov
jecxz
mov
leave
js
stos
mov
iret
mov
inc
lahf
loope
pop
bound
insb
nop
push
xchg
and
daa
popf
sbb
add
fwait
pushf
mov
and
ficoml
ret
sub
push
pop
mov
adc
loope
sar
outsl
sar
aaa
ljmp
mov
or
mov
and
sbb
mov
repnz
xor
xchg
mov
ret
es
add
push
dec
mov
sub
cmp
pop
xor
cmp
sbb
xor
popf
pop
inc
inc
jge
jg
adc
jl
pushw
sbb
mov
lahf
pop
and
sub
orl
mov
push
xchg
lcall
xchg
sub
dec
rorl
dec
gs
mov
insl
cmp
nop
adc
mov
mov
aaa
leave
sbb
adc
push
cs
push
adcl
repnz
push
dec
jge
xchg
mov
pop
nop
adc
aam
mov
stos
fiaddl
in
ret
ret
ss
sub
out
pop
cmp
and
jae
jns
sti
in
std
cmpsl
out
add
or
in
push
enter
push
lods
lahf
mov
lds
orl
addr16
mov
mov
std
scas
scas
xchg
add
mov
jns
jmp
loope
mov
insl
adc
ja
jbe
mov
lods
insl
jle
and
and
hlt
aad
push
repnz
jecxz
popa
loope
jmp
es
xor
cmp
or
add
push
xchg
out
pop
cmp
test
xorb
inc
repz
push
mov
mov
pop
aas
call
mov
lret
sbb
nop
cwtl
push
mov
aas
mov
out
mov
mov
push
pop
icebp
mov
adc
ss
xchg
int
jmp
cmp
hlt
push
mov
jmp
cs
xchg
aad
pop
sbb
scas
loop
mov
shll
lahf
jg
dec
mov
imul
xchg
xor
dec
cwtl
cmp
inc
inc
xorb
sbb
pop
insb
std
fcompl
leave
dec
roll
inc
or
xchg
mov
in
sbb
int3
data16
mov
repz
push
int
add
jae
xchg
pop
mov
sbb
int3
scas
clc
jg
stos
mov
mov
mov
or
cmp
imul
rorb
inc
sbb
or
mov
xchg
mov
adcb
in
sbb
add
mov
mov
cmp
push
dec
popf
ror
sti
add
insl
pop
jbe
loopne
in
mov
lods
jle
mov
xor
fwait
je
dec
in
dec
pop
sub
jb
jb
mov
ja
push
in
jp
xchg
test
dec
sub
data16
in
or
and
jle
jl
jno
and
rcll
pop
fsubp
jmp
push
mov
pop
stc
mov
fdiv
cmp
arpl
fcoml
jge
lcall
and
mov
mov
add
fs
add
fwait
sub
adc
cmp
xchg
imul
mov
fmull
das
sbbb
jne
add
add
sbb
lock
fiaddl
and
pushf
vunpckhps
nop
mov
mov
jge
dec
xorb
ret
xchg
inc
adc
xor
sub
or
fsub
iret
arpl
cs
lahf
jmp
mov
sahf
bound
loopne
stos
push
sbb
inc
xor
sbb
test
daa
mov
sbb
xlat
pop
outsl
frstor
andl
dec
in
popa
test
jecxz
test
xchg
gs
pop
repnz
ds
clc
leave
mov
xor
mov
fildll
addr16
lea
jb
jae
jl
in
xchg
xchg
push
push
add
cltd
mov
cmc
jmp
or
testl
outsl
push
mov
sub
cld
cmpsl
frstor
sbb
cmp
mov
mov
adc
xchg
sahf
mov
dec
std
cmp
sbb
lock
xor
test
aam
rcrl
shrb
cmp
xchg
cmp
inc
inc
dec
lods
jb
dec
fdivrs
shll
cltd
or
cmpsb
lock
arpl
mov
push
mov
mov
fldcw
cltd
movsl
push
inc
mov
mov
data16
mov
jo
mov
pusha
push
mov
jg
xor
pop
mov
fwait
sbbl
leave
mov
mov
or
pusha
imul
push
mov
jp
imul
adc
cmp
aas
pop
add
out
inc
xor
sub
stos
mov
insl
push
test
rcrl
mov
sahf
xor
or
inc
insl
loope
mov
sub
pop
insb
les
sbb
cltd
xor
xor
out
ret
jmp
xchg
out
repz
xchg
nop
sti
jle
out
aam
das
nop
shll
mov
es
imul
add
cld
mov
sbb
mov
outsb
jmp
and
xchg
popf
xchg
push
test
ljmp
scas
test
jecxz
or
test
sbb
lcall
dec
ss
and
lock
or
aas
xchg
sbb
cltd
insb
adc
sbb
out
ds
loop
shll
aas
mov
jns
aam
stc
mov
xor
mov
iret
mov
cmpsb
add
jns
push
mul
sbb
add
mov
je
push
stos
sti
es
or
xor
daa
cmp
jp
ret
in
dec
xor
ret
cmp
call
dec
add
jl
dec
test
push
cld
loopne
nop
cmp
cmp
cmp
jns
divb
in
lret
mov
mov
enter
ljmp
test
mov
xor
jb
sub
mov
jnp,pn
popf
in
mov
push
ljmp
push
enter
push
flds
movsl
add
jge
test
data16
adc
rorl
push
aad
or
mov
cmp
pop
cmp
and
movsb
jmp
sub
andb
cmp
pop
or
imul
loopne
jp
jecxz
dec
jp
repz
rolb
mov
fwait
xor
mov
add
and
mov
int3
je
dec
test
mov
xor
xor
xor
pop
loope
roll
imul
sbb
arpl
adc
fsubs
sbb
sub
int
pop
inc
popf
add
mov
and
pop
fdivrs
add
mov
xlat
sub
or
cltd
push
sbb
sbb
add
mov
jp
push
xchg
and
leave
fucomi
rorl
and
loop
int
ja
adc
or
jp
pop
mov
icebp
xchg
pop
gs
sub
cmp
fisttps
daa
mov
bound
fs
lret
lock
dec
mov
arpl
mov
repnz
imul
rcll
mov
sbb
push
push
popa
push
insb
fdiv
jg
push
mov
mov
int3
aam
fisttpl
mov
adc
and
jno
loope
dec
enter
rclb
jbe
cmp
insb
xchg
scas
xchg
aaa
pop
pop
add
pop
in
add
and
scas
pop
cwtl
and
cmp
xor
ljmp
sbb
add
std
mulb
mov
inc
cwtl
je
push
in
jecxz
movsl
pushf
or
cli
js
mov
xchg
mul
cs
movsb
loopne
or
clc
cmp
out
stc
push
popf
fs
ret
pop
pop
push
cwtd
xor
std
mov
int
xchg
xchg
test
jbe
faddl
cld
mov
dec
mov
inc
fs
cld
scas
outsb
push
xchg
add
loope
sbb
jle
std
movsb
sbb
daa
lods
mov
aad
adc
xor
outsl
mov
xor
loopne
repz
adc
adc
xchg
ljmp
ja
pusha
pusha
dec
jg
mov
repnz
mov
sub
in
adc
negb
adcb
movsl
roll
sbb
mov
popa
movsl
mov
clc
jbe
out
mov
es
daa
adc
jb
call
pop
data16
lret
fisubl
cmp
or
mov
dec
jmp
bound
addb
outsl
jae
adc
std
mov
cmpsb
xor
out
push
imul
test
lods
or
inc
sub
push
xor
and
fs
scas
sub
out
repz
lret
inc
mov
xchg
or
leave
jle
movsl
cltd
cltd
mov
lods
andb
and
sub
fsubrp
fld
rolb
jo
gs
mov
popa
inc
or
test
jbe
inc
push
lock
fsubl
sbb
jecxz
xchg
pop
push
stos
scas
jg
fstps
add
cli
adc
popa
adc
and
push
imul
stc
jmp
add
sti
cmc
clc
bswap
cmp
into
mov
scas
sub
aad
xchg
cmp
ficoml
sub
lock
sub
hlt
inc
sbb
and
mull
les
movsb
push
xchg
or
lods
sbb
aaa
mov
xchg
and
jg
mov
rcrl
lods
jmp
add
int3
repz
addr16
xor
fisubl
movsl
movsb
in
cmp
xorl
int3
mov
stos
andl
mov
pop
jecxz
lock
lock
inc
lds
mov
mov
xorb
mov
fldl
xor
pop
scas
pop
test
pop
mov
jg
push
ds
cmp
push
aas
mov
inc
and
dec
out
adc
fdivl
insb
sub
mov
add
repnz
jo
leave
mov
and
xlat
movsb
mov
out
shl
lds
and
jnp
cmp
shr
cmpsb
test
cmp
cmc
lcall
dec
mov
sbb
bound
pusha
fstps
xorl
sub
mov
rorb
lods
stc
adc
fcmove
pcmpgtw
mov
sub
aam
loope
pushl
fdivl
mov
movsl
mov
or
lods
sbb
rorb
xchg
leave
push
sbb
mov
fsubr
mul
ljmp
xchg
sti
and
stos
xlat
fcom
in
dec
sahf
mov
cmpb
ds
nop
lcall
add
cmp
lret
jp
adc
in
add
lock
lods
imul
fsub
xlat
lret
aaa
bound
push
loope
out
fnsave
sbb
fwait
enter
cmp
jne
fs
lods
scas
mov
aas
test
mov
dec
fidivs
je
fcom
imul
mov
pop
call
lret
jnp
lea
loop
out
mov
xlat
fsubs
lret
mov
fbstp
cs
loope
jno,pt
insl
pusha
xor
adc
fcmovnbe
sub
jg
mov
insb
pop
cmp
mov
int3
test
out
xor
xor
and
or
cltd
shlb
jl
mov
inc
scas
mov
xchg
push
xchg
dec
daa
insb
and
sub
mov
push
lret
movb
add
pop
popa
in
loope
jge
pop
sub
push
xchg
and
fsubrp
inc
jmp
mov
mov
in
dec
add
dec
frstor
add
mov
aas
jo
ffree
test
mov
addr16
mov
jge
dec
aaa
mov
or
arpl
xchg
rolb
push
cmp
ljmp
dec
pop
movsb
and
outsb
shlb
aad
sarb
in
jno
and
scas
pop
inc
xrelease
xchg
push
adc
pop
mov
xlat
mov
dec
cmp
and
dec
sub
ret
in
js
pusha
je
dec
add
cmp
mov
push
into
add
lret
push
sbb
push
adc
mov
or
adc
jo
mov
js
and
push
dec
or
imulb
add
jb
jnp
or
xchg
or
push
out
inc
add
pop
std
sub
mov
push
mov
sub
cmp
and
mov
das
add
cmp
aaa
push
aad
push
loope
test
push
es
popf
sbb
push
adc
pop
sahf
mov
sub
cmc
data16
mov
dec
xchg
push
in
push
mov
callw
sub
stos
mov
fisubrl
add
and
call
sbb
testb
sub
or
sub
adc
aam
pop
rcrl
add
mov
pop
inc
pop
in
jne
mov
test
addb
fwait
mov
jg
bound
inc
loop
sbb
imul
aad
xorl
xchg
mov
lods
jns
pop
nop
jbe
scas
fstl
fistpll
mov
lea
push
sbb
stc
cmp
fldenv
dec
add
sarl
adc
ja
aam
lahf
dec
cmp
addr16
lds
jne
cmp
cwtl
fldt
jle
pop
pusha
xchg
xor
out
push
add
test
mov
rcrl
subl
and
pop
push
sbb
mov
mov
push
loop
sub
push
xchg
into
sub
sbb
test
movsl
cwtl
cmpsl
cs
je
addr16
stc
sub
sahf
mov
xor
or
aam
jecxz
and
mov
rorb
adc
add
test
je
std
adc
stos
jmp
subb
imul
mov
jno
gs
xor
xchg
int
xchg
xor
into
aad
test
andl
xchg
rcrl
data16
or
jbe
icebp
adcb
bnd
inc
das
or
andps
push
push
fiaddl
test
jbe
push
pminub
cwtl
xor
sbb
cmp
aad
mov
pop
test
sbb
and
stc
ret
lcall
lret
cmpsb
repnz
dec
test
mov
mov
iret
mov
ds
jl
repnz
mov
das
sub
fstl
std
pusha
push
shrl
jmp
and
inc
pushf
daa
xchg
or
mov
jmp
hlt
mov
sub
fisubl
daa
mov
clc
mov
decl
jns
mov
scas
mov
jg
pop
sub
ljmp
mov
mov
or
in
cwtl
cs
fmuls
test
add
sub
lret
mov
mov
scas
lahf
inc
fstps
and
addr16
dec
mov
test
adc
push
imul
dec
nop
inc
test
lea
xchg
clc
mov
imul
pop
fimuls
push
mov
mov
sbb
dec
jo
add
imul
stos
jg
test
cld
mov
sub
mov
outsl
sbb
push
jle
aas
pop
jg
pop
js
jg
jns
xlat
xchg
in
xor
add
inc
cltd
xchg
cmp
jne
ljmp
in
mov
fstp
mov
imul
popf
adc
jle
fiadds
mov
xor
push
out
fisttpll
cmp
push
addr16
push
ds
andb
test
insl
pop
sub
or
je
daa
mov
dec
cwtl
movsb
inc
sbb
cmc
scas
sbb
mov
shlb
jbe
lcall
xor
xchg
outsb
std
inc
int
fwait
push
les
shlb
cli
lds
jg
stos
cli
jae
or
and
aad
push
test
mov
fdivrl
movsb
out
jg
daa
adc
xchg
xlat
push
popa
rcr
or
stc
pop
sbb
push
jbe
mov
and
mov
andl
dec
ss
stos
cltd
xchg
sub
sbb
pop
pusha
ss
sarb
lcall
xor
xor
das
das
push
sub
mov
jmp
jg
cmpsl
jle,pt
mov
push
lret
mov
xchg
pusha
mov
and
mov
mov
fwait
sbbl
push
sub
cmp
idivb
mov
js
shrd
aam
notl
xor
pop
test
xor
mov
lods
add
insb
pop
push
adc
in
scas
sub
inc
outsb
nop
lea
or
mov
outsb
push
jae
xor
add
sbb
dec
int
inc
notb
dec
cltd
shl
or
movsb
or
add
popf
sub
sbb
adc
cld
into
or
jp
gs
fmull
sbb
push
adc
sti
rorb
fwait
ljmp
adc
fadd
pop
pop
push
dec
and
or
sub
pusha
lcall
dec
imul
inc
std
sbb
push
sar
pop
fildll
shll
dec
stos
mov
push
pop
movsb
aad
ja
addr16
ja
jns
into
pushf
xor
cmpb
in
or
lea
jbe
movsb
dec
fadds
loope
mov
or
shlb
clc
inc
inc
xchg
sbb
ljmp
xor
lahf
pushf
inc
push
fyl2xp1
jp
cmp
mov
mov
lds
mov
sbb
lcall
or
mov
ficomps
pop
xor
ret
push
outsb
sub
jnp
lret
rcrb
or
dec
dec
clc
lods
rorl
fstp
in
sub
das
mov
push
mov
fisttpll
test
and
pop
nop
inc
lds
mov
stos
push
adc
xlat
dec
jg
jae
mov
sub
jb
jo
shlb
mov
ds
frstor
pop
loope
or
fimull
test
sbb
loope
mov
xchg
ljmp
enter
inc
push
in
lret
mov
imul
sub
ror
cmpsb
inc
stc
and
test
or
or
fldenv
mov
inc
xor
dec
mov
pushf
test
dec
adc
mov
int3
push
in
mov
cmpsl
xchg
mov
sub
negl
cmp
push
or
icebp
xchg
sbb
in
add
fcoml
arpl
stos
jb
outsl
xor
clc
xchg
xchg
add
xor
xchg
cmc
mov
inc
lcall
insb
pop
cmp
push
jl
xchg
jg
jge
push
jecxz,pt
test
pop
mov
mov
jg
cltd
push
enter
mov
pop
sbb
mov
dec
inc
data16
lock
sbb
sbb
xchg
jl
and
add
jl
into
jae
mov
mov
lods
cmp
cltd
inc
aam
movb
lea
ds
into
adc
sbb
jae
mov
push
dec
push
pop
shrb
iret
add
mov
or
addr16
xchg
pop
call
sbb
xorl
inc
fisttps
movsb
dec
sbb
fisubrl
xchg
scas
and
xchg
shl
xchg
dec
adc
adc
xor
hlt
sub
stc
xchg
or
add
arpl
cmpsl
call
insl
sbb
stos
pop
fmul
movsb
xchg
adc
cli
in
fsubr
mov
sbb
dec
push
int3
and
rorl
push
cmp
add
fdivs
in
add
cmc
jl,pt
lahf
lret
xchg
pusha
jg
outsb
test
movsl
test
gs
cs
mov
push
jb
out
out
push
lds
fisttpl
mov
jmp
out
sti
push
fldcw
out
mov
test
outsb
or
sbb
dec
mov
cmc
mov
dec
loopne
sub
inc
repnz
outsl
inc
addr16
jp
pop
cmp
mov
cli
aaa
addb
rcrb
je
aam
setl
xor
jb
or
movlhps
lods
xchg
pop
test
outsl
or
inc
jns
xor
add
jne
punpckldq
pushf
pop
leave
cmc
pusha
popf
cmp
jg
mov
mov
xchg
jno
lahf
out
jmp
dec
adc
lock
outsb
mov
call
sub
push
xor
sbb
dec
add
sbb
pop
xor
mov
movl
cli
pop
lretw
mov
push
test
jecxz
push
cmp
mov
adc
mov
loop
stos
cs
pop
jge
pop
icebp
adc
cmp
mov
pushf
sahf
xchg
aam
stc
mov
fwait
mov
subl
lret
adc
jl
lods
push
mov
fildll
xchg
and
xchg
sbb
or
dec
jo
and
push
push
les
loope
iret
out
mov
jne
enter
in
repnz
or
mov
rorl
imul
adc
mov
test
cmpsl
jae
int3
sub
jns
add
adc
and
js
hlt
ds
in
inc
into
or
lods
bound
dec
arpl
lret
lea
out
loope
mov
rorb
lret
stos
aad
vcvtss2sd
add
cwtl
sub
loop
mov
dec
sub
sub
nop
xor
out
shll
hlt
dec
in
scas
sbb
shll
push
popf
mov
cmp
sarb
movsb
movsb
sub
in
mov
xchg
adc
push
fldcw
jle
pop
dec
sub
jb
adc
dec
inc
xchg
in
lods
jnp
fs
bts
xchg
inc
mov
jge
dec
xchg
jae
xlat
stc
ds
cmp
push
inc
dec
xchg
test
scas
jle
push
cmp
push
movsl
jno
insl
fs
insb
sbb
jae
popa
mov
jl
xchg
jo
cmpsl
leave
mov
mov
jo
push
xchg
dec
or
inc
mov
in
sbb
in
add
data16
out
add
sbb
ss
or
mov
loopne
cld
push
sahf
hlt
dec
lds
mov
sbb
or
cltd
xchg
and
int
xor
xchg
int3
dec
lods
mov
mov
sbb
adc
push
push
sbb
outsb
in
popf
ret
arpl
xor
xchg
call
or
adc
aas
mov
popa
jns
cmpl
es
ret
clc
push
pop
mov
subb
push
and
push
enter
inc
inc
shl
in
int3
push
ds
cltd
testl
test
xor
mov
xchg
cmp
sub
adc
mov
inc
cmp
in
xor
loop
int3
aam
xchg
ret
orl
adc
and
cmp
cmpsb
mov
cmpsb
push
fimull
adc
mov
mov
icebp
mov
sbb
sub
add
or
sahf
subb
xchg
xlat
sbb
je
ret
and
jnp
aam
jae
fdivr
frstor
es
sarb
pop
sbb
or
or
filds
movb
add
cmp
les
arpl
bound
mov
out
mov
or
sbb
pop
jecxz
pushf
out
mov
aad
xchg
mov
sub
sbb
inc
into
lahf
add
push
push
mov
aas
inc
outsl
jp
lods
mov
or
fs
jge
je
mov
lds
ret
test
jnp
add
mov
outsl
mov
jge
outsb
xchg
mov
into
in
xor
or
std
jo
sub
rorl
lret
and
jp
bound
aad
sahf
test
out
add
sahf
andl
ss
sbb
push
loop
idivb
cwtl
add
jle
xorl
cmc
inc
incl
push
add
out
inc
add
loop
dec
scas
jo
sbb
in
popf
sub
enter
inc
inc
pop
arpl
adc
add
mov
daa
cmpsl
rclb
cs
jg
jae
es
stc
mov
lods
add
adc
push
jge
gs
xor
jae
mov
mov
lods
and
and
pushf
test
imul
xor
xlat
fwait
enter
cwtl
cli
frstor
test
sub
mov
sbb
cmp
arpl
mov
int
stos
ret
sbb
inc
inc
mov
adc
mov
add
pop
filds
lds
sub
and
fldl
insb
fsubrs
decb
test
sarl
loop
dec
pop
dec
push
mulb
fdivs
cltd
outsb
mov
ret
xchg
jp
loope
dec
xchg
addb
in
cmp
xor
add
loopne
ljmp
shl
mov
iret
les
ljmp
addr16
jno
out
dec
cwtl
fistps
jecxz
adc
cmp
nop
repnz
cmp
push
pushf
outsl
xor
lahf
rorl
xor
movsb
loope
int
lcall
outsl
fisttpl
jl
and
repnz
push
cmpsl
movsb
mov
xchg
xor
rorl
rorl
test
shlb
pop
jmp
inc
cmp
outsb
sbb
dec
jne
and
outsb
int
lods
jle
jg
pop
mov
insb
mov
std
jbe
pusha
cmpsb
jno
xlat
data16
roll
jb
loopne
ret
dec
test
enter
in
jo
stos
pop
jl
loopne
cltd
inc
or
mov
test
xchg
xor
les
and
add
mov
in
divb
sub
pop
popf
or
push
jge
mov
out
or
fisttps
call
aad
out
fdivrp
insl
in
push
mov
mov
mov
sahf
or
mov
ss
inc
cmp
push
sub
mov
mov
dec
lcall
jmp
ret
mov
cs
aas
sti
mov
jno
adc
cmp
xor
lcall
inc
dec
fcomip
pop
xchg
out
cwtl
stos
push
js
push
aaa
inc
mov
inc
nop
cmpsb
mov
mov
dec
inc
cwtl
jae
sahf
in
push
push
pop
cld
repnz
sbb
into
inc
dec
test
xchg
stc
and
xchg
or
jg
ljmp
enter
sub
adc
cmp
js
in
cwtl
inc
cmp
xchg
sub
clc
out
xor
pop
jmp
mov
iret
sub
andl
xor
test
cltd
cmp
dec
or
lcall
stos
es
add
mov
sbb
mov
cld
das
or
rorl
jp
mov
enter
mov
nop
pushf
cmovbe
add
add
push
aad
loope
mov
cmp
add
cmp
sub
and
into
dec
xchg
dec
stc
aad
mov
insl
sbb
mov
xor
sbb
and
sub
loop
es
push
ja
dec
and
mov
sarb
pop
dec
inc
adc
pop
incb
sbb
test
lahf
arpl
mov
mov
and
and
mull
cmp
negl
bound
pcmpgtw
into
jg
push
adc
add
ljmp
into
mov
sub
inc
imul
imul
jne
in
testb
or
loop
sub
fcoms
lods
in
xchg
mov
add
xor
pop
call
fstps
mov
pop
mov
push
sub
lods
arpl
lock
pop
cmp
and
xor
nop
clc
cmc
mov
xchg
pushf
insb
test
dec
xor
sbbl
add
sbb
outsb
mov
in
mov
lahf
xchg
and
cli
cmpsb
fiaddl
or
mov
rclb
mov
xchg
inc
cmp
rclb
mov
testl
sub
push
inc
dec
cmp
dec
add
lret
add
jb
add
movsb
dec
mov
push
cmpl
mov
add
jge
fmul
jno
movaps
sub
xlat
cmc
fisttps
jmp
dec
imul
mov
lcall
pop
mov
cmpsl
mov
mov
shrb
adc
pop
popf
inc
xlat
push
sub
les
adc
mov
sbb
pop
sbb
dec
leave
jae
sub
xchg
mov
fisubl
das
outsl
xchg
sub
sbb
add
xor
mov
xchg
sarl
push
or
fidivrl
xor
es
lds
mov
stc
pop
xlat
or
push
mov
push
xchg
shlb
in
inc
or
jmp
mov
sarb
mov
call
mov
fstp
push
fcompl
sub
and
movsb
imul
cli
pop
shlb
lret
sbb
bound
mov
mov
dec
lods
push
xor
ficomps
mov
rorl
loop
cld
insb
adc
shlb
mov
pop
add
mov
cmp
out
stos
or
mov
sbb
sub
int3
mov
cmp
outsb
popa
aam
sub
sub
push
push
xchg
outsl
and
cmp
dec
mov
icebp
repz
xor
mov
in
mov
mov
xchg
dec
icebp
or
sti
loop
lds
push
cs
adc
movsl
and
fisubs
lahf
ljmp
pop
sar
daa
out
out
jg
xchg
sub
movsb
aas
lcall
pop
cmpsb
or
dec
mov
jbe
fdivrp
jb
icebp
imull
movsl
loope
mov
jmp
mov
jns
mov
das
sub
push
out
daa
ret
mov
lea
aad
shll
fistl
sti
loop
loop
stos
push
nop
enter
jnp
rorl
jns
cmp
inc
mov
stc
dec
ss
je
sbb
xor
aad
movsb
popa
add
dec
pop
xchg
scas
inc
add
mov
sub
xor
repnz
inc
push
mov
cld
inc
xor
lret
mull
jno
arpl
pop
hlt
mov
aaa
lods
shrb
inc
inc
dec
lahf
daa
ret
push
jbe
int3
dec
jmp
xor
in
push
jae
inc
cmp
jno
popa
push
push
push
pusha
sub
xor
inc
repnz
das
std
fsubrs
cmp
test
movsl
je
lret
jnp
push
fwait
aas
fldt
cmpsb
aas
rdmsr
sahf
fdivrl
popf
icebp
sub
je
sub
add
lcall
out
add
adc
data16
sub
jge
cmpsl
enter
push
adc
xchg
cmp
push
pop
xor
pop
shlb
cmp
shrb
xor
push
std
loope
std
mov
xor
push
mov
mov
loope
addr16
clc
push
fisubrs
dec
call
test
dec
dec
hlt
jmp
lret
sub
xor
mov
lea
int3
pop
jns
pop
aad
fiadds
pop
lret
fisubl
popa
sbb
mov
cli
repnz
cmp
enter
scas
mov
cmp
fwait
cwtl
push
shlb
adc
xorl
pop
mov
dec
out
push
xchg
mov
je
xchg
push
pop
sub
cmp
bound
and
xchg
jns
cli
or
decb
inc
dec
loopne
in
movsb
jo
ljmp
scas
bound
mov
push
aam
adc
mov
cltd
lods
xchg
pop
xor
cmpsl
fimull
lods
into
mov
dec
xor
cmp
ret
sahf
pop
les
pop
push
jae
or
fiaddl
mov
mov
cmp
addl
and
inc
xchg
in
sarb
fists
push
sbb
jo
add
and
out
popl
xchg
pop
inc
mov
sbb
or
push
adc
and
adc
ss
lods
and
mov
filds
xchg
sub
scas
adc
out
push
dec
rcrb
xchg
add
and
mov
pop
and
mov
cwtl
lea
lea
lcall
jecxz
aas
fsubrs
and
loop
imul
fistpll
into
xor
ret
cwtl
and
into
sub
sub
mov
lahf
iret
outsl
jnp
mov
xor
push
cmp
out
jnp
adc
dec
aam
jae
sub
das
or
inc
push
push
shl
sub
adc
dec
fimuls
jmp
lock
or
or
outsl
dec
ljmp
push
std
inc
out
ljmp
jb
cmp
adc
lcall
cli
pop
icebp
mov
xchg
out
aas
pop
jecxz
hlt
pop
jbe
inc
or
push
cmp
fadd
ret
or
and
out
aaa
sub
shl
loopne
mov
or
stc
mov
jg
leave
out
mov
sbb
scas
adc
faddp
pop
mov
or
sbb
out
xor
scas
scas
mov
fs
adc
sbb
add
shl
mov
push
ja
gs
in
cmp
iret
test
dec
bound
xor
addb
pop
and
add
rcrl
jecxz
aad
and
shlb
pop
or
xor
jb
repnz
mov
icebp
das
jns
adc
push
jae
add
icebp
jae
xchg
dec
jo
mov
mov
xchg
dec
mov
into
lea
push
jg
in
test
ret
mov
mov
in
and
sti
sbb
jae
inc
mov
fwait
popa
mov
test
dec
les
xlat
push
adc
jl
movb
or
dec
rcll
shlb
in
xor
pop
aam
mov
push
or
xlat
cs
shlb
sahf
add
mov
aaa
push
fisttpll
lock
or
adc
nop
jmp
aas
mov
leave
and
xor
faddl
arpl
cli
repnz
sarl
mov
lcall
mov
pop
jge
fld
push
rol
jbe
sub
loopne
push
mov
sarl
add
insb
sbb
clc
add
xor
xchg
push
stos
xchg
xchg
mov
sbb
xchg
jo
lea
jmp
scas
rolb
mov
adc
data16
lcall
mov
out
je
add
xor
mov
inc
ret
rclb
jmp
fwait
cld
insl
sub
dec
cmp
mov
sub
leave
loop
dec
repnz
repnz
ffree
xchg
or
aaa
stos
out
dec
xor
jbe
push
or
pop
inc
lds
dec
mov
jmp
fdivrl
outsl
popa
cmpsl
outsl
jmp
cwtl
decl
test
insl
jbe
pop
divb
dec
lock
add
cmp
addr16
movsl
lret
xchg
jle
pop
mov
pushf
inc
mov
cli
es
mov
cmp
cmc
lock
ds
inc
jne
inc
jge
mov
cmp
dec
sub
imul
dec
and
loopne
in
in
push
add
xor
test
mul
add
xchg
add
adcl
addr16
punpckhdq
xchg
push
push
out
xchg
mov
test
gs
das
add
inc
add
mov
inc
ds
sub
push
ds
cmp
dec
int3
inc
addb
aad
add
arpl
pop
data16
mov
lahf
mov
cltd
or
jecxz
les
lods
mov
jg
jg
fistpl
in
mov
inc
adc
lcall
adc
loopne
sbb
xchg
or
ror
lds
movsb
dec
cmp
aam
jl
sub
mov
out
test
xchg
xor
mov
pop
inc
rcll
insb
add
mov
sbb
mov
push
ror
jp
push
cltd
stos
jb
repnz
jnp
lret
pop
mov
scas
jmp
scas
out
lcall
jns
shl
stos
mov
mov
imul
jl
inc
pop
pop
les
icebp
fcompl
sbb
stos
sbb
es
lock
out
mov
jmp
add
adc
push
xorl
xor
push
or
pop
sahf
push
xlat
push
mov
sub
cli
jge
imul
fimuls
hlt
iret
out
pop
sbb
pop
pusha
sub
mov
das
cmp
out
inc
loope
popf
add
dec
mov
sub
mov
outsl
outsl
inc
rcll
ja
or
imul
lahf
ljmp
or
mov
std
in
roll
stos
lret
push
mov
add
dec
xlat
pextrw
xchg
cmpsb
xchg
push
aaa
into
lock
std
repz
pushf
les
fbstp
in
sbb
fbstp
push
int3
add
fbld
push
ret
imul
dec
dec
icebp
sub
pop
mov
incl
aam
test
rol
adc
mov
inc
fwait
inc
fimuls
stos
push
pushf
repz
sbb
mov
je
idivb
leave
loope
lods
icebp
pop
fldl
xor
adc
dec
inc
fistpl
mov
sub
mov
xchg
mov
clc
std
or
leave
das
xchg
adc
nop
jns
aad
sub
mov
int
push
cmp
fildl
in
test
imul
adc
push
fistl
in
push
scas
pop
ds
ffreep
pop
pushf
xchg
faddl
mov
iret
xchg
out
jmp
leave
xor
sar
cmp
sub
xchg
es
xchg
fistps
push
lcall
mov
sub
sahf
rcll
inc
js
pop
imul
rorl
stos
sbb
adc
les
stos
lcall
cmpsb
sbb
outsb
dec
int3
xchg
mov
stos
hlt
mull
daa
cmpsb
cwtl
pop
dec
loop
pop
pop
lods
add
int3
jecxz
jge
aam
xchg
test
rcrl
pop
ds
sbb
push
fcmovbe
ficoml
loopne
lcall
push
gs
and
mov
enter
pop
shrl
xchg
mov
loopne
jp
jae
daa
imul
lret
xor
jno
mov
bound
add
mov
aas
fildl
jno
sub
mov
aam
jne
xchg
sub
and
test
into
cmpsb
mov
aad
xchg
mov
rcr
cwtl
insl
or
mov
jecxz
adc
movsb
cwtl
fiadds
lds
movsb
dec
sahf
testl
insb
inc
mov
insb
mov
stos
xchg
mov
cmp
movsb
push
aad
popf
push
jnp
int
sahf
into
inc
jns
and
mov
lahf
mov
dec
cs
imul
rcl
scas
push
jnp
cmpsl
mull
out
stc
test
xchg
dec
pop
nop
outsl
idivb
cmp
enter
cltd
xchg
pop
inc
sbbb
outsb
mov
imul
and
xor
mov
stos
enter
xchg
pusha
push
dec
movsb
jae
push
jnp
mov
sbbw
and
sub
dec
cli
jb
sbb
dec
aas
xchg
sbb
inc
xchg
leave
jecxz
mov
std
inc
aaa
lods
clc
jecxz
stc
in
add
pop
enter
mov
jle
inc
out
mov
or
sub
call
jle
inc
shr
in
ret
add
xor
fildl
ret
sub
lret
add
xor
daa
mov
mov
ret
hlt
jecxz
mov
cmp
sub
ds
shrb
int
shlb
rol
mov
inc
add
sub
pop
sub
stos
mov
or
ljmp
aaa
push
movsl
lea
sub
loopne
iret
xor
dec
movsl
lock
dec
inc
push
hlt
jb
test
adc
repnz
jbe
divb
mov
and
loopne
aad
add
cmc
es
mov
and
jnp
sub
inc
mov
lret
mov
ljmp
push
mov
cltd
rol
cmp
clc
push
cmp
mov
faddl
mov
pop
push
fcomps
add
imul
cli
push
push
or
xchg
mov
negb
push
sub
sub
add
mov
add
jle
sbb
mov
sarb
dec
aad
pushf
in
and
and
in
adc
arpl
fists
dec
pcmpeqd
testl
test
cmpsb
lret
clc
es
icebp
jmp
sub
xchg
in
pop
lds
pop
cwtl
pop
cs
mov
popf
jne
lock
fsubrs
xrstors
pop
sbb
jle
into
shr
xor
lcall
and
cmp
aas
mov
cmp
mov
sbb
and
hlt
addr16
scas
xor
sub
sahf
dec
push
ret
add
in
jb
mov
std
xor
stc
call
negb
dec
stc
mov
push
icebp
sbb
mov
sbb
pop
and
xchg
and
data16
xchg
fwait
xchg
ljmp
cmp
fdiv
jo
cmpsb
stc
mov
xor
add
push
push
in
jmp
xchg
cmp
push
out
jle
sar
movsl
fisttps
movsl
push
push
sbb
dec
jl
adc
xchg
insl
inc
cmpsb
fcmovne
mov
xrelease
cwtl
jle
popa
push
jmp
dec
pop
aaa
xor
dec
testb
mov
inc
adc
add
adc
inc
push
fimull
sbb
xchg
out
lods
in
int3
iret
scas
popa
lret
or
loope
dec
bound
push
fiaddl
inc
fsubr
mov
cmpsb
jge
pop
xor
fdivs
xlat
leave
int3
inc
lahf
lods
mov
aas
out
and
cltd
mov
aad
jg
mov
jmp
sub
data16
mov
mov
lds
ja
dec
test
rcrl
sub
inc
loopne
pusha
loop
cmp
push
mov
push
sbb
dec
into
mov
push
loop
cwtl
dec
not
jmp
cmp
test
cmp
mov
icebp
test
lods
jg
fists
xlat
fs
xor
or
jle
scas
insl
mov
mov
adc
movsl
call
sahf
rcll
outsb
lret
adc
ja
cmp
inc
jmp
xor
sbb
sub
loopne
sub
ret
pusha
inc
mov
add
mov
cmp
mov
inc
mov
add
mov
jl
scas
adc
cmp
das
sbb
push
mov
mov
inc
std
cmp
and
mov
pop
inc
push
and
and
bound
lcall
cmp
outsl
sub
mov
les
scas
lods
inc
xchg
fadds
and
leave
stos
test
cmpsb
daa
add
push
adc
movsb
dec
dec
cmp
dec
fimuls
sbb
dec
xor
mov
add
push
add
sbb
jl
and
xchg
pop
mov
pop
or
ja
dec
mov
mov
in
aas
lods
push
xchg
stos
out
ret
mov
test
insb
into
push
inc
jmp
cwtl
xlat
addr16
inc
xchg
push
cmpb
imul
js
dec
mov
xor
jno
xchg
pop
data16
arpl
out
adc
cmp
loop
ret
jp
or
test
mov
and
data16
stos
pop
adc
pusha
and
mov
sbb
pusha
sub
das
vshufps
add
or
into
rolb
enter
and
dec
or
loop
adc
aam
loope
adc
aad
mov
iret
inc
cmpl
scas
push
adc
xchg
mov
ljmp
pusha
outsl
rorb
or
dec
sub
fwait
mov
inc
insl
push
mov
add
sbb
jns
mov
es
fisubrs
cwtl
push
or
sarl
nop
out
push
fimull
mov
ret
dec
aas
call
mov
loopne
fistpll
in
jb,pt
rcrl
bound
les
dec
xlat
mov
insl
cmc
imul
jne
scas
sub
mov
sbb
pop
daa
fcoms
jecxz
into
scas
js
loope
out
pop
xchg
mov
cmp
push
cmpsb
inc
mov
aas
std
mov
jl
scas
push
cmp
aad
or
lods
mov
in
shl
xor
sbb
fwait
imul
sbbb
stos
jecxz
jle
xchg
lcall
inc
aas
pushf
mov
mov
jns
push
clc
ss
aas
daa
movsl
icebp
cli
call
pop
cmp
mov
stc
imulb
pop
push
fdivrs
nop
fs
imul
mov
inc
fwait
cmp
sbb
add
sbb
lahf
insl
inc
rcll
orb
arpl
movsb
sub
push
fldenv
push
pusha
add
ljmp
jne
mov
scas
arpl
xchg
push
cmpsl
ret
lret
mov
jecxz
and
xlat
pop
data16
repz
subl
rorl
test
push
xchg
mov
movb
adc
and
enter
jne
inc
bound
inc
repnz
and
outsb
jb
dec
sub
cmp
push
mov
mov
fisubl
adc
rol
out
xor
or
icebp
and
scas
adc
repnz
popa
je
push
rcll
addr16
inc
or
jns
adc
idivl
xor
int
push
repnz
push
in
xchg
sbb
mov
popf
pop
icebp
dec
testb
mov
sub
movsl
mov
adc
movsb
shlb
push
fisubrs
jo
push
cmc
dec
xor
call
xchg
xchg
xor
mov
fisubrl
cld
xchg
mov
xchg
sbb
dec
imul
push
fsub
mov
dec
movsb
cwtl
sub
and
sahf
fwait
xor
aas
loop
jns
rcll
mov
adc
sbb
pop
xchg
test
dec
fnstenv
jno
insl
cmp
mov
test
mov
lods
and
jg
mov
mov
es
outsl
cmp
push
jns
jne
aam
movsb
imul
loop
cli
and
mov
negb
lret
adcb
adcb
rorb
cli
add
sub
cmp
sbb
and
push
push
dec
push
dec
lds
arpl
push
add
in
xor
xor
nop
adc
ret
cs
aaa
add
std
gs
or
cmp
jns
mov
jb
mov
in
mov
xor
mov
faddl
xchg
pop
testb
add
push
xchg
cmp
jnp
push
in
jmp
add
dec
shlb
xor
out
fs
push
shrl
adc
mov
icebp
and
test
mov
jl
test
adc
fidivrs
xor
lock
and
icebp
jmp
lock
adc
loopne
jnp
push
jge
outsl
inc
out
addb
aas
arpl
sbb
pop
pop
sbb
in
inc
jg
cmp
inc
xor
cltd
sbb
lahf
ret
pop
push
pop
in
mov
sarb
sub
jg
fsubs
shrb
dec
fstpt
cld
sub
imul
pop
stos
stos
dec
cmp
fidivl
adc
lahf
inc
dec
mov
pop
ltr
sub
pop
lea
xor
jb
repnz
fldl
mov
mov
test
in
idivb
loope
cs
aam
les
jg
rolb
leave
mov
and
fwait
movsl
sub
aam
push
in
mov
push
mov
or
ja
and
jne
cmp
or
pop
sub
pop
in
inc
and
insb
fldt
push
mov
inc
inc
cmp
arpl
stos
jb
popa
mov
in
rcrl
mov
insb
cmp
xchg
out
fwait
pop
cmp
mov
xchg
lods
push
and
mov
mov
mov
pusha
push
push
lcall
movsl
jmp
cmpsl
popa
sub
lea
push
mov
lock
adc
pushf
adc
jp
cmp
scas
push
xchg
cld
shrb
enter
adc
xor
sub
add
xchg
and
xchg
mov
cs
in
rcrl
cmp
and
mov
imul
and
jb
mov
out
daa
push
mov
cltd
adc
sub
adc
xchg
aaa
and
cmpsl
push
test
xchg
pop
shrl
std
jb
das
add
adc
aam
or
xchg
out
xor
into
mov
nop
mov
cmp
add
mov
cmp
rol
adc
pop
cwtl
icebp
mov
fmul
pop
push
and
sub
adc
xchg
xchg
inc
daa
mov
das
popa
jmp
lret
dec
les
sahf
and
mov
or
jnp
dec
ficompl
cmp
sbb
cmp
loope
sbb
adc
loopne
or
pop
dec
pop
mov
sub
dec
mov
arpl
xchg
push
out
sahf
sub
pop
jns
stos
lea
mov
iret
outsb
shll
iret
jae
or
inc
or
dec
sbb
inc
xlat
adc
fisubs
jns
je
in
int
sbb
ss
out
ljmp
ret
dec
sub
dec
out
sbb
mov
in
cs
pop
mov
int
lahf
loop
or
les
mov
or
sarl
pushl
or
adc
aam
adc
std
pop
dec
subb
mov
mulb
mov
xchg
inc
jbe
iret
ret
out
loop
testl
pop
push
adc
in
ss
jg
mov
loop
mov
es
dec
pop
mov
js
inc
pop
pusha
ja
xor
add
xchg
dec
imul
in
jbe
cltd
sub
pop
popa
dec
lahf
adc
call
popf
mov
clc
push
jno
xchg
lea
mov
cmp
push
mov
cmc
dec
xor
mov
jne
push
and
psubb
sti
in
cmp
or
inc
inc
cmpsb
mov
cli
dec
ret
ljmp
xor
cmpl
xchg
ficoms
mov
cld
mov
xorl
stos
push
fdivl
fldt
sub
aam
je
sub
ss
mov
mov
xchg
in
scas
xor
push
test
notl
dec
cmpsl
in
in
sub
loopne
mov
and
fadds
sarl
in
jmp
movsb
dec
lret
inc
cltd
pop
les
addl
xchg
pop
lcall
cmp
ja
jmp
ret
andb
sbb
pop
mov
pop
int3
pop
adc
fidivrl
jp
adc
push
add
cmp
and
movsb
push
or
jns
cmc
mov
and
push
xor
and
cmp
les
xchg
and
outsl
add
inc
stos
in
hlt
lock
push
out
xor
mov
jmp
add
sbb
cmc
mov
jne
xchg
sti
das
dec
sbb
pop
xchg
ss
adc
leave
or
test
dec
pop
out
pop
mov
mov
sbb
cmc
js
enter
movsb
sbb
mov
jae
mov
shrl
sub
icebp
ja
outsl
into
pop
out
es
in
dec
cmp
test
hlt
mov
loop
or
xlat
add
aam
fbstp
loop
push
andb
xchg
mov
or
push
add
add
inc
mov
std
fcomps
dec
jl
pcmpgtb
cmp
mov
mov
outsb
or
add
in
add
jns
dec
sbb
fsubrl
loope
pop
or
xchg
rcll
xchg
xor
nop
imul
lret
mov
add
mov
cmp
movsl
or
test
xchg
jb
and
pusha
fadds
faddl
xchg
sub
in
out
xorl
mov
ret
mov
push
ret
mov
inc
mov
test
sahf
orl
fmuls
orl
or
test
jo
ss
dec
jae
jnp
daa
adc
cmp
jle
push
nop
fwait
add
sti
fcoms
testl
scas
test
shll
cs
xchg
cld
pop
mov
and
insl
push
push
stc
shll
add
pop
pop
adc
mov
sub
fs
ret
push
stos
in
add
icebp
pop
inc
les
or
mov
mov
mov
std
inc
sbb
jbe
ss
mov
mov
test
out
pop
xor
inc
push
push
jo
aad
call
sbb
das
test
lret
xor
ret
aas
xchg
xchg
stos
jg
jl
lods
sbb
test
mov
xor
lret
mov
cmpsb
imul
lcall
stc
or
imul
add
cmp
aad
enter
rcrl
xor
popa
jg
and
clc
fcmovbe
call
jge
inc
push
cmp
xchg
out
pop
bound
mov
adc
dec
mov
into
popl
sar
add
outsb
mov
sbb
int
mov
mov
sbb
mov
lock
sbb
dec
xor
mov
push
lret
out
insb
xchg
sbb
ds
adc
push
loope
jb
popl
xchg
inc
adc
imul
out
cmpsb
and
in
int3
xchg
cmp
mov
sub
push
lods
mov
mov
cmp
xchg
push
pop
sbb
flds
and
cmpsl
pop
add
cli
push
rolb
int
lods
xor
sarl
mov
push
sub
fdivrs
insb
repz
add
test
and
mov
sbb
decl
test
pop
and
mov
xor
push
subb
xor
cmp
sti
mov
cmp
cmp
out
sti
jbe
sbb
dec
jecxz
pause
clc
cld
cmp
xor
int3
mov
scas
movsb
pusha
imul
pop
out
add
add
aam
cmp
adc
cmp
shr
dec
fmuls
hlt
pop
mov
fisubrl
jl
iret
push
add
adc
in
or
mov
fadds
pop
push
jmp
add
and
ret
in
adc
fimull
pop
jne
popa
or
pop
pop
dec
sbb
filds
stc
data16
pop
adc
cmpsb
push
mov
fs
mov
and
pop
bound
sub
xchg
pop
xor
lahf
dec
xlat
cmp
fidivs
pop
and
add
jnp
outsb
xchg
add
pop
ror
fbstp
das
test
jmp
imul
cmp
push
scas
scas
adc
and
jnp
aad
ret
xor
stc
jno
bound
xor
cmc
out
push
test
xchg
stc
ds
rolb
ljmp
mov
pop
add
fisubs
repnz
pop
filds
adc
add
ljmp
ret
mov
aam
test
mov
outsb
jo
or
mov
mov
mov
imul
inc
mov
jb
jp
lret
mov
in
pop
fbstp
mov
stos
add
pop
push
push
cmpsb
stc
inc
or
test
cmpsl
cmp
sub
xor
in
dec
imul
mov
sbb
mov
stos
or
xchg
pop
mov
dec
jmp
dec
cmp
rclb
leave
pop
insl
pop
jo
test
movsl
xor
sub
jbe
lds
aam
arpl
lods
and
mov
int
mov
push
js
xchg
mov
rcl
jno
in
frstor
jno
xlat
pop
mov
push
fcmovnb
and
orb
daa
js
sub
loope
arpl
mov
inc
fsubr
cmpsl
xchg
cld
mov
pusha
mov
ss
dec
or
cmp
xchg
xor
lahf
and
jne
mov
cwtl
jg
sbb
loope
test
cmc
in
in
push
cmp
cltd
js
mov
mov
add
xchg
bound
jae
mov
mov
scas
fcmovnb
arpl
or
and
sti
imull
ret
test
ljmp
loop
pop
lcall
inc
push
jnp
cwtl
adc
out
pop
out
jmp
sub
testl
int3
xor
jmp
lret
sbb
cltd
in
loop
shl
or
sbb
cs
test
lret
subb
mov
je
inc
cmp
mov
test
popa
idivb
adc
sub
pop
mov
adc
xchg
mov
enter
lret
pop
xlat
orb
test
dec
or
jl
xchg
sbb
lods
inc
fsubs
and
ljmp
test
mov
sub
jg
jo
inc
inc
nop
pusha
adc
cs
lds
sbb
pop
xor
sub
sub
jle
nop
insl
or
movsb
insl
or
inc
jecxz
lock
test
cli
mov
cmc
repz
mov
popa
push
daa
outsb
mov
push
out
int
in
xchg
je
cli
push
xchg
xchg
pusha
imul
movsl
pop
sbb
cmpb
enter
sahf
push
sbbb
or
sbb
push
sbb
adc
push
sahf
mov
add
adc
jno
mov
dec
cmp
mov
xchg
or
mov
inc
dec
int
mov
add
lea
js
lcall
cmp
cwtl
mov
xchg
cmpsl
xchg
cmp
in
out
pop
mov
jg
dec
mov
push
ja
inc
bound
outsl
les
sub
mov
pop
mov
sbb
adcb
adc
jae
adc
pushf
cli
repnz
dec
lock
xor
ret
arpl
sbb
dec
sub
mov
call
adc
push
in
int
shll
je
mov
adc
inc
mov
or
pop
mov
repz
pop
inc
dec
mov
inc
push
fidivl
sub
adc
sbb
jb
pusha
aam
mov
push
add
fldenv
sub
cmp
adc
sub
adc
sbb
push
in
shlb
iret
outsl
sbb
mov
icebp
fnsave
mov
sub
ret
iret
and
mov
loopne
jnp
test
cwtl
pop
mov
fwait
sarl
dec
sbb
aas
lea
sub
mov
or
sub
pop
test
mov
mov
ret
add
das
pop
or
add
stos
sub
mov
adc
jge
mov
mov
jae
lds
cwtl
aad
cmp
mov
int3
sub
xlat
adc
lcall
push
push
adc
cli
aaa
std
es
lret
loop
mov
sbb
lea
aad
sub
sub
sbb
cmc
xor
in
add
push
rcll
out
add
pop
stos
jns
cmp
ljmp
popa
cmp
or
mov
outsl
push
incl
lds
jnp
jecxz
xor
sahf
out
mov
pop
pushf
icebp
or
fs
cmp
int3
inc
scas
in
xor
and
xchg
dec
pop
punpckhwd
insl
sub
rcr
aam
push
les
sub
add
shrl
aam
push
andb
cmp
int3
stc
lock
mov
mov
clc
popf
jnp
push
fiadds
pop
pop
xor
fistpll
repz
mov
adc
push
mov
and
test
pop
pop
add
lret
push
jns
and
adc
or
sahf
jo
cltd
xor
add
in
popf
dec
insb
lods
nop
fcmovbe
jnp
push
popf
pop
stc
repz
add
sbb
add
in
imul
sbb
bound
or
fcoml
xlat
pusha
btr
mov
fs
out
sti
es
fisubrs
in
cld
adc
fdivp
jno
sub
es
mov
in
shlb
inc
stos
scas
cmpb
and
scas
les
sbb
mov
dec
xchg
add
mov
scas
ljmp
push
add
pusha
test
rcrb
dec
insl
dec
fdiv
dec
inc
ret
sub
vmovq
popa
ja
jecxz
jb
les
add
in
pop
into
pop
sub
xlat
and
loopne
pushf
sub
mov
xor
add
shrb
imul
imul
pop
stc
xchg
dec
ljmp
lahf
mov
sub
xor
mov
cltd
outsl
mov
lods
inc
dec
cmpb
lret
inc
fidivs
pop
dec
mov
sbb
or
scas
movsl
pushf
ret
push
jp
lea
push
lods
fdivrs
or
in
jp
cltd
lcall
adc
mov
inc
addr16
bound
mov
xchg
pop
mov
lock
ret
mov
mov
loope
mov
jno
push
mov
xchg
inc
enter
stc
pushf
push
mov
adc
sbb
xchg
sub
pop
lret
mov
hlt
jge
mov
push
push
mov
outsb
pop
ja
je
stc
dec
or
fcom
mov
xchg
inc
popl
andl
gs
repz
jg
xor
aaa
and
roll
or
xor
out
cltd
int3
sbb
adc
mov
out
and
fstpl
pop
cs
or
push
inc
mov
fnstcw
in
cmpsl
outsl
jmp
sar
fnstenv
std
cmpsl
int
or
sub
call
add
cmp
inc
xor
adc
bound
fildl
adc
sbb
add
test
scas
lods
push
sub
lret
sub
lods
mov
push
mov
fisttpl
dec
add
lret
popa
insl
test
inc
and
sub
out
dec
mov
dec
mov
rol
jbe
icebp
and
repnz
mov
cmp
cwtl
lret
or
arpl
adc
or
int
mov
mov
shrb
movsl
add
test
fsub
mov
xchg
sbb
ret
and
popa
inc
cmp
mov
mov
xchg
aaa
je
daa
adc
jmp
jo
adc
jbe
ret
sbb
addr16
mov
sarl
cmp
push
lret
sbb
and
pop
repz
sti
sarb
dec
pop
std
mov
dec
sbb
addr16
jmp
mov
ret
aad
mov
lea
and
mov
scas
fidivs
add
jl
cli
mov
and
cmc
ja
mov
push
lret
adc
jge
mov
sbb
addb
and
jp
adc
and
push
and
imul
call
cmp
mov
movsb
xchg
xchg
bound
pop
xor
scas
nop
ficompl
add
jge
test
int
sbb
adc
fistps
enter
xchg
push
sub
in
mov
arpl
adc
xor
in
sub
mov
fisttpll
jnp
xchg
pop
nop
push
push
inc
or
pop
dec
inc
adc
inc
test
pop
adc
rorl
test
rorl
out
ss
rorb
pop
pop
fcomp
jle
rorl
mov
lock
rcrl
mov
jecxz
push
iret
xor
fwait
pop
push
and
pop
in
inc
sti
sti
into
clc
dec
fdivs
sarb
adc
js
push
add
les
xchg
xor
and
push
sbb
ret
adc
sub
inc
sub
and
mov
add
push
xchg
sti
imul
mov
xchg
ds
fcomps
push
lcall
mov
lahf
add
mov
cmp
xchg
jecxz
lahf
mov
fldcw
dec
xlat
cli
inc
mov
xchg
push
inc
loope
sub
inc
mov
sbb
or
jae
push
mov
jo
adc
fisttpl
lret
js
outsb
push
jns
cwtl
imul
aad
test
mov
mov
ja
pop
push
or
and
or
cwtl
std
fadds
mov
add
arpl
mov
into
inc
movsb
sub
lock
sahf
push
sarl
mov
jecxz
sub
ljmp
pop
aaa
mov
addr16
cmp
out
inc
aad
push
cmpl
sub
out
ret
in
xor
adc
push
mov
jno
pop
insl
and
arpl
sahf
in
addr16
into
sbb
jmp
mov
jnp
cs
lods
push
js
mov
scas
mov
xchg
lahf
add
inc
sub
data16
fwait
sbb
ds
inc
filds
in
dec
fists
xor
outsl
push
adc
enter
xchg
cmp
mov
stos
ljmp
int
adc
in
mov
xchg
lea
aas
cmc
test
out
xchg
mov
xchg
aaa
in
xchg
rolb
loopne
out
dec
pop
in
push
addr16
jno
leave
into
mov
sub
mov
push
pop
jle
jne
inc
xorl
push
push
dec
filds
popf
insb
push
js
je
jo
inc
mov
xchg
fs
xor
rolb
pushf
pop
in
cmp
inc
into
lods
and
pop
jbe
sub
frstor
es
out
mov
push
mov
cmp
push
inc
pop
add
outsb
jmp
push
mov
cmp
pop
fdivrl
movsb
stos
shlb
adc
inc
addb
mov
xor
jl
ret
push
lods
sub
jns
lret
pop
mov
xchg
insl
pop
dec
iret
sti
mov
jmp
add
popf
arpl
ret
nop
xchg
mov
fldt
mov
lahf
dec
push
jo
dec
sbb
aaa
ljmp
xlat
mov
jne
inc
sbb
push
add
mov
add
mov
fs
sahf
cmpsb
add
xor
jl
outsl
in
out
mov
shlb
or
sbb
adcl
xchg
lret
push
repnz
xor
pop
or
sahf
arpl
and
add
cltd
xchg
loop
and
fs
repnz
push
outsl
stos
cmp
fst
mov
out
icebp
xchg
loopne
mov
and
call
jg
cs
or
mov
lret
repnz
les
push
lcall
mov
pop
push
addr16
pop
jmp
push
and
fwait
cmc
mov
dec
xlat
dec
jns
cmp
mov
addr16
pop
xor
push
data16
sbb
xor
mov
or
cmpsb
xlat
nop
push
add
pop
mov
out
add
subb
push
in
xchg
inc
mov
rclb
or
jmp
or
mov
inc
pop
push
lcall
inc
addr16
inc
in
insl
popf
loop
cwtl
mov
aaa
jns
pop
add
sub
push
cmpsb
in
jle
sub
jno
fcmovu
pop
pop
push
test
mov
test
mov
je
mov
mov
ljmp
pop
mov
push
hlt
into
jns
stc
enter
into
xchg
sbb
inc
vmwrite
fsts
xor
int
fstl
adc
lods
mov
cwtl
sbb
push
outsb
or
jne
jmp
xor
jecxz
rorb
dec
mov
mov
inc
adc
dec
lods
jge
jle
xchg
scas
pop
shl
insb
jbe
in
xor
or
push
adc
jmp
fistl
push
rcll
sub
or
shr
or
sub
sub
xor
jne
mov
rcr
popf
push
sbb
test
mov
shll
mov
lret
inc
and
repz
aam
adc
movsb
shll
fwait
mov
push
cmp
push
xor
outsb
int
inc
xchg
ret
push
add
rorb
scas
inc
mov
aaa
mov
mov
dec
xchg
loope
dec
cmp
sub
arpl
inc
inc
and
add
mov
icebp
out
stos
inc
mov
test
mov
leave
mov
pushf
push
xchg
adc
js
ret
jle
inc
cmp
sti
sbbl
pusha
xchg
mov
ret
and
in
jle
into
std
push
cmpsb
sbb
mov
in
fstps
dec
test
sub
cwtl
push
cmc
inc
es
call
sbb
sub
es
xlat
sub
sub
push
ficoml
adc
ret
dec
loop
or
mov
pop
xor
sub
push
sbb
pop
in
cwtl
dec
fsubrs
mov
mov
dec
aam
int3
in
cmpsb
and
sub
mov
adc
sbb
in
rcll
dec
iret
scas
jno
push
fldenv
add
cmp
mov
loope
cmp
lcall
push
sbb
mov
pop
xor
lea
jmp
mov
out
cmpsb
movsl
add
mov
mov
cmp
pop
icebp
mov
ja
mov
idivb
and
pusha
shl
push
adc
mov
popf
mov
sti
push
frstor
adc
pop
aad
jne
lret
pop
fbstp
pusha
popf
cmp
mov
adc
lcall
cmp
push
cmpsb
add
lea
jae
xlat
adc
setno
and
stos
addb
jne
push
ret
adc
nop
loope
dec
test
mov
and
jl
das
pop
lret
xchg
mov
cmpsl
js
mov
rcrl
std
jle
xorl
mov
or
add
mov
push
stos
mov
or
lahf
jge
sub
jp
movsb
adcl
mov
stc
jge
adcb
jnp
arpl
cs
add
outsl
aam
or
and
jmp
mov
stos
jae
out
mov
mov
ja
dec
and
hlt
lds
pop
inc
sub
arpl
push
push
imul
cmp
push
icebp
jne
stos
icebp
inc
xchg
imull
iret
xor
pop
div
add
aam
sbb
inc
aaa
popa
inc
mov
pop
movsb
mov
repnz
fistpll
fsub
in
jne
sarl
push
aas
push
sub
jge
ss
xor
jmp
sbb
lods
mov
fldt
cmp
add
add
jge
leave
roll
fdivl
loope
cwtl
ljmp
shrb
dec
xchg
fsubrl
imul
imul
pop
aad
scas
xchg
lea
sbb
xor
inc
xor
leave
out
mov
test
add
repz
ss
xchg
mov
outsl
ja
mov
out
add
mull
fs
ljmp
dec
jl
arpl
icebp
cld
lock
pop
mov
pop
out
paddd
add
push
pusha
adcl
mov
pop
mov
enter
push
dec
lods
mov
dec
lods
roll
std
repz
xchg
loope
lock
adc
cs
xchg
fdivr
repz
dec
test
sahf
hlt
fsub
popa
xor
rcll
hlt
int
pop
mov
push
stos
lea
lds
mov
mov
sub
xor
test
pop
sub
add
ds
js
fmuls
rcll
lds
sbb
mov
test
mov
test
test
mov
push
pop
cmp
insb
repz
or
push
movsl
pusha
jmp
jp
test
and
or
repnz
jne
pusha
pop
insl
insl
test
push
ja
ret
ret
outsb
call
mov
cmp
ja
cmp
aas
adc
xchg
inc
jno
test
mov
aaa
push
xchg
push
rorb
into
scas
xchg
aas
cmp
and
aaa
sarl
adcb
cmp
push
insl
push
mov
xchg
mov
jl
inc
leave
sub
push
aas
xchg
cld
cmp
jmp
popa
icebp
sbb
stos
pop
out
in
pop
pop
sub
ljmp
pushf
cmp
mov
pusha
mov
lods
mov
mov
out
bswap
push
xchg
jg
push
idiv
jo
pop
loop
fisttpl
lahf
push
insl
daa
or
or
mov
fwait
and
inc
ja
pop
es
test
lods
mov
cmp
mov
gs
loope
repz
push
push
addr16
mov
idivl
leave
pushf
xor
mov
hlt
push
adc
in
dec
cmp
jno
ss
cmp
mov
sbb
cmpsb
mov
sahf
add
aad
cmpsl
cld
xchg
enter
std
into
into
std
mov
jg
sub
push
and
push
mov
inc
loope
test
in
push
pop
add
in
call
sti
jbe
adc
fdiv
push
movsb
mov
sarb
and
inc
pushf
mov
jne
fdivl
shl
lock
shll
cmp
cwtl
xchg
mov
or
dec
in
testb
or
test
mov
xchg
pop
xor
sbbb
aam
stos
insl
leave
test
dec
sbb
aad
rclb
fyl2xp1
popa
xor
jmp
push
inc
sti
aam
fildll
loop
daa
and
cli
adc
mov
js
xchg
ljmp
xor
xchg
sarb
test
push
movsl
insl
pop
bound
and
mov
adc
fwait
aaa
sbb
xchg
add
cli
sub
push
gs
aad
dec
ja
xchg
xchg
cmp
fadds
jmp
xchg
movsl
and
cld
mov
out
insl
popa
sti
adc
xor
outsl
pop
adc
je
scas
sti
inc
out
test
outsb
neg
pop
stos
lods
dec
int3
xchg
mov
std
loopne
cmpsb
cmpsb
and
xacquire
or
or
or
lcall
lret
xor
lcall
dec
xchg
sbb
loop
cld
fwait
mov
test
fbld
cmp
test
je
aas
mov
rcrb
jns
fnsave
push
cmp
lea
sub
aam
or
mov
and
lods
fwait
xchg
mov
movsl
in
repnz
and
adc
jne
adc
repz
loop
push
jmp
dec
jb
lods
jne
xchg
out
fiaddl
ret
js
push
add
mov
pop
setae
sub
test
cmp
pop
sbb
add
roll
xor
outsb
sahf
jo
out
adcb
loopne
xor
or
xlat
in
jmp
xlat
dec
jnp
in
int3
add
sti
sbbl
cmp
pop
mov
adc
mov
fwait
idivl
mov
jb
cmpb
mov
rolb
aas
and
dec
rcrb
je
out
pop
cmp
add
mov
xchg
add
cmc
mov
inc
sbb
lock
mov
dec
cmpb
inc
out
push
sub
mov
cmp
pop
scas
mov
and
xchg
adc
push
je
mov
insl
xchg
es
push
xor
pop
daa
aad
jmp
add
sbb
sbb
push
and
repnz
mov
je
pop
cwtl
out
gs
lods
int3
lock
sbbl
mov
movsl
inc
mov
in
jnp
clc
cmp
cmp
negl
or
add
add
dec
ljmp
in
xor
sti
jmp
fisttpll
inc
cmp
adc
xchg
push
sbb
mov
mov
push
and
lods
and
mov
inc
add
pop
loop
sbb
ficomps
push
pop
rorl
dec
test
loop
mov
outsb
aas
lcall
aad
scas
jnp
int3
std
loopne
push
fmuls
xchg
mov
dec
in
es
mov
cmp
push
push
in
out
xchg
aad
add
sbb
insl
rcrl
mov
add
and
arpl
in
push
xor
lods
mov
xchg
nop
les
add
cmp
jo
lret
aam
xchg
cmp
sbb
inc
sub
sub
jl
inc
cmp
fdivrs
fdivrs
pushf
xchg
mov
lods
cmp
shl
dec
rcrl
push
lods
test
inc
test
cmp
dec
mov
mulb
leave
movsl
ffree
cld
repz
mov
xchg
jmp
mov
mov
pop
add
cmpsb
sbb
jae
dec
jmp
ljmp
js,pt
lret
iret
das
scas
fldenv
mov
outsl
mov
test
scas
sti
inc
xchg
cmc
inc
imul
push
lock
add
ljmp
sub
xchg
ljmp
mov
and
aaa
mov
cmp
lret
test
and
pop
sahf
sub
imul
and
imull
sub
mov
lock
jnp
rclb
sub
lahf
aam
adc
nop
cmp
adc
and
adcl
inc
inc
jl
pop
xchg
int3
sub
push
inc
inc
fsubs
out
pop
mov
add
push
in
addr16
in
sbb
in
cmp
push
in
aam
ror
test
lds
push
fbld
or
mul
push
pusha
jns
aaa
jb
mov
ret
repz
std
mov
inc
or
rcrl
mov
cmp
in
gs
rcll
outsl
mov
mov
repz
shll
mov
jle
idivb
dec
mov
ja
push
mov
ret
pop
add
mov
dec
mov
add
xchg
and
push
jae
das
push
outsl
or
test
lahf
sub
lret
rol
stos
push
jle
out
cld
jl
iret
inc
sbb
clc
add
sub
add
jbe
mov
mov
push
jg
in
mov
cmp
pop
mov
sbb
mov
mov
pop
mov
iret
add
jnp
sbb
rorl
stos
aaa
and
pop
mov
jns
std
or
or
ljmp
int3
adc
loopne
outsb
pop
popf
lds
in
pop
insb
cmp
insl
cmp
mov
xchg
inc
mov
into
inc
cmp
dec
in
dec
mov
pop
jge
ljmp
aam
and
pop
mov
jecxz
pushf
insb
and
mov
lret
aaa
loop
orb
repnz
inc
xor
sarl
test
test
jle
mov
ss
mov
jp
je
imul
fildll
and
sbb
push
fistpl
mov
and
pusha
push
cs
imul
and
xor
mov
mov
inc
mov
scas
push
mov
pusha
daa
jg
add
imul
xchg
es
mov
sti
into
cmc
mov
or
jnp
mov
push
or
push
repz
cmc
jmp
in
lret
pop
jb
inc
cmpsb
jecxz
sub
popf
mov
in
lret
sarb
push
enter
bound
subl
data16
in
roll
dec
jle
out
xor
inc
mov
nop
enter
mov
or
cli
out
dec
adc
cmp
add
push
mov
or
cld
rol
or
int
lods
gs
push
sbb
adc
ret
insb
or
ljmp
pop
ret
add
ss
xor
xor
ss
fsubs
dec
cmp
pushf
fisubs
jge
das
mov
lea
test
inc
rcl
inc
testl
fisubrs
test
and
test
arpl
loope
pop
ret
mov
cmpsl
out
fidivs
jbe
mov
aas
loope
pushf
fdivs
pop
sahf
iret
or
repnz
aaa
fdivrl
in
cmp
jecxz
jno
ja
mov
std
js
lds
loop
sub
pop
push
pop
shll
adc
jp
dec
xchg
lea
mov
adc
nop
popf
push
je
add
mov
and
fnstenv
pop
icebp
cld
mov
xchg
and
adc
mov
xchg
mov
sub
fcoml
xchg
inc
adc
jmp
mov
fldenv
jl
or
nop
adc
lcall
cmpsl
das
pushf
loope
lret
adc
fisubrs
les
addr16
add
dec
call
cmc
andb
imul
sub
xchg
jnp
dec
mov
fimull
aam
adc
cmp
mov
mov
ds
cmpsl
add
mov
xchg
sti
sub
xor
mov
ret
cltd
or
mov
cmp
xchg
movsb
ficoms
xchg
dec
and
and
repnz
jmp
pop
addr16
push
cmp
lea
sahf
int
into
xchg
push
fcompl
xchg
repnz
aad
pusha
sbb
adc
ljmp
jge
lahf
inc
out
popf
test
mov
mul
aad
cwtl
sub
mov
clc
inc
mov
push
cld
js
outsl
roll
clc
push
in
cs
aaa
adc
incb
push
cld
incl
dec
push
jp
cltd
call
jle
pop
xor
aaa
in
or
out
enter
or
repz
pop
inc
cmpsl
pop
cld
int
push
leave
xchg
jo
movsl
cmp
sbb
sub
out
push
xor
stos
rcrl
je
movsl
in
sahf
ret
push
dec
out
mov
cmp
mov
ret
in
test
xchg
jne
pop
push
cmp
add
inc
mov
jae
xor
adc
add
mov
scas
dec
push
adc
add
fistpl
daa
mov
push
mov
xor
dec
es
sbb
mov
int3
nop
popa
xchg
mov
mov
pop
add
push
ss
int
sarl
xchg
or
xor
mov
mov
xchg
cmp
mov
cmp
mov
test
push
nop
aam
xchg
mov
add
lock
scas
add
scas
pushf
sbb
ret
mov
loop
add
mov
jle
imul
pop
push
and
cmp
mov
scas
les
hlt
adc
test
push
ret
std
mov
jl
mov
mov
add
pop
sub
pop
dec
fidivrs
lock
mov
jne
mov
pop
dec
push
inc
mov
dec
popa
jae
inc
push
roll
lods
cli
test
fnstenv
inc
jne
fdivrs
fcmovnbe
jb
jge
scas
and
cmp
jno
mov
push
and
cld
lock
lds
lods
aaa
push
push
test
mov
dec
sub
ljmp
movsl
sbb
mov
pop
jp
mov
cwtl
in
loopne
mov
cld
cmp
aas
adc
jecxz
lret
movsb
adc
in
insl
mov
jge
add
xchg
insb
push
js
inc
adc
jp
cltd
add
mov
aaa
push
add
insb
mov
jg
cmp
jno
out
fstpt
test
ret
cmpsb
pop
jno
jmp
lahf
aam
in
mov
mov
jnp
ljmp
push
add
cmpl
sub
fcompl
or
xor
lods
mov
mov
inc
fxch
xchg
icebp
enter
push
push
stos
mov
or
dec
fisubs
roll
shr
mov
mov
adc
sub
or
aad
add
enter
or
hlt
stos
repnz
test
clc
arpl
aaa
sbb
nop
dec
push
inc
and
cmpsb
aam
push
fwait
sub
mov
aaa
cli
fldenv
insb
bound
stos
test
add
insb
xchg
pop
cmp
out
or
out
add
loop
xor
sub
or
add
push
leave
mov
add
out
out
push
cld
dec
sub
sarb
imul
jb
jae
pop
gs
or
and
lea
dec
xchg
lcall
movsl
sub
pushf
adc
inc
enter
stc
inc
cmp
adc
leave
xchg
in
jg
jae
ficoml
jecxz
icebp
sbb
sbb
lods
jle
jae
mov
pop
in
and
loopne
rol
inc
out
xchg
clc
rorl
and
sub
aaa
rorb
xor
or
in
push
or
sbb
stos
sbb
mov
mov
jg
sti
outsl
ljmp
test
jmp
test
inc
scas
ljmp
pop
lods
cmpsb
sti
add
mov
cmp
and
mov
pop
insb
mov
add
or
sbb
jno
inc
sbb
dec
jno
repnz
push
or
sbb
jae
pop
xor
inc
xor
ret
sub
aas
cmp
cmpsb
std
xor
push
mov
xchg
sbb
ja
out
cwtl
jmp
cltd
shlb
sub
faddl
inc
inc
jnp
push
adc
ja
out
iret
push
dec
inc
in
clc
lcall
arpl
hlt
pusha
mov
in
mov
pop
into
mov
and
xchg
inc
push
sub
shrb
cmp
fidivrl
repz
int3
pop
je
ljmp
mov
divl
sbb
mov
pop
insl
adc
js
sbb
jnp
arpl
xor
das
sub
pop
cmp
jmp
ljmp
or
popf
enter
mov
and
xchg
push
aam
pop
lods
ja
shr
in
fimuls
lock
out
enter
mov
jbe
fs
pop
popa
imul
push
add
xchg
sub
and
add
das
dec
sub
inc
repz
sub
jge
mov
fs
into
fdivrs
push
mov
rclb
pop
les
mov
mov
xchg
roll
add
add
push
xor
ficoms
icebp
iret
aad
jmp
lcall
sbb
cmp
clc
div
fidivs
mov
inc
int
mov
xor
and
decb
aad
jbe
fscale
lret
jmp
fists
xor
fsubrs
push
fldpi
mov
loop
sbb
mov
scas
add
std
lret
push
jecxz
or
pop
aas
mov
inc
out
insl
imul
pop
sbbb
push
sbb
push
test
xchg
lods
mov
cmp
sahf
repz
pop
adc
cmc
or
sbb
lock
rcrl
mov
outsb
stos
sti
add
xlat
movsb
mov
repnz
aam
fsubs
fwait
cmpsb
add
fs
pop
dec
lahf
jmp
mov
inc
ret
jmp
nop
lahf
ja
scas
rcrb
addr16
jne
fstpt
jg
pop
out
aaa
jle
scas
jno
inc
inc
add
mov
dec
xor
adc
jns
push
push
xchg
jnp
outsb
add
cmp
aad
fdivrs
lcall
jno
fucompp
jb
pusha
test
stc
dec
push
and
fcos
xor
nop
cmp
pop
inc
ds
fisttpll
cwtl
lret
je
movsl
mov
inc
popf
dec
out
stc
xchg
cmc
add
jne
and
xchg
push
cwtl
fwait
arpl
outsb
loop
popf
incb
insl
shll
aaa
xchg
dec
adc
inc
fsub
rolb
and
js
scas
out
cmp
jl
lahf
stos
cmpsb
mov
lds
mov
and
xchg
in
dec
and
sub
loopne
inc
in
std
subl
les
fcomps
sbb
cmp
adc
xchg
sub
mov
in
stc
mov
dec
popf
pop
mov
jle
orps
out
and
outsb
cld
sbb
pop
jo
fdivs
outsb
insb
arpl
push
mov
in
rol
fsub
outsl
jne
pop
pop
add
sahf
enter
bound
insb
sbb
das
sbb
pop
mov
subb
sbb
movsl
sbb
mov
mov
adc
mov
pop
xchg
cli
test
adc
hlt
push
int3
xor
xor
adc
test
push
mov
mov
in
and
mov
xchg
dec
xlat
or
xor
lea
add
jl
fimull
dec
ss
iret
xor
cmpsb
dec
iret
inc
mov
and
and
xchg
int3
movsl
pop
pop
add
leave
mov
pop
mov
nop
cs
ffree
mov
lods
cmp
sahf
sub
cmp
jecxz
add
fwait
jl
sarl
mov
stc
adc
std
pop
mov
push
inc
imul
clc
and
mov
dec
push
sub
addr16
add
repz
and
mov
push
adc
repnz
enter
movsl
add
dec
adc
xor
add
pusha
hlt
inc
pop
enter
inc
jecxz
dec
roll
fstpl
ja
mov
or
mov
es
sub
lods
cmp
push
dec
jecxz
jbe
loopne
in
xchg
mov
daa
jb
adcb
xor
push
dec
lea
sti
repnz
std
pop
mov
movsl
mov
in
or
xor
sub
bound
jg
mov
pop
lods
or
add
rclb
and
ret
stos
shrl
push
pusha
pop
add
imul
dec
xor
pushl
popa
cmp
jae
cld
pop
and
mov
test
jecxz
cmc
fsubl
mov
cld
jg
sbb
adc
and
jl
inc
mov
and
sbb
mov
shlb
aam
hlt
adc
pop
or
loope
insl
out
xchg
xchg
cmpb
int
insl
lods
test
pop
decl
mov
lea
jp
cli
adcl
jecxz
repnz
fnstcw
movsl
fs
ss
fimuls
in
pusha
add
or
pop
xor
incl
cmpl
jl
out
jl
push
xchg
mov
mov
mov
sbb
pop
data16
lcall
negl
push
stc
xor
sbb
gs
add
movsb
movsl
mov
in
shlb
mov
sub
or
roll
arpl
cmpsl
pop
adc
pop
push
fst
in
cmpsb
mov
mov
notl
or
inc
hlt
pusha
fnstsw
imul
xchg
mov
das
mov
sub
hlt
push
cld
int
test
and
mov
fdivrl
adc
fstl
cmp
and
ret
jne
popf
and
cmp
pavgw
inc
pop
and
into
or
gs
add
dec
jge
jmp
or
mov
pop
loopne
inc
data16
lea
xchg
in
xor
pop
push
into
dec
fdivrl
push
fs
jecxz
aad
mov
or
sbb
pop
sbb
cli
or
cmp
fs
add
fstpl
xchg
aad
popf
jl
xor
sub
pop
pop
movsl
and
test
or
dec
mov
xor
xor
xchg
adc
fisubrl
or
repnz
jg
adc
xor
pop
push
xor
lahf
jnp
fnstcw
iret
cmc
sub
lahf
xchg
mov
inc
icebp
add
pop
xchg
fst
cmp
mov
jns
sub
inc
repnz
outsl
stos
out
insb
pop
div
pusha
stos
mov
sub
add
ret
sarb
test
sub
adc
scas
jl
imul
movl
xor
mov
dec
call
push
test
ret
mov
repz
fists
pop
aas
fcoml
js
es
loopne
sbb
mov
subb
sar
aaa
mov
xor
sub
sub
addr16
xchg
xor
ret
inc
rcr
sbb
push
adc
bnd
add
xor
push
and
aad
gs
or
in
loop
push
pop
iret
imull
fwait
adcb
movsl
mov
shrl
mov
push
shl
jg
divl
mov
jmp
jmp
inc
fdiv
test
add
es
mov
outsl
and
fucomip
adc
and
imul
push
mov
repz
rorb
jp
mov
xchg
push
adc
test
xor
lds
mov
in
pop
push
xchg
sub
xchg
mov
mov
adc
fists
mov
hlt
pop
mov
pop
cmc
mov
pmullw
adc
sub
testb
stc
xchg
cltd
push
mov
pop
lods
pusha
mov
push
jbe
loopne
sbb
insl
cltd
sub
adc
dec
cmc
ss
cltd
lods
arpl
repnz
arpl
dec
add
sub
mov
cmp
ret
aam
sbb
imul
lods
sarb
push
scas
jo
xor
fists
orl
pop
pop
add
xrelease
fsts
pop
jne
int3
repz
xchg
dec
or
jg
xlat
pusha
mov
fidivrl
inc
sub
xor
fldl2e
inc
push
dec
pop
mov
leave
sub
jmp
cmpsb
adc
jle
and
dec
mov
inc
jmp
dec
lcall
dec
jne
arpl
psubb
ds
jecxz
rcl
pop
mov
cmp
inc
xchg
int
ret
in
jg
add
in
bound
jl
ficompl
pusha
mov
and
cmp
mov
jns
xor
punpcklwd
jl
push
jo
mov
fnstsw
adc
outsb
test
sbb
aas
dec
in
cmp
and
cmc
rcll
and
in
std
jl
push
pop
pop
aaa
stos
out
lcall
xchg
dec
inc
xor
cltd
jno
mov
add
popa
sbb
hlt
jle
aad
push
or
cmp
aas
aam
stc
push
loope
mov
push
lea
mov
adc
inc
cmp
ja
inc
repz
divb
pusha
mov
cld
and
xor
xchg
mov
out
lock
mull
sarb
mov
push
mov
fildl
inc
dec
icebp
or
push
ret
or
push
leave
dec
jl
mov
sub
add
lahf
mov
adc
mov
stos
push
mov
ss
adc
cmpl
ljmp
and
imul
aam
xchg
xor
jno
cmpsl
ret
movsb
add
xchg
out
rcr
enter
das
movsl
cmpsl
sub
sbb
xchg
movsb
into
aaa
shlb
inc
mov
loopne
pop
xchg
aam
in
cltd
mov
in
pop
sub
rol
scas
xor
std
inc
adc
adc
push
jle
inc
ret
push
mov
fwait
and
xor
movsl
sub
andb
mov
sbb
mov
cmpsb
imul
mov
icebp
stc
enter
test
push
pusha
mov
cltd
jl
cmp
hlt
adc
xorl
xor
mov
stc
mov
shr
cmpl
dec
ret
mov
jbe
sbb
add
push
or
add
push
pop
ja
lods
cmpsb
push
gs
push
leave
xor
pop
mov
pop
icebp
dec
repnz
mov
push
in
andb
lods
adc
cmpsb
shl
das
mov
adc
mov
mov
and
inc
in
or
inc
lret
popa
orb
fnsave
push
xchg
sub
push
inc
das
dec
mov
mov
cmp
aaa
xor
sbb
cmp
add
inc
jg,pn
push
mov
mov
repnz
sahf
xchg
sbb
movsl
sbb
sub
pop
mov
rcrl
mov
mov
cmp
cmp
sbb
pop
out
mov
aas
mov
cmc
cmp
in
je
hlt
ss
add
push
xor
sbb
into
repnz
movsb
insl
shl
ja
in
aas
jmp
or
js
xor
cmpl
cmpb
mov
cmpl
int
icebp
or
stos
lahf
stc
inc
call
dec
mov
fwait
push
ljmp
bound
jecxz
and
mov
lret
cmp
cmc
pop
xlat
lock
gs
xchg
icebp
fcompl
addb
dec
sbb
mov
push
or
fadds
push
pop
cli
and
sub
mov
shrb
xchg
jns
xor
mov
pop
sarb
daa
adc
loope
out
test
lret
xchg
imul
adc
xchg
xor
nop
mov
push
aad
sub
hlt
iret
push
daa
test
or
test
stc
pop
jg
pop
test
cmpsl
xorb
test
movsl
sbb
mov
dec
cmp
xor
addr16
imul
into
in
mov
cmp
mov
icebp
mov
in
push
mov
adc
shrl
jb
pusha
lods
push
jp
or
add
lahf
test
lea
aaa
mov
imul
inc
jae
popw
sbb
or
mov
out
sbb
push
or
push
xor
je
or
arpl
inc
inc
add
scas
dec
mov
call
scas
pop
movsb
and
mov
or
cmp
outsb
dec
loopne
xchg
ret
cmp
ja
ret
inc
stos
out
jle
je
pop
out
lods
icebp
cmp
lods
arpl
shrl
xor
push
sub
mov
out
pop
cmp
ljmp
push
or
sbb
cltd
sub
fmul
cwtl
pop
adc
xchg
cmc
inc
rorl
mov
shll
negb
dec
aas
jmp
mov
cmp
inc
dec
mov
out
xor
xchg
fwait
stos
mov
fisubl
inc
dec
and
mov
test
add
jp
xor
pop
fbld
push
sahf
pop
xor
popf
jno
adc
or
adc
les
push
dec
loopne
bsr
inc
xlat
orl
push
pushl
xchg
dec
sbb
popa
fimull
xchg
mov
push
mov
fwait
lret
outsb
cli
xchg
sub
ljmp
xlat
push
in
sbb
fwait
sub
lods
bound
and
repz
sub
jmp
pop
scas
pop
push
sub
xchg
ficomps
rorl
into
sbb
in
jp
inc
cmp
movsl
xchg
adc
fcoml
push
cld
mov
in
fidivrl
push
or
into
fcmovnb
and
das
mov
mov
or
mov
in
insb
fucomip
xor
shll
fistpl
iret
xchg
fcompl
in
and
sbb
cmpl
into
aas
add
mov
fildl
sbb
inc
std
sahf
ds
dec
loope
repnz
sbb
xchg
test
mov
push
psrlq
lods
jl
dec
add
mov
hlt
in
and
lods
and
dec
in
arpl
mov
sub
in
mov
dec
inc
pop
les
xchg
mov
jl
movsb
into
cmpb
adc
xor
sarl
subb
or
jg
lcall
fstps
mov
test
mov
inc
js
repnz
hlt
mov
or
xchg
mov
call
push
push
movsb
push
mov
mov
divb
add
loope
inc
add
frstor
mov
inc
push
fidivs
push
mov
xchg
xor
xchg
mov
mov
fisttpll
gs
dec
js
shlb
das
adc
subl
pop
outsl
decb
outsl
mov
pop
mov
ja
pushaw
gs
xchg
ss
xchg
inc
jp
les
add
xor
test
sub
xor
fwait
rcll
inc
iret
out
out
mov
mov
rorb
xchg
aaa
stos
push
xchg
jbe
mov
ret
lret
xor
test
jg
jp
cmp
jns
icebp
lods
xchg
add
sub
in
sbb
dec
xor
mov
data16
icebp
mov
leave
stos
je
int3
inc
aam
dec
ljmp
imul
scas
or
mov
jge
insl
push
les
mov
pop
push
cmp
pop
popa
pop
fcmovne
out
into
sahf
lock
fcomp
mov
pop
jns,pt
ljmp
inc
mov
push
fwait
add
lea
push
pop
lcall
add
mov
and
mov
xlat
scas
jge
sub
push
icebp
ret
dec
ret
jae
xchg
and
mov
icebp
aam
in
lahf
lock
sbb
lcall
into
data16
jp
in
mov
xchg
adc
mov
fimuls
dec
pop
mov
sbb
inc
aad
adcl
insb
repz
pop
test
xor
js
adc
sub
insb
movsb
mov
rol
jl
ja
cmp
or
and
int
adc
and
mov
jbe
dec
xor
out
movsl
or
add
jns
ja
mov
mov
jae
int3
sub
jns
sbb
stos
xchg
cmc
xor
fwait
cmp
or
cmpsl
cmp
mov
mov
das
cs
pop
mov
movsl
out
lea
sbb
bnd
cmp
lret
or
mov
and
push
jno
popa
stos
pop
mov
jle
aaa
popa
test
outsb
pusha
mov
sbb
repz
lret
mov
and
and
mov
xchg
test
dec
int
push
jne
mov
js
mov
std
lret
out
scas
push
movsb
imul
sbbl
iret
call
pop
loope
popa
pop
mov
sub
insb
popa
inc
rol
stos
pop
ja
mov
jbe
fst
fs
std
push
andl
rcrb
movsb
cmp
sbb
sbb
leave
pop
mov
push
adc
lods
cmc
ljmp
mov
sbb
push
lods
std
xchg
mov
rclb
mov
iret
pop
mov
adcl
or
or
jno
out
xor
loopne
jg
adc
lods
pop
fdivs
out
mov
sub
mov
jns
loopne
mov
subl
cmp
jmp
inc
mov
scas
pop
pop
sub
call
push
test
loop
mov
rclb
push
scas
adc
adc
adc
hlt
pop
imul
out
push
push
inc
imul
bound
out
cs
mov
inc
sub
rclb
or
push
ret
ret
cmp
cmp
hlt
jnp
leave
jbe
mov
cmpsb
jnp
push
push
jno
popa
mov
jecxz
pop
pop
lods
inc
ret
mov
xor
mov
ljmp
xchg
and
jb
fisubs
scas
push
sbb
cmp
jl
cltd
jne
adcl
aaa
mov
jae
adc
fninit
fnsave
lret
xor
add
lea
lock
sub
call
std
lods
add
shl
xchg
outsb
sub
addr16
fidivrs
and
jle
push
mov
testb
fcomi
testl
std
fs
xor
xchg
stos
sbb
pop
test
sahf
cli
sbb
stos
adc
and
pop
sub
cmp
jnp
cmp
xchg
movsl
cmp
mov
lcall
lret
mov
xor
insl
fcomi
shl
aam
lods
push
aad
fiaddl
sbb
ja
and
rorb
daa
int
xor
stc
xchg
xchg
fidivrl
in
jbe
in
sbb
outsb
mov
call
inc
xlat
lock
sbb
outsl
fisttpll
add
lea
sub
je
das
das
mov
pop
sbbl
mov
lock
pop
ja
outsl
or
ja
loop
call
shrb
pushf
or
je
jns
xlat
inc
mov
add
jb
xor
stos
mov
cltd
sbb
pop
imul
mov
cmc
js
mov
mov
mov
dec
out
mov
jns
push
pop
aaa
daa
mov
mov
in
mov
xor
push
scas
jnp
jp
xchg
adc
cmpsb
jbe
push
xor
jb
outsl
pop
test
int3
push
insb
push
xor
aaa
cmpsb
cli
daa
add
push
sbb
sarb
out
int
push
dec
jno
add
cmp
adc
sti
clc
rol
loop
lock
jl
shr
mov
sbb
lea
dec
stc
jmp
pop
xor
rcl
xchg
pop
xchg
ds
fnstcw
ljmp
sub
sbb
mov
adc
rolb
add
inc
divb
mov
sbb
push
adc
popa
mov
movsb
sbb
enter
in
jmp
jecxz
inc
pop
pop
fiadds
mov
xchg
jns
xchg
mov
mov
cmp
test
xchg
call
jle
dec
add
enter
not
stos
sub
leave
push
and
aam
out
js
not
std
insl
and
sub
and
xchg
icebp
or
fnstenv
sub
sub
sub
add
mov
in
int3
xor
cwtl
lret
mov
test
sarb
cmpsb
adc
sub
jbe
stos
ja
add
dec
lret
sbb
or
inc
dec
inc
stc
pop
js
test
maxps
shlb
or
aas
in
int
mov
mov
icebp
pop
mov
rcl
loopne
pop
sub
push
sub
incb
fcomps
pop
jge
in
and
hlt
or
push
add
add
jne
pop
mov
adc
hlt
mov
andb
and
and
rcrb
fcmovu
and
lcall
test
div
xchg
fsubr
mov
ja
mov
jne
repnz
mov
cmpsb
inc
popa
les
pop
cli
pop
sbb
or
sub
lret
imul
xor
mov
mov
xchg
loope
jnp,pt
or
and
mov
sbb
sub
inc
jmp
inc
imul
ds
jge
add
mov
or
cmc
icebp
cmp
jbe
ficoms
push
push
loope
sbb
mov
sub
addb
inc
xorb
sbb
jg
jbe
outsb
fwait
hlt
loop
mov
or
test
fidivl
jmp
inc
inc
jl
aad
inc
sub
add
test
lods
ljmp
lret
clc
or
addr16
das
pushf
dec
add
add
push
out
inc
sbbl
pop
push
call
mov
or
inc
xchg
sti
lods
ror
out
inc
xchg
arpl
xor
adc
mov
popf
lretw
xchg
jne
inc
jno
push
xchg
sub
mov
xor
jbe
mov
jle
push
stos
addb
cli
in
hlt
xor
xchg
pop
sub
shll
std
stos
xor
sub
loope
cmp
ds
add
and
dec
cmp
add
sub
push
lret
test
sti
scas
inc
pop
aas
xchg
jb
popf
loop
or
movsl
ret
insl
fwait
and
scas
out
adc
mov
jae
ret
shll
stc
repnz
sbb
jo
xor
adc
jae
sbb
adc
cmp
pop
pusha
leave
adc
push
fsubrs
sbb
test
mov
cmp
es
in
imul
call
jo
xor
in
add
cmp
dec
shl
sub
add
call
test
sub
lods
decl
in
and
stos
fcmovnu
dec
jo
xchg
dec
mov
pmullw
adc
shrb
test
std
clc
jmp
push
in
xor
js
cmpsb
int
cmp
lods
negb
test
cli
mov
cmp
mov
andb
push
push
jp
pushf
and
testb
and
mov
add
xchg
fisubrs
cmovns
cmp
into
cli
mov
movsb
and
fwait
loope
aas
xchg
inc
js
shrb
lea
pop
push
loop
mov
leave
jecxz
clc
imul
ss
mov
jno
movsl
mov
js
gs
cmpsb
sbb
jne
sub
sbb
mov
pop
xchg
adc
or
sbb
jg
xchg
in
xor
mov
movsb
sahf
sub
pop
xchg
sti
imul
enter
hlt
into
xor
pushf
repz
jne
or
jmp
lods
outsb
sbb
mov
call
xchg
test
in
xchg
andb
fsubrs
clc
xor
iret
xlat
stc
sbb
dec
shrb
jmp
xchg
and
out
jb
cmp
jne
mov
sub
ljmp
insl
adc
mov
add
or
xor
jbe
cmp
sub
jp
mov
iret
int3
cwtl
mov
mov
rclb
dec
push
mov
mov
dec
and
icebp
jecxz
mov
std
jecxz
outsl
jo
cmpsb
enter
testb
aam
mov
sub
mov
inc
mov
mov
loope
out
add
push
fs
sub
insb
xchg
pop
xchg
and
push
scas
stc
ljmp
dec
adc
std
mov
pop
das
mov
into
mov
mov
and
sbb
pop
outsl
ss
cmp
xor
adc
loop
fwait
dec
aaa
mov
loop
mov
icebp
and
aad
xchg
xor
dec
push
fisttpl
insb
mov
arpl
inc
inc
test
leave
ja
lcall
sbb
outsb
cmp
xor
rcrl
fcoms
fsubs
pushf
mov
dec
mov
push
fs
das
xchg
mov
lret
rcll
dec
leave
cwtl
mov
daa
rcl
mov
or
xor
pop
aaa
jge
dec
roll
sub
xchg
scas
mov
mov
xor
push
or
mov
mov
mov
xor
add
punpckhbw
or
mov
gs
mov
jg
popf
aad
das
pop
mov
stos
dec
in
loop
les
mov
outsb
jns
stos
push
adc
out
adc
loopw
out
out
icebp
or
push
mov
jge
ss
mov
add
pop
cmp
hlt
jle
je
fsubrp
imul
mov
int3
inc
cmpb
bound
das
lds
lret
mov
push
adc
xchg
sub
sub
push
outsb
pop
shlb
mov
xchg
out
jl
mov
xor
mov
push
jp
jne
fildl
in
out
lahf
add
add
pop
push
jae
call
out
pop
jne
mov
test
xor
mov
jnp
pop
fiadds
lahf
inc
pop
mov
pop
int
fisttps
dec
pop
into
out
xor
inc
pop
sbb
mov
xchg
mov
adc
jo
aad
jnp
lods
jg
pusha
adc
xlat
push
ret
loope
mov
scas
xchg
xchg
pop
test
add
jmp
mov
loop
bnd
shrb
adc
lods
push
repz
mov
rol
xor
leave
jbe
jno
daa
out
mov
mov
fwait
dec
pop
das
push
push
xchg
sub
popf
xlat
shrl
in
cmp
xchg
pushf
idivl
insb
fwait
push
dec
pop
pop
xchg
in
jns
sub
cld
ljmp
aam
mov
loop
or
xorb
test
push
es
rcrl
mov
cwtl
mov
punpckhbw
dec
push
and
push
mov
pop
dec
mov
out
stos
scas
sub
pop
mov
inc
cmpsl
bound
xchg
or
push
ret
lret
gs
pop
jge
imul
or
jg
push
push
cmp
pop
or
mov
jp
adc
sbbl
push
mov
add
dec
enter
add
in
shr
das
xchg
xchg
arpl
ret
sbb
pop
and
mov
mov
mulb
enter
mov
or
out
fistpll
pop
xor
stc
sti
dec
mov
cwtl
or
ljmp
aad
xor
cmp
mov
clc
add
push
sahf
jbe
sahf
push
dec
enter
repz
cmp
mov
fsubrl
int3
mov
test
push
cmpsl
push
or
sub
inc
test
inc
lock
je
shll
sbb
into
rep
in
jno
shr
lret
call
push
test
inc
cmp
mov
pop
pusha
mov
mov
notl
jne
cmp
cwtl
and
jb
test
daa
mov
and
int3
xor
jle
scas
pop
insl
xor
xchg
xorb
mov
sub
pop
xor
push
notl
xor
sub
in
or
and
dec
jne
mov
lcall
dec
pop
xchg
sub
iret
out
push
jg
jne
mov
xor
dec
sbb
cmovno
mov
xchg
mov
inc
out
cwtl
adc
cmpsl
jg
push
cmp
idivb
push
lds
push
add
loop
dec
fisubl
out
test
fs
pop
push
mov
cld
movl
ud0
outsb
jge
inc
pop
mov
mov
xor
push
sbb
push
inc
mov
mov
add
aad
mov
adc
push
aad
sub
cld
idivl
sub
decb
aaa
inc
jns
stc
cmp
jb
js
pop
fwait
cmp
push
outsl
fs
imul
cmpsl
xor
ret
enter
lods
or
enter
lock
jecxz
mov
bound
lea
inc
jne
sti
mov
adc
dec
das
cmpsl
mov
mov
icebp
pusha
xlat
fwait
jecxz
icebp
and
dec
ljmp
mov
dec
lds
xor
ret
scas
adcl
loopne
fs
adc
aaa
push
jns
sub
sbb
andl
negl
repnz
fisttpl
std
lret
dec
jmp
lods
pop
add
jb
sbb
je
fs
adc
cltd
xchg
test
enter
add
nop
test
push
xchg
ja
xor
mov
sub
addr16
mov
jo
add
xor
push
pushfw
out
clc
mov
adc
and
mov
or
cld
scas
push
sbb
int3
scas
mov
mov
jmp
ret
sbb
ret
mov
xchg
shrl
mov
pusha
loop
jne
jo
orl
in
xchg
mov
daa
mov
out
addr16
and
iret
mov
aad
pop
add
adc
adc
xchg
repnz
lcall
xlat
clc
daa
xchg
sub
pop
and
cmc
ja
dec
jae
mov
sbbb
popf
sbb
fimuls
jo
jecxz
adc
jo
jg
and
loope
mov
imul
lock
and
inc
sti
sub
lret
into
or
push
xor
push
lcall
sbb
cwtl
dec
cmpsl
nop
iret
pop
mov
call
insl
mov
pop
gs
std
fs
lods
cs
pop
leave
and
bound
out
cmc
es
jmp
fisttps
jnp
adc
mov
push
aas
repnz
imul
xor
xchg
add
jle
sbb
aaa
jae
jecxz
sub
xchg
out
sbb
cld
insb
pop
inc
jp
pop
fidivrl
mov
dec
sub
hlt
add
mov
inc
out
inc
or
popa
shll
test
mov
mov
push
cs
or
lods
aas
imul
mov
and
sbb
pop
pop
in
aas
and
xor
pop
in
pushf
insb
xchg
arpl
fnsave
sahf
push
negl
sub
sub
mov
hlt
add
rorb
add
sub
push
scas
outsb
jle
dec
mov
fdivp
outsb
das
loope
out
pop
insb
jb
scas
push
xor
push
cmpsb
cwtl
lret
pop
aam
sub
jecxz
aam
out
mov
mov
int
sahf
repz
andl
in
push
add
call
mov
jle
int
adc
or
xor
sti
xorb
bound
xchg
shlb
fsubs
mov
ficoml
jmp
jne
jo,pn
inc
orl
insl
mov
insb
lcall
push
movups
pop
ret
xor
and
adc
inc
pop
fcomps
repz
jmp
fcompl
scas
xor
or
in
or
or
movsl
mov
mov
shll
push
movsb
mov
add
cmp
fstl
sub
mov
jl
lds
je
mov
and
mov
mov
xchg
sbb
out
jne
lahf
sbb
cltd
lahf
mov
cltd
cmp
arpl
iret
jmp
inc
in
lcall
clc
xor
shr
cmp
mov
imull
popf
test
add
cwtl
call
leave
movsb
js
xlat
push
pop
dec
out
movsl
inc
or
cmp
mov
xor
jl
jg
sub
mov
sbb
pop
ljmp
stos
sub
ljmp
ljmp
das
pop
adcb
mov
inc
imul
imul
test
adc
or
jo
push
xorb
dec
fdiv
ljmp
iret
jb
pusha
cmp
and
jae
call
ja
or
loope
cmpsb
dec
mov
cmpsl
fistl
cltd
dec
or
insb
fldcw
xchg
test
sbbb
xchg
mov
cmp
imulb
cmp
cmc
aaa
xchg
sbb
iret
dec
inc
mov
jnp
cwtl
mov
xorl
mov
and
push
test
ljmp
out
jmp
pop
aad
or
inc
imul
jae
pop
aad
cltd
call
push
out
dec
test
or
jb
rorl
arpl
mov
xchg
jo
sub
jp
xor
lcall
add
aaa
imul
in
sub
aam
xor
xchg
mov
mov
sbb
lret
hlt
fsubr
jg
inc
lret
repz
testl
cmp
shll
xor
fsubrs
test
in
lods
push
ja
jnp
xor
aaa
movsb
movsl
pop
outsb
add
pusha
cmp
mov
mov
cmp
pop
sub
das
or
jno
or
ret
sbb
push
pusha
xor
cmp
sub
adc
sub
sub
inc
in
pusha
pop
pop
xlat
loopne
pop
fldcw
sahf
lds
and
sub
lret
inc
adcl
and
dec
orl
ret
subb
cld
js
xchg
sarl
pop
sub
pop
pushf
stos
nop
xchg
or
sarb
dec
nop
cmp
xchg
jp
mov
mov
jg
pop
sbb
popa
jb
xor
imul
clc
and
nop
out
rcl
dec
jbe
in
idivb
shlb
out
add
fimuls
adc
xchg
mov
jno
jp
pop
cld
push
inc
mov
enter
hlt
dec
pop
out
mov
jge
mov
shlb
andl
pushf
mov
hlt
insl
pop
mov
mov
dec
push
sbb
mov
jg
or
xor
and
mov
and
imull
out
mov
lsl
sbb
incb
mov
adc
dec
mov
inc
xchg
aaa
and
ja
xor
pop
popa
lcall
sub
and
ffree
popa
movsl
jno
pop
ud2
bound
push
hlt
mov
pop
je
shl
rorb
xchg
sbb
out
test
inc
ss
pop
lods
push
pop
loope
cmc
mov
xchg
cld
mov
aaa
pop
ljmp
sahf
and
sub
hlt
fldenv
xor
call
shlb
sbb
int
xchg
stc
enter
repz
inc
mov
mov
into
arpl
cli
les
adc
sub
arpl
fcomip
sbb
and
or
dec
test
pop
test
es
mov
data16
xchg
xor
push
pop
nop
clc
cmp
push
pop
mov
ss
data16
mov
repz
adc
jl
in
mov
push
cmp
sbb
fidivs
loope
jno
lret
sub
inc
je
jl
push
adc
cs
js
mov
push
jmp
pop
ret
adc
mov
cld
ror
int
cmpb
mov
push
sbb
inc
or
stos
xor
test
xor
dec
decl
add
push
pop
sub
sub
jnp
pushf
out
loop
in
jb
dec
xchg
push
or
adc
dec
pusha
movsl
cli
fildll
xchg
or
pop
pop
lods
lods
mov
lea
into
in
or
adc
rcr
ja
loope
push
pop
dec
and
add
test
jns
sbb
imul
mov
fcoms
xchg
pop
movsl
mov
dec
jp
pmulhuw
and
dec
loopne
enter
or
lcall
fdivl
sbb
jecxz
inc
or
repz
fsub
mov
push
push
xchg
shll
xchg
cwtl
mov
xlat
outsl
add
clc
jo
mov
dec
adc
shrb
leave
rcrl
push
pop
xchg
cmc
jmp
ljmp
jae
push
sub
xchg
xchg
jbe
addb
push
std
dec
in
xchg
icebp
jg
xchg
mov
pushf
push
and
and
test
push
mov
call
lcall
jge
rolb
mov
cmpl
push
icebp
xchg
adc
push
lahf
mov
cs
cwtl
mov
imul
daa
rorb
jno
add
sbb
jecxz
lret
cwtl
mov
pushf
lds
pushf
xchg
cmp
cmp
ret
xchg
popf
add
jae
jno
sub
in
push
filds
dec
into
aam
dec
daa
addr16
sub
adc
jbe
imul
mov
and
call
sbb
mov
daa
insb
pushf
in
jecxz
sbb
add
iret
in
shlb
pushf
mov
xor
pop
dec
fsubl
adc
rclb
sbbl
pop
or
jp
sbbb
or
out
cmpsb
xor
rorb
cs
mov
push
fistpll
into
imul
divb
shrl
xlat
sbb
mov
jne
or
outsl
lea
ljmp
daa
subps
scas
int3
xchg
and
aaa
add
mov
ror
out
adc
rcrl
lret
inc
xor
mov
invd
xor
sar
inc
loopne
and
iret
ja
adc
push
jne
xor
sbb
xchg
add
cmpsl
fwait
lea
jle
ret
and
ret
mov
pop
iret
mov
movsb
pusha
mov
clc
sbb
lea
mov
jo
pusha
xchg
jae
xchg
lcall
les
loop
pop
and
xchg
out
xor
dec
or
out
and
adc
dec
punpcklbw
divl
aam
lret
jb
mov
sarb
jecxz
test
push
testb
cwtl
dec
push
outsb
in
lds
sub
fwait
cmp
push
int3
jmp
add
mov
pop
pusha
int
insl
lock
inc
sub
pop
or
and
std
push
jb
add
roll
out
cmp
enter
loope
imul
sbb
xchg
mov
scas
mov
int
and
dec
pop
or
jp
adc
dec
jns
pop
jae
iret
mov
mov
xchg
adc
adc
mov
aaa
or
mov
sahf
pop
sbb
mov
in
pop
out
sub
gs
aas
push
cld
cmp
sbb
xor
push
sbbl
lcall
lahf
cld
adc
stos
scas
push
pcmpeqb
xchg
mov
dec
dec
filds
push
imulb
jmp
mov
or
sbb
inc
mov
js
adc
adc
mov
shll
mov
out
les
outsb
push
jns
adc
sti
arpl
es
aas
add
aaa
sbb
mov
lods
cmpsb
pop
daa
repnz
enter
and
ficoml
das
notb
mov
fidivrl
lea
adc
adc
add
cmp
xor
daa
lds
in
jne
mov
jmp
xor
pop
fcomps
xchg
aas
lods
icebp
clc
out
test
xchg
adc
mov
imul
in
mov
mov
jmp
jg
sbb
mov
add
mov
test
cmp
jg
push
fmull
push
popf
sub
daa
or
jge,pt
pop
test
xorb
jmp
aam
stos
and
or
ficompl
mov
aam
icebp
mov
adc
mov
outsb
sbb
mov
shrl
jmp
test
and
stos
add
int3
jge
push
cltd
lds
xchg
leave
pushf
sbb
cmp
insl
dec
cwtl
sbb
sbb
ljmp
and
jmp
cld
cld
subb
rcrl
sub
inc
lods
int
inc
aad
xchg
push
mov
aas
cmp
sbb
icebp
cmp
test
fiaddl
in
xchg
dec
int3
jo
or
adc
bnd
dec
aad
add
decl
dec
aad
cmpsl
pop
nop
adc
add
ret
lock
add
ficoms
pop
inc
adc
cmc
push
jge
loop
sbb
clc
fwait
jbe
cmc
pop
pushf
xchg
stc
jo
into
mov
into
jo
jg
lods
mov
outsl
sar
aaa
adc
inc
pop
pop
cmp
and
and
adc
dec
addr16
pusha
jge
cmp
add
jns
in
aaa
cmp
imul
cmp
jmp
loopne
lahf
inc
arpl
push
movlps
or
faddp
mov
daa
dec
sub
push
jo
xchg
jno
stos
outsb
sbb
mov
stc
mov
cmp
lock
mov
and
je
out
cmp
xchg
shlb
mov
push
sbb
insb
hlt
add
xor
push
add
shl
iret
or
ret
sub
jne
pop
or
cwtl
popa
jecxz
daa
xchg
push
dec
push
pushf
mov
jae
stc
outsb
sarb
jp
fldt
je
pop
bound
sbb
int3
int
mov
outsl
xchg
and
inc
fs
and
int3
nop
pop
sbb
xchg
fidivrs
mov
inc
sbb
push
mov
mov
jb
pop
hlt
cmp
or
xor
jmp
fsubs
daa
push
sbb
scas
fsts
je
lahf
out
lret
adc
aam
push
jbe
leave
jae
mov
lods
jge
test
jns
inc
lcall
push
cmpsl
mov
aad
or
clc
cli
push
adcb
push
addl
and
dec
xor
ror
cmp
clc
es
push
or
filds
add
pop
xor
or
test
and
sbbb
ss
pop
leave
mov
pop
xchg
push
pop
insl
jb
lds
lods
pop
test
into
pop
jle
and
sub
ja
inc
inc
lahf
rolb
out
das
movsl
pop
mov
sarb
add
push
bnd
fcoml
stc
das
test
dec
lods
mov
pop
popf
enter
stos
lock
lret
cmp
gs
mov
aaa
cmp
inc
add
xor
jne
sbb
cmpsb
xor
pop
mov
pushf
outsb
add
pop
cmpsb
pop
push
popf
stos
push
rcrl
jecxz
fwait
mov
cmp
cmp
mov
addr16
cmp
rcl
add
cld
dec
repnz
lcallw
arpl
jecxz
xor
mov
inc
jo
jne
adc
je
inc
mov
or
sbbb
inc
push
shll
xlat
out
mov
adc
inc
bound
mov
or
xchg
push
push
push
or
addr16
lods
aaa
jne
mov
lds
dec
jmp
sbb
nop
int3
test
jb
setp
insl
into
sbb
cmc
in
sub
test
jae
addr16
mov
xchg
aam
cltd
mov
jbe
cltd
outsl
pop
lcall
adc
xor
inc
fcomps
stos
sbb
jp
pop
je
outsb
ss
pushf
dec
inc
and
pop
jg
aad
or
pop
jbe
adc
ret
sbb
pop
and
and
xchg
or
pusha
pop
cmp
cltd
call
or
xchg
mov
scas
sbb
into
mov
outsl
fwait
repnz
jl
dec
lods
imul
dec
cli
dec
pop
mov
push
movsl
das
das
adc
mov
bswap
mov
adc
jo
cwtl
adc
push
aam
mov
push
xchg
jmp
mov
jb
dec
mov
aad
jmp
mov
add
out
add
jmp
push
aaa
mov
je
and
sub
or
pop
cmp
ja
fs
sti
or
jne
mov
ja
push
sub
hlt
dec
push
call
jne
mov
mov
jmp
jb
fcomi
setbe
test
fwait
icebp
dec
fdivl
adc
sar
sub
mov
leave
xchg
loopne
add
popa
out
sub
push
cmp
ja
adc
pop
test
adc
in
addr16
shll
in
sbb
rcrb
lods
adc
xor
sub
push
adc
js
xchg
lret
testl
and
ljmp
jne
jnp
std
jg
add
fdivl
mov
push
leave
das
cmp
xchg
icebp
inc
jb
stos
jl
push
inc
fwait
lcall
mov
idivl
add
inc
out
sub
mov
mov
int3
cmp
faddl
leave
jne
imul
fdivrs
test
jle
jmp
prefetch
xchg
hlt
data16
dec
cwtl
addl
xor
scas
pushf
jecxz
xchg
movsl
xchg
xor
xchg
pop
nop
lret
pop
rcrl
cmp
subb
mov
popa
push
and
jl
outsb
and
mov
xor
fistpll
or
mov
cmp
popf
lods
jl
aad
les
xchg
push
stos
cmp
nop
idivb
std
pusha
xor
inc
divl
aaa
cmpsb
mov
dec
mov
imul
jge,pn
mov
test
sbb
cmp
mov
int3
cmp
iret
mov
bndstx
or
fldcw
push
std
and
into
jmp
pop
adc
or
out
sbb
repz
inc
adc
loope
dec
insb
xchg
je
inc
add
add
fisubrs
ficompl
cmp
jge
nop
pop
xor
pop
xchg
sub
mov
xor
dec
cmp
and
jno
mov
push
out
stos
inc
mov
clc
xor
repz
dec
shlb
movsl
mull
jl,pt
mov
cmp
dec
clc
add
test
add
dec
movsb
xor
sub
hlt
mov
mov
inc
or
push
fucom
mov
stc
orb
xor
jns
mov
jnp
or
cmp
push
mov
bound
pop
cmpsb
mov
push
add
mov
stc
xor
jp
mov
loopne
pop
sarb
xchg
aam
lret
mov
inc
inc
sbbb
js
cs
test
lahf
out
mov
stc
mov
or
mov
sbb
cld
insb
in
sub
sahf
sbb
movsl
aaa
movsl
lcall
es
mov
test
mov
lock
cs
xchg
pop
cmp
dec
mov
int3
pop
in
mov
mov
je
test
pop
subb
cmp
movsl
cmp
lods
out
mov
dec
jb
popf
lods
cwtl
inc
dec
or
jne
fildll
inc
ja
or
jns
enter
mov
pop
cltd
xor
xchg
out
jl
mov
xchg
and
mov
iret
rorb
leave
jp
push
cs
push
mov
xchg
scas
movsl
dec
les
xchg
sub
idivl
adc
inc
test
mov
das
lods
or
fdivs
cmp
pop
jbe
jp
js
dec
aas
pop
out
fs
cmpsb
push
lock
lods
repz
nop
inc
addr16
inc
fdivl
mov
dec
rcll
insb
mov
jmp
pop
xchg
mov
cmpsl
ret
inc
popf
xor
xchg
test
push
xor
mov
movsl
mov
xchg
bnd
int3
lahf
push
xchg
mov
out
pop
mov
pusha
gs
jae
or
in
sbb
or
fwait
pop
and
addr16
in
leave
sbb
fisttpl
je
push
out
mov
in
cmpsb
fadd
loopne
mov
sti
repz
cmp
popf
out
cwtl
aam
inc
cmp
jnp
fwait
insb
aaa
stc
incl
pop
fists
mov
cli
push
into
mov
stos
jle
jl
aad
push
ret
mov
inc
aad
stos
push
mov
pop
imul
decl
cmp
lahf
push
jae
repz
rclb
and
cmp
pop
push
xchg
xchg
cmp
jbe
jmp
fistpl
std
imul
mov
sub
fisubrl
addr16
xchg
rcrb
fsubl
repnz
iret
adcb
shll
lock
dec
loop
mov
jmp
mov
lret
mov
adc
mov
inc
scas
mov
xchg
mov
hlt
jb
arpl
out
jae
and
cmp
cmp
cld
adc
lea
push
rcl
xchg
mov
mov
mov
js
sahf
mov
xchg
clc
lret
jae
test
pop
mov
ret
rcll
dec
stos
int3
xor
xorl
push
outsl
addr16
push
scas
sbb
nop
mov
ja
sbb
sub
mov
xchg
xchg
cld
les
xchg
ds
sbb
fbstp
xor
push
out
mov
xchg
sbb
jecxz
in
mov
scas
push
fdivs
cli
rol
lret
cltd
mov
cld
xor
sarl
jg
push
or
push
enter
jne
ror
lcall
mov
imul
sub
mov
mov
movsw
push
inc
inc
rcl
dec
insb
sbb
lods
insb
mov
movsl
mov
fs
sbb
sub
sbb
mov
add
sub
sar
and
aaa
push
lds
sar
fcompl
ja
add
push
and
int3
sub
jle
fs
jmp
sub
gs
lods
xor
cmpsb
ror
pushf
push
cmp
test
lcall
cmp
sbb
jmp
push
add
adc
pop
ret
adc
popa
mov
lcall
loop
mov
bound
cltd
cs
xchg
insl
ficompl
popa
mov
jg
xor
adc
mov
orl
sub
aas
mov
inc
andb
loopne
das
lret
cltd
add
int3
mov
mov
xchg
push
jp
orb
sahf
cmp
insb
xor
faddp
popa
es
cld
and
fyl2x
and
fistps
pop
ds
push
xor
mov
sbb
xor
test
je
js
lahf
push
shll
mov
dec
test
sbb
xlat
push
cmp
cmp
push
xor
add
xchg
push
dec
in
psrlw
pop
cmp
inc
fistpl
pop
cs
sub
sub
sti
add
dec
mov
push
xchg
or
decl
lock
clc
mov
pop
test
test
les
pop
insl
scas
enter
add
lock
clc
aas
pop
push
outsb
lock
rcrb
xor
rcl
cmp
push
hlt
shrl
mov
dec
int3
push
xor
std
lret
xchg
inc
lods
add
outsl
fcmovnb
pushf
frstor
add
jne
xor
cli
insb
dec
fisttps
or
movl
cmp
pop
mov
stos
push
shll
xchg
cmpl
es
pop
push
cmp
mov
add
xchg
loope
mov
mov
cmp
test
push
pushf
mov
xor
push
mov
cmp
mov
push
push
xor
out
fs
out
fnstsw
mov
dec
imul
js
pop
cmp
mov
cmpsl
out
inc
es
loopne
push
add
push
sbb
sub
aam
sahf
cmp
cmp
mov
push
xor
aam
daa
in
cmp
mov
cmp
data16
cmp
xchg
pop
mov
adc
arpl
mov
cmp
iret
lea
push
pop
mov
or
jns
les
sbb
push
push
jmp
lds
sti
mov
lret
ret
mov
dec
sub
les
pop
and
dec
addr16
xor
sbbl
js
je
push
jns
push
sub
cmp
int3
jl
push
xchg
inc
xchg
jg
and
andb
insl
mov
adc
add
fisubs
xchg
sbb
jae
fs
or
jecxz
sub
xor
dec
aam
or
leave
mov
scas
es
testb
cmc
jp
inc
push
jbe
pop
jno
jmp
fdivs
inc
ss
jnp
cs
xlat
lcall
cmc
orl
enter
rcrb
xchg
push
scas
lret
cmp
ret
or
sub
mov
std
pop
out
and
hlt
movsl
adc
repnz
xchg
stos
sub
xchg
mov
call
pushf
add
addl
push
cmp
adc
ljmp
outsb
lret
in
mov
fmul
jae
mov
adc
pop
adcl
sub
adc
stos
and
mov
xchg
adc
fcomps
outsl
xlat
cmp
mov
sbb
push
sub
xor
test
jmp
inc
jecxz
cwtl
xchg
push
pop
repnz
push
xchg
scas
sub
jno
mov
mov
fcmovnu
jmp
jecxz
pop
negl
mov
int3
xchg
rorl
in
icebp
test
sahf
and
jmp
bound
call
jecxz
or
pop
insb
arpl
out
push
jge
mov
adc
sub
cs
xor
dec
mov
cmp
push
ljmp
aad
aaa
ljmp
mov
cmp
jne
dec
sub
dec
lods
sahf
add
test
mov
imul
scas
sbb
cmc
mov
cld
cli
push
adc
int
xchg
outsl
push
sbb
stos
xor
filds
addl
roll
jnp
movsb
lods
mov
js
pop
mov
mov
dec
ss
sti
xor
xchg
inc
fidivs
jb
push
pop
add
jne
pop
xchg
cs
ret
test
push
out
bound
push
jg
adc
in
mov
cltd
orb
movsl
jle
add
cmp
out
repz
rcll
ljmp
dec
sbbb
mov
lea
xchg
gs
mov
in
nop
dec
xor
hlt
in
lods
icebp
xor
xorl
imul
sbb
mov
nop
or
fstp
cmp
dec
mov
js
or
cmp
rorl
repz
cmp
mov
add
xchg
dec
hlt
dec
push
mov
aam
cltd
push
jle
jns
xchg
mov
add
jg
sahf
neg
jne
jnp
jae
xor
pusha
pop
cmp
addb
insl
lret
ss
lods
mov
mov
xor
or
negl
cmpsl
dec
inc
rorl
add
push
or
mov
mov
rcrb
mov
add
shrl
shrl
pop
setno
add
dec
mov
popf
sbb
addb
out
sub
add
iret
dec
cmp
pusha
pop
mov
cmpsl
addl
arpl
in
pushf
sahf
sbb
add
xchg
mov
pop
add
push
dec
nop
cmp
rclb
aaa
mov
mov
imul
inc
fwait
rorb
dec
ret
inc
xchg
and
xchg
aad
and
xor
or
int3
out
sbbb
push
xchg
in
filds
push
js
das
xchg
cmp
shl
push
push
push
xchg
mov
mov
mov
ljmp
or
ss
imul
push
cld
mov
pop
cmp
add
pusha
rcr
in
pop
jne
lret
sub
movsl
jp
cmc
in
mov
mov
cmp
shl
or
mov
and
or
testl
orl
notl
push
jb
lret
rcl
sub
mov
mov
add
iret
xchg
jg
push
test
out
xchg
lods
les
xchg
mov
imul
into
cmpsl
and
mov
inc
cwtl
push
jge
cld
shll
lds
or
or
pop
cmpsl
mov
movsb
test
adc
mov
and
pop
lcall
out
mov
daa
mov
cmp
inc
andl
add
and
cmc
push
insb
xchg
data16
mov
jo
cmpsb
les
cltd
sahf
sbb
ja
lods
fwait
lods
mov
lods
out
shll
cmp
pop
inc
insb
adc
jnp
xor
addr16
adc
xor
and
stc
pop
aam
insl
mov
mov
xchg
test
add
int3
int3
jns
jnp
mov
addr16
jge
ss
jl
insb
ljmp
movsl
and
sbb
pop
jle
cld
and
popa
repnz
jb
add
dec
jle
push
enter
cltd
pop
or
cs
xchg
jp
movsb
xchg
repnz
push
aad
and
insl
into
je
inc
adc
push
out
negb
dec
xchg
push
fsubrl
ds
dec
cmpsb
pushf
inc
mov
imul
out
rolb
test
out
popa
push
jae
adc
mov
mov
pop
jne
pop
arpl
inc
gs
add
cmp
into
push
mov
stc
add
out
pop
mov
rcll
lock
mov
ja
popa
dec
or
sub
lcall
push
popf
xor
jbe
rorl
adc
xchg
pop
cmc
imull
push
dec
cld
dec
idivl
inc
jbe
test
test
mov
sbb
cmpsb
sbb
add
aaa
push
lea
rorl
outsl
adc
and
in
movsb
or
pop
out
ret
jns
cmc
push
imul
mov
xchg
mov
sbb
pop
stc
aaa
jmp
test
or
aaa
or
mov
arpl
push
xchg
mov
pop
shrl
xchg
mov
and
stos
or
out
mov
cwtl
inc
sub
sbb
stc
scas
ljmp
or
mov
stos
xchg
loopne
mov
add
push
pop
pop
xor
outsl
dec
lods
shl
mov
or
bnd
mov
aaa
jo
dec
jne
nop
and
je
xchg
scas
cli
loop
cli
ds
and
add
or
cmp
cwtl
sub
ljmp
fdiv
xlat
lret
mov
cmp
xor
inc
jns
stc
cmpsl
pop
or
sub
mov
out
imull
adc
mov
pushf
fldt
cli
fimull
icebp
pop
repnz
xchg
movsl
jno
sbb
add
cwtl
pop
mov
scas
xlat
aas
ss
jnp
and
jmp
push
in
pop
adc
push
push
aad
cmp
xchg
adc
pop
push
imul
mov
loop
cs
fsubrs
test
faddl
jmp
movsl
aas
jae
cmp
call
insl
add
imul
lahf
lods
js
out
mov
adc
or
fcomps
adc
xor
cmp
add
arpl
jbe
shrb
cwtl
out
stos
mov
xor
cltd
out
pop
jae
ret
sbb
or
cmpsl
xlat
dec
pop
stos
movsb
data16
xchg
loopne
std
cwtl
inc
pop
jo
inc
adc
xor
insl
and
cs
enter
leave
out
int3
outsb
mov
sub
jnp
test
arpl
push
and
cmpl
mov
and
jg
add
jno
adc
mov
pop
repz
sbb
pop
roll
aad
test
and
cs
leave
mov
xchg
pop
popa
loopne
xlat
hlt
mov
in
iret
sbb
loop
dec
push
push
sti
sbbl
inc
out
mov
sti
lret
xchg
xor
shr
jge
aad
sahf
jp
fwait
xor
vpunpckhbw
cmpsl
xor
cmp
sbbl
add
lret
or
xor
inc
xor
cld
cmp
out
and
inc
sub
test
and
or
mov
divl
adc
addb
negb
inc
add
pop
lret
imul
sub
mov
fidivs
xchg
fsubr
push
xor
shrl
sets
dec
mov
lock
and
inc
mov
shrb
mov
mov
cmpl
in
xchg
fmuls
fisubs
mov
fsubs
lahf
mov
pop
sti
fidivs
jge
jo
negl
or
loop
popa
cmpsl
fsubr
jg
add
pop
in
les
outsl
xchg
sbb
and
icebp
dec
dec
jne
or
insl
repnz
push
mov
je
inc
xchg
gs
and
dec
rol
iret
aam
jle
fisttpll
mov
push
push
lds
mov
add
addr16
lahf
sti
int3
xchg
loop
daa
xchg
repnz
outsl
xchg
pop
addl
imulb
mov
fstpl
adc
mov
mov
das
enter
adc
cltd
dec
in
imul
mov
fnstsw
adc
xchg
out
fistps
pop
iret
mov
fmuls
mov
gs
gs
les
add
push
movsl
add
dec
inc
push
mov
lea
and
fistpl
mov
push
push
sbb
jae
insb
xor
mov
ja
lods
stos
loopne
inc
cmc
mov
sbb
dec
fcomip
cmc
push
filds
mov
movsb
cld
jnp
sbb
inc
lds
fldcw
jmp
dec
inc
btc
push
popa
xlat
add
jmp
repnz
pop
xchg
dec
shll
fisubrs
ffree
inc
mov
outsl
mov
incl
call
adc
xchg
lds
ret
mov
fwait
gs
dec
outsl
test
cld
rcrl
add
xchg
int
jmp
ret
dec
push
push
push
ds
sarb
leave
lea
fdivrp
push
dec
ljmp
or
in
leave
fisubrs
orl
mov
js
push
test
push
test
jmp
adc
xchg
loope
push
xor
aaa
daa
fsubl
add
pop
jecxz
out
inc
push
orl
mov
xchg
fld
leave
mov
or
or
outsl
adc
adc
push
lods
stc
xlat
push
adc
adc
cmc
inc
pop
and
lahf
dec
fwait
fs
leave
mov
push
frstor
xor
and
or
ret
fwait
jno
mov
push
jp
mov
test
jae
or
pop
fnstenv
ljmp
xchg
sub
cs
cmp
insl
pop
out
jmp
je
jb
xchg
es
subl
stos
xchg
in
jle
and
push
sbb
mov
adc
cmovns
js
es
push
sti
adc
xlat
test
fdivl
test
mov
pop
scas
sub
sarb
cs
xchg
mov
in
dec
sbb
test
in
and
xor
add
mov
add
xchg
mov
lea
sub
lods
and
mov
inc
lret
gs
inc
and
sbb
push
inc
sub
std
roll
dec
stc
sbb
int
stos
dec
pop
push
iret
ljmp
jae
push
jl
mov
arpl
jb
xlat
adc
push
roll
imul
sbb
jecxz
sub
repz
and
push
fnsave
cld
add
sub
and
imul
lock
inc
jecxz
push
int3
sub
rclb
stc
push
xor
push
scas
cltd
loope
pop
mov
jb
sbb
fldenv
xchg
shlb
cmpl
imul
fldl
rorl
and
clc
out
jae
mov
adc
add
lods
push
dec
lret
jno
in
and
ja
pushf
mov
jp
pop
enter
repnz
popf
pop
insb
jg
pop
ret
dec
arpl
xchg
push
shr
ja
jne
in
and
adc
xchg
inc
in
inc
cmp
and
push
mov
mov
jae
xchg
adc
xor
movsb
clc
cmc
es
cltd
push
jmp
sub
jnp
int
mov
mov
mov
jl
jmp
mov
inc
sbb
sbb
sub
inc
iret
add
mov
in
mov
jmp
sub
adc
cmp
imulb
push
push
scas
or
inc
in
xchg
sub
ftst
testl
rcrl
sbb
cmpsl
mov
dec
adc
dec
jno
xchg
xchg
sbb
mov
ret
mov
bound
loop
pop
cmp
jb
xchg
jo
pushf
sub
cmc
inc
fcomip
add
sbb
adcl
aad
dec
rcl
stos
mov
add
movsl
push
jle
pusha
and
js
enter
rorl
push
les
call
inc
cmpsl
mov
test
xor
xor
sub
divb
movsl
in
in
cltd
xchg
lods
xchg
push
dec
aas
fstl
out
mov
pop
rol
in
adc
scas
pop
mov
jns
jo
iret
fstpl
int3
repz
pop
addl
pusha
mov
cmc
es
in
add
add
cmovb
cmpsl
pop
lea
xchg
push
jns
sub
out
xchg
sub
mov
mov
mov
jne
rcll
and
xor
sar
imul
push
ljmp
pusha
clc
mov
pop
jmp
repnz
xchg
mov
cld
js
pop
lods
inc
fdivrp
xor
jbe
xchg
inc
lret
test
test
insb
xchg
cmp
mov
in
dec
push
lods
daa
inc
or
and
idivb
sbb
lock
int3
xchg
jge
movsl
or
aam
mov
fadds
mov
cli
lods
lods
pop
bound
mov
shrb
xlat
sahf
dec
pop
inc
cmpsl
out
xor
inc
or
mov
jnp
jl
nop
sub
aad
lods
and
pop
test
mov
bound
popa
xor
xchg
push
pop
fwait
jne
push
aam
testl
push
mov
jo
insb
xchg
sarb
jns
cmp
mov
cmpsb
and
popf
scas
push
mov
fidivl
ljmp
push
bound
cltd
add
jle
out
mov
outsb
lahf
icebp
ret
sub
adc
add
enter
and
or
inc
outsb
mov
hlt
and
mov
test
arpl
sub
adc
dec
fdiv
call
xor
mov
cmpsl
out
cli
and
jbe
dec
ret
jmp
in
xor
mov
cltd
adc
fsub
in
iret
xor
es
cwtl
mov
jb
dec
add
mov
ljmp
ss
cmp
lahf
mov
repnz
mov
jne
add
aaa
mov
push
pop
lock
ss
and
daa
jno,pt
pop
adc
rol
out
cmp
stos
mov
dec
xor
and
mov
mov
xor
fiaddl
cmp
mov
das
xchg
subb
addr16
je
ss
scas
inc
push
lods
cld
mov
adc
orl
fidivs
fildl
push
jmp
dec
lods
sub
mov
jo
and
popa
movsb
sub
push
jl
or
in
aad
jp
push
sbb
xchg
mov
or
xorb
test
lret
mov
pop
add
dec
mov
test
pop
stc
arpl
negl
jl
xor
pop
scas
jo
repz
mov
xor
lods
nop
ja
aam
call
mov
fldenv
and
adc
enter
out
push
mov
cmp
mov
iret
dec
arpl
add
mov
rdpmc
mov
pop
in
cs
sub
rcl
xchg
cmp
dec
insl
div
mov
rcr
and
xchg
add
outsl
inc
cli
mov
fadd
mov
push
orl
loop
outsl
cmc
xchg
test
hlt
adc
add
es
jne
adc
imul
cld
fstpt
sbb
aad
decl
add
cmp
dec
add
or
sbb
pop
push
daa
ficomps
loope
loopne
ret
shlb
inc
test
mov
inc
es
cmpsb
iret
les
pop
xor
mov
out
xchg
mov
jge
jg
je
mov
sahf
outsl
les
cmp
sub
pop
jnp
repz
jecxz
je
mov
cmp
and
in
xor
fcoms
add
mov
imul
cmpsl
sub
lods
int3
scas
mov
xchg
mov
dec
shrb
mov
inc
nop
jge
inc
ret
xchg
push
js
mov
jno
iret
pop
test
push
ffreep
sub
in
or
sti
pop
call
je
ficoml
cmp
shr
gs
adc
scas
ret
hlt
mov
jg
jne
sahf
jo
mov
dec
sbb
dec
int3
dec
in
or
clc
inc
insl
sub
lahf
cmp
hlt
adc
mov
jmp
insb
add
push
dec
je
out
inc
or
adc
mov
imull
inc
push
mov
inc
cmp
mov
insb
in
repnz
cld
jle
out
jno
rcrl
jns
fistpl
jmp
loope
lahf
shll
iret
pminsw
sarb
ds
mov
ljmp
or
cmc
push
out
sub
dec
stos
aam
xchg
movsl
out
gs
mov
mov
daa
test
or
out
cwtl
pop
xor
popa
ret
pop
ljmp
push
adc
add
push
fisubrs
fwait
leave
mov
inc
pop
xchg
out
xchg
rcll
cmpsb
lods
iret
ds
loope
daa
dec
ljmp
imul
pusha
push
dec
xor
aaa
mov
pop
mov
stos
out
xchg
lahf
ret
add
mov
xchg
lods
fidivl
arpl
push
jns
scas
loop
jo
pop
push
mov
push
adc
aam
pusha
sbb
and
and
sti
faddp
scas
add
pusha
mov
and
mov
jle
loop
lods
sbb
or
adc
fwait
in
xor
lea
or
mov
pushf
lock
dec
addl
xor
cmpsl
daa
aaa
sub
iret
test
adc
cld
stos
orl
test
pop
inc
mov
ss
xlat
dec
fisttpll
mov
cmp
test
sahf
xchg
aam
fcompl
push
ret
pop
add
fistpll
subb
adc
lds
inc
push
addr16
mov
ret
rol
cmp
aad
mov
sbb
jge
aam
mov
pop
stos
int
inc
sub
push
push
stos
mov
test
xor
lods
lahf
lret
mov
mov
xchg
push
stc
je
imul
or
adc
int
pop
pop
dec
dec
jb
xlat
sub
js
sbb
push
sbb
addr16
push
dec
sub
popf
mov
fsubs
int3
cmp
cmpsl
test
nop
push
sub
xlat
xchg
outsl
dec
enter
or
mov
pop
add
je
add
stc
out
or
ds
test
lods
jb
dec
push
ret
ss
adc
outsb
jecxz
inc
push
jns
aad
fdivrl
push
inc
lds
dec
mov
imul
push
xchg
sti
ret
call
mov
jmp
add
outsb
xchg
jmp
ljmp
xor
insl
leave
xchg
loope
pop
adc
into
add
sbb
out
mov
jo
in
pop
nop
jno
push
arpl
pusha
mov
cmpsb
mov
pop
movsl
jmp
adc
xor
and
enter
fbstp
pop
ret
daa
pop
fbstp
mov
add
xchg
cmpsb
push
addl
jbe
inc
rol
hlt
lea
add
pop
mov
sbbb
push
dec
and
lods
ret
lret
testl
mov
mov
pop
inc
and
fidivrs
and
sbb
mov
jge
and
movsb
out
nop
shlb
insl
mov
xlat
scas
inc
sub
inc
xlat
xchg
mov
mov
inc
mov
js
xor
fistps
testb
mov
arpl
ljmp
cs
or
sahf
adc
cmp
por
push
into
rcr
xchg
ret
dec
scas
cmpl
fwait
jmp
fwait
jl
outsl
mov
gs
mov
dec
dec
push
pop
or
mov
ss
stos
mov
int3
hlt
sbb
sbb
sbb
mov
jns
inc
aad
xchg
jae
adc
adc
shlb
mov
sub
mov
in
or
fwait
sub
popf
inc
mov
test
fwait
stc
addr16
jbe
and
out
push
xchg
pop
jg
insl
cmc
pop
sti
popf
in
pop
push
xor
sbb
xchg
and
lock
sub
out
sub
adc
test
imul
nop
mov
push
xchg
ror
sbb
icebp
fsubl
js
push
jg
ja
mov
je
mov
sbb
stos
dec
ror
daa
insl
inc
jbe
call
mov
les
lcall
mov
imul
and
int
xor
je
cmp
neg
inc
mov
jl
or
pop
cmpsb
push
cs
xchg
add
scas
lret
bound
mov
sbb
fwait
jl
outsb
push
sbb
sbb
sbb
aas
es
mov
enter
sub
sub
adc
aam
int3
mov
fcmovne
dec
dec
js
cld
ljmp
mov
push
dec
rorl
jae
inc
loopne
jge
icebp
xchg
or
out
xor
mov
call
add
cmpsb
xchg
out
or
lret
test
mov
int3
jg
push
aas
jmp
mov
ret
mov
lods
movsb
add
aam
xchg
adc
adc
xor
pop
lds
ret
stos
ja
popa
call
out
xor
je
push
and
jnp
testl
bound
pushf
cmp
int
push
jo
inc
andb
add
int
push
mov
add
pushf
jecxz
push
jns
push
sbb
addr16
xlat
mov
notl
push
repnz
fimull
mov
xchg
jae
and
cmpsl
mov
and
cmp
std
les
sub
xor
js
mov
jmp
cmpsb
cld
out
cltd
loop
clc
mov
adc
jp
test
mov
dec
movsl
pop
inc
in
hlt
cmovle
or
xor
insl
arpl
dec
jne
popa
pop
sub
mov
test
aas
dec
sub
fisubrs
mov
mov
mov
mov
mov
pop
push
pop
arpl
pop
loopne
jg,pt
shll
repnz
adc
fsubrs
and
imul
popa
mov
add
cs
stos
jo
pusha
inc
mov
sub
outsb
lea
orb
mov
lods
mov
push
dec
orb
or
scas
ss
dec
jp
mov
mov
in
or
in
sti
pop
pop
push
jmp
jne
aad
in
fimull
fs
sub
pop
int
repz
pop
mov
jns
and
pop
shlb
jb
testl
cmc
imul
pusha
shll
cmp
or
insl
add
repz
sub
fs
cmp
and
sbb
pop
pop
out
jmp
mov
mov
add
fwait
mov
in
jecxz
scas
sahf
repz
sub
inc
std
cs
xor
mov
or
out
loop
popf
or
push
lods
jge
movsb
clc
popf
and
cltd
lret
dec
mov
aaa
xchg
xchg
add
xchg
rcrl
fnstenv
mov
xorb
std
fwait
sub
lret
cmpb
cmc
sbb
mov
adc
inc
movsl
mov
aam
js
lds
lods
les
int
pop
lods
movsl
xchg
imul
mov
int3
cmp
insl
dec
ret
repz
sahf
xor
dec
xchg
inc
jo
dec
fcoms
jno
and
mov
sbb
xchg
nop
push
xchg
xor
outsl
jo,pt
mov
test
mov
shll
pop
aas
shl
js
xchg
xchg
xchg
xchg
out
dec
add
cmc
cmp
push
push
lea
lcall
xchg
shl
pop
xlat
xchg
xchg
push
cld
iret
inc
dec
add
cld
mov
test
cwtl
imul
push
pop
cli
lock
lcall
mov
fldl
adc
push
fcmovnbe
jbe
adc
and
jno
out
fidivs
xchg
adc
out
mov
mov
jle
adcb
jecxz
push
stos
xchg
hlt
stos
lods
scas
or
sub
popf
sbb
pop
sahf
in
lods
lods
mov
adc
leave
out
jno
sbb
cwtl
or
clc
pop
dec
jb
out
mov
ljmp
enter
sbb
add
mov
mov
sub
out
mov
push
fstpt
ss
lea
xor
call
adc
or
stos
in
sub
xchg
pushf
sti
outsb
in
in
and
mov
in
add
or
xchg
cmpb
int
popa
in
lret
xchg
jo
xchg
pop
addr16
fsubs
mov
subb
js
mov
jl
push
loop
jae
xor
cmc
call
repz
jecxz
in
xor
in
add
cmpsb
xchg
inc
sbb
xchg
cmp
shrl
jo
push
lret
inc
imul
outsl
stos
push
ss
mov
fidivs
lods
push
mov
jnp
leave
pop
pop
and
jmp
inc
dec
lret
lods
enter
ret
inc
nop
xor
shrl
jl,pt
dec
and
mov
xor
mov
xor
mov
sub
jne
mov
dec
lahf
xchg
fisubl
aaa
or
jmp
ss
fstpt
or
lea
pop
xchg
mov
and
mov
mov
ret
inc
inc
dec
lret
ljmp
negl
xor
incl
jne
inc
testb
callw
out
je
pop
subb
push
xchg
repz
ret
and
jns
idiv
jmp
or
scas
insl
shll
inc
lcall
adc
cmp
jg
or
mov
cli
outsl
inc
or
jnp
jmp
or
outsl
mov
push
jle
je
out
les
insb
jo
iret
aaa
fstps
lds
gs
mov
mov
aaa
je
dec
push
mov
dec
insl
mov
or
xor
pushf
js
mov
inc
call
cwtl
rorl
repz
aas
dec
arpl
jmp
stos
dec
out
mov
jo
aaa
jmp
dec
mov
test
push
lret
hlt
dec
push
jae
push
jg
adc
mov
mov
xor
pop
cli
sbb
lahf
daa
nop
je
jb
mov
jb
aas
mov
stos
fmuls
sbb
lcall
mov
push
es
test
ljmp
stos
stos
jle
enter
inc
add
mov
leave
xchg
adc
xor
rorl
jle
clc
jno
sti
pop
outsl
mov
cmp
or
rolb
inc
imul
insb
arpl
ja
xchg
xchg
jle
adc
push
sbb
dec
mov
daa
xchg
and
lock
adc
pop
outsl
jb
dec
sbb
std
loop
mov
xor
inc
sbb
cmpsl
mov
sbb
push
xorl
and
or
outsl
cmp
xchg
push
adc
cli
mov
push
jns
aam
push
jne
push
sbb
pop
and
push
jp
ljmp
nop
push
mov
adc
sub
push
adcb
jp
or
incb
inc
add
sbb
ss
push
dec
int
rorl
pop
jmp
stos
adc
int3
push
inc
xchg
call
jne
mov
decl
push
std
mov
popf
int
jp
nop
insl
jl
mov
dec
xor
sub
xor
and
pop
lret
cltd
loop
dec
lret
pushf
shr
in
ja
sbbl
push
push
lea
jp
rcr
je
cmc
cmp
push
adc
repnz
hlt
loopne
sbb
pop
fldt
mov
fsub
push
hlt
in
lock
loop
mov
xchg
sub
sub
jb
stc
faddp
cwtl
adc
sub
mov
inc
js
loope
xchg
and
push
imul
shll
cltd
ljmp
and
dec
stos
lahf
xor
pop
jl
les
sahf
add
cwtl
and
popf
dec
push
mov
lods
mov
int3
xchg
and
in
loop
icebp
and
xor
jl
sahf
mov
aas
add
fdivs
cmp
negl
loope
rolb
mov
inc
int
icebp
mov
xor
adc
jecxz
aam
outsl
sbb
test
fdivr
cmc
outsb
rcrb
and
sbb
push
and
mov
jae
cmp
dec
lret
sbbb
xchg
in
test
lock
imul
inc
mov
jmp
ds
sbb
cwtl
jle
mov
cwtl
xchg
aam
lods
fcomip
dec
mov
ljmp
repnz
mov
add
in
mov
sbb
sarb
sub
and
rol
fidivs
cltd
cmp
fwait
leave
and
mov
cli
ljmp
mov
iret
popf
cwtl
cmp
and
test
call
pop
scas
test
test
mov
mov
pxor
pop
jmp
or
pop
cli
aad
mov
sub
xlat
add
push
mov
xor
sbb
pop
cmp
xchg
sbb
push
outsl
xchg
pop
pop
daa
mov
jl
sbb
les
aad
push
or
add
or
cltd
adc
mov
std
sti
add
pushl
inc
push
imul
or
ret
shrb
dec
js
cmc
clc
mov
mov
and
add
arpl
mov
and
mov
lret
hlt
jecxz
icebp
push
xchg
push
lcall
xchg
in
cmp
fbld
jp
sbbl
jns
jmp
ljmp
xchg
in
fs
imul
mov
dec
das
jl
popa
cltd
arpl
out
sbb
cwtl
clc
and
push
pop
fisttps
aam
add
and
or
mov
cmp
aad
imul
dec
jecxz
jp
lret
push
lea
push
jns
sahf
xor
es
push
rcll
cmp
jge
push
enter
ret
aas
inc
imul
xor
mov
aam
dec
ss
outsl
add
push
xchg
jbe
scas
aaa
add
mov
testb
inc
int
sub
out
adc
shlb
dec
aas
mov
fisubs
shrl
rcll
in
fimull
xchg
repnz
sub
pushf
and
add
test
shrb
xor
jbe
mov
cmp
xchg
in
in
xor
xchg
int
inc
or
lods
push
pop
mov
xorb
lcall
pop
shrb
xchg
pop
mov
push
out
dec
stos
xchg
jge
dec
xchg
scas
push
xchg
hlt
pop
cmpsb
jg
mov
fstpt
inc
lcall
stos
subb
repz
push
push
lret
out
dec
mov
sub
dec
shll
inc
popf
and
and
dec
mov
add
test
xor
test
scas
lahf
pop
inc
mov
lret
xchg
mov
jle
lahf
inc
adc
test
xchg
dec
dec
out
jnp
sbb
add
sbb
lds
dec
jl
outsl
enter
ja
js
dec
cmp
cwtl
jle
hlt
dec
mov
mov
ljmp
int
rorb
xacquire
hlt
mov
sbb
xor
in
adc
cmp
popf
cmp
adc
inc
sbb
pop
popa
ss
mov
add
sbb
testb
daa
sbb
xchg
add
sarb
jo
inc
adc
ret
cwtl
sbb
pop
xor
aam
jbe
jmp
push
enter
loopne
movsb
push
imul
mov
jmp
sar
and
sbb
in
add
xchg
repnz
pop
jno
outsb
mov
out
mov
sbb
xor
add
fisttpll
lcall
sub
roll
ret
ss
loopne
cmp
jae
cs
cmpsl
or
mov
stos
sbb
jo
sub
cmp
outsb
xchg
sbb
cmpsb
inc
and
mov
movsb
xchg
cli
aam
outsb
cld
in
test
mov
scas
inc
das
insl
test
jno
stos
daa
cmc
test
mov
and
xchg
or
push
pop
aas
pop
fs
scas
gs
in
lcall
pop
dec
dec
sbb
lods
jae
adc
dec
enter
sahf
mov
sub
gs
push
int
loop
test
in
ret
or
jnp
js
add
fcoml
mov
ficomps
xchg
jo
push
and
mov
cmpsl
shl
jg
pop
popf
mov
or
lret
int3
mov
clc
push
mov
neg
mov
addr16
push
ljmp
push
jmp
sbb
push
push
inc
pop
rcrb
xorl
shrl
mov
leave
add
push
out
inc
dec
adc
cmpsl
fwait
add
sub
push
adcl
dec
outsb
cli
dec
lret
movsl
faddl
inc
in
xchg
insb
andb
adc
jne
mov
mov
sbb
mov
add
mov
lea
or
lods
lea
in
cmp
sbbl
ljmp
xor
or
mov
fimuls
sbb
sbbl
stc
movsl
inc
lret
dec
push
xchg
push
push
mov
fldenvs
cmp
ret
test
inc
mov
mov
outsl
inc
jno
add
rorl
adc
xchg
and
mov
int
pop
out
fcmovnu
pusha
mov
movsl
rcrb
mov
add
or
xchg
pop
sbb
cmpsl
jecxz
xchg
movsb
jbe
jg
or
xor
or
sub
rcrb
jno
add
in
sub
mov
cmp
push
js
pop
dec
imul
mov
and
in
mulb
fdivl
out
shlb
push
mov
gs
fcomp
sub
addr16
mov
test
sti
push
jo
cmp
pop
insb
mov
loop
mov
sub
mov
lock
rcrl
adc
jae
and
outsl
jo
mov
xchg
cmp
sbb
incb
repz
xor
mov
dec
movsl
xchg
ret
data16
js
fs
sti
mov
and
ret
jnp
daa
cmp
popf
pop
popf
pop
inc
adc
pop
mov
scas
gs
xchg
repz
mov
cmp
out
pop
dec
test
gs
mov
mov
cs
sub
cwtl
jmp
mov
sahf
and
jbe
jl
sub
scas
adc
xchg
nop
xchg
fstpt
pop
fimuls
je
aaa
or
sbb
jp
mov
insl
xchg
adc
xchg
addr16
or
mov
jmp
sahf
sti
mov
icebp
out
push
pop
fs
push
cmp
xor
or
repz
cwtl
mov
jo
in
mov
sbb
aas
or
mov
out
and
int3
fs
shrl
cs
lret
scas
add
or
mov
fists
mov
and
insb
sub
jge
mov
add
pop
in
mov
dec
sbb
push
cmp
xor
xchg
fwait
adc
mov
and
adc
pop
lret
jae
shl
push
int3
xchg
fs
in
in
sbb
jno
in
add
cmpsb
subl
ds
or
lods
jge
pusha
jl
dec
push
add
or
dec
out
pop
cmp
lcall
or
mov
in
add
adcl
cmp
xor
es
jge
test
js
insl
lods
out
inc
jmp
test
lock
and
sbb
push
bswap
pop
sbb
push
jp
push
jecxz
mov
into
ja
xor
test
push
out
aas
scas
sti
das
jge
mov
jns
out
out
sbb
mov
or
pop
decl
xor
loope
sub
popf
mov
xchg
lea
stos
jnp
jle
pop
or
insl
mov
dec
adc
pop
push
loop
lahf
sbb
xchg
inc
mov
in
inc
sub
jmp
jbe
lods
dec
pushf
mov
and
add
subb
mov
sub
inc
in
jno
out
rorl
sbbl
add
xorb
xor
adc
enter
push
dec
cltd
add
xchg
inc
sbb
adc
popf
pop
push
leave
adc
jle,pn
jp
nop
inc
ja
pop
push
lret
imul
stos
mov
and
jne
xlat
xchg
int
mov
shll
push
iret
rclb
je
and
sub
std
sti
cmp
and
adc
sub
movsb
out
movl
flds
xchg
sub
jo
in
add
jno
mov
or
xor
cmp
xchg
imul
lcall
mov
fidivl
enter
push
pushf
dec
fildl
or
leave
adc
mov
or
out
test
or
add
xchg
pop
sub
cmp
out
jl
push
xor
sub
bound
stos
in
mov
psrld
sub
pop
jmp
push
cmp
aaa
adc
mov
pop
nop
or
sub
je
adcl
notb
mov
lret
iret
or
mov
jmp
sbb
and
cmpsl
jp
das
jae
adc
jp
aaa
ljmp
lcall
and
adc
je
out
xor
leave
add
pop
xchg
sub
jg
fiadds
es
ja
jo
add
adc
in
mov
lods
dec
das
arpl
lods
testb
dec
jae
adc
cmpsb
mov
mov
outsl
es
adc
int3
insl
mov
mulb
es
rorl
sbb
xchg
std
mov
mov
scas
mov
xchg
imul
insb
inc
mov
pop
das
fs
xchg
xchg
sub
add
into
mov
xchg
pop
out
or
cmp
xchg
mov
shl
nop
mov
enter
daa
insl
addb
call
pop
sbb
movsl
mov
lock
shll
or
insb
or
imul
std
and
push
inc
sub
testb
aam
fs
cwtl
lcall
dec
push
mov
push
or
jo
xchg
lret
mov
out
dec
sub
mov
pushf
icebp
jo
mov
ret
fidivrl
xchg
stos
push
jbe
and
push
push
decl
into
repz
imul
out
movsl
inc
fcoms
sub
aad
sahf
rol
mov
insb
dec
inc
pop
mov
pop
mov
jmp
clc
fsincos
lock
or
cltd
add
mov
out
popa
fdivrp
pop
cwtl
jl
add
cmp
pusha
cmp
movsb
int
ja
xchg
mov
jo
sbb
outsl
cmc
xor
mov
and
pop
adc
push
lea
lahf
in
pusha
fsts
pop
cld
aad
cs
pop
inc
enter
mov
orb
pop
mov
jp
prefetcht1
movsb
sbb
and
push
cmovl
add
jl
mov
push
xchg
ret
mov
adc
outsl
dec
jl
add
jp
shlb
pop
mov
push
outsl
or
clc
js
add
loope
jne
out
jmp
cmp
xor
xchg
pop
add
ret
inc
mov
sub
dec
out
push
jmp
jp
xor
mov
cmp
shll
push
std
mov
jnp
iret
pushf
adc
dec
sub
push
jmp
and
ret
push
sbb
adc
and
mov
add
xor
sahf
hlt
mov
icebp
loopne
call
cmp
rclb
inc
popa
xor
dec
je
jbe
aas
repz
mov
js
adc
inc
loop
pop
jne
call
es
lock
jmp
aam
es
inc
pop
adc
xlat
xchg
xor
sub
jle
xchg
inc
test
orb
bound
incb
incb
je
mov
push
pop
pop
fwait
sub
xchg
pop
or
xchg
test
add
mov
lea
mov
mov
inc
cmp
std
orb
push
icebp
jns
jb
lahf
lcall
rclb
imul
cmp
push
sti
mov
mov
lods
lds
or
and
mov
mov
push
outsb
les
push
dec
js
and
dec
xchg
mov
out
in
lahf
lcall
cmp
add
jl
or
mulps
ljmp
pop
push
xor
insl
xor
pop
adc
dec
pop
ret
pop
push
cwtl
fwait
repnz
sub
xor
gs
addr16
mov
das
bound
pop
jmp
inc
test
imul
iret
push
orl
jecxz
filds
fs
xor
jae
fnstsw
xor
jecxz
lods
pop
push
fnstenv
pop
loopne
std
push
pop
sbb
sbb
pop
sbb
mov
sbbl
aad
mov
leave
dec
dec
adc
xchg
add
outsb
xor
push
mov
xor
pop
aas
push
lock
mov
imul
cltd
stos
mov
pop
cmp
mov
movsl
mull
xor
cmp
repnz
fisttpll
inc
inc
inc
adc
fmuls
std
pop
das
sti
push
jg
or
mov
inc
movsl
xchg
out
xchg
aad
cmp
jns
sbb
or
add
inc
pushf
sub
sbb
cmp
cltd
xchg
sub
loope
clc
ja
fwait
xchg
out
fstps
movsl
cmp
push
loopne
cmp
or
jmp
lahf
aas
dec
push
out
pop
add
pop
aas
inc
test
pop
fs
xchg
neg
lret
rcrb
rcr
enter
jmp
and
mov
std
xor
mov
out
or
push
pop
and
mov
jae
stos
aad
repz
stc
pusha
lods
int
push
lahf
mov
daa
push
sbb
in
enter
jge
cmp
mov
push
fistps
jle
fisttpl
jle
adc
cmpb
fmull
inc
out
cmp
mov
rcr
adc
fnstenv
sbb
xor
jno
popa
mov
sub
iret
popa
dec
sub
sbb
out
imul
les
cmpsl
xor
popf
mov
int
fucomip
xor
inc
stc
out
cmp
mov
shll
movsb
cmp
xchg
inc
in
dec
in
movsl
test
addl
cltd
les
sbb
lret
test
loop
mov
push
mov
mov
adc
bound
cli
mov
in
add
jo
adc
push
xlat
outsl
popf
divl
cld
jl
int3
mov
jge
xchg
loopne
icebp
in
scas
adc
shlb
pushf
cmp
jp
sbb
pop
cmpsl
xor
jecxz
mov
dec
test
int3
sub
dec
movb
push
fisttpl
leave
pop
mov
cmp
mov
fwait
xorb
les
push
pop
fidivrs
adc
lcall
xchg
xchg
inc
mov
out
mov
ret
iret
adc
cmpsl
test
scas
xchg
and
add
lock
pop
add
mov
or
push
cmp
lret
pop
add
sbb
fdivrp
arpl
cli
inc
in
mov
stos
out
sti
mov
imul
test
test
cmpsl
loope
mov
ret
xchg
in
cmp
int
mov
xorb
mov
shrl
sti
nop
jnp
mov
mov
in
sbb
fucomp
xorb
in
xchg
xchg
push
mov
sbb
jno
rorb
stos
mov
and
sub
jns
out
movsl
dec
inc
jnp
mov
outsb
lret
push
pop
inc
xor
out
inc
pop
je
push
loopne
pop
jle
inc
rcll
lcall
push
out
xchg
xchg
outsl
inc
inc
out
test
rcll
in
and
movsl
adc
mov
mov
sbb
dec
sub
and
and
mov
xchg
cmp
and
pushf
jb
das
test
or
ret
mov
push
fnstcw
sbb
mov
push
out
mov
cmp
jno
imul
push
pop
aam
xor
xchg
mov
les
cmp
sbb
neg
push
ret
ss
adcl
repnz
ret
mov
sub
mov
mov
dec
aam
imul
lret
mov
repz
and
imul
mov
sbb
sbb
leave
xchg
negl
ljmp
push
jg
leave
sarb
fs
es
xchg
rolb
xor
mov
addb
lea
sub
in
add
mov
push
mov
fnstsw
out
in
dec
sar
ljmp
insb
push
pop
xchg
icebp
sbb
pop
lods
inc
int
jne
aam
push
inc
sbb
loopne
or
dec
testl
push
jae
adc
sbb
loope
pop
ss
roll
pop
mov
inc
jge
ret
sbb
lods
in
push
mov
js
push
in
lcall
pmuludq
xor
sub
jmp
fldenv
idivb
jae
dec
lcall
out
stos
movsb
mov
roll
fdivs
movsb
push
mov
push
and
movsb
mov
xlat
and
sbb
xor
pop
jp
icebp
cwtl
xchg
sub
ficomps
out
movsl
inc
repnz
cmpsl
dec
pop
js
fmuls
cmc
imul
sarb
ljmp
pop
cmp
mov
xlat
sub
push
cmp
adc
clc
and
out
inc
cmp
sbb
add
inc
bound
call
ds
push
stos
divb
cmpsb
flds
push
cmp
sub
std
jge
mov
mov
sarb
inc
insl
movsb
cs
mulb
xchg
inc
mov
popa
lds
xor
lods
lret
shrb
ja
lods
cli
leave
jbe
pop
icebp
nop
push
adc
fnstenv
and
js
xchg
inc
add
mov
cltd
inc
xchg
push
dec
lods
je
stos
adc
cmc
mov
je
mov
dec
test
sti
pop
in
adc
and
mov
dec
out
sbb
xor
mov
fdivrl
incl
and
dec
es
jecxz
pop
inc
lods
mov
pop
jns
popf
imul
and
ret
sarl
xchg
aas
cmp
jmp
inc
or
adc
repz
or
repz
cltd
xor
xor
add
lods
bound
shll
loope
add
adc
push
sub
scas
cmp
sbb
bound
ret
push
mov
out
push
sub
jp
in
push
in
mov
jp
int
adc
inc
inc
dec
mov
push
jo
movsb
jp
dec
cwtl
lds
andb
imul
jp
pop
lcall
xchg
mov
ja
ret
ja
loop
lds
mov
jge
push
loope
add
cmp
mov
ret
cmp
ds
pusha
mov
xlat
pop
int3
fadd
add
sti
lock
outsl
je
fdiv
mov
mov
cmp
xchg
xor
xchg
push
pop
js
xchg
cmp
jp
stc
push
xchg
test
enter
add
popf
xchg
in
and
loop
lret
aaa
push
imul
lahf
sbb
outsb
push
sbb
scas
mov
lods
inc
fxch
in
test
cmp
jl
push
jne
push
fisttpll
movsl
ficompl
daa
push
pop
aad
sub
mov
mov
push
dec
aam
fcoml
loop
jg
outsb
jle
sahf
xchg
xchg
gs
mov
cmp
lock
ret
jnp
mov
not
mov
les
pop
jle
dec
ljmp
jecxz
push
sbb
mov
pushf
ss
jae
sub
xchg
and
inc
gs
jg
mov
fcomi
outsl
pop
loope
jnp
pop
in
jnp
sub
lcall
cmp
cmp
cmp
addl
clc
test
cmpsl
mov
mov
lds
movsb
inc
inc
xchg
dec
mov
or
cwtl
mov
xor
xorb
jp
rolb
jo
es
inc
or
test
sbb
sbb
ds
out
shlb
jnp
mov
push
jge
int
dec
ret
aas
bnd
in
mov
xor
xor
clc
add
cmp
pop
repz
jmp
mov
jne
icebp
add
cltd
mov
imul
int
sbb
nop
inc
aas
push
or
loopne
xor
push
pop
mov
mov
jne
adc
dec
jl
xchg
rorb
push
insb
cmc
es
insb
or
fs
push
pushf
enter
jge
aam
and
repnz
mov
je
orb
jno
mov
mov
fadd
pushf
imul
push
or
xchg
loop
test
or
mov
inc
mov
in
push
clc
and
xchg
cmp
cwtl
pop
dec
xchg
mov
scas
push
call
loope
jne
scas
xor
jle
and
cmp
dec
xorb
inc
dec
sub
pop
xor
mov
jle
xor
movb
rorl
or
stos
mov
pusha
call
addb
pop
adcl
cld
jb
jnp
mov
addr16
dec
cltd
sahf
icebp
add
push
ret
repnz
jmp
jg
cmpl
jge
dec
xorb
push
cs
lock
ja
insl
outsl
shlb
cmpsb
and
mov
leave
cmp
push
cs
out
add
jg
pop
in
pop
xchg
aaa
inc
adc
and
jge
mov
jle
mov
popa
dec
push
mov
aaa
mov
inc
loope
inc
imul
pop
mov
fsub
mov
addr16
data16
aas
rorb
ljmp
inc
xor
pushf
cmpsb
push
lods
subl
lcall
adc
cs
push
jo
jl
inc
lahf
xor
sub
pop
sbb
inc
cli
cmp
cmp
add
test
pop
dec
icebp
popa
xchg
add
mov
jns
or
scas
or
fwait
and
and
test
push
mulb
pusha
test
or
pusha
in
add
jnp
push
push
jno
les
out
stos
mov
lahf
js
cmp
sahf
adc
dec
pshufw
push
jge
ficomps
mov
cmp
out
rep
lahf
xchg
add
cwtl
jle
add
mov
fistl
push
insb
mov
pop
sahf
pop
outsl
jne
insb
inc
stos
std
cmp
fmul
cmp
pop
lea
xchg
fwait
sbb
sub
xchg
sub
push
gs
add
push
jp
xchg
fst
jns
js
scas
sbb
call
jne
out
mov
mov
mov
push
adc
lret
sbb
addr16
push
pop
inc
cli
cmpsl
push
out
sti
jmp
add
fists
clc
push
push
fwait
insb
scas
aad
je
sbb
mov
sub
adc
lds
in
scas
icebp
mov
fadds
or
enter
aam
test
mov
iret
in
cmc
cmp
sub
decl
xchg
icebp
pop
scas
and
test
nop
xchg
hlt
jecxz
lock
fidivl
dec
loope
jbe
fisubrs
mov
cltd
es
jmp
inc
push
push
inc
out
inc
repz
aaa
cmp
or
sub
dec
or
pop
sbb
cs
mov
ja
push
incl
mov
jo
icebp
cltd
fwait
sub
cmp
jecxz
jg
mov
mov
test
fs
sti
lods
ljmp
pop
js
xchg
js
sti
xchg
add
cmp
in
sbb
aaa
cmp
jge
in
push
popa
jae
cmpsb
xor
in
or
xchg
test
cmp
pop
ffree
out
or
and
dec
fcomi
adcl
inc
out
mov
das
dec
pop
iret
mov
rolb
xorl
jp
sub
mov
fmuls
jb
es
add
mov
push
dec
inc
fnstenv
xor
adc
in
cwtl
aam
push
push
out
push
loop
cs
outsb
cs
sahf
test
in
xor
push
loop
dec
mov
and
popf
or
adc
mov
pusha
das
test
int3
cwtl
fadds
movsl
jb
insl
mov
cmpsl
ss
cli
and
and
into
data16
cmpsb
lods
mull
mov
pop
incl
fsts
int3
or
adc
rcrb
adc
jnp
insb
add
aam
and
xchg
push
xchg
jmp
mov
jmp
adc
iret
imul
decb
pop
incb
scas
mov
sbb
jb
jb
outsb
add
lcall
cltd
lods
stos
jb
negl
mov
addr16
adc
cmp
jle
inc
stos
mov
pop
lcall
aam
cmpsb
push
jb
sub
sub
addr16
cld
dec
jecxz
out
dec
stos
jg
jmp
push
sbb
mov
fcmovne
lods
mov
movsl
imul
mov
mov
mov
cmp
xchg
mov
inc
mov
dec
lods
jae
dec
ljmp
push
sub
dec
and
and
stos
lret
imul
add
lods
lahf
or
jnp
js
sub
xor
clc
decl
add
hlt
push
inc
fadd
jmp
mov
dec
mov
lahf
jo
rolb
shll
scas
dec
aas
daa
jge
mov
inc
xlat
xchg
xchg
xchg
out
mov
xchg
out
pop
mov
pusha
push
outsb
int
fildll
sub
rol
jp
stos
imul
dec
sbb
inc
mov
jnp
xchg
outsb
movsl
call
jg
sub
ja
add
in
out
jmp
fsts
sbb
lret
or
out
jno
aaa
mov
data16
jge
repz
shll
jno
shl
test
xchg
cmp
es
pop
rclb
xor
in
mov
shl
mov
cmc
inc
test
stos
ficompl
js
cmpsl
pop
push
push
rcrb
and
mov
pop
fcom
xchg
cli
or
push
sub
fwait
es
imul
call
in
sub
mov
or
xchg
bound
imul
mov
test
jle
scas
mov
inc
repz
push
in
fdivr
sbb
fucomp
bound
dec
out
mov
jns
sarl
addr16
pop
pop
in
dec
sti
cmpsl
cmpsb
mov
ds
xor
sbb
xlat
mov
jns
dec
cwtl
and
mov
mov
lods
loope
scas
push
fdivs
clc
pop
or
inc
call
pushl
jl
cmpsb
sbb
push
cmpb
ret
aaa
decl
push
cld
pop
inc
mov
push
push
push
iret
repnz
sar
sub
fcmovb
jmp
mov
hlt
xor
pop
mov
xchg
test
popa
repz
push
aad
ds
sbb
pushf
adc
cltd
sub
adc
cs
movsb
ds
jo
jmp
jmp
mov
xchg
movsl
lcall
fsubrp
cmpsb
lahf
leave
in
ss
mov
test
dec
cmp
push
xchg
mov
inc
sbb
int3
xchg
jl
pop
sub
mov
dec
pcmpeqb
out
decb
jns
cmp
push
adc
cli
jp
stos
mov
das
push
adc
or
das
nop
ret
xor
mov
add
stos
adc
fucomip
jae
mov
fs
push
loop
xchg
orb
lods
sbb
cmp
decl
xchg
pop
fisttpl
xchg
dec
into
inc
mov
fisttpl
jl
icebp
imul
clc
test
push
push
add
sbb
lods
xorb
notb
ds
je
rcrl
ja
mov
loopne
cmp
and
gs
fisubrl
adc
imul
xlat
hlt
setae
shlb
pop
and
mov
jle
add
lahf
stos
out
loop
popf
insb
or
and
je
test
loop
ret
or
test
fwait
sbb
dec
in
xchg
cmp
shrl
xor
mov
pop
xor
xlat
xchg
mov
xchg
and
mov
cmp
aad
add
or
sub
dec
cmp
out
bound
mov
testl
dec
out
add
add
mov
nop
dec
aad
scas
data16
aad
sbbb
lret
ficoml
mov
out
push
push
jno
aad
stos
push
jo
mov
das
mov
dec
xor
push
cltd
sub
push
js
mov
mov
xor
js
pop
in
adc
xchg
int
push
cmpsb
sbb
pop
jge
aam
movsb
or
test
xchg
and
add
sbb
std
mov
cwtl
dec
dec
or
push
lods
cmp
repnz
icebp
leave
lods
mov
jg
addr16
insb
pusha
inc
or
pushf
push
stc
xor
cmp
sbb
arpl
add
sub
adc
pop
out
sub
add
or
testb
add
dec
inc
mov
cmp
cmp
inc
in
adc
lods
mov
out
jae
jecxz
imul
shlb
sahf
mov
sahf
into
gs
je
hlt
fcoms
ret
lahf
enter
arpl
mov
mov
repz
inc
or
mov
xor
lods
xor
mov
loope
cmp
lods
inc
jne
pop
inc
cmp
fs
inc
daa
lcall
xchg
push
jno
jp
xor
adc
lret
movsl
cmpsl
lea
int
add
addr16
loope
imul
fwait
mov
inc
xlat
outsl
or
shlb
jbe
sub
sub
outsb
arpl
jge
push
jle
lock
outsl
mov
inc
aaa
es
add
test
sub
ret
dec
mov
hlt
cmc
inc
iret
loopne
or
cltd
jnp
mov
in
pop
push
mov
mov
inc
mov
movsl
in
mov
sbb
fisttps
add
lcall
lods
inc
sbb
xchg
fstl
and
ds
inc
mov
pop
leave
xchg
popa
dec
cmp
or
nop
test
hlt
insb
shrl
pop
adc
adc
mov
in
mov
inc
lods
mov
adc
lods
int
pop
aas
mov
or
mov
cmpsb
jp
cwtl
sbb
fwait
jo
pop
adc
add
mov
adc
fistl
pop
cmp
dec
inc
jbe
rcpps
daa
int
xor
add
std
xchg
push
cmp
loope
loop
addr16
or
add
int
push
movsb
xchg
xchg
sub
cmp
cli
dec
mov
pop
popf
sub
add
lahf
cmp
shr
orl
dec
cmp
pop
jl
cs
push
lea
js
add
testb
add
mov
popf
sarb
gs
pop
pushf
xchg
cld
pop
iret
sub
dec
into
daa
leave
gs
push
jg
sub
je
dec
call
mov
out
mov
cmpl
ret
enter
inc
adc
aaa
push
push
add
dec
std
mov
inc
mov
aad
inc
shlb
sub
loop
xchg
jge
imul
pushl
jle
ficompl
or
mov
add
push
xchg
es
dec
pop
cmp
aaa
aad
push
push
lods
dec
js
inc
pop
call
sbbl
jo
rep
jg
pushf
and
xchg
sbb
fcoms
fwait
xor
cld
int
lahf
mov
subl
bound
add
sbb
jg
je
push
and
addr16
mov
lods
enter
lret
pop
negl
lods
je
sub
and
loop
add
repnz
int
lds
push
loopne
fs
jmp
gs
sbb
icebp
mov
adc
lds
jno
cs
enter
cwtl
popa
inc
fs
scas
sbb
outsl
and
push
aam
inc
push
call
int
stos
mov
sub
push
dec
mov
mov
add
add
out
lock
inc
cmp
je
mov
iret
int3
xchg
lret
and
mov
test
repnz
stc
inc
mov
iret
popf
jg
push
ja
mov
dec
push
icebp
hlt
stos
jge
cmp
push
jecxz
xchg
cs
inc
pop
cli
test
mov
xor
pop
sub
sbb
jle
fildl
or
mov
adc
test
lret
and
stos
mov
and
les
rolb
push
cmpsl
sarl
adc
mov
lret
mov
dec
inc
xchg
cmp
scas
ret
xor
rolb
mov
in
arpl
stc
cwtl
mov
xchg
or
xor
or
movsl
sbb
mov
aad
mov
enter
fs
or
in
jge
push
cmp
movsb
js
loopne
or
push
xlat
loope
pop
insb
ret
push
cli
test
ja
xlat
pusha
out
ret
ja
shlb
leave
jge
sub
sub
xchg
jb
pop
dec
xor
in
jmp
mov
in
pushf
mov
cmp
push
aaa
inc
mov
xchg
lret
sub
push
loopne
loope
mov
leave
mov
add
sarl
iret
cmp
mov
cmpsb
cltd
xchg
fs
pop
lock
into
inc
inc
mov
std
xlat
icebp
das
inc
cmpl
fistpll
inc
ljmp
inc
and
mov
ss
and
jge
cmp
push
pop
mov
js
inc
and
jecxz
jge
or
mov
les
mov
pop
lret
pop
je
jg
scas
and
enter
gs
ret
cmpsl
lea
inc
add
inc
ja
xor
jbe
imul
inc
xchg
cltd
xor
orb
out
in
rorl
jg
rol
icebp
sub
cmp
add
addr16
test
pop
loopne
xchg
or
sbb
mov
scas
inc
insb
je
inc
cmpsb
test
xor
insb
push
jno
jge
ret
jnp
mov
xchg
jge
sbb
or
mov
sbb
dec
or
pop
and
pop
mov
inc
icebp
into
cmpb
ret
pop
mov
test
js
ret
and
mov
push
ss
fisttpl
andl
xlat
popa
pop
push
lret
push
fisttps
popf
cmpsb
mov
push
jp
cmc
inc
xor
es
lds
in
js
stos
sbb
out
cmp
cltd
mov
sub
sbb
jmp
int3
add
lcall
pop
and
fimull
push
jecxz
mov
jg
addl
pusha
xchg
vpaddsw
lcall
aas
push
stos
fidivrl
arpl
mov
ret
jo
sti
sub
and
mov
xchg
fs
gs
test
test
mov
dec
outsw
or
push
sub
xchg
les
int3
dec
xchg
sbb
testl
ret
xor
clc
rorl
mov
inc
pushf
and
xor
xchg
xor
sub
xor
jg
xchg
fiaddl
aam
jge
test
dec
cmpsb
test
sub
sub
mov
fincstp
mov
shlb
psrld
pushf
aaa
adc
push
mov
pop
or
pop
push
loopne
dec
sbb
push
dec
adc
mov
pop
sti
in
mov
mov
push
mov
fisubrl
fnstsw
fnstsw
xchg
xchg
adcl
daa
push
int
mov
xchg
add
icebp
das
daa
into
cmc
loop
dec
out
cmpsb
add
xorl
dec
lea
lcall
movsl
lret
sbb
cmp
imul
inc
jns
scas
xor
addr16
in
outsb
jg
inc
rcll
sub
inc
inc
sub
mov
arpl
std
rorl
sbb
and
dec
mov
xchg
loop
inc
jb
les
fisttpll
jg
cmp
test
lods
sub
push
in
lods
mov
mov
or
add
int
xor
scas
jnp
mov
pusha
stos
mov
pusha
sbb
xchg
or
add
cmc
pop
fimull
cmp
cmc
out
or
js
sahf
in
stos
daa
jne
ret
in
iret
push
xchg
jmp
sub
stc
inc
imul
jle
add
mul
push
push
mov
lea
sub
dec
insb
andb
adc
mov
daa
jne
sub
xor
cmp
dec
imul
rolb
xchg
xchg
cmpsl
pop
clc
test
outsl
mov
in
jnp
mov
mov
or
arpl
ss
jecxz
mov
dec
fstpt
ret
scas
jl
jmp
loop
aas
cld
subw
inc
add
lahf
iret
xor
adc
fcomip
inc
aam
adc
cmp
or
mov
mov
cs
dec
cmc
fcoml
jno
dec
push
in
inc
fwait
add
or
sbb
test
inc
sbb
dec
popa
sbb
pop
jl
test
pop
fidivs
orb
ja
xchg
cmp
lahf
push
das
xor
mov
insb
cli
arpl
cmp
shlb
push
jge
ret
jg
icebp
lcall
pushf
dec
inc
xchg
sbbl
inc
out
repnz
arpl
jno
lret
in
push
lea
shlb
out
fwait
int3
add
add
inc
movsl
adc
cmp
iret
repnz
nop
insb
sbb
ret
adc
sbb
xchg
rcll
dec
mov
fidivs
insb
in
pusha
jbe
dec
jmp
pop
insl
sbb
hlt
lods
add
ss
and
jp
push
stos
push
andl
xor
dec
xor
hlt
loop
mov
cmp
fnstenv
inc
add
imul
sbb
mov
mov
shrb
leave
pop
stos
xchg
sbb
sub
sbb
push
push
fistpl
out
sub
mov
xchg
in
fwait
in
jge
push
xchg
std
ja
push
stc
jbe
push
sub
shl
xor
or
dec
repnz
push
in
lods
ret
pusha
inc
or
dec
or
sub
ss
sbb
incb
jne
mov
dec
jmp
add
jle
sbb
rol
cmp
mov
jne
ja,pt
stos
in
out
sbb
imul
xchg
enter
and
std
iret
notl
lret
outsb
lods
cmp
ss
cmc
mov
daa
mov
js
minps
push
jmp
insb
nop
or
rclb
nop
jns
push
fildl
rolb
clc
push
dec
and
leave
cmp
mov
or
push
lods
fcoms
mov
out
mov
dec
dec
cmp
push
pop
push
cli
std
add
pusha
xchg
lret
add
dec
pop
and
mov
jp
decb
add
add
and
fisubrs
mov
in
push
rol
mov
hlt
scas
fdivrs
in
outsl
subl
jnp
imul
data16
mov
fs
jo
pop
rorb
jbe
sub
loopne
mov
lods
fcmovbe
sbb
mov
lods
cmpsl
mov
xchg
fmul
imul
xlat
jns
daa
add
loopne
xlat
fldt
sub
pop
mov
sbb
dec
in
or
in
adc
sub
loop
pop
adc
and
push
pop
lods
jae
sbb
sub
nop
movsb
fs
pop
xor
sbb
jmp
in
std
aam
xor
add
test
rcr
int
cs
test
add
jae
inc
mov
sbb
in
idivb
xor
in
loop
mov
cmp
add
notl
mov
cmp
fchs
and
xlat
pop
sub
jl
adc
and
or
add
sub
sbb
mov
sub
nop
rcl
std
adc
adc
mov
mov
insb
inc
arpl
int
xchg
ljmp
inc
das
ljmp
mov
pushf
aad
std
inc
rcl
into
dec
sub
lods
jae
or
lcall
push
xor
ss
gs
sub
sbb
or
push
out
out
les
jae
inc
xchg
and
xlat
jecxz
hlt
stos
xchg
nop
jp
test
arpl
and
cmpsb
ffree
testl
push
and
and
lods
push
imul
ret
incb
shlb
stos
in
push
pop
fmul
mov
loope
mov
push
push
xor
loopne
xlat
mov
call
xor
sub
jb
mov
imul
and
mov
nop
pop
outsb
mov
call
aas
sbb
and
push
cmp
mov
add
and
pop
arpl
cmovo
push
xlat
pop
stc
sub
adc
test
repz
js
sub
sub
stos
lcall
mov
test
push
icebp
fidivl
sub
fwait
dec
inc
shrb
adc
fadd
fistps
imul
or
and
fidivl
mov
insb
out
cmp
xor
and
outsl
xchg
mov
les
sbb
or
add
mov
insb
jno
call
or
stos
xor
aas
inc
and
add
mov
imul
mov
and
pop
adc
pop
js
adc
test
xor
movsl
in
xchg
repz
lods
adc
and
out
pop
ja
les
adc
popf
cmpl
lret
into
cmpsl
call
shrl
sub
lahf
sub
lcall
loopne
jl
push
shr
movsl
jnp
adc
inc
rclb
lcall
dec
fimull
dec
xlat
std
mov
pop
cmp
jge
and
cvtdq2ps
and
and
pushf
rclb
push
test
mov
shll
cmpsl
add
add
imul
dec
fucomi
mov
lea
mov
mov
test
mov
xor
adc
pop
mov
shll
hlt
dec
jp
shlb
jo
arpl
xchg
test
aad
imul
into
xor
leave
pusha
sahf
mov
fistl
fisttpll
add
sarl
mov
inc
in
mov
stos
mov
xchg
ret
rorb
lcall
mov
out
inc
push
cmpsb
sbb
inc
sbb
cmpsb
mov
hlt
int
or
jp
sub
fucomip
xlat
mov
imul
lret
sub
cltd
push
push
adc
push
sahf
xor
cmp
icebp
cmpsl
clc
gs
lock
and
shrl
inc
int
mov
dec
mov
cmp
mov
arpl
hlt
add
and
mov
jecxz
push
and
repz
add
push
outsl
test
push
mov
shl
inc
lcall
int3
inc
addb
scas
femms
mov
lret
push
xlat
decb
fucom
mov
sbb
xor
insb
aad
push
adcl
push
lock
pop
push
repz
movd
inc
movsl
inc
mov
mov
loopne
out
loope
popa
jno
pop
movsl
mov
xchg
fisttpll
test
in
test
imull
icebp
xchg
insb
orl
out
push
sbb
mov
imul
lret
xchg
pop
jp
push
or
pushf
cmp
loopne
add
lods
or
leave
gs
jp
mov
ss
int
roll
loopne
ss
popf
jmp
leave
mov
add
lret
punpckldq
xor
xchg
or
and
mov
push
jns
dec
loop
cmp
lds
or
jae
clc
or
es
mov
mov
add
xchg
fs
push
enter
dec
push
mov
xorb
je
sbb
mov
test
ja
mov
add
je
lea
fs
mov
std
fistps
call
shr
insl
xor
jecxz
mov
aam
testb
das
fistpl
inc
fstl
jae
lea
fwait
mov
cmp
push
xchg
jmp
xor
xchg
jge
push
sahf
dec
cld
arpl
adc
add
rorl
mov
lret
sbb
cmc
or
scas
stc
pop
jo
pop
pop
loope
test
sbb
mov
xor
testl
mov
xor
shr
sbb
out
mov
add
enter
mov
loope
addps
cmpsl
pop
ja
sbb
push
inc
nop
lods
stos
jg
inc
cmp
mov
repz
lods
add
sbb
mov
in
out
roll
mov
outsl
push
cmp
pop
dec
roll
je
fbstp
sub
pop
pusha
inc
mov
jp
fidivs
pop
loope
das
iret
pusha
scas
fidivl
push
fs
loopne
dec
std
loope
out
call
and
popa
mov
test
xchg
xor
pushf
test
outsl
std
bswap
mov
push
aas
pop
out
mov
pop
adc
jle
jecxz
out
adc
lahf
and
scas
aas
fmull
scas
shlb
fadds
mov
sub
out
movsb
pop
aad
and
popa
popf
inc
xchg
push
cmpl
sti
rcrl
push
cltd
pop
mov
icebp
int3
sbbb
loop
dec
lock
cmp
ficoml
mov
je
and
lock
sub
adc
dec
xchg
enter
cmp
push
jl
lods
or
js
ret
dec
mov
push
movsl
sub
roll
push
cmpsb
or
jmp
jb
dec
mov
addb
mov
jg
and
fldcw
inc
cmpsl
lods
xlat
pop
js
imul
jge
lds
rcll
sbb
dec
dec
outsb
aaa
test
mov
xor
bound
xchg
repz
js
cmp
insb
xchg
lods
mov
leave
nop
and
popa
sub
imul
mov
xchg
sub
cmp
and
gs
xchg
loop
cs
enter
push
dec
movsb
inc
into
stos
xchg
push
cmp
xchg
dec
fwait
in
fucom
insl
fprem1
sub
push
call
aaa
cmp
xchg
loop
jo
mov
aas
pushf
sub
adc
mov
js
pop
rorl
cmp
push
pop
popf
mov
cmpl
jb
adc
adc
lods
andb
subb
popf
ljmp
ror
btc
repz
xor
mov
mov
inc
fidivrs
dec
or
rcrb
sbb
sub
adc
or
fsubrl
movb
push
adc
cmp
lret
and
pusha
daa
cmpsl
aas
and
repz
aam
mov
inc
leave
pop
lahf
sub
ljmp
sarl
inc
xchg
adc
xor
jo
xchg
out
loop
adc
xor
out
ds
mov
adc
adc
mov
lds
jp
dec
aam
and
cmpsb
jns
inc
insb
lcall
pusha
aad
bound
insb
movsl
and
push
push
dec
popa
push
loopne
repz
sub
arpl
lret
xor
mov
fsubrl
mov
jb
popl
ret
sti
inc
stos
mov
cmpsb
pop
cmp
call
sub
daa
inc
inc
imul
cli
jge
lock
mov
rorl
sbb
pop
arpl
test
push
inc
xor
mov
or
add
test
cmp
aas
mov
or
mov
jge
xchg
mov
pop
jl
inc
testl
adc
cltd
aaa
mov
movsb
mov
and
lcall
ljmp
aaa
scas
xor
repnz
nop
shrb
jne
push
std
or
mov
dec
adc
pop
lahf
jnp
scas
je
xor
fxch
test
jns
fstpt
push
sub
cs
pop
clc
out
sub
inc
cmc
repz
dec
mov
popf
dec
stos
ss
jmp
lock
pop
nop
mov
lcall
pop
pop
fcoms
xchg
cs
push
xchg
xchg
loopne
xor
ds
int3
adc
sbb
icebp
clc
div
pusha
fisubrl
dec
addr16
stos
in
in
xorl
imulb
mov
clc
fldt
jl
dec
bound
ret
jne
repz
outsb
ret
std
inc
mov
pop
inc
push
in
jmp
repz
mov
mov
cmc
adc
add
loope
incl
loope
push
cs
fwait
andl
xchg
mov
gs
loopne
loop
add
ret
pop
dec
ss
scas
xlat
xor
js
testb
dec
ja
or
mov
cmp
movsl
movhps
test
mov
jae
sbb
lea
mov
sbb
dec
jl
inc
mov
fistpl
push
stos
pusha
jp
stos
dec
rcrl
repz
icebp
dec
mov
rcrl
mov
movsb
xchg
push
fwait
pushf
pop
mov
adc
jg
jl
enter
pop
leave
out
into
mov
adc
cwtl
sub
push
cmp
lea
inc
jo
sbb
sbbl
in
dec
mov
ja
sub
repz
mov
dec
outsl
inc
cmpsl
and
daa
mov
inc
push
or
adc
rcr
rolb
repz
aam
jmp
test
mov
add
mul
add
xchg
mov
outsl
outsl
arpl
mov
add
out
mov
outsl
xor
or
das
cltd
jmp
sbb
push
mov
in
test
pop
push
adc
jnp
lds
mov
and
iret
or
mov
call
pop
stc
pop
xchg
jmp
cmp
xor
decl
scas
jne
adc
push
je
pop
mov
sub
or
push
test
sbbl
jmp
ret
subl
dec
scas
ror
push
jbe
and
scas
pop
icebp
mov
roll
dec
mov
push
mov
or
scas
and
and
push
hlt
xor
cld
es
adc
add
imul
sub
stos
xchg
in
or
sub
add
cltd
jp
sub
inc
dec
sarb
movsl
dec
add
inc
in
pop
and
add
mov
insl
mov
ds
jl
adc
dec
mov
adc
sarb
outsl
lods
xchg
mov
adc
mov
sub
ffree
jl
inc
call
pop
inc
sarb
les
add
push
push
nop
mov
cmpsb
mov
test
sub
mov
cmp
fisttpl
arpl
test
inc
ret
cmc
xor
lahf
imul
sbb
pop
pop
sarl
inc
popa
enter
das
mov
mov
push
lret
loopne
add
aaa
js
cli
xorl
adc
cmp
loope
popa
pop
ds
daa
sub
pop
cli
pop
lret
rorb
mov
or
scas
jl
enter
pushf
pop
cwtl
loop
aam
lock
push
xchg
sub
outsl
imull
adc
xchg
cwtl
push
fwait
inc
sub
mov
pop
sbb
xchg
in
stc
out
xchg
out
cli
or
jns
das
jle
jb
jae
ror
mov
cli
mov
and
dec
fistps
and
inc
fimull
negl
fcompl
les
out
stos
xchg
test
outsb
mov
rcr
ja
fdivrl
inc
ljmp
mov
adc
repnz
sub
stos
sbb
test
mov
fsubrs
xor
lret
cmp
popa
sbb
cmp
and
cltd
dec
loopne
pop
leave
sti
inc
xor
dec
sub
xor
jnp
imul
inc
aad
and
fwait
ljmp
int3
push
xor
cmp
jmp
or
imulb
sub
notl
icebp
push
inc
pop
dec
push
xchg
aad
movsb
imul
mov
in
mov
adc
sbb
mov
jl
and
mov
ret
xchg
pop
data16
or
push
dec
xchg
cmp
mov
cmp
adcl
fs
fldt
dec
jp
fcoml
dec
push
adcl
mov
mov
xchg
jbe
rcrl
sahf
rorl
ficompl
jl
mov
sbb
push
pop
cmpb
and
sbb
and
loop
ljmp
out
xchg
jbe
push
sub
cld
fistl
inc
test
or
out
outsb
lcall
in
jg
in
cs
dec
push
push
or
mov
lret
call
cmp
push
lea
and
push
dec
pop
insb
jp
ret
repnz
xchg
and
aas
lcall
dec
lods
inc
lcall
mov
and
decl
mov
xchg
xchg
dec
je
mov
inc
outsl
andb
ficompl
xchg
pop
push
hlt
push
xor
or
jo
in
std
xchg
in
jbe
xorl
push
add
inc
dec
lcall
pop
push
jo
bnd
inc
dec
enter
lret
mov
or
lahf
in
mov
adc
push
and
cmp
ss
lock
sub
push
iret
pop
setnp
adc
in
fcmovnu
or
xor
out
mov
push
clc
pop
js
out
mov
jne
pop
push
test
xchg
pushf
outsb
mov
rcll
sub
cmp
inc
push
shlb
icebp
mov
xchg
inc
int
pop
push
in
push
pop
xchg
scas
xchg
hlt
lahf
je
mov
pusha
mov
mov
pop
inc
push
mov
inc
xchg
mov
das
shlb
mov
mov
decb
mov
inc
sub
pop
in
cmp
cmp
les
mov
mov
xchg
roll
xor
inc
jno
and
pop
in
mov
cmp
mov
movsl
mov
sbb
movsl
hlt
cli
insb
cmpsl
rorl
out
mov
fs
and
cmpb
inc
push
ss
jecxz
rol
xchg
stos
inc
insb
test
loopne
hlt
mov
clc
mov
filds
loopne
popf
scas
mull
jle
jl
mov
sub
mov
aaa
jl
and
sbb
test
dec
sbb
lcall
pop
shlb
out
repnz
cmp
push
out
add
jmp
lods
scas
add
scas
addl
cmc
push
enter
xchg
cbtw
xchg
movsl
push
or
lret
pushl
mov
cmp
xor
jmp
xor
leave
rcrl
negb
mov
jae
adc
adc
push
std
lods
lret
lods
xor
aam
arpl
fbstp
mov
jmp
add
loopne
cmp
push
jge
ret
xchg
inc
decb
lds
mov
andb
cmpsb
jmp
mov
mov
scas
ss
subl
xchg
jmp
into
jg
cmpsl
xor
scas
xchg
mov
or
jmp
test
sub
sarl
cld
dec
outsb
ret
xor
pop
fisttps
pop
imul
lods
mov
subl
xchg
icebp
cld
push
add
push
jl
mov
test
test
rorl
xchg
fdivs
xchg
scas
les
adc
out
push
in
daa
insl
jecxz
and
mov
cmp
dec
scas
mov
xchg
mov
push
mov
movsb
mov
pop
mov
sbb
outsb
pusha
mov
cmp
mov
test
ret
loopne
mov
fsubrs
cli
lods
jecxz
sub
pop
dec
xchg
test
daa
or
mov
xor
mov
aam
stos
mov
ljmp
std
add
mov
in
and
mov
popf
and
outsb
loop
lods
fcomip
sub
lret
mov
jle
push
jno
hlt
inc
subl
jge
sub
or
hlt
and
orb
roll
fwait
cmp
push
sbb
test
sbb
test
mov
repz
ret
mov
scas
dec
add
popl
pop
or
mov
scas
out
sub
imul
cmpsl
jo
xchg
mov
mov
in
push
aam
inc
xchg
lods
push
xchg
sbb
mov
xor
dec
aad
jo
test
or
sbbb
stc
mov
dec
and
icebp
jbe
sub
in
insl
je
push
inc
shl
sbb
dec
clc
sub
scas
adcb
sbb
lahf
sub
shll
xor
jo
movsl
int3
repz
xor
sub
adc
and
pusha
sbb
pop
outsb
clc
daa
pop
add
enter
jae
ss
movsb
mov
sbb
les
mov
cmp
cmp
mov
fidivl
pop
pop
lahf
push
shlb
notl
cltd
das
gs
repz
mov
xor
testb
mov
out
in
and
fwait
test
je
outsb
imul
int3
les
add
test
cmpsb
xor
and
pop
pop
mov
repz
mov
fnsave
cmpsl
mov
int3
cmp
jmp
imul
into
jecxz
sti
rclb
std
xchg
jno
cmc
pop
shlb
xchg
mov
mov
ljmp
push
fwait
gs
push
lods
mov
mov
mov
call
jmp
fcom
pop
nop
lahf
push
imul
shlb
test
add
movsb
mov
xchg
push
dec
mov
fildll
out
add
xchg
pop
inc
push
jecxz
movsl
mov
cltd
mov
insl
add
aam
jb
xlat
inc
in
sub
inc
mov
mov
push
aas
cmp
lahf
mov
cmc
aam
pop
inc
call
jg
mov
jle
pushf
ja
mov
sub
aas
add
inc
and
and
inc
test
pop
push
or
jbe
sahf
mov
lds
pop
xchg
inc
or
loope
cmp
dec
sbb
outsb
lret
cs
test
mov
into
add
int3
push
mov
adc
jne
movsb
or
int3
sbb
sbb
repnz
add
sub
mov
or
and
decl
aas
mov
orl
es
xchg
push
mov
mov
jae
mov
pop
scas
fistl
les
inc
sub
icebp
xor
data16
xor
inc
in
add
iret
movsl
popl
pop
pop
fwait
or
enter
jne
cmp
mov
arpl
or
sub
into
shll
das
out
inc
jmp
xchg
lahf
fmul
push
mov
int
repnz
popa
in
testb
mov
xchg
pop
aad
jecxz
int
mov
out
clc
push
cmp
mov
cmp
cmpsb
sub
xchg
js
push
push
cltd
mov
int3
dec
lock
pop
mov
fstpt
lret
test
stos
stos
pushf
mov
popa
cmc
test
in
jg
push
inc
sbb
mov
mov
or
mov
xchg
mov
mov
mov
jle
push
in
cs
outsb
sbb
jo
popa
test
inc
or
stos
aam
dec
je
in
mov
mov
fsts
cmpl
daa
pop
xchg
stos
xchg
jle
adc
cs
pop
dec
or
mov
aaa
push
out
gs
xchg
mov
aad
push
and
js
test
je
push
cmp
loope
mov
lods
sbb
mov
call
out
pop
mov
gs
mov
mov
test
in
lods
repz
aas
ret
shl
add
ret
mov
sbb
or
dec
cmpsl
roll
xchg
cld
fimuls
sbb
mov
lret
sub
ds
cmc
sbb
mov
jl
lea
pushf
hlt
mov
inc
je
aas
loopne
pop
inc
mov
fstpl
leave
cmp
cmp
pop
aam
js
scas
fbstp
inc
mov
inc
fistl
pop
xchg
push
data16
pcmpeqb
and
scas
inc
push
dec
rorb
xor
outsl
pop
jecxz
fstpl
dec
xchg
es
cmpsl
cltd
data16
out
xchg
cmp
and
fsubs
cli
push
fidivrs
fiaddl
or
mov
mov
test
cmp
daa
in
and
pop
inc
cli
dec
mov
dec
adc
cmp
mulb
mov
lahf
das
lret
insb
push
adc
ja
mov
comiss
dec
int
cmpsl
repz
pop
sbb
les
mov
insl
seta
sbb
push
adc
push
fldt
stos
cmp
cmpsb
in
and
cmp
mov
cmpsb
call
cmpl
add
cwtl
int
mov
cmp
mov
test
movsb
rclb
add
icebp
push
sahf
dec
add
popa
pushf
xor
jo
loop
push
and
or
xlat
jae
lock
imul
js
push
pop
mov
dec
mov
dec
add
test
cltd
jp
mov
xchg
data16
sub
pop
outsl
or
add
xchg
subb
iret
loopne
push
mov
call
decb
ret
cltd
push
xor
mov
mov
add
insb
stos
adc
and
jp
sub
ljmp
sub
and
push
inc
adc
movsl
pmaddwd
lods
bound
pop
push
xchg
inc
fidivrs
xor
outsl
mov
lea
mov
nop
mov
gs
aas
dec
push
xchg
and
test
mov
xchg
sarl
mov
xor
mov
and
sub
mov
imul
push
sbb
mov
sbb
iret
daa
iret
pop
inc
xor
movsl
out
fstpl
leave
push
xor
jae
jae
daa
and
inc
jo
icebp
push
inc
xchg
add
xlat
jb
sbb
orl
cmp
sub
mov
rcrl
adc
jmp
sbb
shl
pop
xchg
mov
pop
sti
outsl
mov
ret
push
sub
fcomps
xor
and
lods
inc
dec
pop
and
mov
fisttpl
icebp
out
cmp
mov
add
sbb
mov
ss
sbb
cmp
call
repz
cli
std
inc
mov
iret
xchg
test
loopne
push
cli
in
das
sub
mov
aam
imul
cmp
sub
mov
pop
fidivl
decb
or
subb
jmp
sbb
pop
ds
adc
std
mov
test
xor
sub
lea
sub
int3
pop
sar
out
std
adc
lods
insl
or
push
xchg
push
pop
jl
je
ret
inc
data16
js
pop
sar
test
xchg
mov
dec
push
mov
fldenv
cmpsl
cmpsl
cmp
into
fs
push
xor
mov
cmpb
gs
mov
in
jnp
jp
jns
psubsb
inc
fsubr
scas
adc
in
xchg
aaa
or
nop
push
fadds
lea
in
xchg
cs
insb
add
sahf
imul
js
orl
mov
add
lods
xchg
and
aas
xchg
daa
add
arpl
mov
fwait
bound
adc
pop
rorb
popa
pop
aam
mov
inc
adc
inc
or
aas
fisubs
pop
pusha
push
push
shrl
fdivl
and
outsl
jmp
add
sbb
mov
pop
and
stos
fisttps
inc
sub
sub
sbb
icebp
std
popf
lahf
std
adc
imul
test
mov
push
sarl
lcall
and
inc
popa
sarb
fcomps
aas
mov
inc
or
adc
sbb
pop
adc
das
xchg
add
push
int3
jns
dec
mov
dec
jbe
outsb
mov
popa
xchg
nop
inc
sub
shr
jns
jg
cs
lock
jg
lahf
lods
push
push
pop
xchg
add
movsl
lret
dec
mov
dec
adc
ljmp
sub
adc
add
and
push
push
testl
mov
hlt
pusha
add
in
lock
gs
dec
cmc
fs
int3
and
push
add
cmp
sub
push
sbb
xor
inc
lods
sbb
cltd
add
pop
push
mov
mov
repz
arpl
mov
fmul
cwtl
out
dec
repz
lock
popf
in
and
or
jno
lods
push
and
out
lods
shlb
dec
cli
fwait
jb
inc
inc
test
sub
clc
inc
inc
popf
cmpsl
mov
jmp
mov
test
mov
rcrb
sbb
pop
in
or
lock
cltd
or
int
je
arpl
dec
mov
cmc
lods
xchg
or
scas
mov
pop
fs
divb
ja
sub
jecxz
sub
inc
mov
mov
pop
mov
pop
ljmp
xchg
pop
mov
dec
adc
jl
xchg
aaa
hlt
aas
data16
sub
inc
fmul
mov
stc
shlb
les
hlt
movsb
adc
sub
or
and
or
cwtl
adc
daa
adc
dec
pop
pop
test
in
std
xchg
inc
in
add
lock
int3
mov
sub
mov
das
loope
arpl
enter
int3
inc
fldl
pop
xchg
rcll
aas
sub
jns
add
out
add
into
cs
imull
xlat
mov
jmp
aaa
pop
push
loope
add
fmul
lret
popa
sub
sbb
fists
fsts
cmpb
jle
mov
push
aas
in
loope
adcb
dec
mov
jae
xor
mov
dec
pop
lods
sub
loop
pop
mov
push
mov
les
pop
inc
push
loop
mov
ret
adc
stos
inc
dec
jp
jge
add
cs
pop
jnp
cmp
test
movl
dec
xor
push
push
repz
jae
mov
add
adcb
mov
lock
mov
out
loop
mov
mov
mov
popf
sbb
sahf
mov
inc
push
outsb
sbbb
dec
push
jecxz
pop
sbb
out
sbb
sub
xor
shll
leave
mov
mov
xchg
mov
mov
shlb
int3
mov
push
fwait
push
dec
loope
and
cmp
mov
push
test
inc
jno
push
ja
movsb
jmp
inc
adc
sub
sub
testl
ss
or
in
push
xor
add
mov
mov
push
dec
add
lea
mov
pminsw
dec
lods
xchg
fistl
adcl
adc
mov
lret
xchg
sub
es
cmc
dec
ja
iret
nop
jnp
clc
fidivs
out
ljmp
fldcw
xor
inc
std
jo
adc
decl
adcb
cs
jnp
and
in
add
mov
lahf
dec
adc
sub
mov
adc
xchg
out
add
xchg
fcoml
fwait
mov
dec
or
and
push
cmpsb
push
aas
push
cmp
mov
mov
ret
jne
rorl
shl
add
lods
pop
mov
or
xchg
mov
push
sub
loope
inc
fidivrl
mov
out
dec
inc
xor
add
scas
add
test
push
aas
pop
push
inc
loop
dec
push
cltd
gs
xchg
out
clc
xchg
pop
fiadds
sbb
lcall
outsb
mov
push
dec
shll
jnp
leave
fdiv
mov
out
jle
dec
mov
jo
hlt
mov
je
out
or
into
xor
lock
mov
leave
iret
das
inc
mov
mov
and
dec
jecxz
popa
push
test
pop
push
lret
mov
andl
aas
inc
push
and
or
add
test
adc
jmp
call
mov
jmp
cli
insl
xchg
subb
mov
stc
ret
ja
add
repz
and
push
sbb
push
gs
jg
adc
fsub
cmc
lock
jmp
jbe
pop
pushf
and
cltd
xchg
lods
mov
mov
cmpsl
push
stos
adc
ljmp
jnp
dec
pushf
in
add
rcll
ret
cmp
inc
fcmovne
js
and
out
sbb
cmpsb
xchg
mov
and
popf
sbb
push
and
xchg
jmp
add
rolb
adc
mov
fidivrs
cli
mov
inc
rolb
ret
cmp
dec
sub
aad
nop
aam
add
jmp
enter
dec
pop
mov
dec
pop
jge
mov
sub
mov
rol
jl
sub
pop
inc
pop
imul
das
in
xchg
cmp
sti
mov
in
outsl
add
sbb
dec
ja
adc
jb
mov
je
push
jge
mov
lods
rcll
mov
outsb
fs
sub
push
out
adc
ds
scas
flds
pop
sti
mov
push
inc
test
stos
push
addl
mov
in
xor
ss
sub
pop
sti
jl
mov
sbb
cltd
enter
fmuls
add
test
sbb
add
cmpsb
sbb
add
repnz
sbb
xchg
sbb
mov
mov
sub
std
push
adc
xchg
lea
hlt
nop
push
pop
ret
jns
std
bound
lret
mov
aaa
fistpl
lret
cmpsb
ljmp
std
jmp
mov
jge
adcl
xor
arpl
repz
xor
rcrl
xchg
pop
call
fildl
mov
stc
adc
cltd
hlt
and
test
fld
pop
test
adc
lock
fdivrs
mov
jecxz
mov
fimuls
sbb
jge
push
aas
movsb
arpl
inc
out
lds
pop
xor
bound
dec
cld
out
insl
sbb
es
mov
mov
or
cmp
cli
stc
aad
notb
pop
aam
cmp
out
xor
pop
mov
inc
gs
jns
movsb
mov
gs
dec
ret
int3
or
mov
jne
jl
loopne
ret
mov
add
sti
jo
insl
and
lock
mov
sub
mov
nop
addr16
cltd
xchg
lret
div
push
mov
sub
add
dec
ss
and
ljmp
stc
scas
inc
scas
mov
cmp
mov
xchg
arpl
cmp
jb
pop
mov
mov
or
stc
add
sub
cmp
aaa
push
call
lods
push
xchg
sub
rorb
jae
fsubs
dec
xchg
mov
cmp
adc
jb
mov
in
push
lods
dec
les
sti
push
mov
scas
test
cmpsl
ja
aas
test
into
cmp
repz
xlat
shl
cli
rcl
jg
lds
cmp
in
stos
sub
adc
movsb
mov
mov
rol
cmp
mov
xor
sub
mov
or
sub
sub
xchg
xchg
xchg
push
or
jg
push
jno
xchg
cmp
std
ret
rcrl
leave
stos
cmpsl
add
out
fstpt
inc
add
cwtl
mov
movsl
push
add
rcll
xchg
pop
sbb
fistl
push
jb
mov
sub
xchg
test
mov
mov
cmc
xchg
jo
push
and
xchg
mov
inc
imul
cli
cltd
lcall
cmp
xlat
outsl
lahf
mov
icebp
js
xor
jl
pushf
lahf
sbb
and
lret
nop
out
call
lret
mov
loope
xchg
push
pop
or
mov
xor
mov
inc
out
pop
mov
loopne
sarl
jb
or
lret
in
inc
mov
stos
enter
push
pop
jne
ds
cmpsl
cmp
lahf
sub
out
addr16
andb
icebp
jnp
pop
xor
mov
push
xlat
sbbl
jo
push
mov
ret
inc
add
pop
icebp
nop
xchg
sub
mov
dec
scas
and
pusha
repnz
iret
pop
cmp
repnz
and
sub
stos
cltd
out
and
or
or
scas
push
cld
repnz
lea
or
mov
popa
push
add
adc
frstor
jae
mov
pop
xor
cs
loope
orl
fwait
mov
frstor
jne
lret
mov
adc
lahf
loopnew
fdivrl
dec
mov
pushf
cmp
in
mov
rep
add
adc
scas
les
and
pushf
or
and
sub
jo
test
outsl
lretw
mov
loope
mov
das
stos
jae
dec
stos
and
dec
dec
add
add
loopne
ja
lcall
sbb
arpl
ja
std
cmp
mov
dec
mov
pop
mov
in
into
xor
push
cmp
data16
ret
xor
sub
sub
fdivs
cwtl
aas
sbb
or
shr
stc
sbb
push
push
dec
outsl
je
jnp
mov
push
dec
mov
xor
sbb
push
hlt
mov
and
mov
ljmp
cwtl
stc
lods
out
pusha
mov
adcl
sub
inc
xchg
insb
pusha
push
lret
sub
push
das
mov
cmp
cwtl
sarl
aad
mov
mov
sub
mov
push
mov
pop
mov
adcl
test
push
sub
int3
shlb
roll
stc
and
sbbb
imul
cmp
add
pop
inc
arpl
fiaddl
mov
mov
mov
add
inc
sub
fcoms
loopne
xorb
inc
clc
sbb
je
xor
jge
inc
push
sbb
mov
pushl
or
push
xchg
gs
pop
mov
cwtl
mov
fadd
jle
cmp
and
fstps
negb
lods
aas
cmp
movsb
loop
cmp
jo
imul
xchg
rolb
xor
mov
loopne
sbb
gs
push
pop
or
mov
icebp
fsubs
and
in
jbe
push
mov
je
andb
fldt
adc
mov
inc
or
in
jl
lods
loopne
mov
jne
sarl
push
fxch
mov
ja
ds
mov
rorb
mov
xor
jne
out
aas
lret
into
push
adc
or
fwait
aas
bound
inc
jns
idivl
lods
mov
jmp
push
inc
cltd
sahf
mov
mov
mov
mov
dec
loop
ss
add
popf
test
cmp
mov
in
or
xchg
stc
pop
dec
xor
jns
xchg
fisttpll
mov
in
enter
fld
mov
mov
insb
sub
pop
push
push
jae
fwait
inc
adc
cmp
and
lret
push
xchg
fidivrl
call
shrl
xchg
lret
mov
jbe
imul
ret
in
add
lret
xor
fsts
dec
cltd
jp
mov
cmpsl
adc
fsubl
jmp
adc
ss
xchg
ja
mov
in
jno
jnp
insl
fisubrl
sbb
arpl
jo
push
popa
dec
mov
cmc
aaa
imul
xchg
addl
jmp
outsb
mov
stos
mov
popf
jnp
ret
and
shlb
xchg
popf
out
stc
sub
pop
dec
icebp
ret
mov
int
xchg
push
jecxz
mov
sub
test
dec
in
jne
inc
in
jl
inc
pop
mov
xchg
lret
cltd
enter
mov
lcall
push
outsb
in
inc
jb
push
jmp
out
cmp
mov
outsb
mov
popf
subl
inc
mov
lea
pop
pop
mov
jp
xchg
add
push
mov
in
iret
sbb
in
pop
cli
out
lret
pushf
test
mulps
jno
dec
idiv
jb
sub
or
xlat
or
repnz
xor
xchg
std
or
out
icebp
add
jl
pop
sbb
icebp
jl
ret
shlb
cs
out
push
bound
or
arpl
add
xchg
pushf
das
cwtl
negb
add
xchg
fidivs
cli
js
scas
mov
pop
xchg
cli
pop
pop
sub
and
push
loop
mov
add
addr16
in
adc
aaa
ljmp
mov
mov
into
pop
aad
xor
inc
test
icebp
add
es
ds
mov
sub
sbb
ffree
lock
fcoml
add
jecxz
cmpsb
imulb
loop
adc
prefetcht2
pop
pop
jge
and
hlt
jmp
jne
mul
into
subl
sub
lods
pop
jle
sbb
lahf
mov
and
es
inc
shlb
xchg
shll
pushf
aad
lahf
push
or
xor
dec
iret
ds
jl
lea
push
mov
mov
sbb
je
test
aad
int3
mov
mov
mov
in
mov
movsl
bnd
add
add
push
mov
mov
pop
and
call
test
jle
sbb
sbb
jae
sbb
adc
sbb
mov
test
leave
stc
xchg
push
leave
repnz
mov
adc
iret
cltd
test
popa
lcall
mov
pop
mov
mov
jmp
xlat
xor
mov
or
xchg
imul
cltd
out
stos
sbb
lcall
daa
fstpt
xor
xor
dec
pushf
jno
lock
scas
mov
adc
xor
or
test
mov
mov
push
mov
inc
xchg
mov
and
xchg
xchg
sbb
push
arpl
out
add
push
push
sbb
mov
scas
mov
xchg
in
and
adc
sub
lahf
mov
or
push
movsl
jl
sahf
stos
scas
test
xor
sub
les
sub
int3
add
ds
and
lock
imul
sub
aad
jecxz
jp
xchg
xchg
iret
jle
bound
ret
lods
imul
xchg
rorl
stc
mov
lods
jae
jbe
rcrl
push
sbb
mov
mov
fildl
xor
iret
xchg
jle
xor
jge
lret
dec
lret
movsl
mov
lock
jecxz
outsb
push
or
jns
cmp
mov
xor
push
clc
lcall
scas
inc
add
sahf
pop
rolb
lods
ret
scas
in
jnp
jno
scas
sbb
leave
push
fistl
add
xor
jle
dec
mov
inc
in
in
mov
pop
les
dec
lcall
fcompl
adc
js
enter
sub
loope
mov
mulb
ss
icebp
ds
jle
lret
aaa
sub
test
outsl
in
pop
pop
add
outsb
daa
push
stos
clc
mulb
cld
xor
jb
insl
pop
adcb
and
xor
es
addl
dec
insb
lods
dec
mov
push
or
pop
dec
fwait
jl
lahf
movsb
jae
cmp
ror
and
shl
iret
adc
pop
or
mov
dec
mov
pop
and
fwait
addb
mov
inc
cmp
inc
dec
lahf
mov
xchg
int
incb
test
ljmp
gs
pop
incl
adc
hlt
outsl
leave
sbb
js
push
jg
shlb
fmuls
into
arpl
mov
push
mov
xor
stc
lds
xchg
mov
dec
inc
add
loop,pn
and
aam
jle
in
dec
fimuls
ret
pop
jp
inc
xor
shrl
fbstp
mov
jb,pt
hlt
and
mov
repz
test
ds
andps
cmpsl
push
mov
int3
leave
daa
fs
leave
orl
and
call
cmp
scas
ss
dec
xchg
cmp
scas
mov
add
jmp
enter
push
mov
outsl
mov
jno
loopne
outsb
pop
aam
ret
push
dec
aad
xor
loope
mov
xchg
shrb
int
mov
sbb
pop
mov
test
mov
xchg
or
dec
sbb
stc
sub
fistps
sbb
xchg
adc
and
cmp
stc
mov
andl
mov
insl
lcall
test
int3
or
sub
fstpt
push
pushf
in
loopne
xor
pop
jo
mov
out
imul
gs
nop
sub
mov
add
push
inc
lds
rclb
loope
std
aad
aam
jne
lock
les
mov
call
fwait
pop
fwait
mov
insl
dec
mov
out
outsb
ret
sbb
add
in
rorb
mov
mov
inc
cmp
dec
jge
xchg
or
pop
jb
in
fidivrs
sbb
push
dec
sbb
inc
xchg
mov
jae
enter
js
adc
es
pop
inc
dec
cmp
stc
jb
mov
pop
das
jne
cltd
in
sub
sbb
rcrl
pop
mov
pop
xorb
popa
inc
cmp
ljmp
les
mov
dec
fcomps
int
mov
mov
push
int
jge
dec
mov
scas
sub
pop
inc
add
push
mov
mov
pop
js
mov
jb
adc
enter
xadd
sti
in
mov
sbbl
fldenv
mov
adc
das
xchg
loopne
fmuls
les
cwtl
fcomps
dec
pop
mov
pop
nop
adc
inc
adc
inc
pop
or
mov
push
dec
mov
fwait
lods
jg
inc
inc
test
pop
xchg
aas
clc
mov
cmp
lret
adc
out
push
stos
std
mov
sub
xor
test
decl
jmp
arpl
call
add
daa
outsb
lahf
push
stc
mov
in
push
xor
clc
jecxz
mov
mov
xor
pop
sub
mov
and
xor
mov
jne
aad
arpl
or
sbb
or
xor
loop
repz
inc
sbb
push
xor
mov
int
xchg
and
add
xor
stos
mov
in
fidivl
pop
ss
jge
xchg
and
loopne
nop
adc
popa
mov
jae
fldenv
and
xor
sbb
add
lcall
xor
not
dec
mov
inc
or
push
jle
and
push
xor
mov
adc
jo
cmc
jecxz
stos
jo
mov
xlat
hlt
iret
shlb
cmp
outsl
out
xor
xchg
popa
xor
lock
sbb
mov
arpl
idivb
push
bound
jecxz
xor
mov
push
mov
mov
addr16
ja
adcl
inc
jmp
mov
sarl
inc
dec
pop
push
ja
out
cs
incl
in
test
jl
and
rorb
inc
push
je
arpl
inc
fwait
mov
mov
cmp
bound
xchg
shll
inc
dec
xor
out
jns
or
jl
icebp
outsb
lock
mov
cmc
lahf
lret
lods
mov
xchg
jns
jmp
xchg
xorl
mov
push
mov
sub
dec
dec
test
cwtl
cmp
adc
cmc
mov
movsb
ret
iret
int
sub
into
aas
or
js
or
xchg
test
test
pavgb
sub
mov
scas
mov
insl
or
pop
pop
stos
mov
inc
dec
sti
cld
fwait
add
push
mov
dec
ss
dec
mov
sti
mov
cmpsb
xchg
rcll
out
inc
sbb
push
fldl2e
sbb
mov
jecxz
sbb
cmp
push
in
sbb
stos
mov
nop
in
fstpt
pop
in
cld
scas
mov
js
xchg
push
repnz
aas
jl
sub
dec
adc
div
pop
out
mov
and
jp
xchg
js
and
and
and
shl
inc
cmpb
leave
lret
sbb
push
imul
call
test
jecxz
je
add
pop
push
les
insl
test
push
jmp
mov
dec
shlb
push
and
adc
pop
cmp
je
cmp
jmp
fldenv
cmp
and
inc
repnz
lods
cli
sub
scas
ret
sahf
and
adc
jl
xchg
lret
out
stos
cmp
cwtl
into
and
or
test
out
mov
data16
test
sti
inc
mov
fistpll
insl
lahf
arpl
mov
jae
push
or
orb
frstor
adc
xchg
push
cmpsl
stc
pop
adc
aas
leave
fstpt
pop
xor
in
sarl
xchg
add
dec
dec
or
mov
jno
inc
mov
dec
sbb
mov
xor
adc
rcr
ret
adc
cwtl
sbb
ds
test
add
push
dec
push
xor
in
out
negl
dec
inc
int
test
addl
push
cmp
fimuls
xchg
push
mov
sub
mov
jae
stos
or
and
inc
aam
pop
out
jge
lcall
sub
mov
das
fstpl
push
push
adc
inc
in
es
adc
pop
imul
loopne
sub
orl
in
xchg
pop
pusha
cmpsb
add
ss
jo
movsb
mov
sbb
mov
xchg
sub
inc
jnp
testl
js
sub
fisubrl
xor
jl
sbb
adc
sbb
mov
push
lock
sub
jge
movsl
lret
cmc
aas
jnp
cmpsl
xchg
xor
pushl
mov
fwait
xor
call
jno
mov
mov
ja
daa
ja
jns
inc
sub
mov
mov
jae
cmc
mov
rcl
lods
popa
ret
jp
loop
pop
adc
lods
daa
nop
xor
or
call
xchg
repz
push
push
std
mov
fists
add
add
push
bound
hlt
test
and
sub
cltd
inc
scas
sub
pusha
push
xor
sub
shrl
pop
mov
cmpsb
adc
adc
ficomps
addr16
out
push
je
ja
stc
jns
in
mov
loopne
cmpsl
xchg
xor
or
cmpsb
jge
adc
loop
movsl
adc
pop
push
repnz
jb
sbb
les
xchg
push
push
dec
add
loope
dec
xor
mov
pushl
popf
mulb
or
hlt
push
jns
pop
push
popf
jg
cltd
xchg
dec
popf
sbb
aam
sub
pop
jbe
imul
fldcw
mov
or
sub
dec
jb
mov
bound
adc
inc
mov
mov
lods
add
popa
in
mov
jbe
cwtl
and
out
add
mov
xor
jg
jle
repz
or
shl
xor
fistl
in
gs
jle
xor
js
lcall
call
push
sub
test
xchg
js
cmp
fxch
fstpt
movl
xor
popf
jno
ljmp
negl
push
jp
testb
icebp
les
das
push
aam
push
sbb
in
mov
push
negb
dec
test
push
jge
jg
idiv
jg
mov
sbb
and
lock
into
or
xchg
mov
jl
sub
dec
leave
stc
icebp
xchg
pop
clc
shrb
aad
dec
pusha
scas
bound
mov
push
or
mov
cmp
clc
daa
mov
test
mov
outsb
jmp
sbb
shl
sbb
xor
and
into
xchg
xchg
cmp
and
sbbb
adc
pand
bound
push
push
mov
and
push
sbbb
lock
pop
or
jle
jbe
cld
pop
xchg
clc
inc
sub
pop
ss
mov
or
lcall
inc
push
sarb
cld
stos
adc
lds
jne
mov
shr
je
mov
in
cmp
add
filds
xchg
or
push
mov
popa
mov
add
bt
inc
adc
push
std
fmul
push
pushf
js
adc
in
fidivl
sbb
imul
bound
jno
rcr
pop
mov
in
push
inc
aas
fistl
sub
pop
fisttps
scas
cmpsb
xor
dec
push
mov
add
repz
into
jmp
sub
sbb
mov
and
adc
add
ret
jl
sbb
pop
xchg
outsl
or
stos
push
mov
mov
xchg
pop
cmp
cli
dec
leave
adc
daa
loopne
xor
mov
or
rorl
add
mov
std
adc
push
and
sbb
je
lods
das
dec
mov
or
decb
in
add
jns
dec
fwait
arpl
inc
insb
or
mov
inc
add
test
das
imul
ret
aad
or
cltd
dec
adc
add
pop
out
fmuls
push
stos
cmp
aad
add
xchg
mov
sbb
lods
pop
jne
bound
lahf
test
add
push
xlat
mov
xchg
add
sti
mov
sub
pop
icebp
jle
xchg
mov
xchg
add
or
pop
inc
cmp
xchg
jecxz
ljmp
cmp
push
popa
cs
xlat
hlt
mov
pop
loope
insb
pop
arpl
aam
pop
stc
rcrl
or
push
imulb
mov
ret
rorb
enter
dec
mov
rcrb
and
and
lods
dec
add
rorb
xchg
inc
adc
mov
mov
or
sarb
jg
pop
mov
inc
mov
add
stc
dec
xchg
fisttpll
fadd
fidivrl
dec
movsl
xchg
mov
pop
fcompl
add
pop
or
jmp
gs
mov
insb
adc
cmp
push
popf
mov
fadd
insb
push
pop
cmp
fmull
cwtl
stos
mov
mov
out
jno
sbb
rcrl
cmpsb
lahf
movsb
das
rclb
and
ljmp
test
subl
mov
sbbb
cmp
ljmp
sub
loopne
jae
push
xor
aaa
xchg
add
cmovb
pop
out
lea
xchg
mov
jl
adc
pop
ret
sahf
xchg
shll
out
mov
sbb
sbbl
lea
inc
cwtl
dec
sbb
xchg
sti
gs
xchg
pop
aad
jns
arpl
adc
mov
aad
cmc
js
arpl
mov
mov
jge
sub
jle
push
jne
js
out
mov
xor
out
mov
std
fidivrs
cmpsl
dec
in
ss
and
pop
ljmp
sub
cmpsl
mov
xchg
ljmp
pop
cmp
sti
ret
lahf
dec
lcall
push
int
sbb
mov
shlb
cwtl
jge
out
imul
inc
push
nop
fsub
cli
sub
lret
in
push
mov
fsubrs
test
mov
insb
ja
sbb
jecxz
aaa
fadd
xchg
sub
sahf
pop
insl
pop
jp
mov
insb
mov
xor
shr
pushf
add
ja
std
sub
rol
enter
jne
shr
pop
pop
cmp
sub
dec
lcall
andl
xchg
lods
jmp
xchg
cmpsb
dec
xchg
push
aad
test
test
sti
sbb
ret
or
inc
icebp
cltd
xchg
test
xor
xchg
adc
mov
movsl
inc
cli
ss
and
mov
std
in
scas
inc
xrstor
mov
lea
xchg
adc
mov
mov
les
push
aam
jl
add
out
inc
scas
jb
push
xchg
stos
cld
pop
adc
xlat
xchg
mov
ret
mov
inc
hlt
and
scas
lcall
scas
jne
ss
pushf
push
add
adcb
pop
adc
jge
dec
clc
mov
mov
cs
into
mov
int
fbld
and
xor
inc
in
into
out
adcb
jge
mov
addr16
aaa
andl
jne
and
add
mov
sub
or
loop
repnz
push
cmp
popf
inc
cmp
arpl
mov
hlt
rorb
call
xor
insb
ja
test
iret
and
dec
add
lret
lods
out
sub
sub
ljmp
xor
mov
out
adc
pusha
lcall
stos
lds
and
push
pushf
clc
sub
imul
ljmp
sub
jp
jbe
dec
neg
jp
dec
mov
leave
dec
xchg
cmp
into
mov
movsl
or
fidivl
push
inc
push
mov
gs
jo
popa
cmp
inc
mov
push
xor
mov
pop
and
xchg
into
mov
adc
ds
ret
test
push
xchg
movsb
cltd
cld
scas
into
cld
pop
xchg
fidivl
call
push
nop
aas
xchg
ret
dec
ret
push
in
jle
mov
test
xor
sub
dec
repnz
test
pop
xor
ss
sub
sbb
insb
rcll
adc
aad
sub
ljmp
inc
movsl
push
jb
dec
mov
sahf
lahf
adc
or
mov
mov
adc
mov
mov
cwtl
jnp
loopne
inc
mov
xchg
stos
push
push
mov
cmpsl
xchg
daa
jp
lcall
pop
mov
push
in
add
sbbb
lock
rcl
push
scas
sub
test
mov
sbb
in
aad
mov
neg
icebp
fcoms
int
in
imul
shlb
mov
ret
icebp
notl
mov
cmp
stos
cmpl
int3
call
repz
sti
adc
int
dec
lcall
ss
and
jno
fbstp
sbb
add
mov
xor
inc
cli
lods
data16
int
inc
stos
pop
lret
movsb
loop
fmul
ljmp
and
std
iret
into
movsl
push
fdivrl
daa
and
pushf
aad
and
push
adc
mov
stos
cwtl
lods
into
cmp
cmpsl
sub
push
mov
roll
or
sub
lods
arpl
lret
push
and
fcmovu
cmp
into
shll
adc
movsb
adc
rclb
imul
xchg
aam
dec
fldl
push
jmp
mov
daa
mov
add
cmp
push
xchg
in
push
popa
mov
in
sub
xor
pushf
stos
int3
imul
push
jle
sub
dec
cwtl
jb
xor
push
ds
dec
and
lods
inc
dec
cmp
mov
cmpsl
xchg
lret
mov
mulb
test
jo
std
lret
aas
out
cli
daa
sbb
sub
int
dec
inc
and
int
ljmp
mov
scas
imul
in
sub
add
inc
pop
xor
xchg
sub
repz
mov
nop
repnz
jmp
js
and
jl
hlt
dec
aam
adc
out
inc
pop
mov
out
mov
cs
cmp
clc
xchg
sbb
dec
jne
inc
leave
add
lret
sti
add
inc
aam
popf
adc
in
loop
cli
sbb
fcomps
and
icebp
test
add
push
push
repnz
or
cltd
add
lock
jge
mov
mov
dec
scas
das
fwait
in
inc
xlat
pushl
jge
mov
enter
xchg
inc
sbb
cltd
fistpl
cmc
or
push
mov
dec
scas
push
mov
jb
jg
loopne
dec
movsl
mov
imul
or
in
roll
lds
jmp
or
xchg
sub
adc
fnstsw
pop
add
xlat
push
test
adc
xor
cmpsb
push
mov
icebp
xchg
inc
in
push
add
pop
dec
cli
adc
xchg
aad
jge
adc
dec
stos
out
push
cltd
repnz
orl
outsb
fnstenv
xchg
inc
pop
sti
stc
sub
aas
cmc
mov
adc
jecxz
pushf
and
xchg
cmp
fsubl
add
jge
inc
jl
xchg
lret
jno
mov
xchg
mov
je
add
add
lods
pop
mov
shll
out
mov
scas
ljmp
sahf
dec
daa
jp
insl
sbbl
test
loopne
mov
jp
pop
test
jge
mull
sti
mov
dec
fldt
xchg
push
mov
add
and
push
adc
cmp
loopne
fdiv
add
loop
repnz
scas
shlb
and
addb
js
mov
jle
xorb
inc
jnp
or
mov
mov
add
dec
push
mov
pop
imul
in
mov
je
in
and
mov
jnp
aaa
pusha
cli
cmp
mov
jo
fdivs
cwtl
lock
xor
add
fwait
lods
das
inc
and
insb
in
loop
mov
or
call
movsl
mov
aad
mov
aad
les
push
push
cmp
add
loope
pop
jp
fists
icebp
inc
aad
jmp
outsb
sbb
pop
rcl
cmpsb
cltd
cwtl
in
imul
popa
fsubl
or
cmp
mov
push
dec
add
sbb
mov
subb
clc
sbb
add
das
cmpsb
outsb
jno
sbb
in
mov
int3
push
sahf
shlb
stc
outsl
mov
ljmp
pusha
cld
cld
adc
enter
std
dec
mov
mov
ss
mov
test
subb
add
lcall
pushf
mov
jae
ljmp
pop
push
shll
aaa
or
lock
dec
outsb
stos
mov
xor
std
adc
cltd
mov
or
xor
mov
mov
or
dec
sub
cmp
and
push
adc
mov
or
push
shlb
or
out
dec
push
cwtl
test
out
loope
push
in
or
gs
lcall
dec
pusha
popf
stos
sbb
rcrl
pop
into
inc
adc
inc
in
cmp
popa
dec
adc
shrl
or
cld
jno
sti
sub
mov
icebp
mov
mov
xor
ja
sarl
mov
inc
lods
push
mov
adc
mov
in
or
divl
mov
pop
mov
add
leave
shl
cld
js
pop
std
lret
jmp
lahf
push
mov
leave
gs
aas
nop
mov
popf
ss
jo
or
sar
adc
and
mov
push
xorb
cltd
push
sub
sbb
outsb
xchg
xor
cmp
jg
mov
scas
rcrb
nop
movb
aad
sub
int
xchg
and
sbbb
aas
cs
jecxz
push
into
nop
jl
jne
aam
jae
jge
xor
lea
sub
xchg
cld
xchg
movsl
xor
inc
outsb
jo
push
aam
insl
in
mov
mov
outsb
clc
xor
adc
xor
call
inc
xchg
mov
rorb
lods
push
inc
mov
dec
insb
je
loop
out
cmpsl
mov
les
iret
je
aaa
movsl
lods
xorl
mov
fisttps
add
sti
outsb
xor
pop
mov
mov
addr16
lcall
cmp
and
movsb
add
inc
cld
clc
sar
lcall
roll
aad
sub
adc
or
loop
adc
out
xchg
aaa
in
mov
adc
mov
xchg
out
dec
add
fistpll
and
lcall
fists
or
jecxz
shll
jne
lods
in
cmpsb
movsb
rorl
push
repz
mov
ret
ss
lahf
dec
sub
imul
ss
jp
xchg
adc
pusha
mov
and
xchg
insb
das
int
int
lcall
mov
fbld
movsl
pop
mov
and
cmpl
mov
mov
cmpsb
push
sbb
out
dec
jecxz
mov
xor
jnp
xchg
in
xchg
push
sub
jg
inc
mov
and
jle
aas
sub
popf
idiv
mov
notb
xchg
jmp
test
in
out
pushl
imul
sub
xchg
jecxz
seto
or
gs
inc
jecxz
popf
imul
fcompl
jb
les
or
push
push
inc
lds
iret
adc
xor
inc
stos
insl
mov
inc
hlt
inc
je
loop
test
xor
add
jno
mov
lds
cmp
or
mov
cs
xchg
ja
sub
or
or
push
rep
adc
push
add
mov
repz
xchg
lret
adc
cltd
push
jmp
icebp
les
imul
xor
cmp
aad
loope
mov
mov
jb
in
xchg
and
sti
insl
mov
xchg
in
ljmp
xor
outsb
inc
mov
lcall
movsb
leave
fsubr
sbb
cmc
inc
pop
cmc
inc
mov
mov
mov
xchg
repnz
sbbb
in
add
in
and
dec
data16
arpl
cmp
inc
xorb
test
into
sahf
sub
add
icebp
cmp
sub
int3
fisttpll
sbb
ret
ljmp
incb
popa
push
push
subl
and
inc
lds
mov
pop
sbb
daa
pop
mov
in
sbb
dec
push
aas
push
inc
cltd
and
lret
mov
fsub
outsl
loope
je
in
jbe
out
push
arpl
jecxz
jae
cmp
inc
or
push
je
mov
cwtl
mov
dec
insb
in
dec
jne
jl,pt
pop
arpl
push
sub
mov
sub
mov
jmp
mov
lods
cmpsb
addr16
ja
xchg
daa
inc
vpaddb
daa
xor
jl
pop
xchg
out
repz
inc
push
xchg
sbb
inc
sbb
decb
out
jno
pop
rclb
enter
add
mov
inc
loop
hlt
adc
push
test
jae
mov
pop
hlt
adc
dec
dec
inc
fisttpl
enter
lods
dec
std
xchg
arpl
mov
jns
dec
jle
aas
jno
popf
add
aaa
enter
xchg
xchg
mov
pushf
aad
sbb
andb
xchg
sub
dec
arpl
xor
dec
stos
imul
lret
insl
cli
ljmp
data16
aam
jmp
dec
or
push
lret
cld
testb
adc
comiss
loopne
mov
enter
in
inc
and
jo
test
les
pop
inc
inc
in
outsl
push
inc
cmc
lcall
push
dec
pushf
repz
hlt
and
imul
cmp
cwtl
jle
into
aam
movsb
repz
je
or
mov
frstor
push
cwtl
lds
adc
fwait
mov
add
or
cmc
add
imul
pop
mov
arpl
xchg
ret
stos
push
push
mov
xchg
stc
fmuls
dec
cmp
testl
xchg
rorb
mov
stos
pushf
add
jnp
lea
sbb
call
mov
pop
mov
sub
je
push
outsb
xchg
cmp
imul
xchg
das
pop
shll
and
dec
sbb
cmp
xor
dec
xchg
or
jecxz
cmovno
push
imul
sti
pop
xchg
mov
adc
xchg
int
out
outsb
fdivl
push
sub
adc
sbb
mov
aaa
ret
test
mov
cmp
int3
subl
std
shl
and
mov
mull
sub
jns
push
adc
lock
xor
fisubrl
std
aaa
jl
dec
lret
mov
ds
cmc
sub
arpl
mov
iret
mov
mov
sub
push
inc
in
inc
addl
jb
adc
mov
leave
pop
sbb
mov
push
pop
adc
cltd
frstor
arpl
dec
xchg
add
fincstp
lods
mov
jne
dec
push
aas
and
push
xor
mov
xor
repnz
xchg
push
popf
pop
cltd
and
jl
sbb
mov
pusha
xchg
jecxz
jbe
inc
movsb
cwtl
nop
imul
nop
push
jmp
stos
or
mov
enter
inc
xor
pop
fidivrl
pushf
or
int3
xor
mov
lods
cs
cmp
mov
push
mov
dec
xor
cld
stos
push
jnp
xor
mov
sbb
dec
iret
jge
adc
mov
jb
fcmovne
sub
jmp
sub
cmp
lods
lea
stos
push
or
mov
ss
js
mov
js
inc
out
dec
adc
mov
mov
movq
unpcklps
jg
jne
dec
xor
movsb
arpl
pop
push
pop
push
cltd
xchg
dec
outsl
xlat
and
inc
mov
inc
pop
fs
daa
rcr
aam
jecxz
push
and
push
push
cmpsb
cmp
pop
push
cmp
loopne
in
jae
mov
aas
into
popf
clc
jp
fs
and
jl
test
dec
cmp
aad
mov
and
fstp
mov
mov
shll
insb
scas
mov
pop
push
mov
cli
ret
pop
popf
out
movsl
push
or
aam
js
jbe
xchg
push
xchg
jl
scas
fwait
and
js
les
jbe
shlb
sub
sbb
push
dec
orb
lods
loope
mov
std
xor
pop
pop
lahf
fdivrs
and
sub
fdivrs
fisubl
jge
out
js
in
popa
mov
mov
or
mov
inc
or
lods
lea
sbb
and
xor
mov
jecxz
sub
push
les
clc
fbld
mov
xchg
rdmsr
cs
mov
fs
pop
and
dec
sbb
jl
xchg
iret
int3
clc
ret
adc
addl
stos
pop
mov
pop
xchg
cmc
fcoms
jle
ss
jno
lds
pop
add
mov
inc
loop
fsubrl
hlt
ss
and
fisttpl
in
cmpsb
push
scas
inc
or
mov
jns
mov
rcrb
arpl
mov
adc
push
dec
xor
push
push
jecxz
fdivrs
and
dec
mov
mov
and
rcr
xchg
sbb
or
push
cmpsl
daa
mov
pop
jo
js
cmp
pushf
mov
ja
into
jo
in
cli
mov
scas
mov
out
pusha
cld
insl
or
sbb
and
dec
mov
les
xor
insb
inc
xchg
nop
mov
jno
mov
inc
in
test
mov
mov
clc
aad
sbbb
sti
icebp
cli
inc
dec
xor
insl
stc
pushf
insb
in
sarl
addr16
mov
mov
cmpb
adc
xlat
in
xchg
sub
mov
xchg
in
rcrb
inc
mov
movsb
mov
sar
mov
pop
push
rol
ffree
cmp
hlt
test
les
sbb
push
push
xor
and
jnp
sbb
sarl
iret
rolb
pusha
cld
inc
scas
lret
roll
sbb
mov
cmp
test
push
mov
xchg
sub
or
ja
movsl
add
gs
pop
mov
addl
push
xchg
out
adc
mov
out
mov
out
inc
cmpsl
nop
into
daa
clc
nop
mov
scas
cmpsb
push
mov
adc
mov
lods
mov
mov
cmc
and
cmp
xor
xlat
add
add
xor
mov
das
sahf
jmp
pop
std
fnsave
adc
scas
mov
xchg
daa
jns
arpl
sub
popf
and
ret
icebp
cmp
cwtl
xchg
add
sbb
mov
arpl
scas
hlt
outsl
add
pop
xorl
inc
int3
mov
mov
incb
loope
fsubs
push
mov
ds
ret
ss
pop
dec
outsl
rorl
pop
mov
mov
mov
sbb
or
test
popf
or
into
dec
jae
inc
popa
out
mov
test
ret
pop
jg
xchg
imul
stos
mull
or
mov
aam
sub
mov
decl
in
mov
or
pop
jno
subb
lods
outsl
aas
mov
mov
icebp
add
pop
test
lcall
lcall
nop
xchg
jne
nop
in
lahf
cs
jg
and
popf
adc
push
xchg
hlt
mov
mov
subb
dec
cmp
xor
loopne
or
add
shlb
inc
adc
insl
sbb
mov
dec
in
or
in
je
and
mov
cmp
add
and
cltd
ret
cld
rorl
cmp
push
int
mov
sbb
icebp
stos
jl
dec
jo
pushf
mov
leave
fsubr
mov
or
ja
mov
xchg
jmp
inc
aad
roll
std
sub
mov
add
pop
cmpsb
decb
mov
add
sbb
push
in
cwtl
into
sti
adc
mov
jnp
and
js
sbb
xlat
dec
mov
mov
enter
cmp
scas
xor
or
arpl
adc
mov
test
push
ss
sti
fstpl
ss
mov
sub
movsb
out
push
icebp
add
push
ficoml
xor
test
sub
mov
cmp
sbb
and
je
call
je
shll
lcall
pop
push
sti
inc
sbb
pop
xchg
and
out
push
mov
cli
dec
in
and
cs
insl
add
fisttpl
lods
inc
nop
ret
xlat
imul
sti
int
lods
dec
add
lea
add
aam
dec
or
loopne
jae
arpl
scas
std
aad
pop
testb
xor
cmpsl
sbb
aad
iret
jne
loop
ret
sbb
lret
xor
andb
xchg
or
and
and
jp
imul
sbb
clc
pop
ja
and
sub
leave
xor
stos
mov
sbb
mov
lret
inc
insl
div
mov
inc
jno
push
fstpt
scas
push
xchg
pop
jbe
mov
lds
sub
aam
fstps
je
stos
fwait
test
lea
ret
cmp
insl
adc
push
mov
jb
pop
jl
adc
adc
loope,pn
adc
jl
xchg
rcrl
shlb
sub
mov
pushf
aas
es
por
aaa
xchg
jns
fsts
jecxz
or
mov
loope
add
add
lods
jnp
mov
test
std
adc
push
shrl
cltd
ljmp
mov
mov
jge
lock
jne
bound
pop
hlt
lahf
lret
mov
jmp
cmpb
decl
mov
dec
mov
pop
ds
and
adc
sbb
and
std
xor
lahf
dec
pop
cmc
fimull
iret
or
in
fcmovbe
out
jl
pop
adc
mov
aam
out
sahf
jg
lods
cmp
lock
les
pop
mov
push
and
cmc
xor
xor
mov
fldl
adc
push
jnp
jp
repnz
sub
push
popa
cmpsl
jmp
mov
sbb
pop
shrl
pop
mov
sub
cmp
loopne
aaa
xchg
push
data16
sbb
in
aad
cmp
dec
xlat
in
mov
cmp
fdivs
inc
lock
in
subb
loopne
cmp
cmpsl
add
push
add
push
mov
mov
jno
lock
shll
leave
inc
lock
lcall
outsb
insb
mov
pop
lret
imul
enter
idiv
lods
cmp
sbb
mov
dec
jb
cwtl
xchg
push
clc
rcll
mov
mov
sub
lret
fs
inc
push
push
sbb
jno
xor
test
ja
int
pop
add
ret
sbb
jae
mov
into
call
xor
jbe
sbb
enter
push
in
mov
pop
lret
jg
inc
mov
test
fildl
pop
push
outsl
adc
icebp
sub
scas
fldcw
fdiv
out
push
sub
lret
sbb
scas
mov
jl
fiaddl
in
das
fnsave
loop
addr16
and
gs
pop
push
push
and
sbb
sbb
sbb
add
xor
sbb
sbb
mov
in
adc
or
test
add
add
clc
jae
xor
mov
call
rcll
call
sub
test
imul
das
pop
mov
sbb
push
mov
sbb
aam
scas
inc
push
push
outsl
test
jnp
inc
aad
ss
int
clc
ss
dec
and
sbb
sbb
out
loopne
sub
dec
xor
mov
rep
int3
aam
pop
or
and
xlat
mov
insb
or
cmpsl
cmpb
cwtl
sbb
adc
push
sub
xchg
popf
cmp
adcl
shr
and
mov
repnz
push
cmp
mov
xchg
fidivrl
out
sub
sub
and
lds
mov
add
ljmp
sbb
xor
out
outsb
mov
leave
lock
push
cmp
dec
pop
std
add
mov
jge
iret
or
sub
js
out
imul
into
cmp
cld
dec
out
sahf
bound
hlt
test
and
loopne
xchg
fstps
add
xchg
inc
push
dec
ret
ret
shr
scas
sub
xor
gs
hlt
jmp
mov
in
lds
add
cmp
inc
mov
cld
mov
xlat
jb
stos
jecxz
cli
call
jecxz
mov
imul
or
aaa
dec
fs
pop
sahf
sub
cmp
outsb
negb
aam
and
xchg
imul
xchg
gs
or
scas
mov
sbb
jbe
jecxz
xchg
int
cwtl
outsl
lods
stc
add
hlt
pop
dec
dec
rorb
and
loop
push
add
sbb
dec
push
jnp
fsubrl
dec
xchg
fldenv
arpl
sub
lock
cmp
shrb
dec
daa
fcomip
les
cmp
cmpsl
fists
dec
inc
pushf
testb
and
mov
and
mov
and
cmpsl
std
jo
or
xor
jecxz
test
rcr
and
inc
pusha
outsb
cmpl
cs
push
mov
xor
pop
repnz
fcompl
fs
int3
popa
sbb
adc
shll
inc
mov
fst
mov
aad
lock
or
call
pop
pop
andb
ficoms
shlb
cmc
ja
adc
ret
in
xlat
test
ret
or
sbb
pop
pushf
aam
out
dec
mov
fs
nop
push
jno
data16
mov
adc
jp
fisubrl
lods
jne
jmp
insb
mov
ret
xchg
out
test
loope
aas
xor
in
jno
or
inc
mov
sub
hlt
sub
jge
jmp
movsl
mov
jg
cltd
jle
pop
pop
in
fdivr
cmp
out
int
dec
sbbl
jo
and
push
xchg
iret
outsb
nop
inc
mov
pushf
mov
sub
mov
add
cmp
add
mov
out
inc
or
shlb
addr16
jp
gs
jecxz
xor
daa
sahf
inc
in
and
jle
dec
push
lods
fcoml
enter
outsl
xchg
push
jnp
stos
in
icebp
lods
sti
pop
mov
adc
cltd
sti
push
sub
cmp
xchg
cmovae
ljmp
xchg
add
bound
xor
lahf
sub
out
cmp
mov
je
scas
and
xchg
call
je
push
es
sub
jo
mov
sub
jae
add
xor
das
aas
dec
mov
mov
or
inc
sub
lds
add
xchg
lret
gs
dec
in
inc
add
fwait
out
aam
xlat
out
shll
mov
icebp
sub
lods
sbb
push
sti
test
sbbl
sbb
push
and
sbb
mov
jns
sbb
leave
push
jge
idiv
pop
xchg
insb
mov
xor
cmp
push
sub
cmpsb
loop
dec
int3
mov
or
jp
or
xor
push
cli
mov
aaa
mov
out
inc
scas
cmp
inc
sub
lea
addr16
pop
or
adc
dec
adc
fildl
int3
cmp
fisttps
scas
push
or
adc
lds
subb
ljmp
addr16
aaa
test
xor
dec
aaa
and
testb
mov
mov
mov
in
xchg
pop
mov
push
mov
cmp
test
pop
pusha
mov
and
jb
lods
shlb
push
mov
push
outsb
mov
js
ja
or
addl
lock
daa
repz
xor
xchg
decb
pop
ret
iret
ret
cmp
cli
insl
pusha
xor
sahf
test
mov
rorl
aam
fsubs
xchg
pop
or
add
clc
loopne
sbb
outsb
lahf
aaa
mov
fisttpl
pop
and
rclb
pop
lret
adc
int3
add
xorb
bound
push
pushf
mov
mov
addr16
dec
and
arpl
push
jnp
js
push
hlt
dec
cmp
push
or
shll
mov
mov
shll
fnclex
mov
shrb
xchg
xor
cmp
repnz
nop
mov
mov
aad
ss
cmpsb
push
aaa
mov
hlt
out
cmpsl
fists
mov
push
or
loop
jo
xchg
mov
cmp
push
xor
icebp
mov
das
and
test
repz
push
jg
jecxz
lahf
cltd
sahf
fsubrp
pop
jae
push
dec
imul
push
mov
les
gs
and
pop
inc
aaa
in
data16
stos
xchg
loop
xor
adc
ret
xor
jno
or
sub
mov
dec
xchg
pop
push
mov
xor
and
loopne
addb
inc
mov
sub
or
cmp
mov
outsb
orb
jmp
adc
icebp
xlat
stos
int3
sbb
pop
insl
or
xchg
cli
mov
dec
leave
js
jmp
imul
out
push
mov
loopne
enter
inc
andb
sti
xchg
fsubrs
push
inc
loop
push
add
push
push
xor
sbb
loopne
into
sub
adc
cmpsl
and
xchg
pusha
mov
fbstp
push
xchg
aam
jg
cmpsl
dec
ret
mov
sahf
loope
cmp
and
pop
js
jge
xor
mov
jae
aaa
jae
jle
sub
icebp
push
xchg
out
cmp
dec
insb
test
xchg
inc
jno
outsb
sub
sub
pop
mov
hlt
movsl
loop
ljmp
jae
aad
outsb
or
out
dec
sub
dec
insl
sbbb
scas
jecxz
sti
ja
xchg
and
clc
dec
lds
adc
xchg
rolb
sub
mov
fidivs
mov
xlat
and
rcll
inc
dec
xchg
lcall
cmovl
and
lock
popf
mul
jmp
pushf
stc
xchg
ret
or
mov
dec
mov
rcrl
sbb
adc
jnp
pop
popf
sbb
sbb
pop
in
xchg
adc
lcall
and
scas
sbb
mov
or
out
inc
pop
pop
dec
dec
rcl
outsl
out
repz
fdivrp
fcompl
pop
inc
out
test
je
pop
xlat
or
ljmp
pushfw
xchg
out
cmpsl
add
xchg
push
fcoms
xchg
sub
add
fildll
int
idivl
jecxz
je
push
or
jnp
inc
jno
adc
jl
dec
cmpsb
or
jmp
and
test
add
mov
repz
inc
dec
imul
je
add
sub
cmp
lock
mov
and
aam
xchg
xor
xchg
xchg
clc
adc
inc
dec
cwtl
int
or
cmp
popa
pop
dec
repz
mov
in
cwtl
pop
and
fnstcw
les
sti
out
std
repz
pusha
pop
inc
inc
cmp
in
or
aaa
and
lods
arpl
mov
aaa
cmp
mov
test
inc
fs
pminsw
or
repnz
aam
pop
in
pop
in
xchg
cwtl
in
fistpll
mov
push
ret
dec
and
and
fisttps
jl
add
cmpsb
jns
dec
movsb
scas
icebp
and
pop
sbb
inc
dec
cmpsl
xorl
xor
jle
int
lahf
xor
push
adc
fidivl
ret
lret
push
lods
mov
jne
push
loope
xchg
xor
inc
in
in
test
testl
pop
xor
cld
faddl
jno
jae
mov
fstl
jnp
subb
xor
adc
pop
test
xchg
mov
mov
loop
mov
jl
dec
loop
pop
test
in
jg
ja
out
sar
fdivrl
jge
add
mov
in
add
pusha
push
imul
addr16
daa
call
inc
mov
push
mov
es
adc
mov
hlt
xlat
in
xchg
and
push
hlt
xlat
xchg
lock
lcall
decl
out
out
jnp
push
bound
jl
adc
je
or
adc
mov
push
gs
cmp
xchg
push
icebp
sbb
pushf
add
jno
cmp
fdivrs
or
cmp
mov
inc
lock
fstpl
pop
adc
nop
xor
mov
cltd
rcl
mov
fs
pop
iret
push
dec
cmp
dec
sub
ds
nop
xor
imul
push
mov
jbe
pushl
push
nop
pop
mov
addr16
into
mov
cmpsl
mov
cwtd
xchg
inc
hlt
mov
sbb
xchg
push
add
rcrb
push
loop
jbe
std
push
add
inc
cmp
cs
xchg
decl
jmp
lds
lret
pop
popf
popf
cmp
pop
fsubl
addr16
test
push
cmp
xchg
std
aam
lock
push
sub
sub
add
cmp
and
js
outsl
push
inc
inc
imul
pop
inc
test
xor
stos
inc
cmpl
jle
aas
pop
in
aaa
adc
sbb
ds
adcb
pop
xor
scas
int
sbb
enter
cmp
xchg
and
shr
mul
lods
fmull
xor
pop
sahf
sbb
pusha
sbb
pop
xor
imul
dec
inc
out
push
loopne
pop
and
enter
lods
sub
mov
mov
mov
dec
mov
loopne
mov
scas
daa
sbb
xor
fdivr
fildl
or
sahf
fsubrl
mov
mov
and
inc
mov
xchg
xor
clc
mov
xor
jl
mov
sub
js
ret
in
call
mov
push
ss
fcmovnu
sbb
sbb
mov
push
pop
lret
sbb
push
sub
adc
fsub
adc
popf
lds
sbb
jmp
int3
or
mov
jmp
cmp
insb
fwait
repnz
mov
xchg
das
push
outsl
cwtl
dec
fcoml
push
and
test
gs
push
or
aad
jg
stc
xor
lahf
in
xchg
xchg
in
mov
pop
clc
popa
sbb
movsl
cmc
xor
dec
pushw
push
push
xchg
adc
jge
pop
mov
mov
cwtl
cmp
and
arpl
cld
pop
pop
hlt
in
movsb
nop
sbb
xor
std
out
test
xchg
imul
or
xchg
sbb
faddl
push
clc
movsb
daa
inc
stc
xchg
add
pop
mov
push
cmp
cmp
je
out
out
movsl
mov
mov
fs
push
or
inc
cmp
jb
cmp
dec
iret
loope
dec
and
dec
stos
pusha
sbb
xchg
outsb
flds
je
sbb
adc
pusha
lahf
addl
test
test
imul
testl
or
decb
cmp
jnp
loop
bound
scas
es
sahf
sub
cmpsl
and
pop
notl
sti
fwait
arpl
mov
out
pop
jge
pop
mov
int
adcb
add
jmp
ficoms
hlt
stos
cmpsb
xor
push
adc
insl
xor
insb
pushf
jb
xor
jno
call
cwtl
xchg
mov
imul
inc
shrb
mov
call
mov
mov
jns
push
mov
ret
fnsetpm(287
sub
scas
push
push
pushf
mov
in
shll
xor
jnp
sub
jbe
inc
xchg
inc
xorb
mov
mov
inc
jecxz
out
jmp
jmp
or
lret
testb
mov
jge
add
mov
cli
pop
ret
ja
popf
lods
sbb
rolb
sahf
pop
push
sbb
int
mov
push
lods
jne
mov
fsubr
leave
xchg
sahf
mov
pop
scas
pop
jno
in
mov
fsts
lcall
cmc
into
add
sub
cmpb
fwait
dec
enter
xor
xlat
jbe
xchg
sahf
pop
repz
out
loope
jo
add
add
xchg
cmpsl
jbe
filds
lods
add
out
mov
mov
push
mov
cmpsb
lock
mov
pushl
inc
sahf
mov
insl
cmp
push
fwait
ret
sahf
pop
adc
cmp
sub
ret
fstp
imul
movsb
mov
jle
xchg
mov
test
add
jb
loop
int3
std
jbe
sub
gs
mov
jbe
mov
cmp
mov
and
inc
sbb
push
sub
out
lret
sbb
lods
shrl
cli
imulb
mov
cli
sub
insb
icebp
sub
arpl
mov
cwtl
insb
hlt
pop
loopne
push
push
inc
lods
test
or
int3
pop
jp
mov
mov
rorb
pop
sahf
xchg
daa
cli
mov
scas
les
repnz
testl
insb
insb
clc
dec
call
addr16
rorl
lea
test
in
adc
and
push
xchg
lea
mov
sbb
dec
push
aaa
aaa
test
sbb
test
ret
icebp
dec
sbb
or
dec
xor
or
add
mov
ret
cmp
ud0
cld
fildl
ret
arpl
adc
lret
inc
fdivl
mov
into
test
jp
mov
mov
xlat
adc
icebp
push
fstps
jae
jg
jne
sbb
lods
and
lock
mov
aaa
sub
mov
xor
les
push
or
kmovw
push
sbb
mov
rcr
adc
daa
push
bound
ja
in
jo
push
mov
data16
xchg
pushf
inc
iret
add
imul
push
rcrl
iret
inc
mov
jnp
add
sub
jmp
test
push
cmp
jge
out
or
imul
imull
popf
lret
xor
out
mov
sub
xor
xchg
shr
cmpsl
jle
mov
dec
jb
sbb
addb
xor
sarb
ja
push
pop
fdivl
hlt
pop
jl
hlt
cmpsb
mov
cmovae
jp
pop
xchg
pop
test
mov
repz
cmp
mov
out
push
add
pop
sahf
shll
jecxz
xchg
test
hlt
xchg
pushf
push
enter
cmpsb
mov
sahf
sub
sub
push
subl
jg
lods
push
leave
pop
sbb
fst
imul
imul
fstpt
cltd
fistpll
movsl
push
push
add
add
std
push
push
lret
push
xor
mov
add
arpl
fistpl
scas
mov
enter
aam
lret
dec
cs
fs
and
add
cltd
popf
mov
xor
scas
dec
mov
jl
pop
push
cli
jp
mov
dec
fistl
lret
bound
bt
mov
and
je
mov
mov
push
pop
pop
push
push
jge
stos
mov
leave
leave
mov
cs
mov
int3
cmc
call
ret
in
xor
and
xor
push
lea
mov
push
lods
loope
add
and
test
and
daa
xor
pop
xchg
rcrl
mov
push
cmp
or
sub
je
add
push
or
std
sub
dec
jl
dec
mov
lldt
repnz
rclb
inc
jae
loope
stc
pop
mov
mov
sti
lahf
mov
lahf
imul
bound
dec
xchg
mov
jns
clc
hlt
imul
repz
mov
mov
jl
sbb
and
lahf
in
add
and
cmpsb
mov
add
jbe
fwait
rcl
xchg
jb
cmp
mov
push
cmp
mov
out
lret
or
movl
or
test
outsb
rorl
jbe
xchg
scas
imul
cmp
les
iret
xor
test
push
leave
dec
int3
dec
es
xchg
inc
pop
mov
mov
adc
add
add
hlt
incb
pop
sub
fdivs
cmpsl
popa
sub
xchg
imul
int
aas
test
cmp
push
inc
mov
mull
loope
scas
add
jp
cmp
push
mov
cmp
adc
ret
leave
jne
cmp
cmp
jmp
iret
ljmp
and
mov
pop
pop
adc
popf
hlt
add
inc
cli
cmpsl
test
adc
loope
int3
dec
test
and
jns
mov
jmp
mov
sbb
rcrb
insb
shr
idivl
push
je
rol
mov
fisubs
inc
mov
xchg
mov
inc
enter
shrb
xor
bound
mov
lods
sbb
test
sahf
add
aaa
icebp
aad
enter
sub
or
pop
pop
addr16
adc
cwtl
mov
repnz
jb
pop
push
stc
inc
xor
adc
outsb
xchg
cmp
jmp
dec
ja
mov
mov
ja
shll
scas
push
mov
adc
push
pop
lock
mov
loop
out
mov
lock
add
test
mov
rcll
inc
mov
lcall
mov
test
push
iret
test
cmc
setle
sti
sub
push
adc
and
out
lret
adc
fistpll
or
mov
fwait
dec
xor
inc
jb
pop
out
fs
repnz
sub
fsubr
and
sbbb
jmp
loop
and
xor
ljmp
jle
inc
out
add
das
cmp
jnp
paddw
xchg
dec
pop
mov
ss
sahf
cmp
scas
xchg
or
mov
lock
push
popa
jnp
ljmp
xor
push
lahf
mov
xchg
inc
cmp
xchg
xor
andb
movsb
xchg
push
push
mov
inc
xor
int
cmp
insb
push
or
sub
sbb
jns
scas
xchg
jnp
mov
pushf
scas
lods
xlat
fdivp
and
adc
and
test
jnp
arpl
pushf
push
icebp
mov
neg
xlat
fistpll
inc
and
cmp
add
addr16
xchg
xor
and
sarb
in
pop
sarl
mov
stos
mov
in
adc
cmp
sbb
iret
pop
xor
jns
mov
jp
xor
adc
cmc
pop
dec
cs
nop
movsb
mov
jb
test
push
aaa
xchg
or
shlb
jo
mov
popf
js
xchg
lcall
lcall
loope
cmc
push
mov
xor
mov
sub
push
into
adc
pusha
dec
popf
or
movsb
pop
andb
mov
dec
enter
fwait
rclb
jne
push
icebp
lds
push
mov
test
xchg
bound
nop
pop
jnp
sarl
les
pop
punpckhdq
mov
inc
mov
pop
push
subb
rorb
mov
inc
neg
add
repnz
mov
hlt
lcall
mov
std
movb
pushl
aad
xor
cmp
sub
pop
dec
jecxz
jge
adc
sbb
jns
lret
and
xchg
dec
dec
sahf
cwtl
xor
add
push
in
jbe
fsubr
icebp
idivb
or
hlt
sbb
lock
divb
pop
xorb
mov
sar
stos
pop
imul
jl
pop
push
loope
leave
pop
mov
push
jge
mov
pushf
jg
jae
inc
pusha
xchg
mov
sbb
ljmp
xor
testl
add
mov
inc
popa
dec
repz
andb
mov
into
or
sub
push
outsb
inc
out
imul
enter
scas
popf
sub
je
mov
call
icebp
int
mov
cli
outsb
xlat
fwait
sbb
stos
stos
jg
das
cs
aad
jae
or
addr16
mov
in
gs
mov
jno
jge,pn
jne
loop,pt
adc
sarb
inc
pop
popa
outsl
push
mov
and
test
insl
sbb
mov
mov
add
mov
mov
push
ret
push
add
add
scas
in
dec
in
loope
cmpsl
das
or
mov
xlat
shll
pop
dec
xchg
xor
xchg
int3
repz
push
mov
mov
mov
mov
mov
in
cli
xchg
jge
pop
fbstp
cwtl
or
shlb
pop
icebp
jp
pushf
add
outsb
sbb
out
test
lcall
ss
lds
mov
addr16
je
dec
repz
mov
inc
sahf
dec
adc
jno
jae
pop
xchg
push
xor
push
jns
adc
pop
and
push
cmc
shr
lahf
arpl
dec
cmp
and
mov
stos
jle
mov
hlt
aam
lock
dec
imul
daa
mov
imul
xor
mov
cmc
ret
push
push
dec
andl
cs
fistl
adc
aad
loope
sbb
mov
je
dec
mov
and
dec
in
sub
mov
rclb
loop
outsb
shr
sub
push
mov
gs
lock
mov
pop
int3
out
and
out
inc
cmp
ret
mov
stos
lcall
xchg
adc
bound
movswl
jmp
and
stos
call
orb
js
sbb
pop
lret
mov
icebp
push
in
mov
xlat
mov
in
movsb
das
xor
add
jbe
sbb
jl
adc
jmp
neg
xchg
xchg
pop
aas
bound
cmp
data16
jae
mov
sbbl
mov
clc
fstpt
aad
out
lcall
and
adc
sub
stos
jp
dec
jp
mov
dec
sbb
add
imul
call
xlat
icebp
loope
mov
repnz
insb
mov
xor
xchg
add
out
mov
push
lcallw
hlt
nop
cmp
aam
test
lods
outsl
mov
mov
outsb
xor
shrl
lods
xchg
mov
stos
mov
jno
push
xlat
add
sub
jae
xor
mov
xchg
fstpt
rorb
out
lret
loopne
aam
pop
xchg
xor
push
popf
enter
fwait
insb
and
or
data16
out
mov
stos
mov
xchg
jae
pop
in
sbbl
jge
xchg
fcomi
mov
mov
enter
scas
stos
jb
xor
mov
push
dec
in
imul
ret
cwtl
adc
and
inc
xor
cld
lcall
sbb
inc
xor
pop
push
adc
in
add
pusha
add
outsb
push
and
pop
pop
dec
adc
xchg
dec
add
push
cmpb
fistpl
es
outsb
fstl
nop
sbb
and
ss
shlb
pop
movsb
ret
mov
arpl
gs
inc
and
or
je
mov
sub
push
int3
inc
lods
jl,pt
mov
push
inc
mov
cmp
xlat
sbb
insl
pop
jmp
and
rol
imul
adc
movsl
mov
std
jae
mov
pop
outsl
add
js
xchg
push
cli
mov
mov
xchg
jbe
dec
jns
cltd
pop
jo
sub
rcrl
sub
sbb
sub
dec
jecxz
adc
mov
lods
sbbb
mov
fmull
add
pop
adc
push
push
std
lea
cmp
inc
mov
mov
cmp
movsb
pop
jecxz
aaa
arpl
add
cs
push
cmpb
push
pop
std
ss
mov
out
movsl
or
xor
fcmovnb
ds
mov
mov
xor
ss
inc
shlb
lock
dec
imul
mov
loop
mov
pop
js
adc
jg
neg
test
push
adc
sbb
ss
cltd
add
push
dec
sub
test
mov
sbb
aaa
les
fs
scas
test
sahf
rolb
cld
lret
testb
cmp
or
test
outsb
sub
lret
sbb
sub
sti
aam
sti
leave
xchg
arpl
lock
jecxz
dec
jb
popa
roll
fimuls
int
loope
cmp
data16
mov
add
stc
add
mov
and
inc
dec
leave
cmp
jecxz
push
jnp
roll
js
hlt
add
imul
mov
ljmp
jo
out
leave
jne
xchg
add
push
cltd
xor
push
in
mov
ret
xor
js
mov
mov
lcall
cli
in
xorl
mov
movsl
pop
jl
cltd
arpl
push
pusha
aaa
sbb
scas
fisttpl
test
popa
addr16
out
mov
pop
mov
les
mov
add
mov
into
and
xchg
hlt
imul
mov
imul
data16
sub
cmp
scas
call
pop
sti
pushf
lods
ret
mov
lahf
sahf
rclb
js
popf
dec
cwtl
sub
scas
sbb
mov
shrb
push
sub
test
lret
inc
daa
add
scas
pop
mov
xor
jno
outsb
push
insb
aam
mov
dec
sub
test
jo
std
lcall
lea
imul
out
call
loop
insl
hlt
outsl
cs
mov
fcomps
jb
sub
int
pop
ret
or
in
ja
out
pop
jg
rcll
leave
push
or
enter
scas
push
addr16
mov
ficompl
inc
mov
lods
fadds
movsb
adc
inc
mov
push
aas
test
jmp
ds
lret
pop
hlt
fistl
fcmovnb
lea
add
js
dec
or
out
call
push
lds
fisttpll
and
sbb
xchg
jecxz
les
add
mov
lea
mov
sbb
pop
push
xor
mov
sub
addb
fsub
add
ja
dec
inc
rcrl
shll
rep
add
push
fs
push
dec
jge
shlb
dec
xchg
push
push
push
sub
and
lcall
mov
mov
or
sub
into
out
pop
jo
cltd
inc
lock
push
call
add
imul
cmp
mulb
adc
adc
mov
call
lods
xor
add
push
movsl
insb
cld
insl
rorb
inc
jecxz
mov
daa
cmp
add
and
aas
cmp
ds
cli
add
popf
jb
out
sub
test
or
mov
arpl
hlt
out
mov
jbe
nop
out
scas
mov
das
mov
dec
sbb
and
mov
add
mov
jne
mov
je
sbb
in
loopne
mov
push
pop
sbb
sub
out
cltd
mov
loope
imull
fdivrs
sti
out
mov
insb
test
bnd
outsl
jle
xlat
mov
cmp
mov
sbb
rclb
jnp
aad
aam
inc
fidivl
dec
cmp
inc
ljmp
test
xlat
mov
ljmp
xor
test
sub
adc
stos
cmpsb
jecxz
bound
xchg
movsb
jb
dec
cmp
jo
mov
mov
repnz
ds
fwait
push
push
das
mov
mov
outsl
jl
inc
dec
inc
std
lcall
xor
cmc
push
cmp
inc
addr16
add
mov
leave
mov
enter
and
jp
and
jae
ljmp
jp
push
push
xchg
xor
mov
dec
xchg
jle
sbb
add
push
xor
push
enter
cmp
data16
mov
cli
ds
lods
adc
clc
sub
ss
inc
mov
repnz
out
sub
inc
xor
data16
sub
or
out
mov
xchg
add
lahf
les
fisubs
adc
mov
or
inc
sub
fistps
aaa
push
andb
sub
push
mov
add
or
cmp
sub
and
xor
loopne
cmp
cmp
test
rcrb
inc
push
xor
push
jl
es
lret
add
push
in
cmp
popf
add
test
shr
xor
or
mov
jl
fmul
pop
sub
add
outsb
mov
fmull
test
mov
push
mov
xor
outsl
das
cwtl
loopne
or
lods
jno
aad
mov
filds
mov
lret
sub
repz
sbb
pop
into
add
out
adc
into
add
push
xchg
jno
insl
lods
xchg
mov
aam
hlt
pop
push
arpl
sub
fld
pop
or
gs
lds
addl
mov
dec
test
push
loopne
test
fsubrs
push
stc
adc
popa
idiv
mov
fimull
outsl
dec
lds
movl
sar
xor
inc
push
mov
in
test
cmp
addr16
test
mov
scas
fxch
bsf
pop
stos
inc
xor
jne
loope
pushf
cwtl
dec
scas
sar
into
ss
testb
aad
cmpl
mov
das
and
stos
lods
iret
push
xchg
arpl
mov
stc
mov
sub
mov
int3
js
es
jne
mov
mov
inc
pusha
adc
mov
or
popf
mov
test
cwtl
mov
fcmovnu
in
mov
fiadds
lret
dec
and
movl
test
inc
loope
test
mov
outsb
ret
and
sbb
js
adc
sub
rorb
xor
sbb
pop
pusha
mov
push
mov
jns
add
sbb
notb
push
out
scas
das
mov
cmp
mov
dec
jmp
mov
xor
mov
imul
jns
adc
mov
shll
mov
inc
int3
push
xor
dec
fs
inc
imulb
ss
fdivrs
push
mov
mov
pxor
or
lcall
inc
mov
lock
sub
and
inc
inc
cltd
ja
popf
or
sub
shlb
or
xchg
push
xchg
add
leave
mov
lds
pop
into
xor
and
into
test
loope
dec
std
push
aam
adc
nop
inc
arpl
xchg
lret
or
fbld
cld
aaa
cli
mov
pop
rorl
das
fdivs
xchg
pop
or
in
outsb
in
jge
xlat
sbb
jo
xchg
inc
imul
add
or
fstpl
and
or
sti
dec
in
lahf
push
fwait
clc
mov
in
cmp
aaa
inc
jle
std
dec
jle
stc
ljmp
sbb
cmpsl
pushf
std
mov
dec
push
dec
fiadds
push
sub
sbb
fbstp
test
mov
jbe
sub
and
inc
mov
fwait
lock
popa
mov
pshufw
jae
inc
mov
adc
lahf
ds
mov
dec
pop
out
test
repz
sbb
int
popf
pusha
popa
cli
add
push
add
in
dec
pop
dec
jmp
fbld
xor
pusha
xchg
in
ret
jmp
mov
xlat
sbb
out
jnp
movsb
jb
cwtl
jecxz
adc
out
jmp
sub
jae
lods
push
sbb
mov
xchg
mov
jmp
in
pusha
es
js
push
rorl
jl
push
aam
xchg
sub
pop
iret
or
stos
mov
mov
sub
and
add
dec
add
out
inc
push
cmp
out
inc
cmp
cwtl
jmp
mov
enter
push
dec
xchg
enter
xchg
aam
mov
pop
dec
popf
sbb
add
push
rorl
push
mov
lods
jno
dec
loope
and
ss
arpl
fsubrp
or
xchg
ds
inc
mov
out
sbb
repnz
out
inc
fs
dec
xor
rclb
inc
pop
adc
loopne
inc
imul
pop
fs
jne
xorl
sti
rclb
sbb
and
dec
cld
popf
repz
insb
push
mov
pop
rol
lods
test
out
es
mov
sbb
add
xlat
xchg
dec
or
sarb
mov
xor
cmpsb
ja
xlat
icebp
push
test
jmp
xchg
je
movsb
mov
frstor
clc
lahf
and
jmp
out
std
pop
jp
repnz
mov
imul
ret
xchg
cmp
test
and
jge
mov
cmpsb
dec
push
pop
push
clc
sahf
aad
jnp
and
jno
repz
iret
test
pop
mov
outsb
mov
aam
dec
mov
enter
mov
cmpsl
mov
inc
dec
adc
test
insl
fsubl
js
jae
ds
and
push
mov
ss
push
cmp
push
jl
sbb
in
or
fwait
call
add
and
xor
jae
fwait
nop
add
xabort
push
push
pop
data16
sub
cli
inc
rcll
shl
mov
dec
pop
out
jo
inc
cld
scas
jp
dec
jmp
iret
and
mov
imul
cmp
ffreep
fadds
and
rcrb
xchg
mov
lcall
test
aam
and
daa
pop
and
xchg
testb
in
mov
xor
dec
jge
imul
aad
data16
in
loop
pop
jg
ds
call
roll
adc
loopne
and
add
ds
lret
lods
dec
xor
outsl
xor
shlb
sbb
shll
inc
popa
pop
mov
cmpsl
lods
sbbb
rclb
push
jbe
repz
ljmp
adc
xchg
cs
mov
add
push
dec
inc
andl
mov
sbb
mov
sbb
fwait
popf
cli
pop
sub
loopne
and
popa
aaa
dec
inc
das
aaa
mov
xor
loopne
dec
test
imul
dec
fcomp
xor
cmpsl
bound
mov
iret
rorl
scas
test
imul
adc
push
cmp
sbb
push
add
jns
enter
mov
mov
cmp
xor
adc
and
mov
adc
out
pop
fstpt
pop
das
outsb
insb
push
dec
mov
mov
dec
out
call
movsb
negl
fcmovu
lret
aam
in
mov
or
jmp
mov
xor
xor
xlat
mov
mov
into
rclb
in
xchg
xchg
aas
mov
enter
loope
sbb
mov
test
das
or
lds
jg
aam
popf
sub
xchg
in
mov
jmp
add
push
out
stos
js
sbb
jns
xchg
pop
xchg
jp
mov
mov
mov
dec
test
sarl
xchg
jae
jns
dec
cmpsb
cmc
xor
sub
adc
dec
sbb
push
orb
lret
inc
push
loope
jmp
mov
jae
mov
imul
add
cmp
std
imul
add
push
push
jge
and
fdivr
mov
fs
mov
ret
js
add
pusha
lds
pop
shll
adc
mov
sub
push
fimuls
out
subl
push
mov
stos
sub
adc
jns
loope
fildl
pop
mov
sub
xchg
pop
mov
xor
mov
mov
popa
pop
fisttpll
stos
inc
rorl
pop
shl
sub
fwait
enter
mov
dec
mov
push
shrl
jmp
call
stos
fsubrl
notb
sahf
cmp
or
and
leave
cmp
sbb
pop
jl
fisubl
test
sbb
dec
push
test
pusha
loop
pushf
add
in
gs
fistl
xchg
add
cmpsb
mulb
sbb
std
cmpl
testl
in
xorl
popa
das
dec
aad
test
inc
mov
loope
mov
divl
js
sbb
cmp
cmp
mov
les
test
outsb
add
mov
cltd
jb,pn
adc
and
add
inc
mov
lods
movsl
pushf
push
mov
aaa
enter
ret
sahf
enter
sub
dec
gs
aas
call
jg
jb
rcrl
cmp
xchg
add
pop
inc
mov
pop
cwtl
iret
sub
repz
xchg
cmp
push
mov
les
adc
popa
loop
add
cmp
xchg
repz
add
pop
pushf
xchg
ss
add
divl
or
hlt
adc
adc
test
push
inc
adc
sbb
and
cmc
stos
sub
add
jl
daa
push
cltd
sub
or
dec
test
dec
aam
out
out
mov
cs
int3
jecxz
mov
xor
jecxz,pn
cmp
pop
fwait
jb
mov
mov
int
xchg
sbb
jnp
aad
xor
xor
jle
or
stos
push
fnstsw
in
outsb
sbb
sub
dec
orb
ret
fs
ds
mov
jnp
adc
in
out
pushf
sbb
clc
mov
movmskps
shrb
cmp
sub
cmp
lahf
xor
cmp
adc
xchg
pop
pop
pop
dec
stos
cs
dec
xor
push
pop
lods
leave
xlat
stc
test
repz
mov
idivb
jle
xor
sbb
lcall
or
out
and
adc
cmp
or
fdivr
fldcw
jno
arpl
and
dec
imul
jno
fs
jo
and
inc
mov
jmp
xchg
add
xchg
hlt
push
rcr
dec
stos
mov
lret
pop
loop
ljmp
xor
adc
add
add
mov
loopne
xor
sub
mov
mov
insb
jne
push
dec
xlat
sbb
gs
xor
movsl
xchg
xchg
in
js
cwtl
fistps
mov
inc
add
addr16
push
jg
pop
sub
cltd
sbb
pop
aad
jmp
xchg
mov
xchg
or
jo
pop
movsl
dec
nop
daa
dec
sbb
xor
or
add
pop
repnz
lock
cmc
pop
inc
js
insl
sbb
xor
sub
ss
repz
jbe
and
lods
rorl
iret
pop
push
lods
jo
sar
fs
stos
xchg
test
mov
pop
ss
push
mov
xchg
les
iret
mov
jge
bound
adc
and
mov
dec
ret
out
sub
outsl
push
daa
int
and
lods
pop
mov
sbb
mov
mov
ja
clc
test
mov
shlb
and
scas
and
mov
out
mov
lods
pushf
inc
insl
outsl
ficoms
jecxz
inc
push
sbb
sbb
std
loopne
cmp
stc
sbb
mov
lret
outsl
push
in
dec
dec
pop
out
adc
mov
fldcw
lea
sub
sbb
mov
pop
adc
push
fildll
push
sti
es
adc
cmp
pushf
fdivs
jae
std
sub
xchg
pop
sub
sub
cwtl
mov
out
mov
in
fxch
lea
mov
or
mov
push
je
mov
push
jnp
xchg
lods
repnz
fdivrs
mov
jnp
inc
les
xor
stos
sub
push
dec
ret
fldt
aad
jg
push
xor
sbb
mov
loopne
xchg
and
roll
cld
pop
mov
nop
imul
lcall
push
lret
mov
mov
out
pop
cli
rclb
aam
pusha
pop
nop
cld
ret
out
mov
adc
mov
mov
popf
or
sub
mov
xchg
pop
iret
xchg
push
notl
mov
arpl
ret
inc
mov
icebp
pop
sti
jbe
and
btcl
je
inc
insb
mov
in
push
fwait
add
cld
ret
pop
jmp
into
mov
sub
cltd
mov
pop
cmp
xchg
aam
and
mov
adc
dec
mov
outsl
dec
add
pushf
stos
add
out
push
mov
jg
inc
xor
xor
sbb
adc
xchg
sti
mov
xchg
mov
add
jbe
loopne
fdivr
mov
into
fsts
gs
ss
xor
xchg
cmp
js
insl
std
nop
mov
ret
pusha
sbb
or
sbb
lods
or
dec
or
sbbb
or
int3
inc
std
dec
jbe
sarb
and
iret
pushf
pop
inc
popf
inc
ss
lock
fldcw
nop
icebp
pusha
daa
dec
adc
cmp
push
popa
mov
mov
fisttpl
inc
adc
jmp
call
xchg
bound
cwtl
subb
stos
dec
xor
sbb
push
jle
push
lcall
aas
dec
lret
repnz
jp
shlb
dec
pop
xlat
mov
cmp
ret
outsl
repz
addb
rcr
xor
and
push
lahf
cs
fsts
pop
add
out
inc
cmp
fsts
sbb
fbld
pop
cwtl
sbbb
shl
add
out
ror
test
gs
andb
cmpsb
sbb
push
ds
mov
ds
std
scas
inc
dec
int
ret
loopne
dec
sub
fbstp
adc
jmp
ja
test
push
sub
or
into
dec
push
movsb
adcl
add
dec
idivl
push
adc
adc
mov
inc
jae
jbe
mov
push
jp
jns
fisttps
sbb
dec
xor
std
scas
and
insb
mov
adc
into
sbbb
mov
or
mov
add
jl
int3
dec
std
ret
clc
mov
pop
jns
inc
adc
or
scas
stc
mov
bound
mov
xlat
add
xchg
imul
mov
and
mov
xchg
mov
mov
clc
orl
jl
sbb
shll
enter
dec
setne
in
push
push
loopnew
mov
dec
mov
arpl
mov
iret
xlat
and
and
ja
inc
dec
xchg
inc
fsubrl
outsl
shlb
inc
mov
je
dec
jbe
mov
in
cld
sub
sub
les
imul
std
out
fcompl
push
cmpsb
lea
pop
std
in
pop
es
movsl
adc
ja
cltd
hlt
pop
inc
push
rclb
and
sti
es
xchg
ret
movaps
or
cmc
fldz
call
fstpt
and
into
inc
mov
daa
xor
mov
pop
and
pushl
adc
mov
mov
aad
xor
cmp
dec
inc
insb
push
or
cmp
enter
jmp
enter
push
cwtl
sti
push
push
and
ss
movsl
dec
mov
ret
inc
in
aaa
fwait
addb
push
rcll
fdivl
adc
movsl
pop
icebp
and
jge
inc
xor
scas
mov
inc
mov
ljmp
mov
dec
add
push
fimuls
lods
cmpl
dec
adc
sub
orb
imul
mov
mov
stos
mov
adc
add
pop
mov
loope
push
clc
std
sbb
mov
fnsave
and
stc
icebp
sub
rcll
fdivrl
adc
int
pop
mov
sbbl
and
out
sbb
adc
xchg
xor
sub
pop
ja
xorl
popa
and
fimull
inc
cmp
push
pushl
add
test
in
ja
and
mov
mov
lods
shrl
and
cltd
xchg
xchg
inc
sbb
push
shll
scas
sarb
testl
pop
and
sti
push
insl
bound
jb
xor
mov
cmp
push
es
inc
pop
data16
rorb
imul
arpl
aam
jb
adc
jae
out
cmp
clc
aam
adc
lea
xor
lcall
cmpsb
push
test
sbb
bound
xor
rcr
mov
pop
rorb
jg
inc
fbld
add
test
pushf
rol
inc
aas
fidivl
mov
gs
leave
movsb
mov
stos
and
cmp
jp
inc
test
add
add
negl
pushw
cmp
push
scas
lds
mov
cld
in
lcall
loop
and
adc
adc
and
xor
popa
cmc
and
repnz
push
inc
addr16
inc
xor
mov
mov
test
scas
sub
lret
out
push
adc
sub
or
in
sbb
popfw
dec
dec
int3
pop
dec
in
int3
sub
jno
push
arpl
xchg
gs
jl
fsts
aaa
and
add
adcl
rcrl
pop
sbb
out
and
and
mov
popf
or
sbb
imul
inc
hlt
mov
and
call
sub
cmp
imul
xchg
mov
mov
leave
cwtl
sub
xchg
sbbl
pop
sti
cld
in
cltd
adc
mov
ds
outsb
sbb
divb
xorb
iret
cmp
enter
lcall
nop
mov
daa
repz
and
aaa
test
cmp
add
roll
jl
adc
inc
mov
in
movsb
mov
imul
bound
mov
in
lea
cmp
and
jg
mov
adc
rcr
arpl
ret
cli
jnp
inc
cs
dec
mov
into
scas
or
stc
aas
movsl
jle
xchg
sti
dec
jle
push
mov
arpl
jmp
imul
repnz
fwait
pop
dec
aam
xchg
push
js
dec
inc
inc
pop
cmc
fstl
loope
xor
xchg
ds
dec
xchg
mov
aas
mov
cmp
mov
cmpsb
jl
cmpsl
sarb
lcall
inc
jmp
cmp
outsb
cmp
or
loop
jae
test
nop
adcl
cltd
and
popa
int3
xor
dec
cmc
roll
cld
push
and
addr16
sti
test
sbb
mov
fcmovnu
xchg
into
mov
inc
and
fdivrs
pop
jle
xchg
js
scas
sbb
icebp
stos
ss
test
in
jecxz
xlat
mov
mov
inc
pushf
xlat
popa
daa
lock
xchg
repnz
insb
jecxz
cwtl
in
out
push
in
jmp
push
sbb
cmp
cmpsb
xor
sti
lahf
sti
movsl
pop
xchg
sub
push
xlat
pushf
das
jp
sti
push
xor
dec
aad
jmp
testl
stc
mov
clc
subb
cmp
mov
sti
mov
in
xor
xor
mov
dec
clc
xor
sub
rol
stc
fbstp
iret
inc
push
mov
into
adc
sti
das
scas
push
mov
sbb
outsb
dec
pop
test
sub
popa
push
lds
aam
in
sub
faddp
sub
out
leave
xor
dec
mov
or
add
inc
rcl
fimull
lahf
mov
adc
enter
popa
lret
sahf
xor
jb
add
pop
mov
pusha
das
cmpsl
or
paddusw
mov
sub
arpl
bound
add
cmpsb
int3
mov
cmp
mov
sbb
sbb
push
fnstenv
mov
aaa
jge
shl
jle
jecxz
and
sub
cwtl
loop
pop
dec
pop
jle
jb
pop
rclb
mov
rcrl
aas
jb
insb
dec
pop
adc
inc
shll
sbb
lahf
cmpsb
jbe
into
out
sub
pushf
test
arpl
lea
es
push
cltd
jmp
mov
jne
dec
adc
bound
js
js
adc
add
add
cs
adc
loope
xchg
sets
testl
lods
jbe
hlt
mov
xor
stc
mov
popa
adc
aaa
sub
jge
scas
dec
pop
fbld
mov
pop
sub
jl
mov
lods
cmp
mov
jge
lret
push
cld
cmp
popf
enter
adc
jmp
pushf
les
xchg
in
adc
xchg
inc
pop
adc
ret
stos
das
in
mov
in
aas
in
pop
adc
bswap
xchg
pushf
je
movsb
sar
sub
cmc
into
or
cli
mov
push
cmp
push
outsb
pushf
inc
xor
xchg
and
inc
subb
fwait
out
rorb
or
scas
cli
dec
jmp
xlat
add
add
and
test
aas
or
jp
mov
es
pop
movsl
out
push
into
mov
out
sbb
pushf
or
jl
daa
aam
and
mov
and
mov
test
lea
and
mov
sbb
or
xchg
push
imul
dec
je
xchg
orl
js
ss
push
mov
jae
cld
adc
and
jl
std
aaa
jne
test
stc
pop
add
enter
enter
push
jge
ficomps
nop
rcr
mov
jne
xchg
mov
adc
fucomip
arpl
jnp,pt
out
and
and
push
lods
fimuls
aas
imul
stos
xchg
in
mov
mulb
dec
clc
jmp
addl
inc
stos
push
inc
loop
lret
add
cmpsb
lods
outsb
or
cmp
mov
popa
pop
imul
xchg
enter
jl
scas
daa
mov
rcrb
mov
sbb
dec
and
add
ljmp
inc
fsub
cmp
je
lods
xor
adc
lea
fisttpll
clc
or
push
xchg
and
mov
push
es
leave
je
mov
fwait
out
lcall
mov
sahf
nop
lds
test
cmpsl
mov
leave
popa
addr16
nop
dec
mov
sub
sbb
sarl
mov
out
jbe
cmc
push
jnp
nop
imul
jno
xchg
adc
sub
sbb
inc
fs
ret
jg
dec
push
rcl
dec
ja
and
push
je
inc
cmp
pushf
jnp
lahf
pop
mulb
cmp
enter
xlat
push
xor
cwtl
popf
repnz
jae
jns
cmp
pushl
divl
xor
mov
cwtl
mov
leave
push
out
adc
adc
mov
xchg
cmpsb
repnz
cmpsb
arpl
bound
lret
sbb
sub
sahf
jle
cmp
testb
mov
pop
mov
push
cmp
mov
cli
mov
sub
call
mov
in
aad
push
shrl
fmull
shl
dec
xor
jb
jmp
jle
xchg
xchg
popa
push
in
enter
pop
ret
jno
aad
pminub
xchg
test
pop
das
mov
cmp
cwtl
jmp
mov
push
sub
cltd
in
lds
lahf
cmp
loopne
mov
movsb
repnz
xchg
sub
push
add
xor
jmp
lock
pop
cs
mov
sbb
adc
push
out
and
xchg
ja
or
std
insl
mov
stos
mov
add
leave
xor
and
add
mov
fdivl
xchg
mulps
mov
or
and
in
lahf
into
jne
add
test
je
xchg
add
ficompl
in
sbb
dec
mov
popf
push
leave
popa
mov
pop
sub
xor
scas
cmp
clc
add
stos
dec
sub
push
hlt
test
sti
clc
push
std
test
or
cs
leave
jl
jnp
inc
es
dec
push
xor
out
adc
dec
mov
jecxz
sbb
mov
les
mov
cmp
xchg
push
jmp
jle
lods
xor
dec
sub
fildl
inc
iret
jb
std
and
sbb
sbb
xchg
xor
cwtl
out
fmuls
push
sub
sub
and
jecxz
cmc
enter
pop
enter
mov
insb
mov
jne
cmp
das
mov
les
std
pop
movntq
xor
rcr
cs
pop
jg
jmpw
sahf
jbe
je
arpl
bound
dec
adc
push
rcll
not
ret
out
sbb
xchg
mov
in
in
inc
jne
gs
int
pop
xor
sbb
das
rol
in
push
aam
iret
cmp
mov
inc
pushf
push
gs
push
fstp
pusha
xchg
pushw
pop
cmp
sub
jl
sub
shrl
jbe
clc
jb
dec
mov
or
es
mov
or
jg
push
out
ficoml
or
jl
movl
push
mov
je
loopne
xor
movsb
test
lea
loopnew
addb
pop
mov
jb
bound
fldt
dec
jo
pop
mov
xchg
jns
test
arpl
daa
sti
push
stos
call
cmovl
push
vdivps
mov
dec
insl
test
leave
shlb
add
lcall
mov
and
pop
sti
mov
inc
pusha
mov
aam
cmpsl
add
sbb
adc
lret
icebp
cld
ja
adc
fcmovbe
jmp
ja
xchg
inc
sarl
xchg
xor
imul
movsb
add
jno
mov
dec
imul
rol
mov
ljmp
mov
push
fadds
lcall
je
scas
orb
sub
cmp
or
enter
stos
xchg
xchg
inc
adc
sbb
dec
shr
mov
fists
fwait
scas
jecxz
pop
fwait
dec
mov
xchg
fdiv
lock
outsb
mov
mov
add
add
push
xchg
mov
out
int3
push
push
xchg
in
jb
pop
xchg
ss
mov
pop
jne
jp
nop
mov
das
cld
popa
xor
push
sub
incb
mov
add
ljmp
mov
mov
js
adc
lcall
ss
fwait
daa
outsb
ja
xchg
test
jg
pop
cmp
ljmp
stc
aad
jns
xchg
cmp
cmpsl
pusha
sbbl
lret
imul
cmp
sti
cltd
pop
scas
push
cmpsl
push
mov
adc
roll
data16
mov
cmp
fidivs
mov
test
movsl
add
xlat
into
jmp
jecxz,pt
arpl
sbb
test
out
dec
push
inc
mov
das
ret
notl
xchg
lahf
push
jl
push
mov
stos
pop
orb
push
sti
push
pop
ud1
stos
mov
rclb
jl
lods
repz
push
fistl
insl
and
ret
cmp
pop
and
push
inc
and
stos
xor
mov
push
test
pop
push
jno
cmp
imul
mov
cltd
cli
mov
and
sbb
sarb
push
push
xlat
push
jecxz
sbb
xchg
ljmp
adc
mov
mov
add
lock
push
aad
add
mov
or
js
adc
mov
lds
fsubr
mov
push
or
adc
adcb
mov
jae
jmp
outsl
xlat
out
ljmp
sub
pop
leave
sahf
ja
stc
insb
jo
nop
sbb
inc
loope
scas
js
jge
rcrb
add
xor
mov
xchg
inc
or
jge
dec
popl
cwtl
shll
sub
push
mov
mov
push
js
fnstenv
pop
xlat
fldt
fdivrp
or
pop
mov
sbb
jp
xchg
xchg
xchg
mov
jmp
or
shrb
out
mov
daa
imul
mov
sbb
or
aaa
mov
push
shlb
enter
mov
dec
mov
pop
jae
in
or
and
lcall
mov
mov
sub
rorl
jnp
cmp
xchg
lea
pop
popf
scas
or
mov
rolb
sbb
push
mov
jb
repnz
mov
dec
mov
pop
pop
mov
push
mov
pop
rcrb
xor
aam
leave
rorb
and
sbbl
std
repnz
xor
mov
loop
dec
in
xor
arpl
mov
cmpsl
insl
mov
inc
xchg
mov
stos
les
mov
inc
pop
jb
lahf
sarl
fucomip
in
xchg
jp
insl
bound
xchg
dec
lahf
cmc
xlat
popa
adc
jmp
fnsave
add
push
xchg
adc
inc
outsb
out
push
cmp
scas
and
dec
sbb
out
inc
xor
inc
pop
push
outsl
sbb
xchg
cmpsl
andb
and
or
inc
sub
pop
lock
fnop
push
cmp
addb
loopne
dec
outsl
pop
insb
jge
cmpsb
nop
inc
mov
and
cld
jecxz
xchg
xor
js
xlat
or
mov
rcll
jne
fwait
sub
addr16
mov
cmpsl
test
mov
cmpsb
lds
iret
nop
pop
jl
dec
or
or
mov
int
xchg
out
cmp
idivl
and
xor
push
clc
jge
shr
pop
ds
cmp
adc
int3
pop
add
adc
and
inc
mov
rcrb
inc
inc
inc
cltd
loopne
andl
sbb
fmull
mov
lds
pop
mov
shll
push
mov
inc
cld
lcall
enter
sbb
push
rcll
pusha
inc
sub
push
push
stos
mov
jecxz
lods
mov
mov
lds
mov
inc
das
pushf
faddl
jecxz
dec
sub
aaa
mov
ds
xchg
sbb
dec
jg
inc
cltd
scas
sbb
dec
nop
loop
filds
filds
test
sub
into
call
fwait
aaa
lea
add
lock
jb
and
loopne
fwait
pop
mov
or
test
mov
jl
adc
inc
mov
adc
lods
inc
sub
data16
jge
lods
xchg
inc
and
add
fistpll
lahf
push
popa
jl
fmull
jbe
jnp
mov
jns
popf
add
mov
sub
and
mov
test
jmp
lea
xor
outsb
jno
push
cmp
xor
xor
loopne
leave
lret
sbbb
leave
jg
lret
jno
and
lea
in
or
sbb
stos
into
dec
pop
jns
jbe
scas
mov
cmp
test
outsb
cmp
add
and
cmp
sub
fcomi
jo
cs
sahf
arpl
pusha
mov
or
mov
cmpsb
mov
sbb
insl
insb
fists
aaa
mov
hlt
lock
fisubrl
jne
test
push
xor
sub
sbb
inc
mov
sbb
repz
push
cltd
cmp
out
mov
int3
dec
clc
or
jns
mov
movsl
sbb
adc
lcall
lods
outsb
pop
adc
mov
xor
std
pop
enter
stos
dec
pop
call
out
sti
lahf
stos
push
mov
xchg
dec
shl
je
test
sbb
sbb
mov
pusha
xor
lret
xchg
es
sbb
bound
arpl
xchg
orb
and
mov
popa
aad
shl
pop
sub
adc
inc
cmc
fs
and
sti
rclb
jmp
sahf
adc
js
cmc
xchg
xchg
cmp
fldl
xchg
fisubrs
daa
bound
dec
mov
loope
xchg
push
divb
notb
sub
adc
popa
insl
xor
aam
push
mov
mov
les
push
mov
mov
pop
lea
xchg
shrb
jns
movsl
ja
inc
into
push
mov
add
xchg
or
jno
rol
adc
cmp
dec
sbb
xchg
xor
cmc
rcr
cmp
cmp
sub
aaa
std
imul
inc
dec
and
jno
je
add
xchg
mov
stos
pop
adc
mov
loope
jg
js
nop
cmp
inc
aaa
jecxz
cmp
mov
aas
sub
mov
lods
cmpsb
sub
inc
stos
xchg
popa
lds
mov
setbe
mov
andb
mov
in
mov
shlb
jge
adc
mov
push
mov
faddl
mov
xor
in
das
pop
mov
movsl
out
fidivl
jne
in
mov
popf
add
or
push
in
stc
popf
mov
and
outsl
daa
push
pop
mov
mov
and
in
push
jns
sbb
push
ret
test
push
cwtl
dec
pop
sbb
pop
test
dec
add
cmp
call
mov
cmp
data16
int
cmp
aaa
cld
pop
ret
sub
ja
mov
pusha
add
aaa
les
in
push
or
aam
repz
icebp
test
mov
cmc
inc
in
pop
cmpsb
jg
mov
mov
pusha
mov
pop
mov
add
sub
mov
sahf
pop
mov
sbb
sbb
lret
out
add
jg
add
jp
mov
shlb
test
dec
sbb
xorl
mov
test
les
sbb
mov
sub
jns
fstpl
adc
adc
test
hlt
aam
notb
add
sbb
mov
dec
ret
mov
xchg
lea
xchg
mov
cmp
dec
ror
pop
es
inc
lcall
and
std
loope
jno
pop
mov
imul
and
cltd
dec
das
sub
into
inc
icebp
and
add
push
mov
mov
fstl
inc
adc
int
mov
mov
xchg
push
cli
lret
inc
aam
out
movsl
push
mov
pop
add
adc
lods
mov
xlat
xchg
jns,pn
sbb
sbb
lds
fidivrl
inc
out
adc
dec
inc
btc
pop
arpl
inc
jmp
adc
test
mov
test
push
clc
dec
push
mov
scas
pop
or
push
push
cmp
xor
imul
mov
stc
outsb
cltd
sub
cltd
rcrb
cmp
stos
mov
push
lds
fistps
push
inc
mov
lock
fmuls
imul
out
ja
clc
icebp
outsl
or
mov
pop
inc
sbb
andl
out
add
mov
shlb
pop
fdivrs
lcall
sarb
call
xchg
sub
pop
inc
mov
je
push
dec
jns
mov
jmp
outsb
je
or
lea
leave
rcrb
xchg
test
jg
int
sub
and
xchg
testl
ret
or
lods
pop
sahf
leave
pop
dec
adc
mov
jae
rorb
ds
adc
fidivrs
jecxz
loop
scas
insl
or
jo
filds
inc
cli
fmul
pop
mov
and
xor
push
lea
sbb
inc
in
leave
xchg
adc
add
lock
rcr
sub
inc
push
notb
mov
leave
or
ret
test
adc
add
mov
adc
into
fwait
scas
mov
ja
loopne
imul
mov
and
lea
ficoms
push
xorl
cmp
mov
add
xchg
mov
adc
jb
cmpsb
data16
outsb
push
test
test
sub
inc
rclb
js
push
ret
mov
nop
or
lahf
mov
test
insb
fimull
inc
rorb
aas
rcll
lods
push
lcall
mov
dec
adc
enter
mov
push
add
xor
push
mov
push
pop
jb
mov
cli
test
cmp
mov
sub
insb
xchg
addr16
popa
and
lock
icebp
inc
jb
movsb
add
fnstenv
fists
mov
mov
lret
push
sbb
adc
mov
push
rclb
pop
out
cmp
out
pop
movsl
cmovl
xor
pop
mov
xor
mov
pop
push
push
fwait
xor
lea
sub
aad
outsb
jae
push
inc
ret
jno
aaa
outsl
inc
add
ljmp
rclb
inc
shrb
int3
mov
push
jmp
or
push
fnstenv
outsl
or
arpl
stc
shrb
scas
out
shll
or
call
mov
stc
mov
imul
testb
nop
testb
inc
ljmp
cmpb
add
arpl
mov
in
cmp
icebp
stos
rcrb
add
fcmovnbe
out
fisubrl
aad
cli
cmp
push
and
test
or
stos
and
scas
pusha
ljmp
mov
insb
test
lcall
stos
sbb
sbb
xchg
xchg
inc
fwait
push
inc
pusha
clc
mov
ja
lods
xor
dec
mov
mov
jmp
aam
imul
push
add
outsl
scas
jle
aas
sbb
sbb
pop
scas
adc
jecxz
stos
data16
inc
adc
loop
outsb
aaa
mov
mov
aaa
mov
cmc
movsl
adc
hlt
dec
es
mov
xor
pop
aad
cmp
xchg
jns
lds
je
xchg
push
lods
outsb
xor
jae
insl
mov
loop
fmull
adc
pop
pushf
stc
xor
cmp
icebp
test
cmp
test
out
mov
sbb
mov
push
sbb
sbb
push
int3
imul
push
push
xor
hlt
xchg
arpl
jnp
cmp
sar
iret
not
xchg
adcl
ret
jno
or
xchg
sub
jmp
lock
sahf
je
pop
mov
das
inc
pusha
inc
adcb
shrl
pop
nop
jecxz
sub
mov
xchg
es
push
shll
pop
cmpsb
sbb
pop
outsb
rol
mov
rclb
fsubs
jecxz
jne
lret
inc
adc
xchg
add
mov
mov
jae
mov
repz
rorl
add
mov
inc
in
sub
jl
aam
and
sbb
aad
lock
cmp
addb
dec
xchg
mov
sbb
insl
xchg
dec
adc
cld
push
dec
jb
lahf
push
push
flds
push
jae
mov
xchg
jle
inc
xchg
jmp
xchg
jno
pop
xor
pop
sbb
sbb
push
stos
cwtl
mov
add
js
in
xchg
dec
push
mov
pop
ficomps
pop
in
stos
cld
in
sub
pop
xor
pop
lds
fildll
sub
fimull
xchg
cmp
push
lahf
xchg
lret
jge
int
push
add
inc
bound
pop
sub
dec
sbb
test
dec
jne
pop
sub
loop
inc
filds
mov
int3
xchg
fdivs
flds
ds
xor
lea
mov
mov
lahf
pusha
sahf
imul
pusha
sbb
xor
out
and
sbb
hlt
hlt
push
sbb
pushf
dec
test
inc
cwtl
sahf
das
lret
lcall
fcmovnb
xchg
lea
dec
pop
sbbb
jg
sar
jge
mov
les
add
mov
push
pop
jmp
test
mov
fidivs
and
inc
xchg
bswap
jmp
fnsaves
sahf
stos
insb
cmpsl
pop
pop
add
mov
inc
mov
sti
inc
repnz
test
and
int3
fsubp
sbb
sbb
dec
adc
clc
addr16
test
ljmp
push
sarb
sub
incb
xchg
dec
data16
popa
mov
mov
jbe
rcll
not
mov
out
mov
push
mov
dec
sub
push
dec
sahf
cli
scas
pop
scas
test
leave
jp
mov
xor
cli
inc
jbe
repz
jg
sub
add
stos
xor
xchg
pop
jns
lods
lds
in
mov
cmp
sbb
in
lret
adc
idivl
enter
jp
int3
inc
push
and
arpl
iret
shll
cmp
sub
aam
mov
jne
sub
xor
cmp
movsb
push
stos
imul
and
xchg
mov
cmp
cld
out
ja
in
jmp
ss
dec
int
ficoml
adc
into
dec
mov
cli
mov
shlb
pop
and
inc
jp
int
sbb
push
or
add
mov
lret
stos
lcall
and
fs
pop
jae
jbe
leave
popf
lds
inc
inc
shl
sub
mov
mov
and
cmp
mov
push
pop
sbb
scas
lock
dec
scas
mov
lcall
movsl
loopne
bound
jo
aam
or
inc
in
repz
inc
xabort
insl
js
nop
xchg
call
mov
cltd
fsubr
test
push
ds
std
inc
sti
mov
jmp
mov
cmpsl
inc
sub
cmpsb
push
jmp
mov
cmp
xchg
sub
test
jnp
icebp
stos
call
test
pop
mov
test
int3
insl
in
nop
mov
je
fstps
xchg
shlb
xchg
out
aad
mov
or
lret
mov
cmpsb
fstpt
cmp
cmpsb
imul
js
jbe
adc
sbb
cli
std
out
push
add
out
cmp
add
fninit
inc
jge
or
add
icebp
pop
scas
pop
imul
mov
cmp
nop
clc
or
mov
adc
mov
dec
lcall
mov
mov
das
ret
push
dec
xor
outsl
xor
jo
movb
push
mov
adc
xor
loop
ficomps
pusha
rol
cmp
rcrl
pop
jo,pt
xor
adc
jbe
iret
in
push
lahf
push
call
mov
lock
in
dec
in
lret
iret
in
xchg
cmp
fcom
or
xchg
fwait
mov
decb
mov
in
fidivrs
xlat
sti
scas
addr16
fnstenv
mov
inc
pop
enter
in
sbb
aam
jge
hlt
mov
push
movsl
movsl
sub
jno
dec
dec
xor
dec
add
add
and
mov
sbb
mov
xchg
int
lret
scas
push
clc
jb
insb
fs
fsubs
mov
gs
nop
test
insl
or
sub
imul
cmpsb
or
dec
mov
sbb
adc
xor
fiadds
add
jmp
es
mov
lahf
cmp
outsb
inc
les
pop
mov
dec
push
dec
sbb
inc
dec
movsl
dec
xor
repnz
adc
push
outsl
inc
xor
lret
add
int
imul
inc
out
sub
cltd
fdivl
mov
arpl
clc
enter
mov
mov
pop
add
push
mov
lods
sbb
js
inc
mov
jle
adc
mov
push
jno
int
push
in
mov
std
repz
mov
insb
cwtl
aaa
pop
xor
ljmp
sub
std
jle
aas
ja
mov
mul
mov
jnp
loopne
idivl
sbb
mov
insb
pop
shlb
sbb
rcrb
push
or
mov
cmp
in
fstl
dec
ja
shlb
pop
daa
addr16
cli
cwtl
int
aaa
outsl
adc
test
insb
movsl
inc
in
lock
jle
and
xchg
in
stos
add
pop
insl
insl
mov
add
sbb
and
push
arpl
aaa
testl
pop
popa
lret
das
fwait
sti
push
outsb
mov
xchg
dec
adc
push
xchg
shlb
aaa
loope
dec
cmp
jae
leave
outsl
sti
outsl
xchg
xor
je
pop
sub
pusha
mov
add
outsl
ds
ss
jge
xor
loop
sbb
pop
add
aaa
dec
dec
mov
cwtl
pop
dec
pop
mov
sarb
adc
in
rolb
adc
xor
test
mov
mov
scas
mov
jo
out
jo
fimull
pop
insb
adc
sarl
sbb
mov
pop
pop
xchg
mov
cld
xchg
xor
jle
popf
sub
mov
xor
jg
sub
mulb
push
stos
adc
push
lcall
adc
mov
sub
xchg
ljmp
or
call
xor
mov
dec
push
and
sbb
rcr
test
cmp
sti
in
inc
testb
test
cmp
enter
adc
in
sti
add
shld
lds
loop
stos
aas
jg
addr16
inc
test
pop
cmovl
xor
cmpsl
dec
mov
inc
movsl
cmp
sarl
mov
xor
and
jle
jno
scas
or
add
push
cmp
out
xchg
imul
clc
mov
loopne
dec
call
and
add
movsb
sahf
sar
pop
scas
addr16
lea
mov
cmpsl
lods
ljmp
mov
or
outsb
jo
jle
scas
cltd
insb
das
xchg
data16
push
jl
adc
fisubrs
push
xchg
push
inc
ret
arpl
fsubrl
add
nop
jo
sbb
cmpsl
pop
pop
testb
pop
sbb
hlt
mov
or
fiadds
insl
add
mov
xchg
mov
cmp
inc
cs
xor
push
sbb
add
sbb
pop
iret
cld
insl
notl
in
xor
into
push
inc
jl
jmp
adc
repnz
mov
mov
adc
mov
mov
inc
and
push
pop
adc
and
add
mov
push
xchg
pop
data16
cmp
int
bound
movsl
mov
enter
xor
sub
mov
scas
dec
inc
inc
pop
adc
outsl
or
add
pop
and
lahf
add
mov
jl
jl
xchg
jno
pop
sarb
stos
scas
or
mov
xchg
popf
sub
or
icebp
jne
dec
negb
sbb
sarb
mov
mov
cmp
xor
adc
mov
and
or
imul
stos
cmp
xor
mov
push
outsl
inc
shr
loope
xorl
adc
stos
sbbl
fstpt
mov
mov
cli
stos
aaa
or
mov
push
jmp
jb
in
fmuls
xchg
stos
mov
rcrb
loopne
imul
ss
or
int
xchg
cmp
mov
arpl
and
add
mov
jno
bound
pop
and
loope
icebp
ja
rolb
lret
out
cmpsl
mov
sub
ds
fisubs
xor
lcall
cmp
inc
sub
data16
cmp
insb
pop
push
fnstcw
daa
xchg
ret
inc
xchg
xor
sub
mov
or
xchg
push
test
and
jmp
fwait
adc
xor
ss
mov
and
orl
je
ljmp
jae
jmp
cmpb
xlat
or
push
sbb
pop
add
xor
shll
dec
cmp
sub
pop
and
push
imul
insb
popa
in
mov
mov
or
ljmp
adc
push
aas
adc
adc
mov
add
mov
sbb
cmpsl
inc
lahf
cmp
xchg
sbb
call
test
bound
mov
mov
mov
mov
fucom
sbb
mov
ss
ss
and
loope
mov
popf
xor
mov
push
ror
das
gs
dec
pop
xchg
cmovae
iret
xchg
jne
imul
sahf
repnz
leave
ret
insb
push
xor
loopne
mov
cmc
or
daa
jbe
mov
repnz
das
xor
pop
pushf
push
aaa
inc
scas
je
dec
out
xor
push
inc
xchg
xchg
fwait
jle
mov
cld
mov
add
and
inc
aad
je
iret
adc
testl
dec
enter
cmp
xor
cmp
rolb
arpl
or
lea
push
adc
data16
or
test
xchg
cltd
pop
ret
or
cltd
mov
ss
imul
pop
mov
orb
in
popf
push
jge
jmp
or
fnstsw
and
fs
ja
and
adc
cmp
insl
jp
mov
mov
mov
shl
inc
pop
ds
pop
mov
ljmp
sbb
imul
fs
xchg
lds
and
aaa
push
nop
jbe
insl
shlb
clc
or
cli
mov
decl
or
je
addr16
cltd
xorb
pushf
and
and
aad
or
rclb
xchg
outsl
lods
js
xor
in
jnp
sub
xchg
xchg
cmp
and
and
mov
outsl
mov
cmp
sub
ss
sbb
cli
add
or
dec
inc
sbb
sbb
xor
cmpsb
cmp
dec
jb
xchg
sbb
mov
stc
imul
in
pop
das
jg
mov
fs
es
lock
ret
xchg
ds
out
cli
aam
mov
stos
rolb
cmc
mov
aam
enter
mov
adc
pusha
ret
lds
xor
pop
cmp
sub
enter
push
pop
loop
shll
xor
out
pop
jg
fld
xor
out
xorb
ret
mulb
push
pcmpeqd
xor
and
daa
and
or
jmp
or
mov
inc
cmp
add
push
nop
push
sbb
push
cmp
xor
jmp
cmpsl
daa
mov
jle
sbb
std
pop
hlt
cltd
xchg
in
lock
cmp
inc
pop
ljmp
adc
push
stos
fdivrs
lea
andb
jo
push
xchg
std
mov
outsb
incb
out
mov
cmp
dec
outsb
dec
inc
push
pop
leave
mov
mov
fisubrl
mov
fisubs
jecxz
cwtl
sub
xchg
pop
push
fstpl
cmpsb
xchg
dec
test
xchg
or
sub
fldl
outsb
sar
add
mov
dec
insb
cmpsb
les
xchg
jno
inc
mov
test
loopne
adc
sub
lock
xchg
jnp
push
xorl
add
inc
in
cmc
insb
lock
or
sbb
sub
mov
inc
lret
arpl
and
test
adc
mov
repz
rclb
es
nop
stos
adc
ficoms
pop
stc
cmp
in
lods
inc
test
xchg
jno
xchg
incb
or
addr16
lret
aaa
push
sbb
cmp
iret
fidivrl
enter
mov
pushf
gs
dec
push
out
sete
jg
xchg
ljmp
pop
mov
add
insb
or
repz
xor
or
movsl
fcomi
aad
xlat
push
xor
loope
mov
in
call
call
jl
push
adc
adc
cmpl
xchg
jo
aas
inc
inc
movl
add
xor
gs
loopne
sub
adc
xor
je
cli
lahf
pushf
jle
xor
pop
repnz
jp
sbb
or
mov
test
cmpsb
aas
mov
sbb
test
sub
pop
cld
mov
mov
mov
mov
xlat
icebp
adc
dec
das
jne
lcall
add
daa
repz
and
sbb
and
adc
mulb
push
jl
pop
es
imull
inc
mov
or
mov
xchg
fbstp
pop
mov
in
pusha
mov
shl
mov
or
mov
lret
ret
or
mov
cmp
fs
inc
out
std
ret
jecxz
movsb
stos
out
loopne
test
lods
cmp
push
mov
jp
pop
push
jle
adc
sbb
and
xchg
xor
mov
les
adc
pop
stos
push
loop
loope
int
movsl
stos
outsb
inc
mov
push
daa
subl
jae
imul
daa
ljmp
mov
outsl
cmp
sbb
xor
mov
testl
xchg
idivb
xorl
arpl
sub
mov
jge
enter
push
inc
in
adc
sahf
jno
mov
fs
lds
jmp
cmpsb
sub
das
rcrl
jno
mov
mov
jp
repz
xor
mov
out
scas
clc
imul
jl
dec
ljmp
lds
lods
idivb
adc
cmp
mov
and
sahf
jnp
ret
clc
int3
fisubrl
imul
out
scas
lret
push
wrmsr
mov
mov
clc
jecxz
mov
jecxz
push
push
or
cmp
jmp
jecxz
roll
and
mov
stc
popf
xchg
mov
xor
sub
jne
aam
xchg
std
sub
sub
jp
xchg
outsl
push
cmp
ficompl
xchg
jns
mov
jl
out
sbb
jle
stc
lea
sub
xlat
js
mov
vmovdqu
in
pop
dec
xchg
test
mov
adc
cmp
sti
and
fnstcw
sub
and
movsl
mov
icebp
ret
pop
xchg
dec
mov
cmp
xor
or
lea
out
jp
insb
nop
outsb
fadds
xchg
and
scas
rcll
ss
sarl
pop
adcb
mov
mov
jge
imul
xchg
mov
xor
xchg
push
sbb
jl
adc
cwtl
cmp
call
out
push
imul
aad
xchg
jle
scas
repnz
sub
repnz
sti
fwait
jo
imul
ds
shlb
xor
icebp
aam
arpl
lahf
adc
lds
push
cmp
adc
shlb
pop
pop
shlb
cmp
cmp
clc
sbb
movsl
xchg
pop
test
jge
mov
inc
mov
mov
jae
jbe
add
outsl
mov
inc
sbb
sub
dec
sub
push
popa
or
in
sub
fldt
push
arpl
xchg
lods
idivl
sub
add
aad
hlt
pop
jno
ljmp
mov
inc
and
push
fstps
loop
push
pusha
mov
xor
pop
or
mov
gs
push
inc
pop
mov
lods
inc
sbb
das
xchg
stos
inc
enter
add
push
rorb
cld
push
dec
stos
adcl
mov
sbb
test
mov
add
inc
insb
outsl
popa
cmp
dec
jmp
xchg
lahf
mov
mov
js
std
pop
xchg
push
pushf
dec
mov
adc
pop
xchg
js
stos
push
mov
push
ficoml
pushf
sub
inc
insl
inc
cli
xorl
sbb
and
insl
inc
push
int3
das
loope
jge
xchg
in
cmpsb
enter
shrb
out
dec
xchg
rclb
pop
pop
cmpsb
sbb
loopne
sub
mov
gs
mov
repz
sbbl
cmp
movsl
jnp
stc
adc
push
mov
push
ds
outsb
jle
xchg
cmpl
mov
aaa
loope
jne
cmc
imul
push
imull
pop
jno
jae
jmp
mov
jb
jg
push
mov
sub
movsb
sbb
outsb
aam
add
aam
inc
fistpl
cmp
lods
dec
fs
out
pop
or
or
fstl
or
iret
lds
xchg
nop
inc
imul
arpl
lea
or
and
int
xor
aaa
sbb
ret
dec
jmp
xor
sbb
push
sub
aas
ds
in
mov
shlb
subb
test
in
inc
popa
out
test
pop
jb
inc
mov
loope
test
fs
iret
and
popa
into
cmp
mov
xchg
std
inc
sbb
push
xchg
inc
jge
push
popl
cmp
bnd
pop
cmpsl
jb
mov
push
xchg
icebp
arpl
pop
test
push
or
nop
adc
sti
fiaddl
scas
mov
push
daa
sub
sub
add
mov
lret
pop
jge
pop
cld
scas
pop
aam
jae
aam
adc
push
jg
jo
cld
out
sahf
int
mov
std
inc
and
push
jo
and
fsub
cs
mov
sbb
and
cmp
in
scas
clc
movsb
inc
scas
dec
jl
and
stc
data16
rclb
cmp
xlat
fiaddl
cli
dec
adc
sahf
rcrl
inc
in
mov
imul
pop
test
iret
mov
and
or
jae
inc
cmp
xchg
insb
jns
outsl
push
adc
and
test
sub
xor
enter
dec
push
jp
sbb
outsl
add
jno
fsubl
mov
push
cmp
lods
jmp
lcall
into
jl
add
fsubr
in
pop
cmpsb
loopne
cmp
je
lea
stos
push
xchg
pop
inc
inc
cmpsl
cltd
negb
aam
xlat
or
into
sub
push
and
in
movsl
xor
clc
shlb
das
ret
cmp
loopne
bound
fstl
ds
xor
imul
mov
add
std
inc
inc
sahf
sub
ret
out
lods
pop
inc
pop
mov
ja
rclb
movsl
and
popa
cmp
xor
sub
mov
fsts
fs
jno
pop
mov
dec
pop
mov
iret
mov
subb
pop
les
outsb
iret
dec
jne
fsts
xchg
shll
pop
mov
sub
dec
mov
adc
imull
mov
mov
ret
test
push
js
sti
sarl
ds
xlat
push
out
call
push
jo
sub
fwait
or
lods
or
sub
bound
mov
hlt
xchg
jle
dec
stc
mov
pop
xchg
jle
dec
jns
sbb
mov
fistpl
movsb
xor
out
nop
cmp
push
js
ljmp
push
xchg
push
push
fiadds
nop
push
pop
pushl
jns
shll
shll
and
lods
outsl
xchg
xor
mov
push
adc
mov
push
shlb
into
push
xchg
int3
fiaddl
ljmp
push
ljmp
pop
arpl
cld
add
stos
adc
je
and
fistl
orl
jnp
inc
add
rol
mov
clc
cmp
les
and
or
pop
in
push
in
lret
jnp
xchg
pop
stos
test
pop
jl
repnz
cmp
xchg
stc
jo
mov
fucomp
xor
push
decb
in
push
sahf
andb
dec
push
dec
cmp
adc
xor
push
imul
ret
push
es
and
push
sbb
das
pushf
mov
cld
mov
mov
inc
fs
adc
in
sbb
dec
mov
loopne
hlt
jb
out
popa
and
js
pushf
or
enter
lret
rcl
fiaddl
add
sub
and
jns
xchg
stc
lret
lcall
pop
mov
xstore-rng
cmpsl
add
add
sbb
xchg
rolb
icebp
pop
call
lds
fcmovnu
push
lahf
adc
cmp
out
pop
mov
mov
lahf
mov
pop
dec
push
das
iret
aam
sub
cmp
adc
xchg
or
push
xor
test
adc
add
jne
cli
das
cmpsl
andl
inc
mov
in
mov
mov
sub
pop
push
ljmp
shrl
pushf
sbb
mov
pop
and
dec
test
push
rcr
lods
mov
lods
addr16
jmp
rcrl
mov
pop
adc
out
clc
test
sub
jp
fs
outsl
xchg
jecxz
dec
addb
filds
cmc
lock
fcmovnu
not
mov
fxam
out
stc
aaa
or
int3
mov
lret
cvttps2pi
das
xchg
bound
xor
in
iret
outsb
popa
sbb
mov
xor
fists
outsb
cmp
jne
out
dec
leave
adc
int3
jg
add
lahf
data16
andl
in
inc
movsl
or
mov
adc
push
xchg
mov
divl
dec
movsl
mov
ds
and
cmp
sub
push
push
fldl
mov
mov
and
lods
xchg
xchg
iret
lcall
and
mov
jo
loope
stc
jo
fnstsw
rcll
adc
mov
rcrb
out
jb
pop
rsqrtps
cmc
aam
sbb
or
push
mov
cmpb
sub
add
call
xor
insl
enter
fidivrs
push
test
aad
mov
fbstp
aam
mov
jae
lds
sbb
sbb
mov
or
fs
cli
daa
test
push
sti
push
jne
outsb
mov
das
faddp
rclb
sub
inc
mov
jns
mov
add
and
jp
jl
adc
pop
popa
lret
das
sbb
pop
outsl
mov
inc
push
xchg
setne
mov
jecxz
and
aam
push
and
xor
rcl
add
lods
rorl
loope
stc
movsl
pop
pop
push
xor
mov
clc
movsl
sbb
jmp
mov
xchg
in
jns
push
cmp
into
sub
pop
dec
orb
jge
inc
cwtl
mov
push
adc
add
lods
mov
mov
mov
jg
ds
mov
js
jo
xchg
mov
push
add
pushf
testl
out
test
pop
lret
fs
dec
sub
and
lock
sbb
inc
pop
mov
add
mov
js
ljmp
mov
xorb
imul
daa
fidivrs
es
sbb
aam
xor
mull
scas
out
xchg
jmp
cmp
jle
push
add
cmp
cmp
push
inc
icebp
xlat
cmp
dec
inc
push
and
imul
imul
icebp
mov
mov
leave
testb
xchg
lds
in
sbb
push
mov
sahf
insb
bound
movl
cmp
xor
pop
int
sbb
gs
scas
fnsave
ss
mov
outsl
popa
bound
addr16
jbe
push
cmpsl
subb
sbb
dec
dec
push
ret
mov
fstl
cmpsl
push
lods
mov
xor
imul
adc
push
cmp
sbb
pop
pop
pop
lret
or
rclb
les
clc
and
sbb
adc
xchg
movsl
stos
xor
inc
mov
out
mov
stos
push
repnz
dec
stos
in
loope
sub
jmp
mov
in
xchg
jl
push
push
mov
call
push
outsb
adc
scas
rcrb
popa
mov
out
or
ja
jno
sub
jno
inc
cs
and
dec
aaa
dec
push
cld
xchg
stc
push
mov
xchg
jle
clc
es
popf
pushf
sbb
mov
jg
mov
pop
mov
mov
bound
lahf
outsl
in
inc
jge
xor
dec
adc
enter
xchg
push
and
sbbl
shlb
dec
outsb
push
or
cmp
mov
jle
mov
add
cmp
adc
insl
jl
cmpsl
sub
jp
add
jae
fistps
mov
movsb
jl
mov
sahf
fcomps
dec
pop
out
cli
dec
clc
nop
les
fistpl
std
fwait
or
stos
sub
mov
sub
stc
int
in
fmull
push
addr16
cmp
cmp
stos
pop
fs
jns
mov
adc
jns
and
fisttpll
mov
pop
push
cwtl
out
mov
sahf
js
sub
mov
sbb
jecxz
lock
insl
and
stc
cmc
add
add
roll
pop
dec
pop
mov
or
inc
xor
or
mov
outsl
mov
mov
scas
sub
or
dec
into
out
scas
cld
jne
add
test
out
add
shrb
dec
test
arpl
sub
xchg
lea
push
mov
fsts
or
imul
mov
mov
in
inc
dec
inc
movsb
insb
adc
xrelease
sbbl
out
sub
jmp
cmp
add
stos
repz
js
sbb
rorb
clc
mov
test
push
push
loopne
fcmovbe
inc
insl
jnp
scas
pop
jae
xchg
xchg
xor
jl
adc
pop
add
je
sbb
jne
clc
dec
ds
in
adc
test
insb
mov
jbe
ret
imul
dec
into
js
stos
sti
xchg
push
mov
lcall
xor
inc
test
pop
pushl
sub
addr16
dec
sub
jge
fsubrs
push
xor
push
adc
jp
inc
sub
or
fists
movsl
ds
dec
or
lds
in
cmp
popa
jb
mov
mov
adc
stos
sbb
push
inc
je
out
mov
ljmp
cli
and
jae
ljmp
mov
mov
adc
lea
sub
mov
mov
push
cmp
adc
cmp
mov
adc
stos
icebp
js
inc
push
mov
push
xchg
mov
insb
test
mov
ret
mov
js
iret
into
jge
mov
lcall
cmp
es
mov
addb
stc
aas
or
andl
scas
aaa
into
inc
aad
test
std
cmp
enter
mov
iret
stc
into
dec
ss
sub
sbb
mov
xchg
and
push
mov
testb
mov
daa
daa
mov
xchg
push
xlat
xor
lds
adc
ja
jecxz
dec
jp
mov
outsl
repz
mov
je
push
fdivrs
subl
fsubs
in
mov
fisubl
out
inc
into
push
and
cmp
lea
movsl
xlat
add
push
in
push
cmpsb
pop
out
push
filds
or
and
xor
arpl
xchg
fwait
loope
rorb
cmpsl
test
ret
loope
std
in
cmp
xchg
ss
out
cmp
leave
mov
fwait
push
jbe
ja
xlat
push
pop
push
xchg
in
cmp
mov
rclb
mov
popl
rolb
push
and
push
mov
pop
ret
pop
cmpl
addr16
loopne
daa
jecxz
dec
cld
inc
lret
les
repnz
mov
jmp
in
xor
out
int
ret
inc
jg
mov
jmp
ljmp
dec
dec
adc
loope
push
sbb
andl
nop
jmp
push
lret
outsb
dec
sbb
push
mov
sub
pop
push
or
inc
add
arpl
mov
rcrl
lods
lret
push
cmp
enter
pop
stos
shl
add
and
imulb
movsl
sbb
js
shlb
movsb
cmpb
inc
mov
mov
daa
loopne
lock
cmpsl
scas
adc
jno
cld
or
int
pop
aas
rcll
ljmp
stos
adc
sbb
mov
sarb
add
add
adcl
insb
lcall
mov
xchg
insl
sahf
cmc
outsl
xchg
cmp
sbb
fbstp
test
aaa
daa
mov
dec
shll
lods
fwait
and
sahf
repnz
xor
fsubrs
movsl
cmp
icebp
out
sub
cltd
add
movsb
fdivrs
cmc
loope
xchg
mov
inc
push
pop
inc
sbb
movb
jle
jmp
adc
insl
shll
cs
mov
outsl
mov
mov
stos
out
add
push
xchg
in
jb
lret
stos
xor
xchg
mov
loop
outsb
loopne
insl
out
and
into
mov
or
mov
jle
and
xor
inc
arpl
movsb
inc
cmp
mov
inc
sbb
sbb
sahf
ficompl
cli
fmull
dec
mov
ret
data16
mov
cmpsl
and
lock
repnz
xorl
lods
push
fwait
inc
cmc
mov
repz
cmp
pop
les
pop
cmp
mov
rorb
mov
dec
push
mov
xchg
inc
sbb
cmc
sbb
orb
and
or
cmp
inc
mov
mov
add
push
fildll
mov
add
pop
test
xchg
addr16
les
aaa
cmc
push
scas
push
push
aaa
push
cmp
fldt
or
adc
stc
mov
out
ds
mov
inc
pop
push
in
lods
ficomps
xor
adc
rcll
mov
jp
scas
and
cli
divl
lret
inc
das
out
xchg
hlt
mov
sub
fxrstor
js
sahf
jge
icebp
dec
xor
shl
sbb
or
lods
inc
lea
mov
ss
jg
ror
gs
inc
and
loop
push
lret
aam
lock
jae
stos
inc
cmp
dec
or
push
adc
mov
mov
pop
aas
lret
sbb
xchg
shlb
cmp
dec
sub
hlt
xor
daa
scas
cmpsb
mov
sub
ds
std
push
sbb
mov
cwtl
jl
mov
inc
movsl
mov
scas
loop
mov
mov
jns
pop
adc
adc
adc
repz
imul
jge
add
or
jns
inc
loopne
or
jne
xorb
mov
jae
mov
gs
cmpsb
pushf
push
notl
adc
cmpsb
jl
inc
sbb
xor
sub
pop
popf
cmpsl
out
pop
ljmp
mov
int3
mov
inc
xchg
mov
in
ljmp
push
sub
xchg
filds
bound
push
movsb
inc
mov
jne
cld
lret
bound
sahf
jle
mov
mov
lods
stos
aad
sbb
sub
inc
pop
or
jo
dec
sub
add
es
sbb
inc
or
push
push
pusha
adc
and
vcmppd
mov
lods
insl
repz
inc
cmp
ret
outsb
sbb
sub
xchg
pop
and
lock
and
flds
arpl
jl
in
mov
jmp
test
mov
jge
sahf
imul
xorb
jo
xchg
mov
cwtl
int
jnp
lahf
pop
pop
lods
push
and
mov
pop
dec
push
decl
inc
mov
adc
pop
dec
sub
bnd
cwtl
clc
cmp
adc
and
push
decl
push
mov
scas
dec
mov
mov
js
rorb
dec
aas
push
mov
push
sbb
aaa
mov
out
push
inc
movsl
xchg
fidivs
repnz
mov
clc
stos
stos
hlt
inc
pop
adc
inc
lret
mov
add
push
add
dec
fs
repz
cmp
add
adc
mov
mov
ss
xor
js
stc
iret
ret
xor
xor
testb
ud2
cmc
shll
jb
sahf
loop
or
inc
push
sbb
jae
icebp
mov
push
movsb
and
jns
mov
add
sahf
pop
adc
cmp
jo
or
les
adc
mov
push
cmpsl
adc
mov
addr16
xchg
cld
sar
inc
sbb
daa
adc
das
or
pop
ja
xchg
fisubrl
ljmp
std
inc
or
cmp
inc
into
push
scas
rcll
inc
outsb
adc
je
lds
push
clc
sahf
xor
and
push
aas
xchg
je
xchg
cmp
out
ret
push
std
push
push
mulb
mov
out
lods
repz
lock
pop
imul
jmp
pop
lret
dec
push
js
leave
clc
bound
mov
xchg
cmpsl
xor
out
loopne
mov
int3
sbbl
add
sbb
or
add
cmpsl
cmp
or
lock
stos
imul
adc
jle
sbb
xor
jo
pop
fdiv
jb
mov
dec
pop
leave
ds
push
pop
add
rdmsr
add
pop
cs
lea
in
inc
and
inc
push
xlat
or
and
dec
mov
cmp
adc
rorl
inc
add
scas
imul
mov
je
repz
mov
cmp
and
fists
jne
test
aad
in
xchg
imul
jbe
xor
sbb
mov
push
mov
sub
fldl
ret
imul
jnp
push
jbe
mov
mov
sbb
push
xchg
call
fmuls
cld
mov
inc
mov
jns
lds
inc
adc
fnsave
inc
pop
stos
imul
notb
aad
xchg
testb
imul
jge
mov
push
mov
movsl
imul
in
rcll
and
notl
fmull
and
pushf
and
jnp
add
mov
das
cmp
addr16
setbe
daa
fdivrl
push
ret
and
lret
inc
push
push
mov
incb
fnstcw
or
cmc
jmp
xchg
and
adc
or
icebp
adc
xor
mov
mov
lods
pop
add
mov
adc
pop
xchg
lock
pushf
bound
lcall
addb
call
or
iret
xor
cmc
cmp
psrld
adc
xorb
add
ret
std
insb
test
pop
pop
lock
mov
in
addb
lahf
sub
mov
out
xlat
adc
dec
xchg
xor
mov
mov
xor
mov
mov
sarl
jne
sbb
pop
or
test
sub
or
cmp
push
mov
fisttpl
mov
movsb
cmpsl
std
jmp
jbe
cltd
lcall
jae
jle
sbb
and
fnstsw
dec
std
push
pushf
into
mov
out
cmp
jl
mov
incl
and
movsb
pop
decl
cmpsl
das
xor
iret
out
xchg
movswl
ss
mov
add
shll
cs
sbb
sbb
cli
bnd
adc
movsl
shlb
insb
mov
out
cltd
inc
cmc
insb
and
adc
jb
add
lcall
test
cmp
mov
out
cli
inc
or
test
dec
lret
mov
stos
loope
xsaveopt
cmp
aad
movsb
lods
pop
cmp
push
pop
push
and
xor
fistl
inc
ds
pusha
js
divb
push
sub
icebp
daa
ss
push
lret
or
mov
lods
push
pop
mov
sbb
dec
std
jle
ss
mov
fidivrl
mov
add
xchg
add
into
lahf
loop
push
jecxz
mov
mov
pop
ljmp
mov
dec
fstpt
pop
out
sbb
inc
dec
loope
push
js
mov
rorb
mov
jo
cltd
cmc
jae
cli
sbb
or
insl
gs
cmp
int
jns
loope
push
sub
repz
icebp
fimuls
dec
scas
popa
mov
int3
loop
aaa
ret
adc
in
push
lret
jae
gs
in
ret
sub
mov
in
xor
mov
jmp
int3
movsb
mov
aam
fidivrs
pop
jl
pop
cmpsb
imul
inc
iret
es
out
xor
in
movsb
sti
xlat
addr16
test
int3
lret
jae
lds
inc
cmp
mov
movsl
xchg
shll
repnz
xor
jno
pop
push
in
mov
xor
les
dec
fwait
cmp
add
aas
xlat
cmpsl
scas
out
out
addr16
ror
cmp
sbb
cmc
mov
shlb
pusha
lods
lret
hlt
dec
push
cmp
sub
fadds
xchg
pop
mov
mov
jp
es
adc
mov
mov
xor
push
sub
xchg
scas
cmp
push
inc
mov
insl
or
stc
movsb
xor
or
out
mov
mov
mov
nop
aad
lret
cmc
std
test
jne
jg
repz
cmp
sbb
outsb
mov
movsb
jecxz
jp
out
jg
and
mov
test
jg
sub
stos
push
sbb
aaa
iret
sub
fisttpl
insb
test
aas
push
les
imul
stc
gs
data16
cld
xorl
cmc
cmp
mov
cmp
mov
inc
and
cmp
clc
in
mov
push
jle
inc
lahf
and
cltd
dec
xchg
pop
inc
cmpsb
and
mov
xor
leave
adcb
and
xlat
out
xor
insl
sub
movb
mov
inc
aam
pop
inc
mov
mov
fstpt
pop
inc
mov
mov
mov
repz
mov
pop
xchg
adcb
mov
push
jb
pusha
aam
xor
rorb
sub
ret
cmpsb
mov
stos
inc
inc
cmp
dec
orb
enter
lods
xchg
test
in
xchg
jbe
outsb
jb
add
cmp
gs
inc
shl
sub
test
loope
pop
sbb
rcll
push
pop
fstpl
sbb
inc
and
cmc
xor
xor
cmp
data16
mov
insl
loopne
pop
leave
in
inc
fnstsw
bound
xchg
sbb
gs
loope
sbb
test
xor
insl
add
cmpsl
sbb
sub
adc
jo
jp
xor
push
add
bound
inc
or
push
mov
mov
mov
or
jnp
cwtl
mov
add
cld
or
add
lret
fidivs
icebp
clc
jns
mov
das
test
inc
sbb
aam
xor
dec
aaa
mov
ljmp
fstl
inc
xchg
clc
out
stos
add
arpl
mov
jne
popa
testb
scas
fucomp
sbb
fsubl
jae
add
cmp
xor
cwtl
hlt
or
jp
insl
das
int
dec
pop
adc
data16
clc
and
mov
cs
pop
mov
mov
lea
repnz
pop
jecxz
or
mov
fcmovnb
clc
dec
mov
ret
jnp
cli
mov
out
adc
lods
xor
jmp
pushf
mov
inc
stc
mov
stos
icebp
lret
clc
adc
aam
push
adc
fld
cmpsb
dec
pop
dec
into
rcrb
mov
sarb
stos
shlb
jecxz
xor
fimuls
es
mov
pop
or
and
dec
into
jne
jl
shr
out
repz
mov
and
xor
xchg
imul
inc
push
lds
dec
push
jle
scas
jne
mov
mov
cmp
aam
pop
jns
jecxz
jecxz,pt
jle
gs
test
insl
mov
push
ss
repnz
pushl
aad
dec
push
push
sbb
mov
inc
fisubs
ss
lods
sbb
imul
or
and
iret
xchg
xchg
dec
mov
lret
rolb
xor
loope
mov
and
pop
inc
fbstp
adc
xchg
cmpb
jl
stc
xor
adc
sahf
push
sbb
aam
mov
jne
jg
loop
lds
insb
sub
pushf
imul
push
icebp
je
aad
mov
jle
int3
pusha
popa
mov
imul
fwait
ss
jo
pop
test
cmc
lret
aaa
dec
shl
outsb
xchg
xchg
icebp
push
movsl
ret
inc
enter
movsb
inc
ret
mov
cmpsl
adc
push
cmp
movsl
inc
xchg
fs
icebp
xchg
or
push
cmp
cmpsb
mov
fldt
sbb
mov
push
adc
test
fildl
mov
or
pushf
inc
add
hlt
mov
mov
je
and
out
and
mov
sbb
les
or
push
hlt
jb
sbb
xor
xchg
mov
mov
push
dec
ss
fisubs
pop
dec
stos
lods
mov
mov
adcb
adc
fwait
cld
scas
movsb
cmp
cmp
popf
xor
xor
jnp
sub
into
es
cli
push
shl
xor
mov
addb
xchg
adc
nop
adc
add
sub
cmp
jne
mov
inc
lds
decb
fwait
out
mov
sbb
in
mov
outsb
push
xor
lret
mov
fidivrl
adc
inc
inc
pop
sbb
mov
stc
push
lret
push
pop
ss
sbb
jmp
stos
flds
ret
sbb
enter
dec
in
sub
cmpsl
pop
jp
pop
mov
arpl
dec
lret
aas
outsb
loopne
cmp
sub
in
dec
xlat
add
xchg
and
scas
fmuls
lods
mov
dec
push
mov
jle
fsubrs
jae
and
rcrb
push
stos
sarb
fidivrs
mov
dec
push
out
shrl
dec
filds
xchg
frstor
es
hlt
pop
xlat
and
out
inc
test
and
mov
or
lret
fstps
pop
hlt
cmp
fcmovbe
adc
shrb
add
lods
dec
int3
jg
shll
push
mov
lcall
ret
lock
xchg
push
and
shrl
adc
int
inc
aad
xchg
stos
ss
mov
sbb
lret
or
in
sub
sbb
ss
jne
cltd
int
nop
test
jae
mov
or
add
xor
sbb
testb
mov
movsb
jg
fidivs
add
out
les
inc
adc
push
out
test
int
out
lds
xor
insl
pop
sbb
push
push
inc
dec
sbb
jnp
jb
push
fwait
ds
cmp
ss
aas
mov
and
jmp
sbb
push
dec
jnp
jle
movsl
pusha
xlat
jbe
cwtl
sbb
inc
lods
mov
lock
out
jne
adcb
xor
mov
in
fisubrs
fadds
adc
pop
and
and
mov
inc
jge
push
imul
jl
dec
sub
cmp
cltd
xchg
in
jb
lcall
decl
mov
inc
ds
aam
xor
and
xor
jbe
and
pop
cmpl
sahf
jg
in
mov
out
push
mov
gs
pop
sarl
mov
insb
fisttps
es
out
fildl
and
jns
lods
movsb
mov
std
xchg
sbb
frstor
mov
sub
mov
jecxz
loopne
iret
sbb
mov
jne
jns
push
dec
adc
mov
loop
add
bound
idivb
popf
out
push
imull
enter
lds
xchg
aaa
in
lret
mov
lods
push
cmp
lahf
xchg
mov
push
sub
xchg
pusha
xlat
push
ljmp
or
mov
push
xchg
hlt
sbb
jno
pop
cmpsb
int3
pushf
out
pop
push
adc
or
movsl
xlat
cmp
daa
jl
xor
fdivrp
iret
pushf
mov
in
fs
xor
dec
gs
pop
dec
sub
stos
arpl
nop
in
sub
fiaddl
aas
int
push
enter
mov
ja
cmp
dec
das
aam
aaa
test
lret
inc
pop
shlb
xlat
lahf
test
or
fnstenv
push
cli
add
jnp
insl
imul
mov
andl
in
imulb
sar
or
xchg
jo
mov
cmp
sbb
in
dec
ja
insl
and
insb
xchg
jg
lcall
xchg
add
rcl
inc
xor
std
lock
movsl
call
dec
pop
fnstcw
xor
xchg
inc
push
pop
add
dec
adc
cmc
cwtl
mov
jns
xor
cmp
pushf
cmp
jb
aas
arpl
lcall
cltd
movsb
lcall
sbb
or
and
cmp
push
scas
add
or
cmp
cmp
or
inc
mov
in
cmp
xor
fs
cmp
mov
loop
das
jecxz
aas
jmp
roll
sub
pop
ds
dec
mov
jne
popa
and
mov
xchg
xchg
mov
mov
fcmovnu
jns
xlat
cmpsb
daa
gs
or
lea
arpl
int3
aas
lahf
mov
sbbl
pop
push
movsb
xchg
push
es
inc
inc
cld
test
mov
or
cld
call
push
mov
rcrb
lods
push
mov
jge
xor
dec
hlt
inc
pop
ljmp
scas
adc
movsl
movsl
push
fistps
add
jnp
jp
fs
std
adc
mov
mov
sarl
popa
test
out
test
jecxz
pop
in
popa
jmp
jns
mov
xor
scas
int
cltd
int3
aaa
mov
arpl
imul
xchg
movsl
mov
arpl
push
int
imul
adc
inc
cmp
repz
jg
aad
ret
jns
iret
in
rcrl
inc
xor
rep
ja
daa
or
mov
sub
dec
fwait
jge
mov
lret
mov
cmp
mov
cmc
ljmp
inc
dec
jnp
inc
dec
and
pop
adc
sbb
cld
or
scas
xchg
or
mov
andb
test
test
add
out
sbb
rorl
push
nop
push
sarl
push
ret
sahf
mov
push
imul
dec
mov
les
repz
mov
add
je
icebp
sbbl
push
inc
mov
in
cmp
lods
cmp
jmp
jae
stc
sbb
rcll
pop
xor
push
aaa
mov
out
or
adc
popa
push
and
xor
mov
out
sbb
cmp
daa
mov
jg
pop
pop
xor
xchg
mov
rcr
dec
push
add
mov
jae
and
insl
mov
xlat
imul
ds
fadd
or
cmpsb
add
jns
fidivrl
pop
test
mov
dec
rorb
sahf
aad
stc
movsb
cmp
push
xchg
mov
xchg
movb
push
dec
gs
sbb
adc
add
lret
mov
or
hlt
push
jne
inc
je
add
inc
cli
repz
fmull
jl
sbb
and
outsb
scas
mov
mov
dec
and
pop
jp
fwait
xor
ret
hlt
and
xchg
mov
adc
js
fxch
xor
clc
dec
adc
push
insl
or
push
call
mov
clc
imul
outsb
aaa
rcll
xor
adc
mov
jnp
mov
es
jecxz
add
push
pop
jno
cmp
outsb
lcall
or
fildl
js
mov
add
push
out
bound
jle
cmp
das
je
dec
dec
xchg
lret
pop
rcrl
mov
mov
fists
adc
out
cs
aam
push
jne
xchg
jae
inc
pop
mov
add
and
dec
clc
mov
push
cmpsb
in
adc
xor
in
sub
jmp
lock
shll
rcll
add
lcall
inc
mov
sbb
or
loopne
lock
lea
pop
and
inc
dec
sub
mov
jecxz
xchg
mov
or
cmp
jle
jmp
cmp
dec
loopne
inc
and
pop
adc
push
imul
jmp
or
ret
sub
cmp
mov
pop
flds
add
sub
jge
sbb
and
and
ss
mov
lods
push
enter
ja
idiv
jmp
jmp
outsl
cmpsb
sub
jnp
std
enter
ja
push
daa
pop
cmp
jge
cmp
orb
sbb
mov
adc
sbb
push
push
mov
and
in
ret
push
cmpsb
sahf
outsl
ret
push
mov
outsb
and
mov
mov
sbb
cmpsb
and
daa
xchg
inc
loopne
es
sub
loopne
rolb
je
add
cwtl
or
push
iret
add
repz
adc
repnz
xor
cmp
xchg
pop
shlb
mov
ficoms
or
sbb
dec
clc
rclb
test
mov
outsl
sti
pushaw
mov
andl
cmp
js
pop
inc
or
inc
mov
mov
xlat
mov
mov
mov
add
xchg
int
rcl
push
jmp
and
adc
sbb
in
sti
cmc
scas
inc
stc
sahf
and
cltd
cmc
or
dec
loop
pop
adc
sahf
sbb
pop
in
shrb
lods
jno
sub
jns
jne
imull
add
fldenv
dec
pop
xor
push
jae
in
jge
mov
and
inc
mov
mov
or
decb
test
inc
sbb
into
je
int3
in
fildl
mov
pop
adc
sarl
filds
jns
mov
fidivrs
test
clc
hlt
ret
or
int3
push
xor
sti
data16
lret
sahf
decl
cli
stc
test
xchg
sahf
adc
and
add
lods
std
test
out
addl
movsb
inc
fwait
loop
std
mov
out
sbb
in
cmp
pop
clc
add
out
pop
stc
adc
adc
add
push
cmp
sbb
test
mov
cmp
pop
push
cmc
cltd
test
cmp
or
add
in
pop
ja
out
fiaddl
lcall
inc
sub
push
jecxz
add
dec
push
leave
test
in
cs
fcoml
adc
js
flds
dec
int3
pop
fistl
stc
mov
movsb
xchg
push
mov
outsl
inc
ds
xor
outsl
pop
roll
mov
push
ljmp
test
sbb
adc
int
pop
aas
lods
int
rclb
mov
pop
sti
pop
and
int
fwait
out
push
movb
lods
test
jb
out
mov
scas
adc
flds
popa
inc
cltd
mov
xchg
ja
jne
mov
pop
cmc
or
in
or
loopne
push
in
push
cmpsl
lcall
xor
lahf
mov
push
aam
cmp
pusha
daa
sti
and
jge
dec
clc
pop
lock
adc
cmp
idiv
arpl
sbb
mov
inc
jge
and
pop
scas
sbb
stc
xchg
in
adc
mov
pop
lahf
test
jnp
adc
mulb
out
inc
push
fwait
loop
lidtl
jno
or
adc
add
adc
push
in
insl
rcll
adc
add
and
repz
fyl2xp1
jb
hlt
adc
sub
adc
or
into
or
inc
mov
subb
jo
xchg
or
push
notb
dec
mov
aad
mov
lock
mov
enter
ret
adc
fistpl
movsb
aad
stos
inc
xchg
jae
mov
lret
adc
and
cmp
mov
das
cmpsl
push
mov
mov
andb
xlat
add
pop
sarb
in
pusha
bound
mov
cltd
adc
jg
or
mov
fstl
repnz
mov
pop
in
xor
jp
out
dec
loop
cmp
cmc
shrl
fdivrl
test
movl
mov
stc
jmp
hlt
add
push
repz
es
in
leave
add
dec
aad
or
mov
ja
inc
andnps
iret
jg
mov
test
sbb
cmp
repnz
stos
cltd
cpuid
stos
jbe
ret
sti
lret
push
xchg
jmp
or
inc
dec
push
lods
pop
xchg
movsl
sti
mov
jmp
adc
sub
adc
hlt
pop
dec
jp
pop
and
mov
push
cwtl
mov
or
xchg
cld
iret
mov
repnz
mov
mov
cltd
hlt
mov
pop
xor
xchg
inc
push
xchg
mov
int3
cmpsb
mov
add
int3
mov
mov
inc
cwtl
mov
mov
and
cmc
test
rcr
in
xor
mov
lock
mov
xchg
pop
and
loopne
mov
jl
ret
mov
into
cwtl
jg
push
sub
dec
out
mov
sub
stos
mov
sub
mov
push
addr16
in
pop
add
jp
add
push
xchg
inc
mov
aaa
xor
sbb
pop
and
xchg
mov
push
and
sarl
push
out
jge
ljmp
mov
sub
mov
stos
imull
xchg
sbb
fnstsw
ficoms
sub
inc
and
je
rorb
and
fdivl
mov
and
and
inc
pop
inc
lahf
xchg
test
jmp
push
stc
push
aad
mov
mov
push
test
add
sub
mov
data16
stos
rclb
sub
xlat
daa
mov
imul
adc
in
test
adc
sub
imul
test
jbe
leave
loop
add
add
call
jae
aad
aam
pop
in
and
ret
sbb
ljmp
dec
daa
pop
mov
mov
jne
outsl
mov
loop
loopne
dec
shll
dec
stc
mov
pop
arpl
imul
adc
push
pop
scas
repz
dec
push
loope
repnz
bound
in
mov
xchg
imull
inc
sbb
push
insl
icebp
add
divb
jle
les
jo
xor
icebp
stos
mov
icebp
enter
add
insl
jb
xor
sub
loope
or
sbb
jo
popa
repnz
into
ret
mov
mov
mov
loop
mov
xchg
sub
popf
xchg
mov
and
lock
push
mov
cmp
sub
lret
ret
stos
cmpsl
in
jae
xor
loop
pop
or
push
pusha
mov
add
push
jle
dec
js
pop
jge
push
nop
imul
add
cltd
mov
sti
xchg
xor
call
fsubp
jp
sahf
push
or
add
sub
mov
adc
xchg
iret
push
xchg
mov
xchg
cli
jmp
jle
push
adc
clc
add
xchg
cli
jg
adcb
add
pop
stos
jl
insl
jns
scas
scas
push
jmp
pop
popa
or
pop
jo
adc
icebp
cmp
fbstp
lea
enter
lahf
inc
sarl
pop
add
jbe
add
faddl
ret
scas
bound
cmpsl
inc
call
aam
push
mov
jae
pushf
inc
mov
or
rcrl
xchg
xor
sbb
mov
sarb
mov
push
out
jmp
cmp
cmpsl
aaa
and
push
inc
daa
mov
daa
inc
adc
cmp
xchg
mov
mov
cmc
mov
xchg
fisubl
cmp
shll
jbe,pn
sub
repnz
ss
pop
sarl
inc
out
int3
fnstcw
fidivrl
sti
jo
cmp
push
mov
push
in
cs
arpl
and
repnz
fs
add
fsubl
cmp
mov
mov
sub
in
ret
jl
dec
inc
cmp
cmc
aam
mov
in
jno
ret
iret
push
jnp
popf
mov
mov
cmp
add
repnz
or
mov
pop
xor
out
mov
or
sub
sub
rcr
push
pushf
xchg
iret
lds
push
adc
xor
xor
sbb
ljmp
cltd
hlt
lcall
sti
out
roll
nopl
cltd
sub
shll
jmp
sbb
add
adc
or
sti
dec
les
mov
arpl
lret
sub
adc
push
jecxz
push
movsb
in
inc
int
sub
mov
cmovge
popf
cmp
cmp
sbb
mov
jns
and
outsb
cli
jo
clc
lret
inc
arpl
xchg
sbb
pop
xchg
into
push
stc
outsl
in
lcall
daa
orb
gs
cld
popf
sub
mov
push
enter
cs
push
adc
fnsave
fsubs
push
popf
out
lods
mov
xchg
xor
jle
ret
inc
mov
add
mov
cmpsl
lahf
xor
lahf
dec
push
lds
loope
pop
pop
push
adc
sub
mov
mov
or
push
data16
andl
or
and
and
or
cmc
setbe
into
add
lret
sub
mov
adc
cmp
cltd
mov
xchg
sahf
add
int
or
inc
ja
adc
stos
pop
pop
lret
jae
inc
cmc
sbb
pop
xor
push
dec
dec
addr16
insb
push
cli
out
mov
and
or
jb
xor
outsl
les
mov
jae
sub
inc
fsubr
xor
jmp
movsb
cmc
cld
inc
cmp
test
mov
xchg
repnz
sub
imul
mov
cli
sbb
xor
hlt
iret
mov
daa
pop
loope
aam
cmp
jle
shrl
stos
push
mov
push
add
push
mov
mov
sub
aad
idivb
cltd
loop
push
or
and
and
mov
push
fidivl
mov
mov
shl
sahf
dec
sbb
dec
adc
addl
flds
cmp
jns
push
or
cld
icebp
addr16
pop
clc
xor
pop
sbb
rol
std
sub
jle
or
ret
shr
fldt
jmp
mov
mov
xchg
in
gs
into
lret
aas
push
ds
adc
mov
or
push
inc
leave
pop
out
dec
std
fidivl
mov
push
jae
jg
push
stos
push
xchg
jp
shl
dec
mov
dec
and
stos
rolb
fildl
cltd
popa
andb
ss
and
dec
rcr
ficompl
cs
popl
fsub
fwait
mov
outsb
mov
jecxz
mov
cmp
pusha
ret
int
pop
inc
dec
nop
neg
cmp
push
and
movsl
xlat
nop
push
xchg
xchg
lock
dec
lea
fstpl
int3
adc
cmp
or
das
icebp
movb
sbb
jp
inc
aad
in
add
out
inc
cmpsb
cwtl
repnz
outsb
mov
insb
decl
mov
mov
cmpsb
test
push
rorb
ficoml
lods
pop
loopne
dec
push
je
mov
inc
xor
out
stos
jge
outsb
push
aam
ljmp
sbb
adc
outsl
add
pop
push
inc
push
int3
out
push
aad
ljmp
sub
pop
cmp
dec
rcl
pop
inc
jle
je
push
sub
fidivs
and
gs
add
cld
shlb
or
push
mov
cs
roll
push
scas
lret
cmovp
rcl
add
mov
jns
icebp
in
adc
dec
sbb
test
movsb
cmpb
xchg
xchg
push
jecxz
das
inc
mov
in
and
test
out
aas
rcrb
aam
add
aad
outsl
rclb
or
dec
or
add
movsb
fs
push
push
cltd
loop
mov
decb
lods
insl
inc
mov
xor
jnp
jl
fidivl
dec
loopne
into
pop
fcoml
incl
bound
sbb
ss
mov
imul
push
hlt
push
divb
cmp
mov
addr16
add
loopne
fldcw
pop
hlt
add
mov
jbe
stc
xlat
jb
popf
jo
outsl
inc
fstpl
sbb
aas
mov
sti
push
imul
ljmp
dec
jg
mov
xchg
imul
out
xchg
insl
loop
loop
add
dec
push
jne
lds
inc
xchg
push
add
and
dec
lret
mov
or
sbb
sbb
sbb
inc
dec
sbb
sub
and
gs
imul
iret
xor
out
pop
cmpsb
ss
sar
out
clc
inc
dec
and
aaa
pop
add
xor
cwtl
data16
xchg
cmpsl
pop
insl
push
addr16
addr16
mov
xor
jge
or
ret
or
push
ret
repz
xchg
sub
es
outsb
enter
ljmp
lock
pop
sbb
xlat
xchg
stos
test
pop
das
pusha
enter
pop
imul
sbb
mov
inc
jbe
outsb
mov
std
fadd
lock
cwtl
mov
enter
inc
mov
lahf
xor
push
push
lds
xor
sub
shll
aaa
subl
mov
mov
add
scas
std
scas
cmp
sbb
je
test
xchg
nop
or
aas
or
mov
mov
inc
mov
ss
ss
push
add
movb
outsb
push
push
mov
test
call
fwait
outsl
push
outsb
adc
xchg
or
mov
jnp
out
xchg
xchg
repnz
pop
inc
loope
icebp
ret
push
and
or
and
mov
xchg
or
dec
stos
sarb
icebp
fwait
jbe
mov
dec
xchg
lods
jle
out
and
jmp
jno
pushf
dec
dec
aas
push
lds
stos
call
and
xchg
adc
adc
ljmp
mov
mov
roll
pushf
jae
cmpsl
nop
ret
fcom
js
push
or
fs
jmp
das
mov
inc
pop
add
test
loop
jo
enter
test
mov
sti
fwait
mov
test
adc
push
dec
mov
push
mov
clc
cmp
push
std
call
push
cmpsb
nop
pop
push
jecxz
out
xchg
loopne
and
pop
test
mov
mov
xor
cld
adc
pop
xor
cmp
dec
mov
add
mov
je
mov
das
ficoml
mov
and
dec
jg
or
jb
sahf
cs
xor
mov
sbb
lods
pop
lods
mov
in
jne
mov
dec
aaa
or
mov
pop
push
mov
aad
lret
aad
mov
lea
push
mov
push
lock
lock
sbb
test
adcl
or
je
repz
js
jmp
lods
mov
dec
hlt
cmp
sub
inc
jno
fisubrs
into
pop
mov
xlat
push
aas
push
fmul
iret
mov
jae
sub
rcl
mov
int
jmp
mov
mov
mov
inc
push
aaa
movsb
dec
ljmp
and
xchg
loopne
sti
fsubrp
inc
addr16
push
inc
add
dec
lods
std
jmp
and
pop
adc
pop
out
mov
lret
push
mov
ss
add
adc
cmp
aad
push
push
inc
jl
push
jp
into
sub
aam
xchg
pop
test
cmp
inc
test
test
mov
fnsave
push
das
ljmp
mov
stc
sbb
add
add
xor
and
push
cwtl
lock
sbb
das
cmpsb
or
push
dec
push
xorb
inc
popa
cmp
push
and
xchg
lcall
push
push
adc
in
cmp
sti
xchg
xor
scas
movhps
mov
xor
cmp
jno
mov
dec
or
out
jb
dec
mov
clc
ror
pop
ljmp
mov
rclb
inc
pop
movsb
dec
sbb
cmc
iret
mov
les
stos
inc
fldl
pop
aas
sub
jmp
leave
sahf
jl
dec
pop
pop
insl
sub
bound
sbb
cmpb
cltd
push
in
lahf
mov
shrb
and
loop
lret
jmp
cmpsl
subl
testl
jns
das
sbb
ljmp
push
int3
ja
dec
in
das
and
idivl
xor
xchg
fildll
sub
lock
ds
xor
xor
inc
fnstenv
and
ret
ja
pop
gs
mov
and
xchg
and
lods
jnp
sub
aas
xchg
xchg
loopne
popa
mov
mov
pop
fincstp
sahf
cmovle
xor
sbb
out
or
dec
pop
loop
icebp
ljmp
punpcklwd
in
mull
jl
add
inc
in
jmp
cmp
jl
adc
insb
jl
jnp
cld
stos
adc
mov
lcall
ret
mov
jae
ja
push
pop
mov
xchg
and
cs
sub
lret
les
push
fs
scas
repnz
mov
pushf
out
push
mov
fidivs
mov
xor
xchg
cmp
xor
pop
cld
lcall
xchg
test
cmp
jo
lock
rcrl
cmp
or
or
add
popa
sahf
pop
or
sbb
pop
push
popa
add
stos
pop
mov
in
cmp
push
jnp
fs
push
mov
pop
dec
jl
sbb
mov
cmpsb
aam
jmp
in
push
lods
cmp
pop
scas
push
jle
pop
stc
push
scas
repz
lea
into
push
pop
xchg
shl
ret
push
mov
mov
loopne
push
inc
loopne
shll
ljmp
add
ret
push
jmp
movsl
aaa
mov
cmp
in
sbb
xor
fsin
mov
enter
in
popf
addb
lret
mov
movsl
cli
jne
clc
xchg
push
sbb
xchg
cmpsb
dec
jg
jecxz
push
or
fisttps
aas
mov
pop
mov
xorb
push
mov
mov
loop
add
ja
cs
inc
shll
repz
cmpsl
push
adc
out
mov
inc
js
into
cwtl
sbb
pop
sarl
pop
jecxz
stos
pop
mov
xlat
jnp
out
mov
roll
mov
std
push
outsl
push
popf
mov
mull
in
mov
push
jp
sbb
and
cli
shll
imul
aam
mov
dec
imul
movsl
sti
push
jb
push
inc
pushl
push
add
dec
ss
outsl
add
pushf
push
shlb
dec
lcall
loop
mov
cmp
in
arpl
mov
rorl
leave
and
jnp
ret
jno
aad
add
aas
pop
mov
pop
fnstcw
addr16
mov
xchg
push
cli
push
es
inc
ret
push
pop
push
dec
testb
xchg
push
into
mov
push
cmp
cld
dec
pop
push
orps
divb
adc
ds
inc
movb
shll
imul
xor
adc
or
pop
adc
and
push
ficomps
or
inc
mov
lret
cmp
jl
enter
sbb
xlat
std
jl
mov
pop
dec
pusha
cmpsl
in
sbb
add
test
insl
and
imul
xor
movsb
aad
pop
loope
rolb
mov
mov
outsb
cmp
xor
lret
inc
dec
mov
pushf
jbe
xor
in
fisttps
repnz
in
add
insl
sub
cmpsl
pop
jmp
and
lret
sub
sbb
xor
adc
or
cmp
pop
xchg
mov
add
cmpsb
out
push
imul
dec
pop
and
mov
mov
aaa
push
aaa
test
sub
stc
int
movsl
fs
out
jno
mov
out
xor
loop
imul
adc
push
mov
imul
aas
inc
xchg
shrd
bound
and
pop
dec
out
xchg
sahf
inc
jb
adc
sub
rcl
test
repnz
inc
test
bound
sti
aas
seta
adc
jne
mov
dec
ror
jb
and
in
xchg
outsb
mov
and
dec
mov
mov
lahf
inc
loopne
js
stc
js
mov
xchg
enter
mov
std
sbb
add
mov
cmovnp
jge
inc
stc
fldenv
mov
jns
inc
inc
pusha
aad
jmp
push
push
adc
daa
xchg
xor
out
cmp
push
sub
dec
mov
mov
mov
xchg
jecxz
push
pusha
push
cmpsb
jne
aas
xchg
es
adc
repz
lret
lahf
adc
push
das
jns
sbb
dec
xchg
icebp
lods
xchg
mov
adc
mov
cmp
jg
data16
mov
xor
adcl
cmp
add
mov
jle
mov
stos
cld
jl
icebp
notl
or
cmp
mov
xlat
loopne
and
jg
cli
movsb
inc
inc
fs
add
aas
mov
xor
pop
sub
fildll
dec
cmpsl
je
jae
inc
xchg
mov
cmpsb
mov
mov
push
cld
push
out
arpl
and
cmpsb
jo
xchg
js
aam
lods
cld
xlat
aas
lea
cmp
shl
dec
addr16
std
inc
push
xchg
or
out
fwait
lods
pop
and
jns
dec
in
pusha
xchg
or
adc
sub
pop
stos
sarb
add
jmp
faddl
add
add
xor
jle
out
flds
out
xchg
inc
mov
push
mov
mov
in
sbb
into
fstpt
in
ret
dec
iret
inc
lret
sub
and
addr16
scas
xchg
movsb
xor
xor
and
push
das
out
xchg
shlb
fmulp
stc
pop
add
test
ss
lods
inc
test
xchg
sbb
dec
add
stc
or
sub
pusha
xor
push
out
pop
inc
aad
xor
repnz
push
int3
sbb
cmp
orb
lea
jp
xor
jo
sub
mov
pop
out
rcrl
fcomi
loopne
jge
xchg
mov
mov
loop
and
mov
sbb
push
stos
xor
mov
or
mov
jle
pop
mov
pop
fimull
sbb
repnz
mov
jns
cmpsl
mov
push
repnz
sbb
mov
cli
xor
dec
pop
loopne
fcoms
pop
xchg
add
leave
js
loope
ja
rol
pushw
scas
xchg
mov
imul
mov
xor
inc
mov
add
cmc
xor
and
and
ljmp
xor
nop
fs
and
push
sub
inc
jmp
cmp
icebp
clc
or
mov
insb
lock
cmp
mov
stos
arpl
test
add
rcrb
push
enter
inc
cmp
call
data16
mov
jns
jnp
mov
pusha
lcall
pusha
mov
mov
xchg
dec
cmp
cld
xchg
adc
jno
or
add
lds
sbbb
xor
inc
mov
sub
sub
pop
cmpsl
ss
mov
xor
hlt
call
xchg
scas
fimuls
bound
push
xor
mov
imul
dec
rcl
sbb
cltd
fisttpl
jno
adc
lahf
mov
shlb
frstor
in
outsb
sbb
test
sbb
sub
mov
mov
cwtl
cld
mov
je
js
and
lods
jmp
ret
fwait
xchg
cmp
es
daa
xchg
or
push
dec
insb
cmp
cs
stc
jns
dec
sub
cmp
xchg
loope
loopne
add
jecxz
movsbl
cld
cmp
cld
xor
dec
dec
xor
push
test
mov
stos
lcall
fcomps
cmp
fdivr
psubusb
pop
hlt
inc
xlat
or
jb
aas
mov
fwait
lods
dec
push
inc
pop
popl
test
iret
xor
scas
mov
dec
incb
leave
loop
fadds
jae
jp
iret
int
ljmp
nop
xor
dec
mov
sbb
popf
stc
gs
jmp
daa
test
mov
popf
out
xchg
fisttpll
and
dec
leave
xchg
pop
call
adcb
cs
inc
xchg
ja
jnp
mov
sbbb
mov
sbb
lahf
ror
mov
in
ljmp
imul
cmp
imul
mov
dec
push
xor
xchg
in
daa
fisubl
fldt
push
mov
add
jl
xchg
or
lret
mov
inc
aaa
cli
test
test
jl
lock
inc
nop
fs
ja
jge
pop
fdivs
mov
icebp
or
in
and
jecxz
mov
stos
adc
sub
inc
add
ljmp
test
andb
movsl
icebp
lock
lret
xchg
inc
scas
or
icebp
gs
negb
stos
in
mov
lock
mov
adc
in
out
repz
aad
add
repz
lods
xchg
in
fcomip
daa
movl
pusha
es
pushf
xchg
lret
inc
cmpsl
les
das
popa
sub
inc
adc
mov
mov
mov
mov
dec
ficompl
loope
and
or
mov
mov
fstl
mov
cmp
call
ds
mov
scas
push
dec
les
lahf
mov
lret
inc
imul
xor
sbb
in
sbb
mov
fst
push
popf
std
scas
and
rclb
mov
push
inc
mov
movsl
pop
add
xchg
sbb
pusha
lock
out
pop
movsb
sbb
stos
in
sbb
add
fucom
outsl
scas
cmpsl
fists
push
inc
adc
aam
jns
mov
icebp
jle
xchg
inc
jo
push
xchg
stc
loope
stc
rorb
adc
push
sub
imul
ds
jl
or
loop
stos
test
mov
jp
addl
and
jne
mov
outsb
xor
cmpsb
cmpb
out
and
push
mov
dec
jl
sub
mov
mov
sbb
sahf
repnz
out
mov
sub
jne
test
jnp
xorb
rcr
jbe
imul
test
add
in
sub
xor
outsl
pop
enter
stc
xor
ljmp
bound
pop
push
inc
lods
into
cmp
push
out
cld
ljmp
jp
cmp
push
adc
xchg
aas
ds
mov
pop
add
ljmp
lods
rcrb
or
mov
dec
sahf
gs
popf
ret
ficoml
mov
xlat
orb
mov
and
jmp
mov
fnstenv
xor
sbb
sub
mov
daa
or
lcall
ss
je
jbe
jnp
pushl
mov
mov
jp
xchg
lods
mov
pop
jnp
jmp
in
sbb
imul
mov
jnp
push
aad
mov
ljmp
mov
arpl
scas
adc
pop
dec
sub
and
push
sahf
sbb
je
fwait
xor
mov
aas
jo
push
addr16
sahf
aad
out
mov
adc
sub
xor
jl
sub
push
mov
adc
insl
mov
loopne
adc
sarl
xor
mov
popa
xor
inc
adc
test
scas
inc
sub
sarb
add
push
mov
xchg
movsl
jle
les
lahf
loopne
in
adc
enter
in
roll
data16
hlt
cmp
mov
mov
fdivrl
sbb
lock
cld
mov
or
test
out
xchg
push
rcl
ss
cmp
sub
mov
xchg
mov
push
and
ret
inc
loopne
sbbl
mov
imulb
pop
cmp
adc
stc
addr16
mov
jl
pop
into
out
stos
inc
push
loop
mov
and
movsb
sub
fwait
add
leave
xchg
pop
or
dec
cmp
adc
je
sbb
push
mov
test
scas
lret
ja
pop
push
int3
cs
das
insl
jnp
daa
jmp
inc
pop
xorb
xchg
scas
pop
in
sub
ret
jae
dec
mov
cmp
rorl
cmc
roll
add
and
jmp
add
jecxz
jecxz
pop
test
in
jl
lods
xchg
frstor
popa
dec
push
cmp
out
inc
rorb
sub
mov
mov
dec
dec
in
pop
sub
jle
add
pop
cmp
ds
cmp
orb
jnp
mov
pusha
and
xchg
add
push
shrl
add
sbb
test
pusha
js
mov
push
sbb
lock
mov
insl
and
add
popf
or
in
loopne
icebp
out
sub
loop
lcall
rorl
add
dec
and
push
inc
test
out
mov
or
mov
nop
leave
push
stos
cmp
cmpsb
xor
sub
outsb
testb
or
ds
xchg
outsb
sahf
cwtl
mov
pop
push
incl
pop
test
mov
stc
xor
jns
test
bound
adc
movsl
cmp
movsl
xor
lret
addb
push
lods
sub
xchg
mov
sbb
push
fwait
push
cmpl
cld
mov
enter
xor
jle
sahf
xchg
faddp
xchg
int3
mov
sbb
loopne
pop
fimull
inc
lea
aad
loopne
shrb
xlat
scas
dec
pop
nop
lret
mov
pushf
add
movsb
lds
out
mov
call
and
cmp
and
insb
ljmp
mov
rcl
addl
scas
mov
dec
lock
xchg
out
push
adc
in
cmp
xlat
and
js
add
imul
cmpsl
and
cmpsb
mov
push
or
call
push
jmp
scas
fwait
jle
mov
sub
dec
adc
mov
cltd
outsb
add
or
jmp
xchg
addr16
cmp
push
push
jbe
sbb
mov
mov
cmpsb
mov
sub
lods
fistl
lea
mov
mov
pop
inc
adc
pop
mov
into
or
loopne
cmp
pop
add
stos
hlt
and
faddp
test
out
cvttps2pi
xchg
inc
cmp
ja
arpl
in
pushf
in
or
mov
cmp
fld
into
imul
mov
push
mov
or
inc
cs
sub
mov
rorl
xchg
jne
jp
add
fidivs
dec
jae
pop
cmp
mov
push
imul
dec
test
inc
cmpsl
test
and
and
jmp
adc
clc
loope
cmp
mov
jns
push
sbb
push
andb
jle
mov
stos
mov
lret
pop
pop
xor
xor
nop
sti
data16
sub
sub
scas
jg
cmp
sbb
iret
ljmp
stos
push
jmp
std
fildll
mov
inc
mov
xchg
lods
popa
sub
ficomps
add
daa
cli
xor
ds
in
mov
push
xchg
pop
mov
arpl
gs
aam
mov
fldlg2
in
lods
mov
out
pop
xchg
push
fs
imul
cmpsb
xor
jle
lahf
push
inc
or
clc
outsb
imul
fsubl
and
cltd
pop
push
rorl
fldenv
ja
call
mov
pop
inc
push
pop
adc
dec
fwait
inc
shr
jmp
add
add
cmp
stc
add
mov
mov
call
inc
repz
and
popf
in
nop
fstpl
pop
push
rcl
jno
xchg
movsl
mov
jmp
sarb
sti
fldcw
hlt
and
pop
shll
and
inc
push
popa
cmp
out
and
xlat
add
scas
std
mov
mov
loopne
andb
outsl
lods
fs
xor
cmp
in
sarb
test
mov
je
hlt
js
out
fistpll
dec
xchg
jmp
gs
xchg
xor
mov
in
movb
push
andl
dec
mov
call
mov
fmuls
and
cs
test
pop
enter
addb
or
mov
push
inc
ss
imul
iret
lahf
and
mov
push
stos
into
ja
add
int
dec
mov
jl
in
add
add
pavgw
jl
adc
jno
sub
cmpsb
mov
or
cmp
lret
add
jns
push
jno
xor
jmp
sarl
mov
dec
fucomip
inc
or
or
xor
stc
fwait
mov
rcrb
mov
ret
getsec
push
lea
jo
and
mov
cmp
mov
pusha
out
jge
imul
outsb
lcall
cmpsl
pushf
xor
mov
movsb
imul
adc
xchg
jns
daa
inc
pop
push
jno
jae
mov
in
fimull
mov
push
out
adc
imul
repz
mov
ljmp
mov
gs
lea
sbb
push
loope
adc
fdivrs
cli
test
clc
push
jae
je
adc
xchg
enter
movsb
sub
push
pop
stos
sub
lahf
pop
adc
jg
add
in
pop
inc
xor
test
scas
test
loopne
pop
out
mov
add
mov
inc
mov
out
jne
data16
std
mov
xchg
dec
adc
xor
inc
inc
or
xchg
lret
and
dec
aam
push
cs
or
mov
rol
pop
negb
and
sti
push
jle
xchg
loopne
and
xor
pop
je
lea
icebp
cmpsb
xor
mov
outsb
jl
jecxz
cli
bound
sbb
mov
cld
or
mov
and
jecxz
mov
sbb
jnp
xor
jg
mov
xchg
fisubl
cmp
das
cmpb
sub
cmp
or
pop
scas
mov
negb
jle
cmp
dec
or
mov
loop
sub
addb
add
jb
stc
rcrl
or
fnsave
je
mov
jne
enter
jne
das
jg
in
lock
out
in
les
jnp
add
cmp
xor
addr16
xchg
adc
shl
loopne
push
ficompl
stc
enter
subl
jl
push
push
adc
jmp
adc
clc
icebp
or
repz
mov
out
mov
call
dec
test
pop
icebp
pushf
repnz
divb
or
push
xor
es
mov
cmp
jmp
xchg
sub
jns
lret
mov
jns
jmp
lahf
scas
in
ljmp
cwtl
into
jnp
loope
es
bound
mov
xor
dec
data16
mov
jecxz
push
iret
push
test
adc
das
sahf
fildl
stc
in
adc
stos
fmul
cmp
iret
xchg
ret
sbb
in
out
int
cmc
cmpsl
lods
pop
das
cwtl
cmp
mov
inc
in
aad
jbe
push
daa
arpl
cmpsb
mov
adc
je
mov
mov
loop
mov
icebp
mul
movsl
or
xchg
mov
jo
clc
inc
adc
in
sub
mov
or
adc
pcmpgtb
cmp
aam
aas
ret
or
mov
mov
xchg
pop
mov
jl
js
xor
lret
xor
shrb
push
shr
sahf
fxch
pushl
shlb
jg
pusha
popa
imul
sbb
mov
cmp
cmpsb
xor
js
insl
nop
xchg
dec
lea
dec
mov
mov
stos
incb
mov
loop
rcll
clc
stos
mov
fldl
aam
add
pop
sbb
xor
xor
clc
pop
std
pop
xor
push
cmp
cmpsl
jne
iret
add
in
sbb
cmp
das
and
sub
stc
and
sbb
or
sar
pop
or
or
ficoml
fwait
jnp
shlb
jo
popa
test
mov
stc
inc
adc
and
jp
mov
in
fistl
int
fidivl
sbb
push
inc
cmp
mov
or
push
ljmp
cmpsb
aam
sub
fucom
loop
push
mov
fwait
lcall
jns
daa
adc
aad
mull
dec
mov
das
lock
mov
rcr
repz
inc
fisttpll
inc
mov
mov
aas
lods
mov
jae
and
sub
and
mov
rorl
movsl
movsb
push
mov
cmp
roll
or
pop
mov
push
std
xchg
pop
xchg
jne
pop
test
sbb
iret
in
xchg
push
das
ret
mov
shll
jnp
sbb
imul
scas
jl
popa
shl
adc
pop
test
shll
sbb
fmull
insl
data16
push
cmc
push
sbb
cltd
or
pop
sub
filds
sbb
pop
repnz
push
fs
mov
cmpsl
cmp
inc
aad
hlt
mov
pushf
std
les
mov
repz
call
mov
roll
xchg
sbb
mov
nop
pusha
adc
and
test
iret
mov
adc
ljmp
and
pop
inc
dec
mov
mov
add
cmp
shl
repz
xor
into
adc
mov
or
jmp
mov
xchg
aas
push
add
dec
xor
mov
ret
and
in
int3
fs
add
stc
dec
dec
cmp
sub
and
into
addl
xor
addr16
jo
or
jp
fcmovnu
and
add
decl
imul
inc
adc
push
xor
inc
mov
inc
outsl
ja
test
adc
rcl
add
sti
mov
insb
ljmp
cmp
aaa
inc
and
push
jnp
sbb
mov
cmp
outsl
lods
or
fistps
daa
mov
pop
mov
sbb
xor
in
orl
fldl
mov
out
pop
dec
arpl
flds
add
js
je
add
and
mov
movsb
insl
loop
jecxz
mov
mov
inc
dec
xor
xchg
and
or
mov
mov
add
lods
int
pop
jge
mov
jbe
fs
int3
pop
cmp
mov
pop
cmc
add
xor
xlat
fsubrs
ret
sahf
mov
in
xlat
mov
mov
lods
mov
push
scas
inc
outsl
push
sub
mov
stos
cmp
ret
xlat
or
push
dec
into
clc
sub
push
iret
scas
popf
aas
es
addb
addl
dec
scas
adc
nop
push
cmc
mov
div
test
cmp
add
test
mov
mov
gs
or
mov
movsl
and
scas
dec
test
sub
cmp
mov
cmpsb
pop
sahf
cmpsb
aam
fnstsw
and
cmc
xchg
call
hlt
outsb
jns
xlat
mov
inc
mov
dec
mov
out
dec
mov
rcl
push
mov
dec
test
mov
call
xchg
arpl
xchg
add
repnz
or
adc
cmp
cltd
pop
dec
jg
mov
mov
mov
subl
daa
mov
outsl
leave
xchg
les
les
int
sub
insl
adcb
mov
mov
adc
or
insb
cmc
mov
clc
mov
test
lahf
cs
inc
aaa
or
hlt
icebp
dec
loop
ds
cwtl
rcrl
dec
xchg
jae
push
dec
mov
lret
cmovge
insb
xchg
mov
jge
push
lea
ret
jbe
notb
movsl
dec
into
ss
mov
out
dec
mov
bound
test
push
out
js
sub
test
lods
mov
clc
push
xchg
xchg
xchg
inc
pop
xchg
and
mov
add
pop
sbb
in
pop
movsb
div
addr16
stos
xchg
lods
mov
gs
addr16
fiaddl
xor
jnp
lock
add
sub
jecxz
xlat
push
loop
mov
dec
popf
cmp
dec
adc
xor
shlb
clc
adc
mov
dec
or
xchg
smsw
push
xchg
jge
sbb
mov
pusha
stos
lret
sub
nop
jne
inc
fldenv
scas
jbe
fwait
repz
lods
cmc
xorb
mov
test
daa
add
mov
jg
mov
mov
sbb
ljmp
cltd
rclb
enter
inc
push
test
nop
outsl
js
sbb
add
sub
popl
inc
mov
push
jge
push
jmp
call
push
lcall
inc
lds
mov
addr16
jbe
int3
push
std
push
jne
fcom
es
dec
movb
jo
xor
mov
push
push
scas
fsubr
sub
jns
and
fcomp
fsubs
sub
fdivp
scas
mov
mov
mov
fwait
mov
fcompl
mov
add
insl
gs
test
xor
inc
movsb
mov
hlt
popf
jne
pushf
mov
insb
into
fwait
test
js
adc
xor
aam
xchg
and
jp
andb
and
adc
imul
dec
orb
mov
out
aad
mov
mov
adc
or
dec
mov
fldenv
pop
and
add
xchg
push
in
data16
sbb
mov
and
sbb
fwait
jnp
test
dec
sub
test
lods
jns
gs
mov
shll
es
fsubrs
lods
mov
dec
add
js
xchg
lock
cwtl
mov
jle
in
cmpsl
lds
adc
lcall
sti
sbb
jno
cs
jns
cmp
adc
xor
mov
dec
imul
jmp
pop
stos
cltd
je
mov
out
fisttpl
rolb
push
jg,pn
push
fwait
outsl
push
ds
mov
fsubrl
xchg
sub
movsb
xor
out
jmp
out
mov
pop
mov
repnz
mov
jbe
mov
cmc
sub
data16
mov
ja
push
sub
jne
jecxz
xchg
mov
fxtract
test
out
cld
mov
ds
xor
out
mov
sbb
out
cmc
insl
dec
fsubrl
vcvtdq2pd
leave
stc
jg
in
xchg
lret
mov
mov
sahf
inc
test
hlt
sarl
mov
ljmp
pop
jb
push
dec
adc
pop
pushaw
mov
cmp
inc
inc
cmp
mov
xchg
adc
mov
frstor
mov
or
adc
push
std
add
pop
lods
js
movups
outsb
mov
xor
xor
es
loop
in
dec
mov
and
push
les
push
hlt
minps
popf
mov
cmpsb
sub
jb
mov
mov
outsb
ret
test
pop
lret
and
sub
in
js
jge
lea
repnz
sbb
fildll
test
out
xchg
repz
push
hlt
movsl
jecxz
jle
or
and
iret
icebp
dec
or
mov
divl
leave
sbb
int
jne
jmp
sahf
std
aam
ret
adc
or
sbb
mov
xor
and
add
push
out
enter
mov
popa
add
cmc
out
add
ret
xchg
lret
jmp
loop
inc
pop
mov
dec
lahf
sbb
sub
insl
test
push
pushf
add
and
pop
add
pop
mov
xor
lds
into
xor
icebp
ret
cmp
pop
arpl
adc
push
es
mov
sbb
mov
movsl
sub
cmp
xorl
cld
push
or
movsb
xchg
dec
push
fwait
dec
sbb
cmp
fcomps
sbb
pusha
ret
lcall
fcoml
mov
adc
pushf
imul
and
frndint
scas
jo
sti
add
inc
and
scas
jmp
add
das
loop
call
nop
mov
jbe
and
out
adc
jecxz
shlb
pop
mov
dec
movb
je
or
insb
mov
mov
in
les
jecxz
mov
ss
inc
divb
stos
push
out
push
dec
leave
sub
lods
aaa
shlb
rcrb
or
xorl
mov
dec
test
outsb
ja
jl
cmp
xor
filds
jb
xor
xchg
popf
jne
scas
hlt
push
pusha
push
lds
lock
and
inc
cmp
shlb
lret
mov
lahf
add
mov
cmpsb
push
aad
out
pop
add
ret
sbb
scas
add
add
neg
lods
in
test
inc
mov
push
orl
cs
fiadds
jae
sbb
mov
test
scas
jae
in
nop
add
cs
inc
sbb
out
jbe
pop
cs
imul
cltd
test
sbb
lahf
mov
addr16
insb
out
imul
or
jle
js
push
pop
mov
daa
xor
sahf
pop
xlat
cmc
nop
sub
pop
loop
movsb
sbb
dec
and
daa
stos
sbb
enter
and
cmc
dec
lock
mov
shll
call
and
fistps
cmpsb
fildll
jae
hlt
inc
sbb
addr16
push
jbe
sbb
out
jne
fstpl
dec
ss
push
test
mov
or
gs
pop
add
rolb
mov
shll
jo
ss
and
sbb
sbb
imul
sub
nop
jmp
cmp
in
cld
and
int
mov
inc
daa
cmp
je
jl
cld
jg
mov
lcall
andb
add
dec
jmp
shll
cmc
out
cltd
mov
fcmovbe
cmc
stc
iret
mov
mov
call
mov
mov
dec
es
jo
das
sub
mov
arpl
ljmp
xchg
jbe
aad
xchg
fisttps
xchg
inc
sbb
pop
dec
jmp
lahf
ffreep
adc
and
cmp
sbb
mov
iret
ljmp
fbstp
lcall
loopne
bound
sub
mov
test
xchg
adc
out
pushf
dec
or
repz
sti
mov
cmp
das
cmp
and
insl
pop
sti
mov
pop
aaa
pop
cmpsl
mov
inc
jae
movl
xchg
mov
pop
push
les
std
xor
xor
enter
mov
call
mov
insb
int
inc
inc
fs
mov
jae
loope
decl
std
cwtl
jl
not
inc
or
notb
int3
pushf
jge
pop
cli
cltd
out
loop
int3
test
and
test
inc
das
push
call
cltd
mov
dec
int
mov
sub
leave
std
sub
movsb
pusha
xchg
jno
xor
adc
sarb
or
push
mov
xor
lret
jl
scas
loopne
push
adc
lea
js
fiaddl
xchg
mov
pop
stos
lret
and
test
mov
popf
dec
les
pop
insl
int
loope
push
ret
rorl
in
mov
adc
mov
rcr
arpl
lds
les
repz
cld
jmp
cltd
movsl
and
test
inc
scas
scas
pop
pop
jge
jg
xor
push
cwtl
mov
jp
dec
pop
and
adc
jae
out
and
outsl
xor
packuswb
jns
pop
lret
push
call
push
gs
xor
xor
sub
insl
imul
jmp
iret
sub
xchg
in
mov
pop
cmp
test
hlt
mov
or
es
fwait
mov
jle
call
popf
cmc
cli
daa
sub
or
repz
push
gs
push
sub
push
sbb
repnz
pusha
fsub
push
inc
outsl
addr16
push
sbb
cmp
and
adc
xor
hlt
push
shll
and
or
lods
mov
cwtl
or
xor
sub
and
cmpsl
inc
inc
inc
mov
ss
imul
and
mov
push
ss
pushf
cmpsl
and
pushf
cmc
in
cmp
push
adc
sub
xor
mov
cmpsl
imul
sub
push
lds
int
mov
jmp
xor
pop
mov
movsl
xchg
test
push
imul
or
push
daa
jg
dec
imul
mov
enter
dec
or
movsl
push
ret
jns
add
xchg
syscall
cmpsb
out
lcall
push
insl
xchg
sub
jno
or
ret
movsl
not
xlat
mov
mov
push
pop
xchg
inc
mov
sub
mov
orl
xchg
cmp
rolb
adc
jl
push
test
jno
mov
xor
or
popf
out
mov
add
test
cld
out
mov
push
mov
cltd
hlt
lret
lcall
cmp
add
cltd
out
jnp
loope
fidivrl
shrb
daa
dec
add
xor
fsubrs
clc
pop
test
or
fs
xchg
adc
xlat
mul
fsubp
out
lods
mov
dec
xchg
cmp
mov
daa
add
mov
mov
xchg
fistps
jl
lahf
add
ljmp
cmp
mov
lods
push
mov
mov
cld
fistpl
add
sbb
pop
cli
icebp
je
sbb
push
pusha
add
xor
jno
out
xor
ja
dec
lea
xor
jge
jno
lods
stos
jge
xlat
repz
jbe
call
stc
aas
rolb
or
mov
scas
imul
mov
ljmp
and
sub
pop
movsl
hlt
imul
mov
add
std
push
loopne
sbbl
fistl
lods
sti
push
cltd
int3
les
adc
and
fs
rol
mov
jne
dec
ret
mov
enter
dec
out
push
mov
jbe
pop
inc
cmpb
jge
mov
pop
dec
ret
dec
jbe
mov
fdiv
sbb
or
xchg
push
or
icebp
push
push
mov
and
scas
bound
cmpb
stc
pushf
xchg
xchg
mov
imul
sahf
fmuls
call
popf
pop
dec
ja
sahf
stc
pop
lcall
ss
pop
outsl
xor
push
dec
stos
sbb
and
adc
push
push
xchg
dec
lock
loopne
sub
add
mov
cmp
or
decb
imul
xor
addr16
add
adc
test
mov
add
retw
call
addb
inc
pusha
add
and
lcall
sbbl
ds
pop
xchg
jae
mov
test
xchg
stos
sbb
xchg
test
bound
les
mov
ja
mov
pop
movsb
mov
mov
jp
adc
push
scas
pop
fbld
aas
xchg
adc
sbb
insb
int3
into
xchg
ja
push
mov
sub
cwtl
inc
mov
mov
and
rcrl
pushl
shlb
clc
sbb
sub
in
push
movsb
cmpsl
popf
mov
adc
test
decb
cmp
jns
adc
or
xchg
fwait
hlt
shll
jno
jbe
mov
cmp
cmp
pop
iret
jmp
loope
test
stc
xchg
jg
hlt
xchg
xchg
adc
jbe
shl
jge
in
dec
fs
or
movl
mov
dec
xchg
int
lods
in
ljmp
enter
and
add
cmp
cmp
cmp
mov
cmp
mov
sub
aam
iret
fs
fsubrl
cmpsl
sahf
inc
inc
xlat
and
scas
aad
mov
out
outsb
xorb
adc
cmp
xchg
and
fcmovnbe
jb
mov
xor
out
into
notb
push
jb
sbb
jmp
fists
inc
jmp
xor
stc
pop
adc
loope
inc
push
xor
pop
test
ds
push
pop
pop
ret
repz
add
hlt
xor
pop
sahf
and
mov
xchg
pop
addb
sbb
xchg
adcb
inc
push
js
push
sbb
cmp
stos
insb
and
cwtl
imul
dec
jle
mov
shrb
dec
jle
sub
nop
mov
mov
jns
add
jp
loop
roll
lods
sub
add
push
test
mov
bound
out
mov
fistl
mov
pop
xchg
xlat
or
lret
std
jns
xor
xchg
leave
mov
pop
dec
aad
popf
push
aaa
test
jne
jno
add
ret
add
stos
faddp
fcompl
in
cltd
xchg
push
push
int
jmp
bound
insb
add
sbb
mov
ja
cmpsb
dec
cmp
sarb
loop
cld
sbb
in
mov
cmp
mov
arpl
shlb
push
scas
loopne
mov
mov
mov
lods
lret
ds
push
pushf
push
lahf
xor
add
inc
mov
push
jb
shll
call
insb
xchg
adcl
cmp
jecxz
fimuls
loopne
jno
inc
xchg
inc
addr16
daa
fidivl
cmpsl
in
sbb
push
inc
test
je
lock
cmp
scas
fmuls
sbb
adc
dec
inc
xor
push
sub
in
mov
and
repnz
push
cli
lahf
jle
mov
imul
xor
stos
xchg
jno
push
xlat
fs
mov
scas
out
in
dec
pop
pop
xorl
push
xchg
cwtl
das
fldt
loopne
sbb
lods
xor
adc
shrl
xchg
out
mov
cmp
and
repnz
je
std
aas
pop
jge
mov
inc
push
push
cmc
std
psrad
inc
cld
pop
jmp
ss
sbb
rorl
dec
loope
and
and
or
loope
push
sti
cmp
push
adc
dec
popf
mov
push
stos
fimull
jo
add
and
cmpsl
in
lahf
cmp
dec
xor
inc
sbb
shlb
jae
cmp
int
adcb
les
cmp
xchg
popf
inc
cs
xchg
repnz
push
ljmp
push
lds
lods
sub
add
iret
roll
aas
mov
insl
inc
sti
inc
aad
aad
inc
adcb
pop
mov
pushf
push
cmc
push
cltd
rcrb
xor
and
pop
sti
outsl
pop
ds
aaa
call
ja
addr16
jmp
and
es
test
clc
mov
nop
pop
sarb
xor
xor
sarl
and
jle
clc
cmp
inc
stc
push
fcmovnu
xor
mov
out
lret
sub
and
jg
add
adc
and
mov
cli
xchg
das
mov
or
xchg
cmc
std
mov
xor
cmpsb
pop
dec
arpl
js
ja
adc
pop
pusha
sub
pusha
test
cld
add
jne
enter
fcoml
mov
mov
lds
mov
push
gs
xor
les
sbb
mov
ljmp
dec
movsl
cld
add
stos
sar
sub
mov
rorb
jle
cmp
or
xchg
movsl
xchg
add
sahf
inc
sub
adc
cs
mov
xchg
adc
or
out
cltd
xor
repz
std
dec
js
mov
insb
mov
fistps
fdivl
sbb
addr16
or
push
push
aaa
repz
iret
xchg
mov
mov
xchg
pushf
mov
popa
aad
incl
pushf
aaa
jg
xchg
pop
mov
mov
int3
adc
lods
lret
repnz
ja
xchg
adc
dec
mov
shll
adc
dec
adc
add
cmp
arpl
lds
jle
mov
fisttpl
xchg
fdivrp
cs
pop
sub
push
pop
rcrl
shrl
xchg
xchg
mov
icebp
jb
popf
push
arpl
imul
mov
cmc
mov
mov
mov
rorl
mov
outsb
xorl
mov
ss
xchg
pop
test
add
push
cwtl
fistpll
lods
jae
divl
mov
jns
cmpsb
loopne
outsb
xchg
bound
and
outsb
aas
or
ds
fiaddl
sub
push
scas
stos
dec
movsl
adc
daa
mov
push
mov
in
ds
ss
sbb
inc
xchg
mov
mov
call
mov
pop
in
sub
lret
mov
mov
aad
or
jecxz
xlat
adc
test
ret
mov
scas
es
pop
push
adc
push
lcall
mov
push
mov
lahf
popa
jo
std
aad
inc
aaa
test
jge
mov
leave
cmp
cmc
cs
jne
leave
imulb
ret
stos
jge
jns
cmc
pop
dec
sbb
lea
into
das
jecxz
inc
inc
hlt
cmp
xchg
sbb
sub
cmp
xor
imul
notl
movsl
fs
cmp
fcmovnbe
and
push
mov
enter
repz
adc
cmp
enter
in
add
ffree
icebp
jmp
call
das
push
sbb
push
mov
jne
or
jl
dec
ss
negb
int3
iret
pop
das
adc
dec
mov
je
dec
shr
adc
push
into
imul
mov
mov
inc
int
mov
fisubrl
movsb
sub
es
adc
xchg
cmp
test
je
outsb
pushf
sub
dec
add
xchg
gs
sub
mov
sub
and
pop
roll
lret
fs
sbb
outsl
push
pop
mov
rorl
xlat
adc
pop
inc
push
dec
fmuls
ss
mov
push
dec
cmp
adc
xchg
and
pop
lret
aad
icebp
fisubrl
outsl
lods
pushf
mov
mov
roll
xor
jmp
adc
dec
jg
mov
iret
push
pop
dec
ret
int3
mov
sub
hlt
enter
xchg
jl
mov
pop
inc
mov
cld
mov
jbe
mov
cltd
out
cmp
xchg
cmpsl
adc
lods
pop
sahf
nop
dec
mov
scas
imul
enterw
out
stc
insl
pop
mov
sar
inc
lods
push
xorl
and
mov
sub
sbb
mov
pop
jp
and
mov
int3
jne
adcb
ss
or
ljmp
pop
pusha
popa
sahf
xor
sub
iret
inc
sub
xorb
jmp
pop
cmp
loope
mov
push
iret
incb
movsl
jg
insl
sbb
movb
fcmovbe
in
dec
add
movsl
mov
fldl
pop
inc
dec
je
lcall
cld
dec
pop
mov
outsb
add
cmp
add
ds
leave
jnp
orb
adc
and
ret
imul
nop
add
and
outsb
fldt
test
rcr
in
jnp
mul
fs
test
cmp
push
lock
cmp
inc
in
pop
jae
faddl
sbb
jo
cmp
icebp
leave
daa
sbb
inc
out
ret
adcl
cwtl
sbb
jmp
cmp
jnp
jp
ss
xor
inc
push
shlb
fistps
shrb
fadd
ss
shlb
mov
ds
pop
adc
xchg
pop
test
mov
xor
mov
addl
adc
cmpsl
mov
sti
leave
rcrb
mov
mov
je
or
cmpsl
jecxz
lahf
and
xor
lret
push
add
dec
imul
sub
sbb
fwait
bound
inc
out
aad
out
jmp
fldl
mov
movsb
or
push
mov
push
daa
cmp
iret
insl
dec
clc
or
rcl
cltd
cmp
xchg
rolb
lods
mov
mov
nop
fnstcw
xchg
repnz
push
notl
push
mov
and
or
out
lcall
aas
dec
jmp
sbb
ret
lahf
mov
int
add
cs
les
insl
inc
stc
mov
adc
arpl
jns
pop
jmp
dec
jge
scas
shl
in
popa
xchg
xor
in
rcr
xchg
mov
fistpl
bnd
mov
add
jmp
incb
add
adc
fstps
mov
mov
and
mov
stos
outsl
jb
mov
mov
je
fmuls
sbb
dec
jg
mov
mov
mov
scas
pop
pop
jg
aad
dec
jl
shrb
jb
cmp
or
out
mov
in
pop
cmc
bnd
enter
in
dec
mov
sbb
ss
fcoms
cmpl
jo
or
add
mov
sub
js
cmp
xorl
stos
fs
xchg
sahf
pop
xlat
push
ficomps
push
xchg
adc
add
addr16
cltd
pop
scas
adc
int3
add
sub
daa
ficoms
loope
scas
or
mov
nop
scas
pop
mov
iret
and
or
in
fwait
jecxz
add
xchg
or
in
add
ljmp
sti
out
push
je
movsb
dec
outsl
lea
stos
ljmp
jge
inc
sbb
add
and
mov
adc
testl
push
out
pop
jbe
cli
pop
push
sbb
jp
rorl
jge
arpl
mov
sbb
mov
pop
aaa
dec
dec
lahf
sub
rolb
and
movsl
cmp
nop
cmp
mov
xor
push
xchg
push
mov
mov
jg
je
sub
test
add
xchg
stos
lea
cmc
sti
add
push
adc
das
mov
xlat
cmpsb
or
push
fmull
call
adc
adc
dec
adc
inc
add
ret
outsl
clc
out
push
shrb
std
xor
inc
push
pop
xor
sub
daa
sub
push
lret
sahf
setnp
movsb
outsb
test
dec
mov
addr16
popa
jo
out
leave
mov
pusha
aam
xorl
sbb
movl
aaa
mov
push
xor
aas
nop
dec
jge
xchg
cmpb
jmp
jno
mov
test
push
inc
dec
mov
xchg
clc
fbstp
stos
mov
xor
insl
jg
push
aaa
cmp
xchg
cs
cmp
repnz
aas
rclb
jmp
mov
sbb
mov
outsb
loope
mov
mov
mov
cmp
aas
mov
sbb
xchg
loope
push
mov
mov
enter
inc
adc
adc
out
adc
cmp
jb
adc
mov
mov
pop
test
mov
call
js
dec
inc
cld
test
les
lea
ret
inc
sbb
in
push
lods
xor
and
pop
outsb
scas
scas
jns
adc
xor
inc
imul
push
out
dec
sarl
cli
cwtl
mov
insb
out
mov
sbb
pop
and
xchg
and
and
out
cmpsb
daa
pop
inc
mov
push
jmp
push
in
mov
jo
mov
cmp
xchg
jge
or
xor
jno
shll
outsb
fcoms
out
rcr
push
pop
push
mov
sbb
leave
lods
xorb
push
test
into
dec
pop
push
rolb
cltd
shr
sarb
out
arpl
inc
inc
and
mov
mov
lahf
in
xchg
jmp
jbe
test
xor
in
stos
pop
out
jbe
sub
int3
push
sti
adc
add
stos
dec
imul
movsb
pushf
jg
lods
jb
ja
rcll
pop
sub
sbb
cltd
loopne
test
push
xchg
mov
fisubrs
into
mov
mov
pop
mov
repz
cmp
jne
shrb
in
mov
mov
mov
cmp
adc
mov
jnp
test
mov
daa
push
sub
lret
aaa
outsb
jp
imul
les
sub
test
hlt
xchg
jecxz
dec
rorb
mov
dec
call
lock
cmp
fnsave
sarl
and
popf
jl
add
push
stc
aaa
cmpsl
scas
add
in
sahf
addr16
mov
insb
lock
shrl
xor
mov
shrl
xchg
hlt
test
in
jge
push
xchg
shlb
stc
jbe
and
fiaddl
cmp
fs
scas
jne
mov
std
push
or
pop
stos
mov
push
mov
ss
mov
dec
insl
out
lds
inc
mov
lret
or
mov
addr16
je
push
popa
fldcw
js
and
xor
pop
int3
xchg
xor
sbb
sub
je
mov
adcl
pop
mov
fcomi
stos
sbb
sahf
add
hlt
pop
ljmp
jae
mov
fsubp
add
jmp
xchg
pop
jnp
mov
fwait
scas
leave
push
nop
ja
fwait
pop
sahf
adc
movsl
mov
daa
enter
sti
leave
mov
mul
sbb
xchg
or
ret
jno
or
orl
je
xor
in
push
xor
ja
push
test
jno
in
xor
mov
rorb
nop
push
popa
or
int3
cmc
popf
nop
and
sub
push
cmp
imul
mov
insb
inc
sbb
call
and
popa
adc
xor
rorb
fwait
cmc
jns
sub
inc
mov
dec
mov
pushf
mov
mov
add
bound
mov
or
test
and
adc
aaa
imul
notb
test
insl
dec
ljmp
jb
xchg
xchg
enter
adc
mov
pop
scas
adc
fs
je
cmpsl
push
nop
loope
add
andb
push
shll
leave
lret
mov
rorb
in
mov
pop
pop
inc
cmpsl
sub
adc
fimuls
lock
and
adc
mov
xor
mov
hlt
sbb
push
andl
pop
nop
sbb
lods
enter
sub
add
insl
push
pop
loopne
add
inc
and
lock
or
add
push
mov
punpcklbw
dec
and
mov
shl
mov
sub
adc
inc
iret
out
pop
inc
pop
into
or
jmp
stos
cltd
testb
xchg
adc
xchg
fdivrl
shl
pop
or
or
sub
sub
cmp
xchg
fimull
es
xor
xchg
push
outsl
push
jle
sub
jge
push
outsl
imul
lea
mov
mov
imul
jno
lods
lods
lock
cmp
je
fisubrs
dec
jle
loopne
mov
xchg
mov
out
mov
stos
push
sub
jne
mov
clc
cmp
pushf
and
cs
cmpb
pop
popf
sub
arpl
mov
mov
gs
imul
push
xor
nop
sti
push
sub
insl
loop
nop
cmc
dec
fmuls
dec
mov
push
cltd
push
ucomiss
xchg
inc
sub
imul
pop
sbb
xor
pop
test
sarl
dec
jo
dec
dec
decl
sahf
xor
iret
xtest
or
cltd
nop
faddl
out
clc
pop
xor
or
aam
xchg
outsb
push
jecxz
js
lods
test
jl
push
mov
cltd
testb
sub
pusha
les
mov
in
dec
push
stc
xchg
int
lds
push
mov
pop
and
jle
sahf
enter
mov
jns
repz
xor
popf
sarb
rclb
insb
rcrb
inc
add
popa
test
xchg
aaa
iret
stos
ror
jl
or
lds
mov
mov
mov
ds
pop
jmp
das
in
mov
in
jo
adc
incl
mov
dec
loope
fprem
iret
aad
pop
mov
stos
cmp
in
fs
int3
stos
and
push
mov
popa
or
mov
push
pop
inc
xchg
ss
push
mov
sbb
int
add
mov
fstpt
scas
popf
or
fwait
cwtl
in
adc
int3
and
add
test
ds
push
outsl
shl
mov
mul
inc
pop
mov
ss
xor
jne
hlt
insb
imul
push
push
or
mov
out
test
mov
jmp
add
jbe
fstps
pop
outsl
push
jl
xchg
sub
dec
insb
insl
pop
inc
xchg
adc
fucomp
xchg
js
push
into
daa
jnp
idiv
fstl
lahf
cmp
pop
sub
jbe
arpl
jg
mov
adc
xchg
and
xor
and
lea
in
loope
add
es
sahf
pop
arpl
mov
sub
daa
push
es
xor
or
dec
loop
push
aaa
push
sub
mov
push
mov
and
mov
xchg
mov
aaa
push
pop
pop
jmp
insl
mov
mov
out
lret
push
test
sub
sub
push
shlb
sbb
pop
fsubl
mov
push
cli
loop
pushl
and
insb
ret
loope
repz
mov
gs
pop
jp
fs
push
sub
jecxz
push
adc
xchg
testb
mov
cmp
adc
adc
mov
outsl
mov
mov
hlt
imul
cltd
cmpsl
sbb
add
icebp
jns
adc
sahf
xchg
clc
roll
daa
fsub
mov
cltd
cmp
cwtl
mov
jbe
or
fnsaves
push
les
jbe
out
incb
or
outsb
add
sub
mov
shlb
jno
repnz
jne
nop
jne
leave
push
xor
mov
add
out
mov
mov
cmpsl
dec
iret
inc
test
push
fldcw
inc
mov
adc
push
cli
mulb
lret
jb
out
out
dec
stos
stc
aaa
in
call
adc
xchg
in
popf
mov
pusha
jp
push
push
cmp
sbb
inc
push
shl
adc
and
xor
fs
test
push
mov
mov
cmp
pop
fnsave
push
scas
push
stos
push
mov
scas
cmpsb
jg
mov
fidivs
jle
insb
cltd
and
lds
movsl
arpl
mov
std
mov
ja
dec
or
cmp
dec
jo
jnp
inc
inc
imull
fisubs
je
xlat
mov
js
sbb
ljmp
cmpb
or
xchg
adc
sbb
add
push
iret
xchg
lea
mov
cltd
mov
or
push
or
es
xchg
dec
cmp
jecxz
int3
xchg
adc
fimull
enter
movsl
fsubrs
push
mov
pop
rorl
xchg
inc
cmp
stc
icebp
lret
pop
jp
xchg
add
gs
push
stos
insb
aam
sub
int3
xor
push
lret
xor
arpl
xor
xor
inc
inc
push
les
and
xchg
mov
mov
ficoms
data16
pop
cmpsb
mov
stc
imul
cmc
xchg
popf
enter
ds
jp
ja
cwtl
outsl
mov
pop
std
jg
mov
imul
cmp
and
mov
popf
dec
push
pop
lea
insl
mov
pop
stmxcsr
mov
shll
das
jns
add
jno
lret
aaa
mov
outsl
push
sub
cli
push
jae
pop
mov
xor
cmp
push
clc
mov
out
pop
mov
test
gs
int3
in
ja
mov
dec
lds
mov
jge
push
mov
fwait
sarb
divb
data16
stos
fs
cmp
mov
mov
add
push
jbe
mov
mov
mov
scas
xchg
lods
cltd
add
in
lahf
xchg
push
sub
gs
sbb
or
clc
mov
pop
insl
insb
mov
adc
fistps
daa
cmpsb
add
dec
ret
subb
test
pop
adc
cs
dec
lods
ret
jge
push
adc
fldl
mov
lods
cwtl
push
sub
push
cmpb
scas
lds
pop
adc
push
test
add
push
fimull
push
stc
adc
xchg
popf
and
mov
inc
shrb
pushl
out
daa
push
aas
or
cmp
mov
push
and
lcall
shl
add
in
mov
stos
inc
daa
out
jp
popa
test
and
jecxz
pop
push
push
je
or
cmp
loopne
jnp
sub
mov
sbb
adc
and
daa
pusha
sub
mov
out
andb
cmpb
out
in
push
sub
aam
dec
cltd
aam
andl
nop
cmp
pop
sub
adc
mov
ljmp
pop
push
push
jne
cmp
movsb
adc
leave
cmp
add
fwait
rcll
sub
xchg
sub
std
cld
ss
mov
jp
pop
dec
or
lahf
xor
cltd
pop
test
push
aaa
pop
test
test
inc
push
mov
mov
mov
hlt
psrld
mov
sbbb
xchg
mov
cs
loop
mov
jp
ret
jno
movsl
xchg
pop
mov
mov
cmp
mov
lret
xor
cs
cwtl
xchg
movsb
das
lahf
push
js
jecxz
jge
xchg
and
cmpsl
add
sub
shll
push
loopne
adc
push
jmp
or
or
or
jecxz
roll
push
inc
call
xchg
arpl
xorb
imul
insb
sbb
cs
mov
loope
cmp
sub
push
mov
pop
jecxz
test
xlat
xlat
mov
jno
int
cltd
sub
in
xchg
fxch
jnp
outsl
or
cmp
sahf
add
pusha
cmp
out
jecxz
lods
sub
sub
xor
mov
xchg
mov
clc
scas
mov
in
adc
inc
jmp
stos
das
sahf
sti
sbb
xchg
adc
cmc
test
hlt
sbb
sub
out
aas
int3
sar
cmp
dec
xor
inc
mov
clc
lock
stc
push
js
adc
js
mov
lcall
divl
jmp
outsl
pop
sbb
mov
cli
sbb
call
lock
pop
test
push
xor
lods
cmc
cltd
xor
jge
sbb
pop
xchg
aaa
cmpl
fwait
adc
jns
pop
icebp
jnp
xor
mov
jbe
dec
das
cmp
sub
outsb
sbb
je
js
add
jp
xor
cmpl
fwait
cmp
subb
mov
dec
lods
dec
dec
cltd
mov
cmc
pop
leave
icebp
push
roll
scas
stc
lret
cmp
lea
jno
mov
xor
cmpsl
xor
gs
inc
call
jmp
stos
sbb
iret
xchg
dec
or
nop
mov
icebp
gs
fs
push
bound
or
and
shll
loopne
push
mov
sub
popf
dec
inc
sbb
jp
jecxz
cmpsl
pop
sub
xchg
adc
int
incl
adcb
jb
mov
xchg
xchg
adc
cwtl
out
adc
lret
jg
sbb
mov
shr
jle
cltd
inc
popf
sbb
pop
adc
xor
xchg
int3
push
lea
pop
test
lods
clc
loope
cli
jbe
add
push
data16
jecxz
and
sbb
jnp
popl
mov
ret
and
aad
push
out
ds
xor
sbb
mov
fwait
das
fdivr
sar
xor
out
inc
lcall
inc
aaa
xor
push
sar
lcall
rcrb
push
in
mov
test
mov
fdiv
mov
add
pusha
sbb
stos
mov
fsubl
mov
mov
fbstp
add
iret
add
in
stos
pusha
pop
inc
cli
repz
leave
or
or
sahf
lcall
lahf
add
test
rolb
cmpsl
and
xchg
cmpsl
adc
outsb
push
dec
fnstcw
and
mov
push
enter
sub
popa
xor
mov
imul
enter
lcall
popf
xchg
inc
lret
aam
inc
push
push
cmpsl
testb
cmpsl
mov
push
add
daa
in
add
mov
dec
shrb
mov
mov
ficoml
jmp
test
sub
jecxz
ficompl
out
into
divb
sub
dec
add
lret
sahf
aam
dec
repnz
es
ja
lcall
mov
pop
aaa
dec
push
jo
mov
xchg
push
out
repz
mov
lret
test
mov
bnd
xor
inc
cmp
subl
mov
sbbl
out
push
add
jmp
push
jmp
sbb
hlt
jp
setb
xor
testl
cwtl
xchg
and
mov
data16
out
rorl
adc
in
push
ret
sbb
into
xchg
push
fwait
repnz
lret
enter
lods
adc
mov
pop
mov
pop
movsb
xor
popa
and
stos
xchg
lret
adc
cwtl
pop
ret
test
rorb
movl
add
and
popa
push
loope
cmp
dec
jo
or
mov
shrl
jecxz
cmp
mov
aad
sbb
sbb
add
lods
rclb
sbb
mov
les
mov
mov
mov
fists
out
lret
jge
jo
pusha
lds
jns
push
pop
xor
lret
push
add
xor
mov
mov
add
xchg
adc
call
jae
push
nop
push
add
lods
jo
jl
and
sbb
cmp
hlt
cmpl
rorb
ds
mov
and
jbe
lods
movsb
push
divb
push
jecxz
jecxz
lret
add
push
inc
movsl
sarb
test
aad
or
jnp
add
icebp
fwait
inc
repz
dec
sub
int3
into
inc
fprem
jb
ja
mov
xlat
xchg
pop
into
das
mov
xor
xor
or
nop
movsb
sub
movd
xchg
mov
pop
int3
mov
or
xchg
mov
push
iret
xor
cmpb
sbb
fbld
cmpsb
xor
movsl
push
std
mov
xor
test
dec
js
nop
push
inc
call
mov
mov
adc
sub
or
mov
cmpsb
xchg
push
lea
mov
pop
das
rclb
jecxz
add
mov
stos
nop
stos
adc
cmp
pop
aas
insb
mov
mov
lret
lcall
lahf
sub
out
adc
mov
sti
mov
cmp
push
xchg
repnz
ljmp
mov
andb
das
or
xchg
push
inc
loop
sbb
insl
and
mov
xchg
mov
inc
jne
cs
sbb
out
xchg
insl
es
pop
mov
pushf
lea
push
jo
ret
sub
cmpsb
aad
testl
cmpsb
out
pop
outsb
lcall
fninit
fidivrs
sub
mov
pushf
loope
xlat
xor
inc
mov
sub
jb
add
or
mov
sarb
cmpsb
mov
lret
mov
lcall
cmp
dec
add
inc
lods
rcrl
sub
push
leave
mov
jp
sbb
inc
lret
fwait
iret
jmp
cmp
nop
push
lods
fiadds
testb
andl
pop
scas
arpl
lods
out
pop
pop
add
and
lds
ss
xchg
ljmp
xchg
in
stos
cmpsl
mov
addb
cmpsl
ja
cmp
jae
cmc
out
jge
and
jo
int3
xlat
outsb
ds
xchg
into
mov
ss
call
pop
sahf
pop
rorb
inc
dec
add
push
and
fcmovnbe
in
mov
or
inc
ja
incb
xor
jge
mov
call
add
inc
movsb
pop
imul
and
push
cli
adc
inc
or
and
push
loope
xchg
xchg
jo
adc
xor
push
dec
xchg
stos
dec
jmp
mov
out
pop
add
mov
aas
add
push
hlt
sbb
dec
jb
dec
xchg
lret
sbb
shlb
fistpl
inc
mov
sbb
lea
cmp
insb
dec
shlb
scas
mov
lds
repz
testl
cli
cmpsb
adc
fstl
and
leave
out
lret
scas
dec
adc
pop
rdtsc
test
jl
aam
push
mov
notl
dec
xchg
mov
push
xor
leave
adc
add
and
mov
xchg
mov
lcall
and
popf
aad
add
es
sahf
add
add
jecxz
aas
cs
inc
iret
je
pushf
test
mov
xor
xor
adc
sub
cmpsb
jle
sbb
call
popf
sub
int
sbb
pop
jl
push
negb
push
mov
dec
lds
adc
sti
out
call
aas
mov
mulb
jno
shrb
inc
or
cmp
out
iret
movsl
outsb
push
mov
sar
test
les
add
cwtl
push
add
sub
jl
xor
insb
in
cli
movsl
mov
mov
mov
mov
or
call
add
push
cmc
int
gs
sub
fisubrs
out
pop
push
ret
fiaddl
push
movsb
ret
xor
mov
or
int3
dec
les
idiv
outsl
sarl
bound
popf
pmulhuw
sbb
mov
imul
loop
rorl
xorl
inc
mov
xor
dec
inc
xchg
pop
les
dec
out
popf
mov
add
and
xor
test
mov
aam
jecxz
test
xlat
sbb
daa
mov
and
mov
int
mov
nop
mov
lds
popa
inc
data16
xorb
mov
mov
sbb
pop
fsts
and
and
cmpsb
mov
mov
and
xchg
rorl
fsubrl
bound
dec
jns
das
sub
inc
push
or
xchg
jnp
mov
mov
jo
nop
cmp
or
fistpll
pop
pushf
adc
mul
movsb
push
mov
ja
cmp
mov
lock
into
fcoms
out
cwtl
adc
jo
mov
addr16
outsl
xlat
cmpsl
cmp
movsl
mov
inc
fcoml
lahf
stc
es
xchg
cmpl
push
cltd
inc
sbb
jmp
negl
lret
int
jecxz
test
mov
mov
pop
jbe
xlat
dec
add
lcall
out
fisttpll
scas
xchg
jmp
call
mov
mov
cmp
push
dec
mov
lcall
cli
pop
push
roll
pop
repnz
cltd
fwait
das
add
loope,pt
sbb
pop
xor
jno
lahf
lds
jmp
lcall
sahf
pop
inc
aas
popa
mov
ljmp
lret
popl
sbb
bound
or
mov
push
aam
icebp
add
movsb
lods
shll
iret
in
jae
cld
add
pop
xchg
mov
loopne
cltd
pop
mov
or
push
mov
mov
cltd
xchg
lahf
jg
std
cmp
mov
push
mov
or
mov
mov
notb
add
xchg
adc
cld
xchg
into
or
pop
inc
imul
and
ja
in
and
inc
cs
or
mov
push
inc
in
mov
loopne
addr16
add
or
imul
inc
rcll
dec
das
adc
adc
mov
inc
sbb
adc
inc
adc
ds
jmp
cltd
loop
mov
mov
xchg
shrl
jge
jmp
and
adc
mov
lret
scas
call
push
lock
or
fstpl
cmp
jl
out
loop
add
add
jnp
jle
sbb
pop
add
mov
xor
jp
ror
dec
pop
scas
sub
lods
add
sti
sub
jl
jne
rcrl
jno
into
std
pop
in
sub
imul
in
in
dec
in
imulb
stc
aaa
add
xchg
arpl
mov
cmpsl
cwtl
mov
pushf
adc
mov
rorw
push
nop
or
inc
sarl
notl
lods
mov
test
jbe
pop
cltd
adc
cld
cmp
fincstp
sub
iret
xchg
push
cmp
adc
xchg
inc
out
sbb
stc
inc
mov
push
lds
mov
pop
mov
lahf
jmp
adc
sbb
movsl
ljmp
adc
outsb
imul
fnstcw
mov
jmp
pop
sbb
loope
fsub
movsl
lds
movsb
sbb
xor
popf
and
std
inc
loope
pop
push
mov
in
sahf
push
pop
dec
sub
div
fisttps
into
pop
push
jecxz
mov
lret
lods
pushf
inc
push
cmpsl
dec
xchg
scas
inc
lret
inc
mov
mov
jmp
jae
push
test
mov
hlt
push
or
fbld
in
sahf
mov
mov
jl
jecxz
push
dec
sub
jnp
adc
fsubs
lahf
push
and
into
in
adc
dec
mov
adc
adc
aas
dec
or
sahf
sbb
sbb
clc
je
cltd
sub
in
sarl
xlat
daa
stos
shlb
fisttpl
jmp
shll
lret
dec
imul
pop
cmp
fdivrs
push
stos
xchg
aam
and
je
mulb
sub
add
add
fildl
shll
pop
popa
lods
add
test
cmp
add
ret
xchg
test
adc
xchg
xor
cs
dec
sbb
sarl
je
inc
sahf
out
stc
cmp
aam
nop
xlat
leave
cmpsl
fisubrs
or
add
test
ljmp
sbbl
inc
stos
call
imul
pop
sub
fucom
xor
jl
mov
stc
outsl
lret
pop
lds
lds
sub
shlb
stos
fwait
xchg
add
imul
cltd
add
lret
lcall
mov
mov
cs
arpl
pop
push
imul
jecxz
int3
addr16
xchg
icebp
xor
inc
popf
mov
jecxz
testl
jmp
jecxz
dec
popf
insl
mov
push
out
jb
jmp
fwait
pop
shrb
sub
dec
ss
mov
add
dec
shrl
jo
add
add
sti
outsl
xchg
push
cmp
add
mov
mov
lcall
mov
subl
jp
push
inc
dec
mov
mov
clc
xchg
pusha
loope
scas
test
enter
xchg
jp
xor
xorl
cltd
addr16
inc
sub
push
arpl
push
shrl
mov
dec
adc
int
aad
fwait
mov
sbb
dec
daa
fcoms
sub
adc
add
test
push
popf
xor
ljmp
jmp
data16
dec
cld
add
roll
push
fisubrs
adc
or
imul
mov
cli
jmp
fnsave
jp
mov
jmp
xchg
dec
jmp
ds
push
mov
sbb
aas
cltd
std
cmp
cmp
dec
add
test
or
jmp
popa
mov
into
mov
loopne
cmp
insb
rorb
fiaddl
sbb
push
push
cmp
les
sahf
je
inc
mov
mov
sub
push
int
sbb
dec
add
mov
pop
iret
and
inc
xchg
pusha
push
outsl
sbb
and
add
in
fdivrs
mov
inc
rcll
fbld
sti
add
push
test
mov
inc
mov
inc
mov
push
add
popf
mov
or
jbe
jae
mov
mov
pop
pop
inc
fwait
cmp
sbb
das
inc
cmp
sbb
xchg
mov
or
mov
mov
add
dec
adc
insb
adc
pop
mov
lret
ljmp
push
mov
xchg
inc
xchg
jge
pop
mov
push
scas
mov
fistpll
lcall
cwtl
mov
loope
sbb
pop
pushf
hlt
add
mov
add
jo
mov
aaa
cmp
cmpsl
out
mov
mov
pusha
cmpl
cli
xchg
or
enter
lahf
test
stos
mov
cli
ss
or
gs
push
sbb
lods
mov
out
orb
cwtl
mov
gs
add
loope
leave
lea
sbb
stos
fidivl
loop
inc
cld
lds
push
pop
stos
mov
ret
mov
dec
and
push
pop
rol
jecxz
stc
xchg
iret
jecxz
rol
inc
adc
es
pusha
andl
inc
mov
fstpl
out
in
insb
cmpsb
inc
lahf
subb
inc
jae
or
sub
mov
and
cli
add
sbb
cmp
jle
pusha
enter
shll
push
pop
mov
xor
test
cmpsl
cltd
cmp
dec
push
mov
xor
fcmovnb
mov
fwait
incl
sub
push
les
sub
mov
pop
idivb
sbb
jno
mov
aas
pop
sub
xchg
enter
test
fidivrl
push
sahf
or
movsb
add
ja
dec
sub
aaa
scas
fs
mov
sahf
icebp
sub
repnz
push
cmpsl
int
out
cmp
add
stc
cmp
add
call
add
inc
pop
scas
xor
sbb
jno
xor
call
clc
cmpsl
and
popf
subb
movsb
cmp
sub
pop
bound
ss
lret
xlat
pop
stc
mov
movzwl
in
in
fsubrl
jo
jne
out
lahf
test
out
js
ficomps
dec
fcomps
test
repnz
aas
or
mov
and
push
hlt
adc
inc
inc
jle
inc
xchg
into
sub
mov
push
xchg
mov
inc
sbb
ljmp
and
push
push
jmp
sub
push
mov
dec
inc
or
loope
outsb
cltd
ss
jl
setne
mov
inc
sbb
icebp
nop
bound
mov
cmp
dec
lds
clc
push
xor
xor
outsb
adc
movsb
inc
hlt
mov
sbb
bound
jmp
rorb
adc
popf
add
movsl
call
jne
pop
stc
jmp
js
jno
inc
out
jmp
inc
jnp
dec
jne
andl
aas
mov
daa
push
dec
loop
adc
mov
mov
cmc
lock
outsl
pop
mov
xor
fbstp
fsts
sub
mov
es
pop
test
mov
jbe
fxch
jae
int3
fcompl
adc
test
jbe
bound
inc
dec
stos
sub
adc
arpl
rcl
cmpsl
xor
insl
pop
push
imul
rcr
mov
into
push
pop
js
mov
pop
push
mov
add
sbb
sbb
loop
icebp
repnz
movsb
or
push
ljmp
xor
mov
add
lods
movsl
arpl
mull
dec
or
in
and
mov
cmp
cmp
push
movsb
jno
add
mov
dec
mov
inc
data16
or
jo
jmp
adc
xchg
dec
sbb
inc
repnz
pop
mov
outsb
ret
int
mov
out
or
test
inc
outsb
push
dec
xorb
push
pop
and
xchg
aam
xchg
cmp
bnd
out
data16
push
add
fwait
in
iret
arpl
inc
sub
or
xor
pop
pusha
jnp
push
sti
mov
cmpsl
push
and
pop
loope
xor
cltd
cld
pop
push
mov
cmp
jae
xor
pop
xchg
jle
lds
js
dec
jl
cmpsb
lahf
jno
lret
dec
fs
aam
incb
xchg
dec
xchg
int3
cli
pop
es
inc
mov
add
jl
cmp
inc
ja
clc
imul
mov
inc
mov
sub
or
jge
or
xor
test
cmp
clc
daa
mov
imull
fdivl
mov
and
cmp
adc
pop
mov
imul
xchg
repz
cltd
outsl
stos
jb
mov
inc
lds
addb
movsb
jp
out
add
sar
push
sbbb
jne
dec
push
xor
mov
mov
add
xor
add
repz
mov
aam
outsl
push
xlat
out
insb
shll
mov
jae
push
adc
inc
shrl
mov
negb
or
movl
or
imul
lock
pop
jnp
in
jmp
ret
in
movl
ficoms
scas
mov
and
or
cmpb
leave
sbb
rol
cld
mov
das
adc
bound
dec
fcomip
bound
sbb
xor
inc
das
cmc
sub
das
lds
xlat
rcll
insl
out
ss
sub
push
cmp
dec
xchg
sub
adc
sub
jmp
mov
sbb
dec
inc
arpl
and
addr16
std
push
pop
inc
std
rcr
and
aam
out
stos
sbb
mov
cmp
cli
stc
movsb
push
bound
sub
int
pop
test
stc
test
idivl
je
dec
movd
outsb
mov
xchg
inc
outsl
jne
cmp
mov
adc
jmp
test
stos
aad
leave
enter
call
mov
xchg
movsb
sub
mov
xchg
push
outsb
mov
inc
stos
push
inc
mov
and
popf
dec
in
push
sub
notb
push
jae
dec
mov
not
push
cmpsl
mov
mov
stos
xchg
in
adc
push
jg
gs
inc
mov
icebp
add
fiadds
ljmp
aas
pop
or
fucompp
xchg
pusha
ret
in
xchg
push
xor
int3
in
adc
jb
mov
adc
ljmp
aas
and
or
inc
cmp
pop
sarb
inc
outsl
dec
repnz
fimuls
in
mov
sub
int
addr16
repnz
jb
sbb
dec
jmp
stos
sbb
xchg
or
mov
fisttpll
pushf
icebp
ror
jmp
mov
mov
cmp
arpl
adc
push
pop
movsb
scas
pushf
int3
rolb
adcl
pop
int3
jp
inc
xor
xchg
pop
ds
scas
push
inc
inc
push
xchg
movsb
xor
int3
aad
not
lock
sub
xchg
push
out
out
jle
push
push
ljmp
pop
in
test
movsb
mov
int3
lret
repz
jns
mov
xor
mov
push
mov
pop
inc
ds
xchg
js
xorb
icebp
mov
cs
jecxz
int
mov
mov
mov
outsb
xchg
mov
adc
push
loope
lods
jmp
std
mov
sar
popf
je
hlt
dec
jmp
cmp
cmp
sahf
in
popa
lds
xchg
imul
inc
xor
mov
xchg
mov
push
pop
mov
movsl
mov
mov
stos
xor
pop
pop
add
es
xor
sbb
xor
adc
popf
popf
push
pop
sbb
sub
jl
arpl
cmp
mull
cltd
xchg
sub
sahf
inc
mov
addl
pop
stos
orb
mov
mov
test
loope
jge
sub
pop
stos
dec
ja
pop
repz
or
loopne
jge
aam
inc
cmp
inc
pop
xor
sub
ret
cmovle
les
xor
or
int3
mov
fwait
push
out
std
dec
inc
mov
mov
insl
mov
mov
or
add
mov
jns
add
jecxz
test
mov
test
inc
xor
fistl
push
jp
cmpsb
stc
cmp
ret
popa
aam
jae
dec
call
out
mov
imul
movsl
mov
mov
or
dec
push
pop
pushf
fsubrs
mov
not
das
or
xchg
das
in
enter
sub
hlt
cmp
inc
sbb
cltd
push
sbb
jmp
sub
adcb
jns
and
pop
inc
call
xchg
push
mov
enter
clc
mov
push
cltd
dec
mov
xor
add
xchg
std
insl
mov
add
ret
bound
pmaddwd
call
aam
out
out
pusha
sub
out
push
shr
sti
test
inc
lods
lret
sub
nop
or
sbb
push
sbbb
pop
sub
inc
out
sbb
xor
inc
sub
cmp
outsb
cmp
and
mov
lods
sub
add
adc
sbbb
loopne
mov
dec
cld
push
loop
pop
lret
mov
sub
push
mov
aaa
push
add
je
jae
rorl
es
mov
int3
enter
dec
and
movsb
push
push
xor
cwtl
je
repnz
sarl
sbb
mov
push
in
lods
or
ja
dec
xor
pop
sbb
and
mov
push
jge
cmp
fistps
fisubl
rorl
inc
jge
or
loopne
jp
jecxz
test
sahf
rcll
pop
call
arpl
test
dec
iret
outsb
push
xor
push
mov
xchg
sbb
cmc
out
cltd
mov
imul
mov
sbb
sub
xchg
adc
and
push
dec
out
push
jns
lds
or
cmpl
jl
and
popa
xchg
inc
dec
mov
outsl
sub
mov
cltd
xchg
fimuls
std
imul
movsb
pop
mov
mov
pop
or
mov
push
mov
xchg
mov
ds
mov
fildll
jle
ds
sub
lret
mov
mov
jle
dec
lock
adc
mov
repz
std
push
iret
scas
ret
sti
insl
mov
insl
push
test
repz
jae
cli
cmpsl
sbb
jae
dec
push
mov
loop
pop
cwtl
sbb
mov
jb
insl
in
cmpl
pusha
jb
jmp
jae
jmp
mov
add
aaa
flds
cmp
xchg
aaa
sbb
pushf
lods
jg
arpl
outsl
in
cmp
mov
sub
imul
add
call
cmp
jecxz
inc
mov
fisubl
mov
test
sub
inc
aaa
sbb
xchg
xor
pop
mov
mov
push
pusha
ror
out
inc
addr16
push
lret
lods
xchg
jns
pop
mov
push
shlb
pop
shlb
lahf
jbe
imul
lahf
dec
xchg
insl
dec
push
inc
das
jb
xchg
or
dec
dec
cmp
jbe
xchg
in
mov
insb
cmp
negb
push
lods
cltd
xor
enter
loop
in
shll
cld
aam
inc
sahf
loopne
fadds
push
sbb
mov
adcl
fdiv
mov
mov
dec
bound
or
dec
cmpsl
cmp
adc
addr16
sahf
add
adc
pushf
cmpb
sub
lret
outsb
data16
lock
leave
fsubl
addr16
sub
push
add
lret
add
lahf
mov
in
dec
ljmp
jl
xlat
stc
cld
sub
lahf
inc
sub
imul
dec
adc
pop
jo
outsl
add
adc
std
popl
sbb
pop
rep
in
test
sub
jecxz
aad
nop
add
mov
sub
inc
and
pop
icebp
push
call
dec
or
pop
imul
inc
push
popf
bnd
xchg
sub
mov
gs
push
dec
outsb
jmp
inc
std
stc
jbe
loopne
dec
call
or
lds
out
mov
fs
in
loope
dec
aas
lcall
shlb
lcall
int
and
leave
icebp
mov
movsb
or
pop
add
fwait
or
in
mov
mov
sub
stos
inc
leave
cli
mov
jo
or
xchg
lahf
mov
loopne
pop
scas
mov
lret
nop
or
mov
or
lods
adc
push
cmp
int3
mov
inc
or
and
cld
xor
mov
loope
mov
shl
in
out
mov
lret
or
add
dec
jmp
fdivl
subl
sbb
shll
push
adc
pop
pop
add
fwait
out
out
femms
and
mov
cmpsl
cmp
mov
lods
fbld
push
dec
pop
int
data16
loop
mov
lods
lods
fistpl
test
lahf
cmc
sub
lock
arpl
ljmp
jp
push
mov
insl
sti
mov
adc
xor
out
mov
jp
lcall
test
add
test
scas
int3
in
lcall
inc
xchg
loop
xor
mov
cmp
and
jnp
sbb
mov
imul
call
pop
cmpsl
xchg
adc
sub
test
fimull
aam
xchg
scas
in
mov
gs
mov
mov
call
addr16
push
fadds
in
test
dec
rolb
add
loopne
je
xor
xchg
shl
dec
cmp
lea
xchg
dec
jmp
jne
adc
xchg
inc
mov
jecxz
jns
mov
nop
rcrl
cmc
push
mov
or
fcompl
ret
push
dec
jne
insb
outsl
pop
jo
pop
sub
jge
insl
jecxz
dec
jmp
push
mov
lret
repz
pop
dec
ja
mov
jmp
int3
and
mov
movsb
ja
push
add
sub
sbb
push
xlat
mov
das
adc
mov
push
xchg
and
push
aaa
push
push
mov
push
xchg
insl
psllw
pop
fdivrs
inc
xor
cmp
insl
inc
cmpsl
data16
xchg
mov
dec
hlt
sub
lret
push
aad
cmpb
xchg
add
and
or
popa
das
lret
rorl
cltd
jno
and
outsl
or
mov
sahf
lea
cwtl
fcmovbe
in
clc
xor
jno
js
cmp
sub
loopne
push
mov
cmp
test
out
gs
adc
movsl
lret
and
inc
jg
cmp
fildll
fisubl
in
js
pushw
mov
imul
pop
lock
or
mov
add
ljmp
leave
dec
mov
cmp
sbb
inc
xor
add
jns
push
es
cmpsb
dec
orl
cmp
mov
out
fidivrs
sub
imul
lahf
mov
push
or
stos
xchg
sub
mov
push
les
ljmp
jbe
das
cs
fidivrl
dec
inc
ret
add
stc
sbb
imul
cmpsb
rcr
xchg
mov
mov
mov
mov
outsb
outsb
fdivl
inc
push
xor
cmp
lcall
adc
js
test
setl
hlt
mov
cwtl
fsubl
dec
xchg
outsb
lods
aam
ljmp
push
sbb
add
mov
mov
sbb
scas
popa
xchg
ljmp
lock
push
push
shl
je
pop
hlt
jl
cli
cwtl
dec
decb
pop
lcall
shll
pop
movsl
xor
lods
and
lahf
into
es
and
movsb
sub
sti
sbb
mov
nop
jp
ljmp
rolb
es
int
cmpsl
test
into
ss
movsb
xchg
mulb
pop
daa
push
pop
shll
cmp
out
lret
xchg
mov
jae
xlat
cwtl
fs
add
pushf
sub
xchg
int
jne
je
jmp
mov
cs
movsb
xchg
xchg
jle
out
fsubp
imull
repnz
repnz
fiadds
and
push
scas
jmp
in
ficompl
stos
iret
xchg
add
xlat
inc
ja
push
subb
fcomps
lock
loope
icebp
inc
dec
aam
cmp
jno
mov
or
fs
testb
dec
dec
jge
push
loope
aam
cmpsb
xchg
stos
xor
xchg
mov
bound
xchg
push
into
or
aad
pop
jmp
mov
scas
pop
push
es
adc
js
mov
out
cwtl
fidivs
imul
xchg
out
lea
mov
cmp
xor
add
jge
popa
jg
pushf
gs
pop
sub
mov
mov
mov
mov
pop
negb
inc
sarb
out
dec
adc
add
jnp
nop
mov
inc
gs
sub
cs
add
cli
pop
stos
lds
mov
addr16
and
lret
enter
cmp
ljmp
dec
scas
adc
sbb
xor
pop
and
add
fwait
push
stc
sub
mov
out
xchg
push
or
pop
push
pop
loope
popa
idiv
std
xchg
mov
pop
cmpb
jecxz
add
sbb
adc
mov
sbb
pop
pop
cmp
push
dec
xchg
push
xchg
or
xchg
mov
sbb
pop
imul
mov
sub
loopne
xor
lea
dec
gs
inc
or
and
add
rcll
and
ljmp
out
pushf
aaa
rorb
fcmovnu
jno
jns
xor
and
cmpsl
fisubrl
in
lcall
cmp
lret
cs
adc
loope
sbb
lods
dec
sub
xor
andb
dec
pop
jnp
cltd
lahf
leave
dec
lret
insb
pop
mov
push
mov
mov
into
iret
adc
shr
adc
pusha
and
jno
test
sbb
cmp
adc
mov
lods
ret
gs
xlat
cwtl
add
or
jno
cmp
jmp
fcmovnbe
adc
and
mov
stos
fdiv
mov
inc
clc
adc
mov
jo
nop
call
in
mov
dec
pop
mov
and
imul
jecxz
ss
mov
das
out
sub
test
shlb
sbb
lock
pop
je
sbb
repz
imul
mov
cmp
les
leave
lcall
rcll
imul
or
repnz
mov
inc
lahf
or
out
stc
addr16
ja
mov
fmull
roll
imul
mov
fsubrs
jno
ret
clc
lret
out
sbb
and
cmp
sub
jns
mov
leave
pop
roll
dec
stos
test
mov
enter
mov
ret
adc
into
fsubs
inc
lea
adc
stc
jno
sub
loop
inc
lahf
dec
inc
fdivrs
jg
push
fs
mov
or
imul
pusha
in
cmp
iret
pop
jmp
arpl
jle
jg
int
jp
popf
lret
pop
add
enter
fnsaves
in
aad
and
xchg
push
repz
mov
adc
jl
mov
inc
inc
inc
cmp
insl
scas
cmpsb
cwtl
push
cmpsl
inc
push
xor
js
andb
dec
sbb
mov
in
xchg
jg
push
rorl
push
js
push
pop
cmp
sbb
sbb
inc
add
adc
jbe
outsl
movsb
mov
or
mov
pop
mov
jmp
jmp
loop
and
or
sub
xchg
cmpsl
lcall
and
cmp
je
into
call
enter
inc
ss
cmpsb
test
ds
fdiv
pushf
xor
xchg
sub
orl
dec
adc
jp
push
dec
and
xchg
out
dec
dec
pop
dec
jmp
mov
sbb
adc
mov
jge
jns
cmp
inc
push
dec
cmp
mov
sahf
loop
xor
mov
inc
cli
fidivl
into
cmp
dec
lea
dec
ret
fmul
fstl
ret
sbb
inc
inc
cli
mov
mov
dec
jle
sbb
push
and
movsl
lock
sub
jbe
sbb
add
not
pop
inc
jmp
idivb
mov
sub
aaa
push
adc
movsl
add
xchg
xchg
cmp
xchg
clc
mov
push
popa
stc
lods
xchg
icebp
shlb
dec
jmp
push
xchg
scas
mov
test
jg
pushfw
ret
xchg
shrl
sub
daa
loop
add
mov
mov
mov
mov
nop
xchg
lods
test
xchg
inc
lcall
push
lea
lret
bound
cmpsb
adc
jp
or
mov
fidivrs
js
mov
push
dec
mov
cmp
es
inc
daa
loop
pop
das
lcall
push
add
out
in
int3
jb
cmpsl
hlt
movsb
xchg
ja
mov
cltd
je
stos
xor
add
push
mov
mov
cltd
mov
mov
std
ljmp
mov
addl
cmp
sbb
test
mov
xlat
sub
data16
adc
xchg
movsl
jbe
inc
pop
sub
sbb
xchg
sbb
cmp
add
repz
data16
dec
pop
lea
jp
inc
insl
cmp
out
xchg
and
ds
movsb
jbe
test
sub
je
jg
sarl
mov
mov
in
aad
outsb
fcomip
andb
add
mov
xchg
mov
lods
mov
jb
int3
mov
shl
cld
push
popf
pop
cmpsb
sbb
and
les
out
xchg
shlb
jmp
push
pop
xor
mov
hlt
fsub
pop
mov
xchg
js
mov
pop
inc
xor
jns
or
data16
jg
lods
add
andb
scas
cmp
loop
imul
aas
aad
xor
pop
mov
and
jge
add
stos
add
or
pop
movsl
pop
cs
mov
das
nop
push
cmp
adc
fiaddl
std
xor
xchg
jae
addr16
mov
sbb
and
inc
xchg
and
dec
dec
cmp
sub
push
cmp
cmp
cmc
leave
add
dec
and
inc
sarb
dec
and
out
das
outsl
popf
test
test
cli
adc
xor
stc
pop
and
xchg
cmp
pop
stos
lds
and
xchg
popa
clc
inc
cmp
leave
jb
ret
and
xor
dec
pop
cld
lds
in
adc
xchg
cmpsb
jmp
pushf
pop
inc
jne
pushf
lock
dec
cmpsl
out
in
stos
insb
adc
aaa
mov
or
in
pop
icebp
mov
movsl
mov
mov
shlb
mov
add
js
testl
fsts
insl
cmpsl
sbb
and
or
pushf
notb
sub
lahf
test
jo
push
pushl
fadds
sbb
test
lods
test
shlb
add
jnp
xlat
pop
push
cmp
jg
push
pop
lds
iret
or
mov
pop
jecxz
xchg
hlt
cwtl
enter
mov
jo
ret
mov
xchg
or
xor
lret
fisubs
lods
in
inc
and
in
int
xchg
inc
push
pop
mov
test
test
adc
xchg
in
call
aas
mov
mov
mov
mov
add
rcll
jg
push
lahf
xchg
shll
and
mov
add
jecxz
adc
mov
mov
cltd
push
and
xor
dec
sbb
inc
enter
je
fsubr
push
mov
dec
into
and
lcall
testb
mov
cltd
andb
sarl
adc
xor
dec
out
cwtl
adc
xchg
mov
or
cmpl
sub
mov
jge
mov
leave
inc
nop
mov
jg
push
jbe
jecxz
incl
mov
ds
push
mov
leave
mov
jno
repz
dec
gs
dec
jg
pop
sbb
ljmp
iret
into
mov
cwtl
mov
cmc
jo
decb
imul
add
xor
cltd
ret
pop
mov
lcall
cltd
add
xchg
mov
popa
mov
adc
cwtl
add
jge
imul
sub
jmp
push
cmpsb
rorl
mov
xor
or
pop
fldt
xchg
cwtl
mov
fwait
sub
push
jecxz
mov
or
les
repnz
sub
mov
fisubs
lret
loope
add
ss
pop
pop
push
ret
push
push
mov
dec
xorb
data16
iret
icebp
shll
fistpl
or
mov
adc
daa
jg
and
les
add
stos
fisubl
sub
repnz
sbb
outsl
xor
jg
aam
out
mov
xor
mov
fisubl
pop
xchg
sub
test
scas
adc
push
ret
inc
xchg
cmp
movsl
test
jle
jmp
and
or
lret
test
rcr
addr16
hlt
loop
fldenv
mov
push
movsb
jl
pop
dec
data16
sub
ja
out
xchg
imul
add
test
fldl
addl
ficoml
mov
sub
cmp
sbb
adc
dec
movsl
pop
dec
xor
push
ret
adc
arpl
pushf
add
mov
shl
jl
popf
or
mov
arpl
orl
mov
push
xor
pop
jmp
test
cmpsl
xchg
stos
push
xchg
test
or
faddl
jo
sub
popf
out
push
mov
popa
inc
xor
call
cwtl
sub
mov
sti
cli
or
inc
sub
aam
push
push
rol
mov
sbb
xchg
es
fnstsw
sub
and
mov
imull
mull
pop
cwtl
sbb
dec
enter
fs
mov
jno
shll
fisubrs
push
inc
mov
adc
sbb
js
lods
xchg
cwtl
das
je
inc
adc
insl
xor
and
push
jnp
xchg
outsl
jecxz
out
divb
add
push
jp
adc
pop
push
mov
dec
aam
popf
test
dec
js
addr16
adc
xor
sarl
fldenv
loop
lret
or
addl
adc
imul
inc
push
scas
ljmp
push
imul
aaa
inc
mov
repz
inc
mov
mov
and
repz
testl
fsubrl
push
imull
and
lds
sahf
push
int3
cld
mov
cmp
add
or
leave
push
ret
mov
out
cmp
cmp
xchg
clc
push
inc
ret
ja
jne
xchg
pushf
loop
lret
ret
js
xor
inc
xor
mov
cmp
jbe
xchg
pop
mov
out
lahf
sti
test
lret
and
aam
outsb
xor
add
jno
jbe
cmc
inc
push
dec
js
mov
sub
test
push
fldl
jmp
xchg
add
xchg
jmp
insb
push
inc
lret
pop
in
fimuls
pop
pop
push
frstor
cmp
xor
sbb
dec
sbb
jne
in
cmc
mov
cmp
jp
mov
loopnew
push
int
sub
xchg
jnp
mov
lret
xchg
pop
push
int
sbb
mov
mov
call
dec
dec
popf
dec
push
in
push
frstor
push
and
dec
cmc
push
mov
push
iret
fimull
insl
int
sub
lods
insl
test
pop
movsb
repnz
dec
out
call
out
xchg
mov
xor
cmp
jl
push
into
stos
add
call
fmull
cltd
call
mov
test
decl
adc
aas
imul
cld
jmp
gs
pop
aad
inc
xor
or
mov
out
xlat
lods
push
mov
xchg
ljmp
push
jb
aam
mov
mov
mov
and
adcl
jae
mov
mov
pop
push
aas
cmp
or
push
dec
addr16
std
mov
icebp
out
ficoml
and
repz
sub
js
xor
push
outsl
jo
and
sbb
adc
push
jno
inc
gs
mov
push
and
sarb
incb
pop
into
mov
sbb
jmp
xchg
sub
dec
hlt
fcoms
sub
xor
adc
les
add
fistps
lret
xchg
push
aad
into
add
mov
adc
sbb
movsb
mov
pop
repnz
jge
pop
popa
cmc
ret
sbb
andl
mov
repnz
aad
ficoml
cs
fwait
movsb
das
lret
imul
jae
mov
aad
popf
xchg
and
adc
add
out
xchg
pop
inc
insl
cmpsl
add
sub
fimull
adc
addl
insl
pop
push
xchg
jae
push
in
push
xor
enter
leave
sahf
sti
cs
mov
jns
sub
addr16
cmpsb
aad
add
scas
in
and
sarl
aas
outsb
lret
outsb
sub
sub
sub
push
jp
mov
in
pop
loopne
jno
out
push
sub
mov
mov
jns
out
jmp
dec
addb
ret
pop
add
out
xchg
inc
jo
jle
jge
imul
pushf
mov
cwtl
movsb
and
xchg
out
dec
inc
mulb
inc
sbb
add
push
ret
repz
jb
mov
dec
adc
pop
out
subl
and
jno
xchg
mov
stc
push
cmpsl
mov
sub
push
aad
gs
adc
data16
jns
subb
mov
stc
inc
lret
jns
mov
cmp
jne
push
insb
sbb
loope
leave
cmp
mov
dec
push
xor
icebp
fs
movsb
cmc
push
in
les
xor
pop
jno
mov
repnz
in
push
es
ss
nop
out
push
mov
add
insb
jbe
orl
out
adc
movntq
jge
lock
in
adc
add
sbb
push
jnp
loope
sbb
das
xor
mov
repnz
cltd
test
and
cmp
testb
enter
adc
inc
add
movsb
cmpsb
sbbb
lea
lcall
cmp
sbb
stc
mov
daa
cmpsl
push
pop
xor
jbe
addr16
mov
aaa
cmc
js
inc
sbb
pusha
jbe
xchg
sbb
out
push
aad
mov
shlb
xchg
adc
cli
and
js
in
push
push
dec
sub
mov
mov
mov
aas
sub
bound
ja
fdiv
cmc
fcmovne
out
mov
mov
inc
push
jecxz
push
aaa
xor
arpl
insl
inc
jne
fdivrl
repnz
pop
imul
popf
js
ds
shlb
xor
inc
add
adc
imul
je
hlt
xchg
xor
je
fistpll
push
dec
add
cli
inc
leave
push
je
inc
cmpl
dec
push
inc
push
es
mov
lcall
aaa
sub
in
aas
push
mov
aam
das
mul
dec
push
jbe
inc
js
pop
pop
iret
jo
imul
ret
fsubrs
fldcw
es
push
test
xchg
cmova
xchg
sbb
mov
pop
sub
add
pop
call
cs
pop
cmp
sahf
sub
push
arpl
into
add
sbb
pop
icebp
test
or
pushf
into
andb
divb
mov
lods
inc
dec
add
shrl
jg
jns
and
xchg
xor
push
repnz
jl
leave
stos
dec
adc
movsb
stc
ret
in
jecxz
imul
or
lahf
mov
jle
inc
cmpsl
orb
and
lea
aaa
sahf
add
push
insb
gs
loope
mov
cmc
fwait
or
xchg
sbb
jnp
es
mov
jge
repz
popl
xlat
adc
mov
movsb
xchg
or
test
jg
mov
dec
xchg
idivl
sbb
push
and
mov
lods
repz
cli
or
and
lock
shr
sub
and
nop
xor
inc
scas
or
out
and
or
mov
pop
or
or
out
hlt
enter
fnstenv
testl
or
jg
rorb
jmp
in
cmp
adc
xor
pop
orl
pop
pop
mov
repnz
mov
popa
xchg
jne
push
add
pop
jb
dec
std
add
ss
sarl
shrl
into
jnp
inc
mov
mov
ret
js
ret
and
hlt
mov
pop
nop
aas
fsubl
das
lock
mov
jge
popa
xchg
xchg
inc
ljmp
popa
std
ds
jg
mov
xchg
xor
cs
inc
mov
aam
movsl
test
push
repz
outsb
jmp
loopne
lds
and
xor
outsl
aam
loop
jo
dec
or
addr16
push
jnp
call
test
jns
push
dec
sub
imul
jb
lret
xor
jle
cmp
pushf
inc
shrl
mov
fcoms
hlt
sbb
mov
sbb
xorl
pop
mov
pop
pop
ds
addr16
sbb
sbb
jmp
js
sub
lret
sbb
adc
pushf
cmc
ds
les
cltd
xchg
mov
pop
iret
lods
out
repz
ja
stos
xchg
mov
std
push
fxch
adc
add
fiadds
stos
pushf
mov
int3
push
xlat
or
xchg
dec
aas
in
js
aad
test
leave
jle
mov
mov
repz
mov
xor
mov
cmpsl
or
leave
lret
add
mov
cld
jp
sbb
ds
pushl
and
and
and
scas
dec
scas
lock
test
adc
push
jb
mov
and
out
push
leave
aaa
repz
add
sub
test
jne
popa
or
popa
popf
pop
pop
lahf
xor
ret
icebp
pop
mov
mov
aam
insb
je
lcall
fsubr
sbb
call
clc
sahf
lock
cld
cmc
insb
jmp
inc
ss
call
mov
shrl
push
push
xor
pop
aaa
lods
ss
fdivp
xor
imul
sub
test
mov
iret
ss
cli
scas
mov
rcll
mov
jecxz
cmpsl
mov
scas
xor
stos
inc
add
ret
clc
bndldx
or
adc
dec
les
dec
jnp
testl
push
sarl
outsl
lock
out
jge
faddp
mov
pushf
add
outsb
mov
xchg
sbb
or
nop
lds
xchg
test
jg,pt
mov
mov
jle
pop
sub
xchg
pop
add
ss
mov
adc
adc
hlt
fdivrl
add
jb
cli
subb
adc
push
xchg
lahf
mov
push
imulb
jl
push
cli
xor
ja
rclb
ret
jg
and
xchg
mov
sub
cmp
shl
aad
adc
mov
mov
cmpl
add
cmp
pop
adc
imul
xchg
repz
rcrl
repz
dec
nop
insl
lahf
loop
pushf
push
pop
test
aaa
outsl
jne
fbld
inc
adc
push
lds
les
aas
xlat
jg
js
sbb
pop
test
jbe
inc
jp
or
jno
add
add
ja
xchg
push
mov
ljmp
sti
call
insl
popf
inc
jne
jne
arpl
xor
rcrb
add
arpl
out
iret
sbb
fimuls
aad
push
or
push
jo
movsl
cmpsl
add
inc
test
lea
mov
inc
imul
iret
and
jl
fdivl
rclb
leave
in
sbb
mov
jle
add
stos
inc
pop
stc
mov
xchg
inc
push
add
dec
repnz
fxch
mov
cmp
test
inc
push
jne
sbb
jle
lods
jecxz
jns
push
or
adc
mov
cmpsb
mov
scas
jo
adc
shrb
gs
iret
add
fs
cmc
or
jbe
call
nop
sahf
pop
pop
mov
jbe
ss
cld
es
fsts
add
sub
nop
scas
mov
ftst
ja
imul
sbb
dec
xor
addr16
push
add
push
call
out
lods
sbb
or
jmp
popf
aaa
sbb
hlt
push
sbb
mov
mov
push
jno
adc
pop
dec
aaa
mov
mov
popf
in
mov
jp
jae
dec
xchg
leave
out
and
pcmpgtw
cmc
popf
rclb
push
add
out
out
jg
mov
sub
or
mov
aad
ds
lret
jle
mov
shlb
pop
gs
enter
subb
cmpsl
insb
xchg
or
outsl
pop
pop
sub
outsb
adc
idiv
cmp
push
sub
dec
xchg
mov
jbe
mov
push
lcall
iret
lods
out
pop
ret
into
adc
mov
mov
lods
push
adc
pop
adc
out
sbb
xchg
adc
addr16
adc
adc
pop
inc
addb
add
in
in
insb
xchg
or
aaa
pop
pop
push
jnp
test
push
lods
xchg
bound
jns
cmp
ds
xor
inc
adcb
imul
out
repz
fs
xchg
bound
ret
mov
insl
cmp
and
into
push
fsubrl
inc
jle
daa
pop
pushf
and
mov
mov
pop
mov
push
leave
loope
cld
popa
and
add
cmp
add
cmp
in
lock
cwtl
pusha
icebp
das
xorl
out
or
loop
popa
dec
cmpsl
ss
popf
sbb
push
nop
std
jl
mov
out
cmp
hlt
in
pop
push
xchg
lret
out
movsl
sub
aam
imul
inc
and
push
sbb
fscale
sbb
loopne
xor
xchg
sbb
mov
add
scas
push
stc
mov
pop
sbb
je
adc
dec
jne
cmp
aam
inc
and
ds
sub
inc
mov
sbb
push
subl
imul
lahf
xchg
cmp
dec
test
mov
pusha
icebp
push
sahf
fiadds
jns
enter
push
push
push
jp
xor
jo
adc
shrl
jmp
fcomps
bound
scas
call
sbb
cli
mov
sub
lret
repz
xor
fiaddl
mov
sbb
fwait
sbb
pop
mov
adc
insb
mov
scas
sbb
cmp
and
add
popf
mov
and
or
int3
xorb
fcompl
inc
scas
xchg
add
lock
or
gs
add
xor
cmp
pop
xchg
jg
or
push
push
fidivrs
sub
scas
movsb
mov
adc
out
arpl
mov
push
pop
xchg
dec
lret
and
insl
in
xchg
xorb
push
sbb
fwait
test
icebp
bound
add
ret
lods
icebp
dec
or
jns
popa
cmp
dec
push
push
cmp
mov
test
mov
xor
jmp
shrb
int3
mov
inc
inc
test
mov
sub
and
arpl
cmp
dec
dec
lahf
addl
addr16
sbb
mov
pop
push
les
inc
sti
push
jmp
push
jmp
xchg
popf
inc
clc
lcall
jo
pop
test
sub
cltd
imul
xchg
and
mov
stos
inc
mov
xor
mov
cmc
lea
cmpsl
pop
into
or
or
or
ljmp
scas
test
cmp
sub
jbe
jl
add
sub
call
mov
stos
sub
sub
push
dec
dec
hlt
xor
mov
jmp
lds
scas
pop
sbb
cs
or
popf
adc
lds
data16
mov
jbe
sub
test
lods
jno
mov
jg
enter
nop
int
jo
cmp
stc
jae
test
mov
popa
loop
jp
rcll
je
aas
dec
xchg
bound
mov
dec
clc
push
cmp
mov
pop
gs
repz
cmp
jmp
loope
inc
jecxz
pop
xorb
dec
xchg
mov
and
stos
mov
dec
sbbw
fucom
pusha
into
push
fst
aas
hlt
inc
sbb
ret
adc
test
aam
out
mov
adcl
adcb
idiv
mov
mov
adc
inc
fucomp
in
xor
mov
adcl
xchg
adc
add
data16
enter
push
sahf
xchg
xor
dec
fcmovnbe
push
or
lcall
sti
mov
push
xor
sbb
sbb
fistpll
push
xor
leave
xor
lods
mov
jns
inc
addr16
stc
sbb
or
ror
jecxz
add
ja
mov
lahf
sub
fwait
xor
stos
mov
mov
pop
inc
sub
and
popa
add
xor
and
dec
dec
push
js
rcrb
dec
mov
dec
out
xchg
xchg
fsubp
adc
sub
mov
in
mov
out
and
imul
mov
mov
movsb
fisubs
loop
lods
or
jl
inc
mov
add
movsb
inc
push
mov
jg
push
bnd
xchg
jl
leave
jo
sub
outsl
repz
add
shlb
mov
aas
loopne
outsb
push
jle
je
inc
pause
add
popl
xchg
into
cwtl
add
orb
lea
cmc
jl
leave
test
pop
scas
mov
add
imul
test
pop
hlt
pushf
sub
xchg
adc
loop
sub
adc
jp
push
iret
xchg
pop
icebp
push
jbe
scas
and
stos
into
fdivr
pop
jb
adc
daa
inc
gs
jmp
add
insl
inc
sbb
neg
push
add
xchg
cmp
enter
into
and
push
dec
bswap
sarl
fisubs
scas
pop
aad
outsl
div
mov
ret
sub
xchg
mov
cmp
cwtl
and
cmp
push
rolb
push
ret
scas
aad
mov
dec
jl
repnz
pop
xchg
rcl
mov
out
sub
and
add
dec
pop
dec
call
clc
outsb
ss
dec
pop
sub
cmp
aad
inc
call
dec
sahf
sub
mov
ds
cmp
test
dec
jmp
fistpll
inc
sub
cli
outsl
sub
sbb
movsl
subb
es
and
xchg
xor
dec
jns
aad
and
lret
pop
pop
in
push
repz
push
pop
fnstenv
inc
fildll
dec
mov
rolb
mov
pop
cmpsl
in
add
cmp
push
daa
xchg
test
mov
fcompl
xchg
add
mov
xor
xchg
adc
dec
pop
inc
push
mov
sbb
inc
loope
jmp
sahf
add
or
cli
or
cmpsl
jo
cmp
mov
movsl
or
push
js
insb
dec
lret
mov
sbb
mov
es
jb
sarb
adc
pop
pushf
push
xchg
mov
sub
jb
inc
sbb
sbb
in
pop
mov
mov
lods
scas
xor
adc
cmp
push
add
adc
pushf
rolb
mov
xchg
fistl
out
xchg
jno
mov
inc
cld
stos
mov
lcall
pop
cmp
xchg
lret
shrl
js
jmp
inc
add
jge
aas
in
sub
sbb
notl
das
out
cmp
ret
mov
lock
gs
jb
xor
ret
adc
cmpsl
int
push
js
jae
call
imul
pop
loope
fwait
ret
and
xchg
or
cld
mov
cmp
xchg
test
scas
ret
mov
subl
dec
mov
cmpsb
aas
das
fistps
sahf
mov
flds
loop
and
mov
xor
pop
test
stos
mov
mov
and
out
mov
xchg
movsl
cmp
shll
mov
adc
jecxz
mov
cmpb
fnstcw
inc
shrb
pop
xchg
int3
jno
or
ret
pop
icebp
sti
shll
je
inc
lods
frstor
mov
mov
push
push
cltd
pop
scas
out
aad
lock
mov
nop
dec
pop
push
jbe
call
push
adc
int
aad
cld
cmp
jb
mov
imul
fcomip
jb
or
pusha
ja
pop
cmp
dec
arpl
push
addr16
scas
mull
imul
sub
pusha
jns
mov
jg
ret
idivl
dec
sbb
push
pop
fsubl
lods
push
cmc
pop
jge
insb
mov
jno
sub
dec
pop
push
jno
sbb
and
addr16
jmp
lcall
pusha
roll
shl
or
mov
inc
ss
mov
xor
adc
jo
enter
addb
aad
int3
andb
out
aaa
mov
mov
scas
leave
in
lods
lret
les
pop
ret
or
int
jp
in
inc
adc
loope
andl
add
pushw
push
sub
inc
je
ret
ret
nop
sbb
inc
sti
pop
push
xor
jno
cmpsb
ret
stc
pop
and
shrl
adc
pop
pop
push
jae
sahf
into
mov
lods
inc
jmp
ret
sub
loope
sbbl
std
js
jmp
aaa
fs
arpl
lea
dec
and
jmp
aam
loop
sarb
inc
or
test
js
jmp
push
hlt
pop
mov
cmp
jns
mov
mov
push
and
xor
lret
iret
xor
lds
add
cwtl
fidivl
movsb
add
clc
leave
nop
pop
pop
sbb
jno
or
jbe
xchg
cmp
push
mov
aad
mulb
negl
loopne
sbb
adc
sub
push
lods
push
sub
sbb
adc
inc
movsb
ss
push
push
or
scas
sbb
shl
jb
movsl
stc
push
sub
mov
data16
xor
and
aas
icebp
fstpl
cmp
aaa
pushf
ret
into
mov
lock
leave
arpl
dec
push
mov
rorl
out
pop
fdivrl
mov
cmpsb
jl
js
jge
mov
mov
inc
insl
cwtl
mov
in
xor
push
push
push
insb
jle
inc
mov
movsl
add
jnp
adc
inc
xor
push
cmpb
jmp
sbb
sub
test
sub
stos
imul
xor
mov
inc
sub
jge
stos
adc
fwait
cltd
nop
popa
loope
subb
shll
data16
jb
imul
sbb
jmp
or
cmc
decb
insb
scas
enter
push
mov
adc
pop
popf
js
cmpsb
pusha
sahf
xchg
sbb
xorb
adc
daa
int3
pop
mov
inc
mov
xor
fstl
lods
sbb
clc
cmpsl
clc
lds
mov
aam
mov
pop
mov
fiadds
scas
dec
xchg
sub
fs
cltd
push
jp
push
mov
fistpl
mov
add
fs
sub
jl
sub
out
lods
adc
cltd
xor
sbb
mov
daa
jo
mov
cltd
mov
xchg
mov
in
cmpsb
ja,pn
loop
dec
push
push
dec
fdivl
sahf
mov
loop
inc
fcmovbe
movsl
in
mov
sbb
inc
pop
push
call
or
shlb
mov
mov
fsubl
jb
push
imull
test
icebp
pop
popf
pop
lds
test
out
into
int
mov
mov
gs
mov
jns
sarb
pop
mov
inc
jp
sbb
dec
fs
lods
mov
sbb
daa
ret
dec
movsb
repnz
das
mov
mov
loope
stc
xchg
lds
add
mov
lret
xor
jg
insl
inc
xchg
inc
out
test
and
outsb
call
outsb
mull
pop
dec
inc
adc
jns
aas
sbb
iret
dec
int3
lahf
dec
add
push
dec
jae
jnp
add
jp
sub
jp
int3
sub
in
or
pushf
add
xor
lahf
or
xchg
xchg
stos
inc
push
fs
mov
adc
push
lcall
jmp
mov
movsl
enter
imul
push
notl
shrb
repz
adc
sbbl
imul
pop
mov
or
repnz
shr
loopne
or
xchg
out
pop
movsl
xchg
fnstcw
mov
pop
xor
inc
into
loop
cli
mov
mov
jge
lret
test
out
arpl
inc
mov
outsl
mov
clc
or
sub
pop
sub
in
jo
insb
jno
lret
bound
pop
and
jle
dec
dec
lea
jp
sar
push
mov
das
in
inc
adc
or
xchg
sbb
fwait
adc
inc
fsubs
mov
shlb
mov
test
lret
mov
cmc
inc
xor
std
jo
call
add
and
add
xor
mov
and
xor
fdecstp
sbb
subb
inc
push
mov
sbb
movsl
cmp
pop
push
jp
clc
xor
pop
ja
or
ret
pop
inc
arpl
fstpt
xor
cmpsl
xchg
rcrb
adc
mov
jge
sub
jmp
dec
lock
jg
mov
push
lret
jle
icebp
cmp
mov
sbb
test
add
jns
push
cmp
pop
xchg
adcb
js
scas
outsl
mov
xor
mov
dec
movsb
call
xor
xor
in
add
inc
xlat
sub
push
loopne
jns
adc
cmp
sbb
in
ss
xchg
mov
decb
stos
xor
adc
push
lcall
imul
push
leave
sub
adc
fcmove
or
jb
sbbb
movsb
repz
and
cwtl
inc
out
fisttpl
xchg
cmpsl
ret
push
sbb
inc
sbb
and
iret
add
pop
xchg
adc
push
or
push
push
or
and
js
or
xor
std
mov
cmp
jge
loopne
insb
sbb
test
add
int
pop
loope
dec
sub
or
cmpl
push
cmp
ret
fbstp
inc
mov
aaa
cmpsb
mov
pop
mov
stc
icebp
sbb
mov
xchg
xor
pop
cmp
arpl
fisubrs
push
ljmp
cmp
cs
data16
xor
mov
dec
insb
jp
push
xor
cmp
sbb
mov
jge
jne
sub
dec
push
sti
icebp
mov
outsb
addr16
mov
inc
pop
jg
cs
mov
in
in
xchg
mov
push
xor
or
shl
mov
hlt
popf
es
mov
lret
sbb
jbe
xor
inc
push
andb
addr16
jle
and
mov
jne
xchg
fcoml
loop
cmp
jo
dec
test
xor
pop
xlat
clc
sub
pop
or
in
cmp
cs
pushf
adc
je
js
bound
dec
add
fwait
lcall
or
jno
xor
out
jnp
pop
and
jno
imul
ds
lds
jb
andl
pusha
push
insb
push
xchg
out
pusha
fwait
mov
mov
movsb
pop
or
ret
cmpsb
and
dec
js,pt
add
loop
cltd
ss
je
pop
mov
cmp
negb
and
xor
jp
mov
lods
mov
mov
jecxz
leave
aad
sti
pop
xor
or
xchg
cmp
xchg
mov
bound
jmp
outsl
cmpsl
les
pusha
inc
ret
adcl
inc
mov
into
gs
xor
or
mov
add
inc
scas
push
and
ja
push
mov
adcl
out
in
in
cmc
jle
lret
je
jno
lock
out
jle
subb
shlb
adc
cmp
add
iret
stc
je
clc
cwtl
add
scas
sbb
cmc
xor
aas
and
roll
rolb
std
jae
and
call
hlt
mov
xchg
out
pop
mov
sbb
insl
push
cmp
loope
call
xchg
scas
sub
or
dec
or
mov
sub
cltd
ss
mov
jmp
push
adc
aad
mov
jge
mov
pushf
pop
rolb
inc
sahf
mov
push
pop
aad
repnz
push
xchg
sbb
sbb
dec
mov
mov
bound
cs
push
cwtl
fisttps
xor
add
fs
mov
and
lret
lods
test
dec
incb
pop
inc
dec
sahf
sarb
mov
fs
ret
mov
xor
xchg
mov
cld
sub
pushf
inc
dec
sbb
adc
lret
imul
cmc
fdivr
mov
mov
arpl
popa
mov
push
fcmove
mov
insb
inc
mov
xor
mov
xchg
jbe
ret
scas
lds
aas
or
out
mov
repz
or
jecxz
inc
add
add
pop
fimuls
sub
sub
dec
leave
and
mov
loope
sbb
jecxz
stos
inc
jge
push
sbb
mov
test
pusha
fidivrs
test
mov
into
or
sarb
push
aas
pop
lds
mov
add
pop
negb
xor
jns
push
jo
das
rcrl
inc
mov
mov
adc
js
sub
mov
jle
sub
cltd
faddl
sbb
jecxz
xor
mov
in
movsb
fisttpll
sbbb
push
imul
pop
push
cmp
or
mov
cwtl
xlat
les
cmp
mov
insl
mov
xchg
orb
inc
lods
cmp
daa
dec
bound
test
xor
jl
scas
nop
adc
or
add
aas
pop
cmc
imul
sub
test
ficoms
inc
cmp
xlat
or
cli
ss
arpl
cmpsb
fcomp
add
jns
stos
push
cmp
sbb
cmpsb
sbb
mov
mov
pusha
jg
push
fimull
sti
sbb
hlt
pushf
jle
mov
xor
mov
out
dec
mov
into
mov
shrb
add
divl
test
nop
scas
add
test
mov
iret
loope
mov
mov
js
push
inc
push
adc
jbe
lods
test
gs
jp
iret
mov
xchg
jmp
sub
xorl
inc
in
jns
dec
sub
add
mov
push
pop
cltd
insl
xchg
dec
je
mov
pop
les
inc
shl
add
jmp
add
cmpsl
stc
lcall
jne
popa
and
clc
imul
subb
cmp
test
add
ret
push
jecxz
mov
dec
hlt
jne
cmpsb
pop
xor
inc
inc
movsb
inc
jno
icebp
push
pop
loopne
mov
idivl
jbe
adc
fistpl
xor
pop
mov
xchg
mov
int3
inc
pop
outsb
mov
push
mov
cwtl
jnp
or
dec
in
icebp
leave
sahf
push
mov
icebp
mov
sub
mov
xor
jmp
lock
cmp
add
arpl
inc
push
in
mov
pop
pop
push
roll
cld
mov
dec
imul
mov
ds
in
adc
js
or
sub
fadds
cmp
push
push
cmpsl
cmpsl
lods
or
js
xchg
sahf
cmp
cmp
in
testb
vpmacsww
mov
mov
iret
push
pop
xchg
rcl
add
or
cld
je
aas
out
pop
xor
sub
lahf
clc
js
lcall
in
sbb
or
sbb
fcmovb
mov
sar
cwtl
pop
ds
inc
pusha
pushf
jne
ss
push
mov
xor
lret
out
jns
into
bound
pop
iret
icebp
dec
sub
pop
loop
les
aaa
imul
mov
insl
loop
int
rorl
inc
les
add
adc
out
cld
lcall
insl
clc
out
xor
xchg
jp
repnz
inc
xchg
mov
inc
mov
outsl
mov
xchg
mov
pop
inc
sub
xchg
dec
mov
stos
loope
fcmove
mov
jge
das
adc
lret
fcomps
addr16
dec
sub
and
or
push
cmp
or
out
cmc
dec
es
or
loope
pop
push
xor
pop
mov
pop
mov
adc
fbld
push
add
cmc
pop
xchg
mov
dec
pusha
mov
dec
add
call
mov
sbb
andb
add
inc
ret
fnstsw
call
mov
je
cmp
js
xchg
aaa
jmp
std
mov
inc
xor
xchg
insl
add
aam
xchg
dec
inc
stc
pop
cmc
inc
ret
ret
xchg
cmp
adc
pop
test
lret
icebp
cli
or
fisttpl
repz
and
aaa
mov
int
nop
push
aaa
test
sub
sub
in
push
xor
cmp
dec
jl
shrl
bound
mov
cs
push
xchg
adc
imul
adc
mov
movsb
push
add
xchg
xchg
xchg
and
sub
pop
mov
mov
mov
push
xchg
addr16
movsb
lret
mov
pop
mov
shl
xor
pop
std
icebp
jl
ret
mov
sahf
push
sbb
in
or
sbb
inc
xorl
andl
jmp
sub
mov
aad
stos
cwtl
dec
cmp
pop
push
cld
mov
dec
pop
mov
insb
mov
adc
cmp
mov
mov
jl
cmp
out
dec
imul
inc
hlt
aam
outsb
test
xlat
scas
cmpsl
or
aaa
arpl
add
out
or
cmp
ficoml
xchg
les
add
and
mov
mov
cmp
outsl
test
push
lock
or
push
pop
xor
pushl
lret
out
stos
push
ss
js
ret
repnz
daa
insb
pop
fisttpll
pop
mov
mov
ret
in
dec
sub
ds
xchg
pop
pop
push
xor
push
dec
loopne
jbe
loope
jp
pop
test
stos
rcrl
out
jnp
clc
test
pop
sbb
outsb
and
jle
ss
mov
mov
fwait
out
xchg
xor
lds
push
movsb
into
sbb
mov
imul
jl
and
mov
xlat
arpl
data16
jbe
ljmp
jbe
mov
xchg
sbb
fstpt
mov
daa
popf
test
jl
lcall
mov
mov
xchg
pop
cwtl
sub
dec
data16
xlat
cld
mov
xchg
clc
xchg
xchg
cmc
xor
cmp
xchg
xchg
xchg
sub
loop
inc
jp
movsl
sbbb
movsl
xchg
es
mov
fwait
bound
cmpsl
repz
fsts
pop
roll
hlt
into
out
out
or
or
mov
cwtl
outsl
fisubrl
push
std
test
fcoml
add
std
pop
jb
sbb
jmp
xchg
inc
and
lea
pop
sbb
or
mov
sbb
jl
iret
ja
inc
lods
jl
pop
stos
adc
pop
ds
mov
popa
sbb
mov
inc
mov
imul
sub
xor
jl
inc
aaa
dec
xor
mov
subb
scas
jg
mov
inc
pop
mov
jecxz
cli
dec
addr16
push
inc
jle
sub
cmpsb
push
and
push
sub
sub
push
stos
sbb
pushf
pop
adc
arpl
jns
dec
lret
lret
jnp
lds
fldl
jge
or
push
inc
mov
es
popf
fs
test
or
std
cltd
push
adc
paddd
idivl
sti
aam
xchg
rcrl
cwtl
inc
aad
ja
adc
dec
bound
pop
mov
icebp
pop
enter
lahf
es
sbb
pop
add
jo
or
outsl
jmp
add
push
push
mov
aaa
ret
imul
xorl
clc
popa
cltd
xorl
pop
mov
and
cmpsb
ljmp
jno
in
xor
push
mov
or
mov
jle
sub
mov
mov
imul
inc
cmp
pop
xor
icebp
int
pop
push
xor
and
arpl
and
add
mov
movsl
dec
jae
mov
adcb
cmpsl
bound
inc
mov
jbe
add
enter
negl
xchg
ficoms
sbbl
int3
jmp
or
pop
scas
and
mov
fstpt
add
sub
fadds
dec
insb
jg
cltd
adc
adc
sbb
pop
repz
and
pop
call
push
and
jecxz
arpl
push
loope
pop
lahf
ret
aad
sbb
mov
jns
and
push
xchg
jbe
das
push
ret
cmp
or
aad
arpl
aas
jg
jl
icebp
sbb
jnp
mov
add
into
fcoms
js
jl
mov
scas
mov
cwtl
je
jecxz
sbb
call
les
pop
mov
and
mov
stos
cmp
repnz
jle
iret
lea
pop
dec
test
psrlq
sbb
int
jge
in
push
xor
in
pop
lock
xchg
xchg
jp
jmp
mov
dec
cmpb
lahf
ret
fisttpll
lahf
pop
ljmp
lods
test
fmuls
out
jae
jle
in
rcll
mov
xchg
enter
mov
fsubr
mov
popa
jb
and
mov
aas
jecxz
and
outsl
fidivrs
insl
cmp
jnp
sub
scas
pusha
pop
lret
nop
jne,pt
pop
add
mov
jae
sbb
ret
or
cmp
repnz
aaa
enter
push
sub
or
and
pop
mov
push
aam
out
pop
leave
ret
data16
lds
xor
aam
ds
mov
adc
sarl
push
stos
xor
dec
mov
jle
add
imul
repz
cmp
stc
xor
jg
xchg
sbb
in
pop
dec
aam
icebp
insb
adc
xchg
push
inc
adc
mov
mov
adc
add
cmpsb
out
jb
xchg
xor
push
dec
pop
mov
jae
dec
repz
add
lods
outsb
xchg
outsb
stc
faddl
mov
push
xor
out
pop
inc
into
jmp
xchg
clc
pop
cmp
js
push
dec
inc
sti
sbb
stc
test
and
addr16
test
jecxz
and
lods
jno
mov
inc
mov
jns
into
movsb
hlt
dec
sbb
subb
xor
xor
ljmp
ret
cmp
arpl
sbb
sahf
jge
cmp
mov
mov
cwtl
repnz
push
insb
insb
sub
push
jmp
push
jnp
jle
cmova
imul
mov
iret
add
adc
inc
xor
jg
fildll
jae
mov
cmpsb
out
movsb
pop
rclb
out
push
lret
pop
pop
push
push
movb
lea
xor
cli
cld
das
sub
cmp
push
push
into
pop
mov
popa
and
es
int
jle
add
mov
test
mov
das
sbbl
mov
cmp
out
lds
inc
adc
mov
mov
mov
jge
inc
xchg
adc
pop
dec
inc
adc
fmull
xor
out
xchg
add
jecxz
scas
cmp
jbe
add
je
popa
insl
call
clc
shll
jge
pinsrw
lock
loopne
popa
and
iret
and
mov
pop
fsubrs
sti
mov
mov
test
mov
sbb
std
stos
sbb
and
in
sbb
int3
jl
gs
adc
dec
jno
mov
stos
pmaddwd
or
jb
cli
adc
jg
mov
sbb
adc
and
icebp
push
pop
sbb
mov
dec
jle
int
and
push
pop
xchg
mov
push
add
push
jecxz
or
lods
cltd
imul
sub
adcl
cs
enter
push
jne
adc
adc
nop
add
lods
insb
or
popa
imul
ss
sahf
in
ret
and
mov
mov
xchg
data16
hlt
and
cli
xor
mov
negl
fmull
test
rorl
shl
pop
pop
mov
mov
push
shll
add
mov
inc
xchg
pop
inc
mov
adc
sub
mov
bound
sub
and
or
vmovsd
dec
pop
imul
subl
pop
fcoml
add
push
add
insb
mov
mov
mov
mov
roll
and
clc
bound
dec
add
int3
and
cmpb
bound
out
lods
xor
bound
or
xor
mov
arpl
sub
fwait
popa
cmc
adc
adc
loopne
adc
mov
xor
out
ret
or
inc
xchg
inc
aad
pusha
mov
loopne
sbb
ss
sar
push
jecxz
hlt
dec
imul
mov
sbb
mov
lock
or
sbb
cltd
mov
sarb
mov
dec
jnp
call
dec
add
push
xor
inc
and
inc
dec
mov
jle
movsl
subb
out
stc
pop
les
push
mov
sarb
xor
lods
adc
inc
or
lods
ret
dec
xchg
lahf
jecxz
or
pushw
bound
dec
xchg
lret
and
stos
jb
rorb
push
and
push
add
mov
inc
xchg
or
jae
or
jo
movb
mov
cmpsb
pop
and
ja
data16
push
stos
add
leave
fs
push
mov
sub
fnstsw
pusha
fyl2xp1
ja
aaa
add
push
ret
es
mov
leave
jbe
mov
and
std
loopne
hlt
ficoml
mov
mov
mov
movb
sub
sbb
loope
mov
sti
sub
rorl
loop
pop
push
cltd
and
aam
jae
mov
call
divl
inc
xor
jecxz
imul
test
roll
inc
imul
jnp
mov
out
jae
lret
insl
cltd
movsb
adc
stos
jbe
push
adc
pop
and
mov
xchg
dec
repnz
push
mov
mov
test
sub
shlb
sbb
ljmp
push
mov
js
jnp
mov
xchg
cltd
pop
cmp
xor
movsb
jns
dec
xchg
ret
push
std
sub
dec
repnz
cld
dec
jl
xchg
cmp
rcrb
icebp
js
xor
stc
das
or
mov
addr16
repz
inc
mov
loopne
sarb
push
mov
mov
out
imul
pop
adc
outsl
pop
shlb
movsb
dec
lods
dec
mov
or
lahf
jnp
in
movsb
xchg
pop
jns
push
addr16
pop
add
push
nop
dec
enter
push
mov
xchg
pop
lahf
mov
lods
jb
cmp
pop
enter
add
insl
mov
aad
aad
xchg
addr16
push
pop
fisttpl
roll
lds
push
jnp
xchg
xor
int
scas
mov
sbb
ds
mov
loop
and
pop
call
scas
jmp
stc
mov
frstor
int3
clc
popf
mov
clc
sbb
hlt
pop
adc
pop
cmpsl
jge
outsb
xchg
push
xor
jp
jmp
jnp
cld
mov
popa
jne
dec
sub
cmc
sub
and
lret
adcl
xor
mov
xchg
jne
daa
fs
sbb
pop
cmovno
stos
pop
jg
aas
cmp
cmp
lock
mov
cmp
push
or
lret
dec
mov
pop
and
sbb
movsb
jl
push
inc
xor
adc
popf
lock
scas
imul
cld
repnz
aam
adc
js
inc
mov
cmp
inc
xchg
xor
in
fldcw
xchg
aas
mov
push
or
das
pop
pop
cmp
cmp
loopne
pop
mov
lods
dec
mov
fdivl
xor
mov
int3
fstpt
cwtl
and
arpl
fsubl
xchg
or
xchg
scas
pop
das
dec
xchg
andb
xchg
int3
enter
push
retw
xchg
and
rcll
push
jbe
es
push
neg
aas
mov
fldenv
hlt
cmp
inc
fisubs
pusha
xlat
sbb
pop
in
mov
sub
fstpt
jne
sahf
cmp
jp
cltd
push
push
jmp
sbb
orl
cmc
xchg
outsb
inc
fistps
inc
push
in
sub
cmpsl
push
xchg
push
out
loope
scas
mov
lods
fwait
aaa
cld
add
push
mov
inc
cltd
pop
adc
dec
shrl
inc
cmpsb
repnz
cmp
add
pop
or
xchg
dec
mov
bound
movsl
ret
ss
fwait
addb
jne
es
imul
push
add
dec
and
xchg
mov
fdiv
fisttps
scas
push
cmpsb
test
mov
sub
jecxz
adc
inc
mull
test
lods
in
loop
lcall
bound
mov
inc
mov
iret
mov
pop
inc
comiss
xchg
out
ret
pop
push
stos
test
mov
rcrl
xchg
inc
dec
rorb
mov
pop
xchg
negb
popa
sbb
jb
sbb
outsl
pusha
rcl
js
outsb
push
sub
movsb
push
fwait
jo
outsl
sbb
or
jnp
out
push
jmp
mov
push
inc
sub
inc
push
jno
lods
out
adcl
cmp
sbb
inc
hlt
or
xor
scas
or
push
cmp
pop
insb
mov
pop
sahf
sub
orl
aas
xor
out
cmp
lret
dec
fists
out
add
xchg
out
aas
aas
fcomps
push
flds
rcrb
push
rcr
shrl
es
gs
lea
pop
loope
mov
fdivr
inc
js
cmp
push
js
cmp
inc
mov
rclb
jle,pn
mov
lahf
jns
leave
or
pop
pop
fs
mov
xor
mov
pop
test
or
insb
cmp
mov
and
pop
enter
adc
xchg
mov
jnp
pop
push
push
mov
imull
lods
adc
nop
lahf
je
sarb
stos
inc
add
inc
stc
adc
aam
addr16
test
sub
mov
fisubl
xor
pop
pop
add
and
repnz
sub
fs
and
in
je
rorb
fldenv
std
add
imul
stos
cld
mov
dec
test
fisttpll
cltd
cmp
in
sub
or
das
in
in
pusha
out
sbb
cld
out
aad
aaa
ret
aad
xchg
inc
or
pop
xor
dec
cli
test
test
push
ja
mov
pop
add
add
js
mov
ret
jae
xor
lods
sub
push
stc
sub
loop
lcall
icebp
aad
dec
rcr
pop
loope
jge
lahf
stos
mov
inc
dec
dec
addb
repnz
mov
daa
lock
push
scas
xchg
imul
mov
jmp
cli
mov
test
and
cld
test
push
push
jle
mov
jmp
outsl
sarb
lea
movsl
cmp
shll
es
out
ret
lret
dec
dec
jp
cmp
mov
pop
imul
insl
into
lcall
and
mov
addr16
filds
subl
mov
sub
cmp
popa
xor
andb
inc
sub
repz
shl
cmp
sub
push
add
sbb
sbb
cmp
mov
subl
xchg
jo
sub
add
add
shl
cmpsb
lahf
test
bound
in
jl
xor
or
test
jmp
xor
jbe
push
dec
pop
pop
clc
insl
aad
or
mov
sub
stos
or
dec
pop
push
les
mov
aas
inc
gs
sbb
sbb
xchg
pop
mov
mov
inc
push
pop
aas
jae
mov
sbb
jbe
imul
popa
int
ror
push
and
add
xchg
cld
pop
addr16
fists
jns
and
imul
sahf
lcall
ret
xchg
jb
jb
xchg
dec
mov
ficomps
mov
jmp
dec
ss
mov
in
mov
pop
mov
fisttpl
or
push
push
call
ljmp
push
cmp
outsl
out
sbb
xlat
xchg
mov
mov
nop
mov
clc
dec
insl
lret
pusha
ds
aas
jmp
pop
repz
test
inc
adc
je
test
movsb
adc
cmpsl
loope
mov
pop
jb
les
sbb
cmp
cmp
cld
icebp
push
xchg
gs
push
inc
dec
mov
fnstsw
int
cld
xor
push
decl
clc
int
xor
mov
jmp
insb
jne
adcl
xchg
or
mov
pop
insl
idivb
ret
scas
jmp
fcoms
out
dec
mov
xchg
sti
int
inc
dec
adc
lcall
add
sub
push
scas
push
hlt
add
sbb
dec
xchg
lock
inc
fbstp
fmull
pop
imul
and
outsb
jne
mov
test
mov
sbb
push
xchg
inc
iret
hlt
lcall
adc
scas
inc
mov
orb
imul
jb
call
sahf
fst
in
xchg
fistps
inc
add
mov
cltd
and
in
int3
aas
std
sahf
sub
xchg
test
xchg
lods
lods
fimuls
mov
or
mov
sub
xchg
xchg
dec
lds
imul
sbb
cli
bound
inc
push
adc
int3
jnp
or
in
call
xor
aas
stos
push
mov
cmpsl
cli
inc
sub
jae
in
addb
dec
pop
aad
mov
push
or
dec
pushf
xor
mov
xchg
and
mov
push
or
leave
ficoms
cmc
inc
mov
adc
or
push
mov
aas
add
in
jg
iret
test
mov
lret
out
aam
pop
pop
hlt
hlt
inc
cmp
lahf
pop
js
or
push
outsb
ficoml
nop
push
divl
loope
imul
lds
mov
lods
mov
cltd
popa
push
sbb
movsb
sbb
adc
or
int
and
pop
xchg
sarl
loopne
sti
lret
lahf
lock
orl
sbb
pop
xor
repz
movsb
and
mov
hlt
jae
daa
mov
leave
ficoml
cmp
inc
enter
orb
mov
rcr
cli
ret
into
push
arpl
sub
add
jne
push
stos
cmp
dec
pushf
ja
icebp
bts
sub
shlb
mov
movsl
add
ret
xor
and
inc
dec
mov
sahf
sbb
mov
ret
lahf
addb
arpl
pushf
iret
add
pop
push
movsb
lea
insl
push
rorl
call
mov
stos
or
insl
int3
insl
mov
cwtl
mov
addr16
sbb
scas
hlt
mov
jo
rorl
out
ror
pop
mov
movsl
sarb
adc
xor
pop
and
jmp
pop
add
adc
xor
mov
lock
sarb
mov
es
mov
in
fs
imul
cmp
mov
push
add
xor
fistps
sub
testb
fisubs
mov
mov
stc
pop
push
or
push
jo
push
sub
stc
push
out
fs
in
fisttps
xlat
cwtl
or
mov
push
mov
sbb
inc
fwait
cmp
fdiv
pop
push
loopne
testl
adc
and
dec
repnz
xlat
pop
inc
mov
in
and
xor
out
cmp
inc
mov
inc
mov
je
pop
add
data16
in
jle
outsl
out
jmp
sbb
and
test
icebp
mov
push
arpl
aam
xor
push
sub
inc
mov
adc
sbb
fwait
pop
push
adc
dec
jle
aas
push
outsb
loope
inc
mov
out
cmpl
and
push
pop
es
add
sub
dec
pop
jge
es
add
jae
pop
stc
xchg
lahf
pop
mov
loop
rolb
stc
insl
mov
cmp
dec
mov
stc
mov
orl
jnp
push
sub
shll
loop
in
push
push
sub
cmpsb
adc
adc
fsubp
mov
add
inc
ljmp
sahf
and
cli
or
dec
jbe
movsb
dec
pop
sbb
dec
imul
call
xor
push
or
cwtl
rcrl
push
repnz
arpl
stos
and
sahf
and
aaa
or
sub
test
push
jne
mov
jmp
pop
pop
sbb
add
mov
in
inc
ret
fucomip
jae
xchg
fisubs
xlat
jg
cmp
fildl
lcall
shlb
mov
sbb
jmp
stos
mov
aas
hlt
call
mov
loopne
add
and
jb
xorb
jns
xlat
xchg
sub
jmp
sbb
rol
push
imul
jecxz
ljmp
jp
insb
inc
mov
xchg
enter
cmp
xor
inc
add
ret
cmp
mov
xchg
sbb
mov
lods
fisubl
ret
loopne
fxch
hlt
cld
dec
out
inc
fs
int
or
inc
push
out
push
mov
ret
ret
aaa
pop
jge
test
fsubl
jnp
icebp
les
inc
daa
inc
pop
ror
sbb
mov
and
insb
add
or
and
dec
aam
adc
push
sti
xor
dec
inc
push
sub
shll
or
mov
cmpl
dec
fwait
fs
or
mulb
fyl2x
push
push
icebp
mov
dec
loope
xchg
movsb
mov
into
jle
mov
sub
test
adc
test
sub
xor
and
sub
push
data16
inc
lock
jmp
js
and
mov
cmc
jno
in
inc
std
scas
mov
cs
and
ret
jo
lea
xor
jle
mov
sbb
stos
cmc
out
mov
jb
adc
faddp
add
pushf
jecxz
ret
sub
mov
dec
not
xor
add
aaa
push
mov
rolb
es
stc
adc
cmp
xchg
mov
and
or
pop
mov
nop
popa
leave
sti
rsm
mov
add
xchg
test
popf
xor
lods
adc
mov
mov
aas
pushf
pop
addl
cmp
pop
cld
fdivs
xorl
sub
or
outsl
repnz
scas
lods
clc
in
xor
in
lock
icebp
pop
or
insl
imul
add
and
pusha
out
xor
pushf
les
push
cmp
aas
push
or
in
enter
call
ljmp
xor
cmp
inc
sbb
lahf
pushf
add
push
aaa
mov
add
xchg
lods
xchg
aas
imul
mov
fnsave
loopne
sbb
xchg
push
cmc
subl
cmp
pop
ret
insb
xchg
pop
mov
pop
push
mov
pop
and
cmp
aam
mov
les
dec
insb
xchg
mov
add
shrb
or
xor
pop
insl
inc
sti
lods
pop
mov
dec
mov
mov
sbb
xchg
fistps
xchg
xor
mov
mov
es
es
stos
pop
mov
mov
push
out
pop
insl
and
mov
sbb
push
testb
adcl
call
inc
fidivrs
and
xor
push
pop
fildll
out
enter
and
shl
incb
mov
les
arpl
test
adc
inc
xor
sub
push
lahf
popl
pop
gs
push
jecxz
cmp
aad
cmp
cmc
and
ja
push
pushf
pushf
mov
dec
push
sbbl
loope
pop
xchg
enter
popa
push
mov
add
fiadds
je
cs
dec
push
cmc
inc
mov
stc
push
jne
mov
add
fwait
cld
dec
mov
popa
rcrb
cwtl
shlb
jo
dec
insl
and
xlat
mov
rorb
rcl
dec
nop
cmp
mov
sar
or
fstpl
loope
rcll
mov
dec
in
or
pop
scas
in
mov
mov
mov
dec
sahf
adc
scas
xchg
pop
and
sub
add
add
push
jecxz
mov
rcr
jne
roll
enter
push
fisttpl
lock
cmp
xor
test
xchg
testl
jnp
pop
test
stos
insb
stos
call
mov
adc
shr
push
add
outsl
jmp
mov
das
js
or
or
push
mov
mov
push
inc
call
push
pop
xchg
ret
insb
mov
ljmp
and
sub
out
or
in
mov
push
out
test
inc
lock
or
lcall
lods
lock
fdivrl
fucomip
loop
pop
mov
push
pop
bound
mov
xor
jl
icebp
rcrl
lods
mov
subl
insl
pop
sub
cmpsl
sbb
or
sub
fidivrs
loop
xchg
outsb
es
or
mov
test
repz
out
adc
repnz
xorb
outsl
xor
cltd
lock
xor
repnz
push
es
mov
mov
mov
or
js
sbb
fs
hlt
rcrb
or
adc
xchg
std
push
pushf
push
and
pop
addb
mov
adc
int3
mov
or
sahf
clc
jnp
int3
int
xchg
ret
jb
xchg
adc
sbb
mov
test
aas
fdivs
mov
sub
out
loopne
mov
xor
and
mov
adc
cmc
roll
fsubrl
divl
aas
jno
scas
dec
mov
adc
mov
or
pop
cmp
fnstsw
mov
mov
out
fs
ss
mov
xorb
or
out
mov
sarl
inc
jae
cs
jb
ret
pop
insb
rolb
and
adc
push
jb
push
lods
fwait
mov
or
adc
pop
pushf
mov
test
pop
daa
or
les
popf
mov
lcall
les
stos
mov
cmp
mov
sub
xchg
inc
or
push
and
add
mov
jnp
ret
bnd
jg
cmp
fcmovne
sbb
rolb
lret
clc
cmpsl
xor
dec
arpl
xor
incb
push
lock
stos
cmc
mov
shlb
pop
add
call
out
loop
fidivrl
insb
mov
cmpl
ret
ss
orl
cmc
imul
add
out
lcall
push
xchg
dec
mov
add
sub
gs
in
adc
or
xor
xchg
sub
jns
and
out
dec
pop
mov
insl
mov
xchg
cmp
cmp
test
jl
hlt
outsl
xorl
adc
sbb
stos
adc
aas
psubq
add
inc
push
sbb
lcall
dec
ljmp
sub
stc
mov
adc
aas
lret
cmp
sbb
add
rcl
and
inc
dec
mov
pop
xchg
clc
loopne,pt
or
adc
add
std
add
push
loop
sub
mov
or
jnp
xor
sbb
repnz
inc
mov
imul
insb
xor
out
test
sahf
mov
pop
pop
in
repnz
ljmp
push
mov
add
inc
or
lods
adc
aam
adcl
ss
mov
rcrb
xor
dec
mov
pop
pop
pusha
daa
aam
dec
nop
sbb
lea
addr16
dec
push
ror
cld
sbb
add
cmp
cmc
cltd
mov
xor
adc
jmp
daa
mov
shr
fmull
adc
add
sbb
orl
mov
adc
jno
addr16
lds
add
jge
cmpsb
and
xchg
add
hlt
sub
pop
pop
mov
test
push
xchg
dec
imul
adc
xchg
xor
loope
xor
sbb
push
std
aas
push
test
and
popa
xor
and
jmp
cmpsb
neg
jbe
mov
pop
jp
dec
cmp
out
movsb
xchg
xor
loop
mov
fldl
mov
sub
jb
lahf
leave
push
and
or
cmpsb
jnp
insl
push
mov
fmul
pop
xchg
adc
loop
insb
jno
mov
movsl
cmp
pop
push
negl
lahf
or
push
mov
jp
cmp
mov
clc
push
mov
adc
sbb
mov
sahf
shll
dec
sub
dec
push
xchg
jne
mov
jecxz
mov
rcll
inc
sbbb
adc
xchg
mov
imul
ficompl
popf
mov
jp
fists
pop
mov
sarb
ficomps
loope
inc
movsb
cmp
movsl
data16
pop
je
fldcw
movsb
or
lahf
fldcw
setb
stos
adc
pop
inc
ss
movsl
push
adc
fdecstp
inc
lcall
aaa
dec
jl
and
mov
aam
movsl
and
mov
jo
iret
aad
test
sbb
xchg
inc
call
and
cmp
pop
sbb
ret
inc
push
dec
dec
inc
mov
rcl
push
pushf
mov
hlt
adc
cli
xor
mov
dec
scas
les
pop
mulb
push
mov
stos
iret
das
fistpll
lret
rorl
add
dec
data16
push
dec
je
pop
lock
xor
mov
shl
ror
movsb
gs
sahf
rorl
jbe
ret
pushf
cmpb
cmc
cltd
xchg
movsb
sbb
jecxz
jmp
push
xchg
aaa
leave
or
push
cmpsl
inc
popa
sub
push
xor
lea
xchg
or
out
sbb
enter
jo
insb
das
in
pop
leave
cmp
iret
xor
jbe
xor
jnp
icebp
iret
jecxz
pop
adc
cmp
jle
ret
lods
iret
cmp
xor
mov
pop
push
lea
push
sbb
aad
ljmp
jl
test
xor
cmp
lock
andb
lret
aad
jg
inc
aas
pop
dec
aaa
cmpsl
in
gs
movsl
cmp
das
div
leave
repz
mov
in
adc
mov
je
mov
cltd
les
push
sub
adc
fidivl
dec
arpl
pop
sub
xchg
insb
sub
dec
fwait
cli
mov
aaa
fstl
repnz
outsb
aaa
pushl
xor
push
jle
stos
sbb
dec
xor
adc
jb
dec
jg
adc
adc
push
push
and
insl
loop
xor
fiaddl
sub
mov
lock
lret
or
dec
pop
mov
mov
dec
mov
hlt
shlb
scas
xor
mov
scas
leave
repz
pop
in
fmuls
movsl
mov
daa
pop
shrl
popf
dec
adc
push
in
adc
loope
add
mov
outsl
jp,pn
mov
xchg
xlat
inc
add
jmp
in
aad
out
adc
and
mov
or
pushf
xchg
adcb
jg
cmpsb
dec
sbb
pop
popa
inc
out
cmp
fcoms
xchg
sub
push
or
daa
xchg
and
xchg
jecxz
pop
cmp
data16
enter
inc
push
dec
lahf
clc
sub
lret
inc
xchg
shl
loopne
stos
insl
in
dec
xchg
daa
data16
pop
mov
orb
popf
rcl
and
loop
cmp
pop
pop
ljmp
sbb
push
repnz
mov
lea
push
sbb
push
popa
cmp
inc
xchg
inc
jnp
xchg
shr
dec
push
addr16
pushf
je
push
jge
and
and
jae
daa
jg
jns
iret
scas
int
outsl
xor
or
lock
xor
cmpsb
dec
xchg
xor
mov
xor
jmp
dec
inc
sbb
push
mov
out
call
movl
repz
push
sbb
es
call
mov
xor
fisubrs
ds
mov
je
or
scas
pusha
push
js
push
pop
jmp
add
lods
or
enter
add
stos
cmp
push
and
jno
stos
pop
mov
add
push
movsl
add
imul
hlt
sub
icebp
shl
in
fcmovu
ljmp
lds
cmp
push
fimuls
push
out
jmp
fs
mov
arpl
shlb
push
jp
sub
xor
xchg
dec
push
add
testl
inc
inc
cld
and
ljmp
mov
cmp
push
push
fwait
iret
xor
push
jp
mov
aaa
fdivrs
mov
shll
mov
cmp
das
mov
nop
jmp
cmp
jecxz
xchg
pop
xchg
mov
andb
arpl
scas
aad
cmp
jl
rclb
and
loope
dec
jl
sahf
mov
lods
add
inc
stos
cmovb
jmp
mov
jmp
xchg
dec
sub
lock
aas
cmpsl
call
cmpsl
sbb
je
mov
cmp
mov
mov
cwtl
mov
popw
inc
mov
inc
outsb
mov
mov
cmp
xor
sub
push
mov
inc
mov
jle
mov
dec
and
mov
pop
xchg
inc
inc
mov
mov
xor
imul
test
mov
and
fsubr
in
push
pusha
stos
fdivs
in
and
xor
add
mov
push
xor
xor
repz
jne
lds
push
xor
rorl
mov
mov
sub
sbb
outsl
iret
cmpsb
mov
fbld
xchg
stos
inc
xor
mov
cld
data16
sti
inc
inc
and
jmp
xlat
xchg
test
mov
dec
in
js
push
or
cmp
mov
lret
adc
jmp
cld
call
pop
scas
fwait
and
cmp
sub
in
ds
das
loop
sbb
sub
adc
popf
repz
push
inc
adc
sub
mulps
push
or
scas
inc
mov
cmp
test
lret
lods
shrl
stos
xor
cmpsb
mov
stos
out
push
hlt
aad
in
add
ja
lods
scas
stc
pop
push
mov
mov
adc
mov
mov
lret
and
das
mov
fadds
or
mov
push
enter
cld
loopne
rclb
loop
loope
cwtl
mov
int
dec
xchg
jae
push
mov
and
fwait
push
fstp
add
sti
jmp
in
dec
cmp
loopne
mov
test
push
mov
dec
mov
test
jns
js
into
ja
xor
mov
ss
addr16
mov
addl
pop
xor
jecxz
lods
mov
dec
into
mov
jae
dec
pop
fistpll
and
ret
rcll
xor
hlt
cmp
je
inc
add
data16
pop
gs
sub
fldenv
imulb
pop
mov
rorb
pop
clc
flds
jns
mov
push
jle
xchg
jge
jg
in
scas
xchg
jl
clc
add
xchg
shr
sub
add
mov
dec
fcmovbe
js
xor
xchg
push
flds
add
sbb
fldt
enter
inc
add
out
mov
in
add
ret
pushf
dec
mov
fwait
cmp
mov
out
loopne
mov
loope
mov
inc
pop
test
fs
jmp
leave
imul
mov
imul
mov
mov
mov
sbb
roll
push
pop
push
sub
incl
setb
outsl
sti
lds
cltd
dec
inc
mov
or
sub
add
enter
test
xchg
lds
sbb
adc
cld
stc
sarl
jne
inc
and
inc
fs
push
rolb
fwait
icebp
es
pop
push
push
adc
and
test
sbb
dec
xchg
push
mov
pop
sbb
rorl
adc
test
xchg
dec
stos
inc
lret
sbb
popa
inc
movsl
stos
inc
ss
scas
andl
mov
lret
test
mov
cwtl
xlat
inc
in
dec
sub
pop
shlb
aad
mov
fisubrs
mov
push
ja
les
les
cmpsl
aas
jp
or
jno
orb
add
insl
cli
ss
push
adc
int3
imul
cmp
cli
push
gs
sub
adc
testl
xchg
push
add
call
jle
addr16
pop
stos
lds
daa
sub
adc
lods
push
jg
imul
mov
mov
push
add
mov
scas
mov
outsb
data16
adc
sbb
nop
je
lods
mov
mov
pop
cmc
xor
jmp
xor
push
mov
outsl
in
jl
lock
mov
jmp
adc
or
mov
rorb
add
jo
dec
out
pushf
xchg
pop
pop
loopne
imul
ret
sub
imul
mov
xlat
pop
test
insl
pop
out
xor
out
in
leave
scas
decl
sbb
add
aam
mov
xchg
add
sbb
inc
shll
add
pusha
fwait
lea
call
jp
fidivrl
push
loope
push
add
pop
sti
call
sahf
stos
pop
dec
lret
in
mov
adcb
or
mov
repz
test
xchg
sahf
xlat
fs
std
shrb
out
lods
jmp
mov
ja
leave
sub
aad
stos
mov
aaa
stc
aam
xchg
or
sbb
subl
nop
sbb
push
sub
mov
fadd
mov
std
cltd
rcrl
or
pop
sub
fsts
inc
adc
aas
or
xlat
xorb
inc
mov
outsb
or
xor
or
xchg
mov
inc
and
push
xchg
es
fmull
addb
xchg
and
adc
lock
mov
xchg
sbb
lock
outsl
jae
ja
fnstcw
cmpsl
sbb
hlt
sahf
xchg
mov
push
enter
notl
adc
inc
ds
mov
xchg
inc
mov
dec
mov
sub
sbb
and
mov
dec
push
xor
sysenter
leave
mov
sub
cmp
mov
shlb
cmpsl
scas
cs
mov
leave
outsl
cmpsl
mov
cmp
mov
push
jnp
nop
popf
cwtl
addr16
rclb
xchg
sbb
aam
leave
outsl
cmpb
adc
mov
xor
or
and
or
lock
imul
cmp
stos
ficoml
insl
sbb
push
sub
shll
dec
pop
and
jns
pusha
ret
cmp
movsb
daa
leave
into
nop
dec
pop
icebp
imul
mov
xchg
xor
call
jnp
sub
les
pop
clc
mulb
jp
pushf
xchg
cmpsb
jmp
and
rorb
pop
mov
push
out
mov
add
xlat
es
mov
dec
and
mov
push
sub
sti
adc
icebp
popa
push
mov
fisubs
popa
outsl
dec
cli
in
pop
push
xchg
aas
jg
cmp
out
xchg
ret
pop
add
decl
sbb
and
test
lods
in
scas
orl
aas
sbb
pusha
cmpsl
das
and
or
mov
jmp
xchg
sbb
outsb
xchg
push
fidivs
movsl
xchg
fwait
jecxz
cmp
movsl
inc
mov
xchg
or
mov
push
lcall
adc
xor
jecxz
cmp
pushf
cltd
leave
mov
jae
bnd
fs
push
inc
fimuls
push
push
cmp
dec
jp
xchg
lods
popf
test
xor
sub
push
add
leave
loopne
and
repnz
or
fsubrs
aaa
std
push
adcw
add
push
adc
cmp
out
inc
scas
xchg
and
cmc
cmp
out
pusha
shrb
js
and
pop
pop
les
jg
aas
sub
jmp
lret
inc
push
lds
nop
jo
jae
fcomp
js
pop
inc
out
stc
inc
inc
adc
xchg
je
and
fisubl
call
int
mov
clc
add
push
loope
push
mov
pop
flds
jp
imul
adc
xchg
or
xchg
jbe
xor
movsb
lods
stos
pop
mov
ss
ret
movsb
mov
adc
ljmp
ljmp
push
stos
cmc
es
sub
data16
push
stos
cmp
cmp
xor
in
jnp
mov
and
dec
xor
cwtl
sti
inc
fstpt
les
adc
cmpb
repz
fxch
mov
daa
aam
call
aaa
push
ret
ljmp
bound
in
fadd
lods
mov
cmp
cmpl
dec
push
xor
lret
cmp
push
or
sbb
adc
lods
xchg
das
xchg
mov
cmpsl
sub
pop
or
add
mov
into
subb
push
loopne
jb
enter
mov
in
pop
fisttpll
push
lock
lods
inc
fsubrl
in
lret
into
mov
addr16
add
hlt
adc
movsl
dec
add
dec
enter
and
add
ret
idivb
jae
sub
arpl
xlat
loopne
imul
dec
lcall
xor
ja
jg
mov
fsubl
cld
ficompl
sbb
sub
xor
lcall
sub
aaa
mov
push
pop
push
std
xor
call
das
mov
mov
dec
adc
shrl
cmp
call
add
sbbb
xchg
jl
mov
push
ja
inc
dec
jp
stos
aaa
mov
sti
cld
inc
test
ss
add
or
mov
scas
insb
push
es
and
mov
loope
push
into
sbb
gs
es
ret
jnp
pop
or
leave
insl
xor
mov
mov
mov
sub
fisttpll
sbb
cmpb
fidivl
xor
call
mov
mov
xor
ds
jp
push
fldenv
into
mov
inc
popf
jp
inc
push
mov
add
or
mov
xchg
jg
or
leave
ja
aam
cs
xchg
outsl
mov
dec
arpl
int3
cli
lods
arpl
sbbl
push
lds
or
movb
mov
je
jmp
adc
pop
sub
mov
inc
test
hlt
push
xchg
dec
jl
dec
lods
xchg
jmp
loopne
pop
mov
mov
dec
sub
mov
jmp
ret
xor
pop
jbe
sahf
cmp
mov
inc
inc
pop
es
pop
mov
test
xor
push
fcom
sub
lcall
jb
jecxz
stc
in
push
fwait
les
lea
inc
aam
lcall
shll
xchg
call
fwait
push
imul
adc
jmp
mov
xor
add
push
mov
nop
ljmp
sbbl
mov
mov
xlat
mov
divl
and
rol
shrl
mov
mov
inc
mov
jae
icebp
je
adc
sub
xchg
jmp
stc
mov
int3
jmp
negb
lods
data16
add
dec
push
daa
dec
loope
push
pop
xchg
sbb
lret
lret
enter
mov
xchg
mov
fwait
enter
jmp
into
sub
sbb
and
cmp
mov
fcomps
filds
or
cli
xchg
mov
xor
xor
inc
scas
faddl
fcoml
pop
push
lret
shrb
fcmovne
inc
xchg
test
xor
mov
pop
push
xchg
int
insb
lcall
aas
pop
push
leave
out
jno
cmpsb
fistps
sub
sbb
xor
push
movsb
jne
or
sbb
pop
arpl
dec
sbb
push
dec
scas
push
ret
fmul
ljmp
ficoml
ret
push
mov
xor
add
inc
fsubrp
push
sbb
mov
test
push
repnz
push
outsb
mov
sbb
ja
ds
sbb
icebp
xchg
mov
xchg
or
loop
int
xor
mov
jge
imul
sbb
or
in
lcall
daa
xchg
mov
jl
jo
out
loope
add
into
cmp
push
and
jo
stc
push
repnz
sbb
or
push
mov
jae
loope
repz
lock
pop
mov
aad
cmp
jns
sbb
xchg
inc
test
jnp
cmp
add
aas
pop
mov
pusha
fsubrl
sbb
cmc
add
pushf
mov
lock
pusha
jmp
cmpsl
add
test
mov
fisttps
jmp
and
enter
pop
out
mov
mov
outsb
ljmp
mov
lock
push
jns
add
push
imul
adcl
orl
inc
pop
out
in
loop
and
sbb
sti
call
pop
das
xchg
pop
inc
jle
pop
adc
loopne
pop
call
pop
sub
shrl
mov
fcmovne
or
call
insb
lret
and
adcb
sbb
jb
push
mov
clc
push
repnz
sti
add
fldt
jle
js
into
push
xor
jae
add
sbb
mov
add
mov
dec
cmc
idiv
and
je
jg
add
or
fisubl
scas
fsts
mov
xchg
adc
sub
sbb
xchg
xchg
xchg
add
insb
xchg
pusha
cmp
fdivrs
xchg
out
hlt
xor
mov
jo
shl
clc
xchg
push
mov
shl
mov
xor
jb
ja
xlat
subb
lret
les
les
inc
clc
inc
cmpsl
or
jnp
add
es
dec
ljmp
pop
ss
inc
fisttpll
dec
or
or
enter
xchg
aaa
sbb
pushf
adc
jnp
sub
pop
jae
je
adc
mov
fidivl
sub
mov
lcall
sub
or
ss
push
or
cld
add
scas
sbb
out
push
stos
rorb
movsb
or
sub
push
into
or
inc
scas
adc
jmp
dec
cmovs
xchg
mov
push
outsb
xor
lock
add
mov
add
lds
shlb
pop
sub
jae
pop
repz
mov
lds
mov
and
mov
popl
mov
sub
daa
fildl
in
test
xchg
mov
xchg
lret
jo
xchg
stos
js
cmp
fisubrs
scas
xor
mov
sbb
sub
popf
adcb
icebp
stc
sti
jns
fcmovbe
push
add
lods
sahf
xor
add
fstps
in
xlat
and
aam
lods
rorb
test
lcall
icebp
add
inc
pop
sub
out
cmpsb
mov
ljmp
add
adc
cmpsl
scas
fcoms
sub
pushf
insl
lahf
push
jne
rorl
adc
pushf
sbb
mov
shl
out
inc
loopne
stos
pop
cld
mov
out
out
dec
arpl
xchg
pop
es
jmp
xchg
xor
pop
dec
outsb
dec
jl
nop
xchg
cli
lock
shrl
xchg
dec
pushf
bound
imul
clc
movsl
clc
mov
iret
sub
inc
xor
gs
push
js
xchg
mov
pop
xchg
add
add
or
pop
and
dec
pop
movhps
mov
lahf
dec
shll
in
loop
js
cmpb
jl
add
lret
shrl
test
xor
xchg
ja
inc
jnp
push
outsb
clc
jae
out
je
adc
sahf
xor
jo
in
mov
nop
xchg
mov
shlb
insb
pushf
and
mov
shrl
jg
out
mov
and
jo
jnp
fcom
xchg
mov
add
outsl
inc
sbb
and
fisubs
fwait
icebp
jb
or
xor
scas
and
dec
outsl
lds
sub
jno
lea
push
xchg
shrb
mov
ds
cmp
inc
jo
inc
movl
arpl
in
mov
repz
cmp
fwait
mov
push
stos
lret
fcomps
and
add
inc
inc
dec
or
mov
push
xchg
xor
xor
push
and
or
and
out
bound
xchg
jno
repnz
mov
ljmp
mov
push
jo
shrl
dec
shll
mov
cmp
out
clc
mov
fdivr
inc
icebp
sub
pop
or
aad
ds
in
xchg
and
xor
stc
sub
xlat
add
or
push
out
in
mov
push
sbb
push
imul
insb
rcll
ss
ret
insl
pop
in
pushf
fs
lea
repnz
stos
jbe
or
jnp
movsb
ja
lret
xchg
adc
loopne
lods
push
ljmp
cmpsb
push
aas
sbb
inc
int
cli
and
ljmp
lcall
ds
xchg
faddl
nop
jecxz
sub
pop
mov
dec
mov
inc
mov
pop
sbb
mov
push
outsb
push
xchg
into
add
imul
shlb
test
mov
ss
out
fld
pop
test
aaa
mov
add
sbb
adc
and
mov
fisubs
cmp
jmp
jno
insl
pop
out
adc
in
pop
jle
nop
inc
ljmp
div
fwait
pop
test
out
pop
inc
cltd
shl
and
mov
add
add
inc
cs
out
cmpsl
mov
int
iret
sti
and
mov
lods
out
xorl
call
inc
scas
enter
mov
hlt
fisubl
dec
sbb
inc
or
stc
mov
das
scas
hlt
dec
jle
dec
inc
sub
jmp
push
insl
sub
fldl
cmp
lods
pop
cmp
pop
cltd
or
frstor
outsb
jecxz
jg
pop
pop
add
mov
out
in
fildll
or
out
das
pop
xor
out
rorb
and
ja
in
and
daa
pushf
testl
leave
jl
sub
jle
repnz
xor
out
in
test
testl
adc
data16
pop
bound
stc
sub
sbb
adc
insl
popa
or
icebp
clc
mov
pop
sti
or
mov
push
mov
cltd
cmc
stos
dec
cld
xchg
loop
push
dec
push
sub
xor
dec
xor
mov
push
lcall
or
sbb
adc
push
into
mov
mov
sbb
jne
test
push
push
push
sbb
gs
push
loopne
ficomps
adc
out
sbb
xor
cli
ljmp
out
pop
das
dec
popf
cmc
pop
popa
dec
es
mov
je
sbb
or
sbb
popa
xchg
sbb
testb
sbb
sub
xchg
xor
ljmp
mov
xor
xchg
push
icebp
push
inc
lock
push
ljmp
jne
add
jg
pop
jecxz
sub
and
stos
push
and
dec
loopne
adc
inc
ret
push
mov
ja
pop
pop
or
xchg
jb
jp
inc
dec
add
cmpsb
pop
jle
imul
lcall
jp
add
and
push
aad
cmp
fldenv
inc
stos
and
cmp
inc
sub
push
add
mov
lods
fs
sbb
popf
inc
outsl
jle
repz
in
xchg
fiaddl
repnz
lods
mov
pop
sbb
xchg
bound
into
add
add
pop
dec
stos
sub
xchg
aad
mov
sahf
aam
push
lods
adc
cld
push
mull
sbb
jo
jnp
push
mov
mov
fs
fwait
aaa
jmp
dec
lods
cmp
and
rcrl
xchg
xchg
dec
xchg
fiaddl
shrb
fcompl
rorl
pop
mov
dec
int3
mov
cltd
stos
cli
movsb
xor
pop
lret
cmc
shrb
pop
or
ja
scas
sarb
xor
mov
dec
inc
push
das
bound
push
mov
popf
cmp
or
xlat
or
cwtl
bound
rorl
movsb
pop
aaa
sub
fcoms
sub
sub
mov
mov
jg
int3
push
sub
int3
xchg
ret
jnp
and
xchg
popa
push
jae
imul
or
inc
xor
jno
push
cmp
loop
dec
lods
fmul
sti
jnp
mov
movsl
aam
imul
aam
dec
int
shl
das
mov
sub
pop
jo
cmpsb
jbe
inc
hlt
in
lcall
lock
fcoml
mov
mov
jbe
mov
add
addb
aam
mov
mov
mov
call
jb
mov
sub
dec
or
cs
pop
or
scas
int
push
sbb
lret
add
xor
dec
mov
icebp
fwait
mov
ds
sbb
mov
mov
enter
jge
inc
mov
test
je
jb
lds
or
enter
fdivrs
mov
add
dec
xlat
pushf
and
fisubrs
cltd
lds
mov
dec
jo
scas
dec
or
enter
loope
xorb
ret
or
xchg
jno
and
push
cwtl
adc
cmp
mov
sbb
fnsave
xor
mov
pushf
sub
xchg
mov
scas
loopne
inc
cli
fs
add
add
mov
es
sub
js
and
xchg
xlat
gs
mov
add
dec
mov
or
insl
jae
pop
push
push
aam
int3
outsb
enter
push
fs
jle
and
jge
lret
outsl
fxch
aam
inc
mov
stc
and
loopne
int
mov
push
or
sarb
movsb
ficompl
rorl
es
and
lret
sbb
fmull
sub
daa
loop
add
add
mov
xchg
sub
mov
in
imul
push
pop
pop
int3
inc
loop
lods
or
fidivrl
or
out
daa
in
or
unpckhps
loop
jae
and
pusha
cmc
stos
sub
dec
pop
xor
xchg
mov
unpckhps
movsl
icebp
repnz
test
fstpt
pop
inc
lods
test
lahf
push
ret
pop
xor
xor
outsb
or
inc
iret
out
or
sbb
add
adc
pop
mov
jg
movsl
push
cmpsl
test
add
movsl
or
mov
xchg
sahf
cmp
xlat
xor
aam
fisubrs
xchg
stos
fdivrl
ljmp
rcr
dec
icebp
sub
roll
ljmp
insl
xchg
and
scas
rolb
aaa
or
stc
cld
rcrl
scas
lret
call
jl
sbb
daa
out
ret
adc
mov
enter
pop
mov
mov
test
call
mov
xor
addr16
sar
fcoml
loopne
and
or
ficoml
shl
mov
test
push
add
cs
incb
loop
sbb
test
sbb
jae
pusha
daa
out
cmp
call
xor
in
dec
ja
add
stc
and
mov
jg
cmp
stos
sub
push
int3
dec
push
inc
out
icebp
cmp
dec
stc
pop
pop
loopne
jl
hlt
fsubl
fst
jne
enter
out
cld
in
stos
cmp
repnz
or
addr16
add
enter
fidivrs
scas
int
cmp
inc
add
fadd
ss
lret
imul
xchg
mov
fsubl
ljmp
mov
scas
lods
mov
pop
dec
rclb
jns
adc
leave
mov
push
dec
popa
jmp
push
insb
mov
jge
loope
mov
and
jmp
pop
mov
or
pusha
fldln2
mov
lds
sahf
or
xor
cmp
push
jb
shrl
popa
push
cs
dec
mov
xchg
pop
cmp
arpl
and
pusha
daa
test
aam
dec
push
cs
call
mov
mov
pop
inc
aas
pop
fnstsw
mov
jle
out
dec
loop
jecxz
pusha
in
pop
cmp
scas
inc
dec
xchg
adc
jne
adc
mov
push
dec
push
mov
jmp
xchg
movsl
repz
cs
push
arpl
push
aam
xor
sub
lea
scas
pushf
sub
repz
ret
jl
sbbl
movsb
cmp
lahf
push
xchg
dec
adc
ljmp
inc
fwait
lret
out
and
mov
cmp
adc
das
cmp
cmp
push
mov
dec
xor
cmp
jecxz
inc
push
adc
cltd
mov
std
push
mov
cmp
dec
pop
ret
mov
inc
shll
dec
mov
pop
jnp
lret
cwtl
inc
sbb
mov
jg
into
aam
cmp
outsl
mov
pushl
clc
aaa
inc
push
notb
dec
and
jmp
bound
push
ret
sub
push
push
mov
or
xchg
mov
loop
dec
fsubrp
stc
std
insb
push
mov
and
in
cmp
or
xlat
xchg
fildll
xchg
aas
sub
adc
jb
cmp
aam
and
imul
push
jnp
in
sbb
cltd
add
cmp
sub
mov
cs
mov
fiadds
call
sarb
js
test
fisubrs
enter
xchg
mov
stos
cmc
lock
jbe
mov
lret
out
mov
popa
out
xor
and
int
add
icebp
idiv
testb
pextrw
mov
les
inc
add
cmp
lret
lcall
pop
push
leave
adc
aad
dec
inc
jecxz
jnp
mov
cmc
fisttpl
inc
dec
test
mov
push
dec
hlt
jg
push
mov
sub
mov
cmp
loopne
insb
les
mov
imul
sub
and
add
fwait
stos
sti
xor
jo
inc
pushf
sub
out
cld
sbb
repnz
fsts
sbb
adc
ficoml
dec
lcall
lret
xchg
adc
or
inc
jne
mov
jbe,pt
mov
cs
leave
push
sub
jns
dec
jmp
lods
fcoms
es
arpl
pop
sub
push
xchg
add
sub
scas
sti
inc
or
jnp
mov
and
mov
mov
cmp
mov
das
or
adc
punpckhdq
sub
xor
pop
data16
push
xor
lods
test
lahf
inc
es
xchg
xchg
pop
loop
nop
jno
in
out
out
push
ds
rorl
push
pushf
jne
rcrl
jle
ja
imul
nop
mov
xchg
cs
pop
sub
fdivs
call
cmpsl
rorl
sub
sbb
ret
cld
jbe
push
scas
jmp
mov
push
jmp
fmull
sbb
mov
aas
mov
stos
mov
scas
clc
lcall
bound
fst
add
xor
mov
sbb
outsb
sbbb
sbb
mov
inc
xchg
xor
cmp
int3
mov
nop
stc
push
sbb
daa
xlat
insl
movsl
xorb
jb
and
neg
movsl
insl
sub
lret
add
or
pop
mov
out
inc
imul
clc
jb
xor
dec
das
fildl
into
mov
enter
mov
cld
push
mov
sahf
movsb
jo
popa
cmp
das
les
cmpsl
pop
mov
popf
out
add
pop
jp
cmpsb
cmpl
imul
divl
in
jb
insl
mov
sbb
push
orb
cmp
cltd
dec
cmpb
lcall
ljmp
adc
or
mov
cld
mov
test
inc
mov
sbb
pop
pop
inc
stc
jecxz
adc
inc
lock
or
fsubs
jmp
bound
xor
iret
hlt
add
test
popa
pop
xor
lea
cld
aam
lods
jge
ret
idivb
out
sbb
ja
subb
jb
lods
xchg
daa
adc
nop
vpand
bound
jmp
stos
push
lea
and
jmp
sbb
loop
dec
xchg
dec
shr
xor
add
inc
lods
and
sbb
pop
pop
xchg
pop
fwait
stos
or
andnps
scas
mov
inc
sbb
nop
xor
push
or
shrb
dec
mov
gs
dec
mov
and
push
js
rolb
add
arpl
mov
out
div
mov
cmp
cld
in
popf
pop
xor
add
lcall
adc
out
bnd
daa
adc
ret
jle
xchg
stc
mov
in
sti
mov
mov
adc
inc
lods
fdivrs
pop
jns
lea
sar
rcr
mov
outsb
lock
test
and
jmp
bound
mov
mov
pop
mov
mov
push
iret
adc
jno
int3
test
cs
stc
push
mov
fists
je
sbb
xor
cmp
js
mov
dec
imul
pop
mov
xor
fdivr
push
lea
lret
popf
xchg
std
shl
in
stos
mov
scas
xlat
sti
lds
mov
mov
lods
pusha
jmp
rcl
xlat
int3
out
mov
mov
outsb
mov
pop
in
sbbl
in
bnd
push
mov
xor
aaa
xchg
cmpsb
daa
ss
fldenv
adc
and
jo
movsl
xchg
jp
ljmp
sub
mov
cld
fs
cmc
mov
mov
dec
xor
sub
loope
movsl
pop
gs
cmp
test
push
rorb
ljmp
xor
lds
es
lds
xchg
outsb
mul
test
ja
test
cmp
call
es
cli
or
lcall
mov
iret
fsubs
filds
leave
cmp
jle
jnp
xchg
mov
test
pop
sub
rclb
nop
pusha
test
pop
dec
mov
mov
jecxz
xlat
adc
xchg
inc
mov
sub
and
add
push
mov
loopne
fcmovnb
fdivl
aas
add
pushf
lahf
sbbb
xchg
enter
into
movsb
lea
in
cmp
ds
in
out
loop
out
insb
push
jecxz
cld
push
lods
clc
push
xlat
jo
lea
das
xor
fs
jae
repz
pop
lods
pop
stos
pop
xor
cmp
out
xchg
clc
sub
dec
mov
das
fwait
push
dec
xchg
lods
xchg
pushf
xlat
cmp
xlat
and
push
add
andb
gs
ret
mov
adc
and
mov
sub
in
push
xchg
negb
push
dec
outsb
mov
cli
out
in
push
mov
push
inc
jbe
jb
xorl
iret
pusha
lock
xor
mov
and
call
add
inc
gs
xchg
jne
test
idivl
mov
jp
leave
xor
dec
addr16
sbb
or
mov
loope
in
sbb
dec
arpl
and
out
ret
jg
mov
mov
movsl
outsb
or
scas
stos
je
test
fcoms
orb
dec
in
cmp
mov
xlat
sahf
rolb
sbb
dec
std
mov
add
in
out
mov
jo
lods
jmp
test
mov
mov
sbb
call
daa
imull
or
xor
test
in
sbb
cmpsb
mov
mov
out
mov
dec
push
out
fidivrs
insl
hlt
and
mov
push
and
mov
pop
std
stos
jmp
xbegin
push
mov
mov
jecxz
pusha
ss
lods
pushf
adc
cmc
sub
adc
push
sub
mov
pop
cli
cmp
mov
fwait
int
popa
popa
stos
mov
decl
out
sub
adc
cmp
xchg
mov
pushf
loope
rcrl
or
and
lahf
pcmpeqd
sbb
or
cmp
add
lret
sti
xlat
cmp
cs
push
dec
sbb
jne
rcrb
fstps
cmp
and
adc
aad
mov
sbb
pushf
adc
int
push
repnz
add
repnz
adc
minps
in
or
lret
and
dec
dec
iret
mov
jmp
subb
clc
pop
pop
xor
add
loop
pop
pop
inc
cmp
sbb
sub
jns
addr16
ror
mov
mov
dec
fadd
std
push
dec
notb
fstpl
lret
test
push
in
dec
dec
cmp
add
inc
adc
aas
jl
mov
cmp
nop
pop
add
push
fcmovnu
shrb
pop
cmp
jno
xor
or
out
push
testl
sbb
sub
xor
aas
ds
cld
cmpsb
repnz
inc
or
ljmp
or
cltd
add
int3
push
movsl
sbb
call
icebp
pop
nop
gs
xchg
enter
daa
fstl
sub
repnz
dec
sbbl
or
dec
cmc
movl
int
insb
add
xor
cmp
push
test
jmp
mov
push
mov
cs
lods
add
or
dec
aad
adc
pop
mov
pop
pop
jae
push
mov
scas
push
xchg
cmpsl
jp
mov
sti
loopne
add
insl
aam
sbb
mov
push
push
sbb
mov
aaa
mov
cmp
push
pusha
pop
scas
jno
xlat
mov
ds
mov
mov
sub
sub
icebp
jne
adc
popf
test
cmpsb
mov
dec
mov
pusha
dec
addb
adc
rcrb
inc
lods
cltd
repnz
mov
dec
in
lods
xchg
and
and
pop
sub
mov
leave
mov
push
sahf
out
pushl
mov
popa
and
add
mov
or
or
bound
or
push
xchg
aaa
sub
in
iret
decl
fs
sub
rcl
sbb
cltd
ljmp
add
jg
jge
xor
pop
lods
scas
repz
push
mov
inc
fdiv
testb
mov
jge
in
fs
sub
push
repnz
es
or
popf
xchg
fildll
inc
fidivl
addb
or
xchg
sbb
xchg
pop
test
gs
fidivs
cmp
dec
add
movsb
test
push
into
dec
divb
outsb
jmp
fidivs
shl
pop
push
push
mov
stos
popa
cmp
mov
imul
lahf
aas
aaa
loop
sub
mov
push
fs
xlat
sbb
xchg
mov
xorb
sbb
and
add
mov
rolb
add
dec
mov
pusha
pop
add
inc
js
cmp
gs
jl
iret
add
mov
clc
add
loopne
inc
lds
ret
mov
cmpsl
jns
sbb
test
js
mov
mov
mov
add
jbe
dec
adc
std
ss
out
cmc
pop
dec
xor
stos
lahf
xchg
and
out
daa
adcb
jo
lret
mov
lock
mov
sbb
push
cwtl
hlt
mov
lret
jle
test
das
mov
or
or
cltd
inc
jp
push
popf
adc
divl
in
push
ljmp
lock
or
mov
xor
adcl
or
ret
std
sbb
outsl
jo
push
movsb
mov
out
stos
xchg
roll
lcall
cmp
movsl
inc
cmp
add
testb
xchg
or
jae
scas
inc
push
jg
lock
pop
push
int3
inc
dec
insb
add
dec
test
adcb
adc
and
js
lea
xchg
roll
test
sbb
sub
adc
push
jno
mov
sbb
out
cld
clc
fidivrs
sub
sbb
or
jmp
loop
push
pop
movsl
xchg
cld
or
push
out
cmpsl
cmp
into
xchg
mov
push
aad
test
inc
mov
adc
loope
xchg
sbb
xor
nop
dec
jg
lcall
imul
mov
fcmovb
push
loop
push
or
inc
repz
xchg
adc
cld
or
adc
inc
out
out
dec
es
stos
mov
cmpsb
movsl
xlat
mov
inc
fs
bnd
popf
sbb
dec
shld
jmp
fs
dec
es
stos
jns
je
jecxz
paddsw
in
lret
mov
add
cmp
xlat
in
push
int3
in
mov
pop
cmp
andl
xchg
and
fisubs
sti
sbb
xchg
mov
paddd
sbb
sub
lcall
push
movsb
scas
gs
fidivrs
mov
out
inc
test
push
mov
leave
into
lock
and
and
adcb
dec
push
xor
sbb
jg
xor
xorl
xchg
out
mov
orb
aad
mov
jp
push
push
lock
leave
loopne
inc
add
mov
push
incl
ds
lahf
stc
adc
sti
ds
jp
lret
cmp
mov
loope
sub
push
mov
dec
mov
popa
add
jae
enter
pop
sbb
repz
call
xor
pop
push
fs
clc
xlat
and
pop
xchg
xchg
loopne
fimuls
fdivr
testl
fcoms
mov
push
fwait
mov
mov
enter
jg
in
inc
push
push
add
mov
add
jg
sub
inc
lcall
mov
out
test
xlat
bound
mov
ret
mov
cmc
in
movsb
mov
sub
xor
mov
xchg
sbb
pop
pop
xchg
and
xor
jb
mov
lcall
in
push
cmpb
mov
dec
pop
mov
hlt
dec
pop
in
std
les
push
adc
pop
jp
pop
xchg
sbb
sub
test
ljmp
jecxz
je
push
push
mov
test
test
add
ja
ret
cmpsb
js
and
jns
sahf
mov
ret
subl
jae
loop,pn
xchg
sbb
push
mov
or
shlb
call
or
les
outsl
and
fxch
outsl
push
fs
and
push
dec
cs
sub
test
xchg
push
sti
cmp
pop
mov
cltd
filds
lods
pop
movsb
mov
mov
lods
out
jae
and
inc
mov
addr16
arpl
clc
dec
mov
lds
mov
inc
aad
out
sub
jbe
leave
andl
in
mov
and
call
and
fdivr
scas
xorb
lods
cld
int
aaa
hlt
sbb
jge
dec
inc
aam
or
add
inc
mov
popf
mov
inc
xchg
out
and
pop
adcb
addr16
adc
jmp
mov
incl
imul
cmp
push
jb
ret
xchg
pop
sbb
pop
ret
pop
mov
in
cwtl
iret
jge
test
je
int
andl
inc
mov
fs
xor
and
pop
stos
ljmp
and
jns
je
lret
mov
inc
pop
mov
subb
dec
sbb
mov
pop
sbb
popf
mov
push
push
sahf
xor
push
popa
jbe
sahf
adc
out
push
ret
hlt
push
pusha
pop
into
mov
push
xchg
push
int
sti
aaa
mov
sbb
sub
and
fsub
scas
fwait
es
int
int3
and
lods
push
mov
sbb
arpl
inc
sti
xor
mov
mov
jecxz
dec
sub
in
dec
data16
call
push
mov
les
mov
lds
jle
and
call
inc
cmp
int
jo
test
fsubrs
add
sub
mov
sub
mov
in
stc
add
ljmp
aad
xor
sbb
stos
mov
push
fisttps
scas
xchg
lock
call
scas
xor
mov
mov
mov
ja
push
add
push
dec
add
scas
xor
mov
lahf
xchg
subb
jl
mov
jno
jb
xchg
mov
lahf
xchg
inc
les
ss
mov
sarl
inc
pushw
dec
push
test
xchg
jb
cmp
inc
push
in
pop
les
into
sarl
mov
movsl
xchg
data16
jbe
shr
ds
ljmp
inc
dec
mull
cmpb
sub
pop
push
push
and
std
mov
cmp
les
in
arpl
cmp
idivb
xor
mov
mov
pop
push
ret
cmp
cwtl
cwtl
xor
cs
mov
call
outsb
xchg
add
inc
sar
movsb
lcall
dec
mov
jmp
icebp
push
push
lock
pop
adcl
mov
cltd
loopne
addr16
xor
inc
dec
std
imul
add
sbb
sub
sbbb
xor
rorl
jg
pop
out
jae
scas
aam
dec
cmp
and
jl
or
cs
into
add
les
imulb
mov
jle
inc
xchg
cli
loope
pop
jne
test
push
aam
cmp
mov
inc
roll
jg
fidivrs
sub
test
inc
cmp
add
repz
pushl
sti
xor
jne
sbb
xor
jecxz
mov
mov
pushf
mov
movsl
mov
leave
ss
popa
xchg
aam
mov
int3
dec
push
sarb
out
jne
dec
fs
xchg
jge
outsb
int3
shl
pop
leave
mov
push
push
or
cmp
push
mov
ltr
pop
fnstsw
shll
notl
movsb
outsl
sar
jae
and
and
xchg
mov
movsl
lods
mov
xchg
dec
pop
loopne
jne
fnstsw
rorb
ret
mov
adcl
jns
mov
sub
dec
cmp
xchg
mov
cs
mov
or
stos
cltd
xchg
dec
call
add
mov
jp
sub
lock
mov
rcrl
inc
or
arpl
xor
gs
cmovg
fcmovu
xlat
in
and
fistpll
cmp
aam
js
mulb
pushf
inc
outsl
in
shrd
mov
cmp
lahf
cmc
call
xchg
pop
add
iret
mov
pop
int3
or
test
adc
pop
sub
add
xchg
test
nop
imul
push
jle
and
adc
ret
rcrl
mov
jne
movsl
insb
adc
push
mov
bound
inc
mov
andb
pop
loop
into
sbb
mov
js
arpl
imulb
add
pop
imul
and
add
ret
adc
out
int
pusha
mov
mov
movsb
in
jle
in
les
jno
mov
test
pop
shrb
shl
push
xchg
jno
push
loope
mov
adc
stos
subb
jnp
popl
loop
out
idivl
nop
into
pop
push
lods
jne
adc
xorb
or
cmp
sbb
xchg
cld
or
pop
cmp
insl
dec
or
push
dec
jecxz
cmpsl
adc
cli
pop
pop
or
sub
pop
cmp
adc
jge
sbb
pop
es
into
inc
xchg
lea
jb
iret
inc
jae
push
xchg
sbb
pusha
lds
mov
pop
sub
add
fildll
pop
fidivs
and
inc
xor
push
pusha
adc
fwait
push
popf
mov
sarl
lret
je
adcl
mov
jle
xor
xchg
in
and
dec
and
jne
lods
add
sar
sub
subl
jno
dec
push
xor
add
daa
in
lods
rorb
sbb
cli
push
test
jbe
sar
cli
insl
or
or
adc
popa
mov
push
xchg
or
jnp
shl
incb
mulps
mov
outsb
push
fwait
movsb
and
adc
popa
cmpsb
icebp
mov
pushf
jge
pop
out
and
mov
xchg
aas
cltd
movsb
cmp
arpl
in
pushf
push
mov
out
mov
iret
cmp
add
xlat
and
pusha
cs
hlt
call
fbld
sbb
sub
js
outsl
stc
mov
pop
lods
dec
lods
mov
out
pop
mov
ror
aam
sub
ljmp
mov
mov
xor
cmp
shlb
sbb
clc
inc
es
enter
fwait
lret
addl
pop
or
push
cmp
xor
jmp
cmpsb
push
ret
popf
lds
jg
push
jg
push
sahf
mov
jecxz
mov
adc
stos
cmp
xchg
or
imul
xlat
mov
lea
mov
xchg
cltd
and
push
jnp
dec
xchg
mov
mov
inc
imul
dec
add
daa
push
jp
sbb
push
js
sub
fldl
sub
aas
add
insb
addr16
jnp
imul
jo
push
clc
mov
lcall
fsubrp
push
das
cmp
aaa
lahf
std
insl
ret
and
mov
loop
sbb
push
jb
ror
ja
push
lock
out
sub
add
cmp
mov
xchg
dec
mov
shr
fsub
sub
xchg
js
mov
xor
jmp
dec
xchg
rcrl
add
pop
inc
mov
insl
sub
sbb
jge
mov
adc
cmp
mov
dec
sub
sub
out
push
dec
das
and
cld
adc
adcl
adc
mov
cmp
xor
lahf
movsl
stos
loop
jp
inc
cmp
mov
xchg
mov
fldpi
or
mov
jno
xchg
outsl
jle
scas
mov
repnz
jb
cmp
sbb
std
add
push
xor
jmp
pop
fwait
lock
insl
dec
rcll
les
push
lods
cmp
imul
pop
push
push
cmp
xchg
cmc
in
sbb
fimuls
xor
xor
or
js
out
pop
mov
jo
mov
fisttpll
jmp
clc
add
xor
or
sahf
xlat
mov
xor
or
push
adc
sbb
push
imul
mov
mov
xor
mov
shrl
sub
into
cmpl
cmpsl
mov
mov
sahf
fmuls
imul
fnstenv
rcll
test
mov
dec
movsb
adcl
dec
sahf
stc
outsl
insl
xor
mov
clc
in
sahf
fsubrp
dec
movsl
jecxz
shlb
sub
imul
xlat
push
cmp
cmp
xchg
daa
push
dec
out
mov
es
jno
call
pusha
movsl
push
jnp
lahf
cmp
xchg
or
out
ror
jecxz
outsb
sub
loopne
add
xchg
into
movsl
and
fisttpll
ror
dec
push
std
dec
in
sarl
sbb
xlat
push
mov
cwtl
jecxz
pop
sbb
sbb
jo
adc
push
mov
faddl
push
ja
inc
jae
aam
fnsave
repz
outsl
adcl
adc
mov
mov
roll
jno
push
mov
decl
push
ficompl
call
push
idivb
push
xchg
ret
dec
mov
xlat
repz
mov
push
mov
mov
push
inc
repnz
jo
daa
sti
pop
inc
stc
ror
cmp
jae
xor
scas
xor
xchg
lahf
test
add
inc
jae
mov
sbb
in
pop
jg
sbb
inc
add
jbe
sub
jmp
paddd
lret
and
mov
inc
dec
ss
movsl
pop
xchg
jl
sub
dec
stos
mov
subl
lea
jae
in
gs
rep
mov
ret
sub
out
and
sub
pushf
jg
sbb
aaa
lods
mov
ds
icebp
jle
bound
dec
cwtl
sub
cmc
pop
mov
pushf
bound
rolb
scas
sub
jp
aaa
movsl
adc
mov
inc
cwtl
sbb
pop
cwtl
mov
or
add
mov
into
push
mov
sbb
adc
add
out
int
out
int
xor
adc
fiaddl
stos
jns
fidivrs
std
cmp
into
lea
lds
xchg
push
sahf
popl
das
iret
inc
xchg
bnd
sbb
mov
lcall
call
inc
jp
daa
sub
mov
in
add
push
mov
jo
pop
mov
jbe
lret
mov
cwtl
jne
dec
fs
push
mov
filds
cmp
aam
int3
fidivl
lret
pop
insb
pop
add
mov
leave
xor
int
std
outsl
or
cli
adc
push
mov
inc
or
call
clc
incb
pop
shr
popw
call
xchg
xchg
push
jne
enter
cwtl
xor
dec
pusha
lea
lahf
movsb
lea
mov
and
popa
xchg
mov
imul
ja
icebp
xor
xchg
test
pushf
in
call
and
movsb
mov
inc
mov
mov
pinsrw
aad
sbb
icebp
push
sbb
sahf
sti
loopne
lods
sarl
insl
add
or
push
bound
sti
leave
adc
jmp
xchg
xchg
jmp
out
fdivrl
pop
aaa
call
int3
pop
jbe
push
cld
lods
je
or
cmp
faddl
in
sub
lods
call
lods
sub
cmp
outsl
das
loopne
cmp
xchg
lods
in
sub
jp
push
sbb
cmpsl
mov
and
mov
fnstcw
xor
mov
cmp
cmp
sub
push
pop
aam
push
out
popa
out
sahf
dec
mov
jmp
jmp
or
xchg
adc
lods
jae
mov
mov
mov
adc
fsubrs
movsl
ds
push
inc
imul
fistps
jecxz
lret
adc
xchg
sti
mov
add
cmp
push
imul
fstpl
cmp
imul
data16
jmp
cmp
mov
out
add
out
dec
cmc
jp
test
clc
jge
ds
fsubrl
mov
xor
pop
iret
lret
sub
sub
pusha
in
xor
mov
enter
dec
jnp
fidivl
popa
sbb
sbb
or
or
pop
add
arpl
adc
push
popa
in
jmp
pop
cmp
fadd
rolb
mov
out
mov
sbb
clc
jbe
mov
adc
sahf
xor
push
push
ja
push
divl
pop
adc
neg
lret
jle
in
loope
mov
mov
jg
lds
mov
test
push
in
sub
popa
or
mov
pop
inc
ljmp
pop
fbld
sbb
sti
cmpsb
dec
sub
fcomip
xor
mov
iret
jns
movsb
movsl
gs
ja
push
inc
shlb
add
push
hlt
pop
dec
shlb
dec
mov
lahf
pop
test
push
adc
or
sub
push
fimuls
sbb
inc
mov
fidivrl
aad
adc
and
dec
in
or
rcrl
or
cmpb
push
das
bound
arpl
mov
xor
mov
sub
daa
pushf
or
popa
or
push
popa
or
in
adcb
adc
jmp
add
mov
mov
xchg
lahf
in
rcll
sub
jo
pop
insl
mov
ds
mov
in
sahf
test
sbb
orb
andb
stos
mov
jb
pusha
cmpsl
mov
fdivp
sbb
outsl
dec
call
bswap
mov
cmp
aad
pop
inc
in
push
call
addr16
mov
idivl
aam
ret
aad
cltd
test
dec
jge
fidivl
cmp
xchg
bound
adc
pop
push
jl
dec
bound
xchg
cltd
loop
test
fs
cmp
fidivl
fdivr
dec
dec
hlt
adc
fs
sub
sti
insl
xchg
inc
inc
call
adc
mov
push
test
fiaddl
mov
mov
jbe
lcall
cmp
cli
shll
mov
sar
popw
pop
aaa
pop
out
aas
inc
xchg
adc
cmp
cmpsb
aam
jo
lds
into
xor
in
stc
adc
inc
push
xchg
stc
mov
ss
mov
hlt
fidivrs
idivl
cmc
rcrl
push
rol
jp
dec
mov
inc
push
dec
xchg
fbstp
push
movsb
mov
ret
pop
pushf
movsb
jnp
lds
imul
in
sub
loope
fldenv
push
shll
mov
movsl
or
sbb
out
add
ret
mov
fld
mov
push
pop
push
outsl
and
jmp
rol
cwtl
sub
sbb
faddl
xchg
cmp
in
add
jae
adc
out
int3
dec
fisubrs
mov
mov
inc
arpl
scas
dec
mov
xchg
pop
das
or
jo
mov
insl
mov
fcmovb
mov
and
ret
and
std
mov
imul
and
xchg
pop
sub
or
pusha
mov
mov
adc
and
data16
mov
xor
dec
push
dec
mov
mov
mov
add
das
xor
or
dec
fsubp
lret
les
pusha
ret
or
scas
cld
dec
addl
aad
adc
or
pop
bound
ja
jne
xor
sbb
popa
xchg
pop
divl
cli
mov
loopne
mov
mov
cli
neg
lret
sbb
inc
xchg
sub
jnp
xchg
rcll
xchg
loopne
scas
push
and
cltd
test
std
test
pop
clc
or
pop
in
or
in
mov
mov
stos
pusha
mov
xchg
fwait
mov
cmp
adc
jle
jb
xchg
or
jle
call
sti
inc
and
cmpsb
ror
scas
mov
data16
sarl
push
add
inc
imul
lcall
outsl
in
inc
lcall
inc
mov
inc
arpl
mov
jge
lcall
adc
xor
mov
popa
xor
ret
nop
icebp
fadds
sub
mov
dec
arpl
mov
iret
repz
inc
negl
push
cmp
test
mov
leave
into
scas
adc
dec
push
mov
stos
push
ret
xchg
mov
stos
test
mov
je
jae
aam
xchg
pop
mov
jnp
aas
pusha
in
mov
xchg
push
outsb
or
std
shll
arpl
mov
mov
xchg
pop
outsb
ss
push
cmp
sbb
ret
lcall
hlt
stos
jmp
scas
xor
mov
test
push
sbbl
jg
push
aad
lds
in
in
inc
pop
filds
pop
push
hlt
jl
jp
stos
sbb
or
push
xor
ret
stos
adc
lahf
inc
jae
pop
loop
and
xchg
sub
xchg
js
and
xchg
or
stos
fbstp
imul
mov
pushf
ja
sbb
shll
std
inc
mov
mov
ss
jecxz
sti
imull
pop
hlt
lock
fs
hlt
fimuls
cs
push
jo
adc
jo
adc
cmpsb
cmp
int3
pusha
push
mov
sub
adc
ljmp
push
lods
push
shll
addr16
stos
and
lret
pop
jne
aaa
xor
or
push
imul
imul
jg
mov
aas
es
stos
das
jp
jecxz
subb
ret
jmp
loop
testl
orl
shr
addb
add
fwait
mov
scas
adc
dec
outsb
je
sub
inc
mov
mov
mov
test
sti
and
and
inc
cwtl
cs
or
pop
push
fisubs
sar
push
ret
push
js,pt
das
imul
cld
mov
mov
cltd
rcll
cmp
dec
pop
push
and
cmp
lods
mov
fs
ljmp
xchg
popa
jecxz
or
clc
fs
push
sbb
repz
dec
lret
jl
fbstp
in
pop
sbb
jecxz
mov
inc
sbb
mov
push
xor
loop
ljmp
pop
pop
xchg
cmp
add
call
adc
stos
xor
pop
movsb
pop
xchg
push
push
xchg
jae,pn
adc
lds
pop
or
xlat
test
pop
mov
cmp
insl
fld
addr16
int
or
mov
movsb
sub
enter
sbb
rcl
or
and
push
aas
clts
decl
stc
out
shll
add
int
fnstcw
movsl
lahf
aaa
int3
mov
aas
add
add
push
sbbb
out
repnz
jmp
in
into
or
divb
aam
cld
inc
call
jb
mov
std
inc
jno
shlb
push
mov
pop
push
sub
cmpsl
or
sub
ljmp
push
out
jo
push
in
sub
mov
or
out
clc
out
movsb
jns
insl
xor
mov
movsl
in
ret
xor
jb
xchg
sbb
cmpsl
jnp
outsb
fisttpl
sbb
fiadds
mov
pop
repnz
xchg
rorb
filds
xchg
pop
pop
mov
andl
mov
jl
fidivs
mov
pop
mov
jle
mov
faddl
out
and
sub
push
adc
xacquire
mov
mov
mov
aam
nop
push
fisttpl
test
and
push
aam
pop
clc
and
popf
mov
mov
jmp
xchg
jmp
shrb
in
mov
in
lret
insl
outsl
mov
jg
pushf
xchg
and
sbb
lods
xor
pop
enter
test
mov
inc
std
sahf
add
or
add
enter
std
jge
loop
adc
ljmp
shr
sbb
mov
mov
pop
ror
sarl
in
mov
loop
arpl
aam
sub
aad
and
xor
push
inc
into
nop
sahf
cmpb
repnz
aas
cmp
sbb
inc
test
ja
ss
orb
pop
insl
xchg
js
ret
lcall
iret
out
arpl
fldcw
pop
inc
andl
int3
insb
out
xlat
pop
and
mov
cmp
rcrb
lds
adc
cmp
push
cwtl
testl
cmp
mov
cmpsb
adc
inc
addr16
fstps
mov
test
cltd
push
mov
cmc
out
push
fs
and
push
sub
add
cmpl
pop
inc
icebp
jp
je
push
adc
enter
dec
mov
arpl
cmp
lret
push
and
adc
and
movsl
jg
insl
cld
sbb
pop
cwtl
lea
xor
mov
pop
push
pop
ljmp
loop
aaa
jp
jl
pop
cmpsl
outsl
data16
mov
xchg
stos
push
js
dec
xor
notl
clc
push
stos
cmp
jbe
pop
xchg
fucomip
rcll
iret
jmp
ds
setg
stc
scas
mov
ja
mov
mov
ficomps
test
sti
inc
or
sbb
aaa
or
stos
rclb
test
adc
adc
daa
in
jmp
movsl
add
xchg
pushf
cmpsl
les
or
adc
jae
sbb
inc
add
jbe
push
hlt
pop
ret
sub
ljmp
cmp
daa
test
cmc
jns
pop
mov
mov
or
push
mov
mov
lea
fwait
cs
xchg
mov
add
and
sub
movsb
fadd
into
test
clc
cmpsb
std
arpl
dec
cs
das
mov
push
fcmovu
mov
or
jae
fisttps
cli
xchg
stc
cli
pushf
xchg
fcoml
mov
popf
lods
sbbb
pop
lods
mov
lock
sbb
addr16
movsb
fnstsw
cwtl
aad
ss
ret
mov
add
jge
dec
inc
fabs
push
inc
mov
sbb
xor
dec
inc
mov
pop
ljmp
jmp
shl
ja
push
cmp
mov
fisubl
loopne
lods
stos
and
mov
loopne
fldl
dec
sub
xchg
dec
xor
ljmp
adc
dec
enter
jecxz
xor
pop
lret
or
sahf
arpl
mov
cmp
sub
pop
cmpsb
sbb
lret
fcomps
mov
mov
stc
push
loop
out
dec
jns
mov
jg
jl
negb
jne
xchg
bound
sbb
dec
cwtl
push
xlat
enter
fsubrp
cmpsl
int3
add
xchg
mov
clc
add
pusha
xor
bound
jp
clc
or
ficoml
mov
and
hlt
add
jl
fsubrl
sbb
mov
pop
or
xor
pushf
clc
jno
cmp
xor
in
inc
adc
popf
push
cmc
rclb
test
mov
add
mov
add
aad
sub
xor
in
imul
xchg
sbb
mov
xchg
shl
mov
mov
mov
dec
out
test
daa
dec
shrb
or
cmp
mov
ljmp
sub
and
sub
add
mov
push
mov
mov
pop
rcll
cmp
and
xchg
mov
jge
jmp
push
daa
jp
cld
les
lds
loopne
sarb
clc
inc
inc
out
pop
ret
int
sub
dec
mov
push
xchg
xchg
bound
push
push
sbb
jns
mov
xlat
jecxz,pn
out
xchg
cmpsl
sub
mov
cli
mov
mov
inc
loopne
cmp
xchg
push
rcll
xor
outsb
pop
push
hlt
jb
lds
sar
int
scas
inc
cmpl
fisubs
js
loope
push
hlt
sub
and
bound
xchg
imull
sbb
into
js
test
dec
mov
hlt
sub
push
inc
cmp
movsb
jns
push
dec
add
aas
lret
cmp
mov
sbb
push
into
add
sbb
add
mov
push
xchg
loope
push
stc
cmp
sbb
enter
pop
jb
pushf
mov
sti
bound
nop
pop
rclb
or
imul
aad
add
ret
xlat
dec
daa
icebp
fstl
add
out
mov
pusha
repz
out
or
adc
mov
push
jmp
movsl
add
nop
push
iret
mov
push
rclb
pusha
lret
cmc
aam
and
push
into
or
in
adc
nop
notl
popl
xchg
mov
inc
into
mov
sub
mov
pop
add
inc
iret
add
dec
ljmp
cwtl
wrmsr
add
mov
xchg
pop
shrl
test
fwait
pop
mov
incb
sbb
enter
inc
mov
mov
iret
ljmp
popa
in
lcall
inc
cmpsl
adc
insb
mov
sub
sbb
or
pop
pop
sahf
sub
out
mov
loope
nop
call
sbb
inc
in
fdivrp
repnz
jmp
pusha
cmp
mov
fdivs
int3
ss
cs
push
pop
fisubrs
pop
shrl
cs
xchg
cmp
xor
loop
mov
addr16
sbb
or
sub
pop
xor
inc
stc
mov
jno
jne
mov
imul
test
and
mov
mov
or
pop
in
mov
sub
push
inc
jge
jle
nop
lahf
cmc
add
jnp
and
mov
inc
pop
jno
pop
mov
sub
mov
add
rolb
popf
push
sbb
jo
adc
repz
lds
and
scas
xchg
lods
loope
lret
scas
scas
lods
fwait
jge
dec
stos
push
aad
cli
sub
xor
pop
les
cld
dec
cmpsb
dec
nop
in
inc
inc
xchg
inc
or
out
add
mov
mov
ljmp
inc
jge
add
dec
fldt
negl
or
mov
je
push
pop
mov
mov
mov
pushf
lret
loope
sahf
shlb
into
outsl
dec
int
negb
jbe
and
xor
jo
daa
adc
cmp
sub
cs
data16
outsl
cmp
pop
mov
pop
xchg
xchg
jne
inc
into
and
jo
testb
ret
pop
shlb
adc
pslld
cmp
imul
or
push
inc
decb
sbb
fmull
pop
jb
das
jne
mov
push
rorl
push
rcl
ret
shl
sbb
out
mov
jle
out
jp
bound
mov
jle
call
jns
xchg
mov
sahf
shlb
iret
cmp
xchg
mov
popf
mov
inc
shlb
sbb
and
dec
movl
jns
xchg
push
pop
fnsaves
jp
adcb
popa
inc
mov
cmp
xor
int3
outsb
jns
lret
xor
ja
les
arpl
cmc
adc
cmp
cwtd
cmp
shll
mov
xorb
stos
sbb
das
cmp
xor
sub
pop
decb
loope
ret
fs
scas
popf
cwtl
sarb
enter
add
xor
add
mov
sbb
dec
mov
push
cmp
cmp
outsb
mov
fcoms
xchg
mov
xor
pusha
cs
daa
inc
insb
les
int
popf
inc
arpl
push
leave
fdivs
cmp
mov
fdivl
lock
sbb
pop
aas
and
repz
push
jb
hlt
jp
seto
mov
data16
sub
or
dec
xchg
mov
popa
mov
shrb
push
call
scas
sahf
dec
bound
shrl
ds
mov
dec
mov
dec
or
cld
mov
adc
dec
mov
or
mov
lret
insb
inc
and
mov
dec
sti
jle
andb
hlt
rcr
rcrl
sbbb
test
mov
pushf
pop
in
mov
add
pop
outsb
leave
jbe
int3
sbb
jnp
add
cld
rorl
push
jno
push
and
xor
dec
jno
lea
sbb
out
test
movsb
fistps
lret
fidivl
dec
gs
addb
adc
dec
push
addr16
jnp
xchg
pop
cwtl
and
pop
hlt
ret
add
sahf
mov
push
ss
aaa
push
inc
xor
pop
or
iret
insb
and
mov
cmp
mov
push
fxch
xchg
cmpsb
test
sbb
xchg
or
arpl
jmp
xor
cmp
push
in
int
in
std
push
pop
bound
cmp
adcb
fimuls
xchg
stc
fdivrl
stc
xor
mov
cmp
xor
xorb
fsubrs
loop
sub
push
mov
mul
js
cmp
and
test
jle
and
jp
push
stos
jg
mov
jp
inc
mov
stos
sub
iret
sbb
es
lock
mov
insb
sbb
lahf
call
sub
or
sub
test
mov
or
je
push
or
mov
in
inc
add
dec
jbe
mov
push
data16
mov
sti
xchg
or
sbb
pushf
hlt
pusha
cltd
push
ret
and
pushf
push
ja
xor
pop
adc
std
jp
dec
std
pop
xchg
loope
adcb
enter
mov
inc
sub
sub
xchg
repnz
pop
repz
sub
xchg
mov
insb
sub
dec
out
sbbl
dec
xlat
add
cwtl
or
jae
and
fisubrl
lods
sbb
fdivs
pop
mov
ret
inc
nop
jno
push
std
adc
test
popf
popf
jb
fs
js
daa
mov
and
mov
dec
cmp
sbb
loopne
loop
add
in
mov
lock
dec
jo
stc
std
jno
push
jmp
xor
sbb
add
mov
incl
sahf
jle
fisttpll
addb
ja
lret
jnp
dec
mov
add
xor
inc
ret
pop
test
loopne
sub
dec
adc
adc
fdivrs
ret
adc
mov
movsb
hlt
jecxz
fwait
xor
pop
lock
popf
adc
mov
std
scas
adc
cmc
pop
sbb
movsb
sub
xchg
jle
sub
fsts
push
fiaddl
mov
add
cmp
jle
imul
outsl
sub
mulb
push
fdivrl
mov
ja
mov
loop
jl
or
jmp
scas
cmp
lret
int3
jne
mov
cmpsl
pusha
add
scas
mov
movsb
andl
daa
adc
mov
in
hlt
sbb
dec
rcll
lods
mov
fdivrl
push
dec
ficoms
adc
xchg
add
cltd
lock
add
pop
xchg
data16
dec
fs
sbb
cmpsb
add
mov
push
pushf
fists
pop
in
sysenter
pusha
adc
inc
lds
out
sbb
cmc
sbb
out
add
stos
xchg
call
pop
push
ret
sahf
aad
push
jb
repnz
dec
outsl
enter
inc
xor
cmp
and
jno
add
xchg
cli
jp
les
ja
xchg
sbb
bound
add
pop
test
icebp
mov
cmp
or
push
fadds
add
int
nop
lret
in
fwait
dec
sbb
pop
pop
sub
lock
ja
les
mov
mov
bound
mov
mov
sub
sub
cmp
add
lcall
add
mov
les
out
decl
jbe
mov
jp
xchg
stc
xorb
insb
sub
cmp
cmp
xor
loope
es
loop
ret
call
inc
cmpb
dec
cltd
daa
int3
pop
orb
cmpsb
jge
ret
iret
jg
sahf
or
jnp
pop
mov
imul
xlat
sbb
mov
inc
sbb
lods
mov
lret
inc
dec
cmp
mov
mov
or
lret
dec
push
inc
stos
xchg
out
stos
adc
jo
mov
push
bound
mov
fsubr
dec
in
imul
lea
pop
pop
cmp
xchg
adc
dec
shr
mov
xchg
or
stc
dec
inc
call
or
inc
or
push
lcall
jle
jne
lds
test
cltd
xlat
mov
or
cmp
mov
mov
sahf
inc
xchg
xchg
call
mov
add
sbb
test
in
mov
mov
dec
push
stc
inc
roll
leave
shll
stos
mov
jne
mov
roll
add
out
mov
push
aaa
ss
ret
sbb
mov
pop
mov
dec
dec
xchg
xchg
jle
in
jnp
dec
test
mov
cmp
rsqrtps
sub
inc
in
int3
pushf
sub
shll
cli
cmp
out
and
aad
fiaddl
lock
pop
fcompl
pop
cmp
or
and
insl
xchg
mov
xchg
js
xchg
xor
adc
cmpsl
cmp
or
sarl
xor
ljmp
xchg
and
inc
jge
rep
xor
les
pop
ss
dec
push
or
mov
xor
aaa
lds
or
std
mov
mov
data16
jns
pop
inc
sub
sahf
jbe
jmp
pop
xchg
push
jmp
pusha
loope
ss
inc
lret
aad
push
cli
dec
push
ja
mov
inc
fildll
imul
dec
cmp
fdiv
inc
add
push
adc
mov
scas
std
cmp
gs
test
xorb
js
jb
fs
aas
jb
fucomip
in
shll
arpl
fistps
int3
dec
in
mov
leave
inc
call
cwtl
or
in
fwait
cmp
pop
mov
mov
push
pop
fdivs
repnz
jecxz
mov
call
aas
je
jae
mov
inc
mov
lock
inc
jb
ss
jmp
shlb
add
jle
mov
fnstenv
push
cli
inc
inc
movb
inc
imul
dec
and
popl
mov
sbb
popa
addr16
std
cmp
sub
cld
cmp
insl
mov
aaa
ficoml
ds
push
repz
and
mov
push
mov
mov
notb
jmp
sub
scas
cmc
int
adc
adc
cltd
loope
dec
imul
jns,pt
pop
push
lahf
repnz
jo
xchg
add
inc
lcall
int3
shrl
sbb
addr16
inc
les
pop
test
test
mov
out
sahf
out
mov
fcoml
jo
xchg
add
adc
cmp
pop
scas
movsb
cmp
ret
outsb
imul
jl
mov
es
inc
in
pushf
mov
out
inc
or
in
cltd
cmp
ret
mov
inc
mov
jmp
jb
stos
ss
xchg
fildl
sti
into
xorb
push
clc
mov
cmc
lret
test
dec
sbb
call
pop
imul
shl
sbb
mov
xor
dec
xlat
mov
je
push
stos
lods
std
sub
add
loop
or
or
mov
dec
pop
outsb
pop
pop
fmuls
jne
cld
enter
sbb
aaa
pop
and
mov
xchg
mov
xor
popf
or
push
gs
pop
jno
mov
jmp
pop
movsl
xor
mov
xchg
mov
cmp
ficomps
cmc
fistpl
sub
jecxz
inc
xchg
jo
test
or
cmp
pop
nop
outsb
jg
fistpl
insb
aaa
add
lods
fnstenv
pop
or
insb
lock
ljmp
ss
pop
fistpl
fisubl
push
adc
cmp
or
mov
xchg
pusha
test
adc
movsl
das
popf
jp
adc
pop
in
jb
jae
push
ja
pop
mov
pop
je
pop
sarb
ljmp
adc
jbe
mov
sbb
bound
jne
popa
mov
lret
push
or
sbb
dec
jnp
cld
incl
sbbb
idivb
inc
xor
mov
inc
outsl
enter
mov
mov
and
fs
mov
mov
mov
data16
movsb
mov
sub
dec
cmp
xor
xchg
outsl
or
dec
mov
ss
mov
hlt
xchg
call
out
ljmp
or
push
pop
inc
iret
adc
mov
sub
test
ss
cld
stos
xchg
lcall
add
dec
mov
fs
loop
int
dec
sub
mov
jb
mov
popf
daa
lret
xchg
lret
inc
pop
addr16
pusha
cmp
jns
lds
imul
pop
mov
jbe
movsl
sti
cltd
sub
cmp
push
inc
rcrl
jnp
jo
xor
movsl
insl
cmc
xor
jg
xorl
sub
adc
scas
sub
cli
mov
out
mov
ret
out
inc
mov
pop
shll
push
xor
cmpsl
cmp
inc
pusha
mov
and
pushf
nop
jle
fidivs
rol
sbb
lcall
mov
scas
mov
sub
jg
cmpsb
cmpsl
fwait
xchg
inc
es
ret
cwtl
lea
into
mov
pop
and
ret
sbb
cmp
xchg
daa
jmp
jp
dec
hlt
int
push
insl
push
cmp
mov
jno
pop
sbb
lods
movsb
shrl
mov
pop
jp
and
dec
loopne
cmp
or
sub
lret
pop
jnp
shll
lahf
push
clc
ljmp
xchg
jl
jbe
cltd
cmp
mov
mov
adc
sub
pusha
ret
push
es
pop
inc
pop
cmp
and
cmc
sbbl
data16
sub
iret
dec
jg
rol
les
loope
idivb
and
inc
in
shll
testl
ja
int
movsb
mov
mov
sub
in
jle
push
push
out
lds
jo
xchg
insl
outsl
adc
aad
push
inc
into
mov
fwait
les
fstpt
inc
mov
inc
call
into
cld
popa
pop
imul
je
in
stc
mov
jae
xor
push
inc
fwait
test
mov
xor
xor
xchg
push
mov
lret
sbb
cmp
std
pop
push
and
mov
inc
add
test
or
sub
dec
rcrb
inc
mov
cli
jo
dec
fidivrl
rclb
add
push
mov
loopne
inc
out
out
sub
arpl
fidivrl
push
lahf
push
hlt
mov
inc
in
fwait
int
pop
mov
popl
lea
adc
lahf
inc
mov
and
cmpsb
push
mov
icebp
inc
pxor
push
sub
cmp
mov
mov
xchg
popf
jg
insb
in
pop
and
push
mov
and
scas
push
cltd
dec
push
fisttpll
xlat
repz
or
bound
push
sbb
fldl
inc
pop
dec
add
lock
insl
js
pop
add
sti
push
shlb
scas
pop
mov
dec
test
mov
addr16
pop
and
clc
shrl
mov
dec
dec
xor
xorb
out
or
cmp
fistpl
call
insb
jae
dec
and
cmp
notb
lret
xchg
push
pop
jecxz
xor
fldt
mov
ss
outsl
test
dec
enter
and
dec
add
sahf
and
mov
mov
inc
jge
dec
jmp
in
lcall
mov
ret
and
mov
daa
data16
mov
cmp
je
fcomip
cmpsl
fcoms
mov
orb
mov
filds
xchg
xor
dec
or
or
mov
insb
je
daa
push
out
int
stos
mov
pusha
lret
scas
ficompl
out
into
inc
es
xor
mov
sub
dec
adc
add
dec
pop
fistps
mov
xlat
gs
cmpsl
cmp
repnz
clc
adc
fs
lea
test
cld
rcrl
call
imull
pop
push
adc
mov
mov
iret
mov
adc
popf
movsl
cld
or
test
mov
mov
add
lcall
stc
call
je
pop
xor
adc
aas
xchg
cltd
pop
mov
add
std
popf
lret
pop
push
imul
cmc
shr
cli
shl
lcall
in
repz
sbb
pop
insb
mov
loopne
adc
sbb
sbb
jmp
adc
sbb
adc
xchg
inc
lock
sbb
jns
cmp
into
inc
xchg
and
add
mov
dec
pop
clc
jo
shll
lcall
test
iret
add
adc
mov
mov
add
aad
stos
mov
stos
pushf
int
push
dec
cmp
movsl
test
clts
inc
jp
es
divl
inc
mov
notb
xor
pop
repz
iret
hlt
mulb
in
add
pop
push
mov
mov
mov
or
out
add
lock
insl
and
outsb
ds
xor
shlb
or
cwtl
mov
mov
imul
add
add
into
inc
ss
lods
xor
stos
inc
push
mov
adc
fistps
xchg
sahf
pop
push
inc
cmp
or
inc
out
add
mov
pop
scas
sub
aas
mov
sub
mov
or
push
ss
shlb
mov
mov
push
inc
out
sbb
test
mov
in
inc
lret
cs
das
lds
push
mov
daa
imul
mov
je
ss
call
mov
loope
jp
std
push
addr16
xor
push
test
or
pop
push
insb
std
fmull
push
dec
sbb
lods
adc
sbb
aaa
psrlq
lret
or
mov
das
loope
push
popf
movsb
add
pop
addl
cmp
insb
mov
sbb
and
xor
scas
call
dec
push
popf
outsb
scas
pusha
icebp
mov
mov
inc
fimuls
int3
cmpsl
mov
fnstenv
orb
adc
lds
lret
lea
xor
ds
pop
xchg
loop
loop
push
jg
in
pusha
fcompl
insb
call
mov
movswl
sub
jnp
mov
jne
add
or
xchg
sbb
mov
sub
or
adc
data16
add
out
imul
mov
pop
mull
or
mov
lods
adcl
xor
dec
lcall
shlb
sub
sub
jne
mov
inc
lahf
xlat
mov
insl
cmpl
gs
sbbl
adc
add
mov
mov
popa
sahf
adc
lea
and
ret
dec
jb
lock
sar
dec
mov
mov
ja
jo
mov
arpl
test
iret
lret
xor
jno
mov
sbb
rcrb
fldcw
in
rcll
cmpsl
jo
inc
adc
and
out
adcl
subl
fstpt
cltd
xchg
adc
lods
mov
jl
lcall
jne
insl
mov
push
cmpl
fisttpl
dec
dec
fwait
xchg
rorl
xchg
pusha
in
enter
data16
jle
mov
aam
testb
in
and
test
rcr
sbb
gs
loopne
clc
sbb
outsb
xlat
mov
push
les
cmpsb
iret
pop
into
orl
cmp
pop
add
jo
pop
shrl
cmp
ja
fcomps
xor
sub
loop
mov
outsb
lods
xor
popl
outsl
ret
push
mov
and
sub
dec
sub
pushf
dec
vmwrite
in
scas
lods
incl
push
cli
addr16
and
jns
dec
dec
dec
jge
outsl
out
outsl
pop
enter
mov
push
mov
mov
mov
lret
jp
fistpl
arpl
push
ds
pop
jbe
sahf
jmp
cmp
jp
dec
insl
inc
test
in
addl
lret
aas
movsl
repz
ja
movsl
adc
ljmp
imul
sub
mov
or
outsl
mov
pop
cmp
loopne
popf
push
lods
mov
lret
cmp
cmc
push
in
adc
mov
pop
mov
call
das
adc
scas
or
or
mov
inc
add
in
andb
push
add
aas
jns
icebp
push
push
dec
sahf
stos
ffreep
loope
mov
test
dec
lcall
pop
pop
daa
adc
lcall
push
outsl
lea
cli
mov
icebp
xchg
pop
push
xchg
jle
bound
ja
push
mov
outsl
xchg
xchg
xor
cwtl
mov
sti
and
sti
test
and
jnp
stos
shll
mov
call
xchg
jp
jb
mov
push
fstpt
stos
add
and
cmp
cli
inc
xchg
pop
jl
push
mov
ljmp
test
add
and
ja
cmpsb
fs
stc
mov
jb
mov
inc
sbb
mov
jge
insl
pop
je
jns
mov
out
sbb
xlat
mov
cmpsb
fcomps
cmp
fsubr
adc
fcoml
imul
sub
mov
lds
cmpsb
js
fxch
xor
push
jb
scas
ds
xchg
inc
daa
loop
and
lret
shl
fwait
test
insl
push
or
mov
mov
call
icebp
xor
fs
out
outsl
add
rcrb
aas
pop
add
lahf
imul
testl
in
adc
lods
mov
push
inc
mov
sbb
pop
adc
je
insl
dec
aaa
js
imul
mov
inc
cld
lods
cmp
arpl
sahf
pop
aam
lahf
dec
pop
into
pusha
mov
and
scas
std
cmp
ja
bswap
pop
push
fldl
push
mov
fcomps
aaa
insl
push
sbb
cmp
nop
mov
or
sub
sbb
movsb
shrb
in
fstp
loope
inc
jno
std
stos
movsb
cmp
or
inc
jae
in
xchg
dec
or
loope
clc
xchg
in
xchg
aam
push
inc
adc
lods
rep
xor
push
jle
daa
lea
stos
pop
cmp
jmp
mov
sbb
add
add
sub
xor
negb
xor
push
inc
mov
adc
out
int3
cmc
jmp
into
mov
fnsave
xchg
and
push
jne
sub
jg
les
dec
sahf
shlb
aaa
lods
mov
popa
in
ss
adc
add
test
mov
jle
push
int3
clc
cltd
popf
jb
mov
sub
fs
inc
popl
adc
mov
mov
mov
mov
sti
xchg
mov
push
xchg
pop
xor
mov
dec
xlat
pushf
mov
bt
sub
jle
insb
mov
popa
push
mov
sbb
mov
ds
and
sbb
jnp
ljmp
sub
pop
xor
push
jae
xchg
icebp
cmp
sub
sbb
pushf
lods
sub
lods
push
sbb
mov
popa
push
call
jb
loope
xor
dec
push
adc
ds
loope
push
push
call
mov
int3
or
iret
or
cmpsb
dec
gs
push
movsb
movb
call
mov
inc
cmp
dec
pop
sub
xchg
inc
repnz
cli
call
mov
and
mov
inc
lock
xor
fnstenv
notb
imul
call
mov
cmp
push
mov
adc
ljmp
lcall
movsb
xor
orb
cmpsb
jmp
sbb
outsb
jl
jnp
ficomps
dec
movsb
fmull
and
repnz
xchg
mov
popa
adc
mov
push
lcall
xorb
arpl
stos
data16
test
cmpsl
clc
add
loope
in
and
pop
test
je
push
add
ret
test
jmp
lods
movsb
cmp
or
sahf
and
cmpsl
test
ror
pcmpgtw
lcall
xor
inc
fildll
cmp
cmpsl
adc
mov
mov
enter
xor
lcall
pop
aad
mov
sub
mov
cli
cmp
push
xchg
cmpb
push
inc
aam
in
sahf
cltd
push
int3
jmp
push
jbe
jp
cli
xlat
in
test
out
cld
dec
pop
xchg
dec
scas
in
adc
inc
andb
sub
loop
push
mov
sbb
mov
mov
nop
push
add
jnp
lods
lock
inc
cmp
insb
sub
xor
mov
aam
dec
add
inc
fdiv
xchg
call
pop
jmp
call
jecxz
dec
imull
xchg
jns
mov
push
push
xchg
mov
repnz
adc
adc
test
xchg
faddp
lods
enter
pusha
stos
cld
mov
adc
pop
dec
mov
dec
icebp
sub
xor
xchg
ja
adc
push
pop
cmp
dec
mov
add
out
adcb
fst
outsl
adc
outsl
lcall
mov
push
in
xchg
add
leave
mov
jo
scas
push
xchg
jg
jg
faddl
mov
cmp
in
mov
insb
pop
sbb
mov
insb
pop
jbe
inc
call
fistpll
push
inc
mov
jb
and
add
test
shll
jb
stos
insb
addr16
and
adc
in
inc
movsb
pop
es
out
je
push
adc
or
es
push
inc
hlt
xor
sti
scas
dec
dec
dec
lahf
jno
clc
pop
aaa
testb
sub
push
rol
dec
sub
cld
mov
push
mov
loopne
add
outsl
add
pushl
mov
mov
sarl
or
sarb
push
popf
inc
add
shll
push
jge
cmc
inc
lret
stc
xlat
jmp
pop
jb
mov
add
sbb
jp
pusha
push
lret
je
cmc
leave
int
mov
xchg
or
into
xor
inc
cmc
rorl
pop
jge
xor
fwait
and
lret
dec
cs
adc
jl
and
hlt
das
and
mov
lea
xor
mov
mov
ret
xor
push
ret
xchg
adc
mov
pop
loop
sub
sub
mov
mov
xor
jmp
xor
mov
cmp
icebp
cmp
cmp
mov
lahf
push
jp
inc
test
xorl
dec
cltd
andl
pusha
pop
repnz
dec
shl
xor
bound
mov
xchg
popf
stc
ja
out
lods
jmp
xor
or
divl
daa
aaa
or
jns
adc
and
pop
outsl
jecxz
cltd
lahf
push
xlat
mov
or
push
and
in
inc
je
into
hlt
mov
jp
pop
lods
stos
mov
mov
inc
push
xchg
out
fs
popa
pop
ret
mov
mov
xchg
pop
addr16
das
pop
ficomps
mov
adc
daa
int
pop
inc
mov
sub
xor
add
movsl
aam
imul
movsl
jl
stos
mov
lock
lcall
dec
inc
add
cmp
lods
mov
xor
dec
xchg
mov
xchg
xchg
jno
in
add
std
fidivl
ss
sete
inc
push
sbb
stos
inc
pusha
add
pushf
cltd
enter
test
pop
popa
fimull
popa
xchg
test
cwtl
lret
adc
and
faddl
std
repz
or
aam
dec
inc
ljmp
aad
dec
das
inc
rcrl
das
sub
clc
sub
popa
out
xchg
cmpl
imul
xchg
rcrb
dec
sbb
sahf
push
mov
std
cmc
pop
xchg
movsb
sbb
fwait
add
fnstsw
adc
outsl
jbe
aam
push
jbe
sahf
pushf
or
test
cmp
cli
pop
mov
pop
inc
cmp
xchg
sub
add
aam
mov
scas
adc
mov
iret
or
jo,pn
pop
mov
ret
jnp
push
mov
lcall
ja
mov
mov
fmuls
inc
lahf
fistl
and
cmc
fs
gs
xor
das
pushf
xchg
jae
inc
dec
scas
or
scas
dec
cmpsl
out
dec
sbb
repnz
in
mov
cwtl
std
jmp
cmp
dec
je
outsb
int
shl
jae
cmc
mov
cwtl
lods
in
xchg
stos
popl
movsb
icebp
cmp
movsl
jbe
pop
pop
adc
mov
mov
in
pop
mov
add
scas
repz
jne
or
and
or
arpl
dec
mov
jl
outsl
fimuls
inc
daa
popf
sub
stos
loope
stos
lods
mov
iret
hlt
inc
add
dec
loope
imul
lcall
xchg
sub
sbb
xchg
mov
cltd
lret
scas
nop
pop
loope,pt
clc
dec
cmp
arpl
dec
stc
jl
daa
lds
dec
test
fadd
dec
das
jno
jae
clc
sub
inc
into
and
jns
cmp
jle
ret
push
in
gs
sub
loopne
dec
lods
inc
stc
jecxz
add
sub
fwait
in
dec
loop
xchg
mov
pop
test
cltd
fstpt
mov
mov
mov
fmul
push
mov
imul
jmp
mov
xor
push
xor
pushf
push
ficompl
push
rolb
push
repnz
sti
lock
mov
imul
roll
adc
aad
ja
aas
xor
and
pop
sbb
in
cmp
scas
mov
dec
push
xchg
addr16
jae
ja
aam
loopne
outsb
cs
add
adc
test
loopne
shll
and
shr
pop
insl
dec
mov
xlat
cli
mov
subb
jge
lret
mov
lret
sub
idivl
sahf
push
leave
xchg
loop
xchg
fstps
adc
jl
test
pop
mov
stos
enter
cmp
and
sub
pop
daa
inc
dec
movsl
cmpsb
sbb
pop
inc
sbb
cmp
cmp
insb
addr16
rolb
pusha
pop
stos
and
insb
add
push
and
les
jle
aam
loop
adc
lds
aam
scas
cmp
outsl
sub
adc
xchg
ds
and
pop
rclb
xor
addr16
jg
xor
popl
outsb
adc
sub
popa
clc
jmp
mov
int
push
in
repnz
notb
insb
mov
sub
pop
xchg
std
inc
and
or
fbstp
sbb
arpl
lret
add
inc
jp
push
shr
ret
cwtl
mov
push
mov
mov
cmp
push
fdivr
pop
rorl
imul
bound
divl
sarl
jb
mov
ret
call
jge
inc
sbb
xchg
insb
cmp
push
insl
ja
pop
cmp
call
sbb
push
mov
xor
jae
nop
loop
xchg
scas
outsl
add
mov
xchg
push
fmul
mov
sub
notl
push
pop
lcall
cmp
xor
adc
sub
inc
fwait
inc
sbb
jae
test
inc
divb
fs
ret
sbb
cs
repnz
pop
mov
imul
xor
jg
xchg
data16
push
adc
jp
pop
out
xchg
fs
jo
jae
cmp
mov
adc
ljmp
or
andb
daa
mov
sub
cwtl
sbb
loope
push
add
dec
bound
int3
jbe
cli
and
ljmp
jne
lret
cmpsb
movsb
adc
das
jae
les
mov
sbb
adc
sti
mov
es
lret
push
xchg
insl
std
sub
fsubl
rclb
addb
pop
pop
fdivrl
mov
pop
rorb
or
orb
aas
ja
adc
fnstsw
jge
jnp
pop
mov
test
imul
loop
jl
mov
outsl
jle
jne
aad
repnz
into
or
in
out
int
mov
es
cs
add
mov
push
dec
in
jmp
push
repz
add
sub
sub
jp
cmpsl
mov
push
sub
insb
popa
cltd
scas
jge
stos
jecxz
add
ss
mov
pop
mov
call
into
sbb
test
add
xor
cli
popf
inc
jp
test
cmp
cmp
mov
divps
push
cmp
and
cwtl
lcall
aaa
xchg
xchg
jge
insb
mov
repnz
and
jg
testl
insl
sahf
mov
je
das
cmp
cmp
dec
lcall
jns
or
fidivl
pop
dec
scas
ret
inc
ja
mov
repz
pop
cltd
or
adc
insb
sub
mov
hlt
cmpsb
sub
cli
repz
cltd
in
dec
cmp
dec
icebp
adc
mulb
push
add
cmc
mov
adc
outsb
cmpsb
sbb
mov
push
stos
lods
mov
push
jmp
and
fcomip
gs
push
pop
and
or
fldl
push
mov
and
xor
dec
push
cmp
cs
roll
scas
jns
movsl
lods
and
in
outsl
adc
cmpsl
testl
sahf
lea
int3
movsb
mov
or
dec
pop
addl
pop
mov
ja
mov
and
hlt
xlat
cmpsb
or
push
push
sub
leave
or
add
lods
mov
adc
adc
jg
xchg
leave
std
lahf
dec
out
sbb
aad
orb
push
jns
mov
lods
inc
insl
sbb
cmp
int
jecxz
pop
loop
xor
les
mov
sbb
dec
sub
in
setae
jge
outsl
rdpmc
sbb
call
into
xchg
ja
jnp
outsl
in
fs
cld
pushw
cmp
loop
push
add
xchg
ret
and
test
jnp
mov
int
inc
fildll
add
sbb
dec
jge
and
test
mov
std
aaa
dec
xchg
sbbl
jl
outsl
iret
ds
nop
not
movsl
jae
lahf
jo
or
push
subl
xor
fsubr
xchg
fildll
cmp
pop
push
stc
mov
and
cmpsb
rcl
into
and
daa
and
or
pop
shl
fcompl
lock
push
idivl
xchg
data16
ret
adc
subl
mov
cwtl
sub
and
pop
outsb
push
loope
push
pop
fwait
jbe
fcmovb
not
testb
or
adc
mov
dec
lret
mov
and
mov
mov
mov
fdiv
cltd
lahf
pop
movsl
push
adc
push
arpl
jg
imul
cmp
sahf
mov
ret
test
mov
inc
mov
jg
sub
popa
xor
rcrb
dec
sbb
pop
fadds
in
mov
addr16
sub
stos
jg
insb
shr
xchg
jns
inc
test
adc
rcr
mov
lea
push
mov
in
jl
outsl
mov
iret
mov
bound
cli
lahf
pusha
lock
mov
es
jns
xchg
aas
xlat
lods
jl
inc
rolb
je
cli
xor
cmp
jno
lahf
mov
fisubl
push
call
jns
fnstenv
sbb
rol
sbb
ret
push
mov
stc
dec
ljmp
jg
testb
out
jg
outsb
scas
add
mov
lock
inc
cmpsl
xlat
or
test
xor
cmp
mov
sbb
mov
adc
pushf
loop
in
loopne
dec
xchg
ret
pop
mov
inc
push
fstpt
int3
cmc
inc
aas
push
pop
cs
outsb
sarl
iret
ffree
lock
jge
xor
and
int
das
mov
aaa
mov
fidivl
fcmovnbe
je
addr16
pop
or
add
xchg
xlat
mov
ret
push
ret
dec
sbb
loope
enter
es
add
jnp
stc
push
leave
xchg
add
sbb
mov
popf
sub
dec
call
es
dec
js
outsb
int3
es
mov
sti
push
mov
mov
stc
adcl
lock
out
mov
sahf
cmc
imul
dec
adc
movsb
or
rep
cmpsl
push
fdiv
icebp
dec
mov
sub
xchg
les
dec
inc
out
and
sbb
mov
data16
out
loop
negb
sub
push
or
cwtl
mov
arpl
sub
bound
adc
cmpl
jae
push
ret
xchg
or
sahf
push
sub
push
pop
or
cmpsb
mov
hlt
push
lcall
inc
or
insl
mov
push
pop
cmp
cwtl
movsb
or
sbb
aam
call
sbb
incl
jle
sbb
jno
jae,pt
pause
jmp
lds
jl
xchg
repz
mov
test
pushf
cmpsl
jp
pop
bound
mov
clc
ficoms
push
cli
push
mov
ljmp
pop
fidivs
xchg
push
loopne
arpl
mov
jns
inc
jno
add
push
and
dec
cld
mov
mov
rcr
jp
inc
aas
xchg
inc
mov
xor
jo
test
mov
cmp
push
cmp
dec
mov
mov
mov
mov
enter
mov
and
movb
adc
popa
dec
jno
pusha
jmp
push
daa
aas
mov
mov
cltd
cmpsb
jge
fst
decl
movsb
in
add
imul
inc
cmpsl
mov
mov
mov
xchg
sub
dec
insl
lret
jle
bswap
jnp
ljmp
ret
mov
xchg
mov
xor
adc
xor
rcrl
in
loop
sub
or
cli
cmp
dec
movsb
ljmp
jb
data16
sbb
pusha
mulb
adc
add
xor
jbe
outsl
lret
mov
mov
pop
addr16
lods
xchg
jp
dec
jecxz
xor
or
inc
daa
push
pop
mov
pusha
cmp
inc
xor
push
das
sbb
int
aam
andb
inc
insl
icebp
mov
stos
inc
inc
gs
cld
rcr
sub
gs
or
and
arpl
push
cmp
ja
mov
pusha
add
inc
loopne
and
test
rolb
dec
pop
mov
std
xchg
imul
push
mov
ret
xchg
push
mov
xchg
pop
jle
test
ret
pop
fcoml
enter
aad
mov
jb
pop
std
in
sarl
xorl
pop
and
aam
mov
or
push
lea
or
adc
shll
sbb
pop
movzwl
pop
mov
negb
and
mov
lret
push
mov
daa
or
je
mov
js
xor
mov
lret
mov
xlat
scas
out
mov
jg
pop
sub
push
pop
aaa
add
sbb
and
ss
xchg
into
nop
test
lahf
loopne
and
stc
test
mov
inc
adc
mov
pop
cmp
pop
ja
dec
xlat
outsb
mov
push
adc
cmp
in
out
ss
dec
fmul
stc
fwait
loop
imul
mov
fisttpll
xchg
dec
hlt
das
xchg
push
and
add
lods
add
xor
mov
movsb
mov
stos
insb
mov
andl
mov
shlb
mov
xchg
orb
out
fldcw
adc
ljmp
sub
xchg
mov
jl
stos
mov
cmp
movsb
fs
mov
sub
inc
mov
cmp
shl
and
adc
lahf
inc
lret
sub
cmp
xor
inc
adc
pop
adc
imul
shlb
or
pop
cmpsb
jecxz
shlb
mov
jbe
out
mov
push
cs
and
cmpsb
mov
cmp
mov
shl
or
stos
aas
mov
daa
mov
ficompl
lcall
mov
popa
adc
xor
js
xchg
jle
add
jl
and
inc
pusha
mov
scas
mov
lock
xor
jecxz
adc
inc
sub
xchg
sbb
push
in
sbb
lret
jae
xchg
adc
add
dec
xor
jl
adc
fnstcw
dec
jg
add
adc
out
subl
and
std
pop
addr16
sbb
ss
sar
mov
leave
add
lcallw
cmpl
xchg
lcall
mov
or
xor
movsb
cld
lods
inc
xchg
cmp
xor
fdivrs
pcmpeqw
mov
cwtl
xchg
push
push
dec
mov
mov
mov
out
sub
rol
lock
adc
cmp
dec
push
xor
push
cmpsl
inc
ss
sahf
or
cmpsb
fidivrs
push
test
mov
fistpl
pop
inc
adc
adc
sarb
or
dec
xor
add
sbb
or
movsb
pop
jmp
cmp
je
int
or
cmc
pop
adcb
mov
pop
xor
and
stos
cmp
outsl
daa
sbb
jge
inc
nop
pop
pusha
and
xor
pop
outsl
jle,pn
cmp
subb
sub
mov
or
ret
out
test
cmpsl
inc
movsl
mov
shll
in
xchg
lock
sbb
mov
cld
std
adc
dec
ret
xchg
jecxz
dec
or
bound
jle
cmp
cmpsb
jp
aad
cld
mov
mov
int
xor
mov
cwtd
ljmp
pop
add
push
mov
mov
xor
cmp
faddp
xor
xchg
enter
or
es
cmp
scas
dec
sub
roll
sbb
xor
xchg
xchg
sub
lretw
inc
lahf
shlb
out
xchg
jp
scas
jbe
xchg
pop
and
repnz
out
cmp
and
mov
or
inc
icebp
std
and
push
daa
inc
fnstsw
push
pushf
mov
mov
jae
cld
pop
or
into
in
stos
iret
cmpsb
add
or
xchg
cmp
andb
stos
mov
lcall
jns
mov
mov
sarl
mov
push
dec
incl
mov
div
dec
addr16
repnz
movl
push
mov
xchg
js
pop
or
pop
sub
xor
sub
andl
and
ds
mov
outsl
mov
lock
imul
in
divb
into
bound
addl
or
call
test
rcr
cld
sbb
lcall
ds
fistpll
mov
push
aaa
lods
jg
int3
mov
shl
rcl
cs
or
inc
es
mov
mov
pop
call
xchg
sbb
cmpsl
mov
aam
jne
cld
mov
push
mov
stc
xlat
rcrl
pop
xor
or
cmp
faddl
mov
xor
jle
jo
xlat
push
or
cmp
loop
das
out
fst
nopl
sbb
cld
sarl
insl
push
fistpl
sub
jb
and
aad
stos
push
rcr
add
mov
adc
adc
jle
xchg
cmp
cltd
aam
sbb
cltd
orl
ret
push
clc
mov
insb
mov
xor
mov
outsb
frstor
jnp
scas
push
cs
ret
adc
subl
mov
inc
je
scas
push
sub
add
loop
shr
adcl
in
movsl
scas
jmp
fidivl
xor
dec
or
nop
ljmp
cwtl
xorl
xchg
ja
jl
and
sbb
int
add
push
imul
cli
push
mov
pop
into
decb
cmc
sub
push
inc
loop
jmp
nop
jmp
mov
std
jne
lea
div
mov
cmpl
test
jnp
push
cwtl
jmp
xchg
add
loopne
scas
mov
cmp
dec
push
and
test
and
gs
xor
outsl
lea
mov
es
jo
xor
push
inc
std
shlb
stc
lcall
pop
mov
or
sarl
in
jmp
lret
inc
xchg
fcmovne
outsb
repz
jnp
mov
xor
loopne
fs
iret
mov
push
sbb
lods
adc
repnz
test
cs
xchg
call
aad
faddl
stos
in
push
inc
ret
mov
and
dec
adc
lea
inc
jns
int3
arpl
xorl
pop
pop
dec
dec
shrl
add
cld
pop
fdivrs
xor
adc
in
in
add
mov
mov
add
and
addr16
adc
ficomps
mov
add
fcoml
xchg
push
aaa
xor
mov
adc
shlb
mov
out
add
test
fstpt
mov
push
adc
xchg
subl
inc
fs
jle
xchg
mov
jae
es
in
inc
xchg
adc
dec
dec
push
imul
pusha
add
cltd
sbb
and
enter
scas
bound
jnp
hlt
xchg
pop
mov
aaa
pop
nop
mov
pop
sbb
add
mov
lret
xlat
faddl
sub
or
cmpsl
xor
dec
mov
loopne,pn
jge
jae
push
cmc
in
jns
ret
jl
push
xor
fstl
dec
mov
pushf
jg
lock
repz
mov
in
or
sub
jecxz
gs
or
in
testb
sbb
jae
cld
or
scas
pop
loop
aad
mov
clc
dec
sub
jecxz
in
out
pop
shrb
jl
mov
and
es
ret
imul
adc
das
add
ja
shl
dec
add
xchg
cmp
inc
inc
mov
ss
push
sub
pusha
mov
inc
mov
push
adc
je
out
imul
test
add
call
sbb
inc
add
addr16
sub
pop
mov
in
and
dec
sub
sti
ret
xlat
call
inc
sub
mov
sahf
divb
fiaddl
out
pop
mov
cmp
mov
or
cmc
xchg
out
popf
popa
xor
sub
xchg
dec
cmp
in
add
add
addr16
add
imul
popf
inc
je
cmc
adc
rcll
fs
and
je
flds
imul
xor
jno
les
fwait
std
mov
dec
mov
testb
sti
andb
jge
test
sbb
aam
and
insb
fisttps
icebp
sbb
sbb
add
fwait
sub
loop
push
call
or
push
ficomps
xor
add
dec
pop
insb
mov
or
sarl
or
pop
mov
test
cltd
fwait
iret
je
mov
mov
xor
jmp
fsubs
xchg
xor
rolb
shlb
imul
sbb
add
mov
cwtl
xor
sahf
arpl
jbe
ss
call
mov
push
ljmp
out
mov
add
out
add
stos
shlb
jmp
and
aaa
hlt
in
adc
or
and
mov
xchg
lods
pop
out
add
out
jg
in
sbb
and
xchg
mov
lods
mov
push
mov
in
inc
mov
or
inc
xor
lods
and
pop
inc
roll
cwtl
shr
pop
xor
jmp
xchg
jne
insl
lods
xchg
icebp
push
xchg
jo
outsb
pop
lret
ss
adc
xor
mov
pop
lods
mov
mov
push
or
subb
es
mov
aam
daa
xchg
jecxz
mov
and
hlt
sub
mov
pop
push
jnp
in
push
aas
mov
or
push
addr16
or
mov
mov
pop
and
inc
cmp
and
push
scas
shrb
mov
xor
fs
mov
pop
fldl
adc
mov
cltd
pop
cwtl
sub
popa
int
xor
xchg
jno
inc
das
or
jl
mov
out
mov
enter
outsl
jp
int
call
sarb
jae
or
jne
es
pop
inc
dec
insl
cmp
xor
outsb
xor
pop
xchg
fstpt
and
mov
mov
ljmp
add
push
arpl
mov
in
xchg
mov
loop
lcall
mov
fiaddl
pushw
lret
mov
dec
jle
pop
hlt
cli
stos
mov
in
jne
je
sbb
pushf
int3
cmpsb
push
inc
mov
push
dec
into
insl
add
mov
mov
mov
lea
dec
mov
dec
xchg
pushf
sahf
iret
add
mov
mov
clc
lahf
js
mov
scas
imul
and
mov
or
std
inc
lahf
loopne
adc
icebp
scas
rcr
jl
mov
mov
pop
xchg
cmpl
xor
fdivs
loopne
and
pop
and
mov
xor
sahf
lock
nop
outsl
pop
hlt
lcall
cs
mov
scas
int
or
dec
hlt
aaa
mov
rcll
jno
xor
leave
rcll
gs
or
xchg
fcomps
sbb
adc
mov
mov
cmp
rolb
sbb
mov
cmp
testb
cmpsl
xchg
pop
push
pop
aam
shrb
testb
jnp
shl
outsb
xchg
out
jns
jecxz
in
mov
cmc
pop
cmp
xchg
rclb
mov
push
push
xor
popf
add
in
dec
jge
in
std
pop
jbe
mov
dec
movsb
mov
inc
repz
pop
add
mov
sbb
lds
push
out
sub
inc
loopne
cmpsb
push
movsb
enter
dec
pop
mov
and
pop
sub
popa
pushf
lret
imul
pop
ja
mov
sahf
int3
iret
lods
jae
idivl
lahf
xchg
mov
or
push
and
test
mov
mov
or
xchg
pop
out
jnp
pop
std
movsl
test
xor
pop
into
lock
mov
test
push
pop
es
fildl
enter
fistl
xchg
pop
ljmp
mov
out
cmp
ljmp
orb
push
clc
fistpl
mov
cld
ret
in
mov
or
dec
sbbl
sub
dec
or
or
add
inc
xor
aas
sarl
sbb
je
dec
inc
add
xor
jnp
ret
xchg
lds
leave
adc
int3
ss
push
insl
mov
shlb
int
mov
inc
add
xor
test
je
scas
cld
sahf
sbb
test
cltd
jnp
add
cmp
gs
cmp
insl
mov
xor
adc
mov
dec
orw
imul
je
jecxz
or
repz
fldl
loope
in
aaa
mov
jmp
push
adc
shrl
dec
and
dec
mov
inc
jl
fisubl
nop
ja
xchg
mov
sub
mov
fsubl
push
lock
pushl
movsb
js
xor
xchg
push
pop
imul
dec
sub
mov
sub
insb
stos
mov
mov
xchg
ja
jecxz
lret
cmp
outsb
fbstp
clc
cmpsl
scas
or
mov
notb
mov
xor
int3
jae
arpl
push
lods
into
jecxz
test
add
inc
test
xchg
lds
sar
add
es
sbb
xor
xor
jae
cltd
mov
jo,pn
js
mov
in
mov
jae
adc
and
jmp
and
mov
fwait
cmp
and
push
sbb
jnp
pusha
adc
xor
lret
es
pop
ficoms
ds
aam
stc
ret
sbb
push
fidivrs
sub
fcoml
add
out
stos
xor
xor
dec
push
cmc
adc
mov
and
xor
fstp
inc
das
push
mov
jl
js
or
ficoms
pop
mov
rolb
ljmp
xlat
ljmp
jae
dec
pop
shlb
insb
outsb
cmpsb
cwtl
sub
les
fnstenv
dec
push
add
shrb
and
and
pcmpeqd
lret
inc
push
cmp
in
loopne
inc
xor
mov
mov
imul
cmp
pop
jne
fsubs
addr16
and
mov
arpl
int3
xor
xchg
test
int3
or
insl
jmp
gs
outsb
gs
sbb
mov
dec
push
mov
dec
loopne
outsl
call
mov
or
lods
loope
or
out
jb
xchg
add
push
dec
lea
idivl
lock
dec
jmp
out
into
sbb
push
test
aad
fsqrt
in
push
lret
sbb
or
pop
mov
js
adc
nop
aaa
sub
cwtl
mov
mov
lret
lea
xchg
cmp
test
mov
shll
addr16
jmp
xor
jmp
push
mov
dec
rclb
lods
push
cwtl
cmp
cli
jge
cmp
mov
pop
push
sub
cmp
xor
leave
sbb
fisttps
scas
dec
cmc
add
ljmp
in
in
pusha
pop
fcmovb
aaa
cmp
xchg
and
test
je
jns
clc
xorb
xor
pop
push
and
arpl
sub
xor
xor
xor
sti
sub
loopne
jg
mov
in
loop
push
pushf
mov
imul
sarl
push
pusha
arpl
or
cwtl
push
pop
lahf
mov
repz
popf
mov
adc
mov
xchg
cmpsb
out
enter
jno
rcll
lock
lret
jmp
sbb
fsubp
xorl
add
rcl
mov
je
xor
cmp
jb
cmpsl
add
pop
and
push
orl
aaa
aaa
mov
into
xlat
mov
ficoml
stos
lahf
adcb
sahf
imul
ja
daa
aas
pop
ja
add
fs
xor
xchg
incl
lahf
add
in
js
inc
sub
xchg
roll
notb
push
sarb
cli
bound
adc
in
jmp
add
movsb
pop
popa
sbbb
mov
xchg
inc
xchg
repz
scas
out
call
dec
js
and
push
pop
jbe
xchg
adc
adc
mov
movsl
xchg
mov
cs
sub
push
insb
cmp
test
fistl
std
mov
subl
and
loope
inc
sub
int
dec
mov
xor
xor
sar
shlb
repz
sub
nop
jno
or
mov
jbe
jle
dec
stos
daa
divl
data16
imul
out
mov
lret
insl
push
mov
rcrl
mov
in
xor
hlt
cmpsl
xchg
lock
notl
xchg
pop
bound
dec
lock
dec
or
push
sub
je
aaa
jb
or
adc
jp
adc
mov
in
arpl
xlat
mov
cs
pushf
push
xor
sbb
test
fldcw
sbb
insb
cmpsl
mov
cmp
stos
ret
enter
cmp
mov
fwait
adc
push
sbb
or
inc
imul
in
int3
or
jbe
ljmp
ljmp
test
lods
int
shrl
cmp
mov
das
push
fs
mov
or
pop
lret
insl
push
ss
push
repnz
iret
xor
insb
out
cltd
push
push
push
xchg
scas
rorb
and
cmp
push
mov
cmp
sub
in
sub
inc
in
shlb
sub
jno
push
test
mov
dec
pop
dec
movb
dec
ret
call
cld
sub
pushl
lret
dec
pop
fidivl
mov
mov
inc
or
lahf
xor
repz
xlat
sbb
inc
jge
ljmp
pusha
loop
jg
xchg
and
mov
jno
mov
jo
jmp
movsb
enter
lahf
dec
scas
call
cltd
jns
lret
fdivr
cmp
lret
mov
or
enter
aam
push
hlt
je
sar
and
add
sbb
lret
push
leave
and
aas
xchg
sub
push
into
lock
and
pop
ljmp
sbbb
cs
pushf
jnp
sub
inc
icebp
push
push
lea
ret
mov
insl
nop
cmp
adcb
and
cwtl
aas
sbb
int
out
xor
test
mov
inc
pushf
adc
test
je
xchg
cmp
ds
int3
and
jg
mov
pop
jl
add
or
call
add
cld
lds
and
jns
clc
leave
mov
orb
test
mov
popf
sub
fisubs
dec
push
cltd
jns
out
or
xchg
sbb
mov
fwait
jle
jmp
cmp
xchg
ss
or
jge
jmp
out
cmp
fidivs
loope
push
and
sahf
xchg
add
cpuid
push
inc
dec
sub
dec
dec
adc
aas
outsb
mov
fcoml
add
fwait
jle
pop
sbb
push
mov
add
fldl
cmp
stos
aaa
xacquire
pop
sub
fmuls
aam
jge
adc
dec
jo
movsb
je
or
xchg
std
fsts
cmp
dec
hlt
movsl
das
mov
fmull
cltd
dec
in
in
out
fidivrl
movsb
dec
out
jb
enter
pop
xor
out
ret
std
mov
or
add
pop
sub
sbb
push
xchg
add
pop
int
loop
push
aas
arpl
inc
push
out
push
or
dec
push
mov
stos
mov
sbb
jne
das
call
aad
into
mov
out
push
push
rol
aas
push
cmpsb
pop
imul
and
pop
dec
outsl
loop
jno
fisubrs
and
dec
hlt
mov
and
ljmp
push
cmpsl
mov
ja
lcall
jne
push
sarb
cli
cmp
stos
aad
fcmovb
adc
unpckhps
and
push
cmp
mov
mov
cwtl
push
inc
adc
aad
je
andb
pop
push
xchg
sbb
loop
add
ret
dec
aad
mov
xlat
fs
mov
das
add
pop
lret
jg
jmp
pop
cmp
and
push
movsb
mov
data16
out
fiadds
and
inc
pop
mov
and
sahf
cmp
inc
aam
fildl
xchg
cwtl
pop
popa
movsl
movsl
jo
xor
enter
rclb
pop
xor
mov
aam
mov
xchg
sub
mov
mov
pop
add
subb
es
dec
icebp
cmpsb
push
pusha
push
xchg
mov
cwtl
jle
out
arpl
push
in
je
sbb
inc
pushf
xor
dec
xor
sbb
in
pushf
out
xchg
dec
pop
adc
mov
mov
inc
mov
mov
jb
mov
not
pop
mov
jae
push
fmull
ds
mov
sub
add
and
sbb
movsl
leave
js
mov
inc
mov
push
and
cmp
lods
pop
in
mov
jbe
xchg
insl
push
and
shrl
or
inc
mov
mov
andl
mov
sub
pushf
or
or
movsb
mov
aam
fsubs
ja
push
push
sti
pop
test
cmp
sbb
jge
sti
out
pop
out
mov
inc
pop
sbb
add
jmp
push
dec
cmp
push
inc
shlb
xlat
in
mov
mov
call
mov
push
mov
icebp
xchg
mov
js
inc
shll
sbb
mov
mov
jmp
mov
rcrb
orl
pop
cltd
inc
in
sbb
in
xchg
out
add
mov
cmpsb
movsl
mov
mov
jns
jnp
sbb
and
inc
jnp
jmp
es
dec
in
adc
push
mov
in
inc
push
mov
je
enter
sbb
xchg
ret
fidivl
iret
mov
add
and
adc
in
or
mov
sub
mov
xchg
dec
jp
aaa
xchg
iret
enter
ss
sub
dec
and
mov
xchg
mov
and
gs
mov
cmpsl
push
clc
pop
pusha
data16
and
test
loope
mov
mov
push
jg
adc
sub
icebp
pop
cmp
es
icebp
das
hlt
mov
fldt
xchg
push
les
pop
stos
sbb
jne
gs
push
sub
xchg
cmp
xchg
inc
cmp
xchg
das
dec
test
mov
xlat
jnp
lods
mov
scas
mov
mov
mov
test
test
lds
cmpsb
into
cmp
add
sar
bound
in
push
stc
dec
clc
mov
jbe
sub
loope
jbe
xor
push
xlat
add
push
and
movsl
ds
mov
mov
std
js
xor
ljmp
mov
lret
mov
or
push
pop
movsw
fsubrl
ljmp
jns
sbb
fs
test
adc
pop
mov
adc
popf
lea
loop
mov
jmp
mov
lods
inc
dec
scas
xchg
rcl
pushf
xchg
sbb
and
mov
lret
push
nop
repnz
cs
jne
push
loope
into
shlb
adc
aas
ret
cmpsl
xchg
push
jge,pn
je
outsb
sarl
mov
push
mov
aad
add
fnstsw
loop
movsb
shll
push
or
mov
xchg
gs
jo
add
movsb
xor
adc
sbb
outsl
sar
xchg
mov
movsl
mov
mov
in
loopne
push
mov
and
stc
jb
inc
jmp
pop
arpl
popa
shrb
testb
repz
jmp
or
jmp
mov
sahf
and
xorl
dec
push
lret
pop
sbb
lcall
mov
loopne
inc
pop
push
neg
aas
ds
xchg
lcall
loop
out
and
sub
daa
loopne
popf
fbld
test
sub
sar
push
ret
cmpsl
adcb
in
xchg
pop
pop
mov
out
push
push
pop
add
enter
iret
std
dec
push
push
mov
int3
xchg
aaa
call
scas
add
sbb
jg
into
cmp
push
push
xor
mov
mov
cld
fisttpll
xchg
jb
cli
outsl
push
aam
jns
sahf
in
jp
pop
jecxz
pop
orb
xlat
out
insl
in
lahf
nop
fldcw
movsb
call
jmp
stos
add
pop
dec
subb
iret
pop
push
ds
std
inc
int3
xchg
push
xor
dec
xchg
xor
out
sbb
lahf
pop
or
pop
ds
mov
lret
cwtl
mov
pop
xor
test
inc
lea
jmp
iret
mov
imul
lret
out
leave
xor
scas
xchg
mov
mov
idivl
push
or
ret
cmc
fistpll
mov
ret
xor
mov
iret
test
push
lds
mov
lret
xchg
or
roll
push
pop
jg
mov
cltd
mov
ljmp
jnp
leave
push
dec
pop
loop
or
and
mov
daa
inc
cmp
ljmp
mul
or
es
leave
jns
popa
je
adc
xchg
mov
xchg
cmpsl
mov
dec
mov
mov
fwait
pop
push
es
xor
cmp
cvtps2pi
cmp
notb
gs
addr16
pop
popf
xchg
sub
sub
dec
in
int3
fisttps
mov
outsl
lods
sahf
sbb
out
outsb
adc
or
pop
xchg
lods
mov
mov
leave
inc
or
push
clc
dec
add
clc
fwait
pushfw
ljmp
roll
xor
shlb
push
mov
mov
sbb
dec
aaa
lock
mov
add
dec
inc
pop
push
cli
test
sub
sub
xchg
mov
loop
adc
add
jo
arpl
mov
pop
xchg
jle
sub
fmuls
fiadds
fiadds
loope
sti
push
xchg
test
pop
fs
into
mov
xor
inc
out
add
std
push
fisttpll
loop
push
xchg
cmp
cmp
pop
pop
cmp
shll
icebp
mov
xchg
or
mov
add
rcrl
sub
sub
or
dec
sub
sahf
jae
push
adc
push
sbb
jns
nop
out
je
mov
and
pop
lret
mov
jg
shlb
outsl
test
loop
mov
inc
add
negb
jmp
pop
test
or
movsl
cmp
aam
cmpsl
push
inc
imul
iret
leave
inc
xchg
hlt
adc
sbb
bound
push
inc
lea
or
out
repz
addr16
je
sbb
inc
sti
fidivl
scas
xchg
js
fld
ljmp
or
mov
cmp
std
xchg
pop
iret
sub
leave
bound
fsubrp
xchg
fdiv
inc
cmp
pop
arpl
dec
adcl
scas
sbb
js
jns
cli
loop
mov
imulb
push
cmp
or
fimull
lahf
out
test
ds
sahf
dec
adc
sar
jp
or
mov
mov
fdivl
sub
lock
mov
pop
andb
adc
roll
and
dec
clc
push
ret
imul
inc
test
cmp
xor
push
js
into
aas
push
ret
lret
push
sbb
sub
xlat
pop
es
push
les
or
lahf
adc
jg
add
inc
into
mov
mov
outsb
xchg
push
std
xchg
pop
pop
sub
std
push
les
cmc
cld
addb
pop
outsl
push
cmp
sahf
loopne
aam
loop
jb
xor
fisttps
fs
sahf
fwait
xor
jbe
jo
lahf
cmpsb
jb
mov
cmp
push
repz
jb
shrl
add
ljmp
sbb
or
lods
jne
scas
enter
dec
aaa
push
insl
jbe
in
xchg
xchg
cmpsl
scas
inc
or
jmp
int
loopne
jo
movsb
pop
negl
xor
sbb
and
fildll
shll
mov
adc
cltd
cwtl
lods
jns
popf
fcoml
push
push
cmp
jne
adc
iret
out
test
mov
cmp
decb
lods
mov
stos
ds
repnz
sub
pop
inc
int
xor
test
mov
imul
pop
das
lcall
sbb
sahf
dec
test
ret
lcall
arpl
jo
lret
movsb
test
add
or
inc
rcll
pop
movsl
push
add
or
mov
inc
mov
bound
scas
fsubp
inc
sbb
and
fiaddl
jno
and
aas
push
sar
add
or
xlat
imul
sbb
or
es
inc
imull
test
stos
insb
lock
mov
pop
xor
into
and
jne
std
stos
cltd
pop
ret
sub
inc
mov
dec
push
icebp
jae
sbb
dec
mov
mov
adc
fldt
je
sbb
ret
xor
jne
out
enter
mov
or
pop
subps
mov
fbld
cmpsl
pop
mov
mov
jmp
in
add
mov
arpl
aas
xchg
jle
cmpsb
sbb
push
mov
sbb
pop
shrb
scas
sbb
das
movsb
and
fwait
adc
mov
lds
xchg
lcall
out
aam
pop
repnz
mov
jle
loop
test
adc
inc
mov
loop
shrl
xchg
dec
pop
jnp
pop
loope
jg
lods
inc
cli
push
in
fimuls
fstpl
xchg
sbb
pusha
aas
das
jg
dec
add
clc
pop
xor
xchg
clc
or
pop
mov
movsb
test
inc
pop
inc
rorl
cmc
push
in
out
pop
mov
xor
shlb
rcrl
fdivrl
adc
enter
movsl
jns
dec
sub
xchg
sub
pop
sub
jp
stc
add
and
mov
inc
jge
shlb
pop
xor
nop
sahf
sbb
mov
xlat
bound
mov
stc
cmpsb
ss
cmp
loopne
outsl
pop
ljmp
inc
mov
in
mov
loopne
dec
dec
jle
les
leave
fcomi
negb
cltd
sub
adc
adc
sbb
dec
aam
imul
jnp
mov
or
and
add
or
inc
xor
and
and
adc
and
shrb
fistpll
cld
adc
in
mov
addr16
add
lret
xor
aam
and
xchg
jbe
cmp
mov
bswap
sub
arpl
sahf
rorl
rorb
mov
push
pushf
js
cmp
sub
xor
aad
xor
cmp
in
aas
sbb
mov
icebp
mov
cmp
dec
xchg
sar
sti
or
sub
mov
and
pop
sub
or
mov
test
rcr
cmp
add
out
adc
ret
jbe
fcmovnb
mov
int
rclb
mov
fsubl
jl
scas
stos
pop
cltd
aas
movsb
xchg
imull
sbb
lret
cltd
int3
mov
out
xchg
add
or
mov
imul
mov
xchg
movsb
sub
mov
mov
aaa
or
pop
dec
fisubl
insl
push
cmp
push
xchg
mov
popa
xchg
movsb
push
dec
mov
subb
addr16
ret
mov
cmp
cmp
sub
stc
push
pop
outsb
push
xor
cwtl
push
mov
test
cmp
inc
cmpb
pop
imul
push
cld
mov
lcall
pushf
adc
jns
fldenv
hlt
mov
ja
add
and
cltd
fisubl
fcmove
loope
push
or
xor
inc
aam
int
lahf
rclb
notl
mov
mull
or
jne
xor
xlat
add
add
push
jecxz
dec
daa
ds
aam
cs
stos
fists
in
adc
repz
mov
or
imul
push
cltd
popa
ja
xorl
ror
ret
bound
xor
clc
adcl
mov
mov
push
push
xchg
cld
pushf
mov
sub
ret
add
xchg
ret
push
sbb
repnz
repnz
xor
push
jl
xchg
popf
push
push
mov
scas
xchg
popf
ret
and
cmp
xchg
jnp
cmp
scas
mov
xchg
xchg
aaa
int3
ret
jmp
test
pop
test
in
jecxz
push
push
popa
pop
cld
pop
xchg
ja
push
ret
inc
cs
inc
push
neg
sbb
adc
sub
in
popf
jecxz
fs
loope
in
jns
mov
aam
movsb
inc
jg
cltd
add
mov
inc
mov
fsubr
out
pop
and
or
in
xchg
sub
arpl
outsl
pop
mov
outsl
cmp
xor
icebp
pop
mov
leave
sti
test
adc
pop
pusha
xchg
pusha
faddp
es
adc
xor
sub
fxtract
imul
stc
dec
or
sub
mov
test
aaa
pop
cwtl
out
ss
ss
jp
bound
lods
inc
jb
adc
cmp
std
lea
pop
sbb
xor
scas
push
xchg
dec
cli
adc
jle
fstpl
xor
call
mov
cmp
xchg
sbb
adc
clc
mov
xor
int3
iret
xchg
lret
int
xor
fstl
in
mov
out
imul
pop
sbb
sbbb
lds
int
fldlg2
bound
imul
hlt
mov
ljmp
push
ja
or
mov
add
inc
add
or
call
push
outsl
or
or
xor
fucomip
out
setg
cmp
xchg
dec
ds
inc
xchg
cltd
iret
test
enter
mov
and
out
push
cmpsl
cwtl
xor
fbld
fwait
push
pop
sub
fcomps
stos
int
pop
fistl
dec
rcrl
mov
lds
add
std
dec
sub
xchg
aam
push
daa
jge
ret
add
inc
aam
lahf
add
push
push
push
call
inc
adc
jns
arpl
je
mov
push
sti
pop
jno
pop
push
and
imull
inc
jae
mov
fsubrp
mov
jnp
mov
loopne
fcmovu
dec
pop
cmp
xor
cltd
scas
mov
into
mov
mov
lds
cltd
cmp
cmp
fwait
and
notl
jge
push
mov
dec
outsb
dec
movsl
cmpsb
adc
pop
shll
pop
jnp
fs
int
sbb
mov
and
scas
mov
dec
xlat
xchg
xchg
sarb
inc
faddp
push
movsb
mov
inc
leave
xor
jnp
mov
add
xchg
jmp
mov
out
jmp
pusha
pop
adc
outsl
lds
or
iret
sbb
daa
inc
fnstcw
or
or
fimull
xlat
decb
inc
pop
imul
jg
das
icebp
inc
xchg
incb
adc
cmp
dec
divl
dec
sbb
mulb
lret
loopne
push
daa
roll
shl
arpl
lea
cmc
jne
test
divb
jle
repnz
cmp
dec
fcoms
mov
in
add
repnz
fldl
test
xor
ret
mov
mov
mov
fxch
ja
lods
pop
loop
repnz
jns
pop
jecxz
add
rorl
ja
je
pop
pop
adc
test
xlat
scas
jmp
insb
add
mov
and
mov
cmp
pop
xchg
xchg
push
ret
add
ror
icebp
sub
cli
jne
ret
test
xor
inc
and
pusha
imul
arpl
es
clc
iret
push
xchg
mov
test
insl
imul
test
jae
scas
sbb
in
push
dec
leave
mov
icebp
je
test
jge
push
jbe
sub
outsl
rclb
lds
cli
and
cmc
lea
in
adc
cmpsb
push
insb
pop
iret
dec
fwait
pop
pop
insl
rcrl
jge
inc
adc
add
add
ja
hlt
fmuls
sub
aam
adc
inc
push
xchg
xchg
js
add
inc
out
push
enter
jg
or
sub
dec
or
rcrb
aaa
push
mov
sub
outsb
lcall
dec
inc
xchg
adc
or
call
cmpb
ficoml
notb
inc
dec
loope
xchg
je
push
dec
xchg
popa
fisttpll
scas
mov
fildll
fcom
arpl
imul
stos
mov
xchg
jmp
mov
stos
sub
jmp
mov
mov
aam
movl
mov
inc
xchg
pop
add
call
scas
pop
lea
mov
mov
pop
jb
jnp
lods
xor
mov
mov
add
in
addl
je
out
lock
mov
pusha
out
or
xchg
daa
lea
mov
cld
popa
sti
in
repnz
sub
sti
push
jb
cwtl
fistl
lahf
es
mov
int3
repnz
fistl
scas
jmp
inc
push
inc
sub
pop
cltd
es
xchg
jnp
cmp
dec
dec
jns
fidivrl
sbb
inc
push
dec
cs
cmp
rcr
inc
jp
jl
jne
adc
mov
data16
loopne
xor
sub
pop
data16
mov
cmpsl
das
push
ljmp
gs
lahf
pop
or
add
add
add
pop
and
mov
xchg
addb
repz
inc
pop
into
xchg
add
lock
pop
mov
sbb
jns
mov
dec
sbb
sub
push
adc
shr
add
sbb
movsl
insb
or
xchg
test
jns
lcall
sub
repnz
sbbb
dec
add
lods
hlt
loopne
mov
fcomps
sahf
icebp
hlt
cmc
pop
or
cmpb
es
cltd
push
int3
rcl
push
rcll
loop
pop
fnstsw
cmp
adc
repnz
aaa
popa
imul
xchg
mov
stos
xor
stos
cmp
stos
inc
push
stos
rol
dec
adc
sbb
aaa
sbb
test
es
lret
das
dec
lahf
xor
jae
xchg
aas
es
ja
mov
or
push
mov
fadds
aam
sbb
adc
jg
ret
rorl
inc
out
addr16
pop
pop
ffree
test
repnz
es
aam
lahf
scas
sbb
push
mov
sarl
ljmp
sub
addb
mov
cwtl
dec
out
push
mov
mov
jae
adc
dec
in
aad
mov
push
in
inc
jp
nop
inc
push
dec
sbb
add
jmp
jp
aas
movsb
test
out
imul
push
cmpsb
push
int3
lcall
in
lahf
and
mov
xchg
rcll
andb
test
decl
mov
rolb
cmp
insl
xchg
adc
stos
push
popa
shr
ljmp
mov
jle,pn
aad
iretw
scas
dec
sbb
mov
mov
dec
insl
mov
ds
neg
jae
pop
or
in
stos
fwait
sub
jmp
clc
dec
sbb
pop
aam
lock
popa
mov
mov
in
insl
mov
adc
and
lods
fld
stos
jmp
sub
repz
into
popf
jmp
dec
mov
das
sub
add
scas
inc
sbbl
mov
cwtl
cmp
mov
test
fisttpl
dec
pop
bound
lds
pop
adc
inc
out
inc
in
mov
loope
sub
mov
dec
sbb
jne
mov
push
mov
mov
cmp
icebp
arpl
dec
mov
mov
fldcw
dec
dec
lea
pop
cmp
sub
pop
xchg
jb
mov
cli
cs
lods
mov
jnp
mov
das
das
lret
xchg
xchg
push
mov
jne
scas
sti
push
push
aas
stos
pop
jae
pushf
fwait
call
mov
bound
mov
mov
and
or
mov
xchg
jbe
push
mov
mov
xchg
jo
xlat
and
shll
stc
sbb
adc
mov
movswl
sub
xchg
scas
inc
or
aad
pop
cs
cmp
xorb
push
movsl
scas
xor
jl
cmpsb
ret
jne
movsl
and
mov
popa
pop
test
cwtl
daa
cmp
fdivl
xchg
sbb
jbe
insb
icebp
icebp
jecxz
jbe
dec
or
jne
adc
rorb
lcall
adc
cwtl
mov
movb
xor
xlat
sub
sbbl
xlat
mov
and
mov
out
stos
mov
cmp
cmp
inc
add
imul
out
mov
movsb
cmp
ds
in
dec
pop
mov
cmp
jmp
stos
es
inc
xchg
stos
fstl
iret
fcoml
add
sub
mov
mov
push
sub
jl
sub
and
pop
push
add
lods
stos
xchg
aad
xchg
mov
and
ret
push
int
idivb
mov
xchg
out
mov
push
loop
rolb
lock
popf
push
jecxz
fstl
fildll
add
shlb
stos
test
jbe
dec
jo
dec
push
jae
add
sbb
lcall
mov
testl
fistl
pop
ret
xlat
mov
sbb
ljmp
aas
jb
cmp
mov
xchg
daa
lret
cmp
rorb
pop
lret
push
pop
sbb
xor
cmpsl
sti
test
filds
dec
sub
push
cmp
mov
sbb
mov
addr16
fidivrs
dec
xchg
mov
fimuls
inc
mov
sub
aas
stc
in
jg
jns
push
mov
mov
jecxz
or
in
std
jbe
xchg
stos
repnz
jnp
sbb
jns
into
sub
dec
test
xor
fs
jnp
mov
xor
imul
leave
cmp
pop
jb
mov
pop
and
lcall
leave
shl
xchg
mov
popa
xor
test
xchg
sbb
inc
mov
mov
in
cmp
cwtl
in
and
fwait
xchg
cmp
mov
push
js
cmpsb
xor
inc
or
and
fcmovne
scas
out
andl
adc
call
lret
test
lock
in
and
ret
daa
mov
andb
push
dec
in
push
xor
push
lcall
js
adc
add
xchg
push
js
jo
test
and
jmp
or
or
pop
pop
popa
in
fistl
int
push
sub
push
sub
int3
push
or
jge
mov
icebp
jp
jno
mov
pop
aam
pop
je
pop
loopne
cmpsl
dec
cs
imul
mov
sbbb
popf
popf
mov
xlat
into
nop
xchg
and
mov
aaa
insb
lret
add
loopne
fcmovbe
mov
mov
jns
xchg
xabort
loopne
ljmp
mov
decb
mov
iret
jo
xchg
js
enter
pop
and
popf
pusha
lcall
fnstenv
xor
xchg
push
or
mov
inc
aam
jecxz
xor
js
aam
lds
int3
xchg
mov
cmpsb
sub
or
xchg
pop
movsl
icebp
lods
xor
nop
arpl
imul
or
or
das
pop
repnz
sahf
rcrl
mov
mov
dec
add
push
xchg
add
ss
xchg
pushf
lods
mov
push
add
insb
adc
xor
xchg
das
dec
and
push
push
sbb
jb
or
push
je
pop
cmp
rcrl
jl
js
jp
mov
dec
adc
loope
mov
mov
bound
dec
mov
push
mov
inc
sti
xor
xor
or
cs
mov
ljmp
repz
fiadds
js
add
aaa
loopne
mov
add
repz
dec
scas
fsubs
mov
jo
jno
mov
dec
inc
pop
rolb
int
mov
mov
sub
pop
inc
nop
adc
jnp
dec
mov
push
xchg
out
dec
mov
rcl
int3
pcmpeqd
les
aad
clc
call
js
push
lret
cmpsb
lds
mov
ljmp
or
stos
out
ljmp
or
push
pop
mov
or
xor
lods
in
loopne
jae
loope
dec
aas
out
stc
mov
mov
mov
ja
ret
mov
es
cmp
add
imul
mov
nop
xlat
mov
push
jp
cli
cwtl
mov
adc
in
lcall
test
inc
das
add
cmc
stos
mov
mov
stc
mov
lahf
push
fs
mov
outsl
subb
xchg
add
ss
add
loop
mov
push
subl
lock
push
aas
mov
xor
fbstp
insl
xchg
gs
jp
gs
scas
fstpl
cltd
mov
xchg
adc
dec
pop
push
or
lds
or
or
subb
rorl
pusha
aam
cmp
xor
frstor
lock
jmp
xchg
lret
xchg
and
pop
mov
add
shrl
xor
jle
xor
call
push
mov
jo
push
push
pop
movsb
pop
cmpsl
sub
cmp
jbe
ret
jle
adc
popf
test
loope
push
iret
and
xor
sub
jg
add
mov
loopne
cmp
ja
js
add
sub
shll
mov
fcoms
inc
pop
ret
jnp
lods
daa
or
loope
mov
xchg
pop
sti
mov
jne
aaa
popf
fdivrl
scas
add
lea
lret
out
push
and
jge
nop
push
addl
arpl
jnp
sub
jnp
push
mov
xchg
mov
mov
mov
cmp
jb
push
in
aam
cld
sahf
add
fistl
adc
lds
cmpsb
lock
pop
imul
pop
dec
pop
sbbb
add
jl
and
lret
fistps
or
push
je
or
or
and
push
call
cmp
popa
pop
stos
mov
insl
outsb
or
cwtl
roll
or
jmp
pop
aam
aas
cmp
sub
les
mov
cmp
jecxz
cmp
aas
xor
push
pop
js
sbb
fs
cmc
jp
lret
in
daa
insb
jg
xchg
loopne
fisubrs
dec
sbb
fcoms
push
xchg
push
pop
xchg
loopne
cli
in
sbb
push
cld
shll
jmp
test
and
push
sbb
or
faddl
adc
push
dec
or
stos
popf
insb
xchg
mov
sahf
cmp
lods
push
in
lds
dec
dec
dec
push
cli
cltd
xor
das
fildll
jae
mov
sub
mov
rcr
cmp
or
stc
insb
shlb
jns
leave
cs
lcallw
fbstp
out
popl
jae
jae
fisubl
pop
sub
xor
cmc
test
das
leave
inc
lds
adc
dec
jp
or
add
or
ljmp
ljmp
hlt
in
stc
add
add
dec
mov
es
ljmp
xor
icebp
outsl
ja
out
and
push
popf
mov
divb
pop
outsb
lds
xchg
in
aam
inc
dec
xor
repz
xchg
ds
push
dec
ficoms
mov
es
imul
loopne
and
mov
fildl
hlt
inc
pop
stos
mov
lods
and
cmp
adc
xor
adc
sub
xor
adc
addr16
lahf
sub
push
dec
push
inc
out
clc
pop
cli
dec
jne
test
test
je
pushl
or
jl
add
inc
out
add
and
mov
adc
mov
enter
xor
outsb
cwtl
mov
aas
dec
js
dec
cmpsl
addr16
push
and
call
fwait
adc
dec
pop
xchg
sub
xchg
test
xchg
fsubr
pop
pushf
pop
fmuls
test
fstpt
sub
scas
inc
push
test
xchg
mov
inc
lret
loop
push
cmpsb
daa
xor
jnp
lea
mov
pushl
dec
adc
push
dec
pushf
push
test
pop
mov
pop
push
or
inc
arpl
lock
fcompl
pop
gs
mov
adc
test
negl
adc
in
jnp
pop
rolb
mov
jmp
jb
xor
popf
pop
push
cmp
dec
fstl
sub
out
subl
mov
push
insl
pop
and
cmp
adc
mov
clc
in
push
xchg
add
cmpb
cld
movsl
lds
jg
enter
popf
out
lahf
imul
jg
push
push
cmp
push
xor
xchg
add
push
jo
insb
ja
bound
push
mov
pop
jb
mov
sub
sub
xchg
jbe
outsb
mov
mov
sub
inc
sbb
daa
xchg
cwtl
jp
push
mov
popf
jg
push
xor
psrld
xchg
fnsave
pop
mov
xor
aad
mov
sbb
ljmp
rol
aam
xchg
pushf
mov
bswap
lods
jecxz
inc
or
push
xchg
sub
mov
ss
enter
fsubl
sahf
xchg
js
out
lret
movsl
dec
add
xor
fabs
subb
sub
loopne
pop
addr16
pop
push
xchg
jle
loop
push
mov
dec
xchg
pushf
data16
aaa
fxch
lods
fimuls
sbb
inc
test
xor
movsl
ja
jne
adcl
push
jg
mov
scas
scas
jno
xchg
adc
loopne
fwait
pop
mov
das
jae
add
notb
mov
loop
and
dec
loop
dec
cmp
cmpl
dec
mov
jno
lds
dec
push
lahf
sarl
movsb
or
sbb
aaa
dec
pushf
jnp
cmp
dec
push
add
hlt
ret
push
mov
cmc
xchg
cltd
xchg
shrb
dec
rcl
jae
leave
or
xchg
sub
test
lcall
dec
fldcw
ljmp
outsl
mov
std
fists
repz
pop
jbe
fmull
cld
cwtl
out
mov
sbb
scas
sbb
inc
jo
pop
scas
mov
in
mov
xchg
jge
ret
push
adc
fs
xlat
out
lahf
lret
sub
mov
push
fldl
scas
int
sbb
repnz
mov
psrld
insl
test
fstpt
iret
mov
sarl
pusha
xchg
leave
lret
test
std
aam
ficoml
cltd
pushf
dec
cmp
inc
std
ret
push
jne
stos
ret
mov
daa
cmp
xchg
push
adc
push
loope
inc
xchg
call
jnp
dec
aaa
mov
or
push
sub
jns
in
or
adc
sub
frstor
pop
pop
fisttpl
movsb
push
jbe
cmpb
adc
mov
daa
repz
addr16
addr16
loopne
mov
push
pop
lahf
gs
jge
out
mov
push
stos
and
sbb
jp
stos
dec
addr16
iret
fisttpl
push
xor
test
repz
jo
or
sbbl
mov
mov
xor
ds
inc
shlb
icebp
repz
push
dec
inc
push
xchg
sti
xchg
aam
cltd
mov
push
rclb
fadd
cli
stos
push
xor
jge
fs
les
pop
jnp
jg
mov
outsb
sbb
scas
in
adc
fsub
test
adc
cltd
mov
jle
bound
dec
add
out
and
test
dec
xor
xchg
pop
cmp
mov
and
mov
ljmp
mov
lds
sbb
in
mov
stos
jne
subb
push
push
fidivs
ds
mov
or
or
add
cmp
pop
push
push
in
repnz
gs
mov
push
orl
loopne
cli
xchg
lahf
outsl
xchg
mov
scas
sbb
mov
fs
insb
mov
or
push
lea
push
loop
ret
jle
pushf
push
push
cltd
xor
in
out
xchg
sbb
lcall
inc
xlat
pop
rorb
mov
test
push
daa
cmpsb
ret
stos
aam
pop
cmp
arpl
movsb
push
pop
jl
jge
in
andl
push
fsubrl
pop
xor
push
and
cmp
das
fisttpl
adc
das
dec
mov
fiaddl
and
shlb
test
das
lods
and
jno
negl
xor
jp
movsl
stos
in
je
rol
mov
dec
pop
aaa
popf
mov
cli
cwtl
movsb
notb
push
sarb
mov
xchg
cmp
movsb
or
mov
xor
xor
fidivrl
cmpsl
addr16
es
insb
mov
ds
cli
xchg
cmc
sub
imul
les
jnp
add
or
inc
sub
push
iret
or
adc
test
mov
inc
gs
and
pop
les
xor
ret
test
pop
fistps
mov
sbb
nop
aad
js
incb
mov
addb
add
movsb
rorb
stc
pop
arpl
sub
push
mov
lods
xchg
push
cmp
push
mov
mov
fwait
xor
and
xor
aad
push
movsb
xchg
mov
mov
add
fdivrl
icebp
outsl
cltd
popa
xor
inc
addr16
idivl
inc
mov
xor
fdivrs
or
dec
mov
mov
mov
mov
push
mov
sbb
addr16
mov
out
push
gs
push
fwait
popa
test
cmp
setae
dec
xchg
jl
pop
or
pop
mov
repnz
cld
mov
gs
repz
adc
dec
jmp
or
pop
jne
mov
mull
xchg
addr16
shll
ror
mov
ret
ja
sbb
sbb
clc
mov
mov
hlt
das
shlb
cli
sti
cld
repnz
pop
pop
notb
or
add
dec
inc
popa
in
rol
and
inc
add
push
jle
sahf
push
nop
subb
mov
ret
push
in
pop
mov
rcrb
in
outsl
jecxz
ret
out
add
cmp
adcl
cmp
inc
icebp
shrl
add
je
or
sbb
or
or
sbb
cmc
jnp
add
xchg
pop
aaa
in
mov
sub
push
sbb
cmc
sarl
jmp
in
icebp
dec
lods
cmp
xor
mov
adc
dec
mov
dec
dec
je
xor
fwait
outsl
push
jg
test
push
sbb
cld
imul
xor
in
or
stos
and
pop
jb
mov
clc
dec
dec
sbbl
lret
sbb
add
xchg
xor
xchg
popa
and
notb
pop
pop
dec
mov
aam
iret
adcb
cltd
lea
ja
pop
lds
pop
push
aam
mov
adc
into
cmc
dec
insb
mov
xor
jnp
adc
inc
pop
clc
cmpsl
icebp
cmp
mov
pop
mov
pop
mov
test
loopne
mov
pop
cmp
mov
or
xchg
xchg
scas
dec
rclb
hlt
cli
wrmsr
mov
les
movl
mov
jns
mov
stc
fidivl
adc
adcl
test
out
inc
jnp
loope
xchg
fiaddl
cmp
mov
xchg
pop
lret
mov
adc
xchg
jne
outsb
mov
push
push
cmpsl
pusha
test
xor
push
sub
clc
pop
add
pop
fsubr
leave
stc
or
xchg
shlb
rclb
test
xchg
cli
cmp
push
jmp
or
and
mov
movsb
fcmove
dec
ret
sbb
mov
xchg
popf
dec
jle
fwait
cmp
fistpl
dec
jnp
sub
icebp
mov
xchg
pop
dec
mov
jno
iret
scas
cwtl
push
or
mov
insl
shll
adc
inc
push
fwait
repz
mov
add
push
mov
fwait
pop
mov
mov
movsb
cmp
filds
pop
push
div
dec
inc
pop
push
in
jno
jge
ret
inc
pop
cld
push
add
fwait
pop
mov
pop
cld
clc
test
xchg
sub
cmp
imul
jle
lods
xchg
dec
stos
add
inc
jb
arpl
in
lret
pop
insl
test
repnz
es
sub
cld
sbb
sub
jns
xor
ret
inc
xorb
inc
pop
mov
inc
or
out
jecxz
push
pop
push
lcall
jmp
sahf
test
cmp
sub
pop
xchg
xor
mov
popa
push
dec
add
insl
mov
js
aad
mov
fidivs
loope
addr16
rorb
fs
inc
xchg
addl
shlb
jmp
sti
mov
xchg
jns
test
pushf
dec
mov
mov
divb
fsubl
mov
in
mov
xor
jbe
mov
pop
mov
or
mov
cmpsb
sbb
sub
mov
push
lahf
fstpt
lret
pop
addr16
lcall
nop
push
inc
sub
jmp
rorb
fidivs
hlt
and
sbb
mov
bound
or
sub
leave
mov
fisttpll
cmpsb
test
imul
add
call
iret
dec
pop
adc
fdivrs
test
scas
sbb
mov
std
dec
test
jecxz
mov
mov
push
test
daa
mov
lds
xchg
cmp
sti
xor
xchg
inc
mov
arpl
jge
icebp
sbb
in
icebp
pop
add
loop
xchg
mov
outsl
out
dec
push
clc
shrl
inc
push
and
cwtl
or
mov
pushf
inc
fnstsw
mov
xor
sbb
fcmovbe
push
xchg
dec
lods
xor
repnz
loope
int3
cmp
and
mov
push
imul
jae
and
shl
clc
jne
mov
cmpl
cmp
insb
mov
sub
or
nop
or
and
jne
pop
mov
inc
dec
sahf
mov
in
and
and
push
out
push
in
xor
cwtl
cs
dec
pop
pmuludq
pop
int3
notl
xlat
adc
lods
add
loopne
lret
xor
arpl
mov
jl
adc
and
imul
aam
outsb
in
sub
adc
push
inc
mov
fistl
scas
test
xchg
add
pop
or
xchg
mov
dec
mov
or
movsb
pusha
ljmp
call
jns
dec
lret
push
push
and
xchg
push
cwtl
adc
pop
rcrb
mov
in
popa
sub
mov
fdivrl
pusha
jmp
jno
push
jl
jne
jg
sbb
or
xchg
pusha
adc
xlat
xchg
xchg
mov
out
adc
iret
push
push
fnsave
or
or
push
and
mov
out
hlt
cmp
mov
jge
mov
je
imul
test
out
cmp
push
sub
arpl
mov
xor
cmp
jne
out
fidivrl
fbstp
mov
loop
xor
rolb
mov
std
cwtl
mov
pushf
pop
adc
int3
mov
stos
pop
xor
push
rolb
outsl
outsl
xchg
insb
stos
out
cmp
es
and
mov
mov
push
int
cmpsb
ja
cwtl
mov
fsubs
icebp
and
test
iret
push
mov
mov
inc
fcompl
stos
xchg
mov
rclb
mov
jne
mov
data16
or
xor
jnp
xor
int3
dec
jns
jg
inc
ja
mov
insl
les
std
cld
ss
sarl
das
stc
sahf
pop
xchg
mov
push
out
sub
xor
fildll
mov
scas
loope
jg
fwait
push
mov
ror
aad
or
or
xor
insb
jbe
shrb
mov
push
jp
cmc
dec
jl
mov
inc
sbb
cwtl
xchg
repz
dec
xchg
mov
mov
lea
cmp
mov
xor
push
out
test
push
jl
push
xchg
or
mov
push
insl
mov
xor
fs
jno
repz
jle
arpl
dec
mov
and
and
jl
test
sbb
mov
ja
ljmp
faddp
mov
subb
cmp
fdivr
sti
ret
cltd
idivl
cmp
sub
dec
data16
fidivrs
fimuls
cmp
rcrl
movsl
add
popf
mov
xchg
notb
xor
es
or
push
push
dec
jbe
cltd
xchg
dec
test
rcrl
dec
add
inc
mov
mov
pop
movsb
ret
adc
negb
xorl
imul
dec
push
inc
mov
das
les
dec
icebp
xor
adc
inc
jno
daa
int
iret
dec
sbb
xchg
call
rclb
or
or
mov
pop
inc
int
or
or
ficoms
pop
xlat
or
inc
testb
push
xor
imul
ds
push
push
push
sub
sbbb
in
dec
pop
dec
ret
inc
shll
inc
pop
fimull
sbb
fcoms
xchg
lahf
adc
inc
scas
ds
mov
ret
hlt
add
inc
cmp
lret
mov
fwait
mov
adc
push
cmp
in
leave
movsb
add
mov
cli
cld
lods
add
xchg
das
lcall
push
loop
out
push
ds
push
pop
xor
mov
mov
xor
xchg
mov
clc
adc
sbb
mov
adc
cmc
std
out
jle
sub
sbb
out
test
or
lods
pop
or
pop
popf
or
scas
cmpsb
xor
jmp
cld
imul
fadd
inc
sub
aaa
lret
addb
cmpsb
lret
lcall
ds
mov
je
inc
cmp
call
les
jecxz
pop
mov
and
sbb
sbb
xchg
out
adc
test
add
jl
mov
ljmp
push
dec
ja
out
popw
add
mov
ret
sarb
cmpsb
and
ret
cmp
xor
jnp
shrb
cmp
inc
and
xor
leave
and
push
movsb
fwait
sti
lret
inc
mov
jmp
lcall
aam
mov
mov
mov
in
jns
pushf
std
push
mov
adc
inc
and
cmp
imul
adc
in
push
push
icebp
push
movsl
mov
in
xchg
stc
xor
mov
inc
cmp
sub
mov
mov
jl
and
jmp
popa
fistl
xchg
cmp
mov
std
inc
lret
push
aaa
bound
leave
ficoml
pop
in
and
sub
in
push
push
cld
mov
test
mov
andb
add
mov
lret
cmp
fs
adc
sub
sbb
mov
iret
sub
or
mov
cmp
std
loop
mov
je
out
mov
cmpb
xchg
lods
int
push
cmpsl
inc
mov
pop
add
push
cmp
sbb
sbb
cmpsl
sar
jne
add
cmp
jae
cvtps2pi
lahf
decb
inc
aam
push
lahf
orb
pushf
mov
outsl
mov
fbstp
adc
test
lcall
jmp
lods
mov
cmpsb
xlat
dec
bound
adc
test
int
mov
stos
add
lcall
les
je
or
test
mov
add
das
mov
je
fwait
dec
sub
bound
jae
xchg
das
xor
mov
adc
cs
mov
or
and
push
add
add
push
push
cmpsb
loop
into
sub
xchg
mov
mov
out
in
shl
xor
mov
dec
in
sub
or
imul
sub
mov
pop
inc
ret
xor
mov
adc
aas
xor
and
mov
mov
mov
cs
cmp
sub
and
jnp
hlt
stos
hlt
mov
or
inc
add
mov
cmp
int
xchg
std
jnp
or
in
cld
xchg
mov
sub
imulb
jno
fists
js
mov
aas
fsubrl
out
dec
jecxz
add
adcl
aaa
gs
inc
outsb
xchg
test
cmp
adc
mov
cmp
dec
mov
stos
imulb
sub
mov
push
mov
shrb
xchg
das
xchg
popf
call
dec
adc
inc
pop
aad
inc
ret
xor
adc
xchg
sti
addl
movsl
lret
or
push
es
andl
dec
adc
jge
dec
movsb
and
out
sbb
mov
sub
or
push
push
shlb
gs
ljmp
xor
fsubrl
or
jnp
pop
push
or
mov
sahf
cli
sub
or
iret
loopne
xor
xchg
mov
cmp
in
push
add
dec
aaa
cmp
xor
in
mov
cmpsl
adc
jmp
or
ror
test
aas
or
sub
or
jge
sbbl
pop
inc
sub
add
push
adc
sbb
push
into
sbb
lret
or
and
cmc
in
push
push
mov
aam
lods
push
mov
jp
dec
cs
out
or
out
jnp
mov
incb
nop
sbb
add
ljmp
subb
xor
leave
jb
xor
stos
aaa
push
test
cmp
cmpl
dec
mov
nop
jp
xchg
loope
sub
sub
adc
hlt
sbb
sub
dec
lcall
out
testb
lahf
mov
hlt
mov
pop
mov
imul
je
test
mov
cs
addr16
fs
into
mov
adc
inc
cmp
in
ds
adc
gs
nop
gs
mov
test
cmc
lds
jle
add
pop
push
loop
aad
dec
out
outsb
nop
unpckhps
adc
into
jns
add
je
inc
push
pop
inc
cmp
add
icebp
iret
out
daa
aas
push
pusha
sarb
scas
in
mov
sub
mov
cwtl
movsl
and
jbe
xorb
shl
aas
mov
shl
dec
adc
and
jecxz
arpl
and
in
sub
loopne
sbbb
push
add
or
sahf
bnd
popa
mov
xchg
sbb
gs
sti
adc
shl
cmp
insb
or
pusha
popl
mov
shl
mov
inc
bound
jmp
mov
ret
or
pusha
adc
loop
mov
leave
loope
xorl
fwait
enter
out
cmp
fsubl
mov
mov
push
ret
lods
lahf
xchg
inc
mov
cmc
push
xchg
lock
and
daa
addr16
and
subb
pop
mov
stos
xchg
mov
mov
outsb
sub
std
lahf
xchg
add
adc
mov
ljmp
scas
xchg
cwtl
cmp
lret
fldcw
inc
xor
aaa
es
popa
jns
mov
sbb
or
movsl
clc
adc
dec
movsl
scas
int3
arpl
pushf
inc
ret
ljmp
das
pop
mov
divl
scas
pusha
in
and
loopne
pop
fmul
jne
sbb
loope
mov
jae
addb
leave
add
adc
call
jne
insb
fcmovb
sbb
cmp
and
sbb
pop
outsl
rol
dec
mov
sub
sbb
fst
xor
repz
mov
out
push
daa
jne
mov
mov
jae
jl
inc
jmp
or
xor
jnp
dec
icebp
cmp
lcall
in
je
dec
imul
mov
push
xchg
int
fs
jnp
or
int3
jge
push
xlat
daa
push
pop
sub
and
into
pop
lcall
aad
and
les
and
inc
adc
pushf
jns
pop
aas
pop
out
jge
sbb
mov
sti
loopne
pop
jae
out
cmpsl
add
lods
push
out
andb
push
mov
pusha
movsl
jae
and
and
add
mov
or
sub
sbb
iret
ljmp
fwait
inc
mov
cli
cli
xchg
cmpsb
movb
bound
and
in
es
dec
inc
sbb
icebp
xor
mov
fcompl
out
xor
jp
out
pusha
dec
jp
ljmp
movsb
and
xor
mov
mov
test
test
mov
lock
pop
out
sbb
xchg
mov
xchg
js
inc
out
jg
sti
shrb
mov
sub
cmp
imul
enter
fcmovne
jns
sub
fldt
lods
cmp
les
ss
dec
into
outsl
mov
jb
fucom
xchg
aam
add
push
xor
xchg
jecxz
sbb
add
jo
inc
dec
les
xor
push
into
testb
int
cmp
push
int3
mov
cld
add
dec
in
adc
xchg
mov
lods
les
subl
adc
adc
sub
popf
shrb
lret
pop
add
aaa
jns
aad
hlt
mov
nop
pop
mov
ss
cmp
into
cmpsb
rcrb
sbb
lahf
stos
jns
mov
and
fisttpll
ss
xchg
sbb
je
mov
enter
xor
out
test
add
adc
sbb
iret
or
pop
cmp
fsubp
xor
xchg
lock
mov
insl
push
and
jp
icebp
aad
notl
test
fdivs
push
mov
jne
ss
jo
mov
push
mov
stos
mov
out
sbb
sub
jns
outsl
dec
cld
addr16
add
into
cmp
idivl
fwait
sub
aad
flds
dec
aas
les
popf
mov
movsb
mov
lret
mov
push
sarb
jno
push
leave
imul
mov
add
xchg
mov
mov
cmc
std
adcb
push
aaa
or
cmpsb
xlat
mov
es
dec
nop
xchg
sbb
dec
mov
jmp
sbb
cmc
push
mov
sub
test
dec
ret
jne
push
ret
test
pop
sub
dec
arpl
addb
dec
lret
idivl
cmp
cmp
dec
cmp
popa
pop
and
outsb
fmull
negl
js
aam
xchg
hlt
sbb
pop
pushf
mov
imul
cmp
xchg
xchg
pop
or
mov
adc
out
add
push
scas
sub
daa
pop
and
dec
inc
out
mov
pop
xor
enter
mov
test
push
or
repz
push
mov
pop
subb
daa
repz
push
lret
push
test
sub
jmp
and
xchg
adc
push
lcall
addr16
jmp
fldt
ret
std
pop
in
inc
push
in
jl
lods
push
xor
xchg
out
mov
icebp
loopne
lock
dec
pushl
call
xor
scas
in
ljmp
adc
lcall
mov
mov
movntps
sub
jmp
dec
das
jp
ljmp
mov
push
idivb
lret
jg
push
sub
imul
push
in
fdivl
xchg
push
inc
jno
test
mov
and
pop
xchg
std
xor
loop
and
pop
dec
daa
pop
aad
cmc
pop
xchg
mov
adc
mov
inc
or
xor
pop
frndint
jb
je
imul
cli
add
dec
fwait
aas
out
call
jbe
mov
mov
rorb
pop
dec
divb
repnz
sub
mov
inc
inc
shll
lds
dec
cmp
fimull
inc
cmp
std
ficomps
out
inc
fmulp
lcall
in
cmpsb
push
fwait
cmp
pushf
push
cli
add
das
test
insl
out
xor
sub
test
xchg
pop
lods
dec
push
xchg
scas
mov
jmp
mov
imull
cmp
pop
sub
adc
and
imul
es
push
dec
sahf
test
jns
into
cmpsb
pop
inc
dec
and
jo
in
pop
outsb
mov
lcall
xchg
scas
jp
pop
push
sbb
ror
pop
outsl
and
sub
mov
in
pop
cmpsb
mov
lcall
or
fnsave
les
ds
hlt
add
ss
sub
jmp
inc
push
jno
xchg
cmp
cmp
iret
movsb
sbb
out
insl
xor
cwtl
and
mov
std
outsb
cs
push
mov
xchg
sub
push
shll
dec
jbe
jo
call
add
add
scas
inc
xchg
pop
shlb
jno
fs
jge
fcoms
fs
adc
dec
pop
clc
es
xchg
test
mov
mov
adc
or
inc
push
test
cvtpi2ps
xchg
jne
sub
jp
adc
cltd
add
push
pushf
push
jg
xchg
insb
pusha
mov
fsubrl
mov
insl
xchg
test
jmp
jae
jo
nop
mov
fs
sub
dec
cwtl
or
fiadds
mov
or
pop
pop
pusha
xchg
stc
push
enter
insb
sbb
imul
bound
push
iret
push
push
push
call
faddl
inc
mov
and
mov
cmp
sbb
or
push
aam
xchg
addr16
int3
cmc
cmp
int3
adc
mov
sarl
gs
pop
fwait
push
mov
add
xor
and
cs
adc
repz
sbb
mov
rcrl
aad
sarl
scas
sub
mov
cmp
sbb
pop
pop
and
pop
jp
add
push
cmpsb
jnp
out
jl
and
pusha
cmpsl
mov
sub
mov
js
push
cmp
add
push
into
dec
fsubrs
dec
or
mov
mov
sub
mov
ret
js
call
mov
pop
mov
scas
out
cmc
jmp
push
xchg
add
push
addr16
xchg
adc
mov
push
mov
inc
jo
dec
mov
jb
xor
xor
push
outsb
test
shlb
mov
mov
dec
add
sub
fsubrs
cld
das
cmp
clc
inc
mov
cmp
jb
xor
adc
pop
mov
cmp
pop
adc
push
outsb
sbb
lods
push
inc
mov
pop
xchg
loopne
pop
fcmovb
gs
mov
mov
aam
or
clc
lret
and
push
outsb
cltd
ss
xchg
mov
sahf
pop
mov
sti
test
xchg
loop
add
xor
pop
test
test
pop
lea
arpl
adcb
adc
daa
repnz
and
ss
cltd
and
mov
lret
stos
push
inc
pop
std
movsb
rorb
sti
cmp
cli
add
shrb
je
mov
sbb
jo
gs
dec
mov
fs
jl
aam
mov
fimull
mov
dec
shrl
test
leave
in
push
aad
mov
repz
pop
sar
push
sarl
addr16
and
adc
lahf
addr16
in
test
aaa
aad
stos
inc
mov
std
push
enter
sahf
mov
add
inc
add
nop
scas
ljmp
cmp
dec
push
or
int3
and
pop
adc
dec
and
dec
sti
dec
cmpsb
dec
sub
jnp
mov
popa
sbb
popa
push
and
adc
mov
sub
mov
mov
fwait
xchg
sbb
mov
sbb
ss
mov
outsb
xorl
push
cmpsb
mov
jmp
push
lods
arpl
sti
repz
loopne
cmp
or
ds
xor
xchg
mov
push
sub
xchg
and
sub
pop
movsb
pop
andl
neg
int
ficoms
add
jne
outsl
cmp
sti
or
sahf
xchg
mov
ret
sti
xor
sbb
cli
jne
leave
sub
sbb
sub
test
jg
pop
cmp
mov
xor
sub
fstpt
popf
adc
call
loope
outsl
movsl
orb
lods
mov
inc
ljmp
jo
mov
int3
fcoms
adc
gs
jb
lcall
movsl
shrl
andb
fs
fwait
clc
pop
push
jmp
fisubl
inc
mov
pushf
aas
and
lock
add
enter
ss
mov
in
lret
mov
pop
pop
lea
add
sbb
mov
popa
test
sbb
xchg
scas
sub
inc
cmp
fldenv
mov
lcall
and
ds
mov
push
insb
lret
repnz
cs
clc
sbb
dec
repnz
mov
inc
enter
adc
sub
sarl
sbb
dec
sbb
cmp
inc
or
fnstenv
dec
cs
aad
xchg
inc
push
adc
lahf
sbb
add
test
or
sub
loope
push
sub
adc
in
xor
aad
outsl
data16
push
and
cmp
fldl
add
aas
and
testl
jmp
mov
xchg
int
insl
std
bnd
sbb
jae
mov
test
sarl
scas
mov
sub
sti
and
sub
push
and
push
sub
push
outsl
xchg
jmp
sub
jecxz
in
mov
mov
pop
mov
js
int
aad
dec
mov
cmp
mov
xor
int
repz
xchg
aam
lcall
pop
inc
arpl
std
mov
push
fisubl
jns
aam
int
sub
rorb
in
add
jg
jp
push
jmp
pop
push
mov
aam
lret
pop
jne
shr
popf
add
inc
mov
stos
fisubl
jae
mov
cmp
xor
cmp
mov
andl
jns
cmpsl
aaa
je
mov
cmp
mov
repnz
fnstcw
xchg
adc
ljmp
push
mov
std
addb
ja
sbb
addr16
push
jg
sbb
js
in
push
fiadds
push
subb
out
jecxz
loope
dec
push
mov
cmp
cmpsb
xchg
xor
aaa
push
push
inc
mov
aad
jmp
lret
dec
pop
scas
fwait
daa
mov
loop
int3
mov
sub
adc
gs
mov
xor
mov
out
mov
js
dec
insb
mulb
push
jae
in
dec
dec
je
lock
fnsave
inc
stc
xchg
jbe
xlat
jns
mov
xchg
push
and
stos
js
xchg
mov
xchg
outsb
mov
cmp
arpl
insl
jge
fs
pop
popa
fs
andl
mov
mov
jnp
lock
js
test
outsb
pop
lret
les
jbe
cmpsb
movsb
inc
mov
inc
leave
adc
jo
push
es
rcrl
enter
cmp
test
cmp
test
jl
xchg
pushf
xor
jmp
jmp
fwait
repz
xor
cmpl
cli
out
fnstenv
xchg
add
push
pop
sub
lahf
cmp
and
clc
and
test
ficompl
aam
xor
imul
rcll
sub
adc
stos
adc
adc
fdivs
jno
aam
sub
sbb
ds
xor
cmp
jmp
dec
adcl
and
push
cmp
ror
ja
add
pop
jecxz
shll
sbb
dec
pop
es
ss
in
push
inc
cli
je
jnp
fwait
popf
sub
inc
adc
jae
or
lea
mov
and
sbb
cmp
stc
pop
arpl
leave
inc
iret
add
add
and
pop
xor
in
lahf
test
lahf
mov
push
sub
push
push
mov
sbb
test
fcoml
cmp
and
popa
push
push
outsb
daa
dec
cmp
or
mov
xchg
js
mov
add
stc
mov
jecxz
das
les
sub
int
es
sub
xchg
push
cwtl
loope
lret
imul
cmp
xor
stc
fnstenv
mov
xor
pop
jp
cwtl
loope
sbb
dec
aas
push
add
cmp
mov
pop
dec
lea
fcoms
lea
aad
imul
enter
mov
cmp
or
xchg
jle
push
shl
xchg
inc
mov
push
flds
test
xor
mov
and
pop
mov
stos
incl
mov
mov
xor
enter
sbb
mov
jno
test
aaa
push
jle
es
jp
iret
inc
js
mov
adc
hlt
adc
inc
cmp
xchg
sbb
fisttps
and
sub
stc
add
inc
sbb
mov
sbb
dec
int
and
sarl
jbe
mov
and
mov
add
push
sbb
jb
ret
sahf
mov
cli
xchg
stos
divb
mov
int
mov
out
out
jl
dec
sbb
pop
mov
addb
clc
push
add
mov
xchg
add
mov
sub
fstpl
pop
add
je
sub
pop
adcl
xlat
loope
arpl
xlat
adc
fistpl
cli
mov
jecxz
outsl
gs
mov
xor
jne
jmp
mov
dec
adc
cld
push
dec
lds
xchg
cmpl
inc
push
adc
dec
mov
xor
aad
icebp
sub
or
in
sbb
std
loope
sbb
push
pop
jge
push
adc
mov
sub
inc
push
popf
imul
aaa
popf
aam
xchg
xchg
sbb
outsl
ljmp
mov
inc
or
nop
sub
cmpl
lock
addr16
ret
cmpsb
lcall
iret
jns
xchg
mov
push
fcmovb
or
pop
xchg
mov
push
push
out
fcmovnbe
cwtl
lcall
add
cmp
mov
imul
into
int3
lret
xor
in
mov
mov
stos
loopne
cmp
lods
push
adc
aad
xchg
xchg
fidivrs
pop
lret
add
imul
mov
out
inc
lods
aas
je
xchg
push
mov
filds
push
add
leave
sub
pop
testb
sub
inc
dec
fildl
mov
and
aaa
stos
push
popa
movsl
pop
jmp
mov
imul
cmp
in
in
mov
xor
xchg
jns
fsubl
test
mov
cmp
sub
sti
shl
xor
mov
and
mov
cld
hlt
out
nop
xor
ret
xor
dec
mov
mov
lods
xchg
cmp
adc
dec
gs
inc
rcrl
push
mov
test
add
js
mov
scas
sub
sbb
jno
jne
cmpsb
xchg
cmpsb
jo
fstl
shl
dec
push
jne
xchg
ss
sti
xor
in
sub
xchg
mov
dec
or
xlat
sbb
xchg
enter
lods
dec
mov
fs
pop
and
lcall
jle
popf
xlat
faddl
imul
xor
lods
sbb
mov
test
jbe
mov
hlt
jp
xor
bound
xchg
jnp
push
pop
mov
sbb
repz
add
jge
mov
bound
mov
adc
or
jmp
sub
lock
jno
push
mov
daa
mov
push
jo
cmp
push
loopne
push
mov
jg
push
dec
mov
out
cmpsb
or
test
cs
add
daa
xor
mov
not
adc
mov
or
lret
push
push
jle
lret
jo
les
dec
in
int
notl
mov
in
test
stos
mov
xchg
add
sti
test
or
hlt
out
inc
mov
push
and
test
adc
or
jnp
push
push
sbbl
js
out
push
imul
lret
and
sti
inc
aaa
or
repnz
pop
mov
addr16
pop
adc
popf
adc
in
cmp
fstpl
loope
icebp
imul
dec
and
mov
push
sub
sbb
ror
lds
cmpsl
push
jae
adc
sub
jb
cs
imul
es
jo
cmp
sbb
out
insb
pop
sub
nop
dec
outsl
dec
xor
dec
jmp
data16
imul
stos
fdivl
movsl
mov
daa
iret
aas
test
lcall
int3
je
pop
inc
adcb
cmp
cltd
lret
filds
jle
mov
cmp
lahf
push
arpl
mov
jo
mov
add
pop
add
repz
push
mov
xor
pop
xchg
pop
out
adc
xor
xchg
leave
out
rcll
nop
stos
cmp
out
stos
cmpsb
push
fadds
fistpll
repnz
imul
in
aas
scas
mov
scas
into
mov
or
pop
es
push
leave
testb
pop
inc
push
add
xor
or
mov
xlat
clc
test
das
rorl
adc
fstl
jmp
outsb
push
cmp
or
adc
mov
cmc
sub
loopne
mov
addr16
mov
dec
and
adc
insl
pushf
and
negl
std
out
and
data16
and
mov
sbb
push
shll
jge
sbbl
jp
cmp
nop
push
cmpsl
inc
shll
loopne
push
inc
pushf
stc
loop
mov
je
mov
jp
loope
push
dec
rcrb
mov
ljmp
add
cltd
add
cmp
dec
fdivl
movsl
add
mov
mov
mov
ret
xchg
imul
xchg
popf
push
pop
push
cmpsl
dec
xor
fcoml
addr16
stos
sub
fisubs
xchg
cwtl
ds
cmp
push
push
jg
mov
scas
push
dec
test
movsb
add
loop,pn
dec
inc
cmp
lods
lahf
movsb
inc
bnd
out
push
test
push
mov
imul
xor
sbb
outsb
push
lahf
ja
movhlps
lret
push
lds
jge
adc
or
je
add
std
mov
sbb
stc
popa
and
test
pop
leave
xor
daa
out
xchg
adc
leave
mov
in
mov
mov
or
mov
insl
or
mov
jbe
mov
lret
loopne
add
in
or
cs
ret
lods
aaa
mov
adc
adc
mov
in
xor
jb
dec
pusha
fnstcw
lods
mov
jae
nop
mov
pop
aaa
inc
push
daa
push
movb
pop
add
sub
in
push
pusha
mov
xchg
mov
insb
stos
test
test
pop
insb
cmp
xchg
cwtl
mov
dec
adc
and
sub
andb
cmp
cwtl
ja
fnstsw
xchg
jp
lds
push
add
addr16
or
loope
fwait
mov
fimuls
mov
pop
xchg
sti
sbb
or
xchg
jmp
sbb
mov
shlb
daa
jg
divl
and
and
incl
pop
fstl
xor
outsb
inc
or
in
rorl
push
xor
test
mov
inc
popf
hlt
jmp
rcl
cmc
adc
mov
stos
push
push
scas
mov
repnz
mov
adc
out
pop
cli
aam
mov
gs
xchg
pop
and
in
inc
stos
sbb
fst
insl
push
add
mov
cmp
mov
xor
mov
mov
call
imul
cmpsl
pop
insb
jns
std
enter
or
push
out
pop
or
push
inc
mov
stc
and
sub
ret
or
mov
cs
xchg
popf
pop
sub
inc
push
clc
and
jle
add
push
shl
mov
adc
and
xor
gs
add
mov
push
xchg
pop
hlt
cltd
decb
push
push
push
jp
aaa
mov
push
pushf
add
adc
jno
inc
fcoml
mov
adc
mov
nop
cmc
xchg
ss
add
stc
popf
fsubl
add
sub
jno
and
pop
mov
fdivrs
lret
xorb
out
cmp
fnstenv
mov
or
daa
data16
mov
loop
jne
and
out
das
jp
pop
mov
inc
adc
xchg
lods
lods
push
cld
adc
movsb
scas
jo
ds
adc
dec
xor
addr16
push
mov
pop
in
cmp
xchg
rclb
pop
sub
mov
scas
vcvtsd2si
lds
aaa
fidivrs
xor
test
mov
insl
push
out
pop
mov
push
xchg
cltd
rorb
mov
cmp
mov
lret
push
aaa
cmpsb
mov
mov
pop
leave
xchg
sub
add
pop
lea
js
xchg
ret
pop
daa
bound
add
and
lods
mov
pop
sub
shr
fcomp
fadds
setb
out
rolb
mov
cmp
jae
ss
cmp
jo
mov
sbb
xor
into
mov
mov
into
outsl
push
jns
lret
shlb
sti
aad
cmp
data16
in
shlb
xor
repnz
fstpl
push
fwait
cli
mov
mov
inc
sub
jne
loopne
add
mov
es
insl
add
bound
push
aad
and
repz
pop
or
pusha
and
jge
or
pop
pop
pop
pop
sbb
pop
pop
add
ljmp
jge
sbb
push
xlat
or
inc
cmpsb
std
jmp
mov
shlb
pop
aaa
pop
sub
inc
pop
into
sti
push
gs
iret
insl
mov
mov
idivl
fstpt
movsb
mov
cwtl
adc
mov
ja
int
cli
xor
ret
sub
add
and
sbb
add
mov
fs
popf
das
cmpsl
pop
add
loop
fs
stc
aad
popf
adc
xor
and
mov
insb
mov
movsl
ss
cwtl
into
rol
rclb
sub
mov
mov
sub
rcrb
fld
mov
iret
int
xor
push
loope
add
sahf
xchg
int3
xor
hlt
sahf
rclb
dec
pusha
stc
pop
jns
pop
sahf
xchg
pop
sbb
lret
xor
cmp
fidivrl
sbb
int3
push
dec
jp
ret
ljmp
add
xchg
aam
insb
aas
in
mov
cmp
jecxz
jns
push
fcomp
sub
mov
add
add
and
jne
or
and
jg
loopne
lahf
gs
pop
inc
sub
fsts
lahf
and
mov
lods
loop
mov
and
mov
outsl
in
xchg
mov
push
xchg
mull
out
sub
into
mov
fsts
push
nop
aaa
fistpll
into
repz
sbb
dec
push
mov
stos
outsl
mov
push
mov
adc
jb
jp
scas
or
mov
cmp
inc
pushf
sub
fisubrs
jecxz
pop
pop
stos
jge
inc
xchg
inc
and
mov
sbb
movsl
adc
dec
data16
push
mov
cmpsb
mov
pusha
cmp
add
scas
push
xchg
jns
pop
fbstp
and
mov
popa
test
mov
xchg
lahf
les
out
js
xchg
jo
cmpsl
add
or
clc
mov
push
and
sub
or
jnp
mov
and
and
and
inc
call
inc
xor
mov
cmovb
jl
jne
pop
insb
aas
pop
push
addl
divb
lock
daa
gs
imul
or
out
adc
fdivrs
xchg
xchg
sub
xchg
sub
xor
stos
push
mov
scas
mov
lock
jp
in
mov
mov
out
in
int3
negl
and
or
push
sahf
nop
rcr
int
lret
stos
in
mov
xchg
cld
xchg
lret
xor
and
icebp
std
mov
popa
fcmovb
loop
leave
cs
rorl
dec
mov
lcall
cmpsl
aaa
test
pop
inc
arpl
mov
gs
int3
sub
rcrl
aas
sub
fsubs
pop
and
loope
push
jae
shlb
std
jnp
sub
in
push
and
mov
fimuls
jge
or
pop
or
loope
jecxz
cmp
add
adc
and
and
dec
add
inc
ret
addb
ret
cmp
scas
adc
inc
lods
shrl
mov
das
cwtl
sti
ss
stos
pop
std
inc
push
or
popf
adc
test
xchg
inc
push
jbe
add
jl
push
sub
add
rcrb
and
int3
sbb
sbb
jnp
adc
repz
mov
xchg
ds
insl
add
andl
jg
das
cmp
cld
and
mov
pusha
ret
lock
cmp
pop
loop
xchg
lret
out
sti
add
sbb
xor
out
mov
xor
fnsave
in
jp
mov
popf
jle
es
ja
pop
iret
or
mov
mov
aam
pop
fwait
mov
add
imul
mulb
fucomip
rep
cmp
mov
dec
pop
dec
mov
loopne
mov
xchg
cwtl
sbb
loopne
popf
call
sub
sbb
cmpsl
popa
pop
xchg
mov
bound
out
sbb
inc
lcall
loop
shll
xor
sub
daa
xchg
mov
xor
or
jle
adc
lds
add
inc
sub
push
dec
in
in
mov
daa
jl
or
add
sub
xchg
pop
xchg
push
mov
testb
dec
addr16
jb
test
push
dec
into
cltd
sar
mov
push
movsl
int
nop
mov
out
sbb
and
cwtl
adc
pop
cmp
out
push
dec
dec
or
push
sub
inc
sahf
add
test
data16
in
je
rcll
lds
dec
sahf
mov
outsb
mov
sti
test
mov
dec
aas
call
in
or
arpl
hlt
push
pop
mov
inc
jmp
or
pop
leave
pop
and
lret
dec
lret
pop
jp
rclb
fisttpll
adc
lahf
sbb
or
jno
mov
dec
inc
dec
cld
ret
mov
fstl
aaa
testb
cmp
jno
and
push
mov
cmp
sub
clc
daa
xchg
mov
sub
dec
mov
sbb
call
sti
fwait
sbb
out
addr16
inc
sbb
cmc
xchg
inc
or
dec
icebp
mov
or
push
ret
cmc
inc
push
xchg
dec
push
mov
xchg
sub
push
dec
dec
sub
popa
dec
loop
adc
pop
mov
adc
nop
out
dec
mov
out
into
sub
mov
cs
shlb
jnp
xor
and
enter
mov
cltd
addr16
mov
pop
cmpsl
jmp
adc
xor
fbld
cmp
or
ret
pop
inc
pusha
adc
push
xor
ljmp
or
mov
xlat
xchg
dec
outsl
cltd
mov
mov
jae
outsl
sub
scas
scas
pop
hlt
loopne
mov
pop
sbb
movsb
mov
popa
jnp
lock
popf
xchg
js
fwait
jno
mov
sub
inc
fucomip
in
ljmp
inc
and
fildl
cmp
mov
mov
cwtl
adc
mov
cmpl
gs
mov
lods
add
stos
mov
mov
iret
cmp
pop
jg
xchg
xlat
outsl
mov
loopne
ret
mov
add
les
mov
jbe
int
adc
jecxz
jo
sbb
aad
ljmp
icebp
cld
mov
or
js
and
sub
sbb
pop
jg
scas
fs
xlat
dec
mov
int3
sbb
loope
adc
add
into
jbe
xor
jne
aaa
pop
mov
fistps
sbb
sub
mov
mov
bound
iret
aas
fxtract
mov
cmp
jae
into
fmull
test
mov
in
xorb
xchg
and
sbb
inc
and
and
push
js
fxch
int3
outsl
cmp
test
mov
fdivr
push
in
popf
ret
xchg
xor
cmp
imulb
xchg
jb
hlt
cld
arpl
out
adc
sub
pop
or
xchg
das
insl
mov
lahf
out
cmpsb
fwait
cmp
sub
mov
mov
daa
sarl
repz
cmp
pop
out
inc
mov
sbb
fdiv
dec
sarb
xchg
lea
sbb
xchg
das
and
das
sub
xlat
and
mov
movsb
test
arpl
inc
enter
inc
test
mov
mov
jle
dec
xchg
sub
repnz
push
imul
push
pop
dec
into
push
and
roll
ss
jns
leave
lret
cmp
aaa
out
popa
sahf
pop
push
cmp
ficompl
cmp
fidivrl
sbb
mov
mov
dec
pop
add
aaa
xchg
pop
clc
ret
rcll
shlb
xchg
jo
mov
xor
pop
fs
mov
ja
stc
xor
xchg
cmp
cmp
inc
in
leave
movsb
inc
repz
repnz
mov
xchg
fstpt
xor
pop
mov
aaa
clc
xchg
mov
xchg
stos
mov
ret
int
xchg
mov
in
xor
cli
mov
int
and
cwtl
inc
push
sbb
dec
sbb
mov
loopne
lock
push
xchg
push
pmulhuw
out
adc
mov
xchg
aas
jnp
mov
test
icebp
les
push
cmp
fs
jmp
mov
push
ret
inc
movsl
xchg
movsb
lds
movsl
fstpl
xchg
or
mov
jnp
push
push
loop
fistpll
std
inc
cmc
pop
test
xchg
sbb
mov
bnd
les
inc
sbb
cmpsb
cmp
xor
fcoml
sub
leave
push
cmp
jp
xor
or
shlb
pop
ja
movsb
out
mov
in
dec
push
mov
xorb
dec
xor
mov
cmc
mov
rcr
loopne
mov
cmp
mov
test
ficoms
in
and
fsub
in
cmpsb
inc
stc
test
jmp
in
ret
mov
stc
jge
and
inc
push
test
add
mov
stos
and
lcall
dec
or
aad
and
mov
mov
cmpsb
xchg
test
and
or
push
testb
inc
sbb
cmpsb
mov
adc
mov
dec
sub
jno
adc
mov
mov
gs
or
jnp
push
shlb
iret
sbb
js
insl
or
mov
jle
push
push
testl
pop
and
mov
xchg
jbe
jb
arpl
movsb
sbb
mov
cmpsb
or
incb
push
cmp
out
call
sbb
scas
int
imul
mov
mov
dec
push
in
mov
mov
fldt
leave
push
sbb
sub
jae
add
push
pop
rcrb
pop
adc
es
roll
mov
dec
ficomps
push
push
dec
sarb
cmpl
jmp
jle
cld
or
cs
jns
sub
roll
pop
jmp
inc
andl
sbb
mov
cmp
aas
xchg
movsl
ljmp
outsb
pushf
xchg
xor
dec
mov
xor
adc
dec
cmc
push
dec
cld
cmpsb
lahf
push
sbb
cs
clc
jle
scas
jmp
sub
dec
sbb
pushf
repnz
add
out
sub
mov
jno
outsb
mov
adc
mov
das
arpl
daa
jle
or
push
mov
adc
and
push
jg
and
sbb
imul
fs
xor
jecxz
jno
repz
ret
xlat
les
xor
imul
loope
inc
mov
lock
das
push
out
cld
mov
in
data16
stos
testb
push
pop
fstpl
jae
and
mov
out
push
pop
or
pop
sti
int
fs
push
stc
sbb
pop
mov
testl
cmc
adc
lds
lret
jl
xor
pop
ficoml
cmpsb
and
stc
pop
sbb
xor
enter
adc
and
cmp
iretw
shl
or
lock
mov
and
mov
iret
jge
add
lea
mov
enter
xor
add
adc
mov
les
insl
and
mov
mov
xchg
add
push
jp
push
ljmp
or
outsl
in
arpl
xchg
push
jl
sbb
in
fs
loopne
xchg
data16
pop
adc
push
dec
pop
mov
push
sti
es
inc
xchg
pop
jne
push
sub
shll
divb
cwtl
mov
adc
mov
fisttpll
cmpsl
xor
jnp
xor
dec
call
test
sbb
jns
add
or
adcl
jp
popa
fbstp
fs
scas
inc
lock
adc
pushf
out
pop
mov
repnz
fdivr
stc
push
out
and
jne
xchg
mulps
mov
dec
mov
xchg
fwait
sbb
in
dec
test
adc
sbb
and
push
into
dec
sbbl
dec
arpl
fdivl
xorl
cmp
mov
fs
call
jne
sbb
ja
inc
xchg
loopne
movsl
hlt
daa
lret
adc
cltd
shrb
push
push
add
testl
xor
ljmp
jne
sub
pop
out
jp
cmpsl
std
pop
dec
loopne
push
movsb
sbb
in
iret
mov
jge
add
jo
enter
jo
out
cmp
xchg
arpl
xchg
sub
addl
loop
incl
sub
orb
lea
push
mov
cmp
mov
mov
shl
push
mov
or
pop
ds
in
mov
aam
gs
cwtl
adc
int
fnstenv
cmp
mov
xchg
ret
sbb
cwtl
inc
jle
fbld
arpl
xor
mov
sub
adc
mov
loop
imul
ret
ret
jp
sbb
out
sbb
test
int
es
or
xchg
sub
add
outsl
ret
and
mov
jle
sahf
std
nop
cmp
add
test
or
push
movsb
dec
lahf
push
lds
scas
mov
pop
aas
push
test
cwtl
and
flds
push
inc
push
jp
sahf
orb
mov
aaa
and
fbstp
mov
sbb
shrl
mov
push
mov
fcoms
rclb
dec
ja
dec
scas
xor
stos
cmpsl
out
dec
mov
stc
xchg
jne
or
push
or
xchg
mov
arpl
mov
insb
lea
cmp
inc
dec
ss
sub
push
adc
ret
rsqrtps
pop
sub
push
ljmp
fidivrs
jns
sbb
mov
push
mov
mov
lds
mov
sub
cmp
ja
fwait
dec
pop
pop
pushf
jecxz
push
cmp
xor
push
imul
add
repnz
push
insb
dec
popa
mov
mov
jbe
fsubrs
xchg
dec
into
xacquire
or
jp
ret
mov
pop
push
lret
cmp
test
xor
xor
aaa
mov
pushf
stc
insb
adc
lock
adc
mov
inc
sub
lcall
mov
icebp
les
sbb
jmp
int
jge
xchg
loop
and
jne
jge
push
pop
loopne
ljmp
pop
xchg
adc
outsl
mov
push
push
in
in
mov
pop
lock
pushf
fisubl
jnp
adc
vmread
xlat
xor
push
jnp
adc
pop
repnz
insl
gs
shl
xchg
addr16
mov
pop
lcall
mov
repz
fsts
ds
pop
mov
rclb
dec
xor
sbb
push
daa
lods
mov
sub
jge
mov
pop
out
mov
xlat
rolb
push
xchg
ljmp
test
jnp
pop
sbb
mov
push
pop
js
pop
dec
adc
cmp
xorl
inc
test
mov
mov
adc
mov
shl
inc
out
inc
jle
cltd
je
mov
das
and
repnz
or
mov
in
ja
aaa
fucom
or
dec
inc
in
das
sub
fwait
ret
jno
fadd
enter
sbb
cmp
fucompp
sbb
fs
sub
jbe
mov
and
cld
subb
add
mov
out
dec
mov
fmuls
sbb
data16
out
insb
ret
xchg
movsb
inc
dec
adc
lcall
xor
cmp
sub
in
mov
mov
scas
and
stc
sahf
or
push
cmp
sub
jg
pop
adc
out
loope
cwtl
inc
bound
sub
inc
out
xor
andl
test
aad
out
or
pop
sarl
hlt
imul
mov
mov
imul
xchg
jo
jge
js
xchg
xor
test
sti
pop
cltd
ss
jle
data16
bound
test
mov
and
test
cmp
inc
pop
arpl
push
mov
pop
jecxz
sti
sahf
cwtl
mov
mov
ljmp
mov
pop
inc
sahf
dec
pop
inc
dec
ljmp
cmp
fcoms
pop
pop
clc
lods
sbb
sbb
jbe
bound
mov
mov
jp
int
insb
inc
fsubl
mov
ja
into
dec
mov
cmp
arpl
and
bound
jo
mov
pop
and
add
dec
sbb
stos
push
mov
sbb
inc
or
inc
sbb
dec
mov
cmp
loope
fiaddl
lea
test
cli
je
jle
stc
fsubl
fmuls
xorl
push
popf
push
fs
xchg
sub
movsb
sbbl
xchg
inc
xor
insl
mov
sahf
out
mov
popa
cmp
test
mov
mov
popa
push
and
push
sbb
fsubs
negl
jg
fisttpl
mov
and
dec
jo
mov
xchg
ret
fildl
cmp
movsb
mov
mov
out
xor
cmpsb
jl
ja
mov
dec
test
outsl
fsubs
or
scas
jp
inc
inc
ret
pop
testb
es
sub
push
pop
dec
adc
les
fstps
enter
mov
dec
loop
or
ljmp
cmp
data16
out
hlt
lods
cmp
dec
cmp
enter
loop
insl
cld
pop
fsts
fsubs
xor
or
lcall
xchg
xchg
inc
jg
or
icebp
rcrb
ljmp
sbb
cmpsl
adc
mov
adc
lock
mov
stos
dec
ret
xchg
dec
jmp
ret
insl
test
and
sbb
or
adc
adc
add
mov
inc
inc
add
sub
jg
mov
jbe
xchg
subl
jg
test
push
pop
xor
repnz
and
call
xchg
push
scas
pusha
push
and
xchg
xchg
test
cwtl
mov
jge
cmpl
rorl
pop
ret
les
mov
out
movsl
mov
mov
pop
leave
bound
shll
jecxz
ret
sbb
aas
popf
cmp
dec
xchg
jae
jno
sbb
cli
cmp
cltd
dec
test
lock
adc
sbbb
test
cs
scas
inc
mov
push
pop
adc
dec
or
inc
test
dec
push
and
rclb
into
xchg
scas
pop
mov
loopne
call
cld
mov
jae
lods
and
xor
push
sub
mov
pop
adc
loope
cmpsb
mov
test
into
mov
adc
adc
movb
inc
test
xlat
das
cmpsl
daa
nop
ds
xchg
lds
or
outsl
pop
lcall
jge
adc
dec
ret
movsl
mov
insl
fcompl
je
add
jnp
and
jmp
add
out
scas
outsb
jne
call
mov
or
fnstsw
cmp
and
pop
inc
xchg
inc
xor
cmpsb
inc
xlat
test
jnp
sub
mov
cltd
jb
leave
cmpsb
pushf
push
jns
jmp
inc
in
add
mov
xor
std
shl
in
stos
bound
call
lods
pop
xchg
jae
mov
lret
add
in
icebp
or
fnstenv
leave
movsl
xor
je
test
loopne
xor
test
stc
fsubr
xor
jo
mov
fst
pop
xchg
aas
add
and
push
dec
inc
enter
mov
xor
icebp
in
jbe
nop
adc
aam
out
push
push
lahf
out
loopne
mov
cwtl
ret
adc
jbe
xlat
fwait
daa
inc
and
or
loopne
movsb
lea
lds
pop
xor
lds
sub
clc
ss
cmp
dec
mov
ficoml
mov
mov
out
cmpsb
data16
pop
lods
sub
outsl
or
mov
cmp
pusha
fildll
cmp
push
mov
or
add
negl
in
xchg
int3
jle
mov
call
and
aaa
add
or
scas
aad
and
fmull
jnp
mov
push
sub
mov
dec
pop
push
decl
lea
mov
les
inc
gs
mov
hlt
icebp
aaa
push
popf
mov
aam
aam
xor
das
pop
dec
inc
adc
hlt
mov
xchg
repnz
pop
lcall
test
faddl
jecxz
cmpsb
or
add
jecxz
sub
inc
es
out
or
scas
cs
gs
add
out
xchg
insl
enter
xchg
insb
in
fnstsw
jle
push
cli
push
push
mov
loope
test
jns
loop
jns
jb
cmc
lock
nop
mov
clc
xchg
imul
int
loopne
mov
sub
int3
loopne
jnp
not
inc
inc
cmp
push
je
dec
jg
test
sbb
in
pop
shlb
icebp
fs
daa
sbb
and
ret
pop
sarl
cmpsb
clc
inc
icebp
out
ret
inc
jnp
pusha
lea
aas
addb
xor
jne
imulb
stos
rclb
mov
jl
or
push
mov
mov
cmp
adc
mov
outsb
adc
stos
loope
cwtl
push
adc
push
mov
push
rorl
adc
insl
cmpl
imul
lods
sub
sub
mov
mov
push
dec
rolb
pop
mov
ja
xor
pop
addr16
mov
jns
xchg
ja
test
inc
push
adc
inc
pop
nop
scas
ds
jno
out
mov
pop
push
mov
andl
adc
scas
xor
dec
pop
idivb
xchg
ljmp
bound
cmp
mov
xchg
std
testl
pop
push
pop
aam
mov
mov
aaa
dec
inc
inc
fxch
and
cmp
daa
rorl
ja
loopne
shl
int3
sub
ret
loope
test
lret
movsl
mov
push
add
insb
sbb
sub
adc
xor
stos
mov
sbbl
adc
leave
sbb
xor
movsl
push
jno
dec
sbbb
outsl
mov
mov
cmp
xor
test
lahf
cs
lods
inc
gs
add
pop
orl
arpl
or
pop
push
aas
sbb
scas
sub
cmp
jecxz
mov
lds
les
adc
dec
cmc
xchg
xor
rorb
and
in
add
movsb
add
and
dec
test
inc
jne
popf
sbb
repz
dec
mov
inc
sbb
ja
adc
pusha
or
inc
repnz
loope
cmpsl
jne
jmp
or
push
push
call
jno
out
xchg
nop
cmp
pop
mov
mov
ret
mov
es
cmp
push
mov
roll
je
in
dec
test
test
inc
montmul
cmpsb
ret
loop
or
sbb
int
out
cmc
sahf
sub
into
cmp
mov
or
pop
cmpsl
jbe
movsb
insl
into
jge
xchg
dec
pop
push
int
lods
inc
stos
xchg
cmp
stos
daa
push
mov
pop
data16
lret
or
hlt
xor
repz
inc
outsl
bound
inc
xor
rcll
lgs
in
leave
rcr
outsb
ficompl
mov
lea
push
sarb
repnz
out
jg
sbb
push
add
pusha
shrb
jge
gs
ljmp
inc
scas
jmp
push
fldl
cmp
outsl
adc
rcll
iret
dec
imul
stos
shl
dec
mov
xchg
inc
mov
jle
scas
sub
into
mov
pop
icebp
icebp
cld
les
push
and
lods
cmpsl
ss
mov
push
sub
mov
fisttpl
loop
adc
sub
scas
mov
jns
and
sub
arpl
fisttpl
out
dec
xchg
in
mov
push
dec
cmp
push
xor
rorb
mov
jae
push
je
jae
pop
bound
jl
aas
or
clc
lret
aad
pop
mov
jge
fwait
nop
in
mov
mov
mov
nop
mov
push
xchg
lret
mov
cmpb
enter
int
xchg
cli
pushf
and
pop
inc
aaa
outsb
adc
ret
mov
sar
add
iret
pop
sub
sti
mov
cltd
je
fldl
cmp
ss
loope
sahf
or
mov
les
lds
out
lods
rorl
shll
xchg
in
ss
fcoml
mov
or
outsb
rcrl
mov
cmp
mov
push
jecxz
cld
jb
jg
pop
pop
popa
cmp
jl
ja
pop
inc
lret
insb
nop
lods
push
sub
sbb
adc
mov
or
cmp
xor
imul
inc
add
sahf
sbb
jnp
jno
inc
dec
nop
sub
add
sub
fcomp
inc
fwait
sbb
jg
movsl
xchg
sarl
dec
ret
cmp
jae
xor
cmp
mov
sub
push
aaa
stos
or
shll
pop
lods
cmc
mov
cwtl
jge
ret
std
and
xchg
fs
lea
cld
mov
lock
jg
and
dec
cld
dec
pop
rcrl
sbb
sbb
sbb
jno
aas
sub
lahf
daa
jle
aad
in
hlt
inc
out
mov
lret
sbb
ss
sub
jle
adc
popf
mov
cmp
add
mov
adc
ja
cltd
xor
test
inc
jo
inc
aad
nop
add
ret
inc
xlat
cmp
arpl
and
sbb
pushf
mov
ret
mov
outsb
stc
jp
in
ret
pop
mov
lods
cmpsb
push
out
faddl
jne
mov
adc
test
mov
mov
out
lock
rolb
dec
mov
xor
xorl
jp
test
rclb
inc
cmpsl
les
std
cmp
bound
push
pop
inc
sub
out
push
je
insl
pop
xor
cmp
aas
xchg
clc
orl
lea
daa
jbe
push
out
loope
mov
sbb
lret
in
rcll
test
jmp
mov
mov
jg
arpl
sub
in
hlt
mov
mov
xor
or
pop
or
rol
mov
das
push
adc
jge
out
int3
rcrb
mov
or
leave
lock
lods
mov
inc
jne
fcomps
outsb
lods
dec
sub
mov
jb
ret
out
sub
loope
mov
nop
lret
notb
mov
add
fistl
lcall
fiaddl
mov
jecxz
jb
aaa
ja
aas
imul
push
sbb
pop
mov
inc
in
pop
jg
sbb
xor
loope
push
cmpl
jp
or
and
popf
ficoms
scas
mov
fisubl
dec
pop
mov
adc
les
lret
xchg
popl
out
fcmovne
call
xchg
dec
dec
jno
jns
xor
sub
xchg
out
jg
popw
outsb
ficoms
dec
pop
std
and
and
rorl
mov
push
enter
xor
dec
ja
dec
into
cli
jecxz
cmp
mov
imul
add
push
cli
dec
pop
outsb
pop
or
pop
adc
in
sbb
stos
pusha
pop
cld
outsl
xchg
mov
movsl
push
jp
jge
and
adc
rcrl
mov
js
jmp
jnp
cmp
push
xchg
aaa
fldcw
mov
sti
pop
mov
xor
xor
or
and
jns
push
cmp
add
inc
ds
fxch
shlb
outsl
sub
insl
sub
mov
repz
addr16
sbb
add
or
fbstp
xchg
cwtl
fisubrs
and
and
hlt
dec
push
add
or
adc
test
inc
loope
ret
cmpsl
jno
jg
stc
cltd
mov
in
iret
fcmovu
arpl
int3
inc
adc
lret
lds
sbb
mov
jg
or
std
mov
xor
xor
movsb
pop
orb
and
jecxz
rclb
popa
daa
cli
aam
imul
iret
das
cmp
pusha
dec
inc
xor
sub
popa
insl
cmp
xchg
popf
sbb
sub
add
xor
mov
jb
mov
fiadds
aas
cmc
or
fs
push
dec
enter
rol
popa
addb
fildl
cmc
lods
sarl
fwait
test
mov
mov
outsl
imul
inc
test
xchg
adc
push
int3
adc
sarl
or
xchg
scas
mov
cmp
in
pop
and
cmp
jl
and
push
iret
jb
in
add
xchg
jne
out
sub
mov
fnstsw
cmp
adc
andl
hlt
adc
movsl
ss
lahf
sub
and
push
dec
loope
addr16
mov
cmp
out
int
jg
or
xor
and
or
inc
xlat
cmpsb
cltd
sub
into
jnp
mov
daa
fiadds
mov
or
test
test
mov
nop
loopne
rcrb
push
sbb
outsb
jg
push
dec
add
jo
pop
negb
push
or
mov
jl
shll
insl
ffreep
mov
inc
js
faddl
popa
enter
mov
xor
jl
iret
xchg
dec
pusha
bound
pop
inc
xchg
mov
xchg
movsb
mov
xchg
lods
sub
cmp
idivl
jnp
in
rorl
sahf
jae
dec
push
sub
imul
sub
sbb
and
and
sbb
ret
jle
inc
inc
mov
push
cmpb
lahf
mov
lods
cmpsl
mov
inc
mov
jne
stos
imul
pushf
mov
xchg
vmovsldup
sahf
das
lock
xchg
fadd
xor
cmp
jb
shrl
cmp
add
cmp
popa
inc
leave
lods
pop
or
cltd
mov
daa
dec
mov
shl
arpl
push
cmpl
movsl
insl
fldenv
mov
sbbb
or
jns
rclb
inc
lods
mov
sbb
mov
jecxz
xor
shll
out
mov
mov
pushl
xor
and
ret
fxch
inc
lret
mov
icebp
sub
stc
in
scas
sbb
cmpsl
sub
int3
or
das
jns
aad
mov
mov
push
sbb
or
call
mov
rcr
imul
dec
mov
cmp
fucomp
aad
cld
cmp
icebp
mov
inc
add
push
mov
push
lcall
pop
pop
mov
mov
jmp
cli
enter
xchg
mov
xor
mov
xchg
sub
inc
int3
xchg
js
jnp
xchg
jle
fiadds
cmp
mov
test
movsb
inc
cld
pusha
daa
out
mov
mov
jae
fmuls
adc
std
lret
xor
jmp
icebp
stc
ss
mov
jns
push
scas
pop
cmp
push
jae
jmp
mov
imulb
cmp
ja
sets
xor
mov
fistpl
lods
les
jle
andb
sub
and
inc
call
flds
adc
test
aam
outsb
push
in
lods
cmp
fadd
orb
xor
or
inc
in
lea
inc
push
xor
mov
cltd
jbe
push
fwait
js
sbb
fiaddl
es
push
movl
lcall
mov
pop
fwait
stc
adc
pop
lods
repz
aaa
sub
dec
xchg
imul
icebp
test
inc
adc
cld
and
add
sub
push
sub
mov
jp
pop
mull
jle
aas
fadds
inc
enter
xor
mov
test
push
imul
stc
dec
cmp
sbb
dec
mov
dec
mov
leave
movsb
push
arpl
push
dec
push
jecxz
push
jno
xchg
decl
fdiv
mov
mov
test
scas
ret
add
mov
inc
add
rcr
ror
sarb
and
add
sbb
repnz
arpl
es
mov
aaa
dec
sub
stos
jmp
dec
adc
out
xor
inc
mov
sub
xorl
or
daa
jo
sub
ljmp
push
pop
lcall
outsl
test
push
adc
outsb
mov
in
fnstcw
xor
mov
mov
dec
jl
lea
es
ret
adc
out
or
cmp
jmp
fs
push
or
jb
xor
hlt
test
cwtl
mov
xlat
xlat
pop
ror
xor
mov
outsb
dec
xchg
adc
jno
ficoms
pop
dec
push
push
or
faddl
jae
sub
sbbl
shrl
jp
arpl
jl
js
inc
adc
fldenv
insl
mov
pop
out
sbb
cmpsl
or
dec
pusha
cmp
xor
push
shrb
mov
lock
sub
lret
cmp
pop
cmc
adc
sbb
xchg
iret
fisttps
push
aad
out
adc
repz
xor
push
mov
mov
push
mov
pop
daa
pop
orb
lods
sbb
and
imul
sub
lcall
jae
movsb
stos
jns
inc
mov
nop
dec
ror
mov
xor
repz
adc
cli
pop
lock
popf
das
fldcw
jmp
js
adc
das
gs
adc
and
popf
repz
xor
movsb
dec
dec
cmp
xchg
push
inc
and
pusha
jae
push
movsl
aam
rcrb
sar
hlt
dec
sub
arpl
jns
xor
cli
cmc
and
out
push
mov
inc
mov
les
and
xchg
push
mov
imul
sbb
sub
or
pop
push
insb
push
mov
movsl
dec
xchg
and
mov
js
out
and
adc
loope
xor
lds
push
cmp
repz
jae
fistpll
xor
xchg
cmp
sbb
outsl
aas
insl
je
repnz
pusha
sbb
popf
xorb
rcrb
inc
sub
in
pop
scas
jnp
push
cmp
les
sti
decb
jmp
sub
cmp
xchg
mov
or
ret
pop
add
hlt
dec
jp
fdivrl
jns
data16
aas
inc
cltd
shll
lds
and
je
nop
je
mov
cld
or
inc
bound
ret
pop
adc
nop
addl
sub
add
and
pop
mov
int3
scas
int
xchg
jmp
lcall
lret
stos
or
push
mov
mov
lret
mov
jl
sbb
adc
das
mov
lret
data16
dec
and
mov
loope
mov
pop
lret
and
int
dec
arpl
rclb
insb
fwait
and
fistpll
xchg
or
jge
cmp
xor
clc
dec
adc
mov
adc
adc
cmpsb
push
imul
imul
xchg
sbb
mov
testl
dec
and
adc
rcrl
xchg
shlb
aad
jmp
adc
adc
push
fcmovne
or
add
lahf
es
or
cmp
imul
aam
dec
push
dec
xor
mov
add
xchg
sbb
adc
adc
jge
icebp
push
mov
hlt
cmp
pop
gs
icebp
fs
sti
xchg
rolb
pop
je
lret
mov
xchg
cmp
jo
jl
rcrl
jecxz
pop
mov
add
out
dec
sbb
mov
push
cmp
dec
cmpsb
call
push
mov
data16
pop
rclb
sbb
les
icebp
jno
mov
cld
sbb
sub
and
fxch
fmull
mov
ficoml
pop
cmp
cmp
jae
and
pusha
xchg
addl
cmc
outsb
xchg
jge
test
imul
jo
out
aam
mov
dec
cltd
mov
int3
out
ret
jp
or
sahf
outsb
or
push
lods
lods
repnz
mov
pop
push
push
fcompl
call
insb
pop
cwtl
sbb
js
out
jns
inc
xlat
fadds
outsl
aad
dec
pop
adcl
mov
int
shrl
mov
in
iret
adc
ljmp
sar
js
lea
daa
fbld
jge
imul
add
in
loopne
xchg
cmp
cmpsb
adc
pop
enter
add
mov
stc
test
bnd
out
repnz
add
lods
push
mov
mov
movl
jno
fisttpll
testl
mov
pop
adc
mov
jb
data16
ret
inc
and
jne
mov
es
cli
xor
mov
idivb
pop
fs
loop
das
or
ja
mov
outsl
addl
aas
out
mov
outsb
jno
movsl
or
loopne
sti
sbb
mov
xor
xor
or
cwtl
mov
xchg
test
testl
adc
movsb
mov
mov
icebp
cmp
inc
mov
fstl
add
aam
sbb
and
std
xor
or
lock
xor
sbb
mov
jl
push
nop
aad
outsb
jno
fidivrl
clc
or
cwtl
pop
ret
in
in
fnstcw
mov
sbb
mov
xor
test
ds
dec
pop
out
popf
int3
cmp
inc
jb
into
jge
daa
xor
adc
push
adc
clc
aad
cmpsl
sbb
and
imul
jno
shrl
xchg
xchg
lock
inc
cmp
add
add
fisubrl
enter
push
ljmp
hlt
dec
shll
or
cmp
cmp
adc
lock
clc
sahf
push
imul
das
xchg
mov
in
into
outsl
sub
adc
inc
and
lret
enter
adc
xchg
inc
sbb
sbb
stc
cmc
cld
cmp
fwait
pop
pop
icebp
mov
xchg
daa
adc
xor
pop
fiaddl
sub
shrb
xor
cwtl
lods
movsl
push
fisttpll
test
xchg
mov
pop
sub
fiadds
sub
cld
sti
adc
mov
pop
jno
rcll
mov
inc
fisubrl
in
jb
xor
pusha
lock
mov
ss
outsl
ss
jnp
loopne
out
sbb
xchg
test
xchg
or
hlt
pusha
test
mov
sub
lods
packuswb
pop
fnsave
mov
popf
pop
pop
push
into
stos
outsb
in
xchg
leave
jae
xchg
movsl
cmp
xor
rcr
lea
jbe
xchg
cmp
cmp
pop
lock
out
leave
hlt
mov
sti
scas
roll
cmp
fsubs
js
lahf
imul
jle
xchg
mov
jge
aaa
mov
cmp
lahf
cmp
scas
insb
push
les
xor
fwait
test
xchg
add
rcrl
mov
jbe
mov
cmp
in
push
cmc
ss
jl
adc
in
test
mov
sub
and
cld
outsl
and
movsl
cmp
sahf
into
or
inc
sbb
rorl
adc
xchg
mov
jg
and
or
mov
push
xor
fcoml
lret
mov
xchg
aad
pop
dec
mov
pusha
or
lret
ret
xor
lods
or
out
xchg
add
dec
sbb
cmpsl
add
call
xorl
fucomi
pop
xlat
inc
sub
dec
pop
fistps
filds
inc
jmp
mov
xchg
test
push
dec
push
push
dec
inc
dec
orl
out
mov
out
xor
jle
mov
and
and
popa
out
sub
push
lock
ror
push
sub
sbb
aas
xor
dec
push
aas
jp
mov
fcompl
sarb
cmp
dec
pop
iret
and
inc
fwait
ljmp
icebp
mov
jg
or
xor
mov
rcrb
test
push
aad
es
lgdtl
aas
lret
cmp
sub
or
pop
jne
repnz
jl
aad
pop
xchg
int
aam
mov
ret
pop
sub
xchg
out
lds
jae
rcrl
insl
mov
fidivrl
test
xor
loop
cmp
xchg
pop
in
sub
xchg
insb
mov
stos
call
inc
jo
or
test
les
enter
bound
push
adc
sbb
in
xchg
mov
outsb
insb
mov
jo
sub
pop
mov
int3
insb
mov
into
inc
rcrl
popa
dec
rcrl
mov
addl
jbe
jecxz
mov
insl
cmp
pop
sbb
push
scas
pop
lcall
sub
xchg
int
add
jnp
rorl
mov
mov
xlat
pop
leave
jns
xbegin
inc
adc
in
ret
popa
jbe
iret
cmc
adc
fstpt
ret
adc
and
test
inc
jge
pushf
inc
jb
hlt
and
add
aad
stc
ss
pop
addr16
repnz
into
cbtw
dec
inc
imul
pop
mov
loopne
inc
sti
rclb
popf
jo
das
mov
xchg
push
loopne
mov
mov
fcoms
ror
push
je
std
and
sbb
jg
or
psraw
iret
idivl
inc
loopne
pop
sbb
xor
daa
mov
ja
jne
jecxz
add
into
addr16
leave
sub
fs
fstl
jnp
aad
add
dec
jns
cmpsb
div
xchg
jle
mov
ret
dec
cmp
mov
push
dec
jns
mov
adc
loop
sbb
xchg
dec
inc
pushf
pushf
add
push
addr16
out
pop
fs
aam
int
cmp
mov
push
sti
and
sub
cs
je
mov
fs
jle
femms
sub
and
fisubrs
int
xchg
mov
popf
rolb
std
pop
mov
movsl
ja
ret
std
cli
dec
adc
loop
fwait
aad
xor
mov
call
mov
add
outsl
ret
mov
sub
or
in
out
dec
jnp
mov
and
pop
imul
inc
fucom
popl
or
cmp
or
jb
cmp
fnstcw
mov
cli
jl
pop
pop
inc
ret
test
and
mov
mov
pop
pop
fisubrl
jg
jge
int
test
jne
add
movsl
xor
inc
add
fcmovnbe
popf
je
in
jle
loop
mov
mov
dec
push
lahf
push
sahf
dec
addb
mov
rcrb
enter
cmp
dec
lcall
or
ficoml
or
jmp
sbb
loope
mov
pusha
icebp
out
and
pop
dec
in
or
adc
push
mov
xchg
jp
pop
add
and
xchg
xchg
xchg
call
push
or
popf
aad
mov
dec
mov
adc
hlt
mov
lahf
cli
mov
jmp
fs
jo
pop
jnp
mov
pop
add
ror
rorl
lds
inc
in
push
rcl
cmp
push
lret
mov
xor
xchg
or
add
data16
mov
test
jae
lock
push
jne
sbb
xor
scas
rorb
leave
mov
sub
mov
dec
lcall
xchg
outsb
lods
clc
pop
ds
pop
pop
mov
push
cmpsb
sbb
pop
jbe
dec
mov
aam
push
in
sub
aaa
fldt
dec
lods
add
movsb
add
popf
pop
or
or
adc
icebp
xchg
shlb
lret
xlat
pop
or
sbb
sbb
cmp
push
jmp
ljmp
gs
lret
mov
or
sub
fcoml
call
mov
lods
insb
mov
mov
pop
jecxz
jbe
xchg
mov
lods
sbb
xchg
and
test
add
lods
sarb
leave
js
jl
out
shrb
mov
xchg
push
pushf
andl
arpl
push
cltd
insl
and
lea
mov
xchg
in
mov
imull
xor
pop
ljmp
sbb
std
mov
dec
fucomi
xchg
movsb
int3
ret
repz
cmc
stc
mov
rorb
jp
push
ja
repz
or
cmp
jno
aas
in
cmp
adc
push
lea
xchg
or
xchg
xlat
lds
jl
jnp
xor
mov
cs
sbb
and
inc
fimuls
push
xchg
jbe
jnp
cld
ds
jp
xchg
adc
cmpsl
je
jne
rolb
push
add
mov
pop
lret
xor
movsl
xchg
dec
push
clc
mov
int3
xor
ret
mov
xchg
cmpsl
cmp
imul
aas
shrl
inc
mov
cmp
js
out
and
and
push
daa
cmp
insb
pusha
jl
mov
or
fdivs
imul
aad
mov
mov
rcrb
xorb
mov
imul
jl
stc
jp
dec
inc
mov
mov
lods
and
xchg
fs
test
rclb
jo
scas
mov
mov
ljmp
xor
xchg
cli
lcall
pop
insb
mov
inc
and
xchg
mov
outsb
pop
push
cltd
nop
in
fsubrs
test
out
pop
insl
mov
cmp
lret
cli
std
enter
sbb
in
mov
xor
pop
inc
mov
out
pop
push
lods
lret
rcr
stos
add
adc
sub
std
leave
nop
mov
movsl
and
inc
loope
fistpl
jmp
rclb
sbb
pop
adc
gs
sbb
aam
pop
cld
leave
pop
jmp
or
jge
lret
icebp
out
insl
enter
xor
pop
in
popa
ret
xor
lea
fcoms
or
mov
int
out
xorb
push
mov
daa
cmp
inc
inc
cltd
add
scas
fwait
arpl
mov
pop
pop
mov
in
or
test
add
out
popf
sbb
ficomps
lret
push
xor
inc
cmp
dec
mov
inc
xchg
bound
push
jns
cmc
repnz
rorb
push
in
int3
xchg
cmpsl
outsl
fisubs
cmp
xor
cmc
enter
bsf
iret
pop
mov
pop
call
aad
hlt
outsb
aas
pop
xor
daa
inc
cmp
or
or
fdivl
dec
push
jmp
xor
das
into
dec
cs
add
or
cmc
dec
push
jne
inc
or
and
mov
sbb
cmpsb
idivl
and
pop
mov
addr16
adc
outsl
pop
jno
ss
movsl
aad
push
bound
and
add
enter
in
and
and
mov
sarl
clc
mov
bound
pop
outsb
jb
or
insl
repnz
int
xor
sbb
pusha
ss
movsb
jnp
push
add
lea
jo
cwtl
int3
push
cltd
mov
fimuls
into
push
cmpsl
test
fistps
mov
sub
insb
add
out
mov
xor
int
push
movl
dec
or
add
xor
push
call
js
sub
movsb
iret
sub
ljmp
sahf
mov
jo
jne
push
xchg
js
in
int
dec
inc
xor
mov
xchg
push
pop
and
sub
jne
ss
mov
aad
xlat
ret
add
call
sub
cwtl
and
adc
imul
push
mov
jl
pop
xchg
mov
sub
jns
mov
sbb
adc
cmc
pop
iret
or
mov
xor
xor
jl
sub
adc
jne
dec
xchg
sbb
pop
dec
fcmovbe
xor
test
push
cmp
int3
push
sub
fdivrp
mov
aas
push
or
int
mov
dec
and
jb
shrb
jbe
movsl
das
pop
and
out
pop
sbb
dec
mov
in
push
mov
add
icebp
or
sbb
nop
cs
mov
jnp
sbb
clc
adc
adc
flds
pushf
fists
xor
and
cmpl
lret
data16
repnz
ffree
insb
mov
mov
mov
inc
pushf
and
push
je
addr16
ret
cmpl
lcall
ret
mov
xchg
or
xor
dec
mov
add
or
adc
in
dec
fwait
mov
icebp
xchg
mov
shrb
aas
bound
dec
pop
lds
xor
cmp
fstl
push
cmp
pop
cmc
in
cli
sub
pusha
and
scas
mov
call
mov
push
mov
push
adc
jns
xor
push
jl,pn
dec
mov
in
sub
and
cmpsl
mov
sbb
int
adc
or
cmpsb
ss
fldcw
xor
jge
mov
cmpsb
mov
fildll
inc
mov
add
add
xor
pop
lods
cs
test
data16
sbb
dec
subl
xchg
fistpl
inc
xchg
outsb
push
shll
pop
and
sti
and
dec
cli
cmp
pop
int3
test
cmp
insb
fs
jecxz
pop
dec
add
xor
ss
inc
mov
jae
incb
subb
sbb
test
and
sbb
idivl
cld
bound
add
mov
add
aaa
aas
push
or
pop
scas
fdivrl
pop
sub
gs
adcb
push
cmp
lds
ljmp
dec
add
scas
mov
cmpsb
xchg
lea
fcom
inc
inc
lcall
push
jl
clc
iret
fucomip
dec
loop
mov
adcl
fimuls
mov
test
pop
or
aam
imull
inc
xor
test
sti
mov
adc
sub
xchg
loop
in
ljmp
sbb
inc
test
ret
dec
into
pop
fidivl
lea
into
jno
push
push
adc
inc
and
int3
nop
enter
mov
mov
mov
lea
js
add
movsl
jle
jecxz
sbb
pop
dec
mov
push
sbb
leave
mov
shll
cmc
jb
outsb
sub
xor
sbb
js
push
xchg
jp
int3
adc
push
je
gs
xchg
mov
xlat
out
movsb
push
decb
xchg
data16
xorl
cltd
stos
fsubl
jno
lods
add
pusha
pop
mov
dec
inc
inc
mov
xchg
divb
xorb
rorl
movsb
dec
sbb
xchg
xlat
xchg
xor
cmp
andl
call
out
pop
mov
mov
cmp
out
gs
adc
in
add
mov
mov
sbb
jmp
dec
jbe
lea
sbb
inc
push
sub
lods
mov
lret
jb
push
rcll
lock
adc
pop
inc
dec
xchg
call
mov
xchg
test
cwtl
test
and
sahf
imul
dec
xchg
fwait
mov
loop
push
into
shlb
hlt
pop
daa
cld
mov
xor
enter
dec
imul
enter
xorl
repz
lock
sbb
stos
jge
and
outsb
adc
enter
popa
mov
cmp
adc
mov
aaa
lret
or
jno
inc
aaa
xchg
ss
sub
or
and
jl
iret
push
loop
rorl
inc
and
inc
xchg
lahf
sub
jp
push
cmp
xchg
stc
sub
pop
frstor
mov
pushf
bound
push
scas
fstl
push
jb
lret
dec
xchg
lahf
pop
aas
je
loope
rclb
mov
xor
arpl
mov
sbb
outsl
imul
shl
icebp
aam
ss
lahf
jne
adc
and
jne
mov
lea
mov
repnz
std
pop
outsb
shl
push
xor
seta
inc
cmpsl
dec
xor
xchg
bound
push
jmp
cmp
call
rol
mov
and
sbb
fs
out
xlat
stc
push
xchg
dec
ror
data16
sub
divb
sub
cmp
mov
and
cmc
push
nop
sub
push
cs
adc
jp
or
mov
inc
dec
mov
lods
cmp
sbb
popa
jg
xchg
ljmp
jb
sbb
insl
daa
insb
xor
int
jb
in
packuswb
add
mov
fstl
sbb
nop
popa
test
icebp
rclb
cmpsb
jmp
fadds
jmp
add
inc
and
adc
xchg
or
shrb
xor
sub
js
lahf
mov
popa
push
inc
xor
fcomp
mov
addr16
pushf
mov
hlt
dec
xor
lret
adc
pminsw
mov
sti
sti
cmpsl
jmp
add
stc
push
mov
mov
loope
stos
jns
cs
stos
sub
cs
dec
flds
lods
mov
mov
push
mov
int
loope
cmp
and
test
push
inc
repnz
popa
pop
clc
inc
sbb
pop
pushl
adc
sub
pop
jne
in
scas
xchg
pop
cld
jmp
ja
aas
ret
out
mov
popf
adc
leave
clc
push
pop
movsl
inc
fwait
or
or
cmp
sub
pushf
dec
xchg
aad
leave
cld
jo
loope
inc
imul
fistpl
push
xor
mov
xor
or
fldenv
xchg
subl
push
mov
lock
lret
and
xor
push
sub
sub
or
mov
or
pushf
stos
inc
lahf
lds
cwtl
hlt
testb
arpl
pop
stos
jae
out
mov
push
fimuls
mov
mov
insl
aam
andb
decb
adc
fisubrl
dec
dec
popf
xchg
rcr
xor
int3
jge
rorb
out
xchg
fmull
sbb
orl
imul
mov
sbb
repnz
out
dec
rcrb
add
jno
lcall
pop
insb
push
and
popa
push
fildll
nop
push
mov
push
int
mov
cmp
pop
sbb
and
jecxz
int
insl
or
sub
outsl
rcrl
push
pusha
jp
enter
jl
dec
xlat
imul
pop
lock
int3
pop
fisubl
mov
add
imul
jecxz
stos
pusha
jmp
fsubs
les
fmull
adc
sahf
std
jg
xchg
push
ds
xor
mov
in
cmp
sub
cmpsb
sahf
pop
out
aam
lock
test
aas
ret
sbb
add
jo
and
cmp
jnp
stc
jns
and
cmp
and
movsb
hlt
xchg
xor
clc
outsl
outsb
xchg
and
addr16
popa
lods
stc
sub
cltd
int
or
push
mov
fcomi
push
dec
not
push
sub
sahf
adc
mov
out
sahf
in
xor
fdivrs
xor
out
jge
mov
pop
mov
inc
jns
and
pop
push
aas
movsb
or
mov
or
pop
iret
test
cmp
jl
ja
les
push
call
mov
test
fnstcw
adc
sub
test
add
mov
mov
pusha
adc
push
das
push
aad
xlat
mov
nop
lods
nop
subl
jbe
sbb
ljmp
add
in
lret
cmpsb
mov
push
add
mov
sbb
or
out
fcom
xchg
adc
nop
out
outsb
stos
mov
and
jne
int
pop
jb
incb
iret
movsb
js
sbb
hlt
iret
out
dec
sti
in
mov
jnp
lret
xchg
cmpsb
jecxz
push
mov
imul
pop
jecxz
push
inc
mov
mov
adc
mov
div
pop
mov
int
adc
mov
in
sti
or
repnz
movl
js
je
loop
iret
adc
bound
pop
decb
scas
pop
int3
in
xchg
popa
adc
add
pop
mov
dec
mov
jmp
nop
pusha
push
sar
jecxz
sub
lret
sub
addr16
lea
in
repnz
pop
sub
pop
mov
test
and
pop
xchg
cmp
inc
int3
adc
pop
dec
mov
push
fadds
add
push
loope
fisubrs
or
icebp
pop
popf
das
sub
mov
cli
stc
mov
loop
xchg
faddl
push
xchg
xchg
dec
rcrb
shlb
jns
stc
jns
adc
nop
addr16
cmp
repnz
shrl
aad
add
adc
and
lods
pusha
icebp
movl
pop
pop
repnz
scas
xor
add
mov
ja
mov
aaa
sub
mov
movsb
xlat
sub
test
lret
test
call
test
mov
fcmovnu
mov
cmp
sub
leave
mov
adc
jnp
dec
or
push
jne
jmp
xchg
and
mov
pop
int
aas
add
movsl
add
aad
dec
lods
bound
pop
pop
inc
rcrl
cmp
mov
and
imul
insl
hlt
es
push
sarb
hlt
mov
mov
pop
push
pop
bound
lds
push
lea
push
push
insl
ds
es
fldenv
mov
pop
aaa
mov
sbb
es
cmp
ret
repnz
ljmp
sub
bound
mov
je
fisubs
mov
pop
jg
lahf
sbb
mov
jmp
mov
mov
clc
push
pop
mov
insl
insl
int
push
mov
into
popf
jb
mov
push
push
sub
mov
cmc
movsb
and
or
or
push
sbb
xor
stos
gs
push
xor
mov
inc
test
out
mov
ret
into
sbb
mov
dec
xor
mov
and
jmp
outsl
mov
hlt
sub
rcrl
xchg
push
cltd
sti
and
lock
rol
sub
mov
repz
xor
cmpsb
call
xor
mov
adc
cmpsb
rorl
jecxz
pop
push
imul
mov
es
pop
cmp
aas
mov
sub
out
dec
cmp
aam
dec
jo
and
mov
mov
lcall
xor
adc
mov
mov
pusha
xchg
ret
dec
pushf
test
movsl
cltd
mov
ret
mov
cmp
dec
sahf
push
mov
je
stc
or
sub
push
and
insb
imul
mov
mov
fisttpl
test
lcall
jne
xor
xchg
pop
adc
push
mov
icebp
andb
pop
sbb
and
lahf
rorb
scas
adc
fbstp
mov
popf
jns
jnp
fsts
pop
cmpsl
mov
push
mov
fwait
je
cmc
mov
or
cld
repz
xor
xchg
xchg
movsb
mov
push
xchg
lods
pop
push
pop
mov
cmpsl
stc
lea
cmp
leave
data16
dec
add
out
jecxz
cmpb
mov
lcall
mov
int3
repz
xchg
and
aam
push
and
mov
pop
cmp
sub
add
jmp
dec
scas
adc
cli
jns
loope
cmp
sbb
xchg
cltd
mov
push
xchg
sahf
push
xor
xchg
test
ficomps
mov
xchg
mov
or
sti
pop
in
inc
jb
sub
fnstenv
fildll
pop
sub
cmp
cld
les
adc
pop
enter
inc
in
cs
push
iret
adc
jle
aam
cwtl
scas
inc
jecxz
jmp
xchg
add
push
jnp
dec
sub
popf
mov
es
pop
insl
or
fdiv
test
mov
xlat
lahf
loopne
mov
push
adc
rorl
and
add
sbb
jae
sahf
arpl
pop
leave
jo
lcall
jb
stos
mov
add
dec
fistl
cmp
push
jp
lods
loope
mov
std
pushw
loope
test
out
and
push
adc
jg
mov
in
in
push
ja
or
or
xchg
vmovsldup
pushf
or
subl
pop
jbe
push
mov
insl
imul
in
fimull
rclb
add
lret
xor
xchg
dec
add
and
push
pop
or
ds
mov
lret
xchg
das
adc
mov
iret
and
sbb
adc
add
push
mov
out
ss
xor
je
mov
scas
push
sub
push
and
xchg
pop
movsb
pusha
fbstp
jp
mov
jle
sub
push
pop
shrl
push
adc
xorl
jbe
addl
jecxz
stos
sti
add
imul
ret
loope
xlat
push
enter
imull
xlat
outsb
cltd
jae
jno
push
mov
xchg
int
jl
xor
pop
icebp
lret
divb
js
das
and
pop
clc
push
inc
adc
or
call
lock
jb
xchg
push
into
push
aas
xchg
xchg
sbb
leave
leave
lea
pop
dec
mov
out
mov
push
push
test
dec
fsts
dec
rcl
push
in
test
pusha
jne
adc
cwtl
cld
jnp
cmp
mov
inc
daa
dec
push
sti
roll
jbe
lods
cmc
adc
pop
lock
mov
jl
cmpb
mov
add
xchg
loope
shll
dec
and
loopne
mov
sub
lahf
jge
add
xorl
sub
mov
sbb
add
int3
mov
cwtl
mov
daa
jp
cltd
inc
es
mov
push
clc
xchg
sub
shll
xor
jg
mov
or
or
mov
out
test
mov
mov
dec
inc
adc
mov
pushf
cltd
add
xchg
mov
xchg
and
cmp
mov
and
add
mov
out
test
and
call
rclb
in
jae
outsl
cmpsb
lret
cmpsl
ds
mov
inc
adc
cmc
cmpsb
xor
jg
push
or
adc
add
rorb
xor
out
arpl
cwtl
mov
movsb
add
nop
dec
cmp
popa
mov
adc
cmp
pop
imul
pop
dec
xchg
jne
pusha
in
imul
imul
rorb
jne
testb
pop
mov
push
sbb
scas
jbe
inc
and
pop
inc
or
mov
sbb
ljmp
iret
pop
xchg
pop
jno
rorl
pop
sbb
xchg
mov
pusha
sahf
or
mov
rolb
mov
jb
shll
leave
loopne
dec
into
dec
fwait
cmp
stos
nop
into
xchg
movsl
pop
xchg
push
xor
push
out
push
mov
or
push
fdivr
test
out
jmp
and
sbb
mov
jp
outsb
pop
ror
cmp
and
mov
out
and
jl
les
push
test
mov
or
sub
loop
insb
lahf
push
xor
fbld
arpl
xchg
and
orl
out
lret
and
sarb
aas
mov
imul
jp
test
pusha
and
ljmp
and
pop
sub
add
jp
xrelease
call
inc
jmp
inc
fldcw
jns
xor
cmp
repz
lods
fidivl
je
rolb
pop
shrb
in
cli
and
outsl
sub
or
mov
into
dec
stc
jg
mov
inc
jle
pop
ss
dec
pop
inc
ret
add
jecxz
sub
andb
faddp
gs
or
loope
hlt
dec
push
cmp
sar
and
or
popf
pusha
sub
scas
push
sub
fs
pop
sub
mov
lea
cmp
push
jecxz
stos
or
lea
andb
movsb
jp
enter
cs
inc
data16
mov
xchg
lea
pushf
rcl
mov
out
inc
lret
incb
fcompl
in
mov
repnz
jmp
pop
inc
test
sbb
mov
or
pop
das
data16
repz
int
cmc
jnp
mov
ss
dec
push
scas
xor
fwait
xorb
inc
cmc
or
outsb
inc
cli
lods
jno
fisttps
or
add
mov
dec
stc
jle
dec
in
inc
dec
sbb
mov
rorl
dec
add
cmpl
add
mov
lcall
xor
repz
aaa
test
insl
inc
and
in
inc
scas
sahf
in
mov
pop
sahf
xchg
jecxz
inc
add
fcmovnb
mov
xchg
out
mov
test
pushl
and
adc
out
ret
mov
cmc
movsl
or
jae
hlt
pop
aaa
adc
ja
adc
lcall
add
or
lret
mov
cmp
mov
ret
lods
and
sub
scas
jle
mov
push
mov
stos
mov
add
fdivrp
ret
pop
iret
push
push
jecxz
fstl
dec
xchg
dec
inc
push
rorb
xchg
das
out
testl
add
xchg
mov
sbb
inc
push
jl
mov
decl
push
jle
pusha
mov
or
hlt
cmpb
xor
movsl
mov
loopne
mov
mov
hlt
ja
jge
pop
lcall
cmpsl
and
cli
mov
call
ja
mov
ss
lock
xor
xchg
int
mov
mov
loope
es
adc
push
pop
inc
scas
je
fcmovnbe
xchg
jbe
pop
mov
test
and
fsts
call
mov
rcrl
mov
ljmp
push
ret
cmc
add
mov
pusha
dec
adc
stc
dec
push
jmp
addr16
lea
es
push
mov
mov
jb
aaa
xor
jno
clc
and
mov
push
mov
ss
inc
pop
std
cli
je
aas
test
ljmp
cmpl
lods
pop
xchg
dec
pop
jne
shl
fstps
in
mov
mov
fs
dec
popa
enter
sbb
cmp
or
repz
ja
and
aam
or
lret
lahf
clc
jbe
jo
xchg
sub
lret
jecxz
and
pop
xor
sahf
fildll
sbb
outsb
stos
sahf
sbb
inc
out
testb
mov
shl
into
fstpl
lea
mov
push
and
add
push
xchg
fisubl
xchg
sub
sub
add
mov
sbb
jbe
cmpb
inc
xchg
sub
or
bound
enter
jae
jbe
stos
jne
imul
pop
ja
lods
sub
sub
xor
sub
lods
into
fwait
lahf
cli
or
or
daa
sub
sbbl
dec
push
pop
or
and
scas
and
mov
pop
test
enter
rorb
inc
test
icebp
inc
mov
sub
imul
dec
add
addr16
lahf
lods
js
das
fs
insl
scas
fidivs
imul
ss
cmp
loop
icebp
daa
fxch
cmc
test
ljmp
adcb
add
jae
adc
xor
mov
out
scas
push
and
cmp
sub
aam
pop
add
pop
lds
inc
ja
in
push
arpl
cwtl
mul
dec
jo
mov
inc
loope
adc
push
xor
jb
out
in
arpl
dec
test
jp
sbb
pop
outsl
mov
xchg
inc
mov
adc
sbb
pop
or
test
in
mov
push
ficompl
fwait
icebp
lahf
movsl
dec
int3
cli
sarl
lcall
jnp
adc
xchg
xor
cmpsl
mov
sbb
dec
icebp
mov
aaa
push
fimuls
orl
sub
cmpsl
add
mov
push
inc
push
dec
ret
xchg
sub
cmp
es
push
sbb
lahf
jecxz
adc
mov
dec
mov
xor
push
int3
jbe
sub
pop
cli
add
in
xor
jecxz
lcall
fsubr
loope
cwtl
mov
sub
loopne
pusha
dec
pop
pop
or
cmp
and
mov
pop
fdivl
mov
or
jnp
push
outsl
fldenv
push
inc
sub
daa
mov
int
xchg
lret
in
cmp
insb
push
fstpl
pusha
insl
mov
and
dec
icebp
or
sub
xor
adc
les
repz
dec
mov
ret
sbbl
rcl
imul
insb
jge
rol
cmp
mov
addr16
mov
vcmpps
and
faddl
mov
lcall
ficomps
sahf
or
adc
xor
fnstsw
mov
mov
js
iret
test
fdivr
mov
inc
imul
mov
fstpt
aam
or
cmpsb
out
pop
lret
sarb
rcrl
jecxz
sti
bound
adc
cs
mov
push
sahf
push
jecxz
pop
je
imul
icebp
stos
fldl
jmp
and
icebp
xor
pop
aam
jno
mov
cmp
jg
cmc
jmp
and
push
int3
sbb
shll
lea
je
xlat
dec
pusha
xor
dec
add
testb
inc
in
mov
int
pop
mov
clc
cmp
xor
in
addb
xchg
rcrb
jg
in
int3
dec
push
push
mov
inc
shl
cmp
inc
jmp
iret
and
insb
jo
cmp
inc
repz
pusha
lcall
inc
xor
lret
in
insb
lds
ret
or
pushf
into
test
repz
cld
imull
mov
push
andl
rorb
inc
pop
pop
xchg
fidivrs
aad
cwtl
pop
dec
pop
in
and
shl
pusha
out
sarb
subb
jns
mov
mov
int
imul
lods
insl
adc
insl
mov
adc
test
fldenv
mov
xor
mov
lods
push
sbb
xchg
aaa
and
daa
mov
loop
mulb
iret
xchg
fldenv
dec
mov
leave
test
inc
or
enter
push
cwtl
stos
gs
and
and
mov
add
adc
pop
xchg
aam
mov
pmaddwd
adcb
cs
outsb
cs
cmp
mov
jecxz
pop
xchg
out
xchg
adc
cmp
xcrypt-ecb
cmpsl
lret
dec
jae
push
sbb
sarl
xchg
cwtl
divb
pop
lcall
sub
mov
sub
test
out
hlt
cmp
icebp
add
popa
jns
repz
popa
test
pop
lock
stos
cld
pop
test
ficoml
jmp
xlat
mov
xchg
sbb
sbb
mov
pop
pop
js
and
and
jecxz
xlat
xchg
push
sbb
mov
jmp
or
andb
movsl
mov
cmpsl
fldenv
cmpsl
bnd
stos
leave
adc
inc
sbb
push
push
jle
adc
push
sub
in
adc
ret
shl
dec
xchg
lahf
mov
add
jno
ja
xchg
fwait
dec
daa
leave
adc
das
fadds
and
inc
scas
fnstcw
add
icebp
lea
jnp
js
hlt
adc
jns
lods
addl
inc
loope
aaa
arpl
sub
dec
inc
negb
std
jo
in
sbb
sub
into
dec
cmpsl
mov
push
out
adc
jbe
push
mov
cmp
xor
mov
adc
es
or
jge
xor
xchg
test
clc
outsb
dec
ficoml
mov
into
stos
cmp
xchg
rep
aam
out
das
inc
sbb
sbb
xchg
mov
clc
pusha
enter
jae
inc
adc
inc
sbb
lds
sbb
das
hlt
mov
mov
cltd
leave
int3
in
leave
iret
rclb
dec
xor
inc
fcomps
int
adc
out
cmc
cs
shlb
and
jp
jl
mov
and
xchg
cmc
outsb
std
jns
mov
out
push
jno
idivb
mov
sub
out
movsb
xchg
and
xor
dec
sub
sahf
sub
fmul
ja
stos
and
insb
xor
or
adc
sbb
inc
pop
cmp
inc
arpl
sub
shlb
nop
dec
or
mov
inc
or
xchg
test
les
shl
and
scas
lret
ja
popa
ret
ds
into
std
pop
xchg
push
imul
sbb
icebp
in
jnp
aad
fisubl
test
hlt
das
xor
inc
lret
add
arpl
mov
mov
insl
mov
outsl
jbe
xchg
xchg
outsl
xchg
jae
sbb
imul
jecxz
subl
jnp
arpl
mov
adc
ret
int3
nop
sbb
push
adc
xchg
xor
enter
and
cmpsl
in
cli
sub
sbb
dec
movsl
inc
ret
cmpsb
rorl
inc
test
fcmovbe
mov
push
mov
jbe
inc
mov
pop
mov
leave
push
sbb
in
or
in
xchg
pop
xor
dec
or
gs
cmpsb
cmp
pop
push
loopne
cmp
and
pop
xor
mov
lods
repz
push
stos
inc
stc
xor
cwtl
push
push
sahf
and
lds
lds
mov
adc
xchg
pop
lahf
xor
push
fiadds
fdivl
test
lret
popa
and
pushf
mov
gs
ret
cmp
ja
inc
bnd
xchg
and
repnz
in
xorb
int3
lcall
lea
push
in
or
xchg
and
xor
int
lahf
mov
push
adc
std
in
mov
jl
or
stos
in
push
xor
mov
pop
jb
es
mov
sub
adc
je
insl
cmpsl
add
push
sbb
leave
pop
adcb
or
inc
cmpsb
shll
mov
lds
stc
add
xchg
or
jg
adc
xor
adc
scas
mov
push
mov
pop
jle
rorb
mov
xor
dec
lcall
mov
popf
pusha
push
into
mov
cmp
emms
movsl
cltd
push
ficompl
leave
add
push
loopne
mov
xor
out
dec
aas
cmp
dec
cmp
bswap
popf
jle
add
mov
flds
sti
sarb
sti
repnz
adc
adc
xchg
mov
test
inc
imul
cmp
adc
mov
jl
aas
shlb
cmp
mov
orps
push
dec
std
sbb
and
sub
fsubrs
aas
cmp
jp
jge
adc
movsl
push
call
xchg
xor
jp
shll
mov
cmp
in
test
dec
andl
xor
ja
clc
xor
lahf
movsl
shl
testb
movsl
int
icebp
out
cmp
cmp
cmp
mov
pop
sub
pop
mov
adc
mov
loop
add
adc
dec
cmp
lret
and
cmpsb
xor
ret
mov
or
rolb
sar
push
test
cld
dec
fucom
and
and
cmp
in
dec
push
adc
loop
xchg
xchg
sub
enter
call
aam
jnp
out
test
jbe
xor
sar
test
mov
xchg
push
or
push
sbb
je
sub
daa
fidivl
xlat
lods
or
xchg
nop
js
mov
jecxz
in
add
icebp
insl
andl
pusha
fidivrs
stos
xorb
inc
mov
inc
gs
imul
pop
js
and
fcmove
pop
xor
mov
dec
andl
clc
lahf
push
rcl
hlt
out
into
test
cmc
push
int
mov
stos
sti
insb
ret
inc
xchg
mov
pop
push
cmp
mov
jl
push
shlb
arpl
loop
mov
cmpsl
xchg
or
sbbb
add
or
sar
push
xor
ret
fucomip
dec
int3
sbb
xchg
cmp
mov
mov
call
pop
ja
adc
je
in
mov
in
insl
or
fmuls
mov
push
mov
sbb
bound
nop
in
lahf
int
sub
sbb
sarb
sbb
lods
pop
fcmovnu
sbb
fs
ret
icebp
iret
xlat
in
ss
out
jge
mov
sub
sbb
rcrl
inc
jo
or
fs
lds
test
push
mov
sbb
adc
leave
xor
pop
mov
push
push
mov
jo
jno
imul
stc
sub
add
xor
movsl
xchg
and
nop
ljmp
jne
in
adc
dec
addr16
dec
stos
push
pop
inc
pop
cmp
subl
loop
rclb
movsb
sti
lcall
lods
lahf
in
add
lds
ljmp
mov
push
mov
add
rorb
aaa
nop
bound
jle
push
subb
test
mov
jnp
xchg
jmp
adc
jge
scas
loopne
incb
fldenv
pop
sbb
push
pop
and
cmpsl
aaa
mulb
or
dec
push
fldpi
and
inc
es
out
push
jg
mov
inc
lret
and
iret
sub
sbb
dec
pop
inc
mov
mov
sarl
inc
stc
jbe
add
mov
mov
or
xchg
loopne
sub
fldenv
or
jmp
xchg
xor
fwait
int
cmp
dec
aad
cmp
inc
shlb
mov
cmp
push
js
xchg
and
inc
fs
and
mov
pop
xor
cmpsl
aaa
jno
shlb
xchg
push
out
sbb
cld
sub
add
jg
movsb
sbb
dec
xchg
mov
out
jb
xchg
out
ljmp
pop
sbb
sub
cmpsb
add
sbb
push
adc
sbb
loop
sbb
repz
mov
pop
push
add
push
fstl
and
mov
cmp
inc
or
or
dec
lds
inc
imul
or
outsl
jmp
xchg
dec
xlat
adc
out
mov
icebp
test
shlb
ljmp
push
hlt
mov
adc
mov
scas
dec
data16
and
mov
jno
sbb
dec
repnz
mov
fcoms
pop
ja
lcall
inc
xchg
icebp
or
cmpsw
xor
adc
mov
imul
mov
cmpsl
mov
nop
int
and
pop
pushf
adc
xchg
insb
mov
adc
test
filds
xchg
repz
pop
lret
cmp
stc
mov
xor
pop
lahf
xor
push
xchg
es
jae
xlat
xor
es
inc
dec
repz
shll
cmp
pop
adc
stos
sbb
jb
insl
xorb
popa
icebp
es
outsl
movsb
fiadds
pop
and
sti
dec
mov
pop
mov
bts
or
jl
sbb
push
out
jle
jp
xor
xor
imul
jmp
cltd
adc
adc
mov
stos
pop
xor
push
lods
xor
in
test
push
dec
dec
aaa
cmp
xchg
clc
adc
mov
sarb
jbe
pop
mov
xchg
stos
loop
add
adc
cmp
add
jne
jp
push
cmpps
pop
inc
add
inc
mov
repnz
mov
les
jb
mov
mov
aam
mov
mov
adc
dec
jno
call
push
fwait
sahf
ljmp
test
sbb
push
ja
icebp
push
aad
jo
jns
dec
xor
mov
sub
pusha
mov
idiv
push
mov
push
or
xchg
fnsave
and
sbb
ss
sub
inc
mov
rolb
xchg
aam
sbb
movsb
lret
and
inc
test
inc
pop
jmp
mov
push
lahf
das
pop
add
inc
outsb
xchg
lods
imul
adc
pop
es
fcomip
insl
lcall
ja
or
fbld
inc
mov
inc
xor
mov
mov
insl
pop
mov
mov
pop
sbb
dec
xchg
add
cmp
clc
xchg
dec
and
mov
dec
pusha
mov
lea
add
pusha
push
xchg
dec
aas
stos
xchg
mov
inc
std
jno
mov
lea
mov
out
aad
mov
push
in
inc
mov
divl
ljmp
aad
fdivs
aad
sti
popf
xor
push
bound
mov
cmpsb
mov
push
add
js
leave
xchg
mov
incl
popf
jae
lret
lret
daa
out
jnp
push
popf
aas
fcomps
cltd
adc
mov
push
fwait
xor
neg
idivb
cld
in
popa
bound
leave
xor
dec
xchg
inc
pop
sbb
adc
mov
xor
incl
enter
sub
sbb
xchg
jo
fsubl
or
sub
out
xor
adc
movsb
cltd
push
mov
xchg
mov
nopl
jp
push
cmpsl
mulb
popf
loope
outsl
sti
popa
les
mov
cmpl
fcoms
dec
mov
fdivs
repz
mov
out
cmp
iret
nop
ret
hlt
je
push
add
cs
sbb
adc
dec
and
out
rorb
mov
pop
arpl
orl
pop
and
xor
xchg
push
and
jmp
test
sub
jae
cmp
cmp
enter
push
inc
lods
sahf
movsl
imul
push
mov
out
je
mov
mov
and
loopne
xlat
mov
in
scas
shll
mull
sarb
xor
mov
enter
mov
xchg
hlt
pop
sbb
cmp
or
xchg
sub
pusha
adc
lret
push
jg
adc
subl
xlat
dec
or
cmp
jae
cmovs
repz
xor
inc
mov
leave
mov
into
jl
xor
add
aam
cld
test
inc
jmp
in
adc
xchg
xchg
sbb
daa
mov
push
jp
inc
push
loopne
add
ret
adc
push
scas
fmull
pop
mov
inc
icebp
jg
xorl
or
in
mov
cmp
mov
dec
mov
fildl
les
int
in
push
jae
push
int3
sbb
out
mov
xor
sbb
jb
mov
pop
push
std
je
mull
xchg
lahf
xor
mov
aam
cmpsl
je
pop
rolb
mov
add
sti
mov
aas
push
aaa
add
inc
aaa
sub
ret
xor
lret
dec
cmp
andb
je
daa
scas
and
xor
dec
mov
sbb
lock
mov
stos
dec
lods
cltd
ja
and
inc
push
dec
popf
into
push
inc
mov
out
mov
cmpl
test
mov
test
mov
scas
push
xchg
cld
cmpsl
in
fisttpll
push
pop
rcrb
jno
das
mov
loopne
push
das
vmwrite
ret
aad
jnp
aad
das
mov
cmp
test
imul
jno
xchg
out
add
push
popa
add
scas
xlat
mov
aad
mov
mov
lahf
insb
sbb
scas
push
rolb
pop
aaa
add
lea
pop
sub
aas
sbb
ret
adc
fisubl
shr
jne
sub
push
cmp
fcmove
in
aas
das
mov
adc
xor
rep
in
rorb
aaa
mov
push
and
shl
and
sub
lcall
fadds
xor
lods
xor
leave
addr16
lea
mov
imul
sub
loop
ret
fwait
adc
xor
cmp
pop
jns
movsl
jne
popf
sahf
out
jnp
cs
shrb
mov
test
inc
sub
addb
inc
jmp
test
jge
mov
xor
mov
cmp
cmc
ret
popa
mov
loopne
sub
xchg
pop
shrb
movsb
fisttpll
stc
cwtl
and
fstpt
jne
jmp
jb
push
cmp
daa
cmp
mov
dec
or
movsl
pop
mov
or
popa
xor
in
cmpb
jl
repz
pop
fisubl
idivb
xchg
xchg
push
and
xchg
adc
inc
adc
pop
mov
mov
int3
in
push
jo
test
and
sub
fdivr
lods
popa
inc
jnp
inc
fdivs
shl
add
and
mov
in
mov
lods
xchg
or
test
adc
mov
push
jp
stos
out
xchg
dec
pop
mov
cmpsl
xchg
aad
aad
cmp
jbe
mov
negb
mov
inc
pusha
push
aam
pop
add
fsubr
mov
push
push
test
jge
aas
inc
cmp
jno
addr16
sarl
loopne
ficoml
aaa
add
jmp
outsl
jge
mov
cwtl
mov
cwtl
pop
and
inc
mov
push
cmp
jmp
sbb
cld
add
dec
or
jg
inc
bound
fsubl
or
lcall
push
push
add
xor
cltd
or
in
fcoms
sub
lods
mov
aas
in
mov
into
aas
fcoms
sti
into
and
push
hlt
inc
mov
or
sub
pop
lods
lods
cmp
ds
leave
loop
sub
dec
lea
push
aam
sub
inc
mull
mov
or
mov
faddl
cmpsb
adc
popl
cld
cwtl
add
je
push
push
aam
out
std
mov
xchg
adc
lcall
xor
dec
popf
xchg
int
nop
jge
lret
lods
inc
jb
push
out
sbb
mov
in
and
cmp
mov
popa
sbb
inc
push
fcmovbe
pop
jno
lock
sub
mov
xchg
lcall
aad
ss
lods
adc
sub
lods
mov
push
in
mov
and
cmp
mov
inc
or
push
mov
cmp
mov
call
xor
push
adc
loop
sbb
mov
mov
ja
das
outsb
inc
jne
mov
add
fistpl
xchg
loop
fsts
fwait
pushf
gs
inc
stos
rcll
pop
pop
arpl
repnz
mov
xchg
xchg
push
xor
pop
enter
sub
fwait
in
test
int
loop
and
shl
cltd
cmc
es
mov
int3
lret
stos
into
imulb
and
insb
lret
test
in
hlt
jns
lret
pop
mov
in
jmp
or
sub
js
jno
jbe
ficompl
pop
inc
mov
jmp
pop
adc
cmp
out
scas
scas
jae
sbb
mov
xor
pop
add
stos
cld
iret
addl
dec
mull
xor
pop
push
dec
pop
out
test
ljmp
xor
test
xchg
fisttpll
or
stos
dec
icebp
lcall
mov
pushf
pop
push
adcb
sahf
or
scas
scas
stos
mov
mov
pop
lock
js
pop
sbb
add
mov
mov
add
int3
push
mov
dec
cmp
adc
push
test
stc
pop
adc
pop
mov
mov
movsl
jmp
mov
lods
adc
repz
mov
idivb
mov
aam
dec
cld
ret
fnstsw
jp
dec
xchg
or
arpl
push
and
jne
fisubrl
push
and
pusha
ljmp
push
and
aad
lahf
inc
dec
hlt
stos
inc
dec
mov
mov
sub
sti
out
imul
scas
jge
out
fistl
mov
ds
jno
ja
xor
cmp
iret
out
sub
fidivl
lock
sbb
rcll
mov
add
in
loopne,pn
xchg
cmpsl
jge
and
cmp
sub
pop
xor
into
test
inc
xchg
fs
xchg
daa
loope
jns
enter
xor
lahf
test
shll
sbb
sahf
stos
sbb
pusha
rcrl
push
lods
into
rorl
cli
jns
inc
push
in
mov
in
xchg
mov
fidivrs
push
sub
mov
rcll
cmp
xchg
mov
and
lea
call
stos
xor
lods
push
test
lret
pop
cmp
push
fsubl
out
pop
cmpsl
or
mov
test
imul
xchg
sub
xchg
inc
inc
in
in
rcll
cmp
roll
mov
jmp
loopne
clc
sbbl
out
arpl
xor
adc
pop
add
mov
jecxz
hlt
in
dec
cmp
mov
jle
xor
cmpl
decb
dec
fadds
adc
jp
mov
adc
push
movsl
sub
pop
jbe
std
lods
ficoms
pusha
push
in
and
jne
pop
fisttpl
mov
jb
push
cld
adc
xchg
ss
dec
fs
pop
pop
idiv
pop
dec
test
bound
data16
add
shll
scas
out
inc
int3
daa
or
inc
int
jno
dec
je
ds
sbb
and
lds
ljmp
fcmovb
fwait
iret
pop
bound
insb
aaa
adc
mov
clc
int
pop
jb
sub
js
lahf
out
xchg
insb
fsub
jb
mov
faddl
mov
arpl
gs
aam
test
mov
cmp
fnstsw
gs
jno
or
mov
call
mov
std
popa
add
dec
inc
xchg
jge
in
xchg
pop
xchg
mov
call
cmpsb
mov
ja
rcl
xchg
popa
add
jmp
fistps
loop
jnp
repnz
gs
xor
pop
push
mov
call
pop
int3
aaa
inc
out
mov
mov
or
ds
mov
cmp
inc
jb
mov
and
cmp
pop
testl
xchg
and
mov
mov
adcl
add
arpl
clc
mov
dec
hlt
imul
pop
add
xchg
repnz
mov
testl
mov
sbb
inc
push
ja
mov
xor
movsb
cmpsb
pop
aas
imul
shrb
stos
lock
ss
xchg
add
cwtl
std
in
in
xor
cs
lret
adc
jno
push
xlat
fdivrs
mov
pop
adc
out
xor
aad
addr16
xor
fwait
add
sbb
pop
pop
cmp
bound
or
cmpsb
jge
mov
jbe
rorl
xchg
mov
jmp
or
add
adcl
int
pop
ficompl
push
xchg
lds
pop
out
call
aam
xchg
dec
mov
loope
inc
push
cltd
in
sti
lds
adc
lahf
adc
lahf
xor
add
xor
or
loope
xchg
shlb
fbstp
mov
xchg
or
push
pop
dec
lcall
push
enter
ret
ret
je
xor
popf
enter
outsb
test
mov
mov
nop
fmuls
sub
in
adc
inc
lcall
cmpsl
cmp
cmp
out
sti
push
mov
insb
adc
xor
push
push
stos
mov
popa
fistps
inc
rcrb
mov
test
test
test
sbb
aas
cs
dec
xchg
or
jecxz
dec
adc
cltd
mov
push
jno
rorl
out
fsubs
cmp
scas
pop
push
or
out
sub
or
adc
shll
mov
mov
loope
adc
inc
and
inc
jb
fsts
xor
enter
or
xor
inc
fsubrl
sbb
test
dec
fwait
adc
iret
cmc
int
repz
pop
repz
out
addr16
movsb
or
push
outsl
or
xor
mov
lahf
cmp
push
mov
lea
lcall
into
das
mov
and
add
pop
test
pop
fs
mov
push
in
inc
aam
shlb
out
scas
mov
adc
cmpsb
out
sbb
mov
mov
test
xchg
dec
jbe
sbbb
adc
inc
mov
js
pop
add
gs
insl
cltd
cmp
ja
out
js
inc
fsubrs
xor
sub
mov
mov
xchg
rclb
and
jle
lret
ret
sbb
xor
or
sbbb
popf
cwtl
jae
es
dec
mov
fwait
add
jne
int3
gs
stos
cmp
mov
mov
inc
aad
in
lods
jnp
xchg
mov
imul
cmpb
repz
ja
dec
inc
rcll
push
cmp
add
testl
xchg
gs
andps
imull
int3
call
push
lahf
pop
fs
test
xchg
jecxz
es
jno
mov
dec
xchg
cli
jle
fsubl
mov
inc
out
add
push
loope
mov
adc
cmpsb
jge
lahf
pop
jmp
xor
nop
push
push
inc
cmpsl
hlt
mov
add
mov
xchg
outsl
adc
lret
shll
xor
xchg
xor
repz
fwait
cld
ret
pop
mov
imul
loopne
xchg
mov
fsubl
and
clc
test
into
push
jb
lods
dec
arpl
inc
and
rolb
xchg
cld
inc
push
repnz
in
push
mov
pop
mov
cmp
or
sub
leave
xor
mov
and
addb
sbb
xor
and
and
mov
sbb
cmpsl
xchg
mulps
adc
mov
cmpsl
mov
out
sub
inc
movsl
lret
call
xor
testb
jb
mov
popf
xchg
xor
lock
cld
pop
push
aam
xor
enter
rcrl
pop
fisttpll
or
xchg
sbb
xchg
imul
movsb
popa
mov
mov
lds
pop
xchg
popf
pop
mov
push
ret
pop
cli
dec
mov
dec
mov
lods
in
sti
dec
xor
out
daa
cmp
jp
xor
jl
inc
sbb
push
jg
inc
fwait
push
mov
sbbb
mov
pop
push
push
lret
gs
adc
out
cld
jp
repnz
cli
cmp
xchg
flds
xchg
pop
lret
xor
dec
inc
jge
dec
nop
or
push
jle
pop
fldenv
and
add
mov
les
xchg
mov
test
test
pusha
push
inc
iret
jl
into
jbe
addr16
ss
sub
sub
dec
loope
mov
pop
dec
imul
stc
xchg
or
push
repnz
push
sub
lret
out
push
repnz
js
dec
cmpsl
mov
inc
mov
pushl
shl
mov
fldt
mov
lcall
cmovae
pop
mov
mov
sbb
xor
lahf
imul
inc
sub
adc
mov
pop
mov
pop
scas
das
cmp
popf
repz
mov
outsb
sbb
or
lods
fs
pop
js
mov
push
sub
jg
and
add
cmc
cwtl
dec
and
rol
add
sub
hlt
icebp
enter
out
inc
ss
sbb
movsb
jo
out
dec
pushaw
loop
ja
add
xchg
dec
xchg
mov
jns
xor
xchg
inc
or
shrb
jmp
jmp
push
bound
and
ret
pop
test
adc
xchg
test
inc
dec
xor
lds
mov
es
or
icebp
call
rol
int
jecxz
and
jns
push
xchg
notl
call
inc
icebp
pop
in
mov
pop
in
sbb
fiaddl
sub
cmp
sbb
jns
dec
xchg
clc
jg
push
mov
add
push
cwtl
popf
mov
or
push
dec
mov
xor
mov
mov
testl
mov
mov
pop
fs
orl
mov
cmp
cmc
dec
shrb
lods
insl
test
or
sahf
cmc
pop
enter
stos
dec
mov
jmp
cmpsl
sub
cmp
and
outsl
into
sub
sbb
rcll
gs
push
inc
pop
and
sbb
ss
and
addb
gs
mov
pop
mov
fistl
or
fs
insl
sbb
dec
mov
rclb
scas
shlb
lods
iret
dec
test
lcall
fnstsw
and
dec
mov
sbb
inc
push
lcall
es
jl
es
int3
add
sbbb
arpl
pop
jns
mov
and
push
or
repz
mov
mov
mov
scas
test
xchg
cmp
sbb
faddl
jl
loopne
xchg
mov
fsubrs
mov
and
dec
mov
xchg
repnz
push
adc
in
jecxz
or
cmpsb
in
and
mov
out
xlat
ret
adc
pop
xor
sbb
cmpsb
ljmp
cmp
and
ss
adc
das
fsubrl
lahf
pop
loope
cmp
cmc
add
nop
push
ss
loope
adc
add
test
cmpsb
add
ja
push
into
les
pop
mulb
cmp
int3
incb
mov
not
mov
sbbl
add
dec
sbb
cmp
lea
xor
ja
aas
sbb
add
into
sub
notb
sub
addr16
jnp
add
sbb
inc
fisttps
xor
mov
push
ss
cmp
xchg
and
sub
sub
or
fstpl
fstpt
dec
mov
fisubs
int3
mov
inc
mov
sbb
push
pop
test
test
mov
neg
xor
inc
enter
pusha
sbb
movsl
divl
xor
mov
ret
xchg
cmc
pop
cli
and
mov
or
icebp
andl
sti
push
fwait
inc
test
sub
stc
and
mov
push
pop
pushf
push
pop
inc
xlat
fadd
and
cmp
push
fdivr
fcoms
arpl
jmp
fdivl
idivl
adc
test
and
mov
rcr
stc
nop
out
pop
pop
push
pushf
test
mov
loope
ss
fxam
int3
push
in
int3
out
orl
aad
push
ljmp
mov
fcomip
pop
in
and
in
int3
cmp
mov
cs
xchg
xor
xchg
or
adc
cmp
roll
xchg
out
pop
les
insl
xor
clc
insl
cmp
push
pop
mov
rolb
sub
pushf
xchg
hlt
xchg
stc
insb
push
dec
in
mov
rorl
pushf
lods
dec
inc
jmp
ficoml
pop
dec
mov
ror
sahf
cmp
lods
mov
mov
addl
mov
jecxz
sarb
xchg
push
fidivrl
insb
sarl
mov
xchg
int3
jns
adc
mov
cld
faddl
sbb
out
movsl
xchg
cmp
pop
mov
sbb
jl
cmp
loop
sbb
dec
xchg
cltd
pop
jmp
mov
popf
sbb
fcoms
mov
push
fists
inc
test
arpl
insb
push
insb
movsl
ds
hlt
dec
lock
dec
mov
jbe
das
mov
sub
ret
pop
dec
fs
sub
cmp
sub
adc
jne
push
inc
mov
dec
mov
movsb
jl
pop
stc
jno
mov
mov
adc
push
fldt
outsl
pop
add
pop
jb
andb
and
ljmp
pop
test
movsb
xchg
test
test
andb
mov
jne
fwait
mov
mov
add
repnz
shrb
xor
mov
fs
cmp
sbb
pop
pop
mov
adc
lcall
ja
mov
xor
ds
inc
out
pop
push
test
add
shll
or
push
jg
push
adc
dec
push
lock
push
sub
ret
push
adc
mov
insb
fwait
and
test
push
inc
stos
jge
popf
push
push
jl
cmp
add
inc
sub
call
repnz
inc
repz
sti
adc
mov
js
mov
xor
or
mov
jo
gs
add
inc
mov
sub
inc
mov
push
mov
in
mov
ret
int
mov
jmp
repz
loope
lock
sub
push
jo
mov
and
iret
ds
cmp
cld
jbe
pusha
int3
clc
loop
jmp
fsubs
call
imul
lock
sub
inc
idivl
sbbb
repz
test
icebp
test
dec
mov
xchg
fcmovu
aas
imul
sub
jmp
fwait
jns
aas
cmp
mov
mov
jle
cmpsb
sub
repnz
sbb
aaa
aas
loope
adc
mov
repnz
dec
adc
lds
aaa
movsl
adc
inc
clc
ja
add
jbe
ss
push
pop
pop
jle
pusha
push
aas
inc
repnz
js
sub
les
aaa
sbb
xchg
mov
or
push
jae
shrl
cmpsl
push
and
inc
inc
cltd
push
loope
lods
xor
push
add
pop
xlat
jne
in
dec
nop
jns
sbb
inc
add
nop
iret
lea
cmp
push
aaa
pop
in
lret
push
shll
andb
cmpsl
fldenv
bound
jp
aaa
insl
inc
mov
mov
xor
aam
nop
xor
aam
out
test
into
sub
xchg
test
aam
lds
dec
push
lock
in
lods
in
test
test
or
call
das
enter
cmpsb
inc
imul
push
adc
test
and
rclb
pop
inc
sub
daa
int3
sarl
scas
into
scas
movsb
xor
dec
push
loope
or
sbb
int3
cmpsl
mov
into
in
cmpsb
imul
in
ror
mov
jb
les
icebp
or
jl
and
in
out
sbb
pop
jne
loope
pop
rol
push
mov
je
fdivrp
xchg
mov
push
enter
dec
cmp
mov
test
jg
cmp
addr16
ret
adc
xchg
lods
mov
mov
shlb
push
repz
adc
jmp
adc
sahf
sahf
cmp
idivl
cmp
lock
xchg
das
frstor
out
mov
xchg
jnp
nopl
sbb
rcrl
pop
aaa
idivb
adc
or
fisubrl
leave
pop
cli
mov
push
inc
dec
mov
adc
sbb
mov
je
fsubrl
popa
dec
xchg
mov
push
dec
sub
int
xchg
xchg
push
inc
mull
dec
les
test
sbb
add
jno
push
cmp
test
ja
pop
rorl
test
dec
jnp
push
sahf
repz
aaa
ja
inc
jbe
mov
dec
dec
push
adc
fbld
les
mov
jmp
addr16
movsb
jns
in
orl
out
sbbb
dec
stos
xchg
pop
cwtl
push
sahf
cwtl
pop
int3
jae
aam
ret
jo
mov
push
push
in
movl
pop
sub
mov
stc
or
xchg
dec
testb
xchg
or
xchg
js
xchg
ss
mov
lret
jno
dec
mov
push
loope
in
push
aaa
jmp
xchg
cmp
or
mov
adc
je
ja
xlat
mov
dec
xchg
push
dec
mov
mov
mov
pop
mov
sbb
xor
add
jmp
fcmovu
rcrb
pop
adc
dec
push
icebp
xorb
pop
sub
and
cmp
test
pop
ficoml
fcoms
outsl
in
xchg
sbb
scas
repz
int3
sti
cmp
adc
push
jne
push
dec
fdivs
xchg
ja
mov
jbe
gs
call
fiadds
inc
cmpb
mov
in
dec
subb
rcr
lret
xchg
clc
mov
dec
shl
xchg
mov
pop
dec
inc
fisttpll
shrl
rcll
push
push
loope
inc
sub
mov
out
inc
add
inc
push
sbbl
jmp
mov
xchg
pop
fdivr
mov
and
shlb
push
popa
aad
popf
cmp
jb
mov
fldt
dec
or
mov
jns
jp
add
sbb
inc
stos
testl
push
adc
cmc
fnstsw
push
or
cld
hlt
cld
ja
test
in
pop
jge
or
lcall
xchg
js
ds
pop
lock
xchg
mov
pop
ret
mov
lcall
loope
sbbl
inc
jbe
ds
xchg
fbld
sti
cltd
jb
cmc
jmp
push
and
inc
or
xchg
xor
xchg
jo
inc
fidivs
mov
pop
lds
fwait
outsb
mov
imul
mov
scas
push
mov
imul
jge
and
add
pop
or
gs
mov
jo
rcll
xor
mov
push
pop
test
fld
sbb
mov
lret
lret
mov
jne
and
push
and
mov
and
and
ds
or
sub
in
cmpsl
pusha
dec
xchg
and
std
add
push
clc
test
mov
out
imull
and
xor
fildll
enter
lret
lods
sahf
adc
mov
addr16
fadds
rcrb
mov
inc
pop
xchg
xchg
repz
sbb
mov
jl
rcrb
inc
adc
ja
loop
mov
mov
scas
and
lods
lods
push
jp
push
xchg
push
cmp
scas
shlb
pop
dec
push
dec
rcll
xor
push
push
inc
rcll
jmp
jae
mov
insl
jle
scas
and
xchg
sti
je
test
jg
xchg
push
jnp
mov
int
sti
push
aad
or
and
cs
jge
xor
push
addb
sbb
hlt
mov
and
jae
aam
iret
dec
mov
filds
mov
ss
pop
std
sbbb
and
or
test
mov
mov
and
loop
loop
cmc
pop
stos
pop
or
insl
or
cmpsl
popa
adc
mov
xchg
mov
mov
lret
adc
sub
sbb
je
iret
xlat
cmpl
push
test
nop
inc
jp
rorb
xchg
jg
mov
xor
push
push
xchg
inc
pop
je
add
inc
xchg
in
xchg
aaa
ds
lcall
fmuls
mov
mov
xchg
inc
test
out
dec
inc
enter
push
shr
jmp
xchg
dec
loop
mov
pop
out
adc
mov
aaa
dec
sbb
mov
ret
pushf
out
std
loope
xor
cmpsl
push
andb
mov
mov
xor
ja
jne
mov
xrelease
jmp
adc
movsb
mov
jo
mov
xor
sbb
outsl
jle
enter
dec
xchg
jnp
xor
xor
fsubrs
adc
push
mov
mov
xor
outsl
clc
or
ljmp
decb
in
xchg
dec
cmpsb
stos
loop
inc
out
aaa
push
pop
dec
inc
jge
pop
mov
xchg
test
test
push
xor
jge
hlt
xchg
adc
int
inc
push
xchg
push
loope
jbe
pop
stos
pop
dec
mov
cmpl
arpl
mov
sub
xchg
mov
cmp
cmc
std
cmp
push
mov
cwtl
adc
xor
cmp
fsubrl
mov
bound
shl
testb
xor
inc
cwtl
jbe
adc
mov
aad
pop
inc
xor
test
imul
in
dec
data16
xchg
jecxz
ret
push
cmp
mov
addr16
mov
inc
push
xchg
lret
hlt
loopne
add
stos
rolb
inc
mov
mov
ret
or
fcom
mov
lahf
cmp
outsb
cwtl
sahf
sub
add
and
mov
rol
lea
push
rcr
xchg
sub
mov
sbb
mov
xchg
in
hlt
push
mov
or
dec
push
cmpl
sub
adc
mov
lods
pop
cli
mov
outsl
sbb
lea
xor
sbb
sub
popa
jle
iret
jg
cli
jb
in
es
adc
and
mov
add
xchg
loope
cmp
push
adc
js
pop
adc
insb
ss
pop
push
test
jae
inc
xchg
pushf
xor
xchg
inc
stos
push
cmpl
push
in
lock
inc
xchg
jle
jno
ss
jnp
fwait
int3
add
dec
mov
xlat
mov
sub
sub
cmp
jne
shlb
or
mov
cmc
movsl
pop
rolb
pop
das
jno
xchg
jb
xchg
loope
cmp
jl
jmp
in
pusha
ljmp
mov
cli
sbb
add
cs
sub
mov
mov
xor
inc
insl
cmpsl
sbb
mov
ds
das
xorl
add
xorl
push
push
mov
int3
test
pop
sub
loopne
jle
mov
das
into
stos
pop
repnz
lock
xchg
cmp
enter
sub
xor
adc
gs
xchg
data16
mov
and
popf
in
adc
enter
mov
lea
out
fmull
and
mov
xor
int3
sahf
sbb
sahf
outsb
lock
push
adc
test
popa
dec
fwait
outsb
push
xor
and
add
or
outsb
add
dec
mov
push
je
movsl
sub
jns
int
daa
fsubs
leave
je
jg
int
cld
push
stc
outsl
xchg
jbe
add
in
mov
lret
adc
inc
fstpl
lret
stc
inc
pop
sub
insl
sub
jae
outsb
mov
jp
or
roll
sahf
dec
outsl
fcomi
sbb
test
cmpsb
xchg
cld
dec
mov
mov
fisubrs
fwait
add
sbb
cmp
out
fs
ljmp
std
xchg
outsb
push
loop
xchg
lret
lcall
js
lret
cmc
sarl
sbb
shrb
fisttps
in
fistpl
out
nop
sti
cmp
and
cmp
xchg
or
sbb
xor
sarb
outsl
lock
lods
push
adc
mov
cs
and
ja
pop
mov
mov
aad
or
inc
mov
mov
inc
and
out
aam
xor
or
xchg
lret
sub
mov
mov
scas
fisttpll
mov
push
adc
xchg
out
aas
xchg
jecxz
mov
mov
scas
adcl
dec
jne
sbb
mov
xchg
pusha
mov
loop
inc
or
jp
cmp
pop
test
test
cmp
or
jb
xor
mov
pusha
push
mov
sbb
push
iret
adc
mov
jbe
js
mov
outsl
loope
jl
dec
addr16
push
lods
or
rolb
jmp
stos
in
mov
xor
xor
aas
pop
mov
or
cmpsb
xor
lcall
push
xlat
inc
cwtl
in
hlt
cmc
xchg
cld
fdivs
jl
push
cmp
imul
jno
sub
push
or
xchg
pop
stos
test
add
cmp
idiv
lea
push
jnp
or
insl
aad
sub
xor
xchg
adc
sarl
lock
popf
mov
push
dec
insl
fdivrl
popa
jne
lcall
push
bound
pop
pop
adc
or
dec
sbbl
pop
mov
fcom
rorb
xor
xor
ss
lahf
dec
into
or
gs
adc
add
pop
adc
cs
bound
jbe
shrl
inc
push
pop
pop
mov
cli
div
leave
push
pop
push
mov
sub
inc
mov
shlb
aad
out
cltd
or
popf
jmp
inc
jb
jo
into
insl
jg
jae
outsl
outsl
test
sbb
push
aam
cli
inc
clc
repnz
ror
pop
leave
sbb
sub
or
and
data16
adc
pop
sti
lret
lcall
in
not
es
test
mov
push
adc
xor
and
lock
loopne
jo
outsl
mov
gs
inc
daa
or
jmp
loop
dec
pusha
dec
and
add
shrb
mov
or
dec
jns
mov
aaa
orb
and
jns
or
in
add
test
fs
rcrb
mov
jge
lret
data16
roll
sarl
divl
xor
dec
outsl
mov
ret
xchg
rolb
jmp
jp
aam
mov
xlat
xchg
jp
ja
mov
mov
inc
mov
xor
jp
mov
adc
fucom
dec
stos
ds
mov
cld
cmpsl
fildl
es
ja
imul
sbb
dec
in
ja
inc
push
out
lret
jbe
shr
mov
adc
call
cmp
dec
sub
lret
aad
imul
leave
stc
scas
inc
shlb
jbe
test
fistpll
jnp
lods
fstpt
aam
push
and
sti
inc
xor
rolb
mov
mov
inc
cmp
xor
sub
jne
inc
mov
adc
ret
mulb
insl
mov
push
clc
aas
fstl
xchg
xor
rcl
xlat
das
stos
mov
xchg
push
aam
fadds
sub
insb
ss
daa
pop
jne
sub
shrb
sub
lahf
iret
inc
out
sub
lock
hlt
ret
aad
xchg
ret
inc
ds
push
adc
mov
push
push
mov
pop
xchg
sbb
xchg
mov
adc
sarl
shlb
push
addb
jae
push
push
inc
xchg
mov
xchg
and
stc
popl
xchg
fmuls
call
fcmovne
pop
nop
mov
cmp
fisubrl
xchg
jbe
mov
xor
fstpt
fidivl
dec
int3
cltd
movsl
ds
xchg
jmp
adc
inc
pop
sti
ret
cmp
pop
lret
and
xchg
and
repnz
mov
std
ret
int3
loop
test
adc
dec
leave
enter
mov
cmp
cmp
movsl
pop
inc
pop
adc
cld
mov
adc
data16
iret
sarl
loop
pop
out
int3
jmp
dec
or
add
inc
loop
cld
ret
repz
dec
and
fwait
push
lahf
sar
outsb
mov
adc
mov
xchg
pop
lahf
ljmp
mov
aas
mov
mov
dec
push
add
pop
xor
pop
and
mov
movsl
lahf
imul
mov
repz
push
mov
push
call
cmpsl
sbb
or
push
cmp
add
jmp
or
lret
sarl
mov
push
pop
fisubs
fdivr
inc
dec
outsb
or
mov
lahf
mov
pop
popf
pop
cmp
pop
add
js
cmp
nop
fsubs
add
stos
jmp
pop
add
inc
mov
jbe
iret
mov
les
add
cmp
shrb
jge
add
aaa
mov
addr16
xchg
movsb
jmp
test
insl
pop
pushf
or
shrb
sub
mov
pop
sahf
mov
loopew
adc
pusha
scas
jp
jo
jnp
cmp
outsl
lds
ljmp
out
and
xor
dec
xor
scas
push
dec
inc
pop
mov
insb
nop
popa
mov
fstpl
mov
mov
xchg
mov
mov
outsb
cli
fidivrl
js
xor
dec
mov
loopne
insb
xchg
int
or
out
and
out
mov
and
in
mov
dec
jle
ret
jo
cmp
mov
cs
test
clc
call
mov
push
xlat
pop
sbb
mov
push
mov
add
in
adc
loope
scas
cld
data16
mov
daa
loop
inc
sub
xchg
ror
in
pop
fstpt
jp
dec
pop
jmp
sahf
fiaddl
push
movsl
je
ds
cli
mov
jge
or
arpl
mov
sbb
sbb
and
andl
dec
adc
jecxz
inc
les
pop
dec
xor
seta
out
jns
aas
mov
mov
cmovle
inc
rcrl
lods
xchg
imul
loopne
test
xchg
arpl
out
insb
mov
popa
pop
inc
push
xchg
imul
inc
pop
inc
test
jmp
aad
push
jne
or
or
mov
mov
jg
push
sahf
inc
lret
xchg
xchg
mov
clc
jl
pushf
pop
lgs
cmp
cmp
cli
into
adc
mov
fistps
ja
jp
push
inc
add
test
loop
xor
fbld
sub
sahf
adc
mov
pop
fbstp
fldz
pop
ror
push
aaa
cmpsb
loop
popa
inc
xchg
inc
mov
repz
insb
inc
adc
and
fiadds
sbb
fstpt
adc
jno
jle
jp
jmp
pop
mov
pop
inc
mov
dec
fisubs
repz
mov
push
std
imul
adc
pop
mov
push
fstpl
arpl
mov
inc
push
inc
or
or
aaa
and
movsb
sbb
mov
and
pusha
adc
movsb
xchg
push
mov
insl
pop
xchg
or
movsw
jne
loope
mov
imul
rol
xor
xchg
int3
xor
cmc
xor
scas
scas
cmp
and
imul
inc
iret
jb
shll
fsubrl
outsl
xor
pushf
clc
add
movsb
dec
into
icebp
fstpl
dec
jl
lcall
rorl
test
inc
mov
push
gs
iret
pop
int
jne
ja
in
sbb
pop
lret
or
lcall
inc
jg
repz
push
shll
cmp
sub
imul
mov
xor
jecxz
je
mov
xor
xor
xchg
in
add
push
orb
fcoms
and
leave
xchg
sahf
cmp
fs
pextrw
jg
mov
leave
arpl
lret
sub
cmp
testb
push
sub
adc
fildll
pop
mov
sub
dec
testl
sub
enter
mov
lret
mov
and
fsubrs
out
ret
in
and
mov
add
aas
sti
pusha
sarb
add
jb
in
fnstsw
sub
sub
int
je
push
jns
adc
hlt
sti
into
inc
mov
or
invd
ljmp
pop
mov
lock
movsl
test
jo
repnz
movsb
mov
or
subb
inc
jp
mov
pop
stos
push
sbb
add
push
add
pop
add
cmp
lcall
cmpsl
mov
into
sub
cli
mov
mov
push
sbb
inc
sbb
sub
rcrl
shrb
test
add
push
lret
ss
repz
jl
test
mov
std
call
mov
sub
ror
and
push
mov
imul
xchg
jb
jb
jp
pusha
pop
ja
add
jns
jae
inc
add
mov
popf
dec
enter
add
outsb
fs
es
aas
movd
push
leave
jno
push
mov
loopne
arpl
and
and
std
popa
mov
fmuls
add
rorb
or
push
stc
in
data16
addb
or
insl
xchg
lea
notb
pop
xor
jns
mov
mov
rcl
adc
mov
decl
movsl
es
decl
or
inc
fbstp
loopne
movsl
loop
add
xlat
lds
les
or
fcoms
ds
jns
out
pop
loop
sub
xlat
leave
ficoms
sub
mov
stc
out
je
adc
mov
xor
sarb
jae
inc
lock
lcall
mov
sub
fbld
xchg
int3
sub
in
jnp
add
loop
xchg
mov
add
outsl
cmp
inc
ret
iret
hlt
aad
dec
enter
jb
sbbl
out
or
cmp
jno
inc
nop
mov
pusha
inc
cmp
xchg
pop
subb
pop
sarl
call
enter
std
sahf
inc
imul
jbe
xchg
jecxz
inc
mov
repz
leave
insl
sar
or
xchg
test
sub
cmpsb
cmp
xchg
mov
sti
inc
inc
call
mov
mov
mov
lret
lahf
sub
out
test
push
jmp
xchg
daa
mov
or
rcr
shlb
xchg
sub
mov
orb
in
sbb
jecxz
adc
into
jg
jle
push
sbb
and
pop
mov
xor
ja
aam
ds
jle
fs
push
or
xor
jbe
push
add
sbb
pushf
outsb
lods
sub
push
mov
mov
mov
ss
mov
into
pusha
mov
lret
xchg
xchg
into
jns
sar
inc
stos
push
add
push
jno
cltd
mov
jmp
aaa
adc
fistpl
mov
cmp
cmp
arpl
inc
mov
push
jne
cmc
dec
inc
daa
lret
xchg
adc
adc
dec
popf
adc
aas
sbb
dec
icebp
pushf
test
push
dec
int
sbb
lcall
sub
ds
ds
xchg
fstps
dec
sti
or
push
xchg
outsb
sbb
test
fisttpll
scas
add
mov
stc
outsb
test
mov
ss
not
cmpsb
jg
aaa
push
jbe
inc
or
push
fsubs
mov
enter
push
or
mov
mul
mov
xor
pop
add
push
cmp
jnp
adc
ficompl
adc
aaa
aam
jle
ljmp
je
mov
mov
lcall
test
pop
push
jecxz
xor
sbb
push
rclb
les
jbe
rclb
lds
fxch
fldl
jmp
dec
mov
inc
mov
test
fdivr
add
jle
movsb
fiadds
sub
in
cmp
push
or
cld
dec
jne
into
xchg
inc
into
mov
cltd
arpl
sahf
int
pusha
dec
fwait
loope
cltd
inc
xchg
mov
shrl
mov
rep
and
in
cmp
aaa
cmp
cmpsb
ljmp
push
cmp
pop
insb
cmp
adc
loop
and
and
cmp
or
adc
ret
and
xchg
out
adc
sbb
sub
xlat
addr16
mov
inc
mov
pop
in
out
mov
push
loopne
inc
cli
addr16
loop
inc
xchg
cmp
aas
inc
xchg
js
and
push
cmpsl
inc
jnp
clc
mov
lret
mov
mov
mov
shrb
mov
push
sub
cwtl
adc
xor
lcall
jb
jmp
xchg
call
jmp
pop
jnp
int3
shll
lret
outsb
out
or
dec
pop
rcrl
fisubs
sub
push
cmp
icebp
shlb
sub
insb
out
out
inc
cltd
shlb
leave
outsb
shrb
cltd
mov
dec
jne
cs
orb
push
mov
jge
faddp
stc
push
shrb
cmp
testl
imul
lods
push
add
in
and
push
inc
dec
fsubs
mov
cltd
push
pop
mov
and
mov
je
jle
push
mov
lea
jecxz
cmpl
cmc
call
xor
jle
xor
push
imul
xchg
shr
fstps
jne
pushf
das
sub
enter
fsubs
int3
pop
lods
mov
stos
dec
pop
push
push
lock
scas
stc
mov
scas
cmc
outsb
sbb
adc
dec
inc
mov
dec
outsb
sub
loope
sub
adc
lods
pop
inc
sub
and
push
js
adc
test
in
movsb
sbb
push
add
js
push
cmpsb
fnstcw
mov
jp
jl
push
aas
pushf
sahf
jno
fstl
sub
add
out
rclb
mov
sub
loop
sbb
push
mov
dec
xor
mov
jmp
sbb
lret
scas
imul
mov
inc
xchg
data16
mov
ret
jno
mov
cwtl
push
push
push
in
aad
lret
mov
bnd
mov
cmp
pushf
scas
xchg
daa
movsl
daa
cmc
movsl
xchg
pop
jno
and
fmull
xchg
inc
je
xchg
mov
lds
neg
cmp
xchg
movsb
scas
stos
mov
adc
int3
push
inc
loop
xor
xor
and
and
dec
sub
or
loop
push
xor
lret
and
add
mov
fcmovbe
jge
insl
inc
aam
insb
arpl
insl
addl
dec
inc
lcall
in
push
jmp
adc
ja
ds
daa
mov
loopne
nop
pop
and
rcll
pusha
push
rcrl
lret
in
inc
xor
xchg
or
jne
test
outsl
jp
adc
ljmp
sbb
jo
or
mov
sbb
inc
inc
add
fcomp
mov
push
shlb
ds
cmp
adc
imul
xor
ljmp
fstpl
mov
aad
jp
xchg
xchg
sub
bswap
mov
xchg
imul
and
out
shll
int
fldenv
sbb
into
mov
mov
rorb
mov
or
jp
imul
scas
movsb
xchg
and
das
xor
sub
js
sub
lods
cwtl
test
out
or
les
mov
ja
sar
mov
std
pop
daa
mov
add
test
incl
gs
push
sbb
clc
andl
int3
push
sbb
sbb
add
addr16
jno
and
cmp
sub
sbb
cmp
jno
outsl
test
cmp
sbb
das
sub
shll
sahf
movsl
int
add
roll
mov
push
in
push
mov
pop
lods
jle
aaa
mov
pop
jae
addb
dec
and
push
pop
repz
hlt
lahf
inc
jmp
rdpmc
cli
cwtl
sar
pop
mov
jmp
call
shlb
sbb
test
dec
jmp
popf
jae
xor
cmp
xor
lcall
in
fmuls
mov
enter
adc
cmp
cmp
xor
or
adc
leave
test
sbb
or
pop
sbb
cli
inc
int
push
xor
sbb
push
pop
nop
das
mov
sbbb
jmp
adc
pop
repnz
push
push
sbb
mov
aad
cmp
test
idivl
icebp
fucomp
outsb
add
inc
testl
mov
mov
andnps
xlat
leave
xor
daa
adc
push
inc
adc
xchg
cmp
inc
scas
cltd
fistps
mov
jo
jle
call
mov
adc
dec
jle
cmp
scas
orb
and
pop
mov
lret
xchg
movsl
aam
cmp
imul
inc
adc
sub
lea
or
mov
push
and
daa
pushl
mov
push
push
cli
pop
rcr
mov
repz
test
out
mov
add
adc
sbbb
sub
cwtl
jmp
mov
dec
stc
pop
shll
mov
jne
out
inc
rcrl
mov
out
mov
mov
jg
add
add
cwtl
pushf
cltd
subl
stos
add
push
mov
cli
and
es
fwait
sbb
add
sbb
xchg
jo
xor
or
decb
push
mov
sbb
dec
and
incl
sbb
xchg
xor
lret
hlt
xlat
sbb
adc
and
sahf
in
sar
cmp
xchg
sbb
test
jg
std
mov
test
movsb
xor
fistpl
push
into
push
movsb
cmp
pop
sub
ja
shl
or
fsubl
pop
cmp
repz
push
sahf
adc
mov
aam
test
cltd
push
jb
push
test
rorl
lret
hlt
ss
in
inc
ds
outsb
jbe
testb
xchg
or
and
mov
cmp
push
adc
xchg
hlt
xor
lea
jge
adc
lock
repz
repz
inc
sbb
adc
push
in
rcr
ret
fisubs
pushf
inc
imul
xchg
sahf
push
xchg
dec
cs
shll
das
fsub
idivb
aaa
jmp
push
jg
adc
xor
pop
mov
sbb
sub
push
addb
inc
cmpsl
push
push
lea
inc
test
scas
xchg
sub
int3
fmull
mov
test
mov
je
lods
push
icebp
xchg
mov
jp
sbb
or
neg
mov
out
jl
fs
stc
testb
jl
scas
xor
inc
dec
fstl
inc
das
js
shrb
bound
jae
test
pop
mov
mov
faddl
mov
sbb
cmp
int
std
aaa
scas
insl
mov
or
in
lret
imul
mov
cmp
iret
mov
test
out
cmc
orb
jbe
ljmp
and
idiv
loope
sub
cltd
out
repz
test
test
xor
dec
imul
popf
sbb
in
jle
ja
jbe
roll
push
mov
sub
and
lock
cwtl
lods
les
fsubr
adc
xchg
arpl
in
hlt
outsl
popf
sub
dec
rclb
mov
ret
jae
mov
add
cmc
sbb
jae
add
sub
cmc
xor
inc
jnp
pop
xchg
mov
test
js
movhps
cmp
mov
sbb
mov
pop
lret
popa
mov
mov
test
xor
mov
push
sub
data16
or
in
mov
mov
and
sub
insb
ds
pop
das
loope
xor
insl
cmpsl
lret
dec
sub
iret
adc
in
jl
lahf
inc
push
mov
xchg
adc
mov
loop
pop
dec
xchg
sbb
mov
jp
cli
sbb
or
out
jle
lock
js
adc
cli
repz
push
xchg
bound
sbb
lret
or
xchg
jp
adc
push
xchg
cli
xor
jle
xchg
sbbb
mov
sub
push
jg
push
sub
or
fimull
mov
pushf
leave
dec
pusha
pop
cmpsl
dec
push
push
jb
jmp
push
ss
pop
mov
mov
lahf
add
cmp
popa
push
adc
mov
scas
xchg
scas
rcll
clc
jge
out
push
cmp
ja
lcall
xchg
in
test
inc
mov
mov
leave
mov
clc
pop
gs
pop
adcl
jbe
rcrb
mov
dec
dec
rclb
pop
xchg
jne
adc
push
sub
pop
add
subb
ret
mov
mov
orb
sti
pop
pusha
lret
pop
test
fiadds
into
rcrl
imulb
stc
dec
push
xchg
fidivrs
lds
stos
lea
jmp
ss
jnp
out
push
divl
jae
push
in
xor
xor
mov
in
mov
jge
and
enter
add
test
adc
nop
mov
mov
inc
stos
test
dec
dec
jle
dec
sahf
sub
clc
in
inc
jb
sysexit
out
hlt
jo
shr
int
sub
cmp
ret
mov
bound
out
dec
jo
lods
mov
rorb
xchg
addb
jl
loope
in
pop
clc
mov
push
adc
mulb
inc
push
push
cli
ja
cmp
cld
adc
and
cmp
and
mov
adc
inc
pop
dec
mov
int3
xor
arpl
dec
outsl
mov
lahf
mov
inc
mov
mov
push
xor
pop
adc
xchg
fwait
cmpsb
push
movsl
in
in
popa
mov
dec
xor
stos
and
adc
imul
int
add
psraw
fwait
icebp
clc
test
fdiv
inc
mov
adc
cmpsl
fs
jecxz
lods
mov
shlb
push
xor
stos
jmp
pop
das
sub
mov
mov
and
lock
idivl
adc
adc
pop
lcall
pop
pop
push
data16
insl
in
test
mov
jg
mov
popa
out
aaa
jo
add
mov
ja
adc
bound
adc
scas
fsubrs
mov
rolb
out
push
in
pop
daa
insl
mov
xor
rcll
inc
xor
cmpsb
mov
jb
ds
push
pop
and
cmpsb
or
outsl
fisubl
iret
xchg
mov
fidivrl
cmp
hlt
ljmp
cmp
out
mov
sbb
pop
sbb
push
and
sbb
cmp
xor
mov
dec
popa
aaa
lods
add
in
dec
test
jbe
xor
jmp
and
add
xchg
xor
iret
mov
inc
mov
push
cmpsb
leave
movsl
and
addl
stos
rolb
pop
xchg
ds
sbb
or
xorl
ja
and
sbb
into
aas
mov
imull
cmp
mov
iret
mov
lods
sbb
adc
sub
cmpsl
mov
sub
mov
fadd
cwtl
in
shl
dec
mov
js
or
jo
or
hlt
or
lds
dec
mov
call
lret
gs
dec
cmpsb
xchg
insl
jnp
push
jne
xor
cld
stos
ljmp
call
push
or
cmp
or
add
enter
cmp
js
pop
loop
imul
sub
mov
outsl
dec
in
gs
int
in
loop
daa
ljmp
cld
fwait
nop
cmpsl
add
pop
aas
xlat
push
sti
jle
xor
mov
fdivl
ds
mov
dec
mov
fsubrs
in
andl
addps
jbe
cli
aaa
fadds
in
inc
push
jg
cmp
das
sub
nop
xorl
xchg
ret
andl
pusha
sbb
or
add
cli
mov
ret
mov
sub
data16
pop
mov
pop
adc
xor
push
out
jg
push
lods
push
cmc
stos
outsb
insl
movsl
cli
repz
inc
daa
lods
in
or
cltd
fwait
sub
sub
aaa
das
push
sub
mov
std
sbb
fsubrl
inc
xchg
das
lea
cmc
mov
data16
es
add
inc
mov
mov
mov
cmp
aas
mull
xor
xchg
addb
cmp
cmp
jno
pop
mov
push
jbe
mov
lcall
dec
call
loop
mov
inc
cwtl
hlt
fs
ror
ljmp
sub
and
dec
pop
sbb
fsubs
daa
xchg
xchg
mov
dec
and
cli
dec
jnp
stos
sub
movsb
cli
jmp
pushf
pop
jnp
cmc
ret
enter
mov
cwtl
mov
jne
xchg
xchg
xor
jno
xor
dec
clc
ret
pop
out
fdivs
lods
das
in
mov
in
and
pusha
add
das
lods
jno
aaa
mov
dec
xchg
out
int3
fsubl
push
sub
mov
pop
out
pop
cmp
sub
fs
sub
iret
pop
lock
or
clc
imul
clc
lahf
loop
pop
jnp
dec
adc
cs
lods
incb
inc
adc
xor
push
jns
mov
xchg
xor
inc
jmp
sbb
data16
sbb
mov
lret
ja
ficoms
stc
adc
mov
xchg
inc
jns
ja
push
out
mov
notb
lahf
stos
xchg
pusha
inc
in
push
add
push
lahf
xor
fisubl
imul
jno
and
pop
and
inc
mov
in
mov
or
push
xchg
mov
inc
and
inc
jnp
or
push
jp
push
cmp
lret
jnp
shl
insb
divb
and
cmp
hlt
inc
xlat
paddusb
repz
adc
jl
hlt
push
fdivrl
jo
imul
dec
scas
stos
sar
xchg
les
mov
pop
in
mov
pop
cmp
js
inc
and
call
repnz
dec
jecxz
scas
add
xor
push
in
aam
in
adc
jne
in
in
mov
xchg
movsl
jae
cmpsb
push
mov
xlat
inc
int
out
push
add
sbb
subl
cld
leave
xchg
repz
jmp
cmp
add
mov
and
in
stos
outsl
fimull
call
mov
inc
and
adc
sbb
cli
or
pop
cmp
dec
jp
idivb
mov
clc
add
adc
outsb
and
sbb
shrb
mov
sbb
jnp
and
mov
add
pop
lods
jl
mov
mov
adc
jmp
rorb
cmp
repnz
test
loop
or
sub
inc
push
jns
push
fs
and
popf
add
mov
movsl
dec
popa
and
lret
and
cwtl
filds
fstpl
scas
mov
cmpsb
daa
lea
push
jecxz
sbb
and
push
fnsave
stos
dec
mov
notl
pop
out
pop
and
bound
adc
mov
or
fcoms
push
imul
fs
call
cltd
add
rorb
dec
or
data16
hlt
lret
inc
push
fsubl
daa
adc
pop
mov
cmp
ljmp
adc
std
out
mov
xor
es
dec
mov
jns
sub
mov
push
jae
lods
sub
push
mov
insb
lods
sbb
ljmp
loop
ss
jp
sbb
mov
or
outsl
shlb
in
push
xor
dec
fsubr
xor
push
jnp
adc
fistps
mov
movsb
aam
mov
mov
scas
pop
dec
in
inc
adc
xchg
subb
cmp
insl
lock
mov
xchg
sbb
mov
arpl
fcomi
fdivl
add
fisubs
in
sbb
pop
imul
add
fcompl
mov
lods
fwait
pusha
out
insb
cwtl
add
mov
sub
outsb
pop
or
movaps
scas
lcall
out
movq
add
sahf
sub
mov
sahf
jo
or
mov
cld
jmp
lods
lahf
fs
mov
xchg
xchg
into
mov
xchg
and
jb
mov
xlat
push
fdivrs
pusha
loope,pn
dec
pop
lds
add
dec
push
outsl
imul
or
pop
sub
cmp
repnz
mov
jle
xor
subl
cmc
adc
movsb
mov
and
setno
ja
jnp
or
push
mov
cmp
mov
xchg
sbb
shrb
mov
ja
xor
jo
lods
int3
or
xchg
cmc
mov
arpl
pop
pop
sbb
shrl
insl
movsl
mulw
fidivrs
stc
cmpsl
add
mov
pop
sub
repz
sub
sbb
jns
xor
and
dec
js
mov
cmc
push
outsb
xorb
sub
outsb
mulb
adc
scas
pop
pop
xor
mov
imul
mov
mov
adc
xor
repnz
cmpsl
add
js
into
clc
cs
jl
test
iret
lea
xchg
adc
mov
add
pop
add
cmp
mov
sarb
and
adc
xor
mov
mov
inc
and
nop
mov
and
cmpsl
pop
push
aaa
jo
dec
adc
imul
sub
jno
leave
inc
dec
in
mov
std
push
aaa
mov
mov
or
add
repz
add
and
mov
es
insl
jg
mov
andb
mov
imul
cmp
sti
data16
inc
stos
fs
in
sbb
or
lret
pop
insl
mov
into
sahf
lea
ficoml
fstenv
mov
movsl
lahf
ret
adc
add
push
jns
pushf
loop
int3
or
pop
aam
addb
test
dec
arpl
or
in
outsl
mov
jns
or
fcoml
dec
int3
mov
add
fcmovu
pop
adc
mov
or
mov
arpl
inc
pop
inc
pusha
int3
jb
xor
sub
movsl
xor
lret
ss
sbb
test
push
enter
pop
cmp
inc
jecxz
mov
xor
je
xchg
pcmpeqw
sub
cwtl
fimull
pop
int3
dec
jbe
and
mov
js
jae
std
leave
rcr
pusha
xlat
dec
outsl
adc
ret
push
adc
addl
jecxz
xchg
inc
cmc
xchg
cltd
icebp
rclb
sub
push
mov
adc
cmpsl
fidivrs
aad
jbe
xchg
test
sbb
in
add
or
nop
or
in
cld
mov
pop
mov
pop
xlat
out
popa
outsb
adc
push
pop
shl
and
fsubl
adc
addr16
pop
sub
adc
push
out
and
cli
es
pop
push
cmp
cmc
imul
ficoms
mov
test
jns,pt
lahf
and
mov
test
cmpsl
test
push
push
xor
nop
sub
cmp
mov
cmp
aaa
push
pop
rcrb
sbb
or
lret
inc
jne
mov
dec
in
out
mov
shrb
push
mov
lods
push
jae
repz
cwtl
xor
add
jo
xlat
sbb
mov
cmp
jmp
xor
scas
push
fstpt
scas
repnz
inc
cs
lahf
out
push
imul
bnd
fdivl
mov
scas
push
addr16
xchg
or
xlat
add
mov
movsl
sti
xchg
mov
mov
pop
enter
in
jns
std
cmp
xor
popl
mov
shl
or
pop
xchg
dec
aam
testb
hlt
jmp
lahf
cmp
cmp
dec
dec
cmp
ja
roll
ss
lahf
xchg
out
add
decl
pop
imul
push
lods
aad
ljmp
fistps
inc
das
jno
add
xchg
enter
pop
scas
dec
pop
jne
xchg
lret
clc
lods
jns
dec
push
rcrl
xor
mov
mov
stos
sahf
addr16
push
jno
add
mov
push
jne
cmc
jo
inc
subl
jp
sub
dec
clc
js
shll
repz
add
int
xor
dec
out
add
xchg
ror
test
stos
nop
push
out
jnp
pop
pop
out
xchg
in
popf
stos
mov
push
and
push
jbe
sbb
xor
xchg
rclb
or
lods
push
dec
sbb
sbb
mov
fst
add
mov
cwtl
mov
and
pop
pop
shl
mov
stos
jno
or
std
xlat
mov
push
push
or
mov
out
sar
adc
cs
stc
movsl
sbb
lea
xchg
mov
inc
stos
pop
gs
lret
cltd
jmp
or
lock
arpl
mov
scas
add
cs
in
xor
fmuls
add
mov
jmp
roll
sub
jne
adc
cmp
jo
dec
fidivl
pusha
xchg
xor
dec
sbbl
in
icebp
mov
dec
pop
sub
jmp
int3
add
imul
sbb
add
jp
shrb
adc
sahf
fidivrl
lods
dec
sub
sti
fwait
jae
or
fidivs
loope
pop
jl
xchg
jmp
and
and
sti
repnz
imul
mov
jp
cmp
sub
mov
vxorps
inc
inc
std
cmp
in
sub
dec
mov
xchg
and
pop
ja
push
jl
dec
and
adc
cs
call
decb
sub
cmp
out
push
scas
sub
sbb
and
es
push
cmpl
mov
dec
lahf
mov
sbb
push
insb
or
or
pop
test
or
imul
push
jmp
push
push
aaa
pop
cld
imul
ja
test
cmpsl
adc
mov
rolb
bound
movsl
push
sahf
fs
lahf
hlt
addr16
push
and
inc
pop
cmpsb
cli
cmp
movsl
inc
loope
and
cmpsl
adc
call
imul
pop
stos
cmp
add
xor
xchg
xchg
fucomip
ret
add
pop
jmp
xchg
sbb
loope
call
pushf
push
pop
mov
jg
push
inc
xor
out
sbb
add
fidivrl
add
push
jmp
adc
pop
adcb
hlt
icebp
loope
mov
xor
mov
mov
adc
sub
cmp
hlt
lock
mov
loope
cmp
mov
test
daa
push
imul
ljmp
shl
or
sub
and
cmp
int
gs
lahf
jnp
mov
sub
cltd
adc
adc
int3
push
adc
pop
cmpsl
pusha
mov
xchg
adc
in
lahf
adc
push
push
mov
xchg
or
add
leave
outsb
fdivrl
sub
xorl
xchg
cmp
lret
mov
sub
imul
xor
add
ds
pop
cli
cmp
adc
sub
pop
sarl
jnp
mov
in
aas
xchg
les
dec
xlat
mov
gs
test
add
mov
outsl
clc
inc
jae
cs
stos
aaa
push
ret
pop
mov
or
xchg
stos
or
adc
mov
push
fisubl
pop
and
jle
cmp
jo
stos
ja
mov
jno
mov
mov
or
ret
cmp
lret
mov
push
and
push
pop
pop
in
lret
add
fistpl
jp
test
pop
dec
in
lea
call
lcall
inc
add
scas
mov
test
pop
sub
and
dec
adcb
in
dec
sub
test
fisubrs
int
pop
mov
add
and
mov
test
xor
mov
push
ret
fmull
lods
push
xor
xorl
popf
dec
xchg
mov
mov
mov
test
rcl
lret
imul
adc
mov
and
sub
int3
int
dec
jb
or
and
adcl
out
xor
cmc
negl
cmpsl
sbb
call
outsb
pop
push
or
movsb
xor
insl
outsb
dec
mov
xor
jnp
push
icebp
xor
sub
pushf
sbb
imul
dec
mov
arpl
sbb
adc
mov
int
mov
sbb
addb
cwtl
cmp
add
cmpb
xchg
rcl
jmp
push
or
pusha
leave
push
mov
stos
je
in
sbb
jmp
inc
mov
jne
xor
xchg
fistl
dec
dec
sub
fmuls
aad
fcomps
mov
divb
popf
movsl
adcb
lcall
sbb
gs
popa
sub
push
pusha
push
xor
add
adc
or
arpl
cli
push
gs
xchg
push
inc
push
les
add
sbb
pop
xor
decl
cwtl
ljmp
xor
mov
inc
sub
jle
mov
jle
push
out
in
insb
rorl
pop
loope
push
arpl
inc
and
daa
popl
pop
cmp
fs
sbb
movsb
push
pop
mov
fs
xor
arpl
rolb
add
or
call
inc
ss
pop
test
jmp
adc
mov
jb
sub
mov
mov
test
inc
mov
or
mov
idivb
xlat
cmp
jge
inc
jp
adc
leave
mov
xor
adc
int
outsl
ja
dec
jle
dec
push
shl
cwtl
pop
jno
inc
daa
pop
pop
or
mov
fnstsw
pop
xchg
lea
push
add
jecxz
cmp
imul
mov
or
mov
sbb
fucom
sbb
push
sub
fbld
push
cli
scas
call
mov
cmpsl
xlat
sbbb
adc
pop
out
out
or
fidivrs
jnp
shlb
movsl
add
mov
cwtl
subl
pop
xchg
mov
js
mov
ret
xor
lahf
nop
mov
hlt
orl
pusha
inc
mov
mov
mov
mov
das
push
insl
xor
shl
cmpsl
cmp
cmpsl
xchg
xor
or
aaa
pop
rcrb
mov
dec
mov
clc
push
or
loop
in
ret
sbb
lock
in
int
popa
adc
int3
rorl
adc
dec
lret
ror
mov
sub
lret
cmc
popa
lahf
ret
mov
ficoms
das
lock
mov
test
int3
adc
clc
stos
out
xor
add
ret
je
cmp
fdivs
pop
les
mov
sbb
and
ss
in
testl
xorb
xor
push
mov
cmp
add
mov
ljmp
lods
mov
jge
add
mov
adc
xor
fwait
and
dec
decl
stos
xor
and
cmp
add
xchg
es
addb
nop
mov
push
xchg
adc
aam
xchg
sarl
mov
fstp
cld
sub
jnp
sbbb
icebp
sub
pop
pop
cmp
cmp
pushf
adc
inc
jnp
lahf
aaa
test
jg
in
and
mov
imul
imul
mov
data16
sbb
sub
push
popa
ds
mov
mov
subb
movsb
mov
imul
cmpsb
push
rcll
xchg
push
mov
sbb
dec
mov
in
aam
or
mov
fwait
lods
add
je
shlb
outsb
xchg
repnz
rorl
mov
test
xchg
pushf
sub
jae
dec
dec
adc
jbe
mov
test
add
push
sbbb
cwtl
add
xor
or
jno
xchg
xchg
push
shrl
mov
lret
cmp
sub
inc
dec
or
aas
sbb
mov
and
test
cltd
loop
mov
xor
or
jg
xor
icebp
sbbl
mov
repz
mov
test
jnp
mov
orb
cld
cmpsl
insb
xchg
xor
mov
cmp
push
das
xor
out
mov
icebp
pop
jecxz
cltd
or
roll
lock
into
pop
xchg
cmpsb
int3
sar
pop
pop
adc
fwait
ret
jne
repz
cmp
xchg
push
pop
dec
dec
mov
cmp
inc
bound
dec
add
sub
jmp
mov
out
mov
push
in
in
cmp
and
les
les
stos
popf
sub
adc
stc
iret
sbb
shr
loop
out
fldl
gs
or
mov
addr16
mov
fisttpll
sub
call
hlt
mov
xor
je
nop
jb
scas
push
xor
ja
sub
add
std
sub
add
sarb
sub
in
pushf
cmp
cld
ja
adc
lods
fwait
test
loopne
scas
daa
cmp
sarl
xor
lock
loope
cmpl
sub
sbb
fsubl
es
adc
enter
sub
rolb
jge
cmp
lods
cwtl
dec
data16
jl
pop
out
loopne
sahf
cmp
sub
jnp
jno
mov
sbb
imul
sbbl
mov
fnstcw
scas
mov
push
testl
call
add
mov
jnp
xlat
in
jnp
out
daa
mov
cs
sbb
movsl
cmpsl
insb
imulb
mov
push
fnstenv
sub
inc
leave
aaa
mov
hlt
add
sbbl
pop
jmp
cmp
rcrb
xor
stos
mov
adc
sbb
inc
add
and
xchg
je
jge
sbb
mov
aas
int3
stc
sub
mov
mov
pop
rorb
jecxz
pushf
out
pop
push
inc
ret
mov
xor
in
aam
je
jbe
jnp
adc
and
sbb
aad
enter
ret
lods
cmp
adcl
mov
test
cmp
xor
in
loop
ljmp
movsb
nop
inc
shl
pushf
inc
out
adcb
mov
dec
inc
inc
es
push
and
inc
repz
lret
inc
or
je
xchg
lret
xchg
ljmp
jo
cmp
lcall
outsl
jmp
mov
int
test
sbb
push
or
ficoms
lcall
hlt
call
mul
xchg
mov
xchg
fdivrs
out
iret
bound
sub
repz
fstl
cmp
add
ss
sbb
test
pop
xchg
inc
frstor
inc
sbb
in
out
and
or
dec
sub
jecxz
and
cmp
mov
in
testb
mov
pushf
cwtl
push
jnp
insl
pop
pop
mov
pop
xchg
pop
add
iret
ja
bound
mov
mov
cwtl
mov
outsl
dec
lret
xor
add
pushf
mov
xlat
es
sbb
lods
int3
fldl
js
pop
or
out
imul
and
rclb
mov
mov
add
movsl
cmp
cltd
test
or
mov
xchg
fistpl
lods
incl
lahf
mov
mov
mov
or
xchg
fdivs
fdivr
pushf
cmp
mov
and
cmp
fidivs
jge
negl
push
mov
xor
and
xor
xor
int
inc
push
jle
cmp
adc
xchg
imull
cmc
stos
loop
repnz
nop
lods
lods
ljmp
adc
ljmp
pop
mov
sbb
xor
mov
pop
and
jecxz
fwait
loop
addr16
push
cli
out
mov
ss
pusha
in
ret
mov
adc
adc
ret
pop
fildll
shlb
mov
movsb
rcrl
jne
inc
xchg
cld
js
push
pop
idivb
dec
sub
push
add
out
dec
fcomps
das
sbb
xor
ficompl
jmp
in
inc
roll
sbb
and
les
jb
mov
or
adc
mov
lret
fsubs
mov
inc
sub
push
aad
sbbl
int3
test
mov
dec
or
stc
jns
add
stc
loopne
dec
fisubs
aam
popf
mov
or
and
and
mov
dec
addb
sbb
push
pusha
inc
or
inc
pop
cmc
dec
addl
loopne
jno
imul
xor
inc
mov
cltd
dec
mov
int
rorb
and
cmpsb
xor
dec
push
ss
dec
jno
loop
inc
ja
xchg
cmp
call
ss
jge
jmp
sbb
cmc
stos
xchg
imul
mov
lds
cmpsl
and
das
shrb
ret
pop
jno
div
data16
sub
movsb
mov
dec
push
xor
stc
cmp
out
dec
aam
sub
inc
dec
push
popf
cs
push
cmp
es
mov
jp
and
jns
js
test
xchg
repz
pop
repnz
rcrl
xchg
pop
push
jne
pushf
jl
leave
jae
cwtl
mov
mov
and
gs
xchg
mov
inc
jne
xor
push
and
aas
sbb
pop
subb
scas
pop
pop
mov
loope
mov
dec
sub
idiv
xor
into
push
pop
xchg
imul
fisttps
jp
xchg
and
cwtl
std
adc
js
sbb
lret
push
jns
xor
flds
push
xlat
or
mov
xchg
stos
xor
js
jecxz
inc
aad
inc
dec
jnp
stos
movsb
lret
inc
mov
cli
pop
mov
xchg
mov
cltd
es
add
inc
loope
nop
xor
cmp
aam
loope
ficomps
test
pop
adc
xchg
test
ret
mov
hlt
mov
push
cmp
or
insb
scas
in
insb
inc
mov
ss
adc
sbb
mov
aas
data16
cwtl
imul
lret
dec
pop
adc
push
les
pop
sbb
repz
push
ret
scas
divb
fiaddl
and
mov
jae
ret
test
pop
js
xor
inc
test
dec
dec
sbb
mov
mov
dec
out
jbe
aaa
mov
scas
imul
cld
mov
pushl
or
mov
fcmovu
mov
adc
cmp
mov
sub
inc
pop
pushf
popa
mov
and
out
cmpsl
jae
mov
mov
sbb
push
inc
jb
es
jno
scas
test
or
cltd
add
cmp
add
xor
popf
pop
in
stc
out
addr16
das
mov
ss
xchg
fnstcw
push
shll
pop
push
das
dec
stos
sub
adc
pop
mov
jecxz
mov
dec
sbb
pop
xor
xchg
aad
pop
jl
jns
push
add
xor
adc
sbb
jbe
cmp
gs
adc
lods
mov
shlb
pop
mov
negb
xchg
aad
mov
fmull
test
fwait
ror
loop
xchg
ds
inc
repz
or
mov
adc
addb
aas
pusha
cmpsb
jno
stos
xchg
leave
or
xchg
je
dec
fwait
sbb
incl
inc
sahf
sub
lret
mov
jno
aam
data16
je
shl
cmp
xchg
out
mov
jbe
sahf
popf
push
arpl
mov
pop
nop
out
fstps
icebp
inc
inc
out
in
outsb
pop
das
jne
inc
insb
fidivrl
movsb
jmp
and
punpckhwd
pop
mov
rolb
movsl
not
sti
stos
loope
mov
les
roll
xchg
dec
fs
xorl
stos
test
cmp
loope
and
xchg
test
pop
mov
mov
outsb
push
push
idivl
jge
jg
std
call
adc
adc
gs
cli
sub
cmp
and
mov
fistl
mov
pop
daa
popl
cld
push
mov
je
sub
sub
pop
fcomps
xor
or
inc
mov
fstps
sarl
lods
mov
out
xchg
jne
xor
xor
mov
test
test
or
lds
push
and
imul
int
adc
out
sbb
cmp
cmp
mov
jmp
dec
mov
xchg
cld
pop
call
mov
orps
adc
shll
dec
insl
insb
hlt
cmp
xchg
scas
fwait
imul
xchg
mov
fildl
orb
and
mov
out
cmp
xor
bound
icebp
push
sub
dec
mov
iret
hlt
lea
in
jg
mov
daa
add
imul
push
adc
lcall
add
push
inc
lcall
in
test
push
dec
pop
fnstcw
lret
or
mov
adc
xchg
fs
arpl
ficompl
roll
stos
or
jl
xchg
dec
lods
sti
into
xchg
jae
mul
hlt
sub
mov
sbb
mov
and
out
pop
mov
cwtl
cli
in
dec
pop
sub
lods
mov
push
jmp
mov
int3
jb
dec
push
mov
add
insl
insb
dec
mov
push
lods
jnp
movsl
stc
in
xchg
ret
outsb
mov
rcrb
add
mov
in
inc
pop
icebp
int3
test
out
jp
lea
orl
sbbl
or
push
xchg
stc
je
and
int
dec
and
mov
call
aad
int3
pop
testb
sbb
xor
dec
xchg
outsb
orb
imul
mov
call
sbb
dec
push
mov
adcl
xchg
mov
push
ss
xchg
xor
inc
icebp
shlb
push
sub
lcall
mov
push
push
clc
out
lds
pop
pop
push
adc
fldcw
aam
add
and
in
push
add
adc
roll
outsb
jo
shlb
dec
push
mov
xchg
fisubl
shl
mov
sbb
rcl
xchg
and
xor
push
or
mov
fwait
lret
lock
xchg
xlat
dec
adc
adc
hlt
xchg
xchg
sub
iret
ficoms
dec
js
in
xor
daa
or
push
test
lcall
incb
push
in
sub
lock
sub
test
push
jns
push
sub
das
adc
jae
xchg
jo
xor
je
ds
arpl
add
add
sub
es
loop
mov
add
imul
cltd
testl
mov
sbb
cli
lcall
xor
enter
aaa
cmpl
loopne
mov
push
stos
cmp
outsb
jle
leave
inc
pushf
cmpsl
inc
imul
adc
test
sub
xor
das
icebp
mov
xor
sti
aam
sbb
adc
fs
inc
xor
xor
inc
fstps
cli
inc
or
insl
cmp
xchg
dec
push
ret
add
mov
xchg
add
jae
arpl
fdivr
loopne
adcl
mov
mov
pop
popa
jne
icebp
pop
outsl
or
sar
adc
adc
aad
xchg
in
addr16
pop
out
xlat
jne
fisttpll
std
xchg
rorb
ja
sbb
pop
rcrl
xchg
dec
or
gs
clc
fldt
cmpsb
mov
xchg
lock
jle
and
out
sar
mov
data16
cmpsl
cmpsl
test
movsl
clc
rclb
inc
shl
mov
daa
mov
cwtl
mov
pop
mov
dec
enter
ret
ja
sbb
xchg
and
push
or
les
and
mov
nop
adc
push
out
fidivl
popf
jecxz
or
mov
push
fwait
cmc
xor
cmp
adc
push
xchg
test
sahf
inc
pop
jecxz
mov
jl
ss
mov
out
jecxz
lcall
subb
pop
push
hlt
movsl
sbb
movups
mov
les
push
inc
dec
sbb
sub
sti
pop
imul
ss
cmp
scas
data16
inc
dec
adc
jnp
ljmp
cmc
add
div
out
inc
adc
leave
push
xchg
test
xchg
jg
int
inc
pop
bound
mov
xor
inc
or
cmp
and
imul
loopne
enter
push
mov
movsb
sub
pusha
push
pop
loopne
xchg
or
jnp
sbb
fildll
mov
sub
or
or
fstp
fidivs
xor
stc
xchg
sub
lret
and
mov
jmp
or
xchg
cmp
add
pop
cmp
xchg
pop
and
mov
dec
ficompl
sbb
xchg
hlt
pop
lock
or
xchg
and
addl
cs
shlb
cmp
fs
cmp
pop
pusha
dec
xchg
mov
jbe
cltd
and
dec
pop
nop
mov
pop
js
xor
dec
lods
popa
dec
sbbl
fimull
add
cld
movsb
clc
repz
inc
add
mov
add
sahf
mov
adc
orb
daa
in
mov
pop
clc
iret
incb
mov
or
or
hlt
mov
mov
mov
mov
mov
test
dec
enter
cmp
dec
add
lahf
in
stos
wrmsr
inc
dec
xor
push
bound
test
xor
mov
psubusw
lods
popa
cmp
outsl
cmc
inc
mov
imul
jnp
inc
outsb
jge
mov
mov
loop
icebp
inc
sub
pop
outsl
xchg
inc
jo
inc
pop
movsb
orb
lock
mov
inc
xor
sbb
stos
push
movsb
lret
imul
fisubrs
movsb
xchg
push
int
xchg
rcrb
incl
ret
mov
mov
inc
pop
cmc
xchg
repz
push
dec
cmp
mov
mov
scas
fwait
pusha
out
fiadds
lock
out
sbb
sbb
popa
lea
pusha
lock
cmp
cwtl
in
or
and
pop
iret
mov
sahf
adc
insb
out
int
sbb
sti
gs
push
sub
jno
fistps
stos
addr16
add
push
and
mov
mov
or
dec
push
and
mov
test
insb
mov
aaa
xchg
cmp
and
loop
push
jge
push
jge
push
adc
pop
mov
ljmp
cmp
test
shrl
shl
insl
pop
xor
stos
sbb
addl
inc
jle
cmpsb
xor
daa
fsubrp
mov
adc
and
scas
push
cmpb
xor
mov
das
jbe
out
sub
jb
js
jbe
jnp
fistps
ljmp
pushf
std
inc
in
pusha
test
icebp
push
mov
test
jo
mov
xchg
inc
div
stos
mov
aad
or
rorl
push
jge
xor
dec
sbb
mov
mov
and
pop
xchg
lret
enter
mov
test
xchg
int3
inc
mov
mov
inc
xchg
repz
sbb
inc
adc
fcoms
sub
push
sahf
cmc
lock
shl
pushl
mov
leave
push
cmpsl
shrb
sub
in
and
xchg
clc
pop
jecxz
test
mov
sub
add
lcall
mov
push
cmp
ja
sub
push
rcll
and
mov
dec
int
jnp,pn
mov
push
and
mov
enter
push
xlat
lods
lock
add
ret
aam
and
mov
ret
xor
hlt
je
and
push
shll
mov
idivb
sbbb
mov
sbb
and
jmp
icebp
lea
lret
sub
jl
decb
mov
call
cli
jns
pop
imul
clc
pop
arpl
insl
push
mov
cmpsb
mov
adc
cmp
sub
push
or
inc
divl
mov
cli
jge
lret
or
aaa
outsb
cmp
imul
mov
mul
ret
mov
pop
push
daa
xor
pop
lods
mov
adc
in
sub
xchg
ret
push
inc
push
in
mov
fidivrl
push
cmp
lds
push
scas
fsubl
fnstenv
fisttps
jnp
bswap
sub
lods
loope
mov
lods
pop
aam
adc
cltd
mov
loopne
or
ljmp
pusha
es
inc
dec
jmp
in
cli
sbb
or
sbb
xor
lods
adc
mov
sub
lds
mov
pop
sahf
test
jae
sbb
cmc
mul
sti
and
mov
mov
popa
sti
xlat
adc
daa
loopne
ja
and
pop
sahf
ss
arpl
test
dec
in
push
test
ljmp
les
andl
fsts
xchg
sbb
sub
inc
ret
jecxz
popa
movsb
jp
mov
dec
xor
cmp
xchg
and
movsb
shlb
mov
imul
mov
adc
push
mov
addl
sub
out
xchg
ds
arpl
shlb
jmp
or
sbb
call
sub
push
cmc
xchg
push
scas
popf
out
dec
sahf
pop
pop
test
orb
or
xor
sbb
aam
dec
or
fmull
test
mov
lahf
movsb
inc
lret
lret
push
cwtl
mov
inc
mov
or
push
and
push
inc
dec
ljmp
push
pop
sbb
adc
add
test
addr16
std
pop
cmp
cmpsl
or
mov
xchg
push
adc
subl
sbb
adc
lcall
pop
jns
sub
jae
dec
adc
test
xor
nop
cmpb
fists
cmp
loope
bound
repnz
mov
push
pop
mov
sub
mov
jle
test
inc
xor
inc
add
mov
flds
aaa
dec
push
ds
pushf
jne
dec
std
sbb
stos
mov
dec
andb
sub
inc
ljmp
out
test
mov
test
mov
adc
test
cmpsb
push
lods
inc
pop
les
jne
xor
ds
notb
lret
mov
into
test
push
sub
xchg
inc
xlat
inc
sti
mov
out
aam
into
jg
cmp
out
adc
jecxz
push
inc
movb
jae
lods
push
mov
fwait
out
out
cmpsb
mov
clc
es
or
mov
or
push
cmpsl
mov
jle
mov
or
out
cmp
or
repnz
or
or
out
mov
sbb
add
add
adc
jb
and
es
shrb
adc
sbb
xchg
adc
cmp
int3
jmp
outsl
shr
cli
data16
xor
mov
shrb
jbe
cmp
cli
xchg
pop
cli
cmpsb
push
mov
jno
push
dec
lea
stc
mov
pop
stos
and
pop
adc
int
sub
test
or
js
scas
mov
fsubs
push
xor
mov
stc
push
es
mov
popa
jp
sbb
sbbb
push
jge
xor
ret
xchg
pop
xchg
fsubrs
sub
out
xor
mov
bswap
daa
mov
pop
pop
cmp
add
inc
nop
xor
push
inc
aam
push
aas
cmp
ljmp
inc
les
push
sub
incl
and
mov
rcrb
jbe
lret
mov
add
mov
nop
cmp
push
into
xchg
adc
jp
jmp
push
jmp
xor
sbb
pop
aam
and
arpl
or
jl
lods
fdivrl
gs
xor
inc
in
or
push
cmp
push
lods
dec
out
jp
mov
add
adc
shr
jb
sub
test
xor
add
jo
push
out
std
decl
mov
mov
sub
test
push
sub
in
out
in
in
addr16
aaa
jbe
dec
scas
imul
cmp
mov
jp
xor
sub
jge
sub
lret
mov
xchg
test
sbb
outsb
lods
stc
mov
sti
lcall
stos
pop
xor
fimull
sbb
sub
lock
mov
fnsave
into
enter
sbb
mov
mov
das
inc
out
push
mov
and
cwtl
jl
bound
dec
mov
fs
add
add
and
addr16
mov
pop
bound
or
lea
fiaddl
mov
jmp
pop
test
xlat
rcl
xor
jo
daa
ja
nop
subl
jmp
inc
jg
rorl
push
inc
adc
xchg
sub
sub
jge
into
jp
stos
push
les
repz
and
aad
adc
insb
sahf
xor
mov
push
add
fsubrl
test
push
fxch
push
push
or
push
sbb
or
cmc
and
dec
lret
mov
add
inc
xchg
add
dec
adc
jb
in
dec
mov
inc
xor
lret
and
into
add
adc
cmp
sbb
jl
cmpsb
inc
pop
stos
das
jnp
mov
clc
and
in
jne
fwait
mov
adc
cmp
push
dec
imul
pop
mov
popf
adc
es
adc
add
inc
leave
faddl
add
push
jmp
mov
fbld
sub
xor
rorb
lea
test
xor
mov
arpl
out
cld
mov
pop
xor
mov
call
dec
cwtl
or
fisubrl
dec
xchg
gs
mov
pop
out
enter
jbe
movsl
and
addb
pop
jle
xchg
insl
cmp
push
jb
or
outsl
dec
mov
mov
test
iret
pop
xchg
or
rcrb
dec
dec
cmpsb
shrb
test
jmp
mov
stos
pop
xchg
in
mov
mov
hlt
lahf
les
in
arpl
mov
out
cld
sbbb
mov
dec
mov
lret
cmp
ret
mov
sbb
cmp
adc
cmpsl
mov
xor
mov
insb
fucomp
inc
xor
test
shll
rclb
test
adc
sbb
hlt
ds
inc
sbb
jae
subb
and
aad
xor
sub
in
add
inc
div
aaa
mov
pop
cli
in
xchg
dec
data16
sbb
fiaddl
mov
loopne
mov
xchg
rcrl
test
nop
cli
test
call
and
pop
outsb
insb
jecxz
add
daa
clc
mov
out
mov
popf
mov
sub
mov
xchg
je
aas
lods
test
nop
sar
jg,pn
lret
inc
dec
jecxz
shlb
add
mov
or
dec
loop
arpl
mov
or
fildll
stc
cmp
aam
outsl
dec
mov
pop
cmp
aas
mov
flds
fwait
les
or
out
xlat
mov
fsubrl
lret
orb
stos
les
mov
ss
fscale
pop
gs
mov
mov
lea
push
push
sub
loopne
insb
shrl
xchg
xor
fldcw
clc
adc
push
and
mov
mov
scas
cmpsl
popa
jno
fidivrl
movsb
inc
inc
imul
add
popf
inc
call
cli
call
pop
xchg
cld
pop
jmp
or
popf
sahf
inc
jb
jge
xchg
aad
daa
hlt
and
jl
xchg
add
sbb
and
das
outsl
imul
repnz
sarl
in
inc
int3
or
jp
xor
loope
test
dec
sub
adc
xlat
mov
sbb
arpl
lods
loopne
xchg
xlat
lock
mov
mov
mov
mov
fnstsw
cmp
adc
cld
inc
and
mov
push
mov
sahf
lret
push
pop
mov
inc
or
decl
out
xchg
xchg
ror
stc
pop
stos
insb
push
push
scas
xor
fwait
stc
and
das
xor
out
mov
stos
jg
in
das
cli
inc
dec
sahf
and
adc
xor
fs
in
pushf
in
jmp
std
jne
mov
shrl
push
mov
xor
cwtl
sub
mov
fisttps
xchg
xchg
outsl
or
in
push
push
insb
jbe
jno
jno
mov
push
and
cmp
push
insb
leave
cli
pop
jecxz
sub
scas
or
jbe
fcomi
cld
push
subb
adc
cmp
outsb
push
cli
cld
bnd
sbb
mov
push
or
push
push
mov
cs
jecxz
in
mov
test
pop
fildl
adc
out
mov
pushf
jge
fs
or
testb
sbb
xchg
movsb
dec
pop
or
push
add
xchg
pop
xor
xchg
mov
movsl
xchg
shlb
pop
mov
sbb
pop
cli
inc
enter
and
daa
cld
lcall
pop
in
and
clc
mov
mov
lds
mov
jae
repnz
fcomi
arpl
icebp
movsl
imul
dec
dec
jae
das
pop
lods
push
jecxz
sub
mov
stos
inc
shl
scas
xchg
scas
inc
add
mov
rcrl
pop
mov
cmp
outsb
add
sar
xor
or
or
mov
xchg
sub
or
mov
jl
adc
or
mov
mov
daa
mov
mov
mov
pop
and
subl
sbb
loopne
sbb
xor
popf
sbb
mov
aam
add
adc
insl
mov
hlt
push
subb
stos
push
scas
adc
test
xor
cmp
adc
dec
test
cmp
aam
in
sub
or
push
out
jl
add
scas
inc
jo
sub
pop
mov
sti
pop
loopne
repz
insb
sbb
loope
mov
inc
ljmp
jge
scas
out
es
ficoml
outsb
inc
xchg
cmpsl
jecxz
gs
push
xchg
in
mov
test
mov
dec
out
popa
ss
and
mov
mov
lcall
push
gs
dec
mov
imul
test
push
or
inc
cmp
sub
mov
xchg
sub
ds
mov
xchg
push
sub
notl
xchg
shrl
xchg
push
sbb
mov
cs
dec
sbb
add
movsb
stc
push
mov
std
sahf
rcll
fldl
pusha
test
jmp
lds
jp
addr16
jb
lods
test
lods
jge
dec
or
lods
cmp
sti
push
dec
jmp
loopne
mov
or
cmp
xchg
push
movsl
gs
cltd
int
push
aam
and
or
xchg
push
pop
into
jmp
ss
in
ds
jge
movsl
or
addr16
out
cmp
mov
mov
inc
mov
stos
push
aas
jge
push
push
push
lods
sbb
add
leave
bound
mov
push
inc
pop
sub
rcr
sub
iret
movsb
sbb
lret
fcomps
pop
inc
cmp
jno
rcl
daa
mov
adc
jne
ljmp
filds
in
jp
outsb
add
adc
inc
sti
mov
in
adc
mov
std
jb
ljmp
je
sub
aad
mov
cmp
pop
out
call
lret
insb
dec
mov
inc
sbb
mov
jp
xchg
ja
mov
push
mov
add
pop
inc
cli
pusha
jbe
pop
xor
mov
xlat
lds
mov
sub
jb
es
popa
or
or
int
pop
sti
test
fcmovnu
pop
dec
push
cli
lret
ljmp
push
xchg
xor
sub
in
stos
jbe
or
pop
test
mov
cwtl
outsb
pusha
sub
jp
in
loopne
xchg
insl
in
lock
jle
dec
inc
xchg
stos
icebp
cmp
mov
xor
or
mov
pop
xor
or
icebp
mov
mov
add
push
loopne
movsl
clc
xchg
ss
leave
fs
pop
enter
fs
mov
out
lret
mov
xor
jo
insb
ds
negb
xor
mov
pop
lea
mov
cmc
lods
jmp
lock
mov
jo
push
adc
jae
imul
mov
into
repz
cli
dec
xchg
pop
test
nop
jns
data16
push
es
add
push
mov
cmpsb
mov
mov
and
mov
xchg
jp
jns
scas
mov
pop
mov
rcll
fisttps
sahf
pop
push
xor
pop
jmp
pop
add
push
push
jnp
dec
test
ror
pop
mov
out
pop
xlat
cwtl
add
adc
es
xchg
shl
pop
cmpb
pop
and
ror
insl
cmc
mov
cmp
sbb
jo
ljmp
repnz
push
ss
sbb
ret
cmp
cwtl
jmp
shrb
loope
out
mov
and
and
fbstp
mov
pop
cmp
outsb
fstpt
mov
aaa
enter
div
inc
outsl
bound
loop
sbb
jb
cld
mov
add
lret
cmp
xor
sbb
cs
mov
xchg
call
mov
inc
fdivrl
dec
outsl
jl
xlat
out
sub
adc
imul
mov
popa
mov
lahf
push
push
je
mov
inc
shll
enter
xchg
faddl
sub
repnz
stos
int3
xor
add
and
push
xor
mov
out
je
xchg
in
pop
lods
out
daa
fcoms
push
xor
popf
fwait
adc
push
cmp
adcl
in
pop
movsb
xor
ss
pop
in
sub
mov
adc
stos
fs
or
das
mov
cld
sub
out
and
in
cmp
test
repnz
xchg
xchg
mov
sbb
jno
push
out
push
mov
leave
sub
rolb
and
out
push
outsl
das
add
popf
or
sub
aad
lock
sbb
stc
pop
shlb
jnp
stc
loopne
inc
aam
inc
mov
push
int
bound
sub
aaa
inc
pop
dec
xchg
xlat
push
dec
add
mov
or
fstl
inc
cmc
std
movsl
jge
adc
push
jno
mov
jnp
xor
jp
sbb
push
mov
push
add
addr16
jo
jg
icebp
xlat
fs
cmp
inc
clc
push
stos
or
mov
stos
push
push
rol
mov
inc
sbb
mov
xchg
mov
mov
out
shr
add
scas
in
jmp
or
inc
scas
in
or
jge
addr16
dec
push
movsl
cli
cltd
add
filds
xchg
gs
mov
cmpsb
xlat
inc
fs
in
in
sbb
cmp
ret
or
push
cmp
xchg
fisubs
add
test
xor
adc
dec
loopne
mulb
adc
xchg
clc
sub
or
push
mov
icebp
or
lahf
stc
incl
int
outsb
fcompl
pop
ret
push
push
rcl
mov
fmuls
scas
or
int3
mov
ss
xlat
cmp
repz
mov
dec
fisttps
loope
pop
inc
fstl
test
out
xor
aam
daa
jno
pop
sbb
push
pop
mov
icebp
cmp
and
jo
xchg
call
dec
sbb
loop
dec
and
lcall
and
pop
add
jb
insb
inc
ds
repnz
cs
jne
out
hlt
pop
dec
push
int3
add
cmp
sub
xchg
sub
cmp
pop
xorl
adc
lret
lcall
daa
out
push
cmpsb
and
ss
push
jg
xlat
or
mov
xlat
out
jno
and
sub
xchg
cmp
sbb
pop
cmpsl
cli
mov
jl
pop
notl
sub
into
push
std
mov
std
lods
fsubrl
les
jmp
repnz
sbb
call
ja
or
jp
nop
xor
dec
movsl
clc
je
fucomip
insl
stos
cmp
aad
int
sbb
ja
adc
mull
iret
movsl
fstpl
cli
lods
orb
dec
repz
or
insl
les
shll
jg
mov
insb
mov
orw
scas
fcomps
data16
or
test
aad
push
sbb
sub
gs
in
inc
dec
fidivs
pop
cmp
es
push
xchg
das
sbb
push
ret
xchg
loope
cltd
lahf
icebp
sub
je
verw
inc
test
or
filds
sahf
mov
ss
in
mov
dec
outsb
fadds
negl
js,pt
orl
mov
je
in
test
dec
cmpsb
sub
pop
scas
sub
mov
adc
insl
rcr
xchg
xor
stc
mov
out
push
lret
add
xor
sub
gs
ret
mov
inc
push
push
dec
sub
add
subb
lret
fs
sbb
lahf
mov
int
push
pop
dec
mov
out
aaa
mov
and
inc
mov
sbb
bt
icebp
aam
mov
push
sbb
push
lcall
lret
ret
push
arpl
mov
dec
jmp
cmp
jo
or
sbb
aaa
dec
xchg
xchg
data16
and
or
mov
mov
mov
loopne
int3
mov
dec
push
lahf
xor
push
lcall
push
idivl
mov
lret
xor
or
lea
push
movsl
loop
adc
or
sbb
fisubl
mov
jg
cmpsb
fisubrl
xchg
je
mov
mov
mov
inc
jl
jo
enter
xchg
mov
mov
test
mov
jge
fisubs
dec
dec
mov
mov
pop
nop
jecxz
fs
mov
divl
mov
test
dec
inc
popf
mov
sbb
push
xchg
add
add
jp
mov
push
rorb
imulb
sbbb
icebp
pop
test
ds
add
call
xchg
jbe
mov
test
cmp
outsb
xchg
cli
int
cltd
aaa
adc
out
cmp
cmc
dec
int
iret
sbb
push
test
mov
stc
add
dec
sti
mov
dec
add
xlat
jno
shll
push
cltd
fildl
cmp
dec
cmp
sub
stos
les
or
mov
aaa
and
sub
adc
mov
and
and
add
sub
fdivrp
lods
lret
fsub
sti
and
cmp
add
xchg
xchg
inc
cmp
mov
mov
or
ljmp
jne
inc
adc
pop
sub
jmp
push
fadd
mov
dec
jne
fistpll
jae
cltd
loop
xor
mov
pop
jp
push
jb
dec
lock
inc
loop
mov
fxch
cmp
xor
std
std
and
test
cmp
mov
push
or
push
cmp
outsl
and
jbe
orl
xchg
or
jno
mov
fimuls
movsl
add
jl
and
jb
scas
jnp
std
xlat
inc
cld
test
int
dec
adc
pop
jnp
neg
jb
xor
in
or
inc
inc
pop
mov
in
xchg
xor
and
ret
inc
push
fcmove
in
frstpm(287
sbb
add
mov
mov
cli
nop
add
or
cmpsl
xchg
js
mov
lods
sbb
cmpsl
push
aad
loop
mov
xchg
cs
ficompl
negb
jmp
adc
or
adc
jbe
dec
fbld
xor
dec
cmp
jne
mov
ffree
dec
inc
or
jmp
dec
jmp
inc
loope
jne
push
dec
push
mov
fisttpll
and
shlb
jp
rcl
xchg
stc
cwtl
jo
add
mov
int
sbb
xchg
shll
and
dec
jge
pop
jbe
pop
lcall
xor
addr16
pop
jle
stc
js
lds
cmp
pushf
sub
sarb
pop
lahf
ljmp
ror
xchg
jo
pop
out
xchg
add
cmp
xor
arpl
in
push
xor
or
inc
mov
test
jmp
xor
inc
mov
or
adc
push
in
cld
jo
cs
stc
dec
cltd
mov
insb
dec
lret
add
into
fcmovne
test
les
arpl
icebp
out
std
movl
pop
rol
mulb
imul
xor
inc
jmp
sbb
pop
insb
xor
stos
adc
inc
cmp
and
inc
shlb
rcll
mov
push
lods
sub
push
loop
xchg
fldt
cld
popf
mov
nop
sub
and
adc
pop
push
bswap
call
lret
or
xchg
xchg
out
jg
sbb
andb
inc
jbe
jne
pop
fdiv
add
movsl
cmpb
xor
mov
in
cmp
iret
pop
fstl
test
dec
jb
pop
xchg
fdivr
push
out
jbe
mov
iret
rolb
cmp
pop
mov
mov
dec
int
aaa
pop
test
mov
adc
fstpl
adc
mov
adc
aaa
jp
sbb
push
popf
ja
fwait
mov
mov
fidivl
xchg
mov
cld
sbb
stc
push
jb
mov
test
rcr
rclb
adc
punpcklbw
pop
in
inc
xor
hlt
sti
xchg
test
cwtl
nop
jge
fstps
mov
into
cmp
in
jl
scas
cmpsb
call
ficompl
inc
aaa
jl
sbb
rorl
das
dec
mov
jp
cltd
into
xchg
pushf
add
roll
sbb
jns
jae
push
nop
rorb
fwait
sbb
pop
imul
dec
idivb
or
cmp
jl
push
loopne
sahf
movsb
mov
cwtl
in
or
and
mov
xchg
aam
sbb
push
test
out
push
insl
mov
xchg
add
into
inc
sarb
rcll
sub
adc
mov
mov
xor
push
enter
xor
mov
jp
dec
push
daa
or
loope
mov
xchg
jns
je
push
adc
pop
lods
jns
or
cld
push
adc
push
mov
int
push
mov
xchg
push
adc
and
jle
mov
pop
jae
push
outsb
lret
push
dec
fs
fstl
nop
gs
jmp
enter
int
cmp
sub
daa
sbb
push
sub
add
stc
dec
cmpsb
call
pop
in
xchg
stc
mov
jne
push
inc
stc
inc
push
jae
shl
dec
add
mov
scas
outsb
cmc
xchg
cmp
mov
or
daa
aam
xchg
push
fildll
push
mov
std
jnp
in
mov
cmp
cmp
cli
das
lret
fistl
int
xchg
push
add
jmp
xchg
outsl
sbb
sahf
mov
or
into
out
xor
int
imul
lcall
xchg
add
jo
adc
loope
mov
rorb
sub
xchg
mov
mov
xchg
adc
jo
push
cmp
inc
pop
sub
and
push
mov
arpl
mov
push
test
mov
lods
cmc
cmpsb
or
call
int
cmp
imul
cmp
push
sub
jno
lahf
jns
xor
xchg
test
xor
or
sahf
andl
mov
pop
test
mov
lahf
fwait
call
adc
ds
xor
test
xchg
arpl
test
test
sub
outsl
rcr
xchg
dec
inc
inc
or
inc
es
xchg
dec
jg
in
rcrb
lcall
lods
shlb
xchg
loope
and
insb
dec
xchg
mov
ds
adc
inc
jo,pn
out
or
cmp
cmp
add
cmp
idivl
in
nop
scas
mov
adc
jnp
cmp
mov
dec
mov
push
ds
cmp
fisttpll
pop
jle
mov
or
xchg
aad
dec
ljmp
mov
cmc
dec
xchg
test
repz
xor
hlt
pushf
rcrl
int3
testb
or
inc
leave
inc
inc
sahf
mov
in
mov
out
mov
xchg
icebp
add
mov
stos
ss
push
std
mov
movsb
gs
cmp
add
xchg
popa
popa
or
sarb
lods
sahf
push
mov
cmp
lods
arpl
js
jp
inc
push
fld
xchg
sbb
ret
das
sbb
movsl
push
xor
xchg
mov
inc
inc
mov
sbb
notb
lret
mov
ja
cmp
aas
xchg
jns
outsb
push
or
lea
rcll
test
fcmovu
jo
add
jno
cmp
push
movsl
popa
fcomip
imul
imul
fs
cltd
test
mov
cmp
mov
inc
ret
and
ljmp
add
or
imul
adc
mov
outsl
mov
xor
push
and
sub
pop
fs
adc
stc
cmp
int3
adc
jecxz
je
xor
push
mov
lret
dec
mov
xchg
scas
aaa
stc
mov
xchg
mov
jo
push
and
jg
push
stos
jp
fdivrs
mov
inc
jle
les
pushf
loopne
mov
sbb
push
ret
je
and
lahf
fisubrs
adc
dec
outsb
or
test
scas
add
dec
in
inc
adc
mov
lret
imul
test
xlat
mov
insb
mov
pusha
cmc
inc
mov
add
in
push
pop
dec
inc
mov
into
cmp
add
dec
ret
cmpsb
inc
or
push
sub
aad
out
loopne
in
or
jmp
icebp
dec
or
sbb
mov
mov
push
pop
adc
daa
mov
loopne
cmp
and
imul
repz
lds
inc
ja
add
pop
ret
loop
fisubs
push
mov
fcomp
into
hlt
mov
push
push
dec
mov
xor
arpl
sbb
or
flds
inc
push
pop
fisubrs
pop
sbb
push
sub
push
adc
and
jg
push
out
sbb
rclb
outsb
leave
cmp
mov
int3
int
mov
sarl
ficompl
jge
pushf
mov
outsl
mov
popa
aas
push
into
pop
es
pop
adc
cmc
es
hlt
or
ret
inc
fdivs
sub
dec
pop
mov
push
xchg
and
gs
xor
ss
mov
lret
outsl
sbbl
addr16
sbb
int
cli
je
jb
jge
xchg
fmull
push
out
xlat
adc
lea
xchg
subb
in
xor
xor
adc
pusha
ds
fimull
call
pop
gs
test
dec
ret
dec
sbb
cmp
inc
hlt
enter
aaa
adc
insl
call
mov
push
popf
cmpsl
in
mov
mov
imul
push
push
adcb
xchg
adc
ficoml
and
les
sbb
inc
jp
push
and
mov
test
call
push
stos
jbe,pn
push
adc
push
mov
lret
adc
add
inc
add
inc
push
adcl
mov
fmul
jge
push
pop
mov
in
cmp
in
add
mov
cmp
cs
xchg
outsb
in
xchg
leave
xabort
mov
gs
mov
out
and
mov
mov
out
push
sbb
call
push
inc
push
mov
and
ret
mov
xchg
mov
push
inc
sbb
int
sbb
sti
popa
insl
into
lret
mov
mov
and
rorb
pusha
int
xlat
std
xor
aaa
xchg
sub
xor
sahf
add
dec
lret
lea
or
pop
push
mov
mov
fsubs
or
dec
xchg
sarb
mov
cmpsl
int3
repz
inc
flds
inc
pop
mulb
and
xorb
sub
or
jp
add
jl
pop
mov
jnp
aad
jns
enter
je
mov
push
xor
push
mov
dec
jo
inc
sub
leave
out
lret
add
mov
jecxz
dec
push
lds
push
sbb
xchg
cli
mov
lods
ds
inc
fadds
loop
push
push
mov
jne
add
outsb
out
rclb
inc
lods
les
call
and
loop
aaa
scas
mov
mov
mov
sub
loopne
jbe
stos
cwtl
andl
cmp
dec
mov
popa
mov
stos
mov
das
xchg
mov
sbb
mov
enter
pop
rclb
adc
mov
mov
xchg
std
xor
jecxz
pop
aaa
adc
adc
sarb
xor
xchg
in
insl
inc
scas
shrl
mov
sti
jg
add
aam
xor
add
shrb
jmp
jecxz
lret
outsb
jbe
test
push
dec
add
loope
pop
adc
pop
sahf
jno
push
pop
push
loopne
xchg
pop
lahf
icebp
adc
xchg
mov
loopne
subl
mov
push
stos
push
repz
js
and
repz
sahf
aaa
inc
stc
bound
mov
xor
mov
dec
int
lods
xchg
mov
xor
cwtl
pop
dec
test
ljmp
sbb
repnz
popa
push
mov
lock
xchg
jns
mov
cmp
repnz
lcall
pop
xchg
jns
xchg
lea
cmp
cmp
imul
lea
in
loop
xchg
scas
lret
xchg
sub
cmp
aaa
pop
dec
ja
cmp
in
addr16
cmc
mov
mov
mov
mov
mov
test
popf
push
cwtl
mov
pop
mov
inc
cmp
inc
cld
adc
nop
int
es
rcr
cltd
faddl
push
loope
and
adc
cmp
ja
stos
stc
rcrl
jo
out
sbb
sbb
adc
mov
push
inc
scas
mov
and
xor
add
sub
scas
in
sbb
decb
cmc
daa
addr16
insb
das
stos
js
dec
jns
adc
dec
stos
int
add
sbb
xchg
sbb
adc
jnp
mov
fcmovb
cli
gs
dec
mov
dec
jne
sub
xor
xor
xor
dec
fwait
dec
and
xchg
pusha
fidivrl
cmpsb
or
inc
sti
sbb
ljmp
lahf
fbld
in
lods
fwait
outsl
scas
loopne
cmc
inc
iret
scas
jne
loop
mov
pop
or
sub
add
xor
ficoml
mov
jbe
in
iret
xchg
dec
add
insl
into
test
jno
fs
sbb
roll
lea
mov
and
push
fildl
outsb
enter
fnstsw
lcall
in
lret
div
scas
hlt
cmp
jmp
fdivr
xchg
lock
jno
dec
xchg
popa
mov
pop
pop
push
jecxz
add
xor
xchg
dec
out
push
jb
adc
mov
dec
adc
sbb
cli
cs
xchg
std
orb
xchg
push
push
into
nop
sahf
out
pushf
xchg
mov
dec
cltd
sbb
push
ja
pop
mov
gs
arpl
data16
mull
pop
sahf
add
push
xor
loopne
in
cmpsl
dec
jecxz
mov
pop
into
pushf
mov
in
rolb
test
mov
rclb
dec
inc
and
popf
enter
pusha
lret
adc
inc
mov
xor
loopne
out
rorl
adc
movsl
arpl
es
aaa
addb
insl
mov
xchg
sbb
rolb
test
fiaddl
fcmovnb
or
lret
inc
jno
lds
sti
pop
stos
lret
rorl
jae
jno
pop
ja
not
cmp
and
jg
lcall
mov
sub
daa
push
movsb
or
enter
lret
mov
jo,pt
add
add
loop
mov
mov
addr16
fistl
xchg
cmp
inc
xchg
sub
push
sub
je
and
mov
lock
lods
xlat
bnd
mov
sub
adc
add
in
fwait
add
xchg
fdivp
jle
leave
loope
lds
mov
mov
dec
scas
mov
aaa
stc
inc
or
lods
enter
and
sti
lods
dec
subl
mov
xchg
adc
pop
mov
jno
adc
imul
xlat
out
imul
stc
pushf
inc
or
test
mov
sub
and
jg
xchg
inc
cmpsb
lods
xor
mov
stos
pop
or
mov
sbb
sub
pop
call
movsb
sub
jb
pop
pop
addr16
decb
pop
pop
xlat
lahf
pop
stc
xchg
pop
test
test
adc
push
dec
mov
pop
push
lret
sar
mov
add
mov
jle
in
add
pop
mov
outsl
jns
pop
insl
lret
add
xchg
iret
dec
pop
pop
cmp
daa
jbe
xchg
loopne
nop
sub
dec
mov
ja
std
mov
xorb
aas
leave
push
inc
jae
mov
lahf
adc
add
sbb
jnp
lret
loope
in
dec
sub
jbe
push
inc
cltd
lret
push
or
adc
push
movsb
pop
dec
enter
and
sub
out
push
mov
stos
popf
loop
test
pop
in
push
in
push
sbb
pop
inc
xchg
lcall
xor
pop
push
sub
aaa
jg
adc
leave
ret
or
iret
popf
xor
jmp
push
aad
std
orb
mov
mov
jae
shld
adc
inc
cmpsl
arpl
jb
dec
cld
stos
add
ss
sub
or
fs
add
lods
test
scas
hlt
jmp
push
insl
pushf
das
ret
sub
sti
insb
mov
aam
mov
arpl
mov
cmp
jbe
sub
std
cmp
inc
cmp
adc
lock
lods
call
lret
push
or
pop
les
pop
mov
stos
fimuls
mov
cmp
dec
lcall
cltd
dec
daa
jg
int3
dec
sbb
das
faddl
cmpsl
mov
jg
lods
pushf
std
cmp
xor
aaa
jecxz
cltd
ret
and
ljmp
mov
xorl
movsb
mov
pop
mov
add
xchg
out
lret
and
pslld
pop
cltd
into
fidivl
repnz
mov
adc
lds
insl
jmp
out
push
xor
push
xor
jo
cmpsl
mov
dec
add
jo
and
fisubrs
icebp
shrl
rcll
fists
add
lret
cmpsl
scas
aad
pop
fisttps
sub
xor
mov
pop
add
imul
sub
and
mov
jp
mov
push
aam
mov
cmp
push
and
lret
mov
pop
xor
cmp
aad
mov
push
stc
dec
xlat
mov
jmp
dec
jae
pop
mov
pop
pop
sub
dec
pop
sarl
or
add
stc
mov
pop
fldcw
lds
adc
push
out
push
cli
mov
mov
dec
xor
daa
mov
or
psllq
xor
insl
xor
cmp
pushf
aaa
dec
mov
ds
hlt
insl
xchg
adc
pop
cld
imul
outsl
push
repnz
data16
inc
call
icebp
jnp
imul
xor
aad
stos
mov
rorb
sbb
data16
lods
dec
idivb
mov
loop
mov
gs
loopne
popf
pop
inc
pop
lods
loopne
imulb
jmp
test
mov
mov
pusha
and
xor
sbb
insl
ljmp
mov
or
adcb
cmc
pop
int
popa
xor
mov
stos
inc
cmp
gs
mov
pop
in
pop
movsl
push
jp
scas
loop
inc
test
por
lock
loopne
in
mov
jb
inc
mov
dec
pushf
sub
jp
inc
and
mov
or
pop
push
sub
push
out
mov
fidivl
inc
jmp
nop
push
mov
popa
enter
rorl
lret
lret
cld
lahf
cmp
sahf
cwtl
mov
arpl
cmp
xchg
notl
or
and
icebp
push
and
sbb
xchg
pop
roll
popa
and
sti
add
xchg
out
popf
pop
adc
divl
add
mov
aaa
mov
shll
jno
std
jmp
cmp
std
in
insb
mov
cmp
int
sbb
mov
gs
outsb
shlb
xchg
dec
pop
jns
mov
cmp
or
cmp
push
inc
push
lods
mov
insb
or
pop
inc
and
xchg
std
lcall
das
cmp
in
nop
jns
push
xchg
das
ljmp
les
xchg
lds
xchg
out
je
push
adc
je
fmuls
adc
ror
dec
js
cltd
fsub
jne
int
stos
and
add
les
mov
repz
mov
push
out
es
loopne
jg
fcomps
ds
sub
push
aas
jbe
mov
subb
lret
clc
loop
les
es
mov
out
mov
in
bound
mov
jno
jecxz
in
js
mov
adc
std
cmp
push
es
pop
jge
cld
pop
mov
bound
dec
jo
push
cld
test
imul
or
lods
cmpsb
xor
push
mov
je
cmpsl
mov
out
xchg
xor
fistpll
aad
xor
divb
rcl
push
aad
xor
push
mov
sbbb
inc
cli
xlat
lcall
test
push
fs
xchg
mov
jmp
cmp
cltd
xchg
pusha
loop
lret
add
mov
push
das
call
dec
in
mov
xchg
adc
cmpl
enter
mov
sub
loop
movsl
or
add
or
add
xor
cld
cld
mov
adc
into
jnp
mov
adc
icebp
pop
mov
fdivp
lea
scas
or
out
lcall
mov
sub
mov
mov
jns
mov
test
mov
jecxz
jp
rclb
clc
and
gs
movsl
jae
mov
xor
push
insl
test
jo
mov
mov
insb
push
addb
clc
and
pop
xchg
test
jo
jbe
mov
es
cmpsl
xor
insb
mov
icebp
arpl
or
leave
adc
cmp
push
ficomps
jb
sbb
add
stc
sub
lret
cld
cs
lea
test
in
inc
call
inc
push
push
enter
push
push
jae
jmp
leave
sub
jmp
cli
jl
pop
outsb
dec
popa
negb
mov
xor
or
jl
filds
push
xchg
ljmp
mov
scas
push
rorb
je
adc
leave
push
mov
add
inc
inc
lahf
je
xchg
and
jge
xorl
add
movsb
int
into
icebp
scas
or
out
and
jp
std
fnsave
call
aas
lods
test
lret
add
push
jmp
jns
sub
sbb
insb
mov
adc
push
fwait
aaa
lahf
push
sub
lods
jle
pop
push
test
mov
or
sbb
addl
sarb
mov
loop
adc
dec
push
insb
ljmp
mov
mov
int
push
setno
cmpsb
xchg
popf
call
sub
stc
push
cmp
push
inc
pushf
andb
shll
or
out
mov
push
mov
in
out
cld
jnp
pop
jle
push
sbb
ds
sub
mov
and
mov
cmc
jp
sbb
imul
jge
push
mov
or
sarb
call
mov
mov
fcomip
mov
iret
pop
icebp
jbe
ljmp
fisubl
xor
or
movl
or
mov
and
in
or
dec
mov
negb
pop
stos
pop
xchg
jb
cwtl
adc
nop
and
nop
mov
inc
mov
pop
movb
outsl
sub
push
mull
xchg
ficoml
and
dec
sbb
mov
or
cli
out
adc
jns
cwtl
imul
xor
repz
shlb
cmc
adc
inc
mov
arpl
inc
dec
ret
add
push
in
push
iret
push
push
lock
push
shlb
andl
and
int3
negl
xchg
lods
es
insl
daa
iret
rol
lods
push
dec
xor
out
lret
mov
out
jo
xor
inc
call
scas
fisttpl
xlat
inc
adc
jl
js
adc
test
adc
xchg
jle
iret
mov
or
mov
mov
sbbl
std
popa
mov
fsubrl
shl
and
jbe
imull
push
fisubs
enter
call
inc
mov
xor
mov
icebp
lock
or
iret
int3
jmp
lret
sub
adc
mov
add
inc
fcomi
sti
push
ja
ja
sub
fldl
data16
push
pop
dec
sub
push
sbb
push
sarb
pop
lods
fs
push
adc
jno
adc
ss
cmp
fdivs
lahf
notb
daa
sbb
fildl
shr
mov
push
xor
sahf
movsb
dec
mov
mov
or
jno
roll
cmpl
out
stc
ret
fldcw
jbe
psubq
mov
scas
imul
das
jbe
jbe
push
and
pop
test
pop
sub
sub
or
fucom
dec
fnstcw
add
jno
imul
cmpsl
mov
lods
out
jns
repnz
mov
push
xchg
lock
stos
lea
shl
dec
dec
pop
ss
lock
idivl
add
movsl
or
adc
xor
push
arpl
sarl
int
out
and
push
ret
sub
test
test
nop
int
sub
add
add
push
in
lds
mov
in
and
push
iret
std
xchg
xchg
lret
push
cwtl
sarb
ret
iret
inc
or
adc
addr16
icebp
xchg
pop
out
jne
push
sarl
ss
dec
mov
loop
add
jecxz
dec
dec
adc
fwait
cs
lods
imul
inc
lods
push
xchg
mov
hlt
arpl
mov
jecxz
arpl
mov
cmp
imul
jge
loop
xchg
aas
xchg
enter
mov
mov
es
mov
xor
sbb
sbb
out
dec
clc
shlb
inc
lahf
inc
out
or
cmovle
cmp
mov
inc
shlb
sbb
mov
or
mov
aas
aaa
movsb
xlat
cmp
mov
int3
push
test
mov
or
xchg
mov
add
dec
xchg
sbb
mov
inc
xchg
cltd
rorl
push
sbb
push
adc
and
pop
cmpsb
fnsave
outsl
lahf
loopne
pop
pop
cli
loop
or
sbb
pop
push
fincstp
lret
dec
je
jg
clc
test
movsl
sub
mov
div
sbb
lea
push
and
fsubs
xor
mov
jne
adc
ljmp
fdivl
andb
call
addl
sbb
std
arpl
pop
test
bound
stos
addr16
jmp
push
mov
jg
jae
aad
push
pusha
xorb
mov
or
jge
jg
adc
or
and
push
xor
arpl
mov
ja
pop
fbld
mov
cmp
enter
dec
nop
sub
push
adc
cld
insb
push
sbb
xorb
je
jns
push
mov
inc
sub
xor
lock
inc
xchg
jmp
jno
push
jbe
mov
movb
mov
or
jns
cld
stc
push
cld
fs
fbstp
stos
bound
pop
jae
cmp
mov
or
push
sbb
int
and
bound
mov
xlat
inc
cmp
xchg
mov
loopne
test
imul
rolb
jle
cltd
daa
push
dec
rcrl
pop
xchg
cmp
scas
push
xor
aaa
mov
pop
cmp
repz
lcall
or
jns
into
int3
xchg
imul
pusha
add
jno
ds
fsubs
rcpps
sti
iret
int
lea
jmp
out
enter
cmpsb
add
bndstx
adc
shrb
ret
or
adc
mov
mov
cwtl
ret
mov
cmp
daa
cli
cmp
inc
je
xchg
xchg
inc
xor
lret
jg
fists
add
in
lock
insb
popf
pop
mov
push
fbstp
xchg
pop
aam
jp
add
jno
ret
adc
jle
xchg
push
repz
cmp
and
mov
fistpll
mov
lahf
dec
push
dec
aad
daa
pop
shll
je
or
push
in
xchg
sub
into
cmp
ret
inc
scas
into
imulb
fsubrl
sub
pop
mov
mov
dec
inc
pop
pop
jbe
inc
cmpsl
sub
fnstsw
jno
push
push
inc
fwait
xchg
xchg
int3
xchg
add
in
mov
out
outsl
and
inc
lea
aas
mov
imul
push
pop
cmp
mov
jbe
lahf
ja
mov
push
cmpsb
pop
cltd
test
insl
call
push
jb
ror
aaa
jns,pn
xchg
push
in
push
dec
movsl
adc
xchg
or
sti
enter
xor
pop
fcmovne
and
add
jae
sbb
shr
test
mov
nop
adc
xchg
xchg
lret
push
and
xbegin
inc
ret
jnp
mov
imull
fwait
imul
push
aas
sar
mov
xchg
inc
repnz
jnp
mov
mov
lcall
mov
loop
push
adcl
jo
jmp
lock
lods
addr16
andl
inc
push
push
mov
lret
mov
in
sub
jl
je
iret
push
mov
sbb
push
add
sbb
inc
pop
push
lods
fstpl
pop
ret
pop
sarl
jbe
adc
add
push
jle
sbb
std
push
shll
mov
lret
or
call
imul
imul
push
sbb
nop
add
or
and
mov
sbb
adcl
lods
test
mov
scas
and
inc
mov
je
push
xor
cs
jge
vxorpd
test
adc
aas
mov
push
mov
mov
idivb
cwtl
push
sbb
loopne
sub
stc
push
xor
aas
lret
xor
or
mov
mov
cmp
mov
lock
add
lret
pusha
cmp
xor
sub
sbb
pusha
scas
jge
inc
lret
jecxz
flds
push
sbbb
cmp
bound
je
test
js
clc
cmpsl
pusha
faddl
mov
into
pop
pop
or
into
jno
ret
sub
mov
xchg
sbb
fsubrs
xlat
push
lahf
out
xor
shll
cmp
lcall
aas
out
les
jg
push
pushf
mov
pushl
jg
and
outsl
xor
std
out
pop
xchg
adc
add
fldenv
pop
mov
mov
call
mov
loop
xchg
sub
jae
movsb
cs
mov
xchg
xor
lret
mov
push
lret
or
fildll
dec
xlat
pop
push
inc
das
adc
mov
pop
fsubrl
leave
outsl
mov
push
in
imul
lods
inc
pop
nop
loope
push
cs
out
in
jne
push
mov
or
mov
xchg
cmp
fwait
jae
stos
nop
nop
and
rorl
cmc
mov
inc
pusha
push
xor
mov
stc
out
loope
cmp
sbb
sub
loopne
jo
das
cmpb
mov
cltd
insb
lret
push
mov
stc
leave
jnp
hlt
cmpsl
mov
fildll
aad
inc
pushf
push
in
cltd
xor
cli
mov
cmp
insl
adc
lds
xchg
mov
dec
cmp
inc
pop
lds
shl
sbb
push
repnz
sub
repnz
adc
and
cmp
add
pop
outsl
cwtl
or
ss
aam
icebp
adc
xor
enter
adc
sbb
push
jmp
addr16
aad
adc
imul
out
push
pop
rclb
dec
push
out
stc
cmp
mov
jo
fisubl
pop
mov
add
addb
imul
roll
mov
repz
pop
cmpb
inc
add
add
iret
rorb
inc
pop
mov
int3
xchg
fisttpl
scas
add
mov
sbb
mov
xchg
xchg
data16
insl
push
and
pop
das
mov
insb
cltd
movsb
fwait
inc
mov
and
mov
fisubl
movsl
or
mov
rol
rcrl
pop
cmp
arpl
push
iret
jg
sbb
inc
shr
movups
push
lods
xor
adc
dec
xchg
sarb
lods
fwait
sbb
shrb
jb
int
and
shl
xor
add
fwait
jle
adc
sbb
popa
cmp
fadds
fsubs
sub
dec
stc
call
insb
cmp
xorl
push
add
and
jnp
pop
mov
mov
push
mov
push
sahf
les
pushf
stos
sub
call
inc
dec
movsb
adc
je
push
rcrl
adc
cmpsl
outsb
stos
popa
sbb
push
push
iret
jmp
int3
mov
je
cld
add
stc
xchg
sbb
scas
xor
cmp
insb
lods
jnp
fs
mov
shrb
adc
arpl
push
out
shll
cli
xchg
mov
pop
shrl
cmp
and
sbb
jg
dec
cmpsb
mov
adc
mov
fwait
inc
out
jo
mov
push
sahf
pop
or
test
push
push
jb
cwtl
imul
adc
mov
cld
inc
push
dec
test
ljmp
push
out
mov
push
xor
jl
neg
shll
adc
xchg
xor
dec
inc
push
in
inc
sbb
rcpps
jl
js
mov
iret
push
cmp
insb
push
insl
lock
pop
pop
pushf
pushf
cmp
push
mov
mov
rcrl
lea
das
andl
and
add
movsl
pusha
and
or
mov
in
ss
add
mov
dec
aam
iret
ds
lds
cmpsb
std
pop
into
imul
lcall
xor
sahf
fsubrl
outsb
repz
popa
xchg
movsl
in
push
clc
int3
xor
cmpsb
and
push
pop
movsb
lcall
out
and
loope
lods
xor
mov
jo
daa
mov
pop
push
hlt
push
mov
adc
stos
das
cmp
cli
imul
aas
aas
bound
repz
lcall
mov
cwtl
gs
push
jno
jns
jecxz
push
fdivrl
addb
xchg
gs
and
enter
fldl
imul
cmp
clc
sbb
popf
dec
and
add
sbb
mov
adc
mov
xchg
movsl
test
divb
hlt
ffree
sub
cmc
shll
out
lods
jno
and
fcmovnbe
es
cmp
or
jmp
fwait
sub
jbe
adc
dec
inc
mov
fdivrl
sbb
out
cs
cld
inc
rorl
sbb
mov
and
cmp
fisubl
hlt
sub
xor
sub
mov
pop
mov
cmp
sbb
addr16
sub
inc
imul
test
lret
jecxz
mov
insb
mov
mov
mov
dec
cmpsl
sbb
cmp
rcl
push
in
mov
add
mov
mov
ja
xchg
and
mov
syscall
test
mov
push
mov
lods
shr
fs
shrb
mov
hlt
sub
movsl
pusha
loop
adc
push
mov
mov
push
inc
pop
jae
xlat
call
out
popf
out
push
mov
shrl
data16
in
mov
mov
sbb
add
sbb
xchg
outsl
sbb
jns
fwait
sti
mov
sbb
cmpsl
pop
sbb
les
mov
jb
daa
pop
xor
sbb
pusha
test
jp
ds
stc
cld
pop
push
testb
scas
out
pop
sub
xorb
incb
xchg
lcall
fisubrl
and
in
clc
or
pushf
cmpsl
lds
cmp
repz
mov
fidivl
jo
cmpsb
sbb
jb
mov
lahf
sub
xchg
insb
in
adcb
sarl
xor
lods
mov
xchg
mov
dec
jmp
push
inc
mov
dec
je
cmp
daa
sbb
add
add
push
mov
mov
lcall
sbb
xchg
xor
mov
lret
push
xor
cld
pop
jp
add
test
sbb
leave
out
fildl
add
gs
sbb
out
jmp
ja
push
fildll
pop
das
pop
aam
and
jns
mov
stos
inc
mov
mov
adc
jns
jne
push
add
jl
xor
out
clc
push
or
sbb
pop
ja
pop
pop
add
lahf
scas
add
mov
pushl
sbb
movsb
xor
pop
pusha
out
jmp
std
xor
repnz
or
cmp
stos
icebp
fldenv
xchg
cmp
sub
rep
mov
lods
stos
test
lock
fidivrs
mov
xlat
inc
pop
sub
or
aas
xlat
mov
ljmp
jae
push
or
jb
sar
and
scas
out
jbe
jns
push
js
mov
imul
or
iret
push
stos
push
push
sar
cmp
xor
cli
or
dec
outsb
push
dec
imul
adc
int3
test
out
mov
mov
data16
notl
jecxz
jo
test
scas
or
inc
xchg
clc
mov
xchg
jb
sarb
lock
mov
xor
sbb
sub
push
push
cltd
xor
adc
push
pushf
adc
stos
sbb
inc
into
xor
xor
lock
xorl
fwait
in
mov
lods
sub
fmul
pop
adc
mov
in
gs
or
mov
jbe
popa
inc
sbb
in
xchg
or
adc
sbb
sub
hlt
jo
xlat
add
pop
rorl
push
fs
sti
pop
or
sub
int
lret
mov
lock
mov
and
ja
divl
dec
fdivrs
shrl
mov
xchg
xor
sub
out
mov
lods
and
bound
mov
push
sub
cmpsb
inc
xchg
xlat
and
lea
and
jnp
xchg
in
sarl
xor
pop
lcall
sbb
lret
in
inc
add
pop
int
xor
push
xchg
arpl
xlat
add
xor
adc
and
sub
out
ljmp
icebp
rcl
test
push
mov
fs
jle
cmp
subb
jo
je
sub
inc
or
dec
out
or
sbb
mov
test
inc
rclb
or
gs
adc
dec
cli
jge
pop
push
pop
jbe
ret
stos
jbe
cmc
mov
ja
stos
cwtl
mov
mov
mov
loopne
stc
xchg
adcb
mov
add
test
sub
or
test
or
pop
popa
lock
lret
mov
fnstsw
xor
pop
pop
sub
inc
add
sub
dec
lods
jp
imul
cmp
lds
enter
movsl
int
lds
mov
out
fwait
into
jle
mov
ds
push
adc
and
add
push
dec
out
push
inc
xor
adc
std
xor
imul
sub
ja
fisttps
jle
sbb
pushf
dec
mov
jns
push
stc
mov
jae
jnp
xor
mov
insl
xor
imul
in
jae
xor
sub
aam
arpl
mov
add
sbb
fmuls
popa
cs
dec
add
xor
dec
add
sbb
ficompl
repz
repnz
ss
or
add
fwait
pmaxsw
stc
add
call
fisubl
sub
mov
add
fadd
fimull
or
jae
in
mov
lahf
aaa
insb
ss
cld
filds
mov
fs
repnz
sbb
sbb
ja
pushf
mov
popf
xchg
xor
movsl
dec
filds
dec
push
and
outsl
shrb
ljmp
push
mov
pushl
out
das
or
push
cmp
insb
adc
xchg
jl
xchg
insb
jp
push
inc
jnp
xor
lea
xchg
adc
dec
cmpb
out
in
sub
outsb
xlat
or
xor
mov
mov
js
movsl
movsl
cmp
lret
inc
inc
push
rorl
cmp
push
mov
push
aam
test
ja
dec
repz
or
jl
pop
jg
pop
jb
ss
icebp
enter
xor
lds
push
or
and
scas
iret
mov
les
sti
sbb
fcomp
insl
rcll
xchg
mov
and
scas
mov
pusha
dec
cmp
subb
inc
daa
push
mov
fcoml
mov
inc
stos
sub
test
arpl
xor
mov
adc
xchg
subl
clc
pop
rorl
insb
adc
mov
add
mov
push
lahf
jbe
xlat
dec
lds
imul
add
dec
sub
jl
jb
fnstenv
popa
sbb
jl
dec
and
ds
inc
jle
add
jne
lods
sti
arpl
les
imul
push
jo
and
mov
pushf
pop
mov
call
pop
into
or
lea
push
insl
lds
mov
fsub
leave
cltd
es
cmp
pop
arpl
mov
push
push
sub
sbb
pmuludq
cmp
rcl
lret
xor
outsb
fsubrl
or
test
sbb
icebp
pop
pop
sub
xchg
cs
add
popa
insb
pop
leave
clc
movl
pop
popa
decb
mov
fisttps
pop
lds
and
ljmp
scas
jns
shrb
xchg
sbb
loop
shl
mov
lods
sbb
icebp
lds
cmp
mov
lahf
cmc
lods
cs
mov
push
icebp
cmp
xor
fnstsw
add
andl
jmp
sahf
fcoml
xchg
ret
lods
mov
jmp
into
push
sbb
mov
enter
dec
pop
push
push
icebp
adc
fs
loope
adc
jb
sbb
cmc
ja
test
jg
mov
mov
in
icebp
in
mov
push
jp
xor
push
sbbb
ds
sbb
adc
jle
pop
or
push
je
push
cmpsl
leave
pop
push
inc
pop
aas
dec
sbb
test
xor
fisubrs
pop
neg
imul
pop
pop
jno
fmulp
mov
push
int3
jge
add
arpl
mov
outsl
aam
fcompl
test
loop
cmpsl
ret
ret
mov
cmpsl
push
shl
jae
xor
nop
mov
clc
es
sbb
mov
pop
arpl
jnp
stos
leave
ljmp
aas
ret
pop
xchg
out
cltd
pop
cmpsl
mov
jo
insl
xor
mov
insb
scas
mov
pushf
mov
enter
and
fcmovne
iret
xor
adc
js
cmpb
mov
and
scas
push
into
leave
mov
inc
rcrb
mov
xchg
mov
xor
xchg
sub
lahf
out
xor
mov
pop
subl
or
in
jae
faddp
imul
loopne
xor
xchg
cmpsl
push
fnstsw
adc
inc
scas
push
mov
push
aad
dec
imul
mov
pop
sti
cwtl
or
mov
inc
int
sti
push
and
shlb
les
lret
push
or
jo
addr16
pop
mov
outsl
out
push
xchg
mov
jae
shlb
push
xchg
inc
cmp
sub
xor
ljmp
jp
pusha
dec
push
cld
jle
int3
pop
jmp
adc
lahf
jp
lcall
cltd
rcll
int
pop
lods
dec
xor
jmp
dec
arpl
add
jne
jg
enter
jne
dec
xor
jge
mov
push
shr
xor
dec
cmc
mov
mov
stos
sbb
adc
orb
xchg
lret
and
fstl
fwait
xor
pop
dec
test
cmp
adc
sub
mov
cmp
push
cmpsl
lcall
pop
mov
aam
mov
and
mov
outsb
mov
in
test
add
mov
pop
movsl
xor
cmp
imul
xor
ss
out
cs
or
fcmove
inc
cmpsl
sarb
xchg
neg
push
lods
sbb
xchg
jl
es
pop
lret
dec
dec
movsl
cld
aad
mov
test
lods
pushf
mov
dec
and
adc
fucomip
adc
and
push
subb
push
out
add
mov
leave
xor
loopne
ss
push
repnz
or
xchg
ret
mov
loope
pop
lcall
add
jg
or
mov
jl
mov
ds
sub
lods
repz
sahf
push
mov
mov
inc
int
push
imul
pop
clc
int
or
fimull
sbb
cld
lods
aaa
or
fwait
out
lea
mov
push
mov
jle
ljmp
popf
testl
out
cmpsb
sbb
jbe
test
and
es
imul
mov
enter
jg
dec
out
sbb
fidivrl
movsl
outsb
inc
dec
mov
add
insl
inc
and
or
or
mov
xchg
fstps
pushf
mov
repz
es
scas
movsl
mov
push
scas
stos
loop
es
dec
outsl
repnz
or
outsl
testl
mov
mov
push
notb
dec
pop
adc
bound
pushf
jne
ror
mov
add
add
cvtps2pi
xchg
inc
notb
pop
dec
test
mov
cmp
xor
or
pop
inc
inc
xor
shlb
adc
out
sti
pop
lock
loope
mov
jb
call
roll
dec
iret
enter
in
xchg
xor
cltd
pop
lcall
rcl
xchg
adc
outsb
adc
push
arpl
mov
cltd
fidivl
out
push
jg
xchg
sub
iret
add
std
xor
dec
hlt
lods
stos
sub
sbb
scas
push
ss
rolb
out
mov
into
sub
xor
cmpsl
jno
iret
jae
mov
rcrb
xor
loope
inc
cwtl
jl
or
fstl
mov
or
mov
cli
repnz
loope
stos
fldln2
cmpsl
rorl
or
sub
js
sbb
sub
ret
jl
bound
mov
sub
lods
imul
rcr
push
inc
adc
sti
adc
in
into
aam
insl
adc
xchg
cmp
cmp
rclb
jns
imul
fs
je
aam
popf
dec
xchg
sti
mov
daa
adc
mov
and
aad
lret
shll
xchg
and
add
fst
pushf
sbb
dec
sub
sub
or
daa
fimuls
push
pop
mov
dec
mov
push
pop
pushf
mov
xchg
outsb
fmuls
scas
xchg
jnp
mov
cmp
out
push
iret
cli
leave
subl
and
xorl
out
jb
repz
pop
pop
add
cmp
mov
xchg
adc
stc
test
cmpsl
lret
dec
int
mov
xchg
dec
mov
mov
push
ret
in
lods
or
mov
into
aam
jmp
cmp
call
cmp
inc
jmp
addr16
data16
mov
xor
cmp
add
addl
add
push
sub
and
imul
cmp
jne
aaa
mov
pop
lret
jb
sbb
out
ret
std
dec
into
dec
lret
shll
dec
mov
loope
mov
loop
mov
sub
mov
dec
sbb
rcrb
call
stos
or
cmpsb
mov
fisubl
push
mov
ret
jecxz
add
jecxz
jg
pusha
pop
mov
xchg
in
cltd
jae
popf
dec
inc
bound
or
addb
stos
into
pop
stos
inc
popf
call
xchg
cld
sbb
cmp
daa
jle
adc
pop
add
xchg
js
sbb
pusha
inc
push
sub
imul
jle
mov
xchg
rorl
fisttps
sti
dec
lods
stos
xchg
push
shll
mov
push
xor
iret
xchg
int3
stos
mov
sbb
push
repnz
ja
pusha
pop
sub
outsb
mov
repz
jb
stc
std
lea
sub
insl
xor
repnz
outsl
out
jp
in
pop
mov
pop
jg
les
movsl
popa
nop
jbe
sbb
js
push
aam
outsb
stos
lods
gs
out
inc
mov
mov
mov
sbb
insb
sub
mov
jp
push
addr16
xlat
add
cmpsb
push
adc
dec
in
loope
adc
and
mov
jo
pop
pop
in
scas
sahf
movsb
shr
pop
leave
fsubs
lcall
mov
push
jnp
out
dec
cmpsl
adc
pop
rol
inc
xchg
jae
cmp
loope
mov
je
fcompl
je
cli
data16
hlt
shl
adc
outsl
sbb
sbb
inc
divl
jge
fwait
push
cld
cmp
xchg
cmp
dec
push
dec
ss
es
daa
stos
pusha
or
mov
sbb
cld
jb
or
sub
je
shrb
nop
lret
add
xor
push
jns
inc
addr16
xor
pop
cmp
cld
xor
and
pop
sbb
mov
push
lods
xchg
push
xchg
repz
add
enter
pushf
stc
adc
cmpsb
rcr
add
dec
pop
jne
cmp
sbb
mov
ss
inc
in
or
in
cmp
js
shlb
sub
imul
lahf
stc
repnz
mov
jb
scas
test
mov
pop
pmaddwd
pop
ds
jae
adc
and
ret
cmp
pop
push
and
or
add
or
ja
inc
dec
outsl
loopne
cmpsl
cmp
add
out
xchg
push
iret
aas
xchg
or
loopne
pop
sbb
popa
pop
mov
dec
jns
and
cwtl
sbb
jmp
mov
inc
outsl
jecxz
in
push
cltd
insl
xor
insl
push
cmp
jo
addl
pop
ret
test
imul
gs
cwtl
aaa
xor
and
mov
push
or
lahf
jl
adc
cmpsb
pop
xchg
jmp
xchg
call
and
loope
push
mov
or
sub
push
frstor
inc
jmp
stc
sub
add
lcall
stos
out
add
jp
mov
sub
arpl
stos
cmp
sbb
and
cs
insl
lock
notl
arpl
rdmsr
xchg
int3
inc
jne
mov
in
ret
out
dec
jl
pop
fcoml
fnstenv
shlb
iret
adc
pop
aaa
es
data16
orb
lahf
lret
dec
lods
lahf
stc
dec
fcoml
lock
pop
push
out
cs
js
add
out
push
add
cmp
dec
mov
adc
gs
ja
push
sub
scas
ja
ret
cmp
add
or
lret
test
sub
xor
mov
pop
mov
sub
mov
out
add
pushf
icebp
insb
int3
pop
mov
add
data16
cs
rcl
lock
sti
push
adc
pusha
mov
xchg
lods
arpl
jns
jno
stc
lods
inc
ds
es
divb
scas
mov
fistl
sar
arpl
ret
pop
rcrl
shlb
cmp
popf
shl
jg
imul
and
movl
cmp
test
push
mov
lcall
jbe
shl
or
popf
mov
mov
mov
sbb
loope
das
cli
mov
test
dec
loope
and
mov
jle
mov
arpl
sub
dec
fwait
sti
add
mov
fldt
loop
shll
loop
test
add
fnstsw
sbb
mov
mov
fdivrs
aas
jl
push
mov
adc
clc
mov
adc
test
push
mov
movl
push
enter
xor
push
sarl
icebp
xor
cwtl
rcrb
sub
mov
popa
dec
addl
adcb
push
dec
inc
dec
fisubrs
sbb
daa
jnp
rcrl
jle
push
cmp
mov
fdivrs
pop
push
cmp
and
cmp
arpl
bound
in
idivb
movsl
push
push
lods
cmp
and
push
divb
rcrb
push
into
xchg
inc
push
push
es
push
aam
mov
mov
fsubs
fimuls
in
repz
ja
xor
gs
pop
scas
xchg
adc
mov
and
leave
mov
pop
ret
jmp
pop
aam
xchg
fisttps
aaa
or
ret
mov
sbb
lods
mov
scas
insl
rorl
inc
add
mov
add
int3
dec
jmp
cltd
mov
mov
in
jge
lret
adc
xor
cwtl
cmp
pop
push
xchg
adc
xchg
into
or
cmpb
in
dec
push
push
lods
mov
lcall
insl
adc
push
mov
push
cs
fxch
sti
lcall
rorb
bound
in
subl
hlt
push
xchg
add
mov
xchg
popf
xchg
lods
push
fwait
xlat
mov
mov
cwtl
adc
mov
sub
data16
rcrb
push
xchg
lahf
push
dec
mov
jo
jp
in
in
mov
and
cmc
ss
es
mov
sbb
push
shl
addb
jb
arpl
jle
push
in
pusha
mov
push
fidivrl
and
in
insl
xorl
mov
fnstenv
out
enter
sub
outsb
push
test
sti
ficoml
xchg
mov
mov
aas
mov
and
outsl
sbb
pop
loop
sbb
sub
push
mov
shrb
lods
inc
push
icebp
int
lahf
pop
and
push
push
pop
mov
mov
pop
lds
mov
mov
inc
sub
inc
enter
mov
into
push
jne
inc
sarl
inc
mov
pop
xchg
add
xchg
test
jg
lods
ljmp
or
sbb
xchg
sub
push
sbb
insb
fwait
test
int
xchg
mov
cmp
xchg
mov
pop
shlb
hlt
cwtl
and
scas
and
cmpsb
in
mov
inc
scas
mov
adc
cmpsb
add
cltd
adc
std
add
push
rcr
push
mov
test
loop
sub
leave
nop
fucomp
outsl
jge
xchg
cltd
cmpsb
push
jne
out
stos
add
jg
arpl
iret
jl
jmp
loopne
push
adc
jb
inc
sub
in
sub
cmpsl
insb
sahf
imul
fdivs
or
sub
mov
add
in
mov
sub
pop
cli
dec
push
xor
push
aas
adc
xor
dec
test
jns
mov
imul
pushf
dec
enter
and
adc
ljmp
cmp
call
ljmp
roll
imul
ljmp
mov
out
jnp
aam
cmp
adc
stos
cmp
in
loope
icebp
gs
in
mov
inc
jb
inc
stos
add
or
notb
or
imul
xchg
and
out
xor
pop
dec
xchg
dec
sbb
or
decb
jne
push
outsw
sub
and
and
mov
shll
mov
mov
xchg
jnp
jno
outsb
dec
pop
mov
das
xchg
incb
dec
into
sub
cs
xor
iret
xor
adc
leave
ret
shlb
and
cwtl
xchg
inc
mov
pop
xchg
push
lds
inc
and
and
sub
mov
and
push
dec
daa
jns
daa
imul
jp
mov
sub
out
adc
push
cld
inc
into
dec
ljmp
or
dec
xchg
inc
sbb
push
fiaddl
add
adc
out
movsb
daa
sbb
mov
sti
push
mov
aas
push
insl
enter
cmc
cmp
or
push
fldenv
aam
int3
int
fdivs
fstps
and
sub
cmpb
jg
pop
adc
sbb
jne
jle
cmp
xchg
dec
insb
mov
jl
and
out
pop
arpl
sub
rolb
dec
pop
out
icebp
adc
mov
notb
outsl
jno
out
mov
shl
adc
outsb
in
jne
mov
fstps
pop
push
icebp
cmp
jmp
in
mov
mov
outsl
movsb
jle
in
int3
movsl
xor
pop
inc
ss
outsb
cld
add
xlat
xor
into
test
xchg
gs
cmp
mov
sbb
in
xchg
and
cltd
adc
push
test
cltd
jle
jle
jns
sub
push
lea
xor
stos
and
xlat
cmp
sbb
jmp
fdiv
cmp
je
mov
xchg
mov
adc
push
ret
dec
outsl
outsb
sahf
xor
cmp
add
add
xor
cmpsb
sbb
cli
mov
mulb
mov
f2xm1
pushf
hlt
jmp
jb
pop
pop
or
mov
sbb
stos
cmp
mov
pop
cmp
push
add
dec
fiadds
mov
inc
add
pop
shlb
data16
sahf
pop
scas
cmp
or
ljmp
test
add
xchg
in
and
aam
inc
rcll
push
loope
add
mov
jl
leave
mov
push
dec
mov
clc
sub
clc
sbb
or
subl
inc
enter
mov
dec
push
pop
shll
jne
mov
imul
mov
mov
dec
iret
dec
shlb
cmp
xchg
je
sub
les
js
and
inc
sub
push
inc
rcrb
or
or
in
jg
mov
imul
mov
repnz
sub
mov
sub
add
pop
cltd
into
rcrl
mov
or
pop
cs
sbbl
inc
jo
push
popf
fcmovne
and
icebp
mov
lock
mov
mov
movsl
out
mov
gs
push
push
stos
in
cmp
xchg
out
sub
mov
das
in
pop
addl
es
insl
insl
sub
pop
mov
loop
mov
sti
jns
push
xor
fistpll
adc
imul
adc
js
xchg
imul
addr16
scas
cmpsb
mov
loope
mov
rorb
stos
test
cli
aaa
outsl
int3
test
fucomip
repz
pop
dec
dec
fwait
sti
fs
cmp
sub
pusha
aad
dec
stc
bound
sub
aad
jns
idiv
aam
sub
clc
nop
xchg
out
xor
jmp
and
push
sub
icebp
jg
jl
ljmp
mov
adc
dec
iret
adc
sahf
shll
loop
stos
iret
scas
pop
and
dec
or
std
mov
mov
movsl
fidivs
aam
fistpl
out
cmp
andl
push
cs
dec
icebp
xchg
xor
pop
push
inc
leave
nop
je
dec
mov
outsl
test
js
xchg
mov
into
mov
cld
xor
push
aaa
cmc
pusha
push
movsb
decb
sub
orb
xchg
mov
out
int3
jo
jl
mov
outsl
cmp
pop
enter
and
cmpb
aaa
dec
mov
daa
xor
sub
fildll
xor
push
jbe
or
mov
push
jne
xlat
sub
bound
sbb
dec
arpl
push
pop
fdiv
sar
and
int
inc
add
loope
push
fwait
in
pop
rclb
ljmp
cltd
pop
dec
scas
loop
nop
push
push
lods
mov
cmp
stc
xor
out
out
and
insb
repnz
mov
pop
jo
sarb
mov
mov
sti
fildll
mov
xchg
movb
ss
pop
pop
mov
xor
lods
shlb
xchg
iret
pusha
pusha
outsl
add
jo
inc
mov
fcmovb
leave
jl
jno
fwait
stc
push
fisubrs
mov
aas
bound
shll
leave
xlat
mov
lods
pop
into
js
mov
call
popa
jb
xchg
in
add
mov
xchg
sub
and
dec
popl
ret
lret
push
cmp
and
insl
mov
das
pop
xchg
sub
fstps
add
notl
add
jns
and
stos
lock
and
xchg
ljmp
std
out
arpl
mov
dec
adc
out
pop
mov
pop
les
xlat
stc
jbe
mov
jnp
push
adc
sar
pop
mov
jno
jne
fsts
mov
cmpsl
xor
ja
lock
mov
dec
inc
mov
mov
pop
jl
stos
scas
jmp
mov
call
fwait
sub
xor
mov
or
rcll
jo
pop
and
adc
lahf
dec
stos
jb
xchg
pop
fldl
gs
inc
xor
xor
enter
setle
jmp
scas
sub
xor
jg
rorb
stc
filds
push
jl
decl
sti
scas
xchg
ret
inc
cs
movsl
pushf
adc
mov
pop
in
clc
hlt
or
push
in
das
sub
mov
mov
mov
mov
push
mov
pop
insl
stos
jp
sub
dec
data16
sahf
jl
push
lret
sbb
add
sub
dec
jmp
stos
push
inc
scas
arpl
sbb
push
pop
in
mov
or
lods
cmp
mov
lahf
ret
stos
sub
cmpl
mov
call
cmpsb
pop
add
jecxz
or
jecxz
jbe
repz
adc
mov
jg
pop
and
lret
leave
ja
jle
add
push
or
jns
mov
mov
adc
jl
push
cld
mov
leave
jge
pop
xchg
pop
cli
test
pop
dec
xchg
mov
repz
imul
mov
subb
popa
pop
sub
fcmove
xor
mov
jecxz
xor
mov
pop
xor
dec
mov
mov
push
pop
or
out
ljmp
cld
mov
loopne
gs
add
pop
enter
fcoms
ss
adc
loop
icebp
filds
les
ja
popf
jecxz
add
cmp
adc
jecxz
sbb
shll
add
sbb
stc
or
push
mov
leave
inc
cwtl
push
mov
or
jp
cs
jcxz
pop
fdiv
sbb
xchg
sub
pushf
or
push
cs
icebp
pop
pop
leave
xchg
push
rorb
lds
dec
cmp
rcrl
iret
sbb
sbb
push
insb
jg
sub
mov
aas
or
fldt
les
mov
icebp
idivb
sar
lret
faddp
aaa
jbe
cs
sbb
xchg
stc
cld
dec
mov
pop
add
shr
sub
lea
inc
aas
mov
data16
mov
pop
add
std
decb
xchg
nop
and
int3
or
mov
fwait
sbb
sub
inc
xor
xlat
inc
or
mov
mov
stc
adcb
xchg
sub
stc
pop
sub
mov
adc
sub
add
and
mov
dec
sbb
incl
in
mov
xlat
inc
ds
mov
out
andb
out
test
jo
in
rclb
out
mov
sahf
add
xchg
push
hlt
inc
inc
and
daa
xlat
push
push
mov
and
and
or
or
insl
cmp
adc
test
cmp
mov
and
xor
stos
adc
jne
push
pop
aad
test
adc
jo
mov
outsb
xchg
sbb
push
sbb
jmp
imul
jge
xor
or
adc
sub
and
or
stos
xor
add
aas
in
pop
aaa
cmp
xlat
fnstsw
outsl
cld
mov
xchg
xlat
cmp
cmp
imul
clc
sbb
test
cmp
jnp
pop
cs
sub
pushf
arpl
ret
xor
popa
and
push
test
xchg
inc
mov
cmp
or
push
loopne
jmp
pop
lcall
inc
mov
dec
xchg
adc
stc
xchg
mov
ds
pusha
mov
push
in
mov
inc
dec
cltd
insl
rcl
add
pop
mov
nop
lods
repz
bound
loopne
push
sbb
shl
jle
shr
mov
mov
lock
int3
cmp
cltd
sahf
push
or
cwtl
ds
xor
sahf
aad
repz
sti
sbb
sbb
int
mov
add
push
shll
ja
mov
adc
adc
bound
xor
push
xor
or
xchg
adc
mov
mov
dec
mov
xor
std
add
xchg
pop
test
enter
mov
ficoms
out
cmp
iret
sbbl
mov
xlat
push
mov
cltd
addr16
test
das
cmp
int
adc
xchg
mov
imul
lret
pushl
lahf
sbb
je
and
dec
inc
cmp
gs
shlb
js
and
movsl
jmp
push
into
ds
out
pop
neg
daa
lods
fstp
and
ljmp
jge
inc
xchg
push
loope
out
pop
push
inc
pop
andb
shll
hlt
cmp
push
mov
in
inc
mov
cltd
fdivrs
push
out
pop
cli
xorl
adc
xor
aas
adc
mov
pop
xorb
xchg
push
mov
lahf
fsts
adc
addr16
fmul
push
adcl
inc
add
cmp
cld
cmp
daa
xor
push
sbb
lcall
out
js
and
sbb
dec
adc
lahf
daa
cwtl
add
xchg
lret
adc
mov
sahf
mov
cmp
arpl
and
fisttpll
test
js
xor
test
jne
mov
xchg
sahf
add
dec
jae
mov
cmp
test
xchg
dec
inc
cwtl
dec
cmpsb
pop
sub
ss
or
add
popa
mov
mov
mov
xor
add
and
icebp
icebp
jg
mov
push
and
mov
cmp
push
sub
cmp
aam
pop
mov
xor
movsb
sub
ret
ljmp
cwtl
cs
inc
jo
or
outsl
sar
dec
bound
popf
jb
push
std
mov
jno
sbb
movsl
inc
jecxz
mov
push
test
bound
lods
stos
mov
enter
aas
inc
mov
jnp
xchg
ss
rcll
in
mov
loope
xchg
sbbb
dec
es
or
mov
in
insb
cld
add
shrb
gs
adc
leave
mov
cmc
adc
test
dec
test
push
movsl
test
mov
push
inc
xchg
cmp
or
jbe
cmp
mov
inc
jno
repz
cld
xchg
lods
or
sub
packsswb
dec
daa
mov
aas
jl
cmpsl
cs
dec
stos
mov
add
mov
ss
daa
in
loop
bswap
cltd
jb
jl
cmp
data16
ss
push
enter
dec
mov
xchg
gs
or
lock
negl
mov
pop
sbb
push
dec
pop
stos
stos
cmp
inc
xchg
js
in
inc
movsl
dec
or
pop
dec
cmc
push
in
stos
outsb
outsl
cwtl
xchg
outsl
cmpl
pop
in
add
jne
jb
pushf
xchg
es
loopne
inc
push
inc
jbe
jl
sti
inc
in
jmp
mov
roll
dec
movsl
push
enter
or
add
mov
dec
mov
inc
test
call
dec
popf
out
loop
mov
jmp
xor
jo
adc
out
sbb
cmp
fwait
or
dec
ds
fwait
pop
cli
mov
mov
mov
or
sub
inc
dec
xchg
lods
cmp
or
inc
lret
out
pop
and
les
push
fisubs
cmp
mull
xchg
inc
cld
jo
mov
cmp
je
add
lret
pop
jge
imul
in
hlt
scas
xor
dec
fldl
ss
add
dec
pop
jbe
push
xchg
mov
lret
push
and
out
mov
stos
mov
mov
push
out
pushf
mov
repz
mov
mov
aam
movsl
fdivrl
int
imulb
jg
mov
mov
cmpsb
lcall
subb
in
push
ficompl
enter
shl
push
adc
in
dec
cli
loopne
pop
sub
sbb
lahf
mov
cli
or
cmc
xchg
or
jno
jb
xor
mov
rclb
stos
imul
dec
jl
and
cmp
gs
je
imul
mov
cli
jo
mov
jg
xchg
and
mov
mov
xchg
xor
xchg
fstpt
decb
in
inc
xchg
cltd
popa
lea
shr
adc
insb
rclb
popa
mov
or
push
mov
loope
loope
sbb
filds
fbstp
sub
jns
in
dec
pop
lahf
movsl
jnp
mov
icebp
popa
pop
sbb
and
in
nop
cld
jne
push
adc
dec
push
push
int
sarb
xchg
shlb
xchg
fidivl
mov
and
add
mov
jmp
push
lds
mov
cwtl
fsubrs
pop
lahf
cs
xchg
xor
xchg
sbb
push
scas
repz
pop
test
adcl
lret
cltd
icebp
or
jns
mov
sbb
repnz
jne
mov
push
xor
ret
pop
jne
cmpsl
mov
popa
mov
inc
test
cmp
xchg
push
sarb
xlat
sbb
mov
cmpl
mov
mov
aad
fsubr
cld
filds
dec
data16
sub
loope
mov
imul
pop
mov
divb
ljmp
sub
push
loopne
mov
dec
and
int3
imul
dec
fmulp
xchg
mov
or
push
sbb
ret
jb
ret
xor
test
push
dec
xchg
sub
divl
push
inc
xor
es
iret
ret
and
and
aaa
pop
loope
sub
mulb
pop
mov
fxam
xchg
mov
aad
mov
jne
test
lahf
mov
mov
repz
cmp
inc
in
pop
insb
ja
arpl
xor
jnp
mov
nop
pop
cmp
lea
inc
int
inc
or
inc
mov
mov
push
fidivl
jb
mov
xor
inc
lret
loope
mov
mov
mov
mov
out
sub
xchg
test
ja
mov
xchg
lods
loope
xor
jp
xor
leave
sub
push
mov
or
sub
pop
in
mov
loop
jge
rcr
xchg
in
stos
push
xchg
adc
cld
iret
jno
je
shrb
out
push
cmpsb
pushf
xchg
hlt
jle
jno
sti
sub
aas
adc
lock
xchg
cmp
fstpt
mov
cmpsb
out
mov
test
push
and
mov
jmp
sub
sub
mov
aaa
shlb
rcrb
mov
and
leave
and
lods
push
call
jnp
push
and
inc
into
or
xor
pusha
pushw
pop
xchg
cs
pop
aad
pushl
jg
stos
pop
xchg
in
jp
loope
xor
int3
popf
shlb
mov
lahf
sub
lea
mov
outsb
inc
filds
mov
cmc
sahf
lds
sub
or
cmpsl
xchg
xchg
loopne
push
aaa
stc
into
mov
xchg
imul
es
xor
jle
and
inc
adc
adc
decl
push
inc
daa
adc
and
fisttps
push
cld
and
aam
cli
mov
in
fidivrl
push
adc
mov
push
int
jae
dec
dec
in
shufps
in
cmpsb
repz
xchg
cld
xchg
stos
cltd
sub
lret
adc
clc
in
sub
out
fwait
mov
mov
push
mov
dec
icebp
scas
cmp
xchg
es
push
in
adc
push
sbb
dec
lret
lods
cmp
add
addb
inc
sbb
insb
cmc
out
dec
add
mov
aam
sub
lods
push
lods
sub
dec
lds
mov
or
add
add
lahf
shr
lcall
inc
loopne
fcmove
out
or
inc
and
arpl
loopne
sbb
add
xchg
and
popa
sbb
aam
test
cmp
icebp
pop
call
out
nop
addr16
jmp
ret
clc
ds
cmp
xlat
pop
and
fisttpl
subb
lret
adc
js
stos
repnz
jle
mov
lods
pop
pop
sub
enter
pop
in
xchg
inc
mov
xchg
jno
cmp
jecxz
mov
cmp
xor
or
inc
ljmp
lcall
cmp
pop
dec
or
les
sub
and
int
loope
dec
push
ret
fldl
mov
xor
fisubrs
outsl
cmc
push
xchg
xor
and
pop
sub
xchg
cltd
insl
inc
xchg
mov
mov
mov
sahf
fisubrs
mov
clc
sbb
xor
test
outsl
dec
in
pop
out
stos
sub
addr16
ret
div
cld
push
lret
fists
add
pop
jno
mov
adc
ret
mov
notb
loop
subl
sbb
or
adc
lea
jae
inc
loop
fbld
xchg
aad
pushf
imul
or
cld
and
push
mov
fidivrs
addr16
nop
fwait
and
mov
and
pop
and
xchg
inc
std
mov
sbb
movsl
dec
ds
nop
movsl
mov
fs
lea
pushf
nop
in
lret
inc
push
movsb
sub
repnz
dec
out
es
lock
xchg
bound
loopne
push
jb
test
lcall
inc
mov
fldt
jns
sbb
test
jb
mov
in
jns,pn
stc
bound
and
jle
divb
ja
outsb
adc
lahf
add
and
cmp
adc
sbb
ja
in
mov
xchg
rorl
xor
fistpll
ret
pop
pop
mov
inc
xor
or
cmp
jnp
out
mov
inc
sbb
dec
xchg
mov
xchg
fnstsw
out
dec
test
imul
sbb
popf
and
es
insb
lock
arpl
pop
clc
nop
repnz
jns
add
sub
shlb
test
mov
and
rol
inc
ja
dec
add
cmp
xchg
and
shlb
mov
testl
mov
xchg
in
mov
andb
hlt
and
mov
ds
sarb
outsb
push
inc
sub
sub
mov
jns
jecxz
xchg
in
daa
mov
test
icebp
mov
cmp
imul
int3
sbb
jns
dec
in
pushf
out
sub
xchg
cli
inc
lea
loopne
movb
nop
adc
sub
cmp
pop
pushf
lret
pop
push
pop
gs
dec
movl
aad
jno
mov
stos
movsb
push
push
imul
or
dec
mulb
mov
ljmp
push
sub
dec
xchg
mov
imul
xlat
pop
xor
cld
xchg
inc
movsb
gs
dec
loopne
xchg
lea
icebp
xchg
mov
push
pushf
icebp
xor
in
test
mov
cmp
mov
les
fsubs
mov
sbb
mov
shl
fcoml
mov
dec
pop
fs
or
clc
push
scas
std
inc
push
test
pusha
ss
lret
pop
pop
xor
push
dec
xor
test
jp
xchg
out
jno
mov
in
mov
popf
inc
stc
loope
lea
add
and
pop
int3
fucomp
mov
xor
xchg
out
fnstsw
and
int3
mov
stos
xchg
mov
cmp
or
cmp
pop
insb
jp
fidivl
int
cltd
dec
lret
jg
jge
push
mov
popa
fldl
push
pop
pop
int
push
stos
xchg
lock
adc
jmp
enter
or
mov
or
sahf
push
repz
and
fimull
xchg
pop
dec
loop
js
push
mov
xchg
xor
xchg
inc
inc
mov
gs
dec
push
add
sbbl
std
ljmp
sub
sbb
rcr
and
push
scas
push
pusha
xchg
cmp
leave
or
xchg
jns
sbb
jge
movsb
xor
mov
rcr
dec
sar
fsubl
int
sbb
lock
mov
fs
mov
repz
fistps
or
cltd
enter
cmp
pusha
push
pusha
stos
scas
pop
int
adc
icebp
xchg
adc
and
add
gs
mov
stos
pop
cmp
and
bound
sub
aas
and
xchg
shll
xchg
cld
cwtl
jb
notb
mov
out
or
pop
scas
pop
dec
add
ret
mov
cmp
xchg
pop
test
cmp
push
repz
add
jb
ljmp
pop
addb
cmp
mov
bound
insb
xor
cld
leave
inc
lcallw
ds
ret
xlat
fwait
push
sahf
mov
fadds
gs
jg
sub
xchg
shll
add
and
lock
adc
inc
sub
cmp
xor
scas
stos
addr16
mov
xchg
test
cmp
or
ja
js
inc
mov
pusha
ret
lahf
sti
mov
fldenv
aad
imul
add
jmp
lock
sub
movsl
loop
popa
and
pop
outsl
add
dec
dec
inc
xor
cli
xor
push
xchg
mov
cmpsb
inc
data16
push
mov
mov
ljmp
sti
jl
add
shrl
ljmp
lret
jbe
aas
sub
mov
cwtl
push
in
inc
sub
push
popf
mov
xchg
jae
mov
push
push
imul
sbb
nop
icebp
fildll
fwait
jmp
sbb
mov
imul
cmpsb
lods
sbb
aas
xchg
mov
nop
insb
mov
xor
pop
imul
shlb
out
in
push
gs
mov
mov
xor
movsb
stos
or
pop
dec
in
in
pop
or
pop
xchg
mov
cs
xchg
xor
xor
scas
inc
sub
mov
lret
dec
stos
ljmp
jb
cmpsl
movsl
jnp
aad
andb
into
add
movsb
sub
cli
cltd
push
mov
mov
call
movsb
out
int3
jnp
dec
mov
cmp
pop
int3
pop
sub
or
xchg
in
divl
jecxz,pn
mov
les
cli
pop
clc
test
ret
and
and
mov
imul
dec
add
aas
sbb
cltd
repz
inc
push
les
push
std
scas
push
aas
lods
movsb
stos
dec
push
call
out
push
or
cmpsb
xchg
fldpi
popf
mov
sub
mov
push
lcall
rolb
lods
out
pop
sbb
jg
xchg
dec
cwtl
jmp
imul
xchg
cli
and
jle
sbb
sub
push
aas
popa
push
ja
sub
mov
pop
gs
fcompl
sub
push
mov
mov
dec
and
xor
std
xchg
adc
int
cltd
lods
test
dec
fs
pop
iret
insb
adc
outsl
fwait
push
je
push
sbb
or
hlt
sarl
cmp
icebp
add
popf
and
adc
inc
lods
xor
in
pop
scas
mov
shrb
stos
sbb
in
jae
popf
mov
call
sbb
adc
push
xchg
outsl
jbe
loop
push
add
inc
inc
push
les
cmp
ror
in
cmc
loope
xor
lods
leave
mov
dec
nop
mov
jge
lahf
jmp
je
outsb
push
add
xchg
mov
inc
rclb
xor
shl
arpl
std
and
pop
and
and
pop
jns
cltd
push
mov
rcr
aad
push
loop
adc
xor
pop
push
pop
popa
cmp
fs
cld
dec
int3
add
cmc
pop
xchg
mov
cmp
dec
pop
xor
cltd
daa
cmp
push
inc
dec
aaa
dec
add
pop
jg
jnp
bound
xchg
add
aaa
inc
in
rolb
cltd
push
or
fld
xchg
mov
mov
pop
cmpsb
sbb
call
inc
nop
imul
outsl
lods
dec
inc
mov
mov
jge
ja
imul
mov
push
pop
mov
cmp
fs
lods
adc
lahf
adc
or
dec
or
mov
add
mov
pop
inc
stos
gs
xor
push
rorb
stc
popa
xchg
mov
jl
jg
sub
lahf
xor
cli
addr16
pop
mov
fimull
aaa
mov
divb
cld
lret
cmp
int3
and
clc
outsb
pop
fisttps
scas
cltd
cmpsb
fiadds
adc
movsl
jge
jg
mov
sub
stc
xorb
out
mov
inc
or
mov
and
pop
add
pushf
or
test
dec
adc
test
pop
int3
and
pop
shr
sub
out
mov
daa
jecxz
scas
jmp
lahf
inc
mov
and
push
loope
inc
mull
out
pop
es
lods
call
add
mov
or
repnz
das
pop
xchg
out
or
imul
jae
dec
push
mov
out
out
push
pop
add
cmp
dec
push
lret
jne
data16
adc
inc
cmp
dec
xchg
and
jp
push
ja
hlt
xor
sbb
add
test
xor
iret
mov
xchg
andl
mov
sbb
cs
cmp
adc
out
push
jb
cmp
fisubs
subb
jecxz
hlt
adc
loope
lods
dec
das
in
xlat
les
repnz
and
loope
nop
movsb
pop
out
push
nop
adc
add
ja
je
in
push
mov
sti
sbb
inc
lock
stos
fadds
out
repnz
pop
sub
out
js
xchg
dec
inc
sbb
sbb
jg
pop
and
cmp
sub
inc
js
js,pn
dec
xchg
cmp
ret
lret
cmc
push
out
push
repz
mov
loope
clc
das
sbb
mov
mov
sti
movb
adc
lock
ja
insl
fbstp
jge
mov
adc
adc
repnz
or
xchg
push
push
cmp
inc
pop
dec
mov
jo
adc
addr16
or
bts
mov
pop
mov
xlat
pop
insl
cmpsl
ss
xchg
je
and
out
pop
mov
cmpb
jne
mov
out
push
push
add
out
mov
cmc
jno
pop
xor
xor
mov
fs
lahf
incl
stos
jno
jp
dec
or
into
or
or
std
bound
lret
test
cmp
or
out
adc
test
js
mov
mov
in
xor
push
push
cmp
or
inc
add
pop
popa
fs
jg
in
int
push
xor
adc
into
or
cmp
pop
or
mov
sub
mov
jo
fimuls
sub
sbb
inc
sbb
js
push
inc
sub
fcmovb
out
gs
rdtsc
adcb
loopne
or
xchg
mov
mov
cmp
dec
inc
hlt
scas
lods
pop
xor
cli
pop
ja
loop
mov
lods
xchg
pop
xor
fisttpll
push
fs
fistpl
jne
or
ljmp
jl
cmpsb
and
jnp
sbb
mov
lea
js
xchg
jae
iret
pop
pop
std
add
push
push
mov
inc
jns
popl
das
mov
mov
inc
xor
mov
push
mov
mov
loopne
cmpsb
jmp
pushl
lods
cmp
xchg
fistpll
dec
daa
loopne
lret
add
jp
inc
popa
dec
mov
sub
xor
xchg
test
push
lahf
sbb
xor
fwait
or
jle
repnz
fs
inc
enter
bound
nop
push
out
out
add
cltd
cmpsb
push
std
inc
xor
mov
scas
inc
mov
iret
je
lret
nop
mov
push
and
jne
scas
mov
xor
pop
push
hlt
dec
inc
shlb
or
shrl
out
gs
xor
lret
out
mov
jb
inc
addr16
stos
inc
push
push
sbb
sub
bound
jnp
xchg
in
adc
lahf
mov
pop
xor
outsb
dec
out
les
xor
in
xlat
aas
dec
add
mov
loop
or
fcoms
jp
sahf
cli
insb
xor
ds
dec
pop
fiaddl
leave
push
dec
pop
dec
aas
push
mov
pop
in
xchg
mov
xchg
cmc
mov
sbb
mov
inc
int
mov
outsl
int
stc
sub
push
or
ret
mov
shl
lds
shll
push
repz
lcall
push
push
repnz
push
fdiv
roll
cwtl
dec
loope
out
xchg
lods
inc
inc
mov
add
mov
or
mov
adc
add
ljmp
mov
cmp
out
addr16
inc
scas
mov
aam
inc
add
mov
cmpsl
xchg
popf
in
addl
out
jmp
mov
enter
mov
inc
test
mov
inc
daa
sub
mov
out
je
jno
cmc
sarl
test
cmpsb
mov
inc
xor
in
sub
pop
popf
xchg
jns
push
mov
pop
and
jle
jmp
aaa
jbe
inc
call
jb
fsubrs
jbe
mov
mov
imul
fwait
or
adc
movsl
mov
mov
aam
lahf
sbb
inc
xchg
cmp
sub
add
push
jecxz
call
lds
cmpsb
ds
jecxz
jle
insl
outsl
cmp
and
scas
fwait
xor
mov
aam
or
inc
sub
shl
gs
mov
mov
push
sub
jbe
lock
das
testl
lret
inc
push
mov
xchg
dec
mov
push
pop
popf
lock
pushf
mov
push
repz
and
scas
insb
lods
fwait
mov
mov
nop
jge
mov
mov
inc
call
pop
popa
pop
cmp
pop
adc
loop
sub
and
ret
cmpsl
dec
stos
sub
pop
in
push
jne
and
es
loopne
jecxz
out
and
jmp
out
fwait
push
sub
mulb
sub
add
rorb
push
dec
test
sbb
adc
jecxz
test
push
test
rcrl
out
xchg
xor
mov
arpl
and
jecxz
push
jmp
out
in
push
imul
pop
pop
jno
cmpsl
jge
xchg
pop
sbb
clc
pop
mov
sub
int
fsubl
cmp
jmp
cmp
in
sti
int3
push
std
roll
rcll
adc
insl
sub
fstl
sub
adc
out
lea
dec
xchg
aam
repz
in
cmp
mov
cmp
outsl
iret
add
pop
mov
inc
dec
icebp
jle
adc
xor
mov
inc
repnz
outsb
stos
inc
push
mov
movsb
and
repz
cmpsb
jbe
testl
mov
loope
mov
rorb
dec
pop
mov
je
ds
rorl
xor
mov
mov
mov
fs
daa
xor
hlt
adc
inc
and
decb
jns
call
inc
sahf
insb
push
push
inc
pop
mov
mov
shll
pop
addr16
jmp
fucomp
cmp
cmp
int
testb
cli
rcr
mov
fdivs
cli
in
dec
stos
out
fwait
out
aaa
sbb
add
sub
ds
test
clc
dec
mov
pop
js
sti
add
xchg
xchg
dec
dec
mov
fcoms
out
in
in
data16
sbb
inc
ror
pop
add
push
mov
sub
scas
sbb
ljmp
mov
xor
aam
int
push
mov
xchg
fsubrl
ja
cs
lods
and
jbe
ja
mov
adc
fdivrl
dec
or
mov
stc
sbb
jne
aam
add
rcrb
push
xchg
xor
movsb
mov
cltd
sbb
mov
add
cmp
mov
cmp
jg
sbb
jecxz
push
dec
sub
in
adc
xor
jbe
and
push
xor
pop
ja
pop
outsl
out
cmp
clc
shlb
mov
and
out
xor
pop
loope
pop
or
mov
dec
inc
leave
sti
daa
push
pop
iret
and
push
and
daa
push
test
outsb
pusha
xchg
sbb
push
mov
sahf
test
sub
mov
dec
xchg
rcl
inc
jne
scas
and
add
shrb
cli
dec
inc
out
inc
lcall
sub
inc
imul
cs
mov
dec
pop
cmpsb
and
jne
add
xor
add
push
jb
sbb
mov
sub
xchg
aaa
out
mov
icebp
imul
mov
int
mov
or
cmp
cmpsl
test
and
mov
mov
imul
adc
inc
push
adc
or
jge
mov
in
mov
mov
enter
cmpsb
push
lret
adc
iret
les
adc
mov
xor
lcall
push
jo
jne
sbb
nop
cli
shlb
mov
cli
fcomps
andb
pop
pop
or
mov
ja
pusha
incb
mov
pop
dec
mov
das
clc
and
mov
jmp
in
ja
push
sbb
mov
sbb
out
mov
sub
sbb
xchg
lds
inc
in
addr16
data16
sub
jge
xor
pop
pop
push
rorb
and
es
stos
sbb
or
jg
nop
sub
mov
sbbl
inc
mov
xor
outsl
ds
test
lods
outsb
adcb
dec
jle
fmull
xchg
sbb
sub
dec
out
and
loop
in
and
pop
push
mov
add
lcall
jo
sarb
insb
add
or
fmull
and
rcrl
dec
jbe
in
mov
mov
movl
push
popa
dec
in
lret
gs
inc
cmp
pop
sub
andb
bnd
mov
sbb
sti
mov
sub
icebp
mov
sbb
in
pop
or
xchg
icebp
je
and
or
xchg
jb
adc
mov
aam
insb
push
sub
mov
dec
mov
mov
xchg
cmp
movsb
and
pop
hlt
sub
test
xchg
jne
cmp
outsl
mov
in
mov
push
mov
push
mov
nop
loope
lret
repz
mov
sbb
cmp
or
cs
and
call
imul
loopne
ljmp
out
arpl
push
xor
dec
cmpsl
hlt
xchg
mov
int3
mov
sbb
int
xor
cmp
loopne
xor
push
push
xor
outsl
mov
jg
xor
and
mov
sbb
fs
push
xor
jg
push
xor
sahf
es
ja
out
mov
lock
add
fisubl
scas
lock
stc
lods
insl
mov
mull
cmp
dec
ds
or
test
rcl
or
pop
lock
cmp
dec
mov
mov
adc
arpl
or
cmp
push
pusha
adc
jle
cmp
mov
cmp
fcmovb
pop
in
es
mov
fnstcw
fwait
es
mov
sub
clc
imul
sarb
ficomps
jle
mov
fistpll
lds
sbb
out
pop
mov
call
add
push
loopne
fsubp
in
addr16
test
cmp
testb
popa
cmpsb
aaa
add
lods
push
mov
lret
inc
nop
mov
mov
lds
xchg
cmp
aam
fbld
xchg
pop
jo
cmc
push
mov
mov
ret
add
adc
sub
push
loop
xor
sbb
bound
test
mov
xchg
pop
adc
mov
push
packssdw
ljmp
rorl
pop
nop
incl
mov
scas
pop
inc
and
jb
pop
loopne
fcomps
xchg
fwait
adc
sbb
fwait
outsb
jae
es
jo
jns
pop
loopw
in
adc
sbb
lcall
lcall
cwtl
loopne
mov
jns
orl
cltd
mov
js
xor
dec
xor
jne
jg
pop
or
mov
mov
imul
xchg
fdivrs
push
sub
movsb
ss
jns
fldenv
int3
adc
rcrl
push
jne
cld
daa
fidivs
out
ret
jo
rcrl
pop
push
std
inc
je
xor
rorb
jbe
sub
xor
in
inc
ljmp
cmp
ds
cmp
mov
jmp
int3
leave
rcll
or
inc
rolb
stos
std
xchg
dec
rolb
jno
test
cmpsl
leave
orl
hlt
push
xchg
cs
push
icebp
faddp
lcall
add
jp
pushf
dec
pushf
inc
shl
cmp
mov
and
dec
pop
push
movsl
add
fsubl
dec
mov
push
pop
sub
fbld
aaa
repnz
mov
or
scas
ss
out
int3
pop
dec
clc
mov
mov
ret
mov
pop
sbb
test
push
pop
inc
pusha
sbb
and
in
lds
push
pop
xchg
inc
movsl
testl
cmp
or
jne
lods
lahf
sbb
xor
stc
loop,pt
adc
mov
data16
push
push
les
mov
icebp
or
stos
mov
mov
dec
sti
and
cmp
push
jae
mov
cmp
test
xor
pop
mov
hlt
cwtl
sub
notb
mov
push
sbb
out
xchg
notb
push
xchg
or
jl
call
pushf
adc
mov
xchg
inc
fwait
lods
push
pop
fbld
out
je
cwtl
xchg
es
mov
mov
add
mov
jae
jl
in
pop
sar
testl
insb
lcall
adc
mov
leave
aad
jg
out
dec
xchg
add
into
or
cmp
jl
pop
icebp
and
fbld
xchg
push
mov
lcall
mov
inc
je
out
out
ret
mov
repnz
push
xchg
mov
or
cmpsl
inc
or
jbe
inc
adc
lock
sti
jo
pop
das
andb
xor
inc
mov
pop
in
jae
mov
or
addr16
scas
and
sarl
pop
mov
in
aam
aas
push
bound
popf
or
dec
jnp
mov
rcrl
adc
popf
sti
mov
pop
push
and
sub
add
and
dec
out
movsl
ss
out
jns
test
int3
mov
mov
aaa
mov
call
cs
mov
fdivrs
lcall
arpl
inc
xlat
jmp
jg
mov
inc
daa
jmp
pop
mov
adc
and
xor
shrb
or
lret
and
pop
add
push
lahf
sub
cmp
data16
stc
out
ss
xor
dec
ret
xchg
rorl
test
mov
ljmp
enter
mov
jno
and
popa
pcmpgtd
js
sbb
sbbl
xor
add
pop
insb
or
dec
popa
jmp
ret
sbb
mov
mov
aas
test
xor
int
push
push
shll
mov
test
cmp
xlat
sub
xor
pop
in
cmpsb
dec
icebp
ljmp
imul
cs
xor
hlt
outsb
mov
test
cld
imul
ds
outsb
and
mov
jl
pop
shlb
adc
js
dec
or
or
pop
add
xorl
lock
pop
es
mov
sub
inc
mov
push
xor
les
fwait
outsl
vunpcklps
mov
and
loopne
repz
jmp
sbb
xchg
fimull
add
lret
addr16
push
adc
bound
push
test
mov
fiadds
repnz
in
cmp
jmp
lods
mov
sbb
leave
pop
push
xchg
aaa
imulb
shl
into
push
repz
adc
jmp
fisttps
lret
xchg
xchg
jecxz
jo
fnstcw
call
mov
dec
aaa
mov
push
cmp
add
repnz
sbb
and
add
fiadds
pop
inc
ret
push
jbe
xor
adc
jecxz
push
je
inc
scas
push
dec
inc
push
mov
mov
mov
out
mov
mov
pop
repz
cmp
fildll
repz
das
inc
dec
sub
sahf
jae
in
cmp
jecxz
adcb
movsl
inc
sbbb
mov
mov
pop
dec
aaa
addr16
xor
mov
lret
adc
adc
jnp
inc
sti
mov
rorl
mov
cmpsb
jg
loop
cmpsl
lds
sbb
shlb
divb
xchg
jb
jns
in
sub
xchg
add
add
fisttpll
idivl
push
jl
sbb
push
xchg
mov
mov
sub
shld
std
idivl
lcall
jg
loope
adc
dec
or
enter
sub
jnp
pop
push
jo
mov
mov
dec
mov
sti
test
je
dec
or
mov
incl
mov
cmp
inc
jb
dec
bnd
test
daa
cmpsl
jne,pt
xlat
stos
push
sbbl
cmc
pop
pop
popa
sub
xor
shlb
pop
mov
pushf
out
cld
repz
stos
lret
inc
add
ret
call
mov
pop
in
lret
ss
pusha
sbb
xchg
mov
std
outsb
test
out
adc
pop
add
ficoms
leave
dec
mov
dec
fidivl
xchg
imul
mov
adc
push
inc
loope
js
addr16
aaa
cwtl
shll
fcompl
or
rcrl
sub
push
sbb
fbld
mov
lock
sbb
int3
adc
push
xlat
fcomps
xchg
rcrl
es
mov
std
sti
test
pop
daa
ss
cltd
lds
cwtl
loope
add
sbb
mov
and
jg
xor
xchg
lods
dec
mov
dec
cld
pop
mov
shrb
jp
mov
jge
lahf
aam
and
shl
sarl
aas
sti
or
pop
inc
push
movsl
aas
ret
mov
mov
adc
test
add
sbb
push
inc
outsb
jg
mov
jmp
xchg
das
stc
lea
lret
dec
daa
icebp
repz
xchg
rcl
jbe
push
popf
add
mov
repz
mov
xchg
dec
mov
xchg
sbb
jae
hlt
inc
mov
push
out
jae
mov
sub
dec
lret
sahf
adc
jno
loop
jecxz
xor
scas
jmp
push
leave
sub
in
push
imull
cli
test
jp
fidivrs
pop
xor
pop
test
outsl
adc
stc
pusha
fistpll
and
push
sub
add
xchg
lods
jo
call
add
push
lods
pop
dec
cmpsl
sbb
mov
pop
dec
push
jnp
out
sub
pop
xchg
shlb
or
test
loop
testl
and
mov
mov
scas
and
fiaddl
jnp
arpl
add
icebp
mov
and
sub
arpl
fs
in
lods
add
mov
xchg
fisttps
push
cmp
dec
push
test
mov
cmp
cmp
int3
in
mov
pop
cmp
leave
and
ror
cmpsb
pop
pusha
or
mov
pusha
testb
fistpl
int3
mov
adcl
mov
adc
outsb
or
cmp
jle
mov
mov
or
sub
push
mov
lock
xchg
loope
sbb
mov
fdivr
insb
pop
push
push
mov
inc
push
push
mov
mov
in
hlt
outsb
or
pop
setg
ljmp
lret
xorb
push
jmp
idivb
repnz
outsb
adc
xchg
cmpl
or
ds
xchg
les
mov
rcrl
jno
jbe
pop
cmp
ds
clc
add
aad
mov
push
pop
movsl
mov
fsubs
mov
dec
addr16
dec
pop
ret
lcall
or
cmp
mov
data16
pop
stos
mov
bound
loop
xchg
pop
lock
push
inc
sub
aam
sbb
mov
xchg
sub
popa
and
out
ljmp
mov
sub
cmp
shll
stc
ja
test
jp
enter
or
sahf
cmp
fdivl
xchg
lret
rorb
jb
lret
dec
jle
push
sub
iret
in
xor
mov
ret
sbb
add
add
test
shl
mov
test
movsl
mov
icebp
lret
stos
int
mov
loope
hlt
stos
iret
movsl
pop
cmp
test
mov
cs
mov
std
sahf
js
fstl
es
repz
into
ljmp
icebp
popf
mov
testl
ret
ret
notl
or
call
push
xchg
push
mov
icebp
xchg
jo
mov
or
test
and
adc
adc
pop
int3
mov
lods
sbb
insl
lds
mov
adcb
lock
xchg
dec
popa
in
test
inc
pop
rcrb
dec
jmp
pop
fiaddl
icebp
in
fdecstp
out
adc
xor
test
mov
mov
push
into
loopne
mov
dec
outsl
add
cltd
push
enter
out
mov
push
push
dec
add
push
inc
and
leave
mov
mov
scas
test
loope
sbb
imul
push
rorb
or
in
mov
int3
das
xchg
xchg
xor
das
test
sub
xchg
pop
das
or
inc
cmp
sbb
jle
cld
push
push
scas
shll
mov
test
lret
dec
fisubl
jo
sub
ficompl
and
push
dec
not
push
mov
movsb
hlt
int
cmpsl
mov
inc
push
loopne
mov
sub
inc
mov
adc
lcall
sbb
xchg
pop
addr16
and
lret
sbb
xor
aam
push
loopne
mov
std
cmp
cmp
pop
nop
sbb
dec
and
jmp
push
outsb
xchg
and
mov
and
sub
out
adc
shrb
pop
or
or
loop
xchg
cmp
arpl
movsl
jb
aam
sub
mov
jo
jbe
dec
or
mov
ret
pusha
mov
icebp
int3
pop
jne
and
lods
add
es
pop
cmpxchg8b
int
adc
dec
das
popf
pop
inc
jl
xchg
sbb
xchg
movsl
loope
imul
add
and
out
outsl
mov
icebp
ds
shrb
negb
pop
imul
outsb
jp
rorb
inc
fwait
adc
lea
int
lahf
cmpsb
pop
sbb
push
out
cmc
adc
dec
in
mov
fcmovne
xchg
inc
fwait
mov
test
inc
test
lret
call
pushf
or
or
aam
xor
and
fwait
pop
sub
out
fists
stos
in
mov
and
sub
fistpl
imul
leave
push
fdivrs
and
cwtl
dec
mov
out
add
adc
stos
je
xor
cmpsb
test
sub
add
mov
pop
fiaddl
mov
add
pop
jne
sub
add
or
xor
addr16
bound
pop
stos
or
xchg
xor
push
or
xor
sbb
ss
add
movsb
icebp
inc
addr16
mov
jg
push
test
adc
and
cmp
das
sbbl
xchg
lret
mov
jae
add
push
push
and
loop
pop
scas
mov
iret
pop
movsl
into
mov
cmp
dec
and
mov
adc
cwtl
icebp
mov
enter
loop
jno
bound
push
loope
dec
mov
je
addb
es
jb
scas
push
fildll
xor
test
lods
mov
lods
xchg
std
call
fiadds
xchg
sbb
int
sub
jl
sbb
jo
inc
imul
xor
xchg
mov
movsl
push
adc
lret
mov
mov
push
in
xchg
push
addr16
xchg
jle
popa
push
jbe
daa
aad
xor
lods
cmpsb
repnz
movsb
xchg
call
imul
add
es
ret
sbb
mov
cmpsl
sbb
adcl
add
addr16
mov
orb
pop
dec
fcomps
test
sbb
and
cmpsb
clc
stc
pop
aad
and
xchg
mov
ret
cmpsb
iret
sti
repnz
sbb
les
jno
add
into
adcb
xchg
adc
mov
cmp
xchg
test
or
sbb
fbld
jns
lret
and
pop
cs
loopne
mov
mov
jns
inc
fimull
jle
in
scas
cmp
inc
negb
cmpsl
cmp
out
push
push
daa
mov
roll
push
pop
pop
jl
dec
inc
xlat
adc
gs
in
sub
iret
pop
inc
fbstp
push
lods
xor
pop
ja
cli
imul
adcl
in
and
adc
dec
scas
mov
jbe
movsl
sbb
inc
cmp
stos
xlat
cwtl
mov
xchg
cmp
pop
or
fistpll
bound
jns
mov
dec
jae
add
and
mov
cmp
mov
scas
dec
fisttpl
in
adc
ss
es
mov
sub
loope
mov
mov
fstpt
mov
jns
addr16
ror
mov
push
pop
push
je
push
push
enter
xor
lock
out
add
push
notb
das
xchg
jle
nop
or
sub
fnstcw
sbb
mov
stos
add
cmp
sbb
addr16
mov
mov
pop
push
addl
bound
push
and
in
pop
rcrb
loopne
xorl
ret
pop
sub
and
mov
and
lcall
sub
out
add
sub
and
ds
and
movsl
adc
pop
fdivp
xor
imul
fs
pushfw
data16
repz
cmp
pop
mov
adcl
les
push
or
pop
and
cltd
cmp
adc
cs
sbb
jl
xlat
jb
xchg
mov
adc
dec
add
mov
test
repz
andl
out
cmp
in
movl
dec
shll
rol
cld
jg
ss
sbb
pop
jo
inc
mov
xor
push
add
insl
sub
mov
xor
aaa
jle
out
xchg
mov
scas
pusha
arpl
outsl
mov
lret
mov
loope
push
inc
enter
ja
testb
jmp
add
pop
popa
mov
les
negl
sbb
adc
outsl
es
add
jbe
std
outsl
inc
pop
xchg
comiss
mov
push
aad
jmp
jg
adc
lahf
push
nop
xchg
xor
and
dec
inc
sub
fcmovnu
jp
xor
dec
ret
es
push
cmc
mov
push
cmc
push
pop
call
jbe
push
inc
dec
call
dec
inc
sub
jle
inc
cmp
scas
inc
pop
dec
inc
daa
mov
or
cmp
jne
pop
or
push
mov
cwtl
ret
sarl
pop
xor
push
std
and
dec
xor
sbb
ss
mov
or
out
mov
and
fsubrl
test
push
lods
mov
inc
xor
dec
sti
pop
or
je
xchg
mov
jp
aaa
lret
mov
sbb
js
dec
icebp
loope
inc
lcall
mov
fildll
sub
pop
aas
jb
outsl
fcomps
cmc
mov
xor
add
lods
jns
mov
in
dec
lods
int3
lock
push
pop
lods
cmpsb
ljmp
inc
lret
adc
lcall
into
fidivs
dec
int3
push
inc
out
adc
inc
jecxz
icebp
dec
mov
nop
cmpsb
lret
in
mov
test
cmp
pop
mov
sub
mov
fs
sbb
mov
loope
lea
xor
ss
dec
out
sub
sub
fucompp
mov
into
mov
sub
iret
rcll
xchg
and
jo
or
or
test
int3
stos
pop
loopne
cs
out
xor
xor
jmp
imul
adc
mov
sarl
jg
std
fisubs
out
enter
mov
cmp
jne
cmp
je
stc
push
out
add
push
lret
jmp
aam
pusha
mov
das
lret
inc
xchg
fadds
cltd
pusha
aaa
fldl
shr
push
ds
pop
gs
jp
sar
std
cmpsl
jb
testb
dec
shlb
dec
ret
add
dec
jmp
push
sbb
in
popa
popf
cmp
cmpsl
jae,pt
fdivs
xchg
pop
mov
ret
adc
cmp
subl
inc
or
lcall
out
repnz
push
push
cmp
sub
jmp
jnp
mov
add
mov
cld
cli
mov
dec
mov
test
movl
pusha
lret
cli
xor
mov
pushf
push
mov
sbb
mov
lods
test
push
inc
dec
inc
xrelease
push
cmc
shr
int
sub
inc
rorb
sbb
sti
cmpsb
je
jp
fwait
jecxz
lcall
jecxz
das
xchg
dec
mov
aaa
int3
aad
lret
clc
scas
es
in
js
shlb
shrb
cmpsl
aam
mov
iret
pop
inc
xchg
pop
dec
cmpb
adc
mov
sbb
andb
into
enter
sub
mov
adc
testl
jmp
lods
add
je
jecxz
inc
or
mov
pusha
in
cmc
mov
lods
xchg
popl
fidivrs
xor
push
fsub
icebp
adc
sub
xlat
cmp
mov
cmp
mov
xchg
ret
aad
pop
in
dec
sbb
add
mov
push
xchg
fstl
mov
stc
daa
adc
cmp
jmp
rcrb
mov
fists
stos
mov
fcoml
out
lock
xchg
jb
push
sti
jl
je
rclb
sub
dec
xchg
sub
cmp
scas
lods
sbb
aad
addb
rcrl
mov
enter
fildl
fimuls
pop
cmc
das
lahf
out
jnp
mov
pmaddwd
pop
repz
push
icebp
cmp
mov
outsl
and
mov
xchg
sub
lret
jne
loopne
add
or
pop
add
scas
in
icebp
in
xlat
jge
xlat
mov
je
add
daa
cwtl
inc
xor
rorl
add
mov
add
data16
call
or
xor
jmp
push
xor
or
add
cmpsl
sub
fistps
pop
fidivrs
xor
xchg
add
or
dec
inc
xor
lods
sti
xchg
idivl
push
xchg
jns
inc
xlat
xor
cmpsl
int
ficoml
mov
mov
lock
and
mov
or
adc
enter
fstps
sahf
pop
add
ret
and
jbe
dec
lret
cmp
imul
push
push
or
inc
sub
aam
fstps
mov
loopne
leave
jno
cmp
clc
push
scas
cmp
jb
fsts
mov
pusha
mov
cmp
pop
sarb
xchg
xchg
movsb
push
adc
sub
std
xchg
popf
or
pop
fptan
dec
xchg
sbb
aam
iret
test
adc
aad
mov
das
xchg
fistpl
jae
js
mov
xor
adc
gs
test
movl
push
pop
inc
mov
mov
pop
in
pushf
jns
or
mov
pop
pop
lret
aam
sbb
lret
xor
gs
cmpsl
lretw
push
fcompl
mov
jb
cmp
cltd
bound
xor
aaa
ret
into
popa
jp
jmp
hlt
in
cs
xor
popa
push
xor
sbb
loope
add
lret
neg
xor
pop
out
jae
jb
mov
faddp
bound
insb
daa
ret
hlt
cmp
gs
push
dec
insb
pop
rcll
add
mov
rcll
xchg
shl
in
add
pushf
enter
popf
arpl
sti
push
scas
pop
pop
out
daa
cmpsl
jle
inc
jns
rolb
jbe
cmp
mov
out
xchg
test
fnstcw
mov
xor
sub
rcrb
dec
jge
sub
test
add
aad
aaa
sub
pop
jge
sub
addb
sub
xchg
inc
sub
sbb
pop
cli
adc
aam
mov
lahf
roll
mov
inc
ds
movsl
test
rorl
add
aaa
movsb
mov
and
aam
in
fwait
loopne
jecxz
pop
fimull
jl
jle
cmp
xchg
or
insb
dec
add
pushf
ret
mov
or
mov
lods
repz
add
or
pusha
and
dec
jno
int3
mov
or
es
mov
xchg
repz
sub
mov
add
test
xor
sbb
jge
inc
shrl
push
and
outsl
ror
add
test
in
outsb
dec
cmp
sbb
jl
sbbl
cmp
movsl
xchg
insl
dec
and
loop
out
mov
sbb
mov
pop
dec
daa
in
jmp
repnz
xor
adc
sbb
rcrl
daa
rol
cmp
negb
mov
ja
stos
int3
pop
mov
push
rolb
jecxz
inc
mov
addl
repnz
movsl
pop
mov
in
sbb
mulb
sarb
sub
stos
loopne
addl
jno
xor
inc
xor
clc
cs
and
ffree
inc
les
aam
sbb
das
ljmp
xchg
call
and
push
or
cwtl
addr16
and
cwtl
test
les
jl
lahf
xchg
cmp
dec
add
mov
push
mov
mov
sbb
cld
adc
lock
dec
nop
loopne
das
stos
into
ljmp
mov
add
sbb
mov
lds
cmp
fstps
hlt
jmp
adc
cli
fwait
cmc
jp
aam
xor
stc
mov
ds
stc
jge
jmp
push
les
pop
lea
mov
xchg
or
ret
sbb
push
fidivrl
loop
jmp
ret
and
shrb
jae
mov
imull
pop
push
pop
lods
jle
lahf
shlb
out
stos
rorb
mov
ficomps
inc
adc
jg
cmp
lret
adc
xor
mov
dec
add
cmp
adc
fs
push
cmp
add
fistpl
and
add
sub
xor
test
pop
fmul
sbb
inc
ss
cltd
fcmovb
imul
in
push
sti
add
int
add
mov
mov
outsl
ja
push
pop
cmp
mov
cmp
outsl
lahf
mov
es
or
xor
cmpb
xlat
and
fadd
les
jg
out
xchg
mov
cmp
sub
pop
dec
testl
inc
cmc
mov
arpl
mov
clc
push
mov
mov
jns
mov
mov
pop
mov
test
fwait
jne
push
add
adc
outsb
or
js
mov
adc
pop
push
ljmp
leave
mov
shrb
add
mov
mov
xor
fnstsw
aas
int3
inc
lret
jl
aam
into
ja
imul
outsl
inc
mov
repnz
lahf
outsb
popf
psubsw
cmp
mov
dec
or
ret
add
out
stos
insl
and
lock
loopne
xor
mov
xor
sti
lahf
jl
outsb
xor
fisttpl
push
add
gs
outsl
mov
hlt
fcoml
lds
js
cli
push
ficoml
and
inc
add
ds
jge
mov
xlat
cmp
mov
aam
mov
sub
cmpsl
je
mov
add
frstor
aam
je
stc
inc
mov
adc
fdivl
inc
test
and
cmp
stos
mov
aaa
adc
pop
add
sub
cmpl
push
mov
mov
cld
test
cmp
insl
dec
pop
adc
out
cwtl
pop
xor
mulb
sar
scas
das
arpl
arpl
jp
and
jmp
mov
imul
or
stos
stos
mov
adc
and
lods
loop
adc
fidivl
popf
cmp
cmp
lds
bndldx
dec
jecxz
loop
mov
pop
ljmp
faddl
cmp
sub
mov
dec
hlt
push
pop
sarl
or
pop
push
mov
mov
roll
sbb
aaa
mov
fdivrp
arpl
mov
movsb
fwait
xor
cmp
loope
mov
arpl
std
and
in
fucomi
xor
sti
lahf
dec
sti
or
nop
push
mov
jo
or
jecxz
lods
add
mov
cmp
scas
scas
sub
arpl
xchg
mov
push
popa
fdivrs
incl
dec
js
cmp
pop
mov
push
aam
les
lahf
xchg
les
rclb
ljmp
xlat
testl
xchg
mov
xor
sahf
mov
inc
daa
dec
incl
mov
cmp
jge
mov
sbb
or
out
xor
ljmp
cld
push
mov
sahf
adc
cltd
test
cmc
mov
dec
scas
xor
clc
test
icebp
mov
ja
push
ljmp
dec
call
rcrb
mov
fidivs
sub
nop
addb
xorl
in
push
in
inc
mov
loopne
and
cmp
xchg
lcall
jle
arpl
xlat
jge
inc
dec
cmpsb
or
cli
pop
and
xor
mov
add
lret
jmp
inc
out
in
inc
outsb
out
repz
sub
push
mov
roll
push
out
je
fsub
cmp
sahf
and
push
pop
enter
push
pop
call
data16
cmp
inc
dec
cmpsb
fidivrl
xor
ficoml
push
mov
and
rclb
icebp
inc
xor
dec
adc
frstor
cmpl
scas
scas
out
push
loopne
test
mov
pusha
push
bound
mov
lock
push
scas
mov
pop
fwait
jb
repz
mov
loope
ret
dec
xchg
cmp
hlt
lcall
sub
into
cs
jns
test
fldenv
xchg
gs
pop
xchg
cmp
jge
or
popa
xchg
cmp
or
pusha
aad
stos
inc
test
adc
xchg
push
pop
add
xchg
push
inc
sub
inc
fmuls
and
mov
pop
outsb
dec
and
or
cltd
andb
xchg
pop
push
popf
sbb
jmp
xor
insb
dec
test
pop
xchg
iret
movsb
jp
pop
fnstenv
inc
and
sbb
mov
dec
js
roll
jno
mov
sbb
das
lea
in
jmp
rcrl
pop
push
call
lea
int
fs
sbb
shr
inc
pop
lahf
pusha
loopne
pop
mov
push
cmp
imul
jge
inc
sti
fbstp
mov
push
inc
fcoml
add
jecxz
out
xor
mov
push
int3
cmpb
fistps
je
bound
jmp
adc
nop
mov
mov
mov
ret
out
push
push
or
xchg
add
imul
cmpsb
xchg
dec
dec
fwait
inc
out
incl
mov
or
jmp
jle
int3
cmp
stc
sub
push
pop
mov
aas
jae
aam
aaa
xchg
add
pop
or
call
and
pusha
or
lods
inc
and
imull
dec
push
jnp
push
dec
or
mov
aaa
fstp
das
xor
fbstp
mov
jae
cmp
inc
add
add
sbb
js
pop
iret
mov
push
addr16
ror
push
xchg
fisttpll
push
pushf
xor
or
and
and
pop
adc
leave
pop
push
dec
rorl
btc
inc
aas
and
andb
push
fcomi
lock
ret
sub
das
inc
sbb
sti
mull
pop
xchg
iret
push
adc
or
adc
pop
out
sub
test
mov
mov
and
push
jmp
cmp
rcrb
lods
fmull
inc
xchg
enter
xchg
push
push
fwait
test
gs
xchg
jb
jmp
imul
add
popa
int3
popa
cmp
das
ss
sub
mov
pop
xor
int3
push
pop
jae
adc
xlat
xchg
push
cmp
mov
mov
out
insb
xchg
insb
inc
jo
xchg
and
nop
sbb
mov
imul
adc
pusha
inc
mov
jp
mov
imul
mov
xor
sub
inc
fdivrs
push
sub
jno
adc
mov
mov
pop
lock
out
sub
pop
pop
dec
pop
adc
pop
cmp
repnz
jns
cltd
rorb
fsubs
xchg
fwait
and
iret
adc
inc
fbstp
pmaxsw
cmp
adc
sub
mov
inc
or
mov
js
cmc
lods
mov
add
outsb
add
adcl
dec
xlat
inc
out
aaa
inc
out
ds
mov
adcl
push
cli
movsb
arpl
hlt
outsb
addr16
sti
mov
jl
jb
and
sub
adc
ljmp
jl
jb
das
add
fldcw
adc
pop
repz
pushf
pop
in
pop
sub
out
clc
mov
lret
add
mov
and
add
adc
sub
sbb
outsl
cmpb
pop
les
mov
jmp
cmp
mov
fildll
lods
lcall
mov
mov
push
lock
test
sti
dec
inc
push
mov
mov
fidivs
scas
pop
mov
scas
movsb
ljmp
mov
stos
sbb
rcr
pop
insb
jge
push
inc
clc
sbb
sbb
data16
loop
xlat
xchg
lods
jo
fiaddl
sbb
sbb
sbb
jb
cld
shrl
mov
push
push
icebp
adc
cmp
je
add
adc
jl
mov
iret
and
sti
xchg
call
mov
insb
loopne
stos
mov
and
mov
data16
push
in
clc
xorb
aam
outsl
jp
imul
push
push
outsb
neg
or
stos
dec
push
fisubs
xchg
mov
inc
mov
lods
push
inc
test
sub
rcrb
imull
push
leave
sti
jne
mov
inc
adc
mov
and
js
cmpsb
ud1
adc
mov
mov
xchg
sbb
lea
adc
pop
std
lcall
mov
cmp
inc
repz
call
mov
jno
shrl
sahf
push
rorb
sarl
fistpl
or
nop
add
insl
xchg
mov
jbe
adc
adc
je
sub
cmp
lods
pop
insl
cwtl
hlt
dec
or
in
outsb
fnstsw
xchg
and
les
outsb
pop
xchg
push
or
mov
clc
rcll
lret
jo
daa
es
add
push
cltd
sbb
cmp
jno
sbb
ret
ds
inc
jnp
in
sub
push
push
iret
sub
gs
xor
jl
in
repz
ficoml
out
hlt
inc
shrb
daa
adc
stos
push
push
jno
mov
and
imul
dec
dec
scas
sbb
icebp
cld
je
or
popa
sub
jns
dec
cmpsb
inc
sbb
addr16
enter
xorl
sub
adc
pop
enter
sub
dec
pop
jp
repz
xchg
dec
test
jmp
test
jno
aas
mov
shrd
mov
mov
xchg
push
cmp
push
mov
jle
lea
or
and
push
jo
or
pop
dec
repnz
pop
lock
paddd
stc
fmull
jo
mov
ret
pop
nop
mov
loopne
xchg
js
mov
outsl
inc
daa
mov
flds
cmp
ljmp
es
lahf
into
add
in
and
roll
pop
jg
cmp
pop
mov
mov
add
mov
xchg
mov
inc
lret
fcmovne
xor
jecxz
clc
xor
adc
fs
cli
adc
or
mov
mov
fsubrs
and
push
vmptrld
jno
out
add
ss
pop
push
adc
ficoml
cmp
xchg
xchg
add
sbb
into
dec
mov
mov
inc
stos
cmp
add
in
cmp
fiadds
xchg
add
mov
lock
icebp
jno
push
mul
mov
jne
cli
ret
daa
add
add
cmp
inc
sbb
push
jmp
xchg
mov
adc
es
mov
es
fs
clc
mov
or
xor
aaa
cmp
cmp
cld
sbb
out
inc
sbb
clc
jp
loope
add
pushf
imul
fisubs
and
push
xor
hlt
push
mov
stc
mov
add
cmc
or
sarb
push
cmp
jecxz
cmp
fisubrl
push
jl
pop
out
mov
nop
cltd
inc
lods
dec
aam
jbe
inc
pop
cmpsl
push
xlat
scas
mov
lock
xchg
jae
scas
mov
fwait
inc
inc
mov
adc
dec
lods
jb
test
sbb
inc
pop
lret
adc
lret
into
test
sbb
adc
mov
mov
call
jns
and
xchg
icebp
xchg
lock
repnz
popf
jnp
jns
scas
xor
mov
or
sub
repz
jo
adc
sbb
xchg
aam
mov
adc
outsl
xchg
pop
popf
mov
xlat
jns
push
aad
cmpb
cmc
movsb
ja
cmc
mov
fcmovu
push
test
inc
andb
push
fcom
adc
and
cli
cmp
movsl
xor
push
imul
adc
pushf
mov
addps
fmull
xchg
fsub
add
xchg
jnp
scas
aam
cmpsb
dec
adc
insl
push
mov
iret
cs
pop
pop
xchg
cmpsl
xor
inc
sbb
orl
popf
push
mov
cmp
mov
jae
mov
pop
hlt
scas
xorb
shl
ret
inc
or
and
push
shlb
pop
push
pop
push
gs
jp
fwait
sti
roll
push
incb
in
add
movl
cmc
lret
xorb
or
mov
divl
ret
mov
xor
pop
insl
sar
fists
cs
jno
sti
popf
mov
add
dec
mov
dec
fwait
movsb
repz
andl
mov
add
js
stc
mov
inc
adc
xchg
lds
aas
xchg
jecxz
inc
sbb
jno
nop
pop
ds
dec
xchg
adc
notl
cltd
imul
jecxz
jns
fadds
out
jb,pt
daa
sub
outsl
lds
into
mov
mov
loopne
sbb
fwait
stos
xor
stc
sbb
out
negl
mov
stc
push
stos
leave
inc
clc
jl
mov
inc
add
xchg
push
jl
inc
test
dec
cld
push
add
and
jl
dec
jne
in
add
cli
out
xor
aam
es
loopne
std
xor
lahf
leave
jne
pop
mov
mov
jno
lods
sbb
lods
pop
jg
sbbl
push
faddl
negb
mov
negb
jnp
repz
dec
xor
xor
or
loop
divb
or
lea
dec
or
push
mov
xorl
inc
mov
pop
xchg
add
pop
repz
inc
and
ds
push
in
lock
dec
jb
cmpsb
add
mov
cmpsb
xlat
shll
bound
bound
mov
lock
cmp
cmp
popf
lods
dec
js
pop
mov
jle
into
lret
mov
xlat
pop
dec
cwtl
xchg
fnstcw
jmp
sbb
mov
loop
xor
rcl
mov
shr
sti
inc
pop
pop
jno
hlt
dec
push
adc
cwtd
or
fimull
lods
xor
call
fsts
loopne
xor
pop
stos
fs
nop
scas
stc
ljmp
jns
jp
insl
test
inc
cmp
decl
or
jo
test
idivl
pusha
fbld
push
mov
dec
push
adc
pop
ret
and
dec
std
cltd
cmp
push
out
arpl
lret
add
adc
cmp
aad
sbb
jo
sbb
dec
sbb
sahf
stos
pop
cli
shll
sub
fdivr
cmp
or
fsubrl
lea
jae
push
pop
insb
jno
repz
call
sbb
mov
in
mov
adc
add
test
ja
movsl
movsl
pop
imul
cli
mov
loope
cmpsl
and
jo
mov
loope
sbb
jp
fwait
xor
popa
cmp
mov
sub
sbb
ja
jmp
fbstp
mov
leave
imul
xchg
inc
sub
push
lahf
lret
xlat
xchg
mov
ds
cmp
stc
cmp
loop
sbbb
jno
ret
cmpsb
dec
gs
xchg
pop
add
popf
lods
movsb
jnp
add
add
xor
sbb
mov
arpl
mov
aaa
xchg
mov
mov
fwait
xchg
adc
push
jg
adc
pop
mov
outsl
push
stc
xchg
clc
mov
aaa
mov
xor
jnp
ss
mov
mov
out
lcall
jmp
enter
sub
sti
cwtl
pop
xchg
adc
ret
lahf
or
dec
jecxz
lock
push
fsts
in
pop
mov
lcall
ret
jne
jae
mov
fdivs
sarl
lods
adc
pop
sbb
sub
fildl
orl
andl
cmp
nop
test
stos
fsub
bound
mov
or
or
jge
aas
pop
loope
xchg
mov
jge
xchg
add
mov
xor
pop
repz
pop
and
daa
sbb
sub
cmp
clc
jl
push
fbstp
loop
pop
sub
or
shrb
push
pop
adc
xlat
cmc
sti
push
inc
or
inc
pop
mov
pop
test
push
ljmp
push
movsb
jmp
mov
test
outsb
movsl
jmp
rcll
call
mov
mov
aaa
mov
dec
inc
push
sbb
sarl
xor
outsb
sub
cmovs
arpl
jne
insl
aad
push
cmpsl
rclb
pop
mov
aas
mov
pop
sbb
lock
mov
inc
mov
pusha
mov
and
cmpsb
outsl
mov
in
sbb
sbb
mov
pushf
sahf
add
in
mov
jl
fidivs
mov
lret
sbb
push
ret
xchg
pop
adc
out
dec
xchg
xchg
into
mov
mov
stos
loop
jl
out
cmp
sti
jg
clc
shrl
jmp
mov
ret
sbb
lds
inc
out
sbb
std
adc
dec
out
and
xlat
outsl
push
jg
sbb
data16
inc
jno
add
cs
and
fisttpl
adcl
jno
xor
inc
sub
mov
test
out
jp
ljmp
out
sbb
push
and
popf
dec
or
mov
je
jp
sti
cmp
adc
jg
inc
xor
scas
andl
cmp
jae
loope
aas
push
les
lods
out
lock
fsts
xchg
jns
lret
mov
pop
adc
and
cmp
and
inc
repnz
sbb
and
lcall
cmp
fbstp
jmp
jb
frstor
xor
mov
dec
and
pushf
sub
sub
pop
aas
sbb
clc
das
repz
es
imul
imul
adc
in
mov
nop
popa
adc
sub
push
neg
test
pop
mov
arpl
fwait
sub
inc
and
jecxz
inc
or
call
xchg
lahf
pop
sbb
pop
loopne
xlat
add
fisttps
cmpsb
mov
xorl
mov
mov
dec
push
aad
jg
je
test
lods
mov
scas
sbb
mov
cwtl
insb
mov
sbb
nop
adc
mov
xor
mov
fcmovnu
aaa
out
or
cli
daa
xor
in
push
fildll
jae
cmp
lahf
jle
jo
jno
sbb
push
icebp
mov
pop
sarb
fcoms
nop
xlat
push
fsubr
pushf
into
jp
arpl
pop
scas
jnp
xchg
xchg
fisttps
mov
scas
jne
inc
je
cmp
xchg
pushl
xchg
add
and
xor
jge
insl
stc
je
sti
enter
fnstcw
arpl
dec
push
sbb
jbe
fwait
and
stos
and
leave
jle
pop
push
push
stos
mov
fisubs
clc
leave
mov
push
pop
and
or
movsb
inc
or
mov
xchg
stos
fs
outsb
and
cmp
js
loop
std
mov
ret
movsb
ss
rclb
neg
cs
dec
test
cmpb
mov
aas
cwtl
and
jnp
insl
iret
mov
adc
sbb
pop
lret
enter
in
sub
mov
xchg
mov
xor
jp
aaa
xor
or
adc
adc
and
pop
in
ja
test
lock
scas
jg
sbbl
testb
rcrb
push
lods
faddl
rcrl
xchg
and
pop
mov
xchg
xchg
cmp
das
outsl
js
xchg
stc
pop
adc
mov
pop
mov
sub
xchg
sbb
mov
int
sarb
ret
ja
add
ret
jmp
mov
and
fildl
test
or
enter
adc
add
jg
sub
xchg
arpl
movsb
fldenv
push
sub
xor
imul
xor
je
or
mov
sbb
imul
sub
adc
pop
pop
cmp
push
lea
ja
dec
inc
mov
mov
cmpsl
jns
sub
es
shrb
iret
sbb
jmp
xor
ror
jns
or
inc
dec
repnz
test
xchg
popf
lret
sub
push
cltd
mov
test
dec
mov
pop
sarb
inc
test
aam
add
mov
hlt
inc
hlt
inc
jnp
push
xor
clc
pop
push
mov
outsl
xchg
aad
mov
adc
xchg
push
test
or
xor
js
pop
dec
sbb
mov
clc
jb
push
or
scas
mov
icebp
jle
push
lods
mov
popa
and
mov
pusha
mov
push
andb
xor
sbb
push
sti
lcall
jo
jbe
cmp
mov
int3
movl
push
mov
jbe
push
sbb
xor
and
add
out
ret
and
pop
les
jge
insl
call
xchg
push
jle
pop
scas
sahf
in
shr
jmp
mov
pop
cmp
imul
dec
cmc
shll
and
adc
jmp
adc
jle
in
ret
xchg
push
pusha
mov
shr
nop
mov
cmpsb
and
popf
xchg
mov
and
adc
aas
pop
popa
cltd
jmpw
jmp
divl
lods
mov
add
mov
subl
int
nop
ljmp
testb
hlt
jns
sub
cmp
mov
sub
jne
xchg
xchg
jmp
sub
xchg
hlt
call
cmp
and
xchg
movsl
cmpsb
dec
or
pushf
jp
leave
xor
shl
add
nop
pop
stc
jns
jecxz
sub
icebp
movl
or
cmc
arpl
or
loopne
lock
xor
movsb
popa
lret
sti
dec
add
add
or
pop
push
aad
jle
cmp
rcl
pop
push
movb
sarb
aad
sub
xchg
dec
pop
and
add
jl
xor
loope
sub
fsubl
sub
jne
add
sub
das
dec
lods
and
aaa
inc
lock
jno
pop
arpl
lods
pop
mov
pop
out
jmp
sti
fnstsw
mov
adc
jbe
mov
loope
jb
popa
jmp
adc
adc
lods
lahf
and
add
xor
adcl
push
sbbb
xchg
adc
stos
enter
pop
or
xchg
je
pop
jp
jb
inc
inc
pop
dec
xor
pop
out
jae
pop
aam
or
sbb
enter
push
outsl
push
int3
lock
loopne
adcb
mov
loop
lods
adc
in
out
mov
jp
lock
jb
inc
add
js
pop
jge
fstl
lret
xor
loope
mov
pop
js
pusha
imul
imul
add
xchg
cmp
push
out
test
jmp
jl
jnp
in
xchg
or
call
mov
cmp
fucomi
neg
mov
inc
in
xchg
out
shlb
mov
xchg
push
sub
pop
lahf
jmp
sub
mov
push
imul
sbb
xor
clc
mov
icebp
and
fwait
adc
sub
popa
enter
cli
popf
notl
jno
sbb
xchg
adc
ret
cmp
mov
rclb
jnp
fwait
cltd
sub
mov
xor
sub
jae
movsb
imul
test
sbb
insb
stos
inc
cmp
push
popa
xor
cltd
inc
or
fwait
mov
jbe
or
loopne
xchg
adc
lock
cmpsb
sub
sub
sbb
fs
inc
xchg
mov
imul
fucomip
movsb
mov
cli
arpl
or
lcall
or
jle
or
jle
xlat
jl
push
mov
mov
lret
lret
mov
fmull
es
xchg
or
fisttpll
add
mov
dec
stc
xor
mov
push
dec
inc
or
or
into
jp
ljmp
push
lcall
lds
dec
mov
cld
out
mov
daa
cmp
cmp
mov
out
clc
xchg
mov
rcll
jle
dec
add
iret
add
push
in
ja
iret
stos
and
inc
das
sub
test
mov
fs
jnp
lahf
int3
iret
push
bound
in
in
sbb
stc
sbb
xchg
clc
fnstsw
enter
jns
insl
push
lds
mov
sbb
insb
fs
popl
and
lcall
add
xchg
dec
mov
scas
pusha
jae
inc
push
mov
mov
out
test
xchg
jnp
push
out
leave
or
push
insb
push
mov
or
loop
pop
mov
xor
pop
add
jg
ret
sbb
popl
xchg
sub
mov
in
cmp
call
pop
ror
adc
ret
shlb
xor
push
popf
dec
sti
aaa
enter
data16
ss
sbb
sub
ret
aad
push
into
stos
lret
push
in
call
pusha
jmp
adc
xchg
push
int3
mov
std
add
cmpl
orps
int3
sbb
and
lcall
movsl
test
push
mov
pop
fdivl
mov
insb
or
mov
out
mov
mov
or
jg
inc
enter
call
fs
mov
lret
lret
jnp
sbb
xchg
pop
mov
inc
or
dec
loope
mov
jo
mov
insb
ljmp
or
xchg
lret
int3
sub
mov
mov
mov
fists
fldcw
sbb
js
arpl
int3
xor
sbb
push
cmp
repz
outsl
and
add
pop
cmp
fs
repnz
pop
rcrl
sbb
cmp
nop
icebp
lcall
ret
mov
fs
ret
jno
je
lods
jns
push
repz
addr16
xchg
fs
mov
mov
scas
lahf
hlt
sti
adc
call
insb
aad
and
push
ret
mov
pop
fists
stos
int
fadd
out
clc
es
out
enter
pop
mov
jl
scas
cltd
aas
subl
out
push
cmp
adc
push
sub
cmp
add
jbe
movsb
xchg
je
mov
pushf
mov
insl
mov
shll
popa
ljmp
fldl
cmp
mov
fyl2x
push
popf
ss
jne
in
xchg
lret
ljmp
add
ss
pop
test
xor
sbb
jno
xor
sarl
fcoms
ljmp
mov
pop
fistpl
cmp
test
xlat
mov
imul
icebp
es
or
or
pop
sub
mov
icebp
inc
jmp
and
inc
pop
cmp
dec
loop
mov
jmp
ja
push
push
adc
adcl
mov
dec
outsl
cmpsb
sub
insl
sub
mov
jb
aad
mov
and
je
jne
push
into
push
je
mov
mov
adc
jg
and
mov
inc
mov
fiadds
loopne
popf
enter
mov
push
jae
and
stc
add
pop
sbb
xlat
into
sub
scas
movsl
adc
cmp
shll
sub
ret
mov
ds
js
fcmovu
mov
out
pop
or
jb
int3
sub
lret
addr16
mov
enter
pop
loopne
cmpsl
es
mov
daa
lds
jmp
cld
dec
mov
fdivrl
test
mov
rol
adc
xchg
loop
stc
sbb
movsb
pop
push
test
xchg
and
jns
and
jg
gs
jmp
popf
pop
push
push
ja
inc
pop
popa
push
inc
sahf
out
and
fists
xchg
xchg
or
xor
dec
jae
mov
nop
cmp
stos
repnz
and
mov
pop
pop
adc
adc
jle
bound
jp
push
mov
adc
int
jo
mov
enter
inc
jae
mov
push
pop
and
cli
xchg
xor
mov
addl
xor
jmp
push
insb
fidivrl
xchg
dec
outsl
insb
scas
mov
stos
outsb
rclb
and
cmpb
inc
repnz
ud0
test
dec
jno
inc
iret
jg
stc
or
in
bound
cwtl
stc
mov
mull
aaa
sbb
mov
add
icebp
ret
mov
dec
mov
popa
and
pop
mov
mov
and
cmp
pop
aam
push
je
xchg
faddl
push
loopne
loop
ror
lods
jb
insl
lahf
add
push
push
and
sbb
or
sub
sub
mov
jns
in
pusha
aaa
arpl
movsb
mov
xor
cmc
adc
fsubs
xchg
stos
ds
mov
shr
jno
mov
sbb
aas
int
cs
cld
aas
jle
daa
mov
rclb
out
jno
ds
fildl
pop
add
or
pop
adc
mov
aas
out
fcmovnb
sub
loopne
mov
cmp
or
xchg
dec
movsl
not
rorl
movsl
imul
sub
inc
lcall
inc
in
jbe
in
pop
adc
cmpsl
push
dec
dec
outsb
bound
loope
stos
sub
int
push
je
sti
cmp
xor
out
pushf
in
das
push
sbb
int
sbb
xchg
es
mov
cmpsb
jge
loop
sbbl
dec
xchg
mov
data16
or
call
jp
pop
push
das
mov
popf
mov
cmp
les
andps
add
inc
inc
rclb
scas
jmp
adc
aaa
dec
scas
iret
push
sbb
pop
fnstcw
add
push
in
aam
aas
orb
adc
lock
cmp
cmp
sbbb
mov
mov
dec
xchg
in
pop
pop
fdivs
addr16
pop
out
inc
stos
mov
dec
or
into
ss
sahf
adc
or
andb
mov
rcll
out
loopne
test
test
xor
or
bound
movsl
jg
jb
dec
stos
lock
dec
xor
subl
scas
jg
cmp
mov
sbb
rcll
out
xchg
rcll
add
daa
insl
push
mov
inc
sahf
sahf
mov
lcall
rolb
xchg
mov
aaa
push
imul
test
sub
xchg
nop
dec
lret
sbb
adc
or
out
xchg
cmp
or
icebp
pop
data16
pushf
jo
mov
in
in
push
mov
dec
lock
pop
inc
add
mov
pop
or
xor
jbe
add
or
and
stc
add
mov
aad
jo
test
pop
scas
sub
test
dec
mov
jbe
sub
cli
mov
push
imul
jge
and
out
lds
push
pop
rclb
loop
movsl
call
adc
mov
push
scas
and
in
or
sarl
ja
imul
jl
jp
sub
jg
xchg
inc
sub
pop
arpl
test
call
sbb
cwtl
mov
in
xor
je
push
out
xchg
pop
pop
push
mull
notb
enter
add
sub
shrl
push
mov
in
subl
add
sub
inc
sub
scas
pop
pop
rclb
lods
mov
push
ficoms
jns
call
call
adc
pop
mov
sbb
jbe
mov
mov
push
inc
rcrb
inc
addb
pop
in
sbb
fcoml
data16
xchg
add
shrb
lahf
jo
in
push
jge
lea
sbb
adc
outsl
xlat
insb
imul
lahf
cli
ficoml
or
sbb
mov
push
test
and
fs
and
dec
cli
cwtl
or
inc
push
jl
and
outsb
sbb
aas
mov
leave
jb
imul
jmp
xchg
or
and
mov
push
mov
inc
leave
lods
sub
dec
lock
insb
push
xchg
adc
mov
pop
sbb
sahf
sub
xor
dec
scas
or
mov
movsl
mov
loop
push
sbbb
mov
or
je
rcll
mov
cltd
iret
and
lahf
in
andl
inc
add
jecxz
inc
out
scas
pop
cld
notl
mov
cmp
dec
fisttps
sbb
clc
cltd
lcall
cmc
or
pop
xchg
pop
fsubrs
xor
sub
and
dec
gs
push
fwait
xchg
pop
dec
xchg
and
dec
xchg
movsb
mov
dec
dec
jl
cmp
sub
mov
sub
push
out
add
adc
push
inc
xchg
je
sub
sub
out
mov
stc
xor
xor
das
ret
jb
jno
lahf
mov
movsb
or
insl
roll
mov
test
aaa
int3
int3
push
data16
sub
jnp
icebp
lret
sbb
jecxz
std
fnstcw
mov
sub
scas
sub
int3
jnp
dec
jns
push
jae
jne
xor
xchg
dec
mov
sub
stos
in
cmp
mov
popa
jge
jns
pop
add
mov
inc
inc
cwtl
aas
shl
subb
cmp
icebp
cld
add
push
jmp
mov
pop
and
dec
mov
jge
xchg
ret
jmp
cmp
adc
adc
jns
insl
clc
fnstenv
adc
vpunpckhdq
jo
pop
ret
xchg
fmuls
and
data16
xchg
dec
js
loop
push
fsubs
push
stc
push
leave
sub
test
rol
jns
mov
sahf
mov
imul
mov
jmp
cmp
xor
inc
jns
and
jbe
adc
arpl
sub
stc
mov
jp
hlt
or
mov
negb
pop
mov
dec
dec
add
push
mov
pop
xor
xor
nop
add
fildll
mov
jge
and
mov
sub
adc
out
scas
xchg
mov
shlb
xchg
jnp
mov
movsb
ds
inc
mov
xor
push
mov
push
mov
stos
and
mov
dec
subl
xchg
cmpsl
movsb
xor
xor
inc
test
adc
shrb
inc
fisttpll
in
loope
pushf
lret
pushf
xchg
lock
sub
mov
pushf
xchg
xor
cltd
movsb
aaa
inc
or
idivl
cmp
or
or
mov
sub
je
lret
jecxz
cwtl
mov
outsb
cld
aaa
mov
mov
imul
add
pop
test
aas
into
int
sub
mov
jle
jbe
repz
inc
sbb
sbb
xchg
mov
and
cld
add
test
xchg
mov
fbld
in
frndint
movsb
inc
mov
pop
push
xor
or
xchg
or
or
arpl
scas
enter
sbb
inc
jecxz
dec
inc
clc
test
and
mov
or
cmp
push
xor
cmc
or
mov
xor
push
jae
cwtl
push
popf
push
xchg
or
and
mov
cmc
push
movb
int3
sub
mov
loope
push
jns
or
cmp
mov
dec
aaa
inc
jbe
push
pop
daa
mov
sahf
test
push
mov
xchg
lcall
and
add
aaa
pop
or
out
loopne
jmp
push
inc
or
inc
xor
orl
sub
andl
call
sbb
and
hlt
rorb
mov
cmp
rorl
cmp
in
and
mov
inc
aam
lret
sbb
sbb
pop
mov
sub
inc
pop
cmpsl
mov
push
inc
out
leave
xchg
es
pop
push
inc
in
mov
dec
ret
dec
sbb
es
movsl
dec
dec
xorb
call
pop
ljmp
fs
mov
mov
lock
iret
movsl
and
loope
test
mov
test
daa
pusha
fcompl
cmpsl
and
sub
sahf
je
mov
ds
or
stos
int
cmpsb
inc
imul
xor
popf
cmpsb
lods
into
dec
push
mov
adc
ret
popa
and
aas
cmp
xor
dec
push
sbb
cmpsb
xor
push
scas
cs
cwtl
loopne
and
and
lahf
mov
in
inc
jmp
aam
xchg
mov
sti
jne
iret
sbb
jo
mov
cmp
add
sub
dec
aam
push
push
push
ds
aaa
in
pop
sbb
outsb
inc
mov
roll
popa
adc
inc
mov
mov
mov
inc
das
leave
lods
pop
pop
sub
out
adc
and
inc
outsb
in
mov
in
mov
mov
out
sbb
jl
sub
popf
js
xor
stc
ljmp
mov
mov
lods
pop
bound
lds
mov
mov
and
stc
nop
pop
pop
inc
loope
xor
mov
cld
inc
sbb
cmp
pop
pop
mov
add
inc
jb
in
inc
inc
sbb
popf
or
mov
pusha
icebp
aam
push
or
fwait
movsl
fwait
fwait
punpckhbw
aaa
cmp
xlat
std
test
xor
rorl
in
fadds
loop
insb
loopne
push
shll
bound
movq
inc
ss
jmp
stc
hlt
sbb
in
cltd
outsb
cld
xchg
test
xchg
cmpsb
push
js
jns,pt
push
pop
pop
loopw
dec
adc
xchg
outsb
iret
cli
fs
ret
sbb
out
cmp
push
lods
push
pop
ja
mov
jo
out
xor
je,pn
lock
pop
mov
shlb
stc
add
insl
mov
andl
push
cmpsl
fstl
imul
sbb
xchg
pop
push
sbb
xor
stc
sub
clc
fwait
cmc
jmp
push
leave
add
sbb
sti
sbb
dec
xor
in
mov
lods
ds
rcr
repnz
sbb
push
fsubrl
bndstx
cs
out
cs
dec
add
jge
sbb
xchg
cmp
icebp
push
sahf
sub
push
sahf
pop
mov
add
int3
enter
xchg
scas
roll
shll
pop
fcomi
and
cmp
bound
outsb
jns
xchg
addr16
and
cmp
sub
loopne
push
fs
outsb
mov
arpl
out
dec
lods
frstor
ret
mov
mov
sub
mov
cmpsl
cmpsb
pop
xor
jns
jae
mov
ja
and
push
dec
jecxz
notl
dec
fsubr
xor
cmpsl
jno
xlat
sbb
mov
mov
sub
repnz
stos
pop
adc
cmp
dec
pop
mov
decl
in
lret
in
mov
jae
mov
mov
xor
dec
orl
push
cmp
sbb
fnop
arpl
mov
xchg
push
gs
into
inc
jg
pop
ret
cli
je
fisubl
andb
cwtl
test
movsl
add
insb
mov
cmpl
insl
push
loope
and
movsl
aaa
or
mov
jl
test
std
divl
inc
sbb
push
cs
dec
mov
test
jmp
std
imul
das
or
mov
push
inc
jne
lret
jae
mov
lcall
out
dec
sub
or
or
mov
fdivrs
pop
and
mov
mov
push
aad
push
pop
jmp
popf
push
bound
in
dec
pop
outsb
inc
subl
fs
stc
cmpsb
lds
loope
cltd
xor
cmp
pop
loopne
pop
rcll
mov
outsl
jle
lret
adc
movsl
xchg
sbb
xor
lea
dec
cmp
pop
imul
sub
add
adc
and
test
sbb
cs
pop
jecxz
imul
add
pushf
add
cmp
push
push
jbe
int3
xlat
pop
inc
jg
mov
stos
fdivr
mov
pop
push
in
sub
pusha
xchg
cmc
loop
push
adc
lahf
xor
and
rorb
sub
pop
cmp
mov
dec
mov
mov
imul
sub
mov
or
sub
mov
and
jbe
jns
andb
scas
jo
sbb
fistps
rcl
js
sub
xchg
inc
cmp
xor
shll
add
pop
jmp
jo
mov
mov
mov
loopne
stc
pop
xchg
mov
leave
jnp,pn
sub
sub
mov
add
xchg
out
xchg
insb
jecxz
fwait
push
notb
fs
sbb
add
jno
cmp
jne
popa
cs
jne
std
roll
xchg
adc
inc
or
pop
mov
or
rorb
mov
mov
stc
je
das
mov
int
add
rorl
push
add
lock
mov
push
jle
fsts
mov
sub
adc
loope
ljmp
ljmp
repz
mov
xchg
lea
lds
jne
and
xlat
jmp
shll
out
mov
dec
ljmp
mov
call
data16
filds
dec
jns
mov
jb
adc
sub
xlat
fnstcw
inc
and
adc
pop
sub
andl
addr16
xchg
xor
add
clc
xchg
mov
fdivrl
and
xchg
cmp
and
into
push
push
movsb
or
test
cmpsl
jbe
jecxz
xor
insb
enter
lret
mov
pop
aas
xchg
leave
imul
fnstenv
ret
stc
sub
aam
mov
pop
cli
xchg
and
add
movsl
sti
ret
arpl
mov
pop
push
mov
push
pushf
mov
mov
sarl
adcl
add
in
push
sbb
and
xchg
pop
mov
scas
sub
mulb
sub
aam
mov
or
push
ret
popf
dec
cmp
lock
repz
cmp
scas
dec
imul
jb
lahf
pop
mulb
shl
or
push
out
popf
cmp
jg
sub
cmp
nop
daa
mov
in
adc
sbb
inc
gs
mov
movsb
xchg
push
int
sub
call
roll
mov
xchg
inc
xor
sub
mov
inc
push
pop
in
fldenv
test
sub
inc
scas
pop
imul
mov
mov
sbb
fs
xchg
mov
stc
icebp
pushf
adc
cmpsb
test
adc
insl
push
dec
daa
mov
xor
arpl
cmpsb
rcrl
aas
adc
add
adc
sub
mov
arpl
pop
or
arpl
sub
aam
sub
adcb
jns
std
add
dec
and
jne
adc
movb
add
jbe
or
and
and
pop
test
in
hlt
cmp
jbe
scas
fistpll
mov
lds
loop
out
mov
mov
jge
pop
sub
sbb
test
mov
mov
xor
or
cs
sbb
lahf
lcall
jns
mov
sub
rol
mov
shll
inc
jge
data16
std
mov
je
mov
test
idivb
add
fsubrs
or
outsb
pop
je
sub
sbb
int3
shlb
add
les
fcoms
call
cld
and
movsl
push
push
out
or
jge
or
pop
xor
mov
push
mov
mov
push
pop
cmp
dec
jmp
mov
mov
popf
and
jecxz
test
mov
mov
jae
movsb
faddl
ret
pop
xchg
push
xchg
and
jmp
aad
add
inc
cmp
add
jns
sbb
idiv
push
sub
sbb
movsl
push
shrb
cmp
inc
mov
leave
push
mov
xor
loop
jnp
xchg
fdivr
push
sahf
jbe
test
mov
jb
jo
jmp
inc
mov
mov
xchg
add
cmpsb
xchg
sub
scas
mov
mov
pop
mov
outsb
lods
imul
stos
jnp
in
fdivs
in
dec
rol
les
fnsave
adcl
lock
test
neg
mov
pop
xchg
jge
insb
sbb
out
fisubs
pop
push
cmpb
dec
in
jnp
es
shll
xchg
sub
scas
sbb
repnz
clc
pusha
sbb
xor
and
cmp
mov
int3
jae
jmp
mov
nop
cld
jle
push
mov
pushl
push
cld
ds
dec
mov
pop
imul
outsl
dec
call
test
mov
dec
fnstenv
inc
lret
lcall
inc
cmpsb
mov
push
inc
push
out
aas
cld
shr
pop
sarb
push
cmp
sub
mov
das
clc
push
test
outsl
mov
mov
outsl
mov
add
mov
xchg
sub
cmpl
mov
pslld
fists
jbe
xchg
jb,pt
jnp
pushf
or
jnp
add
in
push
cmp
sahf
notb
mov
jmp
and
pop
pop
js
push
sbb
cld
lret
outsl
sub
and
in
sahf
pusha
adc
sbb
dec
xchg
into
mov
pushf
test
add
push
daa
icebp
pop
add
testb
add
inc
lods
sbb
jmp
js
sahf
dec
dec
aam
xor
loopne
dec
dec
dec
clc
nop
jne
jb
aaa
mov
jmp
xchg
cmp
push
lock
cltd
repz
aaa
mov
or
bound
mov
xlat
push
imul
inc
negl
jmp
adc
dec
mov
pusha
cmp
gs
mov
push
or
shrb
push
or
gs
push
or
and
adc
rcrb
loope
into
and
daa
ljmp
sbb
leave
xor
mov
adc
xchg
je
arpl
lahf
fnstenv
inc
push
push
shr
dec
or
mov
sub
xor
mov
cmp
sbb
or
mov
aad
in
sbbl
enter
mov
mov
shl
loop
es
hlt
cld
fistpl
inc
or
jb
rcll
push
push
sbb
mov
and
xchg
inc
xchg
addr16
fldl
add
add
sbb
inc
insl
imul
sbb
sbb
push
sub
push
or
xchg
jbe
fldl
jp
xchg
push
mov
push
cs
cli
bound
fisttpll
jl
scas
sar
notb
lahf
pop
inc
mov
cli
rorl
aas
out
jno
scas
out
std
insb
and
popa
jle
or
or
xchg
cmp
repz
dec
test
xor
or
outsl
iret
xor
dec
push
movsl
test
in
mov
test
mov
test
or
dec
scas
xchg
or
out
pushf
lret
nop
fists
add
pusha
sti
inc
pop
pop
scas
rorb
sub
cmp
cmpsb
imul
lds
dec
dec
cmp
xchg
out
repz
cmp
in
jle
fs
ss
movsl
pop
fidivrl
lds
jns
xor
xchg
in
adc
and
lret
es
dec
push
sahf
int3
adc
daa
dec
ss
jb
loope
repz
push
out
pop
pop
fimuls
xor
shll
jge
or
inc
sbb
dec
add
cmp
fs
lret
imul
pop
sub
inc
pushf
xchg
xchg
out
push
jno
ror
out
jecxz
scas
mov
out
out
mov
shll
test
push
lods
das
jp
repnz
frstor
dec
and
test
cltd
mov
movsb
jmp
push
outsl
or
add
cmp
or
cwtl
inc
mov
inc
and
imul
mov
dec
gs
lahf
xchg
setp
ret
sub
repz
shrb
push
ficomps
xchg
mov
jg
fwait
jp
mov
and
les
imul
cmpsl
lcall
mov
mov
lds
push
push
aas
pop
fldt
hlt
shr
mov
nop
lds
fidivrl
mov
adcl
push
sar
lods
into
cmp
shl
jecxz
jge
push
and
cmp
fisubrs
mov
adc
lcall
mov
xchg
mov
sub
fcmovnbe
sub
mov
push
jp
test
stos
dec
pop
mov
push
inc
icebp
xchg
int3
nop
xor
ret
cmp
pop
pop
mov
push
and
stos
ret
nop
loope
dec
cmp
cmp
cld
rol
push
call
jge
push
jnp
daa
jg
stos
in
mov
jle
orl
or
sub
in
fldl
dec
jb
jno
enter
add
out
sarl
sbb
cmp
aam
je
mov
adc
pusha
sar
mov
lods
enter
mov
repnz
xorl
addr16
or
cmp
mov
cmp
imul
mov
shrb
sub
xlat
in
cld
sbb
sbb
or
mov
leave
jns
mov
and
popa
insb
ret
and
cmp
shrl
xlat
rorb
pop
cld
adc
mov
pop
call
cmp
inc
daa
xchg
les
fmull
xor
int3
pop
sarb
pop
fcoms
aad
loop
repnz
pop
ss
lcall
inc
push
into
mov
mov
xor
movsb
addr16
sub
out
mov
xor
js
jns
mov
and
clc
push
adc
cmpb
or
push
jns
sub
sbb
or
mov
pop
cmp
xor
cmovl
bnd
stos
mov
mov
xchg
icebp
jl
movsb
std
fwait
push
filds
inc
dec
jle
mov
inc
shll
repnz
dec
fmuls
xor
fadd
imul
shrl
jno
mov
mov
jb
pop
push
test
lcall
or
movsb
push
and
std
cmp
xchg
pop
ret
push
fnstsw
pop
aad
cmp
aam
test
daa
mov
jae
jnp
xor
jnp
push
mov
push
sub
ljmp
xor
add
imul
fmuls
adc
mov
sahf
pop
repnz
jne
std
or
inc
addb
jno
cmp
out
call
divb
in
push
mov
mov
lret
jl
push
pop
adc
mov
rclw
ja
add
push
add
or
dec
mov
xor
push
cmc
add
bound
push
jae
loop
fwait
scas
icebp
push
adc
addr16
ret
test
cmp
in
cmpsl
xchg
out
ss
add
cltd
loope
mov
int3
repz
add
or
gs
out
daa
rol
insb
shl
stc
adc
mov
mov
xor
aad
push
xor
push
jge
mov
stos
imul
lahf
movsl
cs
push
add
pop
xchg
imul
jnp
cmpsl
dec
mov
lahf
add
mov
imul
inc
adc
lahf
inc
or
jb
jle
adc
mov
mov
iret
lea
xchg
ljmp
rolb
and
out
sar
fdivs
cs
sahf
fwait
call
xchg
jno
inc
shlb
ja
mov
mov
cmp
les
inc
lret
jns
cmpsl
mov
xchg
sbb
sbb
aad
loopne
push
push
divl
in
xor
cld
xor
subl
jmp
sti
xchg
iret
inc
inc
fsubs
push
push
mov
test
stc
out
mov
mov
cmp
aaa
daa
inc
movsb
push
xchg
pushf
jae
and
ret
nop
movsl
nop
or
lret
or
shl
mov
mov
outsl
pop
shlb
test
bound
xor
push
mov
mov
jle
sbb
jo
or
stos
inc
jmp
xchg
jnp
les
jb
rclb
leave
out
sahf
rcl
xchg
cwtl
xor
hlt
bound
mov
bound
leave
iret
push
nop
mov
sbb
cmp
xchg
mov
ficomps
out
and
sub
stos
dec
jo
cmp
outsb
in
ljmp
loop
inc
leave
loop
cmp
repz
imul
jae
dec
repnz
pop
pusha
xchg
sbb
frstor
sub
cmp
aaa
mov
popa
jg
aaa
orb
mov
lods
mov
mov
jmp
fnstenv
gs
mov
push
ficoml
and
in
aam
inc
xor
ficompl
loop
out
js
adc
aam
mov
pushf
jb
repz
nop
lahf
in
inc
mov
jg
testl
addr16
mov
lods
sbb
xchg
pop
test
bound
adc
andb
cmp
mov
dec
xchg
lcall
dec
dec
fwait
and
mov
inc
and
mov
loope
cli
pop
popf
pushf
orl
dec
lods
inc
adc
push
sub
jne
loopne
lret
push
shl
cmpsl
dec
pusha
xlat
pop
jno
es
jnp
add
jmp
outsb
fbstp
push
fcomps
or
mov
pop
cmpl
xchg
pop
sub
lea
sbb
cmp
add
stos
adcl
insl
fdivs
stc
mov
xor
cltd
icebp
mov
fstpt
lds
pop
stos
test
hlt
push
mov
inc
pop
inc
rcrl
mov
int
insb
fbld
push
dec
pop
popa
in
xor
push
fstpl
adc
mov
fsubrs
mov
mov
sbb
jns
lock
add
pop
fimull
push
adcb
xor
arpl
jnp
dec
sub
lcall
ds
lahf
mov
insb
pop
test
and
lea
or
push
sbb
push
bound
xchg
out
adc
sarb
lods
and
pop
adc
orb
cmp
cmp
gs
add
sbb
lea
mov
adc
lock
mov
cmp
mov
mov
sub
inc
dec
lret
aam
pop
sub
hlt
jle
sub
cmp
push
push
pop
cmp
jge
lds
sti
out
in
mov
xchg
jmp
outsl
inc
mov
into
sub
adc
test
fs
leave
dec
mov
dec
scas
out
or
int
sbb
inc
outsb
adc
int3
hlt
int
scas
xchg
lods
or
push
scas
cmpsl
movsl
int
xchg
and
dec
stc
iret
das
mov
adc
jle
cmpsb
dec
fldcw
and
in
sbb
fwait
lds
sub
leave
jno
or
cmp
lret
stos
and
add
fisttpll
in
cmc
outsl
lret
lret
rorb
sub
xchg
and
inc
sub
aaa
hlt
push
add
mov
mov
and
cmp
repz
xchg
orl
cmpb
femms
mov
sti
pop
es
or
out
dec
es
outsb
int3
mov
or
cmp
cmp
int
dec
orl
pop
cwtl
sbb
push
jb
dec
sub
fs
cld
jp
fcmovnbe
fnstenv
in
inc
xor
mov
cs
das
sub
xor
test
jecxz
jmp
movsl
call
mov
dec
shlb
push
inc
fsubrs
jno
xor
inc
push
lret
imul
sub
mov
mov
jge
adc
scas
popf
inc
outsl
pop
dec
jae
cmp
xchg
aas
test
mov
sahf
cmp
pop
lret
daa
lret
dec
jo
push
pop
xor
mov
and
mov
inc
test
cmp
pop
int
repnz
xor
mov
jmp
shlb
jne
icebp
mov
mov
mov
cmp
xor
jle
dec
xor
adcl
push
add
mov
out
add
rorb
ja
orl
outsl
int3
xor
ret
xchg
xchg
test
ret
jne
and
push
xchg
jl
push
add
sbb
int3
xor
cmp
andps
xor
roll
pop
dec
mov
mov
addr16
popf
jae
jp
mov
pop
push
jbe
sti
out
out
adc
push
and
shrl
imul
sbb
decl
lods
mov
into
movsb
cwtl
lret
pop
int3
in
int
jns
clc
mov
in
xor
dec
mov
loop
int3
and
mov
loope
scas
movsl
in
pop
addr16
mov
pop
xor
std
les
xchg
shrl
jnp
outsb
adc
popf
shrl
imul
nop
stos
stc
or
rcl
and
scas
outsl
sbb
in
add
mov
ds
in
lret
lock
loop
inc
scas
or
leave
push
jno
sarl
nop
add
out
xlat
das
leave
or
lcall
mov
sbb
subb
cli
rorb
adc
dec
dec
xor
inc
sbb
clc
movsb
mov
pop
or
lods
xchg
cwtl
cmpxchg
cli
or
sarl
call
fisubl
outsl
scas
push
cltd
movsl
enter
decb
sbb
cmc
mov
in
les
out
mov
dec
subl
push
push
adc
cmp
add
mov
int
mov
aaa
das
pushf
and
popf
xchg
add
jnp
das
enter
ja
add
lcall
xlat
cli
jb
cmpl
inc
les
mov
jg
cmp
mov
or
pushf
sub
mov
mov
add
lret
fnstsw
add
or
adc
or
fsubl
pop
sbb
ret
or
sarl
mov
xchg
dec
testb
mov
sbb
movsl
lock
lods
leave
cmp
pop
cmp
mov
mov
add
ret
das
test
fisttpll
adc
and
sub
xchg
mov
je
jg
scas
aad
and
dec
xchg
test
cmp
xchg
jge
ja
test
hlt
popa
fldl
out
xchg
jle
loopne
iret
sub
in
idiv
inc
mov
sub
addl
into
jge
lret
sub
addr16
aas
mov
les
sub
xlat
je
jae
std
cwtl
popf
mov
in
cltd
push
lret
stos
xchg
in
imul
out
and
cmc
movsl
mov
jbe
mov
leave
push
adc
or
and
mov
lds
adc
leave
frstor
jle
aad
dec
lea
sub
outsb
dec
hlt
inc
lcall
in
xchg
scas
mov
pop
adc
mov
inc
xchg
out
lock
mov
call
mov
mov
sbbl
dec
mov
lock
jg
in
mov
divb
xor
fisubrs
cmp
add
popf
mov
pusha
mov
and
clc
sbb
push
xor
bound
fnstcw
jne
testb
sbb
add
inc
inc
mov
xchg
or
fildl
pop
scas
imul
inc
ja
xchg
jbe
sbb
sbb
leave
std
xlat
jecxz
fcomp
xor
or
stos
and
popf
mov
dec
pushf
cmp
test
and
cld
dec
mov
jp
push
pop
dec
sub
mov
jecxz
and
jnp
mov
or
sbb
lock
out
mov
cli
mov
aad
cmp
jle
out
shl
cmpsl
and
push
push
lods
imul
adc
enter
cmpsl
test
insb
cld
pop
cmpl
add
cmp
aam
push
jae
ss
and
sub
aaa
insl
xlat
add
dec
in
dec
je
sbbb
inc
lcall
fsubp
cmp
rolb
xor
aas
xor
sbb
pop
shll
rolb
sbb
mov
clc
in
fs
cmc
addr16
stos
mov
insl
push
rol
xor
adc
enter
push
icebp
repnz
cmp
sub
arpl
arpl
out
aas
push
sahf
sub
cs
add
or
push
lcall
cmp
repz
sbb
jne
mov
ss
cmp
add
jbe
mov
dec
mov
pop
inc
iret
dec
das
mov
test
pop
mov
jnp
pop
je
or
data16
rcl
jbe
test
jbe
testl
sar
movsb
sbb
lcall
jle
ret
lret
push
in
and
push
jnp
dec
jnp
jmp
pop
cmp
ret
add
sub
cmpsl
xchg
adc
pop
push
orl
cld
fsubrp
fisubrl
test
inc
dec
mov
cmp
cwtl
cli
pop
aam
push
dec
mov
jecxz
movl
outsl
rcl
jnp
push
movsl
cmp
clc
outsb
leave
sub
pushf
push
scas
cwtl
out
rol
cmp
ja
sbb
mov
jmp
mov
mov
lds
rorl
repz
outsb
sub
sbb
xchg
and
and
insl
repz
pop
xor
push
pop
dec
inc
imulb
sbb
add
aaa
xchg
cmp
es
sbb
rcrb
popf
mov
jnp
mov
sbb
lock
int3
or
mov
sub
mov
jne
push
cltd
sub
xor
icebp
mov
mov
jne
xchg
dec
out
sub
xchg
lea
jl
sbb
xlat
mov
xor
lret
scas
and
cwtl
leave
xorb
lret
mov
lock
lods
stos
fsubrs
shll
loopne
jmp
cmp
rcrl
ja
jbe
and
mov
inc
aaa
pushf
stos
sbb
inc
lock
push
adc
push
inc
jmp
ret
xor
inc
jbe
pushf
push
xchg
cmp
pop
cmpsl
or
inc
mov
cmp
dec
fisttpl
sub
jb
mov
stos
cmc
test
xorl
dec
adc
faddp
mov
adc
or
mov
test
cmp
sub
iret
xchg
lds
aas
mov
sub
inc
fbstp
aad
inc
push
sbb
jne
negl
aad
mov
int
in
mov
cmp
test
cmp
and
cmp
icebp
sbb
xchg
std
test
cmp
xchg
pop
mov
jecxz
cld
push
xor
mov
outsb
lcall
sub
inc
xchg
imul
insl
test
subl
fcoml
fldenv
jmp
ja
push
pushf
std
dec
pop
shr
sbb
aad
or
sub
push
into
insl
and
add
mov
repz
addr16
jl
dec
pop
pop
shlb
ja
lea
adc
std
jp
shr
aaa
subl
cwtl
jge
cs
addl
jb
sarb
dec
push
mov
shrb
aam
repz
subl
push
mov
call
out
addr16
sub
in
sbb
mov
inc
icebp
cmp
push
cmpsb
push
pop
in
cltd
mov
ret
test
add
sahf
enter
lds
in
in
cmpb
es
dec
or
push
inc
add
lret
sub
sub
in
repnz
ja
xor
push
mov
test
push
jae
xchg
cwtl
mov
lcall
dec
adc
cmp
xor
out
cmp
test
popf
sub
add
dec
pop
lock
mov
enter
inc
and
inc
lret
adc
push
sahf
xlat
jns
push
inc
jge
das
enter
icebp
pop
shl
xor
leave
pop
inc
jmp
lahf
jmp
in
mov
push
dec
int
mov
aas
fcmovnbe
xchg
jmp
mov
fisubs
mov
fdivl
and
jecxz
lods
xchg
xchg
xchg
mov
push
shrl
mov
mov
xor
fimull
pop
cwtl
cmp
xchg
movsl
mov
add
dec
ret
add
inc
das
repz
ret
adc
es
dec
xchg
mov
xor
js
mov
push
adc
out
mov
loopne
fnstsw
pop
mov
std
jbe
testb
mov
sub
je
ljmp
jne
pop
push
push
mov
jns
sbb
add
fdivs
inc
loop
pusha
sub
mov
imul
xor
bsr
inc
mov
repz
sub
shlb
mov
shlb
mov
mov
jae
cld
push
fsts
cmp
add
lods
arpl
cli
addr16
xor
negl
icebp
call
xor
test
arpl
add
push
jnp
inc
mov
movsl
push
mov
mov
sbb
dec
cwtl
adc
into
xor
sbb
sbb
dec
lods
mov
lret
jno
jge
scas
adc
mov
inc
in
mov
inc
into
push
xchg
cmpb
cli
pop
negl
sub
mov
push
aaa
adc
jo
cmc
xor
stc
ja
push
or
cmpsl
add
fildll
outsb
adc
incl
xchg
sbb
bound
xchg
add
fsubrs
shrb
jecxz
outsl
cmp
or
and
add
xor
push
jge
xchg
inc
repz
cmp
lret
insb
cmc
or
pop
jbe
xchg
lret
push
mov
outsb
stos
adc
cmpsb
sub
and
add
and
mov
sub
inc
fstps
cld
mov
jns
add
ljmp
int
xor
sub
push
or
btr
sbb
xchg
pop
push
movsl
mov
scas
xchg
dec
jo
and
cmp
cmpsl
mov
mov
xor
add
negl
mov
push
in
jb
iret
mov
mov
cwtl
xchg
fs
ljmp
loope
jno
add
dec
lock
loop
push
dec
outsb
mov
lret
sub
flds
pusha
out
cmp
push
inc
shl
nop
mov
sti
mov
outsb
cmp
fadds
mov
lods
test
sub
repnz
ret
test
sahf
dec
jle
repz
insb
push
mov
fs
cmp
and
jbe
mov
div
xchg
jb
xor
sti
into
sub
mov
aam
jnp
xchg
add
loop
cwtl
jno
roll
insb
xchg
and
into
mov
in
pusha
lock
daa
mov
fstpl
cmp
dec
mov
rcll
sub
out
insb
xlat
out
loop
cmc
outsb
mov
les
fstl
jno
cmc
push
push
jb
mov
dec
and
mov
pop
dec
mov
sbb
icebp
or
lds
cs
and
into
jb
inc
lret
and
repnz
sti
fists
sub
dec
or
call
cmpsb
imul
pop
lea
add
mov
dec
aaa
popf
sti
push
or
ret
xor
in
pop
xchg
mov
add
es
sbb
xor
lock
cmp
lret
add
adc
dec
sub
mov
push
push
fmull
pop
ficompl
and
je
xor
adcl
mov
dec
ret
sbb
pop
in
jb
mov
sbb
fdiv
pop
push
ret
fucomi
std
lahf
pop
aas
scas
sub
sbb
popa
cmp
mov
or
pop
mov
sbb
std
add
xchg
movsb
dec
mov
mov
nop
fmuls
in
decb
mov
push
sbb
dec
jae
mov
subl
cmp
dec
notl
daa
js
mov
inc
xor
loop
xlat
in
fadd
es
insb
dec
jne
insb
dec
sbb
sarl
fcmovb
mov
adc
cmp
mov
cli
mov
mov
jmp
stos
and
jns
out
mov
pusha
xchg
pop
cmp
arpl
push
add
dec
cmpsb
adc
xchg
xchg
data16
jbe
and
push
xchg
inc
stos
aad
cmpsb
arpl
push
stos
fwait
xchg
xchg
lds
loop
cld
test
jge
je
pushf
aas
stos
lock
sbb
fldt
jl
jmp
adc
sub
cmpsb
mov
in
adc
fisttps
jg
rolb
inc
push
xchg
jmp
ret
aam
fstpl
sbb
pop
pop
cwtl
adcl
sub
sub
inc
addr16
sub
in
xchg
int
and
ret
mov
cmc
inc
insb
and
movsl
mov
pop
jl
divl
lods
iret
xchg
adc
mov
cmpsl
js
mov
nop
xor
and
xchg
cwtl
xchg
mov
xchg
and
sbb
mov
rclb
jae
inc
pop
adc
fidivl
or
lods
mov
data16
scas
cli
int
les
cmp
sbb
cmp
test
pusha
fisttpl
push
popf
int3
mov
lods
cmp
inc
sub
xlat
ds
adc
cmp
and
jno
push
jae
jg
bound
sbb
pop
insl
dec
jmp
out
cmp
pop
mov
inc
sti
pop
pop
shl
fdivl
int
inc
cmp
push
lods
clc
and
loopne
and
outsl
xor
xchg
add
push
and
xchg
test
add
out
imul
pop
into
je
lcall
xor
std
pusha
sub
out
add
sbb
ret
cmp
xor
xor
mov
enter
in
int3
mov
pop
ret
sahf
xchg
iret
leave
jl
adc
and
jns
cmpsl
scas
pop
inc
pop
gs
sti
iret
and
sbb
sbb
pop
sbb
or
mov
loopne
int3
xor
xor
and
jno
jnp
jnp
cmc
cmp
sahf
insb
clc
lret
xchg
lcall
mov
inc
mov
cld
pop
dec
lea
xchg
fdivl
pushf
or
adc
rclb
popa
imul
sbb
mov
iret
mov
mov
mov
inc
fcomps
out
inc
xor
sbb
lods
aaa
sbb
lods
rolb
fldl
pop
xorl
mov
push
mov
jo
push
shll
lret
js
inc
jl
incb
leave
mov
add
cld
and
add
lods
out
jmp
or
jp
std
rcll
sbb
fisttps
or
or
sub
rclb
xchg
sub
aad
dec
mov
in
in
int3
sub
pop
out
imul
int
mov
mov
je
adc
and
in
lods
lods
xchg
call
jne
xor
lret
in
xchg
enter
pcmpgtw
div
das
dec
push
xor
js
insl
inc
inc
inc
add
stos
or
or
fwait
add
cmpsb
lcall
dec
push
leave
pmaxub
dec
pop
aaa
push
outsb
ret
mov
nop
cltd
mov
sub
into
mov
iret
lahf
mov
sbb
push
add
xor
aam
out
stos
roll
cmp
push
sub
je
xor
in
cmp
mov
sub
imull
les
and
sub
push
jno
scas
mov
leave
leave
push
hlt
movsl
shl
jle
sti
dec
mov
ret
or
outsl
xchg
mov
xor
jno
xor
aad
out
daa
jge
aas
aas
data16
ja
dec
shl
fadds
ljmp
push
nop
push
cmp
fs
rolb
mov
sub
dec
shll
fimuls
in
pushf
push
and
or
rorl
adc
xchg
adc
loop
push
sbb
adc
bound
ljmp
movsl
adc
fldt
xchg
dec
or
mov
int3
sbb
mov
fs
mov
clc
adc
lcall
xor
movsb
cmp
cwtl
in
aad
push
ja
enter
std
loopne
pop
jle
push
sbb
pop
mov
cmp
or
popa
loopne
sub
mov
dec
inc
add
push
cwtl
add
scas
cli
in
test
popf
test
loope
lcall
xor
out
mov
bound
add
pop
lods
fldcw
mov
cli
push
jno
pop
xor
mov
fcomi
push
jb
movsb
aam
sbb
push
out
imul
jp
jmp
sbb
test
xchg
push
sbb
cmp
mov
or
add
iret
ljmp
sbb
aaa
add
dec
xchg
das
fldenv
add
sar
cwtl
xchg
sbb
mov
scas
les
pop
or
es
test
bound
ss
test
into
jmp
int
adc
or
mov
adc
std
outsb
adc
add
xlat
loope
outsl
bound
mov
mov
push
xor
popf
daa
adc
jl
das
fwait
ret
test
rcl
test
outsb
mov
push
sbb
dec
fmuls
xchg
aaa
loope
sbb
push
add
ret
cmc
adc
pushf
out
xor
push
jb
ja
scas
shrl
data16
shrb
push
push
nop
cmp
push
pop
push
cli
jmp
scas
xchg
or
adc
xchg
push
loop
mov
or
lea
iret
lods
or
sub
mov
sahf
aas
ds
fistpl
cmp
cmp
mov
pop
outsl
jmp
mov
loop
mov
inc
mov
out
or
rclb
jmp
notb
xor
stos
es
imul
mov
dec
sub
imul
outsb
sbb
rolb
mov
or
test
xor
rolb
sub
ret
push
adc
jo
and
popf
andb
sbb
sub
in
cmp
std
xor
jo
sbb
cmp
sbb
test
xor
lods
stc
adc
loopne
scas
xor
cmp
stos
sti
js
add
loop
and
sub
jns
mov
nop
mov
pop
hlt
adc
fldcw
xor
sbb
pop
sbb
jne
lahf
out
cmpl
fisubrs
push
inc
inc
or
fdivs
push
dec
bound
inc
cltd
lret
fdivrl
hlt
test
dec
inc
mov
test
out
dec
push
jge
dec
in
and
sarb
in
inc
dec
add
shlb
imul
jb
push
subb
inc
mov
pop
fwait
gs
and
insl
and
xchg
loop
mov
mov
dec
adc
popa
mov
sbb
jp
dec
outsb
sbb
dec
dec
das
push
rcl
xor
and
mov
fdiv
fldl
shr
stos
ficoms
push
mov
stos
xor
int3
push
jmp
xchg
cmpsb
sbb
dec
sti
movb
aaa
push
dec
pop
dec
lods
jmp
xor
es
xchg
mov
outsb
adc
pop
sub
jo
pop
and
stos
rorb
mov
jp
mov
mov
xchg
nop
aas
add
testl
lea
inc
dec
xor
sub
inc
mov
dec
bound
jo
mov
cltd
add
out
outsl
cmovno
pop
sub
jnp
das
and
dec
add
jecxz
sbb
int3
ja
ds
cmp
push
lahf
out
out
adc
lods
movsb
mov
in
ja
decl
push
into
jle
jno
or
rcr
aam
fwait
rorl
lds
dec
jae
inc
loopne
adc
inc
loop
jns
jae
mov
repz
add
inc
push
and
fnstcw
cs
dec
pop
repnz
and
fcomip
es
and
or
inc
push
inc
dec
mov
xchg
jae
ficoms
dec
sbb
nop
or
sub
jbe
hlt
cmp
jb
add
aad
sub
or
sti
mov
jecxz
jo
loope
jge
cli
cmp
ljmp
cmp
outsb
push
lea
bnd
push
dec
lock
aam
or
repnz
mov
jmp
jl
jno
mov
adc
add
mov
idivb
cmp
pop
inc
push
mov
mov
in
cwtl
push
cmpsb
adc
dec
dec
cltd
sub
push
adc
inc
fwait
nop
int
insl
mov
xor
rcrl
pop
fbld
mov
xor
inc
fnstenv
out
adc
ret
stos
or
fdivrl
push
push
dec
pop
or
notl
xor
aam
xchg
loop
frstor
sub
inc
push
icebp
daa
or
pop
push
sbb
jl
and
push
xchg
jmp
out
xor
movb
movsl
int3
xor
dec
pop
enter
cmpsb
popf
sub
lods
cltd
push
sbb
les
xlat
lock
stc
lahf
out
and
push
cmpb
clc
lea
mov
rcrl
dec
cmpsb
sbb
push
jno
xor
sbb
rcrl
fcompl
repnz
pop
add
dec
fwait
stos
sub
xchg
push
js
mov
jbe
test
fbstp
lock
mov
xor
cwtl
mov
push
scas
das
repnz
mov
push
lcall
out
inc
out
jmp
fiaddl
sub
xchg
jno
and
cli
and
dec
dec
jl
ret
rolb
pop
outsl
add
jbe
nop
push
push
in
sub
scas
jmp
ret
js
sub
push
out
mulb
or
or
mov
mov
sub
jae
add
loope
sub
xor
out
mov
fsubl
and
add
addr16
decb
inc
mov
or
and
pop
cmpsl
movsb
or
pushf
stos
mov
hlt
lret
xchg
lcall
cmpsb
jg
stos
xor
inc
pop
mov
popf
movsl
fwait
out
add
insb
mov
lcall
rolb
add
mov
arpl
add
pushf
mov
xchg
adc
push
pop
out
lcall
in
aas
pop
loopne
dec
es
fsubrs
jnp
mov
sub
icebp
sti
jmp
and
push
ret
dec
adc
fcmove
mov
aas
mov
ja
dec
maskmovq
mull
or
xor
mov
ds
xchg
xchg
imul
repz
cmp
sbbb
ret
or
sbb
arpl
jbe
test
cmp
jle
jno
dec
dec
je,pt
nop
stos
ljmp
push
adc
sbb
cmpsl
mov
or
xchg
cmpsl
sub
es
fsts
das
pop
push
jecxz
in
dec
loopne
or
xchg
cmp
popf
mov
sbb
and
insl
push
jmp
cs
push
push
add
xchg
and
and
push
lock
adc
or
mov
out
inc
in
push
nop
in
mov
fwait
lret
loop
loop
inc
mov
push
sbb
std
jbe
and
xor
shr
xchg
mov
pop
js
sub
adcl
nop
out
mov
pushf
jg
add
mov
mov
jmp
xor
jo
loope
sbb
pop
stos
jecxz
inc
push
les
and
shlb
push
dec
in
push
push
idivl
stc
adc
ja
movsl
cli
les
lahf
push
popa
or
push
sub
lods
aas
or
mov
adc
jp
mov
iret
and
aas
xor
fists
lret
dec
cmp
addr16
adc
mov
cs
sub
add
mov
xorl
push
fstpl
xchg
mov
gs
lea
rolb
cmp
mov
mov
loopne
or
fdivs
les
mov
roll
in
and
movsl
bound
mov
lock
sub
test
adc
or
cmpsb
imul
aas
xor
mov
xor
lods
pop
push
fistps
sub
mov
lods
xor
push
out
divl
sti
xchg
mov
mov
aad
movlhps
sbb
xchg
add
push
mov
iret
jne
notb
push
test
inc
mov
mov
clc
cmp
cltd
push
xchg
sbb
bnd
pop
inc
add
popf
jno
adc
push
push
inc
dec
sahf
push
jae
sbb
xchg
stos
mov
popf
cmp
cmp
insl
xchg
push
and
in
pop
xor
repz
fisubl
fwait
int
loop
push
mov
inc
arpl
sub
nop
and
enter
dec
jae
add
pop
lcall
push
cmp
inc
add
stos
xor
test
jmp
mov
push
sbb
and
imul
xorl
sub
dec
ret
mov
adc
jnp
pop
mov
lcall
rcrb
xchg
popa
imul
into
outsb
ja
ror
sub
add
dec
aam
popa
add
xchg
adc
cmp
dec
mov
dec
hlt
mov
push
ss
jl
arpl
mov
adc
xor
jo
adc
inc
sbb
or
sahf
aaa
mov
hlt
cltd
ljmp
adc
pop
rcr
mov
adc
sbb
repz
ljmp
or
lds
pop
xor
add
jmp
push
pop
jge
mov
sbb
out
imul
xchg
testb
test
clc
ficoml
lock
js
push
decl
mov
sti
xchg
pop
push
jecxz
dec
ljmp
pusha
xor
xor
xorb
dec
pop
mov
pusha
in
rol
int
imul
popa
adc
pop
arpl
lds
test
xor
lea
adcl
mull
lods
sahf
mov
jecxz
fsub
mov
and
insl
jmp
jle
shrb
cmp
cwtl
pop
mov
cs
push
daa
adc
mov
popf
adc
push
data16
imul
mov
out
and
fyl2x
and
or
mov
imul
add
push
and
shll
cs
ret
push
xchg
sbb
adc
popa
out
sub
pop
mov
xor
jo
jae
xlat
aam
in
insb
out
popf
in
sub
dec
ret
cmpsl
jne
movsb
mov
xchg
fs
xchg
xchg
adc
cmp
cmpsb
nop
movsl
adc
ja
or
orl
or
mov
incb
adc
jo
mov
mov
rcr
mov
jg,pn
arpl
fldl
pop
and
mov
jbe
cmp
ljmp
cmpsl
xor
push
push
out
out
sbb
dec
pushf
pop
cmp
jno
adc
mov
mov
and
fidivrs
mov
or
adc
dec
shlb
je
push
cmp
fwait
pop
lret
fdivr
std
and
jp
scas
adc
shrb
aad
mov
dec
sbb
xchg
push
xchg
and
inc
cmp
daa
and
cmp
in
cwtl
fwait
pop
xor
icebp
mov
xchg
sti
fisubl
test
or
ljmp
imul
cmc
leave
addr16
xchg
ljmp
and
out
stc
or
addr16
out
add
loop
loopne
int3
repnz
les
dec
jo
jns
testl
ror
das
in
sbb
cld
dec
xchg
or
jge
or
das
push
adc
std
or
push
sub
sbb
int3
dec
fisttpl
pusha
in
test
sti
xor
mov
outsl
imul
fistpl
pop
jp
clc
mov
xchg
jne
cmp
pop
fsubs
mov
iretw
xor
adc
inc
test
push
incl
in
dec
dec
inc
and
in
pop
test
mov
les
push
adc
sarl
insl
fsub
jbe
adc
mov
pushf
adcb
xchg
or
ljmp
ret
or
add
xlat
inc
or
cmp
and
addb
xchg
sti
sarl
inc
enter
xlat
dec
sti
ljmp
ljmp
es
xchg
aam
mov
scas
mov
jbe
mov
inc
fldt
mov
dec
jge
adc
jmp
enter
test
push
and
pushf
scas
xchg
mov
mov
lock
pop
sub
cmp
jl
mov
add
mov
push
and
cmc
aas
gs
dec
loop
inc
popa
cmp
inc
test
pop
sub
ja
push
mov
push
xor
loope
or
fcomps
sbb
fstl
clc
pop
test
pop
pop
lea
add
cltd
cs
scas
clc
or
pop
ljmp
lods
or
adc
sbb
lcall
jnp
jb
movsl
cwtl
jns
out
inc
pop
pop
push
insl
out
testb
adc
mov
pop
pop
cmp
jo
jo
imul
cli
xchg
pop
push
faddl
ljmp
aaa
cmpb
pop
cmpsl
es
and
mov
xchg
js
mov
mov
sbb
bound
out
mov
adc
sbb
sub
adc
add
mov
add
or
sti
mov
add
out
in
bound
out
cmp
fs
sub
pusha
mov
dec
sbb
jl
jns
jno
repz
repz
mov
xor
sub
je
push
aad
outsl
xor
inc
lret
mov
or
adc
or
or
out
mov
mov
lret
les
inc
pop
cwtl
arpl
add
jo
test
addr16
inc
jmp
loope
inc
xchg
outsb
lahf
adc
add
test
popa
xor
pop
loopne
and
movsb
or
fdivr
add
lret
loop
pusha
or
cmpsl
and
xor
mov
in
add
fstl
dec
testb
fimuls
mov
xchg
mov
inc
aaa
inc
insl
scas
jecxz
subl
sub
ret
mov
push
call
popa
add
ja
jne
mov
inc
out
aad
mov
cmp
ja
xchg
cmp
sar
pop
sub
xchg
insb
mov
into
stos
sbb
clc
mov
and
cmp
dec
insl
inc
leave
iret
sahf
out
repnz
mov
mov
out
cmp
pop
or
loopne
xchg
mov
pop
mov
adc
mov
mov
and
aam
pop
loop
aad
jle
pop
mov
adc
mov
imul
enter
fidivl
inc
lods
push
mov
dec
inc
pushf
movsb
and
and
in
lahf
pop
mov
pop
mov
sti
into
jge
sub
out
into
es
stos
inc
loopne
sti
lock
pop
sub
ss
jmp
jb
adc
and
das
clc
das
mov
ret
fucomip
ja
fwait
dec
cmc
out
mov
push
loopne,pn
pushf
push
sub
out
test
sub
lods
stos
imul
adc
pop
lcall
sub
scas
push
lcall
ljmp
ds
sub
ljmp
sbb
sub
in
sub
push
cmp
fildl
lahf
in
push
sub
ret
xlat
and
test
lods
cli
push
xchg
into
mov
xor
mov
cmp
addr16
out
adc
jns
push
mov
sbb
dec
pop
sub
adc
adc
jge
insl
mov
jne
cmpsb
pop
into
push
xadd
mov
sbb
adc
or
fldenv
bound
je
jns
cli
out
or
into
dec
insl
xor
cs
cmp
imul
mov
leave
test
test
adc
sub
out
ss
xchg
mov
mov
jg
add
sub
pop
jne
rorb
dec
insb
dec
or
icebp
testl
jp
jle
loope
xor
or
xor
in
or
mov
or
lret
pop
outsl
or
arpl
push
mov
fsts
mov
mov
push
push
fsubp
xor
in
push
arpl
mov
aas
lock
lret
sti
cmp
test
and
das
insb
ds
sub
arpl
push
in
loope
jne
sbb
mov
cmpsb
rorb
aad
push
lret
popf
test
mov
std
lret
pop
push
aad
cli
xorb
pop
dec
imull
dec
xlat
push
shl
les
jns
aad
rol
jbe
inc
pop
sbb
nop
dec
pop
xchg
aam
pop
iret
jecxz
negb
mov
lods
inc
xchg
mov
cmc
push
push
fsubrp
mov
fistps
sbb
popf
mov
sahf
outsl
xchg
lret
movsb
cmc
xor
int
test
sub
int
sub
push
sbb
test
mov
pop
push
repnz
mov
stos
int3
mov
fldenv
test
mov
fidivs
jle
dec
into
insl
inc
bound
fwait
out
repnz
gs
or
mov
mov
stos
fistpl
inc
inc
push
push
sbb
xor
mov
out
outsb
rorb
xchg
hlt
nop
hlt
aaa
sbb
mov
std
cltd
insl
fwait
adc
mov
dec
cmp
inc
xchg
cltd
popf
leave
mov
and
inc
jle
frstor
inc
rcrl
or
lock
fildll
xchg
ret
adc
outsl
fwait
adc
and
rcrl
ljmp
pop
push
cmc
int
movsb
jno
jmp
or
sahf
ja
leave
jo
xor
mov
dec
fs
icebp
push
loop
mov
mov
mov
hlt
fwait
ss
cwtl
lods
out
cltd
mov
lret
divl
pop
cmpsb
adc
adc
cmp
and
dec
jns
inc
cmp
xchg
jnp
out
sub
fadd
adc
mov
shlb
lret
push
jne
push
fisubrl
fisubs
dec
add
xor
lods
arpl
push
cld
cwtl
xor
xlat
or
pushf
insl
shr
jne
inc
aaa
mov
push
dec
adc
cmpsl
pop
testl
add
xchg
sar
aas
pop
lcall
fnsave
sub
dec
push
and
test
les
movsb
pop
pop
adc
repz
jae
into
fsubrs
ficompl
mov
pop
cmp
push
frstor
in
sahf
sub
je
cmpsl
leave
jnp
fs
mov
outsb
stos
pop
in
or
push
mov
mov
jl
adc
sahf
adc
jae
lock
arpl
inc
sbb
pop
jecxz
pop
pop
sub
sahf
jge
xchg
in
jno
cmp
and
dec
out
call
sbb
scas
jmp
stos
jns
cmp
iret
adc
popa
jp
and
stos
adc
jbe
arpl
movsb
push
inc
js
cmp
inc
push
imul
push
test
cli
push
je
pop
sbb
pop
xor
jbe
in
movsl
lock
push
add
xchg
bound
jb
adc
sbb
push
dec
ljmp
dec
nop
loop
mov
cmp
or
fists
sub
cmp
adc
cmp
mov
call
mov
xchg
xchg
sbb
clc
frstor
xlat
dec
sub
jg
mov
outsb
sub
shl
push
xchg
or
scas
mov
mov
sahf
dec
pop
mov
adc
jge
cmp
imul
dec
repz
shr
aas
cmpsl
cmp
add
push
daa
ljmp
cwtl
add
xchg
fisubs
xchg
xchg
arpl
mov
jo
fmull
inc
test
xor
les
loopne
or
or
imul
and
push
popa
call
orb
mov
adc
push
sub
in
dec
xchg
pop
xchg
test
lea
outsb
xor
mov
xchg
stc
popf
in
cmp
xchg
out
and
in
stos
sub
add
sbb
jecxz
adc
mov
mov
add
mov
leave
icebp
adc
xor
in
dec
mov
lret
mov
xor
pop
dec
sbb
iret
mov
inc
cmc
idivb
divl
fisubs
aaa
xchg
xchg
jne
in
out
pop
mov
xor
xchg
pop
jmp
paddq
xchg
ret
sub
cmp
xor
mov
push
jecxz
or
push
lret
mov
or
mov
mov
ljmp
repnz
popa
test
scas
imul
stos
ss
outsl
lea
xor
aam
out
mov
scas
and
std
fdivs
pop
sbb
sti
sub
and
ss
lds
push
jg
pop
dec
cmpl
jecxz
jecxz
stc
jbe
jb
jno
ficoml
das
xchg
mov
call
aas
pop
lods
mov
xor
scas
lea
out
into
adc
fcomps
mov
fisttps
jae
xor
cmp
mov
daa
ja
in
mov
movsb
xor
in
cmp
js
dec
sbb
add
sahf
push
lahf
add
stc
test
mov
fwait
add
repz
mov
adc
fbstp
addr16
insb
rolb
movsb
dec
adc
mov
fbld
cmp
or
cmp
sub
xor
adc
repz
add
mov
cmpsl
negb
jmp
mov
repz
pop
xchg
adcl
ds
shr
outsl
jno
mov
mov
or
cmp
div
addl
and
mov
std
xlat
sbb
add
repz
mov
mov
decb
movsl
push
pop
out
mov
pop
inc
fnstsw
push
adc
imul
aam
mov
cmp
stc
xchg
call
or
aas
fs
call
mov
sbb
xor
adc
jns
test
sbb
popa
pop
sbb
std
int3
pusha
pop
mov
stos
test
lock
test
mov
rcrl
in
rcrb
cmpsb
cmpsl
push
adc
out
jbe
mov
push
or
cmc
cmp
insl
mov
xchg
mov
outsl
xchg
lds
rcll
mov
imul
stc
fisttpll
insb
dec
enter
inc
pop
scas
jae
int3
mov
xchg
cmpsb
adc
int
test
cs
shl
loopne
pop
xor
sahf
or
les
adc
sbb
movsl
and
repnz
mov
adc
sbb
mov
xor
jl
aam
in
pop
decb
test
pop
mov
and
mov
imul
leave
xchg
jne
xchg
cmp
daa
fmull
add
jg
pop
inc
fldenv
xchg
cwtl
sbb
or
xor
test
add
adcl
pop
pop
jg
lcall
cmc
lea
lods
push
xchg
leave
loop
add
lahf
data16
lods
loop
imul
add
sbb
test
cmp
or
mov
insl
sbb
sti
add
sbb
xor
shl
pushf
fadds
in
rcrl
out
mov
nop
ja
fimull
ret
pop
jge
lret
test
add
dec
in
mov
push
out
adc
or
xchg
xchg
inc
jmp
fldt
pop
testl
dec
xchg
mov
in
int
push
xchg
adc
or
inc
xor
rcl
mov
xor
and
adc
inc
mov
xor
inc
stos
mov
jo
ljmp
cmc
xor
xchg
shll
out
and
lods
jecxz
add
pop
jle
adc
adc
cmpsb
or
add
ror
jmp
ja
xchg
sarl
push
mov
dec
ret
mov
fisubl
ret
pop
push
push
sarl
add
idiv
xor
xchg
inc
adc
inc
adc
loop
dec
ret
xor
jl
je
fst
mov
ljmp
sub
pop
and
enter
xor
xchg
out
cwtl
mov
dec
fs
fs
enter
mov
enter
inc
inc
xchg
pusha
mov
sbb
add
pushf
clc
insl
pop
jnp
ja
xor
dec
pop
bound
loope
leave
jp
jb
shll
aaa
mov
lods
sub
aas
add
insl
pop
jne
sub
pop
cwtl
xchg
xlat
pop
and
stos
std
loop
mov
psraw
mov
push
enter
or
pop
and
mov
mov
out
mov
imul
std
jnp
adc
outsb
xchg
inc
cmpl
xchg
xlat
jbe
sbb
in
outsb
mov
das
or
inc
test
aaa
jecxz
jns
stos
sbb
mov
cs
mov
push
stos
loop
and
lret
jecxz
in
sti
mov
push
xchg
leave
mov
loope
pop
push
cmp
pop
sub
bound
repnz
pop
stos
pop
std
idivl
jle
mov
bound
dec
inc
cli
movsl
xchg
or
sahf
mov
cmp
xchg
sbb
push
cmc
divl
adc
push
fisttps
push
out
or
add
stos
xchg
adc
scas
xchg
mov
daa
lods
xchg
shll
loop
and
ret
inc
aaa
lea
mull
movsl
rolb
push
inc
pop
sti
data16
mov
push
aas
testl
test
imul
into
mov
or
and
sub
jnp
cwtl
enter
xor
lock
xor
and
and
cwtl
mov
sub
jmp
lret
jnp
je
pop
dec
sub
cmp
lret
mov
movsl
cs
push
cmp
fldenv
repnz
cmp
shl
aaa
popa
push
jne
je
outsb
push
jnp
jle
jl
xchg
push
cmc
stos
dec
sbb
mov
sbbb
xchg
sbb
pop
arpl
pop
mov
mov
aas
adc
cmp
gs
loopne
stos
pop
outsb
in
push
movsb
fisubs
in
popf
das
adc
cwtl
repnz
rorb
add
cld
or
arpl
xchg
mov
test
dec
adc
jne
lea
jecxz
int
mov
xor
cwtl
sub
and
mov
insl
pop
dec
cmp
lock
fadds
and
mov
xchg
cli
fs
cli
jmp
jecxz
jne
popa
pushf
mov
test
mov
cwtl
rolb
dec
inc
in
cltd
and
jnp
ret
xchg
cmp
bound
jp
das
sbb
aas
pushf
dec
cmp
mov
fucomip
and
mov
imul
into
sbb
or
movl
jae
cmp
fisubl
xlat
daa
and
push
es
push
insl
jns
push
pushf
mov
sbb
cld
pop
pop
mov
repz
mov
push
movb
and
scas
je
scas
inc
ret
stc
adc
xchg
in
fs
loop
sub
push
mov
fnsave
into
cmp
mov
inc
xorb
movhps
mov
mov
loop
sub
fcoms
and
jle
adc
adc
and
jno
dec
pop
jno
inc
push
scas
popa
sbb
lret
xor
add
mov
mov
imul
fstl
jl
inc
scas
ror
test
push
xor
gs
sbb
push
mov
lods
jmp
dec
push
sbb
push
dec
fistps
addl
xchg
jp
sbb
fcomps
aam
dec
xchg
test
aad
in
dec
hlt
jo
neg
xchg
mov
mov
cld
xor
scas
jecxz
es
popfw
addb
leave
xchg
in
jbe
pushf
mov
xchg
insl
and
push
jle
cmp
ja
xchg
in
sbb
fs
call
lcall
pop
dec
mov
jmp
jbe
pop
das
mov
mov
lcall
popf
idivb
out
add
cmc
xacquire
mov
xchg
dec
cmc
out
inc
sbb
pop
ret
mov
aam
ja
jns
sarl
push
cmp
icebp
subl
pushf
insl
pop
in
js
inc
in
fsubr
fcmovne
fcoms
les
fidivrl
int3
and
test
add
jbe
mov
push
adc
xor
mov
sub
shll
xor
and
xchg
mov
cmp
lret
cs
or
lahf
adc
daa
lock
dec
add
cs
mov
lret
incb
dec
fs
and
imul
sbb
push
jb
lock
insb
hlt
loopne
jecxz
cmp
fs
pop
cld
dec
cmp
push
jbe
and
pop
jle
push
rolb
cwtl
fisubrs
inc
and
sub
enter
divl
xchg
mov
inc
and
cmpsb
mov
mov
lret
int
adc
nop
popf
or
xchg
addr16
fcmovnbe
jae
roll
inc
movups
adc
cltd
cmc
pop
push
lret
ds
and
lods
mov
dec
aam
lock
cwtl
add
dec
mov
and
sarl
xor
cs
and
push
test
sti
pusha
pop
scas
in
popf
fs
add
jo
data16
cmpsl
adc
mov
pop
mov
dec
mov
cmp
dec
inc
nop
xor
mov
hlt
mov
orl
xchg
sbb
jbe
out
pop
cwtl
or
movsl
xlat
scas
add
outsb
leave
xor
pop
inc
aaa
jns
mov
xchg
lret
xchg
add
loopne
jge
jb
ljmp
push
push
test
sahf
divl
cmp
sbb
cmp
lock
jnp
mov
les
cmpsb
jae
inc
test
push
lock
jg
jmp
movsb
pop
adc
mov
repz
cltd
call
std
andl
or
js
ret
xchg
ret
idivl
xor
and
icebp
pop
lea
testl
subb
mov
iret
jg
mov
aam
cli
ror
cmpsl
adc
mov
les
xchg
xlat
int3
dec
nop
xor
cmc
and
pop
dec
mull
enter
dec
mov
out
cmp
inc
cs
add
pop
cmp
pop
negl
inc
mov
cmp
repz
dec
aaa
lea
fldcw
icebp
sub
xchg
mov
data16
enter
lahf
xor
mov
inc
adc
cmp
push
jecxz
pushf
rolb
add
test
sub
sbb
dec
fldt
cmpsb
aam
jae
sti
in
push
movsl
inc
sbb
cli
fisubrs
mov
pop
imul
mov
xchg
rcrb
cmp
imul
mov
movsl
push
imul
adc
sbb
mov
inc
mov
lods
insb
pop
dec
push
inc
mov
ret
or
fnstsw
out
jle
or
push
pop
push
jecxz
pushf
cmp
mov
imulb
ret
leave
xor
xchg
negb
pusha
xlat
mov
addr16
mov
mov
outsl
lcall
xchg
sahf
aas
xlat
xchg
aad
mov
sbb
mov
pop
or
cwtl
mov
mov
sbb
outsl
adc
fcmovnb
inc
out
pop
popa
add
push
in
pop
std
xchg
jp
notl
xchg
subl
push
ficomps
inc
add
inc
scas
popa
mov
insb
insl
xlat
fdivrs
in
rcrb
ja
jecxz
push
dec
cmp
jg
les
leave
sbb
neg
dec
movsl
mov
mov
rorl
push
movl
cmp
push
sbb
cmp
add
gs
or
faddl
movsl
stos
addr16
cld
test
enter
xchg
jg
repz
and
ja
xchg
push
and
cmpsb
inc
daa
outsl
fwait
das
cmpb
fidivl
hlt
scas
and
imul
leave
into
ja
push
push
or
mov
xchg
xchg
nop
bound
shr
mulb
mov
mov
icebp
mov
cli
ficoml
lret
fs
inc
jne
xor
rcrb
bound
mov
insb
dec
aaa
push
repnz
adc
pop
pop
fdivs
jge
xchg
sbb
in
push
mov
mov
daa
in
xchg
cmp
pop
add
sbb
into
pop
dec
jb
outsl
lcall
lods
fisttpl
in
lret
xor
fistpll
or
xchg
hlt
mov
jge
inc
pop
subl
inc
scas
xchg
xor
sbb
jnp
inc
mov
sub
stos
fldenv
dec
or
in
mov
aas
mov
cs
xor
rcr
lods
shrl
fbld
jns
in
shl
xorb
and
movl
push
loope
pop
repz
xor
lock
fs
stos
xchg
dec
mov
or
scas
int3
dec
daa
adc
dec
shll
xchg
push
lcall
jp
jp
xor
jle
ds
mov
imul
popa
or
cli
adc
push
popf
cmp
test
pop
fistpl
out
in
fdivrs
pop
out
fisttps
pop
sbb
shrl
xor
inc
fwait
pop
divl
mov
ds
mov
icebp
sub
dec
hlt
jno
mov
xchg
mov
js
pop
aas
add
test
xor
rcl
cs
add
xchg
mov
mov
adc
aaa
jb
cltd
ljmp
lret
xor
out
push
xorb
inc
sub
or
sbb
add
mov
add
push
fstp
cmc
xchg
lods
cmp
jle
push
aad
and
xor
and
pop
pop
pop
insl
push
pop
adc
repz
ret
ja
outsl
xlat
sahf
clc
mov
cs
out
mov
jnp
rcrl
dec
rcr
shll
push
scas
xchg
in
pop
jge
out
arpl
int3
lock
stc
jecxz
aaa
int3
pop
inc
jmp
fidivrs
mov
sub
ss
test
mov
pop
test
sub
push
out
daa
frstpm(287
les
mov
xor
cli
movsb
lock
imul
and
repz
pop
or
scas
jle
fcoms
flds
aas
inc
sbb
mov
fcompl
mov
push
pop
popf
add
stos
arpl
jo
or
add
xlat
push
adc
jg
mov
mov
sub
pop
test
adc
push
pusha
add
das
btc
pop
pop
cld
arpl
test
rcrb
push
movsb
lods
jne
out
fwait
and
filds
sub
fsubrs
sbb
jmp
mov
and
or
sub
xor
out
adc
loopne
icebp
lcall
inc
push
test
das
mov
inc
mov
cs
out
andb
xchg
aam
iret
or
xor
xchg
fnstcw
inc
bound
mov
mov
inc
and
clc
push
push
pop
push
in
cli
or
sbb
cmp
mov
jl
pop
pop
jnp
inc
mov
xor
mov
inc
mov
add
sarl
push
mov
add
call
xorl
push
ljmp
cld
mov
dec
add
jecxz
push
and
jecxz
adc
pop
dec
dec
subl
cltd
stc
adc
inc
aam
inc
mov
pop
adcl
out
lret
jmp
pop
cs
in
pop
jge
fisttpl
cltd
push
hlt
in
sub
pop
daa
cmpsb
test
and
stos
adc
fadds
rorl
out
or
adc
jl
xchg
mov
mov
jbe
nop
xchg
cmpb
and
es
dec
pusha
mov
sarb
jnp
shlb
mov
jae
inc
movsl
sub
and
mov
jmp
jne
cmp
and
or
mov
add
pop
xorb
xor
or
xor
ja
mov
orb
mov
insl
lret
pop
inc
cld
mov
std
pop
mov
and
pop
cmp
notb
out
xchg
xor
cmp
in
jae
popf
ret
xor
jb
xchg
mov
aad
notw
cmp
pop
sub
push
mov
mov
jne
sub
rolb
popf
add
and
nop
or
xor
test
clc
jb
cmp
pop
popf
fidivl
clc
mov
mov
rcrl
shl
arpl
pop
pop
les
or
popf
sub
es
mov
sbb
cld
lahf
fmull
adc
inc
into
add
in
jne
add
xchg
icebp
or
test
imul
lcall
pusha
and
jae
fdivl
in
and
dec
fisubrl
test
ret
leave
jns
daa
and
insl
add
add
lret
sbb
push
aam
xorl
mov
jge
int
inc
out
ja
rcrl
push
adc
and
dec
mov
fmuls
lahf
push
out
dec
push
hlt
scas
ficoms
shll
xchg
push
popf
mov
mov
nop
stc
mov
mov
xchg
cmpsl
sbb
enter
sub
ror
shlb
popa
push
enter
or
sub
sub
adc
repz
push
imul
decb
or
imul
ret
sub
lea
into
sahf
into
mov
iret
ljmp
leave
adc
sbb
adc
sub
pop
sbb
in
andb
sbb
ret
xlat
popa
push
xchg
adc
pop
repz
test
push
xchg
and
push
and
je
fs
unpckhps
shrb
xchg
add
add
shlb
dec
push
lahf
xchg
xor
push
jne
test
fcoms
dec
jae
call
lods
pop
lds
fs
shl
test
pop
adc
popa
dec
ljmp
jecxz
popa
ds
mov
int3
rcll
mov
mull
jecxz
pop
adc
dec
ffreep
xchg
stos
or
add
filds
mov
into
sbb
sub
add
aaa
fsubs
xor
xor
mov
cmc
xchg
lods
dec
add
lods
dec
sbb
jns
add
mov
cmp
push
add
dec
sub
outsb
imulb
sub
add
and
insb
push
pop
fwait
push
scas
and
lret
push
push
nop/reserved
ja
adc
jne
stos
and
xor
add
and
fstpt
fistps
or
pop
xchg
test
adc
ror
dec
in
adc
add
mov
bound
fmul
and
rcrl
scas
push
push
addl
jns
scas
jo
cmc
lods
sub
popf
enter
jl
in
fldt
shlb
mov
sub
or
add
add
and
xor
lods
js
loope
ror
xor
fisubl
hlt
fnstsw
aad
push
xlat
addr16
in
add
mov
sub
add
jbe
sahf
inc
fndisi(8087
jns
add
mov
mov
add
jns
js
jmp
xor
and
hlt
or
xchg
xchg
cmp
fmuls
pop
popl
aam
test
arpl
pop
add
mov
bound
lcall
into
rclb
aaa
rcrb
sbb
mov
fdivr
rcrl
push
adc
push
lods
mov
jmp
sub
gs
cmp
outsl
loopne
mov
xchg
push
add
add
insb
cwtl
lods
xchg
cmp
aas
rcll
out
inc
xchg
cmp
lahf
mulb
insl
sbb
add
stos
dec
ds
test
pop
adc
int
out
mov
mull
aas
sbb
cmp
pop
enter
test
stos
inc
push
fidivl
xor
js
shl
testb
addr16
sub
mov
or
fucomi
push
sub
xor
xor
popf
push
in
inc
cmc
aad
loope
rol
jns
sbb
add
push
inc
adc
adc
and
jmp
xchg
mov
test
out
jp
fisttps
xchg
sub
es
pushf
cmc
sbb
hlt
outsb
inc
out
xchg
add
and
out
xchg
dec
pop
testl
mov
lock
dec
add
or
mov
ss
in
mov
insb
ja
std
mov
xor
rcr
pop
hlt
outsb
lock
xchg
pop
sbb
sar
xor
mov
movsb
dec
cmp
iret
jb
mov
jo
nop
jae
xlat
mov
sub
iret
sti
sub
shrl
jmp
mov
nop
dec
out
and
lahf
mov
push
adc
cmpb
sub
mov
andb
dec
xchg
adc
cmp
and
fnstsw
mov
add
lcall
aaa
mov
lahf
cld
loope
inc
imul
pop
lahf
movsb
mov
pop
int3
dec
popfw
cmp
jp
xchg
cmpsb
leave
jbe
pop
cmc
xchg
sub
add
sbb
mov
jns
adc
xchg
cmp
sbb
mov
adc
leave
inc
mov
stos
cmp
imul
sbb
inc
flds
mov
movsl
xor
and
into
sbb
loope
loope
movsb
fildll
mov
bound
mov
mov
and
or
mov
mov
or
arpl
mov
push
jno,pn
cmp
mov
cmpsb
push
or
adc
iret
in
repnz
adc
jb
jbe
outsl
repz
ret
imul
fsubl
xchg
push
cmp
dec
fidivrs
sarb
push
mov
out
mov
xor
jne
pop
cmp
lds
ljmp
les
es
mov
xor
cmpsb
push
arpl
repz
lcall
mov
xlat
jae
rol
xor
xor
sahf
and
in
xor
cmpsl
and
mov
push
dec
mov
pop
imul
pop
stos
add
or
dec
gs
sbb
adc
les
sub
push
push
jge
jmp
out
push
out
dec
pop
add
pop
imul
mov
mov
sub
das
int3
in
sbbl
dec
dec
ljmp
rolb
in
repz
jl
fwait
cmp
cld
rcrl
and
fisubl
out
xchg
fsubp
mov
addr16
or
xor
into
push
sti
push
lds
sbb
lcall
jo
daa
loop
call
popa
lock
lcall
lea
fsubrs
stos
mov
rcrl
adc
movb
jne
jmp
lahf
xchg
movsl
fistl
test
mov
push
jl
xchg
pop
iret
fimull
add
jbe
push
jo
sub
iret
adc
popa
or
call
sbb
das
mov
imul
loope
adc
adc
lea
mov
sub
ljmp
xchg
call
jns
cmc
test
imul
inc
mov
jp
aaa
lds
pop
stos
adc
jmp
and
ret
loop
punpckldq
cmp
inc
or
lods
stc
fstpt
hlt
repz
push
push
jmp
mov
adc
pop
mov
leave
xchg
and
jno
stc
leave
inc
in
hlt
xor
lret
pushf
pop
loopw
ljmp
loope
hlt
in
daa
cli
mov
push
jns
mov
jle
pop
jnp
into
imul
out
jge
jbe
mov
jae
int3
or
shll
push
push
mov
jle
push
mov
pop
sub
rcrb
in
mov
repnz
cmp
mov
mov
aam
push
gs
es
cmpsb
jle
sub
push
aad
sub
inc
jmp
test
addl
mov
int3
and
lcall
mov
jae
shr
lds
out
scas
add
pusha
dec
mov
sbb
jmp
in
jne
jmp
lahf
in
push
repz
divl
or
sub
popa
mov
sub
and
inc
ja
or
nop
sbb
mov
push
mov
cltd
out
mov
push
cli
push
stc
sbb
adc
sbb
scas
imul
push
int
es
adc
rcrl
std
or
ret
mov
iret
jmp
jb
pop
fs
int3
jb
push
pop
jnp
popa
pop
sbb
popa
mov
inc
mov
loopne
jnp
or
loope
mov
jo
lods
sarb
cwtl
mov
mov
popf
push
insl
push
cli
popa
mov
sbb
jle
and
mov
subl
cmp
bound
lods
mov
pop
inc
cld
fs
push
pop
xchg
mov
lods
or
add
pop
mov
jl
xchg
mov
notb
fsubl
pop
cmpsl
leave
loopne
lcall
aaa
fidivrs
inc
fadds
cmp
fldenv
jmp
inc
cltd
into
ret
notb
add
flds
das
adc
int3
ret
sub
ficoml
mov
jg
jnp
ja
rorl
lock
arpl
add
cltd
inc
dec
cmp
push
ss
or
sbb
repnz
addl
pop
dec
dec
data16
push
cwtl
shlb
and
inc
or
dec
jecxz
pop
mov
add
divb
lea
dec
es
lods
lods
add
lret
popf
lahf
push
xor
pop
mov
mov
push
in
xchg
cwtl
pop
jecxz
and
daa
mov
xchg
std
xor
inc
gs
sbb
xlat
popf
mov
mov
cmp
les
cmpsb
and
clc
fcoms
mov
scas
mov
sub
insb
mov
xlat
lahf
fs
sahf
adc
mov
hlt
popf
enter
inc
jle
inc
pop
lahf
push
cmp
sbb
loop
mov
enter
jmp
in
xorb
ret
push
lock
xor
jbe
gs
int
insb
cwtl
fldl
int
and
pop
leave
push
inc
mov
mov
into
call
mov
int3
jmp
sahf
std
rcrl
pop
cwtl
idivl
rorb
hlt
pop
push
stc
decl
xor
jae
push
cmpxchg
cld
mov
push
bound
aaa
and
jl
mov
mov
cmp
pop
pop
out
daa
jns
xor
jnp
loope
test
in
sbb
fsubrl
iret
cmpsl
jle
lods
xchg
mov
out
xorb
rol
bound
mov
mov
jae
cld
loop
cmpsb
das
das
popa
das
and
addr16
clc
dec
jecxz
arpl
push
enter
mov
dec
push
mov
jb
add
jo
rclb
arpl
jne
subw
sbb
lret
fidivl
add
pop
dec
sbb
add
int3
push
cmp
mov
iret
jmp
adc
inc
mov
or
xor
ds
out
inc
adc
adc
jle
aaa
scas
mov
mov
push
xor
movsb
add
adc
pop
inc
ja
loope
mov
dec
sub
mov
in
or
repz
or
in
fldenv
pop
insl
fsubrl
in
sub
mov
lds
rcl
push
orb
sarl
dec
cwtl
push
jp
sub
mov
popf
mov
aad
or
daa
sarl
cmp
fcoml
movsl
inc
xor
sub
dec
cld
hlt
push
loope
adc
jnp
mov
mov
dec
xchg
cmc
andl
out
pop
or
jl
sbb
inc
xchg
inc
dec
in
sbb
iret
cltd
int
and
movsb
into
ret
mov
pop
and
nop
rorl
mov
test
mov
loope
popa
cmc
ja
xchg
mov
data16
imul
pop
les
jno
movsb
fildll
lods
lods
xor
inc
ret
das
mov
fwait
mov
lret
add
repnz
out
push
cltd
loop
dec
mov
add
or
pop
sub
cwtl
pop
dec
sarb
pop
pop
push
cmpsb
daa
ficoml
mov
into
hlt
addb
rolb
fidivrl
mov
or
mov
jae
imull
jmp
jbe
sub
movd
movaps
lock
bound
fnstenv
jnp
lea
icebp
je
pop
jp
sbb
test
loope
shlb
into
mov
sbb
and
push
xchg
fistpl
ret
aaa
icebp
jno
dec
lods
dec
sahf
mov
stc
push
jecxz
xchg
lods
pop
lods
fisubs
pop
jmp
scas
pop
sti
xchg
xchg
subb
notl
subb
xchg
jnp
dec
push
or
std
out
int3
dec
pop
cmp
jmp
pop
lret
jns
daa
lea
and
stos
ret
sbb
packsswb
xchg
pop
xchg
mov
adc
stos
stos
in
leave
fldt
movsb
push
dec
pop
sbb
jge
xor
movsb
pop
mov
repnz
int
sub
in
cmp
imul
imulb
test
add
jmp
decl
std
loopne
sbb
inc
xlat
stc
jecxz
xchg
movsb
and
jne
xor
sub
jmp
jnp
fwait
in
sbb
je
loope
popf
enter
loope
cld
aas
aaa
cmpsl
into
pop
jns
or
inc
xchg
loopne
int3
cltd
mov
in
repz
add
adc
dec
pop
cmp
push
mov
in
fdivl
in
out
cld
mov
mov
dec
outsl
and
pop
fcompl
jnp
dec
test
sbb
mov
lods
fistps
jmp
mov
dec
mov
jno
adc
dec
jge
loope
repnz
xchg
mov
mov
arpl
cld
mov
cmc
pop
aam
or
dec
xor
mov
lret
fldcw
ljmp
add
out
cmp
bound
adc
mov
jo
lahf
es
mov
mov
mov
ja
cld
int3
push
int
push
xor
rcrb
xor
in
push
stos
or
orl
scas
into
and
dec
outsb
cmp
mov
inc
mov
mov
add
fstps
lahf
xor
pop
add
jns
cmp
inc
mov
sahf
leave
loop
mov
cmpsb
pop
stos
pusha
cs
mov
add
out
sahf
push
push
mov
cmpsl
sar
mov
push
pop
push
jbe
sbb
cmpsb
ds
loope
pop
out
dec
das
pop
mov
sbb
pop
jmp
repz
mov
int3
pause
sub
jge
mov
and
adc
pushf
dec
mov
mov
pop
ret
pop
out
pop
jl
dec
xchg
xchg
stos
dec
lds
jmp
pop
jecxz
movsb
xlat
inc
add
gs
pop
or
add
lods
ret
or
pop
pop
fwait
jp
int3
xchg
or
add
gs
add
inc
push
mov
call
sub
xchg
cltd
push
xchg
cmpb
jle
xchg
insb
mov
lea
push
xchg
cmp
int
leave
jae
mov
in
and
lods
xchg
push
nop
cmpsl
cmc
push
xchg
ss
inc
out
loope
inc
fisttpll
insl
sbb
dec
xchg
mov
fs
adc
cmp
push
imul
jno
jmp
out
clc
lcall
xchg
imul
adc
addr16
movsb
iret
sbb
out
ds
leave
add
dec
jg
insl
cmp
push
cmp
inc
fisubl
call
movl
or
sti
lds
jge
ja
mov
mov
jno
push
pop
push
adc
xor
adcb
ljmp
push
pop
aad
jl
and
in
enter
mov
add
pop
rorl
arpl
jp
sbb
stc
push
or
push
ljmp
mov
or
xor
movb
inc
int
outsl
add
aad
mov
jl
xor
jle
aad
mov
push
aas
dec
lock
jmp
mov
out
out
test
mov
fldcw
aam
lock
xor
cmpl
dec
mov
jg
mov
jp
mov
jno
adc
xchg
and
shll
in
push
cmp
sub
ljmp
add
mov
lds
test
test
vpmacswd
mov
mov
dec
not
xchg
cltd
loop
mov
lcall
aad
xchg
jno
add
out
movsl
decb
pop
call
add
imul
xor
add
iret
xchg
das
bnd
mov
xchg
ret
cmp
call
stos
pop
pop
adc
dec
iret
pop
cmpsb
sub
fnsave
sbb
inc
shll
cli
xorl
aam
mov
cmp
pusha
mov
lea
movsb
sub
cmc
inc
push
push
idivb
push
shlb
js
mov
scas
and
fidivl
imul
sub
xchg
jne
push
push
in
xchg
or
gs
jg
or
iret
ss
pop
sbb
fwait
xlat
bound
imul
insb
xor
pop
test
sbb
inc
movsb
jle
iret
testb
push
jl
add
xchg
xor
fs
punpckhbw
xchg
xchg
jle
nop
sub
xorb
cs
pop
int3
mov
or
sarl
jb
pop
jg
pop
xchg
into
sub
sbb
push
imul
aad
adc
pop
int
mov
inc
hlt
arpl
lock
cmc
mov
lcall
push
mov
ret
dec
mov
xchg
mov
add
xor
jge
push
test
push
inc
and
jmp
lds
sahf
and
and
aad
inc
imul
pop
outsb
pusha
rolb
dec
jge
sub
or
pop
aaa
orb
lods
xchg
lods
sub
and
jnp
jp
movsb
repz
inc
idivb
dec
pushf
rcrl
jb
mov
inc
sbb
sti
rcrb
ficoml
adc
add
lock
sarb
inc
into
jle
push
cmp
ds
xor
mov
pop
leave
fidivrl
cwtl
lock
pop
pop
push
aad
jae
fcoms
sbb
push
js
xor
lcall
adc
add
adc
in
xchg
loope
daa
imul
es
test
mov
mov
cltd
scas
jae
pop
cmpsb
mov
insl
and
out
scas
mov
mov
adc
popa
or
inc
sbb
fs
jno
repnz
xor
add
sbb
xchg
leave
movsl
cmp
push
sub
ret
mov
or
aas
cmc
push
lock
pop
xor
sub
testl
and
dec
ret
test
rcrb
and
ds
xlat
outsb
aas
xor
mov
pop
xor
mov
test
cmp
sub
mov
inc
out
pop
push
shll
mov
xlat
and
cmp
fbstp
push
inc
adc
loope
shlb
mov
cmp
push
sbb
jns
push
xchg
movsl
cmpb
jnp
or
mov
cmpsb
addb
mov
pop
ret
add
xor
jo
sub
js
jne
repz
push
icebp
mov
add
hlt
test
pop
fsubrs
sbb
mov
popa
in
imul
fbld
push
clc
jns
shll
sti
inc
lret
fdivs
out
lock
adc
sub
icebp
mov
xor
in
adc
mov
out
arpl
das
dec
cld
lcall
pop
test
shll
or
loop
xor
jg
cmp
lcall
inc
mov
leave
lods
cmp
dec
fsubp
adc
xchg
pop
jg
jne
fwait
test
out
pop
jp
fimuls
shlb
dec
fisubs
mov
push
iret
mov
mov
leave
inc
rclb
pop
push
sbb
aaa
sbb
aaa
testl
sbb
sar
insb
pop
adc
jge
pop
xchg
mov
jle
fdivp
call
add
or
pusha
negl
mov
hlt
mov
das
mov
test
jl
mov
enter
imull
dec
and
xchg
nop
push
repz
cld
popf
lock
aas
inc
pop
push
gs
dec
fimuls
daa
mov
jno
xchg
xchg
sbb
shll
push
jb
out
or
adc
loop
repz
ret
popf
vmovsd
addr16
jbe
sub
gs
adc
jecxz
xor
pop
call
xor
lock
xchg
cmp
dec
add
push
mulb
pushf
imul
lock
mov
or
scas
lock
loope,pt
out
xor
jbe
test
mov
call
add
outsb
js
mov
push
int
popa
adc
pop
push
rcrb
out
sbb
lds
mov
rorb
test
push
sub
mov
mov
clc
or
icebp
inc
cmp
enter
cmovge
sbb
fiaddl
stos
cmpsb
and
sbb
or
pop
mov
cmp
xor
clc
cmp
adc
cmpsl
fs
imul
cwtl
cmp
mov
lock
xchg
lea
and
mov
jle
out
or
jl
shll
addb
lcall
popl
bound
shrl
ja
inc
les
dec
pop
sbb
inc
dec
movsl
xchg
jg
and
and
adc
xlat
xor
cmp
mov
push
and
movsl
fbstp
ljmp
inc
mov
scas
cli
jmp
stos
ret
cs
sub
mov
mov
mov
jae
leave
orl
sbb
adc
repz
mov
adc
xchg
mov
inc
cli
ljmp
jp
mov
inc
inc
cmp
repnz
loop
mov
out
add
jns
or
lret
movsl
aas
out
push
leave
in
shlb
or
in
mov
lods
out
inc
inc
jo
adc
rcrl
cs
xchg
loope
dec
stc
test
enter
inc
hlt
mov
push
shrl
inc
sbb
movsb
inc
addr16
cmp
repnz
push
jo
testl
add
and
pop
lret
aad
sbb
inc
mov
pop
xchg
push
cmp
int3
push
jnp
add
or
insb
jo
data16
stc
sbb
xchg
push
test
mov
mov
pop
idivb
mov
loope
pop
adc
jbe
inc
cs
mov
out
incb
push
or
pop
or
jne
inc
lds
sub
fs
mov
fidivrl
push
mov
cmpsl
and
xchg
adc
test
mov
ss
add
lahf
mov
push
inc
in
repz
test
jns
or
or
leave
adc
mov
pop
add
neg
xlat
lock
push
cli
sbb
pop
mov
xchg
or
rcll
mov
and
stos
out
loop
in
push
and
leave
shlb
jmp
shrl
cmp
push
repnz
mov
test
mov
mov
push
mov
shlb
pop
jno
dec
pushf
mov
add
sub
outsb
push
push
in
lds
xor
mov
push
in
jge
jno
sahf
aaa
idivb
dec
dec
xchg
ljmp
mov
add
je
adc
jle
filds
adc
inc
mov
cmpsb
mov
mov
or
inc
loop
sub
adc
mov
lds
jo
push
adc
push
js
scas
and
and
mov
test
in
or
xor
xchg
insb
jmp
inc
imul
xchg
out
or
push
jle
pop
loopne
in
push
mov
push
les
mov
mov
mov
fildll
cmp
cmpsb
rcrl
das
into
dec
sbb
inc
pop
inc
jg
daa
dec
mov
sarb
sbb
jne
inc
aad
int3
xchg
push
lcall
ss
fsubrs
scas
cmpsl
lods
cli
ret
mov
test
mov
pop
fstl
dec
pop
jae
xor
jge
sbb
push
or
adc
sbb
mov
inc
ficomps
pushf
and
stc
sbb
and
or
jae
push
mov
decl
cmp
or
pop
and
pop
popf
sbb
insb
cmp
and
mov
push
outsb
int
gs
mov
int3
pop
loop
repnz
lods
push
jo
out
pop
xchg
mov
add
push
cmp
vpaddd
js
or
adc
lds
sbb
outsb
int
inc
imul
in
fstpl
push
add
enter
xor
ja
and
adc
in
leave
lahf
dec
comiss
mov
cmp
insb
push
and
lret
in
push
pop
std
sbb
cltd
pop
loop
sti
enter
fisttps
jmp
stos
mov
pop
lahf
jns
push
popa
pop
pop
ret
add
pusha
mov
dec
mov
xor
or
std
and
xchg
dec
inc
dec
mov
lret
xor
mov
adc
adc
icebp
js
sahf
scas
adc
dec
sti
mov
xchg
nop
pop
dec
sbb
fucom
lock
xchg
mov
rolb
stc
ja
cmp
pop
ja
jg
adc
icebp
test
push
cs
mov
and
out
ret
idivb
cmp
add
fsts
lahf
test
xlat
mov
movsb
insl
jmp
sti
pop
jno
pusha
adc
adc
mov
fdivs
sbb
mov
test
subb
mov
jmp
es
ficomps
cwtl
and
pop
push
out
rorl
insl
add
push
or
inc
adc
mov
sbb
cmc
xor
pop
movb
test
cmp
or
cli
xchg
scas
cmc
das
daa
int3
mov
xchg
roll
jp,pn
fcoml
enter
fwait
and
adc
inc
out
scas
sbb
or
cmc
push
cmp
out
sti
dec
xchg
mov
dec
and
mov
cmp
rorb
or
cmp
loop
lahf
addr16
push
add
mov
in
scas
jne
cmp
rorl
rorl
jp
decl
xchg
xor
ficomps
mov
pop
vcvtpd2dqy
sbb
pop
add
out
add
push
sub
adc
das
add
xor
in
pop
inc
xor
test
rcl
mov
mov
sbb
decb
stos
inc
xchg
ret
xchg
ret
xchg
dec
pop
push
test
inc
cltd
dec
fmulp
icebp
dec
loop
cmp
repnz
push
add
pop
test
jmp
cmp
nop
xchg
add
or
jg
adc
jae
push
addr16
in
test
sbb
into
shlb
dec
aam
push
sub
into
test
sub
pusha
repnz
pop
mov
inc
jl
pop
fsubrs
dec
sti
dec
pop
push
jmp
movsl
test
cmp
sub
lcall
adc
xor
out
aas
ret
shl
push
and
push
sqrtps
dec
in
popa
push
cld
lock
decb
iret
sub
cwtl
int3
repz
jne
jb
in
xchg
imul
xor
cmp
cmp
pop
out
mov
xchg
jbe
and
stc
test
dec
push
iret
stos
mov
sti
lds
add
cmc
mov
dec
out
jne
ja
aad
das
test
jbe
popa
jb
jmp
cmc
xor
adc
imul
imul
dec
in
rolb
jp
int3
jmp
lret
jno
je
imul
xor
mov
xchg
nop
sbb
divb
cmp
inc
mov
popa
imul
xchg
xchg
sub
jne
movsb
scas
nop
pop
es
jge
and
add
loopne
xchg
inc
loop
adc
mov
xchg
push
mov
jecxz
pop
mov
hlt
add
in
fists
mov
jecxz
jp
xchg
ds
dec
out
or
or
outsl
add
dec
xlat
test
or
cmp
mov
add
stos
out
dec
push
sbb
jo
mov
ficoms
mov
pop
jne
ror
lods
push
sbb
push
sbb
push
jno
jmp
ficomps
jno
mov
push
aam
leave
fbld
push
fs
ret
cmp
dec
jg
ljmp
pop
outsb
jne
mov
test
jbe
int3
fs
test
cmp
test
fs
jo
pop
test
lea
iret
out
movsb
out
mov
push
lcall
jmp
lods
sbb
push
testb
jecxz
xor
mov
and
mov
mov
imul
std
cltd
rcll
dec
add
fcmovne
ds
jecxz
ljmp
sbb
fstp
out
mov
push
daa
insl
fadd
repnz
push
daa
xlat
dec
adc
fildl
inc
xor
jbe
lret
and
lea
adc
out
cmp
pop
in
inc
push
jl
int
test
pusha
push
inc
pusha
xchg
into
stos
sbb
add
cmpsb
sub
fcompl
out
insb
stos
push
or
push
mov
pop
xchg
add
pop
xchg
jne
xchg
jecxz
icebp
popf
inc
ljmp
ror
out
xorl
pop
aas
inc
out
sbb
or
inc
insl
lock
dec
fcoms
pusha
stos
lods
mov
sub
or
gs
xchg
cltd
mov
lods
sub
shlb
aas
rclb
dec
xchg
fsubrl
ds
mov
dec
sbb
ret
push
jecxz
arpl
mov
dec
ljmp
fstpt
fsubrp
xchg
jne
jge
pushf
divl
das
into
sub
sbb
xor
fisttpl
xor
inc
rolb
in
stos
stos
mov
ljmp
clc
add
push
cwtl
insb
sub
out
outsl
inc
mov
fistps
xor
shr
in
mov
push
sbb
shll
jecxz
ljmp
data16
mov
cmp
xorl
xor
xor
or
lahf
dec
inc
xchg
in
or
repz
push
ret
arpl
pop
mov
imul
dec
sbb
add
mov
test
inc
jecxz
fisttpl
loope
lods
aam
cs
mov
xchg
mov
add
stc
outsb
and
push
pushf
repz
sbb
cmp
push
imulb
jmp
dec
aad
loop
xchg
inc
jle
out
mov
xor
popf
push
xlat
push
mov
sti
test
lock
adc
into
xchg
sbb
int3
lahf
testb
in
leave
inc
jmp
pop
xor
xchg
in
push
xchg
jo
push
aaa
loopne
xchg
xchg
or
das
aaa
addr16
sub
mov
andl
ret
mov
mov
into
pop
cmc
imul
test
jne
imul
inc
scas
fsts
or
inc
xchg
cmp
sbb
test
loopne
xchg
pop
iret
hlt
xchg
test
outsb
orl
or
mov
hlt
mov
popa
int3
push
mov
lods
dec
mov
mov
cmp
aas
xchg
push
and
dec
cmp
adc
inc
pusha
dec
mov
xorb
mov
adc
icebp
fcomps
fidivrl
fs
cltd
sahf
mov
push
testl
es
shll
xchg
shr
scas
nop
mov
add
mov
test
and
add
loopne
push
mov
scas
push
into
mov
inc
mul
jo
mov
je
push
fwait
xchg
in
cmc
jmp
xor
enter
aam
adc
test
xchg
jecxz
mov
jle
outsl
loop
call
ja
cmp
mov
fisttps
xchg
jle
iret
xor
ss
mov
jmp
fiaddl
shll
pushf
xchg
add
xchg
imul
inc
into
ja
add
das
aad
push
mov
push
jge
inc
addb
inc
sub
dec
dec
add
pop
xchg
push
xor
pop
daa
cld
in
pop
add
es
lcall
push
pop
aad
mov
sbb
mov
jge
mov
push
rcr
mov
lahf
add
addb
push
and
sahf
lods
repnz
cli
mov
mov
pusha
mov
or
jg
or
aas
mov
pop
stc
nop
nop
loope
xchg
fldcw
sbb
dec
and
lcall
cs
popf
sahf
mov
sub
aad
mov
cltd
jns
es
jg
mov
fisubrl
lds
andl
insl
xlat
in
xchg
adc
aam
xor
adc
lods
sub
pop
lds
push
sbb
int3
cmpsb
push
pusha
sbb
dec
dec
add
xchg
pusha
push
push
dec
mov
push
std
xlat
jne
pop
cs
fildll
jnp
jle
leave
cwtl
in
inc
jmp
mov
pop
xorl
adc
mulb
xchg
pop
cltd
dec
insb
pop
aam
test
int
pop
cmpsl
pop
jmp
pop
icebp
das
jg
jp
sub
clc
pop
out
or
imul
es
hlt
sar
pop
push
mov
sbb
fistpll
mov
xchg
sub
idivl
dec
lods
lcall
or
add
leave
lret
and
ja
add
mov
icebp
ffree
xchg
jmp
fnstcw
add
mov
pushf
dec
add
outsb
xlat
rolb
sbb
gs
jg
pop
or
jge
dec
add
xor
and
dec
cmc
sub
mov
cmpsb
xchg
cmpsb
adc
inc
pop
adc
leave
xchg
and
adc
jle
push
mov
mov
xor
sbb
jb
pop
ret
mov
jl
pop
out
loop
xchg
add
cmpl
es
movl
jg
push
dec
add
mov
shlb
xlat
ret
xor
jp
sar
xchg
push
mov
test
adc
leave
frstor
jno
or
test
imul
push
xchg
aaa
or
int3
scas
outsb
lods
push
mov
leave
aaa
aas
lcall
filds
add
jns
std
xchg
mov
push
lods
xchg
out
test
ljmp
sbb
lds
fs
cmp
mov
mov
pop
add
jbe
or
inc
inc
mov
leave
or
cmp
lcall
arpl
iret
mov
imul
out
js
and
leave
mov
xchg
add
push
int3
mov
mov
out
jge
mov
mov
call
push
in
aam
push
cmp
xor
or
cmp
imul
jl
loope
arpl
dec
mov
arpl
push
xor
cmp
sbb
mov
push
ret
and
leave
cmp
outsb
sbb
xchg
push
lcall
cmp
or
cmpsl
or
test
int3
push
lahf
filds
cmp
xchg
mov
or
xor
fsts
test
mov
pop
mov
dec
jne
lahf
mov
pop
jg
jo
adc
std
add
shrl
or
pop
pushf
cld
ffreep
lcall
into
cmc
arpl
jmp
insb
cld
je
sbb
arpl
jl
adc
xor
gs
fdivl
adc
mov
fnstsw
das
cmp
fildl
cmp
fsubl
mov
inc
add
out
mov
sbb
jge
cmp
lock
mov
test
add
push
test
out
dec
cmpsl
frstor
pop
sbb
jnp
sbb
mov
mov
inc
xchg
mov
mov
sbb
adc
xor
sbb
cmpsb
adc
push
jmp
cmp
mov
mov
or
dec
int
inc
add
xchg
fcoml
push
adc
je
repnz
pop
xchg
xchg
xor
lret
xchg
mov
das
in
pop
je
ss
xchg
or
pop
shll
sub
pop
push
dec
lcall
mov
push
loop
loop
mov
mov
enter
je
loop
ret
add
push
push
add
xchg
push
and
jo
stos
mov
xor
js
mov
mov
fwait
jl
adc
sub
cmp
std
push
sbb
adc
addr16
incl
or
ficomps
add
jecxz
incl
das
mov
sbb
push
mov
xor
sbbb
lret
sbb
int3
rolb
cwtl
popa
aaa
jle
insb
adc
dec
xor
xor
pop
pop
mov
jae
cmp
cmp
sub
pop
in
sbbl
std
inc
push
xor
cmp
pop
pop
test
bound
dec
xchg
mov
push
push
jo
mov
lods
icebp
mov
add
mov
popa
dec
jb
jg
xlat
test
fbstp
rcll
loope
jmp
xor
stc
inc
push
cmp
mov
mov
or
pushf
je
add
stos
in
sub
outsb
ja
lahf
jmp
jns
push
cmpsl
add
xor
int
les
cmp
mov
es
es
cli
push
das
sbb
test
pop
push
xchg
mov
aam
aas
adc
or
test
inc
xchg
jns
out
jmp
fs
loopne
loopne
les
cli
shrl
jmp
jnp
and
mov
rolb
inc
fiaddl
cmp
lds
icebp
loop
sahf
enter
or
outsl
mov
dec
cld
xchg
leave
pop
inc
shrl
scas
add
jbe
sbb
je
jae
ljmp
arpl
jns
bound
das
rcrl
lret
iret
mov
pop
pop
jmp
pop
adc
outsb
jne
push
mov
xchg
jl
pop
fsubrp
inc
ljmp
add
cmp
mov
jno
notb
popf
repz
xchg
pop
sbb
sbb
fdivs
ljmp
mov
mov
push
adc
lret
push
xor
movsl
mov
addl
xor
ljmp
inc
insl
iret
adcb
std
and
leave
dec
pop
mov
outsl
cmpsb
xor
mov
pushf
shlb
nop
push
cmp
hlt
cld
stc
push
aaa
and
movsb
mov
movsb
iret
jno
jae
adc
mov
push
or
mov
mov
xor
fsubl
cmpsl
pop
insb
pop
sarl
mov
xor
stc
cmp
xchg
faddl
aad
ficomps
arpl
mov
sbb
jl
mov
pushf
lea
or
mov
push
sahf
or
and
jbe
cmp
push
xchg
addr16
cld
fsub
mov
pop
inc
push
push
js
pop
or
pop
xrelease
or
xchg
adc
out
fists
jmp
dec
insl
jns
enter
sahf
scas
fiaddl
dec
mov
je
mov
inc
fisubrs
jecxz
add
pop
fisttpll
mov
pop
jecxz
sti
cmpsb
jbe
jo
aas
nop
lret
adc
cmpsb
adc
repz
mov
out
pop
into
shr
add
sbb
adc
js
add
popf
ss
adc
lret
add
push
push
xor
mov
adc
mov
push
out
test
data16
lret
or
jge
sub
fdivl
cwtl
int3
insb
in
jbe
mov
and
cli
jbe
aam
int
dec
out
mov
lret
mov
rcll
dec
xchg
or
insl
jge
lret
xchg
arpl
decl
and
cltd
inc
ja
scas
mov
push
mov
cmpb
dec
xchg
movsb
shlb
test
in
sub
cmp
sub
cltd
jo
lea
in
movsb
push
lret
mov
clc
repz
notb
pop
push
mov
push
push
xor
cmp
push
fnstenv
cmp
arpl
xor
and
je
push
or
jmp
inc
test
cmp
sti
punpckhbw
mov
aaa
and
xchg
cmp
int3
inc
les
andb
lldt
fisubl
jne
lea
mov
cwtl
jbe
push
sahf
enter
mov
cli
jo
adc
in
loop
loop
sub
mov
add
das
les
jb
aaa
and
adc
mov
mov
pop
js
int
xor
mov
imul
sbb
dec
in
and
aaa
fsubrl
sahf
push
stc
mov
call
cmp
sbb
and
jecxz
cmp
inc
pop
mov
imul
and
test
xlat
inc
add
scas
adc
out
mov
mov
mov
mov
fucomp
jle
pop
jl
movsb
add
lds
pushf
adc
jmp
sbb
cli
cmp
mov
and
mov
jecxz
mov
jae
movsl
out
sti
loope
cwtl
dec
notl
imul
ret
push
clc
sub
jbe
out
sti
mov
mov
lahf
sahf
das
nop
dec
sbb
adcl
cmp
int3
dec
xlat
stmxcsr
adcb
sahf
pusha
push
and
adc
addr16
xchg
sbb
stos
loopne
pop
push
lahf
push
mov
inc
dec
xor
rcrb
lret
outsl
xorl
inc
sti
ds
push
movsb
inc
and
popf
xor
adc
out
xor
or
js
cmp
in
add
movsl
iret
mov
das
sti
sbb
orb
outsl
enter
xor
cld
push
sbb
xor
mov
outsl
pushf
jnp
mov
pushf
xor
dec
sub
imul
out
popf
push
bound
mov
inc
push
pop
je
fcoml
mov
xor
out
mov
mov
push
repnz
mov
xor
int
xchg
sub
lret
pop
jl
lret
daa
scas
xchg
mov
add
xor
xchg
push
outsb
je
jno
gs
test
sbb
mull
pop
stos
sub
dec
loopne
sub
je
push
jne
inc
stos
adc
add
push
lcall
mov
cmpsb
xor
outsl
inc
jnp
fcomp
jecxz
xor
mov
mov
fidivrl
out
sbb
cli
push
push
pop
xor
dec
fcomps
inc
into
cltd
push
fists
scas
sub
xchg
xor
ja
out
mov
mov
outsb
sub
sub
or
mov
movsb
fadd
fwait
add
sbb
lret
nop
inc
mov
imul
jns
outsl
mov
jge
mov
scas
js
add
rep
ljmp
out
xchg
jecxz
test
es
cwtl
lret
nop
loopne
rorl
ljmp
and
xchg
push
das
inc
push
stc
pop
fsubrp
pop
lock
mov
pop
pop
in
and
sbb
je
in
stos
imulb
cmp
jno
sbb
add
or
or
mov
mull
rcrb
inc
lods
ss
mov
or
lcall
js
mov
dec
out
sbb
mov
fsub
out
mov
xor
jns
push
pop
popa
lret
mov
shl
adc
cmc
cmp
mov
roll
pop
arpl
das
nop
jnp
xchg
leave
test
rcl
jb
out
add
jo
adc
xor
lea
and
hlt
jne
enter
adc
sbb
jp
mov
mov
xlat
jecxz
out
imul
jp
sub
pop
js
pushf
pop
ret
push
in
adc
arpl
leave
movb
dec
mov
and
ret
je
mov
dec
jg
ud0
enter
xchg
mov
pop
pop
sbb
xor
hlt
mov
adc
stos
shl
test
sub
mulb
inc
loopne
mov
inc
dec
inc
sbb
mov
test
stc
mov
pop
pop
mov
ss
sub
fs
adcl
cltd
inc
inc
xor
and
xor
imul
dec
mov
ret
repz
out
xor
pop
dec
sub
cmp
cli
hlt
pop
adc
inc
cmpsl
jo
xchg
pop
icebp
imull
stos
mov
repz
jge
es
sbb
ds
mov
popf
lock
pop
push
lods
gs
js
or
mov
push
sbbb
repnz
push
mov
pop
in
and
int3
add
loop
inc
mov
sub
xchg
cmp
mov
test
in
int
shlb
push
btr
xchg
inc
test
pop
clc
pop
into
mov
fildll
lret
xchg
mov
jle
sarb
fwait
sbb
adc
sbb
sbb
sar
sti
adc
sbb
push
mov
cmp
les
push
mov
and
sub
inc
cmpsl
je
push
adc
jns
push
out
std
out
mov
int
sub
mov
cld
xchg
ds
add
out
jg
jnp,pn
jae
lea
inc
popf
jmp
push
lcall
pop
push
and
es
sti
movsb
cmpsb
insb
pop
or
lret
jns
popa
jle
xchg
dec
fcoml
push
xor
fcmovu
mov
icebp
mov
jno
jmp
jmp
pop
push
adc
and
or
pop
xor
pusha
stc
js
repz
jp
xchg
fsubrp
cmpsb
lret
dec
aad
or
aas
enter
push
inc
inc
arpl
pop
push
xor
and
test
cmp
aam
cmc
imul
enter
mov
in
cmp
ret
in
cmp
negb
mov
mov
neg
imul
les
shlb
pop
dec
cmp
dec
and
mov
add
pop
mov
cmp
rcrl
fs
jns
sbb
mov
shll
sbb
fsubl
xor
insb
fs
add
dec
es
cmp
daa
in
xlat
out
testb
lret
loop
push
cmp
loope
and
xor
lods
cwtl
push
es
push
orl
mov
dec
xor
jp
sub
push
adc
sub
xchg
jge
out
and
out
outsl
std
sbb
pushf
jns
out
imul
inc
sbb
daa
repz
popf
adc
je
or
adc
mov
add
and
imul
dec
cmp
fdivs
mov
dec
clc
xchg
inc
dec
fisubrs
js
and
inc
push
xchg
insl
out
jae
mov
xchg
fwait
test
xchg
or
inc
xor
sub
stc
gs
sbb
pop
in
mov
enter
pushf
inc
xchg
sbb
lods
test
sbb
out
lods
aam
popf
mov
and
pusha
jge
mov
inc
or
sbb
pop
adc
sbb
stc
inc
add
and
adc
xchg
jno
cmpsl
xor
sbb
mov
adc
stos
sub
out
fdivr
cs
sbb
and
adc
pop
pop
test
jno
cwtl
mov
jae
jne
xchg
imul
pusha
cmp
jmp
xor
and
sbb
jae
fadd
addr16
or
inc
add
xor
mov
loopne
in
bnd
mov
pop
cmpsl
out
icebp
sub
not
xchg
cli
mov
fmuls
xor
sbb
inc
add
popf
lret
notb
sti
add
test
sbb
repz
mov
xor
test
in
sbb
cmp
xchg
dec
pop
xorb
les
or
movsb
xor
jle
push
mov
pop
pop
adc
mov
and
int
addr16
subl
jnp
cwtl
int
xor
mov
iret
in
shlb
lods
test
xor
fs
shll
sub
xor
imul
mov
lret
std
daa
daa
dec
out
mov
mov
add
mov
sbb
xor
enter
sbb
cmp
cmp
push
jae
push
addr16
xor
fcomps
push
add
fcmovnu
jge
mov
scas
ret
imul
cmp
add
enter
scas
call
xchg
icebp
cmc
dec
fistpl
lahf
pop
jo
and
or
out
xchg
sbb
fsubl
xchg
ret
or
aam
xor
loopne
rcll
sub
ret
dec
or
sbb
mov
inc
das
cmpsl
fs
and
in
ja
in
outsl
dec
sub
push
xor
adc
test
mov
pop
push
jmp
stos
mov
adc
inc
push
sti
sub
lea
sbb
fsubr
or
mov
jns
repnz
xchg
pop
stos
in
inc
frstor
sbb
enter
mov
xlat
inc
mov
test
ds
jle
cltd
or
sub
sbb
xorl
xor
pop
inc
sti
ficomps
je
movsl
pop
mov
mov
mov
gs
xchg
sbb
jb
fisubs
jecxz
in
repz
mov
jb
mov
in
lahf
adc
and
fisubrl
adc
std
dec
dec
in
inc
or
sub
push
movb
fld
xchg
inc
and
dec
cmp
lcall
mov
jmp
ret
fnsave
sbb
pusha
out
jp
out
inc
fisttps
stc
jecxz
shrb
inc
test
adc
sahf
dec
je
cli
dec
pop
xorb
out
sub
jge
ret
pop
cli
mov
adc
lock
sahf
xchg
into
std
imul
inc
dec
xchg
divl
and
inc
dec
jg
jne
xchg
scas
hlt
xor
mov
fisttpll
cltd
adc
fs
or
xchg
in
lret
pop
popa
lods
mov
hlt
push
mov
lret
out
dec
inc
xor
fldenv
mov
push
pop
adc
pop
pop
sbb
jo
sub
sbb
jmp
push
out
int
xor
pop
mov
mov
mov
cmp
ret
arpl
ffreep
sbb
repnz
mov
inc
mov
pop
pop
inc
pop
sbb
jae
bound
jnp
dec
aas
movsb
xchg
clc
mov
lret
mov
sbb
cmp
sub
jp
fcoml
lods
clc
mov
or
in
adc
popl
neg
loope
shl
mov
jl
ja
in
loop
ds
inc
lcall
andl
mov
adc
mov
mov
dec
insl
fcompl
mov
cmpsl
popa
pop
imul
push
pop
xchg
clc
mov
mov
out
mov
mov
into
mov
inc
sub
test
and
cmp
and
inc
sub
cmp
add
pop
loop
inc
fs
paddsb
cmp
and
mov
jg
xorl
push
xor
ret
into
mov
dec
mov
push
repz
enter
mov
jge
xchg
leave
xor
cmpb
cmp
into
mov
fisttps
fisttpl
testb
sbb
xchg
movb
repz
ss
or
ret
imull
mov
in
pop
inc
fistpl
iret
imul
rcll
mov
outsb
xchg
sbb
iret
aam
adc
repnz
imul
mov
fdivrl
xchg
pop
push
aam
add
mov
data16
cmpsb
and
push
popf
mov
fcom
lret
test
lret
mov
int3
push
decb
mov
daa
divb
and
cmp
inc
pop
xchg
nop
aam
xor
mov
loopne
out
faddp
sbb
sub
push
inc
adc
ret
out
cmc
sti
add
jl
adc
bound
outsl
jbe
ret
push
and
insb
pop
inc
nop
add
xchg
push
je
fsubp
ret
inc
aam
cmc
ds
in
pop
rorb
sub
mov
out
arpl
shll
pop
adc
sub
jo
imul
inc
or
in
xchg
ds
imul
push
sbb
imul
xor
fstpl
xor
pop
cmpsb
sub
adc
shlb
sub
icebp
jns
mov
xchg
test
fiadds
clc
xor
pop
sub
repnz
out
jae
jmp
sub
add
data16
roll
push
loopne
gs
in
cmp
jmp
dec
xchg
ds
adc
loope
mov
insl
push
stc
lahf
add
sahf
dec
sub
loope
mov
sbb
je
test
or
shrl
cmp
lea
mov
fistpl
xchg
mov
rolb
out
outsb
fs
dec
xchg
cmp
aas
xor
jno
xlat
rol
call
mov
cmp
sarb
pop
test
clc
cs
lahf
imull
mov
jecxz
adc
or
pop
outsb
sarb
or
xchg
leave
jo
lret
stos
movsb
repnz
xchg
imul
bound
hlt
and
and
inc
clc
ret
test
push
in
cmp
mov
sbb
mov
and
daa
adc
xchg
pop
jns
xchg
es
pop
movsl
cwtl
je
jecxz
arpl
inc
add
jbe
gs
shl
pop
adc
loopne
test
or
loop
inc
xchg
jb
int
cmp
insl
pop
push
jno
xor
push
enter
ds
and
dec
imul
pop
ja
xor
ret
mov
mov
sub
mov
mov
es
dec
orl
push
push
js
out
inc
pop
rcrl
push
cmp
js
dec
pop
inc
lds
inc
repnz
mov
mov
mov
pop
out
nop
cli
jae
xchg
cmpsl
int
fldt
ja
jge
push
cmp
iret
xor
mov
push
sub
mov
push
jb
lea
xor
shll
xor
mov
mov
xchg
test
sub
outsl
jbe
lret
mov
ds
sub
pusha
xlat
movsl
pushf
rclb
insb
es
push
and
mov
inc
sar
or
ss
aas
cmp
fldt
lea
or
popf
or
ljmp
push
push
loope
push
shl
pop
jbe
ds
imul
jne
fsub
mov
cld
fcoms
pop
imul
xchg
sbb
scas
add
lea
cltd
jmp
data16
xchg
pop
stos
sub
sbb
xor
or
mov
xchg
js
mov
out
mov
push
mov
loope
jns
sahf
aaa
mov
outsl
ret
addb
push
pop
xchg
rolb
cwtl
sub
jb
lret
iret
sti
insb
xorl
sbb
dec
dec
adc
popf
adc
mov
pop
sub
shlb
popa
mov
xorl
inc
inc
mov
cwtl
popa
inc
or
push
shr
jg
inc
movsl
das
push
jae
sbb
ret
pop
push
pop
xchg
or
pop
daa
fwait
adc
add
dec
mov
in
aam
test
push
xchg
lahf
jge
mov
and
and
cs
outsl
stc
lcall
dec
movsb
fisttpl
sbb
int3
sbb
fs
pop
and
leave
xchg
xor
outsb
mov
out
or
cmp
in
fadds
mov
faddp
scas
mov
jo
dec
push
jge
add
or
repnz
iret
lret
adc
fldenv
in
inc
leave
mov
clc
in
jno
cmp
and
test
mov
sahf
enter
dec
or
mov
mov
xor
in
cmp
lods
sub
pop
mov
test
jbe
mov
stos
scas
cmc
femms
test
aaa
nop/reserved
push
dec
sti
mov
ficoms
mov
mov
notl
add
sbb
outsb
mov
les
jne
pop
adc
fsubl
add
lahf
ja
fwait
cmc
pop
adc
add
loop
pop
jae
inc
push
aad
and
mov
adcb
mov
inc
aad
push
test
pushl
in
lods
sbb
mov
push
jge
and
xchg
cmpsb
imul
push
repz
dec
fwait
adc
fwait
sahf
jno
in
dec
inc
jne
adc
pop
xchg
add
imulb
popa
je
sub
into
incb
inc
xchg
enter
cmp
xor
das
xchg
js
test
pop
jbe
xor
dec
sbb
xlat
cmp
or
pop
add
in
mov
mov
insb
in
iret
mov
sahf
jnp
inc
in
push
push
test
lods
test
push
push
inc
inc
sub
push
jmp
fxtract
aad
mov
jmp
decl
ds
jno
add
cmp
daa
js
mov
faddl
loope
push
data16
in
lahf
mov
lods
enter
outsl
xlat
dec
mov
test
outsl
cli
fcmovne
push
movsl
xchg
jns
dec
scas
mov
pop
xchg
and
xadd
sahf
cmpsb
mov
inc
push
cmc
stos
dec
xchg
inc
popa
iret
push
add
mov
xchg
push
and
jnp
cmp
arpl
mov
pop
fwait
lds
dec
mov
cwtl
iret
and
sbb
aad
subb
roll
mov
pop
ret
inc
sub
shlb
mov
mov
dec
xchg
aaa
into
test
fbstp
rcrb
xlat
jl
mov
sub
mov
mov
sbb
lock
fnsave
cmp
adc
repnz
icebp
cli
add
fwait
mov
loopne
sub
lahf
stos
jle
mov
dec
adc
dec
mov
dec
pop
sub
xrelease
inc
mov
sbb
out
and
adc
enter
cltd
lret
notl
xor
sub
test
fbstp
sbb
dec
aaa
sub
mov
out
dec
jne
mov
testl
in
xchg
pushf
aad
xor
and
ljmp
out
fld1
je
mov
inc
rcrl
sub
stos
adc
inc
pushf
daa
xor
inc
and
jmp
stos
movsl
mov
lret
push
add
push
insb
scas
pop
jnp
xor
push
int3
xchg
pop
pusha
cmp
fcomi
mov
dec
mov
jns
inc
push
push
pop
loop
mov
sbb
mov
inc
adc
or
pop
stos
out
das
ds
js
enter
jecxz
fsubs
aaa
fisttps
add
mov
xor
cmp
arpl
test
push
cmp
frstpm(287
rcrl
sbb
pop
pop
mov
fstl
arpl
aad
loop
repz
repnz
mov
push
popa
in
lods
xchg
xor
fldl
test
jge
push
push
rcrb
shll
insl
lock
xchg
xchg
mov
imul
cltd
cmpsl
inc
fisubs
stos
filds
rcrl
sti
or
jo
test
pop
jae
jnp
push
push
xor
add
scas
mov
xor
movsl
push
enter
mov
out
lret
xorb
xor
mov
cmp
inc
into
insb
pop
mov
enter
out
ljmp
subb
push
enter
loopne
divb
pop
outsb
add
xor
mov
jmp
dec
and
andb
movsb
fildll
cmp
adc
fcmovnb
sbb
cmp
cmp
dec
enter
jns,pt
lahf
ss
adc
sbb
roll
add
clc
mov
pop
ret
lahf
push
int3
pop
cmpsb
sub
lods
dec
cmpsl
mov
test
cmp
es
inc
mov
inc
addr16
jbe
dec
xchg
inc
push
jnp
pop
adc
push
enter
dec
fwait
sbb
push
sbb
enter
out
or
stos
add
inc
es
pop
lods
andl
shrl
sbbb
inc
adc
movsl
or
adc
push
es
inc
rolb
shr
jb
push
or
and
cld
inc
and
call
inc
cwtl
and
inc
pop
dec
jg
test
push
orl
adc
loopne
les
je
pusha
push
hlt
lcall
popa
push
mov
fdivs
mov
movsl
pop
lcall
pushf
xchg
pusha
lret
pop
adc
fsubr
pop
fstpt
loopne
push
jl
push
int
xchg
push
xor
cmp
adc
test
inc
in
fidivs
add
pop
jle
lods
sub
addb
ret
cld
hlt
mov
sub
fisubrl
cs
rcrl
jo
mov
iret
cli
cli
mov
mov
pop
sbb
lds
inc
fcoms
dec
loop
add
mov
sub
and
ret
sahf
xchg
dec
insl
data16
mov
mov
repz
imul
inc
out
jmp
and
xchg
das
adc
popf
mov
lcall
ljmp
or
dec
fidivs
mov
repz
in
jno
mov
xor
out
mov
lock
xor
mov
or
add
js
lods
sub
pop
in
xchg
mov
call
xchg
cmp
dec
rorb
rcll
pop
pop
xchg
xchg
imul
sub
push
mov
stc
cmpsl
stos
mov
pop
dec
jns
cltd
loope
inc
daa
lods
sbb
sbb
out
and
pop
mov
inc
mov
mov
inc
cmp
sbb
outsl
push
dec
jns
stos
popf
ljmp
jo
add
mov
pop
mov
xchg
dec
mov
inc
xchg
stc
or
adc
mov
nop
mov
jecxz
lahf
mov
out
sub
sbb
jge
and
outsl
hlt
adc
repz
xor
dec
in
jnp
xchg
cs
pop
loop
or
outsl
aas
lret
dec
imul
push
testl
outsb
pushf
lods
mov
out
imul
dec
pop
fs
xor
mov
mov
sbb
movsl
mov
decb
mov
pop
mov
std
mov
sbb
sub
xor
call
jne
outsl
out
pop
mov
dec
outsb
cli
inc
adc
test
pop
idiv
jle
ljmp
stos
or
es
cmp
push
jp
iret
jo
inc
imul
jae
jmp
push
ss
mov
cmpsb
das
test
lods
jne
scas
fs
mov
cmpb
jae
pop
mov
jo
adc
mov
stos
nop
pop
das
mov
xor
das
jb
stc
adc
scas
loope
inc
stos
imul
fs
shlb
mov
mul
pusha
arpl
or
iret
mov
push
pop
mov
aaa
xchg
sbb
scas
aad
shll
adc
mov
mov
lret
adc
mov
jb
xor
jmp
lret
cld
adc
iret
addr16
cld
push
xchg
or
lret
add
pop
pop
xchg
addr16
dec
mov
arpl
sti
mov
adc
dec
inc
jo
push
add
stc
insb
mov
sbb
pop
fdivs
aam
mov
sbb
or
dec
cmp
push
andl
mov
push
es
fcom
cs
mov
scas
test
add
lcall
lret
jmp
push
pusha
sbb
movsl
js,pn
mov
loop
xchg
jle
jge
sub
xchg
jnp
fidivs
dec
mov
push
or
or
out
mov
add
ds
cmp
lods
cmpb
dec
mov
daa
xor
out
cwtl
jmp
test
or
fs
out
xor
jmp
xchg
push
movsb
cmc
push
js
repz
xor
adc
and
fwait
add
or
cmp
andl
not
ds
insl
and
lret
pop
mov
subb
add
in
daa
insl
into
jo
je
lcall
lock
andb
lahf
repz
cmp
xchg
jl
cmpsw
dec
sbb
cwtl
hlt
and
in
jp
mov
andb
leave
mov
popf
xchg
aad
loopne
arpl
jecxz
jge
je
call
fstpl
mov
bound
int
mov
dec
push
popa
out
fsubs
push
mov
inc
cs
jecxz
gs
and
or
ss
insl
lods
rol
inc
sbb
clc
add
xchg
andb
cmc
mov
lret
sbb
pop
test
or
mov
jecxz
add
in
mov
push
aaa
push
add
sbb
fisubl
or
sbb
repnz
push
lock
fistps
adc
push
mov
mov
insb
mulb
dec
push
popa
pop
dec
das
mov
mov
clc
and
mov
cwtl
out
out
mov
sahf
mov
lret
movsl
cli
push
dec
es
out
mov
and
hlt
sbb
mov
fistpl
xchg
mov
test
pop
push
ret
lock
insl
mov
xor
leave
pushf
test
jae
fimuls
mov
int
jno
loope
leave
mov
xchg
sub
dec
cltd
mov
jecxz
mov
mov
mov
and
pop
xchg
hlt
xchg
dec
cmp
popl
mov
cwtl
pushf
fs
dec
ljmp
cmc
ds
xor
jecxz
ficompl
pop
stos
js
dec
pop
test
call
rclb
xor
popa
nop
cmc
or
xchg
mov
fs
je
push
iret
ss
loope
mov
xchg
push
int
in
add
push
mov
lds
add
xor
addr16
push
or
or
and
adc
inc
pop
dec
mov
stc
push
test
xlat
adc
and
push
test
sbb
test
push
jp
dec
lods
push
pop
sub
sti
pop
je
ret
push
xchg
mov
jle
lret
cwtl
or
or
popa
xor
jbe
sbb
pop
push
ret
jns
lds
lcall
lods
out
mov
add
ja
daa
add
xchg
lret
xchg
lret
and
dec
inc
jo
lahf
mov
push
andl
loopne
in
push
xor
outsb
sbb
in
adc
dec
bound
mov
jle
inc
jns
push
dec
scas
rcll
pop
dec
inc
jle
sbb
int
jnp
insb
mov
adc
mov
int3
or
sbb
subl
lret
lea
fstpt
repz
hlt
stos
sarb
pusha
sti
inc
push
push
cli
sub
ljmp
js
cmc
sbb
cmpsl
jo
cltd
or
dec
pop
cwtl
stos
sbb
loope
push
or
in
imul
sub
sub
jl
test
mov
xchg
jle
cmpsl
mov
repz
out
out
sub
sub
cmp
mov
xchg
call
out
mov
test
fcmove
dec
cmp
mov
test
xchg
aam
outsl
jecxz
and
leave
rcrb
mov
and
rcrl
and
mov
lret
int
jnp
jno
xchg
test
scas
inc
insb
sbb
push
push
add
ljmp
ljmp
scas
fwait
sti
fdivr
repnz
into
pusha
call
int3
adc
ja
popf
cmc
push
sub
push
call
push
dec
adc
jns
pop
sub
inc
xchg
fsub
adc
mov
xchg
data16
es
mov
pop
dec
mov
jp
jmp
jle
inc
sarl
sti
mov
aad
jp
pop
push
pusha
cmp
les
pop
ds
xchg
inc
fcom
push
add
push
loope
or
push
mov
sub
push
lds
rcrb
add
xchg
loopne
cmp
and
sbb
fidivl
insl
and
insl
das
cmp
pop
shlb
push
ljmp
fnstenv
lods
je
scas
hlt
push
movsl
js
cmp
mov
stc
or
xor
loop
dec
imul
scas
popa
popa
int3
cmpsb
dec
mov
jp
push
jb
add
xlat
pop
fdivs
insb
inc
adc
adc
sbb
pop
push
stc
mov
add
dec
cmp
inc
insb
push
and
repnz
mov
loope
pop
pop
les
dec
push
aas
outsb
cs
in
jns
jp
mov
imul
bound
sbb
lods
push
jns
rolb
pop
cmp
mov
and
orb
sub
icebp
xchg
xchg
inc
and
sti
aaa
push
adc
cmc
push
fmull
mov
imul
and
pop
int3
rcrb
test
xor
push
mov
lods
and
mov
push
mov
sbb
aad
mov
inc
sub
dec
pop
push
jl
je
enter
daa
cmp
adc
and
push
xchg
shl
pop
mov
xchg
xor
out
pop
inc
mov
sbbl
jb
mov
lret
mov
push
mov
xor
mov
stos
add
jne
lahf
push
rcrb
add
sub
push
mov
cmpsl
pop
cmp
daa
push
pop
dec
pop
mov
fisubrl
inc
repz
push
mov
mov
adc
pop
fsts
pop
inc
sbb
loop
pop
lea
das
mov
cld
cltd
xchg
xlat
jecxz
dec
adc
in
je
dec
xchg
clc
rcr
ret
adc
add
sbb
fwait
xchg
pop
aad
popf
ss
sub
aas
or
adc
push
rcrl
mov
sbb
cmp
and
push
jmp
outsb
mov
rolb
adc
inc
arpl
or
and
pop
lods
lret
jmp
lahf
pushf
rolb
add
adc
iret
sub
xor
jp
push
cmp
cmp
les
int3
lea
mov
or
adc
stc
cmp
xor
lret
xchg
push
repz
jle
out
call
cmp
sbb
popf
xchg
mov
dec
popa
bound
in
or
fmull
mov
aam
and
mov
dec
xchg
notl
lret
push
cmp
push
arpl
jge
cmp
lahf
fstpl
jb
and
popa
or
mov
fsubs
or
mov
mov
out
cli
data16
xor
into
out
inc
fsts
cmpsb
mov
add
cmp
loop
xchg
nop
fisubs
sub
add
jae
in
mov
sahf
mov
xor
add
cmpsl
fists
shll
dec
sahf
push
cmpsb
xchg
loope
jae
cmp
sbb
bound
subb
add
or
adc
in
jb
shrl
fs
push
cmc
lock
and
ljmp
xchg
lahf
xor
jne
aaa
jo
into
or
dec
adc
mov
fs
jb
pop
mov
mov
ja
push
push
leave
and
cmp
lret
clc
call
fmuls
cwtl
ds
jnp
pop
pop
rol
insl
mov
nop
ret
jne
cmp
out
xchg
out
in
xchg
mov
and
or
push
subl
sbb
out
add
mov
das
adc
mov
loope
loop
mov
dec
adc
xor
xlat
xor
hlt
or
fiadds
js
fldcw
xchg
xchg
sbb
cmpsl
jae
daa
fildll
cmp
hlt
js
popa
pop
pop
fistpll
cmpsl
push
in
add
psubw
mov
in
or
and
popf
call
or
cmp
pushf
lret
mov
xchg
orl
jo
jl
mov
xchg
pushf
jns
scas
push
dec
fdivl
inc
mov
pushf
mov
andl
inc
xor
push
mov
and
nop
jge
lock
nop
inc
out
fiaddl
xor
push
lcall
orb
add
fs
push
lods
add
mov
dec
dec
or
fwait
jnp
mov
cmp
aaa
iret
adc
xor
and
aam
inc
addl
pop
dec
or
clc
aad
adc
jne
std
lea
test
frstor
outsl
imul
das
cmp
mov
jge
outsb
in
sub
movsb
fucomi
test
cmp
inc
add
imull
popf
cli
or
mov
scas
outsl
in
cwtl
push
outsb
and
dec
lds
inc
dec
cld
sbb
arpl
das
aad
arpl
inc
mov
fdivrs
xchg
mov
mov
adc
js
lret
test
dec
dec
pusha
inc
jp
sub
in
mov
mov
js
pop
hlt
imul
loop
cli
xor
jae
popa
xor
rorb
out
inc
cs
das
cmp
loope
xchg
js
aaa
mov
pop
mov
in
jle
jb
jmp
jns
leave
or
filds
mov
imul
mull
mov
mov
fbld
xor
lahf
rclb
xor
mov
frstor
xor
mov
test
test
pop
xchg
les
sahf
adc
xchg
fmull
mov
test
cmpsl
mov
std
inc
iret
adc
pushf
and
fidivrl
addr16
and
fistps
push
sub
mov
lcall
dec
out
ja
add
add
and
adc
test
or
incl
jl
pop
cli
push
xchg
lahf
jns
and
adc
je
or
xchg
xor
in
xchg
mov
push
gs
fisubl
lea
mov
data16
mov
popa
into
je
mov
sbb
maxps
inc
pcmpeqd
mov
and
andl
hlt
movsb
jp
add
and
leave
icebp
gs
xchg
xchg
dec
or
ret
test
fcomps
sub
mov
leave
mov
and
cmp
push
jle
in
scas
fwait
sti
adc
and
add
sub
pusha
sbb
pusha
test
test
or
mov
idivb
or
cli
push
and
inc
xchg
stc
pop
out
out
xchg
pusha
pop
or
ss
insb
cltd
add
and
cmp
cmp
mov
xor
arpl
testb
outsb
scas
jp
adc
xchg
loope
stos
adc
in
js
sbb
mov
mov
jne
dec
or
repz
xchg
xchg
adc
sbb
xchg
jmp
scas
mov
sbb
ficoml
inc
insb
fistpll
xchg
mov
add
mov
loopne
mov
mov
imul
xchg
push
movsl
leave
out
mov
popf
rcll
and
nop
icebp
inc
aaa
les
jp
daa
or
or
and
push
cmp
mov
ss
pop
pop
aad
sbbb
add
dec
xchg
insl
cmp
fcompl
or
outsl
or
scas
add
mov
jge
and
xchg
scas
notl
test
mov
push
push
sub
mov
add
std
fnstcw
pop
inc
data16
iret
jl
fsubp
scas
or
pop
xchg
bound
add
cltd
mov
pushf
mov
in
mov
jg
mov
push
xchg
adc
out
xor
xor
push
das
testb
outsl
inc
sub
addl
add
mov
cmpl
mov
push
lods
mov
dec
adc
mov
xchg
filds
fnsave
imull
lock
push
in
sbb
std
and
xchg
xorl
cmp
push
add
xchg
cwtl
jge
push
test
das
xor
jb
fdivrs
add
dec
ja
pop
or
aam
xchg
cmp
stos
push
mulb
loop
aad
repnz
sti
mov
cmp
lret
push
jno
or
push
icebp
inc
push
cli
pop
in
pushf
xchg
ret
jl
cwtl
sbb
pop
dec
jno
dec
lea
mov
dec
ret
stc
jp
sbbb
lcall
xchg
inc
popf
lahf
mov
lods
lea
movsl
xchg
push
mov
cltd
movsl
or
mov
insb
sbb
sub
push
gs
or
pop
sbb
das
pop
add
sub
jno
testb
in
mov
inc
repnz
cmp
in
push
sarb
daa
pop
push
ljmp
js
xchg
jns
sti
jnp
insl
pop
test
sub
ljmp
out
repnz
dec
inc
repnz
sahf
xor
sub
sbb
jbe
sub
push
aas
cli
popa
out
adc
mov
ljmp
and
add
gs
aam
psadbw
add
mov
lock
push
sbb
ret
jb
push
ljmp
xor
outsb
dec
mov
sbb
mov
xchg
pop
mov
mov
shrb
sbb
xchg
loopne
jnp
inc
mov
or
shl
and
mov
cmc
xor
out
pop
mov
dec
xor
bound
cwtl
pop
les
cmc
pop
mov
test
faddl
mov
outsb
add
clc
adc
test
sub
xchg
jg
scas
adc
insl
dec
pop
js
loop
icebp
movsb
jle
movsl
mov
pop
icebp
aad
arpl
and
adc
cmpsl
cmp
int
add
lock
mov
pusha
fstps
cmp
fstl
rcl
sbb
lahf
icebp
xchg
daa
xchg
pop
fbstp
andl
stc
or
cmp
std
mov
inc
and
cmp
cmp
into
pop
clc
enter
into
mov
lds
mov
rcrb
dec
imul
mov
lcall
lods
and
inc
clc
inc
ss
jle
call
nop
fbld
sub
fsubs
jo
call
mov
pop
mov
jge
xchg
cli
out
mov
push
adc
shlb
scas
hlt
std
scas
cmp
movsw
add
push
imul
xor
and
jmp
lret
ja
xor
adc
out
pushf
pop
add
add
pop
mov
sahf
adc
jge
xchg
push
pop
push
bound
fs
nop
inc
fists
leave
shl
rorl
sbb
or
jo
mov
add
jle
mov
push
aam
or
push
adc
mov
xor
scas
lret
das
sub
pushf
gs
jne
mov
test
adc
sbb
fnstcw
sub
sbb
adc
test
test
mov
iret
ds
jno
sbb
jg
ljmp
int3
xchg
mov
push
mov
fidivs
inc
pop
js
mov
cmpsl
xchg
push
adc
xorl
fs
pop
icebp
iret
add
inc
repnz
mov
test
push
daa
lock
imul
jne
rcll
dec
mov
fildll
cmp
aaa
lea
xorb
push
orb
fninit
pusha
jp
lea
xchg
add
cmp
stc
push
xlat
cmpsb
jbe
pop
popa
int
test
pop
mov
mov
mov
popf
hlt
cli
int
sub
or
cs
ret
mov
pop
pusha
je
scas
push
and
movsl
sbbb
cs
pusha
mov
xor
loope
mov
das
mov
shll
aad
faddl
jg
cltd
cs
pop
mov
mov
test
call
mov
in
pop
xor
loop
outsl
cmp
fwait
push
test
jle
addl
ja
fisubs
dec
ja
lahf
lods
stos
shr
xchg
test
ss
movsl
out
adc
mov
inc
cmpsl
jo
test
mov
bound
adc
add
into
fdivs
insb
xchg
dec
ss
out
dec
adc
xor
inc
xchg
xchg
ret
jmp
in
jbe
cli
xor
fst
jbe
sbb
and
lock
and
movsl
dec
in
call
dec
test
bound
fadds
cld
fprem
and
adc
jg
push
js
repz
push
mov
mov
or
lret
inc
sub
lds
std
jmp
and
fdivs
lret
add
cmc
push
mov
xor
mov
dec
xchg
cmp
addr16
jns
insl
mov
ret
shrl
xchg
inc
in
adc
mov
pop
lds
pop
pop
cs
nop
push
pop
push
sahf
push
loop
cmp
inc
outsl
add
adc
hlt
cmp
xchg
adc
repz
imul
inc
les
xchg
pop
or
pop
mov
sbb
cmp
fmuls
addl
loop
ljmp
push
std
test
xchg
dec
pop
jge
push
test
scas
push
loopne
inc
mov
in
js
inc
add
hlt
and
das
add
xchg
sub
insl
stos
lods
xor
inc
clc
push
and
inc
mov
in
mov
sub
ljmp
cld
mov
xchg
mov
es
or
dec
pop
stos
cld
lea
xchg
lret
bound
in
lea
sbb
out
jecxz
popf
xor
out
enter
sti
xchg
jl
jne
push
sbb
pushf
mov
jl
out
and
dec
addr16
stc
mov
sbb
js
idivb
sahf
jns
mov
mov
xchg
bound
es
and
mov
je
cmpl
mov
sub
incb
jg
out
adc
mov
or
fldt
loope
cmp
push
cltd
cmp
pop
push
push
add
pushf
bound
xchg
xchg
jbe
sub
ret
insl
sarl
les
dec
add
xchg
das
es
lock
cmp
pop
or
stos
cli
icebp
mov
push
leave
dec
mov
ficompl
int
mov
mov
push
fstps
push
ret
pop
fimuls
les
mov
jmp
sub
jl
je
inc
sbb
call
or
addb
je
imul
loope
mov
rolb
pop
sbb
dec
clc
ret
ja
or
push
xlat
shrb
dec
ror
out
mov
xchg
push
out
pop
jmp
cmc
fldl
dec
cmp
sbb
iret
imul
repz
or
mov
imul
cmp
arpl
lods
cltd
into
dec
and
lds
in
adc
ficoml
fdivr
pmaxub
mov
and
pop
int3
cld
aas
pop
xchg
ror
out
je
push
mov
out
repnz
out
xchg
daa
andl
sahf
cmp
in
movsb
xchg
decb
enter
lret
or
roll
push
mov
inc
rorl
mov
out
inc
or
stos
out
adc
jl
sbb
dec
enter
cmp
lmsw
subl
xorb
mov
mov
mov
pop
mov
cmp
cmp
xchg
icebp
arpl
push
push
fisubrs
into
dec
cli
cmp
enter
mov
adc
pop
cmp
fisubrl
js
dec
int
pop
mov
mov
hlt
pop
pop
pop
or
into
push
out
xor
imul
sbb
xor
subl
sub
mov
test
dec
fsubp
test
jo
pop
mov
mov
xchg
lock
mov
adc
sti
shll
sahf
mov
icebp
adc
mov
sub
xchg
add
inc
das
push
mov
add
sbb
jge
and
add
adc
pushfw
int3
cs
xchg
fisubrs
mov
mov
movsb
push
push
mov
and
fisttpl
rcrl
jb
dec
repz
out
in
mov
pusha
gs
mov
sub
je
mov
xor
and
hlt
jbe
je
mov
pusha
or
cli
push
fiadds
inc
pop
adc
pop
mov
xchg
pop
add
outsl
rcr
rolb
mov
dec
inc
and
clc
sbb
inc
mov
sbb
mov
mull
sbb
out
data16
cld
aad
insb
xlat
lret
mov
mov
sbb
dec
sub
out
mov
mov
xchg
test
sbbb
dec
jle
cmp
pop
mov
inc
loop
loope
test
jae
test
in
inc
ret
cmpsl
das
std
aas
mov
imul
cmp
sarb
addb
scas
inc
adc
repz
mov
movsl
fmull
or
aas
sbb
xchg
je
adc
nop
out
fidivs
loope
nop
movsb
ss
mov
add
xlat
inc
jo
das
push
dec
adc
sar
dec
arpl
xlat
jno
sahf
divb
sbb
sub
mov
fdivs
inc
push
lds
pop
mov
push
or
cld
test
data16
inc
enter
sub
lahf
fwait
or
mov
sub
scas
imul
push
enter
lahf
in
fimull
pop
testb
inc
or
mov
dec
jns
mov
or
pop
or
cmp
xchg
sub
sbb
cmp
sub
dec
cmpsb
add
xor
xchg
xchg
xor
inc
ss
or
addr16
sti
lds
push
jmp
inc
dec
push
lods
pusha
in
out
mov
jns
repz
jb
or
loopne
cmovne
fisubs
repz
mov
pop
jmp
les
insl
das
arpl
add
aam
sub
pusha
xor
push
pop
jb
jbe
push
sub
and
les
sbb
ja
es
ljmp
pop
mov
fs
sbb
test
andb
sub
clc
test
sub
pop
jbe
rorb
fs
test
xlat
iret
mov
fwait
nop
add
test
addr16
mov
sbb
jecxz
jl
imul
in
pop
aad
inc
fs
shl
dec
rcr
mov
cmp
cmp
xor
push
sub
stos
insb
lcall
add
cld
cmp
bound
jmp
scas
adc
iret
mov
dec
push
add
push
cmpsl
xlat
sbbb
add
inc
in
dec
dec
dec
adc
imul
pop
add
imull
fsts
bound
push
std
inc
sbb
xchg
push
outsl
cmp
mov
add
xchg
adc
pop
data16
inc
sub
clc
add
fidivl
lds
mov
pop
sub
jne
shll
rclb
sbb
int
cli
pop
daa
loope
inc
or
leave
fisubs
out
rol
repz
iret
mov
sub
sub
jno
fsts
xor
jg
pusha
shrl
and
jnp
fs
xchg
stos
mov
outsl
test
sbb
dec
insl
out
lods
andb
xor
or
and
xor
jo
pop
pop
fwait
dec
jae
jg
mov
ror
fisttpll
repz
dec
ds
sbb
hlt
lret
cmpsb
pop
sub
pushf
mov
lcall
pop
push
mov
int3
or
xchg
fistpl
cmpl
insb
adc
int3
lock
jge
into
call
cld
push
les
popf
push
xor
ja
mov
dec
and
or
jnp
imul
push
xchg
cmp
mov
mov
aaa
inc
sub
sar
jb
ret
mov
ds
mov
jns
or
popf
cltd
leave
pop
in
hlt
int3
jg
or
aaa
jb
stc
jmp
imul
rorb
inc
mov
mov
mov
and
arpl
xor
add
cmp
imul
pop
mov
or
in
loopne
xchg
jl
fmul
scas
sbb
lods
mov
shlb
jb
out
or
mov
ja
mov
movsl
xchg
pushf
add
aam
push
push
jo
lods
in
jp
sbbl
sbb
mov
push
jne
pusha
jg
popa
sub
xchg
popa
mov
sub
inc
into
jns
xlat
mov
lds
adc
mov
dec
adc
jae
sbb
pop
icebp
fbld
adc
adcl
test
sbb
jns
shl
xchg
jle
mov
mov
enter
or
rcl
or
mov
pop
gs
mov
adc
fwait
mov
add
cmp
cmc
movsl
stos
mov
sbb
aas
aad
jecxz
repz
adc
inc
fs
pop
or
repz
imul
inc
adc
icebp
xchg
pop
loope
dec
inc
push
imul
into
pop
dec
out
jle
push
daa
fisttpll
ss
mov
ficoms
mov
pushw
in
stos
push
xchg
xchg
dec
lret
sbb
add
fs
push
imul
movsl
dec
in
cmpsl
decl
dec
popa
in
lcall
dec
cmc
xchg
imul
jle
adc
xchg
push
xchg
fildll
fidivrs
cmpsb
inc
cmpsl
pop
mov
outsb
es
xchg
push
mov
in
sahf
sbb
adc
fsts
sub
iret
cltd
xlat
je
jns
mov
out
sub
jle
test
movl
sbb
mov
cmp
and
adc
xchg
push
in
sarb
imul
xor
xchg
pushw
inc
jmp
mov
sbb
loope
lea
or
inc
sti
fwait
sub
xchg
and
pop
and
mov
mov
stos
or
and
fisubl
testl
fimuls
cmp
in
adc
inc
xchg
xchg
or
sbb
xor
mov
push
and
inc
sbb
hlt
adc
adc
clc
mov
cmpsl
add
mov
adc
adc
inc
iret
arpl
mov
cmp
pop
mov
lds
sbb
popa
data16
mov
in
inc
mov
cmp
in
jno
mov
dec
arpl
incb
loope
in
sbb
jae
pop
insb
push
test
mov
stos
mov
dec
mov
andb
fldcw
fadds
pop
dec
lcall
sti
mov
inc
mov
das
ds
jno
push
adc
bound
shrl
rorb
lcall
inc
jl
push
loop
pop
cmp
mov
frstor
lds
push
mov
push
mov
rol
gs
xor
neg
out
xor
jp
lret
adc
sahf
push
jmp
jnp
dec
testl
sub
and
cmp
sbb
sarl
xchg
das
mov
ljmp
dec
std
xchg
adc
sbb
outsb
popf
mov
and
xchg
xor
jmp
test
push
sbb
xchg
lret
cmp
bound
sub
repz
inc
mov
movsb
pop
repnz
js
and
xchg
sbb
cmp
mov
mov
fs
xchg
cld
repz
lea
sub
ret
push
fisubl
stc
insb
and
scas
fs
xchg
add
shll
xchg
mov
xchg
addb
mov
lods
jne
or
mov
mov
mov
jg
jae
lret
mov
xchg
xor
sahf
int3
sti
push
xor
popa
xlat
fwait
divl
fiaddl
add
fimull
jbe
mull
and
repz
imul
pop
inc
lahf
les
addl
adc
in
jl
sti
pop
icebp
int3
pushf
inc
pop
jo
cwtl
pop
scas
push
fstp
cmp
xchg
mov
mov
shll
les
adc
mov
add
fldt
in
pop
fidivrl
push
clc
xlat
addr16
rol
pop
daa
inc
pop
mov
jle
movsb
mov
into
adc
fcoms
mov
jmp
pop
cwtl
pop
jo
shrb
pop
lock
xchg
or
cwtl
pop
jle
pop
push
fnstenv
jle
filds
pushf
mov
pop
repnz
outsb
dec
mov
cmpsb
js
cmc
xchg
scas
fdivrl
push
mov
dec
xor
call
push
jne
arpl
jae
xor
imul
adc
jecxz
out
jns
sbb
and
jno
sub
jmp
test
mov
pop
out
mov
pop
jp
push
in
push
int
add
cmp
inc
pop
xor
and
inc
ret
fwait
xchg
in
mov
push
mov
std
push
addr16
fwait
test
mov
aas
mov
jns
clc
shrb
test
and
ret
mov
in
and
into
nop
xor
sub
test
or
jbe
dec
jns
in
fwait
sbb
aad
and
cmp
xor
dec
push
mov
dec
pop
jno
std
inc
mov
mov
push
inc
les
scas
add
outsl
adc
add
cmpb
fwait
push
sahf
jmp
jg
mov
add
popa
cs
scas
setns
outsl
fcompl
imul
mov
mov
gs
fistpll
ja
xchg
scas
stc
inc
sbb
loope
subl
jo
push
sbb
scas
xor
enter
cwtl
sub
orb
xor
sbb
mov
das
push
add
push
les
outsl
popa
xchg
sub
push
addr16
pop
je
or
xchg
repnz
xchg
lret
scas
sub
std
cmp
pop
in
leave
push
mov
call
mov
mov
jecxz
jb
inc
shl
ret
push
repz
ret
out
cmp
jne
aad
mov
mov
idivb
aaa
ds
lods
rorl
push
shrb
and
arpl
in
xlat
mov
mov
lret
popa
push
pop
jae
mov
movsl
push
repz
mov
cli
cmp
mov
xchg
cld
loope
lods
fcmovb
mov
ret
test
jle
andl
push
iret
mov
sbb
xlat
test
inc
fs
jns
js
jbe
ret
pushf
mov
ljmp
pusha
loopne
dec
and
push
mov
xchg
mov
sub
add
xchg
and
inc
adc
arpl
pop
lret
jns
xor
push
out
jbe
pop
cli
xorb
cltd
sti
hlt
sub
stos
cmp
data16
cmp
ss
mov
loopne
pop
jae
sbb
dec
pop
loopne
and
add
mov
xchg
outsb
insl
pusha
mov
xchg
mov
add
addr16
or
inc
lods
lcall
hlt
mov
sbb
jp
clc
dec
sub
jge
or
jbe
mov
inc
jg
daa
dec
xchg
xor
sbb
mov
push
dec
sub
enter
fsubs
sub
mov
adc
jne
std
in
fs
enter
and
lret
movsb
and
cld
ret
hlt
xchg
add
jnp
add
pushf
jl
or
dec
out
pop
js
pop
mov
call
and
cltd
daa
lcall
dec
sub
jle
mov
pop
cmp
cmpsl
cmp
or
inc
mov
and
push
mov
lods
stos
shll
adcl
test
pop
push
hlt
lods
inc
movsl
imul
sar
jns
loopne
cli
insb
cltd
jo
sbbl
xchg
dec
in
mov
jae
mov
pop
sbb
in
sarw
or
sbb
or
shlb
cwtl
lods
xchg
aam
push
sbb
jbe
cmp
mov
sub
add
shr
sub
jp
xchg
mov
sti
jge
pop
mov
and
sub
and
cli
mov
movsl
or
and
jae
fs
sub
test
xchg
rorb
and
mov
fsubrs
mull
mov
mov
or
pop
in
cs
push
mov
lcall
iret
int3
in
mov
daa
and
aad
cmp
mov
cmp
dec
leave
jp
cwtl
enter
pop
fwait
ja
mov
or
xchg
cmpsb
loope
and
das
xchg
pushf
xor
and
es
jno
pop
xchg
lods
incb
push
pop
cmp
movsl
or
adc
dec
adc
ret
scas
fimull
fdivs
aad
sub
xor
mov
lret
mov
sbb
adc
xchg
xchg
adc
cmp
mov
cmpsb
inc
add
mov
push
call
dec
popf
mov
scas
and
jge
mov
lcall
jecxz
push
xor
push
adc
sbb
xchg
movsb
fs
cmpsb
inc
insl
popf
pop
xor
js
sti
cmpsl
pop
jle
lret
fs
xor
mov
fldl
fimull
movsb
lahf
mov
push
and
imul
mov
jno
loope
imul
lret
inc
dec
jg
leave
jg
dec
lahf
mov
jle
lret
inc
xor
push
das
dec
sub
jp
add
into
sbb
or
lcall
pop
push
xlat
jnp
stos
pop
xchg
jp
cmp
jl
mov
ljmp
loope
adc
mov
xchg
mov
jle
cmp
in
add
clc
ficoml
cs
pop
sti
lock
pop
les
xor
mov
ja
push
adc
iret
dec
shrb
iret
mov
or
test
push
jae
daa
pop
test
filds
mov
in
dec
addb
int3
xor
mov
dec
das
push
cld
xchg
jmp
jo
and
xchg
mov
mov
inc
xchg
daa
lods
xchg
jecxz
sub
cmp
jecxz
jno
retw
sbb
ret
adc
adc
xor
sub
lret
mov
movsl
cmp
ret
cmp
xchg
stos
adc
aad
icebp
mov
mov
or
rcl
hlt
pop
add
push
inc
sub
sbb
add
or
enter
adc
leave
lods
push
popf
inc
mov
and
cli
push
pop
lahf
pusha
cmpsb
mov
mov
adc
sub
pop
jge
mov
lock
sbb
decl
adc
scas
xor
push
enter
mov
and
shll
jns
and
cmp
push
div
aaa
add
sub
mov
movsl
out
jnp
or
mov
fidivs
mov
push
les
and
cmp
pushf
xor
push
pop
dec
popl
rorl
mov
jmp
outsl
xchg
fwait
xchg
leave
push
cmpsb
sub
lret
int
or
scas
gs
and
mov
dec
call
mov
mov
jmp
aaa
add
in
ja
cmp
out
daa
incb
jns
fldl
add
outsl
adc
int
loope
cmp
jbe
push
add
jo
mov
std
fistl
mov
cmp
dec
movsl
fcompl
imul
adc
out
mov
sbb
xchg
hlt
test
aam
xor
mov
dec
les
sbb
adc
ljmp
xor
mov
movsl
dec
cmp
ffreep
push
jo
int
clc
icebp
adc
mov
cli
icebp
sbb
cmp
rcrl
insb
xchg
nop
cmp
cmc
mov
xor
jb
mov
dec
sub
addr16
sub
cmp
stc
xorb
fwait
xchg
lea
xor
sbb
arpl
pop
in
shrb
push
dec
cmpsb
out
stos
jl
andb
iret
pop
mov
shlb
xchg
hlt
jno
cltd
add
call
in
adc
in
or
andl
mov
rorb
dec
rorb
sarb
and
and
adc
push
push
aaa
mov
sbb
cmp
mov
adc
mov
cli
mov
sub
cmp
jo
ret
mov
sbb
cmp
mov
xor
or
gs
loop
lods
jg
lret
inc
jb
aam
stos
sbb
sarb
or
nop
mov
and
xor
pop
push
push
mov
mov
xchg
int
mov
push
test
cmc
scas
aad
adc
in
and
xchg
push
fistpll
stos
out
and
push
cmpsl
cld
ss
dec
std
repnz
xor
mov
clc
es
xchg
scas
and
jo
ds
icebp
test
pop
push
mov
mov
sti
jp
mov
notl
into
insb
mov
jg
es
movsl
aas
pop
mov
cmp
xchg
mov
jbe
mov
ret
leave
xlat
push
ret
out
cmpsb
leave
clc
loopne
aad
cmpsb
add
bound
sti
mov
rcrl
movsl
in
outsb
sbb
ret
mov
xor
lret
stos
lret
sub
sbb
push
add
out
sahf
mov
int
mov
mov
xor
cmp
push
lret
or
inc
lret
sbb
inc
mov
cmp
stos
aas
mov
nop
sbb
cmc
inc
dec
mov
xchg
or
addr16
movsl
enter
and
mov
mov
mov
push
mov
xchg
xchg
xchg
leave
sub
aad
mov
or
test
scas
cmp
xlat
dec
push
inc
ja
out
xor
cwtl
sti
mov
daa
adc
mov
jmp
out
push
push
mov
fdivs
inc
add
daa
add
mov
addb
outsb
cmp
mov
sub
or
bound
push
sub
jle
movsb
lahf
ds
stos
jbe
add
aas
lea
mov
cltd
test
jne
nop
aam
xchg
xchg
push
add
cmp
mov
dec
aad
inc
sub
mov
mov
lcall
pop
fcmovnu
mov
pusha
scas
mov
inc
std
or
rorb
shrl
cs
add
hlt
out
and
inc
pop
cmpsb
xor
cmp
push
lock
stos
ljmp
sub
sbb
jb
mov
inc
jno
pop
test
lea
call
mov
inc
lcall
sti
nop
aaa
pushl
pop
pop
fcoml
and
jbe
dec
and
cmpsl
in
imul
push
dec
dec
fmulp
mov
gs
sub
js
sbb
push
outsl
movsb
and
fildl
cmp
jmp
sbb
iret
pop
popa
jno
cmp
cmp
adc
sub
inc
mov
mov
bound
adc
rclb
and
shl
das
jns
scas
inc
std
push
add
mov
cmp
and
and
sbb
jle
push
shll
stos
and
mov
popa
lea
bound
pshufw
dec
rcll
sbbb
mov
arpl
mov
sti
pop
popf
push
cmp
mov
mov
stos
inc
fldcw
add
and
xor
xchg
pop
add
jae
pop
xchg
mov
mov
cmc
and
sti
mov
es
cltd
pop
inc
rcrl
xlat
out
and
cli
cmp
push
enter
mov
and
mov
jg
mov
push
push
or
push
insb
aad
sahf
mov
jmp
aad
pop
shrb
fimull
pusha
push
xchg
adc
ljmp
popa
dec
scas
and
clc
pop
rorb
fndisi(8087
add
xchg
dec
mov
in
in
sbb
dec
jl
popf
movsl
and
jbe
lahf
pop
lds
pop
ss
dec
mov
pop
adc
ja
testl
xor
cmp
ja
push
push
mov
jecxz
pop
repnz
jno
xchg
xchg
jg
mov
mov
or
mov
fcmovne
xor
xor
cwtl
add
mov
cmc
and
ss
aaa
int
test
jmp
dec
xor
enter
jge
jg
stc
mov
inc
cmpsl
xlat
ret
sbb
jecxz
and
push
add
mov
xor
orb
cwtl
fisubrs
test
push
xchg
add
arpl
lock
mov
mov
sub
lret
sbb
fistpll
cmp
mov
stc
inc
xchg
push
push
bound
fadds
in
ljmp
sub
outsb
enter
les
subl
mov
inc
cmp
inc
or
sti
scas
inc
sub
mov
jno
inc
int
mov
shl
and
lds
jb
aaa
xor
lock
mov
ret
imul
or
jle
shrb
lock
bound
sbb
jbe
adc
pop
cmp
daa
xchg
cmp
push
rcrl
adc
mov
shl
jmp
and
add
pushf
repnz
sbb
jl
jl
and
pop
in
pop
sbb
xchg
mov
mov
lret
add
mov
divl
cmpsl
std
icebp
inc
push
aam
push
add
xlat
add
mov
imul
int
mov
sbb
int
xor
rcrb
push
mov
testb
mov
sbb
or
aam
mov
sbb
leave
mov
xor
mov
add
js
loope
jns
es
imul
sbb
mov
ds
jb
pop
xchg
dec
cltd
incl
or
hlt
sbb
sbb
pop
adc
leave
mov
int3
rdtsc
push
sbb
mov
adc
xchg
push
lret
xor
cmpsb
out
add
shll
outsl
cmpsl
ja
nop
push
lods
inc
sbb
scas
dec
icebp
pusha
fwait
clc
gs
jnp
xchg
aas
and
mov
es
dec
aaa
ds
sbb
adc
pop
dec
movsl
call
stos
mov
sbb
xlat
jb
leave
xor
aaa
pushf
xor
in
rol
mov
mov
lods
aas
pop
xor
cmp
lods
dec
and
dec
cs
mov
push
repnz
shlb
rcr
inc
sbb
and
pop
mov
cltd
rcrl
pusha
pushf
pop
cli
call
cmp
jmp
and
or
sbb
arpl
das
mov
jo
mov
iret
mov
mov
iret
dec
inc
and
fstpt
jg
cmp
sbb
push
mov
out
lahf
inc
mov
or
fincstp
lahf
fcmovb
mov
cmc
mov
and
cmp
iret
lds
fdivrs
and
ret
xchg
aam
pop
pop
decl
dec
out
in
cmpsl
cmp
or
test
cmp
mov
xchg
fs
dec
add
ljmp
mov
lahf
enter
sahf
roll
lahf
out
or
jae
add
push
pop
rol
jl
jo
inc
jl
xchg
test
add
pop
call
sub
test
test
ss
sub
mov
jmp
and
ss
adc
jecxz
xchg
xchg
aad
jmp
in
dec
out
dec
inc
add
scas
imul
sbb
shll
pop
fs
repnz
mov
or
xchg
gs
mov
xor
ret
sarb
imul
pop
dec
popl
outsb
loop
cs
jne
mov
push
rol
es
mov
inc
push
lret
das
fidivs
mov
popa
jae
stos
mov
mov
dec
aas
pop
xor
lret
inc
js
aaa
or
incl
out
xchg
mov
xchg
mov
pminub
outsl
mov
roll
mov
mov
sub
rcl
lret
jmp
arpl
sbb
or
xor
sub
sub
dec
insb
push
push
fisubrs
scas
push
imul
mov
ds
movsb
cmp
mov
mov
shlb
xchg
lds
adc
fistl
popf
and
loopne
daa
push
cmp
push
or
push
inc
mov
xchg
sbb
push
imul
jo
mov
push
pop
lea
xor
cmp
insb
lret
add
mov
xchg
and
jl
mov
xchg
xchg
scas
and
push
cmp
aas
in
mov
mov
jmp
cmc
pop
das
inc
leave
pop
xor
inc
push
or
push
iret
sbb
bound
inc
rclb
out
ret
push
std
jb
sbb
cmc
mov
nop
clc
lods
jle
clc
out
sub
pushf
jmp
xchg
mov
xchg
sbb
add
scas
jge
orl
mov
imul
mov
and
xor
aam
pop
movsb
cltd
cmpsb
jo
les
rorl
add
mov
outsl
cmp
in
out
aad
outsb
xor
pop
shl
xchg
jb
int3
ds
xor
or
outsb
repnz
leave
lods
xchg
lods
cwtd
rcl
mov
fistl
idivb
add
xchg
mov
daa
push
hlt
cwtl
mov
or
insl
pop
jle
cli
push
or
xchg
fstpt
loop
popf
lock
mov
mov
jg
sbb
pop
pop
lock
pop
imul
jbe
push
les
or
in
pop
mov
push
mov
outsb
lock
dec
push
mov
loope
push
pusha
fwait
in
lock
lock
in
jne
xchg
xchg
and
ss
push
cwtl
adc
cltd
fiaddl
and
push
sar
jl
jmp
loop
inc
pop
mov
mov
push
inc
mov
and
popf
je
xchg
pop
movsb
push
pop
mov
stos
daa
and
mov
cmp
das
sbb
pop
add
cltd
cld
mov
lsl
mov
mov
cli
inc
cmpsb
mov
xchg
cmp
xchg
jns
and
cmp
fcoml
aaa
idivb
add
sarl
add
ja
and
dec
and
sar
cli
add
movsb
dec
mov
sbbl
cmp
xor
xor
insl
mov
mov
es
xor
jg
adc
sbb
ficompl
jnp
adc
ljmp
jle
repz
xchg
mov
mov
fists
xchg
add
xchg
sbb
daa
out
adcl
insl
jns
mov
push
mov
out
cmp
push
in
lret
aad
inc
and
imulb
mov
dec
push
mov
or
mov
dec
sbb
insb
hlt
pop
jo
push
icebp
push
lret
mov
js
jns
syscall
jne
ficompl
push
push
inc
fildl
inc
dec
ds
push
xlat
fimull
pop
repnz
lds
sbb
icebp
mov
test
shrl
in
cmp
mov
jbe
cmp
mov
fdivrs
out
pop
pop
cld
xchg
lods
mov
aam
mov
add
and
inc
dec
adc
push
xchg
lods
cli
stos
rcr
add
cmp
sbb
jb
inc
cs
dec
test
adc
xchg
sub
aaa
mov
jns
out
and
push
jns
cmpsl
adc
cli
inc
or
pushf
ljmp
and
or
out
lret
pop
add
jge
data16
data16
int3
mov
push
jb
jb
xor
xchg
je
aad
stc
fwait
mov
sub
into
orb
repz
or
push
mov
das
sub
ret
jne
cmc
fbld
sbb
mov
and
aas
ret
push
jne
push
jecxz
je
add
inc
inc
and
mov
test
nop
das
dec
sahf
aam
mov
push
mov
nop
lret
cmp
js
sbb
pusha
rorl
sar
push
mov
sub
mov
xor
xchg
cwtl
out
add
xor
mov
mov
iret
int
xor
adc
jns
and
sti
stos
and
mov
inc
incl
jmp
xor
outsb
in
cmp
cwtl
adc
pusha
cmp
jno
in
xchg
ja
stos
callw
loop
xchg
jmp
pop
dec
adc
jle
adc
lods
out
fwait
xchg
in
out
sbb
fcompl
jno
outsb
lahf
andb
and
lahf
test
test
or
jae
arpl
and
xor
dec
mov
addb
daa
pop
push
mov
lds
sub
int
or
fucomi
fs
enter
loopne
push
bound
lds
dec
add
aaa
jecxz
sbb
loop
jmp
popf
inc
cmp
xchg
popf
loope
jbe
jne
mov
dec
inc
shll
sbb
out
nop
jb
sarl
cmp
or
push
adc
lods
int3
sub
mov
or
push
lods
das
mov
mov
mov
pop
lcall
pop
xchg
mov
jne
jge
xor
and
ret
jns
das
jns
push
pusha
out
lret
icebp
imul
out
aaa
sbb
std
repnz
roll
or
jge
dec
dec
sub
imul
movsl
mov
cmp
add
jnp
mov
jbe
mov
and
or
inc
les
mov
roll
cmovno
movsl
mov
sub
adc
aad
pop
fbld
add
ja
inc
loop
in
inc
arpl
mov
cmp
pop
mov
adc
xor
cmpsb
or
dec
mov
cwtl
jge
iret
fists
sbb
adc
xchg
xor
lock
rolb
fstps
jp
movsl
xor
lahf
addl
jge
ret
mov
loope
mov
mov
mov
adc
dec
jne
xlat
sbb
jo
jge
push
sbbb
xchg
pop
jp
ljmp
mov
jmp
in
push
stos
test
mov
clc
cmp
sbb
cmpsb
popa
xchg
push
fldl
nop
stc
and
lock
mov
mov
mov
je
dec
jg
mov
sub
loopne
cld
and
fmul
pop
ss
cs
jae
cld
rorb
adc
repnz
fidivs
fldt
movsl
adc
mov
cld
movsl
xor
ret
or
arpl
inc
jbe
call
xlat
jge
sub
mov
stc
sbb
mov
jg
add
add
dec
scas
lret
sub
daa
adc
andb
sub
stc
hlt
aam
xchg
dec
adc
hlt
cmpsb
arpl
decl
adcl
jbe
cltd
jp
sub
mov
sub
aam
sbb
in
test
push
or
xor
test
loop
jns
pop
adc
push
push
popa
in
aaa
setl
scas
lods
or
stos
dec
lahf
jp
sub
cmp
sbb
inc
fisttpll
jmp
in
pop
sbb
mov
cltd
imul
fwait
out
mov
test
xor
mov
test
and
mov
push
mov
pop
fbld
ret
cmp
int
mov
scas
pop
mov
stos
sahf
shrl
mov
dec
les
adc
adc
imul
adc
pop
test
addl
cmp
mov
push
xlat
jmp
and
pop
stc
jne
jl
or
add
in
pop
jbe
add
mov
sub
cmp
adc
fdiv
push
psraw
rcrl
icebp
test
push
jmp
lods
std
iret
jle
cmc
xchg
ds
repz
cmpsl
xlat
mov
pop
jne,pt
cmp
stc
popa
iret
cmc
ss
sub
shll
mov
jbe
repnz
ljmp
inc
mov
push
cmp
xchg
mov
int
mov
sti
cwtl
xor
repz
cmp
pop
mov
sbb
bound
or
mov
dec
inc
sbb
adc
mov
in
lcall
aaa
into
jl
cmp
mov
ror
clc
jg
jno
clc
sbb
fidivrl
jne
test
insb
jg
jns
out
shlb
cld
call
xor
sti
test
mov
std
addr16
sbb
dec
jno
xor
xorl
daa
push
mov
fmull
inc
pop
pusha
xor
dec
movsl
inc
out
add
mov
cmc
dec
dec
test
dec
or
jg
hlt
cmp
cmp
outsl
fildl
mov
mov
adc
sub
push
xchg
test
push
mov
ss
push
sub
adc
hlt
sub
rol
cmp
dec
adcb
out
jl
negl
mov
repz
xchg
or
scas
in
dec
jno
jae
lret
incb
pop
cmpl
jae
push
sub
test
push
mov
clc
or
lods
into
rcrb
std
fstpl
cmp
jb
test
ret
cwtl
jge
sbbb
stc
int3
lret
xor
aaa
in
fs
jge
mov
es
adc
loopne
cli
or
sbb
out
popl
dec
jo
dec
mov
pop
mov
and
scas
sbb
inc
shll
pop
mov
popf
push
push
std
into
ret
push
or
cli
imul
sbb
add
sbb
sbb
push
dec
out
sbb
inc
cltd
lods
arpl
out
sbb
or
addl
jnp
outsb
iret
jl
imul
pop
mov
loopne
push
std
jno
cltd
js
mov
mov
adc
push
dec
mov
mov
mov
shl
dec
pushf
mov
jp
ret
dec
dec
fnsave
je
pop
inc
jl
xchg
and
adc
mov
mov
xchg
and
push
out
adc
arpl
cmp
jl
jb
cmpsb
mov
inc
lock
ljmp
dec
adc
xchg
jne
insl
mov
jo
xor
add
test
cmpsl
ds
lret
sbb
push
adc
adc
add
xchg
shr
std
jp
int
into
adc
out
repz
xor
adcb
cmp
jp
fstpt
movsb
pop
push
aam
sbb
pop
cmp
mov
sti
xchg
iret
rorl
mov
and
mov
movsl
push
or
dec
jno
repnz
cwtl
mull
pop
jb
outsb
ja
jge
cld
adc
or
xor
mov
or
mov
dec
mov
pop
add
sbb
js
mov
ret
lret
repnz
jge
in
mov
jmp
out
mov
push
jle
xor
outsl
test
and
pusha
or
adc
jns
xor
jae
pop
inc
insb
adcb
jno
or
xor
or
pop
mov
sub
xchg
and
daa
sbbl
stc
sti
daa
xor
xor
cwtl
loopne
jbe
lock
xchg
bound
int3
mov
pop
aad
call
aas
pop
push
pushf
xchg
cmpsb
sub
in
mov
lcall
xchg
dec
imul
mov
adc
call
in
and
sbb
mov
sub
sub
jb
or
shrb
inc
dec
mov
xor
lds
lock
dec
mov
mov
add
jmp
pop
hlt
cld
xorb
cld
sbb
inc
cmp
mov
aas
movsl
adcl
dec
xchg
or
lock
push
testb
out
call
fcoms
inc
in
stos
ljmp
mov
xor
stos
sub
sbb
add
sti
mov
lea
daa
sub
in
sbb
inc
clc
idivl
xchg
andps
insl
xchg
xchg
lea
push
pop
add
pop
fisttpll
add
jmp
cwtl
ret
inc
cmp
jle
fildll
and
jnp
pop
or
sbb
subb
mov
mov
push
adc
sahf
mov
jl
shl
jno
sbb
jle
adc
cmp
fsubr
mov
sub
sarl
cmpb
mov
shrb
or
lret
popf
cmp
push
test
aam
dec
push
je
icebp
test
pop
sbb
dec
push
jl
clc
lcall
xorl
cmpsb
push
mov
or
addr16
clc
cmp
lods
int3
and
loopne
mov
dec
cmp
vsqrtss
adc
ret
cmp
lods
out
mov
fmulp
add
dec
addr16
mov
mov
enter
aam
push
loope
lock
sub
cmpsl
jmp
jo
and
and
stos
push
and
jo
pop
dec
cwtl
imul
or
mov
push
jge
push
add
mov
loop
cmp
xchg
les
stos
movsb
out
pop
push
dec
je
in
mov
gs
enter
sti
sub
loope
ljmp
mov
imul
nop
jbe
xchg
call
inc
jmp
inc
leave
pop
xchg
mov
add
sub
mov
jae
lods
sbb
mov
popl
sub
sti
add
and
mov
aam
jle
xchg
in
mov
xor
jae
insl
push
xlat
or
in
push
cmpsl
mov
jmp
faddl
pop
jno
call
into
ds
mov
jecxz
and
cmp
mov
lods
cmp
or
mov
fstl
data16
into
cmc
fistpll
pop
add
adc
jae
jp
mov
cltd
shll
cs
ffree
cltd
negb
xchg
cltd
insl
bound
enter
cmp
mov
xchg
sub
jecxz
out
mov
pop
js
fistps
add
mov
push
xor
mov
pop
outsl
rcll
mov
insb
insb
ljmp
loope
jp
test
dec
xor
xchg
mov
adc
rolb
add
repnz
daa
test
pop
xchg
lahf
enter
jo
mov
aas
hlt
stos
out
rclb
int3
fs
int
pop
data16
lret
aad
push
test
popf
out
adc
in
pop
rorl
fs
sbb
mov
mov
pop
jnp
sub
add
mov
sarl
into
push
cmc
jecxz
jb
sbb
cmp
dec
call
das
push
shlb
loope
mov
sub
mov
inc
cmp
and
ljmp
scas
xchg
add
in
sbb
hlt
jge
hlt
xchg
inc
movsb
jl
pusha
repz
jns
and
or
out
cmpl
mov
add
push
mov
dec
ds
lock
jp
jo
bnd
inc
loope
and
xor
cmp
in
out
and
test
xchg
mov
mov
or
jl
fmull
out
lods
inc
and
stos
cmpsl
or
cltd
lock
insb
mov
scas
imull
push
add
lret
out
dec
scas
dec
sti
lds
loop
fnsave
sub
cli
adc
lcall
jns
ljmp
or
mov
jo
es
jle
mov
sbb
popa
inc
add
divl
cli
inc
mov
cmpl
dec
or
xor
jg
lods
and
hlt
pop
cmpsb
cs
sub
or
add
xlat
adc
ja
jle
leave
adc
jns,pn
loopne
clc
ljmp
jmp
addr16
cmp
rcl
jl
jne
aad
scas
xor
add
shrl
mov
cmp
sub
xchg
fists
push
jns
mov
sbb
jl
fwait
outsl
xor
enter
js
out
adc
mov
fsubs
shll
lahf
test
sbb
and
je
xchg
imulb
adc
pop
push
xor
iret
cmp
stos
dec
jbe
jno
jle
cmp
jbe
pop
jb
or
lea
add
loope
out
pop
outsl
insl
pop
or
add
cmp
fs
lret
inc
push
mov
out
ja
bound
push
int3
lret
sbb
xchg
cmp
mov
andb
jge
xor
rolb
pop
imul
sbb
push
pop
sahf
mov
jg
popf
xchg
dec
xchg
or
and
sbb
mov
xorl
jno
sub
aad
ror
mov
daa
xor
std
dec
repz
fsubrp
divl
pusha
mov
lods
ja
mov
arpl
testb
pusha
enter
mov
repnz
xchg
aaa
std
aaa
int
push
inc
sub
adc
jl
bnd
and
je
adc
dec
dec
push
push
xchg
lds
mov
adc
test
jo
sub
add
push
push
movsl
inc
pop
jge
push
add
push
dec
scas
aam
sub
test
lcall
or
push
lock
out
cltd
mov
push
mov
cmp
mov
jo
in
insb
dec
or
or
push
mov
pop
gs
roll
fsubp
push
or
sbb
mov
cmc
cmp
adc
mov
or
push
cmc
rcrb
cwtl
repz
loopne
sbb
lret
mov
repnz
push
stos
xor
xchg
loopne
int3
orb
xor
rcr
addr16
adc
shl
mov
in
mov
cs
sbbl
xlat
xchg
xor
mov
data16
lock
mov
sub
movsl
dec
jb
push
or
xchg
mov
and
mov
popa
sub
aas
push
test
sti
rorl
lret
stc
fnsave
daa
in
and
jbe
js
push
out
aaa
adc
and
jmp
mov
sub
mov
xor
in
xor
fisttpll
inc
add
or
xor
rcrb
lret
xchg
dec
sub
push
pxor
jl
pop
movsb
inc
dec
mov
mov
data16
jle
stos
mov
sbb
sbb
scas
leave
stc
jnp
jmp
mov
push
cmc
imul
dec
sbbl
add
and
mov
lcall
dec
xchg
jno
sub
xor
pop
inc
aam
pop
ret
repz
adc
mov
xchg
dec
and
rcrb
insb
xor
add
lret
push
imul
sbb
inc
fstpt
mov
ds
or
sbb
popa
add
repnz
popa
inc
add
loop
in
mov
test
movsb
pop
push
int3
sub
leave
addb
nop
sbb
jae
mov
jb
stos
lahf
lcall
lods
bound
adc
inc
sti
dec
aaa
outsl
dec
pop
ss
inc
mov
sbb
add
iret
dec
mov
xorl
push
bound
and
data16
jbe
pop
inc
or
sahf
hlt
test
or
gs
pop
roll
cmp
mov
out
cmp
mov
push
lock
fxam
xchg
movsb
push
loopne
mov
push
jg
std
mov
inc
lcall
inc
xchg
mov
sub
lret
jle
aam
pop
ja
repz
dec
out
lahf
mov
fildl
pop
lds
pop
enter
cmp
mov
pop
inc
dec
xor
cs
mov
mov
fistpll
lahf
lods
xchg
clc
or
mov
adc
fwait
hlt
rcrb
cmp
add
jae
adc
pop
mov
push
inc
dec
sbb
scas
pop
inc
mov
lahf
mov
cmp
cs
cltd
testb
inc
or
add
pop
mov
push
out
xchg
movsb
pop
and
sahf
xor
lcall
cmp
sub
rcl
sbb
mov
inc
cli
in
dec
test
push
inc
dec
or
arpl
dec
xor
jmp
inc
push
scas
pop
push
ja
lock
mov
push
test
fwait
cmp
mov
dec
fs
cmp
insl
movsb
mov
adc
xchg
mov
or
mov
loope
ljmp
icebp
movsb
popf
add
lds
and
add
add
popa
mov
das
andb
sbb
pop
push
mov
out
stos
inc
cltd
inc
xchg
add
nop
in
xor
gs
mov
aas
and
es
fbld
ret
into
add
xchg
mov
mov
cmp
jb
and
ret
sahf
pop
inc
in
jl
sbb
xor
fs
leave
mov
xchg
cmpl
sbb
fildll
int
test
aas
pop
loope
shrb
push
and
dec
cwtl
push
pop
data16
push
adc
leave
push
push
fdivl
xor
movsb
dec
push
and
mov
fcomps
xor
pop
fcompl
loopne
les
loope
or
add
cmpb
mov
or
push
cli
je
lds
daa
lret
jmp
popl
sub
fdivl
push
xchg
mov
arpl
std
mov
in
sti
nop
faddl
mov
push
loope
les
jo
ret
iret
or
addr16
outsl
shll
aam
cld
push
stc
xor
xor
lahf
ret
dec
faddl
inc
stos
insl
cmp
mov
icebp
out
shll
in
push
in
jge
push
mov
xor
cmp
mov
dec
inc
pop
jo
fidivrs
mov
loopne
pop
pop
xor
inc
andl
cld
mov
outsl
cmp
dec
push
into
xchg
cmp
pop
popa
fisttpl
cmp
sbb
dec
lret
cmc
push
int3
cmc
aas
jmp
ret
push
sub
popa
imul
shrl
dec
mov
jo
sub
enter
mov
add
mov
or
sub
lahf
add
mov
xchg
test
dec
push
dec
into
sahf
xchg
xchg
add
dec
leave
dec
mov
in
in
push
sti
fs
pop
mov
jle
in
inc
lcall
jno
sbb
push
mov
std
out
xor
pushf
mov
pop
iret
push
subb
leave
lds
leave
pop
movsb
mov
popf
dec
iret
sbb
adc
push
xor
mov
or
ja,pt
inc
ds
fldl
jle
push
mov
fidivl
xchg
inc
adc
inc
subb
xchg
jno
fld
cmp
stos
je
mov
cld
ret
pop
dec
pop
stc
mov
inc
lcall
and
mov
or
inc
adcl
ds
jne
mov
in
mov
loope
fs
sarl
pop
jns
movq
jle
jmp
fisubrs
lods
or
imul
adc
lahf
mov
jmp
rorl
aaa
mov
jp
out
icebp
lock
lret
adc
testb
scas
jns
in
ret
call
or
adc
push
ret
stos
cmpsl
int3
movsb
popa
add
cld
or
xor
enter
clc
cmp
jbe
pusha
mov
jnp
jne
add
std
jb
sbb
xchg
out
rcll
xor
xor
cmpsl
cli
xchg
xor
ficompl
sbb
xor
and
ds
add
imul
or
mov
jne
imul
mov
xchg
mov
ss
clc
cld
sub
pop
inc
in
shll
lods
mov
ljmp
push
cmp
or
mov
leave
call
shll
push
in
or
in
repnz
sub
jae
dec
ret
mov
xchg
rorl
dec
dec
or
lock
sbb
dec
jp
pop
jno
fcoms
cmp
pop
push
subb
or
je
out
add
xchg
mov
ret
mov
jmp
outsl
daa
dec
push
jecxz
lock
or
ja
pop
mov
test
mov
adc
push
fwait
icebp
xchg
mov
sub
cmp
jne
int
sub
jge
scas
cmc
mov
hlt
cltd
sbb
data16
dec
xor
lret
mov
in
outsb
cltd
adc
das
mov
cmpb
insl
jnp
call
shrl
out
sbb
popa
adc
rorl
rcrl
and
cmc
mov
inc
nop
inc
push
ljmp
add
rcrb
iret
mov
in
std
or
fwait
push
cmpsl
mov
loopne
sbb
push
mov
nop
push
jle
jb
sarl
xlat
ds
jne
cmp
mov
pusha
arpl
int
adc
jnp
movsl
pushf
push
and
add
jp
popl
mov
dec
xchg
stc
test
insb
fiadds
test
subl
rcrl
pop
out
pop
in
jecxz
roll
push
adc
adc
mov
mov
out
and
ds
aas
enter
decb
xor
das
and
dec
add
int
or
sahf
xor
mov
mov
pop
jecxz
sub
inc
jmp
sti
mov
nop
xchg
jmp
mov
lahf
lods
cmp
sbb
orl
stos
sti
add
lods
mov
aam
mov
mov
mov
xchg
in
decb
dec
mov
pop
sahf
jl
das
xchg
sub
out
enter
push
es
dec
mov
cmp
cmp
sub
add
jne
dec
mov
xor
outsl
or
xchg
mov
cmp
lds
pop
jb
xchg
mull
xor
jl
push
cmp
mov
push
xchg
add
pushf
or
mov
cmp
imul
xchg
or
mov
out
incb
shrb
scas
dec
pop
adc
test
jmp
addr16
test
call
scas
xchg
je
cmc
jl
scas
stc
out
leave
mov
dec
inc
outsl
out
add
fs
xor
mov
push
mov
pop
jmp
popf
fistps
sub
push
stc
rolb
xlat
cmp
mov
adc
push
xchg
push
cmpsb
xor
or
pop
popf
andl
adc
dec
pop
repz
ljmp
sub
push
rcl
lods
imul
repz
xchg
inc
cmc
enter
shll
pop
and
mov
xor
cld
fadd
dec
outsl
push
out
rcrl
mov
test
push
jmp
movsl
sbb
call
loop
leave
adc
mov
sahf
and
dec
push
dec
test
mov
fidivrl
loop
sti
int
lret
scas
cmp
xchg
ds
rdmsr
lahf
aaa
push
xorb
xchg
test
xor
xchg
in
xchg
fnstsw
jge
stos
stos
sub
movsl
push
adc
push
out
addr16
or
push
gs
add
pop
addb
jmp
movsb
bound
sub
inc
and
or
add
sti
jb
mov
mov
mov
or
adc
pop
pop
imul
dec
out
push
movb
in
dec
xor
jns
aaa
dec
pusha
xor
orb
sub
sub
testl
arpl
loope
sub
rolb
xchg
sub
inc
mov
into
fnstsw
xor
dec
mov
mov
sub
and
xchg
sbb
sbb
js
and
ret
pop
xor
cmc
aam
mov
jl
push
ja
in
jl
les
pop
call
ret
or
pop
push
fucomp
inc
stos
add
mov
adc
mov
int
mov
sbbb
xchg
jns
cmp
dec
adc
mov
lahf
mov
or
sub
pushf
cmp
sti
fsubr
cmp
sbb
movsl
scas
dec
test
in
int3
sub
and
jbe
push
pop
mov
pop
fnstsw
out
dec
inc
fisttpll
scas
ret
out
pop
rclb
cmc
push
mov
xchg
push
mov
sti
adc
jbe
mov
into
fcomi
into
or
cmp
mov
test
lret
adc
call
notb
xchg
add
je
sub
les
in
sub
mov
xor
in
daa
xor
and
mov
push
push
pop
mov
nop
mov
test
fstl
movsl
out
ret
jmp
and
dec
cmpsl
adc
add
rclb
and
sub
sahf
inc
xchg
pop
psrlw
and
cmp
das
mov
sub
cwtl
mov
push
das
xchg
out
lcall
lahf
add
divb
incb
inc
cmp
xor
out
repnz
cmc
or
fsubs
xlat
fldcw
push
sub
mov
or
adc
mov
xchg
mov
xchg
add
and
lds
das
scas
sub
icebp
not
lret
xor
lods
pushf
add
les
xchg
pop
mov
fwait
mov
shrb
aad
test
push
inc
push
leave
mov
movsw
adc
dec
sbb
jb
decl
fsubl
adc
hlt
mov
mov
ret
push
incb
mov
rol
sbb
lcall
shlb
and
je
sbbl
xchg
bound
hlt
jmp
mov
movsb
and
stc
in
jb
push
mov
popf
dec
or
adc
addr16
mov
cld
fnsave
sub
xlat
jb
push
data16
decl
dec
mov
lods
shlb
inc
jp
xor
in
les
jle
cmp
mov
ljmp
xor
das
outsb
gs
insb
out
repz
sbb
push
pop
push
ret
cmpsl
loope
fld
pop
mov
pop
adc
aam
dec
out
fwait
icebp
add
cmp
mov
and
js
xorb
in
inc
bts
pop
aas
in
adc
sbb
insb
jge
mov
pop
lret
es
xor
add
jb
jne
arpl
or
lock
mov
ror
mov
sub
or
mov
xor
stos
imul
sub
add
fcompl
jb
lods
mov
andl
xchg
or
ret
gs
fistpl
push
pop
js
pop
ret
insl
push
and
testl
jmp
daa
movsb
add
push
jns
add
adcl
pop
push
pop
mov
rcrb
push
sbb
scas
lret
repnz
dec
mov
popf
mov
xchg
jnp
inc
jmp
cli
pusha
push
dec
fidivs
test
cs
mov
and
rorb
lods
rcl
cmc
push
jecxz
mov
xchg
ret
pop
test
sbbl
jecxz
out
sub
mov
inc
test
xor
pusha
or
add
shll
cmc
movsb
and
push
mov
js
fwait
mov
ret
inc
cmc
jp
sub
and
cmp
stos
inc
push
mov
cltd
push
test
lods
mov
daa
out
arpl
mov
lods
xchg
cmp
xor
cmpsb
ljmp
sbb
push
add
pop
xchg
ljmp
lret
jle
xchg
insl
popa
xchg
gs
in
daa
ja
enter
push
in
ret
loop
repz
aas
out
pop
lods
mov
mov
add
in
dec
addr16
jns
cmp
fs
dec
add
testb
dec
push
mov
sub
xchg
inc
sub
cmp
fdivl
cmp
add
cli
cmc
mov
pop
mov
sbb
insb
stos
cmp
aad
ss
adc
mov
and
dec
arpl
incl
push
sti
loop
xor
and
repnz
jbe
ja
rorl
pusha
or
jmp
into
mov
ret
loopne
jecxz
in
xlat
icebp
sti
cmpsl
jnp
xchg
xor
xlat
mov
pop
lea
dec
cmc
std
push
xchg
loopne
pop
adc
mov
aam
scas
sbb
mov
sub
ret
mov
loopne
outsb
or
fwait
leave
fsts
cmp
out
in
test
sub
cmp
in
sub
outsl
es
shll
jmp
dec
stos
shlb
cmp
rolb
mov
fstpt
int3
adc
test
je
or
outsl
xchg
out
add
rol
add
jb
ds
jp
mov
push
in
jg
or
jle
js
mov
adc
popf
outsl
in
lods
les
add
test
dec
mov
pop
lods
and
sbb
leave
imul
xchg
jl
cmp
in
mov
mov
std
jno
push
je
fistpll
aas
or
mov
dec
jp
xchg
xchg
cld
sti
jae
push
inc
mov
nop
dec
cmc
dec
fucom
rcrb
and
push
daa
sahf
rorl
mov
fs
dec
xor
mov
enter
push
mov
mov
dec
xor
pop
stos
push
test
cmp
pop
in
aas
and
dec
repz
lock
in
inc
orb
ret
mov
sarb
je
cmp
stos
shll
sub
ja
dec
xchg
inc
or
or
push
pushf
xor
and
pop
lret
adc
into
pop
ljmp
lds
aaa
imul
fcoml
mov
gs
sub
cmp
js
mov
and
sub
fisubrl
shr
mov
pop
into
rcll
ja
mov
inc
xor
jge
fimuls
not
jb
inc
and
add
orb
leave
xor
dec
lds
push
inc
leave
xchg
subb
aaa
cld
lds
cs
pop
aaa
imul
repz
or
push
push
or
mul
sub
lcall
jg
and
adcl
repz
fcmove
lods
inc
jne
stos
dec
popf
out
out
stc
stos
stos
xor
and
add
sub
mov
pop
call
xchg
insl
ljmp
jl
movsl
inc
xlat
fmul
test
push
outsl
stos
test
in
and
addl
icebp
rcrb
shlb
aam
adc
inc
and
lahf
int3
adc
dec
pop
xor
xor
mov
xchg
popa
pop
das
mov
dec
xor
int
sub
mov
rcrl
lock
mov
ljmp
in
jle
es
aad
mov
shll
popa
or
or
lret
xchg
gs
mov
jmp
ficoml
rcrb
jae
popa
xor
mov
push
mov
fldln2
clc
sbb
faddl
icebp
cmp
mov
lea
jo
sbb
jl,pt
sbb
sub
pop
or
mov
lret
sti
test
out
inc
push
orb
popf
mov
dec
pop
dec
notl
add
xchg
xchg
repnz
sub
or
adc
xor
sarl
notb
testl
cmp
or
popa
mov
mov
jle
mov
cld
int3
loop
test
xchg
push
in
xchg
fmul
jl
orb
jg
cli
jmp
rorl
repz
dec
sub
jmp
inc
pop
inc
add
cmp
jle
rol
xor
das
cmpsb
cld
cmpsb
cmp
repz
dec
fildll
inc
test
add
ficompl
out
mov
roll
aam
loope
inc
ret
jle
cmpsl
faddl
mov
dec
mov
jg
pop
push
rcrb
sub
or
repnz
call
pop
je
rolb
mov
adc
mov
mov
cli
les
outsl
push
call
add
dec
clc
mov
lods
add
aaa
mov
pop
sahf
push
pop
rolb
pop
test
loope
push
cmp
lds
pop
dec
adc
pop
adcb
imul
sub
lods
std
movb
or
pop
cmp
sub
push
mov
inc
dec
mov
icebp
jne
scas
int3
addr16
xchg
xchg
cs
lea
inc
int
jno
cltd
jp
or
ja
ss
movsb
lds
sbb
in
and
xor
test
lret
loopne
cmp
or
and
popf
dec
dec
repz
push
pop
push
mov
inc
mov
mov
xor
inc
lock
adc
jnp
add
xchg
icebp
pop
stc
sub
lret
movl
mov
push
fsubrl
sahf
out
jno
jmp
cmp
in
mov
or
fsubr
jnp
xchg
gs
dec
and
adc
jmp
jae
xor
loop
mov
mov
sbb
mov
cld
cmp
aam
mov
lret
push
and
cmp
push
lods
push
pusha
nop
dec
lds
lock
mov
ja
cmp
xor
mov
aad
push
sbb
test
sbb
or
xchg
fdivr
cli
rcll
mov
stc
sti
sub
enter
xor
cmp
sub
jno
jno
daa
and
fcom
in
test
cld
mov
inc
ljmp
xchg
and
les
bound
add
movl
sbb
es
fisubl
scas
lret
lahf
addr16
inc
scas
inc
dec
xor
testl
call
stos
xor
fdivs
mov
lock
daa
imull
ja
bound
sarb
std
jge
repz
pop
push
fisubrl
sbb
and
imul
clc
hlt
sbb
pop
sub
nop
cltd
inc
into
mov
lods
das
orl
dec
inc
stos
bound
out
and
jle
inc
push
pop
xchg
lea
nop
cld
aad
fstl
fs
push
inc
adc
sub
mov
jno
pop
sarb
xchg
ret
or
cmp
out
sbb
aam
addl
lret
xor
mov
ret
clc
mov
xchg
sbb
testl
sbb
inc
sbb
sub
sarb
inc
inc
jl
cmp
pop
fcmovnbe
mov
xchg
fimull
sbb
popf
int3
fsts
jne
test
mov
stos
xor
push
cmp
gs
sbb
je
outsl
pop
std
rolb
mov
cs
mov
inc
hlt
shrl
in
dec
ja
lds
push
sti
clc
fwait
lcall
out
ror
dec
pop
into
outsl
stos
mov
ljmp
pop
push
iret
mov
jns
xor
dec
icebp
test
test
push
call
mov
xchg
push
push
dec
mov
pop
test
ja
xchg
sahf
fmulp
push
xchg
mov
pop
mov
lds
mov
das
insb
out
pop
and
out
mov
lcall
cld
push
ret
jecxz
icebp
cwtl
or
mov
cmp
je
mov
das
cmp
jg
mov
cmp
dec
push
sbb
cmpsb
cwtl
push
stos
les
inc
popl
mov
jno
pop
fimull
andb
stc
lcall
jg,pt
mov
xchg
aad
cmp
mov
je
aad
jecxz
fucomp
mov
mov
leave
push
xor
adc
std
or
enter
sti
mov
cmpb
push
inc
inc
push
enter
xchg
fsubs
jecxz
loop
sbb
stos
arpl
hlt
jmp
int
addl
cmpsb
imul
icebp
mov
outsl
jno
cmp
sahf
add
popa
outsl
es
cwtl
test
mov
outsb
and
arpl
jb
mov
sub
aam
xchg
and
ljmp
xchg
lahf
cli
jnp
or
or
mov
and
cwtl
aad
mov
lret
fwait
lahf
jmp
cmpsl
sahf
jae
rcll
mov
xlat
ucomiss
cli
dec
or
popf
mov
repnz
or
cmp
roll
mov
jecxz
cs
sbb
mov
movsb
ret
sub
popa
inc
dec
sarb
stos
sbb
cmpsl
test
pop
arpl
icebp
mov
xor
aas
push
mov
mov
push
adc
and
cmp
int3
add
push
sub
mov
rorl
cli
mov
dec
mov
inc
fisubrl
pop
std
jg
jno
fs
enter
popa
xchg
xlat
pop
lcall
push
jnp
pop
sub
mov
push
mov
dec
inc
in
ds
sub
lock
cmpsb
jb
imull
icebp
int
and
movsb
aaa
xchg
xchg
pop
dec
lods
adc
lret
cmpl
cmovle
mov
push
or
cmpsl
jmp
mov
dec
stos
out
enter
stc
shlb
fcmove
cltd
add
mov
shlb
repz
push
jl
pop
nop
or
scas
mov
rorl
jl
hlt
dec
mov
mov
subl
xor
or
adc
jnp
pextrw
das
jb
xor
sub
aam
lfence
xchg
stos
dec
adc
sub
push
or
das
jns
clc
add
outsl
scas
mov
pop
subl
ja
into
leave
xchg
leave
movb
rcpps
negb
add
cmp
pop
sub
out
cs
icebp
jp
xchg
out
in
jnp
cmpb
sub
adc
and
lahf
ret
and
xor
std
xor
rol
jle
sub
push
icebp
mov
pop
dec
push
js
adc
or
pop
adc
add
jl
jg
cmp
in
test
and
adc
inc
mov
add
and
iret
dec
lock
adc
mov
sub
adc
sub
jns
cmpsl
mov
cmpsl
xchg
out
outsl
push
scas
adc
sbb
test
and
rcll
loop
sahf
arpl
insb
popf
xchg
out
mov
clc
sti
xlat
out
aaa
shl
cli
cld
insl
push
dec
push
popa
into
inc
mov
sub
jmp
cmp
test
mov
mov
cli
aam
push
popf
out
push
enterw
pop
xchg
xor
jge
push
je
pushf
sub
mov
out
ret
mov
inc
mov
dec
dec
cmpsb
cmpsl
jo
dec
cld
or
and
sub
xor
sahf
stos
sbb
sti
push
sbb
mov
cmpsb
push
movsb
adc
add
pop
dec
ret
pop
mov
mov
jne
sub
add
ja
test
lret
cmpb
iret
pop
add
arpl
cmp
mov
dec
pop
mov
inc
or
xchg
pop
mov
sub
adcb
xchg
xchg
repnz
cwtl
xor
fwait
pop
and
loope
pop
mov
stos
pop
mov
mov
mov
push
push
daa
jno
cmp
js
testl
pushf
lret
popa
adc
scas
adc
cltd
sbb
jo
and
or
test
xchg
les
repz
xor
add
dec
inc
loopne
jb
nop
fwait
fs
or
es
and
std
and
jmp
test
test
mov
pushf
jle
fsubp
jae
fld
jmp
cltd
cld
lods
repz
mov
mov
scas
sbb
outsl
xchg
and
rcrb
xchg
mov
cmp
rcrb
pop
inc
std
idivb
inc
aam
cmp
stos
aam
dec
addr16
outsl
js
mov
or
jp
in
enter
xor
xchg
and
dec
and
nop
mov
push
mov
popa
stc
inc
data16
inc
cmc
hlt
jbe
jmp
pusha
fs
es
pop
push
sub
and
jb
xchg
mov
or
js
add
in
sti
xor
xlat
fcomps
fisubrl
fdivp
iret
cmp
aam
cmp
inc
or
add
xor
pop
jl
mov
roll
xchg
addr16
cmp
test
ud0
rcr
xor
or
insb
scas
and
lock
xor
pop
in
jno
ficompl
mov
or
mov
sti
js
xchg
pop
lods
jb
xchg
out
rclb
int
jnp
push
sbb
sub
enter
dec
xor
and
pminub
sbb
push
aam
pop
cmp
cmpsb
hlt
mov
add
es
addr16
and
addr16
shlb
add
sub
bound
lahf
dec
adc
add
in
push
pop
or
adc
xchg
mov
in
std
pop
bound
xor
mov
aaa
or
sahf
and
call
adc
leave
sub
out
pop
xchg
int
cs
stc
push
mov
loope
mov
inc
xor
xchg
in
dec
test
call
xchg
cli
push
ljmp
ds
mov
hlt
fwait
push
cltd
aad
and
sub
mov
mov
sti
mov
mov
arpl
loop
jle
mov
cmp
scas
scas
pushf
int
ljmp
cmp
sbb
scas
jbe
fmull
push
xchg
daa
loope
daa
loopne
jbe
pop
jp
push
or
inc
fwait
les
test
adc
icebp
test
push
cmpsl
aas
adc
movl
sti
fldenv
jbe
dec
mov
jnp
mov
sub
in
mov
loope
mov
stc
xor
rcr
jle
pop
out
mov
or
add
mov
mov
mov
sub
inc
jmp
jae
and
pop
xchg
jmp
mov
push
jl
sub
sub
and
add
jmp
inc
cmpsb
mov
mov
xorl
fs
cmp
jge
mov
lret
enter
jae
push
pop
adc
xchg
xchg
push
adc
push
pop
push
test
mulb
or
add
or
jg
cld
or
push
inc
push
mov
lahf
inc
lds
adc
and
addr16
lcall
fiadds
xchg
inc
leave
or
cmp
scas
add
xchg
mov
ffreep
add
or
pop
pop
arpl
sbb
inc
repz
in
fisubrs
and
push
repz
jbe
ss
pop
fadd
aaa
mov
pop
out
in
inc
fwait
dec
sbb
or
and
sub
notb
roll
out
cmp
or
scas
mov
std
xor
out
jno
inc
xchg
or
sti
add
dec
xor
pusha
sub
cli
lds
jns
sbb
push
jecxz
rcrl
push
push
push
test
mov
in
ljmp
or
movsl
mov
das
lahf
adc
push
arpl
out
dec
mov
and
add
sub
xchg
leave
adc
ja
mov
cmpsl
out
cwtl
pusha
push
and
adc
insl
sti
aam
jge
out
adc
inc
es
or
into
shrb
jle
inc
in
in
scas
fsubrl
xchg
inc
test
adc
in
xchg
jmp
mov
xor
movsb
je
addb
notb
inc
mov
gs
pop
fisubl
loop
xor
in
loopne
loop
dec
stos
jne
mov
fdivrp
jae
xchg
xor
push
push
xchg
push
ret
jo
mov
mov
pop
pop
lea
xchg
lods
int
xchg
ffree
in
aad
add
mov
sahf
push
ret
sbb
shrb
adc
mov
push
sbb
mov
outsl
push
inc
repz
repnz
add
lock
mov
add
jo,pn
adc
imul
stos
loopne
jl
or
mov
sub
or
sub
pop
adc
out
pop
cmp
add
dec
dec
adc
inc
jecxz,pt
jecxz
pop
mov
xchg
into
or
mov
xchg
fsubrl
or
cmp
arpl
xchg
imul
mov
ds
sbb
sti
and
mov
pop
push
hlt
mov
sub
inc
sahf
out
data16
adc
in
insl
push
jmp
insl
push
jo
cmpsb
lock
int
clc
ljmp
dec
xlat
jo
andb
inc
popa
cmp
cmp
xlat
mov
xchg
xlat
and
cmp
lods
or
out
loope
sarb
in
not
in
fsubrs
movsb
pushf
out
sub
cmp
cmpsb
or
sub
or
sub
clc
jmp
and
cmpsb
and
out
push
pop
insb
and
mov
cmpsl
fcmovnu
test
pusha
xor
psadbw
out
adcl
xchg
shlb
sbbb
push
jl
pop
add
jg
mov
cltd
mov
xchg
setns
pop
push
pop
mov
add
inc
gs
sbb
pop
sub
push
inc
movsb
mov
and
cld
sub
outsl
and
mov
cmp
push
push
aas
shl
cmc
ds
ss
mov
add
lret
in
in
push
loopne
xchg
andl
mov
pop
mov
ucomiss
push
loopne
out
xchg
sarl
in
sub
insb
insl
fnstenv
pop
adc
out
cmpsl
mov
push
movsb
xor
cli
jo
cmpsb
ffreep
sub
int3
nop
xchg
dec
testl
mul
leave
adc
insb
aaa
sub
into
dec
push
cmp
xor
aaa
jecxz
shlb
test
movl
inc
lea
ljmp
mov
mov
out
andb
mov
into
xor
mov
inc
push
jne
and
xor
push
and
push
pop
mov
dec
xchg
or
aad
inc
dec
outsb
xchg
cmp
jnp
iret
stos
and
and
js
ds
subb
mov
fsubp
cld
pop
add
xor
pop
mov
fs
mov
and
rcrl
ss
lret
inc
aam
inc
movsl
dec
clc
push
sti
out
enter
sub
push
rclb
dec
testl
jo
cli
fcmovne
xchg
rcll
outsl
or
mov
test
push
push
aaa
fisubrl
adc
mov
add
out
sub
xor
mov
lret
add
fadds
and
das
sub
mov
push
mov
andl
fmull
mov
lock
mov
xchg
int3
push
imulb
ljmp
dec
das
inc
jmp
push
fcmovnb
jl
and
fcmovnb
ret
dec
jo
jb
mov
mov
test
std
cs
jge
fst
daa
dec
pop
lock
fstps
cmp
mov
addps
gs
xchg
mov
imul
pop
test
push
lcall
inc
xchg
aad
roll
outsb
rol
ret
mov
lods
scas
sub
imul
mov
sub
pop
ds
mov
les
dec
cs
pop
xor
scas
or
mov
jb
or
scas
push
push
fistps
mov
jmp
in
push
cwtl
push
and
sbb
jae
or
inc
out
movsl
mulb
clc
mov
mov
add
ret
mov
inc
jl
add
add
push
in
push
push
test
popf
xor
mulb
dec
and
and
ret
xor
cwtl
xchg
push
out
movlps
sbb
or
hlt
in
jl
or
mov
cmp
lret
ljmp
mov
pop
add
jp
dec
shl
out
jge
inc
stc
popf
ret
popf
and
cltd
es
loop
in
cli
mov
bound
pop
mov
ljmp
cltd
ja
imul
push
jp
xor
mov
inc
scas
or
pushf
dec
nop
inc
push
popa
xor
movsb
xchg
dec
xchg
out
repz
add
push
mov
sub
jo
outsb
add
fcom
push
jo
adc
test
jbe
std
adc
gs
icebp
int3
hlt
loopne
cmp
arpl
and
push
leave
mov
xchg
jmp
sub
jb
out
gs
dec
xchg
lock
mov
sbb
in
jmp
pop
xchg
cmpxchg
adc
jno
repnz
mov
xor
insb
or
bound
xor
arpl
ds
arpl
stos
outsb
ret
sarb
cmpsl
inc
and
fcomps
rolb
addb
xchg
and
push
pushf
cmc
inc
js
lock
es
jns
jb
xchg
mov
aaa
imul
or
dec
popl
icebp
loope
aam
jbe
sti
push
or
out
mov
xchg
popf
fistpl
pop
sub
pop
inc
loopne
pusha
hlt
fmull
imul
add
out
xchg
insb
inc
out
rolb
dec
mov
and
shrl
mov
mov
or
sbb
add
out
cwtl
fwait
cmp
jno
dec
fimull
sarb
and
or
add
repz
cmpsb
insb
leave
pop
mov
loopne
add
das
imul
cmp
xlat
mov
lahf
dec
fldt
jne
add
pop
mov
imul
xchg
stc
lcall
mov
inc
in
mov
rorl
std
mov
in
pop
or
dec
enter
mov
push
and
loopne
sub
pop
mov
rcrb
xor
mov
out
fidivrs
iret
mov
dec
data16
adc
ds
xor
cltd
pop
lock
jl,pt
and
js
cli
jno
and
pop
pop
pop
mov
dec
jmp
lea
imul
out
popf
mov
push
sub
mov
lahf
rcll
bound
test
rcrl
inc
int
dec
mov
mov
lock
arpl
lret
loop
dec
ss
xorb
sub
or
das
data16
daa
fmuls
repnz
xchg
xor
add
pushf
inc
cmp
mov
sahf
int3
xchg
push
test
xchg
les
int
or
adc
add
cmp
cmp
push
jo
push
sti
hlt
cmp
scas
pop
ss
lret
push
sub
push
cwtl
aas
push
pop
jns
or
aaa
decb
add
inc
jb
inc
sbbb
dec
dec
push
lods
test
jmp
movsb
pop
xor
les
mov
stc
shlb
loopne
fisttps
iret
xor
pop
push
add
cmpsb
icebp
adc
xor
push
das
fs
sbb
sub
negl
pop
dec
jge
mov
lods
mov
test
mov
cmp
lock
ret
iret
push
pop
sti
lcall
aaa
push
nop
jns
mov
xchg
ljmp
mov
insl
or
xchg
scas
mov
mov
dec
lds
int3
jge
or
and
push
xor
mov
add
push
add
clc
mov
jbe
leave
jnp
xor
aad
test
jmp
sbb
dec
jmp
lods
movsw
cmpsb
xchg
pushf
movsb
mov
js
mov
mov
ret
push
fbstp
cmp
xchg
cmpsb
js
scas
dec
mov
xlat
sub
jb
stos
je
lods
movsb
mov
cmc
add
push
clc
sahf
dec
sbb
sub
test
outsl
lods
jb
fstpt
mov
lea
mov
or
repz
daa
decb
sbb
or
ss
fcmovb
xlat
and
fwait
push
test
push
ret
dec
dec
sbb
fnstenv
add
mov
xor
mov
jge
mov
in
xchg
xchg
xlat
aad
movsl
aad
mov
pushf
inc
shrb
sub
aas
push
movsl
lret
js
lret
lahf
cwtl
loopne
test
mov
out
xor
jae
fcmovnbe
cmp
movsl
cltd
adc
jns
jb
sub
stos
or
push
sub
add
in
xor
push
aad
cmc
out
rolb
sbb
inc
lock
mov
cwtl
push
jno
jae
pushf
mov
add
sbb
cmp
js
xlat
xor
or
mov
inc
sar
mov
push
mov
mov
stos
test
or
js
aas
jp
pop
in
arpl
sub
loop
sub
and
sbb
adc
popl
xor
mov
into
push
jb
stc
inc
rcll
ret
mov
push
out
xor
aad
mov
dec
inc
push
and
jmp
xchg
sti
sub
dec
in
pop
jle
enter
aad
xchg
in
cld
mov
push
out
jmp
adc
jo
mov
aad
mov
add
inc
je
jno
out
sbb
sbb
push
data16
mov
ss
jp
dec
jge
int3
lcall
fidivs
or
add
pusha
inc
jmp
or
lea
fiaddl
in
cli
sbb
movsl
and
inc
mov
flds
mov
int
lock
rolb
jae
les
inc
fnstcw
inc
or
aas
sbb
sub
mov
repz
in
xor
cmp
js
fnsave
sbb
test
sub
pop
pop
scas
lcall
mov
mov
jecxz
adc
addr16
pop
mov
mov
call
mov
stc
sbb
ja
push
dec
imul
fdivrl
cs
out
jmp
xlat
add
inc
or
insl
jnp
add
jae
bound
mov
mov
mov
push
out
push
mov
sbb
inc
movsl
sub
rorb
repnz
sbb
lcall
mov
in
inc
inc
iret
add
mov
push
enter
dec
cmp
out
xor
out
pop
into
mov
mov
mov
stos
inc
mov
xchg
frstor
rclb
or
mov
imul
cltd
dec
mov
data16
push
add
pop
mov
lret
xor
xchg
jl
int
pop
mov
or
mov
pop
movsl
jb
popf
test
sarb
sub
cwtl
and
scas
jge
call
notb
mov
and
insb
loop
negl
frstor
xchg
inc
ret
cltd
cmpsl
test
cmpsl
sahf
repz
lods
pushf
xchg
sbb
xor
sar
mov
inc
mov
ljmp
sub
pop
xchg
imul
push
loopne
sub
inc
pop
adc
cli
arpl
arpl
push
pop
js
sub
js
xchg
mov
rep
loope
rep
dec
stos
cmpsl
inc
imul
and
jae
out
gs
stc
jge
cmp
movsl
cmp
add
jo
mov
out
jmp
fimull
push
rcr
outsb
addl
out
adc
lcall
test
or
pop
jmp
or
xor
testl
mov
push
fldenv
stc
mov
adc
cmpsl
mov
jmp
std
cs
lods
imul
add
mov
inc
or
adc
ficomps
lds
mov
fmull
fsubrs
cli
adc
cmp
lods
or
lret
mov
mov
jnp
das
or
out
sbbb
pusha
es
clc
jno
mov
xchg
pop
rclb
inc
xor
xchg
int
lea
ret
vmovss
jno
movsb
cmp
adc
inc
cmp
jg
xorl
js
movsl
sub
and
lods
bt
xchg
sub
jo
addr16
xchg
pushf
cmp
imul
lea
in
adc
sti
sti
xor
pop
mov
pop
inc
mov
adc
jmp
push
bound
sub
jmp
inc
adc
sbb
push
loope
ficompl
rclb
pop
aad
mov
mov
push
push
into
lret
xor
stos
or
mov
pop
lods
mov
fdivs
inc
lods
test
movsb
xchg
cmp
int3
dec
push
inc
inc
data16
pop
dec
in
test
clts
mov
aaa
push
or
or
xchg
jne
xor
mov
push
mov
sbb
in
xor
loopne
push
jo
cltd
mov
pop
xlat
imul
ret
pop
imul
pop
xor
mov
fdivrl
inc
mov
inc
fwait
ret
pop
cwtl
andl
lods
and
int
arpl
rcll
pop
cmc
jns
adc
out
sub
add
mov
insl
cmp
stc
das
cmp
jge
pop
and
mov
sti
lret
in
cwtl
test
leave
das
in
out
pushf
jp
dec
cmp
add
sti
rcrb
sub
test
stos
xor
addr16
test
xchg
ror
xchg
aas
mov
popa
add
adc
pop
push
push
lret
das
cmp
jne
sbb
cltd
dec
mov
cli
xchg
cmpsb
fs
rol
notl
test
mov
lret
or
jo
lock
hlt
dec
in
ja
jbe
fwait
mov
fldt
aad
xor
pop
insl
cmp
aas
fstpl
inc
or
xchg
sbb
and
out
aas
mov
add
int3
xorl
jp
dec
repz
mov
divb
cmp
jno
cs
cli
dec
call
out
push
scas
jg
xchg
jge
jns
fidivs
sub
ja
testl
les
sub
les
add
push
inc
subb
push
xchg
push
cli
insl
xchg
out
notb
outsb
adc
dec
aad
xchg
leave
lcall
faddl
out
jmp
add
add
stos
jp
cmp
jno
xchg
daa
dec
mov
push
push
sbb
mov
mov
lods
ret
ret
mov
jp
into
mov
in
rclb
leave
inc
or
movsb
jns
pushf
call
pop
lods
mov
sbb
cmpsl
daa
inc
lock
mov
jp
lods
push
mov
out
mov
inc
and
in
sbb
and
cmc
cmp
repz
mov
mov
rorl
lds
push
les
and
pop
hlt
addr16
int
mov
std
das
sub
lret
jg
and
sbb
lods
sub
aas
aam
jno
in
out
adc
out
outsb
xor
and
mov
mov
jbe
das
repnz
add
adc
pop
inc
add
js
xlat
repnz
movb
repnz
mov
push
push
out
xchg
imul
adc
pop
cmp
sub
add
or
ja
sub
loop
sub
or
dec
fadds
stos
adc
xchg
lahf
sbb
xor
add
add
jp
inc
cld
push
repz
lret
ret
cmovns
xchg
shlb
jl
icebp
xchg
push
and
scas
int3
jne
test
push
xchg
pusha
cmp
cmp
xchg
xchg
out
cmp
add
lods
enter
push
inc
mov
push
push
mov
fildl
mov
aas
jb
out
frstor
pop
xchg
ds
cld
test
dec
push
cmpsb
cli
std
cmp
and
and
lret
insb
sbb
xor
call
jmp
push
shlb
aam
enter
push
xchg
push
and
insl
data16
shr
push
aam
and
ror
mov
int
push
add
push
xor
test
cmp
mov
test
ret
xor
lret
xor
mov
cltd
inc
push
adc
push
sbb
fldenv
test
pop
lahf
daa
dec
sub
hlt
fildll
pop
scas
fnsave
stos
and
call
and
xchg
andl
lds
cmp
popf
pop
icebp
icebp
pop
adc
push
cmpsl
add
mov
js
inc
mov
sarb
cmp
sub
rorl
icebp
jg
iret
adc
or
mov
dec
ja
mov
ja
and
pop
mov
lock
lock
add
inc
jo
aad
aas
xor
push
push
mov
mov
outsb
xor
push
repnz
jl
in
dec
lea
pushf
dec
movsl
dec
mov
lcall
xchg
dec
scas
and
and
lahf
push
sub
jns
popa
jg
mov
pushf
mov
cmp
in
pop
dec
iret
adc
arpl
mov
div
dec
stos
push
mov
daa
mov
inc
mov
mov
lods
pandn
lret
xchg
ljmp
and
ss
pushw
idivb
jecxz
cltd
and
push
lahf
andl
fcoms
jecxz
xchg
and
iret
inc
rorl
inc
aad
movsb
xchg
jnp
push
mov
jno
aaa
mov
dec
mov
les
pushl
cmp
add
nop
jns
std
mov
inc
dec
out
call
lods
cmp
les
pop
mov
ljmp
ds
xor
jle
xorb
or
lock
mov
outsb
pop
lea
insl
push
sub
mov
jmp
testb
mov
leave
fwait
cmp
or
stos
cmpsl
ret
das
rcll
cmc
adc
and
mov
cmp
ds
dec
or
in
mov
imulb
xor
adc
sahf
lea
xor
adc
test
mov
test
cmp
sub
pusha
ror
loop
cmpps
std
vstmxcsr
pop
or
push
test
inc
loop
mov
and
mov
scas
aaa
loopne
xchg
scas
imul
mov
and
or
ss
xor
pop
out
mov
mov
ret
add
and
add
jle
iret
test
xlat
xchg
andl
lock
cmp
jnp
pop
push
lret
xchg
das
cltd
jbe
dec
or
clc
mov
jle
jge
adc
ja
pop
js
sub
lahf
lock
xchg
or
imul
jge
sbb
in
push
scas
in
in
int3
jmp
push
rcrb
jge
or
xorl
popl
bound
movb
imul
sub
dec
pop
das
push
mov
pop
sub
das
scas
data16
ror
push
pop
pop
add
loope
repz
add
xor
adc
in
outsl
or
bound
out
movsl
cld
es
pushf
cs
icebp
sbb
adc
lods
adc
and
add
test
cmp
bnd
in
adc
out
hlt
insl
mov
and
rcll
insl
movsl
mov
pop
scas
sbb
cmp
fistpll
inc
inc
jge
scas
sti
jno
or
aas
pusha
pop
sbbb
pop
pop
pop
outsb
les
cmpsb
pop
add
pop
jg
push
pop
or
push
lret
push
mov
pushf
icebp
pop
imul
sarb
push
enter
mov
pop
xchg
mov
sti
imul
lods
scas
out
addr16
test
mov
sbb
dec
stos
jne
add
scas
lret
jp
xlat
xchg
rclb
mov
xor
lea
sahf
push
popa
jecxz
sbb
addr16
ret
inc
icebp
adc
sbb
xchg
test
test
and
xor
mov
mov
sarb
cmpxchg
filds
xor
loopne
out
add
cmp
mov
sbb
nop
xchg
push
sarb
setg
mov
test
pop
push
shrb
dec
in
mov
pop
sti
add
push
push
daa
xor
sbb
nop
add
int3
push
add
push
ficoms
xchg
bound
jle
lret
out
pusha
pop
aaa
jmp
cs
and
inc
mov
stos
sub
lds
sub
fcmovnu
mov
xlat
jmp
lcall
cmp
mov
cwtl
fcoms
aaa
cmpsb
xor
xchg
fwait
sbb
aam
jmp
jae
push
cli
pop
dec
sbb
mov
adc
xchg
dec
arpl
jne
mov
int3
jge
add
addr16
jae
repz
push
mov
pop
lahf
ja
sub
cmpsl
cmpsb
and
add
xor
and
mov
push
popf
dec
insl
loope
rcrl
mov
inc
pop
xchg
aaa
lahf
dec
scas
mov
fimull
xchg
movsb
xor
adc
mov
mov
adc
sub
pop
jne
jne
pop
fists
mov
jle
aas
in
jecxz
jg
xchg
iret
out
xchg
je
dec
out
jmp
int3
lahf
in
push
push
sbb
out
fbld
jmp
inc
sbb
jp
xlat
cld
push
repz
mov
mov
mov
fidivrl
xor
rcr
jecxz
mov
mov
jecxz
mov
add
lahf
ret
cmp
xchg
rorb
pop
pop
mov
mov
xchg
mov
or
xor
lcall
ret
repnz
mov
cmp
enter
fs
cli
arpl
cmp
enter
popa
jl
sub
pop
xchg
push
jae
dec
shll
xor
mov
mov
jl
ds
gs
ret
cmp
cmc
adc
inc
popf
outsb
loope
mov
and
shrb
push
rcrb
mov
cmpb
out
popa
repz
inc
cmp
cmpsb
pushf
sti
inc
xchg
pop
cmpsl
pop
jp,pn
sbb
loope
divb
fildl
inc
sub
xchg
rorb
roll
pop
in
jnp
mov
std
pushf
pusha
leave
gs
xchg
call
mov
xchg
push
adc
jb
jmp
mov
xchg
xchg
mov
outsl
jg
fbld
daa
inc
lret
cld
inc
call
mov
jo
outsl
fbld
std
xchg
xlat
int3
mov
mov
adc
mov
cmp
xchg
out
mov
out
xor
add
bound
jg
mov
mov
jle
movsl
mov
lods
mov
pop
sbb
cmpsl
js
pop
iret
and
xchg
lahf
cmc
outsb
scas
sbb
bound
aad
sub
sub
sbb
sbb
mov
and
cltd
dec
into
lret
jl
roll
ret
and
es
sub
sub
loopne
lret
mov
mov
or
pop
in
or
adc
push
daa
add
das
ret
ljmp
sbb
jge
jle
outsl
cmp
cmp
fimull
xchg
stos
add
mov
dec
sub
xchg
sub
lds
add
mov
push
cmp
daa
jle
jl
dec
cmp
jo
into
enter
mov
andl
outsl
psrlq
push
xor
and
mov
adc
dec
popf
xchg
jle
push
in
es
es
xchg
arpl
mov
push
sbb
push
mov
and
sub
test
ja
rcrl
jne
xchg
dec
inc
sub
ficompl
sub
aaa
loop
xor
jb
movsb
insb
fcompl
not
xlat
mov
sub
mov
push
lds
xchg
int3
push
dec
push
lods
xlat
les
stc
mov
fsubl
dec
xchg
mov
out
mov
jmp
fnsave
ret
pusha
xorb
inc
iret
punpckhbw
xlat
cmp
cmc
jecxz
and
adc
and
jl
add
loop
mov
out
rol
push
cs
jge
aad
pop
pop
arpl
cld
shlb
sbb
adc
xor
push
sar
in
and
fscale
popa
pop
leave
mov
mov
les
loope
jb
hlt
test
pop
aad
xchg
sub
jg
scas
ret
jns
dec
pop
repz
test
pop
lea
xor
add
nop
push
cmp
push
pop
out
jns
shll
pop
sub
xchg
enter
clc
inc
pop
dec
dec
es
push
stc
nop
push
push
imul
and
hlt
sub
dec
cli
rorl
jmp
cmp
ret
add
es
inc
dec
lret
nop
cmp
pusha
jle
mov
push
movsl
out
lea
cmp
mov
mov
jl
jecxz
out
and
fisubl
iret
jmp
add
aaa
icebp
push
stos
push
gs
loope
scas
or
faddl
repnz
out
xchg
movsl
sbb
enter
fs
sub
loop
gs
loopne
xchg
das
lret
mov
insl
arpl
lea
and
push
sbb
sbbl
nop
pop
mov
inc
push
pop
popf
push
test
dec
push
aaa
scas
sub
push
popf
cmp
mov
dec
mov
ss
outsl
sbb
adc
inc
call
andb
xor
mov
fistpl
adc
lcall
lret
fbld
mov
shrb
adc
mov
outsb
jge
sub
xchg
iret
rol
xchg
sbb
xchg
getsec
xchg
aas
inc
fildll
test
leave
movsb
insb
xchg
cmpsl
rcl
mov
sti
mov
jb
adc
dec
loop
jp
push
das
insl
mov
js
repnz
int3
push
std
aad
pop
fucom
mov
pop
cmpsb
aas
incb
dec
sti
pop
sbb
enter
sbb
push
push
out
in
nop
rcll
ss
pop
lret
xor
mov
fs
loop
mov
out
fnsave
ret
popa
movb
rorl
mov
pop
xlat
jns
push
push
cli
xlat
add
push
pushl
cmpl
dec
stos
stos
imul
pushf
mov
push
fs
sub
mov
leave
roll
scas
xchg
repnz
sbbl
in
cmp
ficoml
stc
xor
outsl
push
ret
popa
inc
bnd
sub
mov
jb
pop
out
bound
pop
js
and
stos
ror
cmc
pop
test
les
idivb
sub
lahf
aas
popa
mov
rcrl
add
imul
outsb
pushf
out
inc
or
and
xchg
shl
outsb
add
xchg
js
lret
and
test
sar
xor
jle
adc
or
add
push
adcb
unpcklps
jge
xchg
inc
add
sti
sub
scas
lahf
dec
cli
sarb
sti
lcall
loope
xor
popa
movsl
fstps
push
xor
test
jle
and
mov
inc
bound
add
pop
aam
movsl
and
int3
addr16
lock
out
jb
adc
test
jle
adc
pop
pop
inc
testb
inc
dec
pushf
jb
xor
sub
mov
inc
and
pop
mov
pop
and
mov
push
and
and
lahf
out
xchg
aaa
mov
ljmp
jmp
jl,pn
sbb
jns
int3
jge
and
roll
insb
bound
jb
sbb
hlt
xchg
jl
add
test
mov
xchg
ss
xadd
push
mov
or
mov
pop
push
clc
mov
inc
adc
movsb
mov
push
dec
pop
scas
xchg
stc
or
int
test
pop
fcompl
ja
out
ret
jb
sbb
lahf
push
repz
xchg
in
arpl
add
push
cmp
mov
test
jns
mov
dec
jle
fs
push
or
test
xor
pop
mov
jmp
std
mov
dec
leave
inc
lds
into
xchg
push
stos
or
sahf
mov
inc
cmpsl
fisttps
mov
sub
or
or
mov
cmpsb
rorl
mov
cmp
aad
cmp
loopne
roll
add
push
push
mov
std
fwait
repz
fstpt
out
movb
mov
es
loopne
mov
aad
mov
push
leave
in
push
mov
and
ss
cmp
jne
lods
out
xor
sub
xchg
pop
dec
aaa
je
mov
iret
inc
jo
and
or
lods
jbe
mov
xlat
and
jmp
inc
push
push
pop
imulb
movsl
mov
stos
jno
jno
out
call
into
fwait
and
scas
fdivl
xor
sti
xor
and
jmp
sarb
add
loope
cmp
adc
adc
sub
fwait
aas
sbb
aaa
movsl
sub
xchg
outsl
mov
popa
test
cli
push
arpl
cmpsl
gs
mov
jno
fsubr
inc
mov
sbb
testl
mov
jle
outsl
lcall
fsts
and
std
sbb
test
push
jge
repz
bound
sahf
or
clc
pushl
inc
pop
and
imul
xor
mov
shll
dec
or
mov
pop
sbb
inc
sbb
pop
sub
or
fnstenv
cmc
add
dec
cmovne
stos
push
pop
scas
int
sbb
adc
dec
mov
push
inc
icebp
or
mov
aad
bound
lods
mov
data16
mov
out
bnd
xchg
pop
lret
shlb
sbb
fwait
inc
imul
sbb
cld
cmc
inc
lahf
fs
pop
and
std
adcb
fcomp
popa
mov
ja
ret
adc
test
push
les
aaa
decb
aaa
sbbl
es
movsl
orb
clc
or
or
int3
clc
and
cwtl
mov
sub
outsb
fadds
and
popf
lods
cmp
dec
mov
add
in
pop
aas
inc
aad
outsb
jne
dec
cld
add
cld
mov
ret
dec
mov
mov
sub
push
inc
setns
inc
add
insb
seto
mov
sub
cmp
pop
mov
lahf
jo
lret
lea
repnz
les
xor
jb
arpl
pop
xor
lods
jg
push
add
cmc
jg
xchg
nop
mov
dec
add
pop
mov
sub
out
push
push
dec
sarb
out
xchg
repz
push
cmpsb
lods
arpl
sub
sbb
or
mov
or
nop
addr16
ja
outsl
aas
push
mov
dec
out
xlat
rcr
add
lcall
int
push
adc
pop
or
cmp
fsubr
sbb
cmpsl
cmpsb
push
adc
dec
cmc
sbb
sbb
jns
jbe
gs
imul
push
imul
dec
add
xor
mov
jl
adc
dec
mov
clc
fstl
insl
jp
dec
and
mov
je
jne
scas
push
and
mov
inc
push
push
sti
rcll
mov
xor
out
clc
cmp
push
test
fnstenv
shlb
or
mov
pushf
lcall
lds
xorl
mov
adc
stos
scas
cwtl
shlb
cmpsl
dec
or
and
sbb
getsec
pop
lahf
aam
cmp
cmp
mov
dec
sahf
sub
mov
scas
negb
cmp
cli
test
outsb
fstl
jg
pop
mov
mov
aas
pop
fbstp
enter
adc
pop
add
sti
or
pop
jb
or
or
inc
adc
inc
dec
adc
inc
sahf
jo
pop
pop
arpl
fmuls
xor
bound
sahf
mov
lahf
out
sti
mov
leave
bound
das
jo
pop
imul
arpl
stos
shll
add
cwtl
push
out
add
push
cmp
sub
sbb
fs
add
loopne
push
ficoml
or
ror
fisttpll
pop
dec
jle
rorl
and
mov
mov
repz
jae
dec
sub
push
aaa
pop
pop
data16
rorl
inc
mov
std
mov
cmp
jge
and
aas
cwtl
jmp
stos
sub
sbb
push
lods
loop
jne
jl
es
pop
inc
sub
ljmp
push
in
fistps
mov
mov
adc
pop
lock
jne
ds
sti
mov
lds
loopne
call
lods
ret
subb
pop
fxch
std
orb
cmc
test
sub
mov
cmpl
sub
pushf
xchg
rcrl
inc
out
into
or
aam
call
shll
xor
inc
popf
imull
sub
push
or
fcomps
call
add
adc
cld
inc
push
xor
es
scas
loop
pop
aam
stc
roll
pop
inc
int
mov
mov
das
mov
lock
mov
iret
jns
push
sbb
fsubrl
jne
cmp
stos
adc
sbb
mov
push
xchg
out
mov
xchg
jo
and
out
cli
in
xchg
mov
or
popf
jl
aam
push
mov
repz
fldl
fprem1
divl
mov
lea
inc
mov
mov
icebp
sub
xchg
inc
stos
into
out
popf
sub
cld
sub
pop
call
cmpsb
lock
jl
mov
mov
cmp
inc
xchg
jae
sahf
into
out
daa
rolb
add
jnp
cmp
xchg
xor
jle
push
loope
adc
adc
jb
in
mov
mov
or
pop
push
int
movsb
mov
test
or
je
outsl
pusha
fmul
call
scas
repnz
mov
and
push
incb
dec
rcrb
dec
pop
repz
scas
ret
dec
mov
cltd
cmp
and
add
cmpl
loope
add
push
fiadds
call
push
loopne
iret
into
sub
lret
sahf
movsb
fs
in
pusha
push
sbb
call
jecxz
lahf
outsb
inc
mov
ret
lcall
int
addr16
cmpsb
in
fldcw
mov
iret
sbb
setnp
stos
jle
insl
cmp
clc
shlb
sub
add
cmp
std
repnz
xchg
push
packsswb
loop
jnp
lock
adc
mov
addl
add
jecxz
add
data16
push
dec
shlb
imul
lock
add
dec
jae
mov
scas
data16
pop
jmp
lock
test
outsl
push
sbb
and
mov
rcrb
add
sbb
out
add
mov
das
dec
and
and
movswl
data16
and
ja
aas
out
cmp
xchg
sahf
xorb
out
negl
rcrb
scas
mov
dec
fistl
insb
push
pop
ret
or
lods
inc
cli
roll
adc
add
pop
repnz
mov
clc
dec
in
popf
cmpsl
sbb
cmp
mov
sub
dec
dec
bound
shrb
dec
rorl
and
ja
loopne
push
push
fwait
rorb
out
mov
sbb
arpl
add
ja
fnsave
out
lods
push
sub
xor
fistpll
sbb
les
mov
xlat
inc
movsl
mov
pop
push
bound
sbb
xchg
popf
fdivp
scas
or
leave
ljmp
stc
mov
addr16
jo
test
hlt
jo
sbb
and
push
sbb
mov
daa
shlb
inc
pop
xor
cmpsb
jbe
fsubrs
fdivrl
inc
aas
out
lea
or
mov
add
push
sub
sbb
mov
je
movsb
jb
out
rolb
mov
std
push
and
sbb
les
hlt
sti
adc
arpl
cwtl
dec
push
inc
out
cld
lret
xchg
fldlg2
mov
ds
mov
xor
pop
pusha
clc
push
js
push
jp
push
testl
in
sub
ljmp
cmp
mov
inc
scas
jns
fisttpll
pop
fsubrs
insl
ret
adc
test
mov
popa
ret
push
mov
mov
push
stos
stc
pusha
xlat
dec
lret
fucomi
jbe
dec
dec
push
cmpsl
lock
imul
inc
xchg
out
pop
cli
push
sahf
scas
sbb
xlat
pop
jbe
or
push
ljmp
jle
mov
xor
faddl
neg
and
icebp
or
fisubs
movsb
sbb
jno
int3
adc
ficoms
and
lds
iret
out
push
adc
push
adc
lods
adc
push
fs
xor
mov
xchg
add
aam
in
adc
cmp
loopne
pop
fwait
out
adc
cmp
sbb
int
sti
out
sbb
cmc
add
out
arpl
add
xor
push
mov
and
push
aad
imul
aaa
cmc
test
push
push
inc
je
fwait
jle
fsubrs
out
cmp
outsl
push
mov
rcrb
test
xchg
dec
xchg
cmp
push
mov
add
fdivl
in
mov
out
sbb
jnp
nop
pop
test
fistpl
out
push
in
fiaddl
pop
inc
mov
add
mov
bound
test
jge
inc
out
xlat
inc
adc
scas
pushf
es
leave
mov
mov
scas
popf
addl
add
test
mov
dec
jge
push
mov
test
mov
pop
xchg
mov
cmp
les
movsl
scas
lcall
mov
pop
dec
push
xchg
xchg
orl
cmpsb
push
jns
add
add
jnp
mov
lods
pop
or
mov
mov
pop
jp
sbb
sbb
fsubs
cmp
mov
aad
shll
ljmp
jge
lea
jne
aam
adc
lcall
adc
and
jns
ja
mov
cmc
dec
xor
jb
push
mov
dec
xchg
dec
jbe
or
xchg
cmpsl
add
push
mov
mov
jp
loopne
push
inc
addr16
arpl
lcall
movsb
fsubrs
leave
mov
sbb
loop
dec
ret
leave
pop
mov
lcall
xchg
jnp
mov
lret
sub
push
add
xor
dec
mov
inc
push
insl
aaa
aas
push
mov
jns
pop
imul
push
xchg
in
xchg
ss
cmpb
inc
popa
mov
xchg
mov
les
or
mov
scas
adc
decb
insb
add
lock
cmpsl
and
xchg
pop
mov
push
data16
cmpb
movsb
and
rclb
stc
adc
test
in
mov
shll
mov
dec
sub
and
adc
fisttps
jns
mov
mov
and
test
stc
sbb
sbb
push
repz
adc
cmp
shrl
jns
pop
dec
add
sbb
push
lcall
jmp
sub
mov
inc
repz
bswap
daa
aam
dec
test
sbbb
sub
jmp
ds
or
push
es
or
cld
inc
lock
hlt
mov
or
add
adcl
xor
adc
mov
cmp
fistpl
or
lcall
adc
adc
mov
dec
mov
bound
and
xchg
inc
das
jmp
and
stc
add
adc
scas
add
imul
shr
je
xor
push
call
or
push
cmp
jne
pop
inc
shrl
pop
push
add
dec
lods
fwait
and
movsl
sbb
pop
and
jb
cwtl
mov
sti
mov
jno
push
dec
push
scas
jne
dec
lods
pop
cltd
jp
mov
mov
aam
jne
je
sbb
rcll
xlat
pushl
jle
rcrl
mov
dec
cltd
jbe
adc
dec
mov
dec
rcrb
daa
mov
sti
xor
jmp
cld
push
ja
pop
jecxz
mov
or
or
in
iret
adc
iret
or
sti
loope
pop
aad
add
stc
test
dec
jb
loop
shl
sub
mov
cmpl
inc
lods
jne
push
or
rcrb
pushf
mov
out
xchg
mov
test
sub
out
inc
push
adc
add
push
or
rorl
leave
clc
add
out
shlb
leave
mov
ja
and
nop
xchg
pop
les
ret
movsb
aaa
jns
add
mov
sbb
aaa
int
jne
outsl
add
mov
inc
pop
mov
cmpsb
mov
push
xchg
mov
push
in
outsl
cld
fs
addr16
and
dec
mov
and
fstpl
and
psubd
fsubl
mov
sbb
stc
mov
dec
xor
sub
mov
xchg
or
sahf
insb
lret
sahf
lods
movsl
aaa
mov
and
loop
pop
xchg
aas
mov
sub
and
adc
jmp
std
jbe
ljmp
adc
rolb
fs
pop
cli
push
or
ja
stc
mov
push
pop
int
xor
adc
adc
aad
cmp
jbe
push
lahf
mov
loope
jecxz
and
or
cltd
stc
in
leave
mov
call
in
test
test
xchg
leave
adcl
iret
jb
sahf
out
cld
dec
mov
movsl
mov
dec
xchg
repnz
xchg
mov
pop
jmp
dec
out
cmpsb
stc
pop
scas
gs
out
sbb
mov
add
jmp
mov
cmpsb
push
iret
mov
mov
shl
inc
dec
push
aad
fsubr
push
and
sbb
out
loope
repnz
pop
imul
or
dec
je,pn
mov
xchg
bnd
pop
xchg
in
inc
lods
inc
sbb
and
pop
pushf
in
ds
dec
shll
and
adc
mov
shr
les
nop
sbb
cli
icebp
cli
mov
ficompl
int3
mul
sbb
lods
ljmp
add
jge
and
mull
mov
nop
mov
aas
repz
mov
jb
test
push
repz
jne
push
jle
xchg
rol
fidivs
and
in
or
jnp
mov
divl
test
xor
sub
xchg
pop
mov
jnp
mov
test
mull
push
pop
pop
shll
jne
xor
dec
mov
and
add
inc
popw
jle
out
adc
sub
lods
vcvtpd2dqx
mov
mov
jl
pop
cmp
test
xchg
in
mov
or
ret
mov
fldenv
mov
ss
dec
jo
andb
push
xchg
lds
int
ja
jmp
xor
push
xor
pop
adc
lcall
clc
dec
test
cltd
cmp
faddl
pop
jg
repnz
mov
cmpsb
pusha
or
es
cmpsb
insl
jae
shll
out
call
rolb
data16
mov
dec
mov
pop
sbb
mov
les
fyl2xp1
xor
jbe
fs
and
push
push
push
popa
push
mov
test
int
jecxz
dec
pop
enter
andb
dec
out
sub
out
loope
stos
stos
or
dec
pop
jno
fucom
sbb
insb
xor
seta
bound
lods
jne
push
mov
sub
addl
jns
cmpsb
pop
or
in
inc
mov
loop
enter
insb
jg
xor
test
dec
dec
cmp
add
aad
push
rorb
sub
sarb
ret
or
jns
pop
jo
pop
test
in
cld
mov
insb
scas
xor
and
int
or
inc
call
dec
mov
scas
lret
ror
pop
and
add
pusha
in
dec
xor
jecxz
daa
jo
in
cmp
je
sbb
fdivrs
iret
sub
adc
cld
or
dec
add
lock
fbstp
jp
jp
mov
mov
loopne
movsl
bound
aaa
xor
orb
scas
pop
push
shll
ljmp
pop
add
or
daa
adc
inc
imul
xchg
add
insl
repz
add
mov
negb
pop
sub
dec
cld
cmp
add
add
ss
mov
inc
stos
rcl
xchg
sub
sbb
arpl
mov
lcall
addl
mov
aas
arpl
ljmp
fs
jbe
push
mov
pop
lods
sahf
dec
cmc
ret
jecxz
jmp
jge
jne
mov
push
sub
push
nop
call
inc
xchg
scas
sbb
adc
and
push
sub
push
es
cmpsb
cwtl
movsl
inc
adc
jo
into
mov
fdivrl
pop
adc
cltd
jecxz
adc
and
jge
pop
testb
inc
cmc
popa
stc
mov
in
cmc
testb
addb
fcmovnb
push
adc
repnz
test
lcall
xchg
ret
cmp
inc
pop
mov
cmc
push
leave
movsl
idivb
icebp
icebp
pushf
in
into
fidivs
dec
int3
xor
push
in
inc
inc
xor
les
inc
rcrb
xchg
inc
and
nop
or
and
mov
cli
lods
push
arpl
sub
mov
test
sarl
jbe
push
mov
out
and
pop
inc
lds
fadds
cwtl
mov
cltd
fildll
inc
cmp
ret
leave
sub
xor
mov
rcl
push
and
pop
push
mov
xor
cmp
ljmp
out
test
mov
cmp
jae
and
dec
arpl
popa
imul
into
sbb
rcrb
dec
push
and
popf
cmp
aad
xchg
mov
adc
dec
xor
xchg
test
dec
or
or
jg
mov
cmp
pop
mov
or
jno
lahf
inc
mov
shrl
and
inc
mov
adc
cmp
mov
jb
push
rolb
sub
sbb
add
cmp
shl
jnp
dec
mov
adc
aaa
popf
pop
cmp
inc
cmp
adcb
in
aad
out
and
jecxz
pusha
push
fcomi
sbb
add
jae
inc
and
cltd
mov
in
lock
adc
rclb
movsl
sub
mov
push
imul
ror
mov
xchg
ljmp
push
mov
lods
jnp
xor
js
sbbl
cmp
ljmp
mov
cmpsb
ss
sbb
sbb
mov
add
cmp
addr16
lds
mov
int
cmpsl
test
jg
ret
push
jb
dec
aas
add
push
fildl
sbb
outsl
nop
adc
scas
adc
data16
adc
cmp
or
decl
notl
adc
into
mov
test
push
leave
daa
pop
out
das
addb
filds
pop
bnd
jae
mov
arpl
pop
cwtl
inc
aas
xchg
imul
or
sbb
ret
and
pushf
std
jl
jl
adc
clc
jbe
cld
xor
cwtl
cmpsb
pop
push
insb
fcmovu
movsb
push
mov
and
shlb
rcll
mov
test
adc
sbb
jnp
jae
ret
repnz
jae
pop
cmpl
jbe
je
push
xchg
or
lea
sbb
lret
movsb
filds
lods
cmc
ret
in
push
lcall
fisubrs
push
sar
or
subb
mov
jmp
sahf
dec
sub
mov
movsb
sti
in
rcrb
shl
cmp
pop
pop
test
cmp
ljmp
cmc
jg
fwait
inc
sbb
loope
fldt
sbb
div
cmp
sub
lcall
push
lret
and
sub
dec
rcrl
ds
jb
mov
mov
pusha
pop
jae
push
inc
out
pop
imul
test
jo
sbb
sbb
xlat
mov
lea
insb
and
sub
je
arpl
and
and
and
rcr
add
aaa
xor
cltd
sbb
sub
push
test
aad
xor
sbb
xchg
jno
shll
mov
mov
mov
dec
mov
jecxz
dec
in
or
xlat
inc
sub
mov
pop
dec
imul
fs
dec
ss
lods
adc
addr16
xor
mov
in
hlt
lcall
or
and
aas
mov
test
cmc
fs
js
push
mov
xchg
adc
mov
inc
out
fwait
push
mov
fsubl
aam
dec
es
jecxz
sub
jbe
imul
sti
imul
push
fstpt
or
xor
cmp
jb
lods
fstps
xchg
mov
jns
add
lods
in
cld
jne
loopne
fnsave
add
push
inc
push
stos
mov
sub
xor
xor
idiv
mov
pop
push
mov
dec
adc
popl
aad
sti
in
test
and
lds
mov
mov
lahf
popf
jno
push
mov
test
or
push
aas
or
adc
cmp
fdecstp
pop
arpl
mov
pusha
nop
icebp
sub
clc
scas
bound
lret
into
push
dec
in
outsl
pushf
adc
lds
sbb
sub
cmpsl
into
adc
test
push
ret
xlat
cmp
in
cmp
leave
test
inc
push
xor
mov
insl
mov
aas
mov
jge
pop
call
mov
sub
ljmp
mov
sbb
or
and
add
repnz
adcl
ficomps
sbb
mov
jge
jo
ds
cs
mov
mov
out
push
shll
mov
push
mov
pusha
pop
or
jle
inc
cltd
daa
enter
fadds
pop
mov
mov
nop
and
cwtl
inc
out
fstpt
sahf
nop
push
scas
sub
push
scas
daa
outsl
add
mov
add
jne
jecxz
push
in
in
lock
inc
mov
mov
lcall
jmp
cmpsb
xchg
movsb
xchg
dec
mov
jns
add
pop
mov
sub
ds
outsb
cmp
mov
lods
insl
nop
cmpsb
out
dec
lods
imul
iret
pushf
sti
mov
mov
test
inc
ds
jp
lea
xorl
cwtl
cmp
aad
lret
fidivl
outsl
fstpt
push
ret
jne
in
pop
inc
hlt
add
mov
fs
icebp
in
jbe
ds
add
loop
jbe
jge
aaa
xor
mov
jb
es
mov
mov
fxch
mov
pop
cmc
dec
pushf
adc
jns
clc
cmpl
repnz
jl
cld
and
in
popf
sbb
les
mov
xor
lock
insl
pop
imul
xor
sbb
lds
enter
stos
shlb
shl
stc
jecxz
adc
call
push
inc
dec
aam
dec
mov
and
add
test
xchg
mov
dec
nop
pop
mul
sbb
push
call
jg
or
addb
sti
adc
mov
jb
outsb
stos
ror
addr16
xor
jmp
mov
mov
ficoms
int
das
jns
xchg
in
dec
loopne
jle
daa
sbb
popf
xor
xchg
push
dec
sbb
int
mov
cmova
int3
push
in
loopne
sub
lods
pop
scas
xchg
jns
jno
cmc
cmp
vmovntpd
mov
lret
mov
adc
jg
fs
iret
lret
lcall
and
push
inc
fs
lods
stos
notl
push
ss
rorl
xor
mov
push
mov
in
jp
and
cmp
mov
mov
lods
loope
call
gs
popf
lods
mov
adc
xchg
cmpsl
jno
pop
mov
in
cmp
cmp
repz
bound
insb
push
ficoml
push
movsl
sbb
ret
jmp
add
sub
xor
add
inc
daa
jns
inc
jle
subl
call
push
imul
jne
fmuls
movsb
or
cmpsl
cmpb
push
adc
mov
das
lahf
sbb
cld
or
stos
jo
mov
test
sbb
lret
mov
dec
ja
mov
adc
xchg
enter
ds
push
jge
cwtl
mov
cmpsb
mov
add
and
inc
xor
cmpsb
js
out
jns
bound
in
push
add
xchg
jno
cld
rorl
dec
aas
pop
cltd
fbstp
jmp
maxps
jnp
mov
iret
mov
adc
movsl
cmp
popa
cmp
nop
loope
mov
jns
ss
xor
mov
fdivrl
sarb
xor
mov
cmp
shll
push
push
mov
fildll
push
jmp
mov
add
test
fs
loop
fs
scas
dec
ljmp
lds
mov
clc
push
xchg
cltd
fcmovnbe
dec
outsb
and
insl
dec
sub
sbb
mov
bound
iret
test
cli
mov
inc
fucom
mov
mov
lods
or
xchg
iret
ljmp
pushf
and
xchg
ja
jmp
mov
idivl
and
xor
xchg
test
pop
rcrb
push
push
cld
add
add
sub
int
fmul
inc
push
ret
jnp
xorl
sbb
fcmovnbe
imul
aam
mov
push
mov
cli
fcoms
and
out
test
lea
mov
mov
addr16
cld
cld
int
stos
jge
nop
push
fdivl
or
dec
adc
cwtl
rcrl
add
addr16
sub
int3
dec
enter
movsl
push
xor
jne
mov
mov
in
inc
mov
jge
push
cmpsl
and
add
lcall
adc
sbb
rolb
and
in
pop
mov
inc
pop
jns
mov
stos
data16
cmpsl
inc
xlat
pop
jl
dec
aas
xor
aas
push
jb
adc
cmp
inc
cmp
daa
orb
mov
mov
mov
or
in
mov
push
stos
in
adc
ret
add
xchg
dec
sbb
mov
push
push
dec
cmc
adc
dec
xchg
mov
in
add
daa
xor
sbb
xchg
addr16
jnp
orb
cmc
pushf
iret
fwait
jle
inc
or
lahf
mov
adcb
cli
test
mov
mov
shll
and
mov
insb
sbb
mov
inc
jp
aaa
mov
adc
ds
nop
mov
adcb
enter
mov
lcall
je,pt
mov
mov
mov
stos
std
or
jp
add
fcomp
add
icebp
cmp
mov
loope
lds
add
and
fwait
mov
das
cwtl
jge
sbb
lret
or
xchg
adc
outsl
stos
aam
mov
aaa
fnstenv
pop
inc
push
dec
enter
push
adc
scas
dec
orb
lret
inc
xor
loope
sub
jb
call
xor
outsb
push
ss
dec
xor
imul
mov
mov
push
push
icebp
into
lahf
test
paddq
scas
mov
add
or
add
xor
push
repnz
adc
adc
pop
jne
int
fs
or
leave
ret
pop
int3
in
lods
push
push
sahf
fldt
or
xor
cmpsl
or
inc
xchg
fcompl
psrlq
mov
jae
add
dec
cmp
jno
addl
es
sbb
lock
xchg
xchg
push
pop
mov
dec
push
mul
enter
fwait
inc
in
imul
stos
cmp
sti
data16
incb
daa
jge
sbb
lods
ja
out
or
mov
adc
pop
cmpsl
pop
in
mov
jo
lods
loopne
xchg
loopne
stos
jecxz
sub
cmp
cmp
repz
test
mov
aad
mov
daa
pop
jl
mov
push
loopne
scas
jbe
outsl
subb
dec
mov
xor
popf
sub
lock
fsub
shr
xchg
jbe
in
cltd
xchg
repz
adcb
aas
das
lods
imul
pop
cmp
aaa
decb
js
dec
xchg
aaa
cmp
ret
js
aad
std
lods
sub
and
sbb
jle
sub
iret
aam
addl
aaa
std
enter
sti
jp
pop
and
sub
or
add
fnstcw
sahf
lahf
mov
jns
inc
inc
xchg
cmpsb
in
push
mov
jne
iret
mov
jp
xor
lret
sti
mov
xchg
scas
mov
repz
ja
cmp
aas
leave
mull
fidivrs
dec
fidivrs
into
sbb
enter
popf
jno
loopne
jo
pop
mov
pcmpeqd
pop
shll
mov
mov
or
sub
xor
orb
xor
bound
punpckhbw
jno
pop
shrb
push
jmp
push
into
add
mov
nop
adc
mov
in
or
lret
inc
dec
ja
icebp
adc
xlat
lea
subb
sti
shld
jle
lods
mov
add
repnz
das
or
cmp
sub
mov
rolb
sbb
movsl
sbb
call
jno
nop
or
adc
out
roll
or
cmc
lods
pop
mov
cltd
aam
mov
call
or
pop
xchg
dec
inc
aad
push
scas
pop
stc
mov
or
and
aaa
insl
bound
cli
jle
lock
mov
sub
movsl
loopne
imul
xlat
sbb
sbb
cs
mov
fwait
clc
sbb
push
add
sub
outsb
pop
loopne
pop
es
and
push
xor
pop
bound
pop
cwtl
xor
addr16
in
cmpsb
lret
pop
shlb
or
shrl
adcb
add
push
cs
ja
mov
sub
jl
jno
call
cmp
insl
pushf
loopne
xchg
aam
mov
mov
xchg
add
cli
pop
inc
fcomip
fucomip
stos
lahf
dec
jb
pop
mov
dec
xchg
int
repnz
and
je
mov
int
xchg
testb
jne
jg
push
lret
pop
sbb
mov
mov
fldl
mov
dec
jecxz
aas
mov
dec
dec
fists
dec
adc
adc
cwtl
insb
decl
enter
pop
int3
xchg
or
negb
ret
mov
sub
and
mov
mov
adc
push
add
and
movsb
push
cld
jg
js
inc
push
mov
push
sub
icebp
ret
into
outsb
mov
pop
inc
add
lret
daa
jae
testl
popa
xchg
repnz
cwtl
mov
imul
aaa
cmpsl
jns
ljmp
test
xor
mov
adc
lahf
and
scas
lahf
pop
cli
cmpsl
sub
aad
xchg
pop
out
out
mov
lods
push
out
xchg
push
orl
adc
xchg
add
jae
jns
nopl
inc
jno
cli
fstpt
jp
sub
add
mov
sub
in
or
pop
xor
sbb
pop
loope
mov
scas
mov
call
fstps
addr16
pop
dec
push
inc
push
dec
lock
inc
clc
xchg
xchg
inc
sub
lret
sbb
orb
mov
cld
push
imul
ficompl
test
je
cmp
cmp
ret
mov
jg
aaa
int
cmpl
gs
dec
jo
loop
xor
mov
jno
push
fs
push
lds
push
aad
pop
stos
jae
scas
sbb
frstor
jb
dec
jmp
sbb
js
push
xor
fiadds
jo
dec
jle
sub
add
test
or
shlb
mov
orl
sbb
fimuls
scas
or
push
mov
fucom
repz
loope
adc
push
xchg
pop
das
sub
jno
mov
repnz
out
and
pop
jns
outsl
and
adc
mov
mov
xor
fisttpl
mov
cltd
mov
imul
mov
lea
xchg
push
pop
or
roll
popf
cmpsl
push
stos
stos
hlt
mov
mov
cmp
addr16
inc
fs
loop
mov
aad
xchg
pop
testb
lds
adc
rcrb
aaa
push
aad
cmp
mov
add
push
in
add
inc
out
addb
lret
push
pop
push
fsts
lea
fdivl
xchg
mov
popf
jbe
test
cld
test
sub
pop
arpl
mov
es
jno
jp
rol
push
jb
addr16
arpl
outsl
ljmp
jmp
jg
cmpsl
lock
cld
inc
or
dec
mov
in
roll
mov
icebp
cwtl
pusha
and
lcall
or
and
loop
mov
fcomps
fstpl
sub
dec
enter
pop
add
movsl
out
imul
jle
imul
push
jns
lahf
and
jb
test
cmpsb
push
cmpsl
fimuls
dec
inc
mov
mov
out
pop
fs
pushf
test
mov
pop
sub
jmp
push
push
lea
push
xlat
push
xorl
xorl
xchg
mov
add
pop
mov
mov
shrl
mov
stos
jp
xor
outsb
std
das
shll
pop
mov
jne
negl
cmc
inc
js
inc
or
and
mov
ja
mov
push
sbb
pop
cmpsl
out
leave
fmull
pushf
or
xchg
les
xchg
adc
addb
mov
sbb
xchg
mov
data16
orl
in
filds
daa
jb
ret
je
iret
push
and
push
pusha
or
mov
lock
dec
jp
out
cmp
in
add
movsb
sbb
inc
imul
in
repnz
xor
pcmpeqb
adc
sbb
int
mov
jb
pop
cmp
jbe
divl
dec
aas
js
les
enter
mov
sbb
mov
and
pop
xlat
jmp
fisttps
jne
movsl
mov
test
push
adc
xchg
ret
adc
es
push
mov
ds
inc
mov
repz
repz
mov
imul
add
add
jle
push
lock
ss
cmp
lock
sbb
nop
hlt
lds
cld
lcall
cld
sub
addl
xchg
dec
inc
mov
mov
pusha
fdivrp
scas
and
mov
sbb
cli
dec
cmp
insl
cmp
xor
or
mov
imul
jle
scas
jns
jo
es
mov
adc
mov
cmp
fidivrs
nop
test
inc
loop
or
dec
fimuls
rcr
or
test
xor
je
mov
shl
std
and
dec
aas
mov
test
mov
xor
cmp
xchg
aad
pop
hlt
mov
dec
add
repnz
mov
mov
add
xor
rolb
jb
sub
hlt
ljmp
mov
in
mov
movsl
fcoms
or
sbb
std
xchg
dec
inc
es
and
or
sbb
add
iret
mov
mov
insl
imulb
in
call
das
or
lods
push
cld
ror
jbe
les
das
inc
out
inc
push
in
ds
jg
xchg
imull
sub
mov
lahf
push
mov
add
bound
mov
adc
or
stc
dec
hlt
daa
jbe
out
adc
push
xlat
enter
enter
mov
add
sahf
divl
xchg
mov
dec
sub
nop
imul
mov
outsb
cmp
fbld
cltd
cwtl
js
filds
cltd
bound
xchg
jnp
sbb
adc
mov
in
clc
cmpb
mov
out
jge,pt
les
sub
mov
inc
iret
cmp
dec
or
push
lock
jmp
sub
mov
sarl
dec
xor
loope
xor
pop
int
xchg
js
mov
xchg
adc
and
faddl
daa
adc
bound
xorb
inc
enter
mov
hlt
sarb
jle
cmp
ret
sub
iret
xchg
push
xor
sub
imulb
enter
cmp
fs
pop
and
push
shl
lahf
int
test
into
sbb
loopne
int
xchg
jg
movsl
xor
int
jae
outsl
mov
imul
fs
test
lods
adc
add
testl
or
jmp
shll
cmp
pop
lret
inc
inc
out
pop
or
stos
push
or
mov
loop
adc
jnp
lods
add
pop
popa
mov
adc
insl
rcll
aad
pop
add
or
mov
add
mov
xchg
lds
inc
fadd
jnp
sub
gs
push
sbbb
jo
xor
sub
imul
mov
dec
inc
mov
jge
ret
lods
fsubl
pop
fs
mov
push
xchg
adc
mov
push
inc
cmp
xor
mov
nop
jecxz
scas
cwtl
or
dec
jle
and
push
movsb
push
in
das
test
push
push
mov
cmp
jge
sbb
dec
mov
insl
icebp
push
imul
cmp
push
mov
mov
push
push
cmpsl
sbb
out
add
insl
mov
xor
mov
xor
loopne
inc
sub
outsb
cmpsb
mov
mov
js
fwait
ja
xchg
mov
fs
int
jbe
push
mov
fistps
insl
cmp
push
icebp
pop
xchg
cld
jno
xchg
sub
jb
xor
lods
loope
pop
fwait
mov
cli
inc
lahf
mov
ss
popa
imul
add
push
sub
leave
ds
pop
push
sub
loope
ds
fstps
je
xlat
lods
shlb
mov
into
and
inc
push
scas
dec
mov
test
lcallw
jge
lds
lods
push
pop
push
insb
sbb
inc
mov
mov
lret
js
push
lods
dec
xchg
aam
sub
and
movsb
sbbb
jp
je
cltd
mov
mov
push
push
cltd
pop
pop
sbb
cs
lea
hlt
cmp
xchg
mov
in
inc
mov
jne,pn
lds
daa
and
sbb
jge
xchg
and
push
movsb
xlat
or
sahf
test
sbb
xchg
outsb
out
cltd
push
mov
daa
add
mov
sub
rol
cmp
lds
inc
lcall
das
push
pop
std
inc
mov
pop
cmp
mov
lds
or
in
int3
push
and
je
mov
andps
imul
call
out
cmp
mov
addr16
xchg
js
lcall
fxtract
and
imul
lret
mov
imul
adc
lahf
into
scas
inc
subl
pushf
rcrl
cmp
mov
int
lods
iret
pushf
out
push
repz
out
push
sbb
fdivrs
fldt
pushf
pop
bound
loopne
cmp
test
stc
push
rcll
push
out
xor
jecxz
jmp
adc
sbb
jb
jl
clc
cli
inc
dec
stos
inc
sbb
and
or
subb
xchg
fwait
mov
int3
pop
test
mov
nop
pop
sub
sub
cmp
adc
adc
pop
aas
hlt
push
sbb
enter
mov
inc
sub
xchg
push
push
sub
loop
push
shl
pop
cmp
fadds
in
sbb
mov
and
inc
lock
xor
faddp
in
jge
sbb
sub
mov
or
outsb
push
cmp
push
adcb
mov
div
mov
mov
mov
push
xor
rclb
cmp
aam
pop
xchg
sti
stos
into
push
sbb
pop
mov
push
mov
sbb
and
bound
addl
dec
jmp
ljmp
idiv
cs
or
sti
xchg
cmc
fstps
ja
adc
test
je
or
call
movsb
mov
sbb
jmp
aaa
inc
jno
test
das
jne
dec
pop
ret
fnstcw
add
adc
je
lahf
xlat
lret
cmp
je
inc
adc
jge
rcll
xlat
aam
test
ret
mov
adc
out
dec
insl
push
daa
or
fsqrt
lcall
outsb
scas
test
xor
jo
cwtl
out
lret
imul
jno
lret
pop
xor
rolb
lret
sbb
and
mov
leave
jle
xchg
scas
sbb
das
insb
enter
mov
fcmovu
das
sub
stos
mov
cmc
jbe
pushf
aaa
inc
mov
scas
pusha
loop
jmp
cmpsb
mov
pop
arpl
xor
test
mov
fcomps
mov
mov
lcall
sbbb
dec
sbb
jb
dec
cmp
frstor
or
loop
push
lods
mov
icebp
cmp
sahf
mov
rorb
add
lcall
ljmp
fs
std
push
mov
movsb
push
lods
in
fisttps
xchg
cwtl
fnstcw
les
repnz
inc
cs
or
lock
dec
fs
dec
movsl
daa
mov
jmp
mov
and
sbb
fcomp
mov
in
xchg
cmp
or
lcall
cmp
gs
adc
or
or
jb
sarb
pusha
dec
adc
rorl
adc
stos
les
in
mov
je
cmpsl
xchg
stos
jo
movsl
jbe
int
push
fcmovnu
xchg
jbe
ss
or
dec
scas
inc
push
and
cli
jle
fldcw
add
lahf
addr16
in
jg
enter
dec
shrl
xor
pop
mov
inc
lcall
jbe
scas
cmp
dec
push
add
and
jo
adc
xor
lds
jp
mov
and
sub
test
int
push
mov
addl
inc
shlb
inc
sub
xchg
pop
dec
sbb
push
lea
sub
imul
xor
sbb
jno
cmp
dec
leave
ja
lods
out
push
sbb
fwait
mov
nop
mov
sub
adc
jg
jne
je
je
pop
sbb
push
xor
add
jmp
std
aas
roll
cwtl
lret
xor
or
dec
jno
rorb
sub
jge
ficoms
inc
je
sti
adc
mov
lea
push
dec
mov
sub
out
ficoml
mov
jbe
dec
sub
lahf
shl
jecxz
lods
pushf
in
xlat
xchg
sub
fmuls
repnz
daa
fnstsw
jb
test
and
addr16
mov
jno
jo
sub
adc
lahf
jb
test
mov
fstl
popa
ror
xor
mov
fidivl
add
loopne
les
out
xor
push
cmpsl
stc
mov
fdivl
popf
mov
inc
scas
fisttpl
mov
stos
mov
xor
lea
pop
sub
out
ljmp
mov
sbb
scas
push
pop
lods
pushf
mov
es
jae
pop
and
in
loope
leave
mov
dec
xchg
test
lds
pop
mov
push
cld
dec
fdivr
inc
add
xchg
xchg
inc
lcall
imul
sbb
insb
fisttpl
outsl
push
cmp
lods
je
cltd
add
decb
scas
sbb
lock
sub
bound
push
lea
add
test
in
xchg
and
pop
icebp
cmpb
cld
pusha
jle
es
loopne
sub
mov
das
sub
icebp
inc
mov
imul
pushf
mov
xchg
sbb
cmp
push
sbb
sbb
rorb
jl
mov
mov
test
bound
iret
mov
loopne
mov
push
xlat
std
dec
sub
adc
jne
int
sbb
mov
mov
push
ss
push
loop
int3
sbb
push
imul
mov
mov
call
cmp
xchg
das
int
xchg
pop
subb
and
ret
cmp
jae
add
mov
xor
loop
push
mov
mov
out
mov
lods
jb
cld
pushf
mov
mov
sub
mov
xor
lock
jbe
or
int3
out
jg
lock
pushf
cmpsl
fcmovne
push
les
jb
xor
js
loope
mov
push
mov
jnp
xchg
je
push
pop
clc
std
outsl
push
test
push
adc
lds
test
and
dec
out
jge
orb
loopne
jnp
std
insb
push
dec
or
push
dec
dec
call
fisttps
jge
lods
lea
mov
fwait
cmpsl
xor
into
shll
mov
mov
cwtl
mov
dec
lahf
fidivrs
xor
test
adc
ja
push
cmpsb
mov
mov
fistl
push
nop
mov
and
pushf
in
stc
popa
loop
sbb
sbb
add
sub
sub
in
mov
pop
decb
in
mov
aad
and
mov
cmp
imul
imul
mov
cmpsb
cmp
int3
shr
in
addr16
xchg
push
push
rcl
mov
out
push
add
fidivrs
xor
sub
pop
jmp
inc
pusha
ss
xchg
dec
dec
dec
or
or
add
ds
test
mov
adc
xor
mov
dec
add
out
push
je
adcl
xchg
sbbb
jae
fnsave
mov
arpl
nop
mov
repnz
fiaddl
cmpl
imul
cmp
mov
mov
test
sbb
mov
sub
cltd
ja
outsb
or
xor
notb
mov
jle
adc
inc
out
or
icebp
inc
insb
ljmp
dec
stc
xchg
pushf
cmp
call
jmp
sub
icebp
sub
rcrl
or
push
pop
daa
jbe
loop
pop
ss
pop
push
les
add
xor
inc
in
pusha
pop
xchg
test
pop
sub
out
outsb
dec
xchg
cmpsb
jl
lock
push
and
lods
xchg
in
loop
ficompl
xlat
ret
sub
mov
fs
lods
add
repnz
in
roll
xchg
jp
inc
fstl
sbb
add
sbb
lea
test
sbb
ret
add
pop
push
pop
pop
add
int
and
pop
adc
mov
mov
adc
mov
push
pushf
iret
rcrb
loope
xor
or
clc
sbb
aam
or
mov
out
test
test
insb
sub
or
shlb
aaa
cmp
popf
inc
jbe
inc
sbb
fldenv
test
sbb
sbb
or
inc
je
mov
add
mov
in
jge
mov
or
xchg
and
and
cmp
lcall
icebp
pop
inc
inc
clc
fsubs
enter
dec
mov
push
lcall
ja
xchg
adc
xlat
pop
loope
cmp
icebp
mov
jmp
push
dec
test
negb
fbld
pop
call
xchg
xchg
and
xor
pop
lds
pop
inc
jae
in
movsl
xchg
inc
clc
hlt
das
inc
movsl
outsb
cs
jl
addr16
out
cli
adcb
insl
lods
xchg
jle
orb
popf
push
inc
or
push
or
pop
mov
inc
and
mov
pop
sarb
push
and
push
sbb
xchg
pop
out
outsl
aaa
and
arpl
dec
dec
mov
arpl
sarb
scas
mov
push
push
mov
sbb
inc
inc
cli
clc
xchg
and
stos
push
xchg
sbb
fs
scas
clc
dec
loopne
adc
and
push
push
or
xor
js
push
ja
lret
ss
insl
in
shll
add
mov
dec
or
cmc
pop
rcl
dec
popa
dec
fidivs
sbb
in
popf
lods
je
xchg
sub
dec
pop
mov
lahf
push
rcr
jns
insl
push
ret
cmp
cmp
mov
cs
push
sbb
jo
iret
repz
data16
jnp
jmp
dec
add
int
test
fldcw
xchg
in
xchg
aam
popa
jg
sub
or
mov
jbe
mov
xchg
insl
and
xchg
jp
mov
lret
pop
pop
lret
add
call
pop
daa
imul
shrl
scas
loop
xchg
out
js
inc
push
mov
pop
add
xor
xchg
cltd
ret
movsb
lods
add
cmpsb
pop
jp
inc
nop
fstpt
adc
or
je
add
jg
pop
aam
insb
enter
dec
enter
and
lea
pop
jecxz
lret
dec
gs
jae
in
js
jecxz
in
xchg
add
aad
sub
xor
jne
enter
push
xor
pop
movsl
sub
fdiv
xchg
xchg
scas
in
sbb
cmp
inc
in
popf
les
dec
inc
pop
dec
fistpl
popa
call
push
mov
inc
or
pop
daa
push
lret
xchg
pop
sbbl
hlt
add
and
sbb
lret
es
jecxz
xlat
aaa
dec
pop
push
push
ret
inc
subb
add
dec
mov
imul
mov
push
cmpsw
and
mov
pushf
pop
inc
lcall
adc
pop
test
shll
int3
and
add
and
xchg
pop
loope
add
les
push
sbbb
mov
incl
popa
mov
cli
cmc
push
sahf
rolb
aam
xchg
dec
gs
lcall
decl
or
ret
lahf
lea
std
mov
jnp
js
mov
sbb
loopne
pop
jb
test
aas
cmp
sti
movsl
out
sahf
popa
lret
in
xor
clc
je
dec
je
xchg
and
lahf
in
mov
testb
add
test
lahf
adc
xor
xchg
stc
outsb
shlb
mov
aas
xor
cmp
repnz
sbbb
cmp
jae
dec
loop
push
mov
btr
test
enter
fcoms
lods
pop
xor
push
inc
cltd
push
sbb
jmp
sub
dec
insl
xor
ficoms
fldl
or
xor
xor
orb
mov
fldcw
loop
push
mov
clc
in
dec
fwait
push
dec
mov
or
ljmp
sbb
cwtl
xchg
rcrl
mov
imul
jae
dec
les
adc
lock
je
jge
stos
inc
xchg
outsb
mov
cmc
sub
leave
movsb
stos
daa
push
ljmp
jp
int
es
pop
fld
out
mov
and
mov
mov
ss
cld
lea
pop
leave
jns
cltd
enter
pop
test
mov
jb
push
lret
ss
mov
repz
pushf
rol
aaa
mov
into
dec
incb
fs
or
push
jnp
fldl
mov
ljmp
ljmp
inc
lret
adc
cmp
and
stos
adc
xchg
jecxz
sub
mov
test
es
xchg
mov
rcrl
int3
sbb
iret
xchg
stos
or
jge
lods
ret
jns,pn
cs
sub
xor
aam
inc
imul
mov
dec
adc
push
movsl
lds
jo
push
xor
xor
aam
cmp
push
repz
xchg
cmp
ret
pop
rcrb
jae
xchg
xor
arpl
out
das
mov
jle
sub
xchg
mov
addr16
in
push
fwait
icebp
mov
popa
adc
xchg
adc
add
mov
mov
xor
dec
shll
fbstp
mov
pop
inc
rcr
xchg
sbb
loop
lret
cmpsl
or
sub
jae
mov
cmp
dec
in
adc
in
xor
cltd
xor
sbb
adc
inc
test
in
pusha
out
scas
mov
cmp
adc
je
adc
lcall
stos
lahf
orb
xor
xor
or
pop
mov
popf
std
int
mov
inc
sti
mov
mov
inc
jge
ja
lods
sub
movsl
push
test
loop
or
add
push
jle
cmp
dec
hlt
jbe
and
mov
push
jecxz
dec
loope
les
pop
out
dec
rorb
xchg
add
insb
inc
lret
fsts
cmpsl
lods
ds
ja
ret
mov
jb
out
insl
loop
xlat
dec
sti
icebp
test
mov
in
sub
dec
inc
jge
push
inc
mov
inc
outsb
push
lret
int3
test
stc
test
test
pop
jne
pop
sub
adc
int
stc
mov
sti
call
out
stos
xchg
xor
jg
stc
push
inc
xchg
stc
xor
decl
mov
daa
add
add
jmp
xchg
aad
iret
shrb
test
inc
cmp
push
inc
lcall
js
sbb
xchg
xchg
fiaddl
les
aad
jb
sbb
mov
mov
ja
fcoms
pop
pop
lcall
sub
cmp
pushf
test
mov
cld
jge
cmp
pop
repz
aam
xchg
aaa
andl
or
cli
pushf
pusha
sub
clc
outsb
mov
pop
adc
or
sbb
add
mov
rcrb
push
pop
pop
mov
push
fnstsw
jl
inc
jge
repz
icebp
stc
iret
push
inc
push
loop
gs
int
dec
pop
pusha
sti
jns
adc
cmp
pop
mov
mov
xchg
dec
cmp
cmp
fwait
mov
mov
jne
nop
into
mov
add
loope
pop
mov
sub
mov
mov
roll
push
jmp
pop
ss
xor
cli
into
push
shll
adc
pop
jl
add
jnp
aam
cmp
mov
push
aad
mov
iret
loope
fwait
dec
xorps
sub
dec
sarl
popf
mov
jo
sub
inc
int
xchg
add
iret
aad
jbe
insb
add
scas
inc
ljmp
pop
dec
mov
scas
popa
fmuls
sbb
cmp
aam
jns
ds
scas
movsb
sbb
push
aaa
xor
dec
jo
and
addr16
ss
mov
insb
add
rclb
cmp
incb
test
mov
mov
push
fimull
xchg
sub
push
notl
mov
mov
ds
xchg
jbe
xor
mov
cmc
xchg
sbb
mov
rol
inc
inc
mov
inc
insb
push
test
and
add
inc
add
add
xor
test
fadds
mov
lods
imul
cmpsb
dec
fucom
cmp
mov
and
scas
lods
xchg
pushl
sbb
push
sbb
and
dec
ss
jo
dec
ret
xchg
outsl
sub
mov
mov
xor
sub
inc
push
dec
std
test
aam
mov
inc
lea
add
add
rolb
cli
sahf
popa
push
mov
lods
xor
jno
xor
mov
ds
mov
notb
mov
inc
jle
xchg
daa
mov
je
aam
mov
icebp
in
mov
add
in
cmp
inc
mov
xor
arpl
or
mov
shll
call
out
push
mov
inc
sbb
test
xchg
sti
mov
mov
in
sub
arpl
adc
ficoml
mov
xchg
dec
loop
pop
adc
lcall
in
push
fnsave
in
iret
jno
jbe
dec
and
mov
fdivs
call
out
out
ffree
sub
mov
inc
cmc
inc
pop
push
test
scas
and
xchg
xor
jmpw
bound
pop
adc
mov
push
mov
push
or
jb
cmc
jge
push
popa
pusha
sbbl
jae
in
sbb
mov
inc
mov
or
iret
aam
addr16
loope
popa
bound
xchg
jp
loop
repnz
jg
or
cmp
mov
cmp
mov
daa
inc
lock
mov
stos
aas
add
ljmp
das
iret
sti
mov
dec
xchg
jbe
movsb
scas
mov
pop
pop
sbbb
enterw
mov
jl
ficompl
in
jb
sbb
cld
iret
loop
push
xor
arpl
or
mov
das
dec
jo
test
add
jg
push
push
mov
movsl
int3
sbb
add
and
cmp
decb
cld
mov
mov
in
jecxz
scas
mov
cmp
cmpsl
ss
jg
xor
mov
mov
inc
adc
adc
popa
std
dec
std
sub
mov
cs
xchg
push
xchg
rorl
out
inc
dec
fdivr
inc
int3
pop
mov
jmp
adc
cmpsl
lods
mov
mov
jo
add
xchg
addb
sahf
rclb
mov
test
inc
mov
sub
fst
adc
in
xorl
xchg
add
insl
and
lcall
dec
sbb
arpl
jb
in
cltd
movsl
xchg
pop
dec
pop
mov
mov
add
in
or
dec
dec
cwtl
rolb
mov
idivl
xor
call
adc
jg
js
mov
or
in
mov
cmc
cld
xchg
mov
pop
push
xchg
mov
add
outsl
xchg
mov
cmp
mov
ret
mov
in
cmp
sub
insb
inc
into
ficompl
pop
sbb
cmc
adc
dec
std
testb
jl
lcall
add
push
sti
cmp
aaa
arpl
mov
sub
ss
or
push
popf
stos
hlt
shll
jae
popa
mov
sbb
mov
sti
lcall
jb
repnz
adc
dec
clc
daa
xor
subb
stos
pop
push
xchg
call
xchg
fucomip
jae
inc
inc
or
sbb
scas
adc
pop
cmp
lahf
inc
popa
push
pop
xchg
insl
pop
mov
jmp
mov
sti
dec
jg
jns
xor
insl
pop
pop
lods
push
dec
mov
pop
ret
test
cltd
mov
subl
setno
sbb
fldcw
out
or
aas
sub
mov
icebp
cmp
enter
shlb
sbb
mov
sar
or
cld
and
add
iret
ret
loopne
popf
ljmp
notb
pusha
xchg
pop
test
jge
fwait
sbb
xor
mov
pop
mov
je
push
scas
mov
hlt
das
mov
mov
jg
xor
ds
int
jmp
xlat
test
stos
push
pop
sub
xchg
cmpsb
ss
dec
xchg
jne
adc
cmpsl
dec
stos
mov
inc
xchg
sbb
push
jbe
mov
les
loop
and
dec
jb
add
dec
adc
push
mov
or
imulb
jp
push
in
jge
ja
push
xchg
and
and
test
dec
into
repnz
sbb
std
dec
jb
leave
lds
sahf
cld
bound
stc
rep
out
fildl
and
push
push
sarl
ja
test
adc
iret
sub
fwait
orl
fimuls
or
adc
insb
loopne
pop
mov
jnp
mov
sar
imul
fwait
test
inc
repz
mov
push
xor
xlat
shlb
xchg
test
jbe
iret
fdivs
adc
shlb
pop
aad
mov
fsts
fidivs
xor
out
sbb
gs
adc
sub
sub
jo
rclb
mov
stos
popl
xchg
and
mov
in
mov
dec
or
sbb
cmp
std
popf
notl
adc
in
pop
lret
imul
test
sbb
mov
js
es
push
int3
popl
push
or
repnz
dec
mov
pushf
mov
notl
push
shrl
jle
dec
xor
jnp
ds
pusha
cmpsl
jl
sti
push
adc
outsl
xchg
scas
and
fbld
into
push
sbb
cmp
pop
rolb
mov
fstpt
popf
aad
mov
arpl
mov
aam
mov
or
jmp
aas
fxam
sbb
jb
pop
movsl
ja
mov
xor
cmpsl
mov
insb
lea
imul
xchg
jmp
dec
adc
or
roll
fwait
mov
xor
pop
in
push
test
add
insb
or
mov
ror
pop
push
mov
lock
icebp
inc
mov
cld
sbb
cli
xor
rorl
dec
jae
xor
insl
mov
mov
stos
movsb
scas
imul
jge
lahf
insb
adc
mov
cwtl
sti
jl
test
push
mov
int
xchg
push
adc
fsubr
fisttps
pop
xor
cmc
mov
orl
lcall
arpl
cmp
std
mov
rorl
add
imul
clc
lods
jnp
in
xor
adc
sarb
sub
cmp
jns
mov
and
loope
out
das
adc
lea
or
lcall
mov
pop
ljmp
inc
in
adc
inc
testb
mov
dec
out
sbb
inc
jg
in
or
clc
icebp
and
push
mov
cltd
or
add
cmp
push
xor
jae
incb
mov
ret
shrb
mov
xorb
outsl
cmp
jb
push
cld
push
sub
xchg
sti
mov
loope
inc
or
mov
outsb
inc
shrb
mov
mov
iret
aaa
aam
dec
fwait
sbb
inc
push
pushf
mov
and
ja
jne
insl
jge
ja
and
shr
lahf
jle
cltd
pop
rcrl
jecxz
dec
fistpl
aas
stos
cli
ds
sub
repz
scas
pop
or
inc
mov
sarb
cmp
cwtl
pop
xchg
mov
adcb
push
test
cmp
rcr
sub
lea
in
clc
or
pushf
jge
stc
test
insl
lret
mov
popa
imul
fistpl
popf
imul
cmp
mov
push
ret
and
stos
scas
add
mov
rcll
mov
ficomps
loope
rcrb
popa
popf
dec
push
pop
inc
mov
xor
jns
sahf
loop
shrl
mov
mov
cmpsb
mov
nop
fwait
cs
or
pop
in
and
inc
roll
out
sbb
xor
add
push
inc
mov
xchg
fldenv
pop
pop
addr16
ret
mov
out
sbb
or
pop
imul
test
mov
cmp
adc
loopne
adc
je
jo
idivb
cmp
jmp
xor
mov
mov
idivl
fidivl
mov
or
dec
mov
ret
cmp
mov
jae
in
xchg
movsl
push
shlb
out
ja
insl
dec
xlat
mov
inc
outsl
lods
inc
es
sub
lret
mov
int3
and
dec
push
stos
insb
fs
setb
cld
and
movsl
and
jl
shll
cmp
pop
jle
sub
sbb
notl
das
xchg
pop
cs
mov
pop
out
mov
mov
out
sarl
sarb
sub
pop
push
or
mov
pop
pop
dec
jbe
sbbb
sbb
push
icebp
pop
int
hlt
fistpll
fisubs
inc
mov
cmp
adc
add
test
mov
sarb
out
xor
xor
fistl
sub
jbe
ljmp
cld
je
xchg
and
pop
and
mov
insb
pop
dec
in
jb
lods
jae
sbb
loop
lods
jg
mov
cmp
mov
xor
cli
or
dec
imul
pop
or
lret
add
mov
mov
or
xchg
mov
mov
add
outsb
xchg
push
push
cmc
sbb
push
lahf
cmp
out
arpl
inc
faddl
dec
cmpsl
dec
and
sbb
out
iret
das
mov
in
mov
mov
mov
xor
faddl
xchg
jae
adc
and
cli
test
int
push
je
shrb
call
mov
test
repnz
adc
mov
loope
mov
stc
testb
fisubl
fucomi
dec
imul
or
jmp
jno
mov
pop
pop
adc
add
movsb
lods
cmp
nop
pop
and
aas
orb
and
ljmp
dec
mov
inc
mov
stc
mov
xor
clc
mov
add
lea
test
or
xorb
fcmovnb
mov
dec
test
sbb
and
jo
mov
jnp
add
vcvtss2si
ret
adc
jnp
data16
lcall
sub
xchg
mov
movsl
repz
fildll
jae
lea
and
jle
push
test
adc
out
push
rcll
cmc
ja
sub
data16
jmp
jmp
leave
pushf
out
cld
in
cmp
or
jecxz
dec
pop
add
stc
or
xchg
or
xchg
mov
in
mov
inc
clc
pusha
sub
xchg
mov
inc
aas
cmc
push
lock
out
dec
xchg
inc
cwtl
jg
scas
mov
cmp
jge
mov
imul
sbb
add
daa
cwtl
mov
sysenter
mov
ficoml
adc
testb
mov
jnp
xor
mov
fsub
xor
out
mov
std
dec
cmpl
repnz
add
dec
cmp
mov
mov
inc
sub
mov
sub
fldcw
adc
add
jle
mov
and
subb
aaa
pop
xor
ja
fcomip
push
int
test
in
xchg
pop
fbstp
out
add
mov
push
push
add
sbb
jmp
enter
push
lret
adc
pusha
pop
repz
mov
ljmp
mov
xor
mov
movsb
fildll
loopne
jmp
xor
cwtl
sbb
mov
ret
lock
out
lock
mov
adc
cmpw
mov
incb
mov
xchg
push
or
dec
or
mov
out
mov
cmp
mov
sub
add
sub
pop
inc
push
loope
rcrl
les
les
loopne
sub
notb
jle
jne
mov
dec
fildl
adc
stc
cmp
adc
mov
add
jecxz
pop
shrb
inc
fcmovbe
mov
lret
xchg
stos
jl
outsb
lock
loopne
or
xchg
insl
scas
aaa
push
andb
xor
xor
rcrb
movl
ja
mov
adc
js
in
sub
jno
test
mov
xor
sahf
inc
pop
test
push
xlat
xchg
jge
les
adc
insb
fiadds
cmpb
push
in
pop
popf
lret
cmc
jmp
sub
cwtl
adc
test
cltd
in
stos
loopne
jmp
xchg
push
add
mov
bound
cmp
decb
jno
iret
sub
mov
inc
jbe
into
shr
sti
add
pop
stos
cmpb
es
jbe
add
inc
inc
hlt
call
popf
in
mov
lcall
mov
scas
incb
repnz
fcoms
int3
push
repz
jl
fwait
dec
loop
sub
pop
mov
inc
ficompl
mov
mov
cmc
outsl
fdivp
ljmp
pusha
push
adc
push
pop
cmc
test
add
pop
insb
icebp
mov
inc
idiv
jmp
fidivrl
dec
lock
mov
xlat
loopne
xor
shrb
sub
push
fists
or
adc
sbb
jp
insb
pop
jo
inc
pop
jb
negb
ud0
jno
dec
or
jno
push
movsb
lods
lahf
test
xchg
cmpsl
and
sbb
add
clc
cmp
fldt
and
aas
incb
push
push
lretw
das
in
test
daa
mov
push
repnz
jb
movsb
xlat
jns
xchg
fs
adc
push
pusha
add
adc
into
in
jmp
xor
add
cmpb
in
mov
outsb
or
lret
push
inc
jg
and
je
xchg
jmp
stos
sub
mov
icebp
lods
sbb
scas
adc
cmpb
dec
ljmp
jmp
cs
or
daa
ja
insb
lock
pop
push
pop
inc
sbb
shl
loop
stc
sbb
addr16
mov
jnp
or
hlt
push
mov
inc
cmp
insl
xor
ret
sub
or
ffreep
adc
xor
xchg
push
jp
fsub
aas
mov
push
cmp
mov
clc
mov
xchg
aad
xchg
icebp
enter
push
jo
mov
push
cmpb
jecxz
xor
aam
sub
fcmovnb
ss
outsb
aaa
test
dec
cmp
push
or
cmp
js
rolb
mov
addr16
ljmp
adc
jb
or
cmp
popf
loopne
pop
adc
jns
hlt
lea
ss
std
data16
clc
fildl
sbb
scas
pop
or
xchg
movsl
leave
sbb
cld
mov
mov
xor
lods
into
push
jns
test
push
xchg
push
lahf
jle
push
dec
scas
mov
aad
std
leave
orb
aaa
adc
cli
popf
or
inc
inc
testl
inc
mov
loop
mov
ss
jecxz
clc
xchg
lahf
mov
jg
enter
shrl
orb
daa
mov
test
and
sub
jnp
lock
push
pop
rolb
ljmp
adc
mov
and
out
xor
lret
notb
ror
dec
test
or
das
lret
and
sbb
call
into
push
hlt
mov
mov
jb
enter
dec
cmp
sbb
icebp
jmp
mov
push
movsl
jecxz
mov
clc
mov
out
je
mov
and
aad
push
in
pop
icebp
loopne
pop
sub
sbb
push
xor
pop
enter
adc
out
sub
mov
loopne
ss
pop
ficoml
adc
jns
dec
rolb
lgs
enter
test
push
lock
xor
les
xchg
or
and
shlb
lods
movsb
cli
lea
mov
stc
and
mov
xor
fisubs
push
mov
repz
fwait
inc
jbe
std
js
lods
cwtl
xlat
bound
and
add
pusha
mov
outsl
mov
push
dec
xor
adc
mov
rolb
cld
xchg
pushf
lret
je
sbb
dec
mov
jmp
stos
lcall
out
ds
sub
mov
ds
cpuid
mov
xchg
lahf
gs
cmp
mov
jnp
pop
fldt
mov
and
loop
jne
mov
lret
mov
xchg
mov
aam
cmpsl
pop
adc
daa
mov
pop
clc
int
and
sub
dec
jle
pop
and
mov
cmp
jb
xlat
arpl
xchg
iret
jecxz
jmp
jl
loope
add
vpaddusw
mov
pop
ret
inc
mov
aam
mov
sub
inc
dec
push
es
das
ljmp
scas
pop
cmpsl
lock
lret
repnz
xlat
test
xchg
lock
inc
sub
push
xorb
bound
subl
jb
fstps
pop
sbb
dec
test
mov
icebp
xor
repnz
pop
sub
hlt
cmpsb
xchg
es
rcrb
adcl
out
dec
ss
dec
mov
ss
cs
jle
push
sbb
ds
mov
or
jnp
mov
and
push
xchg
push
mov
inc
and
jae
les
inc
sub
jbe
adc
call
in
sbb
add
andl
mov
sub
jl
sub
sbb
sub
or
scas
test
add
pop
int3
sbb
or
xor
sub
pop
inc
jne
adc
or
push
fsubrs
jmp
gs
cltd
fistpll
jno,pn
cld
mov
icebp
iretw
mov
xchg
pop
idivb
ljmp
cmp
mov
add
cmp
cltd
loop
mov
enter
sbb
outsl
sub
xchg
enter
repz
mov
lds
nop
shll
sti
add
push
cmp
jecxz
and
arpl
and
std
les
xchg
jne
and
pop
inc
int3
loop
shrl
out
mov
mov
adc
fnstenv
xchg
dec
iret
cmp
xor
aad
shrl
sbbb
div
cmc
mov
push
aaa
shll
fcomps
inc
mov
pop
out
xchg
xchg
xchg
mov
pop
mov
mov
jmp
mov
mov
mov
lea
sbb
dec
jl
ret
in
ficoms
mov
out
mov
and
dec
mov
jbe
fs
cwtl
inc
lods
xchg
cmp
jmp
push
push
add
or
add
lcall
sub
xor
xchg
stos
lock
xor
subl
out
pop
in
je
xor
fildl
push
jb
jbe
mov
pop
sbb
jo
push
cwtl
scas
jmp
lret
xor
mov
cmp
mov
movsl
arpl
sbb
mov
divl
push
test
xchg
push
out
add
sub
mov
stos
stc
pop
inc
push
in
mov
repz
pushf
cs
sub
addr16
mov
mov
push
jp
pop
cmp
mov
movsl
rol
outsb
xor
or
cmp
fnstsw
add
jne
icebp
mov
push
rcll
shl
or
movsl
repnz
test
cmpsl
sub
mov
testl
inc
adc
ljmp
pop
jle
nop
push
lret
push
xor
cmp
xchg
inc
and
scas
fdivs
pop
ret
pusha
sub
scas
push
mov
testb
push
xchg
sbb
in
cmpsb
clc
test
adc
xor
or
cmp
push
mov
add
cmc
lods
imull
fdivp
sahf
fs
int3
mov
cmp
xor
inc
sub
mov
cltd
lcall
stos
and
dec
xchg
xor
adc
negl
loopne
sub
xchg
lret
andb
push
pop
sahf
imul
cmp
mov
out
mov
mov
lcall
adc
fwait
mov
inc
pop
mov
cmpb
mov
push
out
inc
mov
adc
es
in
pusha
outsl
shl
cli
xchg
push
and
iret
xorb
pushf
mov
jl
cmpsb
cmpl
lods
lods
push
inc
and
xor
cmp
fcmovb
das
inc
pop
fdivs
adc
sti
inc
mov
add
cmpsl
out
xchg
imul
int
movsl
sbb
rolb
cmpsl
sbb
test
in
mov
outsl
lods
fisttps
les
not
sti
push
pop
mov
sub
rorl
pop
jb
fptan
movsb
aaa
mov
dec
iret
pop
testb
adc
sahf
xchg
dec
stc
push
outsl
data16
rcll
mov
xchg
mov
mov
leave
out
rorb
cmpsb
xlat
cmc
imul
jg
cli
add
pop
mov
fildll
ljmp
inc
mov
je
add
incb
popa
sbb
inc
in
imul
xchg
mov
add
and
mov
pop
out
fwait
xor
iret
xchg
or
and
push
rolb
xlat
mov
dec
mov
jge
inc
inc
scas
jbe
xchg
sti
add
mov
push
lahf
dec
mov
cmp
in
jp
mov
jnp
push
mov
loopne
f2xm1
adc
popa
cmp
sub
xor
cmpsb
je
loope
add
mov
gs
dec
call
jne
js
insb
repz
aad
mov
aas
dec
cwtl
rcll
pop
mov
ret
and
in
sub
sub
icebp
xor
movsb
aam
mov
in
sarl
leave
ja
dec
call
sbb
jecxz
sbb
xor
xchg
movsb
mov
sbb
pop
push
sarl
push
cli
jge
add
lds
shll
xchg
out
and
jbe
jns
and
pop
jmp
inc
outsb
dec
mov
inc
ljmp
shrl
ficoms
push
rcll
in
push
sbb
and
sbb
push
mov
test
mov
lahf
in
jnp
push
lret
outsl
xor
cmp
das
in
sub
inc
loop
out
ret
popa
mov
inc
add
sub
and
in
aaa
dec
xchg
inc
sbb
xchg
lock
scas
pop
inc
cmpsl
imul
add
test
xchg
xchg
mov
rorb
pushf
inc
testl
push
jecxz
mov
movsb
mov
and
aad
das
rclb
outsl
ja
push
test
adcb
mov
repz
int3
xchg
insb
cld
pop
dec
lahf
lcall
fiadds
jp
and
jge
ret
dec
or
push
inc
jns
push
push
mov
xchg
and
aas
aam
inc
xchg
xchg
es
jp
aas
cmp
lret
and
imul
js
xor
cmc
xor
xlat
sbb
inc
leave
or
jo
movsl
fdivrs
inc
pop
dec
roll
push
ds
cld
inc
push
xor
dec
jecxz
js
add
scas
aaa
adc
call
insl
mov
inc
push
fsubrl
inc
cmp
pop
or
ret
pop
sbb
popa
dec
fdivrs
mov
add
lods
sub
inc
cmp
in
adc
inc
add
popf
das
jo
xchg
mov
das
cmpsb
or
iret
mov
rol
push
inc
test
lcall
sbb
adc
rcrl
shll
sti
clc
cmp
or
xlat
outsb
xchg
xor
mov
mov
adc
xchg
cli
mov
in
sahf
push
in
mov
ja
pop
mov
out
shl
ret
dec
inc
out
xchg
das
inc
outsl
cwtl
lret
dec
outsl
sbb
cmpsb
hlt
xchg
mov
sub
xor
fs
push
dec
fcompl
sbb
sahf
inc
movsb
sbb
mov
sbb
call
lret
xchg
pop
and
adc
js
jl
jle
das
jmp
sbb
sub
push
test
pop
sub
jne
hlt
cld
in
sbb
mov
scas
lods
dec
cvtpi2ps
jns
fsubrs
stos
sbb
in
mov
hlt
sub
xor
jp
push
or
cld
cwtl
cmpb
jo
adc
movsl
cltd
das
enter
fcompl
test
add
test
int3
dec
stos
pop
mov
dec
jae,pt
or
xor
and
lock
js
push
sbb
push
push
int
movsb
nop
scas
xchg
idivb
enter
subb
loopne
sub
orl
sbb
and
fildl
mov
rcrb
ret
and
hlt
fidivrl
repnz
dec
mov
sbb
cmpl
test
cmp
mov
dec
std
pop
jp
dec
cmpsl
rcr
hlt
sbb
stos
in
and
or
out
negl
lret
push
jle
dec
sbb
adc
cli
daa
aad
xlat
pop
and
stc
pop
lods
lds
cmp
icebp
add
cltd
test
in
add
notb
xor
mov
shl
clc
jne
mov
push
ja
mov
lcall
jmp
sbbb
fld
movsb
mov
in
test
hlt
jle
movsb
jge
jae
dec
jbe
jo
stc
dec
push
mov
xchg
mov
mov
jo,pt
cmpb
rclb
roll
les
icebp
jge
cmp
shl
pushf
mov
sub
ret
insl
fisubs
push
lods
mov
imul
xchg
xlat
addr16
ficoms
xchg
mov
push
or
push
fidivrs
jge
es
dec
aas
clc
push
jle
mov
fmulp
scas
xchg
aaa
enter
shll
push
pop
jnp
push
sarb
rcrl
pop
fmuls
das
push
inc
pop
lds
filds
out
imul
or
mov
scas
fnsave
orl
jns
mov
movsb
inc
dec
fisubrs
jne
out
push
or
xor
jecxz
repnz
js
std
push
je
sbb
or
or
mov
das
movsb
xor
mov
cmp
push
mov
fsubs
push
sub
jp
sbb
sbb
sbbl
cld
aas
scas
les
mov
mov
lock
imul
ret
sub
repz
daa
pop
add
in
loop
idivb
jno
cmp
push
inc
and
push
dec
add
cmp
xchg
loope
or
push
ret
mov
mov
push
fadds
jp
cs
fcomi
mov
push
test
loop
mov
shll
in
mov
sub
cmpsb
push
loopne
stos
mov
shr
fucomp
push
jo
lock
sub
in
in
add
inc
mov
jns
xor
inc
jg
lcall
sbb
mov
in
aaa
inc
xchg
push
add
loopne
adc
cmp
mov
cmp
lock
and
dec
push
push
nop
fnstsw
push
mov
ud1
push
das
lods
jns
add
test
xchg
xchg
iret
push
or
pop
test
hlt
mull
sub
push
push
xor
aad
sbb
mov
sti
and
subb
add
inc
pop
mov
xlat
out
push
sbb
lods
ss
or
sahf
cmp
fwait
and
xchg
enter
stos
mov
pusha
loop
adc
mov
jns
dec
insb
inc
in
push
aam
xchg
fistpll
xchg
sub
enter
loop
jg
pop
mov
ret
addr16
sbb
inc
or
rorb
in
gs
iret
cltd
adc
xor
jecxz
mov
aaa
stc
movsb
jl
jbe
jmp
out
outsb
je
fimull
out
jbe
adcb
inc
ss
sbbb
add
out
gs
mov
cmp
arpl
cmp
test
leave
mov
adc
mov
pop
hlt
popf
xor
inc
jmp
add
sbb
in
jb
icebp
cmp
mov
jmp
cld
mov
daa
das
jl
add
fstl
movsl
jge
adc
rcrl
ret
lea
push
pop
sti
push
dec
repz
test
xor
ss
or
and
xchg
insb
insb
in
mul
sbb
cltd
test
test
scas
repnz
mov
shlb
sub
cwtl
or
cmp
nop
dec
pushl
not
mov
lea
jge
mov
inc
bound
cmpsl
lods
push
jns
orl
negl
addl
lret
adc
rol
nop
fdivrl
xor
mov
inc
xor
fldt
push
ds
addr16
aas
out
add
repz
jecxz
mov
cli
xor
out
xor
fwait
lcall
int3
dec
xchg
cmc
pop
adc
mov
outsb
test
ljmp
js
dec
adc
xorl
sbb
pop
jae
mov
xor
in
cmp
adc
xor
andb
or
movsb
mov
imul
sbb
and
cs
scas
mov
in
cmp
shll
dec
std
cmp
mov
call
leave
jl
sbb
adc
rcll
lds
pop
pop
cmc
test
lret
loope
std
cmpsb
shlb
subl
xor
xorps
fimull
push
xor
vcvtdq2pd
addr16
leave
inc
xchg
ds
sbb
adc
shlb
dec
xchg
add
insb
dec
push
fdivrs
mov
pop
mov
out
pop
aam
xchg
jg
imul
mov
push
pop
mov
mov
ficoml
nopl
jns
das
push
stc
cld
out
mov
jbe
and
je
xchg
push
inc
add
loope
inc
imul
dec
add
mov
and
rolb
insl
addl
out
push
into
ficoms
fmull
sbb
ds
mov
loop
cltd
xchg
ret
arpl
sub
xchg
sbb
push
mov
or
dec
movsl
int3
ljmp
mov
inc
rorb
daa
iret
xor
bnd
in
jno
jle
add
repnz
pop
mov
repz
lods
add
ljmp
mov
ja
adcl
rolb
sub
jp
jl
mov
mov
dec
popa
or
outsb
dec
xchg
int
mov
push
imul
and
xchg
cmp
xchg
xchg
imul
add
scas
test
in
test
or
inc
jo
add
or
cli
testb
cmpsl
notb
mov
inc
or
imul
fidivrs
ja
xchg
mov
out
mov
sbb
call
incl
insb
pop
cmp
sbb
inc
ret
call
mov
xchg
or
icebp
and
clc
jge
jno
mov
in
jecxz
inc
xor
mov
and
xchg
js
in
jns
xchg
adc
cmp
xchg
lret
icebp
fcoml
in
lret
testl
pop
cltd
adc
sub
sub
movq
outsb
add
repnz
iret
aad
cwtl
fneni(8087
cmp
jmp
xchg
and
push
fisubl
ret
xor
imul
das
push
aaa
add
rclb
pop
mov
pop
push
cwtl
pop
fstp
mov
mov
adc
jnp
ret
sub
xor
imul
and
test
mov
fildll
cmp
xchg
lcall
lcall
enter
mov
mov
xor
or
sbb
adc
jg
add
orl
mov
loopne
lcall
jno
fxch
test
sahf
sbbb
movl
test
notb
mov
popa
arpl
adcb
jge
hlt
cmp
mov
and
mov
pop
cmp
push
jle
adc
out
aas
xor
or
jbe
jne
mov
mov
jp
imul
fs
sub
ss
in
xor
xor
sub
mov
jo
mov
cmpsb
mov
xchg
cmp
int3
test
xor
or
sbb
adc
mov
adc
inc
es
aad
xor
adc
testb
jb
insb
lahf
jns
and
xor
leave
mov
pop
and
mov
pop
lret
push
dec
or
js
jge
mov
push
aam
mov
fidivrs
jne
and
or
pop
lret
das
pop
mov
fists
mov
cmp
pop
mov
sub
inc
hlt
int
ror
aas
mov
sarl
hlt
popf
and
adc
loope
aas
sub
pop
sbb
mov
lods
les
or
pop
dec
sbbl
in
jmp
flds
push
jge
push
pop
dec
test
xor
ret
loope
inc
jae
pop
cmp
push
rorb
jne
sqrtps
sub
rolb
pop
lcall
mov
popf
adc
inc
inc
scas
xchg
xchg
leave
xchg
inc
cmc
adc
pop
lods
xor
xchg
imul
lods
pop
shlb
movsb
push
or
imulb
rolb
add
push
pop
add
jmp
cmp
dec
cwtl
mov
mov
jbe
out
mov
scas
sub
pusha
jmp
or
inc
cmp
rorl
push
sbb
les
ds
inc
xchg
sub
pop
cmp
or
ret
test
xchg
cmpsb
into
mov
push
stc
out
xor
lock
mov
jle
xchg
rcrb
into
push
rep
test
mov
and
fistpll
rcll
add
pop
xor
pop
je
imulb
ret
es
sbb
mov
add
test
notb
xor
jle
clc
mov
inc
mov
adc
xchg
mov
dec
pop
faddl
adc
ljmp
or
lds
sbb
into
ja
fdivs
adc
mov
popa
jp
daa
aaa
inc
lea
mov
push
jbe
sbb
ljmp
popf
cwtl
dec
lods
xchg
loopne
jb
inc
jg
push
jmp
mov
mov
es
inc
movsb
mov
ret
push
inc
cld
pop
adc
shlb
mov
leave
xor
mov
cwtl
out
adc
adc
cmp
rcll
sbb
inc
or
nop
leave
mov
jns
movsl
in
dec
push
jge
test
mov
rcrb
jmp
and
xor
in
out
popf
popa
mov
test
scas
inc
dec
rol
jp
mov
sbb
pop
outsl
mov
cmp
repnz
pop
mov
cwtl
in
gs
lea
insb
je
cmp
mov
popa
or
enter
jecxz
cmp
mov
loop
add
popa
mov
popa
addr16
movsl
dec
bound
push
movsb
cmpsl
push
mov
pushf
arpl
inc
stos
adc
xchg
jg
mov
dec
adc
pop
mov
ret
push
in
lcall
cmp
jns
sub
cmp
add
lcall
rorl
loop
push
add
push
shr
sub
jecxz
imul
push
ror
push
push
xor
test
sbb
test
xchg
pop
je
imul
psrlq
xlat
shlb
jnp
scas
mov
adc
cwtl
adc
adc
adc
out
lea
inc
dec
call
insl
fwait
jge
into
cli
roll
push
dec
push
add
js
pop
test
push
jnp
cmp
jmp
jmp
mov
or
push
out
orl
popa
push
into
mov
mov
push
mov
dec
cmp
mov
movsb
inc
dec
fistpl
leave
mov
xor
into
imul
in
push
not
jb
rorb
ja
fs
sub
cmp
cmp
out
pop
xor
testb
mov
xchg
jle
imul
pop
pop
out
add
rcl
es
das
jbe
adc
addb
outsl
sub
pop
xor
stos
loope
mov
shl
jle
out
cmp
cs
sub
dec
jb
mov
inc
or
repnz
pop
push
outsl
mov
jl
xchg
les
int
hlt
dec
ffree
es
out
pop
scas
cmp
cmp
fisubs
xchg
mov
mov
dec
int
cmp
inc
inc
das
sbb
lret
in
call
pop
push
xchg
je
movsb
xchg
sub
pop
mov
out
inc
push
ss
iret
fmull
or
sbb
lea
mov
sahf
mov
test
bound
ljmp
sbb
push
mov
out
mov
loope
movsb
mov
notl
mov
mov
inc
jae
outsl
cld
js
xorb
imul
ds
movsb
add
cmp
int3
aad
xor
mov
arpl
arpl
mov
inc
sbb
cmc
xor
lahf
lret
jecxz
or
out
insl
jo
mov
in
movsb
call
mov
add
jg
leave
aad
orb
loope
loop
aam
aaa
lock
sub
das
push
rep
inc
pop
xchg
jns
or
mov
and
adc
adc
mov
xor
add
sub
mov
hlt
cmc
out
adc
add
cmp
dec
jle
mov
xlat
pop
fs
xchg
out
mov
add
xchg
mov
leave
push
loop
pop
jmp
or
hlt
movsb
mov
mov
sbb
ret
mov
jmp
in
cmp
fisttpll
mov
js
mov
jae
add
fbstp
test
ret
jg
js
adc
xchg
sbb
xorb
sub
lods
xor
xor
daa
add
xchg
test
insl
scas
leave
xor
fsubrs
fwait
and
add
push
adc
sbb
sbb
mov
push
jmp
aaa
lea
jp
enterw
loopne
mov
sub
xchg
push
cmp
xor
leave
fiadds
ja
lods
or
add
or
jne
mov
cmp
mov
dec
cmp
mov
mov
dec
push
adc
in
adc
cmp
mov
cld
or
int
aad
scas
mov
jle
mov
mov
in
push
out
dec
pusha
negb
add
or
cmp
jb
lret
jle
in
adc
shl
add
ljmp
mov
mov
rolb
lcall
orl
mov
cmp
mov
cli
jo
movsl
lock
xchg
cmc
adcb
adc
insb
cmp
orb
cwtl
js
rorl
jp
mov
push
mov
cmp
out
call
push
aas
sbb
out
stos
jns
roll
orb
xor
test
fwait
int
adcb
fincstp
clc
pushl
sbb
test
imul
jne
dec
xor
aam
imul
out
mov
lahf
stos
mov
enter
repz
sbb
insb
les
add
cmp
jge
sub
rolb
out
repz
fs
cmp
in
or
mov
mov
stc
mov
and
xchg
mov
out
sti
out
outsl
push
icebp
jmp
movsb
imul
popa
adc
cmpsb
pop
cltd
jmp
dec
imul
nop
leave
xor
lret
fmull
lods
add
insb
mov
lods
mov
and
daa
sub
xor
inc
or
push
pop
stos
mov
add
stos
or
scas
sub
push
or
mov
test
aam
or
sub
test
cmc
int3
fwait
icebp
nop
mov
adc
gs
mov
pop
shlb
loope
je
xor
adc
rcrb
dec
popa
or
icebp
je
push
mov
nop
imul
cmp
les
int
or
adc
imul
clc
mov
rorb
stos
jle
out
dec
lea
lds
test
lods
pop
xorb
xchg
test
add
or
rcrb
in
pop
sbb
cmp
mov
push
or
sub
ret
sub
mulb
out
mov
arpl
mov
aam
add
push
sbb
out
inc
shll
push
xchg
dec
out
mov
movsl
push
xchg
jg
add
add
inc
push
push
sub
dec
pop
mov
xchg
add
scas
leave
hlt
and
or
out
add
mov
or
inc
iret
push
mov
adc
out
insw
cmp
inc
and
out
cld
pop
sbb
ficomps
cmpsl
outsb
push
pop
dec
ds
mov
jnp
je
dec
mov
out
pop
inc
mov
mov
in
pop
lcall
loope
outsb
or
push
bswap
mov
je
loopne
into
inc
lods
aaa
imul
lcall
cmpsl
push
loop
sub
daa
fisttps
loope
rcrl
cmpsb
jb
addl
das
dec
out
orl
aad
lock
pop
mov
in
xor
divl
mov
ffreep
push
test
cs
repz
cmpsl
jne
mov
push
and
or
and
push
lds
das
push
sbb
mov
dec
loope
push
inc
test
push
notb
ret
das
sub
subb
dec
rclb
sahf
std
push
mov
adc
rcrb
lahf
outsl
lcall
mov
int
pop
shl
sub
stos
repz
pusha
rol
push
mov
jnp
sbb
test
imul
adc
aas
mov
mov
push
mov
mov
cmp
xchg
pmulhw
dec
scas
dec
sti
dec
gs
popa
mov
sbb
dec
lcall
adc
xor
mov
fistpll
aas
int
je
push
cwtl
xchg
cmc
cmp
sahf
loope
cmp
adc
mov
push
sbb
xor
push
xchg
and
add
fistpll
bound
out
ret
cwtl
out
adc
jl
shl
int3
imul
cmp
xlat
in
inc
decb
aam
dec
and
out
xor
mov
and
lret
lret
outsl
jg
repnz
sub
cmp
outsb
push
inc
pop
xchg
lods
add
xor
mov
sub
adc
mov
stc
fbld
mov
cmp
outsl
mov
aam
sti
sub
imulb
lcall
push
stc
add
popa
or
dec
lret
push
mov
sub
mov
lret
xor
add
mov
cld
push
icebp
push
mov
data16
ffreep
iret
jl
call
bound
fcmovnb
call
sbb
xchg
xchg
mov
rcr
xor
out
push
data16
mov
lock
pop
xor
aad
or
push
shl
push
lods
jle
int
lcall
push
mov
dec
add
es
mov
rcrl
xchg
or
jmp
push
jne
imul
xchg
inc
rorb
jnp
inc
stos
lret
cmpsl
sbb
jns
les
stos
outsb
jp
daa
and
shlb
mov
or
push
dec
icebp
int3
inc
push
loop
out
lret
sub
and
lahf
pop
mov
lds
movsb
push
pop
xchg
insb
lds
jg
mov
fisubs
inc
ds
loop
lods
push
outsl
sti
in
loop
and
jmp
loope
test
xor
stos
clc
sbb
pop
xchg
test
mov
imul
loope
cmp
outsl
aam
pop
jne
ret
out
mov
ret
fnstsw
cmpsb
jmp
sbb
nop
js
loop
xor
cmp
lcall
push
xor
inc
pop
in
data16
pop
cmp
subl
mov
mov
xor
pop
jl
imul
test
mov
enter
fldenv
inc
adc
cmp
gs
fiadds
mov
push
mov
xor
xor
mov
cmpsb
arpl
in
dec
ret
dec
or
mov
push
adc
mov
test
sbb
scas
mov
pop
xor
arpl
push
cltd
std
mov
pop
bound
and
cmp
out
ret
es
cmp
repnz
insb
add
push
inc
outsb
jp
ja
xchg
icebp
adc
push
push
mov
shlb
adc
dec
push
test
loop
pusha
mov
icebp
frstor
xlat
pop
add
call
fwait
inc
mov
in
sub
push
pushf
gs
inc
ja
xchg
pop
imul
cwtl
inc
insl
pop
cwtl
mov
lea
aas
adc
mov
cld
sbb
int
xrelease
inc
mov
std
pushf
ljmp
xchg
ret
sarl
shll
fdivrl
inc
adc
xor
sbb
es
push
rorl
test
mov
sbb
stc
add
pop
iret
sub
orl
mov
sbb
sub
nop
mov
jne
cld
in
pop
jo
jns
insb
xchg
xchg
ficompl
and
adc
in
pop
inc
mov
lret
cmp
je
dec
stos
sub
std
je
cld
test
sub
jbe
mov
sahf
movsb
pop
mov
into
lods
cmp
sbb
jb
add
sahf
je
test
sbb
sub
test
sub
and
call
inc
loope
jb
stc
lods
and
pop
daa
ret
add
pop
jecxz
movsl
mov
jo
sub
xchg
mov
add
int
scas
jne
ds
jecxz
xchg
mov
add
adc
pop
push
sbb
hlt
fcompl
sahf
cmp
enter
popa
dec
lahf
rolb
pop
stos
iret
stos
shlb
bts
sbb
scas
std
add
mov
push
mov
cwtl
xchg
scas
in
adc
cmp
sbb
mov
out
test
rorb
mov
daa
adcb
loop
inc
sub
decl
addb
shrb
xchg
lahf
movsb
sti
adc
mov
push
orb
pop
inc
pop
xchg
xor
lods
inc
add
and
mov
jne
clc
dec
mov
adc
pusha
loope
mov
sbb
bound
xchg
add
inc
jns
mov
xchg
jae
jmp
out
xchg
insl
cmp
adc
sub
xor
cmp
push
cli
and
out
aaa
mov
xchg
mov
fdivrp
mov
mov
shll
push
flds
add
js
mov
in
jle
inc
adc
sbb
push
add
out
mov
scas
jns
or
or
movsl
push
int3
xor
lds
fs
jle
fdivl
adc
sbb
lret
out
dec
lahf
adc
loopne
sahf
clc
push
icebp
movl
jo
xor
add
negl
leave
sub
popa
add
cmp
repnz
fcmovne
fstpt
fsts
xor
pop
orb
cld
xor
push
subl
fsub
idivl
jne
push
leave
cmpsl
rcl
mov
sbb
xor
or
adc
pop
jle
pop
push
cmp
stos
fldl
inc
movsb
orb
pop
sub
arpl
dec
mov
psubsb
sub
ds
loopw
cmp
and
mov
or
sub
cmp
int3
and
inc
sub
mov
or
xchg
mov
sbb
fwait
mov
pushf
mov
aas
mov
stos
mov
inc
sbb
nop
push
daa
jns
jmp
inc
adc
xor
sbb
xchg
xchg
mov
jp
fcmovb
cltd
ret
mov
dec
dec
push
repz
negl
mov
ret
dec
jae
mov
int
lods
lret
cmp
sub
out
movsl
cli
nop
inc
lods
xchg
loopne
movsl
jne
xor
loopne
pop
xchg
std
cltd
push
jmp
mov
jns
pop
mov
jb
adc
dec
cwtl
outsb
pop
pop
mov
repnz
mov
xor
outsb
fwait
test
les
scas
in
std
fldl
pop
arpl
repz
inc
pusha
outsb
lods
pop
mov
dec
in
xor
adc
mov
loopne
push
adc
xor
push
mov
mov
aad
dec
push
xchg
pop
xor
das
dec
sub
pop
sti
sbb
in
rorb
sarl
cld
dec
shll
lock
ret
cmp
xchg
pop
add
add
pushf
shl
xchg
cs
xlat
lock
lret
inc
mov
pop
repz
push
add
jmp
push
scas
sub
pop
sub
imul
mov
cmp
fucomp
pop
les
sub
std
mov
mov
aaa
ja
fcomps
sbb
adc
or
or
movsb
aas
jmp
mov
popa
add
sub
xor
pop
jmp
push
in
dec
shrl
lock
dec
shll
ret
jle
aaa
insl
mov
jecxz
push
pop
add
push
in
insb
adc
mov
jp
or
inc
scas
push
inc
in
rorb
lahf
pop
popf
divl
dec
rorb
dec
xchg
cli
jne
mov
sub
cld
xor
dec
pushf
or
enter
lcall
push
out
add
xor
out
adc
scas
xchg
arpl
inc
push
jge
add
in
outsb
enter
mov
mov
or
mov
enter
pop
fs
cmp
ret
mov
jnp
xor
fisubs
push
adc
xchg
xorb
dec
dec
mov
cwtl
out
inc
popa
push
fbstp
add
scas
ljmp
std
icebp
sub
daa
ljmp
sub
adc
cltd
push
inc
mov
rcrl
shll
js
movsl
das
and
jo
cwtl
pop
xor
repz
pop
icebp
cmpsb
cmp
cli
pusha
pop
push
cmp
jecxz
aam
sti
test
add
mov
nop
or
cmpsl
mov
icebp
dec
dec
lret
dec
std
mov
push
mov
mov
jle
aas
icebp
or
inc
sbb
add
push
xor
and
adc
sbb
loop
les
xor
mov
xchg
jnp
sbb
aas
out
sub
loop
push
or
lret
mov
jne
mov
cmp
add
adc
adc
nop
adc
in
cltd
ret
ja
rcl
adc
sub
cmp
push
pop
mov
mov
xor
inc
push
xchg
xorb
pop
push
shlb
addl
cmp
xorb
jbe
fidivrs
add
push
mov
push
cmc
mov
push
inc
dec
push
pop
imul
hlt
arpl
ss
out
outsl
jge
cli
and
cmp
lock
jne
mov
arpl
in
lock
jne
test
cmpsl
sahf
add
mov
xor
pop
xchg
das
pop
inc
out
rolb
adcb
add
xlat
xchg
mov
subb
test
testl
mov
sti
pop
imul
mov
scas
test
push
xor
loope
xchg
sti
sub
pop
js
enter
xor
dec
sbb
sub
imulb
add
adc
push
shlb
dec
enter
pop
cmpsl
imul
icebp
ljmp
pusha
pushf
outsb
dec
or
inc
ficompl
mov
add
das
pushw
insb
xor
int
inc
cs
pop
nop
ja
jge
ficoml
sub
fwait
mov
push
mov
jg
cli
and
out
mov
xor
cld
nop
push
mov
cli
loopne
xlat
xchg
bound
mov
xchg
jge
in
lds
xor
mov
int3
sbb
sbb
ja
lahf
shlb
andl
pushl
sub
sbb
xor
sub
mov
repnz
inc
dec
sub
pop
push
rcrb
lcall
or
shll
cltd
repz
pop
mov
stos
mov
pop
mov
lds
cmp
iret
cmpsb
xchg
icebp
mov
sbb
daa
imul
inc
xchg
imul
ret
lahf
mov
icebp
jl
pop
adc
sbb
push
push
adc
and
ja
popa
je
mov
shlb
and
lcall
lcall
xchg
fbld
addr16
test
out
add
and
sub
mov
inc
adc
mov
add
xlat
mov
aaa
push
xchg
out
sbb
and
mov
dec
pop
hlt
jecxz
outsb
jp
pop
xor
push
dec
xchg
insl
addr16
cmp
xchg
test
xchg
mov
pop
jns
xchg
and
test
ret
mov
sub
insb
imul
pushf
jl
nop
nop
mov
jbe
data16
jecxz
movsb
pop
leave
mov
ret
jbe
mov
ds
aad
mov
pop
popa
xor
sbb
mov
in
shr
fmull
jge
pop
cltd
call
insb
sub
cmc
jp
pop
scas
or
das
add
pop
cmc
mov
xchg
out
test
lea
fmuls
xchg
sub
or
fcompl
cmp
inc
sub
fmul
scas
cmp
pop
dec
add
pop
cmp
mull
lret
lds
std
sbb
mov
add
and
add
fdivs
dec
paddusw
pop
xchg
sbb
rorb
cmp
out
and
sbb
sub
shl
xchg
push
std
cmc
xchg
dec
push
mov
jge
out
mov
je
sahf
jno
in
add
xor
scas
decl
push
push
jle
andb
testl
inc
mov
sbb
cli
stc
lock
jb
jae
stc
mov
dec
test
leave
js,pt
push
icebp
push
icebp
jbe
mov
jle
add
xor
dec
mov
adc
and
push
push
push
add
mov
sub
fwait
push
nop
inc
nop
sub
ja
cmpsb
cmp
fisubs
mov
and
in
xchg
jno
into
cmc
in
repz
stos
sbb
and
pop
addr16
sub
cmp
add
jbe
out
add
cmp
pop
pop
mov
or
je
data16
or
ret
inc
add
or
sbb
icebp
cmp
pusha
inc
cmpsb
aam
sub
adc
or
lods
add
sbbl
pop
fildl
movsb
and
test
dec
mov
cltd
int
arpl
jae
shrb
out
push
call
mov
sub
mov
loopne
pop
test
adc
jmp
enterw
and
sub
push
add
pop
imul
hlt
es
mov
call
dec
shlb
sub
aas
fwait
das
adcb
xor
movsb
xchg
mov
lds
nop
in
push
adc
cmp
and
cmp
addb
fcos
lods
pop
icebp
ja
out
lret
dec
sub
sbb
adc
movsl
or
lds
dec
and
xchg
jg
pop
xor
sarl
and
inc
movsl
sbb
test
xorl
mov
pop
add
loopne
cld
or
popf
pop
mov
rcrl
dec
mov
pop
testb
ljmp
data16
dec
cmp
mov
leave
mov
dec
xor
fnstenv
ljmp
ret
and
add
ljmp
lods
lahf
cmp
xlat
sbb
outsb
les
mov
or
pop
push
xor
aad
adc
xlat
push
sbb
adc
inc
scas
adc
fisttps
sub
outsb
mov
xor
stc
js
jg
cs
and
sbbb
xchg
andl
jl
movsl
sub
xchg
mov
in
sarl
aad
xchg
rcrb
in
push
mov
pop
cmp
and
das
lock
gs
iret
mov
out
scas
xorb
bound
inc
mov
pop
and
pop
leave
scas
outsl
stos
jg
jmp
in
dec
or
pusha
pusha
stos
push
pop
mov
rorl
pop
inc
outsl
push
sbb
in
mov
stc
xor
fimull
lods
adc
and
pushf
mov
dec
lea
lret
insl
cmc
rcr
jb
mov
jle
scas
mov
out
mov
cmp
std
leave
adc
push
cmpb
sarl
arpl
lret
add
adc
rcll
jae
fwait
adc
enter
dec
push
scas
jge
adc
jnp
das
leave
int
adc
bound
cmp
xchg
or
pusha
call
hlt
das
inc
mov
xor
cmc
shll
jl
xchg
lods
inc
js
cmp
pop
sub
insl
cli
mov
inc
cwtl
dec
outsb
in
dec
shll
mov
loopne
mov
out
outsb
adcl
outsb
popa
sub
pop
dec
mov
es
lds
sub
pop
mov
xchg
cmpsb
cmp
data16
mov
cmp
cs
scas
push
lcall
mov
ficomps
sbb
stos
and
scas
adc
or
push
pop
mov
sbb
inc
xchg
xchg
sbb
aam
cmp
fisubs
adcw
sub
cld
lods
cmc
sbb
inc
out
fisttpl
pop
mov
push
adc
cmovo
mov
stos
orb
lahf
js
mov
stc
movsb
pop
jl
or
adc
inc
fcompl
push
ficoml
stos
inc
test
xchg
or
mov
inc
cmc
xchg
cmp
xchg
mov
mov
scas
push
mov
cltd
mov
mov
push
hlt
pushf
flds
xchg
mov
or
aas
or
adc
je
addr16
dec
and
lcall
pop
sbb
shrb
mov
inc
xchg
adc
adc
test
jbe
jo
sbb
mov
xchg
mov
mov
dec
cs
hlt
shl
popf
sub
pop
xlat
rorb
jmp
fsts
mov
flds
add
adc
push
sbbb
and
popa
and
sarb
fwait
in
jne
add
test
rol
fsubs
addb
push
jl
leave
daa
ret
outsl
js
ficoml
aaa
xor
shlb
or
push
cmpsl
dec
outsb
insl
xor
dec
out
xor
test
sbb
xchg
testb
outsb
xchg
addr16
pusha
mov
mov
sbb
mov
in
mov
inc
imul
ffree
bound
xor
call
jge
fs
mov
pop
pusha
roll
mov
sbb
xor
inc
push
dec
adc
fwait
xlat
mov
dec
adc
inc
repz
lahf
mov
xchg
jnp
or
or
cmpsb
push
cmp
dec
jno
xchg
das
xchg
insl
mov
rclb
movsb
into
cmp
out
enter
push
xchg
and
les
push
sbb
ret
mov
loope
and
xchg
mov
jae
jns
scas
test
dec
out
mov
mov
pusha
pop
xchg
insb
leave
mov
xor
stos
sbb
shll
ljmp
iret
inc
in
aam
sub
insl
xchg
lret
imul
sahf
dec
mov
xchg
dec
inc
negl
and
popf
jae
mulb
inc
sub
shll
xor
cli
lret
pop
pop
jns
insb
stos
sbb
sbb
dec
push
sbb
or
sbb
inc
sub
pushf
je
iret
adc
lret
sub
xchg
mov
add
cmp
dec
arpl
pop
lea
sti
fcoms
sbb
mov
and
ja
inc
das
das
outsb
fcoml
jecxz
xchg
push
add
nop
dec
sbb
xchg
arpl
add
jmp
push
adc
cmp
cld
scas
adc
fdivl
adc
movsl
mov
push
movsl
test
pop
aas
cli
fidivl
arpl
push
adc
gs
jmp
jae
jl
and
xchg
sub
lds
and
inc
in
cmpsl
fldt
ret
mov
js
push
inc
xchg
lret
push
add
jmp
shll
inc
add
imul
mov
jp
dec
lcall
jg
dec
rcll
addr16
ds
mov
or
pop
mov
jl
repnz
fldenv
sub
pop
inc
aam
xchg
outsb
stc
repnz
int3
jl
pop
call
popa
pop
and
pushf
jnp
mov
mov
gs
xchg
add
mov
pop
fstpl
dec
clc
outsl
push
je
adc
in
push
sbb
punpckhwd
adc
insl
sub
dec
scas
imulb
xchg
cmc
pop
sar
movsl
fwait
or
mov
leave
sarw
roll
mov
mov
sti
nop
cwtl
fstpl
push
xchg
adc
test
sbb
jmp
sahf
xlat
ss
xchg
and
into
sub
popf
cltd
stc
xchg
sub
fldlg2
add
popf
xchg
ret
lcall
and
lcall
lods
mov
push
jmp
xchg
inc
sarl
xchg
push
jmp
cmp
loopne
roll
adc
or
adc
daa
jb
pop
mov
movsb
fwait
repz
popa
divb
and
mov
fcmovb
sub
andl
test
out
cmc
inc
push
popa
fadds
fmull
ja
mull
push
repz
data16
xchg
subl
adc
fldt
outsl
xchg
popf
sbb
adc
loopne
and
je
adc
push
mov
gs
xchg
xchg
lahf
sub
cmc
out
pop
cmp
insb
cmp
dec
mov
jmp
push
mov
rcrb
mov
mov
add
mov
sbbb
int
movsb
xor
in
lret
outsl
pushf
jl
sbb
dec
sub
xlat
test
icebp
test
mov
dec
cs
sarl
imul
aad
scas
mov
and
push
cwtl
mov
jmp
test
jne
adc
aad
movb
adc
or
outsl
lock
jns
xor
loop
pxor
cmpsb
int3
push
inc
data16
pop
pop
popf
mov
nop
pmullw
mov
or
lock
test
sub
jo
sub
arpl
inc
out
mov
icebp
cmpsb
and
push
cmc
imul
dec
js
out
lea
sbb
xor
lret
cmp
push
mov
mov
scas
and
les
sahf
mov
push
xor
jnp
push
mov
jae
pop
mov
jmp
mov
ret
dec
jecxz
lods
jo
lret
fiadds
cs
push
mov
adc
daa
xchg
mov
mov
das
sbb
sub
xchg
repnz
xchg
and
mov
addr16
and
push
mov
adc
or
and
movsl
leave
in
xchg
pop
fsubl
fldt
dec
cmp
jmp
jl
dec
mov
nop
das
sbb
sub
xlat
fcoml
xor
stc
repnz
scas
das
mov
aas
adc
inc
ljmp
mov
es
out
pop
or
jne
sbb
dec
cli
pop
dec
sbbl
aas
push
cmp
lods
inc
xchg
cltd
mov
lds
filds
ds
cmpsl
shrb
cmp
pop
sub
mov
push
test
push
pop
mov
push
clc
mov
pop
pop
jp
cli
adc
sub
cwtl
mov
add
cmp
push
inc
lods
in
imul
ret
adc
push
mov
mov
cmp
aas
orl
popa
popf
rcr
imul
pop
loop
adc
bound
xlat
mov
bound
mov
inc
lods
mov
enter
cmc
push
xchg
lea
insb
inc
sbb
and
out
aaa
pushf
jge
dec
jmp
inc
mov
adc
pop
and
add
pop
aam
pop
sbb
mov
cmp
pop
negb
dec
push
ljmp
mov
scas
mov
adc
daa
pop
push
lret
mov
mov
or
cmp
adc
fldcw
xchg
imul
scas
pop
ds
rorb
mov
aad
adc
ret
dec
loop
push
inc
push
cmp
arpl
pushf
repnz
sahf
dec
sti
movsl
or
sbb
pop
mov
mov
mov
repz
es
fwait
icebp
inc
mov
outsb
pop
pushf
jo
nop
inc
inc
mov
ret
mov
outsb
stos
dec
cmp
and
mov
dec
ds
jg
xchg
or
add
ret
cmp
and
lock
adc
or
data16
loop
ss
stos
and
arpl
mov
sbb
pushf
inc
fwait
xchg
xor
fnstsw
inc
sbb
adc
icebp
xchg
daa
jle
xchg
push
sarb
dec
jecxz
mov
and
shr
popa
into
cmp
inc
cld
xor
mov
dec
aaa
jb
outsb
jl
das
call
cmp
sub
lret
imul
int3
push
ljmp
mov
lds
arpl
and
adc
rorl
sbb
jg
hlt
dec
mov
xor
movsb
sbb
cmc
icebp
inc
les
push
andl
or
push
cmp
sbb
mov
das
sbb
ffree
sbb
jbe
out
mov
loope
test
and
cmove
out
sahf
mov
ret
push
aas
jns
add
sbb
iret
sbb
insb
pop
pop
rcrb
dec
jb
dec
mov
push
or
enter
push
mov
inc
std
jge
mov
cli
xor
out
lcall
loopne
push
and
jp
dec
and
xor
push
push
test
jge
stc
in
inc
lea
jbe
loopne
mov
fisubrs
xchg
mov
push
les
jg
mov
les
inc
subl
and
or
xor
adc
push
mov
fwait
addb
ljmp
jge
outsb
fcom
xor
sbb
pusha
testl
jo
xor
nop
rclb
or
push
and
mov
cmp
mov
and
mov
jecxz
cld
jp
pop
cmp
mov
adc
mov
in
cmpl
mov
add
xchg
or
jae
mov
mov
push
call
and
mov
jmp
lret
ljmp
add
leave
jg
sub
xlat
pop
pop
push
int3
hlt
dec
insb
fcompl
push
mov
mov
dec
jmp
insb
or
enter
push
xchg
inc
sti
add
mov
inc
sbb
mov
nop
jle
mov
fnstenv
mov
rol
stos
sarl
adc
lods
daa
inc
movl
dec
xchg
and
pushf
mov
ficoms
aaa
es
or
int3
loope
push
dec
sub
xor
mov
loope
imul
jnp
dec
cs
xor
jo
pop
adc
dec
sbb
stc
pcmpeqw
push
shlb
pop
pusha
cmp
sub
fistpll
in
pcmpeqw
into
push
mov
xor
and
inc
xlat
xchg
jne
mov
mov
and
mov
inc
dec
xor
jbe
xor
std
mov
or
mov
xchg
dec
inc
sub
test
pop
andl
jbe
push
cli
aas
daa
shrl
xchg
imul
lahf
inc
pop
lea
and
lods
or
mov
push
mov
jecxz
mov
mov
cmp
sti
sti
jbe
sbb
mov
or
push
sbb
mov
iret
push
dec
dec
data16
push
push
jg
out
jb
cwtl
lock
pop
insl
int
leave
mov
lret
fcoms
xchg
or
xor
subl
popa
in
mov
xchg
or
pop
adc
in
repnz
jg
adc
pop
int
cli
scas
ret
aaa
push
test
or
into
inc
pop
lds
loop
leave
mov
sub
bnd
push
cmp
mov
mov
pop
and
xchg
sbb
push
push
ficompl
shrl
adc
int
mov
int3
cmp
jae
sbb
xchg
bound
sarb
pop
icebp
movsl
loopne
dec
cmc
add
sbb
dec
lock
pop
jns
jns
int
daa
aaa
in
lods
rolb
into
iret
dec
mov
mov
fwait
adc
movsl
jnp
jmp
repz
and
ret
jmp
shrb
adc
outsl
out
cmpsl
aam
mov
hlt
sbb
movsb
mov
dec
mov
jmp
xchg
xor
xor
pop
das
jecxz
ja
jp
test
cs
add
xor
movsb
call
sti
lea
add
insb
xchg
cmp
popa
mov
sub
mov
jmp
push
adc
data16
mov
not
pop
xchg
mov
jne
sti
inc
or
out
xorl
sub
filds
loop
push
dec
sub
arpl
adc
jns
mov
dec
lret
pusha
cmp
xchg
jns
out
enter
lock
mov
loop
add
or
jecxz
mov
mov
push
fisubl
dec
scas
mov
in
in
fsubs
push
popf
cli
popa
arpl
and
xchg
jl
ret
push
sub
pusha
xchg
mov
sbb
sbb
pusha
scas
add
out
fdivrp
fsubr
mov
inc
jl
jno
test
or
insb
add
movsb
into
test
sub
test
lret
xchg
rorb
mov
repz
xchg
inc
sub
dec
stc
sbb
sub
mov
pop
or
lahf
je
xor
imul
mov
nop
popf
addl
out
xor
xor
xchg
add
pop
sti
and
stc
scas
fnstsw
ja
adc
sub
es
dec
mov
xchg
pop
loopne
lret
ss
lret
jge
adc
fwait
and
jg
popa
sbb
xchg
and
rcl
idivl
dec
xchg
fsubl
xchg
movsl
popf
cmpb
xchg
lahf
cltd
fistl
ret
inc
int3
inc
jg
mov
repnz
fmul
pop
jecxz
scas
jmp
adc
sbb
aas
add
popa
dec
xchg
inc
ljmp
outsl
pop
mov
cmp
inc
add
insb
lea
pusha
lods
aad
fistpll
mov
pop
cld
cmp
stc
sbb
outsl
push
inc
out
arpl
mov
sti
cmpb
add
pop
mov
dec
fwait
jno
jns
and
xor
lea
outsb
xor
ja
xor
or
and
nop
inc
mov
mov
or
mov
hlt
inc
xchg
loop
out
pop
jnp
jb
repz
mov
divb
cli
mov
mov
push
imul
cmpsl
jg
cli
in
cwtl
pmulhw
xlat
outsb
cmp
jl
iret
cmp
shll
test
or
fbld
and
jmp
cli
and
mov
sbb
jbe
pop
enter
pop
arpl
cmpsl
lock
or
and
jnp
sub
jne
adc
xchg
mov
fcomp
test
clc
std
stc
mov
dec
icebp
lock
cmp
jno
arpl
stc
mov
mov
sub
std
popf
adc
pushf
int3
mov
hlt
jnp
or
mov
mov
cmp
lret
sub
cmp
adc
pop
xchg
xchg
fistl
sti
aam
ds
cmc
adc
or
xor
in
aaa
stos
subb
push
xchg
jae,pt
sar
ja
loopne
sbb
fadds
divb
dec
mov
push
popf
test
fidivrs
in
mov
add
arpl
add
or
pop
fwait
pop
xor
add
jecxz
popf
shr
xor
sti
ds
sarl
lea
roll
cmpsl
adc
xchg
rclb
repz
adc
pop
out
rolb
pop
cmp
out
outsl
lret
imulb
and
loop
minps
sub
cmp
mov
and
pushf
arpl
jmp
mov
rcrb
and
imull
cld
jne
fwait
pop
mov
gs
add
fidivl
stos
scas
jmp
inc
in
xchg
in
popa
loop
repz
pushf
mov
insl
adc
sti
push
jno
pop
sbb
fldenv
dec
or
int
sub
scas
add
sbb
add
mov
sti
add
ss
loope
mov
stos
sti
adc
push
jge
movsb
cltd
out
pop
mov
push
int
lea
xchg
fucomi
ret
cmp
aaa
in
mulb
inc
pop
mov
push
jns
movsl
mov
mov
and
sub
and
shr
mov
xor
repnz
in
mov
sbb
or
dec
mov
cmc
les
sub
bound
scas
ficoms
mov
and
xlat
sub
cld
arpl
lret
jbe
mov
add
or
xor
fbstp
shlb
or
mov
pop
mov
out
loope
xchg
test
loope
xorb
push
cmc
mov
push
mov
mov
mov
dec
push
push
mov
inc
cmp
loope
hlt
insb
sahf
ds
cmp
bound
sbb
xor
push
testl
cmpsb
es
mov
dec
pop
call
sbb
jnp
cmp
lcall
popa
jp
roll
aad
jns
sbb
jae
or
arpl
or
fists
xor
pop
sub
fs
jns
adc
cli
lcall
inc
add
dec
out
sub
movsb
jecxz
xor
das
cmpsl
or
ss
jge
pop
mov
mov
pop
jae
dec
xlat
bound
xchg
add
adc
or
inc
and
jbe
fidivrl
sarb
sbb
inc
aas
in
xor
pop
orl
xor
es
out
dec
inc
out
pop
xchg
scas
movsb
cs
fdivrl
js
dec
mov
aam
sub
inc
xor
xor
std
push
pop
xchg
inc
add
mov
lahf
cmc
testb
iret
cmp
mov
xor
sub
ljmp
fildll
cmp
xor
ss
ret
or
cmpsb
fbstp
sahf
xor
mov
push
imul
fisttps
mov
xchg
pop
inc
mov
fdiv
mov
mov
add
roll
push
daa
test
pushf
push
cmp
xor
cmp
decl
xchg
inc
inc
test
sub
mov
cmp
add
mov
ljmp
push
lret
imul
xor
inc
adc
shll
in
adc
test
inc
in
add
push
add
data16
stc
pop
aam
inc
in
je
pushf
fsts
test
sub
ds
testb
mov
pop
xor
adc
lods
adc
les
pop
jne
call
in
loopne
pop
inc
sub
rol
cwtl
clc
push
jne
sub
cld
pop
pusha
aad
mov
ror
jbe
sbb
fidivrs
dec
jle
pop
cmp
push
int
imul
cmp
ja
clc
mov
xchg
adc
mov
in
jae
mov
add
rorb
fisttpll
mov
lret
sub
push
inc
sbb
and
jge
imul
cmpsb
sete
sarl
xor
add
cmp
or
inc
das
push
test
xorl
cmc
sbb
fldz
pop
push
pop
xor
lahf
xor
cltd
pushf
push
add
add
mov
pop
test
andl
iret
icebp
inc
xor
cmpb
sarb
lods
jecxz
dec
shrl
push
call
sbb
cltd
xor
test
push
xchg
hlt
stos
aam
push
aam
fidivrl
dec
pop
or
cmp
popf
std
outsb
xor
cld
pop
pusha
ss
and
loope
pop
gs
outsb
or
dec
lock
movsb
pop
lea
lret
notb
loop,pt
mov
jmp
push
inc
jp
xchg
push
mov
in
or
adc
pushf
inc
ret
call
xchg
xchg
inc
in
inc
icebp
pop
pop
xchg
fldenv
mov
push
pop
mov
fstps
dec
sti
jbe
inc
sti
into
mov
fbld
cmpsl
sbb
add
mov
inc
scas
test
lcall
mov
test
sub
and
sub
add
mov
fdivr
stc
dec
xor
std
cmp
mov
enter
fdivrp
push
cmp
sub
push
pop
jmp
adc
divb
adc
loopne
data16
mov
add
les
mov
pop
lods
xchg
add
adc
mov
imul
sbbl
ds
fisttpl
mov
xchg
jbe
lcall
into
adc
and
xchg
dec
pop
pop
xchg
inc
cld
and
adc
cmp
and
out
and
cmp
ror
lods
out
jns
mov
test
xor
fisttpl
push
mov
inc
jne
int3
out
jo
sub
or
cld
xchg
push
cmp
fstps
cmc
stos
ds
pop
fstps
pushf
pop
mov
and
xchg
fidivrs
sub
xor
xchg
jb,pt
arpl
aam
sbb
push
movl
js
pop
adc
or
icebp
clc
scas
shll
mov
jp
and
cltd
inc
ja
scas
iret
push
dec
dec
mov
pop
int3
mov
mov
jmp
sub
mov
int
mov
aaa
push
pop
fisubrl
pop
push
frstor
pop
mov
cwtl
add
xchg
add
mov
daa
int
icebp
test
adc
cmp
add
loopne
pop
cmp
mov
dec
lods
cmpsb
mov
sub
jns
xchg
inc
add
cld
aam
pop
cld
sbb
iret
dec
inc
aam
lea
xchg
loope
cmp
inc
push
repnz
mov
insl
hlt
mov
repnz
ja
mov
add
nop
aaa
hlt
into
mov
dec
jle
dec
mov
das
pop
lock
in
fdivrp
repz
mov
sbb
sbb
mov
cmp
test
in
lods
decl
cli
push
lds
add
and
cltd
scas
in
std
push
dec
sbbl
testl
int3
sbb
dec
pop
push
call
adc
inc
lret
int
pop
stos
lret
pop
mov
aas
mov
mov
dec
aas
loopne
xchg
xchg
js
xchg
stos
popf
adc
mov
in
mov
adc
xchg
dec
pop
jp
dec
fstpl
xor
into
mov
lcall
rcr
mov
movsl
cmp
jmp
jmp
pop
test
adc
cmpsb
leave
cmp
mov
xorl
cli
fldl
dec
daa
lea
or
and
and
and
sub
mov
ret
jl
bound
inc
mov
push
les
jo
jno
inc
cmp
cmp
mov
insb
rcrl
in
push
dec
mov
cmp
lea
stos
push
fadds
arpl
push
mov
jnp
push
fnsave
out
sub
mov
mov
cs
lods
push
in
call
sub
push
aas
sbb
fcompl
pop
in
jne
je
mov
cmpsb
jns
jbe
sub
in
mov
pusha
divl
es
mov
stc
insl
cli
push
mov
dec
dec
das
icebp
sbb
push
mov
dec
mov
mov
pop
lcall
add
xor
push
xchg
sbb
pop
iret
mov
jbe
data16
and
mov
xchg
jbe
out
aaa
or
aaa
and
ret
fwait
sub
and
pop
mov
pop
mov
popa
cmp
mov
dec
je
mov
shrb
mov
into
loope
dec
test
inc
cs
mov
push
push
stc
mov
add
push
sbb
mov
insb
lods
rcll
cmp
push
or
xchg
mov
adc
mov
iret
xor
sarb
or
add
or
loope
lods
clc
in
mov
arpl
mov
dec
movb
jg
sbb
jl
sub
pop
jl
out
movsb
test
sbb
adc
mov
xor
mov
mov
ljmp
shrb
mov
enter
sti
cmp
add
shll
mov
jo
xchg
clc
sub
in
mov
or
das
adc
lret
es
push
rcll
xor
rolb
testb
xchg
jns
iret
and
mov
adc
das
stos
lret
iret
in
and
dec
cmp
int3
or
and
lods
adc
loopne
jae
xchg
inc
push
fsubrl
insb
cltd
jp
xchg
mov
imul
push
inc
jle
pop
loopne
xchg
inc
push
lds
pop
ja
sarl
ljmp
ja
bound
and
in
jbe
mov
jecxz
jne
xchg
cwtl
in
adc
hlt
loope
sbb
adc
loope
rolb
dec
inc
xchg
dec
bound
xchg
lods
rcll
fildll
sub
cs
push
add
fcmovnb
mov
stos
lahf
jp
mov
fdivs
cli
test
lcall
xchg
out
dec
test
jb
loop
inc
in
loope
sbb
shrl
jnp
sub
sbb
pop
xchg
lds
pop
popf
jnp
in
mov
andl
sub
fs
pop
xchg
cwtl
mov
mov
jbe
sahf
jmp
call
lret
sbb
dec
mov
negb
inc
js
jle
sbb
adc
push
stc
in
fstps
stos
sub
xchg
xchg
adc
cmp
lods
jae
bound
jb
push
xor
cmc
mov
mov
mov
dec
pop
pop
inc
sub
or
sbb
in
jbe
fwait
inc
std
pop
mov
int
xchg
data16
pop
or
mov
cmp
sub
lock
adc
push
xor
mov
sub
pusha
stos
jns
stc
dec
data16
js
int3
fstpt
subl
bound
imul
add
ljmp
sarl
mov
orl
pop
pop
arpl
mov
push
enter
adc
jo
shll
push
ljmp
fsubrs
outsb
mov
xor
ret
fwait
mov
les
mov
xor
inc
add
in
cmc
mov
roll
xor
fs
or
repz
xchg
mov
push
imul
les
add
mov
push
or
cmp
lock
movsl
mov
mov
or
xor
out
mov
in
fistl
push
inc
dec
aas
adc
add
cmp
cld
cmpsl
sub
test
lds
lods
psubsb
cmp
mov
push
cli
int
push
inc
outsb
or
lods
pop
jge
bound
js
or
daa
lods
mov
jge
dec
icebp
xchg
jecxz
push
cmp
movsl
mov
add
jge,pt
stos
dec
test
xor
mov
andb
rclb
es
mov
cmp
mov
mov
adc
push
gs
in
xchg
std
jnp
sti
in
dec
daa
jbe
fisubs
push
sub
jb
stc
mov
mov
cmpsb
and
xchg
enter
rcrb
push
and
dec
clc
cmp
xchg
sbb
xlat
or
int
mov
gs
cmc
mov
sti
outsb
sbb
cmp
lret
imul
pop
jns
pop
xor
into
jmp
loopne
pop
les
mov
lahf
out
movb
add
ds
cmp
andb
pop
lea
jmp
faddl
pop
xor
aaa
popa
in
clc
frstor
lods
lret
inc
shll
jo
sti
adc
push
inc
dec
jle
aas
out
jge
inc
rol
adc
lods
outsb
arpl
test
cs
pop
xor
ret
aam
dec
mov
add
jecxz
notb
stos
stos
mov
add
xor
and
imul
or
arpl
js
xlat
pop
adc
popa
ror
xchg
imul
mov
push
jne
inc
stos
cmp
nop
pop
mov
mov
jns
pop
push
push
daa
jmp
push
pop
lea
jmp
cmc
mov
sub
inc
add
enter
mov
cmp
xchg
sbb
push
add
rcrb
cmpb
lods
dec
cld
mov
and
add
aad
test
cld
in
gs
in
fnstcw
loopne
dec
push
pop
fs
push
insl
jle
jae
les
movsb
imul
add
rcrl
push
sbb
stos
xchg
mov
into
lock
pop
je
inc
mov
inc
into
cld
icebp
jmp
iret
movsl
sbb
mov
subl
mov
mov
nop
xchg
adc
scas
add
divb
and
jle
mov
fcmovu
push
push
out
in
mov
cmp
ljmp
cmp
cmp
dec
push
mov
mov
frstor
insb
xor
sahf
xchg
mov
les
inc
pop
loope
lods
test
jb
xchg
pop
dec
movsb
jns
loopne
sbb
imul
movsl
and
int3
jmp
movsl
xchg
sub
loopne
mov
fwait
hlt
repz
and
gs
sub
push
lret
shrl
popf
ljmp
sub
fcoms
push
adc
cmp
adc
cmp
xor
mov
mov
hlt
pusha
xor
sbb
mov
aas
sarb
stos
sbb
insb
fists
inc
cli
and
popa
sbb
inc
pop
pop
lret
fcoms
jmp
test
xor
jb
hlt
insb
call
mov
pop
icebp
in
jbe
mov
jno
rcl
cmc
and
mov
sub
xchg
xlat
imul
lret
xchg
mov
pop
movsl
adc
xchg
out
cmp
fwait
das
sub
dec
jnp
sbb
adc
pop
mov
in
push
mov
enter
insb
lock
cmpsl
ficoml
add
cmp
xchg
call
or
add
push
mov
cmp
cmpsb
fadd
push
mov
movsl
call
pop
sahf
or
arpl
daa
xor
testb
jbe
xchg
aad
ss
sbb
pop
or
or
cltd
jmp
sub
daa
inc
dec
shll
mov
inc
mov
mov
and
pop
cmp
xchg
add
dec
xchg
jecxz
test
push
inc
cmp
and
out
pusha
sbb
cmp
sub
lret
inc
pop
dec
jns
mov
cs
in
add
mov
sbb
dec
arpl
sbb
pusha
adc
shll
hlt
call
push
push
loopne
sbb
into
sub
mov
inc
add
jmp
xor
out
mov
std
mov
mov
daa
adc
es
fsubrs
jecxz
cmp
sti
jle
xchg
ss
lea
insb
cmp
mov
test
cmp
stos
jp
push
es
andb
and
ret
mov
xlat
push
rcll
bound
xlat
ss
pop
daa
loope
sbb
sahf
aaa
jmp
int
mov
jno
pop
push
sub
jp
push
xlat
mov
pop
js
sbb
stos
pop
insl
insb
ja
inc
and
ljmp
test
das
adc
nop
mov
jmp
fcmovb
fwait
pop
jmp
cmc
fs
mov
adc
push
sbb
xor
xchg
add
and
push
popa
int
test
push
sti
lods
push
and
iret
popf
mov
loop
and
push
stos
xor
fbstp
add
push
fs
movsl
aaa
pop
fnstcw
inc
xchg
lock
into
imul
jno
cmp
xchg
pop
sub
movsb
ret
leave
movsl
cmp
repz
gs
cmpsb
mov
mov
push
push
mov
jbe
imull
ljmp
int3
gs
pop
out
cmc
arpl
or
push
pop
pop
cmp
ljmp
push
cmpsl
sub
stos
dec
sbb
loope
jne
add
fcompl
mov
data16
sub
sti
pop
cmc
orb
mov
inc
pop
lcall
mov
loopne
daa
fnstsw
jo
dec
sub
add
mov
pop
lock
sbb
mov
jbe
scas
fsubrs
or
xor
test
out
int3
scas
test
sub
pop
cli
test
jecxz
cmpsb
bound
xor
popa
mov
or
jmp
xor
ficoms
imul
js
orl
sbb
dec
sub
jecxz
mov
add
push
cmp
sti
xlat
and
push
cmpsl
ss
inc
mov
das
test
rolb
cmp
loop
mov
inc
cmp
cmpsb
je
xchg
mov
adc
jnp
loopne
mov
mov
or
mov
push
adc
inc
pop
loop
ficoms
xor
inc
jg
stc
adc
in
sbbl
mov
jo
scas
lock
sbb
cmp
in
or
mov
mov
je
mov
cltd
and
push
ja
jge
mov
mov
mov
push
mov
push
add
scas
cmpl
stc
outsl
sub
insb
cltd
pop
sub
mov
jns
pusha
mov
pop
xchg
lods
hlt
pushf
into
popf
enter
jb
push
pop
adc
inc
fsubr
movsb
icebp
xor
hlt
xchg
aaa
push
das
test
and
scas
dec
imul
or
xchg
push
js
jge
and
sbb
insb
pop
push
lods
dec
jp
sbb
and
inc
cld
push
sbb
xlat
in
fisubs
cmpsb
inc
mov
loopne
jecxz
push
pop
arpl
fisubl
push
sbb
mov
sub
inc
sub
sbb
in
andl
icebp
push
and
test
out
ss
xchg
push
push
xor
adc
aas
fs
xor
cmpsb
js
shll
push
lods
dec
pop
lret
loop
xadd
cmc
dec
jbe
fcmovu
sti
and
sub
pop
adc
and
xchg
daa
mov
stos
mov
push
fsubrs
gs
aad
push
icebp
int
cmp
push
sbb
mov
jmp
jbe
mov
inc
mov
push
pop
call
xorb
xor
jg
inc
cmp
iret
push
daa
hlt
stos
popl
sub
or
aad
mov
lock
mov
hlt
aad
mov
or
aas
stos
cmp
add
and
sub
mov
movsl
pop
scas
xor
or
sub
aaa
shll
mov
in
push
fisubrl
pop
push
or
sbb
rcrl
cs
adcb
lds
jge
int3
xchg
sbb
stos
pop
dec
cmpsl
in
xchg
or
xor
push
lahf
testl
rol
adc
shll
mov
call
mov
cmp
xchg
sbb
mov
cmp
push
jno
std
xchg
repz
leave
mov
fiaddl
mov
xchg
jg
mov
rcrl
jae
mov
mov
dec
adc
orps
cmp
pushf
leave
jl
hlt
xchg
les
add
add
popf
stos
cmp
lret
es
jbe
pop
in
sub
dec
subb
test
add
aas
fisubrl
jb
dec
jmp
in
pushl
loopne
inc
insl
call
or
aas
mov
xchg
sti
js
jg
scas
sbb
sbb
cmpb
cmp
or
mov
aam
subl
dec
loop
lret
mov
mov
mov
loop
out
into
daa
mov
cld
push
inc
rolb
mov
ss
test
jne,pt
dec
adc
lea
pop
mov
testb
adc
clc
jb
stos
test
inc
and
bound
mov
add
sub
cmp
arpl
pop
sub
mov
mov
mov
rorl
inc
dec
ret
loope
cmpb
dec
inc
arpl
incb
in
fistpll
loope
iret
call
mov
lods
icebp
cmp
add
push
push
dec
clc
push
xchg
bound
push
dec
or
mov
mov
cs
test
mov
push
stos
sub
push
jno
push
push
lods
shrl
fisttps
mov
mov
pusha
cmp
loopne
mov
mov
ret
sub
cmp
bound
movsb
dec
incl
push
fbstp
mov
or
leave
test
movsb
ja
repnz
or
jge
or
mov
jmp
mov
icebp
xlat
mov
aam
inc
inc
lea
mov
push
and
test
std
cmp
clc
cmp
sub
mov
fsub
jae
call
pop
add
push
mov
les
jmp
mov
xchg
insb
mov
inc
loope
pop
out
inc
dec
lods
mov
jns
arpl
or
aad
dec
scas
cs
jmp
mov
mov
std
in
aas
add
sbbl
sub
fisubrl
filds
jp
jp
bound
push
inc
out
insb
sahf
xchg
adc
add
push
jmp
sbb
addb
cmc
testl
sub
inc
leave
xchg
aas
mov
daa
mov
lret
fstl
inc
inc
mov
bound
pop
popa
xor
fwait
imul
dec
push
xor
cmp
shr
rcll
fadd
outsb
shlb
mov
dec
cmp
repz
xor
icebp
cmpsl
push
jnp
push
sbb
lret
add
inc
dec
sbb
inc
push
ss
push
mov
cmovns
sbb
mov
cmc
or
nop
cmp
sub
pop
xchg
xor
lret
movsl
out
es
stos
mov
insl
and
adc
lods
ret
dec
lahf
pop
ljmp
test
les
aad
cmpsl
in
cmc
or
repnz
lahf
dec
in
xchg
mov
jnp
mov
nop
mov
or
into
xchg
mov
jge
pop
sub
inc
aad
inc
mov
ja
and
sub
jg
inc
arpl
stos
in
xchg
mov
lods
imul
cltd
movsl
cltd
dec
inc
fs
mov
orb
sub
inc
fnstcw
or
pop
mov
cld
lahf
rcr
push
and
subb
ja
sub
mov
mov
push
in
push
mov
pop
pop
dec
popf
jne
loop
movb
mov
push
out
loop
outsl
sub
or
push
jo
mov
mov
lret
dec
loope
rclb
adcb
dec
pushf
inc
loopne
dec
jl
pop
cs
inc
aad
dec
repz
sbb
out
cmp
xlat
sub
jecxz
inc
xor
add
test
sub
xchg
iret
xor
dec
subl
sub
pushf
fimull
and
test
dec
jnp
pop
cmp
mov
pop
xchg
sbb
fwait
and
testb
xor
lret
inc
loope
push
jno
cs
xor
cli
dec
insl
sbb
out
pushf
jb
mov
out
call
sub
out
out
dec
aam
nop
cs
int
test
cmpsb
jg
dec
ds
jl
rolb
shll
push
test
jge
cmp
adc
stos
std
repz
cmc
push
dec
jmp
je
jle
mov
jp
fcmove
sbb
test
jnp
dec
cmpsl
ficoms
je
adc
pop
add
setae
sub
sbb
shlb
sbb
jns
mov
shlb
and
xchg
mov
lea
shlb
add
sar
sbb
sbb
repnz
mov
jbe
std
addl
push
or
pop
stc
mov
stos
xlat
push
mov
pop
jl
daa
aaa
push
imul
inc
rcr
imul
in
mov
in
adc
dec
je
lret
out
in
in
lret
sbb
gs
sbb
xchg
pop
and
mov
stc
adcl
outsl
gs
push
sub
iret
mov
jle
mov
or
mov
dec
data16
jb
dec
add
pop
pushf
aam
mov
mov
ds
aas
loopne
dec
fsubs
push
in
imul
inc
jge
push
into
xchg
jecxz
xchg
in
dec
cmp
jno
mov
mov
and
clc
or
out
inc
nop
mov
jbe
sbb
sarl
roll
bound
sbb
gs
mov
lcall
je
xorb
repnz
lods
out
sar
das
sti
jge
arpl
dec
add
adc
aad
push
mov
subl
call
hlt
mov
lods
or
rcr
dec
sti
sub
dec
xlat
int
jbe
xor
mov
and
scas
std
lahf
push
mov
ja
sti
inc
adc
push
mov
mov
inc
push
dec
mov
lds
sbb
sahf
in
adc
cvtdq2ps
xchg
xchg
xchg
arpl
add
iret
xchg
idivb
aam
andl
jecxz
sbb
hlt
mov
aad
das
pop
pop
aad
rorl
lds
mov
pop
and
shrb
xor
pusha
loope
fildl
and
mulb
bound
es
dec
mov
push
movsb
ljmp
push
std
inc
in
cltd
pcmpeqw
insb
xchg
mov
movb
ja
inc
loop
xchg
adc
cltd
xchg
xor
mov
inc
int
jmp
les
repnz
adc
cmp
dec
mov
inc
pop
int3
adc
insl
mov
cmpl
inc
jmp
repnz
into
subb
mov
mov
mov
lods
repz
shrb
cmp
cmp
cs
int3
imul
imul
movsb
inc
mov
pop
inc
jecxz
data16
xchg
test
stos
dec
adc
fs
pushl
shrb
test
jge
adc
stc
subb
mov
scas
sti
adc
pop
popf
sub
idiv
xor
sbb
test
loopne
iret
inc
mov
call
enter
leave
push
xor
add
and
insl
pop
adc
mov
jbe
adc
mov
cmp
jg
mov
pop
hlt
jecxz
fidivrs
cmp
push
nop
mov
push
mov
xlat
mov
imul
xchg
pop
ss
inc
mov
sub
pop
inc
mov
sub
cmpsb
jno
movsl
stos
fwait
adcb
rcrb
cmpsb
das
out
cmc
push
push
test
pop
cld
mov
outsl
lret
mov
lods
sub
add
adc
inc
dec
movsl
jmp
push
fcoml
xor
popf
push
mov
fcmovne
into
fsub
imul
pop
or
inc
cli
cwtl
fstl
push
shlb
mov
fldl
pop
cmp
pop
sbb
add
pop
jnp
dec
aaa
sbbb
xor
inc
pop
rcl
add
add
or
addr16
push
imul
adc
dec
in
sbbl
jle
enter
push
stc
dec
and
xlat
xchg
pushf
cwtl
lock
or
adc
insl
bound
or
jge
test
sahf
mov
mov
sbb
jb
mov
mov
jecxz
mov
pop
movl
imul
mov
adc
sbb
enter
and
add
push
mov
stos
lock
mov
cli
rorb
add
jnp
and
push
push
adc
mov
adc
dec
fstp
iret
or
insl
jns
and
mov
ds
xorl
int
xor
pop
jge
cmp
fstl
data16
add
mov
sbb
pop
fldl
sti
inc
xchg
or
inc
xor
dec
and
xor
sbb
mov
jl
popf
ds
inc
cmp
mov
fistpl
mov
fs
das
cld
jle
ffreep
loop
mov
scas
pusha
frstor
test
sti
push
out
popa
enter
dec
lods
cmp
fstpt
lahf
push
mov
or
rorl
mov
mov
mov
frstor
and
outsl
ss
jle
outsb
mov
mov
ret
stos
es
arpl
or
rcll
sub
cwtl
iret
mov
or
add
das
insl
jmp
in
lcall
cmp
imul
test
cld
jl
dec
es
jecxz
mov
test
sub
or
rcrl
ds
addl
sbb
lahf
mov
aam
dec
or
sbb
icebp
or
and
bound
xchg
and
fcoms
dec
sbbb
mov
sbb
je
subl
out
cmpsl
xor
pop
dec
cmp
mov
push
or
jl
inc
push
cmp
mov
xchg
mov
xor
mov
stos
daa
ss
jle
mov
or
sbb
and
aad
fistl
jbe
out
fstpt
ljmp
ja
lahf
sbb
mov
ja
and
mov
pusha
cmp
inc
mov
call
pop
push
fwait
jae
or
sub
std
xor
hlt
or
stos
mov
adc
mov
leave
and
jnp
jne
pop
sysexit
stos
dec
dec
and
mov
pop
sub
pop
pop
mov
xor
adc
in
hlt
mov
jbe
inc
mov
orb
adc
or
scas
push
ret
inc
xchg
int
ret
pop
test
std
leave
or
fsubl
push
mov
mov
add
pushl
fnsave
lods
pop
das
sti
jecxz
push
jmp
cmc
popf
inc
mov
sbb
pop
insl
sarb
ljmp
inc
cmp
fisubrs
cld
push
sahf
pop
mov
push
lock
cmp
rcrb
add
sbb
lcall
inc
add
mov
xchg
jmp
out
jno
int3
lcall
mov
inc
jge
sbb
inc
out
xor
jmp
adc
fimull
cmp
jl
repnz
bound
clc
mov
jecxz
bound
jne
jmp
movsl
xor
push
and
mov
xchg
jg
lods
test
fwait
mov
push
test
shlb
adc
std
cmpsb
repz
xor
fwait
ret
insb
pop
add
lahf
xor
aad
lcall
and
or
sbb
jae
cmpsb
inc
or
add
adc
movsb
dec
pop
sahf
orb
mov
fwait
call
mov
cmp
sub
mov
iret
les
dec
daa
pop
repz
mov
push
mov
mov
imul
push
sbb
pop
xor
imul
adc
test
cwtl
lcall
ss
xor
daa
movsb
or
mov
out
mull
popa
stc
cwtl
pop
adcb
in
dec
inc
push
cmpsb
push
mov
push
movsb
popf
pop
inc
es
shrl
mov
in
mov
call
xchg
loop
psllq
cmp
call
std
out
xor
notb
jl
cmp
int
sub
in
xor
add
mov
ret
or
mov
js
rclb
and
lock
push
and
and
lods
stos
push
fmull
outsl
adc
sbb
enter
and
jne
leave
jae
dec
pop
dec
dec
cs
pop
inc
out
jnp
jnp
and
into
jnp
enter
sbb
add
mov
or
push
inc
rolb
mov
add
fcmovbe
dec
cmp
mov
aam
jno
adc
cmp
mov
into
xchg
dec
inc
sbb
enter
mov
popf
mov
cld
mov
add
mov
mov
jl
mov
in
or
loope
or
cmp
push
int
adc
mov
repz
dec
sti
rclb
cmp
fnstsw
cmpsl
ror
mov
mov
in
mov
in
xchg
push
lods
cmpsl
or
std
fsubr
xor
cmp
gs
insb
xchg
rcll
ficoml
push
sbb
and
and
mull
aam
xor
inc
sub
and
jle
mov
cli
int3
sbb
dec
out
xchg
bound
lret
xchg
mov
pop
cwtl
dec
jo
in
imul
adc
and
movsl
dec
pop
repnz
inc
mov
sbb
mov
insl
out
xchg
idivl
adc
sbb
mov
and
add
js
add
repnz
adc
sarb
xor
add
push
out
mov
dec
rcrl
inc
adc
adc
mov
in
data16
out
xor
bound
mov
imul
pop
cltd
sub
pusha
fndisi(8087
ss
sub
testb
pop
out
mov
out
or
jo
sbb
mov
ljmp
mov
or
and
cmpsb
mov
nop
sub
inc
pusha
xor
xorl
fistpl
in
stos
int3
push
mov
sub
fmull
test
mov
cmp
nop
xchg
das
jb
pusha
mov
xchg
add
jecxz
jl
cmpsl
mov
pop
mov
sbb
test
cmp
push
jg
jne
int
mov
ds
loope
sub
mov
sbb
inc
movsb
sub
fldt
cmpsl
dec
and
and
adc
dec
or
lcall
xor
adc
sbb
push
or
or
cmp
dec
or
xchg
out
and
sbb
adc
xchg
stc
lods
mov
or
mov
inc
and
cli
jl
cmp
push
cs
cmp
jae
in
jg
and
jne
pop
scas
repz
xor
pushf
in
out
cmp
adc
xchg
mov
xor
xchg
clc
sub
sbb
inc
lock
lods
jg
adc
jg
rorb
xlat
pop
mov
add
inc
xchg
mov
scas
jg
jg
mov
insl
into
pop
mov
sbb
mov
jp
fdivrs
mov
push
or
pop
mov
mov
xor
xlat
jg
add
icebp
jbe
and
lahf
xor
add
inc
repnz
and
or
push
addr16
int
movsb
mov
jmp
and
pop
mov
push
lods
nop
mov
popf
stos
pop
adc
mov
imul
jne
jmp
jns
icebp
or
sbb
fmul
pusha
lods
dec
cmp
sub
jge
arpl
xor
jno
push
out
fadds
mov
push
ds
mov
mov
push
dec
rolb
je
in
and
push
mov
jb
push
insb
xor
lret
or
leave
les
out
push
in
adcb
sarl
jle
push
xchg
xlat
jmp
stos
sbb
les
adcl
sub
imul
xchg
loopne
push
pop
pxor
cmc
jp
pop
sub
pop
repnz
and
xlat
inc
rorl
xchg
xchg
mov
push
sub
push
sti
ljmp
lahf
fisubs
inc
jae
loop
ret
out
xor
pop
sbb
add
mov
xchg
or
aad
ret
mov
jns
sub
test
sarl
mov
dec
cmp
push
movaps
inc
dec
jbe
popa
imul
inc
mov
push
out
mov
vpavgw
xchg
lock
test
scas
mov
aas
cmp
lock
cmpsb
outsb
xor
je
insl
or
call
and
push
mov
jg
cmpsb
loopne
lret
icebp
and
imul
outsb
dec
sbb
sbb
adc
ficomps
jne
cwtl
in
lea
stos
xchg
aad
mov
iret
adc
push
in
pop
hlt
popa
ds
out
jbe
push
push
jle
jmp
pop
sub
push
mov
dec
and
mov
dec
pop
nop
sti
loopne
test
insb
rorl
sbb
lret
sub
imul
cmp
push
pop
and
sbb
das
mov
ffree
aas
xor
inc
js
mov
subl
aam
movsb
pop
js
jnp
iret
insb
sub
mov
dec
jbe
xor
add
js
int3
cli
xor
pop
inc
imul
out
lahf
cmpsl
or
cmpl
xchg
xor
jns
mov
in
dec
aad
jbe
xor
pop
mov
sbb
jl
and
out
pop
or
imul
es
lcall
int
gs
ret
inc
pop
out
add
push
and
popa
xor
lcall
stos
jg
sbb
mov
inc
cs
add
gs
xor
mov
and
mov
stos
fisubl
es
fdivp
mov
in
inc
pop
fwait
add
push
jmp
dec
push
imul
mov
incl
jl
dec
pop
push
mov
mov
push
sub
cmp
add
jmp
test
divl
aad
roll
pop
mov
jge
adc
shrb
inc
insl
sti
sbb
push
xor
rcrl
enter
ffree
ficoms
adc
jp
mul
sub
push
outsb
jecxz
test
pop
aas
mov
mov
pop
mov
add
dec
cmp
dec
xchg
sub
inc
ficomps
test
mov
cmpsb
or
ja
mov
mov
popf
enter
fsubs
or
mov
jbe
or
inc
inc
outsl
jp
insl
add
pushf
jns
add
movsl
clc
push
push
data16
faddp
pop
mov
fldcw
rcll
iret
cmpsb
cli
sbb
mov
dec
data16
push
shrb
push
xchg
ret
xchg
leave
pop
inc
lret
movsb
and
dec
popa
push
sbb
and
pop
xchg
dec
loopne
addr16
dec
mov
ficomps
test
fsqrt
stc
xchg
scas
mov
cmc
popf
mov
scas
xor
sbb
outsb
or
push
inc
jae
scas
adc
outsl
mov
jb
fistpll
mov
scas
xor
scas
dec
push
xchg
movsl
stos
mov
fsubrs
addb
cmp
scas
divl
push
outsl
mov
lret
inc
je
stos
sub
cs
pop
movsl
mov
sbb
or
roll
xchg
out
push
fdivp
loopne
cmc
push
push
or
jmp
inc
and
or
pusha
enter
repnz
push
jo
and
loop
and
xor
sahf
jmp
and
sbb
jmp
pop
data16
fcomps
sub
repz
lods
faddl
outsl
add
divb
hlt
iret
out
sbb
repnz
inc
push
rolb
repz
dec
jg
dec
dec
outsb
imul
stos
test
mov
pop
testl
or
fwait
dec
adc
mov
fidivrl
pop
pop
imul
stos
in
dec
push
push
pop
stc
sub
nop
nop
lods
in
sbb
or
and
loop
mov
je
das
cmp
inc
test
push
jno
out
outsl
push
je
mov
inc
mov
or
fcoms
into
out
pop
std
lahf
cmp
cli
fisttpll
pop
cmp
lahf
xchg
fnsave
mov
les
mov
or
or
and
xchg
dec
popa
mov
jbe
mov
sub
xchg
xchg
popa
sbb
xchg
adc
jns
ss
je
mov
mov
push
xorl
cli
shrb
xchg
stos
or
dec
int
scas
cmc
inc
ret
xlat
frstor
add
cmp
sbb
mov
fsubr
push
lahf
and
cmp
jp
or
insb
jg
aad
mov
int3
inc
lahf
dec
lods
mov
mov
and
add
call
dec
or
ss
mov
sbb
mov
xchg
pop
popf
xor
and
xchg
stos
cmp
out
mov
dec
loopne
pop
mov
jl
push
xor
and
into
inc
push
jmp
adc
lea
mov
sti
leave
aam
sbb
je
mov
andb
pop
jne
jno
icebp
out
mov
in
push
sub
lcall
add
jg
cmp
out
xor
popf
pusha
sar
icebp
cmpsl
movd
aaa
mov
cmpsb
push
fcmovb
push
pop
push
mov
xor
repnz
or
dec
shrb
dec
mov
aaa
xor
andb
enter
movsl
jp
push
jbe
adc
dec
insb
rclb
cmp
ja
adc
jecxz
mov
pop
push
call
xchg
mov
jbe
and
jo
das
mov
insb
cli
xchg
test
inc
dec
adc
inc
and
mov
insl
jne
stos
stos
clc
outsb
daa
mov
je
jne
insl
sbb
and
mov
dec
pop
mov
and
mov
andl
push
lahf
ret
sbb
fs
outsb
mov
int3
imul
jne,pt
jnp
bound
push
das
shl
pop
and
ljmp
stos
loop
fidivrs
sbbb
pop
adc
and
jl
cmp
aad
xchg
push
jle
aad
sub
icebp
xlat
mov
sti
or
lea
popf
pop
cmp
and
or
jne
les
sub
loopne
mov
stos
push
dec
pushf
cmc
or
out
push
aas
add
popa
shrb
fxch
cli
sub
pop
stos
pop
gs
fsubr
or
mov
daa
push
leave
adcb
lret
cli
les
mov
cmp
dec
lcall
movsl
jl
push
mov
nop
cmpsb
cmp
pushl
xchg
xchg
jns
mov
mov
xchg
popa
add
pop
in
shll
sbb
dec
aas
shrb
fists
mov
inc
push
aad
fsubl
stos
repnz
push
lods
add
xchg
mov
test
pop
test
xchg
xchg
inc
adc
dec
inc
imul
movsl
lcall
nop
mulb
cmpsb
push
js
cld
xchg
push
jmp
push
outsb
xor
das
xor
inc
xor
adc
xchg
cmpsl
mov
adc
inc
inc
lret
cwtl
xor
mov
xchg
mov
push
daa
add
fsubrl
push
icebp
mov
ljmp
int3
push
in
xchg
negl
inc
xlat
fstl
pop
cmp
fmulp
lret
sub
mov
add
mov
fsubp
lods
xor
rcrb
adc
push
bound
dec
in
std
ret
shrl
sbb
js
fs
mov
jecxz
push
cmp
sub
push
call
xchg
adc
pop
data16
cmp
data16
or
rorl
pop
addr16
cmc
adc
mov
je
add
insb
stos
mov
dec
add
repz
push
mov
jp
inc
orb
xchg
in
inc
mov
push
push
jnp
bound
cmc
cmc
fcmovnu
add
xchg
test
nop
mov
sub
inc
fs
lcall
jge
lds
mov
test
pop
mov
icebp
movsl
aad
adc
test
in
call
push
cmc
fistl
movsb
cmpsl
lret
mov
lahf
adc
decl
cmp
xor
dec
dec
dec
sbb
sbbl
test
inc
xchg
sbb
fwait
push
fidivrs
clc
popa
push
sub
push
mov
sbb
testl
sbb
push
imul
mov
mov
xor
out
std
jbe
fcmovne
daa
popf
into
out
mov
pop
mov
js
mov
fstl
adc
mov
lea
or
pop
inc
mov
ficomps
in
test
in
sahf
test
adc
dec
call
sahf
mov
xchg
inc
daa
push
and
testb
jo
pop
sub
mov
sbb
es
push
mov
fiaddl
jbe
test
mull
jge
jle
push
call
jne
jl
inc
addr16
out
sub
mov
adc
addr16
mov
jne
lahf
movsl
in
stos
push
jge
ror
pop
ret
pop
leave
in
add
add
arpl
sbb
or
lea
lock
les
jle
stos
cmpl
in
jmp
fsubrl
mov
and
mov
add
subl
rolb
mov
fcompl
icebp
and
adc
nop
jbe
test
inc
jne
fmull
ljmp
lret
xchg
xchg
nop
hlt
ret
push
scas
mov
and
and
ret
test
and
push
sub
jg
mov
jle
push
ja
das
in
dec
jo
pop
sarl
lahf
xchg
sahf
subl
jns
cwtl
mov
sbb
int
cld
mov
divl
shlb
fistpll
cmp
xor
inc
pusha
sti
xchg
adc
fs
jbe
test
les
jge
fs
aaa
in
jnp
add
mov
subb
in
fldenv
pop
push
pushf
cmp
adc
andb
sub
inc
loope
loopnew
mov
xchg
sub
or
add
lcall
push
addl
sub
stos
fldt
repz
xor
std
stos
cmc
test
outsl
mov
push
into
clc
inc
push
or
in
int3
cld
testb
cmp
push
mov
in
mov
cmp
gs
jns
fnsave
dec
sbb
push
dec
out
fwait
imul
inc
aad
xchg
xor
xor
jb
imul
out
sub
movsb
test
ss
jecxz
ss
inc
fwait
sbb
adc
daa
jbe
inc
sbb
pop
pop
mov
aas
imul
stos
push
inc
push
sub
andb
sub
pop
mov
shr
cwtl
or
int
scas
rcl
and
push
cmp
adc
mov
mov
and
out
push
xlat
push
out
and
cmp
xchg
out
push
mov
or
gs
dec
inc
pop
jp
jb
shll
push
push
movsb
stos
lds
push
cld
push
adc
sub
xor
mov
dec
mov
lahf
gs
jnp
ljmp
xchg
out
in
jae
int3
into
pop
lret
add
cwtl
movsl
lods
inc
push
cmc
leave
jmp
xchg
jge
adc
sbb
inc
pop
xchg
mov
aaa
push
sbbb
test
aad
and
pushf
bound
add
punpckhdq
adcb
les
pop
fdivrs
adc
stos
dec
repz
fwait
scas
cmc
int3
popf
mov
out
mov
call
push
jge
adc
xorl
ret
icebp
cmp
and
pop
jle
add
mov
pop
sub
fldcw
pop
inc
push
pop
add
jnp
pop
or
aad
cmpsl
sub
xor
mov
pop
into
es
adc
cs
bound
pop
xchg
dec
or
mov
pop
jne
movsb
dec
ja
dec
jo
or
cli
stos
xchg
les
cmp
bound
test
push
je
pusha
shrl
and
into
cli
nop
mov
jbe
xchg
outsb
jnp
test
in
sub
mov
popa
pop
sub
mov
sbb
imul
leave
and
stos
in
mov
pushf
mov
xchg
cmpsl
and
shll
daa
cwtl
cmp
outsb
jp
pop
add
inc
jno
jmp
or
xlat
sbb
stos
pop
popa
into
decb
fld
add
sti
shlb
adc
mov
mov
popf
lahf
lcall
leave
repnz
cmpsl
ret
inc
aas
sbb
dec
mov
subl
mov
jno
cmp
xchg
in
enter
pop
push
xchg
fadd
cltd
outsl
jecxz
push
inc
out
outsl
push
gs
mov
in
jnp
push
dec
inc
inc
jecxz
jne
xor
pop
stos
push
rolb
movl
push
and
dec
lcall
lret
jb
jmp
dec
icebp
mov
movb
xchg
xchg
xchg
xchg
adc
enter
cmpsb
xor
cwtl
xor
das
addr16
test
push
lock
add
cli
cmp
push
pop
mov
addr16
pop
frstor
fisubl
push
and
push
aad
mov
dec
cmp
sahf
mov
iret
into
add
push
rolb
push
ja
dec
xorps
sti
push
inc
lahf
push
inc
test
popa
xorl
cmp
mov
add
jae
movsl
adc
addl
daa
jle
fwait
mov
cmp
push
icebp
cmpsb
lds
jg
in
inc
aad
stos
shll
arpl
sbb
inc
cmp
iret
mov
fwait
lret
sbb
sbb
cs
cmp
push
xchg
mov
scas
stc
out
out
push
fnstenv
xchg
xor
sahf
bound
jae
cmp
or
push
and
cld
dec
cmp
rorl
jg
stc
mov
pop
aas
xchg
clc
dec
dec
xchg
idiv
enter
inc
cmp
loopne
out
fdivs
mov
xlat
addr16
jns
dec
es
or
xacquire
loop
push
fisttpl
or
or
imul
test
mov
mov
dec
scas
mov
inc
xor
jmp
emms
jecxz
ss
stos
cmp
jmp
mov
xor
sbb
mov
popf
sar
cmp
andb
pushf
test
std
fnsave
pop
addr16
addr16
icebp
mov
jb
jmp
dec
out
addr16
sti
xchg
in
sti
jns
or
iret
inc
sub
test
pop
out
or
xor
xchg
inc
in
push
in
adc
into
dec
adc
js
dec
xchg
xor
mov
add
in
shll
add
inc
addl
cmp
mov
icebp
fisttpll
mov
cmp
jbe
mov
movsb
mov
aam
cmp
add
jne
add
out
repnz
jg
insb
jbe
jns
mov
cmc
xchg
ss
jb
and
or
xor
adc
out
xchg
aas
sbb
fwait
sub
leave
jp
lock
jne
jmp
sbb
dec
test
cmc
lret
sub
pushf
sbbl
mov
and
sbb
int3
popf
rcl
mulb
out
mov
mov
shr
dec
jnp
mov
or
clc
pop
out
decl
jl
js
sbb
fwait
in
mov
clc
jne
scas
cmp
mov
pop
popa
push
add
mov
xchg
push
dec
mov
fdiv
or
dec
mov
push
cli
push
cltd
or
vpaddusw
stos
cmp
dec
push
movsl
ss
nop
iret
repnz
aaa
sbbl
cmp
or
sub
pminsw
fisttpll
dec
mov
cltd
mov
lcall
sahf
addr16
and
icebp
insb
in
and
inc
nop
lahf
lock
aas
mov
cmp
or
scas
or
push
dec
hlt
insb
dec
aam
mov
sbb
sar
add
ja
loopne
push
inc
push
mov
cmp
sbb
xchg
sahf
mov
xor
ret
add
lret
sti
daa
cmp
xorl
inc
and
jl
js
std
subl
fistpll
sbb
mov
push
ljmp
lock
scas
mov
sbb
jae
push
aam
pop
scas
mov
icebp
test
xchg
cmpsb
xchg
out
jmp
inc
mov
fld
inc
xlat
js
cmp
cmp
leave
mov
push
dec
xor
and
cltd
cmp
pop
sub
mov
leave
xchg
adc
sti
mov
cmc
clc
jmp
inc
sub
xor
jle
pushf
pop
out
mov
and
shrb
test
mov
leave
xchg
in
or
mov
loop
stc
or
pop
xor
xlat
inc
sbb
int
lock
sub
jne
inc
fildl
ss
lock
mov
pop
gs
pusha
jae
lret
and
or
leave
sbb
xor
lea
sbb
and
mov
xor
jecxz
add
int
out
loope
repz
adc
daa
push
rorb
dec
xchg
cmp
push
jb
cmp
push
stc
addps
jecxz
or
xchg
ret
jne
jl
xor
inc
adc
xchg
mov
fmuls
testb
cmp
movsl
movsl
xor
jp
inc
xchg
pop
jle
jne
mov
mov
add
loope
adc
test
push
dec
mov
add
mov
roll
mov
iret
and
gs
es
outsb
pop
cld
mov
inc
mov
icebp
adc
shl
scas
ret
sub
jl
xor
ret
rcrb
cmp
loopne
lods
jl
adc
stos
vcmpnlesd
or
mov
push
loopne
scas
or
in
push
mov
or
aad
and
out
push
pop
cltd
or
jbe
js
call
repz
jo
mov
lock
mov
fnsave
rcll
enter
lods
inc
push
stos
pop
inc
pop
xor
mov
ret
pop
cmp
lock
xchg
mov
insb
sub
es
stos
call
dec
daa
dec
loope
pop
and
repnz
or
xchg
jae
sbb
mov
inc
scas
xor
jmp
adc
add
mov
sub
faddl
inc
sub
and
testl
sub
mov
sbb
and
cmc
imul
xchg
movsb
repnz
mov
jecxz
mov
les
popa
mov
xor
dec
lcall
push
pop
mov
mov
pop
sub
in
inc
out
int
cli
or
shlb
pop
out
enter
rorb
shrl
sbb
mov
inc
dec
adc
mov
mov
cmp
inc
inc
mov
adc
flds
sahf
cmc
shll
scas
cld
inc
push
pop
mov
mov
mov
fwait
rcrb
ret
into
mov
mov
aaa
fistpll
cmpsl
adc
xchg
pushf
in
xor
push
popf
mov
sti
out
in
stc
aam
xor
xlat
pop
mov
dec
ss
jo
jmp
repz
mov
mov
push
popl
pop
jns
mov
popf
sbb
loopne
jne
es
sub
sub
test
jne
outsl
xlat
addl
push
fldcw
or
or
pop
cmpsb
in
shlb
fmuls
push
cld
stc
and
sub
call
je
cmc
loop
lea
inc
jl
push
inc
mov
mov
xor
pusha
or
test
lods
or
xor
test
movsb
xor
jns
ret
sub
xchg
sub
and
in
sbb
or
out
inc
pusha
jne
aaa
cmp
gs
pop
enter
xor
cmp
ret
scas
sub
lcall
and
xor
cli
jo
shl
push
sbb
in
mov
je
mov
sub
stc
fsubl
pop
das
mov
dec
dec
jae
xlat
dec
cli
cli
xchg
aam
add
dec
xor
outsl
sub
add
fs
std
sub
jne
and
movsb
xorl
pop
and
inc
lea
push
sub
mov
lret
and
and
and
je
test
insb
mov
or
pusha
push
outsb
sti
in
das
mov
pop
les
xor
lock
stos
sbb
mov
or
cmpsb
stc
sbbl
outsb
enter
sub
loope
sti
lcall
aad
test
mov
fisttps
inc
sahf
pop
xchg
lret
mov
iret
dec
imull
inc
mov
lahf
js
dec
lds
popa
adc
mov
dec
mov
test
aaa
pop
sbb
enter
xor
jns
adc
enter
in
rorb
rclb
mov
loope
leave
inc
jno
ret
cmp
jne
popa
lahf
xor
sub
mov
or
jge
xchg
into
cs
test
and
mov
std
pop
outsb
testl
add
notb
inc
xchg
mov
or
stos
int3
cli
push
std
and
push
ret
adc
push
in
xor
or
pop
adc
jbe
loop
push
test
dec
mov
out
mov
jge
xchg
std
lret
xor
cmp
mov
ret
hlt
jecxz
into
dec
xor
mov
add
or
out
cmp
pop
adc
mull
sbb
mov
fwait
lea
aad
push
cmpsb
xchg
pop
stos
push
dec
mov
into
pop
std
movsb
add
sti
jg
lods
add
sbbl
in
es
pop
jne
mov
cmp
mov
inc
adc
mov
cmp
cld
fsubrl
lret
mov
add
jae
jno
pop
inc
sbb
sub
in
scas
xchg
cmpsl
add
inc
push
push
add
das
sbb
xor
movsl
or
ss
es
aas
pop
sbb
es
adc
and
sbb
shlb
mov
xchg
sub
inc
xchg
mov
mov
rcl
mov
and
lret
xchg
bound
fwait
sti
aas
cmpl
addr16
jb
sub
cli
xor
aam
mov
sbb
jmp
pop
xor
int
ficoml
mov
jnp
pop
sub
mov
js
pop
jno
cmp
cmp
xchg
fmuls
test
test
inc
stos
or
ret
std
mov
xor
sbb
clc
outsb
adc
sub
mov
mov
lcall
inc
cmp
insb
aas
jge
lret
fnstcw
or
mov
xchg
scas
adcb
rcll
cmp
int
cvttps2pi
shl
shr
cmp
aam
lods
repz
andb
jnp
push
jge
ljmp
or
fnstsw
sbb
pop
negb
cli
ljmp
push
jno
cwtl
lods
and
push
mov
flds
dec
and
ss
testb
adcl
movsb
inc
insb
pop
sbb
ss
dec
into
fists
incl
add
or
psubsb
xchg
int3
inc
mov
data16
pop
stos
jo
cmp
jnp
inc
jge
dec
push
cmpsl
push
rolb
xor
rcrb
sub
fmuls
movsl
mov
lret
nop
mov
jne
sbb
insb
xor
ja
aaa
sub
cli
gs
lret
fnstsw
adc
testl
pushf
std
pop
mov
mov
mov
adc
out
mov
clc
xchg
outsl
push
pop
sbbb
sub
in
mov
leave
pop
fsubs
mov
repnz
push
sbb
fdivrp
movsb
repz
lods
rorb
adc
add
lcall
arpl
shl
ret
int3
dec
mov
cmpsb
push
push
dec
ds
cmpsb
xor
cmp
jno
arpl
add
push
lds
test
xor
repnz
sub
rcrb
dec
or
push
add
in
out
scas
sbb
fisubl
fsub
xchg
sti
outsb
das
movsl
es
outsb
push
inc
add
mov
sub
pusha
iret
adc
aam
scas
jo
insb
aas
jbe
mov
and
add
shr
mov
mov
dec
cld
cs
cmp
imul
xchg
sbb
repnz
jb
dec
daa
jl
test
cltd
inc
lds
imull
sub
adc
mov
sub
xor
popf
pusha
daa
repnz
mov
pop
icebp
push
sahf
mov
xchg
mov
ljmp
out
ret
nop
jae
rcll
gs
mov
inc
push
jge
jbe
icebp
sub
fsubrp
incb
int
das
cmc
loope
pop
pop
hlt
dec
loopne
sbb
lahf
cltd
sub
mov
mov
push
jbe
repz
push
pop
dec
out
ja
jmp
mov
sbb
mov
jae
xlat
adc
jb
xlat
clc
push
imul
jo
and
idivl
lods
push
add
or
insl
or
cmp
out
aad
popa
pop
mov
in
adc
xchg
xchg
andb
test
ret
mov
lea
push
inc
jge
pop
fiaddl
push
outsb
mov
popf
shr
mov
mov
sub
inc
call
or
push
or
lea
jnp
mov
pop
mov
cmp
loop
sahf
repnz
cmp
les
jns
sbb
mov
fstl
rorl
imul
mov
sbb
jmp
sahf
pusha
mov
je
mov
ss
out
sbb
push
mov
adc
push
lcall
or
jns
add
dec
icebp
enter
mov
sub
mov
push
mov
push
enter
rcll
adc
inc
add
test
pop
mov
mov
int
mov
pop
test
imul
add
insl
into
jmp
loopne
add
inc
shrl
int3
dec
std
xor
sbb
xor
mov
sbb
insb
inc
push
xor
imul
adc
sbb
fstl
lock
data16
inc
cli
xchg
add
sbb
pop
pop
dec
mov
aad
icebp
shlb
or
ret
or
mov
pop
adc
adc
jbe
fsubrl
pusha
out
xlat
or
lret
lds
int3
rcll
loope
mov
out
mov
std
lods
out
je
mov
push
mul
pop
push
stos
notl
or
jne
adc
or
mov
in
sbb
imul
push
adc
or
lds
divl
jle
cmp
shr
in
and
or
mov
in
add
and
mov
add
sbbl
or
ds
xchg
adc
roll
and
shl
xchg
out
pop
shr
jnp
bound
sbb
rcrl
fists
int
cld
loop
in
inc
inc
inc
mov
gs
pop
mov
mov
fwait
ljmp
mov
adc
dec
fs
cli
push
das
pop
vunpcklpd
cmp
rcll
adc
das
push
fcoms
or
add
gs
aad
and
jns
cli
loop
das
xor
jge
mov
mov
pop
mov
xchg
xor
jae
mov
cmp
inc
jne
push
cmpsl
hlt
jle
cwtl
dec
dec
push
lods
sub
sbb
push
aas
mov
inc
push
dec
jge
xchg
fmull
add
sbbb
dec
mov
movsb
outsb
shlb
dec
lods
ja
std
arpl
call
fmulp
push
repz
jg
dec
js
inc
leave
test
dec
test
xchg
repz
xor
std
push
lcall
dec
repnz
outsb
inc
lds
test
sbb
out
decb
imul
push
call
test
dec
out
in
adcb
pop
jnp
fldenv
in
or
dec
sbb
add
pop
cltd
popf
orb
test
cmpsb
cltd
cs
mov
ret
out
xchg
pop
sub
addl
push
add
pop
lret
mov
out
lea
and
xchg
insb
inc
jb
jae
int3
mov
push
xor
mov
test
not
in
insb
sub
mov
orb
sarb
rcrl
ja
sti
xchg
sbb
pop
stc
cwtl
push
sbb
pop
cmp
jns
push
pop
mov
loopne
aam
add
das
add
aad
jno
stos
jbe
cmp
aam
ror
or
ret
neg
jmp
mov
mov
cltd
lret
push
jne
push
imul
cwtl
cmpsl
push
xor
daa
stc
jo
xchg
orb
shlb
add
sbb
subb
into
or
xor
mov
sub
jnp
test
jp
mov
push
jns
repnz
outsb
dec
or
dec
inc
aad
scas
pop
mov
mov
gs
xchg
dec
mov
mov
icebp
cs
jmp
jmp
sub
jnp
push
aam
neg
xchg
in
into
ss
adc
inc
cltd
and
xchg
enter
rcl
push
pop
dec
mov
xor
xorl
ret
mov
jnp
pop
jne
and
cmpsl
pop
sbb
pop
pop
les
jnp
fucomi
jae
in
cmp
adc
in
into
daa
push
subl
mov
jecxz
lahf
pop
jno
out
scas
sbb
lret
mov
nop
inc
repz
sahf
mov
mov
mov
add
scas
int3
mov
sub
or
fistpll
add
mov
iret
sbb
push
and
fstl
xchg
das
add
mov
lahf
jl
sbbl
int
in
test
xor
cmp
sbb
lea
push
stc
cmpsl
in
dec
sarb
xchg
mov
into
xor
movsb
mov
or
jo
shll
cmp
dec
call
jne
daa
test
push
push
push
sbb
faddp
adc
out
push
mov
popa
and
pop
lods
cwtl
jo
mov
inc
jle
aas
mov
and
mov
mov
and
ret
dec
pusha
clc
or
cmp
out
or
aad
pop
push
dec
mov
fwait
cmp
mov
push
pop
jg
ret
sarl
roll
pop
mov
jge
pmaddwd
xor
hlt
pusha
cmp
cwtl
mov
ret
lds
adc
les
adc
pushf
mov
xor
mov
lahf
jo
rcrl
or
xchg
dec
sub
lahf
push
movsl
fwait
sbb
sbb
pop
jge
mov
push
fmuls
mov
cmp
pop
push
or
sub
mov
mov
mov
push
mov
lahf
adc
not
inc
ret
cmp
je
sahf
push
enter
inc
popa
xchg
xchg
fxch
stos
mov
and
mov
lcall
jo
sarb
div
push
cmpsb
inc
mov
inc
mov
xchg
mov
daa
nop
pop
call
xchg
push
ds
cmpsb
fcomps
loop
or
mov
xchg
repnz
outsb
push
ss
nop
adcl
cltd
scas
in
mov
ja
in
ljmp
xchg
or
cmp
ljmp
xchg
jbe
mov
cmpsb
xor
fmulp
dec
popa
repnz
int3
stos
push
lock
pop
pop
clc
cmp
mov
scas
stc
repnz
jge
adc
pop
sub
rcrb
push
and
sub
loope
daa
clc
pop
mov
add
and
mov
and
int3
mov
arpl
push
mov
cmp
xor
pop
pop
jmp
loopne
dec
mov
lea
js
jns
mov
jmp
sbb
loop
pop
xchg
and
cmp
or
and
and
shll
cmp
mov
aaa
js
adc
fistpl
popf
xor
inc
outsl
mov
insb
jo
and
dec
mov
ss
sti
xor
out
mov
adc
dec
mov
push
pop
faddl
adc
or
aaa
in
pushf
cmp
jg
aam
rcll
test
add
shrb
pop
ljmp
push
xor
imul
lods
inc
or
out
adc
cmp
repz
jecxz
xchg
mov
inc
lret
es
cld
or
sbb
enter
cmp
or
adcb
sub
aam
xchg
xchg
cmp
sahf
stos
mov
inc
mov
roll
mov
mov
adc
ss
ds
and
xchg
push
cmp
ja
cltd
xor
mov
jl
push
adc
stos
push
dec
fadds
repz
mov
incl
in
lods
imul
pop
push
cmp
imul
popf
das
andb
icebp
inc
jne
lods
mov
cmc
cli
and
das
das
xchg
adc
xor
mov
dec
jbe
cmp
fs
pop
pop
xchg
pop
in
xor
pop
pop
push
cld
jo
pop
imul
push
addr16
ljmp
mov
jp
jl
shr
push
mov
xchg
insb
mov
or
xchg
lods
in
cltd
cmp
jns
shrl
out
int
and
aas
stos
cmc
pop
and
call
mov
pop
cmp
leave
sub
xor
xor
sub
xchg
mov
cltd
stos
scas
and
test
mov
mov
sub
ror
cmpsb
adc
push
jle
pop
insl
cld
call
xchg
push
pushf
cli
das
pop
sub
stos
fiadds
nop
sub
jp
mov
xor
std
bound
cmpl
push
lds
mov
inc
pop
add
mov
leave
dec
push
dec
or
shrl
cmpsb
test
fiadds
inc
jecxz
das
inc
push
adc
cwtl
dec
scas
or
inc
add
repnz
mov
xor
in
sti
mov
or
inc
lahf
push
mov
cltd
adc
scas
lret
mov
inc
into
divb
pop
inc
sub
and
mov
or
stc
sbbb
sub
je
push
push
jp
dec
xor
enter
xchg
push
fmull
push
ljmp
ds
xor
or
mov
adc
push
in
sti
in
hlt
jns
jp
jne
ds
outsl
pop
js
lock
cwtl
jecxz
mov
xor
mov
pop
xor
sub
mov
ret
test
imul
das
jmp
xchg
ror
cmp
sbb
js
outsb
clc
inc
sbb
shrl
data16
xchg
fcompl
pop
cltd
add
inc
mov
jecxz
repz
mov
sbb
xor
es
test
scas
shlb
testb
cmpsl
cmp
mov
xchg
and
and
dec
adc
inc
neg
adc
push
clc
adc
mov
out
and
enter
or
js
loop
sbb
outsl
mov
adc
jnp
scas
es
push
std
cmp
mov
sub
sub
inc
and
inc
data16
jbe
andl
inc
stc
sub
imul
sahf
mov
or
add
mov
clc
in
xchg
add
mov
pop
repnz
or
xor
jecxz
adc
xor
ljmp
xchg
aad
fldt
sbb
hlt
in
sti
inc
or
les
icebp
sub
sbb
jmp
sahf
mov
imul
inc
jo
scas
sub
sub
movsl
outsl
cmpsb
cmp
xor
add
adc
sarl
inc
scas
or
nop
sbb
add
call
lahf
sub
cwtl
pop
xlat
lahf
jnp
das
sti
xor
sbb
push
pop
cs
loope
fcomps
add
sbb
lods
je
adc
mov
xlat
xor
std
cs
push
faddl
mov
lahf
int
jle
ljmp
jecxz
imul
clc
push
fprem1
jno
mov
mov
ljmp
cmp
ja
mov
adc
fwait
jle
in
fmuls
shrl
ret
fsubr
cmp
aaa
push
pop
mov
push
pop
fcmovnb
shll
inc
xchg
cmpsb
js
iret
jg
data16
inc
or
lock
bound
add
add
and
push
icebp
outsl
pop
sbb
lcall
dec
xor
repz
lret
jne
dec
cmp
add
mov
fwait
jp
mov
xchg
std
or
es
pop
jns
lret
adc
dec
jb
rcr
dec
mov
sbb
mov
mov
in
ljmp
jae
or
xor
adc
test
bnd
fwait
mov
add
sarl
popf
je
cmp
cmpsb
mov
lret
out
mov
repz
lcall
jb
mov
add
mov
stc
pop
sahf
test
sbb
pop
push
addr16
add
jmp
and
lds
imul
cli
into
scas
test
pop
popa
outsb
cmp
or
dec
cwtl
dec
ja
addr16
xchg
cmp
in
out
int
mov
or
fimull
sbb
test
dec
jno
imull
jp
xchg
lock
add
adc
shl
les
xor
mov
pop
sbb
movsl
into
push
dec
dec
into
ret
pop
lret
sarb
ljmp
push
arpl
test
loope
hlt
daa
or
std
sub
or
mov
pop
stc
sub
jle
mov
lea
adcb
sahf
jle
cs
jmp
mov
inc
jg
push
xor
std
mov
xchg
jnp
pop
push
lds
sub
sahf
fwait
daa
aaa
mov
jge
push
jle
pop
ret
std
outsl
adc
inc
pop
das
stos
insl
movsb
push
jae
daa
arpl
add
movsb
sbb
pop
mov
dec
jns
or
lret
rorb
pop
ret
notl
or
lods
xor
mov
sub
xor
pop
addr16
bound
mov
xchg
insb
mov
addb
jp
jg
mov
xor
ds
js
shll
test
pop
negb
mov
int
sub
ficoms
xor
or
repz
aaa
shlb
push
fdivrs
pop
add
push
xchg
orps
pop
mov
popf
cltd
mov
adc
ss
xor
add
lods
push
sub
mov
sbb
mov
int3
jge
mov
insl
scas
js
mov
pop
xor
cs
mov
lea
inc
aas
clc
stos
mov
dec
or
mov
add
xor
or
jns
out
cltd
pop
mov
outsl
push
inc
push
mov
xchg
gs
cmp
fstpl
mov
scas
stos
xor
jo
inc
jl
icebp
popf
pusha
es
mov
sub
call
xorl
aam
mov
icebp
cmp
out
inc
xor
inc
adc
iret
popa
ret
xor
or
leave
pop
inc
push
dec
clc
fs
cld
loope
jbe
adcl
pushf
stc
push
addb
negb
aad
ret
cmp
xor
adc
lret
js
lods
pop
test
adc
xchg
mov
pop
icebp
jnp
pop
repz
lret
sbb
mov
jnp
xor
js
mov
pop
adc
int
test
ret
mov
mov
xchg
dec
loopne
movsb
fisubrs
mov
add
xlat
mov
push
and
rcll
test
inc
mov
mov
in
outsb
stos
sub
test
or
lods
or
mov
xchg
ds
inc
cmp
dec
mov
and
sbb
push
jae
mov
stos
rclb
rol
pop
push
test
and
mov
insl
fucom
out
mov
cs
fisttps
sub
mov
rorb
dec
mov
sbb
xor
jne
sahf
gs
xlat
leave
fistpll
icebp
out
cmp
shl
jge
jle
lret
mov
outsb
pop
lods
sbb
xorb
popa
jns
into
pop
call
mov
nop
mov
xor
sbb
add
pop
outsl
test
aam
int
movsl
insb
fsubl
fsub
sub
mov
add
cmp
xor
loope
ss
jge
mov
lock
pop
jge,pn
jl
xchg
mov
scas
push
mov
scas
pop
fidivl
adc
arpl
xchg
leave
je
hlt
cltd
insb
xlat
cld
xor
aaa
js
lea
fildl
dec
pop
push
pop
divb
dec
mov
xlat
adc
out
fiadds
ret
jo
xchg
aad
mov
outsl
subb
mov
dec
dec
sti
mov
ljmp
sbb
sub
stos
cltd
pop
add
int
mov
and
xchg
cmpsl
movsb
in
incl
stc
push
mov
shrb
xchg
fsubs
jp
jmp
ljmp
cld
push
gs
out
mov
fcmovu
pop
push
mov
xchg
cmp
rcr
sub
pushf
daa
jbe
in
insb
leave
add
les
push
inc
jg
sysenter
or
cmp
out
pop
mov
insb
repz
and
mov
repnz
ja
cli
notb
imul
or
out
and
inc
clc
dec
lret
sbb
sbb
bound
movsb
jb
mov
add
lret
loope
rcrl
mov
cmc
push
adc
subl
sub
jmp
push
scas
pop
mov
cld
add
push
dec
jle
add
sar
xchg
jmp
stc
push
inc
bound
add
scas
mull
test
push
mov
cmpsl
icebp
insl
xchg
mov
rcrb
out
outsb
ja
cld
loope
add
insl
mov
pop
jbe
fildl
or
sub
xor
push
xor
hlt
sbb
push
js
cmp
and
test
sti
mov
jp
xchg
leave
xor
ror
out
cmp
mov
gs
sti
loope
arpl
popf
lret
mov
orb
add
outsl
cmp
in
push
xchg
lcall
in
add
mov
out
pop
xchg
xchg
cmp
sti
pop
mov
mov
cmp
and
and
in
dec
xchg
scas
mov
insl
sti
pop
mov
cmpsl
nop
adc
fnstcw
in
add
jmp
push
into
sub
jmp
shl
sbb
pop
pop
cld
out
and
pop
pop
out
movsb
out
dec
arpl
arpl
push
fistpl
fistps
out
xlat
and
fstpl
add
movsl
adc
add
adc
mov
mov
test
addl
stos
xchg
dec
inc
dec
leave
mov
jp
int
lock
adc
xchg
pop
loope
loopne
dec
jae
hlt
iret
enter
sbb
xchg
add
addr16
mov
fdivs
inc
ljmp
pop
leave
daa
int3
shr
sub
sub
inc
cmp
push
sub
push
stc
inc
data16
mov
repz
les
add
or
inc
mov
je
dec
aam
in
push
sbb
out
mov
outsl
aam
xchg
mov
adc
enter
push
dec
add
movsl
push
imul
cli
sbb
push
or
pusha
and
or
push
js
jno
adc
repnz
pop
mov
mov
add
test
out
in
pop
jbe
adc
push
arpl
jns
or
add
mov
cmp
stos
pop
imul
jb
popf
clc
in
fucomp
aad
mov
dec
fpatan
stos
sti
lret
icebp
loop
nop
ja
mov
xchg
adc
add
cmpsl
xor
pop
mov
faddl
mov
sub
dec
pop
stos
sub
sub
cmp
test
dec
iret
loope
push
sub
ret
lods
xor
lret
inc
xor
add
push
sbb
xchg
fmul
scas
add
mov
jno
negb
jle
mov
xor
dec
mov
ja
ret
les
cmp
or
addl
jns
out
cwtl
pop
lods
nop
xchg
fldt
push
bound
stos
into
dec
cmc
shrl
mov
and
push
cmp
push
je
lahf
jge
jnp
and
jmp
in
rclb
sub
jbe
cwtl
push
ret
add
fbld
jne
rcll
push
test
pop
fcmovnu
push
andl
sbb
pusha
xor
ret
sbbl
les
sahf
jae
jmp
mov
adc
ret
mov
inc
loop
hlt
mov
push
ds
xchg
xor
cltd
lcall
repz
jnp
rcrb
cmp
mov
imull
shlb
lret
push
inc
aad
repz
in
in
outsb
repz
cmp
jecxz
xchg
sub
fcmovnb
inc
stc
lods
dec
dec
add
in
cmp
xchg
out
xchg
inc
lahf
outsl
pop
dec
xor
mov
out
pop
aaa
ja
div
inc
stc
pop
jbe
jns
int3
adc
add
scas
jmp
cmpsb
icebp
stos
cmp
dec
popa
dec
sbb
mov
lods
or
loopne
push
adc
lret
jb
loope
pop
or
imul
mulb
into
xchg
cmp
bound
es
jae
test
mov
sub
xor
jmp
cwtl
addl
mov
pop
dec
cmp
std
loop
incl
sbb
inc
das
cli
iret
icebp
out
mov
inc
jmp
aam
nop
cmp
leave
pop
cmp
mov
into
aad
jne
scas
xchg
sbb
out
arpl
rclb
inc
lea
and
and
and
sbb
jecxz
sbb
movsb
xchg
mov
jno
iret
ljmp
sbb
cmpsb
xor
xor
lea
jb
push
jne
push
shll
xor
cld
sbb
pushf
ffree
stc
je
test
pop
adc
sti
dec
xchg
stc
sbb
pop
je
mov
int3
pop
stc
mov
pop
adc
xor
rcrl
out
and
mov
pop
xchg
in
add
outsb
and
lea
in
xor
mov
mov
dec
push
imul
popa
out
dec
and
fcompl
add
xor
lea
jb
int
pop
into
lret
push
aaa
test
repnz
cwtl
loop
fstp
iret
jne
or
sbb
mov
mulb
sbb
sub
les
faddl
sub
test
push
loop
mov
iret
or
in
add
inc
xchg
add
shl
sarb
call
addr16
in
insb
adc
mov
push
inc
imul
push
jb
mov
pop
lea
and
or
insl
rclb
pushf
and
je
and
mov
dec
jns
lods
cs
sahf
je
xor
fiadds
in
xor
xchg
mov
push
inc
fs
push
dec
movsb
xor
sub
out
aas
leave
ret
out
roll
enter
cmpsl
sub
repz
cwtl
jp
xchg
jb
repz
shlb
push
sub
inc
fstpl
xchg
and
mov
mov
add
scas
sub
scas
addl
xchg
mov
fldcw
cmp
fistl
movsb
loopne
xchg
sbb
and
cmp
jo
pushf
xchg
clc
test
shrb
add
sbb
data16
addb
popf
jmp
xchg
shlb
lret
pop
fcmovnu
dec
aad
sahf
cmp
and
int
test
jo
cmp
xchg
xlat
adc
adc
sbb
push
fwait
push
jmp
jo
lcall
and
adc
andb
iret
pushf
xchg
cmp
scas
pusha
out
pop
mov
adcb
pop
mov
pop
add
pop
int
and
jmp
ret
ja
outsb
pop
cmp
sbb
inc
sahf
nop
add
cmp
daa
inc
daa
orl
ljmp
xor
xor
pop
push
cmc
sbb
inc
nop
push
dec
bound
sbb
std
int
push
sub
popf
ss
lds
mov
stos
cmpsb
cs
scas
out
add
rorb
mov
inc
aam
das
sub
lret
pushf
cmp
jp
jns
xor
sahf
inc
imul
unpckhps
sub
inc
inc
cmp
xchg
in
mov
aaa
notb
sub
xorl
test
pop
mov
imul
cmp
out
icebp
imul
xlat
cli
adc
mov
aad
nop
sbb
es
lahf
push
rcr
scas
and
arpl
nop
and
mov
and
xor
decl
mov
pop
inc
popf
jbe
mov
add
jmp
lds
push
inc
inc
lahf
aam
fildll
aad
inc
repz
xchg
nop
dec
sbb
xlat
inc
adc
cmp
jmp
adc
std
mov
fimuls
in
xchg
xchg
sbb
shl
inc
out
out
test
stos
lea
daa
outsl
insb
mov
jl
xor
out
mov
outsb
sbb
test
pop
lods
int
xor
push
pop
cli
fisubl
dec
pop
add
aad
sub
add
iret
rcrb
pop
mov
add
leave
mov
inc
arpl
mov
jbe
cmpsb
ss
pop
fdivs
jle
test
add
dec
inc
aad
leave
cmp
pop
dec
xchg
jle
mov
rcl
nop
mov
inc
lahf
adc
stos
pop
in
fcomip
fmulp
pushf
dec
out
fsubr
cmc
movsl
xchg
aaa
into
fdiv
push
mov
xchg
sbb
inc
loope
aad
fldl
or
pop
mov
jmp
push
pop
pop
out
dec
vpcomq
mov
dec
cld
lret
xchg
popl
xlat
test
sbb
jbe
push
add
in
inc
int
mov
cmp
dec
add
mov
jmp
rclb
cltd
sbb
scas
int3
xchg
mov
and
push
jmp
lret
ja
fwait
mov
sbb
scas
cmpsl
sub
mov
jle
push
push
mov
pop
xchg
cwtl
aad
xchg
dec
push
pop
daa
sbb
xlat
mulb
adc
andl
xor
xchg
jno
movsb
pop
das
cmp
and
enter
mov
inc
xchg
cmp
inc
pop
sarb
aam
inc
cltd
mov
int
xor
or
push
and
sbb
xor
xor
xor
or
lods
rorb
xor
insb
fxch
push
frstor
in
push
sbb
adc
stos
push
fs
mov
stc
dec
ret
cmc
inc
lods
jb
push
jns
cmp
loop
pop
cs
jno
hlt
xor
mov
in
sti
outsb
mov
sub
inc
sub
push
push
push
adcb
push
and
mov
jae
shll
ss
xorl
mov
ss
rolb
int3
mov
sbb
pop
test
inc
sarb
divl
jmp
pop
xor
pushf
movsb
in
add
pop
mov
leave
in
cli
mov
lods
and
xor
lahf
jg
jb
and
inc
out
movsl
inc
xchg
popf
xchg
pushf
and
sbb
imul
test
adc
push
jo
ja
pop
fidivrs
das
ljmp
push
pop
jae
mov
cltd
pop
mov
jp
fidivl
test
jle
ret
in
leave
lods
fistpll
add
cld
or
cmp
lds
jl
push
cmp
sti
pop
sbb
push
xchg
test
jl
jg
popf
pop
roll
mov
clc
in
jecxz
mul
ficompl
call
cmp
xchg
sahf
or
sub
addr16
not
fsubrp
clc
pop
mov
xchg
jns
jns
pop
jne
mov
dec
mov
mov
dec
mov
xlat
adc
cli
inc
inc
outsl
addr16
cmpsl
sbb
jo
fs
push
pop
sti
repnz
lahf
mov
mov
cmp
fdivrl
xchg
and
mov
int3
fcomi
cmp
faddp
inc
and
xchg
jns
cltd
cmpsb
xlat
test
inc
sbb
mov
loope
stc
lret
adc
jno
xlat
sahf
mov
out
icebp
jecxz
xchg
ljmp
subl
mov
mov
enter
or
not
fcomps
ror
pop
sar
mov
scas
lret
mov
pop
movsl
ret
aas
cmp
aas
imul
jbe
xchg
mov
in
or
cmp
mov
mov
js
ret
loop
cmc
std
fisttps
leave
mov
imul
stc
pop
pop
mov
das
outsl
dec
mov
fisttps
jle
insb
lock
xlat
adc
shll
jbe
cmpsb
je
stc
fiadds
inc
mov
subl
sub
cmpl
test
cld
out
lahf
mov
pop
lret
jnp
fdivrs
cmpsl
fwait
jle
mov
jl
push
jge
fwait
sahf
sbb
mov
loop
cs
lds
sbb
push
mov
out
lcall
scas
inc
cmp
jmp
insb
scas
in
xchg
and
cmp
ret
cmp
adc
inc
inc
pop
xchg
int
out
xchg
cmp
test
test
fcomps
push
je
push
in
cld
stos
in
mov
mov
clc
pop
push
jns
movsb
lret
jns
adc
syscall
out
les
cli
push
push
mov
popf
leave
cmp
or
arpl
add
into
lea
not
or
into
push
sub
aas
aad
or
and
or
shlb
into
inc
lret
stos
out
or
inc
lea
gs
fwait
je
jmp
jmp
pop
loope
sub
mov
pop
cmpsl
mov
xor
xor
jg
shll
pusha
test
add
mov
or
pushl
out
push
pop
std
cmp
int3
cld
bound
push
std
jmp
pop
and
movsb
adc
lahf
lock
pop
jl
movsb
repnz
mov
xchg
cmp
mov
or
mov
inc
sub
imul
test
aad
ljmp
mov
cli
lcall
roll
cli
outsb
push
dec
inc
pop
ret
push
dec
push
pop
je
jb
movsb
insb
push
xchg
xlat
sbb
mov
pop
int3
xchg
adc
dec
push
lea
xchg
roll
mov
jmp
mov
mov
inc
jmp
cmpsb
sbbb
pop
ret
lods
stos
and
loopne
mov
mov
pushf
dec
xor
mov
aas
nop
and
in
scas
enter
out
dec
ja
fs
int3
dec
push
push
xchg
sub
nop
sahf
shrb
sub
cmp
push
test
add
out
inc
mov
nop
mov
cmp
push
or
imull
loop
je
mov
pop
lods
jo
fistps
das
outsb
fldt
in
cmc
leave
mov
jecxz
push
int3
aam
loopne
push
xchg
mov
lahf
adc
xchg
inc
dec
dec
inc
pusha
bound
mov
pop
push
xor
dec
insb
dec
push
stos
test
add
cmp
jp
sub
mov
inc
push
aaa
lods
dec
test
push
outsl
mov
xlat
fsubrs
cmp
mov
ret
jmp
xor
xorb
xchg
add
cmp
call
test
jp
rorb
popf
push
cs
fldt
adc
mov
inc
cs
cmc
jmp
xchg
imul
rcll
lods
popa
imul
cmc
cs
inc
jno
sbb
mov
insl
pop
jmp
and
out
rolb
push
nop
mov
lret
sbb
push
adc
repz
addr16
xchg
lock
jnp
ljmp
rclb
lods
fwait
aam
sbb
push
cmp
dec
dec
iret
xor
dec
leave
cmpsb
loopne
jb
in
outsb
inc
jp
adc
rcl
and
xchg
sahf
add
inc
sub
push
lret
inc
jmp
xor
rcll
pop
stc
imul
dec
xchg
jmp
loopne
andl
mov
mov
cmp
mov
cmpsl
imul
cld
jmp
jl
dec
lret
sub
jmp
clc
fs
pop
mov
fdivrs
mov
int
lret
xor
dec
orb
mov
mov
scas
pop
loopne
mov
xchg
ljmp
or
pop
test
adcb
or
sbb
or
xor
pop
cmp
add
filds
popf
arpl
dec
test
loopne
shrl
push
stos
mov
scas
hlt
insl
fwait
dec
les
jae
int
xchg
imul
mov
test
popf
push
mov
mov
push
xchg
lahf
inc
sarb
cmp
adc
loop
stc
mov
push
jno
and
sbb
push
imul
in
idiv
mov
adcl
pmuludq
push
pop
addl
push
xchg
xchg
fidivrl
jns
mov
jle
xchg
and
cmp
xchg
rclb
shl
jmp
mov
cmpsb
sub
or
sub
and
in
out
push
sub
nop
sbb
xchg
mov
cmp
mov
lods
in
ljmp
dec
fs
loop
enter
movsb
loop
aaa
iret
xchg
xchg
mov
jns
lcall
add
jb
icebp
add
xchg
fcmovne
sbb
sub
push
push
push
and
mov
jbe
jecxz
pop
div
jmp
sti
loopne
dec
leave
outsb
jp
mov
sti
aaa
cltd
push
negl
inc
arpl
adc
push
jge
xchg
mov
push
test
aas
add
and
sub
cltd
or
push
lcall
add
push
jae
pop
mov
inc
scas
or
sbb
add
and
je
lcall
push
sbb
int
enter
add
loop
sub
mov
repz
mov
gs
pop
mov
negl
outsb
sbb
and
mov
sub
push
lret
addr16
arpl
mov
pop
mov
ret
pusha
pop
xor
jle,pn
mov
mov
test
fcoml
xor
mov
mov
andb
call
and
nop
scas
jno
mov
imul
push
lock
test
mov
pop
jmp
sahf
fwait
ret
fwait
aad
addr16
fistps
xor
xor
xor
inc
inc
loop
in
inc
fnstcw
jb
in
add
or
pop
pop
pop
in
mov
test
fcompl
and
dec
push
fsubl
imul
push
icebp
xchg
dec
mov
mov
mov
stc
in
sub
ljmp
cmpb
repnz
fs
lea
mov
push
pop
push
add
popf
pop
cmpl
loope
dec
and
cwtl
ja
and
stos
cwtl
cmp
inc
test
rcrl
popf
pushw
pop
cmpsl
call
jo
rolb
xlat
add
fsubs
idivb
mov
cwtl
cli
sub
add
popf
loop
adc
lea
and
repz
adc
int3
fidivs
mov
add
aas
mov
cmp
jb
scas
sahf
pop
xorl
ljmp
icebp
push
add
dec
pop
xchg
dec
push
or
add
data16
int
les
mov
mov
mov
cld
pop
jb
cmp
pop
dec
lcall
divl
mov
outsl
insb
lods
cmp
fwait
or
stc
mov
mov
or
test
popf
outsl
cmp
ds
loop
jge
adc
dec
fld
int
push
jmp
test
fidivrs
enter
enter
ljmp
cwtd
scas
xor
jo
fisubrs
cmpb
add
sbb
cmp
lock
ss
sbb
xchg
popa
dec
arpl
xchg
adc
ss
icebp
sub
mov
push
cmp
fisubrs
lret
loope
lahf
jno
fcmovnb
xchg
stos
rcll
cli
xor
aam
xor
sbb
xchg
adc
mov
mov
dec
rcrl
ljmp
push
xchg
stos
jb
mov
scas
xor
orb
fwait
mov
aam
jne
adc
loopne
push
jmp
rcl
mov
data16
inc
loop
jne
bound
test
lods
pop
jecxz
and
add
jo
jno
mov
add
push
mov
sbb
jge
mov
sbb
icebp
pop
dec
sbb
mov
lods
std
or
sbb
fadds
inc
stc
inc
repz
mov
and
jmp
movsb
imul
sub
shlb
mov
inc
test
push
jo
pop
sub
test
leave
in
inc
fdivl
mov
push
leave
fs
fninit
add
pop
cli
lret
and
sets
cmp
mull
jb
adc
ljmp
fstpt
in
fisubs
dec
pop
ja
stc
xchg
sar
das
sub
inc
stc
cmp
xchg
fnstenv
jo
and
aas
jl
push
mov
push
dec
mov
test
dec
and
add
daa
xor
sbb
sbb
xlat
cmpsb
loope
push
xchg
jno
or
test
out
xor
mov
enter
sub
jecxz
push
mov
sub
push
sbb
xchg
icebp
cltd
pop
or
js
mov
pop
sbb
btc
mov
xchg
in
push
rclb
int3
dec
andl
xor
mov
mov
pushf
push
movsl
jmp
inc
cmp
dec
imull
mov
cmp
push
fwait
sbb
cwtl
fs
ds
sbb
xor
jmp
stos
mov
push
orb
arpl
jne
xchg
stos
imulb
popf
cmpb
in
sti
dec
inc
in
pop
loop
roll
imul
or
xorl
and
push
sar
sub
shl
call
cmp
lea
scas
mov
decl
fcompl
mov
fidivl
inc
xor
mul
ljmp
sub
movsl
sub
test
dec
fs
dec
lock
sbb
cli
insl
mov
and
pop
test
push
push
jne
xlat
or
je
push
push
push
test
test
fsubrs
mov
pop
aam
add
xor
push
icebp
pop
subl
jbe
push
fsubp
mov
int3
jge
in
jb
sti
popa
sbb
jmp
pop
cltd
test
xchg
mov
xor
mov
push
lret
ret
add
in
push
mov
mov
out
sub
leave
cmpsl
bound
jg
add
jmp
fsubl
movsl
pop
idivb
push
pop
jecxz
sbb
in
frstor
mov
mov
lea
lds
popa
xor
sarl
ret
lcall
push
popf
jbe
daa
sub
and
pop
or
or
nop
sub
cmpb
xor
daa
push
in
xchg
mov
inc
jmp
jnp
pop
mov
imul
add
into
mov
push
mov
hlt
xorb
xor
mov
repnz
leave
adc
mov
mov
lds
iret
mov
sbbb
stos
outsb
mov
iret
mov
repnz
mov
jecxz
fs
pop
ja
mov
cmp
adc
cmp
xchg
mov
add
fiaddl
test
cld
mov
dec
or
mov
adc
shl
jl
cwtl
shrd
jns
push
dec
mov
push
aad
xchg
sbbl
inc
imul
sbb
jo
xchg
lcall
inc
fnsave
adc
jb
mov
jnp
mov
xchg
outsl
pop
fwait
into
pop
int3
mov
jno
movsl
adc
mov
jo
fiadds
and
ja
lahf
fbstp
xor
mov
rcll
jecxz
nop
aam
stc
aam
jge
push
ror
sbb
or
jle
push
andl
mov
push
adc
popa
mov
xor
das
shrl
xchg
and
jo
dec
out
ds
fisttps
popf
stos
movsl
ret
aam
inc
jne
xor
fmulp
cmpsl
jl
loope
lahf
xor
mov
call
imul
or
mov
mov
addr16
lock
push
lods
and
pushf
pop
ret
push
jle
lret
loopne
sbb
sub
testl
lea
roll
jne
push
cmp
mul
aaa
ret
add
pop
jae
xchg
jns
mov
fnstsw
sarl
pop
lahf
xchg
cmp
dec
pop
sbb
lret
cmpsb
scas
or
xor
inc
pop
ljmp
sbb
sahf
imul
cmpl
or
test
push
sbb
out
push
sub
push
sub
in
fldcw
fstl
ss
mov
dec
and
cmp
jo
jmp
loopne
int3
je
jecxz
out
mov
icebp
cmp
inc
loope
xchg
sahf
sub
xlat
add
pop
sub
test
cmova
adcb
sub
data16
mov
loopne
fwait
xorl
mov
fldl
aam
mov
mov
jg
jno
loopne
jle
fnstenv
test
add
dec
insl
iret
push
aas
jo
rcll
movsl
mov
pusha
dec
scas
mov
dec
mov
cmp
aam
or
mul
jae
add
pop
fisubrs
clc
inc
hlt
and
dec
add
out
fs
fprem
cmp
mov
jb
sub
mov
clc
cmp
lahf
add
repnz
adc
nop
mov
jb
shlb
add
sub
nop
jb
les
test
fneni(8087
cmp
push
mov
inc
lods
mull
repnz
push
xlat
outsb
pop
test
mov
shl
je
ret
fdivrs
dec
aam
push
stos
inc
cmpsl
lods
xor
sbb
mov
xchg
sub
mov
mov
push
adc
cmp
mov
mov
ljmp
jae
loop
insl
test
dec
sub
sub
pop
gs
pop
add
mov
lds
push
and
push
add
lods
sub
dec
es
lods
daa
pop
inc
mull
out
leave
mov
cltd
loope
or
adc
call
inc
hlt
adc
loop
jge
pop
fidivrl
mov
js
arpl
xor
subb
push
movsb
sbb
je
xchg
inc
xlat
pop
lcall
loop
cld
lret
push
stos
cld
lcall
arpl
repz
loop
sub
jns
cltd
adc
xor
mov
fwait
cmp
mov
bound
cmp
roll
add
imul
pop
pop
jle
insl
inc
cmp
and
mov
or
out
andl
jg
shrb
mov
fsubrl
movsl
je
jns
add
xchg
ds
fs
outsb
jbe
sub
imul
mov
mov
adcb
add
mov
popf
dec
cltd
stc
mov
jmp
into
xor
inc
call
sub
fs
add
leave
aam
fcmovnbe
pop
call
aaa
stos
push
sub
ret
pop
or
pushl
je
pop
arpl
sbb
repnz
sbb
cmp
mov
addb
sti
js
dec
sub
leave
dec
fldl
arpl
jle
inc
mov
push
add
xor
nop
jbe
ret
mov
sbbl
push
ds
cmp
adc
test
dec
fistpl
inc
xchg
cmpsl
dec
lret
sub
shll
cmp
fs
adc
into
add
scas
loope
js
push
insb
lods
filds
dec
cld
pop
popa
add
mov
and
ficoms
stos
xor
mov
jmp
jg
into
orl
mov
pusha
xchg
ljmp
xor
sub
inc
ret
cmp
mov
add
adc
push
inc
sbb
js
lods
cmpsb
into
mov
lods
fucomip
addr16
aaa
mov
adc
pop
jge
xor
loop
mov
shlb
mov
mov
shll
xchg
arpl
das
retw
and
jp
mov
sub
xchg
insb
xchg
dec
mov
stos
fmul
sar
inc
arpl
sarb
scas
pusha
int
out
jp
enter
sbb
xor
cwtl
iret
xor
call
jb
adc
and
repnz
stos
sarb
test
outsb
ss
rorb
pushf
shl
out
out
cmp
out
aaa
incl
pop
inc
es
das
jle
ret
addr16
stos
push
sarb
cmp
inc
popa
rclb
test
push
and
sub
lods
cli
outsb
and
lods
les
daa
leave
add
xor
xor
or
stc
sbb
sarl
and
xchg
sbb
pop
mov
lcall
dec
push
cmp
mov
adc
daa
xor
lahf
outsb
mov
repz
je
adc
fidivrs
shll
in
push
fistps
es
nop
pop
xor
into
dec
je
adc
adc
or
push
cld
jge
mov
icebp
jnp
or
dec
dec
mov
mov
pop
cli
out
push
jge
push
mov
sub
inc
mov
sarb
flds
lock
mov
int3
push
adc
xchg
lahf
push
repnz
xchg
mov
subb
in
xchg
loopne
insl
sbb
lods
sbb
dec
xchg
mov
int3
mov
add
add
or
in
mov
lahf
or
sub
jnp
mov
or
jbe
pop
xor
mov
pop
outsl
aaa
mov
adc
andb
cmpl
movsl
adc
or
cltd
fwait
and
fprem
mov
xchg
sub
cs
pop
inc
or
sub
add
out
lds
outsb
call
push
sbb
in
jb
mov
test
cwtl
fdivr
mov
aad
lret
cmc
cwtl
insb
aaa
fs
push
in
jp
lcall
adc
jp
and
xchg
inc
movsb
enter
adc
or
adc
push
adc
rcl
mov
daa
xlat
faddl
jle
sub
test
ss
sbb
sub
jg
dec
gs
inc
ret
push
fwait
jno
arpl
rcr
loop
insb
jmp
push
add
das
ficompl
sub
mov
test
sti
aam
dec
add
cmp
outsb
fmul
dec
adc
push
ja
data16
mov
mov
ret
out
ficoms
jnp
leave
out
inc
mov
and
leave
and
aad
das
fisttps
push
lret
loope
nop
push
cltd
mov
sub
dec
xchg
loope
cs
lcall
je
ds
in
sub
adc
push
xor
fdivrs
shr
mov
lcall
fdivrs
jno
push
lret
xchg
mov
call
cmp
test
sub
repnz
inc
xor
pop
push
nop
pop
mov
inc
pop
mov
stc
pop
inc
sbb
std
outsl
jae
mov
popa
popl
push
push
jae
mov
add
adc
out
dec
movsb
mov
gs
push
sub
pop
jo
sub
mov
adcb
dec
cmp
dec
out
sbb
ret
lahf
lret
insl
daa
mov
sti
mov
and
cli
into
lcall
jp
test
test
jne
aaa
pop
sub
std
in
dec
xchg
push
inc
pop
int3
lahf
xor
dec
mov
pop
jo
pop
dec
fldenv
mov
jno
mov
jb
ja
pop
push
loop
jnp
ljmp
shrb
xchg
and
test
sbb
ds
cmp
ja
pop
dec
pop
out
mov
pushf
fisubrl
filds
mov
or
mov
inc
out
ds
arpl
or
pop
pop
inc
jnp
aam
push
arpl
loopne
mov
mov
jle
sarb
js
cld
mov
jo
in
and
cmp
scas
dec
or
cmp
lods
push
inc
or
test
loopne
in
in
push
je
in
lret
push
add
mov
shrb
test
cmp
into
testl
or
dec
and
out
mov
xor
sub
in
int
bound
and
leave
pushf
sbbb
out
push
jo
insl
movsb
daa
loope
fsub
rcl
and
cmp
xchg
scas
flds
cli
or
in
aam
and
jg
xchg
xchg
sarl
inc
out
fimull
outsl
int3
lds
jno
fsts
cwtl
push
mov
xor
daa
mov
call
stc
mov
in
in
mov
inc
sbb
jno
sub
mov
test
das
shll
jmp
sbb
cmc
and
aad
jns
sarb
jecxz
mov
jle
jno
mov
mov
pop
fsubl
xorl
cli
popa
mov
test
mov
in
push
adc
outsb
dec
lds
rorb
jmp
jecxz
pmaxsw
inc
or
outsb
aad
test
xor
hlt
push
popf
cmp
mov
xor
adcl
movsb
cmpsl
das
mov
mov
or
fwait
sbb
decb
xchg
xor
cmp
jo
cmpsl
cmpsb
mov
lcall
or
stc
mov
jo
movsb
test
andl
stos
add
dec
cld
inc
add
aam
jno
es
lods
testl
test
and
out
inc
int
sub
rcll
icebp
clc
iret
pop
dec
mov
fsubl
mov
jno
dec
sbb
push
pop
cmp
push
cmp
jp
fs
push
push
xor
mov
xchg
in
bound
out
xor
add
divl
aad
push
push
push
sbb
sbb
fdivrl
xchg
cltd
mov
rcll
mov
loopne
sbbb
pushf
fisttps
push
scas
lods
mov
mov
clc
inc
mov
push
lahf
sbb
ja
xchg
les
lret
sbb
cmp
mov
fisubrl
fwait
in
enter
adc
fldcw
sub
mov
cli
repnz
lret
push
rorb
lock
fcmovbe
in
adc
ret
insb
fldcw
mov
or
fcoms
lahf
xorb
bound
les
add
in
test
add
jp
jb
xlat
imul
push
stc
ret
ret
stos
mov
jns
mov
shrb
movl
aas
jns
ja
mov
sar
dec
out
jmp
push
adc
ret
bound
cmp
mov
jno
sbbl
mov
push
enter
cmp
sbb
sarl
cmpsb
imul
add
xor
sub
jns
subb
scas
lock
xchg
fadd
mov
jg
xchg
and
or
pop
push
jns
push
inc
inc
cmp
lea
repz
call
jmp
push
jl
pop
and
jo
push
inc
sub
fstpl
push
packuswb
cmp
xchg
addr16
loop
jecxz
pop
outsl
dec
or
mov
and
push
dec
das
inc
cmp
sub
fmull
mov
pop
in
in
inc
jne
pushf
adc
out
std
mov
or
xor
pop
jnp
pop
push
jae
pop
xchg
in
push
mov
sbb
mov
ljmp
sarl
push
andl
add
inc
xchg
stos
add
pushf
imul
xchg
dec
cmp
or
sub
xchg
cmpsl
cmp
adc
icebp
jecxz
and
cwtl
std
lret
push
aas
int3
jle
or
and
out
dec
call
xor
inc
jl
insl
inc
imul
push
int
es
pop
dec
movsl
pop
out
jle
pop
push
das
cltd
and
dec
push
repz
xchg
lret
inc
inc
outsb
imul
ja
mov
cmc
mov
jecxz
cmp
loop
nop
sbb
sbb
push
add
lcall
jmp
repz
mov
rcl
test
cs
repz
jge
xchg
pop
xchg
cli
cmp
test
cmp
imul
adc
orl
andb
xchg
sub
mov
mov
pop
aas
mov
jne
lcall
push
mov
jge
fstps
xlat
add
out
mov
not
xor
xchg
xchg
dec
xchg
mov
mov
push
xrelease
out
push
cs
xchg
cmc
sbb
clc
rclb
in
and
lcall
mov
jecxz
and
not
adc
mov
ficoml
jmp
pop
mov
inc
sub
fstl
popf
inc
pop
dec
sarb
inc
sub
je
add
sahf
dec
inc
addl
inc
mov
xor
xchg
xchg
or
sbb
sub
insb
jne
push
pop
add
cli
jnp
cli
aaa
mov
sub
test
iret
fdivl
int3
mov
push
fs
adc
cmp
xor
shr
and
shr
nop
movsl
inc
adc
cwtl
xor
push
shrb
sbb
adc
and
lds
shlb
pop
jecxz
mov
pushf
and
clc
fs
shlb
jmp
mov
les
ficoml
ljmp
test
jo
xor
pop
mov
xor
leave
les
cwtl
and
add
cltd
mov
fistpl
popf
out
inc
fsubrs
in
mov
loop
shrl
or
sub
iret
lods
adc
ss
mov
pop
adc
adc
insl
dec
mov
sub
dec
cmp
lock
mov
clc
loope
jno
icebp
xor
ret
arpl
sbb
sub
dec
ret
adc
mov
cmp
or
mov
push
insb
popa
xchg
je
shrl
sbb
sbb
mov
into
push
imul
mov
xor
les
add
out
test
mov
leave
or
pop
fwait
std
add
movsb
sti
xor
pop
in
and
stos
out
mov
xchg
jmp
adc
fs
and
sbb
sub
inc
fcmovb
call
cmp
aad
popa
push
imul
jp
lods
pop
xchg
jne
int
dec
je
pop
inc
pop
in
iret
push
sbb
repnz
imul
or
mov
xchg
cmp
popa
lret
insb
ja
fcomip
sbb
dec
and
popf
repnz
or
sbb
or
loope
pop
stc
sbb
and
aaa
mov
add
and
dec
jae
out
add
cmp
add
fstl
pop
aaa
push
xchg
outsb
sub
push
sbbb
das
inc
std
test
jg
and
xchg
dec
xlat
sahf
push
mov
jle
faddp
inc
fbld
enter
int3
test
dec
stc
cmp
addr16
movsb
inc
imul
out
inc
mov
fdecstp
mov
mov
mov
sbb
push
push
aad
xchg
outsb
jbe
xlat
loop
pop
xor
mov
sub
imul
xor
enter
push
into
adc
out
pop
add
cmp
aad
ja
outsb
dec
sbb
in
push
icebp
and
popf
xlat
pop
in
sarl
repz
fs
xchg
pop
hlt
jp
dec
sbb
ss
cmpsl
jl
lahf
ror
jae
sbb
pop
loopne
pop
jno
and
mov
and
gs
fsubr
or
orb
cmp
xchg
push
clc
fwait
cmp
addr16
or
jb
add
lock
es
in
sbb
push
sarl
out
cwtl
xor
loop
neg
adc
pop
popa
lret
inc
push
pop
add
in
xchg
rcrl
test
sahf
clc
add
push
in
pop
sub
stc
fnstenv
mov
inc
add
test
jecxz
stos
mov
movsb
in
je
mov
mov
add
test
js
mov
daa
lahf
loopne
leave
or
or
mov
xchg
fldl
sbb
popf
outsl
pop
in
cmc
mov
inc
pop
sarl
fildll
cwtl
mov
inc
jno
push
xor
sub
pop
xchg
fsubrs
sub
mov
push
aam
shrl
in
nop
fisubrl
mov
fisubrs
ljmp
sahf
and
rol
and
pop
lahf
stc
in
add
int
and
sbb
ljmp
or
test
rorl
cmp
cld
cli
push
xchg
enter
jg
xchg
cmpsl
shrl
cmp
adc
and
aaa
or
mov
insb
adc
mov
add
movb
adc
icebp
test
popa
out
add
das
lds
icebp
inc
jle
and
add
sbb
aam
push
aam
fisttpl
int3
addr16
sub
xorb
sub
sub
lds
loopne
clc
cmpb
pop
cmpsb
lahf
ja
orl
cs
std
mov
sbb
fcmovbe
and
add
jmp
inc
repz
sbbl
clc
outsb
jno
mov
ret
mov
cmp
fwait
push
cld
js
sub
sub
addb
test
mov
in
int3
test
add
icebp
xor
xor
xchg
jb
sub
cmp
sbb
or
ljmp
mov
adc
jmp
cld
cwtl
repnz
push
or
cmp
xchg
loope
insb
pop
dec
arpl
pop
adc
shl
jge
jle
and
or
stos
jo
xchg
sbb
push
add
in
scas
stos
xor
mov
mov
xorl
test
pop
shrb
iret
fstp
lods
test
push
and
in
sarb
mov
push
arpl
rcrb
push
rcr
je
jo
sbb
jp
sti
daa
cmp
outsb
shlb
std
stc
sahf
sbb
xor
loope
scas
in
xor
jmp
jnp
pop
movsl
ds
nop
xor
jecxz
imul
push
in
inc
cmp
or
xlat
int3
jbe
push
in
mov
jp
into
movsl
inc
adc
je
pop
in
and
and
mov
mov
dec
pop
mov
testl
sbb
push
ret
xor
add
test
inc
cmp
in
pop
dec
lcall
pop
sub
mov
pmaxsw
fisttpl
jo
push
cmovae
adc
mov
mov
add
cld
cmp
jle
nop
mov
fmull
pop
out
aas
xchg
or
push
dec
popf
jns
and
dec
subb
aam
sti
arpl
pop
mov
shlb
lcall
inc
mov
jbe
fstpt
dec
sub
cmpsb
popa
mov
test
sub
insl
mov
cmp
je
jae
popa
push
sbb
pusha
adc
mov
cld
inc
pop
and
std
pop
dec
clc
xor
aas
repz
mov
in
cmpsl
xor
cmpsl
sub
xchg
outsb
pop
xor
sub
cwtl
adc
mov
stos
dec
fidivrl
cmpsl
mov
mov
stos
and
cwtl
or
daa
or
cmp
ret
stos
test
int
cmp
in
mov
rol
add
inc
mov
imul
scas
mov
dec
nop
popa
inc
dec
or
cmp
xor
mov
jns
scas
sub
fsubs
sub
push
test
sub
inc
out
xchg
lods
cmp
fwait
stos
inc
sbbl
ljmp
mov
jl
adc
mov
cmp
cmp
fs
movsl
and
ljmp
inc
inc
filds
in
cmpsl
ljmp
flds
xor
pop
cmpsb
mov
jmp
cmp
scas
mov
xchg
fadds
xchg
js
mov
ret
mov
xor
aam
mov
fisubrs
or
stc
and
add
and
push
testb
mov
sub
push
addr16
imul
adc
imul
fisttpl
repnz
sarl
xor
loopne
hlt
add
pop
inc
xor
mov
ss
jecxz
lcall
lock
int3
mov
mov
fs
iret
adcb
lret
loop
subl
cwtl
pop
out
mov
sub
aad
je
mov
adc
leave
sub
or
hlt
mov
push
scas
ficoml
jnp
pop
xchg
mov
pop
jnp
add
mov
loopne
sti
insb
ljmp
adc
and
jle
outsl
and
pop
sub
or
inc
ljmp
icebp
imul
inc
hlt
or
gs
pop
sub
movsl
pushf
loop
fdivl
mov
ljmp
dec
adc
adc
push
sbbl
cmp
addr16
add
das
pop
and
test
jnp
cmpsl
stos
orl
mov
xor
or
cmp
pop
jl
ret
sbb
fisubrl
xchg
test
adc
inc
and
call
jne
add
int3
pop
jns
fwait
mov
movsb
loop
xor
in
shlb
call
and
test
and
cld
jmp
rcll
rolb
pop
mov
roll
das
jecxz
cltd
imul
ss
popa
test
cwtl
xchg
loopne
clc
jg
push
in
mov
jo
xchg
add
mov
add
add
xlat
dec
and
popl
fisubl
cmpsb
int
iret
sub
imull
mov
int3
inc
sub
mov
lretw
or
sub
and
adc
loopne
jge,pn
adc
dec
loope
push
and
cmpsb
out
sbb
ds
adc
je
shrb
outsl
jmp
ja
push
xchg
notb
xchg
pop
imul
cs
dec
call
inc
dec
xchg
shrl
cmp
sahf
xor
outsl
xchg
add
loopne
imul
mov
cmpsl
adc
imul
popa
jle
dec
inc
sub
dec
movsb
jge
push
aam
loop
fs
add
pop
or
sub
int
enter
lods
daa
fidivrs
cwtl
push
addr16
dec
arpl
and
add
push
mov
pop
jne
les
test
and
push
sbb
movsb
push
jp
fisubrs
mov
bound
int
lret
cltd
scas
sub
test
pop
pop
fstps
test
and
inc
pop
add
lret
dec
popf
insb
xchg
fiaddl
mov
pop
sub
push
das
jmp
hlt
mov
dec
cwtl
cs
dec
ljmp
dec
repz
enter
fidivs
data16
sub
or
jp
outsl
test
cmp
mov
mov
outsb
out
cld
pop
fwait
push
or
mov
mov
lahf
call
lock
push
addr16
or
xchg
imul
or
stos
add
or
mov
das
repnz
push
sti
stc
mov
mov
mov
sub
stos
addr16
hlt
andl
cltd
adcl
mov
cld
add
mov
fnsave
or
leave
adc
pop
sub
mov
pop
movsl
xlat
cmp
or
dec
cmp
cmc
jge
jno
jo
jbe
icebp
pop
insb
jg
sub
loopne
int3
sti
cmp
cwtl
xchg
mov
loope
mov
daa
push
inc
xor
cmpsl
adc
pop
jae
lds
inc
mov
inc
cmpsl
sub
jne
sub
sbb
inc
push
stos
fcmovu
xchg
or
sahf
xchg
mov
stos
mov
loope
push
incl
mov
add
pop
add
mov
insb
jae
inc
shll
add
xchg
adc
and
fildll
cmp
adc
mov
xor
dec
jae
pop
fsts
mov
cmp
cmp
mov
mov
xor
sahf
pop
adc
inc
lods
scas
mov
icebp
scas
leave
rol
jp
bound
sbb
bound
into
test
cwtl
lea
mov
mull
or
add
fwait
and
dec
push
cltd
cmc
fsubs
mov
xchg
imul
dec
ss
sbb
jp
js
lock
jne
in
sahf
cli
rcll
or
or
add
dec
lock
push
inc
inc
pushf
mov
sbb
push
xchg
mov
sbb
dec
scas
mov
std
dec
jmp
lds
fmull
jbe
mov
adc
aas
std
mov
rolb
shrb
xor
push
in
leave
fwait
rclb
cltd
or
out
fisubl
inc
lods
fimuls
sbb
rclb
push
fimull
in
jp
xchg
lock
pusha
pop
jecxz
inc
jbe
push
inc
cmpsb
pop
pop
fcmovnb
xlat
lret
pop
daa
lahf
push
or
xchg
lahf
jns
dec
cmp
lods
stc
dec
outsl
xchg
jmp
imul
ss
pop
loop
xchg
in
bound
or
mov
std
cmp
sub
testb
sub
sbb
js
and
test
xchg
dec
and
fdivrs
pop
data16
cmp
sti
cltd
insl
pop
sbb
jo
ret
sub
out
mov
icebp
pop
sub
inc
pop
push
xor
sub
jmp
shrb
dec
hlt
push
out
loop
lahf
cmp
xor
movsl
addb
sbb
arpl
xlat
jns
lret
add
xor
inc
pushl
mull
stos
scas
pop
add
jge
or
ja
sbb
add
iret
call
mov
int3
sbb
and
loope
insl
add
xor
aam
fxch
adc
ficomps
xor
cmc
clc
xchg
mov
lcall
inc
cli
aad
clc
sbb
lods
xor
xchg
aaa
inc
push
into
subb
or
shrb
xor
mov
in
dec
jmp
addl
fcomps
fistpl
cld
ret
xchg
mov
add
xchg
in
pop
xor
or
pop
movsl
push
sub
icebp
push
add
leave
cmp
dec
cmp
dec
pop
cli
gs
xchg
call
sub
daa
es
and
leave
arpl
cmp
push
sbb
jns
mov
xor
inc
sbb
mov
and
pop
ss
pushf
xor
pop
aam
out
mov
or
and
popa
or
jg
cwtl
sar
dec
cmp
repnz
pop
cmp
outsl
out
inc
xchg
jbe
mov
bound
jg
js
jg
decb
xchg
mov
movsl
sub
test
mov
lds
in
out
test
mov
jno
hlt
lods
xor
mov
push
adc
adc
cmpl
mov
arpl
mov
jae
mov
cld
inc
dec
inc
mov
movsl
and
mov
inc
inc
pop
mov
cwtl
mov
enter
mov
xchg
jg
mov
sbb
xor
push
xchg
jle
adc
js
inc
or
negb
inc
push
push
jbe
mov
popf
jmp
dec
std
bound
rorl
push
test
inc
data16
mov
lods
int3
mov
imul
lahf
data16
ret
test
hlt
in
ficoml
rclb
jns
lahf
push
sbb
imul
mov
mov
subb
iret
sub
push
adc
mov
inc
xchg
dec
mov
mov
push
mov
mov
push
dec
jo
add
shrd
mov
adc
xor
in
sub
mov
dec
jg
jne
fwait
add
push
pop
push
and
xchg
xchg
cmpsb
sub
lds
enter
inc
stos
push
call
cmpsl
pop
aad
jle
xor
fdivrs
adc
jnp
pop
cmp
mov
add
in
shll
test
xor
push
or
push
xlat
push
in
test
in
pop
frstor
cwtl
fildl
fmuls
jb
les
xor
sbb
or
sub
mov
lea
sub
data16
out
test
ja
aas
cmpb
sbb
scas
mov
in
dec
xor
xchg
out
test
lea
std
notb
push
out
cmp
jno
sbb
sbb
and
add
and
push
sahf
push
or
xor
test
mov
inc
jg
mov
and
adc
sbb
cwtl
outsb
inc
sbb
sbb
add
mov
fsubrl
popf
fisubl
and
test
int3
cld
adc
addr16
clc
lahf
adc
adc
jl
xchg
fiaddl
adcb
stos
push
push
daa
sub
lcall
xor
dec
jb
dec
pop
mov
call
negl
loopne
je
pushf
mov
adc
icebp
jl,pn
jne
mov
das
repnz
cmp
pop
or
and
and
and
shrb
bnd
adcl
pop
pop
rcrb
andl
sbb
and
cmp
ljmp
loopne
xchg
sub
inc
aad
push
cmp
pop
sbb
jg
inc
bound
cli
loope
test
and
fs
add
orl
pop
cmp
leave
ljmp
out
js
adc
testb
in
and
and
nop
cmc
dec
xchg
clc
or
sbb
nop
sti
lds
arpl
add
fnstsw
pop
shlb
sub
leave
xor
stos
adc
fcmovb
sub
out
add
lods
cld
out
push
and
jmp
enter
or
fsubr
sub
fs
mov
xchg
lret
push
in
insb
imul
into
jecxz
and
bound
pop
sbbl
mov
pop
fwait
mov
mov
psrld
mov
jno
outsl
lods
push
push
into
imul
jne
test
push
shll
fisttpl
push
add
and
outsb
mov
mov
xchg
shr
xor
iret
push
mov
fisubs
inc
push
mov
mov
sub
sarl
xor
jp
xor
insl
mov
fdivl
pop
or
cmc
movsb
lods
andl
cmp
cs
js
sbb
mov
arpl
adc
adc
mov
inc
out
jge
in
mov
int
xchg
lret
stc
adc
decb
testb
in
mov
jp
inc
and
out
repz
or
fnstsw
push
and
sub
inc
lahf
sti
cltd
mov
dec
or
xor
mov
cmpsb
and
test
mov
sbb
or
mov
or
aad
or
sbb
fisubrs
nop
dec
mov
insl
sbb
cmp
bound
or
pop
xor
adc
mov
cli
mov
jne
in
test
xchg
scas
rcr
lds
cld
jns
sbb
mov
call
xor
int
js
pop
mov
scas
insb
iret
mov
and
faddl
mov
je
les
outsb
sarb
mov
enter
inc
pushf
mov
mov
in
xor
lea
mov
in
ss
popf
sbb
cmp
jl
das
shll
cltd
fnstenv
leave
outsb
xor
cmp
inc
mov
cltd
inc
gs
pushf
int3
cmpsb
dec
push
xor
in
aas
mov
mov
dec
andb
pop
mov
xchg
test
and
lods
jb
xlat
int3
dec
das
mov
andl
in
and
test
test
out
aas
mov
xchg
gs
cmp
cmp
loopne
jb
in
lods
imulb
pusha
inc
cltd
adc
icebp
imul
in
out
fisubrs
or
lret
mov
in
aaa
jnp
sti
inc
and
mov
ret
jg
add
jmp
std
imul
repnz
js
or
test
or
pusha
cmpsb
xchg
adc
xchg
out
pushf
or
xchg
push
inc
push
add
mov
cmpsb
jmp
out
clc
add
xor
jne
sbb
mov
push
mov
jmp
mov
cmp
mov
or
testl
or
mov
add
cwtl
dec
sub
js
mov
dec
pusha
cmpsb
add
loopne
and
popa
mov
cs
xor
sbb
fcomip
mov
xchg
mov
mov
and
testl
pop
fnsave
shrl
dec
incl
push
mov
pop
push
enter
bnd
repz
sub
mov
jb
jmp
or
jge
popf
into
sbbl
sahf
pop
daa
push
mov
mov
rorb
dec
adc
pop
lods
jb
mov
outsl
jmp
mov
xchg
sbb
sub
cmpsl
adc
mov
int
movsl
ja
or
xchg
sub
mov
sub
jb
mov
fs
mov
data16
mov
adc
mov
jb
cmp
inc
pushf
and
dec
icebp
inc
lock
dec
lods
jp
pop
add
push
or
addr16
sarb
mov
dec
pop
ret
ss
jo
fwait
inc
sbb
lret
dec
and
xchg
inc
push
cli
sti
pushf
or
dec
cmpl
mov
sbb
movsl
cmp
test
add
cwtl
aam
add
dec
sar
xchg
cwtl
cmp
pop
sub
in
adc
push
adc
shrb
mov
sub
pop
pop
sbb
test
adc
push
xchg
jmp
gs
lcall
les
or
cmp
fimull
cmc
jle
push
popa
ljmp
jmp
push
sub
jne
lods
mov
incl
ret
inc
push
ja
in
dec
xorb
lret
stos
jge
lea
dec
xlat
sub
fwait
in
mov
outsl
cmp
jmp
mov
int
loop
and
inc
lods
insb
roll
mov
out
fdivrl
pop
fsubs
gs
in
arpl
pop
push
fwait
or
jo
lods
iret
out
sub
cpuid
mov
outsl
jae
stos
aas
dec
insl
stc
or
sub
nop
gs
push
add
pop
or
btrl
adc
hlt
loopne
lea
and
arpl
test
mov
mov
mov
xor
int3
fiaddl
add
rcll
push
mov
mov
int
push
mov
iret
jg
ffreep
icebp
push
out
cmc
imul
fldl
cmpsb
insb
adc
adcl
clc
stos
in
nop
imul
mov
inc
ss
add
xchg
xchg
lahf
sahf
sbb
mov
ret
push
fnstenv
addr16
add
lds
inc
sbb
xchg
xchg
push
pop
inc
and
mov
inc
adc
or
dec
rcll
je
insl
dec
adc
xor
push
in
addr16
inc
loop
test
in
push
and
pop
mov
add
pop
adc
loop
in
rolb
mov
fwait
cltd
pop
or
push
and
cwtl
push
or
ret
cmc
lcall
pop
gs
ds
mov
pop
ffreep
std
cmp
nop
in
ds
movsb
fs
mov
pop
dec
leave
mov
mov
es
or
dec
sbb
xlat
repnz
outsb
mov
imul
adc
jp
ret
jno
cmp
int
jae
dec
xor
outsl
popa
push
nop
adc
jl
cmpsb
inc
inc
or
or
sahf
test
dec
xchg
clc
or
mov
or
or
lcall
cmp
stc
cmpsb
jl
rcrl
fdivr
add
pop
xchg
lods
pop
xchg
cmc
cmp
sti
mov
call
das
jae
out
mov
test
imul
adc
xchg
enter
or
sbb
divl
fisubrl
sub
mov
fildl
jge
pop
addr16
js
xor
mov
mov
fcmovnu
mov
fildll
mov
pop
and
sub
jmp
or
dec
lret
ds
inc
mov
xchg
mov
mov
pop
pop
test
mov
test
sbb
push
xor
ljmp
mov
cmpsb
incb
push
xor
aam
inc
test
aad
les
ss
jmp
icebp
jecxz
pop
cmp
and
mov
or
inc
and
shrb
aaa
loopne
dec
mov
pusha
jge
lods
sbb
inc
dec
jae
cmp
ret
xchg
add
or
and
dec
shrb
mov
dec
dec
cmp
test
outsl
movsl
dec
out
inc
scas
das
lahf
push
add
out
loope
pop
shl
cmp
popf
add
sub
push
pop
push
dec
mov
push
and
xchg
imul
mov
pop
jnp
inc
cmp
xor
mov
test
xchg
enter
pop
cmp
bound
and
jbe
fcompl
sti
mov
jae
mov
sbb
lock
xchg
pop
pop
pop
sahf
pop
sub
push
scas
xchg
les
sub
xchg
int
out
dec
int
insb
out
iret
fisubrl
add
andl
test
movsb
std
adc
cwtl
test
sahf
inc
xchg
fisttps
jecxz
jnp
outsl
out
push
sub
outsb
pusha
aam
lcall
or
add
ja
inc
sbb
or
cwtl
and
xchg
mov
rol
mov
pop
xchg
push
add
push
push
sbb
cmpsb
cld
testb
in
popf
outsb
ret
dec
inc
sub
imul
or
mov
mov
jl
fistpll
ret
sub
and
jge
movsl
lret
mov
gs
or
insl
in
mov
add
pop
add
std
scas
inc
xchg
xchg
xchg
jle
ss
mov
push
fs
mov
push
xchg
push
adc
test
pop
sub
push
hlt
fisubl
jge
xlat
jno
insl
dec
add
cmp
pop
imul
sbb
adc
xor
test
ret
pop
sti
sbb
rcl
test
cwtl
add
adcb
or
std
mov
inc
xchg
lock
les
pop
or
xor
dec
push
out
pop
sbb
xchg
mov
and
xchg
sbb
lahf
jge
popa
mov
cmp
popf
push
push
inc
fiaddl
pop
jns
int3
add
aas
ss
xchg
daa
pop
iret
and
into
lods
cmc
xor
test
jnp
inc
pop
jp
mov
sub
cmp
in
dec
add
nop
inc
lahf
outsb
pop
fcmovnu
or
and
int3
inc
sbb
mov
das
rcrb
xchg
sbb
int3
xchg
out
mov
push
mov
inc
push
cmp
sub
xchg
cmpsl
sub
jmp
xchg
pop
movsl
punpckhwd
xchg
aaa
push
imul
cmp
mov
mov
cmpb
xor
lret
adc
insl
sbb
xor
pop
cltd
adc
cmp
mov
ljmp
ss
mov
jo
xchg
sub
mov
mov
dec
sub
jmp
cmp
lahf
outsl
es
cmp
in
call
mov
adc
test
push
js
mov
stos
dec
call
cmp
jmp
or
hlt
dec
and
fwait
mov
xchg
adc
mov
pop
and
mov
jmp
dec
aad
mov
mov
loop
clc
fwait
mov
mov
aad
lret
ffreep
mov
gs
daa
insl
cli
push
lret
sub
pop
mulps
xlat
out
fistpll
out
mov
and
mov
imul
shrb
or
sub
filds
cs
push
xchg
repnz
das
dec
movsl
out
xchg
mov
xor
jo
test
sti
leave
cmp
daa
push
fcmovu
aaa
cmp
lar
xchg
outsb
mov
mov
pop
filds
nop
mov
push
cmp
shrl
and
or
pop
mov
xor
in
xchg
fldcw
shlb
xor
mov
in
sarl
pop
pop
xchg
xchg
inc
pop
sbb
ss
loopne
popf
popf
dec
jns
movb
nop
xchg
iret
mov
mov
xchg
adc
rorl
and
pop
jbe
sub
lret
mov
clc
lcall
xor
mov
jbe
jnp
sub
daa
push
out
outsb
jb
or
pop
adc
inc
enter
sub
add
fldcw
call
cmp
js
into
push
jle
gs
pusha
pop
pop
adcl
cs
rol
push
mov
idiv
rclb
cmp
dec
cwtl
stc
in
inc
sub
fsubrs
movsb
fldl
pop
mov
mov
mov
xor
xlat
leave
or
adc
jo
lods
loopne
in
fs
sbb
imul
imull
jbe
mov
sub
in
fsubp
sub
je
push
mov
cmp
inc
mov
inc
pop
fs
iret
sub
aaa
rcl
xor
in
jp
adc
int
aaa
adc
out
push
sahf
pop
jnp
pop
xor
lret
mov
sbb
cld
and
arpl
lods
loop
cld
sbb
scas
push
mov
push
test
pusha
stos
test
leave
aaa
mov
sbb
sarl
or
test
jecxz
sbb
repz
fiadds
adc
add
xor
adc
mov
leave
jns
fdivrp
test
loop
lcall
inc
lods
fiaddl
testl
and
or
lcall
sti
jae
xchg
push
pop
mov
dec
cmp
lds
push
sub
mov
dec
mov
jmp
push
push
jl
xchg
xchg
lods
sub
inc
cmp
add
xchg
mov
add
into
sub
jno
jp
push
dec
out
in
mov
mov
in
leave
jmp
fisubl
rorb
xchg
mov
adc
pop
xchg
sbb
imul
divb
les
jle
adc
xor
sarb
xor
aam
in
enter
pop
xchg
adc
xchg
sub
inc
test
xchg
add
insl
fwait
mov
sbb
in
mov
add
inc
dec
insb
leave
je
jp
and
mov
pop
in
mov
inc
fistl
fs
test
aas
bound
andb
dec
dec
imul
rcrl
popf
jns
jle
adc
clc
test
popa
hlt
iret
or
loope
xor
ret
out
jns
pop
mov
fs
call
add
addr16
pop
inc
dec
or
mov
ss
jne
out
orb
mov
aaa
in
and
sahf
sbb
out
cmpb
xchg
fsubrl
shr
inc
clc
jp
add
lods
repz
push
ret
push
mov
ret
xchg
xchg
add
add
jge
into
cmp
aam
jae
pop
xchg
dec
je
sub
fdivs
pop
mov
add
mov
adc
cmpsb
stos
mov
scas
mov
push
clc
cltd
cmp
xchg
pop
push
insl
sbb
sub
xor
adc
inc
and
lods
lods
cmp
and
scas
gs
mov
adc
jmp
test
jne
add
mov
cmpsl
pusha
imul
mov
and
fldcw
push
add
add
fcomip
cmp
int
arpl
std
test
adc
lea
sahf
iret
xor
ja
sub
pop
jecxz
inc
jo
std
fwait
inc
mov
pusha
push
addb
pop
mov
inc
sbbl
inc
push
fcmovne
and
repz
jmp
jae
mov
sub
xor
xor
cmp
data16
std
es
aaa
push
test
adc
pop
sub
std
xor
add
xchg
mov
loopne
cld
jl
fsubl
imul
xchg
push
loope
fimull
in
les
mov
or
rorb
nop
and
fidivrs
push
fld
ret
iret
test
and
repnz
mov
repnz
xchg
dec
adc
push
adc
shr
push
xchg
mov
cltd
push
ljmp
or
sahf
xor
lods
mov
xor
icebp
sub
pop
xchg
push
lds
or
and
mov
cmp
cltd
ss
das
push
or
ss
add
jl
jmp
push
xchg
mov
mov
insb
jo
inc
lods
cld
leave
adc
cltd
lahf
call
or
fwait
push
xorl
aas
pop
pusha
ret
in
std
jmp
jb
jecxz
push
push
movsb
insb
pusha
jle
xor
out
pop
out
popf
dec
push
fwait
stc
popf
jbe
adc
inc
pop
mov
add
icebp
cmp
pop
adc
xor
imul
test
inc
sbb
mov
imul
or
int
inc
xor
ljmp
xor
ss
jbe
fld1
mov
pop
jae
sti
push
shlb
cmp
inc
dec
inc
nop
pop
ficompl
adc
or
hlt
cmp
das
repz
fs
cli
cmc
scas
faddl
xor
add
xchg
incl
dec
aad
addr16
sub
push
or
mov
or
pop
or
in
cmpb
jl
subb
outsl
sbb
cs
sub
rcl
cltd
test
xlat
nop
adc
enter
aas
jl
js
adc
and
test
xchg
inc
faddl
push
or
xor
aaa
add
inc
add
adc
sti
inc
or
cmpsl
add
mov
cwtl
push
adc
xchg
outsb
jne
fs
xor
mov
push
adc
dec
push
or
insl
push
mov
shll
stc
cmp
lods
jle
mov
in
lea
jnp
mov
icebp
cmp
mov
lods
fsubs
cmpsl
jnp
sub
insl
mov
ljmp
jne
vandps
sub
inc
jl
mov
rcrl
in
xchg
iret
and
das
loopne
fnstsw
and
sub
leave
scas
fimuls
aam
in
repz
mov
and
test
les
add
outsb
insb
daa
xchg
mov
aas
sbb
mov
adc
loope
push
popa
push
xchg
lods
xchg
cld
jns
popf
aas
sbb
inc
xchg
or
pushw
je
shrb
imull
xor
adc
mov
cmp
pop
lock
or
in
xor
lcall
sub
push
and
addr16
mov
push
lea
sbb
jb
add
mov
insb
scas
nop
mov
loopne
iret
cmp
imul
mov
scas
pop
out
fisttpll
outsl
loope
mov
mov
call
lcall
sbb
and
scas
mov
add
xor
dec
inc
in
push
lods
fnsave
xchg
lahf
adc
imul
daa
jbe
push
out
adcb
fwait
xchg
ficompl
dec
ror
cmp
orb
xor
fsub
fwait
add
aas
mov
fcoms
adc
xlat
in
insl
aam
mov
mov
scas
xor
mov
rorl
or
lds
aas
sti
out
xchg
das
test
cmp
inc
into
adc
ljmp
xchg
stos
lds
sub
xor
push
lret
mov
lods
test
sub
iret
cmpsl
mov
mov
popf
shl
enter
outsl
fwait
jb
in
mov
int3
adc
lcall
jp
test
in
xor
push
cmp
add
fmulp
ja
cmpsl
dec
imul
lock
out
mov
pushf
loope
mov
int3
add
fistl
inc
fisubs
xor
notb
int
pop
cmpsl
push
and
ja
dec
test
popa
jns
es
cmc
xor
ljmp
ja
stos
in
and
xor
outsb
mov
mov
das
and
sbb
ljmp
popf
stos
mov
jnp
sbb
pop
adc
test
push
jnp
xchg
mov
int
and
jno
cld
dec
cmc
es
adc
xchg
addr16
mov
inc
pop
stc
xor
mov
cmp
add
add
sbb
adc
sub
jnp
add
and
sbb
mov
inc
clc
mov
rcl
inc
stos
adc
rcrb
pushf
and
add
js
xchg
and
mov
mov
mov
divl
jne
or
cmp
popf
outsl
jl
mov
xchg
loopne
cmpb
mov
lret
xorl
ja
shll
dec
adc
and
push
sbb
inc
mov
push
sbb
jp
aam
cmp
add
inc
movsb
icebp
add
repnz
ljmp
mov
sbb
cmc
aas
dec
shl
addl
insb
mov
adc
dec
add
or
push
jbe
inc
dec
push
fsubrl
push
xchg
test
fwait
lret
subb
xor
hlt
pop
inc
xchg
sub
and
pop
test
add
loop
lret
jo
test
and
imul
mov
add
cmp
sbb
mov
or
mov
xor
mov
rcl
jbe
pop
cmp
inc
jns
fs
fwait
xchg
mov
or
mov
dec
sarl
ret
push
ja
xor
cld
in
push
jnp
inc
jle
xor
imul
ljmp
pop
cs
out
mov
sub
jmp
jns
cmp
mov
dec
push
cli
sbb
mov
xor
fst
jns
gs
push
mov
mov
push
pop
lcall
popa
aas
adc
in
push
hlt
iret
jg
call
jbe
mov
lahf
push
out
push
jnp
fisubs
dec
stos
xchg
mov
pop
cmp
xchg
lods
mov
ret
push
in
push
insl
xchg
pop
cld
aad
sbb
and
clc
dec
int3
jno
rclb
push
pop
sbb
mov
clc
push
mov
fnstcw
dec
push
push
mov
hlt
xor
and
or
out
je
shr
ss
dec
cmpb
jl
add
mov
jae
jae
or
xchg
mov
xchg
xchg
movsb
rcr
or
ss
fnsave
jae
xchg
adc
std
or
sahf
and
adc
data16
mov
mov
mov
cmp
stos
test
imul
pop
arpl
dec
add
mov
movsb
jno
sbb
sbb
icebp
stos
pop
cmp
or
mov
cmp
imul
loopne
and
and
clc
and
sahf
scas
int
rolb
lahf
arpl
mov
in
ss
das
cmc
ficoms
sbb
ret
lret
cmp
add
lret
test
push
int
jbe
pop
test
mov
addl
daa
add
leave
jmp
ljmp
cmp
lret
sub
jns
and
movq
sbb
je,pn
cmp
sub
into
pop
lds
and
push
lahf
fdivl
pusha
and
inc
shll
das
cmp
mov
lcall
outsl
dec
push
cmpsb
xor
jge
mov
xor
out
pop
insl
or
mov
addr16
hlt
or
jg
insl
icebp
xor
cmp
movsb
sti
addr16
adc
ljmp
pop
mov
ror
sbbl
js
sub
mov
sarl
lods
mov
sub
in
add
cs
mov
int
cmp
lcall
mov
je
sbb
imul
push
popf
imul
adc
push
mov
cvtps2pd
inc
cli
xor
lcall
aam
mov
mov
and
fisttps
xor
pushf
mov
lods
mov
xchg
mov
mov
ficoml
clc
jae
idivl
pop
pop
cltd
fnstcw
sub
add
das
jp
or
unpcklps
cmp
cmpsl
lock
orl
dec
test
or
push
pop
ss
mov
sbb
imul
mov
pop
pop
loop
and
or
sbb
pushf
lock
cmc
into
imul
test
in
sub
inc
fwait
push
test
jecxz
adc
aaa
sub
lret
loop
out
mov
cltd
dec
in
popf
jb
inc
and
in
jl
dec
adc
cmc
fdivr
push
paddsb
inc
repnz
push
call
sub
loopne
dec
push
jae
jne
bound
mov
dec
sub
dec
shl
add
pop
lret
movsl
repz
mov
hlt
call
mov
aam
jb
pmuludq
loope
push
fcompl
inc
push
xchg
xor
lcall
mov
shll
mov
subb
sti
psrad
imul
inc
hlt
mov
push
add
adc
push
cmp
into
jge
das
sub
out
pop
imul
nop
add
pop
and
pop
movsl
aam
test
sub
mov
push
mov
and
mov
inc
lds
and
jbe
adc
shrd
sahf
std
or
xor
adc
inc
sub
xchg
in
or
mov
pop
pop
mov
xchg
cs
cmp
shrl
dec
leave
and
jmp
fstpt
inc
mov
cmp
mov
je
mov
test
sub
out
inc
jle
jge
mov
les
adc
subl
jo
sti
ds
add
mov
mov
fucomi
mov
test
jge
shl
xchg
jge
sub
pop
lea
push
std
sub
push
cwtl
inc
xor
xrelease
jge
and
ss
and
dec
cmp
rclb
pop
lahf
adc
movsl
stos
and
push
jne
xor
pop
iret
inc
lret
rcrl
sbb
lods
push
inc
xchg
ret
aaa
dec
je
int
lcall
push
xor
fidivl
dec
xor
js
and
aaa
sarl
bound
xor
ja
jp
jp
mov
dec
pop
push
push
fcompl
mov
jecxz
pop
nop
xor
push
cltd
js
popl
shrb
das
push
adc
dec
inc
data16
and
out
arpl
loop
jno
outsl
push
outsb
das
sbb
xchg
lds
jp
push
aam
mov
mov
push
xlat
neg
xchg
pop
repz
jp
mov
iret
sub
mov
add
mov
repz
in
inc
pop
jbe
in
sbb
push
addl
sti
pop
test
movsl
mov
ja
xor
add
dec
test
ret
jecxz
sub
inc
ret
test
sbb
xchg
test
flds
cmp
das
adc
sbb
rep
out
sub
scas
xor
xchg
out
add
in
imull
mov
push
arpl
sub
xchg
or
cmpsb
jge
cmp
xchg
stos
cs
js
addl
sar
add
gs
lea
pushf
es
aaa
fs
lods
xlat
jnp
add
push
mov
lret
jp
pop
lcall
pop
stos
ljmp
xchg
inc
push
cmp
sahf
bound
arpl
cmp
sbb
add
out
lds
and
scas
pop
cli
xor
leave
push
xchg
and
lret
jne
and
xlat
and
data16
fsts
loopne
fs
pop
dec
mov
pop
mov
xlat
ds
and
xlat
fbstp
hlt
cmc
add
dec
cwtl
leave
lret
xchg
pop
jb
dec
xor
js
pop
das
xor
cs
in
in
mov
movsb
xchg
jl
arpl
xor
bound
subl
loope
lock
popa
push
inc
sub
xchg
inc
cwtl
sti
push
xorl
add
add
inc
or
jo
test
push
sub
lds
cmp
incl
aaa
in
push
enter
iret
lea
dec
xor
jnp
xlat
test
cli
mov
inc
imul
mov
mov
jae
xchg
lea
lds
cmpsb
push
mov
or
add
xchg
mov
movsl
or
sbb
mov
mull
push
adc
adc
pop
scas
fsub
pushf
or
imul
xchg
xlat
mov
sbb
pop
daa
negl
sti
mov
push
insl
or
push
shl
ljmp
mov
xchg
daa
ret
aad
or
sub
push
jg
sub
inc
ljmp
cli
into
pop
push
sub
mov
or
jecxz
cld
cmp
mov
adc
std
dec
ja
in
into
fidivs
jl
in
lock
xor
popf
cmc
leave
xchg
mov
rorl
das
outsl
dec
xchg
sbb
sbb
call
hlt
adc
adc
test
cmp
jp
push
and
int3
inc
int
les
mov
and
or
sub
stos
mov
in
and
mov
and
inc
add
pop
aad
mov
xchg
rorl
and
jge
or
inc
jae
sub
sub
adc
cmpl
outsb
xchg
or
mov
xchg
aas
mov
dec
mov
xchg
pop
negb
lds
inc
imul
jge
add
push
xchg
sbb
cli
inc
push
ret
outsb
mov
adc
mov
pop
push
aaa
movsl
ljmp
mov
out
inc
sbb
sbb
outsl
call
xchg
push
addr16
inc
add
xor
hlt
or
jne
lock
out
imul
or
xor
xchg
lahf
adc
mov
inc
call
sarb
dec
in
insl
aas
ret
or
fisttpll
sbbb
iret
js
ficomps
or
fwait
test
nop
and
xchg
stc
xchg
in
in
pop
or
jnp
push
mov
loope
lods
pop
mov
mov
lea
and
fistpl
mov
push
push
jbe
jno
push
xchg
lahf
outsl
add
out
pop
inc
rcll
sub
push
adc
in
xchg
jmp
leave
fmull
sar
adc
lret
pop
sbb
lds
not
xchg
enter
aad
sbb
fdecstp
push
pop
outsl
insb
cltd
sbb
pop
test
xor
out
sub
lods
pop
cmpsb
xor
mov
or
lods
add
cmpsb
push
stc
lea
jecxz
icebp
and
ret
punpckldq
xchg
sub
mov
aad
xchg
lock
mov
add
xchg
pop
xchg
out
mov
dec
pushf
out
fmul
mov
jbe
mov
and
xor
and
lds
aam
int3
mov
shl
cmpsb
xor
cmpsb
jecxz
loopne
and
sahf
cmpsb
mov
rcr
push
shl
mov
push
mov
dec
stos
jmp
jge
mov
add
pop
or
sub
push
repz
lds
xchg
das
mov
xchg
int
sub
fldl
arpl
iret
cli
mov
xchg
mov
adc
or
fisttpl
fwait
icebp
sti
icebp
iret
pop
adc
mov
cmpsl
xchg
inc
xor
lods
inc
pop
jle
lea
dec
icebp
sub
or
or
mov
shlb
leave
cmp
pop
jg
shll
or
lock
xchg
or
dec
scas
xchg
mov
inc
cmpsb
ret
cmpsb
popf
mov
jmp
push
jecxz
hlt
push
cld
lcall
add
sarl
sbb
leave
ret
push
mov
test
mov
push
xor
adc
cs
jnp
jmp
ss
mov
adc
sbb
dec
mov
dec
orb
lea
insw
iret
ror
jle
cmp
mov
and
aam
cmpsb
push
pop
out
xor
outsl
pop
fucomp
testb
sub
adc
inc
shl
sbb
fidivl
push
add
mov
cmpsb
jmp
scas
xchg
cmpsl
pop
into
add
mov
std
pop
call
sbb
xchg
in
mov
jb
or
rcrb
jecxz
cmpsb
ds
cli
inc
push
mov
mov
lds
fisttps
dec
xlat
push
fsubl
aas
push
mov
xchg
xor
xor
aam
jae
sarl
mov
aaa
add
fadds
mov
insb
or
pop
mov
out
in
pop
xchg
pusha
ja
push
dec
loop
mov
lods
mov
out
int3
jl
ja
or
mov
test
jo
ret
jl
lods
jne
fldl
fnstenv
mov
data16
clc
stos
sahf
cmp
std
and
ret
jp
xor
fsubl
lret
dec
hlt
pop
shlb
mulb
mov
inc
mov
sbb
mov
lock
push
xlat
inc
stc
fstpl
subl
jo
ljmp
fldt
mov
mov
push
movsb
inc
pushf
fs
mov
and
push
dec
cmpl
xor
or
mov
cli
pop
mov
jge
lods
adc
popa
cs
enter
movsl
lahf
inc
jmp
fsubr
push
movsl
push
dec
das
ds
dec
aaa
fcoms
ror
mov
out
test
sub
sbb
push
popa
outsl
mov
sub
hlt
mov
mov
pushf
ss
dec
push
xchg
mov
mov
lds
jo
and
adc
pop
pop
jo
imul
sbb
loopne
xor
aad
fnsave
scas
jo
jno
sbb
fldpi
xchg
mov
and
loop
add
lret
sub
add
inc
insb
cmp
ds
imul
mov
hlt
cwtl
fidivrl
fnstsw
rorb
daa
stc
xlat
push
dec
int
out
ret
xchg
sub
movsl
fwait
cmp
lods
xchg
mov
jnp
adc
mov
nop
cwtl
sub
xor
sbbl
les
ljmp
mov
ja
outsb
mov
repnz
repnz
movl
scas
fdivrs
sahf
fwait
icebp
and
mov
xor
or
movsb
push
loopne
pusha
loopne
push
inc
cmp
clc
mov
call
adc
movsl
xchg
in
push
dec
push
xchg
jns
std
inc
shll
mov
dec
movsb
ja
mov
push
mov
das
push
outsl
and
inc
mov
cmc
cmp
push
add
xor
push
ret
in
xor
xor
xor
clc
cs
mov
imul
xchg
subl
rcr
dec
idiv
mov
cld
mov
arpl
push
mov
inc
pop
movsb
dec
and
into
lock
ret
adc
xchg
jno
pop
jmp
inc
and
push
into
fs
cwtl
xor
ja
fcmovnu
fwait
xor
adc
push
xchg
rcll
and
mov
xchg
lods
push
pushf
cmp
or
in
jnp
xchg
mov
out
ret
push
sub
faddl
mov
test
jmp
xor
rcl
hlt
lret
xor
pushf
cltd
sub
xchg
or
mov
scas
sbb
sub
popf
push
pushf
and
jp
loop
out
stos
mov
icebp
pop
loope
rolb
jle
xor
negl
jno
dec
cmp
leave
outsl
mov
dec
push
shll
and
stos
sbb
test
fistps
pop
add
cmpsl
aaa
mov
repnz
mov
and
mov
rolb
jbe
add
pop
xor
or
test
xchg
je
xchg
lahf
aas
into
pop
je
dec
cmpsl
addr16
cs
in
shll
fisttps
lahf
xchg
dec
inc
push
cmpsb
bound
je
cld
fisubrs
jnp
bound
mov
fidivrs
aam
pop
and
popa
mov
mov
fsubr
xor
adc
lds
arpl
test
cmp
cltd
pop
cmpsl
sbb
push
pop
clc
mov
pop
test
cwtl
outsl
test
xor
sub
push
xor
sub
lcall
adc
and
js
cmp
mov
hlt
push
mov
pop
or
adc
shrl
es
lret
mov
repnz
ret
shlb
shrl
push
push
sbbb
imul
sbb
ret
adc
mov
jo
js
sbb
insb
cmp
test
push
dec
int
pop
or
mov
fmul
jnp
clc
dec
inc
stos
arpl
jo
mov
mov
les
aas
aas
mov
je
pop
in
ljmp
jp
push
mov
rol
xor
out
pushf
lock
adc
int3
ja
xchg
jl
pop
insb
xchg
rcll
xor
mov
sub
fdiv
enter
ljmp
in
pusha
xchg
jae
xchg
orb
lret
enter
cld
pop
adc
cmc
inc
pop
outsl
imul
mov
or
dec
iret
cli
adc
nop
sbb
sub
mov
sub
lret
fdivp
jbe
insl
mov
xchg
dec
sbb
test
or
add
test
and
adc
push
xchg
sbb
cmpsb
loop
inc
inc
in
mov
sti
mov
and
mov
rorl
gs
fdivrs
fsincos
stos
in
mov
inc
notb
sahf
push
cmpsl
jge
xorl
sub
cli
cmp
mov
cli
lods
enter
cmpb
inc
xor
into
mov
push
rcrl
dec
cmp
or
mov
iret
xchg
xor
xchg
sub
sahf
jbe
jo
add
lds
ljmp
sub
jle
and
xor
lds
mov
out
aas
xor
jecxz
mov
inc
xor
in
ljmp
out
int
cld
cli
fbstp
push
lret
aam
add
subl
and
pop
fnsave
gs
fsubs
cmp
push
fstl
xchg
in
inc
xor
add
fisubrl
add
imul
cmpsl
lea
mov
pop
dec
ss
inc
rcrl
pinsrw
jne
mov
sub
jl
ja
lds
pushf
icebp
mov
dec
jbe
sahf
mov
scas
loopne
rcr
xor
push
inc
push
repz
hlt
add
add
das
mov
aas
aad
scas
jg
cs
ja
leave
loopne
jle
push
inc
je
jle
sub
movsl
iret
add
mov
fbstp
jp
sbb
push
xchg
aas
add
push
add
mov
ljmp
mulb
sahf
xor
lea
ljmp
cld
inc
pop
cmpsb
jp
xor
push
not
cmp
shll
xlat
jbe
sub
inc
xchg
mov
lods
dec
sub
sbb
lds
push
xor
aas
xor
adc
mov
test
fistpl
and
sbb
mov
ret
fsubl
mov
sub
dec
test
sysenter
mov
aas
leave
cmova
es
scas
xor
and
testb
adc
fadd
pop
in
mov
mov
into
xchg
sar
add
cmp
fiaddl
inc
jne
test
or
sbb
imul
cmp
aaa
adc
or
addb
mov
inc
mov
pop
rcrb
mov
cs
cmpsl
cmp
mov
pop
or
jle
and
mov
data16
dec
mov
xchg
pop
cmp
imul
mov
mov
das
imul
shlb
fstpl
int3
adc
movntq
jge
or
mov
sbb
fs
rcrl
inc
push
sti
cmp
xor
in
loop
mov
nop
pusha
rcrb
xor
jns
sub
jmp
mov
pushf
rorb
sbb
jmp
enter
pop
xor
push
jp
inc
mov
lcall
scas
mov
nop
jl
or
lock
inc
scas
dec
shr
cmp
ret
and
pop
mov
xlat
inc
test
xor
out
push
add
inc
lret
add
sahf
sbb
mov
or
adc
sbb
xchg
popf
jp
int3
sub
lahf
cmp
jl,pt
sub
sub
sbb
ds
adc
mov
cmp
sub
mov
iret
or
aam
lods
movsb
mov
jge
clc
dec
insl
repz
jne
mov
mov
scas
repz
test
lock
fs
in
or
in
mov
out
cld
fnstsw
gs
jns
es
dec
inc
sub
das
mov
xorb
fisubrl
or
ljmp
adc
sub
ja
sahf
inc
sbb
repz
fisttpll
addl
fdivrs
lss
push
lods
mov
lea
adc
ds
mov
and
jle
outsl
aad
arpl
push
xor
lods
sub
xchg
xorb
cmp
cmp
fdivp
mov
inc
xchg
pop
jnp
daa
int3
add
jle
pop
imul
and
or
out
mov
and
pop
out
dec
pop
push
dec
sub
xchg
cmp
subl
idivb
int3
stos
pusha
lret
flds
ds
fisubrl
sbb
jmp
or
cmp
add
xor
fucom
rcrl
jae
lock
fstps
sbb
les
movsl
jno
insl
push
or
mov
outsl
jb
push
rorl
dec
dec
cmpsb
dec
sti
xchg
add
stos
scas
xor
or
mov
int
fildl
out
shll
mov
add
push
aas
add
xor
xchg
insb
call
in
in
adc
pop
sub
or
xor
call
cld
sub
repz
call
dec
adc
fisubl
adc
mov
push
mov
mov
sub
and
fnstsw
pop
dec
push
mov
pushf
and
sub
and
and
or
pop
or
mov
xchg
pop
insb
in
fiaddl
push
adc
test
mov
es
pusha
cli
fdivl
push
movsb
push
jno
nop
enter
push
add
pusha
shlb
push
fucomi
mov
clc
jo
test
test
das
xchg
pop
fstps
push
add
nop
inc
inc
mov
cli
add
xchg
cmc
mov
add
mov
les
cmc
jns
cmp
push
shrl
stos
xor
xor
es
mov
out
sub
jl
daa
or
mov
inc
push
pop
pushl
mov
sahf
lods
repz
icebp
cmp
xor
jle
not
mov
add
iret
adc
push
mov
pop
mov
jmp
inc
fisubrs
pop
jae
pop
pop
es
pop
divb
adc
movlps
jp
mov
das
inc
jle
xlat
or
mov
pop
lock
clc
aas
mov
or
mov
or
mov
pop
pop
setnp
jbe
testb
ret
lahf
push
push
cbtw
cmp
jmp
mov
aaa
add
mov
fs
iret
and
hlt
cmp
popf
clc
loop
ret
mov
push
mov
inc
inc
fisubrl
les
aad
fwait
mov
mov
sti
xchg
cmp
fidivl
sbbl
push
push
icebp
rcl
dec
mov
inc
gs
sti
xchg
add
pop
cmp
cmp
mov
or
push
loope
test
scas
icebp
aaa
stc
inc
int
jmp
rorl
shlb
adc
je
addr16
mov
and
sbb
js
mov
leave
rcr
out
movsl
lea
inc
insb
negb
jmp
cmp
sbb
xchg
loopne
divps
dec
fisttps
push
xlat
jbe,pn
mov
movsl
sub
adc
or
ss
movsl
pop
fstps
in
test
iret
or
dec
daa
sub
fstpt
fnstenv
xchg
orl
leave
es
jp
mov
das
jns
mov
ja
fistl
hlt
loope
pusha
cld
in
js
jl
sub
and
sbb
cmp
fwait
jae
repnz
pop
inc
das
xchg
lods
jae
test
pop
fisttps
jge
stos
xor
or
sub
popf
pop
xor
cltd
jno
sbb
pop
or
push
mov
lds
cmpsb
rclb
mov
inc
int3
xchg
aam
jno
mov
popf
jb
mov
lds
das
mov
les
lods
pusha
popf
outsl
jns
xchg
out
add
lods
adc
faddl
jmp
inc
hlt
xor
in
mov
sbb
dec
pop
aam
inc
rcrb
push
das
into
dec
movsb
faddp
push
sbb
xor
mov
sub
jg
fwait
les
ja
cmp
cmp
cli
pop
dec
xchg
or
pop
jmp
clc
in
and
mov
sbb
cmp
cmp
rcrb
out
dec
pushf
sar
or
lods
loopne
and
pop
adc
push
stos
dec
cmpsb
inc
xor
daa
inc
cs
jb
xor
xchg
rcrb
aam
mov
aas
ljmp
jl
dec
dec
jmp
repnz
bound
mov
pop
ljmp
xchg
add
ret
aas
cs
and
incl
cmp
mov
test
lds
ret
pop
loope,pt
out
data16
movsl
insl
mov
dec
int3
add
movsl
cwtl
imul
stos
insl
lea
adcl
lret
jg
mov
xchg
xorb
cwtl
std
pop
cwtl
adcl
stc
std
stos
xchg
and
lahf
and
pop
iret
sti
fwait
jb
sbb
push
jno
mov
fnstcw
inc
dec
pop
pop
call
adc
incb
mov
pop
or
testb
push
xor
mov
enter
pop
jp
iret
fwait
cltd
arpl
sbb
dec
pop
stc
mov
or
popa
jmp
ljmp
jmp
mov
icebp
push
movsl
sbb
cmp
sub
cmp
jae
mov
mov
sbb
push
jmp
stos
lea
cwtl
jae
inc
test
jns
jg
jp
mov
push
sub
push
mov
or
ret
mov
clc
scas
int
dec
mov
jl
fwait
mov
mov
or
pusha
aad
push
adc
xchg
inc
or
add
orb
xchg
dec
aas
cmp
gs
mov
or
mov
cmp
push
add
into
xor
pop
push
jp
push
nop
xchg
add
subb
test
cli
inc
xchg
jp
pop
mov
sti
pop
cld
ss
pop
sahf
sub
add
mov
outsl
fbstp
out
in
lock
lret
pop
jb
imul
sub
sbb
ja
xor
je
mov
dec
or
xor
jg
pop
insl
sbb
lret
and
pushf
leave
out
fidivrs
in
fcomps
insb
mov
xor
test
or
or
and
cld
adc
add
stos
adc
xchg
addr16
add
sub
sbb
and
lret
movsb
xchg
les
ds
mov
in
andl
pop
mov
sub
jl
add
rcl
jmp
fwait
xor
inc
mov
movups
sahf
das
les
ss
lret
xchg
test
insl
push
mov
xchg
or
xchg
testb
push
xorl
cmp
xchg
mov
mov
push
out
outsl
rcll
dec
enter
xor
arpl
jp
in
outsb
or
pop
imul
jo,pn
sub
xchg
outsl
cwtl
subb
sub
jmp
loope
cltd
js
cmpsb
and
jmp
cltd
pusha
inc
rorb
xchg
lahf
push
lahf
cltd
out
clc
adcl
xchg
mov
cmc
pop
repz
stos
sub
pop
mov
das
push
js
das
cmc
addr16
lcall
shr
stc
bnd
adcb
or
mov
imul
scas
scas
fsubl
les
incl
pop
arpl
cli
and
aas
mov
rcrb
push
repnz
jo
loope
adc
ja
jp
mov
dec
xorl
int3
mov
shrb
add
rorb
iret
mov
jecxz
pop
adc
jb
adc
cmp
lea
xor
xlat
pop
loopne
dec
cwtl
leave
mov
out
sub
repz
pop
and
data16
lock
xchg
sbb
xor
in
pop
cmova
jmp
xor
jne
add
es
push
or
add
jno
dec
mov
sbb
pop
mov
movsb
std
cmpsb
rol
test
jno
ret
divl
mov
in
nop
pop
and
mov
push
mov
pop
dec
insl
jo
xchg
popf
mov
loopne
mov
dec
jmp
add
movsb
push
mov
lods
leave
sub
add
and
les
pop
and
pop
cli
sbb
inc
pop
push
dec
mov
cmc
scas
lcall
add
mov
repnz
cs
in
repnz
sbb
addr16
push
pop
aad
dec
cmpsb
jp
inc
loope
stos
faddp
fs
push
arpl
pushf
xchg
cmpsb
mov
movsl
sub
in
pop
stc
jo
insl
cwtl
popa
mov
in
movsb
pop
jo
test
xor
das
push
jns
loopne
mov
cltd
or
les
or
adc
jae
js
sub
or
mov
stos
lahf
aad
lea
mov
cmp
xor
jmp
cmp
cld
loopne
testb
and
or
mov
add
or
or
ljmp
jl
adc
icebp
dec
jnp
pop
inc
xchg
push
sub
sub
in
mov
inc
pusha
push
jns
movsb
std
loopne
rcrl
mov
fwait
cmp
dec
pop
cmp
mov
shll
js
and
cld
xchg
dec
jne
cmpsb
setl
outsb
int3
lret
pop
push
sbb
mov
scas
push
jmp
outsl
shrb
leave
jp
adc
mov
fcmove
xor
push
enter
mov
mov
cmp
lea
jmp
pop
outsl
pop
mov
jl
ret
adcl
out
mov
and
dec
in
addr16
push
mov
popa
add
les
push
imul
fs
icebp
adc
ficoml
hlt
test
loopne
sub
clc
push
inc
repz
imul
dec
loop
clc
mov
fdivrl
jae
gs
insb
jg
aas
sbb
xchg
jb
sbb
and
repz
cmp
stos
sub
js
and
lret
out
mov
rcrb
insb
ljmp
inc
pusha
adc
adc
or
repz
loop
lock
enter
addl
ljmp
or
sub
mov
add
sti
je
mov
aaa
cmp
xchg
xorl
cmp
mov
shll
iret
xor
xor
cmpb
scas
scas
push
mov
lcall
cmp
push
adc
mov
or
in
inc
xchg
jae
jb
fistl
mov
or
lahf
and
test
movsb
push
enter
or
std
lods
jle
pop
pop
fstpt
movsb
lret
mov
xor
and
rclb
mov
popa
jo
sbb
inc
sti
aam
rolb
dec
and
xchg
mov
add
stos
xor
cmp
and
mov
sbb
cmp
stos
out
idivb
sub
xorb
inc
rcll
clc
scas
mov
mov
and
pand
xchg
xor
outsb
fisttpll
mov
mov
jnp
push
push
mov
fadds
adc
push
jae
pavgb
xor
mov
sbb
shlb
daa
mov
mov
dec
fldcw
sbb
jg
pop
sbb
outsb
mov
mov
enter
inc
mov
pop
cs
pop
aas
and
ret
lds
das
cmp
fidivrl
movsl
sbb
adc
fstpl
add
cmp
les
cld
pop
pop
jb
jl
shlb
es
xchg
fdiv
call
and
inc
xchg
push
adc
jne
mov
loope
shlb
cs
cmp
jle
add
lock
sub
xchg
sahf
ds
mov
xlat
ss
jo
mov
in
cs
push
js
xchg
loope
lea
inc
lods
mov
jnp
adc
divl
xchg
rcll
add
cmp
mov
add
adc
sbb
dec
shl
cmc
push
stos
push
aam
and
mov
xchg
inc
aam
cmc
jecxz
inc
pop
cmp
mov
pushf
and
xchg
pop
cmp
out
ret
inc
cmp
lret
push
xchg
or
enter
lock
mov
repnz
ds
fucomi
or
insb
xchg
int3
mov
call
rcrb
push
sbb
cs
outsb
scas
sbb
and
dec
ficomps
lea
outsb
sahf
add
inc
lods
in
dec
jge
mov
notl
int
or
bound
popf
stos
adc
scas
divl
popa
and
jp
ja
push
mov
and
int3
xor
idivl
hlt
lcall
cld
and
lods
dec
push
dec
cmp
push
mov
and
pop
lock
push
loope
sbb
jb
inc
aaa
int3
push
xor
dec
pushf
jae
sub
push
out
xchg
mov
dec
not
stos
push
ds
roll
movsl
lret
pop
fsubrl
jae
test
xchg
xor
int3
imul
frstor
scas
pop
mov
and
push
pop
jecxz
mov
inc
push
clc
jecxz
xor
inc
mov
lret
mov
popa
shrl
mov
jmp
pop
xor
repz
adc
das
or
inc
jmp
dec
popa
popa
mov
arpl
jmp
mov
push
jbe
movsl
push
pop
cmp
in
mov
shrl
loopne
hlt
inc
xchg
loopne
jae
and
push
pop
mov
int3
xchg
pop
adcb
ret
push
mov
lahf
rorl
push
xchg
cmp
mov
mov
ds
je
in
iret
insb
pop
fs
ror
lds
pop
loopne
lret
and
mov
gs
sub
es
or
lcall
clc
inc
mov
test
push
jl
lret
loop
ds
icebp
xchg
cmc
push
das
stos
xchg
sub
std
lods
xor
shrb
insb
add
adcl
lcall
scas
add
mov
adc
sahf
inc
cld
xor
xor
and
insl
aaa
rclb
repnz
mov
cmpsb
scas
es
mov
popa
push
dec
mov
lea
aad
or
xchg
dec
mov
xor
icebp
mov
jmp
jl
mov
mov
out
fdivs
jne
mov
inc
jno
xlat
mov
rcrb
into
ror
fwait
push
adc
and
push
out
dec
sub
and
mov
mov
cli
cmc
cmp
movsl
lahf
cmp
dec
mov
add
das
xchg
mov
mov
dec
and
xor
cmp
cld
sbb
cli
push
xlat
sbbl
xchg
pop
cmpsl
inc
fldl2e
ss
cmp
js
cltd
mov
jecxz
jno
jbe
lret
movsl
into
jge
lret
sahf
sub
xchg
and
ds
cli
dec
fnstsw
fdivrl
pop
cmpsb
cli
cmp
cmp
stos
rolb
cli
pusha
cli
sub
push
shrl
ja
std
out
cld
pushf
and
xchg
jbe
into
das
jne
nop
push
rcrl
movsb
call
popa
adc
inc
subb
ficomps
cmp
ss
mul
xor
lea
clc
shll
mov
pop
cli
cmpb
and
repz
add
jl
jmp
or
adc
aaa
and
mov
shlb
loopne
fdivs
jecxz
in
or
scas
fldcw
push
push
fmul
jae
fs
movsl
and
pop
add
mov
add
jg
dec
loop
mov
imulb
lret
neg
pop
ficoml
mov
and
push
shr
mov
cmc
mov
and
shrl
push
ffree
insb
sti
pop
imul
movsb
or
inc
mov
inc
aaa
mov
mov
mov
jl
in
rcl
xor
dec
xchg
call
lea
test
out
scas
cltd
loop
push
jle
movsb
je
pop
negl
push
push
js
adc
jl
aad
loop
xchg
xchg
repz
lods
fsubl
dec
jns
push
iret
imul
sub
ljmp
hlt
lahf
adc
add
pop
and
scas
mov
pop
jg
sbb
adc
aaa
ficompl
push
push
pushf
sub
mov
adc
mov
aaa
or
fwait
or
sahf
cmp
pop
push
enter
mov
subb
loopne
jnp
test
jae,pt
or
cwtl
fbstp
stc
ljmp
cmp
test
stos
insl
and
imul
nop
mov
jge
xor
add
in
out
mov
mov
lock
adc
ret
mov
mov
dec
into
cld
and
push
pop
ss
stos
stos
and
xchg
cmp
movsb
sub
stc
je
xchg
es
int3
jb
pop
insb
testb
mov
jle
xchg
scas
sbbl
adcb
xor
fistps
int3
pop
and
adcb
arpl
pop
sti
ja
sub
mov
call
in
push
sbb
inc
mov
leave
cmp
mov
insb
mov
ret
aad
add
push
jnp
stos
andb
inc
bound
js
dec
ficompl
out
mov
sub
loopne
jge
fnstcw
loop
sarb
dec
into
icebp
loope
sbb
outsb
out
lahf
push
dec
xor
sbb
lcall
sbb
sbb
test
scas
stos
xor
pop
pop
jmp
aaa
and
jnp
repz
push
fwait
push
push
mov
pop
dec
movsl
int
stc
std
mov
mov
and
jnp
cmp
xor
inc
subb
cwtl
imul
in
cmp
add
adc
pusha
jl
data16
cmp
add
or
inc
push
in
cltd
aas
pop
popa
stos
popfw
xlat
dec
pop
js
aad
pop
push
fs
jle
test
dec
iret
xor
add
push
push
rorl
movsl
adc
pop
jmp
sub
bound
cmpsl
pop
xor
pop
jecxz
mov
fstpt
mov
pop
mov
and
ja
cmpsl
mov
jg
xchg
int
inc
xor
adc
je
cmp
cmpsb
pop
inc
ret
test
int3
inc
xchg
xchg
cmp
push
mov
das
popf
xor
push
jl
stos
mov
mov
out
xor
xchg
shlb
fdivp
dec
xor
or
gs
or
js
out
cld
lcall
jne
rcrb
test
je
lret
movsl
jge
rcrl
out
jmp
push
les
stos
inc
adc
and
pop
lds
add
out
and
lods
lods
dec
or
mov
lds
xor
lods
scas
pusha
popf
xchg
bsf
movl
and
pop
int
pop
lods
adc
pop
jnp
cmp
daa
push
pop
mov
rcrl
outsl
dec
jmp
test
stos
mov
cmp
mov
int
mov
fcmove
push
sbb
sbb
js
std
inc
popa
aad
cmp
pop
outsb
icebp
das
cmp
dec
dec
dec
lock
into
xor
insb
xlat
sahf
fs
dec
mov
into
call
bound
lret
xlat
sbb
cltd
cmpsl
mov
test
clc
pop
mov
xchg
mov
push
or
or
and
fs
out
pop
dec
dec
sub
adc
lahf
and
xchg
adc
mov
add
and
xorb
add
stc
ja
jmp
out
sbb
jns,pt
pop
inc
push
pusha
jb
mov
pushl
enter
sbb
or
add
fiadds
inc
cwtl
aaa
orl
repnz
insl
sbb
ret
push
sarl
fldcw
shll
subl
xchg
dec
cmp
ja
test
leave
push
ffreep
sbb
dec
mov
ret
inc
hlt
mov
int
mov
loop
or
scas
ret
sbbl
mov
mov
ret
pop
repnz
stos
pusha
mov
mov
imulb
mov
lret
sbb
xchg
adc
test
jecxz
inc
mov
mov
inc
loopne
mov
pushf
xor
jns
sbb
pop
les
enter
out
lea
dec
fdivrp
sub
call
movsb
aaa
dec
in
mov
pop
out
or
clc
pop
loopne
mov
push
pop
dec
repz
cmp
imul
rcrb
xor
das
addr16
mov
ja
cmp
or
outsb
ret
divb
xchg
sbb
repz
pop
xchg
jge
jmp
mov
mov
xchg
mov
rol
std
js
cwtl
fsubs
jmp
sbb
out
and
test
xchg
jae
cld
xor
iret
popa
aam
hlt
xor
cli
mov
cmp
sti
inc
mov
xorb
inc
rcl
lds
out
lret
sub
jne
stos
outsl
loope
lods
or
dec
xchg
scas
cld
sub
sbb
in
cmp
sarb
adc
xchg
push
aaa
cmpsl
jo
cltd
jne
cmp
cltd
mov
xchg
addr16
push
add
push
push
dec
mov
and
mov
shl
loopne
loopne
xor
orl
jae
pop
enter
mov
repz
imul
inc
or
push
lock
push
xlat
sbb
xchg
pop
fiadds
sbb
push
push
outsl
sbb
jmp
or
xchg
jno
sub
add
inc
iret
xchg
rorb
push
das
cmp
lods
int
into
nop
inc
das
dec
or
mov
adc
cmp
cmp
mov
sbb
adc
push
xchg
in
lcall
negb
dec
cmc
add
push
or
stos
push
ds
fs
addr16
fbld
inc
inc
negb
mov
aad
test
cmpsl
lods
sbb
int
pop
in
add
sti
jne
and
outsl
push
adc
push
sarb
repz
add
dec
aad
add
mov
cmp
pop
cmpsb
fwait
mov
xor
jno
popl
jbe
lret
dec
xor
loop
and
mov
int3
addr16
lahf
cli
mov
dec
inc
push
andl
dec
sub
mov
aad
push
push
fistps
lret
fldcw
xchg
inc
lods
outsl
sar
or
imul
lea
mov
scas
outsb
push
jge
xchg
mov
mov
call
xchg
xchg
fdivrl
push
nop
sub
mov
dec
ljmp
fs
pop
idivb
rcll
sbb
sahf
sbb
repnz
push
sbb
inc
das
mov
push
out
je
jmp
cmp
jl
cld
fld
or
int
rcll
push
mov
push
adc
mov
jbe
cwtl
frstor
xor
icebp
addr16
lret
mull
scas
adc
jmp
xchg
stos
mov
push
xor
notb
loop
imul
nop
dec
mov
xlat
mov
test
cmp
push
jae
les
mov
outsl
loopne
lahf
and
add
cmpsb
add
mov
call
negb
fisubrs
into
mov
arpl
jmp
lods
push
jnp
or
push
mov
lret
sbb
xor
sahf
xlat
repz
and
dec
outsl
sub
sbb
dec
mov
cmpsb
jl
stc
decb
sahf
mov
popa
cmpsb
mov
fstpl
imull
lods
scas
xor
mov
jecxz
ds
jg,pt
sbb
dec
mov
push
shr
or
test
xlat
xchg
xsetbv
cmp
cltd
mov
mov
or
sbb
addb
sbb
or
or
lock
lods
cmc
jmp
movsl
pop
xor
into
mov
in
xlat
dec
dec
repnz
adc
movsl
lret
xchg
les
and
mov
and
or
test
out
sub
jbe
ficomps
jl
mov
fwait
push
enter
dec
fstpl
pop
ret
lods
lds
or
enter
mov
sub
fldt
orb
xor
test
aad
cmpsb
push
ret
push
int3
push
dec
lret
push
or
test
cmpsb
pop
push
inc
xor
stc
mov
inc
stos
daa
pushf
mov
fcmovnu
adc
std
jl
cld
repnz
xor
push
ds
mov
movsl
loope
jg
movsl
lret
and
hlt
add
fidivrs
cmpsb
lods
jg
push
xor
lcall
push
dec
xchg
pusha
sbb
stc
nop
xlat
cmp
xor
jno
shrl
loop
dec
inc
sub
sub
push
adc
fsubrl
sbb
scas
xchg
mov
or
sbb
jg
cld
mov
mov
jae
mov
cmpsb
push
dec
adc
mov
js
pop
gs
pop
mov
sub
push
or
fldl
shll
mov
or
xorl
lods
cmp
movsb
and
add
dec
mov
je
aaa
xchg
mov
sub
sbb
clc
sub
fadd
cmp
lahf
cwtl
shll
sbb
sub
imul
and
mov
iret
mov
cmp
inc
out
leave
insl
scas
mov
lock
shr
inc
outsb
ret
inc
shlb
jle
fwait
or
push
mov
out
mov
add
push
lea
cmc
pop
jecxz
jp
scas
mov
xchg
sub
adc
cli
jl
mov
ss
outsb
jno
dec
lahf
or
inc
xor
mov
sub
xor
clc
and
sub
xchg
xor
cmp
inc
sbb
addr16
xor
jnp
stc
ljmp
mov
das
shll
int3
push
shrl
mov
aam
cmp
pop
sbb
dec
stos
sbb
enter
adcb
jo
pcmpgtb
adc
mov
roll
addl
jnp
pop
mov
lea
mov
test
cld
nop
push
adc
pop
add
adc
push
inc
inc
inc
and
in
pushf
dec
inc
xor
stos
insb
adc
cmp
sbb
lcall
and
js
push
int3
iret
add
adc
mov
or
and
popf
scas
imul
repnz
push
inc
dec
xlat
sbb
push
push
push
add
pop
push
cmp
mov
or
faddl
xchg
sbb
dec
sbb
rol
xchg
jmp
jo
ret
dec
mov
mov
aas
js
sub
sub
pop
cmc
pop
rcrb
aam
jne
ret
cli
mov
lods
pop
jp
test
mov
dec
shlb
sub
mov
inc
jl
xchg
shlb
ljmp
in
jbe
sarb
xor
mov
or
out
inc
testb
lahf
out
das
sahf
das
xchg
fs
test
xchg
inc
sbb
rorb
push
sti
sbb
scas
stos
pop
mov
pop
scas
pop
sti
leave
aad
jecxz
fiadds
std
ss
push
outsb
std
divps
int3
ljmp
jbe
test
jbe
lahf
insl
psubusb
add
xor
inc
out
sbb
cmp
add
pop
sub
sbb
ret
xchg
out
jp
mov
or
loop
int
lret
in
insb
outsb
iret
or
cmp
xchg
clc
xor
pop
cmp
lcall
cmp
or
movsb
inc
sub
push
xchg
icebp
push
xor
sbb
xor
jno
adc
jge
es
inc
pop
bound
jnp
sbb
adc
inc
ja
jb
mov
cmc
int3
adcb
push
and
fld
negb
ja
push
inc
mov
sub
or
std
cli
cs
sbb
xor
push
and
out
xchg
cmc
ja
mov
pushf
fcoml
bound
mov
int
les
inc
adc
push
cmpsb
and
fbld
loop
dec
and
pop
out
xchg
ss
fldenv
in
loope
jno
pop
adc
loope
fs
fiadds
cmp
push
cmpsb
aad
push
mov
repz
dec
inc
test
imul
mov
leave
or
adc
outsb
out
arpl
xor
mov
mov
es
push
fs
clc
adc
or
xor
inc
inc
roll
sbb
test
xchg
addr16
pop
popa
push
outsb
sub
bswap
subl
aad
call
aaa
lret
ljmp
jecxz
mov
sbb
jne
lods
adc
pop
scas
jmp
sub
add
jmp
pop
inc
xchg
push
lods
mov
in
cmpsl
decl
out
imul
mov
inc
iret
outsb
into
js
xor
test
mov
subb
xchg
nop
or
and
jo
xchg
jns
push
enter
or
fcomi
dec
mov
enter
test
pop
cmp
sub
mov
mov
cld
scas
mov
cltd
fidivrs
mov
adc
xor
test
mov
cld
dec
adc
bound
push
jns
mov
dec
push
popf
outsb
adc
inc
inc
outsl
mov
jo
sbb
cmpsl
mov
cmp
imul
dec
jl
lahf
fsubrs
ljmp
test
pushf
enter
pop
add
dec
jno
lods
ficomps
out
fimuls
lds
stc
stos
and
lret
aas
add
pop
arpl
out
repz
lods
scas
adc
jae
pop
sbbl
ja
lock
inc
clc
add
data16
jecxz
repz
sbb
push
mov
fmuls
add
add
ss
aaa
testb
filds
sub
lahf
scas
jb
mov
div
mov
lea
dec
in
mov
imul
lock
push
scas
mov
xchg
in
cltd
jg
nop
in
jg
aaa
daa
mov
movsl
inc
jle
and
imul
jno
jo
fwait
jns
adc
psrlw
mov
nop
insl
mov
xorb
add
and
leave
insl
add
aad
mov
icebp
cmpsl
in
dec
push
cmpsl
sbb
lcall
lret
push
je
pop
popl
and
mov
fwait
out
out
hlt
mov
adcb
xlat
push
jne
call
xchg
stos
repnz
pushf
or
daa
cmp
in
std
ss
in
pop
jg
mov
icebp
push
push
push
mov
mov
pop
sbb
adc
push
in
rcll
jl
adc
cmp
cli
add
dec
push
ret
loope
mov
mov
cs
xchg
outsl
xor
and
add
xchg
cmpsb
repz
adc
aaa
stos
pop
shlb
les
shll
inc
insb
andl
mov
ljmp
dec
jnp
andl
pop
mov
mov
xor
out
sub
insl
fcoml
push
sub
xchg
subb
mov
mov
bnd
mov
sbb
jg
jns
jl
or
adc
lahf
inc
cmp
push
adc
add
enter
adcb
sub
push
addr16
das
xchg
mov
fadds
repnz
aam
adc
movsb
cmpsb
stos
inc
call
ja
filds
xor
xchg
mov
fisubrl
lahf
mov
pusha
fists
mov
mov
outsl
sub
jecxz
das
mov
mov
sbb
dec
push
add
jecxz
sbb
loop
pop
enter
loopne
shl
roll
cli
cmp
push
or
popf
or
aas
pop
and
mov
dec
pop
fwait
cmp
jle
scas
jg
int3
jge
outsl
and
shl
ret
ret
dec
pop
je
test
xchg
mov
cs
in
push
imul
inc
pop
mov
into
outsb
nop
xchg
pop
mov
adc
mov
lock
int
leave
ret
lds
out
xchg
mov
jge
test
test
pop
cmp
stc
pop
dec
pop
fcmovu
arpl
lret
cmp
popa
ret
xchg
mov
jne
aad
mov
inc
or
pop
in
fimuls
in
cmpsb
inc
sbb
pop
and
shr
cs
fdivs
adcl
fcompl
movsl
inc
mov
cmp
rcll
add
mov
ljmp
addr16
fsubrp
addr16
shrb
adc
dec
jg
mov
jb
test
test
or
mov
lahf
jge
mov
sbb
es
sub
pop
pop
pop
add
out
pop
loop
mov
test
imul
cld
jmp
fdivp
pop
cmp
dec
add
xchg
sbb
dec
push
pusha
adc
jnp
push
incl
int3
pop
or
mov
sub
mov
scas
fldt
inc
xchg
pop
jno
mov
push
push
jns
pop
in
pop
fdivrl
divb
add
xchg
push
rcll
jle
imul
jbe
mov
sbb
mov
subb
das
adc
sahf
scas
aas
add
ret
and
mov
pushf
adc
jge
mov
hlt
push
fwait
sbb
cmp
mov
loop
lahf
add
or
pop
int3
push
or
inc
arpl
fwait
shl
pushf
dec
popf
sub
mov
js
inc
scas
and
ret
test
mov
mov
addr16
pop
sub
repz
mov
dec
imul
cmp
pop
sub
ret
push
out
fcmovbe
aam
jns
imul
push
jnp
inc
adc
cld
in
and
cmp
cmp
jl
fdiv
mov
daa
es
xchg
sti
mov
imul
das
call
adc
subb
das
mov
adc
lea
pop
fmuls
xor
pop
fstl
lods
or
nop
aaa
or
jb
lcall
pop
cmpsb
mov
lods
jno
cmp
jl
stos
lock
mov
mov
dec
pop
sbb
pop
dec
out
pushf
xchg
mov
mov
adc
std
mov
test
xchg
fsubs
mov
testb
out
jl
das
loop
movsl
in
xor
mov
mov
je
leave
jge
sahf
push
testb
notl
mov
ljmp
test
pop
pushf
mov
js
xlat
ss
sbb
pslld
dec
pop
inc
mov
insb
adc
in
shll
or
mulb
or
add
dec
pop
or
cmp
int3
pop
cmp
sub
xor
dec
shl
loopne
sbb
dec
xor
lock
mov
rorb
in
push
test
dec
arpl
cmp
sbb
cmp
mov
dec
int
in
mov
pop
ljmp
and
imul
mov
std
jecxz
orl
out
repnz
into
xchg
cmpb
cmp
cli
mov
cmpsl
and
mov
pop
mov
jecxz
xchg
and
adc
shl
jmp
fcoml
cmp
shll
daa
or
pop
cld
aaa
jl
add
aam
jbe
pop
das
xor
pop
aam
and
sub
cmpsb
and
push
sbb
fsubrl
test
mov
lods
dec
lods
sbb
imul
leave
mov
mov
mov
aam
sub
outsb
and
les
addb
mov
jae
add
jb
sbb
inc
mov
ret
loope
jns
push
fistpl
mov
cld
push
dec
mov
inc
inc
cwtl
cmpsl
mov
outsl
cmp
jg
pop
mov
dec
cld
xchg
sbb
clc
jae
pop
lds
or
lahf
or
or
lahf
mov
pushf
mov
js
mov
nop
sub
icebp
sub
add
pop
xor
out
pop
pop
je
inc
mov
das
or
gs
xchg
repnz
addb
xor
pop
rcll
inc
or
pop
subl
icebp
iret
jno
and
adc
xchg
data16
pop
rorl
push
test
out
sar
sbb
mov
cltd
dec
jg
mov
dec
das
dec
xor
leave
cltd
popf
dec
loop
out
jecxz
mov
and
aaa
pop
add
mov
jnp
mov
mov
loopne
mov
bts
jmp
andb
cmp
xor
xchg
pop
push
scas
pop
dec
arpl
or
enter
xor
mov
out
dec
aad
xchg
xchg
sub
sbb
aad
aam
sub
lea
imul
sti
push
jbe
fsqrt
aaa
xor
aad
pop
sti
insl
mov
cmpsl
nop
outsb
test
ret
repnz
jmp
pop
dec
in
incl
gs
mov
jno
int
push
xchg
pop
das
int3
mov
pop
add
dec
xchg
xor
push
xor
mov
push
or
fidivs
fwait
jge
into
ss
adc
cmp
inc
add
mov
vpaddusb
mov
xchg
mov
adc
ret
lock
dec
pop
daa
mov
stos
fisubl
inc
imul
xchg
aas
xchg
add
cmp
cmc
in
xor
test
mov
gs
dec
inc
cli
sbb
adc
xchg
movsb
test
mov
inc
sahf
cs
hlt
sub
cmp
inc
dec
or
scas
mov
sub
push
xlat
xor
inc
push
test
notb
inc
insb
loope
test
fsubrl
ret
hlt
mov
mov
bound
push
loope
test
sbb
dec
add
loop
mov
lds
dec
inc
xchg
call
cmpsl
jl
ljmp
loop
push
inc
adc
sbb
sbb
subb
imul
add
sub
mov
pushf
scas
divb
push
pop
ja
imul
mov
sbb
pop
jbe
pusha
arpl
lods
sub
mov
cld
adc
push
fldl
data16
les
dec
sbb
pop
pop
out
and
jmp
sbb
mov
sub
jae
sub
sub
push
jo
js
js
call
push
mov
punpcklwd
stc
mov
inc
pop
loope
fstpl
mov
lahf
and
mov
fcomps
inc
push
js
stos
outsl
mov
repnz
push
sti
mov
xor
xchg
sti
push
xchg
add
cmp
pop
bound
push
xor
push
mov
pop
aas
roll
add
cmp
testl
cmp
data16
hlt
and
outsb
push
sub
imul
fldt
aaa
subl
adc
sbb
cmpb
mov
repnz
testl
pop
ja
mov
jnp
ds
mov
mov
pop
insl
hlt
dec
dec
xchg
jne
filds
subl
lret
imul
neg
addl
popa
cmp
xchg
adc
pop
repnz
xchg
pop
mov
mov
in
into
and
ret
out
fwait
mov
lods
mov
aas
out
push
scas
nop
jl
adc
loop
loop
movsb
loope
dec
cld
out
or
mov
sub
cmp
cmpsl
in
mov
iret
fcmovnb
sbb
aam
daa
add
or
shl
je
dec
mov
cmp
cs
and
movl
stos
sbb
test
xchg
sar
fcomps
ljmp
mov
call
mov
dec
stos
adc
test
jmp
mov
pop
movsl
std
jbe
insl
jmp
loope
add
adc
xchg
push
pop
pop
aas
push
and
xchg
mov
test
xchg
fsubp
cltd
dec
pop
cmpsl
arpl
out
sti
loop
or
into
mov
add
dec
inc
jae
mov
cmpsb
sbb
popa
ss
mov
es
jge
mov
inc
xor
cmpsl
movsb
dec
cmpsl
pusha
sub
push
mov
and
daa
daa
outsb
mov
lds
std
sarl
gs
push
or
or
icebp
clc
sub
cmpsb
sbb
sub
int
test
pop
stos
jne
es
outsb
xchg
adc
clc
pop
pop
or
xchg
add
sbb
or
pop
xor
sub
add
sub
and
out
or
push
dec
mov
mov
mov
dec
lcall
aad
int3
push
repnz
cs
push
xor
pop
pop
repnz
inc
jno
aas
repnz
lret
cltd
int3
mov
fistpll
cmp
subb
aaa
inc
addr16
jne
mov
push
mov
cli
fwait
mov
dec
add
out
dec
xchg
or
mov
pop
jnp
rcrb
and
sbb
jo
xchg
cmp
jns
imull
xchg
mov
shll
scas
mov
loope
and
or
data16
mov
insl
fadd
jbe
pushf
jb
xchg
bound
or
add
adc
into
push
or
sahf
fadd
popa
test
pop
push
adc
push
add
stos
test
ror
int
scas
or
sar
sbb
movsb
pop
and
sub
test
sbb
scas
sub
into
jns
cwtl
repz
push
divb
add
sub
sbb
lret
add
mov
lret
jne
xor
stc
pop
sub
mov
add
push
push
cwtl
xor
loope
test
push
or
shrl
or
inc
jno
mov
outsl
rcrl
pop
sahf
cmp
xchg
in
test
mov
in
xor
repnz
and
inc
out
xchg
jp
in
insb
repnz
adc
rcr
lock
aad
sub
les
outsb
add
arpl
int
dec
xchg
push
mov
xor
fs
loopne
sub
and
mov
pop
mov
test
sub
xor
shll
add
sub
fstpl
push
in
pop
adc
lret
xchg
push
adc
push
adc
dec
test
fcmovbe
sbb
repz
xor
jg
lcall
out
mov
loop
clc
cmpsl
movb
out
cmp
push
adc
js
cs
shlb
roll
xchg
dec
andb
pop
lret
outsl
fimull
push
sbb
and
lock
pop
pop
fildl
xor
popa
mov
add
repnz
aad
jl
push
push
or
xchg
fs
or
adc
mov
adc
movsb
gs
jne
cwtl
mov
add
push
add
push
cmp
dec
mov
cld
mov
adc
or
test
inc
stc
int
mov
push
mov
dec
mov
fistpl
dec
sahf
push
inc
jl
ret
and
pop
outsb
clc
jno
xor
dec
pop
movb
jl
mov
je
je
outsl
hlt
call
stos
mov
fwait
arpl
lods
mov
loope
cmp
test
xor
sbb
jns
mov
dec
jle
out
addr16
mov
sub
nop
inc
dec
pop
enter
xchg
ret
adc
push
shll
xor
adc
addl
mov
push
ss
daa
popf
insb
popf
cwtl
rcrl
inc
mov
cltd
and
aad
push
inc
and
les
lahf
inc
aas
enter
pop
xor
or
pop
adc
mov
out
in
stc
mov
mov
pop
xchg
movsb
test
inc
or
rorl
sub
movsl
cmc
mov
push
lock
sub
fcmovbe
ror
push
lcall
test
cld
dec
aas
mov
insl
mov
push
cmpsb
mov
lcall
lods
fisubs
sti
adc
sbb
loopne
sbb
fisubl
adc
xchg
pop
adc
lcall
push
jns
cmp
mov
loop
pop
jo
xchg
mov
aam
inc
aad
mov
fwait
movsl
stos
shl
xchg
lods
lods
pusha
lods
fmull
ja
sub
jecxz
loopne
push
imul
xchg
in
jb
jno
jne
sub
xchg
pusha
jp
cltd
and
mov
int
mov
pusha
clc
ja
insb
cmpsb
mov
mov
and
inc
jl
std
and
bound
sub
in
xor
pop
dec
sub
cld
movsl
jno
lcall
mov
out
fistps
inc
pop
inc
les
test
imul
mov
mov
fdivs
xor
pop
ret
inc
pop
mov
lods
sbb
mov
repz
or
xchg
dec
lret
jo
fildl
dec
sub
adc
pop
in
xor
fwait
sub
fistl
mov
inc
cmp
sbb
cmpsb
ret
lret
jecxz
cmpsl
mov
sbb
frndint
cmp
dec
or
int3
cmp
or
pop
out
cld
cmp
pop
mov
ror
pop
std
lret
push
lahf
cmpsl
xchg
ss
mov
dec
testb
cmp
and
jg
push
dec
sub
lds
sbbl
push
lods
fs
sub
fists
mov
inc
mul
mov
mov
sub
imul
mov
mov
xchg
divl
sahf
movsl
popa
into
dec
test
pop
pop
dec
je,pn
sub
mov
jmp
jo
xor
cmc
flds
xlat
pop
jle
into
pushf
and
pop
push
mov
inc
xor
push
xchg
outsl
fnstenv
inc
pop
cmp
dec
pop
jmp
inc
fsubr
rclb
pop
clc
cmp
inc
inc
out
lret
inc
inc
add
ss
xlat
inc
les
sbb
mov
enter
pop
add
jmp
cmp
sbb
dec
fs
notb
jge
arpl
into
jae
pop
add
cld
lods
fcom
pop
pop
xchg
pop
sbb
xor
jnp
add
mov
shlb
jecxz
inc
mov
inc
and
sbb
into
iret
add
push
pop
clc
roll
cmp
lcall
fnsave
sbb
std
test
loop,pt
bound
inc
mov
jne
xchg
sub
daa
xorb
arpl
fildll
mov
rolb
inc
cmp
cmp
mov
idivb
insb
aad
mov
mov
fstl
fistps
fs
adc
pop
dec
xadd
in
xchg
or
es
xchg
add
cld
sbb
sub
popa
mov
addl
pop
popf
aas
dec
lret
mov
outsl
test
out
push
out
ja
and
push
xor
jae
dec
cmpsl
inc
js
adc
cmp
and
aas
inc
mov
push
sahf
push
mov
fucomip
neg
decb
sahf
pop
lds
adc
xchg
shll
dec
sbb
xchg
push
outsl
inc
inc
jl
xor
inc
ror
push
cli
shll
dec
dec
push
xchg
jno
cmpsl
jecxz
inc
rorl
mov
inc
loope
sarl
push
jg
jecxz
adc
scas
and
mov
mov
dec
push
sbb
sarl
xchg
dec
in
pop
or
mov
inc
cld
cli
cwtl
addr16
adcb
pushl
sub
daa
repnz
cli
int3
pop
mov
push
xchg
aaa
arpl
out
jns
in
enter
sahf
push
jl
mov
gs
and
shr
dec
mov
jecxz
pop
ss
mov
stc
push
js
ret
outsl
pop
clc
fmulp
rorl
push
jns
out
mov
andl
movsb
lcall
imul
dec
mov
gs
mov
push
icebp
mov
rcrl
fildl
fists
repnz
mov
in
pusha
add
add
adc
mov
lret
inc
int
ret
mov
sub
dec
jp
outsl
test
ljmp
hlt
add
insb
add
dec
in
pushf
push
jne
repz
popf
pushf
xor
loopne
mov
aam
in
jge
leave
flds
jbe
test
fiaddl
cwtl
data16
nop
daa
jns
inc
sbb
fcoml
xor
dec
sub
xor
sbb
imul
dec
pop
push
lret
aas
push
and
dec
xchg
dec
mov
xchg
fsubs
xchg
push
adc
sbb
push
loope
je
pop
sbb
inc
repnz
out
mov
dec
adc
out
xchg
inc
inc
jp
mov
pop
ss
inc
mov
mov
cmp
mov
loope
shll
adc
fdiv
sbb
jg
jge
les
into
push
imul
mov
push
xor
int
dec
push
adc
cwtl
push
sub
fsubrl
push
scas
jle
jge
lods
cmc
mov
cs
bound
pusha
sti
mov
mov
jmp
imul
push
cmp
out
xchg
inc
jae
and
rcl
jecxz
sub
inc
jne
fldenv
insl
mov
and
xor
add
dec
popa
xchg
fidivrs
les
and
xor
mov
mov
cmp
cmpsb
adc
rol
jnp
inc
adc
fcmovb
and
pop
int
or
push
xchg
out
and
outsb
xor
es
je
lock
jnp
ds
test
inc
or
aas
push
pop
lods
mov
sbb
cltd
xchg
pop
dec
dec
push
sbb
push
int
sub
test
or
sbbl
adc
inc
das
cmp
stos
subl
lods
scas
pushf
cmp
mov
mov
call
mov
mov
aam
test
loop
ret
jo
fisubl
fadds
fdivrl
sbb
pushf
sbb
inc
jmp
fisttpll
sar
cmp
mov
enter
inc
jmp
mov
lds
xchg
call
fdivrs
std
pop
sub
cmpsb
inc
and
inc
mov
ss
inc
xor
inc
fyl2xp1
call
cmp
int3
push
sub
inc
idivl
cmp
icebp
sti
insb
das
xor
std
mov
mov
xlat
add
mov
in
xor
sbb
aad
wrmsr
fdivrs
dec
or
push
enter
movsb
cltd
repnz
pop
jnp
xor
cs
test
cmp
mov
inc
negb
nop
rcll
shll
dec
push
push
loope
test
mov
or
cmp
cmp
aam
rcrl
nop
daa
testb
cmp
dec
lea
adc
push
mov
in
pushl
call
inc
mov
mov
cltd
mov
shr
mov
mov
push
inc
repz
enter
xor
adc
lods
shlb
popa
sub
ret
jecxz
sahf
and
dec
jb
jo
shll
cltd
aaa
mov
lahf
pop
fimuls
mov
nop
outsl
xchg
neg
mov
in
les
sbb
sub
iret
in
bound
lahf
cmpsb
mov
loopne
jno
cld
push
into
sub
popa
daa
xorb
fdivs
dec
loopne,pn
xor
or
dec
push
push
pop
sbb
pop
push
add
mov
cmp
adc
outsb
jne
loopne
mov
or
lahf
nop
aaa
cmc
shlb
push
push
nop
jge
out
icebp
insl
test
inc
repnz
fucomi
gs
bound
test
pop
xor
push
repz
or
adc
sbb
mov
in
cmp
addl
jp
aam
mov
and
push
daa
in
andl
fwait
inc
cs
sti
je
jecxz
xchg
push
fldenv
arpl
pushf
xor
adc
sbb
cwtl
adc
push
xchg
popf
push
pop
or
cli
popf
adc
mov
mov
pushf
add
mov
and
icebp
adcl
adc
inc
popa
xchg
rorl
int3
xchg
ret
lods
cld
inc
inc
outsb
sarb
test
insb
mov
test
adc
scas
jp
sbb
and
sbb
adcb
cmp
fisubs
in
jb
add
icebp
mov
imul
mov
bound
movsl
dec
dec
ja
xchg
sbbb
scas
xor
dec
xor
bnd
mov
cli
mov
fdivrl
les
daa
lea
or
cmp
adc
push
pusha
xchg
out
cwtl
push
leave
popa
inc
ret
xor
mov
or
popa
inc
xor
xor
ss
jge
inc
outsl
mov
push
inc
movsl
cwtl
ss
or
push
fldenv
outsl
mov
dec
shl
inc
testb
cmp
xor
pop
not
jl
and
mov
fisttps
cld
cmp
cmp
pushf
call
or
rcr
inc
push
fwait
cwtl
ror
cs
adc
or
or
insb
repz
mov
push
and
in
test
iret
mov
push
out
sub
fidivl
lcall
ja
push
dec
mov
lret
movsl
gs
push
adc
mov
fmuls
xchg
dec
es
out
jmp
in
mov
shr
sbb
mov
enter
lcall
sbb
dec
sbb
fimull
mov
pop
sbb
stos
sub
test
dec
js
or
arpl
jp
push
stos
inc
jbe
add
rcrl
xchg
imul
push
dec
pop
test
add
xlat
in
xor
xlat
adc
jecxz
sbb
pop
pop
lods
dec
adc
popf
mov
imul
repz
notl
call
popf
mov
movl
sbb
mul
mov
out
aaa
in
xchg
push
ret
dec
clc
push
cmp
jge
mov
mov
fnstcw
sbb
xor
mov
pop
outsb
fldl
cli
mov
sub
prefetcht1
andb
je
loopne
js
lahf
aas
push
jge
push
mov
stos
movsb
xchg
call
notl
cmp
push
mov
push
nop
fs
mov
sbb
jge
ret
or
lahf
mov
pusha
or
mov
out
imul
xor
imul
xor
jns
scas
ja
pop
pop
lods
jg
mov
pop
pop
jle
push
jl
shl
adc
data16
dec
fildl
cltd
push
or
pushf
cmp
cmp
pop
xchg
daa
mov
pop
lcall
outsl
cmc
sub
pop
ret
or
aam
add
sub
xor
jb
ss
cmp
cmp
dec
ds
scas
dec
and
rcrl
sbb
xor
and
push
pop
vaddsubpd
popa
repz
cs
movsb
push
dec
data16
jbe
mov
aas
mov
add
out
cmc
test
mov
fstps
or
aaa
sbb
enter
xor
add
xchg
jmp
ficompl
fstpt
outsb
loope
jae
mov
insb
fmull
stos
jmp
sub
insl
mov
cmp
cmc
dec
push
fsubs
jbe
push
lret
push
scas
mov
add
pop
or
or
call
daa
and
cli
sbb
mov
dec
jle
data16
lret
xor
test
aam
cs
push
dec
cs
addr16
pop
dec
lods
jb
jle
fcmovne
cmpsb
inc
clc
test
push
push
daa
pop
add
sbb
dec
loopne
fdivs
gs
stos
fbstp
push
inc
xor
push
xchg
dec
and
jbe
cmp
popa
adc
fwait
lods
scas
outsl
incl
cwtl
mov
xchg
push
push
xlat
das
test
insl
lds
mov
out
mov
or
stc
mov
or
pop
leave
pop
push
push
rorb
mov
orl
stos
xchg
outsb
mov
sar
dec
inc
mov
xor
test
or
aas
pop
iret
jb
mov
insl
dec
lods
clc
jns
inc
cmpsl
push
ljmp
adc
mov
adcb
mov
in
fwait
xor
cmp
add
mov
sbb
call
mov
xor
pop
das
shrb
iret
ss
adc
mov
adc
fimuls
sub
inc
imul
jge
mov
popl
mov
pop
and
lret
les
faddl
inc
push
push
push
sbb
jbe
lahf
aaa
pop
cltd
add
daa
dec
jge
sbbl
mov
ret
mov
insb
push
jns
lahf
inc
rcrb
xchg
jns
push
dec
cmpsb
fnstenv
scas
and
mov
fwait
leave
sarl
or
pop
inc
and
mov
adc
or
jg,pn
pop
or
sub
mov
dec
ds
cmp
sub
mov
jbe
roll
inc
pusha
xchg
jbe
add
sub
js
adc
sub
in
cmp
out
mov
movsb
lods
adc
or
addb
stos
scas
add
out
dec
sbb
fs
ret
repnz
je
int
fisttpl
mov
sub
mov
add
pop
insb
loopne
scas
mov
insl
fdivrl
cld
popf
jmp
arpl
stos
movsb
mov
lret
jae
movsb
sbb
cltd
icebp
imul
sub
test
mov
imul
lds
cmc
jbe
nop
xor
adc
push
xchg
inc
leave
and
loopew
mov
ret
cmp
inc
imul
je
jno
repnz
dec
jmp
imul
arpl
repnz
jl
imulb
test
rclb
ja
dec
cli
aaa
mov
stos
movsl
sub
roll
jg
mov
push
sbb
dec
stc
pop
and
fbld
mov
cmp
in
inc
imul
shlb
jge
inc
xchg
clc
int3
push
lret
imul
pop
popa
xchg
sbb
loop
or
enter
scas
hlt
adc
iret
jle
call
push
jp
lcall
cld
stos
cmp
push
inc
jp
xor
jae
sub
inc
or
sbb
sub
ret
imul
cs
add
loopne
es
inc
cld
inc
push
mov
movsl
add
jl
cmpsb
add
pop
xchg
add
jge
mov
pop
pop
scas
ret
in
fwait
mov
frstor
lods
aad
pop
push
jae
test
jp
fidivl
out
pop
enter
shrl
test
pop
jnp
fidivs
bnd
lcall
cwtl
cmp
xchg
or
adc
cmpb
rcrb
sbb
adc
or
xchg
inc
idivl
sahf
lds
arpl
inc
xchg
mov
mov
out
cmp
maxps
fsubl
in
mov
mov
mov
ljmp
jbe
mov
aas
push
and
repz
shlb
mov
mov
mov
pop
mov
test
mov
in
int
or
fidivl
fwait
add
jmp
jecxz
cli
cmp
xor
into
dec
js
inc
test
xchg
les
cmc
jno
cmp
push
dec
push
and
xchg
mov
mov
mov
sar
stc
sub
xor
cmp
lcall
pop
adc
scas
data16
mov
ss
test
rcr
sub
imul
sub
push
lock
pop
lods
pusha
lret
popa
pop
arpl
shl
mov
xlat
sbb
pop
hlt
mov
add
xor
xor
imul
and
popa
pop
mov
pop
scas
mov
cltd
repz
and
clc
imul
or
ss
push
divl
and
xor
imul
leave
sbb
push
ret
pusha
jle
cwtl
arpl
ret
fwait
nop
sbb
sbb
incb
jge
lods
addr16
adc
dec
xor
out
sub
push
jne
int
enter
ficoml
cmp
mov
sub
jno
rcll
mov
xor
stos
iret
mov
sub
mov
and
dec
pop
js
push
jge
cmp
pop
or
fdivr
loope
mov
decl
mulb
popa
xchg
and
mov
cmpsb
arpl
ljmp
cmp
cmp
ja
cmp
adc
and
mov
add
movsl
jecxz
mov
xor
mov
js
lods
lcall
jmp
ret
adc
adc
imul
dec
or
cwtl
sub
mov
sbb
cli
add
stc
in
in
aad
or
xchg
test
push
cmovbe
fiadds
movsl
into
inc
test
sub
stos
xchg
or
xchg
fsubl
lcall
imul
xorb
sub
and
sar
lods
and
cmp
sub
pop
std
cwtl
gs
xor
mov
jl
xchg
sbb
or
jb
aam
inc
cmpl
dec
add
jb
xlat
mov
mov
sub
int3
mov
ror
inc
cmp
xchg
testb
push
cmpsl
cmp
inc
not
fimuls
mov
sti
dec
push
jge
xorb
frstor
mov
xchg
xor
mov
mov
dec
pop
add
adc
movsb
jo
xlat
add
mov
testl
gs
popa
ds
jle
fidivrs
das
sbb
leave
in
imulb
cld
jae
xchg
jg
mov
inc
sbb
sub
sub
js
xchg
and
fwait
push
mov
mov
stc
push
test
repz
push
push
sub
sarl
out
mov
inc
pop
mov
outsb
add
add
or
xchg
adc
xor
push
lahf
and
mov
jnp
mov
insl
mov
and
pushf
or
fadds
ret
ja
pop
adc
push
mov
fmuls
out
mov
movsb
pop
ret
inc
hlt
adc
sbb
push
adc
fwait
scas
jmp
pop
xchg
stos
movsl
test
test
out
xor
lret
pusha
push
and
sti
xchg
push
mov
cmp
xor
inc
in
dec
ret
adc
sub
sub
int3
push
mov
sub
in
or
test
aas
push
rorl
mov
cmpsl
pop
mov
pop
aas
mov
pop
mov
in
negl
jle
xor
hlt
cmp
mov
je
jbe
out
popf
jae
pop
jmp
js
push
out
js
xchg
outsb
and
or
adc
shr
and
test
pop
jns
insb
loopne
and
flds
mov
mov
inc
jp
arpl
add
out
popf
ret
nop
cmp
pop
push
dec
stos
adc
stos
xchg
adc
sbb
lcall
push
lods
add
mov
sbb
loope
dec
rcrl
pop
xor
or
cmp
popf
jae
pop
into
das
sub
jp
mov
aas
cmp
bound
ljmp
xchg
inc
popa
test
or
in
mov
ljmp
adc
jnp
jb
scas
loop
xor
hlt
sti
push
shll
xor
cld
in
sbb
mov
in
and
add
fbstp
rclb
mov
add
jg
inc
iret
insb
mov
shrb
rcrl
inc
aaa
mov
pop
sbb
aad
sbb
aad
inc
icebp
jne
and
repnz
ljmp
cmp
ljmp
clc
jl
cmp
faddl
js
je
sub
fsubl
shrb
clc
cmp
mov
mov
or
in
push
daa
mov
fwait
sbb
push
nop
add
sbb
movsl
jnp
or
inc
insl
dec
jne
push
cmp
loop
cmp
cmp
inc
pop
push
pop
repz
popa
xchg
fimuls
add
xor
add
mov
aas
xor
and
pop
adc
imul
add
sub
pop
pop
cmp
fisttpl
push
pop
sbb
jb
fwait
sbb
add
jb
xor
leave
dec
aaa
icebp
ret
mov
add
arpl
jo
pop
dec
mov
ds
fcmovnu
clc
rclb
jbe
daa
mov
dec
and
ret
push
push
pop
xchg
add
leave
data16
clc
cmpsl
or
add
adc
mov
cld
xchg
dec
movsl
mov
adc
xchg
outsl
loop
mov
mov
lods
mov
popa
int
mov
std
repz
add
clc
mov
and
jmp
sarb
loopne
mov
jp
and
xchg
or
add
sahf
mov
cmpsb
call
ljmp
sahf
sbb
fistps
xchg
stc
or
inc
mov
fwait
ja
jb
iret
test
jbe
enter
adc
nop
nop
push
dec
imul
push
xor
in
sbb
daa
and
pop
pop
lds
pop
push
sbb
mov
negb
sub
push
jl
out
int3
pop
arpl
movsb
call
sub
sbb
jns
xchg
xchg
adc
bound
jmp
pop
insb
stos
repz
or
sub
mov
negb
das
or
mov
cmpl
lds
push
sub
and
pop
pop
stos
inc
call
xor
xchg
jo
fs
or
sub
xchg
jns
mov
les
mov
ja
and
loope
test
pop
mov
cmp
inc
cld
out
cld
iret
ret
lret
es
adc
test
xor
mov
in
mov
xchg
dec
rorl
mov
pop
fisubrl
xchg
repnz
sub
gs
pop
sbb
push
xor
cmp
mov
sub
jne
pop
mov
inc
cmp
jo
xor
or
or
cltd
and
xor
fs
mov
lret
jmp
mov
and
punpckhdq
sub
jb
insl
inc
inc
shll
mov
ds
xchg
in
movsb
enter
out
aaa
push
lret
add
sbb
stc
lea
in
pop
scas
into
aad
dec
push
and
add
out
pushf
ds
xchg
dec
aaa
outsb
sub
xor
call
std
lahf
out
cmp
rol
dec
popa
jbe
sub
outsb
jge
sub
xchg
jge
repz
sub
lret
xchg
mov
paddusb
inc
jle
stos
jo
jl
mov
out
xchg
adc
repnz
inc
stos
jp
int
mov
orb
fisubrl
push
test
inc
shll
dec
sbb
arpl
imul
rorb
xchg
fisttps
fists
daa
insl
push
mov
sarb
pop
mov
or
movl
mov
or
jle
imul
dec
jp
inc
mov
add
stc
addb
out
pop
or
cs
sbb
mov
sti
in
cld
shrb
lret
outsl
mov
movb
nop
test
je
outsl
jae
sbb
mov
push
jmp
mov
push
cmpsb
lcall
adc
mov
movsb
and
cmp
je
dec
jg
xchg
loop
push
push
push
pop
pop
fwait
or
pop
sbb
xchg
xchg
push
push
jle
or
mov
out
sbb
jbe
and
cmpsl
cmc
push
mov
out
aad
insb
pop
scas
test
out
jnp
popf
addr16
js
sbb
or
ret
in
rcrl
fistl
or
pop
fcmovu
push
adc
sbb
push
jno
jno
dec
movb
mov
lret
inc
stos
dec
pop
xor
dec
mov
dec
test
fxch
cmp
cwtl
jno
push
out
cmpsl
cmc
and
inc
fiadds
popa
xor
loopne
pop
cmpsb
je
gs
shl
cmp
inc
add
adc
lcall
imul
xor
das
cmpsb
sarl
icebp
adc
int3
enter
lock
fldl
xor
roll
rorb
push
decb
std
dec
out
cld
jmp
inc
dec
int3
cltd
pop
sub
inc
cmp
sbbl
scas
adc
or
mov
pop
pusha
cmc
test
jp
sub
cmp
or
les
loope
test
clc
in
dec
ret
ss
cs
dec
je
in
sbb
mov
test
out
sbb
xchg
pop
loop
jo
adcb
pop
je
les
jnp
and
adc
movsb
ljmp
sub
xor
imul
lock
and
out
inc
arpl
or
fsubs
ja
idiv
out
inc
push
adcb
jne
cli
mov
xor
ficoms
mov
pop
cmp
push
xchg
clc
pop
push
pop
pop
cmp
mov
lret
test
add
jp
cmp
xor
shll
dec
pop
cwtl
out
pushf
or
sub
stos
xor
push
repz
leave
cmovle
mov
mov
push
jg
lods
add
fwait
jne
adc
inc
cmp
or
xor
sahf
je
aaa
iret
push
mov
jmp
mov
mov
das
fbstp
int
xchg
in
decb
shll
int
push
fwait
sti
push
fsubrs
mov
addr16
sbb
and
lret
jns
dec
and
push
pop
mov
pop
testb
or
data16
mov
into
imull
in
sbb
mov
or
cltd
popa
push
mov
sarb
cmp
and
dec
pop
and
inc
nop
mov
testb
roll
jge
addr16
sar
rcrl
push
mov
and
cmpsl
pop
loopne
inc
rorl
dec
mov
xchg
imul
xchg
fsubrl
jbe
aas
lods
push
push
cwtl
in
dec
imul
adc
dec
cld
sub
pushf
lea
mov
push
sbb
push
jne
mov
int3
mov
push
loop
jne
in
out
or
add
aam
popaw
outsl
fwait
lcall
popf
lcall
mov
jns
pop
inc
sti
mov
insl
int
lahf
lahf
or
call
jge
and
dec
shlb
mov
cwtl
xchg
mov
xor
push
je
dec
mov
fs
inc
sub
movhps
ret
jae
dec
cmp
ja
mov
inc
xchg
popf
or
dec
sbb
icebp
push
dec
iret
cmp
cmpsb
or
pushf
orb
sbb
inc
xor
scas
sbb
jns
test
sbb
cmc
mov
dec
jae
repz
xchg
or
dec
movsb
jb
and
ljmp
stc
cmpsl
ret
lahf
pop
bound
testl
mov
add
insb
cmpsb
fdivr
divb
int3
andl
sahf
jge
fdivrl
sbb
in
sub
aad
sbb
sub
inc
scas
aad
push
sbb
cmp
mov
loopne
inc
or
fdivs
jle
rcrl
lahf
in
jae
mov
push
adc
or
and
orps
into
js
fcmovbe
int
in
jne
push
in
mov
pop
cmp
xchg
inc
out
mov
adc
dec
stc
test
push
pushf
je
jne
repz
shl
xor
pop
pop
push
pop
sarl
pop
in
mov
outsl
inc
adc
mov
in
in
fs
lock
mov
in
sbb
stos
les
cwtl
sarl
lds
pushf
jae
and
push
sti
scas
nop
scas
sub
scas
mov
fsubl
push
mov
push
add
aad
lods
pop
pop
or
push
out
add
cmp
push
fcoml
test
adc
sub
dec
pop
aam
fs
push
jo
cmp
es
xchg
mov
dec
jae
add
stc
push
xor
push
pop
mov
lock
pushf
xchg
dec
inc
pop
or
pop
shlb
sbb
jle
aaa
lret
mov
enter
pop
arpl
pop
cmpsb
fcmovbe
sbb
jmp
dec
jno
or
and
mov
hlt
push
push
push
cmp
mov
fisttpl
ret
pop
test
ja
in
adc
xlat
imulb
icebp
sbbl
out
cmp
imul
jnp
pop
lock
push
sti
in
mov
sbb
jb
jns
cmp
or
repnz
lods
mov
mov
mov
adc
pop
hlt
sub
mov
or
dec
add
test
push
addr16
xor
mov
dec
add
js
and
jne
fnstcw
stc
pop
fbstp
lret
mov
rcll
dec
sti
das
push
cmpsb
ja
arpl
lahf
or
sub
pop
and
mov
fmulp
cmc
cmpsb
cmp
test
mov
je
jo
lea
xchg
cmpsl
fbstp
int3
cmp
std
stos
in
push
mov
xor
push
xchg
out
loopne
inc
imull
out
cmpsl
or
xorb
adcb
sub
mov
fsubp
pop
mov
in
sub
add
inc
je
sbb
sbb
lcall
imul
dec
ficoml
out
mov
stc
inc
pop
ret
dec
in
cmpsl
adc
mov
out
fisttpll
ljmp
loope
add
sti
ficomps
stc
sub
cmp
imul
jl,pt
scas
mov
lcall
or
fimuls
iret
push
inc
cmp
popf
mov
push
out
ficoms
cmpl
xor
loop
subb
lcall
fcoml
int
pop
add
inc
scas
sub
xchg
callw
pop
xor
dec
jno
mov
sbb
ljmp
jne
cmc
es
cmp
dec
xor
cmp
outsl
mov
jg
mov
sbb
and
mov
push
mov
imul
lcall
or
int
pop
xor
test
loopne
pushf
mov
dec
jns
divl
and
add
mov
out
mov
pusha
rorb
mov
jne
dec
outsb
in
mov
lock
cmp
aam
rcr
add
cmp
xor
sar
movsl
xor
mov
daa
mov
clc
pusha
inc
cmpsl
pop
mov
shrl
or
or
jo
sub
dec
cli
push
in
xchg
pop
or
xor
ret
dec
inc
xor
int3
jb
in
ret
je
and
jbe
xor
inc
or
or
pop
test
stos
jne
sbb
cmc
gs
pusha
je
ljmp
xor
pop
mov
in
clc
push
jns
sub
xor
ja
push
out
lcall
fs
sarb
fcmovne
pop
xor
out
mulb
sub
add
inc
mov
mov
jo
mov
lea
and
adc
mov
xchg
insl
mov
adcl
popa
push
jp
jb
push
pop
or
cmpl
and
fidivs
xor
push
and
inc
int3
sahf
xor
mulb
les
mov
sti
xor
jno
imul
pop
rol
lcall
cmp
mov
xor
jmp
or
leave
mov
in
mov
cmp
loopne
mov
xorb
add
mov
lea
fs
repnz
lea
test
les
jg
dec
fcmovb
and
cs
int
gs
js
xchg
dec
jmp
and
cmc
in
loop
sbb
ret
cld
sahf
dec
outsl
lret
mov
cs
lret
dec
pop
xchg
bound
push
out
mov
pop
pop
cmc
mov
xor
insb
mov
jle
stc
jo
mov
xchg
pop
es
or
jb
add
repnz
xchg
pop
test
jg
sarl
or
pop
add
aad
rolb
adc
dec
jge
xchg
shlb
add
mov
int
loop
ds
fucomip
dec
fiadds
in
mov
outsb
lods
fwait
jecxz
addr16
push
push
jmp
gs
pusha
sub
scas
and
jb
cltd
int3
xchg
in
mov
test
mov
jmp
scas
sbb
ds
call
das
mov
cwtl
pop
xchg
out
xor
out
adc
push
xor
inc
lahf
dec
and
adc
pop
xchg
mov
nop
shlb
push
hlt
hlt
fcomps
adc
mov
push
xor
scas
das
cltd
mov
ljmp
insl
sahf
repz
push
aam
leave
lret
adc
mov
jno
in
cmpsl
scas
test
push
cmpsb
xor
int3
cmp
mov
and
xchg
idiv
mov
adc
dec
push
pushf
jg
jecxz
push
cmp
cmp
jle
clc
or
xchg
fisubs
daa
sbb
ss
mov
mov
subl
xchg
ja
mov
push
je
or
adc
jecxz
sbbl
mov
ljmp
jge
aas
xor
sbb
loop
jae
mov
lds
mov
in
push
jmp
mov
adcl
pushf
ss
repz
sub
and
scas
push
hlt
mov
loopne
lcall
fnstcw
pop
lret
lods
imul
dec
pop
popa
test
sub
cmp
insl
xchg
or
pop
dec
pop
cld
add
xchg
shrb
fstl
add
pop
xor
repz
mov
inc
andl
mov
loopne
adc
push
push
jae
mov
jns
enter
stc
adc
sahf
insb
pushf
push
addr16
pusha
out
out
sub
dec
mov
loop
pop
mov
inc
pop
imul
dec
fcmovb
cmp
lds
push
pushf
mov
inc
mov
lds
pop
lds
pop
jns
push
adc
lret
mov
adc
fwait
notl
cmp
gs
fs
sub
cwtl
push
dec
test
cli
push
jle
push
aam
jmp
sub
ss
jle
aaa
sbb
sub
push
popf
test
in
adc
lea
inc
cli
mulb
aam
in
rcll
pusha
hlt
cld
fldenv
call
fsubl
repnz
jo
cwtl
or
jg
pop
fisttpll
jl
dec
sbb
xchg
in
stos
repnz
jb
pop
shrb
out
or
inc
add
incl
sub
or
call
xor
mov
and
dec
cmp
pop
add
xchg
jl
adc
out
sbb
pop
sbb
test
nop
or
ds
mov
dec
outsb
fnstsw
in
mov
xor
xchg
addr16
mov
xlat
or
sbb
fwait
fs
in
fsubrl
inc
cmpsl
dec
scas
scas
in
jge
das
pop
in
inc
test
das
cmpsl
fistpll
jp
imul
nop
lods
rcrl
jno
mov
shll
paddq
sub
shll
push
pop
jnp
xlat
adc
mov
pop
notb
sbb
js
mov
ror
outsb
mov
inc
lods
notb
sbb
jecxz
jecxz
or
xchg
cli
mov
lods
icebp
fs
jbe
xchg
cmpsb
adc
imul
lret
xchg
int
fwait
adc
mov
jmp
and
mov
pop
ss
xchg
cmc
push
aaa
fsubrl
jge
push
xchg
or
into
mov
pop
inc
and
inc
test
addl
sbb
insb
fidivl
jno
jno
dec
jae
fildl
mov
jb
aas
mov
dec
inc
mov
imul
pop
jg
mov
xchg
adc
jmp
xor
insb
pop
push
jb
mov
js
ljmp
adc
pop
lcall
inc
lea
cwtl
inc
mov
sti
repz
mov
ds
gs
outsb
xor
je
stc
rol
rcll
mov
jne
lea
cltd
pop
andb
push
jle
cmpsl
comiss
addr16
push
cld
sbb
xchg
xchg
mov
and
in
lcall
fldt
push
push
pop
sti
testl
fs
lods
scas
lock
sbb
fsubrl
mov
flds
int
sub
jmp
pop
addr16
std
mov
imul
and
mov
jmp
inc
push
and
sub
mov
dec
insb
lea
adc
jp
push
push
mov
push
outsb
mov
shrl
mov
fsubl
xor
outsb
daa
jae
cmp
jns
test
push
push
fimuls
adc
je
lret
inc
clc
mov
dec
or
xlat
xchg
cmpsb
cmp
push
vpsllw
cmpsl
xchg
mov
push
dec
mov
sbb
add
mov
push
cmpsb
ss
add
popa
mov
insb
out
jno
fisttpl
testb
clc
xor
lahf
or
lea
adc
xchg
push
adc
cmp
fildl
adc
mov
sti
adc
cli
add
push
mov
jg
fldt
scas
cmc
hlt
stos
stos
sub
inc
mov
addb
mov
andb
mov
sbb
jmp
sbb
dec
cmp
stc
inc
push
lods
das
and
pop
scas
lret
in
loopne
orl
jb
popa
stos
out
mov
mov
mov
andps
sub
jbe
xor
mov
add
stos
add
push
or
popf
and
inc
or
pop
inc
cld
enter
in
lahf
add
rorb
ja
psllq
xor
mov
xchg
pusha
adc
pusha
mov
push
fwait
and
lods
jnp
dec
mov
sub
mov
dec
xchg
test
push
mov
neg
add
adc
mov
call
pop
popa
or
insl
repz
and
sub
ret
sahf
aam
dec
jno
mov
and
jecxz
dec
or
sbb
adc
and
xor
sbb
repz
dec
cmp
dec
or
cs
add
and
jmp
mov
jae
stos
dec
xor
in
dec
push
repz
shrl
mov
add
pop
cmp
pop
in
rorb
repz
pushf
xchg
mov
mov
inc
pop
inc
lock
push
shr
xor
iret
outsb
or
repz
mov
in
stc
inc
pushf
cmp
sbb
push
aam
mov
cmpsl
xor
jp
sbb
testb
shlb
cmc
out
lret
mov
mov
aam
jb
ja
adc
xor
push
sbb
sub
stos
cmpsl
pop
ficoms
mov
test
lods
jb
arpl
mov
mov
inc
jns
daa
mov
mov
adc
mov
sub
sub
xchg
mov
jae
xchg
dec
movsb
push
cwtl
mov
les
push
inc
pusha
mov
jne
clc
dec
iret
pop
bound
das
xor
xor
out
and
cmp
jbe
and
xchg
insb
or
or
addr16
push
mov
fstps
adc
fisubrs
dec
dec
sub
dec
in
jb
shll
in
fnstenv
or
ljmp
imul
and
addl
les
and
jo
inc
daa
mov
daa
cmp
or
cmp
andl
fidivl
fwait
in
imul
adc
xchg
fst
mov
add
push
lea
xor
jecxz
movb
gs
add
sub
mov
or
adc
sbb
jns
sub
rcrl
push
test
or
lret
adc
lds
inc
jno
iret
dec
inc
in
cmp
out
lods
into
push
add
cmc
jae
mov
mov
or
inc
cs
sbb
push
dec
and
dec
ds
int3
lret
insb
test
imul
andb
ljmp
cmpsb
push
arpl
out
gs
imul
cs
xor
lods
xchg
cmp
push
movsl
in
imul
fs
popa
lret
lret
push
add
mov
mov
add
fs
add
add
out
imul
mov
jnp
push
mov
ljmp
cs
dec
push
xor
mov
subl
cmc
mov
add
xor
movb
incb
sar
and
ret
xchg
ljmp
mov
test
dec
test
and
lcall
fstps
sbb
scas
push
sbb
les
aas
pusha
xchg
cmpb
sub
incl
das
jp
xor
sub
and
dec
push
jl
mov
and
sub
pushf
mov
xchg
inc
lods
and
sbb
xor
pushl
pop
add
jns
mov
inc
cmpsl
sbb
loopne
ret
or
or
mov
or
inc
lock
orb
adc
jp
es
arpl
aas
das
mov
ds
das
hlt
loopnew
popw
test
jbe
xor
ret
hlt
cmpsl
addr16
push
fwait
sahf
insb
mov
test
imul
and
inc
fiaddl
stc
stc
call
andb
cmp
inc
in
push
mov
pop
xor
test
push
xchg
inc
pop
pop
mov
pop
sbb
pop
fimull
mov
sahf
ja
push
pop
les
and
sub
jle
fstpt
cmp
bound
jne
rorl
idivb
outsb
insl
sbb
and
push
add
xchg
cltd
mov
adc
ss
or
insb
mov
or
mov
mov
adc
imul
xchg
cld
add
or
add
jae
hlt
push
icebp
xor
jbe
jo
fcoml
mov
inc
push
in
add
pop
out
fxch
push
icebp
aad
inc
push
repnz
jns
or
fisubrs
cmpsb
xor
push
mov
test
nop
mov
notl
dec
sbb
jbe
adc
addr16
xlat
inc
mov
or
or
jnp
push
outsb
mov
cmpsb
dec
in
inc
dec
mov
mov
and
add
daa
dec
negl
jbe
mov
jge
push
mov
sub
imul
idivb
mov
dec
add
xlat
xlat
sbb
out
jmp
in
cmpb
rclb
outsb
pop
movsl
and
xor
lret
jp
mov
adc
add
jecxz
inc
pop
fiadds
jnp
fsubrl
arpl
lock
enter
out
add
pop
or
cmpsb
lret
rolb
stos
jl
push
jecxz
xchg
mov
adc
xlat
push
lock
jg
fdivr
insl
hlt
ret
lret
add
enter
negb
adc
movsb
sbb
jo
xlat
lods
jb
jg
mov
fucomi
clc
cli
movsb
push
sbb
cmpsb
push
cld
stc
repz
add
adc
xorw
push
xchg
pop
fstpl
aam
orb
xor
mov
push
daa
dec
lds
std
cmp
xchg
mov
xchg
mov
inc
jnp
aam
sbb
mov
les
js
fsub
add
aad
cmp
bound
scas
mov
stos
sarb
addb
mov
inc
inc
inc
and
push
loopne
xor
rcll
push
push
orl
ror
call
jo
fwait
jmp
add
adc
cmp
lock
out
je
or
inc
lcall
stos
xchg
scas
pop
xchg
loop
push
out
xor
pop
adc
xor
sbb
cltd
mov
lret
inc
sub
shrb
adc
pop
in
mov
rcrl
fimull
jle
and
xlat
xlat
insb
xchg
stos
std
sub
mov
add
pushf
aas
dec
imul
dec
or
xchg
inc
into
cmpsl
push
jns
sti
and
jno
mov
ss
adc
fldcw
enter
clc
pop
gs
fnsave
lods
mov
js
pop
fs
shlb
shlb
sarl
jns
pop
leave
and
iret
in
adcb
loopne
fwait
test
mov
sti
test
mov
inc
stos
outsb
mov
cmpsl
xlat
popa
fistps
push
cmp
aaa
mov
and
cltd
fs
push
pop
flds
xchg
clc
int
mov
inc
mov
cmp
and
ret
inc
movsb
sbb
add
fnsave
popf
nop
sahf
movsl
push
mov
dec
sub
and
cld
adc
cmpsb
mov
out
out
mov
sub
pop
pop
pop
add
mov
nop
pop
or
int
js
or
pop
iret
je
cmpsl
addr16
test
adc
jmp
jge
or
add
loope
mov
lea
ds
dec
sti
add
lahf
aas
sbb
cmp
or
push
addr16
mov
and
fst
push
fcmovnu
pop
jl
add
or
cs
in
enter
shr
mov
sbb
cmpsl
in
fs
insb
xchg
cwtl
adc
jne
mov
cmp
push
sbb
dec
xchg
and
push
xchg
xchg
pop
arpl
pop
add
jl
cmp
push
sahf
popa
inc
mov
inc
repz
add
addb
stos
lock
add
sti
into
jmp
int3
ret
mov
icebp
xchg
push
add
pop
icebp
rolb
inc
mov
out
sbb
loope
adc
je
xorl
sbb
push
jl
repz
inc
fcomip
push
add
xchg
push
pop
pop
scas
inc
in
sti
mov
dec
sar
pushf
xchg
es
sub
cwtl
mov
test
push
sub
mov
arpl
xchg
and
sbb
add
sub
sahf
das
iret
mov
mov
lret
mov
or
mov
imul
or
into
xchg
lahf
xchg
sub
fistpll
sbb
jae
adc
ja
adc
movsl
inc
into
into
hlt
adc
jp
stos
int3
dec
js
sbb
bound
inc
clc
sbbb
fsubs
jo
xor
out
test
mov
lds
dec
stos
das
push
popf
arpl
dec
lods
inc
push
and
lods
jno
jae
repz
fldenv
addb
or
icebp
out
add
clc
movsb
dec
or
rorl
add
lcall
or
mov
pushf
repz
mov
xchg
incb
sbb
into
xchg
repnz
jo
icebp
sbb
mov
xchg
js
fs
dec
push
test
movl
add
test
add
loop
xor
fcmovu
pop
inc
xchg
loop
fists
cmc
pop
add
inc
leave
ficoms
out
push
bound
or
mov
mov
stos
dec
adc
mov
ja
push
dec
imul
cmp
inc
arpl
push
into
mov
cmp
pop
dec
fstps
gs
clc
dec
jmp
or
mov
movsb
lret
pop
inc
adc
add
nop
shr
insb
pop
mov
mov
sub
je
shr
lods
cmpb
xchg
nop
jae
pop
mov
jle
mov
push
adc
call
and
jg
movsl
lock
adc
add
cli
jb
out
sub
xchg
sub
stos
out
mov
mov
push
cmc
adc
test
lods
sbb
jl
test
in
push
pop
cmp
inc
push
adc
and
pop
arpl
inc
mov
out
push
pop
stc
sub
add
call
out
sti
ds
cmc
rdpmc
movsb
jmp
lock
int
gs
mov
out
incl
dec
adc
es
fwait
adc
in
lahf
xchg
xor
xlat
fildll
insl
fwait
add
sbb
mov
sbb
inc
into
sbb
mov
orl
stos
pop
mov
inc
xabort
in
xchg
mov
popf
add
adc
mov
jmp
push
rorl
inc
mov
les
jle
imul
or
xor
daa
sub
outsl
daa
lods
cltd
fdiv
in
dec
repz
inc
out
int
stc
imul
or
enter
add
popf
test
jne
loopne
dec
daa
xchg
sbb
ret
lods
mov
and
hlt
clc
outsb
mov
mov
mov
test
loop
pop
lret
es
out
leave
dec
clc
pop
js
add
sbb
dec
xor
hlt
ja
scas
mov
iret
scas
sbb
xchg
sbbl
imul
stc
jmp
icebp
mov
pop
jnp
das
jg
mov
test
add
push
jp
fisttpll
icebp
pop
ds
out
divb
pop
mov
inc
divb
fcmove
push
insl
shrl
pop
out
cmp
or
xor
lahf
addr16
and
adc
jp
rcr
add
daa
arpl
and
outsb
pop
test
enter
mov
rol
pop
add
pop
shrl
or
push
jb
shrb
pop
clc
mov
pop
out
andb
fbstp
shll
and
int3
fisttps
or
jg
arpl
mov
loop
dec
cld
inc
scas
dec
or
data16
sti
fbstp
aaa
test
adc
outsl
lock
mov
pop
add
adcb
andb
jne
lock
adc
xchg
fsubrp
in
pop
js
lea
std
sub
pop
sbb
psubsw
mov
cmp
into
lock
leave
lret
jecxz
push
and
mov
stos
test
adc
jns
mov
jecxz
push
mov
mov
pop
enter
fdivr
xchg
mov
add
mov
push
xchg
fdivl
cmp
push
ss
xlat
lock
xchg
rorb
in
sub
in
xor
icebp
psadbw
jo
popa
adc
sub
sbb
gs
jnp
mov
cmpsb
dec
inc
fildll
or
jp
in
fwait
sub
stos
and
lcall
clc
push
nop
bound
loop
cltd
mov
aas
nop
pop
cmp
add
lret
add
jl
cmc
mov
notl
sbb
stc
cmp
jecxz
sbb
jle
movsl
mov
cld
mov
jecxz
dec
add
push
or
shl
in
and
jp
mov
jl
pop
sub
fisubs
movsl
xchg
xor
icebp
push
xor
jae
ret
popf
mov
fbstp
pop
sbb
dec
and
fsubl
dec
popf
xchg
pop
push
jo
mov
push
jmp
xchg
sbb
inc
addr16
movsb
jno
push
test
ret
cld
lret
sub
ss
jno
int3
sbb
arpl
sbb
push
jl
fists
aam
xor
xchg
cmp
and
sbb
and
rorl
sub
cwtl
jle
push
cwtl
call
pop
jmp
inc
scas
stos
pop
ja
mov
jp
push
xor
sub
pop
addr16
es
push
mov
call
dec
lds
mov
in
pop
stos
inc
test
icebp
push
notl
clc
aam
movsl
jns
xor
pop
aaa
mov
push
jne
mov
xchg
fwait
dec
das
sbb
idivl
outsl
mov
add
iret
push
adc
out
and
addr16
cli
mov
loop
leave
jg
xchg
push
test
mov
xchg
dec
int3
jnp
mov
push
xchg
push
xchg
mov
xchg
add
mov
mov
lock
mov
jge
adc
popf
ljmp
out
ds
cmpsl
hlt
adc
dec
push
insb
dec
mov
push
xor
fisubrl
push
mov
xchg
aam
fwait
std
mov
imul
leave
inc
fdivs
mov
hlt
pop
lds
call
xchg
int3
mov
push
xchg
mov
or
mov
adc
inc
mov
jmp
inc
leave
loope
subb
mov
int
dec
sbb
xor
pop
pop
push
jae
xor
push
mov
sub
cmp
mov
pop
xchg
adc
sbb
mov
loopne
imul
mov
xor
int3
jecxz
jno
out
mov
mov
mov
hlt
mov
bound
and
jo
jno
inc
fildll
ret
sbb
sbb
xor
lods
pop
test
sub
divl
in
xchg
push
int3
inc
lods
test
mov
in
mov
mov
mov
and
inc
loope
mov
and
cmp
sub
push
mov
in
and
or
mov
imull
jno
divb
xchg
sub
pop
lock
test
pop
push
pop
shll
cmp
xchg
add
rcll
in
and
fs
mov
addr16
ja
aas
jno
pushf
xor
adc
jnp
lahf
xor
inc
dec
add
mov
ror
and
or
add
push
mov
ror
out
ret
or
ja
pushf
inc
mov
inc
xor
xor
sub
xor
xchg
pop
inc
sub
subb
mov
andl
repz
orb
dec
mov
scas
mov
dec
nop
outsl
adc
push
xchg
xchg
cmp
aam
inc
jmp
and
fisubrs
pop
sbb
cmpl
xlat
xor
es
cmp
dec
sub
mov
fildll
mov
mov
dec
mov
sbb
jns
loopne
xchg
cld
sub
movsl
stc
and
mov
sbb
addr16
add
pop
mov
sub
mov
in
or
sub
clc
mov
insb
mov
mov
sahf
mov
into
int
lcall
icebp
xor
and
sub
xchg
repnz
outsb
mov
ss
and
jns
push
cmp
imul
jl
int3
lods
fdivrp
aas
fstps
icebp
lret
jmp
scas
fbstp
cld
push
mov
jo
xchg
pusha
or
pop
in
stos
je
imul
dec
sti
xor
cmp
es
ret
mov
iret
xchg
adc
sti
mov
add
pop
push
fidivl
mov
movsl
mov
mov
cmp
out
jge
pop
sbb
add
js
jo
xchg
fwait
mov
pop
insl
sbbb
out
mov
out
xchg
add
or
shrb
stos
sbb
mov
popf
pop
inc
ds
inc
sbbb
xchg
cs
cmp
and
dec
pop
ret
adc
out
mov
out
sub
sbb
loopne
mov
inc
scas
pop
and
add
jbe
xor
int3
mov
fcoms
xchg
fildl
mov
push
xor
mov
cmp
add
xor
iret
mov
mov
lahf
lret
adc
test
or
xchg
cvtps2pi
cwtl
lods
push
in
stc
mul
int3
jns
cmp
and
hlt
orl
jns
lea
mov
in
and
je
or
jp
sbb
scas
aad
sub
push
push
arpl
adc
cli
cmp
aam
ds
jl
testb
std
pop
lock
lret
lds
sub
iret
mov
mov
mov
cmpsb
in
repz
pushf
lret
into
mov
hlt
std
push
mov
xor
mov
call
xchg
mov
and
and
mov
push
xor
inc
xor
xchg
mov
xchg
pop
loopne
cltd
sub
mov
mov
adc
dec
lock
sub
aaa
lcall
leave
sub
sbb
lods
pop
maxps
jle
jge
fs
lret
inc
lods
frstor
mov
push
ljmp
popa
cmp
clc
ja
push
repnz
cld
shll
outsl
or
jne
mov
dec
mov
pop
mov
dec
jno
iret
mov
cwtl
cli
push
xchg
fildl
ret
xchg
sub
rcrb
fabs
das
sbbl
imul
adc
sbb
jmp
cmp
ficoml
or
in
sub
movsl
dec
push
pop
sub
test
jbe
or
push
popa
and
xchg
inc
sbb
mov
je
int3
sti
add
pop
int
pop
fucomip
popa
pop
test
adc
call
push
iret
push
cmp
in
add
push
loope
pop
pop
sbb
sbb
xor
inc
loope
fmull
into
mov
mov
xor
andb
push
mov
sub
inc
cmpsl
shlb
cmp
addr16
aam
iret
mov
xor
mov
movsl
popa
adc
add
fsin
pop
dec
movsl
movl
aaa
cmp
leave
cmpsl
mov
mov
sub
xchg
sbb
xchg
xchg
sbb
mov
js
leave
xchg
out
and
out
lahf
sub
cld
lahf
cmp
test
mov
cltd
out
imul
xchg
mov
push
inc
rcrb
dec
lret
lret
cmp
insb
movsl
fwait
ret
int3
imul
int
jmp
pop
mov
in
fldcw
adc
push
divb
imulb
add
cmp
movsl
cli
mov
pop
out
mov
pop
pop
movsb
pop
xchg
gs
rcl
adc
in
daa
ljmp
cmp
dec
insl
and
push
adc
cmpsb
push
push
ljmp
jbe
cs
les
jmp
jecxz
cmp
sarb
cmp
mov
xchg
push
out
hlt
xchg
push
pop
ds
repnz
xchg
loop
and
cmp
dec
xor
inc
fildll
sub
aas
std
outsb
mov
std
addb
xlat
int3
cmc
and
cmpsb
add
cmpl
xchg
xor
ss
sbb
movsb
stos
filds
jo
xchg
in
ret
sbb
jecxz
mov
cmp
sbb
ljmp
out
sub
adc
or
mov
push
loop
insb
nop
pop
pop
mov
sbb
in
add
std
test
xchg
add
and
in
cmpsb
repnz
shr
sbb
push
cmp
loop
sbb
and
out
push
popa
or
xlat
popa
xor
scas
outsb
addr16
xor
vorps
and
add
mov
add
lcall
int
sub
in
adc
decl
sbb
cmpsb
movsb
lcall
lods
hlt
je
adc
iret
lcall
mov
and
popf
aad
adc
cwtl
cli
decb
xor
popa
shrb
outsb
imul
xor
nop
cmpsb
mov
mov
popa
inc
mov
test
jle
aaa
rep
ret
negl
aas
sbb
add
pop
pop
pop
pusha
ss
adc
mov
and
add
mov
loopne
mov
rol
xor
sub
ret
adc
mov
lret
fnsave
rolb
inc
xor
inc
xor
push
mov
cwtl
shr
fsts
in
mov
cmp
jle
pop
or
push
cld
xchg
cmpsb
mov
push
jbe
cld
imul
adc
incb
jmp
xchg
pop
ret
sbb
xor
imul
xchg
mov
insb
sti
cmp
adc
mov
lock
sbb
xor
mov
scas
clc
mov
jbe
sub
or
add
cmp
movsl
enter
jmp
cmp
es
pusha
or
push
out
push
ljmp
scas
inc
aam
ret
mov
aam
xchg
ja
jo
bound
xchg
or
dec
mov
push
outsl
in
xchg
push
xor
jg
jnp
loopne
scas
cmpsl
mov
jecxz
cmp
sbb
inc
fildl
lods
arpl
lods
jg
out
dec
mov
clc
pop
dec
and
in
vsubps
out
jne
scas
cld
daa
rcrb
mov
loope
loop
xor
jbe
les
gs
adc
lahf
mov
inc
mov
std
xchg
sbb
mov
inc
lods
mov
outsb
mov
in
adc
mov
lods
jle
push
mov
push
mov
mov
test
cmovge
xorl
xchg
add
mov
test
jae
mov
jp
daa
popf
sbb
jne
pop
je
les
andl
pop
shll
insl
cmp
mov
push
mov
out
cmp
sarb
xor
pop
mov
dec
push
insb
repz
testl
cmp
mov
inc
mov
cmp
imul
adc
mov
and
push
and
call
stc
mov
pusha
jp
inc
sbb
pop
sbb
push
sbb
jmp
jp
mov
mov
insl
fs
and
sbb
lods
and
add
frstor
or
and
xchg
adc
icebp
xor
mov
divps
dec
es
addr16
mov
adc
mov
aam
mov
js
push
repz
test
lods
int
fisttps
imul
movsb
sbb
packsswb
cmc
inc
cli
jne
test
or
sahf
sub
cmp
xor
stos
ds
ret
test
addr16
fidivrl
sub
mov
clts
in
pop
out
cmp
call
aaa
aad
pop
in
inc
dec
dec
mov
cmp
cmp
mov
adc
leave
xor
rorl
and
clc
aaa
mov
repnz
sbb
cld
or
in
add
dec
push
cmp
cmpsl
es
push
add
xchg
sub
cs
mov
sbb
rolb
push
pop
outsb
aaa
dec
mov
stos
js
xchg
clc
sbb
stos
mov
out
mov
shr
fstps
mov
jnp
mov
andl
cwtl
jl
jmp
loopne
jmp
cmp
pop
and
fidivrs
gs
aaa
mov
push
mov
ret
jge
int
xor
rclb
adc
cmp
jnp
out
int
xchg
lret
stos
adc
shlb
push
push
fcomps
xchg
pop
js
xchg
aad
iret
add
aad
fisttpll
popf
nop
loop
repnz
xchg
xchg
imul
pushf
fsubl
scas
dec
push
or
ficomps
sbb
nop
imul
xor
jecxz
xchg
test
xor
inc
xchg
push
fs
negl
hlt
push
test
jg
jmp
cmpl
xor
pop
popa
mov
and
push
cmp
loop
mov
pop
aas
xchg
xchg
jne
mov
js
mov
fdivrl
jecxz
jp
sbb
or
lahf
add
cli
fstpt
aam
ss
test
shlb
in
cli
jno
outsb
rcr
inc
lock
mov
adcl
xchg
push
pop
imul
ljmp
aas
jbe
scas
sub
icebp
xor
stos
repnz
cmp
ds
dec
and
add
and
fmuls
leave
pop
pop
sub
mov
inc
jno
add
xchg
mov
inc
cmpsl
enter
adc
pop
inc
arpl
add
movsl
adcb
lcall
ret
cs
hlt
loop
dec
xchg
push
and
popf
jns
test
mov
push
js
bound
inc
inc
jmp
xor
lcall
insb
cld
or
loopne
rcr
les
pop
pop
mov
fnstenv
decl
js
int
cmp
mov
mov
pop
jns
and
in
loop
dec
push
ds
pop
xorb
ljmp
test
movsb
mov
shrb
mov
xchg
push
arpl
mov
stc
ret
iret
test
mov
xor
jmp
mov
shll
push
inc
sti
push
lea
es
mov
inc
js
pop
fs
int3
adc
sub
and
call
sarl
cld
outsl
pop
xchg
ds
xchg
push
bound
push
lods
cld
arpl
cs
jnp
data16
xor
adc
out
scas
pop
xor
fstps
and
pop
out
rcrb
stos
xor
mov
xor
mov
adc
add
icebp
and
xchg
mov
cmp
push
jne
push
addr16
into
xchg
scas
pop
cmp
cmp
jbe
jmp
xchg
call
adc
idivb
jl
pop
mov
jp
js
inc
xchg
and
popa
fidivrl
jge
test
in
add
cmp
xor
or
scas
dec
inc
add
in
loope
dec
mov
push
lret
adc
add
das
pop
sti
jb
cmp
pop
mov
ret
sbb
int3
out
cmp
xor
push
aam
sub
cmpsb
push
popf
cs
retw
xchg
mov
arpl
ret
aaa
inc
fcmovb
scas
leave
add
enter
dec
sar
sarl
sub
sti
sarb
movsb
mov
pop
jecxz
xor
ret
outsb
cmpsb
hlt
std
in
jmp
fwait
outsl
mov
jmp
or
fwait
pop
aaa
or
mov
add
out
mov
adc
inc
out
repnz
movsb
stc
dec
vucomisd
into
pop
fsubs
add
inc
jle
pop
dec
int3
int
xlat
xchg
jp
fldenv
dec
std
je
lret
mov
mov
jl
jo
mov
inc
test
rol
lods
pop
add
test
jp
gs
inc
xchg
in
clc
and
rclb
push
repnz
or
pop
nop
sub
das
out
xchg
lea
lods
ss
ret
push
in
push
ret
lock
add
cmp
lock
jns
cmpsl
xchg
push
into
cmp
lea
lahf
imul
rolb
fidivl
fiaddl
clc
fsts
push
mov
and
out
mov
xlat
mov
mov
push
fstps
mov
adc
push
mov
or
mov
xlat
and
xchg
xchg
xchg
into
mov
pop
rol
pop
push
xchg
add
icebp
add
pop
lret
pusha
dec
adcb
dec
addr16
dec
into
push
shlb
xor
out
pop
imul
and
repz
lret
pop
sbb
add
leave
inc
inc
in
xchg
mov
clc
insl
cs
cmp
jb
adc
jne
inc
ficomps
jp,pt
pusha
call
xor
xchg
adc
arpl
add
loope
inc
repnz
outsb
and
lret
jns
mov
cs
rorb
hlt
rolb
ficoml
bound
inc
inc
lcall
cwtl
out
popf
and
dec
cmp
jmp
inc
rcll
mov
add
push
push
xchg
repnz
push
outsb
test
imul
inc
mov
jecxz
lcall
inc
jmp
dec
testl
inc
mov
push
rcr
mov
in
in
aaa
sub
xchg
xor
je
cmp
aaa
in
mov
leave
push
push
dec
shll
scas
push
and
testb
lcall
mov
mov
outsb
and
sbb
cmp
int3
or
dec
sarl
mul
adc
or
outsb
and
lea
xor
adc
stos
or
lods
addr16
adc
push
push
push
aaa
sub
dec
mov
and
mov
outsl
int3
xorb
push
xchg
nop
js
add
lods
cmp
mov
xor
xor
stos
cmc
mov
orl
loop
push
scas
xchg
das
mov
or
push
fwait
scas
cli
sbb
sbb
lods
jle
out
mov
repz
add
mov
mov
lea
or
and
xchg
mov
mov
cmp
mov
ss
xor
xor
test
add
into
mov
sbb
mov
aad
sti
out
add
jbe
jne
cmpsl
mov
std
or
mov
jo
hlt
sub
inc
add
or
xchg
imul
pop
adc
out
rcll
sahf
adc
adc
je
add
out
pop
dec
and
adc
mov
arpl
pop
and
les
mov
std
cmpsb
xchg
mov
ret
adc
cmp
push
cltd
les
inc
mov
addr16
jbe
add
push
fdiv
test
push
add
dec
jo
insl
adc
loope
cmp
jbe
mov
out
dec
jno
nop
rcrl
imul
stc
or
inc
test
add
sahf
loopne
rol
lret
mov
je
jecxz
or
lret
sub
inc
fdivs
mov
inc
cmpsb
push
nop
test
push
outsl
rolb
lea
test
push
dec
jno
push
testl
and
pop
call
xchg
pop
mov
jne
lea
inc
add
es
and
cmp
push
inc
add
aas
aad
rcrb
ja
rorl
mov
call
or
xor
lods
ss
cli
jp
shll
out
pop
or
lods
push
inc
push
inc
or
cltd
add
mov
push
ret
lahf
inc
cmpsl
mov
xor
popa
mov
pop
sbbl
jbe
lock
negl
cmp
and
mov
insb
push
mov
mov
lahf
push
inc
sbb
dec
jnp
or
sub
xor
xor
stos
lcall
mov
outsl
jae
push
ret
cmpsb
in
inc
mov
aad
cli
shrl
arpl
fdivs
idivb
dec
mov
xor
stos
xor
js
cs
out
fs
mov
xchg
fidivrl
addr16
add
cli
xor
xchg
adc
sub
mov
lds
inc
jmp
ds
xor
aaa
movsl
sbb
jo
cmp
mov
ss
jae
push
or
pop
sahf
sub
mov
xchg
push
std
jge
mov
mov
in
mov
xchg
sub
shl
jl
pop
int3
ja
jno
cmpsl
movsl
push
inc
cmp
ds
popa
inc
mov
mov
outsb
call
sbb
xchg
nop
clc
xor
xor
lea
int
popf
call
cwtl
push
mov
pop
cvtdq2ps
bound
pushf
popf
sbbb
adc
paddq
jle
sarb
jp
movsb
aaa
out
jns
mov
fs
dec
test
sub
push
push
ja
rcll
insl
in
adc
repz
mov
insb
aad
repz
ret
jg
rorb
jnp
fwait
and
out
sar
inc
pop
and
mov
cmpsl
stos
divl
popf
xchg
jae
push
xchg
pop
int
or
mov
jo
add
js
scas
fstl
and
xor
arpl
jns
push
xchg
mov
jecxz
add
subb
enter
inc
aas
add
add
cmp
addr16
mov
xchg
add
or
sbb
pop
repnz
push
fs
lret
ja
dec
test
push
mov
mov
lds
dec
cli
cmp
mov
orb
icebp
jbe
inc
out
sbb
cwtl
enter
cmpsb
xchg
and
aas
insb
outsl
dec
or
add
rclb
repz
les
mov
dec
jmp
xchg
xchg
loopne
into
loope
insl
in
xchg
add
mov
fisubl
icebp
jb
sbb
loopne
test
int3
mov
sahf
jno
icebp
and
add
lods
mov
loopne
popf
xor
std
jae
xor
les
mov
mov
dec
jne
xchg
pop
jmp
sbb
std
fbld
lret
xchg
sbb
push
out
cmp
dec
push
push
mov
push
mov
mov
jmp
jge
popf
cli
xor
out
sahf
ss
sbb
xor
or
cmpsb
dec
jns
pop
push
push
xchg
dec
aaa
push
outsl
in
bound
imul
ja
out
into
cmp
xorb
jg
sbb
lret
push
les
or
xlat
out
sbb
pop
in
sbb
sti
push
mov
pop
fisttpll
pop
sbb
int
fistpll
push
xor
test
aam
ja
lods
xchg
stos
pop
add
stc
sbb
sbb
fs
je
push
push
enter
dec
xchg
and
call
xor
xchg
insl
loopne
sbb
bound
fdivl
pop
repnz
mov
mov
and
cwtl
mov
xchg
push
inc
jno
out
jle
add
and
andb
cmc
mov
lret
jge
jmp
inc
shl
mov
pop
addl
stos
sbb
shrb
shlb
bound
lahf
fisttpll
mov
sbb
shll
pop
push
outsl
inc
mov
pop
ja
shl
cltd
mov
pop
in
sahf
push
push
cmp
pop
pop
xchg
and
enter
adc
enter
or
add
mov
push
hlt
xlat
dec
test
dec
lods
inc
mov
lods
mov
enter
push
pop
or
xor
jg
mov
cmp
roll
jo
ret
mov
push
adc
mov
aam
bswap
mov
imul
jl
fcoml
in
xor
jge
lock
aam
push
js
lahf
mov
jno
shll
xlat
orl
lret
sbb
je
and
mov
fucomip
movl
inc
lods
mov
in
jmp
push
fs
mov
mov
in
test
inc
nop
push
adc
adc
bound
mov
loop
bound
in
adc
ret
scas
xchg
push
dec
in
fs
and
out
push
and
sbb
popl
sbb
dec
mov
push
sub
push
enter
mov
imul
mov
sbb
xor
imul
cmp
scas
jmp
inc
xchg
xor
xchg
mov
mov
addr16
add
dec
xor
sbb
lods
cmp
in
xor
mov
mov
mov
lods
popf
loopne
popl
lea
mov
ds
gs
stc
xchg
xchg
jecxz
loopne
cmp
push
push
mov
dec
stc
mull
pushf
test
into
inc
dec
pop
xor
js
mov
aaa
cmp
shll
adc
sub
daa
movsl
inc
hlt
mov
pusha
xlat
inc
add
mov
add
and
mov
imull
int3
inc
ret
adc
mov
sbb
mov
jb
shrb
popa
je
xchg
je
loop
cmc
insb
mov
or
mov
iret
mov
divps
lds
loop
mov
stos
sbb
inc
push
jbe
mov
andl
outsl
and
repz
loopne
popf
xchg
and
inc
jbe
or
arpl
clc
gs
pop
sahf
mov
push
std
sbb
mov
ret
sahf
in
push
nop
xor
jb
std
inc
xchg
mov
lods
xor
sub
mov
push
roll
int
int3
in
xchg
lcall
ret
test
daa
jle
jno
pusha
sbb
popf
pop
adc
es
push
adc
mov
insb
jbe
stos
fnsave
fimuls
int3
mov
les
rorl
mov
or
ja
ficoms
sbb
pop
push
out
insl
cmp
fcmovu
jmp
adc
push
or
jmp
push
mov
test
pusha
out
in
cmpsb
outsb
xor
adc
out
into
sub
push
scas
pop
jbe
sub
fimull
and
out
lods
mov
insb
pop
xchg
adc
push
pop
jnp
or
sub
push
xor
clc
insl
pop
mov
inc
iret
sbb
repz
pop
mov
test
loop
cmp
mov
mov
loop
xchg
jge
fmull
mov
cwtl
cwtl
mov
pop
pop
push
jns
inc
rcr
in
mov
mov
xchg
nop
push
gs
xchg
rorl
push
idivb
pop
data16
inc
pop
xchg
movsb
sbb
test
icebp
xchg
flds
mov
rep
jbe
fisubl
push
js
cmp
pop
ljmp
inc
pop
cmp
inc
movsl
sub
pop
lea
ss
adc
inc
and
adc
pushf
xchg
rolb
xor
dec
add
jbe,pn
pop
push
push
and
dec
sti
fldln2
jmp
mov
testl
add
sub
xor
jo
dec
mov
pop
adc
or
jbe
movsl
cmpsb
jecxz
shll
das
test
push
lods
cmc
lcall
inc
jns
ja
adc
mov
jo
aas
sahf
mov
jns
in
push
push
int
push
mov
xchg
jno
in
push
dec
push
add
test
xlat
dec
sub
popa
orl
fidivs
fsubl
test
sti
cmpsl
dec
jecxz
mov
and
mov
mov
dec
inc
test
test
bound
data16
pop
inc
inc
cmp
out
clc
mov
shl
jmp
popf
lods
daa
sbb
subl
add
dec
andl
mov
xor
gs
xor
test
xor
movsl
dec
push
push
stc
dec
mov
jg
cmp
mov
leave
sbb
and
mov
mov
fdivrl
pop
adc
decl
test
mov
and
dec
lret
nop
mov
push
add
xor
inc
push
outsl
out
sub
into
inc
sub
lea
push
mov
xchg
jo
das
popf
ss
and
stos
addr16
and
pop
add
adc
mov
or
push
add
adc
fildl
xchg
cmp
pop
fidivrl
fstps
gs
mov
sub
bound
mov
push
fcoms
adc
sbb
dec
aaa
push
dec
mov
loopne
loopne
adc
xchg
pop
sahf
insb
push
jp
mov
push
dec
adc
cs
cld
jl,pn
loope
pop
movsl
jmp
push
jl
scas
sbb
adc
loope
push
gs
jle
mov
gs
ds
push
aam
xchg
out
faddl
dec
jp
iret
ja
push
jne
cmp
mov
cmp
pushl
sub
jle
or
inc
or
loope
push
push
enter
pop
sbb
sahf
mov
mov
jecxz
jbe
and
cmp
xchg
add
jge
push
jb
addb
xchg
js
sbb
mov
out
xchg
out
aaa
add
cld
add
xchg
adc
pop
fldt
mov
gs
inc
push
mov
loopne
in
sub
test
test
push
out
test
xchg
jo
push
or
adc
push
adcb
mov
push
xchg
clc
mov
in
push
mov
lods
and
jle
inc
push
in
lods
push
jnp
sbb
fs
movsl
jl
daa
pop
into
inc
lods
cwtl
orb
lock
or
cli
xor
repnz
sbb
and
dec
push
sub
inc
mov
and
mov
jecxz
jbe
pushf
ljmp
mov
sbb
out
jl
daa
xor
xor
xchg
xchg
cmpsl
rcrl
aad
mov
out
insl
push
loop
lea
mov
int3
fisttps
fwait
or
jmp
fstpl
nop
inc
addr16
fwait
add
add
test
lds
xchg
movsb
data16
inc
or
ss
lods
and
sbb
and
inc
cmp
adc
gs
inc
jo
mov
add
adc
arpl
push
xchg
pop
fiadds
mov
rol
aam
fiadds
add
sbb
popa
out
adc
xor
sbb
cmp
mov
gs
arpl
lock
jb
pushf
sbb
add
lock
faddl
ret
cmpsl
test
lea
dec
jne
test
insl
insl
cmpsb
out
xchg
mov
mov
cld
imul
stos
add
loope
xchg
aam
shrl
pop
fwait
ret
cli
mov
or
xchg
ja
mov
fsubl
fiaddl
ja
pusha
lea
lds
js
push
xchg
dec
xchg
je
fistpll
popa
lret
mov
fs
mov
es
repnz
rolb
jae
mov
fwait
shr
call
push
xchg
mov
mov
or
gs
xor
stos
das
xlat
icebp
and
lret
mov
sub
xchg
mov
push
bound
add
std
push
fwait
push
push
jns
cmovns
imul
lock
adc
shrl
mov
adc
loopne
mov
pushf
push
rolb
lret
and
in
or
pusha
int
jl
cli
xor
int3
sahf
mov
fs
mov
jecxz
insb
mov
repz
pop
mov
movaps
mov
mov
faddp
xor
mov
or
cmp
xchg
rclb
hlt
or
ja
jns
and
jle
sub
lcall
adc
call
les
mov
sbb
cli
daa
mov
and
lret
sub
sbb
xor
or
mov
insb
mov
loopne
nop
xchg
add
mov
outsl
cli
jns
sbb
mov
push
in
cwtl
out
push
pop
cld
and
xchg
push
push
dec
lods
jbe
int3
lahf
in
imul
pop
jecxz
ffreep
pushf
push
cs
inc
adc
ljmp
popf
clc
lahf
or
xchg
lret
adc
cmp
mov
data16
aaa
and
ret
loopne
mov
clc
add
out
sbb
add
loop
jne
or
daa
and
jmp
mov
std
sbb
jg
jbe
mov
in
or
repnz
dec
jge
jmp
mov
jge
mov
xchg
adc
cli
mov
ds
push
xchg
arpl
clc
xor
jmp
stos
out
mov
js
int3
adc
or
cmp
mov
cmp
push
or
scas
pop
in
xor
imul
fadds
ja
out
xchg
jmp
sbb
ljmp
rorb
in
arpl
dec
aaa
add
iret
call
cmp
mov
xlat
stos
pop
loop
mov
pop
inc
into
xchg
popa
cmpsl
pop
movsb
rcr
pop
add
idivl
scas
lock
add
push
push
hlt
jb
push
cwtl
nop
rcrb
aaa
lods
imul
mov
dec
sbb
scas
mov
outsb
bound
stc
rcll
push
and
pop
pop
mov
sbb
or
mov
cmpsb
or
testb
jp
push
inc
dec
and
xchg
and
push
cwtl
imul
mov
mov
cmp
or
wbinvd
or
loop,pt
add
push
add
rol
xor
repz
pop
or
stos
je
aam
add
jmp
sti
imul
dec
les
jns
push
loopne
pop
push
cmc
jae
sbb
cmc
ljmp
dec
jns
xlat
pop
jo
je
sbb
mov
pmulhw
and
push
dec
push
jg
fsubrl
sub
in
movsl
rcrb
fsub
and
push
outsb
arpl
cltd
push
into
sbb
add
dec
nop
xor
fwait
sbb
cs
lret
mov
xor
or
mov
add
mov
sbb
adc
xlat
or
push
jmp
inc
cmc
nop
fdivs
in
adc
or
pop
je
push
mov
repnz
lret
popa
fisubs
push
repnz
fcoml
aas
and
mov
lods
dec
test
cmp
loopne,pt
loopne
imul
in
or
push
xchg
jle
and
sub
dec
pop
push
lret
iret
aaa
sub
repnz
jae
js
xchg
or
lods
repz
xchg
inc
inc
inc
xor
mov
push
push
sbb
stc
push
push
xlat
stc
mov
sti
lds
sbb
icebp
scas
inc
fistpl
dec
xchg
adc
das
leave
frstor
push
and
push
inc
and
mov
pop
push
sbb
xor
inc
sub
lea
add
push
sbb
xchg
shlb
pop
dec
mov
or
inc
mov
lret
mov
aad
popl
out
cmpsl
insl
sbb
sub
outsb
or
andl
les
push
fyl2xp1
push
jbe
mov
sub
mov
cli
cmp
pop
rolb
lock
pop
pop
iret
imul
lahf
rcrl
xor
icebp
add
testb
or
in
xchg
div
mov
or
or
dec
ds
mov
cmpsl
in
jecxz
xor
sarb
mov
push
xor
mov
aad
mov
push
jmp
pop
es
push
sub
sub
shll
cltd
push
xchg
lret
mov
ret
mov
movsb
pop
out
nop
jne
out
xchg
push
mov
insb
fisttps
add
mov
popa
rolb
dec
and
out
add
les
mov
dec
jecxz
loopne
lds
jge
dec
dec
andl
jne
out
pop
or
sahf
pushf
inc
into
outsb
fwait
mov
xchg
scas
out
inc
sbb
dec
ret
int3
enter
jo
mov
xchg
pop
imul
xor
push
adc
test
sbb
mov
fbstp
test
add
and
jg
sub
movsl
ja
out
adc
repz
mov
dec
jmp
pop
push
loop
sub
or
incb
mov
sti
out
xor
test
xor
adc
pop
or
mov
jbe
ljmp
das
xchg
outsl
stos
enter
cmpb
out
push
stos
xchg
sub
and
insl
jno
and
sub
outsb
or
les
pop
push
and
test
std
xchg
repz
adc
jbe
imul
clc
adcb
mov
popa
sub
sbbb
iret
in
cmp
adc
out
xor
rorl
inc
fisubs
sahf
pop
inc
lods
scas
mov
cmpsb
insl
subl
xchg
imul
jnp
out
dec
rcrb
mov
into
popf
lods
or
ret
insl
xchg
hlt
sub
or
pop
rorl
cmp
test
mov
adc
call
xor
add
dec
add
mov
mov
adc
fistl
out
and
xor
inc
and
cmpsl
and
jo
data16
xchg
out
sbb
push
bnd
daa
xchg
push
cld
test
pusha
lods
ret
sub
sbb
shlb
adc
xor
mov
dec
aas
xor
pop
outsb
push
jo
subl
insl
sub
adc
sub
jno
xlat
or
cmpsl
add
cmp
mov
pop
fs
push
dec
in
or
aam
int3
jmp
xchg
insb
ss
int
mov
pop
loop
outsl
push
lock
push
push
mov
push
ja
jo
addr16
inc
test
dec
insl
sbb
jl
push
sahf
mov
lea
addb
loope
xchg
mov
std
icebp
fnstcw
pop
mov
mov
mov
int3
or
xchg
xchg
jnp
sbb
inc
fisttpll
fcoms
cmp
cmpsl
push
fdivrs
push
add
clc
clc
data16
xor
out
jb
jg
incb
fmull
mov
xchg
push
sbb
andnps
or
jg
sub
adc
add
scas
mov
fdivp
gs
dec
imul
mov
popf
ljmp
icebp
pop
imul
arpl
xor
xlat
les
and
adc
pop
push
jg
int3
fcomi
pop
pop
icebp
loopne
or
add
pop
xchg
clc
imul
clc
xchg
mov
leave
mov
xor
push
int3
mov
sub
lds
out
cmp
mov
pop
or
repz
add
repz
cmp
out
cmp
mov
jecxz
dec
loopne
shrl
and
sub
roll
mov
lock
inc
jo
insl
sub
dec
cmpsb
enter
dec
pop
and
pusha
push
add
lds
mov
rorl
aaa
sub
popf
sahf
inc
xchg
adc
adc
inc
jg
sub
inc
mov
mov
shll
or
mov
fwait
and
or
fdivrp
and
inc
movsl
inc
push
in
fsubrl
dec
xor
cmp
sbb
push
lods
adc
scas
lods
xchg
dec
sub
cmpsb
jle
push
mov
mov
dec
cmc
fistpll
je
xor
outsb
xchg
das
lret
xor
mov
xchg
cmc
cmp
cmp
mov
xchg
jns
rol
enter
mov
popf
mov
arpl
add
mov
add
xchg
mov
pop
mov
enter
mov
push
cmpsl
loop
aam
loopne
popf
ror
test
clc
xor
pusha
pop
inc
xor
push
sub
jle
adc
lea
aas
pop
pop
shll
pop
push
clc
cmp
and
dec
in
bound
cwtl
bound
add
push
mov
sbb
jecxz
pop
mov
add
out
sbb
inc
aad
pop
jp
mov
sub
sub
dec
inc
out
lcall
sub
mov
or
fwait
jnp
xchg
das
mov
call
mov
cmpsb
dec
addr16
out
int3
adc
xlat
cwtl
xchg
jmp
lods
fidivs
stc
pop
loope
cmpsl
rorl
test
and
jb
stc
mov
sub
adc
in
xchg
mov
movsl
loopne
xlat
pop
pop
mov
push
sub
push
mov
in
xor
dec
fdivrs
icebp
in
ljmp
rcrb
sbb
sub
mov
mov
push
push
jp
in
mov
pop
sbb
or
ljmp
neg
enter
cmp
cld
int
mov
add
cs
sbb
add
rcrl
int3
movsb
cmp
out
lret
imul
jo
xor
enter
pop
push
mov
out
lea
rcll
jo
cld
enter
pop
ss
test
cmpsb
add
mov
divb
sub
push
fsubs
repz
ret
fildll
mov
ljmp
push
clc
xlat
add
mov
inc
sub
fstl
ja
jae
xlat
mov
jbe
nop
and
fwait
inc
fs
mov
test
push
pushf
adc
mov
leave
add
les
rol
in
xchg
mov
fldenv
imul
inc
adc
clc
mov
push
rorb
xchg
fsubs
mov
dec
inc
daa
and
dec
and
pop
insb
scas
sahf
pushf
shrb
rorb
cmp
inc
stos
cltd
add
jne
dec
mov
fs
push
aam
xchg
pop
mov
push
inc
fnstenv
ljmp
mov
inc
adc
fucomi
daa
jns
pushf
loope
es
loop
fs
pop
add
inc
jno
cmp
push
outsb
xor
cmpsb
and
int3
cs
jnp
addl
jl
aas
adc
fiaddl
jae
dec
jnp
jmp
xor
imul
rcr
into
test
cmpsb
std
or
jo
jb
ret
mov
mov
imul
cmp
mov
cmp
loop
mov
idiv
adc
adc
outsl
pusha
out
fwait
cmp
sbb
pusha
pop
jbe
outsb
lods
fcoml
sub
icebp
aad
out
or
push
aam
stc
fs
arpl
mov
mov
sub
loopne
mov
add
dec
sub
cmp
dec
aad
jns
cmp
cmp
push
jb
int
lods
std
push
pop
ds
fiadds
sarl
inc
push
jmp
outsl
inc
fmul
and
pop
sub
fs
inc
out
cmpsb
push
fcmove
data16
cmp
xchg
jge
lods
repnz
popf
incb
xchg
xor
sbb
pop
loop
jp
inc
mov
test
fstpl
add
cmpsl
sahf
or
adc
fistl
bound
jmp
add
movsl
inc
dec
and
enter
and
cmp
into
mov
test
ret
jge
ljmp
or
push
mov
mov
ud1
xlat
daa
icebp
push
test
and
and
mov
inc
jp
xchg
movb
inc
test
mov
adc
incb
fmul
into
les
lods
scas
add
fcomp
test
add
mov
jle
xlat
mov
push
out
pop
jmp
pop
dec
out
adcl
into
xchg
stos
jae
in
lea
jge
into
jmp
bnd
fdivrs
in
mov
xchg
fldenv
xchg
pop
pop
scas
movsl
push
movsb
test
in
and
call
test
xorl
inc
lahf
jmp
jns
add
shl
and
lods
xlat
mov
xor
jge
lods
cld
push
dec
pop
mov
dec
into
sbb
popa
xchg
pop
fimull
pop
fisubrl
xchg
add
and
mov
addr16
repnz
xor
popf
cmpb
cmpsl
push
lcall
lea
scas
std
aam
pusha
xchg
pop
jmp
imull
fstl
dec
pop
add
dec
nop
mov
and
lods
sub
xor
jae
rcrb
cmp
js
decb
push
and
test
pop
movsl
pop
add
lea
adc
pop
pop
push
out
insl
adc
lds
jo
movsl
sbb
mov
es
xchg
imul
in
pop
nop
pop
add
scas
pause
hlt
jns
out
dec
sti
ja
aas
pop
lods
es
jmp
adc
sub
lret
push
or
inc
insb
push
and
ret
iret
daa
pause
shl
push
xchg
adc
xor
sbb
shrb
xor
jo
shr
add
mov
sub
mov
dec
lods
pop
mov
into
test
loop
insb
jne
addb
xor
lock
adc
and
addb
cmpsl
push
hlt
popf
shll
mov
push
add
or
fs
mov
out
repz
dec
jl
jg
sub
and
das
cmp
es
imul
pop
jno
adc
mov
mov
call
test
pusha
and
mov
cld
xorl
and
iret
push
add
test
jbe
aas
push
fs
fnstsw
jl
push
loope
jno
jne
or
xchg
mov
int
jbe
mov
out
push
out
cli
clc
jmp
out
addr16
xchg
push
mov
fisttpl
mov
add
js
add
lds
mov
sbb
push
sbb
pop
test
cmp
add
icebp
pop
cmp
ud2
mov
cmp
adc
mov
cld
nop
jecxz
andb
mov
movsl
xor
lahf
mov
inc
scas
sub
dec
jmp
sub
scas
bound
lods
aas
add
lcall
jmp
fcoml
adc
push
stos
jge
mov
repz
inc
dec
call
lds
popf
repz
icebp
arpl
int
jecxz
loope
in
rcll
ffree
push
dec
or
sbb
cli
das
popf
cwtl
test
push
sarb
rep
xorl
and
sub
sbb
dec
inc
jns
adc
sub
sub
aaa
lcall
les
xchg
data16
xchg
mov
mov
repz
mov
fwait
sbb
movsl
arpl
out
adc
inc
in
lds
mov
repz
xor
fs
notb
mov
cmp
sub
ret
dec
jmp
or
sub
lods
decl
scas
out
push
dec
imul
bound
mov
xchg
xchg
lret
xor
cmp
add
pop
or
xchg
test
das
insb
pop
lock
xchg
push
jle
cmp
xchg
ljmp
shl
or
stc
gs
pop
pop
lock
inc
adc
pop
mov
cs
xchg
lret
and
nop
mov
sub
in
and
jns
mov
scas
sub
pusha
lods
adc
xor
aas
shl
and
bound
or
lret
in
sub
push
sub
repz
cmpsl
adc
mov
xchg
fstl
and
rorb
dec
sti
mov
aam
jle
mov
dec
cmp
xchg
or
adc
outsl
outsl
and
in
sub
jle
sbb
fs
dec
mov
mov
inc
pop
jae
gs
xchg
stos
imul
sbb
test
xor
pop
jnp
in
int3
and
lcall
jle
jge
push
jnp
sub
ret
pextrw
jae
loopne
enter
fisubrs
push
mov
decl
out
es
jmp
sahf
xchg
mov
jno
pop
rcl
dec
inc
cltd
enter
xor
into
cwtl
leave
jnp
adc
lahf
leave
fs
jle
add
dec
xor
mov
out
movsb
outsb
out
add
repnz
lret
dec
dec
enter
cmpsl
filds
lahf
test
dec
aad
test
lods
sbb
shlb
push
xor
add
dec
pop
mov
inc
xor
fadds
dec
xchg
or
jo
insb
pop
xchg
in
sub
add
jle
shr
fimull
lret
shll
pusha
shr
sub
sub
mov
cmp
test
lret
push
adc
stc
mov
dec
das
mov
ljmp
mov
iret
xchg
xchg
aad
les
cmc
cmp
adc
mov
cmp
push
sbb
stos
mov
mov
mov
orl
mov
pop
repnz
sahf
rcll
and
rorl
clc
lock
mov
push
out
push
out
jg
jmp
mov
mov
mov
push
insb
inc
lahf
repnz
adc
push
daa
or
outsb
inc
cmp
fisttpl
arpl
shlb
push
or
jb
xor
fists
and
popa
pop
fwait
push
insb
xor
cmp
jp
push
popa
xchg
xorb
mov
sti
dec
cmp
xor
fdivrp
int
icebp
cmpsb
adc
jge
push
pop
std
adc
mov
into
fwait
push
std
mov
pop
xor
xchg
xchg
inc
jb
sub
stc
push
fldenv
ja
das
pushl
icebp
les
iret
fildll
jae
imul
jl
mov
movsl
cmpb
in
and
sub
and
aam
push
outsb
xor
cmp
and
adc
xchg
push
jmp
cmp
jbe
aad
push
int
inc
xor
xchg
mov
orb
jns
inc
xchg
mov
push
in
les
ret
dec
sbbl
into
jbe
not
add
mov
pop
mov
cmpsb
and
cmpb
mov
pop
adc
repz
mov
mov
mov
pusha
xor
fmul
sbb
lcall
adc
xchg
lock
ja
leave
ds
imul
lods
popa
ret
in
xchg
mov
adc
mov
lods
popf
sub
jecxz
lods
fadd
sbb
negb
sarb
mov
sub
xor
pop
xchg
aam
idivb
out
fadds
incl
mov
aas
andl
pop
imul
cmpsb
sti
das
je
xbegin
out
pop
imul
mov
push
cli
xchg
lods
push
push
jae
test
loop
inc
arpl
mov
mov
fdivp
pushf
mov
in
loope
xor
adc
lods
sbb
dec
xor
shr
xchg
or
cwtd
lods
cmpsl
fmull
fsub
cmpsb
adc
and
out
je
xchg
outsl
mov
push
nop
add
movsb
xchg
test
mov
fdivrl
mov
cli
outsl
test
outsl
cld
cmp
dec
daa
push
nop
sub
pushf
cmc
sarb
xlat
mov
dec
add
shld
sub
je
pusha
cmp
mov
call
mov
adc
imul
pop
icebp
jp
push
loopw
or
and
push
in
and
xchg
mov
hlt
fstl
or
cmp
lcall
jb
jnp
pop
imul
leave
inc
add
xchg
or
shrb
adc
std
mov
mov
lods
sub
icebp
cs
sahf
xchg
mov
add
push
mov
icebp
xchg
dec
mov
movsl
push
pop
outsb
add
dec
gs
inc
pop
movsb
fimuls
in
xchg
mov
sbb
in
shlb
xchg
fiaddl
jle
pop
jge
or
pop
xchg
push
dec
adc
xorb
ds
dec
lods
mov
leave
pop
inc
or
enter
push
js
ficompl
jne
shlb
add
call
test
test
mov
dec
dec
inc
fs
insb
cwtl
sub
cmp
seto
and
dec
movsl
fldt
xchg
add
fs
add
imul
jl
subl
push
xchg
arpl
test
scas
dec
pop
in
pop
and
and
sarb
pop
inc
ret
sbbl
push
xor
daa
xlat
std
sub
lock
outsl
std
lods
sbb
jae
or
shl
pop
les
gs
and
jb
and
or
pop
es
push
out
rolb
mov
push
mov
psrlq
test
pop
xor
sub
and
push
stos
jbe
repz
leave
icebp
das
out
jmp
mov
and
jle
adc
adc
int3
inc
fidivrs
pop
fwait
jg
adc
cmp
mov
fldl
jecxz
inc
out
mov
aaa
push
sbb
pop
std
leave
cmp
xchg
test
add
sbb
adcl
mov
jle
and
pop
ret
iret
fbld
jge
mov
adc
and
popf
cltd
aas
pop
xor
push
fdivrs
jg
sbb
and
popa
pop
lcall
scas
ret
rcrl
cmp
insb
pop
cmp
push
sub
mov
cmp
sarl
pop
stos
loopne
dec
out
xor
mov
and
pusha
out
daa
push
cmp
cmp
test
cmp
mov
es
outsb
mov
xor
je
cmc
cs
lahf
mov
mov
pop
test
test
mov
insl
or
ret
fstpl
fwait
lods
movsb
push
xchg
inc
push
push
jp
xor
outsl
xchg
adc
jnp
add
icebp
fmuls
sbb
orl
clc
jp
and
lods
lret
pop
jp
mov
sub
enter
imul
inc
sbb
xchg
xor
mov
adc
jno
xchg
test
data16
pop
cmpsl
push
dec
sbb
fmuls
sub
nop
add
sub
and
jmp
pop
jecxz
jg
aam
jecxz
ja
loope
cmpsb
ja
test
xlat
mov
lods
xor
cmp
dec
mov
cs
jae
stos
inc
dec
push
stos
xlat
mov
xor
aas
pop
xchg
cmpsl
daa
add
pop
outsl
fcoml
sub
vpaddb
add
adc
rorb
lea
mov
pop
dec
lods
movsb
sub
orb
stos
push
cmp
jne
movsb
mov
jno
scas
xchg
pop
or
pop
sub
push
xchg
mov
loopne
cld
pop
push
pop
int3
repnz
mov
cmp
jne
cmp
add
popa
mov
push
dec
lds
mov
lea
push
mov
sub
push
outsb
inc
subb
jmp
aam
lret
loope
pop
out
mov
int3
xor
les
lods
pop
mov
mov
dec
popf
push
adc
stos
inc
and
push
imul
scas
sar
sbb
lods
xchg
ljmp
mov
imul
mov
push
fs
add
pmuludq
push
push
push
popf
push
mov
out
cmp
in
adc
and
dec
jae
and
mov
iret
mov
fwait
lods
adc
push
xchg
scas
cwtl
sbb
test
mov
pop
arpl
btr
inc
stc
mov
inc
aad
enter
fisttps
fadds
xchg
mov
inc
out
or
mov
xchg
das
ja
test
mov
sub
insb
pop
sbb
in
or
fcmovnb
lret
mov
addb
pop
mov
cs
icebp
dec
dec
jge
pop
in
add
cmp
fisttpl
and
or
add
xorb
mov
lock
dec
push
popf
iret
and
scas
cmp
daa
into
daa
sbb
sbb
xor
ret
fidivl
or
cmp
je
jg
mov
jo
cmp
arpl
push
xchg
leave
test
xchg
xchg
jae
in
pop
enter
xor
into
jo
xor
and
sbb
mov
ret
xchg
in
jne
pop
mov
shlb
sbb
sbb
sbbb
aam
inc
movsl
nop
push
or
outsl
xchg
lods
xor
insl
fists
fmul
or
cmp
xor
inc
movsl
mov
add
add
jne
fucom
cmc
iret
leave
mov
fmull
dec
pop
jge
xchg
sub
cmp
sbb
test
push
and
push
adc
in
or
xor
and
insl
stos
push
mov
xchg
cmp
lock
insb
dec
std
adc
push
and
clc
popa
jbe
faddl
xchg
stos
push
jecxz
jno
xor
inc
push
and
pop
mov
mov
int3
xchg
ljmp
pop
or
lock
mov
or
cmp
and
shrl
cld
pusha
subl
fisttpll
int3
cltd
or
imul
jae
dec
pusha
fdivrl
imul
sbb
xor
push
add
push
repnz
js
sub
into
xchg
fucom
jns
imul
lods
leave
mov
data16
shlb
xor
js
movsb
and
imul
jb
dec
add
in
outsl
adc
mov
shll
stc
rclb
out
jnp
pop
or
cmpsb
dec
aaa
fcompl
xor
scas
xchg
inc
inc
pop
aam
data16
cwtl
xchg
outsb
sub
pop
aam
cmp
aas
fists
decl
push
mov
jae
pop
mov
or
fcomps
out
push
fsts
stc
inc
fsubr
fldcw
inc
adc
add
or
fdivr
mov
fwait
or
inc
cmp
in
push
and
xorl
fldl
add
add
lock
outsb
cmc
lret
subb
aam
jle
shrb
jne
pop
xchg
cmp
mov
pop
jns
fbld
pushf
test
lret
lock
ja
aas
jns
cmpl
enter
icebp
and
jp
push
xor
push
jbe
jle
nop
dec
sti
sub
or
das
rorb
dec
iret
xor
pop
xor
push
lret
test
push
and
dec
xchg
add
and
aas
mov
ror
add
and
ds
out
sar
cmp
insl
test
push
aad
dec
mov
sub
fnstcw
popa
mov
pop
call
mov
aad
addl
mov
cld
ret
pop
stos
lret
pop
cs
out
add
dec
jmp
or
sub
cld
add
mov
lock
add
sbb
js
mov
adc
into
and
shll
add
push
mov
adc
jle
sbb
push
add
xchg
out
imul
adc
mov
cs
fisubrs
stos
sbb
hlt
nop
call
fimuls
jge
xchg
mov
cmp
cmp
jge
adc
xchg
nop
mov
aad
daa
outsl
test
add
adc
pusha
movb
xchg
jo
pop
sti
jbe
mov
imul
lds
hlt
inc
test
mov
dec
subl
sub
mov
cmp
loopne
adc
push
in
inc
mov
cmp
mov
inc
cmp
stc
push
in
mov
xchg
sahf
cli
dec
imul
dec
add
pop
jle
mov
push
std
loop
scas
adc
inc
jge
or
sub
scas
pop
push
popa
push
pop
mov
push
dec
das
mov
mov
jmp
arpl
jmp
mov
jmp
and
push
bound
addr16
add
cmpsl
mov
xchg
jae
clc
pushf
cmp
sbb
adc
out
subb
mov
dec
jmp
mov
dec
clc
sbb
xchg
gs
or
push
aaa
jbe
cli
push
lods
in
xor
leave
cmpsl
push
cmp
jecxz
insl
int
adc
subb
sbb
test
movsb
dec
xchg
test
sub
xchg
lret
lahf
testb
xor
aad
mov
out
jne
subl
ficoms
mov
inc
sub
adc
push
xchg
jp
sub
mov
jo
jl
xchg
mov
push
ret
mov
aad
mov
js
jmp
enter
mov
mov
pop
sub
imul
xor
inc
int3
jmp
dec
push
or
mov
je
add
jmp
or
pop
and
sub
cmpsl
jmp
or
mov
or
std
add
movb
mov
les
mov
push
je
mov
repnz
es
jnp
insl
sbbb
push
cmp
jl
add
cmc
xchg
insl
mov
imul
enter
clc
xchg
jb
clc
stos
stc
xchg
js
xchg
inc
add
sub
inc
in
push
push
mov
loop
movsb
clc
insb
jecxz
xchg
adcl
jnp
shl
out
popf
xchg
push
popf
orl
push
fsts
dec
add
mov
mov
jle
nop
sub
dec
daa
adc
push
or
in
test
pop
mov
nop
mov
and
ss
sbb
addr16
dec
mov
mov
push
dec
jp
inc
xor
scas
fwait
cmpsb
adc
push
jge
test
and
js
or
and
arpl
pop
enter
xchg
cwtl
gs
out
push
orl
pop
xchg
sahf
dec
notb
mov
or
fsubp
in
adc
mov
push
sti
or
pop
dec
rcl
xchg
scas
jbe
data16
mov
jg
cmp
or
jae
cwtl
add
js
aaa
xchg
subl
js
faddl
pop
inc
in
cs
pop
dec
lea
mov
out
mov
jo
cmp
out
sti
dec
sub
dec
push
push
hlt
dec
dec
repz
inc
cli
test
and
xlat
or
fisubs
push
sbb
xchg
stos
xchg
jmp
inc
cmp
or
in
ljmp
pop
and
les
in
mov
or
ret
add
jle
aad
loopne
mov
mov
jne
dec
in
leave
mov
jb
pop
xor
cwtl
jne
mov
pop
mov
ds
and
jg
dec
xchg
rolb
pop
cmp
outsl
inc
fdivrs
sub
mov
ljmp
data16
jnp
lret
test
movsb
cwtl
jmp
mov
negb
xlat
in
pop
pop
mul
sbb
cmpsb
loopne
dec
mov
stos
sub
add
loopne
adc
xchg
push
in
cmp
aad
insl
in
repz
lods
stos
xchg
leave
mov
push
std
xorl
jnp
push
and
mov
jge
mov
int
dec
xor
lcall
sti
addr16
jno
or
das
mov
xchg
cmp
sbb
icebp
xchg
sub
adc
add
xchg
out
jne
jecxz
call
shr
adc
fstpt
sarb
cmp
mov
xchg
pop
jae
inc
cld
mov
rcrl
testl
sahf
pop
xchg
mov
mov
sub
lods
cmp
sahf
push
inc
or
mov
les
mov
aam
out
in
fwait
cmpsl
sub
loope
push
push
jg
dec
cmpsl
leave
je
inc
mov
jnp
xor
repz
xchg
mov
cmc
pusha
mov
pop
mov
jge
cltd
ret
mov
sub
int3
hlt
into
imul
in
push
xor
hlt
sbb
adcl
adc
or
sub
adc
sub
jge
pusha
cld
xchg
popf
aas
push
xlat
sbb
xchg
mov
imul
enter
outsb
push
ret
pop
and
add
push
jo
lods
pushl
ds
loop
hlt
xchg
cmp
add
daa
or
mov
push
pop
hlt
cld
sbb
lock
inc
pop
or
int3
inc
negb
sub
icebp
pop
subl
sar
repz
imul
cvtdq2ps
sbb
pop
in
lahf
aam
aam
shrl
cmp
fmulp
adc
inc
icebp
add
and
inc
or
cmp
add
pop
or
pop
mov
sbb
fisubs
xchg
mov
repnz
test
push
jns
mov
dec
mov
xchg
fcomi
fsubl
xchg
aas
ss
loop
sti
int
sub
adc
mov
std
fsubl
sbb
mov
mov
shrb
jge
cmc
pop
jbe
fsubrl
call
xor
loope
mov
clc
jmp
lcall
decb
mov
adc
add
mov
mov
and
add
lods
mov
mov
sub
icebp
jno
sub
test
lods
out
sub
or
stc
mov
mov
xor
mov
rcr
out
and
push
inc
scas
or
stos
mov
out
out
mov
arpl
popa
pusha
ds
or
es
jo
or
sbb
fisubrs
fwait
jg
ss
repnz
lcall
jno
xchg
lods
and
sti
jne
stc
into
sarb
mov
mov
or
fsubrl
in
or
cmpsb
ljmp
cmp
in
dec
jbe
cli
add
push
adc
push
mov
add
jecxz
pop
and
int3
pop
fsqrt
js
out
mov
test
incb
insl
mov
mov
aas
mov
mov
cmp
lods
repz
lahf
mov
or
pop
cmp
inc
stos
fsubrs
inc
es
mov
inc
insl
mov
or
push
xchg
fnstcw
cmp
adc
pop
call
mov
cltd
adc
enter
pop
lret
pop
fisubrl
idivl
mov
ja
ss
pushf
adc
popa
xchg
mov
iret
loope
add
inc
enter
test
std
push
sbb
cmpsb
bound
mov
mov
rsqrtps
xor
and
or
mov
clc
shl
sub
xchg
adc
outsl
xor
or
ja
sbb
popa
pushf
hlt
xor
fadd
addr16
fmull
minps
loope
and
add
adcb
pushf
mov
fs
out
and
in
test
lds
repnz
inc
inc
and
scas
sub
or
dec
mov
std
dec
clc
cmp
dec
cld
push
or
scas
jbe
and
dec
fidivs
movsl
xor
bswap
sbb
add
pushf
addb
sub
mov
je
addb
call
xchg
in
push
gs
dec
or
dec
or
or
cmpsl
subb
test
mov
push
shll
lcall
mov
mov
push
pop
shr
mov
mull
lods
shl
clc
push
dec
push
in
lock
jnp
aaa
jo
dec
mov
sub
jo
xor
int
in
push
mov
subb
sbb
xor
pop
mov
jno
xchg
lods
shlb
dec
mov
jecxz
pushf
icebp
xchg
dec
ror
fdivs
loope
sbb
mov
sti
in
jo
imul
dec
dec
popa
cmp
dec
in
dec
aad
jo
bound
push
icebp
mov
out
mov
fldenv
pop
iret
sub
mov
addr16
mov
stos
rcl
lock
int
int3
cltd
push
rcll
fisttpl
dec
ret
mov
dec
jbe
mov
xor
adc
mov
cmc
es
cmc
aaa
out
mov
push
call
add
lret
iret
enter
mov
xor
xchg
in
aam
rcrl
cmc
mov
sahf
pop
or
loop
or
inc
incl
add
pop
inc
test
cmpsb
xor
add
ss
mov
inc
scas
ret
sbb
lock
or
adc
sbb
pop
pop
stos
lea
in
add
fidivrl
or
jb
mov
sbb
sbb
lahf
sbb
leave
fwait
out
and
lea
lods
mov
cmp
mov
mov
sbb
and
mov
mov
xchg
sahf
xchg
les
dec
fs
xlat
scas
push
cltd
dec
adc
popa
cmp
inc
je
dec
cs
lods
dec
mov
cli
in
jne
ss
ret
popa
xchg
fwait
test
inc
push
pop
imul
std
lret
mov
lea
cmp
add
into
mov
mov
das
insl
fisubrl
mov
rcrl
mov
and
ret
xchg
stos
xor
or
rorl
aam
repz
xor
push
ja
negl
je
lahf
push
push
lcall
jmp
xchg
or
adc
xchg
ret
mov
test
cwtl
push
cmp
into
shl
cs
les
cmp
xchg
push
test
jle
and
nop
mov
iret
js
mov
push
pop
jecxz
cli
adc
ss
fsubl
in
jne
xor
push
push
aaa
mov
and
add
sarb
out
ljmp
shr
enter
fnstenv
lcall
xlat
ljmp
push
outsl
cli
jo
dec
sub
add
enter
sbb
repnz
pop
test
mov
sbb
sub
push
data16
mov
cmp
pop
mov
mov
jo
jle
mov
shll
out
je
push
lods
and
dec
mov
dec
mov
cmc
mov
push
jmp
bound
fistl
dec
mov
lahf
ficoms
cltd
mov
jno
pushf
cmp
mov
cmpsl
repz
sti
arpl
popa
sub
shl
jmp
mov
and
add
inc
arpl
lcall
stos
adc
dec
mov
xor
ret
push
int3
stos
scas
mov
aam
out
mov
or
shlb
and
inc
or
or
call
mov
mov
adc
mov
inc
lea
movsb
jge
test
repz
mov
faddp
imul
outsb
xor
push
pop
xchg
cmp
cmp
jae
inc
es
mov
loop
or
mov
mov
inc
xchg
jo
pushf
jns
jnp
mov
repz
scas
inc
nop
gs
int3
jb
jo
xor
repz
nop
ficomps
fs
xlat
ja
jb
sbb
push
into
gs
scas
push
lcall
imul
repnz
push
ds
cld
and
sbb
add
mov
inc
xlat
movaps
pop
stos
pop
mov
cmc
aad
push
mov
sbb
paddw
mov
hlt
rcl
fadds
icebp
xchg
cmpsl
cs
cmc
lds
shll
sub
imul
xor
cmc
aaa
mov
mov
pusha
fsts
repnz
push
ss
lcall
cmp
xchg
imull
fisubrl
in
inc
fmulp
xor
test
dec
pop
add
jae
imul
jae
push
out
hlt
or
ret
dec
xor
inc
dec
mov
dec
xor
dec
outsb
jb
pop
in
xor
stos
add
push
or
lahf
rorb
push
jecxz
lahf
cld
mov
adc
test
data16
out
ffreep
or
jo
sub
push
int3
xor
ret
adc
add
xchg
adc
inc
inc
xchg
call
rorl
mov
push
sahf
fs
stos
sub
xor
outsl
scas
into
out
decl
jnp
add
call
sub
fsubrs
inc
lcall
loop
jae
and
jecxz
add
in
pop
lcall
int
adc
sahf
add
mov
adc
mov
fnsave
mov
cmp
es
outsb
xor
inc
cmp
ds
xor
ret
cmpsl
jae
lret
sti
popa
movb
loopne
sbb
imul
xor
repnz
pushf
mov
inc
xor
jg
stos
cmp
jp
mov
out
fucom
ja
cmp
insb
pop
add
sub
ret
xlat
pushf
and
ss
stos
in
ret
ficompl
or
icebp
xor
test
pop
mov
arpl
mov
fs
sub
dec
and
cmp
and
add
in
divb
add
fimull
lods
mov
push
out
jp
popa
sub
fsubrp
push
movsb
in
dec
jle
inc
ljmp
mov
mov
hlt
icebp
arpl
dec
les
xor
xchg
icebp
daa
dec
add
pop
or
iret
xlat
dec
psubw
scas
add
fldenv
pop
sar
mul
int3
outsb
mov
xchg
pop
ds
imul
sbb
sbb
outsl
cmp
fcompl
push
scas
mov
insb
push
in
lret
in
imul
in
xlat
cmp
ror
mov
xor
js
lods
rorl
cli
pop
in
jne
scas
stos
push
mov
out
jo
cmp
mull
enter
sbb
into
or
or
dec
stos
or
push
mov
mov
add
mov
or
loopne
adc
sbb
aas
inc
mov
xor
movsl
dec
lret
or
cli
or
ds
mov
nop
mov
repnz
pop
jns
add
xor
mov
sub
cld
push
rcl
shll
pop
punpcklwd
mov
sbb
jecxz
pmovmskb
sub
sti
cld
ror
sbb
aad
pop
add
cmp
push
xchg
mov
xor
jo
movsl
testl
ret
sub
add
addl
inc
popa
xor
in
scas
mov
std
aas
jecxz
clc
jne
dec
inc
mov
arpl
mov
lea
loope
out
int
xor
xor
fucom
in
add
sbb
jmp
push
ficomps
js
sub
repz
and
pop
neg
adc
mov
rorb
jne
cld
mov
popl
or
repnz
xchg
cmp
fbstp
pusha
pop
imul
jle
jno
aad
mov
loopne
mov
in
push
popl
lock
popf
add
fwait
pop
sbbl
or
mov
test
lahf
adc
icebp
pop
adc
pop
shrb
ds
repnz
sbb
sbb
dec
ret
push
push
dec
ret
cmp
out
push
sbb
jge
je
jle
push
loope
push
push
jg
outsl
lock
repz
xlat
pop
mov
inc
in
mov
fldpi
shr
outsb
out
sub
push
push
mov
adc
push
cmp
ret
jae
dec
mov
mov
insb
or
push
pop
fwait
idivl
enter
add
cli
popf
stos
sysexit
mov
add
pop
shrd
out
das
popf
cmc
lret
gs
aaa
pop
lods
inc
and
in
push
fidivs
stos
out
pop
and
mov
aaa
mov
lret
pop
mov
jns
sbb
aam
xor
imul
test
fs
cmp
hlt
push
jne
inc
ret
pop
dec
jns
jne
sub
xor
loop
fwait
outsl
test
out
sti
sub
jl
xchg
cmpsb
xchg
dec
stos
ret
xchg
es
adc
test
dec
negb
inc
cmpsl
addr16
pushf
je
pop
inc
pop
test
ret
into
mov
aad
aam
jmp
mov
push
sbb
inc
jl
iret
jns
or
mov
sbb
mov
cmp
out
jnp
jo
mov
xchg
inc
sbb
orb
push
cltd
adc
mov
outsl
imul
into
movsb
or
jp
push
mov
mov
push
cmp
or
push
inc
dec
rcr
lds
adc
cmp
lea
mov
jg
add
cli
cmp
bound
loope
fsubrp
mov
xchg
sub
jg
xchg
adc
mov
jmp
fsubrl
lods
dec
jae
pop
inc
mov
mov
push
jge
mov
stos
pop
gs
ror
ret
mov
sbb
mov
in
shl
jecxz
ficoms
std
popa
mov
lea
inc
cmc
dec
push
repz
into
mov
stos
add
int
or
idivl
ret
jle
xorps
jmp
gs
movsl
test
xor
sti
cmp
stos
in
in
fsubrl
negb
fucom
sti
repnz
les
push
ror
lods
and
xchg
rcrl
aad
adc
cmpsl
std
xchg
xor
push
fnstsw
mov
je
hlt
mov
movsl
stos
and
sarl
jge
mov
inc
pop
out
nop
dec
jecxz
mov
cmp
test
pop
loopne
sbb
xchg
adc
dec
sbb
out
fwait
int
sbb
in
icebp
mov
sbb
nop
dec
aas
sub
and
add
mov
inc
jb
loop
inc
arpl
adc
or
fs
jl
pop
mov
aam
aad
add
ljmp
push
aad
stos
or
cmp
push
lret
and
testb
push
pop
jno
bound
pop
ja
or
test
jp
aam
adc
cmp
mov
mov
cmpsb
mov
add
or
xchg
rcrb
jnp
xor
or
out
or
orl
inc
push
fwait
push
daa
xchg
mov
test
push
pop
inc
arpl
adcl
add
clc
xor
or
pusha
xor
data16
sahf
rolb
add
push
sub
test
mov
stos
nop
xor
push
xchg
xchg
lods
sbb
fsubr
dec
jg
pop
sub
out
jmp
adc
out
xchg
mov
jmp
cwtl
ret
and
mov
fadd
lret
sbb
int3
or
lock
loope
popa
aam
xor
imul
pop
mov
add
push
rorb
mov
jb
mov
in
pop
fisttps
aam
sbb
insl
int
and
cmp
add
xchg
push
add
or
dec
jns
divb
and
scas
cwtl
jecxz
sub
pop
cmpsl
jecxz
cmp
cmc
movsb
jecxz
inc
xor
push
add
push
mov
scas
pop
loope
mov
int
mov
xor
adc
sbb
insl
cmp
mov
mov
pop
arpl
sti
sbb
es
adc
add
xor
sub
dec
iret
pop
ja
jns
fsubrs
add
jmp
mov
ljmp
call
push
das
pop
scas
leave
jle
cmpsl
add
int3
or
test
fcomps
pop
fisubl
xlat
mov
fnsave
pop
adc
test
sbbb
scas
clc
xchg
push
popa
aaa
ret
xlat
sbb
popa
lds
fdivrs
push
add
aad
cmp
inc
xor
mov
pop
leave
mov
push
mov
loope
es
stos
inc
mov
stc
mov
pop
cmp
add
nop
jnp
xchg
aam
out
fsubr
push
mov
das
push
cwtl
sbb
fwait
testl
scas
sbbb
imul
sahf
in
pop
sbb
dec
xchg
stos
lcall
inc
pusha
sahf
out
pop
xor
jle
in
add
lcall
loopne
fs
sbb
fimull
mov
aam
dec
fadds
imul
mov
outsb
fnstenv
mov
mov
sbb
pop
addl
mov
fmull
dec
add
dec
push
jae
mov
call
jno
inc
push
xchg
call
shlb
add
test
jmp
dec
or
dec
out
pop
mov
jle
mov
out
xchg
das
adc
cmp
xchg
orl
cmpsb
pop
rorl
mov
stos
jmp
mov
mov
cmp
cmc
mov
das
mov
mov
xor
cmc
repz
arpl
push
jmp
fsubrl
fcompl
and
stos
sbb
and
popf
std
pop
push
in
iret
adc
dec
aam
int3
shll
xor
mov
xlat
jmp
outsb
sbbl
setg
push
ror
loop
out
mov
imul
pop
cmp
lock
dec
nop
mov
out
add
mov
sub
outsl
ret
and
jl
inc
rorl
lahf
jne
fldt
inc
pop
repnz
sub
popf
aad
rcll
repnz
cli
push
mov
lds
dec
push
adc
push
dec
add
mov
jb
gs
dec
or
push
pop
dec
fcoms
inc
sub
fistps
hlt
sbb
js
gs
jbe
jno
xchg
pop
push
mov
push
xchg
and
jnp
jno
stos
sbb
cmpsb
inc
pop
movsl
test
mov
mov
mov
mov
xchg
fnstsw
outsl
ja
rcll
je
lret
mov
jno
imulb
xchg
adc
xchg
rclb
push
loop
sub
and
inc
xor
jl
rorb
aam
mov
pop
inc
xchg
aaa
in
inc
icebp
mov
cmpsb
push
je
cmp
sbb
jle
or
sbb
out
cmpsl
dec
in
ljmp
pop
jge
lahf
xor
dec
dec
mov
push
inc
andb
lahf
mov
jg
mov
idivl
mov
mov
fildll
sahf
pusha
mov
sar
fcmovne
mov
aam
dec
fsts
mov
ret
xor
push
addr16
stc
pop
movl
mov
cmp
xor
jmp
outsl
sub
add
ss
out
int3
mov
lock
rorb
clc
ljmp
or
aam
jo
notl
aam
ficompl
mov
cmp
xlat
mov
loop
xlat
ljmp
repnz
adc
nop
add
pop
dec
jecxz
xchg
out
push
fadds
inc
inc
mov
and
test
loop
in
mov
mov
jecxz
xor
mov
inc
scas
ret
mov
out
or
xchg
in
sub
and
cmpsl
inc
add
mov
pop
out
inc
dec
jnp
xor
mull
pop
or
mull
cmpl
cmpsl
and
cmpb
jno
fisttps
popa
sti
xchg
repnz
or
mov
aas
xor
pop
push
aad
ja
push
cmc
divb
dec
mov
in
sbb
jecxz
jecxz
adc
scas
fcmovb
adc
cld
dec
sbb
mov
dec
pop
in
data16
mov
push
es
jnp
mov
imul
jecxz
sub
mov
lahf
pop
pusha
pop
adc
jns
xchg
inc
xchg
mov
or
or
mov
fwait
insb
imul
insl
xchg
cmp
in
jle
dec
push
jl
mov
jbe
icebp
outsb
ret
rolb
jg
insb
out
sbb
lods
mov
lret
out
repnz
iret
fdivrl
jecxz
and
push
sub
push
out
inc
inc
ret
mov
ljmp
push
and
test
je
dec
lret
xlat
sbb
sbb
add
adc
imul
mov
test
scas
in
idivb
or
xor
sub
mov
xchg
adc
std
ret
hlt
imul
jb,pn
notl
mov
arpl
inc
cmp
not
test
mov
lret
and
lret
aas
and
out
xor
sbb
xor
mov
insb
adc
nop
mov
xchg
imul
ficompl
sahf
sbbb
jbe
test
sub
xchg
rorb
xchg
idivl
adc
inc
jge
and
idivb
pop
or
lods
rcrl
sub
insb
and
adc
pop
popa
sbb
cmp
outsl
or
mov
mov
btc
mov
rorb
and
pop
mov
mov
insb
pop
icebp
lret
iret
jmp
sub
jge
fdivrl
adc
jmp
xchg
orl
xchg
fmull
scas
mov
sbbl
cmpsb
xchg
mov
shr
int
ljmp
adc
inc
add
sbb
fmuls
shll
mov
scas
mov
xor
cmp
nop
push
das
sbbl
mov
data16
mov
imul
push
test
push
xchg
xor
imul
add
and
push
adc
or
popa
loop
nop
ljmp
xchg
addr16
std
lahf
jno
enter
sub
fbld
imul
adc
je
sub
repnz
movsb
xor
imul
pop
rcrb
pushf
jmp
mov
jno
mov
push
inc
adc
call
insb
les
sbb
hlt
prefetch
cmp
inc
dec
xchg
cmpsb
in
mov
dec
cli
lds
les
push
popf
pop
jo
clc
add
add
mov
into
jl
cmpsb
dec
xlat
dec
or
add
ficoms
fwait
add
rcrb
ds
cltd
dec
ror
or
gs
test
lea
test
mov
mov
xchg
mul
mov
insb
fsubrl
dec
in
sahf
add
add
cmp
dec
or
ds
xor
stc
cmpsl
ljmp
andl
push
xlat
inc
or
sub
fildl
ds
rcr
ljmp
fcoml
and
out
imul
jbe
lret
inc
push
push
cltd
insb
fcomip
sub
xor
xor
sbb
mov
sbb
into
inc
leave
mov
ja
pop
ret
dec
das
enter
ljmp
mov
xchg
stos
push
adc
shlb
dec
cmp
xlat
fwait
fs
sbb
addr16
loop
mov
stos
shr
aas
push
sub
je
mov
mov
xorl
jnp
loopne
xchg
out
cmc
shlb
pop
or
les
call
rol
push
push
adc
push
scas
test
data16
das
cmp
movsb
pop
cmp
push
les
cmpsl
jnp
mov
lret
pop
mov
cs
xor
rolb
rclb
subb
jnp
pusha
leave
sub
ret
jmp
pop
ss
call
jmp
scas
into
aam
push
pusha
xchg
ja
jbe
push
inc
mov
mov
aas
in
test
cmpsb
test
rcll
mov
add
pop
imul
mov
loopne
test
or
push
lods
ja
fsubrs
jae
cmp
sahf
frstor
dec
dec
rcrb
out
jl
fstl
shll
ja
inc
adc
xor
mov
or
push
aas
mov
in
loopne
cmp
scas
test
dec
push
jl
fadds
push
inc
lds
shll
inc
ds
inc
sbb
mov
push
clc
xchg
pop
pop
stos
mov
xor
jns
fisubs
scas
addr16
mov
int3
lcall
mov
fs
fld
add
push
in
dec
and
adc
mov
xor
data16
xchg
or
and
cmp
lds
xor
push
add
outsl
xor
outsl
push
pop
in
mov
bound
addr16
push
xchg
and
aas
push
lret
xor
dec
leave
push
test
in
jne
insb
daa
jmp
insb
add
add
test
lods
pop
xor
and
insl
fcoml
xchg
outsb
ss
pop
xor
and
xchg
iret
mov
sbb
mov
bound
push
fstps
add
push
mov
ljmp
mov
mov
popa
flds
jl
mov
bound
pop
xor
les
movsl
leave
das
imul
inc
fwait
ja
sarb
fcmove
jbe
pop
inc
sub
adc
fs
mov
mov
in
mov
rcrl
push
and
jo
mov
aad
push
sub
loope
stc
mov
in
cmp
mov
jmp
inc
pop
fisttpl
mov
sub
inc
cmp
out
pushf
loope
and
dec
lret
adc
and
sbb
scas
dec
xor
xchg
sbb
fldl2t
add
mov
xchg
inc
mov
pop
jmp
mov
lods
inc
pop
jo
aam
cli
or
addr16
xchg
insl
jp
push
mov
sahf
sbb
push
aad
and
cwtl
lret
dec
mov
xchg
inc
adc
inc
fnstenv
stos
mov
inc
clc
jae
insl
or
xor
icebp
out
sbb
repz
into
fstpl
lret
dec
inc
rolb
push
xor
or
sbb
add
jp
pop
pop
fidivrl
mov
mov
pop
xchg
nop
dec
sbb
or
out
popf
dec
mov
aas
inc
mov
mov
jae
pushf
push
test
cmpsb
mov
pop
lock
xchg
push
out
dec
xchg
jbe
push
in
popf
rol
cmpsl
cli
jne,pt
test
fcomip
int
pusha
add
enter
xchg
and
sarb
or
fidivrl
ret
pop
hlt
fisubrs
ljmpw
xor
pop
outsb
jge
pushl
das
outsb
pushf
dec
icebp
lods
cmp
test
ja
push
lock
mov
dec
lahf
xchg
mov
adc
loop
stos
mov
frstor
mov
jbe
push
test
mov
call
imul
fwait
cmp
es
xchg
aad
and
cmp
xchg
cmp
push
add
lock
imul
jb
sarl
outsl
cld
movsb
jge
mov
jbe
sbb
lods
mov
mov
pop
and
jnp
pop
xchg
shr
clc
lods
jb
xchg
xchg
pop
xchg
stos
insl
push
outsl
xchg
dec
subb
aaa
stos
xchg
xor
mov
ret
jns
es
lds
pusha
mov
dec
cli
insb
cwtl
mov
jnp
addr16
clc
mov
scas
xor
es
push
roll
in
pop
dec
call
mov
bound
jb
add
or
or
or
dec
push
imul
out
xchg
addb
fsubl
sbbl
mov
rcll
int
and
or
add
xor
stos
xchg
js
pop
cs
pop
outsb
repnz
ss
push
push
lret
inc
call
lcall
repnz
imul
mov
adc
xchg
shrl
mov
rclb
sbb
sbb
insb
aam
fwait
adc
mov
call
adc
aad
sti
sub
leave
xchg
test
mov
xor
dec
dec
or
xchg
testl
mov
imul
mov
pop
shll
fidivl
pusha
add
pushf
xchg
push
sub
mov
test
inc
out
imul
sti
mov
pop
and
loopne
mov
jno
iret
int
adc
lret
lods
out
adc
and
dec
mov
sbb
dec
test
xor
sub
pop
insb
jmp
lret
leave
inc
mov
dec
fs
rcrb
xorb
outsb
sbb
cltd
fisubs
pop
and
call
gs
cwtl
mov
inc
outsl
aad
sub
daa
loopne
inc
scas
xchg
stos
into
adc
xchg
inc
fists
out
lock
dec
dec
pop
stos
rcll
movsb
stos
out
push
xorb
mov
pop
mov
push
loopne
out
and
aas
cmp
fsub
ja
mov
sti
jo
fisttps
sahf
xchg
xchg
sbb
adc
jae
add
data16
aaa
sub
jno
daa
xor
jmp
lock
rolb
fsubs
lcall
loopne
insb
insl
mov
cmpb
jne
push
test
jae
into
mov
aad
or
add
lcall
scas
scas
push
ret
fisttps
into
imul
leave
js
test
mov
imul
or
xor
loopne
loop
hlt
adc
cmp
jp
int3
subb
push
add
mov
insl
cmp
jg
cmp
mov
in
xchg
loope
mov
dec
cmpsl
jae
les
imul
sbb
ror
addb
clc
adc
addb
stos
inc
xchg
and
pop
inc
fsubrl
data16
inc
les
popf
sub
add
aas
mov
sahf
js
mov
sub
xor
sbb
testl
int3
push
cmp
sbb
test
xchg
or
mov
shr
cmp
test
or
rcrl
movsl
sahf
mov
mov
push
and
nop
push
rorb
push
mov
pop
cmpsl
ljmp
sub
imul
pop
shlb
jae
mull
xor
aam
lcall
mov
xchg
or
mov
dec
inc
xchg
movsl
call
jmp
sti
xchg
sarb
cwtl
or
cmp
mov
add
andb
cmp
jno
je
and
push
or
in
nop
fwait
mov
push
inc
lcall
aas
std
sub
dec
add
cmp
add
pusha
or
test
addr16
pop
mov
bound
pop
push
rclb
jp
cmp
fldt
mov
inc
adc
mov
mov
mov
inc
test
pop
int3
std
ret
cmp
ret
rcrb
movsb
or
hlt
inc
xchg
inc
sbb
cmp
fxch
out
and
jecxz
in
adc
je
xchg
mov
ljmp
cmp
movsl
fisubs
cmp
pop
outsl
clc
mov
hlt
mov
cmp
out
add
pusha
dec
jo
sbb
jp
mov
adc
cmp
aas
cmp
inc
jg
ret
mov
mov
jno
mov
xor
push
adc
addr16
testl
fsubl
push
and
cmp
mov
push
pop
shlb
dec
jne
in
subl
push
mov
pusha
mov
js
or
and
pop
jmp
and
jo
mov
inc
sub
je
xor
cmp
push
jle
mov
daa
mov
xor
mov
pop
or
cmpsb
ret
imul
pop
roll
push
nop
inc
incl
lods
ljmp
mov
lret
test
lds
aaa
mov
fs
mov
testb
pop
arpl
sti
push
das
loop
dec
ljmp
ds
push
mov
mov
test
cmp
cs
ljmp
les
in
sbb
orps
or
dec
sbb
sub
icebp
xchg
fwait
sub
sbb
loope
imulb
repz
mov
ljmp
mov
mov
push
inc
pop
jbe
stos
das
stos
mov
lea
loope
pop
xchg
rclb
inc
pop
push
add
jp
cs
mov
mov
addb
enter
mov
je
notb
in
addr16
aad
lcall
adcl
mov
lret
testl
mov
push
cs
add
icebp
sub
leave
cmp
push
push
stos
int3
dec
xchg
jg
push
scas
std
daa
bswap
ds
mov
and
push
adc
loop
fidivs
jae
bnd
mov
sbb
mov
lahf
add
push
inc
jnp
lds
inc
jle
add
repnz
cwtl
outsl
imul
lret
pop
stc
lock
cmpl
adc
mov
lods
in
mov
pop
inc
arpl
xor
outsl
jg
and
mov
ja
mov
in
add
lods
insb
in
lods
movsl
inc
push
int
mov
loop
cmpsb
sar
repnz
fldz
mov
sbb
mov
fsubrl
jl
mov
sbb
movsb
jbe
pop
fcmovnbe
pushf
cli
xchg
mov
repnz
xchg
cli
cli
insl
fildll
xchg
nop
hlt
rclb
adc
movsb
xchg
fwait
mov
push
jns
out
inc
add
addr16
sbb
fldcw
imul
jl
and
inc
cld
sub
scas
imul
pop
xlat
icebp
arpl
cmp
shrb
fdivrs
in
jnp
notb
add
inc
gs
xchg
jp
jmp
test
inc
out
sub
fdivs
mov
test
js,pt
xchg
jne
cmc
rcrb
add
dec
clc
aas
mov
pushf
dec
xchg
adc
rorb
test
fisttpl
incb
push
test
lcall
fisttpll
cmp
dec
cmpsb
pop
mov
in
mov
xor
xor
pop
adc
pop
mov
add
popf
sub
mov
jp
mov
pop
call
mov
jecxz
idivl
sbb
cld
cmpsb
mov
int
jns
sbbb
in
sbb
out
insl
in
xchg
pop
cmp
dec
das
shrl
jle
shrl
js
das
arpl
sub
mov
lret
rolb
lret
xor
pusha
fldenv
mov
cmp
and
arpl
incb
cmp
dec
fcompl
popa
mov
nop
mov
fisubs
sub
inc
packssdw
jns
mov
idiv
xchg
pop
jns
sahf
pop
fcomi
cmp
xchg
add
popf
push
int3
push
xchg
mov
or
fstpt
adc
addb
or
out
out
jno
enter
fstl
scas
outsb
fs
xchg
mov
ret
in
xor
scas
jg
loop
sarl
stos
fisttpll
addl
stos
mov
fwait
subb
sbb
jmp
sub
dec
dec
shl
mov
mov
dec
pop
jae
add
or
cmpb
sbb
xchg
mov
dec
jmp
ss
mov
mov
jmp
outsb
dec
jae
loope
xchg
arpl
hlt
std
idivl
arpl
push
sbb
outsb
add
adc
add
dec
cmc
mov
mov
pop
pop
dec
iret
cmp
test
sbb
hlt
sbb
es
inc
addr16
cmp
aas
push
sbb
into
scas
adc
add
pop
adc
pop
sbb
fs
sbb
fcomp
jb
jns
movsb
jle
dec
jne,pn
lods
jns
mov
push
shrl
rorl
movsl
inc
movl
xchg
sbb
mull
xor
cld
and
push
lret
cltd
sbb
ret
addr16
loopne
adc
pushl
lret
or
cwtl
sub
clc
push
sahf
or
add
cmp
mov
mov
lret
push
fst
jg
push
or
adc
inc
jecxz
sbb
pop
jecxz
inc
loop
push
sub
test
aad
pop
mov
inc
fwait
mov
jne
pop
out
jl
clc
pop
pushl
sbb
into
dec
fstpt
mov
and
fstp
adc
ljmp
dec
jne
and
loop
daa
pushf
pop
pop
jnp
mov
sub
addb
push
xor
inc
fbld
cmp
in
inc
push
pusha
mov
filds
inc
dec
sbb
xlat
cmp
std
sbb
andb
or
push
fbstp
mov
xchg
fcoms
mov
sub
je
stos
cli
xor
pop
ror
push
cmpsl
scas
mov
mov
push
das
ds
aaa
mov
cltd
ret
pop
sbb
mov
sbb
mov
outsl
loop
mov
gs
pop
xchg
push
jmp
sti
xor
adc
dec
daa
jbe
adc
or
xorl
mov
sbb
int3
xor
mov
jbe
pop
aad
lea
xor
dec
orl
mov
jmp
aaa
xor
jge
xlat
je
pop
out
mov
inc
inc
pop
sti
mov
in
imul
rorl
and
out
push
pop
lretw
pop
xor
enter
xchg
pop
out
pop
in
fbld
movsl
fwait
incl
call
mov
out
jmp
popa
xor
addr16
jae
push
loopne
fadd
and
sbb
inc
les
and
ret
out
test
lock
and
aad
sti
imul
pop
mov
push
aaa
je
mov
das
lds
adc
test
lea
or
cmpb
push
mov
andl
test
sub
add
add
and
and
lock
lods
sbb
push
imul
insl
cld
mov
inc
pop
push
jle
mull
add
imul
push
lret
lds
mov
adc
shlb
js
in
test
sbb
ja
lcall
mov
mov
int3
sub
xchg
jbe
add
push
out
push
adc
cwtl
adc
add
inc
inc
int3
mov
shl
or
jg
and
fwait
shl
xchg
cwtl
mov
mov
rolb
push
dec
pop
pushf
aam
cmpsb
adc
pop
in
inc
jno
daa
jge
sbb
mov
fwait
stos
divl
rolb
sub
ds
jne
jle
jl
rolb
repz
test
mov
inc
or
mov
xchg
xchg
icebp
adc
sub
imul
cmp
cld
or
fimuls
repz
fxch
dec
or
cmovb
adc
lret
iret
icebp
outsb
push
xor
push
ret
test
idivb
push
ret
sub
jae
mov
adc
lds
test
jl
xor
addr16
fbstp
sbb
and
js
sub
mov
inc
leave
scas
scas
xor
push
outsb
ret
push
mov
hlt
xor
sub
mov
loope
fcmovb
add
mov
movsb
push
jg
jnp
and
addr16
dec
arpl
or
and
popa
ljmp
cmp
mov
sub
scas
pop
lret
stos
fnstcw
mov
cli
out
mov
mov
and
cmp
pop
push
add
push
test
xchg
pop
jmp
loopne
cld
mov
mov
cwtl
std
pop
or
mov
lock
cmp
sub
insb
mov
loop
pop
jne
or
jecxz
fdivrs
adc
mov
mov
and
mov
lock
loop
fisttpl
pushf
jmp
jge
fdivrs
xchg
cmp
jmp
and
test
mov
testb
add
xchg
int
sub
pop
push
sub
sub
mov
aaa
fnsave
cltd
rcrl
shrl
cwtl
sbb
xor
mov
out
stos
loopne
xchg
cltd
or
mov
pop
push
adc
cs
loop
std
rcl
pushw
inc
pusha
aad
mov
xor
cwtl
lods
sub
loop
out
cmpsl
mov
test
cld
sti
inc
in
cmp
test
add
push
lcall
cli
ds
cmp
lcall
push
test
in
ss
mov
adc
or
out
test
enter
out
iret
pop
inc
ror
scas
sbb
outsl
inc
call
adc
jl
adc
dec
xchg
add
jecxz
xchg
loope
mov
data16
mov
out
mov
cltd
repz
inc
mov
jbe
into
lahf
es
int
ljmp
jmp
ljmp
int3
jns
in
jecxz
jo
or
mov
js
pop
movsb
idivl
ret
out
rcll
std
js
lods
outsl
mov
xor
insb
jge
ficomps
dec
push
jns
xchg
jb
mov
imul
pop
xchg
adc
adc
pop
xlat
pop
xchg
test
enter
sbb
rcr
jmp
andb
xor
sub
icebp
push
inc
mov
jb
rcrl
jo
mov
ret
std
sbb
nop
in
pop
or
rcrb
lcall
inc
fsubp
imul
add
sub
xchg
cmpsl
int
inc
mov
aad
push
jae
push
mov
addr16
sbb
mov
fisttpl
in
fcomip
mov
js
xchg
jmp
inc
lret
lret
mov
sub
cmpsl
fistps
mov
andl
and
ret
or
mov
adc
stos
add
fsubr
popa
push
inc
js
lods
inc
loope
dec
xor
cmp
faddl
inc
mov
sahf
mov
mov
jge
mov
and
pop
push
bound
xchg
or
out
repz
xchg
popa
cmp
jnp
sbb
loop
in
test
ss
push
or
fdivl
popa
rcrb
clc
mov
loope
outsb
enter
mov
and
fdivl
dec
loop
mov
scas
arpl
popf
loopne
loopne
jecxz
xchg
and
cs
adc
adcb
imul
adc
lcall
out
jg
mov
mov
pop
dec
mov
dec
pop
push
inc
adc
out
or
int3
in
and
ret
das
inc
adc
mov
idiv
cli
sub
lock
or
pop
scas
lret
pop
lods
xlat
aam
push
sbb
insl
add
inc
xchg
mov
nop
call
stc
in
data16
test
dec
jg
inc
xor
lcall
outsb
dec
enter
mov
das
or
mov
sbb
pop
mov
fsts
ss
xchg
mov
push
mov
mov
mov
lods
and
pop
mov
sbb
fistl
jo
xor
mov
in
mov
je
popf
pop
gs
or
es
in
repz
mov
push
out
outsl
scas
jmp
pop
cmp
adc
jns
sbb
mov
popa
jno
fsubrl
push
jno
ret
mov
and
ljmp
fdivrl
pop
pop
mov
or
xor
xchg
mov
dec
mov
mov
cld
mov
clc
aaa
iret
les
test
movsb
rcl
add
and
cld
adc
xor
movsl
into
fsub
loope
test
ljmp
out
xorb
add
outsb
ret
adc
sub
mov
lret
xchg
pop
mov
adc
jo
insl
push
jl
inc
insb
loop
adc
sbb
jmp
inc
add
mov
push
jns
fnstsw
or
clc
dec
ret
or
ss
aas
daa
imul
sahf
cmp
clc
mov
repnz
jae
sbb
inc
or
xor
mov
jbe
test
or
mov
das
or
lahf
mov
hlt
repz
in
pop
dec
xchg
push
icebp
push
dec
fldcw
jecxz
rorl
test
mov
shll
das
add
pop
je
mov
stc
push
push
pusha
lcall
adc
ss
shrl
dec
push
mov
sub
lods
dec
outsb
xlat
xchg
outsb
adc
mov
sbb
mov
sub
and
xchg
sub
add
push
cmpb
jmp
fisubrs
cli
push
ret
mov
stos
movsb
sbb
ret
or
xchg
jecxz
lds
dec
pop
and
jno
fs
loop
cltd
jl
fsts
sub
loop
js
mov
popf
pop
adcl
push
cli
and
es
ja
pushf
pop
int3
push
inc
inc
adc
ret
push
imul
jge
adc
pop
mov
arpl
xchg
jns
or
sbb
bound
imul
pop
sub
jle
push
jne
into
out
mov
imul
mov
xor
fwait
int3
shlb
hlt
push
cld
adc
cmp
jg
lods
xchg
sbb
fsubrs
dec
mov
add
test
and
sub
out
in
inc
lds
sbbl
inc
jb
cmpb
push
mov
cmp
fnstcw
aam
mov
push
ljmp
pushf
mov
mov
dec
mov
fmuls
jle
popa
out
and
add
arpl
pop
pop
cmpsb
cs
fs
int3
mov
repnz
push
sahf
in
ret
jmp
daa
jmp
roll
repz
test
dec
sbb
pop
and
cmp
push
or
pusha
pop
outsl
cwtl
into
and
pop
adc
mov
mov
or
xor
loop
movhps
mov
mov
sbb
data16
xor
sbb
insl
add
mov
adc
sub
in
inc
test
sahf
lret
enter
xor
xchg
mov
mov
and
popf
inc
xchg
fs
jnp
lahf
aad
leave
cmp
scas
cmp
xchg
test
jecxz,pt
fsub
hlt
lods
adc
push
or
fcoml
and
mov
ja
bound
lret
ficoms
pop
add
mov
sbb
test
mov
pop
aam
out
mov
mul
sub
mov
sbb
inc
lret
add
pop
mov
loopne
test
insb
scas
repz
sbb
sbb
out
mov
xchg
pushf
or
dec
and
cwtl
adc
rcrb
push
iret
inc
ds
dec
repz
lcall
outsl
sbb
sti
mov
sub
lods
mov
dec
pop
mov
sbb
nop
dec
add
push
mov
xor
or
jmp
clc
adc
add
push
inc
bound
out
out
aad
jnp
ret
mov
mov
mov
xchg
and
fs
dec
xor
inc
je
fwait
pop
stos
cmc
notb
imul
pop
pop
rcrb
mov
aad
push
push
jbe
xlat
add
sub
aam
fdivrs
add
data16
or
push
ficompl
cmpsb
jl
cmpsl
mov
imulb
test
pop
js
je
inc
repz
push
scas
test
std
adc
fisttpl
add
fiadds
xor
loope
int
mov
sub
xor
mov
sahf
into
cwtl
idivb
pop
ficomps
sbb
lods
and
fstps
mov
mov
xor
xchg
inc
push
mov
xchg
aas
push
insb
cmc
add
data16
or
cmpsl
dec
mov
scas
vpsrld
pop
dec
dec
mov
mov
dec
test
shll
icebp
or
xlat
loope
add
lea
dec
sbb
xchg
sbb
nop
pop
pop
jns
shl
push
rcl
ret
addr16
jp
jle
pop
aaa
repz
data16
mov
div
shll
out
lret
mov
rorb
fs
jae
mov
mov
std
dec
lods
fimuls
mov
in
jmp
adc
push
cmpsb
jbe
or
sub
sub
mov
imul
mov
test
and
push
sbb
js
sahf
add
daa
int3
popa
rcrl
push
daa
pop
and
sarb
fidivs
int
sub
xor
push
into
es
and
inc
xchg
push
shr
cmc
stos
das
add
mov
xchg
mul
jne
mov
call
inc
test
pop
jp
aad
repnz
pusha
addr16
xor
addr16
bound
cmpsl
movsl
dec
inc
std
loop
stos
xchg
loope
data16
insb
mov
push
adc
mov
jno
popl
jle
shl
ret
out
inc
iret
sub
jo
leave
out
mov
cmp
mov
mov
adc
dec
addr16
js
ss
pop
lgs
nop
stc
add
push
push
call
dec
test
dec
pop
push
jae
and
imul
nop
or
cli
sbb
xchg
pop
sbb
dec
lds
xchg
sub
lock
inc
and
movsb
sti
or
scas
aaa
sub
xchg
mov
jb
pop
sbbl
inc
xor
jno
pop
mov
ljmp
scas
pop
dec
xor
cli
int
push
nop
inc
xor
int3
xchg
scas
clc
inc
xchg
push
sti
cmc
dec
sub
enter
out
fistpl
cmp
add
pop
jnp
mov
and
inc
jae
lea
outsl
js
mov
xchg
xchg
add
mov
cmp
jae
xor
das
pop
add
jne
xchg
mov
xchg
ret
jecxz
arpl
lcall
xor
mov
les
jo
push
lods
jle
sbbb
adcb
and
push
rorb
dec
cmp
lods
sub
nop
mov
xor
inc
or
mov
loope
pop
ljmp
mov
movsb
and
fildll
jo
sbb
das
mov
clc
int
push
call
rcrb
mov
jbe
jp
push
rorl
lods
into
mov
aas
out
cld
and
mov
or
shl
lods
add
sub
sub
stc
adc
ss
mov
imul
xchg
adc
mov
cltd
adc
pop
lods
sub
lea
or
mov
dec
add
xchg
popa
mov
jmp
jmp
jns
push
dec
pop
sti
push
mov
sbb
adc
jne
loope
movsl
sbb
sbb
xlat
lock
jge
push
sti
stc
and
cmp
gs
std
in
xchg
out
add
into
mov
fsts
adc
repnz
mov
push
dec
xor
adc
add
mov
adc
ror
test
std
adc
jbe
into
mov
dec
lock
notb
xchg
outsl
vmread
cmp
or
aaa
cld
lret
sbbb
dec
mov
clc
imul
add
out
mov
inc
push
mov
dec
and
mov
inc
lret
enter
iret
out
mov
mov
je
inc
push
les
idivl
mov
pop
stos
call
pushf
push
adc
xchg
inc
movsb
jl
js
xor
push
dec
xchg
jo
ror
mov
into
add
arpl
push
push
push
nop
jbe
sahf
data16
mov
xor
sti
insb
dec
xchg
cmp
outsl
pushf
xorb
dec
dec
arpl
add
loopne
adc
mov
xor
cmpb
lea
xchg
cld
mov
mov
fidivl
pop
std
retw
add
lock
pop
push
pop
lret
or
sbb
leave
dec
dec
fbld
lods
xor
test
mov
out
data16
fcoml
cmp
jp
mov
xchg
andl
arpl
pop
mov
lret
iret
in
in
or
jl
jge
cmp
nop
sbb
jmp
sub
xchg
cmp
add
mov
clc
adc
mov
rcll
dec
sbb
sbb
aam
push
sub
pop
sub
inc
jae
cmp
lcall
push
jnp
cmp
fistps
pop
sub
jne
mov
dec
pop
or
test
cmp
mov
push
ja
lods
mov
repz
imul
daa
adc
sbb
std
imulb
test
mov
fwait
pop
jge
mov
push
js
mov
rolb
push
add
xor
or
jno
ljmp
mov
jle
mov
popa
cltd
ret
push
jecxz
lock
leave
xchg
pop
mov
test
ss
fwait
cmp
mov
popa
cmp
call
aas
movsb
hlt
mov
jge
movsb
in
dec
add
jle
cmp
pop
lea
adc
xlat
lea
je
cmpsb
sarb
pop
adc
mov
lods
mov
or
mov
cmp
pop
fs
dec
xor
je
jle
iret
loop
and
sub
mov
fistpll
inc
dec
pop
lcall
clc
and
out
cld
or
cmp
je
sub
ret
sbb
ljmp
add
daa
std
xchg
ss
je
lods
jb
stc
dec
xchg
add
out
mov
pop
sti
pop
scas
pop
pusha
js
adcb
adc
mov
mov
outsb
xlat
and
loop,pn
xor
in
addr16
mov
jp
loope
push
add
les
call
dec
mov
push
mov
cmp
fcoml
test
mov
lea
rcr
stc
mov
cwtl
dec
pop
lods
pop
or
into
lahf
pop
jg
sub
mov
sahf
pop
lods
fistl
xlat
jmp
loop
loopne
sub
add
arpl
fsubrp
push
fstpl
mov
test
pop
aam
pop
call
dec
popa
mov
xor
sub
jnp
stos
cmpsb
mov
and
mov
pop
mov
xchg
add
shrl
sti
js
aad
sarl
inc
mov
cmpsb
movsb
xor
fistpl
leave
sbb
sahf
cmp
xor
clc
fnsave
dec
sub
sub
lock
fistps
cmp
push
add
xor
sub
fs
mov
xor
mov
pop
test
fwait
push
jge
std
int
and
mov
movsb
sbb
gs
stc
inc
mov
fwait
or
das
mov
push
call
mov
mov
cld
xor
aas
mov
mov
xor
repnz
std
daa
xchg
sbb
aam
mov
lds
pop
mov
xor
out
mov
mov
mov
repz
dec
dec
xor
mov
and
lods
lret
xchg
sub
test
ja
and
cmovnp
inc
bound
out
jbe
and
mov
mov
test
dec
and
test
ds
loopne
lret
mov
mov
lods
fsub
imul
ljmp
mov
nop
adc
add
gs
popf
insl
pop
lds
insb
fldcw
adc
data16
lds
mov
jle
lock
push
mov
imul
xchg
outsb
lea
pusha
jmp
xchg
pop
add
mov
xchg
cmp
in
inc
sub
data16
aam
mov
cmp
outsb
es
jl
xor
mov
pop
xlat
loope
cmpsb
xchg
pusha
cmp
ss
lods
inc
jnp
iret
or
mov
xor
push
mov
cwtl
outsl
push
inc
fcmovbe
or
mov
push
add
je
and
loopne
mov
push
sub
inc
pop
in
jns
loop
dec
mov
mov
cs
pop
test
ret
pop
popa
mov
movsb
dec
int3
aaa
cmpsb
jne
enter
sbb
adc
lret
sbbl
sub
cltd
aas
lock
xor
loope
lods
loope
mov
xor
xchg
icebp
das
pop
shll
lcall
in
fcoms
mov
call
test
dec
add
out
add
cs
inc
sbb
leave
addl
sar
inc
les
push
or
xchg
fildll
mov
pop
adc
lock
pushf
cmp
sti
cmp
mov
test
push
sub
sbb
cmpsl
stc
mov
mov
enter
fcmovu
cmp
xchg
add
fwait
ljmp
cmp
stos
push
xor
imul
inc
loope
daa
push
push
mov
lods
in
fadds
out
out
sti
fadds
xor
sub
pop
mov
lret
std
pop
or
xor
adc
xor
gs
in
cmp
jmp
inc
and
xchg
xor
or
and
jae
fdivr
out
hlt
pop
adc
mov
mov
add
cli
or
stos
jecxz
jmp
addr16
in
nop
push
mov
pop
xchg
and
fcoms
xor
adc
repz
push
int3
push
sarb
sub
dec
movsb
rcr
xchg
adc
mov
incl
imul
and
jnp
shr
enter
ret
mov
in
into
mov
sti
dec
pop
sbb
out
test
and
sbb
lahf
int
push
test
and
push
stc
dec
lods
arpl
cmc
stos
cmpl
call
xor
out
cld
cltd
inc
fistpl
lods
pop
add
scas
subl
inc
loopne
sub
sub
out
or
xor
les
std
xchg
call
fidivs
push
mov
rolb
jae
fidivrs
pop
in
mov
dec
mov
into
lds
jae
shlb
pushf
add
and
jg
push
test
aaa
hlt
das
add
push
adc
mov
mov
popa
repnz
mov
loope
mov
pop
xor
daa
pop
push
cmp
repz
jl
cmp
push
mov
stos
testl
xchg
mov
push
sbb
movsb
pop
sub
js
pop
adc
es
mov
sub
call
jns
cmp
js
cld
mov
sbb
xchg
bound
inc
cmp
pop
mov
test
sahf
inc
aas
in
inc
jns
mov
data16
jge
mov
lahf
adc
fisubl
sbb
inc
out
je
xchg
mov
pop
cmp
xchg
add
lock
pop
mov
rcrb
sub
cltd
repnz
adc
fcmovu
sub
fists
push
or
stos
inc
sub
add
sahf
push
sbb
addr16
fidivs
pop
add
sub
mov
or
jns
jnp
push
nop
rorl
add
sub
pusha
push
scas
test
ret
push
xor
xor
mov
lods
mov
xor
adc
inc
in
daa
ljmp
das
daa
add
xchg
xchg
outsl
aam
cli
jns
enter
inc
mov
pop
cmp
push
push
js
fidivs
add
adc
push
popa
in
mov
clc
mov
mov
arpl
in
or
mov
jl
stc
adc
push
mov
stos
inc
and
inc
pop
leave
or
mov
xchg
stc
jns
cmp
jne
jl
daa
mov
ficomps
fcompl
test
shll
jne
jecxz
insl
pop
xchg
lcall
fbstp
in
stos
divl
mov
fildll
dec
push
jp
leave
das
out
inc
icebp
cmp
sbb
gs
lahf
cmc
xchg
lds
adc
mov
xchg
or
std
test
sub
and
add
jl
jno
mov
lods
pop
ret
in
xor
push
push
adc
pop
inc
sbb
cmp
inc
fisttpll
xchg
lcall
popw
xchg
hlt
mov
cmp
repz
pop
test
cmpsb
in
mov
fstps
xlat
jae
popa
and
fs
fldenv
adc
imul
jp
jbe
out
jae
xchg
jl
sub
aad
ljmp
and
movsb
or
cmp
loopne
lcall
mov
pop
sub
inc
jmp
test
pop
and
pop
mov
mov
daa
add
stos
jne,pt
xchg
pop
pushf
notl
insb
icebp
in
pop
loope
iret
shll
sub
and
mov
inc
xchg
cmp
pop
gs
add
nop
in
lods
hlt
imul
jno
popf
repnz
icebp
mov
leave
dec
jmp
xorb
jns
je
test
inc
and
adc
in
stos
pusha
xor
lahf
fwait
jle
push
mov
out
mov
inc
das
or
pop
mov
enter
je
rorb
mov
pop
pushf
pusha
repz
and
lock
outsb
add
mov
insb
cmp
push
ficoms
push
jns
lock
movsb
js
fimuls
aam
aaa
aam
int3
inc
xchg
les
cli
or
or
sub
add
mov
push
test
push
mov
cmpsb
xor
js
or
mov
subl
adc
fcmovb
inc
lods
scas
xlat
lret
mov
or
sub
add
nop
cmpsb
subl
cmp
sbbl
popf
dec
cmp
jb
fucomip
sti
loopne
aaa
jns
aam
fbld
out
hlt
loope
sbb
int
xchg
inc
jb
aad
sub
iret
mov
leave
dec
push
shl
addr16
push
cmp
sub
je,pn
les
inc
mov
inc
into
xchg
sti
dec
mov
or
leave
fnstenv
or
xchg
mov
out
sub
sbb
pop
pop
aad
mov
movsb
fstl
sbb
loope
dec
cltd
push
insl
sahf
push
pop
std
fmuls
jbe
fisubrl
movsl
xchg
roll
in
fimull
xchg
dec
loope
xorl
inc
imul
and
pop
sbb
mov
mov
fdivrs
mov
imul
xchg
cmp
in
sub
fcmovnbe
dec
lret
int3
jns
out
cmp
scas
xlat
push
pop
fnstcw
repnz
aas
inc
lds
push
add
cmc
andb
sbb
es
in
push
pop
push
insb
xchg
jl
rcll
cmpsb
dec
mov
xor
xor
repz
stos
hlt
xor
jle
daa
jle
inc
out
outsb
ret
push
loopne
dec
ja
int
mov
inc
aad
or
inc
jbe
ss
add
push
imul
mov
sbb
dec
aad
rcl
inc
lods
rclb
inc
sbb
stos
inc
sub
and
mov
popa
or
mov
sub
imul
adc
pushf
divb
aam
or
push
add
pop
aas
negl
clc
nop
jp
push
jnp
and
mov
cltd
idiv
pop
clc
aam
add
push
xchg
pop
faddl
and
imul
sub
pop
stc
hlt
add
fisttpl
fdivrl
push
push
add
jo
jnp
jl
insl
ljmp
pop
push
jl
xchg
les
lcall
dec
orb
mov
mov
cmpsb
pop
mov
pusha
fisubrl
pop
or
lock
xlat
mov
or
jnp
dec
xor
nop
add
cld
pusha
mov
jmp
leave
jo
jno
xchg
adc
add
sbb
add
aam
cmpsl
outsb
test
jns
sub
jg
sbb
dec
adc
xor
lcall
pop
ret
in
dec
mov
lahf
outsb
int3
hlt
mov
shll
shl
imul
repz
or
stos
cltd
aaa
imul
xor
scas
sbb
or
xchg
or
sahf
jecxz
xor
sahf
xchg
sub
pop
mov
fnsave
cmp
sub
jbe
pop
add
xor
jecxz
xchg
mov
cmc
nop
inc
add
fistps
mov
mov
push
mov
add
stos
add
and
out
and
enter
test
xor
sbb
adc
cmpsl
lret
loopne
and
pop
pusha
mov
cmpsb
adc
lret
fwait
mov
jne
mov
add
inc
mov
aaa
movsb
inc
or
mov
stos
aam
pop
jns
addr16
andps
or
cmp
or
sahf
lods
aas
mov
pop
pop
adc
xchg
sub
mov
loope
push
jno
nop
loope
fwait
sub
adc
imul
cmp
mov
imul
and
sub
sub
imul
lea
mov
mov
pop
or
je
mov
ds
sub
cmp
rcrl
jae
push
in
mov
scas
sbb
sub
mov
dec
add
push
leave
or
lret
pmaxsw
mov
inc
rcrl
push
or
adc
push
push
push
ss
mov
sub
sub
pop
jae
scas
das
mov
test
lret
or
popf
add
fstps
fisubl
inc
stc
xor
jae
jg
xorb
repnz
or
mov
daa
scas
dec
mov
scas
mov
test
cltd
in
and
mov
xor
sub
lock
ja
and
adc
jge
imul
sbbb
xchg
dec
xlat
jnp
jb
rep
in
jns
jb
and
jecxz
repz
push
cmp
out
fldt
pop
add
add
mov
inc
lea
xchg
and
pop
or
pop
sub
shrl
xor
sbb
in
xchg
push
dec
and
out
mov
cmp
shll
hlt
add
push
cld
lcall
add
inc
dec
fldl
pop
ret
jbe
xchg
fstpl
jno
sbb
inc
andnps
movsb
cld
xor
out
xchg
sti
lods
push
scas
mov
lret
jnp
or
cli
nop
popf
adc
add
push
lret
xchg
push
mov
add
push
neg
arpl
and
in
mull
sub
or
fmuls
dec
xchg
cmpb
jg
es
xor
xchg
xor
cmp
mov
push
test
add
scas
loopne
mov
nop
cmpsb
cmp
inc
push
push
sub
je
jae
in
lret
mov
popf
mov
push
lock
jl
adc
dec
xchg
mov
push
inc
pop
sub
cltd
lods
aad
jmp
fbld
jbe
inc
lahf
push
out
dec
js
pop
and
lcall
out
xchg
bound
sub
and
or
xor
adc
aam
adc
std
rep
and
xchg
fidivs
pop
pop
add
in
and
sub
xor
fisubrl
mov
and
divl
cmp
sbb
movsb
mov
les
mov
in
mov
sub
inc
cmpsl
imul
add
inc
or
cmp
fwait
dec
aaa
leave
pop
and
sbb
xchg
push
pop
fdivrl
push
rol
or
mov
mov
jmp
js
mov
pop
mov
jmp
dec
pusha
mov
or
flds
cmp
mov
adc
test
lods
ss
pusha
sbb
push
daa
pop
decb
dec
call
pop
xlat
pop
daa
sbb
jmp
int3
inc
adc
pop
stos
sahf
incl
push
icebp
stc
dec
mov
lea
push
mov
out
icebp
push
add
jns
jmp
inc
int3
and
subb
add
jmp
mov
sub
or
xchg
jno
int
popf
shll
ljmp
mov
xor
stos
jno
adc
shl
aad
pop
popa
pop
dec
frstor
shl
adcl
cmp
jge
mov
int
mov
icebp
stc
jecxz
mov
aam
mov
cmp
rolb
inc
test
dec
dec
sbbb
mov
jmp
and
scas
das
lcall
nop
in
arpl
ret
adc
call
lret
xchg
and
icebp
ret
ja
xor
cmp
xchg
loopne
das
xor
or
call
inc
jg
cltd
inc
int
dec
enter
scas
sbb
fdivs
mov
and
mov
ss
insl
xor
fcomps
mov
ss
hlt
pop
lret
in
mov
cld
push
inc
or
les
sbb
sbb
push
ret
cmp
mov
add
push
and
xor
fistl
add
add
cmp
leave
fbld
loope
jbe
dec
jne
pop
gs
xchg
int3
jns
in
flds
add
aam
mov
push
pop
jb
push
cwtl
cmp
push
push
sahf
das
dec
or
cmp
adcl
sub
insl
test
ss
pop
and
mov
or
ror
or
and
push
in
iret
mov
pop
push
xchg
out
insl
psllq
push
in
xchg
mov
in
xchg
sub
insb
hlt
sub
test
dec
sarb
enter
ja
sbb
hlt
mov
cld
xlat
into
stos
mov
outsb
rcll
cmp
mov
add
cmp
test
and
dec
bound
xchg
cmp
es
out
pop
je
push
lds
pop
pop
ret
fimull
sahf
or
inc
icebp
aad
cwtl
test
leave
jb
insl
in
mov
ret
clc
ficompl
mov
iret
movsl
xchg
mov
pop
ja
wrmsr
and
gs
sub
cmp
inc
arpl
add
insb
xchg
int3
cmc
add
mov
stos
xchg
dec
jge
testb
mov
scas
add
xor
sbb
mov
js
cwtl
daa
adc
add
push
shrl
mov
mov
push
jne
daa
aaa
out
jbe
or
lds
jle
dec
cltd
lea
push
jb
test
jmp
jle
ljmp
mov
adc
mov
pop
andb
fcompl
shrb
cmpsb
or
ss
jp
sub
and
or
jne
inc
popa
out
cmc
push
inc
aas
mov
sbb
fnstenv
popf
add
shll
jb
ljmp
xchg
int
arpl
pop
cmp
cltd
fs
scas
dec
add
xor
outsb
cmpsl
lods
pop
shrb
data16
fisubs
push
pop
cwtl
inc
xor
adc
loopne
fisttps
mulb
cwtl
jl
inc
fisubrs
dec
out
add
fsubrs
add
xchg
sbb
xchg
dec
or
mov
cmp
cmp
rolb
jbe
fisubrs
xorb
incb
sbb
mov
sbb
dec
out
add
pop
lcall
lods
call
xchg
aad
push
xchg
adc
sbb
sub
cmp
aad
das
pushf
fistl
test
pop
jbe
jge
or
push
jmp
loope
push
pop
xchg
sbb
sub
push
lods
daa
dec
lods
xchg
add
jmp
pop
loope
dec
das
fnstenv
sbb
lret
test
out
lret
xlat
stc
jb
jl
pop
jb
outsb
cmp
jnp
subb
cltd
int
lea
lcall
adc
leave
or
mov
pop
adc
data16
roll
inc
pop
jb
sbb
jecxz
daa
sub
inc
dec
dec
dec
ret
lods
pop
lret
in
lret
imul
movsb
sub
push
aaa
lods
in
sti
mov
mov
ss
pop
mov
dec
jge
inc
sti
sbb
movsl
sub
adcb
call
xchg
aam
and
adc
push
pop
pusha
cmpl
inc
sub
cmpsl
rclb
jle
stc
insb
adc
fsubrp
push
push
push
aam
inc
mov
cmc
fimuls
mov
mov
sbb
hlt
lds
clc
adc
push
jp
jmp
pop
movsb
ret
cmp
jle
cld
lahf
shrb
lods
sbb
adc
inc
xor
stc
mov
cmpl
mov
ja
loopne
push
xor
cmp
push
inc
jmp
mov
les
aam
popa
pop
mov
je
divl
mov
mov
cmp
adc
les
test
in
lock
dec
lret
pop
repz
cli
sar
fdivrl
scas
or
cmp
adc
mov
sub
loopne
pusha
out
mov
sub
fnstenv
out
fmul
les
cmpsb
sub
or
rcrb
sub
xlat
insl
inc
js
xchg
cltd
push
xchg
pusha
push
or
jg
mov
jbe
test
mov
cmc
sub
adc
pop
xchg
jl
lods
push
jbe
sbb
add
sub
fwait
or
mov
enter
add
je
cltd
shrb
push
sub
mov
test
push
lahf
sub
fisttpl
iret
add
stos
cmp
mov
xchg
inc
rcrb
je
popf
data16
pop
or
xorb
xchg
lret
dec
or
popf
add
stos
adc
insl
xchg
lods
pop
xor
lret
jns
mov
jns
ficoms
xor
decb
dec
es
pop
adc
sti
je
out
js
arpl
divl
mov
mov
std
sahf
into
push
jae
push
adc
rol
fldt
int
adc
sti
push
iret
push
ss
ficoms
frstor
jne
jno
movsb
pop
cltd
mov
sti
or
inc
xchg
imul
xor
cmp
cmc
cld
mov
pushf
sub
and
mov
pop
pusha
lds
imul
mov
shll
sbb
aam
sbb
hlt
jbe
sbb
mov
shrl
lods
xor
sub
dec
rorb
test
jnp
jo
mov
movsl
push
negb
rclb
or
xor
dec
mov
pop
das
fcompl
inc
adc
imul
out
daa
pop
sbb
fstps
lock
or
lds
mov
push
mov
jp
int
dec
scas
stc
stc
outsl
jg
adc
repnz
xlat
inc
mov
push
call
roll
push
lret
rolb
aam
fidivrl
xchg
dec
test
jl
jb
xor
inc
inc
sbb
sub
and
cmp
add
arpl
mov
test
nop
dec
push
decb
adc
int
popf
xchg
popa
inc
adc
cmp
dec
xor
inc
cmp
lret
push
xor
push
push
add
shll
cwtl
add
and
fidivrl
xchg
dec
das
data16
fldl
movsb
or
in
aaa
dec
or
xor
inc
mov
lods
cltd
cmp
popf
xor
sbb
sahf
shl
pop
mov
add
mov
cmp
add
inc
adc
and
imul
jp
push
mov
arpl
sub
jle
sahf
mov
mov
sub
cmp
lret
mov
fisubl
nop
sbb
dec
pop
mov
adc
lods
lea
testb
pop
hlt
mov
mov
xchg
aaa
add
dec
into
into
fsubr
dec
mov
fs
cmp
pop
sahf
arpl
or
fistps
jae
xchg
fnstenv
adc
in
add
imul
cmp
sti
sbb
push
pop
mov
push
test
loop
test
adc
jnp
fldcw
pop
ljmp
or
hlt
dec
es
xor
cmp
out
or
imul
das
sub
push
xor
fcomip
mov
lds
cmp
xor
adc
push
sbb
movsb
xchg
xchg
lods
jb
xor
pop
pop
enter
iret
xor
adc
and
dec
dec
adc
daa
out
cs
cmpsl
mov
mov
mov
jnp
aam
hlt
scas
pop
or
jecxz
movsb
sbb
dec
fwait
xor
sub
cmp
ja
imull
cld
xor
sbb
lret
push
pop
push
mov
in
scas
rcr
loope
loope,pt
test
inc
lods
inc
bound
sub
rcll
in
inc
dec
jb
lcall
xorl
lcall
mov
jmp
jbe
test
inc
xchg
scas
xchg
aaa
js
bound
push
jo
arpl
mov
stos
and
ret
out
test
mov
or
push
jbe
and
push
xchg
xor
mov
xchg
xchg
loopne
stos
mov
in
xchg
shrb
mov
add
pop
shll
inc
sahf
and
insl
lcall
pusha
sub
inc
xchg
and
pop
cmc
jge
mov
cs
leave
pop
sbb
lods
xchg
push
push
or
cmc
cwtl
shlb
es
subl
sbb
add
movsl
push
sbb
mov
mov
aas
daa
cmp
or
fnstsw
pop
push
mov
xlat
pop
arpl
xchg
sbb
add
inc
push
pushl
outsb
mov
repnz
cmp
jle
xlat
xor
lea
repz
scas
pop
xor
shrl
pop
jg
ja
xor
cmp
mov
imul
pop
mov
rolb
or
sub
shlb
mov
push
mov
ret
push
cmp
jnp
push
cmpsb
gs
pushf
fdivl
ret
inc
in
cmc
adc
mov
pop
lods
cmpsl
pop
jg
mov
mov
mov
mov
pop
fcomps
xchg
or
push
mov
inc
sbbl
adc
shlb
sbb
push
push
das
mov
scas
jp
testl
push
add
sub
pop
cmp
inc
pop
scas
out
ret
push
push
cmp
add
add
and
in
or
dec
push
icebp
push
dec
es
mov
dec
insb
loope
jle
call
cmpsl
int3
aad
andb
inc
cmp
pop
ljmp
shrb
pop
test
cmp
pop
sub
xor
aaa
jl
aaa
arpl
mov
jg
aaa
add
sahf
or
sub
es
je
jg
pushf
inc
xorl
or
outsl
cli
sarl
push
inc
mov
push
or
inc
scas
push
adc
test
lahf
inc
sub
jle
std
rcr
ret
dec
or
cmc
out
cmc
je
pusha
insl
inc
cltd
nop
sub
cwtl
mov
iret
inc
andb
cwtl
or
and
roll
mov
jno
cmp
icebp
ret
xor
xchg
inc
out
mov
pop
maskmovq
imull
adc
xor
lret
mov
dec
pop
xchg
in
inc
shrl
pop
sbb
cmp
or
xchg
sti
ljmp
repz
pusha
test
pushf
das
aam
pop
jg
push
and
loopne
xor
sbb
jae
gs
mov
dec
or
pop
cmc
sub
lods
loop
mov
mov
loope
icebp
pop
fsubs
jl
or
test
push
push
adc
mov
insb
into
xor
mov
dec
stos
repnz
push
push
leave
sbb
cmp
les
sub
addr16
mov
pop
adc
adcb
jecxz
in
dec
mov
dec
dec
sub
subb
jle
jb
das
xorl
pop
ret
add
mov
scas
push
les
or
stos
ljmp
cltd
mov
lds
ret
test
ret
push
test
add
les
adc
cmp
push
inc
xor
je
mov
cmp
mov
ss
xor
push
cld
clc
dec
fistps
bound
and
jmp
shll
jno
push
cld
or
cld
fdiv
or
or
pop
subb
xor
mov
or
cmp
jecxz
push
ja
orl
stos
cmpl
mov
or
inc
ljmp
xchg
ss
js
aaa
loope
ror
xchg
sub
pop
dec
jge
xchg
push
push
dec
jl
movsl
and
bound
mov
stos
xchg
fists
xchg
push
push
xchg
loopne
jmp
push
sub
testb
xor
stos
fistps
sub
int
pop
fisubrl
dec
inc
bnd
mov
pop
xor
add
push
insb
test
mov
out
test
int3
mov
pop
in
sbb
std
add
push
into
lret
mov
fs
dec
cmp
push
dec
mov
icebp
inc
pop
mov
adcl
adc
push
ffree
cwtl
jl
cltd
jae
add
pop
jp
je
es
sub
sbb
pop
dec
stos
and
inc
sbb
mov
inc
fisubs
out
ret
insl
inc
lds
push
test
adc
add
mov
adc
mov
add
adc
xchg
push
xor
jmp
movsl
xor
push
mov
add
inc
mov
cld
pop
inc
in
out
fstps
mov
xor
outsl
fcomps
fld
ret
mov
mov
repnz
dec
int3
test
into
mov
xor
jb
jecxz
fs
out
xchg
cmc
into
adc
cmpsb
out
sbbl
inc
mov
or
sub
mov
cmp
in
adc
xchg
shrl
cmp
or
nop
stc
mov
xor
jb
mov
xor
inc
pop
imul
inc
js,pt
jbe
stos
in
test
and
or
pop
jg
xchg
lret
jnp
mov
out
jg
ljmp
mov
jge
aam
imul
clc
add
ja
and
cmp
ss
clc
cli
sub
add
adc
dec
jb
xchg
cs
push
fidivrl
mov
pop
out
fdivrs
adc
xchg
cli
dec
add
cmc
outsb
jecxz
pop
adcb
jl
lret
sbb
sub
push
xchg
pop
adc
mov
in
dec
hlt
out
rorb
ret
lret
push
negl
sub
and
sarl
dec
enter
shll
pop
mov
sub
aas
pusha
sub
mov
add
icebp
cmp
popa
cs
int
daa
xor
aad
sahf
fbstp
sbb
cmp
cwtl
orb
and
enter
lret
xor
loope
test
ja
mov
iret
iret
jne
jno
or
je
sbbl
jo
call
hlt
push
aam
sub
ds
addr16
mov
dec
mov
push
push
jecxz
adc
call
int
dec
ret
sbb
jp
dec
sti
std
ljmp
lret
cli
cmp
in
xor
icebp
mov
stc
pop
push
push
dec
inc
dec
sbb
add
mov
xchg
and
xlat
adc
jbe
jmp
xchg
push
jl
dec
mov
or
insl
je
xchg
les
bound
repz
add
notb
mov
cmp
inc
mov
mov
push
lcall
push
jmp
or
jb
push
enter
inc
or
lods
dec
imul
in
cmc
dec
sarb
mov
jle
cmc
sub
shl
add
mov
jmp
mov
lods
push
repz
cmpsb
dec
sti
sub
shrd
mov
and
lods
mov
test
into
lret
inc
push
add
xchg
push
sbb
pop
inc
sbb
ds
repz
add
cmp
dec
inc
add
in
push
jne
mov
lret
loope
stos
push
addb
gs
scas
fsubl
dec
xchg
sbb
shl
rep
sub
mov
call
sbb
hlt
mov
push
pusha
dec
pop
shr
mov
jnp
fildll
mov
aam
sbb
cmp
bnd
xor
adc
shll
data16
orb
jno
das
jecxz
xor
mov
sub
in
sbb
popf
mov
inc
fwait
add
lcall
aam
add
shr
jge
rcrl
movsl
dec
xor
pop
call
cli
jg
or
dec
or
nop
fimull
loope
jne
outsl
loopne
popf
into
mov
inc
popa
mov
jp
and
or
sub
sti
stos
incb
sbb
adc
icebp
lcall
adc
lds
dec
std
fisubl
push
daa
pop
or
mov
adcb
hlt
add
sub
or
mov
mov
jl
mov
inc
xor
pop
mov
sarl
sbb
mov
push
fadds
outsl
or
cmp
aad
adc
adc
push
es
xchg
jbe
add
mov
mov
movl
in
imul
xlat
cmpsl
push
or
out
repnz
adc
popa
pusha
clts
xor
add
pop
jmp
xor
pushf
lds
fisubs
popf
pop
repnz
mov
mov
lods
leave
jno
jae
daa
sahf
outsb
fiadds
mov
loope
pop
push
jecxz
and
sbb
cmp
mov
mov
loop
dec
lcall
gs
in
or
sti
arpl
lahf
sbb
test
arpl
xchg
push
mov
clc
cmp
jae
lods
pop
arpl
lcall
push
cmovg
xchg
aas
adc
test
sbb
pop
mov
xchg
fildl
test
pop
fistpll
test
lret
mov
cwtl
clc
inc
icebp
adc
pushf
aam
push
bound
nop
xor
xchg
popa
stos
xor
inc
test
nop
push
mov
ds
int
sbb
xor
lret
mov
push
in
adc
repz
sbb
dec
mov
das
lret
xchg
push
mov
ja
in
insl
sbb
jae
mov
mov
je
icebp
popa
pop
sbb
test
jle
dec
inc
ljmp
loope
xchg
push
jnp
sub
mov
outsb
out
sbbb
rcll
je
xor
call
push
sub
jbe
sbb
xchg
jae
adc
lock
dec
loop
rorl
lcall
adc
sub
lret
addr16
je
dec
lods
arpl
in
inc
in
xor
je
sti
dec
lods
mov
cmc
mov
adc
imul
jg
shlb
mov
fisubrs
and
imul
add
stc
mov
scas
jge
sub
std
sub
nop
mov
mov
insl
push
lock
ret
pusha
daa
lods
and
adc
dec
divl
fadds
and
lret
dec
repnz
in
clc
lods
fcompp
es
pop
jecxz
jno
inc
inc
out
dec
jne
fwait
stos
xchg
dec
ss
out
push
push
cs
and
pop
sarl
leave
pop
rolb
lret
pop
aam
xchg
loope
mov
movsb
in
pop
in
ret
movsb
adc
data16
mov
fistps
pop
mov
mov
jae
inc
cmp
cwtl
mov
icebp
outsl
rolb
jae
ret
rcrb
pop
xorps
fs
les
std
mov
cmpsl
and
mov
xchg
inc
mov
push
mov
mov
mov
pop
mov
jp
mov
cmovns
mov
popa
stc
test
arpl
xor
jnp
mov
lods
mov
sub
scas
lds
mov
fucomip
inc
pusha
in
rcl
cs
loopne
mov
std
lds
mov
rcrb
in
out
rcr
inc
inc
enter
popf
jo
ret
pusha
inc
cmp
pop
dec
inc
inc
dec
loopne
mov
inc
lods
inc
mov
std
cmp
loope
fstl
je
dec
lods
dec
filds
decl
push
sub
fucom
jl
xorl
inc
cmp
int
out
inc
test
add
inc
ss
push
jb
jecxz
imul
nop
sbb
lret
jl
test
insb
or
mov
data16
jne
dec
jb
fistpll
pop
and
stos
das
mov
push
push
in
lods
mov
mov
fwait
jns
xchg
xor
outsl
push
lret
sub
mov
mov
stc
xchg
or
dec
rcrl
push
or
rcl
mov
cmp
popf
idiv
push
mov
xor
out
lcall
call
repz
fstpt
repnz
mov
jmp
nop
cltd
dec
push
clc
jmp
adc
pmuludq
xchg
popf
and
xchg
add
push
sbb
je
fidivrl
mov
fcomi
mov
jmp
mov
sub
fsubr
xlat
pusha
push
outsl
and
mov
or
mov
ror
cltd
ja
shlb
stos
mov
push
mov
mov
into
dec
sbb
xchg
lea
shrl
into
sub
icebp
sub
mov
cmp
inc
xor
shll
insl
jmp
sbb
rcl
neg
dec
dec
les
test
pop
xor
mov
mov
cwtl
mov
fs
push
cltd
std
cmp
mov
mov
push
loopne
add
int3
inc
test
mov
push
cmc
xchg
push
fsubs
or
lcall
shll
ret
push
cmp
cmp
aam
push
insl
test
xchg
stos
xchg
dec
sbb
stos
shl
scas
lods
pop
test
lods
xorb
sub
movsb
ficompl
push
xor
mov
test
pop
pop
sbb
sub
jo
gs
mov
pop
sbb
icebp
call
cwtl
in
ss
jg
jg
rclb
lcall
rcrb
iret
jle
sub
mov
push
xor
or
fidivrl
call
test
xchg
dec
or
sub
das
jno
scas
ds
imull
sub
mov
aad
mov
inc
and
xchg
inc
jl
push
sub
imul
and
dec
js
outsb
inc
xor
or
pusha
and
push
shl
mov
mov
dec
imulb
mov
or
xchg
data16
filds
xchg
dec
jae
cmp
repz
adc
addr16
repnz
xor
add
out
ss
shll
pop
jb
cli
popf
sub
xchg
xor
xor
cmpsb
mov
cmp
imul
dec
shrl
add
push
cmp
ds
and
sbb
pusha
mov
mull
and
jae
xchg
or
xchg
cwtl
inc
mov
mov
adc
psubusw
imul
call
outsb
std
bound
and
jge
lcall
popf
std
scas
lea
pop
xor
mov
lcall
jp
jns
subb
and
push
push
lods
sbbb
mov
sub
or
and
test
int3
add
ficoms
xorl
mov
mov
jl
out
mov
gs
ja
jae
pop
pop
shll
movsb
add
push
aaa
push
mov
or
orb
loopne
adcb
mov
shlb
orb
dec
xor
loop
popf
mov
mov
mov
loopne
fcomip
or
nop
sub
xchg
cmp
lea
xor
push
push
fisubrs
xchg
nop
pusha
arpl
call
mov
into
shrl
sahf
call
int
xor
adc
push
mov
and
push
xchg
popf
mov
mov
lret
push
push
das
enter
or
pop
xchg
mov
out
or
push
push
sub
jg
mov
cmp
mov
jns
loope
fiaddl
aam
add
lahf
inc
fsubp
clc
jecxz
lea
dec
mov
notl
pusha
mov
sbb
ficoml
jno
mull
cltd
push
push
rsm
sub
mov
in
mov
xchg
fiaddl
or
lods
push
aaa
pop
push
mov
add
and
out
lods
xchg
mov
xor
lock
fstpt
cmp
add
std
movzbl
cwtl
push
mov
test
dec
dec
into
xchg
xchg
cwtl
jmp
push
xorl
rcll
xor
ret
cmc
clc
js
and
mov
and
data16
jg
push
scas
adc
stos
xchg
test
push
pop
loope
jecxz
and
jl
mov
sbb
push
sahf
xlat
mov
popa
insb
and
or
cmp
mov
mov
sbb
adcl
movsb
dec
icebp
xchg
or
ficompl
or
xor
rolb
mov
shrb
inc
ds
adc
mov
enter
and
cltd
and
insb
mov
push
gs
pop
outsl
xlat
fistpl
psubusw
test
test
mov
jecxz
xchg
pop
sbb
pushf
sahf
or
lahf
xor
dec
in
or
and
and
sub
dec
pop
pop
scas
adc
pop
test
in
cmp
les
loop
ljmp
int3
comiss
cs
insb
aad
adc
andnps
sub
pop
push
fistl
push
insl
xchg
inc
and
mov
loop
cld
movsb
scas
call
out
jecxz
daa
ret
jae
and
es
add
sti
lods
inc
imul
ret
nop
pop
mov
xchg
or
test
adc
cmc
adc
or
test
add
fiaddl
push
sub
xchg
mov
sahf
mov
sub
xor
popf
pop
mov
dec
or
stos
mov
jae
shrb
pop
test
lods
adc
cmp
mov
pop
das
test
lds
jns
push
out
int
or
or
scas
ds
and
inc
xor
dec
push
popf
or
orl
sbb
xchg
loope
fldl
mov
mov
add
dec
dec
xchg
or
setnp
je
xchg
imul
or
movsb
cmp
in
inc
sti
or
dec
dec
push
push
and
ret
repz
mov
mov
stc
test
add
adc
test
or
ds
in
jp
mov
mov
pop
jmp
push
push
popf
je
push
jb
and
dec
mov
divl
cmp
mov
popf
dec
push
lock
push
popf
fidivrs
adc
es
jmp
add
out
xor
adc
outsl
popa
cmp
adc
add
mov
xchg
imul
xchg
repnz
stos
jae
push
dec
mov
pop
mov
popa
pop
andl
arpl
cmp
loope
sbb
shrb
ret
hlt
or
call
mov
mov
push
cwtl
push
push
dec
ret
scas
test
push
ljmp
inc
mov
fnstenv
sub
out
inc
pop
xor
sub
lret
dec
pinsrw
push
adc
fbld
xor
lret
shlb
roll
js
mov
jns
in
xchg
pop
xlat
out
repnz
xchg
hlt
pop
inc
int3
rcll
fcmovb
outsb
test
lock
ficomps
das
cltd
adc
pop
pop
jno
sub
pop
jmp
sahf
or
mov
loope
sbb
stos
jecxz
add
mov
add
cmpsb
cmpsl
js
adc
filds
addb
enter
enter
xchg
daa
jno
bnd
lds
sbb
movsb
aad
fmuls
inc
dec
mov
or
imull
mov
xchg
jo
cmc
addl
mov
mov
inc
inc
popa
leave
es
fsubrl
mov
int3
adc
out
xor
mov
mov
rcr
dec
pop
aad
and
data16
jne
leave
aas
cld
adc
cltd
inc
dec
cmpsb
push
inc
movsl
mov
std
jno
loop
lea
lahf
aam
push
enter
cmp
mov
cltd
mov
or
sub
mov
push
mov
inc
clc
add
push
inc
fcoml
fsubrp
mov
aad
stc
xchg
cmc
lock
xchg
outsl
js
into
add
cwtl
cmp
mov
xchg
daa
daa
push
xchg
add
pop
dec
jb
mov
cmc
pushf
scas
cmpsb
rolb
lret
hlt
outsl
cli
stc
jno
dec
mov
insb
ljmp
mov
xor
sarb
shlb
loope
jle
cmp
or
mov
movsb
pop
adc
mov
outsl
mov
inc
test
scas
jp
ror
adc
leave
pavgb
pop
repz
push
cli
dec
inc
repz
dec
cs
in
lea
mov
std
stc
or
push
pop
jno
xchg
movl
ror
mov
mov
fcompl
jae
sub
jmp
inc
dec
lea
mov
std
push
mov
mov
sub
pop
mov
or
es
loope
rcl
icebp
inc
outsl
lcall
loopne
push
ja
jne
aaa
gs
mov
cmp
lods
sbb
das
jge
stos
ret
lods
mov
or
inc
sub
ds
sub
shl
imul
ja
xchg
jno
call
pop
mov
pop
mov
jl
cmp
xchg
and
sbb
movsl
mov
adc
dec
jl
jns
idivb
pop
stos
movsb
xor
or
sbb
mov
hlt
adc
loop,pn
repnz
repz
popa
or
outsl
sub
pop
cmpsl
insb
mov
xor
xor
inc
ja
xor
or
mov
xor
jmp
sub
inc
mov
cmp
xor
adc
pop
dec
lea
jle
and
push
sti
sbb
sahf
adc
jne
icebp
xchg
iret
jmp
sub
popa
ljmp
jb
xor
nop
and
ficompl
xchg
rorl
mov
pop
or
movsb
aad
sub
inc
dec
cmp
or
pop
mov
xchg
clc
cmc
notb
mov
xor
test
inc
out
imul
lea
mov
jbe
pop
ficoms
pop
lcall
ss
das
popf
dec
aam
dec
sub
jbe
out
inc
ja
ljmp
aam
or
ljmp
dec
ret
sbb
stc
dec
sbb
xchg
sub
ljmp
outsb
add
ljmp
jl
int3
xor
ds
outsb
sub
lahf
das
jmp
sbb
adc
xor
fnstcw
repz
dec
shlb
adc
bound
or
mov
stos
fmull
ret
aad
sbb
iret
xor
mov
mov
scas
insb
jmp
jb
in
or
add
mov
xchg
pop
out
dec
adc
pop
push
adc
and
xor
mov
add
push
pop
mov
int
lcall
inc
xlat
xor
sahf
mov
sahf
mov
imulb
inc
pop
push
test
push
fwait
adc
enter
repnz
xchg
aaa
mov
push
push
shlb
fidivrl
addr16
lret
inc
ror
stc
inc
loope
and
xor
stos
sub
push
rolb
pop
or
push
inc
add
jmp
rcrb
inc
clc
js
inc
loopne
imull
test
in
push
push
mov
incb
pop
inc
inc
dec
imul
mov
cmp
push
or
xor
cmpsb
in
adcb
inc
addr16
fcoml
hlt
mov
movsb
add
jnp
ljmp
or
mov
mov
ret
divl
aas
jnp
movsb
mov
or
pop
aaa
jns
bound
push
inc
sub
aad
test
test
cmpsl
das
inc
mov
bound
dec
cmp
addr16
bound
push
sub
rorb
push
fidivrl
aam
mov
sub
imul
cmp
push
popf
js
xchg
or
sub
pop
shr
pop
xchg
mov
push
cs
in
xchg
mov
mov
dec
insl
jne
lods
add
push
dec
mov
lcall
js
dec
idivl
pop
push
aad
mov
jg
mov
fucom
dec
add
shlb
push
jl
dec
push
mov
into
cmp
pop
jb
roll
imulb
orl
les
sarl
idivb
mov
out
mov
xor
imul
xchg
xchg
dec
outsl
sub
vpmullw
fistl
aaa
push
adc
sbbb
jecxz
jecxz
pop
sub
push
xchg
push
popa
int3
in
adc
push
psrld
imul
iret
inc
mov
outsb
scas
cmpl
inc
sarl
repz
test
push
lock
ret
sahf
xchg
xchg
or
cmp
dec
ret
nop
sti
or
mov
in
out
out
cmp
data16
ja
dec
sbb
adc
les
sub
nop/reserved
push
ret
cmp
dec
ja
stc
ret
lea
lret
add
das
cltd
cmp
sbb
cmpsb
insl
lds
mov
ret
lds
xlat
mov
dec
xchg
stos
or
sbb
shrb
xchg
mov
aad
sbb
or
xor
in
xor
sub
aaa
xchg
loope
pop
pop
dec
ret
cmp
inc
lods
out
lock
lea
push
xor
mov
js
mov
aam
xor
int3
push
addr16
andl
jnp
dec
shlb
sbb
adc
stos
jo
mov
lret
pop
or
stos
fs
loopne
sub
dec
mov
nop
cli
dec
in
sbb
insl
pop
mov
lods
dec
mov
xlat
inc
test
or
arpl
push
sbb
mov
aad
mov
push
pop
test
lahf
push
pop
cmp
fsubrs
sub
test
inc
pop
mov
sub
jge
adc
mov
jo
out
decb
movsb
lret
pop
xor
lds
vfrczss
dec
push
adc
sbb
popf
adc
xchg
test
push
pop
mov
popa
and
xchg
adc
or
out
or
loopne
push
adc
jge
mov
sub
test
ret
stos
mov
cmpsl
movb
sbb
inc
sbb
push
and
add
je
out
jecxz
or
scas
inc
pop
out
in
sub
mov
outsb
inc
shlb
lret
fnstenv
or
iret
movsb
leave
and
push
xlat
lods
dec
inc
ret
mov
or
mov
jl
cltd
sub
mov
movsl
decb
pop
fdivrp
pop
sbb
test
xor
cmp
inc
mov
cmp
lahf
or
lahf
xor
enter
sub
aad
inc
ljmp
mov
add
data16
push
jb
fcmovbe
mov
inc
shll
clc
mov
sti
jp
sbb
sbb
push
mov
cs
iret
xchg
push
int
dec
pop
push
pop
mov
jge
pop
adc
cs
inc
sbb
mov
pop
lret
mov
rcll
data16
movsl
fwait
test
cld
pop
mov
jo
xchg
fs
sub
add
adc
inc
outsb
inc
mov
pop
fs
in
adc
repz
and
fnsave
stos
sarl
mov
pop
mov
mov
push
add
lock
sbb
dec
in
outsl
xchg
mov
dec
imul
pushf
sbb
shr
and
or
and
out
mov
inc
xchg
xor
movsl
push
mov
add
scas
cli
aad
fmull
mov
hlt
std
cli
mov
cmpsl
js
loopne
lds
and
push
sbb
push
out
out
divb
cmpsl
ljmp
xchg
xor
mov
ret
pop
es
cmp
fs
push
pop
and
add
jp
cmpsb
pop
push
mov
pop
movsl
push
add
test
jecxz
mov
pop
out
and
jne
xchg
mov
fistl
cmp
inc
and
xor
xor
sub
sbb
incb
jns
jns
mov
inc
je
push
push
xor
loop
sbb
jo
or
jl
das
pop
ds
dec
sbb
pop
inc
lret
shlb
test
sub
pop
imul
fisttpl
push
sub
sbbl
and
mov
ja
aad
lret
dec
mov
stos
aad
cli
lods
mull
movsl
outsl
repnz
dec
in
fdivrs
push
and
test
mov
test
inc
mov
ret
movsl
mov
pop
aaa
and
movsl
movsb
lahf
std
mov
movsb
or
xchg
push
test
xchg
ss
loop
xchg
pushf
test
lcall
js
in
mov
xlat
lret
push
into
mov
scas
mov
push
jnp
pusha
xor
flds
test
ss
push
adc
add
aam
dec
pop
dec
jno
dec
add
adc
mov
mov
leave
imul
in
xchg
sbb
cmp
or
add
sbb
inc
cmpb
fistl
data16
mov
pop
in
mov
incl
mov
push
adc
push
pop
sbb
mov
mov
fs
cwtl
push
into
loopne
push
int
loop
mov
pop
jbe
imul
sbb
inc
cmpsb
mov
call
ss
daa
jmp
mov
call
es
pop
in
jl
sub
in
jb
in
or
aad
loope
shl
jns
bound
les
jae
jnp
scas
cld
addr16
adc
stos
shrl
mulb
mov
sbb
mov
aam
out
jp
jne
pop
lock
int3
jle
dec
mov
jb
and
add
shll
push
mov
push
jo
in
adc
cmp
jg
mov
inc
cmp
je
sub
jo
jecxz
leave
jnp
sub
mov
jns
mov
ljmp
jp
aas
mov
ret
into
loopne
decb
xor
cmp
mov
pop
gs
inc
push
sbb
mov
xchg
pop
outsl
arpl
mov
outsl
testb
pop
jnp
out
hlt
xlat
xchg
mov
adc
in
jbe
push
xchg
push
mov
out
or
mov
mov
mov
daa
dec
adc
aam
xor
dec
or
cli
and
xchg
fbstp
mov
adc
das
mov
stos
mov
push
fisttps
push
sahf
xchg
inc
jge
int
push
mov
inc
mov
ret
outsb
sahf
push
subl
xor
push
mov
lcall
sbb
xlat
push
imul
sbb
mov
sti
enter
mov
notb
mov
add
shlb
cmp
iret
icebp
inc
or
out
cmp
jp
aam
push
pop
mov
add
push
mov
dec
cmp
mov
jge
push
adc
xchg
outsb
xchg
inc
es
movsl
aaa
loopne
std
ss
fwait
lods
xor
xchg
push
fsubrl
cmpsb
in
dec
fcmovu
jb
pop
xlat
jle
cmp
mov
jecxz
insb
cmc
inc
fstpl
or
mov
fisttpl
repnz
push
sti
jno
mov
or
mov
push
add
sarb
jge
ljmp
in
arpl
push
sahf
xor
div
bound
jbe
jo
mov
fs
push
nop
movsb
imul
mov
shlb
cmp
test
push
arpl
inc
push
bound
inc
mov
pop
cltd
mov
dec
push
fmuls
jno
pop
or
sbb
dec
or
dec
cmp
repz
cmp
dec
repnz
enter
stos
adc
outsb
push
popa
mov
insl
add
adc
adc
or
and
add
jne
fldt
loop
call
adc
and
mov
jne
mov
push
mov
dec
cmp
mov
or
push
iret
sbb
cmpsl
fldenv
das
push
or
pop
sub
mov
pop
movl
lds
push
clc
arpl
add
in
cmpl
xchg
jne
xor
call
loopne
data16
sarl
cmp
movsb
jmp
sbb
sahf
adc
fxch
xchg
xchg
cmp
pop
add
bound
cltd
sub
sub
outsl
push
inc
jb
fs
in
and
push
xchg
cmc
rcr
lods
ud2
cwtl
flds
inc
sbb
lods
out
pusha
icebp
and
pop
mov
sub
add
fwait
adc
int3
incb
out
shll
sub
scas
sub
lahf
xchg
or
mov
lds
nop
inc
sbb
add
imul
or
loope
mov
push
mov
jns
mov
shrb
gs
and
mov
lcall
adc
adcl
cmp
ja
jns
cmpsb
or
jmp
and
clc
jo
xor
cmpb
xor
insb
fdivrs
in
andb
jg
fiaddl
lcall
sbb
mov
out
in
ss
stos
or
jge
shrw
add
mov
pop
xor
lahf
push
xor
push
scas
xchg
mov
clc
pop
pop
add
and
cli
add
push
mov
outsl
ja
cmp
or
scas
xor
mov
xchg
mov
sbb
fcmovnbe
push
lahf
es
add
push
and
add
pop
inc
or
lret
sub
inc
or
addr16
imul
push
nop
enter
pushw
inc
lock
shr
lret
out
jg
arpl
call
xchg
pop
daa
in
add
xchg
push
clc
adc
mov
sbb
push
insl
cmp
cld
mov
bound
movsb
fisttps
cmp
pop
xlat
push
shrl
ja
bound
mov
add
in
ss
out
xchg
bound
push
aad
inc
jle
ret
rcr
fnstenv
cs
jnp
sti
aas
dec
cli
push
movsl
xor
cwtl
xchg
test
fisubs
vmovaps
popa
pushf
flds
sti
and
stos
pop
xor
push
fs
push
sub
xor
pop
sbb
adc
sub
or
adc
loop
lret
aas
insb
mov
rolb
sbb
ret
addr16
test
xor
dec
bound
dec
inc
and
lret
out
nop
gs
test
dec
shrl
popa
mov
js
addb
mov
push
shll
movsb
pop
push
outsb
data16
lret
sub
dec
lea
mov
aad
inc
pop
mov
pop
hlt
leave
aam
pop
and
xor
cltd
clc
sbb
or
xchg
pop
cld
cmc
call
cltd
adc
adc
cmp
mov
loopne
jp
adc
sarl
hlt
sub
push
js
jg
test
mov
xor
add
test
movsb
or
outsb
repnz
cmp
fsubl
test
fdiv
mov
int
mov
enter
push
xlat
repnz
aam
fstps
jns
fnstenv
mov
js
in
sbb
test
xchg
repz
jge
cmp
sub
daa
inc
pop
sti
push
lds
cmp
mov
xor
mov
push
in
lods
sahf
mov
mov
iret
xchg
jb
das
push
mov
add
mov
daa
pop
dec
adc
push
lods
mov
xor
mov
adc
xor
addl
push
inc
inc
adc
aaa
lcall
push
aaa
cmc
jno
jmp
pop
outsl
stc
out
pop
push
mov
pop
push
std
and
fcoms
cmc
test
call
xchg
loope
lods
nop
data16
xchg
stc
repnz
xlat
jno
pop
inc
cli
sbb
adc
jp
push
loopne
cmp
test
dec
jp
jns
mov
fimuls
adc
and
div
insl
pusha
pusha
test
je
out
lock
mov
into
mov
push
adc
test
sub
lret
adc
and
inc
mov
fwait
mov
imul
call
mov
in
mov
call
mov
arpl
mov
loopne
pop
adc
mov
mov
push
sub
jge
cmp
jbe
pop
lret
and
and
imul
pop
dec
lahf
aad
lret
out
xchg
adc
es
clc
xchg
dec
sbb
mov
roll
sub
sub
xor
push
ret
xchg
sub
xchg
or
inc
jb
inc
movsl
cld
or
ficoms
mov
enter
pop
sbb
mov
xor
out
imul
mov
xor
nop
sbb
mov
negl
jno
not
fnstcw
pop
mov
adc
out
aaa
outsl
jecxz
mov
adc
xorl
push
mov
das
add
or
adc
lahf
icebp
xorl
outsb
or
mov
dec
js
popa
pop
bound
add
and
insb
push
frndint
mov
mov
scas
pushl
mov
fwait
daa
sbb
xlat
aaa
int3
xchg
mov
lahf
cmpsl
std
add
lret
xchg
movsb
adc
test
and
popl
filds
adc
jl
sbb
cmp
jmp
cmpsb
push
inc
jg
push
dec
imul
xchg
popa
divl
js
push
jle
repz
inc
cmp
jge
and
call
les
andb
scas
movsl
and
fsubs
scas
push
pop
loopne
shlb
jns
rcr
rcr
inc
addl
push
jae
mov
bound
mov
lods
and
push
notb
rcll
lods
pop
sub
fstl
and
mov
nop
mov
inc
sbb
xchg
test
inc
repz
mov
and
dec
ret
popf
insb
loopne
sahf
fcmovnu
fcoml
adc
jns
jl
sbb
xor
dec
subl
std
dec
sub
adc
in
ja
test
mov
icebp
movsl
dec
push
sub
outsb
cmpsb
jo
jb
stos
data16
in
jle
icebp
cmp
das
push
and
dec
push
ja
cmp
in
cmp
inc
rorl
call
rclb
ljmp
wbinvd
arpl
clc
ret
lcall
xor
repnz
xor
das
inc
ljmp
ret
sbb
mov
lea
lret
adc
xor
les
lea
xchg
mov
je
ret
mov
xchg
sub
push
pop
sub
adc
sub
les
stos
dec
icebp
xlat
stos
cli
mov
push
pop
add
repz
inc
adc
sbb
arpl
mov
jns
xchg
testb
jns
mov
mov
cltd
jne
cltd
andl
addb
fistpll
and
xor
or
push
sbb
mov
pop
movups
add
and
pop
sub
es
push
inc
inc
jnp
int
cmp
ret
fwait
das
xchg
mov
jmp
mov
and
pop
in
cmp
jl
nop
mov
push
xor
cmpsl
mov
cs
sarb
icebp
xor
pop
inc
add
insb
jno
pop
sub
jg
inc
and
fs
imul
push
mov
jecxz
or
adc
lds
mov
mov
loope
mov
and
outsl
bound
xchg
inc
scas
pop
jbe
add
ud1
pop
cmpsl
rolb
shll
ficoms
fcomps
shll
in
iret
jae
push
sub
mov
call
xor
adc
int
decb
ds
fldenv
loopne
mov
sbb
lahf
adc
repz
pop
lcall
out
jb
stos
inc
jb
cmpsl
jne
stos
lret
sbbb
cltd
daa
push
and
cs
dec
idivb
into
xchg
adc
std
movsl
and
daa
mov
mov
movsl
push
adc
ljmp
dec
adc
push
shl
sti
fists
xchg
sbb
push
lret
enter
pop
jl
fcmovnb
cmpsl
sahf
test
push
mov
int3
ja
or
xor
push
inc
xlat
xor
xor
lahf
adc
push
mov
addb
loopne
inc
pop
pop
or
mov
es
test
pop
mov
adc
jb
and
lock
mov
mov
and
xchg
cmp
push
movsl
cmp
mov
push
push
mov
sbb
jge
outsb
iret
mov
adc
mov
dec
daa
mov
and
rorb
adc
sbb
and
xchg
stos
jmp
sbb
sbb
pop
aam
xchg
rolb
shll
push
popa
roll
cbtw
inc
out
sub
lcall
ret
das
xchg
mov
sbb
fistl
inc
pop
pusha
in
stos
andb
mov
es
insl
loop
enter
xchg
jne
dec
push
pop
and
movsl
jb
ja
inc
lods
test
sbb
mov
fistpll
mov
test
jmp
loopne
daa
stc
jo
movsl
pop
dec
std
iret
gs
test
push
stos
lods
lahf
and
iret
aas
xchg
out
push
xor
push
adc
adc
sbb
mov
aad
test
es
xchg
ror
push
test
ffree
pop
test
xchg
dec
ja
adc
xchg
cwtl
dec
inc
jmp
insl
fwait
or
lcall
int
cmp
scas
addr16
pop
divl
jno
out
mov
mov
hlt
mov
sbb
ja
jae
jno
pop
pop
mov
je
bndldx
aaa
das
dec
mov
sbb
adc
scas
xor
xchg
movsl
xchg
jns
xchg
int3
orb
dec
push
jmp
sbb
jbe
and
call
dec
xor
pushf
cli
dec
and
lahf
add
cmc
pop
rcll
mov
adc
insb
xor
das
lods
cmpl
mov
push
push
and
inc
stos
and
inc
inc
test
imul
ret
insl
es
std
jns
mov
outsb
sbb
js
movsb
repz
inc
mov
cmc
mov
cld
cmp
loop
ja
insl
loopne
sbb
push
push
into
and
adc
jbe
and
dec
add
push
pusha
jg
mov
test
ja
fsub
ret
mov
inc
in
repz
and
sub
frstor
mov
into
cld
xchg
mov
test
jmp
mov
xchg
sbb
sahf
mov
push
ljmp
lock
sbb
xor
int
shrl
imul
outsl
lret
rcl
xor
xchg
and
pushf
into
mov
lods
mov
pop
mov
inc
sarl
dec
in
repz
iret
inc
ret
dec
dec
fwait
dec
popa
sbb
pop
adc
aas
jo
fistpl
sub
inc
roll
or
push
pop
ss
push
std
sub
and
cli
xchg
sub
xchg
xchg
fdivrp
fwait
and
leave
jb
ss
icebp
leave
or
xor
jmp
pop
bound
inc
lds
adc
ficompl
es
push
dec
ds
std
jl
xchg
jno
xor
xchg
push
pop
test
push
bound
push
aaa
in
jp
inc
lret
cmp
mov
cmp
fwait
cmpsb
pop
sbb
or
inc
xchg
push
test
push
lods
std
lcall
pop
push
roll
or
cmp
je
pop
ret
nop
icebp
xor
cmp
or
sub
movl
cmpsl
dec
push
vmread
lods
mov
lcall
xchg
mov
stos
mov
orl
mov
pop
push
cs
mov
cwtl
js
call
mov
and
sbb
mov
jno
xorb
push
repnz
shl
jge
mov
pop
push
fnstenv
cmp
cmp
jp
add
jo
aad
stos
mov
out
outsb
jnp
cmp
dec
fwait
inc
add
or
fstps
and
int3
lods
push
xchg
cld
jecxz
pop
push
loop
xor
jo
mov
or
sbb
push
inc
movsl
lret
sub
leave
imul
add
test
std
mov
sbb
lret
inc
sarb
jmp
subl
xor
jl
cmp
scas
stos
inc
daa
sub
pop
shlb
xchg
mov
dec
dec
sti
test
sti
in
imul
pop
inc
jo
inc
orl
cmpsb
out
mov
lret
lock
mov
dec
xchg
lea
or
roll
dec
sbb
clc
jae
inc
int3
mov
add
jb
or
in
mov
imul
mov
add
jp
dec
jl
add
add
cld
add
push
adc
xor
mov
or
enter
xchg
call
popf
clc
mov
pop
loopne
mov
dec
jp
xlat
mov
aad
mov
lret
scas
and
test
push
adc
fdivrl
cs
xchg
xchg
roll
jbe
lahf
sbb
jae
jnp
leave
sbb
leave
xor
prefetch
arpl
mov
mov
mov
popa
inc
push
ss
stc
push
jle
aaa
mov
fbld
and
or
mov
jae
iret
xchg
mov
xor
ret
push
lods
cmp
push
mov
jb
and
pop
add
arpl
filds
shlb
jno
or
jnp
adc
rcr
jle
pop
inc
jg
xchg
lret
stos
add
mov
daa
mov
xchg
or
push
nop
lods
or
test
jmp
add
push
jbe
mov
adc
cmc
inc
mov
test
mov
lock
sub
insl
hlt
inc
out
repz
aas
ficomps
shll
cmpl
push
cwtl
pop
sti
cli
insl
ljmp
cmp
aad
or
add
les
push
lahf
xor
aad
aaa
lods
and
je
xor
shrl
mov
xchg
xchg
imul
jns
sub
test
lret
dec
movsl
xchg
cltd
rcll
mov
inc
movsl
lods
push
mov
rolb
mov
insl
out
mov
add
push
push
iret
les
loope
fdivl
inc
test
and
lahf
or
lock
pop
movsl
xor
pop
dec
jno
in
xor
outsl
aas
pop
mov
xor
mov
pmulhuw
into
adc
push
jne
xchg
pop
dec
mov
test
mov
pushf
xor
imul
adc
xchg
jg
cmp
push
scas
adc
xchg
insb
aas
dec
cmpsl
rcll
mov
xchg
xchg
addr16
std
fs
movsl
dec
and
add
pop
adc
push
cwtl
outsb
incb
jp
aad
xchg
fwait
sahf
loopne
mov
loop
int
loope
ds
es
xor
mov
int3
xchg
out
and
std
fildll
outsl
repz
xchg
jg
test
jae
pop
shll
mov
movsl
stos
in
jo
inc
adc
push
mov
outsl
aam
xchg
and
xor
cmpsl
jne
xchg
mov
in
scas
mov
cmp
and
dec
test
icebp
arpl
add
aam
and
cmp
sbb
inc
or
lahf
out
cmp
shrb
jecxz
inc
and
nop
inc
cmpsb
ja
push
xor
loop
inc
ret
mov
je,pt
or
cld
cmp
lcall
mov
and
or
test
les
mov
lret
inc
sbb
sbb
push
insl
stos
andb
and
jle
jge
js
leave
inc
pop
inc
test
ds
and
mov
aaa
lds
loope
pop
sub
cvtps2pd
adc
out
ljmp
pop
sub
jb
lcall
push
leave
or
cli
or
fldcw
inc
in
xlat
inc
push
sti
jb
loope
out
loopne
fs
mov
das
leave
mov
dec
iret
inc
in
xor
jecxz
sbb
or
push
adc
loope
setne
sub
jno
test
mov
cmp
jae
xor
sub
repnz
fnstsw
push
cmp
add
shll
ja
jbe
pushl
push
and
push
mov
push
inc
repnz
mov
push
out
arpl
iret
das
aad
cmpsl
xchg
mov
and
add
call
mov
shl
out
cmp
mov
xchg
jg
lods
jge
dec
insl
fcomps
fwait
je
adc
ja
lcall
inc
rcrb
add
push
xor
and
mov
push
sub
pop
fwait
dec
xor
push
lret
mov
push
lcall
push
xlat
lret
mov
int3
movsb
lret
cmp
lods
xor
outsl
outsb
jns
popa
nop
cs
mov
scas
mov
scas
int3
cld
in
dec
adc
dec
xor
movl
ljmp
sbb
iret
or
neg
mov
lea
cmp
sub
cmpsb
lcall
add
xor
and
adc
xchg
jae
ficomps
cmp
rcl
ss
or
cmpsb
adc
cmpsl
mov
loop
sub
das
or
or
inc
pop
xor
add
jl
cld
std
pusha
xor
sbb
or
add
outsl
push
mov
rol
push
fwait
fs
loop
adc
insb
jmp
repnz
xor
imul
fstl
jge
add
lret
push
lods
sbb
sub
test
cmpsl
sbb
xchg
xchg
push
sbb
leave
jmp
pop
cmpl
scas
xchg
xchg
test
push
mov
and
jecxz,pn
sarb
inc
adc
pop
cmp
and
sahf
cmp
pop
adc
cmpb
jae
pop
int
test
push
cmp
cli
mov
jmp
fwait
adc
mov
and
movsb
inc
outsb
jmp
stos
test
cld
dec
cmp
xchg
pop
fmull
cli
test
into
jl
repnz
cs
mov
insb
into
pop
test
jno
jbe
xor
scas
loopne
inc
push
dec
icebp
sub
mov
cmp
jg,pt
aad
stos
jne
mov
addb
shrl
sub
and
out
push
stc
xchg
ja
sbb
and
js
mov
dec
jnp
mov
or
jo
push
aad
or
ja
inc
pusha
pmaxub
loop
rcrb
mov
subl
cmp
cmp
xor
fcoms
xchg
sub
repnz
mov
fldt
mov
pop
add
test
mov
das
dec
sti
cs
std
out
lret
test
jg
inc
mov
iret
mov
mov
loop
aaa
lock
push
sahf
push
inc
scas
addr16
mov
js
cmpsl
jb
push
rcll
test
xor
lods
idiv
clc
xchg
jns
xchg
das
add
mov
xchg
insl
sbb
out
mov
leave
cmp
xor
cmp
shll
aad
jl
aam
test
sub
fs
mov
call
sub
mov
dec
les
out
je
mov
xchg
dec
jmp
out
mov
jno
pop
scas
push
fucomp
mov
aam
mov
sbb
push
and
repz
inc
sub
jno
inc
jle
dec
sti
mov
pop
and
cmp
inc
cmpsl
xor
adc
inc
movsl
int3
mov
in
xchg
xor
js
test
mov
sbb
or
mov
outsl
add
lods
sub
or
jle
imul
scas
xor
dec
sbb
xor
jbe
aam
dec
or
clc
jmp
rcrl
stos
and
cmpsl
lods
in
sbb
mov
std
adc
pusha
shrl
out
sbbb
sbb
in
stos
sub
stc
cmpsb
and
icebp
movsl
sti
cmp
addb
pushf
xchg
int3
fidivrl
stos
jb
sub
jae
enter
add
mov
addl
stos
mov
dec
pop
pop
jmp
repnz
stos
jge
dec
ret
scas
movsb
je
dec
fwait
inc
lock
and
dec
pushf
push
inc
cmpb
std
mov
sub
cmpsl
mov
push
push
mov
cmp
jmp
mov
pop
dec
xor
ret
push
inc
pop
push
rcl
sahf
fisubrs
sbb
stos
mov
jae
push
dec
in
jb
push
mov
and
dec
or
and
sub
dec
in
sbb
jmp
xchg
adc
addr16
and
insb
mov
dec
adc
xchg
push
mov
or
int3
sub
test
adc
sbb
pop
popa
adc
pop
pop
mov
push
and
mov
rol
mov
jae
out
dec
and
in
and
mov
pop
mov
out
repz
icebp
mov
dec
into
pop
enter
rcll
or
pop
iret
adc
in
sbb
fldcw
pushf
and
fidivs
repnz
add
jmp
cmp
pop
cmc
sub
bound
and
ss
jns
adc
mov
lds
push
mov
iret
dec
inc
xor
pop
lods
jmp
int3
xchg
std
sbb
pop
inc
mov
shrl
add
cmp
jmp
pop
test
xor
leave
pop
pushf
jp
pop
aas
and
cld
ss
inc
xor
or
xor
stc
aaa
movsl
mov
cmpsl
inc
push
push
int
cmp
ret
cmp
adc
push
jb
cmp
pop
mov
xchg
fwait
ja
sub
xchg
stos
mov
cld
mov
sahf
mov
fnstcw
popf
cmp
and
loope
sub
test
loop
and
in
mov
dec
leave
andl
es
jecxz
enter
sub
and
popf
cmpsb
pop
push
shl
aas
ljmp
cmpsb
push
add
aaa
ljmp
xchg
mov
int
sbb
push
inc
dec
jbe
out
daa
mov
cmpsl
or
mov
in
shll
inc
shl
or
hlt
add
in
inc
lahf
pop
fistpll
dec
inc
mov
jge
pop
dec
mov
lret
into
push
xlat
jns
adc
pop
out
or
push
jne
repz
xor
shlb
jb
ret
call
sbb
leave
fcomi
or
sbb
inc
cmp
imulb
loop
aas
and
popa
dec
pop
movl
inc
sbb
pop
stc
bound
xor
jae
call
mov
es
adc
aas
push
js
pop
push
mov
insl
jmp
addl
loop
repnz
add
psllw
or
testb
mov
push
xchg
ljmp
add
lods
loop
shrd
mov
mov
mov
push
mov
sbb
mov
sbb
enter
rol
pop
cmp
and
inc
mov
fcmovbe
stos
xor
sti
xor
mov
jnp
mov
cmp
ds
jns
sub
sub
daa
push
loop
adc
loopne
cmp
sub
xor
adc
sub
jmp
cmp
xchg
into
sbb
or
pushfw
dec
push
cltd
xlat
fsub
mov
sti
pop
jle
adc
adc
mulb
imul
push
mov
movsl
xor
cs
push
imul
insb
mov
inc
pop
jns
mov
pop
mov
dec
inc
outsl
mov
testb
scas
inc
inc
mov
push
or
cli
test
repnz
push
out
mov
push
xchg
cmp
push
or
jmp
adc
addr16
add
imul
sbb
fmull
or
pop
inc
and
imul
adc
xchg
cmovae
pop
clc
in
testb
mov
mov
ret
nop
xlat
sub
pop
mov
xor
lods
and
fstpt
loope
das
and
mov
xor
push
mov
adc
mov
repnz
or
repnz
inc
lahf
ret
mov
sar
dec
inc
ret
sub
outsl
das
aaa
jno
and
mov
fucom
out
mov
jo
cli
sti
repnz
dec
mov
scas
or
sarb
out
lock
lret
xor
pop
in
xor
lcall
sarl
xchg
jnp
jmp
jmp
lods
push
shrb
incl
iret
xorb
popa
push
xchg
fsubl
pusha
scas
sub
sub
aaa
push
orl
add
fisttps
je
dec
pop
repnz
xchg
int
or
and
cld
filds
test
jbe
jmp
repnz
xor
clc
fsubl
cmp
push
add
adc
and
lods
push
cs
int3
cltd
push
or
sbb
shrb
mov
mov
sbb
addr16
sbb
dec
pop
ja
push
pushl
add
xchg
cmp
jge
cs
xchg
mov
sub
or
adcb
fiadds
cmc
xchg
inc
xor
divb
xchg
xchg
mov
call
jns
dec
dec
sbb
xchg
idivl
mov
andl
xchg
ffree
push
fucomip
xchg
test
cmpsl
mov
test
pop
les
xchg
lock
jne
xchg
fisubs
arpl
aam
add
out
dec
popa
adc
sub
xchg
xchg
dec
xor
sub
dec
mov
or
lahf
push
inc
pop
in
test
inc
cwtl
push
mov
subb
outsb
notl
mov
jno
loop
bound
push
xor
popa
bound
push
mov
adc
xchg
aas
hlt
push
outsl
adcb
mov
cwtl
mov
xor
jne
and
sbb
lea
push
cwtl
mov
dec
lock
cld
imulb
sub
dec
mov
adc
je
jns
mov
jno
clc
movsl
or
add
and
adc
into
jmp
lahf
fwait
ret
push
cs
loopne
ficoml
pop
pop
shrl
or
in
jp
mov
rolb
daa
outsb
mov
add
nop
and
cmpb
sub
push
addr16
out
sub
daa
cld
jbe
fwait
loope
add
arpl
lds
lds
sarb
scas
jmp
adc
es
imul
mov
xor
iret
push
sbb
jecxz
xor
adc
out
mov
cmp
pop
sub
jno
sbb
sub
rcll
xor
jge
inc
xor
adc
push
adc
ror
inc
mov
fsubrs
insl
sti
addl
add
rorl
push
push
sbb
inc
stos
pop
loope
fcmovnu
jo
mov
out
sub
sub
in
pushf
aaa
jo
ljmp
rep
iret
jmp
jle
cmpsl
push
cwtl
cli
push
movsl
rolb
cmp
mov
movsb
sti
dec
dec
cmp
sti
imul
mov
out
sub
cmc
cmc
adc
mov
movhps
lock
lds
fsub
sbb
leave
xor
sbbl
in
mov
mov
mov
jno
mov
aad
test
adc
jo
adc
cld
ret
add
stos
mov
fsubl
cmc
push
adc
push
push
push
lods
cmp
mov
lret
cld
insl
push
mov
test
cli
pop
add
mov
pop
in
enter
in
in
sbb
adc
push
dec
and
fstpt
sti
adc
add
aad
and
and
mov
aas
leave
push
xchg
dec
mov
loopne
xor
std
fstl
xor
dec
adc
push
insb
in
dec
repz
cli
cmc
and
sub
adc
add
ljmp
in
mov
mov
and
fidivs
or
in
xchg
mov
icebp
sahf
push
add
scas
notl
push
lahf
mov
inc
jbe
jmp
cld
in
negb
push
imul
mov
sub
or
inc
ds
jg
cmpsl
sbb
xor
mov
xor
int
and
push
sbb
inc
inc
sub
push
lret
add
dec
pop
jno
daa
jge
xchg
hlt
fldenv
decl
mov
push
mov
pop
mov
out
mov
ret
push
push
mov
imul
divl
movsl
btr
cmp
out
cs
cmp
xor
adc
cli
cwtl
pushf
sbb
xchg
insl
cmp
pop
cld
jp
mov
bound
sbb
jne
stos
ret
clc
lock
mov
sbb
ficoml
mov
loopne
sbb
mov
push
pusha
xchg
xchg
cld
mov
ljmp
pop
pop
mov
in
in
stos
add
push
incb
lahf
mov
pusha
pop
jbe
jns
xor
repz
inc
fbstp
sub
bound
stos
push
jmp
adc
divl
sahf
scas
in
sbbl
aas
xor
cmp
sbb
mov
stc
pop
mov
mov
jecxz
mov
xchg
outsb
xor
repz
add
or
jnp
imul
fmull
jecxz
fwait
jg
loopne
ja
sbb
mov
xchg
mov
mov
jo
ds
popa
arpl
ret
mov
jle
pop
mov
xchg
int
xchg
push
inc
pop
pop
mov
jbe
orl
pop
gs
ds
sbb
add
out
fs
xor
ja
in
inc
xchg
jno
push
adc
push
dec
cmp
cs
test
mov
and
sarl
cmpsb
ror
pushf
aam
pop
lods
aam
and
mov
jbe
xor
lahf
jae
outsb
jnp
and
das
out
mov
pop
xchg
out
in
xchg
and
pop
insb
pop
xchg
push
or
cmp
repz
daa
xchg
int
pushf
clc
pop
sti
pop
or
or
sbb
pop
mov
out
sahf
mov
loop
xor
mov
pop
mov
ret
push
js
lds
or
cmp
daa
and
mov
pop
jle
pop
sbb
xchg
sbb
jecxz
mov
and
mov
or
xchg
pushl
enter
jl
in
pop
push
cmc
dec
add
or
sbb
test
cli
cld
xor
ljmp
testb
and
push
add
push
mov
sarb
fcoms
adc
add
add
mov
dec
jg
test
or
sub
sti
movb
xlat
idivb
and
jno
adc
inc
arpl
cmp
sub
inc
xor
sahf
adc
mov
lods
enter
fdivs
stos
enter
push
and
push
int3
icebp
sub
pop
das
mov
inc
dec
or
mulw
jnp
shrl
cltd
cmp
jmp
outsb
repz
add
scas
sub
jmp
mov
fbld
in
or
out
xchg
cmp
xor
mov
mov
aad
xlat
out
test
mov
hlt
rcrl
jle
js
xor
mov
cmc
hlt
mov
dec
stc
sub
in
std
aam
std
push
sbbb
adc
inc
sub
in
pop
int
dec
or
insl
dec
push
lods
cltd
flds
lods
jecxz
mov
pop
insl
dec
addr16
adc
dec
aam
xor
lds
out
or
dec
leave
add
xor
clc
pop
cs
js
jle
hlt
add
pop
mov
adc
add
push
roll
push
aas
hlt
movsw
hlt
fisttpll
add
shr
out
aas
adc
xchg
cmc
and
popa
mov
lds
jl
scas
fnstcw
xor
std
mov
add
or
or
jp
in
inc
mov
int
xlat
xor
push
push
mov
js
popf
aad
stos
or
arpl
cmp
dec
movsb
dec
xchg
dec
dec
bnd
mov
popf
cmp
push
nop
ja
or
testl
xor
cmp
gs
lods
jne
or
je
dec
add
pusha
subb
xlat
mov
icebp
rcll
push
test
mov
pop
ja
repz
add
add
push
jmp
pop
fstl
pop
insl
pop
imul
js
jne
enter
xchg
or
add
outsl
lock
movsb
in
dec
pop
fisubrl
cs
popw
pop
mov
test
jecxz
jb,pt
inc
ficoml
mov
shrl
testl
mov
sub
push
and
enter
gs
sub
jg
pop
pop
ss
jl
lods
fldl
push
mov
pushf
or
xor
in
lret
push
push
or
jecxz
mov
or
sub
aaa
outsl
icebp
add
movsl
mov
lea
sbbl
sbb
fcoms
lea
jno
imul
cltd
out
jb
std
lods
adc
sub
dec
pop
mov
test
imul
mov
roll
cmp
mov
push
sbb
aas
scas
push
push
int
xor
fs
pushf
pop
cltd
fstp
psubsb
sbb
pop
rorb
inc
jge
mov
fsubrl
mov
push
repnz
cmovo
add
push
fisubs
orb
add
insl
out
aaa
mov
inc
dec
iret
int3
mov
dec
lods
xadd
leave
push
test
sub
test
leave
daa
ds
push
inc
stc
jae
shll
cmp
xchg
push
sbb
sbb
cmp
cld
cmp
pop
add
mov
fstl
daa
test
mov
push
push
in
shll
mov
mov
pop
add
adc
mov
xchg
xor
insb
int
pusha
jno
out
mov
jne
sub
mov
leave
xor
xor
call
leave
dec
pusha
push
test
movb
push
imul
and
jg
clc
out
mov
jnp,pt
cs
adc
mov
inc
test
leave
repnz
or
fidivs
insb
das
pop
xor
xchg
les
jnp
adc
imul
ret
call
popa
xchg
push
int
dec
sub
aas
push
fs
cmc
test
add
mov
loopne
mov
push
shl
inc
lret
roll
adc
sub
shl
push
nop
int3
push
and
es
push
loop
ja
dec
inc
dec
std
loope
out
clc
push
stos
frstor
add
les
popa
frstor
lds
xchg
add
test
mov
test
xchg
ret
sbb
bound
jl
shrl
dec
pop
outsb
xor
loopne
mov
outsb
push
insl
pop
mov
sbb
mov
daa
xor
iret
mov
jl
dec
daa
or
sbb
cmp
xor
or
xor
stos
test
pop
xor
scas
cmp
pop
inc
or
ss
push
pop
sahf
pop
ljmp
mov
aam
aaa
pop
outsl
lret
bound
jo
pop
sbb
mov
adc
sub
dec
arpl
push
mov
add
imul
jnp
sbb
lahf
sub
movsl
sbb
inc
xchg
into
sbb
fs
or
mov
dec
sbb
lea
into
ret
test
cld
cmp
test
cmp
adc
cmpsb
inc
loop
xor
cmc
cmp
push
test
and
and
sarb
mov
or
pop
fistl
xchg
aam
pop
test
dec
je
adcb
test
sub
push
data16
outsb
nop
adc
sbb
jmp
lcall
add
jnp
push
jno
mov
addr16
and
sub
jg
pop
or
cld
xor
testl
xor
out
push
cmp
push
adc
arpl
jo
scas
push
sub
xchg
scas
inc
loop
mov
push
lock
xor
out
lahf
aad
insb
mov
and
inc
into
lods
or
push
jmp
fildl
loope
xchg
popa
scas
xchg
shll
fisubrs
mov
push
add
pop
in
fistpl
outsl
and
je
dec
add
outsb
xor
sti
lcall
in
mov
mov
mov
les
adc
and
pop
inc
fldenv
xchg
movsl
outsb
outsl
dec
ret
add
out
mov
push
push
cmc
push
movsb
jbe
add
daa
jl
and
ud1
das
cld
cmp
mov
jle
loope
test
dec
mov
push
in
xor
stos
call
sub
enter
fadd
loope
mov
push
fstps
jno
cwtl
push
bound
inc
xlat
repnz
and
pop
sbb
subb
fwait
push
push
stc
out
jo
sub
adc
paddb
add
adc
push
xor
mov
imul
xchg
repnz
sti
outsb
push
cmp
adc
inc
clc
xor
ljmp
getsec
mov
insl
xor
jmp
insl
lcall
scas
fsubs
out
gs
shrl
xchg
xor
dec
fsubs
inc
sub
cmp
cmp
ja
iret
inc
test
dec
add
outsb
cmp
push
ret
outsl
in
or
jb
sbb
dec
scas
mov
push
lea
pop
jmp
cmpsb
cld
pop
or
ljmp
stc
in
pop
xor
pop
lods
je
dec
xor
stos
xchg
or
xor
popf
in
mov
xlat
mov
adc
sbb
cmp
inc
cli
adc
jmp
int
out
cmp
dec
xor
cmp
xchg
imul
sub
cs
push
mov
inc
pop
push
sub
push
sbb
xor
or
in
jnp
mov
mov
call
iret
jle
fstpt
and
jl
pop
sub
outsb
mov
popf
pop
dec
ret
scas
xor
stos
movsb
dec
push
pop
in
inc
xlat
into
int3
stc
mov
pop
or
push
mov
sub
cmp
decb
fistpll
jp
mov
jno
push
lcall
js
in
mov
pop
xchg
js
xchg
outsb
cwtl
lret
xor
fisttpl
mov
sahf
sub
adc
sub
jbe
loope
ret
cmp
jb
mov
push
loopne
xchg
call
sub
sub
jb
mov
add
test
xor
stos
mov
dec
in
ficoms
fs
ja
fstpt
add
fcompl
push
pushf
xor
xchg
adc
and
dec
int
fnstcw
pop
mov
int
and
ljmp
scas
shlb
sub
ss
push
push
imul
mov
sub
pusha
xchg
leave
mov
mov
lods
adc
test
mov
or
mov
aad
and
outsb
push
fstpl
repz
inc
adc
xor
jno
fsubl
lds
push
addr16
jp
in
cmpsb
scas
hlt
mov
cli
xor
dec
or
adc
frstor
push
loope
out
lcall
enter
or
or
xor
jae
lea
cld
ljmp
fdivs
jb
sub
std
rcll
arpl
jno
bound
dec
xlat
enter
jp
scas
lcall
push
or
ret
xchg
cld
ret
and
or
pop
pop
out
cmp
xor
or
or
cld
clc
jge
cmp
xchg
adcb
xchg
pop
js
dec
cli
and
mov
push
pop
xor
mov
insl
push
add
sub
push
fmul
pop
subl
jmp
ret
mov
movsb
mov
dec
pop
or
xor
sub
push
je
sub
int3
clc
cmp
sbb
je
jecxz
lods
les
pop
xchg
or
mov
loop
push
ja
push
push
scas
leave
repnz
add
add
enter
daa
js
imul
jge
int3
dec
mov
jmp
cmpsb
xchg
insb
dec
imulb
mov
adc
sbb
adc
int3
and
pop
and
xor
popf
test
andb
pop
roll
aam
les
push
jno
insb
cmp
pop
add
jb
out
dec
mov
sti
or
adc
jge
jg
lahf
mov
popf
cli
xchg
add
xor
sbb
add
mov
and
test
jl
ror
xor
lret
jo
pusha
cli
pop
sahf
test
mov
or
into
cmp
adc
in
aas
cltd
jge
inc
jno
stc
popl
faddl
xor
pop
ds
mov
cmp
or
sbb
leave
fisubrl
loope
sbb
mov
pop
lret
out
mov
andb
push
mov
and
je
in
push
or
js
or
lret
sub
ficoml
xchg
movsb
sbb
hlt
jecxz
data16
daa
jb
sub
sub
lods
les
mov
scas
lahf
dec
xorl
jl
dec
popa
jbe
jl
and
cmp
dec
jno
bt
and
dec
das
test
add
inc
fstpt
mov
lea
orl
mov
and
adc
aaa
imul
sub
clc
loope
and
pop
and
and
incl
scas
xor
ss
push
xchg
push
add
or
icebp
jo
or
call
xchg
cmc
sbb
shlb
xor
pop
cmc
out
mov
sub
jns
mull
inc
push
mov
icebp
lds
test
cmp
jmp
sbb
outsl
jo
and
inc
mov
push
popa
movsb
or
pop
gs
imul
sub
mov
or
jnp
in
lods
push
and
aad
test
add
adc
sub
stos
or
adc
pop
pop
dec
push
cmp
js
pop
inc
push
cmpsl
adc
jo
movsl
push
gs
cmpsl
push
sub
xlat
call
mov
dec
push
scas
xchg
ss
mov
lds
hlt
nopl
imul
std
int
pushf
dec
sbb
arpl
nop
int3
mov
dec
jnp
loopne
aad
mov
dec
inc
push
adc
mov
popa
inc
pop
jno
inc
push
and
cmp
movsb
rcll
inc
mov
jg
mov
sub
out
stos
adc
mov
mov
lods
or
and
xor
pop
inc
mov
add
sbb
push
sti
fstpl
xor
data16
out
insb
cmc
jno
sub
repnz
out
adcl
gs
xor
mov
dec
xlat
aad
nop
mov
fcos
jle
lods
mov
or
cmpsb
and
mov
inc
bound
push
lea
sti
adc
js
cld
cs
aaa
dec
push
push
int3
shll
out
add
inc
lcall
rcll
xor
cmp
out
nop
mov
jmp
scas
xor
imul
lea
gs
rcrl
adc
es
enter
xor
inc
mov
loope
addr16
mov
outsb
pop
mov
or
lret
lahf
pop
xor
mov
je
add
rcrl
ja
cli
scas
mov
inc
ficoml
fildl
add
cmpsb
pop
push
aam
pop
outsl
jns
cmpsl
cmp
xor
iret
fwait
sub
pop
cmpsl
shrb
aas
ret
test
fisubl
add
xchg
fsubrp
and
mov
rcll
sbb
xchg
jg
mov
icebp
mov
xchg
push
jmp
out
pop
add
gs
imul
pop
outsl
in
push
or
mov
push
and
rorl
and
repz
jl
aam
inc
stos
push
clc
int
lcall
or
adc
sbbb
popf
jnp
das
cmp
mov
xchg
sub
dec
pop
flds
jmp
iret
adc
inc
lods
add
gs
push
and
mov
fsubr
lods
xor
xchg
inc
rclb
jns
add
pop
jecxz
fdivs
and
and
aaa
cmpsb
jle
mov
xchg
cmc
mov
test
cmp
sub
cmpsl
lock
mov
mov
pop
push
push
arpl
inc
into
out
mov
in
lcall
jecxz
ret
push
outsl
mov
jmp
sbb
push
stos
jecxz
pop
add
pop
subb
or
fsubs
sub
cmp
cmp
push
mov
aam
loop
orb
ds
lret
sbb
sub
jmp
jnp
int3
popf
mov
jecxz
or
out
shl
pop
jle
fidivrs
std
inc
out
inc
sub
clc
cmp
mov
mov
and
mov
sbb
push
xor
ja
push
popl
dec
xchg
lods
xchg
cltd
cwtl
push
jno
jae
ret
cli
int
int
jno
hlt
sub
push
push
mov
dec
mov
mov
imul
fdivrs
or
lea
dec
push
cmc
inc
sahf
lods
aam
pop
imul
test
mov
or
popf
and
andl
mov
jb
push
popf
pop
jns
jg
adc
adc
rol
jne
sahf
mov
mov
inc
repz
push
jp
shrb
jp
xchg
mov
dec
cmp
push
push
sarl
test
addb
mov
adc
and
roll
sarb
xor
add
add
cmp
mov
mov
ja
cmc
push
lods
lds
adc
int
les
out
sbb
insl
cs
xchg
mov
and
das
and
mov
nop
test
adc
xor
push
dec
cld
jbe
cwtl
ss
jp
cltd
xor
mov
sti
cmp
mov
out
xor
loopne
call
jbe
lock
call
jle
rcll
inc
js
mov
xor
or
in
lods
xchg
mov
dec
inc
xchg
jle
mov
rcll
push
inc
dec
add
fwait
mov
sbb
lcall
mov
xor
pusha
leave
xlat
add
addl
bound
jno
fisubl
ljmp
pop
scas
lea
jno
lods
cmp
sbb
shll
sub
fcomps
out
jl
xorl
test
ret
adc
lods
sbb
sub
mov
xlat
movsl
and
in
cmpb
jge
inc
incb
scas
xchg
ds
hlt
cmp
mov
scas
movsb
aam
dec
aam
out
mov
ljmp
cmc
push
push
and
mov
push
mov
or
test
xchg
jnp
sbb
cld
shlb
mov
cwtl
push
lods
in
ret
xchg
sbb
sti
les
inc
mov
mov
cld
cmpsl
in
push
mov
xlat
cmc
mov
iret
mov
inc
inc
pushf
out
jmp
cs
nop
mov
mov
xchg
xchg
cmp
sbb
popa
jge
sbb
ret
hlt
xchg
inc
adc
in
cmpsl
push
das
lock
push
fdivrl
xchg
rorl
jns
xchg
jbe,pn
mov
jb
dec
jl
rcrb
fwait
daa
inc
das
inc
stc
mov
mov
in
pop
and
pop
xlat
push
outsl
sub
push
xchg
leave
adc
or
cwtl
in
fucomi
div
jmp
movsb
inc
rcll
mov
push
cmp
out
jp
scas
imul
jle
imul
add
xchg
scas
push
push
jp
or
lods
popf
mov
aad
xchg
mov
xor
aaa
movsb
or
popa
sub
subb
xchg
dec
lret
pop
push
sub
inc
bound
out
int3
xchg
jp
sbb
push
mov
xor
jbe
daa
popf
stos
clc
push
idiv
out
lods
rcl
adc
pop
dec
add
push
fcomps
bound
lds
mov
call
fsubl
sub
imul
arpl
js
nop
pop
lret
inc
jge
leave
hlt
add
in
pop
xor
loop
mov
out
cmp
ret
mov
pop
hlt
lahf
push
push
pop
pop
iret
loop
cmp
fs
pop
mov
fadd
loope
ficomps
stos
imul
fld
mov
sub
mov
int
das
and
mov
mov
sub
xchg
cli
mov
fcomip
xchg
lahf
sbb
adc
sub
cmp
int
dec
mov
shll
mov
cmpsl
inc
xor
stc
subb
shll
and
lcall
jecxz
push
mov
lahf
inc
inc
mov
dec
test
xchg
out
imul
clc
lret
push
fs
sahf
push
adc
shl
sub
push
in
ret
in
sub
ss
add
shlb
push
movsl
xchg
mov
into
aas
xorl
adc
cmp
aaa
lcall
hlt
pop
leave
outsl
pop
sbb
push
cmpsl
gs
pop
jge
dec
sbb
lcall
sbb
jbe
pop
std
push
or
ja
outsl
inc
das
add
pop
adc
int
cmp
int3
addr16
es
pop
test
lret
mov
pop
in
cld
cmp
icebp
inc
cli
ds
push
popf
mov
je
mov
xlat
xor
sbb
icebp
fsubrl
adc
xor
mov
out
ds
js
sub
leave
out
cmpsl
popa
in
xor
mov
in
pop
sbb
mov
mov
shr
fnsetpm(287
sti
and
sub
mov
in
sbb
inc
test
lea
dec
mov
cltd
mov
aam
int
adc
xchg
lret
jmp
xchg
push
andb
gs
fsts
inc
add
push
dec
dec
clc
xor
xlat
shl
add
stos
cs
sbb
jnp
cltd
or
mov
das
jle
xchg
shlb
rorl
les
repz
call
test
lahf
fdivrl
mov
jnp
arpl
mov
loopne
push
add
mulb
ds
out
push
mov
adc
fsqrt
push
cmp
adc
pop
mov
jbe
inc
dec
add
mov
mov
cli
es
pop
mov
jne
ja
xor
xchg
or
push
xor
cmp
mov
lret
xchg
inc
into
and
inc
xchg
pop
sarl
xlat
sub
test
lds
and
xor
cmpsl
push
mov
jmp
negl
outsl
push
test
xor
lock
jl
decb
cs
push
adc
fsub
push
xchg
xchg
imul
lcallw
stos
aam
adc
or
add
gs
or
mov
mov
aad
sub
sub
outsl
push
mov
cmpsl
mov
movsl
idivl
sub
cmc
push
sub
gs
sub
jmp
inc
push
pop
gs
loopne
insb
shrb
sbb
mov
push
pop
ret
pop
push
jmp
out
and
es
ljmp
xchg
sub
call
popf
fldcw
ffreep
mov
dec
mov
inc
into
std
in
jb
sti
xor
subb
lret
and
jmp
and
test
stos
xor
push
mov
jecxz
sbb
mov
in
or
sub
cwtl
loope
daa
xor
les
or
xchg
iret
addb
inc
push
lods
mov
pop
das
inc
pop
fiaddl
in
cmpsb
sub
ret
notl
shrl
push
push
push
fsubs
addr16
mov
neg
inc
mov
sub
outsb
loopne
aam
fistl
add
adc
inc
cwtl
movsb
shrl
adc
adc
push
int
fistps
jp
xor
fidivs
xchg
shr
out
rcr
and
cmp
pop
push
out
bound
imull
sti
push
mov
sub
call
and
xchg
xchg
sahf
fcomps
sub
int3
sti
mov
mov
fstpt
push
pop
icebp
inc
dec
clc
pushl
and
mov
lea
push
jge
jnp
in
mov
adc
frstor
pop
mov
mov
xor
fsubr
decb
arpl
xchg
jmp
int
or
ss
xchg
outsl
scas
push
mov
stos
arpl
and
dec
mov
ja
out
sbb
dec
test
jge
lock
mov
push
pop
sbb
lock
mov
fcoml
dec
pop
sub
lea
loope
push
jl
xchg
cmpl
push
repz
sarl
mov
nop
arpl
mov
add
mov
or
pop
aas
into
sbb
sub
sbb
and
subl
push
subb
repz
or
outsl
inc
mov
adc
ret
fs
sarl
lods
les
sub
ljmp
sub
loopne
das
jmp
cmp
cmp
test
ret
xor
dec
inc
loop
mov
rclb
ds
pop
jne
rolb
ret
mov
fs
inc
mov
cmp
std
and
dec
xor
push
pushf
xchg
inc
pop
pop
add
mov
inc
push
pusha
adc
push
xor
hlt
int3
add
mov
loope,pn
ljmp
push
mov
pop
call
in
and
fcoms
xadd
pop
xchg
xchg
in
and
inc
imul
fwait
test
dec
das
test
pop
mov
mov
loope
push
cmp
cmp
daa
ja
shrb
out
ss
push
lods
arpl
std
lcall
jle
xor
dec
dec
test
and
int3
mov
inc
sub
jb
push
es
xor
mov
out
mov
sub
xlat
fistl
xchg
inc
pop
dec
xchg
dec
mov
outsb
int
fldcw
pop
test
roll
mov
ljmp
push
mov
mov
xor
sub
js
mov
testl
mov
in
outsb
push
adc
add
jns
sti
fildl
out
or
and
in
or
lahf
or
cmp
lock
bound
ss
cmc
int
loopne
jnp
lret
mov
push
cmpsw
sbb
movsl
sbb
pusha
add
mov
fnstcw
jle
pop
pusha
dec
daa
pop
lock
and
mov
lods
pusha
push
adc
jnp
outsl
test
push
clc
dec
xchg
repz
mov
adc
cmp
out
cld
popa
sbb
mov
jmp
cmp
or
mov
pop
cwtl
in
out
jmp
sbb
push
rol
pushf
sub
es
js
push
pop
inc
push
lahf
or
loope
notb
dec
mov
fildl
and
dec
mov
repnz
ljmp
mov
xchg
out
cmp
pop
pop
sti
mov
test
jecxz
popa
outsl
mov
jge
mov
dec
out
out
push
inc
hlt
cwtl
push
mov
inc
xchg
in
or
sbb
ss
mov
and
xchg
ja
sbb
sahf
jmp
inc
sub
push
push
and
insb
xchg
push
push
loop
sub
es
lret
insl
imul
out
fwait
dec
mov
pop
gs
je
jns,pt
jo
mov
cmp
sbb
sub
pop
xchg
cmpsl
inc
dec
std
and
mov
xchg
mov
or
mov
and
mov
jge
sbb
fnsave
out
fisubs
dec
into
pop
fisubs
into
aaa
xor
aaa
mov
scas
cmpb
imul
mov
loopne
int
adc
mov
call
pushf
lahf
je
cmpsb
xchg
push
jle
in
loopne
mov
cmc
jle
xchg
btr
pop
stc
jp
enter
fimuls
jbe
das
andl
outsb
insl
icebp
inc
and
icebp
rclb
lar
ds
jae
mov
stos
push
imul
leave
push
mov
mov
bound
mov
pop
mov
push
aad
ds
jge
daa
in
or
pop
mov
mov
out
ss
arpl
dec
pop
cmp
lock
mov
lods
xor
pop
fdivs
or
dec
sbb
aaa
dec
xchg
fcmovnb
xlat
mov
or
pop
mov
jb
sahf
punpckhbw
xlat
and
aam
lret
adc
cmp
out
xor
add
rolb
ds
fcoms
decl
icebp
ss
int3
fs
std
out
les
test
fwait
add
mov
xchg
mov
fisubrl
add
mov
inc
out
leave
xor
jo
push
mov
mov
mov
aaa
cld
rcl
arpl
or
jb
mov
in
stc
leave
mov
mov
push
les
push
aaa
es
jl
shlb
lcall
inc
push
fcmove
pop
fwait
shl
lods
fildl
xchg
cmp
cld
mov
inc
call
xor
push
imul
mov
dec
arpl
cmpsb
daa
fistl
lahf
fistpll
mov
dec
ja
jp
xor
push
jle
enter
pop
das
stos
mov
mov
jl,pt
ret
mov
out
jns
xor
mov
push
idiv
ficomps
test
adc
jl
mov
mov
lock
aam
and
test
or
pop
and
not
outsb
fwait
cld
nop
push
cs
cmp
mov
js
cmpsl
lret
movsb
in
fadd
pop
jno
mov
mov
inc
sub
rcll
xchg
lods
mov
xchg
push
adc
sbb
addr16
in
jg
xchg
adc
out
pop
jno
iret
ds
cli
adc
in
jae
mov
aad
into
test
jecxz
sub
sbb
std
lods
lret
mov
push
in
xor
out
cltd
and
rorw
inc
pop
nop
std
add
mov
jl
sti
dec
xchg
lahf
andb
xor
xor
push
pop
dec
xlat
fisttpll
adc
cmp
lea
mov
add
inc
popa
adc
cmp
jb
cmpsb
test
sbbl
daa
cmp
push
enter
sbb
sub
dec
pop
in
sub
jg
fldl
and
and
movsb
adc
call
pop
out
pop
jb
mov
or
iret
add
jne
imul
cli
pop
jg
jae
mov
add
sub
sbb
hlt
outsb
je
ljmp
push
cltd
insl
cltd
movsb
js
mov
jl,pt
popf
lret
clc
sbb
and
inc
stos
mov
sub
scas
loop
cmp
dec
adc
sub
dec
les
inc
inc
pop
add
divl
daa
int3
or
pop
pop
xor
clc
out
xchg
xor
scas
incb
cwtl
loop
enter
ljmp
mov
mov
xchg
pop
inc
ror
addb
mov
outsb
pop
mov
cmp
cmp
adc
push
add
mov
and
jo
loopne
iret
push
adc
sahf
pop
arpl
and
aam
sarl
int3
jne
jmp
jle
icebp
xchg
cld
test
das
out
inc
jle
mov
cld
sbbb
xor
jb
or
daa
xchg
test
jnp
xchg
mov
xchg
lods
and
adc
xchg
mov
and
inc
fs
push
xor
mov
push
rol
jle
repnz
test
arpl
pop
push
sbb
icebp
mov
pop
sub
cmpsb
repz
iret
dec
cwtl
out
movl
faddl
or
mov
mov
cmc
sub
mov
movsb
fdiv
rcrb
push
das
test
xchg
xchg
aam
negl
in
fisttpl
insl
push
rcrb
pop
push
sbb
mov
sub
sub
push
push
xchg
lcall
xchg
or
pop
inc
aad
mov
push
cmp
mov
xchg
sarb
push
leave
mov
js
mov
jecxz
dec
mov
adc
bound
jle
pop
inc
jne
cmp
mov
mov
ljmp
sub
pop
andb
adc
cmc
push
mov
mov
test
aad
push
lahf
sbb
out
cmp
out
aad
xadd
push
add
negl
cmp
pop
sub
orb
jnp
stos
movsl
dec
push
add
mov
dec
and
sar
movsl
into
outsl
push
push
lea
inc
into
subb
mov
cltd
pop
mov
pop
add
push
mov
mov
sbb
xor
out
mov
mov
popf
movsb
stos
sti
aas
fucomip
cmp
inc
and
mov
iret
mov
sub
ret
pop
push
das
add
lea
aam
cmp
pop
pop
in
push
cmp
dec
adc
inc
mov
stc
imul
jmp
es
xchg
push
adc
adc
ljmp
inc
test
cs
aad
outsb
cmp
inc
les
jne
cmpb
mov
inc
jecxz
movl
mov
iret
std
pop
sbb
cmp
test
pop
cli
dec
cs
insl
pop
addr16
iret
rcll
clc
icebp
push
or
jbe
sub
cmp
int3
adc
jge
push
lret
xchg
sti
cmpsl
adcl
xlat
mov
mov
lret
push
push
inc
or
mov
pop
shlb
mov
outsl
mov
mov
mov
mov
sub
adc
jle
push
pop
sarl
xor
sub
sbb
sbb
pusha
mov
sub
mov
cmp
dec
add
and
jns
or
and
sub
std
test
ret
mov
movsl
fimuls
mov
lahf
push
fucom
test
xchg
jno
or
in
cmpsb
mov
jnp
repnz
push
adc
scas
xchg
xorl
fildl
fsubrl
sbb
lcall
ds
xchg
adc
jnp
das
dec
mov
loop
pop
mov
add
sub
pusha
inc
push
lahf
push
add
roll
pop
cwtl
xchg
jo
xchg
in
call
add
orb
std
xchg
add
mov
shll
mov
lret
xchg
iret
xchg
hlt
mov
pop
push
xchg
jns
test
mov
mov
mov
insb
cmp
xchg
mov
sub
jbe
pushf
push
sti
jg
out
mov
cmp
mov
sub
fsubrl
int
out
jo
in
lret
out
fildll
test
aas
push
movsb
fildll
loopne
popf
jge
sbb
cli
repnz
add
push
in
cld
pop
je
or
pop
or
out
mov
test
aas
cld
xchg
shll
lahf
repnz
xor
jl
jecxz
cmp
mov
xchg
cmp
stos
cli
push
les
ja
jg
imulb
inc
mov
xchg
mov
stc
in
mov
mov
cltd
cmc
sub
or
loope
imul
xlat
push
stos
out
sahf
aas
je
lahf
arpl
xlat
adc
sub
cmp
and
pushf
cmp
mov
jmp
cmp
xchg
repz
pop
lahf
jle
insb
cli
adc
xchg
arpl
mov
push
or
mov
das
cld
mov
xor
pusha
push
dec
test
fstpt
push
mov
mov
addr16
jbe
and
pop
mov
mov
or
rcrl
ror
pop
dec
jnp
popf
loop
mov
dec
lock
and
stos
dec
xorl
mov
stos
xor
movsb
dec
mov
je
push
xchg
jmp
fsubrl
mov
repz
dec
or
push
pusha
mov
mov
shl
ja
push
fisubrl
jge
repnz
out
sub
adc
ljmp
cmp
mov
sti
je
clc
mov
andb
dec
jp
pop
sub
mov
jle
dec
shlb
outsl
mov
mov
and
xor
sub
pop
mov
sahf
mov
lds
or
mov
jecxz
jge
cmp
dec
fisttpl
imul
jmp
int
mov
jo
pop
xor
aas
push
inc
xchg
sahf
sbb
or
and
aas
int3
lahf
ret
or
sbb
push
mov
xor
inc
xor
dec
sbb
bound
jbe
cmp
dec
aas
sub
or
in
or
mov
push
cli
fwait
sahf
jno
or
sarb
outsb
lcall
mov
dec
ds
inc
xchg
rclb
pusha
adc
into
into
ds
push
sarb
loope
push
fcmovb
push
arpl
push
push
das
leave
loop
cmc
dec
imul
in
pop
push
inc
mov
mov
out
aad
sarb
popa
andb
ja
cmp
popa
loopne
jno
jg
xorl
inc
inc
fmull
dec
pop
sbb
test
movsb
lods
dec
dec
int
mov
addl
in
adc
hlt
mov
adc
cmpl
add
fwait
into
sti
or
xchg
stos
sbb
push
scas
orl
bound
jmp
aaa
sub
jb
cwtl
mov
lods
or
or
adc
lcall
pop
std
repnz
push
mov
jns
xor
or
mov
push
loop
sbb
mov
and
lods
inc
or
shll
das
inc
in
push
mov
ret
cld
lods
jno
lock
ret
mov
sbb
mov
subb
in
int
dec
xchg
ja
mov
clc
pop
rep
rcr
out
pop
fwait
push
jb
loopne
sbb
cli
and
popf
mov
jecxz
add
mov
push
mov
dec
loop
mov
fwait
mov
iret
in
push
xchg
add
outsb
aas
fwait
mov
jae
arpl
sub
loope
stc
sub
cmpb
xchg
add
and
xchg
pop
mov
and
cmp
fwait
mov
nop
stc
mov
mov
test
push
or
enter
jg
loopne
xor
mov
jne
lds
scas
repnz
popa
jbe
or
lcall
js
cmp
ret
pop
sar
aad
push
inc
adc
adc
int
mov
cmp
aas
add
aam
mov
mov
mov
or
add
out
fdivr
mov
sub
fldcw
lods
cmp
push
idivl
mov
rcrl
repnz
or
lret
or
loope
enter
pop
jp
test
cmp
dec
mov
pop
jmp
scas
push
pop
cli
dec
mov
and
xor
add
push
repz
sbb
cmp
or
ficoms
loope
lods
sbb
js
xchg
loop
inc
inc
adc
mov
negl
cld
xlat
add
notl
jmp
cmp
add
pusha
jb
repnz
mov
bnd
loopne
mov
ljmp
in
pop
mulb
movsb
or
inc
add
dec
incb
pop
jbe
and
mov
dec
cmp
sub
dec
mov
add
flds
fs
testl
mov
jmp
or
lret
inc
xor
xchg
adc
test
dec
adc
push
movsl
icebp
fs
pop
test
inc
xchg
out
dec
jne
jmp
pop
sub
sbb
mov
cmc
xchg
insl
mov
jno
add
in
adc
sbb
outsl
stos
int
enter
leave
xor
outsb
mov
push
cmc
adcb
jns
adcl
sahf
mov
into
nop
and
mov
push
out
xlat
sub
xchg
cmp
add
jno
icebp
mov
stos
ds
adc
mov
mov
fidivrl
pop
jno
jae
je
or
cmpsb
sub
jo
daa
testl
sbb
inc
add
stos
push
jb
sti
cli
xor
lds
testb
push
jle
test
mov
push
and
repnz
outsb
pop
into
sub
or
or
mov
fbstp
aad
xor
mov
pushf
pop
xor
jns
andl
xchg
daa
sub
pop
adc
adc
aam
cmpxchg
sbb
fdiv
test
jae
cmc
mov
adc
mov
or
and
cmp
js
lea
xor
sbb
pop
xchg
jge
cmp
jp
mov
lods
out
jle
push
jp
fs
cltd
aam
inc
jb
mov
mov
leave
aas
push
inc
stos
aas
jge
inc
pushf
adc
mov
into
decb
sbb
inc
test
ja
xlat
cmpsl
shlb
int
mov
dec
and
push
pop
jns
mov
xor
push
imul
repz
clc
cmp
pop
dec
std
jp
rcr
pop
int3
mov
mov
cs
push
xchg
mov
ss
inc
sarb
fsubl
sbb
aam
ret
lret
add
rcrb
rorb
mov
out
out
in
into
mov
xchg
cmp
arpl
lock
or
loopne,pn
shrl
ret
dec
mov
fcmove
push
mov
int
lds
add
push
mov
cmp
jbe
sti
sub
daa
cmp
es
sbb
fistl
push
cmp
shrl
mov
aam
dec
imul
pop
dec
fistps
cmc
xchg
jo
in
mov
mov
out
arpl
push
xor
ret
cmpsl
outsb
cmp
data16
mov
add
adc
sub
mov
push
dec
in
fidivs
into
insl
push
inc
mov
xchg
add
adc
stos
sbb
lahf
aas
inc
xchg
es
pusha
addr16
jb
mov
imulb
push
mov
addr16
add
cs
testl
imul
in
push
mov
cmpl
fnstsw
push
fstl
inc
rol
test
setnp
cmpsl
fisubrs
sbb
sbb
mov
push
mov
stos
sub
mov
mov
adcl
sub
ljmp
sbb
jmp
les
cmp
jle
and
lods
test
mov
rcll
mov
lret
fsts
fwait
or
push
imul
negl
adc
push
mov
scas
jb
xchg
out
push
adc
orl
lret
test
pop
out
inc
fs
in
xor
push
clc
adc
push
push
xchg
rcrl
cmpsb
mov
jo
sub
mov
adc
sbb
push
jecxz
fwait
orl
cmp
in
mov
out
pop
and
rcrl
and
cli
or
mov
fsubl
jo
sub
rorb
es
hlt
mov
or
rorb
inc
arpl
inc
lea
fwait
push
scas
jmp
aas
add
jp
sbb
dec
fxch
sub
andl
sbb
jbe
ljmp
sbb
out
ja
imul
and
loop
push
add
xor
xchg
out
in
xchg
cmp
adc
repz
push
cmp
pop
fmuls
xchg
sahf
lods
insl
fdivs
movl
xor
roll
jp
divb
push
mov
int3
nop
push
mov
or
fidivl
ja
add
imul
loopne
cmp
dec
inc
push
push
add
sub
dec
sub
or
cmpsb
mov
xorl
xor
test
push
jnp
mov
pop
xor
ss
in
inc
stc
repz
test
and
mov
aad
das
xchg
fldt
or
pop
adc
xor
jnp
loope
adc
xor
lods
add
shl
inc
lds
inc
dec
aas
pushf
js
test
insl
xchg
mov
cmp
movsb
jns
imul
jecxz
divb
or
inc
loop
xchg
mov
fs
xor
jo
sbb
ret
imul
bound
xchg
lret
mov
leave
mov
movsb
mov
into
pop
xor
xor
shll
xchg
xor
aaa
push
mov
test
xchg
out
daa
xor
out
xchg
dec
in
xor
mov
adc
fdivrs
in
mov
inc
sbb
jl
loopne
sub
in
and
pop
xlat
inc
sub
sub
xchg
insl
mov
sub
cmc
push
int
mov
aam
add
fst
std
outsl
add
daa
mov
push
and
aas
sub
rol
push
dec
push
sbb
fcoms
pop
mov
dec
subl
cwtl
fwait
adc
cmp
rorl
aas
and
push
pop
into
mov
ds
inc
outsb
sub
nopl
xchg
ret
mov
aad
imul
add
jo
jmp
stc
jle
add
bound
lret
testl
out
gs
sub
jnp
les
std
imul
jb
mov
cmp
inc
cli
xor
jns
or
sbb
out
cmp
cmp
push
int3
adc
mov
adc
jp,pt
vmovaps
jbe
add
push
mov
out
add
out
inc
inc
dec
adc
cmp
pop
sahf
dec
mov
or
outsb
dec
sub
lock
mov
adc
addr16
and
das
je
imul
pop
xchg
inc
push
dec
sbb
push
lock
leave
cs
ljmp
add
jg
inc
and
cli
jo
jge
rclb
jns
xor
shl
xor
mov
inc
jmp
loopne
push
repz
adcb
leave
lahf
xchg
push
rolb
mov
fs
xchg
into
mulb
fcmovne
push
and
cmp
fs
jle
adc
scas
cmp
add
cltd
ja
lcall
es
add
cmpsb
rcll
dec
dec
ja
fstpt
repz
mov
and
sbb
hlt
fcmovb
xor
mov
pop
xchg
mov
scas
mov
pop
arpl
push
sub
data16
sbb
xchg
xor
sbb
push
push
sarl
nop
in
and
out
pop
mov
das
pop
movsb
stos
shrb
movsb
es
jle
out
add
xor
or
jo
sub
push
lret
sahf
sub
xchg
iret
mov
pop
out
mov
xor
insl
mov
data16
or
adc
mov
fcmovbe
les
pop
dec
inc
jns
push
cwtl
sub
and
sub
stos
gs
sbb
cmp
lahf
sahf
push
add
outsl
and
out
cmp
repnz
test
ljmp
nop
cmc
or
mov
jmp
dec
and
out
cmpl
imul
test
inc
fildll
mov
lock
mov
loope
mull
ja
mov
pop
ret
mov
ljmp
mov
loopne
mov
mov
fwait
test
ret
xchg
je
andl
dec
das
sbb
jae
jne
shlb
aad
and
test
sub
aad
int3
adc
sub
jb
repz
sbb
pop
ret
pop
xchg
pop
fcompl
jle
pop
lahf
rorl
pop
mov
loop
bswap
mov
jbe
fisubs
popa
bound
sbbl
repnz
cltd
js
pusha
stos
cmp
das
clc
jmp
jbe
shll
ficomps
jle
loope
add
push
mov
rorb
mov
mov
int3
add
fs
fs
sbb
jae
lock
sbb
cld
lock
pop
push
call
bound
and
push
aad
and
ja
mov
push
or
xchg
cmp
xchg
pop
cltd
dec
in
and
mov
and
push
test
filds
fidivs
xlat
dec
int
nop
xchg
outsl
lahf
push
negl
out
je
addl
mov
jecxz
roll
push
mov
inc
jb
lret
stos
mov
ljmp
mov
mov
leave
mulb
pop
xor
bound
xor
fmuls
rolb
sbb
mov
shlb
int3
push
xor
mov
inc
add
or
sbb
mov
cmp
mov
pop
nop
sbbb
loopne
mov
lret
int3
inc
cmc
movsl
leave
xchg
pop
mov
push
repnz
outsl
cmp
mov
hlt
add
mov
push
or
fstps
lods
xchg
jbe
cmp
sbb
mov
pop
jl
xchg
das
nop
mov
stc
imul
fwait
sub
je
das
cld
les
jno
mov
inc
pop
mov
fnsetpm(287
dec
adc
fwait
sub
xchg
mov
ja
mov
mov
pop
movsl
sub
xor
sub
pop
test
test
push
xor
cmp
add
cmp
and
jb
in
push
pop
mov
scas
addb
sub
xchg
add
sar
sbb
add
dec
sti
jne
cmp
adc
mov
lods
mov
addl
call
sbb
lahf
fisubs
aaa
sbb
ds
cli
mov
fidivrs
sub
jbe
test
dec
mov
js
xchg
les
test
icebp
clc
xchg
push
cltd
adc
mov
das
bound
test
leave
and
repz
in
fdivrl
pop
fwait
dec
push
sbb
pop
fcom
popa
imul
lock
testl
in
mov
add
xor
in
mov
pop
push
jg
mov
mov
subl
loope
pop
daa
jae
inc
rorb
out
pop
dec
mov
add
and
fdivrs
push
stc
testb
jbe
sub
adc
aaa
mov
mov
cmp
les
out
mov
lds
arpl
mov
cwtl
enter
mov
jb
push
lods
mov
inc
lret
pop
dec
and
pusha
out
cmp
cmp
xor
inc
jge
cmpsl
push
les
xchg
cwtl
push
iret
dec
mov
test
shr
pusha
out
imulb
cmp
mov
or
inc
std
cmpsb
mull
push
push
les
and
or
sub
mov
cmc
lods
mov
xchg
jg
xchg
clc
jns
dec
push
out
shrl
xor
cmp
add
fnstcw
pop
iret
fcmovbe
lds
call
dec
imul
mov
popa
bound
mov
xor
mov
fisubl
sar
ficoml
and
inc
incb
popf
clc
hlt
xchg
dec
pop
jecxz
pop
cli
mov
test
adc
mov
lcall
ficompl
pop
or
subl
rclb
dec
xchg
lahf
ret
mov
jmp
sub
inc
arpl
xor
mov
ficoml
cmp
sti
xlat
jle
bound
pop
sbb
dec
sbb
adc
mov
push
js
lea
shlb
arpl
fcomps
adc
and
add
cmpb
fwait
adc
and
fisubs
loopne
xor
into
in
test
fs
add
mov
jge
aaa
into
cmpsl
hlt
std
jecxz
cmp
mov
cmp
cmpsl
lret
jb
mov
out
sub
dec
fistpll
out
pop
cmp
sub
jo
dec
pop
lock
arpl
subl
dec
jnp
or
mov
mov
leave
cmp
cmpsl
call
and
and
out
daa
out
insb
push
sti
or
dec
pushf
xchg
arpl
into
jb
xchg
xor
mov
adc
nop
fnstsw
inc
inc
and
insb
dec
out
ja
shl
int3
mov
bound
fisubrl
dec
sbb
push
pop
in
mov
shlb
jle
mov
mov
pcmpeqw
inc
fisttpll
pop
rcrb
mov
pop
sub
jno
adc
or
or
leave
inc
jne
mov
fdivs
jle
scas
pop
leave
ja
scas
xchg
or
notl
and
shlb
insl
sbb
insl
sub
xchg
push
add
popf
das
xor
ljmp
lock
fnstcw
fbstp
mov
mov
popa
movsb
pop
out
mov
les
test
fisubrs
push
push
jge
push
imul
rcrl
pop
xchg
mov
cli
dec
int3
sarl
cmpsb
inc
push
pushf
std
or
stos
sub
fwait
les
jmp
jb
jmp
aas
call
push
jecxz
ljmp
je
dec
out
ret
loope
sub
loop
pop
dec
mov
xchg
hlt
out
xlat
into
or
push
sbb
ja
ljmp
es
fwait
push
mov
mov
lods
jmp
icebp
mull
fnstenv
andb
aas
and
je
sbb
or
cs
addr16
cltd
pop
sahf
sub
xchg
or
imul
cmovne
int3
jnp
xchg
int3
loop
sub
cs
stos
cltd
mov
cmp
aad
lret
fwait
das
push
pop
loopne
pop
mov
sbb
daa
lods
int
pop
lret
pushf
adc
fdivp
int
add
ret
les
pop
push
push
sti
ss
out
push
pop
inc
movsl
dec
daa
mov
adc
fdivl
mov
rclb
ss
cmpsb
xor
lcall
test
test
sti
cmp
iret
in
hlt
dec
inc
mov
sbb
je
add
fwait
or
fidivs
cmp
test
cli
stos
cld
add
sbb
rcrb
sbb
idiv
push
loop
inc
in
xor
or
xchg
ret
jg
out
mov
and
mov
push
lret
adc
mov
outsl
fwait
add
push
sbb
mov
daa
mov
sbb
sub
mov
nop
push
orb
mov
lahf
sub
std
sub
loop
ljmp
jns
pop
fldcw
sub
cli
int3
clc
xchg
into
add
mov
cmpsb
scas
ljmp
insb
dec
scas
push
out
sbb
push
add
lret
test
jp
cmp
out
fwait
pop
cmp
push
sbb
xor
pop
fldt
in
jl
iret
mov
adc
mov
mov
inc
jecxz
mov
jecxz
mov
fisubl
lods
push
mov
sbb
add
lret
sarb
jge
ja
xchg
push
scas
pop
rcr
add
adc
pop
dec
cltd
mov
adcl
je
fwait
sbb
stos
das
ja,pn
scas
iret
inc
mov
dec
rolb
pushf
xchg
inc
and
push
add
and
dec
sub
dec
pusha
jmp
test
jnp
jmp
cld
cltd
and
sbb
outsl
lcall
xchg
xor
sub
enter
pusha
fistpl
cs
rclb
mov
sbb
not
xchg
jl
jcxz
mov
mov
hlt
iret
or
mov
and
add
lcall
jno
aaa
outsb
leave
jmp
scas
shlb
jb
pop
adc
add
mov
inc
cltd
mov
inc
pushf
jp
mov
sbb
add
sahf
xor
pop
mov
lds
ja
sbb
mov
add
repz
js
imul
roll
sbb
inc
je
mov
cwtl
jns
enter
mov
adc
sbb
bound
cmpsb
cltd
lods
xchg
popf
icebp
xorl
pop
pop
and
mov
adc
xchg
mov
mov
pusha
jnp
pop
cs
sbb
ret
rcll
push
scas
add
ret
inc
sub
std
mov
cmpsl
jne
xchg
scas
addr16
mov
and
daa
stos
and
jae
jp
pop
sub
sub
push
shlb
inc
adc
mov
push
pop
ret
push
jns
sti
xchg
xchg
lahf
pop
sub
lcall
mov
or
pusha
adc
xchg
mov
cmp
inc
movsb
cmp
cmp
mov
cltd
test
sbbl
jne
mov
pushf
push
pop
jecxz
leave
aaa
mov
inc
rorl
aas
hlt
ret
popa
adc
dec
test
int
cmp
jno
and
mov
call
scas
pop
sub
loopne
mov
jecxz
cwtl
push
push
pop
fsubrs
dec
loope
add
aaa
push
xor
aas
sbb
cmp
pusha
pop
jl
xchg
jae
outsl
int
movsl
int3
cmpsb
jb
sub
cmp
pop
fs
inc
std
cs
pop
les
outsl
cli
inc
xchg
ret
pop
mov
sbb
ret
imul
repnz
sbb
xchg
cli
jg
jg
test
icebp
enter
sub
cmp
mov
lahf
or
push
enter
cmpsl
das
lods
and
sub
push
jge
lahf
fcmovnb
or
jmp
bound
or
pop
sarl
add
scas
pusha
jp
xchg
xor
aad
mov
xor
xor
sub
in
in
mov
outsl
pop
mov
inc
fmul
or
mov
jge
jno
lret
mov
sbb
test
jp
mov
rorl
inc
loop
jg
push
mov
mov
fmuls
in
pop
out
jnp
xchg
push
push
cltd
or
rclb
mov
xor
sbb
inc
xchg
fcom
insl
gs
mov
or
sbb
push
pop
xor
cltd
orl
dec
xor
sbb
and
lods
into
cmpsl
xor
and
pop
jmp
sub
dec
and
pop
xchg
sbb
leave
xor
test
scas
mov
pop
addl
sub
dec
adc
push
scas
pop
leave
fisubrl
or
xchg
iret
ret
stos
insl
inc
push
xchg
mov
popa
sub
fildll
imul
sbb
mov
jnp
jns
push
pop
pop
cld
inc
and
jne
pusha
cmp
pop
mov
dec
test
sub
push
int3
add
cmpsl
cmp
hlt
repz
mov
dec
daa
ljmp
adc
and
jne
lods
sub
fwait
enter
and
pusha
or
add
lret
leave
mov
call
and
jmp
pushf
dec
jo
add
scas
sbb
fidivs
xchg
dec
pop
test
or
fwait
inc
mov
insb
pop
mov
leave
sbb
xchg
insl
in
negl
adcb
icebp
mov
aam
pop
out
setp
addr16
jno
inc
dec
jl
and
repz
into
mov
lret
adc
push
xchg
pop
enter
sub
ds
in
sbb
mov
fidivs
cld
idivl
mov
mov
push
ss
jno
or
pop
shll
sbb
pop
insb
xchg
sub
sub
mov
xchg
sahf
pushf
cmp
and
ficoms
and
xchg
and
rorb
xor
sbb
add
xchg
iret
fdivrs
sub
sbb
and
mov
mov
xchg
idiv
std
mov
add
roll
dec
mov
mov
mov
jecxz
inc
sti
sub
pop
push
ret
loopne
cwtl
pop
cmp
xchg
jl
add
cs
xchg
cli
or
cmp
cli
faddp
cld
adcb
adc
test
sahf
mov
jle
dec
fisttps
or
push
std
add
jl
pop
jne
cmpsb
mov
out
cmc
stos
xchg
or
cmp
push
xor
and
mov
jmp
pop
xor
push
paddsw
jno
sarl
add
jns
gs
pop
out
fstl
in
sub
filds
push
pop
fstpt
fsub
addb
mov
sbb
adc
sub
int3
add
inc
mov
stos
mov
in
cltd
adc
fldcw
xchg
aad
xlat
pop
cld
mov
loop
popa
or
push
into
dec
das
fdiv
or
fdivs
sub
daa
sub
das
fdivrl
call
mov
stc
fwait
push
dec
enter
and
shlb
adc
cs
mov
call
xor
mov
fcmovb
mov
inc
outsl
dec
shrl
xchg
add
shll
push
and
mov
dec
push
aam
hlt
cs
mov
xchg
pop
mov
push
push
push
cmp
ret
mov
push
mov
cmp
fnsave
jmp
sbb
jae,pn
mov
out
mov
jns
mov
out
push
lock
xor
arpl
jp
mov
aam
add
jmp
pop
push
pop
xchg
lock
div
ja
inc
add
push
push
testb
pop
fisttpl
xchg
or
aaa
shll
cmpsl
and
pop
cmp
fwait
push
fldt
xor
insl
inc
aam
push
mov
enter
mov
lcall
sbb
int
ss
cltd
outsl
into
aam
sub
dec
cmp
inc
mov
sub
repnz
cwtl
cmp
insl
adc
xchg
clc
leave
jbe
sbb
pop
call
push
imul
xor
push
arpl
movzbl
sahf
pop
lods
add
xorl
es
and
mov
lock
pushf
sbb
xchg
out
emms
sub
xchg
aas
imull
ja
mov
push
pop
xchg
and
adc
test
adcl
xchg
mov
and
pusha
shrl
push
sub
add
je
pushl
std
push
fdivs
test
inc
or
push
push
push
test
or
dec
sub
stc
scas
dec
mov
enter
cwtl
add
gs
xor
aad
lcall
ds
inc
adc
dec
and
adc
pop
into
pusha
mov
push
ds
shrb
push
icebp
xchg
test
das
and
outsl
std
adc
rcll
sti
mov
iret
push
fsubr
ljmp
in
push
jmp
or
jmp
adc
testb
push
andb
ja
jo
add
int
add
out
pop
je
inc
or
and
and
add
jns
xlat
mov
sbb
push
shlb
mov
shr
imul
add
sub
jae
inc
ficoml
and
addr16
jle
enter
andb
jle
mov
pop
mov
jge
loop
mov
dec
mov
outsb
xchg
fsubs
stos
loop
xchg
daa
stos
fildll
hlt
jo
jle
jae
jecxz,pn
mov
inc
cmp
lds
jecxz
xchg
mov
aas
ja
mov
in
cwtl
jp
movsb
out
mov
push
cmc
jno
or
cmp
fcomps
aam
inc
pop
push
dec
stos
test
dec
or
cld
cs
test
out
and
lods
add
ret
dec
int
xor
lock
sti
cmp
ja
pop
add
push
xor
stos
int3
xor
xchg
sbb
aam
and
lcall
sbb
mov
mov
sub
mov
imul
shlb
and
lds
fincstp
imul
push
dec
cmp
js
movsb
and
push
movsb
shlb
dec
push
imul
xor
inc
sub
int
xchg
mov
dec
lock
cmp
nop
fdivr
xor
xor
loop
push
shr
addb
jmp
mov
repnz
xchg
push
ds
pop
mov
test
sub
jne
cmpsl
ja
sbb
mov
stos
inc
pop
adc
dec
in
bound
ja
dec
scas
lcall
push
cltd
sbbl
push
iret
inc
aaa
ljmp
adc
scas
jb
das
bnd
mov
or
add
iret
dec
pop
lds
out
pop
adc
pop
fmull
and
stos
mov
or
and
pop
and
lds
insl
xchg
in
fnsave
sub
notl
into
mov
ss
adc
xchg
call
cmp
mov
inc
mov
xor
mov
cmpsl
mov
repnz
jl
pushf
jb
mov
cmp
or
sub
test
jl
push
sbb
mov
mov
movsl
push
cmc
add
sub
aam
je
lret
std
orb
scas
sub
jl
jecxz
pop
mov
in
xchg
adc
push
enter
add
jge
dec
jle
jns
jecxz
pop
and
in
pusha
jno
fwait
sbb
mov
xchg
bound
ret
xor
or
cmpsb
in
mov
aad
pop
and
movsl
mov
or
jmp
aas
adc
mov
outsl
mov
scas
mov
insl
and
mov
sbb
dec
popf
call
cmp
pop
pushf
pusha
stos
aam
inc
mov
lock
jno
bound
imul
jbe
dec
jg
or
and
jno
xor
and
sbb
std
out
rcrl
stos
mov
into
fistpl
repnz
arpl
bswap
cwtl
je
scas
mov
rcrb
mov
mov
scas
ss
jle
jecxz
pop
add
pushf
popf
js
popa
dec
test
ret
sub
cmp
out
test
fwait
subl
movsb
jp
or
pop
test
cmpsb
stos
es
cmp
mov
shlb
test
lahf
or
mov
insb
adc
into
dec
push
sbb
add
mov
dec
cmc
pushf
push
in
jo
idivl
mov
pushf
xchg
sub
iret
pop
inc
movsl
cmpsb
in
ret
scas
lea
out
sub
xlat
pop
dec
mov
mov
dec
push
outsl
or
xchg
ffreep
gs
push
add
jo
jns
pop
xchg
aad
cwtl
lret
hlt
popa
not
dec
fiaddl
sub
imul
ret
popf
jae
sub
mov
xchg
test
sbbb
cli
push
sbb
movlps
adc
sub
inc
adc
cmc
xor
jge
xchg
mov
movsl
in
push
cmpsb
and
pop
nop
inc
bound
inc
daa
fs
xor
nop
test
jp
mov
int
fwait
outsl
inc
sub
cmp
addr16
stos
jae
in
ljmp
icebp
and
mov
fs
sahf
ljmp
es
lods
cltd
sub
jns
xor
jmp
ja
push
xchg
je
adc
pop
imul
xchg
aam
test
sub
ss
pushf
jg
push
jne
dec
and
pop
je
xchg
jle
lock
push
aas
imul
sub
stos
clc
sbb
pusha
subb
insl
jmp
ja
jp
pop
fildll
sti
hlt
dec
sub
hlt
lods
mov
sbb
cmp
xchg
push
mov
loope
lds
out
add
pop
sahf
dec
adc
cmp
cs
cwtl
inc
xor
adc
jno
add
cwtl
cmp
dec
add
jmp
imul
and
xchg
loopne
inc
out
pop
xchg
xchg
mov
dec
push
sub
test
ffreep
loopne
adc
sbb
jno
sbb
cs
das
fidivrl
xchg
sub
cmp
jmp
sbbl
push
push
imul
mov
aaa
push
ret
pop
fiadds
cmp
jecxz
mov
xchg
lods
xchg
cmp
inc
jmp
or
dec
pop
sbb
push
insb
mov
movsl
jecxz
sub
pop
lods
fcmovnb
pusha
fsubrs
ja,pt
add
lds
jne
int
dec
xchg
mov
xor
mov
mov
pop
popf
popf
je
mov
and
jecxz
sbb
pop
loope
scas
fldt
es
je
jo
and
data16
cmp
scas
xor
fbstp
flds
sub
into
mov
xchg
pop
outsb
jo
xor
in
lods
push
push
cmpsb
rorl
jbe,pn
sarl
xor
mov
push
pop
and
rclb
call
and
fcmovnb
ror
sub
mov
les
push
adc
dec
mov
in
cmp
in
aaa
xchg
jne
inc
hlt
xor
push
pop
mov
add
ret
subb
inc
adc
push
pop
sub
sbb
dec
test
mov
setp
arpl
or
push
pop
push
stc
mov
mov
mov
push
and
stc
in
int
xchg
bound
lcall
xor
or
xchg
aaa
add
pushf
shlb
lret
fwait
pop
dec
cmp
test
or
xor
flds
test
out
repz
addr16
and
stc
sbb
loope
ds
add
inc
pop
pop
or
push
inc
out
jg
in
loop
out
push
stc
and
insb
aad
lret
xlat
add
cmp
sbbb
ds
clc
pop
jno
mov
cmp
adc
mov
test
dec
pushf
jecxz
jmp
mov
loope
push
pop
sahf
fwait
sbb
add
dec
mov
sar
push
lahf
lea
xchg
outsl
inc
mov
lahf
push
mov
xor
in
fsub
adc
or
jo
sbb
test
sbb
inc
das
dec
cmp
movsb
int3
push
sahf
mov
test
push
push
cltd
movsb
adc
cmpsl
mov
lcall
sub
mov
sub
outsb
test
repz
push
add
inc
nop
push
mov
cmpsb
pop
sub
pop
fdivrl
jle
or
stc
fwait
out
loope
les
sub
sbb
inc
sbb
dec
outsb
push
and
and
cmpsb
and
or
lahf
dec
jle
and
adc
and
clc
mulb
int3
jns
adc
push
shl
pop
mov
xor
loope
xchg
out
movb
and
cmp
iret
enter
mov
outsl
pop
shrd
and
cmpsb
inc
fwait
mov
popf
iret
imul
lea
movl
int3
sub
pop
sahf
lret
repnz
insb
mov
adc
jl
ret
cmc
mov
outsb
inc
lds
je
mov
scas
inc
pop
test
or
idiv
loopne
mov
adc
pop
mov
lahf
push
mov
inc
in
je
lods
adc
clc
mov
scas
add
out
dec
mov
loope
lds
mov
mov
xchg
jo
aas
or
in
filds
dec
and
fimull
fistpl
adc
out
inc
insl
psrlw
pop
sub
xor
mov
push
lock
adc
mov
xchg
imul
add
mov
push
repz
xchg
out
mov
mov
imul
adc
and
mov
fidivrl
inc
push
mov
scas
aaa
inc
setge
mov
xor
mov
jmp
cmp
jns
aaa
lahf
cmp
fcomps
test
cs
adc
movsl
aaa
lock
mov
scas
mov
loop
insl
mov
or
cmovg
repnz
jmp
inc
sbb
loopne
xor
xor
lcall
xchg
dec
aaa
or
fcomps
rep
pop
xor
mov
ret
leave
mov
mov
ds
fiaddl
mov
cmpsl
ret
inc
mov
push
jns
sarl
jmp
inc
lods
rcr
xchg
mov
cmp
fidivrs
aad
je
inc
push
ljmp
mov
nop
rolb
xlat
mov
cmp
push
cmpsl
push
cmpsb
cmp
pop
adc
inc
shrl
pop
insl
lret
cmp
inc
dec
and
int3
stos
adc
rclb
mov
lcall
push
sub
and
inc
test
aam
mov
ja
in
cmp
out
jbe
xor
orl
mov
mov
sbb
cld
jp
and
push
je
lret
shl
pop
daa
hlt
rcrb
and
iret
jno
iret
imul
dec
roll
imull
dec
and
xchg
xchg
movsb
jp
xor
xchg
inc
ss
cs
mov
dec
xchg
mov
mov
mov
out
int
push
loope
sbb
xchg
or
inc
add
adc
inc
andb
mov
sub
and
mov
mov
cwtl
mov
xchg
mov
sub
js
stos
out
nop
inc
pop
and
mov
imul
ja
sbb
mov
js
iret
call
fisubl
sub
sub
and
repz
inc
pop
les
adc
in
adc
add
cltd
adc
in
mov
decb
jo
xor
xor
hlt
sbb
daa
or
sbb
push
bndstx
mov
xchg
adcb
test
push
mov
repz
push
lret
and
repz
leave
mov
add
in
into
popf
adc
clc
inc
in
add
enter
pop
aaa
subl
rolb
xchg
adc
pop
xchg
cmpsl
push
and
mov
mov
sub
adc
or
jmp
jmp
xor
jl
mov
dec
sub
and
xor
push
cmp
mov
push
or
cmp
clc
mov
mov
dec
or
adc
lock
imul
mov
jecxz
lret
dec
jns
out
jge
pop
repnz
daa
enter
pusha
mov
or
sbb
cmp
andl
out
push
xchg
cmp
dec
lds
pop
lea
push
loop
pop
push
test
sahf
xor
sub
cmp
orb
xor
pop
test
cmp
in
pushf
cmp
adc
stos
xor
inc
popf
out
fisubrl
and
lock
add
loop
xchg
test
or
lahf
inc
clc
cwtl
adc
and
cltd
in
lret
dec
ds
mov
rcrl
jb
loope
and
dec
das
lret
push
xor
cs
imul
push
mov
leave
outsl
mov
lds
ds
and
roll
out
inc
fnstsw
loope
jae
dec
movl
je
or
fwait
out
ds
jbe
pop
mov
pop
mov
test
push
cli
test
int3
cwtl
movq
hlt
mov
push
cmpsl
cli
jnp
pushf
adc
push
inc
xchg
cmp
testb
xor
test
test
and
lea
add
mov
adc
fsubr
subb
aam
mov
lock
popa
test
adc
js
repnz
sbb
sub
mov
lret
cmp
outsb
lods
lods
push
fistl
cli
scas
test
push
lea
inc
divl
movsl
or
cltd
shll
mov
xchg
and
sbb
xchg
aad
mov
rolb
std
mov
jns
sbb
cmp
mov
in
aam
in
cmp
or
div
dec
inc
push
aad
addl
popa
test
cltd
testl
mov
sti
jbe
addr16
sub
push
jmp
clc
cmp
out
dec
lahf
popf
pop
fisubrl
or
xchg
and
shlb
push
insl
fwait
repz
ljmp
imul
adc
xor
xchg
aas
or
sbb
and
push
pop
insb
lret
outsb
sub
mov
xchg
inc
es
mov
outsl
fidivl
movsb
loop
scas
loope
push
je
testl
aas
addb
lods
push
div
cmp
jne
ror
negb
sub
test
lea
icebp
add
jp
mov
ja
cs
movsb
sub
stc
push
mov
sub
jns
add
rolb
dec
jp
pop
es
jmp
jmp
int3
stc
adc
repz
add
or
cmp
sahf
nop
or
cmpsb
ds
sub
lock
jne
add
push
mov
pop
xlat
movl
xor
or
dec
in
shl
sub
mov
dec
push
data16
and
orb
inc
addr16
gs
sub
imul
pop
xchg
fdivs
mov
loopne
adc
gs
mov
rorb
jge
repnz
adc
movsl
mov
pop
outsl
sarl
arpl
cmc
das
popf
inc
xchg
andb
cmp
pop
or
sub
add
mov
stc
mov
jae
cwtl
jne
mov
cli
push
out
fsubrs
dec
cltd
jge
sahf
or
pop
rcl
xchg
mov
xchg
jp
cs
jg
jmp
outsb
xlat
jg
sub
push
sbb
test
jae
insb
jl
inc
mov
and
push
xchg
test
les
push
into
orb
ljmp
lahf
sbb
cmp
int
scas
dec
insb
jmp
dec
ret
in
cmp
cmp
jmp
sbb
stc
fisubl
jge
sub
push
pusha
imul
outsb
xor
jmp
push
pushf
mov
jbe
lcall
sbb
jb
iret
add
fbld
pop
add
sub
and
mov
add
pop
pop
cli
sub
into
jg
jmp
aam
adc
xor
dec
in
scas
ds
jne
in
dec
mov
push
jbe
fcoms
push
adc
xchg
adc
insl
lret
sbb
cli
adc
mov
notl
add
jno
jbe
jo
mov
es
subl
je
pushf
test
test
cld
adc
rcrl
loope
hlt
les
shll
adc
sub
aam
sub
and
jnp
mov
mov
ja
pop
pop
subl
inc
and
call
inc
jp
fildl
stc
sbb
fdivrl
xor
push
gs
sub
push
or
push
xchg
push
cmp
imul
movsb
xchg
push
stos
pop
mov
cmc
ret
nop
xchg
cmp
mov
push
inc
adc
and
insb
and
push
sti
inc
mov
cmpsl
insb
movsb
fiadds
xchg
jo
in
pushf
or
xor
sbb
push
jae
pop
fcmovnbe
cld
shll
arpl
or
ficompl
mov
mov
jbe
iret
add
mov
jle
insb
push
ret
sbb
pop
mov
sub
int3
daa
xorl
movsb
push
adc
or
lcall
add
add
or
cmpsl
sub
rol
mov
cmp
daa
enter
adc
nop
push
mov
repnz
in
inc
pop
lock
mov
ss
or
test
and
hlt
mov
faddl
adc
js
dec
aad
and
xchg
loopnew
mov
xchg
fwait
into
pop
int
mov
fld
and
cmp
lcall
push
xlat
jns
loopne
es
or
xor
inc
insl
dec
mov
sbb
in
jnp
push
repnz
pop
mov
stc
add
cld
inc
xor
movsb
ss
adc
int3
mov
std
and
mov
pop
xorb
mov
sub
mov
jmp
mov
inc
pop
inc
in
pop
test
pop
push
adc
lret
ret
xchg
lods
dec
or
nop
movsl
mov
pop
sub
out
sbbl
push
jnp
test
jns
icebp
test
lods
dec
jae
mov
pop
add
shll
cmp
xor
insl
mov
ss
scas
imul
negl
jae
push
add
adc
and
in
push
xor
dec
jge
pop
push
mov
jo
loopne
ds
ret
inc
mov
sub
push
fnstenv
xchg
xor
insb
aad
and
add
push
test
pop
mov
hlt
nop
sub
and
in
jle
addr16
jl,pt
mov
sub
inc
mov
test
adc
aas
push
inc
mov
xchg
clc
in
repnz
lock
mov
outsl
scas
imul
adc
inc
sub
cmp
iret
mov
xchg
sbb
sbbl
inc
fistpll
stos
xor
subl
rcrl
cli
sub
adc
sub
sbbl
mov
sbb
cmp
imul
or
out
sbb
sbb
pop
mov
addb
mov
inc
and
pop
cmpsb
pushf
mov
jb
dec
adc
pop
pusha
in
bnd
sub
stc
push
popl
mov
mov
frstor
sar
gs
xchg
cmp
jge
sub
adc
mov
mov
lahf
lcall
mov
fsts
sahf
popa
or
xchg
arpl
sbb
jne
rcr
test
das
in
addr16
ret
into
cmp
movsl
jb
cs
xchg
add
jbe
mov
inc
sahf
cmp
mov
or
aam
int
xor
jg
dec
sbb
sbb
xor
add
sarl
aas
fldt
xchg
aas
rorl
dec
push
icebp
mov
in
push
pop
push
notb
fdivs
loopew
mov
je
jbe
jp
outsw
push
dec
xchg
stc
cmpsb
sbb
bound
outsl
mov
rorb
sub
add
xchg
and
mov
test
push
les
jns
and
int
pop
mov
mov
xchg
push
pop
jmp
add
mov
bnd
cwtl
mov
adc
or
mov
mov
fdivrs
test
mov
cld
add
push
cmp
mov
jmp
xchg
mov
out
sub
bound
test
dec
mov
cltd
lcall
out
movb
stc
cmp
ret
mov
mov
sti
mov
lret
adc
decb
insb
inc
pop
cmp
fsts
cmp
aad
icebp
loope
xor
dec
pop
xlat
in
icebp
notb
jb
popa
cmp
faddl
pop
sbb
xchg
jae
cmp
mov
fildl
fldt
ljmp
mov
lahf
adc
dec
pop
stos
pop
xor
lea
loop
mov
jbe
sub
mov
push
imul
ljmp
cmp
es
adc
add
rolb
rcr
sbb
cmpsb
inc
movsl
aas
and
hlt
xchg
popa
test
inc
push
loopne
pop
adc
xor
lahf
test
dec
notl
stos
hlt
lahf
fisubrl
mov
aad
mov
push
sub
xchg
xor
sti
adc
shrl
jle
pop
sub
xor
and
arpl
outsl
aam
ja
or
ja
into
sub
dec
sbb
push
jecxz
cmpsb
data16
or
jnp
mov
loope
add
push
mov
or
cmp
cmp
sbb
iret
lds
cwtl
mov
xor
push
cwtl
notb
and
xchg
es
mov
rolb
jle
push
jmp
lods
movsl
sbb
add
fwait
pop
in
shrl
es
clc
gs
test
ss
and
popf
or
xchg
icebp
es
cli
add
call
pop
and
fmull
add
fwait
sbb
popa
mov
fimuls
mov
dec
jne
cmpl
mov
cmc
shll
cmp
jecxz
adc
mov
and
jnp
pop
mov
stos
inc
inc
imull
push
adc
shlb
jo
pop
adc
scas
js
imul
and
sub
xor
sbb
and
xchg
rcll
mov
popf
add
or
mov
xchg
cmpsb
outsb
daa
imulb
or
xlat
loop
test
sub
repnz
mov
sub
xor
or
jno
inc
pushf
imul
xchg
aas
dec
jp
and
add
data16
leave
cltd
sti
scas
mov
mov
or
xlat
xor
pop
aaa
dec
cmp
hlt
fdiv
pop
pop
mov
xor
shl
jmp
inc
aad
jns
mov
out
jnp
mov
sbb
imulb
xchg
data16
shll
or
lret
lret
bound
out
cmpsb
and
subl
pop
and
inc
push
out
inc
dec
jno
add
mov
pop
cmp
inc
sub
sub
adc
xchg
fimull
aad
xlat
das
iret
into
sbb
push
pop
scas
push
in
sarb
fs
into
sub
lahf
addps
fimull
xlat
sub
mov
ds
imul
xor
fisubl
and
cmp
inc
cwtl
adc
pushf
rcrl
sbb
inc
lods
ret
pop
fwait
shl
loope
mov
sbb
xchg
or
lret
sub
xchg
shr
pop
fidivs
ret
pop
je
stos
add
lock
pop
mov
adc
jb
lret
in
pop
sbb
pop
cwtl
pop
ja
out
ljmp
mov
scas
adc
test
inc
pop
jg
out
jge
imul
lds
scas
gs
mov
fs
push
enter
xlat
rcll
rcll
push
mov
mov
sbb
push
push
xor
inc
outsl
jle
and
add
arpl
je
cmpsl
jg
ret
adc
xchg
int
xor
dec
lcall
stc
movsb
cltd
cmp
inc
icebp
call
addl
pop
xor
les
fdivrl
leave
jns
sub
aad
adc
cwtl
dec
cmp
xor
mov
cltd
shlb
in
outsl
lcall
or
and
gs
call
add
sub
fdiv
xor
std
mov
rorl
jge
rcrl
mov
je
notb
xchg
jp
outsb
insl
inc
mov
sarl
daa
jbe
cld
xor
inc
mov
dec
out
aaa
ret
daa
loope
cld
mov
inc
pop
movl
loopne
movsl
scas
sub
mov
or
mov
add
mov
std
sub
push
das
xor
ror
or
add
inc
mov
loop
dec
jg
mov
test
push
add
xor
cld
jmp
pop
push
repnz
adc
sbb
jecxz
enter
cmp
cmp
push
repnz
hlt
test
pop
sub
xchg
daa
gs
adc
jl
nop
aaa
cwtl
mov
and
enter
jecxz
xchg
hlt
enter
in
shlb
fmul
add
or
and
aaa
std
sbb
jnp
aaa
popa
mov
mov
dec
sub
add
movsb
jecxz
add
jmp
jb
sbb
ret
push
push
and
loopne
int3
pop
dec
fbld
mov
cmpsb
mov
sbb
jne
test
and
pop
jo
rolb
lret
pop
sub
ds
push
sub
scas
mull
inc
in
stos
loopne
pop
test
cmp
subb
pop
pusha
push
fdivrs
cwtl
scas
inc
shrl
jecxz
jg
cmp
push
dec
adc
leave
test
scas
stos
enter
sarb
jae
in
push
cltd
sbb
mov
adc
jbe
inc
out
cltd
movsl
xor
pop
and
cltd
lods
aaa
and
and
js
lret
mov
stc
stos
push
jo
lods
jle
and
gs
leave
bound
aaa
hlt
dec
test
stc
push
into
push
cmp
cmp
outsb
fstps
out
sbb
jp
nop
inc
mov
push
std
aad
or
fwait
loop
fbld
xlat
cmp
movsl
fdivl
pop
cld
jns
push
inc
mov
add
jns
xor
mov
and
movsl
rcrb
sbb
lock
daa
mov
rorb
shrl
dec
je
pop
or
movsl
inc
sbb
mov
jge
fists
sub
insb
and
mov
pushf
add
loopne
xchg
or
rorl
out
mov
jb
add
add
rclb
cmc
xor
push
xchg
inc
xor
hlt
fs
in
mov
std
sahf
stos
push
pop
daa
sbb
add
cmpsl
lds
testb
mov
mov
into
int3
and
mov
xchg
inc
inc
psllq
cs
jno
sub
mov
and
add
das
lds
pop
outsl
iret
cmpb
aas
mov
jae
xchg
mov
push
inc
pop
sbb
inc
mov
and
iret
nop
js
or
arpl
out
cmp
ja
pop
int3
pusha
dec
daa
mov
stos
mov
fcom
and
inc
xor
jne
test
mov
or
sbb
popa
jae
jae
mov
stos
mov
xchg
out
dec
je
inc
out
cs
xchg
movsl
loope
mov
sti
jmp
jl
out
lods
ljmp
in
dec
cmp
cli
xchg
loope
mov
xchg
pop
mov
pop
hlt
jl
sbb
xchg
lods
roll
jb
push
sub
sti
std
shrl
add
pop
push
jmp
xor
mov
out
pop
popa
leave
mov
push
outsb
fnstenv
add
and
jno
lods
xor
test
sub
flds
leave
in
mov
repnz
push
test
es
jecxz
in
fcoml
jns
mulb
inc
mov
lahf
mov
outsb
rcll
adc
push
jbe
or
mov
cs
data16
cmp
and
xor
mov
add
fdivrs
lock
mov
ss
xor
xor
cmp
xchg
jae
in
xor
cmp
shl
fs
cmp
repz
add
jmp
jns
pop
not
in
ds
sub
sbb
dec
in
jg
inc
scas
add
outsl
cmpsb
popf
popf
aam
xor
add
or
xchg
lret
inc
ret
mov
pop
lea
inc
mov
lds
aam
imul
add
push
dec
mov
iret
pop
dec
das
dec
pop
cmpsb
push
idiv
sub
jle
aas
lret
cli
bound
jmp
popf
outsl
outsb
out
sbb
scas
sub
shrb
sub
cwtl
sbb
out
arpl
clc
push
pop
lret
repz
dec
imul
in
and
cmp
stc
push
add
mov
lret
xchg
sti
jae
pop
dec
ret
dec
mov
aad
repz
lock
into
jae
xor
enter
dec
pop
mov
js
roll
loopne
xor
insb
mov
xchg
je
in
adc
dec
sbb
or
cmpsb
adc
mov
sar
xor
dec
adc
add
xor
xor
daa
out
insb
add
push
inc
and
lods
mov
jno
pop
ucomiss
loop
push
add
insb
aam
cli
test
movsb
sbb
fs
sbb
mov
push
mov
mov
dec
es
jg
xor
push
ret
adc
jmp
rcrl
push
jne
mov
fnstsw
sub
push
inc
or
lods
and
dec
cmp
lods
push
sub
xor
jo
push
aam
shrd
push
jo
ja
inc
jae
push
es
divb
mov
in
adc
and
out
mov
loopne
dec
aas
sbb
jl
cmp
data16
or
test
popa
and
test
test
lahf
movhlps
sbb
xchg
mov
mov
hlt
testl
icebp
cmp
jmp
outsl
push
into
negb
aam
sbb
xor
cmp
jge
arpl
xchg
push
jmp
rorb
push
enter
repz
inc
sub
add
sti
in
or
sub
jno
dec
push
sti
sub
xchg
push
jp
frstor
push
xchg
call
mov
outsb
das
sub
scas
das
or
addr16
push
push
push
add
adcb
mov
add
sub
jne
aad
inc
sbbb
in
test
cmp
and
add
pop
cltd
popf
les
mov
call
lcall
dec
ja
lret
push
sbb
aaa
ret
shr
mov
daa
push
jle
mov
mov
add
enter
mov
mov
adc
pop
pop
lcall
lret
adc
test
pusha
ds
sahf
ret
sbb
push
adc
dec
xchg
push
mov
aam
repz
xchg
or
test
xor
cmp
jle
mov
fildl
loope
lods
jecxz
lods
push
jmp
mov
arpl
nop
cmp
das
gs
test
sbbl
out
fsubrl
jbe
and
lock
lea
popa
movsl
lock
sbb
xor
or
mov
int
add
rcrb
lret
test
pop
rcll
dec
test
pushw
sbb
int3
andb
jne
or
outsl
adc
jecxz
and
aad
xchg
iret
test
ficoms
pop
outsb
sahf
cmp
sub
fdivr
mov
xchg
inc
stc
pop
xor
mov
insl
ljmp
or
addr16
lock
scas
jnp
mov
dec
jo
inc
loope
into
or
in
push
mov
mov
mov
popf
jg
call
sbb
xchg
adc
aad
jecxz
scas
cmc
ret
cmp
into
or
sbb
cmp
xchg
std
leave
loope
sbb
js
mov
pusha
xor
mov
lret
icebp
pop
lods
test
arpl
mov
dec
sub
bts
xchg
ja
xor
pop
dec
jns
mov
mov
outsb
adc
or
mov
mov
sub
lahf
cmp
repnz
popf
ljmp
lods
outsl
filds
push
xlat
push
arpl
inc
mov
xlat
into
loope
lea
pop
aas
mov
add
out
pop
lret
push
roll
mov
fisttpll
push
or
test
es
sub
mov
cmpsl
das
mov
dec
dec
push
adc
fisttps
popa
les
mov
and
inc
pop
cltd
daa
mov
out
mov
enter
imull
mov
div
dec
sbb
mov
pop
pop
icebp
fsubl
dec
xchg
arpl
test
stc
adc
push
sub
repnz
jb
addr16
movsb
jo
loopne
push
mov
leave
imul
sub
mov
and
sbb
push
adc
xchg
xlat
push
mov
fisubl
out
gs
jnp
out
mov
jecxz
cs
xchg
sub
gs
test
imul
dec
jmp
popf
mull
sub
sbb
loop
push
cld
cltd
lcall
jg
iret
shrb
pop
adc
or
rclb
pop
cmp
fs
cmpsl
outsb
jecxz
lea
dec
pop
pop
jns
loopne
fsubl
xor
jo
icebp
pop
cwtl
and
pushf
fldl
in
sbb
in
adc
xcrypt-cbc
cmpsl
adc
mov
lods
push
iret
gs
pop
arpl
scas
xor
cmpsb
push
cld
outsb
sti
lea
insb
cmp
popa
or
adc
fidivs
sbb
and
in
push
xchg
pop
xchg
popf
pop
xchg
lcall
dec
adc
enter
aas
test
pop
in
inc
das
mov
or
lcall
lret
mov
iret
mov
mov
lea
pusha
pop
or
dec
xor
adc
orl
pop
xchg
int3
hlt
cmpb
fidivrl
sbb
enter
mov
call
loope
loopne
rorl
mov
or
jle
cli
xlat
stos
shlb
pop
add
leave
in
in
xorb
and
dec
gs
cmp
dec
outsb
cmp
cmpl
and
lock
jno
push
mov
jbe
pop
adc
aaa
hlt
icebp
clc
adc
inc
mov
jmp
push
or
add
cmp
xor
xor
or
or
sbb
arpl
js
mov
dec
jnp
jo
repz
push
arpl
lods
mulb
ret
lock
jnp
or
pop
stos
and
jg
movsb
mov
movsb
add
cmc
push
push
bound
dec
xchg
iret
shlb
enter
and
push
jmp
cmp
sub
mov
jbe
and
cmp
or
fwait
jns
pop
stc
push
or
fucomi
mov
adc
std
jb
lahf
loop
mov
imul
hlt
mov
inc
mov
scas
sub
das
out
lcall
push
sub
dec
mov
or
add
mov
xor
pop
inc
add
test
repnz
dec
pop
rcr
dec
fisubrl
xchg
sti
mov
stos
test
sbb
sub
sbb
in
mov
and
inc
jae
dec
fsts
jns
dec
loop
mov
rcll
mov
inc
jae
mov
lock
cmc
jl
sbb
mov
and
xchg
divb
mov
fbld
mov
and
les
mov
or
loop
dec
jl
push
cmp
jae
dec
push
pushf
adc
out
loopne
and
fists
mov
addr16
push
sub
out
pop
dec
lahf
dec
sbb
shlb
inc
xchg
and
mov
cmp
adc
pop
inc
jne
push
xchg
jl
xchg
and
in
xor
stos
inc
push
test
adc
lods
into
cmpsl
ret
cld
sahf
sub
xor
int3
xor
inc
std
push
in
loopne
ljmp
lret
cmp
mov
mov
stos
mov
ljmp
scas
hlt
mov
pop
or
mov
lret
mov
xor
dec
or
lods
imul
jb
mov
inc
testl
xor
arpl
enter
lds
nop
hlt
leave
push
add
mov
push
loope
outsb
push
jmp
cmpsb
push
adc
cmp
mov
cmpsb
push
jl
sbbl
mov
pop
sub
pop
dec
pop
popa
inc
leave
mov
xchg
xchg
sub
mov
sbb
leave
pop
inc
icebp
adc
pop
daa
ret
in
clc
inc
pop
pop
cli
fcomps
mov
adc
das
hlt
adc
lahf
add
xchg
pop
jp
stos
lds
xchg
push
test
inc
mov
mov
outsl
movsb
mov
lret
jecxz
scas
sti
sarb
push
pop
xor
jmp
mov
mov
in
jno
cltd
mov
xchg
or
xor
inc
jmp
or
arpl
les
pop
testb
insl
out
push
dec
pop
adc
into
insb
daa
adc
cmp
or
add
and
cld
push
xor
xchg
adc
aaa
dec
les
push
mov
jp
outsl
sbb
fcompl
mov
sti
shll
and
arpl
lods
fs
ror
ja
mov
daa
sub
fisubl
cs
ss
shl
test
dec
lock
icebp
sub
mov
rorb
clc
sti
or
loopne
cmp
loopne
mov
outsb
test
xlat
out
push
xor
sbb
dec
jge
push
test
jl
push
xchg
push
jg
push
lahf
fldcw
push
cmpsl
push
cmc
lret
pop
jo
mov
dec
xchg
jnp
sbb
out
mov
sbb
popl
pop
std
mov
jg
enter
cmpsb
bound
test
dec
pushf
adc
jmp
jl
sbb
pop
cmp
call
push
and
ss
pop
aas
mov
xchg
xor
sahf
lods
std
aas
cwtl
test
push
cltd
pop
mov
lds
cmpsl
mov
push
mov
out
dec
mov
inc
out
or
sub
negb
movsb
je
add
movsl
orb
jns
jg
sub
sbbl
ljmp
icebp
rclb
mov
lods
mov
test
and
push
sub
inc
popa
lret
repz
loopne
cmc
xchg
cmp
fadds
pop
data16
and
sub
jg
fwait
rclb
cmpsl
mov
sub
sti
cmp
sbb
fstps
cwtl
test
dec
ret
cmp
cmpsl
dec
dec
pop
clc
pop
inc
xchg
lret
shlb
dec
idivb
movb
dec
lret
sbb
fstpl
ret
cwtl
push
leave
push
cmp
push
xchg
mov
xlat
push
js
push
dec
dec
push
cwtl
xchg
movsb
addr16
ret
pop
out
inc
mov
pop
pop
ss
jmp
lcall
pop
repz
add
test
inc
xchg
sbb
loopne
mov
fucomip
pop
shr
add
lods
imul
jns
les
pop
jbe
adc
or
sub
filds
jne
push
repz
and
mov
push
in
or
xchg
lds
pop
aam
insl
cmp
fsubrl
mov
outsb
mov
cld
or
xchg
loopne
xchg
cmp
xchg
pop
mov
sti
adc
jmp
sahf
adc
push
ds
rolb
add
jmp
test
or
mov
or
imul
xor
jno
sbb
je
push
mov
or
rolb
add
mov
add
fidivrs
aad
sbb
mov
in
sbb
lds
ret
ds
add
and
mov
jbe
call
mov
xchg
arpl
aad
cmp
jo
lods
movsb
pop
clc
test
clc
xchg
outsb
nop
fwait
jmp
mov
outsb
clc
mov
pop
inc
push
inc
icebp
icebp
push
andb
and
adc
mov
loope
push
push
or
or
outsl
push
cs
push
or
mov
pushf
mov
cmp
push
cli
and
push
cli
mov
xchg
mov
mov
pop
pop
lahf
outsb
adc
or
in
mul
ret
inc
mov
je
cmp
mov
lea
popf
call
pop
aaa
mov
pop
adcl
fcmovb
dec
dec
dec
fsubs
loope
push
xor
into
jl
adc
fdivrl
out
loop
cs
lock
out
cmc
test
xchg
mov
xchg
push
ss
jecxz
sbb
cmp
sub
mov
dec
daa
gs
je
fldl
shl
test
stos
out
cld
test
pminsw
call
and
insb
ss
ret
xchg
popa
and
jb
adc
fs
outsb
leave
je
leave
mov
fcoml
push
dec
fmull
mov
sub
pushf
sub
cmp
lds
cmc
xlat
mov
adc
les
loopne
clc
and
test
fwait
insl
ficomps
push
sti
popf
cmp
lahf
adc
add
shll
mov
daa
into
cmpsl
xchg
std
sub
pop
xchg
cltd
out
fsubr
daa
andps
clc
mov
mov
repnz
scas
dec
cmpsl
insl
sbb
rcrb
or
scas
repz
fcoml
jne
mov
or
stos
jmp
jp
xchg
mov
lret
test
adc
clc
and
add
movsb
push
popa
and
xchg
lahf
add
xchg
adc
es
repz
add
mov
popa
test
cmpsb
loopne
insl
sahf
and
inc
ret
clc
push
or
inc
nop
jmp
push
mul
mov
push
pop
lock
ret
aas
push
lock
repnz
cli
and
adc
clc
jg
jp
aad
std
in
or
push
and
fwait
cmp
xor
mov
jl
das
sub
sahf
pop
insl
adc
add
xchg
mov
mov
cld
scas
cs
xchg
jp
dec
cli
mov
ljmp
lcall
sbb
addr16
pop
xchg
add
adc
sbb
daa
ret
js
ja
dec
xchg
mov
outsb
movsb
and
or
jp
lret
andl
or
in
cltd
mov
cmp
popa
cld
lret
pop
mov
in
int
cltd
pop
xchg
ja
xchg
mov
sarb
fidivs
std
sbb
push
xor
dec
lret
scas
sub
stos
fstps
add
js
ror
mov
fiadds
push
mov
icebp
dec
adc
das
sti
or
pop
std
add
fcmovu
sbb
add
mov
or
aam
cmp
aam
insb
call
mov
mov
mov
sub
and
mov
dec
push
in
adc
sbb
pop
into
loope
push
js
fs
inc
sbb
xchg
push
ret
push
mov
adc
js
jecxz
popa
pop
stos
mov
push
in
fisubrl
pop
pop
jl
mov
mov
mov
jecxz
iret
sarb
lods
adc
sbbl
sbbb
fdivs
sbb
xor
into
fisubrs
inc
pop
push
add
aas
lock
push
mov
xchg
mov
test
pop
xor
rcl
sbb
mov
push
sub
je
andl
lcall
adc
pusha
js
or
mov
les
in
sub
jecxz
movsb
push
and
mov
mov
movsb
iret
cmc
adc
push
roll
xchg
sbb
add
sbb
mov
jno
fimull
push
xchg
dec
popa
lods
sarb
sub
push
fs
mov
xor
push
flds
or
and
pop
inc
and
xor
push
mov
xchg
cmp
push
inc
mov
roll
adc
jns
sti
sbb
pop
lea
mov
in
and
dec
shld
stos
cmc
push
stos
mov
cmpsb
inc
ret
mov
jns
adc
dec
mov
xchg
sbb
jg
clc
mov
sti
test
xchg
sarb
cmpsl
insb
ret
dec
mov
push
cmp
mov
jg
jbe
loop
popa
xlat
adc
jae
imul
sbb
test
jb
adc
mov
cld
add
out
insl
xor
jbe
ljmp
data16
nop
cmp
adc
add
cmpsb
push
pop
mov
jp
jp
sti
fwait
in
cmp
sar
jmp
fnstsw
push
fsubl
inc
mov
push
fmull
dec
sbb
out
xor
dec
xor
dec
pusha
and
jge
cmp
sub
enter
xorb
add
lock
pop
push
andb
cmpl
push
pop
mov
pop
fs
in
mov
and
stc
or
mov
ljmp
lahf
lahf
or
xchg
aas
ljmp
mov
nop
pop
lds
add
push
cs
sub
gs
outsl
es
in
cmp
test
inc
lods
mov
enter
or
lcall
xchg
and
push
cli
add
lahf
mov
mov
xchg
test
scas
xchg
stos
jb
xor
sub
mov
out
cwtl
mov
lds
pop
les
and
xorb
pop
lahf
or
and
ror
adc
add
sub
inc
mov
sub
xchg
or
je
mov
dec
rorl
mov
push
les
ja
push
test
test
ss
int3
jae
dec
das
sub
scas
movsl
icebp
cwtl
and
lea
mov
shlb
mov
inc
jb
out
int3
mov
adc
sbb
lcall
or
fldl
pushf
mov
fsub
scas
dec
jp
xor
dec
loopne
dec
fmull
xchg
adc
dec
push
insb
jnp
shlb
andl
sti
rorb
adc
pusha
sub
pop
xor
add
cmc
mov
data16
shrb
testl
sub
int3
outsl
sahf
shl
cmp
add
stos
cmpsl
or
loope
pushf
add
sbb
fwait
stos
cmpsb
iret
imul
in
pop
imul
int
sti
sub
mov
pop
out
mov
inc
pop
jmp
ds
jge
mov
mov
adc
lods
cwtl
mov
mov
outsl
xchg
jle
or
sarl
cmp
push
or
outsb
mov
loope
aad
cmpl
mov
mov
idivb
xchg
test
lret
push
mov
xor
mov
iret
sub
scas
sbb
jno
test
loopne
push
xchg
dec
jno
fdivs
mov
arpl
les
jns
dec
das
mov
push
push
pop
jmp
xchg
mov
scas
iret
sbb
pop
adc
clc
pusha
lods
dec
sar
inc
jmp
lcall
push
sbb
pop
and
adc
sti
mov
cmpsl
mov
mov
mov
mov
or
inc
pop
stos
push
cmp
xchg
fs
cmp
push
in
push
les
int
inc
clc
jno
iret
out
pushf
ret
mov
sahf
outsb
imul
mov
js
gs
nop
mov
xor
in
jecxz
pop
xchg
pushf
aaa
test
loopne
sbb
inc
pop
push
repz
test
jo
lea
mov
fdivl
test
or
lret
mov
dec
call
sbb
push
bound
push
test
mov
add
sbb
lock
mov
int3
cmp
fistps
pop
mov
xchg
inc
testb
or
jo
addr16
test
addr16
mov
and
push
adcl
mov
mov
mov
fcomps
iret
push
daa
call
adc
push
sbb
fwait
lahf
loope
inc
jae
jle
push
push
pop
or
xchg
bound
mov
xchg
shlb
or
mov
shll
push
daa
xchg
inc
jl
xchg
sbb
sub
bndstx
dec
add
sbb
lea
mov
jg
fdivp
pop
mov
aaa
les
adc
xchg
mov
inc
ret
lcall
and
xchg
cmp
out
mov
gs
adc
lret
popa
cmp
stc
xchg
jne
xchg
repz
dec
nop
dec
jmp
mov
leave
fwait
test
ss
shrl
pushf
repz
out
ja
mov
mov
mov
out
fldt
repz
orb
in
repnz
xor
negb
cmp
sub
pop
icebp
sub
inc
mov
pop
push
je
mov
pusha
jae
fisubrl
out
mov
or
adc
ret
inc
lods
lea
fdiv
xor
mov
nop
mov
decl
jmp
in
jp
sti
add
rcll
mov
jle
stc
lods
enter
es
jo
push
cmp
mov
insl
sub
rcr
or
ret
sahf
stc
xchg
add
pushf
movsl
xchg
inc
push
scas
mov
out
dec
repnz
sti
ret
sub
mov
jnp
push
jnp
and
pop
jb
and
outsl
xchg
jmp
xor
out
int3
sbb
dec
inc
insl
xchg
outsl
nop
in
into
jecxz
inc
add
push
nop
dec
xor
push
aam
ja
cmpsb
cld
and
je
add
jp
mov
lahf
xchg
add
jo
mov
xor
jmp
jbe
push
jno
gs
pop
hlt
cwtl
or
jns
lea
inc
jbe
mov
xor
out
fsubr
in
stos
cmpsl
xchg
sbb
cwtl
stos
pop
aaa
roll
push
lds
cltd
pop
fwait
dec
ret
dec
rclb
cmp
mov
mov
mov
int
pop
push
xor
jmp
cmp
movhps
subb
pop
jmp
add
sub
jnp
rclb
aad
hlt
mov
add
xorl
pop
dec
mov
icebp
cltd
jae
pop
notl
imulb
call
popf
mov
fwait
pop
and
cli
pop
pop
sbb
or
and
sub
mov
es
inc
xchg
in
adc
sbb
rcr
sub
fcoms
out
mulb
subb
push
int3
mov
js
jmp
out
shr
push
mov
sbb
movsb
or
adc
idiv
sbb
pop
fldl2e
cmp
scas
xchg
sbb
sub
aam
mov
scas
lret
inc
fcmovne
mov
jp
xor
sbb
pop
fwait
cld
cmp
xor
movsl
jle
cmp
sub
adc
mov
sbb
enter
iret
call
inc
push
out
xor
pop
es
lcall
int
pushfw
push
rcrb
mov
rcll
arpl
mov
shll
xchg
push
dec
flds
in
xchg
je
movsb
inc
aaa
jp
pop
sbb
sub
mov
rolb
mov
cmp
clc
movsl
inc
mov
jl
jnp
ret
cmpl
add
jmp
ja
out
adc
fsubrl
rclb
sbb
pop
or
ret
jne
jno
mov
jmp
inc
in
adc
insl
dec
cs
xorl
pop
sub
mov
fisubrs
xor
mov
mov
aaa
fistps
scas
pop
rorb
fnop
mov
jecxz
jno
outsb
adc
or
mov
mov
jns
xor
mov
imul
jns
add
pop
mov
inc
lea
imul
sbb
int
xchg
scas
sbb
sub
jne
push
mov
loopne
pop
push
and
pop
jg
mov
jbe
push
paddsb
xor
in
enter
fst
out
sahf
movsl
xchg
dec
sbb
pop
out
and
sub
add
insb
lret
stc
or
push
mov
pop
js
xor
or
jg
xor
and
cmp
mov
into
xor
iret
insb
mov
adc
frstor
pop
int3
mov
add
andb
sbb
icebp
mov
xchg
sub
sub
imul
fucomp
mov
movsl
xor
stos
movsl
xchg
fidivrl
push
xchg
mov
sbbl
sbb
mov
sbb
cmp
pushf
shll
or
in
mov
das
or
xchg
jae
mov
dec
add
mov
insl
jae
aad
add
jb
or
andb
jne
mov
popa
jecxz
jecxz
jb
mov
leave
mov
jecxz
movsl
sub
push
adc
lea
dec
in
arpl
mov
sub
xchg
ret
mov
fmul
lods
adc
sub
sarl
ret
out
xchg
inc
mov
and
js
push
mov
or
xor
test
fldl
mov
out
pop
popf
pushl
sbb
scas
daa
xchg
ds
mov
movsb
enter
idivl
pop
rolb
loope
pop
xor
jge
mov
cld
mov
out
push
leave
xchg
mov
imul
add
or
fdivl
cmp
ljmp
dec
mov
push
dec
lods
adc
adc
or
repz
test
or
pop
xlat
addr16
test
enter
daa
cmp
lahf
stos
fwait
sub
mov
add
sti
arpl
outsl
pusha
or
in
sti
sbb
xchg
fdivrl
neg
nop
jo
enter
xor
sbb
cmp
add
xor
mov
dec
jb
invd
hlt
jl
jge
mov
adc
out
jg
repz
mov
mov
mov
mov
push
fiaddl
jnp
xchg
sub
push
pop
add
sub
mov
push
pop
mov
mov
ja
mov
cltd
pop
dec
and
inc
xor
sbb
add
pop
cmp
dec
push
and
dec
clc
negb
sub
or
mov
cs
ja
outsb
mov
int
addb
and
scas
mov
popa
fcomps
cwtl
scas
notl
bnd
or
cmp
cmp
sub
sahf
ficomps
sub
loopne
xchg
jae
push
subl
cmpsb
rolb
in
xor
jae
in
and
dec
je
xor
in
xchg
adc
xor
daa
out
xchg
mov
lret
push
jmp
mov
idivl
and
out
cmp
pusha
repz
ss
cmp
jle
adc
loopne
or
cld
aam
fstps
popa
xchg
jp
mov
mov
lock
leave
adc
test
outsl
jle
push
jl
mov
shll
jbe
add
clc
cmp
lret
loopne
clc
xor
push
dec
push
push
jne
mov
sub
sub
jge
pop
insl
sub
mov
xchg
out
sahf
ljmp
and
popf
mov
scas
loop
jnp
sub
sbb
or
and
jge
xchg
leave
push
nopl
and
test
jg
cmp
lock
imul
bound
outsl
adc
add
cwtl
sub
adc
rcll
add
jbe
int
sub
inc
nop
cmpsl
push
lods
dec
push
loope
cmp
lcall
and
hlt
sbb
in
loope
mov
xchg
pop
std
sti
loop
test
mov
jp
push
cltd
mov
adc
inc
in
jp
or
test
ret
lds
ss
mov
mov
adc
sbb
jmp
lret
mov
sbb
mov
mov
imul
lahf
std
stos
shll
xor
pop
add
outsb
pushf
out
dec
test
lret
into
imul
fadd
lret
mov
push
xchg
ds
pop
push
jmp
or
xorb
add
insl
mov
mov
mov
push
or
mov
xchg
icebp
add
mov
sub
leave
das
mov
les
push
dec
sub
inc
or
xor
ss
rcrb
pusha
mov
pusha
in
cmpsl
xor
adc
mov
mov
fs
cld
lock
mov
das
loopne
mov
pop
inc
rcl
mov
dec
adc
sbb
push
or
cmp
sub
cli
aam
es
lds
hlt
dec
dec
sbb
ret
sbb
adc
fcoml
fimull
jbe
mov
js
fists
lods
imul
mov
sub
push
ret
aaa
push
stos
sub
insb
hlt
and
push
inc
or
addl
xor
xor
out
jne
mov
adc
test
jo
and
mov
dec
outsb
push
pop
push
jmp
imul
pop
sahf
imul
das
shll
outsb
cmc
xchg
sahf
mov
mov
insb
imul
cs
fsubs
sahf
dec
fnstcw
test
sbb
out
mov
cwtl
pop
pop
icebp
xchg
mov
sbb
xor
jbe
hlt
pop
xchg
xchg
cs
jle,pn
add
cmp
and
xchg
push
ljmp
add
cmp
sub
jo
jg
lret
sub
mov
xchg
std
fwait
enter
addb
stc
lea
inc
inc
clc
mov
dec
mov
jl
push
mov
mov
jg
aad
push
dec
add
xor
sbb
push
inc
loopne
std
jb
stc
inc
and
xor
std
std
adc
insb
enter
mov
cmp
daa
push
cmp
lahf
dec
popf
xchg
lea
adc
stc
iret
aad
fnstcw
paddsw
xor
lods
mov
pushf
inc
and
push
daa
adc
xchg
in
iret
lods
sub
mov
inc
sti
and
xchg
cmp
cli
adc
jbe
test
insb
insb
imul
repnz
sbb
and
sub
scas
ret
xchg
icebp
pop
int
mov
jne
aam
add
movsb
stos
push
xchg
movsl
psrlq
outsb
pop
test
xchg
inc
sbb
inc
imul
adc
icebp
add
fadds
and
ljmp
xchg
addr16
push
add
int3
out
sbb
jnp
sbb
jnp
out
jmp
fisttps
stc
ja
mov
out
push
mov
cmpsl
dec
sti
cmp
push
sbb
lahf
imul
adc
ja
lret
fistpl
and
cmp
pop
add
ret
pusha
mov
ret
fiadds
cmp
sub
pop
mov
pop
das
test
pop
push
fucomi
jecxz
mov
out
adc
into
fmuls
pop
mov
xchg
lods
mov
int
xor
or
cli
mov
insb
pushf
loopne
jge
mov
mov
testl
xchg
iret
cli
pop
mov
push
js
pop
adc
add
filds
inc
fcmovb
push
jp
xchg
pop
xchg
call
xchg
stos
or
jle
cs
outsl
sub
cmc
mov
dec
daa
jns
and
mov
push
popa
je
mov
call
gs
je
mov
jp
xchg
add
rol
jge
xchg
mov
mov
dec
lods
lock
lods
aad
daa
shl
mov
cli
xor
mov
dec
sub
fisubl
mov
ret
cmp
xchg
nop
in
inc
pop
mull
jb
inc
out
mov
jae
or
aam
xor
inc
jle
imul
and
or
pop
fistpll
add
add
leave
fst
bound
adcl
imul
sbb
jns
orb
push
mov
push
pop
inc
rcl
in
or
insl
and
sub
mov
lods
rorl
cld
push
sub
add
sub
fstl
mov
movsb
leave
push
inc
imul
sbb
inc
or
loop
sbb
cmp
mov
xchg
mov
rorl
icebp
test
daa
adc
cmp
mov
and
sub
insb
pop
mov
repnz
inc
por
add
push
mov
pop
mov
cmpxchg
sbb
mov
cmp
push
xchg
out
adc
pushf
xchg
sub
mov
dec
cltd
sarb
sbb
mov
add
pop
jo
test
sahf
sub
push
stc
ret
add
aam
mov
pop
mov
mov
pop
aas
cmp
and
inc
subb
lea
popa
test
pop
lahf
pop
pop
testl
test
mov
arpl
push
in
es
inc
dec
xor
and
mov
lcall
bnd
enter
push
out
xor
dec
stos
les
into
les
inc
sub
fstpt
push
pop
fiaddl
push
shrb
or
stos
mov
or
repz
cli
add
adc
cmp
xor
adcl
arpl
fadds
out
push
push
mov
and
insb
ret
cwtl
push
jge
or
outsl
outsl
mov
and
jmp
into
fwait
cmp
popf
cld
cmp
les
sub
dec
xchg
jae
pop
mov
mov
push
cmp
divl
inc
xchg
jne
ret
std
in
fcmovnbe
popf
shlb
adc
jnp
shl
inc
xchg
jecxz
loope
addr16
sub
or
xor
cli
pop
test
pop
jle
dec
or
pushf
jmp
pop
jl
data16
add
and
hlt
movb
jno
mov
cwtl
sti
mov
mov
xor
mov
mov
test
iret
cltd
sti
fisttps
or
sarl
sbb
mov
ret
sbb
push
out
movsl
imul
cmp
mov
sbbb
int3
adc
arpl
movsl
push
mov
cmpsl
pop
xor
daa
negb
test
pop
aaa
negb
xchg
jle
fistps
jge
jo
mov
xor
cmpsb
or
jp
testl
ret
inc
push
bound
pop
mov
and
imul
sbb
xor
test
fsubrs
inc
cmp
popa
push
jl
adc
xor
add
movsb
fmulp
add
sub
cmp
or
loopne
sbb
outsl
mov
mov
push
adc
mov
rcl
jb
add
nop
aas
mov
vpsubusb
gs
jmp
insb
mov
or
sbb
jno
mov
jle
xor
jmp
hlt
jo
cmp
cmpsl
add
into
cli
sti
addr16
daa
push
mov
push
aad
aaa
hlt
inc
inc
inc
add
adc
jl
sbb
ret
cmpsl
jae
inc
dec
lock
inc
faddp
mov
int3
call
cmp
fnsave
add
lcall
aam
mov
add
aam
dec
cltd
mov
pop
aas
sub
sub
mov
pop
lock
and
test
pop
addr16
shlb
cmp
scas
jmp
fwait
add
inc
jno
or
bound
call
std
call
xor
add
cmp
cmp
mov
push
pop
xchg
fidivrl
aad
xchg
test
mov
sarl
sbb
jbe
bound
sub
scas
or
dec
add
jl
jmp
xchg
mov
dec
or
push
out
test
ljmp
or
jg
push
cwtl
dec
cltd
dec
scas
push
mov
dec
pop
mov
jl
jnp
cli
inc
and
pop
idivl
jge
call
sub
fcoms
sbb
mov
xor
test
jecxz
push
jae
jnp
popf
jge
test
push
jnp
or
jb
adcb
sbb
dec
xchg
arpl
sub
xor
mov
xchg
js
pusha
dec
mov
aaa
mov
aas
add
add
dec
mov
xlat
mov
adc
xchg
mov
xor
add
pop
mov
xchg
or
xor
lahf
adcl
dec
inc
sbb
or
repz
stos
pop
jge
inc
sbb
hlt
dec
adc
inc
fistps
dec
mov
sbb
sub
mov
cmp
jbe
mov
xor
xchg
sub
jl
in
jg
xor
pop
mov
and
loop
jne
add
scas
xchg
out
neg
mov
push
lds
xchg
repnz
cmp
sbb
ja
xor
sti
jg
test
int3
add
insl
cld
jecxz
mov
sub
add
aas
lret
pop
inc
das
pop
mov
cmp
jmp
lret
popw
mov
pusha
mov
pop
mov
daa
xchg
push
cs
xchg
pop
bound
pop
xchg
mov
xor
sub
push
sub
add
and
inc
jle
imul
adc
inc
dec
movsl
push
lock
push
lea
pusha
nop
mov
lahf
push
shl
xchg
pop
or
bound
and
pop
adc
cltd
je
dec
pop
xchg
in
insl
mov
daa
pop
inc
mov
jmp
xchg
pop
idivb
sbb
inc
mov
mov
in
out
cld
outsl
adc
cmc
cmc
adc
and
icebp
mov
clc
xlat
fs
xchg
addr16
cmpsl
mov
in
jmp
aam
out
int3
cli
testb
mov
cli
call
push
pop
inc
fisttpll
push
lods
xor
or
int
mov
outsl
shr
inc
test
dec
js
pop
dec
cli
loope
mov
sar
lahf
movsb
or
imul
push
insl
ret
or
jae
cmp
inc
dec
dec
jp
lods
and
jb
pop
xor
push
hlt
test
and
pop
xor
sub
int
or
sbb
dec
jns
and
jp
cld
pop
adc
testl
out
and
or
xor
or
and
pop
test
je
mov
or
jne
in
dec
mov
mov
jnp
add
fstpt
xor
cwtl
mov
popa
ja
shrl
jl
int
pop
or
pop
jp
imul
jl
hlt
add
jecxz
jmp
or
int
push
icebp
and
sub
aad
mov
movsl
icebp
sub
pushf
scas
push
ss
in
outsl
dec
push
mov
and
jno
outsl
dec
repz
mov
xchg
add
pop
inc
movsb
aad
inc
xor
dec
in
pop
insb
mov
lcall
insl
bound
mov
ret
xor
adc
movsb
xlat
dec
adc
cli
pop
ja
lcall
push
xorb
xchg
mov
pushf
and
jp
ss
nop
in
pop
je
cmp
mov
mov
cli
adc
pop
ret
jo
stc
jae
sarb
pop
mov
pop
xchg
out
xchg
sbbl
pop
adc
xor
jnp
ret
iret
add
dec
hlt
pop
pop
andb
push
je
mov
es
jae
dec
cmp
jbe
out
jbe
gs
cmp
call
js
mov
push
loop
push
xor
xor
fisubs
add
out
sub
into
jp
bound
ficomps
lahf
inc
sbb
out
adc
cmp
add
inc
dec
stc
scas
pop
cmp
mov
add
icebp
mov
and
pop
push
sti
lds
xor
mov
push
daa
aad
jns
mov
push
push
scas
clc
scas
add
lahf
cmp
add
das
inc
loope
cmpsl
cwtl
pop
mov
xchg
xorb
negb
nop
fs
inc
das
or
add
int3
lret
sbb
jne
popf
push
add
xor
lods
shl
fsubr
adc
arpl
xchg
inc
jno
xchg
mov
aad
jb
gs
and
mov
xchg
cmc
mov
mov
jne
mov
mov
insl
sbb
insl
push
push
addb
clc
mov
xchg
out
push
ret
es
mov
xchg
incb
jae
cmpsl
xchg
pop
test
lds
cltd
dec
out
pop
fisubs
iret
xchg
mov
push
cmp
jbe
jmp
loopne
fwait
or
out
inc
lock
sub
bound
push
mov
xchg
pusha
fists
pop
movsb
es
dec
xchg
inc
add
lods
xchg
loop
imul
or
data16
cmc
xchg
jp
mov
sbb
icebp
cmc
inc
cmp
lods
cld
sub
lcall
outsb
cltd
and
pop
push
movntq
sub
fmull
ficomps
fs
popf
adc
and
lret
loop
cmp
cmc
inc
xorl
mov
stos
xchg
push
hlt
arpl
sbb
mov
addr16
jns
rorl
xchg
xchg
dec
jecxz
xor
xor
cmp
xchg
push
lret
adc
mov
sbb
ljmp
fiaddl
std
dec
lret
icebp
push
xchg
mov
leave
push
stc
mov
je
cld
xchg
cmp
das
sub
dec
jae
mov
lock
dec
or
sahf
loopne
sbbb
popf
jo
mov
rolb
inc
mov
rcrb
adcl
cmpsb
mov
ss
mov
popf
out
mov
aad
bound
fwait
int3
jae
xchg
fdivrs
push
sarb
push
sub
mov
clc
inc
adc
mov
shlb
cmpsl
loop
add
mov
xchg
xchg
movsb
ljmp
sarb
lods
pusha
mull
lcall
jl
stos
test
pop
pop
pop
mov
xor
cmp
mov
cmp
int3
or
sbb
int
js
cmp
xor
in
je
sahf
nop
sbb
pop
imul
sbb
aam
pop
jo
inc
mov
lret
xchg
ljmp
push
vmovaps
push
mov
imul
outsl
orl
add
dec
insl
push
mov
and
cmp
ret
sub
lock
int3
call
dec
fcomi
ss
clc
jmp
ss
icebp
movsb
pop
out
xchg
data16
and
pop
lret
dec
shlb
nop
mov
bound
mov
add
std
mov
jae
in
inc
or
adc
lds
outsl
aad
test
into
fldl
sub
popa
jg
enter
push
test
out
adc
inc
or
mov
push
and
cmpsb
and
adcb
cmp
xchg
xchg
sarl
push
cmp
xchg
inc
std
lret
or
or
subb
mov
xchg
fsubrs
xchg
adc
jg
mov
and
sub
movsb
or
js
pushf
push
cli
xchg
cmpsl
mov
jmp
mov
push
xchg
jmp
repnz
lret
mov
stc
clc
aam
sti
fcomps
rclb
mov
packssdw
xor
test
xchg
in
mov
xor
sub
jmp
cmc
xor
dec
les
lahf
cli
xchg
lret
xchg
mov
dec
sub
out
jmp
sub
ror
mov
push
dec
mov
push
cwtl
sbb
in
sub
sbb
jl
push
mov
fs
mov
fcmovnbe
mov
popf
test
add
test
or
hlt
dec
push
cmpsl
mov
xor
popf
icebp
popa
into
arpl
mov
mov
mov
jb,pt
insl
scas
mov
lds
es
and
push
jns
pop
mov
js
out
int
inc
mov
pop
adc
aad
fiaddl
mov
cltd
sub
sub
loop
jecxz
neg
iret
xchg
mov
aam
add
aad
icebp
in
and
xchg
iret
pop
popa
aad
fidivrs
fwait
dec
aaa
cs
insb
insb
insl
mov
xchg
loope
rol
xor
cmp
movups
cmp
fwait
or
je
mov
sub
inc
iret
aas
mov
pop
mov
es
xchg
sub
repz
push
aas
pop
mov
fisttpl
das
popf
sub
or
add
push
add
mov
lock
adc
das
mov
sub
pop
repz
rol
jle
push
notl
testb
push
cld
add
lods
dec
sub
push
pop
xor
jae
out
mov
cs
repnz
sahf
shrl
loopne
and
mov
push
add
mov
adc
int3
scas
push
cmp
sbb
outsb
cs
xlat
push
movsb
out
aam
push
mov
pop
jg
push
ja
rcll
lea
xchg
jo
xorb
cwtl
shl
and
and
mov
dec
adc
mov
mov
sub
lret
mov
adc
and
mov
repz
dec
cmpsl
cmpsl
push
mov
out
adc
adc
dec
outsl
mov
stos
aas
ljmp
mov
sti
sbb
xor
sub
ret
mov
lahf
xchg
out
dec
inc
lret
xor
and
in
sub
imul
insl
cmp
or
cmp
lods
in
sub
lods
sbb
andb
mov
and
or
lock
adc
inc
inc
stos
push
xchg
popf
aad
fisttpll
mov
aas
sub
push
gs
sbb
add
dec
push
sahf
inc
leave
jl
adcl
xchg
hlt
lods
mov
cmpsl
mov
aam
adc
cwtl
fiadds
pop
and
xchg
bound
out
xchg
xor
add
push
stos
jne
loope
or
ret
ret
sub
xchg
insb
mov
imul
pop
add
cmp
jmp
add
push
cltd
adc
fadd
inc
nop
sahf
std
sub
cmp
inc
pop
insb
sub
testl
sarl
push
jl
mov
cmp
xchg
push
addr16
mov
mov
dec
mov
lds
clc
ljmp
test
mov
in
mov
xchg
cmc
stc
leave
inc
testb
xchg
xchg
xor
add
pop
addl
je
xchg
jp
call
add
adc
jb
fadd
fcmovb
sub
adc
aad
aas
not
mov
add
ljmp
stc
cmp
cmp
fisttpl
mov
lods
mov
repz
dec
sub
push
mov
data16
jns
xor
mov
fldcw
and
inc
add
mov
jbe
fwait
aaa
mov
mov
and
shrb
mov
xor
mov
xchg
cmpsb
mov
jae
add
incb
add
loope
add
faddp
push
daa
orb
sub
dec
enter
pop
inc
hlt
aas
sbb
shll
push
lea
mov
jo
mov
enter
aaa
es
jl
outsl
push
cmp
jg
pop
divl
mov
mov
jmp
push
or
and
xchg
mov
dec
hlt
lock
xlat
imul
cltd
lods
mov
push
or
and
mov
test
leave
hlt
xor
icebp
incb
int
jmp
out
in
mov
mov
fstps
mov
sti
jle
inc
dec
sbb
stos
xor
and
and
xor
std
mov
movsl
add
stos
mov
loope
out
push
sub
idiv
mov
rcrl
cld
sub
mov
lods
mov
pop
aad
add
fsts
pop
jg
cltd
xor
iret
dec
push
shrl
pushf
in
or
cltd
pop
jmp
add
aam
adc
adc
imul
mov
and
mov
addr16
sbb
push
cmp
sub
pop
rol
mov
popf
xor
test
push
inc
and
pushf
xchg
pusha
int
lsl
stc
mov
sub
xor
sub
shll
cmp
scas
mov
xor
mov
and
jmp
jae
int3
cs
insl
dec
sbb
in
sbb
and
ja
stos
sbb
movsb
and
cs
call
mov
mov
sbb
fwait
mov
lea
and
divb
in
test
loopne
out
sub
pop
xchg
sub
dec
shl
mov
jb
fstp
test
mov
in
sbb
ret
das
je
nop
insb
inc
push
pop
xlat
xorl
xchg
cmp
mov
orl
pop
jp
sub
jbe
loop
jg
pop
jbe
dec
xchg
ret
sahf
mov
inc
and
mov
add
mov
mov
cltd
push
sbb
xchg
cmp
imul
pminsw
lret
mov
into
inc
cmp
cmp
push
push
xchg
dec
les
pop
cld
pop
clc
jp
pop
mov
fiaddl
loop
lods
daa
in
out
jle
outsb
push
call
fs
pusha
jp
dec
dec
cmc
fisubl
cli
xchg
mov
icebp
push
pop
cmpsb
out
cmpsl
bound
xor
add
sbb
flds
jmp
insb
lods
add
adc
cli
push
or
push
iret
jno
pop
xlat
leave
ret
sub
ss
idivl
icebp
insb
sbb
rorb
cmp
xchg
je
loopne
movsl
xlat
repz
movsl
pop
fmuls
adc
fsubp
mov
mov
sbb
fistps
mov
inc
adc
lret
addr16
lret
outsl
add
enter
inc
dec
addr16
fstps
mov
jle
mov
lea
mov
cltd
scas
into
jno
fidivs
and
mov
or
sub
repz
push
push
push
popf
lds
pop
mov
int
jmp
jne
inc
or
pop
inc
inc
movsl
push
inc
lock
cs
lods
xor
dec
pop
es
push
mov
jp
xor
lods
mov
mov
stos
xchg
or
sbb
sbb
inc
popf
jecxz
insl
sub
push
inc
dec
mov
mov
xchg
test
adc
test
jbe
push
adc
cli
mov
or
dec
pop
mov
mov
stos
mov
mov
lahf
sbb
scas
mov
scas
cli
mov
out
push
inc
inc
jb
jnp
add
xchg
or
xor
push
and
xor
dec
xchg
dec
jecxz
cmpsl
or
test
mov
test
inc
rol
rorb
daa
adc
sub
mov
xor
js
cltd
sub
stos
push
aaa
les
push
leave
sub
fwait
or
fldl
into
arpl
mov
out
subl
pop
lcall
sbb
mov
lcallw
lods
xor
or
mov
imul
mov
roll
push
sbb
sbb
pop
push
push
mov
ja
lcall
sti
cmc
test
jg
inc
popa
shll
or
out
fcomps
mov
data16
movsb
iret
dec
shrb
push
cmp
sbb
das
out
mov
in
fcoml
stos
out
mov
call
mov
dec
daa
inc
dec
jnp
lods
xor
je
jb
xchg
dec
stos
pop
add
push
out
jmp
repnz
mov
out
xchg
or
pusha
mov
fs
lods
gs
cltd
je
arpl
inc
subb
dec
testb
fst
aad
inc
pop
mov
sbb
cmc
pop
mov
shll
jbe
xor
dec
sbb
xchg
inc
js
lahf
inc
sti
lret
pop
sub
aaa
bnd
js
mov
imull
inc
lea
inc
sbb
sti
mov
in
pop
fimuls
mov
mov
xor
data16
xor
and
pop
jne
mov
adc
pop
add
pop
mov
cmpsb
push
inc
sbb
cmpl
bound
int3
cs
mul
cmp
insl
es
sar
jp
push
xor
mov
add
sub
mov
fdivs
cmpsb
out
pop
and
fldl
sbb
or
loope
cmp
add
mov
sub
xchg
sub
stos
cmovge
insb
inc
stos
fldenv
jp
pop
mov
add
inc
inc
xchg
fiaddl
inc
mov
cmpsb
inc
loope
push
enter
push
mov
leave
xchg
adc
or
in
inc
jmp
push
dec
add
jae
mov
repz
xor
je
add
mov
ret
jecxz
jae
dec
jns
imul
jl
cmpsl
shll
cld
jb
mov
pusha
adc
mov
push
jo
stos
mov
out
push
mov
or
mov
push
mov
and
jo
dec
pop
cmp
cmp
sbb
repnz
jae
sub
cs
repnz
out
fdivrs
mov
sti
xchg
cmpsl
outsl
mov
adc
movsb
cmp
sti
mov
gs
mov
xor
adc
sbb
and
int
sub
xor
repnz
inc
mov
aam
mov
sbb
test
je
adc
test
enter
jg
in
movsb
sub
iret
pop
mov
jl
outsl
xor
sub
xchg
mov
into
stc
add
pop
dec
int
mov
add
dec
sbb
add
push
shrl
dec
cs
adc
rol
mov
pop
sbb
js
and
xchg
xor
lock
std
push
jge
sbb
mov
enter
mov
fdivrl
je
mov
push
jle
out
imul
stos
pop
inc
int
or
add
mov
cmp
cmp
out
jg
jne
sbb
add
jp
xchg
jp
push
push
cmc
sbb
jae
je
aam
adc
leave
lock
mov
mov
pop
push
sahf
gs
pop
pop
push
ret
add
jno
dec
repnz
pop
loopne
pop
or
inc
loopne
popa
loope,pn
in
daa
sbb
mov
dec
rorl
cld
cmp
pop
es
push
fmull
push
iret
jb
jg
push
mov
test
adc
xchg
or
jbe
adc
inc
dec
pop
aaa
push
out
loope
stos
out
add
imul
push
stos
push
insb
pop
loop
pop
xchg
add
test
xlat
dec
fwait
mov
jg
adc
mov
push
jae
jnp
or
or
mov
cmp
xor
aas
push
sti
int3
stos
mov
dec
dec
psrld
in
sar
xor
jnp
ja
xor
scas
mov
test
jnp
xor
or
or
mov
pop
jae
sbb
cmp
stos
testl
mov
movsl
addb
and
pushl
repnz
sub
subb
lods
adcb
addb
dec
popa
popf
lcall
mov
arpl
in
xchg
sbb
pop
push
jb
dec
fidivs
push
stos
add
ljmp
add
jmp
stos
mov
cmpsb
daa
rcrb
loopne
sbb
inc
push
push
mov
ljmp
jbe
fcmovnu
xchg
shlb
mov
adc
pop
xchg
cmp
and
cld
aas
pushf
cld
xchg
mov
push
jge
dec
ret
into
mov
mov
jp
sarl
sub
loopne
bound
shll
shll
sbb
cmp
roll
out
ss
iret
and
lret
xor
mov
testb
jne
shll
pop
sbb
mov
pusha
enter
movsb
lock
jp
fs
js
sub
mov
adc
and
xchg
lret
int3
arpl
mov
pop
inc
daa
cmp
jno
lds
lret
hlt
mov
push
gs
xchg
mov
fcmovnb
adc
cld
popf
xchg
vpcomd
inc
shlb
mov
push
cmp
mov
push
add
inc
imul
mov
or
aas
sub
cmpsb
push
xchg
mov
add
jmp
dec
sbbl
pushf
adc
fistl
outsb
inc
out
mov
negl
leave
out
and
push
add
es
enter
and
aad
cmp
mov
inc
push
jl
xchg
or
mov
call
nop
ret
adc
adc
clc
mov
fwait
inc
dec
jmp
sahf
addl
ret
pop
mov
and
call
mov
inc
test
fwait
cld
mov
stos
inc
xchg
sbb
scas
cwtl
cmp
mov
mov
pop
mov
pop
cmp
orl
or
sbb
je
daa
rol
int
pop
into
sub
cmp
xor
xor
cmp
aas
dec
lret
movsl
loop
shlb
in
jle
jecxz
pop
mov
lret
inc
arpl
sbb
test
loope
sahf
fstpl
out
xchg
ss
and
inc
sahf
mov
push
xchg
pop
out
repnz
jg
push
push
int
test
push
inc
test
jg
push
xor
test
mov
xlat
mov
ficoml
rclb
and
xchg
aam
pusha
test
or
insl
adc
pop
pop
nop
dec
xor
adc
ret
movsl
aaa
dec
dec
outsb
or
lods
stos
jle
xor
jno
pop
sub
lcall
and
stos
add
repz
xlat
ja
fadds
mov
jne
jmp
mov
add
notl
repz
pop
mov
movsb
pop
xchg
lret
add
test
lret
and
xchg
scas
inc
pusha
sarb
mov
mulb
adc
dec
in
stos
sbb
ret
ret
movl
pop
pop
push
js
add
lcall
pop
lahf
xchg
lret
outsl
test
in
cmp
pushf
outsl
cmpsl
jbe
jae
stos
notl
iret
fadds
or
sub
notl
cli
xchg
cmp
loope
sbb
push
or
cmpl
jns
xchg
mov
mov
jo
mov
out
push
decb
inc
fisubrl
mov
add
movsb
gs
fnstcw
mov
popa
sahf
mov
int3
xchg
mov
add
and
or
cmc
mov
xor
cmpsl
fst
cltd
ret
dec
pop
jmp
stc
es
cwtl
cmp
mov
inc
lahf
jle
iret
hlt
jge
je
mov
and
lods
test
pop
xchg
out
xchg
mov
jns
pop
adc
jb
sbb
mov
lock
dec
pop
cwtl
fucom
cltd
push
cmpsb
sysexit
js
sub
imul
mov
in
sbb
js
sbb
pop
fildll
mov
add
xor
cli
in
jnp
pop
xor
dec
jnp
in
stc
jo
add
out
out
imul
call
or
mov
add
mov
sbb
xor
sbb
xor
repz
das
add
adc
dec
bound
mov
jbe
movsb
test
dec
dec
xor
andl
dec
push
mov
fwait
xchg
cmp
mov
xor
idivb
lcall
mov
xor
jno
popa
sub
sbb
jecxz
nop
mov
or
inc
cmp
fisttps
inc
imul
fildl
movsb
mov
dec
je
mov
mov
dec
sbb
add
dec
into
pusha
adc
fcoms
leave
shlb
sbb
jmp
int
fs
mov
fstl
aas
cli
test
pop
sub
fldcw
pusha
xor
mov
mov
xor
mov
sbb
mov
js
dec
pop
js
and
cmp
popa
dec
lcall
sub
iret
iret
mov
sbb
aad
push
pop
inc
xchg
lret
pusha
cmp
setl
xchg
jmp
jne
enter
cmp
mov
dec
mov
mov
mov
clc
sub
test
bound
mov
fsubl
cmp
jl
stos
lahf
mov
icebp
das
movsb
xor
test
movsb
mov
jge
or
inc
inc
xor
mov
mov
inc
xor
pop
inc
push
jp
leave
push
pop
push
push
stc
cli
jge
pop
add
dec
inc
and
lock
popf
sub
mov
outsl
stos
adc
int3
cli
sti
aas
fimull
jns
add
test
mov
mov
bound
push
and
inc
aaa
dec
cmp
push
mov
mov
xchg
mov
loopne
xor
xchg
fwait
ret
xor
lds
inc
xchg
js
pop
mov
pop
shlb
stos
rcl
push
adc
mov
push
shlb
push
inc
into
aas
sti
sub
xor
jne
inc
jno
sbb
jmp
mov
pop
sbb
mov
sti
inc
jl
in
mov
sub
clc
call
dec
adc
ds
shrb
jp
xor
dec
sahf
mov
lock
add
cmc
and
push
fwait
icebp
loope
sub
push
lods
cmpsb
out
repz
xor
cmp
push
sub
loopne
or
pop
xorb
sbb
dec
stc
jle
das
cs
ret
add
mov
jmp
lret
lods
insl
cmc
dec
daa
dec
xchg
out
shlb
pop
mov
bound
sub
sub
mull
scas
dec
sub
stc
dec
cmp
jns
sub
shr
out
int
push
xchg
mov
lds
jo
xor
cmp
cwtl
cmp
rcll
cs
mov
call
sbb
hlt
cmpsl
imul
mov
icebp
mov
add
out
or
test
add
lret
rcl
mov
adc
and
dec
int3
and
xchg
clc
xor
xor
add
stos
out
shr
repz
enter
dec
into
xchg
cmp
outsl
fwait
scas
icebp
rcll
frstor
fcomip
jnp
into
lahf
xor
push
cmpsb
aam
stos
mov
pop
push
test
add
dec
mov
sub
fisubrs
scas
add
dec
and
cmp
hlt
enter
subl
sub
jl
mov
and
inc
sbb
mov
mov
adc
not
or
aas
dec
pop
dec
les
inc
mov
jecxz
inc
mov
mov
adc
xor
dec
mov
lret
cs
push
mov
pop
mov
push
push
icebp
enter
cld
fcomi
out
cmp
sub
popa
sub
add
les
jmp
xchg
js
add
in
dec
adc
inc
js
ljmp
mov
mov
mov
loopne
pop
cmc
sbb
inc
in
ror
cmpsl
pop
leave
mov
pop
or
ret
sbbb
test
pusha
mov
xlat
adc
rcl
or
test
negb
or
aas
pop
frstor
pop
lcall
inc
push
push
push
sub
bswap
dec
sbb
out
dec
ja
push
jae
xchg
lahf
addr16
pushf
jp
jns
adc
pop
push
jns
imul
into
push
es
push
xchg
cmp
and
cli
or
loop
mov
loope
cmp
orl
sub
inc
adc
nop
cmp
mov
adc
in
cli
mulb
popa
and
xor
jle
jge
push
call
or
bound
xchg
cmp
test
dec
inc
test
and
mov
dec
icebp
xchg
cmp
ror
arpl
jb
sub
cmp
or
jbe
pushf
add
daa
cmp
jle
mov
mov
aas
insl
mov
sub
es
xchg
sbb
faddl
das
pushl
adc
jg
je
ds
or
dec
into
push
out
cmpsl
repnz
andl
dec
addr16
cs
push
jmp
xchg
outsl
repz
pusha
mov
jnp
or
fistl
fwait
dec
jbe
icebp
subb
lcall
jno
dec
push
mov
incl
cltd
sub
nop
xchg
or
xchg
ds
and
inc
and
inc
xlat
jmp
stos
xchg
cs
enter
cmp
aad
repz
shrl
dec
inc
dec
mov
lret
mul
mov
pop
mov
jle
jecxz
outsb
mov
ret
jle
sub
push
dec
lret
cmp
mov
jb
jge
mov
imul
dec
dec
jo
nop
sbb
mov
sbbl
mov
fldl
icebp
gs
sub
call
int3
popa
stos
pusha
xor
add
stos
out
push
xchg
cmc
pop
ljmp
pop
es
arpl
xchg
push
rclb
ljmp
xor
in
es
ss
adc
dec
test
jnp
fcomps
cmp
insb
fadd
jb
inc
and
jno
xor
cmp
jnp
in
add
adc
xor
test
jmp
stc
dec
inc
xor
dec
adc
sub
push
stos
inc
ds
xchg
push
mov
push
cmc
xchg
xor
dec
and
xor
lods
daa
xor
outsl
in
and
pop
pop
xchg
sbb
push
mov
mov
fs
roll
mov
mov
mov
dec
mov
adc
std
mov
insb
in
jp
loope
push
jo
fildll
inc
or
pop
scas
jg
mov
lret
mov
repz
mov
or
or
xchg
jbe
adc
add
sub
cmpl
push
mov
mov
fiaddl
add
push
jmp
pop
loope
mov
negb
cmc
inc
cmovg
popf
jmp
mov
cld
ret
dec
bound
mov
xchg
sbb
sub
rcrb
cmpb
mull
lds
jo
inc
mov
popf
cmp
push
sub
pop
xchg
jno
dec
xchg
mov
add
sbb
or
pop
cmp
aad
in
push
lcall
rorl
sub
and
and
daa
sub
dec
push
test
out
sub
cwtl
cs
inc
pop
ret
mov
mov
jnp
inc
lahf
stos
inc
dec
or
adc
outsb
mov
cmpsl
mov
fdivrl
sub
loop
xor
jae
addb
in
lods
leave
lret
xor
pop
pushw
adc
mov
push
add
xorps
ds
icebp
faddl
loop
stos
push
inc
cmc
mov
pushf
sub
sahf
sti
inc
mov
and
cmp
cmp
cmc
pop
repz
or
leave
mov
push
jbe
sub
adcb
cmpl
mov
out
pop
sub
out
xchg
xchg
inc
jmp
jg
inc
xchg
call
jae
xlat
sbb
repz
frstor
test
lods
or
out
lcall
push
xchg
xchg
push
cwtl
mov
mov
mov
mov
xchg
add
add
jns
cmpsl
out
jmp
push
push
sub
daa
std
push
sbb
or
arpl
xor
push
mov
pop
es
adcl
mov
mov
add
daa
ja
mov
test
pop
lock
dec
push
fwait
jp
push
sub
mov
neg
xchg
sbb
push
mov
loop
sub
addr16
loop
movb
popa
jge
xor
jg
addr16
stc
push
adc
sbb
xor
inc
mov
xor
mov
outsb
ja
xchg
xchg
cmpsb
or
jp
addl
fisubrs
das
cmp
lret
adc
sbb
test
jbe
lock
cs
sarl
and
push
or
lahf
ss
sbb
mov
pop
scas
cs
mov
fildl
adc
loope
push
arpl
icebp
xor
push
jbe
add
lea
adc
outsl
imul
sbb
sahf
push
aaa
cmpsl
dec
clc
adc
enter
xchg
and
mov
xlat
js
lods
repnz
insb
sub
jecxz
cmp
lock
mov
outsl
sarl
lock
mov
xor
cmp
aas
mov
mov
sbb
lods
push
mov
notl
cmp
es
mov
dec
xchg
lahf
mov
cltd
jne
mov
dec
cmp
data16
and
xor
mov
sub
xor
jb
push
lcall
pop
mov
sbb
lods
jnp
push
xchg
mov
mov
js
add
test
push
bound
jp
and
pop
sets
mov
aas
pop
repz
sub
iret
test
sub
incb
movsl
shlb
mov
jnp
daa
sahf
jl
loopne
mov
sahf
pushf
loope
push
jp
jmp
pop
pop
rol
fsubp
cltd
mov
push
ss
mov
dec
mov
inc
notb
iret
add
and
inc
wbinvd
fcmovne
insb
hlt
push
jl
or
out
sbb
cld
dec
adc
mov
pusha
mov
cmp
movsb
bound
out
xor
pop
cltd
jae
mov
dec
in
imul
xchg
add
xchg
aad
xor
push
andl
mov
and
cmp
xchg
inc
sub
or
mov
dec
adc
dec
push
mov
ret
test
orl
adc
inc
mov
fwait
inc
adc
ja
imul
addb
sbb
incb
mov
adc
sbb
sbb
push
andb
jg
add
ja
and
into
or
mov
enter
lods
mov
aad
in
rcr
fstpt
or
add
lds
mov
dec
cli
js
jp
pop
xchg
xchg
iret
jbe
jp
xchg
add
clc
fisttpll
leave
xor
inc
inc
enter
stos
ret
ja
mov
out
sub
xchg
loop
mov
into
jae
adc
mov
mov
mov
push
pop
int
lds
push
mov
loope
jp
sti
insl
imul
push
xchg
inc
mov
loop
sahf
lods
ret
mov
fwait
and
inc
icebp
jo
xor
sti
rcll
xchg
xor
repz
xor
xor
xor
cs
xlat
les
in
aaa
inc
xchg
xor
mov
call
loopne
xchg
lds
inc
iret
mov
notl
and
inc
stos
loope
xor
pushf
dec
mov
stos
scas
mov
xor
cmp
outsl
sub
xchg
add
rcrb
leave
out
mov
jl
shlb
aad
push
cltd
inc
out
mov
lcall
sbb
repnz
dec
add
mov
cmp
cmp
mov
inc
sbb
dec
rcl
test
pop
mov
jmp
push
test
cmp
lods
stc
mov
dec
int3
fadds
xchg
imul
cmp
jns
cmp
adc
ficomps
call
in
cmp
adc
ret
dec
push
test
std
jne
xor
push
or
pop
and
dec
sbb
repz
jnp
dec
xchg
fldl
pop
sbb
lret
inc
std
jmp
fstpt
mov
mov
xchg
and
dec
lods
pop
inc
pushf
xchg
dec
mov
inc
mov
inc
cwtl
push
pusha
out
xchg
ret
jnp
ds
popf
dec
mov
push
shlb
mov
incl
sbb
adc
ss
pusha
add
loopne
dec
lods
inc
push
cltd
roll
shrl
in
test
in
call
outsl
jge
test
jecxz
sub
jnp
movsb
movsl
or
push
out
jne
sub
pop
mov
push
ret
int
sbb
xchg
jmp
aad
xchg
inc
lods
popf
mov
fcmovbe
push
test
rcrb
pop
arpl
out
or
sbb
jmp
jl
mov
push
and
xor
mov
je
shr
popa
mov
jl
call
dec
test
dec
stc
shrb
mov
adc
or
sti
aaa
cmp
jl
icebp
bound
pop
or
vpaddsb
arpl
mov
aas
rorl
dec
inc
or
sub
test
mov
movsb
scas
daa
mov
and
aaa
and
in
mov
jge
aaa
std
loope
or
leave
mov
jno
mov
pop
push
ret
lret
outsl
outsb
clc
rclb
cmp
ret
clc
and
dec
jns
sub
imul
and
pop
rol
cmc
sub
add
lods
add
out
fdivrl
dec
jno
mov
jl
sbb
xor
lcall
mov
sarl
into
xor
mov
clc
adc
fsubrs
js
lahf
jno
test
xchg
inc
test
fucomip
ja
mov
pop
dec
addr16
sti
fisttpl
mov
inc
mov
sub
pop
push
xor
fstpt
dec
sbb
fmulp
iret
ficoms
push
pop
lret
mov
inc
pushf
dec
lcall
inc
sub
mov
sub
sbb
sub
mov
nop
lods
lret
cltd
and
xor
and
cli
mov
xchg
jno
cmp
loope
icebp
dec
out
loop
test
hlt
dec
lods
mov
add
gs
dec
push
sarl
out
pusha
mov
cs
pop
mov
push
mov
int
outsb
push
fcompl
jns
in
dec
xchg
in
sub
push
fidivrs
pushf
xchg
inc
test
jp
xor
sub
movsb
jge
cmc
scas
dec
ss
jo
and
das
xor
cmpsl
mov
fadd
jp
ja
inc
rolb
xchg
std
mov
xor
mov
in
sub
adcl
mov
mov
mov
push
xchg
out
jp
out
dec
cmp
movsb
aam
rol
div
dec
pop
mov
inc
push
inc
mov
and
mov
repz
and
bound
rorl
sbb
push
jae
adc
dec
test
je
cmp
push
nop
pop
repnz
popa
sub
add
imul
stos
pusha
dec
jp
les
arpl
sarl
mov
stc
out
mov
aad
fldt
sbb
mov
push
dec
je
push
sbb
sbb
dec
mov
and
in
add
subb
pop
mov
cwtl
pop
push
rcl
movsb
push
pusha
inc
stos
int3
mov
inc
cs
push
lea
arpl
jbe
cmc
dec
push
inc
out
scas
inc
out
jae
mov
push
mov
and
js
loop
add
cmc
pop
ljmp
mov
dec
test
sub
jbe
and
sarb
mov
sbb
push
mov
cmc
xor
push
fs
loop
pop
dec
clc
negb
fdivl
and
xor
in
mov
jp
mov
negl
mov
cmp
stos
cmc
das
sub
jmp
xchg
xor
icebp
xlat
sbb
jo
jecxz
jle
mov
lds
adc
mov
in
ljmp
push
into
jae
mov
movsl
sub
imul
jmp
or
stos
cmpsl
push
ret
sub
xchg
mov
mov
sub
clc
inc
cmp
adc
pop
lret
add
push
insl
lds
scas
and
lods
jge
js
jmp
xor
add
ret
sbb
sub
fwait
xchg
and
add
jle
or
push
movsl
push
popf
cmpsl
jmp
lods
xor
adc
sub
fldl
or
mov
xchg
push
xlat
dec
dec
int
stos
sub
ljmp
adc
pop
or
test
mov
cmp
loop
sub
cmp
xor
ss
call
lahf
inc
imul
lods
repnz
cmp
jno
shr
and
cmpsl
push
cmp
cmpsb
enter
jb,pt
mov
sbb
sbb
loopne
mov
adc
cmp
fcmovu
xor
idivl
sub
pop
push
pop
into
test
loope
lods
imul
dec
push
sub
adc
cmpsb
mov
nop
mulb
mov
pop
out
std
repz
out
sti
js
das
sbb
enter
ljmp
scas
out
cmp
xor
arpl
add
fmuls
insl
dec
push
jo
sub
js
inc
jne
add
adc
decl
pop
jmp
hlt
add
push
outsb
adc
mov
call
out
popa
sbb
popf
aad
or
mov
sub
ret
and
out
and
ss
sub
in
dec
mov
mov
enter
std
mov
daa
cmp
outsb
mov
push
into
test
test
and
pop
sti
test
inc
mov
and
add
fildl
sbb
hlt
jge
jmp
push
imul
movd
adc
or
jne
repnz
test
or
jge
out
ljmp
das
cld
test
fnsave
stos
or
xchg
adc
jno
lcall
dec
cmp
cmc
pop
pushf
inc
mov
push
mov
scas
or
jbe
push
test
cli
leave
mov
push
bound
push
or
fwait
add
sti
mov
push
pop
dec
push
ret
shlb
fstl
cltd
arpl
hlt
cltd
cmp
mov
dec
or
loopne
adc
movsb
xchg
fiadds
lods
inc
mov
dec
xor
popa
mov
iret
sti
fisubs
dec
sti
inc
and
push
xlat
xchg
aad
js
lds
and
daa
cmp
lahf
sbb
push
and
dec
push
pusha
lods
lea
in
outsb
mov
clc
fisubl
ds
xchg
aad
fnstsw
mov
in
je
sub
les
adc
pop
cs
cli
mov
or
in
jne
add
outsl
test
xor
data16
mov
cmp
mov
xchg
push
push
xorb
fldl
ficompl
out
mov
or
js
xchg
mov
dec
dec
sbb
fwait
adc
pop
cld
outsl
sub
fs
ljmp
xor
bound
mov
outsb
and
cmpl
lret
jo
inc
imul
sbb
lds
jp
jns
cmpsl
add
dec
test
out
fwait
sbb
cli
sbb
bound
stos
cmpb
sarb
test
inc
pop
jbe
decl
jle
sub
repz
jp
pushw
mov
and
push
or
dec
sar
loop
out
xor
mov
lcall
pusha
mov
ret
xor
ja
sub
popf
idivl
xchg
mov
inc
jns
ror
dec
inc
daa
adc
sbb
push
xorl
and
repz
or
mov
mov
mov
mov
lcall
adc
sbb
decl
cmp
and
jo
lock
push
mul
incb
or
ret
fsubrs
jbe
pop
fcoml
imul
js
inc
mov
xchg
sbb
lods
enter
lock
xor
jl
shrb
cld
popa
mov
fisubrl
or
lock
or
js
rcrl
mov
ljmp
push
xchg
adc
sub
mov
xchg
mov
sbb
jg
icebp
mov
dec
imull
sub
pop
adc
scas
maskmovq
notl
nop
mov
mov
adc
insb
les
lahf
xchg
fucomp
cmc
ficomps
call
inc
cwtl
outsl
popf
and
cmp
aam
loope
test
cmc
add
cltd
or
shll
or
lock
repnz
cmp
push
mov
fimuls
icebp
es
fsts
lea
cmpsl
repz
add
adc
xor
inc
xor
xchg
xchg
out
sub
mov
xchg
aas
pop
stos
mov
dec
loopne
push
jb
push
rsqrtps
popf
loopne
jmp
jnp
clc
mov
imul
sbb
roll
jg
sahf
mov
test
scas
or
mov
push
mov
out
fistps
dec
push
in
ss
iret
sarb
popf
or
or
or
jp
mov
mov
loopne
rolb
mov
push
and
cmpsb
fldl
ja
mov
mov
xchg
out
bound
pop
mov
lret
cmp
xor
in
dec
movl
cmp
sahf
inc
add
mov
push
arpl
sub
aaa
shl
add
sbb
rclb
bound
inc
xchg
test
daa
and
movsl
das
fwait
test
into
gs
add
adc
lods
fucomip
andl
jne
pusha
xorb
xchg
push
push
std
dec
mov
and
push
nop
mov
adc
fwait
pop
and
rcrl
js
mov
lret
into
jecxz
ja
and
and
fdivrl
movsb
je
dec
js
cmp
jae
in
mov
adc
pop
adc
fisttps
leave
flds
int
lret
add
fcomp
incl
or
jo
inc
fistl
mov
test
hlt
jae
dec
mov
xchg
push
or
sahf
les
adcl
or
add
clc
pop
xchg
js
enter
int
cmp
xabort
clc
outsl
jmp
jmp
pusha
pop
cmp
pop
push
pop
das
lcall
testl
mov
cmp
cmp
dec
sub
mov
movsl
mov
push
cmpsb
add
inc
adc
mov
xchg
cmp
pop
push
adc
jbe
push
xor
sbb
cli
cmp
sub
mov
mov
int3
cltd
pop
xor
lds
adc
jmp
aad
and
decl
leave
sub
sbb
inc
outsb
iret
and
mov
xchg
push
nop
mov
aas
xlat
jecxz,pn
and
xchg
jle
or
mov
xchg
arpl
pop
lret
xor
cmpsb
mov
testb
pop
shll
or
cli
out
loop
lcall
addl
rclb
sub
sub
fcmovbe
mov
push
loope
push
mov
in
xchg
and
mov
mov
pop
pop
pushf
cwtl
andb
and
pusha
add
add
ret
lds
repz
inc
fimuls
cwtl
lods
cmovae
mov
scas
cmpsl
iret
mov
mov
mov
xchg
shll
call
std
into
mov
hlt
ja
cmp
insl
ja
xchg
mov
mov
loop
shrb
pop
iret
add
cmc
imul
inc
stos
test
sbb
dec
push
xchg
or
ss
test
mov
ror
in
add
inc
push
push
inc
es
sbb
mov
jo
mov
scas
sbb
mov
arpl
sub
ret
loopne
sbb
sub
push
stc
pop
fisubl
outsl
push
stc
add
mov
imul
insl
mov
in
and
xor
ja
mov
lea
jp
inc
lcall
in
mov
and
push
mov
add
xchg
jp
repnz
int3
inc
xchg
push
or
dec
push
ljmp
pushf
xchg
cld
out
pop
lods
xchg
addr16
inc
sbb
scas
in
fsubrs
adc
mov
add
repz
xchg
lcall
rcrl
xor
mov
into
and
cmp
jne
xchg
aad
push
das
ljmp
sbb
int
push
aaa
into
loop
shrl
mov
loop
cld
jmp
out
aad
lods
mov
and
rorb
push
jge
pop
or
outsb
jmp
mov
ret
adc
ss
stos
dec
das
fildl
seto
or
or
addr16
cli
mov
imul
mov
push
push
repz
jle
push
rcrl
or
add
sbb
dec
inc
data16
dec
sbb
aas
ss
adc
sub
aad
pop
pop
add
stos
dec
pusha
inc
cwtl
shrd
out
mov
ja
loopne
mov
xor
adc
lret
repz
ljmp
out
inc
fcmovu
dec
clc
pop
push
cmp
push
es
xor
adc
or
or
in
xchg
jns
movsl
push
int
mov
je
lahf
sub
push
sbb
repnz
cmp
rolb
adc
cltd
in
rorb
jb
jg
mov
loop
mov
inc
jle
cli
outsl
or
cmc
addr16
jg
cmp
and
cmpsl
add
in
std
aas
data16
aaa
xor
mov
sbb
loope
xor
shl
daa
mov
arpl
leave
jo
jg
push
cld
cmc
mov
rclb
je
lcall
dec
iret
test
pop
repz
repz
cmc
xlat
icebp
xor
les
stos
or
in
push
sub
int3
scas
stos
or
jns
jns
dec
aad
mov
and
add
jnp
and
jo
bound
dec
lods
pop
dec
cmp
inc
mov
push
shl
repz
mov
rcr
jne
mov
aas
inc
add
sub
ljmp
adc
fcoml
test
popa
adc
xchg
cwtl
pop
scas
iret
loopne
inc
enter
loopne
ds
mov
push
sbb
bound
inc
mov
dec
pop
adc
or
pop
mov
mov
mov
jge
faddl
xor
add
cmp
adc
push
stos
negl
or
lcall
jno
cmp
adc
repz
pop
mov
fistl
lcall
lcall
in
mov
xchg
add
sbb
js
ret
pop
cli
js
mov
lods
sub
sbb
push
arpl
pusha
mov
insw
push
stos
daa
fsubs
pop
mov
lods
sbb
add
adc
jno
into
adc
xchg
leave
push
cmp
ljmp
xchg
out
push
mov
mov
dec
daa
and
ret
xchg
dec
push
mov
insl
xor
dec
mov
jns
cmp
jp
mov
je
jge
add
cmp
add
jno
xchg
pop
mov
rcll
cmp
pop
lods
and
cmpsb
mov
std
jge
rcrb
jl
jno
mov
jg
sbb
shlb
pop
adc
fstl
add
inc
inc
xchg
ljmp
shlb
sbb
hlt
inc
ljmp
xchg
push
inc
sub
out
loopne
add
std
and
mov
mov
pop
or
fwait
jb
std
mov
mov
xorl
pop
lock
std
rcr
mov
inc
push
pop
mov
dec
sti
mov
rcrl
jmp
adc
cmp
test
fldt
negl
sbb
xor
push
pop
push
lock
fcomps
adc
or
jl
push
mov
movsb
inc
xchg
mov
fcmovu
popf
push
push
cld
lock
xchg
sti
mov
mov
outsl
mov
sub
mov
sub
mov
mov
inc
scas
pop
pop
pop
inc
or
xor
iret
lret
fdivl
pop
cmp
xchg
add
add
shl
subb
imul
push
xor
add
sub
push
test
fnstcw
pop
mov
movsb
stos
lock
cmp
push
cmp
lods
sbb
inc
out
int3
sbb
mov
jne
or
pop
imul
and
out
stos
mov
mov
test
call
or
push
dec
pop
dec
ljmp
jmp
jg
lcall
dec
jge
jno
dec
test
mov
inc
mov
cmp
lods
push
sub
and
xchg
lret
pop
mov
jo
mov
decl
test
cmp
ja
cwtl
xor
scas
sub
daa
jg
mov
sbb
adc
nop
cmp
insl
rolb
subb
dec
jno
lcall
jbe
mov
adc
scas
jge
jo
imul
add
rorb
lret
mov
data16
push
and
inc
popa
sti
jg
ss
or
jae
cmp
and
out
mov
out
sahf
shrb
stc
movsl
shll
jnp
sti
or
pop
xor
push
nop
mull
xor
xchg
clc
loop
addr16
inc
xchg
fbstp
cmp
xchg
push
js
loope
xchg
loope
inc
mov
push
push
hlt
je
pushf
arpl
jne
mov
cltd
jo
sub
stos
mov
dec
push
dec
repz
cltd
add
cmpsl
out
arpl
ljmp
arpl
xchg
or
jns
ret
pusha
mov
jmp
mov
mov
or
or
sub
std
push
pop
sub
gs
push
jl
mov
shrl
lds
or
mov
loop
mov
fistps
jo
mov
jns
cmpsb
or
sub
scas
outsl
xor
orb
dec
rorb
test
mov
js
inc
jecxz
xchg
jl
mov
mov
imul
sub
popf
sub
lret
outsb
sub
xchg
pushf
or
add
test
aaa
cmpsl
or
and
shlb
push
sbb
ret
inc
xorb
pop
ljmp
or
add
aad
xchg
jecxz
jg
add
test
es
jge
inc
pop
in
subl
ja
mov
sbb
test
ret
jb
dec
cld
test
ret
mov
mov
test
fmulp
jp
in
xchg
add
xor
fiadds
std
pop
rcrb
mov
sub
test
mov
jb
dec
in
lods
jne
ror
cmp
fwait
push
out
push
mov
cmpsl
push
lret
lods
push
and
cs
jmp
dec
loope
fiadds
mov
bound
andl
mov
in
mov
mov
sbb
push
cltd
popf
in
popf
cmpsb
mov
mov
je
sbb
test
mov
cmc
insb
mov
fwait
dec
add
in
lcall
sbb
xchg
push
adc
jae
cmp
pop
sbb
sub
insb
pop
xchg
xor
hlt
xor
adc
rcrl
jo
jmp
xchg
jne
fldl
xor
add
ljmp
sbb
cwtl
mov
arpl
lock
rcl
push
pop
mov
xchg
std
push
mov
repz
xor
mov
iret
in
out
inc
test
dec
daa
cld
sbb
enter
jmp
push
dec
or
xchg
push
inc
lahf
inc
mov
mov
notb
mov
popa
and
xor
popf
lock
mov
test
pop
mov
mov
es
mov
leave
es
repz
sbb
iret
mov
cmc
shrb
fdivl
arpl
into
and
fstpt
ror
mov
stos
sbb
mov
push
mov
pop
pop
loopne
pop
outsb
cwtl
scas
mov
cmpb
dec
fwait
cmp
jmp
in
and
aas
jb
bound
mov
andb
jmp
mov
adc
fsub
rcrb
inc
xor
mov
int
sub
xchg
sti
xor
inc
mov
test
mov
mov
jbe
les
sbb
jns
xor
mov
mov
sbb
xor
mull
les
or
setge
add
rorb
in
icebp
mov
jae
mov
iret
lds
mov
pop
in
lret
dec
call
mov
sbb
cmp
and
add
bound
subl
mov
je
ret
sbb
mov
mov
cmp
push
sub
and
push
pop
jae
lock
sub
daa
and
subb
lock
sub
sbb
sti
inc
mov
outsl
ret
push
or
stos
sub
mov
push
leave
xchg
nop
das
mov
data16
jecxz
adc
lods
addr16
ss
shll
mov
sbb
repz
or
ret
and
popa
cmpl
jb
jle
jl
pusha
mov
cmp
sti
mov
push
sub
cmp
fiadds
and
sahf
push
dec
jae
fsubl
dec
fiaddl
fucom
test
xchg
outsl
and
scas
call
push
add
pop
out
rolb
cli
mov
cmc
cltd
imul
cmp
leave
loop
dec
sub
arpl
mov
rcll
out
mov
in
mov
cmp
jbe
dec
dec
fstps
sub
out
add
mov
mov
pop
fistpl
stos
push
mov
ja
shrl
or
cwtl
mov
dec
xor
insb
repz
insb
adc
push
hlt
ljmp
fstpl
mov
addr16
std
in
fcomp
sbb
mov
packuswb
sub
mov
or
dec
popf
lock
in
or
lds
ss
insl
loop
ja
fdivs
add
mov
setbe
fdivrl
lea
loopne
cmpsl
xchg
jb
mov
lcall
mov
adc
test
xchg
aam
iret
mov
enter
mov
mov
int3
or
outsb
fnstenv
cmp
inc
adc
jne
sbb
pop
lret
cmp
aas
popa
add
arpl
mov
dec
jmp
lods
repnz
imul
push
dec
inc
scas
sub
push
and
fwait
push
ss
mov
cmpsb
sub
pop
cmp
xchg
ss
out
jae
icebp
rcrl
out
sarl
not
mov
testl
rcrl
inc
movsl
ficoms
mov
arpl
outsb
imull
or
flds
cltd
sub
lods
xchg
dec
and
push
mov
stc
jl
aad
jl
cwtl
xchg
neg
push
add
pop
xchg
mov
dec
pop
xchg
shll
xchg
mov
and
nop
aaa
mov
fwait
out
aas
in
sbb
fisubrl
cs
sbb
mov
inc
pop
es
adc
sub
dec
clc
lock
cmp
xlat
mov
lret
push
jne
cmp
and
aaa
mov
test
arpl
ret
lock
aas
xlat
jae
pop
test
inc
adc
sbbl
adc
call
sbb
cmpl
mov
scas
lret
mov
cs
dec
insb
dec
jmp
in
sub
ret
cmc
push
fucomi
fidivl
pop
ss
ret
xchg
mov
or
mov
inc
and
f2xm1
sarb
repz
cli
outsl
lret
xor
add
movsl
call
jp
lea
das
out
cmp
aaa
mov
cmp
mov
jl
pop
lods
out
push
adc
sbb
loopne
lret
jo
stc
and
fsubrs
cli
adc
mov
push
movl
sbb
sbb
xchg
sti
mov
lods
pop
cmp
cli
in
dec
loopne
add
movsb
and
cmp
in
cmpsl
aam
addr16
sub
lock
call
xchg
fucompp
or
cmp
jo
push
sbb
mov
jle
cmpsl
push
insl
xchg
insl
call
loop
js
fimull
sub
test
movsl
out
push
sti
cmp
ret
push
dec
orl
scas
cmp
in
mov
ret
push
call
prefetcht1
mov
cmp
sub
shl
sub
push
dec
imul
out
jb
outsl
jns
push
push
mov
push
jnp
aad
inc
push
push
mov
sbb
gs
ljmp
mov
xchg
mov
sbb
mov
stos
in
ss
repz
movsl
test
adc
inc
adc
push
push
pop
xchg
pop
cmpsl
sbb
or
push
test
ja
pop
mov
lahf
dec
sub
out
movsb
jmp
hlt
push
sbb
mov
out
sbb
inc
fdivrl
das
inc
or
mov
fldenv
mov
add
movsl
scas
sub
insl
sub
push
movsb
lods
add
jb
fistl
jg
push
mov
imul
es
cs
lcall
lods
sbb
fs
xchg
xchg
rorb
icebp
lcall
or
movsl
fdivl
int
rcrb
jle
inc
clc
out
call
adc
pushf
mov
sub
dec
imul
push
dec
cmp
loop
jl
outsb
mov
sbb
cs
cmpsl
ja
cmp
and
call
mov
adc
or
addr16
xor
lret
bound
ret
adc
iret
mov
cld
rorb
lods
fst
xor
and
aas
iret
icebp
sub
xchg
xor
cwtl
lods
pop
icebp
add
mov
mov
sbb
je
or
adc
mov
mov
jbe
imul
lds
or
iret
add
pop
pop
enter
sub
adc
daa
or
xchg
xor
hlt
xchg
xor
cld
fbstp
inc
mov
adc
lcall
shl
sbb
sub
popf
mov
imul
ss
lods
sub
out
and
push
sti
lea
cld
sar
dec
xor
test
push
xlat
loop
pop
movsb
cwtl
andb
mov
adc
sbb
ljmp
pop
adc
cli
sub
mov
sub
and
push
ja
xchg
cmp
mov
mov
je
sbb
xor
add
fwait
sbb
shlb
dec
fwait
inc
andb
mov
fwait
pushf
jo
jo
push
mov
dec
ljmp
aaa
mov
jp
jl
ljmp
mov
out
xor
mull
lods
xchg
adc
adc
pop
or
push
dec
inc
jo
push
cwtl
stos
cwtl
sahf
test
push
gs
jecxz
nop
mov
or
icebp
flds
imul
idivl
sbb
iret
and
inc
lret
ds
adc
addr16
dec
add
movsl
xor
inc
mov
ljmp
mov
adc
rcrb
inc
aad
xchg
insl
adcb
jnp
adc
into
jne
fcoms
inc
xor
sbb
sub
inc
jecxz
pop
and
daa
pop
das
je
ljmp
ficomps
icebp
fwait
add
shrb
in
lds
jb
test
leave
inc
push
bound
add
ja
outsl
cmp
inc
inc
and
cmp
repnz
inc
sub
push
rolb
aas
rolb
sbb
ss
jle
fs
mov
or
sub
lret
cmovno
mov
push
xor
cmp
daa
dec
in
rep
xchg
lea
cwtl
das
inc
dec
mov
iret
sbb
imul
or
and
dec
lods
nop
hlt
das
push
pop
dec
add
inc
jmp
cmpsb
mov
enter
pop
sub
sbb
push
jl
out
jg
mov
out
sub
imul
push
push
dec
or
push
les
and
pusha
push
repz
jmp
clc
cwtl
mov
pop
mov
mov
into
mov
mov
push
adc
xchg
cltd
mov
adc
sub
sbb
xor
and
outsb
lret
mov
in
xchg
data16
arpl
mov
inc
pop
add
ret
loope,pt
add
je
adc
add
cmpsl
cmpb
xor
mov
rorb
arpl
mov
stos
fldenv
dec
sub
xchg
out
sbb
movsb
out
add
and
mov
jb
sub
pop
pop
jne
pop
aam
ja
sbb
fistl
or
cli
scas
ljmp
jnp
testb
mov
jmp
je
inc
ror
mov
addr16
mov
xchg
xorb
clc
cld
in
xor
mov
mov
inc
test
xchg
add
adc
and
sub
cmc
insb
das
scas
pop
pop
aaa
add
les
lcall
or
mov
int
loope
fimull
arpl
pop
stos
jo
fisubs
sub
inc
jl
cld
lods
mov
gs
testb
shl
mov
pushf
fsubr
insl
shl
add
fsts
stos
js
mov
js
sub
lcall
sbb
into
shlb
loopne
push
fdivrl
inc
rcll
dec
js
ss
sbb
fstpt
xchg
fisubl
or
push
fisttpll
addl
ljmp
iret
push
orb
repz
adc
inc
stos
push
jp
fs
jae
add
aad
xor
jno
cmpsl
inc
movsb
pusha
scas
int
inc
inc
ljmp
xorl
xchg
or
orl
js
das
dec
inc
movsb
nop
xor
xor
lock
jmp
or
push
sub
push
and
popf
inc
fcmovnbe
jge
fwait
lret
pop
arpl
xlat
pop
xchg
mov
loope
dec
add
sbb
xchg
add
xor
jo
int3
push
and
mov
xor
ficoms
shlb
cli
dec
js
cwtl
jmp
scas
and
mov
jmp
push
lea
inc
cmc
or
sbb
jbe
sub
fwait
cmp
mov
jno
push
ljmp
rorb
inc
ljmp
les
movsl
loope
pop
xchg
inc
loop
pop
xor
mov
or
aaa
ss
cmpb
lds
xor
mov
push
pop
leave
movsb
insb
out
loop
dec
cmp
jae
cltd
lret
frstor
ja
das
jne
fldlg2
mov
enter
jmp
aad
or
mov
mov
leave
mov
xchg
stc
pop
sbb
or
sub
insl
ja
js
cmp
adc
jg
xchg
cmpsb
pop
das
xchg
push
sti
fs
or
dec
dec
lock
out
repnz
or
stc
pop
mov
mov
iret
mov
in
adc
mov
test
enter
es
outsl
jecxz
ficoml
mov
dec
mov
mov
mov
mov
sub
sbb
xor
shll
pop
add
js
es
cmp
jecxz
test
out
adc
stos
push
mov
push
or
xor
cld
sub
rolb
outsb
pop
push
fwait
pop
sub
ret
pop
ja
repz
ja
xchg
ss
mov
mov
pop
sbb
fiaddl
or
adc
sbb
imul
loopne
aad
cmp
dec
push
mov
icebp
jbe
and
pusha
xchg
cmpsl
inc
or
adc
pop
xchg
cwtl
dec
xchg
test
iret
aaa
mov
and
test
js
bound
xchg
leave
cld
or
aam
mov
test
sub
repnz
mov
test
in
in
insb
out
incl
push
enter
pop
ljmp
pop
cmpsb
jnp
inc
sbb
sarl
repz
into
inc
mov
pop
rcrb
aad
inc
mov
mov
ds
ss
pop
sahf
sbb
cmp
mov
add
push
sbbb
insl
jmp
out
push
xor
je
dec
lods
inc
dec
pop
add
daa
fsubr
in
sub
dec
repz
pop
jbe
data16
imul
inc
popa
lret
ja
sahf
lock
or
lahf
sbb
test
aad
inc
adc
or
andl
stc
fsubrl
es
pavgw
or
fsubs
inc
pop
fstl
cmc
and
dec
and
repz
adc
or
pop
jl
or
das
lret
mov
loope
push
test
mov
inc
xchg
in
jle
sub
jge
ss
fmuls
add
xor
jmp
je
or
lods
jb
add
movsl
lock
outsb
test
inc
or
mov
ret
push
add
inc
cmp
sub
out
xor
adc
sub
data16
xorb
dec
sbb
call
and
stos
adc
pop
jg
dec
fsubs
and
loope
mov
mov
jbe
or
ljmp
lea
xchg
mov
rclb
test
xchg
fs
push
in
popf
or
and
xor
rcrb
push
push
mov
out
insb
ss
xor
mov
imul
gs
rolb
iret
jle
js
fnstcw
iret
adc
mov
push
in
push
inc
fistl
adc
lods
seta
sbb
push
nop
je
lock
notb
sub
xchg
jle
sbbb
push
stos
das
cs
or
add
ffreep
ljmp
pop
test
incl
test
mov
addr16
push
sub
jle
outsl
pop
stc
jo
sbb
sub
outsl
lcall
cmpl
xor
xchg
loop
mov
cmc
clc
push
xacquire
in
into
es
adc
test
mov
jne
loope
inc
cwtl
or
ret
jle
ljmp
inc
push
inc
in
dec
jb
int3
inc
ret
inc
lock
into
out
les
out
dec
sti
inc
push
pop
inc
sar
fwait
call
xlat
rcrb
idivb
or
xlat
cmpl
repz
pushf
sbb
pop
dec
insl
cmp
mov
stos
outsb
or
mov
cmpsb
ret
xor
arpl
add
dec
jmp
insb
loope
ds
push
adc
sti
movsl
cmp
adc
ret
sbb
mov
mov
xchg
push
icebp
scas
sarb
les
push
ss
fcoml
cmp
lahf
sbbb
mov
movsl
int
into
out
mov
sbb
xchg
jp
mov
push
sbb
js
fwait
mov
shl
dec
cmpsl
loopne
fsubrl
cs
in
xor
inc
add
cltd
aas
popl
push
ret
push
cwtl
test
inc
enter
lds
inc
pop
cmp
jmp
addr16
ror
pop
in
lret
andb
call
enter
loope
xchg
imul
pushf
insl
xlat
in
mov
cmc
sbb
jb
sbbb
pop
and
dec
push
gs
test
into
out
out
test
mov
stc
dec
pop
cmp
nop
out
and
inc
repz
out
psadbw
dec
lcall
jne
sub
dec
daa
ss
mov
inc
jecxz
pop
cli
push
shll
insl
dec
jg
push
mov
aaa
cmp
sub
arpl
xchg
shrb
mov
js
pop
inc
ret
lods
fistpl
lea
pop
fwait
mov
mov
adc
adc
dec
push
jp
and
data16
into
jmp
pop
rcrl
xchg
xlat
pop
mov
int
hlt
xchg
sbb
inc
shrb
dec
shrb
xor
mov
mov
incb
lcall
bound
fimuls
xor
ret
popa
popl
mov
push
sbb
test
inc
popa
jb
test
or
int
cmp
loope
push
jmp
rcll
clc
ss
loopne
jg
sbb
test
mov
dec
fsts
cmp
fistps
xor
ds
sub
fstps
aam
int
push
xchg
cld
arpl
pop
xchg
dec
and
add
lahf
out
push
fwait
add
es
mov
sti
and
fists
mov
mov
roll
adc
fsubs
fisttpll
stos
inc
sub
clc
or
testb
pushf
repz
dec
test
out
mov
lock
dec
mov
xor
inc
es
xor
aam
sub
andl
loop
lret
outsl
orl
fmul
jl
or
int3
add
andb
insl
mov
jae
stos
cld
and
sbb
bound
ret
test
les
pop
cmpsb
leave
push
sub
ljmp
outsl
add
imul
cmp
mov
gs
test
gs
dec
out
ja
xchg
imul
arpl
sbb
ja
xlat
jns
out
stos
negl
xchg
cltd
addl
cmp
fs
bound
fildll
leave
shll
xor
shlb
int
push
mov
ss
mov
cwtl
addr16
iret
call
xorl
shll
cmp
movsb
sub
xor
push
loop
pop
icebp
jbe
pop
incb
int
sbb
test
inc
jbe
mov
mov
inc
inc
xchg
or
leave
popf
add
scas
xchg
cld
outsb
fdivrp
dec
mov
lds
imul
dec
loopne
xlat
push
sub
addl
and
stos
and
mov
dec
sub
es
les
mov
mov
jnp
ljmp
sub
mov
scas
xor
xor
pop
adc
rolb
sub
mov
xor
das
loopne
xchg
outsl
inc
sub
sbb
loope
xor
imul
jge
inc
xor
jb
jge
xchg
jecxz
dec
sub
mov
jmp
nop
sarb
cltd
cli
test
mov
push
xchg
mov
out
or
mov
xor
js
jl
add
xchg
or
sub
pusha
sub
lods
mov
daa
out
bound
lret
pop
loopne
mov
jns
aaa
and
dec
sbb
mov
dec
stos
push
insl
les
das
adc
xchg
je
pop
daa
inc
stos
jno
or
cld
shl
dec
stc
lea
lods
lock
lcall
mov
push
mov
adc
fmuls
sbb
inc
add
cwtl
push
dec
icebp
repnz
and
push
sub
inc
dec
xchg
pop
sbbw
cld
cmp
lods
xlat
mov
lcall
inc
nop
fmuls
push
and
imul
ja
add
sub
dec
in
jo
pop
mov
jno
pop
sti
test
repnz
and
stos
xchg
sub
dec
int3
mov
push
mov
es
mov
je
pusha
push
xor
mov
lcall
outsb
push
push
ljmp
xor
xlat
adc
popa
leave
mov
addr16
adc
xchg
arpl
sub
mov
mov
jmp
inc
push
into
jmp
jecxz
jle
mov
jge
sbb
jnp
mov
cmp
aad
dec
lret
bound
dec
jno
rorb
call
in
xor
cmp
jne
nop
pushf
xor
mov
das
add
jmp
dec
mov
mov
loope
stos
inc
jae
popa
popa
cmp
cld
mov
test
pushf
adc
imul
dec
sbb
mov
lret
mov
imul
pop
lret
and
jl
pop
addr16
js
and
push
mov
fldenv
adc
movsl
sub
repz
in
cmp
jnp
adc
cmpsb
aas
inc
stos
repnz
mov
push
and
int3
loopne
ss
sub
pushf
sub
push
or
xor
int
and
xchg
fwait
in
std
es
dec
inc
out
lcall
fbld
shlb
push
xchg
int3
lcall
push
je
add
sbb
inc
out
fs
xor
adc
xor
mov
mov
cli
xchg
inc
sarl
sub
sub
xchg
add
cmp
arpl
xor
add
std
lods
iret
cmp
fidivl
cmpsb
dec
mov
pushf
xchg
cmp
test
adc
repz
inc
and
lcall
push
jae
pop
popa
stos
mov
ljmp
or
nop
lods
shlb
add
add
and
out
inc
cld
cmp
inc
outsl
sub
adc
insb
and
test
jecxz
stos
inc
pushl
cld
shr
add
movsb
ds
pop
xchg
fs
out
pop
iret
cmp
out
sti
ffreep
jne
mov
cwtl
mov
jno
adc
mov
inc
push
shrl
jp
movsl
std
bswap
fmuls
xchg
es
fbld
testb
pop
mov
xchg
xor
jns
mov
outsl
dec
sbb
push
test
xor
int3
dec
addr16
sbb
pop
and
xchg
ret
aas
lods
inc
adc
jg
xor
nop
add
mov
or
mov
iret
out
int3
and
or
cmpb
scas
mov
clc
mov
incb
js
jae
inc
sub
adc
and
sahf
add
pushf
xor
pop
mov
insb
xchg
add
icebp
cs
repnz
daa
jbe
push
pop
dec
and
xor
pusha
cld
repnz
dec
in
mov
lret
das
fwait
xlat
mov
cmp
push
loope
add
jbe
mov
fstpt
mov
aas
sbb
scas
push
xchg
adc
push
mov
popa
bound
jne
push
in
popf
or
mov
jmp
sub
push
xor
fnstenv
xlat
movsl
cltd
insl
lods
imul
mov
mov
popf
testb
or
mov
jmp
jne
xor
sbb
ljmp
sbb
test
sub
divb
pop
mov
add
lcall
jno
mov
out
add
mov
push
cs
add
pusha
adc
imul
add
pop
popa
scas
popf
sub
mov
int3
movsb
pop
mov
pop
cmc
fs
cmp
orb
fsubs
stos
test
mov
mov
inc
arpl
in
jle
fstp
outsb
mov
rorl
pusha
mov
out
inc
clc
push
dec
and
test
mov
xlat
pop
mov
xor
pop
add
inc
jle
mov
and
dec
int3
divb
pop
lods
out
push
unpcklps
and
movsb
loope
mov
sbb
pop
pusha
sub
das
inc
divl
lahf
push
mov
popa
jecxz
loop
data16
xchg
out
dec
leave
dec
add
cmpsl
test
repnz
mov
shr
clc
or
jns
sub
es
sarl
xor
repnz
xchg
or
arpl
imul
push
insl
mov
pop
aam
addb
xor
in
jecxz
add
js
icebp
mov
push
inc
pop
repnz
imul
add
jmp
cltd
std
cmpxchg
movsb
out
adc
dec
popf
and
loopne
sub
lods
push
inc
in
rcll
fnstenv
scas
jnp
ret
mov
jb
or
loop
fucom
xor
or
push
xchg
jmp
add
loop
and
idiv
jg
lea
push
scas
xchg
ret
in
add
xchg
out
and
mov
pop
xchg
clc
cmp
lds
inc
rcrl
inc
and
add
repz
decl
fidivrl
dec
mov
cli
out
or
fidivrl
mov
enter
jne
lret
lret
xorl
mov
mov
dec
out
pop
sbb
add
or
es
and
inc
push
push
jg
aaa
movl
nop
daa
push
mov
ret
add
rcrb
les
out
nop
sub
or
mov
jnp
scas
xchg
add
and
pop
xchg
pushf
jne
mov
pop
repz
into
aam
push
mov
adc
inc
in
sbb
pop
testl
pop
sbb
jae
imull
sub
outsl
insl
cs
cmp
dec
mov
shll
mov
cld
into
pop
push
lods
mov
cmp
inc
push
mov
bound
cltd
ja
insb
clc
rcr
pop
jmp
lods
inc
add
push
jp
and
pop
jl
lods
aad
pop
fiaddl
insb
fwait
mov
push
ljmp
push
pusha
mov
push
call
stos
sub
leave
mov
sahf
icebp
pop
rolb
insl
stos
and
dec
sub
getsec
inc
push
mov
call
push
push
xchg
push
outsl
in
dec
pop
pop
arpl
shlb
push
jne
pop
xchg
in
sub
aam
pop
lret
in
or
loop
mov
sbb
dec
push
imul
xor
fidivrl
dec
cld
mov
sub
lea
mov
jno
int3
cmpsl
bound
sti
xor
adc
sbb
add
in
shrb
xor
push
mov
jmp
add
sbb
push
xor
cmp
mov
inc
mov
jg
add
pop
adc
inc
push
cmp
repnz
add
test
adc
rcrb
sub
mov
stos
aas
jl
stos
add
mov
int3
lea
scas
mov
mov
popa
das
popf
icebp
cmp
cltd
jae
mov
addr16
lcall
js
mov
cmp
scas
fsubl
inc
pop
push
inc
rcl
out
add
loopne
jnp
fstps
dec
lods
std
ret
jae
pusha
inc
cmp
xor
push
sbb
gs
cwtl
movsb
inc
mov
sub
int3
push
bound
dec
popa
clc
loope
mov
dec
mov
jo
lret
hlt
ror
imul
inc
xor
and
aad
sub
movsl
pusha
inc
ss
movsl
popa
or
jae
andb
test
and
loopne
xor
pop
push
cmp
mov
testb
test
xchg
dec
inc
nop
push
sub
xor
fistpl
mov
inc
in
and
mov
adc
jbe
mov
sarl
addr16
xor
int
mov
push
dec
mov
outsb
fwait
bound
xchg
add
cmpsl
pop
jle
pcmpeqd
push
pop
add
nop
push
xchg
lret
adc
jmp
out
sbb
mov
shll
leave
cmp
test
sub
mov
dec
xor
xchg
sbb
push
mov
push
pop
or
and
movsb
sub
cmpsb
jo
cmp
mov
andl
scas
cli
fadds
mov
xchg
or
pop
imul
shlb
lods
pop
push
jbe
sub
outsl
mov
cmovne
loope
enter
mov
shl
mov
lahf
ror
sbb
cmpsl
dec
insb
and
mov
aaa
out
out
push
mov
jae
add
hlt
adc
stos
jp
inc
dec
test
jbe
sub
js
enter
outsb
sti
sbb
adc
je
add
sub
mov
mov
add
stos
mov
mov
dec
orb
push
sub
sub
mov
inc
xlat
repnz
add
ljmp
inc
fisttps
xchg
lds
in
xorl
xor
lret
imulb
divl
sub
mov
ret
orb
mov
jge
stos
mov
jo
in
ficomps
mov
cs
xorl
in
mov
pushf
sti
add
repz
mov
dec
pop
mov
fidivs
jmp
cmp
sub
ds
sti
pop
cmp
cld
arpl
cwtl
xchg
dec
sbb
or
cmpsl
pop
test
xchg
cltd
xchg
push
loop
scas
xlat
xchg
pusha
arpl
push
and
aad
pop
pusha
fcomi
jecxz
mov
inc
sub
scas
fildll
mov
mov
pop
fwait
addl
pop
inc
dec
outsl
int3
cli
push
out
mov
inc
daa
outsl
es
mov
push
jecxz
test
and
hlt
xor
mov
ret
rcr
pop
lock
adc
popf
jg
cmpsl
stos
es
sar
mov
xchg
scas
add
aas
sbb
mov
ja
lahf
std
xlat
adc
cmpb
push
dec
jg
pushf
mov
movsb
dec
inc
and
mov
dec
xor
testl
outsb
mov
mov
ret
and
xchg
mov
pusha
fidivl
hlt
mov
push
sub
jnp
stos
mov
add
sbb
test
daa
pop
fisubrs
and
cmp
lret
mov
lea
inc
aam
push
jnp
sbb
mov
mov
cmp
push
filds
shl
les
add
jne
sti
or
cmp
xor
add
mov
in
shlb
xor
mov
mov
jecxz
dec
outsb
inc
xchg
in
fcoml
fwait
sub
cld
or
and
xor
dec
mov
xorb
adc
cli
aas
xchg
push
cmp
pop
lret
jo,pt
jno
push
sbb
or
inc
jns
aaa
or
cmp
pop
or
orb
xor
push
dec
jecxz
cmpsb
iret
lea
fsts
dec
sarb
xor
xor
mov
stos
push
in
aam
arpl
mov
cmpsl
out
inc
xchg
aas
scas
or
adc
xor
mov
fsubs
push
fistpl
jae
jge
jb
fwait
insl
call
mov
stc
pop
sbb
ljmp
dec
jb
or
pop
inc
or
inc
add
lods
push
jne
push
add
or
test
inc
fsub
pusha
pop
push
push
and
ret
inc
mov
add
cmp
mov
nop
mov
or
xchg
stos
cmpsl
rcll
sbb
pushf
test
rcrb
ret
dec
mov
adc
inc
jg
mov
add
push
ret
mov
mov
cmp
mov
push
iret
jge
clc
ljmp
push
jecxz
push
adc
and
adc
insl
dec
leave
xor
inc
les
orl
pushf
icebp
cmp
sub
xor
nop
add
cwtl
arpl
fcmovnu
cli
adc
shrb
xchg
out
shlb
dec
pushl
mov
inc
adc
mov
imul
or
ja
stos
cmp
xchg
jecxz
jbe
jno
and
imul
ficoml
in
divl
mov
mov
dec
shr
jbe
ljmp
out
sub
addr16
inc
cmp
cmp
fnstcw
sbb
cs
inc
dec
cmpb
in
cli
push
out
jb
cmp
xchg
or
mov
in
in
mov
pop
xchg
xchg
xchg
dec
jecxz
insl
xor
aam
push
test
mov
les
xor
es
xchg
add
sbb
dec
outsl
pop
and
cld
pop
cmp
icebp
ljmp
lea
mov
cwtl
stos
loope
add
scas
mov
xor
or
ds
push
je
enterw
xor
dec
sub
ficoml
jg
outsb
dec
aas
jo
jge
dec
adc
sub
test
frstor
mov
sub
je
fdivrl
fisttpll
pop
andl
pop
aam
ror
push
mov
jg
inc
test
push
mov
popa
out
jge
jno
scas
loopne
and
decl
into
lret
popa
aaa
mov
push
pusha
and
xchg
push
adc
in
sub
or
imul
adc
mov
loop
insb
in
jnp
int3
push
in
lret
xchg
cltd
fbstp
dec
jae
ret
shrb
pop
jge
or
xor
icebp
pop
add
mov
adc
inc
sub
fs
in
pop
adcb
cs
sub
stos
imul
mov
pop
fistl
cmp
cmp
add
imull
stc
sub
or
dec
lods
jae
outsl
aam
loope
mov
jge
sbb
lock
fs
push
inc
insb
xor
sti
jle
xor
cmpsl
ret
xor
jge
cmp
lds
into
xchg
in
out
mov
and
push
push
lret
jmp
pop
jnp
stos
add
jecxz
cmp
cmpsb
jp
mov
popf
daa
add
stos
hlt
shr
xorl
xchg
std
mov
sub
cmp
or
popf
or
jbe
test
in
add
push
out
repz
cs
imul
pop
sbb
and
mov
sub
sub
or
add
dec
aam
imul
aas
hlt
add
jge
and
mov
repz
and
ss
jl
sbb
xchg
popa
push
negl
insl
pop
push
dec
sbb
xchg
test
sti
fs
dec
jnp
insl
mov
mov
jp
pop
xorl
mov
xchg
jae
sub
pop
stc
imul
xor
xor
pop
fnstsw
xor
fisttpll
xchg
ljmp
mov
mov
movsb
imul
shll
adc
scas
mov
pop
pop
ret
xchg
cmpsb
imulb
ja
mov
fstpl
orl
xor
lret
outsl
sub
cltd
jmp
aaa
sbb
je
sbb
push
fmuls
push
adc
inc
movsl
rcl
and
loop
mov
xchg
dec
and
inc
sbb
leave
push
leave
divb
gs
ds
movntps
std
add
aas
adc
in
iret
jle
mov
loop
cli
pusha
fldenv
push
xchg
insb
xchg
data16
sub
mov
andl
cmpsl
xor
jne
lahf
or
iret
dec
pop
nop
test
ja
and
sbbb
insb
mov
jecxz
rol
orb
sti
shlb
inc
setns
imul
and
or
cmp
mov
mov
push
and
ja
retw
popl
cmp
push
out
sbb
sbb
dec
jg
add
xorb
jg
pop
es
rolb
pop
or
xor
cmp
pop
addb
mov
das
jnp
jle
lcall
dec
cmp
mov
js
ret
sub
out
cmp
into
test
hlt
out
outsl
pop
test
dec
ret
mov
adc
aaa
sub
idivl
jns
pushf
jae
mov
mov
sarb
xor
pop
sub
out
adc
xor
or
xchg
popf
pop
rclb
imul
sub
stc
mov
cmc
inc
adc
fcoml
inc
mov
xchg
mov
dec
ret
adc
jle
sub
sbb
push
mov
hlt
mov
fdivp
pop
jb
lret
push
adc
xchg
dec
pop
jae
ret
and
lcall
ffreep
xchg
ja
cltd
fidivl
sub
pop
cld
lods
test
test
adc
jp
mov
jmp
fadds
notb
xchg
mov
add
frndint
call
xor
sbb
scas
xchg
cs
xor
push
mov
fdivs
pop
inc
cli
cmp
fsubl
xor
je
js
inc
and
out
pop
das
aas
nop
push
data16
dec
push
das
sub
push
push
imul
gs
mov
jo
mov
mov
leave
pop
push
sub
js
stos
push
iret
push
out
insb
data16
jecxz
imul
inc
ds
jb
adc
shlb
sbb
and
inc
outsb
shll
sbb
mov
or
orl
cmp
les
or
mov
sarl
mov
jbe
lods
in
jbe
inc
jne
push
pusha
ljmpw
and
add
xchg
xor
adcb
leave
mov
scas
sti
aad
inc
xchg
les
jbe
in
roll
xchg
jecxz
stc
mov
and
xchg
xchg
mov
inc
mov
xchg
in
ficomps
mov
stc
ljmp
dec
fdivp
insb
adcl
dec
cltd
iret
mov
mov
xor
scas
mov
mov
adc
lods
icebp
out
dec
fldenv
xor
xchg
das
lods
xor
xor
mov
pop
xor
mov
in
xchg
sub
jb
fists
sub
xor
sbb
in
or
icebp
and
push
call
les
xchg
jns
filds
mov
mov
imul
push
pop
fs
adc
dec
xor
inc
mov
fs
call
test
int3
adc
pop
dec
incl
and
xchg
cwtl
pop
mov
out
inc
jmp
ffreep
jmp
outsl
or
icebp
or
sahf
arpl
pop
add
cmc
or
fwait
sti
std
mov
inc
pop
mov
in
movl
ja
xchg
cwtd
push
ret
push
dec
ffree
mov
ret
rcl
or
cmp
aam
testb
outsb
mov
out
adc
adc
or
insb
ret
pop
scas
ficompl
inc
inc
nop
jmp
das
call
sub
es
push
pop
outsb
roll
jmp
jecxz
imulb
push
int
jno
aad
aam
lcall
loopne
adc
stc
mov
xchg
inc
adc
xchg
jge
and
dec
jae
push
inc
rcrl
cmp
push
jmp
icebp
sbb
popa
mov
lcall
xor
repnz
fdivp
push
inc
pop
test
out
sbbl
or
imul
popa
add
outsb
movsl
outsb
dec
ds
aaa
arpl
jae
shr
adc
das
adc
sub
push
or
and
push
sahf
out
mov
xchg
nop
hlt
dec
mov
mov
lahf
jnp
daa
ret
jp
sbb
popa
inc
mov
cli
jl
lods
xor
mov
insl
add
lcall
push
enter
xor
xlat
push
pop
jg
adc
fdivs
and
jne
sbb
mov
pop
subl
lods
fcmovne
insb
fwait
dec
in
pop
mov
dec
sar
js
dec
data16
aas
sbb
nop
mov
pusha
push
data16
out
sbb
idivl
sbb
jnp
jmp
cltd
inc
mov
pop
mov
movsb
mov
xchg
arpl
fwait
mov
std
xchg
or
pop
mov
push
test
sbb
inc
jecxz
add
adc
xorl
mov
sub
fildl
hlt
dec
icebp
pusha
movl
lods
and
call
mov
push
out
movb
pop
fisttps
inc
lret
out
mov
rcl
lret
jmp
pop
movsb
loope
in
loope
and
sub
mov
stos
or
inc
xor
mov
repz
cmc
stos
and
sub
dec
loope
adc
mov
push
push
xchg
xchg
lcall
sbb
std
jmp
dec
cmpsb
js
rcrb
popa
aaa
dec
ret
or
mov
xchg
sbb
ss
sbb
jne
pop
movsb
push
push
xchg
repnz
loopne
es
xor
ficoml
in
mov
adc
jnp
scas
scas
mov
cltd
mov
xchg
not
jge
inc
outsb
push
jnp
cmp
fcmovu
push
cld
xchg
jmp
dec
das
sbbb
mov
repnz
mov
push
jmp
sahf
fs
repnz
jno
mov
test
out
addr16
test
cwtl
outsb
mov
aad
pop
adcl
shll
je
lcall
test
xchg
shrl
fimuls
in
fbstp
fcomps
jbe
scas
mov
movsb
sbb
and
dec
jne
shr
lcall
mov
aam
sbb
and
cmp
insb
push
push
andl
xor
mov
dec
negl
and
pop
sahf
lea
sub
ret
sbb
pop
and
mov
lods
or
pop
inc
addl
pop
les
arpl
xchg
ja
add
cmp
popf
cmp
call
pusha
rorb
push
test
je
bound
pop
in
das
mov
and
cld
inc
icebp
push
xor
jmp
sub
in
int3
popa
mov
push
jg
add
xchg
and
adc
push
je
repnz
arpl
mov
or
xor
mov
cmp
sbb
bound
dec
faddl
rcll
pushf
jae
jb
sbb
es
into
pslld
sbb
sahf
adc
jnp
ds
cmp
xor
sub
cmp
mov
rclb
icebp
xchg
fisubrl
add
and
pop
in
xchg
jge
outsl
roll
cmc
jge
dec
mov
movsl
lahf
xor
lea
faddl
mov
in
inc
leave
sbb
ss
fidivrl
add
xchg
lcall
lcall
sub
and
xor
push
pop
mov
sbb
gs
into
roll
pushf
ds
xor
subl
jns
in
xlat
pusha
das
test
stc
push
mov
in
shrb
cltd
repz
and
mov
repnz
mov
test
push
pop
outsb
dec
test
aad
cmp
out
repnz
inc
xchg
std
mov
cwtl
int3
add
mov
loop
inc
and
xchg
xchg
out
add
mov
mov
jmp
mov
mov
gs
mov
outsl
adc
js
fmuls
ja
inc
testb
sbb
js
xchg
and
clc
or
fisttps
inc
icebp
dec
aad
movsl
xchg
jo
xchg
enter
movsl
add
loopne
xchg
fcoml
cmpsl
or
jne
xor
in
ljmp
outsl
lods
inc
js
adc
dec
cmp
cltd
jns
push
call
cmp
push
xor
aas
scas
adc
scas
leave
mov
mov
or
mov
stc
and
repz
mov
rorb
mov
pop
xorl
lods
call
lcall
and
stos
lret
mov
jo
sbb
mov
push
add
sub
xchg
imul
mov
jp
push
dec
in
scas
arpl
movsb
rclb
stos
popa
sbb
ljmp
insl
loope
scas
inc
xchg
push
push
lods
dec
dec
xlat
push
lock
jns
mov
mov
inc
inc
ljmp
mov
mov
addl
jecxz
push
add
stos
inc
dec
test
int
roll
and
adc
add
fistps
sahf
rcl
push
dec
scas
scas
mov
loop
jbe
cmp
arpl
pop
lret
adc
lahf
mov
add
loopne
das
add
mov
adc
daa
push
jbe
mov
adc
roll
jns
mov
sbb
sub
ret
icebp
frstor
cltd
cld
jg
pop
dec
jnp
addb
push
adc
hlt
dec
mov
jg
popf
stos
adc
and
mov
fcmovnb
push
in
xor
pop
lret
popl
int
rcll
adc
arpl
stos
dec
bound
xor
xor
adc
lcall
lret
pop
mov
pusha
adc
push
push
in
hlt
cmc
mov
ret
jl
out
cmp
fistl
imul
mov
pop
outsb
pop
push
cli
xchg
xor
shrl
repnz
movsb
sbb
nop
subb
orl
xchg
test
call
dec
pop
xor
insl
lahf
fcomps
adc
mov
push
push
popf
loope
and
jg
insl
ffreep
pop
popf
add
int
std
adc
and
and
dec
push
rcrb
push
daa
or
cmp
in
pop
in
mov
daa
cltd
inc
cmpsl
movsb
and
fucom
stos
pusha
sbb
adc
es
ficompl
push
mov
pop
icebp
push
mov
pop
jecxz
inc
push
cltd
sub
jne
mov
and
adc
in
test
stos
jb
adc
fists
cmp
and
xor
faddl
lahf
and
fsubrp
xchg
jns
push
rorb
mov
xor
xor
ss
mov
fcmovbe
mov
aaa
adc
test
leave
ret
and
sbb
inc
xor
sbb
in
push
inc
test
sub
xchg
jl
cmpsb
les
pushf
loop
sti
mov
xchg
xchg
dec
mov
in
call
and
ffreep
add
push
xchg
mov
rorl
dec
stos
jle
cwtl
js,pn
stc
mov
stos
mov
cmp
mov
lahf
fld
sbb
gs
adc
add
xor
xchg
idiv
xchg
dec
xor
sub
jl
mov
add
jno
sbb
dec
cmp
mov
dec
lret
jecxz
adc
sub
or
insb
pop
decb
xor
add
mov
mov
add
jbe
pop
inc
cmp
jmp
push
mov
insl
cmp
cmp
sbb
push
data16
ret
cmp
inc
test
jmp
xchg
cld
sbb
push
and
mov
js
mov
xlat
xchg
xor
xchg
jno
out
push
fsubrs
aad
stos
movsb
shll
or
sub
les
lahf
fiadds
out
sahf
movsl
cmp
cmpsl
push
out
xor
leave
call
push
outsb
pop
cmpsl
cltd
int3
call
insb
repz
sub
dec
mov
add
out
shll
in
adc
or
dec
in
xor
lret
sbb
adc
mov
scas
mov
xchg
ja
mov
movsl
xchg
lea
adc
add
popa
iret
dec
inc
sub
lret
pop
push
adc
test
cmpsl
loopne
push
cmc
stos
jo
loop
movsb
ljmp
ja
sarl
dec
xchg
xor
lods
inc
insl
xchg
mov
and
hlt
roll
jg
mov
push
cmc
out
cwtl
cmp
sub
inc
ret
or
mov
jbe
mov
push
adc
pop
ror
fildll
into
pop
ljmp
mov
fldenv
les
mov
ds
aad
test
pop
sbb
cli
lret
and
lods
mov
mov
xchg
mov
sub
cmp
adc
std
push
mov
lods
arpl
nop
dec
mov
test
inc
or
gs
pusha
sbb
stc
inc
frstor
pop
sub
stc
scas
add
jmp
jp
sahf
cmpsb
jnp
push
fsubrl
mov
push
and
lods
pop
cmpsl
jle
inc
sub
pop
adc
ret
test
in
xchg
loopne
adc
push
add
inc
imul
ss
jmp
sub
subps
ret
push
add
js
xchg
es
insb
shll
dec
bound
xchg
mov
inc
ss
outsb
push
idivb
jbe
adc
mov
in
cld
add
mov
fdivp
pop
or
mov
es
and
inc
in
outsb
movsl
xchg
rorl
xchg
jno
or
lds
sahf
and
dec
sahf
jp
fistpl
xor
imul
mov
sbb
test
mov
add
dec
adc
xor
inc
xchg
dec
nop
in
add
scas
sbb
xchg
ret
xlat
xchg
push
xchg
nopl
mov
aam
out
fldl
rcr
pop
push
in
sbb
pushf
xchg
cmp
pop
or
cmp
out
sub
outsb
adc
mov
cwtl
clc
out
sub
sub
outsb
pushf
jbe
inc
test
ja
or
cmpsb
jg
mov
aas
cltd
stos
sub
mov
cmp
cmp
mov
mov
into
dec
pop
fisubrl
dec
adc
ret
dec
xor
xor
fstp
test
ds
sub
sbb
sbb
mov
jmp
jbe
sbb
or
xchg
int3
shrl
add
mov
xchg
pop
call
xor
test
push
lods
imul
push
push
fs
inc
mov
jmp
adc
imul
xchg
pop
pop
mov
imul
xor
mov
test
lret
in
add
lcall
in
add
ror
hlt
enter
pop
mov
bound
xor
mov
test
mov
sar
cs
cmp
lods
xchg
jmp
xchg
xor
sbb
in
add
push
jns
sahf
push
movsw
pop
and
test
xor
mov
pop
inc
ret
push
cmc
insb
sbb
and
leave
sbb
add
fdivr
sbb
mov
cmp
std
sahf
push
ret
testl
psadbw
sbb
and
lock
out
inc
pop
insb
xchg
xor
cmp
int
or
nop
adc
xchg
lods
jb
push
or
cmp
xor
sbb
cmp
and
xchg
mov
shlb
lahf
testl
cmp
sbb
lods
imul
inc
cmc
pop
fcomip
hlt
push
das
sahf
adc
jb
sahf
xchg
mov
rcrl
bound
sub
jno
mov
mov
xor
dec
adc
pushf
out
lahf
mov
arpl
rcr
sarb
in
and
loop
addr16
sti
jno
call
xchg
xchg
stos
and
mov
dec
ja
sub
dec
insl
int
pop
sbb
or
mov
aas
je
movsb
jmp
jg
rcrl
cmp
fidivl
sahf
movsb
repnz
aas
mov
rcll
lcall
cmpsb
sub
js
dec
in
mov
mov
inc
and
test
pop
pop
das
dec
fdivrp
jle
pop
sbb
sub
sub
inc
sub
sbb
push
test
pop
mov
xor
pop
stos
lea
xor
repz
pop
xchg
cli
pop
inc
and
mov
or
jno
repnz
mull
push
fs
iret
inc
data16
lcall
cmp
iret
mov
lea
xchg
mov
mov
cltd
sahf
stc
pop
lcall
in
mov
add
out
outsb
jb
testb
adc
andnps
lea
subb
lret
adc
dec
add
sub
sbb
aam
mov
and
insl
xor
add
mov
mov
ret
std
jp
stc
sub
xor
stc
cmp
repnz
mov
jle
mov
xorb
addb
gs
iret
xor
lock
outsl
lret
push
jle
sti
push
cmpl
jmp
fdivrl
adc
xor
js
clc
fdivp
push
push
lds
loope
adcb
test
mov
pop
jmp
or
xor
mov
fwait
pop
sbb
shlb
mov
and
xchg
mull
and
sub
jp
adc
pop
push
cmc
and
mov
or
mov
lea
repnz
mov
in
scas
push
lea
jp
aam
pushf
pop
inc
sbb
int
dec
or
sub
lgs
sbb
cmp
fs
lret
nop
xor
or
jmp
jb
imul
add
xor
fsts
mov
xchg
and
inc
cmp
inc
and
repz
lret
xor
sbb
into
aam
xor
push
push
xlat
das
scas
inc
pushw
loope
push
lock
jmp
fisttpl
xlat
mov
in
into
jne
push
out
dec
insb
pop
test
push
jp
mov
test
test
loopne
imul
dec
xor
jp
push
popf
or
test
in
xlat
cmp
sub
gs
arpl
and
xchg
mov
jle
jbe
xor
push
leave
lcall
gs
loop
mov
cmp
mov
adc
lds
insl
imul
arpl
lods
addr16
in
in
push
jb
mov
pop
mov
add
push
inc
jle
mov
les
xchg
add
in
jo
inc
fs
sbb
xchg
jecxz
jb
sub
rcrb
lahf
inc
mov
or
lahf
cmpsb
xor
popf
xchg
cmp
lods
aaa
mov
jmp
xchg
data16
call
mov
loopne
cmp
dec
dec
xor
out
insl
mov
jle
mov
ret
mov
add
inc
pushw
mov
out
mov
addr16
lods
stc
pushf
cmp
adc
pop
std
insb
filds
leave
jg
daa
fldcw
in
mov
push
push
pusha
inc
cli
repnz
fldl
aaa
push
lods
int3
rcrb
aam
stc
js
mov
push
pop
aam
clc
cmp
filds
int
insl
xchg
lock
sahf
rorl
xchg
test
aam
leave
push
xchg
pop
sub
insl
jl
or
incb
std
mov
dec
mov
dec
push
push
lea
and
add
mov
test
repz
nopl
mov
test
push
out
sti
ds
enter
mov
repz
inc
mov
nop
xchg
xor
sahf
filds
sti
dec
adc
adcb
js
les
mov
mov
sub
lea
fidivs
sub
rcrl
in
shll
sub
jecxz
inc
xor
push
sbb
xchg
les
adc
aad
inc
xor
xchg
movsb
mov
test
xchg
dec
pop
jge
cmp
pop
sbb
mov
fidivs
cwtl
movsl
cmp
sbb
popa
lea
mov
push
jbe
shlb
pop
and
aas
leave
or
jge
mov
pop
sbb
pop
aas
repnz
jns
pop
push
push
lcall
sbb
or
sbb
mov
xchg
mov
imul
and
and
mov
push
jecxz
xor
ror
xchg
jmp
test
mov
dec
dec
push
jl
je
jnp
inc
cmc
adc
lret
fbstp
imul
xchg
rorl
xchg
mul
push
cmpb
jle
adc
adcb
enter
cmp
or
scas
addr16
dec
fsts
xor
int
mov
or
sub
repz
insl
ds
test
xor
out
mov
loopne
mov
and
fdivrl
push
js
mulb
fisttpll
cmp
hlt
mov
pop
sub
inc
sbb
adc
cmp
adc
ja
and
jnp
ds
sti
sbb
sti
push
bound
sub
fldenv
fbstp
sbb
pop
inc
xchg
mov
cld
ja
pusha
stos
mov
inc
mov
gs
and
loop
or
loope
ja
hlt
out
jp
xlat
pushf
ljmp
inc
es
sbb
pop
cmp
xor
or
mov
xchg
jne
xor
outsl
sbb
fsubl
jmp
jg
jmp
loopne
ja
mov
in
ljmp
sub
test
xor
mov
and
xchg
idivl
dec
or
loop
fisttpll
notb
ds
lods
repnz
inc
mov
xor
sub
mov
dec
arpl
dec
shll
inc
fnstcw
or
add
mov
or
imul
xchg
mov
cmp
daa
insl
fs
add
lds
popa
out
sub
jae
inc
addr16
mov
or
pop
popa
into
subb
xchg
cmp
lea
mov
rcl
inc
and
nop
repz
inc
inc
cwtl
sbb
add
ror
cld
push
in
divl
test
aam
adc
jl
mov
inc
pusha
mov
adc
loop
repz
add
cmp
xchg
dec
lock
int3
dec
dec
orl
sub
mov
test
add
fdivrs
leave
test
xchg
ret
or
out
jmp
lds
inc
jo
mov
pop
xchg
pop
jae
mov
stc
hlt
jne
ljmp
iret
or
jae
xor
loopne
sub
pop
cmp
lock
add
lock
push
mov
adc
movb
jge
mov
mov
cmp
xor
aam
sub
lods
clc
pushf
mov
adc
dec
jecxz
pop
xor
jmp
fidivrl
loopne
insb
clc
xor
lret
jb
jo
dec
lods
jle
pop
or
dec
jb
push
mov
repz
cmp
xchg
cmp
out
in
enter
cltd
add
call
lock
insb
enter
jl
adc
mull
shrl
repz
negl
shlb
sub
rcrl
mov
insb
jne
cmpsl
jp
push
cmpl
jge
andl
popa
xchg
sub
mov
negl
dec
loop
jge
aam
lret
aas
push
xchg
fistps
dec
mov
adc
pop
or
or
lret
loope
push
add
ror
pcmpeqd
xchg
addl
call
inc
sti
mov
daa
dec
adc
cld
lahf
pop
sbb
lahf
cmp
mov
cmp
xor
cli
xor
xchg
sub
fwait
cmp
testl
pop
cs
xchg
xchg
pop
add
mov
cmpsb
jnp
repnz
out
mov
mov
xchg
sub
in
testb
mov
jp
int
inc
push
insl
mov
sub
hlt
dec
xchg
lods
bound
insl
cltd
int
test
pop
xlat
push
or
inc
mov
mov
leave
sub
pushf
call
push
inc
ret
daa
outsl
test
push
inc
daa
and
fisubl
add
xchg
fwait
dec
mov
fstl
lret
sbbl
add
or
adc
cmp
stc
mov
ja
js
xchg
and
pop
in
add
fs
or
adc
mov
mov
mov
and
cltd
cld
xchg
push
in
sbb
xor
xchg
sbb
mov
and
notb
add
mov
aaa
lahf
in
ffree
out
enter
sbb
and
inc
push
xchg
std
scas
out
cmpsl
pop
cmpsb
mov
mov
mov
imul
pop
enter
rolb
inc
loope
push
popa
xchg
add
xor
lock
out
inc
sbb
pop
jo
stos
icebp
aas
sub
lret
add
aam
outsl
dec
std
inc
ljmp
sub
inc
outsl
inc
hlt
scas
xchg
or
and
adc
mov
inc
pop
rclb
jle
pop
fcmove
or
dec
loope
popf
ljmp
jbe
enter
getsec
ret
icebp
repnz
push
xchg
push
lods
or
inc
pop
mov
addb
lods
dec
shrb
mov
lret
jnp
mov
and
fisubrs
mov
push
filds
jmp
mov
add
daa
iret
pop
sub
push
xor
pop
dec
push
push
adc
ja
fisubs
inc
mov
mov
gs
pusha
pusha
adc
std
hlt
fs
pop
aas
inc
icebp
movsl
cmp
insl
fsubrl
imul
pop
dec
dec
mov
out
ja
stos
lea
inc
enter
ror
test
mov
xor
lcall
mov
imul
xchg
lock
cltd
cwtl
fisttps
lods
mov
xor
inc
movsl
push
movsb
cltd
jmp
and
jge
mull
fs
mov
imulb
pop
outsb
fdivl
jg
adc
xor
jle
ss
jle
pop
pushf
shll
pop
pop
int3
int
mov
movsl
out
in
das
cld
cwtl
push
fisttpl
nop
add
xchg
mov
xchg
leave
or
and
pop
pop
sbb
sarb
es
mov
xor
cmp
sti
push
pmuludq
test
add
mov
adc
cmp
pop
repz
scas
lcall
fisttpl
mov
dec
xchg
inc
adc
test
inc
sub
popf
jo
sbb
and
std
cmp
xchg
adc
or
leave
gs
lock
push
mov
ljmp
sub
hlt
inc
mov
fisubl
mov
dec
addr16
imul
jns
cmp
cmp
mov
xor
add
push
pop
mov
xor
add
sahf
scas
dec
cmp
mov
mov
divl
sahf
mov
popa
into
mov
int3
push
add
and
or
lret
dec
mov
fwait
pusha
fldcw
add
sbb
jg
imul
push
dec
inc
inc
jae
cltd
inc
add
push
ds
add
lea
ficomps
xchg
xchg
aam
imul
sub
push
adc
mov
and
mov
es
clc
mov
cmpsl
jbe
lock
sbbb
jecxz
adc
jmp
lock
mov
lahf
inc
aad
mov
ret
call
arpl
enter
lods
push
adc
icebp
add
xlat
dec
loope
ret
xchg
mov
pop
btc
rcr
adc
decb
sub
jge
loope
dec
dec
xchg
insb
pop
add
ret
fwait
jp
adc
pop
pushl
xchg
dec
push
ja
fcompl
mov
jmp
mov
pop
leave
pop
push
mov
mov
cli
sbb
fwait
dec
lret
mov
js
int3
and
dec
pop
fdivs
sub
jae
jp
jecxz
add
test
pextrw
insb
cmp
cmpsb
jp
cmp
fstpl
adc
stc
aas
rcr
lock
jle
into
dec
in
inc
insl
xchg
lods
jb
aas
sbb
lahf
int3
cli
mov
icebp
dec
lock
ret
xor
in
sbb
rcll
add
mov
jecxz
jl
aaa
imull
inc
sub
bound
movsb
push
jbe
mov
xchg
jp
pop
jno
pop
mov
testb
push
std
lods
sbb
sub
cld
cltd
cwtl
cmp
lock
jbe
out
bound
xor
cmpsb
add
adc
stos
or
stc
push
lahf
mov
mov
sbb
int
inc
fcompl
mov
filds
xchg
ret
mov
sbb
test
xchg
lock
xchg
xor
lcall
in
cmp
mov
test
adc
es
gs
scas
push
jo
mov
push
xchg
and
shl
pop
scas
idivl
dec
insb
fwait
dec
das
lea
mov
sbb
mov
aam
inc
mov
insl
lds
dec
pushl
inc
bnd
stos
or
ljmp
testb
fiaddl
scas
push
pop
scas
jno
out
fbstp
push
sbb
into
push
out
mov
sbb
add
inc
fs
shl
aam
mov
cwtl
mov
sbb
and
mov
call
and
cld
ds
jg
mov
mov
push
jns
mov
xor
mov
push
lods
xchg
xchg
mov
cmpsl
cmp
es
rclb
pusha
dec
push
insl
sbb
loopne
xchg
ds
sti
packuswb
adc
in
inc
int
mov
push
rcr
aaa
cmp
int3
in
lahf
xchg
xor
inc
pop
xchg
sub
mov
dec
ljmp
mov
loope
aad
shlb
xor
es
cmpsb
shlb
dec
lods
out
cmpb
inc
jne
stos
jmp
lret
push
and
inc
mov
dec
ja
push
or
test
add
popf
jne
cmpl
adc
nop
add
filds
insb
scas
sti
pop
out
addr16
or
cmp
cmpsl
inc
jge
xor
and
cld
filds
cli
push
adc
into
das
push
addr16
outsl
xchg
dec
mov
iret
sub
or
hlt
pop
sbb
xchg
lock
and
pop
xchg
cmp
mov
enter
mov
repnz
ror
or
in
mov
add
jo
xor
pop
lea
jle
cmp
pop
sbb
inc
mov
add
cld
movsb
je
loop
mov
push
mov
pop
dec
pop
in
add
test
push
lock
jns
sub
cwtl
in
mov
sarl
not
fwait
rolb
or
mov
push
sarl
flds
mov
enter
inc
clc
sbb
mov
push
imull
push
and
jne
repnz
push
fs
dec
popa
sub
test
shll
adc
mov
inc
les
jg
push
mov
pop
pop
lcall
loope
pop
in
jecxz
jne
mov
icebp
mov
mulps
jp
loopne
push
test
mov
pusha
jle
test
jb
sub
pop
pusha
jp
push
mov
push
pop
jecxz
pop
jecxz
cmp
cld
cs
dec
test
jge
test
icebp
loopne
pop
je
into
mov
rolb
xchg
clc
inc
mov
aas
jecxz
mov
fisttpll
in
cmp
gs
add
xor
xchg
sub
insb
push
js
dec
out
mov
jne
imul
mov
decl
dec
xor
cli
and
aam
dec
sub
dec
into
js
aad
insl
dec
and
cmp
cld
jg
xchg
out
adc
mov
cmp
movb
and
dec
jae
xchg
cmp
xlat
sbb
test
ficompl
push
out
xor
cs
test
inc
sarb
fwait
out
jmp
cmp
mov
sub
stc
dec
popa
inc
add
cwtl
sbb
enter
sbbb
xchg
xchg
inc
mov
pop
mov
clc
pop
call
pop
std
pop
add
push
scas
inc
xchg
std
pusha
in
es
add
idivb
sub
in
adc
test
clc
cmp
movsb
int
jp
rcll
mov
lds
loop
in
imul
orl
push
dec
ds
pushf
insb
fnstsw
lea
mov
jnp
jo
sbb
out
sbb
cmpsb
insb
fs
in
push
fidivs
mov
dec
xlat
das
and
imul
and
xchg
sbb
out
mov
cltd
cmp
mov
out
inc
pop
cmp
jmp
in
or
mov
lock
aad
dec
cmp
lcall
clc
cli
movsl
mov
dec
negl
and
pop
test
push
mov
sbbb
not
mov
in
ficoml
pop
mov
les
ret
iret
cmc
mov
outsb
cmp
push
outsl
mov
inc
aaa
stos
loopne
movsl
or
jg
lods
inc
es
outsb
mov
inc
inc
sbb
movsl
fs
rol
imul
jg
out
pop
dec
mov
pop
mov
mov
mov
inc
mov
lods
pop
mov
mov
aaa
push
mov
dec
inc
cmpsl
push
insl
mov
mov
inc
je
sub
push
bound
xor
dec
or
sahf
in
push
pop
pop
jmp
pop
mov
enter
cmp
imul
rclb
or
push
sbb
mov
addr16
pushf
add
add
jl
mov
sbb
ret
test
out
jl
adc
shll
in
and
addl
ljmp
jmp
sub
xor
rcrb
adc
sbb
mov
adc
inc
mov
in
or
inc
scas
xchg
notb
punpckldq
push
lret
dec
gs
in
dec
jge
ja
inc
xor
flds
lahf
test
fistps
negl
jp
lret
dec
add
stos
xor
sub
jp
fnstenv
mov
mov
in
movsl
movsl
shll
jae
xorb
push
sbb
xor
lods
xchg
arpl
pop
and
push
jb
imul
fcmovnu
dec
cli
incb
pop
xchg
into
cs
add
nop
xchg
push
popf
scas
pusha
jne
mov
js
fcmovnbe
aaa
popa
sbb
fstl
and
inc
lods
xchg
xlat
and
int
jp
push
inc
mov
pop
testb
mov
cld
mov
into
out
arpl
jno
je
xor
arpl
push
out
fnstsw
cmpsl
clc
mov
aaa
xchg
dec
push
sbb
pop
pusha
in
sub
push
cmp
xchg
add
or
push
aas
fsubs
fldenv
push
mov
adc
xchg
push
test
into
add
mov
pusha
mov
imul
sbb
aas
pop
orb
js
mov
out
push
stos
es
in
jo
lret
cmp
sbb
push
in
dec
mov
faddp
loope
sub
sub
cwtl
rol
mov
inc
dec
pop
fdivrs
les
add
mov
jo
pop
cmpsb
movl
push
lods
imul
jbe
mov
sbb
imul
and
pop
in
into
push
inc
loope
lds
add
mov
xlat
pop
dec
mov
ud1
call
pushf
add
sub
sar
and
int3
mov
sub
test
push
jg
lea
fcmovnu
inc
lock
js
cltd
scas
dec
adc
or
xchg
jne
mov
mov
stos
xchg
loope
mov
iret
hlt
push
dec
push
pop
sbb
cwtl
adc
sahf
mov
xor
fmull
xor
call
xor
inc
jo
push
xchg
lcall
push
das
xor
push
jb
pop
jo
movsl
out
jge
in
pop
jecxz
mov
push
adc
pop
xchg
sbb
leave
jno
andb
out
fs
push
ret
pusha
int
inc
movsl
shl
movsb
adc
enter
mov
sahf
cwtl
dec
jmp
mov
jb
xchg
lock
mov
pushf
jge
mov
sub
pop
dec
mov
adc
sar
loop
pop
mov
xlat
frstor
jp
push
fiadds
push
inc
cmp
insb
lock
in
pop
imul
sbb
sbbb
adc
outsb
leave
mov
in
js
aam
cli
jmp
clc
and
cli
jl
adc
in
push
std
or
stc
or
mov
movsl
xchg
pushf
cmp
or
push
or
cmpsl
mov
je
ret
cwtl
jnp
imul
adc
fstl
jno
mov
push
xor
cmpsl
cltd
adc
test
xchg
test
mov
aam
mov
jb
test
imul
pop
test
dec
sub
lea
js
iret
jle
rcrl
push
mov
scas
and
push
mov
mov
call
ficomps
lahf
sbb
or
addr16
adc
pop
and
jl
insl
stos
add
adc
in
mov
mov
out
mov
adc
mov
inc
lock
and
loope
ds
adc
sbb
sub
cwtl
stos
and
stc
lea
lret
add
adc
cmpsb
xor
jmp
in
fwait
xchg
xchg
jp
adc
divl
mov
psubb
sbb
int
push
int3
test
gs
rorl
mov
xor
popl
mov
out
jle
pop
mov
lret
lahf
cmpsl
dec
mov
cwtl
repnz
sbb
ficoml
in
cs
and
mov
sub
icebp
mov
sub
pop
ret
test
xchg
adc
dec
in
lahf
out
mov
fdivs
sub
sbb
mov
jle
xchg
and
stos
mov
dec
cli
cld
cmp
mov
adc
add
or
pop
dec
ja
pusha
push
sbb
imul
inc
dec
xchg
adc
sub
jno
pop
stc
inc
and
dec
cmp
sbb
xchg
jmp
stc
pop
dec
mov
aas
xchg
test
push
cmp
mov
push
test
stc
clc
nop
pop
mul
mov
mov
push
mov
push
pop
es
cli
negl
notb
mov
hlt
mov
cmc
shrl
pop
mov
mov
mov
xor
add
xor
pop
mov
outsl
test
pushl
stos
add
clc
jl
outsl
ja
push
xor
push
into
shll
in
cld
lea
mov
adc
je
sysret
sbb
je
jmp
movsb
popa
into
out
cwtl
adc
pop
lret
mov
dec
rcrb
push
and
pop
mov
add
je
xchg
repz
popf
mov
or
std
lds
dec
shrl
rcr
xchg
xor
mov
add
or
shll
mov
test
adc
or
ljmp
add
out
repnz
imul
inc
aam
xor
popl
lahf
sbb
rclb
popf
push
xchg
cmc
adc
cwtl
nop
popa
push
out
xor
in
lods
je
cltd
and
jecxz
xchg
cmp
add
mov
dec
std
dec
stc
dec
jecxz
fnstsw
sub
jmp
jmp
test
popf
out
xor
and
mov
out
pop
fwait
mov
pop
mov
push
data16
int3
enter
inc
mov
call
jne
gs
push
jge
popl
lds
inc
movsl
xchg
mov
jecxz
data16
push
xor
xor
es
dec
pop
loope
push
xor
dec
inc
mov
pop
xchg
pop
in
fwait
mov
jecxz
pop
and
and
std
inc
sub
rolb
mov
out
jmp
add
lret
ljmp
test
adc
jle
jns
add
aaa
pop
sti
fs
mov
test
call
mov
dec
pop
and
iret
xchg
mov
mov
xor
xchg
jns
pop
dec
popa
or
nop
adc
lcall
fcmovnu
cld
dec
pop
std
pop
cmc
jge
pusha
pop
bound
mov
sbb
mov
xor
sbb
lret
sub
xchg
cmpsl
arpl
sub
cmp
add
mov
cld
jp
scas
mov
in
in
idivb
or
repnz
xchg
lcall
xor
xor
sbb
les
pushf
jg
and
test
push
lret
bound
jnp
outsl
cmp
in
mov
imul
sbbl
sahf
repz
jp
std
call
or
mov
sbb
sbb
enter
js
xor
lea
dec
fildll
lahf
push
push
push
jne
pop
or
adc
jmp
clc
std
sub
sub
jecxz
dec
mov
and
shrl
je
mov
jecxz
xchg
imul
leave
mov
shr
sub
cmc
mov
pop
push
sbb
out
aad
imul
cmpsb
and
xor
jmp
sti
sub
mov
sub
imul
mov
sar
adc
and
insb
or
fcoml
xchg
mov
mov
xor
adc
jae
std
pop
add
pop
rorb
repz
enter
in
jno
jae
mov
movb
rcll
shl
pop
insl
mov
icebp
mov
push
or
shlb
mov
int
pop
outsb
lcall
adc
lock
or
movsb
mov
repz
das
mov
dec
lea
stos
xor
stc
and
loope
cli
ja
add
adc
xchg
add
dec
add
mov
add
out
xor
movsl
pop
xchg
mov
push
cmpb
insb
in
fsubl
jae
sbb
jns
lds
mov
cwtl
lock
xor
std
testl
loopne
mov
xchg
add
inc
cltd
add
push
cmpsl
cmp
mov
or
inc
nop
je
test
mov
lock
mov
mov
sub
xchg
xchg
lock
int3
cmpsl
in
mov
inc
dec
test
mov
xchg
hlt
or
or
stc
mov
js
cmp
int
pop
adc
stos
enter
fstpt
aam
ljmp
or
scas
xor
inc
repz
or
test
adc
cmp
add
inc
sbb
outsl
aas
cmp
orl
and
cltd
jno
push
insb
popa
xchg
or
push
out
imul
and
or
lods
fimuls
pop
cmp
inc
pop
hlt
in
pop
mov
cwtl
outsb
dec
movsb
je
outsb
and
enter
mov
sbb
add
shll
subb
sahf
addl
js
sbbl
mov
adc
das
fildl
inc
mov
int
lcall
mov
repz
adc
jno
int3
or
les
xor
cld
loope
adc
jo
lock
and
pop
xchg
popf
mov
iret
mov
or
xor
cmpsl
ficomps
lock
push
or
pop
cmpsl
or
and
jbe
aaa
mov
sahf
cmpsl
lret
dec
fnstcw
jae
xchg
ret
jecxz
imul
orb
test
jo
inc
jns
push
xchg
je
rcrb
movsl
bound
xchg
jnp
mov
mov
insb
daa
lret
add
dec
ss
add
popa
lahf
push
in
cs
lock
inc
out
lret
movsb
push
sub
cmpsl
addr16
into
lcall
mov
sbb
cmpb
mov
ss
adc
push
mov
push
pop
pop
addr16
movsb
and
test
cmp
cmp
sub
cmc
jns
mov
mov
cmpb
pusha
and
mov
cmp
pop
mov
lock
sti
cltd
jae
jb
out
stc
push
les
fwait
xor
mov
cli
sti
into
stc
addr16
pop
jns
mov
mov
pop
popf
dec
xchg
xchg
jmp
es
or
mov
insl
push
es
test
xor
add
lock
xchg
bound
movsl
aas
test
ficoms
adc
mov
mov
fs
xchg
mov
jg
mov
clc
dec
loopne
push
insl
daa
lods
mov
lods
nop
test
cmp
test
jb
push
xor
cltd
pushf
test
fcmovnb
fs
aad
pop
fisubs
add
inc
mov
lds
ds
jne
cltd
es
lret
add
mov
pop
sub
lahf
leave
sub
arpl
incl
sub
cwtl
mov
pop
or
mov
mov
ret
sahf
sarb
add
sti
lret
jecxz
cmpsb
call
or
jmp
cmp
lds
nop
sub
mov
push
sub
adc
sub
xor
sahf
mov
adc
mov
iret
jno
and
and
mov
mulw
inc
ds
js
mov
ja
mov
aam
pcmpgtd
cmp
cli
dec
xor
push
movsl
pop
in
out
dec
ficompl
fwait
cmpsl
push
lds
mov
popf
addr16
sbb
mov
inc
xchg
jge
jl
or
std
pop
adc
test
pop
loop
jl
add
jnp
addb
leave
push
les
mov
mov
iret
mov
mov
sub
and
xor
popa
pop
ret
cmp
inc
insb
adc
data16
in
popf
inc
pushf
je,pn
sahf
pop
jle
dec
out
xor
pop
and
in
and
pop
pop
sbb
xchg
std
cmp
nop
addb
lea
das
jo
orl
sti
repz
sub
sub
mov
cmp
add
lods
mov
cmpsb
xchg
sub
cltd
mov
in
add
fdivl
pop
jecxz
add
sub
sub
cld
hlt
sbb
jne
sbb
push
dec
stc
fmul
in
adcb
add
push
int3
pop
lods
daa
cmpsb
addr16
cmp
cmpsb
popf
dec
cmp
dec
mov
sub
xchg
sbb
call
jg
out
cmp
pop
ss
arpl
cs
push
sbb
cltd
bound
sub
pop
cmp
jb
leave
repz
movsb
cld
bound
ret
inc
xorb
es
call
jp
aad
enter
mov
mov
rolb
inc
or
imul
sbb
xchg
sub
pop
cmp
mov
adc
rcrl
inc
mov
loopne
icebp
cld
push
clc
inc
scas
mov
push
inc
push
cmp
adc
and
lea
jecxz
xchg
sbb
add
sbb
xchg
jle
mov
sub
cmc
rcl
in
out
in
test
xor
insb
xor
jle
lods
loope
jno
imul
dec
shlb
and
aas
ds
lcall
test
dec
enter
mov
mov
jecxz
aaa
xlat
rcr
and
or
jge
aas
xor
push
test
imul
or
rorb
cmc
test
in
sahf
xchg
mov
es
pop
clc
lds
xor
gs
pushf
push
iret
cli
inc
hlt
data16
lahf
sarl
pop
jmp
cmp
push
jle
lods
shlb
and
xor
into
jmp
adcb
pop
mov
xor
addb
stos
lock
sti
ret
into
push
jnp
push
std
sub
rclb
pop
adc
jl
cmpsl
loope
out
inc
das
xchg
into
outsl
jl
mov
lock
pop
out
fisubs
dec
or
sbb
aas
shlb
sahf
mov
and
mov
movsl
or
test
fs
jbe
and
mov
outsb
data16
leave
cmp
cltd
fadds
enter
jge
addr16
daa
sahf
ja
fldenv
gs
mov
cmp
into
push
iret
mov
dec
jecxz
and
mov
rcll
lea
xlat
mov
push
pop
je
outsb
sub
mov
icebp
sbb
cwtl
mov
aas
decb
test
xchg
cmpsl
repnz
inc
mov
pushf
in
dec
mov
inc
cmp
dec
pop
xchg
pop
mov
dec
sti
inc
dec
xchg
ret
adc
les
jns
or
outsb
pop
dec
mov
inc
mov
sarl
or
fistps
aad
or
sub
bound
pusha
dec
bound
mov
xlat
pop
inc
out
hlt
sbb
adc
popa
test
decb
jp
je
cmpsl
mov
fidivl
icebp
movntq
out
dec
pushf
lcall
das
mov
xchg
mov
inc
or
and
sahf
jno
jne
ret
outsl
jne
arpl
push
popf
mov
jp
pop
cmp
clc
inc
popf
in
test
lahf
mov
sub
or
jns
and
cmovle
inc
mov
add
mov
aaa
aam
int
adc
and
faddp
dec
cmpsb
sbb
cmpsb
sbb
push
cmc
std
insl
sub
pop
subl
pop
mov
jae
and
repz
lahf
mov
sub
mov
pop
rcr
insb
sub
mov
sub
jl
cmp
sbb
xchg
pop
jne
mov
and
loop
lods
cli
cmpsl
fcmovnu
shl
fwait
mov
std
mov
test
das
mov
outsl
jecxz
adc
fwait
pusha
sbb
cmpsb
inc
gs
out
mov
xadd
xchg
xchg
cmc
inc
repnz
loop
jmp
pop
mov
xchg
xor
call
les
sbb
push
jle
xor
cmp
orb
les
sbb
scas
mov
cwtl
stc
cmc
or
movsb
or
mov
or
in
pop
and
outsb
and
sbb
push
inc
andl
les
lret
or
push
ret
xchg
mov
jo
fwait
loope
and
cmp
inc
rclb
mov
dec
mov
sbb
mull
mov
ret
fwait
adc
push
fidivrl
lods
add
lds
cmpsb
pop
shrb
ljmp
jne
pop
std
mov
stos
dec
jae
movsl
outsb
inc
aam
stos
incl
mov
xchg
mov
pop
push
mov
cmp
mov
in
add
mov
mov
jecxz
shrl
xor
mov
mov
addr16
adcb
push
ret
leave
cmp
mov
jno
add
fstps
sahf
stos
sbb
rolb
in
gs
iret
hlt
addr16
repz
in
and
mov
mov
dec
sbb
dec
stc
sti
xchg
pop
aas
push
xchg
repz
lret
sbbl
add
mov
aad
dec
mov
mov
aad
rorb
push
aam
rcll
lahf
in
pop
or
and
dec
mov
test
test
jl
imul
es
inc
jns
push
cmp
xor
repnz
push
lods
jl
xchg
jns
mov
loope
ret
loope,pn
adc
dec
jl
rclb
xor
jae
popf
inc
ds
rorl
ret
movsb
and
sar
mov
sbb
cli
clc
int
inc
lods
adc
lock
adc
pop
jb
sub
xchg
xor
inc
mov
sti
cs
dec
sub
cmp
scas
mov
sbb
dec
out
hlt
cltd
xlat
mov
adc
out
lods
daa
add
pop
push
out
ja
aad
or
mov
inc
std
mov
enter
enter
sbb
mov
icebp
ja
and
bound
mov
imul
xlat
mov
mov
or
insb
or
push
out
push
test
jno
rcr
lahf
ljmp
out
dec
std
subl
pop
add
mov
pop
xor
jmp
xor
cmp
decl
pop
mov
jl
cmpsb
mov
lds
add
adc
sub
cs
jno
adc
dec
add
mov
mov
jo
lods
cwtl
addr16
scas
mov
hlt
xchg
fisubs
cmp
jmp
dec
pop
mov
in
cmpl
sbbb
es
imul
mov
mov
pop
cmp
shrb
mov
test
pop
pop
out
jmp
dec
push
mov
es
push
movsl
ds
into
loopne
push
into
cld
xlat
test
mov
mov
inc
or
testl
in
sbb
jmp
push
xor
or
and
or
sbb
push
jg
in
dec
mov
and
in
sti
xor
or
add
dec
cmp
mov
add
jmp
subb
movsb
out
xorl
push
add
mov
stos
inc
xor
inc
fucomi
jb
dec
pop
xchg
repz
ja
push
jbe
enter
fsubp
push
mov
mov
inc
mov
dec
pop
adc
outsb
dec
push
xchg
repnz
fldcw
cmp
lret
sub
mov
mov
mov
adc
ja
sub
xchg
mov
and
xchg
cmp
jecxz
push
mov
pop
pop
pushf
sub
dec
je
inc
inc
lock
lea
ret
xor
sub
enter
xchg
jbe
push
imul
push
add
push
dec
push
loope
aaa
cmc
mov
fwait
jno
dec
and
scas
les
int3
pop
inc
fdivr
rdtsc
and
sbb
arpl
mov
in
aad
movaps
lret
adc
loope
lea
add
addr16
and
call
test
sub
shll
in
pop
aaa
and
pop
dec
cs
enter
mov
jbe
fisttps
mov
loope
enter
test
jmp
testb
xor
dec
jbe
pushf
fwait
daa
or
rolb
jge
and
push
in
inc
ja
lret
in
inc
cmp
add
push
sub
lock
sar
jl
sub
scas
add
sbb
dec
cmp
mov
div
dec
sbb
sub
jmp
loop
ss
lcall
fisttpl
mov
sbb
movsb
xor
ret
stc
int
mov
test
aad
jmp
rcrb
imul
stos
dec
adc
adc
mov
or
xchg
mov
les
xchg
rorl
inc
bound
cmc
out
je
mov
sbb
repz
ret
adc
xchg
sbb
xor
or
inc
xor
insb
ret
call
arpl
mov
iret
jns
fnstenv
ds
push
sub
push
mov
mov
cmpsl
add
push
sub
popa
mov
sbb
and
pop
dec
push
adc
in
adc
stc
loope
mov
mov
cmpb
repnz
movlps
inc
cld
xor
xchg
xchg
lea
pop
arpl
test
cld
into
jmp
lahf
inc
nop
sub
lods
adc
out
addr16
mov
pop
mov
or
fmulp
or
mov
vandps
gs
int
int3
mov
mov
cmp
fsubs
xor
repz
mov
lods
sub
daa
imul
fbld
adc
push
dec
mov
andl
test
or
je
addb
sbb
cmpsl
mov
cmp
mov
sbb
push
cltd
mov
xchg
lods
leave
bound
movsl
mov
arpl
je
ds
mov
sub
aaa
fs
dec
push
pop
lods
pop
notl
pop
rcrb
xor
push
gs
xchg
mov
int
shl
cld
pop
aad
mov
xchg
push
jo
xchg
jg
push
ds
jecxz
jbe
mov
jns
sub
aaa
outsb
mov
push
mov
daa
push
mov
lock
xchg
roll
sbb
sub
xor
sbb
int
iret
repnz
out
sti
jp
lret
sub
add
mov
iret
mov
lods
inc
andb
jbe
out
inc
pop
jb
stos
adc
and
hlt
mov
aam
ja
inc
ds
sbb
and
push
push
sub
sbb
mov
xchg
rcrb
in
fwait
jmp
insl
pushl
repz
pop
jb
and
mov
addr16
sarl
mul
jmp
xlat
ljmp
data16
sub
daa
cs
inc
sti
jnp
sbb
and
adc
adc
test
pop
add
mov
pop
rclb
cs
adc
mov
int
leave
inc
xchg
testb
mov
in
push
sbb
mov
cld
jmp
xchg
jecxz
inc
add
daa
and
aas
lret
mov
add
xor
mov
fwait
mov
ljmp
mov
icebp
insl
popa
js
jp
js
iret
fdivl
shrb
rorb
ret
loop
sbb
inc
inc
outsl
mov
sbb
inc
add
xor
outsl
jae
xor
mov
into
sub
mov
mov
std
jg
xor
lock
ljmp
mov
cmpsb
int
jno
jae
jp
or
mov
sub
out
das
cltd
iret
mov
daa
adc
bound
pop
xchg
out
cwtl
xchg
test
int
mov
loopne
lock
sub
in
and
out
inc
and
xchg
adc
cmp
push
push
movsb
xor
push
push
aaa
fdivrl
roll
lcall
adc
int3
in
jb
outsl
cmc
inc
aad
aam
jmp
in
mov
in
enter
lock
xor
ss
dec
cmp
ljmp
cmp
into
adc
ja
popa
rolb
loope
jnp
and
mov
cmp
lret
ret
insb
push
out
aam
jae
push
ret
fists
jl
and
mov
movsl
xlat
cs
sub
test
pusha
fidivs
push
sbb
sub
in
in
jno
lods
test
and
out
mov
out
xor
mov
icebp
shlb
push
rolb
lods
je
xlat
adcl
sbb
js
pop
rep
loopne
inc
add
add
mov
repz
leave
fisttps
sti
mov
xor
cmp
sbb
sbb
and
rcrl
insb
mov
mov
push
dec
gs
xorb
pop
cmpsl
aaa
sbb
xor
lds
sub
fwait
dec
pop
lds
stos
imul
and
imul
and
dec
stos
sub
inc
daa
out
mov
add
push
xor
dec
sbb
mov
lahf
dec
rol
test
pop
cltd
jne
cmp
xor
add
test
inc
int
mov
or
insb
ss
mov
jp
sub
lea
fwait
inc
imul
cltd
or
xor
clc
dec
fcmovu
xor
and
jne
data16
ds
iret
aas
bnd
sarb
mov
outsl
pop
sti
sub
xchg
cwtl
scas
mul
pop
je
call
out
lcall
sahf
dec
mov
jbe
stc
mov
inc
xor
imul
jae
sbb
test
xlat
std
sbb
int3
and
xor
xchg
or
jg
cmp
les
aam
xor
pop
arpl
jo
nop
sub
cmp
nop
ret
push
sub
adc
cmp
cmp
fisttps
loope
push
in
and
pop
adcl
rcll
pop
xchg
mov
test
je
aaa
pop
aam
dec
stos
ret
pop
or
outsb
or
pop
cmp
aad
jno
insl
jns
out
push
data16
jmp
mov
fs
or
push
add
jge
and
scas
das
sahf
sbb
jae
mov
shlb
xor
xor
and
out
cmp
mov
pop
bound
nop
pusha
jns
mov
mov
jg
ret
adc
xchg
fbld
mov
stos
inc
mov
jmp
fiadds
jl
sub
imul
jg
jno
inc
faddl
mov
push
pop
rorb
popf
int3
loop
sbb
push
jae
cmp
mov
popf
stos
leave
adc
aam
jecxz
fdivl
aaa
mov
inc
or
jnp
pushf
movsl
test
xchg
outsl
cld
or
das
sbb
sbb
jne
scas
xlat
ds
mov
cmpsb
in
jmp
loope
jmp
test
mov
loope
pushf
dec
adc
jae
aad
mov
insl
inc
int
loop
and
adc
lock
into
in
dec
cld
pop
sub
lahf
sub
ja
add
int
packsswb
test
subb
rcll
push
aad
xchg
imul
push
lods
out
xchg
imul
cs
sub
lea
mov
pop
andl
repnz
xor
lea
in
jne
iret
loope
stc
lcall
sub
int3
subl
xor
mov
test
fstpl
xchg
push
call
push
cmp
leave
nop
jg
fimull
xor
hlt
insb
sub
inc
add
movsb
pop
mov
mov
mov
jg
lret
and
push
and
test
mov
xorb
test
icebp
sbb
xor
insb
ja
insl
add
add
cmp
dec
cld
aaa
outsb
dec
cli
aam
xor
mov
cli
test
pop
push
fiadds
jp
stc
bswap
mov
idivb
pop
insl
lcall
jg
imul
cmc
jle,pn
mov
pop
cmp
mov
mov
imull
inc
push
or
cmp
push
xor
int3
bound
jae
mov
or
xor
mov
and
pop
xorl
sbb
xchg
enter
dec
ljmp
stos
mov
cld
mov
shlb
lahf
cmp
pop
mov
or
call
pushf
cltd
mov
adc
push
push
or
sahf
fwait
xchg
adcl
adc
adc
mov
cli
and
jmp
addr16
inc
dec
cmp
les
int3
mov
ret
stos
rclb
bound
adc
stc
cli
fsubrl
js
dec
popf
lret
test
pop
fsubrl
fs
dec
push
stos
cmp
addb
xlat
in
cmpsl
and
je
clc
lret
loopne
xchg
xchg
ljmp
pusha
dec
cld
dec
mov
jl
cwtl
pusha
mov
iret
loope
les
jp
push
sbb
mov
cs
sbb
dec
add
sub
loopne
ss
add
push
hlt
pop
call
test
mov
fstps
xchg
mov
rcrb
ss
sbb
mov
insb
inc
xor
mov
jmp
ss
in
incb
pushf
lcall
mov
inc
stos
mov
std
ja
pop
adc
sub
pop
rorl
or
loope
mov
orb
inc
jmp
cltd
mov
push
loope
mov
cmp
mov
add
push
inc
mov
inc
nop
xor
jo
rep
add
in
xor
arpl
or
ja
scas
repz
xchg
aaa
mov
fsub
jge
pop
and
lods
sub
shrb
cmp
cld
pop
clc
stos
push
inc
dec
cmpsl
or
cmp
in
sar
pusha
stos
sbb
jo
push
jno
nop
or
orl
iret
outsb
mov
or
lret
adc
popa
mov
pop
in
dec
and
mov
push
mov
aas
mov
loope
xchg
sbb
lcall
sub
je
or
xor
cltd
sahf
push
in
subl
pop
insb
sub
cli
in
pop
pop
lock
jle
js
loop
lahf
mov
mov
data16
aam
daa
js
dec
pop
or
lret
in
mov
leave
imul
lock
fcompl
dec
push
mov
test
push
sub
insl
fdiv
adc
cltd
mov
aam
push
sbb
leave
xchg
ret
mov
subl
into
cmpsb
xchg
enter
aam
lods
and
sbb
sbb
pop
test
addl
pop
sarl
pop
lods
ret
push
sub
mov
movsl
mov
cld
hlt
jle
lret
std
jnp
push
jle
fidivrs
scas
arpl
enter
xchg
scas
xchg
daa
insb
xor
mov
cmp
and
push
xchg
inc
lock
and
or
pop
adc
mov
sarb
lcall
inc
int
jp
hlt
lods
cld
add
mov
dec
in
and
xor
push
adcb
or
dec
sub
clc
loop
lret
jno
test
dec
in
cwtl
rcrl
jne
push
fs
jb
mov
out
std
dec
xor
inc
adcb
xchg
rcr
in
shl
and
test
pop
andb
notb
fmull
fdivs
jb
jl
dec
mov
sahf
leave
dec
mov
std
insb
shll
or
mov
mov
sbb
inc
inc
sub
mov
pop
hlt
cwtl
cs
jae
loop
or
stc
dec
mov
sub
nop
mov
insb
imul
popf
pop
and
das
imul
out
ffree
cli
jmp
sahf
inc
cmp
in
scas
mov
jbe
mov
sub
xor
mov
dec
aam
test
jnp
inc
cltd
adc
daa
pop
and
rcll
push
out
aaa
jmp
push
xor
addr16
and
lds
pop
xor
xor
sbb
or
adc
pop
xadd
stos
test
adc
cmp
dec
sbb
jo
add
cmpsl
add
push
cltd
addr16
popf
sub
cmp
sub
adc
push
cmpsl
inc
adc
inc
dec
mov
gs
mov
in
decl
mov
jns
lock
in
mov
cs
xchg
in
fadds
inc
lret
push
or
mov
es
inc
inc
add
pop
fsts
push
outsl
add
pop
sbb
pop
adc
imulb
jg
xor
add
cld
out
cmpsb
mov
jnp
in
jg
out
xchg
jp
xchg
ret
ljmp
xlat
mov
das
mov
mov
or
sti
jns
iret
repz
fcomip
push
bound
mov
ss
and
sbb
sub
add
lret
jle
sub
xor
push
pop
lods
fdivs
je
cltd
sbb
out
sub
in
xchg
dec
pop
call
pop
cmpsb
or
pop
shl
arpl
mov
sti
lret
ja
add
jge
into
mov
fbld
test
cmp
pop
mov
pop
adc
aam
scas
or
jle
mov
mov
lods
in
js
test
mov
leave
mov
adc
pop
scas
fsubrs
xor
xor
push
jns
cmp
data16
pop
nop
loopne
inc
lds
call
push
in
int
and
pop
cld
inc
xor
xchg
dec
jb
mov
add
cmp
lea
sub
cmc
fsts
mov
xchg
negb
in
mov
insl
scas
cld
aaa
jp
div
clc
stos
js
sbb
sbb
jge
and
mov
or
sub
dec
faddl
out
inc
pop
mov
dec
push
decl
outsl
shrl
fisubrl
and
pop
aaa
xor
push
mov
push
loop
je
pushf
push
aam
mov
pop
cmp
ret
xor
xadd
xor
jne
clc
mov
aam
dec
and
pop
xlat
orl
lea
or
ret
mov
das
ss
add
mov
adc
ja
test
es
lahf
rcll
xchg
cmpsl
aaa
jge
rclb
cmp
imul
or
lcall
cmp
xor
push
adc
mov
sti
xchg
leave
mov
push
jl
pop
in
cwtl
insb
or
ret
dec
test
aad
or
xlat
xchg
xor
push
out
out
loop
mov
lahf
jae
or
jp
outsb
inc
pop
push
sbb
mov
out
into
mul
stos
or
add
popf
sarb
push
daa
jmp
stc
pushw
repnz
mov
jp
out
pop
out
jo
pop
cmp
xor
mov
dec
imul
cmpps
dec
push
divb
fadds
pushf
dec
lcall
ja
inc
add
dec
xchg
mov
or
cltd
loopne
ficoms
mov
sub
and
jge
sub
pop
sbb
insb
sar
adc
xchg
pop
rorl
xor
jnp
aam
shrb
subb
cltd
inc
dec
sbb
jecxz
push
cmp
dec
loope
jle
adcb
mov
mov
out
shlw
pop
inc
scas
leave
jmp
jbe
push
cmpsl
imul
xor
sbb
push
fdivrp
sbb
mov
decl
stos
jnp
pop
cmp
push
add
xchg
add
cmp
js
fnsave
fnstcw
and
popf
out
jbe
ljmp
adc
dec
mov
repz
in
in
imul
xchg
imul
dec
shlb
mov
pop
push
stc
mov
sbb
or
lds
ljmp
cltd
cmp
in
jb
sub
jmp
clc
add
lcallw
ja
out
xor
cmpsl
cmp
cmp
xor
cs
pop
jne
xchg
mov
mov
adc
arpl
ret
addr16
or
mov
dec
inc
stos
mov
andb
and
push
fcompl
mov
popf
enter
dec
adc
inc
push
test
mov
mov
xchg
into
or
add
dec
in
and
es
fxch
pusha
cmp
lahf
inc
ss
push
pushf
call
jmp
std
mov
adc
dec
xchg
xor
lret
mov
lret
lahf
data16
inc
repnz
in
cmp
pop
inc
fstps
lret
popf
repnz
icebp
add
lds
adc
cs
test
mov
movsl
cmp
jmp
mov
xor
mov
inc
sbb
push
fwait
decl
xchg
jno
ss
inc
pop
fistl
push
ss
enter
sub
pop
sbb
in
cmp
lret
xchg
pushf
aas
fstps
ds
mov
ret
scas
test
mov
jl
adc
nop
scas
xchg
or
jns
fcompl
bound
aad
mov
sbb
xlat
xor
mov
xchg
add
jg
xor
mov
push
roll
stc
sbb
call
outsb
cmp
push
sub
jl
in
jge
repnz
add
inc
into
inc
mov
cmp
hlt
leave
insb
xchg
loope
mov
jg
popf
xchg
inc
pop
repz
movsb
test
roll
or
xchg
jno
dec
xchg
negb
outsb
idiv
cld
push
cmp
jnp
push
pop
ja
jmp
xchg
add
push
scas
or
and
out
inc
xlat
cmp
sti
add
push
not
ja
pop
hlt
xor
xor
push
repz
das
stos
or
mov
mov
pop
int
cltd
push
push
sbb
add
push
mov
rcr
push
outsl
pop
insb
data16
adc
jne
mov
inc
insb
dec
push
ret
addl
dec
aad
aas
stos
stos
in
sub
repnz
or
ds
add
mov
push
sub
or
das
jb
dec
push
lods
inc
loop
xchg
sub
ljmp
dec
xor
mov
jge
mov
cmpsl
add
inc
cltd
inc
or
ss
dec
les
push
dec
pop
movsb
xor
mov
xchg
dec
lods
shl
push
loopne
sub
add
xor
int
mov
cmp
sub
stos
mov
je
nop
cmpsl
xor
add
inc
pop
test
rcrb
pop
xchg
adc
dec
rcll
aam
and
out
inc
rorb
sbb
scas
repz
jnp
xor
push
fs
mov
movsl
leave
or
sub
mov
dec
jge
mov
xchg
adc
mov
cld
add
jmp
mov
cli
repz
dec
aas
mov
add
push
pop
and
shlb
adc
push
jnp
es
scas
cmp
outsl
adc
adc
daa
jns
int3
fimull
subl
call
fdivs
icebp
mov
enter
pusha
loopne
fwait
mov
push
not
pushf
jae
out
pop
aaa
bound
mov
push
aaa
mov
test
push
xor
pop
cmp
pushl
and
push
jo
insb
inc
jbe
into
cmpsl
repnz
jl
mov
movl
lds
sub
jmp
xchg
jge
sub
sub
rcr
sbb
push
int
and
jne
jne
inc
xchg
cltd
xor
mov
insl
push
insb
xchg
adc
sub
in
pop
imul
mov
fs
adc
incl
jmp
pop
lahf
sub
jl
rcrb
cmpsl
and
fists
sub
add
sbb
clc
sbbb
push
cvtps2pd
fs
bound
sbb
xchg
lods
xor
jge
jo
mov
inc
jecxz
movsb
xor
push
push
and
mov
int
jno
lret
rorb
fdivrs
push
inc
xchg
add
data16
popa
push
loop
imul
jno
int
movl
push
in
jp
loope
mov
ret
push
sbb
or
mov
sarl
jg
sahf
repnz
cmp
out
sbb
aam
mov
or
je
mov
in
fs
xchg
mov
fists
dec
dec
pop
xor
cltd
sbb
inc
adc
mov
push
push
jle
and
mov
jnp
xor
imul
out
pop
xor
and
insb
and
cld
push
cs
mov
divl
and
sti
jmp
popf
jecxz
shll
xchg
jae
push
cmp
cltd
stos
push
pop
push
push
push
adc
dec
imul
jo
pop
loop
mov
jmp
ret
adc
jo
arpl
jae
push
lds
mov
xor
out
jo
daa
js,pt
cmpsl
testb
call
sub
mov
push
imul
outsl
lahf
pop
clc
stos
outsl
jne
push
xlat
pop
je
jmp
jb
je
inc
sub
je
mov
adc
push
mov
lods
pop
and
mov
arpl
mov
dec
mov
dec
dec
and
rcrb
cmp
das
add
imul
push
repz
cmp
and
sbb
sub
shrb
or
sub
xchg
cmp
test
pushw
insl
outsl
dec
push
or
and
adc
ss
mov
jl
mov
jg
ror
cmp
or
int3
mov
cld
pop
xchg
das
dec
jl
addr16
test
ret
pop
loop
arpl
xor
push
rcrb
nop
adc
sbb
hlt
adc
sahf
xchg
cmp
xchg
dec
push
adc
lods
sbb
fs
jb
stos
mov
loope
and
mov
imul
fimuls
mov
imul
fucom
cmp
es
inc
jo
inc
xchg
sti
xor
add
shll
cmpsb
xor
jbe
mov
sbb
in
inc
and
push
sub
popf
mov
ret
and
sbb
sbb
mov
movsl
test
cwtl
or
es
mov
xchg
call
popa
or
inc
push
cwtl
jnp
inc
je
pop
js,pt
nop
mov
aas
mov
mov
inc
pop
js
sarl
add
sbb
jo
dec
mov
fdivrl
and
sbb
adc
sbb
mov
js
scas
out
loop
jb
and
aad
cwtl
or
and
dec
es
add
cmp
out
pop
pop
insb
xor
addr16
enter
ret
jle
gs
pop
push
push
in
enter
mov
idivl
mov
push
insb
loopne
pop
stc
fidivrl
sbb
inc
jae
dec
push
addr16
fwait
std
push
gs
jae
sbb
les
pop
pop
shl
sub
xchg
jmp
fcompl
push
adc
jle
or
stc
mov
hlt
aaa
mov
jmp
cmp
pop
inc
jno
rcrb
loopne
addb
rcr
dec
inc
idivb
lock
push
hlt
mov
test
push
or
in
jge
dec
pop
and
mov
cwtl
or
jo
stc
loopne
aas
jno
pop
int3
outsb
inc
stos
mov
push
xor
ret
pop
inc
pop
nop
sub
or
hlt
push
jae
out
fists
jle
out
push
pop
push
add
imul
sbb
jl
mov
cmc
aaa
adc
mov
movsb
in
adc
ja
mov
pushf
fmuls
shrb
lea
mov
or
cmp
dec
sbb
jmp
mov
jne
gs
fwait
fwait
or
mov
pusha
pop
sub
scas
push
mov
push
xor
in
out
pop
in
addb
push
mov
add
cwtl
mov
push
outsb
stos
xor
mov
ds
xorb
xor
fwait
sti
jb
lods
or
leave
xor
aad
mov
add
or
pcmpeqw
pop
adc
push
dec
push
mov
jns
xlat
dec
mov
sbb
or
adc
into
xchg
mov
sub
sbb
sub
cld
call
mov
insl
jmp
sarb
leave
fisubrs
jecxz
jmp
out
mov
pop
aad
push
sub
repz
cwtl
push
test
pop
mov
mov
mov
mov
jl
xchg
fnstsw
push
mov
mov
push
jle
push
out
mov
xchg
and
stos
in
xchg
sub
push
lock
pushf
add
pusha
dec
push
shrb
out
dec
popf
imul
mov
push
lea
sub
addr16
setle
adc
mov
ret
into
inc
lret
mov
scas
fcoml
adcl
dec
scas
gs
cmp
mov
mov
jb
psrlw
inc
push
sub
lahf
pop
mov
jp
mov
into
adc
addr16
jmp
jmp
sub
ret
out
dec
into
xchg
xor
lcall
imul
shlb
mov
in
in
mov
repz
call
cmp
cmp
pop
testl
bts
xchg
cmp
enter
arpl
imul
out
xchg
fists
test
mov
shll
ljmp
mov
add
shr
lock
cmpl
lds
int3
ffree
push
ret
aas
pop
cltd
repnz
fwait
push
pop
jge
add
mov
fs
xchg
sbb
push
lods
into
rcrb
out
aam
popa
test
repnz
pop
push
xchg
repnz
je
aaa
jecxz
pop
imul
sti
int
jmp
inc
inc
pushf
add
fsubs
jg
jne
lcall
xchg
mov
icebp
push
aad
cmc
sub
push
in
xchg
mov
fstpl
les
sahf
loop
jge
test
and
jecxz
repz
subl
loope
test
test
mov
mov
xchg
dec
cld
stos
pop
jne
fs
jecxz
xorl
out
push
jmp
mov
loop
loop
je
mov
adcb
mov
sbb
shl
sub
sti
push
mov
and
inc
push
mov
push
pop
add
pop
loop
pop
subl
jecxz
sub
out
dec
pop
fs
jge
lret
cmp
dec
rol
add
add
loope
push
fisubrs
into
nop
jb
ret
rcll
int
dec
jl
xlat
push
and
ljmp
cmpb
dec
repnz
mov
dec
rolb
pushf
inc
into
lcall
insl
popf
xchg
gs
popa
push
mov
jp
cmpsl
addr16
cwtl
test
pop
iret
pop
fstps
lret
push
dec
push
fs
sbb
adc
stos
pop
popa
les
add
jle
in
ss
jb
mov
cltd
jg
add
jne
mov
pop
cld
scas
popa
mov
xor
inc
sbb
arpl
xlat
xchg
fs
or
in
imul
pop
hlt
xor
push
lea
call
sar
cmp
push
imul
dec
xchg
pop
pusha
mov
jns
adc
rclb
aam
dec
insl
outsl
or
stc
sahf
repz
mov
rorb
jmp
andb
test
dec
xor
ja
push
shrb
dec
or
aam
sbb
rolb
xchg
daa
enter
jno
mov
out
xchg
loope
ljmp
dec
mov
outsl
ljmp
sahf
cli
dec
dec
mov
divl
xchg
fidivl
rcll
sahf
mov
or
xchg
jns
scas
mov
push
mov
or
rcrb
xchg
xchg
lods
sbb
ds
mov
sbb
cmc
stos
sub
movsl
mov
inc
jbe
and
and
arpl
outsb
push
ret
mov
gs
aam
sub
dec
cwtl
inc
neg
mov
idivb
sub
or
dec
mov
add
pop
stc
pop
push
pop
push
sarl
pop
cmpsl
sub
mov
sbb
xchg
in
xor
imul
inc
imul
sbb
int
scas
sub
enter
cmpsb
inc
mov
fstps
data16
inc
jmp
push
cltd
iret
stos
out
ret
xchg
lret
mov
push
fs
mov
sti
jecxz
rorb
cmp
and
mov
aad
adc
jno
jno
inc
lock
push
xlat
mov
sbb
push
fnstsw
pop
or
data16
fdivrl
out
inc
jmp
cvttps2pi
decl
fst
js
add
scas
sub
adc
in
and
sub
out
out
in
out
push
or
es
xchg
imul
popf
dec
shrl
aam
fcmovne
dec
insl
mov
ljmp
in
mov
xchg
add
push
loopne
js
fcoml
call
pop
nop
pop
sbbl
adc
leave
ror
sub
pop
bsf
iret
mov
adc
jno
insb
mov
or
loop
mov
stc
addl
mov
das
and
ja
cwtl
push
and
scas
adc
scas
mov
js
mov
mov
pop
aad
aas
pop
or
int
push
lods
nop
jno
mov
jg
mov
into
mov
test
fldenv
mov
jno
xchg
fnsave
ja
jb
pop
xchg
lcall
pushf
xchg
mov
repz
ret
or
jg
adc
push
les
inc
dec
xchg
lret
jge
xor
inc
jg
mov
dec
imul
dec
xchg
mov
call
arpl
cmpsl
cmp
dec
xchg
insb
lods
in
sbb
imul
push
pop
movsb
mov
leave
xchg
mov
push
clc
xor
pop
addr16
mov
ds
insb
xchg
add
sub
push
pop
xor
add
popf
daa
pop
inc
fsubr
xchg
fmul
push
add
call
je
mov
jmp
pushf
leave
lret
push
stos
sbb
xor
jo
add
jb
loope
mov
jns
add
cmp
out
push
fldt
cmp
scas
fldl
cmp
stos
adc
int
dec
shll
sarb
dec
ret
pop
mov
push
push
jnp
dec
mov
test
add
jne
cwtl
xor
arpl
push
jl
xchg
jnp
pusha
cmpsl
sahf
fimull
sti
xchg
dec
lcall
clc
mov
mov
jmp
addb
push
in
cmp
call
imul
pushf
rolb
mov
out
in
or
pop
cwtl
mov
stos
push
inc
jecxz
clc
in
in
xchg
gs
fcompl
mov
xor
icebp
sub
xchg
cmp
push
mov
and
inc
push
fucomi
popa
sbb
imul
fwait
push
jns
sub
mov
loopne
je
nop
xchg
hlt
xchg
pop
imul
inc
pop
push
jno
mov
sub
dec
in
inc
in
rclb
icebp
frndint
cltd
push
mov
cmc
aad
js
add
dec
fsts
push
lret
or
jno
outsl
subb
dec
loopne
rol
xchg
in
inc
shll
push
pop
sbb
inc
inc
mov
imul
sub
xchg
jg
test
imul
xchg
les
shrl
xchg
scas
sub
std
and
or
jb
ds
js
mov
cmpsb
xchg
adc
out
ja
testb
iret
rcrl
add
xchg
loope
jg
mov
popf
notl
mov
and
sbb
jb
call
shrb
xchg
popf
jmp
mov
popf
sbb
mov
and
stos
adc
mov
out
sub
add
repnz
xchg
enter
dec
movsb
aam
cmpsl
and
xor
sub
in
sti
mov
fs
jg
push
jne,pt
dec
shll
sbb
leave
mov
and
xchg
pushf
or
fwait
cmpsl
bound
roll
jno
mov
idivb
adc
icebp
pop
mov
sub
mov
xor
dec
xor
inc
xor
adc
insl
sub
adc
jge
adc
sbb
sub
and
ret
imul
mov
outsb
lret
loope
xchg
movsb
xchg
outsb
or
clc
cwtl
loopne
cmp
jp
outsl
push
call
in
imul
lcall
out
fbld
cwtl
sub
pushf
lods
cli
push
cwtl
mov
lea
fs
inc
shll
pop
cli
repz
push
ret
ficomps
outsb
lds
adc
mov
mov
sub
rcr
mov
mov
ja
cwtl
les
inc
sbb
pusha
xchg
sbb
pop
adc
int
cmc
roll
xchg
idivl
pop
dec
xor
mov
lock
cwtl
insl
jl
push
xor
mov
es
mov
into
cmc
push
inc
out
jmp
jno
nop
insb
mov
mov
leave
inc
pop
sbb
inc
das
insl
cmp
fadd
cmp
jge
inc
imul
xchg
mov
insb
xor
fmul
pop
xor
or
stc
aaa
ror
ds
in
jge
fdivr
or
mov
outsl
xchg
and
test
xacquire
xchg
adc
mov
cmp
jmp
push
mov
insl
push
lods
je
and
aaa
add
pop
sahf
pop
sub
push
repz
jp
jg
cmp
aas
jl
xor
iret
or
outsl
sub
mov
in
pop
or
mov
ret
das
insl
adc
push
outsl
cmp
and
jmp
cli
test
jae
pushf
mov
pop
add
inc
pushl
push
ret
dec
movsb
adc
pop
jmp
xchg
jo
out
xor
insl
sub
mov
push
cli
cs
push
aas
imul
mov
lahf
and
adc
mov
and
add
repnz
mov
sub
lods
jne
mov
cltd
pop
test
fidivrl
incb
cmp
scas
inc
jmp
push
mov
push
mov
arpl
in
ds
rcrb
cwtl
fadds
fucomi
ret
mov
or
sbb
imul
mov
jle
add
pop
bnd
xlat
lret
adc
cmp
pop
rep
fdivrl
adc
or
nop
hlt
adc
outsb
les
mov
or
stc
lods
cli
mov
das
mov
xor
xor
cld
push
out
jge
orl
adc
push
hlt
data16
dec
jmp
out
mov
lret
fsubs
sub
mov
push
insb
pop
xchg
cmp
mov
inc
mov
cmp
andl
sub
mov
lret
add
and
pop
sub
jns
repz
xchg
aas
mov
xor
dec
mov
cmp
xchg
fwait
movsl
mov
lret
sar
inc
lcall
loope
push
mov
loop
adc
jg
add
xor
adc
in
and
push
je
inc
das
out
dec
xor
fimull
pushf
jp
cmp
inc
push
mov
arpl
dec
mov
xchg
push
inc
ss
in
aaa
mov
mov
mov
fsts
lret
push
nop
lret
push
pop
xchg
adc
xor
mov
pop
xlat
jb
add
xor
and
dec
call
or
jge
sub
adc
jns
jnp
incb
adc
ds
sti
and
or
inc
pop
out
outsl
in
inc
leave
test
xchg
je
aam
mov
movb
or
or
jge
xor
in
mov
or
jae
mov
cmp
jmp
imul
cld
dec
lock
insb
pop
fldcw
push
cld
or
mov
sbb
jl
jg
xor
sbb
lods
mov
shrl
ds
mov
cmpsl
icebp
es
and
adc
jbe
push
and
and
adc
icebp
cmp
cmpsl
test
xor
mov
outsb
fcoml
xchg
mov
sub
adc
or
jno
mov
int
stos
sub
and
add
mov
out
sbb
xor
sbbl
and
ret
stos
lea
lret
nop
hlt
and
xchg
push
popa
and
sub
xorb
data16
jnp
ret
les
pop
xor
mov
popa
das
leave
cmp
dec
sti
jmp
cmp
adc
cmp
inc
fimull
subl
sbb
pop
dec
iret
mov
leave
dec
jno
rcll
movsl
gs
mov
push
lahf
sub
insb
fsubl
je
mov
in
mov
mov
bnd
pusha
cmp
or
xor
pop
pop
push
js
mov
add
and
sub
shll
jo
jbe
aad
cmc
mov
pop
pop
cmc
sub
push
jne
cwtl
aaa
mov
or
lods
xchg
fldcw
aad
mov
mov
popa
fucomp
sub
mov
mov
fisubrl
cmpsb
loop
mov
dec
shl
orl
jae
fmuls
movsl
push
jb
lods
ljmp
in
jl
jne
fs
sahf
mov
cmp
pop
xchg
js
scas
cmp
push
pop
cmpl
stc
ljmp
jbe
adc
mov
push
jae
cmpsl
aas
inc
mov
in
lret
dec
xchg
ljmp
outsb
xchg
cmp
jge
arpl
pop
xchg
pop
mov
dec
and
xor
sahf
and
push
inc
imul
sbb
imul
xchg
sbb
mov
sbb
stos
gs
fdivrl
ds
or
jle
jns
sub
pop
xchg
je
jnp
mov
add
sub
push
jae
mov
mov
enter
loope
mov
scas
lds
or
jo
mov
xlat
mov
inc
lret
shrb
cmp
dec
daa
adc
pop
faddp
out
aas
dec
faddl
adc
bound
stos
fucom
mov
call
lahf
in
sahf
adc
cmp
pop
gs
notl
sbb
mov
jmp
js
js
pop
inc
xor
das
hlt
jle
lea
or
imul
jecxz
test
ret
jge
and
or
aas
fwait
dec
inc
mov
nop
xchg
lds
jecxz
aas
dec
and
sbb
dec
lea
xor
jecxz
and
adc
lret
xor
mov
xchg
in
pop
or
xor
iret
fwait
jae
into
loop
jge
fs
std
xchg
sub
jmp
push
pop
pop
mov
in
adc
dec
xor
lcall
push
adc
pop
pop
mov
push
fwait
or
jecxz
mov
mov
push
mov
inc
mov
xchg
test
insb
mov
xchg
or
sub
and
lcall
fdivrs
aas
sarb
into
sbb
popa
fs
xchg
inc
push
repz
push
arpl
movsl
ja
and
mov
vpsubw
xchg
dec
mov
push
dec
aas
out
jnp
inc
int3
popa
fs
ud1
jge
adc
mov
xlat
rolb
popf
loopne
in
in
sbb
fisubrs
dec
cmp
and
rolb
inc
sub
test
xor
dec
dec
wrmsr
push
adc
xchg
jmp
pop
cmpsl
xor
cmp
aas
imul
leave
adc
sbb
pop
or
cmp
shll
lahf
dec
and
ja
repnz
int
mov
mov
pop
out
push
add
inc
xor
cmp
mov
mov
add
nop
mov
mov
into
dec
roll
jg
insb
out
rorb
mov
pop
cmp
push
jge
xor
pop
or
testb
mov
data16
lcall
xor
sub
cmp
xor
sub
cmp
xchg
dec
aam
and
or
pop
dec
mov
mov
outsl
iret
mov
or
dec
rcr
in
mov
inc
jmp
mov
jo
mov
cmp
jl
adc
shrl
jae
push
mov
jmp
push
or
lods
cltd
imulb
pop
stc
mov
lods
mov
fwait
test
fisttpll
shlb
loope
test
test
test
cmp
jns
jmp
bound
mov
mov
cld
cmp
out
cmpb
jno
daa
inc
fisubl
xchg
popf
sub
inc
adc
sub
inc
jbe
mov
out
xlat
xchg
jae
pop
pop
loop
or
push
neg
divl
and
mov
lcall
popa
xchg
dec
ret
inc
outsb
push
insb
test
in
mov
push
sbb
jns
out
aad
outsb
cwtl
jb
and
and
push
stc
mov
pop
add
cli
shlb
enterw
and
hlt
sub
inc
sub
xchg
sub
mov
xor
inc
test
mov
fdivrs
std
ds
test
fidivrs
inc
lret
outsl
aam
lahf
lods
outsb
mov
jmp
jno
push
push
inc
mov
pop
js
insb
inc
sub
xor
aad
loope
int3
and
mov
sbb
cli
xchg
or
sub
xor
or
pop
push
adc
jl
and
cmp
and
pop
or
js
movsb
test
jno
in
outsb
jg
subb
dec
lret
mov
fyl2xp1
xchg
js
int
jnp
add
inc
test
sub
and
int3
sbb
mov
mov
popa
xchg
stos
int
sti
movsl
arpl
into
xlat
testb
adc
lds
xchg
push
call
dec
or
psubsb
pushf
mov
push
dec
sub
sbb
iret
call
in
lods
mov
addr16
sbb
sbb
pop
hlt
dec
dec
push
enter
repz
adc
add
adc
xlat
cs
ss
aaa
push
pop
mov
mov
pop
popf
gs
push
push
nop
ds
mov
les
fstpt
xor
std
or
pushf
gs
clc
test
stos
addr16
push
shrb
sub
rcll
sub
xor
lret
inc
imul
jge
pop
test
sub
pusha
dec
scas
daa
andl
xor
ficoms
cmpsl
repz
sub
pop
sub
decl
xchg
add
dec
mov
fiaddl
add
adc
fcoml
shll
call
nop
aam
ss
jl
bound
enter
push
add
mov
mov
outsb
push
inc
enter
xchg
std
imul
inc
les
add
fildl
sbb
jle
scas
cmp
cmp
shrb
push
imul
lods
outsb
pop
mov
inc
sub
mov
sahf
pop
push
test
or
mov
xor
inc
in
and
hlt
lods
jp
mov
out
adc
stc
xchg
aas
xlat
aam
sub
shl
adc
mov
xchg
add
add
ret
adc
mov
xor
xchg
aam
je
andb
and
and
or
lods
negl
fisubs
daa
fisttps
je
ror
lret
xchg
mov
cmp
xlat
int
mov
sbb
cmp
mov
inc
jb
inc
jb
xor
repz
lods
mov
inc
loope
mov
popf
pop
movsb
ret
int
popf
push
cli
mov
clc
outsl
je
and
scas
jle
mov
lea
loop
faddp
popa
popf
in
mov
adc
push
les
xchg
mov
lods
xchg
mov
mov
divb
repnz
inc
sub
xor
ss
int
aaa
rcrb
cwtl
or
inc
and
daa
fldcw
jmp
movsl
into
pop
xchg
shrb
mov
mov
lret
cmp
jp
mov
test
adc
xor
fs
adc
mov
imul
mov
lods
fdivs
cmp
mov
sbb
xchg
and
xor
push
sbb
mov
and
shr
pop
bound
shll
pop
out
inc
inc
jnp
imul
xlat
or
in
mov
cli
pop
mov
cmpl
or
les
pop
int
cli
dec
loop
out
sbb
in
adc
movl
xchg
hlt
lock
repnz
clc
sbb
clc
lcall
push
xlat
test
sub
in
add
cltd
jno
or
jmp
sbb
subb
sarb
rolb
cltd
pop
lahf
add
and
or
fisttps
mov
mov
add
or
loop
fisubrl
mov
sub
adc
jbe
mov
dec
addr16
jno
push
test
pushf
jmp
mov
cwtl
mov
adc
and
jo
jnp
lock
mov
mov
inc
test
and
inc
loop
sbb
jge
out
or
outsl
stc
aaa
push
fidivs
mov
lods
outsl
negb
or
rcrb
call
insb
repz
popa
shrb
int3
adcb
pop
shlb
lret
sub
dec
imul
es
jae
pop
inc
pop
inc
xlat
ja
xchg
dec
pushf
xchg
xor
sub
cmp
cld
iret
and
repnz
xchg
jo
shl
pop
mov
mov
fs
addr16
push
add
mov
mov
pop
lret
loopne
jge
out
int
xchg
add
adcl
adc
and
mov
loopne
pop
mov
pop
pop
stos
ret
pop
das
sbb
decb
mov
in
pushf
fcmovnb
pop
dec
inc
insl
das
out
pushf
pop
aad
mov
jno
lods
adc
dec
pop
mov
hlt
pusha
add
mov
cmp
add
stos
popa
sbb
js
lret
and
popa
inc
pop
add
scas
or
push
xlat
jge
mov
icebp
lahf
lret
sub
js
xchg
push
rorl
mov
inc
inc
sub
xlat
fwait
cwtl
pop
ss
jecxz
pop
cmp
mov
jo
push
xor
or
pop
dec
rcr
pusha
mov
pop
pop
or
adc
push
les
dec
pop
xchg
jp
xor
push
fsts
cmp
testb
nop
cmpl
add
xor
mov
out
xchg
icebp
stos
xchg
mov
out
push
cli
enter
or
cld
lret
std
loope,pn
adc
sub
out
scas
lret
cltd
popf
test
sahf
and
rorl
cmp
shll
dec
int3
inc
clc
stos
mov
leave
into
adcb
insl
jle
xor
fdivrp
sub
ljmp
stos
adc
pop
lea
mov
jnp
dec
cmpsl
mov
lret
testb
incb
test
shrb
adc
push
mov
ss
push
push
imulb
cmp
fucom
dec
pop
sahf
push
cmp
or
sarl
and
jo
mov
loop
jg
rclb
test
cld
int3
clc
lret
xchg
push
xor
bound
and
mov
xchg
pop
push
dec
jmp
inc
xor
pop
popf
add
pop
mov
add
sub
dec
jmp
outsl
sbb
out
sub
movsl
and
push
add
xchg
or
xchg
pop
sub
sbb
fildl
repz
gs
pop
daa
shl
ds
fwait
shll
sub
neg
jp
ret
mov
nop
xor
xchg
pop
clc
lret
push
or
lret
lahf
fidivrl
aam
sbb
fs
or
in
sub
frstor
xchg
sbb
pop
add
mov
push
fstps
and
icebp
clc
outsb
es
cltd
jge
cmpsb
insb
jns
ljmp
outsl
sbb
mov
jg
movsl
iret
or
xchg
pop
js
leave
push
jle
stos
push
lds
fcmovne
test
jl
out
mov
push
jne
mov
push
jb
movsb
fisttpll
adc
in
inc
sbb
xchg
mov
sbb
std
call
push
mov
xor
test
inc
sub
repz
mov
lock
push
adc
xchg
out
mov
jecxz
xchg
pop
ret
subb
xor
dec
lock
icebp
adc
sub
sbb
push
cs
pusha
imul
out
push
add
test
push
jge
add
gs
inc
insl
in
orb
mov
or
imul
jle
cwtl
jns
and
pop
mov
pushf
xchg
push
cmp
mov
incl
sbb
negl
mov
das
adcl
sub
leave
fwait
int
xor
or
or
mov
popf
orb
mov
clc
mov
sbb
cmpsb
aad
les
or
mov
jae
lahf
cmp
enter
test
push
or
jb
add
pop
dec
dec
mov
fidivl
ret
cmp
pushf
movsl
ds
cli
xor
rcrb
fxam
and
icebp
jne
mov
popa
pop
push
cmp
jge
mov
hlt
add
scas
xchg
dec
mov
icebp
sub
sbb
aad
sub
aam
cwtl
pop
ds
lcall
mov
inc
loop
jg
sbb
leave
into
outsl
jns
aas
test
mov
cld
jb
clc
cmp
inc
xchg
stc
xchg
out
ljmp
inc
shrl
jbe
mov
int3
sub
adc
call
xorl
cmp
push
sub
testb
in
xlat
movsb
push
pushf
jnp
jle
inc
stc
int
out
pop
hlt
pop
pop
imulb
mov
push
mov
sub
add
and
dec
fnsave
dec
fs
mov
fidivrl
mov
ret
bound
lods
push
xor
arpl
cmp
daa
mov
xor
push
cmp
js
das
pop
popa
inc
jmp
in
aam
imul
lock
insb
sarb
test
mov
stos
fldt
mov
jg
add
gs
out
stos
lret
mov
daa
popf
adc
jecxz
in
mov
and
sti
ret
jae
pushf
shlb
cwtl
xchg
insl
out
adcb
and
jb
jecxz
xor
push
imul
mov
or
mov
push
scas
and
ja
inc
cmpsl
gs
xlat
dec
sbb
add
sub
mov
adc
insb
imull
xchg
mov
ret
lret
inc
loope
addl
jp
fimull
pusha
sub
stc
cmp
mov
ficoml
mov
in
sub
mov
imul
arpl
ftst
push
dec
dec
loope
push
pusha
sub
stos
inc
sub
fnstcw
movsb
dec
out
inc
mov
out
movaps
stos
incb
je
cmp
and
add
aas
mov
pop
jp
mov
sub
lret
cmpsl
sub
inc
xlat
inc
loopne
adc
mov
dec
xchg
insb
cld
out
sub
mov
nop
inc
lret
cmp
or
mov
mov
xchg
scas
mov
mov
inc
into
dec
cmp
testb
fpatan
cmp
and
mov
xor
pusha
dec
mov
mov
xor
addr16
dec
les
scas
icebp
xchg
iretw
lret
cmc
int3
pop
shl
lods
int3
xlat
popa
mov
xor
ds
or
add
call
jns
xor
sub
lcall
sbb
in
sub
jnp
mov
sahf
dec
xor
mov
nop
cmp
jns
jno
fs
popa
in
mov
sbb
mov
mov
cmp
xor
jb
mov
xor
nop
cwtl
sbb
in
cmpsl
pop
jl,pt
adc
add
es
xchg
push
test
mov
or
dec
fidivs
outsb
push
shlb
loop
out
pop
int3
movsb
add
cmpsl
jl
fnstcw
xor
pop
add
imulb
popf
repz
test
pop
inc
add
mov
sbb
int3
mov
stos
pop
push
adc
mov
fwait
shl
int
cmp
into
repnz
adc
jbe
rorl
add
pop
aam
test
imul
mov
inc
inc
pop
or
shr
mov
xor
sub
imul
pop
jae
imul
in
aas
enter
jbe
push
popf
out
int
pop
cld
popl
pop
rorl
movsl
fs
pushf
subl
fists
stos
shl
or
and
cmpsb
pop
pushf
call
sbb
enter
add
stos
btr
cwtl
insl
mov
jmp
cmp
jmp
mov
fcomi
test
stos
jg
cmc
addr16
inc
jns
mov
sbb
mov
push
jmp
idivl
notb
negb
jae
push
in
pop
sbb
jmp
sbb
adc
mov
idivl
adc
in
add
nop
stos
mov
mov
loope
repnz
sahf
fistpll
adc
adc
mov
das
loope
push
stos
add
mov
stos
in
cwtl
dec
jmp
fimull
dec
xchg
loope
and
fadd
out
xor
jecxz
daa
subl
dec
sub
enter
add
xchg
in
sub
mov
cmpl
xchg
mov
int
mov
cmpsl
mov
cld
cltd
aad
out
je
xchg
je
push
roll
inc
or
cmc
sbb
xchg
dec
ds
push
pop
mov
or
cmp
sbb
outsl
lds
or
push
pop
push
xchg
sub
cmp
push
mov
push
xor
dec
pop
dec
fists
out
xor
mov
push
ds
inc
js
cmc
daa
jo
adc
aas
xchg
mov
mov
jl
sbb
pop
and
adc
push
insl
dec
cmp
cmpsb
loopne
mov
testl
cmp
cmpsb
mov
sub
subl
adc
inc
addr16
push
call
cmp
stos
out
xchg
sarb
push
or
fwait
dec
mov
ficomps
mov
orb
add
arpl
loop
sub
outsb
into
shlb
scas
xchg
sbbb
ja
inc
imul
mov
loop
mov
pop
ror
push
adc
repnz
nop
and
and
mov
cmc
outsb
cmp
adc
xor
push
cmp
dec
mov
pop
fnstsw
lcall
cmp
ficompl
in
shlb
mov
leave
sbb
sbb
cmpsb
jecxz
lret
cli
jb
inc
xchg
stos
leave
pop
mov
mov
jge
jne
xchg
gs
fisubrs
outsb
in
sbb
out
inc
inc
cmpsb
sub
lds
sbb
je
cltd
jo
adc
fs
fmuls
andb
stos
pop
pop
jp
adcl
cmp
pop
dec
into
movl
loopne
icebp
pop
repnz
jnp
pusha
jmp
test
push
jae
movsl
or
lods
mov
sahf
mov
imul
mov
cmp
xor
les
jle
mov
out
lahf
mov
pop
cmp
mov
les
orb
fwait
dec
dec
dec
test
scas
daa
mov
pop
in
fcmovb
and
sti
dec
insl
leave
push
in
aam
int3
divb
dec
xchg
sub
andl
cmp
iret
gs
lock
das
dec
cs
xchg
pushf
das
lods
out
mov
cmc
cwtl
xor
mov
loop
adc
stc
dec
inc
mov
push
lods
stc
jle
cmp
loop
pop
sub
std
push
cmc
and
sahf
inc
std
jbe
pop
cmpb
pop
or
push
xor
xchg
lret
aas
add
stos
inc
jo
shld
xchg
xor
cmp
cmp
dec
adc
rorl
jnp
adc
nop
pop
pop
adc
stos
mov
dec
add
mov
mov
test
mov
and
repnz
std
fisttpll
xchg
cmp
test
in
mov
fwait
icebp
sarl
dec
insb
popa
mov
leave
lret
out
lock
mov
mov
xchg
sub
scas
fistpl
int
std
pop
mov
call
stc
cwtl
aam
mov
pop
clc
in
fsubs
je
jle
pop
fbld
push
sbb
xor
int
scas
dec
mov
jl,pn
imul
subb
pop
xchg
xchg
cwtl
jmp
rol
mov
sbb
add
pop
clc
incl
int3
xchg
cmp
movsb
or
jle
and
sahf
push
and
jne
les
push
lcall
inc
mov
test
jno
pop
dec
and
fs
mov
cli
xchg
pop
test
popf
icebp
xchg
stc
inc
xlat
stc
push
aam
inc
out
aam
movsl
push
or
in
pushf
pushl
push
andb
adc
sbb
mov
and
fstpl
sub
lret
mov
add
mov
shll
adc
test
adc
cli
xor
add
sti
rcrb
mov
adc
lret
ja
and
icebp
and
and
shrl
dec
jle
aam
xchg
mov
add
rcrb
xchg
cmp
and
lds
sbb
sub
leave
data16
add
les
push
mov
out
orb
daa
aam
adc
sbb
mov
xchg
popf
sar
pop
test
ret
data16
mov
nop
repz
adc
gs
js
leave
add
mov
and
push
jge
arpl
out
xor
int3
mov
shrb
pop
cld
add
mov
cmp
jbe
jp
loop
insb
pop
neg
jno
stos
test
ficoml
cwtl
dec
xchg
lret
jnp
mov
lret
stos
mov
lock
mov
adc
cwtl
sbb
sub
in
mov
jae
xor
imul
or
sub
fwait
inc
icebp
das
nopl
push
mov
ret
ljmp
cwtl
call
lods
inc
inc
fwait
nop
repz
icebp
mov
out
push
aad
mov
or
inc
xchg
dec
dec
cli
out
ret
lock
push
lahf
stos
fnstenv
in
pop
jle
lods
push
cmp
inc
dec
cmp
pop
jp
xchg
pop
jnp
iret
lret
jns
xchg
fs
imul
mov
or
sub
dec
sub
pop
addr16
in
mov
inc
push
pushf
aam
inc
rolb
pop
adc
call
push
add
pusha
aam
pop
jmp
popa
sub
stos
into
jmp
inc
outsl
pusha
xchg
test
mov
loope
rclb
arpl
sub
xor
shll
sarb
out
push
scas
stos
jbe
popf
in
sub
inc
dec
inc
push
push
out
clts
xor
cwtl
pop
mov
les
lret
xlat
loop
clc
cmpsb
push
mov
jno
add
std
pop
ss
hlt
cmp
mov
out
cli
pop
jp
mov
jns
movsl
or
insl
cmp
add
xchg
pop
cmp
dec
add
inc
add
and
ret
and
jle
xlat
mov
mov
inc
ds
iret
nopl
hlt
sbb
daa
repnz
lahf
mov
addr16
mov
je
jmp
int3
jno
dec
imul
dec
push
cmp
jle
stos
pop
xchg
or
mov
pop
and
idiv
test
hlt
outsb
add
rolb
inc
popf
xchg
sti
inc
add
xchg
cmc
scas
and
add
lret
movsl
pop
dec
outsl
sub
cmp
orb
aas
loopne
rcl
add
das
adc
jo
pop
xorb
aaa
lods
cmp
xchg
xchg
jecxz
stc
loop
lcall
ds
das
mov
sbb
push
test
popf
cmp
les
stos
mov
gs
xlat
xor
xor
test
int3
sub
repnz
in
inc
push
lods
mov
cmp
push
popf
test
inc
bound
popf
f2xm1
adc
scas
cmp
mov
and
out
dec
mov
jg
add
add
aad
nop
mov
push
rorb
in
in
ja
adc
mov
mov
dec
test
mov
pop
sub
inc
dec
pslld
icebp
ret
and
mov
push
test
mov
mov
rcr
test
mov
mov
imul
push
mov
xadd
test
aas
adc
jg
andb
loope
lret
lcall
push
inc
insb
ret
rcll
fidivrs
mov
ljmp
loopne
in
je
dec
in
jp
mov
sbb
add
and
maxps
pop
adc
test
aaa
dec
call
push
cltd
outsb
adc
sub
lcall
push
mov
stos
cmp
mov
mov
std
xchg
test
ds
ja
ret
add
push
or
ficoml
lret
push
fldt
lahf
mov
push
mov
scas
xchg
xor
mov
pop
pusha
inc
loope
mov
pusha
testl
jae
inc
xor
lds
mov
mov
out
cld
scas
out
sti
xor
mov
orb
or
stos
jno
out
leave
andl
xor
sub
pop
dec
jns
sub
mov
adc
pop
scas
fmuls
mov
push
cmpsl
adc
adc
fmul
mov
jbe
and
out
cmp
mov
sbb
in
dec
mov
dec
adc
and
cmp
sub
stos
or
shrb
test
sub
sub
mov
cld
adc
fsubrp
mov
icebp
clc
push
cmpsb
push
fs
xor
mov
adc
popf
add
cmp
ficomps
das
test
inc
loop
xchg
dec
cmc
cmp
faddl
xchg
popf
mov
add
jnp
loop
pop
mov
push
dec
mov
push
cmp
cmp
leave
jbe
and
push
notb
cld
jle
xchg
and
out
repz
sub
pop
jns
sub
mov
mov
test
popf
and
dec
add
xor
fnstsw
fdivrs
cmp
pop
or
pusha
cmp
push
jo
push
mov
inc
ss
pop
in
and
insl
movsb
popf
cld
sub
aaa
negl
and
adc
mov
call
jns
je,pt
ds
and
mov
push
mov
jg
jmp
lahf
sbb
and
pop
lahf
iret
dec
or
in
sbbl
aas
movsl
add
mov
jno
clc
pusha
push
repnz
pop
or
push
cwtl
dec
sub
inc
dec
mov
and
mov
pop
lods
mov
call
mov
inc
adc
pop
jo
cmp
inc
dec
xorl
mov
fsubrl
out
lcall
in
outsl
xchg
sbb
or
dec
in
test
shlb
jl
stos
imul
push
fwait
frstor
xor
imul
das
cwtl
xlat
mov
loopne
repz
xchg
jb
push
test
out
mov
hlt
scas
pop
loop
cmc
sbb
js
mov
jecxz
out
mov
dec
repz
mull
mov
jno
repnz
jnp
cs
inc
pop
dec
outsb
test
xchg
xchg
scas
add
adc
xchg
in
cmp
push
stc
cmp
and
cmpsb
jne
shlb
cmp
cmp
or
pop
mov
xchg
lea
icebp
and
xchg
mov
add
cmpsl
add
xchg
dec
jns
xor
or
mov
mov
imul
loope
mov
mov
cmpsb
dec
push
add
in
mov
mov
addr16
sarl
pop
mov
daa
enter
jbe
sbb
push
mov
mov
jbe
scas
pop
xor
lret
push
xor
movsl
out
mov
add
mov
adc
xor
and
add
test
push
stc
push
or
lea
sub
imul
iret
and
pop
mov
lahf
shrb
andb
ds
aaa
in
adc
mov
sub
mov
or
subb
add
ljmp
push
sbb
mov
add
sub
lahf
xlat
lret
cmpsl
in
mov
es
fwait
fwait
pop
inc
out
das
pop
pop
or
dec
lds
xlat
stos
mov
loope
lret
xchg
inc
push
add
adc
test
nop
lcall
jne
lock
xlat
fbld
adc
adc
jecxz
cmpsl
inc
fmuls
and
es
mov
mov
jne
xchg
loopne
add
lret
push
hlt
push
cmp
xor
push
jno
push
pusha
sub
movsb
jge
sub
in
dec
mov
out
daa
clc
mov
adc
xchg
pop
inc
pop
or
or
pop
mov
out
aam
inc
in
jecxz
dec
mov
stos
fstpt
les
add
call
xor
lret
sub
inc
in
fs
fs
xchg
das
mov
test
sar
inc
sarl
lret
imul
fistl
sub
cmp
pop
dec
add
push
sub
mov
ret
mov
stc
sarl
fsubs
jle
xchg
and
or
loop
xor
in
jb
sub
lea
insb
pushf
lahf
test
lret
xchg
cmp
push
leave
rclb
cmpl
lods
int
inc
rclb
add
pushf
daa
fisttpl
xor
outsl
iret
jno
push
add
pop
into
insb
pop
es
inc
or
mov
and
aam
and
movsl
pop
and
pop
test
jl
xchg
shrb
scas
cmp
add
shr
adc
push
decl
out
imul
sbb
clc
int3
shll
sbb
pusha
out
cmpsl
adc
das
cmp
ss
repz
insb
aam
push
push
push
xchg
cmpb
xlat
and
sub
cmp
test
loopne
fwait
sbb
sbb
pop
outsb
lret
push
push
gs
pop
movsl
insb
hlt
or
pcmpeqw
jbe
aas
mov
cmpsl
out
push
mov
mov
cmpsb
or
jno
dec
push
test
mov
dec
scas
aad
mov
mov
prefetchw
out
inc
mov
mov
mov
cwtl
adc
add
mov
dec
push
pop
mov
sub
mov
xor
je
sbb
lock
dec
inc
jecxz
cltd
xlat
pop
and
xchg
mov
in
pop
xchg
mov
adc
repnz
out
push
xchg
insb
or
rorl
call
jecxz
test
cwtl
push
cmp
les
mov
pushf
repz
idivl
sbbb
lds
or
push
out
subb
andl
sbb
movsb
fs
nop
pop
mov
leave
test
or
shlb
pop
test
jno
jne
xchg
cmpsl
adc
js
mov
and
add
push
das
push
outsb
addr16
frstor
fbstp
cmpsb
aaa
mov
push
addr16
fld
imul
xor
push
jb
arpl
cld
pushfw
scas
popl
sbbl
sub
adc
adc
jb
popf
pop
stos
cmp
aad
cwtl
push
notl
insb
iret
jae
fistl
pop
push
ss
shrb
pop
mov
adc
adc
or
je
mov
ficompl
je
outsl
xchg
mov
mov
pop
in
sbb
shlb
adc
aaa
insl
xchg
scas
pop
pop
ja
mov
in
mov
stos
inc
aas
lcall
mov
pop
sbb
sbb
mov
lahf
idivl
in
pop
pop
add
aas
pushf
arpl
mov
mov
in
insb
cs
loop
mov
push
xor
adc
imul
jg
gs
es
divl
adc
add
cmpsb
pop
pop
jns
xor
mov
sbb
ss
xlat
std
movb
mov
jmp
jae
int3
xor
cs
cmp
xchg
gs
nop
into
bnd
test
div
into
or
sub
mov
ret
cmpsb
or
push
aad
inc
cs
loope
add
inc
xchg
aas
lret
jl
dec
lret
dec
sar
fidivl
out
lret
aad
enter
xchg
cmc
lods
mov
jmp
leave
call
mov
sub
scas
push
fiaddl
into
or
js
add
pushl
pop
gs
and
push
mov
repz
push
lea
les
xchg
mov
call
andl
lret
bound
add
in
inc
jle
dec
hlt
cmpsb
cwtl
xchg
inc
xchg
cld
clc
mov
cli
sub
or
mov
dec
repz
hlt
mov
movsl
shl
daa
mov
xor
shrl
or
fwait
jbe
mov
and
int
xor
sti
in
or
or
sbb
jne
or
fcoml
and
pop
cmp
sbb
jge
test
cmpsl
pop
jno
sbb
insl
and
stos
mov
push
jo
out
pusha
and
pop
rcrb
pop
cmp
dec
icebp
and
fmul
stos
int
shll
int
sub
movsl
aaa
sbb
sbb
lcall
pop
and
pop
add
inc
repnz
shlb
xchg
mov
xlat
fs
inc
jge
in
or
push
jae
cltd
arpl
jle
sbb
adc
data16
push
notl
sbb
popf
adc
cmpsb
or
subl
cmpsb
mov
bound
loopne
incb
xor
shr
fs
clc
cltd
or
and
movsw
inc
es
adc
int3
das
cmp
mov
pop
xor
mov
sub
xchg
aas
addb
pop
ljmp
movsl
mov
in
push
add
or
outsl
fldcw
sub
mov
in
addr16
ret
jge
popf
xlat
inc
test
and
cli
jmp
sbb
jl
xor
popf
jmp
sarb
pop
imul
nop
popa
xor
sbb
sbb
test
std
mov
clc
mov
or
jp
sbb
pop
sbb
add
xchg
sub
out
push
sbb
test
insl
dec
rclb
test
repz
enter
and
mov
and
inc
or
es
into
adc
dec
or
dec
pop
inc
nop
mov
into
cli
insb
mov
mov
lods
push
scas
push
test
shr
notl
push
mov
dec
icebp
push
inc
mov
sbb
sub
and
sarl
sbb
bnd
add
xchg
jl
dec
or
push
pushf
loope
daa
ja
sbb
std
dec
movsl
adc
lea
sub
lods
inc
lahf
lods
repnz
mov
bound
gs
enter
adc
mov
xor
mov
mov
mov
enter
pop
add
pushf
popa
stos
sub
pop
mov
js
rclb
sbb
jae
adc
pusha
lret
xor
pop
fdivs
call
mov
adc
mov
roll
and
repnz
shll
shlb
mov
incb
std
pop
inc
xor
out
sub
jg
call
pop
lds
mov
xor
sub
je
push
shlb
aad
xor
ret
and
aad
add
xchg
push
fs
aad
xchg
jbe
rcr
jo
adc
add
fcoms
ret
es
sbb
lods
mov
testl
cmpl
iret
cltd
out
pusha
push
pop
xor
mov
push
in
pusha
arpl
add
mov
jge
mov
cld
mov
push
jno
adc
push
jle
jp
mov
jmp
inc
dec
daa
andl
mov
push
scas
dec
std
shlb
jbe
mov
mov
mov
xchg
pop
jmp
xchg
push
sub
xor
hlt
add
jg
jle
roll
leave
std
shl
out
mov
sbb
stc
ds
pop
andb
dec
push
mov
sbb
mov
stc
xchg
sub
enter
loop
sub
scas
inc
push
cmp
movsb
hlt
daa
mov
pushf
mov
jecxz
xor
shll
clc
int
hlt
inc
mull
cltd
stos
inc
mov
ficoml
mov
aas
jns
and
mov
cmc
and
ret
idivb
inc
xchg
cld
lea
pop
push
sahf
adcl
scas
cld
or
popa
sbb
inc
fs
mov
popf
fwait
movl
cwtl
jmp
jnp
push
mov
mov
pop
adc
cmp
mov
adc
jne
imul
repz
mov
cmp
rcl
bound
cmc
xchg
not
aam
jno
lret
mov
xchg
les
and
sub
es
dec
sbb
or
gs
cld
mov
insl
fiadds
ret
or
sbb
jno
lret
dec
or
enter
in
cli
mov
gs
jae
jbe
fildll
call
xlat
int3
xchg
mul
orl
stc
inc
sub
stos
rol
xor
xor
out
icebp
cmp
insl
mov
mov
push
adc
xchg
test
xchg
ja
push
jb
cli
dec
push
sahf
scas
add
xor
das
mov
jns
mov
inc
push
or
jno
cli
mov
pop
mov
jbe
jle
inc
mov
jnp
pop
jle
subb
nop
sarl
mov
lods
mov
dec
pushf
inc
dec
pop
sbb
stos
ret
testl
dec
adc
pop
aam
sbb
mov
dec
dec
xor
push
jbe
mov
sarb
xchg
jle
or
inc
pop
adc
test
jl
shlb
mov
jl
or
addr16
stos
fsubrs
mov
sbb
push
pop
mov
fnstenv
cmp
mov
pop
jne
scas
mov
mov
daa
leave
loopne
push
cmp
movsb
lock
adc
pop
bound
fnstenv
and
push
pop
out
sti
shl
lret
idivb
popf
ss
jbe
frstor
xor
push
sbb
pop
mov
popl
or
cmc
pusha
std
xor
ljmp
dec
pop
icebp
adc
mov
out
and
inc
fstp
mov
xchg
out
cwtl
jg
fiadds
sti
and
cld
jnp
imul
je
jl
and
sbb
sti
inc
jp
push
pop
xchg
push
sub
jg
mov
jmp
popa
nop
stos
in
dec
mov
jg
out
sub
fdivrs
cmp
test
mov
rcll
imul
inc
inc
cmp
mulb
insb
pop
xchg
jne
xlat
add
push
and
xchg
sub
mov
into
leave
loopne
stos
inc
fstpl
jmp
popf
dec
xor
inc
les
jmp
jecxz
jne
fldl2t
gs
mov
xor
xor
mov
aas
and
jl
fnstsw
sahf
push
aad
pop
cmpb
cmp
add
cmp
mov
repnz
test
and
stos
jle
fcompl
icebp
add
movsl
lock
xchg
jbe
fnstsw
hlt
pop
je
cmp
into
and
adc
gs
fadd
xor
pop
mov
jmp
int3
inc
xchg
mov
mov
push
fisttps
fcmovb
addr16
and
enter
add
push
mov
xchg
dec
or
adc
test
int3
mov
stos
jmp
shr
movsb
mov
push
mov
dec
das
xchg
or
nop
xchg
les
cmp
or
aad
adc
stc
mov
fisttpll
lods
aaa
lock
imul
das
push
lods
xchg
imul
ret
es
jnp
adc
inc
arpl
mov
test
fdivs
or
fsubrp
push
pusha
mov
jno
pusha
cld
push
paddd
xchg
loop
pop
enterw
mov
mov
adc
pop
incb
cmp
js
scas
movmskps
divb
and
add
cmp
ss
mov
daa
aaa
out
cmc
add
xchg
fs
sahf
jo
and
into
xchg
inc
cmp
jbe
pop
mov
mov
in
xchg
xchg
xchg
mov
mov
pop
enter
daa
clc
sahf
mov
add
push
cmc
sbb
sarl
outsl
cmp
adc
cmp
int3
aam
roll
scas
pop
or
dec
aas
xchg
lret
sbb
cmc
cmp
pop
in
cmp
out
gs
xlat
lcall
xchg
mov
sub
icebp
fistpl
sub
or
out
jmp
mov
jns
aaa
inc
ss
or
or
lcall
dec
test
push
aad
outsb
cmpsb
scas
stos
fs
lock
jmp
stos
shrb
sbb
sub
in
iret
xchg
sub
lea
rclb
sub
addr16
or
dec
and
xchg
jecxz
sarl
dec
jmp
in
sbb
inc
leave
push
mov
sbb
pop
imul
sti
push
leave
inc
bnd
fs
js
push
mov
mov
xchg
cmp
arpl
adc
jge
xlat
inc
in
fstpt
jl
mov
test
cmpps
sbb
aas
ljmp
movsb
ja
stos
js
pop
jecxz
jns
dec
in
movsl
sub
std
xchg
or
mov
jne
sbb
negb
cwtl
jno
xchg
js
pop
fld
out
xchg
mov
imul
test
add
add
mov
dec
cmp
inc
shll
pop
shl
mov
sub
sub
jne
dec
fidivl
jo
test
pop
nop
mov
sbb
nop
cmp
mov
push
pop
jmp
cli
scas
shrb
cmpsl
add
pinsrw
lods
and
adc
into
jecxz
or
or
sub
in
sbb
sti
les
cmpb
mov
lcall
or
bound
loop
mov
sbb
incb
ja
inc
dec
repz
fstl
out
sub
mov
ljmp
jae
adc
mov
inc
pop
out
add
testl
call
pushf
or
lret
ret
inc
ljmp
movb
mov
fstps
mov
push
loope
dec
leave
loop
leave
in
push
mov
ds
cmp
inc
fmuls
divl
enter
shll
sbb
adc
loope
loop
subb
test
push
cli
pop
lods
mov
imul
cmp
cmp
fbstp
dec
pop
stos
adc
or
es
inc
xchg
out
pusha
and
and
dec
test
inc
xchg
arpl
jmp
out
push
mov
sub
sbb
les
jb
js
xchg
js
sbb
adc
in
sub
xor
lock
xchg
xor
fwait
inc
int3
loop
sbb
push
lea
in
mov
int
adc
faddl
jbe
jp
arpl
add
lods
stc
fisttpll
nop
cmp
or
xor
xor
lcall
aad
adc
in
in
hlt
push
stos
leave
ret
test
arpl
in
aam
pop
aaa
sbb
add
pop
call
mov
fsts
add
bound
sub
out
xchg
ss
fs
and
xchg
arpl
and
or
lds
test
ss
jnp
xor
mov
es
int3
and
dec
je
xchg
fistpll
popa
mov
mov
pop
hlt
push
jnp
xchg
push
pop
test
loopne
mov
data16
cli
lds
push
xchg
jb
jge
jbe
xor
inc
mov
jae
add
fnsave
cmpsb
pop
pop
movsl
pop
cld
ds
mov
pop
mov
jecxz
inc
shll
movsb
push
mov
loop
repz
jne
addb
xor
mov
mov
imul
xchg
cmp
xor
les
ret
adc
xor
dec
and
int3
mov
xchg
adc
fimull
push
adc
mov
fcoms
mov
in
leave
cmpsb
rol
lock
repnz
call
jo
adc
and
jb
xor
fnclex
mov
jno
or
scas
fiadds
cmp
xor
jmp
pop
push
mov
je
xor
test
push
aam
xor
or
sub
icebp
mov
dec
mov
outsb
or
jge
xor
notl
adc
sbb
jnp
adc
pop
je
rolb
and
or
xlat
jne
rcrl
push
add
pop
fistps
bound
rorb
and
add
or
adc
mov
adc
inc
xor
aad
mov
xchg
lods
add
adc
jbe
inc
push
shr
pop
ss
lahf
push
dec
sbb
or
scas
int
scas
jb
lahf
mov
fistps
inc
pop
enter
addl
das
in
or
dec
imul
aad
cld
out
shlb
add
push
xchg
dec
pop
jns
adc
xor
push
maskmovq
mull
stc
pusha
xor
pusha
mov
ss
mov
push
sub
sbb
pop
jne
jbe
sub
pminsw
lds
inc
into
lcall
nop
imul
int
mov
xor
mov
cld
or
xchg
adcb
addr16
cmp
rcr
push
xlat
cld
mov
sub
nop
movb
sti
pop
out
sub
mov
les
repnz
cwtl
sub
cli
mov
movsl
test
jne
das
loope
or
shr
mov
xchg
aad
icebp
dec
and
inc
inc
popa
mov
adc
fidivrl
push
in
mov
xor
or
push
fmull
nop
lock
sbb
xor
jne
adc
and
or
xlat
adc
adc
out
pop
sbb
push
xchg
jmp
cmpsl
mov
mov
inc
divb
pusha
out
stos
add
scas
adc
mov
cld
cmp
loop
mov
add
add
jmp
add
arpl
loopne
rorb
mov
and
inc
mov
dec
mov
dec
xchg
push
jbe
push
sub
push
daa
int3
jmp
push
lea
and
inc
aam
sub
scas
mov
push
xchg
nop
dec
std
pushf
xor
fcmovnb
into
int3
mov
or
cld
lds
into
xor
xchg
push
cmp
cmp
movsl
lahf
imulb
pop
rolb
sbb
arpl
popf
cmp
sar
and
add
mov
jno
orl
xchg
sbb
lods
sub
shll
dec
xchg
lcall
push
sub
insl
xor
push
repz
mov
pop
insb
mov
push
aad
or
sahf
fimuls
jnp
sub
pop
or
sahf
sbb
fsub
inc
leave
adc
loopne
inc
fsubr
or
mov
mov
sub
pop
cmpsl
jb
cltd
sbb
and
jb
push
mov
lahf
ret
imul
push
pushf
push
stos
cld
gs
xor
lret
sahf
imulb
pop
cmp
int
push
aam
mov
dec
das
mov
add
or
shlb
dec
mov
test
in
jb
das
jns
jo
or
push
jg
mov
or
inc
sub
mov
cld
mov
inc
add
repnz
jmp
xchg
sub
or
pop
xchg
or
mov
icebp
enter
int3
jae
mov
mov
andl
cmpsb
lods
sub
pop
test
jmp
xor
fiadds
cmp
lock
test
cs
pop
push
scas
je
adc
adc
jecxz
jle
pop
inc
pop
inc
push
popa
cli
sarl
int
add
aam
hlt
mov
addr16
out
nop
aas
fisubl
and
xor
cli
jns
mov
pusha
fwait
je
mov
and
mov
cmc
sahf
jmp
insb
leave
cmp
mov
dec
rcrb
jge
jns
out
cmp
cmp
jle
pop
sahf
shlb
enter
aas
dec
pop
addb
sbb
xchg
test
sbb
imul
insb
pop
movlps
icebp
pop
xchg
movsb
mov
out
cltd
shll
mov
setnp
push
dec
adc
leave
ds
js
jle
jnp
mov
iret
das
loopne
mov
iret
push
xchg
jae
inc
or
jnp,pt
dec
movsl
leave
cmp
jne
cmp
pop
ret
cwtl
in
in
dec
sub
lock
xlat
pushf
mov
mov
aaa
fnstenv
out
mov
shll
dec
pushf
mov
xchg
pop
adc
xlat
movhps
adc
in
and
psraw
adc
xchg
lret
mov
inc
jge
sub
add
mov
cmp
sbb
fildl
sub
mov
mov
not
cld
hlt
inc
push
sahf
arpl
ljmp
stos
dec
inc
fiadds
mov
int3
pop
pop
add
loope
mov
dec
xchg
xor
adc
lock
out
shrl
ss
mov
mov
mov
in
shrl
in
push
fs
jne
cmp
jbe
and
pusha
cwtl
mov
cmp
jg
rcll
jg
inc
push
cli
test
push
std
neg
mov
dec
xor
dec
mov
push
xchg
add
ror
bound
inc
pop
add
or
sbb
sbb
mov
add
or
push
cmp
fidivs
jecxz
mov
inc
pop
sub
xchg
adc
or
dec
ss
xchg
jb
leave
ret
mov
stc
nop
fisttps
xchg
or
lods
das
push
rolb
add
addr16
push
sub
fwait
inc
pop
sbb
cmp
fisttpl
int
ljmp
aas
ret
cltd
jg
mov
cld
pop
xchg
xor
call
sbb
and
or
jge
cmp
mov
enter
out
xrelease
into
cwtl
sbb
push
ss
push
sbb
pop
dec
fldenv
cld
mov
out
ret
and
lahf
stos
sub
mov
faddl
pop
test
push
data16
mov
pop
ljmp
push
insl
push
or
push
ret
ficomps
out
add
mov
orb
data16
out
dec
cmpsb
insb
sub
xor
idivb
cwtl
jns
mov
sub
popa
icebp
repz
xor
test
pop
in
or
das
enter
dec
mov
lret
into
sbb
test
mov
rcrb
ljmp
xor
pop
cltd
es
sub
xor
adc
pop
outsb
sub
inc
dec
movsb
sub
loopne
mov
out
repnz
sub
push
mov
mov
js
pop
cmp
adc
adc
pusha
bnd
xchg
loope
dec
mov
loope
cs
push
das
sub
movsl
bnd
dec
inc
ret
mov
push
jecxz
xor
pushf
xor
adc
inc
aas
cmc
imul
pop
and
pop
test
pusha
scas
imul
dec
mov
xor
jns
ret
js
dec
les
sbb
cld
jo
pop
dec
xchg
inc
and
mov
adc
push
movsl
xchg
add
in
clc
jl
pop
fsubrl
push
inc
xlat
popa
fmuls
loopne
shll
mov
fsqrt
popf
push
out
fstpl
xor
jnp
xchg
fcomps
pop
inc
sub
imul
xchg
mov
idivb
dec
xchg
jb
or
xor
ljmp
ljmp
ss
sbb
pusha
enter
pop
shlb
adc
push
scas
push
jle
adc
inc
sbb
nop
jae
scas
xchg
xchg
push
cltd
mov
inc
jb
mov
mov
je
adc
cmpsl
sub
mov
fwait
sti
in
in
inc
leave
sti
imul
scas
mov
js
pop
scas
cmpsb
or
mov
fbstp
lea
add
mov
mov
mov
das
sub
cwtl
push
pop
jns
mov
add
or
mov
cli
jmp
jbe
in
jmp
fisttps
push
iret
pusha
xchg
sub
les
cltd
nop
sbb
jae
dec
or
outsl
push
xchg
roll
stos
jmp
dec
push
in
dec
cmp
mov
inc
inc
call
loopne
dec
mov
mov
pop
pop
ja
test
ficoms
inc
je
inc
xchg
hlt
inc
fsubl
inc
jle
lret
add
rol
pop
arpl
push
call
pop
xchg
test
adc
jae
jl
decl
std
movsl
push
into
imul
shlb
out
incl
sub
bound
sar
fcoms
and
ret
ds
out
jnp
out
jno
cwtl
stos
test
or
sub
mov
cmc
lods
sbbl
lret
dec
popa
fiaddl
mov
mov
mov
ret
push
jae
cltd
xchg
mov
iret
sahf
cmp
ljmp
adc
fninit
loopne
imul
mov
mov
cmpsb
push
cmp
add
lahf
jb
push
aaa
imul
int
dec
insl
sub
push
jo
inc
push
fmuls
arpl
filds
xor
inc
rol
lret
xchg
mov
fwait
in
xor
or
push
outsl
cltd
cmp
jg
dec
mov
std
repz
ret
lea
lret
mov
lods
call
shrl
mov
ds
ljmp
add
inc
push
sub
xor
lahf
or
xorb
ljmp
pop
std
std
loopne
xchg
lret
out
hlt
push
lcall
mov
lcall
hlt
jo
lea
jecxz
jne
mov
inc
call
xor
arpl
fcmovnu
mov
movsb
xchg
jne
pop
sub
shr
and
push
xchg
pop
lret
sarl
ja
lret
push
mov
cmp
pop
and
sahf
test
push
ja
xor
and
cmp
in
xchg
popa
fwait
cmp
jbe
push
int3
addr16
xor
adc
inc
enter
int
jne
ret
movsb
pop
addr16
dec
or
mov
push
sub
js
cmp
fnstenv
add
mov
dec
xchg
imul
and
inc
movsb
call
int
add
mov
xlat
aam
xchg
inc
push
pop
ja
daa
nop
es
pop
fcomp
mov
adc
out
mov
loop
sub
lret
mov
mov
fbstp
arpl
pushf
and
shlb
jl
ja
std
mov
mov
mov
mov
cs
push
jp
jae
inc
and
mov
in
dec
push
std
sbb
addl
push
dec
xchg
clc
lret
jae
jg
jl
jmp
jmp
loopne
inc
mov
mov
adc
sbb
dec
dec
push
adc
jnp
push
inc
xchg
adc
test
adc
dec
mov
add
cs
xchg
or
pop
cmp
inc
jg
xorl
inc
in
push
out
cmp
aaa
rol
or
inc
popa
js
ret
cmp
push
push
jae
outsb
insl
gs
stc
mov
push
cld
inc
das
xchg
push
sub
scas
adc
jp
pop
sub
dec
fdivrs
or
sub
dec
mov
lea
pop
xor
mov
cld
jg
loop
xchg
je
sbb
mov
mov
cmp
int3
pop
or
and
pop
inc
je
cs
aam
mov
ret
mull
outsb
mov
cs
shlb
pop
cmp
ret
cwtl
sti
cmpsl
push
iret
sub
sbb
dec
pop
bound
jnp
ret
fdivr
dec
dec
jns
shrl
lret
ja
adc
push
movsb
fcmovnb
in
dec
cld
xchg
push
movsl
lret
lods
lret
xchg
loopne
ljmp
mov
lcall
lcall
jmp
fistl
mov
insl
cltd
xor
jecxz
idiv
out
mov
mov
sahf
fimull
js
pusha
lret
scas
shll
in
testb
pop
daa
push
dec
lods
xor
int3
push
mov
cmp
xor
add
adc
push
push
aad
shll
jbe
dec
mov
cli
fadd
pop
frstor
mov
sbb
lea
or
add
js
mov
subl
push
mov
jmp
lret
shlb
dec
sub
mov
xor
xchg
mov
jmp
push
push
sub
loope
and
inc
test
push
test
jae
test
mov
addr16
aam
jl
mov
mov
pop
fldl
fsubrp
mov
nop
sahf
inc
mov
popf
scas
gs
imul
and
data16
sub
sbb
sub
add
sahf
sub
jne
out
pop
test
jmp
dec
out
cs
jb
clc
les
push
lods
aam
arpl
mov
pop
enter
in
push
dec
scas
cmc
xchg
lods
dec
push
ds
mov
jns
mov
push
mov
cwtl
or
and
mov
pop
and
dec
mov
fs
jns
push
mov
mov
faddp
xchg
test
jle
adc
fucompp
aad
push
aad
ja
xchg
popf
cmp
jmp
jg
cmp
aas
movl
adc
add
int
mov
adc
movsb
sbb
push
rcr
lods
mov
stos
jns
leave
adc
mov
aam
andb
imul
jnp
mov
adc
xchg
test
xlat
ss
jb
or
and
test
dec
test
sub
adc
addr16
pop
push
inc
addr16
lds
imul
jmp
fsubl
mov
push
scas
dec
mov
pop
add
or
mov
aaa
das
ret
das
mov
xlat
sub
enter
mov
jo
test
insl
mov
mov
in
insl
popa
push
outsl
mov
xor
fs
lahf
inc
push
jp
add
mov
lcall
mov
les
sbb
pop
mov
mov
pop
mov
pop
repz
push
in
cld
ret
popf
aas
movsl
gs
imul
jbe
or
mov
aad
jbe
ficomps
int3
sub
cmp
inc
push
js
imul
push
inc
bound
test
push
xchg
loopne
int
aad
push
pop
jns
iret
mov
leave
adc
xor
xchg
leave
cs
sbb
mov
scas
mov
xchg
cmp
ja
outsb
and
loop
sub
jne
mov
or
loop
mov
aaa
negl
lcall
int
mov
test
or
inc
inc
cmp
ja
dec
sub
jecxz
dec
call
pop
dec
scas
cmp
std
outsl
jnp
mov
jp
hlt
ds
clc
cwtl
inc
push
subb
xor
aad
dec
sahf
shll
pushf
in
es
xchg
rolb
call
or
pinsrw
pop
movsb
mov
gs
aad
int
test
xchg
int3
dec
mov
xor
xorl
add
int3
imul
daa
xor
pop
mov
mov
clc
fistpl
jae
inc
pop
sub
inc
add
mov
xchg
cmp
sub
mov
and
fsubs
iret
and
mov
pop
das
scas
lea
pushf
les
pop
sar
pop
lods
fdecstp
pusha
outsb
mov
ret
int3
out
fsubrs
sub
mov
cmp
imul
push
push
adc
xor
loopne
cmpsl
pop
mov
dec
out
push
lcall
movsb
mov
adc
sub
jecxz
cmp
mov
cmp
add
add
sub
call
fbld
mov
dec
in
mov
xchg
mov
push
daa
mov
das
int
mov
push
cmp
or
rcll
xchg
cli
sarl
inc
fwait
push
lea
into
xchg
enter
cmpsb
lahf
or
sbb
hlt
cli
sub
mov
in
shlb
scas
int3
push
mov
pusha
cmp
mov
mov
gs
mov
push
jp
gs
sub
pop
dec
dec
push
scas
add
gs
push
fldt
into
xchg
outsb
rcl
mov
cmp
and
mov
lret
and
inc
and
int
jne
pushf
out
add
mov
aam
sbbl
push
pop
push
inc
sub
jp
mov
mov
sarb
cmpsl
outsl
fnstsw
iret
push
add
je
cmpsb
inc
and
mov
jle
inc
addr16
setbe
inc
sahf
mov
stos
sub
cmp
cli
add
adc
nop
xchg
mov
rcr
lcall
inc
aas
mov
inc
pop
add
xor
sahf
mov
les
icebp
imul
xorb
add
xor
in
pop
jns
cmp
pop
movsb
cld
adcb
mov
movsb
cmpsb
cmp
or
xor
inc
and
xor
jo
sbb
sahf
push
rcll
adc
push
add
mov
xorl
pop
sahf
dec
pop
enter
adc
pop
stc
xchg
rclb
fbstp
pop
lret
dec
mov
in
in
imul
mov
mov
out
mov
nop
adc
push
xor
cmp
dec
push
cmp
adc
movl
push
daa
cmp
push
mov
push
aaa
test
gs
mov
popa
cmp
out
mov
mov
test
icebp
jne
or
stc
addb
int
pop
imul
std
lods
dec
jbe
or
pop
imul
cmp
sub
hlt
push
mov
call
lock
rcl
fwait
decl
mov
fnstenv
clc
stc
jle
bound
mov
loope
mov
push
movswl
pop
lret
mov
xor
mov
fisubs
pop
addr16
cld
gs
std
enter
jmp
sub
in
pop
mov
jg
outsb
or
dec
jns
adcb
call
adc
fsub
cmpsl
stos
fs
xchg
icebp
bound
jle
sub
fs
sub
int
fiaddl
inc
xchg
cmc
insl
adc
sbbl
and
pop
sub
jo
subb
ds
fmulp
jae
mov
push
mov
aad
mov
incl
jbe
xor
cmc
or
pop
pop
mov
scas
test
je
loope
mov
cmp
adc
sbb
or
sub
cltd
push
jnp
xchg
hlt
je
lcall
push
xchg
fiaddl
push
mov
inc
pop
jb
inc
rcrl
fistpll
dec
es
test
cmp
fidivrl
mov
xor
fwait
insb
sbb
test
in
adc
sbb
shll
out
xor
pop
out
xchg
cs
sbbl
cltd
outsl
test
mov
sub
icebp
in
enter
outsl
fs
lcall
push
test
sbb
or
es
or
cmp
cmp
jp
movsb
nop
dec
lret
iret
jecxz
test
inc
addr16
mov
adc
pop
push
mov
movsl
push
mov
fistpl
adc
ljmp
out
inc
pop
fstpl
push
ds
loopne
cmp
in
insb
das
sub
and
cmp
outsb
cmpsl
mov
push
loop
mov
popa
push
cmpsl
mov
sub
ret
aad
add
outsl
loope
cltd
adc
pop
cltd
subl
je
loope
rorl
stos
cmp
stc
inc
mov
push
ret
mov
push
jb
adc
push
dec
sub
push
loope
pop
das
lods
push
pop
dec
mov
jle
pop
call
lea
push
xchg
aaa
add
cmc
scas
add
push
jbe
mov
inc
lcall
jecxz
mov
add
xor
push
mov
das
lods
sub
jle
add
jae
inc
mov
lods
imul
lock
and
std
pop
clc
addr16
aam
mov
push
int3
lret
xchg
jmp
add
xor
push
mov
push
outsl
inc
in
in
or
aas
pop
and
int3
pop
jl
push
scas
lret
mov
mov
xor
add
xor
adc
popa
dec
and
lock
shrl
pusha
inc
jg
cmpsl
xor
mov
mov
gs
xchg
dec
std
icebp
jne
mov
jne
add
cmp
popa
mov
dec
incb
orb
fs
mov
aas
xlat
mov
cmp
faddl
cli
or
inc
lods
push
das
mov
dec
mov
dec
xchg
dec
jge
cmp
mov
mov
sbb
inc
roll
lock
sub
push
mov
adc
mov
mov
sbb
mov
dec
push
adc
jl
sarb
mov
pop
loope
nop
ja
int
add
or
sbb
mov
scas
pop
push
mov
cmp
pop
roll
sbb
dec
push
insl
jecxz
mov
adc
jge
ljmp
outsb
cltd
and
jle
jmp
mov
movsb
jae
pop
sarb
fcmovne
sarl
fistl
add
rorb
test
pusha
push
push
in
adc
xchg
inc
std
lock
xchg
and
es
xor
int
std
jno
cltd
mov
addr16
iret
test
jle
rcrb
cmc
xchg
loope
aaa
cmp
cmp
mov
adc
mov
pop
ret
and
cs
mov
fldcw
lock
addb
stos
xor
xchg
jl
test
pop
ds
in
sbb
xor
addl
int3
or
xor
lea
ljmp
mov
or
inc
xchg
xchg
lds
subps
adc
cmp
notb
sbb
das
lods
cmp
fwait
mov
cmp
movsb
cltd
xchg
sub
cwtl
movsb
je
xchg
xchg
sub
xchg
lahf
push
inc
popa
pop
out
in
inc
imul
mov
outsb
into
leave
in
add
jo
adc
je
mov
stos
outsl
xchg
fstl
xchg
decb
int
xor
testb
inc
mov
cmp
sbb
inc
dec
jno
sarl
in
jl
aad
pop
pop
sub
loop
jle
cld
mov
pop
cmp
dec
adc
inc
sub
insl
les
mov
sti
push
mov
mov
jo
lahf
jle
das
fcoml
push
pop
dec
push
dec
mov
mov
mov
inc
pop
addb
push
gs
xchg
xchg
xor
inc
lods
push
push
xchg
rcrb
sub
push
in
mov
scas
test
rcll
insb
pop
sub
dec
sbb
sbb
jp
in
sub
fidivrs
xchg
popa
xor
pop
push
fadds
mov
aaa
cli
lods
sbb
sub
add
rcrl
push
dec
mov
lods
xchg
das
out
or
andl
dec
inc
jbe
movsb
adc
fcompl
mov
aaa
out
jle
fsubrs
jmp
adc
xchg
outsb
ret
mov
mov
adc
dec
ret
dec
cltd
jns
xchg
pusha
adc
mov
pusha
mull
and
adc
sub
push
cmp
sbb
jbe
xor
add
pusha
dec
ja
hlt
inc
mov
pop
or
xor
outsl
sbb
pop
into
sub
out
test
out
xor
jl
xchg
gs
aad
xchg
mov
cmp
or
add
aam
and
jbe
loopne
mov
out
xchg
push
lea
call
adc
enter
jg
adc
dec
movsl
mov
aad
leave
xor
fmuls
jne
pop
movsb
push
insl
sbb
fimuls
mov
inc
scas
sahf
mov
inc
push
cmp
push
cmp
in
cmpsl
pop
sub
pop
ljmp
test
cmp
xchg
mov
jae
nop
mov
push
cmp
flds
adc
cmp
xchg
adc
lret
ret
popa
ss
mov
adc
cmpsb
xor
dec
sub
frstor
sub
loope
push
inc
fs
sbbb
xchg
nop
cmc
xlat
jns
cmp
loopne
je
dec
lret
lcall
push
dec
sbb
jnp
ds
sti
stos
lock
jns
mov
mov
pop
fcmove
or
push
push
push
lods
ljmp
dec
pusha
or
adc
lret
jp
mov
xchg
and
stos
movsb
nop
adc
sbb
fadd
xchg
stos
push
movsl
cmpsl
mov
ret
adc
fadds
mov
sbb
pop
sbb
or
sahf
pop
jle
lcall
mov
aas
jns
fst
and
inc
adc
movsb
lret
pop
dec
mov
dec
jo
sub
cmpsb
stc
aam
sub
xchg
jo
xchg
add
and
sahf
add
sub
mov
push
inc
loop
aad
push
pop
lcall
mov
not
int3
pop
jmp
and
pop
or
and
jp
mov
cs
jno
icebp
stc
dec
daa
or
adc
imul
pop
sti
sbb
dec
int
aas
dec
ret
ljmp
adc
std
pop
inc
out
sub
mov
pushf
cs
cld
xor
mov
push
cmp
lret
and
xor
sub
sbb
mov
dec
enter
inc
push
daa
dec
adc
push
add
pop
sbb
ja
je
outsb
shlb
xor
xor
mov
push
faddl
aad
xor
ds
dec
sub
clc
push
bound
sti
mov
loope
outsl
out
cmp
ret
or
test
and
dec
insl
sbb
xchg
xchg
jmp
and
scas
scas
aad
push
rcrb
mov
nop
mov
sub
mov
and
mov
aas
pusha
adc
xor
xchg
mov
scas
inc
dec
les
mov
pop
mov
or
or
nop
xor
ret
inc
push
movsl
sub
push
push
adc
xchg
or
jno
ja
add
sub
or
mov
push
idiv
lret
loope
mov
cwtl
adc
cli
rorb
shrl
jo
pop
jle
mov
jg
icebp
sarb
ja
imul
xchg
push
out
xor
mov
aas
push
dec
xchg
mov
mov
testl
jb
jp
and
jmp
icebp
int3
testl
pusha
pusha
aas
loop
jg
out
call
pop
or
jge
or
or
inc
sahf
push
mov
pop
and
mov
xor
cli
fdivrs
and
cwtl
les
mov
mov
lock
ja
add
xor
fisttps
push
das
in
jb
sti
push
dec
ja
bound
jmp
jne
scas
lock
je,pt
adc
cmpl
into
mov
test
mov
movsb
cmpb
rcr
mov
fs
inc
mov
aam
mov
push
push
inc
jbe
cmpsb
fisttpll
cmc
mov
stc
jle
lret
ds
int3
enter
jg
stos
xor
imul
push
out
repz
popa
jg
xchg
aam
out
test
jmp
pop
aad
inc
mov
mov
mov
std
movsb
hlt
push
sbb
and
push
adc
sbb
push
fdiv
mov
adc
sbb
xchg
cli
mov
ljmp
in
adc
sbb
push
or
jb
frstor
sub
inc
test
es
adc
mov
push
mov
outsl
sbb
adc
insb
mov
in
mov
push
insl
bound
push
cmpsb
cld
imul
dec
aad
das
jne
mov
push
and
inc
mov
scas
inc
pop
pop
pushl
fnstenv
aaa
mov
xchg
inc
xchg
addr16
je
or
inc
dec
xor
cmpsb
pop
enter
jg
jg
call
ret
push
mov
mov
and
adc
xor
lock
mov
and
push
fldt
popf
js
ds
sub
pop
add
xchg
sub
and
sbb
lahf
cmp
cld
aas
jp
sbb
out
add
inc
and
mov
cmc
stos
movsl
inc
inc
sub
imul
mov
mov
fmul
popf
or
fnstcw
inc
mov
sbbb
iret
movsb
dec
rclb
into
cmpb
std
fidivrl
outsl
and
inc
int
sahf
lods
popa
test
lea
sbb
adc
push
movsl
xchg
lock
stos
aad
rclb
and
ret
cmp
mov
pop
or
pop
rorl
notb
or
shll
add
leave
fidivs
mov
or
in
push
inc
mov
inc
adc
mov
mov
pop
sub
jne
rcrw
repnz
push
mov
pop
jle
mov
in
loope
fwait
lcall
pop
in
enter
in
and
adc
pop
sub
push
setnp
pop
dec
aaa
ja
lret
cmp
and
negb
cld
aam
out
xchg
xor
mov
inc
sub
mov
push
movsl
push
mov
andl
pop
fidivl
loope
dec
cmpsl
mov
arpl
mov
popa
arpl
stos
xchg
inc
nop
mov
loope
xlat
sbb
fisubl
push
cmp
sbb
inc
xchg
adc
div
andb
xorb
mov
shl
or
jmp
stc
push
mov
mov
addr16
jo
xor
xchg
adc
inc
aam
cmpl
popf
popfw
rcrb
sbb
push
or
sub
nop
mov
xbegin
pop
call
repz
repnz
push
xrelease
xchg
out
pushf
and
fsubs
dec
mov
xchg
pusha
sti
sbb
bound
or
and
xor
mov
dec
mov
pop
je
push
les
clc
mov
push
push
stos
lret
std
lods
xor
xor
adc
xchg
inc
adc
push
lcall
div
or
push
pop
fmul
in
clc
and
das
adcl
aam
add
dec
rcll
cmp
icebp
scas
out
push
cmovge
fmuls
stos
and
xchg
jp
movsl
and
sbb
sbb
jo
push
mov
sbb
arpl
int
pop
inc
sub
sub
mov
and
mov
and
cmp
rorl
std
jno
sbb
movlps
mov
leave
ja
movsb
inc
xlat
out
xor
std
mov
xchg
stos
or
test
jp
mov
pusha
mov
stos
xchg
inc
aad
pop
movsb
inc
insb
pop
jecxz
cmp
mov
int
inc
mov
pop
aas
cwtl
adc
xor
xchg
sti
mov
int
inc
hlt
es
adc
ljmp
push
insb
inc
sbbb
scas
rcr
jbe
mov
je
notl
xor
xor
mov
int3
sbb
mov
or
add
stos
mov
unpcklps
pop
aad
push
clc
nop
adc
addb
sbb
adc
bound
fsub
cwtl
and
dec
cmpsl
cltd
outsb
xor
cmp
jg
stc
jp
sbb
mov
dec
push
xchg
outsl
nop
dec
fwait
xor
fstpl
mov
rcll
orl
cli
call
sub
jge
dec
push
xchg
ss
or
rcl
sbb
rclb
dec
ficoml
xchg
jle
dec
push
lret
cmp
xchg
dec
ds
addl
jo
ret
fisubrl
push
stos
inc
imul
test
mov
pop
insb
gs
and
je
outsl
push
inc
sbb
push
dec
dec
push
push
clc
dec
mov
and
push
push
lock
mov
sbb
jmp
bound
insl
les
cmp
shlb
dec
inc
dec
ficoml
inc
inc
adc
inc
stos
les
adc
pop
rcr
dec
adc
mov
lcall
int
pop
dec
sbb
inc
fbld
mov
enter
add
mov
jnp
jno
js
inc
lret
xorb
loope
mov
cmp
mov
sub
iret
jmp
jp
movsl
popa
movsb
dec
xor
xor
and
sti
inc
mov
test
mov
popa
push
pop
out
add
gs
inc
scas
xchg
aam
xor
dec
lods
adc
mov
pusha
js
xor
shrb
les
test
bound
shrl
inc
xchg
mov
add
add
aas
jge
jge
cmc
pop
or
xchg
aas
mov
movsl
sahf
push
out
add
push
mov
dec
cwtl
stos
add
and
popf
cli
sub
push
push
xchg
shlb
clc
and
inc
add
roll
mov
sub
out
enter
dec
mov
sub
cmp
pop
popf
in
xor
test
pop
adc
cld
sub
inc
lcall
fdivrl
in
dec
push
push
lods
cwtl
es
jnp
mov
inc
xor
xchg
fsubr
imul
dec
idivb
test
xchg
into
xchg
lods
fidivs
daa
cmpsb
jmp
cs
in
or
jae
xchg
xlat
js
adc
fmuls
xor
cmc
repnz
into
test
mov
add
jle
pushf
mov
or
adc
or
mov
iret
push
dec
fadds
pop
adc
stos
roll
inc
movsl
pop
xor
pop
fldt
addb
or
inc
ja
push
lret
lods
imul
cmp
push
or
push
mov
ljmp
nopl
jno
xchg
nop
test
scas
push
or
xchg
ja
cmp
push
xchg
bound
jbe
push
xor
push
xchg
jae
adc
dec
mov
lods
adc
lods
pop
ja
ss
subl
loop
sbb
out
pop
iret
scas
aam
and
ffreep
push
inc
xchg
lret
jle
push
mov
cmpsb
xchg
xchg
inc
xchg
clc
cmc
cltd
mov
rcl
xchg
pop
and
xchg
cmp
arpl
mov
and
stc
xchg
mov
mov
lahf
jbe
cmpsl
das
pop
and
popf
mov
push
inc
fdivrs
sbb
xor
xchg
cmp
xor
xor
aaa
cmp
cld
pop
adc
popf
push
xchg
push
sbb
pop
leave
push
and
out
insb
cwtl
imul
ret
jbe
hlt
out
fs
test
jg
add
mov
adc
ret
pusha
jbe
xor
add
and
add
mov
push
add
xor
mov
and
in
mov
loope
into
negb
cmp
mov
xchg
daa
jecxz
test
jg
scas
test
lock
icebp
push
or
pop
mov
es
or
imul
cmp
push
sahf
dec
icebp
sub
inc
subb
fists
ss
cltd
cmpsb
cld
xchg
xor
push
or
nop
sti
out
xchg
jnp
mov
addr16
jp
jp
andb
pop
pop
call
mov
sti
jne
mov
inc
in
sub
imul
mov
rcll
enter
inc
or
pop
mov
adc
push
xor
out
imul
jp
cltd
xor
loope
dec
fistps
mov
dec
iret
xchg
fsubrs
jnp
fnstsw
out
cmp
and
mov
gs
add
jmp
mov
cs
imul
shll
es
gs
out
sbb
jo
mov
pushf
in
xchg
push
rcrl
jae
lcall
push
popa
fiadds
shll
jecxz
cmp
and
mov
inc
mov
xor
out
mov
dec
imul
jg
jno
ljmp
mov
dec
aas
and
and
addr16
mov
filds
das
or
call
mov
sbbl
xlat
pop
mov
scas
xor
imul
aas
xor
sub
dec
or
ja
pop
xor
jb
mov
cwtl
rolb
fisubrl
and
mov
cmp
mov
cmpsl
repnz
dec
movsb
adc
nop
rclb
xchg
inc
arpl
jmp
sbb
js
test
jno
rcrb
or
ljmp
pop
cwtl
movsl
mov
add
out
add
insb
dec
mov
fildll
mov
test
in
out
cmc
insb
gs
xor
xchg
imul
jecxz
sub
iret
and
insb
xchg
lahf
stc
cmp
cmc
popa
dec
scas
insl
pop
mov
cld
or
sbb
fcmovu
icebp
push
jo
xor
sbb
jle
loop
icebp
pop
stos
mov
rolb
gs
in
sbb
adcb
ljmp
stos
cli
sbb
stc
dec
repz
repnz
fisttpl
adc
or
push
aam
cwtl
testb
out
cmc
xlat
out
cmpsl
rolb
mov
gs
pop
pop
mov
jl
push
sbb
adc
inc
les
leave
adc
jbe
add
cwtl
data16
test
xchg
dec
mov
push
jae
pop
inc
fidivs
cli
lcall
pop
jno
ffreep
push
xchg
xchg
leave
movsl
push
mov
mov
xor
inc
loopne
or
and
lcall
and
outsl
arpl
jns
mov
cs
aas
pop
outsb
stos
pop
and
inc
dec
mov
insb
stos
andl
mov
sahf
pop
sbb
push
call
fs
push
lods
rcll
mov
int
outsl
movsl
pop
adc
lea
mov
loope
mov
pop
push
sub
scas
inc
cli
in
jle
mov
mov
or
cmp
sbb
push
movzwl
pop
out
pop
pushl
orl
push
add
adc
pop
ljmp
decb
lea
lea
mov
mov
mov
pusha
adcl
and
jo
scas
xchg
lret
xchg
lcall
imul
dec
test
inc
mov
fcmovb
pop
mov
dec
lret
fcompl
lods
mov
sbb
lret
mov
imul
fwait
mov
mov
loopne
inc
cmovl
xchg
dec
insb
sbb
push
add
test
mov
fimull
sbb
mov
or
fdivs
sub
sub
imul
dec
inc
loope
or
mov
pop
dec
fistl
xlat
pop
sbb
sub
fdivl
push
addb
adc
cmp
sub
sti
add
scas
cmp
cltd
shrb
sbb
cmp
pusha
popa
les
and
push
inc
nop
mov
in
adc
stos
loopne
std
sbb
or
sbb
xchg
fs
sub
pop
arpl
outsb
mov
or
lcall
mov
push
fildl
jl
mov
lahf
mov
mov
jmp
or
pop
aaa
mov
push
fst
shll
and
sub
sahf
xor
cmp
jnp
jg
stos
movsb
cmp
ret
cmc
lock
pop
sub
sub
xor
jl
insb
test
or
fidivl
sub
andb
jge
jmp
jecxz
movb
mov
test
push
xor
sub
cmp
jg
cld
int3
xchg
push
push
data16
or
lds
test
adc
jecxz,pt
adc
xlat
aaa
in
fucomip
mov
add
push
mov
mov
cs
mov
repz
pop
cwtl
dec
cli
mov
ljmp
in
rcrb
loopne
adc
mov
cld
xchg
lret
insb
int3
pushf
cmp
jns
cs
pop
orb
lods
mov
xor
aas
scas
int3
inc
jns
popa
je
fdivl
fisubs
aas
pop
stos
pop
sbb
add
mov
stos
push
in
in
mov
fisubrs
mov
iret
lret
aam
adc
adc
or
ja
rclb
scas
popa
push
mov
and
rcrl
and
push
cli
jp
jns
inc
daa
dec
dec
mov
pop
cmp
cmp
jmp
inc
push
sbb
stos
sahf
add
dec
dec
inc
in
pop
xchg
sbb
or
push
imul
add
pusha
sub
sub
imul
push
mov
movsl
inc
mov
ss
dec
jecxz
in
xchg
sbb
mov
jns
push
loope
imul
inc
adc
mov
pop
insl
rcr
in
mov
pop
dec
aas
add
push
sub
andb
xlat
jns
cmp
aaa
popa
add
lret
dec
shl
sub
movsl
gs
cltd
in
dec
add
push
dec
jmp
test
mov
out
inc
inc
jge
call
addr16
cmpsl
cld
outsb
incb
mov
jae
in
shll
or
and
pop
pusha
ret
das
dec
mov
ret
inc
mov
aaa
subl
aam
call
out
mov
cs
push
test
icebp
push
mov
and
dec
std
popw
mov
out
or
notl
sti
sbb
sbb
fists
lahf
push
cld
push
inc
hlt
dec
mov
xor
or
push
enter
adc
call
call
dec
inc
jae
popf
test
jmp
jg
sbb
cmp
bound
cwtl
xor
push
lods
mov
xchg
adc
push
out
adc
mov
adc
testb
sahf
jno
test
fwait
mov
jb
jbe
add
jae
push
lcall
sti
xor
push
mov
xor
xchg
in
push
sahf
icebp
insl
sbb
add
push
sbb
xchg
dec
mov
aas
add
push
cmp
adc
je
sti
push
adc
ret
pop
and
push
push
jne
das
call
or
mov
jge
mov
push
mov
pushf
repz
lock
jo
or
push
stos
in
and
outsb
jge
test
mov
mov
loope
test
xchg
mov
push
pusha
cwtl
rcr
hlt
pop
cmpsb
into
adc
jnp
push
fldcw
add
icebp
inc
arpl
mov
bound
adc
orl
out
gs
fistps
mov
push
mov
gs
jns
mov
mov
ds
ljmp
push
xor
xor
and
lcall
andb
imul
dec
inc
int
push
insb
and
scas
dec
aaa
mov
jae
scas
mov
push
cwtl
scas
and
adc
mov
or
clc
in
mov
push
in
pop
out
mov
ret
adc
ja
push
xlat
push
pop
pop
outsb
mov
clc
testl
mov
sub
xchg
lea
scas
scas
push
rorb
in
fcmove
scas
mov
lret
pop
jno
in
mov
pop
sahf
cs
pop
pusha
lods
add
sbb
adc
sti
out
cmp
adc
and
lods
clc
xor
sbb
gs
push
jne
jle
inc
pop
mov
push
repz
std
orl
mov
mov
daa
mov
mov
jb
push
cmpsl
loopne,pt
sbb
insb
dec
jo
faddp
fs
xchg
inc
add
repz
ds
and
cmp
pop
fs
pop
cli
dec
inc
sbb
imul
adc
and
xchg
jns
pop
inc
mov
cli
mull
ljmp
cmpb
mov
imul
dec
in
cmp
xchg
jge
cmp
push
jl
lods
aaa
jl
push
push
scas
mov
shll
mov
clc
push
adc
and
fstpl
push
inc
xchg
iret
mov
cmpb
lcall
in
mov
ja
mov
dec
push
mov
nop
pop
sub
and
sarl
fbstp
loope
orb
sti
dec
push
and
mov
pop
xchg
test
arpl
call
scas
pop
aad
lods
mov
hlt
push
xor
cmp
std
mov
mov
jmp
test
xchg
mov
je
mov
inc
pop
push
mov
or
je
jle
in
pushf
sbb
outsb
dec
lods
fwait
add
mov
sbb
dec
xchg
push
popa
je
cmpsl
add
jb
push
and
mov
add
jecxz
inc
std
test
push
sub
mov
cld
xchg
or
xor
sbb
push
cmp
and
ljmp
inc
fistps
push
push
sti
fldt
push
movsl
scas
push
sbb
cmpsb
loopne
xor
aad
repz
jl
cmpsb
enter
xor
lcall
push
cwtl
mov
sbb
cltd
aam
adc
in
mov
notb
add
push
pop
lods
dec
scas
dec
xor
dec
xorb
push
mov
pop
dec
add
mov
mov
inc
data16
call
das
mov
fstps
cmpsb
js
leave
lds
rorl
imul
rcrw
mul
mov
add
adc
leave
lods
lds
or
out
cmp
loopne
dec
les
fadds
push
les
std
or
add
pop
into
dec
movsb
arpl
iret
popf
arpl
xchg
into
cmp
jb
pop
add
and
sub
sahf
js
xor
push
push
push
xor
lret
sub
hlt
mov
mov
lret
xorps
int
sbb
mov
fbld
push
test
add
imul
in
mov
in
stos
mov
in
add
mov
cltd
iret
jmp
in
sbb
or
mov
inc
sbb
jle
push
fimuls
bound
mov
repnz
jae
nop
mov
mov
cmc
cmc
fcomps
and
inc
mov
mov
cwtl
call
in
add
lcall
int
add
mov
mov
dec
lock
arpl
xor
jp
aad
add
inc
js
in
cmpsl
mov
jae
pop
push
and
pop
mov
int3
nop
cmpsl
lret
pop
jge
lcall
ja
leave
adc
add
jbe
std
xchg
cmp
or
cmp
das
push
jb
sarl
and
xchg
stos
in
dec
test
nop
mov
fistpl
cli
cmp
fsubr
or
pop
or
jne
popa
push
insl
adcb
pop
sbb
loop
xlat
add
cmp
xlat
ret
sub
pop
xchg
xchg
data16
and
push
test
aaa
js
adc
ret
jmp
cmpl
fstpt
lods
inc
data16
repz
leave
mov
lods
cmc
repz
mov
es
pop
sbb
sub
jl
adc
data16
mov
jae
and
shll
sbb
pop
repnz
call
jne
cmp
fsubp
shrb
nop
pop
loopne
subl
enter
cmpsl
sbb
ljmp
fxam
mov
sub
les
fcompl
xchg
and
or
sbb
popf
xor
movsb
xor
xchg
xorl
dec
nop
mov
mov
bound
dec
cmp
in
jno
sbb
jo
popf
sti
pop
flds
jno
xchg
cmp
daa
in
roll
mov
sbb
mov
in
jp
mov
nop
cli
xchg
adc
adcb
or
sbb
or
scas
push
sahf
push
shll
clc
das
mov
shlb
mov
scas
mov
adc
mov
push
jle
insb
cmp
pop
cmp
xchg
inc
jb
or
adc
and
lock
mov
in
cmp
test
mov
or
mov
mov
adc
sti
xchg
pop
sbb
aas
mov
movsl
lods
mov
scas
inc
rcr
push
xor
inc
mov
icebp
lret
sbb
mov
pop
jle
icebp
test
in
imul
cmp
adc
jb
fnstenv
aam
popa
inc
mov
mov
adc
xor
jnp
in
xchg
adc
rorl
cmp
cmc
icebp
sbb
aam
mov
nop
aaa
inc
das
std
in
adc
sti
dec
int3
das
xchg
xorb
data16
hlt
xor
xchg
xor
mov
dec
xlat
pop
out
fcmovnbe
add
lret
inc
test
mov
cmp
jnp
ds
cwtl
mov
mov
sbb
mov
pop
jmp
add
imul
bswap
rcrb
mov
cli
and
lret
loopne
cli
mov
adc
pop
repnz
sub
int
movsl
repz
daa
lahf
pop
mov
imulb
rcll
iret
mov
push
mov
daa
jecxz
mov
and
cltd
adcb
repnz
stos
ret
test
pop
aam
and
lds
adc
roll
fcompl
scas
mov
das
mov
xor
add
push
addb
add
pusha
and
xchg
popf
inc
icebp
dec
push
cmc
fimuls
mov
and
mov
sti
or
call
pop
push
adc
jmp
xchg
loop
add
pop
dec
or
inc
int3
push
dec
push
cltd
mov
adc
lcall
fadds
fbstp
pushf
push
jb
push
and
in
das
mov
test
and
dec
movsl
aad
xlat
mov
imul
in
or
popa
jg
and
mov
sahf
dec
pop
jle
sub
clc
scas
xor
cmp
jp
and
pop
cwtl
test
lods
jns
mov
and
sbb
mov
xor
sbb
pop
test
orb
sub
call
or
mov
cmpb
and
aad
je
fsubr
sahf
lds
push
nop
adc
fcomp
sar
jle
jle
ja
lea
sbb
xlat
lcall
sarb
cmp
dec
fistpl
jmp
ret
sub
rcll
popf
popf
idivb
arpl
arpl
dec
mov
jmp
xchg
movsl
sub
cmp
xorl
mov
mov
xchg
add
insb
dec
shrl
out
inc
cli
roll
fucom
or
sub
add
inc
lea
jns
xchg
sbb
mov
ss
mov
shll
mov
xchg
xor
fcomip
hlt
xor
jl
je
add
std
jle
out
pop
pushf
sbb
inc
repz
xor
lret
gs
sub
mov
or
cwtl
mov
push
push
adc
ret
push
push
or
inc
mov
cmc
mov
cmpsb
push
jnp
aam
jbe
outsb
mov
jb
mov
push
sub
sarl
inc
js
or
gs
xchg
or
dec
jmp
or
dec
sbb
xchg
addl
jb
daa
out
sarl
inc
jb
mov
sub
fistpl
add
in
popf
in
dec
mov
sub
lret
sbb
aaa
bound
sub
pusha
inc
lcall
inc
cmp
test
inc
mov
sbb
jo
push
aam
mov
jg
fnstenv
fldenv
pusha
dec
xor
jb
lret
xor
aad
movl
mov
xor
cmp
push
and
cli
mov
cmp
insb
xor
fnsave
insl
add
repz
mov
cmp
mov
dec
loop
jns
mov
jge
stos
sub
jne
adc
cli
add
adc
scas
arpl
or
adcb
and
pop
push
push
fsts
ja
cmp
jge
push
xchg
shrb
xchg
sub
and
dec
in
mov
dec
shlb
lcall
xor
inc
jae
cmp
cmpsl
fisttpll
pop
bound
icebp
or
xchg
sub
bound
xchg
jne
sub
and
jnp
leave
adc
out
jg
rcr
lock
mov
sbb
dec
mov
insb
test
ss
mov
ss
sbb
js
daa
xor
push
xor
jge
push
xchg
clc
ret
test
in
push
scas
jo
sarb
mov
cltd
loopne
or
xchg
popa
bound
mov
push
push
sub
add
add
mov
sarl
dec
mov
lds
aam
shl
cmp
dec
mov
outsl
push
clc
pop
jbe
andb
ljmp
mov
cmp
inc
sahf
mov
pop
insb
xor
fiadds
jge
sub
jl
call
pop
cmp
cli
shlb
xorl
mov
popf
clc
je
mov
xchg
mov
pop
jns
and
push
inc
inc
push
mov
pop
pop
and
jg
pushf
int
pop
loope
aas
test
sahf
rcrl
push
ficoms
mov
sub
ds
test
rorb
add
movsb
in
add
adc
negb
mov
enter
or
outsb
cmp
lret
imull
vpmacsww
inc
mov
dec
push
sub
insb
loope
in
and
sub
cwtl
call
mov
imul
jp
ret
push
outsb
fdiv
arpl
imul
sbbb
shr
add
push
iret
inc
and
lods
clc
lret
xchg
iret
cmp
dec
xor
add
rcrb
pop
adc
ja
nop
sbb
cld
lret
or
test
fcmove
xchg
pop
dec
sub
mov
mov
pop
push
stos
or
sub
or
cmp
std
call
push
cmp
and
mov
lods
mov
repz
jle
xchg
mov
ret
ret
jbe
push
cmp
in
clc
mov
mov
popa
pop
outsb
mul
testl
mov
aas
mov
insl
mov
inc
ss
daa
add
pop
jge
int
call
or
mov
mov
xchg
xor
inc
jp
push
hlt
test
cli
fs
push
inc
push
call
xlat
out
into
push
cmp
enter
lods
mov
in
cltd
and
xchg
ret
xchg
es
mov
jae
idivl
sbb
std
or
xchg
addr16
sahf
leave
pop
push
jecxz
xchg
mov
movsl
mov
mov
push
loopne
jg
insl
push
das
add
add
shlb
mov
add
and
adc
sub
mov
shlb
or
cwtl
mov
in
sarl
dec
ljmp
push
subl
jmp
subl
pusha
out
lods
mov
outsl
ss
int
jmp
call
loope
adc
movsl
add
mov
cmp
dec
pusha
mov
fistpl
bnd
pusha
mov
movsb
out
lds
or
ret
mov
dec
ret
xchg
popf
add
adc
and
repnz
hlt
std
pop
mov
mov
sub
mov
mov
call
add
add
jl
jbe
in
outsb
dec
comiss
pushl
pop
mov
or
push
inc
jle
leave
aaa
and
cmp
lods
pop
mov
ror
es
js
je
mov
add
jne
xor
and
outsb
lea
ret
adc
icebp
jg
jne
mov
jl
pslld
sbb
inc
cmp
ja
jnp
stc
push
mull
pop
jecxz
fnstenv
cmp
sti
ds
sbb
loop
dec
jp
test
xchg
movsl
inc
sub
cmp
mov
dec
mov
je
mov
mov
and
das
movsb
in
in
rcl
cmp
mov
test
cmp
push
mov
or
js
push
jnp
scas
mov
dec
mov
int
inc
dec
bound
pop
pop
lock
int
add
shll
cmp
sub
dec
sbb
cmpsb
arpl
gs
scas
adc
xchg
inc
mov
mov
lods
add
jb
movsl
frstor
mov
cs
cmpsl
loopne
aas
mov
aam
xorl
stc
movsb
pop
imul
lret
lods
push
stos
fists
cmp
fistl
adc
fsubs
popa
iret
lcall
dec
jecxz
lds
inc
add
dec
push
mov
push
lds
shl
cmp
sbb
ds
lcall
xchg
daa
xchg
movsl
jecxz
adc
ss
mov
lahf
pop
push
in
mov
xchg
push
cmc
jge
mov
mov
lods
insl
fisubs
cmpsl
shlb
enter
popa
adc
push
cmpsl
mov
push
out
jle
mov
pop
mov
and
sub
jmp
pop
jmp
sahf
out
idivl
ret
mov
pop
nop
repz
jns
fisttpl
in
sbb
lret
jl
sub
xchg
mov
nop
stc
jb,pn
or
lds
aaa
pop
test
xchg
mov
aam
dec
push
sub
test
repnz
ljmp
and
mov
cmp
sbbl
lret
cmp
mov
and
or
in
cmp
or
mov
cli
inc
addr16
jge
pop
jo
jg
bound
fs
bound
popl
fbld
mov
out
aad
int3
lods
outsl
and
mov
xor
xor
jno
imul
lock
fs
adc
mov
sub
in
sbb
sarl
ja
jge
cmp
ss
pop
adc
cld
push
add
cmpb
cmp
stos
xchg
es
bound
sbb
sub
test
and
or
stc
movsl
test
xchg
xchg
jae
mov
xchg
das
mov
lcall
mov
sub
jp
rorl
push
mov
mov
cmp
dec
addr16
loope
das
mov
stos
cmp
gs
cs
sbb
loope
xor
rcr
mov
mov
hlt
aaa
daa
cmp
xchg
mov
mov
pop
mov
rcrl
mov
dec
loop
mov
inc
sbbl
stos
lahf
and
std
pop
mov
pop
pop
fs
push
icebp
scas
mov
jb
ror
js
dec
sbb
push
stos
xor
bound
gs
push
lods
pop
mov
and
lods
out
nop
adc
inc
ss
lock
xor
jbe
inc
inc
stc
aas
push
pushf
pop
nop
jo
or
add
frstor
jnp
mulb
add
in
push
jmp
adcb
pop
std
pop
mov
pop
add
cmpsb
jbe
lret
sbb
pusha
ds
test
arpl
test
cwtl
pusha
mov
push
repz
ss
mov
out
xor
push
xor
sub
adc
jae
shl
sbb
js
scas
data16
xor
jle
daa
mov
mov
sbb
in
mov
mov
inc
cmp
pop
inc
mov
xchg
popf
cmp
lahf
mov
mov
push
jns
jnp
lea
xorl
movsl
lea
adc
xchg
pop
clc
cmpsb
pop
jb
out
sub
mov
out
mov
mov
cmp
scas
jle
or
leave
sbb
pushf
inc
cli
mov
sahf
ss
repz
jno
repz
cmpl
fmull
adc
shll
sbb
ljmp
push
cmp
imul
stos
push
aas
and
outsl
int3
mov
testl
aaa
mov
fsub
in
ja
mov
ss
insb
adc
aaa
jmp
cld
xchg
push
into
loope
push
mov
es
xchg
lret
aam
xlat
fmuls
mov
out
lahf
add
cmp
cli
popa
push
stos
cmp
add
cmp
xor
loopne
jmp
sbb
mov
je
mov
movsb
sti
rolb
or
mov
dec
cwtl
mov
pop
gs
mov
push
mov
mov
mov
outsb
xlat
cli
push
sub
out
rorl
das
sbb
pusha
adc
in
xchg
loopne
cs
jmp
mov
insb
std
adc
loop
mov
inc
mov
addr16
jecxz
popa
gs
bound
stos
sub
push
ficoml
xor
fdivs
dec
repz
add
fnstsw
data16
sub
jne
jg
test
and
sahf
or
xchg
inc
inc
xor
je
pop
xchg
xchg
jne
cmc
adc
push
lret
cmp
fisttpl
jnp
popf
mov
mov
or
mov
sarb
add
add
outsb
fs
add
or
pop
push
icebp
dec
pop
add
cmpsb
jg
and
add
jb
sub
push
inc
psrld
jg
fstpl
adc
aad
popf
outsl
push
fwait
xor
push
xorb
clc
test
sarb
dec
dec
add
sbb
mov
adc
adc
outsl
fidivrl
push
mov
mov
stos
in
push
sub
ret
or
jbe
cltd
pop
ss
jae
dec
jp
jae
adc
insb
xor
push
cmpsl
add
sbb
popa
aas
adc
and
push
xor
in
add
xchg
dec
sarb
mull
icebp
fisttpll
or
lret
imul
into
xchg
fiadds
ror
xchg
or
ja
dec
cmpl
jno
out
mov
jecxz
stos
jnp
and
movsb
test
mov
jge
pop
adc
lea
fidivrl
adcb
in
xchg
lea
scas
mul
out
fwait
jnp,pn
dec
stc
imul
sbb
lock
nop
imul
movsb
fmull
cmp
scas
pop
pop
pop
popf
jmp
ret
arpl
mov
popf
addr16
cmc
out
push
mov
outsb
cld
lock
mov
lcall
jae
or
pop
push
xchg
inc
lock
pusha
jmp
imul
sub
lea
push
shlb
popf
movsl
mov
jl
mov
stc
inc
mov
cmp
stc
pop
cs
es
dec
pop
dec
xor
test
fistpll
mov
add
cmovno
adc
pop
test
jb
iret
mov
pusha
les
fs
jg
les
imul
mov
mov
adc
add
mov
stc
rolb
inc
pop
aam
insb
lock
dec
loop
sub
sbb
enter
xchg
out
jg
jnp
xchg
jnp
mov
jne
dec
orl
into
pop
sub
or
cmp
inc
xor
sbb
cld
into
and
pop
and
stc
out
sub
mov
dec
jp
add
mov
test
in
arpl
in
jl
sbb
mov
cmp
mov
dec
je
data16
or
dec
add
push
sbb
dec
popf
push
cwtl
stos
mov
sub
in
add
mov
sbb
push
cwtl
mov
and
testb
cmp
fildll
jns
stos
or
xchg
outsl
jecxz
jl
and
xlat
jnp
pop
mov
mov
push
fsubrl
cmpxchg
imul
pop
pop
loopne
js
cmp
pop
std
in
dec
iret
sbb
ss
inc
sub
dec
inc
dec
ret
fcompl
sbb
dec
pop
sub
cmp
mov
inc
push
sbb
ss
ss
xor
jnp
xchg
imul
stos
repnz
rcrl
jle
and
mov
dec
mov
sub
imulb
test
mov
cltd
jne
aad
inc
dec
push
jecxz
sbb
jno
scas
inc
inc
scas
add
bnd
cmp
jge
jno
loop
fwait
or
testb
push
loop
scas
and
cwtl
iret
ja
inc
mov
jno
pop
in
fdivrl
js
shrl
daa
adc
outsb
addb
mov
sub
sbb
push
mov
outsl
jge
pop
pushf
xchg
cmc
xor
xchg
sti
and
adc
sub
sbb
inc
adc
mov
add
stc
sbb
jb
push
and
dec
adc
mov
xor
pop
xor
push
mov
lret
xchg
dec
in
mov
cwtl
jno
mov
jg
jmp
in
in
xor
pop
fcompl
mov
in
jae
dec
call
dec
lods
arpl
in
cld
pop
int3
inc
out
push
ljmp
pop
mov
xchg
pop
cmp
call
test
fnstcw
les
in
and
testb
jmp
xor
mov
lds
cltd
out
cs
inc
adc
out
sbb
gs
cmpb
cmpsb
data16
pushf
fs
lcall
data16
push
das
popf
add
insb
xor
aas
shll
sub
xor
cmpsb
icebp
jb
cmp
and
xlat
jmp
lret
roll
movsl
aas
insl
pop
adcl
sbb
jg
mov
pop
mov
fisttpll
lahf
aam
mov
and
lods
mov
int
jg
in
push
aaa
call
inc
xchg
or
scas
inc
bound
pop
aad
mov
adc
insb
iret
inc
cltd
xlat
stos
jne
outsl
bound
and
cmp
mov
fidivl
xchg
aam
jns
into
lods
mov
mov
scas
add
outsb
add
pop
cld
mov
icebp
cmp
icebp
ret
cmp
jns
xchg
out
pop
aas
rcr
pop
pop
sub
push
xor
xchg
adc
js
jle
cmpsb
mov
imul
fs
xchg
hlt
outsl
xor
jmp
movsb
and
ret
rclb
rol
mov
xchg
rcrl
stc
sbb
add
aad
daa
dec
add
imul
popf
lock
push
adc
mov
aam
xchg
inc
call
inc
xor
cmpsb
cmpsb
scas
mov
pop
mov
mov
mov
pusha
fisubl
xchg
and
das
xor
dec
push
mov
movsl
jnp
enter
or
sub
ja
lret
and
and
add
adc
idivb
add
pop
je
push
adc
or
mov
mov
and
aad
int3
push
fistps
aad
cmc
inc
ret
jecxz
out
movsb
sub
lahf
outsb
push
in
int3
stc
mov
and
popf
lret
les
jne
adc
mov
ficompl
or
bound
jecxz
scas
xchg
cwtl
xchg
push
add
adc
push
push
clc
adc
lcall
out
push
sbb
mov
fmul
lcall
mov
cltd
cmp
sbb
sbb
mov
or
cmpsl
jp
mov
pop
mov
adc
movsb
xor
clc
jle
add
repz
outsb
adc
mov
mov
dec
mov
jp
cmp
das
inc
jle
sub
in
rcll
ds
call
mull
mov
arpl
xchg
arpl
lods
mov
pop
jle
jmp
test
pop
add
and
add
jecxz
test
aas
and
pop
xchg
xchg
lcall
shlb
cmp
dec
aas
movsb
addr16
fs
fidivs
jo
inc
adc
movsb
xlat
hlt
out
jo
fcmovu
sub
add
fs
fldenv
push
in
fs
jnp
ss
cmp
xchg
ret
call
fs
cmp
mov
movsb
test
test
jno,pn
mov
dec
mov
adc
dec
or
int
or
jmp
adc
int3
out
xor
adc
orb
enter
cmc
jbe
rorb
clc
addr16
inc
and
jns
in
dec
in
cmp
pop
pop
or
out
push
das
repz
pop
mov
dec
stos
fildl
jbe
or
cwtl
imul
pop
pop
push
ds
nop
mov
arpl
shlb
sbb
jb
pop
add
sub
lds
stc
cmp
mov
lcall
adc
push
jne
scas
mov
mov
sbb
cli
cltd
dec
insl
push
in
pushf
push
add
jge
jg
cmc
out
push
bound
call
or
in
pop
sbb
sbb
sub
xor
inc
and
adc
mov
xor
pusha
outsb
jnp
pusha
int
mov
xchg
jl
add
in
es
mov
dec
lret
cmc
jae
mov
add
jge
mov
lcall
insl
add
dec
lods
movsl
lret
out
xchg
in
ss
popa
gs
aaa
jp
jle
pusha
cmc
cmp
lret
jo
mov
jl
cld
xchg
arpl
sarb
enter
xor
popf
jbe
and
jne
jmp
movsl
jmp
movsb
jle
aas
sub
push
mov
fiaddl
dec
in
js
sub
inc
and
data16
iret
test
sub
jb
filds
mov
loopne
xchg
roll
mov
sbb
and
ds
inc
mov
mov
pop
or
icebp
iret
test
std
arpl
cmp
mov
insl
js
mov
lcall
out
fwait
add
ljmp
lods
xlat
mov
mov
xchg
sub
sbb
or
mov
mov
scas
daa
vucomiss
mov
jge
or
or
adc
not
les
pop
fildl
jmp
mov
insb
inc
jns
mov
fstl
pop
std
mov
jecxz
ret
rorb
sbb
xor
lock
or
out
nop
add
cmpsb
rcl
push
pop
mov
add
sbb
pop
mov
shlb
inc
push
ss
or
and
push
and
mov
mov
mov
test
xor
sbb
cmp
das
sub
ficoms
mov
arpl
sbb
clc
lock
or
ficoml
or
mov
and
sbb
lods
inc
inc
xchg
mov
jge
mov
or
out
mov
sub
sbb
iret
repnz
pop
out
pusha
mov
push
fmuls
aad
and
mov
loop
fadd
mov
dec
inc
or
nop
out
cli
pop
pop
clc
push
das
mov
push
repz
adc
das
pop
dec
push
or
imul
stos
cmp
shll
and
in
int3
mov
les
mov
imul
cmp
jge
push
call
lds
xchg
push
jg
sti
adc
stos
sub
sub
push
lods
sub
pop
cli
movsb
xor
cmp
and
mov
mov
inc
sbbl
mov
sbb
xor
scas
xchg
cmpsb
cmc
push
lds
xor
xchg
out
inc
ss
xchg
push
add
test
cli
and
add
sbb
shl
test
jb
fildl
fisttpll
arpl
ficoms
or
adc
pushf
mov
adcb
jl
faddl
cltd
inc
xchg
aas
and
sub
ret
mov
add
aam
enter
cld
hlt
mov
cmc
int
add
mov
cmp
lret
jo
xor
push
cmp
dec
jne
jmp
nop
or
mov
push
inc
sbb
mov
xchg
lock
xchg
push
es
mov
or
adc
jae
inc
ror
add
scas
mov
push
movsl
push
sub
in
push
pop
out
add
pop
adc
pop
test
outsl
aam
cmp
or
cwtl
mov
rorl
gs
mov
pop
sar
mov
dec
sbb
mov
nop
cltd
pop
cmp
push
lret
push
imul
dec
dec
sbb
mov
jbe
outsl
fdivrs
test
dec
subl
out
pop
xor
fiadds
pop
cld
sub
push
stos
gs
scas
jno
fs
mov
lcall
mov
inc
push
jl
jp
mov
lcall
test
inc
std
mov
aaa
imul
insl
mov
dec
rclb
dec
test
out
or
push
pushf
inc
mov
mov
loop
mov
fldcw
cld
pop
or
push
repz
loop
ja
pusha
outsl
cmp
jge
mov
push
sbb
jl
ret
cltd
clc
inc
lahf
mul
test
repnz
lods
dec
mov
ret
jp
mov
outsb
cmp
mov
mov
lods
loope
test
test
push
jbe
lahf
cmp
test
xor
pop
push
arpl
jns
ret
fmuls
leave
push
pop
dec
imul
movsb
jmp
pop
cmp
mov
push
and
xor
mov
sbb
adc
xor
dec
mov
jnp
dec
jecxz
xchg
push
decl
cmp
jp
addr16
jecxz
lds
iret
fildll
test
sahf
sub
test
cmp
lock
ret
cs
aaa
mov
dec
arpl
and
jle
outsl
mov
fidivrl
mov
pop
push
mov
mov
xchg
cmp
cmp
inc
mov
ss
pop
pushf
or
mov
inc
fs
or
pop
imul
mov
and
cmpsb
mov
adc
mov
push
inc
pushf
dec
stc
xor
inc
sahf
dec
iret
or
add
inc
lock
dec
push
mov
call
sarl
jno
inc
sbb
and
push
mov
out
iret
jp
pop
jae
xchg
leave
xlat
sbb
jns
xor
xchg
sub
sbb
repnz
dec
fists
xchg
xlat
inc
loope
and
mov
out
xor
imul
shrl
insb
lret
in
cmpsb
mov
orb
std
test
push
out
cmp
scas
xchg
lock
add
insl
gs
jle
ret
fs
push
sub
out
jmp
add
adc
lea
into
xlat
and
pop
or
imulb
sub
mov
jae
mov
sbb
lock
cld
fwait
sbb
and
es
adc
mov
xchg
icebp
aam
jnp
movsl
sub
fwait
add
or
or
ret
loope
mov
push
adc
fs
jg
jno
cli
out
cltd
dec
xlat
push
ret
lods
xchg
mov
scas
jecxz
cmp
push
es
movsb
ss
xor
mov
inc
dec
xor
mov
cmpsl
or
int
mov
cmp
lods
popa
pop
testb
idivb
fisubs
mov
mov
fsts
xor
stc
mov
xchg
push
lahf
push
sarb
xchg
cs
and
ror
je
pushf
enter
push
push
mov
inc
xorb
fcoms
scas
mov
xor
sub
add
in
leave
mov
jl
data16
xchg
add
sub
arpl
mov
in
imul
pop
xchg
outsb
dec
xor
and
xor
loopne
xchg
cwtl
shlb
adc
pusha
cld
insb
cmpl
xchg
adc
shrb
sbb
sub
mov
mov
add
iret
cmpsl
push
xor
scas
pop
fdivrl
sti
lock
jo
pop
dec
mov
add
mov
rolb
pushf
push
jae
andb
dec
adc
loopne,pt
mov
scas
xor
ss
add
jae
and
xorl
repz
mov
ss
mov
add
aaa
jp
cmp
and
shl
cltd
rclb
add
movsb
sub
jmp
je
in
push
test
clc
add
mov
cwtl
lods
add
lods
loopne
jno
jmp
iret
mov
mov
repnz
inc
ss
nop
js
testl
push
mov
xchg
pop
scas
or
stos
dec
jo
push
fwait
xor
and
ss
cwtl
mov
mov
sti
sub
xlat
cwtl
cs
sti
or
imul
or
push
pop
push
mov
iretw
dec
cmpsb
pop
adc
add
in
ret
add
insb
mov
xchg
imul
xchg
jle
xchg
xor
push
fsub
jg
push
inc
xor
idivl
dec
cli
jns
aas
jnp
pop
mov
xorl
adc
clc
lea
mov
sbb
test
cmp
and
sbb
or
fsubrs
bound
and
out
inc
sbb
cmp
fwait
test
xlat
call
out
enter
adc
dec
jb
xor
test
lea
fucomi
movsb
fsub
nop
mov
inc
sbb
mov
jae
in
mov
imul
out
jmp
pop
lcall
aad
mov
pop
jecxz
mov
fsts
inc
cmc
bound
pop
hlt
mov
xlat
fwait
addb
lods
fdiv
inc
mov
xchg
mov
xchg
in
push
mov
sbb
sub
dec
repz
mov
xor
imull
mov
dec
mov
out
mov
negl
push
aaa
inc
jmp
dec
decl
jae
cmp
lea
mov
jo
iret
mov
mov
jo
in
sbb
add
out
dec
mov
imul
leave
xor
mov
in
les
test
xchg
xchg
loope
aas
pusha
hlt
jle
adc
icebp
mov
pop
addr16
push
jmp
jge
lret
push
inc
and
inc
outsl
test
jno
jbe
ret
mov
dec
pop
sbbl
in
mov
shl
fistpl
or
push
mov
jb
add
push
mov
sbb
xor
lahf
sub
xlat
mov
rorb
inc
lods
imul
dec
imul
or
rclb
mov
cli
xor
cmc
or
movl
test
ficoml
out
shll
or
xchg
xor
jle
cs
sbb
fsubrl
push
imul
pop
cmp
icebp
in
cmpsb
aam
mov
idiv
xor
jg
fmul
mov
mov
jb
fisubs
sub
or
jns
jecxz
lock
xor
fldenv
into
adc
push
dec
pop
js
shr
mov
push
dec
inc
int3
jge
mov
bound
cwtl
aam
aam
out
je
call
test
repnz
fwait
mov
je
xchg
cltd
movsl
out
pop
xchg
xor
sbb
imul
jl
sub
push
xchg
js
or
loop
cwtl
fldenv
cmp
scas
iret
jp
or
stos
lods
nop
nop
or
test
push
add
movsl
loop
xchg
imul
push
arpl
dec
mov
stc
outsl
or
clc
movsl
pop
push
lods
jnp
mov
int
pop
movsb
dec
addl
adc
pop
sub
cmp
rol
mov
pushf
add
or
mov
dec
fs
test
fdivr
add
sub
fistpl
xchg
jmp
shlb
daa
mov
mov
pop
or
rcr
loopne
jl
jmp
pop
mov
cltd
rol
repz
cmp
pop
push
inc
xor
fwait
lods
loop
push
jp
xor
mov
inc
rclb
repz
fsubrp
loop
jmp
add
testb
leave
lods
or
mov
adc
dec
inc
mov
push
lea
push
in
mov
xor
lcall
push
test
mov
outsl
shll
sti
mov
push
aas
mov
or
sarb
cmp
push
int
xchg
xchg
mov
fwait
hlt
insb
mov
test
popa
fwait
stos
mov
xor
fadds
pop
ss
inc
or
fst
xchg
or
pusha
out
aas
outsb
les
or
jl
xchg
inc
out
mov
lret
sub
addr16
aad
repnz
add
sub
jmp
sahf
out
and
data16
stc
test
loope
pop
jo
or
xor
out
add
testb
mov
andb
sbb
popf
mov
dec
cmp
mov
cmpsb
push
js
shl
inc
xchg
cmp
scas
mov
fisubrs
sarl
stos
lods
aam
fs
or
cs
jb
mov
mov
inc
pop
ffree
repz
and
mov
cmp
xchg
std
pop
mov
sub
cmpsl
gs
fs
mov
jg
mov
stc
cmp
sti
nop
sub
and
xchg
sub
adc
repz
add
adcl
stos
cmp
xchg
cltd
fcmovb
xchg
push
jo
cltd
imul
xchg
cmp
inc
and
aad
out
popf
popa
mov
inc
mov
pop
xchg
jno
xor
cs
and
sbb
pop
stos
cmp
cmp
jecxz
int3
cmpsl
andb
fstpl
xchg
pop
xlat
push
jl
inc
repz
or
loop
inc
out
mov
push
ret
cmpsl
clc
cmp
mov
xchg
ficompl
cltd
daa
ja
sub
xlat
int3
scas
into
push
into
inc
inc
popf
dec
mov
jb
sbb
inc
mov
mov
mov
jecxz
ret
daa
cmp
popa
rcll
mov
cmc
shl
cmpsb
push
and
fdivrs
mov
jge
cmp
sbb
loopne
out
push
je
hlt
inc
outsb
jp
lret
jmp
cmp
ret
xor
or
adc
out
test
in
cld
dec
xor
push
cmpsl
cmp
enter
inc
aaa
lret
mov
inc
call
jno
adc
sbb
sbb
mov
mov
fs
inc
ds
mov
sbb
icebp
inc
mov
mov
mov
jnp
cmp
bnd
mov
cwtl
movsl
xchg
in
iret
push
fcomps
ret
js
inc
test
int
jle
enter
arpl
sarb
lahf
data16
mov
push
xchg
fdivrl
and
push
sbb
sti
mov
dec
in
loope
mov
inc
loope
or
dec
push
insl
loope
out
sbb
add
push
and
loope
sub
or
xor
mov
mull
cmpsl
sub
lret
call
mov
je
mov
jns
xlat
mov
fadds
aaa
xor
dec
inc
mov
orb
mov
out
jno
loopne
push
push
movsb
mov
pop
jae
and
push
push
push
push
stos
pop
dec
fs
outsb
lds
mov
inc
cmpsb
add
dec
cmp
xchg
insl
mov
mov
sub
jmp
jl
ljmp
sbb
xor
and
faddl
add
push
xchg
int
out
cmp
leave
or
repnz
sub
pushf
in
insl
repnz
movsl
repnz
in
dec
sbb
rorb
ficompl
push
out
dec
cmp
xlat
cmc
sbb
jge
cmpsl
shrb
hlt
cmp
movsb
cli
in
sarb
lret
out
cmp
fcompl
jae
enter
mov
pushl
jb
mov
sub
std
lret
inc
fiadds
nop
or
sub
mov
mov
jmp
js
push
jae
out
and
scas
lret
js
iret
inc
cmp
scas
call
cltd
fsts
jp
pop
loope
je
pusha
jle
and
es
in
pop
lcall
cmp
lock
arpl
pop
sub
xlat
jmp
sbb
js
les
loop
in
lcall
pop
sbb
adc
leave
fbld
xchg
mov
mov
xor
add
sbb
fsubl
xor
pop
cmp
add
gs
sti
mov
outsb
stos
ja
xchg
push
adc
mov
add
gs
push
inc
jecxz
fisubrs
cld
adc
adc
test
xchg
mov
jge
aas
xor
and
mov
or
into
repz
lcall
pop
mov
flds
mov
jl
xchg
mov
js
mov
dec
push
push
js
ja
jp
iret
nop
fstps
or
add
cli
mov
testl
cwtl
inc
out
or
xor
pop
jno
sti
loop
aas
sub
pop
mov
or
xor
fildl
loopne
mov
leave
test
xchg
mov
sub
xor
loope
jge
cmp
adc
sti
aaa
loope
fisttpll
mov
dec
jne
into
cld
negl
subb
fistps
push
cmpsb
mov
inc
mov
enter
inc
add
mov
cmp
test
cli
mov
nop
or
pop
stos
std
cmp
push
sub
xor
popf
xchg
or
and
lock
lock
xchg
dec
js
idivb
shlb
jne
push
sub
dec
mov
cld
or
stos
mov
and
clc
popa
pop
shl
mov
xor
push
in
xlat
add
movsl
inc
lea
xchg
ss
or
cwtl
cmp
ret
int3
mov
jae
xchg
insb
loop
inc
ljmp
push
xor
stc
xchg
orb
inc
ss
inc
ror
ljmp
mov
cmp
dec
adcl
cmc
outsl
test
in
xchg
cltd
incl
data16
jg
sbb
mov
test
sub
aam
fimuls
movsl
mov
stos
fcomps
in
xor
mov
lods
sub
test
lret
fchs
mov
lods
dec
sti
sbb
out
xchg
inc
dec
mov
movsl
xor
mov
in
mov
pop
xlat
adc
lcall
push
mov
test
pop
cmp
stos
dec
outsl
xchg
and
scas
pop
jg
lods
inc
es
mov
pop
mov
imul
mov
xchg
mov
ret
sahf
sbb
push
test
mov
fisubl
sub
fidivrs
lock
pop
fildll
cwtl
repz
sbb
shrb
out
les
in
push
sub
ret
push
bound
mov
outsb
movsl
pop
test
cltd
or
les
and
mov
scas
push
mov
cmp
pop
lods
cmpsb
pop
pop
mov
jmp
icebp
lds
ss
mov
inc
adc
aad
pop
cmpsb
sub
mov
pop
push
adcl
cld
mov
outsl
aam
imul
adc
and
in
loopne
repz
pop
push
xor
lds
test
mov
lods
loopne
aad
jb
pop
sub
leave
add
jl
jmp
mov
push
pusha
aaa
aaa
push
mov
adc
loope
inc
add
fs
and
call
mov
jno
push
movsb
pushf
inc
xor
push
jnp
sbb
shrd
cmpsb
cmpsb
dec
sub
push
sarb
test
dec
repnz
pushf
sarb
dec
jbe
shl
std
sub
shlb
adc
sbb
ja
cmp
pop
mov
inc
jp
lock
xlat
dec
push
mov
mov
cmpsb
cmpsl
xchg
pop
js
inc
jg
add
and
call
sbb
jl
push
inc
ret
pop
stos
and
sub
scas
add
jnp
in
or
int
fisttpll
fidivrl
lea
inc
fimuls
cld
adc
inc
test
shrb
and
aaa
sub
pop
mov
mov
cwtl
mov
arpl
es
pop
shl
nop
sbb
call
push
lods
jecxz
and
test
enter
xchg
push
cmc
jl
movsl
or
icebp
loopne
adcl
mov
inc
pop
popf
xor
rolb
mov
push
aam
sub
ljmp
jge
cmp
cmp
xorl
add
hlt
jmp
rcrb
pop
loop
cmp
fsubrl
pop
push
out
rcll
test
lods
scas
xchg
in
push
or
into
push
lret
addr16
mov
pop
lahf
lock
pop
push
jl
adc
and
jge
push
jge
mov
pop
scas
in
cld
mov
push
jge
mov
xchg
xorl
pop
or
jnp
pusha
sub
cmpsb
mov
mov
pop
les
mov
in
pop
outsl
test
add
mov
and
pushf
daa
and
mov
insb
int
rorb
testl
add
push
and
sub
lock
cltd
arpl
sub
pop
scas
inc
dec
xchg
popf
bound
ja
or
cmpl
lcall
xlat
mov
jmp
leave
flds
into
lods
sub
fs
sti
jo
add
dec
sbb
push
pusha
mov
adc
ret
cmpb
mov
cltd
mov
ds
lahf
sar
pushf
xor
jl
mov
mov
xchg
sbb
push
out
inc
mov
mov
add
cmpsl
cwtl
jmp
or
mov
cmp
jae
pop
das
std
loopne
daa
cmp
in
push
cltd
stos
or
sbb
push
cwtl
cmpsl
mov
test
ss
pop
mov
into
addb
sahf
xor
jnp
lea
inc
stos
test
push
lock
jae
jbe
movsl
cs
mov
push
adc
mov
jp
inc
sub
adc
jb
push
pusha
pusha
pop
xor
in
xlat
jecxz
or
xor
inc
icebp
out
cmp
lods
inc
aam
sbb
test
mov
int
sub
pop
xlat
mov
les
inc
fmul
in
mov
mov
jnp
fcoms
lea
test
xchg
sbb
mov
add
lret
cwtl
pop
repz
subl
scas
jb
mov
pop
sub
sub
cltd
jno
cmpsl
jae
pop
and
cmp
cmp
xchg
aam
and
cmp
and
daa
pop
sbb
sbb
mov
out
repnz
insb
pop
lds
sqrtps
xchg
xor
sbb
sahf
js
mov
mov
ficompl
or
pop
dec
ret
jns
mov
ret
xor
pop
ja
cmpsb
adc
xor
bound
dec
out
cs
pop
addl
mov
and
cmpsb
js
cmp
or
xlat
pop
pop
test
call
cld
mov
sbb
push
lret
mov
lcall
and
cltd
ficoml
sub
repnz
daa
mov
jb
mov
cmp
addr16
pushf
ret
cmpsl
dec
add
mov
jo
daa
xchg
cmp
jbe
faddp
jmp
cmp
jno
jmp
jp
out
inc
add
mov
mov
push
in
add
out
pop
rclb
sub
mov
mov
shrb
jae
xchg
ja
in
jecxz
xor
dec
sub
mov
push
das
fdiv
push
testb
and
xor
add
pop
cmp
mov
xchg
fidivrs
movsb
or
enter
loop
clc
jp
call
pusha
add
dec
jl
sbb
loop
enter
cld
dec
inc
mov
out
or
stos
mov
xchg
les
movsb
imul
inc
xchg
fstps
dec
push
xchg
adc
sub
popa
imul
test
xchg
popa
mov
addr16
daa
mov
and
and
mov
push
cmc
mov
adc
fisttpl
mov
stos
cld
xchg
lea
repnz
cmpb
inc
pop
sarl
xchg
popa
arpl
inc
push
jp
dec
stos
pop
adc
sub
push
adc
inc
insb
mov
in
mov
cltd
xchg
out
adc
or
scas
pop
into
or
xor
adc
mov
pop
outsb
push
inc
pop
and
cs
pop
js
loopne
and
push
lret
jb
jg
lods
shrl
jmp
xchg
stos
mov
sti
pop
mov
subl
pusha
adc
shll
push
das
ss
jo
jne
jns
xchg
testb
and
enter
mov
aad
popl
xchg
xchg
fisttpll
fildl
sub
add
fstps
fxch
outsb
xor
shld
mov
fsubrl
pop
std
stos
rsm
enter
sbb
mov
jg
cmp
jb
movsb
not
rcl
xor
mov
inc
push
push
pop
test
mov
das
pop
ret
push
dec
dec
sbb
add
mov
lea
mov
mov
ret
cmc
inc
jmp
push
jno
and
sub
cmpl
rorb
rol
into
sbb
imul
dec
and
idiv
and
xor
out
or
fmulp
or
in
je
mov
and
int
fcmovnu
add
arpl
inc
out
dec
add
cmp
hlt
subb
mov
scas
je
adc
pop
pop
dec
enter
xchg
ret
lock
xchg
mov
mov
sahf
cmpsb
push
inc
movsb
inc
add
arpl
mov
jp
ja
sbb
pop
push
jp
or
sbb
push
icebp
icebp
lods
sub
or
xchg
cmc
jmp
mov
shl
mov
cmp
adc
sub
and
jg
jle
xor
add
mov
jl
leave
jl
lea
ret
enter
mov
adc
pop
pop
icebp
pop
rcrb
jge
insl
jle
jge
xor
or
add
out
xor
insl
sbb
js
jp
pop
test
inc
lock
outsb
lods
mov
fwait
inc
repnz
adc
andl
cmp
push
mov
lret
aaa
xor
call
cwtl
and
stos
lret
xchg
mov
mov
test
mov
pop
test
jb
mov
jg
cmpsl
xchg
out
push
adc
lret
jg
lock
xchg
mov
jmp
push
shl
xor
pop
push
out
mov
inc
sarb
fdivrl
cmpsl
jae
mov
insb
iret
adc
incl
test
lods
sub
cmp
leave
imul
lds
hlt
inc
pusha
fldenv
stc
test
aas
std
imul
arpl
icebp
es
lods
divb
test
repz
xchg
aad
stos
adc
int3
dec
cmp
ror
mov
in
insb
sbb
xchg
add
test
cli
push
xchg
cld
push
fisubs
jmp
mov
push
fidivl
push
push
aad
or
cmc
sti
dec
xor
add
and
sbb
or
addl
push
iret
pop
jg
push
aaa
and
push
xchg
in
xchg
dec
inc
inc
jbe
jp
ss
add
add
sti
rcrl
loope
push
popf
push
cmpsb
jecxz
and
aas
mov
push
xchg
pop
incb
movb
pop
xlat
insl
mov
and
push
pop
sbb
mov
js
sbb
jo
jp
sbb
sub
push
push
scas
lret
int3
cltd
ror
stos
inc
sbb
push
fidivs
sub
leave
inc
fcomi
jmp
shr
dec
xor
mov
imul
xchg
dec
int3
dec
jno
inc
xchg
xchg
test
dec
xor
gs
dec
xor
sbb
add
movsb
and
insb
jmp
adc
pop
or
mov
jno
xchg
shrb
leave
pop
fidivrl
data16
push
mov
imul
fsubrp
pop
or
jmp
jno
mov
daa
pushf
stos
int
adc
orl
pop
cmc
in
cmp
mov
cmp
sbbb
movsl
mov
fiaddl
xor
lods
mov
xor
mov
add
jnp
out
xchg
lret
icebp
hlt
and
add
cmp
sbb
lods
popa
std
lret
xchg
cmp
pop
ljmp
out
and
shll
lea
mov
jb
pop
inc
jns
mov
adc
lret
push
jae
mov
icebp
fcoml
mov
dec
add
or
jg
ficomps
jbe
xchg
fldenv
mov
aad
pop
push
pop
mov
cmpsl
mov
mov
mov
lahf
mov
or
addb
xor
test
pop
xchg
lret
sbb
stos
dec
repnz
cld
xor
adc
mov
pop
add
out
sub
fndisi(8087
jnp
lcall
test
mov
in
nopl
pop
pop
or
mov
or
into
ret
mov
sbb
cmc
imul
shl
mov
adc
inc
rclb
jns
in
jnp
repz
cmpsb
or
mov
ljmp
imul
rol
jmp
cltd
scas
jne
add
loop
sbb
mov
add
lret
push
xor
icebp
in
cmpsb
sbb
mov
stos
xchg
sub
jecxz
ret
cmp
sub
pop
repz
mov
inc
push
and
push
fistps
cmp
mov
daa
pop
push
pop
aam
loopne
out
sub
test
fdivrs
stos
fldl
dec
scas
and
out
pusha
test
mov
aam
daa
add
sti
jle
push
enter
mov
frstor
or
lods
lds
add
sbb
add
bound
sarl
ja
daa
aas
into
jo
push
sbb
sub
ljmp
push
cld
mov
sub
mov
dec
gs
aaa
ja
movsl
repnz
push
movsl
out
push
xchg
mov
daa
test
addb
xor
or
mov
popf
pop
xchg
add
push
ss
loope
jo
test
cmpsb
mov
insl
jg
icebp
adc
out
nop
negb
jmp
andl
arpl
jns
add
loop
ffreep
cmpsl
lock
push
aaa
aad
in
incl
frstor
pop
bound
pop
sbb
fsubs
loope
jns
test
mov
shlb
sub
adc
mov
les
xor
inc
xor
xor
in
jnp
repnz
out
push
mov
sub
es
sub
lea
sahf
fidivrs
dec
fnstsw
xchg
pop
pop
or
push
push
imul
js
or
loopne
lock
rep
ret
out
cmpsl
push
mov
xchg
pop
mov
and
xor
inc
push
pop
push
ret
faddl
enter
rolb
pop
push
mov
xor
push
xchg
mov
into
add
push
divl
inc
shrl
push
push
inc
outsl
xchg
jle
test
cmpl
add
inc
pop
movsl
pop
out
push
insl
push
mov
or
push
xchg
push
test
adc
push
imul
xchg
cmp
adc
ljmp
mov
sub
dec
aaa
jecxz
out
xchg
pop
insl
rorb
int
imul
stos
dec
mov
hlt
fwait
lret
out
test
sbb
add
lea
icebp
dec
mov
cwtl
out
sbb
inc
adc
push
cmp
jne
jo
add
imulb
clc
dec
cltd
jg
sbb
mov
adc
mov
xchg
pop
cltd
mov
pop
mov
pop
ficompl
pop
pop
data16
mov
ljmp
jg
or
shlb
xchg
and
shrl
or
lea
mov
mov
pop
lahf
xchg
xchg
bswap
inc
aaa
out
jmp
stos
dec
jmp
or
ret
cwtl
icebp
and
fnstcw
ss
mov
leave
sub
into
das
push
fildl
outsb
sub
rcl
gs
data16
in
mov
imul
inc
cmpl
adc
inc
in
movsb
cltd
or
pop
mov
mov
dec
adc
mov
sub
call
iret
push
sub
jl
adc
jb
adc
test
cmpl
mov
in
sub
jge
out
mov
ret
lds
mov
xchg
cmp
fbstp
adc
les
gs
rcl
movsl
push
jne
mov
in
xchg
dec
xor
sahf
xchg
jge
jle
loope
rorb
and
xchg
daa
or
pop
adc
cmc
or
sub
xor
out
xlat
mov
cld
call
and
ror
or
test
inc
fiaddl
xchg
xchg
int3
not
xchg
enter
mov
sbb
iret
js
jecxz
mov
or
jno
sbb
jg
xchg
cltd
in
jno
lahf
bound
jne
xor
fcoms
xchg
mov
out
push
mov
stos
inc
lret
mov
ljmp
cltd
jle
xor
mov
sub
or
daa
in
push
fstps
hlt
sub
data16
popf
push
or
loop
sub
call
cmp
orl
push
cmpsl
sub
jno
aam
sbb
scas
xor
dec
test
pop
stos
xchg
pop
mov
or
jle
call
inc
push
jle
sbb
xor
stc
in
fists
or
adc
out
repz
dec
mov
sub
js
mov
push
mov
insl
jno
filds
xchg
fsubs
and
add
add
insl
xor
call
ds
mov
stos
stos
sahf
scas
inc
clc
xchg
jbe
stos
and
inc
enter
adc
pop
rol
call
clc
push
or
pop
lock
in
in
pop
pop
sbb
and
insl
mov
roll
out
jmp
cmp
sub
hlt
icebp
jle
jne
sahf
dec
and
or
push
test
inc
repnz
movsl
mov
mov
inc
in
lret
push
aaa
in
pop
mov
imull
pop
dec
pop
push
clc
idivl
xchg
movsl
mov
push
and
push
lock
enter
inc
push
movsb
je
fnstenv
xchg
push
mov
adc
mov
xchg
mov
inc
les
scas
xor
mov
jecxz
imul
inc
insl
sub
adc
pop
imul
mov
push
pop
fwait
cld
aas
rcr
shlb
bound
loopne
mov
mov
cmp
and
nop
popw
leave
out
jno
xor
cmpl
mov
or
cmp
mov
jbe
sar
cmp
mov
or
mov
mov
xchg
inc
sub
insb
adc
pop
mov
lcall
push
popa
jbe
jmp
outsb
sub
dec
sahf
fcmovbe
xchg
push
mov
cmc
inc
jb
push
xor
int3
dec
enter
or
push
inc
aas
cmp
jg
xor
sub
adc
xchg
inc
sub
xchg
pop
rorl
les
pop
push
sbb
pop
or
lods
jbe
int3
in
cld
imul
out
sbb
test
mulb
push
aam
les
jp
sbb
push
rcll
xchg
imul
pushf
or
adc
and
or
push
aas
push
xor
flds
cmpl
movsb
cmp
cmp
or
mov
push
sub
je
lahf
lret
andb
shl
add
fdivrl
push
or
push
inc
mov
pop
bswap
ss
cmp
jbe
shll
sub
pop
stos
stc
xchg
jmp
fildl
fisubs
adc
mov
mov
pop
shr
ror
xor
xchg
pop
sub
test
mulb
xor
aad
in
jno
adc
mov
cs
sub
inc
in
cs
pop
mov
fsubr
cwtl
and
fwait
in
pop
pop
fsubs
dec
push
sbb
and
out
mov
ja
mov
pop
aas
in
outsb
mov
jne
rol
mov
mov
inc
lock
test
test
sub
lock
pusha
in
cmp
and
cmp
and
pop
xchg
cmp
lea
pop
mov
xchg
sub
jb
out
nop
cs
mov
push
imul
pop
mov
cli
pop
xor
lret
sub
mov
shlb
dec
es
mov
test
js
lods
xchg
fdivr
pop
addl
push
jg
out
iret
lea
jg
pop
sbb
int
pop
inc
sbb
repnz
pop
jle
loopne
inc
rorl
ljmp
testl
daa
cmp
cmp
sub
jo
mov
sbb
and
pop
sub
adc
inc
ficomps
xchg
lds
movb
insb
jnp
lret
mov
sbb
adc
imul
adc
repnz
roll
adc
fidivs
daa
mov
dec
sub
inc
repz
mov
stc
popa
pop
adc
mov
sub
cs
sti
mov
jo
push
data16
jle
ss
jge
sbb
fisubrs
js
push
add
cmc
cmpsb
das
rorb
inc
call
std
scas
mov
popf
test
push
add
pop
sub
fnstsw
fstpt
data16
lods
imul
dec
outsb
xchg
cmp
inc
movsb
inc
jecxz
mov
push
sarl
cli
and
sbb
out
rcrb
mov
jnp
push
lret
adc
dec
mov
movsb
lods
and
adc
lea
gs
mov
cmp
clc
mov
loop
pop
jbe
jnp
mov
and
push
dec
pop
mov
mov
add
add
imul
cld
inc
mov
jo
cs
sbbb
mov
and
test
mov
shll
sbb
sub
scas
insl
and
inc
sbb
push
bound
dec
nop
xor
dec
inc
es
test
push
mov
push
adc
mov
int3
loope
mov
in
addr16
movsl
scas
out
scas
aaa
ja
int3
in
popf
int
shrl
jmp
cli
or
push
fadds
rcl
add
cmp
xlat
push
sti
nop
outsl
adc
shll
xchg
and
pushf
sub
cwtl
mov
es
int
push
push
test
aad
push
test
pop
pushf
mov
loop
repz
fldt
ds
xor
stos
adc
mov
adc
xor
push
les
and
xor
dec
pop
xchg
inc
enter
imulb
jbe
dec
add
inc
and
ret
xchg
dec
inc
and
add
xor
adc
jecxz
cmp
cmp
repnz
add
mov
dec
sbb
out
mov
mov
aaa
sbb
add
pusha
lret
loope
jecxz
adc
push
out
xchg
pop
fwait
and
pop
mov
sbb
je
fbstp
test
roll
mull
call
sbb
aam
nop
jp
jl
push
jbe
xor
inc
sbb
cmc
sbb
fucomip
mov
addb
dec
popa
mov
cwtl
ss
sub
and
fcoms
jge
movsl
xchg
jo
iret
jle
jle
shl
aas
and
push
repz
popa
and
push
iret
push
in
push
push
roll
jb
add
mov
lret
aam
insb
dec
out
je
mov
and
and
cmp
push
mov
ret
or
mov
dec
cmc
aaa
fs
stos
sub
loope
pop
adc
mov
aas
pop
xchg
fs
icebp
dec
dec
fwait
xchg
sbb
jg
out
filds
sbb
xor
imul
gs
fwait
shll
out
cmpsl
pop
lock
testb
ret
in
cltd
sbb
lahf
xor
clc
rorb
adc
sub
push
push
jne
ret
push
daa
xchg
mov
jbe
cld
pop
inc
or
stos
adc
repz
xchg
test
stc
in
mov
mov
je
addr16
mov
pop
dec
les
adcl
sub
cmc
mov
negl
and
jge
in
dec
fistl
pop
add
jno
pop
cmp
xchg
sarl
push
mov
mov
mov
xor
or
xor
cmpsl
adc
mov
jnp
cmp
jl
movsl
sbb
adc
sub
incb
cmp
movsb
test
lret
mov
orl
fnstsw
icebp
push
push
or
ret
push
pop
push
jno
mov
adc
xchg
xchg
adc
sqrtps
gs
roll
decl
or
fistps
popf
scas
or
loopne
push
push
adc
test
iretw
mov
ljmp
repnz
xorb
or
sbb
mov
inc
xor
push
xor
es
cmp
ror
test
dec
in
xchg
mov
xchg
push
jle
adc
in
xor
lock
lea
lret
jne
pop
das
imul
std
repz
or
dec
xor
adc
mov
xchg
cmpl
sti
push
repz
scas
stc
sbb
xchg
inc
xadd
and
mov
or
adc
sarb
sub
mov
mov
adc
lods
or
sbb
mov
sub
rolb
and
jmp
mov
mov
xchg
pop
lea
push
pop
bound
inc
push
out
push
pop
cmp
addl
jecxz
xchg
inc
pusha
nop
pop
dec
sbb
shll
fisttpll
add
frstor
testl
mov
lock
call
xchg
cmp
cmpl
pop
xor
push
aam
push
stos
mov
ljmp
lret
imul
cmp
out
add
jl
popf
jmp
push
cmp
sub
dec
pop
dec
in
pop
adc
sarb
sti
cmpb
xor
lret
inc
cmp
sub
mov
lea
out
mov
outsl
pop
xchg
cltd
xor
daa
cli
in
bound
mov
insb
jmp
inc
int
dec
cmpsb
shlb
aas
in
sbb
jl
in
xchg
scas
sbb
popf
mov
sbb
enter
jp
mov
sbbl
cmp
mov
and
xor
inc
inc
data16
test
movsb
adcl
lahf
cld
imul
xchg
and
sub
inc
sbb
in
jecxz
mov
xor
call
and
daa
mov
sub
insl
jle
fisubrs
sub
jecxz
adcl
outsb
mov
and
es
adc
sahf
shlb
xor
add
mov
inc
enter
dec
int3
cs
mov
jo
jne
icebp
mov
rcrl
sub
xor
add
adc
jae
lcall
mov
rcll
or
out
xchg
mov
xchg
call
mov
sbb
insl
ret
mov
and
jne
cmp
or
and
add
lds
out
shrd
sub
ret
into
and
mov
bound
stos
ficoml
mov
fstpt
arpl
or
out
inc
push
or
out
cmp
mov
test
std
cs
call
jne
or
popa
add
rcrb
outsl
js
sbb
stos
dec
mov
aam
cmp
sbb
hlt
insl
lcall
sub
scas
and
cmc
inc
inc
pop
sti
aad
adc
xor
lods
jnp
pusha
clc
setge
ficompl
call
popa
pusha
inc
rolb
lahf
xchg
and
xchg
mov
adc
dec
sbb
sbb
and
jno
lock
fs
jo
push
lods
insl
arpl
test
je
mov
idivb
pop
roll
push
fnstsw
call
mov
pop
ret
fimuls
mov
sti
dec
sbb
aas
out
mov
js
mov
dec
xor
xor
jle
cmp
dec
data16
jg
mov
adc
xor
dec
push
mov
fxch
sub
ss
js
push
cld
xchg
clc
mov
sub
sub
test
lods
lea
iret
hlt
push
mov
mov
mov
hlt
dec
jecxz
mov
out
or
sub
sub
aad
push
and
push
push
dec
push
dec
mov
lds
movsb
inc
xor
xchg
sbb
cmp
daa
inc
cmp
pushf
dec
mov
bound
inc
bound
fistps
repnz
lcall
add
in
sub
xchg
pop
mov
mov
sbb
mov
lret
fdivl
lock
cmp
ret
mov
xchg
add
push
cmp
stc
sbb
pop
inc
jnp
mov
cmp
inc
push
sub
xor
std
cwtl
or
je
cltd
or
add
aaa
addr16
pop
lcall
or
fwait
jecxz
adc
popa
cmpsl
in
repnz
sbb
arpl
cmp
mov
mov
orb
in
sti
jecxz
mov
hlt
stc
dec
test
or
add
mov
dec
int3
sbb
daa
cmpsl
cmpsl
shl
test
push
or
sbb
testb
out
or
ret
movsl
in
ret
addr16
mov
dec
outsb
lods
lret
mov
repnz
test
push
jne
mov
xchg
jg
push
int3
sub
mov
add
insb
in
clc
cmp
and
inc
xchg
subb
xchg
push
arpl
push
inc
mov
xor
sti
mov
push
pop
jns
test
xor
loopne
jmp
or
fisttps
addr16
cmp
fadd
test
int
mov
mov
sub
xchg
jle
andb
int
into
add
sahf
dec
sti
pop
mov
and
xchg
and
push
iret
fcmovu
sub
and
or
add
cmpsb
pop
cmpsb
cwtl
jb
ret
lea
ds
cli
stos
sbb
xchg
mov
int3
xchg
imul
push
xor
xchg
jl
icebp
mov
pusha
or
cmp
fs
jns
lods
and
inc
xchg
xor
outsb
subl
xlat
mov
or
sbbl
bnd
inc
push
fwait
mov
xchg
dec
xchg
popf
cli
adc
xchg
jbe
sbbl
nop
or
imull
dec
rorl
mov
jbe
push
lahf
xor
test
mov
movsb
jb
jnp
dec
sahf
dec
jge
lods
push
repnz
cmp
movsl
fs
enter
cmp
add
push
sbb
mov
mov
add
pop
jp
js
test
add
fnstsw
cs
sub
sub
inc
in
stos
mov
packuswb
mov
repz
adc
sti
mov
sbb
lock
xchg
mov
scas
add
fisubrs
idivb
mov
sbb
fs
pop
pop
clc
cmpsb
or
lds
cmp
push
fidivs
or
xchg
dec
xchg
mov
cmp
mov
lock
fisttpl
jl
mov
adc
jbe
aaa
or
cwtl
popl
mov
dec
sbb
adc
mov
push
out
cli
pop
jle
data16
pop
or
test
inc
sub
pop
rclb
rorl
clc
shr
xor
mov
imul
ds
push
sbb
jne
xor
xor
xor
rolb
and
jl
aas
cwtl
sub
xor
jae
xchg
aas
ss
inc
js
in
aad
mov
jmp
xchg
pop
fdivs
aam
pop
pop
scas
cltd
jo
out
out
mov
jge
mov
lds
push
cmp
out
add
or
fcoms
out
stos
jl
cld
pop
jae
int3
push
cmp
enter
pop
inc
dec
ret
je
lret
dec
inc
cmp
dec
inc
notb
addr16
cld
insb
popl
sub
mov
push
mov
lahf
pop
jne
aam
jge
push
cltd
sub
jbe
fists
mov
out
into
push
mov
pop
clc
andl
pop
jle
daa
mov
inc
dec
lret
test
cmp
jle
add
les
movsl
daa
push
fucomp
sbb
call
or
testb
repz
data16
je
xor
xchg
dec
orb
insb
jne
bound
dec
push
mov
or
push
dec
jmp
addr16
gs
stos
and
inc
mov
cmp
pop
dec
fmuls
in
out
cmc
loop
jae
out
std
test
gs
pop
push
lods
jle
aad
repz
aam
rorl
inc
mov
push
cltd
push
insb
and
fcmovnb
cmp
sub
cmc
pop
mov
mov
or
mov
xchg
lret
xchg
stos
mov
fildll
sub
movsl
dec
popa
scas
imul
push
movsl
pusha
xor
into
inc
les
or
out
popf
sub
rcrl
arpl
sbb
loopne
fiadds
pushl
enter
fldenv
sahf
lret
inc
mov
jns
out
sub
jnp
pop
push
push
xchg
cmp
jl
jo
in
adc
js
daa
xlat
pop
rcrb
daa
mov
xor
adc
add
ja
push
rorl
jg
xchg
cmp
adc
pop
sarb
xor
out
dec
xchg
add
fiaddl
jo
rcl
xchg
jno
or
ljmp
test
cs
cmp
jle
nop
xchg
jmp
lahf
cs
andb
inc
stos
mov
mov
sbb
jmp
xlat
out
or
sbb
mov
lcall
ret
iret
iret
mov
test
shll
das
out
mov
lods
dec
sub
pop
or
sahf
jne
pop
mov
cmp
inc
insl
adc
pop
or
mov
dec
and
sbb
inc
xor
xchg
mov
cli
outsb
inc
paddusw
jbe
ds
dec
icebp
mov
insl
pop
les
out
push
pop
and
push
mov
out
mov
je
push
xchg
sbb
dec
nop
xlat
sti
rol
mov
sbb
mov
hlt
sub
dec
mov
in
stc
int
fnsave
add
ret
mov
sti
dec
mov
inc
in
hlt
mov
imul
jae
or
mov
xor
test
mov
or
mulb
cmp
and
or
loop
dec
lock
inc
jb
mov
gs
popf
leave
sbb
xor
fnsave
movsb
xlat
add
xor
push
and
sbb
jge
ror
push
in
movsl
dec
mov
test
and
push
jne
adc
xchg
push
xor
and
mov
sub
dec
mov
sahf
and
cmc
mov
xchg
in
jl
into
cmp
push
outsb
les
loopne
jg
mov
xchg
into
mov
cmp
sbb
leave
jp,pn
mov
int3
dec
je
xor
sbb
xor
xchg
dec
xor
inc
mov
sub
les
sbb
dec
and
xchg
aam
subl
add
test
sbb
push
mov
adc
xchg
ja
aaa
inc
jmp
cmp
pop
jmp
cmp
mov
dec
cmp
sub
mov
cmp
scas
xor
pop
test
fldcw
popf
sub
jnp
fwait
pop
cmc
adc
mov
ss
out
mov
xor
push
ja
mov
mov
dec
enter
push
inc
std
aas
std
shrd
in
mov
dec
mov
mov
cli
fs
inc
push
push
pop
das
aad
sbb
mov
add
clc
leave
and
jl
push
sub
sahf
insb
sub
sti
lea
clc
xor
mov
bound
ret
add
mov
or
inc
sub
lods
jne
pop
in
cltd
or
xchg
push
test
out
mov
fists
int
shll
mov
mov
add
fwait
shrb
xchg
cmp
gs
sbb
movsb
pop
nop
mov
adc
aam
in
subl
inc
cwtl
testl
adc
inc
and
xorb
imul
js
orl
aaa
movsb
mov
stos
mov
jb
sub
pop
pop
outsb
push
jnp
pop
jecxz
shll
jp
xchg
out
sub
inc
pop
vhsubps
sbb
pushf
push
pop
fists
xchg
jge
pop
xchg
mov
mov
jb
mov
and
outsl
mov
mov
icebp
xchg
mov
stos
gs
pop
sub
mov
out
inc
pop
push
addl
movsl
lds
test
js
je
jns
lods
frstor
cmpsl
jg
popa
ja
jne
inc
mov
iret
scas
insb
jle
sbb
and
push
add
dec
push
add
addr16
enter
mov
add
mov
sub
cltd
sub
enter
sub
aas
adc
lret
mov
push
outsb
add
add
mov
out
iret
decb
add
mov
clc
imul
cs
cld
pop
mov
mov
inc
push
lcall
aaa
aaa
nop
add
ja
loop
sbb
pusha
jmp
lds
sub
popf
and
out
out
inc
clc
cmp
jle
adc
push
dec
dec
in
mov
jmp
loop
scas
mov
push
and
and
clc
push
movsb
inc
cwtl
jo
lret
sub
sbb
cmp
add
cmp
push
in
push
gs
test
shrl
mov
sub
pop
mov
inc
push
imul
ret
lahf
enter
cltd
mov
insb
je
push
shl
jmp
mov
push
pop
jmp
movsl
sarb
fldenv
xchg
nop
test
xor
inc
push
mov
mov
push
loopne
inc
cltd
lcall
jb
and
sub
and
das
sbb
out
dec
dec
clc
mov
xchg
cmp
frstor
add
jmp
scas
and
cmp
shll
lret
add
mov
in
test
or
or
mov
adc
enter
push
dec
dec
pop
sub
cmpsl
fsubrl
in
mov
sbb
xor
xchg
jne
pop
jo
imul
add
adcb
test
lcall
push
pop
jae
adc
nop
add
subl
add
fwait
push
xor
or
adcl
push
add
pop
int3
or
out
adc
fisttps
adc
cmp
iret
stos
mov
das
xchg
and
out
ss
leave
cmp
or
icebp
mov
and
movsb
bound
inc
shll
les
adc
jnp
das
mov
add
dec
mov
jmp
test
mov
out
mov
out
popa
fstl
pop
into
xlat
cmpsl
and
ret
repz
sub
cmp
mov
outsl
ret
sub
xchg
rclb
notb
and
add
stos
jb
or
stos
repnz
pop
xlat
dec
mov
pop
js
pop
push
aas
fs
arpl
push
call
movsb
ja
jnp
sahf
stc
fldcw
out
pop
xor
dec
out
sbb
xor
or
sbb
xor
inc
js
das
lret
daa
xchg
push
lret
iret
arpl
push
dec
movsb
mov
loop
test
cwtl
xor
mov
jae
movsl
push
nop
das
mov
or
lods
xchg
popf
int
jg
in
in
sahf
and
outsl
sub
jbe
or
call
mov
cmp
or
pusha
fidivrs
pop
aad
rcll
lods
sbb
and
cmpsb
and
aad
cmp
xchg
or
sub
adc
and
aad
mov
faddl
lock
roll
scas
bound
xor
jle
sub
jp
and
cld
or
sub
pop
arpl
dec
dec
jae
hlt
add
push
std
push
mov
test
cmpsb
sahf
jnp
int3
mov
inc
jne
add
mov
orl
ds
fst
inc
and
cld
or
mov
mov
jge
fucomp
push
inc
xchg
xchg
pop
mov
jno
mov
sub
xor
insl
iret
out
aad
xchg
adc
std
sti
ficoml
or
sub
inc
or
inc
lcall
add
xchg
mov
lret
pcmpeqd
out
lret
into
xor
sahf
shlb
lcall
xor
inc
ja
sbb
push
insb
push
dec
cmp
loop
sti
ljmp
ja
push
xchg
mov
jae
pop
or
mov
add
std
int
mull
rolb
add
inc
in
xor
pop
loop
or
dec
mov
sbb
pop
adc
fdivr
push
add
and
test
jl
scas
jge
push
jecxz
sub
test
inc
scas
fwait
pop
dec
mov
mov
xor
test
mov
shll
aam
xchg
pop
loope
adcb
and
fwait
les
jne
and
ss
and
imul
push
adcb
or
repnz
lods
mov
scas
out
hlt
aad
cli
testl
dec
cmp
and
xor
pop
and
jge
xorl
movsb
add
jno
mov
jo
sbb
dec
sbb
jp
xor
ds
mov
xor
jnp
xchg
imul
cmp
jne
pop
mov
and
xor
add
repnz
imul
xor
cltd
lds
jno
fmuls
stc
mov
outsb
jns
jne
sub
push
fisubrl
stos
jle
mov
cld
sbb
out
dec
push
cmc
jle
js
mov
scas
sub
aam
pop
inc
push
dec
popf
gs
mov
enter
adc
ljmp
xchg
bndldx
gs
in
or
scas
adc
xchg
pop
ret
pop
mov
sbb
dec
clc
mov
xchg
adc
ud1
lea
xchg
loope
xchg
jg
jmp
cmpsb
cmp
std
notb
lods
inc
inc
cmp
cs
inc
jb
dec
lcall
loopne
fdivrs
aas
mov
cld
fsqrt
aad
sub
fstp
cli
cmp
xchg
dec
insb
mov
dec
test
xor
aad
cwtl
mov
out
insl
js
cmp
movsb
loop
lods
pop
inc
fiadds
cld
inc
dec
add
mov
test
cs
mov
xchg
cmpsb
scas
bound
lock
data16
pop
adc
pop
add
pop
aam
aad
sti
sti
popf
lret
xlat
adc
push
addr16
push
ror
sub
rol
ljmp
push
xchg
adc
add
push
ret
cmp
movsb
push
aad
in
xchg
push
xlat
cwtl
add
out
pop
mov
pop
test
or
aas
stc
fcmovnb
xacquire
inc
into
mov
mov
cmp
mov
cmp
adc
fcmove
adc
mov
or
insl
shl
aad
inc
sbb
sbb
jae
or
outsb
leave
or
add
mov
sub
repz
xor
icebp
cmp
or
leave
sub
sbb
sar
nop
jb
push
mov
xchg
pop
in
mov
mov
negl
dec
inc
in
xchg
xchg
xchg
fs
repz
bound
mov
insl
push
xchg
pop
dec
loope
lahf
cmc
xor
fdivl
pop
out
filds
add
imul
fisttpl
jb
inc
stos
mov
imul
sub
shlb
jno
leave
cmpsl
cs
sub
and
xchg
jae
cmc
jb
push
sub
stos
call
cs
addr16
mov
adc
dec
pop
or
rcll
pop
cwtl
jns
pop
mov
pop
loope
sbb
and
push
pop
xchg
pop
scas
mov
lock
cmp
pop
rcll
cmp
rorb
pop
fbld
xchg
cmc
jmp
addb
sub
or
inc
icebp
scas
lock
inc
test
int3
fistpll
dec
or
mov
lcall
stc
daa
mov
dec
pop
mov
jge
ret
xchg
hlt
mov
movsb
enter
add
mov
or
jae
add
adc
ret
sbb
mov
xor
stc
sbb
out
int
or
or
mov
jb
mov
mov
insl
push
push
pop
add
xor
xchg
sbb
sub
cmp
push
arpl
lds
xchg
mov
mov
jp
sub
push
repnz
shl
mov
or
ljmp
aas
loop
aaa
nop
clc
sarb
xchg
je
pop
xchg
sbb
sbb
loope
fbstp
push
insl
jb
inc
inc
ds
loopne
popa
mov
xchg
lea
sub
inc
shrb
jb
mov
mov
xchg
ret
lock
mov
jmp
outsl
lods
rcrb
cmp
sub
les
pop
jl
mov
sub
js
adc
pop
or
aas
sub
xlat
sbb
negl
push
add
std
mov
xchg
mov
push
sbb
sub
lret
out
repz
data16
cmp
push
add
and
and
push
repz
lcall
lds
adc
hlt
add
iret
mov
jns
jbe
xor
inc
or
in
pop
sub
iret
mov
call
je
test
fcompl
scas
cld
fdivs
and
cmp
push
inc
in
mov
mov
or
mov
les
data16
xchg
dec
or
mov
add
rcrb
sub
rclb
and
xchg
and
add
push
mov
jle
mov
or
fistps
call
das
mov
or
and
xchg
mov
xor
leave
xchg
scas
adcb
pop
cmpsl
shll
push
in
inc
ja
imul
lods
xchg
das
add
cmp
out
adc
gs
xor
in
insb
lcall
icebp
xor
ja
rcrb
fists
jle
fwait
iret
das
jmp
xchg
fisubs
mov
adc
inc
iret
clc
cld
jnp
xor
rcrl
lcall
stos
jg
aad
ja
mov
add
out
inc
pop
add
aad
push
xchg
mov
inc
cmp
xor
fimull
jge
or
inc
int3
dec
movsb
pop
clc
jge
cld
add
lea
pop
mov
sub
andl
pusha
ss
adc
adc
cmc
push
jmp
iret
cmp
sub
les
cld
mov
xor
push
movsl
rclb
lods
jbe
push
mov
or
cs
add
pop
fwait
stos
call
pop
shlb
mov
sti
push
adc
popf
lahf
aas
mov
test
adcb
sarl
test
mov
mov
mov
jmp
scas
push
repnz
pop
jae
mov
sahf
loope
mov
sbbl
cld
xchg
ret
pextrw
cltd
and
sbb
mov
hlt
pop
icebp
addl
test
pop
adc
add
pop
jno
fsts
lods
outsl
fisttps
fmuls
popa
lods
cli
outsl
and
mov
add
clc
lcall
push
test
sti
dec
test
add
xor
mov
jb
pop
pop
inc
into
insb
test
xchg
test
sbb
mov
cmp
test
insl
stos
jnp
dec
push
fistps
push
ret
or
and
andb
push
adc
push
cmovge
adc
imulb
xor
cmp
sub
shl
sbb
inc
push
jp
leave
mov
test
and
mov
sti
pop
sbb
test
mov
fsubl
pop
in
and
sub
mov
mov
adc
into
in
mov
movsb
fdivs
mov
lcall
xor
iret
jmp
sti
rclb
lds
popa
or
shrl
gs
std
or
sub
fstl
add
out
cwtl
andb
push
jg
shll
push
ds
fucomi
call
pusha
stc
cli
das
ficoms
mov
insl
in
cmp
aaa
mov
push
fsubp
push
add
sub
in
sti
pusha
sub
inc
inc
jno
aad
movsl
mov
mov
pop
pop
shl
loop
std
cmp
fwait
add
or
mov
movsl
decb
mov
ss
mov
scas
mov
pop
shl
push
ja
mov
dec
jmp
push
add
cmp
inc
mov
pushf
xor
mov
test
and
jp
mov
mov
aas
jecxz
inc
addr16
inc
add
nop
out
std
fnstsw
lret
scas
bnd
pop
push
shl
xor
cmp
add
cmpsl
jecxz
mov
ret
mov
imul
add
sbb
rorb
ret
mov
and
jge
sub
insb
enter
outsb
pushf
push
pop
push
mov
pop
or
and
xchg
xchg
xor
or
push
mov
mov
shr
jle
inc
shll
and
cmp
sahf
dec
and
enter
push
test
loope
and
mov
insl
xorb
add
gs
clc
inc
sub
sbb
xchg
mov
stc
adc
aas
js
test
or
cmpsl
repz
xor
mov
jns
or
or
rcrb
xor
cmp
xchg
jl
call
cmp
jns
pop
rcrb
inc
in
mov
stos
int
mov
pop
nop
int3
leave
leave
loope
imull
add
je
inc
pop
inc
or
push
fdivs
inc
xchg
idivl
subl
subb
les
shr
cmpsl
popf
mov
push
xchg
push
ja
fwait
arpl
xor
xchg
fwait
xor
aad
enter
enter
clc
addr16
xchg
push
push
inc
je
aam
mov
dec
inc
jl
jns
mov
pop
inc
data16
adcl
stos
or
xlat
shll
cli
popa
inc
inc
pop
or
imul
sbb
jle
sub
push
das
adc
lcall
push
fwait
add
enter
in
sbb
mov
ret
dec
out
out
and
shrl
sbb
fnsave
xchg
mov
jo
or
jno
rcl
pop
mov
cmp
outsb
push
push
fistpl
inc
sub
shrl
mov
cld
lcall
inc
addb
lods
inc
push
push
repnz
push
jg
in
test
push
sub
ret
movsl
ja
inc
and
xchg
inc
pushf
addr16
popa
dec
xchg
inc
xor
aad
outsb
pop
inc
je
push
add
shlb
out
jno
sub
jbe
mov
push
stos
push
xor
popf
xchg
addl
test
mov
fildl
push
nop
cwtl
out
movsb
in
jb
sbb
xorl
sub
out
or
mov
adc
scas
lahf
test
bound
imul
cmp
mov
fldl
lret
fwait
test
outsb
pop
pop
call
sub
push
adc
sub
test
and
pop
in
dec
test
pminsw
cmp
pop
cmp
jecxz
dec
rorl
xchg
outsb
pop
cmp
sbb
lea
gs
dec
pop
scas
xchg
addl
shrl
and
mov
mov
sti
inc
sbb
roll
xchg
sub
sub
pop
aas
jo
push
cmp
test
xchg
add
mov
and
and
mov
mov
dec
sub
cmpsb
mov
lds
subl
shll
ret
dec
loope
sbb
xchg
pushf
dec
sub
sbb
stos
mov
add
sbb
sti
push
push
inc
pop
inc
mov
sbb
lods
pushf
adcl
cld
add
cmp
mov
pop
adc
dec
mov
in
and
ds
cmpsb
js
dec
inc
cmp
mov
jg
add
insb
xor
aad
jmp
sbb
out
push
stc
jns
sbb
lods
btc
or
fistpll
cwtl
mov
fsubr
push
mov
es
jne
aaa
sub
clc
sahf
enter
mov
push
cmc
push
jne
mov
mov
push
outsl
dec
cmp
mov
push
cmpsb
jecxz
jp
and
cvtps2pd
sbb
clc
lret
mov
cmp
adc
push
enter
fs
lea
adc
xchg
notb
pop
cld
stc
addr16
ja
mov
ret
movsl
pusha
cmpl
cltd
xchg
push
adc
and
pop
xlat
pop
push
aas
and
dec
and
push
cmp
lods
ss
sti
cmp
bswap
call
nop
dec
jle
flds
mov
les
cs
icebp
loop
repz
inc
loopne
add
adc
inc
arpl
jbe
aad
xor
mov
sbb
jg
pop
fcoms
xlat
loopne
sbb
cmp
sar
or
mov
cwtl
xchg
sarl
ret
mov
mov
push
pop
add
mov
subl
cmp
cmp
test
fwait
pusha
xchg
and
cld
pushf
das
xchg
insb
mov
mov
inc
push
outsb
stos
popa
fisubrs
mov
bound
xor
cmp
pop
xor
push
in
mov
jne
ret
orb
jp
addb
xchg
scas
pop
loopne
push
out
xlat
cmc
cwtl
jbe
fadd
and
aam
rclb
aas
mov
iret
aam
jno
jg
xor
jnp
outsl
ss
jmp
mov
ficoms
sbb
dec
js
lods
mov
orl
dec
test
lods
dec
or
mov
imul
or
repz
mov
push
mov
ja
push
xlat
scas
ds
xchg
mov
shlb
pop
and
js
xor
ljmp
push
stos
xchg
add
inc
mov
mov
and
cli
js
mov
jge
jae
sub
pop
fucomip
cmp
add
or
mov
xchg
pop
pop
fidivs
imul
adc
xchg
out
jp
jl
das
sahf
leave
add
popa
add
pop
insl
jmp
pop
outsb
lods
sbb
outsl
xor
leave
mov
xchg
pop
mov
pop
les
pop
in
in
jnp
sub
out
pop
cmpsl
jnp
and
ds
shlb
lods
movl
add
xor
or
pop
std
jns
nop
lods
mov
or
lods
out
sub
jp
pop
dec
sbb
add
push
mov
test
insb
std
imul
mov
pop
out
and
sti
xlat
imul
push
bound
pushf
jbe
daa
fwait
imul
stc
jae
jle
push
or
mov
lret
mov
sti
add
inc
inc
mov
es
mov
enter
pop
in
xchg
rolb
xchg
outsb
push
push
out
mov
xorl
aas
cmpsl
sbb
lret
roll
gs
pop
adc
dec
mov
int3
pop
dec
outsl
xor
jge
xchg
lea
mov
jb
pop
sbb
cmc
inc
cld
pop
test
jnp
jle
push
or
imul
jno
data16
movsb
ss
divb
cmp
adc
pop
insb
adc
movsl
gs
and
outsb
pop
pop
stc
imul
addr16
inc
ret
mov
or
fmuls
cmc
and
dec
push
loop
lea
add
inc
pop
mov
movsb
int
xor
ficompl
hlt
enter
mov
mov
jbe
mov
dec
push
addr16
push
stos
add
aas
imul
jg
in
aam
xor
sbb
imul
pop
adc
ficoms
pop
data16
xor
inc
dec
pop
jg
pop
mov
aaa
sbb
je
mov
xor
mov
ret
scas
enter
or
pop
lret
out
or
cmp
jmp
cmp
mov
repnz
mov
int3
push
or
subl
sub
or
pusha
sub
mov
neg
loopne
inc
cmpsb
roll
and
in
xchg
xor
push
push
repnz
call
jns
jne
icebp
rcl
pop
or
lea
sti
mov
xor
or
lods
inc
ds
mov
stos
into
dec
in
mov
mov
jecxz
pop
jns
lds
cmp
mov
aad
loope
lds
xchg
rorl
add
xor
lret
into
pop
stos
mov
dec
jo
cltd
xor
mov
iret
push
xchg
pop
mov
lret
mov
insl
pop
xchg
mov
cmp
mov
or
add
imul
mov
push
in
mov
ds
inc
push
push
sub
mov
jecxz
dec
and
aad
fiaddl
push
adc
xor
push
imul
sub
sub
scas
pop
jns
cmpsl
sbb
inc
adc
pop
loope
pop
xor
stc
inc
into
ja
dec
inc
subl
dec
call
cmpb
lds
decl
xor
jecxz
xchg
adc
stc
inc
test
aaa
aaa
and
iret
imul
mov
mov
out
inc
pop
pop
std
adc
xchg
sub
sarl
or
outsb
jge
mov
data16
cwtl
or
xchg
aam
in
push
stc
insb
mov
jmp
fstpt
data16
ror
repz
push
mov
call
ja
add
mov
es
loop
mov
sbb
orb
fdivl
flds
pop
insl
shrb
out
push
push
cmc
mov
leave
in
enter
icebp
sub
xor
add
jge
jne
lock
out
xchg
jmp
mov
arpl
jns
sbb
mov
sahf
dec
and
inc
dec
rcl
divb
inc
int
dec
lcall
push
push
and
cmc
cs
adc
imul
mov
aad
add
loope
mov
in
insb
enter
outsb
cmp
call
repz
pop
cmp
loope
loop
push
adc
cmpsb
rorl
jp
fcmovnb
daa
out
mov
pop
jne
ja
outsb
sti
pushf
cmpb
lret
testb
xor
adc
in
enter
loop
mov
test
push
out
add
mov
or
pushf
mov
jp
repz
je
scas
push
dec
push
mov
add
cmp
enter
fdivr
sbb
addr16
fcomps
sub
sub
das
mov
aaa
arpl
add
sub
ja
rcll
jmp
push
adc
push
popa
pop
mov
xor
inc
aas
std
aad
mov
adc
ja
mov
je
das
shrl
xchg
push
ja
out
xor
mov
sbb
jo
lret
mov
and
in
cli
test
jne
cmp
pop
arpl
jmp
push
movsl
mov
add
ret
repnz
push
aaa
mov
test
jge
test
xchg
and
sarl
or
cmpb
mov
ret
in
mov
jnp
lret
nop
cmp
adc
cs
das
loope
bound
addb
or
out
ret
pop
sub
sbb
pushf
add
and
cmp
xchg
cmp
rclb
rorb
imul
jge
aad
inc
mov
pop
sub
push
into
fisubrl
ljmp
mov
cmp
and
xchg
xor
shlb
xor
std
jmp
fildll
and
jmp
aaa
repz
ja
mov
or
add
jp
xchg
xor
pop
pop
jge
stos
xlat
xlat
aas
data16
loopne
pop
add
dec
mov
int
aas
ds
scas
imul
xchg
push
repz
loopne
call
std
lds
lret
out
adc
scas
or
add
push
dec
and
push
stos
divl
repnz
repnz
scas
sar
jne
inc
and
in
mov
jge
or
in
nop
sarb
int
adc
inc
test
and
repz
enter
xchg
sti
cmpsl
and
std
loope
inc
sub
aad
shlb
xchg
in
or
mov
jae
lods
pusha
dec
push
test
add
int3
lock
sahf
lahf
mov
popa
movsb
fwait
lret
fisttpll
cmp
inc
sub
sbb
scas
adc
out
xor
lret
xor
push
pop
mov
sahf
mov
in
inc
dec
test
lds
lods
mov
dec
psraw
xchg
sub
ja
jle
and
cltd
fcmovu
jmp
sbb
dec
push
inc
fstp
lret
jns
mov
mov
pop
sti
outsb
iret
sub
inc
mov
fwait
xchg
notb
mov
mov
cmp
ret
rorb
hlt
and
mov
sbb
lcall
mov
add
mov
fcoml
mov
add
mov
pop
repz
iret
mov
and
ljmp
dec
cs
xor
cmp
mov
xchg
aam
lods
add
dec
cltd
push
ret
aaa
xor
sbbl
roll
sub
push
in
xlat
jnp
mov
sub
outsl
arpl
adc
fdivl
cmc
sbb
xor
mov
into
fcom
stos
adcb
loopne
xchg
popf
sbb
cmp
dec
jns
inc
push
xchg
icebp
popf
cli
xor
jmp
js
add
int3
or
fwait
nop
mov
imul
sbb
repz
add
enter
or
push
xor
cwtl
xchg
lds
xchg
adc
jno
aaa
xchg
ret
cltd
and
loope
outsb
or
jmp
daa
repnz
lods
fdiv
in
mov
lret
dec
cltd
sub
mov
cmp
jo
mov
pushf
repz
and
mov
pop
jl
add
cld
lcall
ret
push
xchg
pop
fdivrs
adc
sub
gs
add
cwtl
push
pop
pop
in
mov
insb
add
fsts
mov
push
ret
in
mov
sub
sub
enter
in
dec
je
es
jg
nop
dec
bnd
xor
jl
cmp
xchg
int
cmpsl
and
dec
dec
ljmp
mov
test
inc
dec
call
dec
push
std
add
icebp
fcmovbe
push
in
and
jge
ret
dec
cmp
stos
hlt
rclb
mov
xchg
repz
push
repnz
dec
inc
mov
in
jns
sbb
push
mov
xchg
cmp
lret
jle
or
jg
adc
xor
out
mov
mul
lods
jbe
add
aad
cmovge
inc
lock
jp
into
mov
sbb
mov
ss
fbld
sub
xchg
sbb
into
jo
cmp
loop
add
inc
mov
loop
jo
jnp
fs
cmp
jl
addr16
push
shll
inc
stos
sti
fnstenv
sub
lock
push
call
out
into
ds
push
imul
pusha
arpl
fiaddl
dec
sub
xchg
rorb
jmp
mov
lods
sbb
push
test
pop
shl
clc
std
mov
adc
fwait
rcrl
lahf
add
add
inc
sub
add
push
lds
aaa
addl
fstpt
xchg
jns
call
fmull
enter
and
fdivrp
adc
and
addb
test
leave
jb
add
mov
sarb
rcl
clc
popf
xor
inc
mull
aaa
sbb
jbe
sbb
das
xchg
into
mov
ljmp
neg
mov
imul
xchg
pop
fdivrl
and
jae
lret
fwait
jne
loop
inc
cmpb
into
data16
adc
pop
in
pop
rorl
xchg
add
shll
adc
lods
dec
sbb
mov
sbb
sahf
and
mov
push
outsl
leave
clc
das
dec
sbb
adc
bound
imul
sub
cld
pushf
inc
mov
pop
test
adc
push
xchg
adc
push
push
inc
aad
sahf
adc
inc
sub
jb
jnp
pusha
sub
into
inc
std
or
sbb
push
movsl
test
pop
jg
sti
jo
stos
and
cmp
imul
or
or
sti
leavew
mov
cmc
sbb
mov
pop
das
icebp
mov
or
mov
repz
sub
insb
dec
repz
imul
add
push
ret
mov
mov
mov
rcr
jge
sahf
lods
mov
imul
mov
js
cmpsl
imul
sub
bound
scas
adc
lret
mov
in
push
gs
cwtl
jne
dec
push
dec
mov
outsb
andb
fdivs
divb
adcl
mov
int
stos
inc
nopl
xor
pop
mov
sub
add
lahf
add
pop
inc
in
ljmp
imul
dec
cmp
mov
sbb
add
push
sbb
aaa
pop
test
and
dec
scas
adc
fwait
push
jnp
cs
cli
jp
es
mov
mov
xchg
push
flds
popa
in
sbb
jge
out
not
fistpl
sbb
push
and
and
cmpsb
pop
iret
std
mov
je
imul
mov
xchg
loop
fmul
ss
cli
push
jmp
data16
mov
pop
sub
inc
lock
dec
xchg
clc
jmp
adc
cmp
or
lret
ljmp
fldcw
jnp
mov
cmp
sti
jp
insb
daa
add
stc
add
popa
adc
lahf
and
xor
and
push
cmp
into
xor
stc
inc
adc
lret
in
mov
lahf
stos
fstps
pusha
push
pop
dec
jmp
bsr
and
pop
xchg
jnp
cmpsb
push
cmp
out
jb,pn
cld
adc
lret
adc
cmp
imul
gs
sarb
and
lock
push
aas
push
dec
push
jbe
dec
je
xchg
sub
cmpsb
xlat
inc
pushf
dec
push
add
adc
arpl
int3
inc
mov
pop
inc
xor
out
add
push
aaa
dec
and
ja
scas
popf
aaa
pop
push
and
outsb
xchg
andb
loopne
and
lock
lock
fcomps
sub
std
sbb
jmp
add
mov
cmc
sub
adc
addr16
incb
jnp
mov
js
sahf
enter
jns
subb
xchg
sbb
icebp
xchg
test
out
data16
out
mov
sar
jecxz
xor
daa
nop
jo
push
xchg
lahf
lret
xchg
lods
and
iret
repz
xchg
inc
icebp
idivb
push
xor
and
lods
cmc
cmpsb
fcmovnb
add
push
add
sahf
lds
xchg
add
sahf
xor
testb
mov
push
pop
add
xor
mov
or
mov
xchg
popa
adc
push
cmp
cmp
fcmovnu
mov
xlat
mov
into
lret
movl
jp
add
push
in
ljmp
repnz
std
sbb
add
push
scas
rcl
or
cmp
dec
jnp
mov
cwtl
sub
sub
imul
stos
in
adc
ss
mov
push
xchg
push
sub
xchg
repz
ret
jle
or
fs
stos
xchg
mov
xchg
inc
out
aam
pop
cmp
xchg
mov
xchg
adc
inc
sbb
sub
repnz
jmp
add
pop
xor
mov
hlt
mov
in
mov
jl
pop
mov
aad
sbb
rcrb
xchg
fdivs
movb
mov
inc
xchg
pop
movsl
ss
dec
rorb
call
lcall
xchg
dec
stos
js
pop
xchg
jo
adc
jmp
cmp
fdivp
scas
imul
jl
or
shlb
xor
cmp
sub
push
cli
dec
lahf
cmp
xchg
lret
mov
aam
jle
out
pop
mov
shll
push
negl
push
ja
inc
sbb
cmpsb
out
push
fisubrs
test
lock
test
int
xchg
lods
vmovlps
int3
jle
in
push
mov
push
inc
das
addb
orb
mov
ficompl
movsl
add
mov
or
dec
fwait
lret
jg
popa
shlb
mov
jo
push
push
add
mov
es
dec
ss
sbb
aaa
jp
imul
jo
adc
fnsave
xor
test
sub
or
test
daa
inc
xor
in
fbld
add
add
and
add
jb
cpuid
dec
aaa
mov
mov
ss
int3
jmp
inc
add
insb
pop
or
cmp
out
push
push
iret
or
inc
dec
pop
out
mov
test
fildl
test
sub
mov
pop
push
test
ds
pop
add
inc
in
sti
les
inc
call
out
xchg
sub
push
inc
subb
scas
jmp
sti
cmp
mov
add
jle
ror
subb
sbb
lods
fdivrl
insb
in
imul
mov
adc
je
andb
cmpsl
mov
jb
cs
ret
cmpsb
adc
jl
sbb
push
pop
jnp
iret
insb
adc
inc
sbb
dec
push
cmpsl
push
sub
xlat
loope
out
add
pop
addr16
cwtl
push
clc
pop
dec
inc
pop
loopne
ss
cmp
and
xchg
jne
sbb
xor
lock
adc
cmpsl
int
push
pop
or
int3
xor
mov
out
cwtl
and
insl
adc
mov
cbtw
xchg
fwait
xor
insl
fisubrs
testl
cmp
subb
inc
popf
and
pusha
loopne
push
cmp
mov
inc
dec
cmp
mov
ljmp
das
sub
sahf
inc
sub
cmp
cmp
lea
hlt
push
inc
fbstp
xchg
and
stc
cltd
or
fldcw
mov
and
jns
push
and
pop
cmp
push
dec
jbe
scas
mov
insl
xchg
or
inc
shll
insl
cwtl
or
out
out
sbb
mov
cmpsb
inc
dec
or
push
mov
push
call
or
push
mov
sbb
jnp
lods
sar
cs
clc
mov
push
pop
sbb
fimull
add
mov
add
jle
aas
sbb
mov
mov
sbb
ret
dec
aaa
adc
adc
lea
mov
jnp
add
addr16
xor
in
ja
xlat
popf
inc
xchg
push
loope
and
pop
int
lods
fisttps
adc
cmpsb
mov
sub
xchg
das
cltd
jle
fdivs
lea
mov
clc
sbb
sbb
pop
xor
fucomi
cwtl
sub
pop
jae
bound
out
aaa
mov
enter
lret
xor
jne
add
mov
stc
in
ljmp
rol
cli
scas
push
lods
and
cltd
xor
sub
jae
xchg
stc
sub
mov
cmpsl
gs
cwtl
test
ds
lods
or
jmp
call
filds
xor
paddsw
mov
mov
loope
cmc
xchg
inc
or
repnz
das
mov
mov
xchg
sbb
sub
jbe
sbb
inc
sarl
jne
pop
pop
xchg
movsl
jecxz
movsb
xlat
pop
dec
xor
sarb
add
idivl
jp
daa
outsb
mov
jo
arpl
pusha
jl
add
push
push
lahf
mov
andb
jns
hlt
cmc
add
push
test
pop
mov
flds
shlb
push
fimuls
stos
push
add
push
out
xor
leave
fs
int3
cltd
mov
out
jbe
pop
mov
vminpd
fisttpl
mov
repnz
jae
mov
push
insl
ds
add
jne
pop
scas
mov
mov
ret
addr16
cmp
insb
mov
hlt
popa
xlat
xchg
or
ret
addr16
cmpsb
decb
out
mov
xor
or
fmull
mov
inc
aaa
hlt
push
dec
icebp
sbb
das
and
inc
divl
pop
rclb
or
insl
imul
cmc
mov
and
pop
dec
jbe
std
pop
inc
adc
sub
cmp
and
pusha
bound
push
imul
pop
movsb
cmp
mov
insl
adc
rol
lea
jb
int
sub
mov
add
lock
jbe
add
cmpsb
les
movsl
ljmp
adc
adc
popf
sbbl
inc
pop
mov
dec
mov
into
jb
stc
in
and
add
cmpsl
inc
cmp
mov
pop
mov
popa
pop
pop
dec
mov
dec
into
loopne
dec
insb
mov
and
inc
fmuls
popf
aam
dec
cld
out
out
pop
insb
mov
mov
scas
mov
inc
iret
out
int
fimull
imul
inc
mov
mov
insl
sub
mov
adc
mov
dec
movsb
add
mov
cmp
or
bound
cli
sbb
sub
nop
fstp
loop
mov
cmpsb
pop
mov
mov
lods
inc
push
xlat
xchg
fisttpl
push
aad
push
movsb
mov
test
lock
in
pop
sub
mov
mov
orb
xchg
daa
je
lcall
mov
and
jge
dec
adc
outsl
fisubl
cmp
test
out
dec
bound
mov
jp
pop
call
pushf
outsl
sbb
or
xor
and
stos
pop
mov
repz
mov
ds
or
popf
ficompl
push
scas
cmp
and
sbb
in
xor
jmp
pusha
out
adc
mov
mov
jg
movsb
inc
push
adc
arpl
andb
lret
and
xchg
or
mov
insb
mov
jae
pushf
lea
loop
sti
lods
adc
inc
mov
push
mov
in
or
imul
pop
fwait
stos
loope
sbb
fdiv
addr16
ss
loop
mov
pop
lea
pop
and
addr16
mov
adc
shrb
insb
inc
dec
push
vcvtsd2ss
sub
outsb
jbe
aam
jecxz
imul
lret
pop
fdivrl
mov
mov
cmp
ljmp
xchg
daa
adc
lahf
xor
mov
notl
mov
add
or
inc
cmc
insb
mov
arpl
hlt
fnstcw
xlat
cltd
rclb
je
cwtl
or
test
or
lret
in
imul
mov
in
pop
cmpsl
out
dec
add
stos
inc
cwtl
dec
push
or
inc
inc
hlt
cmpsl
xlat
cmp
fsubrs
in
lods
in
xchg
cmp
mov
pop
pop
into
sub
stos
push
in
xor
loope
jmp
pop
imul
mov
cmp
adc
scas
jns,pn
aaa
ret
xlat
js
inc
ret
dec
cltd
into
iret
fisttpll
es
cmpsl
pop
cmc
ss
push
popl
xor
jmp
shll
add
data16
sahf
lock
add
fidivrs
arpl
dec
scas
mov
add
cltd
hlt
or
fcomi
pmullw
cltd
sbb
out
cmc
or
jne
push
xor
xor
mov
shll
xor
aad
mov
lds
or
pushf
cmc
test
js
je
fwait
dec
dec
inc
inc
insb
jnp
std
clc
pop
jne
shrb
sub
in
mov
mov
sbb
std
jnp
and
mov
ret
enter
lcall
out
cmpsb
push
add
mov
push
ljmp
pop
lods
pop
fisubl
jmp
insb
jge
sbb
mov
lods
sub
adc
push
mov
sub
mov
inc
push
inc
add
jns
cmp
mov
inc
mov
pop
dec
mov
or
pop
jecxz
popf
push
push
sub
and
pop
cli
mov
cli
xchg
add
add
test
sbb
cmp
and
mov
outsb
cmp
mov
call
int3
adc
dec
daa
fisubrl
add
cmp
xchg
mov
inc
xor
in
test
push
and
xor
ds
shll
and
push
cmpsl
adc
outsb
pushf
cli
lods
mov
xor
ret
hlt
out
ret
inc
jge
bound
fwait
or
sub
pop
xor
or
inc
in
popa
mov
out
push
sub
xchg
addb
repnz
js
mov
push
outsl
add
jnp
pop
scas
jne
in
or
push
es
daa
xchg
add
pushf
bound
jne
ljmp
mov
bound
out
dec
inc
movsb
push
push
gs
jno
pop
insb
xchg
jge
pop
mov
inc
loop
ss
mov
popa
aad
mov
enter
pop
nop
mov
adc
xor
rcrb
add
das
sbb
mov
xor
xchg
ficomps
mov
mov
cltd
orb
push
cld
ss
negb
loopnew
aas
stc
icebp
rcrl
les
sbb
xor
aad
bound
xchg
dec
dec
dec
cwtl
loop
mov
test
jbe
cmp
stos
xlat
aad
fidivl
aas
mov
mov
cmp
push
and
mov
mov
cmp
rcll
xchg
jle
add
ja
notl
rcrl
stos
mov
push
xchg
popf
gs
add
rcrl
xchg
pop
popa
sub
lds
sbb
push
lea
cmp
xchg
mov
test
sbb
or
push
push
cld
dec
mov
ret
aas
cmpsl
push
xchg
or
add
dec
push
cmp
jp
aas
int3
push
aaa
or
roll
inc
mov
lea
mov
and
int3
sbb
mov
xor
mov
mov
or
jae
mov
jecxz
fcmovu
xchg
jo
push
or
repz
xor
mov
imul
push
je
shrl
xchg
sub
test
loopne
loop
movl
push
dec
jne
push
and
sahf
in
repnz
mov
and
inc
sub
inc
xchg
add
test
xor
cmc
xchg
dec
ljmp
outsb
mov
mov
cmpsl
cld
or
mov
arpl
out
mov
sbb
jg
adc
dec
push
ss
jmp
rcr
pusha
addr16
faddl
push
sbb
push
int3
xor
push
fcmovnbe
call
pcmpeqw
or
cmpsl
cmc
inc
or
xchg
loopne
movsl
sbbb
sahf
pop
out
xor
push
aas
inc
mov
push
lcall
adc
cs
pop
mov
movsb
shlb
push
pop
fcmovb
pop
push
mov
xchg
cwtl
xor
sbb
int3
fwait
iret
jae
push
and
pusha
mov
dec
add
fld
jp
sub
push
lahf
icebp
push
xchg
or
or
ss
loop
outsb
jbe
mov
rolb
push
in
nop
pop
scas
shl
mov
jp
sub
cmp
and
mov
outsl
jne
mov
lods
rorb
mov
adc
add
jle
stos
aaa
pop
and
cltd
jo
cmp
add
dec
mov
xor
mov
cmp
fucomi
in
ja
add
cwtl
cmpsb
push
mov
sub
mov
dec
scas
sbb
je
sub
or
adc
daa
in
int
faddl
pop
dec
aas
pop
lods
rolb
mov
test
outsb
aas
inc
stos
sub
popf
fcoml
pushf
pop
mov
sbb
mov
push
in
ljmp
inc
aas
outsb
mov
push
in
mov
xor
movb
lods
ret
mov
leave
sbb
or
daa
ret
adc
sub
push
out
pop
call
cmp
in
into
jb,pn
jl
sub
arpl
jae
ret
inc
mov
xor
loop,pt
mov
pop
adc
mov
ficompl
filds
mov
dec
sub
stos
jp
dec
mov
fld
repz
ds
push
in
dec
push
add
mov
xor
lret
mov
pop
insb
clc
lods
sbb
inc
xchg
mov
push
cmpsb
test
or
jg
cmp
pop
jg
insb
jle
pop
mov
pushf
pop
imul
enter
loope
cmpb
mov
push
stc
test
inc
rcrl
adc
push
jp
int
jae
adc
test
or
jae
cmp
push
inc
push
jg
andb
stc
push
repz
daa
mov
or
daa
push
dec
pop
inc
cmc
and
shl
adc
dec
mov
or
jle
mov
stos
jp
pop
add
test
mov
outsb
push
sbb
outsb
shrb
inc
cs
sti
xor
lock
sahf
push
xlat
scas
sub
cmpb
fcmovb
dec
lock
mov
sbb
inc
test
rorl
pushl
or
or
mov
and
jmp
lret
pop
imul
jae
pop
lret
loope
pop
xchg
inc
cmpsb
je
jp
call
jbe
jl
mov
sub
scas
cs
lret
std
inc
addr16
es
xor
jl
jns
inc
pop
lods
dec
xchg
push
rclb
aas
push
or
sti
dec
adc
cmp
pop
sub
mov
xchg
jl
outsb
add
xchg
mov
shlb
sti
xchg
test
repnz
and
rorl
pushf
loop
stos
rolb
inc
add
stos
push
mov
in
test
or
adc
xor
imull
sbb
test
testb
imul
jo
sti
add
cs
sahf
fcom
popf
ss
pop
fnstcw
mov
jg
iret
das
inc
mov
fsubrl
repnz
imul
or
sbb
inc
add
ljmp
xorl
bound
push
and
jge
sub
xchg
in
jae
lahf
dec
push
sub
orb
sbb
xchg
push
xor
cmpsb
dec
rclb
jge
fmul
inc
jo
in
xor
mov
or
add
xchg
pop
pusha
sub
bound
add
adc
mov
lods
out
and
movb
jns
outsl
sbb
xchg
sbb
popf
xor
pop
cs
xchg
jecxz
sbb
cmc
push
out
jp
xlat
jo
lods
sarb
push
jo
movsl
in
daa
sub
jne
dec
adc
inc
jmp
in
xor
push
ljmp
addr16
clc
sub
add
push
les
push
es
push
test
pop
in
fwait
mov
ret
dec
repz
arpl
mov
movsb
mov
add
fcoml
fists
outsb
adc
and
cmp
add
push
divl
sahf
mov
xor
mov
add
lahf
and
inc
lods
sub
jl
out
xchg
mov
sti
pop
and
shl
int
push
shlb
mov
jmp
sub
imulb
and
jmp
or
push
or
div
nop
xchg
sti
icebp
pop
jge
mov
nop
fidivl
int
icebp
enter
out
sbb
push
sbb
mov
fwait
outsb
std
arpl
xor
aad
xchg
je
xchg
sub
adc
add
les
or
cmp
orl
repnz
lea
adc
imul
add
adc
dec
cmc
popf
push
xor
loopne
rcll
and
call
mov
loop
movsl
leave
jno
sub
mov
and
inc
stos
sbb
or
int3
js
shlb
les
test
in
xchg
push
dec
scas
scas
xlat
js
push
push
or
or
sbb
fwait
in
daa
push
inc
ror
jecxz
dec
and
loope,pn
sar
in
shlb
sub
ret
lret
out
fldl
jecxz
sbb
sub
jno
cmp
filds
sbb
scas
cmp
mov
xchg
and
imul
mov
pop
dec
xchg
js
push
inc
movsb
cmp
mov
sbb
movsl
jle
ret
cld
pop
in
inc
xchg
jbe
dec
jmp
cwtl
dec
stos
jecxz
cli
sbb
dec
out
mov
and
das
stc
mov
xchg
push
cs
pop
dec
sarl
sti
push
cmp
hlt
push
icebp
roll
pop
mov
xchg
int3
push
dec
jmp
in
jno
and
add
push
push
add
add
pop
sub
jnp
add
pop
shr
ror
movsl
stc
push
cmp
xor
mov
mov
sbb
jg
les
ja
enter
jmp
shr
sbb
nop
cs
or
rcl
xor
lret
rcrl
out
ss
cmpsb
je
mov
outsl
push
js
repz
loop
insb
call
icebp
dec
flds
mov
pop
push
xchg
scas
rclb
stc
dec
jp
or
xor
daa
in
mov
insl
call
out
fidivl
cmp
xor
pop
or
mov
push
and
xor
lcall
in
popa
pop
add
lret
aam
lcall
leave
push
mov
xchg
and
jno
iret
repnz
dec
inc
pop
leave
mov
data16
jp
jmp
test
sub
cmp
and
ja
cli
lods
mov
aas
cmp
insl
pusha
or
mov
inc
pop
lock
imul
push
lahf
mov
fdivs
mov
adc
and
sub
mov
pop
pushf
in
punpckldq
aam
xchg
adc
lret
cmp
xor
inc
adc
xchg
rolb
cmp
push
mov
mov
mov
shll
xchg
iret
push
sbb
das
ja
stc
lock
add
xchg
dec
mov
jb
fbld
jecxz
cs
or
cmc
push
mov
xor
stos
out
incb
xchg
mov
pop
pop
and
in
insl
fmull
jecxz
mov
add
dec
fldt
mov
adc
cmp
fnstsw
ds
jb
jns
clc
lods
inc
xchg
movsl
movsl
push
pop
push
enter
mov
or
pop
mov
cmp
sbb
cmpsb
xor
xlat
cmp
jmp
sub
loop
xchg
push
jecxz
mov
push
dec
xor
std
into
inc
pusha
shll
and
movsb
shlb
neg
enter
xchg
ja
jmp
orl
das
sub
xchg
test
ret
jns
jp
push
daa
mov
js
xor
bound
inc
xor
je
out
push
inc
and
push
jge
popa
jo
ror
fsts
or
sarl
pop
add
jbe
add
cld
ret
jo
enter
in
dec
repnz
sarl
add
dec
hlt
aas
sub
insb
push
in
not
repnz
xchg
adc
jp
in
pop
xchg
push
mov
lahf
jno
push
sbb
jl
enter
pop
lcall
mov
das
ror
push
jno
lods
pop
add
and
mov
outsb
mov
ds
je
mov
mov
pop
sbb
jp
mov
adc
leave
push
nop
addl
jne
bound
adc
out
sahf
pop
rol
jno
xchg
mov
dec
mov
pop
xchg
mov
stos
test
sub
sub
mov
add
mov
push
sub
pop
pop
cli
in
push
sub
dec
jp
jp
cmp
insb
push
push
fistps
mov
sub
outsl
or
clc
mov
sub
xchg
stos
lock
push
cmp
cli
add
sahf
ljmp
enter
mov
sbb
stos
imul
adc
and
ret
sbb
jae
fsin
nop
dec
adc
sahf
jmp
mov
inc
fsubrl
and
dec
jae
xchg
scas
push
or
jbe
inc
push
fsubs
shll
mov
cmp
movsb
mov
adc
faddl
sbb
mov
rolb
insb
arpl
xchg
cmp
aas
sbb
adc
int
aad
sbb
test
insb
bound
lea
popa
push
fiadds
or
es
sub
jne
cwtl
dec
mov
lcall
pop
pop
out
addr16
fdivl
imul
mov
gs
mov
dec
bndldx
in
popa
add
fwait
in
movsl
or
pusha
mov
addb
out
push
add
stc
jg
test
adc
add
lret
fnstsw
clc
mov
add
shrl
fldcw
hlt
sahf
dec
shrb
ret
pusha
gs
in
cltd
pop
sub
pop
adcl
scas
in
fmull
xor
push
dec
decl
mov
rep
mov
and
mov
cmpsl
or
loopne
fs
pop
cmc
mov
push
and
add
loop
inc
sub
pusha
das
cmp
xor
mov
sub
les
inc
imul
xchg
shrb
in
loop
dec
xchg
xor
frstor
cwtl
jge
mov
pop
pop
out
xor
dec
addr16
mov
test
shll
lahf
popf
loope
movsb
pushf
sar
clc
cmc
sbb
dec
das
outsb
fadd
xor
imul
ljmp
add
or
movsb
mov
cmc
lods
add
testl
xchg
pusha
int3
and
mov
mov
add
mov
lcall
stc
dec
mov
xchg
mov
scas
mov
into
push
in
or
lods
lahf
and
outsb
insb
mov
fs
outsb
inc
test
fidivrs
inc
bound
mov
ja
mov
sub
add
pop
dec
add
add
jo
fs
xchg
pop
mov
fnstsw
pop
rol
lahf
lods
inc
dec
mov
jne
pop
mov
jae
xor
testb
and
cmpsl
aam
dec
pusha
mov
dec
mov
ret
ret
sub
xor
fisubrl
aad
mov
jno
into
jle
stos
inc
into
xchg
lea
popa
xchg
push
out
jge
mov
xchg
stos
and
and
pop
jbe
dec
repz
loope
xchg
in
add
mov
mov
xchg
jp
clc
jg
enter
adcb
test
xor
lock
les
inc
jo
nop
and
aad
gs
cmp
sub
inc
xchg
xchg
mov
inc
or
cmp
test
imul
pop
hlt
inc
nop
push
addl
xchg
mov
add
out
scas
je
fyl2x
and
cli
mov
or
out
aam
movsb
mov
rolb
push
lret
aas
jge
in
aam
les
fstps
test
xchg
cld
dec
sub
test
loop
repz
and
shrb
cli
add
jmp
jne
loop
dec
fmuls
addl
add
adc
adc
dec
out
test
mov
inc
xchg
js
sbb
lock
lret
in
fst
xchg
jns
ja
test
int
inc
mov
mov
mov
rclb
sbb
fisubrl
scas
in
xchg
je
adc
cli
xchg
mov
jne
mov
shrl
js
jle
insb
in
xchg
add
cmp
shl
pop
lahf
sub
add
shl
mov
push
jmp
xor
out
je
and
inc
movsl
cwtl
pop
inc
adc
xlat
popa
arpl
or
xor
pop
jns
shr
mov
addr16
arpl
xor
jle
aas
scas
cmp
fcmovne
jb
and
cs
aad
pop
xor
imul
sbb
or
cmpsl
xchg
jne
or
imul
daa
xor
test
sbb
dec
add
call
jmp
std
lea
fsubs
popa
repnz
add
and
dec
add
daa
mov
aaa
fnstsw
incb
jl
mov
dec
add
arpl
into
sti
addb
xor
test
lret
adc
loope
jp
int
mov
inc
cltd
dec
jmp
inc
dec
dec
mov
mov
dec
jnp
adc
repz
cwtl
cltd
inc
imul
push
scas
adc
les
jae
shll
aaa
lret
sub
dec
into
stos
lcall
sti
scas
fcmovnbe
xor
adcb
cwtl
and
cmpsb
dec
xchg
cli
pusha
daa
mov
sbb
stos
add
adc
test
xor
jbe
push
dec
fcmovb
es
jbe
loop
xchg
sub
push
mov
and
js
adc
jmp
and
inc
xor
es
and
jae
stos
mov
test
jp
jbe
test
cmp
movsl
fcmovnb
ss
push
sub
fld1
adc
xchg
pusha
pushf
jl
mov
dec
lret
xor
fwait
mov
jae
mov
lret
mov
add
repz
cmpsl
mov
rol
jle
xlat
mov
xchg
mov
add
test
mov
mov
bound
test
nop
jnp
sahf
sub
arpl
xor
sahf
inc
scas
cld
adc
jae
ret
sub
push
mov
stos
fistpl
cmpsl
ret
pop
lds
or
mov
imul
div
adc
test
fidivrl
sbb
addl
sub
stc
lds
mov
subb
sub
xor
inc
sahf
cltd
mov
adc
jg
pop
nop
int
movsb
mov
pop
lock
rclb
push
aam
aaa
and
xor
fisttpl
mov
xchg
inc
pop
nop
fistl
fnstcw
jmp
shlb
dec
repnz
inc
lds
negl
adc
andb
and
and
lret
add
sbb
or
faddl
ja
cwtl
mov
rorb
insl
mov
inc
xor
cwtl
imul
iret
nop
xchg
mov
outsb
add
dec
cmp
mov
loopne
mov
or
or
jle
xchg
lret
jle
loop
or
hlt
push
sub
lret
icebp
mov
in
or
lret
mov
sbb
pop
sbb
pusha
stos
pop
xor
lds
jb
sahf
mov
mov
mov
inc
sti
xlat
fs
pop
leave
je
das
jle
xlat
cmp
mov
std
push
add
jb
or
pop
mov
lea
jbe
inc
fcmovbe
jl
and
or
adc
add
or
fisubrl
rolb
imul
negb
data16
xor
and
outsl
xor
xor
sub
mov
mov
fistps
mov
rcr
lods
cli
mov
stos
jl
adc
daa
fnstsw
add
icebp
jo
sub
pop
add
test
pushf
push
in
shll
rol
dec
std
add
movsb
es
lahf
lahf
in
or
lock
jno
xor
fsubs
dec
pushf
push
mov
and
repnz
jb
adc
push
dec
pop
roll
fadds
add
mov
fisubrs
jbe
push
inc
ss
js
popl
inc
pop
aad
sub
cmp
jl
dec
adc
dec
loopne
test
fadd
xchg
pop
movsl
xor
add
mov
pop
les
cld
mov
pop
das
or
in
mov
shl
or
xor
sbb
adc
jecxz
sbb
mov
or
sbb
mov
fwait
nop
jp
dec
xor
aaa
shll
les
push
pop
fdivs
jae
xchg
lock
aas
test
cmpsb
inc
call
sub
scas
mov
xor
cmp
jmp
cmp
mov
add
dec
xchg
sub
lret
cltd
sub
mov
push
cmp
addb
ds
rcl
cmc
lock
rol
rorl
out
popf
xchg
xchg
mov
cmovg
scas
push
mov
adc
imul
mov
pusha
inc
xor
out
and
sarl
scas
cmp
sbb
out
dec
xchg
pop
pop
pop
xchg
xchg
in
std
sbb
xchg
adc
fcmovb
and
dec
std
xchg
mov
fidivs
cwtl
push
jp
scas
mov
jecxz
testl
sub
cli
icebp
bound
adc
mov
into
mov
xchg
mov
rorb
cmp
popa
inc
sub
cmp
push
cmp
cltd
pop
dec
pop
xor
and
dec
fcmovnu
mul
mov
or
xor
adc
arpl
and
mov
xor
dec
mov
int
lods
shlb
jmp
add
or
inc
add
mov
icebp
pop
sub
ss
fs
ret
add
ss
lods
dec
shlb
loopne
jnp
mov
scas
cwtl
adc
aam
pop
test
mov
mov
jo
out
js
out
xor
add
das
jge
movsb
test
sahf
cmpsb
rcll
add
add
orb
popa
lahf
and
xlat
stos
sti
pop
and
cmc
xor
xchg
cmp
ret
pop
in
ljmp
jp,pn
lock
fs
mov
push
mov
mov
jge
sbb
or
arpl
pop
fucomi
daa
xor
xchg
sbb
or
std
mov
pop
and
mov
sbb
aad
sub
in
rcll
mov
lret
negl
lods
add
inc
mov
mov
mov
and
push
ret
lret
mov
mov
sahf
mov
sub
dec
sub
arpl
xor
aas
ret
or
or
pop
fcmovbe
sahf
ss
dec
int3
mov
movsb
dec
mov
push
or
outsb
xchg
dec
cmp
nop
call
ficoms
das
jp
mov
ja
push
inc
es
pop
neg
mov
add
in
es
xchg
nop
test
bound
pop
cli
addr16
stc
mov
or
adc
xchg
loop
xor
or
mov
and
test
xchg
xchg
scas
inc
int
xchg
and
cmp
mov
mov
and
xchg
xor
sbb
into
mov
in
ja
xchg
add
lock
repnz
and
out
jp
mov
enter
fwait
repz
out
add
test
inc
insb
sub
pusha
sbb
xchg
out
sbb
daa
es
mov
data16
or
arpl
out
push
orb
rcr
jl
testl
pop
cli
lods
or
jle
iret
movsb
and
test
cld
loop
mov
sub
or
add
icebp
mov
mov
push
cmpsl
std
push
aad
ret
inc
sub
add
xor
lret
daa
aas
stc
lds
sbb
lock
adc
push
shr
jae
mov
sub
xor
test
inc
mov
and
int
cmpsb
loop
jp
pusha
push
and
mov
pop
adc
lret
int
das
push
mov
mov
or
sbb
push
int3
mov
es
mov
in
jge
add
inc
push
pop
sub
mov
ja
push
sub
jb
sti
inc
aam
xor
dec
and
mov
aaa
xchg
popa
outsb
mov
sbb
lahf
shll
inc
dec
cmpsb
adc
out
add
fsubs
push
and
int
or
das
add
out
ret
or
movsb
or
std
or
add
sbb
xchg
mov
xorl
test
xchg
ljmp
xchg
mov
xchg
cmp
loopne
mov
xor
arpl
ja
xlat
lret
add
jl
in
loop,pn
mov
sbb
xchg
shl
mov
aas
arpl
aad
push
xlat
test
mov
loopne
xor
lcall
fistpl
push
roll
test
xchg
movsbl
lret
aas
ret
jmp
jns
int
loopne
sbb
popf
xchg
sbb
insb
dec
cmp
mov
fmull
stos
adc
mov
das
cwtl
inc
add
mov
pusha
sbb
pop
xchg
cmp
gs
mov
adc
xchg
lahf
inc
mov
and
xlat
xchg
dec
xchg
int
mov
mov
mov
pop
xlat
pushf
xor
repnz
aas
mov
sub
mov
xchg
jnp
xlat
testl
out
fcomps
sub
jo
sbb
ss
in
movsl
fdivrl
rcrb
repz
cmpsl
mov
jb
lret
xchg
and
or
cmc
stos
jp
daa
adc
enter
push
ffree
sub
push
lock
push
out
fcoms
mov
or
adc
imul
mov
push
mov
fsincos
inc
pop
enter
push
and
mov
lret
mov
pop
dec
cmp
mov
sbb
inc
pop
dec
sub
dec
jno
jne
mov
mov
loopne
mov
fs
movsb
pop
cwtl
add
and
stc
ss
sub
sti
xlat
mov
pop
rolb
xchg
inc
mov
adc
outsl
ss
jnp
sbb
insb
scas
in
lcall
sbb
push
aam
pop
divl
jmp
mulb
fldenv
mov
nop
popf
jecxz
dec
popf
jnp
dec
dec
add
inc
jecxz
mov
scas
push
nop
adc
push
mov
aas
mov
or
lock
pop
rorl
pop
xor
popf
mov
aad
in
cmp
jne
sbb
inc
jbe
add
and
jbe
cmp
icebp
push
shr
and
dec
cmpsl
ljmp
push
xchg
loopne
and
test
int
fsubl
jge
in
clc
inc
dec
lcall
inc
cltd
pop
fstpl
pushf
inc
outsl
cmpsb
xchg
and
in
xchg
pop
in
dec
movsb
in
je
cmp
fcompl
inc
sarb
jcxz
jnp
cwtl
int3
les
das
add
ja
imul
stos
mov
out
stc
jns
jae
jp
push
jae
pusha
sbb
mov
clc
gs
fidivrs
push
mov
in
movsb
add
and
mov
sub
mov
pop
adc
mov
jne
mov
push
adc
sti
and
and
fs
cmc
push
mov
mov
adc
in
mov
lods
mov
das
dec
sub
inc
shlb
insl
pop
pop
mov
push
icebp
es
mov
outsb
mov
pop
lods
scas
xor
test
sarl
jmp
dec
or
mov
pop
add
pop
jno
insb
push
mov
mov
adc
cmp
pop
sahf
push
hlt
mov
adc
cmp
movsb
aad
mov
lods
out
push
insl
out
pushf
adc
sub
fwait
or
xchg
xchg
jle
lock
loopne
dec
fwait
mov
jecxz
in
cmp
add
in
mov
mov
out
sbb
pop
cwtl
movsl
add
pusha
fildll
je
rcrl
ret
mov
aam
out
and
roll
les
and
mov
outsl
push
and
adcl
test
sbb
push
cmp
ja
cwtl
cmp
stc
orb
arpl
mov
dec
dec
mov
ja
fiaddl
mov
cmp
mov
pop
sub
jnp
jo
test
stc
mov
jb
xor
ficompl
xor
ss
int3
mov
in
cwtl
test
fcomip
stos
pop
shlb
mov
pop
pop
data16
out
movl
aas
mov
adc
ret
add
cmp
jns
les
jge
pop
lods
mov
xchg
push
data16
add
sbbl
xchg
mov
dec
imul
cltd
pushl
adc
mov
int3
xlat
mov
dec
cmpsl
mov
sbb
je
dec
jbe
cmp
sub
je
mov
outsb
mov
scas
mov
xor
test
test
or
clc
pop
xchg
hlt
dec
std
stc
jne
mov
and
outsb
jg
cmp
fsubrl
jecxz
hlt
adc
fidivrl
sarl
pop
or
mov
add
pop
insl
mov
les
add
out
fdivrp
ss
xchg
sar
and
stos
orl
sbb
cli
arpl
fists
xchg
mov
xor
daa
cltd
jecxz
ret
adc
fidivl
sbb
mov
gs
mov
sub
mov
mov
mov
xor
mov
cmc
dec
test
cmp
dec
mov
bound
and
sub
popa
adc
mov
rclb
sub
jl
fadds
fwait
stos
xor
xor
xor
mov
loope
sub
cmpsb
icebp
inc
mov
andb
mov
stc
lcall
mov
and
stc
lods
hlt
lret
loopne
fsubs
add
lret
int
jle
mov
mov
lods
jae
sahf
test
and
sub
and
aas
call
popf
push
jnp
je
add
shl
ss
addb
xor
enter
leave
roll
xchg
popa
fistps
mov
adc
outsb
jnp
xchg
xor
call
int3
insl
adc
xchg
lcallw
jge
jo
jbe
ret
or
mov
lahf
or
mov
cmp
sub
mov
dec
mov
add
cmp
fdivl
mov
fistps
insb
xchg
and
repnz
cmp
hlt
jnp
in
data16
mov
pop
adc
das
mov
insl
push
stos
mov
xchg
gs
jp
or
gs
xor
or
adc
test
cli
lret
lret
xor
adc
sub
jmp
lcall
xchg
cwtl
inc
pop
es
jge
jno
inc
rol
std
into
mov
jno
iret
insl
push
adc
or
test
sub
cmp
scas
movsl
add
out
into
xchg
mov
ss
das
cli
rclb
faddl
imul
cs
push
lret
cltd
jmp
cmp
aas
push
lret
mov
sub
jp
pop
inc
dec
xorl
push
mov
inc
xchg
cmp
aas
adcl
jb
xchg
lret
dec
enter
aam
data16
mov
jnp
outsl
stc
cs
inc
cmp
inc
clc
ret
jmp
sbb
jmp
adc
dec
adc
xchg
es
imul
pop
or
cmp
test
mov
das
out
js
fisubrl
test
jo
ja
stc
ret
xor
mov
sbb
or
test
or
sbb
cli
dec
sub
mov
inc
insb
dec
push
lock
sub
and
sub
sub
loopne
pop
jns
mov
test
test
aam
sti
jl
imul
push
leave
push
xor
outsb
outsb
inc
scas
jge
stos
dec
jns
test
xchg
scas
pushf
sbb
fsubrp
cld
lods
and
mov
inc
lea
inc
cmp
shrb
fadds
in
xchg
and
xchg
cmpsb
into
test
sub
and
outsl
hlt
push
mov
mov
and
lret
pop
pop
push
andb
mov
movsl
adc
jo
pop
pop
fcomps
push
dec
fdivrs
leave
xchg
aaa
sub
mov
lods
lret
mov
lahf
mov
mov
hlt
mov
inc
out
xorl
mov
and
fldl2e
sbb
jecxz
mov
xor
pop
mov
mov
xchg
inc
sub
ss
rorl
cmp
cmp
jge
jp
inc
mov
pop
add
shrb
outsb
adc
cmpsb
cmpb
push
sbb
adc
inc
iret
pop
int
lock
add
and
mov
mov
mul
mov
enter
jns
hlt
clc
outsl
test
sub
adc
jle
dec
mov
xchg
or
popf
ret
daa
dec
insb
or
cmp
roll
popf
adc
mull
pop
stc
out
dec
aam
cmpsb
sub
xor
cld
dec
xlat
mov
push
repnz
or
push
popa
ds
es
inc
xorl
mov
jo
je
ret
jne
pop
ret
push
fidivl
jnp
movsb
mov
loop
adc
cmc
repz
aad
xor
pop
out
xor
ds
addr16
and
mov
es
jb
loope
icebp
out
test
mov
mov
pop
pusha
inc
push
sahf
out
mov
sub
lret
fcoml
or
jo
add
xor
xor
out
xlat
mov
lods
add
rorl
fs
out
sbb
xchg
fisubs
and
dec
scas
ss
push
push
cmpsb
jmp
aad
pop
clc
inc
cmp
mov
test
xchg
jmp
sbb
lret
mov
xor
cmp
mov
mov
xorl
push
push
insl
inc
cmpl
ret
mov
push
loope
in
xorb
js
jl
bound
andl
and
cmp
jmp
sub
in
rorb
stos
call
stos
ficompl
mov
pop
mov
sub
leave
int
shl
dec
aad
push
inc
pop
xchg
add
pop
ja
fwait
jle
adc
lcall
jl
push
sbb
mov
scas
add
jno
push
pop
iret
jge
or
inc
in
xchg
out
pop
ret
add
inc
jno
out
mov
xchg
or
cmovbe
aas
push
dec
cmpsb
std
sahf
sub
cwtl
push
push
inc
push
pop
sbb
cmp
sub
icebp
lret
lea
testb
mov
insb
aaa
add
and
pop
jecxz
jae
mov
cs
clc
mov
xchg
out
add
push
add
sbb
cwtl
add
add
jne
lret
push
lods
and
jnp
hlt
fwait
push
ds
in
nop
ss
imul
dec
xor
dec
mov
pop
movsl
sbb
mov
cmp
push
pushf
jmp
int
popf
mov
inc
mov
incb
outsb
loopne
jno
xor
ja
cs
sbb
loop
gs
mov
mov
aam
push
iret
xchg
nop
inc
neg
inc
shll
movsb
icebp
imul
stos
jecxz
sub
sub
cmp
mov
fnstenv
popf
in
repz
xor
loop
fnstcw
in
and
andl
into
data16
aam
or
imul
sub
les
int
loop
push
adc
mov
xchg
pop
sub
ss
push
iret
aad
stc
jb
addr16
out
test
fdivr
insb
xchg
xor
pop
xchg
cmp
imul
sbb
shrl
js
jns
inc
stos
mov
jmp
sahf
cltd
enter
jmp
pop
mov
out
sub
jg
push
hlt
cmpsb
sub
in
inc
xlat
bound
push
push
xlat
push
xchg
push
jl
dec
sub
sarb
dec
cmp
adc
push
scas
xchg
pop
mov
sub
lcall
ljmp
faddp
cmp
cmc
stos
sub
adc
cmp
into
pushf
call
pop
fwait
jb
in
pop
inc
push
sbb
inc
rol
loopne
stc
insb
aas
test
jmp
js
decb
dec
or
lods
mov
sbb
and
xor
cmc
and
mov
jbe
jbe
je
pop
lea
dec
aad
std
fmull
leave
out
int3
push
pushf
in
and
cwtl
out
fcmovbe
xchg
test
xlat
iret
sahf
aas
mov
cmp
push
icebp
jne
stc
rcll
in
inc
mov
or
mov
daa
les
sbb
les
pop
ret
xor
outsl
push
inc
dec
daa
das
jae
into
cli
inc
rcrl
aas
rorb
and
lods
in
mov
insb
jno
ljmp
rclb
test
lret
test
sbb
adc
sbb
cmp
mov
notb
outsb
popa
lcall
xchg
into
cmc
fildll
loope
in
sbb
arpl
dec
out
mov
subl
es
cwtl
scas
cmpsb
mov
adc
xor
dec
sbb
imul
mov
cmpsb
fcoml
ret
and
xlat
or
mov
outsl
lods
and
leave
xor
cmp
inc
push
jno
or
xchg
push
insb
insb
aaa
lea
fisubl
imul
push
mov
cmpb
fstps
jge
mov
dec
je
movsb
data16
and
push
scas
inc
int3
push
jmp
add
in
inc
cld
inc
mov
in
jmp
js
mov
cltd
test
mov
or
out
xor
popf
xlat
push
jbe
jge
sub
cs
add
pusha
cmpsb
in
push
jo
adc
mov
fwait
mov
in
xor
test
jnp
fists
pop
mov
inc
ret
rorb
add
xchg
aad
inc
push
push
xor
xor
hlt
pop
loopne
cs
pusha
popa
mov
dec
test
xchg
xchg
push
dec
xor
scas
addr16
adc
int
lea
mov
movsl
insl
test
clc
std
je
mov
outsl
mov
jle
xor
out
mov
ret
pushf
cmp
sub
ror
add
mov
adc
mov
sbb
fdivrl
divl
mov
adc
scas
push
adc
pop
pop
mov
fcomps
xchg
int3
ret
mov
sub
js
mov
push
add
push
int3
cmc
aas
hlt
push
leave
xchg
ss
cltd
or
or
or
and
inc
repnz
push
dec
ss
push
adc
test
imul
sbb
sub
ljmp
out
dec
inc
mov
idiv
cli
mov
addr16
xor
mov
fistpll
mov
xor
ret
or
and
inc
mov
aam
popa
xor
daa
push
adc
fcmovne
sub
fmuls
xor
cwtl
add
dec
xor
cmc
mov
ss
dec
into
mov
out
loop
xchg
pop
pop
into
xchg
lods
xchg
xchg
adc
push
and
nop
mov
repz
or
mov
fdivr
jo
xchg
push
sarb
stos
push
adc
push
pop
cwtl
xlat
pop
mov
add
sub
inc
insb
out
push
fnstenv
repz
aad
fldcw
push
jo
jmp
test
inc
mov
jle
std
loop
ret
daa
popa
imul
or
xchg
xchg
jg
and
push
push
out
push
iret
insl
sbb
adc
cmp
insb
mov
or
or
pop
sbb
mov
mov
not
lret
in
ja
xor
rorb
movsl
mov
gs
pop
mov
xor
fwait
mull
push
jb
pop
push
cltd
mov
mov
push
pop
ljmp
xor
mov
mov
mov
pop
ss
outsb
mov
call
xchg
dec
and
sub
xchg
and
xlat
jp
aas
fcmovnbe
push
jg
sbb
jp
icebp
push
pop
mov
test
jp
cwtl
add
ficomps
inc
lock
jnp
test
ud0
lret
popa
cwtl
xchg
cmp
les
sbb
push
test
jb
dec
lock
mov
mov
clc
cmpsb
inc
adc
jp
jbe
xchg
adc
and
pop
xchg
push
push
mov
mov
sti
dec
dec
test
jns
lods
pop
lea
aas
notl
les
std
filds
pop
sbb
jg
or
dec
xor
ret
pop
xchg
xlat
xchg
pop
sub
repz
mov
xor
jmp
enter
xor
xor
pushf
sarb
xchg
mov
xchg
sti
jp
roll
dec
ja
in
mov
into
add
movsb
mov
out
div
lret
sub
les
lahf
mov
push
fldl
out
xchg
cmp
dec
sub
shrl
add
lods
add
rcr
cltd
bound
xchg
into
or
jnp
push
adc
sbb
sub
les
dec
loop
push
xchg
test
pop
sbb
clc
inc
inc
dec
xchg
add
jge
adc
jne
or
cwtl
push
stos
or
inc
xor
mov
cmp
jae
outsb
push
xlat
lods
and
cmpsl
mov
mov
lret
mov
mov
ficoms
jp
in
pop
mov
push
inc
cmp
add
mov
xchg
cmp
mov
inc
dec
cmp
mov
dec
aam
icebp
enter
mov
ret
enter
jno
outsb
mov
xchg
test
ds
dec
cmpl
cmp
and
ljmp
or
pop
pop
adcl
shlb
xchg
inc
push
xchg
xchg
sub
test
jl
mov
xchg
ror
stos
pop
dec
arpl
xor
push
scas
fistps
xchg
sub
insb
or
inc
lahf
cmp
ds
xchg
fisubl
in
jmp
sbb
push
dec
dec
adc
loopne
arpl
roll
in
sti
mov
cmp
test
cmp
jne
pop
mov
out
rolb
cld
jg
push
stc
nop
xchg
xor
or
jb
adc
iretw
test
cmp
pop
xchg
inc
xchg
hlt
rclb
repnz
fs
ds
sti
jb
pop
jne
sbb
push
and
scas
cmc
lret
test
xchg
jle
and
in
cli
fmull
mov
dec
sbb
cmp
bound
sub
adc
mov
and
pop
xor
push
xchg
cmp
sub
jbe
popf
xchg
xor
mov
jno
icebp
push
xor
sti
xchg
xlat
mov
test
inc
xchg
enter
sub
mov
inc
xchg
or
cli
xorl
add
enter
jecxz
add
bnd
addr16
sub
pusha
movsb
and
pop
adc
mov
jge
shr
add
clc
pop
popf
push
dec
lret
shl
adc
popf
push
mov
andb
scas
aaa
outsl
sub
and
pop
jmp
xchg
insb
mov
xlat
mov
pop
pop
sbb
loope
fidivrl
ret
mov
xchg
divb
aam
mov
add
xchg
add
mov
daa
sbbb
xchg
pop
gs
das
or
in
fistl
out
mov
xor
jnp
push
cmp
ja
sub
test
aam
stos
mov
or
add
jae
lods
loopne
sahf
dec
shl
sbb
and
lret
sbb
sbb
daa
fstl
ret
mov
lret
or
stc
xchg
add
shrl
sbb
mov
sub
sub
mov
loop
cwtl
add
xchg
idivb
jo
imul
ss
loop
rclb
ljmp
jmp
dec
dec
mov
repz
sbb
cmp
imul
adc
roll
repnz
push
fistps
int3
xchg
adc
jo
adc
jmp
xchg
adc
pop
mov
insl
out
cmpsb
lock
sar
mov
push
stc
iret
xor
sub
stos
setne
into
or
cli
adc
cs
sub
adc
mov
mov
xchg
cmp
cli
xchg
outsl
out
hlt
xchg
in
in
fcomps
inc
cld
sbb
dec
pop
jg
insl
popl
scas
into
rol
pop
jae
mov
int3
jp
in
pop
cmp
cmpsl
and
pusha
mov
lock
pop
movsb
or
outsb
mov
out
into
cmpsb
or
pop
mov
or
mov
sbb
stc
insb
ljmp
lret
hlt
jge
lods
jno
pop
das
mov
inc
push
jp
pop
gs
jno,pn
push
mov
mov
and
push
out
scas
cmp
fs
clc
and
jbe
repnz
lock
and
testb
xchg
and
adc
in
cmp
in
jmp
aaa
adc
inc
negl
cmp
out
xchg
call
cmp
addr16
ljmp
pop
std
push
jp
es
lods
cwtl
pop
aam
sub
jo
push
into
mov
enter
roll
inc
iret
add
mov
mov
sbb
mov
sbb
cs
pop
stos
xchg
push
jns
outsl
ret
arpl
mov
add
lock
dec
scas
js
cmp
movsb
ljmp
xor
mov
stos
jno
decb
mov
or
ljmp
xor
xchg
xorb
pmaddwd
xor
sub
mov
jbe
adc
divb
lret
mov
xchg
sbbb
mov
mov
pop
or
cmpw
ret
lods
xchg
xlat
aam
nop
xlat
mov
jns
int3
adc
jno
mov
movl
inc
jno
push
test
das
mov
js
sti
dec
jge
jns
aaa
das
int3
icebp
popa
clc
sub
sub
and
test
mov
push
arpl
mov
mov
inc
and
outsb
pop
loop
xor
push
push
dec
fiaddl
mov
loop
and
cmpl
inc
push
push
cmp
lods
mov
shr
cmpb
cmp
insb
pushf
jecxz
inc
adc
xchg
sbb
in
int3
outsl
lods
mov
mov
lds
mov
sub
lcall
xchg
cmp
xchg
mov
mov
sti
addr16
sbb
add
pop
pusha
xchg
mov
clc
cmp
xor
mov
jae
lods
js
je
je
lcall
xchg
and
sbb
sbb
shl
dec
pop
sub
fisttps
imul
and
aad
popf
loopne
xchg
pop
xchg
das
mov
and
xor
mov
mov
std
inc
adc
arpl
aad
push
jg
inc
dec
adcl
jg
imul
push
pop
scas
movsl
sub
xchg
push
movsl
dec
dec
lahf
inc
add
xor
inc
pop
or
xchg
sbb
sbb
scas
js
sbb
pop
sbb
sti
inc
inc
push
out
or
popf
fs
scas
pop
out
in
mov
jl
or
loop
sbb
lcall
rcrb
lret
jns
call
inc
push
xchg
xchg
xor
bound
xor
hlt
jp
jbe
notb
fiaddl
shll
add
repz
sub
nop
pop
jmp
cmp
mov
out
in
pop
sub
pop
mov
das
or
jnp
xchg
pop
or
and
jp
push
sbb
and
add
cmpsb
loopne
xchg
cmp
jns
addb
enter
jmp
mov
mul
inc
or
inc
xchg
test
cmpsb
pop
sbb
jbe
pop
push
mov
cmc
into
aad
sti
cmp
mov
xchg
popa
mov
aad
mov
cmp
cmc
sbb
fwait
dec
loope
pushf
addr16
fildl
mov
sbb
pop
pop
out
insb
add
add
movsb
into
mov
cmp
icebp
inc
testl
dec
pop
jecxz
mov
mov
enter
xchg
or
xchg
in
test
cmp
lcall
ljmp
add
ja
rorl
mov
aad
mov
jle
and
jle
nop
loope
rcrb
xor
sbb
jecxz
xor
mov
outsb
xchg
xor
xor
push
rcrb
and
adc
addr16
imul
setbe
ror
adc
dec
sub
push
repnz
jns
push
mov
mov
ljmp
pop
fisubs
and
sub
mov
arpl
xchg
neg
loope
sbb
push
pop
out
lret
push
xchg
or
dec
outsl
mov
push
push
iret
jns
dec
jg
popf
gs
or
xchg
test
add
enter
dec
add
fidivrl
and
sbb
test
mov
jmp
mov
fcmovnbe
dec
pop
lea
xlat
dec
dec
bound
dec
mov
dec
daa
out
fcoms
in
pop
cs
or
shlb
rorl
arpl
movsl
cmp
jno
aam
aas
lret
out
repz
cmp
push
push
ja
cmpsb
inc
inc
sub
nop
jo
push
mov
xchg
push
fstps
pushf
mov
push
jl
push
lcall
and
jl
xor
in
lods
fsubrp
pop
pop
mov
xchg
loope
lret
lret
aad
outsb
push
pushf
outsl
adc
call
loopne
aaa
in
or
xchg
fisttpll
movsl
mov
dec
jb
enter
fwait
je
js
out
sbb
js
popf
fcmovbe
scas
popf
adcl
lcall
addr16
sbb
mov
add
xor
jo
push
or
mov
stos
dec
pop
pop
in
out
loopne
add
push
inc
daa
jecxz
mov
into
test
mov
mov
jmp
ljmp
or
pop
pop
cmp
in
fsubl
inc
nop
aas
mov
cmp
rclb
int3
cmpsb
fwait
or
lea
xlat
fs
jle
loope
mov
fstps
add
ljmp
cwtl
fisttpl
cmc
sbb
inc
lods
lods
jno
pop
repz
shl
insb
iret
mov
lcall
xchg
cli
add
out
lock
lret
inc
sub
add
push
mov
jge
aaa
and
aaa
shl
cmpsb
mov
xchg
iret
pop
data16
jge
cmpsl
push
xor
or
mov
mov
mov
xor
mov
outsb
xor
lds
call
and
pop
icebp
xlat
mov
leave
sub
mov
ljmp
insl
test
inc
mov
jge
outsl
sub
cmp
mov
rorb
sub
popa
inc
dec
adc
adc
ljmp
adc
sbb
xchg
push
imul
sub
jno
cwtl
jb
push
xor
push
pop
push
roll
insb
mov
scas
lods
pop
push
mov
addr16
faddl
dec
out
iret
testl
out
push
iret
jbe
and
fcomp
lret
test
jnp
cmpsb
mov
xor
push
loop
jno
and
rcrb
adc
rcrl
pop
sub
bound
mov
addl
pop
push
jo
adc
mov
mov
mov
mov
call
ret
sub
pop
dec
mov
imul
stos
in
sti
outsl
mov
mov
pusha
mov
sub
sbb
in
sbb
xchg
mov
scas
rol
dec
lea
mov
aas
cmp
je
pushf
push
sbb
add
ljmp
pushf
add
pop
jle
and
dec
pop
add
mov
sbb
push
or
lcall
imul
ljmp
xchg
push
lds
aad
repz
cmpsb
add
test
or
es
inc
cwtl
jp
adc
test
dec
mov
out
mov
pop
lret
sbb
das
cmp
or
ds
adc
lret
jae
add
inc
sub
loop
pusha
inc
into
xor
pop
int
leave
adc
dec
test
loope
fnsave
arpl
js
sarl
push
and
lock
test
popf
inc
and
adc
into
fisubl
push
lods
mov
and
mov
js
mov
mov
call
stos
test
push
ror
fnsave
fnstenv
cmpsb
mov
cmp
jnp
adc
sbbl
cmp
push
cld
ret
aaa
jns
sub
loop
dec
pop
fstl
sar
repz
shl
stc
xchg
bound
test
int3
cmp
in
int3
mov
fwait
add
push
je
call
push
test
cmc
xchg
iret
hlt
in
stc
repz
or
sbb
sahf
addb
cmp
dec
leave
pop
aam
inc
and
jecxz
cmpsb
pavgb
ror
or
or
mov
scas
les
lret
call
out
push
push
out
adc
test
les
in
out
cmp
sahf
daa
sub
dec
mov
cmp
pop
pushf
int
test
inc
cmpsb
sti
icebp
xor
lret
popa
nop
or
jns
fmul
popa
jne
jmp
pop
dec
fwait
in
call
or
add
stos
shlb
adc
lea
adc
jecxz
or
inc
ret
ljmp
pop
pop
xor
jl
pop
mov
inc
xchg
shll
popa
mov
int3
mov
dec
sbb
cmp
inc
and
addr16
pushf
or
and
fcoml
dec
je
repz
mov
jne
pusha
xor
mov
clc
cs
adc
adc
dec
test
in
ds
loopne
mov
xor
xor
sahf
pop
mov
fcmovb
dec
inc
frstor
mov
shrd
negb
add
cmp
outsl
in
inc
jns
and
clc
xchg
and
cld
push
pop
mov
add
dec
push
add
push
subb
sub
lcall
sub
mov
cmp
add
add
loopne
mov
cld
jnp
pop
cs
pusha
lds
loopne
lds
in
or
pop
pop
ds
jb
push
in
sbb
dec
jbe
inc
outsl
leave
sbb
mov
ja
sbb
imul
and
notb
mov
cmp
sub
int3
std
sti
mov
mov
insl
mov
pop
dec
sbb
mov
and
sub
cmp
jl
in
sarl
xchg
mov
xchg
addb
inc
push
add
push
js
cmc
adc
dec
fdivl
fneni(8087
sti
mov
add
lret
filds
ss
insb
sub
orb
data16
and
jb
jle
mov
es
roll
pusha
mov
or
inc
mov
pop
pop
rcrl
sbb
add
and
in
lds
in
pusha
rclb
push
out
hlt
pop
sar
aam
and
pop
imul
mov
adc
insl
cmpsb
and
sbb
xchg
dec
adc
movsb
ffreep
mov
jae
sahf
addr16
sub
iret
add
cli
jmp
daa
enter
ja
xor
in
xor
in
mov
js
out
iret
xchg
testl
mov
scas
push
loope
mov
repz
cmp
mov
int
cmpsb
sti
movsl
push
out
fcompl
fsubrp
test
mov
or
push
fildl
je
xchg
ss
xor
sbb
idivl
insb
cmp
testl
sub
push
ret
xor
adc
nop
lea
loopne
sbb
xlat
mov
pop
rcll
sti
jbe
flds
imul
or
aad
and
or
popf
mov
jbe
cmp
gs
movsl
jb
data16
adc
pop
and
int
and
adc
rorl
mov
dec
or
cwtl
lods
inc
pop
out
fnstcw
adc
aam
dec
dec
xor
hlt
aaa
std
pop
fisttpl
outsb
je
loopne
mov
adc
mov
jle
or
inc
pop
jmp
mov
mov
and
shlb
push
pop
insl
or
add
jg
push
test
xchg
cmp
and
stos
fwait
lret
ss
add
mov
aam
movsb
imull
mov
std
inc
insb
outsb
sbb
ja
mov
jnp
sub
jno
insl
movsb
enter
out
stc
jne
outsb
and
push
call
xchg
test
xchg
mov
mov
jnp
scas
mov
leave
mov
inc
pop
out
mov
xchg
mov
lods
jmp
and
in
pusha
mov
jnp
ljmp
gs
push
pusha
mov
push
cmpl
jae
aas
jo
jns
push
and
ljmp
adc
das
adc
insb
or
mov
mov
icebp
inc
push
mov
pop
xchg
sub
rep
push
adc
add
les
cmp
fists
mov
imul
or
loopne
sub
mov
es
mov
pop
insb
lret
lods
scas
mov
mov
xchg
inc
aad
jp
fsubs
out
arpl
mov
cmpsb
add
xlat
rcrb
loope
fildll
push
cmp
addl
inc
lea
mov
dec
popf
xor
pusha
subb
fadds
mov
aad
cmp
rorl
lahf
loop
xor
dec
jl
cmp
xchg
lcall
fmuls
fisttpl
fiaddl
decl
rdmsr
xchg
jns
or
lods
movsb
out
push
nop
add
push
pop
cli
dec
dec
xor
inc
xchg
inc
data16
jecxz
outsl
jp
xchg
pop
push
jle
mov
mov
outsl
mov
mov
jno
mov
and
push
cmpsl
xchg
sbb
leave
mov
pop
mov
cmp
adc
cmp
stos
mov
pop
xorb
insl
inc
loop
push
std
push
or
test
xchg
in
mov
dec
hlt
sbb
and
ss
mov
or
out
push
in
xchg
xchg
ja
jl
pushf
mov
or
inc
push
popl
inc
dec
pop
ret
pop
adc
dec
ja
jae
out
jno
or
jmp
jmp
cmc
xor
cmp
inc
loopne
cmpsl
cmp
rclb
sti
out
jg
fxch
cmp
gs
test
push
fisttpll
out
push
sub
lahf
bound
inc
fwait
pop
movsb
or
xor
scas
scas
inc
std
or
push
sti
lcall
ds
int3
call
test
jae
ljmp
adc
jl
add
repnz
ja
lret
sub
aas
loope
dec
je
jae
notl
mov
inc
jbe
mov
push
xchg
sbb
push
jge
subl
rcrb
ficompl
test
into
out
enter
fs
in
mov
xchg
cltd
fmul
mov
test
cmp
sbb
xor
mov
dec
jae
push
lds
or
mov
loope
dec
loopne
mov
imul
fists
mov
jp
daa
and
mov
mov
xlat
push
sub
mov
push
push
mov
mov
sti
or
pushf
and
mov
in
inc
les
xchg
leave
push
push
outsb
inc
pusha
push
std
stc
push
jnp
rorl
movl
test
insb
xchg
daa
mov
out
dec
in
cmp
mov
adc
or
stos
dec
mov
enter
ja
aad
mov
in
mov
mov
imul
je
test
mov
mov
mov
adc
daa
sbb
sub
adc
cwtl
ficompl
imul
lock
pop
pop
xchg
cwtl
cmpsl
and
movzbl
or
call
aam
aaa
mov
scas
xchg
scas
add
jae
imul
xchg
push
popa
in
clc
inc
test
ds
stc
pop
push
push
jl
xor
pushl
punpckhdq
fpatan
pop
cmpsb
pusha
aas
xchg
jo
outsl
pand
hlt
movsl
cs
in
jp
mov
in
out
pop
jge
and
in
xchg
adc
xor
xchg
icebp
aaa
and
in
cmp
aaa
cmp
sbb
push
shll
ret
xchg
xor
ret
lock
push
mov
fmul
pusha
iret
jns
push
cld
mov
fldcw
movb
test
negb
jmp
pop
clc
sbb
mov
cmp
mov
pop
test
movsl
mov
mov
sarl
aam
leave
lods
jg
cs
sbb
add
pop
notl
xlat
jno
push
pop
mov
int3
movsb
dec
sbb
pop
fbstp
fcom
popa
mov
repz
pusha
pusha
and
dec
sti
mov
xchg
push
in
rolb
xchg
shlb
mov
lret
test
adc
jno
push
xchg
sahf
dec
testb
test
inc
call
aas
dec
arpl
inc
add
xchg
adcl
jecxz
test
sub
fnstcw
or
cmp
push
xor
rorb
ss
and
cwtl
imul
mov
push
pop
pop
call
shll
or
hlt
sbb
jmp
insb
stc
dec
jns
daa
sbb
imul
clc
mov
lcall
mov
mov
mov
lret
inc
or
xchg
xchg
mov
mov
in
xor
pop
cld
mov
fwait
jae
xchg
mov
add
and
mov
ret
aaa
push
call
jno
int
pushl
fists
jno
mov
lret
pop
sub
insl
insb
jp
jl
and
mov
andb
add
xchg
mov
cmc
stos
mov
lahf
nop
movaps
jno
push
sub
loope
mov
add
imul
xchg
fs
insb
insb
xor
push
nop
pop
lods
xorb
or
std
and
add
rorl
ficoml
mov
rorb
cwtl
inc
out
add
push
mov
inc
mov
inc
aad
sbb
inc
addr16
mov
and
sub
dec
mov
lods
inc
in
mov
or
mov
pusha
adc
jnp
ret
stc
test
sbb
hlt
cs
addr16
icebp
and
fwait
lods
push
xchg
xor
mov
add
push
mov
add
lret
xor
test
in
in
adc
sub
aaa
out
inc
mov
and
add
and
push
mov
and
mov
lret
xor
add
scas
dec
aaa
and
mov
mov
adc
loopne
jle
imul
neg
addr16
xor
hlt
pop
mov
les
leave
xor
in
sub
xorl
fdivs
jl
inc
jg
lods
loop
test
sub
push
mov
sbb
rcl
cmpsl
gs
and
mov
push
inc
mov
mov
xor
imul
movl
shlb
cmp
aas
stc
add
out
xchg
jmp
inc
jno
ss
ret
or
insl
stos
lea
hlt
rolb
sub
je
dec
testl
push
clc
cmovnp
std
pop
loop
push
popf
nop
inc
std
cld
rol
in
int
fwait
scas
pop
addr16
mov
out
sbb
inc
fists
add
jecxz
fwait
rorl
fs
loopne,pn
lret
xor
pop
mov
cli
sbb
aaa
add
ret
mov
sbb
inc
repnz
pop
loopne
dec
dec
mov
or
nop
outsb
cmp
or
test
int3
shrl
jg
stc
add
adc
imul
in
addr16
mov
stos
lahf
and
mov
cmp
icebp
add
sti
sbb
insl
loope
dec
lds
dec
int3
hlt
icebp
pop
dec
loopne
bound
cwtl
and
paddw
es
inc
mov
mov
test
iret
pop
mov
mov
push
in
mov
mov
test
push
mov
gs
ret
xchg
jo
lods
adc
jns
loopne
jae
sbb
outsl
cmp
or
pop
add
fdivp
in
xchg
sbb
inc
jns
notb
inc
and
aam
in
xor
mov
add
insb
icebp
mov
fcmovu
sub
inc
push
ret
mov
into
add
fstl
xchg
jbe
es
mov
icebp
fs
jl
add
mov
or
xchg
sar
lea
jns
xor
mov
dec
pop
cmp
shl
mov
adc
shlb
fnstcw
scas
out
ss
push
jno
outsl
js
lcall
dec
sub
and
js
jo
and
fisubrl
popf
cwtl
int3
ret
inc
mov
or
in
inc
dec
out
mov
dec
adc
xor
aad
insb
and
xchg
pop
mov
int
sarb
test
addr16
dec
xor
dec
add
cmp
push
lds
rcrb
pop
into
dec
clc
test
cmpsb
mov
add
arpl
xor
mov
or
popf
pushf
fmuls
ljmp
jnp
mov
shr
int
push
or
test
inc
adc
lcall
xchg
sahf
mov
cs
sarb
jmp
adc
test
test
movsl
cmp
pop
ja
fwait
cld
sub
jne
sbb
dec
mov
mov
out
xchg
int3
rolb
popa
sub
popf
test
lret
sbb
push
loop
out
jmp
sub
xlat
sub
shl
xchg
daa
and
in
int3
fmull
xchg
xchg
or
ljmp
je
lods
inc
cmp
decb
dec
ror
mov
push
pop
push
in
pop
jmp
sbb
mov
pop
mov
sbb
es
test
sub
fcmovb
push
lcall
cld
mov
mov
pop
mov
xor
xlat
out
sbb
jle
jmp
dec
movsb
movsl
fimull
lret
lahf
jne
hlt
add
pop
mov
mov
adc
and
loopne
imul
shrl
xchg
sbb
movsb
movsb
inc
pop
leave
movsl
mov
lret
xchg
mov
daa
sti
repz
popl
fwait
push
cmp
daa
nop
dec
jl
loop
jne
fisubs
xchg
inc
stos
mov
jnp
popf
pop
xchg
out
lods
fwait
out
mov
iret
loope
jg
mov
cmp
cmp
cs
pop
xchg
pop
into
add
icebp
hlt
cltd
shll
daa
add
pop
push
add
leave
jae
push
std
pop
data16
cmpsb
push
stos
cmc
pop
xchg
repz
sbb
add
mov
add
inc
lods
xor
call
cmp
popa
push
inc
fwait
push
xrelease
add
cmp
adc
ficompl
jno
repnz
inc
jno
jecxz
insb
xchg
nop
push
jmp
pop
sbb
ret
and
jo
addr16
xchg
mov
aas
loopne
test
mov
fwait
mov
sub
repz
or
std
xorl
int3
imul
jecxz
les
add
into
mulb
pop
shrl
cmpsl
mov
addl
and
shll
xor
xchg
xor
lods
sar
mov
nop
rcll
lock
jns
fisttpll
jo
rcrl
out
mov
mov
sahf
pop
fstps
hlt
lods
scas
lret
clc
mov
imul
push
loop
lea
sbb
and
and
jp
dec
shlb
lds
int
xor
pop
xchg
adcb
pop
mov
sub
pop
push
adc
stos
cltd
mov
add
loopne
addr16
ljmp
aas
sub
mov
inc
xchg
mov
and
inc
daa
mov
pop
std
cwtl
sti
sub
jae
lods
push
incb
call
cmpsl
xchg
rcrb
out
sbb
jb
cmp
rorl
pop
insl
pop
shlb
fcoms
mov
xchg
xcrypt-cfb
cmpsl
and
fldcw
adc
mov
cmp
aas
xchg
sbb
sahf
clc
clc
mov
ljmp
sbb
jne
jns
add
add
fs
orl
jb
jbe
pop
aam
test
imul
xchg
cmpsb
sarb
sahf
mov
ret
movsl
leave
clc
sahf
jg
iret
and
outsl
and
lock
push
out
mov
sub
jb
repz
mov
lods
cli
rorb
cmp
inc
xchg
xor
cmpsb
imul
fs
push
insl
je
test
pop
sbb
xor
mov
xchg
push
insb
fcmove
push
insl
pop
ss
movsl
test
es
push
add
push
addr16
mov
iret
add
loopne
mov
inc
sbb
cmpsl
lods
mov
sub
inc
popf
xor
subl
cli
ret
jno
jo
aas
cwtl
mov
ss
test
adcl
add
push
lods
pop
mov
into
mov
call
add
mov
push
sbb
sub
pop
xor
std
push
mov
mov
fistl
frstor
inc
lcall
pop
push
popa
movsb
xchg
adc
mov
in
enter
cld
pop
push
stos
repnz
ljmp
dec
decb
xor
outsl
jb
hlt
push
push
mov
mov
out
add
scas
dec
insb
xorb
mov
stos
sbb
int
pop
mov
push
aam
rorb
in
push
shlb
cmpsb
cwtl
gs
sbb
subb
sub
or
addb
xchg
xor
xchg
out
mov
cs
xlat
adc
shrl
sub
inc
mov
sbb
shrl
lods
lret
mov
fbld
mov
stos
xor
enter
jg
aad
scas
cltd
bsf
adc
arpl
addr16
shll
test
xchg
lods
subb
test
dec
lods
inc
push
cwtl
push
daa
std
aam
scas
xor
insl
movsl
add
ss
dec
loop
lret
add
xor
lock
nop
and
cmp
aam
call
repnz
cmpsl
lods
dec
in
mov
inc
out
orl
cs
mov
dec
sbb
xor
fs
push
jl
enter
bound
mov
or
push
push
xchg
pushf
mov
or
insb
mov
dec
arpl
les
cmp
sbb
and
jg
xlat
pop
fldcw
dec
jl
cmp
jnp
lods
xchg
out
ret
xchg
push
rorl
in
push
fcmovbe
nop
jnp
push
xor
fwait
sbb
mov
imul
dec
fdivl
add
push
sbb
xchg
pop
stos
pop
mov
mov
pushf
and
sbb
adc
fwait
test
or
cs
fdivs
imul
jl
es
pushf
jp
imul
stos
pop
enter
cltd
cmpsb
pop
ljmp
imul
mov
lock
and
xor
mov
sub
cwtl
sub
xor
cmp
pop
sti
mov
ror
pop
repz
mov
push
pop
das
xchg
mov
mov
dec
adc
mov
lods
orl
pop
pop
dec
mov
insl
xor
ficoml
out
popa
movsl
dec
je
outsb
stc
mov
les
mov
ss
or
mov
lahf
push
mov
xchg
xchg
lret
decb
fisubs
fmulp
xor
mov
jno
adc
sbb
fisubrl
mov
xlat
dec
inc
insb
sbb
lret
inc
pop
add
jp
xchg
push
out
jg
daa
es
movsb
fsts
nop
aam
data16
jg
inc
in
xchg
pop
out
aam
inc
jo
loop
cmp
bound
cmp
cmp
mov
ret
dec
iret
dec
adc
insl
add
adc
xchg
push
jne
dec
jo
push
dec
jns
push
insb
mov
xor
dec
int
xor
cli
stc
add
xor
or
mov
cli
or
or
xchg
insb
enter
imulb
loop
inc
xchg
xlat
adc
shrb
loop
movsl
minps
or
shl
mov
jmp
lea
cmpsb
nop
in
cmpsb
sbb
mov
or
mov
xchg
mov
bnd
push
mov
insl
gs
jecxz
pop
fisttpl
pushf
sbb
mov
push
jmp
mov
jge
jl
lods
addr16
xor
rcl
shrb
jecxz
pop
push
mov
xlat
lea
sbb
imul
dec
mov
adc
mov
jle
inc
in
push
outsb
ljmp
scas
mov
mov
lods
mov
adc
test
mov
mov
pop
scas
out
mov
psllq
cltd
loop
adc
iret
ret
push
pop
push
in
jae
cmp
push
in
cmp
dec
jo
ss
inc
and
fsubp
das
ds
dec
pop
adc
xor
shr
lcall
ljmp
jmp
push
hlt
das
repz
rorl
cmp
jae
pop
jge
outsb
mov
mov
xchg
lret
cld
inc
sbb
movsl
sub
cli
es
add
sarl
mov
std
adc
push
pop
jp
stos
or
cld
push
xor
dec
cmp
insl
push
jno
cmpsl
out
jbe
shll
or
add
cltd
push
adc
pop
add
enter
push
int
out
inc
xchg
sbbl
and
sbb
adc
or
inc
mov
test
mov
hlt
loope
gs
lahf
pop
push
cmp
test
mov
int3
bound
add
mov
cmpsl
call
lret
mull
jp
out
mov
xor
push
icebp
add
mov
imul
mov
or
dec
mov
xchg
push
hlt
in
jg
sbb
sub
cld
aad
dec
aad
push
push
dec
fs
mov
and
add
icebp
pusha
jmp
fs
jns
and
adcl
stos
loop
adc
adc
lock
rolb
adc
and
push
xchg
test
mov
test
ret
mov
in
adc
dec
jge
cmp
add
scas
adc
lret
and
xchg
ljmp
fdivrs
pop
das
sub
cmp
sub
mov
lods
dec
jg
adc
add
xchg
xchg
xlat
pop
xor
xor
cmp
mov
aam
dec
inc
cmp
out
mov
fsubrs
out
pusha
std
adc
test
push
inc
lock
mov
hlt
dec
inc
sbbb
outsb
sbb
pop
and
and
sub
scas
test
or
and
dec
in
fxtract
jb
jle
add
inc
mov
mov
out
pop
ja
addr16
fs
add
push
dec
cwtl
xchg
mov
mov
rorb
sbb
push
lods
lods
mov
pop
push
stos
stos
mov
js
loope
js
insb
insl
cltd
test
sub
sbb
mov
es
mov
fsts
jecxz
push
push
adc
push
sub
repz
cmp
insl
lods
stc
dec
mov
jbe
fistl
out
jae
and
or
mov
mov
testb
jns
push
xchg
sbb
mov
cld
mov
push
mov
cmc
xchg
mov
ret
cmp
or
ja
dec
jle
daa
sub
insb
addr16
mov
push
jle
aas
sbb
push
in
ja,pn
ljmp
xchg
mov
jbe
arpl
outsb
mov
or
sub
sbb
popf
scas
orl
out
aad
jl
js
das
push
aam
out
stos
loope
les
enter
pusha
or
push
sbbl
sub
cwtl
sahf
hlt
pop
andnps
int
push
cld
fdivs
lods
and
jp
and
adc
dec
inc
push
push
adc
in
lods
cmp
aam
std
in
inc
pusha
das
outsl
mov
out
cmp
add
bound
shll
popf
sub
xchg
mov
ret
in
mov
out
pop
xorb
xchg
rorb
into
pop
ds
mov
jp
stos
and
iret
shl
adc
and
stos
mov
je
push
mov
in
add
or
enter
lods
repnz
imul
mov
insb
movsl
bound
cld
and
pop
adc
mov
cmpsb
pop
xchg
imul
nop
lahf
jge
sbbb
aad
aas
push
repz
lds
lahf
aas
adc
sub
pushf
aas
repz
stos
mov
cmpsl
cld
fiadds
sbb
addr16
es
cmovno
cld
das
cmp
rolb
or
je
lods
daa
add
inc
mov
out
rcrl
daa
lahf
mov
mov
push
push
push
xchg
cld
imul
gs
cli
mov
les
mov
push
out
dec
dec
add
pushf
in
dec
je
cmp
jl
fwait
ret
pop
scas
and
mov
es
lcall
test
aam
ficompl
out
jae
test
inc
jne
xor
imul
loope
or
and
mov
sti
mov
mov
inc
in
jmp
dec
test
hlt
cwtl
repz
pop
int
imul
daa
int
jle,pn
or
js
cmpsl
sbb
mov
dec
out
adcb
sbb
rorl
xchg
test
pop
fwait
and
xchg
push
test
mov
lcall
jle
outsl
dec
js
mov
and
leave
cmp
xchg
lea
scas
sbb
lret
pop
les
jns
sub
aad
gs
sbb
cmp
pop
ret
cmpsb
lret
sarb
and
dec
push
mov
adc
cli
adc
in
test
dec
fcmovbe
lcall
dec
pop
mov
ljmp
mov
sbbl
dec
sbb
adc
pop
mov
icebp
or
xor
sbb
test
call
icebp
jp
xchg
cmp
and
arpl
push
bound
xorl
inc
rcrl
or
js
xchg
js
push
xor
push
jbe
xchg
test
loopne
inc
jmp
jo
or
sub
xor
add
pop
outsl
popa
iret
add
sub
dec
xchg
push
add
mov
mov
call
xor
rorb
push
dec
adc
sub
testb
mov
pop
mov
xchg
fmuls
icebp
test
pop
inc
pop
jae
ja
or
xchg
push
outsb
or
cmp
add
gs
cmp
adc
in
add
js
in
popf
mov
in
ds
and
cmp
scas
sub
imul
xchg
push
cmp
fcmovb
xchg
test
push
xor
xchg
incb
aaa
ds
movsl
scas
cmpb
add
pop
pop
fdivrl
dec
pop
dec
mov
inc
add
std
hlt
ss
jg
xor
pop
mov
xchg
sbb
or
pop
aad
insl
cmpsl
pop
sti
mov
int
xchg
mov
clc
cmp
jo
and
and
push
mov
js
cmp
mov
movsb
rcrl
cltd
fstpt
and
divl
fwait
mov
inc
jecxz
data16
lret
cmp
not
or
mov
mov
pop
call
xchg
fwait
and
das
iret
mov
xchg
xchg
or
and
inc
scas
hlt
or
pop
jg
jp
inc
mov
stc
repz
call
jns
jns
and
xor
mov
sub
ret
les
cld
negl
sub
nop
test
insl
js
jle
ret
aam
dec
inc
cmpl
outsb
dec
fcompl
pop
call
stos
sarb
pop
fldcw
jo
jae
cld
dec
enter
or
pop
data16
jnp
pusha
aad
jo
jmp
das
outsl
scas
inc
mov
and
out
inc
movsb
inc
pop
add
jbe
and
dec
jns
jae
stos
push
stos
lahf
pop
ret
mov
fmuls
inc
xchg
pop
mov
push
in
mov
xor
mov
fstps
jge
enter
mov
stos
adc
inc
dec
push
xor
icebp
mov
pushf
cs
cmp
int
lcall
dec
movsb
inc
out
push
subl
dec
ja
cmp
std
movb
mov
iret
cmp
std
adc
xchg
nop
cs
sbb
shrb
int
xlat
jnp
rolb
in
mov
xchg
repnz
leave
repz
xor
lcall
aam
jae
jns
imul
loope
fisttpll
repnz
ljmp
mov
xchg
out
lahf
lahf
bound
pop
jne
aad
mov
and
mov
mov
jge
xorb
inc
lret
outsb
pop
into
adc
in
or
sbb
das
or
das
out
push
or
cmp
mov
dec
int3
test
or
fcom
rcr
pop
adc
jae
icebp
jo
gs
mov
cmp
pop
clc
stos
fdivrl
arpl
xor
loop
mov
andb
imul
push
inc
mov
xor
divb
and
insl
inc
xor
jecxz
scas
mov
sbb
or
mov
xchg
lret
fwait
cltd
dec
fs
js
sub
pop
jle
inc
pop
cld
lcall
enter
adc
cmp
loope
cmp
add
loopne
push
push
jo
and
imul
adc
int
adc
dec
xor
xchg
mov
sub
pop
xor
lret
scas
pop
jnp
loop
sbb
movsb
popf
in
aaa
testb
cmp
adc
pop
or
push
jbe
mov
roll
stc
jmp
test
mov
adc
sub
sub
jg
xor
jne
fwait
jmp
fidivs
jo
push
rorl
sarb
andl
daa
lcall
enter
imul
cli
addl
repnz
or
sbb
pushf
xchg
ret
cli
lds
rcr
sarl
imul
inc
push
mul
out
push
push
xor
mov
test
dec
dec
insb
addb
jecxz
sbb
or
add
dec
mov
add
rolb
lahf
lahf
push
or
push
mov
out
fsub
push
adc
in
jl
insl
dec
jbe
fisubs
jmp
sbb
xor
aam
stos
pop
xor
rcrb
mov
fcoml
sub
mov
push
lret
pop
xchg
xchg
js
lret
xchg
test
add
add
jmp
cld
inc
js
xor
mov
cmp
fsubrs
leave
ret
sbb
and
subl
adc
add
jl
cmp
mov
test
inc
in
sbb
int3
out
pop
jecxz
clc
cmp
jne
inc
sbb
mov
cmc
popf
sbb
sub
sti
mov
pop
jl
mov
xor
inc
jl
sub
jge
add
pop
jae
imul
pop
xchg
int3
aas
in
mov
inc
jmp
mov
and
test
jmp
popf
repnz
mov
pop
gs
sti
into
or
cltd
jbe
dec
and
sbb
jge
sub
stos
or
xor
pop
jmp
les
and
jnp
sbb
sbb
or
in
aaa
dec
sub
adc
adc
sbb
cmc
insb
pop
dec
xchg
fistl
xchg
or
jecxz
pusha
xor
xlat
cmp
and
fcmovb
jmp
add
in
add
shlb
into
movsb
lds
cli
mov
incl
mov
fdivrs
inc
fidivrs
sbb
jecxz
mov
hlt
xchg
mov
cmp
jbe
jno
jns
or
sub
ret
sti
cmp
push
jmp
ficompl
push
imul
mov
mov
cmp
dec
jnp
es
add
jle
testl
push
pop
cmp
push
cltd
cmp
cmp
bound
xchg
loopne
dec
enter
mov
sahf
fistps
jno
in
testl
loop
jmp
xor
in
shll
outsl
fnstcw
out
jb
and
or
jl
rol
movsl
cmp
push
call
cmpsl
insb
inc
pushl
les
sub
pmulhuw
in
cmc
cli
push
inc
sbb
pop
xchg
mov
inc
popa
sbbb
push
pop
inc
icebp
adc
dec
je
popf
in
xchg
popa
dec
iret
xchg
jne
xchg
shll
leave
mov
mov
add
popa
inc
jle
add
mov
or
rcr
xchg
sub
push
daa
mov
decb
es
and
std
xlat
stos
je
rclb
nop
imul
xchg
sbb
hlt
push
mov
mov
rcrb
sub
pop
testl
das
outsb
mov
in
sub
add
nop
out
cmc
mov
jne
js
push
in
inc
push
bound
cmp
inc
pushf
pop
jb
loopne
shrl
mov
roll
test
mov
testb
pop
call
push
jb
cmp
hlt
pop
mov
fs
shll
stos
push
pop
lret
mov
fsubl
inc
adc
xchg
pop
rol
iret
in
les
mov
daa
push
punpckhbw
rorl
sar
movsb
mov
push
out
jb
jle
stos
xchg
mov
out
mov
ret
xchg
rclb
int3
aam
in
xor
jbe,pn
xchg
mov
cmp
jg
imul
movsb
push
pop
xor
xor
jge
cmp
xor
daa
lret
xchg
push
movl
test
ss
sub
lcall
mov
js
xchg
cmpb
or
in
xor
sbb
sbb
dec
push
xor
xchg
outsb
outsl
fldl
jne
aas
rclb
andl
neg
loopne
arpl
mov
rcrl
repz
lock
sbb
jns
pushl
dec
cltd
push
push
div
lahf
icebp
jmp
and
dec
xchg
mov
repnz
xchg
sti
mov
dec
int
xor
loopne
and
push
scas
out
pushf
aam
std
cmp
lock
hlt
mov
add
arpl
add
sbb
dec
cmp
ret
lods
jmp
mov
mov
push
daa
jp
and
fsubp
pop
adc
sbb
mov
pop
je
je
push
fistps
adc
das
cmp
pop
jne
popf
test
adc
lds
ljmp
dec
xchg
add
push
mov
rcrl
rcll
adc
push
cmp
enter
dec
lods
stc
fadd
cmp
imul
pusha
or
lret
dec
jg
in
mov
jp
sti
xchg
stos
int
adc
ja
and
movb
ss
jecxz
loop
mov
adc
push
pop
mov
jg
in
dec
mov
jmp
and
out
mov
mov
cmc
mov
mov
call
outsl
adc
lods
repz
mov
inc
cli
mov
adc
jnp
call
dec
and
icebp
ljmp
mov
fisttps
imul
sub
loopne
mov
loopne
jge
push
xchg
jecxz
push
adc
decb
sub
loope
add
sbb
xor
mov
fyl2x
sub
cmpsb
inc
jo
sub
icebp
fwait
mov
sub
test
je
cwtl
xor
cltd
pop
lret
add
sbb
and
imul
not
lret
lcall
stos
xor
hlt
inc
loope
sbb
out
sub
xor
push
inc
push
sbb
jbe
gs
in
aaa
sahf
or
lock
dec
fldl
jmp
data16
jne
xchg
shl
call
movsb
cmpb
or
push
xchg
mov
mov
aam
nop
jb
clc
pop
rcr
jnp
das
pusha
sbb
test
lock
jge
and
ficoml
cmp
mov
and
sbb
push
addr16
or
add
subl
dec
inc
out
push
testl
sbb
insb
testl
pusha
push
int
adc
outsb
dec
jp
stc
js
movsb
fwait
push
inc
lret
jecxz
rcrb
mov
enter
and
mov
push
xchg
jge
ljmp
cmpsb
ret
jbe
jge
pop
sub
popf
sub
icebp
pop
push
xchg
sbb
sbb
adc
outsl
es
pop
xchg
aaa
out
cmp
and
inc
test
fs
add
idivl
sbb
mov
das
movsbl
sbb
dec
out
out
ret
in
repnz
roll
dec
dec
seto
xchg
cmp
jo
inc
xchg
xchg
fs
cmpsl
adc
cmp
sub
in
mov
movsl
push
or
push
outsl
or
mov
mov
xchg
arpl
aam
lods
repnz
or
xchg
mov
push
insb
jge
rorl
mov
mov
adc
lods
out
rolb
movsb
ror
pop
xchg
lahf
subb
xlat
mov
and
test
inc
aam
cmp
inc
mov
mov
stos
jp
flds
mov
mov
sub
xchg
fs
and
xchg
cmpsl
js
cs
xor
ret
bound
shlb
cmp
popa
outsl
jmp
push
cli
jmp
out
ret
jge
std
mov
pop
lea
shll
adc
aaa
fidivl
enter
mov
dec
sbbb
inc
mov
push
sbb
or
mov
mov
loopne
mov
dec
sub
movsl
ja
or
inc
cmp
adc
fnstenv
lea
mov
push
pop
sti
arpl
cmp
jmp
dec
fdiv
pop
push
decb
insb
pop
pop
push
scas
das
imul
sub
movzwl
push
movl
cmpsl
xor
jecxz
clc
push
xchg
xlat
sahf
and
jbe
call
push
shrb
idiv
lock
cmp
adc
test
xor
cmp
push
lret
adc
jo
and
lods
addr16
lds
in
cmc
jns
sub
pop
adc
push
xchg
ss
cli
stc
cltd
test
xchg
add
inc
loopne
jge
mov
xchg
sti
or
push
dec
incb
repz
repnz
jp
insb
push
shll
jnp
testl
mov
jne
sub
add
and
xchg
mov
xchg
xchg
std
xchg
std
loope
into
jecxz
jecxz
add
sti
xchg
cmp
and
jbe
lea
mov
mov
lods
incb
cmp
jge
inc
jp
and
jmp
das
shll
mov
fcomp
dec
jno
lret
cwtl
inc
jge
ss
int3
push
adc
inc
push
repz
cwtl
sub
lret
push
outsb
iret
mov
sahf
arpl
and
movsl
pop
mov
aaa
adc
mov
movsl
mov
sahf
in
mov
mov
sub
repz
pop
int
sbb
arpl
test
sub
xlat
aad
into
roll
jo
xchg
push
cs
xor
sbb
mov
cmp
add
test
mov
and
cmpsl
out
mov
cli
sbb
push
icebp
fadd
mov
mov
pop
sbb
xchg
packsswb
cmpl
xor
rorl
outsb
adcb
ret
leave
clc
stos
adc
loope
lods
out
lret
dec
mov
and
bound
inc
sub
xchg
ror
mov
mov
pop
pop
pop
stos
fwait
mov
xchg
dec
rclw
cmp
dec
pop
dec
add
sbb
pop
push
sbb
push
cmp
cli
mov
fs
mov
xchg
adc
add
movsb
adc
jnp
ljmp
mov
mov
mov
xor
mov
lret
mov
mov
mov
mov
xchg
or
xchg
ret
rcl
push
ja
inc
sbb
ret
mov
push
inc
popa
pop
fcoms
cmc
sub
push
stos
push
push
subl
and
rorl
jno
add
mov
lret
int
mov
xchg
jne
sbb
xchg
shll
jmp
mov
add
mov
push
push
mov
xchg
ret
scas
rclb
push
out
into
ficompl
mov
in
enter
jecxz
adc
outsb
scas
push
pop
mov
mov
pop
sub
sbb
mov
sbb
jle
sahf
inc
sbb
imul
repz
cmpsl
insl
push
sbb
fcompl
xor
mov
pushf
lock
int3
ret
jle
into
movsl
shll
sub
incb
xchg
int3
sbb
lret
adc
xchg
mov
sti
and
stc
or
mov
sahf
jne
arpl
out
rcl
scas
xor
cmp
insb
add
xor
sbb
and
inc
cmp
pushf
xor
xchg
adc
or
sti
loopne
pop
cmpsb
cwtl
adc
xor
mov
sbb
sbb
repz
call
hlt
js
add
add
std
shl
daa
xchg
lods
shll
movsl
lods
scas
sbb
push
ret
int3
push
pop
push
out
faddp
mov
pop
adc
mov
sub
lcall
inc
xor
insl
pop
dec
movsl
pop
mov
leave
sub
in
aas
les
and
int
jno
imul
xor
mov
pop
shll
mov
pushf
and
sti
jg
mov
outsl
cmpsb
xor
xchg
inc
push
jae
fnstcw
int
mov
push
pop
outsl
sub
pop
test
aam
sbb
subb
cwtl
add
push
xor
jg
push
xchg
mov
cmp
sbb
test
or
sbb
sub
adc
lock
scas
push
dec
sbb
cmpb
outsb
and
cmp
repz
pop
ja
dec
mov
or
mov
popa
cmovge
xchg
hlt
adc
nop
or
xchg
repz
cmp
mov
cmp
in
xchg
adc
ds
inc
outsl
rorl
mov
cmp
add
adc
pop
bound
js
cmpsl
cmp
jnp
ret
out
mov
add
int
and
jbe
icebp
jmp
mov
lock
std
add
pop
unpcklps
or
mov
ficomps
lock
cmp
ret
push
sub
data16
shlb
stos
lret
push
lods
dec
subb
test
mov
or
dec
sbb
add
iret
or
sbb
push
xor
pop
mov
repnz
lock
gs
insb
dec
mov
inc
ret
adc
insl
repnz
mov
mov
push
pop
test
pop
pusha
pop
and
add
pop
sub
jp
xor
adc
mov
xchg
loop
in
push
divl
add
bound
arpl
imul
aas
hlt
sbbb
lret
test
push
les
lcall
out
and
xchg
test
push
mov
cmpsl
or
iret
aam
push
mov
fildl
jl
test
cld
sbb
inc
out
dec
mov
inc
scas
in
in
xchg
cmpsb
fsubrp
xchg
jns
insl
mov
or
push
mov
mov
or
sbb
fdivl
pop
loop
decl
mov
repnz
loopne
jp
lea
inc
sub
sub
dec
xor
sub
loope
int3
mov
xchg
xor
or
inc
push
inc
mov
xlat
cli
jne
clc
sbb
int3
scas
ds
xchg
outsl
push
xor
ret
add
sahf
mov
mov
loopne
cld
mov
push
xor
or
addr16
mov
pop
or
mov
pop
scas
push
inc
mov
or
add
sahf
cmpsb
xchg
repz
call
add
dec
ljmp
fsubrp
lret
xchg
dec
jp
inc
into
add
das
fstl
aad
and
push
inc
add
nop
decb
pop
and
push
outsl
lock
cld
scas
mov
dec
jecxz
push
ss
imul
mov
jp
xor
xchg
cmc
cli
mov
mov
ret
xchg
and
lret
sub
sbb
fiaddl
jbe
pop
int3
dec
push
jle
add
or
fs
int3
jo
lds
dec
lea
mov
out
lock
insl
or
fwait
bound
jmp
add
lret
ficoml
jo
jecxz
sub
and
arpl
add
lock
xchg
jnp
in
inc
lods
leave
hlt
cmp
clc
dec
adc
fiadds
test
xchg
or
push
cld
dec
jnp
adc
adc
adcb
fnstenv
sahf
into
xchg
mov
sbb
push
lcall
pop
loopne
fdivrl
xchg
inc
xchg
push
inc
addr16
sub
out
call
stc
iret
movsb
cmpl
push
test
mov
loope
jmp
shll
push
inc
je
cli
mov
adc
or
push
arpl
lret
nop
es
sbb
and
mov
pop
fisubrs
mov
xchg
mov
push
or
jbe
mov
push
xchg
clc
outsl
push
pusha
leave
dec
sbb
sbb
mov
mov
in
lods
xchg
push
rcll
and
mov
pop
mov
sub
cmp
sti
xchg
dec
jmp
int3
add
dec
out
negb
jp
lods
into
push
push
dec
das
ret
mov
test
and
movsl
push
push
sub
mov
jnp
mov
push
leave
lcall
inc
iret
mov
inc
xchg
mov
mov
jno
inc
sbb
sbb
inc
mov
xchg
sub
adc
unpckhps
rol
pop
hlt
lahf
aaa
mov
xchg
sbb
aas
stos
cld
mov
or
lods
aaa
clc
add
add
push
xchg
cs
jl
mov
ret
cmp
mov
fdivl
inc
into
mov
loopne
xchg
pop
shlb
xor
push
inc
popa
aad
inc
fcomp
sarb
adc
lods
pop
and
popf
cli
out
inc
push
fidivrl
pusha
cmp
and
xchg
out
pop
mov
scas
jmp
fucom
push
dec
mov
xchg
out
rolb
outsb
jecxz
mov
fsubrl
pushf
push
enter
adc
lret
shll
xor
and
repnz
pop
aam
adc
mov
lods
cmp
iret
pop
inc
fs
push
shlb
or
dec
xor
outsb
insb
xor
test
shrl
add
xor
fwait
and
pop
fs
cmp
xor
and
xor
in
mov
and
sbb
xchg
jp
sub
xor
iret
mov
in
aam
push
jecxz
dec
dec
cld
push
aad
cmp
dec
gs
push
stc
ljmp
cmpsb
idivl
insl
test
pushl
movb
pop
pop
ret
addb
jmp
dec
lahf
shlb
mov
mov
inc
xchg
mov
daa
out
lds
rcl
or
push
jg
jno
push
fldenv
push
cmp
xchg
das
hlt
daa
mul
adc
push
aad
test
jae
repz
mov
push
aam
lahf
rorb
hlt
jp
aaa
or
and
mov
shr
ljmp
mov
adc
and
jb
cwtd
ret
cmp
push
stos
je
test
pushf
js
xor
out
int3
inc
adc
and
xor
lahf
gs
stos
aaa
jle
lea
add
dec
and
cwtl
cmp
aaa
pusha
mov
mov
ret
push
cmp
push
fwait
mov
pop
cltd
pop
fmuls
mov
jno
sbb
mov
aad
in
sbb
movb
push
xor
sar
repz
imul
jo
jg
adc
jo
push
pusha
and
push
xor
std
xchg
add
push
sahf
test
insl
rdtsc
jmp
xchg
mov
test
in
jo
pop
mov
jo
mov
in
sbb
adc
inc
mov
push
mov
cld
adc
xor
shll
fsubrl
add
mov
add
js
loop
aas
add
xchg
insl
out
cmp
test
mov
cmpsl
mov
push
pop
cwtl
jle
in
jae
hlt
mov
add
scas
lret
stc
xchg
sub
in
sub
mov
cli
mov
call
pop
push
int3
das
adc
sbb
cmp
push
jl
fnstenv
add
out
lods
mov
push
fisubrl
imul
or
test
repnz
aaa
fs
imul
stos
cmp
imul
push
xchg
add
sbb
out
test
sub
dec
stos
push
ljmp
or
sbb
jns
mov
ljmp
jbe
bnd
add
cld
in
sub
xchg
leave
aad
popa
xchg
jge
test
rclb
and
mov
repz
cmp
xchg
sbb
sbb
sub
mov
mov
dec
mov
inc
repnz
pushf
jb
cmp
movsl
jb
or
aaa
push
pushf
out
mov
js
push
imul
dec
sub
outsb
or
ret
ret
daa
xchg
lods
and
aad
sbb
or
sbb
xor
cmp
add
inc
stc
mov
push
xchg
imul
sar
loope
cltd
int3
cmp
fidivs
imul
inc
mov
iret
in
dec
frstor
lods
lahf
mov
sahf
pop
sti
mov
ficomps
add
inc
dec
insb
int
jg
je
jns
out
insl
cs
cmp
mov
mov
sbb
andb
or
popf
sub
or
addr16
pop
or
in
pop
xor
jmp
jl
or
sub
cli
and
pop
loop
outsb
inc
dec
out
and
fwait
jnp
test
fadd
notb
rorb
es
sbb
sbbl
stos
aam
cmpsl
adc
aad
loopne
pushf
sbb
pop
mull
outsl
sti
stos
pop
mov
xchg
test
jno
xlat
xchg
mov
mov
arpl
and
push
push
inc
insl
ret
xor
mov
or
inc
lods
mov
insb
or
pop
mov
xchg
pop
push
mov
pusha
mov
nop
xchg
sub
test
sbb
dec
cmp
enter
lds
mov
outsl
aam
and
or
add
in
mov
mov
mov
jp
sti
flds
ja
loop
aas
mov
adc
cmpl
negb
push
dec
jmp
inc
push
hlt
ljmp
les
ljmp
and
sbb
pop
mov
test
sub
popa
in
shlb
test
inc
test
sbb
adc
jnp
ret
cmp
pop
insl
icebp
stos
les
aas
mov
jle
imulb
fimuls
std
pop
icebp
mov
mov
push
lods
sbb
mov
into
enter
in
pop
out
xor
cmp
cmp
jne
mov
rolb
nop
inc
notl
xor
jge
dec
jo
imul
dec
faddp
sub
pop
pop
adc
loope
push
daa
sti
mov
insl
jge
mov
repnz
fisttps
or
repnz
pushfw
jmp
scas
imul
sarl
mov
add
test
sarb
xchg
in
xchg
inc
arpl
jl
imul
nop
popa
adc
fdivrl
jno
stc
sub
mov
js
jl
test
inc
rcll
stc
in
cli
inc
push
ds
jb
jo
cmpsb
fwait
lret
adc
jg
aam
push
pcmpgtb
shrl
out
push
outsl
jecxz
mov
jbe
mov
movsl
jnp
fistpll
cli
sbb
sarb
lock
or
pop
and
outsl
push
data16
pop
cmp
push
pop
sbb
mov
adc
xor
or
inc
jne
sub
sbb
repz
push
pusha
add
add
and
fwait
lret
int3
outsb
xor
and
mov
js
sub
push
push
fwait
pop
dec
inc
push
push
mov
adc
mov
jnp
hlt
mov
push
and
inc
jnp
testb
shld
rolb
dec
in
sbb
fdivs
mov
test
or
pop
jno
shr
mov
push
mov
mov
icebp
sahf
scas
inc
shrd
hlt
aaa
push
mov
movsb
data16
dec
ja
push
inc
aaa
loop
popa
scas
or
je
les
ret
mov
ret
sarl
mov
cmp
loope
jecxz
into
jmp
aaa
test
mov
cltd
rorb
cmp
lock
jae
xor
cld
jb
xor
call
cmp
xor
mov
lds
inc
push
dec
loop
mov
pushf
pop
ret
movsb
fcompl
sbb
adc
xchg
scas
dec
repz
lea
addb
adc
xchg
inc
mov
jbe
pushf
mov
pusha
mov
mov
mov
int3
mov
jbe
sbb
pop
jp
push
scas
mov
pop
inc
mov
dec
inc
icebp
dec
mov
xchg
add
in
gs
loop
out
addr16
mov
daa
out
jecxz
mov
aaa
mov
mov
aaa
xor
and
mov
lahf
mov
in
lret
ret
stos
xchg
mov
xchg
in
xchg
jmp
mov
mov
pop
dec
pop
repz
adc
orb
js
and
lret
out
cmpsl
les
xchg
subb
push
push
repnz
arpl
lahf
cwtl
cmp
adcb
pusha
imul
ret
scas
xor
adc
jae
test
jecxz
arpl
imul
xchg
daa
js
iret
and
addr16
lods
into
pop
dec
insl
pop
bound
out
sahf
push
inc
cmc
fadd
add
mov
xchg
or
das
adc
or
imul
cmp
int3
ror
dec
and
mov
imul
xor
aaa
jbe
popf
xor
les
movsl
add
and
mov
out
ja
fists
push
out
mov
in
add
iret
ret
sbb
and
pop
or
push
std
jle
mov
stos
adc
push
lods
cmpsb
in
cld
push
push
gs
nop
in
mov
xchg
rcll
jne
pop
scas
js
stos
push
das
adcb
sub
cmp
or
enter
stos
xlat
push
adc
rorb
ss
test
mov
xor
les
pop
or
pop
cmp
in
call
push
sbb
adc
or
pop
mov
cli
cli
push
in
lods
lods
xlat
cmpsb
pop
call
and
sbb
ret
inc
pop
mov
jecxz
cltd
cmp
pop
jmp
dec
pop
mov
sub
add
adc
dec
clc
int3
mov
xchg
pop
or
in
or
inc
inc
stc
aas
sub
mov
dec
setle
add
out
les
cmp
ffree
mov
jo
inc
rol
inc
int3
iret
jmp
inc
stc
inc
or
int3
cs
fsub
enter
lcall
adc
sbb
dec
shl
xor
loop
mov
sbb
push
test
imul
popf
sub
fs
stc
nop
jb
movsl
gs
sti
popa
pop
stos
pop
mov
fwait
push
js
jb
addl
adc
or
fildll
movsl
adc
sahf
imul
jge
roll
imul
int
inc
sbb
shlb
sbb
jb
inc
out
mov
jnp
aam
cmpsb
sarb
stos
rcrl
and
xchg
in
pop
stos
ffree
test
out
in
out
dec
rolb
or
mov
cs
in
cli
stc
and
sub
cwtl
push
push
fisubs
mov
xchg
xor
mov
adc
xor
push
jnp
scas
cwtl
xchg
cmpsl
inc
sub
push
xchg
xor
sub
xor
cmp
jo
mov
cld
push
dec
xchg
mov
xor
ja
xchg
jmp
jnp
mov
cwtl
movsb
push
call
jg
mov
xor
adc
add
clc
mov
add
add
orl
dec
loop
sub
outsl
scas
jg
fistl
cmpl
or
in
out
mov
ficompl
out
xor
or
push
out
xchg
stc
sbb
xor
ret
sub
dec
gs
jg
xchg
or
imul
gs
and
push
xchg
stc
ret
ss
jmp
jbe
mov
mov
jne
fbld
dec
xchg
rcrb
pop
lcall
ss
pop
inc
mov
fidivrs
inc
roll
fisubrl
sub
dec
movsl
arpl
mov
cwtl
sub
xor
adc
popf
jle
cwtl
push
inc
mov
shlb
xchg
mov
mov
loopne
in
outsl
test
push
rclb
mov
cmp
aaa
cmp
xchg
data16
pop
shlb
jmp
push
pop
iret
cmp
adc
ret
std
push
xchg
sbb
adcl
shl
xor
push
stos
negl
test
mov
sbb
push
xchg
adcb
push
push
lret
int
push
fistpl
cmp
test
mov
xorb
lret
mov
cmp
inc
jg
add
adc
fildll
jle
pop
push
imul
inc
cmp
push
cmp
int
fisubrl
in
rorl
test
adc
jl
leave
popf
pop
icebp
pop
das
jp
xchg
inc
or
rorb
push
dec
mov
push
dec
mov
xchg
mov
stos
enter
jb
fcmovnb
cmp
stc
add
fs
test
cmp
call
mov
cmc
loope
stc
aas
dec
aam
jmp
std
mov
imul
loopne
cmpsl
in
mov
and
fnstcw
lds
insb
or
loopne
pusha
add
sahf
test
ret
and
mov
ficomps
out
cmpsb
push
adc
mov
aad
jmp
repz
sbb
mov
xchg
xchg
cmp
mov
push
jns
insb
subl
xor
cmp
jmp
ja
jecxz
mov
xor
and
rolb
int
orl
subl
loopne
das
int3
xchg
adcb
scas
mov
push
xor
dec
pop
jl
lds
push
push
hlt
inc
inc
ret
outsb
popf
or
je
out
pop
ret
mov
adc
jl
jecxz
movsb
popa
mov
lods
inc
out
mov
jg
movsl
jl
jnp
jge
addr16
adc
inc
xorl
jne
dec
push
iret
imul
xchg
negl
sub
int3
loop
pop
jae
loopne
fldl
fmuls
notl
lods
push
and
adc
mov
movsl
xchg
fstps
sti
cmp
xor
add
cmpsb
ljmp
into
bound
stos
fdivr
xchg
push
fwait
test
imul
int
mov
xor
ja
mov
or
pushf
into
jnp
cmp
inc
mov
fcoml
jnp
fsubl
pop
inc
js
push
jmp
or
in
jle
sarb
or
sbb
cwtl
cmp
ret
adc
pop
sbb
mov
rcll
push
sub
hlt
imul
pusha
cmp
cmc
jge
xchg
imul
data16
mov
mov
mov
mov
iret
xor
jge
jo
hlt
jp
mov
mov
jb
into
cltd
cmpb
xchg
cmp
lods
jl
cmp
outsb
xor
push
jmp
fwait
adc
je
mov
push
dec
mov
addr16
dec
aam
xchg
test
addr16
xor
int3
lret
mov
cmp
jp
out
push
mov
or
fistl
cmp
and
insl
shll
sub
ss
popf
jb
pushf
mov
add
mov
aam
pop
cmpsb
mov
mov
lods
mov
xchg
adc
scas
mov
insl
clc
outsl
xor
mov
dec
xor
push
jne
add
mov
dec
aam
pop
or
xchg
outsl
xchg
jmp
mov
ficoml
add
jmp
jbe
xchg
lahf
je
pop
jmp
mov
dec
dec
cmc
sti
xchg
mov
mov
cmp
push
pop
mov
int
push
mov
mov
inc
mov
push
mov
data16
push
rorl
mov
cmp
cmc
mov
enter
push
jge
xlat
in
mov
inc
mov
jl
push
imul
jecxz
fcmovnbe
outsl
mov
insb
iret
dec
arpl
loop
inc
push
xchg
test
pop
add
add
add
cmpsb
or
aaa
test
rol
jp
mov
test
inc
xchg
cmp
insl
mov
jg
adc
cwtl
mov
and
cmc
into
ds
push
push
pop
loope
jnp
adc
mov
fdivrs
add
lret
neg
clc
adc
mov
push
insb
inc
cmp
sub
push
daa
xor
mov
xor
mov
in
and
arpl
mov
es
jo
outsb
popa
sub
adc
push
into
cwtl
and
aad
lret
rolb
lret
xchg
sbb
sub
in
or
fs
andl
add
vpcmpgtw
gs
fimuls
add
cmp
cmp
stc
subb
mov
ds
pop
adc
int3
xlat
addb
stc
iret
pop
push
lods
cmp
les
adc
or
jl
aas
push
test
push
pop
push
loop
movsl
xchg
arpl
cld
popa
in
add
sub
int
or
or
lds
adc
xchg
dec
jecxz
div
pop
cmp
incl
movsl
jle
xorb
jae
shrb
mov
push
jp
mov
sub
out
xchg
fmul
rorl
jg
lods
repz
xor
imul
filds
test
stos
inc
jns
sub
fdivl
ds
jo
inc
mov
add
mov
cmp
or
pusha
aad
jg
nop
ljmp
in
pop
cmpsb
pushf
jg
aas
jae
cmp
mov
adc
in
jp
push
adc
js
jb
repz
mov
jl
gs
jmp
pop
xor
xor
test
fstl
xchg
inc
mov
push
sub
add
cmc
add
cwtl
pop
jmp
addr16
dec
mov
jmp
or
out
lds
idiv
mov
add
mov
sbb
mov
and
movsl
xchg
and
or
add
mov
ljmp
enter
push
add
repz
aad
sub
lahf
loopne
mov
jecxz
push
aaa
shll
movsl
pop
mov
insl
add
mov
or
scas
aad
adc
lea
mov
fcomp
in
loopne
mov
cmpb
sub
lret
mov
mov
test
sub
mov
faddl
repnz
sbb
cmpsl
sub
xchg
jbe
in
cld
mov
stos
mov
in
jbe
mov
push
out
pusha
sbb
cli
aam
mov
mov
mov
fidivl
cmp
xchg
scas
aad
jbe
lret
pop
dec
jecxz
pop
mov
and
call
scas
dec
cli
and
rclb
imul
sub
or
fstpt
adc
loopne
call
test
fldenv
mov
mov
pop
sbb
push
rcrb
or
add
aaa
pushf
inc
jl
push
loop
adc
andl
fs
ljmp
rcl
jl
and
test
push
xorl
imul
xor
test
jne
inc
lods
pushf
aam
add
mov
stos
loope
stos
cld
loopne
xchg
rolb
mov
or
push
popf
outsb
jge
mov
or
sbb
adc
cmp
mov
pop
inc
into
into
push
sub
cmp
enter
dec
addr16
add
cld
push
repz
or
imul
xlat
fstpl
pop
dec
push
iret
stos
jle
push
jne
into
cmpsb
cmp
xlat
push
add
or
push
push
inc
pop
xchg
sbb
cmp
arpl
and
dec
add
mov
data16
cmp
push
hlt
and
push
inc
jle
lahf
xchg
js
pop
outsb
mov
mov
jne
fimuls
jae
pop
push
jg
icebp
push
xor
inc
xchg
jae
xchg
mov
mov
data16
lods
and
inc
je
cmp
call
dec
orb
mov
mov
push
xchg
pop
xchg
sbb
sahf
lea
dec
outsl
icebp
push
popf
add
adc
lods
mov
mov
mov
mov
mov
and
gs
outsb
jmp
loopne
ret
mov
jmp
fwait
lcall
dec
sahf
jg
popf
sbb
mov
pop
or
push
movsl
in
pop
jne
dec
lds
pop
push
pop
push
sarl
clc
add
sahf
lret
ret
hlt
cmp
xor
adc
js
mov
aaa
fs
xor
out
xchg
and
jae
lahf
dec
jl
cltd
and
popf
xorl
movsl
pop
lcall
hlt
fnstsw
sbb
loope
rcl
jne
std
shrb
xchg
push
push
rolb
cmp
add
sub
insl
lods
xor
test
fs
enter
push
imul
inc
fisttpll
add
shrl
sub
sub
jge
sub
add
das
pop
xchg
mov
fstps
sbb
outsb
xchg
jbe
stos
mov
lahf
mov
andb
or
cmc
sub
iret
les
outsl
ret
dec
nop
and
shll
cmp
loope
es
je
lods
aas
hlt
mov
mov
bound
jecxz
mov
out
mov
dec
mov
pop
dec
repnz
and
test
int
es
loopne
bound
xlat
mov
or
ret
inc
jmp
mov
inc
gs
stc
sub
adc
cmpsb
pop
pop
in
scas
popa
xchg
cmp
inc
sbb
int3
fsubp
xchg
repnz
sub
stc
inc
jbe
iret
cmp
push
adc
repz
mov
xchg
in
pop
sbb
clc
popf
add
push
stos
cmpb
or
pop
scas
adc
xchg
add
lds
rcrb
pop
mov
lahf
inc
into
push
dec
and
lock
inc
add
es
aam
cmpsb
inc
add
jo
or
bound
in
cld
add
and
aam
mov
mov
push
pop
sbb
lcall
dec
and
adc
and
int
inc
push
in
adc
mov
pop
shrb
mov
cmp
loopne
pop
repz
and
mov
sbb
xchg
xor
or
ljmp
cmp
jns
mov
pop
int
mov
ret
xor
lea
fwait
inc
inc
mov
pop
xchg
xchg
mov
sub
inc
xor
inc
test
mov
int
repz
into
add
stc
jns,pt
jbe
mov
out
xchg
cld
test
jo
imulb
repnz
sbb
push
inc
mov
mov
mov
push
inc
loop
jecxz
add
or
jmp
jecxz
imul
out
insb
jmp
mov
imul
stos
and
sbb
inc
leave
clc
dec
jno
jb
jae
inc
cs
mov
lret
rcrl
push
xor
push
mov
pop
pop
orb
ss
xor
cltd
mov
pop
and
jl
lods
adc
repnz
jle
pop
xchg
push
add
call
fdivrl
in
adc
insl
cwtl
aaa
adc
int3
mov
xchg
fsubs
add
adc
mov
jle
addl
lahf
mov
mov
mov
mov
out
fisubrl
push
mov
jecxz
xchg
imul
loop
or
mov
fcoml
das
lcall
sarl
adc
inc
or
mov
test
push
and
and
jbe
pop
xchg
scas
pop
cmp
fldcw
loope
mov
jecxz
dec
cmp
in
imul
xchg
arpl
jns
jp
incb
add
push
int
mov
in
loopne
cli
mov
mov
push
jae
mov
dec
xchg
loope
pop
xor
in
jle
jle
jne
std
mov
push
lds
cmpsb
mov
jecxz
call
adc
push
cmp
pop
jb
inc
rcl
movsl
sub
arpl
sub
jae
adc
popf
shr
fwait
in
add
sbb
and
addl
repz
fdivr
imul
sbb
mov
mov
clc
outsl
stos
sbb
or
shr
cmp
and
sub
cli
mov
test
xchg
jecxz
ds
punpckhdq
or
lret
fwait
inc
pop
aaa
sti
pop
and
scas
in
imul
fistpl
aaa
xchg
inc
cmp
hlt
fisttpl
iret
sahf
icebp
and
dec
cmpl
lods
and
js
sub
adc
pusha
decb
fdivs
test
inc
lret
or
gs
in
xlat
xor
hlt
mov
scas
roll
popa
push
scas
stc
pushf
iret
lret
mov
push
daa
popa
jl
mov
or
fwait
push
dec
push
cld
out
mov
arpl
mov
fnstcw
push
push
inc
shl
jno
xor
push
movsl
scas
push
fwait
jp
pop
inc
mov
xchg
sti
xor
pop
das
cmp
inc
sbb
adc
in
add
sti
pusha
xchg
lods
pop
xchg
mov
lock
fdivrs
btc
mov
mov
out
mov
iret
cld
xchg
rep
inc
dec
std
mov
sbb
test
and
sub
test
mov
fstp
push
and
call
lret
hlt
in
pop
sbb
adc
mov
jge
dec
data16
fneni(8087
jmp
inc
scas
adc
cmp
popa
jb
cmp
xor
or
push
jge
popf
rorb
inc
ror
loop
les
cmp
imul
fcoms
xor
and
inc
stc
out
jae
ss
mov
das
in
cwtl
xor
jns
or
inc
sarb
das
js
xor
mov
xchg
xchg
lahf
push
push
shlb
and
movsb
popl
mov
sahf
data16
sub
mov
add
sub
cmp
stos
jno
fwait
cld
adc
push
shlb
mov
xchg
mov
in
js
dec
popf
push
and
hlt
jnp
xchg
xchg
mov
cmp
sti
push
pop
push
addr16
xchg
jge
cltd
int
jle
jmp
push
jae
stos
mov
pop
inc
push
pop
add
pop
test
push
pop
insl
sub
shrl
jns
mov
cmpsl
mov
es
imul
pop
cs
daa
daa
jb
xchg
and
sub
leave
cmpsl
push
aad
add
mov
lea
into
jns
inc
pop
les
or
cmp
and
pop
jle
mov
sub
lahf
mov
jno
xadd
lret
pusha
mov
push
dec
sub
inc
and
sahf
fbstp
jns
jl
aaa
ljmp
sub
ja
addl
sub
loopne
nop
push
insb
inc
push
pop
jns
movsb
sahf
jbe
push
dec
je
inc
xchg
inc
cli
daa
out
push
call
icebp
sbb
cld
mov
push
jl
xchg
jle
xchg
test
sbb
push
test
aad
pop
fsubp
mov
gs
xchg
test
and
pusha
inc
lea
loope
fisttpl
xchg
cwtl
repnz
in
popf
jge
lahf
mov
in
outsb
mov
rcr
scas
xchg
push
mov
sub
cmpl
adc
mov
int
fbld
lds
aas
cmp
pop
mov
sbb
shll
lods
not
outsl
xchg
jl
xchg
movsl
test
cltd
sbb
cmp
add
or
cmp
cmc
lds
and
mov
push
cmp
sbb
or
jge
adc
dec
adc
push
data16
cmp
cmp
sbb
adc
adc
cmp
mov
fists
outsb
jl
in
push
cltd
jae
loope
imul
mov
xchg
mov
xorb
pop
shl
call
mov
inc
into
dec
xchg
scas
addr16
lahf
xor
sbb
rcl
mov
test
lret
cwtl
pop
dec
cmp
jno
inc
test
cmp
lcall
jno
pusha
xchg
sbbb
mov
shl
inc
in
xor
mov
jecxz
stos
sbb
imul
inc
xchg
movsb
mov
rcrb
xchg
pop
xor
xchg
sbb
jno
dec
adc
decb
cmpsl
sbb
enter
movsb
jo
inc
sti
cli
loopne
inc
xlat
mov
cmp
sbbl
sub
outsl
dec
and
ljmp
and
mov
xchg
mov
in
inc
pop
jge
ljmp
xlat
cmp
pushf
ds
jb
lods
roll
sarb
dec
mov
in
push
cltd
movsl
nop
loopne
movsb
dec
inc
xchg
negb
outsl
jg
xor
pop
or
repnz
test
cmp
mov
cmpsl
jp
mov
or
xor
xor
aam
loop
shl
mov
outsl
sbbl
shlb
std
push
sub
loopne
jo
ds
push
dec
xchg
jecxz
inc
jno
dec
insb
mov
adc
aaa
xchg
outsb
ja
pop
adc
mov
and
or
ss
jbe
push
jecxz
in
sbb
push
xchg
lods
push
mov
push
fistps
xchg
pop
or
push
cmpsb
pop
cltd
insl
pusha
pop
adc
imul
inc
lret
pop
ss
sub
push
mov
pop
mov
jns
movaps
sbb
push
test
jg
jmp
or
push
hlt
out
mov
cmp
pop
fstpl
mov
scas
iret
out
push
xor
cmpsb
mov
aaa
ret
dec
jb
movsb
dec
in
dec
rol
ret
pop
inc
pop
sub
lods
mov
mov
rcll
cltd
cmp
jge
out
or
lea
ret
pusha
dec
xchg
push
xchg
xchg
jp
adc
cmp
fcompl
xor
push
mov
sahf
mov
mov
rcrl
inc
ffree
fmul
sbb
out
mov
push
jo
jp
out
jg
test
in
jmp
int3
pop
xor
popf
daa
jns
jge
cmp
ficompl
movl
lea
push
sub
mov
cmp
dec
mov
xchg
sti
and
mov
xor
out
popf
in
loope
add
sbb
lahf
mov
mov
jb
ds
roll
popf
cs
xor
sub
out
xchg
mov
mov
sbb
jle
cmp
and
adc
adc
in
and
jecxz
sub
arpl
sub
xor
ret
mov
inc
mov
cmc
lret
jno
pop
mov
sbb
cs
ds
addl
dec
inc
xor
neg
mov
lds
test
dec
fbld
cli
push
jno
stos
dec
xchg
je
test
xchg
in
inc
loope
ja
fcmovnu
xor
mov
dec
or
push
adc
jge
repz
push
jcxz
pop
mov
and
inc
add
add
sub
out
mov
enter
out
cmp
imul
hlt
push
inc
jae
pop
pop
out
adc
je
push
pop
sub
adc
mov
mov
mov
ja
into
mov
mov
imul
pop
mov
lods
ljmp
fbld
repnz
fxch
fucomip
jp
sub
adc
push
xlat
mov
cmp
jae
dec
adc
imul
shrb
addl
and
ja
xchg
mov
in
fisttpl
push
dec
xchg
outsb
aad
push
mov
aas
rorb
mov
xlat
adcb
in
pushf
push
repnz
rolb
sub
and
mov
ljmp
or
jno
mov
jns
dec
xchg
ja
xlat
sarb
sub
popa
test
inc
stos
in
adc
sbb
push
ret
xlat
pop
ljmp
sub
inc
mov
out
xor
and
push
rcl
inc
adc
test
mov
push
dec
jmp
mov
mov
and
or
mov
clc
ljmp
imul
dec
ret
in
icebp
mov
sub
jo
adc
sub
mov
cmpsb
dec
pop
stc
lds
js
addr16
inc
comiss
mov
in
inc
imul
xor
pop
out
jl
cmpsb
mov
xor
mov
adc
mov
pop
inc
repz
sub
fwait
and
testl
cmp
out
lret
in
and
cmpl
lret
outsb
push
lret
fsts
imul
testl
popa
icebp
add
pop
repnz
imul
and
loop
stos
fxam
cmp
jmp
sbbb
dec
mov
mov
outsb
in
bound
cwtl
js
scas
adc
or
mov
mov
xor
push
ljmp
test
roll
rcll
xchg
clc
mov
cmc
sbb
xchg
adc
rcll
stos
out
push
sbb
mov
ror
popf
loop
mov
decb
xchg
movsl
mov
pop
push
cmpsl
popf
addr16
sub
cmp
dec
inc
pop
clc
das
into
mov
loop
or
scas
mov
xchg
cs
lods
pushf
push
fwait
hlt
dec
sub
fwait
sub
xorl
and
xorl
pop
jge
cmp
test
outsl
mov
scas
ja
push
dec
loopne
or
push
xor
xchg
and
sbb
dec
js
mov
xchg
or
filds
ljmp
ret
imul
lods
mov
sub
lret
test
jp
cs
cmp
pop
outsl
std
scas
mov
cwtl
cwtl
das
fwait
test
mov
jge
lret
popl
sub
cmpsl
push
inc
pop
roll
mov
out
shlb
add
jp
lret
flds
xchg
outsl
das
jae
loop
fwait
dec
repz
pop
loope
xchg
divl
jns
cmpsb
xchg
xor
int3
sbb
inc
outsl
add
xchg
test
or
lods
fcmovnu
sbb
mov
int
mov
cld
jo
stos
aad
insl
test
in
xchg
mov
outsl
andl
adc
push
xchg
loop
jbe
mov
scas
xchg
shrl
cltd
pop
fs
mov
sti
lret
ljmp
mov
ljmp
fnstsw
ss
loope
imul
and
outsl
ss
out
dec
sti
in
push
mov
dec
sbb
or
add
stos
push
movsb
dec
or
fdivl
leave
imulb
test
jbe
ds
pop
or
add
mov
push
or
cs
imul
cwtl
cmp
mov
in
or
mov
addr16
jp
mull
dec
cmp
sub
or
js
jbe
mov
sub
movsl
nop
clc
xor
ret
fmulp
mov
mov
in
cmp
fdivrl
adc
mov
or
outsl
mov
shrb
and
les
arpl
xchg
sbb
test
cmp
cmp
and
cltd
xor
push
lods
sahf
pop
pushfw
sbb
sbb
clc
loop
jg
mov
negb
rorl
dec
ds
mov
test
imul
pushf
rcr
in
in
xor
xchg
xchg
fdivl
adc
push
or
cmpsl
rclb
pop
pop
jnp
js
push
add
stos
xor
or
or
filds
es
mov
lcall
rol
gs
cmp
sbb
outsl
cmp
cwtl
and
inc
and
jno
clc
out
js
in
add
dec
mov
add
ljmp
push
ss
clc
push
cmp
mov
xor
test
clc
lock
dec
mov
push
fidivrl
xor
das
in
sbb
mov
loop
jno
xchg
push
xchg
xchg
xchg
mov
dec
mov
imul
es
cmp
data16
cmp
xchg
mov
sbb
mov
inc
scas
push
sahf
fidivl
jnp
mov
sbb
push
sbb
stc
sub
movl
testb
jl
mov
pop
jg
pop
push
hlt
pop
or
mov
push
jae
popf
xchg
mov
in
xlat
xlat
inc
mov
outsl
and
idivl
adc
stc
cs
loopne
sub
and
xchg
and
sub
xlat
mov
fstpt
mov
push
scas
mov
inc
bound
and
xlat
out
rcl
mov
and
dec
sbb
mov
pop
pop
bound
jbe
sahf
mov
pop
xor
aas
mov
imul
xchg
ja
loopne
aaa
pop
inc
xor
insb
pop
out
out
xchg
cmp
mulb
scas
loope
jns
call
dec
jge
lret
mov
add
mov
pop
fcoml
adc
in
adc
sbb
cmp
insl
push
pop
in
adc
fs
insb
jne
aam
sub
loop
nop
mov
imul
gs
dec
or
mov
pop
adc
sar
ret
loop
enter
inc
cmp
notb
jae
dec
cmp
rol
sarb
adc
jns
arpl
jecxz
inc
add
and
sub
xchg
out
lahf
push
lcall
xor
xchg
add
pop
mov
rcr
push
mov
scas
mov
int
push
int3
jno
mov
in
arpl
sub
jne
icebp
lods
aam
jge
clc
ljmp
and
mov
push
push
out
inc
pop
pop
pusha
inc
mov
inc
sbb
ret
mov
mov
or
subl
sub
int3
cmp
adc
mov
pop
push
lds
fs
lret
adc
test
ret
mov
ret
cmpsl
dec
ljmp
mov
adc
and
mull
js
xor
inc
adc
cmp
shlb
jnp
dec
scas
imul
jnp
je
ds
and
mov
push
idivl
leave
cwtl
lock
cwtl
sarb
filds
dec
movsl
xchg
into
fisubrl
in
xchg
addl
mov
pushf
or
pop
pop
jecxz
lock
mov
fisttpll
test
and
lock
ja
stc
sub
dec
sarl
fldt
add
jnp
je
and
pop
inc
icebp
xchg
adcl
mov
cmp
mov
int3
or
push
mov
iret
fwait
jg
push
adc
push
fdiv
popf
sub
mov
cbtw
push
insb
ret
gs
inc
fldcw
stc
xchg
pop
adc
jmp
stc
movsl
sub
call
sarb
unpcklps
xorl
mov
or
and
cltd
femms
outsl
aam
pop
cmc
jne
xor
int3
mov
mov
subb
shlb
sbb
fxam
mov
jnp
into
int3
out
ja
adc
inc
testl
dec
fimuls
adc
cmpb
inc
je
outsl
mov
nop
mov
dec
adc
out
pop
leave
mov
add
imul
loope
lcall
cmc
lret
test
inc
xor
push
aad
movsl
mov
push
ds
sbb
jge
into
dec
jb
sahf
test
loopne
lock
test
cmpsl
inc
xchg
jae
sub
add
test
pop
out
sub
sbb
test
xchg
inc
mov
shlb
dec
xor
sti
aad
lds
xchg
xor
mov
aad
addl
cltd
cmp
sub
jno
push
jo
imul
cmp
es
fisttpll
imulb
mov
jmp
adc
mov
addr16
sbb
sub
gs
call
xor
test
js
xor
sub
mov
frstor
push
push
mov
and
inc
inc
ja
divb
jns
fsubr
cli
xchg
les
fiadds
pop
out
mov
test
test
clc
push
mov
mov
cwtl
pushf
add
and
fnstenv
ja
inc
mov
dec
xor
inc
pop
and
mov
lds
icebp
dec
rolb
xor
mov
xor
xchg
incl
leave
mov
push
mov
pusha
and
std
hlt
arpl
sti
lret
adc
mov
dec
xchg
out
ficoml
jmp
popa
mov
sti
das
jg
int3
mov
imul
divb
out
push
inc
cmpb
cs
in
mov
inc
jbe
enter
ret
ds
mov
stc
dec
sub
in
shll
lods
lahf
dec
inc
mov
mov
mulb
fidivrs
inc
repnz
scas
mov
pop
adc
vpunpckhwd
mov
jnp
dec
mov
icebp
mov
cmp
fs
stc
mov
dec
rorl
scas
fsubrs
mov
mov
sbb
sub
popa
cmp
push
ffreep
dec
call
push
daa
call
aas
loope
cmp
int
dec
mov
mov
test
nop
icebp
xchg
mov
and
jbe
leave
rolb
shl
mov
pusha
cmpl
outsb
add
rolw
pop
inc
xor
popf
dec
lret
sarl
adc
push
rorl
data16
filds
lods
rcrb
movsl
push
cmp
int
adc
xchg
out
push
sub
outsb
leave
jne
push
add
shrb
mov
or
pop
add
in
ljmp
hlt
dec
stc
mov
inc
ret
ds
shll
xor
pop
jl
scas
js
jmp
jmp
jmp
jae
pop
inc
sbb
jmp
in
mov
cmp
mov
scas
push
xorb
hlt
inc
lret
push
mov
cmp
lea
inc
bound
or
pushl
cmp
lcall
ret
sahf
adc
and
inc
mov
cli
loop
push
insl
sub
lods
aas
rcll
es
pop
jno
mov
add
mov
sub
bound
aad
test
nop
hlt
es
dec
push
jg
fs
jmp
inc
inc
sti
push
stc
pop
add
addl
inc
call
add
jno
and
je
daa
ljmp
add
std
mov
and
das
ret
sub
cmc
adc
and
testl
dec
orb
xor
cmpsb
push
sub
lods
test
nop
data16
scas
out
add
ja
inc
das
int3
cs
movsl
das
or
adc
dec
xchg
mov
bnd
cli
fldl
loopne
outsb
fs
push
addr16
cmp
adc
pop
repz
or
lds
sbb
dec
ret
gs
inc
xor
sbb
clc
cs
stc
pushf
nop
imul
aaa
leave
push
shl
cmpb
inc
or
push
jp
sbb
mov
fdivl
mov
lret
in
hlt
mov
mov
pop
hlt
iret
out
lods
cmp
lret
xor
add
ret
mov
outsb
push
push
xor
and
inc
dec
in
nop
test
adc
sbb
jecxz
mov
dec
and
dec
or
jo
dec
nopl
fbld
pop
sar
js
push
negb
subl
or
add
sbb
push
mov
or
xchg
cld
add
cwtl
stc
loope
out
rolb
mov
movsb
pop
out
push
arpl
dec
adc
testb
inc
or
mov
int
xorl
int3
or
das
ja
lods
inc
dec
ds
pop
insl
int
enter
push
mov
cmc
jg
xchg
jb
push
pop
pop
sahf
cltd
xchg
data16
add
test
in
jns
cmp
negl
cwtl
mov
cltd
pusha
repnz
les
loope
push
imul
dec
scas
icebp
fstps
andnps
hlt
mov
test
out
xor
inc
call
push
cld
push
jle
mov
push
aas
push
cs
and
push
addr16
fsubrs
in
lcall
adc
das
dec
out
mov
rcll
dec
subb
dec
jecxz
adc
cmp
mov
xchg
cmp
sbb
sbb
mov
jmp
mov
push
das
lea
xor
sbb
movsb
jb
pushf
leave
push
loopne
pop
cmc
fmuls
pop
cmp
or
jbe
adc
sub
stc
aaa
dec
cmc
xlat
dec
insl
js
jge
test
jge
cmc
sti
adc
mov
stc
cmp
repnz
adc
bound
leave
push
ret
rclb
lods
fsubrs
int3
push
mov
mov
out
test
nop
cwtl
std
and
dec
inc
jbe
out
push
mov
xchg
ss
into
jne
int
dec
mov
lea
filds
cmc
stos
adc
andl
push
mov
push
outsl
pop
inc
pop
sbb
jp
fcmovnb
mov
dec
loop
inc
sub
xchg
jmp
out
xchg
es
insb
daa
adc
sbb
arpl
out
pop
or
in
jecxz
xor
je
xor
cmpsb
mov
add
jge
pop
add
cs
mov
inc
pop
cmp
dec
xchg
pop
rorl
push
sahf
adc
test
call
imul
pop
jle
cmp
inc
int3
cmpsb
ljmp
cmp
scas
lods
out
in
pusha
and
mov
dec
out
inc
sub
or
cmp
das
push
or
shl
jp
jb
fmul
in
inc
cmp
sub
push
xchg
xor
lods
add
es
push
add
out
loope
rorl
nop
bnd
adc
rcrl
xor
xor
out
enter
or
push
xor
ja
ret
dec
outsb
xor
mov
lods
push
stos
jns
mov
xchg
sbb
cltd
dec
mov
inc
pop
fsubp
pop
stos
fsubrl
out
mov
rol
das
dec
fldenv
ljmp
mov
mov
insb
data16
xchg
mov
mov
fisubrs
std
mov
call
lahf
xchg
or
push
addr16
fidivrs
xchg
aad
fdivr
lcall
add
mov
mov
lock
mov
or
cmc
repz
sbb
fcmovu
out
push
pop
mov
jae
xchg
mov
mov
push
scas
push
pop
mov
stos
pop
outsl
movsb
push
or
sbb
pop
cmp
mov
cwtl
filds
xor
adc
dec
orb
xchg
add
in
jge
adc
arpl
popw
jmp
jp
out
mov
xlat
xchg
sub
into
cmp
gs
jl
stos
mov
mov
cmp
nop
vxorps
adc
push
aam
mov
hlt
ss
popl
mov
scas
sbb
lcall
pusha
dec
cmp
sbb
mov
pop
loope
lret
mov
subb
mov
mov
push
pop
push
int3
insb
stos
fistpll
les
jecxz
fstp
insl
xchg
jnp
ds
pop
sub
xchg
scas
xor
add
pop
fs
xlat
insl
test
xor
sbb
mov
out
or
shll
mov
jae,pn
loop
loope
mov
sahf
adc
jl
xchg
into
cs
stc
mov
pop
pop
sti
jmp
stos
push
mov
mov
popf
test
mov
sub
and
js
roll
adc
add
mov
fcomip
xorb
cmp
jmp
or
pusha
pop
push
popw
jmp
imul
das
mov
outsb
sub
mov
jns
dec
adc
jmp
mov
xor
pop
clc
jno
or
loope
dec
pop
inc
and
add
rcll
pop
mov
mov
add
sub
sub
jb
add
out
dec
or
xor
push
loope
fists
dec
clc
shr
cmpsb
movsb
test
enter
frstor
mov
arpl
dec
mov
cmpsb
mov
add
test
test
sbb
addr16
pop
cmp
add
mov
cmp
adc
cmpsb
popf
outsb
add
push
movsb
pop
mov
fbld
addr16
jo
or
or
dec
out
imul
mov
int
icebp
dec
push
pop
cmpb
xor
stc
ljmp
mov
pop
jbe
aaa
push
sub
je
int
pop
cld
in
and
mov
addl
sub
jg
xor
xchg
xor
arpl
scas
lcall
mov
dec
pop
cmp
sub
mov
sub
or
xchg
mov
push
inc
cmp
fsubrp
lcall
sbb
dec
xor
fisttpl
out
cmp
inc
cmp
and
jb
dec
adc
and
mov
xchg
inc
mov
cmp
cmp
mov
incl
je
loop
inc
jp
xchg
mov
mov
xor
repnz
jp
adc
push
out
mov
stos
loope
dec
fwait
push
or
inc
add
test
scas
xchg
or
fimull
adc
sahf
insl
mov
cmp
lock
pop
data16
pop
xor
insb
stos
mov
aad
and
inc
mov
mov
mov
mov
xlat
aaa
pop
cmpsl
adc
mov
pushf
mov
push
adc
add
pop
sub
or
in
mov
pop
push
fisttpll
jecxz
aas
leave
aaa
jnp
int3
mov
je
mov
popa
andl
pop
movsb
jecxz
sub
addr16
xchg
loopne
insb
or
cmp
stc
sub
push
inc
pop
jecxz
inc
cmp
push
mov
push
test
add
dec
xchg
mov
out
sub
pop
dec
inc
push
jmp
mov
test
mov
jge
push
and
mov
add
sub
std
out
or
in
add
mov
jecxz
cmp
fldcw
or
adc
xchg
adc
sbb
push
and
arpl
sub
aas
adc
out
scas
ljmp
stos
mov
test
jno
addl
notb
shlb
sbbl
xor
pop
push
or
sbb
and
fnstcw
cmp
mov
sbb
inc
add
lods
xor
push
push
in
das
pop
pop
dec
rorb
shll
inc
pop
loopne
jmp
adc
mov
leave
cmp
jne
lods
aam
into
jmp
push
jle
aas
pop
fstl
data16
sub
data16
sub
jo
push
push
dec
inc
nop
movsb
dec
icebp
scas
lods
mov
or
inc
add
fsubrs
pop
sbb
jge
addb
out
mov
scas
mov
mov
xor
fstp
xor
or
xor
dec
mov
inc
xor
sub
aam
cmp
push
sbb
mov
cmp
popa
movsb
add
or
mov
sub
xor
fcoml
pop
and
sub
sub
mov
lods
fs
stc
lods
int3
fwait
loope
cld
addl
push
pop
sbb
enter
dec
adc
dec
insb
inc
shll
int
ret
lahf
lods
jae
pop
xchg
xchg
mov
jecxz
dec
add
xchg
mov
imull
and
sub
pop
das
fwait
scas
arpl
jmp
lods
hlt
jbe
push
aaa
sub
outsl
mov
or
testl
add
or
dec
dec
push
lock
icebp
dec
xchg
mov
pop
xlat
dec
jno
mov
and
sub
movsb
rolb
cld
stos
ja
sti
mov
or
das
sahf
mov
jecxz
lret
lock
xor
adc
fsub
add
mov
fidivrl
movsb
cmp
push
mov
imul
sbb
pop
cmpb
cmc
add
ja
mov
and
sbb
cmpsl
push
sub
jne
adc
popa
mov
add
adc
mov
sbb
pusha
inc
adc
push
rcll
adc
inc
lret
add
mov
or
mov
mov
jo
dec
add
repz
pop
push
repnz
inc
test
stos
rol
addr16
js
push
mov
imulb
cmc
jae
movsb
cmp
les
adc
pop
adc
and
lcall
mov
incb
imul
inc
or
inc
sub
int
loopne
add
inc
outsl
or
sahf
stc
cmp
shrd
jno
ret
leave
sbb
dec
in
ss
iret
jle
in
dec
add
inc
jbe
mov
xchg
mov
loop
sar
aad
mov
test
dec
jecxz
frstor
or
mov
jg
testb
dec
push
iret
bound
nop
mov
sti
or
push
negl
and
pop
push
sub
insb
mov
loopne
jge
mov
repnz
cwtl
inc
out
jp
fxtract
add
mov
pop
movsb
cmpsb
inc
aam
mov
cmpsl
inc
out
frstor
rolb
outsb
stc
ret
jg
mov
xchg
cmp
clc
fldt
mov
and
mov
push
dec
mov
cmp
dec
popf
xor
mov
push
push
jle
movsl
ja
xchg
cmp
fdivr
jmp
adc
mov
das
testb
dec
jmp
fisttps
add
xorl
mov
xor
ds
pop
inc
xor
push
jnp
cmp
ja
sbb
or
jo
data16
mov
xchg
pop
mov
int
in
or
cwtl
mov
dec
mov
pop
mov
xchg
je
loopne
push
sub
test
add
loopne
in
mov
and
push
cwtl
add
in
mov
add
jg
popa
leave
lds
test
or
lret
imul
or
mov
pop
dec
shll
std
lock
cld
clc
call
mov
or
clc
xor
push
sbb
insb
call
cmp
imul
sti
enter
aad
or
jno
int
jb
and
inc
sub
xchg
pop
das
jg
jg
sub
add
push
mov
sbbl
adc
nop
fldenv
inc
inc
sbb
cmp
lea
es
add
pop
int3
not
pop
loope
push
dec
dec
pop
cmc
rclb
inc
sbb
inc
imul
push
or
adc
nop
xor
add
aam
sub
lock
or
xlat
or
inc
into
jnp
adc
sub
push
addr16
cmpsb
jl
inc
push
xchg
insl
mov
mov
mov
lods
dec
stos
cmp
clc
inc
or
in
cs
mov
decl
mov
andl
outsb
sub
lcall
movsb
mov
stos
inc
sbb
jns
and
lods
repnz
loopne
and
xchg
fbld
jmp
in
cwtl
fwait
enter
mov
xor
ds
stos
ror
mov
fst
cmp
inc
repz
fwait
jmp
lods
jle
inc
ja
adc
out
xchg
xchg
test
rolb
xchg
inc
jecxz
js
sarb
pop
adc
mov
loopne
jl
addr16
or
repz
lret
fidivrl
add
or
sub
in
xchg
mov
fadds
iret
loopne
inc
movl
sub
in
inc
dec
lock
repz
daa
idivb
and
sbb
mov
je
shll
rolb
or
jno
pop
xchg
adc
sub
lods
push
imul
and
data16
mov
call
xchg
xor
mov
xchg
xchg
pop
mov
je
dec
dec
lods
sahf
dec
lahf
jge
sarb
cmpsb
sarl
sbb
mov
inc
mov
push
icebp
sub
add
inc
cmp
cmp
dec
pop
out
mov
push
fiadds
insb
xchg
xchg
cmpsb
mov
hlt
stc
lahf
lds
outsb
xchg
cmp
mov
pop
cmc
sbb
nop
or
ja
mov
iret
dec
loop
jae
andb
gs
mov
scas
inc
sub
xchg
insb
sub
mov
mov
imul
jecxz
jl
insl
pushf
cmp
in
icebp
fsubr
push
cmpsl
xchg
fsubrs
push
jmp
imul
out
mov
inc
das
jbe
push
cmp
pop
lea
lock
idivb
xchg
fcoms
and
imul
push
and
cs
pop
jle
mov
pop
push
push
cwtl
lahf
sti
orb
stc
filds
xchg
inc
dec
rcr
fldenv
pop
mov
subl
stos
je
orb
or
pushf
ret
push
sbb
jmp
sarb
fadds
add
movsl
xchg
in
insl
push
ljmp
fs
jmp
jns
mov
mov
inc
nop
cmp
pushf
pop
xchg
xor
shr
movsl
ror
popa
lock
mov
or
jnp
cltd
fsubrl
sub
fists
sub
jmp
add
stc
daa
into
pop
add
es
dec
ds
or
sahf
adc
fdivrl
mov
lret
ljmp
jl
in
push
aam
lret
sbb
test
popa
aas
sbb
inc
sub
movsl
adc
stos
daa
stos
lcall
sbb
lahf
jmp
leave
lahf
ret
dec
mov
cld
mov
loop
into
pusha
add
push
push
out
int
jbe
dec
rorl
ss
push
and
push
sahf
sbb
shll
stos
mov
sub
negb
xchg
mov
xor
dec
xchg
insl
mov
pop
mov
ret
push
cmp
sub
and
sub
cmp
or
mov
mov
xchg
stos
daa
lret
fdivrp
rcll
ja
xlat
sub
push
mov
outsl
sbb
jb
add
and
xor
nop
cmp
fadd
xchg
inc
sub
out
mov
pop
shr
xchg
inc
shrl
int
bound
ja
imul
cmp
or
mov
add
cs
hlt
imulb
jnp
xchg
mov
mov
fistpll
in
lds
in
stos
jae
fisubrs
sbb
enter
or
mov
jo
and
mov
push
xchg
inc
and
and
xor
test
in
into
nop
shrl
mov
stc
ljmp
lret
xchg
sbb
dec
pushl
mov
das
mov
xlat
sub
mov
jge
push
inc
cmpsb
inc
push
test
mov
aaa
mov
inc
rcll
dec
lahf
sbb
xor
bnd
ja
and
int
pop
pop
xor
pop
push
inc
cmp
cltd
lods
aam
push
xchg
stos
shll
xlat
outsl
repz
push
clc
push
xor
cs
gs
roll
leave
inc
cmp
cmp
lock
and
pop
sti
mov
mov
dec
ret
rcll
adc
cmp
in
xchg
xchg
fcom
imulb
cmp
add
xor
mov
sub
lret
dec
enter
mov
and
sbb
insl
lret
xchg
dec
sbb
popf
mov
pop
mov
cmp
mov
mov
fs
sub
sarb
xchg
dec
cltd
mov
push
inc
add
hlt
or
xchg
pop
test
or
xchg
int
adc
mov
in
add
sbb
daa
mov
jl
out
or
lock
fs
aad
neg
cld
add
dec
xor
push
add
push
mov
jg
iret
and
mov
xchg
mov
jecxz
jle
popf
adc
add
push
mov
adc
mov
out
test
push
mov
push
jmp
inc
jo
fisubl
cmpsb
aad
push
add
mov
mov
cs
xchg
inc
loop
cs
scas
mov
xor
mov
gs
and
inc
or
ret
push
test
stc
je
int3
imul
xor
or
sbb
cltd
pop
int
xor
mov
data16
notb
or
pop
add
movsl
pop
pop
cmpl
push
fdivrs
sbb
xor
cs
sub
fs
and
enter
loope
js
int
test
jge
fmuls
jne
leave
test
dec
dec
aaa
ljmp
xchg
add
cmp
cwtl
loope
pop
andl
sbb
scas
push
push
pushf
enter
push
insl
xor
xchg
push
in
pop
xchg
jmp
jle
push
daa
add
repnz
mov
adc
shlb
and
cmp
xchg
xor
adc
cmp
out
mov
dec
sub
xchg
imull
add
int
jo
pop
enter
fildll
add
insl
and
and
into
mov
mov
int
clc
out
sti
pop
adc
add
push
cld
sbb
jecxz
mov
jmp
int
enter
xlat
mov
lds
adc
insw
jbe
fcmovnbe
mov
adc
xchg
mov
add
inc
mov
or
aad
cmp
dec
add
inc
jbe
push
nop
mov
scas
cld
test
fistps
dec
lock
mov
push
les
jns
inc
xchg
fcmovbe
add
mov
jns
pop
mov
sbb
jg
enter
xchg
fs
sub
cmp
in
mov
pushf
scas
lock
stc
movl
lea
cmp
adc
je
jo
adc
insl
or
adc
pop
xor
sbb
mov
mov
in
lods
push
jnp
push
test
push
pop
push
xor
rcl
dec
adc
push
arpl
inc
push
push
enter
stos
in
leave
scas
mov
into
jae
mov
xchg
mov
mov
ss
out
sub
jo
mov
divl
sarl
stos
addr16
repnz
in
mull
dec
fcomps
stos
fs
int
fwait
push
aad
ret
mov
sbb
test
xchg
nop
mov
mov
leave
adc
sahf
jge
push
in
sbb
push
cmp
mov
ret
xchg
negb
arpl
and
icebp
leave
xchg
mov
nop
shll
mov
jmp
mov
clc
mov
mov
inc
cmp
clc
push
push
ja
adc
or
lret
scas
and
and
repnz
inc
xbegin
das
jno
mov
stos
xor
ret
int
sbb
stc
rorb
mov
int3
jl
pop
mov
mov
and
sarl
mov
cltd
aas
add
mov
popf
sub
sub
repnz
rclb
fcoms
pop
pushf
lret
cmc
nop
lods
or
sub
inc
jmp
dec
jle
mov
xor
popa
dec
mov
imul
adc
or
hlt
xchg
cmpsb
and
insl
adc
sti
ljmp
mov
cmp
sti
jg
shl
call
icebp
fstl
rclb
ljmp
hlt
mov
dec
cltd
jge
pushf
push
cmpb
fisubl
mov
pop
cmpsl
or
call
lock
ljmp
xchg
add
mov
sbb
lcall
mov
sub
add
sub
ss
out
into
int3
cli
es
stos
aad
fs
adc
in
les
mov
pop
leave
das
bnd
dec
lret
stc
test
int
fadds
xchg
fisubs
aam
aaa
out
xchg
enter
fwait
jno
test
mov
imul
jl
xchg
int
cmp
sub
scas
jne
fcmovb
dec
xchg
imul
adc
sbb
movsl
cwtl
mov
fiadds
stos
jl
aam
mov
popa
outsb
xor
in
push
int
movsb
pop
add
jb
bound
dec
adc
cmp
mov
stos
cltd
inc
enter
sarl
xorl
repz
push
cwtl
xchg
inc
in
push
pop
es
jecxz
xchg
jmp
lds
in
xchg
pop
cmpsl
add
xchg
cmp
sbb
stos
es
mov
pop
xchg
stos
mov
cmp
stc
mov
mov
dec
add
pop
notl
je
and
adc
out
insl
xchg
fsubl
xor
loop
jle
xchg
shrl
jae
mov
out
pop
mov
loope
rcrl
sub
sub
stc
iret
imul
insb
ret
out
and
or
sbb
dec
sub
scas
gs
cmp
add
fiadds
push
mov
gs
in
sbb
xor
pop
jmp
jle
hlt
movl
pop
or
popa
adc
outsl
fstp
adc
aam
fndisi(8087
movsl
inc
mov
in
inc
sbb
mov
lret
push
scas
xor
rcrl
aad
leave
scas
cmp
jmp
or
pop
dec
or
shr
lret
inc
fimuls
pop
lahf
js
adc
and
or
outsl
add
or
cltd
xchg
push
insl
pop
loopne
dec
or
aad
mulb
add
xchg
stos
mov
and
mov
notb
mov
add
xor
aam
std
mov
inc
cmp
int
lods
push
xchg
mov
aam
inc
loope
arpl
popf
clc
adc
xor
fcoms
fwait
mov
and
pop
push
add
fistl
mov
adc
sub
xchg
cmp
aas
jmp
mov
xor
movsb
in
repz
inc
xchg
cld
jecxz
xor
adc
jmp
jns
adc
test
push
pop
testl
and
stc
or
rclb
jb
sub
add
cmpsl
mov
xchg
lcall
ret
mov
sub
mov
or
jl
arpl
adc
mov
pop
mov
ss
xor
add
push
cmc
imulb
or
cmp
or
testw
xor
iret
aas
pop
push
divl
sahf
push
xchg
and
lods
cmp
mov
dec
in
and
cmp
xchg
lcall
aad
jb
push
sbb
std
mov
int3
sbb
xor
repz
stos
cmp
jno
push
cmpsb
pop
xchg
pop
push
push
aam
fsubrs
popf
jecxz
cs
sahf
inc
adc
pop
xchg
xchg
mov
test
test
jle
xorb
pushl
gs
sti
ss
and
cli
orb
aaa
cltd
and
cmc
repnz
and
pop
dec
outsl
loopne
push
jge
repz
jp
dec
cmpsb
into
in
or
pop
lret
inc
shrb
pop
rorl
and
outsb
jo
shll
jns
icebp
mov
xchg
punpcklbw
in
jnp
mov
jae
jo
mov
inc
xchg
adc
sbb
lea
push
movl
sar
and
mov
jmp
inc
jo
jb
cs
scas
je
test
rclb
je
sub
sti
xor
mov
aaa
or
mov
inc
jnp
fbld
in
jp
test
jge
jbe
xor
sbb
gs
push
or
popf
push
jnp
fsin
outsb
adc
lods
icebp
add
and
pop
pop
mov
loopne
fldenv
inc
in
lgs
fldcw
pop
loop
inc
test
xor
add
xor
inc
ss
rcrb
push
pop
shlb
jl
pop
movsb
cmp
jmp
adc
and
orl
sti
push
cltd
pop
jnp
negb
fisttps
leave
mov
loope
pusha
int
loope
push
or
add
ljmp
movsl
arpl
addr16
push
movsb
push
push
mov
sub
shrb
mov
xchg
outsl
fisubs
xlat
in
dec
fcompl
mov
das
or
pushf
icebp
popf
adc
std
je
push
push
push
pop
jle
sbbl
mov
mov
cmc
inc
sbb
les
or
std
xchg
jno
decb
cmpsb
sub
repz
mov
cltd
inc
rcr
lea
mov
adc
jmp
xchg
scas
idivb
shrb
fwait
or
fdivp
insl
or
sbb
outsb
cld
mov
arpl
mov
scas
sbbb
es
in
sub
cwtl
in
lret
adc
loope
pcmpeqd
sub
add
jp
xchg
jle
pop
inc
mov
cmpsl
dec
push
and
mov
leave
fs
imul
xchg
test
test
sti
inc
je
xchg
ljmp
cwtl
or
pop
push
add
or
mov
movsb
rcrb
mov
sub
incb
lahf
jp
push
mov
cmp
aaa
test
cmpsb
pop
add
fistps
pop
hlt
dec
and
cld
mov
out
mov
sub
jns
and
or
inc
pop
lret
add
mov
pop
add
les
push
mov
and
jne
filds
adc
add
cwtl
dec
push
movsb
mov
xor
test
lods
mov
cmp
movsb
sbb
mov
push
add
lods
std
jg
test
sbb
adc
in
xor
mov
pop
stos
lock
xchg
cli
jb
pop
pop
orl
fistpll
in
nop
xor
popa
inc
pop
popf
xchg
mov
dec
pop
int3
movsb
enter
ret
call
in
enter
xchg
mov
and
hlt
aam
pushf
std
pop
cmpl
pop
sub
inc
adc
dec
xchg
xor
movsl
mov
or
pop
push
pushf
out
sar
push
test
arpl
mov
push
frstor
or
and
lret
cli
sbb
int
lret
les
and
cmpb
mov
addr16
lock
dec
loop
in
aad
repz
adc
pop
js
mov
jo
pop
adc
inc
inc
sti
iret
xchg
mov
repnz
repz
jb
cs
outsb
js
popa
mov
cmpsb
icebp
in
nop
mov
mov
inc
add
add
inc
in
sar
dec
jge
hlt
scas
adc
dec
subb
pop
sbb
jl
xchg
pop
mov
movsb
mov
hlt
xchg
xchg
int
mov
jnp
fsts
mov
cmp
pop
test
mov
sub
jecxz
les
adc
movsb
cmc
push
xchg
cmc
push
gs
les
icebp
push
ss
in
outsl
addb
ljmp
dec
fbld
loope
iret
enter
inc
adc
adc
push
xchg
jbe
cltd
lret
fsubr
jmp
xchg
cmp
scas
adc
mov
std
jne
test
les
out
test
sarb
xchg
cs
xchg
and
fwait
or
lods
out
aam
or
pop
out
push
pop
negl
inc
mov
inc
push
xchg
dec
lahf
mov
mov
test
stos
andl
mov
cli
mov
sbb
xor
enter
ss
dec
or
add
mulb
mov
jle
xlat
out
ret
js
subb
mov
fidivl
orb
jno
xchg
lea
popf
jne
fnstcw
lods
ljmp
or
bound
push
mov
xchg
mov
mov
popf
mov
mov
inc
cmp
sbb
add
stos
dec
scas
ror
int3
daa
pop
mov
mov
sbb
mov
aam
mov
and
mov
cld
popa
negl
jle
data16
daa
icebp
jo
mov
add
mov
mov
mov
lret
inc
inc
sbb
cs
push
push
jns
or
jmp
or
xor
fisttpll
cmp
mov
adc
ret
jb
lea
mov
js
and
sbb
mov
test
in
enter
sti
cmpsb
outsb
lret
in
rorb
inc
jge
adc
negl
cmp
mov
bound
cmp
mov
int3
mov
scas
dec
cmp
out
jmp
stos
movsl
adc
ss
adc
cmp
push
stos
dec
scas
or
aad
mov
adc
xchg
push
mov
push
pusha
dec
movsb
nop
dec
popa
filds
or
icebp
pop
mov
fcmovnbe
mov
or
sub
jg
lret
lock
or
testb
js
push
adc
inc
leave
mov
sti
addr16
mov
leave
cs
pop
jge
cmp
ret
repnz
adc
push
rcrb
test
out
insb
mov
xchg
xlat
push
and
mov
in
push
adc
pop
mov
or
insl
cmp
sbb
ret
jge
in
data16
icebp
xor
and
add
cmp
sbb
leave
daa
add
xchg
addl
cmp
lods
jmp
out
push
jno
mov
mov
cltd
fnstsw
xor
inc
gs
mov
in
xlat
sub
pop
int3
inc
add
nop
push
rcrb
outsb
xchg
lcall
push
jns
pop
sub
inc
int
fsts
cmc
fsubl
sbb
scas
pusha
js
dec
lcall
repnz
xor
cmp
inc
jp
orb
mov
adc
or
rcll
jns
jge
pop
sub
mov
lret
imul
pop
out
pop
ss
imul
int
out
dec
dec
pop
or
clc
mov
pop
mov
xor
sahf
sub
outsl
in
shlb
adc
imul
cmp
xchg
inc
cwtl
adc
aas
mov
fwait
setnp
ficomps
lcall
fs
jge
add
out
decl
arpl
cmpsb
mov
sbb
imul
lods
popf
pusha
insb
or
neg
xchg
sbb
inc
mov
xchg
jnp
mov
cwtl
cmp
movl
das
enter
xchg
mov
test
inc
jo
add
iret
fmul
jl
push
and
lret
adc
imul
adc
aad
sbb
aaa
xor
jns
icebp
repz
test
jg
push
out
call
sub
mov
xchg
mov
jbe
daa
insl
fcmovne
lahf
repnz
lahf
adc
sbb
lds
mov
fcomp
lods
stos
in
xchg
pop
fcoml
and
in
push
sub
sti
lods
fcomps
lret
sub
xor
push
xchg
push
cmp
sbb
addr16
pop
leave
negb
std
jecxz
adc
int3
jmp
xor
dec
push
rorb
xor
das
inc
add
addr16
push
mov
icebp
mov
cwtl
sti
int3
imul
xor
adc
push
add
sub
pop
cmp
hlt
shl
xchg
sub
mov
dec
add
fidivrs
add
push
js
add
rcrb
fistpl
cli
mov
inc
jno
pop
mov
repz
add
scas
repnz
pop
pop
mov
xchg
inc
ret
adc
inc
mov
lock
push
adc
add
es
pop
sub
mov
and
ret
icebp
lea
push
int3
mov
sbb
popa
outsb
js
in
out
sbb
cmc
cmp
outsb
pop
sub
mov
arpl
mov
inc
cli
std
xor
int
rcr
add
out
pop
movsb
mov
int3
lea
test
sti
pop
sbb
xchg
pop
ss
int
sbb
pop
mov
or
mov
ret
movsl
arpl
pop
pop
into
jno
cld
inc
adc
push
mov
push
cmp
mov
push
jae
mov
out
push
das
lods
int
mov
repz
pop
lea
inc
push
loopne
sub
pop
xchg
out
cmp
icebp
adc
cmp
fs
out
xchg
mov
pop
shrb
cmp
dec
and
outsl
or
hlt
push
xor
cmc
mov
out
ret
mov
xchg
or
pusha
and
repz
and
sbb
fidivs
pusha
aam
and
call
pop
pushf
sub
idivl
mov
in
dec
pop
cmp
loope
scas
mov
das
roll
mov
jbe
js
dec
dec
sahf
mov
int3
jnp
scas
inc
outsb
mov
push
cmp
scas
sbb
xor
mov
stc
push
adc
and
lahf
cwtl
adc
cmpsl
test
dec
dec
fdivs
xchg
pusha
shlb
mov
neg
popa
imulb
add
jge
movsb
push
or
ret
jle
in
mov
js
in
push
add
sub
mov
in
mov
cltd
popa
jnp
dec
mov
push
lock
adc
lret
out
sub
push
xor
sbb
sbb
or
mov
pop
or
stos
iret
testl
mov
inc
adc
xchg
ss
inc
sahf
jl
frstor
outsb
sbb
cwtl
mov
int
enter
dec
in
mov
cs
and
mov
imul
xchg
and
lock
cmp
push
int
aas
fdivl
jg
mov
adc
nop
adc
idivb
inc
push
xorb
xor
cmp
data16
push
and
sbb
pop
pusha
xchg
mov
mov
je
fwait
jno
loope
and
and
add
xchg
fistpll
push
or
push
jb
dec
movsb
addr16
xor
loope
rolb
loop
push
dec
fsubl
dec
daa
dec
xor
jge
mov
dec
jae
mov
movsl
outsb
xor
xor
bound
pop
iret
aad
cmp
cmp
adc
mov
int3
cmp
adc
hlt
shr
xchg
dec
out
daa
and
movsl
arpl
mov
mov
xor
loop
sti
test
insb
and
arpl
std
adc
add
dec
sub
add
scas
stos
mov
push
aaa
xchg
mov
xor
mov
nop
sbb
dec
in
sbb
or
loope
shl
daa
rcrl
fisttpll
inc
imul
xchg
and
ljmp
xor
pusha
adc
daa
enter
shlb
loop
movsb
ja
inc
mov
jno
lret
je
sub
fcomp
bts
stos
aad
sti
mov
or
movsb
pop
imul
ljmp
std
test
iret
dec
call
or
sti
cmpsl
and
je
jmp
cmp
cmp
and
xchg
mov
les
data16
daa
mov
mov
push
inc
mov
lock
jp
sti
into
sbb
iret
mov
cmc
and
pusha
lret
or
inc
fdivl
vmovups
pop
sbb
ror
jl
xor
in
mull
cmp
xchg
push
cmpsb
and
xchg
sbb
sub
icebp
scas
xchg
push
lock
jb
sub
mov
mov
pop
je
xchg
arpl
les
jne
mull
test
adc
cli
jne
xor
daa
enter
push
out
pushf
mov
int
cmpb
lea
mov
data16
jg
pop
insl
push
sub
ret
xchg
mov
xor
add
sub
mov
mov
add
xchg
arpl
fldenv
hlt
out
add
shl
das
aaa
sub
movsl
enter
cmp
jbe
cmp
sbb
xchg
add
lods
mov
shll
negb
leave
popf
cli
sub
dec
adc
loopne
mov
popa
mov
ljmp
push
lods
pop
lods
or
add
mov
inc
push
out
into
or
mov
jns
xchg
mov
stos
mov
imul
repz
std
inc
loop
jb
push
xchg
inc
cmp
mov
sbb
stos
add
test
scas
mov
jg
cmp
inc
add
dec
sub
rorl
ret
fdivs
cmc
out
xor
or
int
mov
fsubs
mov
dec
fisttps
ficoml
test
scas
push
mov
ret
inc
loop
mov
enter
int3
ret
dec
or
hlt
lods
jle
sub
jecxz
sbb
test
cli
mov
or
add
test
in
xchg
out
mov
adc
inc
adc
mov
jge
test
adc
aam
xchg
push
xor
jbe
rcll
inc
call
and
leave
xchg
neg
rol
push
in
mov
adc
test
inc
es
add
pop
ds
mov
sbb
push
mov
mov
xchg
int
loopne
gs
push
xchg
xchg
xchg
shlb
or
dec
adc
out
mov
sub
out
aam
cmc
lcall
inc
loopne
xchg
sbb
add
pop
movsl
les
add
xlat
sbb
fldt
sbb
repz
daa
sub
pop
mov
cmp
mov
into
or
or
jbe
imul
cmp
aad
int3
fldl
fwait
inc
pop
push
dec
aas
shlb
lret
data16
shlb
bound
mov
fwait
push
push
cmpsl
es
out
sarl
loope
andb
hlt
call
loopne
xchg
cmp
sub
cli
je
dec
ret
adc
jg
loope
xchg
cs
outsb
jmp
enter
ret
lods
movsb
mov
dec
push
pop
fildll
mov
lea
mov
fcoml
std
xlat
cmp
push
pushf
sub
mov
lds
adc
in
or
ja
das
pop
insb
fdivrs
dec
call
loope
jne
aad
xor
push
shll
mov
movsl
and
adc
ljmp
insl
pusha
stos
scas
cmp
adc
adc
lret
inc
mov
pop
das
movq
xchg
add
push
mov
bound
addb
add
cwtl
add
xlat
fs
adc
inc
test
inc
xorb
mov
imull
test
dec
movsb
lret
cld
addr16
jl
outsl
pop
xor
inc
mov
faddl
dec
stc
ret
pop
xor
js
les
mov
cmc
scas
loope
push
hlt
mov
push
mov
mov
inc
cmc
adc
fucomip
mov
imul
out
pop
sbb
jg
cmc
mov
jno
in
sarb
not
int3
cltd
into
aaa
and
lods
sbb
ds
mov
mov
mov
fcomip
mov
or
imul
mov
jo
in
mov
sbb
xor
or
mov
pop
imul
cld
insl
leave
out
inc
repz
push
sarl
xchg
xor
mov
push
inc
popa
mov
cmp
pop
adc
ljmp
push
xlat
mov
mov
sbb
imul
jle
jecxz
cwtl
fucomip
pushf
out
inc
icebp
movsb
ljmp
mov
fs
sbb
fcoml
cmp
xchg
scas
cwtl
cmpsb
stc
jae
jl
mov
je
in
cmp
inc
dec
push
imul
add
stos
loopne
addr16
push
lea
mov
or
jmp
inc
fdivr
call
lcall
push
mov
sti
fdivp
add
shlb
loop
fistps
sbb
mov
add
aas
inc
aam
loop
sbb
clc
sbb
xor
scas
jl
cli
out
sbb
jmp
sub
mov
je
push
into
cmp
scas
push
sub
mov
lcall
rcrb
mov
fadds
int3
xor
add
mov
ds
fwait
sahf
push
push
and
decl
pop
jge
jecxz
les
outsb
ja
add
xor
push
jle
out
add
push
xor
and
insb
adc
ret
lea
mov
arpl
mov
in
cmpsl
decb
loopne
mov
sub
fcomp
lock
push
rorl
rol
lret
xchg
jle
pop
imul
fimull
repnz
ljmp
cmp
subl
xchg
add
loopne
aad
add
mov
mov
bswap
or
scas
ror
or
outsl
and
push
mov
pusha
or
sub
sbb
pop
repnz
test
pop
jl
mov
xchg
or
jp
xchg
sub
or
mov
mull
push
or
jmp
fs
mov
iret
aas
mov
cmp
inc
mov
aas
std
xor
aam
adc
iret
jb
stc
insl
int
xchg
jle
imul
out
lea
scas
sbb
adc
xor
adc
loopne
jae
xor
repnz
dec
xchg
mov
and
mov
mulb
icebp
and
in
fwait
mov
cmp
sbb
in
decl
push
dec
out
dec
lods
clc
jmp
sub
adc
lcall
xchg
dec
xchg
in
movl
inc
dec
pop
sub
addr16
fyl2x
dec
sub
add
or
orb
mov
fcmovbe
add
imul
fimull
stc
ds
sub
movsl
xchg
scas
jecxz
or
movb
cmpsl
sahf
jb
outsb
fs
pop
xlat
bound
adc
sbb
dec
cld
pop
xchg
aaa
adc
adc
inc
xchg
cwtl
push
es
es
and
mov
je
sbb
jle
pushl
mov
leave
andl
mov
sbb
mov
cmpb
cmp
mov
xchg
shl
movsl
mov
xor
xor
dec
xor
or
push
cvtss2sd
test
xchg
imul
std
xchg
loopne
pop
pop
rorl
popl
cmp
inc
fsubs
push
cwtl
mov
in
sbb
xchg
loope
mov
pop
push
addr16
cli
mov
daa
ljmp
dec
fdivrs
jno
mov
jns
loope
lock
jecxz
and
test
test
das
xor
push
fisttps
jne
and
sbb
outsl
ss
mov
outsl
sti
lods
lcall
jge
xor
adc
ret
lock
inc
jb
push
mov
int3
mov
leave
aam
push
in
push
jp
cltd
adc
imul
and
pop
fs
movsl
insb
cmp
in
fmul
xor
in
stc
ds
add
adc
movsb
out
sub
xor
pop
sbb
testl
jno
data16
or
mov
sbb
pop
in
ret
les
mov
xchg
cmp
subb
das
pop
lcall
xor
das
mov
mov
mov
add
daa
imul
and
cmp
shrb
xchg
add
or
pushf
pusha
pop
popf
cltd
jns
xchg
xchg
jecxz
mov
xchg
aaa
mov
fs
add
jp
popf
cmp
fsubs
xchg
sub
sbb
hlt
inc
lahf
mov
fsubr
push
push
jns
stos
xor
cwtl
push
mov
dec
xchg
js
int3
out
data16
out
lcall
cmp
fdivr
cmp
push
mov
sub
loope
sbb
cmpsl
movl
or
jl
fistl
mov
jl
add
pop
incb
mov
xor
insb
dec
icebp
add
add
je
stos
fmuls
xor
jb
bound
mov
sub
mov
jecxz
sub
test
popf
test
out
mov
pop
sub
and
cld
adc
xor
dec
fs
sub
or
pop
aam
dec
into
fildl
scas
sub
sbbb
adc
mov
shrl
and
nop
inc
loop
imul
mov
jb
adc
arpl
dec
test
pop
dec
addb
add
inc
mov
sub
movsl
adc
push
and
mov
cmp
mov
dec
clc
and
into
or
call
ljmp
lcall
jp
dec
cmp
push
ljmp
lahf
or
xor
dec
adc
or
jge
ss
repnz
test
lods
cmp
gs
in
sbb
scas
in
adc
cmp
imul
arpl
adc
jge
and
xor
mov
xor
outsb
cmpsb
adc
mov
mov
xchg
xor
add
inc
pop
icebp
in
loopne
xchg
les
and
jp
scas
std
cmpsb
sbb
test
sbb
sbb
mov
cmp
shr
push
mov
or
inc
xor
add
mov
divb
shrl
xor
xchg
adc
dec
mov
mov
or
incl
dec
add
hlt
jge
fnstenv
push
aaa
bound
sbb
js
insb
out
or
pop
cli
nop
pushf
or
push
loopne
mov
sub
jmp
rcll
mov
xlat
fsubrl
push
daa
push
and
ret
enter
and
orl
cmc
loope
or
cmp
xchg
adc
aam
dec
icebp
dec
xchg
xchg
test
mov
and
in
mov
out
xchg
aam
xchg
inc
imul
or
jl
mov
mov
lods
fwait
fld
dec
inc
jae
sarl
int3
xor
push
or
cli
fadds
sub
and
sbb
mov
pop
ficoml
add
cmp
push
sub
arpl
xchg
cmp
test
ror
xchg
mov
mov
stos
inc
test
pop
popf
jb
movsb
cld
sbb
dec
mov
out
add
imul
xor
fcomi
sub
lea
cmc
cltd
adc
into
in
mov
jle
sbb
outsl
mov
fsts
loopne
cmc
or
shrb
jb
arpl
or
jnp
mov
rcrb
lods
vmwrite
xor
mov
mov
and
or
subl
in
rolb
scas
dec
imul
pop
inc
xchg
xchg
scas
ds
jae
je
pop
mov
xor
cltd
mov
dec
lret
pop
fdivrs
movsb
cmpsb
scas
popl
inc
incl
mov
sub
stos
shll
cltd
stos
cmp
ss
sbb
repz
nop
aam
or
mov
repz
lds
ds
fcoml
mov
dec
xor
push
push
lods
fldz
movsb
lds
xchg
mov
mov
pop
push
sbb
pop
out
mov
movsl
sub
notl
sarb
aam
xchg
cmp
mov
adc
mov
pop
mov
daa
imul
in
mov
nop
mov
jb
jns
scas
pop
pop
out
add
outsl
mov
js
lock
insb
cmp
inc
pcmpgtd
or
scas
in
test
xor
pop
sub
dec
sub
scas
fnsave
mov
dec
lods
cmpsb
out
xor
out
inc
jle
mov
out
clc
jb
outsl
add
mov
fs
clc
sub
pop
inc
jns
lret
cltd
data16
pop
mov
lods
inc
pop
pop
daa
add
and
fstps
xor
hlt
dec
or
cmp
mov
sbb
iret
pushf
fdivs
push
adc
pop
adc
xor
xor
mov
add
sahf
dec
pop
mov
out
cwtl
xor
or
scas
iret
dec
stc
test
fistps
pusha
adc
sahf
repz
push
and
sub
sub
insl
in
cmp
cmp
sbb
mov
pop
xor
jmp
jmp
into
cmp
xor
stos
jo
roll
icebp
cli
dec
jae
jle
jg
dec
xchg
out
fisttpl
cwtl
dec
pop
mov
inc
xor
ljmp
fs
sbb
pop
test
xchg
add
outsl
or
ds
mov
cmp
push
int
adc
in
adc
pop
aaa
loopne
loop
push
clc
dec
lahf
scas
pop
lcall
loop
inc
fnsave
mov
jge
fldcw
enter
cmpsb
nop
outsb
jle
pop
mov
fwait
or
jecxz
mov
mov
test
inc
test
out
inc
je
xor
lods
pop
mov
and
bound
add
sub
push
jnp
aad
fdivrl
out
leave
aas
rorl
into
xchg
pop
mov
pop
jno
mov
dec
pushf
repz
repz
fsubl
icebp
sub
or
sub
test
pop
jg
jns
popa
stos
jne
fiaddl
sbb
inc
je
rcrl
shrl
jmp
je
icebp
loop
int
pop
xchg
mov
sbb
cld
cwtl
xor
lea
sub
pop
xor
xchg
push
xchg
lds
push
jecxz
sbb
mov
lods
cmp
mov
push
lods
xor
ja
jno
cs
push
fwait
sti
sub
inc
mov
sub
sub
xchg
pop
pop
dec
into
insl
dec
addr16
fucom
popa
xchg
jnp
jecxz
xchg
pop
xchg
insb
or
mov
push
mov
xchg
dec
je
rcrb
jbe
pop
lods
mov
jmp
pop
xor
fnstcw
jg
cwtl
mov
js
popl
std
mov
mov
mov
sbb
jbe
test
insl
dec
dec
sbb
addr16
in
movsb
jne
call
test
jnp
enter
xor
sub
movsl
adc
leave
js
adc
ret
pop
pop
sub
aam
push
or
push
xchg
lretw
inc
addr16
or
cs
and
mov
sbb
mov
lods
jo
std
dec
sbb
pop
mov
mov
mov
dec
leave
push
or
iret
push
stc
and
hlt
mov
pusha
popa
mov
xchg
xchg
stos
add
jle
adc
cmp
div
mov
popa
in
mov
fildl
sub
mov
dec
nop
rolb
cmp
mov
mov
mov
in
jne
nop
inc
bound
inc
lahf
shlb
aam
inc
movl
xor
dec
pop
cmp
push
jnp
jnp
sbb
insl
mov
mov
stc
les
imul
mov
insb
add
xchg
or
js
push
mov
xlat
stos
pop
pop
sub
ds
xchg
add
out
sarb
add
aam
cli
sbb
cld
dec
dec
mov
jg
push
push
jns
pfmul
add
pop
cmpsb
in
clc
and
sti
hlt
inc
fnclex
test
bound
scas
ror
out
pop
mov
cld
pop
out
hlt
add
or
add
xor
lea
sub
jmp
lods
mov
jbe
lock
fsubrl
lahf
in
pop
movsb
loope
mov
bound
inc
add
cmp
stc
in
rcr
popf
adc
out
aas
add
lods
outsl
adc
or
and
test
sub
push
push
dec
fxtract
out
mov
xor
movsl
out
cmp
inc
sub
lods
pop
call
inc
push
lcall
sub
movsl
mov
mov
in
adcb
and
or
and
and
add
dec
sahf
pop
cmp
sub
mov
push
popf
pop
sbb
shll
jns
push
dec
sti
mov
push
or
fwait
mov
mov
jmp
dec
cwtl
rorb
leave
popl
lods
push
in
xchg
lcall
mov
and
sbb
pop
lcall
mov
mov
mov
adc
aad
gs
adc
pusha
sahf
add
lds
pop
ficoms
jno
or
daa
jg
mov
jo
xor
cmp
aaa
sub
xchg
int3
fcoms
and
cmp
loope,pn
adc
movsl
out
xchg
jmp
fdivr
push
push
dec
notl
jg
pop
fwait
push
mov
and
xor
add
enter
mov
push
adc
out
in
or
dec
mov
shrl
cwtl
xchg
jp
and
enter
mov
pop
les
std
jb
inc
add
add
mov
dec
push
xlat
sub
pop
add
push
sbb
dec
pop
xchg
popf
jecxz
sbb
inc
dec
insb
jae
mov
push
jle
fstp
mov
int3
shlb
ret
jb
xchg
adc
xchg
fiaddl
dec
into
pop
insb
nop
mov
or
lret
into
movsb
mov
enter
lcall
hlt
mov
xchg
popf
lret
dec
mov
movnti
sbb
dec
lods
imul
push
shl
or
cmp
inc
jmp
pop
and
lret
daa
mov
or
mov
jbe
cwtl
sub
ja
push
sbb
pushf
lods
jns
stc
cmp
cmp
test
push
pop
cltd
pop
loopne
repnz
push
ljmp
inc
ret
outsb
add
sbb
iret
mov
pop
mov
and
fnstcw
cwtl
sub
lds
xor
mov
adc
xchg
fs
out
lods
ret
cli
or
or
out
icebp
das
push
push
push
cwtl
dec
push
dec
or
inc
fwait
andb
out
adc
mov
sbb
stc
jo
adc
adc
cmp
sbb
xchg
xor
or
mov
insl
test
pop
lcall
mov
xchg
in
sbb
and
int3
gs
xchg
mov
loop
mov
imul
pop
sbb
push
jbe
add
sub
add
aam
push
imul
popa
iret
pop
push
or
push
cmp
push
jle
fwait
sbb
cmp
fwait
sub
push
andl
icebp
int3
mov
sbb
or
sbb
js
pop
dec
jae
in
cmc
lods
mov
mov
mull
sarl
push
xadd
xchg
dec
imul
lods
cltd
aam
iret
clc
arpl
in
lods
or
shrb
sub
movsl
out
fwait
and
sub
sub
mov
mov
inc
pop
inc
mov
lods
movsl
rcrl
scas
shll
dec
pop
out
jbe
sbbb
cwtl
jo
jne
daa
xor
pop
fstpl
daa
call
loopne
es
inc
or
call
jne
sbb
sbb
subb
call
out
sti
movsl
push
xor
in
les
mov
cli
push
add
lcall
lods
add
sbb
test
lcall
ja
xor
out
mov
mov
std
addr16
inc
pop
orl
adc
repnz
aas
call
rorl
dec
sti
iret
cmp
loope
daa
sbb
xor
outsl
test
mov
xchg
dec
into
cmp
cmp
ljmp
ljmp
ror
mov
or
pop
cmpsb
dec
iret
sbb
lret
int3
test
mov
jo
adc
insb
mov
adc
push
pop
add
data16
out
lods
int3
pop
fstl
push
xchg
and
cli
or
xor
add
pop
and
cmpsl
and
add
add
and
xorl
popa
sub
jecxz
add
adc
insb
aaa
adc
mov
jmp
inc
inc
adcl
pop
es
mov
icebp
sbb
dec
cmp
mov
lds
or
mov
dec
xor
movb
mov
jle
add
sbb
cs
data16
dec
or
and
xor
dec
cmp
xchg
imul
fldt
enter
into
ret
fstl
lods
xchg
push
mov
xor
aad
or
sqrtps
les
inc
ljmp
sti
rcl
or
cmpsl
cmp
xchg
adc
gs
dec
dec
pop
stc
cmc
shrl
aas
jge
adc
lods
push
dec
insl
mov
mov
lods
fiadds
push
cmp
and
push
aad
mov
jg
cli
frstor
cmp
adc
popa
cmp
lcall
pusha
mov
xchg
into
inc
mov
aas
pop
inc
push
jp
leave
push
add
cmpsl
lahf
js
inc
icebp
dec
fcoml
cmp
push
push
add
mov
adc
sbb
ja
lds
cmpsl
cltd
mov
loop
jnp
or
pop
movsb
inc
mov
xorb
xchg
add
lcall
jbe
cld
mov
pop
loope
jp
xchg
xor
cmp
inc
loope
fistps
loopne
rorb
test
fidivrs
popa
outsl
dec
xor
dec
pop
fstpt
outsb
imul
movsb
xchg
mov
or
loopne
dec
cwtl
inc
push
test
adc
push
aam
xor
sbb
xchg
test
push
data16
jbe,pt
or
pop
cmpsb
stc
push
lret
aam
bound
test
ss
xor
std
mov
inc
test
adc
xor
mov
jne
inc
into
adc
inc
scas
adc
sub
dec
and
and
mov
mov
imul
pop
and
test
or
nop
es
les
jnp
sbb
inc
stc
repnz
inc
leave
stos
out
dec
daa
andl
cli
idivb
sbb
xchg
cmp
sub
sti
and
cmp
in
mov
in
test
outsb
push
sub
or
and
stos
cs
shrl
aad
dec
shrl
je
sbb
int
fistpl
pop
aad
push
cli
cmc
aas
cmp
mov
notb
mov
sbb
aad
data16
inc
dec
lods
data16
cmp
insl
call
mov
xchg
sbb
int3
jge
xchg
imul
or
insl
cmpl
adc
aam
loop
add
jb
cmp
lock
sti
mov
clc
fcoml
push
mov
jns
movsl
subb
sahf
inc
add
or
push
outsl
mov
mov
mov
pop
pop
adc
pop
hlt
cmpsl
ja
jo
gs
lea
inc
out
adc
cli
mov
mov
inc
scas
outsb
inc
cmpsb
jbe
out
inc
inc
pop
jo
or
outsb
les
sbb
sub
sub
xchg
orb
mov
push
jbe
or
fiaddl
adc
arpl
xchg
push
andl
insb
aam
pop
movsl
fucomp
mov
mov
test
jmp
jmp
popf
ss
ljmp
push
mov
push
mov
or
mov
add
push
out
rcll
sbb
pusha
cli
out
out
and
xchg
jmp
xor
ret
mov
popf
sbb
xchg
xor
out
imul
xchg
icebp
sti
hlt
enter
mov
jne
xchg
pop
nop
ja
in
imul
mov
inc
cltd
cld
adc
jno
rcrl
je
mov
shlb
cltd
adc
xor
sahf
xchg
mov
in
dec
mov
in
rolb
push
nop
pop
cmp
push
xor
xchg
xor
lret
add
pop
sub
aaa
pushf
dec
push
push
pop
lret
and
or
xlat
out
add
cld
inc
bound
inc
mov
test
test
push
sub
pop
hlt
pop
lahf
adc
ret
xchg
pop
xchg
fcom
pop
out
mov
mov
in
jnp
dec
jle
sub
loopne
sbbl
scas
negb
outsl
mov
push
cmpsl
scas
inc
add
cltd
xchg
loop
stos
incb
xor
rorb
scas
push
cmp
mov
fucomip
jp
xchg
cmp
fidivl
inc
mov
mov
and
mov
xchg
cmp
adc
pop
and
jmp
lods
push
movsb
call
jmp
loope
cmp
bound
and
movsl
sahf
mov
pusha
sbb
push
jbe
out
mov
mov
jne
cmp
inc
adc
sub
jge
cli
clc
fistl
aam
cltd
cmpsl
xorb
mov
inc
sarb
or
xchg
mov
jnp
not
sub
jg
ds
push
cmp
fimull
push
mov
mov
fists
adc
mov
insl
scas
mov
scas
mov
shlb
ret
cld
mov
push
mov
mov
lret
inc
lret
pop
cmp
shrb
jno
in
or
mov
sub
dec
addl
jecxz
jl
mov
or
shlb
insl
xchg
test
and
or
scas
fbstp
pop
int3
outsl
cmc
mov
mov
movsb
push
in
in
sub
aaa
mov
push
add
mov
push
adc
sbb
inc
loope
add
in
cmpsl
and
dec
fbld
outsb
cmpsb
insb
mov
adc
repnz
mov
cmp
jb
out
cmp
lds
out
fs
inc
lcall
out
repnz
ljmp
sbb
push
ror
inc
gs
imul
push
mov
sbb
fstpt
lea
and
imul
sbb
push
xor
arpl
cmp
sarb
int3
mov
adc
int3
pop
xorl
cwtl
xchg
xchg
sub
dec
cmp
xchg
test
mov
pop
xor
dec
jns
ljmp
popf
add
xor
enter
fucomp
ret
jge
xlat
ljmp
push
incb
ljmp
jmp
pop
lea
sbb
mov
lods
cltd
bound
and
pop
es
xchg
jecxz
xchg
adc
addr16
xor
mov
sbb
subl
inc
js
adc
adc
or
cmp
jo
xor
mov
nop
xchg
lret
rcr
sub
leave
ss
or
adc
adcl
fidivrs
clc
inc
xor
iret
mov
lods
js
mov
mov
mov
mov
cs
pop
mov
mov
int
cld
xchg
sub
leave
pop
into
test
arpl
movsb
into
mov
xor
add
xchg
loop
lods
cwtl
repz
xor
lds
push
push
mov
loop
nop
or
lods
cmp
arpl
jno
xor
pop
imul
movsl
jns
push
pop
enter
out
ret
xchg
push
pop
dec
hlt
test
popa
fstpl
sub
pusha
xor
sub
setns
inc
in
lds
push
and
push
push
cli
stos
jb
dec
xchg
mov
bound
adc
or
test
imul
loope
lahf
fsubl
jne
lahf
dec
jge
addr16
and
inc
or
adc
jg
cs
push
add
pop
iret
scas
js
dec
data16
push
cmpsb
scas
cwtl
add
and
out
pop
imul
gs
jmp
in
adcl
inc
pusha
cmp
cmpsl
gs
lahf
frstor
add
fistl
out
xchg
cmp
lock
mov
clc
push
adc
in
and
insb
gs
jns
fcompl
mov
test
pop
scas
add
inc
push
jbe
insl
ja
push
decb
or
mov
imul
cli
dec
dec
jo
lods
movb
divb
mov
inc
jmp
fstps
rcll
movsl
sub
adc
sbb
mov
cmp
pop
stos
adc
and
fadd
flds
xlat
cmpl
pop
xchg
aad
mov
jecxz
xchg
inc
es
mov
aad
clc
lods
out
out
dec
sub
repz
sub
sub
lret
imul
std
adc
inc
out
xor
shrb
push
adc
lret
adc
sbb
jne
pop
jae
jo
inc
or
ljmp
adc
inc
out
imull
push
arpl
xor
jae
js
test
inc
pop
in
scas
ja
icebp
imul
push
mov
imul
fwait
pop
dec
movsl
push
or
pop
sbb
repnz
mov
pop
xchg
je
aas
mov
cltd
pop
cmp
mov
test
mov
insb
mov
xchg
dec
shrl
std
sti
clc
dec
push
jnp
and
xlat
push
pop
push
stc
addb
add
adc
sbb
ds
xchg
das
lcall
or
or
xchg
cmc
inc
xorl
mov
nop
imul
xchg
dec
mov
pop
or
enter
adc
add
add
mov
loopne
xchg
jg
cld
adc
push
or
stos
cmpsb
xor
aam
aaa
sub
mov
inc
xchg
adc
sub
nop
or
fistpll
mov
test
mov
test
inc
lret
lods
pop
test
push
cwtl
mov
dec
mov
in
jno
sub
inc
push
daa
ss
dec
cmp
sbb
fidivl
sbb
mov
jge
xor
fstps
sbb
pop
jnp
xchg
ret
js
mov
jnp
gs
out
sbb
mov
lods
loop
fdivp
lahf
inc
ret
sbb
ljmp
nop
mov
ret
add
daa
inc
mov
jb
insb
inc
add
stos
cmp
fistps
inc
sub
div
enter
push
aad
add
push
cltd
cmpsl
ret
mov
gs
subb
jnp
push
pop
insl
rolb
xor
cli
in
in
xchg
enter
aaa
sti
pop
je
stos
stos
jle
fisttps
jg
adc
loop
cwtl
aaa
cmpsb
lods
shlb
jp
or
int
push
roll
jge
cmp
rolb
ljmp
add
leave
fistps
and
or
jle
push
testb
inc
outsb
in
mov
push
or
pusha
cwtl
lods
or
lret
mov
mov
inc
add
push
shrl
push
xchg
xlat
sti
jecxz
push
push
test
add
sbb
add
sbb
addb
jge
sub
test
add
xchg
xlat
fs
iret
sub
ror
xchg
scas
pop
sub
pushf
dec
faddl
imul
ficoml
dec
loope
dec
iret
lahf
fcom
test
shl
xlat
fisttps
or
repnz
push
jb
fldl
jb
iret
test
jmp
or
or
movsb
add
sub
sbb
pop
fdivs
mov
rclb
fildll
jl
repz
mov
cmp
push
fistpll
or
mov
dec
pusha
repz
cs
in
aas
or
sahf
ret
inc
imul
lret
loop
scas
push
data16
jo
ds
xchg
incl
fnsave
rol
add
mov
movsb
adc
push
imull
ffree
popa
jecxz
scas
je
push
pushf
xor
fcom
mov
addb
out
xor
imul
jge
push
pushf
aad
pop
pushf
cwtl
mov
push
jl
btr
adc
inc
dec
rolb
or
arpl
push
out
push
adc
dec
mov
push
jae
mov
mov
ljmp
rcll
cmp
or
or
pushl
addr16
test
out
aas
sub
test
movl
sti
jno
or
push
inc
sub
sti
dec
icebp
xlat
jl
xor
add
adc
push
cmp
inc
mov
sbb
xchg
mov
adc
aad
rolb
fadds
mov
sbb
jg
and
mov
test
lret
jns
stc
lcall
loope
mov
sub
cld
ja
sub
test
ret
imul
into
mov
xchg
outsl
pop
test
aam
and
mov
pop
sarb
sbb
mov
mov
scas
outsb
clc
xchg
loop
push
and
fwait
gs
or
ds
out
insl
mov
add
ja
scas
ret
xchg
int
inc
in
and
jo,pt
or
mov
mov
enter
in
jmp
pop
mov
addb
jbe
jge
xchg
shlb
mov
and
jbe
dec
lret
fdivl
jae
xchg
mov
push
jp
hlt
test
and
pop
popf
popa
div
mov
mov
lahf
inc
popf
cwtl
mov
xchg
pop
lods
push
dec
xchg
mov
mov
push
enter
ret
jns
ds
repz
dec
mov
pop
adc
sub
adc
jno
icebp
mov
and
dec
in
out
loop
add
ds
fisttps
inc
mov
loop
ud0
pushf
sarb
lmsw
aad
xlat
rorl
xor
and
adc
xchg
andb
mov
pop
fmull
mov
xchg
ret
cld
xor
cmpl
mov
inc
adc
imul
loopne
dec
ret
cmp
jmp
popa
lds
pop
roll
idivl
adc
inc
adc
cs
fs
movl
arpl
xchg
adc
mov
divl
les
cmp
or
push
xor
hlt
mov
mov
rolb
nop
xchg
leave
mov
into
outsb
gs
dec
inc
xor
xchg
push
pop
hlt
inc
xlat
mov
in
add
adc
mov
addr16
cltd
xchg
enter
out
sahf
sbb
rolb
out
xor
imul
in
jge
mov
inc
fidivrs
mov
sbb
dec
frstor
out
sub
vcvtss2si
jl
xchg
cmc
mov
xchg
add
sbb
in
xor
test
add
or
pusha
adc
inc
repz
movsb
stos
dec
xchg
popf
or
pop
add
jnp
and
cmc
adc
pop
mov
cmp
fnstsw
pop
insl
push
adc
in
in
lock
dec
inc
inc
cmc
inc
lock
sbb
popa
push
pushf
popa
and
sub
jmp
jnp
jno
sarb
inc
aam
aaa
enter
sbb
hlt
mov
mov
std
xchg
add
repz
adc
xchg
lods
sub
mov
dec
xchg
jae
add
xchg
mov
inc
clc
push
pop
sahf
lock
cmpsl
sbb
fimull
push
xchg
inc
in
test
adc
gs
iret
mov
push
mov
icebp
push
or
imull
scas
orb
sahf
out
xor
repz
and
pop
movsl
xlat
hlt
sub
rolb
imul
push
dec
dec
ds
call
push
sub
mov
pop
xchg
adc
je
sub
xlat
int
xchg
sub
out
push
jp
sbb
mov
xor
cmp
xchg
or
or
loope
mov
cmp
jl
cwtl
adcl
je
xchg
sub
sbb
jae
jno
lods
push
mov
dec
cwtl
lea
dec
dec
mov
popl
inc
push
jne
in
xor
mov
xchg
sbb
add
and
xchg
ret
push
sbb
into
and
cld
sub
mov
xchg
aad
mov
xor
jb
rolb
stos
inc
ret
xchg
cld
add
leave
scas
or
inc
fsts
mov
lds
mov
push
jl
out
outsb
lret
cmpsb
push
jle
movsb
add
inc
sbb
xchg
cli
push
icebp
sub
int3
sub
sti
mov
movnti
sub
jg
add
cwtl
cmp
sbbl
daa
popa
cs
and
mov
test
mov
cltd
mov
mov
outsl
xchg
xchg
xchg
pop
add
mov
and
push
scas
lock
mov
cmp
add
xchg
pop
test
movsl
popa
clc
mov
stc
lock
xchg
scas
insb
or
mov
xchg
mov
jae
mov
lret
inc
sub
aam
push
lret
mov
dec
lret
or
pop
pop
movsl
test
pop
mov
pop
decb
test
mov
and
lret
test
adc
lock
mov
arpl
rorb
xor
cli
and
fs
push
int
xor
fwait
rcrb
or
jmp
pop
xor
js
mov
jge
push
fisubrl
adc
ljmp
xchg
mov
xchg
adc
jne
loopne
sub
xor
xchg
push
fstpl
sbbb
scas
jge
push
leave
fwait
sbb
sbb
movsb
mov
iret
lock
mov
sahf
push
loopne
adc
xchg
xchg
rolb
leave
push
imul
in
cmp
xchg
pop
call
lea
call
jge
aaa
test
or
or
and
stos
xor
add
popa
pop
xchg
jne
pop
or
popa
loopne
fldl
cld
mov
sarl
dec
gs
dec
cmp
sbb
popa
adc
fildll
pop
daa
pop
aaa
scas
leave
addr16
fcomp
jae
hlt
xchg
add
xchg
cmp
cmp
push
nop
pushl
pop
and
and
sub
and
jecxz
jl
ds
cmp
mov
jle
inc
rorb
pop
add
cmpsb
inc
ret
imul
push
push
in
rcll
or
push
or
jnp
aas
xchg
adc
loop
flds
andb
loopne
mov
movsl
xchg
and
lods
aam
mov
cmp
mov
mov
loop
cli
arpl
cmp
sbb
lods
mov
push
das
adc
popa
sbb
mov
adc
dec
ret
push
push
les
sbb
sahf
mov
xchg
xor
int
fcompp
xchg
cmp
inc
adc
shl
stos
cmpsb
stos
clc
jmp
xor
add
scas
repnz
push
cs
sarb
popf
adc
loopne
or
es
roll
jns
pop
fadds
mov
xchg
lock
add
push
lret
jo
dec
sbb
fisubrs
mov
lods
rclb
sbb
adc
pop
shl
repnz
pop
cmp
lcall
adc
xor
xor
dec
pop
ret
jle
push
xor
sbb
js
dec
aad
mov
push
jg
in
sti
aas
aas
adc
sub
popa
mov
pop
mov
gs
ret
into
frndint
pop
xor
mov
scas
out
int
test
and
xchg
dec
xchg
adc
xor
fucomp
pxor
ss
push
add
cmp
lods
mov
cmc
pop
mov
mov
inc
push
roll
js
dec
jno
test
jb
dec
pop
mov
test
lret
frstor
cwtl
and
inc
cld
fcmovbe
js
mov
adc
and
jns
adc
les
jp
ljmp
stc
mov
adc
les
sti
stc
std
inc
ja
in
mov
add
popf
mov
cmp
out
mov
lahf
scas
pop
pop
pop
ffreep
or
xor
fs
nop
dec
ds
cld
push
jne
std
inc
jo
rep
mov
lahf
push
stos
into
inc
aad
lds
pop
jmp
mov
sbb
cli
xor
ss
loop
jne
rcll
mov
lea
jle
aad
cmc
add
xchg
push
and
add
push
xchg
cmp
inc
dec
pop
mov
lea
sub
push
lods
mov
lods
fsubr
mov
in
loop
or
and
ret
test
push
test
es
rclb
pop
xor
mov
loopne
mov
mov
mov
dec
sti
xchg
add
into
push
push
out
sub
pop
clc
push
or
jo
das
sbbb
mov
inc
pop
ss
inc
jmp
aam
cld
adc
push
mov
push
push
aad
jne
jo
psubusb
gs
inc
out
sub
sub
iret
dec
or
sbb
bound
xchg
lahf
sub
pop
push
ret
cmp
lret
mov
cmpsl
out
pop
out
in
leave
xor
jl
pusha
push
mov
or
insl
nop
ljmp
or
fs
popf
enter
lahf
pop
xor
mov
mov
push
inc
fadds
pusha
push
out
xchg
sbb
fists
leave
loop
sbb
push
cmp
ss
sbb
mov
dec
dec
or
pop
loope
inc
push
pop
xor
test
scas
addb
pop
xchg
test
addr16
and
pop
dec
std
lahf
mov
sahf
push
fdivs
inc
lret
add
jbe
inc
sbb
jg
or
and
mov
fcomps
in
sti
lock
idivl
scas
fwait
adc
jecxz
fimull
in
leave
add
jnp
xlat
divb
add
adc
test
mov
cmp
into
mov
jmp
dec
mov
push
test
daa
cmc
je
pop
xchg
das
les
xchg
xchg
mov
pushf
lcall
outsb
addr16
jg
cmp
add
icebp
stos
mov
xor
sub
add
pop
scas
out
or
clc
xchg
xchg
push
sahf
xchg
in
repz
mov
mov
mov
leave
sub
push
add
dec
scas
jnp
adc
test
xchg
into
insb
jno
pop
sub
ret
dec
cmp
loopne
cmp
fs
stos
mov
mov
adc
dec
push
or
les
cld
cmp
out
adc
fisttps
icebp
cld
sahf
shlb
sahf
inc
jae
inc
mov
cmp
jo
xor
sub
fistpll
fists
adc
xlat
jno
and
dec
rorb
mov
std
popf
imul
inc
xor
push
imul
call
lahf
scas
mov
lds
adc
in
or
loop
mov
sub
int3
jno
sbb
sub
jle
addl
lret
arpl
das
add
cmp
enter
jno
repz
addr16
mov
test
jl
sub
aam
cmp
or
fimull
pop
pop
clc
sub
dec
lods
mov
inc
or
cmp
dec
jne
fldenv
pop
adc
sbbb
pop
aad
pop
ljmp
push
push
adc
mov
fisttps
cmp
xchg
not
inc
mov
or
cmpsb
push
imul
push
jae
add
in
xchg
sbbl
int3
jne
cmpsb
mov
jo
add
imul
inc
jo
call
push
int
xchg
jns
outsl
js
adc
in
sub
and
imul
pop
mov
js
sub
push
sub
add
add
lds
imul
imul
movsl
into
sub
jecxz
mov
sub
dec
ds
push
mov
std
and
movsl
cmp
pop
pop
fucomip
push
mov
fldenv
sub
clc
adc
pop
add
mov
mov
sbb
jl
in
ds
and
pop
fsubrs
xor
addr16
loope
mov
add
and
mov
imul
push
pop
push
out
adc
es
jecxz
sbb
fists
ss
leave
mov
pushf
push
push
cmpsb
jbe
adc
add
flds
mov
test
aad
hlt
into
dec
cltd
loop
mov
out
inc
inc
cld
and
stos
ljmp
cmp
xlat
pop
insb
ret
cmpsb
sahf
cld
idiv
and
add
and
das
push
sarb
xor
mov
cli
xor
in
jp
lock
jb
and
jmp
lret
mov
test
xor
adc
mov
out
arpl
add
call
add
dec
insb
mov
push
mov
in
xorl
xchg
push
add
or
rcrl
cli
cwtl
out
lods
adc
shll
das
and
sub
lods
jnp
out
and
iret
push
inc
mov
lods
lods
cmpsl
movb
in
mov
ficomps
jne
mov
aas
dec
inc
jmp
jo
push
xchg
cmp
xor
mov
ljmp
lods
cmp
jg
xor
xchg
cmp
int
jl
jne
dec
mov
xor
lahf
adc
adc
ret
mov
push
inc
push
jle
sbb
sti
insl
pop
xor
ljmp
mov
adc
repz
fs
std
cmp
or
fmull
fs
mov
push
pushl
jno
add
lret
popa
mull
repnz
jp
aas
int3
mov
sahf
loopne
arpl
add
pop
dec
rolb
cmp
popf
call
cmpsb
inc
sahf
jmp
inc
mov
ja
shlb
jo
arpl
imul
lods
jecxz
xchg
push
test
andb
mov
mov
nop
subl
inc
add
mov
cmp
lret
add
and
pop
fildll
jge
inc
shlb
dec
add
je
jnp
inc
in
out
jl
pop
push
xor
cmp
xchg
mov
jae
xchg
push
cmp
pushf
loope
loope
imul
inc
mov
and
and
jle
sub
in
out
roll
cmp
jne
cmpsl
mov
xchg
imul
jns
sub
std
cld
jp
insb
sbb
pushf
pop
paddq
pop
scas
andl
shrl
repnz
daa
xorb
nop
mov
lods
sub
iret
sbb
je
lahf
lcall
inc
xlat
imul
xchg
iret
sub
mov
cmp
sub
add
andl
imul
insl
pop
popa
sub
js
or
push
ljmp
dec
into
mov
dec
mov
stos
xchg
mov
inc
rcrl
xor
pop
push
mov
mull
dec
sahf
mov
lahf
es
pop
push
push
sub
lods
mov
cmp
and
stos
adc
jmp
mov
jb
sti
lret
mov
adc
cmp
js
pop
xor
out
outsl
imul
test
shlb
fldenv
xor
movsb
repnz
or
repz
lea
in
pop
popa
mov
idivb
mov
xchg
inc
mov
outsl
mov
push
aas
inc
sahf
jmp
mov
hlt
sbb
xor
or
jns
sbb
jge
in
sbb
cmp
enter
pop
or
je
sahf
lods
aad
cmp
jnp
push
dec
cmp
movl
push
loop
aad
mov
xchg
or
popa
stc
arpl
push
and
pop
inc
and
movsb
fildl
and
fsts
jge
mov
loope
int
add
inc
sbb
push
push
sbb
jo
insl
xor
call
lret
mov
lea
arpl
push
pop
inc
lcall
mov
pop
xlat
cmp
jb
or
ret
inc
adc
jns
daa
jp
mov
sbb
gs
orl
test
dec
push
int3
mov
or
jbe
dec
mov
mov
shr
adc
sub
and
es
push
es
scas
inc
sahf
mov
add
cmp
scas
cmp
adc
push
imul
out
pop
jecxz
arpl
push
mov
add
sbb
push
repz
mov
sahf
fadds
mov
pop
push
and
lods
aad
imul
sub
sbb
mov
ja
enter
nop
cltd
ja
stos
jo
push
sbb
or
in
orb
cmp
out
out
pop
jno
pop
arpl
movsl
mov
ljmp
pop
ljmp
mov
test
sub
adc
jb
pop
cmp
pop
and
ret
and
push
das
adc
jnp
test
push
pop
jb
pop
stos
cmp
lods
mov
pop
scas
mov
pop
fisttpl
rcr
jg
xchg
xchg
cmc
mov
sub
cmpsb
fisubrl
movsb
jb
ret
adc
mov
push
push
push
dec
into
mov
push
dec
setb
sbb
jbe
testb
pop
add
mov
imul
roll
arpl
sub
jl
aas
int
outsb
and
pushf
mov
ss
lods
les
pop
or
fildll
mov
pusha
in
adc
data16
dec
xor
popf
lahf
push
sub
mov
inc
aas
jo
popa
sarl
push
mov
jo
test
or
mov
lcall
and
jae
std
daa
xchg
out
xchg
in
pop
dec
dec
movsl
call
pop
sub
jl
sbb
cld
sbb
je
inc
popf
pop
stos
outsb
lods
pop
sarl
mov
cmp
popa
sahf
test
sub
jle
mov
icebp
fildl
iret
mov
pop
aaa
bound
lock
js
js
pop
sti
sti
xor
arpl
test
in
mov
rorb
sbb
movsl
sbb
imull
test
jo
mov
popf
hlt
stos
xchg
lods
jle
cmpsl
adc
pop
adcb
mov
subb
jne
call
ss
and
scas
loope
iret
xchg
add
pop
jnp
push
sbb
mov
inc
or
add
jp
scas
js
add
mov
mov
xor
enter
std
pop
lds
xor
push
lds
icebp
lahf
mov
jecxz
fildll
mov
xor
mov
test
mov
mov
push
in
push
adc
idivb
or
mov
imul
les
sbb
pop
hlt
xchg
mov
mov
lcall
js
out
repnz
dec
add
and
push
mov
and
mov
movsl
inc
insb
shrl
das
lcall
sbb
fwait
xchg
or
cmc
mov
cli
fcoms
popa
xchg
movsb
xor
aaa
xlat
jo
scas
aam
stc
mov
popf
icebp
fcoms
cli
and
mov
xor
ret
push
push
push
mov
repnz
ja
pop
adc
sub
jmp
mov
pop
pop
mov
adcl
adc
xchg
push
imul
rorb
ja
pusha
sbb
pop
cmpsb
stos
mov
ja
psadbw
cmc
xchg
xchg
stc
outsb
ljmp
dec
js
daa
ja
and
lahf
xchg
cmp
dec
lods
jl
and
sarb
inc
out
jae
inc
inc
push
inc
jae
stos
sub
shll
cmc
aam
fcoml
pop
cmpb
jae
arpl
and
sbb
aad
lcall
imul
push
adc
adc
testb
pop
mov
not
dec
push
add
das
leave
ja
lock
mov
mov
dec
ss
mov
jbe
or
push
push
xlat
divl
push
es
mov
add
or
gs
dec
inc
cmp
dec
shll
sbb
notl
stos
out
imul
enter
addb
bound
repz
aad
lcall
cltd
xchg
in
mov
rorb
mov
push
xorl
loop
dec
xchg
icebp
lds
and
enter
ret
std
pop
sti
outsl
add
cmp
or
ret
jb
pop
sub
xor
and
and
ljmp
roll
lahf
cld
mov
daa
out
jnp
daa
mov
imul
or
popa
push
data16
jge
ss
sbb
hlt
jae
or
test
incb
lods
cmp
mov
fidivrl
cmpl
push
ds
mov
cmp
in
faddl
popf
mov
inc
scas
add
mov
loope
xor
lret
stc
aas
xor
mov
jg
ret
hlt
fstpt
sub
mov
popl
pop
push
loopne
mov
jno
xor
push
arpl
push
mov
inc
mov
int3
push
insb
fcomp
pop
cmp
push
jecxz
jb
sub
add
mov
fincstp
stos
scas
mov
push
data16
push
out
imul
sbb
pop
mov
mov
out
addb
xor
cltd
jne
mov
fistl
les
scas
push
stos
pop
xchg
sub
jecxz
push
in
jno
int3
mov
popa
inc
dec
movb
imul
xchg
push
aam
mov
cwtl
xchg
add
xchg
leave
and
movsb
insl
pop
iret
xchg
or
and
mov
mov
outsl
push
mov
icebp
stos
jne
loop
add
mov
xor
cmp
push
dec
sbb
popa
mov
psubd
sbb
inc
fildll
pop
fisubl
pusha
mov
cmp
pop
dec
fisubs
popf
push
test
inc
xorl
sahf
cmp
mov
mov
jg
push
add
mov
sbb
int
out
inc
jp
pop
pop
fcmove
hlt
push
xor
pusha
xchg
popa
xor
jp
mov
bound
aaa
std
jecxz
out
mov
popa
aad
push
jb
mov
std
pop
je
mov
dec
and
inc
js
adc
loop
xchg
cltd
shrl
lods
sbb
push
lds
sub
xlat
xchg
rcrb
cwtl
jae
jb
fadd
lods
and
xor
mov
pop
movsl
jb
loopne
jo
cmp
adcb
jnp
adc
xchg
xor
jl
les
lods
andb
add
out
mov
adc
sub
pop
roll
adc
cmpsl
arpl
fidivrs
pandn
cmc
adc
fwait
cs
lea
mov
sub
xor
push
test
mov
mov
gs
push
xchg
jne
inc
popw
xchg
cmpsl
jb
jmp
dec
xchg
fdivs
dec
or
ds
fwait
lret
pop
cmp
or
ds
jp
andl
sub
jnp
dec
adc
rcl
int
sbb
xchg
ds
lcall
dec
enter
shlb
and
icebp
adc
sub
mov
popf
mov
icebp
or
cmp
mov
xchg
lret
mov
pop
scas
pop
outsb
roll
add
mov
or
daa
mov
jmp
jne
iret
pop
sbbb
repz
or
loopne
cmp
adc
mov
int3
sub
mov
test
shlb
lods
or
stos
push
sub
imul
dec
push
sub
and
je
ss
pop
and
test
mov
daa
or
mov
lcall
insb
loope
ret
aas
aaa
push
shr
push
bound
hlt
sbb
xchg
dec
ss
mov
mov
lods
mov
sbb
ljmp
pusha
mov
xchg
inc
cli
xchg
cmc
fwait
mov
jae
out
jbe
jbe
xchg
outsb
out
mov
lret
xor
fistl
or
jno
leave
or
push
cmp
sub
idivb
fwait
xchg
push
mov
xchg
bound
cmpsl
mov
and
loop
xlat
mov
in
cmc
adc
movsb
push
mov
mov
push
dec
pop
stos
mov
out
adcl
sub
negb
push
in
xchg
fiadds
xlat
xor
imul
or
xchg
push
sbb
stos
nop
stc
data16
add
inc
add
xchg
cmc
stos
add
and
mov
xchg
mov
pop
mov
and
pop
std
inc
add
aad
insl
mov
std
jp
sub
sub
mov
pop
f2xm1
add
mov
insl
lahf
mov
daa
xchg
dec
test
cmp
daa
popa
xchg
shlb
push
test
dec
pop
sbb
pop
jl
push
sarb
gs
jl
lock
andb
pop
insb
cmc
jno
ss
imul
sbb
cmpsl
push
orl
xchg
fidivrl
and
aad
pop
cmp
push
cmp
roll
outsl
jle
ret
dec
mov
andl
or
inc
adc
dec
aas
sub
fs
push
mov
pop
cmp
test
mov
xchg
ss
add
push
pop
cmp
pop
xor
aad
inc
daa
ss
call
sbbl
pop
jae
scas
int3
test
cmp
add
jno
pusha
inc
push
xor
shrl
sbb
xlat
in
jno
pop
dec
fisubrl
repnz
mov
paddw
aam
in
andb
repz
adc
xchg
orb
mov
ret
pop
mov
out
mov
lret
jp
shr
mov
testb
sub
sbb
mov
mov
ljmp
fiadds
aaa
pop
rcl
xchg
subb
mov
in
xchg
xor
je
out
sub
cld
test
dec
sbb
inc
cmp
aaa
and
mov
push
mov
imulb
repz
push
jbe
push
sahf
and
jo
mov
cmp
icebp
das
js
cmp
divb
xchg
inc
cmpsl
jg
mov
data16
mov
pop
outsb
jae
ss
sarb
out
mov
js
ret
and
jnp
dec
pusha
movsl
cli
cmp
adc
adc
mov
ljmp
shrl
mov
xchg
xchg
roll
dec
repz
in
iret
sahf
pop
jle
or
lods
dec
dec
ja
cmp
adc
shll
and
dec
lods
pop
divl
mov
add
in
pusha
sbb
mov
pop
dec
mov
lods
nop
ffree
push
cld
add
mov
jl
adcl
inc
stos
cmp
aaa
enter
add
fadds
push
dec
pop
sub
fadd
inc
pop
fs
sbb
rcll
nop
cmp
cli
cmp
inc
rol
loop
inc
sbb
add
std
and
sbb
pop
cld
push
hlt
mov
mov
pushf
out
loope
mov
mov
cwtl
into
xchg
cltd
mov
mov
sub
pop
add
imul
fwait
mov
pop
lret
pop
enter
mov
shll
push
nop
popa
cli
dec
or
xchg
dec
lods
xor
insb
gs
jmp
les
je
or
test
cltd
inc
stos
ret
lahf
cmpsb
inc
dec
mov
and
daa
sar
sub
xor
call
je
outsl
mov
add
outsb
push
mov
jg
mov
lock
out
mov
mov
scas
aaa
aad
call
xchg
subps
pop
pop
mov
mov
fcomps
lret
stos
xor
jo
mov
lahf
cltd
xchg
popa
popf
xchg
aaa
call
out
xor
sub
lcall
push
cmp
fldcw
mov
sub
jbe
dec
loopne
into
jne
fistl
mov
pop
pop
div
pushf
mov
dec
js
mov
mov
xchg
xor
dec
fsts
jbe
rcll
lcall
pop
inc
lods
lret
xor
pop
xor
and
mov
adc
adc
orl
popa
fdivrs
jno
aam
lret
mov
insb
xchg
sub
mov
andl
jno
push
inc
cmp
in
ficompl
ja
or
mov
imul
add
fstpt
xor
fisttpl
loopne
xchg
push
maskmovq
mull
ja
xchg
pop
xlat
add
outsb
sbb
gs
mov
mov
insb
hlt
movsl
push
in
push
cmp
shrl
inc
cmpsl
std
push
mov
rorb
fsts
je
sub
pop
adc
fbld
jmp
notb
xchg
ljmp
pushf
pop
jle
lock
mov
xchg
add
xor
leave
cmpsl
out
cmp
sbb
xchg
outsl
leave
in
repnz
int
mov
or
pop
cmpsl
ret
jmp
fwait
sahf
inc
lret
inc
xchg
movsb
clc
idiv
xor
popf
mov
inc
call
xchg
xchg
and
push
inc
aas
in
jecxz
insl
loop
jmp
adc
lods
inc
cmp
mov
cltd
dec
adc
addr16
out
or
push
mov
cmpl
andb
clc
adc
add
repnz
sub
xor
mov
mov
lcall
inc
cmp
int
mov
jle
mov
push
add
ret
xor
jbe
and
inc
pop
push
push
popf
adc
daa
push
lods
lods
std
pushf
add
and
xchg
es
inc
fcmovnu
dec
lods
aaa
test
lret
loope
pop
pusha
clc
sbb
xor
cmp
adc
out
cwtl
shlb
ds
jno
inc
jp
dec
out
mov
mov
add
call
lcall
xor
mov
inc
test
dec
mov
mov
iret
pushf
jl
test
mov
subw
les
ss
cmp
les
xor
mov
xchg
movsb
ds
jmp
jmp
add
cmp
insl
inc
jl
test
jo
push
inc
xchg
mov
push
lahf
pop
add
push
or
jecxz
cmp
mov
add
sub
outsl
pop
shl
bound
push
pop
data16
enter
mov
mov
xor
mov
adc
mov
jns
js
sub
jnp
int3
xchg
cmpsb
cmp
jmp
sbb
in
repz
daa
mov
cmc
inc
test
sbb
decl
cmpsl
xchg
ljmp
xor
ror
out
in
out
pmaxsw
fucom
push
cld
cwtl
mov
outsl
fsubs
sbb
pop
add
sbb
out
fnstcw
mov
fnstsw
pushf
add
roll
call
jns
ret
mov
xchg
divl
jecxz
sub
jl
ljmp
jl
jb
mov
lods
push
adc
adcl
jge
xchg
js
lret
dec
leave
ljmp
inc
repz
pop
sbb
and
dec
insb
add
mov
js
xor
sub
mov
mov
outsb
repnz
add
cmc
cmc
imul
jns
adc
pop
aad
stc
cwtl
adc
mov
stc
add
pop
out
pop
repnz
sbb
je
notb
jle
aad
bound
cwtl
dec
push
lret
mov
mov
xor
rolb
adc
repnz
mov
in
adc
add
xchg
mov
movsb
and
mov
mov
lds
divb
jno
mov
ss
xchg
js
inc
push
pop
add
push
cmp
loope
test
ret
push
cwtl
pop
ljmp
shll
mov
xchg
pop
adc
cmp
fdivs
lahf
std
lods
ljmp
add
int3
pop
pop
iret
xchg
cmp
push
xor
stos
mov
orl
out
out
adcl
ror
testb
push
test
adcl
jp
adc
shrb
inc
xchg
mov
cli
popf
pop
jns
test
xchg
or
in
sbb
inc
inc
das
orl
mov
jae
lods
jbe
outsl
sbb
cli
pushf
loope
jecxz
cmpsb
outsb
rclb
jnp
xor
jecxz
popf
ja
sub
dec
jo
movsb
mov
pop
or
sbb
gs
pop
rclb
adc
jo
xchg
aaa
dec
adc
outsl
mov
push
dec
push
xchg
cs
in
xchg
orl
cmp
pop
adc
fistl
and
mov
mov
leave
cmpsl
out
sbb
jnp
xchg
jp
sbb
jno
imul
ficompl
ds
dec
adc
fimull
inc
aaa
lods
es
clc
sbb
jnp
mov
mov
arpl
rolb
cmp
into
xchg
xor
add
add
mov
sahf
push
aad
in
jnp
dec
mov
jne
mov
rol
push
jmp
movsb
icebp
mov
in
add
addr16
push
lret
orl
mov
mov
movsb
cmp
out
ret
xchg
inc
shrl
or
pop
fcoml
aad
mov
nop
inc
push
sub
push
cld
fmull
sub
or
out
popa
pop
loope
jp
mov
mov
pushw
adc
and
jno
ret
sub
and
add
and
sub
inc
xchg
push
adc
and
cs
inc
jmp
pop
xchg
pop
push
jnp
outsb
scas
push
ljmp
push
pop
mov
mov
adc
sbb
arpl
fdivrp
mov
popf
xor
call
repz
lods
xchg
dec
sub
sarl
ds
rcrl
testl
leave
inc
out
les
dec
push
dec
xor
xorb
fidivrl
xchg
les
mov
xorb
aaa
pop
shlw
inc
pop
pop
inc
fbstp
dec
xor
jnp
and
pushf
cmp
jo
pop
outsl
xor
pop
movsl
pop
test
cmp
sti
out
loop
sbb
cmp
jne
dec
xlat
jmp
lea
scas
mov
lret
xchg
inc
or
sub
mov
jle
mov
jmp
loope
mov
imul
lds
mov
inc
outsl
stos
rorl
in
push
int
mov
ljmp
js
inc
test
push
dec
mov
rcrl
loop
out
or
sahf
sub
lcall
cs
sbb
test
lret
xor
dec
lret
and
cmp
pop
dec
and
add
clc
fistpll
pop
fisubs
add
stc
test
push
push
push
cmp
cld
fwait
jne
test
enter
or
inc
fs
aas
inc
lret
mov
push
sub
sbb
push
fdivrl
pop
pushf
cli
sbb
sbb
pop
inc
stc
js
test
ljmp
rorb
lds
test
out
pushf
std
imul
mov
cli
mov
push
jp
dec
mov
or
xor
ret
dec
inc
cs
or
jno
mov
cmp
sub
xchg
das
cli
ret
popf
femms
imul
cmp
lock
loop
out
insl
push
fs
mov
ret
adc
xchg
add
scas
and
push
xor
repnz
ljmp
sahf
xor
inc
add
push
insb
jle
adcl
cmc
les
je
fcmovne
insb
out
xor
adc
sahf
push
fdivr
incl
ja
rclb
or
xchg
out
pusha
movntq
mov
sub
call
into
push
push
fucom
inc
and
pop
add
out
xchg
shrd
mov
add
addr16
aaa
ljmp
fiadds
cmp
stos
out
test
or
scas
insb
inc
sti
fs
jo
mov
dec
lea
call
rolb
mov
dec
xor
and
xor
fwait
test
push
jnp
mov
push
adc
sahf
push
cmp
ljmp
mov
pop
pop
test
cmp
popa
xchg
mov
jae
add
xor
enter
sarb
sbb
lds
out
pop
xchg
mov
hlt
xor
cmpb
sub
push
ja
ds
sar
aam
or
in
inc
aas
out
cs
cmp
loope
fcoml
imul
lock
pop
clc
mov
das
stos
xor
and
sbb
cs
xchg
adcb
jno
and
lock
cmc
xor
scas
repnz
and
xor
fstpt
sbb
out
lcall
or
dec
popa
arpl
dec
jae
fwait
mov
xor
push
mov
pop
mov
sub
lahf
sbb
xlat
pop
xor
or
js
cmp
sahf
jnp
movb
mov
call
sti
and
adc
jno
pop
xorb
push
jmp
push
hlt
out
sbb
mov
push
repnz
jns
adcl
cld
cmpsl
lods
push
jl
shrl
fwait
movsb
stos
mov
xlat
outsb
push
shlb
aaa
add
scas
xchg
xor
rorb
lock
sar
shll
ja
cmpsb
ret
xchg
stc
adc
aad
cmp
jb
adc
push
fucomp
leave
mov
jl
pop
icebp
sbb
das
stc
lock
loope
and
xchg
adc
xor
scas
pusha
adc
inc
int3
daa
fisttpl
xlat
mov
insl
push
in
pushf
push
js
lea
mov
repz
pop
ljmp
test
push
leave
out
mov
dec
cltd
xchg
repz
dec
jnp
xchg
push
lahf
inc
sub
cs
xchg
pop
xor
cmp
sbb
inc
adc
sarb
in
dec
cmpsb
shrl
test
lret
or
add
mov
sbb
int
bound
add
movsb
mov
test
push
in
fbstp
jo
and
add
leave
or
les
cmpl
mov
mov
fsubl
xor
mov
fisttps
es
push
lea
arpl
lahf
mov
je
fbstp
flds
mov
test
push
test
ljmp
in
mov
loop
xchg
sub
cld
xor
jg
xlat
push
in
mov
sbb
adc
and
aad
aaa
jecxz
lret
add
cmpsl
loopne
xor
xor
sbb
push
gs
cli
rcl
xchg
push
and
cmc
cltd
jne
xchg
fldl
mov
lret
xchg
fwait
jns
adc
jno
mov
jne
jmp
mov
xor
fwait
in
dec
lea
ljmp
leave
and
mov
nop
cli
fistps
test
mov
add
push
or
test
ret
xchg
js
xlat
sub
inc
mov
cmpl
xor
rolb
subl
out
outsb
mov
dec
jne
stos
add
xchg
aas
adc
adc
sbb
xchg
scas
sarl
lock
cwtl
js
add
pushf
clc
ds
sti
iret
jl
jae
lcall
cmc
and
mov
aam
int3
lock
test
addr16
into
sahf
daa
clc
icebp
mov
adc
xchg
pop
pop
jnp
adc
mov
aam
orb
push
inc
idiv
dec
sarb
jle
stc
call
les
xlat
mov
pop
ficoml
daa
jp
es
imul
xorb
sub
add
mov
test
in
and
cmp
ret
sbb
cli
dec
xor
mov
cltd
rcl
out
xchg
sub
loope
jecxz
out
xor
push
pop
inc
jne
or
or
movsl
xor
add
adc
in
pop
sbb
cmc
out
testb
xor
outsb
pop
roll
int
punpckldq
mov
dec
cmp
sbb
mull
shll
fsts
dec
gs
scas
xchg
adc
xchg
inc
jae
pop
outsl
inc
pop
shr
jge
adc
gs
stc
mov
lds
xor
mov
in
data16
ja
into
mov
das
mov
popf
shrl
sub
sbb
ss
or
cmc
push
repz
movsb
iret
xchg
fmull
jmp
mov
dec
out
jp
enter
les
xor
repz
push
pusha
jl
xchg
jl
enter
ret
cmp
movsb
push
aad
aaa
jae
dec
test
push
bnd
rcl
xor
inc
fcmovu
cli
test
or
test
push
int
push
lcall
lcall
xchg
fs
js
ja
mov
xchg
push
lret
bound
and
or
icebp
cmpsl
jp
movsl
shll
cwtl
cli
ret
mov
jecxz
xor
pusha
mov
jle
outsb
push
jge
inc
xchg
aaa
add
pop
mov
jmp
loopne
addb
and
sbb
push
sub
insw
adc
mov
repnz
sbb
push
dec
xchg
lods
loopne
out
jnp
dec
frstor
in
mov
add
sub
lock
movsl
cld
xor
outsb
ljmp
push
stos
sbb
movsl
jle
inc
lods
adc
inc
and
test
es
mov
js
in
iret
rorl
rol
shll
rcll
inc
sahf
andb
adc
fbld
xor
jge
cmpsb
mov
call
dec
out
push
bound
daa
push
or
lret
mov
jnp
shlb
push
sbb
mov
outsl
pop
jmp
pop
test
xchg
pop
test
or
or
pop
mov
sbb
mov
jo
cltd
lret
push
imul
xor
mov
and
adc
in
push
bound
sbb
mov
arpl
gs
je
inc
and
imulb
adc
lret
cmp
mov
fsts
pusha
adc
add
movsb
outsl
and
xchg
lea
stos
clc
and
scas
pop
ja
adc
in
xchg
rcll
adc
out
xor
bound
jmp
sub
push
mov
leave
aam
ljmp
inc
lds
ret
pop
jp
lcall
xor
sub
daa
imul
mov
jae
pusha
inc
insl
fcoms
test
xchg
cmp
pop
or
cmp
sub
sub
out
into
stos
rcl
fisubrs
sbb
es
fwait
push
test
cmp
inc
pop
loop
jae
cmp
push
mov
and
jge
iret
jbe
inc
and
in
aad
scas
imul
or
idivb
jne
cld
mov
pop
dec
lea
outsb
imul
iret
or
cs
dec
roll
dec
fsubs
in
neg
pop
mov
and
ret
cmp
mov
jae
stos
cmp
sbb
mov
jns
xor
and
sbb
sbb
pop
or
and
mov
pop
dec
enter
mul
jecxz
hlt
aad
cltd
gs
movsb
inc
scas
aad
nop
and
lahf
mov
mov
mov
mov
shll
mov
imul
pop
clc
lods
mov
mov
ss
ss
cwtl
sub
fisubrs
mov
mov
mov
mov
aam
xchg
jge
inc
jmp
pop
add
sub
loopne
add
xchg
mov
fmul
adc
fldln2
ds
mov
std
daa
xor
jp
inc
scas
popf
and
jo
push
int3
into
stos
mov
je
adc
mov
std
outsl
cmp
sbb
je
cmc
ret
push
sbb
test
mov
cli
cmc
psadbw
mov
inc
pop
mov
fiadds
add
and
push
adcb
mov
cmp
mov
sahf
push
imulb
jo
mov
jb
inc
pop
push
sub
jae
pop
mov
scas
insl
fs
push
and
mov
fistl
lcall
lea
pushl
xor
mov
xchg
push
dec
int
mov
js
addl
sub
inc
xchg
sarl
outsl
push
jb
leave
enter
lea
into
cmpsb
fldl
in
aad
cmpsb
jp
lods
scas
cmp
xor
fstl
mov
push
push
repz
sbb
movsb
xchg
in
out
fwait
rorb
and
out
cmp
shl
movsb
push
subb
in
popf
scas
ret
outsl
cli
and
loop
sbbl
icebp
pop
dec
cltd
xchg
sub
xchg
test
fsubrs
stos
iret
or
lock
xchg
push
push
sbb
mov
pop
push
int
mov
repnz
push
cli
faddl
jb
xchg
in
popf
inc
or
in
shlb
out
jecxz
lcall
test
and
xchg
ja
xor
mov
sub
test
sahf
popf
mov
push
xor
sub
fnstcw
mov
xchg
xchg
notb
sbb
cmpsb
sbb
jbe
loope
mov
dec
imul
mov
push
mov
stos
jae
pop
inc
mov
pop
mov
inc
divl
dec
dec
mov
inc
mov
inc
jmp
push
cs
and
inc
stos
cmp
movsl
cld
loopne
push
adc
fcmovnb
cwtl
push
sbb
pop
mov
pop
dec
stos
cmpb
fucomi
jl
xor
addl
dec
in
cmc
neg
out
mov
inc
lods
sarl
mov
arpl
bound
jle
sub
insl
cmp
int
sub
sbbl
rorb
std
jge
scas
cmp
popw
cmc
aas
dec
or
or
rorb
add
xchg
ljmp
stos
xor
mov
inc
push
dec
mov
repz
mov
lds
js
pop
popf
inc
mov
std
mov
sbb
scas
hlt
ljmp
jo
insb
scas
mov
adc
arpl
stos
das
inc
inc
mov
and
test
sub
pop
push
dec
mov
jbe
lea
inc
cmpsl
addr16
mov
mov
pusha
je
and
cwtl
fisttps
cld
clc
lea
loop
ret
pushf
mov
xchg
es
lds
daa
aad
pop
jle
scas
mov
ljmp
hlt
arpl
add
addr16
xchg
mov
loopnew
and
arpl
push
adc
mov
sbb
das
xlat
fiaddl
rcl
add
insl
cmc
daa
fcmovu
cmp
push
mov
idivl
push
push
xor
mov
and
enter
push
xchg
push
pop
data16
pop
mov
repz
xchg
fiadds
push
mov
mov
add
jmp
sbb
dec
push
xchg
push
sbb
lods
jno
xchg
aad
push
inc
mov
orb
or
call
dec
cmp
or
lods
stc
adc
mov
jb
orl
inc
mov
push
adc
cmp
pop
inc
pop
insl
cmp
mov
add
ss
popa
in
lods
mov
ljmp
ds
arpl
mov
insl
mov
test
ret
pusha
lcall
cmpsl
jnp
and
cmp
or
addr16
add
jne
adc
pop
jecxz
or
dec
test
xor
and
mov
fildll
data16
fwait
add
or
xchg
jno
xchg
dec
rclb
xor
ffree
sub
int3
mov
std
jp
icebp
push
jae
sub
adc
cmp
dec
and
cmp
push
jge
xchg
push
ficomps
iret
sahf
aaa
and
adc
and
sbb
sub
daa
mov
mov
fs
sub
pop
adc
sub
fisttps
push
scas
push
out
test
call
es
shlb
push
pop
call
pop
adc
xchg
scas
sbb
pop
mov
cmpsb
stc
sti
xor
hlt
stos
jns
clc
mov
je,pt
push
jns
dec
mov
add
in
data16
cmpsb
inc
loope
stos
mov
push
dec
aam
fists
xor
outsl
push
negl
sbb
push
push
sub
out
push
test
xchg
adcb
sub
mov
sahf
pop
loop
cmpsb
mov
data16
pop
inc
ja
imul
inc
adc
jecxz
cmp
push
fstpl
clc
test
pop
hlt
mov
adc
pushf
mov
divb
jae
mov
pop
iret
arpl
cltd
mov
and
iret
pusha
adc
mov
mov
xchg
cmp
and
clc
movsl
pushf
fsubp
fiaddl
or
adc
lea
pop
xchg
mov
xchg
push
xchg
dec
loopne
setbe
adc
mov
cwtl
adc
iret
fdivr
push
and
mov
and
pop
orl
aam
loope
popf
mov
pop
nop
int
jns
jbe
fadds
or
xor
leave
cmc
imul
lea
mov
jo
mull
push
jmp
pop
push
jb
iret
addb
mov
fucomip
adc
add
push
xchg
mov
sub
data16
adc
ret
jge
xchg
outsb
das
push
push
xchg
inc
push
or
mov
insb
cs
push
fs
xchg
popa
lods
lret
aam
add
cmpsl
mov
or
dec
idivl
sbb
push
push
cli
cs
mov
pop
jbe
jecxz
jne
fistpl
leave
jmp
cmp
push
mov
pop
and
lods
loopne
lea
fadds
jecxz
push
dec
adc
lds
nop
cmpsb
mov
inc
pop
lods
dec
aaa
loope
sbb
xor
ss
mov
xor
cmp
xrelease
xchg
inc
roll
adcb
into
mov
xor
pusha
mov
xchg
jno
xchg
add
mov
jmp
mov
scas
fistl
aam
jb
push
out
push
mov
and
ja
mov
dec
pop
pop
or
inc
inc
dec
shrl
test
jecxz
jg
xlat
xor
and
cltd
rcrl
xchg
push
push
mov
mov
or
jno
in
mov
sub
sub
aaa
pop
aam
mov
cmc
add
movsb
insl
imul
xchg
jl
sub
nop
or
mov
addb
js
mov
cmpsl
and
in
jb
faddl
cmpsl
int
add
js
scas
cld
lret
lea
mov
or
sbb
enter
sub
in
jge
xchg
mov
mov
adcb
out
int3
dec
dec
popf
dec
ss
pop
xchg
loop
sub
lret
push
cmpsb
mov
arpl
repnz
subb
loop
push
add
or
fs
data16
mov
sbb
push
scas
adc
or
xchg
lods
data16
inc
mulb
inc
testl
das
mov
mov
mov
sbb
scas
mov
lods
hlt
push
shrb
xchg
inc
and
and
jns
gs
mov
movsb
mov
sub
fisubl
mov
outsb
aam
adc
lea
shll
lods
add
jl
jnp
mov
adc
dec
in
dec
xchg
xchg
je
jo
out
ss
xor
hlt
xlat
fucomp
test
pushf
adc
fisttpl
pop
imul
mov
mov
sbb
sahf
movsb
nop
xchg
jl
xor
int
mov
mov
insl
xor
cmpsb
cmp
shlb
in
dec
sub
jae
loop
fmul
pop
add
inc
mov
push
ret
push
cmp
jns
and
pop
test
int
dec
cmc
rcll
push
xchg
adc
pop
mov
dec
cmp
lret
or
xchg
push
mov
or
push
jae
imul
jne
cmp
jmp
fld
and
add
daa
xor
in
cmp
xor
jo
push
mov
mov
add
adc
jge
nop
js
cmp
jo
adc
jno
cmc
movsb
scas
xor
lock
ljmp
iret
pop
aaa
push
ss
iret
push
test
inc
sbb
and
in
je
in
sbb
push
cld
stos
mov
jle
stos
movsl
inc
aas
or
mov
mov
xchg
cmp
push
std
pop
lods
dec
sub
ljmp
jecxz
jnp
sti
mov
push
call
cmp
pop
mov
xchg
push
nop
mov
mov
mov
jnp
aas
push
mov
lea
sub
dec
jle,pt
lahf
loopne
sbb
push
or
not
add
ds
outsb
in
dec
stc
xor
stc
and
push
das
xor
push
xchg
nop
and
xchg
in
push
mov
inc
pop
aas
sbb
stos
pusha
add
jbe
stos
inc
icebp
add
loop
mov
add
mov
or
sub
loope
das
mov
test
adc
cmc
mov
mov
lods
cmp
and
test
lock
hlt
cld
or
jnp
das
inc
pop
xor
xor
xchg
cmp
fninit
fsubrl
test
scas
inc
sub
cmpsb
mov
mov
mov
dec
imul
mov
ror
dec
inc
push
add
insb
loope
and
mov
fdivl
xor
les
sub
mov
sub
test
int3
add
xor
mov
mov
test
adc
add
mov
mov
jle
push
pushf
mov
cmp
outsb
roll
add
cmp
pusha
dec
lock
xchg
inc
lahf
out
ss
les
inc
jae
out
aas
jne
test
fstpt
inc
icebp
inc
mov
add
jb
es
aaa
pushf
sti
dec
faddl
pop
jne
clc
sahf
dec
xchg
daa
cli
nop
stos
in
pop
cs
or
push
insl
jb
push
add
adc
jp
iret
cld
sbb
imul
mov
dec
ret
inc
sub
dec
sbb
pusha
mov
dec
mov
jmp
rcr
push
fs
mov
inc
fnstenv
arpl
pop
outsl
in
dec
clc
xor
jnp
jb
test
movsb
notb
pop
pop
push
pop
repz
pop
mov
jmp
adc
arpl
test
pop
icebp
call
pop
inc
inc
pop
hlt
daa
rep
ret
sbb
jmp
arpl
fdivs
and
and
and
dec
hlt
insl
mov
sbb
jp
in
pop
sbb
daa
rol
sub
clc
sub
int
sbb
or
ljmp
movsb
ss
mov
jge
add
inc
xchg
adc
jl
aas
adc
cmpl
sahf
addr16
xchg
pop
jnp
mov
xchg
push
lock
or
or
push
fbstp
sub
adc
call
inc
jg
cs
lods
xchg
es
mov
pop
in
push
lret
outsb
jo
fsubl
dec
scas
insl
lahf
das
cmp
push
push
rcrb
stc
jle
adc
mov
and
fdivrl
adc
iret
mov
jbe
das
mov
mov
push
stos
and
mov
mov
aas
mov
sub
and
insb
stos
push
or
movsl
fsin
push
sbb
mov
fcom
mov
sbb
cld
pop
sbb
jb
sub
fsubrl
arpl
sbb
pusha
push
and
pop
lods
xchg
cmc
out
and
pop
and
test
pop
dec
and
aam
in
sub
pop
stc
loop
push
and
pop
std
cld
sub
test
mov
jnp
mov
adc
addr16
or
ss
jbe
adc
imul
loop
xchg
es
jno
pushfw
push
negb
and
jne
xor
xchg
cmp
push
outsl
arpl
or
jb
or
xchg
cmc
jg
inc
rcr
ret
jg
clc
lcall
inc
mov
or
mov
cmpsl
fstpl
cmp
cs
movsl
inc
push
jp
dec
popf
pop
pop
dec
and
cmpb
testl
rcrl
mov
sahf
sub
leave
and
ljmp
movsl
xor
call
cld
ror
cmpl
lods
mov
dec
pop
insb
enter
hlt
push
xlat
popf
roll
xor
jle
sub
add
mov
or
or
subb
and
jg
mov
fsubs
aas
cli
test
rcrl
inc
test
stos
xor
test
iret
xorb
out
push
jns
or
bound
mov
adc
and
jle
divl
mov
test
gs
insb
cwtl
mov
push
fsubrp
inc
das
mov
outsl
mov
sub
mov
daa
jp
cmp
push
imul
jmp
test
and
mov
fisttpl
scas
rcll
xchg
jb
push
mov
fs
push
sbb
cld
arpl
leave
cltd
daa
inc
inc
scas
std
jne
rorl
mov
xor
out
mov
js
jne
movsb
xchg
aaa
movsl
stc
push
lds
aaa
cmpsl
add
std
js
inc
idivb
mov
and
movsl
or
cmpsb
sub
mov
loopne
push
and
bound
scas
pusha
movsl
cli
xor
pusha
jmp
icebp
pop
out
call
cmc
into
jae
lea
sub
fwait
xor
push
mov
scas
cmp
pop
cmp
aas
dec
lods
je
out
nop
and
mov
jmp
in
bound
xchg
scas
mov
std
sbb
popf
int
mov
out
cmp
movsb
int
cs
sbb
push
in
loope
cmpsb
stc
ja
cli
xchg
jle
push
jg
inc
ja
divl
sbb
xor
imull
inc
lock
outsb
add
shlb
dec
aas
mov
outsb
sbb
jl
fs
push
add
cmpsb
das
mov
jb
cmp
cmp
pop
mov
insb
out
imul
mov
mov
push
fildl
jmp
insl
mov
or
dec
dec
leave
jmp
icebp
and
fcoml
pop
jns
rorl
stos
mov
or
push
fdivrl
pop
adc
dec
adc
lcall
cmp
cmpsl
lret
fcomps
and
into
mov
loopne
pop
punpcklwd
dec
lahf
lahf
pop
xchg
in
adc
mull
inc
ficomps
push
cmp
adc
mov
lret
jmp
push
cmp
ds
pusha
lcall
pop
imul
pop
insl
faddl
inc
shlb
add
sbb
shll
movsb
add
shlb
insl
xchg
loope
imul
add
std
leave
or
fsubrs
mov
push
icebp
mov
adc
mov
aam
jae
dec
pop
pop
sub
mov
incb
lds
mov
inc
mov
nop
daa
icebp
rorb
mov
int3
out
cmpsl
or
jb
jne
pop
mov
shrb
mov
pop
pusha
faddl
mov
cmpsl
add
xchg
mov
repz
add
mov
mov
repz
push
repnz
sbb
xchg
nop
sbb
xor
popa
push
cltd
aas
pop
rorl
subb
iret
cwtl
push
inc
stos
pop
sub
cmpsl
adc
or
sub
and
sub
cli
movsl
jp
add
decl
int
icebp
adc
imul
je
or
notb
lock
int3
jl
mov
sti
lods
mov
jecxz
ss
aam
pop
sahf
je
lcall
insb
sub
mov
dec
mov
cltd
add
outsl
je
pop
sarl
popa
adc
aaa
pushf
mov
pop
out
aas
sub
je
pop
out
lods
adc
and
push
xor
mov
xor
std
pop
xchg
mov
xor
push
adc
or
loope
xchg
push
imul
inc
sub
push
pushf
and
sbb
mov
loopne
jle
jnp
pop
out
add
int3
imul
dec
mov
cld
cmpsl
imul
inc
incb
xchg
aam
dec
fmul
lret
pop
xchg
bswap
xor
and
fsubs
hlt
sub
scas
fs
push
cmp
xor
repnz
inc
stc
call
xor
jae
movsl
sarl
lock
shlb
mov
jg,pt
int3
int3
push
ss
test
insl
mov
in
into
push
aad
stos
orl
adc
enter
or
mov
in
sub
int
or
add
inc
jne
mulb
sahf
jo
jns
mov
loope
xchg
cmp
testl
jmp
ret
loope
mov
cmpsb
mov
or
jecxz
into
movsl
mov
dec
adc
cli
dec
fcmovbe
inc
into
push
sbb
ffreep
call
daa
mov
lods
push
or
or
repnz
inc
lahf
ret
arpl
leave
insb
test
or
inc
xorb
pusha
mull
adc
cltd
pop
add
gs
adc
and
or
lods
jbe
dec
pop
mov
add
andb
mov
jno
mov
cmpsb
add
mov
in
mov
push
dec
mov
dec
aas
xchg
mov
mov
push
jb
orl
cmpsl
mov
repz
xor
lods
inc
daa
ss
mov
test
sbb
fs
cltd
adc
push
and
mov
testl
js
push
lahf
mov
or
sti
mov
in
dec
enter
cmp
xor
out
mov
cs
repz
lods
aam
xor
std
dec
dec
jmp
pop
ror
imul
rcrb
lods
jns
nop
leave
sarb
nop
push
test
call
sub
cmp
pop
stos
clc
movsb
mov
jno
dec
xchg
xchg
inc
scas
add
mov
aaa
outsl
aas
mov
in
stos
push
pop
ja
push
push
mov
add
lcall
pop
sub
fisubl
in
repz
bound
inc
lret
adc
push
rorl
adc
jmp
sbb
xchg
or
inc
push
add
mov
fmulp
add
and
mov
pop
pop
ljmp
push
cmpl
lea
in
das
std
adc
xchg
stos
fnstenv
mov
fsubrp
dec
xchg
mov
fnsave
cmc
lret
jne
sahf
jne
out
cmp
xchg
nop
int
push
hlt
mov
sub
add
jbe
adc
ds
ds
sti
mov
push
cmp
ja
js
push
add
insl
loopne
ljmp
das
sbb
add
cmp
sbb
mov
in
mov
popa
mov
jb
lret
test
or
or
loope
xchg
or
cwtl
dec
pop
xchg
sbb
out
xor
in
sbbl
mov
mov
fcmovne
aas
jne
dec
mov
ja
imul
push
pop
scas
sbbl
pop
push
lahf
shll
mov
in
imul
sub
and
and
sub
loop
push
push
std
xorl
sbb
je
lods
inc
inc
rcrb
push
jbe
iret
push
push
mov
xor
inc
in
imul
imul
mov
scas
mov
pusha
pop
repz
jecxz
popf
pop
mov
lret
leave
sub
dec
adc
sahf
subb
lret
mov
or
idivb
out
andl
add
daa
fidivrl
dec
inc
nop
sbbl
push
xor
aas
dec
add
push
xchg
push
pop
inc
mov
dec
push
cmpsb
out
inc
push
test
stc
cmp
pop
mov
inc
push
xchg
test
cmp
scas
inc
dec
jo
out
es
and
scas
jmp
mov
jge
fsubs
movsl
push
inc
ss
icebp
sbbb
push
in
imul
dec
push
stc
cmp
jnp
mov
mov
and
add
mov
cmp
popf
jnp
jae
into
xchg
jmp
xchg
inc
mov
psubsb
shll
mov
inc
pushf
negl
push
pop
rsm
sbb
sti
jbe
insl
testl
push
mov
inc
or
mov
lret
fiaddl
and
in
cmpsb
cmp
fstpt
ss
mov
out
setnp
dec
xchg
pop
aad
stos
pop
push
hlt
xchg
mov
mov
je
mov
mov
cltd
mov
mov
pop
cli
into
push
rcr
out
jp
mov
loope
adc
xor
in
push
movsl
push
inc
ficoml
and
push
dec
cltd
sbb
paddw
and
pop
adc
pop
pushf
loope
xor
cld
faddl
cltd
ljmp
add
loop
dec
adc
push
std
xchg
iret
add
mov
push
mov
insl
xor
cmp
sub
stos
lcall
push
sub
push
pushaw
fcmovne
lcall
stos
faddl
cmpsl
out
jnp
cwtl
mov
add
xlat
add
push
lcall
xchg
lds
mov
xlat
out
cwtl
or
scas
cmp
sbb
pop
add
aad
cmpsl
insl
les
lcall
cwtl
repnz
sub
add
mov
in
mov
xchg
cmp
xor
pop
mov
stos
adc
rcrl
dec
xor
push
add
inc
out
outsb
jnp
lock
push
mov
lret
sub
pushf
push
inc
stc
mov
xor
push
pop
push
stos
jnp
movsb
js
mov
dec
jl
add
out
cmp
fmuls
jp
adc
jmp
lcall
sbb
jo
sbb
imul
push
pop
cmp
pushf
sub
dec
cli
es
sbb
xor
xchg
loopne
cmc
insl
dec
jnp
ret
add
inc
dec
dec
mov
sbbb
mov
jp
pop
ret
repz
test
adc
jl
and
xchg
les
mov
xor
jle
push
lcall
hlt
sub
fsubs
cmp
test
je
je
lcall
push
jmp
sbb
insl
mov
adc
push
push
ljmp
jge
add
fsubrl
mov
data16
xchg
mov
adc
mov
fmull
push
pusha
call
insb
and
fisubrs
ds
jnp
pop
push
mov
push
mov
mov
ret
push
xchg
divl
inc
mov
iret
sub
nop
inc
cmpsl
out
jnp
jmp
and
jg
pop
je,pn
mov
jo
pop
jecxz
insl
repnz
fs
jns
call
jecxz
les
sub
cmp
shll
cwtl
add
or
mov
incb
mov
mov
les
popf
out
daa
xchg
cmpl
xorl
cltd
testl
mov
add
ror
xchg
data16
mov
cmp
adc
sub
sub
in
ja
cltd
and
fidivl
pop
out
push
fcom
pop
mov
loope
cmc
subl
inc
add
imul
add
push
jns
or
shll
add
out
call
add
or
push
lds
cmp
push
xchg
sbb
cmpsl
les
imul
inc
je
rolb
jle
dec
add
cli
adc
jle
push
xchg
shr
scas
addl
cmp
cs
push
dec
sbb
sub
popa
mov
mov
adc
test
filds
cmpsl
jnp
pop
pop
inc
lret
jp
clc
push
insb
lcall
push
inc
testl
add
sbb
inc
sub
shrl
stc
jge
cmp
leave
mov
push
sti
stc
daa
mov
inc
cmp
sahf
mov
std
mov
shlb
insl
lock
sub
xchg
mov
imul
js
lret
ret
in
scas
call
sbb
lcall
sub
sub
jge
repz
out
sub
sarl
jg
push
and
ljmp
xchg
test
lcall
shlb
or
jnp
add
cmp
xchg
dec
in
sarb
outsl
enter
pop
cli
shlb
xchg
out
lock
mov
ja
daa
addl
jne
and
inc
jne
lret
jl
out
out
aas
xorl
mov
notl
mov
scas
mov
fidivl
lret
aas
cmp
movsb
rcr
push
stc
sub
jmp
and
pop
pop
mov
adc
pop
mov
hlt
mov
addr16
imul
push
rcl
imul
icebp
lock
sub
mov
jne
popa
sysret
je
push
cmp
insb
stos
push
imulb
push
rcr
pop
roll
icebp
push
mov
push
lar
es
dec
inc
jbe
rorb
cmpsl
mov
jl
xor
movsl
bndldx
fwait
out
push
shr
lret
inc
jge
and
push
clc
lods
out
iret
loop
adcb
inc
cmp
imul
les
inc
mov
test
mov
imul
inc
inc
aaa
mov
push
test
and
pop
in
adc
js
xlat
dec
aad
cmp
inc
stc
dec
stos
pop
push
lods
cmp
out
ret
cmpsb
popf
mov
lock
js
or
pop
jnp
inc
sub
test
and
push
xor
pop
fxch
in
push
pop
mov
jnp
ds
sbb
xchg
in
insl
push
jb,pt
outsb
cmp
dec
int3
sahf
xor
push
mov
adcl
adc
in
sti
cmp
mov
pop
and
adc
fst
pop
daa
leave
sub
testl
lret
xor
clc
popa
push
subb
sbb
fdivs
repz
data16
icebp
stc
xor
ret
jg
divl
dec
mov
andb
test
mov
xchg
gs
andb
test
repz
les
sti
movsw
cmpsb
push
cmp
lock
sub
shlb
jmp
out
aad
hlt
inc
jmp
inc
cli
ficoms
mov
and
xlat
jae
jmp
xchg
mov
stos
add
mov
arpl
pop
test
stos
test
in
pop
ss
addr16
js
pop
and
adc
push
das
push
lods
cltd
into
mov
or
orb
lret
dec
leave
fs
or
insl
loope
addr16
push
lock
mov
loope
mov
adc
ret
xchg
popf
clc
popa
cs
mov
mov
lods
push
call
les
ficomps
clc
sbb
mov
jecxz
pop
out
adc
inc
int
aam
sub
movsb
sbb
loope
mov
nop
cmpsb
inc
dec
out
call
fsubp
out
fstl
push
jbe
dec
rol
aas
cmc
cmp
xchg
adc
roll
and
xchg
or
mov
or
movsb
subl
or
inc
mov
popf
sbb
out
punpckhwd
mov
clc
mov
or
pop
jbe
xor
les
sar
sub
add
pushf
cmpsl
mov
aam
jo
mov
dec
inc
iret
add
fiadds
sub
mov
cltd
mov
ror
aas
or
aas
movsl
pop
jb
push
outsl
jmp
lret
xchg
out
ss
je
cmp
fistps
add
dec
int3
pop
dec
add
lock
inc
test
leave
shl
flds
enter
aad
inc
imul
xchg
push
clc
mov
sbb
mov
jl
unpcklps
xchg
mov
sub
scas
jp
outsl
push
xor
ret
fcmovb
sub
loop
hlt
cmp
insl
cmpsl
cmp
add
inc
pop
mov
jl
push
add
ljmp
scas
fimull
popf
inc
adc
mov
stc
stos
inc
add
aad
mov
js
scas
imul
movsl
hlt
scas
iret
fs
sub
fs
adc
incl
add
lods
gs
jns
xchg
aas
mov
mov
dec
mov
dec
test
push
loopne
dec
or
lods
push
aaa
and
xchg
or
cmp
out
pop
jecxz
ret
cmc
sarl
or
je
outsb
pop
mov
cmp
lock
cmp
scas
int
push
sbb
cs
jg
gs
fst
xchg
pop
dec
ljmp
pusha
fldl
mov
push
sbb
je
or
aam
push
loop
and
mov
push
dec
mov
push
xchg
xchg
seto
inc
leave
mov
cwtl
scas
sti
icebp
adc
mov
loop
jge
loopne
lds
mov
popf
scas
cs
add
ja
sub
jmp
fdivrl
in
call
mov
imul
cwtl
das
fwait
sub
mov
popf
pop
stos
adc
aad
push
out
je
mov
imul
cmp
pushw
mov
test
add
or
call
push
mov
stc
push
mov
sbbb
mov
or
pushf
jle
pop
dec
jg
loopne
mov
movsl
mov
mov
loopne
adc
cmpsb
pusha
dec
pandn
pop
imulb
outsl
jbe
cmp
inc
arpl
push
dec
call
jns
and
add
rolb
fs
repnz
pusha
lret
repnz
xchg
inc
and
cltd
pusha
dec
sub
sbb
cmp
mov
sub
mov
dec
push
ljmp
pusha
out
int
jge
mov
push
sub
jp
push
xor
inc
ss
mov
jge
jbe
push
fstps
xchg
jmp
jbe
mov
and
in
push
loopne
cmp
mov
xorl
add
and
xchg
shll
cmp
or
add
push
inc
push
push
mov
out
push
sub
xor
xchg
jns
jae
pushf
pop
mov
or
in
into
mov
cmpl
aaa
scas
mov
gs
mov
lcall
cli
dec
lods
sub
nop
jno
push
jle
ja
adc
dec
xor
add
pop
in
push
lods
out
loop
fstps
jmp
aam
cltd
jae
mov
pop
jbe
and
lods
jne
pop
sbb
loope
or
test
mov
adc
xor
add
bound
inc
ficoml
mov
mov
out
jg
pop
cmp
mov
mov
push
movsl
cmpsb
cltd
and
sub
add
adc
xor
gs
sub
fstpl
and
call
test
sub
fmull
ds
decb
mov
mov
mov
pop
in
outsb
push
movsb
jmp
mov
out
inc
rol
dec
les
test
or
xor
ret
dec
fistl
adc
shlb
out
sahf
in
inc
in
jae
mov
mov
or
ds
jp
das
cmp
adc
mov
or
ret
mov
rclb
insb
xor
sarb
sub
add
or
xor
movaps
jmp
fs
sbb
sub
fiaddl
pop
sarl
jle
fsts
lea
inc
in
adc
out
call
jns
sbb
jge
sbb
add
or
outsb
inc
cmpsb
and
xchg
add
aaa
add
jo
push
ja
push
jg
sbb
std
mov
sbbb
xor
push
cmp
pop
repnz
xchg
adc
into
lret
je
in
ficoms
push
mov
jbe
or
xchg
mov
clc
and
sahf
jmp
jae
or
fwait
nop
stc
cwtl
adc
mov
inc
fcompl
add
mov
insb
popa
enter
push
pop
cli
repz
mov
mov
inc
call
test
aam
inc
aas
ss
lea
ret
cmp
popf
orl
cmc
mov
mov
jmp
fwait
das
xor
outsb
jb
inc
divb
bound
lods
mov
scas
mov
adc
ds
xor
nop
das
icebp
jns
aam
mov
sub
pop
mov
jle
negb
fbstp
popa
rclb
mov
adc
arpl
mov
lds
push
push
popf
sarw
add
add
dec
loope
xchg
mov
daa
or
sbb
cmp
jae
or
xlat
or
mov
jo
ja
bound
jnp
fcom
jmp
xor
rclb
test
out
cmp
mov
adc
cs
outsb
ds
dec
add
daa
xor
lods
clc
outsb
inc
gs
dec
rcrl
jge
lret
iret
scas
insb
jo
out
call
xchg
outsl
and
adc
jnp
les
mov
fwait
lods
pushf
mov
adc
mov
cmpsb
pop
mov
xor
ror
dec
dec
push
push
cmp
cld
xorl
imulb
addr16
jmp
call
pusha
pusha
mov
mov
jle
enter
rcrb
scas
cs
pop
push
xchg
mov
mov
mov
jl
adc
sbb
mov
dec
mov
mov
in
test
int
scas
cmp
cmp
sub
call
out
cmc
popa
inc
sahf
insb
pop
or
cli
push
adc
pop
xchg
bound
repnz
inc
cwtl
pushf
mov
mov
nop
sbb
iret
lcall
and
sbb
or
dec
xchg
sub
scas
cmp
inc
xchg
jge
clc
lret
jb
inc
mov
sub
fiaddl
test
nop
sbb
roll
nop
sar
xor
daa
cli
xor
jns
aaa
xchg
inc
gs
or
nop
enter
cwtl
jnp
sub
xchg
xor
andb
jbe,pn
mov
pusha
in
enter
xchg
jnp
xor
pushw
pop
les
push
test
mov
stos
in
adc
pop
jno
fimull
cmc
insb
cmp
mulb
les
mov
and
loope
fnstsw
push
pop
adc
outsl
mov
inc
pushf
es
enter
pop
out
inc
rcll
sti
fsubr
addr16
cmp
inc
rcrl
fwait
dec
inc
out
mov
mov
jno
pusha
into
lods
and
mov
test
mov
jp
mov
push
imul
mov
in
add
shll
fwait
insl
stos
push
and
xor
mov
stos
pop
pop
sbb
mov
push
inc
xor
pop
inc
push
add
rorl
xlat
cmpsb
sub
aaa
mov
push
xor
mov
pop
jle,pt
cmpl
dec
sbb
in
dec
push
mov
out
pop
xchg
lcall
seta
xchg
add
add
mov
outsb
ds
cmp
adc
sub
in
push
loopne
jb
pop
loopne
cmp
pop
cmp
push
adc
jmp
loope
or
testb
or
pop
movsl
cli
rcrb
sub
push
sub
cld
fidivs
ds
jmp
mov
lods
xor
jbe
testl
inc
push
fstl
push
lds
jmp
xchg
lods
xor
mov
clc
mov
int
pop
inc
mov
xchg
and
xchg
sub
scas
or
adc
fildll
aaa
fs
mov
push
mov
xlat
mov
stos
lcall
adc
jle
push
jl
insl
inc
cltd
pop
lcall
jle
aas
mov
cmc
in
jb
inc
sub
jo
inc
lds
sub
push
sarb
out
cli
and
call
xchg
fwait
xor
jle
dec
add
pop
lret
icebp
adc
and
xchg
sbb
rcrb
jg
sbb
dec
sbb
mov
ret
ds
xchg
hlt
xchg
mov
movsl
insl
fldl
dec
or
in
push
xor
inc
mov
mov
int
jg
sbb
mov
sbb
loope
dec
and
push
adc
mov
jg
in
test
loopne
adc
lea
lods
mov
and
dec
pop
les
inc
jb
jg
cmpsl
fidivrl
es
push
pop
mov
repz
inc
fists
movsl
jge
test
sbb
xor
or
imull
jp
push
int3
les
insb
jo
subb
pop
pusha
jmp
mov
push
xchg
jno
add
jae
sub
xor
dec
or
mov
mov
mov
mov
and
cltd
xchg
lods
test
out
test
loope
test
and
test
rcrb
mov
sbb
pop
cmpsl
int
cltd
sti
ja
insb
leave
xchg
in
imul
pop
sbb
xor
ss
fwait
cmp
test
fsubrs
outsb
push
out
sub
dec
lea
jne
xchg
sub
movsl
push
jno
or
push
sbb
sub
ja
jnp
aaa
cmpb
inc
pop
xor
pop
sub
xchg
jbe
jno
in
pop
dec
adc
bound
dec
xchg
push
and
repz
or
loopne
mov
lcall
insb
pop
es
xor
adc
inc
push
out
jne
cwtl
or
addr16
aas
xchg
xor
in
push
xchg
jecxz
jmp
push
inc
cmpb
fildl
add
push
jne
jnp
rcr
pop
rep
adc
xchg
push
add
mov
mov
pop
cli
cli
lcall
bound
loop
push
pushf
jb
enter
jle
add
xchg
push
flds
clc
xchg
and
aaa
lds
fistpll
mov
int
xor
mov
jp
adc
cmp
jg,pt
imul
lock
pop
cmp
xor
push
cmpsl
les
inc
add
mov
cli
pop
dec
dec
out
jge
sbb
xchg
rorb
adc
stc
mov
cltd
lods
hlt
test
inc
notl
movsb
mov
inc
imul
jo
pop
into
add
mov
mov
jmp
add
aas
or
xacquire
cld
pop
loopne
push
in
scas
dec
cmp
fldt
test
outsb
sbb
pop
in
movsl
lea
lret
js
icebp
jns
sub
push
and
xchg
xor
mov
mov
ds
fldenv
nop
xor
push
cmp
mov
lahf
pop
adc
ja
and
movsl
iret
repz
xchg
inc
mov
push
pushf
sbb
pop
clc
lods
aad
sbb
inc
dec
sahf
scas
and
sbb
fidivrs
jle
fnstenv
sbb
out
lock
cmc
shll
loopne
fistl
mov
fcmovnb
popa
out
loopne
jecxz
mov
sahf
and
adc
popa
daa
shr
dec
scas
push
repz
sub
movsl
xchg
out
jno
cmp
in
std
out
xchg
mov
push
lods
cmp
fsubrp
xchg
xorl
setge
imul
icebp
ss
cmp
repz
dec
ret
or
outsb
lods
scas
out
addr16
sahf
repnz
xor
jno
fdivl
insl
js
and
or
push
in
mov
jle
cli
in
xchg
inc
or
dec
jne
jne
jge
adc
jno
mov
and
addr16
jp
rorl
ja
mov
push
sub
mov
ror
sahf
mov
xchg
lock
jmp
mov
dec
lods
xchg
mov
fidivrl
dec
cmp
mov
dec
sub
pop
lcall
rorl
test
aam
push
lret
call
xor
and
loope
scas
cmp
cs
sbb
and
and
sub
sbbl
mov
jmp
adc
push
mov
ss
shlb
shll
fisubl
dec
xchg
arpl
jge
out
push
andb
pop
or
daa
stc
xchg
push
ss
xor
cltd
xchg
mov
inc
jg
inc
rorl
jb
dec
pop
ret
lds
jmp
and
es
or
add
sahf
sub
mov
in
insb
das
dec
mov
jecxz
aas
push
mov
or
and
cltd
repnz
mov
mov
dec
and
adc
out
stc
mov
sbb
test
pop
sahf
xchg
or
das
mov
mov
ficompl
in
cltd
call
cmp
xchg
aas
dec
stos
gs
mov
loopne
mov
jg
mov
mov
jg
mov
cmc
das
cmc
mov
mov
or
sbb
sub
cmpsl
je
nop
or
sub
push
imul
xor
cmp
mov
push
imul
mov
jb
fistps
add
push
sbb
rorl
add
adc
rcrb
jo
pop
adc
jae
pop
or
lret
rorb
mov
lret
shll
stos
inc
subb
mov
jmp
mov
sub
sub
xor
icebp
xchg
roll
pop
popa
inc
add
xchg
int
imul
pop
out
scas
and
sub
xor
xchg
hlt
mov
ficoml
jbe
add
push
and
test
fnstcw
push
in
addl
loope
add
popa
in
fst
dec
jno
std
rcl
pop
xor
sub
cmp
jmp
enter
dec
lret
push
xchg
out
stos
mov
mov
lds
ss
xlat
and
fs
sahf
rcrb
and
call
push
or
push
std
jg
add
push
stc
imul
inc
mov
popl
cmp
fsubrl
pop
pop
fimuls
aaa
sbb
push
lods
mov
icebp
or
clc
in
movsl
mov
clc
scas
cmp
cmp
mov
or
int3
push
sub
xor
xchg
fbld
push
out
adc
jmp
dec
jne
cltd
mov
sbb
sbb
xchg
xchg
xchg
xlat
das
dec
popa
cmp
jl
sub
add
les
shll
scas
test
inc
fadd
rorb
inc
xor
mov
adc
xchg
inc
sahf
cmpsb
mulb
in
mov
push
sar
int3
stos
mov
jecxz
lcall
push
aas
mov
decl
jb
gs
call
sbbl
xchg
imul
loopne
pop
and
mov
fs
popa
dec
xchg
jne
mov
std
push
inc
mov
ror
mov
pop
and
cwtl
mov
iret
movsl
jo
mov
cmp
push
fiadds
nop
push
jle
inc
xor
or
orb
jne
jp
out
aam
inc
enter
mov
rcrb
jecxz
xchg
push
pop
gs
imul
arpl
test
and
or
ds
cmp
fnstenv
divl
cmp
aas
add
insb
push
push
fdivrl
push
mov
lds
mov
sbb
or
ret
imul
out
xor
xorb
mov
dec
fisttpl
lods
clc
jp
iret
sbb
adc
fadds
dec
leave
jbe
sub
push
jmp
es
clc
cs
sbb
mov
inc
daa
xor
adc
pop
mov
stc
sbb
lcall
fdiv
fmull
mov
push
dec
push
fidivs
fdivs
push
incl
sbb
decl
test
imul
and
xchg
lock
lret
aas
or
addr16
sub
movl
xor
pmullw
aad
in
fisttps
mov
jne
xlat
lock
pop
mov
jl
ljmp
lahf
mov
xor
pusha
pop
jne
andb
fcmove
jg
xlat
jp
loope
rcrl
xchg
cmp
mov
popf
fdivrl
rcrb
cmpb
es
xchg
pop
movsb
push
push
xor
adc
pop
inc
mov
aad
das
mov
and
inc
data16
or
mov
movsl
pop
adc
inc
inc
fmulp
mov
dec
aad
add
mov
fmull
xlat
xchg
call
sti
push
mov
pop
test
xchg
dec
inc
sub
mov
and
cmp
mov
fs
push
pop
add
xchg
sbb
xchg
mov
cs
mov
lds
or
imul
aad
stc
flds
es
icebp
push
mov
sbb
je
mov
mov
sbbl
mov
test
rclb
jno
sub
ja
rcrb
pop
sub
ljmp
js
aad
pop
add
inc
cmpb
js
insb
mov
call
push
push
sub
mov
test
std
jecxz
pushf
xchg
or
add
rorb
mov
dec
outsl
or
fsubrs
cld
push
xchg
xchg
xchg
mov
out
pop
xchg
cli
lods
rolb
out
dec
daa
je
mov
shlb
xchg
aam
xor
nop
out
rcr
lret
lock
ds
rolb
jge
outsb
mov
das
fadds
adcb
jne
call
gs
aad
js
mov
popa
dec
push
mov
fadd
mov
dec
adc
cltd
movsl
pop
mov
hlt
cmp
rolb
lahf
mov
ds
pop
push
in
aad
add
xor
dec
adc
adc
adc
aam
adc
rcrb
lahf
enter
ss
mov
cmp
adc
inc
insl
adc
fcompl
fistpll
cmp
lods
and
stos
dec
lcall
mov
addb
lret
mov
cmc
adc
add
push
mov
into
cwtl
jl
and
or
nop
sbb
xchg
pop
ja
mov
jmp
push
mov
pop
xchg
mov
ljmp
xlat
push
in
movsl
push
mov
sbb
enter
mov
cmp
pop
sti
mov
xor
push
jo
ljmp
mov
daa
call
ud0
jl
dec
xor
xchg
inc
mov
cmpsl
jg
dec
mov
or
push
push
or
les
mov
test
stc
stos
push
xor
shll
jg
mov
data16
push
pop
xchg
push
rorb
sub
lods
mov
mov
pop
mov
pop
jecxz
ljmp
lods
sarb
mov
lock
inc
test
inc
hlt
add
mov
mov
stc
lods
popa
adc
mov
push
push
mov
lds
in
cwtl
rcrb
dec
mov
and
push
test
push
push
jl
jge
push
xchg
flds
inc
inc
jp
dec
add
fadds
mov
or
aad
jne
mov
jnp
iret
pushf
push
xchg
lret
je
repnz
pop
dec
rorl
mov
xchg
fmull
mov
xchg
and
mov
or
jecxz
test
aad
fs
dec
xor
xchg
in
or
xlat
rcrb
ss
cmp
imul
jg
sbb
push
xor
xchg
cmp
mul
arpl
aad
adc
jmp
das
aas
dec
or
stos
int3
mov
mov
es
pop
jmp
vcvtps2pd
arpl
push
xor
pop
add
jb
sti
js
mov
jnp
inc
mov
or
mov
and
outsl
fucom
push
mov
ljmp
lahf
dec
pusha
mov
cmp
out
inc
mov
in
jmp
fistl
push
stc
adc
out
out
mov
dec
leave
in
nop
out
inc
push
mov
pop
lods
popa
mov
mov
mov
mov
inc
clc
pop
or
lea
mov
or
icebp
sbb
mov
mov
push
dec
sahf
repnz
or
xor
mov
pop
ffree
push
lret
nop
jne
xchg
cld
ljmp
lcall
adc
cltd
cmp
lods
sub
test
fcomp
loope
xor
xor
jle
imul
xor
test
xor
fwait
ret
loop
add
jne
outsl
add
lods
std
mov
push
outsb
jbe
test
mov
push
es
mov
adc
ret
dec
outsb
fisubl
cwtl
shll
scas
pop
cmpsl
outsl
in
or
clc
fdivrl
or
xor
jbe
lods
repz
subb
in
call
lret
imull
stc
sub
cmp
sbbl
mov
sub
xor
and
xor
push
and
xchg
inc
enter
adc
in
in
pushf
mov
sub
loope
dec
int3
pop
hlt
clc
jl
jle
mov
mov
jg
xlat
jns
lcall
push
lds
stos
mov
lahf
xorl
inc
mov
dec
test
out
out
cmc
sub
pop
out
rorb
cmp
test
sbb
out
int3
jns
mov
call
jae
cwtl
pop
repnz
cmp
jno
dec
loope
jl
pusha
aam
cltd
je
mov
jl
iret
inc
sub
enter
arpl
iret
lret
or
sbb
pop
jl
aas
ss
out
cli
cmpsb
adc
in
pop
popl
mov
lds
sbb
xchg
je
sbb
push
and
cs
add
jb
lods
cmp
inc
fisttps
je
dec
cmpxchg
cltd
xor
push
add
push
adc
adc
dec
dec
mov
fcmovnbe
int3
sbb
xchg
nop
daa
mov
ret
sti
jl
hlt
xor
sub
sbb
xor
stos
or
dec
ss
and
ljmp
loope
lret
xchg
lahf
bound
pop
mov
push
mov
sbb
dec
sahf
es
mov
lea
cmp
leave
sub
adc
test
cmpsb
jmp
or
jae
adc
jns
lock
enter
sub
push
jne
flds
mov
sub
out
sub
add
pop
add
and
shlb
sub
adc
mov
stc
or
sub
jg
xor
out
push
dec
jp
repnz
xchg
jl
roll
lret
es
ljmp
dec
fcomps
mov
add
or
xchg
jnp
xchg
fs
stos
pop
out
sub
fstl
fisubl
hlt
adc
fs
push
and
arpl
push
mov
cwtl
imul
jo
sbb
jo
and
push
imul
dec
stc
movsl
xchg
lods
notl
pop
cli
sbb
adc
sti
and
test
nop
pop
jmp
test
sahf
push
into
xor
jne
popa
inc
cmp
push
xchg
rcl
pop
cmp
jae
iret
outsl
jmp
push
xor
outsb
out
out
sbb
lret
sbb
icebp
into
mov
lods
subb
jge
in
inc
or
mov
cs
pushf
call
out
imul
leave
pop
dec
cmp
imul
push
jb
int3
push
in
mov
pop
xchg
lret
cmpsb
fneni(8087
aas
jnp
out
push
mov
cli
pusha
js
add
rcrl
rorb
inc
dec
xor
dec
std
subl
leave
fucom
cltd
jb
push
jmp
les
clc
jp
jp
das
das
scas
adc
pop
cmp
test
mov
pop
push
push
out
adc
js
mov
enter
fiaddl
dec
xor
fcompl
popa
movsl
jno
mov
sti
ret
je
dec
push
sbb
and
pop
push
xor
sahf
popa
sub
ss
enter
test
fwait
mov
les
hlt
pop
aaa
icebp
jne
push
inc
into
daa
imul
pop
test
push
hlt
jno
sbb
repnz
inc
pop
rcl
dec
ficoms
pop
cmp
movsl
sub
sarb
xchg
testl
shrl
mov
pop
xchg
cwtl
lret
inc
rcr
sbbb
pop
imul
and
js
cmpsb
push
add
adc
leave
inc
cmpsb
dec
sbbb
insl
pop
dec
cmp
sbb
test
jnp
popa
lods
cmp
shr
bound
rorb
cwtl
mov
std
or
push
out
mov
adc
xor
out
ret
das
ja
jb
jo,pn
movsb
cs
jmp
les
inc
xchg
addr16
sbb
call
stos
push
push
xlat
test
lds
xchg
push
repz
fmuls
push
cmp
bound
arpl
xor
out
xchg
ljmp
mov
adc
jnp
repnz
xchg
cli
pop
dec
jne
inc
jmp
fcoml
add
ret
sub
sbb
cmp
add
sbb
stos
inc
imul
mov
in
int
in
aam
inc
xchg
popl
bound
push
mov
mov
pop
jae
push
adc
and
or
or
insb
sub
sbb
push
je
push
inc
adc
out
in
inc
gs
ds
insb
pop
mov
push
inc
movsb
sbbb
push
xor
lcall
ljmp
xchg
adc
fwait
mov
add
push
pop
xchg
fidivrs
lods
sbb
aaa
ja
ret
sub
inc
bound
in
and
jne,pn
daa
push
subl
call
push
subl
and
in
mov
adc
jne
clc
dec
mov
loope
inc
fldl
inc
add
and
insl
testl
jns
mov
cmpsb
dec
insb
gs
aaa
dec
rcrl
je
or
inc
sbb
dec
pusha
cld
mov
add
insb
xchg
orb
nop
rol
cmpsb
sbb
cmp
lcall
add
sub
cmp
inc
out
addr16
jg
cmp
test
bound
out
xchg
inc
ja
stos
xchg
or
jge
and
xor
lods
xlat
adc
in
pop
adc
jl
inc
adc
cwtl
push
pop
loop
je
mov
lcall
aas
call
ds
out
mov
jo
cmp
jno
insl
xor
mov
jbe
cmp
shl
iret
pop
push
jmp
cmpsl
popf
rolb
or
shll
cmp
jno
jp
es
cmp
and
cmpsl
std
int3
f2xm1
mov
icebp
add
gs
insl
push
nop
push
idiv
mov
mov
ja
pop
fdivl
cli
dec
movsb
xchg
pop
push
inc
jbe
mov
inc
mov
pop
push
fwait
sbb
fwait
sbb
shl
inc
xor
lods
sarb
lret
scas
mov
cs
das
lods
mov
push
xor
dec
cs
xchg
fs
fcompl
cmpsl
mov
movsl
or
cmc
test
aaa
inc
rcll
insb
adcl
push
pusha
or
push
imul
cltd
sti
or
mov
sub
pop
loope
cmp
clts
cmp
mov
ss
aaa
popa
push
scas
in
hlt
sbb
int3
sahf
rorl
mov
mul
fildll
lods
or
pop
mov
jno
adc
sub
loop
syscall
ljmp
out
daa
daa
pop
scas
gs
sub
mov
test
scas
arpl
ljmp
das
mov
or
sbb
mov
adc
xor
fdivrs
mov
mov
mov
cmp
mov
dec
loop
lret
int3
jb
jb
jnp
fldcw
js
fldenv
stos
fs
in
lods
cmc
repnz
pop
aaa
xorl
xor
sub
mov
icebp
les
out
rorb
or
cltd
push
movsb
add
add
add
xor
adc
mov
inc
pop
scas
scas
ret
push
daa
test
cmpsl
or
int3
adc
xlat
mov
push
cmc
or
clc
mov
movsl
push
cltd
pusha
fcoms
cmp
cmp
fidivl
or
jl
inc
push
lods
or
rol
int
push
jo
push
in
lcall
push
out
mov
out
pusha
iret
das
push
nop
push
lret
inc
cmp
lds
mov
mov
js
lret
in
mov
lea
jae
pop
sbb
bound
test
push
cmpsb
iret
cs
popa
ret
add
das
out
fs
inc
call
adc
mov
lcall
or
or
je
push
pop
out
cmp
mov
mov
data16
pusha
jbe
test
pop
push
jle
xor
jp
adc
inc
push
dec
imul
push
ret
and
jae
sbb
jae
int3
and
xchg
add
jl
mov
icebp
stos
mov
mov
in
lock
inc
adc
jg
mov
sbb
mov
mov
roll
jne
jnp
sbb
sbb
pop
xor
jp
jmp
push
icebp
mov
loopne
mov
fisubs
vprotb
or
ret
cmp
bound
sbb
ret
sbb
and
into
lock
aaa
jbe
dec
outsl
jge
cwtl
jns
mov
into
mov
cmc
cmp
push
or
adc
stos
hlt
testl
mov
mov
pop
ror
out
hlt
pop
lret
xlat
outsl
lea
ja
dec
mov
ret
mov
rcl
jl
mov
sbb
shrb
insb
je
in
mov
pop
sbb
bound
push
inc
inc
and
jnp
movsb
movsl
or
mov
cli
int
mov
xchg
pop
sub
je
fsubl
cli
cmp
aad
xor
xor
gs
fwait
out
js
mov
jp
push
pop
popa
inc
pop
data16
or
cld
pop
jne
cmp
push
adc
les
sbb
mov
xchg
lods
lret
push
dec
xor
ss
lcall
iret
insl
scas
call
jge
imul
cli
ret
or
fst
popa
jmp
pop
mov
push
lock
jb
test
test
dec
pop
xor
pusha
cmp
add
movsb
clc
idivb
inc
out
dec
cli
or
or
lock
mov
inc
pop
sahf
rol
fsubl
nop
fs
push
dec
xchg
int
shl
mov
xchg
sbb
cmp
sub
dec
sti
insl
xchg
or
movl
xorl
sbb
xor
lods
jmp
sti
dec
mov
inc
sub
adc
and
adc
xor
and
sbb
arpl
addr16
mov
test
sar
add
jl
mov
add
movsl
pop
gs
lret
test
pusha
in
bound
aas
sarb
inc
mov
adc
rclb
mov
or
cmpsb
dec
push
insb
adc
idivb
or
jg
lcall
sahf
inc
xchg
iret
xor
popa
shll
inc
dec
fadds
cmpsl
hlt
outsb
push
daa
aam
test
fsubrl
rcll
jo
fcoml
xchg
and
repz
and
inc
clc
lock
xor
out
ljmp
xchg
xchg
dec
loope
cld
outsl
aad
adc
mov
sub
xor
dec
push
and
dec
dec
pop
xchg
dec
test
jmp
inc
fcmovne
repnz
leave
fidivl
aad
movsl
lahf
lret
scas
jge
sub
cmp
test
int3
add
popf
aas
mov
enter
jne
pop
xor
mov
and
aaa
popl
js
movsl
pmullw
ret
and
jnp
push
shlb
scas
cli
daa
cli
in
in
stc
sub
mov
jb
dec
out
jmp
jo
and
hlt
fstpl
or
frstor
shll
pop
xchg
sub
push
lock
xorb
cltd
fidivrs
hlt
stos
into
jnp
mov
or
lods
ret
push
aas
lret
dec
sbb
pop
inc
sti
or
sbb
push
stos
xchg
into
scas
push
jnp,pn
mov
dec
mov
xchg
push
sbb
orl
js
mov
ljmp
rep
and
into
jg
stos
mul
setns
mov
sub
inc
pop
add
jns
fwait
sbb
mov
movsb
enter
std
ds
ret
ret
pop
les
ljmp
in
stos
push
rorb
je
xor
jne
lret
dec
or
lret
sbb
ficoms
dec
aas
fsub
adc
mov
mov
sahf
pop
loop
icebp
leave
inc
add
enter
mov
lret
mov
out
xor
cs
test
dec
xor
in
sti
loopne
ljmp
jmp
mov
movsl
mov
bound
lds
fs
push
jbe
mov
dec
rcrb
dec
inc
sub
and
pop
and
jg
int3
xchg
popa
int
clc
mov
push
mov
adc
mov
or
test
pop
cmpsl
adc
jnp
sub
adc
sbb
fcompl
in
xchg
stc
test
and
and
or
push
stc
xor
inc
push
test
dec
daa
push
push
lea
int
je
adc
lock
xchg
movsl
outsl
jge
cmc
add
jmp
and
dec
cmp
adc
mov
pop
adc
in
test
or
faddl
mov
sub
lret
call
mov
fwait
addr16
fildll
jno
cmpsb
mov
mov
cmp
data16
push
pop
call
jnp
jbe
divl
xor
dec
mov
cmc
mov
sub
mov
or
jae
in
mov
mov
sahf
or
and
adc
jno
mov
out
mov
out
js
hlt
jl
push
sbb
lret
test
mov
in
mov
fldt
dec
addr16
dec
add
fsts
mov
insb
xchg
in
fisubs
lahf
mov
fldenv
push
lds
inc
sbb
push
hlt
or
pop
in
adc
adc
pop
sub
mov
ret
pop
xor
lock
ljmp
scas
popf
mov
add
sbb
sub
cltd
jb
pop
sti
or
enter
rol
sti
mov
shrb
testb
mov
cmp
and
xchg
test
mov
sub
inc
aam
pop
cli
push
loop
bound
cwtl
push
xor
cmp
xor
popa
mov
call
push
imulb
xlat
lock
cli
xchg
add
hlt
mov
in
and
and
push
imul
stos
orb
repnz
mov
dec
mov
xchg
arpl
pop
in
jecxz
sub
sbb
cmp
and
andb
into
imul
movsb
ljmp
in
add
xor
ret
sub
adc
xor
lods
aad
xor
xchg
jae
insl
lret
hlt
or
xchg
rcrb
adc
and
clc
repnz
fsubl
out
mov
push
lock
inc
add
pop
push
dec
aas
fcmovu
arpl
add
mov
cmpsl
call
inc
jae
jl
idiv
push
filds
push
lea
loopne
dec
push
dec
add
mov
sbb
jle
ja
sarl
adc
cli
es
fidivl
dec
fdivp
push
fdivs
fadds
cltd
inc
out
xchg
clc
sub
push
dec
and
lcall
addb
aad
scas
xor
jp
out
inc
cmp
and
popf
xor
cmp
in
dec
fs
lcall
jge
jge
pop
dec
sub
daa
out
aaa
imul
aas
mov
and
jmp
jbe
inc
lcall
add
mov
cltd
test
mov
rcrb
pop
sub
lret
pop
lds
cwtl
xor
push
mul
fwait
xor
arpl
dec
sub
jecxz
sbb
cmpsb
mov
inc
fistpll
mov
jl
movsl
sar
call
daa
xchg
outsl
pxor
dec
dec
fmull
push
shl
pop
xlat
es
daa
sar
or
cld
xor
pusha
and
je
outsl
jp
add
xchg
push
and
test
addb
inc
into
xor
out
jne
jle
xor
xor
lods
inc
inc
in
jmp
int
pop
adc
leave
sub
pop
lret
je
ljmp
aas
daa
in
and
les
push
xchg
lods
adc
negb
jbe
pop
mov
xor
bound
cwtl
xor
add
dec
into
fcoms
popf
sahf
aas
mov
lds
ret
sti
cmp
and
cmpsl
dec
xchg
sub
in
and
jg
iret
roll
addb
shl
sub
cmpsb
addb
test
add
sbb
jp
mov
xor
mov
int3
fwait
pop
dec
inc
and
lret
movq
iret
jle
in
mov
mov
lods
add
mov
idiv
xor
inc
clc
xor
push
inc
xlat
icebp
pop
xchg
sbb
cmp
fwait
or
or
shlb
xor
mov
adc
fisubs
xor
scas
fists
pop
and
fs
adc
jns
cmp
jo
pop
ja
xchg
mov
ljmp
dec
call
sbb
repz
test
es
pop
add
inc
lods
pop
mov
gs
lds
les
andl
cld
jnp
jnp
dec
push
mov
ror
push
jne
pop
sub
push
jns
sbb
sbb
mov
scas
mov
test
mov
scas
leave
adc
hlt
outsl
lahf
xor
mov
leave
pop
testb
adc
scas
sti
movsl
mov
outsl
aad
ja
cmp
shll
dec
cmp
cmp
les
fstp
lods
outsb
fdiv
jno
cmp
xor
lods
mov
xor
inc
shlb
ror
shr
ret
cli
scas
push
fimuls
lock
pop
mov
lcall
aaa
pop
dec
mov
sbb
xchg
and
mov
mov
iret
push
bound
sbb
or
shll
push
mov
sbb
mov
add
mov
jb
push
xor
subl
jle
push
push
ljmp
stc
dec
sbb
mov
xor
out
push
adc
mov
insl
push
xlat
mov
sub
sbb
test
ficoml
cltd
cli
enter
std
push
popa
lods
xchg
insb
leave
xlat
pop
call
test
fnstsw
jbe
leave
ret
inc
mov
jne
stos
mov
fs
adc
pushw
cmpsl
enter
imul
stos
jp
data16
or
std
subl
movsb
jae
or
add
clc
ret
mov
das
mov
or
xchg
cmpsb
sbb
mov
add
cmp
mov
inc
pop
je
std
add
xor
cmp
xchg
ss
test
out
in
ss
sahf
push
sub
in
cmp
jae
jb
addr16
add
lahf
shll
mov
xor
add
rsm
xor
cmc
sbb
cld
sbb
add
inc
je
inc
loope
xlat
jne
sbb
and
negl
or
jmp
les
mov
daa
out
enter
lods
in
pop
pop
jb
mov
inc
and
jge
mov
cltd
dec
outsl
jge
lock
push
pop
mov
xor
cmp
xlat
mov
cmp
sarb
pop
in
lcall
mov
mov
lock
xchg
cmp
cmpsb
mov
gs
outsl
dec
xor
inc
fiadds
cmc
push
scas
clc
sub
jecxz
sbb
enter
mov
iret
rclb
gs
xlat
mov
sub
pop
sbb
mov
mov
jl
push
dec
mov
mov
or
std
push
fwait
aam
fisttpl
cmp
cmp
sbb
sti
rorb
out
jp
rorl
fs
rol
xchg
push
jg
std
mov
fs
push
insl
sbb
mov
xchg
shrl
jecxz
aam
lahf
mov
add
dec
mov
jnp
mov
outsb
or
push
rclb
push
add
mov
push
pop
movsl
mov
dec
or
dec
xor
test
leave
int
push
mov
loopne
inc
inc
jae
inc
mov
jns
mov
or
mov
inc
js
rorl
mov
icebp
mov
stos
stos
or
cmp
icebp
pop
push
movsb
out
fcomps
or
stos
mov
jle
mov
mov
sub
cltd
test
mov
pop
jp
fistl
in
ret
or
fstl
pop
dec
lock
push
jmp
lock
enter
inc
cmp
call
sti
fisubrl
lods
aas
mov
and
xchg
mov
or
ljmp
adc
movsb
lret
add
pop
stos
adc
mov
test
jge
stos
fistps
push
fdivs
pop
lock
out
cmp
cmpsl
xor
sub
push
aas
js
mov
dec
mov
pop
sub
dec
jb
dec
call
js
inc
inc
push
sbb
sub
and
sbb
xchg
dec
jne
imul
rol
iret
es
movsb
jge
pop
mov
fs
wbinvd
mov
lds
dec
jmp
or
push
loop
int
sbb
dec
fsubrs
fldt
pusha
sub
mov
pop
mov
push
loop
cmp
jmp
pop
out
fiadds
lock
decb
xor
push
ljmp
sbb
xchg
shll
pop
pop
lret
pop
jnp
adc
scas
jp
lahf
ficoml
dec
out
mov
andl
pop
sti
inc
push
xchg
mov
fbld
popa
cli
adc
sbb
icebp
sar
popf
inc
push
adc
dec
pop
add
outsb
mov
bound
mov
fwait
push
jmp
xor
xor
jp
pushf
stc
mov
inc
adc
xchg
ja
dec
loop
add
sbbl
cmc
inc
pop
lods
sub
pushf
mov
imul
pop
int3
popf
xor
popl
aam
add
add
inc
adc
outsb
in
add
jo
loopne
xchg
sbb
adc
jo
push
aas
stc
push
mov
mov
and
mov
mov
push
dec
dec
xor
fcmove
pop
mov
ret
vmwrite
loopne
addr16
mov
gs
stc
jp
mov
jae
jb
call
push
mov
fdivrl
cmp
cmp
pop
movsl
in
mul
add
pop
mov
inc
mov
fistpl
lcall
adc
in
out
jle
cmpsb
mov
es
bound
pushf
jp
cmpsb
push
add
fwait
xchg
mov
sarl
iret
mov
lods
and
daa
lret
cwtl
push
mov
pop
sub
sbb
addb
cli
cwtl
and
dec
js
cwtl
jae
inc
adc
pop
insl
mov
icebp
nop
imul
icebp
popa
push
mov
inc
cmp
xor
push
dec
xchg
insb
fdivl
cmc
mov
sti
mov
fidivrl
je
test
cmp
lahf
sbb
cli
inc
mov
add
shrb
inc
xor
jle
in
push
cmp
lods
ds
cs
sub
jecxz
sbb
daa
cli
iret
cmp
pushf
cmp
outsb
pop
sub
adc
cmp
jmp
in
cmp
inc
fdivr
push
mov
aam
lods
pop
adc
aas
cmp
not
xor
rcll
fnstsw
sub
pop
push
lret
lds
push
mov
out
cmp
push
or
or
jo
aaa
mov
or
mov
ljmp
adc
inc
aad
inc
movsb
aas
cmp
xchg
inc
xchg
jp
sbb
mov
js
sarb
je
mov
push
int
test
push
add
push
fs
and
adc
mov
sahf
mov
nop
push
clc
or
pusha
test
stc
mov
lahf
pop
jae
roll
push
sbb
leave
and
sub
fsubrl
and
daa
mov
aam
rorb
or
aas
mov
das
cmp
dec
xor
es
mov
pusha
and
push
cs
mov
je
inc
adc
jl
xchg
inc
mov
and
imul
rep
mov
insl
movsl
aam
dec
leave
out
dec
xlat
add
jp
mov
sub
ljmp
or
rclb
xchg
cli
mov
or
cli
mov
xor
inc
inc
mov
lret
mov
into
mov
lea
daa
jnp
add
lock
jnp
cmp
ret
stc
scas
mov
imul
dec
lea
out
into
fcmovbe
and
rcrb
adc
les
shrb
add
roll
popf
mov
push
hlt
movsb
test
loopne
aad
sahf
mov
cmp
pop
pop
call
xchg
or
loope
fcom
mov
jo
into
mov
xchg
lds
xor
add
into
adc
xor
int
outsb
add
mov
es
std
pop
lahf
inc
and
cmpsl
jg
push
xor
xchg
xor
mov
inc
popa
add
aas
sahf
sahf
or
popf
and
push
push
sbb
mov
es
addl
sahf
push
pusha
lods
sbb
out
pop
pop
loop
mov
xor
add
clc
imul
sbb
cwtl
mov
icebp
lret
aam
dec
repz
out
cmp
ljmp
in
popa
frstor
inc
fcmovb
dec
sbb
pop
fiadds
loop
xchg
test
popa
aad
push
push
sub
rolb
and
dec
addb
or
and
js
dec
test
les
fs
rcrb
notb
mov
daa
xor
icebp
mov
sbb
aas
push
add
sbb
adc
sahf
push
aas
in
js
xchg
stos
adc
push
jo
xor
es
out
sub
and
adc
testl
mov
dec
test
adc
jg
xchg
repz
shr
out
xor
jecxz
push
fstpl
xorb
push
cld
ret
scas
bound
rclb
cmp
fnsave
and
mov
sbb
jle
mov
addr16
mov
adc
xor
insl
xor
cmp
sbb
repz
shll
jp
out
call
stos
pop
pop
mov
mov
hlt
and
dec
sti
sub
movsb
add
stos
or
popa
xlat
mov
inc
mov
jl
cmp
sbb
sbb
pop
adc
mov
sub
cmpsb
dec
inc
lods
fisttpl
aaa
ficomps
adc
gs
sub
sub
or
mov
sub
push
les
or
sbb
mov
inc
das
dec
adc
data16
dec
loopne
fdivs
stos
xchg
add
cmpsl
jp
xchg
adc
mov
outsl
loop
mov
adc
mov
cltd
xor
add
lods
pop
inc
xchg
mov
mov
add
jecxz
fistl
push
mov
aaa
jmp
sub
es
and
enter
add
stos
fnstcw
test
push
loop
mov
push
push
data16
mov
sar
loopne
inc
adc
insl
dec
push
jne
in
roll
jmp
adc
cmp
insb
sbb
jmp
push
push
fidivs
fchs
cs
inc
mov
insb
jl
outsl
xchg
movsb
dec
and
mov
jbe
xor
mov
mov
in
xchg
xchg
sub
aaa
xor
push
push
jl
inc
sub
sub
mov
sub
cmp
sbb
pop
jge
int3
or
out
pop
lds
mov
jp
ss
je
mov
cmp
lcall
test
outsb
loopne
or
je
push
data16
jbe
jns
les
jp
add
jo
out
lds
test
add
ret
push
xor
cs
xor
or
scas
js
shll
xchg
in
xorb
lock
arpl
movsb
inc
xor
andl
rcll
pop
or
xor
loope
xchg
mov
inc
in
test
jmp
mov
pop
clc
add
adc
dec
cmp
or
push
movsb
std
dec
xor
data16
adc
xor
outsl
mov
popa
mov
dec
repnz
xor
call
pop
hlt
dec
adc
nop
lods
sbb
and
in
mov
mov
loope
jne
cmpsl
mov
outsl
mov
jge
lods
test
mov
mov
cmpsb
push
loope
das
aad
std
push
test
loopne
mov
pop
jb
lods
and
lahf
out
aas
inc
cmp
inc
std
mov
insl
cli
aaa
mov
sbb
or
mov
scas
imul
push
loopne
mov
pop
xor
jbe
fsubrs
mov
inc
bnd
xchg
mov
bound
add
cmp
xor
inc
dec
or
pop
leave
loope
inc
pop
mov
pop
sti
xchg
cmpsb
mov
in
out
push
jl
mov
push
popa
stc
and
jmp
leave
pop
daa
in
dec
aaa
jns
loopne
xchg
cs
mov
mov
jae
les
sahf
and
test
cli
insb
fdivrp
insl
cmp
push
pop
js
pop
in
jecxz
sub
movsl
push
and
stc
xor
lcall
dec
xchg
mov
mov
leave
cld
pop
rcrl
dec
mov
push
lahf
es
sti
stos
inc
lcall
lcall
and
or
je
add
xor
cs
test
mov
rcrb
xchg
cmpsb
lcall
cmp
call
lret
push
mov
popf
sub
out
mov
sub
iret
jbe
inc
inc
in
push
popf
je
dec
mov
and
xchg
subl
out
fwait
xorl
test
rolb
inc
inc
cmp
repz
xor
add
xlat
pop
adc
adcl
mov
cwtl
outsb
pushf
popf
bound
subb
out
les
sarl
or
scas
in
xor
cmp
push
cmpsl
stc
in
mov
pop
xor
or
sbbl
cmp
dec
sub
dec
ds
int3
test
fwait
push
loope
add
pusha
adc
imul
dec
sbb
xor
std
add
popa
in
mov
shlb
xchg
adc
mov
jg
push
sbb
insl
divb
ja
hlt
dec
cmpsl
inc
xchg
arpl
inc
sbb
xchg
iret
sbb
jecxz
sub
push
mov
xor
or
jnp
daa
push
xor
sub
xchg
jl
xor
sbb
add
or
mov
xchg
mov
scas
sbb
mov
dec
outsl
in
mov
cltd
dec
mov
fimull
adc
andl
js
sub
daa
into
and
lea
xchg
xchg
cmp
xadd
cmp
jb
aas
push
jecxz
push
fisubrl
and
or
bound
addl
lods
imul
add
bound
push
scas
dec
jle
pop
popa
push
sub
push
insb
mov
fdivrl
cmp
push
out
jle
dec
xor
pop
sti
je
mov
in
xor
add
lea
mov
daa
jo
xor
out
adc
mov
pusha
shll
std
dec
add
bound
mov
movsb
sub
gs
popf
push
sahf
fists
in
movsb
pop
inc
sarl
mov
cmpsl
test
popf
test
mov
out
sbb
xchg
in
dec
sbb
sub
pusha
jbe
adc
fcmovne
cwtl
pop
outsb
lods
in
or
cld
inc
xchg
in
sub
mov
push
add
xor
popa
or
lods
aaa
lods
enter
or
and
aam
add
inc
popa
mov
fdivr
gs
call
and
int
fwait
jecxz
pop
divb
jae
pop
sub
jle
sub
lahf
mov
cmp
sbb
jno
jbe
loope
and
jae
push
pop
push
push
loope
dec
nop
je
xor
cli
push
mov
mov
mov
lea
cmp
adc
xor
out
push
out
adc
sub
xchg
pop
roll
mov
sar
mov
jbe
adc
lods
pusha
pushf
inc
mov
cmp
push
jge
xor
xchg
mov
adc
jge
movsl
outsl
das
cmp
jge
mov
jecxz
popf
adc
mov
dec
add
loope
add
jno
mov
push
pop
outsl
mov
iret
mov
fmulp
fwait
push
xor
test
pop
inc
add
jno
lahf
xor
jb
notb
jge
xchg
cmpsb
aas
mov
jmp
popl
ret
lock
adc
xorb
pop
pop
popf
rclb
cmp
push
clc
sbb
push
sbb
sbb
dec
sbb
pushf
ds
add
stos
test
fdivrl
nop
lods
cmp
adc
sbb
movsl
ret
rclb
cltd
mov
or
fiadds
mov
loop
ds
jb
mov
mov
int3
js
aam
out
mov
add
cmpsb
ljmp
add
add
mov
dec
je
xor
loop
std
aaa
out
ljmp
and
mov
outsl
jb
xor
loopne
cmpsb
lods
push
mov
ss
icebp
cli
mov
stos
ret
lods
pop
mov
add
pushf
or
pop
cwtl
test
pop
ret
rorl
nop
lret
repz
push
ftst
jns
xchg
push
into
ret
push
mov
jecxz
inc
mov
arpl
test
and
xlat
rolb
xchg
add
loope
into
sbb
bnd
mov
pop
test
and
dec
mov
jg
or
test
cs
inc
xchg
lds
mov
lock
mov
cmc
adc
outsl
jbe
hlt
in
in
inc
imul
add
adc
daa
xor
lret
cld
out
data16
mov
scas
insl
mov
sub
jnp
xor
and
out
sub
mov
adc
sahf
lahf
or
mov
push
jmp
jmp
and
lock
or
jns
dec
outsb
and
mov
dec
dec
dec
xlat
fst
scas
mov
loope
add
popa
add
adc
cmp
pop
lcall
fldl
add
arpl
xor
sahf
lret
cmp
inc
call
sub
dec
insb
push
cmc
push
mov
and
add
cmp
inc
pop
jge
sbb
dec
daa
pop
or
sbb
sbb
stos
in
push
popl
inc
jge
mov
ss
mov
enter
xor
push
or
sbb
cmp
push
and
movsl
mov
inc
push
scas
ljmp
pop
in
mov
popa
sbb
sbb
test
ljmp
sub
sahf
adc
adc
leave
sbb
push
stos
je
mov
mov
cmp
outsl
sub
and
mov
sbb
xchg
push
add
add
pop
pop
sbb
xchg
adc
out
sahf
pop
jb
sbb
arpl
mov
enter
arpl
adc
or
sub
sahf
mov
fiaddl
lret
cmc
inc
fs
or
addb
pushf
xor
pusha
adc
fimull
jmp
sbb
js
add
adc
fldt
xor
push
mov
cltd
outsl
pop
ds
mov
inc
out
adc
jne
add
lea
pop
inc
fs
xchg
loop
sub
popa
lret
push
sbb
shll
cmpsl
pop
bound
daa
shlb
lret
mov
adc
rcll
imul
sar
shr
int
ss
out
negl
pop
aas
dec
cmp
mov
sub
test
lds
adc
xlat
std
cmpb
adc
js
inc
sti
and
repz
cmpsl
inc
xchg
out
pop
jle
ret
push
fstp
or
je
outsb
pop
xor
mov
fwait
push
xchg
dec
xchg
aam
add
insb
stc
jae
shr
or
add
bnd
int3
mov
dec
cmp
jnp
repnz
sar
nop
les
xchg
or
inc
pusha
aaa
rolb
movsl
jno
adc
lea
and
xchg
ja
ljmp
pop
jns
lds
bound
lods
aaa
ljmp
pushf
aas
push
fisttps
jb
push
daa
dec
dec
aaa
cmp
pop
dec
shl
and
cmp
jp
jne
push
dec
nop
insl
in
sub
fldenv
inc
lret
cmpsl
dec
aam
mov
lahf
mov
test
xchg
les
or
xchg
aam
mov
les
xchg
mov
lods
leave
inc
or
mov
lock
rorb
lcall
mov
fidivrs
mov
stos
mov
nop
andl
imul
mov
lds
pop
stc
jns
inc
clc
es
aas
fwait
icebp
scas
mov
cmp
jb
repz
stos
ljmp
outsb
ret
push
jns
in
out
mov
adc
test
aas
sahf
icebp
push
xchg
dec
imul
dec
jbe
cmpsb
cwtl
xchg
add
and
test
test
or
sub
je
mov
push
shl
in
pop
inc
xorb
sar
or
fistps
mov
scas
sub
adc
dec
inc
cld
push
inc
rol
loop
fcoms
xchg
and
or
lock
mov
jno
dec
imul
push
pusha
mov
ret
lcall
add
loope
ss
cmc
rol
pop
and
lea
lret
and
mov
lds
cld
xchg
mov
pushf
push
std
pop
jnp
int
fimuls
outsb
mov
lcall
idivl
add
lods
hlt
mov
xchg
dec
loop
out
pop
add
pop
das
fsubrl
dec
pop
popf
sar
pop
movsb
enter
test
jno
dec
xchg
nop
xchg
in
ret
movnti
xor
jb
fcmovnu
mov
lret
mov
cmp
pop
jecxz
insb
push
dec
cmp
sbb
imul
call
scas
fucomip
ret
mov
sbb
pop
mov
femms
cmp
movb
test
std
imul
iret
shrb
xor
hlt
cli
jb
add
repnz
mov
pop
xchg
enter
fdiv
out
mov
mov
jge
inc
dec
mov
cmp
add
mov
and
jg
cltd
cmp
and
lea
test
cmpsl
or
sahf
addr16
gs
aam
pop
adc
jnp
pop
mov
scas
jg
arpl
mov
mov
and
mov
addr16
sbb
inc
push
movsl
outsb
jl
loop
add
les
aad
js
mov
data16
xchg
pop
mov
sbb
mov
fwait
jno
sub
lahf
in
fstl
inc
mov
xor
sahf
movlps
sub
sti
xor
enter
and
sbb
fs
mov
outsl
adcl
jecxz
jbe
movsb
sbb
push
add
cmpsb
jge
divb
lods
mov
push
dec
add
dec
dec
lock
outsl
loope
repnz
push
and
add
mov
mov
mul
popa
aam
lds
cld
fistpl
jl
xchg
out
aaa
adc
cmp
outsl
cmp
add
jo
int3
mov
xchg
cwtl
and
cmp
cmp
movsb
aam
lods
or
xchg
pusha
lret
js
pop
shr
shlb
adc
adc
fisttpl
or
into
inc
movsb
xor
xchg
xchg
mov
rcr
aam
push
mov
mov
mov
inc
mov
stos
out
and
jae
imul
ficompl
dec
adc
rorl
dec
mov
push
pop
mov
test
scas
and
mov
mov
fwait
cmpsb
out
in
out
scas
dec
fisttpll
cmp
xchg
or
cltd
dec
cli
cwtl
out
push
sub
push
fistps
or
or
jmp
sahf
xchg
mov
mov
imul
xor
dec
pop
xchg
repnz
pop
lahf
jns
cmp
cmp
insl
mov
or
or
pop
cltd
aad
insl
jmp
clc
scas
stos
ljmp
lods
dec
xor
xchg
lcall
movsb
or
sub
jmp
jns
mov
test
int
in
mov
dec
mov
popa
push
jge
shrl
lea
sbb
ljmp
push
mov
or
mov
iret
xor
xor
stc
jecxz
gs
out
fcomps
jge
int3
sub
add
in
push
imul
mov
cli
mov
mov
outsl
lcall
mov
and
lods
push
cmc
lods
dec
dec
cmp
fisubs
cs
push
and
popf
dec
inc
adc
dec
push
andl
jae
jbe
pop
and
push
test
iret
push
lahf
shlb
lock
or
les
xor
add
mov
cmp
pop
mov
std
dec
rcr
fiadds
pop
xchg
insb
pcmpeqd
adc
cmpb
test
iret
fnstcw
mov
fisttpl
push
test
dec
mov
dec
inc
test
int
push
repz
pop
xlat
pusha
mov
jl
and
push
enter
and
mov
subl
pop
xor
outsl
jno
int
popf
mov
movsl
push
int3
mov
jns
inc
gs
int3
mov
and
adc
mov
rcrb
shrl
sti
adc
lods
mov
rorl
adc
fwait
adcb
xchg
xor
repnz
stos
xor
orb
arpl
in
fstpt
lret
insl
cli
xor
out
xlat
add
in
mov
and
pop
test
arpl
or
cmp
and
roll
rolb
push
and
inc
xor
xor
ja
mov
cwtl
xor
sbb
xchg
rclb
xor
lea
jmp
adc
jae
out
pop
mov
adc
push
pop
addr16
out
pop
das
icebp
es
dec
xchg
fcoms
rol
ja
mov
inc
ret
test
jecxz
jle
insb
cmp
push
sbb
idivl
push
pop
xor
mov
cwtl
pop
nop
cld
icebp
pop
bound
add
sub
sbb
cli
add
imul
cmc
mov
cmp
gs
in
lods
pop
test
mov
orb
xlat
pop
mov
pop
out
addr16
add
pusha
push
push
cmp
mov
adc
not
in
mov
pop
pop
lds
fsub
push
xor
jae
xchg
pop
xlat
das
cmp
lret
punpcklbw
jae
jo
xor
jb
add
pusha
mov
mov
sti
push
out
pop
ror
lcall
adc
cmp
mov
xor
fwait
fwait
orps
add
mov
add
mov
mov
popf
into
insb
mov
pusha
cmp
mov
jne
loop
icebp
mov
sbb
dec
and
dec
xchg
cltd
jno
out
cmp
fwait
mov
mov
and
out
inc
shlb
scas
test
push
jo
jp
sbb
imul
xchg
leave
dec
push
repnz
and
test
jne
jno
ret
dec
dec
stc
stos
xor
iret
bound
inc
push
pop
dec
xchg
add
xchg
pop
adc
sbb
xor
lahf
jmp
and
frstor
sbb
pushf
mov
mov
push
loopne
cmp
xchg
addr16
lods
aad
or
mov
test
fcom
les
movsb
enter
iret
ja
mov
xor
cmp
or
mov
and
fists
xor
popa
fs
aaa
and
jcxz
jo
dec
inc
push
pop
clc
lret
jle
stos
mov
xor
and
add
or
push
add
cmp
cmpb
sbb
shrb
push
out
inc
inc
incl
sub
jne
stos
or
aam
jnp
out
repz
mov
lahf
mov
cltd
mov
call
and
jecxz
cwtl
shll
jge
vxorps
adc
dec
hlt
mov
mov
test
xchg
mov
xchg
cwtl
push
inc
int3
fs
pusha
bnd
dec
imul
notb
pop
nop
out
mov
movsl
push
test
push
cmp
lret
lcall
xor
out
adc
sub
sbb
cwtl
push
dec
inc
mov
fdivl
aad
cmpsb
scas
mov
jg
out
dec
push
repnz
xchg
dec
jg
ss
sarb
pop
mov
fs
fnsave
aaa
je
je
outsb
xchg
lret
rorb
mov
sub
mov
xor
mov
outsl
jecxz
add
das
cs
leave
popa
jl
jae
nop
inc
inc
cmp
jns
and
or
inc
mov
loopne
cmp
pop
outsb
cld
or
xchg
add
fwait
adc
mov
test
aam
call
cmpsb
lret
imull
ljmp
add
shlb
sbb
jmp
inc
jbe
andl
add
insb
jb
in
dec
add
clc
clc
imul
sbb
xor
cmp
test
push
jecxz
and
cmp
loop
in
iret
xor
push
pusha
sbb
sub
pop
jo
dec
jl
repz
push
lret
stos
lcall
loopne
or
icebp
dec
xor
sub
inc
mov
xor
loopne
cld
dec
stc
aam
lahf
cmp
loope
in
sbb
xor
negb
lea
cltd
jp
sbb
mov
hlt
imul
xor
xor
rclb
cmpb
jne
stos
xor
jl
add
cmc
jecxz
stos
mov
mov
test
sbb
pop
xchg
xchg
test
ds
pop
xchg
scas
sahf
adc
mov
cmpsb
dec
rcr
xor
ds
pusha
cli
out
pop
xchg
loop
add
jo
inc
jo
repz
data16
cs
or
mov
inc
add
dec
shlb
or
cmp
inc
loope
push
and
jne
sbb
addr16
jnp
xor
test
ja
dec
sub
jl
popa
loop
cmp
incl
or
mov
ret
ds
cld
stos
xlat
mov
fisttpll
imul
leave
mov
fwait
test
lods
and
cwtl
pop
push
pop
popf
dec
in
arpl
cmp
xchg
dec
std
or
aam
inc
pop
push
jb
xor
push
push
push
xchg
lcall
stos
std
pop
call
fwait
dec
test
jnp
iret
push
ffree
repz
xchg
sbb
stc
notl
clc
stc
stc
fmuls
pop
sub
enter
ficompl
cmpsl
iret
push
cmc
ret
fwait
outsl
in
lret
cmp
cs
mov
call
popf
fstpl
dec
mov
cltd
sahf
mov
daa
and
hlt
int
xlat
dec
jg
xchg
push
jne
fcmove
mov
xor
popa
xor
loope
fldl
das
xor
insb
cmp
stos
hlt
adc
adc
adc
sti
xlat
mov
lock
std
add
lcall
and
sbb
xchg
sbb
dec
cmp
xchg
fs
out
testl
icebp
push
push
dec
ljmp
mov
pop
mov
outsl
add
cmc
hlt
fiaddl
or
ds
ja
loop
mov
stc
push
fcmovne
or
xor
jmp
call
push
push
and
jmp
and
add
xor
mov
stos
sbb
cmp
cli
adc
fsubl
pop
cmp
dec
cmp
rcrb
cmpsl
sti
in
sub
xchg
js
sbb
xchg
sahf
repnz
adc
fucom
dec
test
fstps
lahf
ret
adc
stc
arpl
push
mov
mov
les
push
sahf
mov
in
loope
mov
fcmovnbe
notb
cmp
mov
dec
mov
sarl
mov
sbb
adc
mov
hlt
sbb
push
xor
dec
mov
mov
mov
inc
adcb
scas
rorb
ljmp
scas
decb
clc
inc
loopne
out
test
cmp
fidivrs
adc
loope
jne
hlt
jle
inc
sub
jne
inc
add
and
fsub
stc
xchg
rorb
pop
mov
cltd
icebp
mov
sbb
mov
adc
scas
xchg
andb
and
xchg
pop
mov
xor
mov
pop
mov
outsb
inc
mov
jge
mov
pop
ds
fdivl
lods
inc
lret
pop
aaa
xchg
push
adc
in
dec
js
sub
xchg
pusha
ret
cmp
adc
mov
test
cli
push
cmc
mov
cmp
test
fnsave
and
jns
test
popf
pop
jbe
popl
nop
mov
icebp
or
cmp
js
sbb
test
or
xor
repz
dec
lea
clc
mov
jo
xchg
sbb
shlb
cmp
cld
stc
and
mov
shll
mov
mov
jg
cmpsb
push
pop
dec
int
jns
imul
lret
dec
scas
inc
and
xchg
sbb
repz
insl
imul
movsl
cmp
mov
push
add
fsub
stc
out
pop
ljmp
sbb
fistpl
pushf
fldt
aaa
repnz
xchg
or
aas
mov
iret
das
rorb
into
decl
test
mov
xor
jecxz
mov
adc
xchg
mov
mov
stos
sahf
cld
mov
mov
jmp
xor
subl
mov
mov
xchg
push
fdiv
xchg
les
clc
das
or
adc
dec
jbe,pt
stc
stos
rol
or
sub
stc
inc
jb
mov
cmp
jmp
xchg
pop
adc
cltd
push
scas
in
adc
aam
cs
frstor
mov
ret
adc
add
int3
fldenv
aad
xor
add
stos
dec
movsb
push
sub
int
xor
insb
js
loopne
pop
xchg
lods
std
call
sbb
or
push
mov
mov
cli
inc
pusha
mov
cmp
das
mov
sahf
mov
imul
mov
push
sbb
mov
pop
imul
sbb
or
sbb
sub
mov
insl
add
and
add
cmpsl
aas
mov
mov
fs
into
sbb
daa
enter
jno
lock
cmp
ljmp
push
mov
ret
mov
pop
mov
fcomip
testb
add
sbb
mov
repz
xlat
pop
jge
sbb
mov
lret
inc
sbb
lret
mov
cmp
dec
add
jmp
dec
pop
mov
or
out
notl
subl
rcrb
addl
pop
stc
invd
ja
nop
jne
mov
push
fisttpl
mov
sbbl
push
xlat
and
inc
sub
imul
sbb
sub
call
xchg
adc
cltd
sbb
adc
lret
sub
aas
fistl
jo
mov
rcll
int
mov
outsl
jecxz
rcrl
xor
loop
in
mov
dec
out
sbbl
ds
jg
sbb
inc
push
into
inc
cli
cltd
lahf
push
iret
ljmp
lods
jge
add
or
fcmovne
xchg
dec
test
ret
inc
jl
adc
in
aaa
cmpl
dec
mov
cmp
mov
daa
jb
mov
inc
out
fistpll
pop
mov
jae
popa
xchg
adc
out
add
inc
xor
cmp
adc
imul
imul
dec
mov
or
test
mov
push
iret
enter
mov
test
and
pop
orb
daa
or
out
int
xor
addr16
movsl
cli
enter
mov
mov
rcrb
popa
lods
sti
add
adc
dec
sub
mov
mov
les
adcl
mov
sbb
scas
xor
dec
and
cmpsl
inc
xchg
push
loope
lods
add
jle
cld
fisttps
notb
sahf
cld
sub
dec
push
cmpsb
dec
bound
inc
ljmp
push
arpl
lcall
dec
rep
xor
dec
inc
xchg
cld
add
push
es
das
mov
rorb
sub
xor
xchg
aad
cmpsb
inc
shlb
pop
insl
cmc
jae
mov
inc
ret
mov
inc
xor
lds
out
into
cli
outsb
xor
mov
fwait
xor
pop
mov
lea
sub
jl
mov
jg
filds
icebp
lock
lods
in
test
push
insl
dec
xchg
test
jmp
mov
cwtl
pushf
xchg
cli
sbb
push
pop
jl
or
jno
push
dec
punpcklwd
ja
or
in
cli
jo
imul
pushf
mov
sbb
js
hlt
pop
cld
dec
xchg
shl
test
js
mov
add
cmp
arpl
mov
insl
mov
mov
sbb
fidivl
mov
aad
xchg
addr16
sbb
rcrb
cmc
jle
mov
sar
inc
out
jnp
fcomp
outsl
lods
arpl
enter
adc
loope
push
out
push
push
add
cli
frstor
sub
jmp
rcl
jl
rorl
pusha
mov
cli
mov
mov
loop
repz
xchg
sub
jo
add
pop
inc
mov
pop
adc
nop
pop
repnz
sti
sub
mov
sbb
mov
lahf
mov
dec
dec
dec
jp
mov
cmp
shrl
add
adc
shll
adc
cmpsl
push
xchg
jle
push
add
jmp
push
cs
jmp
jae
sub
jmp
sahf
andb
cwtl
lret
aas
jg
roll
js
pusha
and
pop
das
hlt
cmp
push
inc
inc
js
jl
cmp
mov
jmp
cwtl
mov
or
pop
cmp
clc
adc
test
outsb
das
or
or
dec
cmp
push
xchg
mov
notl
ret
in
rorb
imull
mov
sbb
movsl
cmp
mov
push
lods
movsb
mov
jno
ds
xlat
daa
adc
mov
test
icebp
push
jo
imul
and
push
sub
int3
pushf
out
in
outsl
dec
nop
jl
dec
inc
bound
stos
testb
mov
sbb
adc
and
outsl
mov
mov
into
pop
dec
iret
lret
jecxz
test
mov
or
xlat
js
sub
jl
jae
loop
sbb
pop
mov
dec
xchg
sbb
or
pop
add
je
ret
jno
lods
push
lret
or
icebp
adc
xchg
inc
lods
mov
pop
inc
jbe
sub
pop
call
add
mov
testb
and
xor
adc
jle
imul
inc
imul
cmp
and
frstor
js
aam
cld
outsb
fsub
cltd
mov
or
outsb
out
jp
subl
mov
xchg
pop
push
jbe
pusha
jecxz
xchg
test
aad
mov
pop
push
mov
xchg
jmp
movsl
aas
xor
cwtl
or
mull
in
pop
lret
hlt
pop
movsb
adc
cmp
aas
test
std
sbb
and
loope
dec
mov
xchg
mov
arpl
mov
std
jno
adc
aaa
imul
aaa
addr16
fiadds
xor
adcb
test
xchg
inc
jo
pop
push
scas
add
test
cwtl
push
int
movsb
out
pop
inc
pop
dec
jo
aaa
push
sti
add
nop
push
lret
jl
ret
dec
push
mov
int
add
jle
or
test
lods
cmp
push
popf
inc
mov
add
stc
pop
add
inc
sbbl
adc
or
test
inc
int3
popa
stc
enter
mov
inc
scas
mov
push
jge
jb
sti
xchg
xchg
add
push
xor
mov
add
xchg
dec
out
nop
dec
icebp
arpl
dec
or
scas
imul
xor
out
sub
inc
dec
and
pusha
shrb
fists
loopne
cmpsb
jle
sbb
inc
dec
xchg
mov
cmp
pop
sbb
mov
jl
mov
or
and
fsubr
fistpl
cld
cmc
sbb
inc
sahf
dec
mov
dec
add
jno
adc
xlat
nop
in
pop
mov
add
or
addb
jbe
adc
inc
ficomps
sub
mov
push
dec
xchg
sub
xchg
aad
test
nop
pop
pop
out
jmp
test
icebp
outsb
outsb
je
mov
or
fldt
or
jp
sar
fdivp
mov
lods
adc
pop
outsb
push
sbb
inc
decl
stos
xchg
ficompl
push
data16
adc
jle
cs
les
fistpll
ss
jge
jo
jns
outsl
xor
push
sahf
scas
stc
cmp
cmp
sbb
mov
fiaddl
or
sub
dec
dec
cwtl
sti
inc
xchg
pusha
inc
loope
sbb
sbb
lods
xchg
hlt
popa
shll
xchg
mov
hlt
push
daa
mov
in
pop
push
loopne
in
nop
mov
dec
mov
les
dec
push
das
mov
stc
loopne
imul
mov
sub
mov
loopne
jnp
stos
enter
pop
inc
mov
bound
movsb
sub
aam
sbb
sub
cs
pop
lret
aaa
sub
aas
adc
repnz
jmp
mov
lds
mov
cvtdq2ps
lds
test
rol
sbb
les
pop
pop
sub
fsubr
and
fstl
cmp
cs
xchg
xchg
int3
xchg
pop
sbb
outsb
pop
mov
test
dec
mov
jge
push
movsb
popf
mov
xchg
inc
mov
cld
xor
add
and
xchg
cwtl
fidivl
xor
test
data16
rorl
and
sti
adc
sbb
xchg
lods
int3
jns
movsl
es
outsl
bound
cwtl
xor
lds
pop
lea
push
mov
clc
jne
xchg
ds
cmp
adc
mov
pop
and
or
inc
adc
add
ljmp
or
push
xlat
jecxz
jbe
mov
cmp
push
lock
fcomp
xchg
int
xlat
jnp
test
fsubrl
clc
movsl
mov
lock
out
add
xor
add
imul
cmp
push
cmpsl
push
lcall
sub
mov
aas
pusha
lahf
das
dec
sbb
test
cmp
scas
add
ljmp
movsb
icebp
int3
imul
cmpsl
xchg
and
mov
in
pop
push
or
mov
mov
push
mov
daa
sub
leave
inc
sub
mov
sbb
inc
and
andb
loope
out
ficomps
ret
push
filds
jp
iret
xchg
xor
or
inc
idivl
xor
xor
xchg
xchg
faddp
pop
adcl
pop
or
xchg
mov
lods
jns
insb
repnz
cmp
sub
aad
jae
cs
push
mov
mov
push
scas
sbb
pop
fcmovu
xor
movsb
xchg
xchg
mov
sub
mov
mov
push
xchg
dec
call
xchg
jb
cmc
mov
jmp
cmc
orl
test
pop
mov
sub
pop
xchg
dec
scas
add
mov
jp
pop
sbb
out
dec
addr16
shl
stc
mov
mov
fsubs
roll
clc
aad
and
movsb
pop
or
mov
in
leave
into
orl
sbb
and
jle
loope
push
pop
addl
call
lahf
pop
lret
cmp
pop
mov
arpl
adc
pop
dec
call
sub
push
daa
addr16
test
sbb
inc
mov
je
and
les
jno
push
dec
and
sbb
mov
subb
dec
cmp
cmp
add
cmp
jle
xchg
sbb
add
xchg
divb
in
mov
push
or
popf
sbb
icebp
sub
aas
push
call
or
push
loope
inc
je
divb
aas
in
je
outsl
mov
lods
and
outsl
dec
bound
mov
push
cmp
inc
fmuls
sbb
pop
nop
je
or
ds
fadd
sbb
inc
movsb
pushf
lods
xchg
dec
std
cwtl
adc
inc
mov
ficompl
fldcw
dec
cmc
paddb
ds
movsl
clc
adc
cli
add
mov
into
lret
ret
fisttpll
push
push
imul
stos
test
or
jno
rcll
ret
inc
gs
push
dec
cmp
leave
pop
iret
cmp
lods
dec
or
clc
xchg
xchg
leave
dec
andl
cwtl
mov
sbb
imul
xchg
idiv
movsb
cmc
and
inc
fs
ja
mov
xchg
push
push
movsb
ror
lret
jb
xor
pop
mov
lea
movsl
cld
xor
stos
xor
lods
shlb
shlb
das
xor
cli
or
cmp
mov
lods
inc
out
insl
add
loopne
cmp
pop
aas
xchg
sahf
push
mov
gs
mov
rcll
rcrl
outsl
dec
xor
sahf
cmc
out
pushf
insl
mov
and
jg
sbb
pop
cmp
jb
or
rcrl
fnstcw
ror
xchg
repz
pop
mov
inc
xchg
pop
jmp
mov
and
aam
std
sbb
test
mov
add
test
mov
xor
jp
push
jl
shrl
mov
push
ja
jne
or
dec
or
jns
push
jns
shl
test
mov
test
dec
add
pop
xlat
mov
push
sar
cli
pop
sub
or
xor
push
clc
mov
mov
push
pop
fistps
dec
sub
xor
cli
sub
fisttpl
ljmp
sti
push
sbb
pop
push
dec
shll
iret
pop
mov
sub
pop
jnp
xchg
push
dec
xrelease
fildl
test
xchg
cmp
cmp
out
cltd
mov
in
cltd
push
mov
adc
push
ss
push
pop
cmp
inc
aaa
fiadds
lock
cli
shrb
push
xchg
cmpsb
out
xchg
xor
arpl
dec
xor
mov
push
shlb
lock
ja
popa
cmp
mov
xor
insl
imul
sub
in
or
popa
mov
insl
dec
test
cli
dec
nop
and
xor
or
inc
push
fdivrl
js
enter
jmp
lret
fs
lods
shlb
xor
daa
jl
mov
inc
inc
dec
mov
push
xor
popf
pop
sub
lret
test
icebp
in
mov
xor
add
inc
ja
xchg
adc
xchg
aam
sub
jb
and
xchg
push
cmc
push
adc
rcrl
push
cmp
decb
mov
or
ljmp
stc
push
leave
jp
outsl
ss
cmpsl
add
or
adc
and
cltd
mov
mov
jne
iret
movsb
stos
pop
ja
mov
in
or
or
pop
les
dec
mov
cmpl
xor
dec
cmp
cmp
cld
cld
and
jp
push
ds
lods
int
mov
in
xor
stos
je
jge
notl
sub
dec
xor
ret
in
mov
mov
cmp
sti
add
mov
adc
mov
int
and
pop
stc
mov
rclb
push
push
cmp
and
cld
das
jmp
test
mov
lahf
or
push
fcmovnu
or
movnti
aad
or
sbb
pop
adc
fimull
sbb
jmp
std
mov
pop
mov
movsb
fdivs
jecxz
bound
fidivrl
std
stos
inc
out
test
or
pop
pushf
xchg
jl
ret
xchg
cmp
dec
cld
movsl
test
sbb
mov
or
insb
call
mov
arpl
sub
mov
leave
lahf
aad
and
xchg
xlat
inc
int
insb
lret
lock
xor
push
xor
xchg
add
mov
add
fwait
push
mov
lds
lahf
test
nop
pop
pop
jns
sti
mov
test
xor
lods
das
loope
lahf
fs
aad
xchg
pop
ret
daa
hlt
pop
icebp
stos
sub
xchg
daa
inc
test
out
cmpsl
push
add
cmpsb
mov
and
inc
jnp
jmp
in
adc
cmp
stc
mov
iret
pop
scas
inc
jecxz
and
xchg
ss
cmpsl
xchg
sbb
push
test
int3
cmp
and
je
push
add
push
xchg
lea
imul
cmc
dec
lods
jmp
cmp
lcall
jg
dec
popa
popa
mov
cmpsl
mov
in
fdivs
fs
cmp
adc
mov
or
out
imul
mov
loopne
mov
jecxz
lcall
xor
push
and
jecxz
test
call
mov
cli
xchg
push
adc
movsb
inc
adc
daa
out
stos
lcall
ret
lds
dec
sbb
mov
scas
pop
test
inc
out
clc
inc
sub
sub
xchg
leave
hlt
insb
cmp
and
jge
sub
int
out
ret
lcall
push
ss
mov
daa
mov
in
xor
test
push
sahf
dec
stos
cmp
dec
sbb
filds
dec
insl
push
movhps
xchg
out
or
fs
adc
xchg
jmp
xchg
sbbl
adc
adc
inc
and
sub
cli
mov
sbb
lods
ja
inc
sarl
movsl
mov
rcll
cmp
inc
shrl
and
stos
push
pusha
cmp
dec
rdpmc
stc
inc
shr
sti
sti
imul
adc
adc
fists
pop
push
pop
add
pusha
xchg
adc
loopne
aad
and
icebp
lret
sahf
inc
add
int3
cmp
into
loope
or
xor
sahf
nop
sbb
inc
in
outsl
mov
or
and
adc
mov
xchg
int3
jl
xor
add
pop
in
out
xchg
js
push
call
dec
xchg
lret
popa
test
notl
sub
push
jb
jp
jmp
push
sbb
mov
insl
and
inc
pushf
mulb
in
dec
mov
xchg
mov
subl
fstpl
arpl
pushf
mov
adc
xor
push
inc
sbb
movsl
test
jno
testb
andb
sub
xchg
imul
inc
scas
cmpsb
lds
cmp
adc
push
mov
clc
mov
fcmovnb
inc
cwtl
int
dec
mov
cmp
out
clc
les
mov
adc
cmp
cld
xchg
mov
popa
loop
rcll
push
in
and
dec
mov
and
repnz
jbe
into
adcb
inc
inc
cli
fsubs
mov
in
push
pushf
inc
mov
sbb
cmc
andl
stos
icebp
xor
je
push
js
into
and
jae
es
mov
pop
lods
cmp
xchg
xor
pop
lahf
dec
cltd
xchg
aam
aad
pop
in
popa
sbb
enter
dec
inc
inc
push
xor
push
push
addr16
addl
inc
add
aam
rol
push
jp
insb
ljmp
mov
sarb
dec
inc
sub
dec
out
mov
sarl
mov
in
cmp
adc
sbb
inc
mov
mov
or
es
popa
stos
idiv
ret
stc
sbb
cmp
inc
jno
fwait
jmp
xlat
out
mov
xchg
sbb
fs
out
adc
out
fwait
inc
data16
in
pop
adc
and
xor
test
loopne
ljmp
mov
jmp
test
mov
push
push
faddp
pop
mov
icebp
test
pop
popa
movsl
sub
sbb
mov
cmpsb
imul
aad
int
arpl
mov
mov
imul
jne
or
rcl
mov
cmc
lcall
gs
lds
fimull
movsl
repz
cld
jb
pop
mov
xchg
push
add
push
xor
push
aas
pop
add
std
jo
fcmovnb
leave
call
popa
cmp
mov
sbb
subl
inc
add
mov
notb
dec
aas
into
in
xchg
lahf
mov
imul
jno
je
jle
add
mov
enter
add
fistpll
add
pushf
ret
adc
mov
inc
and
xor
into
pop
rorb
add
add
inc
mov
cmp
rcr
mov
inc
stos
jns
sbb
xchg
cmp
test
mov
clc
orb
fwait
pop
ja
scas
mov
inc
pop
mov
test
jbe
sahf
test
and
stos
lcall
or
fildl
pop
test
inc
mov
add
gs
xlat
std
adc
push
popf
movsb
mov
mov
ror
outsb
mov
pop
pop
jno
xor
xor
hlt
lahf
hlt
fsubrp
stos
ja
mov
stc
adc
ds
jb
sarb
or
mov
sbb
fwait
js
cmpb
push
enter
sbb
pop
out
inc
pop
push
mov
pop
into
mov
jecxz
xchg
repz
loop
outsb
jge
aam
add
fbld
fwait
xchg
mov
add
leave
popa
rorb
mov
mov
icebp
ficoms
xchg
pushf
xchg
ret
ret
into
or
daa
les
je
pop
pop
inc
sub
dec
xor
rcr
shlb
push
and
popa
mov
inc
data16
inc
outsb
mov
dec
jnp
xchg
push
stc
lds
adc
sarl
jl
lds
push
test
jbe
lods
aas
and
cmc
out
sbb
pop
sahf
in
sub
sub
push
fs
ja
stos
adc
or
xlat
or
mov
or
push
mov
das
out
dec
sub
or
mov
mov
mov
in
stos
mov
dec
pop
dec
sbb
sub
dec
mov
mov
rcrl
lret
lcall
out
or
outsb
push
push
mov
dec
pop
push
push
push
inc
push
xchg
jb
inc
or
xchg
call
jno
stc
out
std
inc
ds
outsl
sbb
push
mov
in
sub
imul
mov
xchg
divl
inc
pop
jne
push
inc
arpl
pop
dec
nop
mov
repz
test
adc
jbe
mov
inc
aad
and
cmp
mov
dec
test
and
ret
add
jge
inc
outsl
adc
in
je
mov
or
test
fs
ret
adc
sbb
push
rcrb
fldt
pop
outsl
mov
mov
pushf
sub
sbb
out
xchg
scas
les
in
jno
or
adc
shlb
mov
dec
mov
les
xchg
in
sahf
pop
push
iret
aam
push
xor
or
repnz
fstps
mov
movsb
jge
pop
outsb
je
dec
xlat
cmp
mov
inc
mov
mov
ret
aam
mov
insl
sbb
jmp
mov
cwtl
push
ficomps
ret
inc
mov
in
rorb
and
les
les
mov
aas
lods
test
ret
loope
sbb
adc
mov
popl
add
clc
lds
pop
fadds
repz
xchg
jno
enter
fldcw
mov
xor
cmp
test
mov
je
mov
test
pop
push
mov
mov
fwait
pop
sahf
shlb
jno
test
add
imul
sbb
ja
push
xor
stc
test
xchg
fadds
jb
push
sti
sbb
mov
sti
shlb
movsl
sti
xchg
out
add
ljmp
lret
and
push
ljmp
sub
movsb
movsb
push
scas
js
xor
incl
push
iret
dec
mov
cmp
mov
lods
gs
in
aam
int
test
push
jl
adc
inc
cs
push
push
push
stos
inc
insl
cmpsb
stos
mov
adcb
sbb
popa
test
loop
cwtl
xlat
push
xchg
mov
testb
cs
sub
xchg
inc
adc
jbe
xlat
sbb
ret
push
cmp
xor
int
add
shrl
xorl
dec
fsave
div
mov
pop
mov
or
cmpsb
negb
push
imul
xchg
scas
sbb
aam
xlat
je
xchg
push
mov
mov
aas
sub
jmp
jnp
pop
dec
lret
push
mov
inc
frstor
xor
cli
push
shrl
pop
test
sbb
shlb
out
cmp
ljmp
loopne
adc
mov
aam
gs
jg
mov
mov
lahf
adc
xchg
jmp
inc
mov
insl
andl
stos
xchg
dec
xlat
push
pop
lods
jbe
add
xchg
mov
out
add
out
and
mov
push
gs
loopne
jo
push
lahf
inc
lcall
sub
push
xchg
stc
addb
data16
dec
and
loope
data16
test
cltd
ret
xchg
cld
add
ffreep
push
or
mov
push
xor
stc
in
test
jg
mov
mov
and
stc
lahf
cs
push
mov
jb
jbe
xchg
daa
jne
aad
ss
inc
xchg
lods
fdivrp
and
out
push
pop
adc
mov
cmpl
outsb
add
popa
mov
add
and
push
fisttps
sbb
add
dec
jnp
nop
in
xchg
mov
or
lret
aaa
push
lret
adc
movsb
and
xor
and
xchg
inc
lods
adc
add
mov
jbe
mov
mov
fisttpl
je
push
call
jne
stos
push
mov
in
cmpsl
test
insb
andb
jnp
int3
sti
cmp
sub
stc
fsubrs
adcl
cmpsb
mov
daa
dec
pop
addr16
mov
mov
push
sbb
rorb
jecxz
scas
cmc
mov
lea
fsubl
cltd
outsl
negl
out
cwtl
int3
mov
mov
pop
subl
mov
dec
test
stc
lcall
xchg
push
inc
mov
xchg
insb
in
and
cwtl
loope
nop
pop
xor
jo
sahf
movsl
scas
dec
or
push
inc
sub
cmc
jecxz
add
dec
xor
pop
loopne
push
mov
lods
addr16
data16
daa
inc
mov
pop
mov
add
mov
and
cmpsb
xchg
ljmp
inc
inc
push
cmp
flds
inc
icebp
not
xor
mov
test
mov
cmpsl
ljmp
mov
aas
push
arpl
mov
push
hlt
cmpsl
loopne
jno
sub
loop
js
dec
jle
jb
insb
sub
xor
iret
into
cmpsb
push
dec
ss
or
stos
mov
jecxz
add
les
push
cmp
jnp
push
cmp
xchg
or
idivl
pusha
mov
mov
and
lcall
cmp
inc
idiv
mov
ds
fldt
ds
push
cmp
xlat
iret
mov
inc
popf
mov
mov
and
inc
sub
mov
inc
fcmovne
pop
dec
xchg
push
add
out
addr16
or
cmp
in
and
pop
sbb
pop
pop
test
lahf
lahf
jno
les
ret
aad
push
push
or
dec
testb
mov
mov
cmp
jno
push
dec
xor
es
mov
out
ds
xor
pop
jo
jnp
or
pop
mov
xchg
inc
push
cmp
ss
stos
ret
test
popa
js
gs
jo
je
call
lret
adc
stc
daa
xor
mov
mov
negl
data16
in
mov
xor
push
mov
and
addr16
inc
lret
arpl
idivl
jge
fsubrs
arpl
lret
and
jb
mov
pop
imulb
xchg
mov
inc
sbb
inc
insl
fisubrs
fistpll
fidivrl
sbb
lea
and
mov
lret
testl
xchg
lret
adc
adc
sub
and
in
lahf
imul
leave
test
arpl
adc
mov
test
imul
inc
jbe
push
lahf
lds
xor
push
xor
addl
int3
adcl
xor
adc
cmc
popf
outsb
dec
pop
popf
test
adc
pop
out
xchg
rolb
and
jno
lret
sbb
mov
roll
sbb
mov
pop
data16
les
popa
adc
dec
arpl
pop
or
push
xorb
push
jo
mov
out
rcrl
push
ljmp
cltd
or
fidivs
adc
or
test
mov
or
jnp
fs
mov
sbb
ds
pop
aad
lret
shlb
stos
and
xchg
outsb
shl
jl
bound
data16
jmp
xor
inc
pop
jg
test
enter
sbb
cmpsl
add
outsl
insb
lock
mov
enter
fists
fiadds
test
lods
sub
jp
jge
or
jp
pop
int3
add
nop
fwait
add
cmp
movsl
mov
lods
ja
aad
int3
ret
sub
mov
icebp
clc
adc
loope
inc
inc
mov
adcl
lret
mov
sub
je
cmp
jbe
jg
xchg
cmp
dec
out
lds
cmp
imul
movhps
mov
ret
adc
das
dec
shrb
shlb
fistps
and
lret
sbb
add
std
enter
xchg
shll
ljmp
xchg
js
mov
cmc
add
popl
mov
cmpsl
xchg
sbb
jae
movups
inc
xchg
sbb
jle
in
inc
push
sbb
imul
repnz
addr16
outsb
arpl
cmp
jnp
test
inc
jo
test
xchg
shlb
in
stos
jne
jmp
push
push
inc
adc
pop
fstpt
pop
mov
mov
pop
xlat
imul
add
add
stc
out
xor
jb
stos
adc
stos
dec
lods
outsb
enter
aad
or
add
cmpsl
cli
xchg
test
pop
lock
mov
nop
insb
jg
xlat
arpl
in
fcomip
leave
cltd
pusha
push
sbb
scas
dec
stos
pop
repnz
gs
add
sbb
ret
and
dec
inc
sub
fstpt
pop
in
sbbb
mov
aad
cmp
mov
mov
pop
and
scas
jbe
in
jmp
out
push
into
ss
sbbb
in
aas
addr16
and
nop
pop
mov
icebp
mov
movsl
xchg
test
add
fprem1
aas
imul
clc
sub
ja
xchg
adc
sub
data16
and
scas
inc
in
loop
xor
jg
xchg
gs
cltd
outsb
mov
sbb
push
shrb
xchg
mov
add
cmp
xchg
inc
movsl
or
xor
adc
xchg
imul
iret
icebp
sub
cmc
icebp
movsl
cmp
rcrb
cmpl
sbb
sub
bnd
shl
cmp
pop
dec
pop
loope
mov
gs
push
dec
lods
aaa
cwtl
aas
orb
imul
into
loope
or
adc
frstor
out
daa
sub
xchg
rclb
shrb
cmp
jl
cmp
push
jle,pt
fs
inc
mov
je
mov
fldt
inc
orb
cwtl
push
jb
pop
mov
sbb
jge
push
sub
xor
jmp
rcl
sub
push
adc
inc
sbb
icebp
or
arpl
add
insb
incb
test
push
jg
into
sbb
cmc
cmp
xor
out
repz
shlb
int3
mov
daa
mov
mov
add
push
xchg
sbb
repz
in
daa
jbe,pn
scas
mov
in
and
pusha
cld
data16
pop
mov
call
adc
inc
rclb
xchg
cmp
mov
mov
outsl
rol
add
lea
pop
loope
bound
sbb
lahf
xor
fists
rorl
pop
inc
mov
push
aad
out
sbb
mov
xchg
or
stos
xor
xchg
sbb
push
cmp
test
fcoms
pop
push
out
call
dec
ja
insl
mov
out
cltd
ret
mov
adc
jbe
mov
or
mov
or
daa
mov
sbb
add
dec
sub
inc
jne
lds
shlb
clc
jmp
ja
test
jb
int3
and
imul
aad
jle
jg
dec
adc
fistpll
int3
out
out
mov
sarl
pushf
xchg
shl
iret
mov
xchg
dec
jl
fmulp
int
int3
inc
lea
lea
push
push
mov
fidivrs
les
jmp
jnp
mov
push
test
std
ffree
insl
subb
inc
into
test
iret
inc
pop
pop
jle
lret
loope
out
push
push
mov
xor
pop
xchg
and
pop
cmpsl
sbb
jle
add
shll
adc
adc
mov
ljmp
into
repnz
pop
sbb
mov
lret
inc
loopne
insw
enter
cmovae
dec
ljmp
add
mov
data16
jns
sub
outsl
test
leave
jns
into
mov
and
pop
mov
xlat
stc
mov
sub
sbbb
mov
sarb
xor
movsl
dec
std
mov
pop
mov
jo
std
mov
adc
lds
repz
inc
jno
pop
jo
inc
jmp
push
dec
inc
popa
lods
outsl
cli
fs
mov
xchg
fisttpl
fs
dec
mov
pop
xchg
test
hlt
jg
push
sahf
cli
or
loope
add
mov
push
aas
aas
jp
sub
pop
adc
push
test
push
aas
pop
arpl
jle
gs
sub
hlt
or
jnp
xor
incl
lret
mov
jno
pop
adcl
adc
fildl
push
adcb
mov
mov
loopne
xor
pusha
add
fcmovnu
push
imul
int3
jno
bound
imull
mov
mov
out
adc
mov
inc
sub
data16
push
dec
int
dec
mov
jne
mov
pop
xchg
cmpsl
or
aad
pop
sbb
mov
mov
sbb
cld
mov
mov
fsubr
stos
dec
sub
cld
pop
cmp
addr16
pop
push
mov
sub
mov
jmp
lcall
xchg
and
je
cmp
sub
dec
std
mov
mov
dec
cmp
push
jg
scas
cmp
addb
fs
push
pop
mov
mov
sub
inc
sbb
lock
nop
out
hlt
sub
ja
sbb
jbe
cmpsl
mov
test
xor
dec
repnz
xor
sub
fisttps
mov
sti
adc
or
pop
loope
or
inc
xchg
test
mov
dec
fnclex
test
dec
mov
jp
sub
cmc
jne
mov
mov
movsb
int
sub
or
test
in
and
cmp
push
dec
in
dec
inc
add
push
add
out
std
add
jo
pop
bound
leave
xchg
js
hlt
scas
loop
sbb
mov
out
add
jp
jbe
insl
xchg
negl
jb
out
lcall
dec
push
adc
xor
cmp
fisttpll
addr16
sbbb
fwait
xor
addb
test
ret
push
sbb
mov
add
fidivl
xor
lahf
sti
es
cmpsl
lret
mov
dec
into
jle
jge
mov
mov
mov
dec
and
nop
xor
lea
stc
xchg
jno
sub
lods
mov
lret
cmp
add
repnz
mov
mov
xor
xor
cs
xchg
add
jmp
imul
or
inc
nop
aam
add
mov
shrb
or
xchg
pand
and
mov
das
addr16
inc
mov
in
xchg
adc
xor
out
inc
adc
lods
jns
xchg
pop
xchg
jne
adc
pushf
xor
leave
sub
push
shrb
xor
add
ljmp
lcall
fcomi
lock
cmp
cli
mov
cmc
jns
outsl
pop
cli
mov
mov
scas
ljmp
jmp
xor
js
sub
and
es
ljmp
ds
pop
mov
jbe
out
test
fistpll
fsubl
sbb
adc
dec
inc
loopne
pop
popf
mov
in
xor
aas
mov
orl
cmp
ror
pop
cs
jge
out
or
xchg
push
fwait
in
mov
xor
hlt
xor
mov
push
xchg
mov
mov
or
jecxz
lahf
pop
sub
in
aaa
pushf
rcrb
mov
xchg
sbb
mov
ret
push
xchg
pop
test
jne
clc
cmp
push
call
repz
xchg
push
fcmovnb
mov
in
jno
jg
stos
dec
repz
aaa
mov
xor
addr16
test
test
xchg
inc
gs
stc
loope
or
call
push
jmp
add
mov
lcall
jo
sbb
stos
cmp
shrb
movl
dec
pop
jne
outsb
pop
xor
jbe
xor
adc
hlt
dec
scas
outsl
mov
test
mov
repz
jnp
outsb
jmp
ficompl
pop
sbbl
and
jb
movsl
cli
jle
dec
pop
enter
aaa
sbb
add
mov
xor
cmp
in
mov
xchg
inc
push
dec
ret
dec
mov
stos
fadd
mov
fdivp
adc
sub
jmp
lea
jp
adc
push
or
out
divl
xor
repz
cmpsb
popa
pop
daa
mov
mov
push
cmc
out
movsl
mov
sub
xchg
push
aad
shlb
aas
mov
cmpsb
nop
movsl
push
mov
sbb
mov
lods
outsb
push
adc
int
adc
and
outsl
mov
mov
stc
and
std
xor
cmpsb
stos
sub
add
jnp
std
std
add
pop
inc
mov
in
repz
lret
rorb
push
mov
cmc
mov
push
out
fidivl
sbb
mov
in
mov
testb
mov
lds
movsl
mull
call
ss
xchg
push
jae
subl
mov
pop
adc
test
xor
adc
adc
loopne
cmc
aam
mov
nop
daa
sti
cmpsb
fucomp
outsb
xchg
fisubrs
dec
xor
lods
pop
adc
pop
cmpsl
and
cmp
les
enter
cwtl
mov
out
push
sub
mov
scas
jp
jns
ret
mov
cmp
sbb
mov
cmp
in
out
pop
movsb
mov
outsb
gs
ficoms
jecxz
iret
mov
jp
dec
adcb
fimuls
inc
gs
mov
push
add
in
jnp
sub
movsb
fcomps
adc
sbbl
xor
mov
mov
in
sub
in
xchg
ret
mov
pop
sbb
test
push
jae
sub
ficomps
push
cmpsl
sub
int3
aad
cmp
dec
loopne
movsb
inc
adc
xchg
xor
cmc
jl
push
imul
pop
pop
xchg
push
mov
cmp
mov
lret
mov
mov
dec
out
xor
decb
icebp
and
pop
bswap
and
mov
pop
xchg
xchg
sarw
shl
xchg
inc
daa
or
pop
inc
mov
stos
fsub
inc
dec
jnp
cmp
out
sbb
and
jo
insl
sbb
dec
adc
icebp
adc
or
pop
test
jnp
inc
inc
sbb
or
ss
sbb
push
stos
mov
lds
pusha
sbb
mov
pop
adcb
sbb
mov
or
rcrl
inc
cmp
aas
fisubs
aaa
mov
out
sti
ds
int3
inc
imull
add
adc
lret
fisttpll
fimull
adc
push
adc
mov
ds
outsl
test
pusha
les
jmp
mov
jmp
xchg
shlb
scas
and
outsl
mov
fmull
ret
jo
pop
mov
push
lods
das
add
xor
shr
pop
mov
mov
dec
mov
out
ja
pop
mov
in
outsl
hlt
mov
ljmp
pop
leave
jb
lea
loop
rcrb
xor
fstl
inc
xchg
mov
in
lods
test
mov
xchg
test
in
inc
xor
mov
push
cmp
cmpsl
add
daa
adcb
lret
jbe
scas
int
mov
cli
loop
cwtl
cli
mov
addr16
pop
jecxz
mov
aaa
and
mov
push
jl
mov
adc
push
dec
out
adc
jnp
cmpsl
mov
movsl
rcr
fimull
mov
cmp
lret
ret
jae
and
cmp
xchg
push
ss
xchg
iret
in
sti
ret
enter
xor
xchg
push
sbb
jne
mov
adc
je
or
ret
cmp
sbb
jo
dec
lds
mov
lds
push
pushl
add
cmpl
pop
xchg
mov
pushf
jno
nop
in
lahf
and
test
xor
out
scas
mov
pusha
js
inc
jg
cmp
and
scas
xchg
inc
mov
mov
push
dec
in
xchg
test
jle
or
bound
sbb
or
push
xor
cmp
mov
aam
popl
mov
xchg
ret
aad
lea
inc
cmpsb
aas
pop
add
pop
nop
sbb
pop
sbb
mov
xor
pop
lods
mov
and
push
mov
in
outsl
ss
ret
jnp
xlat
ret
shrb
mov
fs
pop
scas
and
stos
out
out
ds
ss
cltd
and
sbb
div
xchg
jp
mov
les
inc
dec
imul
int3
or
pop
sbb
out
insb
pop
jbe
daa
jae
int
add
xor
xchg
divl
push
movl
mov
loopne
mov
je
ror
and
cmp
lcall
mov
push
stos
filds
push
mov
lds
cmp
movsl
mov
pushf
test
mov
fucom
add
and
out
roll
enter
lods
iret
inc
fisttps
shrb
mov
rclb
or
adc
dec
bound
call
psubusw
ret
mov
dec
cli
mov
xor
and
jnp
dec
push
cmp
je
pusha
dec
mov
mov
cli
insb
cmpb
sub
shl
dec
pop
mov
ljmp
clc
shrl
xchg
test
inc
outsl
sub
add
jp
arpl
loope
jecxz
push
dec
sub
mov
jae
mov
rolb
xor
out
nop
cmpsl
loop
out
or
dec
cmp
pop
lods
insl
inc
loop
mov
xor
jecxz
out
jmp
lcall
fldcw
enter
hlt
add
dec
cmp
mov
adc
and
lahf
and
fs
sti
psrlq
pop
mov
sahf
sub
and
pop
ljmp
jmp
pop
mov
xchg
dec
jae
xor
aas
or
xchg
add
call
add
das
jmp
mov
pop
inc
aas
jo
out
adc
repz
outsl
movsb
cli
xchg
adc
add
cmp
mov
xchg
je
jne
push
pop
cmp
mov
ds
sbb
jne
ret
outsl
inc
mov
es
and
pop
xchg
jge
xor
test
push
add
sbb
add
aas
push
clc
xchg
jmp
les
sarl
pop
push
push
in
xor
sbb
jle
mov
test
cltd
mov
cld
ljmp
sub
cltd
push
in
cmp
sbb
add
dec
or
mov
hlt
out
xchg
xor
lds
mov
add
imul
adc
insb
pushf
add
inc
adc
jb
rcpps
jle
cmp
push
inc
push
jnp
ljmp
ljmp
sbb
add
push
cmp
jecxz
cmp
movsb
cs
xor
loop
pop
push
adc
push
sbb
aaa
or
xor
mov
mov
sbb
mov
lea
pop
jge
cld
and
rclb
loopne
cmpsb
or
loopne
xchg
in
adc
std
xor
rcr
push
lcall
iret
ja
negl
and
sarb
ds
cld
pop
jmp
ret
rcll
scas
sub
push
enter
dec
sub
dec
cs
xor
hlt
sub
cmp
push
clc
pop
adc
ret
repz
aad
add
cmc
popa
or
fistpll
add
adcl
jg
inc
jge
push
xlat
gs
mov
jmp
push
push
add
pop
cli
fisttps
mov
push
xchg
push
std
or
pop
xchg
ljmp
mov
jg
out
mov
clc
push
cltd
dec
rol
xchg
sub
stc
xor
sti
cmc
adc
in
push
push
inc
loopne
adc
test
dec
jle
in
shlb
repnz
xor
xlat
xchg
sub
dec
mov
jo
es
xchg
ljmp
out
lahf
fwait
pop
add
std
sub
dec
fs
mov
mov
mov
ds
popf
call
inc
dec
int
push
outsb
ss
sbb
addr16
pop
xchg
and
testl
push
ret
jno
repnz
push
pop
cld
cmp
jge
testb
int
aas
popa
scas
xchg
vshufps
or
in
test
les
and
cltd
scas
mov
jbe
ficomps
in
push
scas
fistpll
mov
sbb
fstps
sbb
sub
mov
cmp
xchg
xlat
dec
jb
inc
fwait
aad
bound
iret
dec
jb
and
popf
les
rclb
adc
mov
subl
mov
add
pop
push
stos
mov
xchg
xchg
lret
pop
sbb
shll
inc
stos
inc
add
mov
fldt
cmp
jb
out
imul
ljmp
sti
or
xchg
mov
pop
xor
imul
pop
sbb
sub
sbb
or
adc
push
cmovle
inc
clc
mov
push
pop
sahf
jb
push
push
inc
aaa
pop
pop
cld
mov
stos
sub
sub
dec
andb
fs
shl
inc
dec
mov
mov
sbb
loop
inc
adc
cmpsl
dec
push
imul
jmp
xchg
add
mov
cmp
jg
outsl
push
inc
xchg
add
shll
cwtl
add
mov
pop
daa
inc
shr
mov
imul
cwtl
jmp
jmp
pop
mov
inc
sub
mov
scas
sub
ja
dec
mov
into
pop
cmpsb
outsb
insl
mov
jg
aam
sub
scas
cmpsl
test
pop
push
fwait
pop
xchg
jbe
mov
xchg
mov
inc
or
out
dec
or
cld
ret
add
jns
lahf
repnz
cmpsl
push
pop
aaa
and
in
decb
pop
dec
mov
dec
inc
adcb
repz
mov
mov
mov
gs
xchg
jb
fiadds
jno
or
mov
mov
loop
xor
xor
push
test
enter
mov
push
lods
loop
xor
mov
dec
fldcw
sub
push
ret
adc
ljmp
cmc
mov
xor
lods
cmp
lret
xchg
es
and
xchg
or
mov
and
sub
jp
sub
mov
imul
nop
imul
in
sub
mov
xchg
iret
icebp
aas
lods
fsubs
cltd
push
aad
xor
jge
mov
in
lods
mov
leave
dec
ret
inc
and
inc
jo
insl
cmpsb
jno
mov
and
insb
popf
mov
in
fnsave
mov
loopne
cltd
sbb
scas
cli
test
push
push
mov
mov
fmulp
icebp
jnp
into
cmp
pop
push
sub
in
push
hlt
sahf
out
gs
mov
xor
lock
loopne
loop
or
dec
mulb
outsb
aaa
add
outsb
mov
inc
subb
pop
and
xor
int
jl
icebp
inc
lods
in
mov
leave
mov
push
push
notb
jno
into
addr16
sbb
movsb
pop
adc
inc
push
jnp
mov
push
je
cmp
lea
fisubrl
dec
fidivs
mov
test
int
lods
aam
add
jbe
or
or
or
rclb
es
int3
lcallw
pop
jb
movsl
cwtl
or
mov
dec
or
or
shll
sub
sahf
sbbb
cmpsl
inc
push
sbb
push
lods
or
jmp
imul
shlb
inc
sbb
lock
jecxz
out
pop
pop
jle
cltd
in
insl
test
xor
add
sub
xor
jns
das
cmp
clc
ret
mov
roll
sub
xor
push
mov
pop
push
mov
mov
xor
hlt
adc
jecxz
or
or
mov
bound
sahf
insl
sbb
push
inc
pop
push
pop
es
cld
adc
mov
out
nop
out
out
push
adc
sbb
and
pop
nop
dec
cmp
jo
cs
sub
out
sbb
pop
adc
jmp
push
push
mov
and
ja
fnstsw
cmp
dec
dec
adc
and
movsl
test
cmp
mov
add
mov
inc
and
xor
mov
fmuls
pop
fsub
aam
jle
add
add
mov
xlat
daa
pop
push
in
jle
mov
ja
jge
adc
flds
cli
add
inc
popf
test
jecxz
nop
xor
ja
aam
cli
in
xor
repz
add
push
cwtl
imulb
push
cmpsl
add
inc
and
mov
xor
inc
ljmp
inc
out
cmc
icebp
mov
ja
das
xchg
add
push
push
pop
cmpsb
imul
call
jns
and
ljmp
jb
push
sbb
sub
je
out
movsl
pusha
dec
ds
loopne
cwtl
sub
nop
adcl
movsl
and
sahf
ja
cmpsl
jno
je
sbb
push
sbb
mov
mov
dec
mov
and
adcl
pop
mov
mov
push
jne
hlt
insb
adc
loop
xor
mov
mov
andl
mov
mov
inc
mov
lret
rcrl
sub
sbb
dec
dec
out
dec
add
pop
xchg
ds
xchg
shrl
rcll
jge
xchg
fstl
outsb
pop
lcall
fcoms
adc
mov
or
test
mov
jns
adc
rorb
movsl
inc
fnstsw
xchg
push
shll
aas
ja
jnp
push
ja
stos
fldz
out
mov
xor
push
dec
mov
xchg
outsb
in
fcomps
jae
fistl
sti
in
and
mov
int
stos
std
jle
inc
clc
rcrb
xchg
sbb
outsl
push
push
aad
jmp
bound
push
sbb
in
cmpsl
aaa
inc
test
pop
dec
sbb
int
or
fdivrl
push
jno
inc
pop
repz
xor
or
add
mov
xor
push
add
adc
mov
je
cmp
je
outsl
pop
pop
fwait
movsl
into
cwtl
movsb
jg
aad
xchg
std
test
inc
push
scas
outsl
inc
jo
in
sub
fistps
vpcmpeqd
shl
add
test
daa
sahf
cmpb
push
jle
cwtl
jb
jae
push
cmp
cli
les
xchg
push
insb
lcall
pop
divl
adc
mov
jl
inc
cld
adc
add
js,pn
jp
in
push
xchg
scas
add
pusha
xor
stos
pushf
lret
sbbb
mov
sbb
mov
pop
and
mov
cmp
xor
mov
inc
sti
mov
sub
vpunpckldq
fidivs
push
mov
sbb
inc
js
movb
xchg
lcall
push
imulb
xchg
clc
mov
in
shlb
lods
xchg
mov
testl
insl
gs
mov
or
mov
popf
and
mov
sbb
jne
call
xchg
ja
je
ja
out
adc
xchg
stos
sub
adc
test
xchg
add
stos
pop
aas
xor
pop
mov
outsl
clc
add
adc
xchg
loope
sub
add
std
out
or
push
insb
adc
iret
shlb
cld
bound
in
jnp
scas
jae
sbb
std
imul
sub
ds
lea
and
int3
ljmp
in
shl
jb
sbb
dec
outsl
mov
jae
cmp
sbb
ds
inc
ss
jno
xrelease
jae
enter
callw
adc
scas
xlat
int3
leave
lds
inc
sahf
arpl
ja
ds
jns
outsl
testb
sub
push
push
mov
jbe
notb
icebp
cmp
mov
fs
jp
lret
pop
fwait
push
scas
mov
xor
aaa
and
jb
mov
pop
movsl
xchg
dec
gs
incl
int3
js
rorb
js
jmp
cmp
jg
push
enter
out
sub
imul
push
xor
std
rclb
sbb
cmpsb
push
aaa
scas
mov
outsl
adc
cmp
outsb
lfs
lret
mov
push
jae
xchg
call
lea
ret
inc
out
nop
mov
aaa
filds
xor
lods
adc
and
add
pop
rclb
xor
sti
adc
movsl
dec
dec
lret
out
dec
push
xchg
push
push
dec
mov
jne
call
mov
pushf
dec
inc
jp
out
aad
lods
adc
jge
cmp
mov
mov
es
mov
cmp
out
mov
and
movsl
add
std
xor
or
scas
jne
lea
sbb
test
aaa
pushf
je
test
xchg
sub
and
int3
imul
repnz
dec
int
mov
in
dec
imul
push
xchg
in
hlt
inc
cwtl
negb
or
xchg
mov
mov
das
or
mov
push
cmp
shrb
cmpsl
rclb
std
jg
dec
mov
cmp
pushf
movsb
imul
rolb
stos
in
inc
sbb
iret
popa
outsb
cs
or
push
js
jg
xchg
pop
pop
or
repnz
mov
cmp
cmp
roll
add
into
pop
inc
sbb
mov
sahf
and
and
mov
addb
addr16
in
test
dec
jmp
mov
pushf
inc
enter
pop
cli
dec
inc
jmp
inc
and
sbb
shlb
mov
leave
cs
pusha
adc
lret
jle
aad
dec
pushf
lock
fisttps
stc
daa
outsl
outsl
leave
call
fwait
pop
push
pop
lret
or
pop
jbe
xchg
adc
jb
ror
loop
out
dec
inc
test
fincstp
xor
dec
sub
xchg
adc
sub
pop
xor
xchg
ja
dec
sub
fwait
jecxz
pop
out
push
jp
jge
sbb
jge
shlb
inc
jo
push
cs
add
mov
add
pusha
rcrl
and
mov
test
pop
pop
gs
xor
je
cld
jmp
std
test
add
jb
sub
inc
cmc
mov
aad
xor
mov
push
cmpsb
dec
cmp
nop
pop
fwait
pusha
out
cltd
stos
fldenv
and
addw
hlt
cltd
and
push
in
lods
ja
lds
outsb
push
dec
in
aad
inc
and
in
or
sub
jle
add
inc
out
nop
add
inc
adcl
adc
push
shll
fwait
xor
pop
shll
test
mov
ret
adcb
mov
in
dec
xor
fwait
sbb
push
ret
dec
inc
cmp
ja
pop
inc
mov
mov
jb
mov
mov
inc
jb
add
cmpsl
mov
cwtl
test
shld
jo
adc
xchg
aad
sbb
leave
mov
xchg
xchg
mov
popf
inc
mov
sub
pop
leave
aad
punpcklbw
pop
test
dec
cmc
nop
mov
lahf
nop
push
leave
popf
jmp
lods
xor
nop
xchg
jno
data16
jp
insl
aad
xor
and
bound
cld
std
push
test
mov
inc
stc
mov
mov
into
jl
shlb
nop
inc
sub
cwtl
gs
cmp
loope
xor
push
mov
mov
cs
idivb
fdivr
ret
lahf
add
data16
xor
push
clc
cmp
or
repnz
hlt
cwtl
jmp
sbb
or
andw
pop
sahf
stos
ficoms
mov
xlat
icebp
and
arpl
loop
repz
call
inc
xor
in
dec
push
jnp
pushf
es
jae
dec
ja
test
fwait
jp
mov
pop
and
popf
movb
inc
pop
es
nop
jbe
mov
add
pusha
call
mov
jnp
incl
rclb
jbe
inc
xchg
lds
mov
push
sub
fidivrl
ja
outsb
mov
push
rcl
dec
cmp
pop
imul
mov
xchg
pop
add
jne
add
cld
not
mov
jle
add
loop
mov
pop
or
scas
xchg
lret
xor
sbb
insl
cs
out
jns
into
pushf
aad
adc
push
inc
lcall
inc
cmp
sahf
movsl
aaa
adc
stos
sub
jg
mov
mov
adc
push
push
mov
fs
ret
pop
mov
out
insl
add
or
mov
sub
pop
dec
add
mov
fistpll
add
je
mov
js
icebp
paddq
call
rcr
or
mov
pop
mov
add
dec
fidivrl
mov
mov
pop
dec
clc
fistps
push
jno
xor
adc
jbe
sbb
cmp
gs
enter
mov
iret
dec
add
shrb
dec
cld
mov
bound
xchg
mov
cmp
mov
xor
push
ss
mov
std
mov
pop
aam
dec
xchg
pop
inc
adc
lcall
push
sahf
mov
jne
icebp
xchg
add
test
sbb
push
addr16
out
mov
mov
popf
movsl
add
add
jns
adc
movl
fldl2e
dec
xchg
adc
xlat
sbb
mov
ja
mov
push
jo,pn
add
cmp
cmp
pop
pop
jno
or
pop
or
in
jns
mov
inc
cmpsl
sbb
mov
xor
mov
push
pop
in
or
cmp
or
push
cmpsb
loopne
fwait
imul
daa
mov
push
or
mov
adc
fdivl
and
jne
cli
pop
xchg
dec
pop
push
sbb
std
adc
lret
stos
cmp
sbb
and
mov
js
or
or
mov
stos
xchg
mov
xchg
pop
jae
or
adc
jecxz
jmp
cmpl
or
mov
in
imul
call
aaa
sbb
push
push
mov
adc
cmpsl
pushf
jle
mov
pop
jl
mov
sbb
rorb
lods
jl
int
cld
sti
ss
push
arpl
mov
push
jge
cmp
ljmp
adc
push
adc
fldcw
xchg
andl
sub
xchg
cmp
mov
xor
sub
iret
sbb
int3
push
inc
popf
jg
mov
xchg
mov
movsb
mov
jl
fimull
ficomps
jg
pop
push
cmp
xor
add
add
in
mov
rcr
icebp
cld
fimuls
mov
and
ret
lock
fisttpll
pop
jmp
xor
ja
and
sbb
pusha
or
pop
adc
sub
mov
hlt
lods
sti
or
ja
push
sarb
insb
cmp
notb
dec
inc
test
orl
cld
mov
jecxz
adc
cs
add
popf
mov
push
sbb
sbb
fmuls
out
ss
loope
jno
push
cltd
movl
adc
cli
je
mul
arpl
movsl
xlat
mov
push
or
mov
mov
xor
cmp
aas
or
mov
icebp
push
dec
popa
cs
mov
shlb
cmp
cmp
dec
sub
sahf
add
std
sub
aad
ret
push
outsl
lcall
scas
dec
js
push
mov
fwait
or
mov
push
hlt
sarl
pusha
mov
enter
mov
jl
ret
es
into
or
sbb
fistl
pop
jb
ret
inc
pop
push
or
push
jo
cs
dec
xchg
xor
stos
xchg
out
outsb
adcb
sti
scas
xor
outsb
add
sahf
gs
jae
daa
cmpsl
out
mov
inc
rorl
loopne
jne
in
or
cmpsb
cwtl
jnp
rorb
pop
in
cmp
jl
sub
dec
jne
cmpsl
xchg
movsl
jge
pcmpgtb
mov
movsl
mov
insb
sbb
lret
pop
mov
in
xchg
lods
int
pusha
fsubrp
cs
pop
sub
sub
pop
jne
mov
insb
xchg
or
xor
jnp
popa
data16
leave
lea
jno
mov
mov
arpl
mov
faddl
mov
inc
xchg
idivb
cs
mov
fs
cli
repz
divl
cltd
scas
js
mov
jno
in
fimuls
and
je
inc
xchg
mov
push
jg
into
int
lret
sbb
out
xor
mov
dec
stc
in
mov
leave
cmpsb
ds
sahf
jp
test
sub
pop
clc
mov
pop
das
shl
pop
in
jno
and
mov
pop
adc
cwtl
cmpsl
xor
sub
data16
lret
imul
xchg
pop
push
add
add
push
idiv
pop
sbb
jle
mov
aad
mov
xor
adc
ret
mov
cmpsb
dec
dec
mov
pop
xchg
sbb
pop
jno
xlat
roll
repnz
mov
popf
inc
fstpl
fs
adc
xchg
ljmp
ffree
sahf
pop
daa
mov
push
lcall
jo
inc
in
movsb
mov
mov
inc
cmc
jne
fldl
mov
pop
mov
lret
icebp
or
testb
int3
out
fnstsw
push
pop
fwait
js
xchg
scas
dec
jmp
gs
daa
es
in
and
xchg
cmp
mov
jg
sub
inc
lds
data16
push
aaa
les
jne
lods
and
aaa
data16
movsb
cmpsb
cmpsb
adc
add
ja
xor
inc
mov
jae
push
sbb
ret
fmul
loope
jb
mov
stos
dec
mov
push
push
and
jbe
and
call
push
push
lcall
stos
sub
pop
adc
stos
sbb
inc
gs
lcall
mov
stos
leave
insl
xchg
movl
jns
mov
cmp
in
movsl
inc
push
outsb
xchg
xchg
shl
int
pop
cs
in
xchg
test
icebp
in
sub
dec
ret
mov
lahf
jp
push
inc
dec
pop
lret
shll
cmc
ljmp
lock
or
lahf
std
push
add
int
imul
cmpsl
adc
or
addr16
in
xor
mov
push
inc
push
out
xchg
popf
and
jb
or
mov
jae
dec
ss
push
jmp
repz
sbb
sub
leave
pop
mov
pop
cld
imull
lea
adc
xchg
shr
mov
adc
js
aam
and
xor
or
fildl
repnz
and
rcr
dec
mov
subl
sahf
ds
das
int3
jnp
jg
mov
fists
inc
dec
jno
or
adc
je
mov
fwait
mov
in
sbb
xchg
cmpsb
out
cmpsb
push
icebp
cmp
xor
sbb
fisttpll
adc
fidivrl
xchg
add
cwtl
imul
lcall
cmp
add
inc
mov
xlat
lea
push
jle
jb
cld
dec
out
insl
pop
inc
ljmp
pop
test
sbb
add
hlt
es
shlb
loop
stos
jno
bound
bnd
sbbl
cmpsb
inc
lahf
mov
data16
nop
inc
sub
je
enter
xchg
inc
ss
xchg
imul
mov
push
push
pusha
mov
into
add
sub
aam
mov
iret
mov
icebp
push
mulb
lret
inc
subl
push
sbb
mov
pop
int
pop
andl
add
pusha
adc
sbb
xor
xor
int
fs
outsb
mov
clc
inc
insl
ret
mov
mov
fbld
push
inc
addl
push
popa
into
out
xor
push
push
icebp
xchg
imul
dec
cmpsl
jle
and
inc
es
bound
sub
push
push
loopne
and
pop
sbb
dec
or
mov
clc
or
rdtsc
dec
pushf
out
stc
out
mov
jle
mulb
stos
aaa
outsl
imul
xor
inc
mov
or
lcall
mov
jle
lds
and
cld
fs
dec
fadds
fucomi
out
mov
mov
inc
fisubrs
sbb
fs
imul
xor
mov
cmpsl
sbb
gs
xor
lds
push
arpl
mov
subb
push
lret
xchg
jo
popf
dec
jge
in
inc
and
lds
cmpsb
mov
xchg
aam
test
loope
xchg
out
sti
inc
push
cmp
out
je
cmp
lret
cmc
lahf
aaa
sahf
daa
push
add
dec
imul
cli
test
test
cmp
pop
mov
mov
pop
sbb
xchg
outsb
jae
pop
xlat
mov
fisttpl
shll
ds
mov
pop
xor
out
push
stos
sub
sbb
test
dec
inc
mov
push
jnp
pop
lahf
mov
add
mov
sbb
jl
and
add
and
mov
jp
jbe
jle
mov
repnz
gs
jecxz
add
repz
jmp
mov
fwait
push
push
cmp
in
sbb
jge
loope
fs
inc
mov
cli
sti
scas
push
xchg
adc
xchg
dec
movsl
dec
jp
mov
out
dec
push
cmc
mov
rcrb
leave
pop
push
lock
ds
dec
sbb
pushf
ret
sbb
dec
inc
sub
inc
inc
daa
dec
sbb
inc
ret
aaa
mov
das
stos
sbbb
jecxz
out
rcrb
inc
mov
insl
add
mov
push
pop
dec
adc
leave
out
in
pop
enter
ds
push
push
arpl
adc
or
int
rcll
lds
scas
aaa
fwait
dec
add
xchg
shlb
jmp
push
sbb
push
dec
repnz
or
mov
jge
ret
leave
clc
out
push
pop
insl
arpl
push
push
les
rcr
mov
inc
xchg
pusha
mov
mov
fistpll
jns
pusha
jb
push
and
push
jae
sbb
out
roll
inc
popa
lea
jl
pusha
sarb
std
cmp
dec
lret
mov
push
clc
scas
mov
and
leave
fmull
sub
orb
xchg
outsb
sti
scas
jo
add
xchg
jae
mov
arpl
xchg
adc
lods
insl
loopne
xchg
shl
adc
push
in
inc
fwait
pushf
out
push
repz
test
cltd
aam
mov
pushf
pushf
pop
mov
adc
aas
dec
call
mov
scas
rcr
sahf
test
and
cmp
pop
in
pop
movsl
and
lret
popa
mov
sub
out
loope
sbb
xor
dec
cs
add
pop
js
std
sbb
das
je
ljmp
js
rorb
pop
sub
mov
sar
mov
dec
push
add
bound
mov
fistl
mov
jb
mov
inc
mov
cli
es
push
test
scas
outsl
xor
jne
sbb
insb
fbld
xchg
mulb
or
cli
clc
add
outsb
shlb
pushf
les
push
ret
sbb
rcrb
xchg
cmp
int
pop
loopne
adc
repnz
mov
lods
scas
xor
testb
pop
inc
in
out
into
aad
mov
aam
and
adc
cmpsb
jo
add
cmc
and
ret
mov
mov
push
in
cmc
jl
fnsave
xchg
stos
and
jns
pop
sub
push
loop
jno
jge
in
das
test
shr
mov
dec
les
jg
pusha
jnp
sub
xor
xchg
and
sti
cwtl
lcall
add
gs
lret
movsb
mov
arpl
sub
xor
sub
sub
inc
cli
or
inc
sub
fneni(8087
xor
and
out
dec
inc
subl
push
out
dec
jle
add
xor
jg
pop
outsb
imulb
adc
cmp
push
mov
xchg
sti
adc
shrl
inc
call
push
sbb
or
adc
andb
sbb
lret
cmp
fcoml
jecxz
into
sbb
pop
icebp
dec
dec
mov
cli
out
push
movsb
sti
lcall
into
shrb
sbb
mov
loopne
mov
ret
pop
sbb
iret
in
fmuls
mov
xchg
mov
roll
jae
inc
xor
pushf
in
or
push
pop
nop
scas
inc
dec
adc
jmp
push
dec
hlt
aaa
push
popf
clc
sbb
imul
les
repz
ror
mov
cs
int3
mov
std
mov
xchg
test
cld
pop
sbb
test
lods
aas
mov
lcall
mov
scas
pop
scas
sub
loop
sub
popf
fsubrl
push
mov
daa
xor
and
adc
popa
sub
iret
fistpll
pop
sbb
addr16
call
cmp
add
xchg
sarb
iret
and
pop
mov
mov
enter
mov
mov
mov
dec
fsubrp
jne
dec
jbe
arpl
lods
bound
mov
pop
dec
mov
test
imul
mov
xor
insl
push
cmp
cmpsb
push
inc
int
mov
push
mov
xchg
lds
jg
push
stos
shlb
jbe
or
in
fimull
jbe
sarl
decl
aad
fists
mov
mov
jmp
xchg
jge
lret
pop
outsl
rcrl
xchg
xchg
ss
dec
imul
cmp
stos
and
dec
mov
jae
int
mov
jg
iret
cmpsl
sti
dec
inc
flds
pop
out
out
movsb
pushf
pushf
das
imul
dec
dec
push
sub
add
psadbw
pusha
mov
push
mov
or
push
mov
movsl
jp
mov
push
in
add
jne
push
sarb
push
ret
pop
jmp
inc
jg
andl
repnz
repz
adc
insb
jl
push
push
push
jg
mov
sti
loopne
rcll
dec
push
loope
cmpsb
movsb
inc
pop
es
stos
mov
jb
pushf
xor
xchg
repz
int
ds
add
inc
into
pop
add
cmp
dec
adc
call
push
rorl
pop
hlt
pop
mov
sub
pop
lcall
cs
mov
adc
stos
add
repz
lock
insl
aam
ss
mov
jg
es
ret
in
loop
out
mov
mov
enter
dec
ja
xchg
out
mov
cltd
push
cli
lahf
in
pop
push
jge
mov
push
mov
sbb
test
rol
cmp
lahf
mov
das
inc
or
push
and
jl
add
dec
xor
pop
or
fs
mov
pop
in
adc
lods
call
outsb
imul
or
and
xchg
inc
lcall
inc
sub
call
sbb
jb
in
pop
pop
sarl
mov
jmp
cmp
pop
ja
sbb
xor
xor
decl
mull
sti
mov
scas
sub
in
cltd
sbb
lret
xchg
push
and
or
repz
fcoms
dec
sub
jmp
pop
es
inc
movsb
xor
add
cmp
push
mov
cld
sbb
mov
sti
mov
aam
rcrl
push
push
inc
pop
lods
and
sar
xor
lret
adc
pop
cmc
pop
xchg
jecxz
xor
push
sub
shll
sti
sti
jecxz
xor
jp
cmp
inc
mov
dec
mov
testb
sbb
jle
adc
jne
ds
test
dec
mov
cltd
mov
jnp
push
mov
lcall
and
push
mov
adc
add
or
loop
mov
in
and
gs
ja
gs
pop
cwtl
jnp
pusha
cltd
cmp
cmp
pushf
leave
or
scas
pop
test
mov
arpl
lret
xchg
and
mov
arpl
or
or
push
mov
movsl
loope
pop
cld
imull
sbb
cmp
dec
adc
in
xchg
sbb
pop
or
sahf
lahf
mov
mov
mov
push
jb
aaa
jp
repnz
loop
and
cwtl
gs
mov
lsl
lea
push
push
clc
addr16
nop
sbb
shlb
push
mov
xorl
dec
rorl
cmp
cmp
cmp
push
clc
outsl
xchg
sahf
push
loopnew
sub
lahf
popa
jns,pt
add
and
mov
fs
xor
leave
sub
xor
loop
or
jmp
dec
push
out
enter
add
mov
out
jo
nop
mov
sbb
jne
jg
xchg
or
ds
sti
jns
adc
idivl
jge
adc
mov
add
mov
test
out
sub
out
xchg
les
sarl
aaa
stos
or
inc
ljmp
adc
dec
popa
test
ret
push
push
clc
push
xchg
dec
dec
push
out
xor
xchg
insb
cmp
xor
mov
mov
push
sbb
ret
jecxz
out
push
ficoml
into
bound
xor
mov
stos
push
iret
out
push
xchg
leave
imull
inc
mov
in
add
jge
mov
mov
or
push
sbb
add
pop
add
dec
pushf
jno
out
popa
push
xchg
or
in
mov
add
adc
insl
dec
xor
pop
adc
call
xor
cmc
insl
je
ds
sbb
dec
pop
pop
push
int3
stos
insb
xor
hlt
pusha
repz
and
and
xchg
mov
insl
ffreep
jo
add
mov
lock
shlb
in
jne
add
pop
push
js
sti
aad
sbb
daa
mov
pop
fdivs
push
pop
jge
sub
mov
mov
xchg
aas
mov
outsl
mov
jg
xchg
and
xchg
hlt
mov
hlt
test
add
mov
sahf
mov
jl
dec
out
xchg
pusha
pop
loop
roll
xchg
adc
dec
repnz
loope
aam
pop
in
repz
lea
dec
push
mov
dec
xor
stc
or
cmp
add
rol
sbb
imul
sbb
xchg
jo
jbe
stos
mov
xor
sarb
sbb
scas
mov
or
fsubrl
mov
das
je
sbb
fiaddl
in
out
mov
mov
andb
inc
adc
xchg
jne
shrb
cmp
fisttpll
lock
jecxz
jg
clc
dec
into
out
sbb
or
cmpsb
pop
xchg
mov
pop
jbe
dec
aam
movsl
xchg
test
dec
ljmp
lahf
outsl
mov
orb
mov
inc
mov
shrl
pop
shrb
and
int
popa
enter
xor
jns
inc
adcl
sbb
jge
loope
mov
test
sub
test
repz
sub
cwtl
sub
scas
scas
daa
hlt
add
mov
in
loop
adc
sub
fmuls
sahf
scas
adc
orb
out
pop
push
inc
sub
push
pop
gs
pop
dec
fistpll
jb
out
rcll
push
pop
xor
cmpl
negb
mov
xchg
daa
aad
fwait
xchg
xchg
lock
dec
lods
or
jb
xor
ja
push
dec
fsubp
mov
fldcw
push
out
test
dec
fistps
fbld
pop
loopne
cli
and
in
stos
adc
lods
mov
shrb
xchg
pop
xor
imul
adcb
aas
mov
pusha
mov
movsl
or
jmp
cmpl
hlt
pop
out
mov
in
xchg
cmpb
cmp
mov
jp
cmp
adc
clc
dec
sub
fidivrs
mov
add
mov
fstpl
push
lea
ret
push
inc
adc
or
push
xchg
pusha
scas
jns
pusha
mov
sub
daa
rorb
xchg
xor
sub
inc
call
mov
xor
sti
gs
cltd
mov
outsl
mov
xchg
test
adc
push
std
inc
fs
xchg
sub
std
mov
cmpl
mov
dec
hlt
dec
nop
xchg
call
add
cwtl
addr16
mov
jns
clc
jl
pop
pop
shll
ds
stos
sub
int
inc
dec
lret
push
daa
imul
inc
adc
mov
shrl
pushf
out
lahf
add
and
es
pop
mov
cli
ret
or
sbb
das
int3
sub
insl
inc
xchg
inc
sbbl
sbb
cmp
dec
inc
pop
lds
subb
pop
rorl
movsb
sub
sbb
cmp
mov
xchg
sub
out
mov
fwait
pusha
cltd
mov
dec
loop
fsubrl
orl
movl
sub
xchg
test
shl
xor
mov
xchg
push
test
rorl
push
cli
jp
jae
psubd
push
into
jne
aad
dec
sub
dec
lahf
cmp
stos
mov
jb
outsb
mov
mov
leave
arpl
daa
adc
or
pop
pushf
lds
sub
dec
mulb
pop
mov
mov
push
fstl
rol
ret
cmp
and
cmp
mov
rorb
inc
pop
sub
jle
mov
push
add
es
push
xchg
stc
in
mov
inc
movsl
stos
inc
adc
mov
jne
ficoml
rclb
movsb
mov
mov
xor
pop
cs
std
pop
mov
mov
mov
les
call
les
scas
test
out
xor
fwait
ja
aas
push
out
inc
inc
and
pop
jo
iret
xor
inc
cli
sub
aas
mov
adc
pop
fsubl
dec
mov
dec
pop
push
rcrb
push
int3
mov
mov
pop
adc
lock
and
jmp
dec
pop
inc
out
mov
movsb
and
addr16
pop
and
ss
loop
mov
mov
ljmp
or
mov
adc
in
add
sbb
fs
add
jb
adc
push
lahf
mov
lret
cmp
dec
xor
pop
sub
push
stos
ljmp
cmpb
xor
xchg
cmp
or
stos
cmpsb
mov
scas
insb
popa
rcr
xlat
mov
ljmp
xchg
test
sub
jbe
mov
xchg
or
or
ret
dec
rorb
fs
add
cwtl
xor
into
lods
and
lret
stos
mov
dec
xchg
aam
rcr
sbb
pop
dec
cwtl
add
push
mov
shrl
push
ss
inc
cmp
cmp
sbb
inc
push
sub
push
pop
fsubs
shr
insl
fs
inc
jne
mov
icebp
mov
in
inc
pop
leave
jnp
ljmp
arpl
sub
out
jbe
add
aad
jg
push
out
sub
outsb
lock
in
aad
clc
mov
mov
push
xorb
push
xchg
nop
stc
mov
mov
and
inc
cli
outsl
mov
or
add
inc
imul
dec
xchg
out
xchg
push
jbe
mov
inc
mov
fsts
in
pop
js
lods
add
add
sbb
int
lock
cmp
rolb
inc
pop
push
xor
xor
out
dec
test
ret
mov
dec
jno
outsb
in
adc
dec
out
inc
mov
rolb
mov
daa
ficompl
out
scas
or
or
push
clc
mov
mov
ret
push
das
xchg
test
gs
pop
std
pop
cmpsl
pop
xor
aam
xor
cld
inc
jp
jmp
dec
pushf
cmp
pop
inc
mov
test
nop
push
sub
std
imulb
dec
imul
push
ja
mov
dec
cmp
ja
out
stos
xchg
add
pop
fmul
sbb
std
in
jmp
test
pop
cwtl
in
inc
bound
das
nop
loop
fisubl
notl
adc
in
mov
daa
sbb
sub
fldl
push
jb
int
inc
push
imul
sbb
dec
mov
ror
sub
xchg
xor
inc
inc
jo
jl
inc
dec
jmp
aad
andl
dec
mov
jp
sbb
jo
es
pop
insl
aaa
jae
movsb
es
ret
dec
fists
aam
fnstcw
in
dec
mov
lcall
push
jae
or
pop
xchg
loopne
imul
aam
popa
call
pop
adc
iret
sahf
jb
mov
idivl
cmp
xchg
inc
jl
push
fstps
dec
lret
popf
xchg
enter
and
loop
push
cld
jne
inc
out
and
or
jns
fs
xor
aas
loope
dec
loop
pop
stc
pusha
cmpsb
into
dec
rorb
fsubs
push
inc
loope
ljmp
xchg
mov
popa
and
xor
xchg
jne
out
push
sbb
mov
fdivs
test
popa
out
fstpl
push
cmp
xor
inc
and
xchg
aam
xor
lret
cmp
cmp
pop
sbb
xchg
pop
pop
push
mov
aas
aad
push
xor
jp
addr16
js
das
ds
loope
or
ret
xor
xor
dec
ds
roll
sbb
in
test
notb
ret
jge
in
mov
sub
aaa
test
mov
loopne
in
xchg
mov
and
mov
fwait
jecxz
mov
dec
add
in
and
push
mov
leave
push
mov
push
jnp
adc
xor
scas
aas
js
pop
leave
xor
hlt
testl
sbb
adc
mov
in
push
adc
mov
mov
into
ror
sub
jo
or
or
les
add
mov
sbb
insb
movl
popa
adc
lock
xchg
cld
test
and
cltd
pop
cmpsb
sub
lods
cmp
push
mov
lods
add
sbb
ss
shlb
loopne
das
or
sub
lock
adc
into
mov
divb
outsb
notb
pop
add
jecxz
push
add
sub
in
aam
test
gs
imul
lret
adc
xchg
lret
iret
push
xor
cmpsb
es
ss
stos
mov
sbb
loopne
xchg
int3
lods
pusha
dec
lea
test
popf
arpl
adc
xchg
dec
jns
daa
fcomip
lret
fsub
in
sti
ret
xor
test
ja
pop
mov
sarb
pushf
and
int
dec
jl
test
xor
mov
cmp
dec
andl
sub
into
inc
cld
sti
mov
add
or
test
shll
push
fdivs
ss
lock
loope
push
inc
divb
mov
out
adc
popw
cmp
enter
rorl
jmp
mov
lds
adc
mov
mov
jl
loopne
rcrb
jge
sub
cs
in
rolb
xchg
es
fstl
fstpt
sub
test
xchg
fidivrs
test
adc
and
sub
int
ds
aas
jae
inc
jne
mov
push
xor
stos
push
mov
sub
sub
fwait
enter
add
mov
add
icebp
adc
lret
daa
ret
aaa
das
adc
sbb
fstpt
insb
mov
cld
cmp
add
daa
icebp
mov
xlat
or
pop
and
pop
cmp
dec
sub
or
cmpsb
aaa
test
pusha
add
aaa
int3
pushf
scas
scas
push
push
cmpsl
lcall
aad
mov
xor
rol
xor
in
dec
xchg
roll
add
out
xchg
iret
pop
sbb
and
xor
movsl
ret
ja
rorl
inc
mov
loope
fdivr
mov
cmp
xchg
cltd
jge
into
cmpsb
int
xchg
cmc
mov
xchg
fs
inc
sbb
mov
mov
in
inc
adc
dec
xchg
sbb
cmpsl
sub
mov
icebp
add
imul
cmpsb
adc
call
jae
rcrb
sub
jae
sub
out
push
mov
sbb
or
xchg
ljmp
pusha
mov
shrl
or
xchg
popa
les
cmp
inc
dec
ret
xchg
out
mov
cmpsl
fnstcw
daa
cmpsb
in
hlt
rclb
push
jg
xchg
adc
leave
shlb
cmp
mov
xlat
cs
xchg
sub
sbb
lret
or
cld
push
repz
jb
cmpsl
ja
add
loop
mov
sub
lds
sub
add
in
adc
cmc
dec
popf
outsl
in
push
aad
pop
dec
xor
sti
mov
mov
and
in
mov
and
ret
mov
icebp
cmp
mov
pop
mov
and
pop
aas
pop
lods
xchg
loope
adc
cmp
mov
inc
inc
ret
ret
test
cmp
add
and
xor
aas
pop
clc
push
inc
pop
xor
or
fwait
outsb
test
in
into
xor
adc
out
adc
sbb
outsl
mov
add
or
xorb
cwtl
sbb
repnz
mov
mov
cmpsb
jle
adc
lahf
repnz
das
mov
and
aas
push
pushf
ret
mov
scas
das
aad
pop
cli
hlt
push
adc
fbld
test
pop
cmpsl
push
inc
xor
jmp
jns
cmp
and
adc
or
jmp
into
jbe
push
inc
jmp
inc
loopne
jnp
adc
xchg
aam
es
ss
out
or
xchg
imul
adc
adc
js
stos
jo
jbe
insl
rcl
mov
movsl
shll
and
jge
xor
mov
mov
sbb
pop
mov
outsb
pop
cmp
dec
into
dec
sarl
pop
sti
push
push
sahf
jo
cs
jg
or
cmovs
cli
arpl
mov
popa
push
insl
dec
sub
inc
mov
mov
pop
dec
out
icebp
addr16
add
in
xchg
in
popf
outsl
dec
lret
dec
and
jo
daa
data16
inc
insb
pop
jae
std
push
sub
mov
stos
pop
popf
jne
es
push
scas
xor
jmp
scas
cld
call
das
push
adc
jge
repz
push
push
dec
add
shrb
xbegin
jae
cltd
cmp
xchg
dec
sbb
jb
mov
pop
mov
sbb
push
xchg
mov
jecxz
out
into
inc
adc
fwait
jo
js
push
mov
push
cli
pop
fldl
xlat
mov
adc
mov
imul
test
out
sbbb
sub
lret
jecxz
jge
jns
push
out
nop
xor
xor
std
in
xlat
mov
cmc
fsubrl
fidivs
imul
arpl
mov
gs
sahf
lret
aad
push
out
lock
sbb
pop
insb
mov
aas
push
ficoms
or
sbb
sarl
jno
popa
in
or
xchg
mov
jno
jae
push
lret
cltd
dec
and
scas
mov
sarl
sbb
sti
lock
xchg
insl
jmp
push
dec
push
mov
je
pop
js
ljmp
loope
sbb
cmc
icebp
cmp
mov
repnz
ficompl
loopne
dec
push
leave
ret
hlt
cli
xchg
add
data16
cmp
setp
cmpb
xchg
cmp
push
mov
mov
or
lret
out
ljmp
ja
cld
rcrl
add
pop
dec
mov
out
mov
out
push
mov
test
imul
insb
jecxz
or
fs
ret
jle
cmp
fs
pushf
pop
test
data16
jb
subb
popa
fistl
mov
shll
jae
cmpsb
xor
sbb
inc
add
xchg
lods
fisubrs
idivl
mov
pop
pop
and
lods
jo
sub
jno
imul
fwait
sbb
scas
push
push
cmc
scas
add
int3
nop
js
shll
ja
faddl
mov
inc
inc
rcll
aas
push
lods
daa
lods
xchg
push
mov
add
fidivrs
mov
pop
mov
jns
adc
int
add
in
cltd
das
ret
shll
and
add
lcall
mov
inc
in
or
lret
jge
aad
sbb
js
mov
sub
repz
jno
xchg
ret
dec
test
push
aam
aaa
lret
aas
mov
fisubrl
jecxz
rclb
test
inc
das
mov
xor
icebp
push
jg
xor
movsb
lods
iret
lret
xchg
call
sbb
or
stc
int3
je
lret
cmp
pop
mov
leave
iret
cli
bnd
sub
cvtpi2ps
pusha
repz
mov
push
push
cld
mov
loope
cmp
pop
mov
push
int3
jne
or
dec
pop
adc
lea
dec
repnz
or
ds
pop
mov
cltd
cmpsb
mov
cmp
insb
pop
dec
jl
jmp
adc
and
mov
xor
lahf
pushf
aad
sub
mov
sbb
lret
leave
adc
lcall
add
cmp
scas
pop
pop
push
les
cmc
fdivl
cmpb
and
pop
push
add
repz
int3
aad
push
push
push
stos
mov
sbb
cmpsl
movsb
dec
dec
and
mov
int3
dec
arpl
ja
aam
adc
test
mov
inc
mov
idivl
xor
outsl
addr16
sub
sbbb
cmpsb
dec
test
cmp
and
mov
pop
pushw
xchg
mov
mov
mov
in
sbb
sbb
mov
adc
pop
jmp
ja
cmc
jns
jbe
into
shll
mov
xlat
insl
rorl
sub
sbb
inc
pop
fdiv
jecxz
bound
out
cmp
sbb
inc
sub
neg
push
dec
add
movsl
xchg
lcall
mov
xchg
addr16
add
pusha
xchg
mov
ret
add
push
sti
inc
or
icebp
mov
rcl
subl
push
data16
psubusb
aaa
lds
les
nop
or
into
out
jmp
push
repnz
outsb
or
orb
adc
fcoml
cmp
aam
test
leave
push
adc
push
shl
sbb
iret
scas
fsubrs
xor
cld
ss
scas
in
xor
push
sarb
xor
test
dec
cmpb
push
lahf
or
filds
fcomip
and
mov
cmp
sbb
xor
add
or
aaa
pop
cmpsb
cmp
out
loopne
sbb
inc
fcoml
insb
pop
das
mov
fldt
sub
mov
jo
inc
adc
or
sarb
iret
add
dec
notl
sti
jg
int3
jo
adc
dec
xchg
pop
aaa
cmpsb
mov
fwait
push
pop
leave
ja
xor
dec
lcall
cmpsb
fxtract
addr16
pop
je
repz
ss
testl
adc
jb
popf
pop
mov
leave
xor
mov
pushf
stc
call
aam
lcall
sbb
daa
push
pop
gs
inc
xor
jns
jne
xor
mov
and
lret
mov
cmp
repz
mov
push
out
jne
fistpl
xlat
xor
fwait
mov
arpl
and
mov
aaa
or
sbbl
sub
pop
cwtl
lret
mov
int3
ficoms
insb
fisubs
mul
lret
enter
jne
or
pop
sub
bound
int3
out
mov
inc
mov
mov
shll
xor
push
push
icebp
icebp
inc
mov
push
mov
std
fs
ficompl
leave
testb
fldt
aam
jg
jmp
aad
and
int
leave
repz
jns
stc
jno
data16
and
loop
sub
mov
pop
mov
mov
loope
cmpl
imul
jecxz
mov
gs
xor
add
fs
stos
cltd
push
mov
pop
divl
sbb
sub
jmp
lea
cmp
pop
loopne
or
push
xchg
xchg
fimull
xchg
and
clc
stos
lock
outsl
add
loopne
lds
repz
sub
pop
adc
pop
je
jb
data16
test
or
lods
ss
fildll
call
mov
jo
aad
xchg
repnz
push
lahf
jo
sbb
jbe
pop
inc
and
aaa
in
aas
cld
aam
out
int3
sbb
or
xchg
rorl
cmp
popl
scas
mull
mov
ds
fists
sahf
sub
inc
ffreep
rep
movb
mov
std
cmc
mov
movsl
jo
fidivl
pop
insl
pop
psubsb
jae
xchg
lods
lea
and
lea
clc
push
cmp
xchg
repnz
pushf
std
cmp
popf
cmp
stos
pushf
pop
pop
sbb
lret
pop
dec
add
sbb
and
bnd
ret
sti
adc
cmp
out
cltd
mov
cltd
xchg
mov
outsb
xchg
fs
sbb
inc
arpl
out
clc
dec
ret
xchg
xchg
or
add
add
fs
outsl
lahf
gs
mulb
dec
rcl
add
daa
sub
and
jb
incl
adc
pop
sti
xchg
and
es
in
pop
insb
pop
test
and
sub
arpl
cmp
js
inc
int3
lods
and
xor
push
pop
sub
pop
arpl
dec
push
mov
sbb
insl
fucomi
sbb
dec
dec
notb
js
and
repnz
int3
stos
xor
sbb
pop
pop
jbe
inc
adc
push
ja
jns
lcall
xor
pop
in
popa
mov
push
xor
rcl
jge
jle
pop
and
imul
xchg
push
mov
mov
testl
push
ljmp
adc
addr16
sub
retw
ret
fisttps
mov
dec
fiadds
and
xor
loopne
xor
mov
loop
add
pop
dec
dec
inc
ficompl
mov
loop
dec
dec
cmc
cld
push
enter
cli
jne
sbb
xor
sbb
lds
cmp
loop
mov
out
ja
xor
sahf
mov
call
push
gs
pusha
adc
outsb
adc
xor
adc
pop
or
xchg
stos
inc
push
xchg
sbb
pop
jnp
outsb
xchg
add
sahf
enter
adc
shlb
sarl
inc
insl
add
xor
mulb
cmpsb
jne
cmpsb
jp
adc
fldenv
stos
in
push
mov
inc
push
cmp
push
popa
push
dec
push
dec
sbb
pop
dec
insl
in
pop
push
pop
add
jmp
inc
inc
cmp
dec
jns
mov
daa
lock
cmc
dec
mov
xor
sti
ret
int
push
or
stos
cmc
and
pushf
stos
shrl
not
dec
popa
push
imul
scas
nop
add
shll
test
pushf
pop
insb
leave
push
lods
shlb
xlat
cs
and
dec
sub
scas
bound
mov
dec
scas
sbb
push
sub
mov
mov
and
cmc
shl
xchg
inc
cltd
lret
sahf
mov
push
and
subb
popl
gs
loop
into
insl
mov
xchg
data16
xor
or
mov
cltd
shlb
push
mov
sbb
insb
pop
popa
notb
add
push
sub
movsl
xlat
inc
sbb
sub
test
out
mov
pushf
mov
ret
call
or
inc
mov
ret
movsl
fstps
addr16
inc
push
out
mov
jle
xchg
aam
pop
xchg
rclb
aas
nop
adc
daa
sarl
jb
mov
xor
rcll
pop
inc
out
xor
in
stc
stos
into
adc
add
test
pop
xor
fiaddl
mov
mov
pop
test
push
mov
subb
lcall
mov
dec
pop
xchg
jp
ljmp
in
jb
mov
inc
dec
xor
ret
lcall
loop
fs
mov
dec
insb
scas
cmp
pop
scas
loope
pop
scas
push
pop
subl
aam
sub
and
pop
data16
inc
outsl
insb
xor
iret
js
and
cmp
js
push
in
jns
sbb
das
jns
sub
fs
xor
popf
pop
xchg
dec
lods
sub
imul
fisttpl
ret
nop
xchg
or
call
jae
mov
in
jo
mov
scas
sbb
insw
mov
fs
jbe
loop
inc
and
push
aas
sub
enter
mov
adcb
push
mov
mov
lea
jns
sub
stc
jnp
xchg
or
push
stos
mov
cmp
push
aas
push
jns
insb
or
jl
test
sbb
sbb
das
or
jp
inc
mov
cmp
bound
or
pop
sbb
push
push
ss
imul
shlb
std
test
pop
pop
jg
xchg
jge
adc
stos
sbb
lock
pushf
inc
aaa
loopne
and
cmc
imul
cld
out
jge
test
dec
mov
jb
mov
lea
cmp
and
scas
clc
testl
ret
iret
rclb
das
and
cmc
sbb
movsb
fadds
sbb
imul
push
popa
push
xchg
aad
hlt
jns
push
test
sti
inc
andb
rorb
push
mov
adc
orb
int
mov
icebp
enter
dec
jle
xchg
fsubrs
out
dec
out
inc
dec
mov
lea
pop
lock
ret
xlat
clc
xor
out
clc
mov
adc
mov
jns
bound
negb
fcom
fwait
xor
cli
jl
dec
xor
push
xchg
mov
repnz
rol
xchg
mov
or
out
jecxz
lods
cltd
push
xor
xchg
icebp
rorl
mov
xlat
in
sbb
es
pop
js
jmp
mov
dec
inc
mov
pusha
push
sbb
mov
scas
loopne
sti
jo
dec
mov
sub
dec
or
push
and
xor
movb
scas
mov
pop
sub
ja
test
sti
dec
std
sub
jb,pn
and
dec
xor
pushf
fstp
in
sbb
pop
jne
add
dec
mov
stos
jae
and
xchg
mov
sbb
and
or
sbb
xchg
adc
popf
fistl
cmp
mov
leave
shr
stos
ret
mov
inc
lret
aas
jmp
push
dec
shlb
jp
push
mov
dec
cld
mov
ljmp
adcb
ret
fisttpll
orl
sti
iret
cmp
divb
add
cmp
fs
imul
test
xchg
orb
cmp
jno
sti
xchg
pop
es
jno
jl
mov
or
lret
je
sbb
movsl
xchg
push
jnp
les
ja
xchg
iret
jg
sub
cmp
sbb
cs
cld
cmp
add
nop
mov
push
mov
iret
and
and
aaa
je
xchg
sbb
cli
mov
jns
daa
xchg
out
jle
inc
test
scas
ret
movsb
lods
adc
pop
sub
cli
dec
es
fwait
xor
sbb
or
arpl
int3
fsubrs
out
cmc
or
daa
fnstcw
jnp
in
push
in
scas
repnz
ss
pushf
enter
sbb
js
and
jp
and
rclb
pop
das
movsb
outsl
fdivs
aad
pop
xchg
pop
scas
push
push
xor
hlt
repnz
jbe
insb
sub
outsl
addr16
mov
push
fwait
in
push
inc
cmp
aad
and
scas
and
mov
arpl
je
mov
xor
bound
mov
pop
dec
int
popf
mov
mov
sub
or
cli
xchg
xchg
cs
pop
pop
and
push
xorl
outsb
fs
push
xchg
mov
dec
popf
adc
in
sbb
push
scas
mov
xchg
iret
xor
sbb
out
imul
dec
insb
fabs
cltd
xchg
xchg
call
cmp
lahf
repz
mov
and
jle
push
das
out
data16
lret
ja
push
in
inc
and
or
cld
mov
push
cmp
push
mov
outsl
xchg
dec
ret
push
sub
pop
inc
sarl
scas
sub
aad
mov
or
sub
mov
into
out
pop
mov
pop
and
pop
inc
xchg
mov
pop
push
add
push
imul
mov
xlat
jle
xor
aas
cs
lods
sahf
rcll
in
push
xchg
inc
or
lods
testl
xchg
repnz
fnsave
pop
jmp
movb
xlat
cmp
scas
sbb
sbb
les
xor
scas
mov
mov
pop
mov
or
jns
iret
jb
mov
data16
jne
mov
fucomi
out
cwtl
or
orl
jae
or
sbb
jo
out
loop
jmp
add
aas
inc
scas
cltd
js
mov
fidivrl
or
sahf
xor
dec
shll
cmc
mov
and
into
jnp
inc
cmpxchg
mov
pop
add
or
scas
leave
inc
lahf
bound
push
xor
imul
inc
es
mov
filds
adc
mov
jo
dec
es
and
xor
clc
inc
cli
loopne
enter
cmc
fcomps
movsb
stos
pop
subb
jnp
push
push
dec
or
jb
or
iret
fldt
stos
jnp
pop
xchg
mov
jbe
hlt
call
sti
aas
inc
xor
es
sbb
mov
xlat
sub
dec
dec
sub
pop
push
sub
pop
cmpsl
sub
popf
jl
sahf
lods
mov
daa
and
xchg
cmc
cmpsb
inc
icebp
push
test
jnp
jnp
or
sub
in
jge
jp
jb
mov
sub
push
aam
sub
imul
mov
movsl
addb
iret
xchg
fildl
out
loop
sbb
ffreep
or
lahf
adc
and
icebp
repnz
adc
jb
int
ret
fistpl
push
mov
lcall
pop
add
cmp
jbe
jge
dec
mov
pushf
movsl
adc
ds
jbe
lea
and
clc
in
jg
mov
dec
or
incl
scas
inc
pop
imul
je
mov
xchg
mov
sbb
mov
lock
fldl
push
dec
push
push
and
adc
in
or
jecxz
aam
dec
push
mov
inc
jne
fs
lods
sbb
aas
push
ljmp
xchg
push
pop
out
sbb
xchg
lea
bnd
cmp
or
mov
add
mov
jmp
jmp
hlt
cs
inc
xor
push
inc
inc
fs
xchg
mov
ja
cli
add
xor
es
or
insb
in
mov
gs
fs
fst
stos
ljmp
jecxz
mov
jo
ficomps
pop
call
dec
pop
fistl
les
and
int
inc
adc
sbb
fstps
dec
imul
cmpl
adc
stos
mov
jp
jle
jge
mov
adc
jbe
sti
sti
fdivl
mov
mov
ljmp
xchg
mov
or
fs
int
xchg
js
popa
pop
mov
repnz
ljmp
cs
clc
pop
jbe
add
icebp
mov
inc
dec
sbb
jns
rcl
and
daa
cmp
dec
idivb
mov
jle
jno
mov
aad
push
xchg
dec
lock
push
xlat
movsl
add
iret
xchg
xchg
pusha
push
jmp
insl
or
shlb
inc
pop
xor
add
movsb
movsb
add
jmp
nop
inc
mov
jecxz
mov
push
call
xchg
inc
out
test
cmc
sub
int3
aam
lahf
mov
call
mov
jmp
inc
push
ret
pop
adcl
ss
xchg
mov
loop
adc
lahf
mov
test
mov
into
sub
es
inc
xor
xchg
inc
ja
add
jg
shll
inc
nop/reserved
les
cltd
jbe
repnz
insb
mov
ficompl
loopne
out
adc
push
mov
das
xchg
pop
ds
push
mov
inc
xor
cmp
mov
inc
addb
pop
jge
fisubrs
in
lock
pop
cmpsl
xchg
jge
mov
popf
jbe
ljmp
int
ljmp
in
nop
adc
lcall
adc
addr16
cltd
dec
adc
jne
ds
dec
fistps
psubsw
dec
int3
fwait
fwait
lock
dec
push
loope
loop
out
ss
fidivs
in
push
inc
sarb
dec
das
jae
iret
sahf
mov
xchg
inc
and
cld
movsl
sub
fisubrl
adcb
packuswb
movsl
mov
mov
dec
loopne
jne
push
cmpsb
mov
xchg
lods
push
add
jl
add
es
push
pop
pop
cmp
xlat
push
mov
adc
pop
clc
rorl
popa
fsubl
jb
lret
leave
mov
std
add
in
movsl
imul
adc
jb
xor
bound
repnz
fwait
call
pop
fwait
adc
data16
and
mov
mov
mov
xchg
fiadds
pushf
pop
nop
pop
xchg
scas
faddl
sbb
pop
mov
stos
add
in
or
xchg
xor
lret
cs
pusha
aad
das
add
popa
xor
push
mov
test
mov
and
or
scas
xor
xor
mov
push
pop
lods
pop
and
ss
pop
jbe
push
scas
add
xor
data16
add
popf
inc
divb
test
adc
aaa
xor
icebp
leave
jmp
mov
mov
jo
bound
dec
in
jbe
rcrb
pop
cltd
xchg
pop
out
jp
push
cli
rcrb
scas
dec
lock
dec
subl
aad
sbb
mov
add
jg
int3
xlat
add
shll
loopne
les
mov
inc
sbb
fisttps
inc
outsl
test
insl
sbb
inc
xor
jae
cwtl
push
push
or
nop
ret
or
outsl
stc
lods
enter
push
test
push
scas
lahf
flds
cltd
inc
push
xorb
in
nop
pop
test
add
xor
into
add
xchg
xchg
in
into
and
in
dec
mov
in
adc
inc
mov
cmpsl
push
xor
sahf
movsl
mov
sub
sbb
jl
insb
xor
fisubrs
pusha
aaa
adc
gs
imul
pop
sub
inc
sub
xchg
xchg
repz
dec
pop
add
xchg
xor
js
inc
lods
mov
lods
xchg
adc
jg
cmp
adc
push
lret
sti
jecxz
jne
add
sub
xchg
mov
jecxz
fisubl
fldcw
xchg
xchg
jl
and
ffreep
mov
mov
sub
in
pop
jl
inc
fwait
popa
rcr
jg
inc
pop
fstps
mov
add
fidivl
mov
ds
lods
and
mov
loope
or
fcmovnbe
xchg
lret
jno
xchg
test
fisubrs
push
outsl
push
mov
int
loope
pop
sub
and
arpl
mov
lcall
xchg
ret
mov
mull
or
mov
int
and
sub
jecxz
or
stc
cmp
dec
or
pop
mov
pop
xchg
mov
insl
sub
pop
out
push
push
ficoml
outsb
fnstcw
clc
mov
xorl
sub
imul
pop
push
enter
aas
and
mov
jg
sub
or
or
cmpb
out
imul
add
pop
and
xchg
clc
pop
xchg
test
scas
cmp
jl
mov
inc
inc
movsl
verr
aas
push
jge
and
fmull
jo
jg
or
mov
mov
mov
jo
mov
add
xchg
sbb
push
hlt
xor
lahf
xchg
scas
cmp
test
rcl
cld
out
gs
pop
pop
call
pushl
mov
dec
pop
inc
mov
and
clc
dec
das
stos
stc
das
or
cmp
clc
ret
jnp
dec
cmp
popf
xchg
aam
mov
lock
mov
cmp
xchg
mov
sbb
out
pop
mov
or
push
stc
xchg
repz
inc
dec
mov
lods
mov
xor
cwtl
push
mov
mov
movsb
std
mov
jbe
push
inc
cs
xchg
pop
outsb
sbb
sbb
inc
mov
ds
add
sub
pop
mov
cmp
sub
fsubrs
adc
mov
add
lea
sub
add
dec
subb
mov
fbstp
mov
popa
mov
mov
fcomps
rorl
and
cmp
push
jnp
outsl
dec
adc
adc
test
aam
bound
fdivs
jg
mov
jno
add
sbb
push
mov
jg
jne
nop
dec
test
and
enter
ss
pop
stos
repz
icebp
gs
push
mov
xchg
in
and
std
cwtl
das
aad
out
xchg
cli
jno
jmp
mov
in
out
pusha
movsb
mov
in
add
mov
pop
int
dec
cmp
scas
xor
movsb
cwtl
test
insl
cmpsb
mov
jl
xchg
jnp
jae
int
cmc
pop
jns
dec
notl
sti
test
inc
jo
stos
pop
movsl
cmp
loop
push
adc
imul
xor
test
push
pushf
pop
push
rorl
mov
jno
lret
cmc
cmp
aam
dec
push
lds
lds
mov
repnz
imul
sub
sar
outsb
inc
pop
jns
jo
pop
or
and
pop
ds
shrb
fsts
imul
xchg
mov
jmp
jmp
xor
idivb
sub
dec
and
push
xchg
in
sbb
inc
or
mov
inc
sbb
mov
xchg
sysenter
push
cmp
test
idiv
das
pushf
repz
mov
and
jb
aad
in
pop
dec
ficoms
aam
decb
mov
int3
adc
ja
ret
out
fs
mov
push
nop
mov
mov
sahf
pop
push
arpl
mov
shll
addr16
mov
mov
loop
and
lret
out
add
jns
cmp
add
add
xchg
pusha
lahf
pop
mov
jne
movsl
xor
shl
dec
cmp
inc
pushl
out
pop
jmp
sub
nop
fdiv
icebp
lea
dec
sub
and
sub
lcall
fadd
adc
loope
add
mov
adc
cs
dec
or
in
clc
aam
add
mov
and
sarl
add
jmp
sub
cmpsl
ljmp
lcall
das
insb
arpl
jmp
ds
xchg
push
inc
lock
xchg
pop
test
pop
test
mov
adc
mov
stos
xchg
aam
jnp
and
test
inc
xor
pop
adc
add
out
and
mov
mov
pop
mov
mov
aad
mov
xor
aas
orb
mov
lahf
add
int3
jp
jnp
mov
jecxz
dec
jbe
add
xor
subl
scas
jne
cmp
leave
das
in
rolb
sarb
pop
push
aaa
push
push
ja
mov
iret
enter
sub
sti
sbb
xchg
pushl
popf
sbb
xor
stc
push
adc
dec
push
das
adc
lret
std
inc
sbb
test
pop
mov
test
sub
int
icebp
or
movsl
popf
loop
orl
popl
insl
jmp
adc
sbb
jb
mov
lods
xchg
in
out
xor
xor
daa
cmp
mov
dec
sub
popa
sbb
and
sub
sti
dec
rcrb
xchg
xor
cmc
shlb
clc
jecxz
movsl
ss
stc
xlat
call
leave
pop
mov
push
xor
ret
mov
scas
mov
out
inc
xor
or
les
dec
in
outsb
cmp
pusha
ljmp
lahf
pop
jb
push
insb
outsl
mov
push
mov
cmp
xor
xor
mov
in
mov
ljmp
fwait
pop
into
insl
lds
mov
pop
or
aad
lret
gs
mov
inc
add
cmp
sub
or
out
mov
popf
arpl
mov
ss
jno
movsb
out
pop
repz
jno
lahf
cltd
aam
lea
xchg
push
and
adc
xor
int3
jo
xlat
movl
xchg
jb
mov
jne
and
jle,pn
cmp
adc
inc
dec
inc
mov
scas
adc
xor
xchg
lock
xchg
xchg
imul
in
sub
push
jge
mov
loopne
sbb
test
ret
adc
out
lcall
pop
test
mov
rorb
jne
sub
add
cs
adc
jb
pusha
jb
test
push
std
lock
mov
mov
sub
sbb
sbb
sub
out
xlat
fwait
ja
xchg
xor
xor
mov
fdivrl
lret
stos
mov
movsb
in
aam
xor
stos
mov
xor
std
scas
pop
outsb
cli
xchg
jne
push
xchg
pop
ficomps
ljmp
mov
jo
xor
inc
jbe
repz
inc
lods
lret
stos
add
and
pop
shlb
int
sub
fisttpll
insb
add
js
pop
or
loope
push
repz
pop
imul
hlt
xor
aam
dec
js
outsb
sbb
test
aaa
or
out
jle
enter
popf
dec
roll
inc
jns
mov
loope
loope
add
ja
sbb
pop
push
and
mov
lahf
fimuls
lds
mov
sbb
jle
xchg
mov
pop
cmp
mov
insl
leave
test
inc
inc
adc
sub
mov
add
adc
shll
push
inc
mov
popa
lahf
dec
cwtl
gs
fistpll
mov
dec
pop
lea
out
jno
mov
jo
jle
xor
push
inc
mov
xlat
out
dec
push
lock
and
xor
adc
adcl
jne
xor
push
lahf
icebp
jb
sahf
mov
hlt
mov
cmp
push
lcall
std
test
mov
or
in
test
pop
imul
mov
ljmp
xor
ret
or
cs
lea
jecxz
data16
fsubr
hlt
and
movsb
jb
aad
jnp
mov
rorl
cmp
sbb
andb
rcl
insb
lret
jbe
outsb
sub
mull
push
int
cmp
xchg
jne
xor
nop
int3
dec
fst
jmp
xor
mov
in
lahf
pop
test
mov
sbb
push
add
add
jb
in
ja
loope
push
sub
xor
xor
push
inc
and
mov
lret
cwtl
push
push
gs
pop
mov
addr16
out
adc
or
cmovae
shrb
adc
les
mov
mov
or
or
subb
cltd
jmp
mov
mov
loope
lock
xchg
dec
xchg
mov
pop
lds
pop
mov
movsb
push
nop
xchg
imul
das
mov
les
daa
addb
or
fldlg2
xchg
inc
std
insl
and
or
jns
fiaddl
xor
xor
inc
jge
jo
xor
xchg
fdiv
imulb
cmp
loope
ds
sub
push
xor
sub
icebp
loopne
add
ss
cli
loop
repnz
and
jmp
mov
adc
jbe
outsb
iret
jle
test
mov
cwtl
outsb
jle
and
dec
loope
repz
ljmp
in
into
xor
sub
add
dec
mov
lods
into
pop
add
sub
dec
mov
js
iret
jo
mov
xchg
push
out
sbb
jle
stos
cmpsb
pop
sub
repz
icebp
or
ret
stc
arpl
sub
fcoml
mov
lret
arpl
aad
xchg
iret
cltd
arpl
push
rcll
cwtl
dec
jmp
pop
lcall
inc
in
jecxz
out
mov
push
and
cmpsb
clc
push
adc
xor
pop
lcall
repnz
repnz
fwait
or
xchg
stos
and
dec
jg
mov
fs
and
iret
mov
pop
imul
cld
hlt
fs
arpl
scas
adc
movsb
pop
js
in
repz
inc
inc
sbb
add
aas
jl
jne
pop
stos
in
pop
inc
jne
and
loopne
mov
inc
xor
jl
scas
test
or
adc
xlat
jb
popl
pop
xchg
mov
cwtl
ja
jp
loop
lods
dec
fisttpl
mov
lcall
lock
ret
notl
jle
or
xor
shlb
push
shlb
fadds
nop
xchg
add
roll
adc
aas
mov
push
test
pusha
mov
adc
push
rcrb
loope
shlb
dec
cmp
test
lds
rclb
jno
in
fwait
movsl
xor
mov
into
mov
jnp
loopne
aad
mov
sbb
push
pop
std
test
fwait
add
fisubrl
mov
test
sub
fiadds
insb
test
jo
ret
out
scas
xchg
nop
fists
sbb
cli
pop
xchg
add
in
dec
xchg
jge
adc
jmp
loop
mov
sub
js
pop
int
pop
fistl
mov
jg
pushf
dec
pop
cmpsl
fs
or
cmp
or
jns
mov
mov
sti
xchg
movsb
jmp
ficompl
lret
cmc
imul
push
testl
inc
dec
pop
mov
out
push
pop
outsl
inc
out
mov
mov
xor
mov
sahf
push
lock
mov
pushf
pop
cmpb
roll
push
scas
fdiv
add
stc
stc
ss
ret
mov
add
shrb
hlt
rorb
fadds
add
fcoml
loopne
fisubrl
pop
jecxz
or
mov
sbb
and
mov
fistpll
popf
push
lcall
cmp
fs
push
mov
xchg
les
lcall
pop
adcb
add
shll
fnstenv
and
xchg
mov
sbb
movsl
pushf
sbb
lods
aad
bound
clc
adc
cmp
mov
jno
xlat
nop
add
sbb
dec
lods
push
jne
add
testl
dec
mov
fistl
stc
and
dec
popf
mov
xor
call
sub
cli
outsb
push
call
mov
fmull
into
jne
sti
mov
mov
frstor
ret
outsl
in
lret
ret
cmp
sub
lods
aam
cmp
mov
scas
scas
push
fdivrs
int
in
pop
adc
insb
iret
jo
pop
mov
inc
adcl
xchg
mov
aam
push
sub
and
push
jl
dec
mov
lea
repnz
add
leave
dec
jne
dec
inc
stos
mov
test
pop
jge
ss
adc
ficomps
sbb
daa
push
xor
xchg
xchg
jp
sbb
push
lds
out
pop
clc
sahf
cmp
dec
adc
insb
xor
sahf
sub
setp
sub
push
rclb
rclb
mov
mov
dec
xor
fistps
imul
lret
add
pushf
aad
mov
sbb
outsl
in
jb
or
leave
inc
mov
and
subl
xchg
mov
shlb
mov
icebp
push
push
inc
mov
fimuls
or
xchg
clc
movsb
xchg
jbe
mov
fwait
out
stc
adc
pusha
lock
jns
loopne
scas
enter
and
cmp
mov
push
nop
int3
test
scas
dec
data16
and
inc
insl
pop
xor
adc
mov
sarl
push
pop
das
dec
into
rcr
mov
xchg
gs
fcmovb
loop
jo
dec
stos
xor
and
jge
lahf
cs
cmpsl
test
into
xchg
nop
orl
clc
fs
push
mov
mov
xchg
sub
les
mov
shl
xor
movsb
add
adc
bound
inc
pop
stos
loop
imul
xor
sbb
clc
dec
xor
mov
add
sbb
in
dec
and
mov
imul
inc
push
bound
testl
sti
test
mov
aam
sbb
or
xor
fsub
in
scas
jnp
push
mov
mov
mov
ljmp
mov
and
xor
inc
xor
mov
cmp
adc
xor
xor
mov
xchg
inc
pusha
daa
sbb
inc
adc
sub
data16
aas
mov
and
es
mov
push
loope
jl
mov
test
mov
dec
aad
test
movsb
xchg
and
lock
dec
out
jg
or
je
sbb
das
mov
enter
dec
xchg
scas
loopne
mov
mov
and
repnz
xorb
popf
sbb
mov
jb
fildll
push
add
out
nop
fwait
cli
cmp
dec
xchg
es
pop
push
je
jg
sarb
dec
jae
icebp
adc
in
and
lret
std
mov
roll
pop
inc
mov
add
lret
xchg
loopne
arpl
sti
mov
lcall
sti
push
add
cmpsl
dec
scas
mov
cmp
cmp
pop
mov
pushf
mov
iret
dec
stc
test
adc
scas
clc
jg
mov
loopw
xchg
add
or
test
push
dec
in
push
dec
mov
sbb
stos
cmp
pop
mov
cmp
cmpsl
daa
adc
add
cmp
pop
in
out
adcl
data16
dec
fs
sub
mov
scas
sbb
sub
test
sti
mov
clc
cmp
sub
mov
inc
iret
mov
call
aaa
ljmp
std
xchg
movsl
lods
adc
insl
dec
mov
icebp
fiaddl
arpl
dec
movsb
sub
mov
mov
or
outsl
mov
push
inc
ljmp
mov
andps
insl
mov
cmp
xor
ds
xchg
int3
add
inc
sub
fldcw
imul
aad
push
xor
inc
push
lret
fdivs
imul
inc
imul
je
adc
push
xchg
inc
addr16
test
clc
and
insl
aad
pop
sub
xor
add
insl
push
xlat
inc
adc
push
pop
popf
inc
inc
add
mov
sbb
sahf
and
stos
mov
in
xchg
xchg
orl
add
ss
pop
sub
dec
fildl
lahf
mov
jge
inc
int3
cmp
out
or
cmp
les
in
imulb
out
inc
bound
push
ljmp
inc
dec
lods
cltd
stos
jmp
and
fisttpl
rol
mov
divl
gs
push
sbb
adc
cltd
adc
ret
xchg
pop
pop
xor
cwtl
xchg
out
push
popf
dec
and
loopne
int
rorl
xor
mov
aad
lods
scas
cmc
cmc
dec
pop
stos
pop
rcrb
xchg
push
mov
lret
jns
jmp
popf
lahf
fdivl
cltd
cmpsb
cmp
nop
repz
sub
jo
aas
xor
mov
in
lea
faddl
or
js
pop
test
mov
aad
dec
daa
mov
pop
sarb
sub
int3
mov
pop
mov
js
rclb
push
mov
scas
mov
call
call
lea
fistpl
and
sbb
hlt
sbb
push
jnp
push
gs
imul
adc
incl
xchg
out
fdivrs
dec
jge
sti
mov
jnp
shrb
call
adc
lds
mov
in
in
push
stc
add
push
adcl
lret
ret
sbb
pop
xor
jecxz
cs
add
push
lahf
cli
insb
lock
into
xchg
pop
movb
adc
loopne
pop
ffreep
popa
ret
dec
outsl
dec
mov
xchg
lea
daa
jns
ss
push
add
popa
mov
int3
fstps
outsl
scas
mov
lcall
mov
jl
dec
in
loop
lahf
inc
and
push
fidivl
push
sub
movsb
std
lods
add
mov
add
xor
repnz
lahf
mov
cld
ss
dec
cmc
mov
hlt
xor
in
fnsave
lds
or
dec
popa
in
ret
push
xor
mov
cmp
out
mov
push
add
out
xchg
adc
imul
pop
sbbl
aaa
fildll
xor
in
loop
pop
es
and
sbb
adc
push
jge
iret
mov
jno
and
lea
inc
in
mov
pop
je
mov
mov
pop
cli
pop
out
ret
inc
cmp
jg
mov
das
mov
ljmp
pop
sti
movsb
cli
scas
fmuls
xlat
pushf
cmpsl
mov
and
push
aaa
fbld
xor
dec
aam
push
lds
cwtl
outsl
std
loope
lret
mov
aam
outsb
xor
cmp
js
jbe
xchg
dec
xchg
mov
ljmp
loope
xchg
inc
test
or
fldcw
in
jno
mov
std
shrb
add
divb
xor
xchg
and
xor
pop
dec
push
iret
jne
les
int3
jl
lret
in
jge
cs
mov
push
jne
mov
xor
adc
xlat
movsl
or
rcll
xlat
ret
inc
and
and
pop
mov
push
jp
daa
inc
lret
lahf
adc
xchg
push
icebp
sub
cmp
cld
pop
insl
pop
je
mov
xlat
fnsave
sub
loop
mov
mov
test
cwtl
pop
mov
out
out
inc
xor
jmp
pop
pop
jmp
sti
jns
out
fisubs
cld
sub
xchg
push
bound
int3
outsb
ljmp
cmpsl
aaa
pop
push
pop
outsl
dec
out
movsl
adc
int3
ss
fldcw
in
std
repnz
cmp
cmp
inc
sbb
stos
into
cmp
xchg
or
shrl
mov
mov
jle
andb
pop
or
inc
rorb
push
fcomps
push
push
bound
std
xchg
pop
inc
rcll
mov
repz
fs
test
repnz
std
fimuls
or
inc
xor
xor
in
pop
jne
jb
imul
xchg
and
fisubs
repnz
push
cs
je
andb
outsb
int3
adc
jle
sub
in
add
lcall
lret
pushf
call
or
ds
xchg
mov
mov
jnp
xchg
out
adc
inc
push
loope
stos
mov
adc
cmp
pop
pop
pop
inc
jno
fstpl
xchg
and
adc
ljmp
mov
push
xor
lock
dec
and
mov
daa
mov
mov
sbb
cs
mov
pop
ds
fcom
stc
push
rcrl
add
xor
and
xchg
fldcw
and
leave
call
or
jl
es
insb
bound
stos
test
mov
mov
pop
rcr
inc
fdivr
loopne
jecxz
sub
adc
outsl
push
mov
ljmp
ds
xor
push
andb
inc
test
mov
dec
icebp
jge
add
pop
and
add
xor
mov
fimuls
aad
pcmpeqw
pop
push
insb
test
add
roll
mov
sub
mov
cld
mov
pop
pop
jb
pop
loope
ret
push
lret
call
les
outsb
outsb
inc
das
lods
insb
add
sub
xlat
cmp
push
sarl
and
sbb
popa
mov
stc
sti
aam
or
cs
adc
pop
roll
andl
jbe
inc
insl
movsl
xchg
xor
add
mov
std
in
sub
scas
mov
lret
jle
insl
or
rcrl
mov
mov
cmpsl
mov
add
xchg
out
mov
movsb
sti
jns
mulb
or
hlt
loopne
cmp
mov
mov
cltd
dec
out
aad
pop
sbb
mov
adc
xor
fwait
or
lock
mov
es
nop
mov
inc
and
in
lea
and
inc
loope
xchg
insl
mov
icebp
scas
sbb
and
push
negb
xchg
pop
mov
dec
movsl
and
xchg
and
lds
pop
xchg
in
sub
add
mov
push
out
es
adc
mov
pushf
jno
cmp
push
shrl
jne
ret
add
lods
adc
sub
jbe
cmp
sbb
jle
pop
lods
mov
int
fisttpl
fistps
mulb
dec
es
push
mov
mov
lds
sub
and
and
inc
not
add
fstpl
push
jns
inc
loop
test
aaa
repnz
jl
mov
sub
into
pop
imul
movsb
lea
jge
push
fldl
insb
dec
jp
push
sbb
leave
mov
cmp
imul
les
jae
mov
adc
sub
mov
xchg
sbb
cmp
inc
jb
rol
dec
mov
sub
ss
fadds
mov
mov
imul
jne
mov
lods
and
lods
out
cmpsb
sti
xchg
mov
loop
sub
stos
mov
jae
fdiv
xchg
orb
push
sbb
xchg
mov
xchg
mov
je
daa
mov
jo
mov
jecxz
or
or
sahf
mov
mov
push
mov
in
jo
or
xlat
lods
or
push
sahf
push
cmp
fldl
imul
add
outsl
mov
push
add
cmpsl
mov
lcall
mov
push
pop
adc
out
or
sti
and
gs
mov
iret
mov
sub
mov
inc
dec
aam
popa
sbb
shl
mov
mov
jecxz
mov
ja
dec
xlat
lea
lods
imul
das
js
lea
adc
add
pop
cmpsl
mov
in
pop
jne
inc
cmp
loop
inc
mov
dec
sub
jl
sub
jne
ret
jg
faddl
mov
pop
out
add
sub
xorb
fdivrp
leave
test
ret
pop
fdivrs
push
dec
inc
addr16
test
or
mov
lods
xor
in
sbb
lods
cmp
outsl
sarl
and
sbb
leave
dec
or
sahf
mov
mov
mov
pop
ret
dec
mov
punpcklwd
pop
clc
in
dec
mov
nop
lahf
test
unpcklps
and
mov
xor
mov
lret
push
mov
jl
mull
repz
icebp
xchg
sbb
mov
mov
sub
push
inc
cmpsb
pop
pop
call
mov
jmp
iret
cmp
inc
adc
push
inc
out
outsb
inc
sub
and
jg
test
lcall
or
pop
cmc
jne
adc
test
idiv
incb
into
ror
sbb
out
sbb
inc
lock
rcrl
sbb
bound
stos
repnz
or
jmp
pop
xor
dec
popa
push
cld
das
aas
add
shll
mov
roll
test
lods
jg
aad
popl
mov
in
mov
sarl
xchg
jbe
stos
jle
fs
mov
scas
out
xor
and
cmp
outsl
stc
push
pop
sbb
loopne
mov
push
lock
sub
adc
pop
and
insl
jp
adc
xchg
mov
lods
xor
push
pop
or
pop
mov
cmc
shlb
xchg
sub
jns
addr16
adc
push
mov
loope
fisubrl
push
adc
xchg
pusha
jnp
fildll
mov
ss
push
leave
out
dec
in
xchg
or
lods
dec
test
mov
jns
xchg
les
sub
dec
xor
lds
xchg
fwait
leave
nop
lock
dec
pushf
lock
mov
pop
leave
pop
subps
xor
xor
ss
inc
xchg
or
lods
inc
cmc
test
imul
inc
fs
mov
pusha
mov
in
jne
lods
shl
inc
das
sbb
fs
movsb
cltd
mov
cmpsb
push
in
sub
repz
jle
cmc
cmp
loope
mov
pushf
fsubp
adc
sbb
rcrb
movb
aas
cmp
scas
cmp
mov
push
call
jl
add
out
fs
jae
jmp
pop
and
repnz
lret
das
and
scas
insl
add
addl
roll
or
stc
jb
inc
push
mov
in
mov
iret
movsb
mov
das
cwtl
mov
push
inc
or
dec
inc
es
mov
push
stc
xchg
mov
push
cmp
les
jge
sbb
pop
loope
lret
mov
mov
jecxz
test
mov
adc
pop
inc
push
sti
jnp
aam
mov
negl
leave
inc
mov
xchg
mov
jecxz
inc
loopne
pop
lds
leave
bound
push
je
fwait
inc
sbb
ficoms
mov
lea
dec
dec
and
pusha
dec
mov
int3
mov
in
push
loope
loopne
add
cmp
pop
push
mov
dec
mov
mov
ljmp
cmp
addr16
xchg
mov
imul
test
clc
lea
cmp
outsl
lods
xchg
in
cld
fwait
push
mov
xchg
shll
xor
aam
mov
mov
mov
sbb
push
sbb
dec
add
and
jecxz
xchg
or
pop
repz
cmp
sahf
hlt
cmpsl
arpl
stc
push
bnd
aam
cmp
ss
in
out
lock
cmp
subl
jg
xor
add
sbb
fildll
sbb
jecxz
mov
push
in
and
stos
xor
sbb
popa
mov
xchg
mov
xor
push
jno
jg
mov
rol
arpl
lahf
mov
mov
insl
inc
pop
aaa
cmc
xor
js
add
shr
les
xor
cs
pushf
mov
inc
or
lds
pusha
ret
testb
adc
fldenv
insb
or
les
repnz
mov
popf
test
mov
xchg
adc
adc
hlt
xchg
jp
and
or
jns
mov
arpl
or
sbbb
repnz
jmp
push
leave
incl
loop
jne
hlt
mov
nop
pop
push
cmpsl
xor
emms
pop
sbb
adc
xlat
lock
ret
sub
jnp
out
dec
adc
jle
mov
dec
dec
hlt
int3
mov
int
xchg
int3
or
xchg
sub
clc
inc
cmp
inc
fisubrl
leave
inc
mov
enter
js
outsl
outsl
test
adc
pop
dec
xchg
xlat
testb
jmp
fsubrp
pop
add
into
cltd
inc
add
pusha
iret
jecxz
xchg
inc
mov
test
or
mov
pop
gs
insb
inc
gs
arpl
jne
enter
pop
mov
mov
xchg
in
rcrl
rcrb
mov
push
add
sbb
in
frstor
push
cmp
flds
add
es
aaa
or
js
jb
pop
out
testl
pop
ds
mov
inc
ret
cmpsb
pop
fwait
popf
adc
loope,pt
enter
mov
pop
cmpsb
mov
dec
xlat
loopne
push
pop
adc
ret
outsb
mov
add
sub
jp
push
loopne
pop
cmp
and
inc
mov
pop
sbb
addr16
jb
in
inc
mov
add
fidivrs
movsb
lods
ljmp
add
push
push
mov
aas
cmp
xchg
mov
xchg
lods
aaa
add
adc
pop
shlb
jecxz
and
cmpsl
add
fmuls
cmp
mov
arpl
mov
fcomps
cmp
jns
out
lahf
in
test
enter
add
cld
inc
les
mov
jge
scas
loop
add
xor
insb
and
fcos
cmp
xchg
scas
outsl
and
sbb
notb
push
sbb
cmp
jb
cltd
dec
in
and
scas
shll
ret
cmp
cmp
mov
fcomp
xor
mov
stos
lret
sbb
cmp
les
push
shrb
lcall
lfs
pop
dec
cmp
mov
clc
or
jl
jb
pop
mov
sub
mov
lods
mov
or
lods
add
cs
inc
push
or
cmp
mov
addl
add
xchg
je
mov
mov
add
lahf
adc
dec
pop
pop
push
aaa
add
fnstcw
sbb
shlb
jl
subb
pop
mov
xor
je
push
outsb
test
xchg
rcll
call
js
mov
pop
cmp
bound
ret
add
push
ret
mov
add
and
xchg
dec
dec
mov
popa
call
push
jb
adc
cmp
in
stc
lahf
sbbl
jg
scas
sti
push
push
pop
in
lods
cmpsb
push
ja
pushl
repz
pop
sub
jne
and
cmpsb
xchg
xchg
xor
popa
inc
icebp
push
mov
fcomp
lcall
adc
xchg
cmp
mov
cmpsb
dec
jmp
cmp
les
shl
push
jmp
xchg
sub
out
dec
loope
shrl
orb
xor
and
inc
or
push
andl
inc
lret
es
pop
imul
or
and
pop
mov
adc
mov
sarl
js
emms
sbb
add
orb
push
stos
je
and
out
mov
sub
and
pop
jo
insb
sub
icebp
push
mov
lea
inc
inc
nop
aad
and
and
popa
call
xor
call
inc
test
and
in
icebp
mov
ror
pminub
or
adc
sub
mov
mov
jnp
loop
lods
xchg
mov
adc
pop
or
xlat
xchg
fwait
pop
jo
and
jmp
test
pushf
enter
push
daa
or
mov
push
sbb
lret
data16
orb
sub
sbb
jl
cmp
jmp
rcr
xchg
lret
mov
test
or
test
sbb
dec
push
stos
cmp
xor
cmp
cltd
push
nop
dec
pop
in
xor
sbbl
and
int
cmp
fstpl
push
or
add
mov
sbb
jb
daa
jno
pop
and
mov
dec
mov
mov
cmp
ret
aam
jne
adc
imul
iret
shll
mov
add
jle
add
xchg
inc
mov
push
push
cs
stos
in
rcrl
popf
mov
out
sbbl
aam
mov
nop
lea
out
stc
jo
pushf
mov
mov
arpl
cmp
mov
je
shll
imul
outsl
les
ljmp
pop
mov
sbb
mov
xchg
dec
lea
xchg
loop
mov
test
or
dec
insb
jne
inc
add
subl
sbb
push
enter
inc
je
mov
pop
idivb
mov
imul
pop
lret
call
cmp
inc
push
mov
add
push
mov
fs
js
cmp
fwait
mov
mov
dec
inc
push
lret
out
pop
ljmp
cmpsl
xor
cwtl
mov
add
cwtl
jae
dec
adc
ja
inc
inc
aad
push
cwtl
out
leave
lcall
sbb
xchg
andb
cs
xchg
xor
mov
dec
insb
cltd
jne
pop
xchg
dec
imul
pop
call
cmpsl
sub
bound
and
hlt
inc
mov
push
cmp
out
rcl
in
adc
sbb
sbbl
xchg
outsl
sub
jmp
sub
sub
pop
xorl
adc
mov
or
push
enter
mov
filds
idivb
cmp
mov
push
and
xlat
push
sbb
ja
loopne
test
popa
or
sbb
sub
icebp
mov
jge
and
push
xchg
adc
cmp
xchg
or
or
pop
cs
xchg
lods
cwtl
mov
mov
nop
scas
jge
je
jmp
inc
push
ss
sbb
es
test
xor
xchg
push
jl
pop
jg
dec
pop
add
adc
pop
pop
mov
and
negl
and
in
lods
mov
test
cmp
dec
inc
aas
jle
ss
rorl
mov
xchg
sub
call
xchg
leave
xor
jg
cmp
mov
cltd
sub
adc
inc
mulb
mov
cs
xchg
lods
into
dec
out
ds
out
adc
js
dec
popf
sti
orb
pusha
cmpsb
jmp
pop
nop
loope
cmp
mov
ds
int
sbb
add
lock
mov
fdivrs
mov
syscall
insb
adc
jb
clc
adc
xor
add
ret
lret
enter
insl
loope
jnp
xor
fistl
cld
jge
sbb
mov
out
pop
hlt
sti
sub
lock
frstor
mov
or
adc
fs
lea
in
mov
xchg
pusha
push
test
sub
xchg
loopne
or
adc
loope
popa
popa
scas
pop
jns
enter
rcrl
test
add
sbb
add
mov
pminsw
adc
push
pop
or
cmp
hlt
idivl
fwait
pop
mov
jbe
or
ret
push
addr16
sub
push
pop
dec
xchg
sbb
pushf
cltd
data16
inc
add
adc
sub
pop
cmovo
mov
repnz
xchg
pop
xor
out
adcb
mov
add
mov
jl
dec
adc
pop
push
and
test
repnz
mov
lods
ret
sbbb
fisubl
xor
leave
xchg
sbb
sbb
push
push
mov
cmc
andl
add
xchg
pop
in
out
es
cmc
mov
adc
dec
je
cmc
ss
adc
cmp
push
aas
push
dec
inc
xlat
ljmp
xchg
pusha
mov
lods
in
xchg
lea
inc
andl
dec
dec
mov
jbe
faddl
idivl
jnp
ds
pop
repnz
inc
mov
xor
sbbb
in
aaa
scas
jns
sbb
xor
add
mov
shll
sub
inc
adc
lret
leave
inc
cli
sbb
hlt
adc
sbbb
pop
xchg
xorb
lret
aam
repz
push
in
out
xchg
xchg
scas
js
int3
adc
mov
in
scas
or
fsts
jne
pushf
and
fisttpll
pop
add
mov
lods
add
xchg
sarb
push
jnp
movsb
jo
add
jg
aad
lcall
sub
icebp
adc
mov
xor
sub
int3
cmp
stos
fisubl
inc
pop
sub
push
push
jo
lsl
pop
shrb
jne
sbb
adc
push
aaa
add
inc
pusha
push
cmp
subb
adc
popf
hlt
sbb
mov
or
sbb
push
mov
lods
sbb
je
stos
cs
ficoms
or
add
js
icebp
sbb
push
cmp
push
lahf
int3
je
push
aas
add
int
fcomi
sub
sarl
cmpsl
imul
cmpsl
inc
sub
fistpl
cwtl
jg
push
cmpsl
mov
and
jp,pn
jecxz
lret
xchg
inc
scas
inc
cmp
cld
vhaddps
in
xor
xchg
mov
fcoms
aaa
mov
cli
sub
push
lods
dec
adc
lods
mov
das
pop
xlat
push
and
xor
in
xor
dec
mov
push
jne
sahf
shlb
add
xor
mov
mov
adc
jae
aaa
push
xor
cld
mov
cmpsb
lret
push
mov
mov
lods
js
add
cli
scas
decb
lret
sbb
nop
ljmp
cmp
je
std
pop
dec
out
scas
mov
data16
fbstp
scas
test
or
mov
imul
fs
jg
dec
les
iret
mov
pop
cs
aam
mov
outsl
negb
jbe
lret
jns
xchg
cmp
adc
adcl
fidivrs
jnp
pop
fiadds
rcrl
aad
rolb
xor
shlb
in
dec
loopne
and
stc
cli
jb
xchg
addr16
leave
pushf
scas
inc
mov
fdivs
imulb
add
test
jmp
mov
stc
and
xor
and
mov
add
push
mov
iret
sub
inc
jb
push
xchg
clc
dec
mov
cmpsl
test
adc
lret
fmuls
loop
into
inc
pop
cmc
das
pop
andb
xchg
das
xor
out
inc
lods
dec
aaa
pusha
adc
mov
clc
xor
or
sub
stc
sahf
notb
add
inc
repnz
je
dec
cmp
mov
inc
insb
stc
in
fidivrs
cltd
movsl
in
fisttps
orb
fldcw
sbb
pop
dec
or
xor
adc
sti
jnp
cmp
sti
push
js
and
cwtl
adc
outsl
and
jns
repnz
jmp
cmpb
and
pop
or
out
imul
dec
cwtl
popa
pop
movsb
inc
cmc
aaa
push
jnp
mov
mov
into
jmp
out
xchg
add
cli
push
push
faddl
mov
cmpsb
cmp
add
outsb
pop
and
out
or
test
shll
mov
push
popf
xlat
js
rcll
inc
jns
in
lds
icebp
sub
inc
out
sub
pop
pop
lock
cmp
aam
jo
pop
jecxz
xchg
or
aad
inc
dec
xor
fidivs
fisubl
fistps
pop
push
daa
mov
adc
mov
aas
aad
scas
fcoml
addr16
xchg
xlat
lahf
jo
cmpsb
sub
fcom
jo
movsl
lods
jle
xor
add
push
cwtl
mov
fsubs
jmp
xchg
out
xor
add
popa
xchg
add
lret
adc
push
out
test
add
pop
jge
ljmp
add
cmp
in
dec
cld
shlb
push
cwtl
xor
mov
xor
or
mov
pop
jns
sub
sbb
dec
popa
enter
fiaddl
dec
out
jp
lret
mov
andb
dec
out
and
add
daa
sub
dec
mov
dec
les
mov
es
or
cmp
pop
sbb
iret
mov
rcrb
push
mov
xchg
popa
add
stc
and
or
adc
jecxz
subl
add
sub
ds
adc
lea
imul
lds
jne
xchg
inc
test
clc
xchg
pop
mov
scas
mov
cmp
cmp
sbb
adc
xchg
les
nop
in
ret
repnz
inc
inc
push
cld
out
and
rorb
pop
sbb
mov
jp
push
sub
aad
test
adc
pmaddwd
jmp
leave
mov
out
xchg
mov
push
subl
pop
addr16
or
aam
add
lods
inc
in
stc
dec
scas
mov
mov
jns
test
mov
lods
cmp
ret
add
or
push
std
add
popf
out
push
or
pop
sbb
sbb
jg
rorb
aas
pop
data16
cmc
dec
mov
adcl
lret
mov
xchg
push
cld
pushf
popf
and
scas
bound
mov
cmpsl
pushf
push
push
mov
and
and
mov
fsub
cmp
xlat
xlat
cmp
les
jg
and
orl
nop
sahf
push
enter
stos
xchg
clc
push
leave
int3
enter
xor
sub
lods
adc
sbb
fbstp
cld
dec
sub
rcll
nop
pop
pusha
jo
xchg
inc
ja
lea
nop
push
inc
cmp
xor
mov
sahf
imul
fs
inc
mov
cld
sar
call
aas
inc
add
cmp
aad
cli
stos
xchg
adc
rcll
pop
push
addr16
loope
test
mov
ljmp
or
pop
xchg
mov
scas
nop
out
push
sahf
shrb
sbb
cwtl
shrl
std
cmpsl
cmc
xchg
aam
rorb
testb
shll
movsl
sbb
ss
xor
repz
and
pop
in
int3
mov
mov
mov
loope
dec
mov
push
negl
sbb
add
sbb
pop
out
xchg
popf
pop
add
rorb
mov
jae
jo
fmuls
les
mov
in
mov
push
ror
out
stos
pushf
arpl
test
cmp
test
outsl
test
sahf
xor
push
rorl
testl
sub
outsb
loope
aas
lret
test
cmpl
push
clc
movsb
cmp
sbb
push
test
mov
jp
xchg
push
int3
cld
into
in
xchg
loopne
mov
jp
cmp
inc
xchg
sbb
int
movsb
xchg
push
aaa
jmp
jb
adc
add
stos
jbe
push
fwait
adc
and
or
aaa
test
push
out
jno
sahf
xchg
xor
xchg
mov
inc
jo
sbb
lahf
and
cmp
hlt
imul
arpl
cltd
jnp
cli
fnstenv
test
add
add
cmpsl
push
loop
outsb
xlat
sub
adc
sbbl
or
call
insb
fildl
stos
out
call
in
test
negb
les
sbb
mov
andb
mov
xchg
xlat
movsb
mov
jg
cmpsb
cmp
xchg
adc
mov
inc
in
xor
jg
xor
fcompl
cli
mov
inc
shrl
xor
xor
xor
push
dec
and
or
rcr
inc
insl
dec
pusha
push
dec
iret
mov
dec
sbb
inc
out
add
imul
inc
roll
mov
xor
mov
xlat
sti
mov
cmp
test
popf
lahf
dec
in
dec
popa
or
movsb
test
or
pop
mov
inc
cmp
jg
imul
sub
mov
mov
push
pop
jnp
or
popa
sbb
lahf
fnstsw
or
cmc
cmp
jle
inc
cmp
cwtl
add
mov
movhps
cmpsl
mov
pop
or
jae
stos
cli
mov
cmp
lods
fcmovu
leave
ds
mov
cmp
sbb
push
out
popa
jne
popf
sbb
pushf
scas
mov
sub
xchg
sub
aam
mov
das
cwtl
push
fdivrs
ret
fnsetpm(287
inc
sahf
jmp
adc
insl
scas
mov
outsb
cmpl
aaa
add
push
sbb
jnp
je
test
clc
adc
shrb
je
jae
push
mov
leave
icebp
pop
test
inc
lods
sub
pop
xchg
pusha
sbb
std
sbb
not
mov
ss
mov
lret
leave
addb
pop
dec
add
aam
arpl
jmp
mov
decb
adc
jnp
scas
xchg
daa
push
mov
idivb
mov
stos
mov
sbb
adc
les
divb
xor
aaa
pop
push
sbb
icebp
push
test
pop
jmp
push
loopne
jg
lods
mov
mov
outsb
shrb
stc
test
sbb
fdivr
mov
sub
cwtl
aad
aaa
lods
mov
sbb
imul
loopne
test
pop
xchg
or
jl
daa
mov
sbb
xchg
pop
dec
cld
dec
pop
addb
adc
testb
rol
clc
mov
adc
push
stos
jo
or
or
pop
inc
fcoml
mov
or
data16
and
push
bound
ja
je
mov
popf
dec
mov
std
aaa
inc
jb
xchg
add
dec
pop
and
adc
cmp
jno
xchg
aas
outsb
jg
push
popf
out
and
xchg
or
mov
fldl
cmpsb
cwtl
push
sbb
movsb
mov
sbb
bound
insb
cmp
xor
cmp
out
test
test
push
popa
sarb
ret
inc
mov
andb
idivb
in
ja
test
lds
fcoml
mov
jno
in
cmp
testl
aad
outsl
push
sub
sub
pusha
xchg
xor
ror
clc
rorb
test
pop
int3
icebp
push
inc
jnp
xor
mov
sbb
and
insl
jns
cmpsb
xor
leave
lea
mov
and
and
xor
lds
rol
push
and
xor
gs
lods
jge
fs
xchg
jl
popa
outsb
loop
mov
mov
sub
lock
xchg
nop
or
lods
push
cmc
mov
divl
push
int3
sub
sub
jb
cmpb
push
adc
push
out
cli
cmp
cmp
cmp
in
andb
lock
mov
es
xchg
ljmp
jno,pt
lock
mov
push
hlt
bound
inc
xchg
mov
aas
jge
mov
lea
enter
mov
sbb
mov
fdivrs
out
loopne
scas
adc
push
ret
fcmovnu
mov
jle
lahf
mov
lods
lret
xchg
push
adc
sti
xor
push
movsl
ret
adc
imulb
xchg
lock
lcall
jno
inc
mov
ret
outsl
scas
pop
enter
mov
xchg
movsb
daa
sub
cmpsl
arpl
into
cmp
or
mov
movsb
mov
sub
lods
mov
mov
addb
adc
cld
push
lretw
outsl
or
push
in
xor
mov
add
xor
xor
mov
xorb
fdivl
lret
mov
xchg
xor
stos
lods
xlat
xor
out
push
pop
arpl
add
jp
jp
xchg
and
cmp
inc
add
dec
movsl
out
ret
mov
shlb
dec
or
sub
fwait
cmc
mov
stos
fstps
sub
jp
loop
loope
imul
cwtl
add
aas
push
comiss
jge
lret
lods
shrl
pop
push
adc
test
jecxz
fldenv
inc
xchg
pop
nop
sbb
xor
enter
out
pop
inc
and
add
aas
ret
leave
push
movsb
xor
sbbb
out
call
push
dec
jle
inc
push
hlt
xor
mov
or
cli
pop
add
orb
iret
cmp
jle
roll
and
repnz
or
and
pop
mov
out
xchg
add
adc
sahf
adc
int3
test
stos
pop
idivl
and
sti
imul
out
scas
mov
scas
and
fistpl
addl
or
ret
pop
mov
sub
test
fcmovne
jbe
aam
jb
add
addl
or
cmp
aad
fcompl
aad
loopne
mov
or
and
in
test
cmp
xchg
jnp
xchg
pop
cmp
xor
cmpl
das
cmp
stc
pop
out
add
imul
cmpsb
outsb
mov
add
push
hlt
stos
adc
in
or
mov
loope
imul
test
sub
int3
lea
adc
cld
mov
lahf
xor
or
jle
pop
inc
or
leave
pop
xor
mov
js
lcall
imul
xchg
je
jnp
xchg
iret
das
cltd
fisttpll
bound
adc
rorl
data16
int
add
xchg
xor
scas
insl
or
lods
fstl
mov
mov
loope
xchg
pop
sbb
test
notb
scas
insl
movsb
mov
add
pop
dec
push
jp
sbb
je
mov
je
mov
xchg
mov
lock
insl
stos
mov
and
mov
insl
push
add
icebp
aad
outsb
mov
ja
lahf
stos
xchg
mov
popf
pop
push
dec
data16
or
or
jmp
cmp
fsub
mov
adc
add
lcall
ljmp
jne
sbb
xchg
cmc
sub
subl
cmpl
jnp
cmp
xor
ja
xchg
mov
popf
xor
push
mov
cmp
std
mov
mov
jnp
push
mov
inc
or
ds
mov
xchg
out
dec
inc
pop
mov
inc
add
arpl
push
pushl
testb
push
sub
push
push
push
xor
cwtl
mov
mov
push
popa
sub
loop
add
push
mov
sti
jge
les
loopne
lcall
mov
pop
add
sub
mov
cs
pop
adc
add
mov
test
xor
sbb
test
lds
sbb
lea
popa
push
movsb
loope
xchg
dec
adc
and
pushf
shlb
std
mov
sti
repz
mov
shrb
adc
jbe
inc
pop
aad
dec
xchg
lock
adc
sti
sub
mov
sbbl
adc
xor
test
ljmp
loop
mov
add
int3
das
adc
loopne
mov
shr
mov
fsts
add
xor
iret
jae
jge
sub
pusha
ljmp
cli
xchg
aam
popf
adc
sub
sbb
out
xor
xchg
pop
xchg
mov
mov
std
outsb
mov
push
push
incb
addl
les
popf
call
dec
inc
andb
leave
jmp
inc
mov
bound
xor
push
outsl
xchg
jl
mov
dec
push
iret
add
nop
pusha
in
ds
pop
cltd
test
clc
jb
cmp
sub
sbbl
adc
das
dec
fisttps
subb
ffree
adc
push
int3
test
lret
add
leave
arpl
stos
pop
pop
test
ds
pop
sahf
rcrb
or
sub
loopne
fbstp
stc
and
orb
jne
jo
je
push
push
movsl
sub
or
data16
out
jge
icebp
mov
inc
mov
push
adc
movsl
imul
cmp
loope
adc
push
loopne
ret
loope
faddl
xchg
and
in
in
xchg
cmp
sti
mov
out
icebp
push
inc
inc
add
push
outsb
sub
lea
mov
and
jmp
loopne
mov
out
xor
in
push
je
imul
cmc
stc
sbb
sub
cmc
repz
push
xchg
xor
push
in
cmp
or
mov
imul
ret
je
jge
hlt
in
test
push
adc
jns
xor
cmc
or
jbe
xor
ljmp
jp
into
icebp
test
cmp
cmp
xor
loope
inc
fdiv
rcrl
ret
xorb
popa
add
push
fdivp
testl
or
nop
daa
scas
cltd
iret
mov
jo
cltd
in
mov
dec
pop
stc
clc
cmp
loope
push
adc
js
push
or
xchg
pop
pop
cmpsl
leave
sbb
filds
or
pop
iret
stc
jae
ror
fwait
mov
pop
push
jg
mov
and
pop
pop
rcrl
loop
mov
fisubl
dec
mov
xor
or
lret
je
popa
jbe
sub
dec
mov
mov
xchg
shrb
jge
adcb
inc
and
in
jbe
sub
rol
sti
ret
int3
sub
ljmp
into
push
aad
test
lret
cwtl
std
mov
icebp
and
fisttpll
out
rcrl
mov
xor
xchg
adc
mov
arpl
stos
push
inc
stos
dec
scas
js
xor
mov
lret
es
mov
out
pop
mov
cmpsb
rcrl
push
int3
xor
xchg
sbb
push
dec
shll
sarl
sbb
jns
and
orb
mov
cmp
jb
inc
fiaddl
add
fs
testb
popf
pop
xchg
mov
arpl
mov
dec
pop
push
lds
xor
ljmp
jnp
ret
bound
and
insl
stos
test
mov
jb
sub
rclb
xchg
lods
sbb
insl
cmc
ss
xchg
ret
jg
lods
jmp
push
mov
xor
add
add
cmp
std
push
cmpl
pop
bound
shrl
jecxz
movsl
push
shlb
nop
push
mov
std
cmp
int3
push
mov
or
orl
mov
dec
mov
jb
jno
sub
dec
fidivs
stos
movsb
aam
or
dec
mov
or
xchg
test
xchg
fdiv
nop
in
iret
insb
popa
pop
xchg
out
add
jg
dec
sub
cmc
mov
pop
mov
xor
outsb
push
outsl
jbe
push
adc
cltd
test
in
fwait
jp
out
shr
negb
jo
in
enter
adc
xchg
lret
out
nop
or
inc
je
out
dec
std
mov
mov
mov
xchg
pop
jno
push
and
repnz
mov
cltd
scas
rcr
outsl
push
cld
and
loope
jbe
movsl
pop
sahf
fcoml
xchg
mov
and
xor
movsb
jo
dec
std
scas
int3
add
sbb
test
jmp
es
in
push
mov
movsl
test
loopne
xchg
push
stc
xchg
or
out
iret
jae
dec
dec
test
jae
mov
daa
push
sub
jmp
adc
jne
cltd
out
notb
jae
mov
lret
add
bound
dec
xchg
or
cli
jns
nop
idivb
jne
push
sbb
inc
xor
cwtl
jae
stc
jb
dec
sahf
fwait
inc
xor
pop
push
sbb
add
test
mov
xor
call
sub
inc
outsb
jnp
test
mov
mov
sbbl
insb
push
sub
sbb
scas
sbb
loopne
xor
hlt
jb
dec
hlt
insb
and
mov
incl
pop
mov
loopne
dec
ficoml
add
dec
adc
pop
es
mov
cld
fdivs
xor
xor
inc
mov
xor
arpl
inc
cmpsl
pop
andl
lock
pop
jmp
xchg
pop
sbb
push
jo
or
sahf
sahf
rorl
push
add
xorb
shl
out
cmp
and
loop
xchg
shl
scas
push
aam
out
ss
xor
push
mov
nopl
cmc
adc
test
mull
adc
push
stos
or
push
das
mov
negl
xchg
mov
push
mov
stos
and
mov
xchg
insb
add
insb
imul
xor
mov
sbb
je
rcl
rcll
movsl
sahf
sub
push
arpl
icebp
lcall
sub
in
mov
and
or
ret
scas
adc
sbb
dec
mov
sub
sbb
fstps
inc
adc
popf
in
cmp
ret
xchg
lods
testl
leave
jge
and
adc
mov
mov
cmpsl
mov
cmpb
xor
iret
nop
gs
call
aam
aam
xchg
cmp
sbb
inc
call
jg
subb
pop
aaa
sbb
sarb
jb
xor
fwait
jge
ss
push
into
xor
add
jp
sbb
inc
jno
popf
dec
je
xchg
mov
shrb
call
stc
jp
inc
adc
clc
std
mov
lods
int3
jae
mov
addr16
fucomip
adcl
data16
sub
ret
mov
and
push
pop
mov
sbb
cmc
sub
gs
mov
fwait
xchg
arpl
inc
push
xor
dec
mov
push
ret
mov
fs
jg
mov
addl
or
and
mov
ljmp
xchg
fdivr
fadds
gs
js
arpl
addb
cli
sub
idivb
mov
andl
adc
xchg
nop
sbb
icebp
pop
cmp
xchg
pop
xor
dec
sbb
xor
sub
adc
mov
stos
lods
lods
stos
cmp
xor
addr16
push
call
xor
notb
mov
je
sub
cmp
aas
pop
dec
add
pop
jo
aam
into
into
in
sbb
jno
ret
inc
addr16
xchg
in
sub
pop
pop
sahf
movsb
mov
xchg
push
or
xchg
push
cmp
mov
inc
and
loop
ret
inc
dec
stos
sti
add
cmc
lret
adc
push
ficomps
add
inc
pop
lret
adc
adc
pop
xchg
mov
mov
outsl
adc
or
stos
cmpsl
jne
jo
test
aad
push
pop
add
mov
adc
mov
and
insl
inc
push
call
stc
and
lods
or
sbb
jae
sbb
das
movswl
jns
out
loop
mov
scas
xchg
mov
pop
hlt
divl
scas
loope
and
xchg
and
ret
gs
sahf
icebp
pop
arpl
jb
rcrl
mov
add
icebp
test
sub
adc
insb
js
mov
mov
pusha
fwait
mov
shrl
js
inc
lods
or
push
jp
or
mov
lds
push
dec
test
push
or
leave
xor
in
movsl
popa
iret
xor
adc
inc
ret
lcall
arpl
inc
out
cmp
icebp
mov
outsl
inc
and
jo
xor
out
out
or
push
out
stc
xor
and
subl
fwait
mov
mov
mov
pop
int
mov
test
fisubs
xor
insb
xor
insb
sub
je
ljmp
sarl
mov
xchg
push
iret
or
cwtl
add
mov
jb
dec
inc
sbb
lret
stos
mov
scas
popf
add
test
out
popa
push
lahf
into
push
aam
mov
popa
sub
add
push
jecxz
insb
fsts
push
dec
lret
shrb
sarb
mov
lahf
dec
aad
add
iret
adc
push
inc
push
notl
sbb
fists
rcll
dec
jp
or
cmp
ret
lock
sti
lcall
or
shl
or
jp
push
mov
clc
out
jle
cmc
pop
insb
pushf
insl
repz
lahf
xchg
or
push
cmc
es
jl
xor
cld
dec
pop
dec
push
mov
data16
or
add
sbb
jl
cmp
int
sub
cmpsb
dec
push
cmp
mov
jg
pop
add
in
mov
mov
push
mov
xorl
pop
cmp
jb
call
cmp
ja
mov
adc
mov
int3
dec
addr16
inc
int3
rclb
out
and
sbb
and
iret
ljmp
jg
sti
mov
scas
xchg
aam
mov
fisubs
push
cmp
mov
cs
push
xchg
pusha
push
sar
adc
mov
out
bound
jne
pop
lea
and
inc
sbb
add
das
incb
xchg
lds
out
cmp
inc
xchg
xchg
data16
inc
jbe
lret
xchg
xor
mov
dec
imul
cmp
loope
aad
stos
lods
fs
mov
adc
jo
cmp
pop
insl
jnp
xchg
sbb
mov
jbe
shll
shr
sub
xor
mov
xor
push
clc
add
jno
shrl
stos
rcrb
in
lahf
cmp
in
sarl
push
cmp
or
bound
loop
push
test
cmp
mov
cmp
popa
jnp
movsl
xor
push
js
mov
pushf
std
cmp
xor
cmpsl
cmpsl
cmp
pop
pop
adc
xor
rol
sub
shll
ds
test
xchg
push
test
adc
arpl
outsb
or
lret
xchg
or
push
leave
cmpsb
fists
int
pusha
jmp
adc
or
pushf
addr16
mov
icebp
xchg
mov
out
icebp
push
xchg
add
std
pop
ss
gs
loop
ja
push
dec
cmp
dec
mov
mov
jecxz
mov
cmp
jge
and
xchg
xchg
lret
xchg
or
enter
dec
je
dec
or
lcall
mov
mov
test
xor
mov
clc
mov
xchg
mov
mov
jge
jnp
pusha
mov
jno
jns
mov
sub
jmp
fmul
pop
fcmovnb
inc
mov
cmp
out
or
cmp
and
pop
clc
loope
in
aam
push
lea
mov
into
jb
pushl
nop
cmp
add
cs
stos
xlat
add
push
adc
xchg
sbb
imul
and
in
xor
sub
cs
or
mov
subl
sbb
sbb
add
jecxz
hlt
lcall
xchg
jb
mov
xor
test
cmp
pop
add
mov
lcall
fists
or
jg
jle
add
mov
cmp
pop
jns
xchg
adc
test
fildll
adc
das
or
inc
xchg
fimuls
pop
sbb
inc
sbb
jns
icebp
into
cmpsb
popl
sbb
mov
sub
lods
adc
or
mov
stos
mov
push
flds
pop
stos
push
pop
jge
sbb
mov
cli
les
xor
cmc
xchg
jne
dec
push
mov
jmp
les
jbe
add
lods
or
insl
fsubrl
sub
jnp
mov
push
add
data16
xchg
pop
in
sbbb
push
fsubl
mov
shrl
out
arpl
ljmp
jnp
push
pop
pop
lods
sbb
cwtl
int3
fcmovu
ret
mov
push
pop
jns
mov
imul
push
and
int3
fstpt
adc
cli
mov
push
fdivrl
out
movsb
sub
nop
sbb
mov
push
xor
notl
imul
mov
shlb
sub
mov
cmp
in
pop
or
pop
jne
fsubs
fwait
icebp
mov
and
lret
ds
or
shr
sub
cmp
or
les
fisttpll
mov
pop
cs
xchg
in
addr16
jp
cmpsl
sbb
jle
pusha
xlat
pop
rcll
add
cmp
fwait
and
lea
jnp
das
insb
dec
adc
dec
call
inc
jecxz
cli
call
inc
lahf
cmpsb
push
in
sub
arpl
rol
add
test
or
xchg
pushf
or
fisubs
xor
repz
shrd
jne
into
or
xchg
mov
pop
test
cmp
push
mov
loopne
jno
cmp
jo
inc
lock
pop
jle
cmp
lret
mov
xor
jbe
mov
inc
sub
jmp
outsl
sub
pop
xchg
clc
int
addl
mov
jmp
cltd
mov
rorb
test
fidivrl
repnz
lahf
pop
xchg
rol
shl
fimuls
push
lods
sub
lahf
sub
push
insl
push
mov
mov
or
or
xor
and
xchg
mov
sarl
loope
add
mov
xchg
rcl
adc
stos
mov
movsb
inc
shll
into
push
or
push
fildll
xchg
int
scas
dec
aad
ret
fcompl
popf
pop
xorl
popa
xlat
leave
sbb
jb
pop
imul
cmpl
inc
call
fwait
sub
les
xchg
popl
jo
jecxz
shlb
nop
in
in
out
xor
lods
mov
cmpsb
mov
inc
sbb
mov
out
jl
rol
andl
les
cmpsl
xchg
inc
or
mov
cmp
xchg
lret
lret
repz
arpl
pop
pop
mov
add
lret
jns
cmp
in
push
add
iret
mov
lahf
sarl
lea
jns
out
dec
mov
sbb
pop
sti
ja
cmp
add
leave
in
add
push
fdivrl
cmp
mov
sbbb
xor
iretw
pop
setns
loopne
inc
subl
in
mov
xchg
imul
insl
test
cmp
dec
inc
inc
inc
jae
dec
or
enter
pop
push
and
iret
fists
mov
add
iret
pushf
shlb
int3
dec
sub
loope
jl
mov
andl
je
repnz
cs
cmp
cmpsb
or
pop
imul
add
push
inc
mov
dec
fwait
aaa
out
dec
imul
jne
aaa
int3
push
pop
xor
test
ficomps
cli
sub
into
testb
sahf
xchg
mov
pop
cmp
cmp
fildl
sbb
mov
decb
inc
call
ja
int
sub
aas
xor
add
in
in
nop
fidivl
mov
nop
aad
mov
popl
test
cmp
jecxz
xlat
mov
daa
adc
push
pop
mov
insb
dec
sbb
jo
mov
enter
lret
bound
stc
pop
fwait
outsb
out
mov
incl
mov
ret
cmp
mov
stos
inc
addr16
fcmove
fmul
inc
or
insl
jnp
xchg
inc
mov
cmp
popa
dec
bound
lods
cmpsl
inc
dec
test
xchg
dec
ret
sub
sbb
sahf
nop
sbb
idivl
lea
sbb
sub
enter
jae
aam
jns
out
jne
ja
pop
out
cmp
test
aaa
stc
xchg
pop
lods
or
sub
push
test
fcoms
in
sarl
dec
or
ret
cmp
adc
ret
lods
and
sbb
popa
data16
mov
cmp
stc
inc
out
cmp
push
test
xchg
xor
jo
adc
sub
out
mov
adc
add
mov
cmp
lret
mov
mov
aad
stc
shrb
inc
push
mov
push
aad
add
xor
mov
lds
lea
adc
idivl
dec
cld
xchg
dec
out
sub
push
mov
test
xor
cmpl
movsl
scas
jbe
or
add
sbb
or
leave
cmp
mov
insb
cmc
in
nop
mov
imul
sub
test
cmpsl
addl
push
in
inc
push
sbb
loop
mov
es
sub
mov
sahf
aaa
fwait
mov
in
jmp
xchg
inc
xor
push
pop
out
ret
nop
or
out
pop
test
pop
lea
xor
testb
sbbb
aas
pushf
pop
loope
pusha
mov
cmp
cmpb
sarl
mov
sub
and
xchg
fdivl
pop
push
adc
stos
mov
sub
jae
jge
mov
iret
cmp
xor
mov
hlt
fmuls
mov
ret
cli
ljmp
gs
les
jne
repnz
xchg
xchg
aad
jmp
cld
enter
push
rclb
sub
fdivrs
cmc
sub
ja
out
adc
jno
xor
ror
adc
arpl
aad
repnz
sbb
mov
cli
push
inc
xchg
jle
cltd
stc
sub
and
mov
push
cmc
insb
sbbb
fists
sub
fadd
cmpsl
bound
cltd
jge
xor
push
fwait
sub
fidivl
adc
sbb
inc
jl
adc
cmc
inc
pop
xchg
pop
fdivrs
aad
lret
fldcw
into
cmp
out
dec
xchg
es
add
jle
ret
in
loopne
sbb
mov
ret
cli
jmp
adc
fstl
or
rclb
jnp
popa
lods
sub
cmp
or
sub
mov
pop
or
mov
adc
jmp
daa
arpl
jecxz
lea
lret
mov
and
rorb
mov
rorl
hlt
lock
mov
test
fs
mov
pop
push
sbbb
clc
xchg
sarl
push
pop
xchg
mov
xchg
mov
lods
adc
add
dec
inc
sub
mov
out
repz
scas
scas
dec
cmp
xor
pop
clc
mov
call
jo
xchg
into
xchg
cmp
mov
jg
inc
inc
lods
ret
pop
xchg
rolb
ret
pop
lret
and
mov
lcall
dec
jecxz
in
dec
xchg
mov
or
xchg
test
je
into
pop
repnz
pop
lods
sarb
push
enter
dec
xorl
das
lahf
add
out
xor
das
sahf
push
repz
inc
shlb
add
sub
xor
and
inc
rorb
adcb
mov
mov
stos
shll
and
bound
adc
dec
and
inc
fiaddl
inc
cltd
les
test
stos
das
xchg
or
adcl
test
jbe
fidivl
sub
and
fildl
loope
ficoms
popf
push
dec
out
sbb
ja
xor
inc
pop
in
or
fisubrs
mov
sahf
push
jecxz
cmp
jge
xchg
xchg
imul
pusha
xchg
mov
pop
fcoml
push
lahf
outsl
cmpb
mov
fnstenv
scas
pop
mov
mov
cltd
leave
or
mov
sbb
lcall
into
je
push
lds
mov
xchg
mov
sbb
into
in
push
inc
daa
test
mov
mov
stos
and
dec
pop
or
decl
sbb
sbb
add
mov
dec
sbb
lahf
jle
repnz
xchg
jo
push
ds
add
ficoml
lret
in
in
and
add
into
psrlq
mov
cwtl
rcll
lock
xchg
leave
adc
fnstsw
mov
jno
int
xlat
xor
cmp
je
fisubl
mov
insl
push
insl
loopnew
push
and
ja
lret
and
xor
clc
mov
xchg
inc
jge
push
and
inc
ss
orl
dec
shrl
lods
push
inc
sub
jecxz
push
repnz
add
cmpsb
js
clc
inc
mov
xor
scas
imul
mov
mov
mov
mov
ljmp
imul
out
mov
jle
or
fdivr
dec
rorl
inc
js
stos
dec
es
clc
incl
filds
out
cmp
xchg
aaa
jno
sbb
sbb
hlt
inc
sub
add
inc
in
ss
je
adc
shlb
out
rclb
adc
ds
add
arpl
push
cmpsb
push
loopne
inc
aam
int3
mov
mov
or
xchg
inc
xchg
jg
mov
or
add
sbb
outsl
mov
mov
insb
push
lods
fcompl
test
aad
lock
jmp
xchg
outsl
fdivs
mov
dec
sbb
fildl
mov
mov
adc
cmpsl
hlt
lods
test
pushf
pop
lahf
push
push
or
xor
test
cmp
ss
adc
push
mov
cld
lods
aaa
adc
loop
stc
cmc
inc
imul
stos
and
push
lea
xlat
leave
cwtl
adc
mov
loop
cmp
sub
push
add
adc
inc
push
sub
xchg
dec
xor
inc
xlat
out
movsl
fsub
imul
hlt
shrb
add
add
adc
in
orl
mov
fprem1
mov
xchg
xlat
jmp
cmp
push
lea
mov
fisttpll
lret
sbb
insl
aam
int
xchg
iret
dec
and
or
jecxz
dec
sub
sub
out
push
popa
inc
add
stc
pop
pop
mov
imul
pop
inc
pop
das
in
stos
in
mov
sub
push
xor
loop
test
mov
mov
push
mov
outsb
xchg
mov
movsb
cs
mov
and
out
cmp
xor
mov
sbb
sub
test
push
and
and
inc
add
add
xor
xchg
dec
xchg
cmp
andb
jne
or
sbb
fwait
das
pop
sbb
xchg
jg
jne
jecxz
dec
adc
mov
lea
aad
or
data16
loop
popf
lret
push
sub
xor
por
cmp
dec
jns
cmp
cmpsl
out
pop
sbb
xor
ja
popf
mov
shll
xchg
and
rcll
sub
jle
mov
sbb
orl
and
std
ljmp
lahf
mov
add
pop
cld
pop
xor
jo
and
inc
fistpl
jecxz
gs
xor
xor
adcb
into
cmc
rcl
mov
sahf
dec
push
sarb
xchg
mov
inc
mov
fnstsw
cli
fidivrs
jecxz
jae
cmc
arpl
into
xchg
xor
lea
sub
mov
cwtl
ds
jp
es
sbb
imul
dec
cmp
ja
jb
xchg
cmpsb
and
in
xor
mov
loope
mov
sbb
popa
out
lcall
sbb
fwait
ret
lods
lcall
imul
sahf
add
mov
pop
sbb
xchg
or
mov
lods
cmc
push
arpl
cmpsb
pop
add
bound
call
dec
xor
sub
mov
jmp
sahf
nop
scas
xchg
arpl
addl
sub
jle
gs
jae
add
cmpsl
pop
push
mov
test
cmp
inc
shrb
mov
and
loope
sbb
jl
cmpb
roll
idivb
outsb
sub
lods
mov
inc
fldenv
aaa
jp
pop
lahf
push
addr16
fcoml
mov
imul
add
cmpsl
inc
or
mov
lods
adc
mov
pop
pop
sar
sbb
out
cwtl
call
dec
int
in
outsl
dec
xchg
daa
popf
mov
push
sub
pop
mov
mov
pop
push
and
cwtl
xchg
clc
pop
xlat
fmull
xor
mov
mov
xorl
test
in
loopne
pusha
inc
jnp
jl
ret
jecxz
dec
xchg
jle
popf
mov
push
mov
lods
mov
pop
jp
and
lds
inc
xchg
popf
and
mov
mov
mov
mov
push
loopne
ds
jle
dec
or
adc
shlb
aas
js
jne
dec
inc
xchg
call
jns
in
push
push
fmull
cmp
popf
inc
push
adc
pop
imul
jp
mov
test
cld
insb
out
fisubrs
adc
jne
out
mov
mov
cltd
bound
sbb
jmp
aaa
movsl
cwtl
test
loope
cli
push
and
cmp
repz
mov
enter
pop
mov
aad
lret
add
scas
mov
loop
aam
cmc
dec
or
in
inc
pop
xchg
test
in
into
lock
inc
mov
int
mov
lods
adc
mov
jmp
lcall
push
jmp
rcl
sub
sbb
xor
push
mov
insl
mov
or
out
inc
movsb
test
dec
xor
inc
xchg
pop
fstpl
daa
jb
mov
adc
mov
out
leave
fdivrp
leave
lea
repnz
or
imul
sbb
dec
ja
out
addr16
jecxz
sub
xchg
or
gs
dec
orl
lods
pop
mov
scas
in
cmp
sub
pop
cmpsb
popa
adc
in
cs
rcr
mov
out
test
mov
out
stos
out
xlat
mov
test
cltd
sarb
cmp
dec
out
mov
subb
shlb
xchg
pop
dec
push
fldt
cmp
push
lea
insb
popf
jl
arpl
push
xor
add
mov
pop
mov
mov
jl
or
movsl
mov
cmpsb
or
movsl
xlat
aam
jne
jp
or
insl
ljmp
mov
int
imul
inc
sub
xchg
icebp
loopne
jae
jecxz
int3
adc
xchg
sub
bound
movsb
mov
fwait
popf
in
cs
movsb
cmp
jmp
xlat
pop
imul
push
rcr
sbb
shrb
push
in
inc
sub
insb
aam
mov
outsl
pop
mov
fdivs
mov
arpl
sub
dec
jle
inc
pusha
jmp
xchg
and
sbb
dec
sahf
das
jg
ret
cs
push
mov
jns
or
adc
repnz
xorb
mov
pop
or
fwait
sahf
pop
daa
ja
dec
les
ret
mov
out
inc
sbb
or
aam
mov
stos
or
aaa
lods
sub
add
cmpsb
rclb
loopne
pop
fistl
cltd
scas
je
shlb
aaa
test
fldl
popa
or
jmp
mov
je
cmp
popf
inc
and
fcomi
jmp
mov
ljmp
dec
mulb
inc
mov
sahf
or
pop
sub
xor
jae
jl
dec
mov
add
outsl
fdivp
out
xor
sub
mov
les
decl
xor
push
loop
inc
ja
es
cmp
loop
cmpl
js
das
imul
mov
adc
ljmp
sub
mov
push
lock
xchg
push
dec
hlt
mov
test
sbb
sahf
adc
adc
jecxz
movsl
fwait
fdivrl
xchg
sbb
loope
sahf
xchg
and
or
stos
adcb
scas
shr
outsb
xchg
pop
shll
jae
dec
lock
stc
dec
outsl
pop
xchg
dec
push
xchg
in
and
pop
ret
imul
je
ret
push
xor
xor
inc
mov
std
inc
mov
inc
cmp
push
jbe
rclb
mov
sbb
cmc
adc
add
loope
ss
xor
dec
sbb
push
fdivl
xchg
aam
jnp
mov
cmpb
sbb
in
push
and
addr16
mov
out
and
and
les
inc
fldcw
inc
inc
stos
nop
nop
mov
xchg
xor
movsl
lds
pop
sti
arpl
scas
mov
pop
dec
mov
sub
adc
mov
dec
loopne
mov
dec
out
test
and
je
popf
test
les
loopne
jg
xchg
out
jbe
lcall
xchg
in
lods
imul
push
mov
xchg
add
test
rcll
push
out
stc
lds
push
mov
inc
enter
ja
push
xor
ss
loope
shlb
pusha
movsb
xlat
leave
cmp
ret
push
jmp
sti
xchg
sbb
and
xchg
outsb
push
gs
dec
xchg
out
adc
es
out
call
std
out
xorb
testb
push
popa
mov
into
stos
inc
xor
nop
adc
ret
mov
fwait
lock
ss
iret
int
pusha
insl
sarl
es
movsl
inc
les
xorb
fcoms
jmp
mov
push
cs
cmp
inc
add
pusha
add
mov
jge
mov
pop
movsb
mov
sub
jb
and
dec
xchg
addr16
push
fists
mov
lcall
dec
scas
sub
cmp
jg
lret
add
cmp
pushf
sub
cmpl
xchg
aam
dec
mov
aaa
sbb
sub
or
sbb
dec
inc
fmulp
mov
mov
adc
movsl
xchg
pop
fs
xchg
mov
jg
xor
stc
dec
lods
sbb
push
sub
mov
hlt
aad
mov
or
in
inc
jl
aas
sbb
hlt
mov
mov
movsl
fdivrl
js
arpl
or
int3
dec
xchg
inc
clc
inc
imul
adc
and
fnstsw
jge
lods
mov
push
inc
enter
push
xlat
lret
stc
and
sub
daa
dec
jle
mov
xchg
cltd
scas
cmp
sub
test
testb
nop
mov
das
pop
and
mov
push
test
aas
xchg
fnsave
in
je
xchg
push
repnz
and
pop
push
dec
repz
add
fistps
test
push
jae
adc
lea
xchg
mov
and
adc
sub
into
movsl
arpl
cmp
cld
mov
xchg
clc
jge
nop
and
mov
add
addr16
mov
jl
fimuls
jmp
dec
sbb
cmp
inc
mov
jle
popa
add
movsb
ja
dec
into
jle
pop
xor
jb
xchg
leave
adc
cs
push
outsb
lds
mov
stos
cltd
sbb
cmpb
xor
xchg
push
lods
adc
insl
negb
rolb
inc
sub
dec
in
pop
pop
out
sbb
cltd
pop
push
xchg
jno
add
jno
leave
or
mov
push
or
ja
push
jle
fidivs
jo
xchg
roll
out
out
or
push
mov
add
mov
sub
cmpsl
dec
outsl
pop
imul
sub
cmpsb
cld
jo
jmp
loop
pop
js
fstps
sub
lods
xchg
cs
jne
mov
lock
sbb
pop
in
test
lock
into
sqrtps
mov
shl
insb
sub
fwait
add
out
out
test
mov
sub
in
loop
lods
popa
xor
daa
cmpsl
mov
xor
or
mov
xchg
push
push
dec
ljmp
jmp
pushf
add
push
hlt
enter
add
jmp
ficompl
hlt
mov
add
push
notb
sti
cmp
pop
sbb
sbb
add
or
gs
popa
ror
mov
mov
cmp
jne
lret
dec
int
outsl
cltd
dec
iret
push
sub
repz
sub
frstor
mov
jl
inc
xlat
test
and
pop
inc
in
mov
lods
mov
dec
fbstp
gs
orl
inc
movsl
out
push
movsl
out
and
ss
xchg
gs
loopne
add
cmp
or
lods
or
sub
adc
push
out
lods
fwait
xor
jno
insb
pop
inc
outsb
xchg
xchg
fistps
lea
xchg
lods
cld
xor
xor
fxtract
mov
push
lods
leave
add
fidivs
dec
xchg
xor
dec
mov
addr16
or
or
mov
xor
shrb
sub
shrb
sub
lock
cmp
mov
mov
fstpt
sbbb
mov
test
int3
pop
cmpsb
mov
mov
repz
pop
push
in
pop
imul
dec
orl
popf
and
xchg
push
sbb
mov
mov
push
mov
pushf
lret
push
addr16
inc
xor
dec
add
jmp
push
dec
pop
jg
and
mov
sub
push
xchg
mov
mov
mov
stos
or
mov
fnstcw
cmpb
inc
mov
and
into
enter
int
sti
or
and
imul
xchg
imul
int
pop
mov
mov
mov
stos
cmp
repz
push
filds
ljmp
sub
inc
or
das
mov
lcall
fstl
sub
lds
push
push
mov
js
sub
in
pop
xlat
jnp
mov
cmp
push
imul
or
xchg
ja
xor
and
lcall
cmp
push
clc
cmp
shrl
xchg
insb
xchg
sbb
and
inc
cld
mov
cmpsb
add
push
test
xchg
cli
sbb
and
lret
js
sub
rclb
or
imul
mov
inc
xchg
jae
dec
pop
cli
xchg
sbb
mov
imul
shrb
pushf
stos
and
inc
push
mov
dec
nop
sub
dec
stc
aaa
addr16
lret
sbb
cmp
lods
mov
iret
or
ljmp
in
lds
xor
loopne
out
pop
xchg
or
int3
add
daa
xlat
addl
dec
ret
inc
sbb
mov
incb
mov
pushf
add
cmp
inc
mov
adc
jl
nop
jnp
out
shll
xchg
xchg
pusha
adc
fsubrp
fwait
adc
or
sub
sbb
sub
cmpsl
push
and
pop
invd
add
ret
lret
sbbl
push
into
leave
sahf
and
test
shl
pop
pop
lds
pop
or
cs
fistpl
sbb
mov
sub
sbb
das
in
call
in
xchg
mov
decl
jns
mov
mov
cmp
mov
iret
insb
test
pop
loop
jge
jle
addr16
inc
dec
fwait
cmp
xlat
imul
aad
pop
xchg
call
shlb
dec
push
mov
pop
es
out
mov
mov
addb
loop
repz
out
test
je
mov
repz
sub
dec
xchg
dec
repz
push
lcall
mov
loop
and
inc
mov
loop
mov
cmpb
negb
dec
fs
hlt
inc
fldcw
mov
cmpsl
fdivs
mov
jb
adc
aad
iret
push
jne
sbb
pop
dec
lock
int3
cmp
lock
in
in
out
movb
orl
cli
pop
fwait
adc
mov
xchg
adc
push
dec
test
sti
xchg
jle
jge
pop
iret
ret
push
imul
ret
aaa
mov
adc
gs
mov
test
imul
mov
dec
jo
or
or
mov
and
arpl
cmp
mov
scas
insb
jbe
sub
iret
sub
dec
jle
mov
insb
push
xorb
pop
divb
cld
out
cmpsb
mov
add
out
lahf
bound
cmp
int3
jnp
mov
or
and
push
mov
jb
icebp
adc
dec
lock
jb
pop
int3
fidivs
sub
hlt
push
scas
mov
data16
mov
push
jae
sbb
insl
stos
lcall
je
cwtl
adc
jbe
cltd
sar
pop
cmp
test
lods
cs
adc
jno
cld
sub
dec
push
add
pop
lods
push
out
hlt
dec
pusha
or
mov
mov
sbb
mov
adc
call
jnp
fisttps
mull
mov
leave
sbb
jle
mov
cmp
inc
in
inc
mov
push
mov
ss
push
xchg
xchg
or
jl
insb
mov
cmp
leave
out
push
xor
stos
dec
pop
inc
insb
and
jle
xchg
in
dec
andb
lret
cmpsl
pop
std
repz
iret
fiadds
jge
lcall
fstpl
xchg
cmp
fstl
push
out
sub
inc
dec
subb
jae
cs
adc
out
xchg
xor
jl
ja
int
les
in
imul
adc
cmp
sbb
rorb
mov
push
pop
bound
scas
push
ror
je
sbb
push
dec
add
rcrl
xchg
orl
sub
outsl
pop
or
je
repnz
jle
xor
int3
mov
call
add
mov
ret
test
xor
data16
pop
cld
cld
or
cmpsl
dec
cltd
addb
into
cmpsl
popa
lock
je
jmp
test
nop
jmp
or
jmp
mov
add
imul
push
add
lods
cmp
push
mov
int3
push
jmp
sahf
daa
fidivrs
and
jo
divl
fisubs
shll
hlt
ljmp
jge
fwait
inc
xor
jns
pop
xor
cli
jle
insl
loope
mov
mov
xlat
cmp
cmp
addb
out
push
cli
add
aad
cmp
and
and
dec
movsb
adc
mov
pop
add
mov
out
imulb
mov
std
mov
outsb
into
inc
ljmp
adc
fs
xchg
cmp
inc
push
ds
cmp
mov
jp
inc
fstp
mov
popf
repnz
mov
aad
jae
adc
out
jle
pop
sti
repnz
pusha
rolb
inc
push
outsb
xchg
jns
lret
out
aaa
out
sub
leave
cs
pushl
sub
xchg
adc
mov
or
roll
je
xchg
loope
mov
test
cmpsl
cmp
and
sub
push
mov
push
mov
shrl
ljmp
mov
stos
ficoml
bound
inc
repz
outsb
icebp
dec
sbb
aam
repz
xchg
aad
pop
movb
call
fmull
mov
lcall
mov
pop
rclb
pop
aaa
es
int3
jle
mov
out
notb
and
xor
lods
ret
das
rorl
aam
mov
rclb
xor
lock
ret
jae
xchg
pop
mov
out
pusha
fcmovne
mov
push
jg
cmpsl
scas
adc
out
push
mov
int3
lret
and
ret
push
push
in
cmpl
xor
cmpsl
fucomp
daa
xchg
insb
sbb
cs
and
mov
add
xor
adc
adc
pop
clc
das
out
pop
mov
popa
mov
orl
pop
pop
lcall
push
xchg
sub
aam
mov
mov
addr16
xchg
mov
push
imul
stc
lods
aad
inc
or
mov
lods
push
rcr
out
add
addb
clc
xchg
fcoml
test
pop
je
popl
push
push
call
mov
pop
mov
jne
fisttpll
imul
mov
dec
add
mov
mov
mov
ss
cmc
fwait
jp
xor
rorl
movsb
mov
ds
out
adc
mov
jnp
dec
sbb
push
sahf
ljmp
ds
xchg
inc
push
cmpsb
cmp
ss
xchg
cmp
adc
outsb
pusha
sbb
cmp
mov
stos
shl
mov
cmovno
sub
in
clc
sub
push
sarl
dec
cmp
xor
pop
jg
stos
mov
ja
sub
cs
stos
sbb
push
adc
mov
mov
mov
jnp
iret
fdivl
out
add
cwtl
in
cmpsl
rorl
enter
movsl
fcmovnu
add
gs
push
ds
xor
mov
xor
adc
enter
push
ds
add
jnp
sti
pop
or
push
or
mov
inc
xor
jge
insl
mov
scas
sbb
aaa
adc
hlt
xchg
outsb
mov
xchg
je
insb
sarb
mov
mov
sti
cmp
iret
icebp
jl
jne
push
subl
push
sub
push
jmp
dec
mov
jmp
push
leave
das
cmp
mov
xor
xor
jbe
stos
scas
andl
and
outsl
pop
ret
or
rcl
and
pop
inc
mov
dec
mov
cld
cmp
inc
mov
fcmovnb
pop
mov
jno
inc
push
and
addl
inc
pop
pop
xchg
cmpsb
inc
jb
mov
lcall
jbe
dec
jbe
ret
or
ljmp
lahf
mov
ss
gs
inc
jecxz
icebp
pop
sub
nop
test
sti
sbb
or
lods
arpl
sbb
movsb
sbb
jb
sub
bound
jo
inc
push
jne
repnz
xchg
jge
cmp
insl
je
cmp
mov
movsl
cld
inc
push
jae
pop
cmc
or
int
sbb
mov
icebp
xlat
std
out
xchg
dec
or
int3
pushf
dec
push
imul
xchg
aam
lret
add
aas
ret
pop
adc
in
js
pop
les
push
lds
sti
sahf
mov
push
xor
sbb
loop
pop
call
sub
lds
andb
scas
aas
pop
mov
shrb
out
inc
shlb
xor
into
cld
sub
mov
testl
xchg
jmp
push
jne
out
hlt
in
add
aas
mov
nop
je
inc
pop
xor
xchg
xchg
sub
mov
hlt
test
jb
loopne
inc
imul
lock
roll
jmp
es
cmpsl
out
or
and
or
cwtl
pop
jns
mov
divb
clc
pop
mov
and
call
dec
xchg
je
pop
dec
in
mov
dec
lods
cmp
shlb
repz
mov
dec
rcrb
mov
stc
cmpsl
bound
lret
dec
orb
add
stos
cmc
adc
cld
iret
cli
xor
cwtl
sbb
shl
adc
adc
pop
mov
adc
aaa
xchg
cwtl
pushf
inc
pop
rorb
adc
inc
clc
xchg
inc
mov
scas
mov
pop
adc
and
jno
adc
adc
adc
arpl
sbb
xor
pop
stc
test
mov
fwait
bound
xor
push
loope
imul
pop
iret
cli
and
shl
inc
sbb
jno
inc
pop
rolb
stos
and
push
jl
xor
movsl
test
xchg
adc
sbb
idivb
mov
iret
pop
mov
ljmp
sub
sbb
scas
outsl
or
test
pop
sub
mov
xor
or
in
xor
dec
sub
imul
das
jae
cwtl
repnz
lods
out
adc
mov
jl
jno
lods
mov
pop
pushf
pop
dec
call
adc
test
lret
cmc
lock
or
mov
or
add
jae
pop
test
cld
or
sahf
mov
insl
mov
mov
and
xchg
sub
in
stos
ret
jmp
xor
jbe
stos
mov
in
mov
adc
dec
adc
rolb
out
fldl2t
xor
push
fisttpll
testl
negb
adc
mov
jb
enter
and
inc
popa
mov
fistps
fisttpll
adc
ss
das
pop
and
imul
dec
jg
mov
mov
enter
dec
add
mov
dec
sahf
rcrb
add
fdivp
xchg
aaa
xchg
sbb
mov
pop
mov
mov
jmp
or
out
mov
filds
shlb
xlat
sbb
push
mov
lds
lods
cli
gs
pusha
jno
pop
pop
ror
jae
sub
cwtl
out
cmp
push
xchg
jno
ret
repnz
fldcw
jl
add
clc
mov
mov
je
pop
call
iret
or
jae
adc
adc
pop
sbb
test
ljmp
jo
scas
sbb
xchg
imul
arpl
ss
push
mov
lock
push
jo
lahf
pop
jp
mov
pop
inc
inc
adc
sbb
and
out
cmp
pop
cmp
cld
aas
pop
xor
lret
cmp
mov
xchg
mov
jg
subb
aaa
cmc
xor
out
mov
loope
ja
jp
cltd
inc
sub
negl
adc
dec
addb
loop
adc
lcall
jae
adc
nop
dec
repz
test
push
xlat
mov
cwtl
dec
xchg
mov
jecxz
shll
insb
mov
stos
cmp
dec
test
or
mov
mov
std
sbb
pop
push
xchg
dec
jmp
mov
cli
dec
inc
sub
and
and
adc
dec
inc
push
popa
add
nop
mov
std
inc
fsubl
mov
scas
ja
aad
sti
repz
mov
add
jl
loopne
lds
ljmp
mov
subb
roll
cmp
bound
and
and
mov
or
jbe
fistpll
jmp
jle
out
sbb
cmp
mov
mov
xchg
push
daa
loop
add
sbb
add
mov
adc
mov
ja
jo
shl
fs
xchg
dec
stos
clc
push
pop
inc
daa
addr16
fnsave
bound
inc
cs
sub
loope
mov
jl
aaa
push
mov
dec
push
mov
sbb
xorb
daa
push
mov
jmp
inc
cmc
fidivrl
push
lret
sub
inc
pop
pusha
push
xchg
sbb
push
mov
clc
imul
lret
xchg
mov
in
mov
jmp
cmp
call
sbb
mov
std
jno
add
mov
xchg
mov
jbe
mov
shll
xchg
sbb
repnz
jl
jge
lds
rclb
push
dec
dec
xchg
out
mov
je
into
mov
cmp
jp
cmp
pop
fisttpll
test
xor
mov
adc
in
hlt
mov
movq
pop
jne
fcomip
inc
xchg
xchg
sbb
gs
mov
push
add
in
xor
mov
lcall
out
lret
iret
cmp
test
test
pop
pop
and
or
fbstp
cmpsl
jmp
aas
push
or
je
leave
pop
dec
pop
cmp
and
fistpll
mov
push
jnp
jns
sahf
or
pop
dec
or
pop
xchg
mov
popf
in
ret
mov
jae
repz
xor
pop
xor
push
inc
sub
adc
xlat
or
xor
mov
mov
scas
addr16
repnz
out
int3
xchg
aad
or
xchg
sub
xor
dec
mov
push
mov
adc
stos
dec
mov
adc
sbb
xlat
jo
outsb
cmp
sub
push
mov
je
das
rcl
sub
jno
xchg
loopne
mov
gs
jns
int3
xchg
sub
dec
out
or
jp
mov
outsl
add
xor
dec
pusha
scas
into
xchg
enter
sbb
outsl
stc
mov
test
dec
cmpsb
dec
push
xchg
shrl
xchg
dec
xchg
nop
xor
cli
push
inc
cmp
mov
test
mov
repz
out
out
push
insb
jecxz
push
add
jo
into
pusha
std
jp,pn
or
sbb
mov
or
xlat
psllq
loope
sub
outsb
dec
in
enter
movsb
scas
cmp
push
add
cmpsb
cmp
jbe
lsl
ret
loope
sub
or
rorb
sub
cmp
push
dec
into
xchg
jp
arpl
add
fnstenv
out
sbb
xchg
dec
lods
sbb
and
addr16
gs
test
pop
mov
das
xchg
aaa
ljmp
fsubrp
call
cmp
xor
stc
mov
sub
iret
mov
test
ror
sbb
inc
lahf
or
rorb
mov
testl
mov
inc
not
jecxz
dec
dec
dec
cmp
xchg
mov
and
rorl
push
imul
jae
sub
fsubs
mov
andl
inc
lds
div
mov
aam
xor
inc
add
jb
inc
sar
cltd
ss
mov
cld
aas
xlat
sti
add
popa
mov
outsl
ret
inc
in
dec
in
es
cli
movsb
mov
inc
loope
cmp
jns
pop
movsl
mov
or
cmp
sahf
loope
lcall
pop
adc
push
insb
and
cmpsl
sbb
mov
enter
mov
push
xor
loop
das
sti
xchg
in
mov
imul
add
lods
inc
in
lahf
popf
jmp
dec
or
mov
iret
pusha
movsl
xchg
adc
fisttps
dec
testb
or
sbb
fsubs
push
sbbl
fsincos
lret
xchg
jmp
xor
jge
pop
xchg
pop
sub
xor
add
cltd
mov
xchg
xchg
xor
dec
add
mov
in
and
jno
lods
fwait
sbb
xlat
fsubs
xchg
push
aad
dec
loope
inc
adc
hlt
xchg
outsl
mov
xchg
jg
xchg
mov
scas
jp
inc
cwtl
test
cmp
jge
pop
mov
decb
outsb
adc
out
or
pop
ja
sub
mov
lods
adcb
addl
push
inc
cmpb
loopne
mov
adc
and
negb
lock
sahf
pop
push
std
popa
mov
lret
cmp
adc
sbb
sbb
js
insl
ret
xor
out
outsl
xchg
adc
cmpsl
cwtl
dec
movsl
js
mov
stc
push
ret
cmp
xchg
push
loopne
dec
sub
lea
sbbl
mov
xchg
sbb
out
xor
jp
in
sbb
ds
xor
push
push
notb
ss
mov
dec
aad
pop
push
adc
pushf
add
push
fstpt
mov
lods
repz
push
stos
js
test
in
dec
call
and
cwtl
fdivrs
inc
sbb
or
fdivr
jl
aam
mov
or
sahf
push
sub
mov
notl
and
out
jecxz
or
imul
test
dec
not
aaa
xchg
cmp
lcall
insb
xor
adc
cmc
mov
test
adc
cltd
adc
adc
cmp
and
xchg
out
inc
mov
xor
iret
push
jge
cld
fwait
sbb
cmpl
inc
in
out
xor
add
sbb
add
sbb
mov
or
mov
jmp
jae
lahf
dec
outsb
fisubrl
mov
gs
fsubl
test
sbb
lds
jnp
aam
in
int3
pop
int3
and
xor
push
rcrb
pop
aad
repnz
or
es
add
cmpsl
faddl
ret
std
fistpl
loopnew
push
ret
rcrl
mov
jmp
int3
ss
je
mov
aad
cmc
loop
and
add
jmp
inc
outsb
add
add
pop
inc
pop
inc
pop
push
clc
cli
mov
xchg
cmp
sub
pusha
test
xor
lods
dec
pop
int3
and
mov
cwtl
data16
lahf
or
pop
ret
popa
adcl
bound
stos
add
mov
push
scas
and
divb
push
adc
and
mov
shlb
or
lock
les
adc
xchg
out
pop
sbbb
movsb
mov
jae
xchg
push
sbb
cli
and
nop
or
aam
pop
jp
mov
or
dec
xor
jge
jp
jo
notb
mov
push
sub
cmp
jo
xor
push
aaa
fists
shlb
cmp
ss
push
bound
dec
cmc
ja
int
sti
cmp
inc
pop
in
mov
jnp
ss
mov
cmp
dec
pop
add
mov
nop
push
or
and
cmp
imul
daa
push
movsb
aad
das
jmp
fisubl
mov
popf
rorb
ds
shl
stos
imul
and
add
js
imul
ret
sbb
movsb
testl
fiaddl
push
mov
stc
cmpsl
lea
scas
pop
call
mov
adc
in
and
lcall
rcrl
pop
ret
add
int3
sbb
insl
icebp
enter
xlat
ret
pop
jle
dec
dec
lods
sbb
cmp
repz
lret
push
xchg
push
and
shll
imul
cmp
test
out
inc
dec
xchg
dec
leave
push
lret
mov
sub
or
mov
pop
mov
frstor
loope
js
pop
mov
mov
sahf
xor
pusha
inc
mov
lret
imul
push
and
pop
dec
jp
decb
and
outsl
bound
sbb
and
subl
pop
loope
stos
sub
jl
jb
push
jnp
xchg
xorb
mov
loope
adc
cmpsb
push
mov
imul
cmpsb
mov
gs
push
das
xor
jl
addl
test
fstpl
cmpsl
mov
or
enter
lcall
jb
es
lret
lods
cmpsb
jb
lea
push
insl
enter
dec
mov
loope
dec
mov
pop
ja
das
push
nop
hlt
lret
mov
pop
inc
xor
jle
hlt
pusha
jg
rolb
xor
cmp
adc
pop
adc
dec
fdivs
fadds
iret
jle
ss
fisttps
test
inc
dec
jle
lods
gs
js
popf
mov
clc
stos
in
sarl
aam
inc
mov
dec
incb
mov
loop,pt
jne
inc
sub
stos
mov
sbb
movsl
mov
scas
aaa
push
xchg
bound
mov
or
testb
mov
shrb
iret
call
icebp
arpl
dec
adc
rcrw
push
sub
push
rorb
js
movsl
xor
sub
jno
lcall
clc
and
ret
sub
fcmovnbe
mov
punpcklbw
or
and
jb
cli
clc
sbb
stos
dec
shrb
dec
or
sub
iret
and
inc
in
repz
movsl
outsl
sbb
or
mov
sbb
iret
sbb
les
add
xor
mov
faddl
or
inc
fdivr
sub
add
sub
push
lahf
stos
cmpsl
test
push
out
out
loop
daa
leave
outsl
insb
pop
push
lods
fs
call
ss
cmp
push
jmp
dec
mov
jae
and
push
test
and
dec
out
xor
adc
sub
loopne
pop
bound
negb
mov
gs
xchg
daa
test
dec
bound
enter
push
jmp
clc
rcr
mov
rcll
xchg
jo
jecxz
sub
mov
scas
adc
insl
aas
movsl
mov
add
add
push
aaa
mov
or
fxrstor
lret
mov
push
cmp
and
mov
xlat
or
std
mov
test
and
sub
adcb
fistps
adc
mov
fsubr
arpl
test
bnd
ret
sbb
xlat
decb
les
or
outsl
std
inc
dec
pop
dec
and
sub
xor
pusha
out
test
int
cmp
mov
mov
adc
movsl
aad
pushf
aam
mov
insl
sub
dec
xchg
pop
imul
ss
sub
xor
clc
inc
dec
int3
neg
jne
mov
arpl
loopne
mov
fisttps
rcll
cmp
mov
ja
mov
push
or
or
addl
ds
mov
or
cmp
jns
sub
cld
fldl
add
divl
lds
and
mulb
loope
test
lahf
inc
mov
fisubl
push
pop
push
inc
xchg
add
push
xor
xchg
cli
je
dec
mov
xor
cmpsb
xchg
push
and
data16
ja
pop
pop
xchg
sarl
test
pop
and
mov
inc
add
or
es
xchg
pop
cmc
push
jo
push
adc
mov
cmpsl
add
dec
cwtl
hlt
cmp
imul
xchg
add
ss
sub
leave
clc
testl
int3
jbe
mov
jmp
clc
movsb
and
popa
or
inc
mov
orl
dec
out
cs
jg
jo
shrb
cs
cli
push
mov
cmp
push
sbb
clc
xor
pop
scas
lds
lcall
test
push
mov
jae
mov
sbb
imul
loope
lret
icebp
jne
and
or
shrl
mov
test
xlat
mov
cmp
pusha
int3
push
and
xchg
pop
nop
push
aad
push
lods
dec
aam
mov
mov
add
insl
sahf
aad
nop
sbb
addl
jnp
pushf
dec
mov
jb
mov
ret
jmp
leave
adc
out
int
ficoml
clc
jo
jnp
arpl
inc
push
mov
ss
aam
into
das
aas
lods
fmulp
int3
jle
pushf
sub
mov
es
sub
outsb
lods
movsl
fidivrl
push
inc
testl
add
and
jb
mov
pop
pop
loop
sub
sbb
ds
mov
sub
fcoms
push
jle
jmp
sbb
and
fadds
test
rep
lods
adc
mov
sbb
mov
xchg
pop
cld
gs
pop
or
jbe
imul
push
push
mov
and
fbld
adc
mov
stos
repnz
cmp
sarb
jnp
inc
or
outsb
call
jmp
or
mov
mov
out
hlt
in
lock
inc
dec
jp
lock
int3
stc
cmp
mov
pop
cmp
jle
mov
jb
in
jae
xchg
test
cld
push
subb
adc
jbe
leave
ds
lds
jecxz
mov
dec
inc
cld
cld
mov
mov
push
fistpl
jns
cli
inc
dec
sub
mov
mov
scas
divb
sbb
out
ret
jle
inc
jg
lret
negl
sti
adc
sub
faddp
xor
and
add
mov
enter
mov
out
push
ja
push
in
mov
sbb
in
pop
out
test
jmp
dec
push
mov
mov
cmp
push
sub
push
push
into
mov
inc
and
nop
xchg
cwtl
aad
and
scas
mov
adc
sahf
aam
add
mov
clc
add
push
loope
les
outsb
mov
or
popf
mov
sbb
es
push
add
shl
add
test
aam
xlat
popf
inc
sub
iret
push
xchg
inc
cmp
push
roll
lret
add
dec
rorb
or
sbb
and
aad
or
sub
out
mov
mov
xchg
xchg
cmp
imul
mov
add
sub
mov
out
shll
mov
push
jns
cmpsl
test
dec
mov
cmp
cli
lock
add
insb
aam
adc
jb
sub
add
adc
sbb
out
and
mov
adc
andb
push
mov
cmpsb
test
push
inc
pop
into
dec
cmc
mov
dec
cli
loopne
fcompl
faddp
iret
mov
mov
jne
fstl
in
xor
pop
mov
push
aas
mov
pop
addl
adc
sbb
lcall
pop
cmp
stc
push
es
imul
out
adc
fisttpl
lahf
or
dec
fdivl
or
xor
shl
add
shrb
dec
push
sbb
xorb
stos
and
mov
mov
aam
outsl
test
mov
and
lcall
je
inc
xchg
adc
stos
stos
xchg
sbb
jmp
jnp
adc
test
jne
jecxz
xor
push
dec
bound
pop
das
mov
movsl
mov
mov
sti
jo
and
fisubs
push
repz
xchg
cmp
xchg
shll
lods
xchg
icebp
hlt
bound
sub
add
and
add
mov
sbb
repz
addr16
mov
dec
jns
scas
aas
mov
scas
ds
dec
and
sub
mov
enter
lret
and
into
int
xchg
in
push
shrb
xor
pop
fiaddl
or
scas
or
xchg
dec
lock
and
sub
xchg
or
push
sub
push
leave
sbb
and
cltd
jle
loopne
popf
test
mov
mov
sub
aam
pop
in
or
les
xor
cltd
xchg
cmp
pushl
daa
cs
jo
sbb
xchg
mov
pop
sbb
push
ljmp
repz
loopne
ret
pushf
jg
mov
mov
xor
xchg
sub
push
rcrl
scas
insl
pop
push
sub
sti
push
mov
ds
hlt
cmp
jge
mov
lods
cwtl
inc
aaa
hlt
pop
stc
pop
shll
jb
stos
or
cmc
aam
xor
aam
mov
mov
daa
add
imul
mov
pop
shlb
adc
insl
jns
sbb
cmp
outsb
mov
cld
adc
pop
jg
and
xorps
into
cmp
xchg
nop
push
mov
sbb
lods
lret
jp
loop
jge
call
mov
sbb
inc
xchg
test
and
push
mov
adc
cmp
mov
and
mov
fdivrl
rolb
int
repz
mov
add
sub
mov
leave
adc
popa
jl
add
cmpsw
sub
or
push
testb
adc
xor
lods
jecxz
stc
bound
lcall
push
sub
add
jb
sub
ss
inc
adc
je
pop
push
neg
sti
mov
lcall
in
iret
int3
fdivrs
into
mov
dec
aas
jns
jg
push
mov
ret
cld
negb
inc
cmp
mov
xchg
add
inc
out
ljmp
and
loop
rcrl
aam
jle
sbb
frstor
sahf
into
and
loope
or
test
cmpsb
in
pop
mov
mov
mov
fiadds
cmp
xchg
pop
shrl
inc
adc
push
push
bound
sub
push
pushf
loope
pop
adc
fidivl
push
xor
add
dec
lahf
out
add
ja
jno
jbe
jle
push
repnz
xchg
add
ja
pop
or
cmpsb
ljmp
lahf
xchg
and
push
iret
je
std
dec
sbb
dec
sbb
jno
imul
lret
lret
loop
fwait
ds
fmuls
mov
cli
ja
mov
mov
mov
lods
mov
aam
xchg
sub
add
das
das
leave
dec
pop
out
or
jp
push
add
movsb
aam
enter
pop
mov
cli
testl
jg
cmp
sbb
or
lock
xor
xor
faddl
popf
in
aad
insb
mov
jno
xorb
or
call
xor
jmp
clc
inc
jle
pusha
int
pop
or
call
mov
jns
add
out
mov
stc
das
or
inc
mov
xchg
popa
mov
loope
xor
test
jno
lcall
add
aaa
xor
mov
test
mov
or
and
mov
loope
pop
pop
add
in
adc
arpl
aaa
adc
aas
in
or
pop
test
daa
cltd
and
mov
into
je
loop
aas
pop
ljmp
mov
xor
mov
enter
ss
pop
xlat
fstpl
pop
jae
jle
sbb
and
daa
shll
dec
cmpsb
mov
popa
mov
rol
xor
inc
xchg
sub
pop
sub
push
call
dec
mov
mov
scas
push
cwtl
inc
rcrb
or
inc
je
xchg
std
push
add
jne
sarl
xor
mov
je
movb
mov
rclb
int
test
mov
adc
es
add
cmpsl
jae
sbb
cmp
inc
pushf
or
pop
scas
push
mov
fistpll
lret
pop
sbb
dec
jbe
sbb
mov
and
ljmp
fisubs
repz
push
fdivrs
dec
lret
and
sub
or
and
mov
enter
jbe
and
push
jg
lret
mov
mov
xor
mov
pop
fisubl
mov
xchg
cli
pop
mov
shrb
and
cltd
jp
jmp
mov
loop
enter
xlat
pusha
lea
cwtl
jo
loope
mov
ret
dec
push
cmp
add
es
imul
es
lret
xchg
fdivr
les
lods
fsubrs
pop
mov
dec
imul
or
sbb
rclb
inc
hlt
mov
sti
jp
mov
sbb
int3
es
xchg
lds
xor
cmc
push
xchg
adc
int
and
and
pusha
jo
sub
mov
xor
inc
frstor
xor
sbbl
repz
mov
mov
sahf
arpl
jmp
lds
xor
sbb
fcompl
pop
mov
xchg
add
jns
pop
sub
test
and
shlb
icebp
sub
das
or
cmp
in
cs
jecxz
xor
push
cs
or
sbb
mov
lret
pusha
mov
out
inc
or
or
or
push
popa
aas
stc
repz
sahf
xchg
or
ljmp
mov
push
imul
jl
shrb
sub
sbb
xchg
ret
and
pushf
mov
ret
mov
shl
xchg
jecxz
mov
adc
mov
fiadds
jg
sbb
frndint
adc
push
in
in
pop
mov
jns
adc
enter
mov
mov
cmp
das
jp
mov
inc
scas
negb
lods
daa
mov
add
mov
scas
add
lds
sbb
xor
and
iret
push
jecxz
mov
sub
insl
xchg
jae
cltd
sbbb
mov
das
cmpl
jno
leave
out
into
or
or
sub
sbb
pop
jns
ficoml
mov
pop
push
mov
idiv
aas
sbb
cld
jo
sub
insb
pop
out
push
hlt
mov
push
imul
adc
fistpl
mov
cld
test
cs
ss
xor
sub
sub
iret
fcompl
dec
sbb
cmc
xchg
rolb
repz
jg
push
jne
movsl
pop
adc
mov
test
ds
jle
mov
xchg
fisubs
push
push
lea
dec
movsl
dec
ljmp
aad
fnstenv
imul
pop
test
dec
cmp
cmp
ret
mov
pop
pop
and
pusha
lcall
fldl
adc
sub
jp
data16
nop
inc
pop
cwtl
jns
push
push
add
inc
cmp
xchg
pop
stc
scas
push
int
stos
mov
sub
mov
jg
mov
pop
dec
jge
jae
jo
into
push
cmp
cmpsb
stos
mov
vmread
xchg
lret
and
test
or
lds
and
push
hlt
cwtl
or
ss
jp
outsb
jecxz
movsb
xor
ucomiss
in
and
or
fcomi
loopne
mov
sub
sub
push
out
sub
hlt
shll
insl
pop
jne
sbb
pop
gs
popl
mov
rcll
and
jne
orb
jnp
or
stc
shrb
jb
mov
push
cmp
xor
inc
jp
call
sub
inc
pop
in
mov
arpl
mov
or
aas
or
std
repnz
mov
hlt
jp
outsl
xor
lock
jb
pop
and
push
in
jl
pop
pop
jb
bnd
add
jle
xchg
fcomi
pop
dec
mov
mov
mov
mov
sti
shrb
jbe
xchg
cmp
dec
sub
daa
xor
add
aaa
in
subl
push
and
sbb
sahf
push
fldenv
daa
sbb
in
add
inc
dec
insb
push
xor
mov
rcll
mov
hlt
out
cmpsb
mov
lods
adc
mov
sub
fstpl
sbb
jo
mov
lds
jge
sub
add
mov
out
test
xorl
jl
mov
dec
imul
jno
xorl
pushf
or
pop
push
in
ficoms
std
ror
int
stos
subb
in
or
add
or
ds
and
add
shrl
jbe
mov
ljmp
stos
gs
arpl
pop
inc
or
cmpsb
dec
mov
mov
into
push
inc
mov
adc
adcb
loope
leave
fucom
xchg
rolb
mov
sbb
mov
xchg
lods
lods
in
sbb
iret
cld
outsl
inc
mov
movsb
aam
push
call
mov
popa
call
nop
outsl
sbb
add
sarl
mov
ror
cld
in
adc
push
idivb
adc
push
lea
nop
mov
mov
jmp
lret
pushf
push
cs
orl
in
inc
cmc
repnz
cmp
js
add
outsb
int
fstps
jmp
icebp
dec
sbb
mov
into
arpl
fsubp
or
jbe
jle
jae
js
lcall
and
xor
aam
or
sub
adc
stos
popl
xchg
push
outsl
fsubs
call
mov
imul
in
push
fisubrs
jl
testb
mov
push
icebp
push
jbe
dec
test
cli
int
cmpsb
dec
mov
nop
mov
leave
mov
xchg
xor
je
roll
arpl
mov
pop
cld
test
popf
cs
sbb
sbb
ficoml
lret
mov
aam
xlat
pop
inc
clc
dec
adc
jns
out
addb
and
cmp
jne
inc
sub
pop
cltd
mov
xchg
fdivs
or
pusha
xchg
jbe
ret
xlat
mov
fs
dec
ret
cmpsb
add
test
daa
sbb
lods
sbb
jmp
shlb
stc
mov
lds
icebp
jb
cmpl
xchg
xchg
jno
add
pop
mov
cltd
jb
fnstsw
adc
aam
mov
arpl
xor
push
mov
mov
mov
dec
icebp
dec
mov
or
pusha
sub
sub
cmpsb
cli
or
push
push
jae
ds
mov
cli
stos
cmp
sti
inc
clc
sub
mov
roll
pop
test
sub
mov
sbb
in
imul
xorl
cli
not
std
hlt
popl
arpl
lea
xchg
mov
cmp
clts
or
lret
and
sbb
orl
lcall
xlat
fimull
pop
add
testb
pushf
lods
sbb
sbb
aad
xor
adc
nop
and
hlt
cmp
popa
test
inc
subl
bound
xor
loope
mov
mov
stos
mov
dec
or
jecxz
cmp
or
rclb
mov
dec
pop
xchg
inc
popf
push
and
xchg
xchg
push
or
cmpsl
jp
scas
ja
add
and
cmpsb
ficoml
fwait
or
mov
jp
add
shlb
lods
fnstsw
mov
shl
test
call
jno
jp
not
stc
mov
mov
andl
dec
ret
testl
repnz
jb
add
push
lds
mov
clc
inc
mov
jae
push
jo
data16
out
and
idivl
lret
cmp
cmp
pop
or
pusha
mov
movsl
and
cmc
out
pop
testl
push
add
xor
dec
loop
ret
inc
mov
fwait
mov
mov
nop
push
push
or
push
mov
scas
lret
fiaddl
xlat
popf
push
mov
lock
and
leave
cmc
push
js
pop
push
hlt
adc
or
dec
mov
mov
fisubl
pop
cmpsb
icebp
cmpb
jecxz
lods
mov
test
repnz
fsubrs
lret
xor
ret
ficomps
adc
jle
sahf
subl
and
add
xchg
xchg
and
xor
dec
dec
dec
sbb
imull
sub
dec
xchg
cmp
mov
lcall
cmp
pop
xor
icebp
out
pop
scas
je
divl
sub
sub
jg
add
push
jo
sub
dec
movsb
add
pextrw
add
sub
jns
loopne
hlt
jb
shll
and
jae
xchg
fcoms
loope
enter
in
repz
addr16
stc
sbb
mov
or
cltd
sbb
add
cwtl
mov
test
das
pop
jb
jbe
mov
xor
testb
movsl
ja
sbb
xor
xchg
clc
aas
xor
cmpsl
in
mov
add
xchg
sbb
out
in
filds
push
cwtl
xchg
sub
in
mov
rcrb
xchg
xor
and
nop
faddl
mov
outsl
out
jno
adc
aam
clc
push
mov
sub
mov
data16
inc
cld
ret
push
jecxz
pop
sbb
aam
bound
mov
push
shlb
iret
mov
sti
cmp
mov
lods
and
push
ret
enter
fimuls
pop
ss
scas
rcrb
mov
xchg
and
cmc
lods
xor
popa
dec
xchg
popf
lods
xor
test
pop
aam
mov
js
scas
mov
sbb
rclb
xchg
mov
cmp
ja
sub
jmp
insl
out
xor
test
sub
adc
dec
scas
pop
jl
insb
pinsrw
mov
lcall
push
xchg
jecxz
icebp
lcall
sub
or
fucomp
mov
sbb
adc
xor
filds
dec
mov
mulps
notb
scas
xor
stos
mov
cld
ds
mov
lods
shll
mov
bound
dec
and
mov
js
pop
cli
adc
push
cmpb
sbb
das
mov
pop
mov
lret
xor
in
outsl
pop
inc
movsb
cltd
rclb
push
add
add
xchg
jnp
dec
sbb
sbb
mov
xor
adc
sbb
arpl
lea
and
iret
dec
daa
jns
xchg
das
fsub
add
dec
mov
jecxz
daa
lods
sarb
jl
rcrb
jecxz
jecxz
pop
sub
sub
daa
lods
fadds
in
sub
add
pop
lods
mov
rol
inc
sbb
push
les
mov
fs
adc
popa
jmp
cmp
push
pop
test
pop
sub
and
fcomi
loopne
mov
xchg
mov
test
cmpsb
or
imul
adc
cmp
mov
and
in
sub
cmp
ret
xor
jnp
incb
fdivp
xchg
sbb
push
test
addr16
shrb
in
adc
sub
sbb
push
dec
scas
je
push
jge
sti
sub
jae
insl
and
mov
popa
xor
cmp
xchg
mov
fwait
xchg
jl
not
jp
and
sti
inc
inc
icebp
data16
sbb
cmpb
mov
jmp
gs
inc
push
and
sahf
push
daa
sbb
or
sti
shl
je
mov
lds
or
ret
les
cmp
jle
in
popa
pop
jle
cwtl
int
sbb
sub
outsl
jecxz
daa
or
xchg
adc
cli
jecxz
xchg
cmp
sub
and
les
push
sub
test
enter
imulb
pop
and
xor
andl
adc
das
push
clc
les
enter
xchg
fwait
push
mov
call
lods
jmp
dec
xchg
dec
shrb
test
dec
sbb
les
sarb
fcompl
pop
imul
push
std
adc
icebp
or
mov
lahf
cmp
fidivrl
imul
cld
xchg
mov
pop
cld
sahf
mov
mov
jge
and
in
mov
cmpsb
cmp
negl
cli
movsl
lods
push
cmp
inc
push
test
inc
xchg
mov
outsl
stos
xchg
fsubrs
fwait
mov
in
pop
mov
mov
pop
stos
arpl
jmp
lret
sub
pop
xchg
push
xor
cmp
into
mov
out
sbb
ret
push
inc
scas
pop
movl
imul
popa
movsb
gs
repz
cli
lret
enter
in
inc
push
sbb
jle
adc
fsubrs
mov
mov
push
iret
testl
cmp
sub
mov
lret
cmp
mov
loope
pop
jle
shrl
xchg
mov
pop
cltd
jge
mov
inc
or
mov
lahf
fadd
gs
sbb
ret
mov
cmpsl
pop
out
xchg
jl
in
push
outsl
xchg
push
push
add
mov
inc
xor
test
test
std
dec
adc
repnz
ja
pop
jecxz
push
stos
inc
inc
insl
sub
in
xchg
sub
xchg
push
push
mov
rclb
jge
pushf
xor
sub
aam
mov
cmp
cmpsl
mov
jb
loop
adc
pop
in
dec
sub
add
gs
lfs
mov
movsl
mov
pop
pop
xor
scas
jns
jne
xor
pop
xchg
jge
xchg
add
jp
fdivp
or
repz
mov
add
int3
inc
ds
xor
mov
sbb
scas
jno
cmc
sub
in
sahf
imul
daa
ja
les
clc
adc
loopne
jb
es
nop
or
outsb
mov
addb
push
jnp
pop
dec
shrl
ljmp
pop
es
mov
inc
pslld
pop
stc
les
and
rorl
cmp
call
push
lea
pop
push
std
popa
add
idivl
icebp
mov
cmp
cwtl
fistpll
cltd
ret
ljmp
je
xor
push
enter
xchg
dec
xchg
adc
aas
add
xchg
out
aaa
sub
xor
mov
fs
inc
adc
add
addr16
es
pop
sbb
and
arpl
cmp
icebp
pusha
stos
ja
and
rolb
nop
incb
leave
push
stos
jmp
pusha
icebp
mov
inc
push
int
iret
pop
rep
mov
and
push
and
imul
mov
or
fistl
ficoms
ljmp
adc
adc
aad
jnp
mov
pop
mov
es
or
jmp
adc
sub
xchg
cmpl
fmull
fwait
cmp
popf
dec
jmp
push
shrb
rolb
xor
ret
test
out
stos
ja
xlat
icebp
loop
js
cld
xor
adc
cli
or
mov
nop
idiv
mov
push
xor
inc
aaa
out
stos
pop
popf
xchg
stos
fcmovne
sbb
fidivs
cmp
dec
pop
gs
sub
test
add
adcl
movsl
fnstcw
std
arpl
xor
arpl
pop
cmpsb
xor
mov
push
aad
sub
test
jp
push
iret
mov
dec
mov
scas
pop
imul
xor
mov
adc
mov
mov
stos
mov
inc
xor
sti
daa
push
loop
sub
lds
repnz
lret
pop
add
add
mov
out
hlt
enter
pop
lock
dec
inc
ud1
mov
fstpl
push
add
or
dec
dec
xor
xor
lock
adc
xchg
clc
jne
cs
xor
mov
dec
fldt
ret
inc
add
push
insl
out
jecxz
mov
aas
mov
cltd
mov
jecxz
and
scas
imul
adcb
pop
and
inc
push
inc
pop
xchg
jmp
dec
test
adc
jae
or
lcall
or
jbe
daa
aam
push
cwtl
mov
push
data16
pop
fstps
lcall
or
sti
sbb
or
sbb
andl
jne
xor
outsb
repz
or
insl
cmpsb
loop
add
ja
scas
jg
clc
pushf
or
sub
mov
rol
into
cmpsb
loope
imul
pop
push
mov
pop
mov
in
dec
popa
dec
fldt
pusha
add
cmpsb
lods
out
push
dec
push
push
lahf
out
inc
inc
insl
mov
addr16
fld
scas
popf
int3
mov
mov
movsb
test
adc
sbb
jp
orb
jns
nop
dec
call
pushf
sub
je
mov
movsl
lods
adc
xor
and
pop
jno
cmp
lods
push
mov
inc
arpl
dec
jle
sub
cmpsl
adc
mov
add
jno
lods
mov
pop
sub
mov
outsb
pop
aam
iret
mov
into
lock
push
movsl
movsl
adc
repnz
xchg
jno
sub
fsts
aad
cmp
mov
or
add
sti
mov
mov
cmp
adc
loop
rclb
je
xchg
and
push
add
rorl
rolb
push
ret
repz
les
imul
xchg
or
xor
lods
std
sbb
pushf
sti
and
pop
shll
mov
xchg
inc
pop
xor
sbb
aad
jg
cmc
shlb
add
pop
daa
fisubs
repnz
dec
roll
xlat
leave
cld
test
pop
push
pop
movsb
sahf
sbb
pop
cmp
xchg
inc
arpl
inc
sub
mov
or
jne
sbb
mov
pop
fsubr
sbb
outsb
mov
cmpsl
aad
mov
pop
bound
push
pop
inc
push
sti
les
xor
xor
jecxz,pn
cmp
insb
mov
inc
out
jno
in
mov
fisubrl
bound
pop
repz
mov
xchg
xor
int
test
pop
jo
in
xor
cli
arpl
test
jg
in
or
out
orl
mov
cs
cmp
dec
mov
data16
sub
inc
xorl
push
cli
push
add
mov
pop
pop
push
insb
dec
dec
loop
push
xor
cmpsb
mov
jno
pop
jns
fld
push
pop
in
enter
addl
aad
sbb
dec
test
leave
adc
pop
stos
arpl
in
call
add
dec
mov
rorl
mov
xchg
dec
popf
add
call
mov
adcb
arpl
cmp
dec
mov
inc
cmp
xor
cmp
inc
inc
jno
or
js
mov
mov
or
push
cld
imul
mov
jmp
push
int3
cwtl
cwtl
pop
popf
pop
lods
out
sub
sub
pop
adc
out
mov
add
pop
sbb
mov
into
jbe
cltd
negb
inc
pop
and
mov
idivb
adc
add
mov
imul
ljmp
jns
imull
jns
mov
sbb
stos
and
std
inc
loope
or
cmpsb
dec
lds
lods
xchg
das
xor
arpl
ljmp
das
push
pop
add
mov
sbb
pushf
or
push
add
imul
mov
mov
ret
adc
jmp
push
call
cld
imul
bound
cli
mov
pop
cmc
movd
out
aad
push
sub
xor
jmp
rcrl
adc
loop
outsb
sub
inc
fwait
pusha
loopne
in
pop
test
jmp
in
sub
cmpsl
sub
xchg
mov
inc
jnp
jae
push
jle,pt
inc
push
and
outsl
and
mov
push
into
mov
xor
cmp
jo
jns
cltd
or
pop
jno
jle
cmpsl
and
pop
pop
fstpt
ja
adc
fisttpl
cwtl
bound
hlt
movsb
adc
add
stos
mov
mov
pop
sbb
in
dec
mov
sbb
iret
std
xor
sub
jo
lret
push
hlt
and
fimuls
int3
xchg
into
ficomps
xchg
or
mov
sbb
fidivrs
loope
pusha
out
mov
rcrl
fstp
jno
div
cli
inc
pop
fwait
aaa
pop
xchg
leave
mov
xchg
call
sbb
mov
inc
push
aas
push
mov
aam
out
mov
in
ds
test
sub
xchg
adc
lcall
repz
pop
xor
pop
jne
mov
jae
sub
dec
out
mov
fs
dec
notrack
jecxz
fimuls
icebp
mov
push
pop
pusha
iret
fisubrs
jae
inc
xor
add
add
clc
rcrb
jmp
lock
mov
test
jmp
push
int
mov
mov
push
mov
sti
mov
dec
or
or
sbb
das
shlb
dec
jno
adc
ljmp
hlt
sub
adc
add
or
aaa
je
test
push
movsb
mov
rcrw
or
sar
fs
outsl
repz
xor
sub
es
aam
scas
push
adc
lds
pop
mov
sub
mov
dec
es
jmp
xorb
int3
fsubrp
in
jbe
inc
sti
jo
sub
jmp
xor
push
mov
adc
pop
add
or
cltd
stos
sbb
iret
and
das
shl
repz
outsb
push
rcll
addr16
pop
or
lahf
scas
stos
lret
sub
lea
or
fldenv
xchg
pop
cwtl
lret
js
stos
pushf
sub
cmpsl
xor
or
data16
sub
cmp
fisubrs
imul
cli
jge
mov
roll
lea
loop
xchg
insl
hlt
xor
mov
cwtl
out
xor
imul
ficoms
rolw
add
mov
sub
imul
xor
filds
sahf
cmp
cld
push
addr16
shrl
ret
dec
sub
aaa
sbb
sub
in
adc
fs
and
push
mov
fucomi
imul
mov
sub
pop
mov
xchg
adc
push
inc
pushf
in
cmp
xchg
sbb
xchg
sarl
mov
arpl
in
rcll
push
clc
mov
sub
fcomi
sbb
mov
lcall
jne
in
dec
popf
or
push
hlt
or
push
mov
xchg
in
xor
in
sbb
fcoml
scas
pop
cmp
xchg
pop
pushf
mov
cmp
loope
push
xor
adc
stc
cmp
xchg
out
and
out
enter
subb
jg
dec
dec
add
insl
push
cmc
inc
mov
dec
fs
xchg
mov
fisubl
inc
jb
add
push
divb
mov
pop
mov
sbb
or
sbb
xchg
cmp
jecxz
ljmp
js
xchg
ficoml
mov
xorl
movsb
ljmp
addr16
js
out
adcl
je
lcall
insb
add
inc
rcrb
popa
repnz
lods
imul
shl
nop
int
lods
cmp
add
shlb
es
out
loopne
shrl
xor
adc
pop
loopne
and
and
jle
clc
inc
clc
jo
mov
out
push
lods
xor
daa
int
mov
jo
mov
daa
fildll
cmp
popf
jb
ret
fistps
punpckldq
xlat
inc
fcoml
sub
shll
pop
mov
rcrl
pop
scas
sub
arpl
push
dec
xchg
shrb
icebp
in
aad
sar
jae
je
aaa
or
bnd
lahf
adc
sbb
push
push
loop
add
pop
cmc
mov
mov
or
mov
roll
jp
addl
leave
lcall
or
push
push
mov
data16
popf
inc
inc
fmuls
lods
cmp
and
or
aad
dec
mov
addr16
repz
mov
or
shlb
cltd
movsb
sahf
iret
leave
sub
dec
cli
xchg
nopl
jmp
dec
xchg
xor
ds
mov
add
addb
or
cmp
mov
adc
popw
xor
mov
sub
jae
fisttpl
mov
cs
mov
push
lods
into
xor
pusha
in
push
arpl
xchg
jmp
dec
cli
outsl
fldenv
les
push
dec
push
test
idiv
xor
sbb
xor
push
sbb
aas
bound
mov
mov
mov
scas
outsb
icebp
and
or
jbe
sbb
adc
add
addb
or
push
pop
and
sbb
test
pop
cltd
roll
out
mov
clc
int3
sbb
cli
test
movsl
push
mov
dec
fists
imul
into
push
rcrb
cmp
or
mov
inc
ret
push
sub
inc
jge
push
in
subl
mov
jbe
push
push
dec
adc
stc
cwtl
lahf
cld
cmc
mov
pop
shl
clc
pop
bound
cmpb
scas
mov
dec
addr16
mull
out
in
mov
jecxz
lahf
nop
lods
or
mov
push
dec
mov
outsb
ds
push
mov
xchg
pop
and
jo
adc
push
in
mov
jl
test
dec
sub
push
insl
inc
cmp
push
fstps
js
hlt
insl
in
mov
and
imul
sub
dec
jge
das
or
jmp
mov
int3
mov
repz
mov
xor
sub
out
clc
adc
or
lods
pusha
cs
jp
repz
into
xorb
push
rcl
jp
test
ljmp
inc
stos
cltd
fwait
imul
xor
mov
jp,pt
xchg
push
sbb
fdivrl
insb
aaa
jle
inc
add
pop
lret
iret
inc
mov
pushf
cs
iret
sbb
jo
ret
dec
cmp
sbb
add
cli
aas
int
std
xlat
push
ss
lods
push
mov
fnstcw
jl
rclb
inc
repz
lahf
xchg
push
jge
es
shl
mov
mov
stos
sbb
mov
jle
inc
xchg
cmpsb
pushf
sbb
ret
xor
cmp
add
rorb
jno
jns
dec
jp
xor
aad
pop
in
or
outsb
les
aad
jecxz
in
insl
mov
in
push
leave
fsubrl
mov
mov
xor
iret
cmc
je
jecxz
pop
xchg
test
fwait
inc
mov
inc
push
jb
pop
shll
inc
daa
outsb
jecxz
mov
rorb
call
push
and
or
add
adc
adc
ret
sti
lds
or
pop
mov
jle
pop
add
les
dec
rcrl
push
repnz
and
pop
pop
add
push
cmp
popa
testb
repz
sbb
push
and
in
jl
cwtl
xlat
pop
mov
clc
ret
add
and
push
and
imul
push
icebp
cwtl
aad
sbb
pop
bound
mov
out
sahf
in
lods
bound
mov
push
push
mov
into
xchg
nopl
mov
push
dec
pop
push
xchg
adc
mov
mull
mov
stc
cmpsl
mov
sub
cmpsb
movsl
dec
xor
shll
add
fdivl
fnstcw
scas
out
mov
in
mov
cmp
aam
sub
push
pop
mov
test
cmp
daa
dec
jno
insl
hlt
xchg
shll
jp
cli
cmp
mov
xchg
test
adc
adc
sub
fwait
push
push
push
mov
repz
loope
and
mov
popf
mov
stc
pop
mov
inc
arpl
aam
jg
dec
pushf
clc
xor
lret
pop
loope
cmpb
push
cmc
ret
mov
sub
and
fnsave
aaa
out
jmp
dec
rcr
or
xchg
ja
mov
sbb
sub
call
gs
xchg
test
rcl
ja
jecxz,pt
push
add
xor
scas
xchg
cmp
mov
mov
pop
dec
inc
dec
iret
or
scas
scas
xchg
dec
popf
sbb
in
mov
ret
push
into
movsb
repz
stos
and
lock
mov
int
sbb
lret
dec
shlb
mov
out
lds
aas
int3
sbb
fnstsw
andb
mov
push
xchg
lea
movb
sub
mov
sti
in
call
out
mov
dec
aad
mov
mov
cmp
xchg
lods
sbb
fs
imul
xor
fildl
ja
addb
sbb
push
mov
negb
cwtl
mov
lods
ss
cmc
dec
cmpsl
jo
mov
fucom
pop
adc
daa
jecxz
leave
dec
mov
and
xchg
mov
arpl
xchg
xchg
inc
test
pop
js
push
jmp
ljmp
push
lods
inc
lret
in
push
cmp
pusha
out
jl
enter
popa
sahf
add
popf
pop
jge
stos
ss
push
jo
bound
dec
mov
dec
loope
xlat
adc
xchg
shll
xor
mov
jne
push
or
lahf
xchg
orl
mov
adc
das
xchg
push
xchg
or
outsl
xlat
roll
jg
bound
xor
add
sahf
mov
out
and
out
test
out
int
inc
push
mov
jge
dec
push
rcl
pop
mov
xchg
jg
xor
xchg
mov
lock
jae
add
int
and
add
clc
xor
movsb
mov
je
mov
mov
or
outsl
mov
xchg
rep
cmp
jle
xor
push
and
fimuls
and
loop
adc
jbe
sub
xchg
sbb
and
sub
lock
rcrl
inc
push
ss
into
inc
ljmp
pop
out
xor
mov
insw
mov
and
xchg
jbe
pop
mov
das
mov
mov
jmp
xchg
mov
push
xchg
add
into
cmpsl
sbb
xchg
adc
jb
dec
xor
and
cmpsl
add
ds
filds
dec
rclb
xchg
pop
arpl
jbe
aam
lea
dec
nop
lret
test
mov
inc
and
add
bswap
xor
pop
dec
in
test
std
pop
ret
sbb
or
aas
scas
cmp
pop
add
add
outsl
jns
in
pop
push
or
fmull
aam
pop
push
mov
test
xor
icebp
and
arpl
cmpsb
bound
inc
xor
call
sub
pop
mov
imul
push
sbb
push
push
leave
icebp
xchg
inc
aas
jg
cmpsl
std
or
ja
pop
or
imul
orb
movl
ja
fnstsw
sub
inc
mov
pusha
loope
aas
bound
pop
adcl
sar
push
ja
aas
fcmovbe
pusha
scas
aaa
dec
shr
pop
push
ja
hlt
mov
sbb
adc
mov
add
std
mov
mov
inc
loopne
ficoms
cmp
addb
push
imul
pop
test
mov
and
or
push
stos
stc
ficomps
test
cmp
cli
lret
outsb
jmp
inc
cmp
adc
arpl
imul
nop
mov
pushl
je
lods
cmpsb
loop
lock
mov
cmc
mov
loope
outsb
mov
stc
add
js
into
lahf
adc
popa
outsb
enter
add
gs
inc
xor
and
xchg
sbb
aad
xchg
sahf
roll
cmc
mov
movsl
cmpsb
mov
div
out
or
sysexit
mov
andl
arpl
xor
stos
iret
push
or
adc
icebp
xor
jne
int
ret
sbb
fidivs
push
add
jmp
push
cmpsl
mov
loope
ja
daa
prefetcht0
lods
lret
pusha
pushf
gs
jns
pop
inc
pop
stos
sub
insb
aas
cmp
ret
jl,pn
imul
repnz
lock
cs
mov
sahf
fistpll
jg
fs
pop
xchg
out
pop
clc
push
mov
mov
adc
mov
and
adc
test
mov
cmp
mov
fs
out
xchg
fs
jnp
xor
xor
push
mov
bound
and
mov
inc
insb
lock
mov
mov
insb
add
mov
inc
sbb
xchg
jmp
test
pop
test
mul
shrb
and
pushf
fisubrl
nop
pop
rcr
mov
jno
add
sahf
mov
shlb
pop
jb
lea
mov
stc
jo
pop
xor
bound
in
ds
cmpsl
outsb
cltd
out
or
test
xor
inc
cmp
in
popf
mov
stos
movsl
mov
movsl
jno
pop
jns
push
arpl
js
sub
cmpl
sbb
mov
std
pop
sbb
cmpsl
out
loope
adc
jno
dec
je
shlb
idivb
repz
pop
xchg
add
mov
xor
mov
cmp
out
lret
dec
mov
dec
adc
mov
cli
int
repnz
jno
insb
into
lret
je
fdivs
jle
mov
lret
jle
lsl
je
lods
rclb
fwait
icebp
xlat
sbb
fildll
and
push
inc
jns
and
imul
dec
or
pop
xor
or
adc
pop
mov
scas
jg
add
xchg
mov
cltd
jno
mov
sahf
jmp
jmp
cmp
xchg
test
jmp
in
and
mov
aam
mov
adc
pop
dec
push
sub
shll
dec
dec
or
outsb
dec
cmpsb
popa
add
daa
icebp
inc
insb
jg
dec
push
mov
dec
punpcklwd
ds
mov
mov
scas
jmp
mov
mov
xchg
daa
lea
hlt
out
xchg
or
clc
xchg
xor
mov
adc
pop
sub
mov
out
out
icebp
imul
sub
mov
push
sbb
pop
cmp
jp
dec
xorb
xchg
mov
and
test
xchg
cmp
push
xor
insb
cmp
dec
jb
xor
adc
gs
add
test
jmp
les
cmc
xor
and
das
push
ljmp
hlt
jmp
sbb
std
mov
mov
repz
fsubr
mov
int3
xor
bound
adc
nop
out
cld
cld
int
loop
sub
push
subl
int3
xor
dec
add
ljmp
xchg
rclb
insl
jb
xchg
mov
mov
stos
aam
add
or
sbbb
scas
sahf
cmp
inc
outsl
dec
add
pop
cmp
jo
nop
push
jo
xchg
cmpsl
jge
in
jns
sub
jns
xchg
stos
jecxz
leave
inc
imul
fsubs
adc
inc
add
mov
fnstsw
xchg
and
add
out
arpl
jle
mov
push
xlat
or
dec
or
arpl
push
push
dec
pop
push
idiv
xchg
fucomi
jle
call
in
insb
mov
xchg
xorl
mov
shl
dec
sub
or
sahf
jbe
dec
xor
movsb
xchg
push
xor
out
sub
scas
lea
add
sti
lcall
jmp
popa
mov
aad
push
pushf
enter
imull
lcall
es
cmp
push
mov
xor
and
jae
or
loop
xor
mov
adc
pushfw
mov
adc
xchg
push
popf
out
scas
cmc
fdivs
add
push
mov
inc
xchg
mov
mul
mov
jl
mov
pushf
push
mov
pop
sub
xchg
test
jg
mov
cwtl
fdivl
shll
and
dec
jbe
push
loopne
jae
movq
xchg
adc
dec
les
rorb
rclb
in
pushl
ljmp
cli
clc
outsb
shrb
stos
cmp
out
sbb
add
adc
ja
mov
pusha
xor
inc
jge
jecxz
loope
mov
daa
pop
fwait
cmpsb
mov
call
cltd
jb
repz
sbb
mov
jbe,pt
int
cltd
lods
sbb
mov
imul
pop
out
jecxz
cmp
cli
sub
test
ja
mov
ljmp
cmp
sbb
jge
dec
ss
pushf
orl
inc
dec
repz
sti
mov
fimuls
test
and
sbb
mov
andl
clc
pop
stos
in
out
loop
and
xchg
sarb
push
sti
aam
rcrb
rclb
test
lahf
inc
inc
mov
xchg
cmc
or
add
jae
js
mov
pop
cmp
into
jecxz
sahf
out
or
subb
scas
and
lock
mov
xchg
fisubl
fxam
shlb
clc
fildll
mov
dec
arpl
add
push
aad
xor
sbb
cld
mov
cwtl
sbb
jbe
push
mov
mov
mov
aas
loope
rcl
jno
push
or
push
cmpsl
mov
fsub
mov
iret
es
xchg
adc
mov
push
xchg
andb
sbb
jg
mov
jp
fcoml
pop
movsl
xorl
fucomi
stc
lret
insb
insl
pop
inc
push
test
testb
ret
dec
sar
jo
in
add
jmp
fisttps
das
mov
mov
mov
jb
js
xor
repnz
sbb
sbb
dec
std
gs
sbb
dec
cs
fldl
fists
cmp
repz
pop
mov
subb
pop
in
cwtl
sbb
je
fmul
xchg
pop
daa
icebp
cld
lock
push
xor
adc
mov
push
add
daa
add
dec
cli
jge
or
cld
mov
test
mov
test
fcomps
fdivrs
xchg
daa
imulb
jnp
jle
push
hlt
int
xchg
xlat
push
inc
pop
data16
sbb
test
fisubrs
sahf
cmp
xchg
insb
scas
xor
mov
jg
cmp
fwait
movsb
mov
testb
dec
test
push
pusha
adcb
mov
cs
jle
fnstcw
sahf
adc
adc
sub
mov
ficoml
pop
stc
xor
aam
sub
lock
fwait
add
loope
jge
ss
mov
stos
fildll
lods
push
adcl
insl
lds
pop
push
decb
outsl
pop
pop
cmp
fistpll
daa
aaa
or
arpl
cs
cs
mov
mov
jg
loopne
sahf
lret
and
cmp
bound
dec
inc
jmp
cmc
movsb
cmp
jns
lret
mov
pop
jbe
push
mov
add
mov
out
pop
mov
and
jmp
int3
push
pop
xlat
cld
shl
movsl
addr16
test
sbb
cwtl
pusha
mov
data16
inc
push
push
xchg
adc
and
xchg
icebp
pop
std
enter
incb
out
push
cmp
mov
inc
xchg
inc
shll
sub
jle
pushf
es
mov
aam
repnz
fistl
cmp
hlt
jo
cltd
out
or
mov
pusha
ret
fsubr
and
call
ret
mov
stos
inc
pop
mov
lods
sub
outsl
int
addb
hlt
fistps
nop
into
jp
pop
mov
sti
and
xchg
mov
fchs
push
xchg
ds
and
int
stc
div
dec
filds
mov
lcall
push
movsl
movsl
adc
add
sbb
mov
adc
loop
mov
stos
xor
mov
inc
mov
adc
pop
icebp
ja
out
push
or
inc
or
xchg
out
fstpt
das
roll
push
and
out
inc
sahf
push
mov
sub
dec
pop
sub
dec
shl
mov
add
adc
insb
in
hlt
test
cmp
dec
ffreep
mov
ret
jl
loop
mov
pop
pop
add
or
jmp
and
and
ret
mov
sbb
cmp
outsb
testl
test
xor
cmp
bound
sub
aaa
iret
pop
sbb
outsl
mov
sahf
ss
lcall
inc
lds
mov
mov
xchg
negb
jl
sbb
fbld
leave
push
loopne
xor
lods
shrb
adcl
out
in
dec
mov
movsb
lods
jae
inc
jo
nop
cmp
push
adc
jne
push
jne
xor
and
push
es
int3
and
into
xchg
arpl
adc
xchg
scas
push
cli
lock
xor
mov
jl
jmp
adc
push
ljmp
jmp
jbe
mov
sub
mov
add
and
add
cmp
repz
push
push
cltd
pop
mov
cmp
out
cmp
shl
popa
mov
and
fidivs
mov
mov
orb
xor
add
xlat
inc
inc
xchg
bound
mov
ljmp
or
jnp
lds
cltd
aam
xor
add
rclb
in
inc
imul
push
jnp
pusha
xchg
je
leave
insb
sbb
jnp
add
mov
dec
mov
popf
xchg
in
xchg
aam
adc
int
cmpl
jecxz
ds
arpl
scas
sub
jnp
ljmp
ret
cmp
fs
aas
negl
idivb
adc
into
add
sub
adc
or
jae
sub
leave
add
inc
cmp
xchg
inc
loop
push
or
negb
call
mov
pusha
cli
bound
pusha
lock
je
or
hlt
shrb
dec
and
movsb
mov
cmp
mov
mov
dec
push
je
push
lcall
add
or
xchg
cmpl
out
and
repz
xchg
pop
xchg
jo
insl
inc
inc
pusha
jb
mov
dec
pop
dec
ss
and
daa
sub
dec
jns
lock
push
push
addl
rorl
inc
sarb
push
push
jecxz
aaa
push
cmp
mov
or
sub
push
adc
fucom
and
jo
mov
sbb
cmp
push
or
inc
int
mov
push
inc
fwait
lahf
jbe
xchg
test
ja
std
or
pop
daa
mov
scas
dec
add
shll
dec
inc
push
xlat
dec
ret
cltd
mov
sbb
mov
inc
not
fsts
in
cmp
xchg
sbb
cmpsb
jl
cwtl
xor
cwtl
cmp
movsb
and
scas
subb
jnp
mov
jp
cmp
push
sbb
jnp
xor
lcall
cwtl
xchg
xchg
and
mov
push
jmp
sub
das
ljmp
jo
jne
jle
xchg
cmp
jbe
xchg
sbb
pop
aad
imul
hlt
add
fdivrl
hlt
adc
and
into
gs
inc
add
jb
and
or
jl
jg
ffreep
mov
mov
dec
pusha
push
test
mov
lcall
jns
lods
fmuls
and
xor
xlat
lock
lods
xor
jbe
iret
push
sbb
enter
pop
or
sahf
sbb
stc
xor
pop
adc
pop
jle
gs
les
add
add
sbb
cmp
test
cmp
push
test
in
cmc
mov
mov
outsb
add
cmp
cli
faddl
inc
adc
pop
adc
add
bound
lock
orb
in
hlt
in
jle
fstl
jae
daa
jecxz
icebp
imul
iret
mov
pop
cmp
inc
fildl
push
les
sub
mov
cmc
adc
mov
movb
jmp
dec
rcrl
gs
mov
cmp
pop
in
cmc
pop
dec
adc
pusha
pusha
and
cld
pop
pop
dec
jmp
rol
cli
imul
decl
mov
subb
mov
mov
test
in
icebp
pop
mov
xor
daa
cmc
andl
fimuls
xchg
adc
dec
push
pop
push
push
imul
popf
lret
dec
push
or
sbb
xchg
cmp
ja
pop
in
sbb
mov
inc
lcall
sub
out
dec
das
sub
sbb
jae
and
cld
pushl
dec
cmc
xchg
push
pop
jmp
dec
data16
lds
mov
adc
mov
mov
push
arpl
bndldx
int3
iret
and
sbb
fiaddl
les
sub
sbb
insl
addr16
sub
jg
and
cmp
out
mov
in
pop
push
outsl
popa
leave
sahf
push
lock
jo
aam
dec
fisttpl
or
push
into
pop
dec
pop
test
lea
stos
xchg
xor
adc
push
adc
pushf
add
mov
sbb
xchg
sbbl
fidivl
inc
dec
in
mov
jb
subb
dec
test
sar
sub
cmc
lahf
or
fmuls
popa
and
jle
addl
push
arpl
cltd
sahf
jb
lock
hlt
das
mov
jmp
jmp
aas
out
out
sahf
daa
int3
xchg
jne
sub
and
pop
out
cmp
dec
inc
pushf
cmp
imul
imul
inc
lret
int3
scas
xchg
mov
jl
add
inc
into
mov
shlb
outsb
andb
call
ljmp
sbb
xchg
jge
ret
lods
xorl
jge
fdivrs
push
xchg
into
jl
movsl
sub
push
sarb
xchg
jns
int
push
mov
jecxz
mov
cmc
sub
sbb
mov
cmp
nop
std
aam
mov
inc
aas
dec
call
jae
add
mov
bnd
pop
lock
stos
pop
mov
std
jbe
mov
cltd
cmp
push
inc
cmp
cmp
mov
lret
fwait
insb
inc
jb
ret
inc
jge
test
out
jno
sub
cmp
mov
and
daa
pushf
add
pop
rorl
ret
in
cmp
imul
rcrb
enter
cmp
int3
xchg
cmp
sub
jle
imulb
es
push
rclb
cmpsb
loopne
or
jl
sub
jle,pt
fdivl
adc
addr16
in
pop
into
ret
cld
out
sub
inc
cmp
dec
cmp
xor
fistps
jns
stos
mov
and
cltd
pop
movsb
cwtl
cmp
mov
mov
cld
stos
mov
sub
sahf
dec
jg
pop
adc
adc
sub
xchg
mov
mov
push
sbbl
insb
and
mov
jns
and
daa
mov
mov
or
mov
push
jle
add
inc
ljmp
in
cwtl
imul
inc
inc
jg
mov
jb
leave
jmp
push
xchg
clc
dec
fistpll
mov
or
sbb
insb
bound
shlb
jecxz
ss
repz
push
ret
xchg
jmp
jns
sbb
lods
dec
sahf
mov
outsb
lahf
mov
inc
aam
push
or
push
sahf
fbstp
imul
mov
rorb
cmpsl
pushf
xor
sub
mov
outsb
add
fdivrs
loope
andb
sbb
addl
fadds
pop
jae
xchg
and
xor
arpl
inc
mov
or
hlt
mov
clc
popa
push
loop
mov
mov
mov
xorb
cs
sub
out
subb
test
push
or
push
mov
pusha
ss
push
out
repz
insl
mov
out
mov
pop
sub
inc
leave
fnstcw
or
push
pushf
out
popa
ss
out
je
push
xor
mov
mov
out
mov
enter
fnstsw
fdivrp
inc
sbb
cvttps2pi
xor
call
sahf
into
mov
xlat
aam
xchg
xchg
sbb
popa
adc
push
lret
mov
pop
adc
inc
nop
ja
jno
inc
mov
xchg
jg
arpl
repz
cli
shll
inc
test
sub
cwtl
xor
or
stos
cmpsl
cmp
insl
cmp
gs
ret
push
loope
mov
std
outsl
add
sbb
insb
lret
sbb
imul
repz
das
xchg
into
adc
sbb
jl
jge
xor
loopne
pop
add
aas
ror
push
xchg
rclb
cmpsl
sbb
or
mov
mov
xchg
xchg
mov
inc
fsubl
std
mov
inc
or
fldl
hlt
sbb
adc
clc
cmp
pop
pusha
xor
sbb
aad
push
mov
pop
sbb
inc
std
push
push
leave
cmp
sub
sbb
inc
or
stos
cmp
inc
push
rorb
jmp
lock
sbb
mov
imul
and
xchg
lods
jae
lods
repz
lds
enter
jecxz
adc
ret
add
mov
pop
dec
movsb
dec
int
cmpsl
filds
bound
dec
loopne
ljmp
leave
lea
jge
sbb
adc
pop
das
and
imulb
mov
les
mov
adc
mov
xchg
mov
mov
sbb
iret
fbstp
lret
ss
xorb
push
xchg
test
aad
jle
jge
lods
movsl
adc
ret
add
cmp
fucomip
lret
mov
movsl
inc
pop
push
scas
mov
or
push
out
fcoms
insb
sub
loope
push
data16
or
lds
imul
xor
pop
push
push
push
in
push
das
mov
loopne
lea
enter
daa
mov
xor
mov
inc
xchg
lods
loope
sahf
hlt
out
cmp
shlb
xchg
call
pop
sub
jp
mov
jns
je
outsb
shlb
sub
rorb
out
js
cltd
and
xchg
push
stos
mov
les
pop
fdivl
push
jmpw
lret
inc
mov
push
pop
xchg
mov
mov
push
jne
jecxz
push
jno
jno
jge
xchg
loope
cmpb
jp,pt
xor
dec
xchg
push
dec
sti
loopne
out
push
mov
xor
sbb
daa
jg
mov
movsb
cld
mov
mov
fmul
jmp
mov
or
and
or
rcll
outsb
bound
sub
fwait
lret
bound
imul
xchg
in
out
enter
cwtl
mov
xor
dec
fadd
scas
or
adc
add
mov
xchg
jge
push
sbb
cmpsl
dec
lahf
add
xor
mov
lahf
mov
sahf
pushl
mov
movsl
adc
jmp
and
or
in
push
adc
sub
sahf
mov
fsubl
fldt
push
mov
jmp
gs
cmpb
xchg
mov
inc
ljmp
ficompl
jge
popf
fs
mov
fisttpl
adc
mov
and
mov
push
mov
cltd
sbb
dec
aam
jg
stc
loope
add
cmpsb
jo
mov
in
addr16
mov
adc
adc
enter
rorl
iret
lret
fwait
or
scas
orb
xor
fisubl
or
or
negl
fcoml
out
aaa
clc
fistl
mov
inc
clc
inc
lret
stos
pop
sub
ret
sub
test
push
sub
xchg
sbb
out
push
mov
gs
lods
das
dec
push
fiaddl
mov
mov
das
imul
rcrl
outsl
movsb
xor
add
cmp
cmc
test
xor
dec
out
pop
or
je
popa
or
aas
adc
movsl
jno
mov
lret
mov
push
mov
je
xchg
xor
mov
scas
call
xchg
sbb
fsubs
movsl
mov
sub
imul
mov
mov
cmp
hlt
and
jle
test
fisubrl
and
aad
in
shrl
in
sbb
clc
cmpsb
xor
lock
negl
cmpsl
cmpsb
testb
pop
sti
out
mov
jbe
lret
insl
sub
pop
dec
rclb
lcall
dec
fldenv
jns
stos
test
mov
xchg
adc
push
mov
cs
cmp
jg
repz
sub
mov
movsl
cmp
pop
add
ret
insl
inc
pop
sbb
push
subl
sbb
push
cmpsl
jne
mov
mov
or
mov
jmp
fldt
sbb
outsl
imull
call
mov
xchg
add
scas
add
sbb
dec
sbb
test
cmp
xlat
cs
pop
int3
mov
mov
or
pop
mov
ljmp
lret
in
or
mov
jne
jle
filds
dec
icebp
push
mov
jle
mov
mov
addr16
sbb
das
or
adc
sub
pushf
loopne
adc
cmp
pop
outsb
xlat
and
sub
adcl
lods
jb
pop
mov
fidivrs
lret
lret
orb
add
cmp
sub
sub
xchg
mov
test
mov
in
cmp
les
mov
xor
push
jae
stos
ds
xorl
das
jmp
cmp
fidivrl
insl
sub
jno
or
mov
sbb
cmp
mov
nop
movsb
lock
jge
add
xor
out
push
scas
das
mov
lods
test
jmp
enter
mov
cmp
mov
aad
in
cmpl
repz
and
pop
add
cmp
xchg
mov
push
fwait
sbbb
movsl
adc
mov
iret
xlat
xchg
mov
push
add
ret
mov
cld
mov
daa
aaa
leave
adc
jmp
les
adc
pop
jbe
out
loop
loop
and
adc
and
in
and
dec
push
mov
outsb
mov
push
mov
and
enter
mov
lods
jge
jo
test
sbb
jbe
lea
mov
mov
cld
sub
sub
arpl
xchg
xchg
lret
adc
lahf
xlat
jle
ror
addl
sbb
out
sbb
mov
add
sub
xor
push
xor
test
xor
pop
test
movsl
and
cltd
iret
fwait
dec
push
dec
dec
push
dec
sbb
jecxz
inc
jecxz
inc
pop
shl
mov
or
sbb
jns
pop
mov
movsb
sub
add
iret
out
cld
jnp
lea
stc
jb
sti
pop
arpl
shrb
adc
in
sbb
mov
dec
ret
lods
cmp
loope
ljmp
addb
movsl
cmp
dec
pop
mov
sbb
add
es
les
cmp
xor
mov
jmp
mov
pop
out
dec
fwait
outsl
or
sbb
out
cmpsb
inc
lcall
mov
pop
cli
inc
mov
frstor
adc
fists
sbb
or
notl
jns
sbb
inc
orb
imul
add
mov
lods
pop
xor
outsb
stos
lods
inc
pop
test
ljmp
add
pop
outsl
push
lahf
push
jbe
sub
pop
lea
jbe
adc
iret
out
sbb
mov
mov
jp
dec
push
cmc
loop
mov
mov
out
pop
adc
pop
sti
and
cmp
fstps
inc
jno
jg
cwtl
xchg
push
xchg
in
add
cmc
gs
sbb
mov
mov
lcall
jp
push
ret
gs
xchg
jl
jg
push
push
ds
shll
mov
cmc
dec
dec
negl
fnsave
xlat
pop
rol
lret
fsubrl
inc
lcall
aas
popf
inc
in
mov
sbb
repz
aad
and
push
shll
pop
int
shll
jmp
mov
test
mov
add
subb
xor
sub
mov
jnp
jmp
pushf
or
mov
jb
pop
cmp
dec
add
popa
push
lds
inc
fisubl
mov
ja
rclb
cmpsb
in
mov
sub
xchg
push
cmp
addr16
add
pop
xlat
cmp
and
fs
ss
les
pop
lret
das
fistl
ret
lods
je
or
shrl
jp
add
shl
std
mov
sbb
pop
fdiv
mov
and
sub
add
inc
stos
xor
shrl
cmp
iret
in
cmc
rcrb
fstl
push
pushf
push
xor
fadds
test
jl
sbb
cld
cmp
mov
mov
sub
rol
mov
pop
std
lods
jns
enter
adc
ds
and
pop
popf
test
incb
mov
xchg
popf
sarl
xchg
loopne
loopne
pop
cld
pop
xchg
movsl
fistl
mov
movsl
sarb
shlb
icebp
aas
movsl
jge
insl
arpl
idivb
rol
mov
faddl
inc
inc
popa
jle
and
sbb
movb
push
fs
call
test
out
sub
sbb
push
mov
adc
test
mov
mov
pop
mov
in
inc
iret
xor
stc
mov
inc
push
pusha
enter
mov
pusha
into
lods
or
fwait
lcall
mov
lret
leave
test
sub
push
addr16
fdivs
mov
mov
push
fisubl
sbb
push
loopne
lea
jns
insb
add
leave
sub
jb
cmp
or
insb
and
mov
or
inc
arpl
xor
inc
fdivs
loope
repnz
jg
adc
das
pop
int
pop
test
adc
jle
out
push
inc
mov
add
xchg
loop
adc
arpl
or
cmpb
dec
dec
inc
lock
dec
xchg
test
loop
fs
jmp
popa
adc
xor
dec
push
lods
mov
incb
pop
lea
inc
jmp
cmp
push
jge
pushf
lea
jp
scas
jecxz
clc
into
inc
loopne
xchg
push
rolb
std
scas
mov
pusha
adc
pop
add
mov
cmpl
inc
cmc
test
sub
add
stos
les
lds
das
std
leave
pop
mov
jl
scas
mov
in
fimuls
mov
repz
xstore-rng
cmpsl
pop
mov
int3
negl
lock
dec
andl
inc
xor
insb
sbb
icebp
rcrb
push
cmp
adc
xorl
jns
jns
xorl
cmpsl
mov
outsb
xor
imul
add
in
fmuls
add
movsb
outsb
inc
testb
push
pop
sarl
testl
push
xor
scas
sub
mov
jge
inc
cli
cmc
repnz
pop
sete
out
pop
inc
imul
xor
adc
sub
and
rcll
jae
sahf
test
movsl
popf
push
add
or
or
adc
in
cmp
jp
xor
neg
xchg
or
mov
out
mov
sub
adc
jg
add
xchg
xchg
or
and
xor
negl
stc
cltd
pop
sbb
sbb
aas
or
shufps
clc
fwait
jmp
aad
cmpsl
bound
xchg
or
mov
or
xchg
sbb
jb
js
add
dec
and
test
stc
push
stc
lahf
mov
out
xchg
daa
fistl
xchg
push
xchg
or
push
cmp
and
inc
js
inc
js
mov
push
pusha
int
int
dec
movsl
xchg
out
ljmp
lsl
mov
es
mov
shrb
les
lahf
nop
lahf
loope
cmp
dec
mov
ds
xor
pop
add
rolb
aas
insl
jns
lret
adc
mov
sbb
movsb
sbb
xchg
rcrb
mull
sbb
push
cmp
pop
adc
or
push
imul
es
push
jle
cmp
jo
push
aad
inc
das
mov
enter
lods
cmp
nop
lret
and
mov
jae
outsb
adc
mov
mov
push
nop
jo
cs
push
inc
repz
mov
rorl
or
adc
dec
push
pop
sub
int
add
cmp
mov
pop
orl
mov
cmp
cmpsl
rol
xor
inc
dec
call
cs
add
lcall
and
ret
jl
mov
rcrb
or
cmp
adc
push
enter
cmc
push
lds
mov
mov
daa
and
jmp
movsl
imul
ret
in
test
mov
pop
rolb
sub
cmc
inc
hlt
mov
xor
push
or
roll
mov
adc
add
sbb
ret
cmp
mov
jge
out
fbld
negl
dec
and
sub
stc
adc
sub
fsts
addb
js
fmuls
shrl
jno
imul
les
enter
iret
push
add
mov
jp
mov
push
dec
pop
fcmovb
xor
stos
rolb
add
imul
mov
and
mov
out
dec
jno
scas
add
aaa
dec
cmpsl
stc
ficoms
das
adc
into
push
mov
xor
clc
lock
push
cwtl
outsb
pushf
mov
fwait
mov
or
mov
sbb
leave
ja
adc
mov
cmpb
subb
lcall
push
in
cwtl
mov
rcll
loope
lcall
in
mov
jmp
pop
or
into
xor
xor
sub
sub
gs
add
pop
inc
fdiv
xchg
sbb
xlat
decb
out
pusha
sbb
mov
das
mov
out
xor
ret
mov
sbb
dec
xchg
push
fdivs
sbb
in
jne
mov
mov
fdivs
add
test
sbb
push
push
mov
or
shll
pushf
sub
adc
outsl
loop
jp,pn
test
xor
inc
and
test
hlt
aaa
push
pop
add
mov
out
and
cmpsl
jmp
nop
imul
imul
cmp
shll
stos
add
sbb
adc
aaa
xor
dec
xor
mov
hlt
jno
fildl
lcall
adc
dec
leave
and
sub
mov
loopw
addl
dec
add
mov
and
pop
adc
pop
aam
and
mov
add
cld
ljmp
and
test
lret
sub
inc
bound
gs
shlb
xchg
cmpsb
or
shll
sarb
pop
adc
push
push
jecxz
pusha
push
xor
sub
lock
cmp
mov
xchg
iret
and
pusha
mov
jg
jle
into
andl
fcom
das
push
lods
insl
sbb
push
test
xchg
jp
xor
mov
add
mov
je
mov
stos
out
testl
daa
enter
stos
adcl
inc
add
out
pop
out
or
and
fs
mov
sbb
mov
stc
inc
push
nop
pop
pop
xor
lods
aad
cwtl
jge
jecxz
bnd
pop
pop
add
or
push
pop
in
or
add
pop
lock
insl
mov
inc
mov
sub
sbb
out
sub
call
dec
adc
push
dec
mov
mov
loop
cmp
inc
iret
sub
mov
inc
dec
test
inc
sub
inc
bound
mov
xor
push
pop
mov
sti
andl
jae
sbb
xor
dec
imul
pop
pop
decb
mov
lea
bound
mov
inc
call
mov
addr16
les
pop
sub
arpl
pop
sahf
inc
addr16
mov
shl
jnp
aam
lea
sub
aad
loopne
xchg
mov
sub
inc
jno
shl
cmp
addr16
push
push
mov
push
loopne
cmp
dec
movsb
std
stos
xchg
inc
mov
in
loope
mov
mov
in
inc
mov
jae
dec
mov
clc
dec
add
in
out
movsl
xchg
je
fcoml
sbb
pop
test
pop
mov
sub
ja
sub
add
adc
mov
sbb
stos
test
jo
sbb
jp
enter
add
mov
xchg
out
inc
sbb
fcomps
mov
jle
jmp
adc
lds
mov
outsb
xchg
dec
pop
mov
lds
test
dec
cmp
enter
repnz
sub
add
sahf
sub
or
push
jmp
fistps
cmpsl
out
mov
push
stc
mov
movsl
aaa
pop
pop
jb
testb
mov
inc
rcll
mov
sub
cmp
fs
sbb
mov
mov
mov
shl
das
dec
jbe
rcrb
mov
popf
mov
sub
hlt
pop
sbb
inc
inc
pop
push
or
xor
lock
aad
ret
lret
push
xchg
push
les
add
movsb
inc
cmp
push
sbb
loopne
sbb
pusha
sbb
cmp
addl
xchg
or
hlt
and
ljmp
xchg
mov
sub
std
adc
xor
jb
sbb
dec
mov
rorl
ljmp
add
imul
repnz
in
add
movsl
cltd
push
mov
dec
stos
cld
imul
loop
mov
cli
sub
cmp
inc
mov
adc
lcall
mov
xchg
mov
pop
and
stos
stos
mov
cmp
inc
dec
mov
jb
out
movsl
xorl
in
call
cmp
sti
jne
xchg
push
jb
dec
sub
sbb
lcall
mov
lock
mov
cmpsb
ds
test
into
hlt
aam
das
ds
cmp
mov
sahf
jg
ret
jnp
push
dec
xlat
ficoms
ffreep
shrl
in
pop
mov
in
mov
xchg
push
lcall
cmpsb
jnp
mov
mov
or
inc
push
and
cmpsl
mov
test
sub
mov
pop
daa
pop
push
dec
popa
out
xchg
xchg
pop
sbb
jmp
out
xchg
jge
mov
lock
xchg
mov
loope
jns
cwtl
fimull
xchg
jmp
cmp
mov
sbb
mov
mov
xchg
and
aas
mov
arpl
in
or
xchg
pop
enter
iret
ss
or
jl
dec
mov
dec
pop
insl
push
out
cmp
rolb
mov
xchg
inc
cmc
mov
ret
fnstcw
and
pop
push
repnz
fisttps
sti
jecxz
loope
sbb
outsb
sub
addr16
mov
ret
test
adc
push
xchg
inc
fdivrl
pop
incl
xchg
adc
mov
dec
jg
and
jmp
pop
and
ret
push
stos
jae
fcmovnb
lret
push
dec
mov
adc
aam
mov
mov
sub
push
outsl
and
dec
mov
dec
add
mov
sub
xchg
mov
cmpsl
xor
xchg
aaa
push
mov
cmp
ja
aad
and
jg
pop
fsubrl
and
sbb
not
arpl
cwtl
das
inc
sbb
add
xor
outsl
pusha
nop
mov
test
mov
inc
fmull
adc
lahf
inc
in
neg
sbb
arpl
sbb
shl
pop
inc
aad
int
mov
enter
punpcklbw
mov
lret
popf
pushl
fwait
or
lea
decl
mov
mov
jb
cmp
xchg
add
and
adc
xchg
cmp
push
cmpsb
xchg
push
cmp
movsb
decl
push
je
aam
ds
fisubs
cli
stos
and
repz
dec
xor
int
inc
sti
sub
cmp
mov
inc
inc
cmp
and
sbb
push
shll
mov
das
lcall
cmp
pop
xchg
call
xchg
sbb
pop
insb
mov
and
sahf
jo
outsb
cmp
jo
xchg
hlt
jge
pusha
jns
xchg
mov
adc
sbb
leave
push
sub
jge
cmp
mov
lret
daa
mov
add
test
fdivrl
cli
into
leave
pop
subl
and
sub
dec
inc
lret
in
and
lea
mov
inc
jl
xchg
shlb
imul
and
mov
push
cmp
arpl
dec
repz
adc
stc
fisttps
xlat
call
aam
sub
ficompl
andl
mov
cmp
cmc
adc
jb
jge
jg
lahf
adc
jg
dec
cli
stc
scas
fdivs
stc
lret
mov
mov
or
mov
dec
fninit
mov
mov
arpl
adc
sbb
or
add
cmp
sub
jno
jo
scas
rcl
sahf
ljmp
js
xor
or
ljmp
lock
mov
xchg
pushf
nop
addb
cmpsb
int3
add
dec
dec
popf
lret
mov
sbb
jbe,pt
testb
aaa
orl
sbb
pop
dec
cmp
push
lods
insl
js
rorl
fs
out
mov
mov
int3
ljmp
mov
cld
jge
add
adc
out
leave
addr16
inc
fadd
pop
out
adc
out
stc
or
push
lret
cld
xor
shl
add
jbe
dec
fcomp
fstpt
inc
push
test
inc
imul
xchg
inc
pusha
scas
cs
lcall
sbb
mov
aam
sub
mov
test
mov
imul
adc
aas
shlb
cmc
into
pop
fmul
xor
adc
cwtl
clc
mov
push
sub
dec
pop
push
jbe
out
fisubrs
or
pop
icebp
int3
xlat
dec
mov
testl
cmp
inc
ror
aas
and
pop
pop
jle
fsubrl
enter
pop
add
cmpsb
jns
dec
sbb
aad
jp
adc
add
inc
cmp
pushf
fstps
add
pop
or
les
roll
mov
jge
sbb
add
ljmp
adc
sbb
push
mov
loopne
add
xchg
sbb
mov
imul
xor
shr
in
sub
sbb
out
and
xlat
cmp
lea
leave
or
dec
loop
mov
or
and
or
stc
mov
je
fldenv
pop
and
mov
mov
cmp
in
lods
js
lahf
inc
cmp
inc
imul
in
ret
inc
inc
stos
mov
xor
mov
and
or
xchg
jo
jnp
outsl
or
data16
add
fidivrs
into
push
repz
pop
pop
outsb
arpl
cmp
pop
gs
and
mov
sub
in
cmpsb
sbb
mov
and
jnp
mov
imull
fildll
xor
aaa
xor
mov
xchg
jecxz
incl
jnp
inc
sbbl
push
xor
outsb
inc
inc
outsl
jl
pop
jae
and
in
pop
cmp
pop
jb
repnz
jmp
adc
int
and
jne
cmp
mov
jae
xchg
inc
je
stos
mov
cltd
out
mov
ljmp
scas
add
mov
cwtl
scas
out
adc
in
dec
cmp
pop
jne
jmp
mov
int3
mov
ds
mov
out
gs
jecxz
adc
and
xor
add
xor
iret
inc
jb
or
jmp
and
mov
das
push
es
adc
popf
repz
sbb
stc
jge
je
lea
inc
sub
or
mov
jae
mov
cmp
addl
add
shl
insb
aam
sbb
daa
inc
push
mov
and
es
movsb
addr16
arpl
sub
scas
xor
mov
cmp
jecxz
pop
outsb
int3
setb
aam
jmp
inc
sub
sbb
sub
cmp
adc
and
cmp
daa
mov
lods
pop
pop
mov
cmpsl
mov
or
dec
shl
arpl
ja
push
cltd
lret
test
or
jle
mov
mov
mov
xor
jb
movsl
dec
adc
std
or
pop
fistpll
jns
lahf
inc
out
push
in
mov
test
lods
fidivrl
xor
xchg
mov
std
aas
cli
and
js
mov
push
mov
xchg
cmp
pop
loop
sbb
fwait
xchg
pop
jns
std
xor
inc
xlat
mov
mov
and
cmp
jne
inc
aad
mul
fdivl
lods
mov
imul
and
dec
stos
icebp
inc
push
inc
xorb
sti
js
or
jl
mov
nop
xchg
xchg
or
jge
daa
lret
test
jecxz
cmpsb
cmp
cmpsb
aad
adc
lea
fs
cmp
shl
pop
idivb
dec
pusha
push
cli
inc
popa
sbb
sub
adc
aam
push
add
shl
inc
loop
nop
scas
mov
or
add
popf
test
push
lds
mov
inc
xchg
loop
sti
fs
cs
aad
add
xlat
aam
loop
movl
xor
xchg
xchg
gs
lcall
insb
sarl
sub
loop
sti
fdivrl
ja
loope
inc
std
nop
cmp
mov
std
data16
loope
pop
dec
iret
sub
dec
ljmp
pop
or
fidivrl
in
xchg
outsl
fstpt
mov
addr16
jl
nop
sub
call
sub
cmpsl
sub
adc
mov
jmp
dec
loope
sbb
imul
test
dec
scas
faddl
jg
add
in
pop
scas
or
cmp
sub
fisubrs
fstl
inc
and
and
xor
in
loopne
jnp
stc
movsl
sbb
push
or
xor
adc
adc
test
and
jg
mov
arpl
xchg
test
or
dec
imul
inc
iret
mov
inc
mov
fs
jno
cmp
roll
adc
incb
pop
loop
dec
push
nop
cld
cmpsb
rclb
dec
jge
jae,pt
insl
mov
icebp
sbbb
out
jge
in
inc
test
sti
push
pop
loop
loop
jno
sbb
xchg
addr16
add
jp
dec
xchg
mov
sbb
jmp
cmp
inc
movsb
fstl
xor
mov
imul
jecxz
sarb
out
add
fs
xchg
push
push
insb
xor
xchg
cmp
movsb
int3
iret
sti
daa
ss
jmp
add
filds
cmp
rep
lock
jo
aad
adc
xchg
lcall
shr
stc
xchg
cs
enter
daa
std
outsb
lods
pushf
push
insb
pop
lods
ss
leave
jnp
pop
in
sub
out
cmp
mov
imul
mov
int
aam
push
stos
sub
ret
fmul
pusha
stos
cmp
inc
std
jl
inc
xchg
inc
out
imul
xchg
inc
hlt
sub
add
xchg
adc
pop
add
mov
mov
pusha
js
jmp
sti
mov
sbb
loope
mov
cld
cmc
mov
orl
test
dec
pop
push
pop
imul
leave
sub
xor
jae
fcom
jnp
adc
dec
dec
mov
xlat
or
dec
imul
inc
pop
testl
into
shl
adcb
in
push
push
jg
stc
mov
in
xchg
pop
addr16
mov
add
inc
cwtl
jle
rclb
in
pusha
add
or
stos
push
mov
pop
push
mov
cmp
aam
sbb
cli
adc
dec
movb
inc
mov
out
jg
dec
aam
cmpsb
ret
loopne
test
stc
aam
mov
aad
push
mov
jo
cmc
test
std
mov
mov
lahf
mov
xchg
es
sti
or
lret
xchg
mov
jno
clc
loope
ljmp
int3
pop
mov
xchg
shll
sub
scas
mov
in
mov
add
jb
std
dec
ss
xchg
adc
movsl
mov
jmp
xor
scas
cmp
arpl
ss
jle
jg
shrl
fimuls
dec
lods
xchg
test
iret
lcall
push
repnz
test
inc
pop
movsl
addl
test
aaa
dec
lds
jecxz
notl
scas
push
stos
mov
mov
or
jnp
mov
ret
sub
sbb
jle
inc
lea
rcl
out
xchg
xor
sahf
xchg
adc
insl
sbb
xlat
lcall
iret
outsl
sar
insl
clc
call
movsl
mov
mov
jle
or
sbb
test
cs
sbb
add
lret
inc
sub
in
mov
arpl
and
outsl
scas
sub
cli
out
mov
lea
mov
push
stos
mov
sbb
movsb
push
mov
jnp
mov
test
and
sti
mov
xor
lahf
xchg
test
or
mov
pop
xchg
pop
jb
inc
dec
cmp
add
xchg
and
mov
sarl
adc
cmpl
std
mov
mov
test
sahf
popf
bound
jmp
adcb
cltd
es
sti
jns
jge
arpl
inc
cld
cvttps2pi
popa
sbb
mov
aas
repz
fdiv
int
pop
repz
aad
xor
jle
pop
mov
add
fcoms
ret
je
push
ret
popf
lret
or
orb
mov
popa
aad
and
jne
xor
or
jecxz
cmpsb
mov
mov
pop
shrl
jae
loope
mov
out
mov
push
cmp
test
xor
fdecstp
cmp
xor
ficompl
xchg
cmp
inc
int
cmpsl
leave
xchg
loop
mov
arpl
jg
je
cmpsl
jl
and
add
loope
pop
dec
mov
cmp
fisttpl
andl
mov
dec
enter
outsb
loope
jmp
outsb
pop
cwtl
call
in
imul
jns
enter
and
xor
pop
pop
dec
fwait
or
push
rorl
push
outsl
clc
inc
push
fwait
adc
pop
jge
movsb
pop
out
xchg
int3
cwtl
jg
jnp
sub
ljmp
fs
aas
xchg
xor
or
mov
cmc
test
push
cld
jl
and
fwait
xchg
test
mov
adc
out
xor
adc
ficompl
notb
xchg
push
mov
mov
and
ljmp
dec
adc
leave
adc
arpl
aas
mov
repz
out
add
mov
daa
mov
or
fdiv
imul
xchg
cwtl
pushl
mov
std
xchg
xchg
or
jns
adc
enter
imul
mov
loope
push
inc
lea
aam
scas
lcall
cmc
xorl
ret
sti
pmaxsw
mov
sbb
sbb
dec
lds
cs
xor
dec
jmp
ss
repz
fcoml
inc
shlb
leave
inc
in
test
cmp
jne
divb
or
pop
lea
mov
and
add
cmpl
adc
xchg
push
xchg
arpl
adc
inc
ds
mov
jl
push
sbb
iret
das
jge
daa
ficompl
pop
lcall
mov
rclb
popf
movsb
dec
mov
mov
movsb
rcl
jmp
cmp
push
movsl
scas
cmp
mov
mov
xchg
inc
cmpsl
jns
mov
nop
push
dec
jle
xchg
push
pop
rclb
sub
adc
jnp
push
aad
xchg
mov
cs
cmpsl
mov
push
leave
cltd
jae
fucom
and
add
test
loope
or
fidivrs
mov
jno
xchg
shl
addr16
outsb
stc
fldenv
adc
psubw
ss
hlt
lock
mov
pop
out
or
daa
mov
aas
xor
push
pandn
shll
xor
cmp
imul
iret
lcall
xor
fwait
and
nop
sub
adc
jle
into
pop
imul
jb
push
lahf
cmc
pop
pop
ljmp
inc
and
ret
add
pop
mov
lret
popa
adc
pushf
mov
cli
fisubrl
mov
and
mov
rcrl
es
insl
andl
shll
dec
pusha
sarl
pop
ret
mov
and
mov
lret
out
inc
dec
sbb
cld
cmp
sti
push
xchg
cmp
ret
or
xor
sahf
inc
out
aaa
mov
xor
stc
popa
cs
sbb
add
xchg
insl
popf
das
out
divb
test
mov
add
outsb
add
pop
push
lods
pushf
iret
ss
mov
out
cmpl
push
into
bnd
in
pop
sub
mov
inc
mov
les
xor
ret
decb
daa
pop
lea
or
hlt
pop
xchg
outsl
stos
or
mov
loope
dec
mov
jo
inc
or
fldenv
cmp
sub
push
or
dec
mov
lret
pop
jbe
rolb
xor
aad
xor
lret
hlt
out
mov
push
repz
pop
inc
adc
adc
jg
dec
push
fsubl
push
and
movsl
mov
lods
sbb
iret
jbe
mov
push
jecxz
sbb
nop
mov
mov
enter
int
and
xchg
push
pop
push
inc
xchg
push
negl
mov
adc
sub
adc
and
pusha
mov
mov
jno
mov
pop
into
or
inc
call
or
lea
fimuls
inc
scas
or
call
jmp
je
sbb
sub
cmp
and
jae
sub
push
enter
icebp
fsubs
insl
jns
adcb
int3
jo
push
ret
int3
nop
mov
and
mov
pop
xorb
add
mov
adc
imul
dec
stos
dec
cs
sbb
mov
cltd
push
or
into
mov
outsb
ds
lahf
les
mov
xchg
addl
je
fwait
adc
mov
cli
dec
clc
fisubrl
arpl
mov
mov
sbb
repz
inc
les
push
aam
adc
ljmp
jb
loop
push
decl
sub
int3
jmp
inc
push
jp
mov
and
cmovae
xchg
add
pushf
add
in
mov
gs
mov
jno
rcr
pushf
jmp
lret
mov
mov
lods
and
jmp
mov
xchg
cs
mov
mov
inc
sub
sbb
inc
int
adc
jne
jb
test
stos
pop
sbb
cmp
into
jnp
push
jge
adc
mov
fwait
out
dec
push
mov
jl
push
push
adc
daa
adc
jnp
pop
add
jbe
sbb
xor
cmp
sub
mov
retw
adcb
test
pop
icebp
mov
jb
inc
sahf
aaa
dec
push
iret
loopne
aam
mov
push
jns
cmp
daa
xchg
imul
cwtl
stos
sbb
sbb
xchg
scas
push
sub
mov
iret
and
xlat
pop
loope
or
cltd
sub
jecxz
adc
ja
jp
sub
je
dec
mov
faddl
loop
cld
add
lds
jne
mov
stos
hlt
adc
dec
stos
dec
mov
js
mov
popa
add
jl
and
mov
je
mov
push
push
inc
mov
push
testb
inc
loope
pop
in
push
add
sub
cli
xor
aad
fsub
sti
mov
dec
pop
fadds
jbe
cwtl
add
cmc
mov
js
mov
sub
mov
pop
gs
shl
pop
sub
shll
movsl
pushf
scas
mov
aaa
or
xchg
ds
js
or
scas
sub
sub
mov
sahf
jnp
inc
fisttpl
pop
sbb
daa
dec
les
pop
xchg
in
cli
idiv
bound
hlt
jecxz
lock
cmp
push
push
test
ljmp
insl
sbb
dec
mov
dec
int3
addb
mov
lahf
aas
idivl
out
add
push
push
sub
push
testb
into
arpl
mov
cmpsb
jae
lods
push
sub
movsb
repz
cmp
sbb
in
add
inc
xor
jmp
mov
imul
adc
std
mov
scas
xchg
orb
ja
jle
or
rclb
enter
dec
pop
mov
rcr
mov
sub
and
stos
test
xlat
add
cwtl
in
jmp
and
scas
adc
and
xchg
sbbb
popa
mov
dec
push
dec
imul
and
mov
xchg
push
lods
push
jnp
add
mov
mov
or
movb
fs
popf
add
ds
jle
sbb
scas
mov
into
sti
cmp
les
movsb
shlb
lds
add
orb
sbb
adc
je
dec
std
out
flds
divb
adc
inc
pusha
add
test
add
mov
pop
jecxz
or
fisttpl
xchg
loop
dec
dec
mov
pop
shl
push
jge
inc
sub
fwait
scas
xor
jle
xchg
inc
loop
and
clc
inc
push
mov
sbb
mov
scas
das
cmc
subb
dec
mov
mov
idivb
test
or
wbinvd
jg
mov
inc
out
je
xchg
lea
fcoms
push
inc
push
add
repnz
jg
dec
mov
stos
push
jle
stos
mov
rcll
sbb
rcrl
jecxz
out
dec
sbbb
mov
xor
insl
and
testl
movb
ss
dec
or
and
gs
jmp
sarl
pop
orb
mov
or
loopne
sbb
rcr
in
idiv
or
mov
cmp
ja
data16
mov
jno
in
addr16
xor
xor
int
in
and
popf
dec
and
cmpsb
mov
gs
into
jl
sub
and
int3
rolb
rolb
jbe
andb
xor
xchg
mov
push
cltd
ja
dec
jmp
rorb
inc
call
movl
mov
adc
scas
adc
xchg
int
add
loop
lods
mov
lock
in
mov
add
mov
or
push
sbb
lds
test
ja
cmp
mov
xor
fwait
call
cmp
popa
push
cmc
insl
cs
scas
dec
fstl
cmp
adc
jl
push
and
leave
pop
aas
or
adc
mov
in
or
repz
dec
jb
fstl
shrb
dec
xor
mov
movsl
cmpsl
rcl
hlt
imul
loope
fidivrs
and
sbb
loop
fiadds
scas
mov
cld
fcoml
jecxz
out
jae
add
add
fwait
lret
sub
out
mov
gs
jae
dec
xor
jbe,pt
and
jne
or
and
ds
insl
and
or
popa
xchg
inc
pop
andl
and
add
fiadds
in
push
mov
dec
inc
or
nop
jnp
or
jae
fcomp
cmp
xchg
and
jo
pop
mov
sub
imul
pop
shrl
push
mov
negl
mov
lea
lock
dec
xchg
or
mov
xlat
jmp
sbb
ss
orb
int
addl
and
rorb
int
sbb
loopne
dec
js
push
lret
push
ss
push
ret
push
ljmp
and
addl
mov
sbbl
mov
les
push
push
test
dec
dec
and
jb
push
and
cmp
cmp
pop
hlt
ljmp
out
cmp
outsl
repz
cmpsb
sbbl
inc
mov
aas
or
cmp
enter
jge
scas
nop
inc
cmpsb
jl
gs
in
xor
popa
add
pop
loopne
call
insl
push
pop
mov
add
pop
test
insb
ljmp
mov
dec
xor
sub
and
into
xor
xchg
xchg
clc
lea
sbb
pushf
mov
xchg
sahf
xchg
or
aam
leave
inc
xor
sub
outsb
aam
lret
insb
call
movsl
sbb
popa
or
lock
push
fstps
push
lods
and
lds
arpl
xor
lock
repz
cmp
mov
pop
xor
sbb
pop
fwait
lods
lcall
cmpsb
xchg
add
lret
and
mov
or
sbb
lds
sbb
mov
adcb
or
in
aad
adcb
add
mov
andb
adc
shl
ljmp
test
js
or
int
jp
movb
dec
xor
push
lret
push
arpl
dec
stos
cmp
andb
scas
cmc
cmc
andl
outsb
inc
pop
das
jge
push
pop
mov
negb
into
repnz
shlb
xor
loopne
fcoms
lahf
adc
pop
lret
int
mov
mov
movsb
in
cmp
clc
sub
add
lock
out
adc
imul
test
add
adc
popf
push
in
fsubr
and
cltd
or
mov
mov
sub
sub
xlat
or
andb
fldl
cmp
cld
cmpsl
sbb
inc
adc
dec
xor
sahf
add
add
pusha
or
stos
cmp
fldl
sti
and
push
das
pop
mov
xlat
push
mov
mov
insl
adc
add
jmp
cmp
add
sbb
adc
mov
insl
lahf
mov
xor
out
and
fimull
inc
jne
pop
xchg
shrb
hlt
jle
push
add
mov
hlt
mov
aam
inc
pop
push
pop
push
pushf
ror
aad
in
and
call
jb
push
fwait
rcl
testl
cmp
ljmp
fucomip
or
mov
add
aam
bound
nop
jbe
mov
mov
push
cmpsl
jb
imul
or
mov
jne
xchg
stc
aaa
dec
sub
daa
cmp
sbb
mov
clc
mov
loope
in
lods
rcr
pop
je
mov
sub
sbb
loop
mov
call
insl
lahf
out
jg
sub
mov
fsub
cmp
lods
mov
out
xor
ret
push
in
icebp
and
or
push
inc
mov
andb
mov
loop
cld
mov
aaa
xchg
ja
jl
cmp
imul
dec
cmpsb
cmp
fwait
pop
test
pop
in
cmp
jge
ss
rcll
push
jo
sub
dec
dec
sbb
je
iret
push
add
pop
xor
rcrl
mov
mov
jne
xchg
dec
sub
ds
in
test
rcrb
mov
scas
data16
movsb
add
test
or
xor
ljmp
mov
out
cmp
cltd
mov
pop
testb
xchg
and
out
gs
test
mov
ret
cs
mov
jne
inc
mov
xchg
mov
jg
mov
jl
cmp
add
dec
icebp
into
cmp
inc
cmp
dec
adc
orb
fdivl
sub
mov
stc
xchg
lock
adcb
out
jns
repz
cmp
xor
cmp
fimull
fstp
dec
mov
mov
ljmp
and
faddp
and
xor
add
cmp
incl
cmp
mov
jno
mov
adc
mov
add
clc
insb
scas
scas
loope
push
pop
xor
pop
fiaddl
stos
ss
push
push
movsl
inc
cwtl
pop
jmp
jns
dec
add
popa
jno
aam
pop
xor
cmp
jbe
mov
repz
or
jecxz
add
mov
jnp
fistpll
xchg
cmpsl
xchg
mov
shrl
les
xchg
lret
mov
hlt
push
push
aas
xor
mov
lret
lock
xchg
in
cmp
mov
lea
mov
fcmove
out
xlat
sub
and
jl
or
mov
subb
shlb
mov
mov
cmp
ret
jo
shlb
pop
xchg
out
sbb
ret
imul
mov
and
test
les
pop
inc
in
push
outsb
lods
movsl
in
movsl
lret
xchg
lret
jecxz
xchg
dec
fbstp
or
lcall
aaa
mov
push
xchg
jbe
sub
hlt
insb
push
movsl
outsb
sbb
jae
iret
push
cltd
ja
in
enter
sub
sbb
add
in
dec
adc
add
adc
out
mov
daa
notb
mov
or
jl
sahf
mov
in
and
loop
sub
clc
sahf
fistpl
std
outsl
dec
cmp
mov
sti
adc
mov
sbb
gs
sar
aad
sbb
mov
mov
jmp
push
shll
mov
and
mov
sbbl
dec
jle
rorl
dec
sarl
fbld
push
mov
loop
mov
push
mov
pop
imul
rorb
and
mov
xor
push
fnstsw
jbe
inc
xor
sbb
fidivrl
xor
xchg
xchg
movsb
jne
ja
mov
or
adc
jl
or
push
int
gs
or
icebp
sub
fcoml
notb
inc
mov
adc
pop
test
sti
stos
test
repz
gs
je
cmp
dec
shll
and
fnsave
shll
arpl
xchg
jecxz
jmp
gs
mov
xchg
icebp
pop
int3
add
and
fs
test
dec
and
call
mov
test
dec
or
addr16
lea
ret
push
adc
cld
mov
mov
dec
fsts
outsl
pop
push
lret
push
sub
cmp
dec
into
inc
add
loop
jnp
sbb
pop
into
std
push
stos
or
inc
adc
iret
or
int
sbb
shll
xchg
fnstsw
mov
nop
push
xor
jae
cmpsb
mov
movsb
rolb
inc
dec
les
cmp
mov
orl
rorb
stos
sti
lea
cmp
xchg
adc
mov
enter
inc
and
adc
aas
sar
mov
xor
jmp
xchg
push
iret
inc
pop
movsl
lret
jecxz
sub
cltd
shlb
and
les
test
lcall
cmp
aad
out
pop
or
adc
lods
pop
repnz
dec
ret
ret
jecxz
xor
mov
lods
mov
push
and
inc
nop
add
popa
mov
mov
pop
ja
or
cmp
cltd
aas
inc
or
mov
cmpsb
out
mov
or
and
adc
cmc
inc
fcoml
jle
cmc
cmp
mov
jns
fistps
ficompl
notb
push
xchg
xchg
outsl
rorl
aad
icebp
push
mov
pop
inc
adc
sti
outsl
push
mov
and
or
bnd
xor
or
sahf
ret
or
pop
arpl
inc
mov
xchg
and
fldenv
lea
sub
ja
scas
pop
pop
xchg
jae
sub
and
mov
mov
inc
jle
andb
xchg
mov
rorb
or
in
mov
jecxz
and
jno
pop
sbb
adc
inc
in
dec
in
add
and
lret
pushf
lds
scas
adc
mov
imul
pop
jp
jae
xchg
rcl
sub
push
out
sbb
outsb
aas
sub
mov
jnp
pop
mov
xchg
push
dec
call
jle
mov
ljmp
leave
nop
sub
xchg
test
fisttpll
and
ja
insl
nop
test
sbb
icebp
xchg
movsl
inc
loop
xchg
inc
stos
push
insb
xchg
lock
ss
push
jge
cmp
xchg
repnz
jl
mov
cmp
test
dec
dec
or
xor
insb
and
ret
pop
nop
call
push
test
lods
mov
or
sbb
dec
fimuls
push
iret
cmp
add
clc
stc
adc
and
popl
movsb
push
adc
or
mov
roll
imul
pop
ja
leave
dec
sub
jae
inc
std
nop
insb
push
pop
lret
sahf
lahf
aaa
fdivrl
sti
les
mov
nop
js
dec
movsb
and
sahf
pop
iret
inc
pusha
add
xor
arpl
popf
std
mov
ljmp
inc
test
xchg
jne
ret
in
test
testb
pop
repnz
sti
mov
rorb
pushf
add
ret
jo
add
out
lahf
xor
dec
popl
cmp
pop
pop
or
push
mov
and
mov
add
shrl
ja
jno
loope
and
into
je
mov
mov
and
jns
dec
jle
sbb
pusha
xlat
mov
sbb
xchg
in
aad
add
dec
mov
fidivrs
sub
dec
inc
mov
jns
add
jecxz
add
or
sub
pop
push
fnstenv
aad
sub
rclb
icebp
inc
test
sti
ficoms
adc
shll
stos
xchg
and
inc
add
movsb
mov
cmp
idivl
lods
arpl
inc
pop
dec
popf
mov
enter
cmp
add
mov
mov
jbe
add
jg
inc
aas
out
call
and
add
cld
xchg
sub
pop
sbb
cltd
mov
sub
sub
pop
mov
sbb
pop
sbb
adc
mov
cli
adc
cmpsl
cmp
fbld
adc
xchg
sub
xchg
or
test
mov
cmp
adc
rcll
xor
popf
sub
scas
push
add
mov
dec
mov
inc
pop
int
dec
jns
mov
jle
clc
icebp
sti
sarb
outsl
mov
lea
das
add
add
sub
cld
xchg
or
sub
xchg
inc
ret
mov
cmc
pop
roll
cmp
dec
imul
mov
int3
jmp
adc
jmp
je
inc
rolb
vunpckhpd
in
adc
loop
call
and
cmp
and
dec
outsl
enter
xor
xor
lcall
dec
clc
sub
dec
in
cltd
dec
sub
sub
inc
movsb
mov
add
jne
sbb
test
jle
lock
test
push
pop
jg
pandn
xchg
scas
mov
fisubs
movsb
lods
in
pop
cmpl
test
and
inc
and
adc
mov
test
xchg
popa
out
ret
ja
inc
cmp
les
and
adc
jle
insb
cmc
or
push
push
fisttpll
sbb
ss
stos
inc
inc
fs
push
xchg
mov
add
cltd
mov
insl
lret
test
inc
dec
mov
out
add
imul
hlt
mov
imul
mov
dec
xor
ds
cmp
arpl
or
pop
push
and
mov
xor
mov
add
sarl
sub
mov
pop
fs
dec
in
es
sbb
test
inc
and
push
mov
rclb
repnz
cmp
xor
mov
arpl
lods
out
pop
cmp
push
push
push
scas
out
jmp
dec
addb
xor
pop
dec
sub
xorb
push
jp
popf
fmull
insb
dec
out
push
and
mov
pushf
stos
adc
daa
fs
xor
fists
xchg
stos
sbb
add
aad
xchg
sub
add
pop
out
push
adc
push
cmp
mov
loopne
shlb
imul
dec
inc
loop
outsl
xchg
dec
jbe
jecxz
add
sbb
cmp
dec
pop
outsb
xchg
loopne
dec
insl
dec
rcll
add
inc
fmul
addb
fisttpl
pop
cmpsl
aaa
dec
fwait
jnp
adcl
or
les
pop
push
and
push
out
xchg
dec
les
cmpsl
xchg
xchg
leave
mov
shl
inc
jae
cmp
cmp
out
pop
movsb
int
leave
das
mov
xchg
pop
lret
aas
cli
arpl
sbb
and
push
loop
xor
jl
shlb
pusha
xchg
sub
arpl
xor
mov
stc
notb
leave
mov
test
addb
test
or
test
xchg
nop
orl
sbb
out
adc
imul
and
fucompp
dec
mov
sbb
pop
fnstcw
js
sub
es
dec
jb
and
jg
sub
fnsave
mov
dec
mov
xor
sub
arpl
xchg
xchg
add
cmp
les
jg
sbb
das
mov
out
jp
roll
jecxz
inc
nop
xor
jne
mov
out
xchg
icebp
adc
add
cmpsl
test
int
jge
xchg
adc
push
mov
dec
cltd
ret
push
sbb
adc
push
inc
pushf
movsl
cmovne
leave
gs
xchg
insb
vmovaps
dec
daa
mov
mov
cmpl
dec
pop
inc
in
mov
inc
data16
xor
inc
mov
push
lahf
adc
pop
popf
or
adc
push
push
sub
xlat
stc
lahf
sbb
icebp
pop
ficompl
sar
mov
jmp
pop
adc
jp
lods
pop
std
inc
lret
dec
inc
leave
sub
xlat
cmp
js
or
pop
mov
sarb
xor
cmc
mov
aas
cmp
stos
aaa
and
xor
les
adc
xchg
scas
mov
mov
sub
test
shlb
push
mov
jb
mov
xchg
aad
lret
testb
sub
jns
push
push
outsb
pushf
hlt
in
pop
cmp
lods
xor
aad
mov
mov
sahf
mov
push
sub
dec
add
jp
call
inc
movsb
rorl
ds
xchg
lock
mov
divl
inc
loop
fs
pop
cmp
out
pop
std
outsl
xchg
and
lret
jns
cmp
pushf
or
inc
push
jns
push
push
adc
sbb
inc
sbb
std
sbb
pop
stos
cmp
shll
jp
fisttps
popa
inc
pusha
shl
scas
xchg
nop
xor
scas
cld
insl
adc
xor
sub
arpl
mov
ror
nop
mov
push
cmp
mov
jmp
jmp
rcrb
jle
leave
xchg
pushf
mov
mov
aad
mov
cld
push
cmp
inc
ret
add
fwait
inc
shll
push
dec
test
pop
inc
std
jno
data16
ljmp
xchg
pop
jmp
out
test
mov
movsl
xor
aad
adc
dec
out
ds
pushf
dec
in
lock
push
jecxz
cmp
imul
xchg
push
lcall
lret
jmp
inc
fldpi
cli
aam
cmp
jecxz
outsl
adc
fstps
mov
mov
cmpsl
cs
gs
in
lods
sbb
dec
push
outsb
aas
dec
ja
pop
cmp
mov
cmp
push
stos
sub
cld
mov
cld
and
xor
add
lds
insl
loope
pop
aaa
hlt
scas
lcall
push
mov
xchg
sahf
dec
arpl
xor
int3
xchg
cmp
dec
insl
inc
stos
jo
add
xchg
lcall
lcall
sbb
xor
dec
rolb
outsl
dec
pop
xchg
pop
leave
mov
lahf
stos
adc
cmp
mov
xchg
sub
xchg
mov
outsb
into
inc
bound
cs
imul
outsl
sbb
cwtl
mov
loop
sub
sub
fisttpl
lret
cs
push
cmpsw
lret
xchg
cltd
or
fistpll
push
cmp
outsb
jnp
scas
test
jmp
xor
sub
fwait
in
mov
aaa
daa
stc
in
std
cli
out
pop
iret
pop
sub
cmp
aas
add
jo
push
pop
or
iret
cmp
or
jecxz
mov
dec
data16
xchg
xchg
mov
nop
mov
cld
fnstcw
ljmp
repz
xor
and
ja
dec
lods
mov
imul
fisttpl
xlat
jbe
mov
add
push
pop
cmp
pop
in
ror
aas
rolb
ljmp
cmp
and
aam
cmpsl
adc
in
xchg
cmp
xchg
ficomps
jmp
inc
clc
cltd
std
shll
addr16
lea
hlt
mov
cmp
fsubr
popf
pop
mov
insb
iret
jecxz
mov
stos
and
sbb
divb
lcall
add
ret
pop
stos
jle
sti
cld
dec
loop
cwtl
orb
sarb
cld
add
int
ret
lahf
idivb
jno
int
popa
clc
inc
add
rclb
and
inc
cmp
sbb
out
xor
sub
mov
and
mov
fsubrl
lods
dec
imul
add
cli
fs
dec
outsb
std
push
jge
ljmp
insb
cmp
insl
ret
aam
repz
sbb
sarl
bound
add
add
dec
jne
ja
test
cmp
add
loopne
mov
adcl
fwait
mov
xchg
imul
and
test
movsb
inc
add
mov
sub
xchg
and
xor
aas
cmp
push
imull
fs
scas
movsb
or
ljmp
cmc
imul
push
jmp
push
xor
ljmp
or
in
in
shll
and
iret
cwtl
hlt
out
sub
pop
push
jne
or
add
popa
inc
mov
arpl
mov
sbb
es
xlat
xor
fistpl
and
mov
push
dec
outsl
ljmp
iret
cmp
rolb
mov
dec
lret
fcoms
js
arpl
sahf
mov
sub
xor
push
in
jns
bts
ss
jne
psrlw
cmp
into
daa
jne
nop
add
inc
push
leave
imulb
stc
call
cs
inc
stc
clc
in
clc
mov
popa
mov
fsubs
or
jle
mov
pop
es
sub
cli
aaa
push
lcall
leave
pop
sub
mov
jmp
push
int
sbb
arpl
xchg
xchg
and
mov
cwtl
pop
fsubrl
rcll
mov
jl
fcmovbe
push
dec
pop
dec
lret
xor
testb
and
movsb
sbb
push
adc
mov
inc
popa
mulb
push
mov
pop
mov
add
mov
or
and
in
dec
outsl
lret
sub
sbb
lahf
inc
cld
lds
and
popa
das
ds
shll
pop
adc
das
test
pushf
inc
imul
dec
ss
imul
dec
maxps
push
addl
add
add
sub
out
fs
cli
iret
mov
out
sbb
mov
mov
imul
or
sbb
stos
daa
repnz
inc
sahf
aam
cltd
and
xor
xor
fisttps
fs
xchg
imul
rolb
ja
movsl
scas
ss
faddl
and
aas
stc
pop
xchg
test
inc
outsb
shlb
ror
xlat
inc
push
sbb
in
dec
sbb
sahf
mov
mov
ljmp
sbb
cmp
sahf
lcall
sub
xchg
aas
pusha
in
mov
aad
out
div
push
inc
lds
inc
movsb
push
insl
add
lret
das
sub
imulb
sbb
adc
and
insl
stos
jae
in
jecxz
lods
stos
scas
dec
jns
adc
into
fisttpll
jno
dec
add
aam
xchg
inc
loopne,pn
stos
movsb
cli
cmp
jnp
lods
out
adc
jbe
adc
scas
jl
xchg
and
out
pop
fwait
push
cwtl
sti
pop
add
iret
out
mov
imull
pop
push
dec
out
fdivp
daa
or
shlb
scas
add
out
and
insb
ja
ret
dec
int3
push
cli
test
jge
lds
push
sbb
cli
xor
cmp
inc
aaa
stos
in
repz
lea
insl
cmpsl
dec
mov
enter
push
or
add
cltd
lret
lods
push
cmpsb
dec
test
leave
cmpsl
daa
pop
and
xor
pop
mov
push
int
in
xchg
lods
jns
int
iret
mov
ss
in
in
lret
cmp
test
jecxz
push
adc
inc
idiv
push
and
and
push
mov
and
lock
cltd
shll
mov
sub
nop
movsb
mov
cs
pop
mov
loope
stos
insb
mov
or
jp
xlat
daa
cltd
inc
jne
mov
cmp
inc
daa
pop
adc
inc
xlat
dec
sub
shll
xchg
push
jb
and
pop
sbb
jp
sbb
aad
or
mov
mov
insl
sub
mov
test
hlt
imul
shrb
sbb
les
enter
or
ficoml
in
int3
jle
inc
lret
jl
loopne
xchg
loop
popa
jmp
add
mov
or
ss
or
orb
fdivl
dec
sarb
pop
insl
stos
lds
jle
fidivrs
test
subb
and
push
lea
ret
test
jle
mov
in
loop
mov
bound
dec
jmp
xor
lods
pop
xor
xor
inc
daa
cmp
jno
lret
push
outsl
leave
push
add
inc
hlt
pop
cmp
add
insb
out
jno
das
sar
mov
adc
add
ja
and
pop
out
outsb
mov
xor
hlt
dec
sbb
jnp
bound
add
cmp
mov
add
xor
scas
mov
fdivs
dec
mov
stos
js
dec
ljmp
sbb
rolb
andb
dec
or
xchg
movsb
cmp
enter
mov
adc
cs
loop
movb
std
push
mov
push
adc
shll
out
hlt
or
stos
scas
push
notl
pop
aam
ljmp
lahf
sbb
add
cmpsb
sbb
jge
sbb
movsb
jno
jle
sbb
leave
cltd
and
inc
cli
mov
sbb
and
mov
fsub
mov
lahf
mov
icebp
rolb
add
adcl
rcrb
fisubrs
or
int
andl
and
push
jecxz
mov
sub
aas
adc
mov
xchg
cwtl
or
inc
mov
dec
push
dec
sub
jmp
icebp
ret
or
mov
hlt
mov
sar
push
add
jb
xor
les
xchg
mov
cmp
dec
bswap
sbb
dec
dec
popl
push
push
jecxz
xchg
shl
mov
scas
in
enter
out
mov
mov
into
xor
inc
jae
or
aad
movsb
pop
mov
mov
mov
aaa
orb
movsl
cmp
xor
mulb
int
jg
in
push
popf
mov
inc
imulb
jg
scas
adc
and
iret
int
push
push
test
pop
xchg
cmp
ss
out
in
popf
fs
sub
push
mov
mov
inc
adc
inc
js
out
adc
mov
cmp
lock
loopne
ja
xchg
jb
jmp
pop
push
test
fstpl
pop
jo
jns
adc
int
pcmpeqw
dec
and
xor
scas
mov
stc
jnp
imul
pop
xor
movsl
and
push
pop
xchg
sbb
pop
xchg
aaa
cmpsl
and
aaa
mov
jne
es
or
dec
inc
add
pop
ret
mov
ja
dec
cltd
mov
dec
xchg
lahf
jne,pt
popa
cmp
push
test
xchg
push
mov
fcmovu
mov
pop
cmp
sbb
clc
adc
sub
iret
subb
xchg
xlat
ret
insl
push
sti
push
ror
sub
popa
mov
mov
andb
and
sub
scas
inc
xchg
int3
aad
mov
mov
pop
and
test
mov
inc
xchg
jp
mov
icebp
dec
inc
push
je
sbb
fdivrl
inc
rcr
movsb
dec
pop
aaa
mov
add
and
jge
int
movsl
mov
in
std
js
jmp
cs
push
std
adc
adc
dec
push
pop
aas
or
sub
push
xlat
sub
test
in
stos
out
test
lods
shll
add
or
ficompl
mov
adc
ficoml
jno
mov
pop
imul
fidivrl
sarl
or
push
jp
adc
jl
fwait
cld
aad
subb
xor
subb
ret
jnp
xor
xchg
cmc
pop
shll
cmp
lret
iret
sbb
xor
nop
ds
push
push
push
mov
mov
mov
push
arpl
xchg
push
stc
ret
aam
mov
ljmp
jo
jle
scas
jno
fistl
xor
xchg
gs
adc
inc
rorl
out
pop
and
sub
aaa
ja
imul
cmpsl
dec
push
mov
push
fiadds
scas
sub
js
cwtl
repnz
test
xor
cs
sub
add
inc
xor
fwait
ss
adc
adc
ljmp
shrb
nop
or
cmp
sub
xor
shlb
mov
or
in
outsl
dec
push
mov
jle
addr16
push
in
and
in
fsubrp
dec
xor
mov
pop
push
sub
jae
movsl
int3
jo
outsl
mov
in
pop
xchg
pop
xor
lock
in
enter
adc
sbb
bound
addr16
xor
pop
rorl
loope
jg
aam
mov
mov
call
imul
sar
or
pop
cli
stc
test
inc
push
jno
ds
je
mov
and
fisubrl
popa
mov
and
mov
sti
dec
lahf
jbe
jbe
mov
lret
and
inc
pop
cwtl
mov
ret
insb
cmp
rcr
shlb
bswap
sahf
lds
aam
out
cld
xchg
lock
fisubrs
fyl2x
dec
jge
sbb
sbb
pop
out
adc
das
rcll
xor
rolb
mov
pop
cli
roll
lret
xchg
or
aam
sarl
std
xorl
lods
xchg
pushf
xor
test
mov
xchg
xchg
push
cmp
cmp
pop
repz
pop
lock
or
inc
sub
jne
mov
scas
int3
jmp
and
cmp
int3
subl
icebp
lahf
int3
sti
push
int3
ret
leave
loope
lds
mov
ss
adc
xchg
pop
and
insb
inc
into
sub
mov
lcall
push
outsb
loope
xlat
cmp
xchg
and
nop
inc
in
adc
mov
xor
push
pop
mov
mov
jl
dec
push
or
in
test
test
pop
call
popf
push
mov
inc
push
push
lret
insb
adc
in
sti
add
cmp
mov
inc
push
out
cmp
or
jl
sub
inc
xor
mov
or
push
jae
clc
insl
ja
cmp
jl
fsubl
and
sbb
sbb
pop
cwtl
xchg
test
mov
inc
fisubrl
ja
dec
xlat
outsl
xchg
jge
mov
stos
lds
leave
mov
mov
out
mov
pop
mov
fnstcw
cltd
pop
push
ja
stc
lds
je
cmp
fildll
mov
push
jle
aad
insb
jecxz
xchg
js
lods
mov
dec
or
push
sbb
out
scas
mov
or
lods
fs
or
int3
xchg
and
hlt
cmpsb
inc
push
mov
stos
bound
sbb
insb
inc
mov
push
out
shrb
aas
adc
push
insb
in
fstl
les
push
add
lret
and
fwait
dec
push
dec
lcall
or
pop
cmp
jno
inc
sbb
jecxz
xor
add
dec
adc
mov
lcall
jae
pop
scas
daa
int3
sub
xor
fsubrs
mov
clc
mov
xchg
jo
cmp
dec
shrb
ret
bound
aaa
xor
cmpsb
lcall
stc
cmc
add
jle
sub
cs
jb
push
xorb
adc
jmp
jge
int3
cmc
jp
lahf
or
insb
inc
mov
xchg
cwtl
test
mov
push
scas
faddl
or
xlat
repnz
push
movsb
mov
stos
lret
dec
enter
shlb
icebp
inc
dec
cs
xor
mov
mov
cwtl
rol
dec
int
jno
sub
aas
push
pop
loopne
subb
mov
sbb
lods
cmpsl
mov
sub
adc
mov
fs
loopne
cmp
stos
push
xor
repz
adc
adc
and
in
imul
das
or
sub
jb
out
in
pop
aas
jp
jae
xor
out
inc
stos
sbb
sub
push
fsub
ror
call
mov
adcb
push
cmp
inc
push
dec
out
jae
es
shll
into
sub
inc
push
movsl
imul
and
rcr
push
mov
mov
pop
inc
lea
hlt
push
mov
es
jne
dec
jae
jae
orb
cltd
outsl
ficompl
fldt
push
test
sarb
jo
dec
shl
mov
jno
dec
mov
jne
cli
fsubrs
xchg
and
mov
or
pop
gs
cltd
fs
mov
loopne
adcl
mov
fxtract
xchg
std
or
divl
pop
adc
cmpsl
mov
push
jno
jp
sub
daa
dec
dec
mov
std
push
sti
mov
jecxz
cltd
in
jp
std
les
imul
jmp
incb
aam
in
push
int3
xchg
bound
dec
fcompl
dec
push
xor
in
loope
cli
sub
lret
inc
push
shl
ret
addr16
stos
xor
jecxz
stos
pop
adc
and
push
push
push
cmp
pop
mov
ljmp
outsb
mov
lods
cmc
arpl
mov
fwait
sbb
sbb
cmp
in
pusha
sbb
lret
jbe
pop
mov
fs
cmp
pushl
divb
int
out
xchg
fnsave
hlt
out
xor
or
aam
and
jb
pop
jnp
mov
cli
pop
ljmp
mov
inc
and
in
push
jnp
xor
fcomps
dec
lret
fucomi
mov
fs
jno
test
add
test
add
or
sub
add
lock
rcll
jo
movsl
and
fisubs
mov
mov
mov
pop
inc
adc
sbb
xchg
push
ss
imul
jno
cmp
or
lret
jns
pop
pop
sub
pusha
mov
call
jnp
pop
addr16
int
stos
mov
xorl
sarl
mov
loop
gs
mov
push
jle
xchg
mov
paddq
mov
adc
sti
add
sub
movsb
popa
pop
test
jmp
xlat
cltd
inc
fwait
jnp
lods
jbe
and
mov
or
mov
adc
popf
xor
mov
xchg
das
test
cmp
adc
jo
mov
and
mov
fwait
mov
jb
inc
sbb
fstl
ds
push
xor
jecxz
std
push
push
gs
and
mov
push
imul
dec
xor
mov
mov
movb
imul
sub
popf
icebp
stos
and
into
xlat
jbe
xlat
add
cmp
dec
push
repz
cwtl
pop
lods
cmpsl
mov
pusha
jb
inc
pop
cmc
jnp
enter
in
and
insl
xchg
pop
push
jbe
push
adc
fidivrs
outsb
jb
pop
jl
clc
adc
hlt
notb
popf
insl
out
pop
outsb
ret
insb
inc
jo
add
popf
pushf
push
xor
cld
das
sbb
adc
in
imulb
aas
mov
push
or
xchg
mov
scas
shrl
dec
daa
scas
lock
lds
sub
pop
mov
push
outsl
int3
mov
mov
mov
shll
stos
or
scas
xor
dec
pop
call
cmp
jno
or
shrl
adc
xor
aas
fisubl
xchg
addr16
out
xchg
xor
xchg
push
loope
cmpsb
loopne
jecxz
sub
das
data16
sbb
sar
mov
adc
lds
lds
dec
cmpsb
inc
shr
cwtl
sbb
jne
mov
insb
mov
in
sbb
jecxz
call
jp
enter
xchg
mov
adc
scas
bound
cmp
fdivrs
in
cmp
adc
adc
adc
scas
add
xchg
jecxz
and
loopne
pop
jle
mov
imul
or
dec
inc
cmp
gs
xchg
push
filds
pop
xor
movsb
ljmp
pop
mov
in
in
sarb
push
subl
rcrl
push
lret
xchg
jp
std
scas
pop
xchg
pop
loop
lea
aas
dec
out
dec
add
or
lock
test
fnstenv
js
fstl
xchg
dec
xchg
push
adc
andb
imul
jae
ljmp
adc
xlat
xchg
fstpt
inc
inc
sarb
leave
sbb
fldcw
mov
movsl
inc
sbb
xor
jns
mov
shll
adc
outsl
cld
sti
ret
jbe
jecxz
ss
sbb
imul
call
in
lds
fsub
shlb
ja
hlt
das
sbb
cmpsb
fisttpl
test
roll
mov
sbb
nop
roll
cltd
sbb
inc
insl
sbb
in
mov
dec
jnp
sahf
sbb
cmp
inc
cmp
sbb
push
lahf
xchg
fdivl
adcl
mov
gs
xchg
mov
je
sub
fnstsw
add
mov
aas
sbb
and
mov
loopne
xor
xor
inc
and
std
ljmp
mov
popa
ljmp
fwait
and
sbb
inc
pop
loopne
add
xor
dec
insl
loopne
test
sti
ror
ss
push
sbb
and
das
out
dec
cwtl
orl
fistpl
xor
add
add
fisttpl
add
cmp
push
je
mov
mov
sbb
loop
shr
adc
push
test
stos
jbe
adc
outsb
or
mov
mov
or
push
sbb
sub
mov
push
out
jo
fsubp
lret
sub
aaa
xor
icebp
sub
out
repnz
pop
cmpsb
scas
repz
fildll
ja
or
push
and
pop
xchg
xchg
rcll
xchg
jno
mov
add
xchg
cmp
lret
cli
in
loope
push
test
test
inc
jo
shll
lret
jecxz
gs
jecxz
cmp
je
in
push
enter
gs
xor
cmp
dec
or
sub
or
add
jb
jno
mov
test
sub
pop
sub
jbe,pt
mov
mov
jp
sti
mov
bound
xor
dec
iret
jbe
and
pop
test
test
ret
fidivrl
adc
mov
dec
adc
fdivs
jne
pop
imull
fs
mov
loopne
xor
jo
pop
mov
dec
dec
mov
mov
popf
and
js
mov
pusha
dec
loopne
cld
paddusw
xchg
dec
dec
call
adc
sbb
pop
ja
sub
insl
outsl
orl
jg
cmp
cltd
movsb
testl
aaa
loop
fcmovne
adc
xor
xor
in
movsl
addr16
jnp
or
gs
js
mov
sbb
test
fcoms
mov
pushf
sti
push
test
out
ret
xor
in
addr16
mov
imul
mov
inc
pushf
fistpll
jbe
jge
test
mulb
and
fadd
jae
mov
cld
jnp
xchg
aam
pop
push
inc
xor
movsb
mov
jnp
mov
fisubl
nop
sub
mov
mov
fdivrl
dec
mov
jl
pop
adc
xor
adc
or
arpl
xchg
mov
inc
jns
mov
test
xchg
arpl
fadds
jl
sti
jecxz
aas
out
out
nop
cld
imul
dec
jmp
scas
ret
adc
sbb
cmpsl
xor
je
xchg
jl
stos
dec
cmp
insb
cmp
mov
pop
inc
ljmp
frstor
dec
into
loop
leave
sub
test
push
sub
mov
cli
pop
jo
test
imul
dec
sbb
std
je
into
daa
mov
ja
movsl
jo
pop
imul
pop
mov
ds
daa
mov
push
pop
shll
sahf
sbb
mov
mov
andb
bound
add
cld
int3
lahf
pop
fdiv
mov
xchg
xor
dec
jmp
in
xor
dec
or
js
xchg
cmp
sbb
ds
pop
mov
add
mov
popa
ds
repz
push
fstl
push
outsb
push
cmp
dec
pop
test
push
dec
sbb
sub
int
in
sbb
nop
and
jae
jb
pop
mov
enter
pushf
test
add
shll
adc
ret
adc
fiaddl
out
stos
inc
repnz
cmc
sti
rorl
das
cld
fstp
daa
xchg
lds
add
xchg
sbb
dec
pop
sub
std
pop
jl
sbb
movsl
jmp
pushf
cwtl
dec
xchg
rcrb
fwait
inc
stos
subl
add
cmpsl
fbstp
mov
loope
fisttpll
jo
test
mov
out
xchg
lock
cmpsl
pop
ss
mov
and
push
fbld
jbe,pn
test
bound
lock
xor
dec
lock
mov
js
icebp
ds
cwtl
lcall
loope
or
pop
pop
inc
mov
pop
fmuls
xchg
adc
add
mov
cmpl
shrb
xchg
xchg
loopne
mov
sbb
sub
cmp
shll
les
fnstcw
daa
enter
add
dec
jb
ret
push
es
scas
jge
jle
loope
mov
xor
notb
clc
jge
rol
es
xor
add
push
mov
mov
ret
add
mov
stos
push
and
xor
js
mov
insl
iret
sbbl
push
xorl
sbb
movsb
shll
pop
pop
push
subb
imull
mov
js
mov
adc
cld
inc
adc
fstps
sub
cmp
xor
popa
lods
jp
push
ret
add
pushf
int
lret
ljmp
mov
xchg
cmp
shll
fiadds
cmp
mov
cmpb
xor
ud2
test
xchg
outsb
out
std
call
orl
fsub
data16
popa
test
rorl
popa
sbb
lods
dec
sub
insb
and
scas
xchg
mov
push
daa
dec
and
pushf
mov
xchg
out
pusha
mov
dec
mov
roll
fs
lret
fistpll
pop
adc
mov
dec
ds
ljmp
pop
and
jge
les
fnstenv
rcr
xchg
xor
push
mov
sbb
jae
je
mov
std
pusha
call
mov
xor
push
or
clc
out
repz
and
push
xchg
sti
mov
sub
push
push
push
push
mov
adc
xchg
inc
xor
and
fisttpll
push
popf
lds
adc
sbb
pusha
dec
cmc
popf
aaa
mov
mov
lcall
daa
pop
mov
lods
jmp
int
minps
mov
jae
fwait
sub
push
push
mov
imul
aad
cmc
dec
inc
notb
jne
adc
jl
testb
aam
dec
aaa
rcrb
dec
aad
lret
jmp
adc
mov
daa
add
ja
lret
sub
add
and
dec
mov
or
cmpsb
cld
andb
int3
scas
xchg
push
xor
or
jecxz
test
sub
add
or
jmp
lcall
ficompl
push
imul
push
sbb
pop
mov
into
ljmp
sbb
fiadds
mov
cli
jae
push
insl
push
pushf
jg
loopne
andl
out
cmp
mov
push
add
add
inc
popf
scas
loope
in
pop
icebp
xchg
les
test
pop
loope
cld
or
jge
insb
xchg
popa
mov
mov
gs
add
gs
arpl
sarb
xor
in
addr16
lret
jne
mov
xchg
sbb
dec
std
xor
add
ss
mov
imul
shr
push
adc
jmp
popa
cwtl
inc
loopne
and
mov
mov
fisttpl
pop
sti
or
test
mov
xchg
jge
lds
cmp
cmpsb
pop
in
adc
insb
cmpl
sub
cld
or
pop
push
sbb
add
fld
loop
les
cmp
movsl
mov
xorb
pop
xchg
xor
icebp
and
pop
ret
retw
sub
aad
push
and
lods
das
lods
push
mov
in
adc
je
aad
mov
in
adc
insl
mov
leave
sub
mov
cmp
sarb
mov
inc
and
dec
lret
and
aad
dec
mov
xlat
pop
push
in
fld1
pop
and
pop
loope
mov
in
inc
lret
jecxz
sahf
mov
in
sub
mov
iret
xor
add
imul
fwait
out
mov
xor
ss
inc
mov
dec
cmpsl
out
jns
insl
subb
les
or
aas
xor
cmpb
call
dec
xor
jo
fwait
adcb
out
sahf
sbb
leave
ss
daa
lods
gs
pop
push
in
aam
fwait
jle
popf
pop
inc
xchg
test
pop
stos
push
cs
xor
cmp
adc
push
cmp
cmp
xor
jp
adc
jne
les
repnz
inc
mov
or
mov
rcrb
repz
or
sbb
test
clc
das
aad
lret
add
decl
rcrl
mov
adcl
outsl
cmp
mov
jg
cmp
mov
sub
jne
inc
std
cmc
mov
insl
xchg
ret
dec
lcall
clc
dec
loope
fwait
add
movsb
jmp
enter
inc
in
sbb
rcrl
cmc
sub
nop
sti
mov
pop
jp
aaa
adcl
push
scas
movsl
stos
inc
mov
push
rorl
cli
andb
jl
cwtl
cmp
and
divb
mov
add
push
repz
push
test
int3
inc
mov
in
sub
xchg
jns
fcompl
ds
lock
mov
bound
mov
in
add
adc
cld
cmpsb
cltd
push
inc
push
daa
mov
stos
imul
jno
rcrl
inc
xor
xchg
cmp
inc
sbb
leave
xor
mov
jl
jae
neg
je
or
xor
xor
and
out
xchg
push
mov
in
jecxz
pusha
popf
add
sub
jae
or
iret
cmpsb
je
je
mov
fisubl
sbb
fmull
xor
mov
icebp
sub
fnsave
adc
movsl
pop
and
test
pop
cltd
mov
adc
loopne
ja
mov
jmp
mov
xor
pop
loopne
jnp
leave
in
pop
add
push
movsl
shlb
jbe
imul
push
loop
xchg
adc
pop
or
jb
popa
lahf
js
shrl
ret
aas
jns
inc
test
cwtl
inc
or
mov
mov
mov
inc
ret
mov
or
add
movsl
push
xor
dec
xor
mov
push
movsl
cmc
sub
js
jo
mov
es
mov
mov
adc
xlat
add
mov
xor
pusha
stos
bound
popf
push
addl
imul
into
cmpb
pop
jae
and
subl
sarb
vpaddusb
imul
jg
or
imul
adc
mov
stc
ret
jnp
cs
lret
in
push
push
xchg
fsub
sub
jns
or
adc
push
adc
mov
xchg
fcomps
pop
pop
xchg
mov
adc
int
dec
rorl
inc
fldt
int
arpl
push
jno
je
cmpsb
shlb
cli
push
cli
lret
dec
stos
in
subl
pop
dec
andb
sub
ds
mov
mov
dec
addl
inc
pmulhuw
xchg
mov
js
dec
iret
push
add
mov
lds
xchg
out
test
jne
ret
loop
mov
mulb
jge
aad
mov
push
adc
lods
movb
shl
xlat
and
or
sahf
sub
andb
pusha
push
or
test
jle
imul
pop
cmp
pop
and
xchg
int3
push
mov
dec
fbstp
lcall
gs
push
lods
bound
mov
je
dec
pop
jmp
sbb
mov
xor
mov
arpl
adc
loopne
pusha
movsb
scas
ss
add
jl
mov
jnp
push
pushfw
mul
call
push
xchg
adc
enter
in
lds
mov
loope
fmuls
mov
fimuls
push
push
bound
mul
scas
ljmp
fildll
push
aam
add
mov
push
cmp
adc
mov
xlat
pushf
pop
inc
int3
inc
xchg
or
testl
push
pop
cltd
test
sarb
adc
push
jo
sbb
repnz
and
inc
add
or
in
cwtl
scas
rorl
xor
scas
and
mov
mov
dec
xor
dec
daa
push
cmc
xchg
adc
out
sub
mov
cli
rolb
movsl
or
jo
out
push
ja
mov
repnz
mov
das
stos
in
jg
fs
in
mov
adc
mov
mov
xchg
mov
mov
adc
mov
cmp
add
mov
adc
movsl
jne
testb
in
sub
notl
push
outsb
inc
xor
mov
jbe
adc
es
or
lcall
shll
mov
or
pop
lds
in
pop
mov
mov
jb
add
pop
fdivrl
idiv
push
pushf
mov
and
push
cli
mov
mov
mov
mov
pop
dec
js
mov
enter
call
loopne
loopne
stos
inc
inc
das
pushf
repnz
lods
add
mulb
dec
or
pushf
int
and
jp
mov
mov
pop
pushl
mov
je
orb
mov
in
mov
jecxz
sahf
add
stos
lods
adc
pushf
sub
aad
stc
leave
xchg
arpl
dec
in
aaa
xlat
pop
fiaddl
ret
popa
scas
enter
popf
insl
int3
repnz
inc
js
jl
hlt
pop
xchg
shll
mov
xchg
add
ret
xor
xchg
lds
mov
sub
sbb
xchg
sahf
out
sbb
loopne
in
inc
mov
cmpb
addr16
popf
out
addb
or
into
sbb
push
pop
std
in
imul
rclb
mov
jnp
into
test
sti
insl
xor
ret
cmp
sub
rcrl
in
data16
add
insb
sbb
cmpsb
push
iret
push
insl
ds
out
loop
xchg
insl
push
jbe
pop
clc
faddl
lret
mov
scas
pop
mov
cs
add
js
or
in
cmp
sbb
pop
pop
movsl
mov
js
iret
mov
aad
mov
or
inc
push
fisttpll
popf
and
sbb
ds
loope
sahf
stos
dec
out
add
enter
and
pusha
mov
cmpl
adc
mov
movsl
push
repz
lret
out
add
mov
pop
popf
adc
sbb
jbe
movsb
insl
icebp
adc
inc
jb
push
movsb
xchg
out
sbb
push
dec
jnp
shrb
cld
les
into
push
out
imul
pop
mov
stc
xchg
int
mov
xor
push
sub
pushf
mov
pop
sbb
sub
aam
add
imul
sub
mov
stos
lea
push
push
dec
xchg
call
test
xor
les
add
shlb
push
nop
jno
dec
rol
or
mov
pop
adcb
push
aam
xor
cli
push
int
gs
test
xchg
pop
repnz
jl
jnp
cltd
mov
add
and
mov
cmp
cwtl
mov
mov
stc
imul
push
es
idivb
sahf
mov
add
scas
dec
pushf
cld
push
adc
sarl
mul
jb
pop
push
push
dec
pop
and
pop
idivb
out
mov
mov
add
stc
pop
loopne
cltd
and
sar
and
out
pop
ret
or
jns
pop
sbb
mov
mov
cmp
cmp
xor
jns
pop
mov
in
mov
pop
mov
xor
adc
add
mov
push
sbb
or
test
icebp
pop
std
loope
loope
test
jbe
jle
mov
mov
xchg
dec
adc
sub
in
inc
push
fstpl
fiadds
dec
xchg
mov
cmp
cld
shr
mov
test
pop
cs
adc
mov
test
pop
mov
xchg
sub
pop
sub
pop
sub
shlb
cmp
test
clc
aam
das
dec
pop
fistps
mov
pop
and
into
sbb
nop
sahf
daa
cltd
test
inc
lea
pop
mov
test
mov
enter
mov
aas
and
xchg
mov
cltd
cltd
les
lds
sbb
hlt
aam
mov
addl
xor
xchg
sbb
outsl
in
rclb
xchg
pop
or
test
lcall
push
jle
and
cli
or
lea
dec
pop
sbb
xor
out
inc
rol
lahf
pop
pop
fcomip
and
push
xchg
or
lods
lahf
stos
jnp
iret
movsl
in
shll
das
es
mov
cmpl
push
jle
mov
fcomps
divb
icebp
outsl
mov
fnstenv
mov
int
push
add
push
pop
insl
dec
and
add
mov
jge
xchg
xchg
add
lods
test
mov
adc
pushf
add
aas
insl
or
loopne
jbe
popf
mov
inc
pushf
fwait
test
push
xchg
sarb
sar
xchg
xchg
or
std
cmpsl
xchg
decb
push
jb
xchg
jb
push
jecxz
jg
xchg
ljmp
xchg
mov
cmp
bound
iret
dec
xchg
stc
insb
aaa
pop
cmp
cmpsb
push
dec
and
push
push
mov
rclb
rorl
or
inc
or
insb
xchg
cmpl
outsl
icebp
std
loopne
jge
andl
dec
jl
inc
xchg
and
adc
pop
das
jns
stos
cmc
fdivp
scas
loop
xor
lret
fwait
sahf
aad
int3
repz
lea
add
inc
aam
xor
popf
or
xchg
xlat
xchg
add
pop
cmp
adc
mov
mov
rorb
jecxz
rcrl
int
add
cmp
mov
jp
jb
outsb
fistl
repz
testl
inc
pop
addr16
or
mov
nop
or
xor
or
sub
test
cltd
adc
shll
jle
jp
cmp
xchg
cltd
sub
lds
jp
jl
push
and
repz
xchg
mov
out
xor
cmp
cmpl
push
popf
push
aam
in
lret
push
fnstsw
xor
push
subb
popa
mov
pop
icebp
test
sub
xchg
mov
mov
add
outsl
pushf
cmp
jae
leave
or
jle
adc
iret
push
sbb
mov
mov
fsubr
xor
arpl
loopne
enter
add
test
or
cmp
sbb
loop
jae
inc
int3
sub
pop
test
fldl
sbb
aad
bound
mov
cmc
test
jl
inc
movsl
scas
sub
or
push
push
lods
sbb
js
and
test
scas
push
xchg
cmc
and
mulb
or
pop
or
lea
xchg
dec
and
call
scas
dec
mov
xor
dec
xchg
push
or
out
cmp
mov
or
jl
or
dec
or
out
pop
test
pop
jecxz
pop
icebp
mov
loopne
mov
pop
pushl
inc
pop
pushf
lods
dec
inc
push
pop
sbb
hlt
inc
fistps
pop
int
dec
fistpll
xchg
jp
mov
daa
or
or
arpl
cmp
dec
cmp
iret
jp
sub
int3
inc
xor
sbb
mov
pop
xor
and
lcall
cli
jns
cltd
shr
fiaddl
xor
push
addr16
jmp
scas
inc
lock
add
jg,pn
pop
push
sarl
and
lcall
adc
aad
mulb
das
jnp
clc
vpaddb
test
lods
loopne
jg
jbe
icebp
mov
pmaxsw
xor
fcomps
sub
add
sbb
rorl
loopne
hlt
lods
jnp
sub
add
test
dec
icebp
ret
sbb
fwait
xor
push
aas
or
cltd
push
sti
orl
lods
ret
mov
movsb
inc
sub
pop
push
arpl
xlat
cmp
jg
mov
icebp
or
in
test
push
mov
ret
int3
push
sbb
icebp
mov
stos
cmp
lods
stc
je
hlt
gs
pop
data16
push
je
mov
repnz
push
int3
sub
xor
leave
mov
test
sbb
push
orl
cmpsb
push
xor
nop
mov
mov
ljmp
aaa
inc
negl
sub
aaa
lahf
les
pop
dec
addr16
or
incl
ret
push
jno
sbb
out
and
cmpsl
mov
fstpl
or
test
gs
mov
dec
or
add
mov
into
or
and
call
call
notb
cltd
sbb
int3
xor
cld
lock
ss
ja
ret
inc
cmp
fldcw
ror
or
pop
mov
outsl
js
call
hlt
data16
xor
pushf
adc
adc
out
inc
dec
mov
ret
dec
popa
inc
stos
pop
loope
mov
icebp
jmp
cmp
insb
repz
jmp
scas
ja
inc
out
xchg
mov
mov
loopne
or
adc
hlt
or
stc
int
sbbl
jle
push
sbb
xchg
push
aad
inc
cmp
shrb
or
dec
out
sub
fcmovb
mov
sahf
xor
lret
push
sbb
cwtl
and
jle
pop
add
inc
add
mov
stos
xchg
dec
popf
lret
xor
outsl
jl
jbe
lock
ja
leave
mov
int3
in
adc
inc
stos
jl
int3
mov
mov
mov
mov
pop
mov
or
jae
xor
dec
cwtl
or
mov
mov
adc
adcb
mov
es
jg
or
adc
or
push
in
js
jnp
sbb
push
loop
les
sahf
pop
nop
mov
adc
outsl
sbb
or
pushf
pop
mov
stc
insl
jecxz
loop
mov
mov
sbb
lods
mov
leave
in
fisubl
and
gs
call
stos
pop
leave
incb
daa
mov
sbb
insb
adc
addb
popf
js
lahf
sahf
lret
xchg
stc
test
scas
xchg
mov
scas
dec
mov
adc
fnstsw
push
std
mov
xchg
pop
loopne
and
enter
dec
push
mov
adc
push
mov
xchg
jnp
sbb
sub
jae
mov
fcmove
out
int
scas
daa
jnp
cmp
ja
test
sub
popa
pop
mov
mov
scas
pushf
mov
fwait
das
jmp
out
in
sub
push
insb
fs
outsb
jne
pop
sete
outsl
das
pop
dec
add
test
inc
and
jno
xchg
stc
jbe
push
negl
mov
fidivl
loopne
insb
pushf
sub
jnp
leave
lret
push
int3
mov
and
push
test
adc
jmp
push
dec
lret
loope,pn
adc
push
lcall
in
cmp
mov
sbb
out
cmpb
and
or
loop
inc
popf
xchg
push
bound
jns
jns
je
test
bound
xor
xchg
jmp
or
dec
int
adc
stos
shr
or
xchg
mov
mov
cltd
lahf
negb
pop
cmpsl
jle
fwait
daa
sub
cmc
push
xor
orb
pusha
mov
push
push
ret
push
and
mov
in
fbstp
adc
nop
mov
fdivp
sbb
mov
or
xchg
shrl
sub
leave
jge
mov
lods
pushf
ss
or
push
mov
cmp
mov
sub
xor
mov
hlt
mov
sahf
mov
push
shlb
jb
cmp
cli
jle
loop
inc
and
ljmp
mov
and
aas
psllq
fwait
sar
std
negl
sahf
push
mov
dec
sbb
xchg
xor
pop
jno
test
jno
mov
icebp
ss
clc
adc
push
jmp
cli
pop
jmp
sti
ja
lock
sbb
mov
cli
mov
add
data16
sub
ljmp
pusha
daa
gs
jecxz
sbbl
xchg
movsb
add
addr16
pop
ret
fnstenv
add
cmp
outsb
cmp
je
jecxz
push
inc
or
mov
jo
stos
push
shrl
lret
call
call
enter
sub
inc
js
and
lods
jb
les
in
cmc
popa
push
rorb
dec
add
mov
adc
in
aas
ret
mov
daa
push
js
inc
jno
orb
inc
ja
fdivrs
or
adc
jns
loope
xor
jge
mov
ret
ret
mov
imulb
mov
popa
cmc
mov
adc
or
popf
jmp
out
dec
push
mov
dec
push
jge
pop
push
xor
push
add
movhps
mov
pop
flds
mov
repnz
jno
notb
cld
mov
push
fists
lcall
js
bound
inc
int
rolb
dec
test
mov
and
mov
cmpsl
dec
jno
fcmovnbe
pusha
enter
imul
pop
inc
cmp
mov
hlt
bound
fdivrl
mov
lods
push
pop
aas
add
push
mov
inc
lcall
sub
data16
pop
cmpl
int3
imul
and
repnz
mov
push
mov
mov
cmc
cmp
repnz
lods
sub
xchg
fnstcw
cmpsb
sbb
shll
movsb
ja
xchg
imul
push
and
sbb
or
aas
cmp
inc
andb
sub
dec
jle
lods
pusha
mov
je
jge
les
xor
movsb
mov
mov
outsb
andl
dec
stos
loop
mov
dec
pop
dec
push
inc
aas
or
mov
std
bound
add
jne
out
jo
ja
add
adc
imul
mov
xchg
lods
xchg
dec
xchg
lods
gs
mov
lds
cmpsb
and
int
xor
inc
inc
mov
mov
or
shlb
xchg
dec
test
test
mov
xchg
sub
mov
pop
inc
stos
and
outsb
xchg
jg
iret
cs
lahf
imul
imul
int
and
inc
inc
push
repnz
out
ds
xchg
enter
sub
addr16
or
add
fstps
xchg
adc
insb
imulb
rclb
data16
fsubrs
inc
add
bound
aaa
mov
jle
xchg
mov
mov
out
mov
shlb
mov
mov
inc
add
movsb
aas
mov
daa
sub
adc
bound
inc
pop
in
shr
mov
je
adc
int3
enter
pop
scas
adc
mov
aad
mov
push
mov
daa
dec
mov
xchg
cmpsb
xor
inc
fs
mov
sub
cmpsb
fstps
fsubl
rcll
mov
jno
pop
lahf
fcoml
pop
hlt
adc
and
cwtl
jecxz
pop
push
gs
lock
pushf
pop
in
in
cmp
cmp
pop
inc
sub
bound
aam
movsl
mov
mov
mov
subl
push
lcall
cmp
push
stos
mov
fstps
jae
mov
sbb
loopne
add
fildl
leave
sbb
lcall
cmp
push
data16
aad
mov
jge
push
insb
adc
jg
push
ficoml
mov
mov
sahf
fbstp
pop
inc
scas
jbe
bound
idiv
mov
mov
or
xchg
aas
mov
sti
hlt
jl
out
int
test
icebp
stos
cmp
pop
sbb
gs
out
out
fwait
adc
jp
lods
aaa
adc
and
out
mov
mov
dec
adc
sbb
jne
stc
js
or
fwait
out
imul
push
jl
pop
add
dec
lods
mov
bound
jnp
mov
int3
popa
pop
mov
call
dec
pop
jle
ret
xor
data16
lcall
mov
adc
xor
cld
sarb
bound
inc
cmc
out
mov
popf
and
add
fidivrl
cmp
lock
sub
jae
cli
fcoms
dec
sbb
push
xlat
adc
xchg
cmp
aas
lods
or
sub
ja
xchg
inc
push
test
jge
repnz
mov
mov
jnp
ret
cmp
inc
sbb
push
xor
mov
mov
jl
std
mov
inc
aas
lock
bound
or
lods
sbb
jge
int3
dec
inc
stc
add
lahf
cmpsl
dec
push
xor
stos
add
xor
popa
and
cmp
rolb
pop
stos
push
xchg
add
stos
repnz
xchg
hlt
xor
and
cmp
pop
hlt
repnz
fldenv
sahf
sbb
and
xor
pop
and
adc
aaa
jg
cli
inc
pushf
shl
lret
dec
add
pop
loope
sti
lds
lock
stos
mov
push
or
adc
xor
sub
lahf
jge
jne
ljmp
movsb
mov
mov
sbb
decb
jno
jb
dec
lret
loope
pop
xor
or
mov
shrb
dec
xchg
fists
insb
ret
sub
xrelease
and
dec
mov
out
ret
cmp
dec
dec
pop
shll
aam
or
xorb
mov
xor
push
insl
mov
and
push
rcrb
xchg
push
call
dec
add
push
loope
push
insl
push
xchg
lcall
adc
pushf
push
jae
insb
stc
lcall
mov
jne
sub
int3
std
xchg
inc
mov
jbe
add
mov
pop
in
push
push
pop
test
out
mov
in
sti
fxch
dec
jae
into
pop
fcoml
push
mov
imul
test
and
adc
cmpsb
ret
mov
lret
pop
xor
mov
or
jne
stos
mov
add
cld
mov
mov
xchg
out
test
or
roll
jge
rcll
gs
ja
int3
repz
jns
adc
adc
xchg
lret
or
imul
and
mov
sbb
inc
outsl
inc
sbb
adcb
adc
sub
or
xor
and
sub
push
push
cli
gs
fsts
lods
push
lcall
insl
pop
inc
or
mov
xchg
xor
fisubs
ss
push
push
stc
pusha
out
stos
or
fadds
jg
mov
int
sbb
scas
inc
and
dec
loop
cs
sub
repnz
mov
int3
and
jmp
and
pop
mov
cmp
movsb
pushf
push
inc
enter
mov
or
clc
push
icebp
imul
mov
adc
and
dec
clc
and
or
adc
out
jnp
rol
push
jae
cmc
mov
xchg
dec
inc
loop
mov
jmp
popf
jns
fs
mov
out
pop
lock
dec
mov
sbb
jae
mov
outsb
sbb
fcoml
fcompl
movsl
jno
insl
cmp
ds
sbb
shrl
cmpsl
mov
lret
sahf
pushf
push
inc
pop
leave
mov
orl
sub
leavew
xor
add
mov
mov
leave
loop
outsl
mov
cmc
stos
imul
mov
sub
out
inc
fstps
push
iret
mov
cmp
or
in
pop
cmp
add
mov
nop
and
mov
mov
aam
sahf
mov
out
das
mov
push
sbb
lea
mov
arpl
inc
loope
dec
lahf
lds
add
scas
test
or
ss
orb
push
mov
or
and
adc
push
lods
popa
cmp
call
int
sub
scas
outsl
xor
or
mov
add
lock
cltd
mov
frstor
loope
mov
test
pop
test
mov
test
cmp
push
xchg
dec
dec
jmp
mov
popf
outsb
adc
jle
pop
xchg
push
lods
fs
mov
ret
xor
aaa
jnp
sub
pop
xor
ret
js
mov
inc
adc
mov
mov
jl
aad
out
mov
lea
mov
and
cld
and
adc
pop
dec
push
xchg
lock
mov
call
arpl
jo
addr16
fwait
jge
pusha
sarl
mov
xor
xchg
mov
hlt
ljmp
ds
sbb
clc
pop
mov
aaa
shrl
int
cli
nop
test
mov
jecxz
cmp
push
or
stos
out
insl
std
scas
pushf
dec
add
mov
fiadds
inc
in
test
scas
jp
mov
nop
sahf
mov
shll
cmp
test
fisttps
aaa
sbb
push
sub
or
dec
mov
xor
popf
xchg
mov
or
mov
mov
sbb
jbe
lods
mov
pop
mov
scas
shll
in
or
and
cmp
lret
in
xchg
add
movsl
pop
add
sbbl
sbb
frstor
push
pop
test
test
lret
mov
scas
aad
enter
iret
movsl
cltd
in
xor
fucomi
xchg
jno
xor
push
mov
or
sub
add
xor
sbb
push
insb
xchg
and
push
rcrl
stc
jns
xchg
mov
add
mov
sbb
dec
jb
ret
adc
push
fsubrs
ficomps
fwait
call
push
icebp
das
push
push
mov
leave
scas
dec
or
movb
mov
inc
mov
ss
xor
ja
cmp
fisttps
ficompl
fnstenv
insl
cld
movsb
xor
leave
hlt
out
jae
stos
xchg
xchg
js
jns
fsub
mov
inc
aas
push
cmp
outsl
jae
test
out
cld
or
sub
dec
loopne
rorb
push
dec
outsb
sbb
push
fnsave
or
fildll
int
xor
mov
aaa
test
and
mov
test
ret
mov
or
sahf
adc
data16
dec
popa
add
xchg
push
cld
aaa
rorb
inc
push
in
arpl
mov
stos
loopne
out
jge
mov
mov
out
testb
fcompl
movsl
aam
push
mov
out
dec
lods
mov
or
out
mov
xor
cmpsl
dec
popa
loope
pop
or
and
cmc
test
inc
cli
std
sbb
jns
sbb
mov
cwtl
stos
incb
mov
in
pop
mov
sub
fsub
movsl
test
inc
jno
push
enter
xchg
jne
lods
cmp
jl
mov
jmp
out
sbb
mov
xchg
inc
dec
or
lods
mov
js
stos
jl
lock
ja
sub
int3
xor
fwait
js
fidivl
lret
push
push
call
aam
jg
rcrl
inc
sub
mov
sbb
push
stc
push
jb
push
sub
test
stc
mov
into
das
mov
add
push
jbe
push
sbb
mov
leave
mov
and
fidivrs
mov
add
clc
add
fnstcw
idivl
xchg
in
outsb
cwtl
out
imul
jl
jae
sti
push
stos
mov
xchg
push
cmpsb
and
pop
das
les
imul
jne
inc
add
cld
mov
push
adc
imul
lcall
inc
addr16
adc
push
xor
push
and
test
mov
movsb
insl
jl
hlt
iret
cmp
inc
mov
push
fbstp
mov
xchg
jmp
movsl
pop
or
fadd
mov
dec
xchg
mov
xchg
leave
iret
xchg
ss
pusha
in
shll
sub
push
stos
mov
ret
sub
icebp
loope
pusha
dec
mov
inc
iret
int
loop
xchg
jmp
or
sub
cmpb
jno
rorl
jle
hlt
inc
dec
mov
out
pop
mov
or
loope
cmc
rol
lods
int3
pop
sub
mov
jbe
pop
mov
cmp
popf
push
mov
das
subl
shlb
dec
clc
fstpl
mov
jb
std
pop
push
and
and
stc
int
sub
mov
es
xor
mov
sub
adc
pop
lahf
dec
aam
mov
fistpl
ja
sbb
incl
sbbl
fildl
cltd
inc
push
or
lret
sub
xchg
inc
movsl
subl
outsb
jns
jb
out
jge
inc
mov
push
xor
mov
sahf
nop
roll
lahf
xchg
push
inc
push
mov
in
mov
xchg
jg
inc
add
scas
cmp
xor
popf
push
pop
push
jmp
insl
into
out
and
or
add
or
leave
call
xchg
sbb
xchg
sub
jge
jbe
in
adc
xlat
arpl
cld
push
push
dec
ss
push
daa
add
cmp
jbe
int3
aas
jno
and
cwtl
call
in
je
shll
ds
bound
inc
or
clc
xlat
in
xchg
cmp
adc
fdivs
or
les
cli
push
dec
in
mov
xchg
inc
cmp
aad
shll
and
add
jne
push
cli
je
mov
les
test
adc
gs
adc
into
push
dec
das
bound
mov
insb
scas
imulb
or
pop
jmp
iret
xchg
sub
xor
cmp
arpl
xchg
shl
aaa
jbe
jecxz
cmp
jmp
mov
inc
leave
daa
sbb
popa
mov
imul
mov
mov
push
roll
sbb
fmulp
and
push
lea
xchg
and
push
ss
push
sbbb
dec
call
movsl
or
pop
lods
shll
jg
xor
push
dec
xchg
xchg
mov
cmp
insb
clc
popa
sub
pop
mov
adc
dec
ficoms
adc
ds
lods
out
mov
fdivs
lock
mov
mov
lahf
pusha
add
jge
dec
popf
dec
add
pop
lock
frstor
jnp
mov
inc
adc
sub
cmp
mov
adc
leave
xor
cld
loope
aas
fsubrl
xorl
out
mov
sbb
jle
jle
cmc
mov
outsb
mov
xchg
inc
in
popf
push
loope
mov
mov
fcmovb
sbb
mov
dec
pop
movsb
int3
sbb
leave
mov
adc
das
lods
xor
fsubrp
or
nop
mov
cmp
shld
je
xchg
sbb
jnp
leave
pop
imul
icebp
jnp
sbb
adcl
or
cwtl
aad
cld
sub
lahf
cld
stos
stos
out
add
mov
test
pop
dec
dec
test
test
xor
leave
dec
sub
outsb
mov
mov
pop
js
outsb
cmp
outsl
pop
dec
fsubrs
mov
cmp
shrl
aaa
sbbl
xor
jne
insb
jp
jmp
mov
rclb
andb
and
scas
jge
loope
push
sahf
dec
aad
int3
popf
rcl
sbb
cs
movsl
mov
jecxz
and
movsb
mov
pcmpeqd
out
pop
mov
xchg
icebp
jl
add
dec
pop
fistps
out
xor
sub
divb
mov
sbb
fs
mov
mov
push
jp
and
xchg
push
xor
es
sbb
loop
in
les
movsl
enter
test
mov
imul
shl
mov
repnz
insb
jg
dec
sbb
fdivr
fbld
popa
cmp
out
add
mov
dec
pusha
and
outsl
mov
fistpl
test
mov
sbb
in
hlt
dec
lds
mov
imul
es
stos
test
int3
int3
repz
sub
add
mov
or
arpl
cmpsb
push
and
aam
icebp
lcall
cmp
out
mov
cmp
mov
cmp
sub
lds
lret
adc
push
ja
rorl
shlb
sbb
in
jle
hlt
inc
insb
fwait
adc
push
into
or
inc
sbb
ja
int3
fwait
xchg
dec
gs
sbb
lds
lahf
in
ficoml
ljmp
inc
ljmp
data16
sub
inc
push
rclb
push
pop
and
shlb
lcall
push
push
sbb
adc
gs
and
movsl
sbb
lcall
sar
gs
sbb
mov
les
push
pminub
je
xlat
jne
js
dec
cltd
rclb
mov
insl
loopne
mov
rorl
jb
insl
push
test
lods
les
jle
js
or
jbe
jae
jne
pop
jle
and
sub
mov
xor
addb
push
or
mov
lds
clc
lods
aas
adc
bound
dec
pop
and
ret
push
cli
aas
lcall
add
outsl
jns,pn
insb
sbb
cmp
inc
push
in
sub
jl
sbb
js
jns
cli
fstpl
jnp
xorb
psubsb
mov
roll
leave
mov
shll
and
or
bound
jb
cmc
mov
inc
push
xchg
arpl
push
jns
xchg
testl
mov
mov
mov
sbb
ja
stos
ret
in
jo
xchg
pop
in
adc
mov
es
lahf
mov
lret
leave
addb
iret
int3
dec
jg
les
push
mov
into
mov
jp
mov
inc
adc
sbb
shll
notl
dec
dec
ljmp
fs
push
sbb
lcall
dec
test
mov
aam
repnz
stos
and
out
rcll
ja
dec
nop
xchg
push
xor
les
lea
xor
loope
sub
stc
jecxz
adc
mov
mov
mov
test
jmp
pop
add
push
test
insb
xor
or
dec
jmp
dec
mov
sbb
lods
iret
xlat
gs
sub
cmp
es
sbb
movsl
movsl
stos
mov
xchg
cmp
mov
push
rcrb
or
jnp
test
shrb
dec
orb
adc
jl
and
jge
or
and
fwait
rolb
dec
arpl
inc
and
jns
mov
ret
push
mov
cltd
xchg
lods
popf
roll
jecxz
inc
mov
xlat
arpl
pop
mov
cli
aad
loopne
jno
imul
mov
orl
mov
push
push
adc
insb
push
inc
pop
addr16
xchg
mov
iret
mov
push
adc
jbe
stos
pusha
loop
cmc
mov
cld
les
xchg
adc
ret
scas
cmp
cmpsb
cld
jmp
mov
popa
push
imul
xchg
mov
shrl
or
xchg
loop
dec
fsubrl
push
cmpsb
adc
cld
pop
pop
dec
outsl
in
add
aaa
outsl
jae
dec
lods
std
loope
mull
push
and
and
rolb
mov
add
jne
xor
push
enter
sub
ja
fldt
sbb
flds
es
mov
loop
adc
xchg
adc
in
xchg
ds
adc
cltd
iret
jl
ss
div
xor
mov
pop
mov
int
mov
pop
mov
inc
sub
data16
das
movsl
int
mov
scas
sbb
insb
addr16
shll
or
jnp
pop
inc
push
jbe
push
enter
or
sub
dec
and
iret
in
das
cli
test
pop
or
rcrb
popf
out
movsb
jo
cmp
sahf
mov
jl
xchg
sub
pop
jbe
es
adc
cmp
sbb
fs
xchg
xchg
mov
imul
xchg
push
dec
xor
and
dec
insl
repnz
fwait
or
loop
sahf
adc
int
dec
ljmp
dec
out
stos
inc
shll
dec
andb
cmpsl
aas
adc
hlt
or
ret
push
pavgw
addl
push
jb
xlat
iret
xchg
fisubrl
dec
call
add
mov
pop
xchg
inc
cmpsl
inc
xorl
daa
and
cmc
out
add
lcall
mov
imul
mov
insl
gs
add
dec
adc
stos
ret
aaa
mul
push
into
cmp
call
cmpsl
daa
pop
push
scas
jg
in
pop
xor
out
cmpsl
es
in
pop
inc
ds
shll
pop
xor
hlt
rorb
mov
dec
aad
pop
adc
ret
lds
push
push
subb
lds
fnsave
inc
loope
popl
in
loop
cmp
aam
mov
mov
mov
xlat
or
sbbb
mov
mov
adc
sub
std
pmulhw
lods
lds
push
out
mov
adc
cli
hlt
jo
lods
shlb
cmp
mov
xchg
inc
or
push
je
mov
dec
cwtl
adc
mov
andb
test
imul
ja
sub
lock
inc
cltd
and
fsubl
in
or
imul
sbb
dec
push
xlat
and
iret
mov
popf
sysexit
movsl
test
adc
push
aaa
dec
push
jo
add
dec
xchg
mov
mov
ret
fbld
sub
xchg
pop
insl
add
xor
mov
add
sub
mov
jp
pushf
decl
scas
pop
cltd
stos
push
ds
or
inc
icebp
adc
push
sub
rol
xor
ja
outsb
stos
pop
outsl
hlt
inc
insb
hlt
loopne
inc
js
fs
push
imul
cltd
mov
xor
pop
icebp
bound
and
xchg
xchg
mov
cmc
xor
test
cmpsl
andps
rcrl
out
paddusb
jo
imul
add
repz
xchg
jmp
push
push
jl
sub
aas
push
call
inc
cwtl
cmc
inc
mov
cmp
fmuls
push
sub
inc
push
inc
inc
sub
add
jg
and
std
stos
cmp
sub
rclb
pop
stos
mov
mov
mov
dec
ds
mov
push
lock
mov
cld
aam
pop
or
push
dec
add
lods
dec
aas
push
frstpm(287
insl
xchg
mov
xchg
sbb
sbb
xor
and
xchg
bound
das
jae
jnp
push
mov
outsl
or
jl
jmp
pop
bts
adc
or
cltd
in
cld
push
sub
dec
jp
stos
popl
pushf
call
sub
sahf
mov
leave
shl
in
or
pop
inc
mov
or
xlat
dec
and
adc
push
lret
ljmp
jbe
cmp
outsb
sub
ja
ffreep
mov
nop
imul
sbb
sbb
out
push
adc
push
add
ret
loop
ja
mov
scas
sbb
cld
pop
outsb
xchg
add
mov
cs
cltd
fdivs
nop
push
xchg
mov
inc
out
cmp
rcrl
jg,pn
aad
xlat
dec
push
ds
sbb
mov
push
adc
sti
push
or
bound
adc
insb
mov
dec
xlat
out
mov
lret
subl
std
cltd
call
inc
pop
mov
arpl
jmp
pop
cmp
movsb
cmp
out
mov
std
or
jns
add
push
push
test
jae
js
xchg
test
in
pop
push
aam
or
sbb
dec
fwait
pop
push
push
push
push
imul
cmpsb
pop
lahf
jmp
inc
pop
mov
mov
pop
jg
imul
xchg
or
enter
rolb
xor
fs
pop
xchg
bnd
testl
gs
imul
adc
add
mov
xchg
inc
ret
xor
es
movsl
adc
mov
inc
jle
enter
add
adc
sbb
lds
jecxz
jp
mov
push
test
or
daa
ret
std
loopne
test
imul
fdivl
scas
sbb
cmp
jae
cmp
fadds
in
sbbl
mov
shrb
mov
xchg
jge
addr16
ss
test
stc
cld
mov
mov
rolb
mov
sti
out
sbb
and
jp
mov
es
jle
ffree
lods
test
mov
add
inc
out
fs
cwtl
cwtl
add
jb
xchg
shl
mov
sbb
push
inc
cmc
pop
add
test
mov
xor
inc
out
adc
push
call
ret
push
out
sub
xchg
loopne
ss
iret
iret
cmpb
and
add
fwait
mov
add
xchg
mov
or
lcall
mov
xor
mov
stos
cmpsb
into
in
call
jp
or
adc
out
xchg
movsb
xor
leave
loop
adc
fwait
and
xor
sbb
pusha
add
call
dec
enter
lahf
cmp
or
test
mov
push
test
cmp
pop
mov
inc
js
hlt
cmp
xchg
jne
pop
lcall
iret
fwait
push
cmpsb
cmpl
sbb
rorb
popf
ja
sahf
sahf
sub
lds
das
movl
je
push
xchg
ja
pop
adc
fdivs
cltd
inc
cmp
xor
inc
mov
push
push
sti
les
vcvtpd2dq
mov
les
ret
js
jo
fstpl
sbb
lods
xor
inc
addr16
aad
into
pop
push
movsb
aaa
adc
push
push
enter
hlt
lret
movsl
dec
ljmp
dec
jne
jno
orb
ljmp
xor
xor
daa
rolb
bound
ror
mov
xor
adc
lods
ljmp
int
pop
xchg
stos
into
mulb
hlt
jno
pop
xchg
fcoml
daa
mov
fucomi
xchg
mov
repz
pop
sbb
loop
jne
rcrl
fisttpll
sahf
mov
push
fbld
aaa
ret
fadds
xor
xchg
outsb
add
mov
test
inc
inc
lods
sbb
scas
push
loop
cmp
push
loope
loop
xor
mov
jle
xchg
test
push
xor
and
sub
popf
int
sbb
fstpt
std
push
je
movb
xchg
call
ljmp
mov
negl
sub
xchg
lret
jae
push
scas
int
sti
cmp
mov
int3
repz
xor
or
cs
push
out
fsubl
inc
lahf
inc
pop
ficoms
push
fdivrs
cmp
cmc
adc
hlt
lods
leave
inc
xchg
outsb
test
jo
pop
lods
pop
imul
inc
inc
sbb
lcall
enter
xor
js
xchg
jge
mov
outsb
incl
les
and
in
xor
in
ljmp
filds
mov
push
xlat
jmp
mov
cld
mov
enter
aaa
sahf
jns
pop
mov
mov
lahf
fadds
hlt
xchg
sbb
sub
add
cmp
add
mov
push
lahf
call
mov
fiadds
cmc
daa
arpl
decl
and
push
in
in
filds
out
repz
jno
and
fdivrl
push
movsb
fistps
dec
pop
cmp
fstpt
push
pop
mov
fistpll
sbbl
mov
test
jl
push
inc
jno
sbb
out
inc
xchg
shl
jbe
push
pop
std
mov
xor
repz
push
stos
aas
sbb
pop
sbb
and
sbb
int
add
dec
ret
mov
mov
sub
scas
repnz
dec
out
bound
mov
mov
push
jmp
mov
add
mov
adc
cmc
xchg
adc
fnstsw
sarl
in
aad
out
cli
into
popf
xchg
call
pop
and
or
shl
mov
mov
fstpl
add
les
jecxz
stos
pop
aas
or
andl
jo
imul
fisttps
adc
cs
adc
push
pop
push
in
fcoml
mov
dec
add
xor
fwait
inc
rcr
into
fldl
addb
cmpsl
int
mov
inc
daa
jp
test
cmp
pop
outsb
inc
loope
inc
cmpsl
push
dec
xchg
pop
sbb
lds
addr16
data16
inc
fcmovne
pop
mov
dec
es
into
loopne
cld
xchg
lods
flds
pop
int
pop
cli
mov
xchg
sti
sarl
xchg
inc
sub
lcall
pop
push
lods
push
or
sbb
lcall
xor
xchg
das
pop
or
jae
lock
add
adc
or
ja
sub
mov
fbld
clc
or
cmp
inc
jae
pop
add
mov
mov
insl
stos
fsubl
sbb
xor
mov
movsb
into
or
dec
cmpsl
lods
cmp
inc
gs
fwait
cmp
jne
sub
jecxz
pop
xchg
pop
fists
adc
mulb
dec
sbb
or
push
lods
xchg
outsl
lock
test
push
jmp
test
subb
scas
jno
cmpsb
add
cld
push
jmp
sub
pop
pushf
roll
fsts
lods
test
mov
xchg
and
int
sub
xor
loopne
insb
push
insl
inc
fiaddl
movsl
push
std
xor
lods
sbb
dec
mov
int
xlat
pop
aam
pop
and
insl
aaa
xchg
cld
push
push
fs
xchg
push
mov
dec
das
repz
dec
and
inc
ret
push
push
test
sub
fbstp
mov
loopne
mov
andb
push
sti
movsb
mov
push
push
sbb
shrb
popa
es
dec
sti
sbb
icebp
pop
jmp
xchg
loope
sub
mov
cmpsl
pop
in
pop
sbb
inc
jo
dec
xor
lahf
roll
mov
and
pop
push
les
dec
pop
stos
mov
pop
xorb
push
pop
aam
cld
rorl
inc
in
sbb
in
sub
and
mov
aam
sarl
xchg
ja
ljmp
dec
loope
xchg
or
push
jno
iret
scas
cmp
pop
stos
gs
popa
mov
testl
loop
pushf
inc
call
pop
ret
lods
dec
aam
push
inc
xor
or
xchg
les
aaa
lods
or
out
add
mov
jle
mov
sbb
xchg
fcmovnbe
jmp
das
xchg
test
icebp
fwait
push
out
cmp
scas
jo
enter
and
pop
dec
adc
sbb
xchg
jle
neg
mov
xchg
pop
fprem
test
imul
loop
call
pop
dec
loop
sbb
jmp
jbe
movsl
loope
int3
inc
pop
mov
lcall
sbb
sub
pop
scas
dec
insl
xchg
jno
push
and
xchg
ja
movsl
dec
lods
add
mov
cwtl
lods
mov
shlb
add
xor
stc
dec
inc
mov
test
xchg
and
add
mov
bswap
push
fst
fadd
xchg
pop
insb
xchg
inc
ds
cmp
enter
adc
movsb
sub
push
sbb
and
je
data16
orl
idivl
or
outsb
scas
stc
out
adc
loop
cmpsl
sahf
and
lahf
in
push
cmp
mov
jbe
or
inc
imul
or
divl
mov
add
imul
sub
mov
in
call
push
xor
ss
xor
xor
insb
mov
push
clc
push
push
jmp
out
or
add
fucomip
stos
andl
push
aad
jae
push
mov
or
ret
or
inc
inc
fs
fbld
popa
lock
addr16
push
mov
notl
jmp
rcll
loope
in
or
xchg
ss
fldt
adc
jmp
dec
incb
stos
scas
mov
nop
xchg
cld
shrb
mov
jg
scas
fdivl
sub
enter
xchg
mov
pop
pop
xchg
push
pusha
mov
stc
ficomps
or
xor
push
insl
and
adc
inc
xchg
sub
jg
es
aaa
or
mov
lcall
sbb
fildl
test
dec
xchg
push
inc
pop
lds
push
cli
or
jns
jbe
rcrl
rcll
in
cmp
movsb
out
icebp
push
lds
lock
out
sub
mov
cwtl
clts
out
inc
inc
sub
popl
or
repz
mov
xchg
loope
cmp
gs
in
lahf
mov
in
sbb
outsb
addr16
arpl
mov
ret
mov
jb
mov
dec
testb
lods
inc
xchg
in
dec
lret
mov
lahf
mov
mov
call
jle
subl
add
repnz
push
dec
mov
bound
int
dec
and
add
fs
or
rcrl
fwait
adc
pop
shrl
in
push
xlat
cld
inc
shll
add
push
popf
imul
mov
insl
ljmp
lret
ljmp
adc
jno
xor
int3
dec
ffreep
jbe
aas
lcall
inc
pop
movsb
sbb
mov
pusha
ret
push
fstp
daa
mov
push
loop
inc
es
push
cwtl
adcb
adc
aas
pop
pop
test
dec
mov
and
pop
cmp
int
adc
add
jb
fistl
xlat
std
shufps
imul
inc
jg
push
movsb
mov
filds
nop
lahf
xor
jmp
and
pop
sti
fisttpl
in
rcll
das
mov
push
and
lods
jb
mov
jae
mov
jle
add
mov
add
add
stos
cmc
sbb
adc
test
cmp
and
adc
add
mov
aam
pop
push
idiv
jns
lods
dec
sub
cmc
iret
sub
loope
xchg
adc
leave
pop
test
xor
sti
add
test
call
icebp
add
or
into
adc
adc
aam
xchg
shrl
adc
rcll
bound
jnp
imulb
fmuls
jb
das
xor
xor
ret
or
sub
nop
cmpb
in
xrelease
add
add
mov
push
insl
or
add
add
jo
jle
les
push
or
push
xchg
in
je
and
orl
lock
es
in
mov
inc
hlt
repnz
inc
xchg
push
xchg
in
mov
adc
dec
or
jnp
jno
push
pushf
in
test
mov
pop
into
xchg
je
pushl
xchg
or
sbb
aam
bnd
push
adc
and
push
sub
jns
repnz
inc
rcl
cmp
mov
dec
mov
sbb
push
out
cmp
jo
mov
movsb
jmp
fisubl
sahf
sbbl
sub
and
lcall
addr16
loopne
jo
int
and
cmpsl
pop
aaa
fcmovne
cmovno
int3
sub
in
cwtl
daa
mov
shrl
xor
sbb
fidivs
mov
shr
jle
sub
mov
loopne
adc
push
dec
jbe
cmc
insl
push
fidivrs
dec
xchg
decb
xor
fsubl
int3
fnstenv
pop
leave
ret
sbb
addr16
test
push
imul
mov
into
sbb
inc
lahf
mov
sbb
jle
int3
es
nop
mov
shrb
mov
xor
mov
jno
inc
pushf
sbb
out
clc
es
in
push
test
lcall
mov
push
mov
sub
int3
lods
inc
add
test
mov
and
mov
loope
inc
cli
pushw
add
out
shll
inc
iret
inc
decl
stos
loope
dec
shl
jns
cmpsl
pop
mov
adc
ss
stos
adc
lds
jg
push
sub
aaa
mov
push
pusha
repz
jmp
jg
aam
les
arpl
inc
or
mov
xor
mov
ret
pop
in
insb
mov
pop
pop
imul
lods
ret
out
or
mov
aam
add
incl
outsl
fistl
sub
jmp
xor
iret
in
inc
fldt
sbb
fstpl
mov
mov
cmp
adc
and
mov
mov
inc
aaa
push
popf
mov
jae
mov
sub
push
jbe
scas
cmp
js
leave
xor
and
push
sbb
iret
rcl
jmp
pop
sbb
push
jl
stos
addr16
lods
pop
call
mov
jno
or
inc
scas
leave
push
sub
mov
data16
jno
inc
pushf
dec
adc
push
shll
aas
out
leave
xlat
daa
xchg
mov
lahf
mov
sub
dec
cmp
cmc
mov
inc
pop
pop
outsl
and
adc
pop
jecxz
dec
mov
jb
push
cmp
stos
push
or
jmp
cmc
jns
sub
mov
iret
push
loope
sub
add
mov
pop
fcmovnb
dec
and
insw
cmp
jmp
push
sti
xchg
das
pop
fidivrs
es
cltd
in
mov
and
iret
adc
mov
inc
lcall
jno
pop
enter
test
lods
sbb
push
cwtl
inc
xchg
popf
add
mov
rcrl
sti
bound
popa
pop
loope
or
cmp
cmp
loop
inc
inc
lods
mov
mov
aas
cltd
cli
dec
push
es
pop
jge
xor
stos
mov
push
xchg
jo
fmull
adc
dec
subb
ret
pop
arpl
mov
test
pop
add
and
bound
insb
insb
mov
and
mov
xor
xchg
repz
sbb
mov
ret
lahf
xchg
inc
mov
fs
loop
mov
push
decl
in
mov
mov
lcall
in
test
mov
imul
pop
vmovmskps
roll
lahf
adc
lahf
xor
and
lret
sub
pop
pusha
ljmp
std
mov
jbe
dec
sbb
out
aam
test
imul
test
adc
ljmp
imul
test
andl
push
fimuls
mov
jl
xor
lret
in
xchg
repz
add
icebp
sahf
in
or
imul
add
lock
cli
shll
es
stc
jmp
lcall
xor
mov
push
or
and
cmp
fs
or
loop
clc
xor
lcall
add
xor
scas
mov
adc
mov
ret
imul
sub
jmp
push
int
jns
popf
cmp
pop
and
sbb
mov
cmp
in
das
int
pushf
mov
stos
sarl
mov
mov
call
push
dec
inc
ret
je
jnp
pop
xchg
mov
fnsave
scas
push
push
sub
in
repnz
inc
stc
inc
sti
shr
arpl
xorb
nop
pop
call
dec
adc
not
inc
cwtl
push
in
iret
dec
into
jp
pop
inc
insb
popf
xchg
fmuls
inc
dec
popf
push
mov
mov
or
mov
jbe
push
pop
cmc
in
pop
fisttpl
pop
ljmp
fcmovb
sub
cmpsb
mov
cmpb
jecxz
adc
pop
sub
sti
or
les
mov
mov
rclb
hlt
cmpsb
aaa
mov
ds
push
jno
mov
dec
sbb
push
xchg
cld
arpl
lds
loopne
xor
push
pusha
cltd
sbb
shrl
imul
sbb
mov
push
in
xchg
inc
sub
pop
or
pop
aas
cmp
scas
inc
rcl
xchg
das
sub
out
fcomps
aad
mov
hlt
and
cltd
jnp
push
mov
jne
repz
cmpsb
lock
inc
mov
cmp
fcoml
jle
adc
cmp
xchg
nop
push
push
or
into
sub
ret
cmp
aas
push
xor
lds
dec
scas
lods
pop
push
lar
lret
aas
xor
fs
sub
push
ret
jecxz
incb
mov
nop
shl
inc
pop
dec
add
inc
xchg
adc
pop
or
or
add
repz
or
in
xchg
mov
xor
fs
test
hlt
cmp
das
xchg
nop
or
add
add
inc
je
rolb
inc
fldt
sub
jae
cmc
mov
inc
push
mov
dec
inc
cli
sub
push
jl
cwtl
sub
jmp
in
loope
xlat
bswap
cwtl
fiaddl
js
dec
push
adcb
mov
adc
ds
lret
cmp
dec
sub
repnz
dec
dec
rcrb
incb
hlt
adc
outsb
or
xor
push
fisttpl
pop
loope
jg
sbb
lcall
push
jo
mov
fildl
or
pop
mov
call
push
jo
out
ret
bound
iret
mov
mov
cmpsl
sbb
aad
popa
or
mov
xor
test
pop
jae
lret
mov
adc
push
mov
popa
imulb
frstor
push
fdivrp
ds
inc
inc
push
ds
add
outsb
loop
push
mov
jbe
or
jne
mov
into
add
mov
cmp
and
repnz
xchg
push
sub
pop
fisubs
fmuls
movsl
adc
xchg
xor
pusha
in
fdivl
inc
mov
mov
pop
or
push
push
mov
rorl
dec
fistpl
mov
mov
stos
and
dec
pop
enter
cmpsl
int
cli
sub
adc
lcall
rcrl
xor
add
test
hlt
sbb
sbb
das
xchg
xor
shl
mov
das
ret
cmpsl
das
mov
stos
pop
dec
push
sbb
xchg
rclb
inc
mov
sbb
nop
ror
xor
in
in
jbe
mov
lea
mov
mov
rorl
test
sbb
push
ret
cmpsb
dec
add
addr16
ds
stos
aad
push
jne
dec
jo
movsl
ds
mov
mov
xor
mov
lcall
stos
loopne
inc
test
inc
inc
sub
out
jle
cmc
cs
mov
mov
and
xor
sbb
std
mov
in
jle
fldt
mov
les
int
cwtl
add
or
roll
lret
in
and
adc
mov
xlat
cmpsb
fsubl
movsb
inc
repnz
mov
addl
mov
mov
xchg
into
hlt
sbb
imul
jg
lret
sbb
cmpsb
rcr
idivl
xchg
jns
dec
inc
outsb
sbb
push
adc
nop
add
cmp
insb
lahf
aam
push
mov
mov
or
fstps
test
loop
outsl
inc
addr16
or
lods
mov
out
bnd
movsl
jle
rcr
outsl
adc
mov
mov
add
jge
push
pop
icebp
mov
shlb
adc
ss
and
xlat
mov
pop
cmp
xlat
or
loop
mov
jp
js
jle
jne
adc
xorb
sub
sbb
lods
xchg
inc
ljmp
jg
sbb
sbb
push
in
cmp
sbbl
gs
dec
sub
inc
add
loop
mov
or
push
shll
jne
pop
leave
jecxz
hlt
mov
incb
pushf
jl
pop
jl
xchg
adc
mov
call
nop
mov
cmp
sar
aas
adc
sub
sub
inc
dec
jge
cltd
xchg
stos
mov
and
xor
fsts
out
sub
loopne
cmp
testl
into
sbbl
loop
inc
lock
ror
inc
sub
fsub
or
jb
push
xchg
inc
lea
movq
lret
lcall
addl
dec
inc
or
mov
clc
sbb
sbb
aam
push
inc
sbb
jge
ss
lea
mov
loop
xchg
int
mov
mov
je
popf
mov
mov
sbb
daa
outsb
out
jp
cmp
jle
sub
xor
adcl
mov
sahf
imulb
les
sbb
cltd
cmpsb
sti
xor
cmpsl
lea
add
stc
nop
jns
lcall
xor
in
jecxz
cltd
jg
adc
icebp
dec
call
fstpt
test
add
sub
jnp
insl
adc
imul
les
popf
or
dec
mov
inc
je
sbb
lcall
dec
sbb
inc
fistl
cs
xor
in
mov
or
aam
or
enter
data16
dec
xchg
jle
rdmsr
mov
mov
adc
and
xor
in
push
jae
mov
adc
out
mov
inc
and
pushf
mov
dec
sbb
mov
shrb
mov
cmp
pop
outsl
jo
push
movsb
xchg
inc
dec
xor
call
cwtl
and
cmpsl
and
jae
jno
push
push
sbb
les
mov
cmp
leave
mov
sub
cmp
addl
gs
ss
out
outsl
mov
in
sbb
jg
das
jns
das
das
pop
sbb
stos
xchg
cld
jle
cmpsb
out
cld
push
xchg
push
jg
hlt
stos
pop
icebp
lods
int
aam
in
cli
mov
cmp
mov
adc
mov
xchg
push
test
mov
mov
xor
out
fcoms
mull
sub
sbb
or
push
arpl
mov
divb
sbb
cld
inc
mov
idivb
sbb
mov
pop
loopne
bound
cmp
dec
mull
pop
into
ss
sub
pop
inc
cmp
movsb
test
mov
fwait
or
push
pop
mov
test
insb
push
jo
cld
jo
iret
mov
sbb
or
sarb
mov
orb
pop
pop
xor
fistpl
sbb
cwtl
fstpt
pop
jmp
mov
imul
inc
aas
fisttpll
subl
jp
pop
adc
repnz
sti
sbb
and
es
ljmp
cmpsb
out
inc
lods
adc
sbbl
fs
lret
inc
int3
rcrl
cmp
inc
cmp
movb
bound
out
lret
shr
mov
or
push
jo
lcall
les
adc
daa
mov
mov
mov
imul
jp
and
loope
xor
inc
movsb
lahf
pop
pop
mov
xchg
push
xor
pop
dec
scas
dec
pop
test
clc
push
jg
neg
mov
aad
cltd
pop
jge
lds
mov
jo
push
mov
jmp
mov
inc
mov
cld
jmp
mov
push
ds
daa
imul
xor
pop
adc
loope
pop
cwtl
pop
rorl
outsb
cld
stc
sub
aaa
mov
xchg
mov
icebp
out
shl
mov
jne
mov
adc
inc
scas
cmp
ret
xchg
cmpsb
insl
lret
push
inc
sub
jmp
popf
mov
adc
adcl
jmp
int
pop
cmp
scas
lods
and
xor
cld
mov
jecxz
mov
inc
xor
stos
mov
out
call
jbe
xchg
sub
cmpsl
gs
mov
xor
xchg
push
jno
ja
adc
mov
scas
out
mov
adc
mov
stos
bound
dec
ror
and
adc
cltd
mov
out
in
add
ret
mov
pop
cmp
mov
xor
xchg
pop
pop
jle
loop
lret
adc
rorl
sub
insb
je
cmpsl
add
add
cltd
xchg
push
movsb
pop
jns
mov
xchg
icebp
push
sti
mov
dec
mov
sub
xchg
stc
fs
push
sti
fnstenv
mov
sub
es
add
xor
dec
pop
pop
add
int3
cli
lock
and
loopne
insb
lcall
gs
push
inc
es
sub
mov
lods
xchg
call
test
mov
adc
sahf
push
aam
xchg
shlb
dec
fidivs
aad
jno
adc
sarb
loopne
pop
sub
lret
pop
jmp
fbstp
dec
mov
pusha
push
rclb
js
push
popf
xor
aaa
movsb
lock
aam
push
push
nop
push
popf
aas
add
dec
mov
jne
inc
adc
jbe
daa
sbb
xorb
in
enter
int
sub
dec
test
test
mov
iret
ficompl
add
mov
adcl
sbb
cpuid
mov
lahf
push
pop
mov
imul
jle
call
ss
in
xchg
sub
pop
addr16
das
shl
xor
daa
pop
xor
or
fs
jbe
fdiv
cmpsb
lods
or
mov
push
sbb
sbb
xor
jae
mov
cmp
shlb
xor
push
inc
dec
jne
sub
sub
mov
push
xlat
loopne
sbb
shll
pushf
xchg
out
mov
shrb
sub
inc
mov
fsave
cmpsl
lahf
cmp
jl
pusha
push
ret
add
xor
adc
fcmovnb
int3
jno
inc
push
dec
jge
and
mov
or
ja
hlt
adc
stos
xor
jbe
lock
fisubrl
dec
cmp
sbb
popf
ret
loop
xor
xor
mov
mov
jg
jbe
or
jecxz
popf
add
dec
das
add
int3
jg
fsubrl
filds
mov
jb
insl
bound
mov
adc
xor
jle
mov
pop
dec
push
mov
xchg
movsb
cmpsb
popf
pop
les
cmp
fidivs
outsl
scas
jge
inc
lcall
loop
pop
inc
or
push
mov
or
xchg
dec
add
sti
jg
jbe
and
inc
fnstsw
cwtl
fcmovb
daa
push
pop
cmp
mov
jbe
aaa
lcall
cli
sahf
pop
mov
sbb
cwtl
inc
imul
out
out
xchg
outsl
add
add
jbe
cmc
xchg
icebp
das
push
arpl
adc
lret
call
xorb
xchg
aaa
push
cmp
jb
pop
mov
iret
gs
jnp
jns
sbb
cmp
push
sub
xor
xlat
jbe
test
lea
mov
sti
out
pop
cmp
cmp
mov
mov
addr16
jno
pop
xchg
shrl
imul
scas
lcall
fcmovnbe
int3
int3
enter
mov
xor
sbb
std
in
cmpsb
ljmp
adc
lods
pop
mov
mov
push
pop
pop
cwtl
clc
push
lds
dec
or
cmpsl
fmul
mov
add
pushf
inc
call
cmpsl
ret
xchg
jns
xchg
test
imul
jp
pop
xor
test
jp
cmc
xchg
les
sarb
cmpsl
out
jns
movsl
mov
hlt
mov
je
xchg
je
add
adc
mov
inc
jg
mov
in
movsl
adc
cmp
hlt
sbb
in
sub
pop
es
ja
fucomi
cs
xor
push
inc
xor
pop
data16
clc
sub
and
cs
cmc
out
not
scas
insb
aaa
xchg
lea
jecxz
jae
xchg
push
inc
jp
xchg
aaa
sub
dec
dec
fs
js
push
popa
in
rolb
shlb
adcl
bound
or
mov
imull
in
mov
lds
xchg
add
jmp
add
pop
into
xchg
shr
int
push
sub
sub
mov
xchg
xor
pop
call
loop
xchg
fidivl
test
mov
or
mov
stos
pop
mov
lods
aas
mov
sub
ja
add
scas
or
les
movsb
scas
add
clc
out
dec
jne
in
mov
stc
cmp
fisubl
add
aaa
dec
push
push
int
loop
movsb
xchg
stos
mov
ret
push
sbb
ret
std
push
add
mov
and
jg
outsl
lahf
sarb
faddl
imul
fimuls
and
insl
dec
sahf
add
shlb
sbb
or
arpl
adc
clc
jl
and
iret
inc
cltd
mov
mov
jmp
push
jle
add
cmc
xchg
xchg
sarl
das
pop
add
testb
mov
dec
push
mov
and
fwait
xorb
adc
inc
mov
add
or
jmp
and
movsb
and
fdivs
and
popf
stc
jb
jns
mov
loope
scas
icebp
shrb
cmp
push
inc
push
mov
cmp
inc
pop
fcom
loop
add
inc
xchg
push
xchg
or
jecxz
outsb
mov
out
call
int3
jmp
or
cmpsl
ljmp
jo
test
andl
mov
enter
ds
mov
out
xlat
imul
cmp
out
insb
outsb
cwtl
popa
add
call
pop
adc
xchg
mov
adc
push
paddb
and
int3
pop
mov
inc
xor
sub
cltd
lret
push
outsb
cmp
push
and
rorl
sbbb
pop
dec
ljmp
pop
and
fidivrl
sub
cmp
xchg
fsubl
dec
dec
in
cld
sub
out
fidivrl
mov
cmpl
push
xchg
dec
leave
sbb
and
imul
imul
and
add
mov
xor
sub
xchg
in
mov
and
nop
pop
rcrl
mov
enter
lods
lret
mov
insb
fwait
jbe
stos
sbb
loop
pop
hlt
loop
fnsave
cmc
pop
sbb
stc
popa
inc
or
loope
push
xlat
repnz
shlb
repz
call
xchg
xchg
pushf
dec
loop
test
adc
fprem1
add
arpl
rcll
sub
inc
pop
rcll
adc
gs
inc
mov
inc
push
aad
sbb
popf
pop
and
fdivrs
lret
ret
mov
pop
shr
mov
bswap
cwtl
sbb
sbb
aam
dec
xor
pop
mov
or
mov
bound
pop
mov
inc
out
cmp
mov
imulb
jnp
jno
or
mov
sub
xor
popf
mov
or
xchg
cmpsl
sbb
xchg
ss
lret
mov
sub
mov
aas
mov
aam
push
adc
js
mov
and
es
in
adc
xchg
push
lods
and
vpsraw
mov
mov
inc
dec
ret
cs
jbe
sbb
mov
je
xchg
lret
popa
pop
arpl
xchg
ret
lods
in
pop
pop
sub
sbb
mov
clc
test
mov
das
adc
and
insb
ljmp
or
call
pop
mov
push
pop
loope
dec
flds
clc
mov
repnz
lahf
inc
mov
and
mov
sbb
in
fldl
inc
pop
jg
and
xor
inc
mov
out
out
fmull
adc
out
fidivrs
les
sub
jp
or
mov
and
xchg
jl
imul
jl
jne
ljmp
cs
adc
popa
xchg
push
mov
xchg
out
push
inc
in
cli
andl
aaa
cmp
in
insb
sbb
ljmp
enter
cmp
mov
mov
mov
jbe
les
ljmp
inc
push
and
fidivl
cmc
pop
mov
pop
jbe
data16
mov
hlt
dec
test
lds
imul
lock
or
jo
sbb
aaa
int
inc
xor
add
je
in
or
movsb
imull
xchg
icebp
out
jecxz
pop
and
fcoms
push
and
jge
or
add
inc
jecxz
pop
mov
inc
popa
push
pop
mov
pop
sub
pop
es
insb
adc
push
cmp
jb
mov
xor
sub
adc
iret
pop
mov
pop
movl
scas
enter
fwait
rolb
andb
out
sbb
pushf
daa
sub
or
imul
iret
inc
cmpsl
jp
cltd
pop
or
pop
out
and
lds
rcrb
filds
or
or
xor
and
dec
test
or
in
in
dec
jo
jecxz
gs
int3
sub
stos
push
xor
stos
jl
repnz
sub
ds
cmpsl
fst
xchg
adc
inc
jmp
std
aad
out
movd
mov
insb
push
add
pop
fld
xchg
xor
in
filds
push
movsb
popf
outsl
xor
lret
std
je
pop
push
jle
push
adc
pop
mov
mov
inc
inc
inc
mov
mov
inc
repnz
dec
bound
sbb
ja
sbb
mov
jbe
jle
or
arpl
in
or
and
outsl
mov
mov
jb
daa
add
insb
call
cmp
xchg
insb
sahf
push
pop
push
mov
call
mov
imul
shll
jmp
sahf
out
leave
xchg
xor
inc
das
push
sti
cmpsl
adc
mov
mov
xchg
and
insl
loopne
mov
and
push
inc
in
mov
mov
adc
add
or
sub
lret
lahf
sbb
stos
push
push
out
movsl
and
pusha
es
fwait
add
xchg
pop
adc
sub
js
or
push
ret
add
loopne
inc
pop
scas
stos
std
out
xor
jno
inc
inc
int3
rcrl
arpl
jge
pop
pop
xor
nop
movsb
mov
and
inc
icebp
or
jg
dec
jbe
cmc
jmp
scas
jns
test
pop
stc
ficompl
xchg
xchg
mov
jae
mov
nop
push
sbb
cmp
mov
mov
lds
test
push
stos
add
cld
mov
fistpl
sarb
push
inc
or
push
test
test
push
mov
xchg
pop
mov
es
mov
mov
sbb
cmc
xchg
mov
dec
repnz
sti
popa
inc
mov
scas
xor
sub
and
imull
std
pop
fildll
mov
pop
lcall
mov
push
jnp
es
dec
push
or
push
cmc
sbb
and
mov
mov
jmp
insl
out
add
inc
mov
roll
inc
pop
mov
cmp
in
cld
push
sahf
aam
inc
mov
pop
inc
stos
mov
and
xor
loop
nop
jmp
jbe
js
jg
mov
std
cwtl
insb
xchg
sar
fistps
adc
sbb
je
pop
pop
mov
add
mov
sbb
mov
sub
adc
xchg
outsb
out
pop
dec
fwait
jbe
jl
rcl
mov
add
jg
xchg
out
imulb
mov
jbe,pn
les
add
ficomps
mov
cmp
and
inc
mov
ret
jle
mov
inc
js
mov
jp
iret
pop
mov
clc
jecxz
push
lcallw
out
xchg
xchg
jecxz
lds
pop
scas
adc
mov
addr16
arpl
jns
test
pop
jge
rsqrtps
sub
xchg
and
pop
fiaddl
std
pop
test
dec
cltd
in
cmp
ja
xchg
xor
mov
mov
pop
dec
mov
repz
xchg
test
mov
pop
sahf
enter
mov
pop
rorb
mov
adc
sahf
dec
subb
sti
xor
aaa
iret
int3
xchg
nop
pop
xor
mov
jnp
push
ss
sbb
int3
fcomi
arpl
nop
jne
xchg
cli
sbb
or
add
pop
jmp
std
stc
movsl
adcb
subl
inc
outsl
mov
mov
call
out
into
xor
xchg
mov
pop
lret
call
jmp
cvtpi2ps
enter
cmp
inc
stos
sub
pop
pop
inc
jmp
rcll
vphsubdq
stos
or
insl
xchg
int
fwait
cmc
stc
outsl
in
mov
mov
cmc
jle
insb
out
dec
dec
lods
loop
cmp
das
dec
xchg
mov
xchg
xor
pop
adc
pop
add
dec
sbb
sbb
scas
cmp
aad
lods
inc
add
iret
test
mov
adc
ljmp
sub
sub
push
and
test
cmp
sub
std
sub
mov
cmp
xchg
pop
adcb
pop
push
inc
fisubrl
sbb
add
lcall
sbb
das
mov
and
or
mov
jp
and
pop
jne
adc
test
mov
mov
push
rorb
ret
test
xor
popf
dec
pop
jl
fs
das
mov
or
imul
pop
cmpsb
push
or
mov
and
and
push
pop
or
outsl
mov
sub
adc
mov
dec
int
cmc
dec
repnz
les
cmpsb
cmpsb
adc
xchg
daa
pop
scas
inc
xchg
fwait
sbb
jg
add
xchg
pusha
fsubr
mov
jecxz
loopne
sarl
or
enter
mov
mov
daa
cli
fsubs
iret
add
repnz
das
repnz
or
adc
test
mov
push
mov
pop
dec
sub
pop
cmp
jp
or
jbe
adc
xlat
testl
lcall
xchg
lds
cli
inc
leave
into
nop
test
call
inc
mov
or
call
jb
sub
jmp
test
xchg
cltd
mov
pop
xlat
andb
mov
inc
sbbl
into
ret
jecxz
dec
iret
sahf
jl
cmpsb
pop
ficoml
push
lahf
jbe
mov
jae
inc
scas
aam
enter
mull
xor
nop
lods
or
pop
scas
dec
mov
cmc
lret
hlt
jns
push
das
shlb
aad
addl
js
jnp
mov
ret
sbb
nop
inc
push
je
scas
mov
lret
jecxz
push
mov
mov
lea
mov
lahf
fldenv
cmc
repz
lcall
mov
js
out
pop
test
dec
cmpsb
jp
jns,pt
and
inc
sbb
pop
mov
je
cmp
mov
cmc
mov
test
push
leave
dec
icebp
nop
mov
mov
sub
aad
lock
movsl
fdivrs
enter
loopne
adc
adc
sub
int
dec
jne
divb
sbb
out
movsb
fisubrs
sbb
lahf
or
inc
nop
jno
cmp
dec
cltd
pop
jge
addr16
or
icebp
or
stos
or
test
pop
mov
xchg
push
arpl
inc
or
push
aaa
inc
out
mov
ret
jecxz
jmp
or
mov
push
or
pop
xchg
jo
mov
icebp
dec
cmp
mov
cs
mov
enter
mov
adc
and
ss
test
imul
setle
movb
lods
or
fisubrs
fimuls
sub
test
jle
ror
cmp
dec
xchg
jge
adc
jl
mov
xor
inc
dec
fistl
sbb
cmc
les
int3
dec
jb
pop
xor
out
pop
push
sahf
xchg
xchg
aas
pushf
and
sbb
jae
pop
pop
pop
adc
cld
jbe
pushf
test
pop
mov
push
imul
lret
daa
out
push
dec
jo
dec
sub
dec
not
cmp
enter
push
xchg
sbb
jg
adc
sbb
xor
sbb
dec
jmp
icebp
addr16
or
pop
repnz
xor
mov
lret
xchg
cwtd
inc
pop
pop
pushf
add
adc
iret
scas
ljmp
test
mov
notl
cmp
jl
dec
call
adc
mov
out
inc
pop
imul
cmp
mov
jnp
int
jns
push
cmpsb
lret
jp
push
xchg
xchg
pop
or
outsb
stos
jns
sbb
pcmpeqw
repz
mov
dec
push
and
add
xor
iret
dec
cmpl
outsb
cmp
adc
test
pop
mov
ja
mov
jge
icebp
inc
mov
mov
xchg
xchg
jo
pushf
les
lret
or
das
dec
and
pop
and
ds
notb
inc
mov
shrl
loop
sbbb
rorb
out
dec
or
or
aad
or
cli
dec
or
popf
cmp
loope
fisttpll
rorl
xchg
inc
stos
insl
nop
pop
jae
mov
fwait
mov
push
rcll
clc
divl
xchg
sub
sub
lds
repz
lret
sti
or
fidivrs
cmc
xor
fwait
stos
dec
cli
xor
insb
movsl
lea
test
lret
mov
sbb
into
jecxz
mov
xor
movsl
mov
cmp
sub
and
loopne
fwait
mov
das
pusha
mov
sahf
shrl
sbb
leave
push
add
fucomip
cmp
icebp
cli
cmc
testb
test
psubb
cmc
fistpll
add
fiaddl
cltd
adc
lea
push
popa
dec
pop
int
ret
pop
pop
out
cmp
int
xlat
cmp
push
popa
jo
push
inc
or
push
je
lds
leave
in
xorl
mov
std
repz
pop
mov
jge
push
mov
xchg
push
dec
lea
push
mov
lds
fwait
sbb
repnz
nop
daa
mov
int3
mov
inc
jmp
outsb
fwait
in
mov
inc
lods
dec
in
mov
or
push
cmp
and
fildl
stos
adcb
mov
adc
push
cmp
movsb
ljmp
pop
movsl
pop
mov
daa
sbb
jae
adc
test
maskmovq
in
adcl
mov
adc
pop
dec
dec
cmc
lods
inc
sub
add
pop
xchg
mov
arpl
outsl
fcomi
call
arpl
push
test
sbb
mov
and
pop
ljmp
xchg
jge
jnp
mov
push
andb
es
push
push
test
cld
xlat
push
mov
idivb
in
adc
adc
fistpll
insb
repz
ret
xchg
pop
sbb
clc
insl
fadds
push
mov
aaa
xchg
sub
sbb
daa
mov
xchg
inc
test
cmc
enter
pcmpeqd
rcll
or
xor
loope
adc
divb
mov
mov
insl
adc
push
jle
int3
enter
stos
sar
push
scas
fcmovbe
jbe
out
aaa
mov
mov
jle
dec
push
push
rorb
repz
add
stos
xchg
lret
stos
jae,pn
jecxz
jecxz
mov
out
mov
inc
fs
setb
jg
push
lods
loop
ds
leave
xor
dec
pop
mov
bound
cmc
add
mov
xchg
xchg
fnstsw
js
sbb
lods
mov
stos
cwtl
jnp
jbe
sbb
adc
sbb
leave
dec
jbe
shr
mov
in
in
scas
loope
lods
and
push
sub
or
cs
dec
jbe
mov
push
rclb
leave
mov
xchg
lea
or
sti
adc
loop
lcall
insb
cmpsb
jne
test
adc
das
dec
mov
sbb
fcompl
push
or
cmovnp
mov
push
push
mov
icebp
dec
cltd
leave
mov
arpl
lcall
adc
xor
xchg
mov
jle
sub
add
popl
push
pop
xchg
mov
lret
xchg
push
jo
pop
sub
pop
sub
sbb
dec
popa
xor
movl
stc
inc
add
out
loope
shl
or
mov
sub
inc
pop
je
scas
out
jbe
lahf
jo
daa
fcomip
xchg
das
add
mov
jge
int3
decb
cmp
cmp
fisubrl
or
loopne
nop
int
dec
sub
shrl
push
xchg
and
imul
imul
pushf
rcrb
sbb
les
mov
dec
xor
and
out
cmp
and
outsb
cmpsb
inc
or
mov
loope
out
dec
add
sub
scas
mov
pop
stc
pop
mov
push
and
call
xor
cmp
mov
test
mov
xchg
mov
in
push
dec
dec
sub
ret
pop
cmpsl
mov
jmp
scas
jecxz
pop
and
stos
stc
jg
push
mov
insl
sbb
test
mov
sbb
psrlw
adc
inc
sbb
mov
add
push
jmp
fisubs
int
add
and
imull
cmpsb
pop
mov
mov
rcrl
adc
lcall
mov
mov
and
lods
xor
jge
subl
jge
test
mov
cmp
adc
pop
fldl
or
jo
icebp
into
pop
addr16
fmull
mov
or
es
jle
dec
jo
test
sub
push
shll
jb
xchg
cwtl
add
aas
mov
inc
jno
lds
mov
xchg
test
lret
and
loope
sub
mov
xchg
add
cmp
leave
sbb
mov
xor
jbe
insl
jnp
aas
xchg
push
or
lret
xor
cltd
out
sahf
popa
out
push
jnp
ss
int
xchg
in
push
aam
mov
cmc
sub
lcall
movsl
xor
xchg
and
mov
mov
repnz
in
or
jnp
lods
lcall
xor
dec
daa
jnp
fwait
in
leave
fs
arpl
cmc
and
pushf
fimull
cwtl
sub
xchg
mov
in
fmuls
sti
bndstx
or
mov
adc
mov
insl
scas
push
shrb
push
fists
das
lcall
ret
test
mov
xchg
sub
mov
daa
and
out
xor
test
rolb
mov
inc
stc
loope
aas
mov
out
nop
push
loope
lods
jecxz
jb
or
inc
xchg
pop
in
mov
and
push
or
mov
fisubs
inc
stos
xor
ja
leave
insb
out
shrb
pushl
loope
inc
pop
mov
xlat
push
rclb
xchg
cs
dec
pop
cmp
cltd
xchg
insb
mov
sub
fmuls
mov
mov
movsl
aaa
pop
xor
push
mov
and
mov
xor
push
mov
stos
divl
ret
mov
es
inc
repnz
add
pop
testl
inc
xchg
in
add
pop
sub
mov
mov
loop
loope
dec
stos
jo
xchg
jae
jbe
pop
and
mov
xor
fcoml
lds
adc
call
mov
jle
or
cmp
int3
test
and
stos
loop
xor
jp
or
mov
cmp
or
mov
loopne
inc
push
or
cli
mov
push
sub
cs
aad
mov
push
js
lds
scas
rcr
ret
loop
jmp
jne
inc
comiss
imul
xchg
mov
sarb
sbb
into
call
sti
jg
xor
or
rol
adc
rorl
insl
scas
mov
scas
pop
lods
lcall
xchg
jmp
sbb
imul
out
enter
out
ret
pop
push
mov
popa
or
sub
pop
fxtract
sub
imul
movsb
dec
in
out
adc
shlb
jbe
enter
adc
xchg
sub
xchg
jno
shl
pushf
and
lods
xor
int
xchg
inc
addb
cmpb
fstl
scas
fwait
xchg
push
out
mov
frstor
inc
pop
adc
fdivrs
pop
sub
dec
lret
xorl
mov
mov
mov
and
adc
cld
cmp
je
cmp
and
mov
ror
lret
mov
popf
jnp
xor
cltd
add
out
mov
movsl
lret
stos
test
shlb
jmp
dec
jb
xor
pminub
mov
sub
mov
jnp
mov
outsl
pop
sbb
xchg
xchg
ror
aaa
int3
out
out
nop
imul
js
mov
adc
arpl
mov
andb
inc
lcall
iret
lock
and
inc
sbb
mov
leave
std
xor
sbb
and
ljmp
test
mov
xchg
mov
rcrl
andl
pop
xor
adc
pop
cmp
mulb
jecxz
push
jle
push
adc
adc
xor
mov
mov
xor
push
inc
pusha
jle
and
sbb
xchg
bound
pop
xchg
mov
insl
loope,pn
and
push
leave
into
imul
ret
out
arpl
jmp
pop
jge
push
std
mov
jg
adc
imul
stos
mov
aaa
loop
outsl
mov
sub
in
aam
push
cmp
addr16
rcll
cmp
dec
sub
push
shlb
dec
add
sub
lcall
mov
clc
sbb
mov
stc
hlt
xchg
lret
arpl
push
fwait
pusha
cmp
ds
dec
xchg
adc
fiadds
cli
mov
mov
fnstcw
imul
pusha
stc
cld
pushf
adc
loop
mov
ret
mov
cwtl
add
lock
outsl
dec
and
fldln2
repnz
lods
data16
hlt
adc
loop
cmc
mov
data16
stos
std
enter
dec
mov
inc
jnp
int3
gs
call
xchg
sbb
inc
ja
fnstsw
lods
into
icebp
jbe
mov
lcall
inc
pop
sub
test
push
or
add
cmpsb
sub
cmp
cmc
adc
push
xchg
lret
sbb
jo
push
jnp
and
addr16
push
enter
sbb
movsl
test
sub
jbe
push
or
xor
push
test
jle
mov
cmp
mov
mov
int
daa
sub
fxam
dec
adcb
jp
lcall
inc
dec
push
pop
xchg
dec
js
and
pusha
add
dec
xor
addr16
insl
imul
mov
and
xor
addr16
dec
mov
cmp
je
mov
movsb
jg
push
pusha
imul
inc
mov
lods
lret
xor
popf
pop
mov
in
loopne
or
add
pop
ffreep
pop
or
out
add
jmp
or
clc
add
fmull
aad
stc
sbb
mov
movsb
aam
inc
fsts
inc
call
pop
mov
rep
pop
adc
sub
inc
cltd
and
cmc
cmc
cmpsl
mov
adc
or
mov
pop
pop
inc
fstps
fcmovnb
ds
push
sbb
lcall
lods
std
ljmp
mov
cltd
and
or
or
lahf
push
movsb
xor
rorb
mov
mov
lock
imulb
dec
mov
sbb
hlt
jb
daa
dec
xchg
lret
jnp
jmp
mov
rorl
xorb
cld
addl
std
test
dec
cmp
mov
and
xorl
fisttpll
sahf
test
mov
pop
jae
cld
in
sbb
mov
div
outsl
jne
bndstx
das
adc
arpl
jne
xor
adcl
pop
xchg
rcll
xor
mov
adc
fistps
pop
and
pop
dec
mov
dec
imul
int3
jno
inc
mov
shl
dec
mov
mov
mov
or
fidivs
repnz
btl
and
mov
dec
cwtl
xchg
add
ja
rorl
jg
pcmpeqb
pop
sahf
movsb
cmp
lcall
lea
push
add
fcoms
cmpsb
out
loope
mov
mov
mov
and
mov
sub
cmp
cmp
sbb
mov
imul
stos
aaa
or
and
pop
mov
sbb
shufps
push
add
xor
push
ret
mov
stos
dec
imul
mov
aas
adc
xor
ror
cwtl
sub
data16
popa
into
push
cmp
inc
mov
in
stos
mov
jnp
mov
or
cmp
mov
push
std
xchg
jae
mov
jge
call
adc
sbb
mov
push
lods
loope
sbb
out
or
roll
jnp
sti
cmc
xor
mov
cli
popa
cmp
sub
adc
adc
out
lss
icebp
jle
sub
xlat
and
mov
mov
in
scas
lock
xlat
gs
mov
jbe
ja
mov
inc
mov
scas
cmpsl
or
es
in
jmp
push
pop
pop
out
jbe
ljmp
push
js
aam
mov
jnp
inc
xchg
jns
cmp
movsl
mov
clc
xor
imul
imul
or
add
mov
movl
arpl
lret
movsl
je
inc
jge
push
xchg
sti
std
jnp
mov
addr16
mov
sti
push
mov
xchg
jl
and
mov
sbb
add
out
cmp
int3
push
test
sahf
lods
cmp
arpl
adc
test
and
xchg
subb
inc
xor
lret
push
int3
mov
mov
adc
sub
lods
sub
js
fcoml
loop
bound
xchg
cmp
stos
movsl
xorl
std
fsts
and
ljmp
cmp
mov
nop
push
cmp
cs
or
mov
clc
add
push
push
fisttpll
push
inc
pop
xchg
test
xor
and
dec
jns
push
or
and
pmulhw
stc
movsb
push
inc
xor
mov
in
pop
inc
bound
repnz
or
arpl
ret
push
pop
popf
ljmp
cltd
pop
mov
mov
cli
jno
mov
cmpsb
sub
fs
push
push
pop
shl
fs
addr16
mov
dec
mov
fistl
rclb
lock
imul
inc
lahf
daa
mov
stc
movsb
cmp
arpl
std
push
ss
imul
dec
pushf
mov
popa
push
pop
out
xor
jge
into
scas
sub
clc
ret
fsubs
adc
dec
sarl
mov
cmp
aas
and
push
fs
ds
pop
xchg
jg
iret
call
dec
adc
aad
out
push
imul
push
push
cmp
xchg
shrl
push
movsl
movsl
xchg
xchg
push
ljmp
data16
call
notb
jle
stc
jbe
xchg
xor
scas
cmp
aad
outsl
mov
leave
cmp
jge
orl
xchg
inc
lret
push
pop
frstor
dec
loop
push
test
ja
jg
pop
and
push
scas
addb
and
iret
es
jmp
fstpt
mov
push
jns
mov
pusha
mov
inc
enter
nop
cmc
imul
or
push
je
fnstsw
xor
ljmp
sub
stos
xchg
fs
push
mov
inc
in
inc
imul
xlat
test
push
cmp
pop
arpl
inc
clc
mov
push
ds
nop
jns
insb
roll
and
lods
cwtl
in
xor
jp
xchg
clc
cltd
movsb
add
push
iret
cmp
ds
xchg
xor
xchg
lahf
jecxz
jmp
adc
movsb
daa
stos
dec
mov
jae
mov
mov
push
and
dec
pop
mov
jno
or
ss
movsl
push
cmp
ret
call
outsb
mov
xor
mov
mov
icebp
dec
pop
jmp
fistpl
lea
mov
xchg
repnz
and
mov
iret
in
rcrb
xor
and
cmp
pop
xchg
sbb
and
and
adc
mul
xchg
pushf
or
jg
mov
test
std
test
mov
aas
lahf
stos
pop
add
je
adc
addr16
dec
lret
pop
sbb
jae
dec
jg
lar
pop
popf
sub
rcrb
lock
and
mov
nop
sub
aam
inc
adc
inc
in
in
mov
in
pop
xchg
mov
sbb
jae
call
mov
sbb
inc
inc
xlat
lcall
jle
jg
div
xchg
iret
inc
xchg
jmp
add
rcll
push
inc
fidivrl
lret
dec
int
push
loope
mov
lock
cmpsb
cmp
pop
mov
out
cmp
xor
cmp
fisubrs
fucompp
int3
rcll
in
xor
and
dec
mov
mov
es
jge
aad
ret
frstpm(287
loope
mov
loope
dec
les
mov
sbb
and
xchg
dec
mov
rorl
mov
jns
sbb
movsl
xchg
in
sub
insl
jns
outsb
pop
sbb
mov
mov
dec
mov
sbb
lods
gs
rcrb
sbb
adc
push
jmp
in
inc
fnstsw
mov
mov
push
xchg
iret
sbb
mov
sbbl
dec
mov
inc
cmp
jecxz
pop
mov
sbb
or
shll
adc
fisubrl
sbb
mov
mov
adc
pop
pop
sub
push
dec
add
call
in
mov
loope
sub
cmpsb
or
adc
or
xchg
call
jo
xchg
in
sti
mov
in
dec
sbb
cmp
pop
and
leave
stos
inc
mov
xor
or
inc
mov
pop
push
shl
pop
test
mov
hlt
push
sub
stos
inc
icebp
xchg
pop
out
push
xor
repz
and
xchg
ret
or
cmpsl
movsb
xor
clc
js
testb
outsb
adc
sub
nop
hlt
popf
xchg
mov
adc
pusha
and
out
dec
mov
pusha
mov
add
push
pop
cmp
add
jae
dec
sub
aas
sub
mov
aam
ret
xchg
push
cmp
xlat
out
dec
pop
mov
mov
sbb
pop
sub
or
sub
or
xor
pop
scas
mov
pop
shl
int3
clc
push
and
xor
iret
jl
rcrb
fcmove
xchg
adc
cmp
ja
fimuls
fmuls
mov
sub
outsb
dec
popf
out
cwtl
je
out
out
out
insb
fstp
push
add
adc
adc
repz
jmp
pop
jp
lcall
dec
xchg
push
adcb
inc
inc
cli
xlat
mov
pop
aaa
lds
inc
sti
dec
mov
pop
xor
sbb
jae
fdivrl
stos
mov
or
faddl
xchg
ficompl
gs
xchg
out
dec
jl
js
int3
xor
sbb
xor
pusha
dec
adc
test
pop
fisubl
stc
dec
in
in
arpl
dec
aad
outsl
pusha
adc
or
jae
sbb
call
fisttpl
fnsave
std
mov
inc
push
orl
loope
leave
mov
pop
xchg
mov
cmp
fstpt
pop
dec
xlat
ret
sub
ljmp
xchg
jne
inc
jb
xor
add
cld
lock
cld
push
in
cmpsl
push
mov
pop
addr16
nop
xor
shlb
imul
sub
push
cltd
inc
adc
fistpl
sub
adc
adc
add
cs
insb
xchg
cmp
dec
inc
mov
arpl
cmp
xchg
xor
jb
stos
xlat
dec
or
out
push
idivl
or
sub
cmp
and
scas
cmp
scas
ss
bnd
arpl
dec
push
dec
xchg
insl
icebp
mov
xchg
out
cmp
adc
xor
sbb
daa
add
xchg
mov
add
push
das
cmpsb
data16
pop
mov
mov
stos
cmpsb
mov
aam
lods
repnz
outsl
mov
andl
arpl
out
or
push
dec
pushf
pop
or
xchg
hlt
fwait
pop
imul
mov
int
iret
pop
pop
cmpsb
lods
add
stos
cmp
xchg
push
rol
ffreep
stos
jg
and
lahf
repz
movsb
mov
or
adc
xor
dec
adc
imul
push
mov
out
mov
jmp
cs
loope
sti
mov
mov
pop
xchg
push
insb
lret
add
sub
and
sbb
mov
pmaxsw
ljmp
arpl
imul
mov
je
cmp
dec
into
into
loope
adc
test
rolb
xchg
cmp
adc
pop
test
lahf
dec
mov
dec
xchg
fisttps
mov
loop
mull
dec
repz
dec
andb
aam
mov
sahf
jmp
dec
popf
inc
and
sub
push
xchg
push
into
xchg
mov
add
inc
and
dec
imul
cmp
sbb
int3
lods
lcall
push
pop
dec
pop
adc
push
xor
clc
insl
or
pop
dec
sbb
cmp
shll
std
lret
mov
adc
dec
call
sbb
shll
pop
insl
and
or
cs
jmp
mul
arpl
mov
and
jmp
mov
push
cmp
add
cmp
js
dec
and
xchg
mov
pop
outsb
adc
xchg
dec
in
testl
inc
leave
js
in
sbb
sbb
enter
popf
cmp
push
dec
or
cwtl
push
les
daa
dec
out
cli
push
enter
cs
es
pop
push
xor
mov
dec
dec
and
sahf
mov
push
dec
jo
sub
das
shl
in
les
jnp
pusha
fstps
andl
test
stos
push
mov
mov
sbb
je
dec
pop
cmpb
xchg
mov
mov
mov
mulb
and
xlat
push
outsb
mov
bts
aaa
aaa
cmpsb
xchg
imul
ljmp
inc
sub
addr16
stc
add
les
subl
fdivrl
cs
movsl
xlat
mov
mov
sbb
fidivrl
addr16
xchg
pop
shll
jge
and
fcmovnbe
ret
ret
scas
sbb
sbb
or
cwtl
ret
mov
mov
inc
dec
aad
movsl
aam
lock
ret
mov
and
test
std
movb
mov
mov
xchg
inc
mov
xchg
aad
imull
cmp
sub
cmp
adc
and
aas
pop
jb
sbb
jl
dec
rcl
adc
stc
jge
mov
shl
sub
xor
add
movlhps
add
sbb
fmuls
cmp
cmc
xchg
xchg
dec
xchg
and
mov
clc
ret
leave
dec
aas
test
sub
aad
fs
rorb
push
cmc
subl
ret
sub
sbb
sahf
pop
stos
sub
xchg
add
les
stc
cld
pushf
popa
xor
mov
jns
adc
xor
xor
pop
sahf
inc
push
mov
adc
sti
in
pop
roll
inc
in
cmp
jb
pop
add
inc
xchg
and
fidivrl
jb
mov
push
shlb
gs
test
cmp
xchg
cmp
sarl
jecxz
lock
mov
sti
imul
int
inc
xor
adc
mov
or
loope
and
test
pop
int
adc
insb
ret
pop
jge
lahf
or
outsb
stos
dec
mov
mov
fsub
adc
mov
in
jo,pn
or
mov
adc
xchg
add
dec
test
sbb
push
and
cmpl
lods
std
adc
arpl
adc
push
nop
outsb
mov
fdiv
dec
adcl
pushf
scas
mov
or
mov
aam
push
jg
xor
xor
jnp
xor
jbe
and
idiv
dec
inc
push
push
or
dec
lds
ror
pop
adc
or
hlt
data16
push
or
pop
and
mov
das
jns
add
fsts
mov
std
andl
pop
out
inc
out
xchg
stos
insb
mov
cmp
outsl
push
push
nop
push
push
dec
sub
fs
sbb
sub
sbb
cmpsl
xor
js
sbb
loopne
stos
adc
adc
movsl
loope
jecxz
jae
push
mov
mov
xchg
cmp
jae
stos
lock
jge
or
pop
mov
ja
dec
adc
mov
cmc
aam
jne
mov
lea
and
sbb
loop
mov
fisubs
stos
insb
xlat
lret
and
outsb
aad
bswap
stc
add
mov
add
xchg
stc
in
test
add
ja
clc
mov
or
mov
rcr
jge
xchg
jns
dec
mov
inc
imul
aas
mov
int3
or
pop
pop
sbb
test
xor
icebp
sbb
sbb
sub
add
fbstp
in
mov
mov
sbb
rorl
jg
mov
pop
inc
inc
fiadds
leave
cld
gs
jl
ds
cmpsb
stos
adc
leave
inc
fmuls
mov
mov
pop
inc
outsb
loopne
daa
mov
scas
mov
adc
cmp
cwtl
nop
int3
add
psubsw
movb
ror
loopne
jl
popf
lret
popa
sub
mov
adc
push
inc
jg
sbb
mov
sbb
add
sbb
in
push
mov
jno
cmpsl
or
pop
and
mov
aad
loope
mov
sub
testl
sbb
lock
and
push
pop
lahf
out
inc
cmp
lret
pop
xor
into
jne
loop
push
push
outsb
adcb
test
xor
cli
add
jb
or
adc
xor
cmc
insl
jle
mov
inc
je
das
int
jns
sub
jns
add
popf
mov
gs
pop
lock
inc
mov
ss
shrb
in
and
arpl
aaa
mov
adc
test
inc
mov
clc
das
out
mov
repnz
pop
push
cmp
cmpsb
jge
mov
mov
insl
mov
loope
pop
ljmp
aam
inc
cmp
mov
out
add
mov
sbb
rol
fbld
push
dec
sbb
cmc
inc
xor
adc
adc
leave
pop
dec
push
dec
jbe
pop
aas
xor
mov
stos
test
jo
and
aad
sub
lods
xor
add
arpl
out
lret
sti
jmp
dec
push
arpl
jo
jnp
mov
roll
mov
jge
and
jns
push
cwtl
in
jg
cmp
jmp
add
lods
pop
fstps
fsubrl
inc
dec
mov
push
loope
fnstsw
inc
lods
mov
and
sahf
leave
stos
scas
mov
sub
fidivs
fdivrs
cmp
outsl
aad
push
push
aas
out
or
pop
lret
fiadds
dec
sub
iret
jecxz
mov
popa
adc
aas
outsb
jl
sub
test
adc
scas
push
xchg
loopne
add
xor
lahf
lret
sub
inc
jle
and
or
push
sti
negb
movsb
pop
mov
lds
ror
stos
sbb
cmp
xchg
jns
jle
pop
pop
and
cmc
iret
cltd
fcmovnbe
mov
shlb
arpl
mov
ljmp
sub
rclb
ret
mov
push
pushl
adc
dec
push
jg
or
dec
adc
pop
imul
sbbb
mov
scas
mov
cmp
jmp
je
in
addb
dec
imul
mov
xor
ds
jl
jp
addr16
sub
lahf
clc
inc
fisubrs
movsb
inc
jae
mov
jmp
dec
xchg
ja,pn
xor
sub
sub
lret
push
outsb
jno
and
out
or
in
push
xor
repz
fwait
mov
repz
fildl
xchg
icebp
pop
dec
pop
test
rorl
push
push
push
xchg
lret
outsb
ljmp
fsts
mov
dec
adc
or
out
sub
jns
jne
insb
call
jge
not
lret
out
lea
decl
mov
mov
stos
push
pop
mov
xchg
pop
jge
sub
adcl
loope
mov
adc
jg
sti
sar
adcl
mov
les
out
fmull
inc
arpl
inc
loope
flds
or
addr16
pop
adc
or
cmpsl
mov
loopne
enter
out
gs
or
xor
test
je
leave
mov
push
fldl
push
hlt
push
sbb
fsubrl
add
fstpl
loope
cmp
mov
pop
pop
push
pop
int3
jecxz
scas
sub
jp
outsb
cmp
inc
mov
xchg
mov
adc
cmp
adc
je
loopne
push
lea
in
inc
loopne
pop
in
pop
lcall
or
dec
repnz
jg
adc
test
rcr
pop
pop
out
xchg
mov
jo
or
mov
push
xchg
cmc
repnz
adc
add
jmp
ds
adc
and
outsb
test
int3
dec
nop
xor
dec
imul
rolb
stc
mov
cwtl
push
movsb
fsub
addl
ds
mov
xor
jnp
mov
fucomi
repnz
jl
pop
icebp
push
inc
mov
pushf
jb
test
loope
loop
cmp
popf
subb
fwait
pop
pop
loope
rcr
fsubl
rorl
cmp
mov
jecxz
mov
cmp
outsb
out
dec
cwtl
les
push
shrb
clc
sbb
sarb
cmp
loop
dec
test
sub
stc
pushf
xchg
adc
cmp
cmp
in
mov
pop
adc
pop
adc
mov
mov
jmp
adc
cmp
cwtl
icebp
sbb
sub
xchg
add
popa
stc
jb
lcall
ret
cld
sbb
jp
js
sbb
inc
jp
lds
aam
in
add
enter
test
bsf
and
outsl
dec
xor
repnz
lahf
jp
xchg
xor
sbb
outsl
sub
and
push
nop
mov
icebp
lcall
fucomi
cmp
mov
push
xor
push
push
mov
mov
stos
pop
in
push
loope
push
mov
add
sahf
sbb
in
cmp
iret
sbb
mov
mov
dec
add
jp
mov
pop
out
or
je
bound
out
gs
jb
adc
xchg
divb
sub
mov
fidivrs
dec
sub
ret
jnp
xor
mov
mov
lods
outsl
push
pop
push
dec
sub
xchg
xor
dec
rorb
adc
ds
in
shll
insl
ret
int3
repnz
call
cmp
lods
jb
insb
sbb
dec
jnp
mov
das
xchg
mov
xchg
divb
mov
dec
add
xchg
dec
inc
pushf
stos
cmp
rcr
lret
push
gs
or
pop
fimull
insb
lds
fcmove
repnz
sbbb
arpl
mov
lds
sbb
cmpb
mov
push
sub
pushf
sahf
mov
in
nop
mov
in
push
pop
sar
sbb
bound
sub
call
jnp
dec
mov
nop
xor
sahf
gs
xor
out
xor
popa
xor
ja
jmp
or
pop
out
push
push
cmpsl
std
aaa
sub
xor
push
fcmovnbe
shrb
push
out
pop
das
xor
fldcw
cmp
xor
adc
mov
mov
pop
in
fmull
aad
adc
popf
add
aam
jp
push
cli
mov
lret
lret
mov
mov
bound
xchg
mov
imul
jge
and
bound
and
aam
cmc
mov
and
inc
mov
daa
and
call
xor
repz
mov
mov
out
xchg
inc
ljmp
mov
out
add
sub
adc
insl
mov
pop
and
jecxz
cmp
inc
add
inc
push
fiaddl
sbb
jmp
movsl
aam
fidivrs
sarl
mov
or
mov
cmpsb
stos
loopne
mov
aam
dec
jne
lahf
jo
mov
jg
dec
mov
cmp
sbb
int3
push
mov
mov
inc
mov
sbb
leave
orb
pop
aam
add
int3
imul
xor
mov
mov
testb
sbb
sbb
fstps
jae
test
sub
cmp
push
enter
loop
lret
andb
dec
scas
test
mov
in
fwait
sbbb
movsl
es
dec
aas
lcall
dec
adc
mov
push
push
push
cmovs
sbb
push
mov
arpl
inc
sbb
adc
cld
and
adc
add
dec
inc
dec
lods
iret
adc
ljmp
mov
lock
pop
test
xorps
fs
inc
lahf
push
js
adcl
das
mov
push
outsl
ja
jne
lods
mov
inc
out
mov
jecxz
push
sbb
or
cs
dec
imul
and
pop
push
loope
subb
mov
lock
movsb
addr16
cwtl
xchg
jo
pop
adc
jns
and
mov
stos
popf
js
dec
stos
inc
out
cmp
cmpsb
ja
lahf
and
xchg
add
roll
sbb
mov
push
out
mov
fcomps
jns
cmp
test
ret
jle
pop
loope
sub
jnp
sbb
pop
inc
inc
fisttpl
jmp
ret
or
shll
adc
int
nop
notb
dec
outsl
sahf
or
cwtl
insb
pop
aad
xchg
loopne
repz
cmp
stc
jno
push
fidivrl
push
xchg
mov
popf
jmp
or
xchg
sbb
sub
stos
loopne
inc
pop
xor
push
shrl
or
adc
fnstsw
mov
sbb
push
and
dec
add
aad
pop
pop
mov
adc
lcall
mov
cmpsb
adc
mov
and
call
mov
push
mov
out
lds
pop
mov
inc
xor
sti
mov
lock
aaa
push
lock
es
inc
pop
jle
xor
lret
fs
mov
mov
dec
rep
jnp
add
scas
repz
inc
jne
mov
mov
sbb
loopne
pushf
loop
iret
rorb
mov
movb
lods
sbb
jl
lds
or
mov
shlb
push
lds
lock
mov
cmc
aam
lock
das
sub
mov
jecxz
sbb
lret
pop
inc
sti
fs
mov
mov
idivb
loop
fldenv
clc
mov
sbb
pushf
mov
mov
mov
cmpsl
sbb
pusha
test
addr16
mov
mov
xchg
sti
mov
mov
dec
jl
fidivrs
js
jo
or
in
out
mov
jae
lods
dec
xor
inc
pop
add
xor
inc
adc
aas
test
lods
loopne
bound
fcoms
sbb
into
adc
or
xchg
add
repz
or
xchg
pushf
cmp
and
jg
jl
mov
mov
cwtl
pop
js
inc
shll
pop
cmp
sbb
dec
icebp
push
scas
fimuls
ljmp
or
and
loop
aam
fisubl
insl
xorb
test
mov
mov
pop
lahf
and
imul
mov
add
lcall
rorl
fldl
or
out
mov
loopne
push
arpl
xchg
inc
setge
push
inc
cli
dec
sbb
subl
jno
mov
ljmp
inc
adc
jbe
cmp
adc
stos
cmp
hlt
insl
push
iret
jns
loop
cltd
std
cmp
fisubrs
add
mov
pop
icebp
inc
push
aam
pop
mov
pop
mov
das
sub
inc
sbb
mov
repz
xor
movsb
or
rclb
adc
pop
fcoms
sub
jge
sbb
cmp
xlat
pop
xlat
mov
mov
test
fbstp
jo
xchg
nop
arpl
mov
out
inc
mov
xor
sbb
mov
jne
repz
fists
std
mov
stos
aas
insl
adc
and
dec
pop
popf
jle
push
inc
sub
adc
xchg
jne
pop
outsb
fistpll
mov
ret
push
roll
mov
scas
xor
xchg
je
test
xchg
sbb
movsb
push
int
lock
movsl
push
in
jns
jmp
add
stos
jl
mov
out
xchg
adc
cs
fidivrs
insl
add
adc
mov
pop
jmp
jg
add
pushf
inc
pushf
pop
gs
and
aam
bound
enter
xor
mov
xor
shld
mov
pop
cmp
adc
outsb
mov
add
mov
mov
pop
test
imul
stos
popa
push
les
lods
pop
adcl
and
stc
inc
mov
xchg
sbb
andl
push
xorl
or
cld
test
cwtl
ret
cs
cwtl
sub
das
fdivs
das
jg
dec
cmp
push
xlat
mov
pop
mov
in
adcl
mov
bound
mov
adc
inc
fidivrl
jl
jns
sub
adc
sbbl
fldcw
fimull
lret
mov
pop
mov
mov
sub
pop
jmp
ret
xor
mov
adc
inc
xor
scas
loopne
in
pop
stc
dec
mov
mov
fildl
mov
pop
mov
dec
out
imul
lock
mov
pop
or
mov
jl
iret
dec
sti
jno
and
or
fsubrl
push
adc
sbbl
mov
loopne
push
incb
push
sbb
ja
mov
nop
add
jae
mov
add
outsl
cwtl
addr16
jns
mov
cmp
mov
add
inc
cli
lock
inc
mov
xchg
das
sbb
and
add
mov
outsl
push
push
gs
mov
sbbl
fcmovnb
testl
fisubl
or
inc
xchg
popa
stos
mov
fs
aaa
sub
push
std
int3
jns
mov
in
rclb
sbb
aas
mov
rcll
aas
neg
aad
decl
ljmp
push
insl
fisttps
call
das
add
fsubrs
into
jo
xor
lods
enter
popa
out
insl
gs
lds
xchg
cltd
add
dec
ficompl
decl
xchg
outsl
xchg
push
mov
rcr
fstl
shl
subb
mov
iret
dec
cli
test
xor
in
mov
pushf
xchg
ret
clc
xchg
iret
inc
sub
arpl
iret
mov
pop
iret
mov
adc
cmp
sbbl
call
stos
inc
outsl
pop
scas
pushf
xor
iret
movsl
cld
bound
jne
mov
push
mov
mov
sub
test
fadds
ja
sti
push
jle
sbb
cmp
imul
xor
bound
mov
jecxz
mov
int
dec
inc
jmp
les
push
xor
xor
ljmp
adc
movsl
xchg
mov
cmp
jmp
int
test
aad
push
sub
aaa
insl
xchg
test
jmp
or
add
int
in
inc
ss
and
arpl
imul
cmp
cld
sahf
pop
add
push
sahf
lds
pop
xor
pop
pop
cmpsb
cmpsl
jne
hlt
sbb
pop
clc
out
loope
lds
or
andb
ljmp
dec
orb
test
mov
mov
pushf
cs
lock
pop
movsb
mov
jle
rol
int
gs
and
or
dec
fistps
leave
andl
cmp
repz
pusha
adc
iret
cwtl
and
cmc
incl
xor
pusha
inc
ds
jb
sarb
or
mov
inc
and
push
jno
lea
mov
xchg
pop
notl
insl
or
pop
mov
sbb
imul
add
adcl
inc
scas
dec
shl
movsb
add
mov
mov
addr16
mov
imul
pop
fwait
cld
xchg
shll
test
ret
mov
lock
lahf
jns
jg
fdivr
aaa
ja
sub
or
pop
sbb
xor
jmp
sub
push
mov
std
mov
dec
pop
pop
dec
add
clc
fisubl
pop
in
imul
and
test
adc
std
jmp
and
add
jecxz
and
push
fildl
xlat
dec
cwtl
push
and
stc
xchg
aas
sub
jne
sbb
fisubrs
xor
adc
sbb
xchg
das
cwtl
dec
fidivs
cmpsl
fistpll
xchg
hlt
ret
sub
push
jl
push
dec
or
aad
addr16
mov
arpl
sti
sbb
insl
push
loope
sub
xor
sbb
fldenv
sub
jl
imul
sbb
loop
adc
hlt
adc
mov
sbb
cmp
push
fisubrl
lea
frstor
and
rcr
mov
xchg
fidivs
pop
mov
lds
jle
sub
addr16
mov
or
cmp
ds
outsl
daa
mov
mov
rclb
mov
mov
addr16
dec
xor
mov
cmpb
mov
test
mov
adc
fucomi
or
lods
mov
or
hlt
les
mov
into
push
xchg
cmp
and
mov
mov
jmp
mov
insb
cmc
or
cld
loopne
leave
insl
pop
fistps
lcall
inc
cli
cld
ds
mov
mov
inc
nop
inc
stos
int
add
jg
mov
jle
xchg
test
sbb
jo
jae
mov
xor
lods
leave
out
pop
push
insb
jge
jmp
mov
mov
xchg
clc
dec
cmp
sbb
test
jo
pop
pushf
fwait
or
popa
inc
push
ret
xchg
lret
push
jge
fisttpl
int
sbb
dec
insl
xor
bound
js
adc
loopne
and
jge
std
loope
sub
or
movsl
es
scas
xchg
pop
push
mov
lret
push
adc
push
mov
sti
mov
sbb
push
int3
popf
push
push
pop
shl
mov
add
inc
pusha
rorb
ss
cmc
loop
lahf
mov
mov
jns
lret
mov
xchg
push
dec
stos
mov
cmp
pop
lock
fldcw
xor
aam
imul
int
xor
and
imul
add
dec
and
lods
jnp
cli
cltd
mov
sub
lret
pop
sahf
pop
xchg
mov
outsb
sub
sub
cmc
sbbb
out
xchg
dec
push
testb
inc
clc
mov
cmp
cmp
jle
fldt
inc
push
stos
test
push
leave
lret
cmp
mov
leave
hlt
or
insb
pop
push
xchg
pop
out
fistpl
ljmp
lea
push
nop
mov
rolb
dec
outsb
pushf
popf
push
out
jae
jbe
out
inc
jecxz
cli
test
and
and
int3
icebp
push
fcompl
fisubl
roll
push
es
lcall
movsb
dec
sbb
iret
and
fsubp
jmp
mov
test
xchg
out
dec
adc
cmpsl
scas
pop
cmp
insl
int
push
dec
fnsave
aam
pop
into
sub
and
movsb
pushf
insb
cli
js
adc
mov
test
sbb
out
xor
mov
cmp
jno
je
sub
xor
pop
pop
xchg
adc
xor
xorl
xchg
jbe
stc
fadd
pop
or
dec
rcll
add
divl
cmpsb
popa
push
in
xchg
adc
js
scas
inc
pop
fidivs
pop
cmp
pop
inc
inc
mov
arpl
stc
popf
out
mov
mov
dec
mov
and
icebp
inc
xchg
cwtl
jmp
jns
les
call
ds
stos
lds
mov
push
dec
pop
fwait
push
cli
xchg
test
loop
dec
pop
push
iret
mov
mov
and
xor
xor
out
add
and
mov
and
cmc
es
dec
stc
out
dec
or
adc
sbb
scas
or
fs
pop
push
sbb
add
jle
adc
mov
or
mov
and
xchg
cmpsb
aaa
dec
fstpt
and
push
jge
fucomi
xchg
imul
mov
call
data16
xchg
imul
add
das
bswap
bound
andl
in
das
jo
lret
xor
xor
test
hlt
xlat
adc
dec
ret
jb
mov
adc
arpl
inc
scas
pop
inc
push
xchg
xor
add
adc
pop
xor
call
stos
faddl
fnsave
jge
in
sub
jbe
stc
mov
jl
inc
or
jae
sarl
cmpb
outsb
adc
call
jb
mov
and
dec
and
mov
movsl
push
xor
jbe
cs
int3
scas
mov
fidivrs
call
dec
push
fstl
cltd
addr16
mov
jle
sbb
dec
pop
rcrl
les
sub
sarb
or
pushf
xorl
arpl
pop
jb
dec
popf
push
mov
cmpsb
popa
addr16
leave
mov
in
sub
adc
sahf
hlt
mov
sbb
adc
pop
lock
inc
lock
arpl
les
lcall
adc
sbb
mov
and
add
jns
stos
pop
add
fstps
sbb
cmp
inc
stos
test
mov
cmpsb
mov
sub
das
fsubrl
jnp
pop
lcall
or
fisttpl
rcrb
ljmp
add
adcl
mov
lret
or
and
sbb
mov
sub
cmc
mov
mov
or
sbb
pop
adc
pop
rcll
ret
mov
pop
fisubrs
shr
jno
add
sbb
xchg
fwait
orl
jne
pop
fpatan
xor
add
decb
fimull
sbb
mov
xchg
cmpsl
out
lods
xchg
jbe
rcrb
loope
dec
shll
mov
and
sbb
arpl
mov
cmpb
mov
scas
add
add
cld
sbb
sbb
insb
add
test
out
sub
sbb
fisttps
sbb
aaa
fwait
or
pop
sbb
mov
cmp
jmp
rcr
push
push
pop
pop
shrb
sub
out
and
mov
adc
push
mov
or
in
mov
test
addr16
push
mov
adc
and
push
push
orl
in
sbb
xlat
out
repnz
popf
adc
xchg
and
jmp
jno
iret
test
and
cmpsb
jge
mov
fistl
icebp
outsl
jo
popa
cli
enter
in
movsb
fs
pop
jp
jge
jp
or
push
cli
movsb
mov
mov
inc
movsl
jl
popl
cmpl
ds
mov
or
mov
nop
movsb
out
loopne
or
pop
and
or
fidivl
ret
cltd
mov
mov
pop
and
das
imul
int3
rcrb
fwait
mov
int3
aad
xor
aas
mov
aam
lds
out
mov
mov
outsl
xor
or
push
dec
or
sti
sub
ja
pop
mov
xchg
out
sub
out
fwait
mov
test
inc
lods
inc
jl
add
sbb
add
lods
mov
inc
enter
je
movl
cmp
and
fstps
sub
sub
cwtl
js
ljmp
fwait
cmpl
call
cmp
xchg
ret
and
xor
mov
inc
in
push
sub
loop
jp
mov
out
int
jae
imul
imul
insl
sbb
and
aad
das
rcrb
test
stos
lods
mov
sbb
xor
sbb
xchg
iret
jno
mov
jp
data16
pop
xchg
fidivrs
sbb
and
lret
cs
or
add
cli
fisubs
or
rclb
sbb
loop
aaa
jnp
cmp
popa
dec
scas
clc
and
dec
and
ficoms
int
mov
cli
cmc
mov
rcrb
mov
cltd
adc
jne
xchg
jg
out
mov
dec
sub
sub
push
cltd
add
xor
add
pop
fnsave
xchg
pop
add
mov
and
aad
dec
popf
sub
ret
gs
shrl
or
js
mov
imul
mov
push
es
sub
es
jge
mov
and
pop
incb
int
push
cmp
clc
cmp
popf
adc
rcl
lahf
and
mov
mov
lds
jle
std
and
xchg
xchg
sbb
lock
imul
sub
or
aad
sarb
loope
adc
add
arpl
out
add
mov
decb
sahf
aaa
push
arpl
iret
xchg
pop
scas
mov
or
cmp
aas
dec
lcall
mov
sub
inc
lods
cmpsb
pop
dec
cmc
mov
xchg
xor
pop
orl
mull
popf
fwait
movsb
push
push
arpl
mov
dec
sbb
jbe
cld
lret
nop
dec
stos
xor
and
mov
push
push
in
sti
adc
fcomp
or
mov
sbb
mov
leave
out
sarb
cmp
hlt
into
pop
add
gs
inc
movsl
repnz
mov
shrb
pop
ss
add
mull
pop
pop
sub
xchg
cmc
jl
add
inc
mov
dec
cld
fldt
jle
cmpsl
push
mov
dec
pop
mov
or
xor
cmp
out
testl
ret
mov
popf
addr16
jg
mov
push
jbe
jnp
lods
pop
mov
ja
xor
jmp
jp
les
push
popa
sub
pop
out
dec
repz
jmp
jnp
sbb
insl
icebp
repnz
repnz
mov
dec
cmp
or
sar
pop
push
adc
mov
test
cmp
cmc
std
mov
les
mov
push
andb
out
lret
call
push
pop
inc
daa
jno
lea
and
fsubl
adc
add
cmp
mov
cmp
adc
adcl
pop
sub
pop
or
mov
push
idivb
or
lea
xchg
and
pop
insl
push
mov
cmpsl
inc
inc
mov
cmp
mov
icebp
into
add
lods
daa
sbb
imul
mov
push
xchg
dec
xchg
inc
sub
sbbb
loopne
out
orl
lcall
jecxz
ror
mov
xor
mov
enter
stc
orps
jae
enter
cltd
adc
sub
adc
xchg
fdivs
lea
out
cmp
add
ror
test
jmp
push
cmp
int
into
dec
lret
insl
add
mov
je
ja
push
cmp
mov
and
add
jmp
les
sbb
or
jne
mov
cmp
lcall
subb
push
das
hlt
test
cmp
mov
push
push
sub
gs
pop
divl
push
stos
sub
inc
mov
dec
mov
cwtl
cmpsl
sub
mov
icebp
sub
sub
push
push
loope
push
and
adc
cmp
ret
xor
leave
rcr
xchg
out
push
mov
out
cs
cmc
lret
iret
mov
fsubrs
push
fwait
inc
hlt
adc
mov
cmp
cmp
add
inc
xchg
aas
sub
dec
fdiv
pop
pop
add
xchg
push
push
inc
aam
inc
popf
jbe
and
cmp
pop
adc
repnz
les
movsb
cmp
gs
shll
mov
fisubs
inc
adc
mov
sbb
sbb
and
rol
xchg
lods
fistpl
loope
stos
push
fidivrl
push
sti
sub
neg
cmpsb
rcll
or
fidivs
fnstenv
or
cmp
divb
dec
mov
push
push
ds
push
cmc
jle
loop
sarl
lods
hlt
outsl
xchg
pusha
rorb
dec
ficoml
xchg
outsb
dec
inc
imul
cmp
cmpsb
mov
adc
jl
fwait
xchg
aam
js
incb
lods
sti
into
mov
fistps
insb
pop
push
clc
ret
xchg
es
mov
pop
adc
cmc
repz
stos
sbb
ret
push
testl
xchg
dec
outsb
xor
ljmp
mov
xchg
mov
dec
or
pop
jnp
and
notb
insl
les
add
notl
repz
adc
xchg
lret
ds
lods
scas
sub
sarl
mov
cmpsl
pop
push
enter
in
jp
lret
stc
cld
je
mov
jnp
pop
pop
mov
insl
xchg
dec
xor
movsb
push
jns
mov
jge
imul
rcrl
loope
ja
mov
pop
rolb
aas
push
or
cmp
sub
outsl
movsl
push
nop
mov
cli
dec
cmpsl
flds
xchg
js
xchg
push
out
popf
mov
sbbb
aad
lret
cld
or
imul
lea
test
repz
xchg
in
leave
movsl
mov
clc
xchg
xchg
and
dec
pop
jecxz
jp
mov
sbb
and
int3
sahf
cmc
aad
ret
test
cmpsb
cmpl
or
mov
push
cmpsb
and
push
push
pushf
xchg
sarl
imul
jns
inc
add
push
xor
pop
clc
dec
js
adc
jge
mov
movsl
rcrw
out
pop
dec
fmul
mov
jnp
mov
mov
fistl
loopne
int3
cltd
lock
inc
jmp
push
pop
pusha
jp
loopne
in
lea
ja
push
pop
sub
cmp
in
dec
mov
xchg
or
mov
sbb
mov
stc
popf
pop
daa
fwait
dec
inc
or
xor
mov
pop
inc
inc
push
mov
bound
cmp
jp
shll
inc
add
out
pop
sub
outsl
loop
insl
ljmp
sbb
adc
mov
mov
sbb
sbb
outsb
mov
add
pop
mov
rcll
fs
fcom
mov
fdivrl
inc
enter
test
mov
pushl
adc
cmpsb
jle
adc
cwtl
add
mov
negl
pop
subb
push
mov
jl
cld
pop
faddl
in
mov
add
cltd
push
pop
popf
push
xorl
jne
lcall
mov
or
icebp
mov
dec
inc
out
pop
xchg
addr16
aam
xchg
insb
test
je
lods
add
sbb
add
cmpsb
or
and
lret
cmp
inc
cmp
dec
or
pop
sub
add
rcl
loop
push
sar
out
enter
inc
push
xor
or
cmp
xchg
or
mov
jle
test
jle
lret
pop
sub
fildll
add
das
mov
push
mulb
jecxz
outsl
in
mov
pusha
mov
sti
mov
inc
lock
aas
std
clc
sbb
insb
sub
sub
adc
push
jbe
cltd
cmp
pop
imul
xor
push
xchg
fwait
das
arpl
pop
sub
dec
or
repnz
sub
int
out
popl
mov
add
rorl
xlat
cmp
ffreep
aam
les
inc
jge
cld
adc
shlb
jbe
push
inc
jb
ja
mov
pop
nop
mov
xor
popf
mov
sbb
repz
xor
and
ljmp
dec
mov
shlb
test
fisubs
or
stc
pop
fs
push
ja
lret
sti
sbb
pushf
bound
xchg
or
pop
pop
js
fucomi
mov
sbb
push
cmpsl
xor
xchg
mov
mov
cmp
jns
repz
dec
jnp,pt
jge
cmpsl
mov
xor
rol
inc
mov
loop
out
das
idivl
js
push
test
ss
sub
call
fs
int
test
jo
scas
xor
test
xor
push
xchg
mov
jne
and
jmp
mov
add
loope
xchg
mov
stos
loop
loop
pop
xchg
lods
fdivr
stc
xchg
sbb
aad
xor
sub
add
mov
aam
cmp
jae
fimull
inc
xor
gs
push
out
outsb
das
dec
ret
stos
clc
dec
xor
cmpl
pop
loope
icebp
jmp
hlt
insb
dec
jmp
int
cmp
test
jmp
adc
out
xchg
add
jne
in
cltd
mov
adc
test
cmp
cmpsl
jl
mov
and
repz
xor
cwtl
pop
negl
jp
and
pop
mov
out
push
mov
mov
shll
out
scas
aaa
sub
pusha
add
sub
insb
lds
popf
scas
inc
jmp
int
rorb
mov
inc
and
pop
pop
andl
inc
inc
stos
les
scas
repz
inc
mov
ja
dec
in
sbb
lock
pushf
icebp
push
dec
cmp
fiaddl
inc
ret
pop
mov
lahf
rcrl
sbb
movsb
lahf
scas
push
repz
jbe
jge
out
push
fisttpl
inc
jge
cmpsl
jae
ds
aas
cld
mov
jnp
shr
mov
xor
pop
subb
popf
lock
movsl
std
sbb
add
xor
mov
repz
into
stc
push
cmp
jno
mov
mov
mov
pop
mov
ds
cli
mov
pop
icebp
xchg
add
movsb
out
mov
xchg
sub
test
sbbl
fmulp
dec
repz
adc
pop
cmp
lods
mov
inc
shll
or
mov
sub
pop
orb
pop
pop
dec
pop
adc
sbb
mov
repz
inc
js
pop
sub
cltd
rclb
mov
jmp
nop
pushf
or
and
rcr
lret
les
out
das
add
cmc
push
ds
or
pop
popf
mov
push
cs
xchg
mov
cli
xor
mov
aad
pop
insb
out
imul
inc
and
sub
rcrb
push
jle
lods
and
xchg
enter
push
cs
out
inc
sbb
and
in
push
popa
mov
mov
and
sti
and
fbld
mov
cs
sbb
push
cmc
jnp
pop
test
lds
push
dec
imul
or
ja
outsl
arpl
add
sbb
mov
push
shl
jae
xchg
test
cmp
shlb
mov
mov
in
dec
gs
loopne
fsubr
imul
adc
pop
mov
enter
or
mov
add
adc
push
cltd
repz
sbb
push
out
repz
sbb
and
pop
movsb
aas
ficoml
inc
cld
sbb
mov
push
aas
inc
sub
pushf
scas
decb
mov
pop
shlb
pop
ss
scas
jg
mov
flds
mov
mov
cmp
xor
jle
fdivs
adc
in
push
add
ficoml
add
test
xchg
decb
mov
adc
sahf
xchg
sub
fs
push
pushf
lret
push
xchg
mov
xor
daa
enter
punpckldq
int3
popa
lret
repz
nop
xchg
cli
mov
mov
fldenv
das
inc
idivb
dec
out
inc
mov
dec
test
dec
repnz
dec
dec
andb
aam
add
sub
je
cmp
imul
and
das
out
iret
into
mov
fistpl
test
sub
lret
xlat
or
xor
outsb
inc
fmuls
xchg
movsb
das
push
pop
cli
cwtl
gs
inc
iret
int
mov
sbb
in
pop
ret
jecxz
loope
roll
sub
inc
push
arpl
or
inc
je
popf
daa
int3
inc
test
mov
jne
push
std
mov
xor
dec
mov
sub
xchg
push
pop
jge
push
lds
shl
call
outsl
stos
mov
fimull
call
repz
jbe
je
jmp
sub
xor
jp
enter
mov
ds
imull
jne
pop
dec
inc
ficompl
mov
cmp
loop
arpl
ljmp
cmp
pop
push
mov
jg
iret
outsl
or
dec
divb
insb
inc
cmp
xchg
scas
mov
xchg
push
out
iret
movsb
sub
ljmp
sbb
or
daa
inc
push
push
lcall
repnz
leave
jge
sub
arpl
xor
mov
mov
negl
jle
dec
dec
pop
push
lret
ror
xor
cmp
int3
mov
and
nop
stc
rcl
orb
mov
add
repnz
cli
cmp
adc
test
iret
test
iret
xorl
and
inc
xchg
jns
pop
and
pop
sbb
push
imul
pop
and
test
movsl
cmp
and
sarb
ljmp
pop
je
mov
addl
fwait
stos
xor
add
push
mov
lea
stos
and
orb
dec
enter
enter
das
adc
adc
pop
stc
inc
fcoml
into
cmpsl
les
ret
rcr
fs
mov
fwait
sbb
cs
xchg
mov
sbb
fnsave
movsb
ffreep
pop
jge
cmp
adc
lea
adc
int
pop
mov
pop
loopne
dec
xchg
movsl
sbb
jp
or
out
int3
imul
dec
xchg
cmp
jle
xlat
jp
dec
jns
jg
or
movsl
stc
pop
push
scas
push
cmp
addr16
fs
sub
aad
movntps
int3
imul
pop
or
aaa
add
andb
in
in
or
icebp
outsl
xchg
mov
xchg
pop
jecxz
sbb
push
pop
xchg
orl
jo
les
pop
and
xchg
push
and
mov
cmp
sub
and
loope
bswap
mov
xlat
fdiv
sbb
jge
mov
outsl
push
aas
subb
xor
xchg
jecxz
inc
rcrb
in
add
divb
push
rcl
mov
push
shrb
or
stc
sub
loope
sub
adc
nop
add
insb
jns
lret
mov
insl
fsubr
daa
dec
xchg
arpl
xlat
cmp
js
icebp
add
xchg
mov
cmp
sbb
adc
stc
adc
pop
and
sbb
iret
sub
addr16
mov
sub
and
pop
pushf
or
or
testb
jbe
fsubrs
lods
add
fidivs
loope
adc
pop
movsl
dec
pop
movsb
popa
out
std
into
es
loopne
iret
rcll
xchg
andl
sbb
mov
andb
cmp
mov
and
sub
jg
cli
mov
out
movsl
dec
dec
xchg
mov
fistpll
sbb
cs
pushf
repz
std
mov
dec
pop
loope
sbb
inc
mov
xchg
and
stos
jno
sbbl
pop
test
jge
addr16
ljmp
dec
xabort
sub
cltd
dec
idivb
dec
loop
imul
jge
mov
clc
jecxz
out
fldt
or
cmpb
fucomip
cmp
stos
pop
clc
out
jl
and
xchg
addr16
mov
inc
mov
cmpsb
xor
out
xor
clc
xlat
hlt
fadds
ret
cs
adc
add
les
inc
jmp
pop
dec
push
es
cli
pop
mov
out
lods
icebp
loopne
rcr
or
adc
or
lea
icebp
cmp
loopne
test
mov
mov
xchg
outsb
clc
xor
data16
std
or
je
insb
xor
mov
xor
sub
and
outsl
pop
xchg
jecxz
iret
outsb
clc
dec
mov
cmc
dec
cmpl
xor
lcall
sbb
push
sub
mov
or
xor
shrl
out
sbb
int3
dec
mov
push
leave
lods
sub
or
and
mov
mov
fdivrl
mov
int
outsl
jp
cs
jg
idivl
push
int3
lods
cld
loopne
jge
xchg
mov
notb
dec
pop
cmp
cs
shrl
mov
dec
and
inc
hlt
jg
insb
xchg
repnz
push
out
rcrb
mov
dec
mov
sahf
jne
add
stos
stc
mov
insb
clc
inc
pop
insb
mov
fists
subb
stc
iret
shlb
sub
dec
out
out
mov
pop
pushw
repnz
xchg
cmp
popa
enter
mov
add
sub
and
sahf
mov
movsl
insl
inc
or
mov
addr16
or
mov
lock
adc
cmpb
popl
ss
hlt
cmp
lcall
push
call
add
sub
jne
subl
pop
loop
xor
test
xor
lahf
xor
fisttps
jle
jbe
out
inc
push
jle
pop
xchg
ja
into
or
sbb
pop
pop
cwtl
out
inc
add
fs
addr16
into
or
icebp
or
ficompl
aad
popf
push
xchg
cmp
test
inc
pop
push
xor
adc
adc
in
ja
lahf
sub
fldenv
xchg
pushf
hlt
and
stos
leave
iret
andnps
repz
inc
mov
fistl
sub
adc
ret
sub
or
into
stos
scas
sbb
adc
andb
inc
dec
push
cmp
add
in
jb
inc
pop
fs
bound
sbb
jp
and
aaa
xor
fcoms
adc
fs
mov
sbb
data16
add
rcll
sbb
imul
add
sti
inc
leave
nop
pop
aas
mov
hlt
movsl
pop
dec
pandn
popa
mov
inc
jmp
add
in
xor
gs
mov
jne
jl
xchg
cmpsl
int3
mov
sbb
xor
cmp
pushf
sbb
imul
imul
xor
cld
out
gs
shrl
dec
stos
dec
ja
icebp
mov
push
dec
mov
sbb
test
iret
inc
mov
mov
cmp
movsb
mov
mov
fstl
mov
repz
or
subl
test
imul
inc
lock
sub
sahf
sub
sbb
mov
or
adc
arpl
pushf
push
jl
jmp
enter
pop
rcll
xchg
lret
sbb
cmp
lea
shlb
jle
jmp
mov
out
xchg
mov
push
adc
sbb
movl
repnz
push
push
or
mov
shr
es
cmpsb
test
xchg
jl
fstpt
xor
clc
mov
or
clc
mov
jecxz
insl
andl
cmpsb
or
test
call
cmc
sti
out
shll
ja
sub
lea
or
mov
add
mov
mov
sub
adc
jge
mov
std
arpl
dec
fists
std
mov
pusha
pop
cmc
xchg
mov
dec
stc
cmpl
ds
mov
aas
test
mov
in
repnz
xor
invd
bnd
je
dec
aam
xor
jmp
insl
je
push
bound
pop
xor
insl
popa
mov
and
adc
xchg
lods
std
int3
and
push
hlt
push
hlt
scas
idivl
sbb
jne
sub
adc
add
sub
cmc
pop
jp
and
mov
push
jg
mov
sub
popa
and
pop
in
scas
xchg
mov
cmp
and
push
loop
call
ljmp
cmp
pop
loopne
loope
dec
hlt
cmp
in
lea
outsl
mov
mov
or
sub
push
pop
test
fstl
sub
lret
enter
inc
aas
sbb
stc
inc
int3
sbb
into
xchg
jg
pop
mov
push
aam
xor
js
popf
xor
push
pop
or
and
mov
jb
cs
xchg
mov
sub
sbb
mov
pop
iret
push
inc
aam
push
adc
mov
mov
and
inc
mov
ljmp
push
pusha
pop
ja
xchg
inc
call
ss
adc
and
xorl
mov
adc
push
push
xchg
jns
pushf
stos
xchg
repnz
ljmp
in
sbb
pop
std
xor
or
mov
xchg
shl
das
jmp
inc
jp
dec
in
decl
rcrb
jge
mov
dec
jg
jae
jns
lret
repnz
nop
dec
jno
or
push
out
ret
mov
jl
pop
pop
inc
es
sbb
cmpsb
fidivrs
scas
xchg
loope
fsubs
in
mov
insl
loope
inc
cmpb
mov
clc
mov
stos
out
leave
push
ficomps
inc
adc
pop
mov
dec
movsl
aad
xor
cmp
and
jnp
mov
push
inc
mov
cmpsl
cwtl
aam
push
lds
movb
data16
pop
fiaddl
mov
mov
lret
jl
aad
cmp
mov
sbb
inc
outsb
pop
lods
cmp
stos
gs
and
into
adc
mulb
sub
sub
mov
arpl
sub
mov
jno
xor
shrb
and
outsl
aad
mov
movsl
loop
stos
add
js
aam
cmpsb
fs
cmpsl
fildll
adc
dec
insb
xchg
flds
push
sub
jge
clc
or
les
xor
test
pop
sub
outsl
sahf
pop
xchg
xchg
test
pop
xor
sbb
fs
dec
mov
dec
cmp
mov
pop
cmpsb
push
fwait
mov
xchg
loop
lock
std
push
mov
cld
jae
sahf
int3
xor
xor
test
test
xlat
jbe
loope
xor
xchg
and
test
es
mov
push
ret
out
mov
fs
pop
mov
push
pushl
mov
loope
xchg
lds
push
daa
cmc
add
int
stos
mov
or
das
fadds
int3
or
out
or
sub
or
in
push
pushf
inc
aam
xchg
dec
add
aad
sarb
ret
int
daa
mov
rolb
cmp
xchg
ret
mov
pushf
xor
mov
mov
loop
scas
outsb
scas
sub
loope
xchg
push
subl
in
inc
or
add
xor
fcomi
sbb
outsb
pop
fisubl
push
cmp
lret
jb
mov
roll
mov
jl
ret
dec
mov
test
pop
in
mov
ja
rolw
mov
leave
xchg
and
stos
daa
sbbl
and
imul
pop
sti
jne
xor
jb
jge
jb
out
and
xchg
fsubrl
ss
and
and
mov
das
mov
cmpsl
sub
movsb
pop
std
in
inc
dec
scas
jns
fstps
inc
movsl
cmp
push
ss
cmp
lods
nop
std
popa
shr
sbb
aad
roll
repnz
mov
push
mov
test
movsl
popa
scas
pop
add
pushf
hlt
inc
push
push
jnp
lret
movsl
push
mov
and
das
cs
inc
inc
xchg
pop
mov
fsubrl
fnsave
mov
aas
insb
mov
enter
lea
push
bound
movl
loopne
adc
push
and
fidivrl
movsl
xor
mov
xchg
xchg
or
mov
inc
or
push
std
rcll
lea
int3
testl
jg
jns
aas
cs
es
jns
ret
outsl
test
xchg
push
pop
mov
fildll
and
add
xor
stc
sub
jnp
clc
test
fsubrs
std
pop
in
loop
xor
adc
pushf
push
push
imul
and
mov
inc
les
sbb
or
iret
mov
xchg
push
enter
aas
adc
jl
hlt
dec
jle
mov
mov
mov
xor
xchg
dec
mov
sub
stc
dec
jl
aaa
jns
mov
or
out
and
bound
mov
lahf
push
xor
fstpt
insl
xor
mov
lock
and
mov
fxch
mov
faddl
dec
and
lods
cli
mov
outsl
mov
mov
cwtl
repnz
imul
stos
xchg
mov
push
mov
rep
mov
push
mov
test
mov
jle
insb
fmull
incb
psrlw
jp
jmp
lock
mov
jns,pt
dec
pop
movsl
ret
hlt
dec
lret
pushf
dec
cli
sbb
ljmp
into
loopne
fidivrl
rcl
cmp
or
mov
insb
sbbb
ret
hlt
pushl
repz
fdivr
and
aas
cmp
xchg
shlb
insl
mov
sarb
adc
rcr
sbbb
jle
sub
pop
mov
jmp
or
inc
xchg
out
jecxz
arpl
push
sub
rcrl
int3
nop
cmp
xchg
adc
mov
leave
cli
mov
gs
repnz
xchg
stos
pop
leave
into
in
and
dec
and
fistps
mov
or
imul
movsl
jg
add
cwtl
adc
dec
imul
jnp
fimull
leave
adc
mov
push
jb
xchg
inc
daa
inc
ret
inc
outsb
arpl
add
inc
pop
stos
pop
aaa
mov
push
insl
and
inc
pop
jle
adc
push
in
test
cmp
push
scas
cmc
test
mov
jmp
mov
sub
das
inc
sub
lret
pop
fcomi
in
sarb
in
cmpsl
push
pop
psllq
es
cmc
dec
mov
clc
jae
mov
popa
insb
mov
das
ja
pop
insl
sahf
enter
in
cmc
mov
jl
dec
out
sub
inc
icebp
aad
xchg
cmp
std
das
stc
add
imul
push
xchg
test
mov
pop
out
pop
mov
iret
in
cmp
iret
sar
pop
jnp
in
adc
add
lods
xchg
dec
xor
mov
das
push
dec
xchg
fwait
mov
or
repz
bound
das
sahf
dec
sub
pop
mov
ja
xchg
xor
pushl
sbb
and
or
jb
jnp
lahf
mov
outsb
fdivrl
xchg
jno
aam
popa
pop
and
pop
daa
push
pop
std
dec
jge
aam
jne
fstp
mov
dec
ret
aaa
ljmp
mov
dec
ja
test
fcmovne
adc
into
fldenv
xchg
into
add
push
xchg
or
sti
add
cmpsb
xor
ret
pop
or
ficompl
push
sub
or
xor
les
pop
test
ret
jae
cmp
scas
pusha
adc
pop
push
pop
icebp
fs
ret
lods
add
mov
and
test
and
std
rcl
pop
into
dec
lahf
jbe
adc
lods
add
fsubl
inc
jl
xchg
stc
arpl
push
or
adc
jge
out
pop
sub
mov
inc
adc
divl
push
test
jb
xchg
addr16
jp
push
in
clc
or
dec
push
fbstp
or
iret
mov
inc
dec
push
xchg
rclb
inc
cmp
ret
xor
add
push
sbb
cmpsl
js
cmpsl
ja
scas
pop
jg
xchg
and
and
fwait
adc
add
int3
xchg
jle
xor
pop
adc
xor
lods
xchg
out
aaa
jno
cmpsb
daa
fcmovne
xchg
sub
in
bound
mov
sub
iret
jno
inc
imul
sbb
test
pop
imul
add
fmul
pop
fdivrs
jns
cmpsl
arpl
sbb
test
xorl
icebp
fdivr
ds
data16
repz
cmpsl
add
dec
lahf
jl
shll
push
dec
insb
push
xchg
loop
pusha
pop
movsl
lea
or
xlat
add
sub
add
cli
aaa
jmp
add
in
gs
les
adc
dec
clc
pusha
out
inc
in
inc
out
fsubrp
movsb
popf
xor
subl
jae
push
mov
int
insb
movsl
fbld
xchg
sti
sbb
or
inc
inc
rcl
xchg
pop
jae
int3
dec
sahf
cltd
fmuls
add
fisttps
jbe
adc
jne
iret
mov
out
pop
cmpsb
jl
ficomps
jnp
cmpsl
inc
ds
sbb
std
loopne
xlat
jo
jns
roll
mov
jnp
adc
mov
lock
stc
sti
aad
mov
loope
out
test
fidivrl
lods
mov
add
mov
inc
lcall
mov
inc
jmp
push
cmp
sub
mov
loope
inc
iret
add
test
push
pop
lahf
cmp
int
lret
leave
add
xor
es
mov
mov
in
jbe
ret
push
inc
cld
jle
adc
mov
insb
or
dec
adc
or
cli
adc
lods
push
adc
pop
pop
cmp
fwait
xor
iret
xor
jl
xchg
clc
xchg
je
or
loop
outsb
daa
pop
mov
mov
aaa
xchg
adc
ret
divl
test
roll
mov
pop
inc
sbb
fidivrl
push
and
in
insl
adc
jo
xor
push
and
jne
jnp
sbb
insl
lods
out
unpcklps
pop
jecxz
jge
dec
je
dec
pop
mov
xor
xchg
popa
sbb
inc
stos
stos
bound
sub
mov
mov
adc
sub
fnstcw
push
mov
or
add
ror
xlat
dec
cmpsb
jb
test
jns
cmp
inc
sbb
add
jmp
bound
push
out
push
pop
popf
gs
push
in
mov
add
repz
test
loopne
shrl
fldl
orb
mov
das
outsb
xor
jp
jg
out
mov
sbb
in
nop
dec
lea
out
pushf
mov
cmc
mov
jns
adc
push
sbb
mov
add
fisubrl
pop
fstl
xlat
aaa
sahf
mov
dec
loopne
mov
push
dec
repnz
out
hlt
pusha
rcrl
push
or
sbb
inc
xchg
xchg
inc
rcrb
push
dec
rorb
fmull
push
pop
ret
add
ljmp
add
leave
leave
jmp
add
dec
pushf
sbb
cld
dec
and
mov
sub
sahf
rol
dec
stc
inc
cld
mov
push
lcall
xor
mov
ror
mov
or
mov
mov
shlb
lcall
jl
cmp
cltd
add
lods
lahf
popf
add
jge
jns
xor
cmp
mov
and
popa
ror
into
stos
jmp
out
mov
addb
in
cmpsl
shrl
pop
add
pushf
jg
outsl
out
outsl
addr16
mov
jb
adc
sbb
icebp
and
hlt
movsl
adc
xchg
push
movsl
mov
loop
and
movsl
pop
fnstsw
dec
das
test
cmp
aad
and
icebp
and
cmpsl
add
lcall
imul
and
push
pop
insb
subb
ret
push
into
push
shll
jnp
sbb
push
pop
les
pushf
stos
sub
cld
push
lahf
sub
mov
iret
add
inc
jl
cmp
pop
dec
cmpsb
shll
shlb
jle
xor
jl
dec
repz
jne
dec
xor
inc
out
dec
mov
cs
ret
and
stc
les
xorb
test
repz
out
aas
jg
dec
xor
outsl
mov
bound
sub
adc
mov
cld
pop
cmp
inc
pop
rol
mov
xchg
mov
push
ljmp
daa
mov
cmp
aaa
xchg
lea
cmc
mov
add
pop
scas
jmp
mov
pusha
xchg
sti
pop
imul
mov
mov
test
jnp
add
ret
lret
jae
add
mov
outsl
test
xor
jnp
stc
scas
sbb
sub
ror
pop
lods
jle
lods
lahf
jo
pop
pop
nop
xchg
mov
stc
test
pop
mov
xor
mov
fcoml
imul
jno
or
repz
jg
sub
or
adc
fcmovu
xchg
cmpsb
inc
icebp
test
jo
push
movsb
cmp
iret
imul
test
in
in
repnz
mov
int
clc
ljmp
jns
adc
jbe
adc
cmp
sahf
rclb
xor
pop
inc
pop
add
cmp
hlt
cmp
adc
shll
jge
dec
dec
arpl
cld
into
xchg
push
ja
cli
cmp
lock
mov
jnp
bound
push
xor
xor
out
ret
push
cwtl
addr16
imul
jmp
addr16
aaa
pop
js
pop
lcall
mov
push
xchg
jmp
mov
dec
xor
insl
mov
lds
stos
arpl
sub
push
jmp
aad
inc
les
or
imul
scas
test
lret
dec
mov
mov
jmp
pop
or
hlt
aaa
sub
jmp
imul
sar
and
iret
repz
or
pop
inc
das
jne
loop
cwtl
or
fwait
jle
call
inc
jns
push
dec
xlat
ret
test
ret
fwait
cmp
leave
out
lcall
push
xchg
icebp
add
jp
mov
push
pop
insl
test
dec
and
pop
add
mov
leave
sahf
dec
in
outsb
xchg
les
or
insb
shlb
inc
pop
std
push
push
jbe
lcall
jl
aas
adc
icebp
out
in
jne
push
fnstcw
mov
xchg
cmp
mov
push
dec
jae
stos
and
out
sub
outsl
pop
sub
sbb
mov
jnp
mov
or
mov
test
lcall
jae
imull
stc
data16
and
and
mov
fimuls
sarb
mov
cmpsb
fidivrs
sahf
mov
sbb
pop
addr16
cltd
cmp
xchg
adc
mov
imul
das
fisttps
test
mov
lahf
repz
lods
push
dec
jae
dec
xchg
sub
mov
sub
data16
mov
pop
xchg
subb
flds
aas
inc
movsb
loopne
imul
jl
push
test
movsl
inc
stos
sub
mov
leave
lock
stos
nop
test
stos
addl
scas
shll
cmpsb
xlat
and
dec
add
nop
fadd
movswl
pop
or
push
loope
cwtl
daa
in
std
arpl
mov
sub
stos
es
repz
mov
pop
mov
pop
dec
stos
aaa
xchg
outsb
fwait
enter
jp
inc
jno
sub
push
scas
mov
pop
cmp
mov
push
pop
pop
scas
xchg
inc
stc
pop
shlb
or
mov
sub
stc
mov
fsubs
sub
inc
adc
aaa
lds
dec
dec
aam
clc
adc
pop
push
xchg
push
cmp
mov
jecxz
repz
jae
lret
out
pop
push
pop
xchg
out
sbb
xchg
push
and
notl
cmp
push
loopne
leave
imul
imul
lods
out
andb
xchg
int3
and
push
push
jbe
and
cmpsl
cmp
sbb
stos
or
mov
xlat
sahf
lea
push
push
sbb
adc
mov
mov
lret
mov
push
inc
repnz
cs
test
xchg
into
in
cmp
mov
mov
jne
ds
fcomps
aad
test
jmp
dec
push
push
cwtl
fistps
std
sub
ss
dec
sub
insb
fwait
aad
adcb
loope
xor
iret
movsl
adc
lcall
jecxz
add
fwait
rolb
ljmp
shrb
jne
lret
out
xor
lods
je
jae
pop
dec
xor
cvtpi2ps
push
lahf
dec
add
fisubs
data16
aad
and
stos
call
out
pop
push
out
xlat
std
loop
push
push
stc
or
in
arpl
mov
xor
andb
hlt
cmovp
in
repz
and
mov
movsl
cmpsl
outsb
fwait
pop
mov
dec
adc
jb
mov
ficoms
js
outsb
push
xor
das
push
or
jge
sbb
lret
loop
jb
imulb
ret
sahf
mov
stc
data16
dec
imul
mov
insb
in
xlat
shr
loopne
loop
test
adc
js,pn
sti
pop
fidivrs
inc
hlt
push
sbb
cmp
cli
mov
jl
or
movsl
addb
or
cs
jg
push
pop
imull
call
mov
sub
mov
loop
call
aas
std
repz
cld
jb
popf
cs
jne
push
and
add
sbb
push
push
mov
sbb
imul
insb
pushf
dec
hlt
add
adc
fnstcw
test
add
pop
popa
dec
and
sbb
inc
push
movsl
cmpsb
push
addr16
mov
xlat
dec
in
xor
test
mov
or
das
ret
inc
insl
stos
mov
loop
lcall
lea
ss
xchg
and
imul
xchg
inc
xchg
cmp
or
scas
jmp
jg
out
mov
push
adc
fs
ds
jnp
in
add
fldcw
jp
xlat
cs
jecxz
ss
push
mov
clc
arpl
xor
sbb
adc
ficompl
push
add
fmuls
dec
inc
loope
jle
out
mul
pop
pop
dec
xor
popa
scas
mov
les
xor
or
cmp
rcll
adc
xchg
pop
add
adc
scas
cmp
mov
push
mov
jo
iret
scas
test
sbb
sub
adc
insb
call
andb
popf
mov
call
dec
pop
je
daa
fstpl
jb
outsl
movb
daa
push
push
fadds
leave
adc
dec
pop
iret
jecxz
rcrb
mov
loopne
in
in
lret
mov
jecxz
push
jmp
pusha
sub
mov
testb
shrl
jbe
fwait
inc
and
stc
lret
icebp
inc
dec
push
cli
sub
stc
outsl
pop
add
mov
fs
and
call
cmp
out
into
mov
lods
inc
mov
out
imul
push
xchg
bound
ljmp
cmpsb
pop
sbb
add
les
test
jae
lahf
pop
repz
jecxz
push
and
dec
dec
insl
mov
inc
mov
add
idiv
mov
jl
fs
push
dec
push
mov
hlt
mulps
nop
push
sub
inc
dec
jnp
inc
or
fnstcw
mov
cld
push
adc
cmpsl
jle
xchg
rcl
cwtl
jno
lret
ljmp
je
jg
pop
insb
lcall
repz
xchg
dec
arpl
and
mov
xor
cmpsb
cld
arpl
arpl
es
xchg
xchg
cmpsb
das
xchg
int
xchg
ljmp
jp
aam
sar
into
add
xchg
insl
test
repnz
cltd
shrl
jle
sysenter
mov
push
pop
add
mov
xor
outsl
mov
dec
dec
dec
pop
mov
or
das
add
aam
repz
jne
cltd
adc
movsb
decl
dec
mov
andb
outsb
jecxz
push
std
fwait
nop
aaa
mov
cltd
push
xchg
or
out
push
scas
mov
cli
push
test
and
insb
dec
dec
aam
sbb
jge
clc
popl
cltd
imul
add
mov
inc
mov
lods
mov
test
pop
adc
stos
insl
and
aad
iret
popf
cmp
mov
jb
add
outsl
rcll
adc
jnp
push
mov
and
jbe
ss
enter
stc
mov
hlt
insb
jnp
fidivrs
mov
mov
xchg
xor
rorl
imul
out
inc
xchg
sub
fists
mov
adc
dec
mov
or
jge
push
sub
leave
mov
pop
and
xor
fcmove
stos
jne
push
mov
rorl
mov
icebp
mov
loopne
decb
loopne
imul
push
pop
flds
nop
xor
mov
and
pop
jae
rorl
sar
push
mov
les
sub
dec
mov
int
fcoms
or
xchg
push
jae
inc
push
mov
js
aaa
sahf
and
adc
gs
outsl
stos
jmp
add
dec
dec
shlb
xor
dec
inc
cmpsl
mov
and
xchg
or
cmp
xor
jmp
popf
psrlq
add
orl
rcll
jge
mov
push
lcall
inc
mov
je
pop
pop
rorl
mov
or
pop
in
push
push
ret
fcoms
in
out
lods
roll
frstor
xor
pop
pushf
sbb
cmpsl
lods
sub
test
sbb
mov
fildl
cmpsl
fwait
insl
mov
cwtl
imul
jo
mov
fistl
mov
aad
pop
clc
mov
loope
cmc
ret
ljmp
je
and
or
aam
xchg
lea
cli
in
in
arpl
lret
and
cmc
roll
outsb
add
imul
es
cltd
in
mov
mov
push
arpl
add
jp
aas
rcrb
push
dec
das
sbb
mov
lcall
lods
cmp
xchg
shrb
and
scas
adc
and
push
dec
add
movsl
mov
mov
insl
daa
mov
inc
and
sbbl
adc
popa
cmp
aaa
cmp
mov
fisubl
repz
jb
xchg
out
or
mov
sti
pop
ret
mov
mov
dec
add
movsl
jle
adc
ret
mov
xor
imul
mov
adc
pop
shrl
xchg
dec
inc
in
cmp
mov
xor
cwtl
add
mov
xchg
add
cmp
leave
shrl
cmp
mov
inc
stos
shll
jnp
xchg
clc
pop
lret
xchg
pop
adc
and
jmp
push
adc
loop
dec
call
mov
fidivrs
jo
mov
sub
and
xor
ret
sbb
sahf
xchg
popa
or
sti
aaa
scas
cmp
xchg
cli
loopne
mov
push
cmp
push
jge
mov
fwait
data16
shll
iret
mov
dec
add
rolb
push
int3
shlb
dec
xchg
mov
and
xor
xor
and
jno
cs
xchg
dec
sbb
decl
dec
rcrb
outsl
movsb
nop
inc
dec
sub
out
xor
hlt
push
jns
mov
sub
scas
ret
out
mov
add
pushf
movsl
adc
addr16
mov
adc
stc
mov
push
add
push
into
push
dec
notl
fidivs
lret
xor
jmp
mov
shl
xchg
xchg
aam
sbb
push
sub
push
rcrb
addl
cmp
dec
xchg
insl
iret
lock
gs
int
adc
add
in
sbb
rclb
ds
mov
sahf
out
jmp
sbb
jmp
movsb
clc
cmpsb
mov
dec
inc
jne
cmp
pop
lret
push
fmulp
mov
cmp
push
int
lock
inc
insb
cmp
test
adc
mov
and
mov
mov
adc
jno
lahf
sahf
test
mov
aam
icebp
mov
push
push
xor
js
aam
insl
rclb
bound
jb
scas
stc
mov
adc
mov
add
sbb
test
stc
add
push
fstl
mov
std
sub
mov
lea
pushf
add
pop
insb
pop
lods
fsubr
aad
cmpsl
lods
scas
je
mov
aam
jecxz
subl
rol
push
add
fisttpll
loope
pushf
aad
add
jb
pop
jnp
pop
sub
in
xchg
pop
insl
out
mov
mov
mov
test
add
daa
mov
mov
stc
jecxz
bound
xor
stos
dec
mov
jg
rcll
add
xchg
adc
mov
lret
ds
leave
mov
imul
stos
enter
in
leave
mov
jbe
in
mov
mov
imull
push
mov
pop
imul
jecxz
jno
mov
mov
xor
pop
push
test
sub
cmp
cmc
push
sbb
jecxz
mov
push
mov
in
insb
sub
xchg
inc
pop
out
push
outsb
xchg
push
mov
mov
or
inc
push
popa
imul
mov
cmp
scas
mov
xor
inc
push
scas
js
mov
or
fwait
or
arpl
inc
pop
ljmp
cltd
adc
fldcw
ret
xor
cmp
mov
imul
mov
jns
lcall
test
addb
stos
dec
xor
add
inc
push
inc
gs
mov
lret
cmp
mov
pop
sub
sbb
sbb
movsl
xor
or
fidivrs
popa
add
mov
add
mov
add
insb
mov
sub
repz
push
les
sarb
jg
push
sti
movsl
pop
sbb
mov
xor
out
outsl
adc
in
sub
in
stos
jecxz
outsl
mov
cmp
mov
lret
jmp
jb
test
mov
mov
mov
and
rorb
xchg
mov
paddusw
aas
mov
arpl
icebp
lret
pop
and
push
xchg
repnz
adc
popa
mulb
js
enter
or
add
adc
dec
fcoms
ja
adc
ret
mov
inc
mov
dec
clc
xor
dec
sbb
cmp
push
adc
fdivs
scas
adc
mov
mov
xchg
repz
sub
les
jbe
mov
and
jmp
mov
into
loop
pop
adc
mov
sub
jecxz
popf
aad
loope
int3
sbb
enter
add
out
imul
pop
sar
push
adc
push
shll
outsb
lods
mov
sbb
sarl
push
jo
rclb
push
pop
mov
inc
pop
ret
rol
in
addr16
js
adc
cmc
fs
mov
dec
mov
test
test
stos
jl
stos
pushf
inc
and
sub
xchg
icebp
mov
clc
insb
cltd
jne
popa
ret
mov
pushf
cmp
fadds
gs
scas
push
pop
and
lods
lea
in
sbb
test
into
mov
jne
add
inc
pop
mov
or
sbb
dec
std
test
xor
adc
call
sbb
sub
push
inc
mov
jno
push
test
hlt
adc
xchg
mov
mov
sub
sbb
and
fbstp
outsb
or
push
mov
gs
inc
bnd
clc
ret
out
inc
add
repz
adc
mov
nop
insb
shll
lahf
pop
mov
jno
mov
xchg
fidivrl
pushf
sarb
loope
mov
cmc
rclb
orl
jnp
sti
mov
or
xchg
pop
mov
jne
sub
imul
adc
movsl
mov
sbb
inc
add
add
xchg
cltd
movsl
insl
xchg
lahf
fimull
sahf
add
inc
inc
sbb
mov
mov
and
out
fsts
aad
and
sarl
inc
fisttpl
xchg
pop
mov
pusha
mov
add
adc
aaa
dec
out
pop
scas
test
loop
xchg
sbb
mov
shrb
in
mov
mov
push
mov
jae
mov
hlt
mov
outsl
mov
pop
fsts
inc
das
inc
sub
jnp
sub
nop
push
rcr
mov
mov
inc
push
movsl
cmp
xchg
mov
pop
sti
fwait
xchg
aam
in
imul
ret
or
cwtl
xchg
sbb
ljmp
mov
sbb
lahf
lcall
aas
scas
add
mov
push
dec
push
inc
mov
insb
jae
sub
adc
cmp
mov
mov
rcrb
cwtl
cmpl
test
jns
ficoml
jnp
dec
inc
inc
dec
cmp
push
pop
outsl
push
sub
mov
or
or
psubd
inc
dec
arpl
roll
xchg
cs
int
or
jmp
pushf
mov
sub
add
fmuls
pop
cmp
imul
push
push
leave
je
cmc
sbb
aas
lods
loop
jmp
dec
push
sbb
aas
outsl
adc
xchg
push
sub
fadds
xchg
mov
mov
ds
dec
inc
inc
cld
jns
jmp
and
nop
mov
andb
insb
push
sub
ljmp
addr16
and
test
test
adc
clc
test
mov
movsl
std
jle
push
mov
jns
and
add
add
and
adcb
andb
int
cmc
mov
xchg
orb
iret
mov
aaa
inc
mov
dec
sbb
cmp
add
int3
adc
inc
cltd
mov
js
pop
or
push
movsb
pop
out
addr16
ret
loop
adc
push
sub
cmpsb
mov
int
or
daa
and
mov
out
sub
in
or
insl
pop
and
push
test
xchg
test
scas
inc
push
adc
adc
mov
out
add
mov
cmp
push
or
xchg
xor
ret
outsl
or
push
xchg
fldenvs
mov
popf
test
jo
push
mov
xchg
mov
dec
loopne
out
loope
or
jle
cmp
or
cmp
sahf
sbb
loopne
xor
fbstp
jbe
fiaddl
xchg
sti
mov
enter
ficomps
out
xor
push
mov
aas
or
in
xchg
inc
outsb
fcomps
cmc
pop
xchg
icebp
jecxz
xor
std
adc
nop
sti
mov
pop
jno
aam
cmp
sbb
mov
stc
dec
pop
in
lea
pop
test
subl
push
mov
test
insl
rol
test
mov
orl
in
add
jbe
xor
rolb
jl
xchg
or
xor
jb
xchg
rorl
or
in
mov
push
sbb
and
jmp
nop
jp
out
cmp
popa
xor
cmc
sarl
push
in
faddp
add
xchg
cmp
js
sti
ficoml
xorl
sub
iret
aam
repz
das
js
inc
scas
movsb
mov
pop
jg
repnz
movsb
popl
fst
sbb
daa
scas
xorb
jl,pt
jl
ds
push
mov
ficoml
jp
daa
in
inc
cmp
js
incl
in
iret
in
ja
dec
imul
cs
rcrl
fcmovnu
pop
test
push
xlat
mov
jmp
outsb
mov
outsl
xchg
out
std
fsub
mov
mov
xorb
ret
stos
cmp
push
mov
jecxz
lock
dec
lahf
and
push
pop
pop
adc
xchg
add
ljmp
mov
xor
pushf
xor
fdivs
mov
pop
xor
jge
sub
test
sbb
outsl
mov
cmp
je
jo
insl
pop
lret
push
pop
mov
addr16
cmc
adc
and
cmp
sub
in
xchg
cmp
sbb
xlat
ljmp
adc
or
ljmp
dec
stc
add
dec
mov
xor
aad
insl
jecxz
add
xchg
push
jb
sbb
push
push
incl
lcall
mov
xchg
adc
adc
lret
nop
dec
sub
dec
scas
das
arpl
test
out
and
shr
inc
pop
lods
mov
orl
mov
adc
sbb
int
xor
mov
add
in
or
inc
pop
xchg
dec
aas
sub
inc
add
popa
or
inc
inc
imull
mov
add
mov
fs
jne
or
pop
cmp
imul
push
les
adcl
enter
push
lret
das
inc
or
adc
scas
dec
loopne
dec
les
sbb
push
sub
cmp
shr
dec
dec
pop
into
xor
loopne
lods
inc
jns
dec
inc
ret
xor
dec
movsb
jae
mov
imul
pop
adc
sub
in
jnp
dec
out
outsl
add
mov
dec
push
sbb
cmp
lock
sbb
mov
jae
lods
mov
cmpl
xor
inc
fbld
orl
cmp
pop
fldcw
push
std
dec
dec
jecxz
nop
aaa
xor
push
sub
shlb
jo
jg
repz
jno
sub
or
or
xchg
cli
push
or
dec
cmp
out
lods
cld
push
pop
pop
and
leave
lret
mov
addr16
jne
mov
mov
mov
xchg
sahf
sbb
or
scas
jns
jecxz
push
lret
sbb
jnp
xchg
push
bound
pop
jo
xchg
sub
test
cmp
cmc
push
xchg
mov
cmc
pop
in
or
mov
rorl
mov
lock
and
mov
fsubrs
mov
repnz
pop
push
adc
mov
pop
xchg
pusha
arpl
inc
mov
cltd
jmp
push
clc
jns
addl
aas
test
lea
pop
adc
push
mov
push
add
mov
adc
je
ret
mov
dec
or
out
cwtl
lahf
xchg
xor
das
mov
cmp
sbb
dec
repnz
xchg
mov
clc
cltd
pop
and
jle
push
movsb
mov
mov
cmp
mov
cmp
jge
std
scas
jle
subl
mov
pushf
inc
test
movsb
push
mov
sub
xor
cmp
outsb
sub
clc
xor
xchg
mov
mov
loope
and
icebp
mov
in
inc
xor
mov
movzwl
in
out
sub
nop
mov
nop
jecxz
imulb
push
adc
lock
xor
pop
pushf
std
movsl
retw
insl
push
enter
sub
xchg
add
fwait
xchg
add
xor
push
push
sahf
loope
fldt
push
insl
inc
adc
push
xor
sbb
xor
fwait
fwait
cmp
or
push
push
inc
daa
enter
mov
ljmp
sub
insl
sbb
lds
cs
enter
mov
dec
jle
aad
cli
mov
inc
mov
cli
inc
sub
push
or
je
in
push
pushf
shll
or
nop
xor
stc
mov
xchg
cs
or
add
xchg
mov
pusha
cld
sub
repz
xor
into
ljmp
loopne
ljmp
sub
xor
push
pusha
or
mov
pop
call
out
leave
call
mul
pop
mov
push
add
rclb
push
popf
outsl
push
sbb
mov
stc
or
mov
out
add
aas
cmp
ds
xchg
insb
mov
mov
jge
cmp
xor
push
jecxz
popf
mov
cmp
in
add
xor
popf
inc
in
xorb
jne
and
dec
push
xchg
xor
hlt
int3
cmc
out
pop
sbb
and
mov
mov
mov
xorl
pushf
mov
clc
dec
xchg
xor
rcl
movsl
sbb
sub
pusha
jg
inc
lds
or
clc
fadd
pop
int
idivb
cmp
das
cld
loop
dec
sarl
in
rorb
push
test
stc
push
imul
sarl
sub
mov
insb
sub
dec
push
mov
push
cltd
push
ss
ds
dec
out
and
icebp
movsl
cld
inc
xor
movsl
mov
mov
dec
lea
nop
inc
push
in
add
dec
add
pop
cmpsl
adc
ljmp
jne
test
cmc
rcll
inc
mov
fistl
cmp
jmp
or
pop
gs
cli
ds
dec
or
jbe
aas
xchg
scas
add
adc
inc
xchg
jne
pop
fldl
mov
push
sbb
pop
js
sti
or
mov
and
loope
mov
jmp
jnp
sub
jne
mov
pop
inc
popa
lcall
aaa
mov
in
shlb
sub
loopne
cmp
stc
loop
test
adcl
jge
add
xchg
cmpsl
sub
cmp
add
add
pop
ficomps
inc
sbb
xor
jl
sub
mov
outsb
stc
pop
push
ss
pop
lds
std
add
fcmovu
cld
xchg
mov
adc
cmc
ss
rcll
sub
cli
jecxz
xor
sahf
mov
and
xor
and
hlt
mov
call
repz
xchg
sbb
mov
in
jle
xor
xchg
gs
xchg
lea
lea
sub
mov
inc
push
ds
test
cmp
jno
imul
jle
xlat
sub
or
push
fcompl
jnp
aaa
lods
cmp
lock
popa
mov
lcall
xbegin
adcl
jbe
jecxz
shll
pop
cs
into
cmpsl
pop
ljmp
mov
pushf
cmp
xor
xchg
subb
stos
imul
hlt
dec
inc
xor
inc
in
xchg
mul
xlat
jmp
shlb
jp
mov
repnz
add
stc
sub
xchg
cmp
vpsubw
jge
push
rcrl
cmpsl
jge
outsb
test
push
stos
fisttps
adc
mov
pop
cs
imul
add
mov
adc
out
call
sbb
int3
mov
and
repnz
cmpsb
pop
add
or
adc
dec
lock
push
mov
jns
mov
dec
inc
cmc
cmp
das
cmp
inc
fwait
jle
popf
stos
scas
cmp
ret
lea
cmpsb
mov
mov
data16
dec
or
data16
pushf
in
loopew
loopne
lret
cmp
mov
test
cmpsb
or
mov
adc
fmull
push
cwtl
call
sbb
cmpsb
icebp
imul
loope
arpl
lds
sub
mov
mov
mov
sub
std
in
icebp
in
add
int3
mov
fstp
jl
fsts
shrb
aaa
mov
inc
lcall
and
outsb
imul
dec
dec
and
pop
cwtl
pop
outsb
add
xor
cli
mov
lcall
cmpsb
xchg
pop
cmp
rolb
sbb
pop
lahf
cmp
aaa
aaa
cli
dec
repnz
jo
pop
nop
sbb
inc
aad
je
push
and
inc
arpl
loopne
arpl
dec
scas
mov
dec
jecxz
push
arpl
mov
xlat
repnz
out
xor
outsl
xchg
inc
xor
rcrl
cmpsb
push
fistps
shlb
pushl
mov
in
std
sub
adc
mov
rclb
cmp
mov
push
loopne
push
repz
enter
adc
push
mov
jo
dec
dec
adc
xchg
push
mov
lods
loop
ret
or
or
sbbl
inc
inc
sbb
cli
add
ja
mov
nop
add
push
pop
mov
dec
mov
mov
sti
inc
fnsave
rorl
adc
inc
mov
cmpb
outsb
je
nop
jecxz
loope
adc
mov
pushf
mov
je
push
jl
inc
es
dec
pop
sbb
mov
push
cmpb
or
stc
movsl
mov
cmp
mov
adc
push
cltd
cmp
or
add
sbb
clc
movsl
xor
sahf
mov
inc
adc
icebp
cltd
sub
ljmp
mov
out
jo
pop
fdiv
repnz
push
pop
dec
ja
test
leave
sub
mov
loopne
pop
sub
xor
pusha
or
jp
in
cmp
xor
cwtl
lods
sbbl
fsubs
cmp
fs
jb
ss
xchg
adc
test
imul
in
aad
push
iret
in
pop
xor
hlt
mov
fadds
dec
mov
pop
int3
mov
aam
sti
cmpsb
jle
xchg
dec
clc
push
std
mov
mov
lahf
in
lods
mov
mov
dec
push
pop
adc
mov
mov
sub
mov
lret
jl
xor
je
mov
cmp
xchg
insb
fwait
and
push
jl
shrl
int3
stc
adc
sahf
xchg
lods
in
cltd
push
daa
pop
out
adc
sbb
rclb
in
cmp
xchg
into
push
idivb
out
push
push
out
cli
repz
test
lret
cmp
fisubs
ret
sub
scas
lret
js
in
cld
nop
mov
inc
outsl
push
mov
loopne
mov
xor
std
in
and
xchg
dec
sahf
ret
add
idivl
aaa
and
xor
mov
or
xchg
mov
inc
addr16
cmc
fildl
jp
and
xchg
mov
push
add
pop
xchg
sub
sub
xor
cltd
push
jg
pop
add
mov
movsb
andl
addr16
mov
call
rorb
jns
mov
add
pop
testl
push
arpl
hlt
jecxz
or
cltd
sti
call
daa
fmull
dec
mov
mov
cmpsl
sub
fwait
pop
enter
cmp
xor
dec
rorl
or
pop
push
int
and
adc
out
sub
lods
cmp
inc
idivb
dec
or
int3
push
and
mov
pushf
inc
lods
push
ljmp
lcall
xchg
jle
mov
stc
xchg
lods
cmp
gs
jg
add
cwtl
lods
inc
mov
jg
mov
or
push
xchg
stc
shlb
sub
sar
addr16
rcrb
cld
dec
aam
js
fstpl
insb
mov
mov
or
xchg
or
inc
es
cmp
add
cs
inc
inc
fs
add
pop
add
add
sub
mov
inc
add
adc
sub
cmp
xor
cld
lcall
add
jge
cmp
shlb
cmp
push
fsincos
mov
add
jg
sbb
adc
add
jb
add
lods
ljmp
lcall
xor
push
icebp
mov
xor
out
lea
cmp
cli
test
mov
jecxz
jns
mov
xchg
hlt
call
or
cli
mov
mov
and
loopne
add
outsl
jbe
loopne
and
cmpsl
mov
lret
cmp
lea
aas
ja
add
or
pusha
mov
adc
dec
push
les
imul
mov
xor
mov
insl
mov
add
xchg
into
test
popf
dec
out
cmp
arpl
pop
repz
mov
push
jle
movsb
dec
pop
fs
lahf
xor
hlt
dec
sbb
add
pop
insl
jle
push
les
push
sub
xchg
mov
mov
lods
adc
add
xlat
mov
xchg
pop
cmp
cmp
pop
insb
arpl
mov
mov
sbb
ss
sub
xor
fidivl
jecxz
mov
mov
mov
add
dec
test
lahf
jns
mov
cmp
cmpsl
dec
lcall
pop
pushf
pop
fcom
hlt
push
in
pop
push
stos
loopne
outsb
cli
lea
sub
jg
repz
aas
pop
pop
lcall
decl
out
add
cmp
push
inc
or
lahf
push
sahf
scas
lret
adc
add
xor
lods
mov
shlb
bound
jl
les
aaa
in
dec
cmpsb
dec
in
aas
jno
and
sti
mov
ljmp
add
adc
je
rorl
pop
xor
dec
cmp
mov
call
fcmovu
and
je
push
mov
int3
pop
add
fs
cmc
cltd
daa
jl
add
outsl
sar
mov
call
outsb
cld
shl
divb
cltd
shr
mov
fwait
mov
aam
dec
xchg
inc
out
cmp
xlat
push
out
int
xchg
mov
add
and
in
cs
hlt
inc
mov
imul
test
cmpsl
aad
ljmp
insb
shr
inc
inc
sbb
hlt
sbb
notb
jp
arpl
icebp
xchg
dec
mov
mov
lret
lods
pushf
arpl
fnstsw
stos
mov
mov
cmp
mov
mov
cld
les
add
and
pop
jno
sub
mov
adc
push
push
pop
adc
push
push
insb
push
pop
sbb
lock
pop
out
mov
sarb
dec
daa
stc
inc
bswap
mov
in
call
inc
fcomi
je
data16
movsl
push
imul
stos
enter
inc
test
mov
adc
pop
sub
cmp
cmpsb
mov
jl
add
test
lea
movsl
jae
int
xchg
fcmovnu
outsb
outsb
and
push
int3
adc
jb
mov
in
dec
mov
out
movsb
push
cltd
pop
sbb
jne
xchg
jnp
sub
ret
fs
xchg
push
cmpsl
jl
or
mov
inc
jp
mov
fildl
jo
and
fadds
ss
mov
dec
hlt
sub
xchg
inc
and
leave
das
aas
push
inc
jg
jge
pusha
inc
pop
inc
sub
inc
jp
add
adc
shll
icebp
rclb
insb
push
push
xchg
mov
push
xchg
sbb
fstps
sahf
out
shrl
sbb
mov
or
xchg
std
andb
adc
adc
rorb
pop
loop
roll
add
inc
rorb
lret
pusha
mov
and
dec
or
mov
inc
jp
push
sub
jl
rolb
inc
add
test
and
mov
sub
aaa
adc
inc
outsl
mov
lods
lods
sub
jl
sub
pop
pop
pop
sub
xor
jb
fwait
dec
cmp
int3
test
hlt
inc
or
loop
sbb
cmp
insb
aas
xchg
cmp
sbb
push
loop
and
leave
sbb
mov
or
push
xchg
or
pop
hlt
cmp
leave
bound
add
add
mov
lret
std
push
cli
call
leave
cli
call
push
adc
popf
mov
int3
stc
pop
mov
icebp
ja
fs
adc
xor
mov
not
mov
pop
fimuls
enter
push
xchg
mov
mov
shlb
jae
daa
push
mov
imul
adc
cltd
fldl
mov
add
sbb
fcomp
cmp
fucomi
jmp
dec
pop
stos
loopne
mov
dec
mov
fsubs
inc
cmpl
or
sbb
cmp
sbb
inc
es
popa
icebp
jnp
mov
lds
mov
xor
push
mov
fstl
cwtl
ret
sbb
push
and
out
mov
outsl
popa
xchg
xor
and
adc
bound
arpl
jnp
add
js
or
data16
das
jmp
dec
leave
scas
in
lods
xchg
incl
add
jne
shll
pop
mov
sysexit
sub
pop
pop
sub
pop
xor
adc
cmp
movsl
lea
pop
fwait
mov
pop
addr16
inc
mov
data16
mov
cmc
jbe
inc
mov
mov
movsl
and
inc
shrb
mov
in
mov
lahf
push
mov
loopne
movsl
add
inc
dec
arpl
xchg
xchg
orb
jae
jae
jne
sub
loop
push
loope
xor
loope
cmp
js
dec
xchg
in
inc
in
mov
lahf
lret
and
adc
call
shlb
sub
push
ret
xchg
test
stos
cltd
and
or
nop
sbb
sub
sub
sub
pop
mov
loope
add
jl
fsubs
cltd
mov
testb
mov
xchg
xlat
xchg
ljmp
mov
rcll
xchg
or
push
xchg
arpl
stos
jbe
xor
mov
xor
call
adc
test
das
xlat
and
jnp
cmp
out
lret
out
inc
repz
mov
jl
nopl
je
jle
sub
mov
xlat
mov
sbb
pushf
roll
fisubl
sub
clc
mov
fldcw
sbb
into
popf
in
bound
cmpsl
push
pusha
inc
cli
and
aas
lock
imul
in
pop
mov
or
sbb
mov
add
jne
pop
jp
sti
pop
push
xor
test
sub
push
mov
xor
in
vpcmpeqd
cmp
popf
test
sbb
inc
dec
es
cld
fwait
lods
xchg
mov
mov
or
in
aad
shl
push
inc
shrb
push
fidivl
lods
movsl
ficomps
dec
stos
inc
push
fcomp
ljmp
psubd
sub
les
pop
sbb
pop
adc
les
nop
rcrb
push
cltd
int
adc
push
lret
mov
int
iret
xchg
ffreep
or
xchg
xchg
jg
sbb
xchg
test
xchg
hlt
jae
xor
jp
mov
xchg
arpl
mov
jge
cwtl
lahf
notb
xor
push
pushf
add
cmpsl
pop
pop
jne
out
cmp
sbb
and
ds
ret
jae
call
mov
xor
pop
xchg
add
mov
add
jmp
jb
sbb
mov
mov
scas
nop
or
fcoml
xchg
dec
cmp
popf
mov
mov
mov
js
xlat
push
pop
les
dec
test
rorb
popa
lcall
jmp
mov
sub
test
mov
test
and
or
jp
loopne
mov
pop
popf
imul
sub
decb
test
pop
cmp
jns
es
pop
add
imul
dec
movsb
sub
outsl
shll
mov
neg
cmp
adc
cmp
shrl
jmp
push
addl
mov
adc
push
and
cmp
pop
jmp
xor
xor
xchg
sbb
xchg
adc
fucomip
inc
xchg
es
or
and
cwtl
mov
in
or
icebp
std
pop
insl
fildl
xchg
adc
out
rcr
aam
or
ret
sub
add
gs
out
pop
repnz
div
and
mov
mov
adc
in
std
scas
outsb
jp
adc
adc
mov
lret
aas
fists
testb
stos
and
test
mov
call
inc
cwtl
popa
pop
test
push
jnp
pop
movb
enter
sti
dec
mov
push
add
aam
mov
lret
jbe
xchg
xor
mov
inc
cmpsl
push
lds
out
or
cmp
test
mov
sbbl
inc
sub
fs
pop
punpckhdq
xchg
imul
dec
cmp
xchg
dec
orl
sbb
lahf
aaa
sbb
dec
rolb
push
and
bound
jmp
jmp
mov
pop
xor
out
leave
fsubl
xchg
daa
and
mov
mov
aaa
mov
subb
in
lods
inc
cwtl
push
xchg
dec
cwtl
or
and
add
mov
test
fimuls
ss
sbb
lds
jmp
mov
mov
mov
mov
rcrb
call
out
cmp
xchg
fdivr
xor
sti
aaa
cs
add
cmpsb
andb
jmp
repnz
mov
jecxz
fsubs
or
adc
xlat
test
pusha
push
les
ds
jne
repnz
cmp
add
push
jns
jno
nop
aas
fidivrl
repz
shll
les
and
sti
mov
jge
inc
mov
pop
ljmp
insb
mov
out
dec
loope
jle
insl
push
inc
bound
pop
add
jge
cmp
ljmp
subb
and
gs
jg
mov
add
add
fwait
inc
repz
mov
mov
in
cmc
mov
test
or
jo
xor
sbb
mov
mov
notl
test
push
xchg
popa
xchg
daa
insb
lcall
or
repz
and
dec
loopne
mov
jle
scas
icebp
mov
dec
cli
mov
popf
fisubs
jecxz
sub
stos
in
fisttpll
jg
xchg
or
pop
dec
popf
clc
cmpsl
rcrl
daa
jae
sbb
rorb
push
ljmp
or
lea
inc
mov
stc
mov
fsubrl
push
shrl
fistpll
or
bound
dec
fwait
cmp
xchg
xchg
sbb
pusha
push
iret
and
inc
stc
inc
mov
xor
xor
enter
cs
arpl
mov
or
bnd
leave
fsts
filds
add
cltd
xor
les
xor
cwtl
data16
pop
pop
mov
lea
adc
iret
dec
xor
jge
call
mov
shll
and
call
jg
push
mov
je
inc
hlt
ja
repz
aad
jmp
movsb
sbb
in
mov
pop
incl
cmp
mov
cltd
sub
jp
mov
adc
shrb
cwtl
pop
jg
fldt
test
xor
push
scas
lock
xor
es
mov
inc
dec
mov
hlt
xor
xchg
ja
stos
subb
mov
sub
test
orps
mov
loopw
dec
mov
cwtl
ljmp
jns
or
lods
jbe
xchg
or
push
pop
sbb
shlb
mov
nop
in
test
cmp
js
out
xchg
mov
lods
mov
dec
inc
in
cmpsl
aas
push
inc
cmp
arpl
mov
js
pop
fsubrp
fsubl
addr16
lock
pop
pop
mov
add
adc
arpl
mov
mov
ljmp
lds
pop
ss
cltd
lea
sbb
fstl
adc
dec
aad
mov
loop
sti
out
mov
cmp
sbb
mov
pop
fnsave
dec
int3
repz
push
scas
cltd
sbb
pop
repnz
xchg
std
adc
add
out
enter
lods
sub
pushf
lret
xlat
daa
leave
out
out
jns
pop
lods
xchg
push
into
pop
out
popf
xchg
xchg
cmp
mov
ljmp
ret
dec
push
dec
push
shll
inc
add
mov
xor
push
outsb
cmp
dec
xlat
add
xchg
outsb
mov
push
inc
lods
lods
jnp
sub
je
pop
adc
cmp
rolb
in
mov
add
mov
stc
call
icebp
sub
inc
mov
sbb
nop
mov
push
xchg
scas
call
sbb
sub
mov
test
lea
jo
mov
mov
xor
test
lret
mov
xor
cmp
lods
les
xor
pushf
cmp
outsl
leave
mov
add
cli
xor
mov
data16
fsubrs
fwait
sub
inc
lret
adcl
lahf
adcb
push
jb
push
rorb
popf
mov
adc
and
cs
data16
sbb
jg
mov
nop
dec
or
sbb
inc
add
repnz
jle
icebp
xor
mov
test
sahf
popl
mov
or
out
sub
cmp
xchg
xchg
jge
repz
xor
rcll
jge
jecxz
cmp
lods
dec
add
cltd
idiv
cmp
jecxz
adc
fwait
cli
test
pop
aaa
add
fmuls
sbb
adc
iret
int
shr
xor
jle
and
rcrl
jmp
mov
dec
dec
xor
or
push
notb
lret
and
mov
shl
xchg
jle
call
cmc
add
xor
pop
movsb
cmpsb
out
xor
adc
mov
or
sbb
push
push
jecxz
faddp
sbb
push
repz
insb
jge
js
or
and
fsubs
or
jmp
faddl
movsl
cmc
test
movsl
inc
xor
das
mov
scas
repz
hlt
std
sub
mov
pop
icebp
mov
sti
lea
jno
push
ja
mov
test
pop
inc
dec
loopne
jb
int3
sub
jl
xor
add
mov
sbbl
push
mov
sbb
popa
test
mov
pusha
mov
push
shlb
pushf
mov
mov
sub
pusha
xchg
mov
ret
or
add
cmpsl
ret
lret
mov
rcll
gs
pop
mov
push
xchg
dec
inc
test
mov
jmp
mov
lds
jp
in
enter
aas
xchg
sbb
jmp
sub
in
xor
dec
sti
jb
fisubs
mov
nop
rcrl
jecxz
aad
pop
shll
cmpsl
push
sarl
or
cmpsb
mov
in
insb
stc
jo
sbb
ficoml
mov
clc
mov
pop
imul
stos
out
mov
and
fucom
push
stos
cmc
fcomps
lea
xchg
push
nop
fwait
and
pushf
mull
idivl
push
pop
fs
daa
sbb
je
dec
push
push
add
push
sub
sub
adc
cmp
sarl
mov
mov
pop
and
adc
fdivs
lcall
pop
pop
ror
sbb
daa
test
xchg
or
fildl
js
push
add
jne
inc
cmp
andb
andl
mov
pop
mov
mov
sbb
xor
push
fwait
repnz
aad
out
cltd
pop
hlt
sub
push
test
pop
cmpl
div
pop
mov
cli
fidivs
inc
sub
mov
mov
arpl
or
mov
cwtl
xor
fnstcw
dec
cmp
push
and
ljmp
andb
xchg
mov
jge
aas
je
cmp
fwait
outsb
cmp
popa
adc
xchg
mov
sub
popf
cs
and
je
icebp
nop
push
movsl
test
imul
push
icebp
xchg
sbb
sahf
pusha
xor
adc
add
subb
adc
push
push
into
xor
inc
xchg
xchg
pop
out
ljmp
mov
inc
jns
cmp
xor
stc
sbb
cld
addr16
mov
add
outsl
sub
ds
inc
gs
mov
in
mov
popa
cmp
jbe
pop
ljmp
cwtl
mov
mov
gs
rol
mulps
add
fwait
mov
neg
add
jl
fdivl
mov
xchg
fisubrs
fstl
xchg
sbb
jmp
imul
pop
sbb
inc
inc
cmp
cmp
ss
xchg
jmp
mov
cltd
addr16
insl
sub
sti
movsl
sub
xlat
insl
xchg
into
fcoml
add
push
xor
mov
pop
mov
mov
mov
jo
mov
xor
sbb
lds
imull
inc
sub
add
or
cmp
sbb
push
jp
mov
add
xor
mov
pop
addb
mov
adc
inc
ljmp
push
ror
testl
inc
mov
mov
mov
das
mov
or
shll
xor
shll
sbb
fmulp
mov
out
test
mov
cmp
jl
jns
jecxz
daa
and
xor
dec
push
ror
shll
mov
in
rcr
push
lock
outsl
mov
jp
push
lods
jg
push
cmp
lahf
jbe
xor
or
mov
add
mov
mov
fldt
leave
push
mov
dec
sub
or
jmp
pop
pop
sarl
add
inc
push
shrb
cwtl
sbb
xor
jge
aam
ss
pop
ret
int
cld
jg
dec
ds
mov
movsb
inc
push
gs
xor
pop
movsb
mov
mov
rcll
mov
push
pop
repnz
sbb
fiaddl
jl
insl
xor
in
stos
lods
sub
mov
in
add
lods
lods
dec
shll
adc
in
push
xchg
ds
pop
sbb
xor
pop
mov
sahf
xor
rclb
popf
and
inc
leave
imul
incl
xchg
dec
add
jno
cvttps2pi
adc
jge
xchg
add
jne
lahf
mov
sarb
sbb
push
sbb
loope
mov
jg
lret
mov
mov
cwtl
popf
and
test
rolb
jb
push
or
push
xchg
aam
inc
imul
loope
mov
mov
adc
push
out
mov
dec
mov
xchg
mov
mov
pop
dec
dec
pusha
aam
call
fnsave
idivb
cmpsl
rorl
addr16
mov
add
push
addl
jnp
adc
mov
mov
jecxz
stos
push
dec
xor
cmp
dec
mov
pop
push
lods
pop
lea
aaa
std
jl
mov
and
pusha
and
lret
hlt
cmpsl
into
xorl
fmuls
lret
out
cmp
sbb
dec
ljmp
sarl
das
sahf
mov
mov
mov
add
pop
mov
cmc
adc
addr16
jbe
aas
push
repz
cli
xor
jle
mov
xor
mov
or
and
jnp
scas
jb
pop
test
xor
icebp
pop
lcall
sub
push
xor
sbb
fadds
mov
ficomps
stos
jl
lock
int3
mov
cmp
divl
pop
dec
test
jbe
sub
cmpsb
out
sub
jp
dec
ret
fs
jle
rcrl
cmpsb
mov
subb
push
jmp
hlt
jp
and
bound
lea
jno
jge
in
into
into
enter
pop
push
push
lock
push
and
cltd
stos
aad
mov
and
jns
adcl
lods
pop
std
popa
dec
dec
out
repnz
imul
jne
stos
sbb
mov
addr16
jo
dec
inc
mov
sahf
sub
sbb
pusha
popw
addr16
sbb
popa
aaa
cmp
mov
xchg
and
imul
aad
dec
out
clc
xor
popa
sub
pop
xlat
movsl
lcall
mov
das
lock
ss
popf
icebp
jo
out
pushf
xchg
cwtl
fwait
mov
int
mov
xchg
mov
mov
sbb
stc
loope
push
movsb
idivl
add
popf
xchg
fimull
fwait
adc
xchg
push
stos
imul
pop
rcrb
pusha
mov
sbb
inc
inc
insl
lret
pop
sahf
stos
push
insl
mov
adc
fmull
loop
push
lea
into
out
add
dec
daa
les
or
mov
dec
shl
clc
or
jge
stos
cld
pop
out
dec
je
jl
adc
rcl
popf
cmp
cwtl
inc
add
lock
push
dec
jmp
mov
mov
jecxz
push
leave
int3
pop
cwtl
loopne
scas
fcomps
jbe
sub
int
bound
lret
mov
sub
icebp
mov
mov
mov
add
test
jno
loopne
fsub
orb
dec
movsb
cmpsb
punpckldq
and
pop
in
imul
xchg
ljmp
test
in
sbb
jb
inc
cmp
pusha
jmp
push
cmp
mov
cmp
subb
sarl
add
cwtl
rolb
xor
iret
aaa
test
mov
sub
das
les
out
ret
push
out
scas
xor
mov
hlt
sub
cs
lret
mov
hlt
pop
aam
incb
into
sbb
pop
mov
jge
ss
rcr
out
xor
aaa
ret
arpl
adc
sbb
dec
pop
sbb
mov
cwtl
outsl
clc
ja
jnp
jecxz
jg
mov
movsb
into
cmp
aad
stos
sbb
out
mov
jae
mov
push
cmp
movsb
shll
push
cmpsl
lods
add
rolb
sbb
lcall
or
pop
mov
sub
inc
arpl
cmc
xor
xchg
or
nop
and
mov
and
sti
jbe
ja
cmc
cmp
push
push
into
shll
je
xor
rorb
jno
dec
and
or
arpl
or
pop
push
jno
jle
mov
in
and
push
add
adc
jb
stc
or
push
sub
divb
in
lcall
dec
pusha
insl
call
into
dec
js
xchg
jge
popf
scas
dec
and
roll
aaa
adc
out
rcll
dec
in
jnp
and
in
cmp
daa
sub
dec
scas
fcmove
int3
stos
xchg
movsl
rcrb
or
es
inc
push
std
cwtl
out
pop
pop
fsubl
jp
cwtl
sub
cld
sbb
add
test
stc
and
push
jne
add
pop
push
sub
cli
cmpsb
dec
push
fisubrs
pop
xor
ffree
cmp
sub
sub
sbb
pop
sbb
push
ret
jge
adc
sarl
inc
dec
sbb
push
pop
ds
pop
or
jp
jo
dec
lods
lret
js
sbb
adc
or
sub
add
fs
dec
mov
inc
lds
mov
sbb
push
pop
adc
call
imul
icebp
mov
lods
jb
aaa
cmp
int
les
mov
lret
inc
shlb
shr
adc
lock
out
cmpsb
jae
fists
or
and
inc
jno
in
adc
mov
lock
roll
lcall
imul
push
cld
ficoml
popf
pushf
ror
mov
lods
and
jae
aaa
ret
pop
xchg
xchg
ds
fwait
fwait
sub
add
xchg
popa
xchg
jno
pop
repnz
inc
lahf
mov
sbb
or
sub
shl
push
imul
mov
mov
int
mov
mov
les
shrl
sbb
jmp
sbb
lods
pop
jge
xor
mov
test
xchg
add
out
stos
stc
push
sbb
cmc
xchg
mov
mov
push
insl
je
cmc
mulb
out
mov
jmp
pop
fdivl
fidivrl
enter
jl
xchg
xchg
push
pushf
inc
add
mov
lods
popf
push
inc
xchg
jp
cs
xchg
xchg
pop
push
cmp
lahf
xor
or
rcrb
mov
aaa
and
or
call
mov
dec
cmp
mov
and
or
fidivrl
mov
pushf
roll
xchg
out
xchg
mov
imul
or
jecxz
roll
fs
rcrl
shr
mov
and
lds
sub
nop
mov
inc
xor
out
and
ja
stc
shll
je
mov
int3
and
popf
lret
addr16
sbb
leave
mov
packuswb
push
mov
sbb
popa
fwait
push
cs
movsl
lock
inc
testl
push
loop
js
insb
push
ljmp
or
mov
fs
mov
imul
jmp
hlt
mov
movsb
test
xor
int3
daa
cwtl
push
sbb
clc
inc
popa
popf
in
insb
ret
rcrl
pop
daa
out
fsts
rcl
add
push
cli
mov
lcall
xchg
sbb
adc
outsb
nop
nop
shll
mov
xor
xchg
scas
mov
jo
fcmovbe
lcall
ss
cmp
ljmp
mov
mov
dec
sub
dec
loopne
or
jp
dec
jp
or
movsb
stc
aaa
adc
inc
mov
mov
fs
pop
jo
xchg
cld
mov
jmp
sbb
jecxz
jp
js
scas
lahf
dec
adc
mov
push
pop
cmpsl
jne
xlat
leave
pop
or
mov
outsl
push
sub
adc
call
and
adc
push
sbb
out
jno
pop
pop
jle
fdivrs
adc
adc
push
inc
mov
mov
sub
mov
test
mov
and
cwtl
mov
lods
jb
xchg
imul
lret
shll
push
adc
or
nop
dec
jmp
xor
sbb
sbb
and
cmp
cld
pavgb
push
sbb
fwait
mov
mov
mov
sbb
or
or
push
incl
adc
xor
shl
into
sahf
lret
arpl
cs
cmp
inc
sti
cmp
in
fsubrs
mov
jmp
and
xchg
sti
testb
sub
popa
ds
aas
inc
fisttpl
mov
movsb
pop
aaa
shl
arpl
xor
jno
pop
mov
ret
cmp
adc
push
lea
cwtl
jne
fiaddl
push
ficompl
xor
dec
sub
xor
jle
push
or
rolb
shlb
loope
fisubs
fisttps
lds
arpl
add
pop
cwtl
stos
sbb
lods
gs
adc
inc
cmp
mov
js
inc
bound
mov
lcall
add
mov
mov
arpl
adc
inc
cmp
xchg
xor
mov
inc
inc
xor
mov
push
cmp
adc
sbb
ss
nopl
and
push
cltd
sbb
clc
pop
lods
sub
push
ret
fs
mov
sbb
xlat
fsubrp
outsb
sahf
inc
sub
mov
fs
dec
loopne
leave
cld
adcl
shll
loop
mov
sub
mov
popf
popa
push
push
push
pop
mov
ja
mov
xor
repz
adcb
fldl
and
pusha
mov
mov
sbb
in
dec
push
movsb
mov
push
mov
mov
xorl
pop
xchg
pushf
cmp
hlt
cmp
sti
movsb
mov
xchg
outsl
int
and
std
loope
sbb
mov
andb
pop
or
push
scas
fwait
movsl
out
jle
cmp
add
je
int
mov
mov
sub
or
add
mov
repnz
mov
cmc
fbld
pusha
pop
pushf
test
or
jge
push
xor
shll
add
insb
mov
aam
sub
ret
mov
daa
cmp
mov
adc
xchg
jb
div
sbb
andb
inc
and
sub
jns
imul
lahf
and
lcall
cs
inc
pop
push
xchg
dec
test
jbe
lock
mov
je
out
daa
mov
lock
sbb
aam
xchg
adc
jne
mov
neg
xorl
js
adc
mov
ljmp
inc
imul
push
ret
imul
fld
frstor
das
add
lret
sahf
loop
sbb
ret
jle
cmp
jb
pop
jmp
shll
jg
cmpsb
ds
lods
mov
addb
ret
add
adc
jmp
mov
cmp
sub
mov
nop
jmp
push
jle
cmp
clc
rolb
push
dec
mov
fstpl
sbb
fiaddl
aaa
push
loope
daa
fists
push
cmp
arpl
inc
adc
dec
or
icebp
lods
push
mov
repnz
xor
mov
adc
add
nop
and
movsb
rcl
push
push
pop
icebp
sbb
das
mov
mov
sub
mov
mov
in
int
out
lret
daa
ja
iret
cmp
jle,pt
mov
imul
inc
xchg
pop
mov
inc
dec
insb
cmp
mov
push
sub
ret
and
jg
out
mov
ret
add
cmp
mov
loope
in
insb
sbb
mov
push
out
cltd
inc
jno
out
stc
jbe
enter
shl
stc
lods
add
rol
adc
cmovno
dec
adc
pop
scas
mov
loope
scas
adc
shlb
hlt
lds
popf
sbb
cmpl
inc
dec
jb
int
cmp
pop
daa
cmp
popf
mov
lock
rolb
fmuls
cmpsl
or
xchg
cld
add
add
outsl
or
cmc
dec
and
xor
add
mov
fbld
sti
pop
daa
mov
adc
sub
xor
pushf
fstps
jecxz
inc
adc
outsb
mov
mov
dec
and
pop
sub
pop
lret
jp
negb
xlat
sub
int
movsb
push
loop
test
mov
mov
cmp
xchg
fisubs
iret
repz
and
inc
pusha
lods
scas
and
jbe
mov
insb
mov
cmp
nop
je
push
lea
clc
mov
push
aad
or
mov
adc
add
loopne
nop
bswap
outsl
push
daa
adc
out
pop
xor
repnz
mov
or
xchg
ja
add
popf
popf
rorl
test
ds
dec
xchg
sbb
lahf
dec
dec
dec
aaa
pushf
clc
flds
mov
enter
pushf
sub
out
ja
popf
dec
out
sti
pop
js
lds
loope
das
shr
lods
insl
jbe
std
jg
or
cmpsb
incb
imul
sbb
pop
fcoms
inc
xchg
movsl
in
or
scas
xchg
inc
mov
mov
in
insb
fadds
notl
test
pop
inc
add
mov
out
add
lret
pushf
inc
pop
inc
je
clc
jbe
iret
fidivrs
jmp
arpl
jnp
jno
xchg
cmpsl
pop
mov
fsubl
xlat
sub
mov
sub
lcall
push
and
leave
pop
pop
pop
cmpsb
dec
rclb
or
dec
mov
aas
sub
outsb
aad
lcall
in
mov
jge
push
mov
ss
outsl
adc
pop
pop
pusha
arpl
cmp
addr16
pop
lea
mov
pop
ret
insl
std
jle
mov
sbb
lcall
sub
imul
push
dec
xchg
pushl
in
movsb
push
sub
movsb
imul
xorl
js
dec
sub
fadd
pop
dec
inc
mov
push
or
out
fld
aam
ret
addb
pop
out
in
pop
fldl
add
adc
push
xor
sub
popf
inc
scas
mov
sti
inc
push
cld
roll
mov
xchg
int
roll
mov
out
rolb
js
stos
sub
cmp
and
in
cs
scas
jne
mov
push
mov
mov
addr16
out
cmp
cmp
inc
and
imulb
insb
mov
hlt
or
xlat
outsl
lcall
mov
loopne
mov
testl
ds
cmpsl
call
test
inc
or
push
int
loop
or
mov
add
lock
cmp
pop
xor
adc
xlat
test
lcall
jbe
cmp
pop
xchg
dec
gs
gs
pop
jo
cmp
fsts
pop
testl
pushf
jae
adc
fisubs
dec
test
inc
aaa
cmc
jp
sub
dec
sar
inc
out
aam
jecxz
lds
and
jo
inc
out
repz
rorl
or
rcrb
fcoml
xor
cltd
ss
xchg
mov
adc
pop
not
and
call
inc
in
jge
jmp
sbb
mov
movsl
inc
je
push
dec
mov
out
cld
jge
fnsetpm(287
repz
sbb
or
fcomps
in
push
outsl
insl
in
or
dec
push
scas
repnz
sbb
xchg
fists
adc
mov
xchg
rorb
paddsw
sbb
arpl
cs
jle
adc
xchg
and
and
add
pop
cmp
rcr
test
int
jle
ds
push
mov
or
or
stc
lea
adc
fisubrs
je,pn
push
je
aaa
mov
in
fiadds
clc
mov
sbb
dec
sub
jl
cmp
std
mov
fstpt
lahf
lods
lea
mov
mov
loope
out
out
dec
adcb
dec
iret
int
adc
ja
call
scas
cmp
pop
xlat
inc
jne
shrb
sbb
fisubrl
in
mov
jp
inc
fidivs
mov
or
call
xor
xor
pop
insb
sbb
mov
inc
mov
sbb
pop
into
inc
cmpsl
inc
pop
shll
jnp
int
test
sbbl
pop
rclb
jno
adc
xor
jne
test
shll
xchg
xchg
mov
pop
stos
jnp
sbb
lcall
ret
mov
or
incb
pop
movsb
addr16
mov
fucomi
cli
jmp
jno
in
daa
and
es
dec
jecxz
into
in
call
xchg
add
or
cmc
jmp
mov
pop
out
adc
sbb
fcmovnu
gs
sub
cmp
outsb
lods
jle
fidivrs
aas
testb
pop
mov
mov
mov
test
or
repz
popa
stc
loop
add
notl
mov
les
jle
mov
push
mov
fdivl
fldenv
fcomps
mov
cmc
scas
into
inc
dec
lcall
mov
push
sub
dec
ds
aad
jge
cmp
cmp
inc
pop
pop
sub
sbb
out
cmp
and
pop
daa
loop
std
xchg
dec
fildll
jno
ja
es
push
dec
dec
sar
andb
test
mov
xchg
cmc
fsubrl
repnz
xlat
xchg
adc
push
sub
fbld
add
and
dec
test
lock
cmc
adc
int3
or
movsl
test
divb
in
or
fistpl
repz
addl
mov
jo
stos
and
mov
popa
push
ljmp
push
daa
mov
jl
nop
dec
ss
adc
shl
es
lret
push
adc
xchg
add
or
mov
and
test
push
ljmp
sahf
cmpsb
out
outsl
nop
ss
inc
rorb
inc
push
mov
popa
and
pop
fucomi
jp
mov
iret
pop
mov
adc
arpl
hlt
mov
loope
sbbl
icebp
imul
add
jg
jle
mov
mov
jno
fcmovne
ficomps
pop
push
and
xor
jge
rcrb
sub
and
mov
push
xorb
rcrl
xchg
stos
cmp
and
out
xorb
jno
rorl
aaa
xor
xor
sub
cld
jo
add
lock
adc
roll
enter
cltd
cmpsb
clc
push
sbb
mov
scas
jmp
inc
mov
cld
int
filds
cmp
jge
sub
jnp
jnp
mov
cli
rcrb
xor
inc
lods
cmp
sar
dec
cmp
mov
pop
or
into
sub
inc
add
mov
inc
clc
jae
xor
dec
xor
cltd
push
mov
pop
cmp
xor
inc
icebp
or
sbb
jns
out
mov
adc
stos
jae
in
jnp
ja
mov
dec
xchg
je
imul
xor
fisubl
jmp
subb
pop
sbb
insl
out
popf
out
cmp
mov
pusha
sub
call
mov
es
lahf
test
push
mov
lods
pusha
dec
fxch
mov
in
test
sbb
pushf
insb
in
add
test
mov
sbb
scas
pushf
inc
jge
cmpsl
stc
int3
sbb
adc
jecxz
repnz
ret
ss
mov
loop
xor
ja
mov
xchg
pushl
loope
pusha
lret
test
negl
cmp
cltd
sub
aad
sti
pop
mov
addr16
cld
fdivr
loop
xchg
sub
and
dec
mov
pop
fdiv
pop
movsl
mov
in
decb
push
pop
dec
repnz
mov
lds
cltd
lock
lret
call
dec
mov
cmp
in
test
cld
xchg
and
or
in
pop
aam
push
leave
push
sbb
out
bound
ret
test
jne
or
and
cmp
dec
cmp
ret
pop
mov
fwait
js
scas
add
negb
mov
pusha
lods
sub
in
sbb
daa
mov
lds
mov
push
mov
out
push
sub
jle
std
or
fwait
std
adc
add
adc
daa
adc
push
push
ljmp
stos
cld
ja
jg
out
popf
pusha
sbb
stos
jo
pop
dec
add
push
xor
sub
mov
cmp
sub
loopne
outsb
sbb
out
out
sbb
sahf
cmpsl
inc
add
cmpb
dec
stc
pushf
mov
pop
insb
daa
mov
xchg
repz
sti
push
inc
sub
push
pop
inc
adc
mov
add
flds
clc
out
jp
ljmp
lcall
shlb
push
jno
frstor
pop
sbb
pusha
xorl
andb
xor
negb
ljmp
push
fcomp
mov
test
out
mov
mov
adc
ss
pop
push
push
add
cmp
and
mov
mov
dec
sarl
jnp
sbb
cmc
sub
lcall
call
push
sti
das
mov
xor
jmp
pop
cmp
push
sti
push
lcall
push
cmp
into
xor
mov
add
test
adc
xchg
inc
ret
ret
cmp
sbb
lcall
or
inc
add
dec
or
xor
ljmp
loope
jns
or
lahf
pop
aad
aad
push
dec
lods
push
rcr
inc
add
insb
jno
sbb
dec
lcall
xor
mov
out
fcomi
mov
add
xchg
icebp
addl
cmp
icebp
mov
arpl
xchg
out
mov
jmp
sbb
adc
loop
xor
out
xchg
and
fists
in
pop
lea
cmp
mov
jmp
lea
fwait
jle
and
stos
sub
movsl
mov
jbe
cmpsl
dec
mov
lds
dec
adcb
jbe
ja
xchg
mov
adc
push
mov
and
frstor
and
out
popf
out
dec
jle
negb
lahf
mov
jo
outsl
xchg
stos
test
iret
hlt
mov
or
pop
or
clc
loopne
outsl
mov
pop
mov
push
cmpsl
icebp
sbb
mov
fstpl
popf
lret
std
xchg
dec
sub
sarl
pop
adc
cmp
test
inc
and
add
mov
inc
pop
adc
insb
sahf
ja
mov
pop
jl
jnp
and
sub
jmp
pop
inc
dec
sbb
xor
movlps
push
mov
ljmp
arpl
aas
das
dec
leave
lcall
mov
adc
xchg
inc
mov
or
fwait
push
mov
into
add
mov
aaa
cmp
lods
rsqrtps
scas
ret
jmp
adc
mov
jge
outsl
fyl2x
add
mulb
pop
cmp
ret
cmpsl
repz
out
sbb
arpl
pop
shlb
pop
lahf
shl
inc
scas
mov
and
test
scas
fwait
add
jns
fdivp
roll
xchg
in
cmpsb
addl
xchg
adc
popf
arpl
push
icebp
out
inc
jne
mov
lds
daa
mov
scas
mov
mov
rcll
clc
out
dec
inc
dec
jno
xor
mov
inc
fstpt
xchg
faddl
dec
dec
add
add
and
or
mov
leave
fucom
push
das
mov
dec
cmp
push
inc
mov
mov
jne
jecxz
xchg
xchg
addr16
mov
add
in
inc
je
jae
dec
test
sub
add
sub
sbb
mov
incb
cmpsb
test
xor
movlps
sub
loop
add
ds
sahf
sub
push
sub
ljmp
shr
fbstp
mov
push
jns
das
xchg
int3
cld
mov
sbb
les
and
cmp
pushf
aam
ds
jp
mov
aas
xchg
inc
adc
out
or
mov
pop
in
test
js,pn
cmp
or
xlat
mov
rorb
sbb
fmull
mov
jbe
sub
sub
subl
jle
inc
js
dec
mov
dec
push
cmp
or
lret
cwtl
xor
add
cmp
stos
test
movl
repnz
shr
fisubrl
mov
inc
xchg
test
and
insl
divb
sbb
jb
icebp
xchg
out
les
lcall
pop
mov
sub
or
into
mov
xor
add
mov
dec
mov
std
jge
dec
movsl
sahf
ds
sub
repz
scas
fcmovu
inc
jl
and
pusha
loope
sub
mov
sbb
pop
xchg
ret
and
lret
in
mov
and
fcoms
aaa
pushl
mov
jbe
mov
mov
push
mov
negb
rcrb
int
add
sbb
shlb
into
push
mov
add
cmovbe
and
xor
fidivl
push
inc
data16
mov
bound
lahf
leave
adc
or
sbb
cwtl
outsb
stc
cmpl
jecxz
add
aad
adc
jns
subb
inc
mov
inc
xor
dec
mov
stos
cs
repz
js
out
je
test
add
xchg
xchg
js
icebp
xchg
inc
jecxz
dec
popa
adc
xchg
inc
cmp
xlat
xor
push
or
pop
icebp
imul
sub
clc
or
pushf
jecxz
loopne
or
and
xchg
and
loop
xchg
aas
insb
movsb
pusha
ja
dec
ja
scas
aam
cs
repnz
arpl
loope
add
inc
xchg
pop
sahf
push
mov
fisubl
std
push
leave
mov
mov
jg
shrl
push
das
rorb
and
and
sbb
or
pop
stos
cld
sub
jne
xchg
loopne
adcl
mov
sub
call
test
popf
xor
inc
mov
sub
pop
js
movsb
mov
cmc
minps
cmp
inc
pushf
inc
dec
dec
xor
fldcw
std
push
mov
mov
push
imul
mov
mov
stos
out
add
call
jns
pop
cmp
and
inc
inc
cmp
inc
daa
imul
fs
add
push
aad
add
jle
mov
adc
scas
iret
and
out
xchg
leave
mov
dec
adc
lahf
scas
lods
stos
imul
and
adc
xlat
enter
inc
movsb
cmpsl
mov
das
xchg
int
aaa
aas
push
imul
push
mov
xchg
or
popf
gs
jl
fidivrs
dec
mov
adc
mov
push
pusha
xchg
push
xchg
cli
inc
insb
push
mov
add
add
or
data16
call
sub
and
scas
std
mov
push
dec
pop
push
jg
adcl
hlt
rcrl
mov
sbb
adc
andb
or
cmpsb
cmpsl
insl
shll
imul
fcmovnu
xchg
xor
lods
fs
mov
movsl
pop
fidivs
mov
mov
stc
notb
jg
xor
and
mov
xor
iret
adc
mov
push
xlat
or
adc
ss
cmp
adc
loope
xlat
jecxz
in
int
rorb
divl
cmp
out
xor
je
sbb
jl
loop
sti
and
push
icebp
add
jmp
push
xchg
add
ret
sub
aad
out
cmp
out
mov
neg
out
ja
or
pop
fstpt
aam
insl
pop
shl
cs
adc
in
aam
pop
mov
das
push
jb
inc
pop
fildl
mov
xchg
push
dec
push
dec
out
jecxz
cmp
push
xchg
pop
add
mov
pop
int
adc
negb
jb
daa
jbe
mov
mov
cmpsb
arpl
fisubs
fs
mov
cmpsb
mov
jmp
dec
lods
stos
pop
out
rolb
jp
pop
xor
test
nop
mov
xchg
ljmp
ljmp
and
sbb
push
mov
inc
xchg
ja
addr16
lock
jle
jl
xchg
or
mov
dec
sub
stos
loopne
movsl
mov
dec
mov
loope
mov
dec
adcb
mov
cld
repz
sub
ss
dec
add
and
nop
xor
stos
shrl
cmp
mov
roll
enter
loope
sbb
jl
adc
stos
xchg
cmpsb
cmp
cmp
push
push
es
or
xchg
imul
icebp
jae
fdivs
cmp
decl
push
adc
xor
and
fidivs
mov
stc
cmpsb
sub
mov
or
cmp
mov
mov
mov
leave
lds
jo
push
shll
fs
or
sbb
dec
leave
or
pop
sub
cmp
scas
sbb
push
xchg
pop
adc
cmp
mov
jl
xchg
imul
sub
scas
sahf
jmp
sub
push
pop
dec
xchg
nop
mov
fidivs
fbstp
xor
in
or
jnp
push
add
ret
popa
das
adc
testb
mov
call
or
cmp
shl
loopne
jp
and
test
cmp
out
sub
lcall
addb
fidivs
lret
or
pop
push
mov
inc
xor
movsb
int3
or
ficomps
cltd
push
or
jbe
bnd
mov
insb
sub
jge
push
stos
sbb
xor
cs
cmp
and
dec
mov
push
jge
test
in
pop
xchg
iret
mov
ds
xor
jg
and
and
inc
pop
aas
xor
in
mov
or
outsl
add
xchg
stos
movsl
es
dec
sbb
push
push
in
xlat
jno
addl
clc
into
rcrb
and
inc
xchg
sbb
ja
push
lret
pop
xchg
rcll
sbb
loopne
dec
mov
jecxz
outsl
cmp
cmp
ds
int3
mov
lahf
push
jge
pop
xchg
xor
or
imul
push
outsl
xor
mov
nop
jle
mov
test
in
xlat
inc
es
jno
movsb
xchg
xor
pop
ret
pop
dec
mov
nop
lds
mov
das
pop
jb
sbbl
cmp
add
inc
lcall
shll
js
cmpsb
and
rorl
loopne
es
stos
lods
nop
mov
ret
mov
rorb
bound
add
lret
cmp
ret
roll
and
out
fnstcw
andl
and
shl
imulb
lods
scas
mov
add
mov
ret
mov
jbe
subb
cltd
jp
pop
add
push
or
lahf
push
sub
push
mov
repz
out
pop
inc
test
gs
lcall
and
inc
and
pop
jno
ret
cmp
or
ret
and
sbb
cmp
sub
aas
pop
hlt
outsb
mov
shlb
and
fwait
dec
movsl
mov
jo
xlat
inc
mov
in
dec
jae
sbb
push
push
stos
inc
mov
jo
jge
and
ljmp
xchg
fwait
inc
int
mov
andl
cmp
hlt
mov
and
fiadds
addr16
push
inc
mov
sub
outsb
pushf
or
inc
push
lds
sbbb
stos
popa
sub
mov
jne
mov
mov
sbb
movsb
pop
ljmp
mov
pop
xchg
fwait
aas
mov
pop
xchg
rorl
xchg
mov
call
cmpsl
jl
push
add
mov
rcrl
pushf
mov
fnsave
lea
jbe
lret
insb
fbld
adc
arpl
out
mov
mov
lods
jl
out
fstpl
and
aas
cltd
xchg
push
xchg
ds
in
cltd
adc
sarb
addr16
push
bnd
cli
sub
pusha
iret
into
lds
xlat
pop
adc
fistpl
jns
xchg
mov
ds
adc
adc
pop
cmp
rorb
repnz
mov
cmp
or
sarl
or
jbe
sub
fisttpl
pop
aaa
jge
mov
andl
es
xchg
xchg
mov
mov
xchg
or
cmp
add
add
mov
mov
ret
aam
adc
js
subl
jnp
fbld
gs
pop
xor
inc
xchg
fcoms
push
inc
in
and
jne
add
in
insl
jp
jle
fcomi
cmp
out
mov
ss
cmp
int
adc
sub
cli
inc
lahf
mov
cmp
repnz
aas
jne
rorw
add
pushf
loope
jns
sub
push
sub
cmp
or
das
test
mov
movsl
outsl
pop
pop
addr16
enter
popa
xor
mov
pop
push
mov
ljmp
adc
popa
pusha
ret
add
ds
insl
jb
pop
loop
inc
jle
mov
sub
test
out
jbe
mov
lock
nop
push
dec
sub
xchg
daa
lods
mov
cmc
and
sbb
mov
mov
and
mov
xorl
in
push
popf
sbb
pop
sbb
jae
add
push
mov
in
nop
mov
lods
pop
clc
sbb
or
arpl
or
scas
pop
add
inc
jg
push
cmp
in
loope
jbe
fildll
dec
out
outsb
lret
std
add
xchg
mov
or
adc
add
add
sbb
rol
imul
or
add
dec
mov
inc
mov
lock
mov
test
jge,pn
ror
stos
es
jno
test
pop
ffree
lods
push
add
insl
les
aam
and
rcr
inc
sbb
fcmovb
and
scas
jo
fdivr
adc
jnp
rorb
xchg
int3
jge
je
std
inc
call
lods
scas
adc
pop
orb
test
mov
jmp
loope
inc
test
push
in
cmpsl
mov
stos
ret
hlt
shlb
test
les
adc
adc
pop
lods
notb
test
mov
xlat
cmpsb
or
fbld
mov
ds
and
rclb
movsl
lds
fdivrs
mov
or
or
ja
lods
cmc
add
adc
cmp
cld
ss
in
xor
outsb
mov
data16
pushf
sahf
xor
add
push
cltd
pop
insb
mov
pop
xor
sbb
pop
test
movsl
ja
inc
mov
lock
sbb
mov
loop
ljmp
sbb
lds
jmp
les
mulb
cmp
push
shr
ret
mov
es
scas
ljmp
imul
dec
lods
lcall
push
cmp
out
cltd
or
test
fstl
jne
aaa
push
cmpb
stos
cmp
or
es
xchg
xor
insl
jl
ja
arpl
es
jb
xchg
adc
in
incb
push
imul
fwait
add
adc
popf
cli
push
sbb
dec
xor
outsl
mov
adc
data16
xor
push
lcall
dec
cmp
cmc
add
inc
out
adcl
dec
sbb
lret
fadd
jo
push
jge
sub
sub
rorl
ret
inc
push
and
scas
in
mov
js
pop
vpackssdw
or
sbb
leave
or
mov
scas
cmpsl
jb
fcmovu
ss
mul
popa
pushf
fdivl
lods
subl
test
push
sub
xchg
push
and
add
aas
orb
lods
leave
cmp
dec
movsl
jbe
fs
adc
fwait
mov
jne
ret
xchg
dec
jl
cmp
stos
mov
mov
add
movsl
and
out
adc
mov
lret
sub
ds
cs
movsb
adc
dec
lods
out
ss
xchg
sub
stos
mov
cmpsb
sbb
xor
mov
add
sahf
inc
ss
jl
add
movsb
push
push
and
mov
sub
scas
dec
inc
addr16
mov
mov
xchg
icebp
sub
fstpl
add
mov
loope
mov
fnsave
sub
js
pop
cmp
dec
dec
loopne
mov
cmp
adc
add
cmp
pop
fstpl
mov
test
loop
addr16
js
js
pop
sbb
sti
pusha
mov
mov
out
out
bound
pusha
or
iret
adc
jb
inc
pop
pop
cmp
jns
adc
or
outsl
jg
xchg
pusha
scas
ret
cmp
adc
xchg
xchg
or
xor
mov
sbb
mov
push
cwtl
gs
aaa
fdivl
xchg
push
scas
or
lret
and
cmp
std
cs
pop
icebp
push
inc
imul
sub
pop
mov
adcl
add
loope
push
sarb
sub
lcall
lret
adc
mov
xor
test
out
pop
loope
mull
aad
mov
cmpsb
dec
inc
imul
or
add
shr
cwtl
mov
dec
popf
nop
push
sarl
mov
lds
daa
or
mov
fwait
hlt
inc
jmp
jmp
or
pop
inc
andl
jg
out
xor
fs
scas
inc
lods
and
mov
adc
mov
xor
mov
inc
push
es
fiadds
dec
lret
rcl
hlt
adc
shll
inc
xor
mov
xorb
mov
jnp
sti
cs
xor
or
xchg
inc
inc
aaa
xchg
aam
push
xchg
add
test
adc
into
mov
bound
cld
stos
jecxz
insl
outsl
ret
ljmp
or
adc
fiadds
ja
mov
nop
xchg
adc
cmp
jo
jnp
mov
inc
ret
xadd
pop
and
out
or
arpl
sbb
xchg
dec
cltd
pusha
movsb
pop
xor
mov
imull
inc
sub
mov
dec
mov
jecxz
xor
xchg
pop
or
loop
sbb
repnz
xlat
xchg
cmp
dec
js
jmp
addl
out
push
sarl
xor
pop
add
movb
ja
or
push
xchg
mov
enter
add
hlt
cmp
ds
mov
add
sarb
sbb
adc
and
sbb
std
ljmp
mov
inc
jne
sbb
pushf
enter
sub
mov
adcl
and
xor
xor
bound
mov
push
lret
inc
fisubrl
test
jmp
push
xchg
mov
add
aas
xchg
out
pop
cmp
or
fisttpl
mov
adc
jecxz
or
adc
push
mov
or
std
test
sbb
adc
dec
cmpl
loope
invd
push
sbbl
cmpsb
fidivs
mov
push
pop
xor
mov
add
jo
out
jp
mov
cltd
pop
shlb
pop
imul
dec
push
pop
arpl
loopne
sbb
cltd
xchg
push
jmp
repnz
dec
out
sti
cmpsb
cmp
xor
cmp
outsl
jno
mov
jae
mov
in
inc
hlt
push
loopne
int3
bound
jns
ss
xchg
test
adc
hlt
arpl
out
cmpb
ljmp
fld
leave
lret
into
daa
pop
and
inc
push
sub
push
cmp
popf
cmc
repnz
das
inc
or
mov
mov
jp
sarb
mov
dec
ret
dec
ljmp
popl
add
nop
xchg
bound
rorb
sub
cld
adc
push
xor
sbb
mov
push
jbe
outsl
pop
fildl
out
fimuls
xlat
mov
movsb
enter
pop
xor
jecxz
xchg
sub
arpl
jp
xchg
ds
mov
jge
gs
xor
lret
cmpsb
push
shrl
fwait
lods
out
dec
mov
sub
pop
cltd
xorl
pop
xorb
lea
cmovae
mov
out
arpl
je
subb
mov
leave
hlt
inc
adc
lahf
repnz
out
inc
dec
subb
imul
xchg
cmpsb
clc
dec
jb
mov
mov
inc
outsl
jp
ja
cmp
push
cwtl
cwtl
dec
xchg
dec
lahf
inc
xlat
test
mov
shlb
cmp
pop
add
inc
pop
je
xchg
mov
sub
inc
ficoms
fldln2
add
dec
daa
adc
pop
cltd
sbb
or
xor
mov
pop
mov
dec
xbegin
ljmp
lds
sub
jle
xorb
add
mov
xchg
je
pop
fimull
mov
rcrl
xchg
imul
pop
and
shr
xor
aad
mov
push
rcr
fstpl
sbb
ljmp
xchg
rol
mov
xor
out
mov
test
sbb
adc
push
adc
push
pop
out
mov
or
adc
in
adc
cwtl
fcmovnb
jecxz
in
mov
add
mov
add
push
ret
xchg
cli
decb
lret
sahf
bound
jecxz
testl
imul
xchg
and
les
mov
decl
jle
xchg
pop
loope
lods
cmc
into
insl
push
adc
clc
xchg
xchg
xchg
andl
dec
pop
adc
lcall
cmp
dec
push
aam
push
out
inc
es
push
sub
sub
pop
cmp
pop
test
stos
xchg
mov
divl
dec
add
pop
xchg
fldt
cmp
outsl
adc
xchg
lret
mov
sbb
in
popa
inc
je
popa
mov
xor
inc
dec
movsb
insb
xor
mov
dec
into
jae
mov
aad
dec
sub
push
mov
addl
and
js
and
or
jl
jecxz
mov
test
sub
bound
loopne
or
add
or
pushf
inc
sbb
push
add
stc
cli
jmp
mov
mov
dec
pushf
enter
xor
fiadds
out
aas
lds
jmp
popa
pop
imul
pop
incl
mov
xlat
sbb
les
mov
and
mov
adc
data16
dec
cmpsb
nop
and
cld
out
jp
clc
sbb
mov
lods
mov
nop
addr16
sbb
jg
addr16
mov
push
clc
push
jle
fidivrl
jle
daa
fidivrs
jae
lahf
stos
es
adc
push
ds
push
repnz
sbb
mov
mov
stc
cs
jp
ss
add
lock
xchg
in
outsl
or
and
nop
or
fmull
insb
or
sbbl
lea
sub
add
negl
mov
jge
dec
mov
cld
je
jnp
imulb
sbb
outsl
ljmp
jge
imul
andb
aam
pop
mov
mov
icebp
movsb
inc
popf
and
xor
stc
push
test
fs
loop
ds
out
les
push
insl
jl
jge
pop
in
rcr
sub
sub
push
add
addr16
movsb
dec
test
mov
stos
or
mov
sbb
xor
loopne
jae
out
pop
test
ficoml
push
adc
xor
das
adc
cmp
inc
push
push
leave
push
pop
push
dec
or
shrb
push
cmp
outsl
xor
xor
sbb
push
aam
dec
pop
loope
inc
cs
inc
dec
pmaxsw
xchg
popf
sub
xlat
mov
pop
xor
xchg
xchg
pop
ljmp
adc
jl
mov
imul
or
or
or
fdivrl
push
push
int3
or
fstpl
add
stos
lea
call
mov
xor
cmp
dec
sbb
mov
mov
inc
hlt
push
sbb
jg
insl
or
hlt
imul
mov
push
inc
push
cmc
negl
cwtl
jge
inc
negl
sbb
jl
or
in
pop
dec
aaa
jmp
ds
iret
xchg
pop
fdivrs
je
mov
stc
add
sti
mov
xchg
mov
mov
sbb
inc
mov
mov
xchg
cld
cmpsl
pop
andb
iret
jmp
aad
push
cmp
mov
aaa
lret
es
sub
negb
cmp
mov
mov
cmp
mov
sbb
popf
leave
jno
ja
fs
mov
cmp
int3
fnsave
cmp
add
cmp
mov
jo
in
int3
pop
fistps
jnp,pn
adc
fcoms
dec
icebp
leave
out
outsb
and
mov
mov
lods
popa
mov
in
and
lds
lcall
cmp
hlt
and
mov
popa
insb
daa
pop
xlat
test
jno
adc
ret
bound
cli
dec
cltd
adcl
push
sbb
iret
test
ffreep
add
cmp
neg
jno
mov
mov
out
outsl
pushf
js
adc
jg
pop
mov
icebp
cmc
xchg
xor
out
pop
add
cmpl
jge
mov
mov
push
fwait
jo
lock
mov
ja
cmpb
sub
jp
cwtl
xchg
xor
movsb
inc
sbbb
or
in
sub
dec
leave
mov
mov
lahf
sbb
dec
out
or
repz
out
dec
jb
fdivs
and
sbb
shrl
add
and
lret
outsb
adc
test
xor
mov
pop
scas
cmp
cltd
pop
in
call
adc
dec
int3
sbb
in
fistl
jle
mov
divl
jb
stc
lahf
ret
adc
or
icebp
mov
gs
aam
inc
jbe
call
jge
add
adc
inc
push
xor
mov
scas
mov
aaa
cmpb
pop
cltd
mov
scas
pop
inc
ds
mov
rcll
push
insl
into
clc
out
ds
les
jo
xor
sbb
cmpsb
mov
or
jno
xor
pop
rcrl
jle
ljmp
jb
fwait
pusha
adc
or
pushf
push
cmpsb
add
lcall
movsl
lods
inc
pop
push
mov
mov
je
rclb
jno
mov
jl
or
fcomps
popf
mov
fcompl
in
ja
and
ret
cmp
jae
pop
add
adc
dec
ret
daa
pushf
insb
xchg
dec
push
jmp
adc
adc
nop
das
dec
or
out
add
dec
inc
jle
pop
fcomps
stos
js
shr
wbinvd
int3
out
xchg
lock
and
jo
jo
mov
cltd
jbe
sub
pop
jns
mov
sbb
inc
add
jbe
push
mov
adc
push
sub
xchg
in
jnp
vcvtsd2ss
leave
push
jg
pop
in
aam
pop
add
mov
adc
sti
or
leave
pushf
pop
cld
fistpl
mov
mov
mov
dec
cmp
cmp
mov
ds
dec
xor
cmpl
je
int3
mov
sub
xor
shlb
lea
add
and
das
cltd
jae
out
cs
and
repnz
mov
cmp
mov
out
icebp
dec
mov
fistpl
dec
dec
cmp
rcl
mov
and
pop
sub
fucomi
lds
aad
clc
loope
lods
mov
sbb
add
fmuls
sbb
xchg
or
out
in
cs
push
ret
insb
icebp
ficoml
es
test
xor
sub
inc
int3
sbb
stos
adc
shl
aad
out
bnd
out
pop
aad
lret
or
std
fadd
jb
jnp
mov
sub
rolb
mov
loope
mov
sub
sub
sbb
test
mov
jo
mov
dec
lahf
xchg
decb
ficompl
jno
and
ds
shll
inc
dec
cltd
out
jne
jbe
and
mov
sub
cld
sub
faddp
push
and
fsts
dec
lds
push
jne
push
das
stc
std
adcl
push
stos
jp
cmp
call
out
cmp
mov
addr16
pop
in
jp
lahf
push
mov
jl
dec
pusha
in
mov
push
out
mov
pop
scas
push
fs
dec
cmp
shr
dec
xor
inc
imul
jg
movsl
in
jb
mov
mov
je
xor
dec
sbb
fbstp
mov
ja
xchg
jmp
and
fcmovnb
mov
jge
fwait
ljmp
dec
movsl
sahf
loope
test
xchg
dec
scas
repnz
loop
test
and
stos
and
pop
in
cmc
in
pushf
in
or
pop
and
sbb
roll
xchg
sbb
inc
dec
popa
jnp
push
add
mov
mov
sbb
adc
aas
and
add
mov
shlb
aas
xor
jbe
outsb
inc
cmc
adc
cmp
push
test
dec
adc
xor
pushf
mov
xchg
sbb
jnp
ret
xor
mov
and
push
cmp
dec
or
stc
cli
stos
jnp
mulb
cwtl
int
push
inc
jmp
popf
cld
leave
imul
sub
mov
mov
sbb
push
add
jb
add
cmp
ret
subl
imul
scas
pop
dec
mov
pop
cmp
test
std
jg
add
out
jge
xchg
pop
int3
dec
aaa
mov
sbb
jl
mov
sbb
daa
jmp
dec
xor
or
iret
pop
addr16
fisubs
and
insl
sbb
push
xor
fwait
mov
mov
cmp
je
mov
popf
les
xchg
sub
in
mov
nop
and
out
inc
movsb
out
mov
ljmp
jmp
mov
xor
sbb
flds
cmp
push
and
rclb
scas
inc
cmc
inc
arpl
dec
xor
push
xor
daa
mov
movsb
adc
leave
mov
addr16
jle
scas
jns
aam
sbb
mov
leave
jmp
or
push
ja
test
es
jno
push
and
insb
jnp
cmpsb
inc
add
gs
test
flds
test
insl
push
add
ret
sahf
adc
cmp
sbb
pop
sbb
sub
fisubrl
xchg
sub
test
push
iret
out
cld
xor
sbbl
mov
add
mov
call
pusha
mov
hlt
mov
mov
xor
cltd
inc
dec
xchg
rcll
dec
jge
outsb
push
push
push
scas
jl
sub
xchg
adc
das
cld
icebp
icebp
or
sub
mov
repnz
es
and
loope
adc
or
ds
lcall
mov
mov
scas
push
out
inc
pusha
mov
test
mov
movsb
mov
je
fidivs
into
mov
push
icebp
ljmp
add
ficompl
int
fisubl
xor
mov
pop
testl
ret
sti
in
popa
fcoml
inc
mov
gs
push
xor
jl
add
cmpl
clc
clc
out
leave
xor
jne
dec
adcl
jge
push
push
sarl
xor
rclb
rcll
imul
clc
xlat
stc
add
inc
ja
ds
insb
mov
outsl
daa
sub
lods
pop
retw
cld
insl
push
pusha
cmp
mov
sbbb
lret
fdivrl
mov
cmp
add
insl
cmp
push
pop
pop
dec
dec
test
ret
insb
or
rolb
test
push
test
and
mov
push
lea
pop
mov
mov
xchg
rclb
shll
movsl
inc
jecxz
ficoms
fwait
mov
adc
mov
adc
pop
fcompl
pop
push
ret
sub
daa
je
push
and
mov
lods
rolb
movsb
or
iret
mov
je
xchg
or
adc
mov
imul
dec
cli
daa
jle
scas
cmpsb
mov
loop
xchg
pop
aam
call
sbb
movsl
rcr
mov
mov
fwait
das
mov
mov
pop
dec
and
inc
mov
xlat
scas
sub
insl
cmp
mov
jns
push
push
out
inc
add
sub
mov
lds
int
inc
mov
nop
into
and
pop
mov
mov
sbb
inc
out
mov
push
add
std
js
repz
dec
inc
add
adc
int
in
and
cmpsb
scas
daa
cmp
xor
movsl
mov
adc
lock
sub
iret
xchg
push
xchg
xlat
jo
into
dec
xorl
pcmpeqd
push
frstor
pop
lods
sbb
daa
xor
or
push
andl
and
ret
and
pushl
ret
xchg
outsb
stc
adc
sbb
jb
jmp
fisubl
adc
or
iret
sbb
mov
xor
sbb
mov
lret
cmp
mov
cs
add
adc
jp
adc
jnp
pop
xlat
or
popa
arpl
inc
xor
jo
popf
test
adc
mov
cmp
aam
je
jmp
inc
arpl
roll
rcl
popf
sub
inc
sbb
adc
fs
lock
in
jo
jge
push
xchg
das
mov
rcl
lahf
mov
dec
test
mov
pop
bound
std
xchg
jmp
fbstp
mov
es
jp
out
sbb
pop
adc
cmp
aad
inc
rcrb
sub
out
repz
and
dec
pop
test
cli
mov
mov
iret
push
rcll
dec
jnp
add
or
pop
into
sbb
lret
orl
fldcw
imul
inc
in
movsl
push
sub
mov
jae
dec
push
push
adc
roll
out
jge
sbb
sbb
js
xor
jg
decl
test
call
ja
mov
lea
push
sub
adc
sub
adc
jne
adc
insl
or
ja
lcall
cmp
push
mov
pop
xchg
push
popf
out
out
push
dec
test
fistpll
push
ds
sbb
or
movsl
and
call
sahf
idivb
movsl
imul
cmp
aad
mov
pushf
out
movsb
scas
fwait
add
sar
stc
out
mov
push
imul
aas
jge
mov
cli
aad
clc
xchg
adc
mov
cmp
mov
jle
mov
push
cwtl
push
mov
cmc
jmp
cmp
and
xchg
mov
jle
in
pop
adcl
push
cmpb
scas
jg
es
pop
test
and
mov
pop
cmp
mov
pop
out
data16
test
inc
push
pushf
sbb
push
lods
mov
inc
in
leave
xchg
call
mov
mov
dec
push
sarb
int
cltd
sbb
or
xor
inc
jg
mov
and
icebp
pop
push
ja
xchg
repz
lret
or
sbb
loopne
mov
daa
jno
mov
mov
repz
repnz
push
pop
outsb
int
pusha
xor
pushf
je
test
ds
sbb
stos
jecxz
xchg
jno
loopne
into
into
cmp
call
fs
adc
jo
sbbb
fists
xor
xchg
sub
pop
xchg
dec
xchg
repnz
jmp
mov
cmp
push
int3
das
mov
jmp
or
mov
jl
push
push
iret
push
ret
or
roll
lahf
aam
aas
repz
insl
and
jle
pusha
cmp
insb
imul
push
push
mov
and
mov
in
xchg
loopne
sbb
dec
xchg
xchg
cwtl
inc
fcompl
lock
sti
add
push
sti
xchg
dec
cltd
movsl
sbb
fsub
jl
cmp
je
pop
adc
xor
jmp
dec
fs
ds
lods
cmp
inc
jns
out
inc
pop
mov
ficompl
arpl
fucomi
lahf
lods
fs
cmc
add
inc
aam
cmp
sub
popf
push
rolb
lock
inc
loopne
insb
xor
imul
into
int
sarb
popa
fbld
add
cmp
in
pop
inc
xor
push
je
sbb
imul
cmpsb
insl
aam
add
mov
push
les
sub
dec
and
add
cli
push
bound
int
pop
push
xchg
pop
popf
xor
rolb
insb
adc
loopne
loop
cmp
and
sub
scas
cmp
adc
cmp
out
popf
fnstenv
outsl
pop
in
mov
inc
sahf
fwait
out
ret
jbe
lea
pop
call
test
jo
cmp
jecxz
sbb
iret
fistpl
lret
push
jp
shufps
rcll
cmpsb
lret
xor
cmpb
out
add
fldl2e
xor
xor
scas
in
fwait
or
and
imul
jecxz
in
pop
pop
mov
nop
aad
mov
inc
out
xor
sahf
or
and
cmp
mov
mov
adcl
and
shl
ret
stos
mov
add
iret
mov
mov
daa
ror
dec
jns
jns
and
or
push
mov
and
fsubrl
data16
lea
xchg
stos
cmpsb
call
jo
mov
xor
sarl
aas
or
test
fwait
addr16
mov
adcl
loopne
pop
mov
sarb
cmp
or
stos
inc
sbb
and
add
push
cmp
int
out
mov
mov
ret
insl
pop
jno
dec
dec
lds
lods
enter
lods
in
mov
repnz
imul
mov
lcall
dec
dec
imul
ja
les
cli
and
mov
jmp
pop
call
sbb
rcll
cmpsb
jecxz
mov
sub
xchg
fsubrl
bnd
imul
insb
push
jno
ret
cmp
inc
or
pop
xor
in
int
pop
cmp
pop
pop
sti
xchg
inc
jp
push
jge
cmpsb
mov
and
mov
loopne
push
fwait
dec
out
pop
jl
pusha
loope
inc
adc
mov
adc
dec
or
or
mov
pop
icebp
inc
fmuls
lcall
and
mov
mov
lahf
mov
xchg
xor
push
je
cs
mov
xor
mov
inc
pushf
sbb
mov
ds
out
push
out
adc
sar
ja
sbb
pop
sbb
push
or
xchg
push
add
mov
ror
inc
sbb
dec
xchg
sbb
fxtract
repnz
cmpsb
sbb
mov
js
ret
jle
inc
enter
cmc
xor
loop
cltd
xor
repz
nop
jp
mov
jecxz
dec
jnp
lock
icebp
enter
inc
gs
mov
jmp
pop
mov
jle
mov
lret
inc
scas
fucom
daa
pop
and
adc
add
js
mov
xor
test
sbb
rolb
aaa
xchg
dec
lea
fcomps
xchg
mov
push
jae
or
out
stos
push
push
fdivrl
push
cs
outsb
stos
leave
push
xchg
cmp
xchg
in
faddl
mov
es
movsb
and
dec
cs
pop
out
xor
inc
stos
jns
dec
iret
outsl
add
mov
adc
repz
leave
jg
int
divl
bound
jmp
sahf
pop
mov
and
fidivl
in
fcoms
and
test
daa
inc
push
in
xchg
out
mov
sub
mov
mov
enter
fcmovnbe
add
sbb
mov
nop
arpl
addr16
hlt
mov
xchg
or
repnz
lahf
test
cmc
inc
mov
push
dec
mov
jge
pop
negl
push
enter
mov
sub
sub
add
lcall
gs
pop
sbb
loop
sub
ja
popa
pop
lret
xchg
incb
mov
push
cli
jb
push
ja
arpl
mov
int
fwait
adc
xchg
stc
lcall
cmpsl
lret
mov
cmp
sbb
xchg
mov
into
scas
sub
xchg
lds
cmp
mov
mov
mov
hlt
xor
arpl
push
scas
gs
or
imull
cli
add
cmp
jo
lahf
shll
jo
lea
mov
aaa
cmp
push
adcb
cmpsl
lret
shlb
fisubs
leave
lods
xor
jmp
faddl
subb
rorl
aaa
jno
mov
test
in
push
dec
jle
xchg
rol
les
ret
mov
test
xor
fimull
movsb
je
and
xchg
cs
popl
xor
lods
test
xchg
aaa
test
cmp
push
adc
sarl
jb
push
int3
pop
popa
call
push
js
mov
jb
adc
xlat
jbe
sbb
call
das
xchg
int3
sub
mov
push
mov
pop
fnstenv
inc
mov
adc
addr16
push
mov
mov
out
pop
add
test
or
data16
fs
scas
cmp
or
fldenv
mov
sub
jecxz
push
push
sub
push
pop
pop
sub
jno
push
push
lcall
push
sbb
push
stos
adc
and
nop
xchg
mov
sub
sahf
adc
les
jecxz
ret
xor
sub
aas
shll
aad
cmp
out
in
and
ss
mov
push
movsb
fs
jno
bound
iret
xchg
fimull
out
sub
lahf
movsb
test
test
mov
insb
mov
mov
les
ljmp
sub
push
push
popa
mov
sbbb
jle
or
inc
push
xchg
loope
sbb
xlat
sbb
dec
shlb
or
out
xor
jo
jg
testb
in
cwtl
addb
jp
inc
inc
fisubl
pop
loope
or
push
pop
faddl
or
inc
cli
incb
pop
xchg
pop
sarl
push
les
mov
test
test
repz
sub
sarb
sbb
add
cmc
in
xor
dec
dec
lcall
and
mov
pop
iret
mov
adc
cli
mov
pop
ja
add
jo
sbb
push
in
loope
jo
mov
xor
add
clc
enter
cmp
imul
push
mov
out
jnp
mov
push
gs
test
addl
fldt
or
ret
ljmp
imul
or
cmp
repnz
gs
adc
cmp
jae
dec
scas
aas
push
xor
mov
add
dec
rclb
inc
ret
jae
mov
adc
cld
push
fwait
js
fsubrl
mov
inc
out
inc
inc
sbb
or
sub
xor
and
daa
push
mov
adc
cmp
insl
out
adcl
shrl
xchg
jge
xchg
xchg
fstps
or
fisubs
inc
push
je
xchg
adc
test
imull
icebp
push
mov
xchg
mov
add
lock
int
les
fistl
xchg
sub
cmp
imul
nop
xor
ljmp
out
cld
insb
outsb
sbb
lret
and
cld
inc
fsin
adc
cmpsl
clc
insb
push
pop
popf
jl
stos
mov
imul
mov
xlat
pop
jg
in
pop
addr16
xor
and
jg
mov
xor
lea
or
cmp
push
cmp
sub
mov
test
mov
xchg
lods
mov
in
mov
or
repz
rcrb
jg
rcrb
fwait
and
aad
fwait
out
loope
push
inc
or
hlt
ret
and
rcl
mov
cld
cmp
xlat
loopne
dec
test
add
fdivrl
fcmovb
popf
xor
sbb
pop
sub
cld
inc
mov
mov
hlt
push
lret
pop
mov
mov
mov
addr16
or
mov
jge
mov
sbb
repz
adc
push
and
popa
or
mov
aam
out
stos
mov
std
jno
fcoml
aaa
cmpsb
pop
inc
adc
adc
jnp
pop
jp
pop
les
or
and
pop
sub
pop
lret
push
xchg
xlat
push
dec
mov
das
xchg
addb
repz
mov
or
dec
or
mov
push
xchg
pop
cmc
in
sbb
sti
daa
mov
rolb
sub
inc
add
repnz
daa
adc
ja
popl
enter
incb
add
fildl
or
push
push
sub
insl
cmp
add
imul
test
in
add
inc
xlat
js
jge
cmp
sub
and
hlt
loop
mov
test
fldcw
inc
mov
mov
xor
cmp
pop
je
jnp
adc
pop
fimuls
push
push
daa
sti
in
fwait
lret
fs
and
jl
jae
xchg
inc
sub
lret
sti
pop
mov
xchg
test
adc
push
cwtl
andl
lods
lds
repz
pushf
push
xchg
xchg
test
lahf
iret
fwait
lods
jmp
lods
repnz
or
push
pushf
dec
mov
les
and
das
gs
cmp
insl
xor
not
and
add
enter
jp
into
inc
push
aam
cs
loopne
sbb
arpl
subl
and
cmp
inc
xorb
xor
or
outsl
imul
cmp
pop
xchg
xchg
push
mov
fadds
mov
pop
jp
pushf
or
sub
xorl
xchg
pushf
cmc
mov
xchg
in
xor
push
fldl
add
push
jp
cmpsl
dec
scas
test
ja
jne
rolb
arpl
movsb
insb
jae
cmp
push
fildl
hlt
pop
test
imul
addr16
jae
imul
popf
dec
or
dec
xchg
call
jl
fsubs
fs
mov
add
clc
xchg
push
lods
std
push
add
pusha
ss
pushf
adc
jle
sub
adc
adc
std
and
mov
inc
sahf
xchg
jb
pop
movsb
sbb
xchg
pop
xchg
aas
push
sti
cld
sbb
xchg
mov
push
inc
enter
ss
inc
xchg
mov
stc
mov
out
sbbb
mov
pop
and
arpl
rorb
dec
pop
jnp
mov
sbb
jecxz
xchg
in
jns
add
dec
lret
lea
in
or
stos
adcl
sbb
ud2
and
or
movsl
cmp
pop
imull
adc
or
das
inc
mov
sub
xor
push
jl
mov
adcl
xor
pop
dec
aam
mov
and
add
cmp
mov
shrb
xchg
fdecstp
out
cmpl
daa
pop
jge
adc
pop
or
roll
adc
fwait
ret
jno
adc
inc
and
fs
xor
cmpl
add
movsl
sbb
out
in
adc
xchg
pop
pop
in
or
push
movsb
mov
mov
pusha
inc
hlt
push
out
lock
push
dec
hlt
xchg
sub
cmpsb
mov
lods
xor
cmp
dec
push
test
jnp
xchg
fsts
je
iret
popa
sbb
sbb
xor
testl
sbb
in
xchg
pop
adc
inc
xor
lea
or
and
jbe
xor
cmp
mov
dec
test
cwtl
jp
imul
scas
sbb
mov
jecxz
ret
inc
and
add
xchg
sub
push
popf
jl
ds
push
sahf
add
pop
popa
jae
js
flds
or
push
add
cmp
sti
pop
xor
pushf
scas
push
lods
xchg
xchg
adc
cmp
sbb
test
lret
cmpsb
dec
test
aaa
pop
jae
shld
bswap
cmp
arpl
push
and
xchg
enter
sub
xchg
xor
xchg
inc
xchg
mov
sbb
fmuls
shr
jge
xor
sahf
rcr
jns
cmp
inc
dec
ljmp
jne
out
jecxz
push
int3
cmp
fldt
iret
xchg
jb
push
sbb
lcall
mov
icebp
bswap
jge
mov
icebp
sbb
push
lea
push
mov
inc
mov
in
popa
add
push
loopne
or
or
sti
movsl
rorl
and
inc
and
test
push
lea
rcl
ljmp
cmc
jae
cld
sbb
mov
dec
fwait
mov
cmp
aad
xor
lret
inc
adc
faddl
mov
jp
fidivrl
pop
jmp
and
and
xor
ret
xchg
lcall
stos
ja
pop
aad
dec
xchg
push
inc
fadd
jns
and
xchg
sub
or
xchg
xor
and
test
mov
cmp
inc
dec
into
push
jae
mov
ret
xchg
lods
mov
subl
shlw
and
out
negl
fimull
pop
aaa
adc
shrl
into
decl
les
outsl
pop
in
js
push
icebp
lock
test
and
stc
inc
adc
gs
aas
pop
push
add
fisubrs
cli
insb
mov
subb
adc
sub
push
aas
sub
outsb
mov
shlb
and
pop
scas
inc
jo
sahf
inc
movsl
inc
dec
dec
add
pop
mov
lods
nop
push
xlat
int
fsub
dec
fmull
push
ljmp
imul
mov
sbb
push
lea
xlat
aad
daa
popf
int
inc
clc
lcall
sar
or
or
imulb
push
mov
xor
mov
and
mov
xchg
push
divb
enter
das
adc
dec
sub
stos
neg
dec
mov
out
mov
inc
add
jnp
cmp
mov
mov
lcall
cmp
cmc
push
test
std
inc
jnp
incb
jg
mov
arpl
scas
icebp
pop
mov
inc
mov
pusha
xor
push
mov
popf
sub
jl
add
jne
repz
xlat
movsb
popa
ret
mov
push
jg
push
sub
test
cli
pop
lahf
push
idivb
repz
cwtl
outsb
push
stos
xor
or
or
push
and
out
jae
movsl
or
pop
push
jns
das
ret
mov
mov
lret
ss
ss
out
stc
mov
mov
add
mov
jne
and
jecxz
ss
dec
jns
inc
ljmp
hlt
mov
and
lods
outsb
sarl
je
and
arpl
mov
jle
loope
inc
xor
jmp
sahf
add
lahf
sbb
mov
out
aas
push
ret
inc
and
notb
lds
adc
shrb
cmp
addr16
jge
inc
mov
dec
out
lret
pusha
pusha
pushf
fcomp
mov
xor
std
lret
lcall
lcall
dec
movsl
push
aam
repnz
adc
inc
repnz
push
xchg
lahf
lcall
iret
xor
in
adc
push
xchg
scas
xlat
pop
lahf
and
cld
add
icebp
sub
loopne
push
jns
push
pop
test
mov
or
and
rorb
jo
test
lret
sbb
mov
and
and
cmpsb
xchg
repnz
mov
aam
sub
cmp
outsw
adc
mov
cmp
adc
out
hlt
jne
mov
ljmp
sbb
adc
jnp
xchg
js
sbb
dec
ja
es
jns
lret
test
push
xor
push
mov
out
sub
sahf
adc
xorb
pushf
jns
pushf
push
fisttpl
xchg
push
aam
pop
mov
arpl
push
and
call
sbb
movsl
stc
inc
mov
fsubs
into
sub
jns
push
xor
daa
lret
jle
mov
sub
stos
adc
daa
jne
xor
fadd
int3
jg
mov
sbb
pop
jecxz
xchg
jmp
mov
testb
int
sbb
sub
cmp
lock
mov
stc
and
adc
test
sahf
mov
out
imul
stos
negl
sbb
fsubrp
mov
pop
nop
test
jp
cmp
out
push
push
aam
jnp
lea
jo
loop
scas
aam
shrb
leave
ror
xchg
cmp
in
sub
subb
mov
add
scas
in
cmpsl
scas
pushf
dec
dec
loopne
aas
mov
xchg
sub
iret
pop
adc
fs
and
sbb
add
or
loop
mov
gs
mov
movsb
sahf
sub
mov
ret
sti
insl
cmp
mov
jecxz
adc
jbe
scas
lods
or
stc
je
pop
lea
outsl
push
ss
xorb
cmp
jl
fwait
pop
xchg
arpl
mov
pop
lret
adc
adc
add
sbb
in
test
sbb
cltd
lock
and
sub
scas
mov
push
sbb
pop
loopne
jnp
jae
fimull
lock
add
imul
call
push
mov
jle
ret
fwait
mov
or
xchg
xchg
jne
es
js
mov
dec
andl
push
and
rcrl
fcomps
sub
sub
out
push
insb
nopl
js
mov
aad
push
and
cmpsl
sbb
jle
xchg
scas
pushf
sub
push
sub
jle
scas
std
pop
flds
leave
rcrb
jmp
gs
jp
pop
pop
and
xor
sbb
out
and
pop
or
jmp
adc
adc
xlat
lcall
dec
and
in
loopne
cmpsb
pusha
sti
imulb
ret
push
pushf
outsb
add
or
and
sbb
xlat
pop
test
jmp
inc
mov
and
push
jp
jnp
mov
les
and
mov
cmp
clc
leave
pop
dec
stc
push
pop
push
adc
sti
jns
js
mov
popa
mov
cwtl
adc
jge
cld
jb
mov
pop
bnd
imulb
jp
jae
mov
negb
dec
es
mov
mov
sahf
ljmp
mov
das
xchg
mov
icebp
add
pop
div
inc
xor
and
dec
stc
aam
mov
das
add
xchg
test
and
mov
xor
push
mov
xchg
or
rolb
pop
pop
adc
pop
test
dec
cmp
in
clc
push
mov
fnstcw
out
jae
les
lcall
gs
adc
bound
adc
outsb
dec
pushf
jge
pop
sbb
inc
sub
sub
lret
test
les
mov
gs
sub
ljmp
xchg
jl
out
add
mov
stos
out
jo
pop
add
ljmp
xchg
lods
int
push
hlt
cmp
xor
roll
inc
sub
ret
mov
pop
inc
mov
call
and
add
es
notl
sbb
loopne
xor
mov
inc
rolb
mov
jecxz
clc
add
icebp
mov
shr
arpl
stos
or
pop
pop
lret
mov
aas
scas
pop
sub
xchg
mov
add
mov
enter
pop
out
daa
mov
mov
push
push
icebp
aad
push
sub
push
fwait
jmp
mov
lds
je
mov
push
insb
les
cmp
xor
pop
fwait
inc
les
lock
xchg
xchg
xchg
sub
gs
mov
xor
fsts
mov
sbb
cmp
xor
mov
pop
inc
dec
or
sbb
pop
arpl
or
adc
adcb
scas
cltd
or
jmp
push
inc
pop
pop
int
mov
push
jb,pn
or
dec
sub
xor
mov
inc
stos
lock
bound
inc
push
dec
inc
lock
cwtl
jbe,pt
xchg
cwtl
cmpl
add
jl
mov
push
add
mov
fists
and
mov
cwtl
mov
jge
adc
popa
icebp
push
dec
and
mov
or
cmp
mov
and
std
test
sbbl
insl
push
inc
rorb
xchg
mov
bound
push
icebp
jbe,pt
dec
sahf
mov
js
jmp
dec
popf
nop
inc
mov
and
xchg
xchg
push
and
inc
push
dec
lock
adc
sub
cmc
loope
icebp
dec
add
lds
jo
push
aam
pop
cmp
mov
mov
xor
pop
lcall
out
cwtl
xor
fisttpl
jmp
pop
push
add
mov
cs
push
ret
mov
mov
pop
ret
fldlg2
xchg
jp
imul
cmp
int3
cltd
mov
movsl
push
test
push
dec
loop
fwait
movsb
mov
mov
inc
push
ds
sub
push
test
lods
scas
insb
popf
xchg
mov
fcmovnb
xor
pop
std
push
cmp
mov
mov
or
xor
jo
ucomiss
inc
test
outsl
dec
sahf
out
sbb
push
cmpb
scas
pop
fisttpl
inc
cli
inc
add
sbb
cmpsl
adc
mov
sub
and
in
xchg
repnz
ja
push
mov
jbe
mov
das
sbb
lock
mov
in
jo
aam
jg
jecxz
dec
int3
sbb
imul
int3
or
lods
loopne
jecxz
mov
push
jmp
ja
inc
dec
jg
scas
pusha
dec
jno
rcrl
mov
leave
jmp
fs
mov
push
mov
jg
or
add
mov
sub
dec
movsl
into
shll
jmp
mov
sbb
dec
shll
mov
sub
cmpsb
dec
js
lea
pop
pop
push
int
sahf
inc
shl
aad
out
push
fists
dec
retw
idivb
jne
sbb
shll
scas
cli
pop
xlat
adc
jbe
and
jo
mov
adc
xchg
mov
mov
aas
pop
shll
lods
push
jne
xchg
xchg
xor
pop
push
and
js
lahf
jo
jns
loopne
mov
mov
scas
repnz
in
add
psraw
jge
sub
jno
ja
cmp
repnz
loopne
lcall
enter
cmp
dec
aad
cmp
cmp
jnp
xchg
lods
fs
xor
arpl
ret
cmp
dec
sarl
pop
add
notl
js
inc
test
or
lods
add
mov
inc
mov
arpl
lret
lret
push
inc
pop
lea
sbb
xchg
dec
jmp
je
or
sub
pop
push
cmp
movsl
imul
sbb
add
push
cmp
pop
pop
mov
loopne
jle
sbb
sub
jmp
ficoml
pop
test
or
stos
je
push
shrb
out
fdivrp
adc
cmpsl
and
xor
push
call
xchg
out
jnp
adc
outsb
iret
cs
aas
and
mov
adc
jno
sub
push
sub
mov
popa
cmp
or
cmc
fisttpl
push
lahf
mov
xchg
inc
call
mov
inc
lahf
in
fdivl
fistpl
sbb
sub
ja
mov
pop
jo
pusha
pop
adc
or
ret
fstl
xor
imull
jge
repz
pop
fimuls
filds
push
sub
sub
pop
into
jo
clc
test
test
sbb
dec
dec
cld
pop
sbb
push
mov
jb
inc
xor
sbb
and
in
sarl
shrb
leave
push
inc
sbb
or
loope
test
and
stc
ds
sub
jbe
mov
mov
sbb
pop
popl
adc
aas
adc
fstl
ljmp
aas
push
sbb
cmp
xchg
fstpt
xchg
lods
mov
call
call
mov
in
xchg
daa
in
cs
hlt
cmc
sub
pop
ljmp
jb
lret
mov
xor
repz
gs
jp
push
xor
inc
pop
lock
lahf
aad
inc
mov
clc
jge
insb
add
leave
lods
sbb
leave
dec
xchg
fistpll
std
mov
add
insb
and
jp
cld
sub
pop
mov
lds
imul
mov
ret
inc
cs
negb
test
filds
mov
push
movsl
les
movsl
mov
fidivl
lret
daa
lahf
mov
repz
inc
or
add
pop
mov
adc
lods
icebp
jae
int3
fwait
mov
and
xor
cmp
or
mov
shll
jmp
xchg
hlt
push
xchg
cmc
leave
addr16
or
lock
nop
stos
pop
jl
mov
mov
mov
add
push
adc
lds
mov
mov
sbb
pop
mov
push
movsb
cmp
sub
mov
mov
out
dec
add
pop
cld
pop
shll
addr16
shlb
sub
jbe
pusha
jecxz,pn
scas
orb
mov
dec
adc
aam
inc
xor
pusha
pop
adc
je
inc
pop
fstps
mov
push
iret
into
fst
jns
pop
jne
rclb
out
imull
dec
sbb
mov
cs
mov
mov
insb
fwait
and
sbb
xchg
cmp
mov
xchg
ret
adc
je
loop
push
bound
jno
outsb
inc
bound
mov
sub
das
lods
daa
gs
jbe
rorl
mov
fisttpll
sti
and
add
inc
xchg
popa
mov
jge
pop
fsubrl
dec
out
pop
xor
sbb
hlt
jb
cli
push
imul
mov
in
jno
outsb
sbb
cmp
xchg
add
push
lahf
test
mov
stos
add
mov
fistpll
sub
lret
sti
std
into
rorl
jecxz
lea
mov
adc
xor
leave
dec
pushf
popa
imul
das
addb
test
in
stos
iret
adc
mov
test
dec
mov
ja
addr16
mov
inc
dec
ljmp
ret
jns
bound
sub
arpl
ds
jo
addb
push
fsubrs
sarb
stos
add
pusha
ds
xchg
std
push
mov
popf
cmp
data16
movsb
mov
sub
ljmp
das
and
adc
pop
sub
std
cmp
data16
mov
xchg
jl
inc
jecxz
mov
punpckhwd
sub
push
cmpsl
test
mov
xchg
int
xchg
fmuls
out
inc
mov
sbb
int
sbb
add
sarl
jmp
jns
cltd
xlat
lods
push
out
pop
fstps
mul
fsubrl
es
jp
add
rcl
je
push
fisttps
test
sub
mov
dec
insl
fldl
adc
cmp
arpl
scas
test
xchg
inc
stc
sti
or
movsb
inc
int
in
test
aas
xchg
or
stos
push
lret
add
mov
pop
push
nop
dec
shll
leave
xchg
out
outsb
dec
jo
mov
mov
xchg
sarb
push
sub
stos
lods
jnp
add
jle
lods
mov
xor
mov
sub
addr16
push
je
pop
sti
sub
jecxz
sbb
sahf
dec
jp
push
xchg
xor
jnp
lahf
sub
repz
adc
sub
addr16
jg
mov
aaa
mov
sub
dec
mov
les
ret
inc
out
mov
mov
out
adc
xor
setnp
inc
mov
mov
pop
pop
mov
shlb
repnz
imul
test
dec
rcll
cmp
fsts
aaa
or
lock
or
push
lret
icebp
lock
sub
clc
pop
pop
sub
xchg
gs
je
sub
jae
fwait
mov
mov
mov
sub
or
addl
sub
shlb
add
inc
daa
pop
out
pop
dec
dec
and
loop
cmp
arpl
add
mov
sub
and
rolb
sbb
lods
xchg
xchg
int3
adc
mov
dec
in
clc
adc
push
icebp
sbb
clc
pop
pop
out
aam
push
xor
sub
jnp
adc
mov
lahf
jno
arpl
arpl
xchg
sbb
lahf
pop
loop
test
add
mov
mov
testl
push
ja
cmp
and
cmp
nop
add
cmc
inc
lahf
sub
jl
icebp
jne
sbbl
stos
pushf
imul
and
jle
out
lods
loope
jg
add
xchg
loope
or
mov
sti
sub
je
mov
sti
in
arpl
xchg
push
or
jecxz
push
je
icebp
dec
out
sti
hlt
jb
mov
lret
dec
mov
pop
mov
test
xor
arpl
subb
mov
xchg
mov
and
xlat
enter
shlb
lods
mov
imul
ss
xchg
pushf
xchg
imul
in
push
xor
imul
jl
pop
bnd
pop
popf
add
sub
mov
sbb
and
inc
jb
test
dec
rcl
leave
fstp
sbb
mov
in
mov
pop
mov
pop
fwait
daa
jns
loop
sbb
cmp
jo
fidivs
pop
pop
lret
outsl
fcom
mov
test
push
jge
icebp
and
fnstcw
sbb
stc
push
stc
outsl
push
mov
in
gs
aad
js
cltd
add
aas
adc
push
adc
mov
popa
lret
scas
xchg
mov
pop
mov
fbld
dec
icebp
movsl
adc
lods
cld
je
adc
test
iret
pop
cs
out
nop
mov
lock
cld
fstpl
jnp
push
xchg
repnz
mov
decb
jae
sub
xchg
push
std
fisttps
std
push
std
outsl
sbb
out
imul
call
push
rorb
adc
and
sub
scas
jge
push
xchg
out
sti
mov
mov
adc
insl
es
inc
scas
cmpsl
pop
out
aam
inc
aaa
scas
in
data16
push
in
aam
mov
mov
mov
xchg
ds
jl
pushf
sub
push
pop
sub
pop
fcoml
lods
mov
inc
pop
sbb
je
push
dec
flds
pop
xor
fwait
popa
push
aad
pop
nop
lock
pushf
pop
mov
jne
lret
jo
sbb
dec
mov
cmc
jg
outsl
int3
and
data16
sbb
push
popa
in
xor
test
gs
inc
jmp
and
loop
mov
test
xlat
push
jg
adc
jg
test
inc
mov
push
inc
inc
xchg
bound
clc
mov
jp
adc
mov
lcall
xor
fisttpll
and
lret
mov
jle
adc
imul
push
add
jne
pop
push
jb
push
push
mov
or
fidivrs
jno
rcl
jo
add
mov
push
jae
dec
xor
pushf
es
cltd
lods
or
mov
sub
jo
out
fnstenv
adc
jge
out
or
xchg
cmp
rcrb
test
repz
sbb
repnz
jb
sahf
jne
mov
inc
mov
and
and
popa
push
jle
lahf
push
jmp
cwtl
psubw
rcrb
xor
outsb
sub
mov
orb
call
and
scas
inc
jg
cmp
das
mov
js
inc
cmpsl
outsl
pop
rol
xchg
dec
jae
inc
call
jb
and
int3
mov
negl
cmpsl
andl
movsb
ret
insl
xchg
pop
xlat
enter
xor
mov
rolb
or
xor
lock
cmp
add
mov
mov
mov
in
into
jg
mov
adc
aas
pusha
pop
mov
fwait
push
add
int
sti
test
lods
xchg
adc
xchg
icebp
jns
out
and
add
std
scas
mov
int3
dec
sbb
addb
xchg
ss
sub
lods
adc
in
inc
pop
in
and
cmp
sahf
scas
sub
scas
int
dec
enter
movsl
or
mov
jo
xor
movl
out
jne
testl
inc
lods
xchg
fs
pushf
out
adc
lds
or
scas
int
pop
add
je
xchg
inc
sbb
repz
or
mov
push
repnz
xchg
push
jl
sbb
cmp
cmp
hlt
jno
and
dec
data16
cmp
push
ret
adc
dec
scas
add
xchg
cmpsl
aas
dec
add
mov
fld
inc
clc
mov
es
mov
scas
mov
or
xchg
xor
ret
jle
mov
ja
add
je
out
inc
pop
cmp
mov
std
testb
mov
jg
movnti
sub
outsl
cs
les
mov
aas
jnp
xchg
imulb
sti
in
dec
lret
test
mov
push
add
lods
pushf
inc
sbb
test
mov
mov
out
cmc
xor
mov
into
mov
or
mov
lret
sub
mov
js
jo
or
inc
cmpsl
dec
pop
pminub
jp
jl
call
push
xor
xlat
ret
cli
into
imul
mov
dec
pop
jb
push
imul
xor
xchg
lahf
sti
out
xor
sub
bound
std
or
mov
or
ljmp
xor
aad
sub
lret
jns
cmpb
sub
jbe
cmpsb
and
repz
dec
cmp
sub
dec
test
ret
loop
mov
gs
pop
push
stos
xor
adc
mov
or
pop
mov
cs
sbb
pop
xchg
sub
mov
cmp
test
or
xor
es
test
repnz
cmp
mov
inc
sub
dec
pop
sbbb
and
mov
gs
lds
mov
stc
sbb
inc
pop
popf
dec
lods
icebp
sub
addb
xor
repnz
sub
pusha
dec
cs
add
xchg
push
out
insl
sub
inc
jnp
and
mov
mull
dec
mov
adc
lock
sbb
mov
and
std
mov
mov
les
inc
es
mov
pop
fs
push
or
mov
andb
sub
loope
inc
dec
mov
pop
cmp
dec
enter
push
faddl
cld
add
clc
fiaddl
dec
adc
pop
loop
pop
nop
sahf
xchg
and
in
inc
call
cmp
aam
cmp
imulb
xor
pop
pop
inc
cmpsb
dec
je
je
dec
push
dec
dec
sub
int
jbe
leave
cli
cmp
add
ret
cmpsb
pushf
ja
bound
bound
push
lock
aam
push
sub
or
cld
sub
scas
les
ljmp
stc
adc
xchg
lock
xchg
bound
out
ret
sbb
leave
dec
push
adc
or
cmp
sarl
fidivrs
lret
push
testl
dec
movsl
mov
push
push
xor
and
bound
inc
int3
and
xor
in
push
inc
testb
in
or
jecxz
leave
lods
ja
ja
or
in
daa
cwtl
call
pop
xchg
or
sbb
mov
fwait
repz
mov
add
xchg
lret
or
and
mov
pop
mov
bnd
or
dec
aad
mov
fucomi
inc
test
stos
jle
pop
dec
out
aam
test
or
add
rorl
lds
call
pop
mov
fs
subl
das
jg
sbb
inc
idivl
mov
mov
nop
push
mov
add
in
rorl
or
mov
jo
sbb
popa
mov
cmp
into
pop
dec
adc
pushw
xor
jo
es
lds
test
and
pusha
add
imul
daa
fmul
mov
fs
mov
add
stos
add
mov
jne
imul
xor
add
cmp
in
movsl
scas
imul
sbb
inc
xchg
sbb
mov
stc
xchg
cmc
aaa
pop
cmp
jo
daa
jmp
mov
xchg
hlt
or
mov
rol
dec
enter
or
repz
xchg
test
dec
jnp
cs
fstps
enter
repnz
xchg
rcr
pop
shll
aaa
shl
jne
sar
mov
push
shlb
mov
push
xor
cmp
test
repnz
in
fsubrl
movsb
cmp
xchg
aam
xor
mov
xchg
mov
push
js
mov
push
fists
mov
les
or
data16
mov
and
pop
mov
push
xchg
sarb
in
faddl
xchg
fdivrs
clc
lret
enter
jl
jbe
ret
xlat
mov
addr16
fldenv
push
dec
test
cmp
imul
sub
jmp
xchg
xchg
in
inc
sbb
test
xor
mov
mov
xchg
lods
mov
movsl
lods
int3
in
fbstp
push
or
lcall
mov
dec
popa
jg
xchg
ja
and
fwait
xchg
push
mov
std
pcmpgtw
xor
cli
lcall
mov
mov
lods
pop
add
jmpw
cmp
sbb
xor
test
cmp
cmpsl
xor
fistpll
jno
outsl
das
or
inc
enter
pop
mov
jo
mov
cmp
pop
in
mov
xchg
jmp
inc
test
sub
push
mov
pop
xchg
sub
jne
cmpsb
inc
clc
repnz
jg
xchg
nop
jae
and
and
cmp
push
add
xor
js
repnz
out
fsts
mov
adcl
xchg
insb
push
lock
push
sbb
push
or
xor
pop
pop
arpl
push
pop
and
scas
repz
lcall
imul
fsubl
push
add
addr16
fldcw
fcmovnb
in
inc
jne
insb
pop
xchg
js
mov
sbb
push
fwait
pop
out
sbb
or
shl
push
dec
lods
xor
mov
clc
xchg
mov
xchg
lret
sub
sbb
popf
xchg
stos
clc
faddp
cmp
mov
dec
adc
xchg
notb
mov
push
les
cmc
mov
inc
fdivl
test
cld
mov
lds
lcall
aad
dec
adcb
jbe
not
or
xchg
mov
and
cltd
idivb
mov
cmp
cmovge
mov
jmp
mov
cs
push
stc
in
mov
mov
fwait
pop
imul
test
call
and
xor
cli
or
mov
xor
pop
adc
cmpsb
outsb
xor
lods
or
dec
lahf
push
pop
sbb
in
mov
jge
sub
mov
sub
xor
mov
cmp
ds
fidivs
sbbl
xlat
xchg
and
xlat
jg
lds
popf
inc
push
hlt
mov
mov
fs
lahf
dec
mov
lahf
daa
fnstcw
subb
lock
mov
addr16
and
and
inc
inc
mov
nop
inc
xlat
mov
data16
cmp
aam
mov
pop
or
iret
iret
aam
or
mov
je
xchg
push
sub
aaa
xchg
jnp
aam
pop
pop
adc
mov
shrl
mov
cli
push
test
and
clc
in
jae
xlat
xor
mov
sbb
popa
rorl
push
out
pushf
or
push
add
test
out
minps
inc
sbb
cmp
je
mov
and
mov
out
cmc
lcall
xor
push
and
inc
sbb
js
push
cltd
lahf
lds
insb
mov
adc
iret
jae
xlat
jmp
add
fwait
js
movsl
mov
lret
js
sti
push
cmpsl
in
push
and
les
pop
mov
imul
jmp
pop
sbb
add
cmp
pop
mov
mov
dec
cwtl
xlat
or
pavgb
adc
add
imul
cmp
jmp
jno
mov
jge
push
inc
subl
cmpsb
das
jmp
dec
adc
pop
jl
hlt
pop
mov
mov
add
test
sbb
adc
std
pop
into
aad
icebp
jecxz
mov
jge
pop
sti
cwtl
mov
push
stc
mov
mov
dec
fildl
pushf
mov
jecxz
adc
scas
lcall
cmpl
mov
int
arpl
ja
lea
aad
movsl
dec
lock
out
lret
mov
in
pushf
mov
mov
in
sti
pop
js
xor
fadds
jmp
add
push
outsb
mov
jo
popa
in
roll
lret
cmpsl
pop
mov
cs
sbb
incb
cwtl
cmpsb
fwait
stos
jne
jmp
rcll
push
or
in
sarl
push
add
fdivr
hlt
es
cmp
push
lds
test
jns
jo
xorb
mov
rcrl
dec
jg
arpl
fistpll
std
pushf
daa
xlat
cmp
outsb
rorb
xchg
bnd
sahf
add
xor
add
mov
out
jg
mov
into
test
dec
dec
movsb
ret
into
je
sub
in
in
adc
dec
adc
sbb
gs
push
jge
xor
cmp
mov
or
add
fidivl
ljmp
mov
jp
pop
gs
adc
push
jb
jbe
movsb
push
push
push
lea
pop
push
ret
jle
stos
dec
jecxz
jb
rep
sbb
cltd
adc
lcall
out
in
xlat
xor
das
nop
add
jmp
push
push
test
dec
faddl
dec
sahf
ja
sbb
testb
outsb
xor
fsubrs
dec
pop
sub
test
imul
test
inc
or
gs
lods
pop
mov
cmp
fs
lret
and
dec
jge
sbb
cld
push
jge
jnp
in
jg
insb
nop
push
or
cs
mov
and
outsl
lret
in
xor
and
pop
lds
cmpsl
insl
daa
jecxz
lods
fistpll
jge
test
mov
jbe
jg
int
shll
sbb
icebp
je,pt
pop
add
lods
xor
sahf
mov
rorb
inc
addr16
arpl
pop
sarb
jbe
clc
add
push
mov
lock
addr16
xor
fstpt
dec
into
adc
cmp
xor
pop
mov
icebp
xor
mov
dec
push
dec
jno
pop
cmp
xchg
les
xor
jmp
mov
std
cmc
in
mov
int
adcb
shll
cmp
jge
push
inc
cld
pop
addb
dec
jmp
cltd
xchg
jne
into
pop
mov
dec
adc
lods
cmp
sub
push
in
arpl
xchg
xchg
dec
push
pop
leave
and
jge
jmp
sbb
leave
mov
mov
loop
sbb
jecxz
std
aas
in
pop
push
test
out
lock
xor
jae
xor
sub
push
cmp
lock
repz
and
and
push
push
push
jmp
xchg
lcall
xor
test
jp
out
mov
sahf
push
insl
inc
test
dec
lret
in
stos
adc
adc
mov
xchg
imul
int3
jne
mov
js
pushf
xchg
movsb
scas
jle
mov
ret
bound
or
in
test
pop
shll
jle
inc
mov
mov
and
sub
jns
pop
adc
lret
js
stos
pop
cs
loop
sub
sub
push
scas
inc
or
xchg
outsl
jo
insl
das
in
in
xchg
xchg
pop
shlb
dec
iret
jne
jg
loopne
mov
cltd
dec
push
movsl
jno
and
out
xchg
cmp
push
adc
andb
inc
inc
mov
ja
mov
js
jecxz
jge
dec
insb
push
mov
push
mov
jle
jo
xor
pop
mov
cmp
sahf
jne
aad
shrb
xor
in
ss
inc
adc
rcrl
ret
and
mov
je
jb
dec
sub
lcall
cmp
add
and
int
unpcklps
inc
mov
add
xlat
lods
push
cmp
arpl
inc
shll
lcall
or
lods
imul
fmulp
sub
jl
in
sbb
adc
cwtl
push
mov
ss
out
into
int
sub
js
push
pop
dec
and
sub
leave
in
loopne
lret
cmpsl
repz
arpl
xor
dec
mov
lcall
loop
test
mov
fdivrl
pop
or
xchg
push
ss
mov
nop
and
out
and
jb
out
jne
imul
or
add
std
aas
pop
stos
pushf
ret
xor
in
jns
or
or
jl
push
pop
jg
mov
mov
scas
push
fwait
pushf
adc
fsts
hlt
and
inc
hlt
sub
rorl
fnstsw
fdecstp
nop
adc
add
fs
jmp
jne
les
pusha
or
push
pop
lea
or
xchg
add
xchg
inc
inc
inc
cmpsb
shr
popf
or
xchg
xlat
and
hlt
out
mov
cwtl
mov
test
cltd
shrl
jno
bound
push
and
xchg
push
in
add
xchg
adc
iret
dec
jno
iret
sub
lahf
cli
and
xchg
aas
dec
sub
outsl
mov
in
int
es
push
int3
nop
subl
pop
pop
repnz
cmp
pop
shrb
mov
ficoms
and
jp
in
add
pop
dec
or
insb
push
inc
xchg
sahf
in
mov
sbb
xchg
cmp
adc
add
loop
stos
or
fidivrl
xchg
fimuls
jbe
ljmp
in
or
mov
outsb
int
notb
iret
scas
jg
pop
lods
xchg
add
or
aad
ds
mov
fs
dec
jne
insb
sub
dec
sbb
inc
pop
stos
xor
jmp
dec
int3
aaa
adc
fidivs
sub
es
push
int3
in
or
iret
ret
jb
imul
xchg
mov
or
cwtl
sbb
jge
push
scas
mov
jbe
mov
scas
and
shll
lds
ret
icebp
push
aas
cmpsb
cmp
ja
xor
lock
and
fcoml
ret
sbb
sub
sub
clc
mov
jo
push
loop
xchg
xor
jecxz
mov
jmp
xchg
shll
or
rorb
addb
lods
gs
aad
dec
push
mov
rol
jnp
inc
xor
lock
iret
pusha
loop
xor
stos
lcall
aam
xchg
add
push
mov
lret
xchg
jl
xor
cmpsb
in
ret
push
out
jb
pusha
shll
aad
test
rol
pop
test
addl
pop
jno
pop
and
test
sub
int3
bound
mov
jle
mov
inc
mov
pop
or
pop
jg
ret
into
add
add
adc
lock
and
sbb
ja
pop
cmp
xchg
fiadds
test
cmpl
jns
cmp
test
iret
ds
mov
sub
or
sahf
rcrl
fidivl
mov
rorw
cmpb
scas
add
push
les
popf
mov
sti
jno
cmpsb
repz
and
mov
mov
pop
mov
sbbb
fcomps
mov
mov
sub
xchg
mov
hlt
repz
fldcw
mov
jb
inc
shlb
int3
jmpw
xchg
push
fdivs
xor
popf
out
mov
adc
dec
into
and
jnp
or
and
sbb
sub
mov
clc
stos
sbb
bound
gs
into
test
lea
bound
aas
mov
mov
xchg
shrb
fwait
into
mov
cmp
andb
add
cmc
jp
mov
cmp
pop
mov
int
jp
lods
cmp
and
das
in
dec
cwtl
pop
mov
ds
pop
in
dec
add
adc
mov
cmpsl
test
pop
mov
sub
push
adc
sarl
call
pop
shr
ljmp
push
xor
lcall
pop
in
adc
jmp
push
adc
or
loopne
out
out
pop
mov
insb
loope
call
mov
repz
sar
gs
push
clc
ljmp
movsl
add
cmc
add
stc
popa
dec
inc
ror
dec
adc
rol
je
out
sbbl
inc
or
shl
bound
in
adc
sbb
jl
jno
add
push
ret
aad
xor
jae
shll
add
sbb
rcl
daa
xchg
xor
rorb
js
pop
pop
mov
sar
cli
adc
mov
jle
aad
aad
xor
pop
push
xor
lss
imul
xor
jg
lea
mov
cmpsb
addr16
add
sbb
push
pop
pop
cmp
fsubrl
aas
cmpsl
enter
fisttpll
js
pop
xchg
adc
mov
cltd
in
in
sbb
hlt
pusha
bound
add
aas
std
mov
push
fdivrs
push
hlt
sub
jbe
or
shlb
loop
dec
je
cmpsb
aad
aam
sbb
xor
jae
mov
push
jg
into
mov
jl
or
inc
jl
lret
scas
dec
rclb
loopne
iret
dec
pop
pop
ret
jg
hlt
stos
mov
fsincos
cmp
mov
mov
xchg
jmp
sub
aad
imul
inc
ss
push
rorl
int
xchg
inc
sahf
mov
push
fistpll
xchg
dec
int3
in
xor
mov
push
shlb
das
les
icebp
les
lcall
jmp
cmp
shlb
adc
add
jmp
ret
sub
adc
jbe
int3
test
in
test
mov
push
aad
ds
sbb
adc
outsb
pop
cmp
ds
jecxz
inc
repz
sbb
inc
mov
add
fidivrl
sub
pusha
rclb
push
push
scas
pushf
jno
pop
gs
scas
cmpsb
lods
mov
stos
dec
cmpsl
loope
mov
jno
je
mov
jns
gs
js
sub
cwtl
xor
dec
mull
insl
or
dec
xor
in
jg
shrl
repz
pop
cli
cmp
hlt
dec
push
rcl
pop
mov
cmp
into
mov
xchg
push
cmpb
pop
lahf
mov
mov
call
ret
insb
and
lea
cmp
cltd
int
ss
inc
inc
sub
mov
sbb
pop
js
pusha
dec
push
js
out
les
les
mov
popl
scas
add
mov
and
add
xchg
lea
ds
out
mov
push
adc
enter
add
ljmp
mov
mov
setae
stos
pop
fadds
xor
and
dec
add
out
xchg
cltd
push
loop
fwait
pop
call
cmpsl
in
stos
ficomps
add
sbb
push
enter
push
push
inc
jb
jns
and
fadds
into
data16
mov
sarl
inc
xchg
leave
shll
cmpsb
xchg
and
stc
lods
repz
lods
cmpsb
mov
repz
push
cmp
ja
push
or
jmp
loop
pop
inc
ljmp
hlt
xchg
jl
or
mov
js
mov
into
addr16
rcl
jecxz
mov
and
cmp
push
sub
subl
lds
adc
leave
adc
popa
inc
push
popa
push
std
ss
dec
pop
push
inc
sub
mov
test
sbb
mov
lret
mov
lahf
mov
loop
mov
and
push
outsb
mov
mov
xor
fimull
fistpll
jl,pt
push
dec
mov
rorb
or
iret
push
lahf
sbb
mov
jg
clc
cmp
hlt
push
out
in
pop
test
sub
out
jbe
stc
sub
add
test
jge
xor
enter
jp
shrl
sub
jnp
inc
iret
xor
addr16
mov
iret
sti
cmp
jp
outsl
int3
mov
pusha
pop
out
repz
std
out
enter
fcmovb
or
mov
inc
mov
mov
xor
add
int3
sbb
popa
fcomps
sub
fcoml
sub
push
out
or
scas
or
in
mov
mov
ret
xor
mov
stos
mov
sub
dec
or
ret
aas
cmc
and
and
pop
outsl
mov
push
jmp
xor
stos
mov
mov
xorb
adc
sar
ret
je
scas
adc
add
in
loopne
sbb
dec
xor
imul
pushf
dec
nop
daa
dec
and
mov
sti
push
jg
sbb
clc
adc
push
xor
shll
in
in
lret
push
add
fdivl
add
xchg
fwait
lods
int3
and
loope
cmc
ds
ds
icebp
or
outsl
enter
repz
shr
rcl
sbb
mov
mov
and
cmpsl
out
add
pushf
jmp
mov
repnz
jmp
orb
mov
repz
xchg
out
inc
push
cwtl
or
lret
add
pop
sbb
mov
push
movsl
call
jno,pt
inc
hlt
sub
xchg
jg
adc
arpl
fdivrl
cmp
xchg
push
lret
xlat
sub
lds
stc
jns
or
add
cwtl
xchg
pop
or
lock
inc
lods
push
scas
je
std
inc
cmp
nop
call
cmp
xorb
jle
sub
or
dec
lea
aam
test
sbb
push
sub
and
movsl
out
pop
loop
dec
xor
gs
stos
test
call
fldl
roll
fisubrl
aad
into
mov
xchg
xchg
stc
xor
xlat
pop
mov
adc
test
dec
fdivrp
popf
ss
cmp
test
lret
loopne
dec
test
mov
cs
ja
je
sbb
mov
es
shlb
or
out
insl
imulb
je
xor
roll
ds
mov
int
stos
mov
aam
loop,pn
mov
mov
popf
cmpb
add
outsb
cmp
mov
add
incb
dec
sbb
xchg
andb
cmpsb
cmp
xchg
mov
xor
lret
shll
fbstp
pop
test
cmc
movsl
push
sbb
or
aam
fnstcw
sbb
cli
or
out
pop
inc
and
add
shrl
sahf
test
or
scas
xchg
mov
fdiv
jnp
scas
dec
sarb
popa
xchg
xor
notb
sub
adc
inc
pop
push
jecxz
lcall
sbb
lods
test
dec
fucomi
call
scas
js
mov
arpl
shr
dec
pop
inc
test
or
scas
in
popf
and
out
sub
nop
jne
sti
jge
xchg
or
fs
jne
and
dec
lret
aas
or
clc
jno
repnz
xor
push
nop
sbb
cltd
sahf
and
scas
repnz
add
pushf
xlat
and
cmp
sub
dec
xor
cmpsb
or
dec
imul
mov
or
xchg
jb
pushf
adc
fdiv
je
mov
in
les
nop
and
sahf
jle
mov
testl
cmp
xor
out
call
adc
sub
sbb
mov
or
push
inc
push
and
and
fimuls
aas
pop
test
push
insl
sbb
cmpsb
sbb
int3
xor
sub
pop
fidivl
adc
mov
sbb
xchg
mov
jge
mov
les
inc
xor
add
cmp
pop
popa
aas
out
stos
jp
inc
bound
xchg
xlat
movl
mov
pop
inc
iret
ficoml
mov
test
add
sub
mov
pop
aas
in
push
jp
add
sarl
cmpsb
push
jp
jmp
cmc
mov
dec
rclb
jp
mov
cmp
test
push
inc
jno
jecxz
jbe
mov
lds
inc
pop
int3
repnz
jb
lods
movlps
lock
jmp
jno
pushf
mov
loopne
test
lock
daa
loopne
adc
add
aam
pop
mov
lahf
dec
xchg
mov
add
mov
push
xchg
popa
pop
jne
filds
adcl
xlat
or
cmp
jbe
shlb
or
out
mov
cmpsb
ljmp
jb
push
outsl
sbb
out
pusha
fwait
ret
and
mov
pop
or
jae
push
xor
in
insb
mov
jmp
mov
push
and
mov
adc
repz
push
or
addl
pop
mov
jb
pop
icebp
jnp,pn
jns
adc
outsl
sub
fwait
outsb
sbb
addb
jb
xor
xor
icebp
cld
jno
pop
mov
add
stos
aas
cmp
xchg
xchg
adc
mov
and
add
dec
ret
and
rclb
push
sub
sbb
sub
jae
mov
mov
cmpsl
dec
std
pop
lods
insb
aad
mov
push
cmp
cmp
movsl
jae
repz
mov
jno
lods
push
mov
adc
cmp
loopne
subl
xor
ficomps
shl
adc
sbb
xor
or
add
mov
in
cli
jno
lret
cmc
adc
test
fsubrl
hlt
hlt
jp
pushw
sbbb
add
fs
daa
dec
mov
add
dec
rcr
sbb
jo
xchg
in
cmp
into
hlt
jmp
mov
jnp
aas
xor
pop
pop
lods
jno
lcall
ret
insb
je
dec
push
sub
add
adc
mov
push
in
dec
out
jl
mov
pushf
mov
ja
repnz
fcompl
test
pushf
xor
push
cmp
fdivl
cmpl
dec
aam
loope
jmp
addr16
aas
popf
xchg
jg
jo
push
and
test
adc
notb
mov
xor
repz
pop
ds
insl
xchg
push
fidivrs
dec
adc
ds
and
push
jnp
sub
stos
movsb
ficoms
add
and
aas
xchg
imul
cs
stos
jmp
shll
arpl
sahf
pusha
pushf
pop
std
je
or
dec
push
push
sbbl
sti
dec
jg
enter
rcll
in
out
gs
push
cwtl
inc
daa
mov
fstpt
lods
out
mov
xor
cmp
jnp
sbb
lea
mov
xor
ss
fdiv
add
push
arpl
cmpsl
call
ret
jne
cmpsb
rol
pop
fstl
xor
test
popf
jo
fistpll
ret
in
cmp
scas
inc
push
sub
mov
cmp
adc
dec
xor
test
mov
outsl
adc
cmp
fdivs
mov
inc
aam
or
dec
adc
cmc
push
bound
test
fucomi
repnz
mov
hlt
fs
in
sbb
in
movsl
xchg
sbb
stos
dec
xchg
mov
cwtl
fmuls
pop
test
loop
mov
mov
rcll
in
xorb
jno
push
dec
mov
mov
push
rorl
add
imul
icebp
jg
sbb
out
sub
lret
jns
mov
push
adc
sub
ja
repnz
or
inc
into
out
adc
stc
push
mov
into
cmp
cmp
pop
mov
je
pop
or
pop
mov
adc
call
divl
out
push
sub
pop
and
icebp
rcrl
or
xor
ret
jp
aas
jg
cmp
fbld
jg
push
mov
cmp
push
inc
inc
mov
dec
jl
scas
ret
stos
xor
xchg
scas
adc
das
in
jmp
xor
xor
outsb
xlat
jp,pt
mov
scas
xchg
jge
xor
popf
outsl
push
cmp
mov
or
imul
sbb
push
notb
xchg
add
push
mov
pop
jmp
fcmovnbe
mov
popa
jl
ror
inc
xchg
lret
mov
mov
addl
in
rcrl
out
repz
in
aas
push
ja
inc
nop
lods
insl
lock
pop
xchg
je
stos
loope
xor
mov
mov
lods
mov
jl
mov
clc
cli
mov
cmp
fisttps
xchg
dec
repnz
pop
stc
aas
push
sbb
mov
mov
add
out
repz
mov
sbb
pop
popl
ret
scas
xor
cmp
scas
adc
jae
jge
cwtl
insb
shlb
leave
loopne
jge
scas
xor
insb
adcl
lods
ds
js
je
sub
lea
xchg
inc
dec
les
xorl
cmp
call
mov
ljmp
sub
hlt
leave
lock
cmp
inc
movl
sbb
cld
push
jmp
jae
jmp
cltd
jle
xor
cli
movsl
pushf
or
and
out
xchg
aad
gs
cmp
imul
pop
xlat
pop
and
xchg
outsl
loope
cs
mov
lods
ret
scas
adc
enter
scas
outsb
in
shrl
push
insb
inc
loop
int
enter
jo
insb
jno
cli
push
popf
popa
dec
addb
mov
add
dec
add
add
fdivrs
mov
hlt
mov
popa
jge
in
cltd
push
lods
outsl
xor
and
inc
adc
jo
ret
and
xor
and
std
pushw
dec
sub
add
dec
sti
nop
cmp
out
xchg
mov
es
lods
pop
and
xchg
lahf
inc
nop
fsubs
mov
shr
push
les
out
inc
mov
push
pop
xor
jns
adc
cmp
pop
fidivrl
xor
btr
pop
mov
ljmp
mov
cmpsl
stos
mov
mov
in
cld
mov
test
popf
out
dec
lcall
cwtl
mov
sub
iret
xor
test
pop
mov
ja
sub
jmp
or
das
sbb
roll
pop
out
aam
xchg
pop
call
sub
cmp
loop
dec
add
push
adc
push
rcrl
or
stos
or
fwait
cmpsl
sti
mov
hlt
aad
jp
movsl
pop
stc
outsl
mov
jecxz
sti
lret
pop
insl
jo
jecxz
iret
pop
pop
add
test
or
add
mov
lock
out
enter
lahf
pop
js
iret
imul
add
ss
mov
imul
inc
cmp
pop
push
inc
es
dec
cmp
xchg
pop
mov
fcoms
and
mov
mov
xor
push
icebp
pop
add
mov
sbb
stos
sub
imul
pop
mov
dec
dec
mov
roll
cmpsl
out
mov
sub
in
ja
lds
xchg
lds
pop
inc
push
and
into
push
mov
lods
add
mov
jne
mov
repnz
lods
clc
push
mov
jbe
xor
pop
dec
xchg
fwait
jl
out
std
outsl
mov
inc
fmull
dec
push
aad
cmpsl
push
xchg
shll
adc
sub
dec
jno
fidivl
mov
jne
xchg
sub
mov
shlb
pop
fsub
nop
ljmp
lcallw
pop
in
push
das
addr16
outsb
xchg
fisubs
mov
sbb
xchg
sti
lock
cmp
aaa
inc
mov
lea
inc
adc
mov
mov
adc
das
lcall
mov
std
test
push
sub
jmp
dec
jae
pop
mulb
xchg
jbe
inc
xor
clc
std
addr16
repz
imul
mov
scas
adc
mov
push
dec
test
cmp
je
movsb
in
push
adc
in
in
mov
cwtl
aad
cwtl
out
xchg
ror
out
jae
mov
jg
mov
test
das
in
int
xor
sub
sbb
inc
xor
pop
popa
pop
and
mov
mov
popa
jo
shrl
rol
push
rcll
jmp
dec
jnp
mov
cmp
outsl
jecxz
cs
inc
jge
incl
push
mov
out
aad
jb
mov
outsl
xchg
push
out
dec
or
jo
rolb
mov
inc
leave
xlat
xlat
ljmp
idiv
sub
je
outsb
or
mov
es
or
or
stc
jge
adc
shr
fcmovnb
aas
int3
sahf
js
outsl
adc
or
jno
mov
pop
push
ret
cmpsb
mov
iret
xchg
std
mov
pop
push
inc
rcrb
sbb
mov
in
sub
or
jns
xlat
ja
test
sarb
enter
push
cltd
scas
idiv
nop
arpl
and
sub
jo
out
mov
lahf
rolb
sbb
mov
es
xchg
dec
aam
cwtl
movsl
add
inc
mov
adc
xchg
mov
cs
cmp
cmp
mov
sti
rcll
inc
ja
fwait
aas
imul
arpl
rorb
dec
test
lock
jge
sbb
cwtl
loop
sti
mov
or
sbb
lods
xchg
sub
jecxz
lods
aaa
insl
sub
mov
dec
stc
sub
call
sub
notl
or
ss
and
and
imul
loope
hlt
ja
xchg
movsb
shl
inc
and
or
mov
dec
out
cmp
sbb
dec
lods
lods
inc
bound
push
js
sub
jae
sub
mov
inc
mov
and
cli
je
xor
fs
ret
mov
and
sti
lock
test
lret
in
xchg
sub
cwtl
mov
push
inc
sbb
add
mov
cmpsb
sahf
and
and
gs
pop
pop
fcoms
nop
mov
pusha
jge
mov
xchg
inc
pushf
jno
sub
arpl
dec
xchg
dec
mov
call
das
ficoms
ljmp
stc
cmpb
jbe
mov
cs
enter
add
out
and
mov
movsl
and
pop
inc
cmc
je
xor
xchg
test
mov
push
adc
adc
hlt
loope
aas
ja
aad
pop
cmp
lret
cmp
insb
repnz
or
addl
and
loopne
stos
cmpsl
in
pop
inc
sarl
fisttps
inc
addr16
dec
insl
leave
mov
push
adc
cmc
test
adc
push
xchg
cwtl
in
dec
shlb
inc
rcpps
mov
das
pop
dec
int
push
shrb
int
cmp
scas
cmp
inc
cli
hlt
push
sub
inc
hlt
and
pop
scas
pop
mov
jno
fdivrl
mov
ret
lahf
jg
or
std
ljmp
shll
lret
icebp
or
cmp
loopne
sbb
sbb
in
cmpsb
mov
andb
insl
ret
mov
shll
cli
or
mov
lret
ror
imul
shrb
outsl
and
iret
loop
leave
push
push
std
sarb
enter
mov
ret
pop
fnstenvs
xchg
or
xor
rolb
scas
in
sahf
addr16
repz
mov
add
aam
lds
mov
dec
mov
ficomps
adc
mov
mov
je
je
ss
and
test
fisubl
jno
repz
out
sub
in
and
repz
dec
pop
xchg
mov
das
js
je
lret
adc
cmpsl
rcrl
adc
pop
push
cmp
adc
inc
jne
and
pop
sbb
call
mov
pop
pop
pop
or
xlat
shrl
sbb
out
cwtl
add
icebp
jo
and
pop
pop
nop
pop
mov
shrb
sub
pop
call
sbb
int
or
adc
data16
mov
push
jno
shlb
nop
fmull
pusha
fidivrs
xlat
gs
subl
mov
fwait
idivb
cli
rolb
xor
jbe
cmpb
int
sbb
lret
mov
dec
mov
shrl
daa
stos
jmp
hlt
push
shlb
push
scas
pop
jp
je
repnz
push
movsb
xor
outsb
or
adc
push
je
inc
push
xchg
out
push
lcall
sub
dec
cmp
decl
std
push
sti
sub
inc
addr16
rcrl
jno
lods
sbb
jae
inc
and
push
push
xchg
int3
fcmovnb
call
ja
mov
jge
faddl
into
sbb
loop
fildl
in
adc
fwait
roll
cmp
dec
popl
push
movsl
loopne
dec
shr
and
cmp
hlt
cmp
lods
mov
lock
lea
out
ret
add
jnp
out
sbb
pushf
pop
or
inc
dec
pop
jle
or
mov
enter
xchg
cmp
cmp
sub
ucomiss
mov
mov
dec
xlat
adcb
aas
leave
pop
sbb
push
push
mov
popf
push
sbb
leave
daa
and
mov
loopne
ret
stc
dec
fs
xor
cmp
imul
jg
adc
les
aad
test
test
xor
insl
mov
inc
sub
idivl
sbb
inc
pop
lahf
mov
push
sub
fnstcw
imul
sub
add
fbld
cmpsb
or
repz
addr16
xchg
xchg
cmpsl
add
jg
jnp
hlt
mov
jno
bound
shrl
mov
push
movsl
in
aad
add
add
dec
aam
cmp
cmc
roll
cmp
shl
sbb
push
fdivrl
pop
hlt
mov
pop
mov
imul
adc
mov
insb
cmp
cmpsb
imul
fstpl
jae
pushf
push
pop
inc
and
and
push
jo
out
mov
add
dec
iret
sbb
in
lcall
jmp
mov
scas
stos
push
inc
pop
in
sti
fisubrs
cmpsb
icebp
pop
xchg
xchg
arpl
out
lea
mov
and
dec
xchg
cmc
rorl
mov
cmp
div
lods
mov
movsb
sub
mov
push
int
jne
ljmp
sbb
loope
xchg
out
icebp
mov
xchg
push
into
stos
jne
in
sbb
inc
repnz
leave
sbb
mov
mov
and
repz
test
jne
loope
mov
cmp
fimuls
add
fsubr
fldt
pop
sub
sub
and
cmp
mov
mov
test
in
cmpsl
subb
movsl
cmpsl
sub
and
fsub
lcall
pusha
pop
in
std
mov
jle
pop
cli
sub
add
repz
aas
sarl
mov
loope
jb
arpl
arpl
and
pop
push
jae
dec
inc
add
mov
jo
iret
dec
xorb
xchg
movsl
test
nop
insb
dec
psubusb
aam
add
in
inc
dec
mov
push
or
gs
subb
test
pop
sub
sbb
lcall
xchg
fisubrs
in
lahf
add
adc
insb
xor
out
pop
shl
add
ss
add
sbb
ljmp
icebp
mov
cmp
add
pusha
pop
or
out
loopne
sbb
mov
push
sbb
in
nop
pop
lea
adc
sub
gs
add
fwait
mov
push
cwtl
sahf
nop
mov
jle
add
sub
jns
xor
loopne
popa
sbb
or
mov
lcall
xchg
fldt
sbb
enter
sub
imul
lock
pop
jne
mov
push
or
xor
cmp
xor
add
into
dec
push
jp
fisubrs
sub
clc
jg
cmp
aas
and
xorl
scas
imul
lods
add
lcall
pop
ret
shlb
in
cltd
inc
popf
mov
sbb
sbb
pop
dec
and
push
dec
or
xor
xor
push
jb
xchg
fwait
rol
sub
fildl
adc
adc
in
cli
mov
ret
mov
add
pop
repz
sbb
stos
jecxz
ss
mov
jl
fistl
pop
iret
mov
in
fidivrs
mov
lea
mov
and
lret
or
sub
xorl
adc
cltd
fsubp
sbb
js
fsts
adc
fsubr
pop
mov
mov
out
mov
loopne
fists
ret
testl
es
inc
mov
rorl
xchg
lret
lods
nop
mov
add
cmp
mov
lcall
pop
cmc
add
sub
push
jb
enter
sbb
sub
in
sbb
loope
ret
mov
aas
pop
mov
xor
push
pop
adc
lret
add
stos
sub
cltd
mov
mov
lods
mov
or
or
push
jne
in
mov
xor
sub
mov
std
jae
or
outsl
in
inc
stos
dec
rcrl
cmpsl
or
inc
xor
outsl
sub
dec
inc
sub
out
jmp
jge
add
jmp
add
xor
and
js
insb
add
push
pop
and
add
push
jle
push
cmp
and
mov
xor
xor
loop
pop
xor
or
mov
mov
test
ljmp
cld
mov
dec
lds
pop
fildl
cmp
push
aaa
add
sub
lea
sub
mov
and
xchg
or
sahf
out
jg
cmp
sub
out
adc
push
mov
int
sbb
jo
mov
push
orb
push
movsl
xchg
sub
inc
in
cmp
lea
fld
and
jne
adc
das
cwtl
and
pop
xor
pusha
testb
js
pop
fs
xor
push
cmp
in
pop
pop
rcl
or
aam
pop
std
test
mov
xchg
mov
inc
aas
inc
jmp
pop
or
mov
fidivl
mov
mov
and
push
lds
in
sub
sahf
add
add
subl
mov
mov
das
push
fcoms
pop
mov
push
mov
lods
rorb
mov
sbb
das
adc
sub
rcll
aam
shr
shlb
xor
insb
sub
nop
out
insl
lahf
mov
push
mov
int
pop
xor
xor
push
sahf
inc
pop
cmp
and
sub
push
jg
or
sub
stc
daa
mov
jp
jo
inc
test
testl
lods
and
mov
sbb
scas
cmpsb
fs
cwtl
xchg
arpl
adc
mul
push
fcomp
stos
dec
add
jnp
sub
filds
in
inc
sahf
notb
jmp
bound
sub
lods
adc
push
adc
mov
dec
ret
or
sbb
jg
in
bound
push
inc
lret
dec
and
icebp
jno
cltd
jo
ror
sbb
push
aad
sub
sbb
cmpsl
push
mov
sti
sbb
inc
movsl
adc
sub
adc
pop
ds
lcall
hlt
in
mov
dec
decb
jno
shll
stc
lret
sbb
push
and
and
adc
gs
adc
popf
mov
push
inc
pop
push
xlat
xchg
and
xchg
pushf
daa
adc
loopne
mov
int
and
shrl
xor
and
push
je
cmpsl
inc
out
out
xchg
fadd
mov
lods
xor
cmpsb
scas
pop
out
cltd
ret
mov
ljmp
data16
lods
or
inc
out
cmp
arpl
xchg
or
and
andl
fidivrs
lds
outsb
ds
repz
xchg
rcll
rcrl
mov
pop
adc
push
mov
sub
lret
daa
rcr
dec
popl
add
add
mov
mov
cs
xchg
test
lcall
test
dec
rclb
pop
in
gs
jno
outsb
add
shll
or
je
mov
xchg
push
cmp
pushl
outsl
mov
push
xchg
bound
popa
in
mov
fwait
adc
pushl
adc
add
popa
pop
jno
cmp
or
insl
aas
roll
push
pop
mov
sbb
ror
add
insb
test
cmc
imul
or
push
out
in
lret
pop
subb
mov
jp
or
jp
out
sarb
addr16
leave
add
adc
xlat
cmpsl
cmc
mov
ljmp
popf
sbbb
push
mov
popa
out
cmp
call
pop
mov
sub
lret
cwtl
cwtl
mov
clc
test
push
pop
mov
add
lahf
call
xchg
into
mov
pop
xchg
mov
or
mov
add
and
mov
fwait
das
ss
jl
lds
or
imul
popf
lret
adc
movsl
add
mov
in
push
sbb
xor
cmp
fiaddl
and
stos
sbb
mov
sbb
sbb
ljmp
pushf
ret
inc
nop
int3
call
add
repnz
aam
jo
cwtl
cmc
mov
test
push
push
or
sbb
mov
jl
rolb
xchg
sti
sbb
repz
sbb
cmp
inc
pushf
cmp
sub
sub
call
push
mov
push
pop
mov
ljmp
stc
sub
sbb
sub
mov
jae
cmc
lods
imul
test
std
push
xchg
pop
mov
push
ss
mov
jmp
jl
push
jae
pop
lods
inc
pop
jb
cmp
dec
xchg
sub
fstpt
xchg
jo
out
dec
pushf
test
lods
lock
arpl
test
adc
test
in
xchg
cmp
fcomi
or
hlt
cmpsb
scas
aaa
outsb
and
lahf
push
into
push
pcmpeqd
inc
xchg
and
insb
icebp
pop
mov
out
or
dec
xchg
imul
pop
aam
push
hlt
jl
aas
roll
aaa
mov
addr16
or
mov
dec
adc
inc
lret
lods
xchg
mov
movb
cmp
cmc
cmp
sahf
sbb
mov
inc
push
int3
inc
sbbb
mov
add
sub
push
xchg
arpl
mov
psubd
ret
es
push
hlt
jl
xlat
mov
repz
mov
xchg
aad
lods
xchg
cmpb
mov
adc
pushf
mov
in
dec
sub
shr
adcl
sub
pusha
mov
je
cmp
divl
jae
inc
repnz
movsb
js
addr16
rorl
adc
push
cmpsb
sub
jmp
jp
mov
in
loope
push
push
inc
cmp
sti
icebp
add
repnz
cs
push
add
push
dec
lea
sahf
out
dec
mov
xchg
gs
xchg
and
ss
std
dec
xor
js
mov
jae
in
xchg
adc
std
outsb
daa
inc
mov
fnstsw
inc
xor
mov
inc
cmpl
push
popf
sarl
xchg
orl
mov
inc
pop
notl
hlt
in
cmpsl
adc
push
sarl
int
push
test
das
pop
xchg
mov
or
or
sbb
scas
dec
mov
cmp
daa
roll
fs
repz
pop
les
inc
xlat
hlt
xor
and
cmp
fcomip
dec
and
fistl
loop
or
mov
rcrb
xor
push
in
fcmovnu
inc
mov
loopne
popa
sub
or
cltd
insl
mov
dec
xchg
pop
pop
mov
jo
pop
mov
int
test
cmp
loope
stos
mov
and
stos
test
cmc
sbb
clc
and
sbb
negl
fmuls
loopne
pusha
lods
jo
scas
lcall
push
mov
push
lahf
repz
mov
icebp
into
xlat
sbb
js
pop
pop
ds
jno
shrl
jb
lods
mov
ret
pop
insl
movsl
test
xor
push
adc
stos
int3
push
roll
dec
mov
sbb
mov
rcrb
test
xchg
icebp
icebp
aam
mov
jle
loop
loop
ficomps
ror
adc
jge
lock
xchg
push
imul
add
push
jp
pop
shlb
add
mov
mov
int
daa
cmp
mov
add
or
push
mov
inc
inc
mov
push
jecxz
repz
out
adc
nop
mov
lea
cli
fyl2x
adc
ja
pop
inc
jp
inc
and
xchg
xor
out
ljmp
lret
dec
jae
sbb
dec
movsl
fistl
out
mov
cmp
lret
cmpsl
lea
loopne
pushf
dec
arpl
add
xor
add
mov
push
mov
pop
leave
popf
pushf
sbb
jae
push
repnz
add
or
xchg
mov
add
adc
sbb
sbb
inc
stos
push
cmp
into
mov
ljmp
aad
inc
adc
dec
sarl
fisubrl
mov
push
fs
das
sar
mov
scas
and
or
mov
xchg
pop
and
hlt
cwtl
sub
fidivs
in
lock
xchg
hlt
add
pop
rclb
dec
dec
add
sub
xchg
daa
xor
loop
adc
dec
mov
pop
sbb
xchg
addl
inc
or
mov
cmpsb
jmp
push
inc
mov
mov
js
mov
cmc
jne
popa
mov
pushf
push
inc
mov
jns
mov
push
test
inc
dec
dec
test
jp
pushf
in
or
dec
aaa
mov
repnz
mov
add
ja
jl
ret
in
dec
jg
pop
add
jg
imul
push
mov
adc
xchg
pushf
cmp
sbb
test
sbb
stos
div
or
out
cmp
inc
pushf
test
sti
or
pop
lods
add
sbb
dec
dec
sbb
aam
cs
andb
dec
ficompl
mov
jg
stc
push
rorb
mov
and
lea
aad
cwtl
data16
mov
fcoml
mov
rcrb
sbb
call
mov
push
outsb
pop
mov
loopne
or
les
int
jnp
push
and
mov
fdivr
push
lods
cltd
pop
or
aad
adc
fmuls
jb
cmp
push
xchg
or
xchg
cli
xchg
fucomip
sub
stos
test
jnp
pop
mov
cltd
xor
jns
bound
sub
pop
inc
mov
ret
mov
enter
shlb
out
imul
sahf
sbb
sbb
mov
imul
test
xchg
cmp
xchg
jge
rcrl
cmp
repnz
aad
or
fldt
and
cmp
sbb
imul
adcl
out
or
movsl
in
jo
and
mov
in
xor
mov
push
add
or
push
call
jge
xlat
pop
xor
cmp
jbe
pushf
dec
mov
std
mov
mov
dec
mov
in
mov
dec
sti
or
cli
cmp
shlb
mov
push
aaa
cli
jno
pop
hlt
adc
sub
lods
jnp
pop
mov
xchg
mov
push
in
aas
rcrb
shll
ret
dec
out
sbb
subl
push
std
mov
pusha
repnz
inc
fsubrs
loopne
loope
stos
stos
push
bound
popf
ljmp
mov
lock
adc
outsb
fcoml
cmp
rcrb
fs
roll
lods
inc
xor
push
movsb
aaa
push
mov
iret
dec
sahf
dec
enter
and
or
sub
into
out
lods
adc
xchg
cs
js
ljmp
or
loopne
push
xchg
adc
sub
shlb
icebp
xor
push
xor
and
sbb
adc
dec
scas
sarl
and
out
cli
repz
push
lret
pushl
cmp
cmp
cli
repnz
jg
jl
dec
inc
repz
pop
mov
out
ret
sub
add
mov
and
fistl
inc
or
and
fstpl
movsb
hlt
xchg
or
test
fsub
inc
pop
cmp
pushf
inc
jmp
call
sub
mov
stc
push
mov
jmp
adc
addb
or
fildl
test
jb
aam
in
outsl
lods
mov
xchg
xchg
pushf
push
cld
fstpt
inc
jo
out
and
in
and
popf
inc
test
in
into
and
push
cmpsl
dec
or
nop
add
fcmovu
call
jno
lcall
into
pop
rorb
rol
fldcw
lcall
mov
in
and
or
jb
insl
add
push
mov
icebp
fistps
sbb
out
popf
add
into
sbb
inc
cmp
add
lods
hlt
dec
xor
jnp
xchg
lods
enter
pushf
imul
mov
call
sub
rol
cmp
std
or
xchg
sbb
roll
into
in
orl
loope
daa
sub
insb
nop
jge
stos
scas
icebp
fidivl
les
ret
jb
sbbl
dec
pop
mov
mov
test
mov
pop
inc
loop
mov
std
aad
jae
and
mov
lock
jno
insb
sbbl
and
pushf
int
and
dec
pop
mov
in
leave
gs
bound
xor
xchg
aas
rcl
test
sub
vpmaddubsw
fs
fsub
lock
fisttpl
lret
enter
notl
xor
add
push
scas
push
or
adc
loop
add
int3
divb
mov
xchg
cmp
lods
daa
pop
dec
scas
fdivl
test
not
es
xchg
xchg
and
xchg
cmp
mov
in
int
addr16
mov
xor
in
mov
pop
sbb
std
pop
ret
adc
aas
xor
cmp
fsubrs
inc
popa
aam
add
jl
xor
dec
shll
into
mov
cmp
pop
sbb
outsb
xchg
add
aaa
xchg
out
or
ja
fadds
jne
arpl
mov
push
ret
ds
xchg
sbb
stos
sbb
fs
sbb
jmp
jl
fisubrs
loope
popf
xor
ljmp
nop
push
out
test
test
mov
int3
fwait
add
pop
push
loope
dec
loopne
jne
movsl
and
repnz
das
mov
aad
movsb
mov
mov
std
sbb
les
sbb
add
cld
les
sub
daa
and
mov
cmp
aad
add
push
mov
scas
mov
jmp
aas
test
xchg
adc
ret
mov
js
jo
pop
pop
sarl
movb
and
ret
fcmove
sub
enter
dec
std
mov
loopne
sbb
aad
into
fisubl
rcrl
icebp
push
fwait
int
gs
lea
jbe
out
imull
sub
sbbl
inc
inc
daa
jge
jmp
xchg
jge
fs
gs
fs
push
imul
push
mov
lea
push
aad
mov
int3
xchg
ret
add
ret
mov
xor
or
xor
jbe
and
mov
lret
add
lahf
cmp
pop
outsb
das
mov
test
cmpsl
pop
out
rcll
orl
push
sti
inc
sarb
sub
lods
mov
pop
enter
jge
cmp
cmp
sahf
gs
inc
inc
pop
adc
xor
pop
std
mov
rcll
dec
or
daa
jmp
mov
jmp
faddp
bound
repz
push
mov
sub
test
and
imul
xchg
enter
dec
aad
rcr
dec
aam
daa
xor
xor
test
push
ss
inc
aas
adc
adc
sbb
int3
lret
cmp
xor
and
fsubrs
sahf
xchg
or
out
xor
jnp
loope
sub
gs
xchg
lea
xor
insb
icebp
xor
or
mov
flds
xchg
push
xchg
xchg
cmpsb
clc
jl
out
fcompl
out
roll
or
bound
mov
sub
icebp
pop
ljmp
dec
in
push
lret
xchg
or
push
adc
cs
fs
loope
jbe
push
std
and
add
and
adc
movb
adc
mov
and
hlt
mov
xor
cmp
rolb
andb
dec
mov
dec
fs
add
pop
mov
sub
xor
daa
adc
sub
dec
scas
jno
test
stc
rclb
stos
inc
xchg
dec
xor
stos
adcb
in
push
sbbb
pusha
cmp
mov
mov
pop
and
mulb
adc
xchg
ds
call
mov
push
mov
mov
cmpsl
push
sbb
pusha
aas
xor
sub
xor
inc
out
xchg
push
dec
dec
aas
mov
and
fstpl
out
stc
and
int
shlb
aaa
push
lock
and
push
lods
pop
lds
or
pop
mov
adc
mov
adc
or
insb
lods
xor
cmp
lret
insb
out
imul
lods
rcrb
inc
add
jo
lods
xchg
enter
mov
and
push
in
xor
mov
and
test
mulb
mov
and
clc
add
cs
push
lcall
insl
push
and
sub
pop
loope
ret
xchg
adc
in
fisttps
fsubl
inc
adc
dec
stos
add
sub
push
negb
adc
dec
in
jmp
in
in
addl
pop
cltd
mov
pop
popf
icebp
in
cmpb
loope
sub
sub
jg
push
push
pusha
push
mov
xchg
cmp
addr16
xor
movsl
test
dec
ljmp
or
loopne
aad
jg
mov
insl
pop
insb
push
and
inc
popf
fisttpl
jle
test
dec
dec
sub
pop
pop
icebp
or
icebp
ret
mov
inc
ja
xor
pop
push
mov
push
and
push
mov
push
xchg
aam
pop
xchg
or
push
mov
mov
in
xor
dec
pusha
lds
int
lahf
mov
fs
mov
scas
in
subb
clc
xchg
dec
xchg
aaa
js
jge
dec
dec
pop
jnp
test
adc
cmp
cmc
aas
cmpsb
aaa
out
cmp
sub
lods
loope
mov
xchg
inc
dec
arpl
sub
cmp
out
aad
je
aad
ret
hlt
mov
and
dec
jmp
xor
sarl
gs
call
mov
inc
sbb
add
add
push
xchg
popf
jge
addl
int3
cmpsb
aas
out
popa
jno
mov
shll
xchg
or
iret
sahf
pop
adc
push
in
test
mov
in
mov
inc
cwtl
pop
ljmp
test
pop
popf
mov
pop
mov
sbb
jecxz
scas
popf
enter
sub
cmp
popa
out
or
cmpsl
aas
jne
faddl
nop
movb
sti
and
sti
xchg
ret
fiadds
mov
sbb
arpl
inc
dec
outsl
jb
mov
mov
inc
addr16
xor
je
push
mov
or
push
xlat
sub
xchg
mov
movsb
out
shl
fmull
scas
test
outsl
sahf
sbb
xor
inc
insl
out
sti
pop
and
lds
lcall
loopne
cwtl
jle
pop
or
hlt
xor
aaa
jl
jns
test
into
lahf
shll
mov
les
mov
addl
push
lahf
adc
pop
movsl
int3
inc
into
lret
rclb
es
jne
lock
sub
mull
pop
sbb
adc
and
stos
jge
xchg
pop
mov
dec
jo
enter
sub
in
movsl
xchg
in
xor
adc
add
or
lahf
inc
filds
aad
xchg
adc
cld
xor
cmpsl
mov
push
icebp
enter
xchg
cmp
sbb
es
push
inc
and
movsl
and
addr16
into
xchg
mov
ret
lods
cmpsl
sbb
mov
in
fstpl
test
leave
cltd
jb
clc
lahf
add
sti
and
aaa
popf
fstl
cmp
adc
hlt
jmp
lahf
xchg
xor
pop
ljmp
fcmovne
out
mov
and
dec
in
sarl
jge
gs
cwtl
dec
or
fdivrl
push
mov
sub
mov
push
pushw
das
sub
adc
popf
outsb
jp
js
stc
or
push
pop
xchg
dec
aad
cmc
sbb
dec
iret
mov
lret
ret
fmul
cmp
test
out
int3
loopne
aas
add
xchg
test
adc
sbb
inc
sbb
cmp
stos
aaa
sbb
fwait
roll
in
inc
ja
lock
lock
lock
sbb
fs
xchg
jo
push
or
dec
int3
pop
and
mov
jno
pop
insl
dec
add
xchg
enter
loop
jle
notb
push
push
mov
jge
test
orb
sub
push
or
xorb
xchg
test
rclb
insl
cmpsl
sbb
popa
xchg
jo
mov
or
test
jge
popl
ds
pop
mov
xor
nop
xor
imul
push
lea
fnsave
or
sub
cmp
or
xor
js
repz
xchg
das
cwtl
xor
test
subl
lret
clc
jnp
sbb
int
mov
push
rcl
mov
loop
dec
mov
and
std
mov
mov
cs
jne
jnp
fmuls
testl
loop
test
out
out
jno
push
adc
push
or
inc
cwtl
push
xchg
push
pop
xchg
cwtl
jbe
in
iret
pop
stc
cmpsl
mov
sbb
movsl
out
dec
lret
cmp
pushf
cwtl
scas
jle
iret
sbb
mov
cmp
mov
inc
mov
out
pop
lods
repz
ss
sub
cltd
dec
in
pop
sub
icebp
int3
aas
inc
call
adc
push
mov
cmp
popa
outsb
add
push
rcrb
daa
cmp
cli
loop
vmread
rolb
lds
inc
adc
jg
and
mov
cmp
inc
mov
call
and
loop
push
mov
out
push
xchg
insb
jo
cmpsl
mov
aam
and
ja
inc
loope
movsb
jns
push
push
aaa
lret
add
pop
xchg
int3
test
cmpsl
adc
lahf
adc
xchg
sbb
or
es
xor
pop
insl
bound
cwtl
sub
push
cmc
leave
jg
xorl
dec
xchg
jge
pop
xor
arpl
sub
cmp
cmp
jle
cltd
add
inc
inc
xor
lret
aam
scas
dec
in
jnp
pop
xchg
leave
cmc
push
xchg
cmpsb
pop
fisubs
sub
sbb
push
sbb
cmp
sahf
lahf
into
lret
push
inc
popa
push
out
push
xchg
lds
inc
jp
sti
xchg
dec
push
xchg
inc
inc
xlat
mov
jle
ljmp
and
cmp
rol
jmp
xor
filds
insl
pusha
shlb
arpl
cmpsl
sub
ja
mov
mov
cmp
xor
into
cmpsl
jp
adc
ret
out
imul
jo
adc
dec
sbb
mov
and
popa
movsl
mov
pop
and
aas
ret
in
movsb
or
push
and
scas
jmp
sub
and
loope
insl
ljmp
fld
bound
jecxz
sub
fidivrl
or
sub
mov
jae
xchg
ret
ret
pushf
int3
out
test
cmp
mov
cmp
push
stos
jle
sahf
sub
cmpsl
mov
aaa
out
outsb
pop
inc
or
orl
mov
test
stos
xchg
xchg
arpl
dec
stos
addb
mov
sub
sbb
mov
mov
loope
ss
aam
mov
cmp
mov
andl
xchg
out
mov
mov
testb
sbb
pop
pop
mov
popf
dec
cs
subb
pop
mov
scas
mov
iret
push
mov
xor
je
jp
call
push
clc
jne
and
jno
ds
dec
cwtl
call
shlb
and
test
ljmp
stos
ss
lahf
pop
inc
stos
jbe
adc
dec
repnz
sahf
in
jo
pop
inc
mov
jbe
stos
test
ljmp
or
adc
cli
ljmp
stos
ret
dec
out
xor
xlat
sub
or
dec
in
imul
std
inc
test
xor
jae
adc
and
mov
pop
lods
push
popf
idivb
mov
pop
fwait
sbb
jne
sub
dec
outsl
iret
ss
xchg
xchg
sbb
mov
movsl
or
je
jmp
in
jge
out
xor
dec
dec
jno
dec
scas
gs
lret
jae
jl
pusha
ret
je
mov
test
nop
nop
mov
nop
movsb
dec
xlat
mov
in
je
fnstenv
mov
test
inc
subb
xor
pusha
lret
das
iret
mov
test
jge
dec
adc
ret
movsl
mov
lock
popf
cmpsl
leave
mov
sbb
inc
xchg
push
or
das
sbb
test
and
fidivrl
ret
movsl
sbb
xchg
sub
dec
leave
or
sub
cld
movsl
jle
push
rcl
rorb
cmp
and
int
inc
and
iret
in
bt
pop
cld
shll
jbe
fstl
jne
mov
ficoms
xchg
bound
lret
outsb
sub
dec
addb
daa
mov
leave
and
mov
dec
push
mov
pop
and
sub
cmp
cli
fldenv
sti
cmp
and
inc
iret
jae
dec
push
or
test
into
cmpsl
xor
adc
mov
shl
fwait
ds
lahf
inc
mov
xor
pop
cmc
adc
pop
or
push
inc
iret
shl
inc
pop
sbb
cmpsl
push
repz
cmp
adc
das
jb
xchg
mov
mov
lret
sti
aaa
outsb
sub
xchg
sub
ret
sahf
mov
and
xchg
out
ja
out
dec
jge
fs
pusha
das
repnz
jmp
enter
push
pop
push
stc
push
cmp
fstps
xchg
call
rcll
incb
cltd
mov
vpsrlq
xchg
adc
mov
push
arpl
mov
push
neg
xchg
push
add
int3
add
jae
xor
mov
lods
cli
iret
add
jbe
inc
es
lea
mov
es
sbb
insl
dec
cmovs
popf
mov
or
xor
cmpsb
inc
xchg
mov
test
aaa
jb
xchg
pop
and
mov
mov
sub
cld
fcoml
ss
jnp
and
outsl
jo
int3
push
sbb
cs
pop
iret
or
testl
jg
mov
insb
inc
pop
xor
aas
repnz
mov
insb
mov
sti
cmp
aad
pop
lods
rol
dec
lods
sahf
xchg
movsb
loop
push
mov
popa
mov
notl
mov
les
scas
sub
mov
mov
fldt
and
js
or
aas
push
or
loope
cmpsl
mov
pop
pusha
sbb
dec
and
or
stos
seto
sub
ljmp
dec
xchg
pop
push
rolb
imul
clc
call
xchg
mov
insb
and
clc
inc
fstpl
in
jb
shr
sub
push
pop
and
adc
jl
addr16
je
adc
add
jbe
insl
and
mov
divb
rol
lock
dec
push
dec
addr16
jp
scas
mov
mov
iret
inc
xchg
outsb
jg
mov
inc
add
in
push
lds
jmp
loope
lds
jg
rol
fimuls
cli
fistl
jnp
addr16
test
aam
fdivs
cs
movsl
es
ss
jmp
addr16
sub
inc
cwtl
mov
mov
xchg
ret
daa
test
pop
aaa
fldt
mov
popf
xor
ss
cs
xchg
mov
xchg
out
call
jmp
scas
lret
xorb
pop
push
add
add
sub
cmp
aam
clc
popf
push
call
in
jns
outsb
int3
arpl
pop
or
test
aam
fistpl
add
jle
je
dec
arpl
xor
dec
pushf
push
imul
aas
into
add
mov
scas
xchg
ret
aad
pop
and
sbb
ficompl
stos
in
jo
sbb
adc
push
add
shll
mov
mov
push
pop
mov
mov
movsb
cmp
fs
repnz
sub
les
jp
btr
sahf
sbb
push
dec
rcrl
cmpxchg
roll
sub
and
loope
arpl
fs
js
cmp
aaa
jbe
lcall
pop
mov
inc
cmp
mov
push
jbe
jle
or
sub
mov
test
push
jle
js
cld
mov
xchg
aam
icebp
aas
std
sarb
cmp
sbb
enter
add
push
and
ret
cmp
arpl
or
aas
mov
mov
jb
scas
pop
test
xor
cs
mov
shr
push
addr16
adc
cld
cmp
mov
shr
dec
mov
xchg
pop
dec
mov
mov
stc
mov
mov
imul
lock
imul
lahf
dec
in
inc
loopne
xor
insb
sbb
arpl
mov
inc
dec
lods
nop
leave
xor
pop
mov
loop
js
decl
adc
aam
push
lret
mov
adc
shll
jmp
loopne
loop
sbb
hlt
pop
sbb
imul
sub
adc
outsl
inc
sub
or
rorl
dec
repz
jne
mov
icebp
ret
cmpsb
pushf
inc
ficoml
fs
adc
mov
dec
adc
lock
pop
sbb
inc
ds
js
loope
inc
sbb
dec
std
lret
aad
rol
movsb
sbb
pushfw
cmpsb
xchg
xchg
dec
orb
roll
or
mov
or
sbb
dec
mov
cs
stos
jb,pn
lods
mov
mov
pop
sbb
and
push
ret
push
sbb
stos
lea
outsb
out
outsb
je
xchg
stos
in
popa
lahf
sarb
roll
sbb
fwait
loopne
jle
inc
jns
jge
adc
adc
sub
xchg
cwtl
addb
stos
out
dec
jne
fsubl
lock
sub
addr16
lods
push
jns
rclb
cwtl
mov
fstl
jecxz
sub
test
pop
mov
pop
jl
or
cmp
rcl
mov
and
stos
or
cmp
aam
pusha
out
or
jp
in
xor
cld
inc
sbb
call
dec
push
icebp
mov
and
repnz
and
and
imul
push
mov
add
mov
or
cmpsb
xchg
inc
lret
xchg
mov
test
sub
xchg
les
adc
or
pop
outsb
xchg
sbb
shlb
cmc
inc
fldl
nop
pop
cmp
jecxz
mov
cmp
jge
aad
mov
push
push
cs
or
cwtl
cmpsl
dec
mov
push
mov
icebp
movsl
loop
ja
std
cmp
ljmp
shlb
out
in
insl
aas
negl
fdivl
and
pusha
ss
call
jo
or
sbb
mov
push
adc
rclb
mov
fidivrs
pop
scas
and
ljmp
into
add
inc
dec
jno
andl
iret
cmp
movl
add
xchg
pop
in
push
inc
lret
bound
or
xlat
nop
jbe
popl
loopne
jo
movsb
mov
stos
shll
and
dec
test
and
data16
out
pop
cmpsl
dec
pop
rorb
mov
fisttpll
dec
jecxz
mov
ljmp
iret
push
lahf
mov
mov
aas
cwtl
inc
mov
shll
mov
jo
mov
jp
div
adc
adc
xor
jl
mov
push
popf
hlt
adc
cmp
lds
call
in
cli
sub
dec
mov
mov
add
push
add
shll
jl,pn
sbb
xchg
int3
loop
cmp
cmp
mov
xchg
add
inc
pop
mov
sbb
pop
cmp
ret
jecxz
jbe
sbb
mov
icebp
cmpsb
call
xor
testl
inc
loope
js
int
cmp
leave
mov
andl
mov
pop
lcall
inc
fisttpll
add
std
dec
incb
ljmp
xlat
cmpsl
pop
int
inc
test
push
pop
sarl
mov
sbb
or
add
jl
mull
loop
cmp
xor
fimuls
popf
out
lea
xchg
jbe
je
dec
pop
add
pop
pop
lods
sarb
pop
push
fs
ret
imulb
and
pop
push
sbb
xchg
push
add
cld
cwtl
pop
scas
xor
sub
stc
mov
pop
mov
fdivr
shlb
fcoms
and
aad
cmpsb
push
stos
jle
mov
out
ja
mov
sub
dec
test
into
outsl
jb
adc
es
outsb
outsl
push
icebp
sbb
in
jns,pn
bound
add
data16
inc
cmpsb
xor
push
rolb
test
jecxz
mov
mov
icebp
cltd
mov
jge
inc
pop
inc
subb
mov
and
pop
pop
cmp
sbb
inc
jle
mov
jl
sub
xor
sti
stos
inc
fiadds
das
ja
out
lods
fsubr
lret
pop
mov
xchg
mov
jmp
out
jb
scas
xchg
pop
imul
call
jnp
inc
hlt
mov
stos
mov
pushf
push
das
xchg
scas
ret
vmwrite
sub
xchg
adc
mov
jle
nop
movsl
and
jb
cli
mov
sub
sbb
cmp
aam
mov
pop
adc
xor
imul
mov
adc
jns
test
xor
dec
lea
dec
jecxz
cmp
outsl
ret
mov
mov
sub
and
add
mov
and
adc
mov
cwtl
sbb
dec
mov
mov
or
lods
loope
push
xchg
sub
leave
cmp
push
dec
aaa
popl
mov
jmp
aam
rol
fwait
lea
cmp
mov
lret
or
scas
lods
inc
mov
pushf
jns,pt
push
bound
xchg
mov
mov
popl
sbb
aad
jo
xchg
xchg
mov
pop
pop
repz
imul
adc
ja
mov
mov
shll
lea
mov
aam
scas
mov
xchg
mov
sub
ficompl
dec
popf
jmp
push
jg
loope
cmpsb
out
mov
xor
lret
push
jg
out
stos
adc
pusha
adc
mov
sub
rcrb
cli
lret
cmp
rcrl
adc
pop
lods
aad
sbb
lods
iret
imul
sahf
pop
cmpsb
jp
into
xchg
xor
rcrb
les
fistpll
aas
push
push
add
inc
xor
gs
dec
mov
inc
push
jb
push
push
push
pop
mov
mov
push
iret
or
js
mov
sub
push
loopne
aaa
dec
jle
pop
test
cld
add
xchg
sbb
nop
and
xlat
jmp
mov
sbb
mov
rclb
jle
movb
sbb
or
aaa
scas
adc
jbe
fwait
mov
hlt
add
shlb
jno
hlt
loopne
in
leave
sbb
xlat
and
data16
stos
dec
test
push
pop
sbb
sbb
xlat
stc
dec
sti
sbb
jge
pop
cmovno
imul
jnp
js
xchg
push
nop
jge
jo
cmp
test
and
mov
les
lret
jbe
daa
and
fadds
add
cmpsl
les
dec
push
and
shl
cmc
out
bound
mov
sbbb
adc
dec
inc
insl
lds
hlt
xlat
jp
rolb
pop
sub
pop
mov
daa
stos
cmp
lods
in
icebp
pop
fidivl
xchg
scas
aas
lret
test
outsl
dec
mov
adc
sub
inc
mov
pop
mov
or
dec
and
jge
mov
mov
daa
imul
cmp
imull
mov
sub
mov
fists
and
into
jmp
mov
leave
rcl
push
push
push
pop
icebp
lods
cmp
xchg
push
imul
js
jbe
jl
inc
stos
rcrb
leave
iret
pop
dec
cmp
and
out
out
or
sub
pop
or
sarb
xlat
jno
mov
stos
mov
icebp
sbb
loopne
and
popa
sub
push
repz
mov
xchg
andb
in
repz
fcomip
out
cltd
add
cmpsl
pop
lcall
test
adc
xchg
call
sbb
pop
ret
mov
imul
fwait
inc
jmp
push
push
ljmp
mov
and
leave
in
test
rcl
or
mov
sub
add
in
adc
int
pop
scas
ja
cs
mov
mov
or
dec
fisttps
iret
mov
push
inc
sub
lods
in
data16
aas
jns
add
and
out
cmp
iret
xchg
pop
lock
or
shrb
dec
mov
mov
cmp
mov
fistps
push
adc
fs
xchg
mov
cli
aad
push
inc
ret
mov
rclb
cmc
loop
rcl
sub
outsb
mov
es
mov
sub
aas
stc
pop
out
cmp
or
les
pop
sahf
fdivr
ffree
in
mov
testb
jae
rorl
mov
cld
enter
lea
add
arpl
les
push
rorl
cs
in
dec
push
das
and
test
push
pop
jle
or
and
sti
add
xor
push
sbb
enter
mov
nop
jbe
sub
jp
scas
and
subl
in
loope
push
int
sar
pop
sub
sub
xor
cli
sbb
mov
in
dec
clc
sub
jecxz
ret
aam
ror
add
sarb
mov
fildll
iret
jg
xchg
ds
push
adc
jp
ljmp
dec
sbb
jb
or
sbb
fcompl
or
add
es
pop
out
adc
cmp
mov
jg
hlt
xlat
push
cmpb
scas
mov
dec
inc
jns
aad
cmp
jne
subl
stc
popf
ja
push
and
mov
adc
adc
sbb
pushf
int3
ja
jle
xlat
lahf
inc
mov
repz
pop
xchg
lods
loope
int3
pop
shlb
pop
push
dec
loope
mov
adc
add
mov
pop
jae
stos
and
clc
push
push
push
add
ljmp
mov
outsb
in
sub
xchg
loopne
mov
data16
mov
lea
sbbl
in
divb
in
sub
adc
ja
sahf
cmp
xchg
lds
fiadds
dec
mov
pop
mov
jl
js
push
in
push
imulb
test
sbb
scas
jecxz
lods
sahf
clc
add
pop
push
pusha
jo
in
into
lcall
mov
mov
insl
pusha
dec
adc
pushf
add
das
cmc
mov
cwtl
cli
movsbl
and
pop
lds
jno
sub
ret
mov
vdivsd
sub
insl
pop
scas
lods
test
shll
dec
or
rclb
push
mov
addr16
sub
cmp
aam
fwait
mov
cmc
cmc
sbb
into
cwtl
incb
push
mov
aad
xchg
jg
adc
dec
mov
xor
fmul
push
incb
add
jmp
or
pop
pop
lret
sbb
mov
scas
and
and
xor
ret
push
inc
cld
outsl
or
jns
ret
lods
push
push
xor
push
repz
inc
pop
cmp
jp
mov
stc
fcmovnbe
cmpsl
sti
ds
mov
jae
and
dec
sub
dec
xor
nop
roll
cmp
cmp
push
mov
mov
xchg
xor
cli
jb
pop
and
and
aam
jo
out
dec
inc
or
into
mov
shrb
sub
xor
rorb
dec
lret
pop
lcall
or
mov
out
dec
fldenv
or
in
in
inc
mov
xchg
cs
push
popa
imul
or
pop
jne
push
xor
pop
test
sbb
movsl
xlat
repnz
inc
aas
pop
cmp
or
pop
cwtl
pop
shlb
sub
addr16
lods
xchg
idiv
bound
mov
into
xor
ljmp
lods
mov
add
inc
mov
sbb
fwait
pop
push
pop
mov
mov
push
mov
test
cld
adc
mov
jp
mov
in
push
mov
and
cmp
dec
adc
and
or
out
jp
sbb
cmp
shrb
cmpsl
inc
sbb
push
iret
fneni(8087
jns
xchg
out
sbb
out
push
jnp
cwtl
jb
loop
push
das
jle
mov
jo
mov
mov
dec
adcl
push
push
sbb
pop
out
ds
inc
adc
ret
out
push
inc
push
pop
nop
imul
mov
jl
cwtl
js
sbb
xchg
std
mov
inc
ds
hlt
push
push
jmp
and
add
loopne
jns
mov
jo
pop
loopne
les
lahf
pop
loop
cmp
inc
push
xor
adc
ja
jmp
ja
dec
sub
sub
mov
adc
push
sub
lahf
sub
pop
dec
push
push
lcall
mov
insb
mov
jae
hlt
lret
dec
adc
lods
cmp
mov
es
pop
jns
or
sub
loopne
add
fcompl
imul
in
adc
pop
incl
inc
sub
aas
adc
jecxz
mov
mov
pushf
mov
lret
xchg
pop
mov
inc
cmp
xlat
int3
addr16
int
pop
push
inc
sbb
or
xchg
xchg
insb
test
das
ljmp
mov
push
mov
sub
mov
clc
push
inc
fstpl
pop
ds
lds
insb
inc
les
and
dec
fs
mov
enter
inc
or
fcmovb
inc
xchg
adc
out
inc
out
or
jne
insl
jnp
inc
add
jge
adc
mov
xchg
sub
lods
outsl
pushf
test
mov
jge
mov
jge
jne
enter
and
cmp
inc
sub
jge
les
add
jne
aam
insl
jmp
sbb
add
enter
pop
cmp
js
clc
clc
mov
cmp
cwtl
push
jmp
subl
lcall
adc
mov
inc
jnp
repnz
gs
xor
mov
ds
fwait
and
jae
sub
sub
pushf
mov
sub
xor
sub
fistps
mov
mov
sbb
mov
out
or
int
mov
leave
js
push
push
inc
add
stos
pop
mov
sub
push
or
mov
roll
lcall
pop
jb
adc
lcall
xor
pushf
andb
mov
pop
scas
sbb
mov
and
mov
ficompl
push
shll
adcl
out
and
xor
cmp
and
sub
jnp
add
std
lea
cld
and
push
pop
jp
gs
lods
insl
inc
xor
sub
xchg
pushl
clc
dec
mov
xor
repz
add
xchg
cmc
pop
cmp
sub
ja
test
int3
dec
jp
inc
pop
lret
fcmovbe
dec
mov
jo
rcr
insb
int3
or
push
cmpl
inc
jmp
into
into
cmpsl
lods
push
lock
pushf
cmp
sbb
cld
stc
cmc
or
xchg
mov
push
pop
mov
mov
cmp
ja
ljmp
sub
xlat
call
test
push
lea
cmp
mov
mov
gs
jl
jnp
xor
inc
scas
out
movsb
xor
in
paddw
push
mov
lret
es
popa
pop
cld
repz
jnp
add
xor
dec
or
fstp
pop
sbb
lds
test
push
inc
nop
sub
imul
sbb
xorb
pop
ret
pop
inc
jne
add
movsb
aad
pop
mov
add
mov
push
dec
lea
popf
pop
push
mov
dec
fisttpll
adc
cs
out
xchg
sbb
jae
cmp
dec
xchg
inc
mov
xchg
jo
and
repnz
mov
ljmp
stos
bound
repnz
jne,pt
and
or
aaa
dec
pop
es
cmp
inc
js
jp
jbe
mov
lret
stc
mov
mov
mov
movsb
xor
insb
insb
mov
ljmp
ljmp
rorb
dec
or
fidivrs
inc
xor
lahf
cld
xor
mov
dec
les
mov
ret
pushf
jmp
adc
mov
ja
adc
adc
lret
cmc
insl
mov
in
mov
dec
and
push
mov
mov
lcall
sahf
rcll
cmp
repz
nop
inc
push
push
push
dec
imul
add
push
mov
push
cmpb
inc
inc
sbb
test
push
xlat
xor
pop
pop
lahf
add
aad
lcall
adc
add
sub
addr16
push
inc
xor
add
mov
or
push
xor
in
jbe
nop
mov
negl
clc
inc
js
dec
cmp
fcoml
or
aam
cmp
mov
cmp
pop
dec
scas
pusha
push
inc
push
lds
out
xchg
inc
aaa
leave
bound
sti
xorb
mov
in
xor
rcpps
xor
cmp
jne
adc
add
jge,pt
adc
cwtl
cmp
movsl
stos
xchg
in
mov
js
out
mov
icebp
data16
xchg
push
pop
inc
rcrb
repnz
dec
jle
imul
mov
fidivrl
pop
lea
xchg
cmpsb
xchg
mov
xchg
lret
xchg
pop
divb
xchg
call
rorl
call
insb
inc
loop
ret
lock
dec
dec
dec
stos
cmp
hlt
mov
sub
jg
movsb
insb
popa
add
fwait
xchg
repz
sbb
insl
inc
gs
cmp
ret
or
mov
jb
pop
stos
adc
mov
lods
and
xchg
adc
loopne
jmp
pminsw
call
xchg
gs
push
shlb
cltd
aad
xlat
sbb
inc
clc
ljmp
and
fsubp
add
imul
push
mov
jle
insb
cmc
or
or
push
cmp
ret
sbb
mov
orl
sub
pop
andl
xchg
mov
cld
mov
mov
in
push
mov
xor
outsl
dec
mov
push
lock
mov
aaa
fstl
or
xchg
rolb
inc
xchg
sub
repnz
pusha
cmpsl
and
and
les
adc
jle
fyl2xp1
and
jae
in
leave
cmpl
fs
jae
jl
pop
rcrb
subb
cmp
mov
mov
scas
add
push
cmp
jbe
int
jne
xor
sub
adc
xlat
sbb
or
add
lock
adc
mov
out
jns
enter
mov
jnp
sbb
and
repz
insb
fbld
bswap
dec
pop
xchg
sub
arpl
push
xchg
push
loopne
cli
fcmovnbe
lahf
sub
sahf
jae
lahf
shrb
or
add
mov
mov
xor
mov
lods
sub
ja
cmp
mov
cmpsb
jnp
mov
mov
xor
xchg
popf
inc
cwtl
pop
xchg
clc
mov
pop
ds
lea
and
xor
pop
push
pop
jecxz
ficoms
cld
loope
pusha
adc
lcall
lret
movsb
dec
int3
sbb
pop
sbb
xchg
xchg
dec
cmp
pop
dec
mov
jl
stos
pushf
mov
iret
adc
cld
stc
aam
in
mov
xchg
adc
insb
mov
dec
test
xor
insl
sbb
push
jp
mov
popa
lods
repz
pop
orps
inc
xchg
jb
adc
pop
sub
and
jns
inc
mov
enter
pop
out
fdivr
add
scas
xor
in
cmpsb
sbb
loopne
push
mov
inc
add
dec
fsubrp
aaa
pop
inc
ljmp
sub
xchg
or
push
cltd
inc
pop
cmp
xorb
xor
adcl
mov
jns
popf
or
dec
jnp
push
js
pop
mov
push
and
loope
fsubp
cmp
stc
cmpsb
aas
out
int
lahf
dec
cmp
bound
cmc
pop
push
mov
or
bnd
ret
dec
xchg
hlt
lock
sbb
or
aam
push
leave
cltd
push
enter
bound
je
andl
ret
sbb
dec
lret
xchg
imul
xor
sub
cmpsb
test
addr16
sbb
xorl
imul
repz
arpl
in
js
and
fsincos
adc
test
cld
mov
out
push
lods
jbe
adc
sub
gs
or
and
mov
mov
enter
or
out
sbb
cmp
loopne
into
movsl
inc
adc
jmp
cmp
orb
pop
dec
fcoml
add
aas
inc
sbb
vshufpd
xor
in
inc
and
insl
dec
cmpsb
in
in
in
dec
iret
loope
aam
negl
mov
sarb
inc
shll
dec
in
mov
addl
and
mov
pop
adc
xchg
idivb
idivl
cmp
lret
dec
int3
addr16
cmpsb
inc
jns
clc
call
push
fcompl
sub
in
push
and
jge
jp
sub
jle
dec
mov
out
mov
fstps
pop
mov
cmpsl
mov
push
test
or
jnp
sbb
and
incl
mov
push
jp
hlt
aam
insl
mov
sbb
pop
cmp
lea
adc
mov
les
int3
cmpsl
mov
sahf
pop
cs
push
push
gs
pop
pop
in
add
push
push
push
mov
xor
arpl
adcb
mov
jg
movsb
mov
xchg
ud0
lods
add
mov
fcmovbe
cmp
ficoms
or
pushf
ss
lods
cs
jno
xor
sbb
in
pop
or
or
push
aam
and
pop
fidivs
add
sbb
mov
and
sbb
scas
push
je
clc
xchg
jae
mov
jo
ds
xchg
push
lock
mov
int3
xchg
test
push
jecxz
xor
xor
and
adc
pop
pop
xor
popf
shl
stos
daa
mov
inc
add
or
pop
push
mov
into
lret
xor
fdivrp
pop
fisubl
ljmp
popa
xchg
pushw
inc
adc
mov
in
data16
fmulp
inc
insb
repz
mov
xor
mov
mov
lcall
jecxz
int
jge
aaa
lods
inc
dec
lret
clc
dec
xchg
xlat
test
pop
pusha
xchg
mov
xchg
mov
pop
mov
mov
sub
loope
sbb
push
js
cli
gs
inc
mov
test
addr16
repnz
std
mov
int
sbb
inc
sbb
enter
inc
es
ret
push
mov
push
cmp
mov
cmp
pop
pop
outsb
jb
nop
fsub
jo
sti
mov
inc
cmpsb
mov
and
bound
dec
sarl
lcall
jp
and
mov
jbe
jg
testb
test
xor
lds
pop
bnd
or
xchg
aam
sub
lret
push
fs
rorl
scas
fstpl
xor
dec
bound
xchg
popf
enter
push
and
movsb
lret
out
pop
pop
and
fadd
sbb
and
inc
and
mov
out
shrl
mov
sbb
cmc
iret
lock
jl
jg
inc
inc
xor
pop
sub
adcb
push
idiv
pop
lcall
mov
es
jns
push
repz
aaa
mov
pop
in
pop
daa
jo
xor
push
cmpl
pop
fdivrl
lcall
jl
dec
adc
mov
fsubl
mov
fstpt
aad
add
mov
xor
nop
xor
lock
sbb
add
xor
dec
outsl
xor
out
jge
add
repnz
or
cmp
popa
push
in
push
fimull
jle
pop
push
inc
mov
mov
xor
shlb
cwtl
xor
sub
std
call
and
ja
xchg
xor
inc
jnp
clc
mov
dec
xor
inc
add
mov
negb
mov
rorb
fadds
inc
orb
aas
xor
inc
xchg
mov
push
mov
pop
push
xlat
push
ss
scas
js
jmp
rorb
or
adc
jnp
push
ds
sbbl
hlt
pop
imul
adc
mov
jno
mov
push
dec
xchg
xorb
lret
mov
daa
enter
out
add
js
ja
movsl
stos
and
mov
mov
iret
add
outsb
in
mov
rcrb
pusha
pop
add
lahf
sub
mov
adc
mov
pop
fstp
aad
jns
test
pusha
and
push
xchg
ja
mov
adc
mov
push
jge
testb
sub
cltd
iret
inc
insb
and
mov
out
imul
inc
in
stc
add
or
ds
sbb
dec
insl
lsl
rolb
adc
sub
adc
mov
lock
and
je
inc
nop
or
mov
ds
mov
sbb
pop
rorb
jl
cmc
jl
out
pop
inc
iret
sub
repnz
push
or
insl
lods
mov
push
sarl
icebp
push
test
pop
mov
outsb
sub
sbbb
sub
mov
sbb
jne
or
add
nop
lods
data16
push
scas
xorb
push
sub
xchg
fsubrs
scas
add
shrb
dec
cmpsb
add
testb
pushl
cmpsl
test
adc
movsb
add
fiadds
jnp
xor
mov
xor
inc
and
rclb
adc
sahf
adcl
jmp
repz
int3
int3
mov
pusha
and
pushf
in
or
add
or
sbb
or
into
dec
testb
xchg
popf
jmp
pop
lea
stos
add
pop
insb
fcompl
jbe
mov
cld
jb
push
aam
adc
icebp
add
sub
in
aad
xchg
push
leave
cltd
pop
test
lods
cs
idiv
hlt
sbb
aad
aaa
test
leave
in
jl
imul
mov
mov
mov
in
pop
stos
adc
pop
push
add
inc
ljmp
inc
or
imull
add
repz
mov
cmc
dec
or
pop
insl
das
sub
and
and
and
iret
int
inc
insb
add
sub
cmp
pop
mov
cmp
xor
movsb
filds
imull
ds
pop
xor
scas
aam
dec
ljmp
notl
mulb
add
dec
push
test
mov
ss
repnz
mov
or
lea
outsl
testl
fs
cs
lds
arpl
add
stos
pop
sub
sbb
pop
dec
inc
cltd
cmpsb
push
adc
mov
js
popf
xlat
add
sbb
inc
imul
cli
push
mov
mov
js
and
jo
push
sub
cmp
push
mov
cmp
push
daa
das
add
pop
inc
fdivr
out
mov
lret
sbb
sbb
sbb
mov
pushl
sub
fucom
mov
mov
adc
mov
mov
leave
mov
mov
inc
stos
ljmp
xor
arpl
cmp
mov
ljmp
clc
mov
arpl
xorb
sbb
adc
nop
xor
add
imul
ror
push
movsb
movsb
sub
ret
sahf
mov
pop
cmp
insb
xchg
mov
add
std
imul
stc
cwtl
test
xor
incb
ds
xor
inc
es
lret
sarl
jae
imul
aas
jl
js
mov
dec
mov
leave
jg
ss
pop
jg
notb
push
fwait
popf
stc
icebp
or
scas
push
or
lahf
push
ret
leave
mov
adc
sbb
popl
inc
push
lret
ret
shll
addb
jo
mov
sbb
cmp
jle
add
outsl
or
into
push
cld
dec
divb
jle
sbb
rol
outsl
out
pop
jno
pushf
pushf
loopne
jo
fs
test
jo
adc
sbb
or
std
lea
mov
cli
sbb
jno
xchg
ljmp
repz
adc
es
insb
sbb
icebp
out
shrb
cmpsl
fsub
cmp
cmpsl
inc
rorl
mov
add
xchg
dec
xchg
lret
mov
mov
gs
hlt
leave
cs
mov
xor
jno
aas
cmpsb
sbb
jmp
push
hlt
mov
push
sbb
or
rcl
pop
jae
inc
mov
jo
mov
callw
out
sbb
int
and
cmpsb
lds
cmp
movsb
fs
inc
ror
add
icebp
adc
addr16
jne
loopne
ds
scas
outsl
rclb
aaa
add
mov
xor
mov
cs
jno
jle
inc
jo
mov
scas
pushf
clc
clc
fld
fs
pop
iret
mov
lret
mov
add
ss
mov
mov
pop
xor
outsb
xor
leave
stos
pop
xchg
arpl
adc
ja
mov
mov
cmp
xor
ja
and
mov
or
and
lock
inc
rcrb
es
pop
iret
inc
dec
pop
pop
push
xor
fs
mov
sbb
and
pop
xor
out
mov
aas
xchg
add
jmp
rcrb
mov
fwait
sahf
dec
imul
add
cs
hlt
popa
jbe
sub
push
data16
lods
push
push
fsubs
xlat
pop
cmp
in
push
pushf
fwait
cli
es
orb
sti
rol
jb
push
gs
jecxz
in
cmp
fisttps
xchg
pushl
insb
dec
add
fildl
push
mov
fsubp
xor
pop
loop
fs
adc
popa
mov
fldt
push
jle
and
jl
pop
fwait
mov
xchg
test
fsubp
jp
xchg
sbbb
imul
hlt
adc
in
mov
inc
pop
sbb
mov
repnz
ds
in
mov
mov
hlt
outsl
sbb
cmpsl
popf
sbb
jae
rcl
sub
xor
sub
sarb
xorl
dec
ljmp
mov
ljmp
and
nop
test
leave
dec
add
pop
outsb
xchg
into
rcrb
pxor
mov
jecxz
adc
rcrl
ds
fdivs
pop
xchg
or
jbe
mov
negb
xor
jae
sub
out
out
dec
push
cmp
ret
mov
icebp
mov
mov
inc
cmp
shrl
out
push
sbb
mov
jg
inc
mov
mov
arpl
dec
xchg
faddl
push
bound
or
lds
pop
adc
and
sbb
mov
mov
daa
adc
cmp
xlat
stos
andb
push
in
out
push
cmp
sti
call
lret
imul
sahf
add
push
and
out
sub
sbb
mov
int3
pop
add
fnstcw
dec
call
push
nop
sub
cltd
cmc
jns
insb
daa
pop
out
pop
push
scas
pop
fsubl
and
xchg
pop
mov
lcall
dec
add
cmpsb
stc
mov
add
arpl
clc
dec
inc
add
mov
das
add
lea
and
jae
std
push
insb
jle
mov
icebp
fwait
add
rol
cmp
mov
loop
and
shrb
cli
push
cmp
lock
adc
mov
and
idiv
mov
add
or
inc
decb
dec
jae
std
and
jo
in
shll
cmpsb
rclb
movsl
jl
dec
mov
clc
jne
bound
bound
clc
lret
push
hlt
insl
shrl
nop
js
xchg
les
dec
in
inc
adc
outsl
inc
xchg
or
loopne
mov
adc
setb
mov
mov
ret
pop
les
pop
mov
jecxz
dec
stos
sub
mov
or
mov
imul
inc
loop
inc
cs
adc
add
xlat
stos
ja
mov
ret
test
testl
notb
push
pop
test
xchg
xor
stos
jl
in
mov
loopne,pn
jle
iret
fcompl
push
mov
rcrb
in
xor
pop
faddl
push
sbb
loop
dec
mov
jp
jle
leave
ja
lods
stos
mov
lret
rolb
stos
test
push
sbb
pushf
mov
inc
repnz
jp
out
hlt
adc
bound
mov
bound
into
loop
or
ss
jnp
xchg
popa
adc
mov
cmp
pop
arpl
sub
shll
pop
push
jp
ds
das
sbb
ja
add
fmull
inc
mov
test
adc
rolb
nop
sub
jmp
rcrb
fwait
add
sbb
xchg
fwait
js
xchg
jb
dec
adc
mov
cwtl
stos
enter
test
mov
insb
xchg
adc
pop
shlb
dec
xor
push
xchg
int3
mov
es
sbb
gs
dec
pop
push
mov
pop
out
aas
push
or
gs
pop
mov
sub
rorl
mov
fstps
jg
insb
aaa
ljmp
jmp
add
cmc
cld
push
dec
push
clc
sbb
mov
movsl
xchg
daa
ss
shl
or
xlat
add
mov
faddl
pusha
stc
adc
mov
cmp
shlb
mov
popa
push
xchg
mov
push
imulb
mov
imul
in
inc
repnz
shr
stos
mov
and
rclb
lods
mov
push
popa
mov
push
jmp
push
out
int
imul
and
jns
int3
in
in
adc
rorb
rol
jne
inc
jmp
ss
mov
add
popf
xchg
lds
jae
subb
repz
push
cld
jae
inc
dec
pop
fmuls
pushf
aad
sub
dec
pop
cmp
out
loopne
fisttpl
adc
sbb
mov
ds
dec
das
push
pop
inc
rcrb
pop
andb
xor
xor
push
push
aad
int
out
dec
andl
xchg
stos
mov
mov
or
test
aam
pop
inc
add
rorb
scas
push
mov
fisttpl
push
or
and
fwait
in
ss
test
std
aad
xchg
add
out
jae
ret
push
std
xchg
repz
jl
std
adc
out
es
inc
mov
hlt
jnp
cmp
insl
and
imul
jns
insb
xchg
pusha
or
mov
add
sbb
sub
jbe
loop
aam
cmp
lods
cs
push
mov
cmp
xchg
lea
push
cmp
enter
cltd
movsl
sub
mov
xor
pusha
push
cld
dec
dec
jmp
aas
add
notl
or
mov
addr16
std
jecxz
pop
test
loop
or
pushl
mov
inc
das
std
shll
lret
in
lock
adc
insl
pop
icebp
scas
mov
call
mov
sahf
je
mov
outsl
jl
mov
cld
adc
outsb
push
rolb
addl
jb
lcall
cli
mov
loopne
ds
shlb
pusha
in
xchg
cmc
fstps
jno
inc
adc
xlat
mov
sub
cltd
call
xchg
jp
jle
aaa
push
mov
rcrb
xor
mov
scas
add
cmp
push
mov
test
ljmp
movsl
add
repz
ret
dec
lcall
fs
dec
push
loope
jno
dec
test
mov
inc
xchg
mov
mov
ljmp
popa
push
pop
xchg
jmp
mov
mov
and
mov
and
push
jns
cmp
addr16
or
pop
js
int3
mov
xlat
xor
call
imul
xlat
leave
inc
dec
ds
andl
mov
shll
sbb
mov
push
add
test
jne
xor
leave
shll
into
mov
push
loope
lahf
not
orl
cmpsb
xor
mov
insb
fsts
xchg
xchg
jecxz
pop
ljmp
call
mov
cmpsb
pushf
sub
dec
xchg
or
cmp
fwait
pop
out
lret
and
mov
xor
es
xchg
mov
ret
lret
loopne
cmp
lahf
je
repnz
shl
int
add
out
mov
add
stos
inc
sub
stc
push
negb
jo
cltd
mov
sahf
out
xor
add
fcoml
iret
and
mov
pop
cld
mov
stos
lock
mov
shrb
add
dec
or
ljmp
adc
xor
add
jp
int
mov
pushf
arpl
jecxz
lods
mov
mov
loop
xchg
mov
cld
jp
movsb
xchg
sahf
fmull
lret
int3
mov
inc
mov
inc
ljmp
xchg
mov
sub
lods
mov
pop
or
in
sbb
mov
lret
mov
data16
mov
in
leave
cs
push
movsl
and
int
fcmovnb
nopl
ret
movsl
out
out
sti
sbb
mov
sbb
adc
xchg
jle
adc
test
loopne
push
and
jb
insb
lods
fistl
mov
pop
bound
cmp
xor
inc
or
lret
and
jl
sbb
pop
lods
push
js
ret
push
add
lahf
pop
daa
mov
inc
lea
sti
push
and
das
ss
mov
outsl
fwait
push
outsb
lcall
cli
adc
add
scas
cli
dec
adc
das
movsb
imul
dec
jmp
je
out
jae
cwtl
fcoml
loope
shl
das
mov
jae
cltd
sub
je
pushf
idivb
xchg
push
cmovnp
jae
sub
push
outsb
fadds
in
pop
in
cmp
cmp
cmp
lahf
sbb
outsl
inc
mov
div
mov
cmp
shrl
mov
add
mov
je
mov
nop
movsl
das
lahf
xor
mov
xchg
das
into
dec
shll
mov
sub
ja
mov
mov
fsubs
lock
rorl
mov
jae
add
pop
or
pop
js
cmpsb
hlt
mov
jecxz
mov
sbb
mov
dec
fistpll
jp
mov
xor
sub
addb
jnp
cmp
cli
pop
xchg
mov
aad
mov
je
pop
lret
mov
cltd
inc
cmp
adcb
pushf
xchg
cld
cmpl
lods
sub
ret
leave
or
cmc
mov
inc
mov
pusha
imul
rorb
jae
les
fndisi(8087
sub
and
mov
mov
and
repnz
cmp
push
loopne
shlb
shrb
aad
repnz
not
inc
inc
pop
adc
sbb
ret
cwtl
push
lea
mov
mov
into
xor
xchg
mov
outsl
jp
fwait
lret
cmp
fildll
data16
outsb
mov
sarb
push
mov
pushf
rclb
jne
push
or
addr16
or
dec
cmpsl
iret
dec
fisubrs
push
iret
inc
push
ret
bound
xlat
jae
push
fistl
sarl
pushf
js
jl
imul
inc
sbb
outsb
cmp
mov
and
mov
or
and
lods
push
cld
push
lret
jge
and
and
out
add
adc
gs
je
push
push
arpl
inc
mov
dec
mov
scas
dec
ss
cmp
inc
jbe
in
stc
sub
push
lcall
sahf
xchg
test
adc
add
xor
inc
testl
inc
mov
add
jne
xchg
push
cld
jb
movsl
leave
push
or
xchg
popfw
or
lret
popa
in
add
hlt
mov
clc
adc
pop
repz
in
fistl
or
xchg
pusha
jns
lahf
fcompl
das
cld
fdivp
popa
mov
cmp
add
sbb
dec
push
andl
repnz
mov
pop
pop
or
or
pop
sarb
or
in
cmpsl
bnd
dec
xor
xchg
jmp
inc
lods
adc
cmp
les
adc
les
lods
xchg
pop
inc
mov
jmp
divb
mov
xchg
int3
test
jns
add
cld
daa
mov
aaa
inc
movsb
cmp
xor
xchg
aas
adc
stos
mov
lock
mov
fsubr
lcall
sub
and
popa
icebp
es
push
or
inc
and
mov
and
lret
arpl
sti
add
es
xchg
pop
in
xor
mov
sbb
add
adc
mulb
scas
cs
stos
cwtl
out
aam
mov
test
fildll
jb
ja
rcrl
push
cmp
and
mov
xchg
sub
insb
test
insb
add
xchg
stos
dec
inc
es
mov
xor
in
dec
mov
adc
and
div
xor
sub
mov
call
fdivrl
push
pop
dec
nop
push
icebp
les
negb
cmp
or
leave
out
rorl
xor
out
adc
fnstcw
mov
lret
mov
lds
push
xor
adc
jbe
repz
inc
sub
jns
jne
int3
dec
in
cmpsb
loopne
out
les
dec
iret
dec
test
cmp
xor
out
fwait
cltd
and
pop
shlb
addb
add
cwtl
pop
or
shlb
addr16
mov
outsl
imul
jns
ss
inc
insl
fstl
nop
fsubs
jo
sub
testb
sti
imul
popa
jne
sub
xlat
jmp
cltd
lds
into
enter
and
push
mov
mov
scas
jle
or
bound
test
es
in
or
sbb
in
jns
xor
ffreep
mov
lea
fs
xchg
pop
outsl
sub
jg
add
jle
xchg
ds
outsl
inc
adc
call
dec
inc
aas
ljmp
test
cld
jge
jns
cmpl
jno
and
adc
and
repnz
cwtl
fmull
push
jp
xor
pop
add
movl
cwtl
push
push
mov
addr16
fs
test
mov
sub
aam
lahf
int
jmp
jmp
jl
in
movups
je
sbb
in
add
enter
movsb
sbb
mov
popf
mov
inc
std
sar
xor
cwtl
push
ficoms
jmp
mov
roll
cmc
insb
or
sahf
jmp
sub
popf
outsl
mov
jmp
sub
push
inc
lods
or
insb
imul
jnp
adc
rolb
dec
pop
cld
daa
movsl
and
mov
jp
movsb
pushf
add
or
push
lock
cwtl
jbe
enter
mov
sbb
inc
cli
pop
jb,pt
cmp
jnp
pop
fs
and
imul
jne
jge
mov
push
lahf
sub
repnz
mov
xchg
popl
and
sbb
leave
shll
nop
mov
movsb
or
ss
cmpsl
lods
call
lret
mov
mov
lret
cld
loop
btsl
sbb
mov
rorb
mov
loopne
dec
cld
push
adc
fnstcw
cmpsb
sub
sbb
mov
push
xchg
inc
mov
scas
inc
pop
sub
sub
rcrl
ss
enter
mov
sti
jns
out
mov
loop
lods
in
dec
pop
imul
sarb
js
xchg
dec
test
int
dec
inc
cli
pop
bound
add
cwtl
aam
or
fnstenv
sub
mov
inc
shl
enter
test
insl
gs
int3
ja
aaa
adc
cmp
es
cmpl
inc
mov
xchg
in
bound
xchg
jecxz
jmp
fisttpl
bound
out
stos
and
dec
add
leave
ljmp
negb
into
das
push
dec
adc
jg
cmpsl
ror
sbb
jle
sub
pop
xchg
in
lea
mov
adc
addr16
and
testl
mov
mov
cmp
fsin
xor
mov
clc
ds
push
addr16
test
jo
or
adc
data16
cmp
leave
into
and
stos
ds
bound
dec
adc
cmp
lahf
cmp
loope
arpl
add
dec
xor
inc
ffreep
inc
cmp
test
shrl
out
out
stc
fwait
les
jnp
movsb
cmpsb
imul
cmp
decb
sbb
mov
dec
stos
xorl
mov
adc
cmpsb
cmp
and
push
out
mov
dec
jno
ds
or
stc
push
xchg
add
stos
sub
out
push
lock
outsb
cmp
in
sub
xlat
xchg
lcall
pop
xchg
pop
arpl
iret
adc
bound
inc
pop
out
and
sahf
xor
mov
movsl
mov
mov
adcb
xchg
fwait
jbe
repnz
push
repz
cs
add
mov
shl
stc
inc
insl
test
aam
popf
daa
sub
bound
out
clc
fisubrs
push
mov
scas
and
lahf
nop
and
jp
mov
jae
add
shl
dec
dec
mov
int3
dec
mov
aam
stos
repnz
mov
inc
cmp
adc
mov
nop
ljmp
lock
loopne
hlt
add
mov
lods
pop
push
sub
mov
mov
gs
xor
fcmovb
jl
sarl
imul
xchg
popf
insl
add
mov
inc
and
lea
push
out
pop
fldt
xor
add
loope
test
pop
out
dec
clc
mov
xor
mov
clc
movb
xchg
ret
js
jno
aaa
in
dec
cmp
das
repz
gs
or
out
adc
fdivs
mov
fimuls
sbb
jl
dec
aam
mov
dec
outsb
insl
in
xor
mov
aad
xlat
xchg
sub
loope
mov
mov
inc
push
add
subl
pop
loop
adc
mov
lahf
add
cmp
and
into
outsb
sahf
mov
popf
lods
stc
outsb
js
fists
out
ret
push
or
ret
mov
sti
je
dec
shrb
loop
stos
repnz
addr16
add
mov
js
add
jle
fisubrs
ret
cmp
pop
mov
or
idivb
mov
and
addb
aaa
mov
test
mov
rcrb
sbb
jns
mov
daa
iret
cwtl
stos
loope
mov
push
loopne
aas
out
cld
cli
lret
arpl
in
out
cltd
out
sub
testl
xor
les
mov
repnz
sbb
cli
pop
fldl
ljmp
rolb
add
outsb
xlat
icebp
add
mov
int3
mov
sub
mov
ficomps
scas
push
sub
cmp
push
adc
mov
fs
jp
xlat
insl
inc
mov
adc
rcrl
test
mov
cmpsl
pop
mov
mov
and
or
into
xor
xchg
inc
sub
xchg
in
inc
adc
flds
loope
negl
rorl
dec
fisttpll
ss
inc
push
jns
movsl
sbb
cmp
shr
out
ret
push
and
jmp
push
insb
sahf
and
out
mov
mov
push
inc
sbb
xchg
in
aad
pop
sbb
movsb
jecxz
sbbl
leave
insl
mov
xor
pusha
dec
xchg
ret
add
out
lea
adc
cmp
or
pop
test
mov
cmp
sbb
nop
xchg
movsb
rcl
push
inc
add
jne
in
xor
lds
clc
sub
push
lds
mov
adc
roll
fwait
xchg
out
test
aaa
mov
lret
inc
mov
cmp
sub
cmp
and
xchg
xchg
das
das
fadds
cltd
rcll
scas
sti
jb
bt
pushf
stos
stos
xor
sub
cmc
and
or
push
or
sbb
orl
in
movsb
push
push
cmp
pop
mov
cmc
mov
adc
add
hlt
inc
xchg
cmpsl
sbb
cmp
bnd
dec
lahf
push
sbb
decb
push
into
imul
mov
or
mov
out
adc
gs
test
rcl
adc
mov
jle
loop
pop
jae
or
test
cld
sbb
sbb
xchg
xor
call
mov
adc
into
sbbw
dec
out
jns
cmpsb
lock
push
jo
sbb
sbb
mov
aaa
sbb
or
sbb
xchg
movsb
fldcw
mov
test
mov
out
mov
mov
xor
jns
outsb
andb
adc
test
mov
psrlq
insl
jnp
dec
push
js
inc
fisttps
mov
pushf
aad
cltd
test
out
imul
mov
idivl
adc
mov
and
daa
testb
pop
ficomps
insb
div
inc
ja
xor
outsb
inc
mov
mov
push
adc
pop
ret
xchg
and
das
jne
cmc
pop
push
and
mov
xchg
adc
fcmovbe
call
inc
xor
cmp
push
and
and
adc
xor
filds
jge
xchg
xchg
jno
push
xor
fisubl
pop
sar
sar
lock
sub
and
mov
int
sbbb
mov
add
mov
sarb
adc
xor
jle
add
pop
in
adc
nop
jg
test
adc
arpl
mov
dec
pop
ljmp
fwait
dec
daa
mov
shl
jo
or
xor
mov
stos
adc
mov
mov
arpl
jns
mov
xor
xchg
jb
mov
icebp
hlt
test
cmpsl
cmp
and
xchg
sub
cmp
mov
xchg
pop
andb
push
andl
xor
aam
out
mov
mov
in
mov
xor
cmp
insl
mov
mov
and
or
mov
movsl
xor
or
xchg
sbb
es
cld
mov
stos
or
sub
or
into
jae
pushf
repnz
shrb
repnz
jl
adc
rcrb
jecxz
inc
gs
andb
xchg
cwtl
bnd
out
stos
xlat
es
js
add
mov
or
adc
sub
insl
add
and
push
cld
mov
mov
leave
jns
dec
je
cmp
adc
sbb
push
adc
sarl
mov
and
fdivr
push
fnstenv
push
jp
or
xchg
xor
jo
enter
jg
or
js
repz
adc
push
rcrb
mov
test
mov
cmp
dec
mov
push
mov
cmc
mov
push
jle
stos
mov
inc
mov
xlat
or
jns
or
das
scas
es
mov
mov
dec
mov
repnz
notb
jae
jnp
adc
out
cmpsb
stc
mov
cld
inc
sbb
xchg
lods
arpl
cmpsb
pop
xchg
cltd
sbb
pop
call
sub
cmc
shlb
shl
test
out
dec
push
cli
or
sbb
dec
icebp
shl
scas
stos
clc
out
mov
gs
mov
mov
dec
dec
es
pop
dec
mov
dec
mov
xchg
lret
push
mov
incb
fwait
dec
out
mov
push
mov
subl
stos
xchg
ljmp
jle
testb
fistpl
or
fnsave
sbb
test
dec
and
nop
jmp
sub
adc
addl
sub
sub
outsb
cltd
inc
jo
xor
das
jae
and
out
lds
out
add
push
mov
loop
idiv
mov
pusha
mov
fdivrl
mov
ds
mov
sbb
data16
aad
mov
mov
inc
jne
jne
dec
lea
shl
enter
jns
mov
subl
mov
push
fcomip
fidivrl
inc
imul
jae
leave
or
mov
testl
sahf
dec
push
das
jmp
in
test
adc
mov
jo
xchg
insl
pop
adc
add
outsb
mov
test
or
xchg
push
out
dec
fstps
fsubrl
jmp
enter
inc
cld
movsl
popf
inc
mov
or
andl
daa
int3
jae
movsl
mov
xchg
maxps
and
inc
out
imul
pop
sbb
xchg
adc
stc
jns
jle
mov
mov
xor
add
xchg
lods
bound
pop
sub
insl
push
shl
xor
jecxz
xchg
sub
or
cmpsb
xorb
int
inc
stc
sub
xchg
dec
int3
jae
jl
xor
imul
adc
mov
cmpsb
cmc
xor
pop
xorb
addb
xlat
xchg
jnp
lret
inc
lcall
sbb
aas
push
mov
sahf
lods
dec
push
lea
shlb
sbb
pop
lcall
into
or
stos
mov
xchg
cmp
lcall
test
fstpl
pop
inc
out
fwait
les
and
movsl
dec
cltd
stc
adc
or
out
cmp
movsb
mov
scas
mov
xchg
sti
mov
jecxz
in
test
xchg
enter
icebp
rolb
int
and
dec
mov
sbb
prefetchw
or
pop
scas
outsb
enter
pop
sar
mov
imul
cs
addb
lods
mov
movsb
jo
cmp
mov
loopne
fwait
mov
cmc
mov
push
sbb
sub
fdivrs
adc
pushf
int3
jmp
push
movsb
pop
mov
xchg
add
dec
scas
stc
and
je
sbb
out
daa
inc
xchg
mov
fwait
cmpsb
pop
pop
movsb
inc
mov
mov
adc
ja
popa
xor
jo
sub
jno
mov
mov
mov
dec
add
lods
sbb
scas
mov
popa
out
aam
xchg
push
jno
mov
subl
ds
xchg
push
push
mov
adc
insb
pop
pop
jbe
push
int
mov
mov
push
mov
dec
jae
xchg
xor
repnz
mov
sub
mov
jecxz
stos
sub
mov
and
jl
int
std
xor
xchg
mov
adc
sub
or
pop
adc
and
shl
insl
push
outsb
sbb
mov
mov
jmp
mov
mov
lds
cmp
add
sbb
sar
imul
loop
popf
xor
sbb
movsb
pop
mov
int
int3
inc
popa
iret
xor
aas
mov
xchg
repz
adc
int
pop
stos
push
and
ficomps
jae
inc
jecxz
cld
shrb
and
mov
divb
push
ljmp
daa
or
pop
loopne
fistl
mov
cmpsl
dec
and
and
pop
into
stc
pop
xor
mov
push
lcall
int
xchg
adc
mov
adc
sub
cmp
cmp
xor
lahf
stos
das
and
in
idivb
out
addb
cmp
mov
ja
ja
fldcw
std
jo
cld
out
xchg
repz
mov
lock
dec
xorb
xor
pop
cmp
sahf
cmpsl
out
jge
mov
imul
sbb
test
push
or
sbb
and
dec
dec
leave
sbb
stc
xor
adc
inc
into
pop
jns
insb
daa
shlb
cmp
adc
std
jg
sub
xor
int3
lret
and
xchg
in
add
insl
sub
xchg
scas
mov
xor
into
push
mov
ss
push
mov
or
les
push
jns
push
popf
mov
push
mov
lods
inc
or
xor
jnp,pt
push
and
mov
fs
div
pop
jl
fldl
and
cltd
dec
mov
stos
outsl
mov
outsl
inc
stos
lods
xchg
pushf
add
and
and
pop
dec
sub
inc
add
notl
in
or
mov
arpl
jno
clc
add
or
or
xchg
mov
sub
jmp
push
cli
add
xchg
mov
pop
cmp
push
push
sahf
inc
sbb
movsb
mov
out
andb
ret
sub
popf
jb
enter
jno
mov
shll
push
xor
xor
fs
stos
push
xchg
rolb
insb
push
sbb
and
test
test
xor
sub
inc
mov
pop
out
adc
sub
jg
sub
popf
inc
adc
inc
insb
mov
nop
xor
insb
push
cmpsb
adc
pop
fs
cld
dec
out
clc
sub
mov
rolb
xor
test
pop
inc
je
fnstcw
mov
sbb
pusha
push
adc
arpl
xlat
dec
push
dec
loope
add
sbb
lods
jb
mov
fistpl
jmp
and
fnstsw
inc
ds
iret
lods
add
push
or
add
stos
inc
repz
xchg
pop
or
inc
sub
bound
fsqrt
es
inc
add
mov
scas
xchg
mov
jg
mov
ret
fs
fstpt
xlat
inc
scas
cmp
ret
lods
xor
push
mov
out
ret
js
sub
cwtl
xor
lahf
fisttpl
int
pop
in
out
out
pop
inc
iret
insb
cld
pop
call
and
iret
xchg
pop
add
jp
test
dec
inc
stos
xor
mov
and
dec
jb
fisttpll
push
xchg
xchg
add
aaa
inc
js
and
aaa
mov
inc
mov
or
xor
dec
pop
add
int
jp
shll
faddl
fisttps
pop
pop
cmp
push
inc
add
sbb
lea
cmp
popf
shlb
pusha
add
insb
in
clc
xor
jb
adc
add
sti
dec
cmpsb
pop
or
in
out
pop
sbb
xchg
cmp
xchg
push
fwait
push
pop
xchg
fisttpll
or
dec
xchg
mov
pop
add
mov
inc
sbb
imul
push
movl
jge
xchg
into
xor
xchg
add
push
hlt
ss
je
pop
push
test
mov
and
push
stos
jp
les
aaa
push
fstl
lahf
xchg
ror
sarl
bound
mov
push
cmp
or
std
lea
mov
xor
inc
mov
adc
scas
cs
addr16
imull
mov
mov
push
fwait
sub
push
xor
push
pop
add
xor
int
lea
lods
in
xchg
mov
sub
mov
outsl
lahf
scas
cmc
mov
out
int3
jg
jns
dec
repz
mov
cmpsl
icebp
pop
shlb
push
gs
popa
cmp
loopne
aad
scas
xor
pop
aaa
test
dec
subb
xchg
add
xor
lds
cltd
ja
sub
xor
test
or
cwtl
into
xchg
mov
adcb
dec
ja
cmp
imul
mov
jecxz
xchg
pop
in
jmp
mov
add
dec
imul
std
and
test
out
mov
pop
mov
cs
fimuls
rcrl
add
shll
mov
pop
lea
jge
sub
std
test
stc
push
xchg
imul
aas
cmpsb
push
push
jnp
pop
jnp
push
cmc
loop
cld
pop
std
sbb
jle
adc
pushf
mov
les
ja
pop
arpl
cmp
sub
xchg
adc
mov
hlt
push
and
pop
in
and
dec
jmp
fcompl
dec
dec
out
mov
fsubl
sbb
and
ds
std
sbb
das
jecxz
iret
inc
fwait
jmp
add
wrmsr
int3
stc
lcall
testb
xor
filds
enter
cmp
cld
daa
data16
jle
sub
into
xor
lock
out
push
mov
dec
sub
pop
pop
gs
int
and
pop
cmp
mov
sub
lahf
in
negl
sahf
sub
stos
test
jno
inc
fdivr
inc
in
nop
pop
mov
je
ret
mov
mov
testl
imul
jecxz
aad
lods
push
shl
repnz
xchg
cwtl
mov
mov
push
scas
bound
pop
out
xchg
daa
inc
lods
test
and
inc
in
pop
jne
inc
mov
or
xchg
dec
sub
push
dec
xchg
daa
dec
sub
inc
in
data16
rolb
mov
sti
add
cltd
cmc
cli
cwtl
xor
pop
enter
sub
or
mov
call
ret
mov
cmp
ja
cld
push
rorl
imulb
pop
mov
and
mov
xor
cmp
xor
xor
and
jne
inc
pop
mov
test
rcl
mov
ffreep
lock
or
pop
out
jmp
sbb
xchg
shlb
mov
sub
cwtl
bound
leave
movsl
or
dec
mov
loopne
test
mov
test
add
scas
inc
jns
ss
dec
lds
add
inc
xor
push
mov
decb
mov
xor
loope
cmp
sub
call
int3
jmp
push
rolb
pushf
dec
fimull
cmp
push
xchg
inc
fstpl
xor
xchg
outsl
jae
repnz
dec
inc
xchg
out
and
inc
sbb
push
add
mov
mov
in
adc
xchg
mov
push
in
fstpl
cmp
lock
out
repnz
xor
cmpsb
mov
xor
jno
cltd
clc
lods
push
and
pop
sahf
aas
jno
cmp
mov
inc
pop
mov
cmpb
cmp
aaa
pusha
mov
ret
aaa
scas
rcr
cmp
sbbl
cmpb
adc
ljmp
mov
cmp
pop
inc
mov
stos
push
pop
scas
into
out
fimuls
jmp
xchg
push
inc
aad
xchg
negl
loope
lods
xor
int
fwait
jp
ds
dec
pop
push
cmpsl
add
test
ds
movsb
sub
mov
push
xor
xchg
mov
test
adc
dec
xchg
add
or
mov
pop
fs
dec
xchg
cs
add
push
cli
pop
imul
in
xor
cmp
shr
jecxz
sub
mov
mov
movb
push
dec
mov
adc
adc
pop
add
jo
xchg
ficoml
add
push
pop
imul
or
adc
into
push
sbb
jnp
insl
in
int
das
adc
shrb
lcall
pop
mov
push
cmp
mov
xor
mov
negl
inc
aas
loope
or
dec
jo
insl
pushf
adcl
cs
add
lahf
gs
aas
das
add
movsb
aam
shl
mov
int3
into
ljmp
lds
int3
xor
sbb
xor
inc
push
rcrl
movsb
popf
xchg
mov
xchg
outsb
mov
xor
xor
inc
mov
mov
repnz
push
rcrb
mov
sub
mov
inc
mov
notb
cmpsl
add
cwtl
imul
push
sbb
sub
loop
icebp
jecxz
or
adc
xor
push
add
imul
dec
inc
dec
sub
cmp
test
xchg
push
jno
or
xor
and
cli
jno
pop
into
push
mov
xor
lods
out
inc
stc
mov
into
cs
cli
cwtl
cmpsb
jns
aas
test
ret
es
cltd
xor
outsl
sbb
pop
or
sti
out
out
dec
mov
dec
dec
data16
mov
cmpsl
or
pop
out
nop
mov
aaa
shrl
sub
mov
mov
or
jge
rcll
mov
mov
dec
jo
xor
fbstp
adc
cld
inc
cmpsl
out
push
push
dec
into
sub
orb
cmpsb
gs
jb
push
inc
inc
mov
call
fidivrl
pop
push
int
jge
xlat
icebp
dec
jo
mov
inc
mov
pop
js
test
testl
xchg
pop
jl
cld
and
dec
mov
inc
dec
jb
pop
xchg
sub
dec
pop
ss
and
push
jae
loop
xchg
js
sahf
mov
lods
mov
popf
mov
pop
nop
mov
xor
sbb
pop
nop
aam
cli
aaa
mov
or
mov
negb
fisttps
ret
loopne
insb
testb
lret
pop
fwait
pusha
adc
std
into
cmp
adc
pop
xchg
xchg
aaa
cmpb
xorb
mov
push
repnz
enter
adcl
xlat
add
add
jg
xor
lock
sbb
cmc
dec
or
js
repz
sbb
cmp
sbb
mov
or
sbb
adc
dec
dec
xor
push
ret
loope
cli
sub
clc
jecxz
test
ret
jnp
push
mov
dec
jmp
pushf
jmp
lods
xor
push
in
or
xor
sub
push
xchg
out
add
sub
pusha
mov
imul
add
push
pop
pop
mov
sbb
mov
pop
mov
les
sbb
pop
push
loop
lods
mov
cmpl
enter
sti
cmp
pop
fldcw
scas
push
or
sbb
mov
jne
cld
sbb
or
cli
insl
in
cmp
lock
or
lods
cmp
or
loop
and
add
jecxz
dec
cmc
mov
or
mov
faddp
pop
fidivl
sbb
leave
mov
fnstsw
mov
idivl
mov
sub
pop
movsl
push
imull
in
arpl
test
int3
xchg
dec
cmc
pusha
adc
cli
mov
adc
rorl
pusha
out
push
xchg
sarl
stos
aas
and
mov
inc
test
adc
pop
int
lret
inc
cmpsb
pushf
cmp
outsb
std
sub
pop
pop
push
mov
out
ss
inc
xchg
inc
out
sub
inc
ret
push
push
loope
dec
jmp
movsl
addr16
stos
hlt
testl
cmp
jae
xor
or
dec
ds
jbe
mov
ja
xchg
sahf
adc
stc
inc
mov
hlt
in
out
pop
pop
push
xchg
inc
mov
lret
loopne
mov
and
jmp
inc
out
dec
mov
dec
fiadds
lret
dec
sub
mov
insb
outsb
pop
pop
je
dec
cli
mov
cmp
inc
xchg
push
stc
push
mov
pusha
and
int3
xor
and
sbb
into
add
push
mov
or
shlb
fnstenv
rcl
push
xor
xchg
insb
in
lods
aad
add
inc
call
pop
fwait
jno
pop
pop
js
mov
test
dec
xchg
pop
fidivl
cmp
cmc
movl
inc
inc
shrb
jns
sbb
xchg
add
mov
js
loopne
test
invd
addr16
pop
cmp
ret
fnstsw
and
pop
int
pushf
pushf
inc
sbb
ljmp
in
push
mov
test
or
mov
cmc
cmpsb
daa
popa
stos
shlb
cmpsb
mov
jg
push
popf
inc
and
push
xorb
and
lret
mov
mov
xchg
and
mov
mov
sahf
stos
add
pmaxsw
std
jle
xor
outsb
mov
pop
sub
add
dec
sbb
stos
loopne
sub
lds
sbb
pop
pop
shll
pcmpeqb
sub
dec
xchg
loope
rcrb
and
lods
jle
fstps
loope,pt
inc
aam
push
push
and
cs
or
leave
mov
pop
insl
sub
loope
data16
adc
call
mov
jle
outsl
add
cmp
fstpt
scas
hlt
mov
cmpsl
xchg
mov
push
bound
mov
testb
inc
pop
ficoml
mov
lds
xlat
shlb
out
jo
ljmp
xlat
in
fildl
inc
mov
jp
inc
les
cmpsb
cmp
aas
cwtl
cltd
sbb
pop
cmp
mov
and
ljmp
mov
xchg
cld
push
repz
and
add
sbb
mov
and
add
jle
out
cltd
hlt
xchg
and
pop
cmc
out
lret
ljmp
push
sbb
imul
xchg
cmp
xchg
sbb
adc
or
or
daa
out
int3
lock
and
mov
cmpsb
daa
hlt
gs
mov
jmp
aam
dec
std
and
repnz
sub
adcb
fwait
enter
sar
xchg
cmp
adc
mov
xor
out
jge
mov
imul
dec
jp
cmpsb
shr
ret
mov
xor
cld
sbb
dec
jge
call
push
dec
sti
aam
icebp
jp
push
jecxz
das
shl
jp
mov
jno
into
es
sahf
inc
push
dec
daa
or
aam
mov
dec
popa
adc
add
leave
cmpsl
add
nop
xchg
out
int
cmpsb
pop
add
inc
inc
int
pop
or
insb
mov
cmp
xchg
pop
dec
icebp
data16
pop
pop
mov
das
sarb
xchg
jae
mov
call
test
mov
mov
in
rcrb
outsl
test
inc
pop
mov
rcrl
mov
scas
mov
out
popl
movsb
ret
lods
push
jl
and
mov
push
dec
cmpsb
inc
adc
daa
mov
mov
mov
xor
dec
sahf
push
mov
mov
xor
xor
sbb
shll
jno
repnz
jp
xor
loope
push
mov
push
into
lock
enter
adc
mov
add
jl
iret
negl
cmp
dec
ror
jle
nop
lea
lret
dec
jns
xchg
inc
mov
sbb
jecxz
mov
sbb
push
adc
pushf
lret
inc
rcll
loope
insb
cmp
inc
lods
lret
repnz
test
fidivl
sbb
mov
jo
popa
fdivl
mov
mov
cmpsb
pop
into
orl
mov
or
jno
outsb
mov
dec
psubd
jg
jl
sbb
xchg
mov
pop
push
test
shlb
repz
imul
jo
jb
je
dec
hlt
pusha
icebp
jno
ror
repnz
lea
mov
mov
and
cmp
ret
ja
and
sbbb
imul
pop
dec
or
test
imul
pop
or
jne
mov
mov
mov
mov
jecxz
inc
xor
psrlq
dec
filds
dec
ret
dec
pop
mov
jecxz
test
hlt
mov
xchg
test
pcmpeqb
lods
jae
movsl
sub
sbb
sub
rcrl
popa
imul
xlat
mov
mov
push
inc
fadd
fisubl
jle
add
out
pop
jl,pt
enter
filds
inc
shrl
cmpb
sbb
push
mov
jo
les
subb
push
and
lret
lea
or
sbb
pop
ret
dec
mov
jae
inc
and
jbe
insb
int3
cmp
popf
aaa
or
loopne
pop
mov
popa
pop
in
lret
shlb
pop
mov
push
and
shll
pop
popf
lret
lds
pop
cmp
sbb
push
pop
decl
pop
jp
and
dec
mov
adc
sbb
and
push
dec
je
xor
inc
int3
mov
int
cmpsl
fdiv
xchg
mov
mov
fs
inc
lahf
pop
enter
hlt
stc
add
dec
push
sbbb
fwait
pop
imul
lea
bound
mov
test
mov
push
bound
fxch
add
sub
and
lahf
xor
ds
mov
cmc
dec
or
into
sbb
xor
push
fucom
movsb
push
ss
scas
jmp
mov
push
sbb
out
add
test
push
mov
insb
call
xchg
mov
adc
add
pop
icebp
daa
dec
adc
xor
xchg
add
imul
outsl
cmp
lcall
cli
dec
fcompl
xor
sub
aad
das
sub
xor
cli
rclb
add
imul
sub
push
rcll
dec
push
je
sbb
out
rcl
daa
cwtl
add
dec
push
bound
popaw
loopne
xor
lock
repnz
stos
shlb
loopne
iret
test
cwtl
sbb
loope
jge
xchg
adc
nop
lcall
push
sub
inc
mov
pop
aam
subl
sbb
loopne
ss
repnz
xor
sub
jo
in
rcrl
ss
add
xchg
cmpsl
arpl
cmp
jl
out
lods
dec
arpl
addr16
jecxz
pop
push
fcoml
mov
dec
rcrb
ljmp
add
push
xchg
daa
repz
das
dec
dec
xorb
aaa
gs
xor
xlat
js
shrb
invd
cmc
jmp
and
imul
jb
cltd
adc
dec
loopne
lret
das
popa
mov
cmp
cli
and
or
gs
jecxz
mov
sbb
ret
cmpl
and
push
or
push
fucomi
push
fistl
ret
enter
add
sbb
ds
movsb
imul
out
popf
jp
lock
xchg
popa
dec
jo
inc
mov
add
inc
mov
pop
adc
or
outsl
dec
push
push
bound
mov
lds
repz
xchg
xchg
js
in
add
xchg
lret
mov
mov
and
inc
sub
sbb
lods
loope
arpl
addl
nop
jbe
fcoml
fwait
jg
loopne
iret
or
adc
fwait
adcb
dec
xchg
jmp
pop
lds
push
mov
and
mov
xor
rsm
lods
inc
movsb
dec
lahf
pop
cmp
aam
sti
adc
fnstcw
jecxz
dec
divb
mov
popa
jmp
lods
pop
stos
jae
fistpll
dec
add
js
mov
sbb
inc
pusha
cmpsb
enter
insl
ffreep
inc
ljmp
mov
mov
jge
mov
push
mov
shll
loopne
add
popf
imul
je
and
or
into
stc
or
or
test
call
push
pop
js
mov
adc
or
inc
xchg
sbb
fs
js
fildl
je
mov
push
loope
sti
and
or
in
mov
bound
push
jb
cld
cmp
adc
mov
fwait
loopne
xor
add
push
pop
jo
daa
bound
jbe
leave
arpl
adc
out
scas
mov
dec
out
sti
dec
adc
test
dec
ret
leave
inc
jae
xor
inc
adc
cmp
mov
hlt
leave
dec
loope
mov
adc
fwait
and
popa
cmc
leave
bound
mov
xor
mov
mov
jp
stc
mov
jno
push
lret
push
and
lods
faddl
rol
ror
xor
mov
aas
cld
sbb
cs
push
dec
insb
mov
dec
mov
repz
mov
jg
pop
repz
mov
add
lds
aas
or
adc
loope
dec
stos
pop
xchg
ret
adc
iret
inc
mov
xor
push
jl
push
mov
jb
subb
call
dec
jo
add
test
and
mov
xchg
popa
leave
mulb
cmp
cmpsl
icebp
fists
es
sbb
lret
sar
pop
pop
push
out
adcl
dec
mov
add
mov
or
daa
push
in
push
stos
int3
out
rcrb
ret
mov
es
push
and
or
mov
add
dec
xor
push
in
or
sahf
inc
inc
xor
std
inc
lahf
cmp
mov
jb
or
lret
movsb
mov
inc
jmp
fldlg2
sub
daa
or
jp
or
jo
jae
dec
and
neg
sbb
mov
fildl
mov
and
pop
xchg
das
mov
push
pushf
data16
and
fists
mov
mov
adc
out
jge
sub
add
mov
rol
imul
or
dec
push
idiv
dec
loope
fwait
sbb
push
das
std
cmc
hlt
loop
jg
cli
inc
sbb
cwtl
mov
mov
movsl
dec
sti
sbb
pop
xor
lahf
inc
lret
pop
sub
and
test
repz
cltd
test
add
dec
sub
inc
mov
std
ja
and
sbb
lahf
or
cmpsl
jmp
je
fcoms
push
pusha
lods
push
sub
xor
mov
adc
ss
push
sbb
dec
aam
stc
pop
sub
push
push
aam
mov
push
fisttps
mov
push
jle,pt
in
or
push
pop
xor
int3
add
sub
vcmpss
int
int
xchg
xchg
mov
cli
stos
jl
out
sbb
xchg
pop
sub
sbb
jo
test
push
cmpsb
mov
jae
adc
rcrl
or
mov
xchg
mov
fstl
fadds
std
sub
andl
in
jmp
ja
sub
fdivl
loop
div
xor
popf
lock
mov
sahf
pop
add
xchg
and
push
xor
test
adc
cmp
icebp
mov
mov
adc
leave
mov
popf
fcoml
lcall
dec
jne
dec
push
add
cwtl
xchg
adc
sbb
sbb
mov
test
rcr
aad
push
insb
xor
imul
push
cmp
insb
sbb
in
daa
lock
sar
fucomi
dec
jnp
and
shlb
and
insb
insl
sahf
xchg
loop
adc
mov
leave
orb
or
jmp
stc
ljmp
ljmp
fadd
adc
out
mov
lods
sbb
push
pop
out
dec
cli
jp
pop
inc
xchg
jbe
xchg
leave
inc
adcl
jmp
xor
lahf
lret
jmp
lds
das
movsl
or
adc
shll
inc
faddl
jns
cmp
adc
addr16
in
scas
push
sbb
insb
aam
push
add
fstps
mov
jnp
push
sbb
sub
cmp
adc
and
leave
add
mov
fcmovbe
mov
enter
sarl
fdivs
pop
stc
fidivl
inc
sarw
inc
push
cltd
xchg
mov
mov
je
dec
andb
push
xor
add
push
jns
xor
int
sbb
jns
dec
es
push
sbb
leave
stc
popa
push
in
lock
repz
cld
fidivl
out
xchg
stos
mov
test
jns
or
add
lds
std
push
cs
popf
inc
repz
or
into
pop
mov
arpl
fcoms
fnstcw
mov
mov
dec
lock
sbb
mov
das
fdivrl
xchg
jmp
andl
fsubs
pushf
push
mov
pop
or
push
or
ret
int3
inc
sub
lret
pop
loop
or
push
mov
pop
adc
adc
cmpsb
push
cli
inc
cmp
mov
mov
cmpsl
dec
arpl
cwtl
lcall
lcall
add
inc
jecxz
xor
aad
pop
enter
rolb
lea
imul
mov
cwtl
lret
jo
jmp
and
mov
cmpl
ss
inc
jbe
jp
push
add
push
pop
leave
pop
mov
push
add
repnz
imul
in
mov
pop
pushf
hlt
sbb
mov
mov
adc
dec
cmp
sub
cmc
cld
xchg
rcrl
mov
push
cmp
popa
cmp
xchg
sbb
fwait
mov
hlt
push
and
and
pop
push
pop
ljmp
push
sbb
mov
mov
fistps
mov
adc
scas
data16
popf
cmp
jg
cmc
pop
inc
mov
shll
and
cmp
arpl
scas
push
mov
jno
or
lret
sbb
jle
test
rcr
xchg
jo
cmpsb
push
cmp
cld
and
out
ret
cmpsl
mov
outsl
in
xor
or
jno
movsl
test
les
lea
mov
push
inc
aaa
mov
jno
icebp
mov
jecxz
lret
outsb
jne
fs
mov
sbb
adc
out
mov
call
jp
xchg
jecxz
insl
or
cmp
mov
out
push
rcrb
sub
aaa
jo
mov
mov
fldl
loop
arpl
in
jecxz
enter
cli
mov
sbb
push
clc
xchg
insb
aad
fsts
fcomip
xlat
ret
mov
shlb
clc
push
imul
cmp
ret
xchg
js
outsb
or
sub
fs
mov
loop
mov
mov
daa
sub
or
pop
stc
sub
lahf
test
stos
ljmpw
add
data16
popa
aaa
sub
aam
js
out
inc
cltd
sub
jl
ljmp
test
push
jl
mov
jno
fisttps
sub
sub
es
cmpsb
lret
add
pop
lods
inc
jnp
int3
ds
les
call
std
jo
pusha
insb
sbb
subb
aam
xchg
mov
fmuls
and
cmpsl
xchg
add
andl
jp
pop
mov
adcb
scas
pop
cmpxchg
in
mov
xchg
hlt
fiadds
jge
iret
and
xchg
mov
insl
into
pop
loopne
sbb
jbe
xchg
testb
xlat
fcompl
loope
mov
and
and
cli
xlat
push
xorb
lret
jo
mov
jmp
and
out
sbb
adc
cmc
adc
xorb
sub
aad
arpl
test
mov
push
and
arpl
xchg
std
flds
shrb
jo
sarb
mov
cltd
aaa
fisttpl
or
sti
outsl
aas
adc
mov
mov
movsb
sbb
add
jge
sub
jno
das
pop
aas
adc
inc
lret
mov
cmc
mov
arpl
or
xlat
pop
addr16
fsubp
stos
push
inc
jnp,pn
mov
xchg
insb
push
jns
sub
jge
out
std
and
xchg
jo
xchg
shrb
or
imul
jb
xchg
mov
mov
in
aas
push
subl
dec
les
iret
or
orl
int
arpl
sbb
dec
jmp
test
jns
mov
lds
sub
push
lea
arpl
push
movsb
loop
xchg
out
ja
mov
mov
xchg
clc
xorl
fisttpl
testb
cmc
dec
jmp
jle
scas
sbb
cmp
inc
inc
or
jo
xchg
in
movsb
jp
cmpsl
and
scas
push
das
sti
out
mov
in
subl
fdivrl
or
nop
cwtl
push
dec
pop
jl
mov
rolb
push
inc
jno
mov
pop
inc
push
sahf
out
pop
popf
int
xchg
sete
adc
push
xor
dec
pop
movb
sub
mov
dec
loope
pusha
imul
push
lock
pop
andl
icebp
clc
int3
jmp
pop
fcoms
pop
repnz
lret
daa
pop
aad
outsl
fisubl
test
or
sbb
push
aas
add
push
add
and
xchg
xchg
mov
je
ret
sbb
adc
sbb
and
in
filds
jmp
jl
test
cmpsb
push
data16
lcall
jp
sub
inc
sarl
das
setge
frstor
dec
out
mov
aad
fistpll
mov
loop
loop
dec
sbb
pop
test
pop
fistl
add
push
jle
push
test
sub
push
pop
test
movsl
or
dec
cmp
and
mov
pop
mov
push
inc
shlb
sbb
mov
movsb
cmp
pop
aad
cs
pushf
add
movsb
rorl
and
rcrl
rcl
xor
push
insb
xchg
add
pop
maskmovq
testl
dec
mov
and
mov
pushf
notb
sub
rclb
jnp
lods
addr16
xlat
mov
test
addl
push
or
mov
loop
enter
mov
jmp
xor
hlt
pop
arpl
adc
test
iret
es
addr16
xchg
xlat
cmp
sar
mulb
ret
dec
outsl
das
jecxz
mov
jnp
loope
jns
mov
outsb
cmp
cmp
cli
js
sub
adc
add
jmp
leave
or
mov
repz
mov
icebp
aaa
cli
xor
jg
xchg
lcall
sbb
dec
push
ret
xor
lods
or
dec
push
pop
push
sub
mov
sti
push
movl
lods
lret
aad
inc
add
xchg
lea
mov
loope
xchg
sub
lret
mov
adc
fcomip
test
jne
push
mov
lods
dec
fildl
push
int
lret
cmpb
push
inc
leave
inc
add
mov
test
call
inc
and
in
jns
jmp
scas
in
pop
xchg
jb
in
cld
mov
push
movsl
or
push
gs
rorl
xor
lods
sub
je
cli
mov
cmpsl
stos
push
roll
popf
mov
jae
in
sbb
repnz
lret
pusha
stos
ljmp
push
loopne
adc
inc
push
jne
push
inc
xor
test
stos
cmp
and
lods
and
sub
xorl
adc
repz
sbb
jl
and
lock
xchg
lcall
jge
stc
ret
lock
xchg
pop
fwait
arpl
pop
movsl
jno
mov
cmp
out
mov
sub
or
ret
cmc
xor
sub
into
mov
sbb
shlb
popf
cmp
mov
push
out
jle
test
jp
push
jns
testb
stos
or
je
dec
push
xlat
push
dec
jecxz
scas
or
add
sahf
sbb
push
test
mov
lea
jge
xchg
and
mov
enter
lea
lock
mov
sub
outsl
mov
popf
mov
cmc
jmp
mov
jae
popf
inc
xchg
pop
jns
add
pop
cmp
mov
bound
into
aas
shlb
or
mov
push
inc
mov
loope
sti
pusha
popa
pop
mov
cmp
in
frstor
cmp
insb
jo
pop
push
pop
sbb
jmp
pop
leave
mov
sbb
das
ret
daa
jecxz
sub
or
jne
push
adc
xchg
sub
inc
inc
fs
cmp
movl
jb
push
sub
enter
xchg
cli
ljmp
add
popa
bound
lcall
pop
enter
out
push
inc
xchg
mov
jp
pop
fildl
sbb
and
test
pusha
inc
lret
jns
xchg
xor
sarb
stc
das
out
and
lods
decl
jp
and
outsl
mov
arpl
mov
pop
ret
mov
inc
mov
jno
shll
jbe
push
insb
pop
arpl
lods
inc
cmp
daa
add
sub
popa
ss
sub
fcompl
lret
movsb
inc
inc
add
push
push
pushf
add
mov
movsl
sub
inc
mov
test
stos
sbb
mov
cmp
aaa
dec
cmc
push
hlt
popf
mov
lds
in
cmp
fdivl
cwtl
mov
pusha
push
jecxz
add
push
lods
loope
pop
fadds
stos
xchg
or
cmp
loop
or
jno
xor
adc
xor
push
es
pop
mov
pop
cltd
push
inc
inc
mov
sbb
call
lods
push
hlt
pop
sbb
jge
test
mov
andb
shl
mov
xlat
mov
lcall
rclb
jae
xchg
inc
insl
and
in
nop
adc
js
inc
jecxz
sub
hlt
xor
ss
mov
in
pop
lods
imul
popa
add
sbb
fdivs
arpl
fimull
xchg
out
push
js
ljmp
xorb
push
cmp
dec
or
daa
mov
add
cmp
mov
repz
inc
in
popf
stos
fisubrl
xchg
jecxz
leave
dec
mov
mov
enter
out
mov
pop
in
push
enter
andb
lahf
cld
pop
test
pop
in
and
xlat
popf
xor
in
mov
popf
sub
inc
pop
fiadds
push
sbb
or
push
jno
push
repnz
test
dec
outsb
and
int
xchg
cmp
push
jnp
push
repnz
popa
mov
sbb
inc
dec
aaa
repnz
les
jecxz
ret
push
lods
adc
or
mov
aas
pop
dec
test
and
mov
or
mov
mov
mov
jne
mov
out
dec
rclb
fiadds
jl
fsts
scas
add
pop
sbb
sbb
or
movsl
dec
dec
xchg
fsubs
loop
mov
lcall
sti
and
lods
pop
jmp
or
aad
jnp
push
fldcw
sbb
push
stos
sub
je
out
aaa
sub
sbb
push
sbb
mov
inc
pop
or
inc
adc
cltd
ret
in
test
push
hlt
std
add
sbb
jo
imul
xchg
add
dec
xor
sbb
fsubrs
adc
stos
lods
pcmpgtb
jo
pop
jo
xchg
jmp
jns
fnsave
xor
sub
faddl
pop
lea
fdivs
ror
sbb
ror
jb
out
dec
ret
jbe
loopne
in
mov
jmp
mov
or
cmc
out
bound
es
stc
addr16
pop
lock
xchg
xchg
dec
outsb
shlb
cmp
cmp
ljmp
mov
sti
out
mov
push
cmpsl
hlt
dec
pop
je
xor
cs
popf
and
add
insl
jle
les
stc
rep
int3
mov
sahf
add
mov
xor
cmp
inc
fistl
mov
pop
jo
pop
fisttps
test
sahf
insb
add
cmp
mov
inc
fstl
imul
sbb
sub
rcl
cmp
iret
sahf
mov
jne
mov
and
dec
aas
cmp
frstor
jnp
repnz
mov
pop
sub
xor
stc
adc
std
pop
xchg
mov
inc
sbb
jge
xor
sahf
cltd
jge
ljmp
xchg
add
push
je
jns
test
or
stos
ja
jp
jb
cmp
mov
enter
inc
add
nop
adc
aaa
jecxz
les
insl
push
lcall
xchg
scas
jb
and
mov
mov
sub
aam
xor
add
call
dec
into
mov
das
out
and
outsl
mov
pop
fnsave
roll
mov
xor
xor
and
mov
and
aad
in
mov
adc
pop
insb
jo
sub
in
mov
sub
rolb
std
pusha
xchg
push
inc
lcall
clc
add
sbb
inc
and
popa
in
ss
pusha
test
mov
sbb
sub
push
push
dec
push
jp
mov
sub
loope
jne
inc
jno
mov
mov
mov
push
xchg
div
clc
xchg
xor
mov
ret
loopne
mov
rcrl
xorb
push
or
push
call
sub
dec
out
movsb
inc
mov
jmp
pop
fwait
or
out
fdivs
in
aam
pop
lret
mov
addr16
dec
add
sub
dec
imul
mov
movsl
loopne
out
aad
aad
cmp
ror
add
cmp
shl
subb
and
daa
stos
pop
shlb
mov
mov
roll
and
test
out
xchg
clc
sub
add
mov
push
jg
cmpb
in
mov
sbb
ret
mov
mov
jbe
movsb
nop
mov
out
cmp
fsubs
icebp
inc
rcll
add
mov
jp
lods
xchg
add
inc
sub
lods
mov
pop
push
jecxz
movsl
add
mov
bound
add
into
mov
sub
popa
and
out
shrb
std
insl
repz
mov
and
inc
xor
add
pop
sub
pop
add
clc
inc
test
loope
gs
lret
pusha
pop
cltd
sarl
lods
je
push
push
and
rolb
jo
push
xor
mov
dec
push
loop
push
imul
sahf
nop
pop
mov
jno
sub
arpl
sub
andl
rcrb
push
mov
cli
push
rcrl
cltd
add
mov
xchg
sub
jle
and
mov
daa
pushf
icebp
std
js
and
dec
push
les
fildll
push
stos
out
shll
xchg
loope
dec
arpl
pop
sub
dec
inc
insb
shl
sbb
ret
lret
dec
rcll
or
cmc
mov
pusha
inc
xor
mov
fimull
cwtl
adc
das
je
test
add
push
js
push
sbb
int
mov
shl
call
sbb
or
gs
adc
aam
or
adcl
and
dec
cmp
mov
pushf
push
jle
aad
ljmp
xchg
fisttpl
inc
inc
push
pop
sti
pop
mov
cltd
cwtl
mov
std
pop
repz
push
xor
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jb
push
xor
pop
call
in
mov
mov
test
xor
imul
stos
call
xchg
sahf
jg
xchg
mov
pop
pop
call
add
push
dec
dec
outsl
jl
pop
mov
es
mov
push
pop
pop
add
jmp
mov
scas
dec
fsub
mov
inc
je
adc
xor
mov
mov
add
mov
xor
call
or
das
cmp
call
inc
out
aam
jb
inc
jns
pop
insb
xor
inc
pop
pop
xor
call
mov
jmp
mov
pop
push
xor
popl
mov
mov
sub
cmp
jne
jmp
cmpsb
out
cmp
mov
lcall
ret
sub
jbe
lcall
mov
xor
cli
leave
mov
cmpsl
mov
mov
lret
ret
movsb
fs
push
add
insl
pop
xchg
pop
add
or
mov
sbb
jo
test
sub
sbb
sbb
mov
lds
push
stc
loope
jb
add
cmp
pop
nop
add
add
scas
lret
sbb
sub
jo
xor
rolb
push
mov
call
cld
ljmp
rcl
in
mov
mov
mov
pop
outsl
mov
pop
dec
or
mov
lahf
rclb
push
arpl
mov
daa
lcall
jne
adc
fidivrl
push
jge
pop
out
adc
scas
jl
sub
push
pop
mov
mov
and
imul
scas
adc
push
adc
adc
notb
inc
scas
insl
stc
pop
test
hlt
push
sbb
fistpll
jnp
jne
bswap
loop
outsb
sbb
int
into
roll
in
test
lcall
add
test
cmp
push
int
push
addr16
sub
std
cmp
pop
icebp
adc
jb
sbb
jg
adc
hlt
ret
loop
addr16
loop
addr16
pop
mov
mov
mov
movsb
mov
adc
rdmsr
adc
outsb
sbb
mov
push
int
mov
mov
das
stos
mov
andl
pop
cmp
push
cmp
cmp
test
mov
pop
sub
xor
enter
arpl
and
mov
pop
pop
repnz
cmp
movsl
add
or
cmp
push
andl
ss
je
push
lods
scas
push
andl
adc
mov
mov
fcmove
imull
inc
loopne
insb
out
add
lea
or
mov
mov
fisttps
call
sbb
ficoms
xor
fistpll
add
sub
xor
cmpsb
lret
imul
add
and
or
jno
cld
xchg
iret
adc
mov
aam
sub
cli
sub
arpl
inc
arpl
inc
bound
pop
push
mov
mov
dec
pop
aas
lods
lods
gs
adcl
out
out
ficompl
xor
lods
rcll
pop
sub
add
gs
mov
movsl
sti
xchg
xor
push
lea
shll
lods
gs
push
push
push
mov
lods
gs
mov
mov
aaa
iret
dec
fdivrp
daa
jle
lods
lods
cmpsb
scas
lods
gs
mov
sti
mov
nop
hlt
ja
xorb
jo
mov
ret
fsubl
mov
mov
dec
cwtl
lods
xchg
sbb
call
in
sub
pop
lods
gs
jno
inc
cli
mov
arpl
xchg
movsl
dec
cli
mov
in
lods
lods
gs
push
inc
cli
mov
add
lods
lods
gs
mov
icebp
mov
cmp
and
and
xlat
sbb
inc
cli
mov
xbegin
and
fs
jle
js
mov
pop
xbegin
scas
pop
and
lock
gs
xor
push
mov
push
lock
bnd
cmp
adc
xor
lods
mov
scas
lods
gs
dec
outsl
repz
dec
jae
mov
add
cmp
mov
mov
sub
pop
in
lods
lods
gs
popf
cld
mov
and
mov
sahf
cmp
dec
jae
mov
or
xor
lods
int3
cmp
mov
inc
mov
xor
lods
fidivl
pop
loope
lods
gs
flds
loop
call
pushl
lods
lods
imul
cli
push
mov
jae
push
dec
iret
cmp
jp
lods
cmp
push
lods
xlat
add
lods
gs
mov
lods
gs
mov
gs
mov
lock
lock
add
pop
movsb
and
add
mov
dec
mov
aaa
or
mov
mov
cwtl
mov
mov
gs
lods
mov
or
std
mov
xchg
pop
in
sti
insb
push
in
xor
cmp
cltd
ss
mov
dec
mov
sbb
mov
dec
dec
adcb
xchg
fs
cli
mov
push
in
xor
cmp
cltd
ss
mov
dec
mov
push
popf
loopne
push
cli
mov
push
in
xor
cmp
cltd
ss
pop
push
dec
mov
mov
push
lahf
test
xchg
xchg
pop
inc
dec
xor
lods
gs
mov
xchg
pop
in
sti
fwait
push
in
xor
cmp
cltd
mov
out
arpl
lods
inc
and
lods
dec
cli
mov
jne
push
pop
mov
push
lahf
inc
fs
mov
mov
mov
adc
mov
out
mov
fimull
inc
add
sub
mov
lock
mov
out
mov
aas
adc
fcomp
outsb
movsb
xchg
ds
mov
fiaddl
push
data16
mov
or
lods
gs
mov
rolb
mov
push
push
pop
lock
lods
gs
pop
pushf
push
clc
jmp
pushl
lods
lods
movsl
xchg
mov
lahf
aam
lods
gs
aam
jl
lods
shlb
xor
popf
xchg
mov
iret
pop
sti
mov
fidivl
mov
sahf
out
ret
jmp
js
sbb
xchg
mov
mov
mov
aad
sbb
lods
lcall
lods
sbb
jne
pop
sti
jne
xor
add
mov
pop
push
mov
push
mov
or
mov
mov
gs
jne
sub
popa
test
mov
jns
sub
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
gs
mov
add
mov
lods
xor
cli
mov
gs
mov
arpl
mov
gs
mov
gs
mov
pop
push
lods
gs
mov
gs
mov
gs
mov
gs
mov
jns
mov
inc
arpl
mov
mov
xchg
bound
add
es
push
adc
lock
sbb
dec
out
dec
xor
add
pop
xchg
mov
jbe
out
incl
inc
mov
mov
sar
or
sub
and
ja
test
and
aam
mov
push
mov
inc
xchg
daa
jno
or
ss
jp
jbe
dec
sahf
aaa
cmp
pop
cmp
inc
mov
or
notl
xchg
das
ficompl
int
mov
inc
fnstenv
jge
iret
mov
cmpsl
jge
pop
shlb
setbe
out
and
pop
or
bound
insb
mov
sbb
lret
cmp
rcrb
sahf
int
lock
adc
add
add
or
add
add
and
jo
and
push
add
adc
add
add
add
sub
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
insl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
mov
add
add
add
add
add
add
mov
add
add
add
add
imul
inc
outsl
outsb
je
outsl
insb
jae
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
jo
xor
mov
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
cmp
inc
and
add
fisubs
push
adc
and
dec
add
and
stos
sub
lock
push
outsl
and
loopne
lods
adcb
mov
and
inc
je
inc
dec
int3
dec
jle
mov
dec
inc
or
push
push
je
imul
inc
add
add
xor
pushf
sub
test
or
test
sbbl
subb
add
movsb
loope
inc
xor
mov
adc
add
xchg
mov
add
cmp
js
je
mov
mov
insb
jb
cmp
fs
add
xchg
push
enter
dec
jb
cmp
xorb
enter
jb
cmp
sub
sub
cld
and
loopne
fmul
fdivs
jb
sbb
push
orl
mov
outsb
call
add
inc
and
fdivl
add
mov
push
xor
pop
jmp
sub
xor
add
xor
sbb
sbb
and
rol
push
mov
adc
push
int3
push
call
mov
test
jne
xor
add
pop
lret
mov
push
add
or
rcl
ret
femms
lea
loopne
mov
nop
push
ds
addl
aas
les
xor
push
pop
nop
mov
cmp
cmp
pop
sbb
fadds
xor
add
dec
mov
mov
push
pop
or
rclb
xor
and
inc
cmp
add
push
mov
push
xchg
push
adc
mov
nop
aas
push
push
orb
call
xchg
add
inc
push
jmp
mov
inc
mov
jns
adc
jne
add
adc
cmpsl
fst
daa
xchg
aas
pusha
or
jmp
dec
add
dec
cmp
pop
aam
jge
fbstp
loope
call
test
pop
pop
pop
add
je
repnz
add
xor
jge
sbb
add
call
fmul
ja
popl
and
sbb
or
sub
add
cltd
gs
xchg
or
fdivs
add
je
fbstp
push
iret
add
sbb
sub
sahf
test
push
add
adc
sar
lock
cmpsl
sub
or
push
or
jle
jge
add
bound
fcmovbe
lock
rclb
incl
jecxz
adc
out
adc
add
push
sbb
nop
out
cmp
mov
test
cmp
or
sarl
fs
adc
and
mov
add
not
dec
clc
jp
fs
flds
sar
add
popa
add
pop
push
push
push
lds
jns
lret
and
cmp
add
movsl
fsubl
dec
adc
dec
in
or
push
data16
push
nop
sbb
jl
pop
lds
adc
rolb
push
push
and
jae
and
out
ja
dec
sbb
mov
je
push
xchg
jg
pop
fisubrs
jne
mov
dec
xchg
add
movl
filds
cwtl
jmp
pusha
aas
add
add
sub
push
psubsw
or
adc
xchg
sbb
adc
cmpsb
mov
dec
test
pop
ljmp
add
xchg
add
je
xchg
and
xchg
add
sub
dec
inc
cmc
xor
cmp
or
add
xchg
nop
jbe
add
fldl
call
sarb
push
pop
inc
adc
sub
push
test
shrl
jmp
leave
xor
mov
mov
add
imul
xor
add
and
adc
sahf
add
add
pop
leave
cld
testl
xchg
test
add
sbb
jae
fisttpll
loope
out
fiadds
call
dec
inc
loop
adc
lods
xor
mov
add
aas
push
xchg
add
xor
pop
aam
cmp
add
sub
jl
xlat
push
add
call
ja
add
inc
arpl
test
leave
or
out
inc
fs
adc
call
and
int3
sbb
cmpsl
int
pop
movsl
and
cmp
add
aaa
and
or
pop
mov
sub
inc
aas
cmpsl
xchg
gs
add
bound
orb
jne
ja
add
mov
loopne
lea
sub
pushf
es
pop
call
icebp
push
xor
addl
mov
push
mov
and
jmp
add
push
orb
test
lcall
sub
imul
dec
rcrb
cmpsb
jp
and
cmpl
add
adc
sbb
add
adc
inc
adc
add
push
adcb
cwtl
sbb
or
jnp
push
out
cmp
add
jae
ror
push
je
add
mov
jmp
int3
inc
mov
mov
add
mov
ret
cs
pop
es
dec
add
push
cmp
lods
cmp
pop
add
mov
addl
push
fs
pushl
int3
andb
xor
add
push
jle
add
pop
xlat
out
bound
pop
sub
test
clc
sysret
mov
xchg
cmp
das
mov
add
xor
pusha
rolb
add
jo
dec
daa
sbb
repnz
movb
pop
add
add
xchg
xchg
ret
cs
jmp
mov
add
dec
stc
repnz
test
int3
test
sbb
xchg
enter
sub
out
mov
hlt
leave
adc
dec
cmp
aad
cmp
mov
in
cmp
pop
add
je
xorl
in
jne
xor
add
push
push
lret
inc
bndldx
in
fistpl
loopne
push
cmp
xchg
adcl
dec
or
cmp
cmp
add
test
leave
jns
add
xchg
stc
add
dec
aad
int
adc
push
jmp
pop
movsl
rcr
outsl
sub
negb
or
lea
add
mov
add
mov
add
pop
add
add
push
cld
adc
cmp
call
add
adc
mov
addl
lock
sbb
pusha
add
adc
movl
mov
ret
or
add
cmp
leave
test
enter
or
es
add
sbb
loop
cwtl
in
add
add
adc
or
push
test
sub
rolb
and
xchg
add
loopne
dec
incb
adc
dec
fnstenv
loope
and
inc
nop
jecxz
push
out
cs
add
push
sbb
scas
add
xor
adc
ret
add
and
mov
testb
js
sbb
cmpsl
rorb
sub
cmp
push
mov
mov
call
fidivs
push
xor
mov
or
and
sti
fadds
pop
and
add
lock
pop
add
lret
push
pop
andl
movsb
mov
leave
clc
dec
rcl
mov
popaw
ror
aas
jle
add
aaa
sub
repz
xor
add
jge
push
xchg
imul
loopne
sbb
add
jmp
and
inc
jne
adc
sub
daa
in
xchg
or
ljmp
add
xor
or
or
je
imul
xabort
mov
pop
add
dec
xchg
xor
inc
cmp
pusha
shll
rcll
dec
es
mov
add
movsb
xor
dec
add
dec
nop
hlt
lcall
inc
pop
rcrl
xchg
jecxz
inc
adc
insb
add
sub
cmp
bound
or
or
adcl
jl
add
dec
sbb
mov
mov
push
jle
cmp
andl
adc
cmp
mov
add
adc
pop
add
xchg
scas
sbb
les
nop
imul
lea
cld
movsl
push
jg
cld
or
or
inc
mov
and
addr16
roll
fsubs
es
add
sub
loopne
or
add
je
nop
aas
dec
pop
pop
sbb
iret
xor
adc
cmp
dec
loopne
insl
cmc
outsl
out
push
xor
ds
pop
incb
adc
xchg
int3
leave
call
call
imul
jne
cmp
or
mov
add
sti
xor
add
xchg
mov
add
push
add
in
push
dec
subb
dec
pop
pop
ljmp
shlb
loope
je
add
addb
insb
jle
xor
dec
xlat
sbb
jg
pop
lods
add
pop
jle
out
shr
add
push
xchg
or
dec
fsubs
add
sbb
lcall
add
cmp
or
test
add
mov
mov
vucomisd
iret
mov
cmp
pusha
xchg
jmp
add
cltd
xor
xchg
add
pop
pop
xchg
dec
lret
add
repnz
mov
imul
lods
jno
test
pop
sub
xor
mov
pop
pop
movsl
or
stos
or
cltd
cld
jmp
leave
push
pop
push
xor
and
cmp
in
sti
add
mov
adc
sub
inc
test
jge
xor
adc
add
ret
cmpsl
mov
push
bnd
clc
sub
prefetch
dec
add
jl
hlt
clc
sahf
add
cmp
cs
jbe
or
push
dec
inc
cs
or
push
imul
add
call
push
rol
cmp
cmp
addb
pop
push
and
xchg
sbb
push
mov
xor
sbb
xchg
inc
jmp
cmp
dec
andb
pop
test
and
add
cmp
cli
sub
sub
lea
test
and
fdivrs
add
mov
inc
add
cmc
test
add
ret
lock
movsb
inc
inc
add
jmp
cwtl
punpckhbw
and
cmp
push
add
cwtl
jmp
push
or
addr16
test
dec
aas
or
ret
inc
sbb
add
push
or
cmpsb
imul
or
cmp
sub
jno
push
adc
add
leave
inc
or
mov
imul
mov
test
add
cwtl
add
pop
add
mov
cmp
or
mov
mov
jmp
aas
inc
mov
insl
pop
xor
push
or
dec
and
add
and
lcall
sbb
pop
pop
mov
dec
in
add
out
mov
dec
jg
add
js
push
icebp
or
add
add
cmp
jl
xlat
sub
inc
pop
lds
cmp
loop
pusha
add
addr16
orl
sahf
add
sub
sbb
imul
pop
pusha
adc
add
testb
xchg
stos
push
int3
lcall
inc
fcomps
mov
sbb
push
add
push
incb
add
dec
xor
movl
xchg
addr16
cs
pop
and
ret
push
push
sbb
nop
adc
xor
add
add
xchg
sbb
adc
mov
pop
xlat
or
movsb
push
xchg
fistpll
add
js
mov
gs
cmp
lcall
and
jmp
sahf
lret
dec
orb
inc
mov
or
dec
arpl
add
xor
and
cmp
sub
cs
pusha
cmc
fadds
sub
mov
andl
jmp
add
jmp
cmpsl
xchg
mov
pop
repnz
cld
jbe
sbb
xor
andb
add
mov
add
insb
subb
inc
clc
add
ljmp
dec
add
jge
movsl
cmp
clc
adc
add
lret
xchg
call
add
dec
jle
jge
xchg
or
and
das
and
call
xlat
bound
ret
dec
test
mov
rorb
nop
mov
or
cmpb
mov
cmpsb
inc
std
add
sbb
mov
adc
push
int3
add
adc
out
dec
dec
cwtl
loopne
lock
scas
add
pop
call
add
sub
mov
and
jge
sahf
or
test
ret
es
int3
enter
je
add
into
fcmovnu
lret
add
add
loopne
jecxz
and
sub
push
and
out
mov
rcrb
leave
add
adc
psubb
add
nop
push
xor
enter
xlat
test
add
cmp
ja
je
pop
sub
vmread
rep
incb
cmpl
add
movsb
xchg
mov
jl
xchg
sbb
adc
std
sbb
pusha
lret
push
lcall
add
xchg
adc
add
nop
rorl
jns
jbe
cmpb
jne
aam
jnp
rorb
out
add
and
inc
lock
inc
push
adc
test
xorb
or
andb
cmp
int
pop
dec
into
cmc
adc
mov
or
ja
js
xor
push
push
lea
push
lods
and
ja
mov
repz
int
insl
cmp
mov
push
in
jl
and
jmp
pop
xor
xchg
add
cmpl
jae
movzwl
imul
cmp
add
add
shrb
or
mov
sbb
js
mov
in
pusha
pop
js
in
or
mov
mov
fwait
pop
pop
xlat
insb
movl
call
std
fists
pop
stos
add
je
and
outsb
mov
shlb
cmp
mov
pop
fcom
stos
mov
mov
add
aaa
aas
jp
mov
pcmpeqd
add
add
sbb
push
test
loopne
jle
cmp
push
inc
into
test
shlb
sbb
fnstenv
inc
dec
scas
jne
add
sbb
repnz
loop
fildl
sar
push
add
mov
fiaddl
mov
or
sbb
jne
push
adc
in
add
dec
out
and
and
add
sbb
mov
inc
stos
cmp
add
std
cld
or
fiadds
sbb
nop
cmp
loopne
adc
add
mov
sbb
rep
roll
adc
xor
add
jno
in
imulb
mov
xchg
cwtl
adc
jno
cld
iret
add
sub
mov
movsb
fildl
or
jns
lcall
add
mov
jae
add
mov
stc
cmp
mov
dec
mov
fnstenv
roll
mov
ret
rorb
nop
sub
imulb
mov
jmp
int3
lods
add
sbb
jl
add
add
push
inc
addb
sti
and
mov
sub
or
mov
and
add
popa
pop
pop
rcrb
xor
sub
enter
dec
test
pusha
and
jmp
add
xor
in
xor
push
ja
add
clc
subl
add
xor
or
mov
xor
sbb
pop
int
add
aam
adc
testb
add
fdivrs
cmp
sub
in
inc
push
repnz
pop
bt
je
fisttps
popa
jb
mov
add
adc
add
ret
or
mov
inc
not
jmp
test
jmp
in
je
inc
add
jne
pop
and
cli
cmp
jae
dec
add
add
inc
add
ss
fsubrs
rolb
cld
dec
cld
nop
add
mov
lods
sbb
adc
ret
je
fsubs
or
add
das
rolb
loopne
clc
add
push
push
sbb
add
and
xor
push
mov
and
fiadds
pop
jne
loop
cmpsl
or
add
sub
cwtl
add
and
pop
mov
popa
add
pop
aaa
add
xor
jae
ss
push
add
das
push
add
repz
pop
dec
adc
push
push
pushl
roll
and
inc
hlt
mov
in
push
or
mov
enter
lcall
sub
sbb
add
jno
ret
dec
xchg
clc
and
cmp
or
mov
sub
dec
add
push
inc
push
inc
pop
inc
add
outsl
jb
popa
outsb
roll
fdivl
jg
sbb
push
push
dec
cmp
add
jae
imul
push
jne
dec
rcr
mov
mov
xlat
add
jo
xor
mov
inc
add
adc
cli
jecxz
mov
xchg
testl
jge
xor
ss
mov
cli
add
sbb
add
inc
loopne
push
divb
jmp
gs
add
dec
or
dec
call
inc
or
leave
sub
popl
or
lock
cltd
insb
xchg
pop
add
mov
call
push
loop
loopne
stos
mov
and
fcomp
adc
add
cmpb
pusha
mov
in
leave
add
pusha
push
add
pop
push
sar
pop
addr16
inc
sbb
in
cmp
hlt
sbb
andl
int3
cmpsb
divb
rolb
mov
je
cmp
lea
adc
mov
push
fldenv
ret
mov
test
push
sbb
movsl
dec
shrb
jge
inc
add
nop
push
add
add
repnz
test
pop
pop
fs
ret
add
subps
cld
jns
mov
add
inc
cmp
add
inc
popl
sbb
or
pop
faddp
mov
call
pop
xor
pop
push
loope
sbb
lock
psadbw
hlt
cs
pop
add
outsb
cmp
or
cmc
or
add
pop
and
add
or
push
in
jecxz
lods
add
je
xchg
sbb
mov
aaa
xor
push
inc
and
rorl
add
push
or
jp
lret
jg
ds
mov
popa
jne
cmpb
sbb
adc
imul
cli
in
push
push
call
push
sbb
fistpl
push
push
add
push
add
mov
cltd
shl
dec
jnp
sbb
push
mov
jg
sbb
or
clc
push
adc
jl
outsl
add
inc
add
add
or
sub
add
cmpsb
add
push
loope
imul
pop
fmuls
cmp
pop
mov
adc
inc
ja
hlt
fiaddl
lock
push
addps
orb
repz
lret
xor
mov
sbb
cmpsl
add
outsb
cld
call
dec
dec
or
mov
test
push
jmp
and
out
mov
add
cmp
cli
out
push
je
pusha
stos
mov
loopne
mov
jno
ja
imul
add
sbb
add
and
mov
mov
or
sub
test
push
push
mov
movb
mov
cmc
cmp
inc
rorl
add
fstpt
sbb
stos
mov
shl
push
roll
jl
cmpsl
and
out
mov
inc
add
addb
outsl
pusha
aad
pop
add
movl
stc
or
mov
jecxz
lcall
inc
fimull
inc
sub
movsl
mov
nop
add
mov
sub
hlt
add
xorl
sbb
and
subb
call
addr16
add
mov
fiaddl
imul
je
clc
push
inc
mov
add
cmp
jne
fs
aam
push
imul
inc
add
xchg
into
sbb
add
shrb
rolb
dec
das
pusha
sub
adc
mov
fldl2t
sbb
xchg
sarb
cmp
sti
sbb
adc
andb
pop
adc
andl
adcb
mov
pop
mov
call
call
add
cmp
or
mov
dec
cs
cltd
add
pop
xor
mov
mov
call
shll
cmp
ds
push
sbbl
mov
enter
pop
dec
gs
data16
mov
andl
push
inc
or
pusha
add
xchg
lock
dec
push
mov
leave
xor
js
nop
push
cmp
adc
adc
lea
aam
pop
sub
add
inc
or
aam
mov
xorb
lods
shlb
add
xchg
mov
jo
in
stc
dec
xor
movq
pop
sub
inc
push
sub
mov
sbb
clc
jno
add
aas
orl
sub
push
cmp
adc
sub
inc
adc
push
pop
and
cmp
std
xor
push
mov
mov
enter
leave
jp
int
and
iret
call
sbb
into
sahf
adc
fcomps
or
lret
sub
lea
jecxz
add
add
and
add
es
push
cmc
loop
dec
pop
cmp
loopne
cmp
adc
andb
cmp
rclb
popl
je,pn
sbb
call
arpl
add
xchg
pop
pushf
or
aaa
add
dec
or
adc
cmp
sahf
push
and
adc
je
pop
ja
in
xchg
jecxz
push
mov
sbbb
inc
cmp
dec
jne
jo
push
add
sbbl
pushl
jg
add
cmp
mov
roll
push
xchg
cmpl
push
or
orb
jmp
test
fstpt
dec
add
xor
add
xchg
add
shlb
out
sahf
mov
pop
mov
mov
add
cmpsb
or
scas
mov
pusha
inc
mov
dec
add
xor
fcmovnbe
js
pop
add
xor
or
repz
add
add
loopne
sbb
fadd
sub
movsl
pusha
add
mov
pop
jge
mov
movsl
popl
or
test
sbb
movsb
adc
add
test
aaa
mov
jge
je
mov
jmp
loopne
sub
rcrb
add
pop
in
mov
xorb
xchg
jp
add
jno
add
jne
cli
and
ret
fxch
rcll
sub
adc
call
sub
sbb
xchg
add
push
shll
cmp
cmpsb
add
sbb
dec
xchg
test
enter
nop
cmp
and
add
arpl
mov
xor
orb
repnz
adc
push
xor
mov
or
push
xchg
sub
mov
decl
and
mov
push
pop
addl
andb
fs
lea
fiaddl
sbb
add
push
and
aaa
daa
add
dec
pop
sub
fcomps
mov
or
mov
or
xor
add
push
call
sarb
aaa
fiadds
add
ret
and
out
sbb
adc
xorb
and
inc
push
or
mov
mov
pop
aas
add
jmp
sbb
or
mov
jne
jo
outsb
dec
add
push
ds
add
insb
lds
or
pop
mov
inc
or
lock
and
mov
push
pop
add
cmp
cs
jns
cmp
add
pop
push
jg
and
ljmp
adc
push
sub
or
cmp
pusha
lret
mov
add
add
insb
sti
cmp
jmp
mov
outsl
jb
imul
cmp
addr16
arpl
xorl
sub
scas
lret
int3
insl
mov
sbb
nop
mov
xchg
lods
cmc
and
add
mov
dec
clc
dec
jl
lock
push
add
pop
push
lea
add
fcomps
adc
mov
adc
push
sbb
add
mov
mov
pop
dec
xchg
fisubrl
push
and
push
inc
jg
addb
inc
loopne
xchg
daa
mov
dec
pop
jbe
sahf
pop
rol
mov
outsb
add
jb
inc
add
and
sub
fs
ja
add
subl
adc
pop
mov
cld
loope
adc
sub
rolb
nop
mov
mov
sub
movl
imul
push
cmp
in
sar
repz
mov
ljmp
push
and
add
dec
sti
xchg
js
sub
insb
movsb
sbb
or
push
push
push
add
jnp
nop
test
or
daa
into
add
pop
xor
in
fldenv
loop
mov
add
add
push
addb
xchg
rolb
rorl
stos
sub
push
and
cmp
or
arpl
pop
xchg
or
add
imul
inc
add
and
add
xor
cmp
or
pop
mov
push
test
add
push
les
and
mov
inc
dec
inc
adc
mov
inc
or
scas
cmp
add
pop
add
push
pop
sbb
add
and
add
repnz
mov
cld
add
aas
ds
enter
loop
movsb
xor
loope
cld
cld
iret
add
xor
cli
cmp
mov
dec
sub
dec
push
xor
jbe
add
aam
xchg
pop
dec
idiv
stos
add
cmp
or
inc
mov
pop
mov
mov
add
cwtl
dec
sbb
xor
sub
xchg
and
cld
rcrb
add
jne
and
mov
ja
push
add
arpl
push
push
sysenter
pop
pop
and
jg
aam
jno,pn
out
jmp
push
add
push
push
push
test
in
or
mov
cli
das
loop
add
cld
dec
iret
sub
xor
mov
in
cli
jle
mov
into
push
mov
add
sbb
aas
and
movsl
loopne
add
icebp
cmp
mov
lret
xor
sbbb
add
cwtl
cmpl
push
shr
dec
pushf
push
xchg
add
adc
and
pop
or
dec
add
insb
rol
fsubp
test
or
inc
dec
pop
pop
ret
xor
or
mov
jecxz
scas
loope
in
mov
add
and
add
lret
pop
adc
pop
jecxz
adc
xchg
nop
add
inc
js
add
inc
loop
cmp
jo
add
in
mov
cmp
xchg
adc
imul
flds
cmpsb
clc
bswap
mov
sbb
cmp
fidivrl
pop
sub
pusha
push
sbb
mov
add
inc
in
testb
push
adc
insb
pop
pop
sahf
add
sub
push
dec
xchg
xor
cld
dec
jl
cmpb
jle
mov
iret
aaa
add
stc
add
jl
add
jg
sti
xchg
push
lock
cli
dec
inc
dec
fists
jns
dec
mov
mov
dec
cld
addl
push
inc
cwtl
icebp
sarb
xchg
mov
lret
cmp
repz
mov
ljmp
aam
test
ljmp
lcall
scas
and
jne
cmpl
or
sbb
lock
xchg
cmp
scas
mov
cld
jns
cmp
faddl
xchg
pop
xor
sar
and
cmp
icebp
jl
jmp
jbe
add
cltd
test
aam
lret
pop
push
repz
add
ficompl
cmp
leave
add
inc
pushf
aad
cmp
adc
dec
jg
loop
mov
sbb
inc
sub
jne
xor
icebp
push
mov
lods
loop
fs
aad
add
pop
xor
mov
cltd
pushf
xor
and
push
add
adc
sbb
rcll
int
cmp
mov
pop
push
jns
add
popa
xchg
jl
push
icebp
dec
add
test
add
dec
sub
in
xchg
jl
push
dec
lock
mov
add
pop
clc
mov
push
sub
or
or
add
inc
ss
decb
pop
ud0
add
jns
cmpsl
dec
jne
lcall
cmc
add
push
or
adc
jg
add
push
cld
aad
adc
or
addb
add
dec
andb
jno
add
adc
fnstcw
add
mov
mov
int3
hlt
and
das
adc
xchg
inc
lea
stc
mov
push
add
test
inc
lock
test
inc
bound
jnp
data16
mov
int3
push
mov
or
fisttpl
jmp
push
js
pop
and
mov
das
adc
sti
add
repz
push
jo
in
add
out
fidivl
add
push
mov
cmp
cmpsb
cmp
repnz
sbb
test
and
inc
ucomiss
cmp
in
rolb
mov
inc
popa
jl
orb
mov
ss
mov
adc
push
mov
push
mov
pop
add
inc
rorb
ret
es
adc
into
mov
ds
mov
fadds
sub
fwait
hlt
or
push
stos
ja
cli
add
push
xor
sub
xor
cmc
push
sbb
or
leave
in
push
push
cmp
or
mov
sbb
jecxz
lds
ficoms
or
or
lahf
push
cmp
jb
subl
jne
sbb
add
loope
hlt
mov
sub
or
add
nop
add
cmpl
subb
jno
jge
shl
mov
daa
add
adc
add
mov
jae
pop
pop
pusha
push
jle
and
mov
dec
add
sbbl
push
adc
movd
add
xor
fnstenv
sbb
xor
movsb
mov
add
xchg
enter
add
or
jne
add
lock
into
stc
jge
loopne
mov
pop
mov
cs
lock
xor
pop
pop
inc
frstor
jge
aas
and
lret
xor
push
inc
cmp
sub
add
leave
pop
pop
aad
mov
xchg
or
add
cltd
and
jno
add
sub
popf
dec
dec
and
sub
ret
iret
call
adc
sbb
xor
push
add
mov
idivb
add
sbb
add
arpl
mov
cmp
clc
pop
cltd
inc
or
push
pusha
jmp
cmpsb
dec
mov
mov
subb
push
jge
push
mov
pushf
and
int
std
add
call
data16
dec
or
fiadds
push
add
shrl
mov
add
mov
jl
out
insl
add
fimuls
shll
xor
filds
andb
jmp
pop
cmp
add
or
pop
test
push
notl
mov
pop
xchg
add
lret
dec
xchg
or
push
add
ror
push
push
orl
or
pop
arpl
mov
into
sub
mov
test
inc
mov
dec
mov
mov
fdivrs
pushf
mov
mov
daa
stos
jl
jbe
clc
cltd
and
add
pop
fisttpll
jo
push
les
add
add
fldenv
loop
cmp
add
dec
mov
daa
xor
pop
and
dec
clc
mov
push
add
dec
add
push
or
pushf
cmp
cmpsl
or
inc
pop
xchg
je
add
loope
adc
in
push
lret
sub
inc
add
inc
jno
adc
jmp
xor
filds
push
test
push
je
add
jmp
or
or
hlt
cs
and
inc
test
out
jmp
fdiv
and
mov
push
sbb
pop
jne
add
clc
xchg
or
int3
jg
cwtl
dec
cltd
xor
mov
inc
clc
adc
add
movb
sbb
jge
test
test
mov
ja
insl
cmpsl
jb
add
imul
xor
sbb
subb
je
push
js
add
add
adc
insl
add
data16
movups
ljmp
mov
mov
pop
push
ret
cwtl
xchg
add
repz
lea
jle
or
call
stos
cmp
add
rolb
add
inc
cmp
or
das
and
sub
xor
clc
scas
dec
jo
jecxz
je
fsubp
mov
fistl
and
pop
ljmp
inc
cmp
dec
movb
inc
inc
cmpsb
lods
push
inc
lock
jg
jmp
xor
fists
imul
or
jb
out
pop
push
xor
andb
pop
inc
pop
fildl
push
ja
cmp
push
inc
adc
call
dec
sub
mov
inc
jo
mov
aas
dec
loopne
inc
and
faddl
and
ret
pushf
nop
inc
cmp
add
mov
inc
enter
add
fimull
jno
int3
aam
aas
outsl
test
mov
fs
lds
pop
sbb
push
std
pop
loope
aaa
inc
dec
push
jg
add
imul
repz
sub
fiadds
and
xor
cmpb
jge
in
cmp
sbb
lahf
and
pop
inc
add
mov
lock
dec
xorb
add
adc
leave
sub
inc
sbb
sub
or
push
inc
and
rolb
cwtl
and
stos
add
or
ror
xchg
dec
loopne
fsubrs
push
je
jb
gs
jg
add
std
jae
fcoms
rolb
test
or
faddl
push
dec
cli
mov
add
inc
mov
add
clc
xchg
push
cmp
and
sbb
fsubr
cmp
call
xchg
add
lret
pop
ss
pop
imul
dec
dec
lods
cmp
rolb
pop
cmp
cld
add
add
mov
inc
jmp
mov
xchg
add
in
outsl
or
mov
hlt
ljmp
lock
adc
cld
in
xor
je
loop
add
add
jge
rcrl
arpl
js
jg
jbe
cmp
or
fists
lock
add
fwait
out
or
add
js
mov
add
push
adc
push
or
lea
je
xchg
mov
xchg
in
cmc
sahf
lock
sbb
and
clc
insl
mov
push
mov
mov
leave
js
sti
jp
pop
mov
push
xor
or
inc
jmp
pop
pop
sub
aad
ljmp
jne
sbb
dec
shl
test
dec
mov
xchg
cmp
mov
sub
or
jle
add
jmp
mov
mov
cld
add
inc
sbb
dec
gs
mov
add
orb
adc
add
jecxz
or
and
dec
dec
pop
add
or
es
add
xchg
jae
push
sub
add
or
sub
cmp
jmp
add
add
push
mov
add
fstl
add
call
leave
adc
sub
lds
pop
loope
enter
lods
push
pop
sbb
mov
ja
add
test
mov
mov
dec
jne
adc
sbbb
loopne
pop
inc
add
sub
dec
pop
jecxz
adc
jmp
push
add
and
movsb
pop
pop
push
push
sbbb
call
je
xor
pop
outsl
imul
add
pop
cli
add
lock
jl
shlb
mov
jmp
mov
jbe
jnp
sbb
aam
dec
mov
sub
xchg
and
mov
push
adc
sbb
sub
and
fs
xor
push
sbb
testb
adc
int
or
dec
les
sub
pusha
in
mov
push
push
rcrl
add
push
ret
and
mov
xchg
mov
sbb
sub
push
mov
add
push
test
or
adc
jmp
xlat
cmp
adc
xchg
rolb
es
mov
jecxz
xchg
lock
adc
stc
orl
push
inc
scas
clc
test
mov
push
add
adc
cmpsb
inc
ret
jmp
loopne
jbe
add
dec
jb
mov
pop
add
sbb
inc
mov
jnp
add
pop
nop
push
inc
aas
loope
jg
mov
repz
push
idivl
and
cs
mov
repz
xchg
lds
arpl
cwtl
add
sub
add
pop
mov
inc
push
rcrb
loopne
mov
add
int3
xor
and
lahf
adc
cmp
or
pop
jmp
lods
ret
inc
cmp
xor
xchg
pop
sbb
pop
cld
inc
fwait
cmp
in
sub
adc
mov
dec
add
mov
cwtl
or
and
mov
cltd
or
sub
push
mov
pop
add
push
or
loop
push
add
mov
icebp
xchg
mov
pop
mov
repnz
mov
add
jne
cs
mov
sub
sarl
add
and
shl
movsb
cmp
test
fiaddl
cwtl
jp
rolb
pop
cmp
push
rolb
mulb
add
pop
add
je
ja
lods
pop
jno
add
addl
stc
inc
jle
sub
lock
mov
in
or
xchg
jne
es
pop
pop
add
pusha
incl
fsubrl
push
push
cmp
lret
jle
push
das
dec
cmp
enter
icebp
pop
movsb
sbb
mov
add
sub
adcb
cmp
or
jge
mov
add
mov
adc
lods
shll
daa
pop
push
loop
add
adc
push
push
nop
or
test
cmpsb
rcrl
ss
lock
mov
in
movsb
add
test
sub
sub
daa
repnz
pusha
xor
dec
sbb
pop
sub
inc
xchg
jbe
int
adc
xlat
and
dec
stos
aas
add
jl
je
xor
add
aad
lea
rcrb
fisttpl
sub
cmp
add
fmulp
shr
mov
es
sub
pop
or
ret
iret
aad
shlb
adc
test
inc
inc
add
mov
cwtl
cwtl
xor
pop
mov
enter
ret
mov
add
add
or
adcb
add
out
inc
add
jb
or
cmp
inc
push
and
adc
pop
adcb
mov
sbb
sbb
stc
add
add
mov
mov
add
aam
flds
add
adc
hlt
shl
sub
xor
cmp
or
add
mov
lds
mov
aaa
cli
jbe
cmp
or
xchg
add
jge
and
mov
mov
add
jmp
cmp
pop
mov
adc
cmp
inc
add
xchg
add
aas
push
sbb
test
int3
pop
into
sbb
ret
inc
mov
push
add
nop
sbb
enter
mov
push
mov
hlt
push
daa
lret
into
pop
ds
or
sbbl
mov
pop
pusha
fisttps
add
add
leave
repnz
bound
inc
clc
jl
cld
jp
loope
mov
add
test
lds
aad
iret
decl
js
jo
mov
push
stos
mov
out
cmp
jmp
and
test
notl
out
sbb
mov
inc
imul
cmp
jl
pop
xor
cmp
pushl
xor
pushf
popf
sti
jmp
jle
push
inc
mov
add
sbb
cld
sarb
int3
repnz
test
jge
sbb
nop
fildl
inc
add
stos
clc
scas
adc
jecxz
cmp
pushf
mov
testb
inc
aam
testl
jp
iret
shll
hlt
pop
fsub
fadds
ds
push
add
cmpsb
scas
mov
pop
add
jbe
pop
dec
dec
in
xchg
jo
in
add
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
lret
push
fwait
xchg
and
add
les
aad
bound
lret
aas
cli
dec
loopne
add
mov
adc
fs
or
mov
add
pop
loop
jo
movsl
and
push
add
mov
aad
xchg
popa
add
rcrb
or
psrld
fcmovnb
pop
adc
mov
pusha
cmpl
ss
cmp
xor
jle
mov
jmp
test
jb
add
jne
not
loopne
rolb
inc
pusha
xlat
cmp
jb
add
ja
popf
repz
addb
pop
testl
je
xor
jnp
push
jecxz
lock
mov
pusha
and
add
adc
pop
add
repnz
ret
insl
pushl
add
call
and
flds
rolb
test
adc
or
in
in
adc
roll
rorb
push
jb
hlt
cltd
mov
mov
inc
add
mov
nop
das
adc
xor
adc
and
addl
add
push
stos
push
shl
cvttps2pi
sub
loopne
incb
add
cltd
sar
add
outsl
lods
dec
ljmp
mov
out
or
call
ljmp
dec
add
dec
movsl
add
pop
aaa
in
pushf
sub
pop
sub
or
mov
or
mov
cld
ret
loopne
in
push
stc
push
cmovb
or
add
clc
pop
push
subl
and
xor
dec
out
fs
inc
aad
or
les
add
data16
std
adc
add
test
adc
xchg
mov
mov
xor
adc
jmp
fs
dec
sub
call
js
imul
push
adc
sub
push
popf
repnz
fbld
fnstenv
mov
add
and
sahf
add
mov
push
imul
mov
adc
clc
enter
lock
sbb
add
xor
inc
cmpl
jge
xor
loop
call
push
ret
inc
test
into
or
pusha
ds
push
mov
xor
mov
mov
pop
dec
andb
add
sbb
out
jg
movsl
clc
adc
push
ja
jl
xor
jge
add
or
sub
sub
sbb
mov
or
test
mov
mov
dec
adc
sar
add
sub
insl
jmp
outsb
pop
xor
pop
xor
mov
add
int3
out
add
mov
cmp
cmp
fsub
push
or
mov
mov
or
add
or
add
mov
lret
add
and
testb
dec
dec
loope
inc
push
imul
cmp
and
jle
add
fdivrs
dec
cmp
and
cltd
add
push
inc
pop
fdivs
mov
or
pusha
jmp
loope
dec
std
es
pushf
in
cmp
and
adc
enter
xchg
mov
and
test
movsb
jb
loopne
scas
nop
scas
mov
sub
jl
and
je
jo
mov
add
cmp
in
jb
cmp
sbb
int3
xorl
in
jb
or
loop
mov
call
push
clc
pusha
and
xchg
lock
call
cmpsb
adc
loopne
cltd
add
rorl
or
ret
call
mov
add
and
jnp
add
js
cmp
jae
fs
push
test
inc
femms
inc
xchg
mov
les
cmc
pop
into
mov
in
cld
sbb
pop
pop
lock
add
sbb
jl
hlt
and
cmc
xchg
test
in
jb
stc
cmp
sbb
and
cld
and
xchg
shl
enter
loop
push
cmp
out
out
call
jmp
ret
andb
out
in
jb
cmp
sbb
rolb
jl
or
and
xchg
xlat
aad
mov
sbb
sbb
and
and
ficoms
shll
cmp
inc
inc
lds
add
and
xchg
jae
add
in
jb
cmp
sbb
into
iret
xchg
push
add
jb
cmp
mov
mov
mov
and
mov
jb
cmp
mov
and
jge
add
call
out
adc
xor
add
or
insb
gs
dec
addb
push
filds
inc
jb
push
add
jle
mov
rorb
add
pop
ljmp
adc
cmp
adc
popf
push
or
std
mov
pop
rcrb
inc
js
add
jb
hlt
mov
pop
xor
mov
cmp
addb
jo
pop
loope
adc
pop
test
or
adc
dec
jne
je
dec
add
outsl
jb
cmp
andb
inc
inc
jo
jmp
or
outsb
mov
mov
add
hlt
test
or
fmuls
dec
fimull
mov
js
adc
insb
mov
inc
pop
mov
push
sub
push
add
loop
rorb
inc
je
add
jns
mov
popa
pop
hlt
pusha
and
fcoml
push
outsb
xor
shr
and
or
inc
dec
jbe
scas
data16
push
sub
mov
dec
ret
mov
cmp
push
bound
mov
popa
jmp
pusha
sbb
mov
nop
imul
mov
rol
or
decb
xchg
pop
ficoms
rcrb
jmp
insb
pop
dec
inc
cmp
and
jle
inc
pop
or
inc
push
outsb
fs
pop
nop
push
sbb
pop
mov
cmp
mov
mov
pusha
xchg
dec
ss
test
rolb
mov
hlt
cmp
xchg
add
scas
rolb
add
outsl
aam
add
mov
add
ljmp
add
mov
mov
or
repz
sub
add
mov
add
nop
fs
pop
enter
xor
arpl
mov
shrb
jo
inc
imul
sbb
das
or
push
mov
mov
pop
and
ret
jb
pop
gs
jmp
outsl
fs
pusha
and
pop
push
bound
jae
mov
addr16
sbb
or
push
cmp
push
mov
popa
loop
mov
incl
add
dec
add
cmp
shr
pop
add
repz
pop
or
cltd
add
push
adc
or
add
add
bswap
mov
mov
call
sub
add
loope
lret
pop
dec
push
xor
sub
popf
inc
jnp
ret
mov
sbb
out
dec
cmc
pop
ds
inc
xor
sub
insl
cmp
stos
adc
add
mov
xchg
mov
ret
movsl
js
scas
aaa
pop
add
emms
push
add
cmc
clc
sbb
repz
je
mov
movsb
cwtl
or
jp
ja
pop
test
sub
sub
cmp
add
movzbl
push
xlat
add
sub
pop
scas
ja
push
or
call
inc
add
sbb
pop
add
incl
and
adcb
or
jmp
fs
sub
aaa
dec
clc
insb
into
sbb
pop
shll
out
push
add
xchg
loope
push
pop
dec
hlt
cmp
fwait
cmpl
or
add
xchg
sbb
adc
fisubl
push
or
inc
movups
dec
add
clc
cld
add
lock
add
mov
fisttpl
add
je
inc
mov
xchg
cmp
sbb
js
jl
push
aas
sbb
dec
push
out
add
test
repz
test
hlt
lcall
sbb
lock
les
daa
or
test
mov
int
call
bound
jg
ss
stos
add
jmp
add
sbb
push
cmp
lds
or
das
rcll
in
adc
add
sub
and
push
cltd
inc
sub
add
adc
adc
shl
xor
jge
cmp
dec
adcl
push
add
xchg
mov
sub
es
and
xchg
add
and
rolb
mov
imul
mov
inc
lock
push
cli
flds
adc
mov
mov
xchg
sbb
jmp
mov
sbb
push
es
addb
rcrb
add
clc
sti
pop
addr16
loopne
mov
add
mov
sbb
adcb
xchg
inc
push
out
add
pop
cmp
add
dec
adc
jl
mov
aas
sbb
add
sub
popf
cmp
or
push
xacquire
mov
sbb
pop
cmp
sbb
push
add
or
xor
mov
add
sbb
push
or
add
xorl
inc
xor
cmp
add
jl
rolb
aad
cmp
pop
btr
test
mov
subb
and
add
or
mov
test
lock
sbbb
xor
xchg
xchg
test
push
or
cmp
sti
mov
rclb
xor
rol
sahf
call
add
push
fstpt
push
jmp
add
sbb
mov
loop
jg
sahf
enter
mov
in
adc
ret
add
lds
lock
nop
je
adc
mov
sbb
add
jbe
and
movzwl
pop
cs
sbb
lods
add
call
psubusb
lock
fstpl
inc
sbb
loop
subl
leave
cmp
xlat
dec
mov
movl
ljmp
andl
mov
push
in
mov
enter
dec
pop
int
xor
lret
lods
adc
push
je
roll
mov
jmp
and
mov
out
mov
xchg
out
popf
cmp
dec
xor
add
aas
push
push
jb
cmp
pop
add
stc
out
lret
jl
add
pop
pop
push
mov
cmp
lret
dec
cli
or
enter
sub
pop
cmovne
jecxz
dec
bound
push
lods
inc
push
lret
rorb
pop
jle,pt
add
test
sbb
mov
adc
inc
and
cmp
pop
outsl
add
out
and
or
adc
pop
or
in
addl
push
js
add
andb
add
cmc
jno
push
push
and
pop
aam
or
shrb
pop
arpl
add
pusha
clc
push
inc
or
sub
leave
jb
add
sub
mov
iret
sbb
aam
and
call
mov
add
fnstcw
clc
nop
sti
pop
jbe
fstpt
add
test
dec
aas
adc
les
call
pop
mov
cmp
push
js
and
aad
jne
out
ret
mov
pop
mov
dec
adc
add
xor
add
popa
dec
cmp
cltd
push
dec
mov
push
mov
xchg
inc
roll
pop
into
add
jno
add
lock
out
push
cmp
add
and
sbb
stos
ljmp
push
add
repz
call
mov
and
sbb
add
lods
push
call
add
or
xor
or
lods
jmp
adc
pop
mov
adc
mov
cmp
into
add
popa
jne
push
push
hlt
add
pusha
sbb
dec
nop
add
fildl
lcall
rcll
lret
add
pop
movsl
push
add
mov
pop
or
js
add
add
movb
jmp
clc
sub
or
and
cmp
ja
imul
inc
in
outsl
mov
sub
pop
ret
adcb
rcrb
jmp
add
xor
lcall
aam
cmp
and
out
es
stos
je
xchg
jg
add
sarl
sahf
push
xor
and
add
movzbl
popf
bound
add
jno
cmpsb
enter
mov
pop
in
sbbb
movsb
or
fs
xor
and
lahf
int3
and
nop
mov
cs
inc
dec
nop
sub
add
jno
add
cltd
adc
cmpsl
fs
xor
cmp
je
pop
clc
push
add
or
pop
jne
mov
and
testl
adc
dec
aas
add
inc
dec
mov
sub
push
ret
icebp
add
add
jne
orb
mov
add
mov
xchg
lock
jmp
pop
lret
push
push
push
dec
inc
mov
sarb
add
icebp
xchg
dec
add
lods
push
and
cmp
jo
mov
mov
paddw
add
and
test
pop
add
sarb
or
call
push
pop
lahf
neg
push
jnp
inc
div
add
mov
push
add
mov
lods
push
fsts
mov
std
inc
jmp
push
xchg
add
mov
leave
and
mov
or
stc
lods
add
daa
mov
push
push
inc
sbb
push
dec
sbb
lock
add
jmp
pop
push
jl
jne
add
je
mov
add
ja
shrb
inc
mov
movb
pop
jecxz
iret
dec
lret
mov
pop
inc
push
loopne
and
inc
add
cmp
jmp
mov
jmp
roll
out
inc
je
push
add
jle
inc
add
mov
dec
sti
and
dec
inc
cli
mov
sbb
shll
cmp
fdivs
mov
sub
ret
daa
adc
inc
mov
add
mov
push
push
repnz
call
dec
shll
sub
roll
mov
mov
and
dec
icebp
add
pop
leave
enter
or
pop
jle
add
xlat
call
and
add
sub
lods
xchg
imul
xchg
adc
dec
pop
in
shll
sbb
fs
jp
sahf
jge
sar
lret
mov
add
lret
call
jecxz
clc
jne
dec
outsb
rolb
lea
jnp
mov
or
and
ret
lock
add
testb
push
pop
dec
in
popa
xchg
push
inc
in
cmp
add
jmp
incb
ljmp
dec
push
push
add
fnstsw
or
jg
add
sti
jns
xchg
in
xor
sbb
insb
dec
rclb
add
pop
add
ja
pop
add
mov
pop
push
cwtl
adc
inc
add
fisttps
scas
arpl
jae
pop
sbb
inc
and
jl
add
cmp
hlt
add
sbb
xchg
adc
repz
pusha
imul
push
rorl
call
or
fdivs
mov
or
fldl
cmpsl
add
loopne
out
add
dec
push
jo
jno
push
dec
mov
pusha
shrb
add
jns
daa
or
push
inc
adc
roll
mov
lea
cli
xor
ret
pop
push
cmp
xor
jne
and
imul
sub
add
test
add
add
xor
adc
add
cmp
add
mov
add
sub
pop
mov
int
lods
pop
clc
or
out
fdivrs
std
or
and
cmpb
lea
cwtl
xor
in
xchg
fimull
subb
mov
cmp
jbe
ja
and
cmp
add
sti
sbb
movl
ja
lret
dec
nop
or
cwtl
sbb
add
pop
dec
incb
jne
add
mov
xor
imul
rcrl
sub
inc
ss
cmp
sbbb
xchg
push
fsts
jg
std
jmp
xor
push
movsb
jbe
push
jecxz
inc
gs
pop
adc
test
stos
inc
xor
cmp
call
popa
testl
pop
or
jne
cwtl
add
or
call
add
jg
push
xchg
add
or
shrb
push
rorl
and
xchg
loopne
dec
jmp
cmp
jl
push
iret
imul
ret
test
and
adc
xchg
mov
mov
mov
sub
cld
add
jne
sub
incl
cmp
shrl
cs
fsubrs
imul
pop
mov
add
addb
pop
mov
insb
sub
fdivs
add
cmp
je
pushf
add
dec
dec
mov
pop
in
in
mov
add
ss
adc
xor
pop
mov
clc
addl
push
inc
hlt
pop
sbb
les
adc
pop
add
or
push
je
dec
mov
pop
mov
lods
cmp
mov
sbb
mov
mov
add
js
iret
pop
rcll
pop
pop
jl
testl
fs
fmull
clc
aaa
mov
and
cli
jp
xor
das
push
add
and
in
mov
popa
push
add
jecxz
cmp
ret
scas
add
es
scas
pop
and
rclb
push
mov
push
faddp
gs
popa
inc
and
mov
add
mov
aas
cmpsb
pop
add
push
pop
mov
lahf
clc
add
fucomip
or
adc
add
addr16
pop
or
add
repnz
add
int3
dec
push
push
xor
cld
inc
add
jp
xor
dec
fcmovnbe
add
fwait
mov
popa
inc
push
push
xor
add
testb
fcmovne
int
ds
mov
and
add
sub
loopne
stos
test
add
push
scas
popa
push
and
bound
mov
and
faddl
or
adc
cmc
mov
dec
add
mov
leave
sub
sub
clc
xor
and
insb
push
add
or
jne
rclb
call
repz
mov
add
and
dec
testb
mov
je
add
xchg
cmp
mov
movsb
pop
dec
adc
into
or
sub
fisttpll
add
push
dec
add
sub
rorb
movsb
lds
aam
scas
loop
cli
and
sti
pop
sub
add
gs
add
lods
push
int
add
xchg
jnp
mov
xor
mov
add
ret
pop
push
out
nop
cmp
je
cwtl
out
ja
cs
push
add
push
push
cmp
dec
or
test
es
push
inc
inc
dec
jne
hlt
push
mov
jl
push
add
adc
bound
clc
in
les
push
pop
add
movsb
lea
sub
jge
cmp
jbe
ret
jp
cmpb
lds
rcrb
or
mov
jg
add
push
mov
xor
inc
add
sub
inc
je
jle
and
mov
and
add
inc
push
int3
jmp
add
add
sar
inc
add
cmp
and
mov
subb
and
test
cwtl
ja
sub
jnp
loopne
aaa
mov
add
test
lret
nopl
inc
xor
jmp
ljmp
and
cmpb
push
push
test
loop
sbb
xor
or
je
or
push
aaa
rolb
lock
nop
lods
add
pop
insl
jge
test
lock
fsubl
in
add
in
or
icebp
in
gs
mov
add
and
scas
dec
flds
sub
loopne
les
test
xlat
cmp
fimull
add
test
test
pop
and
add
add
dec
add
jno
add
jae
or
std
popf
cmp
shrl
inc
test
cmp
sbb
fmuls
add
mov
add
popf
adc
mov
dec
daa
mov
or
call
bound
out
mov
pop
add
push
jg
adc
cmpsb
adc
call
cltd
and
les
loopne
fdivs
into
dec
shrb
add
mov
gs
es
and
xor
or
xchg
lret
aam
add
inc
dec
sub
hlt
sub
sbb
or
addr16
xor
es
mov
das
push
cli
iret
hlt
mov
adc
or
sarb
or
fimuls
scas
and
xchg
icebp
imul
sub
add
movsb
or
gs
dec
and
call
mov
push
mov
lahf
inc
loop
adc
repz
sub
push
popf
add
cli
sub
mov
cwtl
push
negb
inc
inc
dec
add
outsb
inc
sarl
fs
out
iret
adc
mov
call
mov
and
movsl
mov
pusha
inc
imul
hlt
xchg
add
xchg
aaa
daa
pop
cld
xlat
add
cmp
insl
inc
and
add
pop
mov
mov
sbb
add
dec
sahf
mov
iret
add
xchg
lea
mov
xchg
hlt
repz
jo
orb
addl
and
mov
jbe
repnz
sbb
xor
fistpl
mov
sti
push
add
cmp
sub
push
pop
adc
call
insb
das
add
pop
dec
stos
sub
adcb
inc
rclb
mov
pop
loop
jo
add
and
adc
pop
leave
sbb
push
and
into
push
sldt
sub
jb
or
add
mov
and
xchg
out
dec
add
jp
xchg
add
faddl
das
ja
je
add
int3
sahf
xor
push
cld
icebp
iret
bound
in
or
or
add
addr16
mov
pop
mov
outsb
sbb
inc
gs
push
jne
pop
xor
mov
adc
clc
inc
and
mov
loopne
dec
sub
dec
mov
ljmp
into
add
mov
mov
adc
fldl
aad
inc
lahf
add
test
mov
int3
stos
push
push
adc
cld
mov
arpl
add
add
jp
jle
add
daa
lcall
or
inc
pop
mov
mov
jnp
add
sbb
loope
push
bound
push
xor
daa
jmp
in
inc
in
xor
aaa
addb
xor
push
jmp
xor
add
ret
flds
push
add
or
add
or
or
faddl
push
mov
add
loop
adc
cltd
into
mov
push
lods
sbb
mov
and
and
mov
movsb
andl
adc
pop
adc
xchg
mov
in
push
add
xchg
es
das
inc
por
mov
adc
shlb
mov
add
or
push
mov
in
and
je
enter
push
dec
roll
sub
jle,pn
mov
dec
add
dec
loopne
pop
add
adc
fs
or
aam
push
inc
add
add
mov
pop
loopne
xchg
lret
xor
jmp
test
or
mov
test
and
nop
add
adc
sbb
push
mov
fwait
cmpsl
and
mov
add
arpl
mov
clc
aad
repz
mov
xchg
mov
add
cld
sahf
ret
add
std
add
or
je
pop
rorl
add
out
add
push
hlt
mov
push
xor
xorl
scas
je
loopne
loopne
add
bound
rolb
pop
imul
add
push
xchg
icebp
loop
xchg
add
ss
repz
add
call
aad
add
mov
dec
les
xchg
add
cmpl
add
in
mov
outsl
mov
dec
arpl
cld
das
cli
movsb
jg,pn
push
add
ud2
jns
xchg
inc
push
test
xchg
orl
cmp
nop
fadd
int3
sbb
inc
mov
repnz
cmp
add
fisttps
and
add
aas
mov
add
mov
mov
cli
cmc
add
mov
test
and
loopne
loopne
and
fdivrl
ret
fldl
insb
incl
push
mov
pop
mov
scas
pop
das
push
add
push
mov
sahf
add
movl
mov
push
pop
adc
xorb
imul
add
data16
pusha
jge
shrb
mov
add
xor
cwtl
test
idivb
mov
orl
add
jmp
into
es
add
add
mov
add
cmp
xacquire
mov
pop
push
aaa
or
je
fcmovnb
sbb
ja
jns
nop
xor
leave
mov
pop
push
adc
or
shl
inc
rol
push
mov
push
lock
mov
sahf
xchg
inc
add
addb
fidivl
in
pusha
cmp
clc
fsubrp
mov
in
jnp
and
sub
jecxz
add
mov
fsubrl
lock
call
mov
pusha
mov
push
or
add
dec
push
inc
sub
std
inc
testl
pop
add
adc
loop
incl
pop
lods
pop
dec
rolb
shr
jp
lret
push
sbb
in
adc
inc
cmp
sub
pop
push
add
lds
push
push
xchg
add
testb
mov
push
mov
fmuls
add
inc
mov
cmc
lcall
pop
mov
aam
movb
jmp
fmull
sub
cmp
mov
mov
push
mov
and
jne
pop
push
insl
add
idiv
add
pop
jle
mov
add
mov
nop
jns
mov
cld
sbb
shr
pop
push
xor
add
xchg
fwait
mov
imul
lock
add
xchg
inc
sbb
imul
lods
filds
push
lds
sub
mov
inc
in
adc
in
push
push
or
in
push
inc
sbb
adc
aaa
enter
fmull
mov
sahf
add
xchg
lahf
imul
xor
add
loop
add
and
xor
adc
ja
mov
cmp
lds
rolb
je
cmp
bsf
mov
int3
out
out
out
out
pop
cmpsb
das
add
clc
sahf
lret
xor
mov
shlb
cld
mov
fstps
add
or
les
aas
and
xor
cmp
adc
bound
add
mov
or
add
cld
push
adc
mov
xor
iret
jmp
pop
sbb
adc
dec
stc
or
lock
mov
jge
xchg
cmpsl
cltd
add
xchg
dec
push
pop
aam
xor
bound
push
and
ds
ljmp
jae
xchg
add
sub
push
call
ljmp
mov
add
dec
push
xchg
or
add
jnp
add
into
xchg
test
sbb
jae
sbbb
int3
pop
mov
add
cli
jns
sub
push
adc
or
push
push
xor
fnstcw
add
and
inc
cmp
or
insb
inc
movsb
adc
lds
imul
jns
push
jo
arpl
add
inc
and
jbe
add
xchg
insb
ljmp
mov
xchg
inc
ds
cld
pop
pop
loop
call
fs
inc
add
cltd
sbb
cwtl
adc
and
add
mov
and
inc
js
mov
adc
and
dec
adcl
enter
and
rorb
inc
dec
dec
rolb
nop
clc
xor
xor
push
xor
push
pop
inc
sub
and
insb
and
sbb
inc
test
clc
mov
shlb
adc
and
dec
rcll
dec
push
in
loopne
sub
sbb
pushf
mov
jb
rorb
sbbb
enter
or
int3
xchg
pop
fisubs
inc
test
les
cmp
shr
or
add
mov
sub
sahf
decl
or
lods
lods
aam
test
cmp
adc
and
repz
pushf
clc
adc
cwtl
std
das
shll
mov
nop
test
or
lods
adc
sub
pusha
cmpsl
jl
push
sbb
int
dec
insb
out
dec
cmp
lods
and
icebp
cld
std
cmp
push
inc
divl
repz
movsb
sbb
insb
ret
push
shlb
lret
push
aad
pusha
dec
push
js
sbb
pop
cmp
add
or
or
or
sbb
daa
adc
mov
aas
adc
dec
dec
inc
in
jmp
dec
sbb
mov
adc
repz
add
pop
stos
loopne
test
push
push
jge
mov
jle
cmp
dec
or
rorb
addb
add
sti
shl
call
loopne
cld
xchg
sub
xor
jae
xchg
enter
add
lea
cs
cmp
and
jne
movzbl
pop
adc
cmp
add
int3
add
jle
mov
loopne
adc
xor
xchg
pop
add
clc
or
push
int3
and
xchg
and
shlb
aam
ret
add
adc
stos
add
push
insl
cwtl
dec
dec
push
in
cmp
stc
pop
add
jl
or
xchg
sbb
add
stos
cmpb
inc
mov
fwait
neg
and
jmp
add
ret
inc
inc
xchg
aas
je
add
clc
or
adc
pop
stos
push
popl
dec
roll
pusha
sbb
add
jecxz
repnz
adc
mov
mov
and
xchg
push
jb
pop
ljmp
mov
clc
mov
shr
loop
jge
push
andl
cmp
mov
mov
stos
xchg
push
mov
fdivl
divl
add
or
adc
jmp
cmp
jno
add
jae
xorb
cmp
sbb
push
loop
dec
add
xor
mov
shll
rorb
add
repz
inc
lods
mov
add
or
add
jmp
dec
ljmp
aas
jae
add
add
sub
es
add
inc
rol
and
sbb
add
fnstenv
add
add
fisttpll
dec
and
add
cmp
je
push
jbe
dec
cld
sub
add
addl
push
or
orb
pop
inc
loop
cmp
lock
xor
pop
mov
icebp
fistpll
xorb
inc
add
pop
std
pop
sub
sbb
pop
mov
add
les
fucomip
call
cmp
fisubl
fwait
lock
add
sub
sub
popw
rolb
sbb
pushf
dec
mov
sub
pop
or
add
cmp
jmp
pop
scas
icebp
or
push
jo
push
dec
testl
lea
jl
add
adc
les
pop
rcll
add
shr
aam
int
and
cmp
mov
adc
jne
mov
sbb
jle
ret
fmuls
lret
cld
xor
and
add
int3
inc
xlat
je
ficompl
fdiv
stos
xorb
jo
loope
aaa
sti
dec
andb
jecxz
add
and
add
mov
repz
push
out
psrad
mov
rcrb
push
inc
add
rolb
movsl
shlb
imul
out
add
sub
mov
add
fmuls
push
hlt
push
mov
mov
mov
pushf
mov
xor
xchg
cmp
xchg
clc
inc
rorb
out
dec
push
sarl
sbb
int
clc
movl
aad
rorl
mov
mov
jno
scas
data16
add
mov
testl
pop
in
iret
imul
add
pushf
lret
roll
fcom
sub
pop
add
pop
ret
mov
and
test
test
mov
push
inc
push
mov
je
xor
lret
fadds
arpl
sub
add
out
clc
movsb
into
inc
add
fisubl
dec
out
xchg
push
and
loop
and
pop
shlb
int
mov
outsb
sub
aas
hlt
push
es
cld
add
rorb
jne
stos
in
add
je
inc
inc
xor
stc
in
pop
add
mov
sub
iret
lea
mov
pop
cs
add
mov
add
jl
std
add
pop
jne
jmp
or
sub
les
in
adc
or
sub
xchg
dec
mov
popa
cwtl
mov
add
jmp
push
sahf
dec
test
inc
mov
push
mov
in
push
mov
xor
int3
rcrl
mov
add
sub
add
gs
add
dec
lea
mov
and
add
and
testl
push
mov
insb
mov
adc
jmp
cs
pop
aas
or
rolb
mov
mov
addl
loopne
fabs
arpl
cmp
cwtl
je
fdiv
fwait
dec
fisttpll
sub
or
or
lcall
jne
push
jge
imul
in
ffree
call
pcmpgtd
add
jo
add
xor
stos
pop
mov
or
add
sbb
arpl
or
cmp
cld
and
push
add
or
adc
ja
jmp
shrb
bound
xor
sbb
and
add
push
aaa
cmp
ljmp
push
add
sub
add
mov
cs
enter
add
test
pop
stc
mov
add
xor
shl
cmpsb
testb
jl
add
rorb
add
mov
or
add
add
xchg
cmpl
xlat
mov
and
jns
adc
push
and
or
mov
adc
fadds
les
sbb
pop
dec
movl
roll
add
and
pop
xor
inc
ljmp
mov
es
sahf
cmp
aas
rcll
mov
jmp
pop
jno
rorb
xchg
call
rcrl
mov
mov
add
repnz
mov
ds
xor
add
cld
call
std
sub
add
sub
adc
je
dec
sub
add
aam
xchg
sbb
and
sub
pop
add
inc
cmp
add
xchg
daa
ret
or
push
clc
stc
add
add
fchs
movsb
ds
push
add
aas
jmp
fistpl
test
sahf
cs
inc
fnstsw
add
test
add
lods
xor
dec
mov
cmp
or
add
dec
or
popf
add
jo
ljmp
lret
cmp
push
xchg
repz
leave
imul
fiaddl
cmp
sbb
add
cld
mov
dec
hlt
addb
jne
mov
loopne
and
aas
add
add
mov
jo
orb
mov
mov
pop
movsb
std
sub
xor
add
dec
pop
aad
pop
fdivl
push
mov
je
inc
test
or
adc
repz
add
and
add
les
clc
enter
loopne
test
int3
movsb
lods
hlt
mov
mov
cmp
inc
add
jae
inc
cmc
sub
push
xlat
and
add
adc
cmp
xor
sbb
mov
jo
dec
bound
jbe
scas
jns
xorl
jge
testb
and
cmp
js
shlb
add
mov
test
stos
sbb
lods
sbb
jae
mov
lcall
dec
scas
andl
jecxz
push
not
mov
imul
sbb
mov
shl
jae
add
add
loop
cmp
mov
mov
shrl
and
or
cwtl
cwtl
adcb
add
mov
in
add
clc
imul
jmp
add
arpl
les
lret
jmp
stc
add
repz
push
add
out
mov
jo
into
clc
or
ja
inc
add
jge
cmp
cli
jae
andb
jo
call
lds
push
sbb
pop
jb
cmp
dec
pusha
add
add
popf
pop
cld
or
test
sbb
pop
incl
loop
xchg
mov
sarl
add
or
rep
ficoml
add
or
sub
into
cmp
pop
adc
mov
add
lea
inc
add
mov
jmp
int3
leave
addb
xor
xchg
lcall
or
ret
lahf
sub
xchg
add
shlb
add
das
jmp
lds
mov
mov
sub
pop
mov
popa
mov
out
gs
mov
mov
sub
int
fcoml
xchg
add
shlb
xchg
repnz
rcl
mov
clc
add
adc
jle
or
add
add
test
cld
mov
ljmp
sbb
sbb
ret
faddl
mov
inc
inc
inc
lahf
add
arpl
jo
call
mov
pusha
xchg
das
sbb
sbb
or
out
and
call
mov
fstl
pop
adc
inc
add
jne
out
mov
cmp
dec
or
add
outsb
add
cmp
mov
rcrb
xor
adc
lahf
lret
push
lcall
dec
test
jbe
aad
xlat
std
xchg
stos
add
pop
jmp
xchg
fstps
xchg
adc
mov
or
sbb
rorb
orps
mov
lea
cmp
sub
mov
pop
cmc
mov
push
and
add
and
xor
push
add
xor
ja
cli
clc
rolb
sub
in
jge
bound
outsb
incl
aam
dec
in
loop
pop
inc
sbb
fstps
jbe
cmp
and
lods
repz
mov
sbb
mov
pop
mov
add
sub
xor
mov
fwait
add
and
incb
in
outsb
js
inc
sbb
pop
sbb
leave
pop
jne
add
lea
pop
or
int3
push
xor
sahf
push
lahf
cmp
inc
add
inc
inc
inc
inc
dec
jo
add
dec
dec
dec
dec
push
push
add
push
push
push
push
movb
bound
fs
push
add
outsl
jo
jb
jae
je
jbe
js
jp
cwtl
out
xor
xor
ss
cmp
cmp
add
cmp
sbbb
pop
jge
cmp
sub
and
daa
or
or
es
xor
add
paddusw
and
xlat
and
in
or
mov
add
and
add
aad
jo
out
mov
enter
cwtl
in
mov
sub
cld
cwtl
xchg
sbb
adc
rclb
push
sub
and
add
data16
in
sbb
sbb
mov
inc
add
aam
adc
daa
cld
rorl
nop
xor
dec
or
inc
lock
xor
add
push
lock
lahf
inc
and
mov
jle
loope
shrb
add
sub
faddl
push
call
push
jl
roll
ret
pop
loop
loope
in
outsb
and
inc
inc
in
jle
jl
int3
jbe
add
push
sbb
add
leave
pushl
xchg
lea
mov
add
fists
sbb
subb
sahf
out
shrb
inc
push
add
adc
into
jnp
xchg
dec
add
in
fs
xor
or
je
fildll
mov
aam
pop
pop
imul
inc
das
add
ss
jo
fwait
add
push
mov
lds
test
aad
sbb
push
sbb
lods
sub
fdivrs
mov
je
fisubrl
dec
xchg
movsl
lds
hlt
push
lock
les
or
mov
mov
jl
test
aam
fmuls
lcall
lods
testb
mov
push
xor
aam
add
adc
add
ss
dec
imul
inc
xchg
loope
pop
pop
scas
dec
mov
shll
test
add
roll
mov
add
test
scas
inc
sbb
mov
lret
cmp
aas
mov
and
xchg
sub
pusha
sub
aad
mov
pop
cwtl
loopne
jle
popa
jne
sub
add
pusha
jp
hlt
add
movsb
in
pop
lock
orb
hlt
test
lcall
imul
cs
xor
inc
jl
dec
out
test
orb
incl
cmp
jne
inc
cld
rcrb
pop
xchg
aas
adc
jl
inc
lcall
adc
imul
adc
sbb
les
cmp
sbb
addb
clts
dec
jne
inc
jge
push
je
add
and
cmp
add
vcmppd
inc
cmp
testl
inc
test
fsts
movsl
add
pop
out
add
mov
adc
mov
cli
mov
mov
pop
add
add
scas
jp
iret
sub
push
adc
push
movl
gs
xor
add
xchg
lret
inc
fdivs
add
push
enter
je
ficoms
sub
mov
fsubs
push
jne
cmp
inc
add
xlat
shlb
insb
movsl
pop
mov
adc
add
stos
jb
lock
cmp
in
hlt
pop
add
rcrb
cmc
scas
cmp
out
add
js
hlt
rolb
xchg
into
adc
arpl
adc
pusha
mov
push
les
ret
jne
lcall
cmp
mov
fbstp
inc
xorl
xchg
add
or
pop
sti
data16
inc
repz
ret
clc
in
xor
add
jae
call
imul
add
je
rolb
jne
or
mov
in
arpl
add
dec
les
cltd
and
push
jge
test
jnp
xor
in
jno
jg
cmp
pop
xchg
adc
mov
dec
cmp
push
push
sub
xchg
int
sbb
gs
dec
push
imul
sub
popl
test
add
sub
cmp
pop
fstpl
push
jne
rclb
sbb
jae
mov
jne
stos
mov
add
mov
xchg
ljmp
inc
dec
fisubrs
jne
data16
inc
and
inc
loop
enter
inc
mov
dec
fcomi
add
add
stos
test
push
dec
add
inc
xchg
call
mov
inc
test
outsl
and
xor
add
aas
inc
test
mov
pop
mov
xchg
add
rolb
mov
arpl
fbstp
add
stos
fcoms
pop
or
dec
bound
lds
add
cmp
lahf
arpl
call
aas
pop
or
pop
movsb
iret
data16
add
inc
incl
inc
popa
sub
inc
mov
mov
ret
test
xor
xor
or
ljmp
lahf
add
out
add
mov
sub
jno
add
cld
adc
and
cmpb
nop
push
test
xchg
dec
pushf
add
xchg
in
repnz
cmp
fstpl
sbb
add
data16
test
push
je
xor
mov
pop
inc
fs
push
add
pop
popa
nop
or
add
cmp
lds
adc
mov
js
loopne
xchg
push
stos
adc
rclb
pop
lcall
add
int
cltd
call
or
xchg
inc
dec
call
rorb
sbb
mov
mov
push
nop
bound
xchg
add
xor
les
cli
addb
mov
and
add
addr16
nop
imul
pop
clc
fwait
sub
mov
out
lea
dec
rclb
bnd
bnd
sub
mov
inc
cmp
jb
shl
lock
pop
cld
jbe
inc
push
in
out
mov
scas
or
stos
add
mov
leave
push
mov
add
xchg
repnz
add
lcall
scas
add
or
popa
add
data16
xor
jae
jns
pop
mov
add
outsb
xor
cmp
sub
test
and
pusha
push
push
cmp
dec
adc
add
shlb
mov
jo
inc
repnz
rolw
popa
jmp
fdivs
loopne
sbb
jl
add
into
add
cmp
rcrl
pop
not
clc
iret
jge
rorb
mov
add
daa
mov
lock
repnz
loopne
fidivrl
fdivs
mov
add
inc
push
jno
loope
and
add
sbb
adc
dec
scas
psubusb
xchg
aam
stos
inc
jne
add
xchg
add
jp
jo
pop
movsb
cli
add
or
adcb
lods
and
call
mov
xor
cmc
add
repz
mov
or
xchg
mov
cmp
lods
cmpl
push
or
idivb
add
jmp
inc
clc
addl
adc
jg
loope
jl
add
int3
sub
add
in
ret
mov
dec
add
inc
mov
sarb
mov
rcrb
adc
add
add
shl
cmpsb
mov
imul
shrl
mov
dec
lods
test
std
sub
xchg
add
adc
cmp
xchg
inc
add
pop
lea
pop
jo
gs
scas
adc
mov
call
fnstcw
orb
nop
push
xor
mov
mov
mov
xor
dec
push
pop
call
add
xor
das
push
into
push
repnz
lds
mov
testl
lret
lahf
cmp
dec
jnp
adc
dec
movsb
and
push
add
cmpb
jb
push
decb
cmp
aas
xchg
add
mov
push
push
rolb
inc
in
pushf
add
fdiv
repnz
loop
xchg
scas
inc
or
and
push
orb
push
adc
adc
lcall
xchg
mov
mov
fiadds
sub
mov
inc
cmp
aaa
add
mov
loopne
sbb
jne
adc
ficoms
pop
rep
sub
add
cltd
scas
jno
jae
add
mov
jne
add
cld
pop
aas
std
les
in
add
lret
dec
xchg
push
xchg
out
cmp
subl
mov
mov
mov
xor
and
leave
ret
nop
dec
pop
cs
mov
adc
cmpb
mov
mov
add
push
sub
sub
addl
add
add
or
mov
fmuls
loopne
test
adc
imulb
repz
call
test
add
shlb
fdivs
xchg
add
cltd
es
or
js
nop
or
mov
sti
mov
lcall
mov
dec
xchg
pop
add
or
call
lcall
enter
cmp
xor
loop
adc
mov
lods
sbbb
repnz
popl
dec
push
fistpll
ds
add
popa
jl
cltd
hlt
add
mov
lods
add
or
or
and
jmp
mov
and
dec
cli
enter
add
loop
mov
mov
xchg
add
lods
dec
sub
test
mov
test
sub
xchg
sub
inc
fadd
inc
mov
dec
cmp
sbb
sub
add
cld
and
movsb
sbb
testb
adc
xchg
mov
inc
add
out
inc
enter
add
test
mov
in
push
lods
add
dec
and
pushl
add
push
push
push
dec
hlt
or
movsb
xor
in
pusha
testb
xor
loopne
loope
pushf
jbe
clc
and
mov
add
sub
or
daa
rolb
sub
ds
mov
fmul
add
mov
adc
or
sub
rcl
mov
push
dec
mov
pop
iret
add
adc
sbb
jmp
or
add
dec
pop
shlb
inc
sbb
leave
aad
push
aam
ret
push
ror
test
sub
addl
inc
lock
pop
loope
std
repz
shlb
les
or
inc
test
inc
cmp
pop
cmpsb
lcall
mov
pop
add
pop
push
adc
rorb
dec
imul
insl
jae
or
lods
add
call
mov
add
push
stos
fnstcw
inc
sbb
in
int3
cmp
push
pop
pop
push
rcll
jp
repz
shr
dec
add
adc
mov
call
loope
sbb
mov
imul
test
daa
and
and
add
inc
test
cltd
mov
jbe
sbb
js
push
orb
cwtl
out
sbb
xchg
and
mov
xlat
imul
add
adc
int3
dec
cld
dec
sub
jmp
add
hlt
inc
or
cmp
add
shlb
add
fidivrl
shll
mov
xchg
sub
jne
sti
je
iret
adc
pop
mov
out
mov
and
mov
cmc
xor
mov
sar
cmp
dec
add
rclb
adc
lock
sar
dec
sbb
jae
add
mov
add
and
sarl
ret
inc
xchg
mov
and
mov
push
xlat
adc
je
sub
ljmp
and
mov
testb
cli
mov
faddl
add
xchg
or
add
and
das
mov
pusha
pushf
cmp
cmp
incb
idivl
lds
addr16
ret
rcll
xchg
add
push
mov
ss
sub
pop
mov
inc
cs
frstor
lds
rorb
push
inc
sbb
adc
jae
or
add
mov
mov
ror
add
mov
cmp
add
test
inc
dec
push
in
inc
pop
add
sub
ret
cs
test
mov
or
add
add
mov
xor
cmovge
mov
cmp
and
mov
jo
aam
dec
add
lock
add
xlat
adc
mov
int
sub
insb
cld
in
add
mov
es
mov
mov
lods
mov
rorb
lret
add
push
fcoms
lods
pushf
dec
adcl
dec
sbb
adc
ficompl
xlat
roll
mov
outsl
pop
jno
cmp
sub
push
add
and
adc
insl
sarb
add
jge
jg
movsb
sbb
push
push
adc
or
add
lods
adc
enter
data16
push
inc
clc
hlt
lcall
push
jbe
dec
or
pop
push
data16
repz
pop
push
and
add
call
ret
mov
mov
jp
jle
push
sbb
or
or
inc
inc
into
xchg
mov
push
or
dec
xchg
call
clc
push
aam
or
cmc
push
aas
pusha
dec
cmpb
mov
pop
incl
push
xlat
xor
inc
add
shlb
add
inc
movsl
jmp
adc
lock
cmp
and
mov
add
mov
dec
rorl
les
repnz
push
sub
jns
popf
mov
mov
add
je
cmp
and
jge
add
mov
and
mov
add
inc
stc
jmp
mov
and
in
sub
add
add
push
sbb
call
add
push
add
mov
xchg
ss
push
int
std
test
mov
mov
jp
add
mov
sti
inc
in
adc
daa
bound
aas
adc
add
push
repz
add
mov
xchg
push
clc
mov
roll
cli
and
push
addl
inc
or
loope
clts
xor
or
dec
pushf
imul
jle
add
pop
add
leave
add
dec
fldl
add
jg
mov
jne
imul
push
add
and
add
pop
test
add
test
pop
or
sldt
icebp
adc
add
pop
mov
lret
sub
inc
insb
popa
jae
add
leave
sbb
or
sbb
jge
fmull
dec
add
xchg
add
int3
mov
push
rclb
stc
lahf
push
add
shrb
cmpsb
ret
mov
xchg
pop
in
jl
and
cwtl
cltd
xchg
out
aam
shufps
pushf
add
sarl
add
sub
lahf
stos
outsl
cmpsl
add
lods
sahf
and
in
xchg
daa
add
call
dec
add
sub
adc
scas
imul
lea
sbb
and
orb
cs
aam
sbb
push
rolb
add
jnp,pt
add
and
clc
mov
lea
out
xchg
xchg
cmp
addr16
cmp
sbb
add
mov
sbb
xchg
pushf
add
jns
xchg
mov
sub
and
inc
fcmovbe
mov
clc
stc
cmovge
addr16
mov
bound
cs
jne
in
add
pusha
nop
pop
add
test
fsubrs
xchg
add
clc
xchg
test
mov
ret
test
jne
or
loop
mov
push
mov
les
mov
push
pusha
add
es
ja
call
mov
ret
push
fldenv
into
sub
mov
in
dec
mov
sbb
push
cmp
scas
adc
pop
je
dec
fsts
cmp
adc
cld
add
or
mov
mov
xor
cmp
rorl
ja
push
fs
shlb
xchg
clc
pop
movsl
mov
test
test
sbb
or
pop
inc
aas
push
sbb
mov
jns
adc
pushf
xor
cmovno
sar
mov
ret
push
or
flds
scas
add
sbb
mov
aas
cmp
lahf
mov
adc
push
push
in
and
mov
out
sbb
cmc
arpl
shll
dec
mov
pusha
add
movb
add
jns
pop
push
cmp
xchg
lret
loopne
cltd
and
mov
pop
jmp
xchg
jecxz
fists
fidivl
lret
hlt
lea
jl
dec
sbb
inc
add
arpl
shll
les
mov
sub
inc
sbbl
ret
repnz
pop
jge
xor
sarb
icebp
int3
mov
pop
mov
jmp
add
sub
add
cmp
stos
cwtl
leave
inc
pop
add
sub
or
cwtl
or
adc
and
inc
sbb
popfw
adc
or
ret
test
inc
push
or
push
push
sub
adc
or
mov
cwtl
xchg
push
mov
cmpsb
or
aas
mov
test
ffreep
add
nop
lds
or
add
jnp
cmp
add
push
sub
fldl
add
pop
mov
lods
loop
or
jge
pop
add
or
xor
pop
jae
add
lds
and
test
aam
mov
add
sub
add
jbe
mov
mov
add
ja
movsl
inc
dec
cmpsl
inc
add
mov
add
xchg
mov
add
xchg
hlt
sub
notb
push
adc
lret
call
sti
jnp
sar
pop
divb
inc
cli
inc
hlt
push
push
add
or
scas
jno
call
or
mov
add
lds
dec
inc
inc
add
dec
xor
clc
and
notl
xor
dec
xor
push
sub
cmpb
xchg
mov
add
adc
leave
adc
pmullw
xor
cmp
jb
dec
or
and
ret
popa
add
jmp
addl
lahf
inc
push
call
je
pop
sub
test
aad
or
jnp
sbb
test
or
icebp
and
xor
jmp
scas
lahf
inc
or
ret
sbb
jl
sub
jne
xchg
cmp
sub
push
mov
push
xchg
or
sbbl
je
or
test
adc
sbb
in
push
and
cld
jl
sbb
adc
jae
push
add
jge
adc
sub
lret
fisubl
cwtl
jns
dec
and
add
outsl
push
movsb
stos
orb
adc
lahf
mov
out
jne
loope
xor
dec
push
add
aad
inc
add
xor
or
mov
lret
mov
test
aaa
nop
sbb
add
movb
lds
jp
add
or
push
adc
add
xor
push
jnp
mov
push
incb
ret
scas
test
sub
pop
aad
and
add
or
add
pushl
or
add
add
inc
sbb
leave
cmpsb
sub
movb
das
loopne
mov
add
addr16
xchg
and
sti
loopne
mov
test
inc
lahf
int
cmp
mov
dec
sbb
or
push
mov
cmp
mov
imul
cli
jne
shlb
in
adc
adc
cmc
jb
xlat
ss
ror
add
outsb
lret
lret
movsb
cltd
add
adc
push
or
or
or
dec
adc
and
dec
add
add
in
pop
add
lock
rorl
data16
sbb
dec
rolb
lret
mov
insb
pmullw
xor
decb
fiadds
adc
int3
cld
in
je
push
sbb
cmp
and
add
int3
clc
dec
leave
loopne
pop
mov
imul
push
pop
jo
data16
loopne
pop
pop
dec
push
add
imul
loope
call
in
adc
sub
inc
fcmovu
rcrb
fs
out
push
xchg
cmp
roll
sbbb
loopne
add
aas
jmp
mov
or
ret
xor
mov
add
dec
sarb
adc
stc
popa
bswap
push
pop
cmc
or
fcompl
sub
push
add
xchg
jmp
cmp
push
mov
aas
rcl
leave
add
jnp
outsl
inc
and
push
and
fistpl
add
sti
add
popw
and
push
or
add
push
push
pop
dec
sbb
or
add
jo
adc
mov
ds
mov
jmp
aad
call
cmp
add
push
stc
shl
movl
pop
sbb
and
fimuls
nop
xchg
and
or
std
sbb
jp
ffreep
pop
add
cmp
int3
call
cmc
lea
stc
and
jmp
or
and
repz
sbb
adc
out
adc
jp
add
xchg
into
cmp
arpl
jmp
or
jae
cmp
adc
inc
leave
les
xchg
bound
inc
sbb
xor
sbb
aam
jae
and
xchg
repnz
pop
js
ja
lods
loop
or
mov
xchg
add
out
xor
adc
cmc
and
cmp
adc
xorb
lea
mov
call
std
adc
jne
subb
lds
cltd
jns
pop
jp
scas
jg
inc
xchg
out
jg
ss
push
add
sub
and
pop
bndstx
mov
push
and
aam
enter
mov
lea
cmpsl
or
js
add
test
stos
and
scas
add
push
dec
movsb
les
lret
add
push
and
cmp
dec
adcb
fiaddl
jp
dec
out
xchg
test
xor
enter
add
and
inc
leave
sub
sbb
xchg
sbb
xor
cmp
pop
test
and
or
adc
js
mov
std
repnz
xchg
hlt
mov
add
aad
fildl
cmp
sbb
mov
call
movsl
cltd
or
int
or
jmp
add
int
sbb
sub
sub
stos
xor
add
push
call
mov
jmp
adc
jl
bound
pop
push
and
adc
int3
cld
cmp
jmp
enter
ficomps
pop
into
test
sub
mov
cmp
adcb
mov
xor
rolb
pop
inc
add
enter
cmp
mov
mov
add
ret
clc
xor
inc
add
add
xchg
mov
loop
js
mov
adc
out
add
push
pop
dec
or
cmp
adcb
mov
imul
in
in
xchg
dec
dec
loope
das
mov
inc
mov
nop
rorl
inc
orl
add
fsubl
add
adc
enter
lock
ret
pop
pop
mov
pusha
cwtl
sbb
fdivr
add
stos
inc
mov
push
add
sub
xchg
inc
lock
js
loopne
add
movb
inc
repnz
adc
or
and
jp
push
mov
xor
call
pop
push
jbe
roll
sbb
sbb
or
adc
cmc
xorb
inc
mov
repnz
push
aad
jmp
enter
sbb
fldcw
add
outsb
xchg
push
in
add
pop
fistps
dec
xor
std
cmp
push
cs
and
fildl
dec
test
add
xor
fistpll
sub
addb
pop
jl
mov
push
ljmp
jge
dec
push
xor
push
stos
mov
roll
ficoms
inc
mov
movsb
xor
int3
call
roll
sbb
cmpb
sti
std
xor
or
push
mov
xorb
cltd
dec
cmpb
jno
add
lahf
lods
andb
and
and
imul
sbb
add
inc
iret
clc
lahf
cmpsb
stos
outsl
add
lock
and
repz
ret
add
les
orl
iret
cmc
pop
add
mov
push
add
inc
rcrl
and
dec
movb
jnp
mov
imul
movups
test
mov
sbb
rcll
mov
push
mov
or
imul
sub
scas
negl
jp
mov
pop
mov
cmc
out
out
mov
test
sub
mov
dec
inc
in
adc
or
mov
and
mov
inc
ret
pop
arpl
add
cwtl
std
sahf
jg
jge
cmp
cmp
mov
and
loope
or
aad
push
movsb
add
idivb
add
cld
sub
and
inc
add
or
js
adc
mov
cmc
cli
push
add
add
mov
or
dec
adc
dec
add
or
jmp
and
sub
cmp
add
in
or
push
in
add
pop
adc
sbb
sbb
jb
add
inc
add
push
scas
hlt
inc
out
fadds
add
pop
es
add
sti
shl
sub
nop
dec
add
push
inc
mov
loopne
adc
int
and
inc
aam
cmp
inc
jle
pop
and
adcb
jne
add
and
or
adc
inc
push
js
adc
test
les
add
inc
jae
xchg
mov
push
or
clc
mov
add
sbb
or
outsl
addr16
stos
mov
jns
add
add
jge
sub
jnp
out
cmp
ljmp
rclb
push
mov
sarb
lock
sbb
gs
or
pop
cmp
cmp
and
imul
pushf
sub
orl
add
pop
dec
or
mov
inc
ljmp
mov
adc
test
or
lea
pusha
call
in
bswap
sub
jo
sub
mov
adc
fwait
jle
add
popa
add
or
daa
add
mov
push
mov
cmp
jo
xor
out
aam
jo
cmp
add
add
xchg
cmp
and
cmp
aam
mov
xchg
stos
jmp
cltd
sub
out
adc
aad
les
cmp
jl
inc
add
hlt
xchg
or
gs
cmp
aad
push
inc
add
sub
inc
sbb
mov
mov
sub
dec
xchg
add
sub
testb
sub
add
xchg
stos
orl
inc
rcrb
mov
cmovb
adc
xchg
rolb
jmp
lock
lcall
push
add
pop
pop
gs
mov
mov
add
test
call
sub
addr16
cmp
hlt
or
rcrl
and
fsub
lret
scas
sbb
outsl
and
mov
cmp
fs
sub
incb
adc
fs
and
add
cwtl
roll
fnstenv
mov
movsb
cli
and
pop
add
push
idiv
push
add
mov
add
cmpb
cli
mov
xor
mov
push
rclb
xchg
mov
sub
fwait
mov
in
mov
hlt
jmp
cwtl
das
add
aam
cmpsl
mov
push
inc
add
sbb
pop
push
loopne
push
pop
add
jl
dec
cmpsb
aas
cld
test
call
ud2
and
movsb
mov
clc
add
dec
shrl
loop
add
adc
js
cmc
jae
jmp
dec
sub
pop
xchg
test
add
shlb
dec
stc
jg
sbb
sub
nop
jge
sbb
int3
inc
dec
incl
adc
cmp
decb
xlat
mov
sub
jecxz
leave
fidivl
pop
sti
sbb
cvtpi2ps
mov
mov
inc
pop
sbb
mov
sbb
pop
sbb
out
fistpl
lock
clc
nop
out
loop
and
sbbb
rcrb
cmp
or
sub
pop
dec
mov
dec
cmp
addb
bound
inc
push
inc
xor
push
push
sbb
xor
jno
les
aam
aam
inc
cmp
cmp
test
fdivl
xor
jmp
add
sub
push
fmull
stc
add
outsb
into
cmp
aaa
adcb
lods
aam
lods
mov
cli
insb
mov
aaa
dec
xor
testb
push
sbb
repnz
iret
hlt
add
fs
mov
mov
cmp
and
int
push
and
fstl
jle
xor
or
jge
mov
iret
add
adc
and
bound
aaa
and
adc
out
lret
testb
push
mov
push
test
add
pop
cmp
aam
bound
mov
clc
es
les
in
pop
cmc
xchg
hlt
gs
push
xor
or
sub
jle
lock
cmp
or
sub
aas
adc
stos
and
sub
pop
inc
xchg
pop
mov
subb
or
adc
mov
rorl
pop
jmp
sti
call
push
xchg
dec
add
lret
and
cmp
pop
aas
dec
btsl
rcll
or
xchg
in
push
addr16
add
or
loopne
lahf
add
sbb
cwtl
shrb
add
andb
jl
aas
mov
stos
or
xor
xor
loopne
push
push
cmp
test
add
xor
mov
loopne
cli
pop
mov
faddl
mov
lret
lock
or
lea
jo
adc
jle
sbb
push
arpl
aas
adc
and
leave
push
stc
fildll
push
inc
sbb
add
push
xor
add
add
sub
mov
cmc
popa
lods
fcmovb
std
inc
lods
pop
xchg
lret
lahf
ffreep
sbb
jmp
cmpsb
inc
out
add
loop
lret
add
and
cli
add
fdivrl
in
add
pop
jmp
cmc
xor
mov
jecxz
xchg
lahf
cmp
cltd
jns
out
jae
aam
shrl
or
add
out
and
out
cmp
call
push
push
fsubrs
jnp
pop
ret
inc
mov
aaa
imul
adc
and
jecxz
add
scas
sbb
and
add
and
les
add
in
enter
cmp
mov
loop
jmp
inc
test
cld
lods
scas
hlt
or
loop
iret
push
hlt
and
cmpxchg
mov
or
in
cmp
ja
add
xlat
pushf
or
adc
sbb
loope
and
mov
sbb
fidivrs
jl
mov
testl
adc
shlb
test
and
add
ds
aas
xor
add
mov
add
rolb
add
push
add
add
mov
xor
add
mov
outsb
jb
dec
hlt
aaa
cmp
jmp
das
sub
mov
add
push
addr16
cmp
and
jp
fstps
or
xchg
jnp
add
lds
dec
sub
cmp
shlb
push
into
mov
lea
adc
mov
mov
std
jmp
xchg
or
clc
jg
and
sarl
bound
pop
xchg
fdivrs
sub
rol
sub
pop
add
insb
add
or
sbb
sub
xor
cmp
nop
cmp
add
imul
push
jmp
adc
and
hlt
ret
daa
test
pop
jl
dec
adc
and
pop
pop
add
cld
inc
out
mov
or
inc
cld
cmp
add
aas
dec
adc
ljmp
loopne
mov
xor
cmp
push
aas
dec
pop
xor
and
mov
mov
push
cltd
das
jo
ljmp
add
loopne
mov
or
movsb
jo
adc
jmp
pop
pop
add
mov
bound
cmpsb
inc
xor
ds
pop
outsl
nop
sub
mov
and
aas
xchg
add
cmpsl
fldl
mov
jmp
add
test
lret
inc
cmpsl
in
sub
and
mov
lds
inc
inc
cmp
arpl
rol
jecxz,pn
nop
sbb
mov
push
adc
in
cld
xor
popa
js
and
enter
xor
inc
cmpl
dec
aam
or
cmc
sbbb
aaa
pop
cmp
adc
mov
ret
mov
push
jbe
add
mov
jb
idivb
add
cmp
fbstp
dec
xor
mov
sbb
repnz
or
mov
lret
push
aam
ret
and
repnz
jne
orl
mov
out
scas
inc
xchg
add
subb
loopne
mov
bnd
push
das
out
mov
adc
mov
mov
lcall
daa
add
xchg
rorb
add
out
sub
jecxz
mov
push
loop
inc
lcall
lock
jo
insl
add
loop
xor
adc
xor
ret
jle
push
push
mov
mov
aas
pop
jp
xchg
out
fdivs
pop
shll
ret
pop
mov
lsl
sahf
and
cwtl
inc
test
add
dec
jecxz
aas
sub
push
adc
mov
cs
mov
adc
cmpsl
nop
or
shlb
iret
jge
adc
push
dec
add
lea
mov
xor
in
std
or
repnz
push
xor
data16
xor
mov
repnz
fs
cmp
jo
roll
div
adc
add
ds
outsl
xor
iret
xor
adc
psadbw
jns
push
in
add
mov
and
push
add
xrelease
push
xor
outsl
pop
sbb
inc
mov
hlt
stc
stos
lock
mov
xchg
xor
dec
hlt
test
out
sub
add
dec
inc
test
adcb
add
dec
loope
cmp
ss
cwtl
lret
add
jno
hlt
icebp
fidivrs
jmp
mov
or
cmc
pop
adc
adc
movsb
push
or
mov
andl
add
and
cmc
xchg
and
add
adcb
sbb
sysenter
adc
or
or
cmc
pop
xchg
icebp
rcrb
sbbb
stc
sub
mov
shrb
cltd
icebp
jae
add
into
ja
mov
xchg
add
outsb
mov
idivb
ss
sub
and
in
stc
pop
xchg
out
and
and
sarb
jnp
packuswb
xchg
cli
inc
xor
xor
mov
or
cld
in
cmp
lret
lds
adc
adc
xlat
push
and
or
pop
fmul
mov
jle
add
push
dec
fldcw
popa
sbb
enter
ret
clc
sub
lods
call
adc
nop
push
xorl
add
jp
xlat
push
in
and
stc
add
cmp
cmp
test
out
push
dec
je
pop
rcll
push
add
cmp
add
add
adc
adc
xlat
mov
sbb
push
xor
lret
dec
hlt
push
nop
pop
in
or
rol
addb
and
hlt
push
mov
xor
jo
pop
push
push
addb
push
daa
mov
push
push
mov
add
leave
cmpl
xor
jge
dec
mov
ss
add
jnp
stc
cmp
inc
das
insb
and
pop
mov
nop
mov
scas
xor
loopne
enter
rcl
and
mov
sbb
arpl
mov
incb
mov
nop
mov
mov
into
gs
aad
dec
fimull
inc
sbb
mov
pop
cmp
adc
out
and
push
mov
cs
xor
add
jp
test
cmpl
add
repnz
sbb
push
or
adc
xchg
js
add
clc
lret
jo
or
fcomp
aam
lods
xor
test
inc
xor
xchg
add
pop
mov
push
notb
sbb
into
push
dec
fs
out
sbbb
mov
mov
jne
mov
repz
xchg
call
cli
push
cmpb
xor
cmp
add
push
into
cld
mov
xor
fisubs
stos
sub
sbb
xor
in
cmp
cmp
nop
inc
andb
inc
dec
cld
dec
add
push
adc
nop
pop
pop
aad
cmp
cli
add
push
enter
sub
clc
jp
hlt
mov
cs
mul
push
lock
add
mov
mov
xchg
lock
insb
push
jo
add
fnsetpm(287
cmp
les
sbbb
adc
aam
fs
bound
jb
mov
call
aaa
add
cwtl
push
pushf
rol
stos
and
test
test
out
and
test
cli
jnp
push
add
ljmp
or
mov
outsl
jl
bound
loop
cmp
cwtl
out
push
inc
add
cmp
push
in
fwait
sbb
jmp
and
sub
movsl
inc
loop
mov
loope
sar
xor
lock
cmc
push
mov
fs
cmp
test
add
jecxz
xchg
shrb
and
and
fsubr
adc
jg
enter
lret
pop
loopne
mov
in
jp
lea
orb
pushl
sbb
in
mov
lock
hlt
pcmpeqb
adc
bound
lret
cld
xor
or
add
jmp
sub
sub
mov
cmp
pop
xchg
or
push
mov
adc
and
sbb
clc
and
sub
inc
add
cmp
mov
jno
aas
push
add
inc
sarb
and
mov
pop
aaa
add
add
add
sbb
aam
add
aas
xorl
mov
or
roll
ljmp
dec
and
push
push
add
call
xor
loop
fsubl
add
data16
cmp
add
fistps
rol
add
dec
jne
add
sbb
add
or
or
je
addr16
xor
or
mov
xor
arpl
or
add
lock
pop
adc
mov
pop
jmp
xor
pushf
addb
in
cmp
out
add
add
out
push
repnz
cmp
rol
sub
shrb
or
xadd
push
or
loope
nop
lret
loopne
jno
add
rorb
or
std
fdivr
sbb
sbb
fprem
sbb
push
pop
fildl
push
xchg
nop
filds
fistpl
loopne
sbb
aam
add
inc
adc
orb
push
inc
mov
iret
adc
adc
adcb
roll
adc
lock
xorb
xchg
xor
inc
xor
xchg
enter
aaa
add
cmp
add
cld
add
inc
aas
ret
mov
inc
mov
cmp
loopne
add
stc
cmp
add
fstps
jmp
sub
cld
rolb
subb
ljmp
jne
sub
in
jo
cmp
xchg
add
add
shll
mul
adc
loopne
int
pop
shlb
and
scas
mov
scas
mov
addl
sub
add
gs
inc
movsb
subb
lods
inc
add
add
inc
scas
mov
imul
imul
mov
js
mov
add
mov
inc
std
mov
fdivrs
jo
add
mov
sbb
shlb
jbe
pusha
ja
mov
mov
jbe
sbb
xchg
add
inc
mov
push
and
nop
add
rclb
inc
xchg
call
push
cmp
add
xchg
adcl
pop
setnp
sbbl
fwait
loopne
add
pop
inc
cwtl
fisttps
lahf
mov
mov
mov
xchg
dec
add
inc
mov
inc
roll
xchg
inc
add
jns
inc
mov
roll
data16
cmp
test
nopl
jecxz
in
pushf
mov
loop
je
add
push
popf
mov
shlb
jns
add
or
add
push
push
jge
adc
cpuid
sub
loopne
cmp
pusha
pop
fcompl
outsl
bt
hlt
rclb
add
mov
ret
inc
jp,pt
lar
call
std
scas
add
mov
jle
insb
jg
add
xchg
jo
enter
je
jbe
cmp
aam
hlt
mov
mov
mov
mov
sahf
mov
xor
xor
add
mov
bound
adc
jmp
test
stos
push
divb
jb
and
daa
cmp
add
jae
in
mov
cmpsl
sar
mov
leave
add
iret
test
pop
mov
imul
add
jne
pop
adc
out
inc
pop
lods
xchg
les
leave
popa
push
icebp
hlt
or
cld
or
rolb
mov
cmp
jae
incl
int
add
sub
mov
add
or
push
add
adc
call
cmp
xchg
jae
sbb
jne
aam
add
jl
inc
aas
push
lea
cmp
repz
and
xchg
xchg
push
data16
add
pop
loope
cmp
inc
add
add
mov
out
js
pop
lret
scas
push
xchg
cmp
xchg
int3
cmp
or
in
add
shrb
or
aas
jno
je
xchg
mov
push
in
mul
add
add
scas
add
fdivp
not
and
and
cs
add
pop
push
ret
decl
add
add
push
and
sbb
clc
xchg
add
icebp
mov
rorl
inc
sbb
or
sbb
repz
xchg
cmp
into
roll
adc
cmpl
xchg
cmp
sarb
popf
sbb
adc
outsl
add
stos
mov
pusha
mov
xchg
lock
sbb
mov
and
add
pop
adcb
movsl
mov
xchg
js
xor
sub
popl
jo
and
cmp
dec
add
dec
jmp
loop
push
loope
add
repnz
push
cli
and
sbb
dec
xchg
stc
push
or
inc
sub
and
movsl
aas
sti
bound
inc
push
or
clc
sbb
dec
aad
jne
sub
sub
dec
cmp
inc
mov
add
test
add
cmp
fscale
or
and
or
cmp
mov
cmp
or
or
xor
add
pop
testl
repz
imul
add
sub
lock
mov
lods
pop
push
add
repnz
xor
or
xchg
push
mov
pop
fs
stos
leave
cmp
pop
cwtl
and
jb
sub
dec
push
mov
xchg
sub
inc
test
popf
xchg
stc
cmpsl
or
adc
jge
jecxz
push
xchg
jno
loopne
xor
mov
jg
xor
or
or
aam
inc
add
icebp
mov
sbb
pcmpgtb
insb
arpl
lock
or
jg
das
xlat
rclb
movups
and
jmp
inc
mov
adc
push
lock
or
sub
add
and
lock
mov
in
mov
and
and
js
and
fadds
push
or
loop
cld
loop
and
adc
popf
mov
sbb
add
mov
dec
mov
out
dec
inc
push
jg
jbe
cmp
dec
add
rol
leave
je
add
inc
pop
lods
dec
or
cli
add
int
add
or
add
cmp
add
jo
sbb
je
nop
xor
in
or
cmpsb
test
push
mov
adc
jmp
sbbb
xchg
inc
aas
jbe
add
subb
lea
and
xchg
fcoms
jae
mov
and
add
lret
push
or
xor
and
cmp
mov
inc
adcl
push
push
push
add
adc
or
jo
loopne
lret
add
sub
sahf
pop
adc
push
mov
push
pop
mov
and
pop
stos
cli
mov
dec
lret
dec
addb
push
or
nop
sub
pop
mov
add
fbstp
add
sti
push
stc
lret
jp
lods
add
decl
sbb
cwtl
fisubrs
add
enter
pop
jns
lods
fsubs
movsb
jnp
push
and
mov
in
pop
xchg
pop
jbe
push
test
sarb
push
push
mov
push
or
jns
lret
cmc
mov
mov
rol
xor
rolb
xor
icebp
and
mov
shl
insl
aam
xchg
push
inc
add
push
push
data16
nop
push
dec
cmp
add
mov
cmp
in
sbb
adc
jnp
pop
add
sbb
scas
jne
push
int3
sub
add
dec
xor
repz
pop
pop
add
jecxz
mov
jmp
add
ror
adc
dec
mov
iret
cmp
jp
inc
je
out
imul
adc
fnstenv
push
hlt
and
mov
push
sbb
pusha
add
sar
jns
add
mov
neg
pop
gs
popa
aaa
aad
push
shrl
stos
mov
mov
push
mov
lods
add
and
mov
pop
jbe
add
jl
in
mov
add
in
or
imul
jl
push
mov
mov
add
jne
out
xchg
daa
pop
mov
outsb
mov
lods
push
push
mov
std
lea
mov
mov
and
popa
xor
push
xor
pop
mov
ret
mov
testb
add
add
mov
push
lods
or
test
add
add
add
popf
rcrb
pushl
dec
push
push
mov
dec
push
sbb
stos
adc
add
mov
loopne
push
add
push
or
inc
xor
psrld
and
mov
sbb
jl
sbb
adc
mov
mov
and
enter
and
add
aam
add
mov
sbb
ss
or
inc
jb
add
push
or
push
fcompl
push
in
shlb
add
sbb
cmpl
jle
lret
fs
lea
rcll
add
add
or
or
add
movb
sub
add
push
pop
cwtl
inc
out
adc
add
loope
cmpsl
and
movsb
in
jmp
jle
push
pop
call
inc
add
xchg
ficompl
ja
add
shrl
or
mov
push
pop
push
mov
movsl
add
pop
mov
dec
adc
add
mov
add
rclb
jno
mov
daa
adc
xchg
stos
push
dec
push
dec
fsub
pop
sub
jge
push
mov
add
roll
xor
das
fstpl
hlt
jns
adc
cwtl
es
arpl
repz
pop
inc
mov
add
pop
sub
push
inc
push
push
add
scas
push
pop
cmp
dec
jbe
add
mov
add
ret
cmp
je
adc
add
lock
cld
rorl
cmp
push
mov
sub
adc
pop
add
scas
xchg
stos
mov
fimull
jmp
push
xchg
push
leave
stc
nop
rolb
clc
xchg
test
test
jl
sub
fdivrs
shlb
cld
mov
movsl
in
outsb
in
ficoml
add
stos
jne
lahf
leave
xor
mov
push
jl
jg
mov
add
mov
jg
jae
add
sub
pop
pop
xlat
add
sar
movsl
in
mov
popf
enter
lahf
cs
loopne
lsl
ret
push
out
pop
pop
clc
mov
or
les
push
adc
push
inc
push
sub
aad
inc
xorb
adc
push
add
xor
add
out
cltd
out
cmp
loopne
sub
push
clc
cmp
je
and
jne
or
adc
inc
add
adc
ret
cltd
mov
pop
xor
cld
mov
call
dec
repnz
sbb
sbb
inc
mov
inc
test
aaa
adc
add
ret
add
pop
push
dec
dec
cli
icebp
or
es
and
add
jns
loope
popa
insb
add
inc
jb
jbe
xor
inc
cmp
or
pop
es
sbb
pusha
fldcw
lret
jne
adc
xchg
jge
add
inc
fisttpl
icebp
inc
lea
inc
xorb
pop
or
cmp
jbe
add
mov
leave
icebp
cwtl
lods
add
add
dec
dec
add
fildll
pop
add
in
add
xor
or
movsb
inc
add
int3
aas
loopne
fdiv
pusha
xchg
cmc
add
add
call
add
scas
jne
or
inc
mov
mov
lds
je
add
pop
repz
sub
testb
adc
dec
test
add
xchg
cmp
insb
aad
xor
mov
jmp
lcall
sbb
sub
add
clc
testl
jp
xor
cwtl
jo
add
mul
sub
fdivr
cmp
popf
add
aaa
xor
jmp
inc
and
es
js
cmp
mov
pinsrw
lret
out
or
dec
jmp
rcrb
pop
verr
and
mov
xchg
loopne
jns
pop
add
sbb
lock
jnp
jo
add
testl
jo
fsubl
or
cltd
in
add
pop
imul
les
pop
movsb
mov
add
mov
out
add
adc
push
lock
cmpsb
in
pushf
faddl
pushf
leave
int3
orl
js
cmp
test
add
jns
jo
xor
stos
clc
das
imul
mov
pushf
xchg
add
xor
sub
add
addr16
add
add
inc
les
inc
subb
pop
cmp
sub
test
shlb
sub
cmpsl
in
add
push
lea
push
add
mov
rep
nop
add
or
jl
mov
das
lock
movl
sub
gs
in
adc
mov
add
add
je
adc
shl
jb
xchg
test
xor
add
sbb
repnz
push
and
push
and
add
dec
std
repz
cld
jne
pop
adc
stos
jmp
sbb
mov
ljmp
filds
or
dec
pusha
push
sub
sbb
mov
divl
mov
inc
inc
inc
call
mov
sbb
push
sbb
adc
mov
add
movsl
imul
add
xor
mov
pop
mov
jb
add
scas
roll
add
notl
out
leave
mov
add
dec
xchg
adc
ja
sbb
stos
or
add
xor
popf
pop
ficoml
sbb
push
pop
jns
add
mov
mov
movsl
add
sbb
add
sbb
push
and
movswl
je
add
nop
adc
add
jns
cmp
das
incl
shll
testb
xor
mov
loop
lds
dec
inc
jno
add
adc
inc
js
mov
mull
dec
adc
test
add
inc
pop
dec
movsl
inc
orb
jns
loop
faddl
sbb
xchg
xchg
add
incl
push
or
in
cmpsb
add
jbe
mov
ds
adc
fnstenv
insb
xchg
dec
out
cmp
clc
jge
add
test
xchg
jl
sbb
xor
out
add
sbb
push
lds
testb
clc
or
push
jg
mov
orb
add
pop
push
stc
or
nop
push
lock
les
or
scas
push
add
inc
incb
lahf
jle
cmp
or
cmp
adc
mov
fistl
dec
mov
rolb
mov
clc
fdivr
xor
add
xor
out
dec
add
ror
push
or
pop
jb
add
inc
dec
in
lahf
enter
mov
call
pop
xor
insl
inc
cmp
out
jge
andb
cmp
add
sub
and
mov
add
xbegin
xor
adc
xchg
or
dec
incl
and
jp
mov
add
or
orb
adc
mov
repz
pop
mov
jl
sub
inc
cld
shlb
cld
addl
je
mov
push
push
jg
add
inc
push
adc
pusha
add
adc
nop
jl
add
add
aaa
js
add
jb
cmp
adc
cmpsl
cmc
sbb
add
and
int3
or
sbb
sbb
jnp
and
dec
out
cmp
sub
int3
dec
cmp
add
add
and
and
add
shlb
add
cmp
add
adc
and
dec
mov
jmp
add
sbb
inc
or
insb
into
add
mov
cmp
ljmp
push
dec
add
repnz
int3
or
dec
mov
add
sbb
mov
add
pop
into
jbe
clc
cmp
leave
loopne
xor
aaa
mov
fwait
sbb
pop
xlat
test
or
sahf
inc
movsl
jb
add
leave
xor
adc
xchg
in
scas
cmp
add
inc
aas
add
loop
call
test
loope
cld
sub
in
int3
add
pop
lea
arpl
sbb
add
adc
lret
and
add
jne
popa
and
shlb
mov
inc
ficoml
mov
jmp
ss
or
orb
dec
add
cwtl
loopne
lock
push
sbb
push
inc
shrb
loope
in
add
aas
jne
add
in
test
inc
int3
add
cmpsl
popa
andps
cltd
testl
lods
dec
jns
mov
repnz
push
xchg
sub
sbb
or
add
sub
movsb
pop
jg
ds
addb
pop
stos
push
jnp
adc
inc
mov
xchg
mov
xchg
push
int3
dec
push
add
insl
jle,pn
xorl
push
or
lods
and
push
not
mov
loop
scas
and
cli
xchg
add
inc
fsubs
sbb
dec
add
mov
popa
jb
enter
add
xor
inc
leave
add
loop
sbb
add
dec
xorl
add
mov
popf
cmpsb
jo
jnp
add
and
in
add
dec
add
daa
jns
sbb
push
in
icebp
rcrb
jge
inc
mov
pop
or
mull
sbb
call
nop
cld
jno
cmp
jp
push
pop
and
jo
add
xchg
dec
mov
icebp
in
mov
cmp
test
insl
mov
jle
rcrb
repz
ret
mov
add
cmp
sbb
in
les
js
push
test
cmpb
wrmsr
push
enter
aam
dec
inc
mov
jl
add
or
lock
lahf
add
dec
add
flds
or
test
add
loope
aad
rolb
mov
fidivl
xchg
add
clc
mov
out
sub
or
push
repz
sbb
out
repnz
push
fcoml
sbb
cmp
xor
arpl
xor
push
out
inc
push
mov
scas
shlb
ss
inc
mov
frstor
test
sbb
push
add
out
aas
loopne
sarb
cmpsb
addr16
inc
scas
jmp
in
mov
repnz
cld
lret
mov
enter
add
data16
adc
add
sti
das
jne
int3
cld
shlb
jge
out
addb
pop
je
rcr
add
sarl
adc
or
sub
cmp
cmpsl
comiss
add
push
or
mulb
mov
ffreep
adc
hlt
lret
add
mov
mov
sub
mov
sbb
push
aam
mov
or
nop
mov
adc
dec
jno
add
inc
xor
popl
repz
xchg
mov
icebp
cmp
cltd
add
sub
leave
repnz
hlt
loopne
add
mov
sahf
cmp
arpl
push
aas
ljmp
js
outsb
loopne
add
jae
shrl
lods
xorb
jnp
add
pop
add
cmpl
jg
inc
stos
ret
push
sub
mov
mov
mov
add
pop
push
inc
push
inc
inc
pop
adc
and
aaa
mov
enter
add
hlt
mov
sub
mov
jmp
cld
dec
loopne
les
cmpb
dec
stos
aaa
push
mov
push
and
inc
add
cld
sub
xor
and
shlb
pop
rorl
dec
push
add
dec
add
add
in
and
enter
xor
mov
lcall
enter
pusha
imul
push
or
push
add
adc
dec
in
add
mov
mov
fs
jg
cmc
add
inc
mov
mov
fwait
jo
push
adc
cwtl
push
cmp
push
dec
cmp
lods
push
mov
adc
mov
orb
and
cmp
test
add
or
sbb
sub
add
push
mov
push
sub
dec
push
dec
cmp
add
nop
scas
rorb
cld
sbb
or
add
mov
rolb
and
insb
or
test
cmp
push
push
cmpb
mov
xchg
shrl
sbb
push
test
scas
add
jle
enter
addl
orb
add
por
std
push
sarl
loop
xor
push
enter
and
mov
add
lock
loopne
add
pushf
sub
xor
or
leave
js
faddl
mov
and
pop
push
add
jae
dec
testl
enter
jae
add
pushf
mov
push
jmp
pop
xor
cmp
or
je
divl
dec
xchg
push
mov
imul
inc
mov
lock
adc
push
fdiv
cmp
inc
jbe
add
lret
iret
add
or
ljmp
cmp
in
add
push
sarb
add
testb
insb
fcoml
pop
mov
cmp
cld
dec
pop
ret
sbb
lods
jo
call
enter
jno
or
and
scas
dec
cmpsb
nop
sarb
call
xchg
xchg
push
inc
insb
and
lea
add
dec
push
and
lret
push
adc
lods
fildll
add
in
vcvtdq2ps
stos
cmp
pop
clc
nop
dec
add
push
es
push
cmpsl
les
xlat
inc
add
push
test
inc
xchg
leave
sbb
adc
addl
add
add
push
leave
pop
ret
loopne
or
les
add
xor
hlt
outsb
push
test
lret
push
inc
movsb
add
outsl
cmpsl
cltd
and
or
std
add
sub
push
es
lret
inc
scas
inc
inc
aas
rcrb
pop
add
or
push
imul
js
int3
and
adc
jne
pusha
out
stc
jge
add
jmp
test
ljmp
and
mov
or
xor
fadds
mov
add
add
and
add
or
xor
jns
add
pushf
daa
negl
adc
adc
adc
sbb
and
lock
icebp
stc
add
fstps
fildll
dec
dec
mov
xor
jno
sbb
mov
movb
cmpb
add
or
mov
adc
pop
decl
add
xor
ret
mov
aad
add
xorl
jbe
loop
sub
xor
sub
cmpsb
push
mov
adc
into
icebp
cli
loopne
pop
fnsave
jle
sbb
sbb
push
or
adc
and
cld
pusha
hlt
push
add
lods
fcomp
inc
adc
scas
add
call
add
cld
lea
add
inc
das
lds
xorb
rcll
fnstcw
add
popa
or
add
add
push
inc
push
stos
ret
jne
add
sahf
int
aas
mov
mov
stos
fwait
sbbl
ret
add
stos
add
aam
data16
shr
add
stc
add
pop
jl
add
lea
insl
ret
adcb
enter
add
mov
and
push
nop
dec
leave
inc
add
mov
aam
xchg
mov
cwtl
push
add
adc
cmp
test
sub
sbbl
xchg
pushf
adc
nop
mov
add
pop
inc
sub
dec
add
add
popa
movsl
test
cmp
sbb
pop
push
pop
cmp
add
jno
jp
mov
popf
lock
push
sbb
pop
add
int
verr
push
fnstcw
adc
add
es
add
push
dec
int
test
adc
cs
pop
adc
mov
roll
xlat
out
and
xchg
pop
push
loopne
in
add
repnz
daa
pop
aad
int
fstl
add
sub
add
das
xor
mov
sub
rol
loopne
enter
inc
cld
ret
fdivrs
in
cld
rolb
mov
jp
add
jecxz
add
push
insb
sub
mov
inc
sub
and
rorb
fmuls
add
sub
add
inc
mov
fadds
loopne
mov
imul
les
add
pop
dec
in
add
mov
pop
loop
movsb
aam
dec
shl
pop
addb
cmp
inc
mov
jbe
sbb
mov
mov
push
dec
push
lds
shrb
jno
pop
icebp
adc
sub
xor
add
add
sbb
sub
xor
arpl
mov
adc
inc
mov
push
lds
aad
stos
sub
push
sub
aas
adc
cmp
dec
jae
add
add
mov
sbb
dec
test
loop
add
cmp
js
mov
rcrb
xchg
nop
sub
decb
repnz
add
std
dec
adc
out
pushf
jns
add
test
xor
inc
nop
jecxz
sub
mov
adc
cmp
pop
mov
adc
icebp
mov
sub
or
adc
std
loope
and
andb
testl
adc
add
in
inc
xchg
cmpsb
xchg
add
xor
cmp
sbb
or
clc
adc
add
or
mov
add
adc
xchg
add
xchg
pop
or
pop
add
cwtl
arpl
or
daa
loop,pn
add
cmp
mov
je
repnz
decl
mov
jle
lods
xor
out
lock
add
repnz
pushl
mov
or
mov
in
push
add
jnp
mov
add
test
and
jle
add
sbb
inc
mov
sub
inc
adc
mov
cmp
imul
sar
aam
push
or
cmp
pop
lahf
stos
pop
mov
xor
js
pop
in
adcb
add
mov
iret
insl
pusha
and
in
mov
push
push
lds
dec
mov
push
lahf
imul
mov
sub
orb
add
ljmp
pop
xor
adc
fstl
xchg
lret
and
add
jmp
movsb
add
push
cmp
popw
xchg
sub
out
mov
or
cmp
cltd
bound
aam
push
stos
das
cmp
add
or
sub
xchg
mull
or
cmp
stos
and
add
mov
add
jnp
jb
pop
les
hlt
sbb
daa
sbb
lcall
mov
mov
inc
shlb
pop
aaa
lahf
stos
push
ficoms
jno
pop
test
repz
dec
cld
add
sahf
clc
push
out
xchg
leave
push
stos
and
mov
test
add
lcall
cmp
xorl
pop
sti
test
adc
push
add
xor
adc
clc
push
sub
popl
xchg
mov
sbb
mov
mov
xchg
mov
sub
outsb
inc
push
out
test
adcb
push
push
adc
ret
popl
icebp
stos
xor
test
add
orb
fldt
inc
mov
out
inc
clc
jecxz
adc
rorl
add
and
lea
xchg
inc
inc
cmpb
dec
adc
and
add
lret
xor
fwait
pop
lcall
xchg
add
jo
ret
pusha
push
test
cmp
mov
or
shrl
es
fnstenv
add
outsl
lret
add
jmp
xchg
pop
adc
icebp
pop
sub
cmp
lahf
add
jbe
out
int3
push
inc
es
pop
dec
in
lcall
sbb
mov
mov
push
jb
mov
and
ds
cwtl
pop
sahf
pop
xchg
pop
mov
sbb
shrl
int3
mov
jns
add
xchg
ss
inc
jno
or
aam
add
ret
mull
mov
and
nop
mov
or
ret
cmpsb
add
inc
testl
pop
ja
cli
sarl
add
mov
inc
add
dec
movsb
bound
fcmovne
xchg
mov
mov
jg
test
sbb
cmovae
sbb
outsl
repnz
lahf
add
bound
lahf
dec
xor
fisubs
xlat
mov
aas
cld
jns
rcrb
jmp
pusha
lcall
movsb
and
pop
ljmp
xor
nop
xor
push
movsl
xor
push
push
cmp
push
shlb
add
outsb
adc
lock
sbb
pop
cmp
dec
mov
dec
mov
shlb
sbb
push
cmpb
in
xchg
or
int
and
cs
lds
jmp
add
addr16
push
and
add
push
mov
cmpsb
stos
ja
sub
subl
mov
cmp
xchg
mov
leave
add
or
cmp
jne
in
lds
ficoml
pushf
sbb
inc
test
cmp
push
inc
xchg
pop
and
es
or
in
jbe
add
lods
mov
loopne
je
xchg
jp
movsl
enter
and
jle
jae
cmp
rorb
xchg
cmpsl
cld
loop
jnp
imul
loope
xadd
xchg
icebp
mov
mov
cld
filds
test
inc
mov
cmc
lret
mov
jmp
add
mov
add
in
and
sbb
jge
scas
xorb
fs
add
cltd
sbbb
cmp
mov
push
pop
rolb
iret
adc
xchg
aaa
aad
mov
dec
lret
daa
or
mov
jo
dec
add
or
ds
pusha
add
int
rclb
pop
decb
mov
sub
jnp
add
mov
or
sub
pop
icebp
cmp
lahf
dec
adc
add
jmp
stos
test
add
sbb
cmp
adc
inc
arpl
aas
shrb
xor
add
pop
jmp
or
and
mov
sub
lret
enter
dec
jae
or
cld
pop
mov
push
fildll
pop
add
jmp
lret
mov
add
add
or
pop
es
rcll
daa
cmpsl
iret
inc
fwait
popf
shrl
push
negl
dec
cmp
test
jmp
inc
inc
adc
push
es
or
add
xor
mov
in
cmp
xchg
pop
lahf
popa
pop
add
test
adc
gs
jg
dec
mov
or
jge
popl
pop
fimull
sub
insl
xor
mov
push
les
add
push
add
dec
clc
xchg
add
repz
add
rcr
pop
add
pop
mov
add
cmp
mov
cltd
rcpps
dec
dec
pop
add
lea
sub
daa
aas
flds
fstpt
sar
add
sbb
jp
add
dec
and
stos
add
jb
adc
cmp
sub
inc
or
add
enter
wbinvd
dec
lods
loop
loop
dec
es
aam
and
mov
add
add
xchg
add
sbb
or
push
es
jp
mov
addr16
sti
xlat
or
cmp
js
add
mov
je
adcb
sub
cmp
add
scas
lock
test
arpl
cmp
dec
adc
adc
test
jge
insb
sarl
push
lock
hlt
popf
dec
lret
loop
mov
aam
cld
jl
cmp
mov
es
or
mov
add
cmp
cli
cwtl
adc
add
push
dec
sbb
mov
add
fs
add
inc
repnz
push
sti
add
fucom
inc
mov
add
into
and
mov
lock
inc
cpuid
add
cltd
cmp
push
and
add
mov
adc
iret
pop
popl
push
inc
aad
jge
dec
push
or
jae
cld
or
push
inc
aam
add
push
mov
mov
dec
nop
daa
jp
xchg
jl
mov
fistps
imul
cmc
jge
subb
fnsave
pop
add
in
mov
out
fistpll
loopne
or
rcrl
dec
add
push
ret
jmp
and
cltd
add
in
mov
sub
push
ret
push
add
cld
fwait
push
loopne
lods
jne
aam
in
dec
bnd
add
xor
lea
lock
sbb
pop
xor
ret
and
iret
adc
xchg
add
sub
pop
mov
pop
jns
rol
add
adc
je
add
fnsave
pop
adc
push
mov
and
add
pcmpeqw
decl
add
xor
or
loopne
enter
mov
sub
and
sub
jge
cmp
dec
cmpb
dec
jnp
add
inc
in
pop
push
pop
jmp
movl
inc
add
js
sar
mov
rorl
jl
inc
sysret
xor
mov
into
mov
add
sub
cmpsb
add
inc
dec
add
jle
add
es
dec
jne
flds
add
xor
xchg
add
sub
and
adc
add
sti
mov
push
test
add
popf
aam
scas
les
cld
aaa
je
jae
and
loop
lea
add
adc
and
push
sbb
pop
pop
ljmp
add
pop
sub
jo
faddl
rolb
add
rcll
jo
nop
pop
clc
sbb
mov
incl
sti
add
inc
fwait
imul
cld
fadds
push
cmp
inc
mov
mov
mov
cld
stos
ljmp
lea
cmp
jge
popf
push
sub
sbb
iret
or
outsl
scas
in
pop
add
das
mov
cmp
add
jnp
mov
xor
xor
add
add
adc
mov
mov
rcll
js
je
jle
jo
hlt
inc
add
push
arpl
add
dec
mov
in
jae
jle
add
dec
je
xchg
pop
imul
test
and
popl
pop
dec
lret
mov
rcr
xor
loopne
outsl
sbb
add
dec
scas
incb
mov
fiaddl
icebp
movsb
aaa
and
mov
and
add
add
lds
add
cmp
add
inc
cmpsb
inc
test
jmp
sbb
mov
lret
sidtl
jne
int3
in
ljmp
pop
shlb
add
aad
xor
inc
mov
dec
jmp
jbe
enter
add
int3
jmp
rolb
sbb
cmp
mov
mov
mov
out
xor
inc
pop
add
movb
cmp
add
adc
out
sub
add
pop
adc
clc
into
cld
ljmp
xor
pop
xchg
jnp
add
mov
mov
add
push
dec
add
xor
shl
pop
cmp
aas
inc
insl
lods
mov
mov
or
pop
mov
inc
insl
pop
ja
add
pusha
mov
add
arpl
and
jge
data16
jae
addr16
jle
pushf
add
mov
sbb
jno
add
jbe
outsb
add
rorl
mov
pavgb
inc
and
test
push
add
dec
jge
jl
inc
seto
outsb
outsl
jnp
cmp
sbb
jo
jle
aas
outsl
insb
add
pusha
ja
divb
cmp
sbb
fs
cmp
xchg
jo
data16
sbb
jp
fstpl
gs
xchg
arpl
add
insl
popa
jb
pusha
shlb
add
loopew
push
mov
add
jbe
jno
inc
popa
loop
movsl
add
outsb
mov
cld
or
push
add
add
push
add
add
arpl
mov
pop
inc
push
add
jo
gs
or
dec
loop
cmp
inc
addr16
popa
ret
in
outsb
and
add
push
outsl
rclb
sti
mov
cmp
xor
add
push
imul
shl
inc
and
xor
pusha
dec
add
cmp
mov
add
sub
add
addr16
jbe
adc
bound
add
inc
add
push
cld
lret
push
ja
addb
add
add
inc
ja
arpl
insb
mov
mov
jno
popa
imul
dec
ror
insl
jnp
ret
mov
pop
loop
or
jne
lock
bound
push
mov
xchg
push
or
mov
add
xchg
inc
movsb
sub
pop
pushf
ror
icebp
xor
cmp
push
push
push
aad
add
or
pusha
ret
adc
sub
add
pop
add
and
testb
add
je
push
lods
sbb
add
popa
mov
roll
rclb
sbb
sub
jns
sbb
add
add
cli
clc
loopne
add
lods
loopne
xor
add
mov
addb
pop
jmp
add
nop
mov
cmpsl
jp
sbb
repnz
sbb
icebp
sbb
xchg
sbbb
stos
not
jo
add
testb
rorl
and
jno
xchg
mov
fiaddl
cltd
scas
ret
dec
rol
rorb
push
mov
push
xchg
mov
cwtl
inc
pop
jge
fwait
shlb
fidivrl
xchg
ret
push
add
add
add
loop
imul
insl
pop
jns
loopne
and
push
adc
xor
inc
ret
adc
filds
test
daa
sbb
cwtl
hlt
add
mov
clc
mov
std
add
gs
sti
add
cmp
add
bound
adc
ja
stos
sub
leave
inc
pusha
mov
dec
lret
inc
mov
xchg
push
add
pop
add
dec
psubb
mov
sbbb
xor
jmp
mov
andb
add
pop
mov
mov
sub
mov
pop
pop
cld
mov
cmp
in
add
add
jmp
aas
sbbb
popf
dec
clc
xor
xor
jp
movsl
stos
repnz
add
mov
ljmp
js
add
flds
add
add
add
sti
clc
push
incb
add
jno
lds
jl
out
negl
inc
aad
loopne
pop
jae
pop
ret
loop
dec
xor
ja
std
les
outsl
pop
into
add
mov
add
rolb
push
jae
jo
cmp
roll
sbb
xlat
mov
mov
adc
mov
cmpsl
loop
push
add
call
out
pop
add
in
sarl
aam
sbb
add
mov
add
pop
in
lods
xchg
push
je
arpl
call
jns
sbb
xchg
mov
lcall
mov
sub
jae
sbb
jge
add
pop
cmpb
mov
fsubrs
mov
inc
test
loope
jle
pop
rolb
push
dec
xor
push
lret
dec
dec
cmp
sub
jb
and
sub
sub
mov
xor
add
or
jecxz
and
loopne
aam
sbbb
pushf
pop
clc
test
hlt
cmp
push
push
adc
sub
add
jae
xor
sbb
std
clc
inc
je
gs
sahf
pop
add
xchg
fcomps
mov
push
xor
jo
pop
push
add
shl
add
dec
pop
aas
mulb
add
and
dec
roll
mov
xchg
ret
add
dec
outsb
jne
shlb
ja
in
stos
add
lahf
imul
stc
pop
sub
inc
mov
sub
fildl
push
jb
push
bound
jo
add
cmpsl
stos
std
lret
push
mov
jns
int3
in
cmp
shlb
add
jnp
or
add
add
sbb
pop
insb
nop
orb
dec
imul
cli
enter
cmp
add
add
addb
adc
fwait
inc
hlt
pop
dec
add
mov
sarb
push
add
mov
sbb
add
xor
inc
sub
add
jns
sub
por
pop
adc
clc
pop
sbb
ljmp
std
mov
cmc
xlat
icebp
inc
lcall
add
das
xchg
cmp
outsl
push
inc
jg
out
out
cmp
mov
int
arpl
sub
ja
jae
adc
jo
sub
incl
jnp
push
and
lahf
in
jno
add
adc
adc
pop
cmovp
rolb
movsb
in
scas
in
add
mov
cmp
xlat
je
adc
cwtl
leave
notb
daa
mov
push
jp
outsl
fdivrl
lods
mov
insb
je
sub
sbb
push
add
jne
int3
or
add
pop
mov
in
rcrl
mov
cld
rcr
push
cmc
dec
add
sbb
inc
add
mov
rolb
dec
or
and
das
pusha
mov
inc
add
add
inc
add
add
mov
sbb
rcrb
lock
imul
jae
or
jecxz
or
mov
add
and
call
push
stos
jno
inc
dec
sbb
mov
fsubl
popl
or
mov
scas
mov
and
outsb
add
int3
out
lock
jne
test
mov
xchg
out
pop
cmc
mov
jne
mov
call
sub
cltd
std
add
fsubl
fidivl
nop
mov
and
ret
in
seta
push
add
scas
dec
inc
lcall
add
add
aaa
and
fisttps
in
add
sbb
or
add
mov
push
xor
ret
daa
push
add
pop
cmp
lahf
rcrb
sub
xor
sbb
add
xchg
add
push
or
push
add
sub
inc
incl
int
dec
sub
mov
test
shll
sub
call
jae
test
repnz
les
and
dec
pop
add
lea
cwtl
andb
and
mov
flds
dec
in
or
push
add
jb
addr16
adc
lret
jg
or
movsb
rcrb
or
push
mov
pop
add
push
mov
mov
add
push
add
rolb
pop
nop
in
mov
rcrb
test
in
in
add
dec
fildll
mov
jno
or
sahf
sbb
push
pop
add
and
mov
xchg
lock
xor
clc
mov
sbb
cli
pop
jg
push
dec
xor
mov
cmpsl
or
add
leave
aaa
rcrl
loope
adc
adc
je
stc
dec
push
call
call
test
cld
lret
aas
and
orb
lds
push
xor
and
cmpsl
sub
movsb
add
xchg
fiaddl
mov
jge
call
icebp
in
lock
add
jae
lret
int3
fistpl
rorb
ds
and
dec
sub
and
sbb
push
lods
or
and
dec
inc
cli
mov
iret
dec
cmpl
enter
adc
jno
add
add
lock
jge
or
in
outsl
push
in
dec
rcrb
add
ds
imul
or
mov
inc
add
mov
pusha
add
sub
sub
test
ja
jmp
mov
in
mov
mov
mov
loop
push
add
test
mov
or
xchg
ljmp
fnclex
in
add
pop
add
enter
xchg
ds
lcall
in
les
xor
fwait
xor
and
jl
hlt
add
dec
clc
fstpt
add
cld
lar
mov
add
test
loop
add
iret
sub
nop
jmp
ljmp
mov
lods
ret
or
xor
or
adc
mov
adc
xchg
jg
loopne
xchg
insb
or
add
push
inc
add
sub
add
psllw
fidivrs
pop
mov
push
stos
sub
movsb
aas
sub
inc
push
sub
rolb
inc
pop
add
and
push
stc
dec
subb
sbb
mov
jle
add
mov
cmp
lock
ret
popa
test
push
add
cmp
repz
popf
and
or
sti
and
dec
add
adc
adc
pop
sub
idivb
add
push
sahf
mov
cltd
or
or
xchg
call
dec
ljmp
push
and
wrmsr
outsl
adc
shll
pop
loopne
jl
add
mov
adc
shl
and
or
mov
jae
push
add
inc
cmp
mov
push
or
das
mov
fdivr
jg
dec
shr
add
scas
push
pop
stos
lods
add
mov
mov
jo,pn
add
push
xor
cmp
pcmpgtw
add
lret
push
pop
xchg
loope
in
ljmp
pop
cmp
push
jg
cmc
add
call
sbb
push
arpl
inc
sbb
lea
nop
pop
das
enter
add
daa
mov
xchg
adc
inc
mov
and
adc
mov
pusha
push
mov
mov
sbb
mov
fadds
cmp
mov
jecxz
test
sbbl
je
sub
sub
psubb
aad
add
mov
sub
push
fiaddl
xchg
cwtl
adc
movsl
and
rcrb
mov
sbb
nop
dec
imul
xchg
xor
sub
sub
or
sbb
pop
call
push
dec
push
or
and
pop
push
sub
dec
jo
or
sbb
add
es
cltd
mov
mov
xchg
add
adc
test
add
hlt
xchg
inc
in
mov
xchg
lock
loop
xbegin
les
add
pop
shll
sti
push
and
or
sub
or
inc
xor
daa
jge
adc
pop
and
cmp
xor
daa
nop
mov
sbb
mov
or
and
or
ret
dec
scas
sub
push
or
in
jne
notb
push
xlat
jmp
adc
mov
sbb
xchg
in
pop
add
mov
sbb
dec
inc
jmp
inc
add
mov
and
add
inc
leave
popa
add
les
sbb
and
xlat
add
loope
jmp
xor
lret
jno
out
or
adc
adc
push
sbb
fidivrs
jecxz
inc
repz
jle
aas
mov
push
mov
out
jb
push
mov
lock
fistpll
pop
jmp
int
cmpsb
xor
sub
or
push
dec
popf
add
fistpl
mov
xor
out
xchg
inc
mov
icebp
push
inc
xor
pop
add
imul
in
lods
addl
add
pusha
loop
xchg
adc
es
imul
or
xor
cmp
shrb
cwtl
add
pop
mov
jmp
shlb
in
xor
dec
jo
andb
inc
dec
lcall
adcb
jbe
add
cmp
pop
jmp
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
xor
xchg
nop
or
movb
adc
or
cmpb
adc
aas
je
add
cmp
push
jne
mov
and
scas
adc
sub
adc
inc
hlt
add
mov
xchg
insb
orps
xchg
je
clc
addb
fiadds
inc
dec
fs
add
mov
cmp
or
movsb
pop
mov
add
test
out
xor
sub
frstor
jmp
imul
sbbl
in
xor
cmp
or
repz
or
je
add
adc
xor
dec
cmp
add
xor
and
push
lret
pusha
and
movsb
sub
aas
icebp
andb
fimuls
mov
inc
es
add
add
sub
add
xchg
fs
mov
rorb
add
jne
inc
setns
pop
insl
xchg
loopne
in
idivb
shrb
add
std
or
fiaddl
mov
mov
add
int3
ss
pop
mov
add
shrb
mov
xor
js
or
ja
adc
mov
add
add
push
inc
xor
or
pop
test
sti
cmp
xor
nop
stos
xchg
cmc
andl
or
mov
nop
enter
pop
fnstenv
add
out
push
stos
cltd
mov
sti
movzbl
jo
add
test
add
andb
test
mov
add
or
sub
push
sub
and
popf
sarl
sbb
sub
das
add
lea
pop
rorb
cmp
add
int
decl
xchg
sbb
testl
mov
test
xchg
adc
int3
mov
pusha
mov
jmp
sub
gs
push
in
ltr
lret
das
xchg
nop
mov
pop
add
mov
mov
add
cmpsb
mov
adc
xchg
enter
pop
cmp
sbb
and
mov
sbb
jge
pop
or
jl
in
jmp
push
cmpl
nop
ds
or
loope
shr
pop
pop
mov
adc
and
cmovge
lahf
and
cmpsl
cwtl
ret
call
xor
add
data16
pop
addl
add
fsubrl
andl
mov
clc
cmp
ljmp
and
mov
js
pop
dec
sbb
jl
jmp
cmpsb
xor
cmp
rolb
and
fdivr
and
mov
inc
mov
inc
push
adc
movaps
loopne
je
pushf
add
cli
jne
xor
ret
add
and
push
or
lret
lock
test
fidivrs
add
inc
jle
lea
pop
add
mov
lock
push
pop
inc
mov
js
cli
lret
psubb
cmpsb
jp
adc
add
or
loopne
xchg
stos
inc
repnz
aaa
nop
add
enter
xor
mov
mov
mov
sub
add
and
add
not
mov
mov
lock
inc
out
jo
mov
cmp
repnz
pop
rol
mov
pop
sbb
cmp
sbb
addr16
xchg
testb
push
jge
out
add
sub
push
add
xchg
int
sub
add
dec
cvtps2pd
hlt
add
add
sub
dec
pusha
mov
push
push
push
push
cmp
je
add
mov
xchg
mov
insb
sub
mov
push
cmp
jmp
leave
adc
lock
add
push
dec
cltd
jns
rcl
inc
roll
int
xlat
mov
inc
adc
lds
ja
push
inc
fldl
decb
std
and
fcompl
mov
mov
in
shl
cmp
div
repz
in
pop
add
adc
repnz
mov
push
sbb
push
int3
aas
cld
add
pop
in
ret
adc
flds
adc
mov
in
dec
or
mov
xchg
fs
lods
push
shll
add
inc
in
pushf
sub
roll
pop
xchg
in
inc
xchg
push
ds
fiaddl
cmpsl
adc
xchg
pop
daa
sub
add
dec
jmp
call
popa
bound
push
push
add
nop
js
pop
or
dec
repz
add
dec
push
aam
insl
inc
cmpl
loopne
and
cmp
and
add
loope
adc
add
rclb
aas
sub
mov
adc
mov
cmp
out
ds
daa
xchg
sbb
or
movsb
sub
add
test
lret
adc
testb
pop
or
add
into
push
fldt
les
xor
iret
enter
push
add
adc
aad
cwtl
fiadds
mov
lahf
les
jecxz
ljmp
dec
dec
cld
and
add
loop
cmp
cli
dec
add
in
mov
out
adc
cmp
xor
rolb
xor
dec
pop
dec
and
jne
inc
adcl
add
sbb
xor
push
inc
not
repz
nop
add
clc
test
add
in
jne
and
push
ficomps
je
adc
xchg
or
out
pop
mulb
dec
stc
hlt
pop
xor
stos
dec
cmp
js
dec
sub
lods
adc
in
lret
dec
add
xor
rorb
sti
mov
xchg
mov
test
or
in
loope
jge
mov
jp
sub
jmp
aad
ror
cs
xchg
loop
mov
in
mov
add
xchg
and
das
sub
mov
movsl
jmp
push
mov
mov
aad
xchg
xchg
add
adc
xchg
add
mov
jo
cmp
xchg
fs
sahf
jmp
sub
mov
dec
idiv
roll
roll
add
repnz
jnp
daa
mov
and
jmp
cmp
inc
roll
jecxz
or
xchg
cmpsb
add
mov
add
xchg
adc
and
lret
xchg
jne
add
jbe
popf
jg
jle
les
les
adc
fidivrs
sbb
popl
icebp
sbb
inc
fs
pop
add
enter
cld
and
add
pop
insl
insb
dec
ds
fmull
pop
repnz
sbbl
lods
jmp
mov
rcrb
fs
jecxz
jmp
push
xor
push
rclb
call
lea
add
jmp
xchg
add
add
mov
inc
fadds
add
jl
sbb
inc
jae
sbb
add
and
add
push
pop
js
adc
mov
cmp
data16
inc
rcll
adc
cmp
jae
rclb
push
add
popa
scas
jbe
fcomps
jne
push
xor
cmp
mov
push
add
movb
push
imul
fisttps
std
or
mov
mov
rorb
int3
add
nop
rolb
pop
fstpl
inc
or
bnd
insb
std
cmp
addl
inc
shl
sbb
hlt
push
dec
popa
pop
orl
pop
jp
incb
and
rolb
add
test
add
psadbw
inc
add
or
outsb
movlps
dec
inc
sub
and
add
mov
pushf
nop
scas
ds
add
jl
movsl
add
inc
shlb
add
xchg
movzbl
dec
add
sub
xlat
mov
xchg
call
cltd
fs
sub
dec
ret
pop
add
pop
ljmp
fdivl
xchg
xor
cmpsb
into
push
sub
addr16
movsb
add
clc
ja
adc
faddl
sbb
lahf
and
add
pop
adc
and
add
cmp
jae
sub
loopne
xor
add
xor
add
mov
mov
cld
pop
or
mov
int3
add
fidivl
cmp
pop
or
jmp
cmpsb
push
push
rorb
push
loope
insb
sti
rclb
add
pop
je
mov
pop
in
sahf
adc
loopne
jle
sbb
push
jle
add
lds
xchg
mov
or
add
jle
sbb
and
rolb
jae
or
scas
and
call
fbld
imul
add
xor
xchg
mov
add
enter
inc
pop
and
xor
lret
jmp
and
rcl
jb
add
movsb
cwtl
shl
mov
cwtl
sarl
jbe
popf
enter
rclb
push
and
sbb
sbb
adc
push
ljmp
fcomps
xchg
in
cli
push
add
push
dec
and
fcoml
jle
and
sbb
ss
inc
adc
mov
xchg
xchg
inc
scas
movsl
xchg
push
adc
mov
ret
add
ja
testb
inc
dec
adc
shlb
hlt
mov
add
push
add
popf
cmp
or
jae
mov
push
jge
dec
cmp
and
sbb
or
dec
inc
sbb
je
scas
pusha
dec
aas
fisubs
add
hlt
cmpsb
and
mov
or
add
mov
dec
mov
add
xchg
or
push
jl
inc
loopne
in
lock
js
arpl
add
fs
or
jp
dec
sbb
cmpsb
adc
stos
insb
movaps
enter
das
rolb
iret
rolb
add
xchg
push
sub
adc
dec
inc
and
fadds
lods
leave
sbb
adc
andb
test
or
sbb
pop
lahf
adc
fists
push
decl
cmovae
mov
jmp
jne
sahf
popa
mov
inc
clc
mov
sub
inc
jno
cwtl
stos
add
out
call
adc
addl
test
push
andb
stc
add
or
fstpl
xchg
psubb
push
shl
or
and
xchg
addl
testb
jns
aad
loop
insl
and
lock
dec
loopne
pop
outsb
adcb
jno
pop
aaa
and
push
and
xchg
mov
inc
sbb
leave
add
das
insl
enter
ret
inc
adc
and
mov
lret
inc
clc
andl
adc
xchg
cmp
stc
inc
xchg
popa
nop
cmp
cmc
add
fistps
dec
jnp
add
bound
and
ret
sub
inc
cmp
into
repnz
aam
pushf
mov
sub
add
dec
xor
pop
into
pop
add
sbbb
adc
xchg
add
adc
rclb
mov
mov
clc
add
push
sbb
cmpsb
and
lods
fldt
dec
mov
add
loopne
mov
pop
pop
jno
dec
lock
xor
add
push
mov
std
hlt
fadd
add
cmp
xlat
jns
push
sub
push
or
mov
dec
sub
inc
add
cmp
add
nop
adc
add
pop
in
xor
and
stos
dec
add
mov
aad
cmpsb
adc
add
add
sbb
xor
jp
call
cmp
xchg
or
xchg
jns
or
mov
push
add
dec
in
cltd
push
dec
arpl
xchg
or
or
aad
xor
int3
mov
sbb
es
push
in
jp
mov
push
js
lret
push
rolb
or
inc
cs
mov
add
dec
or
jmp
inc
xchg
mov
inc
and
sbb
and
cltd
shrl
add
push
imul
fsqrt
add
xchg
adc
out
add
and
sub
out
jp
std
jno
inc
jb
not
xchg
adc
lea
vpmaddwd
aaa
sub
dec
test
push
lock
ret
scas
add
xor
mov
lahf
mov
xchg
ja
mov
cmp
add
sub
imul
pop
clc
and
or
add
shlb
in
add
mov
rcr
cli
and
pop
loope
ja
push
faddl
das
fdivr
movsl
xchg
adc
cli
imul
mov
in
or
add
and
dec
mov
jnp
xchg
xchg
cld
lahf
stos
mov
ret
dec
add
jecxz
and
aam
add
cltd
btr
and
repz
daa
rcrb
add
jbe
adc
mov
clc
and
pop
xor
or
inc
cmp
add
cmp
push
and
sbb
and
mov
pop
push
add
scas
xor
dec
shrl
daa
sbbb
jo
mov
addr16
push
push
add
inc
sub
add
add
add
lea
stos
sub
clc
sahf
lock
repz
js
add
cmp
mov
cmpl
outsb
stc
sub
sbb
gs
flds
and
push
leave
mov
sbb
sahf
lret
xor
dec
add
sub
mov
loop
adc
dec
add
adc
mov
cmp
jg
jbe
sbbl
fs
orb
addb
push
sbb
adc
adc
into
xchg
div
xlat
cltd
nop
push
and
or
sub
lods
pop
adc
or
cltd
inc
insb
add
aad
mov
imul
pop
jae
jecxz
das
test
push
scas
adc
or
sti
jmp
xorl
add
push
jae
das
push
lahf
xchg
and
rolb
adc
into
xor
mov
add
push
xor
mov
push
mov
xchg
add
lods
ja
lret
rcll
cmp
dec
mulb
push
adc
pop
push
push
movsl
cmp
and
xor
add
and
xor
aad
pusha
xchg
ss
xor
inc
xchg
lahf
loope
push
pop
cmp
insb
pusha
test
add
inc
flds
sarl
mov
push
cwtl
dec
add
dec
push
cmp
int
clc
or
mov
hlt
push
lret
test
jnp
inc
or
add
add
test
cmp
lock
and
add
out
mov
jno
pop
add
movzwl
mov
imul
pop
inc
and
clc
add
out
stos
jno
sarb
inc
add
or
addb
xor
xchg
roll
aas
push
out
pop
push
dec
popf
es
mov
jmp
xor
imul
in
or
and
int
add
and
add
imul
loopne
sub
in
dec
arpl
test
testl
jge
or
hlt
cmp
adc
lea
sub
sub
shr
sbb
push
popf
dec
xchg
jae
pop
push
push
pop
dec
sub
sarb
xchg
insl
cmp
inc
xor
lahf
jmp
sbb
push
sub
loop
sbb
test
pop
push
int3
pop
jmp
xchg
mov
mov
push
add
push
jns
mov
inc
lock
jno
pop
and
mov
sbb
xor
inc
pop
pusha
test
or
std
xchg
sub
shlb
push
add
mov
subl
sbb
repz
inc
jle
adc
das
jge
xchg
xor
cmpsl
xlat
leave
sbb
xor
add
xor
mov
and
pop
add
iret
out
shlb
test
mov
push
lock
inc
hlt
xchg
mov
ja
add
sbb
adc
in
cwtl
hlt
mov
jmp
movsl
pop
cld
fwait
add
nop
test
es
xchg
add
jnp
add
push
shlb
fwait
insl
or
dec
add
ds
xchg
jmp
push
outsl
add
pop
mov
cwtl
mov
pop
inc
hlt
mov
add
clc
or
add
call
add
sub
add
fmulp
push
fisubl
add
add
cwtl
add
inc
mov
adc
xchg
in
cli
jmp
repnz
adc
push
and
add
cmp
cmp
in
adc
xchg
mov
arpl
jmp
push
ljmp
add
fsts
jmp
loop
aas
mov
push
push
or
and
daa
lea
push
push
cmpl
orb
decl
aad
push
or
and
push
retw
mov
mov
negl
repz
mov
add
movsl
ljmp
add
fcomi
pop
add
pop
xchg
ret
and
loopne
aad
cmp
leave
add
sbb
add
xchg
int
add
jmp
jne
dec
mov
add
insl
rcll
or
and
adc
inc
in
add
push
pop
adc
pop
add
xchg
xchg
lahf
sub
mov
inc
andb
in
jl
cmp
xor
and
mov
cmpsl
sbb
sub
rcr
rcr
scas
mov
cmp
aam
in
add
out
movzbl
sub
fcompl
jg
and
enter
mov
movsl
jecxz
and
xorb
inc
cmpsb
nopl
fmul
pop
out
push
or
lock
sub
add
mov
scas
push
adc
jo
cmp
jno
adc
jae
jmp
js
cmp
loop
pop
inc
sti
add
dec
push
in
out
dec
mov
sbbb
push
xchg
mov
dec
ljmp
test
cs
jp
mov
sbb
movsl
add
mov
add
outsb
jle
cmpsl
or
mov
add
rol
filds
pop
inc
jecxz
inc
inc
iret
add
lock
sbb
mov
divb
fidivrl
inc
sub
push
jl
pop
lahf
ror
mov
pop
into
shlb
loopne
adc
pop
lods
cmp
add
push
mov
jmp
dec
testl
je
aas
shrb
aas
pop
insb
or
pop
sarb
cwtl
ficompl
cmp
shlb
insl
in
and
aas
xor
sub
lcall
pop
andb
setne
and
test
xor
lods
and
add
movl
subl
pop
mov
pop
in
icebp
shlb
inc
test
xchg
cmp
jo
stos
mov
and
mov
inc
sub
out
jnp
jne
jbe
jns
pop
mov
mov
add
mov
testb
aad
cmc
subb
bound
stos
push
dec
or
repnz
add
andb
cwtl
sub
push
je
push
shlb
push
loop
cld
andb
xchg
mov
idivb
iret
loopne
push
div
pop
cli
in
dec
or
jge
jmp
cmp
add
cmpsl
incb
add
or
cltd
cmc
ret
cld
test
or
out
paddsw
ror
and
mov
add
cltd
mov
cs
sub
add
mov
daa
loop
nop
pop
and
aas
arpl
rorl
test
lock
adc
jnp
mull
mov
push
add
lahf
shlb
lods
xor
ja
add
lret
loop
or
xor
add
jne
and
cmp
mov
inc
ds
lods
jg
sbb
scas
aad
lcall
mov
gs
add
mov
addl
jmp
cmp
lcall
cmp
push
xchg
mov
mov
jo
add
xchg
cli
notb
add
rcrb
add
or
nop
popf
mov
loopne
enter
add
insb
add
adc
inc
add
dec
mov
adc
aam
xor
or
mov
add
scas
add
mov
sbb
repnz
inc
lods
cli
stc
es
bound
pop
or
int3
xor
shll
int
rorb
rorl
shl
aam
push
adc
repz
scas
int
xchg
pop
add
xor
cli
lsl
adc
and
xorps
jne
in
cli
xor
mov
mov
cmpsb
mov
movsl
shl
xchg
mov
cmp
jmp
test
push
adc
call
lods
aaa
mov
inc
call
jae
push
shlb
or
jns
shrd
fsubr
imull
sbb
bound
add
gs
inc
mov
cmp
jo
add
dec
imul
repnz
push
and
bound
xchg
jg
push
jmp
xor
cs
test
sub
jg
add
ret
xor
inc
verr
add
add
xchg
push
adc
adc
dec
fstl
or
imul
repnz
idivl
es
cmpb
movsb
jno
movsl
pop
das
inc
cwtl
inc
adc
insb
push
push
add
aaa
es
cmp
je
dec
and
jnp
add
pop
or
push
out
push
test
xor
mov
xor
test
out
loope
lock
add
and
push
and
lods
dec
add
adc
add
arpl
or
add
aam
and
add
and
inc
add
and
mov
jmp
sbb
push
ja
dec
add
sub
push
mov
jne
add
adc
in
push
nop
add
enter
dec
xlat
loopne
xchg
fs
pop
pop
sbb
shrl
dec
ffree
aam
dec
add
fs
mov
dec
jns
shlb
or
inc
mov
pop
pop
add
andl
mov
add
cli
rol
adc
cli
and
sbb
subb
mov
jae
add
mov
addl
mov
add
sub
xchg
and
push
shll
out
or
addps
pop
test
test
fs
add
jbe
sbb
leave
adc
add
xlat
add
cmp
in
testb
inc
sahf
repz
cmp
je
add
fwait
xor
adc
sub
rcll
mov
mov
clc
push
adc
adc
leave
repz
test
addr16
pusha
mov
push
and
and
mov
mov
lahf
pop
xchg
push
call
add
lock
fcomps
cli
nop
ret
add
je
scas
mov
or
shlb
pop
add
push
jmp
add
jno
and
adc
push
xlat
push
mov
movsb
stos
fcos
dec
add
pusha
xor
test
into
dec
jae
jnp
hlt
lock
test
pop
lret
add
stos
xor
rcrl
pop
lea
cmp
xlat
mov
xchg
add
mov
das
inc
test
xor
add
push
adc
loopne
pop
add
lret
fdivr
pop
pop
rorl
add
jmp
add
imul
add
stc
pop
or
je
sbb
push
dec
sbb
push
sub
sub
mov
and
je
insb
pusha
sub
ljmp
inc
xchg
or
and
mov
out
sub
add
or
movl
or
hlt
pop
add
test
or
je
cmpl
leave
add
cmp
pusha
dec
arpl
add
cld
pop
mov
adc
add
out
dec
and
sarb
daa
test
push
or
fisttpl
out
pushf
adc
jl
mov
adc
cli
add
lds
jmp
into
popa
dec
jmp
mov
icebp
dec
fstl
xor
jo
or
pop
rorl
sub
daa
sbb
clc
or
repnz
sub
cmp
adc
and
jb
jg
out
cltd
out
cmpsb
out
mov
shl
push
xchg
adc
jno
add
jmp
adc
jp
loope
jnp
out
jle
fistpll
and
enter
jmp
pop
sbb
sbb
jnp
xchg
orb
lahf
jle
dec
aas
dec
sbb
les
mov
lcall
enter
popf
add
std
test
pop
cltd
test
add
cwtl
nop
mov
outsl
rolb
andl
add
cmpsl
bound
xor
daa
aas
sub
ljmp
dec
mov
mov
jecxz
sub
add
jmp
orb
mov
imul
sbb
cmp
pop
jg
leave
push
pop
dec
sbbb
cmp
into
add
jp
out
hlt
popa
sti
out
dec
pop
mov
add
daa
into
dec
mov
xor
sub
adc
adc
mov
cmpl
jnp
sub
js
mov
lock
bnd
call
rcl
in
add
add
ret
lcall
test
adc
add
out
cli
and
cld
imul
roll
lods
xchg
push
pusha
add
outsl
or
dec
add
inc
inc
ja
mov
or
test
dec
movl
loopne
test
mov
adc
or
mov
mov
mov
and
loopne
adc
test
push
mov
add
ss
gs
or
mov
out
cmpsb
and
jmp
cmp
sub
add
sbb
or
lea
cli
int3
bswap
or
push
push
cwtl
ret
imul
sub
jo
dec
adc
push
mov
adc
add
dec
int3
sbb
xchg
dec
add
and
arpl
std
add
repnz
and
push
adc
or
inc
popf
push
add
sar
out
test
inc
push
adc
test
jbe
or
and
out
ja
add
les
stos
mov
hlt
add
imulb
jl
out
iret
popa
push
cmp
mov
sbb
cmp
add
xchg
pusha
mov
pushf
pop
pop
push
test
add
and
leave
fs
or
add
xor
or
sahf
dec
rorb
xor
add
mov
xor
je
scas
add
or
and
adc
add
xor
repz
lea
lahf
jno
dec
add
ljmp
lods
pop
mov
addb
pop
call
xor
and
sub
add
inc
xor
dec
sbbb
sub
dec
jnp
pop
dec
cmp
dec
or
enter
mov
js
push
jns
adc
add
arpl
cld
wrmsr
jmp
mov
sti
xchg
push
mov
ja
add
and
fadds
jne
mov
xchg
add
and
add
push
or
mov
cmp
dec
add
mov
add
mov
mov
adc
mov
mov
mov
xchg
lret
fmull
lret
xor
ret
mov
inc
bound
add
fistps
inc
mov
addb
fmulp
mov
add
test
scas
mov
test
pop
pop
in
adc
add
scas
xor
inc
mov
adc
mov
cmp
adc
ds
je
or
pop
dec
js
orl
sbb
add
ja
add
mov
mov
lock
add
ds
and
mov
cmp
dec
jb
mov
mov
nop
cmp
and
cltd
setb
testl
xchg
jo
sbb
call
add
add
add
inc
adc
pop
sbb
pop
mov
cmp
jmp
jne
or
jae
mov
and
fcoms
xor
or
xlat
add
orl
push
cmp
adc
pusha
add
dec
mov
add
lock
lods
int3
ret
pop
inc
add
fsubr
enter
shll
add
jbe
xor
xor
sbb
add
mulb
mov
cli
or
fadds
mov
sub
xor
outsl
mov
pushf
mov
out
andl
sti
mov
ja
add
adc
ljmp
sbb
mov
mov
ds
lods
dec
adc
add
fisubrs
or
pop
test
jne
aaa
lock
push
popf
cmc
add
add
lret
add
shll
aas
aas
mov
push
pop
sti
cmp
subl
jb
push
jg
add
jmp
xchg
lods
leave
loopne
fwait
mov
daa
pop
adc
mov
mov
and
add
fucomi
dec
jg
cwtl
out
adc
leave
mov
repz
cli
sbb
add
mov
mov
dec
mov
pop
cmpl
jg
add
jae
dec
test
stc
cmp
lock
inc
ds
dec
push
jno
pop
pusha
add
dec
pop
testl
push
icebp
jno
fcmovnu
out
cmpsl
loope
sbbb
jge
add
xchg
pop
lods
fs
loop
aas
pop
jecxz
push
sarb
mov
inc
inc
add
ds
leave
add
mov
mov
call
sub
or
jbe
cmpsl
clc
jmp
adc
jp
add
xlat
push
insl
xchg
and
pop
inc
addr16
data16
or
sbb
add
push
push
loopne
orl
mov
push
or
add
icebp
push
mov
cmpsb
sbb
imul
xor
insb
mov
add
xchg
imul
add
push
inc
dec
mov
js
adc
cmp
adc
lea
ljmp
push
scas
pop
or
jne
stos
in
fistpl
lahf
jl
add
cmc
lret
dec
lahf
lock
inc
push
pop
mulb
cmpsb
add
inc
sbb
jecxz
leave
decb
orb
out
cmp
movsl
sbb
push
add
push
jnp
dec
jo
rolb
add
repz
adc
xchg
xchg
sbb
mov
add
ljmp
test
xchg
lcall
xor
aas
negb
adc
add
xchg
jne
in
mov
fs
add
mov
imull
test
mov
jnp
add
add
aam
and
fs
rcl
nop
add
shl
popf
mov
jnp,pn
sbb
sbb
int3
andb
xor
mov
les
cmp
loopne
xchg
and
sbb
adc
or
pop
or
mov
mov
mov
pop
ja
pushf
enter
ret
push
ja
jbe
push
pop
xchg
roll
lret
inc
jecxz
sti
mov
sbb
cmp
sub
xchg
fldenv
xchg
or
inc
or
fiaddl
push
mov
mov
push
ret
testl
add
pop
out
call
fldt
pop
lret
xor
clc
filds
add
adc
inc
mov
add
hlt
fisubrs
pusha
and
es
test
int
enter
jmp
sub
sub
push
push
mov
xchg
jmp
out
lret
dec
stos
shlb
mov
outsl
daa
add
xchg
cmpsl
sbb
out
and
add
stc
add
mov
jb
faddl
jge,pt
push
add
xchg
psrlq
pusha
sbb
sbb
push
add
test
jne
ja
add
fsubp
fistpl
std
stos
insl
add
add
sub
loopne
notb
js
repnz
incl
pop
xor
fiadds
sbb
rcr
cli
clc
xchg
iret
add
mov
jb
std
loopne
cmp
dec
mov
add
ficoms
int
ss
jmp
xor
test
sbb
add
lock
fcompl
movsb
push
sar
aas
test
cmpsl
aam
sub
jb
add
cli
xor
jmp
push
mov
xor
mov
call
stos
loop
push
popa
ret
jle
add
pop
pop
pop
or
mov
cmpb
ljmp
jae
pop
add
and
jb
sbb
movsb
jno
jns
add
addr16
inc
mov
or
or
or
mov
jmp
or
xchg
add
sbbb
adc
xor
aas
inc
sbb
rclb
mov
jns
mov
testb
cld
sub
sarb
add
loop
cmp
adc
mul
add
repnz
cmp
cmp
in
in
xor
int
jnp
cmp
inc
inc
testb
jae
push
cmp
inc
mov
int3
and
push
push
pusha
adc
pop
mov
sub
add
loop
outsl
fld
add
ret
inc
aas
fmul
jne
testb
jne
adc
jmp
leave
fimuls
cld
xor
push
sarl
test
pusha
daa
shr
pop
orl
mov
shr
int
add
and
push
add
repnz
adc
jmp
fs
or
add
and
movsl
daa
cld
mov
jnp
add
sub
das
cltd
jne
outsl
cmp
cmp
loopne
xor
inc
je
sbb
xlat
push
shlb
movsl
test
jg
jle
add
cmp
xor
push
sub
mov
dec
xor
add
xlat
sub
add
mov
shrb
ljmp
mov
sub
pop
fisttps
xlat
xor
test
push
out
or
mov
test
push
add
subb
aas
aaa
lea
add
incl
int
xchg
call
jmp
inc
adc
add
mov
mov
nop
aaa
sub
pop
shlb
or
out
add
jge
jp
push
add
mov
jbe
lret
fsubs
adc
pop
inc
leave
rcrb
addr16
adc
jbe
add
sbb
push
icebp
inc
xchg
call
add
add
and
insl
mov
dec
jp
add
dec
pop
les
cmp
add
addb
adc
dec
andl
or
sbb
int3
push
testl
mov
mov
pop
ret
or
icebp
movsl
js
clc
cmpsl
add
push
out
or
add
cmp
sub
icebp
mov
push
dec
push
stos
add
dec
and
jne
cmp
add
and
xchg
sub
cld
adc
mov
lods
imul
fisubrl
sarb
add
lret
into
push
or
js
movb
int3
sti
pop
fisttpl
scas
clc
jl
add
inc
inc
add
outsb
fs
pop
mov
test
inc
dec
imul
pop
out
mov
pop
into
inc
xlat
push
and
fildll
cmp
inc
mov
sbb
add
add
faddl
add
test
je
mov
push
jmp
mov
aas
mov
stos
and
and
cmp
adc
push
adc
jmp
adc
sahf
mov
push
rclb
js
ficoml
adc
add
push
xchg
inc
aas
xchg
mov
mov
cmc
cwtl
sub
shlb
cmp
add
je
cltd
add
add
dec
sbb
push
xor
das
push
and
inc
nop
pop
adc
add
mov
and
lret
cmpl
or
xchg
inc
mov
shlb
das
xor
out
mov
faddp
sub
lahf
dec
mov
pop
aam
jl
repnz
cmp
inc
into
jo
sub
or
mov
fnstenv
mov
mov
lods
orb
pop
and
loop
inc
mov
dec
and
mov
push
call
test
pop
xchg
lock
add
js
jne
jecxz
hlt
pand
add
sahf
bound
xchg
cltd
out
xor
aam
pusha
mov
mov
mov
stos
cmp
and
nop
push
sbb
pop
sub
add
mov
call
add
and
aas
dec
pop
xor
push
cs
leave
jno
xor
adc
call
imull
push
mov
out
sbb
ss
mov
ret
lahf
push
add
mov
fistps
add
jb
clc
cmp
mov
cmp
jg
dec
mov
aam
stc
add
in
cwtl
daa
cmp
jno
mov
shrl
cmp
xchg
cmpsb
test
push
repz
sbb
dec
hlt
out
cli
sbb
je
lcall
sti
mov
in
mov
aaa
sbb
xlat
add
cmp
mov
add
pandn
sbb
loopne
push
push
sti
in
int3
add
aas
xor
or
add
inc
movsb
and
call
cmpsb
inc
outsl
cli
cld
and
dec
jo
add
and
cmp
mov
into
test
jo
add
mov
out
jecxz
dec
add
cwtl
testl
mov
sbb
dec
test
arpl
stos
add
mov
pusha
pop
push
and
clc
and
mov
imul
pusha
addr16
push
cmp
std
fcomps
loop
mov
movsl
repz
jo
add
aas
and
jge
call
push
mov
rolb
push
dec
dec
add
aas
jle
repnz
rcr
ret
xor
or
cmp
mov
lahf
imul
popa
and
sub
mov
loopne
add
int3
aam
push
sbb
or
lock
shl
cmp
aad
inc
and
xchg
fiadds
repnz
sti
pop
js
dec
clc
push
add
mov
mov
push
add
xor
les
mov
add
loop
int3
je
jo
dec
bt
dec
push
pusha
fcoms
inc
jo
mov
subb
lea
repz
add
notb
or
pop
shrl
sub
add
or
and
ja
clc
testl
cmp
lock
repnz
add
and
push
push
hlt
loopne
pop
cld
sub
dec
add
adc
or
dec
je
mov
call
dec
cmp
add
jmp
enter
push
push
sub
push
cmp
cmc
push
jne
pop
loopne
rol
sub
jns
add
sub
mov
daa
sbbb
les
xor
jge
mov
adc
rcrb
movsb
and
adcb
jns
cmp
lret
jbe
pop
lods
cmpsl
pop
fsubrl
arpl
and
sbb
jno
mov
ret
or
xor
sub
xchg
sysret
popa
cmc
mov
add
cmp
xor
pusha
and
ja
lock
loopne
add
mov
pop
cli
push
mov
clc
xchg
add
repnz
mov
mov
es
mov
cmp
add
and
adc
mov
pop
shr
jecxz
inc
das
andb
repz
push
loop
das
add
fidivrs
outsl
cmp
push
add
filds
arpl
or
add
or
lcall
mov
xchg
into
inc
push
daa
insl
add
jmp
jmp
loop
sahf
adc
packuswb
or
test
pushf
jmp
test
bound
add
popf
mov
mov
or
out
xor
push
push
in
aad
in
fbstp
int
cmp
push
out
cmp
xchg
dec
add
pusha
mov
std
xchg
jmp
lahf
test
or
push
mov
jp
mov
out
inc
dec
and
pop
ja
dec
mov
cmpl
js
cmpb
sbb
shrb
add
mov
loopne
add
inc
pop
jg
jge
adc
add
jecxz
xor
xchg
rol
lock
in
ss
xchg
les
imul
pop
faddl
and
aam
add
adc
arpl
mov
dec
cld
jmp
fcoms
sbb
call
mov
mov
scas
sub
xchg
xchg
add
push
sti
cmp
and
add
ret
pop
mov
add
outsl
in
loopne
into
cmp
mov
or
add
ret
or
xor
xor
sub
jmp
cli
or
fwait
iret
jns
push
jg
add
add
ljmp
loopne
popf
cmp
dec
scas
and
repz
loopne
pop
xor
or
aaa
nop
jbe
xor
add
xor
push
add
imul
pop
and
xchg
int
lcall
jecxz
call
sbb
cmp
add
push
or
push
and
add
lods
mov
add
lahf
inc
addb
pop
in
out
lret
push
or
or
or
pusha
imul
or
iret
jmp
jg
sub
add
sarb
pop
popf
mov
jg
je
add
rolb
jnp
mov
adc
mov
repz
and
clc
xor
mov
xchg
fwait
add
in
jge
cmp
push
ret
popf
push
pop
mov
cmp
iret
dec
xchg
add
arpl
push
add
jb
add
in
shr
mov
cmp
test
mov
lock
sbb
lret
insb
add
mov
outsb
add
hlt
inc
mov
jmp
dec
test
lret
mov
sub
add
xor
cmpsb
clc
aam
pusha
imul
pop
push
fcoml
sbb
add
push
adc
out
add
xor
in
dec
loopne
shrb
push
mov
shll
dec
ljmp
add
call
mov
jbe
ss
add
call
cld
push
push
add
sub
rcrb
mov
sbb
repnz
add
jnp
clc
inc
or
loopne
or
aas
push
psubd
and
add
int3
call
add
xchg
push
rcrb
ret
sbb
incb
push
nop
in
push
mov
dec
pop
shlb
js
jl
add
push
xchg
call
jbe
add
jnp
stos
dec
fmull
int3
ljmp
in
lahf
push
arpl
lods
pusha
or
cli
inc
mov
adc
adc
jecxz
adc
fchs
dec
push
mov
dec
js
cmc
lcall
inc
sbb
wbinvd
adc
aaa
loopne
lods
xor
leave
test
or
pop
xchg
movb
fldl2e
stos
push
jecxz
test
movsb
push
add
mov
nop
daa
lock
add
lock
xor
lds
mov
xor
fnsetpm(287
dec
je
pop
lock
lret
js
xlat
lods
jp
add
leave
fcom
test
and
add
insb
inc
addb
pop
mov
jge
sub
ficoml
je
lcall
add
pop
adc
push
pop
pop
sbb
mov
and
pop
dec
gs
add
push
stc
mov
js
mov
pop
push
adc
lods
add
or
clc
or
movsl
sbb
sub
adc
xor
inc
subb
add
add
adc
test
xor
jbe
or
call
adc
dec
rcrl
enter
cltd
sbb
and
push
lcall
cwtl
dec
pushf
xchg
lock
js
xor
mov
add
jb
lcall
cmpsb
push
inc
add
and
add
mov
fs
js
cld
mov
std
inc
mov
add
adc
xor
sub
mov
test
add
mov
pop
mov
push
rolb
or
add
sbb
test
mov
xor
push
rcrb
jl
sub
adc
or
leave
push
hlt
out
dec
add
out
incb
mov
sbb
inc
adc
mov
add
sub
mov
es
or
xchg
pop
jle
sbb
sub
add
jno
rorl
dec
push
les
mov
cmp
push
add
lds
or
inc
xor
subb
sbb
xchg
arpl
adc
insb
cmp
adc
stos
cmp
pop
add
clc
add
lods
mov
adc
add
fists
jbe
cmp
scas
push
and
jg
xor
mov
sti
dec
roll
aas
daa
pusha
adc
mov
ret
adc
pop
imul
outsl
mov
arpl
jbe
mov
sbb
add
push
push
jb
outsl
addr16
popa
insl
sti
repz
add
cmp
test
adc
fs
jns
jne
jle
clc
fisttpl
mov
or
cmc
cli
int
out
pop
pop
hlt
ja
mov
cmpsb
mov
push
sbb
xor
gs
outsl
int3
add
arpl
daa
test
add
inc
mov
inc
push
push
mov
call
icebp
hlt
dec
and
insl
gs
add
pop
outsb
sahf
repnz
add
fstpt
cs
cld
jg
and
inc
loopne
repz
add
or
jmp
pop
incb
mov
jnp
daa
add
or
dec
fldl
or
pushf
add
xchg
mov
mov
in
loopne
mov
and
push
pop
dec
add
les
add
pop
enter
clc
jle
and
push
push
add
jne
jmp
rolb
dec
inc
hlt
fdivrl
mov
jge
adc
push
or
or
loope
or
or
dec
add
test
das
punpcklbw
jo
cmpsb
or
push
sbb
pushf
in
mov
sbb
mov
push
push
bound
add
fldl
inc
pop
or
inc
andb
jmp
add
pusha
mov
or
sub
cmp
add
mov
in
add
push
in
lods
add
fs
pop
pop
sub
clc
scas
std
cli
add
jecxz
jno
fs
mov
push
cmc
adc
outsl
fmuls
add
mov
adcl
cmpsl
pop
inc
xchg
or
add
xchg
lock
add
shlb
ljmp
dec
jge
mov
int3
ljmp
xor
dec
mov
hlt
lds
sub
rclb
mov
lea
divb
add
jne
pop
sbb
fiaddl
stos
into
out
lock
cld
fwait
add
inc
call
lahf
add
jne
fs
and
js
push
adc
hlt
pushf
push
cmp
roll
sub
cmp
add
jge
inc
add
test
dec
sub
push
add
fsubrl
adc
icebp
test
into
mov
rcl
and
mov
jecxz
pop
push
xchg
add
xchg
mov
push
inc
call
cmpsb
and
xchg
add
push
movl
cmp
dec
add
cmp
add
cmp
cmpb
mov
rorb
push
add
out
in
popf
add
jo
inc
je
ret
ja,pn
jl
add
jg
fwait
push
imul
mov
sbb
leave
jecxz
lea
and
call
mov
add
mov
jo
sub
insb
clc
shl
int
test
jge
dec
je
fadds
cmp
lock
or
sbbb
hlt
in
add
jo
insb
stos
sbb
push
clc
add
movsl
sbb
addr16
add
sbb
addb
xchg
pop
mov
add
and
pop
js
orb
ja
sbb
pop
sub
loope
stos
cmp
or
adc
lcall
pop
pushf
mov
or
sar
ljmp
add
jle
push
lahf
es
aad
out
add
and
in
push
push
mov
movsl
loop
outsb
sub
test
stc
add
fisttpll
xchg
outsl
fiadds
and
pop
mov
data16
add
outsb
jne
push
push
inc
setg
cs
mov
sbb
cmp
push
lds
add
sub
lods
jo
add
xchg
scas
dec
repnz
push
loopne
add
cmp
and
sbb
into
add
in
push
mov
fbld
scas
pop
or
sarb
add
pop
xlat
add
insl
pop
or
mov
sbb
and
lods
sarb
xor
push
sub
add
and
push
cmp
mov
lea
mov
xchg
dec
icebp
sub
out
jo
add
repz
push
add
sbb
adc
sbb
sbb
add
or
cmp
int3
push
add
daa
cmpsb
jo
add
sar
cmp
roll
movb
jmp
nop
pop
add
js
movsl
and
jle
mov
addl
push
cmp
jmp
pushf
xchg
pusha
inc
pop
add
cmp
add
out
imul
push
iret
sti
movsl
pushf
add
add
jns
jecxz
adc
xor
inc
pop
das
push
jbe
xor
mov
sbb
loopne
loop
add
xor
subps
push
and
sti
testb
mov
inc
nop
sub
mov
pop
pop
mov
adc
lcall
rorb
scas
add
aam
inc
mov
cmp
pop
rcr
inc
sbb
add
push
repz
mov
cmp
aam
lret
in
hlt
and
jl
inc
inc
pusha
orl
add
enter
loopne
fwait
lods
add
nop
mov
out
xchg
into
sub
outsl
dec
pop
ret
test
mov
pop
bound
lret
lret
and
or
add
adc
je
scas
test
dec
lds
adc
stos
add
or
pop
add
xor
fldenv
call
xor
leave
jno
dec
jnp
mov
pop
in
xchg
in
push
pop
sbb
aaa
cli
in
cwtl
add
pop
xchg
sahf
shlb
pop
fiadds
fsubl
xchg
adc
mov
fs
cltd
fisubrs
test
jp
inc
nop
cmp
hlt
fnsave
movsb
adc
movsl
adc
or
mov
aas
cli
sub
flds
stos
push
call
pop
jp
mov
loopne
sub
adc
adc
dec
pusha
xlat
sbbb
imul
jo
cmp
scas
add
lds
pusha
lods
xor
add
adc
add
decl
and
add
xor
lock
xchg
inc
sbb
dec
scas
shl
add
lock
xchg
pop
push
aam
iret
mov
dec
das
clc
mov
push
movsl
pop
add
call
add
test
out
in
lods
enter
or
or
les
cld
flds
xchg
iret
inc
and
add
sbb
or
or
out
pop
cmpsl
xchg
dec
pop
and
int
mov
xor
pusha
or
stos
insb
loopne
rorl
loope
jbe
jp
fldl
add
mov
add
add
pop
dec
sbb
bound
or
add
push
outsb
call
dec
mov
push
xlat
cmp
xchg
jp
clc
scas
lods
clc
add
imul
mov
mov
pop
mov
and
pop
mov
adc
xor
cmp
cwtl
cmpsl
insb
cmp
stc
mov
or
push
or
ret
mov
pop
in
inc
add
add
jmp
imul
hlt
cwtl
inc
add
pop
int3
in
jp
adc
test
call
add
jo
xor
mov
gs
add
ret
add
sti
mov
ds
add
inc
mov
add
xlat
inc
mov
shr
mov
call
nop
or
and
cmp
sarb
add
jbe
xchg
add
lret
jge
test
jno
insb
sbb
or
icebp
pop
pop
push
mov
vshufps
add
pop
mov
add
dec
stos
dec
bswap
jb
incb
imul
add
ret
mov
mov
and
lret
repnz
add
or
pop
aad
movsl
add
imul
cmpb
push
xor
mov
pop
pop
xlat
pop
rclb
jmp
test
das
lret
popf
add
outsb
pushf
inc
in
pop
pop
add
adc
ficomps
pop
mov
push
adc
es
scas
rcl
jbe
jns
clc
xor
dec
sub
xor
mov
jge
lar
mov
inc
cmpb
add
scas
push
shr
lock
add
mov
loope
cmp
xor
sahf
or
popf
paddsb
sbb
inc
mov
pop
lock
pop
dec
or
hlt
mov
mov
in
pop
fs
mov
roll
dec
stos
cmpsl
out
mov
mov
adc
adc
mov
subl
or
add
pop
inc
sbb
add
test
xchg
or
and
add
inc
adc
push
sbb
fnstsw
sahf
sti
or
push
cmpsl
js
inc
add
iret
mov
out
lods
aad
add
nop
add
add
mov
or
pop
call
jmp
jl
shlb
adcl
pop
cwtl
dec
aas
add
xlat
pushf
lea
je
add
cld
enter
hlt
movsb
sti
pop
mov
loop
mov
and
aas
fists
adc
xor
ret
insl
mov
add
aad
in
icebp
loope
or
std
mov
ds
add
pusha
jecxz
cmp
and
add
sbb
fwait
cli
testl
adc
cs
add
and
std
add
lods
loopne
pop
bound
add
ret
push
xchg
mov
imul
mov
cmp
pop
add
xchg
xor
sbb
add
push
ret
sti
pop
ja
cmp
enter
push
push
sub
and
rcr
add
sub
roll
mov
test
out
cmp
pop
push
in
jno
add
add
jl
add
stos
in
add
aam
hlt
push
sbb
fisubs
push
xor
cmpsl
rorb
imul
pop
cwtl
cmp
call
xchg
or
inc
ret
popf
dec
imul
jns
xchg
pop
add
leave
sbb
mov
and
stos
pop
push
lret
mov
pop
add
test
push
enter
add
inc
xor
cld
outsl
lock
movsb
push
push
add
pop
int3
sbb
nop
mov
sarb
out
aaa
inc
cwtl
mov
lret
ss
std
add
pop
dec
inc
inc
and
add
mov
add
xchg
mov
in
add
or
and
add
cmc
push
adc
iret
lahf
dec
in
inc
sbb
add
insb
sub
add
lods
je
shrb
cwtl
ds
addr16
mov
lods
cmp
sahf
clc
ror
push
or
fwait
inc
and
iret
aaa
and
xadd
push
mov
out
jge
add
cli
add
dec
xchg
mov
add
loop
dec
shrb
sbb
add
xor
mov
es
push
mov
sbb
cmp
xor
mov
dec
negb
sbb
jnp
roll
in
xchg
mov
adc
add
cmc
addb
pop
pop
add
mov
loopne
pop
dec
jns
add
xor
jecxz
add
clc
je
mov
xor
rcl
sbb
push
ficompl
pushl
sti
cmp
jne
mov
inc
inc
std
push
add
shrb
sahf
add
shrb
sbb
cmpb
xchg
rcll
xor
inc
or
lock
int
cmp
add
add
jno
pop
xchg
shl
jo
jne
add
and
enter
add
xor
adc
pusha
sub
xor
jnp
sbb
and
test
add
cmp
pop
sbb
push
sbb
push
add
add
cmp
js
in
aad
pop
movsl
add
popf
cmc
insl
or
int
arpl
ss
leave
dec
shll
add
dec
pusha
lret
add
jns
out
xchg
pusha
mov
stos
pop
xrelease
lea
jns
cmp
pop
add
std
xor
add
cmc
loopne
add
or
js
or
adc
sub
icebp
jecxz
shrb
call
or
fs
test
add
insl
lds
add
xchg
cli
andb
pop
loopne
sbb
dec
mull
mov
jo
pop
ss
ljmp
push
subb
shll
into
cli
cmp
jae
lea
loopne
cmc
movsb
nop
stos
add
pop
out
jb
pop
add
push
lldt
incb
inc
sbb
loop
or
dec
flds
xchg
and
add
sarb
out
stos
dec
xor
ja
jb
add
push
xlat
and
add
jb
shrb
inc
in
stos
loopne
add
dec
mov
add
push
mov
add
ror
jb
aas
fimull
mov
xchg
xlat
add
cmp
shrb
sub
sbb
jl
push
out
repnz
sbbb
push
aad
add
pop
sarb
jl
cltd
daa
cmpsl
add
loopne
dec
add
jp
pop
into
fadds
xlat
ds
aas
add
dec
push
sahf
add
mov
jl
js
mov
lcall
aam
add
and
xchg
in
or
js
add
outsl
out
or
out
movsb
add
add
cmpb
negl
cmc
and
push
mov
push
aam
xor
pop
sbb
add
add
adc
cmp
mov
int
or
stos
leave
lds
fdivrp
add
dec
add
js
in
rolb
fimuls
sub
dec
movsb
adc
jg
xlat
and
lods
mov
lea
add
pcmpeqd
sar
movl
ljmp
mov
aam
out
or
and
jle
scas
add
mov
enter
and
sbb
popa
mov
idiv
rcrb
stos
xor
andb
mov
aas
dec
jns
add
sahf
nop
xchg
aam
inc
orb
sarb
fisubrl
daa
cltd
add
push
mov
inc
add
xlat
jp
loopne
add
leave
mov
mov
sub
cltd
and
outsb
add
inc
lods
loopne
xchg
mov
xor
out
add
roll
add
enter
add
adc
rcrb
sahf
add
pop
inc
add
test
push
xor
int3
and
mov
jg
add
add
inc
pop
and
mov
add
jecxz
add
xchg
aas
out
inc
mov
cmp
add
lds
add
popa
mov
mov
test
add
fisttps
mov
out
imul
add
sub
pusha
iret
fadds
push
outsb
mul
inc
sqrtps
lahf
rolb
addl
cmp
lods
sub
sbb
testl
add
popa
aas
and
ret
cmp
int
dec
push
andb
add
add
add
scas
lods
mov
sahf
push
dec
fadd
test
loopne
add
mov
pop
lea
shrb
adc
loope
adcb
adc
jle
pop
fs
xchg
push
xchg
add
mov
mov
or
test
mov
jmp
jg
idivb
and
pop
sbb
out
clc
aam
pop
sbb
imul
in
imulb
fld
add
adc
jmp
push
jo
add
cmpsl
lret
adc
daa
shlb
add
into
mov
shrb
roll
sti
out
arpl
int3
sbb
pop
mov
loop
pop
or
xor
aas
dec
pop
outsb
mov
subb
xor
push
sbbb
cltd
sub
stc
mov
dec
lods
fmull
je
aam
les
test
mov
int3
lods
rcl
ljmp
add
sub
fisubrs
push
sbb
data16
loop
mov
cmc
sbb
sarb
js
pushf
popa
jbe
inc
or
popf
pop
adc
sub
inc
mov
leave
scas
add
icebp
es
cwtl
add
pushf
jp
pop
push
divl
add
enter
add
add
mov
mov
loopne
cs
ljmp
sub
incl
popf
jne
lcall
mov
adc
iret
push
sbb
and
mov
push
sbb
icebp
sahf
orb
pop
cmpsl
std
cltd
mov
fistl
enter
xchg
stc
lcall
add
call
cmp
xor
add
xor
xor
pop
out
je
adc
add
xor
ret
dec
pusha
es
xchg
sub
push
push
and
test
add
ret
mull
or
adc
sbb
lahf
jb
add
pusha
jo
mov
cmp
and
inc
add
mov
add
adc
adc
push
addb
iret
or
or
popl
adc
and
add
fstp
xor
push
add
dec
add
xor
clc
cmc
add
xchg
adcb
xor
push
sti
addr16
pop
add
xbegin
add
mov
scas
mov
push
jae
pop
sahf
jb
jo
add
sub
shr
mov
cld
add
repnz
outsb
and
fidivl
popa
add
push
cmp
scas
addb
das
push
into
or
sbbb
cld
add
icebp
mov
data16
add
push
push
push
sbbl
xor
cmp
rep
mov
inc
out
mov
jge
or
cmp
sbb
or
inc
add
lds
pop
add
sub
push
add
push
pop
sbb
dec
sbb
pop
sbb
add
daa
adc
xchg
xor
add
clc
andl
add
mov
xchg
jle
sbb
cmp
ret
push
das
cmp
mov
jl
dec
mov
leave
insl
adc
push
pushf
in
mov
out
sbb
add
add
sub
mov
mov
cld
add
adc
aas
adc
sub
lods
cmc
lret
add
and
repz
filds
iret
ljmp
add
push
or
lret
pop
mov
fwait
rcrb
add
xchg
in
mov
rcrb
cwtl
pop
inc
dec
dec
sbb
adc
jl
leave
mov
in
mov
enter
and
in
mov
add
or
sbb
lea
inc
dec
sub
jle
add
jb
mov
hlt
aas
pushf
add
push
cmpl
lock
add
jbe
add
pop
cwtl
nop
loope
push
loop
lret
mov
aaa
clc
mov
mov
jae
shlb
sbb
aas
dec
inc
les
lret
gs
add
imul
add
sub
enter
rcrb
incl
xchg
xchg
jmp
add
inc
sub
or
nop
sub
rolb
js
push
aas
adc
lea
pop
mov
inc
ret
xor
dec
or
pop
and
inc
or
add
lahf
pop
orl
add
mov
rcrb
mov
ret
add
xor
mov
add
dec
adc
xor
inc
inc
mov
loopne
add
dec
repz
add
xchg
and
nop
jp
jecxz
add
sub
out
add
dec
cwtl
push
push
add
dec
push
cmp
push
xor
fs
rolb
mov
dec
add
jmp
or
inc
rcll
subl
lods
ljmp
add
or
cwtl
add
push
inc
inc
popf
mov
lar
push
test
int
or
shrb
lret
pop
pop
sbb
rolb
mov
mov
add
lea
push
jmp
push
mov
leave
dec
sbb
stos
push
sub
stos
cmp
ds
fs
roll
adc
lea
das
add
pop
or
cmp
psubb
pop
add
fsubrs
in
inc
add
jp
popa
testb
or
aam
test
inc
jmp
pusha
jne
push
cwtl
pop
cmpl
add
jle
xorl
and
add
pusha
dec
sub
ljmp
xchg
add
cld
pop
scas
push
or
add
movb
addl
xchg
xor
jp
add
push
stos
je
lea
mov
push
mov
sbb
inc
shrb
add
movb
mov
lcall
jb
jmp
sbb
pusha
jb
add
sarb
test
outsb
mov
add
mov
inc
inc
dec
cmp
bound
inc
adc
rolb
pop
out
aam
dec
roll
in
jne
jno
add
xchg
mov
push
add
shlb
add
xchg
push
dec
repz
push
jae
popa
fisttpl
inc
cmpsl
cmp
and
jmp
rorb
add
cmp
add
call
rcll
add
and
pop
std
in
add
rorb
mov
fwait
mov
xor
add
int3
cs
ss
andb
dec
inc
test
fsubl
shrb
pop
int
iret
adc
ljmp
in
insl
sub
das
xorb
loopne
jl
add
mov
and
mov
scas
push
les
rol
je
cmp
add
jno
inc
inc
adc
outsl
std
and
adc
add
roll
jno
and
sub
inc
mov
jp
add
mov
or
jne
cmp
jae
push
jns
xchg
divl
add
les
int
cmp
sbb
and
push
testb
clc
jmp
addl
sub
outsl
push
test
jne
fcmovnbe
xchg
pop
popa
pop
adc
mov
add
addb
mov
aas
push
xor
in
mov
sbb
incb
es
ljmp
les
sbbb
lds
cmp
ret
out
add
shrb
roll
jno
add
and
jnp
enter
push
adc
cld
xchg
jecxz
add
outsb
sub
jb
or
es
add
pop
repnz
movsl
lcall
push
stos
das
stc
inc
lret
jo
js
sti
add
sbb
xor
paddusw
mov
jne
mov
push
xor
add
and
xchg
int3
push
call
add
rcll
shlb
xchg
mov
sub
push
mov
cmc
stos
mov
mov
pop
shr
lahf
or
jne
cmp
mov
fcomip
shrb
pop
test
and
push
mov
add
xor
xor
jmp
lea
sub
mov
adc
scas
mov
stc
test
jbe
sub
popfw
add
mov
cmp
jecxz
lret
sbbl
je
inc
das
or
lahf
leave
gs
cmp
ja
cwtl
je
jbe
add
and
adc
pop
mov
adc
add
jmp
and
sub
xchg
add
add
mov
dec
xchg
jmp
addb
call
mov
pop
xchg
or
inc
sbb
push
lret
add
dec
push
les
push
push
inc
xor
jb
fcoms
and
push
ds
loope
mov
add
cmp
jmp
xchg
mov
imul
add
or
pop
aam
cld
xorb
cmp
std
add
add
push
inc
pop
mov
outsl
add
imul
stos
out
test
sub
jle
dec
cmpsb
inc
movsl
aaa
ret
add
pop
nop
addl
leave
cmc
hlt
xor
cmp
mov
dec
mov
movsl
fldenv
mov
lock
lret
es
aad
fsubs
icebp
out
decb
dec
add
aad
popf
push
xchg
hlt
add
jbe
jmp
sub
test
pop
scas
adc
insb
aaa
mov
nop
lock
je
sub
sbb
es
add
xchg
inc
add
xor
push
sbb
or
and
mov
mov
jne
mov
add
or
pop
sbb
adc
lods
lret
pop
pop
push
mov
pop
or
nop
call
fstps
jmp
cmc
scas
xor
dec
push
ja
mov
cmp
push
xchg
into
sub
mov
adc
imul
cs
test
jo
add
xor
add
push
sub
inc
mov
test
stos
fcomip
cmp
mov
cmpsb
sub
add
outsb
outsl
ja
jne
xor
add
add
dec
das
push
add
mov
and
cmp
stos
jbe
and
sbb
sbb
dec
mov
mov
xor
and
les
add
add
cmp
inc
push
and
inc
das
fisttps
nop
andb
mov
daa
add
inc
push
xchg
pmuludq
jecxz
pop
mov
imul
in
ds
sbb
mov
xchg
add
dec
xor
enter
add
popa
push
inc
daa
mov
jg
add
xor
adc
cmpsl
imul
ja
add
cli
mov
adc
cmpsb
add
dec
leave
scas
mov
stos
movzbl
add
imul
lea
or
push
aam
repnz
sub
ljmp
test
jp
jle
xchg
mov
icebp
pusha
stc
das
add
push
or
clc
add
outsl
stc
test
jnp
xor
cs
lods
lock
sub
rolb
outsl
into
dec
cmp
fldl
jnp
xor
mov
popa
sarl
add
aaa
mov
inc
add
lcall
imul
jbe
add
cbtw
sub
push
add
adc
out
add
dec
je
bound
add
hlt
jne
stc
add
gs
int3
or
add
je
test
dec
mov
ljmp
imul
add
cmp
aam
subl
cwtl
mov
jmp
jge
add
jns
mov
std
hlt
pop
mov
dec
push
or
jle
cmp
push
pusha
push
sub
cmp
add
test
cs
xor
cld
jle
lahf
es
mov
call
push
nop
or
sbb
or
push
add
push
je
inc
mov
out
add
and
add
mov
pushf
pusha
xchg
inc
or
inc
add
int3
add
push
out
sub
push
rol
repnz
mov
sbb
clts
xorb
je
call
sub
adc
sub
xchg
inc
scas
lock
push
or
cmpsl
pop
ret
dec
addb
cmc
cmpl
adc
push
inc
xor
inc
cli
add
add
sub
inc
les
sti
push
or
sbbb
and
dec
arpl
fwait
imul
xchg
call
mov
xchg
pop
xor
mov
repnz
dec
sbb
loopne
cmp
and
add
fs
inc
push
mov
mov
add
jg
imul
mov
add
jmp
sub
xchg
add
sub
cmp
push
add
add
fs
in
push
and
es
in
jp
pop
inc
std
jb
mov
outsl
or
dec
insb
push
mov
adc
xor
dec
test
pop
push
out
dec
loopne
mov
push
jle
cmp
rorl
mov
sti
inc
cmp
mov
dec
mov
or
inc
movsb
or
and
jg
add
ja
push
push
not
das
rolb
or
add
lahf
cmp
lock
or
loope
sub
arpl
shrb
clc
add
xor
nop
xor
cld
cmp
push
cmp
add
mov
adc
ret
and
lds
arpl
lock
shlb
jle
imul
add
adc
sahf
lsl
pop
and
mov
adc
adcl
ja
cmpb
add
mov
fstps
insb
mov
mov
stc
sbbl
fs
insb
pusha
lea
fwait
mov
push
outsl
jb
imul
in
lahf
or
ja
repz
popl
loop
outsb
add
jg
rcrl
shr
jl
add
add
pop
cmp
add
pushw
cmp
mov
into
inc
mov
imull
mov
mov
mov
jne
sbb
push
in
decb
jbe
mov
mov
cmp
add
add
sbb
xchg
sbb
lea
xchg
jbe
dec
add
sbb
push
add
jnp
mov
or
cltd
idiv
fldl
inc
lea
xchg
jns
or
iret
or
add
inc
push
inc
push
add
cld
les
inc
pop
negb
aad
icebp
dec
fisttpl
flds
cmp
ljmp
mov
mov
jle
sbb
mov
sbb
pop
pop
mov
mov
jle
sbb
in
ss
xor
int3
ret
push
rorl
adc
lods
jns
aas
or
pop
add
mov
mov
add
fsubs
and
cmp
add
out
adc
or
adc
cmp
or
ret
fmuls
add
daa
dec
add
inc
add
add
xchg
out
testb
jns
cmp
popa
imul
repnz
adc
xor
jge
hlt
ret
fcmovu
out
add
mov
fisubrs
ljmp
sbb
mov
cmp
jge
ljmp
jmp
call
or
add
mov
mov
rcll
xor
ss
add
rclb
push
cmc
mov
movsl
fnstcw
fcomps
mov
xor
dec
pop
aam
into
daa
or
push
adc
test
lea
rclb
fcomps
fs
or
cs
dec
int
mov
pop
pop
inc
add
out
fisubs
int3
inc
testb
in
test
sub
add
lods
cmpl
je
or
pop
xchg
mov
cld
or
inc
pusha
adc
call
es
incb
push
mov
pop
cli
pop
lret
and
bnd
xor
pop
xor
iret
pusha
sahf
sub
sub
and
or
adc
add
jb
gs
mov
or
inc
add
push
sbbl
and
mov
pop
add
lock
call
add
mov
loope
mov
sbb
push
mov
add
fdivs
mov
pop
mov
pop
mov
arpl
xchg
add
add
mov
fisttps
repnz
dec
repnz
in
sbb
es
les
push
cmpl
jl
adc
lea
pop
sub
jl
add
scas
sub
xor
xchg
add
data16
inc
mov
imul
add
ret
mov
mov
add
xchg
fmull
fiadds
out
icebp
pop
cli
push
jl
out
and
inc
ljmp
add
pop
push
add
or
add
jg
sbb
sub
mov
jno
bound
incl
sbb
push
test
mov
repnz
push
aas
adc
addl
jno
and
das
sub
add
or
loopne
add
adc
xor
add
out
xchg
push
xor
aad
ret
jnp
rcl
add
repnz
aad
cs
lea
add
add
addb
subpd
mov
enter
adc
pop
pop
cmp
dec
or
jmp
jp
cmpsb
jns
add
adc
add
pop
repz
lahf
fsubr
rorb
outsb
int3
repnz
mov
sub
je
and
sbb
loopne
arpl
aas
jns
jp
or
dec
xchg
mov
mov
add
cltd
or
adc
xchg
pop
or
xor
sbb
add
adc
je
lret
add
cmp
adc
test
fsubrs
adc
xor
and
adc
cmc
jb
jno
cmp
call
dec
rcr
inc
repnz
inc
add
movsl
enter
adc
jbe
pop
adcl
adc
add
rorb
add
xchg
test
cmp
sub
pop
push
cld
mov
xchg
or
push
add
sub
mov
lods
cmpsl
push
push
or
inc
push
dec
adc
jbe
inc
int3
imul
je
inc
push
or
and
add
jmp
mov
sbb
nop
movsb
push
imul
mov
add
adc
mov
fwait
lods
xchg
mov
dec
stos
adc
ss
add
xchg
bound
int
sub
je
pop
cwtl
mov
xor
icebp
mov
mov
push
mov
cmp
roll
add
dec
gs
pusha
outsl
add
clc
mov
cmp
movsb
add
add
xor
nop
pop
les
push
mov
mov
cmp
loope
add
jge
mov
pusha
stc
popf
cmc
in
das
fadd
push
cmp
add
inc
popa
arpl
jg
add
sbb
movsb
sub
sub
jne
insl
ret
lret
pop
je
add
jno
loope
mov
mov
mov
nop
mov
test
movsl
xor
xchg
fldt
jae
adc
adc
dec
add
and
and
dec
xchg
xor
dec
push
int
add
push
dec
fdivrp
sub
xor
pop
rorb
mov
ficomps
adc
in
sbb
mov
mov
add
jns
mov
jae
add
pop
es
or
idivb
rep
enter
mov
sbb
add
adc
pop
inc
push
xlat
sub
adc
add
sbb
add
mov
xor
pop
cld
mov
cmp
out
add
lods
dec
add
cwtl
inc
pop
jns
es
dec
push
addb
dec
ret
xor
cltd
jl
test
sbb
std
lods
mov
jne
add
dec
pop
aam
adc
xchg
add
adc
dec
xchg
sub
adc
sahf
andb
add
cmpb
add
push
cmp
ljmp
lret
jmp
add
jp
fsubrl
imul
loopne
mov
xchg
add
add
cwtl
fwait
jge
es
or
rolb
add
lock
add
and
add
and
jmp
test
cmpb
add
ljmp
add
jo
icebp
pmulhuw
ret
inc
fwait
add
loop
push
add
outsl
jb
sahf
sbb
hlt
stos
popa
jns
sub
mov
sub
les
push
and
incb
sbb
jl
mov
test
ljmp
push
push
outsb
imul
outsl
ja
and
into
and
hlt
repnz
push
pop
and
mov
or
cmp
nop
push
adc
lea
xor
push
jb
pop
outsb
jae
insl
gs
incb
jne
outsl
add
and
cmp
int3
push
add
push
stos
adc
or
pop
xor
sbbb
push
and
dec
test
jo
inc
outsl
and
add
inc
in
add
enter
inc
andb
pop
in
iret
add
push
out
fs
pcmpeqd
add
shrl
dec
sub
push
jp
add
pop
add
xchg
mov
dec
imul
fists
in
faddl
mov
jp
repnz
clc
jno
jmp
aas
add
nop
je
rorl
dec
cmp
inc
add
jne
dec
js
nop
subps
xor
add
movsb
and
adc
jmp
orb
scas
adc
mov
rcl
push
mov
add
cmp
mov
xchg
js
mov
inc
iret
add
cli
or
xchg
jnp
ss
push
ds
jae
sbb
and
out
je
and
xchg
add
mov
jmp
aam
fldcw
jg
adc
push
mov
xchg
add
mov
sub
pop
sub
pop
jne
data16
cmc
inc
adc
lea
sbb
adc
pop
mov
dec
add
loopne
add
jmp
xchg
fildl
or
movsl
notb
jo
add
inc
out
roll
in
rclb
rorb
add
adc
pop
mov
sub
add
push
pop
cmpsb
or
mov
mov
sbb
cmpl
ret
and
into
mov
or
add
dec
dec
negb
shr
adc
hlt
cmp
stos
xchg
out
add
xchg
xchg
aad
int3
push
adc
add
lods
mov
mov
sub
sub
in
ds
pop
sbbb
movsl
pop
lods
sbb
fisttpll
call
jo
mov
mov
je
xchg
add
cmp
movsl
dec
xor
adc
aas
sub
cld
add
outsl
or
add
pop
sbb
mov
inc
enter
lret
or
dec
fadds
and
cwtl
adc
sub
loopne
dec
arpl
add
ds
mov
sub
int
push
mov
or
aam
pop
add
adc
sbb
sbb
xchg
pop
cs
scas
xor
jb
push
mov
adc
add
and
or
das
shlb
fwait
les
movsb
push
adc
and
inc
add
mov
mov
stos
test
test
add
mov
dec
or
mov
loopne
jo
xchg
add
adc
mov
xchg
cmp
xor
adc
clc
cmpb
andb
hlt
test
dec
lock
popa
dec
rol
mov
stos
int
inc
or
enter
add
mov
movsl
icebp
cmp
cli
mov
jp
adc
adc
dec
and
dec
pusha
sub
add
add
add
add
adc
mov
mov
xor
hlt
call
dec
push
push
or
jmp
scas
mov
pusha
cmp
aas
sbb
push
adc
pop
sbbl
les
jnp
adc
jb
shrb
call
daa
sbb
add
mov
mov
adc
pop
inc
or
xor
nop
xor
add
loop
adc
sub
subb
mov
inc
mov
shlb
push
add
divb
leave
xchg
add
inc
std
lcall
loope
in
in
sub
sub
inc
mov
add
adc
call
cld
mov
sub
inc
movl
add
popf
push
pushf
shlb
add
jae
mov
dec
add
and
enter
or
test
jbe
mov
stos
inc
add
adc
popf
add
andl
ss
add
mov
shlb
mov
popf
gs
adc
add
jns
call
add
lods
jg
fsub
and
adc
add
pop
sbb
push
add
xchg
cmp
andb
clc
dec
or
jb
jl
mov
add
leave
add
movsl
std
add
mov
push
add
adc
add
dec
xchg
das
loope
push
popa
xchg
mov
pop
inc
hlt
and
pop
xor
and
test
jb
jo
rorb
push
pop
push
mov
scas
or
add
sub
push
insb
and
or
mov
adc
incb
hlt
out
cs
pop
test
rorb
xchg
mov
add
gs
xor
xchg
mov
jns
aas
mov
pop
gs
sti
loope
sub
cmp
jmp
pop
out
mov
clc
cltd
andb
sub
and
adc
out
rorb
nop
inc
pop
pop
jae
pop
in
or
shlb
push
leave
mov
adc
add
push
je
jb
addr16
stos
shll
jmp
imulb
xor
orl
lret
mov
pop
add
sbb
outsl
insl
xchg
xor
or
sub
add
jns
jmp
cmp
and
movsb
xchg
jb
sub
add
pusha
dec
incb
cltd
xor
or
mov
andb
fs
cmpsl
add
les
cmp
cmc
cwtl
rcrb
xor
stos
jne
push
sub
mov
lock
insb
add
lods
stos
faddl
xchg
push
sbb
pop
test
loope
add
push
pop
sbb
loopne
stos
jp
add
jecxz
imul
jno
adc
clc
stos
add
xchg
and
test
push
das
mov
hlt
loop
xchg
mov
icebp
nop
leave
cmp
add
sub
adc
arpl
mov
fs
fnstcw
xor
cwtl
mov
push
gs
loopne
enter
movzwl
jmp
ret
movb
nop
das
adc
and
push
and
bound
ljmp
jb
daa
mov
mov
movsl
pushf
fisttpll
icebp
rclb
adc
add
jo
jl
lods
push
pop
fsub
lahf
outsl
nop
cmpsl
shll
aas
inc
loop
add
fnstcw
clc
mov
sub
sti
or
xchg
mov
fiaddl
ljmp
cmp
add
enter
adc
mov
sar
sub
lahf
ret
sub
sarb
or
push
push
push
push
call
add
fs
fstpl
and
push
repz
movsb
cmp
cwtl
pop
pop
scas
unpcklps
mov
dec
jns
adc
mov
jno
add
add
pop
in
mov
xchg
testl
clc
push
je
add
jbe
or
dec
push
and
dec
inc
or
jo
cmp
pop
loop
sbb
loope
mov
imul
adc
roll
cmpsl
sub
aam
pop
mov
sbb
mov
mov
ja
xchg
pop
mov
and
sbb
xor
mov
inc
mov
lret
inc
sub
xlat
sub
push
aad
push
fidivs
or
and
add
les
pop
push
push
xor
addl
mov
lods
jecxz
ja
imul
inc
sub
dec
add
popa
push
add
rolb
mov
jp
cmpsb
or
and
jb
add
pusha
nop
jnp
pop
pop
jne
mov
xor
add
shlb
xchg
inc
fwait
mov
int3
sub
ret
jns
addb
sar
and
pusha
jnp
aam
adcb
jmp
inc
mov
pop
add
pop
xor
push
xchg
call
mov
xlat
pop
in
sbbb
xor
dec
add
and
cmp
call
aam
push
add
mov
and
sbb
add
push
das
inc
shl
dec
cmp
add
xor
pop
aad
fadds
in
jns
mov
test
adc
push
sbb
in
in
inc
push
data16
shlb
je
add
xor
loop
xor
repnz
adc
add
ret
mov
hlt
add
dec
and
sub
cli
xchg
ljmp
addb
decb
add
push
loopne
add
outsb
lret
pusha
addb
mov
add
scas
mov
add
or
clc
lock
das
add
repnz
add
push
and
lahf
pop
mov
dec
mov
mov
and
push
scas
inc
jle
mov
lods
nop
adc
inc
jmp
imul
test
sub
sub
jne
les
xor
outsl
sti
pop
popf
push
mov
scas
add
loopne
mov
adc
sbb
scas
pusha
and
std
adc
ja
add
and
outsb
dec
aam
mov
add
sub
adc
xor
das
in
add
mov
xchg
add
cmp
add
daa
jne
rol
sbb
fcompl
sbb
mov
aas
int
xchg
daa
add
jecxz
add
scas
pop
and
xor
in
inc
mov
testb
mov
push
btc
xchg
jl
xor
jbe
test
cmp
xchg
and
cltd
add
in
jmp
movb
add
xor
inc
pop
sbb
add
push
and
sub
call
icebp
fcoms
inc
sbb
push
cli
mov
xchg
outsl
push
mov
jp
adc
jbe
pusha
cmc
sbb
les
adc
sbb
mov
repz
add
lods
testl
inc
scas
jp
ds
fildl
pusha
or
pushf
jge
adc
cwtl
push
push
sbb
test
add
cs
ret
xor
xchg
mov
mov
cmp
push
inc
imul
add
imul
mov
insb
movsl
loop
jb
or
enter
and
add
adc
jae
add
dec
push
xor
mov
pop
add
add
mov
push
js
sbb
sbb
pop
push
add
push
add
dec
outsl
insb
mov
mov
jns
add
cmp
lcall
or
add
ja
test
push
ficoml
add
movsb
mov
add
jae
stc
push
mov
outsl
mov
add
push
gs
push
call
dec
cmp
cmpl
test
add
sbb
jne
inc
scas
aam
xor
jmp
aaa
loop
nop
aas
call
adc
sbb
addl
push
lock
dec
inc
sbb
inc
mov
or
add
sub
test
imul
repz
add
sarl
popa
fcmovb
dec
cmp
loope
xor
fiadds
mov
popf
divl
addb
shr
or
push
jmp
add
pop
sbb
mov
and
push
xchg
dec
enter
jb
inc
cmp
cmp
jmp
add
mov
enter
pop
dec
adc
add
adc
scas
loop
subb
dec
mov
xor
clc
jl
sbb
sbb
inc
sarl
cwtl
add
dec
sub
aas
sbb
sti
addb
rorb
jmp
adc
mov
sub
jne
idiv
lods
xor
add
cmp
bound
leave
cmpsb
dec
sti
inc
adc
mov
sub
dec
shlb
push
and
xor
inc
mov
push
add
testl
add
and
sbb
or
dec
sbbb
pop
or
sbb
cmp
sub
and
push
in
mov
jae
mov
cmpsb
xchg
jno
add
adc
sti
orl
sbb
hlt
sar
mov
lds
test
jb
pop
or
or
push
add
data16
aad
jb
repnz
jl
adc
xor
cmp
mov
fildll
testb
fcmovnbe
mov
jle
das
sbb
jnp
clc
jo
xchg
xor
fs
add
mov
mov
push
mov
xor
lcall
fs
lods
aaa
xlat
mov
ror
es
sbb
mull
aad
cli
add
add
add
mov
push
jne
lods
movsb
ret
inc
sbb
dec
daa
adc
hlt
add
mov
pop
enter
and
aaa
pop
inc
dec
sarb
pusha
xchg
cmp
add
call
sbb
outsl
add
xchg
test
and
inc
data16
cmp
lods
mov
pop
test
add
popa
push
lock
stos
add
decl
jg
cmp
rol
or
cmp
cmp
clc
das
pushf
hlt
add
cmp
xor
add
or
adc
and
mul
jp
adc
push
inc
or
mov
lock
call
cmpsl
and
mov
xchg
pop
movsb
arpl
jo
icebp
mull
in
add
addr16
lods
and
nop
sub
andb
mov
xorb
repz
sti
xlat
nop
lret
pop
or
in
push
and
xor
xchg
sub
xor
jno
out
adc
xchg
push
outsl
dec
scas
inc
dec
fadds
mov
and
pop
jle
inc
fwait
sub
push
add
sbb
cmpb
fiaddl
leave
pop
adc
inc
add
jns
imul
cmp
xor
flds
mov
mov
pop
jbe
pop
cmp
shl
xchg
pop
mov
fs
dec
flds
sti
sub
aas
jmp
add
loopne
cmp
cmpsl
gs
test
cmp
push
cmp
hlt
xor
rsqrtps
cs
ror
sbb
ds
andb
ficompl
push
sub
jae
add
inc
mov
js
sbbb
add
cwtl
jp
xor
cmp
push
push
je
aaa
add
jg
or
bound
fists
shrb
movsb
cmpsl
pop
dec
cwtl
mov
jne
pop
enter
fsubr
inc
sbb
adc
and
rolb
cs
imul
xchg
popa
mov
cmp
scas
push
jg
mov
lods
cmp
inc
mov
sub
mov
nop
cmpb
jle
xor
scas
cmc
ds
or
or
cwtl
decb
pushf
pop
sub
loope
test
fisttpl
loope
cmp
pop
or
add
ss
or
pop
pop
push
xor
sub
mov
mov
in
ds
adc
mov
cmp
lods
or
dec
inc
add
dec
and
dec
xchg
cmp
faddl
mov
add
scas
and
pop
and
push
and
dec
push
cmp
int3
adc
add
ret
cmp
mov
lock
cltd
or
dec
cmpsb
push
mov
rcl
add
enter
shll
add
mov
mov
adc
pmullw
stc
inc
sar
cld
mov
and
sub
psadbw
pop
dec
stc
iret
or
and
and
hlt
jg
mov
xor
dec
add
xchg
sub
push
cli
add
enter
xchg
call
push
jne
pop
push
xchg
cwtl
sub
cvttps2pi
xchg
add
leave
xor
lahf
push
js
das
inc
insb
popa
sbb
cmp
push
and
xchg
pop
dec
push
dec
sub
cmp
and
pop
roll
xlat
outsl
das
sbb
xor
inc
cld
bound
push
aas
mov
hlt
push
in
jge
add
jecxz
test
mov
stos
int
in
sub
adc
xchg
sti
push
pop
add
add
jnp
enter
cmp
popf
jp
push
mov
cmp
addr16
ficoml
push
xchg
les
cmp
push
fdivr
out
movzbl
sti
mov
addl
mov
xchg
jbe
sub
idivb
add
adc
sbb
inc
clc
sub
shr
jl
adc
or
jb
shlb
sbb
outsb
sub
xlat
cwtl
sbb
data16
pop
add
sub
mov
lret
call
mov
cld
int
addr16
sti
leave
push
shl
mov
orb
jl
lcall
inc
shrl
call
push
cmp
test
jl
add
mov
lcall
je
push
add
push
jb
and
lock
mov
xchg
test
sub
stc
sti
sbb
clc
incb
xchg
push
xor
fistl
je
outsl
sub
sub
push
pop
xor
ljmp
push
lea
add
mov
loope
mov
pop
xchg
sbb
mov
xchg
push
mov
stos
inc
jp
adc
lea
stos
pop
mov
dec
xor
pop
les
lods
pop
sub
dec
dec
aam
pop
pop
leave
mov
pop
mov
cld
lock
mov
cwtl
test
mov
adc
lret
mov
repnz
xor
enter
rolb
mov
add
aas
lea
sahf
xchg
leave
stos
test
push
add
pop
and
and
add
lahf
cltd
sub
hlt
jo
enter
movsl
or
pop
and
mov
mov
loopne
fisubrl
js
push
cmpb
cli
aas
inc
add
cwtl
or
mov
xor
dec
movsb
push
cli
add
ljmp
rcrl
lds
mov
testb
cvttps2pi
scas
dec
mov
lods
pop
lock
dec
into
and
add
sbb
jmp
stc
bswap
xchg
std
fsubs
movsb
cwtl
adc
push
sub
pextrw
pop
pop
or
add
enter
dec
jp
xlat
paddsb
hlt
shl
fs
add
inc
push
or
add
add
add
int3
cmp
std
test
jbe
add
xchg
adc
insb
inc
add
mov
ret
lock
xor
pop
clc
inc
push
jns
add
push
pop
stos
lahf
mov
inc
sahf
inc
in
mov
imul
and
adc
out
lret
fwait
or
fdiv
or
test
xchg
push
mov
lcall
orl
jno
insl
call
add
clc
mov
stc
dec
in
mov
scas
inc
pop
mov
leave
adc
sub
jno
repz
js
orl
cmp
pop
stos
and
and
imul
inc
pop
out
adc
sbb
fs
inc
mov
les
cld
and
test
int3
and
inc
movsb
and
add
mov
test
rolb
lock
fsubrs
mov
cld
sub
push
add
stos
sub
inc
add
push
subb
sub
and
jne
cmpsb
add
inc
arpl
or
jae
enter
aas
into
es
insl
or
roll
gs
mov
inc
jl
es
cmp
jle
push
add
sub
add
xor
mov
fldl
push
sbb
mov
or
fistpl
dec
sub
add
ret
punpcklwd
test
add
das
push
lcall
les
mov
sbb
and
add
push
insl
or
insb
inc
add
shrl
add
movsl
or
inc
loopne
push
insl
jno
imul
aas
mov
add
iret
aam
add
js
jge
pop
mov
inc
lcall
push
push
or
dec
dec
adcb
mov
pop
mov
fmull
inc
add
pop
rorl
xor
mov
add
cwtl
xchg
call
test
int
rclb
nop
inc
in
mov
jno
or
adc
and
cmp
leave
les
mov
and
inc
in
movsb
fildl
xor
add
and
pop
or
xchg
add
ja
add
add
mov
and
shlb
out
ljmp
add
test
scas
movsl
roll
sarb
xchg
mov
add
cmpl
cmp
add
mov
push
add
cmpsl
inc
jbe
and
fsubrs
sbb
sbb
sub
mov
add
loop
aam
aaa
add
daa
add
movsb
sbb
jo
enter
lods
mov
or
xchg
and
mov
xchg
xlat
enter
int3
rclb
or
add
mov
or
push
mov
pop
mov
and
xchg
in
sub
xor
inc
jl
cmp
sahf
push
xchg
mov
outsl
insb
pop
mov
rolb
xlat
dec
es
out
rol
xor
push
fs
jo
push
add
jmp
and
js
jp
add
inc
out
mov
pop
xchg
loopnew
shlb
xchg
pop
adc
lahf
jle
sub
adc
sub
fildl
in
test
in
mov
push
and
das
clc
mov
jns
jb
push
fucomip
add
cld
xchg
add
mov
dec
cwtl
add
imul
cmpsb
add
pushl
imul
mov
jl
mov
pop
es
cmp
inc
jae
clc
imulb
arpl
js
pusha
mov
add
pop
cli
mov
inc
mov
jle
pop
adc
pop
dec
and
dec
mov
mov
push
add
add
cmp
xchg
inc
pop
mov
push
jns
dec
jae
add
fcmovne
leave
dec
in
daa
dec
add
into
jl
enter
push
jne
fildll
std
pop
add
xor
les
dec
arpl
cli
lret
cwtl
add
push
xchg
add
clc
push
fisttpl
sarb
ds
repnz
and
jl
mov
imul
add
jge
lret
sbb
test
les
dec
add
loopne
sub
xchg
adc
mov
push
add
mov
ja
add
andb
mov
push
in
imul
inc
dec
shll
dec
dec
and
sbb
pop
mov
cmp
into
hlt
add
dec
and
pop
add
xor
add
sub
test
add
imul
jb
add
bound
data16
insl
sub
arpl
jbe
cmp
adc
inc
push
add
pusha
gs
popl
ljmp
addr16
jnp
fwait
mov
and
add
call
and
ja
lods
dec
mov
addr16
xchg
dec
or
and
or
andl
orb
addl
sti
fs
out
inc
inc
jo
mov
adc
lock
ja
jae
jbe
jne
bound
jl
adc
dec
adc
aas
add
outsl
subb
adc
sub
les
andl
hlt
jp
add
call
sbb
mov
push
and
add
mov
aas
xchg
add
mov
fsubrs
aam
scas
add
cmp
cltd
daa
push
dec
push
cmp
in
inc
xchg
popa
std
add
pop
sub
loop
xor
stos
lahf
xchg
pusha
lret
mov
sub
mov
sub
add
add
and
pusha
outsb
inc
dec
pcmpeqw
addl
dec
add
xor
push
adc
mov
push
or
cmpsl
and
daa
ret
mov
cld
pop
mov
testl
and
daa
cmp
pop
mov
iret
add
ss
sarb
out
jo
jle
pop
mov
rolb
adc
add
cld
push
dec
pop
mov
rcll
sti
and
cmc
push
xchg
enter
test
shrb
xlat
lods
hlt
or
or
or
faddl
sti
test
and
pushl
or
iret
inc
repnz
out
popf
insb
stc
and
cmp
or
push
mov
sbb
inc
sub
cmp
insb
xor
adc
push
movsl
ret
into
movsb
add
cwtl
stos
sub
add
and
cld
mov
inc
jno
add
or
loopne
add
mov
pop
pop
mov
push
mov
dec
je
int3
add
adc
and
add
jecxz
ljmp
pop
push
repnz
enter
lds
add
aad
movsb
loop
lods
pusha
sti
xor
add
ret
pop
xor
inc
push
outsb
cmc
cmpb
xor
add
call
addb
add
je
insb
ja
shlb
jne
add
pop
ret
pushf
and
or
add
mov
inc
sbb
add
lea
aas
rclb
inc
cmp
jne
cmp
push
js
push
pop
lcall
sub
sbb
adc
inc
add
jo
dec
add
add
das
jl
add
mov
pop
push
orl
movb
adc
and
hlt
and
mov
fs
jns
call
add
add
xchg
ret
mov
push
push
add
inc
or
add
or
sub
jbe
push
dec
inc
and
lea
pop
mov
cmp
or
push
xchg
add
xorl
or
call
sub
inc
xor
je
nop
xor
add
jmp
imulb
jecxz
dec
and
ss
xor
mov
jmp
push
cli
add
cmpl
xchg
fists
pop
jmp
add
addb
push
pop
rcrb
xchg
dec
pop
or
add
sbb
out
sbb
scas
out
sbb
sub
cld
mov
sti
add
adc
push
cmp
add
xchg
jle
lock
push
hlt
cmp
add
push
xchg
subl
dec
or
or
mov
jl
sar
pop
mov
aaa
movl
push
add
cmpl
mov
adc
mov
sub
orl
daa
inc
xor
add
rclb
loope
pop
cs
xor
insb
adcl
mov
and
add
cmp
cli
loopne
loopne
xchg
adc
cmp
add
call
aad
sub
adc
and
xor
dec
add
call
sub
orb
mov
mov
add
gs
dec
lods
add
stos
xchg
bound
inc
mov
mov
cld
xchg
nop
sbb
sub
xchg
push
mov
test
push
sub
xor
jmp
add
fmuls
or
add
iret
pop
enter
adc
inc
add
mov
movb
and
and
imul
je
lea
sbb
add
adc
lahf
cs
pop
mov
sbb
dec
scas
inc
loopne
add
mov
rsm
mov
add
jmp
aaa
pop
ljmp
mov
push
add
or
push
add
mov
pop
push
mov
lahf
mov
in
clc
sub
add
js
adc
add
jp
jne
add
aam
sub
inc
stc
in
dec
adc
loop
orb
sbb
shlb
stos
xchg
psubw
add
xchg
jg
pop
push
add
imul
pop
or
xor
or
push
movsl
add
mov
xor
shrb
xchg
call
sbb
out
adc
pop
test
mov
shl
leave
pop
ljmp
test
in
lret
mov
jecxz
adc
sarl
pusha
dec
add
mov
jne
andb
mov
int3
leave
pop
nop
and
fadds
inc
adc
bound
fildl
mov
pop
out
sub
dec
les
mov
pushf
fwait
sahf
es
ret
jo
sbb
sarb
lods
add
lahf
add
popf
call
mov
repz
rolb
add
xchg
or
push
jae
push
mov
scas
je
add
je
add
push
jne
pop
push
cwtl
int
and
mov
adc
sub
or
idivb
dec
rcr
add
ficoml
cwtl
push
imul
add
cmp
sub
ror
cltd
sbb
inc
push
scas
inc
mov
jo
test
or
inc
test
pusha
cmp
loope
jl
cmp
sub
add
cs
incl
push
les
pop
inc
mov
add
in
js
ss
jp
push
add
pop
ds
lret
push
arpl
mov
mov
test
ret
clc
jnp
mov
dec
pop
add
in
scas
or
aad
cli
test
fsubs
pop
dec
ds
cmp
ss
mov
adc
testb
pop
and
es
or
mov
push
add
loope
stos
clc
xor
shrb
fisttps
pop
out
jbe
pop
inc
loopne
sub
jge
add
xchg
or
test
iret
stc
cmp
xchg
add
jg
xchg
rorb
fs
aas
add
or
stos
in
cmpsb
add
scas
adc
pop
mov
pop
test
imul
inc
loop
popa
shlb
inc
repz
lock
out
add
push
inc
or
sub
dec
lods
les
mov
les
adc
add
add
lea
inc
pop
mov
or
xor
mov
cmp
add
mov
inc
jo
pop
std
xlat
add
mov
mov
push
pusha
cmp
add
sahf
add
jmp
mov
leave
xchg
push
cld
dec
shlb
add
imul
add
push
mov
cmp
push
adc
jle
cld
scas
push
pop
xchg
decb
add
je,pn
add
lock
push
xchg
add
sbb
inc
pop
fildll
inc
inc
pop
mov
mov
pop
cmc
push
test
or
cli
pop
pop
in
add
sbb
pop
adc
add
stos
mov
stc
and
mov
cmp
shlb
push
dec
sahf
movsl
bound
scas
clc
rolb
mov
mov
dec
pop
pop
xor
mov
xchg
popf
mov
or
pop
sub
pop
out
cwtl
movsl
add
mov
fidivrl
aaa
push
sahf
add
push
cmp
cmp
add
add
in
jecxz
clc
xchg
adc
push
jmp
dec
jbe
add
pop
hlt
xchg
jmp
push
cmp
fadds
enter
loopne
ret
inc
dec
fcmovne
ds
nop
sbb
xchg
add
xlat
add
loopne
inc
add
mov
decw
testl
and
and
addb
xchg
hlt
push
add
in
jno
mov
inc
ja
clc
fdivrl
push
cmp
arpl
aas
push
js
push
add
out
clc
cwtl
add
add
call
sahf
js
and
sti
xor
jmp
pop
mov
mov
or
or
clc
call
das
jne
pusha
jno
ds
push
cmp
cmpsl
ljmp
and
sub
xchg
rolb
cmp
ja
xor
and
or
push
movb
jae
jns
push
push
pop
add
cmp
nop
push
xchg
in
sub
dec
adc
or
or
sub
adc
rolb
add
or
jb
jo
fidivrs
xor
or
shl
outsb
mov
shl
hlt
fmuls
mov
or
jne
cmc
add
dec
xchg
add
out
add
sbb
rcl
and
es
daa
inc
add
add
cmp
push
orb
mov
add
jns
sub
add
jo
hlt
add
bound
add
inc
xchg
mov
dec
in
add
sbb
cmp
ja
dec
sbb
lret
iret
inc
mov
pop
inc
not
add
jne
xchg
je
bound
add
lods
ret
push
add
or
mov
clc
mov
and
mov
jne
mov
pop
inc
repz
outsl
fadds
das
jp
mov
shl
push
repnz
testl
mov
adc
xchg
or
idiv
repnz
and
inc
push
push
xchg
and
dec
fimuls
cltd
or
xor
lcall
lea
imul
fmuls
ficompl
sub
xor
sbb
adc
and
pusha
test
sub
in
cmp
sbb
push
or
add
pop
das
mov
cmp
pop
push
mov
mov
loop
mov
pop
imul
mov
cs
stc
push
xorb
jne
cmp
push
bound
xchg
fcomps
sub
and
jb
push
mov
mov
push
call
sbb
mov
aaa
in
filds
adc
xchg
sub
jbe
mov
xchg
adc
out
inc
pop
cmpsl
adc
mov
pop
sub
pop
icebp
cmc
pop
stc
cmp
mov
mov
insl
sub
pop
pushf
ret
add
jl
xchg
push
loopne
call
lock
push
dec
es
sub
xchg
adc
stos
push
icebp
or
inc
enter
xchg
bound
pop
sahf
hlt
cmp
pop
inc
push
or
jmp
and
add
adc
ja
leave
pop
les
or
cwtl
filds
xchg
orl
ja
xchg
inc
pushf
add
push
cld
pop
ljmp
inc
shlb
icebp
cwtd
add
dec
pop
add
mov
push
add
pop
ds
jge
add
subb
dec
lock
add
cmp
xor
std
nop
xchg
lcall
int
add
movsb
push
in
into
incb
rolb
jg
add
jle
mov
adc
add
outsl
addb
enter
cmp
sub
and
ss
pop
out
movsb
push
pop
jle
test
or
add
push
call
roll
sbbb
add
add
fbstp
jbe
add
ja
pushl
push
cmp
pop
lcall
pop
test
or
bound
xor
cmpsb
and
and
sbb
push
sbb
clc
orb
insb
dec
cwtl
aas
and
sub
cmp
out
fsubl
add
mov
or
add
rolb
add
sbb
int3
scas
loopne
pop
jecxz
xor
stos
lea
lcall
mov
shl
add
add
mov
icebp
faddl
call
mov
inc
add
push
sahf
aam
sub
add
jle
or
fidivrl
dec
mov
enter
call
add
mov
frstor
mov
xchg
mov
cmpsb
add
xor
add
jg
adc
ret
dec
add
mov
dec
adc
lahf
ja
js
push
add
lock
xchg
jge
or
mov
int
or
cmp
sbb
call
loop
add
xor
orb
or
mov
mov
push
jge
push
add
cmp
add
movsl
inc
mov
lock
or
dec
add
icebp
mov
adc
aam
mov
push
cmp
push
push
sub
stos
push
int3
xlat
ja
dec
bound
iret
push
jne
mov
push
pop
or
add
test
andb
rolb
fsubs
mov
xchg
add
jmp
stos
add
jne
and
push
pusha
and
leave
shlb
mov
mov
cmpsl
push
cmpsb
push
add
add
popf
mov
dec
fdivl
mov
int3
or
adc
jmp
addl
lret
shll
xor
add
call
jp
add
jnp
sub
fmuls
je
xchg
dec
mov
push
pop
loopne
push
sti
roll
sub
mov
lea
jle
divb
add
gs
test
out
clc
imul
subl
lcall
loopne
and
mov
sbbb
hlt
cli
add
outsl
inc
or
mov
sub
rclb
sti
int3
ja
das
adc
pusha
push
jg,pn
or
sahf
lds
push
mov
out
test
add
mov
pop
lea
sbb
dec
dec
add
sub
cmp
in
add
sub
and
cmpsb
add
call
inc
lock
pop
hlt
sti
add
inc
xchg
mov
add
outsl
pop
addr16
imul
add
or
scas
sbb
jge
mov
and
ret
pop
push
push
adc
add
cmp
out
shrb
stos
cwtl
orb
push
add
arpl
cwtl
dec
cmp
add
push
xchg
aas
imul
push
jne
stos
fmull
cmc
jmp
mov
xchg
push
or
mov
lods
inc
and
pop
aad
mov
std
add
repz
sub
add
push
lret
xor
adc
or
push
imul
sub
add
sbb
out
popl
xchg
pusha
int3
ret
pop
jl
add
imul
outsl
sbb
jne
add
xchg
sub
jl
jmp
pop
inc
lcall
add
sub
sbb
leave
pushf
add
clc
cli
pop
add
jbe
adc
add
lret
or
jge
cmpsl
ret
add
add
rorb
adc
add
out
sbb
push
push
rcl
fmull
fadds
pop
data16
add
jb
jae
or
inc
inc
fs
les
mov
fadds
cmpsb
test
decb
faddl
mov
into
adcl
fstl
decl
pop
pop
lock
pop
add
add
or
incl
xor
or
add
add
cmp
inc
cli
je
jl
pop
xor
add
fisubrl
push
ret
mov
adc
inc
in
sbb
add
xor
inc
jmp
cmp
add
or
pop
es
aas
mov
dec
add
cmpsb
push
push
cli
xor
pop
add
bound
cli
mov
jns
and
ja
add
push
mov
cmp
mov
cmc
xchg
in
add
sar
add
adc
mov
add
xor
fldcw
pop
repnz
call
std
ljmp
lea
es
or
daa
movsb
add
adc
add
push
lock
dec
inc
lods
push
add
add
jae
push
cltd
and
sbb
push
jb
add
cltd
cmp
and
push
add
add
iret
bound
mov
movsb
mov
popf
cmp
cmp
jb
sarb
push
mov
dec
dec
in
push
xor
or
push
jmp
aaa
push
sub
imulb
add
lret
inc
inc
adc
or
pop
cmp
fisubrl
mov
sbb
xchg
and
adc
push
clc
out
in
loopne
add
dec
dec
xchg
mov
jne
popa
sub
mov
adc
pop
ficoml
cmp
pop
mov
call
loopne
sub
sub
inc
inc
into
rcrb
jle
and
dec
shl
je
add
mov
or
lods
pop
adc
out
add
shrb
push
inc
enter
add
or
ret
std
test
add
lock
lods
add
fistpl
push
add
test
or
adc
mov
and
int3
das
mov
inc
packssdw
orb
adc
shrd
mov
cmp
mov
lock
imul
dec
and
mov
loopne
cmpsb
and
add
movsb
mov
add
xchg
leave
pop
push
mov
inc
je
jp
jmp
notl
add
pop
inc
sti
repz
mov
dec
ret
xchg
add
add
mov
clc
daa
les
sub
inc
icebp
mov
hlt
xchg
jbe
pop
dec
cmp
lock
xor
push
inc
rcrb
cmp
repnz
adc
dec
addl
xor
xchg
cli
pushl
xor
push
push
adc
xchg
and
out
inc
pop
add
dec
add
movsb
push
rcll
add
mov
add
cmp
enter
add
sbb
ret
push
add
mov
gs
shr
add
add
add
cmp
adc
mov
push
addr16
jp
scas
pop
and
scas
pop
add
sahf
and
in
xchg
lret
mov
inc
add
push
inc
outsb
sbb
add
ret
push
rclb
hlt
decb
test
in
inc
popf
push
div
cmp
lahf
push
addr16
lcall
add
sub
fs
add
enter
mov
gs
jbe
ljmp
jle
add
mov
jmp
pop
jno
movsl
out
add
lret
dec
rcr
fdivrl
cs
test
cmpsb
cld
pop
jg
mov
bound
ret
jne
and
mov
pop
jl
jb
int3
repnz
int
add
gs
in
jbe
push
fstl
pusha
dec
in
lret
push
xchg
add
in
ljmp
sub
inc
int3
adc
ja
add
sbb
cltd
pop
outsb
add
dec
iret
adc
das
in
jbe
out
mov
mov
or
les
sub
je
enter
inc
mov
imul
arpl
inc
sbb
mov
mov
push
cli
ret
adc
add
out
inc
xchg
pop
jg
add
lods
shl
mov
rorb
decb
sbb
pop
pop
test
add
in
pop
add
notl
inc
mov
stc
adc
mov
add
adc
push
lcall
cmp
add
popf
jmp
call
mov
cld
mov
add
lock
das
popa
cld
fdivrl
pop
inc
jo
add
je
cmp
or
add
and
adc
push
mov
stos
fadds
enter
jge
push
jne
sti
ja
mov
jnp
inc
add
xchg
rolb
pop
out
cmp
call
es
mov
mov
cmp
push
into
sub
sbb
cmp
adc
inc
pop
movsl
and
add
sub
iret
stc
mov
pop
push
add
push
xchg
sbb
add
es
add
mov
ret
add
pushf
xlat
push
and
add
adc
xchg
mov
sub
cmp
lods
js
adc
fisubrs
xorb
inc
aam
or
lahf
dec
push
jne
fiadds
mov
fdivrl
leave
jbe
cmp
or
es
lods
add
sub
cmp
popfw
add
ret
cltd
add
xchg
mov
add
cmp
lods
xor
add
inc
sub
and
or
enter
outsb
ds
dec
int3
or
test
add
add
lds
add
mov
cld
rolb
pop
das
les
inc
or
and
add
loope
add
aas
jmp
mov
mov
data16
ficoms
push
add
jbe
pushf
add
inc
push
add
scas
cmp
icebp
mov
inc
xchg
hlt
adc
rolb
outsl
repnz
addr16
sar
fisubs
cld
incb
mov
push
xchg
and
inc
mov
pusha
add
sbb
repnz
nop
sbb
xor
or
scas
push
addl
enter
das
and
orps
rcrl
test
movsl
jne
xor
cmpsl
sbb
jae
inc
push
xor
add
sbb
mov
add
jmp
or
inc
inc
jl
sti
push
xor
add
pusha
pop
push
cld
mov
out
xchg
jno
aaa
lock
dec
out
mov
pcmpeqw
pop
mov
sti
add
xchg
jns
in
add
clc
and
test
pusha
pop
xor
fdivrs
mov
mov
and
push
push
pop
inc
adc
into
push
leave
pop
pop
test
scas
sub
nop
dec
pop
jbe
add
test
rcll
jle
mov
jb
mov
pop
jg
add
sub
or
jne
lcall
mov
dec
popa
call
ret
add
xchg
rolb
test
push
lcall
add
lds
push
loopne
lock
mov
call
out
es
mov
adc
andb
pop
and
add
addb
or
punpckhdq
fs
cmp
addb
xor
push
pop
stc
test
jne
clc
or
cmpw
pop
xchg
cmpl
je
pop
addb
repz
and
add
cmpl
je
add
add
out
sub
movsl
or
add
arpl
sbb
flds
dec
adc
mov
or
jle
cmp
add
xor
clc
movl
pop
addl
mov
mov
addr16
and
push
jecxz
cmp
fidivl
or
je
add
jnp
and
adc
adc
xor
mov
adc
ja
hlt
sub
lea
out
xchg
out
test
xchg
cld
add
leave
dec
in
lret
sarb
fildl
jmp
test
xor
push
add
fiaddl
add
rclb
add
add
xchg
sub
sub
stos
ret
push
add
test
mov
jnp
add
push
push
cmc
mov
inc
mov
push
mov
add
sub
mov
test
pop
mov
cmpb
cs
inc
push
dec
xor
mov
sub
pop
xchg
lock
push
xchg
pop
dec
pop
push
fcom
clc
fs
andb
jo
out
dec
add
push
and
loopne
cmp
cli
jecxz
hlt
test
push
dec
push
lods
popa
add
cmp
pop
decl
cs
clc
imul
mov
test
jge
mov
jae
stos
sbb
pop
dec
repz
add
jb
cwtl
sbb
test
lock
and
imulb
fiadds
and
je,pt
push
or
xchg
cld
lds
daa
add
std
mov
push
mov
add
mov
mov
pop
add
jne
mov
jl
and
push
push
pushf
lcall
mov
in
or
popa
adc
or
sbb
pop
add
pop
pop
sub
clc
pop
inc
call
aam
add
jmp
jl
sub
inc
add
xchg
jne
xlat
push
movb
sbb
jmp
or
int3
and
or
xor
inc
push
enter
add
movb
dec
repz
mov
or
and
mov
pusha
pop
fnsave
add
shll
imul
aad
add
jne
jns
pop
mov
sub
add
std
rcrb
add
and
movl
pop
fdiv
push
cld
test
mov
std
push
cwtl
or
add
mov
pop
dec
ljmp
inc
les
shrl
outsl
push
mov
mov
cmp
and
sbb
ret
or
push
add
test
shlb
lock
sbb
mov
jbe
hlt
mov
add
psubusb
fs
adc
add
into
in
int
out
ja
adc
aam
test
cmpb
popa
scas
clc
and
int
sub
jbe
outsl
andl
mov
test
add
test
ja
lods
sub
sti
add
dec
fdivrs
adc
hlt
rcr
orb
repnz
fidivrl
sbb
mov
jns
add
sub
into
scas
sub
cld
sti
dec
add
push
dec
fs
cmp
sbb
notb
add
add
arpl
and
adc
jp
repnz
push
and
jge
mov
lret
mov
xor
lods
sbb
pop
and
pop
rcll
add
mov
pop
andl
jne
add
movsb
stos
or
repz
sub
mov
jae
faddl
pushf
inc
adc
jmp
mov
ds
add
jg
mov
xchg
mov
mov
and
adc
movl
adc
jmp
push
xchg
jns
cs
sub
mov
mov
cmp
push
pop
xchg
and
xor
mov
adc
je
fcoms
cli
call
and
push
jl
add
dec
add
call
dec
mov
xchg
add
or
sti
and
add
aaa
aam
insb
sbbb
sub
or
pop
mov
inc
popf
stos
sbb
or
sbb
xor
push
in
imul
nop
add
ds
cmp
mov
mov
call
ficomps
add
mov
add
scas
sub
es
adc
test
sub
int
je
dec
lret
adc
cmpsl
sti
mov
jge
cmpsb
cmp
fnstcw
mov
add
xchg
fwait
inc
mov
hlt
outsl
add
push
mov
mov
sbb
sub
add
cmpsl
add
pop
adc
mov
loopne
ljmp
les
std
or
push
jge
pop
cmp
aad
add
adc
adc
sub
rorb
imul
xchg
aam
fildll
mov
dec
push
add
cltd
orb
test
cmp
add
push
lds
nop
test
push
and
mov
pop
add
mov
jne
push
cmp
daa
or
and
pop
or
pop
fnstenv
andl
inc
adc
inc
mov
jb
jns
dec
add
push
or
mov
incb
adc
xchg
inc
dec
jbe
orl
call
cmpsl
push
pop
inc
jl
dec
jecxz
pushf
shrb
paddd
dec
add
aaa
cmp
xchg
mov
xchg
jg
lretw
lea
adc
mov
sbb
mov
mov
mov
inc
loopne
dec
sahf
xchg
pop
and
lock
inc
push
dec
mov
sbb
push
push
adc
xor
add
sti
shll
fs
add
pushf
jae
and
imul
jge
mov
shrl
jae
daa
jle
push
push
orb
pop
mov
add
add
mov
dec
imul
jg
sbb
lahf
ret
cmp
lock
pop
mov
and
in
jp
add
jne
adc
add
pop
leave
jecxz
xchg
dec
inc
addb
add
xchg
je
and
loopne
inc
stc
int3
add
cs
adc
cmp
aam
cmpl
add
call
jb
add
push
adc
xchg
cltd
imul
mov
adc
inc
push
add
sti
push
cmp
sub
dec
loope
jne
jbe
jle
into
rclb
loop
push
add
out
push
popa
ret
push
push
or
sub
cmp
inc
sub
sbb
mov
cmpsl
adc
movsl
into
sub
add
cmp
scas
add
in
mov
stos
sbb
mov
sbb
mov
rolb
push
fimull
cmp
add
mov
sti
roll
mov
xchg
add
lods
imul
mov
je
scas
or
int3
xchg
lret
sahf
pop
loopne
sbb
gs
adc
lahf
fsubr
push
ss
add
cmp
adcb
xor
negb
jmp
mov
stc
add
xchg
or
repnz
cmp
ret
stos
adc
pop
cmpb
add
xchg
incl
cmp
addl
jle
jmp
sub
adc
mov
lcall
out
aam
push
or
and
and
push
das
inc
fmull
add
xchg
cmp
cmpl
pop
mov
adc
popa
inc
pop
add
dec
dec
nop
mov
add
jnp
shll
add
inc
xchg
push
mov
add
mov
dec
add
push
jo
jmp
clc
mov
xor
and
outsl
push
jp
jl
xchg
mov
inc
mov
add
mov
test
mov
xchg
cs
lret
pop
push
inc
and
repnz
pop
mov
clc
test
add
andb
dec
nop
lds
push
xor
mov
loopne
jns
sbb
inc
add
fucomip
popa
cmp
std
arpl
sbb
cs
and
mov
mov
add
sbb
cltd
fs
lea
pop
cli
xchg
jg
fidivrl
lock
lock
clc
popf
movsb
imul
mov
pop
add
addl
adc
in
iret
jg
add
push
inc
shrl
dec
lock
movl
mov
aad
test
stos
push
xchg
mov
or
jb
add
dec
cmpsb
adc
pop
add
rcl
test
jge
jne
push
adc
scas
and
lock
stc
inc
xor
and
adc
in
sbb
aaa
sub
add
mov
sub
sbb
pop
inc
dec
pop
xchg
xor
es
jmp
xlat
test
cmp
lcall
inc
hlt
sub
xchg
pop
clc
xor
in
push
add
jecxz
xor
add
pop
sbb
add
nop
pushl
mov
mov
add
gs
jmp
dec
add
cmp
imul
xor
mov
add
clc
or
loopne
je
pop
repz
in
mov
cmpsl
add
add
add
mov
or
sub
xchg
cmp
pusha
xor
mov
cmp
iret
in
jmp
insb
inc
push
rorb
add
jge
lods
iret
inc
mov
dec
xor
in
pop
add
sub
sbb
inc
dec
mov
or
add
nop
push
xchg
popw
or
mov
or
je
adc
lock
xor
add
pop
aaa
add
pop
movsb
add
push
sub
pop
and
iret
jmp
cmp
xchg
push
cmp
mov
cmpsb
pop
pop
pop
adc
xchg
fdivs
xor
out
mov
xchg
adc
sahf
mov
inc
stos
add
pop
inc
xchg
mov
ficoms
adc
je
push
sbb
push
fsubrl
xchg
jno
add
adc
js
mov
addb
jmp
fbstp
rorl
adc
sbb
add
call
add
mov
add
lea
outsl
lret
mov
xor
pop
mov
push
dec
add
and
in
dec
push
sbb
and
add
mov
inc
adc
test
mov
out
jmp
cwtl
push
sbb
mov
pmaddwd
adc
sbbb
xlat
fs
mov
push
mov
cld
pusha
inc
popf
in
sub
loopne
add
cli
mov
or
pop
mov
add
mov
mov
add
lcall
push
arpl
or
and
xchg
es
loopne
fwait
test
imull
push
jo
sub
ds
dec
adc
mov
mov
add
add
fadds
enter
sarb
enter
cltd
inc
push
lcall
jecxz
sbbl
dec
add
adc
loop
int3
addb
or
or
mov
insl
add
shr
fisubs
sbb
movsb
add
add
fs
pop
outsb
inc
add
jns
mov
dec
pop
cmp
pusha
aam
in
push
push
push
test
adc
push
out
xchg
sahf
xchg
xor
inc
mov
rorb
jo
add
push
jg
cs
loopne
add
mov
fisubs
mov
fstl
addb
dec
dec
in
inc
jl
repnz
mov
mov
cli
scas
or
add
jae
jns
sahf
xchg
add
jne
inc
jnp
scas
jo
repnz
sub
scas
lods
sbb
cld
xlat
xor
filds
call
inc
add
out
sub
and
inc
add
adc
sub
push
jb
je
cs
subb
movsb
jle
xor
pusha
ret
movl
pop
xor
imul
sub
mov
mov
add
xchg
xor
adc
push
add
dec
adc
dec
xchg
or
xor
lods
push
cld
adc
aam
mov
cld
add
jno
iret
dec
imul
dec
inc
xlat
fmul
mov
fmull
bswap
mov
call
decb
repz
adc
xor
cmp
imul
cmp
cmp
add
add
pop
inc
jo
dec
add
push
jnp
dec
inc
pop
add
mov
adc
ja
stos
inc
out
je
jmp
or
shll
add
leave
add
rclb
test
cmp
mov
cmp
loopne
push
cmc
adc
andl
add
pop
pop
aas
std
loopne
cs
sbb
in
scas
icebp
mov
mov
lds
imul
popa
or
add
mov
cmp
add
adc
pop
mov
inc
pop
add
rol
lods
lahf
sbb
pusha
inc
push
jle
sbb
fldl
adc
fs
or
inc
push
cwtl
adc
push
push
test
pop
push
mov
lds
jl
daa
mov
mov
test
mov
test
inc
push
jmp
jl
mov
mov
xor
add
add
sbb
je
pop
push
xchg
cmp
xlat
arpl
icebp
dec
add
jp
push
setne
cmp
mov
sbb
call
or
mov
mov
pop
adc
inc
push
jae
xor
jnp
jg
add
or
push
sbb
push
mov
add
loopne
cmp
add
bound
in
add
adc
add
mov
cld
add
xchg
add
ja
push
cmc
cmp
and
jns
push
rorl
movsb
ret
cmp
in
lea
xor
cwtl
push
xor
pop
or
add
or
adc
push
and
mov
sub
imul
dec
add
xorb
push
add
lret
xchg
popl
fs
inc
scas
loope
out
lock
add
mov
push
call
movsb
add
mov
jmp
jmp
nop
cld
loope
or
fidivrs
add
sub
out
adc
jae
sub
push
mov
add
jne
cmp
and
adc
lret
test
ljmp
cmpsb
pop
jno
sbb
pop
addr16
xchg
out
xchg
add
inc
mov
xor
movb
inc
push
mov
add
xor
or
pop
in
lods
adc
or
pop
or
pop
sbbl
in
or
mov
popf
aam
hlt
sahf
add
mov
jo
sub
xlat
shrl
jae
add
enter
inc
sbb
xchg
add
adc
xchg
mov
cld
sbb
int3
adc
lock
and
and
mov
inc
and
add
fs
add
sub
sub
pusha
xor
xor
adcb
andl
pop
pusha
inc
pop
inc
adc
js
dec
pop
idivb
sarb
les
dec
push
mov
pop
adc
mov
xor
filds
sbb
or
in
push
add
bound
or
fsubrl
pop
lods
inc
adc
add
sbb
popf
lock
mov
mov
add
adcb
js
dec
and
cwtl
andl
push
lret
lods
rcr
or
test
pop
dec
push
inc
inc
andl
add
aam
dec
rolb
insb
je
add
and
cmpsb
repnz
push
in
mov
sbb
add
jns
inc
in
or
xor
test
and
nop
sti
fs
xchg
add
movsb
fdivrs
push
dec
cmp
add
enter
mov
ljmp
rorb
pushl
lods
add
xorb
adc
inc
adc
test
pop
sbb
or
or
out
add
outsb
je
insl
add
in
loop
out
cmpl
popa
add
xor
xchg
das
adc
cmp
inc
mov
add
mov
and
push
pushf
aam
or
cld
mov
xor
push
sbb
nop/reserved
std
shrb
add
adc
or
dec
push
pop
es
xor
add
addb
cwtl
adc
mov
mov
sar
fdivr
loopne
call
jo
aas
pop
or
adc
sbb
and
sub
xor
cmp
mov
pop
fisubs
push
cmp
clc
nop
dec
add
mov
add
add
or
push
sbbb
ret
add
inc
popa
jo
out
fnstsw
arpl
xor
and
sbb
adc
cwtl
pop
loop
xor
cld
test
push
outsb
adc
mov
dec
dec
pop
dec
dec
clc
sub
push
push
push
adc
push
add
add
inc
dec
dec
rolb
adc
arpl
addr16
insl
outsb
jo
jno
jae
add
jp
mov
and
xor
or
test
add
int3
lret
and
push
pop
xor
push
mov
cmp
add
adc
xor
dec
add
add
call
add
lock
and
and
add
mov
cmpb
jo
mov
sarb
sbb
sub
mov
add
mov
pop
jl
jo
add
fwait
test
add
sbb
push
add
add
xchg
sbb
add
add
rcl
add
push
add
mov
subl
daa
and
add
xchg
add
je
dec
or
mov
add
add
aad
imul
and
or
jmp
out
in
ljmp
sbb
xor
pusha
repnz
jo
rcl
add
cld
mov
xchg
push
pop
outsl
lret
adc
std
or
pop
pusha
ds
jo
xor
and
in
call
push
movsb
add
arpl
insb
fcoml
aas
push
addl
add
dec
mov
inc
mov
mov
adc
sub
add
adc
and
push
aad
call
xor
sub
xor
add
add
sub
or
push
lldt
xor
popa
push
loope
cmp
add
arpl
nop
and
xor
inc
sbbb
add
imul
iret
mov
int3
outsb
popa
nop
jb
jno
and
xchg
pushf
and
lock
sarb
js
test
je
pop
xchg
xor
push
pusha
adc
adc
aam
insb
add
push
js
pushf
rcrb
fcomps
add
call
dec
add
sbbb
pop
fs
add
lods
pushf
mov
enter
cmpsb
and
sbb
rolb
sub
adc
and
aam
stc
add
mov
adc
pop
fnstcw
pop
sbbb
mul
rcl
add
pop
loopne
mov
les
jne
or
add
and
inc
push
nop
imul
pop
sub
add
cmp
mov
ss
push
data16
mov
clc
pop
cmp
enter
js
movsl
fldenv
js
or
and
xchg
call
cmc
or
stos
mov
gs
inc
pop
lods
xor
mov
rcrb
and
cld
jl
xor
add
cmp
pop
cmp
sub
pop
cmp
cwtl
nop
sbb
inc
lret
nop
loop
adc
cltd
dec
cmp
lock
or
adc
rorl
pop
dec
fcoml
sbb
popa
dec
or
mov
or
clc
or
lret
in
sub
test
mov
push
xlat
dec
pop
fdiv
sbb
jae
pop
nop
pop
out
data16
push
adc
and
sar
addb
sbb
mov
popf
subb
popa
mov
add
jl
or
nop
xchg
faddl
int
add
add
addb
add
loope
imul
and
adc
jp
add
repnz
inc
out
jl
add
call
and
ljmp
or
clc
jle
addb
jecxz
adc
mov
add
mov
jbe
push
mov
movsb
sub
mov
adc
in
and
inc
sub
mov
add
dec
jl
mov
lcall
pop
faddl
cli
adc
cmp
cmp
push
sti
mov
lret
cmpsl
in
push
leave
add
out
sbb
es
shll
pop
push
outsb
adc
mov
cmpsb
adc
enter
lock
iret
mov
sub
pop
adc
add
mov
add
and
dec
dec
aam
sub
sbbl
adc
and
jp
xchg
xchg
mov
dec
shl
mov
or
add
dec
xor
inc
sbb
mov
ror
fdivrp
out
clc
decb
inc
ja
add
push
dec
xor
jo
mov
inc
mov
shl
add
adc
imul
outsb
in
xchg
dec
movsb
xor
mov
add
adcl
dec
inc
xchg
inc
mov
mov
cmpsb
add
ret
or
adc
jl
push
in
fs
outsl
pop
xor
inc
dec
push
mov
addl
inc
inc
cli
je
cmp
mov
add
outsb
cwtl
push
push
dec
add
xor
inc
hlt
imul
in
push
sti
scas
add
sub
lret
jbe
xchg
pop
mov
movsl
add
addr16
insl
daa
mov
xor
jmp
inc
in
lea
push
inc
add
xor
in
sbb
sbb
push
xor
push
imul
push
mov
mov
sub
mov
and
call
inc
push
or
arpl
jo
mov
xchg
sbb
bound
or
and
cld
cmpsb
mov
sti
dec
adc
out
movsl
mov
jo
loop
outsl
inc
inc
xor
add
fsubl
nop
lea
add
decb
add
or
inc
adc
inc
punpckhwd
adc
aam
xchg
jb
cmp
aaa
inc
jb
cmp
hlt
add
test
lcall
pop
inc
inc
push
sub
or
add
push
adc
xor
jle
mov
or
and
sub
outsb
push
cmp
and
test
push
es
outsl
xchg
add
dec
data16
add
xor
adc
or
lock
out
fdivs
add
sub
test
sbbl
repz
push
punpckhwd
xorb
xchg
jp
aam
fldenv
jne
push
adc
lret
int3
jns
nop
mov
cmp
outsb
addr16
lock
ud0
mov
dec
call
insl
je
sahf
nop
jbe
jo
cld
push
jbe
add
pop
push
nop
xchg
shll
pop
add
sub
cmpsb
outsb
rcrb
mov
loope
addl
dec
inc
insl
jo
in
mov
shlb
push
cmp
outsl
sbbb
jg
xchg
pop
and
sub
push
adc
xchg
adc
mov
xor
int3
mov
nop
add
inc
inc
add
jbe
adc
add
loope
sub
aad
mov
dec
icebp
adc
hlt
and
add
insl
xor
adc
icebp
pusha
push
jp
adc
push
jl
aas
or
cmpb
aam
nop
ja
push
arpl
es
inc
shll
pop
sub
cmc
xor
dec
jae
lret
push
pop
push
je
mov
imul
repnz
repz
movsl
adc
pusha
jp
dec
cmp
sbb
mov
dec
mov
gs
push
inc
into
add
inc
jns
jb
xor
mov
daa
lcall
sbb
sbb
rcrb
jbe
jbe
adc
jecxz
loop
inc
cmp
xor
add
add
sbb
cmpsl
sbb
push
mov
sub
inc
add
arpl
mov
pop
sbb
add
jno
pop
sbb
dec
mov
enter
jecxz
movsb
add
push
out
inc
jbe
ds
std
repnz
mov
shrl
sti
enter
add
push
mov
sub
and
jb
lret
push
das
lret
fstps
repnz
out
add
push
jno
inc
sbbb
insb
pop
cmp
and
jo
inc
stos
cmc
mov
jns
xchg
je
jo
movsb
sbb
add
leave
inc
cltd
mov
aas
cs
add
bound
imul
adcb
ljmp
cmp
dec
sub
mov
dec
pop
push
adc
mov
and
in
fisubrl
dec
mov
cmp
push
cmpsb
xor
and
ja
ja
add
dec
mov
inc
jne
push
shlb
dec
add
pop
mov
mov
scas
sbb
int
adc
repnz
mov
daa
inc
enter
inc
add
sub
sub
aaa
and
add
jns
or
out
add
mov
jecxz
frstor
xor
add
outsb
fldcw
jne
dec
add
or
mov
test
add
and
add
mov
dec
outsb
add
pop
xor
or
sub
cmp
xchg
inc
cmpsl
inc
dec
out
leave
push
rcll
loope
jmp
cmp
stc
xchg
stc
lcall
stc
mov
stc
sar
loop
ljmp
add
or
adc
sbb
jp
add
jmp
inc
leave
dec
rcll
pop
loope
jmp
jp
cmp
stc
xchg
stc
lcall
stc
mov
stc
idiv
clc
lahf
pop
xchg
push
je
jbe
js
jp
dec
jl
jle
and
popf
jne
add
xor
loopne
push
and
push
leave
mov
aaa
add
cmp
add
fistps
jmp
or
sbb
cmp
pop
push
outsb
lods
mov
xchg
hlt
popf
clc
test
scas
cld
mov
test
out
sub
cmp
add
inc
sub
xchg
cmpsl
adc
cmp
movb
sbb
xor
jg
lahf
add
mov
fcompl
adc
sahf
add
dec
lahf
push
pop
pop
shrl
jno
xchg
jmp
adc
add
leave
and
shrl
jmp
stc
mov
sti
andl
pop
int3
add
cmp
add
jge
test
jbe
js
push
cmpsb
xchg
mov
out
out
ret
sbb
push
xchg
decb
subps
and
xchg
mov
lret
push
jle
sbb
xor
sahf
xchg
mov
add
xchg
xor
daa
push
sbb
addr16
add
cltd
xchg
mov
lfs
loope
xor
add
stos
shll
add
jbe
js
bound
ss
mov
leave
mov
aaa
mov
mov
add
push
test
add
in
hlt
add
ret
das
jecxz
loopne
push
cmp
dec
cmp
scas
iret
add
add
sub
mov
ret
rcll
fsub
adc
add
stos
aam
or
enter
int3
sbb
pop
movntq
cltd
and
ja
nop
stos
xor
je
xor
push
add
jp
jl
jle
add
xor
popf
dec
sbb
push
pop
lahf
fs
and
jae
xor
test
lock
xchg
sbb
inc
addr16
add
imul
mov
cmpsb
ret
stos
ror
dec
lcall
add
or
pop
sarl
sti
cmp
repz
push
push
xor
xchg
push
inc
add
jbe
adc
bnd
ja
xchg
sbb
xor
popf
loop
out
ss
add
pop
or
and
insl
cmp
add
loope
jmp
cmp
cli
and
pop
ficomps
inc
call
inc
test
leave
rorl
jb,pt
je
sbb
aas
add
lock
ret
push
sbb
push
add
les
jb
sbb
repz
test
xor
sub
pop
loop
movsb
lods
jl
push
sbb
pause
popf
xchg
arpl
test
mov
mov
movsb
mov
movsbl
iret
clc
rolb
ss
xchg
pop
push
mov
aaa
rorl
sbb
repz
popf
sbb
jbe
jle
sar
clc
jecxz
pop
inc
aaa
rcrb
push
dec
push
cmp
enter
mov
arpl
cmp
adc
daa
call
add
pop
clc
cld
push
jb
jp
and
call
nop
jle
and
lret
call
ljmp
add
out
cmp
cmp
add
cmp
lahf
jb
pop
dec
xchg
push
cld
jle
bound
push
jb
cmp
cmpb
cmp
ds
aas
mov
mov
sub
adc
cli
rorb
and
push
and
int3
ret
inc
cld
dec
xchg
jp
pop
mov
cwtl
mov
leave
xlat
shl
f2xm1
xor
adc
cmp
dec
push
cmp
inc
inc
dec
rorb
pop
mov
jo
js
adc
jecxz
repz
repz
repz
repz
fdiv
ret
bound
pop
fdivl
push
or
dec
adc
sub
push
call
daa
stos
shl
leave
rcl
fcomp
loopne
add
clc
clc
mov
dec
cmp
sbb
inc
sub
xchg
cwtl
dec
repz
leave
pop
shll
push
icebp
cmp
and
cld
mov
cld
loopne
clc
add
add
or
and
add
xor
xor
cmp
jb
je
jbe
js
jp
jl
jle
jle
add
cld
movsb
in
call
les
lcall
hlt
cmp
jg
loopne
jb
je
jbe
add
jp
jl
jle
in
jl
in
pop
lock
hlt
pusha
clc
fs
push
cld
mov
test
aas
mov
mov
mov
shlb
int
in
add
mov
add
pop
push
adc
push
cld
cld
jb
je
sbb
sbb
jg
call
orl
mov
sarl
enter
shrb
add
xor
es
cmp
cmp
pop
cs
and
and
sub
cmp
pop
hlt
pusha
clc
fs
push
cld
je
js
jl
cmp
aam
ja
jle
jle
jle
jle
jle
jle
add
xor
jnp
rcrl
fldenv
loope
jmp
stc
xor
cld
fs
insb
shll
xlat
xchg
jl
and
loop
mov
movsb
ja
sar
aam
fdivr
fdivr
loopne
in
arpl
xorb
xchg
and
ret
jp
and
popf
aaa
popf
dec
sbb
js
jl
adcb
cmp
enter
aam
fadds
out
out
out
loopne
cmp
add
sub
xor
cmp
add
inc
repz
repnz
jmp
xorb
lahf
pushf
pop
mov
lahf
rcrb
lahf
lock
hlt
lahf
clc
cmp
test
adc
dec
or
cmp
popf
inc
shlb
insb
cmp
jb
je
jbe
gs
notl
mov
lods
xor
hlt
mov
mov
dec
or
add
adc
nop
nop
je
dec
push
das
and
xor
stc
test
cmpsb
xchg
sub
xor
in
aaa
loope
adc
adc
fstps
xchg
sbb
call
popf
sub
inc
fildll
out
jo
lock
add
clc
push
cmp
sbb
fs
mov
cmp
ds
hlt
jo
push
add
dec
or
outsb
sarl
add
daa
jle
inc
xchg
inc
add
addb
jo
dec
decl
cld
mov
sbb
mov
jl
push
mov
je
add
mov
cmp
dec
add
xchg
cmpsl
shrl
repnz
jbe
xchg
jp
jl
icebp
xor
cmp
inc
popf
push
sbb
nop
outsl
add
cmp
leave
inc
mov
add
icebp
stc
add
sub
push
daa
ds
add
iret
sahf
imul
mov
popa
mov
mov
pop
dec
lods
pusha
xchg
sub
add
dec
or
pop
mov
add
out
movsl
sub
xor
dec
sub
cli
setb
les
loopne
mov
rolb
xor
in
xchg
insb
sbb
xchg
addb
and
js
xor
mov
cltd
cld
mov
scas
or
pop
sbb
stc
rcrl
loope
out
ret
repnz
sbb
je
rolb
cvtps2pd
push
popl
arpl
pop
jne
adc
movsb
ret
mov
mov
loope
nop
xlat
add
push
cmp
dec
enter
ret
pop
cmp
push
iret
push
or
cwtl
and
in
mov
mov
cmp
push
cmp
add
dec
xchg
jnp
adc
lcall
pop
push
leave
roll
add
in
push
sahf
outsl
lock
hlt
jl
mov
push
cs
sbbl
cmp
lock
jo
cld
mov
pop
or
sbb
add
xchg
and
dec
aas
fisubl
add
fs
movsb
insb
adc
jo
outsb
or
test
push
orb
insb
pop
int3
dec
push
repnz
mov
cmp
pop
or
lret
sbb
cmp
xor
cmp
cmp
inc
in
int
jb
pop
pop
xchg
je,pn
lahf
andb
inc
mov
pushf
lcall
popa
les
pop
add
loop
jns
scas
jb
add
movsb
sub
pop
aam
push
add
jne
xchg
jae
and
push
or
dec
mov
in
push
add
pop
je
mov
adc
sub
test
add
push
addl
inc
and
out
fisttpl
aaa
cmp
mov
movsl
cmpsb
arpl
hlt
xchg
cmpb
js
ret
adc
loopne
in
push
mov
push
push
xor
push
iret
pop
pcmpgtw
addb
stos
iret
mov
mov
ret
and
jbe
add
jo
or
sbb
daa
aam
inc
out
cltd
and
mov
adc
xchg
jnp
add
sub
add
sbb
push
add
daa
aaa
imul
sbb
out
xor
outsb
add
cld
leave
pusha
cmp
cmp
cmp
addr16
jp
xor
jnp,pt
rcl
push
ja
test
add
in
call
clc
pop
inc
pop
rorb
sbb
faddl
add
shl
int
xor
into
push
jo,pn
sahf
or
cmp
mov
mov
mov
add
dec
fldenv
addr16
add
ret
cld
fstl
dec
cmp
mov
aam
cmp
rorl
sbb
imul
mov
mov
sbb
cmp
popf
dec
add
mov
pushf
pusha
add
cmp
in
call
cmp
dec
cmp
outsb
xorb
loop
adc
add
xor
mov
jmp
and
xor
lcall
pop
or
mov
lret
pop
dec
xchg
xchg
sbb
repz
adc
jecxz
out
flds
mul
add
pop
or
push
sbb
ds
fwait
jne
inc
xchg
data16
add
cmp
add
adc
sbb
das
and
xor
js
add
cmp
cmp
ss
in
xchg
adc
jl
test
mov
mov
nop
cld
xchg
xchg
pop
adc
sarb
popf
lock
ds
iret
clc
and
fmull
cmp
add
inc
or
dec
xchg
rcrb
inc
js
dec
dec
or
push
loope
pop
cmp
pop
daa
test
cmpsb
add
dec
jmp
cs
ficoml
js
inc
cmc
or
movsb
call
dec
jmp
cmp
push
daa
and
mov
sahf
adc
xchg
bnd
rolb
pop
mov
add
sbb
pushf
fldenv
push
int3
sahf
fs
inc
nop
add
or
hlt
push
mov
add
add
xor
pop
imul
test
pop
dec
mov
mov
mov
dec
int3
in
xchg
dec
pop
out
sarl
fists
add
jnp
mov
pop
mov
test
cmp
dec
ljmp
add
sub
mov
push
rorl
repnz
and
inc
add
test
mov
out
mov
mov
cmp
add
mov
scas
inc
or
jae
add
js
jp
imul
insb
push
jo
or
ss
popa
les
inc
pop
int3
ds
dec
sub
push
add
insb
dec
mov
or
xchg
xchg
lock
jns
add
call
dec
cmpsl
pop
push
addr16
daa
mov
in
mov
mov
mov
mov
xlat
xor
in
mov
cmp
cmp
add
sbb
cmp
sbb
mov
mov
add
push
xchg
sbb
cmpsb
xorl
int3
add
in
cli
and
or
in
call
lret
nop
dec
xchg
push
pop
cmpl
and
xor
sarb
xchg
scas
lock
mov
jle
jle
pop
in
mov
sub
fdivrs
or
adc
pop
xor
jae
test
mov
inc
data16
add
aas
hlt
aam
xor
punpckhdq
arpl
dec
xchg
pop
es
sbb
add
out
popf
sti
pop
or
and
xor
testl
mov
dec
ljmp
subb
xchg
cmpsb
rolb
xor
cmp
or
dec
jmp
push
test
ss
roll
pop
inc
and
inc
clc
push
negb
pop
add
in
lock
inc
add
out
js
add
jl
inc
call
scas
add
mov
mov
or
ret
rorb
clc
xor
add
dec
adc
sbb
push
add
mov
pop
sbb
cs
in
pop
pop
xchg
cmp
mov
add
ret
cwtl
lods
rclb
add
bound
sub
xchg
add
aam
cmp
in
add
fsubrp
popf
sub
ds
cmp
pop
aas
add
popa
lock
cmpl
xchg
call
lahf
in
add
adc
dec
sbb
repz
pop
sbb
loope
pusha
xor
cmp
or
jb
je
arpl
mov
xchg
mov
add
push
in
pop
lock
mov
add
fsts
aam
pop
add
je
addr16
xchg
cmpsl
sbb
in
not
push
or
and
adc
call
pop
cwtl
sub
dec
sub
push
pop
rorb
mov
and
inc
jp
dec
pop
pop
jo
mov
xchg
mov
ret
xchg
adc
or
pop
sahf
mov
pop
test
jb
pusha
mov
add
add
or
add
fcoms
xor
je
add
add
jp
scas
and
fcmovu
sub
xor
add
flds
aas
icebp
and
cli
sub
popf
add
shlb
and
mov
fdivs
rcll
ror
pop
mov
loope
pusha
jecxz
int
mov
or
rolb
js
push
mov
mov
add
xchg
mov
outsl
add
in
loopne
push
and
ss
fs
add
pop
rolb
add
push
js
into
cmp
cmp
inc
add
and
dec
clc
sub
add
sub
mov
loopne
dec
test
jnp
cmp
jns
mov
jae
pop
jne
sbb
cmp
lcall
add
jns
add
cmp
das
add
add
push
xchg
mov
loop
incb
shlb
cmp
cmp
push
nop
add
pop
jmp
dec
popf
outsl
add
add
sbb
dec
jnp
cs
add
je
mov
mov
js
jl
pop
xor
xor
add
loope
in
xchg
jmp
cmc
xchg
add
add
push
in
adc
sbb
adc
mov
nop
pop
in
xchg
lock
pushf
hlt
mov
clc
loopne,pn
cmp
adc
in
cmp
push
mov
xchg
mov
push
nop
test
add
in
mov
cltd
mov
push
je
adc
repnz
push
popf
add
push
call
inc
cmp
fdivs
add
fimull
sbb
lock
jg
pop
in
addr16
jg
mov
add
cwtl
jp
pushf
jl
pop
movsb
or
lods
add
data16
cmp
mov
pop
sub
cs
out
xchg
scas
ds
cmp
fnstcw
adc
ucomiss
fsubl
mov
and
xor
or
lahf
sbb
repz
fldenv
sub
sbb
xor
popf
add
sbb
das
mov
add
cmp
repz
xchg
inc
mov
dec
sti
push
add
push
call
mov
fsubs
enter
das
ret
clc
fmul
loopne
add
call
rcrb
mov
cmp
xchg
cmp
daa
sub
mov
jp
ljmp
jbe
outsb
xchg
iret
push
mov
jb
dec
cmp
and
fs
xchg
push
xchg
mov
fdiv
add
jo
add
and
inc
xchg
popa
mov
je
dec
test
xor
enter
dec
inc
inc
inc
dec
cmpsl
sbb
sub
js
jle
pop
add
add
or
mov
leave
inc
rclb
jl
jle
add
ret
test
pop
jnp
add
shrl
add
add
cli
sbb
dec
jae
xchg
cmpsl
cltd
lds
lock
rolb
out
xchg
std
cwtl
rcrb
es
into
out
xorl
repnz
in
jo
add
daa
xchg
lods
fwait
out
stos
in
test
loopne
incb
cld
setl
cld
xchg
jecxz
movsb
repnz
push
mov
icebp
pop
jns
lock
add
cli
and
adc
xor
inc
dec
in
mov
mov
cmp
aas
xchg
mov
cld
ss
and
and
flds
xor
cmp
inc
icebp
dec
stc
jb
pop
arpl
jb
movd
cmp
outsb
stos
add
mov
shl
xlat
std
jmp
icebp
cmp
fmull
add
and
fldcw
loope
jmp
lds
loopne
cwtl
cld
lahf
daa
stos
inc
mov
xchg
mov
loop
popa
xchg
dec
leave
pop
cmp
dec
das
jae
mov
aas
popf
daa
stos
les
rolb
nop
push
dec
je
mov
popa
lcall
add
lock
cld
in
roll
test
mov
xor
aas
add
inc
lahf
xchg
push
in
lods
in
adc
xchg
testb
test
cmpsl
arpl
addl
test
jmp
aas
add
and
push
adcb
leave
scas
fdivrs
push
push
js
sub
jo
mov
pop
add
fs
repnz
adc
sbb
es
pushf
add
inc
and
pusha
rorl
repnz
repz
lock
cli
add
push
inc
inc
dec
ret
loopne
dec
pop
push
rcrl
popa
lock
pop
xchg
jg
jle
adc
pop
sub
inc
jecxz
cmp
pop
add
jmp
mov
popf
cmp
loop
neg
lock
add
dec
or
data16
in
xchg
rorb
shlb
cmpsb
arpl
sahf
daa
js
das
into
cmp
bnd
rcrl
add
icebp
jmp
jbe
cmp
dec
orl
enter
cmp
cmp
sbb
lret
out
dec
std
add
in
cmp
das
sbb
add
dec
mov
pop
xchg
lahf
popf
push
stos
xchg
inc
or
repnz
jmp
and
xor
ret
xchg
stc
pop
cmpsb
jl
aas
int
out
out
mov
loopne
pusha
jns
adc
lock
and
sub
adc
test
les
adcb
in
sub
jns
mov
push
mov
into
ret
clc
loopne
adc
mov
movsb
inc
mov
popw
push
jp
insb
nop
dec
mov
das
or
out
ljmp
xchg
adcb
imul
aas
pop
psubb
daa
movsb
adc
sbb
inc
sub
clc
add
test
pop
lret
push
add
lds
adc
fimuls
add
icebp
cwtl
adc
loop
fbld
movsl
cmp
pop
add
cli
roll
cld
cmp
jno
jns
mov
jp
and
xor
dec
nop
ret
or
cwtl
and
pop
lret
or
fcmovb
lods
add
imul
add
out
scas
xchg
dec
mov
pop
lock
cs
jae
cmp
pop
mov
pusha
push
fmul
filds
dec
cli
cmpb
loopne
inc
sarb
push
mov
pop
lods
in
inc
aam
pop
cmp
add
popa
add
ja
add
lret
roll
jb
je
pop
jbe
dec
addl
repz
jmp
in
fdiv
repnz
push
das
mov
xchg
popf
xchg
mov
in
lods
pop
aas
xlat
and
lahf
sti
clc
or
shlb
xchg
xor
add
pop
pop
in
js
jne
add
int3
adc
xchg
adc
out
sub
or
subb
pop
pop
dec
sahf
mov
push
and
jo
lock
scas
dec
add
xor
xchg
pop
and
xor
mov
repnz
jne
mov
pop
xchg
call
push
sbb
add
imul
insb
rolb
je
xchg
or
fdivrs
pop
adc
addr16
call
mov
pop
lds
add
lcall
das
jg
sub
add
dec
add
pop
sahf
jnp
ret
mov
push
cmp
test
cmp
movsl
add
or
icebp
inc
stc
dec
xchg
data16
pop
cmp
addl
in
push
or
mov
add
or
test
fsubrl
mov
adc
xor
pop
lock
pushf
daa
xor
add
scas
sarl
add
push
js
adc
inc
add
test
sub
cwtl
mov
sub
fsubs
in
hlt
xchg
and
dec
shl
testl
sbb
aaa
pop
lock
pop
adc
push
jl
jle
inc
and
aam
add
dec
shlb
ds
repz
popf
movsl
add
dec
add
add
or
ret
dec
push
xchg
xchg
aas
jl
ja
jecxz
repz
xor
lock
xchg
adc
into
lret
imul
and
cmp
icebp
subb
in
mov
dec
or
inc
xorb
lret
int
aad
loopne
ljmp
enter
xchg
or
repz
cli
add
leave
xchg
xchg
jo
jp
add
adc
add
cmp
popa
add
inc
cmpsb
add
stos
das
scas
inc
lods
mov
jbe
sbb
js
inc
pop
into
cmp
jo
mov
insl
ret
lcall
pop
cmp
push
cs
dec
iret
pop
add
call
in
push
pop
repnz
jl
int3
dec
adc
pop
iret
mov
loop
rolb
pop
xor
mov
andl
jp
jecxz
test
jmp
pusha
rorb
imull
pop
sarb
pop
push
lds
pop
xchg
mov
out
add
jo
adc
add
pop
loopne
call
add
es
das
addr16
add
mov
add
adc
and
ret
nop
pop
lret
ljmp
fildl
fcomip
jecxz
mov
cld
mov
add
ret
jle
push
aaa
pop
lock
inc
cld
push
daa
pop
inc
bound
add
enter
ret
xor
cld
clc
nop
add
push
cs
push
rcrb
pop
add
xchg
insb
loopne
cmp
jge
cmp
pusha
xor
ss
outsl
or
daa
loopne
addr16
andl
sbb
xor
lock
sbb
mov
mov
fimull
add
es
imul
dec
movsb
add
ret
enter
mov
push
xor
bound
push
call
jle
add
adc
pop
loop
sub
mov
xchg
test
pop
out
push
test
in
add
pop
xchg
cld
dec
mov
rorl
shl
mov
add
idivb
dec
inc
pop
jg
xchg
and
stos
arpl
jns
lret
ret
shl
add
mov
repnz
or
es
mov
aaa
mov
xchg
add
xor
push
lcall
stos
add
or
gs
sub
jl
popf
cld
dec
add
or
push
shll
loope
jge
movaps
adc
cmp
push
add
pop
jne
sbb
mov
jnp
pop
mov
inc
rcrb
push
add
ds
clc
push
cvtps2pd
outsb
or
push
push
xor
in
xchg
add
loopne
pop
push
outsl
mov
sahf
fstps
cmp
pop
push
test
add
pushf
add
lods
cs
and
xchg
push
pop
cmp
cmp
or
jg
inc
add
xchg
xchg
push
add
xchg
pop
jo
movsl
add
icebp
cmpsb
pusha
push
sub
jge
mov
dec
scas
xchg
les
roll
inc
sub
fiaddl
jle
dec
cld
push
mov
dec
push
scas
adc
cmp
add
cmp
mov
push
mov
sub
loopne
push
repnz
lock
ss
xlat
je
push
lcall
push
shlb
addb
mov
cmpl
lock
aas
add
fsubs
insb
add
subl
mov
add
cmpsb
dec
out
pop
cmpb
mov
adc
cmp
mov
add
jbe
xor
in
mov
repnz
sahf
pop
es
je
ret
dec
out
add
mov
cmp
add
push
sub
push
add
enter
je
push
add
jae
mov
mov
into
rorb
test
jg
dec
add
mov
mov
orb
xor
lret
add
ljmp
mov
add
adc
jne
push
stos
movsb
in
or
aas
es
inc
jo
or
mov
cmp
pop
insl
and
enter
add
sub
in
fmull
xchg
xchg
popf
mov
mov
and
inc
inc
push
xchg
fdivrl
ja
cmp
lret
push
adcb
add
out
jns
jg
cmpsl
mov
mov
sbb
icebp
loop
xor
jb
into
mov
pop
add
loopne
or
jnp
lock
lcall
imul
mov
insb
mov
and
aam
push
sahf
mov
imul
sub
xor
jo
mov
sarb
add
aaa
jmp
ret
loop
popa
sbb
add
lock
dec
dec
jb
add
cmp
punpckldq
fdivrl
add
adc
jo
popl
daa
fs
in
mov
fbstp
adc
push
add
sbb
jo
pop
popa
add
xor
in
stc
xchg
xchg
call
xor
mov
ror
mov
test
pop
loopne
sub
add
pop
pop
xchg
arpl
jl
lock
mov
add
cmpb
and
adc
ret
leave
hlt
pushf
sbb
subps
lock
shrb
add
cmp
inc
dec
sarl
xchg
mov
and
pop
add
or
pop
clc
sub
or
fsubr
jae
add
jge
add
cmp
adc
pop
xchg
stos
mov
cld
and
add
in
add
loopne
add
inc
xor
dec
add
pop
jp
pop
pop
popa
and
mov
jle
dec
add
and
in
mov
lcall
cmp
mov
jp
adc
cmp
xchg
lcall
dec
mov
loopne
push
sub
sub
add
mov
aaa
fdivl
cs
cmp
inc
clc
cli
pop
dec
ret
push
movsb
enter
and
inc
add
loopne
push
push
cmpsb
notb
jp
dec
adc
leave
mov
push
sub
sub
xor
push
add
das
dec
add
push
mov
fcoml
and
xor
dec
in
in
mov
or
out
jnp
cwtl
shll
or
mov
jo
aas
add
adc
fadds
mov
add
sbbl
stc
cwtl
pop
add
cmp
inc
mov
pop
push
xchg
aaa
mov
pop
mov
or
adc
je
mov
add
jp
mov
out
js
add
dec
cmp
mov
add
pop
loop
das
je
pause
scas
and
add
jle
add
or
pop
xchg
inc
cwtl
out
and
lcall
dec
add
xchg
int3
rolb
cli
shll
inc
pop
add
lret
sub
cmp
add
pop
inc
sub
repz
add
je
jo
jle
xor
sbb
stos
clc
loopne
push
pop
call
repz
bnd
pop
jbe
cmp
decb
decb
rcrb
pop
cmpsb
daa
sub
sub
movsl
xor
loope
cmp
sbb
inc
das
pop
dec
test
dec
pop
xchg
popa
mov
pusha
lods
mov
cmp
sub
add
xor
out
aas
sub
push
ret
fistl
or
call
push
inc
adc
xchg
nop
cs
xor
dec
js
inc
pusha
sub
pusha
jno
cmpl
cmpsb
das
cs
pop
nopl
add
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
and
push
cmp
add
sbb
inc
adc
or
and
and
orb
sub
ret
jns
add
or
fildl
cmp
xchg
mov
lea
loopne,pt
xor
and
mov
jb
dec
push
sbb
lcall
push
mov
lret
or
push
lcall
mov
jne
incb
sub
sbbl
rol
push
add
push
add
cmpb
mov
aas
xor
or
add
je
js
lods
cmp
fldl
or
jmp
dec
jmp
add
push
add
out
stc
add
pop
pop
pop
add
lods
dec
movsb
ss
stc
add
rep
lea
loope
sahf
hlt
pop
sub
mov
fwait
push
ja
add
jp
dec
roll
in
mov
cmp
addb
sub
je
mov
adc
pop
and
mov
cmpsb
jle
je
mov
cmp
aam
jge
lods
add
add
sti
add
push
mov
sub
das
or
cmp
popl
add
ljmp
push
push
mov
loop
in
sahf
fsubl
add
mov
repnz
push
jno
inc
dec
cmc
ret
push
movl
jne
push
push
lock
add
and
aam
add
mov
jp
jbe
push
sbb
sbb
jle
add
cli
mov
or
mov
in
add
jne
cmpb
mov
add
mov
and
mov
jne
outsl
and
mov
xor
pop
jecxz
lcall
and
cmp
mov
mov
pop
das
rorl
clc
ret
or
ds
jnp
cmc
jg
ret
shll
sbb
add
push
and
push
lods
push
sbb
dec
mov
andl
xor
dec
leave
add
add
cld
jmp
add
push
push
cmp
rolb
das
add
jne
mov
add
xchg
add
xchg
mov
mov
inc
cmp
and
jnp
testb
xor
cmp
in
rol
stc
les
pop
es
mov
inc
sbb
mov
xchg
sub
shrb
sbb
das
push
inc
jae
add
in
push
or
int3
roll
fldln2
or
arpl
adc
mov
pop
cmp
push
cli
insb
rorb
push
jae
xchg
aas
jbe
loop
enter
adc
imul
les
jle
xor
push
outsl
je
fnstcw
pop
in
lock
add
jnp
loopne
mov
int
add
dec
pop
mov
scas
pop
out
adc
pop
dec
adc
mov
cmp
mov
lea
add
and
add
sbb
lea
push
lock
rolb
pop
mov
xor
fucom
insl
addb
mov
lods
jnp
jns
pusha
lcall
inc
add
sub
ret
add
mov
xchg
imul
lahf
inc
xchg
dec
pop
dec
stos
add
sub
rorb
or
loopne
mov
mov
pop
xlat
daa
push
scas
add
jne
fsubl
adc
add
push
add
inc
popa
jle
aas
hlt
add
cltd
jg
push
lock
lods
cmp
add
jno
nop
or
mov
add
in
cli
push
add
mov
jns
cmpsb
push
test
ret
sub
shlb
inc
cmp
mov
sub
pop
jne
fisttpll
imul
pop
je
sbb
inc
mov
fdivrs
loope
add
cmpsb
aas
shl
add
addb
or
add
fdivr
push
xor
cmp
push
push
sbb
push
cmp
push
icebp
pop
jo
sbb
add
and
arpl
xor
jg
aad
push
orb
sbb
and
in
mov
pop
out
dec
adc
adc
out
int3
loopne
lret
cmp
icebp
inc
cmc
mov
fdecstp
fwait
xor
cmp
add
jge
cltd
or
push
int3
jo
add
inc
adc
addb
or
sbb
sub
in
sets
adc
mov
xchg
ss
pop
and
sbb
bound
add
sbb
ds
popa
pop
add
add
mov
add
or
iret
mov
xchg
jecxz
add
lock
les
enter
push
inc
in
push
jnp
adc
std
push
arpl
aad
sbb
pop
repnz
scas
nop
subb
jp
push
sub
movsl
or
add
push
add
push
testl
mov
repnz
add
into
outsl
testb
add
outsb
mov
add
ja
cs
jg
sarb
adc
xor
fwait
ret
mov
add
dec
cmp
lock
cmp
jge
setb
pushf
mov
cmp
int3
scas
cmpsl
shl
mov
push
inc
pop
stos
mov
into
cmc
add
rorl
xchg
dec
movnti
in
pusha
or
or
mov
mov
inc
mov
pop
inc
add
jne
rcll
rcll
mov
or
rorb
aas
push
unpckhps
rorb
je
push
push
sub
xchg
pop
mov
sub
fdivs
ds
sub
mov
push
add
movsb
pop
xor
roll
shl
push
mov
call
or
ss
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
stos
ret
inc
popa
rol
roll
pop
sub
fs
push
jge
pop
je
popa
cwtl
inc
push
outsl
arpl
lods
or
push
mov
rolb
imul
aam
jne
test
sub
ljmp
loope
xorl
jb
sbb
data16
dec
cld
inc
sbb
and
cmpsl
sahf
fsubl
jo
aaa
fs
scas
fwait
inc
jecxz
jg
fists
and
mov
fwait
shr
bound
popa
fnclex
push
jle
out
mov
jl
insb
arpl
and
or
in
jne
push
fs
xor
jne
inc
loopne
sarl
loopne
enter
sbb
add
icebp
iret
inc
push
cmc
imul
or
lea
daa
dec
outsl
jle
push
push
jg
mov
mov
test
std
dec
add
add
add
add
insb
loopne
mov
fnstsw
push
sti
into
sbb
sahf
aaa
lea
aam
test
add
pop
cmpsb
adc
dec
xor
scas
fldenv
lock
fadds
aam
ds
lds
inc
fldl
dec
call
mov
or
mov
mov
ret
adc
inc
inc
fs
cwtl
mov
jl
dec
pop
inc
mov
push
out
insb
sub
xor
inc
jne
fs
das
enter
rorl
pop
stos
push
pop
xchg
mov
mov
xchg
sub
xor
mov
clc
jbe
mov
sbb
je
sub
inc
fistps
inc
cmc
shlb
ret
pop
lods
push
loope
mov
or
push
test
or
movsl
enter
gs
call
dec
jmp
aaa
pop
sbb
fnstsw
lahf
jmp
push
push
and
shll
push
shll
jecxz
sbb
shlb
fxch
fxch
push
mov
imul
dec
sbb
test
test
js
sub
push
push
xchg
sbb
or
test
repz
call
in
aas
jae
cmpsb
imul
fiadds
adcb
stc
cs
mov
adc
or
cmpsb
pop
jecxz
xor
jl
jmp
xchg
push
testb
std
xchg
xor
aaa
xchg
xor
push
or
loopne
add
push
lahf
pop
push
cmp
out
cmp
xor
out
sbb
cmpsl
and
cmp
bound
xor
into
mov
sub
stos
cmc
sub
in
hlt
das
xchg
fsub
popf
mov
insb
int
pop
decl
outsb
enter
mov
xor
mov
iret
xchg
mov
dec
sub
fcoml
push
cltd
ljmp
push
fs
lock
jae
push
loope
dec
es
fistpl
cmpsl
inc
std
cmp
pushf
mov
sub
enter
ja
dec
mov
icebp
jb
nop
test
cmp
int
sbb
push
lds
mov
idiv
stos
pop
int
mov
pushf
sub
daa
jecxz
rcrb
jp
sti
cmp
add
mov
inc
mov
outsl
and
ljmp
mov
push
js
leave
xor
ret
sub
add
push
mov
lahf
ret
out
sub
lret
or
jecxz
mov
mov
mov
xor
sub
sub
xchg
sub
ret
sub
imull
mov
mov
test
inc
fs
push
mov
stos
or
mov
adc
sahf
in
outsl
out
mov
pop
dec
bound
inc
call
push
inc
and
jnp
imul
mov
out
enter
shl
sarl
cltd
rcrl
or
mov
ds
scas
cli
aaa
push
je
sti
scas
mov
or
and
shll
imul
pushl
sahf
data16
mov
arpl
cmpb
stos
sub
fnstenv
inc
scas
mov
pop
jge
xor
pop
pop
mov
pop
and
add
add
jns
sti
aas
int
adc
jb
jecxz
out
es
fnstcw
das
sub
test
andl
pop
out
sub
rcrb
mov
and
cmp
pop
or
adc
clc
sahf
lods
jg
and
sub
sbb
cltd
mov
fsubrs
cmp
leave
sbb
pop
sub
loop
popa
aam
int3
stc
ficompl
mov
ss
movl
or
lret
inc
or
jmp
int3
nop
mov
int
fisttpl
and
test
push
lahf
dec
adc
mov
mov
xchg
adc
lahf
pop
adc
dec
loopne
adc
fcoms
jns
call
stc
pop
orb
and
inc
jb
adc
push
into
cmpb
sbb
add
sbb
subb
dec
ret
imul
pusha
xor
dec
jp
add
or
inc
pop
out
out
lret
hlt
sub
call
mov
js
jnp
xlat
cltd
xchg
adc
xchg
pop
das
fstpl
andb
fdivrs
outsb
mov
mov
sub
jmp
sbb
cmp
lret
xlat
fidivl
mov
mov
sti
shr
testl
add
and
sbb
adc
or
cs
lock
lret
popa
mov
mov
addr16
or
lcall
jle
ret
subl
fcoml
cld
mov
lods
mov
cltd
mov
and
or
testb
push
sbb
xchg
mov
sub
insl
push
dec
int3
dec
jo
xchg
fs
daa
js
mov
aas
inc
xchg
push
mov
mov
fsubl
iret
in
push
xor
mov
std
jne
dec
outsb
mov
popf
fbstp
aaa
shll
pop
and
pop
es
cmpsl
fxch
pop
pop
pop
xor
repz
mov
pop
mov
faddp
outsb
sbb
pop
jb
push
and
mov
xor
adc
fcompl
adc
mov
cmp
xchg
gs
fwait
mov
mov
jmp
cmp
mov
daa
in
jp
dec
sub
cs
mov
adc
sub
xchg
ja
cmc
push
or
mov
add
popf
dec
ljmp
mov
mov
fisubrs
sbb
jno
jmp
pop
aaa
fdiv
inc
mov
insl
out
fcoms
cli
mov
inc
fstl
cmpsl
out
lea
jbe
cmc
mov
fnstenv
stos
xchg
das
aam
je
sbb
aaa
ret
fbld
adc
ret
ror
mov
sti
daa
fsubrs
dec
and
nop
mov
xchg
push
cmc
sbb
icebp
psubb
ret
mov
fadds
jmp
test
movsl
sub
xor
in
dec
mov
push
int3
adc
pop
je
xchg
je
adc
cmp
mov
aas
jg
stos
xchg
in
mov
sub
iret
fadds
and
cmpb
enter
fs
dec
adc
mov
je
inc
std
pop
cmp
aaa
xor
xor
divb
pop
test
add
sbb
movl
push
inc
xchg
nop
and
sahf
xchg
scas
and
add
pop
mov
push
and
xchg
movsl
xor
or
cld
sub
subb
addr16
popf
leave
sbb
in
rcll
out
imul
or
je
mov
jg
add
pop
dec
daa
inc
jne
gs
sti
out
jbe
sub
repz
outsl
test
pop
fstpt
cmp
jp
xchg
xchg
and
enter
stos
cmp
jmp
mov
adc
aaa
ds
arpl
std
cmp
fdivs
jg
sarl
stc
es
sub
pop
outsb
adc
outsb
lock
xchg
add
popa
mov
adc
xchg
ss
ds
cld
lret
repnz
sub
xchg
incl
or
daa
push
xlat
cmp
mov
scas
mov
xchg
mov
loope
imul
ficoms
mov
adc
jecxz
leave
xor
mov
decb
push
push
push
xorb
mov
jmp
aad
shr
sub
mov
xor
movsl
jo
dec
fstl
xchg
mov
popf
dec
mov
fs
inc
inc
sbb
stc
scas
fwait
lea
not
adc
add
cmp
cmp
mov
mov
insl
pop
dec
stc
push
mov
xchg
lcall
cmp
call
xchg
mov
pop
adc
rcl
jg
cmp
jnp
cmp
or
xor
repnz
or
mov
ret
xor
xchg
xor
xor
dec
in
fcmovu
mov
iret
lret
int
pop
lahf
scas
push
leave
jle
in
mov
fsubs
pop
dec
push
imul
dec
icebp
std
cmp
adc
je
imul
sub
addl
or
sbb
rorl
loop
pop
fidivrs
aad
xchg
cmpsl
mov
jmp
into
cmpsb
je
fisubrs
repnz
sbb
fimuls
jge
jl
jge
mov
cmp
dec
mov
iret
lret
or
lds
inc
inc
mov
inc
adc
test
outsl
xor
mov
in
ret
push
xchg
pop
adc
outsb
je
test
add
add
in
rol
addl
xchg
sbb
inc
add
xchg
push
faddp
fldcw
mov
ja
arpl
jbe
and
or
clc
arpl
mov
sbb
test
xchg
add
or
pop
adc
hlt
push
dec
jbe
sbb
lret
jg
shl
data16
and
jae
fwait
stos
notrack
xor
sub
ds
aam
ds
mov
mov
call
sbb
roll
cmc
out
mov
sub
push
xchg
push
jle
sub
icebp
and
movsl
and
inc
fistpll
aam
push
ret
mov
push
push
push
cmc
adc
loope
xchg
xchg
nop
aaa
mov
int3
cmp
push
mov
push
subb
mov
sahf
fwait
mov
ljmp
jecxz
insl
jle
dec
popf
cli
outsb
sbb
pushl
popl
xor
push
jecxz
push
push
sub
repz
lods
pop
lods
mov
mov
mov
in
jae
mov
insb
ret
dec
xchg
pop
fiadds
icebp
mov
in
jno
ljmp
mov
aam
xlat
add
jp
aaa
hlt
cmp
clc
jge
daa
pop
xor
test
and
lcall
arpl
xchg
cwtl
test
xchg
adc
adc
loopne
movsb
mov
dec
cmc
cwtl
sbb
sbb
pop
mov
and
sub
loope
subb
and
jp
call
jne
das
or
loopne
insb
and
int3
insl
mov
ficoms
movsl
pushaw
and
jg
dec
xchg
jp
mov
int
mov
gs
inc
cmp
mov
inc
stos
lods
mov
call
jns
lods
pop
and
dec
fdivrl
mov
in
fdivl
fiaddl
pop
scas
stos
icebp
mov
mov
sbb
mov
ret
fimull
add
jl
fnsave
loope
xlat
fistl
inc
insb
cmp
ret
fs
push
adc
hlt
ret
xchg
scas
loop
icebp
inc
cld
jbe
ret
aas
adcl
sub
shl
stos
jne
enter
outsb
xchg
gs
and
sbb
pop
push
rorl
xlat
and
push
mov
pop
addl
or
pop
adc
xor
mov
in
push
mov
dec
js
pusha
sarl
in
int
xor
testl
push
xor
adc
adc
clc
aas
pop
jl
and
das
mov
stos
out
popa
mov
cmp
jmp
add
mov
fsubl
mov
mov
std
loop
push
mov
jae
or
lcall
test
fisubrl
loope
and
out
insb
divb
mov
ret
outsb
loopne
ljmp
repz
cmpsl
cld
push
ja
scas
push
mov
mov
jp
mov
insb
sub
movsb
jecxz
test
dec
hlt
mov
ds
lea
inc
ss
pop
jo
jg
and
enter
je
mov
in
fists
jg
xchg
sub
add
push
dec
xchg
mov
cmpsl
push
xchg
sbb
call
fs
sbb
lret
in
pop
push
mov
sbb
and
sub
int
dec
mov
movsb
push
test
aaa
cmp
fmull
push
lock
insl
ds
push
cmc
add
push
push
add
ret
fcmovb
push
scas
popf
add
and
push
pop
int
sbb
shlb
nop
cli
mov
movsl
imul
xor
sbb
jg
fmuls
adc
iret
mov
and
pop
pop
fsubrs
dec
xor
out
pusha
dec
aad
mov
fstpl
jb
fwait
or
jo
roll
out
xorb
loop
out
lock
ds
cmc
dec
xchg
jno
test
adc
push
sbb
icebp
mul
ss
rolb
sub
jo
call
xchg
fwait
xor
mov
fcoml
xor
mov
mov
xchg
push
dec
and
push
or
ds
cmp
imul
movsl
in
jae
pop
leave
jp
rcrl
xchg
stc
in
inc
sub
jbe
bound
lock
push
jb
cltd
or
inc
data16
daa
mov
jne
pop
rolb
arpl
pop
xor
xchg
inc
mov
and
pusha
sbb
nop
mov
cs
sub
clc
jl
mov
das
push
sarl
mulb
mov
jmp
mov
mov
mov
out
dec
cmc
fwait
fs
and
and
fcmove
inc
test
clc
xchg
push
cld
jno
pushw
stos
mov
or
mov
inc
clc
and
and
and
xchg
pop
lods
ret
push
mov
dec
jbe
xor
push
fists
sbb
pop
icebp
lods
sub
xor
aad
jne
push
xor
mov
aaa
pop
int
sub
es
push
jno
dec
rol
test
or
pushl
cmc
in
fnstsw
jp
and
xchg
sub
mov
fwait
in
dec
dec
inc
mov
shll
fmul
or
mov
sub
daa
mov
sbb
hlt
mov
jne
inc
or
imul
fcmovnbe
fisubl
or
into
sbb
lahf
imul
mov
mov
cmpsb
dec
cmp
adc
add
int3
leave
cmpsb
and
xchg
mov
push
lods
push
or
js
push
sub
sub
imul
dec
hlt
int3
xchg
setge
jno
push
mov
fisttps
gs
lock
cwtl
in
insb
jle
xchg
xchg
icebp
sub
or
pop
nop
pop
rcrl
or
add
push
cmc
pop
push
scas
cmp
inc
ret
sahf
test
push
add
lock
das
jnp
lret
imul
xorl
jbe
prefetch
xor
ljmp
loopne
xchg
or
fst
out
sub
xchg
mov
mov
ret
int3
dec
mov
inc
mov
imul
movsl
jnp
add
jp
xor
outsb
hlt
popf
repz
addl
cwtl
ljmp
xor
jg
xchg
sub
mov
xchg
add
scas
xchg
fstps
mov
jo
jne
movsl
aaa
sub
xor
xlat
arpl
push
dec
js
test
add
jnp
sarb
fnstsw
adc
lods
pop
imul
dec
ret
push
popf
aad
mov
enter
insl
test
jns
jo
add
mov
sub
lds
push
pusha
mov
cs
inc
xchg
sbb
mov
or
dec
scas
sbb
adc
daa
sub
pop
rcrb
scas
jb
sti
fadd
add
scas
xor
ja
push
and
mov
sbb
leave
in
push
xor
adc
movsb
xchg
fucom
dec
adc
loope
enter
cwtl
jge
xchg
jmp
sbbb
inc
hlt
fstps
sbb
aaa
test
jnp
lds
adc
mov
in
xor
sub
sbb
ds
adc
mov
movsb
out
mov
push
aaa
pop
repnz
xor
dec
add
and
not
aaa
mov
leave
fwait
jp
dec
or
sub
dec
jp
dec
insb
inc
jmp
ficompl
xor
add
mov
sub
pop
sbb
xchg
imul
fidivrs
xchg
test
push
in
mov
adc
cli
aad
or
das
mov
sub
cmp
nop
js
icebp
das
jbe
int3
mov
movmskps
int
insl
pop
movl
aas
fmull
mov
movsb
pop
jno
cwtl
clc
cmp
mov
cmc
aad
inc
mov
lea
jo
lock
rclb
xlat
inc
nop
sub
into
jg
xor
mov
xor
jp
push
inc
xchg
ljmp
adc
mov
dec
das
mov
cmc
mov
iret
pop
and
dec
insl
pop
int3
sub
lods
add
xor
jl
xchg
ja
lcall
jge
mov
repnz
add
mov
push
push
rclb
popf
ss
jecxz
iret
stos
mov
lea
jp
inc
fs
and
xchg
nop
jnp
dec
lods
mov
xchg
jle
dec
adc
sahf
dec
adc
jmp
imul
leavew
shlb
notb
rolb
out
test
xor
cmpsl
dec
mov
pushf
dec
loop
pushf
rclb
lret
jnp
hlt
enter
dec
push
shl
jae
jl
int
jne
bound
loop
dec
std
imul
mov
test
ljmp
add
testl
sbb
dec
dec
lahf
ret
and
mov
pop
mov
iret
in
fs
mov
mov
push
loop
mov
and
jbe
mov
in
mov
les
std
in
or
sbb
xchg
pop
ljmp
or
dec
stos
xchg
jge
jg
ret
xorb
outsb
mov
sbb
mov
rcrb
fldt
sbbl
lahf
cld
insb
gs
je
fs
and
popf
jle
clc
xor
dec
push
into
icebp
imul
sti
or
mov
push
inc
cld
aaa
pop
push
jno
jbe,pn
fadds
mov
stos
pop
dec
popf
and
pop
sub
scas
in
pop
rorb
xor
pushf
cmp
outsl
out
inc
cmp
mov
or
xchg
jae
sub
add
add
inc
sbb
mov
arpl
in
and
pop
icebp
idiv
mov
ss
xchg
testb
xchg
dec
pop
outsb
inc
adc
and
mov
cmp
inc
jle
lods
outsl
xchg
in
insl
popa
cmp
push
out
lock
xlat
mov
nop
mov
test
xor
push
cld
pop
lcall
inc
inc
push
sahf
jle
inc
insb
ss
and
iret
jne
push
mov
lret
xor
sbb
and
std
jmp
or
pop
push
cmp
es
push
cwtl
xchg
js
or
pop
inc
mov
dec
pusha
jle
dec
sub
adc
or
cwtl
in
sub
pushf
jbe
pop
and
popa
loopne
in
aas
out
lahf
cmp
pop
mov
outsb
out
in
loopne
sti
mov
aad
pop
mov
sub
nop
add
inc
and
test
cmp
scas
and
xchg
mov
ja
mov
fwait
sahf
xchg
sbb
subl
aaa
movsl
push
sbb
daa
and
cmpsl
jmp
test
push
push
jns
inc
adc
inc
mov
jbe
mov
stos
inc
jo
sub
jb
repz
jge
push
xchg
mov
cld
mov
outsl
clc
inc
ror
push
pop
pop
mov
repz
jne
adc
pushf
and
mov
or
and
sbb
push
sbb
fildl
pop
cmp
nop
insl
es
and
and
es
leave
mov
test
mov
xchg
adc
xchg
or
cmpsb
jbe
xor
jmp
inc
stos
sbb
enter
sbb
in
mov
in
mov
xor
js
mov
popf
and
daa
mov
frstor
pusha
jne
js
adc
bound
lahf
ss
movsb
enter
repnz
push
stos
addr16
sub
or
adc
shll
ficoms
mov
popf
fistpll
test
mov
push
int3
dec
jnp
jecxz
in
inc
jmp
pop
ficomps
pop
push
sub
nop
inc
aam
pop
repz
lea
stos
xor
mov
mov
mov
or
and
in
xchg
jg
pusha
jbe
sub
or
movsb
lcall
les
je
pop
divb
div
div
mov
xchg
xor
adcb
fisubl
dec
mov
jbe
lea
movsl
test
xchg
hlt
mov
in
loop
addr16
mov
push
repz
lcall
dec
xor
cmpsb
stos
mov
jae
mov
mov
adc
adc
cwtl
mov
dec
mov
adc
xchg
mov
adc
sub
sbb
aaa
in
mov
sbb
inc
xor
mov
and
dec
xor
adc
out
ja
push
xor
data16
repnz
or
add
sub
xchg
bound
or
filds
shl
jle
push
xchg
shll
jl
lcall
loope
pop
stos
rorb
pop
pop
cld
ds
and
sar
sub
lea
shll
sub
outsb
scas
pop
xlat
in
bound
jl
fistpll
push
xchg
shlb
test
es
int3
or
push
mov
sub
jecxz
or
cwtl
mov
jp
mov
es
or
jl
fisubs
jns
sbb
push
xchg
nop
lret
jbe
scas
gs
arpl
popf
sub
add
mov
ljmp
jno
movb
pop
movhps
push
mov
test
mov
sub
cmp
jae
push
mov
adc
rcrl
cmc
gs
popa
or
arpl
aad
mov
add
lea
mov
adc
movsl
lcall
inc
test
jle
inc
inc
mov
push
out
test
jge
cld
ss
je
xchg
test
lods
das
lock
xchg
adc
insb
clc
testb
sbb
adc
jns
stc
jmp
pop
into
int
adc
dec
push
scas
cs
outsl
mov
inc
setns
adc
and
or
cmp
add
or
and
scas
das
dec
push
mov
shlb
call
adc
xorl
cli
imul
inc
pop
movsl
dec
cmp
loop
add
dec
mov
xchg
cs
pushf
sbb
push
add
movsb
inc
cmp
aam
repz
and
mov
push
stc
stos
dec
cmp
in
fiadds
enter
nop
or
mov
out
and
fsubrs
pop
mov
subb
lea
in
xor
sbb
sarb
insl
jns
cmpsb
xor
outsb
sahf
daa
jmp
in
imul
jae
cld
fadds
les
inc
insb
sarl
dec
add
inc
std
jbe
dec
int3
ds
push
mov
scas
out
push
popa
filds
out
call
push
ffree
mov
daa
xchg
div
mov
adc
push
lds
adc
pop
bound
repnz
in
cs
in
add
loopne
out
inc
leave
pop
out
sub
mov
aas
add
dec
sub
cld
das
fwait
sbb
adc
stos
cwtl
sbb
dec
out
xlat
shlb
push
outsl
mov
out
aaa
pop
pop
repnz
arpl
and
xchg
mov
js
pushl
push
lahf
fistl
rclb
push
pop
ja
div
adc
cmpsb
mov
iret
mov
hlt
data16
pop
mov
or
pop
aaa
jmp
cli
add
dec
aas
xor
in
push
cmp
cmpsl
adc
dec
push
mov
and
xor
je
dec
dec
aam
fcoml
adc
xchg
nop
pop
ljmp
or
jae
pop
test
xchg
pop
xor
cld
xor
out
in
and
mov
lcall
xchg
imul
jb
pop
xor
mov
or
fsts
adc
movb
pop
mov
mov
insl
cmp
cmp
imul
insb
shr
push
sbb
test
and
mov
idivb
insb
aas
loope
or
mov
mov
push
stos
xchg
dec
jo
movsl
push
fisttpl
loopne
inc
pop
arpl
sbb
cmp
inc
fadd
fisubrs
call
pusha
jecxz
stc
sub
dec
repnz
sub
ficoml
jl
nop
sbb
inc
es
subb
mov
dec
into
xchg
xchg
push
mov
or
jecxz
inc
test
push
dec
sbb
mov
fldlg2
aam
jecxz
hlt
rcll
sub
ret
sub
xlat
and
notl
sbb
gs
xlat
shrl
adc
lahf
insb
push
mov
fists
mov
cmpsb
int
adc
push
jg
jg
ds
pop
cmpl
xor
sbb
and
xor
push
pop
faddl
sub
gs
pop
mov
fildl
enter
mov
xor
ja
sub
ljmp
pop
cli
pop
daa
cmpsl
jno
mov
pop
xchg
inc
xchg
jae
jae
leave
pop
pusha
xchg
add
test
add
adc
pop
dec
adc
push
in
mov
mov
and
loopne
xchg
aas
enter
lods
lret
mov
fcoml
xchg
push
sub
jno
int3
sub
mov
sbb
push
mov
jb
cmp
leave
scas
hlt
add
mov
jp
cmpsb
xchg
mov
aam
int
adc
in
add
jbe
adc
sbb
cld
xchg
enter
cltd
loopne
jns
pop
push
and
cmp
jecxz
ficoms
mov
mov
lds
fs
jg
out
sub
movsl
gs
and
add
lret
lods
dec
push
or
leave
shlb
mov
in
and
movsl
lcall
lea
fucompp
std
sub
or
sbb
fs
pop
inc
pop
in
stos
mov
mov
cmp
mov
mov
pop
push
xchg
adc
int
inc
inc
inc
mov
pop
stc
fnstcw
scas
pop
sahf
inc
jl
mov
cmp
stc
pop
jg
cli
jmp
aad
jle
lcall
aad
sub
daa
shll
cmpsb
sahf
jge
in
lret
mov
mov
notl
adc
imul
lcall
shlb
xchg
adc
testb
jmp
out
xorl
dec
icebp
jnp
inc
pop
cmp
xor
out
sti
inc
cltd
mov
das
push
sbb
or
sub
lahf
or
or
out
hlt
leave
adc
cmp
mulb
lods
inc
mov
adc
sbb
mov
cmp
les
xchg
mov
jecxz
shll
or
push
jae
jno
jnp
jnp
cltd
pop
nop
and
mov
push
mov
test
pop
scas
and
sbb
movsl
jno
xchg
popa
and
in
adc
std
sub
sahf
sbbb
fs
lret
loope
je
inc
outsl
adc
sub
cmp
pop
sub
mov
negb
mov
push
pop
roll
add
push
xchg
cmp
ja
push
imul
pop
out
add
mov
jmp
aas
int3
inc
test
xchg
pusha
cli
in
repz
lds
push
loop
dec
pushf
into
and
mov
lods
and
jb
fcoms
std
sbb
pop
mov
cmp
jmp
mov
shll
lcall
fildll
out
cmp
inc
pop
jo
inc
and
mov
mov
or
mov
ret
call
rcr
push
jbe
jl
aad
adc
imul
mov
fisttps
int
lcall
adc
es
sub
popl
sbb
lock
jge
mov
sbb
out
pushf
push
mov
aam
or
xchg
or
cmp
sbb
das
test
in
jb
popa
pop
rcrl
jle
fstpl
push
shlb
sbbb
add
ficoms
rcl
into
insl
xchg
iret
in
notl
das
ds
pushf
test
iret
subb
aad
aas
add
cmc
sahf
xor
lret
mov
pop
bound
call
pop
sti
mov
bound
test
cmp
leave
cmp
push
mov
pop
lods
pop
add
dec
lods
addb
ja
test
fsubrl
cli
lock
inc
pop
and
lret
jmp
std
mov
dec
ss
mov
cli
pop
mov
clc
fdivrs
test
sbb
push
jns
test
push
xchg
pushf
xchg
mov
das
scas
dec
dec
cmp
lock
or
test
mov
add
jns
dec
dec
fbstp
aas
aas
dec
mov
push
popa
or
push
sub
mov
xlat
and
popf
and
popa
testb
aam
gs
add
mov
shr
popa
add
insl
test
addr16
cmc
sarb
jb
inc
pop
mov
ljmp
push
js
jo
mov
mov
cmpl
xchg
jp
push
stos
mov
in
jne
lcall
outsl
ds
sbbb
pop
pop
mov
dec
das
test
iret
lods
jle
push
push
int
add
add
xchg
arpl
add
rcr
dec
leave
xchg
sub
cld
mov
sub
sub
icebp
icebp
cwtl
add
sbb
or
jp
mov
inc
movsl
jmp
movsl
aas
fstl
cmpsb
das
movsb
xchg
std
mov
popf
scas
jge
pop
jecxz
adcb
sbb
iret
xor
mov
sti
loope
cmp
dec
mov
xchg
push
addr16
imul
out
les
aad
lret
enter
movsl
imul
movsl
fldl
jmp
mov
fsubs
into
outsl
push
dec
in
movsl
fsubrl
push
mov
int
sbb
pop
inc
jp
test
jecxz
sub
mov
pop
mov
pop
imul
repz
add
jg
lods
outsl
inc
and
dec
push
or
outsb
insb
and
icebp
adc
mov
enter
lret
jae
jno
or
fistpl
subb
sbb
jmp
cmp
or
mov
pushf
xchg
add
xchg
or
scas
rep
push
mov
cmp
rorb
das
movsl
nop
das
push
add
imul
add
dec
mov
sbb
mov
in
adc
int3
sahf
mov
xchg
mov
pop
adc
mov
iret
cmp
enter
aad
xchg
mov
out
je
mov
lret
repnz
stc
xchg
stos
lcall
or
sbb
push
loopne
std
push
and
dec
xchg
xchg
jne
in
into
xchg
sbb
notl
lds
pop
fidivrl
sub
pop
xchg
mov
imul
orb
cmp
push
sub
into
iret
sti
adcb
cmp
xor
xchg
in
sub
add
mov
jge
mov
jns
sbb
sbb
push
sahf
aas
ljmp
mov
or
sahf
adc
jl
fcoml
xchg
add
in
iret
mov
fldenv
sti
and
cmp
jp
push
hlt
cs
xor
aas
mov
cltd
test
mov
popa
das
into
and
pushf
repnz
push
mov
jnp
popf
and
repnz
xchg
mov
test
ret
leave
inc
popf
cmp
dec
test
push
mov
out
inc
out
mov
cmp
fwait
stos
pusha
in
out
int
sub
dec
adc
fmul
push
mov
mov
jbe
bound
pop
xor
jge
pushl
mov
sub
out
pop
fidivrs
lcall
jo
clc
mov
push
test
xchg
fidivrl
popa
out
sbb
pop
and
xchg
sub
jmp
scas
adc
scas
call
cmp
ss
push
sqrtsd
pop
push
inc
mov
insl
loop
push
push
pushl
jne
movsl
mulb
inc
mov
pop
push
mov
int3
bound
shrb
outsb
and
int
in
les
bound
xor
sbb
push
iret
mov
int3
aam
ficomps
cmp
pop
jae
lods
or
repz
pop
add
in
cmp
fdivrl
fldenv
shlb
lcall
lods
sub
loop
ret
mov
cmpsb
arpl
push
insl
les
xchg
aaa
jmp
scas
and
pop
les
inc
mov
jnp
push
mov
out
sbb
fstps
xchg
enter
mov
insl
gs
loope
pop
repnz
in
pop
jae
lret
adc
arpl
test
stos
sub
into
inc
push
dec
push
faddp
jl
or
xor
test
test
xchg
xlat
neg
mov
xor
xor
dec
mov
mov
add
pop
loop
lcall
leave
mov
adc
sbb
sbb
or
fisttpll
in
pop
cmp
shll
cwtl
stc
std
movsl
mov
int
clc
cmp
ret
negb
inc
iret
out
sbb
and
ljmp
xor
lods
xor
add
fwait
pop
xchg
pop
faddl
lcall
pop
sarl
push
sub
mov
stos
movsb
cmp
jb
outsl
loop
outsb
aaa
adc
dec
inc
pop
mov
push
testl
adc
add
mov
adc
mov
sti
adc
xchg
jo
push
bound
pop
pop
in
pop
pop
xor
adcb
jnp
push
aas
loopne
sub
int
ss
sbb
xchg
adc
push
sti
pop
movsl
or
pop
fucomi
ret
xor
fldcw
aaa
push
add
and
xchg
and
sahf
push
out
add
fs
test
jbe
mov
fdivrs
ret
cld
add
adc
movsb
out
inc
test
push
jle
add
dec
xor
cltd
sti
sub
jns
stos
push
idivl
mov
andl
popf
in
sbb
pop
xlat
fadd
mov
fdivl
ljmp
adc
sub
lret
push
lret
mov
roll
stc
lcall
testl
int
pop
incl
in
jecxz
or
jg
inc
xchg
mov
push
hlt
cmp
jle
repnz
mov
aad
lahf
in
push
loope
data16
sbb
bound
mov
sub
cmpsl
repnz
sub
mov
cmp
mov
movsl
pusha
sbb
subl
dec
out
ds
in
fs
in
ja
xchg
pop
xchg
push
cld
addr16
cmp
xchg
push
mov
xor
shll
jae
and
inc
sahf
cli
push
push
scas
adc
sbb
jmp
push
push
fninit
les
sarb
cs
jle
cmc
shll
dec
lds
repz
sub
std
rorl
sbb
jmp
mov
ss
jnp
and
mov
jae
inc
cltd
dec
lret
in
es
outsl
ja
sahf
mov
addr16
jne
leave
cmp
shl
lcall
adc
mov
stos
inc
faddl
test
xchg
jns
cmpsl
ret
jae
enter
push
stc
insb
in
dec
jns
xchg
cli
mov
popf
mov
jmp
sahf
cld
push
testl
inc
mov
pushf
xorb
lcall
lcall
mov
pop
add
cmp
mov
cmc
adc
das
andl
loopne
cmpb
dec
xchg
fwait
sub
pop
in
dec
pop
jg
arpl
or
xor
je
mov
ret
ret
insb
out
idiv
roll
test
mov
cmpsb
dec
xor
cld
pop
push
icebp
ss
filds
repnz
or
addr16
lock
push
inc
rolb
scas
sub
repnz
sbb
movsl
arpl
nop
inc
xchg
mov
scas
cmp
mov
shlb
xchg
sbb
aad
arpl
insb
int
hlt
out
xchg
stc
in
shll
or
mov
ret
lret
xor
popa
sbb
xchg
push
jge
arpl
jge
loopne
ret
or
repz
mov
sbb
xor
clc
jae
jae
in
add
jno
ljmp
cmp
push
out
lcall
inc
ds
jnp
mov
mov
jmp
sti
les
mov
int3
push
dec
xchg
push
shlb
jge
push
cmp
ret
or
jl
push
clc
pop
push
xor
pop
cmpl
int3
fsubs
movsb
mov
xchg
sahf
inc
pop
and
or
jbe
hlt
pop
rcrl
fcompl
cmp
mov
andl
int3
jmp
xchg
sub
sub
push
mov
sub
and
int
jle
xor
mov
xor
daa
dec
adc
int3
das
je
out
in
hlt
mov
iret
inc
adc
mov
xor
jno
adc
inc
xor
mov
adc
leave
cmpsb
xor
ret
popa
aad
es
jo
imul
les
mov
dec
xchg
fs
pop
and
push
mov
subl
cmp
sbb
adc
arpl
mov
test
scas
pushw
cmp
in
fisttpl
mov
mov
mov
pop
fwait
dec
roll
dec
popa
push
and
pusha
out
out
sub
loop
idiv
outsl
leave
orl
mov
arpl
mov
adc
lcall
push
mov
test
movb
jne
mov
loop
push
out
lock
rcrb
push
mov
add
aas
inc
or
and
inc
sti
mov
push
mov
dec
repz
cmp
inc
scas
mov
pop
ret
inc
cmp
xchg
loope
push
into
dec
rcrw
mov
push
sarb
mov
out
pop
neg
pop
xchg
sbb
and
xchg
push
bound
and
lods
and
inc
je
pop
cmp
xchg
cmpxchg
pop
mov
in
xor
xor
mov
or
sbb
push
mov
nop
test
cltd
jge
enter
sub
mov
mov
sahf
xchg
mov
imul
jne
dec
cli
stos
mov
cmp
add
sbb
mov
pop
and
icebp
adc
call
push
adc
and
sarb
sbbb
xor
push
xor
pop
dec
jnp
xchg
xchg
pusha
dec
add
loop
shll
test
repnz
xchg
fisubl
fs
adc
sbb
sub
sti
xor
jmp
add
cmp
pushf
mov
rolb
ss
adc
rcrl
cmp
pop
rcrb
push
inc
lcall
xor
mov
fidivrl
xchg
cmp
sarb
xor
stos
adc
mov
inc
pop
fimuls
mov
mov
shl
pop
and
sbbb
pop
lcall
es
sti
push
ret
mov
pop
lods
jnp
or
loope
push
es
xor
dec
sub
fs
jne
arpl
cmp
jg
push
sar
mov
dec
cmp
cli
cmp
inc
push
mov
test
lock
ja
lret
nop
ljmp
lods
push
mov
std
mov
lcall
bound
cmpl
dec
sub
insl
test
jno
leave
and
cs
mov
dec
in
xchg
adc
jle
jo
pop
xchg
adc
in
or
inc
outsb
je
js
mov
aad
add
or
outsl
rcr
push
mov
xor
out
mov
je
sbb
aam
jge
inc
mov
daa
add
inc
mov
fadd
das
mov
das
jmp
les
mov
mov
dec
xor
jns
stos
daa
popa
dec
add
popf
mov
mov
imul
mov
cmp
lods
mov
push
aaa
and
rorb
push
jns
leave
ror
repnz
lods
sbb
test
fcmovnbe
or
lds
repnz
mov
add
or
in
mov
cli
das
vmread
pushl
ret
mov
out
or
or
in
xor
int3
daa
adc
jecxz
sub
in
sti
push
push
push
mov
jno
mov
shlb
push
out
pmulhuw
fcomps
std
push
addr16
pusha
test
add
js
mov
mov
lret
in
or
or
sbb
push
mov
dec
xchg
lds
sti
roll
movsb
das
jnp
jnp
rol
stos
shlb
pop
sbb
pop
jbe
sbb
mov
or
mov
mov
xchg
fbstp
xchg
fstpl
stos
out
push
dec
sub
adc
enter
inc
mov
mov
popf
cmp
out
call
leave
xchg
inc
push
loop
out
jo
sub
aad
sti
and
sbb
xchg
cmpsl
enter
das
mov
mov
daa
dec
mov
test
jp
mov
dec
testb
jmp
push
mov
xor
sub
stc
mov
popa
or
and
and
inc
adcb
mov
xchg
jge
fmul
les
jb
xchg
pop
stos
fisttpll
aas
sbb
repz
xchg
jmp
xor
mov
out
adc
repnz
inc
sbb
push
pop
inc
enter
call
lods
out
and
sbb
fldl
add
pop
sbbb
inc
sbb
jns
stc
ret
xchg
cwtl
mov
mov
bound
mov
xor
and
sbb
or
jl
mov
add
rclb
sub
jae
pusha
fisttpll
pop
xchg
fdivs
mov
xchg
dec
lcall
rcll
jno
sbb
ds
add
bnd
neg
push
xchg
test
mov
inc
in
sbb
mov
push
sub
xchg
mov
icebp
movaps
push
dec
lods
push
cli
xchg
and
insl
bound
loopne
out
subb
loope
push
mov
iret
push
mov
test
rcll
inc
mov
rol
jne
leave
jp
sub
insl
mov
imul
loop
add
std
into
insb
clc
push
jae
lret
aaa
out
push
enter
inc
out
popf
push
push
lcall
out
popf
push
sahf
jle
jmp
push
popf
adc
sti
testl
rcl
mov
int
mov
pop
and
xchg
mov
pop
sub
adc
push
cmp
fwait
xlat
mov
sub
pop
in
in
sbb
test
aaa
add
xchg
xor
sub
sub
inc
or
cld
adc
test
les
push
push
inc
add
pop
cmp
orl
jmp
les
mov
lret
fnstcw
fsubp
aad
adc
gs
data16
mov
sub
sahf
outsb
sahf
shll
mov
es
loope
fwait
inc
nop
in
and
call
out
stc
int3
pop
or
pop
adc
dec
xchg
add
pop
addr16
movsl
jno
jns
dec
mov
sub
outsb
std
push
sbb
mov
outsl
arpl
inc
jns
lret
inc
xchg
push
fnstcw
scas
out
sbb
and
add
mov
or
pop
dec
cmp
jge
imul
sub
in
cli
mov
fists
lds
mov
add
jecxz
testl
xor
aaa
xor
inc
pusha
and
pop
fldenv
pop
aas
push
pop
lret
mov
inc
test
push
cld
addl
sbb
xlat
jmp
xchg
pushf
push
in
jnp
cltd
ret
mov
loopne
lock
lock
das
pop
rorb
mov
fwait
outsl
iret
mov
push
xchg
daa
cli
push
repnz
cmp
push
xchg
cmp
pusha
je
pusha
aas
call
clc
jl
std
and
imul
mov
pop
jnp
xchg
adc
push
mov
cmp
scas
scas
sbb
push
mov
mov
stos
mov
jmp
sbb
sub
movsb
pushf
cmp
inc
pop
push
out
inc
testl
fstpl
in
xchg
adc
fistpll
jo
push
out
sbb
mov
mov
imul
icebp
in
push
mov
sbb
sahf
pop
lods
xor
mov
push
jl
jmp
pusha
mov
or
or
fildll
cmp
or
aaa
lret
dec
push
jne
add
and
inc
std
fwait
jl
out
lods
repnz
not
clc
or
popa
fiaddl
pop
pop
lods
pop
repz
leave
aas
sarl
or
sub
xchg
lret
into
arpl
sub
mov
pop
sbb
cmp
stos
xchg
add
dec
es
addb
movsb
in
xchg
push
cmpsl
mov
push
or
inc
fwait
dec
xchg
push
imul
lret
pop
fcoms
test
mov
jo
cmp
jge
filds
jno
fmuls
xor
or
imul
inc
pop
xor
pop
inc
in
ljmp
mov
ljmp
faddl
in
inc
enter
mov
sub
dec
pushl
or
cmp
int3
sub
inc
imul
and
jno
andb
js
adc
pop
pop
outsb
imul
imul
inc
int
mov
sar
pop
inc
es
sub
test
push
and
inc
out
test
inc
add
xchg
stos
roll
std
int
pop
aaa
xchg
dec
and
add
push
test
or
pop
in
lods
mov
mov
adc
arpl
rcr
xchg
cmpsb
lods
xchg
out
pusha
in
in
or
out
ret
sub
mov
out
ja
inc
push
je
mov
hlt
dec
xor
ja
pop
je
adc
ja
pop
addb
stos
xchg
xchg
mov
sahf
lret
cltd
stos
sbb
lahf
lahf
subb
push
xchg
in
movsl
pop
rcrb
iret
repz
add
in
movsl
mov
fwait
jmp
cmp
les
ds
repz
sub
inc
sub
add
dec
icebp
insl
cli
push
pop
ficompl
and
add
add
mov
add
in
and
fcmovnu
push
cmp
lcall
cmpsl
pop
ss
aad
in
ret
dec
js
xor
shrb
test
add
push
js
fstpl
ja
mov
mov
and
cmc
pop
sbb
dec
fwait
outsl
ret
cli
cmp
insl
inc
jns
mov
inc
pop
or
idivb
or
icebp
mov
fldt
andl
into
add
pop
adc
js
lret
dec
cli
mov
pop
dec
nop
add
out
imul
stos
add
lock
ja
jb
and
jne
nop
sub
jo
outsl
mov
pop
into
dec
inc
fstpl
pop
aam
mov
xchg
sbb
jbe
cmp
inc
rolb
dec
mov
nop
rorl
rcrl
std
mov
das
dec
push
pop
leave
orb
cmp
dec
in
mov
adc
mov
fcomp
pop
les
or
mov
and
and
mov
jae
pushf
sbb
mov
mov
jae
add
sbb
pop
cmp
or
xchg
cmpl
scas
cmp
sub
clc
xor
int3
out
fs
push
popf
push
mov
je
jmp
pop
in
add
sub
lret
add
pop
mov
dec
jno
repnz
sub
and
jp
scas
pop
ret
cmp
fwait
ljmp
push
jo
inc
sbb
std
xorb
dec
aam
loopne
fcmove
cwtl
and
push
jb
mov
dec
push
lret
in
pop
out
mov
and
ret
or
cs
sub
jecxz
xchg
filds
je
mov
in
loopw
xor
mov
jecxz
test
mov
mov
mov
mov
cli
gs
dec
jae
adc
repz
mov
pop
movsb
fs
and
and
dec
daa
js
mov
frstor
sbb
sbb
or
sub
xor
cwtl
outsb
fildll
inc
subl
fistl
ret
test
adc
repz
popa
jmp
mov
aam
fwait
add
int3
mov
mov
popf
sbb
pop
fwait
mov
aam
leave
jb
dec
outsl
ljmp
jmp
mov
and
add
shlb
pop
mov
inc
icebp
mov
jge
std
rorl
adc
xchg
jp
stc
or
mov
mov
mov
je
pusha
lcall
push
ss
popf
push
sbb
xchg
gs
push
pop
movl
stos
out
push
aad
fidivs
and
dec
inc
outsl
mov
sarl
dec
jl
mov
cmp
gs
mov
imul
pop
xor
fsubl
fsts
push
inc
or
enter
rcr
orl
mov
and
scas
push
xor
inc
xor
cmp
gs
mov
pusha
repnz
dec
mov
cmp
hlt
insb
leave
loopne
mov
mov
xor
stos
nop
cmp
test
aam
bound
sahf
clc
out
cmp
popa
popa
mulb
daa
ficompl
jmp
cmp
mov
mov
das
clc
pop
out
sbb
mov
push
pop
xchg
xchg
push
rolb
push
lcall
enter
mov
ret
pop
ljmp
mov
shrb
sub
mov
jp
mov
cmp
pop
hlt
xchg
pop
jg
inc
gs
loopne
cmpsb
sti
test
clc
icebp
test
push
inc
cmpb
push
push
xor
or
jmp
mov
scas
je
test
lret
int
icebp
les
orl
pop
dec
xchg
into
ljmp
imul
xchg
sahf
dec
in
and
adc
fwait
dec
cmp
mov
das
xchg
adc
mov
adc
or
les
cs
js
fisubrs
jmp
ret
add
fidivrs
fdivrp
stc
jb
jge
xchg
fcmovb
das
push
xor
lds
jb
mov
cs
sar
xchg
pop
pop
inc
and
subl
pushf
sbb
fdivl
ret
mov
mov
mov
fadds
bnd
pop
push
mov
btc
mov
xor
nop
jmp
sti
xchg
int3
jns
adc
pop
lods
adcb
dec
sbb
iret
rclb
xor
and
jl
mov
push
movsl
fistpl
daa
scas
in
lcall
loop
and
xchg
xchg
cmp
push
pop
clc
mov
push
pusha
call
cmp
cmpsl
arpl
adc
lcall
push
sti
mov
popf
adc
pusha
jg
ja
add
push
test
jno
add
jg
lods
dec
cmp
or
sub
rol
sahf
add
inc
and
popa
out
mov
fmuls
push
movsb
ret
xchg
clc
loop
sbb
sbb
jmp
adc
xchg
push
mov
pop
aas
cld
shll
insl
mov
push
cmp
ss
ja
sti
push
test
ja
movsb
lods
pop
in
jp
jbe
test
adc
int3
outsl
ret
push
lds
mov
mov
pop
stos
fwait
push
inc
jg
cld
pop
mov
ret
fidivs
aad
arpl
cmp
lea
outsl
fwait
add
push
xchg
pop
xchg
inc
cmpsb
bound
leave
mov
xchg
xor
das
idivb
dec
shrb
iret
cs
or
push
push
rolb
imulb
test
jg
dec
sbb
dec
loop
mov
or
dec
sbb
xlat
in
imul
xchg
shlb
out
stos
xchg
jne
sbb
orb
pusha
cmp
aaa
dec
jo
mov
or
and
sti
mov
mov
push
jb
sar
les
and
jb
xor
gs
pop
test
aad
pop
mov
xlat
lret
daa
mov
sub
outsl
push
fisttpl
stos
mov
pop
mov
data16
inc
mov
lret
inc
push
ret
lret
fsubp
stos
incl
cmc
mov
out
jl
xchg
push
cmp
aad
or
cmp
push
inc
jecxz
test
test
mov
sub
aas
jns
psadbw
jbe
out
xchg
xor
mov
push
pusha
fmuls
and
aam
cwtl
xchg
inc
mov
or
fwait
push
push
setl
aaa
inc
cld
sbb
lds
cmc
pop
xchg
test
or
lcall
icebp
xchg
jmp
xchg
pushf
push
xchg
in
dec
pop
imul
cmpsb
sub
xchg
rorl
insb
je
je
mov
pop
in
cwtl
jnp
and
pop
lds
repz
jnp
lea
dec
sub
push
sub
sahf
ror
or
jp
fildll
test
push
insl
ret
std
xor
mov
push
mov
pusha
mov
imul
push
call
loop
push
add
nop
mov
jge
out
cwtl
ds
jns
ret
or
sarb
mov
inc
or
push
pop
and
rol
int3
bound
inc
mov
sub
ficoms
or
in
popf
test
xchg
shrb
add
lock
sbb
adc
pop
push
ds
xchg
xor
ss
stos
or
pop
sete
icebp
das
fisubrl
push
jmp
adc
stos
hlt
adc
and
sbb
cmp
ljmp
ret
ds
shlb
mov
xchg
cmp
jbe
scas
sarl
scas
in
sbb
stc
dec
xor
sub
shlb
push
and
add
xor
mov
lret
inc
sub
leave
mov
push
rcl
fcompl
sub
ret
pop
lret
mov
or
dec
lock
add
mov
jns
rorl
insb
out
shrb
sbb
push
sub
sbb
lea
jp
movsb
js
sub
jle
dec
xchg
xorl
ss
xor
sub
mov
xor
mov
pop
ffreep
enter
jg
andb
lret
cld
aad
cwtl
iret
lea
leave
cltd
outsl
pop
dec
jp
sub
cmpb
sub
aaa
mov
js
cmp
sbb
mov
inc
push
mov
inc
dec
xor
notb
pop
ljmp
mov
jbe
pop
hlt
int3
inc
in
aaa
movsb
xlat
scas
bound
mov
lods
cmpl
pop
mov
xor
adc
sub
cmc
imul
cmp
cld
push
and
mov
push
loopne
loopne
and
cli
dec
jl
pop
sub
or
jo
pushf
aas
xor
lcall
inc
data16
test
jg
in
mov
rclb
je
scas
fcoms
push
and
inc
or
xor
ds
in
mov
and
stc
lret
out
movsb
sub
mov
inc
dec
divl
stc
idivl
leave
cmp
cs
push
pop
xor
je
in
xchg
cmp
sbb
scas
and
pushf
fstp
jecxz
sub
cwtl
fsub
out
minps
rcrb
cltd
cmc
loop
rclb
loope
push
pop
mov
push
mov
adc
mov
sub
sub
inc
mov
sti
jnp
jnp
push
adc
mov
scas
mov
pusha
sub
jns
inc
loop
out
sub
cmc
lock
pop
and
int
mov
jp
into
xor
push
xorl
xor
xor
xchg
pop
and
push
sub
sub
dec
ds
pop
je
sahf
jo
pop
stos
std
or
xchg
mov
dec
clc
popf
lods
orb
cmpsb
xchg
add
lods
outsl
dec
jnp
mov
mov
push
nop
inc
jp
stos
sub
repz
orb
pop
and
clc
int
mov
jmp
cwtl
movsb
pop
or
xlat
fisubrl
inc
sbb
push
rclb
fiaddl
adc
popf
out
dec
je
out
xchg
mov
inc
mov
jmp
nop
fcompl
call
mov
jnp
cld
movsb
in
mov
pop
lods
mov
inc
lret
bound
mov
shll
push
idiv
or
fildll
pop
popf
push
xlat
in
add
shrl
push
lret
aam
inc
lea
cmp
sub
jmp
adc
dec
stos
mov
cmp
lods
dec
adc
leave
pop
jmp
cmc
rclb
hlt
or
cmp
test
mov
push
insl
sbb
dec
test
ljmp
dec
sti
adc
loop
sbb
push
stc
nop
test
addr16
inc
pusha
jns
in
test
xchg
xlat
cmp
addb
lea
jnp
cli
sbb
pop
mov
adc
push
dec
fxch
addr16
cli
add
cltd
mov
cmpsb
dec
cmp
outsb
xchg
out
xlat
adc
xor
in
lea
loope
jno
xor
sub
test
xchg
pop
push
add
mov
mov
lret
xchg
mov
inc
call
ds
in
movsb
jge
popf
dec
mov
outsl
lock
orb
jl
cmpsb
add
lcall
pop
fwait
dec
stc
add
insl
outsl
out
cmc
les
mov
popa
push
lods
rol
push
dec
stos
addr16
pop
mov
pop
fnsave
aaa
xor
lcall
mov
test
sbb
and
dec
xor
push
adc
gs
imul
or
xor
adc
insb
sub
into
sahf
dec
xchg
add
inc
and
out
xor
sti
and
repnz
cmp
bound
xchg
xchg
in
and
jns
push
jecxz
cli
stos
sub
or
sub
or
fnstenv
scas
jmp
mov
test
pop
sti
xchg
lock
dec
insb
pop
cmp
mov
cwtl
fisttpl
xor
int
jnp
mov
icebp
lods
loop
xchg
stos
cltd
lahf
adc
mov
and
imul
xchg
mov
xor
mov
xchg
rcll
out
mov
push
pop
addr16
cmpsb
jmp
pop
fcmove
pop
lds
stc
loopne
cmc
cmp
mov
and
cmp
subl
movsl
xchg
add
push
adc
movl
cmp
jnp
imul
imul
test
arpl
int3
mov
test
or
cwtl
or
cmp
scas
ja
dec
lret
cmp
es
sub
jp
mov
and
aad
xor
loopne
ja
add
xor
daa
push
lods
divl
out
and
xchg
sub
pop
mov
fsubrl
fstp
stc
xor
mov
push
inc
add
jge
xchg
dec
mov
pop
inc
and
cltd
stos
mov
ss
das
leave
ljmp
sarl
ds
adc
and
xor
xor
xchg
adc
pop
insl
push
push
xchg
xlat
xchg
lods
adc
mov
xorl
add
sub
fildll
pop
xchg
pop
pop
push
add
in
sbb
sarb
push
fsubr
ljmp
and
push
mov
mul
es
xchg
jae
shlb
pop
out
cli
xchg
aas
and
dec
test
xchg
movsb
iret
aaa
sbb
repz
loope
add
add
cmp
repnz
sub
addr16
inc
and
mov
sub
mov
pop
cmp
pop
repz
fcmovbe
stos
imul
hlt
out
and
sub
dec
in
sbb
sub
repz
and
popa
sarl
scas
in
or
cmp
bound
sbb
bswap
addr16
ja
mov
fstpl
cmp
test
or
fisubs
add
pop
imul
out
ret
in
lea
mov
push
dec
out
hlt
sbb
mov
in
sbb
std
sbb
push
push
aad
ss
mov
pop
rolb
xor
jl
loope
adc
mov
mov
sbb
lret
shlb
inc
mov
xor
mov
es
push
aas
sub
push
push
sub
mov
test
aas
mov
lahf
dec
or
sub
pop
push
add
xchg
shlb
divb
ret
xor
push
outsb
hlt
lcall
out
int3
cli
and
lods
adc
adc
mov
adc
dec
jecxz
or
or
dec
xchg
xor
xor
loopne
cltd
jmp
rcrb
or
fwait
fs
rcll
cmp
cmp
jmp
imul
loopne
adc
mov
test
test
scas
fldenv
fidivrl
dec
and
mov
inc
add
push
sahf
dec
inc
shlb
mov
ljmp
scas
test
int3
sbb
push
clc
cmp
mov
notl
sbb
sbb
sbb
cld
test
jg
mov
out
or
call
scas
loope
cmp
in
ds
clc
mov
rolb
mov
pop
lret
cmp
dec
and
cmpsb
test
imul
xor
aas
inc
lret
pop
jns
jnp
rcr
pop
pop
das
sarl
jg
jmp
add
xor
dec
and
pop
push
jbe
mov
fwait
jno
orl
imul
mov
pop
sub
js
cmpsl
inc
jb
ds
mov
lret
jle
test
iret
mov
and
xchg
xor
lcall
out
in
adc
inc
aaa
push
pop
div
shlb
sub
aam
popa
jp
shlb
xor
orl
push
sbb
cmp
xchg
movl
mov
insb
icebp
daa
sub
push
rcr
and
xor
aas
ja
gs
aad
inc
mov
lcall
inc
not
pop
push
jp
mov
mov
cld
sub
mul
pusha
insl
dec
loop
iret
sub
mov
inc
addl
adc
mov
insl
daa
loopne
testb
dec
adc
cmp
lods
or
in
add
ficoml
xchg
and
add
test
cli
imul
xor
inc
xor
pop
fcoml
and
jmp
in
inc
loopne
rorb
sub
cld
repnz
pop
xor
push
xor
add
push
mov
add
push
cmp
shr
pop
into
sbb
jl
movsb
mov
fsubl
dec
xor
imul
popa
mov
inc
stc
je
sti
jae
jl
mov
out
xchg
in
movsb
mov
inc
jae
cmp
mov
mov
shll
xchg
mov
pop
jno
inc
int3
lods
mov
cs
repz
jmp
dec
jl
in
or
enter
testb
sbb
push
xchg
stc
adc
into
adc
sub
mov
adc
popf
pop
mov
idivl
mov
jae
and
ficomps
aad
inc
repnz
test
mov
cmp
xrelease
sub
jge
dec
xchg
pop
aaa
inc
call
and
rcrb
aad
hlt
inc
shl
out
jnp
mov
loopne
pop
sub
lahf
loope
push
jo
xchg
mov
mov
push
cli
push
add
sar
jo
test
ror
jno
dec
lea
mov
push
repnz
in
dec
xor
inc
icebp
cmp
fistps
test
shrl
sahf
scas
scas
adc
pop
jmp
adc
and
jl
stc
jno
cltd
pop
add
ljmp
bound
pusha
sub
fsubl
pop
xlat
cmpsl
inc
mov
mov
lret
xor
sbb
and
inc
xchg
pop
loopne
stos
js
fmul
mov
stc
sub
lea
mov
jae
sahf
incb
js
pushf
loopne
in
in
add
xor
adc
push
xor
dec
out
push
push
fsts
lods
add
adc
xchg
test
test
cmpsb
jnp
or
push
mov
rcrb
fdivrs
mov
inc
addr16
ja
add
ret
pop
das
sub
mov
loope
lock
add
sbb
adc
lods
push
push
jecxz
leave
pop
mov
cmp
push
jp
or
jbe
fsubrl
push
leave
dec
jp
jnp
jae
idiv
icebp
mov
std
cmp
insb
xchg
xor
fwait
aam
mov
cwtl
fmul
sarl
inc
dec
pushaw
fbstp
inc
pushf
or
xor
push
push
cli
mov
mov
mov
cmp
xor
lret
dec
cmpsl
orl
jo
popl
inc
add
pop
mov
ljmp
jmp
or
adc
cmp
xor
stos
shrb
ss
stc
cmpsl
aaa
sub
adc
shrb
daa
les
popa
incl
jle
cmpsb
test
fdivrp
lods
sub
mov
aas
lret
clc
les
subl
out
out
mov
stos
nop
xchg
inc
cmp
pop
sub
sub
xor
mov
cli
mov
imul
fisttpll
sarb
fidivs
push
sub
push
les
cmpsb
xchg
mov
rep
inc
xor
out
cmc
loopne
mov
sub
and
es
movsl
mov
je
jg
add
push
cmc
out
into
or
cmpsl
fld
movsl
out
lret
mov
mov
mov
lds
xor
loopne
lret
xor
nop
adc
fnstsw
in
push
clc
xchg
aas
or
cli
pop
inc
aas
in
ret
das
cwtl
sahf
out
xor
arpl
mov
cmp
int3
cli
repz
lock
xorb
les
xor
outsl
add
out
iret
dec
fdivrp
lret
lcall
and
pop
adc
or
pushf
or
scas
xlat
fsub
scas
or
test
dec
jl
sti
add
jo
test
fimuls
xor
popf
out
jbe
push
cmp
mov
rorb
push
mov
sbb
add
enter
jae
push
mov
addr16
push
sarb
inc
xor
push
es
es
add
add
dec
xorl
mov
aam
loop
adc
jmp
outsb
sbb
ljmp
filds
add
push
in
enter
pop
add
push
mov
jbe
mov
mov
mov
not
xchg
pop
icebp
jbe
ds
push
insb
and
xor
sub
test
fldenv
dec
movsb
leave
in
gs
test
fisttps
mov
mul
sub
jmp
sub
push
xchg
mov
jnp
call
lods
mov
and
out
inc
pusha
sub
jp
into
push
outsb
imul
mov
mov
mov
enter
js
pop
fisttpll
push
xchg
mov
mov
mov
fs
sub
xchg
outsl
fldcw
xchg
mov
test
shll
mov
lahf
inc
adc
sub
xor
mov
dec
mov
xchg
jl
loop
or
inc
scas
fistl
sub
push
pop
es
and
bound
mov
add
cmpsl
mov
rolb
fadds
in
or
mov
inc
and
add
sub
jg
jae
pop
and
mov
jno
mov
sti
in
inc
push
or
xchg
jle
mov
jmp
ds
adc
popf
xor
adc
je
outsl
push
push
inc
sub
xor
test
fimull
push
dec
imul
ftst
cli
imul
lret
shr
mov
int
fwait
movsl
mov
int
and
je
sbb
adc
push
or
xchg
nop
imul
adc
into
xlat
movsb
lock
shlb
arpl
push
adc
jg
push
arpl
mov
fs
leave
das
mov
les
imul
mov
cmc
jle
add
ds
ret
dec
stc
les
dec
jb
mov
xor
mov
fbld
imul
cmp
in
mov
cld
jp
xchg
pop
dec
daa
sbb
inc
cltd
inc
xor
ss
in
sbb
lods
scas
or
lea
mov
fildl
xchg
iret
xchg
mov
movsb
mov
out
mov
out
push
int3
bound
lods
sarl
gs
or
ljmp
mov
popa
cmpsl
aaa
inc
fisubl
push
mov
cmp
ret
add
out
pop
movsl
addl
fisttps
negl
repz
add
outsb
cmc
push
mov
lods
insl
loope
jp
cmp
imul
test
mov
xor
mov
adc
loop
movsb
inc
scas
push
cltd
push
pushf
push
loop
xor
xchg
sti
or
mov
aas
sbb
scas
mov
in
sub
jno
adc
adc
aas
rcll
mov
pop
pop
push
les
jg
les
les
inc
cmp
pushf
pop
dec
pop
int
mov
jg
aam
stos
sbb
ret
fwait
xchg
or
jle
stc
testb
mov
negl
mov
push
mov
sti
sbb
addr16
out
fnsave
aad
pop
sub
dec
jne
mov
or
cmp
ss
add
and
adc
adc
and
cmp
and
loope,pn
scas
xor
mov
mov
imul
add
jl
xlat
xor
sbbl
jns
mov
push
in
mov
mov
stc
lahf
mov
cmp
fildl
push
lds
inc
sbb
dec
xor
cli
int3
xor
mov
xchg
jbe
icebp
push
push
fildl
test
test
addb
push
or
aam
push
lcall
xchg
sbb
daa
and
in
pusha
xchg
scas
or
dec
aam
ss
nop
loope,pn
xchg
sub
jo
das
add
push
movb
lods
out
sahf
lcall
push
scas
shr
adc
push
je
loop
ret
add
push
mov
pop
cltd
js
loopne
lods
mov
enter
xor
and
sbb
scas
out
mov
dec
std
jmp
or
sub
mov
mov
test
aas
cmp
das
jae
xchg
ds
fucomip
call
aas
xlat
imul
stos
imul
loop
outsb
pop
std
push
cmp
push
cmp
mov
lods
pop
pop
lock
fisubl
or
push
sbb
mov
push
pop
xor
and
fbld
mov
dec
dec
ja
stos
push
mov
push
call
pop
mov
inc
test
fimull
pop
pop
mov
jae
in
mov
inc
mov
xor
pop
or
fsubp
popf
cmpsl
pop
pop
sub
lahf
sti
outsb
movsb
cld
mov
push
xor
dec
and
mov
stos
out
and
xchg
arpl
push
mov
pusha
mov
add
pop
add
lods
je
sbb
loop
ljmp
in
les
jno
cs
aam
rclb
fnsave
jno
xor
js
adc
sbb
call
cwtl
into
repnz
or
cwtl
xchg
push
jnp
cmp
lock
les
mov
inc
lea
xor
call
push
movsb
cld
inc
xchg
sbb
pushf
das
hlt
cld
bound
pushf
pop
in
push
repnz
popa
subb
mov
push
add
jle
mov
jp
addr16
rclb
fimull
repz
movsl
js
and
out
mov
pop
shlb
imul
push
jo
and
xor
imul
movsb
clc
frstor
dec
addb
push
imul
lret
push
pusha
mov
sub
mov
xor
addr16
cmp
push
cmp
push
adc
into
mov
bound
pop
dec
in
jnp
test
inc
repnz
icebp
js
test
sahf
pop
dec
ret
aas
mov
lods
sub
outsl
xor
loopne
xchg
pusha
rolb
sbb
cmc
std
xor
dec
pushf
mov
push
sub
pop
inc
testb
push
mov
jne
aam
insb
mov
add
cmpsl
in
xchg
sbb
mov
add
add
xchg
xchg
and
iret
loop
dec
sti
pop
push
rorl
mov
push
int3
push
ret
call
outsl
je
data16
sub
sbb
adc
iret
pop
dec
or
push
jbe
loop
scas
daa
jge
sarl
and
cmp
test
xchg
adc
imul
scas
pop
insl
xchg
jecxz
shll
lods
test
mov
jo
insb
int3
insb
fwait
inc
insl
ret
add
inc
mov
inc
movl
clc
sub
mov
mov
cmp
xchg
jb
out
add
add
push
in
sbb
cmpl
cmpsb
pushf
mov
add
in
adc
adc
stc
push
cmp
fildl
pop
int
inc
push
sub
imulb
xchg
test
and
shll
lret
and
daa
jnp
inc
out
rcrl
pop
std
das
cmp
sub
ja
je
sahf
test
cwtl
out
loope
dec
fldl
nop
ss
loope
pop
mov
loop
mov
xorps
sub
mov
adc
hlt
scas
mov
ja
mov
cltd
adc
add
mov
movsb
mov
enter
out
xor
sub
pop
mov
aam
mov
cmp
inc
sub
loopne
mov
stos
inc
xor
lret
add
lock
aaa
sbb
int3
orl
sbb
sti
lret
ficoml
in
lds
add
push
inc
rcll
out
push
xchg
add
scas
pop
adc
repnz
add
add
jmp
bound
fs
mov
imul
leave
xchg
and
push
and
adc
jmp
sarb
les
test
xchg
test
nop
push
jg
jmp
aas
pop
je
xor
sbb
in
fcoms
xor
add
in
out
pop
mov
mov
push
and
fsubs
mov
add
lods
std
stc
rclb
and
pop
loopne
cli
mov
jno
dec
and
test
mov
loope
xchg
inc
pusha
mov
mov
xorl
ficoms
test
xchg
dec
imul
or
pop
or
mov
fimuls
jle
cwtl
mov
dec
aad
leave
pop
popl
in
dec
shrb
adc
ret
mov
jl
scas
cwtl
inc
add
lods
fisubl
mov
leave
pop
filds
jns
js
cmp
je
xchg
nop
push
inc
xchg
in
cmpsl
push
out
pop
mov
pop
sub
rcrl
mov
mov
stos
inc
sub
adc
cmp
sub
sbb
jp
not
lods
mov
aaa
sub
mov
into
pusha
stos
push
or
fidivrl
cs
add
push
xor
dec
stos
add
fs
int3
mov
dec
inc
lods
das
fcmovb
icebp
sbb
sub
xchg
or
cld
testb
jp
jne
xchg
xchg
mov
mov
push
inc
push
pop
bound
adc
mov
sub
jbe
les
lea
push
inc
add
sub
shrl
cmp
xchg
xor
stc
outsl
cmpsl
in
and
std
fsubp
or
jnp
stc
roll
or
jmp
arpl
imul
icebp
loop
gs
test
filds
ljmp
and
jp
jge
filds
mov
push
dec
and
in
pop
pop
jge
push
push
push
pop
dec
push
push
mov
cld
cmpsb
pop
scas
fisubs
push
daa
push
test
arpl
ret
xor
inc
push
or
and
mov
pop
lea
outsl
stos
dec
adc
mov
lock
lahf
fwait
mov
inc
jo
and
cmp
dec
xor
pop
rclb
mov
xchg
hlt
sar
fwait
pusha
add
pusha
loope
arpl
int3
les
mov
jge
cmp
adc
cltd
xchg
les
lcall
ljmp
dec
mov
jne
ja
popa
and
jb
pop
jne
mov
inc
daa
sub
in
mov
jbe
pop
bound
incl
test
push
flds
push
aam
shrl
add
subl
xchg
push
jne
jno
movsl
mov
xlat
jbe
cmc
ficompl
imul
sbb
xor
nop
sbb
or
jle
adc
cmp
rcll
loopne
subl
mov
push
ljmp
jmp
xor
clc
in
jns
push
out
lods
std
lcall
cmp
pop
test
mov
xlat
mov
movsl
mov
fisubrs
and
mov
xchg
jl
push
xchg
dec
dec
and
jmp
imull
push
or
adc
enter
aam
mov
mov
test
pop
push
mov
std
jnp
fistpll
pop
jge
dec
inc
ss
hlt
mull
arpl
push
loope
xor
outsl
fsubr
or
test
xchg
mov
jae
inc
enter
or
cmp
push
shlb
inc
call
fldl
gs
and
pop
loopne
lods
adc
mov
and
insl
stos
jecxz
aas
pop
cltd
push
loope
sub
sub
std
inc
mov
das
push
out
add
pop
mov
mov
sbb
clc
stos
pop
clc
or
adc
lret
push
adc
aam
lcall
or
mov
test
push
rclb
mov
or
adc
adc
sub
fwait
dec
aam
filds
sub
repz
out
add
sub
das
rcrl
mov
adc
iret
movsl
loopne
xlat
lret
pop
int
add
sbb
add
jecxz
int3
mov
rorl
push
mov
test
dec
cltd
jo
push
out
gs
pop
in
sarl
pop
hlt
mov
mov
dec
lods
loope
mov
sbb
inc
adc
cs
xchg
aaa
scas
pusha
loopne
sbb
lods
mov
jo
dec
aas
icebp
mov
pop
adc
pop
shlb
jo
xchg
js,pn
into
fildll
inc
cmp
sub
dec
and
call
outsb
push
cmpb
jmp
in
xchg
sbb
ds
add
popaw
sbb
popf
mov
cmp
ja
and
or
popf
mov
mov
cld
xor
data16
and
cmpsb
mov
xlat
adc
push
push
mov
inc
cmpsb
cltd
test
push
cmc
add
stos
mov
jno
xor
jg
in
leave
bound
out
les
add
xor
inc
adc
sar
or
dec
sub
or
jl
mov
dec
inc
and
xchg
push
test
sbb
mov
lret
fadd
test
lock
push
cmp
and
lahf
mov
sub
adc
mov
cli
pop
mov
push
or
test
das
imul
imulb
push
ret
fs
mov
pop
lahf
add
scas
mov
sbb
pop
imul
add
mov
lret
sbb
xchg
sub
outsl
int
test
es
push
mov
ss
mov
cmp
mov
int3
xlat
push
sbb
xor
jmp
mov
test
js
add
pop
dec
wbinvd
sbb
pop
add
scas
lods
cmp
xor
mov
mov
aas
scas
into
adc
and
vmovdqu
jno
cmp
shrl
mov
jmp
out
xor
loop
xchg
sbb
lret
fwait
js
aad
data16
mov
sub
fildl
fisttpll
loopne
lock
out
sub
or
mov
cld
cmc
fcoml
sub
hlt
mov
pusha
mov
mov
cmp
std
mov
pushf
xchg
dec
cltd
pop
cmp
mov
inc
mov
push
pop
leave
or
or
mov
pop
sbb
cmpsb
rolb
pop
cmp
mov
in
dec
pop
popf
mov
inc
ret
shll
fcmovbe
out
subb
out
add
mov
add
cmp
imul
mov
hlt
sbb
in
imul
xor
xor
sub
cltd
xorb
into
sbb
push
shrl
repz
lods
test
insl
and
fcmovnb
sub
sbb
cwtl
inc
mov
mov
push
cld
out
shl
leave
mov
loopew
adc
lret
adc
gs
fbld
sbb
jp
mov
mov
call
jne
aas
fldcw
mov
sti
xchg
test
xor
xor
sub
out
mov
adc
or
add
shr
or
jo
sbb
inc
ret
sti
das
xchg
cmpsb
mov
ffreep
mov
sub
sub
addr16
jb
repz
xor
pop
xor
into
in
imulb
cwtl
mul
cltd
mov
mov
sbb
add
movsb
aad
or
ficoml
imul
xor
push
push
mov
cs
lods
pop
ret
add
jns
daa
inc
sbb
sub
jecxz
fstps
roll
push
lret
sti
and
xchg
xlat
jmp
out
out
cld
mov
outsb
lret
aad
leave
mov
enter
mov
push
mov
lods
adc
test
cwtl
mov
xchg
loopne
mov
sti
inc
subb
sub
pop
jmp
fdivs
roll
ljmp
mov
pusha
mov
outsl
jmp
jb
and
dec
push
pop
xlat
fwait
jg
pop
test
adc
sbb
sub
cltd
nop
addr16
sub
sub
lahf
mov
cmp
jae
and
dec
dec
dec
xchg
jge
test
call
push
mov
arpl
call
loope
andl
loop
xchg
add
pop
xor
push
and
movsb
or
aas
faddl
xchg
out
dec
cs
xor
lods
lret
sbb
pop
enter
add
stos
lds
pushf
pop
mov
pop
xchg
sbb
push
mov
mov
cmp
cs
decl
ret
mov
jecxz
rcrl
neg
stos
mov
or
push
or
repz
fwait
aaa
out
divb
into
xor
dec
mov
mov
insl
xor
test
mov
shlb
inc
or
leave
dec
jb
ret
xlat
loop
xchg
mov
cmp
negl
out
icebp
and
inc
push
sub
mov
jno
stos
fwait
cmp
jg
outsl
lcall
ror
jmp
clc
lcall
push
insl
stos
xor
ja
dec
mov
xor
idiv
shlb
jmp
push
aaa
or
xor
leave
daa
rclb
cld
cmp
pop
into
outsl
inc
fwait
cmp
mov
and
cmp
js
cmp
ja
int3
loop
mov
sub
insl
shl
mov
cmp
mov
push
lods
int
inc
mov
push
ja
or
gs
mov
popa
je
mov
dec
test
mov
push
idivl
xchg
xor
push
repnz
xchg
cmp
sbb
jecxz
iret
pushf
popf
sub
and
lcall
lcall
lahf
pop
arpl
inc
sbb
mov
sub
mov
fwait
sbb
and
sti
dec
sti
int
ss
pop
lcall
xchg
mov
je
rcl
std
mov
or
pop
jo
int3
fistl
out
inc
int
sti
xchg
stos
push
jno
das
cmp
and
mov
scas
sbb
mov
aad
ret
add
and
fwait
push
cwtl
or
icebp
in
in
jb
ret
pop
pop
mov
mov
pop
jp
add
and
lret
mov
inc
iret
divb
fstps
in
cld
add
shr
pop
or
dec
pop
mov
add
rcr
addb
fs
insb
aad
sbb
fs
cmp
lret
pop
cmp
fisubrl
shrl
adcb
mov
sbb
dec
rcr
lret
and
lds
mov
adc
and
and
push
sarl
sub
dec
jbe
jg
xor
mov
int3
cli
cmp
or
xcrypt-ecb
cmpsl
mov
addr16
jp
ds
mov
je
icebp
push
add
inc
mov
mov
aas
cltd
adc
faddp
jne
or
fsts
fwait
and
mov
pushl
mov
push
mov
dec
inc
mov
or
mov
insl
pop
xchg
subb
iret
push
adc
lods
mov
movsl
cmc
push
push
les
iret
mov
adc
push
add
and
and
sbb
or
pop
stos
roll
call
jp
mov
popa
push
cmpsl
stc
push
jecxz
scas
test
dec
inc
dec
arpl
cmp
or
clc
hlt
pushf
inc
jge
arpl
outsb
cmp
ficomps
enter
xchg
mov
dec
std
mov
jl
pop
ss
fs
jnp
iret
xchg
lret
aaa
xchg
push
and
sub
sbb
xchg
shrl
call
movsb
sbb
pop
roll
adc
jnp
and
ljmp
aaa
pop
outsl
jne
sub
mov
mov
addr16
xchg
ja
adc
xor
jge
sbb
jp
addr16
or
nop
aam
dec
ret
mov
xchg
sub
mov
rcrl
sbb
out
aaa
add
mov
sub
stc
aad
and
stos
es
mov
jle
pop
xchg
inc
or
call
test
arpl
xorl
and
mov
lahf
aas
test
jne
cmp
mov
test
adcb
repz
xchg
sub
or
cmp
in
mov
or
out
pop
mov
testl
cld
in
add
mov
mov
jmp
enter
xor
fisttps
mov
xor
std
xor
mov
bound
pop
xchg
daa
and
loop
sti
enter
mov
pop
dec
lds
jbe
mov
xchg
sti
loope
or
dec
aaa
jp,pt
sbb
mov
sub
test
adc
cli
jmp
stc
fidivrs
mov
ret
xchg
stos
shl
jno
js
out
lret
nop
xchg
aas
xchg
aam
pop
movsl
popa
stos
jns
pop
jg
daa
and
and
pop
cmpsl
cmp
mov
inc
repnz
fisubs
ss
aaa
pop
andb
push
jae
add
in
jnp
mov
cmp
out
into
in
xor
inc
mov
xchg
ret
movsb
jns
push
loop
inc
cs
imul
mull
push
pushf
lret
enter
notb
movsl
loopne
ffree
into
jl
test
xor
in
aad
insb
adc
sub
jmp
insl
enter
in
mov
cld
roll
lock
sub
dec
or
and
push
mov
loopne
stos
jne
add
call
cmp
enter
lock
in
lods
adcl
mov
add
mov
stc
mov
notb
push
xor
sar
adc
aas
lods
mov
xchg
insb
popa
ror
shlb
xlat
xchg
mov
xchg
cmp
mov
cmp
inc
xchg
pop
sbb
push
fnclex
push
jge
cmp
data16
faddl
fisttpll
rcll
or
or
sbb
push
fiaddl
cmp
insl
cmp
xor
lea
adc
int
mov
pop
fidivrs
mov
push
xchg
xor
adc
movsl
loopne
mov
pop
pop
inc
jge
mov
dec
out
dec
out
and
cmc
sbb
hlt
xchg
xor
inc
jo
loopne
push
dec
push
dec
aas
jb
push
jae
mov
mov
cltd
int3
sbb
jns
int
inc
in
pop
stos
outsl
rcl
jno
loope
pop
shll
sub
jmp
mov
test
inc
adc
or
jno
aas
inc
and
push
ret
dec
or
sahf
and
out
mov
and
xchg
mov
sbb
mov
or
mov
dec
fiadds
cwtl
ret
fsubl
xor
imul
push
icebp
sbb
xlat
cli
ficompl
inc
add
jmp
out
sbb
clc
loopne
mov
cltd
imul
cmp
and
stos
outsl
stos
lcall
xor
dec
loop
das
imull
jmp
mov
push
and
inc
addr16
test
push
and
push
jmp
movsl
cmpsb
test
push
les
lods
fucomi
int
dec
pop
rcrl
adc
jno
ret
mov
outsb
imul
loop
mov
mov
addl
popf
test
xbegin
je
adc
fldl
xchg
cmpsl
rclb
adc
jns
or
mov
pop
fnstsw
aam
push
fwait
cld
mov
inc
cs
mov
jb
pushf
lret
xlat
insl
ds
sub
clc
dec
inc
or
mov
pop
or
cwtl
sbb
jmp
jb
push
sbb
pushf
mov
inc
inc
adc
cld
sub
jne
jle
or
mov
movsb
push
repz
aas
add
int3
cmp
idiv
xchg
in
or
in
inc
mov
adc
dec
out
stc
sti
pusha
dec
or
xlat
cs
xchg
repnz
out
xchg
rcrb
xorl
inc
cmp
mov
out
shrl
jnp
nop
pop
add
xor
aas
das
push
mov
rcr
scas
jmp
lods
sahf
pop
repz
cmc
out
mov
pop
sub
sbb
xchg
pop
mov
add
popa
cs
repnz
or
jg
pop
mov
fstps
ljmp
adc
ficomps
jbe
and
into
outsb
jl
dec
adc
and
imul
scas
leave
stc
xor
mov
sbb
cltd
stos
mov
js
mov
stos
xchg
nop
xor
dec
fnsave
pop
jl
adc
jecxz
sub
in
cmpsb
movsl
inc
jmp
stos
pop
cld
lahf
std
lret
scas
push
test
sar
push
sbb
cmpsb
mov
push
xor
sbb
ss
jecxz
loope
into
pop
jne
pop
xor
aas
movl
movsl
inc
ja
cli
sbb
mov
pop
push
popa
and
bound
cs
pushf
cmpsb
push
and
fidivs
lret
mov
shl
rcll
stos
cmp
jmp
mov
cmpsb
mov
adc
hlt
mov
cmc
ret
and
repnz
or
pop
lcall
push
mov
lcall
inc
pusha
push
pop
add
ret
fcompl
push
outsb
push
popf
test
shrl
jp
clc
cmpsl
xor
mov
xor
or
ljmp
pushf
stos
mov
into
cmp
xlat
ljmp
push
movsb
ss
enter
ficoms
lea
jl
ret
or
pop
sbb
inc
cmc
loope
imul
pop
sub
pop
or
jnp
jae
inc
sbb
mov
repz
gs
and
test
ret
nop
push
pop
cmp
cs
rorb
repnz
or
test
sahf
push
pop
fistps
sarl
dec
pop
push
insb
inc
push
popf
mov
push
dec
shrl
mov
scas
aam
adc
nop
lods
fistpl
insl
das
xor
mov
fnstcw
mov
fcmovnu
mov
mov
sti
lahf
adc
sti
mov
stos
popa
aam
push
ss
pop
pop
cli
inc
mov
push
pop
jge
sub
xchg
test
mov
lds
jbe
add
movsl
mov
push
cmpsb
add
or
add
popl
clc
fucomi
xor
cmp
push
xchg
ja
mov
icebp
mov
push
repz
scas
and
jg
mov
dec
push
pop
or
mov
stos
push
adc
add
or
mov
mov
lret
jne
rclb
scas
aas
call
xchg
pushf
arpl
push
mov
xchg
pop
inc
sub
mov
cltd
dec
out
adcl
mov
popf
mov
inc
stos
add
pop
jbe
loope
cmpsl
daa
outsb
inc
lret
xor
fwait
es
inc
pop
xchg
loope
rcr
test
adc
fisubs
adc
cltd
push
pusha
mov
push
cmp
xchg
dec
sahf
daa
popf
cwtl
and
daa
push
mov
adc
fs
add
pop
popf
sbb
out
sti
shrb
mov
push
or
arpl
imul
fsubl
cmp
xchg
imul
aam
fstpt
or
push
shrb
sub
cmpsl
outsb
xor
mov
xlat
pop
jb
mov
icebp
cmc
xchg
and
jns
pop
push
dec
mov
cwtl
jl
inc
movsl
gs
adc
out
stos
or
ret
jbe,pt
xor
ss
mov
cmp
pop
scas
daa
movsl
sbbb
mov
sub
cmp
stos
into
xor
in
mov
mov
repnz
lcall
sub
sbb
fidivrl
and
cltd
dec
mov
xor
in
popa
lock
jnp
mov
idivl
stos
std
stos
pop
fcmovnbe
cmp
out
js
mov
adc
jb
jge
mov
and
movsb
jb
jno
rclb
ja
fcomi
jle
mov
ret
and
or
jno
xor
insl
cmp
cwtl
jmp
pop
pop
out
into
mov
and
and
inc
mov
pop
add
push
cmp
into
in
jle
sbb
lock
pop
shll
mov
lahf
gs
push
inc
push
mov
cmp
cld
adc
insb
push
ss
es
push
dec
pop
adc
loopne
test
fisubs
je
imul
xlat
adc
xor
xchg
add
orb
push
inc
int
push
outsl
inc
or
sub
pop
data16
mov
or
ja
cmp
into
int
dec
les
sub
adc
lods
mov
push
xchg
ljmp
pushf
and
int3
cmp
sub
mov
sbb
insl
mov
or
adc
lods
push
ret
cwtl
dec
push
clc
cmp
add
roll
cltd
test
mov
mov
inc
test
lods
mov
jmp
inc
scas
mov
push
rcr
xchg
jmp
or
pop
rorl
xchg
call
aas
push
rcll
addr16
inc
loop
jne
mov
push
lock
xchg
adc
and
loope
outsl
sub
inc
cld
jb
imul
push
ss
push
pushf
pop
jmp
push
cmpsl
mov
lret
movsl
lods
pop
mov
pop
enter
enter
in
push
add
inc
jle
push
test
stc
pop
jno
lret
imul
add
test
pop
and
pop
dec
pop
icebp
jp
or
fstps
mov
rolb
in
mov
dec
outsl
test
mov
sub
push
ljmp
push
scas
movsb
fwait
pop
mov
aaa
cld
add
jnp
mov
cmp
out
mov
push
mov
popa
leave
enter
pop
xchg
cmp
out
movsl
fsubrl
cmp
jbe
adc
decl
add
loopne
or
into
jg
adc
cmp
mov
adc
push
inc
cmpsb
ljmp
push
outsl
push
aas
mov
or
mov
lock
add
gs
mov
stos
xor
js
cmc
xor
in
popf
mov
jno
lret
aam
mov
dec
call
ja
mov
lret
xchg
or
jne
fidivrl
insb
mulb
imul
lahf
shlb
repnz
inc
inc
test
rcrl
testl
test
and
data16
arpl
cmp
xor
mov
mov
ret
int
and
test
and
xchg
cmp
push
repnz
sub
mov
fsubs
xchg
loope
xchg
add
push
push
xor
inc
and
push
xor
push
in
pop
mov
orl
jmp
mov
cmp
rcrl
je
movsl
rorl
mov
out
jnp
adc
lds
or
pop
movsl
rolb
push
clc
xor
pop
push
inc
jge
sti
ss
paddb
xchg
ret
add
clc
or
iret
sbb
fwait
or
adc
out
mov
and
js
sahf
and
mov
in
mov
inc
in
aad
mov
mov
shrl
xchg
push
orl
subb
loop
cld
xor
or
xchg
out
insl
in
int
jmp
imul
cld
insb
rolb
lds
icebp
sti
pop
push
add
push
out
insl
mov
in
and
test
pop
push
sti
jns
jle
inc
ret
cmp
nop
lods
or
add
pop
das
lods
test
repz
lcall
inc
xchg
call
xchg
jae
xchg
xchg
sahf
repnz
in
xchg
push
push
lods
fs
push
popa
mov
jle
insb
imul
rol
xchg
shrl
aaa
xor
jo
push
dec
fchs
xor
das
scas
mov
pusha
sub
or
std
xor
out
sub
aas
dec
mov
mov
jge
sbb
scas
mov
pop
cmp
jo
pop
mov
push
pop
jmp
xlat
jle
lret
xor
mov
xchg
sub
test
xor
out
fildl
fs
insb
shl
subl
icebp
sub
subb
xor
lods
pusha
inc
dec
mov
rcll
out
test
inc
xchg
mov
scas
push
aas
add
adc
jl
sbb
xchg
mov
mov
nop
add
sahf
mov
in
scas
mov
pusha
push
sti
test
and
leave
cmp
pop
xchg
inc
lock
outsl
jns
rcrb
adc
mov
addr16
and
arpl
cld
jne
cmp
mov
lds
repnz
out
jmp
xor
cmc
sahf
dec
push
adc
shll
out
pop
add
mov
enter
ja
cmp
adc
sbb
call
push
es
fcom
mov
xor
xchg
mov
int
int
test
rorb
mov
jle
loopne
jg
pop
push
or
cmp
aas
xchg
loope
pop
iret
mov
push
cli
xor
lods
loope
mov
and
add
ds
xchg
test
mov
in
inc
jno
xor
mov
in
inc
mov
jno
lcall
dec
add
mov
push
testb
mov
and
add
cmpsb
push
or
aas
jo
cmp
stc
push
adc
or
fsubl
jg
adc
enter
js
cs
call
iret
mov
pop
xchg
lcallw
dec
js
out
aad
pop
pop
imul
mov
iret
push
test
notb
sub
push
mov
push
inc
mov
add
aas
int
push
into
adc
adc
push
aam
leave
nop
push
sbb
push
cli
nop
inc
dec
bound
and
dec
into
or
add
mov
sbb
sub
mov
aad
stc
sbb
in
and
out
cmp
mov
ret
or
or
xchg
notl
je
xchg
sti
dec
inc
sub
cmp
adc
push
or
jg
fdivl
mov
pushf
sahf
jo
cmpsb
and
inc
jecxz
ret
jo
fmuls
cmc
xchg
mov
mov
sbb
cmp
cmp
xchg
cmpl
adc
loopne
mov
sarb
pop
movzwl
jp
rcrl
xchg
dec
lods
pop
push
out
cmp
or
jecxz
xchg
mov
xor
mov
cmp
cmp
jbe
mov
mov
repz
jmp
xchg
nop
add
push
les
xchg
stc
add
cli
and
pop
cmp
aam
xor
jo
in
mov
outsb
jg
sahf
push
adc
ja
and
dec
jmp
pop
je
adc
mov
ss
repz
in
test
and
adc
incl
push
cld
js
pop
jns
mov
push
test
je
imul
xchg
outsl
sbb
jnp
push
imul
xchg
les
cltd
int
inc
stc
divb
and
vmovss
fisttps
clc
cmc
dec
mov
rcrb
jle
sub
jne
ss
test
ret
xor
call
cmpb
cmpsl
inc
or
fists
cmp
mov
lock
mov
ret
cmp
mov
fstpt
inc
jno
push
scas
and
bound
pop
mov
loope
in
int
xor
popa
outsl
pop
int3
gs
ds
into
leave
and
shr
pop
sub
cmp
test
or
outsb
mov
fimull
jo
jp
add
sbb
fdivr
dec
imul
or
dec
sahf
lret
push
sbb
icebp
push
hlt
mov
sub
dec
xchg
sbb
lahf
hlt
push
lds
popa
clc
sbb
fcomip
decl
cs
stos
and
xchg
je
inc
data16
adc
adc
cmc
and
fisubs
or
sti
push
add
mov
pop
iret
mov
ret
mov
popl
int3
and
inc
int3
outsb
lahf
and
jnp
mov
frstor
inc
into
xchg
test
sti
mov
mov
int3
loopne
and
xchg
outsl
cmc
xor
pop
ljmp
addl
sbbb
cli
rcrb
pop
stc
jns
lds
sarl
scas
test
ds
xchg
int3
scas
adc
push
xor
pop
or
cmp
imul
push
mov
push
or
and
xlat
clc
rol
jb
jecxz
xor
jno
mov
jg
push
sti
mov
daa
jno
leave
xor
js
dec
pop
mov
or
ficomps
push
jb
and
cmp
sub
mov
aaa
rcrl
roll
jo
repnz
filds
jmp
or
sbb
cli
sub
aas
mov
pop
ret
out
cltd
xor
mov
cs
out
cmp
cmp
mov
mov
ret
jmp
sub
aam
inc
add
repnz
lods
sub
adc
fisttpl
dec
sbb
sub
mov
into
mov
pop
incb
fsts
xchg
test
sbb
add
fisubs
into
or
mov
test
inc
cmpsb
jl
pop
mov
lret
push
rcr
fs
addr16
cmc
mov
push
mov
or
in
mov
cmp
or
jmp
out
test
mov
jo
aaa
inc
push
imul
shr
push
test
sbb
mov
int
add
mov
testl
pop
pop
fwait
cmp
mov
push
xorb
or
test
ret
lods
xor
xor
iret
and
xorl
jecxz
je
cmp
push
jb
ret
add
lcall
dec
inc
mov
lods
pop
addr16
js
fildll
sub
frstor
arpl
sub
inc
popa
jns
sub
int
in
inc
xor
push
jge
xor
movsl
stos
mov
in
fwait
add
sbb
dec
bswap
mov
push
das
imul
lcall
data16
imul
xchg
popa
out
add
sub
fwait
jge
aad
ja
xlat
and
xchg
shlb
andl
lea
and
xor
jo
sbb
cmp
in
fxch
push
jp
insl
iret
aam
push
mov
sar
mov
xchg
int3
loop
pop
iret
adc
mov
mov
outsl
out
and
add
pop
mov
decl
xor
jmp
int3
add
inc
aam
push
ret
push
into
loopne
aad
test
and
mov
push
sbb
dec
or
lahf
je
outsl
or
mov
test
int
inc
sub
push
dec
mov
push
xor
jp
testl
enter
mov
inc
dec
pop
push
mov
adc
dec
or
mov
adc
pop
and
pop
loop
dec
insb
adc
cmp
movsl
pop
push
sbb
jne
mov
js
jb
ds
loopne
or
es
dec
xlat
sbb
test
leave
shrb
jae
rcr
sub
stos
push
test
pop
adc
aaa
rolb
cmpsl
test
out
pusha
fwait
enter
dec
xchg
xor
mov
xor
and
out
xchg
pusha
mov
sub
scas
insb
add
adc
dec
js
add
inc
cmp
cmpb
lods
add
jp
add
adc
mov
popf
pop
aas
pop
add
adc
fdivr
lea
dec
sub
aas
dec
pop
push
call
xor
or
popf
in
add
lea
loope
xor
or
hlt
sub
insl
les
jp
aad
lea
inc
bound
es
insb
pop
in
testb
andl
cmpsl
add
fs
xchg
inc
mov
es
js
cmp
dec
mov
and
mov
aaa
insl
mov
push
add
es
mov
xchg
call
add
pop
sahf
cmp
sub
cmp
daa
mov
mov
out
imul
push
push
imul
test
jecxz
jp
ljmp
in
jmp
add
in
fmulp
shrb
mov
test
das
aas
icebp
nop
call
inc
mov
inc
enter
testb
and
mov
push
or
pop
mov
xchg
sbb
insl
bound
cmp
out
dec
pop
pop
ljmp
sbb
test
aaa
mov
inc
cwtl
test
cmpsb
lret
xlat
addr16
and
lahf
imul
shr
loopne
loopne
jmp
sub
mov
mov
sbb
mov
jbe
push
mov
mov
fisubs
stc
mov
mov
in
mov
test
pushf
inc
lods
or
call
lea
sub
cli
mov
mov
cmp
aaa
ret
scas
pop
mov
xchg
popl
sub
xor
shrb
and
in
subl
movsl
pop
ficomps
movl
xchg
int3
fsub
or
in
shlb
shrb
pop
repz
addb
enter
xor
or
cli
dec
jbe
ds
inc
imul
xor
push
fnsave
sbb
jmp
cmp
neg
adcl
jg
mov
or
cwtl
inc
xchg
inc
dec
xchg
xlat
aam
insb
mov
jb
cmc
sub
or
fdivr
idivl
cmp
mov
xchg
stc
clc
iret
hlt
repnz
arpl
xchg
lahf
test
int3
push
repz
out
repnz
pop
mov
not
xchg
enter
cmp
ret
inc
mov
repz
or
xchg
aas
push
add
sub
add
push
std
mov
pop
jne
jb
ss
inc
lcall
and
shll
pop
fidivs
or
std
dec
divl
ficomps
loop
inc
loope
jp
sti
jne
dec
mov
out
fs
cmpb
pop
into
jg
insl
add
adc
inc
in
mov
xor
out
or
inc
xor
icebp
pop
test
mov
and
cmc
cmpsb
jg
mov
out
mov
cmc
sub
pop
fistpll
mov
out
scas
xor
daa
mov
pop
push
cmpsl
dec
push
inc
mov
and
or
add
aas
fstps
mov
or
mov
mov
push
sti
add
jno
mov
sbb
jne
mov
test
daa
lea
outsb
add
push
or
xchg
mov
jne
mov
jns
xchg
jle
incb
mov
pop
mov
xor
push
mov
mov
xchg
push
inc
fdivrl
adc
xchg
je
lcall
add
or
xchg
inc
mov
or
lahf
jmp
and
push
mov
scas
out
adc
sub
xchg
shll
xchg
mov
hlt
adc
mov
ss
movsl
in
dec
lea
fistps
xor
hlt
stc
dec
in
mov
mov
popa
mov
push
xor
cmp
pop
dec
lcall
ljmp
jg
insl
pop
fldcw
sti
pop
test
repnz
insb
enter
call
sbb
outsl
pop
push
test
mov
pop
movsl
fsubs
cwtl
inc
jmp
pop
xchg
sbb
cmpsb
lcall
pushf
push
iret
enter
leave
into
jnp
xor
add
or
rcll
ljmp
mov
mov
cmpb
scas
inc
call
adc
enter
leave
aas
in
and
mov
jo
lret
rclb
mov
and
out
xor
pop
mov
pop
adc
xor
cwtl
push
mov
add
push
cwtl
push
fistpl
fxch
mov
aam
imul
lret
inc
xchg
adc
pop
lcall
and
lea
fisubrl
and
test
push
in
pop
fwait
mov
jbe
in
bound
stos
add
cs
in
dec
push
test
push
xor
mov
or
ret
dec
and
push
scas
or
xor
stc
mov
int3
xorb
hlt
shll
pop
inc
les
call
mov
cltd
insb
mov
push
inc
loopne
fwait
xlat
dec
xchg
insb
mov
ss
xchg
mov
dec
mov
orl
mov
xor
imul
jb
xchg
mov
pop
outsl
test
repz
mov
lods
subl
faddp
lahf
pusha
mov
sub
mov
mov
mov
insb
or
cmc
aad
cmp
adc
mov
adc
dec
mov
mov
mov
test
sbb
shll
int
orb
push
addr16
mov
fmuls
jns
push
fnstcw
rcrl
add
push
jo,pt
insl
dec
aad
iret
sub
lret
das
inc
xorl
in
dec
and
insb
inc
push
sub
js
cmp
push
jecxz
pop
mov
es
imul
push
adc
add
loope
dec
fldl
dec
lds
push
xor
mov
add
jl
lahf
inc
mov
das
lods
in
add
mov
xor
shrl
lods
test
inc
aas
out
lret
test
pop
pop
push
xchg
fsubp
sub
xchg
sbbb
mov
daa
xchg
push
and
ss
add
imul
pop
mov
mov
and
mov
xor
cmp
lahf
mov
cwtl
sub
pop
insl
pop
nop
inc
sub
push
push
adc
add
into
xchg
pop
lcall
cld
fnsave
xlat
and
setp
inc
cmp
rcrl
outsl
jno
bndldx
repnz
jl
dec
cwtl
sbb
inc
push
inc
ret
das
lcall
shlb
and
xchg
mov
out
jle
or
test
cmpsb
add
pop
rcrl
push
dec
ss
xlat
fcmovnb
and
lock
loop
pop
int
jmp
nop
xchg
jge
outsl
mov
inc
fstpt
test
cmp
or
popa
imul
sbb
xor
and
jmp
data16
pcmpeqd
addl
push
mov
movhps
xor
and
mov
daa
mov
dec
pop
sub
sbb
cmpsb
sub
jb
and
in
stc
outsb
xor
loop
cmp
mov
dec
shll
fistl
dec
jecxz
enter
and
mov
mull
rcll
insl
mov
pop
cs
mov
test
pop
add
xor
popa
cli
movsl
jnp
scas
fmull
sbb
popa
push
push
shlb
jb
fidivl
addr16
inc
mov
push
pop
shrl
mov
std
push
xchg
and
mov
hlt
mov
sub
xor
push
jl
dec
mov
cmp
xor
lret
mov
repnz
imul
das
in
sub
push
daa
ja
data16
xchg
fmulp
insb
xchg
aam
sub
cld
sub
lock
leave
test
lret
sbb
add
xchg
lods
aam
cmc
push
out
in
push
mov
push
popf
mov
cs
stc
lea
dec
outsb
push
xor
push
dec
inc
cmp
mov
out
mov
gs
daa
jmp
inc
js
inc
jno
xor
push
loop
mov
filds
popf
add
dec
fnstenv
push
mov
and
test
mov
adc
cmp
lods
ret
and
dec
ret
sbb
mov
or
js
sbb
or
cwtl
movsb
cmp
pop
adc
ja
lahf
popa
cmp
stos
jns
or
das
fxam
sub
aad
dec
aaa
lss
enter
push
sub
xor
int3
mov
loopne
dec
adc
in
mov
out
push
mov
cli
outsl
leave
movsl
mov
mov
roll
xor
hlt
insb
cwtl
dec
push
jne
into
sahf
jae
add
pusha
push
pop
cmp
mov
cltd
nop
es
pop
pop
das
sbb
push
mov
cmp
jl
out
ss
xor
pop
ret
push
rorl
sti
dec
jo
jmp
mov
movsb
std
popf
ds
adc
or
xchg
mov
and
lret
push
.byte
