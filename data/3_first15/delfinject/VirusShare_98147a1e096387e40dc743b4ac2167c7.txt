xor
inc
ret
push
push
call
xor
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
mov
push
call
pop
orl
orl
call
mov
mov
call
mov
mov
mov
mov
mov
call
call
cmp
jne
push
call
pop
call
push
push
call
push
call
mov
mov
lea
push
pushl
lea
push
lea
push
lea
push
call
add
mov
cmp
jge
push
call
pop
push
push
call
call
mov
mov
pushl
pushl
pushl
call
add
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
call
ret
jmp
jmp
cmpl
jne
jmp
push
push
pushl
call
add
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
jmp
push
push
call
pop
pop
ret
xor
ret
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
mov
lea
push
mov
call
add
mov
mov
addl
ret
jmp
jmp
add
ret
ret
push
xor
pop
ret
add
ret
add
popl
push
mov
mov
push
xchg
add
push
xchg
add
xor
push
xor
pop
xchg
popl
push
pushl
ret
jmp
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
add
pop
pop
pop
pop
pop
pop
pop
ret
push
xchg
add
ret
pop
push
xchg
ret
xchg
popl
push
ret
push
pop
pop
push
xchg
mul
xchg
xchg
xchg
push
pop
push
add
add
ret
push
xchg
add
ret
push
pop
ret
push
add
add
ret
pop
push
xchg
ret
add
push
mov
push
push
push
xor
push
mov
xchg
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
call
push
push
call
push
push
push
push
call
pushl
xchg
add
push
push
push
push
call
push
push
push
call
push
push
push
call
call
push
push
call
push
cmp
jae
ret
pop
call
mov
adc
je
push
call
add
and
cmp
jge
mov
cmp
jg
mov
test
jns
add
sar
mov
mov
test
je
mov
mov
add
andl
mov
cmp
jne
mov
test
jns
add
sar
mov
xor
mov
jmp
mov
test
jns
add
sar
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
add
mov
incl
sub
add
call
jmp
cmp
jg
sub
cmpl
jge
add
xor
mov
mov
add
mov
or
mov
add
mov
incl
sub
add
call
jmp
sub
sahf
dec
aad
filds
sbbl
daa
pop
and
out
sbb
lret
fisttps
shlb
push
subl
ja
ret
adc
aam
shrl
outsl
jge
shrb
std
and
sub
xchg
push
loopne
sbb
dec
test
cli
aam
mov
ficomps
push
mov
insl
dec
mov
cmp
sbb
mov
test
push
js
inc
lret
mov
pop
pop
cmpsl
xor
sbb
sub
mov
movsl
cmpsb
and
mov
cmc
adc
pop
pushl
cli
in
fcomp
cmp
inc
test
test
mov
lea
mov
push
aad
adc
repnz
push
cld
push
lock
pop
rolb
jecxz
sbb
mov
fstpt
fcomp
inc
pop
stos
insl
xlat
fisttpll
mov
movsb
xchg
jle
into
push
inc
mov
addr16
lds
jge
aad
pusha
xchg
mov
adc
jge
cld
arpl
gs
adc
fnstenv
test
mov
fildl
sbb
mov
push
lods
sbb
jmp
ret
scas
out
sbb
sub
std
or
push
push
icebp
rcl
mov
js
adc
loop
jg
pop
push
xchg
mov
je
jae
hlt
sbb
push
sub
in
mov
jne
or
dec
je
test
inc
mov
lcall
clc
mov
dec
push
test
sahf
and
lods
lods
clc
pop
push
push
push
inc
imul
inc
jmp
dec
pop
push
mov
cmp
mov
fxch
cmpsl
loop
xchg
xor
test
or
add
jl
pop
mov
push
outsl
mov
addr16
dec
pop
push
push
xor
test
das
idivb
lcall
jae
mov
ja
or
notl
adc
inc
iret
pop
add
fldl
scas
push
add
movsb
in
nop
cs
xchg
xor
cmpsb
popf
arpl
mov
jecxz
jmp
mov
jl
stos
test
and
push
mov
xor
mov
push
and
and
iret
cli
and
dec
mov
jno
pop
cmp
aam
dec
dec
nop
mov
lods
fbld
and
jns
pop
sbb
loop
sub
sub
pop
gs
push
xorl
mov
push
jl
add
jle
mov
or
inc
xor
or
push
add
cmp
inc
dec
pop
jge
dec
xor
mov
cmp
data16
inc
and
sbb
sbb
or
fwait
aam
ret
push
add
mov
das
jno
icebp
xchg
xlat
fdivrl
cmp
mov
movsb
mov
dec
lcall
inc
mov
hlt
or
dec
mov
mov
test
dec
popf
sub
jns
cmc
stc
loopne
mov
push
rorb
ret
mov
push
sarb
ds
jmp
mov
repz
lods
clc
push
lret
insb
in
cmc
sub
sbb
mov
sti
std
push
jecxz
aad
daa
mov
push
jno
cltd
out
sub
outsb
shl
rcr
push
shrb
mov
cmc
mov
jb
out
inc
jne
push
jne
in
cmp
or
xchg
sub
xchg
jp
test
into
mov
packuswb
jns
push
xchg
scas
cmp
xorb
sub
cmp
add
xchg
add
into
cmpsb
pusha
and
ffree
inc
dec
sub
leave
sbb
push
push
mov
or
or
jb
jbe
mov
adc
push
add
ljmp
xchg
lods
push
leavew
clc
repz
sbb
repnz
shrd
jp
and
arpl
push
xchg
test
lods
pop
push
add
sbb
xchg
aaa
sbb
jge
nop
mov
mov
les
jecxz
push
mov
pusha
adc
sbb
scas
test
dec
mov
xchg
divl
jecxz
inc
push
mov
fmuls
jnp
sti
dec
les
mov
adc
mov
cmp
mov
lock
sbb
inc
mov
and
mov
inc
or
rolb
mov
mov
jecxz
or
mov
sbb
scas
sbb
pop
repnz
fdivrl
into
xor
popf
push
push
fimuls
mov
mov
jmp
inc
aaa
sub
jmp
es
lret
pop
pop
inc
movsb
push
mov
cmpsl
push
push
in
cmpsb
jno
bndldx
arpl
ficoms
fsubrs
and
push
sub
add
mov
ret
mov
sbb
inc
movsl
mov
lds
cld
xchg
jp
cmp
ss
add
call
adc
xor
inc
fcompl
fwait
adc
gs
test
or
fisubrl
es
lcall
out
insb
out
orb
dec
cs
lret
mov
idivl
das
loope
lds
sbb
and
test
hlt
pushf
test
rcll
adc
cmp
push
mov
sub
push
xor
sub
xchg
cmpsb
in
rorb
cld
fs
sarl
shlb
das
pop
push
lahf
push
mov
add
lahf
mov
lock
dec
sbb
clc
sti
cmp
sarb
mov
pop
call
fs
push
adc
push
adc
cli
in
into
gs
idivb
loop
dec
popa
sub
test
adc
add
daa
popf
xchg
mov
jle
mov
nop
arpl
test
test
decl
pop
jo
dec
cwtl
mov
adc
and
jecxz
xlat
fs
dec
das
xor
ja
out
in
and
cli
lret
out
add
ret
sbb
clc
jp
inc
and
mov
sub
cltd
xchg
jmp
add
andb
mov
ss
xor
loopne
or
sbb
xor
test
push
pop
in
or
or
lret
lock
inc
out
in
loope
cld
inc
dec
out
js
jmp
push
das
cmp
das
addr16
les
outsb
jbe
sbbl
cmp
mov
popf
out
lret
bound
jg
lcall
out
shl
jnp
add
dec
sub
mov
hlt
repz
mov
inc
bnd
icebp
cmp
cs
or
add
out
mov
int3
cmp
cld
mov
and
sbb
mov
and
das
cmp
add
adc
imul
add
adc
jecxz
cs
clc
push
fdivl
test
xor
jns
in
into
xchg
mov
mov
shll
rol
inc
or
imul
pushfw
jecxz
cwtl
xorl
pop
leave
xor
jg
jo
fs
jo
or
subl
int
mov
mov
gs
xor
lret
mov
or
sub
inc
mov
xchg
je
mov
xor
sub
or
and
jno
mov
pop
cmpsl
mov
addr16
insl
inc
mov
mov
fsubrp
jns
or
mov
inc
enter
repz
rorb
mov
or
mov
mov
xchg
lock
jp
mov
add
jb
movsb
mov
dec
push
mov
lret
add
fadd
or
cmpsl
xor
loop
aam
mov
jecxz
cmc
jns
adc
lcall
mov
movsb
mov
int
loop
pop
xchg
int
jo
lahf
xchg
sub
cmpsl
stos
sbb
into
adc
adc
mov
xor
test
mov
decb
inc
push
cmp
jg
repz
shlb
rcl
int
jl
pop
sub
ficoml
hlt
std
pop
test
es
imul
in
out
adc
mov
std
cmc
sub
push
inc
ja
sbbb
dec
clc
fs
sbb
inc
cli
dec
in
mov
sarb
push
enter
pop
mov
mov
adc
ret
mov
test
or
push
insl
add
lds
mov
adc
insb
negl
aad
in
xchg
mov
mov
dec
movsb
nop
and
or
cmp
fs
xchg
mov
out
shl
and
xchg
push
fbld
mov
adc
int3
fcompl
pop
insb
dec
dec
sub
adc
pop
pushf
into
movsb
adc
mov
adc
ret
ljmp
sub
sub
inc
cmpsb
cmp
es
or
scas
push
sbb
les
icebp
or
repz
aam
mov
mov
add
jmp
dec
sbb
test
xchg
cmpsl
sbb
pop
mov
add
adc
fstl
sub
out
xor
or
sbb
sub
test
inc
mov
les
add
adc
push
cmpb
dec
inc
int3
mov
loopne
jmp
andb
mov
jbe
cmpsb
jg
in
pop
fbstp
push
jle
sti
sub
jns
and
sub
mov
mov
test
orb
jne
cld
inc
insb
sub
mov
and
dec
notl
add
in
lods
mov
out
cmc
cwtl
rorl
sbb
out
mov
sbb
push
cltd
fbstp
and
xchg
fs
pop
je
sbb
rclb
ss
pop
daa
int3
add
push
jns
pop
loopne
aaa
aas
adc
insl
mov
jl
stc
or
aaa
jcxz
test
into
pop
dec
push
sub
pop
inc
add
xor
mov
and
xchg
movl
inc
mov
das
jnp
or
arpl
imul
mov
out
mov
mov
push
add
lds
es
jbe
xor
lret
outsb
lods
sub
orl
ffreep
xchg
test
fbld
leave
cmp
repnz
shrl
mov
or
lret
or
mov
sbb
ja
dec
jbe
sub
dec
dec
pushf
mov
loopne
mov
pop
scas
xlat
xchg
pop
dec
outsl
sti
data16
cltd
sub
fistpll
jle
xor
jle
push
inc
pusha
in
inc
and
loope
into
pop
add
xchg
adcl
movsl
sbb
test
push
cmpsb
cld
sub
insb
aas
gs
mov
sub
or
dec
iret
cld
mov
pop
xchg
mov
jg
sbb
pop
hlt
or
rcrb
pop
xchg
insb
mov
jp
arpl
mov
addr16
mov
cmp
sub
sbb
std
adc
test
or
cld
in
mov
repnz
adc
sbb
imul
pop
sbb
adc
pop
scas
fs
pusha
xor
jle
js
mov
dec
out
mov
lea
ljmp
out
xor
sub
lret
je
sbb
popf
hlt
outsb
mov
xor
imul
pop
incl
cmpsl
add
aad
movsl
outsl
pushf
xchg
stos
icebp
xchg
dec
testl
aas
sbb
pop
mov
lcall
test
xchg
ficompl
cltd
sub
xchg
cmp
fwait
jb
inc
sbb
out
aad
dec
gs
insb
cmc
inc
pop
xchg
pusha
jmp
test
loope
xchg
fstps
adc
and
pop
push
mov
imul
ret
and
push
leave
mov
cmp
sbb
or
cmpsb
push
stos
iret
aas
in
fmull
mov
pop
mov
sub
subl
mov
bound
cmp
dec
aad
jnp
int3
lods
loope
add
cli
lods
xchg
xor
notb
push
push
js
sahf
mov
xor
les
scas
scas
sub
sub
outsl
cmp
jb
test
cmp
fnstsw
stc
mov
sbb
push
aad
fnstcw
in
xchg
pusha
jmp
xlat
or
mov
or
lahf
inc
pop
mov
cmc
and
shlb
xor
roll
cmp
icebp
dec
out
add
jae
repz
arpl
and
aas
mov
xor
jge
jbe
ret
fwait
sarb
or
into
push
data16
clc
outsl
or
rolb
cmp
mov
aas
std
icebp
xchg
sbb
jmp
pop
mov
and
xlat
cmc
mov
rcl
or
cli
mov
xor
and
lcall
outsb
inc
pop
outsl
mov
or
mov
or
push
inc
add
mov
or
divl
and
insb
out
xor
mov
das
jns
and
lea
adc
ret
and
jbe
jo
testl
adc
je
cmpsb
daa
mov
adc
xor
outsl
mov
repz
std
loop
and
sbb
mov
leave
movq
or
adc
push
int
popf
mov
jbe
divb
add
sbb
sub
xor
andb
mov
sbbb
in
mov
pop
add
mov
leave
test
adc
call
push
cmpsl
dec
fstpt
add
inc
in
jo
and
cmp
subb
dec
stos
mov
popa
mov
sahf
push
lea
xor
xchg
pusha
scas
outsl
fdivp
mov
xor
es
jp
and
mov
or
and
mov
int
ljmp
jnp
lods
or
fwait
and
pop
es
popa
pop
xor
js
dec
sub
mov
pop
loop
and
push
sbbb
pop
ja
fldl
xor
pop
fwait
int3
shrl
jbe
and
dec
xor
js
pop
mov
dec
lea
sbb
sub
jecxz
stos
sub
nop
in
or
cli
sub
cmp
or
dec
cmpsb
jge
xor
fs
das
jg
push
popf
hlt
imul
sbb
push
dec
out
rolb
lret
xchg
dec
or
lcall
sbb
pop
dec
xor
push
sahf
rcrb
mov
shrl
cmp
pusha
add
push
push
imul
fmuls
xchg
pop
mov
gs
add
shll
icebp
add
mov
divb
mov
pop
ficoms
or
cmc
pop
hlt
repz
or
lock
xor
and
sbb
sub
aad
aam
dec
nop
leave
dec
hlt
and
pinsrw
mov
xchg
out
popf
or
ret
call
lea
and
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
dec
popf
xchg
aad
pop
ds
mov
sub
jb
shl
loopne
outsl
xchg
cmpsl
cmpsb
subps
jp
sahf
xor
jmp
pusha
movsb
pop
ja
sbb
dec
mov
sbb
ja
sbb
dec
icebp
inc
add
cmc
incl
add
ss
lret
sbb
push
aam
pop
int
or
mov
mov
hlt
jmp
test
mov
lret
sub
fs
ret
enter
pop
in
lret
addb
mov
test
aas
jb
pop
lock
sti
pusha
and
movsb
adc
jb
outsb
or
mov
add
das
hlt
stos
in
popl
inc
cmp
bound
cmp
jecxz
fwait
jle
inc
js
inc
push
cmp
and
test
xlat
scas
inc
push
clc
mov
ljmp
pop
mov
sbb
test
int3
sub
and
pop
dec
fcoms
xchg
arpl
mov
test
mov
lock
cmp
ss
aad
xchg
xchg
sub
jp
cmp
push
mov
xchg
cmpsb
leave
push
cmc
es
faddp
incb
cltd
mov
mov
jbe
add
dec
pop
out
movb
push
inc
or
jg
push
sub
pop
jp
iret
or
xchg
mov
fistpl
cli
add
jp
sub
pop
xor
inc
out
sbb
sbb
ss
rcrb
repz
mov
pop
add
jle
dec
xchg
mov
push
pop
cmp
cmp
leave
xchg
or
mov
imul
mov
inc
lahf
test
push
add
mov
cmp
mov
clc
sbb
lret
scas
scas
in
push
pushf
shl
dec
das
outsb
pop
in
scas
inc
xchg
xchg
lret
mov
lock
arpl
sub
mov
fstl
lds
or
addr16
bound
aas
cmp
or
lock
fdivl
cmp
xchg
dec
sbb
aas
inc
dec
pop
pop
or
js
push
shll
and
rcrb
and
fcoms
jmp
xchg
icebp
or
mov
test
dec
test
xor
push
mov
mov
lcall
dec
pushf
inc
inc
and
pop
frstor
xchg
mov
sbb
or
data16
lods
shlb
dec
mov
lret
mov
mov
fsubp
mov
enter
inc
ja
inc
inc
lahf
faddl
pop
adc
pop
push
cmc
sub
or
ljmp
jecxz
popf
stos
adc
inc
and
fcomp
cwtl
pop
pop
sub
xchg
pop
fwait
scas
loop
jb
inc
stos
inc
jmp
fs
push
fwait
sti
dec
out
ss
divb
adc
or
int
sub
std
xor
push
mov
or
aas
add
ljmp
cmp
stos
sbb
stos
push
cli
and
pop
pop
ret
fdivrl
lcall
idivb
xchg
pushf
inc
cmpsl
xchg
rolb
jp
xor
out
out
movsl
xor
mov
mov
es
clc
nop
mov
and
loopne
jl
sbb
aad
lea
fnsave
pop
push
pop
cltd
repnz
cmp
mov
dec
jp
push
jge
fs
sbb
lahf
scas
loop
daa
addr16
mov
and
mov
xlat
icebp
and
inc
mov
call
sub
and
xchg
jge
or
js
jo
pop
fcoms
pop
shrb
jbe
xor
push
mull
sbb
mov
add
pop
dec
sti
mov
or
dec
xchg
pop
lret
scas
cmpsl
fs
cmp
push
xchg
sbb
cmp
insb
mov
popa
rcr
in
or
mov
fwait
xor
iret
xor
popa
stc
adc
fbld
lods
pusha
push
and
bound
xor
inc
repz
sub
lcall
xor
lret
adc
xchg
arpl
pop
aad
punpckhbw
mov
jp
xlat
ret
push
cmp
loopne
ret
adc
imul
adc
loop
inc
nop
addr16
int3
cmc
sbb
dec
ret
xorl
push
inc
adc
cmp
sbb
cmp
jl
xlat
stos
insl
adc
and
push
push
addb
ljmp
pop
repnz
or
xlat
imul
orb
dec
adc
lods
rclb
dec
lods
pop
ss
cwtl
call
xor
mov
or
jns,pt
shll
repnz
stos
xor
fisubl
andl
push
fisttps
ret
pop
adc
dec
popf
and
or
mov
lods
mov
test
sub
fmulp
dec
sub
sbb
movsl
mov
xlat
mov
iret
and
xchg
jo
pusha
mov
stc
cmp
sbb
adc
xor
and
fisubl
scas
rcl
xchg
push
push
shl
mov
and
es
dec
in
inc
in
cli
test
adc
xorb
test
jae
lcall
mov
cmp
cmp
add
mov
and
aas
inc
pop
mov
and
out
adc
jecxz
cmp
notl
ss
xor
xor
dec
jecxz
inc
jnp
mov
pop
rcr
push
sub
adcl
iret
aaa
das
outsb
out
mov
jbe
movsl
pop
mov
mov
mov
mov
jno
dec
ja
mov
mov
ds
fimuls
daa
popa
stos
cmp
dec
cmp
mov
cmc
dec
mov
and
in
push
imul
sub
inc
aam
jne
subb
ljmp
mov
ljmp
sbb
cld
int
mov
xchg
push
mov
sahf
call
lcall
xchg
stos
add
in
sub
imul
fwait
es
cmp
in
push
pushf
stc
lods
repnz
cmp
cmpl
push
pusha
mov
cmp
pop
xor
lcallw
into
jp
xchg
test
pop
jo
mov
dec
and
adc
dec
inc
shr
or
add
jb
mov
jmp
add
int
inc
enter
cld
sub
xor
inc
data16
sti
xlat
pop
and
and
dec
add
lahf
aas
cmp
cmp
xchg
fldl
addr16
add
aad
mov
add
adc
and
sbb
cmp
push
loop
loopne
inc
mov
jo
arpl
inc
lods
movsl
mov
pop
cmp
pop
inc
lds
arpl
roll
mov
test
push
cmp
aam
push
and
movsl
push
and
and
jg
data16
inc
aas
adc
mov
inc
scas
mov
adc
sub
push
push
fwait
mov
fcmovnu
or
mov
or
dec
movsl
push
or
jnp
shrb
andl
rcl
push
inc
jl
ret
js
or
dec
cmp
fdivrl
push
mov
mov
hlt
lcall
out
jno
and
mov
gs
sbb
out
xchg
jle
in
lret
mov
or
mov
icebp
jl
xchg
push
sub
fstpl
mov
pop
out
leave
xchg
insb
xorl
cmp
lea
dec
xor
xor
popf
mov
rcll
das
and
lahf
pushf
lods
frstor
call
and
and
dec
ds
fidivs
jl
sbb
push
adc
aaa
add
stos
inc
xchg
test
mov
sub
stc
or
leave
dec
mov
ret
dec
rcll
mov
jnp
imul
xor
pop
mov
nop
shlb
aaa
addr16
lods
imul
inc
cmpl
or
dec
cltd
adc
add
or
xchg
sbb
fnstcw
pop
lret
push
in
inc
adc
sbb
jmp
mov
jae
lock
in
push
xchg
scas
and
ror
int3
xor
xchg
jp
ljmp
inc
jae
adc
xor
jmp
js
mov
xor
xorb
mov
mov
lahf
sbb
xor
pushf
shr
out
pusha
ss
add
jno
mov
pop
jno
out
scas
xlat
std
sahf
cld
mov
jle
ror
push
addr16
inc
test
icebp
imul
inc
sub
adc
push
sbb
js
lods
push
aad
pop
aaa
mov
pop
sarl
xor
push
add
pusha
push
add
dec
jb
xor
pop
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
icebp
lcall
sbbl
cld
call
cmp
je
ds
cmpsb
mov
lock
or
push
mov
xchg
xor
out
pop
mov
cmp
cli
push
test
fsubrs
addr16
cli
jno
push
push
sub
iret
enter
sbb
adc
and
mov
jbe
loopne
je
mov
in
dec
add
movsb
lock
cmpsb
in
sbb
sbb
pop
and
adc
lea
and
pop
out
enter
sbb
sub
mov
mov
inc
int
mov
cli
or
xlat
dec
fiaddl
sbb
fucomip
push
loop
add
and
pop
mov
ds
mov
xchg
out
popf
or
shr
mov
sbb
adc
call
mov
or
add
aad
sub
xor
dec
add
imul
inc
push
mov
adc
adc
add
jmp
hlt
cmp
adc
cmp
fsubrs
mov
arpl
xlat
ss
dec
inc
lahf
jne
or
aam
sti
mov
dec
jge
jne,pn
leave
movsl
jns
add
les
aas
arpl
add
pop
sbb
mov
mov
test
sub
insb
push
imulb
xchg
mov
lods
mov
test
bound
clc
pop
cmp
and
sbb
test
mov
mov
add
jo
int3
jle
push
cmpsb
mov
xchg
adc
lds
sub
mov
dec
pusha
mov
mov
subl
mov
pusha
jge
fldt
mov
mov
xchg
mov
cli
pop
mov
loope
nop
pop
or
cmp
push
repz
std
int
xchg
lock
pop
shll
add
cmpsb
push
dec
xor
sarb
lock
movsl
into
fimull
jmp
inc
stc
jmp
xchg
mov
jge
mov
into
xchg
cmp
push
or
xor
sub
xchg
mov
cmp
filds
or
mov
cli
sub
test
sbb
xor
lcall
mov
in
mov
lock
outsb
stos
mov
add
mov
int3
inc
aad
sub
nop
sbb
lea
or
je
imul
adc
pop
gs
les
movsl
and
aaa
xor
jmp
out
jnp
lock
in
push
mov
out
scas
or
shlb
mov
xor
mov
lods
sar
sti
xchg
push
cmpsl
mov
mov
push
call
or
push
jp
sbb
cmc
pop
dec
dec
sbb
aaa
je
mov
pop
inc
dec
out
daa
in
adc
punpcklwd
sbb
stos
mov
movsl
ljmp
pop
stc
mov
pop
aam
stos
lds
pop
adc
imul
pop
jmp
test
inc
mov
dec
ret
in
adc
scas
cs
mov
aaa
xlat
jle
mov
inc
jb
lock
icebp
add
out
mov
cli
jmp
sbbl
mov
jle
iret
sub
mov
add
ljmp
fwait
test
ss
or
insl
lret
ds
mov
fs
jne
outsb
jl
mov
adc
loop
jnp
in
imul
push
loop
jns
mov
and
add
fs
int
jecxz
fcoml
xor
cmp
scas
sar
push
xchg
jo
aaa
enter
into
sub
jle
mov
add
jp
pop
mov
adc
or
adc
ds
lret
adc
les
add
ret
frstor
dec
mov
mov
mov
cltd
xchg
nop
cs
push
xor
or
cs
or
inc
mov
jb
lds
push
cltd
add
mov
pop
xor
mov
and
inc
mov
cwtl
pushf
mov
adc
jae
and
jb
and
mov
xchg
pop
cs
nop
mov
or
xorl
sbb
cli
pop
ljmp
mov
bound
aaa
xor
jno
sub
enter
mov
push
outsl
test
jnp
and
setge
jecxz
xor
loope
push
outsl
cmp
out
in
push
ds
mov
imul
wbinvd
adc
adc
ficompl
cltd
loopne
cmp
jnp
je
add
lret
sbb
ja
pop
pusha
aad
inc
inc
aaa
pop
or
add
dec
ljmp
div
cmp
dec
outsb
cwtl
pop
and
inc
mov
inc
roll
pop
fmul
lock
pop
pushf
dec
adc
xlat
imulb
call
mov
sbb
out
loop
inc
xchg
xorb
xor
test
subb
filds
dec
sub
or
mov
add
movsl
in
scas
in
pusha
aad
addb
popf
mov
arpl
les
xor
jno
sbb
fnstsw
daa
ds
pop
adc
imul
stos
and
push
pushf
push
fidivrl
push
mov
test
inc
shlb
test
sbb
xor
cmp
stos
adc
pop
gs
mov
fnstsw
leave
shrb
into
loope
xchg
icebp
ja
lcall
sbb
or
out
and
rorl
pop
adc
loopne
popa
xchg
mov
int3
adc
xchg
leave
dec
jae
outsl
push
push
sbb
sub
testb
push
adc
mov
mov
bound
push
iret
jnp
inc
xchg
and
pushf
hlt
inc
movsl
insl
movsb
xchg
ss
push
pop
daa
jnp
xor
js
fbld
push
out
mov
mov
dec
mov
dec
cmp
cmp
pavgw
push
lcall
into
sbb
add
outsb
insb
fbld
sbb
into
shrl
dec
xchg
shll
and
jae
inc
jg
out
aam
mov
addr16
sbb
int3
dec
ret
jge
xchg
mov
gs
lds
push
jae
inc
sbb
jl
in
xor
scas
fisttpll
in
mov
fimull
and
add
adc
sub
in
push
arpl
cmc
les
dec
aam
jne
mov
jbe
aaa
jp
fstl
ret
pop
push
pop
mov
sub
xchg
mov
imul
mov
adc
test
mov
push
rolb
lods
or
add
in
ds
push
idiv
dec
lcall
cmp
adc
shll
leave
pop
into
dec
icebp
xor
insl
fisttps
fildll
inc
or
popf
sahf
xchg
mov
jo
les
mov
cld
push
mov
fstpl
dec
add
mov
cmp
push
arpl
push
pop
aas
dec
pop
push
mov
jns
adc
xor
out
adc
mov
jbe
outsl
fstpt
or
add
pop
inc
lret
inc
movsb
lret
prefetch
out
out
mov
fistpl
inc
sub
mov
pop
stc
fsubrl
sti
adc
xor
fwait
shrb
push
andnps
pop
jg
popf
mov
mov
ret
jg
cmpb
movsb
push
insl
lds
pop
inc
xor
lret
daa
jns
icebp
popf
push
inc
in
push
lods
sahf
adc
jp
adc
xor
add
pop
into
dec
icebp
xor
xlat
in
fstl
in
test
mov
sub
negb
add
inc
pop
jge
xchg
not
aas
add
cmc
arpl
cltd
add
pop
xlat
outsl
push
pop
aas
dec
arpl
pop
pop
mov
xlat
aaa
nop
lods
xor
fwait
in
ds
mov
stos
xor
add
xor
jl
sarb
shll
insl
out
out
mov
fistpl
out
sbb
mov
push
in
cmpsb
xor
jmp
int
sub
jbe
fs
test
or
cmp
jmp
add
mov
imul
mov
dec
je
xchg
idivb
mov
pop
gs
jg
mov
shrb
xor
inc
pushf
sbb
cmp
gs
jb
lock
mov
sbb
xor
stos
cmpsb
rcrb
leave
and
pop
sbb
or
repnz
andl
mov
xlat
aas
jecxz
mov
es
push
roll
cmpsb
outsb
insb
int
push
bnd
test
jmp
adc
mov
test
int
fsubrl
jp
add
sbb
bound
mov
neg
cmp
leave
je
cld
mov
jae
insb
popf
insb
add
lock
inc
push
mov
les
inc
shrb
shrb
mov
xchg
dec
sub
xor
lods
push
jns
jmp
sar
mov
imull
leave
sub
adc
push
dec
fldl
xchg
adc
or
dec
ljmp
sahf
adc
jb
dec
mov
adcl
and
dec
insb
mov
cmc
and
ret
jnp
and
aad
sub
aas
out
cmp
inc
cmovs
lahf
jns
pop
imul
mov
inc
cmp
pop
mov
lahf
lods
push
lret
mov
sahf
xchg
inc
mov
jecxz
clc
out
mov
mov
mov
movsb
dec
push
xor
or
cwtl
cmpsb
in
dec
jge
lods
nop
lahf
cli
and
pop
or
movq
sub
pop
push
sub
hlt
aad
subb
pop
cmc
int3
cmp
mov
jecxz
mov
dec
fwait
call
out
jmp
mov
sub
mov
call
adc
jmp
out
repnz
das
adc
popa
pusha
popa
mov
pop
fnstsw
stos
add
or
cmp
push
fldl
jne
and
scas
enter
ja
and
in
or
loope
xor
sete
das
pop
arpl
aad
ret
jno
daa
fadd
arpl
imul
mov
xchg
or
notl
or
ficomps
aad
dec
fnstenv
js
outsb
push
mov
rol
inc
mov
rol
and
adc
jge
push
rcll
or
mov
xchg
leave
hlt
leave
in
add
dec
add
or
jo
and
mov
loope
imul
push
sti
pop
lahf
jl
inc
push
mov
mov
jnp
repnz
outsb
clc
push
pop
les
pushl
in
jnp
fidivrl
popf
imul
mov
fcoms
push
bound
push
push
pop
pop
sbb
jno
push
mov
xor
cli
sbb
andl
cwtl
cmp
rcr
mov
pop
cmpsb
mov
add
fs
inc
xchg
mov
inc
stos
mov
repnz
test
sbb
add
lods
ret
pop
mov
es
sbbb
sbb
test
icebp
cmp
adc
xchg
sarb
cs
pop
sbbb
jae
sub
sub
test
inc
jl
add
push
fsubrs
mov
inc
pusha
out
mov
and
inc
test
sbb
repnz
mov
int
leave
loopne
pusha
nop
inc
jg
add
gs
and
jno
hlt
cmovb
push
xlat
xor
mov
int3
outsb
lret
cmpsb
adc
mov
out
arpl
dec
jns
jb
std
sbb
pop
js
popa
xor
adcb
sbb
lret
mov
inc
sbb
xor
mov
stc
hlt
mov
mov
pop
je
jecxz
test
jnp
cmp
rolb
stos
adc
push
clc
out
push
push
mov
call
pop
xor
fildll
mov
outsb
or
inc
cwtl
adc
add
sbb
adc
ss
into
inc
push
loop
cli
sub
repz
mov
sub
jae
pop
cmpsl
pop
cmpsb
cmp
or
fcmove
inc
sbb
xor
ljmp
xchg
jl
ss
test
adc
out
sbb
add
mov
mov
xchg
sub
push
daa
or
arpl
inc
or
jnp
add
pushf
ja
push
or
mulb
mov
fcmovu
ret
mov
imul
cmpsl
leave
aas
inc
inc
mov
std
cli
leave
out
stc
xor
insl
test
lods
cmpsb
iret
stos
in
pushl
inc
divb
cmpsl
mov
shlb
les
adc
inc
clc
rcr
adc
jnp
rolb
flds
add
push
lock
les
and
or
push
adc
stos
fincstp
aaa
imul
xchg
in
aad
add
lret
mov
cli
cltd
pop
xor
test
push
fs
inc
sbbl
or
mov
jge
pop
inc
mov
stc
adc
dec
outsb
lea
cmp
int3
xor
fs
or
xchg
out
lcall
lahf
shlb
js
je
dec
shll
or
cmp
xchg
inc
lods
push
and
and
mov
push
std
jmp
aam
jns
jne
test
fsubrp
call
push
jo
inc
and
mov
or
mov
fdivrl
jae
cmp
imul
in
dec
lcall
aas
pop
mov
aad
xor
push
fwait
jnp
or
adc
mov
add
stc
jo
ret
xchg
nop
mov
and
dec
cmp
xchg
jle
js
lods
pop
in
sub
inc
inc
fsts
std
rcll
fdivs
es
push
pop
repz
inc
popa
mov
dec
aas
fldl
lret
pop
daa
mov
or
adc
sub
aaa
or
pop
xlat
aam
jns
outsb
rorl
or
cltd
jbe
sarl
sti
cld
enter
jbe
xlat
or
aam
dec
push
push
mov
aas
test
xlat
xor
fcmovnb
scas
lods
in
push
mov
xchg
movsl
hlt
add
xchg
and
repnz
stc
repnz
adc
inc
in
fisttpll
aaa
ja
jno
jae
mov
lock
jp
inc
and
daa
xor
inc
mov
sub
mov
cmp
mov
loopne
sub
fwait
pushf
mov
enter
and
test
adc
and
inc
outsl
jns
scas
test
imul
rol
dec
push
pop
mov
ret
jne
or
sub
fwait
cmp
lods
movl
push
sub
mov
cs
enter
dec
in
pop
cmc
loopne,pt
iret
out
and
mov
cmp
lret
out
mov
xor
jb
fisttpl
inc
ucomiss
adc
sbb
mov
xchg
into
imul
push
or
cmp
dec
mov
xchg
popa
adc
imul
xor
aad
push
adc
movsb
pop
loop
sahf
cmpsl
xchg
popa
in
adc
cmpsl
mov
fidivl
popf
jmp
jb
mov
xchg
inc
pop
in
outsl
jecxz
cld
lods
jp
mov
hlt
adc
mov
sub
cmp
inc
adc
push
out
jge
inc
mov
bound
mov
jl
cltd
mov
imul
addr16
lock
mov
mov
sbb
and
mov
cltd
mov
mov
sbb
mov
dec
xor
xor
sub
xchg
sti
fldt
jp
mov
xchg
jbe
xor
arpl
imul
cmp
push
aad
movsl
loope,pn
lods
js
push
ja
sub
and
movsb
push
mov
pop
repz
jmp
cld
mov
hlt
push
aam
gs
dec
dec
and
inc
aaa
xor
fmul
push
pop
pusha
js
sbb
xchg
xor
scas
jo
xchg
dec
sbbb
cltd
mov
sbbl
rclb
fdivrs
inc
adc
dec
stos
ss
addr16
rcll
cli
push
and
cmpsb
stc
mov
inc
add
loopne
dec
mov
and
and
dec
xchg
xchg
into
xchg
xor
jge
ds
fcmovbe
into
stos
mov
sbb
jo
mov
jo
xor
movsb
jns
cmp
adc
or
mov
cmpsb
scas
test
shrl
or
loop
sub
xor
repnz
aam
adc
test
stc
and
cltd
xchg
rcll
push
loop
pop
scas
inc
pop
add
cmpsb
movsl
fcmovnu
out
and
sti
xchg
jp
xor
movsl
out
into
sub
mov
fiaddl
aam
add
mov
insb
es
add
leave
in
add
sub
pop
out
mov
data16
imul
test
jae
stc
lea
fistpl
and
loope
mov
das
std
lret
mov
es
pop
std
push
loope
xor
mov
in
mov
test
push
sub
mov
not
lds
aad
inc
adc
popf
test
cwtl
cs
push
insb
cmp
mov
bound
mov
mov
ss
fmulp
out
fcomi
mov
mov
pmuludq
mov
lods
xchg
jne
push
cwtl
ljmp
dec
xchg
sub
push
jb
movsb
mov
pop
rcl
add
leave
xor
fisubrs
out
call
dec
or
cmp
dec
in
icebp
stos
push
out
push
inc
ss
inc
fisttpll
add
loope
jae
sbb
pop
pop
pop
iret
andl
push
ds
lods
int3
sub
test
push
insl
cmc
shl
cmp
out
push
jb
jae
cmp
cmp
jp
jo
push
inc
int3
mov
leave
cmp
outsl
jecxz
out
andb
fs
pshufw
and
clc
es
xchg
scas
shlb
rcll
dec
jmp
icebp
xor
insl
in
push
jp
ds
cwtl
mov
adc
push
push
cwtl
imul
out
loopne
adcl
je
or
xchg
pop
les
int
jg
out
dec
xor
push
arpl
scas
xchg
adc
pop
or
xor
sbb
xchg
sub
into
ss
mov
xchg
testl
ljmp
lock
sbb
lcall
push
shl
je
add
sub
jo
mov
ret
or
pushf
sbb
stc
ret
fisttpl
xchg
es
pop
dec
imul
mov
cli
les
inc
add
pop
or
and
fbld
leave
push
cmpsl
insl
daa
dec
and
jl
shl
stc
or
push
lret
sub
insb
pusha
cmp
fldl
pop
ja
mov
jne
shll
cmp
popa
pop
xchg
dec
sti
inc
xchg
push
jle
js
mov
movb
and
imul
pop
xchg
mov
insb
enter
mov
out
popa
lret
pop
and
mov
sarl
push
push
mov
pop
push
bound
in
pop
iret
ficompl
pushf
mov
sbb
mov
mov
andl
stos
mov
data16
bswap
pop
or
sarb
lds
fsubrl
and
inc
aas
cmpsb
mov
dec
jno
mov
sub
xchg
arpl
push
dec
inc
push
inc
mov
test
and
lret
movsb
adc
idiv
hlt
xchg
jecxz
dec
shlb
loopne
mov
rcll
loopne
sbb
pop
add
sub
mov
jo
fs
std
or
mov
fistpll
sub
and
fs
jge
ljmp
dec
and
iret
push
dec
lcall
xchg
popl
cmp
shlb
sahf
adc
stos
inc
mov
pop
andb
push
mov
fstpt
pop
xchg
lods
stos
adc
fwait
repnz
push
rorb
fadds
fsubrl
imul
add
imul
test
and
and
cmp
mov
mov
add
ljmp
test
push
pop
inc
out
mov
jmp
push
addr16
mov
div
icebp
jg
call
jmp
outsb
jecxz
dec
pop
lret
mov
pop
xor
stos
sub
pusha
push
xor
jmp
dec
lret
mov
lret
adc
lods
mov
popf
ret
sbb
xor
push
es
popa
inc
std
inc
mov
ljmp
aam
sbb
int
inc
sub
xor
and
pop
xor
cli
fwait
clc
and
scas
cmp
ja
cmp
inc
sbb
repz
dec
xchg
into
imul
jge
out
cmc
in
shlb
adc
and
ficoml
inc
jne
jno
xor
addr16
aaa
mov
andl
mov
aaa
in
popf
iret
je
pop
xor
dec
gs
push
test
mov
pushf
pminsw
push
pushf
push
inc
mov
gs
pushf
pop
or
adc
mov
data16
js
sub
jmp
mov
mov
dec
ljmp
scas
xchg
pop
in
shll
add
subl
ret
jns
orl
pop
pop
add
mov
inc
xor
push
add
into
mov
ja
cmp
out
push
adc
std
pushl
adc
xor
mov
into
imul
adc
ss
das
mov
jnp
push
sbb
lods
in
jae
addb
xor
adc
popa
mov
push
les
out
test
aaa
lret
push
jbe
outsl
sbb
push
insb
adc
jge
imul
mov
or
je
sarl
cmc
mov
push
aad
adc
hlt
sbb
hlt
jbe
cmp
adc
cmpsb
out
je
jg
hlt
inc
sub
repz
add
add
adc
mov
shll
outsl
rolb
push
jmp
jg
xor
xchg
in
sbb
imul
rcl
dec
push
xlat
stos
xchg
cmp
decb
mov
pop
ja
cmp
lcall
outsl
mov
cmc
cmp
mov
lret
orb
jns
scas
sbb
test
cwtl
xchg
enter
lret
xor
push
lret
jmp
scas
imulb
lret
rcr
nop
pushf
cmp
scas
fists
ja
gs
enter
inc
daa
cmpsb
sub
js
pop
mov
pop
sub
je
cwtl
pusha
lcall
mov
sub
pop
loop
mov
mov
lock
xor
fimuls
push
jo
jge
push
jp
cli
mov
pop
jl
pop
inc
inc
or
aas
xlat
loope
int3
mov
jl
icebp
cli
leave
lock
push
inc
andl
push
cltd
hlt
cmpsb
testb
inc
mov
js
into
jnp
push
jl
stc
les
mov
faddl
and
les
scas
hlt
or
scas
sub
xchg
push
add
das
out
lods
movb
pop
or
leave
cld
xchg
push
aam
cmp
lret
ljmp
add
mov
jp
lock
test
push
push
js
pop
mov
jo
loop
ret
or
push
sbb
js
arpl
sarl
or
push
js
mov
dec
in
add
ds
add
pop
outsb
pushf
mov
addr16
dec
scas
cmp
xchg
mov
inc
fstpt
fstpt
dec
shlb
mov
sti
xchg
je
jb
push
and
cmpsb
jle
xor
test
jg
sbb
scas
pop
sbb
es
testb
dec
bound
addr16
jmp
je
or
push
aaa
push
pop
push
or
sbb
sahf
lock
add
aad
jbe
push
and
cmpsb
cmpsl
es
je
scas
pop
sarb
ficoms
xor
test
xchg
movsb
pop
int3
xlat
jecxz
mov
shl
repz
sub
xchg
add
cmp
and
ret
pop
cmp
ja
cli
add
push
into
jae
xor
mov
loopne
jecxz
inc
cmp
xor
les
out
lahf
je
xorl
das
mov
jl
lret
mov
mov
mov
jae
imul
pushf
xor
in
inc
fbstp
xor
mov
xchg
lcall
gs
mov
outsb
dec
jg
add
ljmp
lea
mul
mov
dec
arpl
cld
cmpsb
cmp
enter
into
imul
add
mov
inc
sub
subl
pusha
pusha
dec
ljmp
in
hlt
movsl
pusha
lcall
mov
or
cltd
enter
or
xchg
rcrb
push
cmpsl
gs
cli
fdivl
adc
sub
in
leave
pmaddwd
jecxz
mov
std
add
sub
scas
into
mov
xchg
cltd
jns
sub
sbb
xchg
push
adc
aas
sub
push
outsb
movsb
arpl
sarl
orl
cmpsb
or
push
stos
push
or
es
test
lock
adc
pushf
popf
mov
fldl
cmpsl
sbb
loope
mov
pop
add
es
aad
jge
mov
not
loop
mov
jnp
cmp
ret
push
pop
push
in
ficompl
mov
mov
xlat
sbb
sub
pop
inc
or
nop
cmp
mov
add
mov
add
xor
in
shrb
push
dec
sbb
xlat
imul
out
push
mov
sub
pop
in
cltd
xchg
aam
jne
inc
sub
adc
daa
pushl
xor
xorb
aaa
pushl
add
fists
or
jp
arpl
cltd
fnstenv
jbe
mov
jae
push
xchg
xchg
stc
mov
pop
pop
std
sub
cmpsb
out
add
in
icebp
mov
pop
push
pop
mov
pop
pop
js
hlt
fbld
and
xor
push
sti
inc
dec
shl
movsl
pop
xlat
add
outsb
mov
pushf
sub
outsb
add
jp
mov
jno
mov
and
aaa
pop
pop
pop
call
mov
inc
in
jg
hlt
imul
shrb
add
inc
mov
shlb
repz
iret
mov
mov
cmp
out
cmc
jbe
jmp
cmp
xchg
cld
test
add
mov
nop
pusha
mov
lods
test
dec
mov
mov
adc
jecxz
or
sbb
cmpsb
add
xor
sbb
nop
pushf
out
cmp
test
xor
push
adc
sbb
lret
or
jno
stos
divb
cmpsb
mov
jecxz
stos
sbb
add
mov
lds
add
xchg
mov
push
dec
popf
sub
jmp
dec
pop
aam
push
mov
rcrb
jne
sub
push
fistpll
mov
testl
movsb
push
jge
cmpsl
add
jb
shlb
clc
dec
mov
pushf
in
jae
loopne
pusha
les
lea
push
mov
lret
loopne
push
jnp
rcrb
mov
mov
push
lods
lcall
call
imul
repz
das
jge
dec
xor
mov
in
lock
cs
cwtl
test
in
mov
imul
xor
lahf
shrl
jno
mov
mov
add
pop
test
xchg
mov
cmpl
jge
xchg
jmp
dec
jnp
ljmp
dec
inc
bound
mov
ret
repnz
ljmp
pop
lods
mov
ljmp
lock
call
loop
or
cmp
pushl
leave
dec
int
pop
push
pop
pop
add
stos
adcl
add
or
xlat
or
push
jp
lcall
nop
add
aas
adc
fnstcw
fisubs
stos
sbb
cmpsl
mov
sub
push
mov
std
jb
aam
mov
inc
jbe
jne
jno
mov
subl
pop
movb
inc
addr16
fsubrs
test
mov
or
jnp
xchg
xor
das
int3
cli
ret
xchg
shl
pop
dec
fimull
fmuls
rcll
das
lahf
xchg
js
rcll
sub
dec
lea
es
in
inc
lods
mov
cld
xchg
nop
jge
jo
insl
pop
xchg
loope
loopne
jle
add
andl
jp
into
xor
xchg
mov
jmp
int
movsl
mov
into
push
jmp
mov
fwait
lret
insb
in
ret
out
insl
or
jmp
inc
sub
ret
outsb
inc
cmp
imul
insl
inc
push
inc
inc
fcoms
lcall
or
sub
sub
and
daa
stos
add
jmp
fst
xor
lret
add
push
cmpsl
movsl
dec
cmp
xchg
repz
fimuls
loope
shlb
data16
fsubrl
dec
jge
enter
popf
push
loopne
mov
gs
movsl
jne
inc
ss
push
sbb
hlt
push
iret
jmp
aas
adc
xchg
movsb
sbb
cmpsl
movsl
jmp
shlb
js
test
mov
jnp
mov
cltd
adc
pop
iret
mov
sub
js
jae
loop
orl
mov
mov
std
pop
rorb
cmp
mov
ds
pop
int
adc
mov
jp
or
mov
mov
loope
in
rorl
cli
push
insl
das
mov
mov
repnz
jmp
sti
inc
scas
jg
jo
leave
dec
or
test
sahf
jno
add
push
jmp
jg
xchg
rcrl
push
push
andl
sub
hlt
push
adc
inc
sbb
arpl
cmp
mov
push
pop
cmp
mov
dec
sub
stos
das
in
fsubrl
cwtl
lahf
inc
mov
mov
cmpsb
lret
fdivrl
aam
movsb
mov
jg
lahf
cmpl
dec
mov
mov
mov
stos
mov
mov
and
sub
sbbl
out
or
sub
aaa
or
ret
icebp
outsl
mov
neg
pmaxsw
sbb
pop
pop
insb
cmp
pop
bound
jmp
inc
push
dec
jnp
push
xlat
out
addr16
pop
mov
pushf
cmp
incl
and
sbb
jg
cmpsl
push
fisubrl
divps
fdivs
and
fnstcw
aad
pop
lret
in
or
adc
sub
add
clc
andb
mov
pop
or
dec
cmpsl
mov
bound
pop
push
mov
leave
leave
sti
xchg
lock
jmp
nop
cmpl
adc
dec
mov
add
popf
mov
jo
sarb
ror
sub
lds
or
xchg
data16
aaa
aas
je
jnp
jb
mov
dec
fisttpll
mov
cmp
repz
pshufw
sar
mov
xchg
and
push
lret
lahf
inc
repz
or
xchg
xchg
xlat
lods
inc
sbb
nop
fmul
jbe
and
xchg
sub
inc
lock
test
pop
inc
mov
and
dec
add
sub
pop
mov
popa
sahf
mov
outsb
pop
xorl
ret
movsl
fldcw
popf
in
push
xor
mov
cmc
testb
inc
inc
adc
and
es
scas
pop
repnz
idivb
js
jl
cmpl
dec
fldenv
in
jecxz
mov
mov
jecxz
xor
jns
xchg
std
inc
inc
push
cmpsb
dec
adc
push
mov
sub
stos
fistpl
jbe
mov
into
cmpb
jmp
in
insl
xchg
xor
loope
imul
mov
jns
jl
add
inc
jbe
inc
loope
ljmp
lds
push
jae
int3
xlat
addb
stos
adc
xchg
aas
orb
fisubrl
popf
stc
leave
movsl
sub
mov
pop
ret
jno
shl
lcall
ja
std
lret
in
lods
xchg
xchg
adc
out
movsl
mov
dec
icebp
and
subl
mov
xor
fadd
sub
outsl
or
pop
pop
loopne
mov
loope
lock
shll
push
sub
mov
daa
add
or
stos
pushf
push
pop
add
fdiv
dec
and
jg
xchg
lock
fcomps
mov
inc
and
lock
push
bound
adc
pop
push
and
inc
sub
mov
popf
jle
inc
pop
mov
iret
gs
mov
cmp
stos
dec
mov
cltd
enter
and
movsb
push
cmp
push
cmp
stc
jne
adc
ret
shl
mov
jle
adc
jno
cmpb
loope
fucomip
loopne
das
lea
es
repz
fs
outsb
cmp
neg
sbbl
mov
xchg
imul
lret
or
inc
fstp
arpl
adc
das
mov
lea
and
mov
mov
fmull
xchg
adc
cmp
mov
xchg
push
sub
jge
push
jb
pop
mov
hlt
sbb
sub
sub
bound
stos
jp
iret
fdivl
clc
jl
ret
lcall
inc
std
insb
xchg
cmpl
fildl
in
push
jmp
mov
addr16
mov
fldl
call
or
popf
xchg
jmp
push
mov
mov
sub
push
cmpsb
mov
dec
sub
inc
outsl
or
pop
shll
jmp
mov
repnz
nop
fisttpl
imul
push
dec
jg
jp
mov
in
bound
jg
fcmovbe
les
mov
std
stos
jmp
mov
mov
sbb
inc
aas
inc
mov
jae
arpl
mov
adc
nop
xchg
pop
pop
stos
jmp
into
sub
pop
push
xchg
orb
jl
lds
data16
push
leave
int
xor
rorb
pop
invd
test
cmc
lahf
call
cmp
jns
test
imul
and
data16
xchg
xchg
int
pop
lcall
loope
nop
ja
jmp
adc
adc
dec
xor
push
std
out
adc
rorb
lret
in
lods
inc
gs
bound
and
or
nopl
enter
loop
cmpsb
in
lds
mov
mul
call
clc
cwtl
cmp
adc
shll
or
mov
push
gs
cmp
data16
push
mov
push
pop
mov
lcall
pop
push
cmc
jmp
mov
push
mov
lods
xor
xchg
aad
cmp
out
sub
test
dec
xchg
lahf
inc
pusha
movsb
stos
test
idivb
stos
loope
popf
test
and
dec
scas
or
or
sub
aad
push
push
mov
mov
mov
cmp
lea
loope
xchg
ret
xor
jb
inc
sub
outsb
xchg
xor
decl
mov
mov
fstpl
cmovg
cld
cmp
pop
mov
or
jae
and
sub
enter
xlat
shlb
xchg
sbb
rorb
xor
gs
sub
sbb
and
add
mov
add
dec
xchg
adc
lahf
leave
cmpsb
sarb
in
push
gs
sbb
push
jp
mov
stos
ljmp
or
shl
lods
ljmp
xchg
sbb
xor
ja
stc
mov
dec
mov
xor
or
into
stos
aad
xchg
dec
dec
mov
mov
xchg
dec
pop
add
inc
adcl
sti
cli
fisubrs
cmp
sahf
shlb
aas
repz
and
or
push
cmpsl
pop
je
add
jb
cwtl
xor
push
sub
mov
cwtl
xorb
pop
imul
push
frndint
lahf
loope
xor
dec
dec
out
sbb
push
fadd
inc
xchg
es
sti
push
loopne
pop
stc
push
and
js
pushf
push
ret
inc
mov
test
adc
leave
ds
mov
xor
sar
sub
mov
push
stc
enter
lea
fildll
push
push
jle
pop
mov
xor
inc
cmp
mov
mov
adc
les
add
js
sub
adc
aaa
jl
das
inc
sbb
or
xlat
cmp
sbb
and
pop
fnstsw
cmpsb
push
clc
pop
int3
push
outsl
ljmp
jno
push
lcall
sbb
mov
aam
add
out
les
sbb
and
xlat
popa
sub
or
dec
outsl
xchg
mov
aaa
pop
daa
lock
lods
out
xchg
dec
push
imul
cltd
mov
push
mov
dec
sbb
sbb
je
sbb
popa
cmp
and
int3
jae
xchg
int3
outsb
mov
ficomps
mov
cmp
scas
cmc
in
add
sbb
mov
jae
sub
in
les
inc
cmp
mov
pop
or
xlat
cwtl
fwait
dec
push
roll
mov
fmuls
movsb
shr
jno
ret
sub
lods
dec
sbb
test
push
mov
inc
or
push
inc
ljmp
xchg
out
mov
push
iret
add
mov
mov
push
decb
pop
mov
imul
rcrb
xchg
fwait
testl
test
xchg
movl
ljmp
mov
int
push
dec
adc
imul
cmp
push
cli
mov
xor
jle
push
movsb
shlb
adc
push
mov
negl
sbb
rcrb
sti
xchg
rolb
iret
in
aam
push
push
aad
loope
movsl
xor
loop
leave
inc
scas
fistl
and
sbb
shr
mov
out
sahf
outsl
dec
shrb
cmp
jmp
sub
sub
testb
mov
xchg
mov
imul
mov
movsl
popf
or
sbbb
addr16
lret
rorb
and
je
sub
jg
cmpsl
daa
push
out
out
inc
enter
cmovne
xchg
rcrb
frstor
fs
pusha
dec
enter
aam
and
scas
movsl
in
jg
push
inc
int3
push
test
loopne
add
pop
mov
jne
cs
les
pop
mov
sbb
arpl
or
mov
out
dec
pop
sub
dec
pop
sbb
mov
xchg
mov
outsb
cmp
mov
ret
test
push
xchg
stos
and
add
scas
mov
inc
mov
and
scas
xchg
subb
xchg
add
add
mov
push
mov
aas
push
dec
add
hlt
ljmp
test
push
cli
dec
mov
pop
loop
dec
and
push
mov
dec
fwait
dec
add
mov
push
repnz
idivl
inc
imul
sub
outsb
xor
sub
push
mov
sub
fidivrs
cmc
sbb
aaa
in
and
mov
sub
iret
push
mov
or
xchg
xor
and
outsl
in
test
popa
lods
fcmovnu
dec
out
decl
loop
out
add
hlt
cmpsb
mov
aas
pop
xchg
xchg
fmulp
call
adc
pop
bound
insl
lret
ja
iret
adc
into
jns
addr16
xorb
int
dec
lods
mov
or
call
jmp
mov
sub
jnp
out
lock
inc
movntps
mov
lods
xchg
push
pushf
sahf
std
pushf
fistps
xor
jns
enter
jns
cmpsl
jo
add
aad
adc
pop
cmp
movsb
adc
sub
sti
mov
jle
sti
mov
cld
icebp
int3
int
jnp
popf
test
test
or
and
push
push
inc
dec
out
iret
shrl
and
cld
lcall
lret
cli
test
inc
push
adc
cmp
sbb
jg
lods
push
mov
cmp
inc
enter
push
and
adc
dec
pop
xchg
aad
sti
mov
push
dec
aad
or
pop
std
aam
repz
negb
les
push
shrl
pushf
int
test
pushf
fcmovnbe
fnstenv
lret
and
fstps
mov
push
test
mov
push
push
dec
jge
scas
pusha
call
stos
add
and
push
xlat
jns
cmc
mov
enter
addl
cmp
jg
cli
stc
divb
roll
xchg
push
sbb
test
movsb
cmpsb
std
adc
dec
jl
mov
daa
jle
sub
push
mov
and
pushf
inc
sarb
es
test
adc
loop
fs
sbb
adc
repz
mov
cmp
push
dec
add
push
mov
jg
daa
outsl
or
addr16
stos
lret
and
mov
jae
adc
lock
sub
mov
mov
xchg
inc
and
push
movsb
pop
cmpsl
jb
adc
cltd
mov
xorb
jg
out
pop
mov
dec
jle
vpminsw
jbe
pusha
das
nop
clc
stos
icebp
sbb
cmp
dec
sarl
aas
push
mov
nop
add
scas
push
cmp
xor
nop
fcom
int
fcoml
mov
sahf
pop
out
lds
popf
test
mov
pushf
pop
out
movsb
jmp
es
je
mov
add
lds
aam
add
sub
pop
ljmp
mov
mov
xchg
movsb
lods
es
xor
jmp
test
addr16
sbb
aam
adc
rcrl
jae
pop
inc
lock
outsb
mov
out
cmp
push
aad
pop
pop
pop
cltd
pcmpgtw
dec
push
fnstcw
test
dec
sbb
nop
xor
pop
mov
sub
lods
mov
divb
cmp
sub
fcom
push
cmp
sub
and
push
test
push
mov
iret
adc
rcrl
jecxz
cmp
push
jb
mov
mov
inc
xor
xchg
mov
sbb
pop
mov
in
push
subb
stc
cld
clc
adc
dec
out
out
mov
push
adc
inc
iret
ds
sahf
test
xor
enter
ss
or
out
cmp
lret
sub
shr
hlt
outsb
pop
or
jae
mov
jecxz
jge
and
cld
into
fstpt
rcll
outsb
or
fwait
aam
mov
mov
xchg
jo
lret
inc
clc
test
xchg
push
push
or
lods
and
push
push
push
xorl
mov
add
and
jno
bound
mov
outsl
ret
std
mov
rorl
fsubl
jle
das
xor
mov
das
lock
pop
cltd
fs
jl
mov
inc
idiv
sbb
adc
ret
push
mov
cmp
enter
scas
stos
push
jne
fs
cmpl
add
mov
in
in
divb
fstpl
outsl
pop
xchg
dec
cmpsb
adc
mov
jns
sub
lcall
jp
push
lds
subl
movsl
mov
cmp
add
lahf
sbb
iret
sub
inc
mov
in
dec
adc
mov
add
xor
push
cmpsl
lods
fadd
ss
mov
mov
shr
inc
jmp
sarb
icebp
scas
sub
mov
cld
xor
sbb
mov
mov
jae
cmc
inc
mov
outsl
divl
insl
cmp
imul
fdivl
sbb
sbb
movsl
push
pop
les
inc
inc
add
lahf
and
icebp
jle
and
shrl
adc
mov
out
sti
rorl
shlb
push
movsb
and
pop
push
and
xor
fcompl
adc
lret
andps
add
or
fcmovnbe
inc
and
and
jne
inc
pop
adcl
xchg
lcall
nop
lock
out
xor
pop
in
mov
hlt
scas
loope
jo
adc
mov
fiadds
and
cmp
aas
inc
daa
mov
sub
mov
sbbl
inc
sub
sbb
sbb
andb
mov
inc
idiv
and
sub
sbb
out
mov
fisubrs
mov
les
dec
jp
insb
rclb
cmpsb
fs
in
outsl
pop
mov
dec
sub
push
sub
add
out
mov
aad
movsb
test
leave
imulb
push
fimuls
sub
xchg
mov
jnp
jecxz
loopne
ljmp
insl
movsl
test
xchg
bound
sub
out
jo
push
jnp
stos
adc
prefetch
add
subl
data16
mov
jae
push
sbb
sub
mov
cwtl
adc
mov
lret
pop
cwtl
loop
xor
and
jb
mov
jo
std
xchg
fisubs
hlt
insb
stos
stos
xchg
les
ljmp
shll
fstpl
loop
inc
bound
push
inc
or
sbb
inc
loopne
stos
adc
movsb
imul
pop
or
jmp
rclb
mov
xor
or
test
imul
ss
clc
lods
leave
mov
jbe
push
inc
pop
fdivs
dec
rcrl
imul
mov
push
jle
cmpsb
imul
jg
mov
add
inc
fnstsw
pop
xchg
cmp
and
mov
sub
rorl
insb
and
jbe
and
std
xor
into
push
jge
inc
fstpt
in
lcall
or
mov
mov
sub
mov
pop
popl
sub
pop
mov
adc
ret
pop
pop
sbb
and
dec
mov
mov
inc
cs
lods
jg
push
les
adc
aas
test
push
xchg
sub
dec
in
cwtl
inc
add
jns
and
loop
lahf
es
les
jl
inc
lods
cvtps2pi
xor
push
loop
lret
outsl
jge
rcrb
ss
repz
xchg
cmpl
fwait
insb
test
add
xchg
fdivs
mov
fwait
adc
fcoml
sub
out
sub
push
add
mov
inc
ja
out
adc
cltd
stos
push
inc
ret
add
test
mov
or
xor
ss
lahf
dec
sub
cli
jns
data16
test
dec
dec
out
jno
xor
aad
add
sbb
sub
outsl
sbb
inc
sub
pop
jb
jg
pop
mov
lcall
jbe
mov
test
sbb
or
enter
cmp
cltd
dec
iret
andl
stos
adc
mov
insb
dec
cmpb
leave
inc
push
cmp
mov
rorl
lock
mov
push
pop
or
adc
ljmp
sub
push
mov
repnz
fstl
push
add
fcmovbe
sub
ja
xchg
js
adc
ss
std
mov
sbb
push
hlt
xlat
mov
nop
sbb
in
ds
pop
cmp
js
mov
pop
xor
add
and
fstpl
mov
scas
popf
jnp
ds
fadd
cld
ret
test
jb
fisubs
divb
xor
pop
dec
aad
cmp
fs
xlat
cltd
sub
or
scas
data16
cmpsb
xlat
pusha
jmp
inc
pop
jae
adc
add
jbe
inc
int
push
in
lock
ficoml
mov
inc
add
mov
mov
cmpb
and
cmp
pop
xlat
loope
mov
add
or
jae
dec
testl
mov
mov
adc
pop
mov
ret
mov
lcall
adc
mov
cmc
adc
inc
sub
inc
popa
pop
push
es
es
pop
cmp
rcrb
insb
inc
fldenv
pop
sub
call
and
or
fisubl
fsubr
mov
test
xor
inc
in
into
xor
pop
gs
bound
js
sub
repnz
leave
dec
into
ss
nop
pop
mov
adcl
int3
fidivrs
ds
jl
repnz
adc
mov
cmpsl
mov
push
adc
inc
movsb
outsl
test
xor
flds
sbb
sbb
lret
adc
xchg
dec
pusha
dec
jg
daa
mov
push
rep
pushf
js
fldcw
mov
lcall
push
fbld
push
mov
outsl
fisubl
pop
movl
mov
lcall
cmp
and
jle
dec
out
push
popf
ficompl
mov
adc
sub
leave
insb
or
sub
cmp
mov
jns
cmpsb
xchg
ja
cmp
and
and
popf
or
sar
pop
add
lds
xor
dec
ss
sbb
movsl
jl
rcll
add
fs
andl
xlat
xor
jno
mov
arpl
popa
mov
inc
inc
movsb
pop
repz
sub
mov
jp
and
loopne
inc
jae
mov
jnp,pt
pop
test
inc
dec
and
sbb
dec
mov
mov
sbb
inc
jecxz
push
in
adc
push
ja
movsb
cmpsb
insl
imul
add
imul
ret
or
lret
clc
sbb
cmp
mov
xchg
in
mov
jb
mov
dec
imul
shr
inc
cmpsb
mov
lfs
popa
cmpsb
popf
shr
cmp
cmp
xchg
mov
loopne
add
jae
or
decl
outsb
xchg
cs
cwtl
xchg
lds
push
push
push
xchg
xchg
cmp
or
movsl
cmp
cltd
adc
lea
xchg
hlt
sti
into
test
outsl
adc
or
jbe
xor
inc
iret
xorb
and
jmp
push
push
cmpsb
mov
adc
js
lods
outsl
pop
fdivrl
xchg
std
mov
mov
insb
leave
dec
in
add
js
push
cmp
sub
fst
jns
adc
sbb
rolb
sbb
les
fidivrs
faddl
xlat
mov
or
icebp
xchg
inc
or
pop
fdivrs
cmp
xchg
adc
sbb
int3
jecxz
ffreep
cmc
out
fcomps
mov
xchg
push
pop
movsl
loop
push
cwtl
xor
lock
fwait
jle
pop
cmp
pop
in
je
std
cmpsb
or
add
jmp
scas
and
push
dec
int
pusha
gs
adc
sub
pusha
repz
and
stc
sub
or
mov
mov
xchg
test
cmp
out
outsl
adc
push
jb
or
xor
xor
xchg
lahf
imul
enter
cld
lods
adc
outsb
adc
pop
mov
pop
std
and
jl
add
out
pop
mov
lcall
addr16
repnz
add
pushf
adc
jae
mov
ret
lods
enter
enter
lock
lcall
add
fisttpl
inc
xor
mov
pop
lcall
sbb
mov
imul
or
mov
sub
insb
xchg
ss
dec
xlat
xorb
and
mov
lahf
ja
je
sbbb
fucomp
xchg
in
sbb
mov
add
sub
ds
pop
and
mov
into
rorl
js
xor
ljmp
jle
fwait
or
xor
pop
mov
jle
dec
test
out
imul
add
dec
int3
outsb
hlt
xor
shr
lock
cmp
clc
push
testl
lcall
fistps
addr16
push
push
pusha
rcr
add
pop
addb
pushf
inc
sbb
fidivrs
in
shll
push
imul
jmp
adc
sub
into
mov
mov
cwtl
fwait
push
dec
push
cmp
mov
scas
imul
cmpsl
insb
pop
mov
add
ret
push
mov
aad
push
lahf
jbe
sub
mov
or
add
sbb
jb
xchg
shrb
cmp
pop
dec
adc
sbb
mov
hlt
mov
dec
scas
pop
repz
push
sub
scas
push
cmp
push
aaa
out
cmp
jb
or
pushf
jno
fldenv
sahf
jl
in
pop
push
fsts
inc
jnp
testb
cmp
pop
lcall
mov
jg
movsl
or
aaa
mov
jmp
jg
fwait
mov
push
inc
mov
adc
pop
addb
sub
mov
shlb
push
and
cld
cmp
movsl
dec
fsts
incb
cld
out
int3
push
adc
aam
mov
adc
adc
inc
loopne
push
inc
xchg
and
mov
xchg
dec
int3
stc
xchg
sub
mov
stos
ds
fimull
and
sahf
dec
dec
ss
or
or
pushl
std
push
xlat
or
mov
sub
push
int3
push
or
jl
sub
pop
push
jl
xor
nop
mov
ret
std
daa
iret
ret
imulb
sub
hlt
cmc
jb
divl
jp
fstpl
pop
inc
xor
mov
xchg
faddp
push
or
sub
dec
dec
lahf
cmp
jle
xor
imul
sub
adc
mov
fcoml
lods
inc
mov
pop
loopne
inc
sahf
stc
ds
gs
xchg
fdivs
sbb
ds
sbb
outsl
xchg
mov
js
leave
sbb
movsl
jo
je
out
cwtl
jge
popf
xor
sub
insl
fs
movl
rcrb
push
enter
add
les
outsb
and
or
adc
adc
dec
sub
test
shr
xor
or
mov
fsubs
cmp
fldenv
mov
dec
and
lock
test
push
add
sbb
adc
push
mov
xbegin
fdivs
stc
sub
jo
hlt
or
shlb
or
cmpsl
mov
mov
cmp
ret
ds
cmc
add
lds
daa
enter
rolb
jnp
xor
aad
lret
push
ficompl
ja
or
and
jp
sbb
sbb
and
lds
out
test
mov
xor
dec
nop
sub
stos
sbb
jae
push
pop
and
into
shll
out
pop
je
mov
int3
xchg
xor
mov
inc
rorb
or
dec
cmpsb
adc
jbe
push
popf
loop
scas
push
int3
in
inc
dec
test
stos
xor
pop
pop
sub
mov
lcall
mov
add
leave
fs
sti
or
push
bound
push
inc
aam
push
pop
xor
test
fwait
and
pop
stc
dec
cmpb
push
stos
lods
into
nop
out
and
andl
fstpt
add
in
xchg
push
cmpsl
push
adc
into
xchg
xchg
pop
inc
mov
das
inc
mov
adc
adc
mov
pop
movsb
xchg
and
mov
xchg
dec
aas
push
sub
mov
mov
lock
sub
inc
cmp
andl
jp
aam
mov
out
adc
int3
jbe
sub
in
imul
int3
loopne
mov
test
jl
jg
test
dec
insl
mov
jl
push
cwtl
or
test
js
es
stos
sub
into
jle
into
movsb
inc
into
cmc
push
pop
jge
sbb
fstl
fstps
jmp
xchg
jp
fidivl
cmp
dec
stc
pop
mov
sub
adc
ljmp
pop
mov
repz
xchg
sub
rcll
lcall
fwait
xor
mov
repnz
ljmp
inc
lea
mov
addb
jle
mov
imulb
push
enter
aad
push
pop
add
adc
inc
je
ret
fsubr
mov
lock
adc
pop
into
loopne
and
stos
xchg
inc
dec
aad
das
movsl
leave
pusha
repz
fildll
cmp
pop
movsl
js
fstpt
cwtl
adc
jno
gs
jmp
cmp
adc
ficompl
adc
mov
xchg
movsb
jno
adc
xlat
jmp
xchg
test
inc
negb
mov
pop
jle
andb
jbe
aas
xchg
and
cld
icebp
and
or
ret
sarl
lret
movsb
in
insl
stos
inc
fs
fs
pushf
scas
arpl
or
out
push
outsl
pushf
lret
and
push
cs
testl
adcl
push
sbb
adc
div
fidivl
mov
or
cli
xor
jno
or
shrl
loopne
xor
in
movsl
loop
inc
jecxz
jecxz
cli
push
mov
xor
pop
rcrb
scas
repnz
lods
test
jl
sahf
lock
das
add
add
les
add
sub
dec
adc
mov
cld
mov
and
adc
mov
sbb
lahf
andb
lret
fmull
adc
cmpsb
inc
in
cmp
dec
scas
rorb
cmp
out
mov
or
test
test
stos
jge
xchg
test
xor
test
mov
pop
jbe
cmpsl
mov
jo
mov
lods
pop
aad
incl
pop
lret
and
mov
sbb
call
fisubrl
and
push
clc
sarl
fidivrl
mov
xor
pop
cs
jg
xor
sub
xchg
dec
repz
scas
adc
pop
in
and
adc
push
iret
cmp
and
mov
in
inc
dec
sbb
pusha
jmp
push
cltd
dec
pop
mov
mov
cmp
mov
and
fimuls
cmpsb
ficoms
nop
inc
test
movsb
lret
ljmp
pop
testl
sbb
int3
push
rcll
or
mov
fs
push
push
arpl
ret
mov
push
leave
int
xchg
mov
fdivl
cmp
iret
jne
lods
shll
jecxz
jge
push
in
scas
adc
sbb
loop
xchg
mov
pop
loope
daa
in
lods
ljmp
and
in
int
pop
mov
mov
sbb
jecxz
jne
mov
adc
leave
mov
imul
outsb
invd
and
arpl
xor
and
pop
cmp
arpl
lock
ljmp
mov
and
aas
leave
jbe
cld
aam
mov
mov
pop
jne
icebp
jle
inc
sub
movsl
lock
mov
adc
adc
push
test
jnp
cld
inc
ficoms
cltd
popa
iret
cli
das
jne
sub
push
xlat
or
lock
and
aam
lock
sbb
addr16
test
ss
outsl
ret
adc
je
lcall
pushf
loope
or
rcrl
aas
mov
inc
lock
inc
icebp
sub
shr
movsb
adc
and
sub
xlat
jge
lea
push
imul
aad
mov
dec
das
mov
test
sbb
mov
adc
inc
xor
sbb
xor
enter
repz
and
aaa
xchg
mov
inc
loop
xchg
clc
std
adc
adc
or
dec
fmull
jae
mov
add
dec
jle
outsb
mov
pop
loopne
sti
or
xor
adc
frstor
cmp
mov
pop
or
flds
iret
test
inc
call
xchg
cmp
sbb
roll
jbe
fstpl
cli
lret
mov
ret
mov
sub
and
lds
imul
shl
sbb
dec
push
xchg
push
inc
mov
test
cmp
pop
jg
xor
stc
jmp
stos
jl
dec
xor
sub
push
test
push
je
and
and
fs
sub
push
mov
push
test
pop
xlat
inc
mov
movsl
into
jecxz
pop
mov
push
lds
fisubrl
pop
xor
and
int
xor
add
xorb
xchg
adc
fsubrs
pop
aad
cmp
sub
adc
cs
mov
mov
lret
push
jmp
lea
xlat
push
leave
mov
iret
into
mov
xchg
test
loopne
popf
jne
add
inc
js
push
xor
cmp
xchg
imul
add
nop
test
mov
js
push
xor
test
shrb
mov
aas
jbe
mov
dec
mov
sub
jp
imulb
add
dec
mov
sub
mov
addr16
mov
cltd
out
imul
imul
cwtl
inc
and
shl
xchg
jp
loopne
out
mov
jns
fsubrs
test
sub
popf
shlb
pop
pop
scas
aas
cs
cli
jns
lcall
ja
sub
push
add
mov
fsubrl
and
jb
movsl
jle
in
xlat
jno
jae
in
cwtl
mov
jge
and
loopne
nop
jns
popf
les
ja
xchg
test
cmp
lret
push
sahf
sbb
mov
and
mov
xchg
cwtl
xchg
into
das
jno
inc
cli
lahf
and
mov
add
lods
and
ret
dec
inc
xor
popa
pop
out
subl
sub
arpl
sub
add
dec
jnp
cltd
leave
lods
pushf
and
cmp
jl
outsb
xor
out
ja
outsb
icebp
dec
xchg
sub
imul
adc
xchg
addr16
jg
inc
pop
mov
cmp
pop
cld
ja
or
mov
cmc
popa
test
push
js
stos
lea
jne
cmp
into
lea
mov
pop
jmp
mov
add
test
sarl
loop,pn
iret
inc
imul
dec
ficomps
push
inc
je
adc
addr16
or
nop
push
dec
fimull
rol
mov
into
gs
imul
push
test
inc
sar
and
mov
and
insb
pop
inc
cli
jle
ljmp
push
push
mov
ss
mov
aam
or
mov
sub
push
cmpsb
xor
push
pushf
bound
mov
aaa
cli
sub
pop
in
xchg
ss
test
out
test
sbb
push
add
cwtl
popa
xor
hlt
ret
icebp
jp
jp
lock
fisttpll
aaa
cmpsl
mov
or
shrl
mov
in
sbb
jae
cmp
cmp
fadds
xchg
and
pop
add
xor
es
and
ds
notb
fs
movsl
movsl
mov
xchg
and
pop
rcll
push
sub
cmpsl
and
into
push
outsb
mov
pop
dec
loop
in
push
enter
sti
stos
mov
icebp
loopne
incb
out
push
adc
cmp
inc
cld
out
jne
mov
je
mov
xchg
out
pusha
fcmovnu
roll
test
mov
adc
mov
div
dec
insl
mov
scas
roll
jg
inc
movsl
xchg
enter
xchg
movsb
xor
ljmp
lods
mov
inc
sub
push
mov
inc
push
test
mov
pop
cltd
test
ror
lds
inc
ret
scas
pop
int
jb
dec
push
xchg
pop
loopne
mov
leave
inc
mov
mov
mov
test
xchg
lods
push
lods
xchg
jno
jle
out
push
sbbl
pop
flds
xchg
push
inc
jmp
in
shll
push
inc
aam
imul
out
or
xchg
shlb
popa
jne
test
repnz
in
push
add
out
dec
xchg
sahf
mov
cmc
or
xor
sbb
setae
cli
addr16
fcoms
pushw
je
xchg
mov
shll
mov
push
xor
out
and
dec
addr16
cmp
add
jb
adc
test
push
fwait
mov
arpl
fidivrs
adc
je
testl
rcr
cmp
cmp
iret
jne
shr
jnp
in
test
shll
in
add
out
setne
dec
nop
adc
es
orl
daa
pop
test
dec
mov
pop
jo
outsb
in
fiadds
insb
inc
fstps
testl
lret
sbb
push
hlt
inc
adc
mov
push
xor
mov
ljmp
jns
faddl
sbb
jno
mov
sti
shrl
jl
sbb
and
lds
dec
out
pop
sbb
adc
inc
mov
adc
movsl
adc
sub
xchg
pop
cmpsb
push
popw
mov
mov
add
add
fsubl
mov
add
cli
cmp
push
xlat
cmp
cmp
lea
pop
xor
mov
lret
dec
dec
jecxz
movsb
add
cmp
jecxz
cwtl
cmp
jae
xchg
mov
outsl
mov
out
jmp
mov
bnd
push
lahf
adc
mov
int
aam
inc
rclb
jp
or
pop
testl
and
in
outsl
push
cmp
rorl
addl
stos
xchg
out
mov
and
das
and
into
xchg
jae
mov
add
add
cmp
and
ret
gs
cmp
js
pop
orl
mov
std
div
mov
rolb
push
jno
or
loope
and
in
jg
adc
shrl
sbb
out
pushf
daa
jge
packuswb
lea
push
shl
xor
lods
lds
in
out
mov
dec
dec
insl
cmpl
xchg
sbb
pop
push
movl
arpl
jecxz
xor
cmp
test
mov
outsb
hlt
ret
mov
out
loop
cld
sbb
scas
jne
pop
imul
mov
in
or
scas
std
pop
xor
mov
into
arpl
mov
and
icebp
in
add
jge
mov
xchg
fmuls
stos
das
popa
data16
pop
mov
add
push
insb
imul
repnz
addr16
lea
xchg
les
xorb
sbb
scas
mov
das
insb
cmp
dec
dec
roll
mov
dec
dec
jl
fmull
or
cmp
jns
lock
dec
mov
out
dec
push
loope
pmullw
sbb
push
add
into
test
mov
cmp
insb
dec
sub
lcall
imul
add
mov
dec
out
fadds
pop
test
in
sbb
jecxz
mov
test
xor
jl
lods
out
and
pushf
test
jne
add
xor
test
jno
pop
lock
cmp
cmp
dec
add
les
pop
or
jmp
and
pop
in
dec
mov
loopne
pop
divb
jo
js
mov
repnz
mov
mov
pop
push
jcxz
jae
mov
mov
ss
jbe
out
ret
scas
push
jne
scas
add
test
inc
sbb
cmp
jle
adc
or
adc
aam
pop
lods
shll
lret
inc
push
mov
or
xor
test
daa
mov
mov
add
sub
scas
add
into
cmp
mov
mov
rorb
dec
sub
lods
or
and
adc
std
jnp
ret
test
mov
popa
js
pop
cmp
loopne
in
push
dec
ds
dec
inc
test
sbbb
and
cmp
pop
push
into
loop
xchg
aaa
jg
int
in
popa
mov
jecxz
add
add
roll
out
cmpsl
cli
or
and
test
stos
shrb
jno
pop
push
fildll
pop
aad
sbb
shll
dec
popf
andb
xchg
and
test
outsb
lock
daa
lret
in
add
loopne
insb
xor
dec
dec
mov
das
neg
divl
pushf
mov
mov
add
adc
loop
fwait
or
or
xor
movsl
mov
xor
mov
fisubl
sub
std
mov
mov
xchg
mov
mov
ret
or
and
or
jmp
mov
popa
pop
ret
jns
scas
push
jl
loopne
jns
fs
sbb
and
inc
sub
sti
xchg
nop
outsl
bound
xor
repnz
scas
mov
xchg
mov
cmpsb
testb
movntq
out
xor
adc
fwait
int
loop
lret
ljmp
lret
es
popl
fbld
ja
push
and
in
and
sbb
test
dec
jno
push
loope
or
into
cmpsb
xorl
ds
or
cmp
sbb
mov
cmc
je
je
mov
out
pop
cmpsb
push
lds
fldcw
cmp
int3
mov
aas
mov
mov
fldl
xchg
or
loop
insl
test
ljmp
push
push
or
cmpsb
nop
xchg
in
mov
push
out
mov
pop
mov
mov
repz
arpl
jb
mov
in
add
lcall
or
enter
mov
hlt
iret
cmp
aam
pushf
ss
jl
mov
add
mov
orl
mov
decb
fcoms
ret
gs
mov
mov
mov
fsubs
xchg
arpl
ss
mov
or
enter
rcll
jg
mov
cmp
mov
dec
and
rclb
lret
mov
xorl
cmc
repnz
mov
dec
xorb
fcoml
cmp
add
lret
mov
loopne
sub
sbb
mov
adc
pop
dec
pop
ret
push
xchg
jbe
inc
out
in
push
loopne
push
std
adc
jno
ror
mov
pop
stc
mov
lcall
jmp
sbb
outsl
add
daa
movsb
test
rcr
lds
in
or
jb
sbb
hlt
sbb
dec
loop
or
sub
and
xchg
inc
lret
ljmp
daa
mov
repz
and
popa
pop
movsb
xor
or
xor
mov
ds
mov
sti
cmp
mov
push
fmuls
lea
sbb
sbb
add
sti
push
push
jns
mov
add
int
repnz
test
and
ret
dec
xor
add
cmp
mov
cltd
or
ljmp
jg
hlt
xchg
mov
xchg
stos
loope
testb
push
and
or
jl
xor
mov
and
cmc
cmp
jb
xor
scas
adc
pusha
mov
loop
insl
xchg
sbb
bound
mov
mov
cwtl
mov
push
int
dec
cmc
aas
repnz
pop
std
movsl
xchg
rolb
lahf
mov
ja
mov
es
sub
mov
inc
clc
xchg
repnz
push
in
leave
and
in
mov
inc
cmp
repz
daa
fstl
xchg
addr16
popf
add
test
inc
push
and
fistpll
lret
cwtl
mov
leave
pop
je
addl
call
cmp
and
pop
and
fldcw
fisttpll
mov
fimull
fistps
mov
jge
jmp
data16
dec
mov
mov
mov
mov
mov
jmp
lret
mov
push
pushf
movb
and
data16
stc
aam
popa
pop
jg
dec
push
dec
and
jge
pop
dec
pop
fsubl
cmc
clc
inc
movzbl
xchg
int3
adc
lods
jge
pop
sbb
adc
sub
or
lret
lahf
into
xor
fistpll
sbb
hlt
in
add
cmp
inc
std
frstor
xor
adc
addr16
test
in
adc
xchg
stc
lea
dec
inc
push
mov
inc
loope
in
fiaddl
aam
outsb
mov
mov
jbe
or
xor
rolb
xor
nop
lods
repz
fildll
dec
pop
or
adc
clc
and
sbb
mov
aas
xor
dec
clc
cmp
in
sub
jno
imul
loope
daa
fucomi
fldcw
inc
add
sti
lret
sbb
xchg
out
loope
lret
leave
insl
jge
fwait
xor
outsl
and
add
imul
mov
pop
xor
jne
jecxz
lds
mov
mov
mov
addr16
fsub
outsl
mov
sub
in
sbb
int3
arpl
enter
je
in
fisubrs
std
inc
ret
out
movsl
shll
das
jl
push
add
inc
jp
out
je
mov
inc
jecxz
adc
mov
aas
add
scas
or
popf
arpl
dec
sub
out
push
pop
loopne
adc
notb
or
cmpsb
pop
or
fsubrs
lods
pop
jmp
clc
cmp
bnd
into
lcall
loope
mov
fcoms
push
xor
sub
pop
pop
jno
int3
xchg
das
mov
in
mov
pop
fiaddl
rcr
sbb
push
divps
cmp
sahf
push
dec
push
fsubs
leave
mov
ljmp
xorb
mov
xlat
in
pop
lock
and
mov
pushf
dec
fimull
pop
pop
mov
pop
leave
imul
aas
ret
pop
notl
iret
cmp
xor
movups
push
lock
pop
out
xor
inc
mov
inc
mov
dec
sub
out
les
fsubr
rep
or
adc
mov
jge
pusha
stos
mov
mov
ja
pop
rclb
movsb
mov
sbb
rcrl
inc
inc
aaa
mov
int
xchg
sbb
pusha
jle
sub
repnz
aas
mov
inc
pop
ret
stos
inc
push
push
sbb
int3
addl
iret
idiv
cmpsb
sahf
cmp
or
push
out
sub
loope
jg
xchg
les
fsubrs
mov
shl
imull
xor
in
into
ds
sub
sahf
repnz
mov
mov
sbbl
sub
xchg
outsl
inc
jge
xor
inc
sbb
stos
mov
into
or
divb
gs
adc
cli
xor
mov
scas
enter
push
or
dec
jnp
inc
lahf
mov
adc
add
push
sub
push
push
sub
jne
insb
add
sahf
scas
sbb
add
lods
rclb
mov
enter
mov
mov
movsb
sbb
loope
sub
fsubl
jge
out
pop
mov
filds
jmp
xor
les
lea
mov
in
jns
mov
sbb
cwtl
pop
fwait
push
inc
sub
xchg
mov
add
iret
mov
xor
xor
jl
scas
and
aas
sub
add
jne
loop
pop
into
cmp
xor
mov
push
cmp
lock
cs
mov
sub
jecxz
xor
cltd
dec
stc
movsb
addb
push
mov
mov
lods
jno
mov
or
bound
push
push
push
pop
cmpsb
jmp
sub
pop
cli
mov
rcl
sub
les
inc
cs
xor
shrl
cmpsb
sbb
pop
adc
sub
rcrb
incl
mov
pop
outsl
lea
pop
inc
daa
gs
in
mov
mov
aam
int
rolb
push
das
xchg
mov
loopne
add
sti
pop
mov
jo
aad
iret
xchg
out
xor
or
call
fildl
insl
clc
pop
in
stc
dec
jp
and
xchg
sbb
fsubs
adc
lods
out
push
lret
mov
rorb
adc
stc
popa
inc
mov
push
xchg
popf
mov
adc
aad
shlb
adc
pop
push
push
adc
int3
stos
mov
ljmp
adc
mov
mov
push
sbb
mov
jp
xchg
sbb
push
loopne
mov
mov
ret
jae
mov
sahf
sub
pushf
insl
pop
sbb
mov
mov
and
ret
in
xchg
fdiv
add
inc
icebp
fisubl
jle
xor
inc
lcall
lret
cli
mov
or
jbe
jl
leave
push
inc
ret
and
mov
jae
dec
dec
popa
test
xlat
push
stc
pop
jo
loop
cmp
test
lds
jp
pushf
sub
sbb
lock
ss
pop
sbb
jg
ret
lods
test
pop
push
dec
or
test
out
and
shlb
imul
push
mov
rcl
jmp
hlt
dec
faddl
push
mov
inc
insl
pop
mov
ss
mov
push
push
bound
ss
push
popa
lods
pop
repz
jno
sti
popl
lea
pop
in
inc
test
lret
fs
je
addb
and
call
mov
and
jl
stos
loopne
hlt
mov
add
ja
jne
mul
test
inc
les
adc
lock
jns
ljmp
int3
pushf
inc
push
or
fstp
sub
std
ja
leave
pop
stos
sbb
setge
roll
ds
mov
xchg
outsb
into
xchg
outsb
ja
dec
mov
cld
outsl
xchg
lcall
pop
sti
xor
ret
sahf
xor
insb
imul
out
xchg
or
mov
loop
movsl
add
das
in
xchg
test
jbe
in
adc
sbbl
ret
lea
pop
filds
push
mov
sbb
movsl
sub
lods
xor
mov
xor
push
fdivrs
pop
test
xchg
xor
lods
mov
lds
push
push
repnz
pusha
add
pop
xor
mov
jl
mov
jge
add
clc
aad
xor
les
hlt
in
je
dec
and
test
aam
std
testl
loop
xchg
test
mov
in
sar
add
dec
loopne
ret
push
sarl
mov
call
mov
mov
js
ficompl
out
cmp
sbb
mov
shrl
pop
adc
mov
fsts
cmc
test
dec
xor
cmpsb
fistpll
popa
loop
add
dec
inc
mov
in
mov
mov
ja
and
lea
jp
repnz
lret
loopne
and
iret
mov
or
xchg
lock
cwtl
pop
insl
lds
daa
call
and
cmp
cmp
rorb
mov
dec
push
adc
jnp
movsl
sbb
mulb
rdpmc
pop
mov
fwait
cs
xor
xchg
sub
mov
sbb
mov
jle
clc
sub
mov
jae
dec
add
fcoml
add
pop
mov
mov
and
xor
leave
jae
adc
push
cmp
scas
addr16
or
rcrl
mov
repz
js
shlb
neg
jno
pop
fcoms
and
dec
jp
adc
sbb
mov
push
aaa
mov
bound
adc
mov
jnp
dec
inc
inc
sbb
sarb
das
shll
int3
cld
loope
xchg
insb
fiadds
fidivrs
inc
sub
cmp
cs
aaa
int3
sbb
sub
cmp
xchg
jbe
sbb
lods
ficomps
sti
cld
adc
shr
cld
cmpsb
dec
std
in
xor
or
cmp
add
sub
or
push
stc
rcrl
cmpl
xlat
lret
std
insb
rcrl
shrl
xor
pusha
cmp
xchg
dec
lods
testl
xchg
inc
push
dec
pop
and
ss
push
fdivrs
push
and
pop
lods
fs
out
pusha
mov
pop
cmp
cli
jb
push
repnz
iret
fstps
dec
add
dec
jbe
scas
adc
sub
aam
neg
sbb
andb
mov
or
mov
shrl
das
mov
dec
cmp
leave
mov
pop
mov
rcr
or
andl
loop
lods
or
mov
add
mov
push
inc
jmp
addr16
or
mov
call
gs
pop
das
popa
je
loop
icebp
int
push
mulb
pop
gs
cmp
hlt
or
aas
dec
jp
icebp
gs
pop
imul
mov
mov
cwtl
stc
jne
addb
ret
repnz
orb
filds
das
xchg
xchg
std
cmpsb
push
jbe
push
add
adc
mov
rcrl
cmpsb
cmpsb
gs
mov
jle
inc
xchg
or
xchg
shlb
adc
xlat
imul
rcr
lds
push
dec
daa
popl
cmp
les
stc
adc
imull
mov
lret
xchg
into
jb
xchg
scas
bound
sub
out
dec
icebp
pop
mov
mov
les
xchg
pushf
dec
mov
mov
push
and
cmp
and
out
pop
fiadds
xor
test
add
fwait
stos
ret
jae
les
pop
mov
in
jne
addr16
sbb
lea
aas
xor
adc
lahf
aas
mov
mov
cwtl
mov
xchg
jle
call
subb
mov
movsl
and
xchg
daa
imul
lret
loop
fstpl
sub
push
jns
gs
sub
enter
mov
push
lahf
xor
sub
les
rcr
xor
and
stos
or
test
adcb
and
mulb
cmp
sbb
and
xor
cwtl
or
pushf
jno
jnp
mov
ret
repz
sbb
lods
pop
pop
add
lds
dec
adc
aad
lret
icebp
mov
xlat
outsb
movsl
push
sub
pushf
in
fsubr
cmpsl
aas
sub
mov
mov
mov
lods
jg
push
sarl
pop
inc
fstpl
repz
iret
xor
xor
sub
mov
jns
sti
pop
lcall
les
sarb
enter
jne
orl
je
lcall
pop
mov
loopne
xor
mov
out
jl
mov
pop
enter
add
xor
and
outsb
std
insb
gs
mov
les
mov
mov
and
ljmp
pop
in
psrld
fcmovne
outsb
push
mov
pop
bound
pop
les
inc
sub
add
dec
data16
fs
sbb
lock
pop
add
sbbl
jle
and
mov
hlt
pop
add
pop
xor
xorl
rorl
xor
iret
test
mov
sbb
pop
repnz
or
imul
sbb
test
ja
jp
icebp
jne
push
sub
aas
jecxz
push
les
movsb
jae
mov
ljmp
faddl
out
cmc
xchg
jle
mov
jns,pn
jle
data16
pop
pop
mov
sub
mov
jb
bswap
ljmp
test
add
push
iret
push
in
add
gs
pop
add
mov
push
fs
mov
add
or
jne
rep
xchg
xchg
hlt
cld
out
mov
neg
fdivrs
lret
inc
and
sub
fldlg2
cmpsb
and
cwtl
hlt
dec
out
push
loope
daa
inc
inc
pop
lea
mov
mov
jbe
mov
jbe
shrb
scas
add
popf
dec
inc
in
adc
out
repnz
lock
xorb
or
test
inc
les
out
cmp
and
mov
jp
nop
pop
xor
and
push
add
jmp
mov
inc
lods
push
ret
mov
add
aaa
xchg
jnp
sbb
inc
call
or
mov
insl
jge
std
mov
mov
xor
int
xchg
js
xor
shrb
decl
fnstcw
test
hlt
inc
mov
stc
mov
sub
and
dec
sbb
inc
mov
mov
xchg
mov
shl
popa
fdivp
push
out
mov
push
mov
lret
or
je
pusha
inc
inc
pop
and
arpl
into
movsl
xchg
mov
outsl
lret
or
lock
and
aaa
cmp
test
push
cmp
in
fcmovne
push
out
cmc
mov
sub
jge
aad
jb
imul
xor
lcall
lods
push
mov
inc
jne
push
inc
cmp
shrb
daa
xor
sbb
and
dec
jl
jmp
xchg
mov
add
cmpsb
inc
xchg
add
xchg
cmp
cmpb
jp
scas
sbb
hlt
jl
stc
in
jmp
cmp
jp
add
pop
ret
dec
mov
aas
sbb
push
sahf
push
dec
repz
leave
test
inc
test
cwtl
cmp
mov
inc
inc
cmpsl
pop
pop
hlt
pop
rorl
icebp
mov
daa
or
out
aam
cwtl
inc
dec
jl
dec
mov
dec
adc
insl
aad
adc
cmp
call
mov
lret
push
icebp
mov
lahf
mov
xor
out
add
inc
xor
in
pop
repnz
loopne
hlt
mov
ljmp
rcr
jl
xor
ret
ret
add
mov
pop
imul
cmp
outsl
leave
fdiv
dec
jno
bound
cmp
add
sub
in
pop
in
push
pop
mov
ljmp
cld
adc
sbb
pop
addb
jae
mov
sbb
mov
dec
dec
clc
pusha
mov
lcall
mov
add
fisubrl
cmpsb
or
xchg
shll
inc
pop
mov
xchg
into
ror
fistpl
mov
add
stos
arpl
inc
sub
pusha
jno
add
or
dec
push
or
out
or
xchg
xor
fstl
loopne
mov
and
loop
lods
pop
fnstsw
cmpsl
popf
mov
out
cmpb
or
fs
test
movsl
and
inc
inc
pop
inc
cmpsb
dec
mov
or
adc
push
cmp
push
mov
cmp
les
and
data16
in
dec
not
or
jns
movsb
mov
jle
jbe
stc
jne
jle
aam
mov
dec
xchg
pop
cmpsl
sbb
cld
push
push
and
iret
jne
sub
sub
movsl
jmp
imul
jg
sar
adc
mov
fsubs
push
and
adc
loop
orl
cmpb
jmp
ja
mov
xor
and
jmp
or
add
fistl
xchg
xor
scas
bound
dec
test
mov
mov
fwait
cmp
sarb
test
push
imul
inc
jecxz
xchg
lock
decb
xlat
mov
jo
out
or
cmc
nop
mov
outsl
test
out
sub
je
les
or
out
push
fdivl
bound
cmpsl
push
mov
fcoml
loop
jae
sub
jae
cmp
in
popa
cwtl
adc
and
pop
in
pop
je
push
loopne
enter
mov
adc
pop
push
in
movsl
mov
into
insl
inc
mov
adc
pushf
inc
sbb
dec
fs
call
mov
imul
sub
loop
pop
int3
adcw
jae
pushf
lods
jns
jle
aaa
cltd
sub
jb
inc
pop
addr16
cmp
lret
in
mov
enter
xchg
fdivs
or
sarb
outsl
jl
mov
sbb
dec
add
jns
mov
or
mov
rorl
and
pop
aaa
loope
movl
mov
and
push
mov
test
hlt
dec
add
imull
ret
jmp
fwait
sahf
das
mov
out
aad
sub
fwait
xorl
fildll
lods
hlt
jecxz
out
inc
cmc
popa
into
lret
mov
sbb
bound
xor
push
inc
pop
and
xor
pop
sub
fildll
dec
popf
leave
into
push
pop
xchg
sub
je
jmp
leave
leave
fnsave
and
jmp
and
popf
out
pop
push
push
dec
cmp
icebp
arpl
cs
fs
ja
add
jmp
mov
pop
stos
cltd
cmp
pusha
jnp
xchg
and
inc
inc
not
lret
pop
mov
mov
out
jns
mov
push
push
and
cmp
pop
rolb
pop
pop
int3
loope
xchg
pop
cmc
orb
xchg
add
cltd
or
inc
ret
or
xor
and
sbb
nop
jmp
fists
les
stos
xchg
shrl
test
lahf
push
in
pushf
icebp
mov
jmp
mov
jmp
cmp
sarl
scas
dec
fidivs
mov
dec
scas
mov
jle
movsl
mov
mov
out
cmpsl
sahf
sbb
int3
cmp
inc
and
dec
lds
and
xor
sbb
popf
lods
push
push
xchg
ficomps
out
mov
jo
and
dec
sarb
pop
push
mov
xor
adc
push
lds
add
xor
mov
mov
test
cmc
inc
push
daa
in
pop
popf
mov
xchg
pusha
std
cmp
push
repnz
xchg
shl
add
xchg
cmpsl
enter
aaa
pop
sub
data16
pop
fwait
pop
cmp
out
in
cmp
pop
pushf
adc
aaa
jle
inc
mov
jb
roll
lods
das
sub
fadd
cvttps2pi
jg
xchg
fbld
and
push
mov
arpl
jmp
jg
pop
ljmp
and
adc
mov
sub
mov
lea
sahf
inc
xchg
or
xchg
xchg
addr16
fbstp
filds
les
sbb
and
jae
cmp
cmc
or
and
imul
sub
mov
push
imul
std
push
xor
pusha
and
mov
or
in
jle
popf
sub
ret
aam
sub
add
xchg
pop
pop
insl
pusha
stc
mov
pushf
add
mov
cmp
xchg
cli
push
imul
andb
int3
out
pop
call
cmc
cld
mov
cmpl
jb
fistps
or
sub
jo
test
rclb
mov
fsubl
cs
lahf
lods
scas
inc
add
icebp
int
push
pop
xor
test
and
leave
add
cmpl
dec
add
out
fs
mov
jns
push
pop
jle
jecxz
jg
cmpsb
stc
dec
cmp
jne
add
mov
mov
push
dec
mov
xchg
add
dec
push
xor
fldenv
repnz
mov
jb
lock
mov
leave
in
add
xor
neg
repz
fsubrs
adc
dec
or
bound
fistps
jae
or
mov
int3
movsl
in
mov
jmp
adc
int3
lods
shl
imul
jmp
popf
int3
push
sbb
mov
mov
push
insl
xchg
repz
xchg
loope
and
in
lea
enter
pop
orb
fiaddl
xor
mov
dec
in
lds
icebp
movsl
mov
sbb
ficoms
inc
ret
inc
inc
xor
inc
pop
ljmp
test
aam
pop
aas
mov
mov
mov
and
imul
dec
and
test
mov
rcr
into
jmp
loopne
pop
mov
sahf
popa
test
mov
mov
in
pop
les
xchg
adc
and
sub
mov
jb
push
push
xchg
inc
mov
test
lds
lret
mov
mov
adc
pop
pushl
push
lret
or
jg
ljmp
daa
bound
cmp
inc
insl
sbb
rolb
cmp
jb
xchg
cltd
xchg
cmp
jg
stos
shll
movsb
adc
fistpll
add
pop
mov
cmp
xchg
sahf
jecxz
inc
add
add
lahf
jl
inc
inc
jo
pop
in
mov
adc
cmp
inc
mov
fmull
xor
into
xchg
popa
push
in
test
lods
cs
popf
in
sub
dec
mov
hlt
fxtract
fsubs
std
jo
pusha
jg
inc
mov
ljmp
adc
aam
pop
cmp
pushf
aad
push
aas
jns
xchg
mov
into
sbb
pusha
cld
inc
jbe
fidivrl
int
and
jns
fcmove
xor
inc
mov
scas
xorl
or
sbb
mov
mov
into
ss
lods
pop
mov
lahf
inc
test
fsts
inc
pop
dec
mov
int
hlt
xchg
js
jmp
pop
cmp
sbb
mov
or
sub
rorl
mov
pop
and
sbb
xlat
or
je
xor
add
jo
mov
mov
xor
fmull
imul
loop
aad
jp
push
repnz
push
lds
inc
xchg
adc
push
pusha
push
sbb
jno
jns
sbb
jbe
xchg
mull
std
test
push
test
in
xchg
sub
daa
push
shll
call
sbb
fs
leave
arpl
xorl
and
xchg
test
cmp
pushf
push
pop
add
cwtl
lds
or
jae
cmp
lea
das
fisubrl
out
iret
xchg
adc
mov
xchg
pop
push
xchg
addb
leave
cmp
mov
dec
clc
or
adc
out
pop
lss
pop
xor
cmpsl
sbb
insl
movsl
into
loope
in
push
or
add
jbe
ds
cmc
outsl
xchg
cld
sbb
fdivrs
lahf
iret
sbb
popa
xor
in
sub
cmp
jnp
jae
mov
mov
mov
ffreep
and
pop
lock
sbb
sbb
cs
or
jp
mov
sbb
stos
test
jb
xor
incb
fimull
outsl
cmpsl
mov
add
add
inc
mov
push
cwtl
add
fsubl
sbb
out
faddl
fs
daa
xor
add
adc
in
jmp
mov
test
mov
cmp
jmp
mov
leave
mov
or
lcall
nop
sub
push
bswap
cs
mov
movsl
loope
pusha
stos
mov
xlat
hlt
dec
pop
jmp
sar
xor
idiv
mov
xchg
into
enter
mov
imul
fistl
cmc
stos
xor
outsb
out
inc
andl
jne
dec
bound
mov
cmpsb
insl
jns
push
xchg
aad
mov
or
dec
fdivrl
data16
dec
or
mov
cltd
repz
inc
stc
out
loopne
std
mov
ret
and
pop
mov
and
adc
js
pop
add
or
movl
test
hlt
icebp
cmpsl
add
mov
sub
nop
jbe
push
stc
leave
add
push
stos
pop
popf
sub
inc
inc
adc
add
xchg
sub
push
and
orl
clc
fcmovu
push
xor
mov
cmpsl
ja
xchg
dec
jbe
xor
lcall
imul
sti
lret
sbb
mov
xchg
cmc
ljmp
add
aas
pop
orb
fistpl
xchg
jle
lcall
xlat
pop
sbb
je
lret
xlat
les
push
mov
sbb
arpl
xchg
xchg
cmpsb
test
adc
push
fmull
shr
cmpsb
and
push
mov
xor
leave
aad
lods
add
ja
inc
inc
ds
call
leave
xchg
inc
inc
cltd
add
mov
repnz
adc
xchg
mov
scas
dec
push
jo
mov
mov
sub
nop
jecxz
adc
out
arpl
movswl
bound
jbe
adc
bnd
ret
rol
lcall
int3
stos
xor
es
cwtl
mov
mov
shlb
repnz
rcll
lea
call
xor
aaa
sub
inc
lahf
lds
sub
enter
push
fwait
jle
cmpsb
cld
cmpsb
dec
mov
insl
cmpsl
xchg
mov
xchg
dec
xchg
cmp
add
or
xchg
sub
or
mov
in
call
mov
out
or
movb
sti
into
sahf
mov
scas
fldt
mov
sub
loopne
xor
xor
arpl
sbb
mov
repnz
cmp
fxch
dec
iret
arpl
xchg
test
sub
mov
sbb
lds
pop
xor
daa
or
popf
push
cmpsb
xor
fistpll
imul
cmp
jbe
adc
div
pop
jno
lods
in
mov
iret
cwtl
cmc
fisttpl
repz
or
dec
or
dec
rcll
into
cwtl
lea
fdivl
mov
sub
enter
popf
gs
mov
fmuls
xchg
loope
add
dec
std
or
adc
cld
pushf
lock
mov
pop
mov
and
push
loop
add
popf
mov
stc
movb
shlb
adc
scas
inc
pop
adc
iret
inc
fiaddl
in
sub
xor
pusha
cld
insb
cmp
cmp
in
jmp
negb
or
cs
push
stc
pop
dec
call
pop
gs
std
mov
jne
mov
adc
fnstcw
add
xchg
jmp
ljmp
inc
pusha
pop
pop
les
adcb
or
aam
gs
cmp
insl
lret
jbe
sub
stos
ficoml
sub
call
lock
aad
lods
fdivrs
push
sbb
or
mov
std
lahf
js
pop
stc
xorb
out
cmpsl
sub
push
mov
sbb
adc
sbb
pop
inc
pop
mov
movsl
mov
ljmp
in
ljmp
fstps
lods
fidivl
inc
jmp
xchg
stos
outsb
lods
push
jmp
cld
ds
scas
push
in
test
sti
dec
mov
test
push
mov
push
or
push
pop
fmuls
std
jle
jmp
xor
sub
xchg
mov
pop
call
xlat
loope
cmp
cmc
push
push
popa
arpl
int3
icebp
stos
dec
pop
adc
data16
push
xor
dec
sbb
sbb
cltd
lahf
push
xchg
xchg
std
sbb
fildll
js
cmpsb
mov
es
inc
sarb
scas
pushf
adc
jo
dec
dec
push
sarb
daa
inc
popf
mov
dec
test
add
pop
pop
xchg
mov
inc
jge
xlat
dec
mov
mov
mov
mov
mov
mov
pushf
pop
pop
ds
jne
xlat
arpl
pop
sbb
aas
push
push
inc
lods
pop
push
dec
ffreep
pusha
test
jo
es
test
fcoml
xchg
cmp
or
dec
xchg
push
xchg
imul
lret
inc
int3
std
push
outsl
insl
dec
sbb
push
imul
rcrl
les
inc
shll
cli
sub
cmp
vpaddusb
add
das
hlt
ret
out
lods
xlat
std
fadds
cltd
ja
mov
sbb
jle
loop
aad
shrl
or
jno
or
push
pop
insb
mov
mov
jno
cmpsl
xchg
mov
jge
pop
xor
enter
popl
inc
mov
and
mov
pop
mov
pop
inc
inc
xlat
test
lods
out
shlb
sbb
dec
imul
or
add
das
pop
outsb
cmp
negb
inc
fisttpll
jmp
mov
dec
dec
sbb
xchg
xchg
inc
repnz
xchg
xchg
shll
inc
inc
inc
push
cmp
dec
jns
cmc
sti
jnp
mov
out
roll
inc
or
xorl
inc
mov
hlt
es
sahf
add
mov
cli
and
stos
xlat
pop
les
mov
inc
pusha
xlat
mov
cmp
cmp
aas
and
mov
push
sbb
and
adc
mov
popf
es
add
dec
popf
je
incl
loop
mov
xchg
mov
lcall
sbb
jge
ljmp
add
adcb
jecxz
rcrl
imul
out
scas
jmp
pop
mov
mov
mov
push
xchg
pusha
lea
mov
shlb
subb
sub
jnp
hlt
lret
call
out
inc
fs
jo
js
inc
pop
movsb
dec
sbbl
add
test
cmp
mov
in
aad
pop
cmp
sbb
mov
ficompl
pop
add
cmc
cmpl
and
cmp
jmp
dec
test
insb
scas
outsl
adc
loopne
mov
or
cmp
pop
cmp
add
and
imul
jae
fidivrs
stos
pusha
pop
fs
pushf
sbb
inc
sbb
and
dec
dec
addb
inc
xor
gs
jo
dec
dec
mov
mov
pop
jl
adc
aam
push
inc
mov
pusha
mov
or
mov
dec
data16
roll
arpl
xchg
pop
arpl
pop
gs
and
inc
loope
mov
inc
mov
push
sub
popa
dec
clc
cmp
loop
dec
sub
adc
cmp
in
out
xchg
inc
mov
lods
xor
aas
sbb
mov
and
mov
enter
imul
push
xchg
es
xor
cs
push
or
xor
jb
jb
sbb
dec
jg
adc
rcll
jns
adc
fnstsw
pop
xor
loopne
out
jg
js
or
lods
cwtl
js
jmp
sbb
stos
mov
sahf
inc
mov
loopne
xor
pushl
xchg
adc
adc
xchg
scas
fldl
sub
addr16
cmp
aaa
or
pop
jl
stos
dec
loop
inc
cs
fadd
jb
cli
mov
jecxz
mov
cmp
fidivl
add
repz
stos
jl
cs
repz
add
dec
sub
xor
mov
fdivp
hlt
call
mov
jo
xor
ja
mov
cmpb
lret
add
xchg
pop
stc
jp
decb
pop
scas
adc
sub
xchg
in
stc
pop
out
addr16
test
push
mov
scas
cmp
outsl
imul
les
mov
cmp
jnp
mov
inc
inc
inc
and
jecxz
sub
jnp
enter
xor
jno
movsl
rcr
cmpsl
loopne
cmp
popf
test
pusha
dec
add
and
push
pusha
clc
ss
testb
bound
lret
arpl
sbb
adc
test
inc
mov
mov
sbb
in
sbb
push
push
inc
and
xor
faddl
adc
in
ret
loop
pop
xchg
lods
xorl
int
rcl
xchg
cmp
js
dec
jp
mov
mov
das
sub
daa
adc
and
mov
inc
push
test
dec
addr16
push
jmp
mov
adc
push
and
les
jle
pop
xchg
and
test
push
push
test
lock
mov
push
pop
inc
shll
les
dec
outsb
xor
jo
pop
push
shll
inc
call
xchg
stos
inc
xchg
push
push
xchg
lret
aad
out
add
sub
xchg
inc
nop
test
cmpsb
mov
test
and
int
lds
lods
add
sbb
lcall
mov
movsl
bound
lcall
mov
lcall
imul
xlat
pop
cmovs
insl
pop
dec
mov
lcall
pop
ja
shl
movsl
jge
imul
into
incl
mov
sub
add
cmp
or
outsb
mov
popf
push
rorl
ficomps
mov
je
fstps
push
xlat
xchg
mov
fxch
andl
pop
mov
push
arpl
imulb
int3
pop
xchg
loopne
fldl
jns
bound
ja
mov
or
sub
fisttpl
aad
inc
or
nop
fdivrl
adc
dec
out
add
dec
push
testl
rcrl
int3
adcl
push
fucomp
outsb
cwtl
cmp
les
rcrl
gs
aam
enter
lahf
ds
jbe
sub
xor
xor
jp
lds
cmp
dec
stos
lea
loop
pop
bswap
pop
mov
add
outsl
mov
rcl
loope
arpl
ret
daa
arpl
inc
add
lcall
adc
adc
ljmp
shlb
mov
cmpsl
test
das
andl
push
push
lcall
sti
cmp
inc
mov
lods
inc
scas
mov
pusha
dec
jle
push
xchg
jae
push
test
mov
dec
nop
pop
adc
test
stc
mov
ljmp
add
fisubrs
fs
add
pushf
xchg
xchg
mov
sub
js
pop
cmp
fsubrs
sbb
mov
test
out
nop
push
les
inc
repz
sbb
mov
mov
pop
dec
inc
xor
insl
rol
fisubl
jmp
insl
loopne
jno
inc
stc
mov
xor
fdivl
insb
es
mov
xor
enter
enter
out
popf
jecxz
xor
outsb
subl
mov
jmp
je
icebp
or
xor
stos
sub
inc
and
popa
add
fs
imul
jno
xchg
outsb
sub
xchg
or
xchg
inc
pop
imul
mov
adc
mov
test
test
fildl
pop
rclb
loop
xchg
cmovns
not
xchg
shrb
jo
aas
adc
clc
xchg
pop
cmc
pop
pop
add
js
loopne
sbb
sub
enter
icebp
jmp
xchg
orb
mov
ldmxcsr
sub
into
mov
inc
jg
mov
dec
insb
ljmp
xchg
loope
popf
mov
repz
roll
ret
jg
jl
rcrl
add
sti
push
into
xor
xchg
mov
sub
arpl
clc
movsl
outsl
cwtl
out
negl
cmp
sub
adc
xchg
fstpt
test
mov
ds
notb
push
push
cs
es
enter
lcall
nop
pop
shlb
adc
adc
lret
clc
addb
mov
mov
xchg
ror
inc
iret
ja
rorl
into
test
cmp
int
test
stos
imul
test
js
jae
data16
sbb
addr16
pusha
pushf
cwtl
jns
movsb
stos
fwait
int
jb
sbb
sbb
pop
cmpsb
lods
inc
sbb
movsb
bound
dec
cmp
xchg
ret
fcoml
push
lcall
mov
in
insb
in
imul
xor
loope
sbb
mov
pop
cmp
enter
lea
xchg
fldenv
negb
and
iret
sti
xchg
jp
fwait
or
hlt
jno
dec
mov
loopne
inc
cmpsb
icebp
cmp
dec
lea
dec
push
movsb
adc
mov
add
jno
xchg
icebp
insb
in
dec
mov
pop
jno
mov
xor
and
mov
mov
pop
and
arpl
orb
negl
push
pop
adc
and
jmp
xor
push
xorb
jnp
sbb
bound
adc
int3
cmp
push
adc
sbb
xchg
lods
mov
mov
mov
jmp
add
xchg
mov
dec
test
leave
sbb
ror
mov
or
or
data16
fstps
mov
outsl
lds
xchg
cmp
adc
or
xchg
ja
xchg
outsl
sti
out
ss
loope
shll
in
dec
mov
pusha
xchg
rorb
loopne
push
xchg
jge
aam
pop
jmp
xchg
cli
and
dec
cmp
mov
loopne
cmc
jle
inc
dec
adc
dec
lret
leave
fisubl
jae
mov
inc
jno
lods
cmp
xor
xlat
add
fisttps
jl
out
lods
pop
popf
fidivrs
lods
dec
jp
push
cmp
aam
aam
jmp
pop
dec
loop
rclb
stos
mov
dec
adc
cwtl
das
inc
loopne
adc
adc
scas
cmpsl
push
jnp
mov
dec
dec
sbb
mov
jbe
inc
add
and
push
in
call
enter
loopne
push
cmp
lea
addb
out
jmp
nop
jns
ficoml
inc
fs
xchg
lea
es
jae
add
sti
push
arpl
sbb
jno
fnstenv
imul
push
ret
test
loop
push
sub
lods
cwtl
inc
mov
jne
inc
sub
fsubrp
inc
ss
test
rcrl
sarb
into
in
sahf
pop
test
subl
in
push
sbb
mov
jo
sbb
outsb
rcrb
fidivl
aad
sbb
arpl
mov
adc
pusha
int3
pop
ret
xor
lds
and
and
fcmovnu
aaa
int
jl
mov
out
xor
add
cli
and
lods
jle
insl
icebp
mov
push
cli
mov
iret
adc
or
and
dec
add
mov
add
xor
rcrb
lods
pop
je,pn
mov
outsb
jle
dec
out
mov
pop
gs
sub
cmpsl
js
dec
jmp
add
lea
cli
arpl
add
fisttpll
mov
adc
data16
lock
and
pop
and
repnz
push
std
inc
adc
movsb
jge
mov
scas
jp
incb
pop
aam
mov
rcll
pop
xlat
enter
xlat
sti
dec
das
cltd
insl
lahf
jbe
imul
out
inc
add
add
rcrb
mov
into
pop
inc
dec
jo
xchg
fildll
outsb
rcl
daa
icebp
sahf
out
cltd
mov
int3
cltd
and
cmp
push
mov
xchg
xchg
divb
inc
push
jecxz
call
cld
fxch
or
add
push
jmp
pop
add
pop
rclb
mov
dec
mov
mov
xor
iret
mov
jmp
inc
jb
fnstcw
movsb
clc
mov
push
leave
or
mov
into
imul
mov
std
clc
push
pop
in
jp
dec
mov
add
push
mov
int3
fmulp
rcll
in
xor
fdivs
pop
cmp
add
xor
sub
push
and
fwait
imul
pop
push
imul
arpl
pop
scas
dec
dec
jecxz
clc
pop
hlt
fwait
jb
out
pop
mov
sbb
mov
sbb
rorb
das
mov
sub
dec
inc
pop
cld
mov
or
and
lea
sub
pop
repnz
out
js
lods
ret
xchg
sahf
clc
in
rcrb
push
sub
es
out
and
xchg
outsl
sbb
lock
cld
push
xor
push
ret
dec
int3
cmp
pop
jle
je
andl
scas
and
pop
mov
add
or
les
sti
aas
leave
dec
repz
adcb
inc
sti
nop
push
inc
cmp
xorb
pushf
dec
push
ljmp
add
push
stos
jne
iret
fstpl
in
popa
and
loope
xchg
rep
adc
insb
in
sahf
pop
shlb
mov
aam
mov
lret
rclb
sub
bound
notb
or
jmp
mov
pop
xor
cmc
xchg
mov
push
jbe
enter
mov
inc
scas
leave
loopne
xor
out
cmp
pop
mov
push
adc
xorb
cld
cmp
sbb
dec
aaa
lds
ret
test
lcall
pushf
add
mov
les
and
lcall
push
lock
fsubrs
loopne
mov
xorb
jmp
bound
setle
sub
xor
lcall
push
adc
push
push
sub
xchg
incl
stos
loop
in
xchg
loopne
mov
mov
cmp
dec
sub
fsubrs
dec
jb
std
int
aas
rcrl
sbb
push
mov
inc
out
shlb
inc
xorl
jle
mov
int
pop
push
aaa
cmpsb
cmpsl
ja
pop
mov
adc
popl
push
xor
stc
adc
fdivs
jmp
or
test
fildl
xchg
mov
data16
push
in
cmp
jge
mov
cmp
xor
cmpsl
dec
js
pop
stos
inc
popa
clc
cld
dec
out
decl
dec
mov
cmpsl
push
pop
ljmp
stos
sbb
nop
popl
sub
int3
mov
adc
fnstcw
inc
scas
jp
adc
in
testl
in
pop
mov
aas
lcall
scas
mov
out
outsl
sub
mov
jge
xor
xchg
aam
loop
pushf
or
rcrb
pop
sbb
pop
xorl
stc
lret
out
addr16
xor
push
mov
aam
outsb
pushf
mov
dec
loop
iret
add
inc
es
mov
iret
cs
adc
cmc
mov
cmpsl
fisubrl
arpl
repz
rorl
imul
das
mov
notl
xchg
rcl
and
cmp
jo
pop
sbbb
jle
aad
imul
fbld
push
pop
outsl
mov
inc
jo
test
adc
inc
fistl
pop
fwait
test
je
orl
dec
push
ret
jp
xor
sti
dec
popf
bnd
xlat
dec
mov
sarb
xor
imul
out
loop
fsubrs
adc
icebp
jge
shl
rcrb
jecxz
jmp
push
jae
psrlq
mov
sub
adc
push
aaa
nop
cli
push
or
jp
dec
sub
outsl
jmp
mov
mov
inc
fucomip
dec
sbb
pop
lods
mov
cmp
jnp
jnp
dec
or
cmp
pop
inc
popa
jmp
sub
mov
pop
inc
insl
inc
pop
fmuls
push
add
push
jbe
pop
fcmovnu
xor
jns
jl
ret
sub
mov
dec
push
psllq
push
pushw
ret
xchg
jp
push
lcall
or
cmp
ret
ds
add
addb
xlat
mov
mov
add
addr16
sbb
mov
lcall
ja
in
aam
sub
sbb
adc
in
cmp
stc
in
sub
je
in
inc
lcall
lea
inc
out
sahf
ret
pop
push
das
dec
cmp
and
jne
xchg
call
pop
sub
ljmp
aaa
fimull
ficompl
sub
imul
jp
stos
adc
scas
into
popa
pop
rorb
cli
jl
cmp
aam
jecxz
fisubs
fists
pop
insb
mov
jo
js
sbb
mov
push
lods
gs
loop
and
jp
out
scas
push
jle
bound
xchg
xor
mov
lods
loope
inc
dec
mov
test
add
add
lock
daa
ds
popa
stc
xlat
lods
push
call
insb
inc
rcr
lods
jmp
ficoml
push
sub
sbb
dec
mov
cwtl
or
and
dec
pop
jge
test
pop
ret
jb
sbb
addr16
dec
arpl
in
js
addb
xor
adc
pop
jp
outsb
cltd
pop
lcall
movsb
pop
out
in
xor
rcl
sub
sarl
jne
daa
sahf
roll
and
xor
or
leave
gs
push
cmpsl
fs
cmpsl
lret
int
ds
stos
jbe
push
push
jle
push
insl
jmp
jne
les
cmpsb
dec
fsubrl
dec
repnz
gs
fnstenv
jne
and
push
xchg
imul
pop
sub
sbb
lret
sub
stos
push
fldt
cmp
in
repz
lods
pusha
sub
cld
sub
test
xchg
cmp
jg
adc
cwtl
jle
mov
add
lds
mov
int
popf
adc
movsl
mov
and
or
mov
fisubrl
and
insb
les
or
pop
push
add
mov
iret
movsl
xchg
mov
scas
unpckhps
fcmovu
subb
push
mov
mov
add
test
add
js
push
mov
lock
sbb
xor
mov
sarl
xlat
test
push
xchg
fcomps
repz
push
dec
mov
mov
adc
pop
nop
jb
push
adc
xchg
pushf
mov
push
jmp
cmp
ror
sbb
sbb
xorl
mov
clc
pop
push
loope
lea
and
xchg
stos
scas
js
xlat
mov
movl
jne
cld
test
mov
ja
imul
mov
inc
leave
xchg
xchg
or
ret
sbb
sbb
jae
pop
dec
lahf
je
dec
ja
mov
inc
es
jnp
testl
inc
orb
data16
repnz
fnstcw
sbb
aaa
adc
cli
dec
test
pop
ret
and
emms
add
cmpsb
fidivrs
cwtl
inc
sbb
push
mov
shlb
dec
in
jae
scas
mov
fwait
aaa
icebp
xchg
dec
aaa
mov
jecxz
mov
dec
stos
and
add
add
sarb
dec
insb
mov
sub
es
mov
pop
sarl
shl
int3
jo
dec
pusha
pop
popa
jo
cmp
in
cmp
pop
pop
sub
test
lds
iret
lret
loopne
inc
jb
mov
mov
push
in
cmp
addb
shlb
jnp
fstl
pop
cmp
popf
out
bound
xchg
push
mov
push
loope
xor
dec
movsb
xchg
into
lds
sub
lods
xchg
loopne
cmpsb
adc
mov
or
xchg
pop
insb
mov
fs
iret
pop
ss
adc
xchg
addr16
dec
adc
fptan
je,pn
fldenv
popf
jle
cmpsl
nop
jno
mov
iret
jge
outsl
into
and
sub
inc
jp
cwtl
inc
loope
lahf
repz
daa
lods
repz
inc
dec
mov
xchg
stos
pushf
fnstsw
xor
inc
or
add
xchg
loop
imul
repnz
mov
sbb
mov
mov
test
push
lret
jns
rorl
subl
cmp
imul
imulb
fdivrs
test
sbb
loope
out
push
cmpsl
ljmp
dec
adc
not
mov
jle
cld
mov
popf
cmp
xor
out
cmp
mov
mov
xchg
inc
clc
xor
mov
enter
das
fdivrs
imul
js
jb,pn
scas
sahf
clc
or
cmpsl
scas
pop
pop
mov
popa
sbb
mov
loopne
das
cmp
mov
stos
push
ret
pop
push
in
mov
and
filds
mov
and
arpl
xchg
adc
mov
jecxz
jno
negb
sub
cld
lods
sub
popf
sub
int
mov
test
stos
mov
sbb
jae
or
je
fs
orb
push
push
pop
inc
or
mov
mov
cmc
and
push
out
fs
jmp
or
lahf
adc
adcb
gs
lahf
jl
jle
sbb
push
and
in
mov
push
lds
cmpsb
popf
dec
loope
mov
pop
inc
mov
aaa
add
shr
push
out
xor
arpl
sbb
lcall
jnp
jle
mov
sub
sub
pop
vdivpd
aam
inc
adc
repz
shrb
add
mov
mov
aas
lods
xor
dec
sar
aas
lcallw
out
stos
pusha
cltd
out
setnp
iret
arpl
fisttpl
mov
mov
fstpt
out
cld
sub
cwtl
and
adc
cmp
xchg
jb
xchg
cs
aam
cmp
mov
imul
lahf
movsl
arpl
sbb
inc
sub
add
aas
pop
pop
add
idivb
ljmp
scas
jbe
popf
insl
in
push
popf
cmc
mov
iret
lret
inc
push
or
jle
iret
shrl
out
or
stos
jnp
jge
clc
add
jne
mov
sub
mov
addr16
icebp
jno
cmpsb
fcoml
xor
mov
xchg
xchg
ss
jecxz
rorl
iret
xchg
addr16
inc
dec
aad
fwait
sub
pushf
sub
mov
jo
fsubs
fcmovnb
add
sbb
mov
ret
rcl
cs
pop
xor
xchg
outsl
in
js
add
pop
nop
iret
add
jae
push
mov
nop
int
dec
sbb
test
add
mov
test
mov
jg
jae
ss
fiadds
add
popa
dec
push
cs
add
pop
in
pushf
out
and
out
fstpt
mov
sub
dec
xchg
lcall
lds
outsb
pop
sbb
cmp
push
inc
xorb
out
ret
xor
lret
in
repz
sbb
iret
adc
shlb
fucomp
pop
shll
or
or
xchg
dec
jbe
push
fimuls
repnz
jae
sub
aas
call
jg
sarl
sbb
mov
scas
das
js
loop
bound
jmp
xor
mov
stos
gs
pushf
popa
cmpsl
jecxz
scas
hlt
cmp
push
cmpsb
fistpl
adc
leave
mov
and
xor
xor
and
mulb
fwait
sub
jo
cmpsl
push
ljmp
cmpsb
repnz
lods
stc
int3
scas
cmpsb
out
lods
xchg
outsb
es
out
jno
pop
mov
scas
add
int3
mov
mov
inc
stos
push
mov
mov
and
pop
test
inc
addr16
dec
cmp
stos
mov
and
push
push
out
lods
pop
ss
adc
out
push
push
mov
inc
out
mov
sub
cmp
popa
push
lahf
fidivs
push
stos
shll
mov
mov
loopne
sti
repz
fnstsw
add
and
movsl
dec
adc
xor
xor
fwait
sub
das
add
sbb
mov
jmp
mov
dec
dec
or
pop
movsb
jge
mov
ret
lds
xor
and
mov
xchg
mov
shll
iret
mov
sub
mov
fdivrs
out
cs
popa
ja
add
jge
jnp
cltd
xchg
mov
lahf
and
mov
out
test
lods
jmp
dec
xchg
out
sub
add
cmpb
in
test
fidivrs
and
movsl
pop
cld
test
dec
or
hlt
push
lods
cmp
cmp
dec
test
fsubl
rcrl
xchg
fcomps
sbb
xchg
call
sti
cmp
je
mov
ss
add
add
aas
fisttps
xchg
and
stos
addr16
mov
jmp
daa
push
dec
sub
int
xchg
imul
arpl
mov
cmpsl
test
lds
shr
out
mov
int3
fs
sub
and
sti
push
sub
cli
add
out
sbb
int
fsubrl
jge
or
push
loopne
cmp
jns
sub
cs
jl
cmpb
xor
push
addb
insl
popf
sbb
outsb
lahf
popf
loopne
shrl
cmp
addl
divl
clc
movsl
bound
inc
jmp
push
rcl
leave
sub
xchg
cmp
movsb
ja
mov
aad
pop
dec
xchg
sbb
and
push
arpl
push
push
mov
xchg
loop
push
jno
adc
outsl
pushf
pop
dec
push
sub
push
lock
dec
lret
in
shlb
xchg
cmp
jo
jno
mov
pop
xor
aaa
lea
push
add
mov
add
mov
cwtl
scas
mov
xor
xchg
dec
scas
push
inc
cmpsb
mov
xor
shr
push
std
push
sub
adc
mov
out
pop
mov
xchg
add
jmp
xor
pop
imul
shr
add
inc
inc
xor
js
stos
push
xchg
adc
aad
dec
cmp
pop
ret
adc
push
mov
lahf
cs
inc
mov
pop
aaa
cmp
inc
mov
ljmp
jne
pusha
xchg
or
xchg
add
jmp
inc
pop
add
inc
stos
add
shrb
js
ret
ja
pop
inc
data16
mov
je
bound
lock
leave
pop
cmp
mov
mov
not
jns
xor
jne
cli
mov
ffree
mov
test
and
aam
mov
and
lcall
pop
icebp
sbb
loopne
add
jecxz
push
cwtl
pop
mov
cld
jno
pop
or
jno
push
ffreep
mov
pop
les
filds
repnz
and
mov
mov
sub
arpl
or
out
aas
nop
mov
aad
push
sarb
arpl
and
adc
xor
and
jo
mov
mov
xlat
dec
test
subb
inc
fdivrl
add
mov
mov
sbb
scas
imul
rorb
insl
jp
lea
or
dec
add
xchg
push
add
mov
outsb
xlat
push
xchg
and
jo
push
sub
adc
rcrb
push
add
or
xlat
mov
xor
mov
jb
or
pop
std
inc
pusha
push
pushf
push
testb
and
lds
mov
dec
sbb
test
pusha
add
xchg
lea
dec
lret
cmp
xlat
insl
scas
and
ss
sbb
sarl
je
pop
cmp
jno
jmp
das
mov
mov
aas
test
scas
sti
out
int3
cmpsb
lods
roll
and
jne
call
stos
aas
pushf
cmp
lret
inc
push
lds
in
sbb
or
jecxz
testb
inc
adc
sub
xor
dec
ret
negl
in
mov
jle
cmp
xor
fwait
cmp
movb
push
mov
lcall
mov
arpl
lret
out
arpl
fstpt
cmp
mov
test
cmp
xor
or
out
or
cltd
xchg
test
add
jmp
and
mul
xchg
pop
orb
push
lock
dec
imul
bound
lcall
inc
mov
and
shrb
or
push
mov
mul
xchg
data16
std
mov
enter
adc
xchg
dec
inc
push
xlat
push
and
xor
ljmp
test
in
fisubl
mov
fdivrl
fisttpl
cmpsb
jne
or
pusha
fld
adc
dec
repz
jge
fidivl
fdivrl
hlt
jl
mov
push
sub
push
sarl
insl
dec
mov
jg
test
nop
cmp
scas
icebp
cmpsl
and
cmpl
fisubs
and
shl
stos
dec
pop
cmp
in
iret
or
fwait
ss
ret
mov
bound
les
jecxz
xchg
ja
dec
les
sub
mov
imul
cmc
pop
push
sahf
aaa
push
pop
sub
dec
leave
dec
mov
push
pushf
or
sbb
mov
sbbl
add
lret
sbb
mov
push
xor
enter
push
addr16
pop
mov
push
push
andl
sbb
daa
sub
pop
insb
push
out
add
sbb
mov
data16
fists
cs
in
pusha
lds
mov
cmp
mov
xor
sahf
inc
adc
pop
cmp
push
loop
adcb
sub
or
pop
xchg
pop
movsb
icebp
cmp
stc
dec
or
fs
pop
pop
cmp
and
xchg
lret
add
xchg
sub
call
mov
test
adc
pop
or
sub
jbe
cmpsb
or
lods
pusha
jg
dec
cmp
mov
or
cmp
out
jb
sub
jg
jp
in
mov
fsubl
mov
pop
cmp
push
dec
push
jnp
cwtl
add
enter
xor
cmp
mov
jo
std
xchg
test
cmpsb
or
add
hlt
ret
fdivr
jno
push
lcall
sahf
cwtl
push
aas
in
push
mov
sbb
or
int3
xchg
mov
push
aaa
push
mov
std
xor
mov
iret
aaa
ret
outsl
rolb
cmpsb
inc
cmp
or
or
pop
xchg
inc
push
js
ret
xchg
std
in
push
filds
cmpl
cltd
lods
cltd
mov
mov
jle
pop
jle
iret
inc
xor
mov
push
je
das
xlat
sahf
cmc
icebp
mov
dec
aas
sbb
fs
mov
lret
and
jno
leave
aam
pop
xor
or
dec
xor
mov
lcall
pop
mov
pop
mov
push
mov
adc
stos
loop
mov
xchg
int3
xchg
add
or
enter
push
mov
icebp
outsb
in
push
lods
insb
daa
addr16
in
lret
sub
loopne
xor
cmc
cwtl
mov
mov
xchg
cmp
cmp
inc
inc
mov
shlb
stos
push
dec
mov
push
xchg
cmp
lret
es
push
mov
ljmp
push
xor
add
mov
xorb
cmp
dec
sub
dec
cmp
or
adc
push
lahf
or
les
mov
cmp
les
arpl
and
mov
push
testb
push
xor
arpl
insb
test
sub
mov
scas
push
xchg
cmp
jb
pop
jg
aas
pop
movsb
cmp
loopne
or
in
lds
sub
shlb
push
scas
aam
rcl
mov
ja
adc
cmp
fwait
jo
dec
dec
add
imul
pop
cmpsb
mov
sbb
outsl
dec
insb
lcall
mov
outsl
sbb
in
es
mov
or
fisubl
faddl
mov
cld
mov
or
pop
icebp
aam
out
add
jno
ret
add
aad
inc
mov
pop
push
sub
jp
ret
test
and
mov
frstor
cld
or
and
gs
ss
jp
sub
or
sbb
push
mov
lock
jne
clc
add
js
rcrb
fistpl
je
mov
pop
xchg
loopne
and
pop
adc
aam
data16
jecxz
pop
jp
pop
mov
lret
das
sbb
jmp
fstl
dec
xor
mov
inc
das
dec
je
out
outsb
js
pop
xor
sub
mov
dec
dec
fmull
stos
push
xchg
loopne
dec
call
cmp
push
add
inc
sub
sub
xchg
loopne
sub
cwtl
cwtl
sub
mov
mov
fs
inc
ja
dec
fistpll
xchg
sbb
in
ret
ud1
xor
mov
outsl
adc
jg
aam
stos
mov
fldcw
aam
pop
xorl
push
fs
mov
scas
dec
push
or
jb
adc
add
pop
cmp
mov
pop
inc
or
out
sahf
in
jl
cld
add
mulb
cld
push
xchg
add
or
pop
jbe
jb
and
add
les
mov
popa
in
pop
imul
loope
jae
xchg
mov
or
pop
mov
xchg
bound
push
repz
std
mov
cs
pop
daa
sti
sub
loopne
xchg
push
jo
fnstcw
jecxz
scas
clc
xor
fs
xor
mov
cmp
sbb
ja
arpl
xchg
add
sbb
lahf
or
das
shlb
mov
repz
sub
lfs
adc
or
repz
sahf
add
rorl
out
in
pop
testl
jo
addl
cmp
mov
pop
cmp
cmp
mov
lahf
push
mov
aaa
mov
adc
int3
push
pop
jb
bound
adc
imul
int3
cli
icebp
and
xchg
jne
sbb
lahf
lahf
dec
push
out
aaa
jge
dec
and
jmp
arpl
xor
and
push
dec
shlb
imulb
outsl
lcall
mov
adc
xchg
push
ficoms
leave
testb
cmc
cmp
sbb
pop
mov
mov
inc
arpl
in
cmp
daa
or
pushf
cwtl
xchg
repz
sahf
fmuls
dec
rclb
mov
aad
sbb
cwtl
js
stc
jmp
add
enter
out
jne
sub
xor
mov
jb
into
jl
inc
add
sub
pop
test
inc
cmpsl
xorl
cmpsl
fwait
jo
insb
jl
jbe
mov
mov
xor
dec
gs
mov
je
jns
mov
mov
add
add
pop
dec
or
outsb
sub
dec
xorb
and
call
push
mov
rorb
jge
jne
mov
add
push
sahf
add
pop
lcall
sbb
dec
pop
cmp
pop
movsb
dec
das
dec
xor
add
sbb
andb
aad
imul
jo
and
leave
sub
aaa
dec
mov
repz
sbb
jb
sub
fs
cmp
push
dec
imul
sbb
mov
add
out
push
in
cmpsl
cmpl
mov
xchg
loopne
shll
adc
les
push
test
adc
popa
insb
jecxz
and
pusha
mov
in
test
jbe
xchg
insl
cli
cmpsb
dec
outsl
inc
adcl
adc
xor
cmp
and
cmpl
in
test
xchg
dec
mov
sbbl
cmp
ror
mov
mov
pop
dec
inc
add
ljmp
or
pop
inc
adc
ret
jno
adc
in
and
fsubl
aad
js
xchg
sub
out
aad
xchg
dec
add
jecxz
imul
jecxz
pop
pop
fwait
dec
pop
adc
jl
les
push
movsl
lret
rolb
mov
jmp
inc
out
es
clc
jb
push
scas
xchg
dec
out
popf
cwtl
mov
pop
mov
mov
mov
ficomps
inc
or
mov
sbb
push
inc
mov
or
std
jle
push
mov
imul
sahf
icebp
das
mov
pop
jge
in
push
mov
inc
js
ret
test
push
or
loope
add
pusha
shl
pop
cli
fimuls
mov
push
mov
push
pop
xlat
dec
in
inc
cs
dec
xor
add
sub
subb
ss
jno
pop
les
or
js
xlat
sbb
scas
mov
or
mov
push
push
repz
scas
mov
cmpsl
cltd
std
xor
lods
jl
arpl
xchg
or
pop
into
dec
imul
outsb
sbb
mov
out
inc
test
test
cmp
pop
test
jg
hlt
test
lret
cli
pop
das
ja
rep
mov
mov
mov
add
das
js
insl
add
xor
dec
jb
insl
js
std
mov
gs
xor
ret
dec
cmp
push
cli
enter
repz
out
into
lret
adc
jne
xor
shll
mov
add
jge
les
fmull
ds
jo
pop
daa
adc
fmull
push
mov
sahf
add
cwtl
pop
mov
jb
sub
and
push
in
sbb
into
je
jne
push
jne,pn
lods
jne
sub
sbb
push
popf
aad
jp
jno
cmp
cmp
sbb
or
push
add
push
hlt
out
fcmovne
dec
gs
inc
lret
jnp
enter
loop
test
add
sar
outsl
mov
in
adc
lods
movsl
push
jns
jl
sahf
jp
fisttpl
mov
mov
movsb
std
ds
ret
movsl
mov
xchg
mov
add
iret
cmp
aam
addr16
mov
stos
hlt
stos
inc
rclb
popa
fldt
and
inc
ja
mov
sub
dec
sahf
pop
pop
sti
or
es
and
test
and
push
jle
scas
push
mov
pop
popa
stos
pop
push
shr
imul
cmp
or
fs
push
or
or
or
enter
pushf
stos
mov
idivl
aas
or
sub
insl
push
icebp
xlat
scas
testl
sbb
push
adc
mov
add
mov
push
ret
or
jecxz
stos
enter
push
push
mov
inc
xor
inc
cmp
cmpsb
sub
andl
xchg
xchg
js
ret
fnstenv
mov
or
xor
inc
and
dec
adc
int3
addl
mov
lock
rcll
mov
fists
sub
pushf
xor
or
lock
nop
sahf
pop
dec
mov
mov
jb
lret
mov
stc
adc
mov
cmpsb
clc
and
mov
sbb
adc
out
xchg
add
lods
mov
inc
gs
movsl
add
push
dec
out
push
mov
mov
cwtl
push
popa
cwtl
je
andb
jne
pop
clc
xchg
lcall
mov
mov
push
dec
xor
pop
faddl
dec
leave
xchg
rol
imul
push
dec
push
sub
adc
hlt
fiaddl
cmc
enter
dec
lret
adc
push
dec
push
push
mov
in
aaa
lahf
in
icebp
into
sbb
in
ret
mov
in
mov
jp
imul
inc
ljmp
add
outsb
stos
sbb
xchg
rcll
mov
sahf
enter
movsb
mov
loop,pn
sarl
repz
inc
sub
daa
inc
mov
in
mov
xchg
cld
out
lcall
mov
daa
sub
ja
bound
push
shll
jno
fildll
rorb
xchg
jg
clc
dec
sti
xchg
add
inc
mov
fwait
pop
in
scas
jp
cmpsb
jbe
push
loopne
adc
jbe
bound
cwtl
scas
and
or
ret
jp
fsubrl
and
clc
pushf
shrb
jl
sbb
mov
push
scas
sbb
addr16
outsb
repz
cmp
lods
popa
ljmp
inc
jo
xor
dec
pop
lret
mov
push
lods
adc
or
sub
xor
xchg
movsl
out
xor
push
imul
test
push
inc
cmp
push
adc
rclb
or
cmp
xchg
aaa
loop
testl
and
fwait
cmpsb
pop
fdivrl
xchg
pop
cmp
mov
jl
dec
and
adc
push
xchg
dec
in
sbb
sbb
xchg
mov
iret
xor
leave
pop
clc
sbb
fisubrl
cmp
or
mov
fsts
sub
push
sbb
inc
cmp
mov
nop
or
push
push
jbe
cmp
arpl
xlat
or
sti
or
fstpt
fistpll
cmp
repz
ret
gs
sbb
pop
aas
xchg
adc
dec
aad
mov
test
add
cmp
adc
sub
inc
pop
pop
fcoms
ljmp
ret
test
iret
sub
ds
or
out
adc
xchg
lods
insb
xchg
outsb
push
mov
gs
repz
mov
pop
sub
cli
fistps
std
inc
lds
pop
add
dec
cmp
cli
daa
nop
pop
mov
and
fldl
or
sub
imul
leave
stos
pop
pop
int3
xor
lcall
jnp
jno
jp
pop
pop
lods
mov
add
pop
mov
inc
shl
in
adcl
or
cli
or
cld
adc
xchg
mov
mov
in
hlt
add
sub
aaa
push
xchg
into
jg
or
arpl
cmp
int
inc
dec
int
popf
lret
jae
aam
pop
xchg
sub
push
add
ret
cltd
xor
and
mov
adc
push
xor
dec
stos
arpl
mov
xchg
imul
lods
jb
add
in
pop
daa
fstpt
fwait
adc
xchg
cs
jmp
fdivrl
idiv
roll
arpl
add
pusha
inc
jb
inc
mov
mov
jno
pop
push
pusha
cltd
ljmp
das
xor
sub
jle
decb
aaa
xlat
movsb
ds
xchg
in
xor
lock
jne
push
cmpsb
js
scas
mov
adc
dec
xchg
dec
jp
xor
popf
shll
mov
mov
jne
sub
cmc
jl
or
outsl
inc
xor
cltd
xlat
mov
pop
cmpsb
subb
and
lods
int3
dec
aam
insb
xor
push
test
insl
sub
daa
repz
push
aas
or
inc
je
xchg
shll
sub
or
idiv
mov
xchg
xlat
pop
es
inc
loope
mov
jae
lods
test
dec
jb
dec
stos
cmp
xor
aas
add
iret
push
cli
nop
ss
cmp
push
movb
scas
pop
ljmp
aam
ja
sub
mov
xor
ss
mov
mov
adc
je
shlb
lea
sub
xor
mov
mov
push
ds
mov
fdivrs
mov
or
sub
div
xor
fwait
dec
push
lret
ljmp
stos
mov
outsl
xor
jbe
clc
push
xor
mov
stos
mov
jne
shl
dec
dec
movnti
mov
dec
cmp
cs
insl
push
push
aas
inc
fwait
std
pop
jl
pop
leave
shll
pop
mov
pop
int3
shl
sub
pusha
sbb
xchg
das
xor
shlb
mov
push
stc
ljmp
scas
cmpsb
pop
cmpsl
cmp
cs
jb
or
and
ret
shr
outsl
mov
mov
jle
stos
xchg
cmp
add
dec
incb
ror
fwait
adc
mov
sbb
pushf
in
xchg
movsl
dec
sbb
pop
fists
dec
pop
xchg
stc
loope
ss
insl
repnz
mov
push
mov
arpl
xchg
cmp
sarb
jp
cmpsl
in
push
ret
jnp
loop
cmp
pop
cltd
shrb
inc
xchg
adc
adc
jmp
ja
inc
fists
adc
jbe
idivl
cmc
dec
mov
cltd
in
dec
mov
add
jo
gs
push
jns
xor
adc
cmp
push
push
in
orb
hlt
sbb
pusha
lret
xchg
cmp
jge
jne
cs
addl
inc
enter
fstl
cmp
mov
dec
jecxz
mov
scas
push
in
add
inc
jmp
push
rcl
leave
sub
in
dec
pop
sbb
xchg
loop
test
insb
inc
insl
in
call
pop
adcl
mov
hlt
fnstcw
mov
shlb
xchg
ret
or
push
shr
jge
cmc
out
mov
fwait
sbb
out
jmp
mov
xchg
stc
add
push
inc
int3
mov
push
cmpsb
ret
or
pop
mov
pop
popa
repz
lret
arpl
and
sarl
adc
ss
fidivrl
rolb
mov
mov
pop
and
jbe
sub
jnp
and
mov
shll
bound
pop
sbb
popa
clc
sbb
or
out
mov
scas
insl
or
xor
push
mov
ficomps
add
je
les
out
jle
mov
pop
mov
iret
in
xchg
inc
shll
push
fldenv
cmp
cmpl
iret
sub
popa
pop
jge
leave
call
push
xchg
adc
loop
mov
bound
icebp
loope
scas
push
mov
mov
add
mov
aad
mov
cld
cmp
ds
popf
add
ds
js
or
mov
cmpsb
jae
xchg
mov
adc
imul
mov
cmp
sub
outsb
movsb
cmp
adc
iret
xor
jp
lds
lahf
clc
mov
ret
gs
fchs
gs
mov
or
int3
mov
lsl
mull
pop
jg
sub
lret
add
mov
mov
mov
jecxz
movsl
ljmp
ficoml
or
jl
push
les
mov
pop
je
in
aas
arpl
fidivl
pop
mov
xor
cmpsb
data16
inc
sahf
rclb
pop
xor
test
repnz
xor
push
stos
or
cmpb
aas
into
ja
sbb
loop
dec
jg
gs
or
in
mov
sbbb
mov
jbe
inc
shrb
or
mov
push
scas
and
inc
jo
mov
pushl
test
push
sahf
xlat
mov
inc
shlb
sub
ret
mov
xor
int3
mov
ret
push
inc
cmp
or
mov
movsb
jl
movsl
scas
sub
jge
jg
and
xchg
xchg
enter
jb
fimull
push
fistpl
cmovge
cld
lcall
orb
mov
lds
sub
jmp
pop
stc
xchg
mov
mov
sub
dec
icebp
mov
jl
pushf
movsb
insl
data16
dec
jnp
adc
mov
es
rcll
adc
cmp
sbb
lahf
inc
loopne
add
das
and
es
int
push
mov
insb
adc
fistpll
test
jecxz
shl
rcrl
sub
inc
mov
aad
ljmp
jnp
push
lods
pop
outsl
xchg
es
je
stc
or
repnz
xchg
dec
mov
dec
sub
pop
mov
jae
mov
mov
fimull
jne
adc
cmp
mov
jle
and
jle
ds
in
rcl
jns
sbbb
push
loop
enter
cwtl
inc
inc
xchg
add
lret
test
aam
mov
sub
arpl
fs
mov
rclb
mov
cwtl
fisubs
in
movsl
push
mov
cmc
dec
fwait
push
xchg
sahf
mov
mov
jbe
or
mov
fs
sub
dec
pop
inc
push
jns
mov
aaa
mov
lods
subb
gs
pop
mov
cs
sub
cli
inc
sub
sti
push
fsubl
mov
sbb
ds
cmp
js
dec
xchg
jl
sub
mov
pop
in
scas
xchg
mov
ret
adc
or
ret
lods
or
addb
inc
push
jo
dec
fs
imull
cmp
xor
andb
push
dec
mov
pushf
dec
into
stos
xchg
push
out
ja
jg
xchg
cmp
test
jbe
repnz
xorb
sub
cwtl
aaa
pop
jecxz
cmp
mov
xchg
push
mov
ja
lods
mov
jno
xchg
dec
xor
jae
mov
cmp
lds
mov
sub
and
nop
es
js
or
out
mov
data16
jg
bound
xchg
mov
and
xchg
sbb
xchg
addr16
je
nop
fs
or
pop
faddl
jp
in
sbb
pop
and
repnz
fdivs
int
test
mov
fdivp
push
dec
pop
lods
mov
not
sti
in
jno
imul
aam
mov
nop
inc
dec
push
mov
adc
test
add
jecxz
in
dec
ljmp
imul
dec
xchg
push
xchg
push
push
int3
movsb
inc
fidivl
xchg
stc
stc
jecxz
mov
pop
leave
pusha
xor
jp
stos
adc
lret
sbb
scas
imul
in
and
cmpsl
cld
cmpsb
push
push
sbb
shl
xor
test
cli
pop
aas
jmp
and
jl
iret
jb
clc
or
jns
mov
leave
insb
js
sbb
cltd
inc
imul
adc
xor
xchg
out
pop
xor
data16
cli
pop
orl
sahf
cmp
popa
push
clc
xor
mov
dec
add
repnz
shrb
ret
out
iret
push
imul
fsts
jb
xor
or
push
sub
xchg
mov
int3
mov
clc
push
cmpsb
movsl
mov
cmp
xchg
xor
ja
jmp
push
sbb
inc
mov
in
jle
cmp
inc
mov
popf
int3
test
mov
jecxz
push
xchg
in
insl
xchg
pop
sub
stos
jno
ljmp
scas
xchg
dec
imul
addr16
mov
xchg
dec
test
in
push
and
in
cmp
adc
xor
dec
cmp
cs
mov
lret
ret
jmp
cmp
inc
and
mov
adc
jb
xchg
icebp
pop
fisttpll
push
push
loopne
fnsave
push
hlt
cld
into
pop
push
in
or
push
push
pop
xor
mov
add
xchg
cs
pusha
cld
movl
mov
scas
sub
jmp
push
nop
xchg
sbb
cmpsl
add
xor
push
mov
test
es
push
sahf
pop
fwait
dec
pop
scas
pop
cmp
xchg
loop
mov
xchg
jle
cmc
push
adc
mov
add
rolb
or
sub
or
mov
out
popf
je
movsb
test
outsl
sti
ret
and
fcmovb
jg
or
sub
shrb
daa
pop
nop
stos
fsub
sbb
nop
mov
mov
test
push
xchg
pushf
pop
or
xor
and
or
jbe
lahf
loop
or
fiadds
pop
gs
test
cs
jne
pushf
jg
xchg
out
fisubrl
das
sahf
mov
xor
inc
and
add
fwait
adc
push
pop
mov
jnp
stos
lar
push
test
subl
jg
lret
push
dec
jecxz
iret
adc
ret
or
faddl
jae
jecxz
mov
mov
adc
push
loope
std
clc
ret
lods
mov
mul
xchg
ss
mov
pop
mov
mov
in
or
loop
loop
ljmp
add
outsl
mov
aaa
push
xor
mov
dec
adc
lahf
leave
push
pop
sub
imul
cli
js
jle
in
loopne
cmp
bound
popf
ds
mov
mov
insb
movsb
mov
mov
push
dec
mov
and
jbe
imul
es
jp
ljmp
fldt
enter
mov
mov
xchg
add
aad
mov
pop
jbe
mov
mov
movsb
xchg
xchg
clc
mov
xchg
cmp
jge
addl
pushf
fcmovbe
das
cmp
cmp
cmp
in
mov
push
scas
mov
test
cli
pop
or
pop
out
popl
fnstcw
sahf
push
adc
scas
add
js
fiadds
popf
push
pop
add
mov
out
rorb
mov
out
cmp
jno
and
in
or
and
pop
or
out
popa
out
push
inc
ds
push
fistl
fucomip
cltd
fmul
push
and
rol
cmp
jbe
mov
dec
rcrb
test
ljmp
push
fmuls
cmpsl
push
aad
ficomps
inc
dec
lock
movsb
lods
mov
fimuls
add
int
pop
out
fwait
test
push
jg
cld
inc
repz
daa
pop
xchg
ret
mov
jnp
in
lahf
sti
cmpsl
xchg
in
or
and
lods
outsb
clc
jl
mov
push
push
lock
jnp
or
mov
push
xlat
xchg
aad
xchg
inc
sub
push
int
mov
sahf
aam
mov
sbb
sbb
push
cmp
clc
jne
cmpsb
xchg
jnp
xchg
inc
xchg
out
adc
adc
and
mov
add
movsl
sub
push
fwait
inc
add
adc
push
pop
iret
into
loopne
pop
sub
sub
rcrl
out
outsl
xchg
fwait
jnp
jle
out
int3
pop
aad
jae
dec
ficompl
pop
pop
sub
push
js
adc
add
es
scas
in
xchg
pop
inc
and
jo
pop
cmc
lret
test
adc
dec
adc
xor
sub
adc
cltd
outsb
xlat
dec
iret
int
xchg
pop
push
inc
cmp
insb
add
and
gs
add
cs
jo
lea
dec
test
pop
xchg
pop
imul
mov
adc
shr
scas
mov
loop
mov
and
loope
addr16
xchg
insb
bound
cmp
data16
mov
dec
pop
les
pop
sub
nop
cs
and
pop
rcrl
push
pop
mov
adc
or
sbb
jnp
jae
cmpsl
rcrb
test
mov
jno
sbb
mov
lock
sti
ds
pop
movl
mov
mov
aaa
fdiv
sbb
add
decb
jecxz
lds
sub
xchg
clc
mov
xor
jp
rclb
clc
and
xor
jmp
outsl
xchg
xchg
call
push
mov
xor
outsb
ds
mov
push
dec
in
in
fcomps
fmull
imul
xchg
mov
push
fisubs
icebp
shr
pop
xchg
jae
push
sub
push
fsubrs
out
jb
xchg
cmpsb
cmp
cmp
int3
mov
inc
popf
movsl
icebp
push
test
aad
jg
dec
shlb
outsb
pop
jecxz
psllw
ret
out
mov
adc
ja
stc
jg
jbe
lahf
stc
mov
repnz
pop
pop
inc
out
sub
scas
fwait
shll
pop
cmpsb
cmp
inc
subl
popa
test
push
xchg
xchg
scas
lods
loope
mov
je
push
inc
out
outsb
rclb
pop
loopne
add
cli
mov
add
outsl
lock
cmc
inc
mov
push
xor
fimuls
adc
and
xchg
daa
sti
or
sub
stc
mov
or
stos
nop
pushf
jne
ss
xor
lret
nop
call
nop
iret
movsb
dec
loop
rolb
mov
jnp
xlat
mov
leave
mov
cmpsb
mov
mov
or
mov
pop
outsl
inc
fidivrs
xchg
push
push
sahf
cltd
test
dec
mov
jge
add
fisubs
inc
aam
in
mov
cmp
mov
into
pop
jmp
fsubrp
xchg
fnstenv
cld
adc
jg
lea
mov
aad
lret
lods
adc
cmp
adc
das
and
adc
test
mov
jl
add
inc
sub
adc
xchg
popf
lret
clc
inc
adc
ds
mov
or
xorb
es
and
jl
enter
jp
pusha
jle
inc
push
sti
add
fwait
lea
call
movsb
jae
or
loop
push
jne
or
xchg
out
out
lock
push
movsl
push
or
mov
jg
dec
dec
push
cltd
sbb
push
jnp
dec
enter
ret
jno
mov
std
sbb
insb
loope
jmp
test
jno
in
int
pop
jp
into
xor
or
stos
sbb
into
push
in
hlt
pop
loope
cmpsl
sbb
in
inc
aaa
pop
jb
flds
mov
arpl
fucomp
ret
inc
mov
or
and
pop
pop
jg
into
push
sub
imul
dec
hlt
repnz
movl
and
pop
lahf
adc
mov
sub
cmp
jbe
movsl
into
mov
ret
aaa
shl
cs
or
test
imull
and
std
push
mov
jno
enter
addr16
ljmp
xor
lret
imul
dec
test
pop
jns
mov
fsubrs
push
loop
mov
pop
outsl
insb
lret
push
daa
inc
enter
gs
nop
jecxz
jo
fsts
mov
or
and
xchg
std
dec
iret
or
sub
sbb
push
inc
stos
stc
dec
test
scas
enter
and
xchg
movsl
mov
xchg
mov
xchg
and
push
and
dec
orb
jle
mov
mov
sbb
or
mov
and
in
xor
daa
inc
and
mov
xor
lds
push
push
sti
repz
cltd
inc
inc
push
push
lds
mov
lds
repz
pause
add
sub
pop
aas
xor
arpl
insb
inc
icebp
ret
fsubs
test
fistl
test
iret
lahf
xor
mov
mov
popf
pop
mov
sub
adc
clc
ds
xchg
push
scas
cmpsl
jle
test
sub
jg
sbb
cmp
rolb
cwtl
jb
icebp
test
out
mov
sub
aad
aaa
mov
jmp
clc
repnz
in
cmpl
rcll
sbb
mov
jp
arpl
js
iret
mov
cmp
pop
pop
sbb
xor
add
mov
lahf
ret
popl
and
xchg
sarl
aad
cmc
inc
sub
popa
mov
sbb
and
daa
push
xchg
das
fidivrl
rcll
addr16
push
andb
mov
in
addb
pop
ret
repz
lods
cs
jmp
mov
dec
lcall
sub
push
adc
dec
mov
push
shrb
into
sahf
loopne
add
shll
add
aad
faddp
aad
mov
stos
mov
jle
out
mov
or
sbb
fsubp
sbb
mov
mov
lock
and
jb
shrb
lods
sbb
rorb
movsb
mov
daa
lahf
xchg
push
xor
xor
push
or
mov
push
sti
fimull
add
not
adc
sbb
or
fsub
lcall
cmp
out
in
xor
out
pop
and
lods
lock
adc
sbb
xor
jo
hlt
repnz
hlt
push
ds
outsb
and
push
cmp
loopne
into
sbb
cmp
sbb
pushf
addr16
mov
sub
push
add
cld
jg
enter
mov
shl
testl
cmp
fildl
dec
mov
adc
nop
mov
mov
pop
pop
inc
inc
cli
mov
adc
adc
sarb
data16
scas
jge
inc
out
data16
jne
faddp
mov
pop
sub
sbb
mov
mov
leave
fsubs
jno
stos
jl
jecxz
aam
pusha
cmpsb
mov
xor
pop
pop
push
repnz
out
sub
dec
cld
and
dec
sbb
sbbb
mov
mov
mov
and
inc
shl
push
sbb
jmp
testb
and
or
cmpsl
jmp
adcl
jbe
lds
xchg
sti
mov
and
or
jnp
jg
rol
fimull
push
xchg
mov
arpl
pop
adc
adc
lcall
sbb
push
lods
cmp
and
push
pop
mov
sarb
out
adc
mov
inc
dec
pop
push
stos
or
iret
ret
push
pop
xchg
pushf
adc
and
jmp
mov
mov
imul
pusha
addb
jo
out
sbb
adc
mov
push
lock
mov
mov
jb
mov
xchg
test
scas
cmp
add
cmpl
scas
cld
mov
sub
imul
mov
push
or
into
inc
mov
clc
notl
dec
pop
test
dec
movsb
or
divl
cmp
adc
cli
push
adc
mov
lahf
mov
test
cmpl
mov
push
cmp
xor
mov
lock
arpl
mov
in
mov
cmp
push
pop
sbb
pop
mov
call
dec
jnp
int
mov
daa
sti
movsbl
and
push
xor
add
or
mov
mov
mov
pop
jecxz
adcl
out
stos
js
push
xchg
cmp
cmpsl
jp
test
inc
lock
negb
orl
jb
and
cltd
adc
or
fbld
aad
test
pop
mov
ret
and
ja
fwait
xchg
mov
mov
insl
les
push
popa
int
push
xchg
pop
lods
add
xchg
mov
subl
lods
inc
shrb
xchg
ret
push
jp
fsubs
sbb
rcl
mov
inc
test
mov
ret
in
inc
outsb
fisubl
daa
cmpsb
jecxz
push
xlat
cmp
in
mov
test
sub
test
out
jae
xlat
ljmp
add
aaa
lcall
insb
int
jmp
pop
enter
outsb
ljmp
mov
jl
xchg
sbb
cmc
stos
xchg
dec
insb
icebp
mov
mov
push
cltd
pusha
ss
aam
xchg
inc
cld
sahf
jbe
sub
addl
xchg
cmpsl
negb
jnp
roll
insl
mov
testl
lds
dec
in
mov
dec
sub
fcomi
jge
or
cmp
mov
addr16
les
add
pop
insl
dec
shll
lock
icebp
movsb
in
jne
mov
ficomps
dec
cwtl
jne
mov
ja
lock
inc
orl
or
cld
dec
movsb
repz
lock
lret
repnz
xor
sub
pushl
lods
setl
call
int3
jnp
cmp
xchg
pop
out
mov
inc
cmpsb
int
pop
jg
popa
bound
pop
jg
subb
or
lea
scas
call
add
and
mov
dec
dec
xor
hlt
cmpsb
add
and
loope
scas
push
jno
xor
sub
sbbb
sbb
arpl
jno
mov
popa
push
movsb
push
fwait
lret
fcomps
sti
xchg
jae
aaa
push
inc
sub
push
ljmp
sub
push
or
sbb
mov
test
fbld
sbb
scas
cmpsl
jp
scas
test
ja
cmc
ljmp
rcrl
dec
addr16
sub
mov
lds
arpl
mov
clc
nop
pop
insb
adc
imul
ljmp
xor
mov
mov
sbb
cmp
lods
mov
push
into
fxch
pop
movsl
mov
dec
inc
addr16
popa
cmp
cmp
lahf
aaa
pop
sub
fwait
loope
dec
out
cmp
loope
xor
dec
fld
cmp
jp
icebp
push
in
js,pn
or
insb
popf
jnp
xchg
mulb
push
aad
decl
and
mov
arpl
js,pt
out
mov
pop
repz
sbb
push
test
fists
inc
jmp
out
ss
test
int3
xchg
inc
and
mov
clc
xlat
data16
push
sub
push
fistpl
xchg
push
pushf
sub
repz
pop
loope
sub
sub
mov
dec
jne
out
xchg
enter
popa
stos
icebp
jae
inc
pop
jecxz
mov
sbb
ret
and
or
ds
mov
aad
repz
and
pop
rorb
and
cmpsb
push
adc
shrl
inc
dec
mov
pop
pop
bound
inc
inc
sbb
inc
ja
lcall
dec
mov
xlat
clc
cmp
arpl
push
xor
add
aas
pop
nop
mov
daa
mov
dec
mov
pop
add
jge
ss
dec
mov
lods
aad
xor
mov
push
mov
cmp
repz
and
xor
aad
inc
aas
fdiv
je
scas
repz
sub
jecxz
ss
push
pop
ret
inc
push
jg
xchg
mov
sbb
xor
pop
ss
jp
or
sbb
jne
lret
xchg
mov
rcrb
or
mov
imul
inc
ds
mov
cwtl
dec
addr16
shl
filds
je
xchg
dec
js
mov
stc
push
cwtl
fdivl
or
mov
xchg
bound
subb
jp
sbb
out
sub
pop
out
pop
pop
mov
ljmp
inc
dec
sub
xor
or
inc
mov
add
out
push
lret
mov
outsb
mov
scas
pop
sbbl
adc
mov
dec
cmp
dec
pop
ds
jnp
adc
and
xchg
cmp
jmp
insl
aad
aaa
add
push
jmp
sub
aad
xor
jecxz
mov
adc
sbb
aad
mov
adc
mov
and
push
mov
mulb
test
inc
jno
inc
std
adc
cmp
arpl
pop
stos
cmp
sub
repz
icebp
add
inc
adc
loope
mov
idivb
and
jbe
aam
ljmp
sub
ja
fwait
sbb
and
fists
mov
mov
cmp
imul
dec
int
insl
aad
lds
dec
in
cwtl
ret
xlat
dec
movsl
sbb
shll
mov
mov
adc
std
inc
dec
leave
mov
and
jb
inc
shll
adc
xchg
or
imul
and
pop
and
mov
aad
shlb
iret
enter
pop
decb
sub
cmp
mov
fnsave
mul
xchg
pop
adc
into
push
mov
insl
fbstp
notl
imul
outsb
ljmp
das
lret
rorl
pop
jo
mov
das
pop
cmp
mov
sub
jae
ret
jb
stos
iret
pop
or
xchg
jmp
mov
xor
fildl
push
pop
outsb
jbe
jno
xchg
icebp
test
ja
push
mov
lods
aam
stos
addr16
inc
push
xor
or
loope
ss
sti
lods
stc
mov
sbb
pop
ds
xchg
push
insb
inc
mov
pushf
sub
scas
add
inc
aas
leave
jle,pt
in
xchg
push
mov
xor
stc
in
jnp
cld
outsl
dec
xchg
outsl
lods
das
out
xchg
fnstenv
out
decl
popa
dec
aam
mov
mov
dec
out
sub
es
push
xor
cmp
add
ret
rep
sbb
mov
cmp
imul
inc
inc
sbb
sbb
and
int3
das
mov
cwtl
pop
mov
xor
cwtl
stos
div
xchg
xlat
and
cli
vcvtps2dq
pop
dec
out
mov
dec
adc
mov
mov
mov
fwait
shlb
cmpsl
out
xchg
test
sbb
shrl
mov
fcmovnu
push
in
enter
jno
jl
sub
in
daa
inc
jg
and
lcall
xor
out
mov
jb
cmc
jmp
enter
pop
push
inc
enter
ds
cltd
add
dec
xorl
shrb
sub
out
mov
ja
jb
outsl
dec
pushf
in
xor
xchg
clc
jl
mov
adc
sub
cmp
push
dec
mov
scas
sbb
sbb
nop
fdivrl
push
hlt
pop
repz
xor
lods
test
icebp
scas
scas
lods
into
mov
enter
loopne
in
out
push
or
push
fdivs
pop
jecxz
movsb
dec
cmp
sub
mov
in
sti
add
test
popa
lcall
lea
dec
shl
sbb
lods
xchg
mov
mov
cmpsb
mov
and
push
sarl
es
push
mov
into
leave
ja
jmp
xchg
mov
stos
push
mov
mov
cmc
popa
xor
sbb
les
js
fadd
push
add
xor
fbstp
stc
or
and
outsl
lret
cs
sbb
fists
mov
cmpsb
xchg
rcll
dec
cmpsb
pop
or
inc
fdivl
mull
sub
out
add
adc
into
jl
adc
aaa
jb
fstp
jmp
add
fldenv
push
xor
rolb
mov
pushf
mov
les
or
test
mov
clc
aam
mov
adc
je
inc
fiaddl
int3
pop
test
subb
xchg
sub
clc
dec
xchg
imul
or
nop
test
into
mov
and
pop
xchg
dec
pop
gs
daa
adc
sbb
adc
adc
mov
adc
mov
push
inc
and
fildl
xchg
dec
sub
ds
mov
xchg
pop
inc
cltd
fs
xor
hlt
push
dec
sbb
shll
pop
push
imul
push
stos
xchg
add
out
subb
arpl
or
xchg
pop
sub
jne
dec
test
and
jno
mov
push
call
fidivs
mov
insl
lods
cs
pop
cmc
mov
jb
mov
in
sub
les
lcall
lods
out
adcl
shl
lea
mov
or
pop
mov
pusha
push
sbb
sub
imul
les
fidivrs
pop
fstl
popf
cltd
xor
lahf
jmp
push
jb
push
out
call
ja
icebp
cmp
mov
addl
push
add
cmp
or
imul
dec
add
sbb
mov
insb
push
out
and
in
jne
push
mov
xorb
adc
mov
outsl
sub
mov
mov
lods
in
repz
push
imul
sbb
mov
push
cmp
pushf
iret
pop
mov
adc
je
sbb
cwtl
cmp
jns
dec
mov
push
jge
push
pop
pop
jo
mull
xor
xor
mov
in
add
loope
push
cmp
cwtl
jmp
fwait
dec
rcll
inc
ror
mov
jbe
into
hlt
mov
stc
push
xor
fidivrs
inc
out
xchg
sbb
leave
and
clc
insl
and
xchg
pop
push
or
in
mov
inc
sub
sub
jl
add
push
aam
adc
push
pop
push
aam
adc
push
cltd
outsl
cmpsl
pop
jb
jmp
mov
cs
ja
jns
pusha
inc
adc
mov
fs
in
mov
insb
sbb
mov
inc
add
pop
test
hlt
stos
fnsave
stos
fnsave
popa
inc
inc
xrelease
daa
and
pop
push
dec
lods
bound
jp
jle
ror
xchg
arpl
sbb
dec
mov
pop
mov
loopne
jge
adc
popf
sub
imul
mov
popa
jne
ficoml
mov
sti
push
movsl
test
stos
dec
and
mov
jo
sbb
push
push
ljmp
idivb
mov
sbb
and
dec
pop
fcoml
gs
push
ja
icebp
loope
aam
mov
and
xchg
sbb
aas
mov
fwait
dec
ja
push
jne
ret
push
ficomps
xchg
orl
lds
xchg
mov
cmp
fstpt
mov
gs
lret
pop
call
repz
loop
scas
addb
lret
cltd
daa
xor
bound
lret
xchg
pop
mov
test
imul
jns
ja
lods
mov
scas
push
push
add
in
fidivl
cmp
aad
mov
loope
mov
pop
test
lret
mov
jno
jecxz
lds
popf
add
out
mov
aad
sub
out
lret
insl
dec
jb
imul
xlat
fs
xor
fldcw
loopne,pt
jns
scas
mov
scas
stos
addr16
adc
push
sbb
adc
jno
xlat
idiv
rcl
data16
adc
stc
dec
bound
push
fnstenv
dec
cmp
shrl
daa
sbb
fmull
hlt
pop
or
and
jp
push
sub
sbb
int
cli
lahf
dec
push
mov
push
xchg
into
inc
pop
dec
push
jl
and
cmp
cmp
or
adc
repnz
xchg
arpl
stc
out
mov
push
loope
repnz
mov
orb
inc
dec
rcrl
rcll
iret
das
fildl
sbb
pop
jmp
jge
test
in
std
lods
inc
pusha
leave
cmp
dec
sbb
add
mov
fstp
sub
cmp
dec
mov
or
imul
loopne
orl
add
jp
cmp
and
out
decb
push
js,pt
out
aam
xor
pop
mov
call
mov
xor
aas
iret
or
pop
rcll
andl
sub
test
mov
mov
sub
mov
jno
adc
dec
mov
push
or
in
addr16
dec
push
iret
shr
notb
jbe
das
dec
shll
mov
out
mov
lahf
dec
add
inc
mov
cmp
shl
mov
sub
movsb
pop
push
jne
dec
ficomps
loopne
jp
or
loope
push
sahf
lock
or
das
icebp
int
test
sbb
jns
mov
pushf
dec
lods
clc
rcl
cmp
mov
jle
jmp
xchg
adc
sub
adc
mov
imul
test
mov
cmpsl
dec
cmp
mov
dec
add
pop
aam
mov
pop
pop
enter
xchg
push
shl
push
push
pop
test
pop
addr16
cli
shrl
add
sub
imul
into
dec
jae
imul
repnz
mov
idivl
add
enter
xchg
jg
outsl
mov
lods
imul
mov
fdivr
mov
xchg
cmp
out
jno
pop
xchg
add
pop
cwtl
ret
mov
fildl
adc
test
dec
jmp
lds
xor
cli
nop
es
adc
mov
push
and
or
inc
sbb
or
out
sub
fwait
jnp
loope
popf
outsl
out
je
mov
mov
out
scas
push
adc
addr16
mov
mov
pop
push
mov
mov
icebp
shl
std
jne
or
sbb
dec
cmp
inc
and
or
sahf
lds
dec
xchg
iret
inc
push
cli
xor
push
std
loopne
pop
es
sahf
ret
sbb
arpl
cmp
pop
cmp
dec
xor
lret
dec
pop
outsl
aam
arpl
and
or
test
push
jbe
mov
pushf
cmpsl
dec
addl
push
fldt
sub
xchg
icebp
imul
inc
out
adc
subl
call
and
mov
xchg
push
add
dec
jno
dec
in
jo
sbb
loop
daa
arpl
jae
clc
in
es
or
pop
ret
lock
ret
jecxz
int3
clc
jp
lods
mov
cmovs
je
ja
cmp
mov
outsb
out
pop
jnp
dec
in
mov
fcomps
inc
xchg
pop
cmp
cli
cmp
jp
sbb
push
xor
mov
push
loope
xor
faddl
aaa
aam
daa
add
dec
adc
sti
cltd
sub
pop
aaa
inc
mov
scas
push
mov
mov
push
add
xchg
ret
adc
jecxz
pop
mov
jns
scas
xchg
cmpsl
ja
cmpsl
fisttps
lret
sub
sbb
cmpsb
jo
or
scas
jnp
xor
inc
or
xor
xorb
loope
cli
insb
sub
scas
lahf
in
in
daa
sbb
mov
cld
push
mov
loope
xchg
scas
xorl
shlb
ficompl
dec
jp
push
jns
rol
int3
data16
adc
sbb
dec
add
or
xchg
les
mov
adc
out
push
insb
outsl
rcr
adc
cld
jb
adc
or
arpl
rclb
mov
das
and
cmpsb
push
sub
imul
test
xor
out
fnstsw
pop
js
cld
pop
mov
inc
sbb
repnz
jge
dec
cmc
mov
repz
pusha
gs
jo
adc
shlb
fimuls
insl
adc
mov
adc
push
push
outsl
leave
push
out
mov
scas
jo
xchg
dec
push
sti
add
or
xor
pop
scas
js
adcl
lods
les
sbb
std
mov
inc
mov
inc
movsb
js
sbb
fs
in
popa
dec
jns,pt
int3
mov
dec
push
loope
sbb
test
pop
dec
mov
mov
xchg
inc
or
movsl
xchg
rcrl
mov
mov
mov
pop
inc
mov
and
pop
outsb
jno
iret
push
sbb
cmp
push
data16
sub
mov
es
mov
mov
fidivrs
clc
sub
fdivl
loope
nop
rol
jne
ja
pop
mov
jns
pusha
iret
repz
hlt
dec
les
pop
mov
mov
cld
pop
lret
lods
sahf
rcr
push
outsl
adc
jecxz
xchg
mov
test
dec
cli
mov
cpuid
or
xchg
adc
mov
and
imul
nop
push
jno
pushf
mov
push
call
inc
aas
xchg
cmpsl
sub
xchg
addb
std
xchg
out
adc
adc
mov
and
and
scas
fs
or
pop
jmp
push
push
punpckhwd
nop
movsb
mov
call
push
sahf
xchg
dec
rcrl
ds
xchg
add
jl
data16
sbb
lea
into
mov
sbb
jno
dec
xchg
int
loope
imul
test
ret
push
push
push
subb
push
nop
inc
imul
push
and
mov
jg
outsl
inc
add
sti
test
lods
int3
clc
shrb
stos
mov
dec
aaa
mov
test
xchg
and
test
cli
daa
mov
jl
adc
mov
cwtl
iret
cmp
dec
inc
ja
fs
scas
dec
je
jo
repz
pop
insb
out
mov
sub
adc
pop
test
fisttpll
filds
xchg
push
cmp
fcmovbe
push
daa
pop
hlt
out
cmpsl
mov
loope
mov
xlat
dec
cmpsb
mov
aam
xchg
dec
mov
sbb
popf
push
pop
fnstsw
ja
add
cmp
jne
xchg
aad
mov
adc
add
jno
popa
addr16
push
push
add
push
fcmove
jae
ljmp
scas
inc
pop
sbb
push
ja
fwait
dec
sub
push
mov
jecxz
xchg
pushf
adcl
arpl
decl
aaa
pop
cld
mov
or
or
push
xchg
cmp
lahf
xchg
adc
pop
int
pop
lret
cltd
cld
pop
insl
jbe
fs
adc
std
sub
les
mov
into
loope
jmp
lret
pushf
mov
inc
jo
mov
scas
push
nop
mov
addb
mov
stos
daa
sub
fcoml
loope
iret
rcrb
xor
and
movnti
jnp
mov
xor
hlt
dec
insb
shrb
psrlw
mov
mov
cmp
mov
rsm
jne
push
pop
dec
xchg
lret
loopne
insl
lret
outsb
xchg
mov
push
xchg
out
dec
dec
out
popa
loopne
dec
je
aad
xchg
mov
ds
or
lea
fisubs
dec
and
sbb
mov
into
sub
mov
jg
add
push
repnz
pop
dec
jo
xchg
add
or
scas
pop
add
mov
aaa
or
int
lock
rorb
fwait
insb
aam
cmpl
xchg
int3
xor
daa
mov
pop
data16
je
aas
add
mov
pop
mov
mov
popa
sbb
je
enter
xor
cmpsl
lds
mov
jmp
shl
rcrb
int3
push
inc
mov
pusha
and
and
mov
xchg
xchg
cli
movsl
leave
add
push
rorl
cmp
shrb
push
das
sub
mov
popa
loop
loope
inc
pop
pop
add
lea
daa
adc
mov
in
imul
xchg
add
shlb
mov
xor
stc
scas
inc
aad
test
sahf
xchg
xor
push
or
and
cmpsb
xchg
mov
mov
std
into
xor
pop
sbbb
xchg
mov
jmp
divb
cmc
adc
enter
cmp
mov
int3
mov
aad
inc
test
sub
mov
ds
roll
fcoml
cli
gs
inc
jge
test
adc
dec
aam
pop
push
mov
adc
jne
into
loop
icebp
jl
inc
inc
push
lcall
mov
xor
dec
inc
movsl
pop
jg
fsubl
out
jns
sbb
dec
add
mov
dec
cmp
xchg
clc
repnz
vmovaps
std
or
arpl
cmp
mov
jg
fwait
mov
xorb
push
orb
int
add
pop
imul
repz
inc
add
test
or
je
out
xor
mov
out
popf
cli
and
es
imul
andb
sub
fstps
xchg
sbb
add
mov
or
or
mov
aam
pop
xor
cmc
iret
addl
mov
neg
pop
gs
scas
aaa
leave
inc
xorl
xor
push
xor
mov
dec
lods
out
lret
push
push
fdivrs
xchg
pop
movsb
xor
xorl
and
lds
sti
or
fstl
ljmp
dec
dec
imul
mov
mov
xchg
pop
sahf
push
inc
sub
fwait
jnp
aaa
jnp
lret
cmp
mov
fwait
mov
and
cli
imul
out
fsubs
pop
xor
loop
lods
inc
dec
xlat
dec
cli
push
xor
or
pusha
lds
xchg
das
pop
ljmp
mov
cmpl
imul
in
mov
mov
dec
and
cmp
frstor
cmpsl
lahf
pop
and
in
imul
and
adc
fisubl
lret
cmp
or
arpl
mov
jle
je
inc
iret
xchg
add
jge
jb
add
frstor
fs
fldl
stos
xor
cmp
mov
rcl
arpl
sub
or
out
gs
mov
inc
into
cmp
mov
insb
lock
cmp
test
lret
fsubrs
mov
aam
mov
pushf
jb
cmp
or
mov
cmpsb
inc
repz
hlt
mov
push
mov
std
bound
dec
cmp
sub
test
sbb
movsl
fistps
jle
jno
adc
sub
sahf
mov
ljmp
ret
and
loope
movsb
cmc
cmp
push
mov
adc
jl
pop
cmp
fmull
dec
ja
mov
jecxz
mov
ret
adc
sbb
clc
sbb
xor
loop
shlb
nop
add
jns
sub
pavgb
js
mov
in
sub
jl
cmpsb
mov
out
ret
cmpl
stos
lahf
insl
xchg
mov
or
cmc
xchg
inc
sbb
pushf
stos
ss
jb
insb
lcall
jl
cmpsb
leave
mov
out
fstl
loope
std
icebp
mov
cmp
add
xchg
fistl
add
push
fs
inc
lock
fadds
ljmp
mov
imul
rcl
out
ret
xchg
fs
push
stos
sbb
and
pusha
add
pop
popf
pop
jno
lds
int3
bound
sbb
pop
sub
xor
dec
xor
inc
push
in
push
je
cwtl
cmpl
push
sub
sysexit
sub
mov
and
mov
or
adc
je
bound
sbb
cmp
pop
imul
adc
adc
lods
sub
out
imul
aam
sti
das
int
scas
mov
sbb
inc
jl
sub
mov
xchg
cmpl
adc
mov
jb
add
dec
ds
pop
std
mov
mov
leave
xchg
lea
pop
fbld
pop
pop
lret
testl
or
dec
jb
mov
add
jmp
mov
and
mov
jnp
aaa
pop
sub
mov
in
imul
imul
dec
dec
mov
cmpl
je
stos
inc
lock
pop
add
mov
inc
mov
mov
and
xchg
xchg
fwait
sub
pop
call
or
jge
std
int
lods
ljmp
xchg
sbbl
mov
add
lcall
in
sub
sbb
std
xchg
movsb
sub
xchg
fs
jne
inc
add
push
repnz
xor
fstpl
bound
dec
dec
ds
hlt
jnp
repnz
or
cmp
adc
daa
leave
xchg
iret
outsl
mov
std
inc
push
push
jnp
mov
push
push
ss
mov
push
sahf
dec
out
sub
lods
xchg
cmp
or
sub
in
fildll
xchg
stc
cmp
mov
cmp
xor
or
subl
pop
out
enter
movsl
add
outsb
and
incb
pop
or
sahf
popa
test
adc
sub
fiadds
sub
xchg
ds
push
addb
outsb
aas
stos
pusha
ja
popa
dec
mov
xor
sub
in
add
xor
das
in
cmpsl
inc
lret
in
inc
adc
pop
mov
sub
jle
pop
push
sub
leave
push
in
jne
cmp
sti
insb
and
pop
sub
push
jns
into
mov
jge
lds
xchg
aad
mov
fcmove
jecxz
fadds
adc
in
mov
push
andl
popf
pop
sti
xchg
mov
jmp
in
sub
dec
add
cmp
ja
xchg
fwait
pop
inc
pop
daa
imul
daa
andb
jmp
adc
outsb
xlat
dec
sbb
arpl
jl
mov
dec
mov
mov
xor
pop
lcall
dec
jbe
inc
fildll
stc
add
mov
cmpsl
outsl
mov
inc
sbbb
aaa
mov
sahf
push
sarb
mov
enter
mov
pop
jae
mov
call
mov
stos
or
rorl
xchg
inc
inc
movsl
incb
pop
jae
xchg
lds
xchg
add
jmp
xchg
mov
mov
dec
bound
jg
cld
stos
jl
pop
sbb
cmp
mov
jl
sti
pop
imul
xchg
les
pushf
mov
in
jns
iret
outsb
sbbb
adc
lods
lcall
dec
mov
mov
scas
pop
cmc
and
xchg
push
fcmovu
mov
mov
xor
popa
cli
ret
mov
add
imul
cmp
push
fcomps
and
add
mov
bound
sbb
ret
ss
jbe
jno
popa
cltd
jle
dec
xlat
cmp
xchg
repnz
adc
ja
shlb
and
jno
scas
adc
pop
stos
add
stos
popf
popf
push
cwtl
push
push
sti
sarl
ds
std
inc
sti
cmpsl
rorl
in
xor
int3
faddl
dec
sbb
dec
jg
or
shlb
nop
les
gs
lea
dec
push
xor
push
popf
inc
dec
addr16
repz
in
movsb
hlt
jae
xchg
cmpsl
mov
push
clc
enter
loope
lock
or
imul
aas
ret
inc
xor
adc
fstps
cmp
pop
pop
in
cmpsb
outsl
sub
out
in
out
dec
jns
out
pop
out
jno
push
testb
std
aad
mov
jne
xor
push
lret
out
les
lock
sbb
call
test
cli
in
mov
stc
es
mov
sub
out
dec
stc
dec
sub
cmp
mov
jb
shlb
hlt
inc
xchg
and
xchg
test
movsl
icebp
std
inc
jmp
add
outsl
mov
mov
out
sbb
lahf
mov
ljmp
mov
ja
pushf
xor
and
fcmove
push
outsl
mov
out
mov
cmp
loope
fcom
gs
stos
loop
in
mov
pushf
rolb
xchg
xor
pop
cltd
xchg
xor
push
data16
popf
mov
mov
fldl2t
aas
loop
lea
jb
addr16
test
xor
or
out
xchg
lods
in
and
mov
stos
xchg
and
cld
pop
cs
leave
cmpsb
add
jb
mov
fidivs
pop
into
lret
mov
in
jmp
pop
mov
mov
out
outsl
sub
push
dec
pop
mov
shrl
inc
stos
aas
lret
mov
cmp
std
shrl
or
push
xorb
push
out
into
rorl
xor
sub
add
pop
mov
push
je
inc
cld
add
jmp
and
icebp
cmpsb
jp
mov
xor
xchg
fucomp
adc
bound
into
and
sub
adc
lret
fstpt
lret
je
sub
inc
fiaddl
dec
repz
stos
jle
push
inc
push
lret
leave
cmp
dec
cmc
or
negb
sbb
pop
xchg
popf
xchg
xor
and
movsl
xchg
mov
dec
jae
dec
pop
mov
adc
loope
les
or
loop
test
addr16
movsl
aaa
adc
in
arpl
push
inc
adc
mov
movsl
adc
add
mov
je
lcallw
jmp
cmp
vprotd
fstl
bound
lock
ss
push
pop
xchg
mov
cmpsb
fidivs
mov
xchg
push
jp
popa
aam
dec
dec
sub
iret
push
pop
jmp
sbb
in
push
push
cmc
inc
lods
sbb
in
repnz
leave
ds
or
popa
inc
xchg
inc
fldl2t
sbb
inc
or
filds
dec
mov
push
in
jnp
repz
call
adc
jbe
adc
sarl
mov
es
push
clc
test
aad
insb
clc
pop
pop
fstpl
clc
cwtl
cmp
xor
in
imul
xchg
sahf
cli
dec
movsl
clc
mov
pushf
jbe
mov
cs
sub
push
iret
adcl
icebp
enter
add
out
inc
xchg
shlb
sub
test
mov
rcrl
rolb
push
jp,pn
cmp
xchg
or
mov
ja
adc
or
fwait
rorb
mov
fdiv
pop
lods
das
jecxz
pushf
cmp
push
cmp
aad
ret
jg
mov
fxam
mov
mov
sbb
int
pop
sti
jo
lods
pmaddwd
jne
in
push
sbb
outsb
dec
nop
dec
call
je
mov
add
push
dec
sbbb
inc
cmp
cmp
jle
add
xchg
aad
pop
sahf
cmc
inc
test
nop
inc
xor
xchg
mov
aam
push
aad
jg
cld
inc
mov
cs
mov
test
jbe
sub
xchg
pop
xchg
dec
jle
outsb
or
sbb
mov
ror
mov
dec
and
sbb
lcall
xchg
jb
push
xlat
mov
lret
or
mov
jp
das
in
xchg
scas
shll
lahf
mov
inc
in
jmp
out
int
dec
jle
push
jae
subb
push
jp
sub
sub
push
ds
xor
into
and
addr16
mov
cwtl
mov
lret
inc
dec
push
ret
cli
push
inc
popa
loopne
repnz
mov
in
shll
sbb
mov
mov
out
lods
notl
nop
rol
mov
xor
imul
adc
xlat
inc
push
cld
pop
mov
popa
imul
lcall
gs
push
push
push
push
mov
std
mov
pcmpeqb
shl
add
xor
sbb
jo
cmp
movl
xchg
lds
sub
sbb
and
addl
push
je
mov
sub
imul
ja
sbb
inc
popf
je
pop
mov
iret
outsl
aam
jnp
aam
sbb
inc
cmp
js
arpl
xchg
xor
int3
mov
xor
or
sbb
je
xchg
dec
loope
mov
insl
push
and
inc
fldenv
in
dec
aaa
inc
cmp
adc
loop
push
cltd
in
pop
jge
sub
fwait
jae
in
push
aas
les
adc
push
mov
jno
push
cltd
nop
das
insb
xchg
scas
mov
push
sub
add
in
lds
lret
pop
stc
mov
movsb
imul
mov
mov
fcoms
mov
pop
imul
cs
pop
sbb
fcomip
into
mov
jnp
fs
aas
add
aam
mov
push
loope
pop
jo
cltd
lock
ret
and
ret
pusha
fwait
shlb
pushf
in
jnp
lret
push
inc
adc
aaa
mov
mov
jp
and
xchg
pop
sub
jae
stos
pop
ret
jmp
gs
lret
imul
imul
pop
mov
push
shll
aam
aam
movsl
inc
pop
inc
jmp
out
jns
sahf
aad
hlt
int3
fstps
scas
push
adc
data16
testl
or
add
fbld
xchg
int3
push
xlat
in
mov
sbb
rcrb
orl
lds
std
jne
pop
fs
shrb
add
push
jb
gs
mov
and
mov
imul
xchg
push
ret
sbbb
xor
and
pop
repz
push
sbb
pop
dec
xchg
push
sbb
outsl
mov
loop
je
dec
aaa
loope
and
lahf
mov
or
data16
pop
mov
stc
insl
cld
add
fs
pop
dec
fcmovbe
jg
jno
and
fidivs
cmp
subb
jbe
popa
mov
fwait
clc
jae
outsl
adc
rcrb
leave
mov
jbe
data16
xor
adc
fldl
mov
fmull
ds
xchg
int
sbb
push
cmpl
and
xchg
add
jo
out
jecxz
mov
adc
push
inc
adc
mov
subl
fisubl
pop
sbb
mov
in
cmp
pop
inc
lret
sub
mov
out
inc
pop
xchg
or
push
stos
add
mov
or
or
mov
std
adc
push
and
add
lret
mov
sbbl
dec
cmp
mov
cmpsb
jmp
insl
mov
xchg
mov
leave
addr16
adc
mov
dec
push
push
inc
cmp
in
in
inc
and
cs
add
xchg
sahf
and
mov
inc
shr
or
jo
imul
popf
inc
repz
hlt
fildl
cli
cmpl
push
daa
rolb
lds
pop
fisubl
rcll
jae
pandn
push
sti
pop
fcompl
test
mov
outsb
fstpl
into
mov
jno
and
mov
cmpsb
bound
loopne
push
xor
test
mov
out
mov
inc
lahf
mov
test
xchg
mov
test
lods
inc
int
jo
pushf
f2xm1
inc
xorl
insl
les
sub
mov
xchg
addr16
mov
popa
xchg
jbe
sbb
sub
xchg
add
clc
in
popa
sub
movsb
jne
pop
jno
out
pop
adc
and
into
dec
aaa
lods
push
mov
dec
and
or
into
sub
sub
dec
stc
mov
push
lret
sbb
aaa
sub
inc
mov
clc
push
cmp
mov
iret
add
xor
xchg
mov
iret
add
je
xchg
je
icebp
outsl
pop
xchg
mov
add
lcall
mov
movsl
ficompl
and
adc
stos
ja
clc
pop
add
xchg
jb
or
stc
adc
mov
std
loopne
inc
adcl
add
cmp
das
pop
xor
call
cmp
or
nop
insb
adc
shlb
adc
xchg
pop
mov
xlat
insb
pusha
test
xchg
cmpsb
jno
lock
in
mov
popf
dec
mov
xchg
add
inc
pop
jmp
jo
xchg
pop
inc
add
cmp
inc
test
arpl
xchg
fildll
mov
jp
push
stos
inc
inc
pop
and
cmpsb
outsb
ret
out
std
cld
hlt
out
mov
movsb
das
int3
inc
add
fwait
mov
movsl
fsubrl
pop
movsb
std
shr
mov
jno
dec
icebp
ret
push
mov
filds
clc
mov
push
imul
pop
sarl
xor
jle
mov
and
and
aam
repnz
pop
test
add
int
pop
shl
leave
aas
js
test
es
divl
fdivs
fbstp
xchg
bound
dec
sarb
dec
lds
and
sti
iret
ja
xchg
and
push
xchg
sbb
or
inc
add
popf
mov
or
mov
xchg
inc
ss
sub
inc
dec
sub
or
jno
pop
iret
lock
sub
sub
addr16
pop
jmp
imul
mov
into
adc
ds
jge
xor
out
movsb
dec
hlt
xor
xchg
dec
fadd
push
mov
xor
mov
lea
loop
lret
xor
push
into
pop
mov
sbb
xchg
fsubl
movsl
fwait
rcr
fs
addb
sbb
xor
add
cwtl
xlat
and
mov
ljmp
aam
jmp
lock
outsb
cmp
push
adc
ljmp
ss
outsb
adc
add
mov
push
adc
dec
cld
lock
push
push
push
pop
fldenv
out
jo
xchg
fcomps
test
scas
frndint
fmull
aas
adc
fists
movsb
add
xor
mov
pop
mov
out
aas
add
dec
mov
inc
pushf
sbbl
push
push
cwtl
gs
adc
push
sbb
jo
int3
nop
test
jge
dec
sub
inc
test
js
lock
and
subb
outsb
xor
sti
cmp
les
outsb
fsts
mov
aad
xor
arpl
pop
sbb
gs
cbtw
xlat
pop
push
pop
out
jo
jmp
out
or
mov
scas
xchg
mov
and
xbegin
xor
cmp
mov
repz
arpl
daa
sahf
pop
ds
pop
cmp
rcll
imul
jp
pusha
and
fwait
and
into
add
outsl
clc
lods
cmp
jle
mov
addr16
lods
xchg
jmp
movsb
stos
mov
dec
jns
mulb
xchg
pop
dec
int3
add
xor
std
lcall
xchg
or
mov
mov
ja
sub
add
inc
push
movsl
dec
mov
addr16
pop
sarl
out
add
mov
js
mov
sub
aad
lret
mov
mov
hlt
or
cmp
cmp
mov
inc
jns
or
test
pop
mov
rcl
mov
lcall
out
mov
aas
sbb
popf
inc
ljmp
push
jne
leave
xlat
aas
sarb
fisttpl
push
nop
xchg
outsl
push
mov
push
jmp
and
mov
ss
shl
fisttps
pusha
mov
sarl
insl
pusha
push
jl
enter
dec
aam
ds
test
xchg
sbb
hlt
mov
add
scas
fs
gs
dec
xchg
dec
sbb
mov
add
adc
cmp
rolb
mov
inc
outsb
jmp
jo
xor
jg
jg
repz
push
jae
stos
and
inc
xor
roll
je
fistl
imul
add
xrelease
pusha
lods
shlb
jle
jbe
int3
xchg
in
xchg
xchg
inc
rol
insb
push
ss
mov
ret
sbb
cmp
int
arpl
inc
gs
dec
sub
sbb
jno
and
daa
mov
adc
test
fildll
or
inc
fnsave
fistl
jge
decb
inc
iret
mov
daa
and
mov
xchg
jne
dec
pop
in
incl
popf
ja
aam
fnstcw
lock
sub
es
pop
dec
pop
test
or
xchg
mov
pop
pop
out
sub
mov
nop
nop
jle
xor
jae
xchg
cmp
inc
gs
scas
pop
addr16
ljmp
aam
add
sbb
insl
xchg
sarl
mov
movsl
pusha
sbbb
iret
js
ficoml
pusha
mov
and
jns
repnz
pop
test
call
xor
mov
lea
das
pusha
push
fisttpll
scas
int
insb
sub
mov
lods
pusha
push
test
push
shrb
lret
flds
cli
das
jmp
pop
cld
lret
fnsave
mov
nop
adc
arpl
in
jo
xor
aas
sbb
xor
push
popa
cltd
xchg
or
cmc
call
xchg
insl
pop
aas
scas
fisubrs
shll
xchg
adc
cmp
jg
js
leave
lds
mov
addr16
push
pop
pop
jg
and
cmp
daa
insl
mov
jg
sbb
add
les
mov
adc
xor
mov
xor
ja
push
adc
popf
mov
bound
push
stc
cmp
cmpsl
pop
and
or
sbb
and
push
sbb
lcall
insb
mov
xor
call
jbe
pop
into
jge
lock
popa
pusha
add
popl
push
lret
mov
mov
ljmp
lcall
dec
jmp
notb
cmc
sbb
fidivs
test
ret
outsl
int3
inc
imul
testl
inc
shrb
push
fimull
fmul
mov
rolb
xchg
mov
jbe
or
sub
inc
pop
jae
sbb
cmp
adc
or
and
cmp
sbb
scas
inc
push
mov
xor
loopne
mov
mov
mov
das
test
fnstcw
dec
lds
inc
movsb
loopne
dec
or
dec
mov
out
lods
mov
inc
or
lock
and
aam
cmpsb
test
aas
fsubr
lock
sub
mov
outsb
iret
adc
rcrb
inc
push
adc
jl
dec
outsl
dec
mov
jmp
sub
mov
pop
jmp
sarl
or
pop
in
push
sub
test
gs
movsl
jg
dec
stc
push
rolb
loope
dec
sahf
mov
sub
cmp
mov
sub
cmp
adc
jno
dec
adc
and
dec
inc
sbb
repz
mov
mov
xor
and
jne
or
iret
xchg
test
or
sub
mov
add
ja
sbb
push
or
lods
dec
inc
add
inc
jb
punpcklbw
inc
pusha
and
test
stc
pop
mov
jne
pop
cld
and
sub
pop
cmpsb
xchg
or
jp
dec
jno
xor
push
outsl
ret
cmp
jmp
fldl
sarb
add
sbbb
pushf
aas
hlt
cmp
cltd
pop
sbb
ficoms
mov
pop
jl
sbb
call
cs
clc
and
incb
xchg
sub
jns
mov
push
ss
lcall
xchg
pop
mull
or
push
lods
mov
sub
jmp
sbb
inc
mov
sbb
ss
jl
das
push
push
xchg
and
subl
gs
jb
scas
fcmovnu
xor
int3
mov
lcall
popf
mov
rcrb
popf
lds
add
pop
sbb
popf
enter
movsl
inc
pop
and
int3
imul
adc
aas
sub
lea
cltd
xor
mov
fs
sub
dec
or
fs
mov
test
fistpll
popa
es
sub
repz
or
into
fiadds
mov
aaa
pop
outsb
nop
movsb
pslld
loop
jmp
xchg
or
and
and
sub
fcomps
imul
ret
jnp
lds
sub
rcrl
lret
dec
ja
loop
mov
ret
dec
cltd
lock
in
cwtl
push
lret
cmp
jmp
pop
popa
push
clc
ljmp
lahf
cmp
shll
xorl
mov
idivb
inc
std
xchg
cmc
dec
cwtl
and
and
out
fldcw
gs
lcall
add
rcrb
dec
ds
fwait
cmpsl
dec
dec
sbb
cld
or
xchg
xor
sub
pop
sbb
int3
or
sti
loop
scas
aaa
stos
cmc
dec
adc
push
cmp
push
imul
les
push
scas
subl
je
scas
push
ffreep
popf
sub
scas
or
push
and
outsl
adc
out
mov
xchg
inc
icebp
mov
or
jle
jno
or
mov
out
or
xlat
xchg
jecxz
pop
sub
frstor
hlt
xchg
inc
mov
lcall
sbb
inc
pop
insl
mov
fbstp
sbb
or
imul
dec
jns
cs
mov
mov
repnz
pop
xor
stos
jl
jns
out
cmp
loopne
sqrtps
sbbb
sbb
aad
into
inc
jmp
cmpb
push
out
mov
mov
or
add
cld
leave
in
out
test
repnz
cs
cmp
jle
or
xchg
mov
in
int3
cmc
jecxz
mov
and
aad
or
push
mov
jecxz
add
js
lret
leave
in
icebp
dec
leave
cld
inc
ret
subb
push
cs
sbb
test
cwtl
mov
hlt
sub
imul
ret
lods
mov
sub
int3
inc
enter
add
mov
cwtl
push
lea
add
mov
iret
lret
lret
jb
sub
and
mov
inc
sbb
add
je
pop
mov
push
xchg
jbe
cmp
out
and
cmpsb
mov
cltd
lods
mov
mov
out
or
fcomps
fxch
cwtl
or
or
pop
hlt
mov
sub
push
push
fiadds
push
ret
lds
and
jbe
xchg
pusha
in
cltd
adc
jmp
mov
std
decl
mov
les
out
sbb
pusha
int
rol
mov
cltd
outsb
sub
aas
and
xchg
int
aad
lcall
test
push
xor
idiv
pop
gs
sbb
inc
je
pop
jmp
add
lds
and
mov
push
leave
and
es
mov
mov
cmp
icebp
sarl
cltd
lds
iret
xchg
mov
dec
fwait
mov
shrb
andl
sub
and
mov
clc
aas
fwait
lcall
fidivs
arpl
orb
or
je
lcall
mov
stc
lahf
hlt
pop
mov
aad
frstor
gs
cwtl
and
shr
repnz
fwait
mov
sbb
aaa
dec
cmpsl
xor
in
and
sarb
pop
cmpsb
scas
mov
shrl
push
cmpsb
iret
stos
and
cmp
stos
pop
add
aam
out
jge
idivl
rolb
out
cmpsl
mov
cmp
xchg
mov
lods
out
int
rolb
jae
mov
sub
repz
je
daa
inc
push
dec
pushf
js
lds
mov
inc
iret
ljmp
ljmp
stos
cmp
popf
lret
xlat
sbb
pop
and
or
dec
cmp
add
subb
shll
divb
mov
xchg
daa
and
jb
int
xor
stc
mov
inc
inc
call
lods
mov
sarl
repnz
jmp
sub
mov
sbb
movsb
into
cmp
fsubr
or
ficompl
mov
aaa
xlat
mov
es
and
push
lds
outsb
cmp
sbb
lret
jbe
sub
gs
pop
lret
push
mov
cmc
sarl
movsl
adc
jnp
lods
push
fsubl
out
lods
jge
add
mov
ds
dec
mov
lret
test
sub
mov
mov
repnz
mov
das
call
mov
scas
out
or
out
imul
lock
movsb
push
and
push
scas
and
xchg
sti
in
mov
mov
mov
ljmp
push
and
cmp
lea
mov
or
adc
test
adc
or
out
popf
mov
push
inc
mov
int3
scas
movsl
scas
xchg
push
push
jnp
daa
jecxz
push
sub
daa
les
fnsave
lret
stos
push
jle
out
fiadds
imul
add
pop
sub
sub
imul
loopne
xchg
aaa
dec
in
xlat
add
sub
test
rorb
sar
cmc
pop
cmc
rcll
add
dec
jns
mov
cltd
mov
hlt
faddl
std
adc
or
fmull
lret
imul
or
jnp
gs
lret
repz
das
pop
addr16
dec
sbb
and
mov
mov
icebp
es
sti
sbb
leave
inc
subb
mov
sub
mov
addr16
pop
pop
push
jl
arpl
aam
adc
hlt
das
sahf
aam
push
out
add
aaa
popa
incb
fimull
enter
sbb
xor
ds
xchg
ds
sub
adc
dec
dec
adc
sbb
aas
cli
mov
jmp
or
pop
jnp
sbb
push
xchg
js
clc
lcall
ljmp
dec
xchg
mov
and
xor
fdivrs
in
scas
sub
inc
mov
fs
xlat
inc
mov
mov
add
ds
jle
out
iret
jl
test
mov
add
cmp
sub
add
aaa
xor
jbe
push
and
dec
cs
lret
addr16
out
repz
dec
shrb
out
in
movsl
std
and
add
mov
jne
sub
pop
ror
jo
mulb
jns
out
sub
jmp
mov
fs
jnp
push
xchg
xor
imul
sbb
pop
mov
dec
insl
bound
and
or
mov
xchg
cld
xor
cmp
and
push
popf
cmpsb
mulb
aad
and
pop
jg
push
fldt
jae
push
jo
inc
aaa
je
lcall
pop
pop
cmp
sbb
xorl
pop
mov
int
je
mov
test
rcrl
mov
adc
push
xor
mov
int
mov
shrb
leave
sub
jg
fadd
repz
mulb
jle
icebp
imul
cli
lcall
push
mov
dec
mov
icebp
popf
sub
mov
leave
push
xchg
pusha
adc
inc
outsl
sbb
inc
shlb
add
fstpt
cld
fisubrl
mov
aam
aas
add
jnp
roll
repnz
jns
mov
cmp
inc
cmc
pushf
rolb
test
jae
out
prefetchwt1
or
dec
inc
test
add
sbb
je
mov
sbbb
add
sub
rcrb
rolb
sub
lret
gs
mov
test
mov
pop
sbb
sbb
lcall
shll
incl
scas
push
imul
das
mov
call
pop
and
in
mov
outsb
in
out
filds
out
xor
dec
stos
jne
fimull
lcall
pop
xor
je
pop
cmp
xor
daa
add
or
inc
mov
sbb
push
adc
popa
cmp
pop
fildll
xchg
push
cmp
pop
lahf
shl
cmp
jne
sub
inc
inc
jecxz
add
fucom
xchg
fcmovb
push
js
shl
enter
push
movsb
and
and
and
pop
shrl
into
iret
shrl
nop
js
enter
cwtl
loopne
mov
arpl
inc
sbb
adc
mov
je
das
inc
push
shll
xchg
outsl
shlb
add
shr
jo
sub
sub
inc
shll
mov
mov
inc
sbb
inc
add
fldlg2
mov
dec
dec
cmpb
lds
icebp
xlat
inc
es
clc
dec
repz
or
push
int3
pop
inc
scas
mov
jae,pt
es
dec
rorl
sub
in
mov
lock
mov
push
bound
jmp
jle
movsl
and
mov
mov
xchg
mov
or
lods
push
jne
add
sub
addl
std
ja
rcl
dec
mov
aam
mov
test
test
jmp
mov
js
loope
dec
js
ljmp
push
and
lret
or
cmp
icebp
shlb
or
cmp
mov
jle
popa
push
jno
sub
hlt
or
test
cltd
sbb
pop
or
xchg
inc
mov
pop
jno
jno
outsl
mov
dec
daa
dec
pop
sub
repz
repnz
cmp
mov
and
sti
adc
or
and
or
jo
sub
sti
sub
xor
mov
mov
adc
mov
sub
pop
outsb
ret
shrd
insb
and
jge
int3
in
jb
sub
stc
xlat
ss
lret
rcll
iret
pop
jg
shrb
pop
and
mov
and
cmpsb
dec
mov
push
push
fldt
insb
jmp
ss
adc
mov
popf
xchg
or
mov
mov
xlat
fbld
bound
cltd
jbe
add
sbb
gs
imul
pop
adc
dec
sbb
ss
lret
sub
mov
out
lds
gs
mov
sbb
movsb
xchg
js
rcrl
fsubrl
dec
push
sbb
add
movsl
cld
out
loopne
inc
movsl
std
mov
add
inc
push
cmp
cmp
popf
fildll
cld
bound
push
jns
pop
adc
push
xor
push
sbb
jns
fistpl
push
shll
outsl
pusha
fbstp
aaa
in
cmc
push
adc
mov
je
dec
rcrl
mov
add
decl
xchg
and
xlat
or
std
scas
mov
jp
jnp
inc
repnz
test
push
aad
lods
stc
push
gs
add
jmp
jecxz
std
in
adc
add
mov
or
inc
icebp
dec
inc
icebp
aam
pop
arpl
push
jge
fsubl
adcb
xor
inc
pop
push
mov
mul
sub
mov
rorl
and
in
adc
push
daa
stc
sub
sub
lret
mov
in
es
cld
dec
ljmp
push
xor
jl
mov
cmp
pop
insb
out
sbb
mov
and
das
push
sbb
shlb
scas
lods
mov
dec
arpl
push
addr16
jnp
or
push
mov
mov
xlat
inc
push
xor
push
sub
shr
fwait
mov
out
gs
cmp
out
mov
ss
mov
popf
out
jmp
mov
addr16
cmp
jle,pt
adc
or
dec
sbb
sbb
push
repnz
inc
shll
arpl
sahf
sub
cmp
lock
jmp
inc
adc
insl
cltd
or
lret
insl
fadds
outsb
adcw
jns
fs
sbb
sbb
sub
pop
push
ret
jg
push
push
mov
sub
out
sbb
and
jns
js
dec
cli
push
jecxz,pt
push
jnp
sbb
push
sub
jb
adc
mov
movsl
fcmovb
mov
test
mov
adc
pushf
adc
mov
scas
stc
pusha
or
scas
out
cmp
xchg
push
inc
sub
and
sub
cli
inc
xchg
aad
and
jb
dec
adc
ja
pop
adc
pop
test
aaa
mov
es
xor
adc
icebp
mov
cld
mov
xor
sub
mov
lahf
dec
mov
aad
xor
test
sbb
cmp
jne
add
jmp
mov
pop
pop
mov
ja
jmp
jl
xchg
fsubl
vsqrtsd
push
adc
test
fcmovnu
pop
shll
lret
sub
fcmovnu
imul
cwtl
jno
leave
insl
test
or
pusha
sbb
lahf
pop
lods
inc
and
push
out
push
std
nop
rcrl
outsb
mov
ret
push
add
sahf
push
mov
push
xor
add
les
or
cmp
jmp
or
cwtl
jnp
sti
pop
or
mov
lock
into
cmp
sub
mov
cmp
jle
loope
lcall
out
xchg
xchg
scas
into
shr
and
dec
inc
mov
mov
mov
sub
cmp
and
stos
push
ss
inc
push
mov
insl
or
rcrb
mov
iret
jmp
pop
push
lock
dec
xchg
add
inc
xorb
icebp
sub
xchg
fsts
aaa
mov
cmp
popa
jge
cmp
hlt
and
rolb
or
xor
push
jl
fwait
das
and
jp
stc
mov
stos
cmp
sbb
imul
pop
cmpl
leave
pop
dec
push
loopne
rorb
mov
iret
pusha
and
outsl
mov
pop
mov
lods
in
inc
sub
inc
push
jnp
bound
dec
ret
icebp
push
sub
mov
hlt
mov
jecxz
out
adc
push
jbe
mov
sar
add
pop
int3
fists
mov
shll
mov
or
stos
loop
pop
aas
stos
lea
cmp
stos
in
out
jle
adc
mov
sub
mov
push
pop
cmpsl
mov
dec
fsubrp
pop
rcll
or
inc
cmpsl
jp
xchg
lret
and
pop
xor
out
sbb
and
and
push
fdivrp
fdivl
sub
sbb
sti
dec
ret
pop
int3
mov
jnp
cltd
xchg
repnz
jp
sbb
clc
dec
jp
mov
sbb
push
stos
notb
sub
daa
test
mov
outsb
cmp
mov
mov
notb
in
outsb
push
aas
pusha
in
pop
inc
repz
xchg
mov
outsl
inc
into
mov
addr16
jno
icebp
sti
mov
mov
xchg
idivl
and
adc
shlb
icebp
inc
data16
iret
jno
lahf
repz
xor
sti
out
shll
push
jp
imul
in
test
enter
and
movsb
mov
inc
xchg
xchg
lods
add
sub
xchg
leave
ds
sbb
lret
lret
cmpsb
mov
and
xchg
data16
jne
push
divps
or
mov
loope
sarl
push
pop
ret
xor
jg
pop
outsb
sub
in
lock
xchg
inc
loop
lods
and
xlat
pop
bound
cmp
dec
push
shl
loope
aas
mov
imul
lds
mov
insb
xchg
jnp
jo
lods
jmp
pop
xlat
xchg
cmp
out
in
ljmp
mov
push
sbb
call
push
rcr
pop
inc
jg
ljmp
xchg
push
and
mov
subl
push
pop
or
mov
rcr
mov
mul
dec
inc
jmp
sub
in
cld
ljmp
mov
jl
lcall
push
rolb
and
cmpsl
xor
pushf
jae
lret
hlt
xchg
jmp
add
pop
out
mov
test
mov
push
cmp
mov
psrld
inc
ret
fcomps
push
pop
inc
sub
dec
lods
movsb
add
inc
ret
imul
mov
pop
roll
out
cmp
add
lock
lock
xlat
sbb
jecxz
int3
ljmp
and
repnz
mov
sbb
rorb
in
xchg
mov
test
pop
mov
test
dec
rcrl
xor
cmp
mov
mov
jp
incb
out
int
and
pop
mov
cmp
xlat
sti
adc
dec
call
sbb
out
xlat
xor
in
jg
inc
ficoml
notl
lret
push
adc
lds
mov
inc
cmp
popl
mov
cltd
subl
mov
sub
out
jns
test
ret
nop
or
scas
inc
cltd
xor
pop
xor
ds
cmp
loope
fs
subb
cmpsb
inc
rcrb
mov
iret
pop
fwait
in
mov
xor
das
leave
jp
out
incl
js
cmp
xor
dec
ret
insb
lock
mov
test
das
gs
aas
lahf
and
cmp
stos
dec
and
pushf
sub
sbb
enter
std
dec
jns
fists
lea
or
sbb
cmp
inc
dec
ja
or
adc
pop
push
popf
or
mov
mov
fisubs
mov
imul
loope
sbb
rorb
cwtl
loop
hlt
lods
shll
push
adc
inc
sbb
and
pusha
push
iret
cmp
aad
or
xchg
fsqrt
pop
xor
aad
add
daa
jb
add
icebp
sbb
in
dec
mov
mov
xchg
sbb
aam
adc
inc
daa
push
sbb
jae
sub
clc
jge
and
call
cmp
inc
pop
xor
popa
sti
ret
xorl
jb
and
fadd
xor
les
fsubrs
push
roll
rcr
add
aaa
roll
and
jge
pop
jge
pop
insb
and
pop
stos
in
aas
inc
movsl
mov
dec
lods
push
pop
pop
pop
xor
xchg
mov
hlt
jp
cmp
lods
div
into
pop
es
in
daa
and
xchg
aaa
arpl
lret
lock
lods
dec
mov
pop
and
and
push
inc
pop
in
add
insb
ret
shrb
add
dec
aad
pop
jo
xchg
or
test
sub
push
repnz
aaa
pushl
scas
imul
pop
lods
mov
push
xchg
mov
dec
inc
pop
mov
sarb
jp
and
rcr
jnp
and
xor
insl
inc
bound
mov
sti
fwait
mov
aam
xchg
push
inc
es
push
jmp
fisttpl
cmp
iret
arpl
cmp
mov
clc
out
and
cmp
test
xor
mov
mov
std
push
insb
std
call
aas
shll
xor
popa
push
inc
pop
sub
cli
mov
aas
adc
inc
xchg
in
popf
lret
rolb
jb
es
call
js
ljmp
repz
mov
aaa
clc
pop
adc
out
movsl
lods
jns
mov
negb
and
dec
jge
cmc
mov
je
flds
aad
enter
outsl
int3
push
sub
inc
sbb
dec
into
mov
bound
sbb
dec
test
test
cmp
aaa
enter
out
xchg
jnp
ret
mov
cwtl
or
out
and
mov
adc
mov
push
mov
les
jbe
push
pop
test
lods
sub
insb
into
dec
pop
jg
and
adc
in
adc
inc
addr16
movl
out
orl
mov
mov
inc
dec
jae
in
ljmp
fcomip
cld
fsubs
je
adc
or
push
sbb
js
xor
fistpl
shlb
nop
jo
test
pop
out
std
push
scas
cmp
jno
xchg
mov
int
addl
jle
arpl
stc
inc
jmp
cmc
push
fcompl
xor
jo
cld
xor
pop
subl
pop
test
pop
out
popa
dec
aaa
rorb
sbb
cmc
adc
lcall
das
add
scas
out
sub
and
sbb
dec
dec
sahf
jbe
loope
push
xor
lods
fildll
lret
xchg
adc
jb
es
loopne
popw
pop
or
in
sbb
mov
daa
std
inc
in
cmc
shlb
inc
idivb
sbb
and
add
xor
in
jbe
xor
ss
push
sub
in
lods
add
xchg
cltd
mov
stc
jp
push
and
into
fcomps
subb
dec
ljmp
xchg
xchg
or
sub
mov
pusha
inc
aad
push
fisubs
sub
stos
call
xchg
jle
les
xor
jge
cmpsb
sbb
dec
je
jg
ljmp
mov
xchg
adc
xor
in
outsb
shlb
mov
lods
xor
enter
or
push
and
ret
push
insl
in
fistl
lock
movsl
je
mov
lret
sbbb
sbb
fcom
je
clc
add
xorb
das
jo
or
bound
mov
sbb
outsb
lock
mov
jle
lods
imulb
ficompl
ret
arpl
push
iret
mov
jo
cmp
fidivrl
lcall
scas
dec
xorl
fdivr
mov
sbb
scas
pop
dec
xchg
cmp
jne
jl
pop
test
mov
push
leave
jl
sub
or
popa
dec
xchg
add
outsl
hlt
iret
sahf
div
dec
pop
add
and
dec
xchg
insl
scas
pop
lcall
mov
mov
push
push
adc
mov
mov
stos
mov
dec
sbb
sub
insb
and
mov
rcll
push
sbb
push
xor
and
xor
and
jl
inc
xchg
sub
in
sti
jle
das
and
jo
xchg
jae
cmpsb
inc
push
mov
enter
dec
sbb
out
sub
dec
out
stos
jbe
jno
xchg
xor
outsl
fwait
hlt
xchg
inc
gs
mov
jge
and
sub
fcmovb
adc
stos
or
push
scas
shlb
cmp
jne
out
push
cmpl
dec
out
fcmovb
std
mov
lea
fwait
add
inc
pop
movsl
mov
or
sub
out
mov
mov
mov
das
dec
jbe
dec
xchg
jnp
push
ret
cmp
out
sarb
ds
lods
loopne
test
stos
mov
les
sahf
ret
test
decb
aad
into
pop
mov
sahf
cmp
cmc
dec
jp
add
repz
sbb
lds
outsb
mov
or
pop
mov
cmp
mov
cmp
outsb
fildl
xchg
sub
push
data16
fistpl
pop
cld
orb
fisttpll
out
cltd
fisubl
and
loopne
mov
lcall
adc
enter
and
mov
or
adc
jbe
mov
xor
sub
pop
daa
outsl
mov
hlt
cmpsl
mov
fxam
and
jp
mov
mov
jge
jp
fcmovbe
dec
or
push
sbb
push
cmp
mov
rcr
xchg
lods
movl
xor
cmp
fwait
adc
movsb
out
push
repnz
movsb
mov
rcl
decl
call
sbb
repz
int3
mov
jcxz
lods
sub
push
cmp
jo
mov
adc
les
out
loop
sahf
scas
mov
inc
pop
lret
push
and
cld
out
fwait
imul
xor
add
xor
add
leave
sti
lock
popf
popa
mov
pop
mov
scas
adc
outsb
in
insl
dec
jo
pop
inc
movsb
test
sbb
fs
adc
jnp
pop
mov
sbb
aad
xchg
mov
push
pop
das
add
jb
aas
cmc
lock
mov
int
mov
mov
mov
aas
imul
lcall
pusha
sbb
or
cmp
sbb
jg
and
mov
jnp
mov
jo
push
dec
mov
daa
inc
lret
je
movsb
popa
add
mov
or
xchg
mov
std
xchg
shll
sbb
mov
mov
pop
adc
shlb
pushf
jge
sub
xor
mov
and
popf
pop
cmp
sub
and
mov
pop
movsl
dec
sbb
or
out
into
repnz
xor
mov
add
sbb
loopne
lret
stc
pop
lea
in
cmp
rolb
sbb
xor
imull
movsb
arpl
jge
scas
sub
out
cmp
dec
ret
push
xchg
aaa
lret
xchg
fdivrp
nop
add
dec
jbe
sub
push
push
push
call
nop
inc
lcall
fimuls
sub
decl
loop
cld
mov
jge
sbb
bnd
pop
aas
shll
and
pop
rcrb
shlb
push
arpl
inc
lea
pop
dec
adc
cmp
mov
ss
rorb
fsubrl
pop
pop
ret
mov
push
mov
aad
or
push
or
jecxz
jne
jns
sub
cmpb
stos
in
inc
out
sarb
mov
aam
lock
ss
jmp
loop
mov
movsl
push
add
fs
jb
cmpsl
les
push
lods
call
inc
sub
mov
mov
add
xor
or
add
adc
mov
xor
cmpsb
add
pop
icebp
push
mov
adc
jp
add
out
je
and
insb
leave
std
roll
xchg
rorb
or
jg
cmp
in
and
adcb
arpl
fs
pusha
negl
jle
ljmp
in
out
stos
aam
add
test
jg
sarl
mov
push
or
data16
or
mov
xor
xor
dec
je
int3
test
cli
inc
aas
cmpsb
add
hlt
outsl
jmp
dec
sbb
push
js
sub
outsl
or
adcb
ret
dec
xlat
mov
test
pop
jae
stc
pop
sbb
idivl
mov
in
cwtl
insl
lret
push
fbld
adc
xlat
movsl
pop
jmp
mov
and
jo
xchg
rclb
xor
pop
int3
test
loopne
js
dec
std
pop
cmc
mov
std
mov
xchg
loopne
inc
mov
ds
push
sub
push
into
lcall
icebp
push
mov
sub
add
in
mov
mov
pop
dec
shrl
xchg
push
jle
xorb
sahf
shl
out
stc
mov
ficoms
cmp
mov
pop
jbe
fiaddl
or
in
int3
adc
mov
xor
and
inc
mov
jb
jo
rorb
out
decl
cmpsl
inc
rcr
sar
push
mov
stos
scas
jo
sub
push
rcll
jo
ds
outsb
arpl
mov
aad
cmpsb
pop
mov
loope
push
xchg
or
arpl
inc
sbb
leave
shll
push
and
cli
xchg
test
mov
jl
and
mov
pop
xor
mov
jmp
bound
sub
popf
fcoms
setbe
push
icebp
fdivl
aas
stc
iret
xchg
in
gs
mov
or
xchg
push
insb
pusha
add
idivb
jae
adc
ds
movl
xchg
iret
inc
mov
int3
push
hlt
cmp
stos
push
cli
flds
icebp
std
cmp
sub
mov
fwait
cmp
fisubl
mov
rcr
adc
clc
std
push
pop
xchg
cmp
es
cmp
add
jo
or
xchg
jl
jno
hlt
xlat
insl
cmp
dec
lcall
xor
adc
mov
cmpsl
lods
fisttps
jp
lods
add
or
test
or
xor
mov
dec
sar
in
jo
in
ds
xchg
xor
jmp
rorl
aad
dec
cmp
adc
push
movsb
inc
js
dec
daa
xchg
dec
lods
bound
lahf
cmp
xchg
xchg
push
mov
pop
gs
xchg
jg
dec
insl
cmp
push
les
gs
jmp
adc
pop
notl
stc
insb
xchg
gs
sub
addl
xlat
lret
icebp
mov
test
aaa
js
pop
ret
rcl
ret
push
jle
sbb
push
popf
push
sub
fdivrl
dec
adcb
cltd
stos
push
notb
xor
cmc
sub
jnp
dec
loope
sbb
mov
mov
mov
mov
mov
or
push
xchg
mov
test
cmp
mov
cmpsb
cli
lahf
stos
sbb
bound
mov
ds
clc
push
jb
or
arpl
mov
ret
nop
mov
clc
scas
enter
adc
lret
rcrl
mov
cmc
push
cmpsb
xchg
loope
mov
out
iret
dec
adc
mov
lret
inc
cmp
mov
cltd
add
mov
push
jne
les
dec
pop
sahf
jno
idivl
clc
popa
ret
mov
push
push
mov
lds
ja
xchg
les
stc
insl
insl
stos
mov
pop
pop
nop
aam
dec
pusha
mov
fchs
pop
mulb
sbb
nop
push
mov
or
into
mov
lret
stos
sbb
imulb
adc
test
fiaddl
aaa
sbb
cmp
jecxz
mov
insb
and
imul
mov
jns
or
int
dec
mov
mov
nop
stc
mov
xor
xchg
inc
sub
lret
sub
je
pop
sub
sub
enter
sub
fnsave
adc
loop
repz
cltd
xchg
and
icebp
xchg
mov
dec
repnz
mov
cmp
pop
pop
add
xor
xchg
shrb
sbb
adc
in
in
xchg
in
lock
xchg
inc
xchg
mov
xor
xor
popa
jnp
movsl
add
push
lods
faddl
shrl
test
mov
lea
leave
mov
push
lea
push
sbb
out
mov
cli
cs
repnz
pop
movsl
or
sub
pop
xchg
or
pop
lock
popf
or
mov
pop
enter
loopne
hlt
movsb
or
lret
inc
aas
mov
outsb
push
jne
repnz
ljmp
js
imul
and
mov
cli
jl
icebp
xor
xchg
dec
mov
push
cmp
sub
loopne
fs
cmp
lea
xor
cmp
xchg
xor
iret
dec
arpl
scas
mov
mov
scas
xchg
xchg
fdiv
mov
sbb
push
add
or
mov
mov
pop
scas
stos
xchg
push
enter
dec
mov
icebp
mov
mov
movsb
movsb
out
xlat
xchg
dec
adc
or
jo
stos
rclb
rcrl
xor
fbstp
outsl
or
pop
jle
push
sarb
pop
jl
cmp
gs
pop
out
call
outsb
lret
vunpckhps
cmp
jecxz
and
ret
xchg
fiadds
mov
fldl
sahf
mov
sbb
mov
orl
jecxz
mov
test
mov
fs
jnp
sbb
sti
loope
out
push
insl
cld
or
mov
push
negb
mov
addr16
mov
sbb
mov
mov
aad
sub
mov
sub
mov
mov
lds
push
mov
rol
adc
jbe
pop
push
fiaddl
mov
mov
cmp
and
jno
push
xor
jecxz
sub
xchg
xor
stos
push
mov
jg
xchg
ljmp
fs
xor
lea
or
sbb
xor
dec
cmpsb
add
lret
add
into
sub
push
lods
add
test
push
ret
jge
loope
shlb
mov
dec
leave
shr
es
xchg
fistps
cmp
mov
pop
cltd
xchg
add
sub
sahf
gs
int3
jnp
mov
or
sbb
shr
sbb
fnstenv
enter
xor
std
add
cmpsb
dec
lret
sar
push
pop
fisttpl
clc
add
xlat
xor
movsb
rclb
std
int3
or
inc
cwtl
xor
inc
xor
or
xchg
cltd
lahf
add
add
inc
cld
and
xlat
es
sub
push
adc
pop
mov
jecxz
es
push
jae
test
adc
jl
in
mov
pop
mov
mov
mov
or
jg
fnstsw
pushf
cmpsb
or
je
test
ret
incb
in
mov
jp
push
sub
fldl
mov
xlat
pop
and
push
adc
cld
fistl
xor
les
ss
and
fstpt
test
cmpsl
jnp
into
pop
cwtl
xchg
leave
popa
into
lcall
rcrb
adc
push
adc
mov
mov
push
cmp
fiadds
sahf
mov
fcomps
xor
repnz
mov
dec
pop
cmpsl
pop
ret
dec
movsb
dec
ficoml
jge
adc
push
dec
sahf
sub
jbe
cli
add
push
push
inc
mov
push
out
or
mov
xchg
cmp
pop
lods
dec
dec
pop
nop
pushf
pusha
lahf
jg
rcl
adc
or
cmp
mov
mov
sub
lock
jl
iret
pop
arpl
mov
ja
xor
imul
lods
mov
fiaddl
jae
xchg
mov
jecxz
pop
leave
insb
adc
pop
repz
xor
stc
dec
mov
popf
jnp
cmc
jle
daa
push
addr16
cli
ja
mov
mov
or
lock
xchg
adc
aaa
sbb
push
je
insl
data16
sub
ljmp
stos
fs
jg
lods
scas
mov
mov
pop
fcmovbe
popa
lods
pop
lret
in
loopne
lret
xor
push
adc
lea
scas
shrl
mov
adc
fdivr
pop
dec
dec
mov
mov
mov
enter
sbb
in
imul
mov
mov
gs
or
jge
cmp
iret
lock
movntps
les
jne
lods
dec
inc
clc
lods
cmp
or
cmpsl
cmp
aaa
mov
xchg
xchg
jns
mov
dec
shll
enter
or
xor
mov
movsb
xlat
push
adc
adc
jle
std
scas
push
test
loope
jp
xchg
dec
pop
insb
int3
ja
iret
jmp
or
stc
testl
js
gs
jnp
imul
xchg
std
adc
dec
mov
mov
jo
mov
ret
outsb
xchg
push
mov
inc
mov
add
and
mov
inc
xor
sub
aas
stos
in
fcomps
pop
push
inc
jbe
lods
inc
cld
fwait
rcll
jns
jp
xor
std
pop
xchg
in
add
fistpll
sahf
pop
in
lahf
jne
pop
loopne
inc
jmp
mov
cmp
xchg
stc
pop
arpl
loope
pop
inc
jl
das
cltd
repz
xchg
xor
jp
or
icebp
adc
lods
mov
test
out
ds
cld
or
xchg
mov
push
fwait
mov
fcomp
or
dec
mov
sbb
clc
in
inc
nop
lds
dec
pop
mov
inc
daa
aas
sub
inc
pop
push
scas
and
out
aad
mov
lret
mov
add
addr16
xorl
aad
notb
insl
cmp
pop
andb
inc
aad
dec
pop
popa
bound
and
dec
pmuludq
or
add
and
inc
pop
cmp
xchg
cs
addr16
call
call
jmp
int3
pop
mov
mov
push
inc
popf
in
lahf
hlt
cmp
shrl
lcall
push
sub
stos
dec
jnp
fs
push
mov
sahf
xor
xor
mov
in
shl
or
push
out
aad
enter
roll
lock
int
xor
jle
push
adc
xor
int3
scas
imul
jle
pop
cmp
sub
add
jge
js
fwait
stc
fisttpll
push
dec
sti
jno
cmp
cmp
mov
mov
scas
std
sarb
gs
xchg
pop
mov
mov
jns
mov
shrb
sbbb
or
clc
pop
dec
or
test
inc
pop
and
shlb
stos
cwtl
les
idivl
rolb
negl
sbb
inc
and
aaa
and
dec
test
std
add
aaa
mov
pop
clc
adc
xchg
mov
sbb
push
fs
mov
shrb
ljmp
jp
adc
push
mov
in
jp
mov
push
fistl
cld
push
sub
mov
inc
mov
je
int
outsl
loope
xchg
jne
std
mov
int3
neg
fstpl
pop
sub
loopne
push
push
enter
loope
mov
pop
inc
loopne
and
push
fcmovu
repnz
hlt
jp
fs
xchg
inc
dec
ficoms
mov
xchg
xor
insl
dec
mov
cltd
inc
call
jle
add
xor
sub
cmp
inc
movsl
sub
mov
push
ror
addl
js
scas
inc
jmp
sbb
pop
out
andl
jb
fs
and
lods
push
jo
pop
ja
js
arpl
mov
movsl
and
jge
aas
fadds
dec
shl
xchg
mov
das
hlt
cmp
popf
les
jl
sbb
sbb
jmp
push
and
xor
scas
push
adc
mov
mov
shll
xchg
mov
xchg
or
jle
stc
rcrb
xor
enter
subb
or
out
out
mov
xchg
push
push
mov
xchg
push
gs
outsl
in
aaa
push
add
out
sbb
jbe
pop
mov
scas
lcall
mov
inc
inc
test
jns
inc
jecxz
mov
leave
lret
enter
or
xor
mov
test
xor
loop
out
push
add
jmp
add
insb
hlt
xor
imul
add
popf
aam
jp
outsb
sub
sbb
jbe
insl
xor
fcmove
es
add
movsl
jle
test
sbb
or
xchg
shll
in
les
popf
xchg
cmp
or
stos
mov
and
movsb
mov
fwait
mov
xchg
mov
jae
and
fwait
dec
mov
test
mov
mov
test
mov
aaa
cwtl
xchg
dec
mov
sub
mov
imulb
pusha
inc
mov
js
pushf
insb
mov
imul
movsl
aad
out
xor
movsb
xchg
and
fimuls
fcompl
imul
fnstenvs
mull
sti
rcl
loop
adc
sbb
and
jecxz
daa
inc
leave
daa
push
int3
pushf
fcmovb
lahf
jmp
sti
in
hlt
pusha
inc
popa
pushf
sbb
outsl
add
cwtl
roll
mov
xor
ljmp
and
pop
mov
lds
cltd
fldenv
call
std
pop
out
loop
sar
adc
movsb
fldl
out
es
pop
ja
jmp
test
push
adc
mov
xchg
mov
hlt
fdivr
fdivrs
sbb
ss
sub
out
out
lahf
call
mov
mov
xchg
inc
test
jbe
negl
cmp
loop
lcall
hlt
lret
cld
cmp
jmp
hlt
repz
add
adc
or
pushf
jg
push
sbbb
in
lods
pop
and
call
nop
jg
dec
add
test
mov
fcompl
mov
pop
adc
cmp
cmp
test
out
imul
jg
pop
mov
jbe
imul
add
fsts
lret
lret
mov
mov
gs
adc
pop
sub
inc
mov
xor
in
flds
cli
dec
mov
shll
into
cmp
test
aam
adc
imul
aad
jo
test
inc
mov
pop
scas
push
mov
enter
adc
lret
adc
mov
lret
add
jge
xor
jl
pop
fldt
push
jecxz
ss
and
movsl
cmp
imul
ljmp
call
icebp
stos
jle
dec
jecxz
jg
stos
stos
popf
jns
adc
sarb
les
into
and
cltd
mov
pop
adcl
mov
mov
sub
cltd
cltd
push
fstl
jp
cmc
mov
lret
cmp
sbb
fs
fcomps
idivb
icebp
add
cmp
mov
les
sbb
push
jle
lcall
cmp
jmp
sub
sbb
call
xchg
out
sbb
imul
push
sub
push
pop
adc
sti
scas
bound
pop
jl
js
inc
pop
jmp
or
inc
enter
sbb
jle
mov
orb
jno
loope
adc
add
lret
mov
test
adc
stc
sti
xor
xchg
iret
xchg
dec
or
xlat
xchg
je
mov
fimuls
aam
mull
out
lds
stos
xor
sbb
cmpsl
xchg
xor
loopne
je
mov
out
or
jno
lea
sub
arpl
mov
cmpsl
loopne
sub
xchg
test
loop
stos
lcall
mov
mov
ret
sbb
push
fstpl
scas
mov
fstl
inc
jmp
add
cs
arpl
pop
or
pop
adc
div
xor
jmp
aaa
sbb
mov
push
pusha
mov
popf
loope
pop
sbb
mov
lret
jno
ret
popa
out
repz
out
loope
sbb
mov
cmp
repnz
pop
data16
sbb
dec
std
add
jne
jnp
pop
cmp
mov
dec
out
pop
push
cmp
addl
mov
pop
fbstp
orl
push
or
pop
pop
sub
inc
call
aas
repz
fcomps
jns
fidivrs
repnz
cmp
mov
mov
push
and
pusha
inc
lock
js
stos
arpl
mov
aas
cwtl
inc
xchg
mov
sub
jl
xor
in
sahf
test
push
and
jns
pop
mov
pop
add
or
sti
cld
sahf
jl
js
leave
xor
fisttpll
xchg
test
jae
push
cltd
in
mov
adc
int
sbb
ljmp
fnclex
jl
psubusb
mov
mov
daa
js
mov
movsb
in
pusha
lahf
pop
mov
xlat
and
jae
sahf
sub
test
dec
inc
dec
adc
xor
in
aam
je
mov
repnz
das
adcl
hlt
cli
mov
push
hlt
fisttpll
jne
mov
lods
movsl
push
pusha
insb
fistpll
or
mov
ja
inc
and
ret
or
bound
in
dec
xchg
movsb
clc
mov
and
clc
sar
or
ss
mov
loopne
lods
and
loope
idivl
mov
mov
and
dec
inc
and
mov
sub
int
rorb
inc
jmp
mov
lahf
mov
test
inc
jo
aad
adc
fsts
xorl
dec
lods
mov
add
clc
ss
fcoms
das
repz
cli
pop
push
jecxz
adc
test
je
push
popa
push
xchg
jmp
ljmp
imul
and
push
add
into
pop
and
push
mov
out
mov
inc
imul
pop
jno
scas
mov
insb
hlt
inc
test
mov
fs
mov
push
cmc
push
dec
dec
out
aaa
cltd
cmpsl
in
or
push
cltd
adc
push
or
mov
insl
maskmovq
mull
rcrl
js
stc
loop
dec
stos
dec
out
mov
arpl
adc
pop
inc
sub
mov
mov
repnz
add
movsb
fsubs
flds
ljmp
add
popf
addr16
jl
pop
push
jo
hlt
push
es
sub
cmp
and
repz
frstor
movsb
pop
mov
xchg
pushf
dec
mov
jge
inc
sbb
mov
adc
lret
xchg
sbb
leave
push
jbe
mov
push
push
xor
mov
cmpsb
mull
xor
xlat
push
add
cmpsb
test
adc
mov
fiadds
sbb
arpl
aad
pop
mov
scas
pop
int3
pop
pusha
xor
cli
scas
sub
out
int3
outsb
jecxz
out
jg
dec
sbb
jns
mov
adc
repnz
in
dec
call
sbb
clc
jmp
stos
mov
mov
lods
cmpsb
dec
xchg
xorl
dec
rorb
scas
movsl
dec
imul
leave
in
lahf
pop
xor
jecxz
jp
sub
dec
lcall
lods
pop
int3
inc
gs
fnstcw
sub
lret
push
jp
mov
mov
jmp
mov
addr16
jle
mov
out
loope
xor
mov
and
mov
shl
in
dec
sbb
xchg
shlb
jns
outsb
xchg
mov
mov
inc
pop
lcall
jne
repz
cmp
pop
xor
jnp
dec
dec
out
shl
icebp
pop
ja
sub
mov
ds
imulb
mov
test
popa
push
ljmp
fists
mov
lods
xor
pushf
dec
sbb
fstl
adc
mov
aad
loope
pushf
push
xchg
xor
xor
lods
cmp
pushf
clc
mulb
add
pop
and
mov
and
cli
stos
sbb
clc
repz
orb
mov
push
adc
repnz
xchg
mov
cmpsl
ja
out
or
dec
addr16
call
fnsave
notb
push
xchg
mov
push
mov
les
outsb
sahf
mov
fnstcw
mov
push
push
sub
out
mov
popf
pop
in
cltd
enter
mov
movsb
jns
rolb
pop
adc
adc
cmp
or
insl
addr16
pusha
jbe
inc
pop
test
lcall
pop
imul
cmp
or
cmp
and
ljmp
ret
stos
or
add
ret
push
xchg
fstpt
in
and
cmpsl
lock
jl
jmp
sbb
fwait
movsb
ss
xlat
lock
rclb
dec
or
sbb
int3
rcl
repnz
repnz
shll
loope
xor
lds
cmp
stos
push
push
ljmp
sbb
dec
mov
jle
push
pop
push
jmp
cld
clc
push
jmp
push
push
sbb
sbb
mov
testb
adc
ds
fstpl
xchg
jno
jae
gs
std
cli
mov
mov
jp
lret
mov
in
xchg
rorl
loope
mov
xchg
scas
inc
sbb
push
push
adc
stos
xor
xlat
pop
inc
mov
pop
enter
int
cmp
mov
movsbl
jnp
nop
pop
movsl
mov
pop
push
jl
adc
bnd
daa
out
lods
ss
add
movsl
ret
push
dec
xchg
inc
mov
mov
loop
push
dec
ret
pop
push
cmpsb
dec
jno
repnz
fimuls
jbe
shll
mov
xlat
int
imul
jecxz
test
xor
movsl
pop
in
push
roll
and
cmc
cmpsl
repz
dec
lret
cmp
sub
jns
add
inc
push
sub
in
push
inc
out
lods
icebp
xchg
mov
inc
repz
pxor
mov
sub
cmpsb
gs
dec
bswap
fisttpll
xor
jo
ljmp
es
jp
lds
mov
mov
xchg
mov
cmp
mov
movsb
enter
sub
in
sarb
pop
cmpsb
jle
insl
lods
add
sub
jbe
push
push
fmuls
test
ljmp
push
jle
jp
lret
cmp
inc
imul
adc
mov
cwtl
cwtl
adc
out
sarb
dec
popf
mov
in
mov
in
xchg
pusha
cmp
cmp
outsb
shl
pop
add
add
and
jecxz
mov
and
pop
aad
push
mov
test
cmpsb
jmp
lcall
testb
push
fwait
shlb
fwait
or
leave
push
inc
and
leave
push
inc
ss
pop
ds
jbe
cmp
ss
inc
rolb
and
dec
inc
fs
jle
lcall
push
leave
scas
fsubrs
mov
dec
jl
shl
aaa
push
mov
mov
pop
xchg
in
push
scas
sarb
and
jo
adc
das
add
fists
adc
in
aam
gs
push
call
scas
inc
in
jmp
push
sbb
jg
filds
jbe
pop
fidivrl
push
or
lock
sbb
mov
icebp
out
pop
jp
xchg
pusha
fsubr
mov
mov
jl
movsb
lcall
pop
pop
mov
lret
aas
mov
lods
movsb
mov
xlat
jno
push
dec
push
sub
dec
push
mov
aas
xor
mov
or
test
in
sti
mov
and
addb
mov
lcall
pop
mov
or
adc
outsb
cmp
leave
push
dec
inc
mov
shlb
mov
inc
jmp
push
xor
out
push
aas
xor
sbb
jae
stos
mov
incl
divl
add
xchg
pop
push
aaa
xchg
scas
mov
cmp
sub
fistl
cmc
or
sarb
xor
out
push
dec
aam
or
lock
push
cmc
pop
ficoms
ja
xor
ss
push
jp
mov
insb
ja
mov
jmp
adcl
sbb
adc
inc
jge
stos
cmp
push
pop
mov
push
dec
out
dec
dec
ret
xchg
mov
in
or
cmp
cltd
mov
fidivrs
push
or
call
pop
mov
mov
mov
mov
jbe
call
dec
sbb
sbb
bound
sbb
aam
push
lcall
dec
cmovo
jb
rcl
sbb
add
icebp
stos
xor
hlt
mov
cmp
into
icebp
je
sbb
mov
mov
cmp
pop
mov
push
mov
loop
add
push
pop
sbb
popa
xchg
xor
adc
xchg
sub
jns
and
add
stos
dec
imul
std
in
cmp
lea
clc
mov
cltd
or
scas
or
shr
outsb
sub
xchg
adc
aam
push
lret
fldl
dec
push
bound
sbb
pop
dec
and
mov
mov
jno
std
pop
test
dec
out
js
ror
or
mov
imul
xchg
imul
and
pop
into
punpcklwd
xchg
jp
int3
mov
pop
repnz
into
addl
in
push
xor
push
push
jp
inc
outsl
fcomi
inc
push
mov
adc
jae
mov
in
es
pop
xor
in
enter
repnz
jle
xchg
sub
sti
rol
and
inc
es
and
push
jle
fwait
out
lods
std
scas
inc
cmp
outsb
loop
push
pusha
std
mov
loopne
pop
jge
mov
lods
mov
lcall
mov
int
pop
mov
bnd
push
push
fcompl
outsl
adc
xor
shlb
mov
push
mov
push
int
or
push
aam
xor
sti
jae
aad
aad
imul
xor
and
mov
pop
jne
fs
out
outsl
push
inc
lcall
stos
imul
dec
stos
ja
shrb
fcmovnb
test
int3
adc
psrlw
enter
adc
stc
insl
jmp
es
cmpsb
dec
dec
mov
add
cmp
lods
sahf
stos
pop
cltd
push
aam
lds
lods
xor
push
dec
jb
sahf
js
mov
dec
jge
adc
int3
loope
inc
aas
jmp
add
adc
bound
leave
cmc
ror
dec
cwtl
jmp
div
sbb
jmp
fs
notl
sub
sbb
sti
movsb
sbb
add
push
test
mov
insl
fisubl
mov
jecxz
test
lret
fucomi
xchg
cmp
out
mov
cmpsl
pop
jb
inc
js
push
rclb
adc
cmp
cmc
addr16
lods
mov
fmull
orl
pop
dec
imul
push
test
mov
data16
clc
or
push
xor
push
xchg
push
mov
mov
sbb
jecxz
scas
sbb
mov
xchg
je
shlb
push
add
pop
add
std
outsl
mov
adcb
sbb
arpl
lea
jl
jae
inc
test
rcrl
dec
in
dec
sbb
push
or
pushf
das
jle
cmpsb
push
faddl
iret
xchg
lods
in
mov
cmpsl
mov
scas
mov
add
test
test
inc
subl
movsb
ret
push
xor
stc
shrb
fidivrl
xchg
pop
mov
push
mov
push
arpl
imul
ret
sbb
test
lea
pop
cld
aaa
inc
jbe
imul
mov
arpl
inc
jne
sbb
popa
outsl
push
inc
stos
cli
and
in
fs
dec
aad
das
ja
test
rcrb
rorl
rorb
cmp
xlat
push
lods
push
mov
loop
push
xchg
xlat
mov
pop
fs
adc
push
pcmpgtb
pop
lds
pushf
adcl
add
adc
cmpb
adc
mov
or
lcall
stos
in
dec
jg
xchg
dec
mov
xor
mov
dec
shrb
inc
inc
fmulp
jno,pt
icebp
les
lods
movlps
out
pop
imul
scas
pop
testb
xlat
int3
adc
sbb
stos
xchg
adc
out
xor
jecxz
repnz
into
push
xorb
in
sti
lcall
sti
mov
xchg
cmpsb
vpaddusw
lods
addb
outsl
fistpl
sbb
jmp
push
sub
push
and
inc
out
xor
pusha
outsb
pop
dec
xchg
test
and
jg
push
scas
pop
sub
push
cs
xor
push
xchg
add
ss
xchg
imul
mov
inc
les
orb
and
add
cs
aaa
cmp
aas
xchg
jmp
push
adc
stc
jle
int3
push
inc
add
sbb
pushf
out
sbb
push
mov
jle
dec
shl
add
mov
je
fstpl
repnz
subb
movsb
adc
inc
std
cmp
push
and
adc
in
pop
sahf
aam
xchg
pop
xchg
test
dec
add
pop
mov
xchg
int
add
xor
jecxz
je
js
in
int3
mov
inc
sbb
jne
mov
int
hlt
xchg
mov
repz
pop
sub
push
push
push
mov
test
ljmp
enter
sbb
fdivs
cmp
cmp
sbb
pop
cmp
imul
rorb
cmp
fcomps
pop
fidivs
repz
fildll
lods
pop
dec
xor
ljmp
mov
aad
xor
rolb
fistps
inc
bound
fs
arpl
rcl
sbb
aad
shlb
xor
and
push
out
dec
xchg
sub
mov
repz
mov
mov
shrb
push
out
loope
insb
imul
lcall
ds
in
in
test
fdivl
ss
rcrl
pop
mov
adc
push
push
inc
adcb
lret
sbb
adc
push
jp
jge
pop
cmp
xchg
or
lahf
loopne
out
jl
push
into
dec
je
es
bound
pop
repnz
lcall
ljmp
inc
inc
mov
insb
scas
push
sub
adc
into
adc
cmpb
jmp
xchg
jno
sbb
xchg
and
pop
push
mov
lods
out
inc
int3
inc
imul
mov
pop
adc
insl
mov
inc
mulb
push
fwait
daa
adc
inc
jecxz
mov
in
jnp
fiadds
out
inc
jne
lds
pop
frstpm(287
jae
dec
movl
mov
test
jo
lods
movsb
add
push
movl
fcompl
std
push
cmpsl
mov
das
ja
out
out
fists
outsl
pusha
test
dec
das
push
add
lods
or
popa
mov
clc
clc
xchg
cmp
repz
inc
or
ja
jo
imul
cmp
fwait
xlat
and
call
mov
lahf
mov
scas
sub
fcoms
in
ljmp
fcoml
jp
add
pop
cltd
or
lcall
push
add
repz
sub
cltd
pop
inc
lds
push
jp
mov
sbbb
pop
cmpsb
push
push
cmp
mov
mov
cmp
stos
and
pushf
test
mov
push
sbb
iret
scas
arpl
and
repz
adc
out
into
add
pop
stc
in
mov
xchg
cmc
inc
int
add
fs
mov
push
cld
dec
cmpsb
inc
int
or
mov
dec
mov
lret
cmc
cs
push
jecxz
xor
jecxz
xor
push
loope
movsl
cld
xorl
push
ss
sahf
cld
add
cmpsb
ja,pt
rcrb
lods
int3
loop
dec
jb
fwait
jmp
stos
mov
or
xlat
or
popa
inc
add
cmpsl
add
fwait
and
jge
jo
and
xor
mov
sarb
dec
out
xchg
mov
adc
stos
enter
lock
dec
shlb
mov
inc
fdiv
daa
pop
addr16
ds
fists
fsubp
mov
mov
add
call
int
inc
lret
cld
mov
clc
fmul
sub
add
adcb
das
jecxz
cmp
cs
mov
jle
mov
pop
scas
fld
sub
fisttpll
jmp
lods
rorb
or
std
mov
movsb
xchg
out
mov
push
cltd
sbb
cltd
in
add
add
shlb
shrb
pop
inc
fdivs
sbb
add
in
dec
dec
jno
push
and
xchg
ljmp
rorw
sbbb
nop
push
bnd
pop
fsubrl
mov
pusha
fwait
add
mov
out
mov
mov
inc
leave
lea
sti
cmp
mov
push
and
mov
lea
jl
shlb
lret
inc
mov
and
into
gs
mov
mov
inc
aaa
addr16
sahf
ss
xchg
jmp
inc
or
fwait
jns
inc
pop
mov
into
add
mov
sbb
in
adc
out
insl
fcmovu
xchg
cmc
lea
ficoms
xchg
inc
mov
test
fmuls
pop
xor
lock
pop
cmp
lock
loopne
sub
push
test
gs
xchg
cmp
cmpsl
bswap
push
inc
lods
mov
mov
lret
add
pop
mov
mov
bound
or
jbe
pop
repnz
scas
out
int
fisttpll
jmp
cli
push
loopne
lfs
xchg
ljmp
mov
xchg
mov
in
dec
filds
mov
testl
sbb
jo
inc
cmpsb
in
pop
mov
sbb
mov
pop
das
test
push
mov
int
stos
and
xchg
xchg
in
scas
lret
xchg
mov
push
cmpsb
push
movsb
test
add
inc
cli
daa
lods
int
mov
or
jmp
popa
inc
shll
addps
inc
xor
insb
cmp
mov
cmp
adc
push
dec
popf
jbe
aaa
subb
jae
dec
dec
pop
data16
dec
or
out
lcall
in
aaa
dec
adc
sbb
sbbb
sbbl
mov
sub
scas
pop
sbbl
cmp
sbb
fdivrs
ret
roll
sub
push
inc
pop
into
adc
inc
push
adc
fdivrs
adc
fisttpll
push
xor
int3
inc
dec
adc
and
xchg
scas
divb
enter
popf
push
enter
xor
popf
push
ss
and
adc
push
mov
jmp
ficomps
jg
sub
rolb
and
repz
divl
rolb
neg
lret
pop
adc
cli
pop
push
ret
cmp
dec
out
mov
aad
repz
sti
nop
mov
xchg
sarb
pop
test
or
int
ljmp
mov
lods
shlb
hlt
sbb
pop
pop
mov
sbb
xor
mov
imul
jge
and
xchg
frstor
shrb
mov
addr16
enter
inc
xor
clc
arpl
mov
repz
xchg
pop
pop
movsl
add
pop
sti
cmp
sbb
inc
or
outsb
add
nop
pop
xor
leave
addr16
push
sub
or
int
imul
xchg
cs
add
mov
xor
xor
dec
lea
cli
incl
push
pop
dec
mov
in
fdivr
std
sub
inc
jmp
lds
lret
sbb
out
loopne
mov
add
scas
inc
mov
out
mov
sub
lahf
ja
jo
loopne
loop
add
push
adc
sub
mov
nop
mov
popf
inc
test
sub
inc
mov
scas
aad
in
cmpsb
sub
imul
push
xor
pminub
push
mov
divl
cmpsl
rsm
and
pop
mov
imul
pop
int
cmpsb
pop
jl
cmp
test
shll
shl
or
ret
add
jno
xor
xchg
add
popa
push
add
sub
rolb
sub
mov
rolb
iret
mov
nopl
mov
jns
add
into
pop
mov
mov
cltd
dec
jg
lock
push
ret
pop
cmp
enter
iret
add
enter
add
xchg
aas
mov
adc
push
jb
mov
dec
iret
aaa
idiv
push
inc
nop
cmp
mov
sahf
test
out
arpl
xchg
mov
loop
filds
mov
cmp
jns
dec
subl
xchg
nop
iret
leavew
sub
mov
imul
jnp
or
add
mov
mov
mov
mov
fldcw
push
fdivl
jecxz
or
sub
imul
adcb
mov
jecxz
jl
into
pop
pushf
outsb
movl
sbb
js
fadds
push
adcl
into
lods
mov
xchg
xor
sub
jg
aam
mov
xchg
cmp
int3
int3
sbb
jp
dec
scas
jnp
push
and
add
inc
push
and
lds
loope
jge
fsubrs
out
xor
fstpl
filds
jp
std
shl
jae
push
callw
cmc
inc
mov
ss
jbe
sub
nop
push
mov
sti
les
test
mov
mov
daa
xchg
dec
or
inc
mov
aam
xor
sub
sub
adc
gs
push
mov
fcmovnu
adc
lahf
enter
out
in
fidivrl
xchg
or
movsl
fistps
popa
arpl
xor
sbb
aas
push
push
out
fldenv
and
mov
fdivs
pop
test
inc
mov
dec
dec
inc
xor
cmpl
sub
jno
lcall
dec
pop
cmc
and
loopne
daa
rorl
inc
jnp
daa
iret
xor
mov
mov
das
sub
rcrb
pushf
bound
adc
xor
xor
jge
daa
fcoml
fsubp
int
das
int3
add
dec
xor
adc
ljmp
lock
daa
pop
lar
aam
outsb
stos
and
lret
testb
or
sub
aam
xchg
mov
ret
pop
repnz
xchg
push
popf
hlt
pop
xchg
notl
scas
mov
and
mov
or
pop
jno
lea
push
arpl
lcall
push
filds
in
jp
add
arpl
rorl
mov
xchg
enter
mov
lcall
js
pop
push
pop
mov
pop
mov
adc
and
insb
cpuid
loopne
popf
add
test
icebp
pop
fucom
push
jns
mov
sub
and
shll
imul
hlt
xchg
jge
pop
in
lods
dec
push
fldcw
mov
mov
push
push
cli
cmc
lock
fbld
sub
daa
loope
xchg
decb
movsb
lock
inc
pop
pusha
sub
jnp
addr16
addl
call
dec
jne
lds
jno
mov
and
loope
sbb
mov
div
and
xchg
pop
nop
cmp
adcl
cmp
mov
ja
lret
sub
xchg
lds
lods
shll
daa
sub
mov
leave
fldenv
mov
mov
popf
test
sub
leave
jno
jns
xchg
imul
lds
mov
lods
stos
mov
mov
add
adc
pop
add
add
cld
mov
repz
adcl
mov
ret
les
jbe
lret
inc
ret
and
lahf
jle
idiv
fwait
lods
add
fiaddl
mov
mov
flds
inc
push
lret
mov
ljmp
pop
jo
inc
lret
movsl
push
adc
mov
outsl
fdivrs
mov
or
lds
ja
adc
and
pop
jne
stos
xchg
test
dec
iret
xchg
ret
repnz
es
jbe
repz
jmp
add
out
jmp
xlat
sub
sbb
xchg
jge
imul
hlt
insl
dec
popf
or
adc
dec
outsb
mov
or
shl
push
int
aad
fsubl
or
ret
aad
inc
insl
xchg
and
sub
in
inc
xor
das
scas
push
dec
jecxz
aam
xchg
jnp
jmp
in
add
cmp
outsl
cmp
inc
cmpl
mov
mov
dec
inc
cmp
mov
jnp
fcoms
mov
adc
addr16
fs
jmp
mov
mov
push
mov
xchg
xlat
mov
push
scas
je
or
adc
fsubp
loop
ret
or
mov
or
cmpl
mov
sarb
lds
int
xor
xchg
inc
push
loopne
add
lret
jo
push
adc
or
int3
jo
cmpsl
inc
dec
daa
jbe
imul
add
add
mov
sbb
in
je
cmp
ljmp
adc
out
cmp
ss
clc
lahf
inc
push
lea
lods
aas
das
xchg
fdivs
leave
stos
jbe
popf
negl
or
mov
rolb
xchg
cs
or
stos
pop
loope
ljmp
inc
mov
xlat
inc
xchg
lds
bound
mov
aas
pop
mov
and
lret
jg
jl
add
mov
es
test
stc
dec
add
jns
sub
pop
dec
cwtl
inc
sub
clc
out
jp
loopne
dec
out
lods
push
rorb
inc
mov
lret
mov
cmpsb
adc
movsl
jmp
inc
push
out
dec
and
test
add
rcr
out
insl
cmpsb
popf
mov
decl
outsb
dec
insb
cs
xchg
jge
cwtl
lcall
pop
ss
jmp
add
dec
lret
cmp
mov
enter
fucomip
js
loopne
xchg
mov
in
or
orl
or
ljmp
mov
rorb
stos
mov
jae
xchg
dec
pop
mov
testl
nop
insl
xchg
pop
mov
je
test
cmp
int
or
loop
int
pop
dec
flds
insb
pop
adc
aas
adc
mov
and
js
sbb
xor
popa
stc
aam
mov
mov
lock
cmp
and
ror
je
out
mov
jne
jno
pop
inc
dec
bnd
mov
xchg
jge
mov
jbe
push
sbb
xor
int
in
adc
les
aaa
imul
sub
outsb
adc
push
rcrl
mov
rorb
push
xchg
sub
lds
lock
fwait
dec
icebp
lahf
fadds
xor
adc
mov
movsl
lds
mov
mov
dec
mov
mov
mov
sbb
cld
addr16
push
out
out
mov
inc
sarl
cmp
push
jno
insb
nop
in
pushf
ljmp
sahf
xchg
xor
int3
fwait
jge
sub
out
add
mov
fisubrl
jmp
jnp
xchg
pop
cld
testl
dec
inc
push
es
xor
sbb
mov
xchg
sbb
pop
fisttps
das
mov
mov
mov
fstpt
jle
xchg
cltd
js
pop
dec
sbb
dec
addl
mov
imul
push
dec
cmp
dec
jne
cltd
xchg
sub
sub
jge
imul
mov
add
shlb
mov
cli
inc
inc
xor
fiadds
mov
sub
xchg
pop
push
iret
xchg
bound
dec
pop
pusha
lret
xor
aad
ret
or
add
lcall
test
nop
fildll
test
xchg
adc
sti
fdivs
jmp
mov
mov
es
mov
jmp
cli
mov
data16
sbb
jo
js
fimull
or
data16
cmp
shr
push
call
dec
loop
inc
push
popf
imul
out
ret
icebp
push
cmpsb
push
mov
cmp
mov
rcrb
jmp
xchg
mov
cwtl
mov
pop
mov
iret
imul
les
loope
shll
repz
jbe
or
push
loop
ret
xchg
lods
aas
pop
imul
jnp
ja
sbb
cs
jbe
dec
into
or
push
mov
cwtl
into
mull
and
xchg
mov
ffree
in
cltd
mov
xchg
loopne
pop
dec
inc
jb
cmpsb
stc
cmp
out
cld
dec
ret
or
mov
add
mov
lret
cmp
pop
rcll
repz
rclb
gs
sub
xchg
fmuls
pop
mov
push
aam
test
sbb
je
xlat
or
cmp
push
push
cmp
test
movsb
inc
xchg
sub
mov
aad
lods
call
sub
shlb
xchg
in
out
inc
ret
rolb
fmul
push
stc
pop
insl
dec
jo
xor
pop
sub
xchg
fcoms
or
push
adc
dec
push
jnp
dec
mov
dec
enter
mov
imul
sbb
test
ss
jp
lock
add
push
mov
sub
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
sub
cmp
cmp
adcb
adcb
repnz
cmp
sbb
jnp
outsl
adc
gs
shlb
pushf
outsl
push
sbb
rclb
inc
in
jns
cmp
das
xor
bound
mov
rorl
jle
jb
xor
sbb
pop
pop
sbb
sbb
pop
loope
inc
mul
dec
jne
sub
add
mov
in
fs
std
scas
push
xor
repz
mov
ljmp
or
dec
xor
cmp
sbb
test
xor
pop
in
fs
add
scas
hlt
shl
popa
popf
iret
repnz
push
jnp
mov
xlat
outsl
jmp
ficomps
mov
lahf
movsb
mov
push
ja
dec
pop
jge
jnp
push
push
add
ss
or
ljmp
imul
stos
mov
inc
sub
pop
inc
imul
sbb
dec
imull
cmp
adc
mov
cmp
fnstenv
inc
outsb
push
xchg
dec
shl
popa
ja
xchg
fcompl
pushf
pop
cwtl
xchg
sub
out
es
paddsb
ljmp
mov
dec
xor
js
stc
outsb
adc
inc
mov
int
add
jmp
popf
fisttpll
or
arpl
jae
mov
mov
inc
mov
mov
test
pop
nop
fcoms
sbb
pop
sub
sbb
push
sub
imul
lock
sub
aam
mov
inc
fiadds
fidivs
rcrl
sbb
xchg
cmp
cmp
xchg
ja
adcb
push
xchg
test
sbb
std
repnz
pop
in
and
lds
mov
sub
push
leave
jnp
cmc
pushf
stos
cmp
pop
decl
mov
test
outsl
mov
inc
data16
pop
in
int3
cmpsl
or
xchg
ljmp
ja
fisubrs
pop
outsl
jecxz
mov
inc
ret
ljmp
outsl
xchg
pop
sbb
jns
and
add
or
bound
jns
mov
push
jecxz
ds
jae
xchg
xchg
pushf
and
xchg
outsb
test
sub
inc
in
jmp
sbb
add
mov
ret
je
mov
daa
xchg
leave
xchg
sbb
iret
stos
jno
jmp
out
mov
inc
push
jle
mov
stos
inc
mov
lea
imul
cmp
stc
mov
xchg
sbb
pop
out
inc
ljmp
cmp
gs
dec
aam
xchg
bound
test
pop
sub
pop
xchg
or
xor
ficomps
mov
decl
and
push
push
jne
repz
inc
lea
ljmp
lock
pop
push
mov
adc
and
inc
pushf
shrb
imul
decb
mov
enter
arpl
repz
out
mov
or
push
push
pop
callw
cmpsl
xchg
mov
mov
lods
std
jg
xorl
scas
dec
xor
testb
ror
rcll
cmp
nop
push
clc
ret
loopne
and
jo
filds
sbb
stos
stc
pop
les
cs
inc
mov
push
cmc
cmp
test
xor
fldcw
js
xchg
movsl
xchg
jmp
jge
xor
xchg
sahf
scas
imul
or
push
scas
loop
mov
adc
call
jnp
sahf
sub
mov
out
cs
dec
sbb
out
test
mov
es
pop
out
sbb
adc
mov
push
inc
pop
pushf
jbe
pop
jp
es
jns
push
rorb
stos
mov
cmpsl
pop
je
xor
shll
sbb
adc
xlat
sub
leave
push
jg
stos
arpl
mov
and
mov
in
test
je
bound
je
mov
imul
or
xor
addr16
shlb
int
cltd
mov
inc
jo
jnp
push
sub
fcomp
push
notb
sahf
gs
jo
sbb
lret
pop
in
insb
adc
cmp
sarb
popf
rcl
sahf
icebp
jge
push
hlt
mov
pop
icebp
into
loop
lods
dec
das
pushf
inc
mov
mov
add
mov
movsb
je
rcrl
inc
jo
xchg
jmp
imul
arpl
enter
test
mov
push
adc
jge
push
adc
aaa
push
fcmovnbe
cmpsl
and
jne
pop
jo
les
clc
insl
cmpsb
pop
mov
push
js
lcall
mov
push
sbb
movsb
repnz
xor
out
cmp
ja
call
cmp
repnz
xchg
ljmp
mov
push
push
jno
or
dec
stc
sub
or
pop
or
into
flds
addb
fstpl
jb
lods
mov
out
insl
negb
testb
adc
jecxz
xchg
mov
adc
cmp
negb
repnz
xchg
test
movsl
arpl
jns
icebp
inc
sbb
fcomip
mov
loop
push
or
loopne
mov
mov
mov
mov
bound
nop
dec
push
mov
fs
mov
lret
insb
or
int3
inc
sub
test
pop
dec
aas
clc
imul
jle
mov
jp
sbb
cmp
mov
jmp
lcall
lret
outsl
add
dec
into
adc
fisttpll
or
fs
add
aad
sub
fs
repz
out
scas
lahf
scas
pop
jle
adc
mov
fcos
mov
lret
or
or
add
lds
inc
dec
aam
mov
xor
pop
incb
dec
sub
popl
out
jnp
ss
popf
leave
cmc
and
and
jmp
mov
idivb
mov
xor
ljmp
cmp
lods
adc
mov
dec
pop
jo
jbe
std
jle
inc
imul
pop
mov
jg
leave
insb
ss
sbb
xchg
ret
out
es
jmp
mov
pop
xor
repnz
add
push
cmpsb
xlat
fisubs
xchg
and
faddl
repz
pop
cmc
pop
mov
xor
pusha
jae
add
ret
sarb
mov
adc
jo
call
push
xorl
fidivrs
aam
rol
stos
popf
mov
imul
fwait
stos
gs
or
mov
push
sbb
ja
ds
and
cltd
mov
aad
es
int3
imul
push
jmp
cmpsl
pop
enter
pop
divl
sbb
rolb
jp
nop
adc
out
mov
lret
mov
push
adc
mov
cmp
fidivrl
cmp
and
cwtl
out
lret
mov
outsl
fldcw
scas
xchg
pushf
push
xor
or
sbb
inc
idivl
or
dec
loop
mov
jae
sub
xchg
cltd
or
rorb
cmc
push
inc
push
mov
gs
movsl
aas
cmpl
movl
mov
pop
mov
push
push
dec
cmp
push
call
ljmp
inc
sti
ljmp
fwait
roll
movl
ds
sbb
stos
mov
pop
fs
jmp
add
scas
fwait
outsl
add
rol
dec
mov
cmp
pop
or
mov
push
in
sahf
push
cmc
imul
je
mov
scas
pop
xor
out
xchg
xchg
lcall
fsubrs
es
call
pop
mov
and
or
sbb
or
and
or
pop
ja
jns
pop
pop
enter
jne
fs
mov
test
jp
divb
cltd
jge
pop
jmp
push
out
mov
int3
sub
pusha
mov
mov
in
ficompl
push
test
push
aam
popa
scas
cmp
aas
sbb
dec
lods
sbb
stos
aas
xchg
dec
outsb
imul
ret
or
dec
xchg
pushf
ror
ds
loopne
test
mov
ja
dec
fldenv
add
and
in
js
jge
cmc
and
and
enter
lods
and
cli
out
sbb
cmp
je
das
and
push
sar
loope
lods
or
dec
xchg
imul
addr16
and
aam
gs
enter
fmull
cmp
jge
mov
int3
cmc
cmc
inc
mov
adc
push
pop
in
iret
das
mov
push
push
add
cwtl
xchg
jne
js
xchg
mov
dec
js
pop
push
and
jne
cmp
xor
pop
leave
add
stos
imul
jne
inc
int3
lods
add
ret
adc
jecxz
lahf
add
xchg
stc
cwtl
jl
jmp
jg
bound
stos
movsl
mov
dec
lods
les
jecxz
addr16
lock
add
jmp
pop
inc
cmc
add
push
mov
xchg
xor
jge
clc
mov
sbb
scas
cs
out
sti
pusha
testl
xchg
mov
aam
aas
call
je
aad
fsubp
mov
cmp
xchg
push
lret
std
ljmp
arpl
loope
jp
imul
push
push
add
sbb
orb
add
sarl
mov
call
or
xor
mov
clc
ret
clc
scas
jmp
cld
pusha
and
mov
sbb
jns
fidivs
pop
mov
out
push
mov
pop
cwtl
adc
popf
inc
add
cmpsb
mov
test
dec
int
pop
je
movhps
xor
mov
movsb
mov
cli
pop
scas
loope
sbb
cmc
sbb
xor
xlat
push
push
dec
fdivrs
add
shlb
jnp
or
jne
in
dec
fists
decb
daa
in
adc
rclb
xchg
stos
hlt
push
mov
mov
sub
cmp
mov
mov
mov
ret
xchg
mov
push
lods
mov
mov
mov
mov
cmpsb
pop
pop
add
int3
lods
push
imull
imull
jbe
or
cld
pop
lahf
mov
jl
xor
movsl
gs
inc
pop
cwtl
enter
push
xchg
adc
test
or
jns
pop
or
loope
out
dec
push
repz
sbb
add
fwait
fnstsw
into
xchg
mov
or
xor
cmpsl
gs
pop
inc
fsubl
jp
sbb
es
in
mov
mov
mov
add
add
nop
addr16
idivl
inc
sbb
sub
cmp
jmp
mov
jb
add
push
xlat
push
jmp
adc
popa
pop
test
mov
into
call
mov
push
jno
xor
add
outsb
sbb
xor
jle
sub
outsl
and
mov
roll
in
push
xor
and
dec
dec
sbb
and
int3
enter
out
sahf
mov
fstl
cmc
pop
in
cs
mov
cmp
cmpsl
stos
cmc
add
sub
adc
xor
stos
push
ret
pop
imul
inc
or
push
cmpsb
scas
sub
gs
and
stos
jb
or
mov
cmp
pop
aas
jg
xchg
leave
dec
jle
pop
push
imul
or
pop
sbb
cmp
cmp
es
in
adc
out
pop
fwait
mov
ret
or
fwait
mov
jne
insl
popf
jns
jl
xor
fs
bswap
jne
xchg
in
or
pop
pop
test
or
pusha
filds
pop
scas
shr
jg
xchg
sbb
jne
popa
mov
sub
mov
arpl
push
imul
jp
xor
adc
mov
in
orl
xor
aas
ljmp
in
divl
fwait
fs
jno
sub
dec
push
jno
sub
aas
mov
rcrb
outsb
jns
ss
pusha
jmp
pop
jg
insl
and
dec
sub
inc
add
rcll
in
pop
add
mov
cmpl
in
popa
mov
repz
mov
out
jge
in
and
insb
xchg
xchg
and
das
jne
std
inc
cld
sub
fdivs
lret
sahf
cmp
dec
rcl
pop
fdivrl
mov
jmp
xor
jno
and
fiadds
pop
pop
adc
jns
lods
add
cmpl
pop
jecxz
dec
mov
pop
dec
sub
daa
daa
add
movsl
cltd
xorps
or
dec
scas
mov
sarl
enter
or
dec
or
mov
inc
out
in
imul
iret
or
leave
out
insb
pop
into
mov
and
jns
int3
push
jl
dec
daa
xor
js
pop
in
add
jnp,pn
xorb
mov
fistl
mov
xor
mov
jne
testb
jns
sbbl
jno
loopne
cmp
inc
out
es
ljmp
pop
push
mov
cwtl
and
stc
shlb
stos
jle
mov
lret
mov
or
test
test
lea
scas
push
das
inc
jecxz
call
pop
loope
pop
call
decb
jns
xor
sbb
int
inc
sbb
enter
and
jmp
xchg
sbb
fcmove
sbb
arpl
jo
jnp
mov
mov
movsl
mov
fdivrp
xor
in
mov
int3
xchg
movsb
jbe
pop
jb
test
add
push
adc
jecxz
fidivl
insb
out
add
mov
dec
sarb
daa
insb
mov
aas
sbb
lahf
fcoms
xchg
mov
sbb
xlat
rorb
cmpb
jle
add
or
add
movsl
sub
inc
sarl
pop
stc
leave
imul
cmp
xchg
pop
push
adc
sbb
xor
sub
mov
ljmp
or
mov
xor
xchg
fcmovnu
push
mov
jp
into
jg
add
mov
push
call
gs
cmp
xor
fcoms
fbstp
scas
popa
mov
mov
in
out
fnsave
xchg
ret
repz
dec
pop
or
out
test
es
insb
or
inc
mov
xchg
outsl
sub
push
andl
inc
sub
dec
cltd
lret
pop
aad
cmp
pop
jae
inc
call
in
inc
fimuls
xlat
inc
push
repz
push
dec
mov
jl
in
fisubrs
aam
sbb
das
mov
or
sub
inc
out
sbb
push
cmp
cmp
push
cld
mov
jb
cld
and
loope
imul
mov
fmuls
bound
xor
shl
lret
pop
mov
xchg
daa
movsb
xor
xor
into
sar
add
lods
mov
inc
mov
inc
mov
dec
cltd
call
in
cwtl
outsb
sub
inc
icebp
sbb
mov
lock
xchg
fidivl
inc
adc
mov
mov
pop
xor
xchg
inc
fwait
in
dec
sub
xor
jg
sahf
in
push
add
shrb
pop
sbb
aam
js
rcl
jl
lods
xor
stos
lods
mov
adc
iret
mov
leavew
int
out
mov
divb
mov
loope
mov
mov
push
sbb
pop
mov
dec
faddp
ja
gs
push
je
idivb
lock
arpl
pop
les
and
aaa
cmp
jae
cmp
testl
pop
push
sub
mov
xorb
out
or
xor
adc
inc
incl
lds
pop
movsl
inc
jnp
cmp
push
inc
popf
mov
cmp
add
or
mov
sub
out
data16
mov
ret
std
xor
pop
xchg
arpl
sti
test
mov
das
cmpsl
int3
sti
jle
adcb
jno,pn
sar
cmp
adc
dec
mov
je
ficompl
jl
sbb
lret
push
lods
pop
cmp
js
imul
xchg
sbb
xor
jnp
sarl
mov
ret
addr16
insb
mov
out
pop
repz
mov
fmul
nop
inc
std
pusha
jno
and
add
dec
push
cmp
bound
mov
jecxz
jge
mov
jb
mov
lcall
push
push
outsb
lcall
in
and
jge
jns
adc
add
fwait
jne
imul
xchg
mov
xchg
icebp
iret
pop
shlb
ret
jo
movsb
lock
imul
jmp
daa
sbb
xchg
mov
mov
aad
mov
adc
and
stos
jl
xchg
xchg
sbb
in
add
inc
testb
cmp
and
or
pop
or
jle
xor
adc
inc
cmpps
icebp
fbstp
aas
pusha
shlb
fnclex
cli
ja
faddl
xor
sbb
cld
pop
and
mov
pop
pop
call
pushf
dec
out
mov
in
lahf
inc
cmpsl
in
adc
ds
pop
je
xchg
mov
pusha
mov
jmp
movsb
scas
pop
lea
dec
lahf
mov
stc
lahf
incl
mov
inc
cmp
sub
mov
mov
fadds
movups
xchg
mov
jmp
xchg
out
mov
les
xlat
sti
dec
mov
iret
mov
aas
mov
cmp
and
xchg
insl
lods
std
add
mov
lcall
fstpt
and
or
lods
inc
inc
fnsave
xor
cmp
push
loop
shrl
xor
sub
inc
sub
adc
cmp
in
pop
cmp
push
jge
and
lret
ds
outsl
cmp
or
clc
xchg
mov
push
arpl
inc
iret
lcall
mov
push
cltd
push
xchg
xchg
orl
aad
stos
push
imull
jnp
pushf
push
ja
lret
aaa
sbb
cmp
fs
fcoml
into
repnz
cs
adc
int
sbb
mov
add
mov
insb
out
xchg
push
inc
sub
push
test
add
loope
xchg
pusha
push
jmp
clc
out
sub
das
push
mov
sbb
mov
jbe
mov
mov
mov
fisttps
popf
cmp
adc
in
mov
push
push
xor
ds
repnz
xchg
push
cmpsb
and
mov
jbe
fstps
push
dec
add
nop
mov
outsb
out
and
test
rcll
lret
mov
mov
jl
mov
adc
xor
xchg
cltd
hlt
scas
inc
sbb
imul
test
mov
mov
test
rcl
mov
rcrb
add
pop
pop
mov
in
xchg
sbb
shlb
and
hlt
adc
aad
mov
push
push
inc
push
testb
mov
push
out
lods
stc
nop
xchg
loopne
sbb
jb
cmp
jae
or
push
inc
add
ljmp
dec
xor
fstpl
adc
aam
xor
repz
mov
push
add
testl
inc
pop
add
mov
sahf
std
lea
pop
les
jae
adc
mov
xorb
aaa
mov
lds
pop
mov
mov
jle
stc
pop
into
dec
cs
out
sbbb
sub
and
sub
sub
pusha
sub
cli
xchg
inc
push
ja
inc
scas
enter
mov
inc
repnz
sub
xor
pop
popf
mov
imul
or
add
xor
sub
aam
icebp
xlat
test
fs
or
fistl
pop
push
leave
lods
dec
xchg
sbb
negb
or
mov
sarl
sti
mov
addr16
jns
ret
mov
ds
push
or
mov
mov
sub
call
out
cmp
jo
inc
outsl
clc
jo
and
pop
jge
push
cmp
jp
outsb
mov
mov
or
mov
imul
pusha
mov
dec
jne
inc
aaa
sarl
pop
pop
std
fwait
out
pop
imull
js
es
sbb
push
inc
ja
and
mov
out
sub
jno
mov
jle
jg
cmp
scas
stos
fdivrs
into
and
cltd
mov
mov
inc
xchg
push
pop
dec
stos
xchg
or
dec
mov
push
xor
pop
movsl
xor
sub
nop
pop
jmp
ja
xor
loope
and
mov
imull
jnp
lods
jne
out
int3
dec
out
add
sub
cmpsb
loop
imulw
dec
add
fisttpl
test
stc
outsl
pusha
arpl
imul
cli
sub
in
ds
fisubl
das
xchg
ljmp
sbb
cmp
xchg
sbb
icebp
dec
mov
fcmovnu
cmc
xchg
lahf
gs
cmpsl
ds
dec
popf
iret
mov
dec
icebp
insb
inc
jmp
mov
dec
or
inc
insl
mov
lods
add
fbld
xchg
jne
mov
and
into
out
ja
jl
add
lock
dec
push
sub
out
fisttpl
xchg
leave
gs
ret
test
addr16
les
add
xor
xchg
out
test
inc
call
cmp
and
daa
decl
mov
insb
decb
fwait
call
mov
mov
dec
adc
xlat
aas
outsb
add
inc
roll
cmpsl
js
in
fwait
je
iret
rcr
jl
push
fistps
dec
out
or
fisttps
cmc
ret
xchg
cmp
fnstenv
mov
jno
negb
sub
ss
pop
and
jge
mov
clc
or
mov
scas
xor
mov
xor
mov
cmpsb
loope
arpl
inc
jns
scas
mov
call
and
clc
cli
xchg
adc
xchg
daa
adc
and
inc
xchg
leave
push
push
std
lds
push
jl
ss
mov
push
adcl
or
sbb
and
mov
sarl
mov
je
adc
add
push
ljmp
rol
mov
int
lcall
jge
popf
std
sbb
and
sahf
jbe
mov
pop
mov
jb
dec
push
mov
call
adc
or
aas
dec
mov
mov
enter
mov
test
test
andl
push
insl
sub
aaa
stos
push
cmpsb
popf
addr16
mov
add
lods
in
mov
xor
pop
mov
lock
loop
aam
jb
cmp
decb
and
test
jmp
cmp
or
gs
pop
cmpsb
pop
cmpl
ss
stos
imul
sbb
add
ja
imul
xchg
data16
xor
or
test
xchg
push
repnz
push
push
and
dec
and
mov
lret
xchg
movsl
and
pusha
cmp
adc
xor
pop
stos
andb
adc
imul
fidivrl
mov
mov
add
loop
daa
popf
push
push
fmuls
jg
inc
es
dec
pushf
lock
mov
adc
mov
ret
in
aad
subl
jge
pop
sub
add
scas
aad
sbb
inc
cmpsl
es
icebp
aaa
or
test
mov
loope
push
icebp
mov
adc
jecxz
sub
jecxz
jp
mov
arpl
sub
das
sub
lea
cmp
lds
and
daa
adc
loop
nop
cmp
mov
or
sbb
leave
cmp
mov
pusha
mov
imul
and
insl
inc
test
movsb
mov
pop
imul
stos
insb
imul
add
xor
rol
sar
push
dec
cwtl
xor
shlb
mov
dec
imul
jnp
bound
dec
xchg
pop
lahf
cmp
dec
or
shrd
xor
sbb
pop
pop
xchg
rcrb
lcall
xor
adc
ja
cltd
inc
mov
int
leave
and
cmovae
cmpsb
les
dec
test
aas
sub
push
lds
in
jns
push
js
cmpsl
lds
cmc
dec
inc
adc
cmp
xchg
pop
adc
dec
and
jg
int3
push
and
adc
fdivl
iret
adcb
inc
fbld
in
mov
insb
icebp
mov
mov
mov
out
mov
mov
mov
inc
pop
das
out
sti
mov
push
inc
mov
xor
popa
mov
add
sbb
xchg
orb
dec
sub
sub
xchg
into
xchg
fwait
movsb
jge
sahf
int3
leave
adc
dec
jb
xchg
mov
clc
sbb
negl
loop
icebp
popa
ljmp
xchg
adc
pushl
sahf
mov
and
jl
stos
cmpl
sbb
mov
inc
loopne
sub
add
lahf
imul
in
leave
cmpsl
bound
add
xor
pop
lcall
or
xor
imul
sub
dec
jbe
repnz
daa
mov
test
xchg
sub
push
mov
je
or
jo
inc
sub
xorl
movsb
pop
andb
lahf
add
lahf
dec
push
adc
cs
push
cmp
das
daa
and
and
sub
jecxz
cmpsl
push
shll
inc
xor
push
push
sub
movsl
fsubp
dec
ret
aas
sbb
and
adc
ljmp
out
and
adc
loopne
push
xchg
into
insl
fildl
pusha
mov
pop
stos
daa
std
and
pushf
mov
inc
lock
negb
push
shrb
or
pop
pop
mov
ja
jb
enter
icebp
outsb
mov
nop
mov
dec
mov
ljmp
push
add
out
pop
or
jp
and
and
lret
pop
fdiv
jne
into
push
push
enter
adc
inc
es
inc
outsb
pop
or
xlat
jl
push
adc
xchg
pop
mov
xlat
fwait
cmp
call
stc
ficomps
in
xchg
add
pop
sbbb
in
adc
test
mov
push
bound
ret
fstps
scas
lahf
filds
stos
mov
push
in
push
cmpsb
jg
sbb
jg
fdivrl
pusha
enter
fisttpll
movl
mov
leave
dec
cs
int3
mov
mov
repz
test
addr16
jo
push
aam
fucomi
arpl
addr16
fstps
jo
enter
daa
cwtl
in
mov
test
push
push
sub
xor
jns
jo
jb
jne
fwait
jp
insb
xchg
sahf
mov
sub
stos
mov
pop
jb
loop
xlat
in
shll
sub
and
daa
push
adc
movsl
jne
cmp
iret
test
push
loop
xchg
das
loop
ret
lcall
push
fadds
sti
dec
int
js
faddl
mov
lods
or
adc
leave
lret
mov
inc
in
adc
arpl
ljmp
stc
cmp
inc
into
jnp
js
cld
and
mov
jno
ljmp
loopne
out
jecxz
pop
imul
cmpsl
sbbl
push
xchg
daa
cli
push
out
imul
push
pop
pop
adc
subl
or
sbb
mov
insb
lahf
insb
mov
sbb
repz
loope
adc
test
inc
fdivr
sbb
and
fucomp
repnz
xor
jge
cmp
loopne
sahf
das
adc
cmp
inc
xor
mov
in
mov
push
sub
push
xchg
add
or
cmp
pop
mov
lret
push
das
cmp
sub
and
mov
hlt
std
sbb
gs
sbb
push
cwtl
imul
sub
xor
inc
lods
xchg
insl
inc
ret
mov
stos
lock
std
pushf
jns
xchg
and
jns
hlt
mov
jnp
mov
pop
lea
and
in
add
pusha
call
inc
add
jp
sub
inc
jne
inc
lds
add
push
mov
enter
mov
iret
xor
pop
push
mov
pop
or
sbb
int3
or
lods
je
add
in
sub
fstps
mov
jecxz
mov
dec
cld
in
adc
push
sbb
jp
add
mov
dec
jmp
nop
mov
inc
les
sub
popa
add
cmp
cs
fadd
mov
shlb
cltd
test
inc
call
ljmp
ds
fcomip
jge
push
xchg
int3
mov
fdivrs
cmc
gs
arpl
xchg
pop
outsb
inc
xchg
xor
ds
das
adc
hlt
lds
push
jnp
movsl
pop
fimuls
jmp
filds
test
dec
cmp
cmpb
aad
imul
mov
vmread
and
ficoml
xor
add
test
movsb
jmp
xorl
sarb
adc
push
stos
mov
or
movsb
in
leave
inc
pop
sub
loope
std
pop
mov
lahf
mov
push
in
aad
xor
in
mov
jae
and
test
cmp
jae
adc
cld
test
in
insl
scas
jmp
sbb
iret
lcall
hlt
cld
pop
mov
mov
cld
outsb
sbb
adc
ret
call
aad
lahf
pusha
xchg
sbb
stc
jge
nop
and
mov
rcrl
mov
je
mov
push
or
mov
lods
push
movsl
mov
jbe
fwait
aaa
fsubp
aam
jae
pop
jge
addr16
inc
push
push
xchg
sbb
insb
pusha
loopne
popf
fmuls
or
int3
cltd
and
mov
stos
push
cmp
mov
je
mov
inc
xor
and
and
mov
mov
sub
ret
push
sub
mov
fisubrl
lret
aas
add
or
jle
arpl
push
ss
in
xchg
shr
lahf
sbb
daa
out
dec
mov
mov
popl
test
es
pop
xorl
xchg
mov
loope
fwait
xor
pushl
out
frndint
into
xlat
cwtl
cmp
cmp
enter
mov
push
push
daa
in
dec
fstps
aaa
mov
push
adcb
repnz
or
mov
jae
test
add
aaa
imul
cmp
fistpl
adc
mov
cwtl
daa
mov
daa
aas
xchg
das
aam
lds
stc
in
adc
lahf
das
xor
add
aad
jns
adc
not
popa
jo
or
aad
fucomip
fwait
mov
fwait
and
mov
sbb
sub
loopne
cmc
cli
outsb
stos
das
add
lods
push
sarl
and
dec
xchg
lods
insb
sub
xchg
data16
cmpsb
and
lds
jl
inc
aam
subb
sbb
rol
mov
xlat
cmp
mov
pop
push
pop
in
ss
inc
xchg
or
push
and
outsl
nop
insb
inc
mov
stos
das
mov
sbb
loopne
inc
inc
push
dec
fmul
cmc
push
adc
lahf
pop
in
hlt
and
repz
lds
jl
or
ljmp
mov
and
push
pop
lds
mov
xchg
mov
sbb
sbb
jp
lret
xchg
jne
cli
sub
adcl
dec
lret
lock
and
jmp
cmpsl
xchg
lret
adc
sub
xchg
ficoml
or
jg
sub
xchg
insb
inc
popf
inc
pop
jle
fucomip
xchg
jae
mov
movsb
and
lds
xchg
jle
cmc
and
test
sbb
mov
int
insb
imul
fwait
movsl
int3
xchg
dec
popa
je
int
adc
and
pop
or
loopne
in
xchg
out
jecxz
adc
fimuls
cmc
adc
sti
lea
push
or
jno
cmp
or
sub
sub
pushf
and
mov
andb
push
test
stos
pop
shrb
outsl
fs
ret
and
insl
std
icebp
inc
mov
das
or
mov
daa
sahf
push
call
mov
adc
xchg
cmp
add
test
jo
xchg
mov
and
jmp
push
xor
cmp
imul
ljmp
xchg
loopne
and
pop
roll
add
cmpsb
sti
mov
scas
int
inc
cmp
pop
dec
int
mov
xchg
push
enter
push
jo
sar
cs
in
cwtl
imul
pop
scas
sti
cmc
cld
into
jb
mov
push
ret
jo
les
mov
mov
and
jmp
scas
sbb
test
jbe
mov
mov
je
push
fnstcw
adc
aaa
imul
in
test
and
jnp
fnstsw
xor
inc
sbb
ss
and
pop
cmpsb
cmp
mov
push
outsl
xor
pusha
adc
addr16
xchg
push
adc
jle
inc
pop
lret
jbe
ja
ja
dec
jmp
loop
xchg
in
sub
xchg
imul
jmp
fsubl
pop
imul
mov
inc
mov
mov
sti
inc
insb
pop
push
inc
aam
les
cs
je
add
cmp
leave
lret
adc
or
fcompl
enter
psadbw
add
outsl
iret
les
sub
mov
jb
push
mov
xor
mov
mov
roll
xchg
mov
jle
cmp
lea
mov
mov
jl
iret
adc
test
cltd
mov
push
cli
mov
jl
pushf
xorl
add
sbb
lock
add
shlb
pusha
lret
and
sti
pop
pop
mov
and
push
add
or
or
rclb
mov
pusha
inc
nop
sub
mov
out
dec
aaa
or
outsb
pushf
mov
push
sub
sarl
or
mov
mov
mov
mov
inc
mov
lret
mov
add
fisttps
xor
or
dec
cmp
roll
movsl
jno
in
cmp
jbe
lock
test
add
jmp
fsts
add
pop
lock
or
roll
mov
mov
and
sbb
jo
icebp
in
jno
mov
pusha
mov
dec
gs
jne
cmp
jge
andb
sahf
pop
scas
jle
mov
fwait
mov
dec
popa
xlat
xor
xor
xlat
inc
push
loop
cmp
xchg
xor
dec
add
mov
int3
int3
aam
stos
pop
lds
hlt
add
cmp
jmp
cmp
lods
pop
in
lahf
rclb
test
out
add
jb
push
sbb
lock
pop
icebp
sbb
ret
stos
test
orl
sub
fnop
push
mov
rorb
jbe
sub
jle
inc
ja
xor
or
cmp
or
jp
pop
scas
mov
in
out
enterw
push
out
arpl
mov
xorl
loopne
xorl
add
sbb
enter
incl
in
loope
arpl
xchg
fmuls
jg
sti
push
insl
cmp
sub
sbb
popa
lret
xchg
sub
inc
insl
xor
or
fwait
and
rcr
shll
sub
js
or
and
add
push
mov
mov
xor
jnp
mov
mov
aad
popa
addr16
subb
scas
add
in
outsb
add
ret
cmp
or
aam
clc
sub
add
jo
mov
inc
pop
fstpl
rorl
push
adc
adc
or
stos
mov
pop
jge
int3
lock
gs
aad
out
mov
xor
pop
pop
push
adc
jbe
jno
mov
push
imul
pop
xor
insb
and
pop
jae
adc
les
and
clc
std
lea
push
imul
and
pop
add
movsb
adc
push
xor
out
mov
jnp
mov
in
cmp
xlat
roll
sbb
sub
lea
mov
aad
jmp
shlb
loopne
mov
ret
xor
mov
or
icebp
lock
or
mov
ds
xor
jnp
scas
imul
shlb
pop
mov
popf
sti
jmp
or
adc
mov
jmp
aas
icebp
inc
adc
inc
and
adc
lock
outsb
inc
jnp
hlt
adc
xor
mov
mov
mov
add
fcomps
add
sbb
xor
out
test
push
push
pop
pop
cs
fiadds
cwtl
xor
add
addr16
and
loop
cld
popf
addr16
es
xchg
stos
push
mov
es
jb
pop
lds
push
jbe
push
into
leave
cmpsb
mov
push
mov
xchg
pop
sub
xlat
mov
mov
cwtl
ret
pop
push
movsb
stos
lds
dec
les
sub
cmp
jge
andl
fnstenv
inc
sbb
inc
loop
mov
xchg
lret
sub
adc
stos
push
mov
andb
cmp
ljmp
dec
ficomps
out
fistpl
add
pop
mov
test
les
mov
out
xor
push
push
iret
sub
cli
push
mov
arpl
jo
push
mov
js
fucom
cltd
push
jo
movsb
sarl
aam
or
leave
in
cmp
pop
push
jge
test
lods
sbb
adc
sahf
enter
mov
cmc
push
dec
cmpsb
push
adc
out
je
and
subb
lea
adc
data16
adcb
cmp
fldcw
adc
xchg
xchg
insl
jo
xchg
mov
mov
imul
sbb
dec
mov
ret
add
rcl
inc
push
jne
add
mov
push
dec
icebp
inc
cltd
sbb
int
ss
xchg
jns
pop
ss
sub
and
std
cmp
std
xchg
fs
add
add
jle
movsl
lahf
je
movsl
mov
cmpsb
addr16
pushf
push
mov
dec
and
add
pop
add
shll
ljmp
lods
in
mov
je
jmp
cs
or
and
add
repnz
sub
xor
mov
cmpsb
sbb
mov
pop
mov
add
xlat
mov
xchg
xchg
pop
cmp
sbb
add
add
aas
loop
push
loop
sub
pop
loopne
sbb
ds
push
cli
sbb
mov
sbb
shr
cli
ljmp
adc
mov
rolb
imul
ds
fs
inc
movsb
lahf
jne
inc
sbb
cmp
and
ret
in
cmp
scas
cmp
inc
and
adc
out
pop
xlat
cmp
and
and
xchg
cs
adc
push
push
movsl
xchg
jae
xchg
aam
jle
mov
fistpl
nop
std
scas
cmpsb
loopne
inc
in
aaa
and
jne
mov
fisttpl
lret
dec
lock
mov
stc
jge
lret
sub
push
mov
xlat
loop
pop
int
cmp
rorl
adc
mov
aad
rcrb
adc
js
mov
mov
int
or
mov
add
push
cmp
and
cmpsl
and
push
cmp
repz
lea
push
or
stos
mov
lcall
mov
mov
js,pn
xchg
and
rorb
sbb
inc
ret
xor
sub
js
sub
stc
lahf
fcomps
movsl
mov
arpl
popa
pop
mov
inc
dec
call
cmp
cltd
add
js
mov
insb
push
xor
and
loopne
ret
dec
adc
adc
inc
mov
sub
out
sub
test
cmpsl
pop
lret
dec
pop
cmp
lods
cmp
cltd
enter
xchg
mov
pop
lret
mov
xchg
adc
movsb
mov
gs
in
mov
sbb
sub
aas
mulb
xor
and
fisttps
rcl
inc
or
push
add
scas
adc
mov
dec
int3
mov
inc
sti
xchg
and
aad
cmp
ljmp
iret
xchg
mov
incl
test
pop
sub
bound
mov
pushf
lds
cmp
cs
aaa
mov
imul
inc
pand
lret
adc
and
stos
mov
push
jne
fsubrl
decb
xchg
or
pop
in
inc
sbb
subb
test
xchg
pop
stos
pop
cmpsb
push
repnz
and
fbld
dec
stos
and
inc
mov
cmp
pop
push
jb
or
popf
mov
ret
or
sub
repnz
mov
sbb
notb
sbb
sbb
and
jo
repnz
push
outsl
cwtl
shlb
cmp
sarb
popf
nop
jge
mov
stc
movsb
pusha
inc
or
push
test
aam
or
xor
das
repz
daa
push
repz
fs
cltd
jae
add
jnp
lods
imulb
add
push
repnz
aaa
push
sbb
adc
out
inc
inc
mov
lods
xlat
pop
mov
xor
clc
clc
pop
pop
jge
dec
mov
int3
arpl
cmp
test
xor
jno
popf
push
int
leave
int
pop
shll
orb
push
aaa
lods
call
and
std
push
sahf
xchg
fistl
lock
aaa
sbb
imul
adc
in
add
jge
shlb
sti
xchg
fs
adc
cwtl
sub
mov
cmpsl
paddw
jb
mov
in
mov
jl
mov
imul
mov
test
es
int
jnp
in
or
jnp
out
mov
mov
push
pop
mov
xchg
xchg
pop
es
xchg
push
jbe
push
cmp
and
int3
xchg
insl
cli
loopne
lods
pusha
call
sbb
inc
push
stos
test
mov
mov
int3
dec
cmp
and
jp
or
cltd
gs
pop
cltd
clc
jecxz
dec
mov
inc
out
insb
cmc
icebp
es
jge
pop
ja
xchg
call
push
mov
mov
xchg
and
sbb
movntps
xor
fisttpll
jae
mov
xor
push
xorl
fadd
pop
je
pop
mov
xchg
xchg
jo
cmp
push
adc
in
addr16
imul
adc
cs
daa
movsb
je
mov
xor
fldenv
push
push
lea
jp
mov
dec
cmp
lret
xchg
jne
pop
lea
mov
mov
lret
orb
push
lret
mov
xor
lock
sub
das
xchg
pop
cmp
inc
lock
mov
rcrl
scas
pop
imul
call
dec
fcom
popa
inc
lret
pop
in
cmpsl
jns
push
cmp
mov
iret
cmp
lret
hlt
and
push
sbb
inc
cli
mov
sbb
lds
cmp
pop
add
jg
sub
mov
cmpb
in
add
nop
scas
loopne
es
cmc
mov
sub
xchg
mov
int
into
arpl
sub
push
jae
ret
dec
or
lcall
lods
xchg
mov
insb
push
scas
int
imul
in
out
fs
notb
ja
ret
jo
jno
inc
jb
fstl
xchg
xor
push
orb
mov
cmpsl
out
popa
dec
mov
fcompl
addr16
mov
jmp
mov
nop
jns
cmp
adc
dec
into
or
in
sbb
jnp
ja
out
mov
push
add
push
test
out
sbbb
repz
add
inc
addr16
dec
dec
in
aas
adc
cltd
cli
cmc
and
inc
fcmovnb
loopne
out
sti
mov
inc
mov
outsb
jp
sbb
sub
stos
lds
or
rolb
movsl
mov
pop
or
mov
add
test
mov
dec
insb
sub
mov
xor
jmp
loop
cmpsl
cmp
sbb
dec
dec
pop
cs
insb
inc
mov
mov
push
outsl
mov
xor
out
test
mov
repz
jnp
aad
pop
ret
xlat
les
and
adc
incl
pop
ret
mov
inc
sub
imul
fldl
cmpsb
push
loopne
jbe
sub
add
and
jmp
jg
xchg
lret
jno
out
iret
mov
in
push
xor
pop
fcmovb
push
mov
out
leave
and
pop
movsb
pop
push
cmp
jp
pop
daa
rolb
push
testb
andb
add
dec
push
and
and
leave
fmulp
push
inc
and
test
int
cli
ret
sbb
fldcw
int3
mov
mov
dec
lret
clc
outsb
faddl
cs
lahf
mov
jl
mov
and
daa
je
fidivl
and
push
js
mov
cli
or
mov
pop
jne
and
xor
and
ficoms
popa
aas
inc
or
sbb
mov
stc
fcompl
add
mov
outsl
adc
mov
cmp
enter
cmp
xor
aaa
mov
inc
pop
dec
jp
aaa
leave
pop
je
scas
imul
cmp
mov
xlat
inc
jbe
scas
mov
jl
scas
mov
adc
push
mov
in
sub
mov
jo
or
add
cmp
fidivs
jl
sahf
sbb
ret
inc
or
cmp
aam
sub
jmp
and
leave
jbe
push
xor
mov
xchg
sti
or
ss
dec
cwtl
pop
aaa
jle
int3
insl
sbb
xchg
jns
sbb
add
jge
or
lahf
pop
mov
xchg
xor
add
ffreep
pop
add
in
push
leave
push
mov
and
leave
mov
lds
jbe
and
pushf
cli
icebp
mov
aad
pop
adc
lea
arpl
outsl
out
sar
xchg
lock
es
pop
xchg
imul
add
fdivrl
stos
lea
cmp
lods
mov
push
mov
push
xor
add
or
fs
add
mov
or
xchg
mov
pop
addl
repnz
mov
aam
push
inc
jmp
in
repnz
test
mov
mov
imul
mov
popf
inc
dec
adc
sbb
xor
pusha
rcrl
mov
arpl
mov
dec
cmp
mov
jb
jl
cmp
inc
jnp
jg
add
dec
js
inc
dec
xchg
push
enter
xor
or
jno
and
push
stos
mov
je
not
push
inc
or
mov
mov
and
mov
jle
rcr
push
rcr
out
lods
test
das
mov
notl
inc
aaa
jno
xchg
add
iret
and
repz
repnz
cld
add
jne
xlat
popf
mov
ja
mov
leave
clc
mov
das
jecxz
sub
inc
xchg
mov
cmpsb
pop
adc
and
bnd
push
mov
nop
inc
test
pop
push
xor
in
daa
es
out
lahf
out
inc
inc
mull
push
jl
stc
in
in
cmpsb
test
repz
int
mov
iret
insb
adc
ja
sahf
out
sub
inc
repz
fwait
sbb
enter
out
add
nop
out
adc
xor
jle
stos
pusha
pop
daa
inc
repnz
xor
pop
add
jnp
in
pusha
and
lods
roll
shrb
scas
mov
ds
cmp
push
add
mov
lret
rcrl
push
xchg
ds
xor
cmpsl
test
ret
fwait
xchg
scas
loopne
mov
test
fistpl
pop
xor
lods
lcall
enter
cmpsl
dec
orl
or
dec
leave
btr
adc
sub
dec
pop
cs
roll
mov
push
fildl
push
mov
adc
imul
pop
mov
hlt
pop
cmp
xor
dec
js
pop
push
dec
aam
and
add
sub
dec
ljmp
mov
mov
pushl
mov
bnd
xchg
inc
xchg
je
sub
dec
cmp
sub
push
pop
adcb
mov
inc
dec
push
add
insl
aam
add
idivl
lea
ret
mov
and
rolb
movsl
call
pusha
and
fs
add
xor
sbb
test
icebp
mov
and
adc
push
lds
outsl
insb
pop
sbb
in
mov
add
out
and
jle
ret
imul
adc
jbe
aas
pop
push
data16
cmp
loopne
inc
ljmp
nop
je
jg
test
add
movsl
push
clc
push
lahf
mov
test
leave
in
mov
sbb
cli
fldz
push
je
jl
push
stos
xor
add
clc
das
cwtl
mov
sub
add
push
rolb
cltd
cltd
sbb
fstps
cwtl
add
mov
lret
ret
pop
into
xchg
cltd
xchg
or
pop
inc
mov
jecxz
gs
or
aad
sub
cltd
jnp
adc
cli
into
xchg
aam
in
mov
xchg
add
mov
repnz
lds
push
adc
push
lahf
push
adc
lret
test
adc
xor
clc
lcall
inc
xchg
inc
iret
shr
leave
in
add
insb
fs
jecxz
adc
adc
add
mov
mov
cld
add
ret
lahf
jne
icebp
jae
jg
add
mov
sti
stos
sub
jl
adc
mov
pop
pop
mov
mov
add
inc
cmp
ljmp
jo
scas
xor
leave
inc
popa
mov
push
dec
or
fwait
dec
out
cmc
sbbb
popf
xchg
lods
xor
lcall
cwtl
and
scas
jle
cmc
test
sbb
and
mov
mov
xchg
jno,pn
mov
sub
fnstenv
test
dec
dec
mov
call
and
lock
xchg
jmp
into
mov
jecxz
jmp
jecxz
cmp
insl
jbe
push
repz
mov
pop
mov
dec
out
jo
mov
or
push
push
mov
mov
out
bound
push
mov
pushf
mov
add
fcmovne
xor
sub
pop
pop
das
out
cmp
repnz
adc
test
and
xchg
xlat
in
rcr
and
and
lods
movsl
dec
xchg
push
pop
aam
add
sub
ljmp
pop
sub
add
mov
cmp
or
ja
xchg
ret
and
stc
in
xor
jns
int3
aam
subl
inc
add
inc
or
pop
int3
hlt
je
lahf
ja
mov
mov
ja
mov
repnz
hlt
cld
lods
in
jp
sbb
dec
inc
cmpsl
sbb
into
es
fdivrl
mov
push
inc
mov
xlat
jo
dec
fimuls
cmp
xchg
les
add
dec
pop
inc
dec
xchg
repnz
pop
push
and
jp
inc
lods
mov
inc
mov
lmsw
addr16
fmul
call
mov
adc
and
pop
js
mov
push
shl
lcall
insb
adc
cmpsl
pop
out
sub
fsubs
cmp
mov
sub
dec
stc
xchg
dec
aaa
push
adc
xor
out
aaa
cmpsb
xchg
into
mov
notb
int
adc
in
sbb
or
sub
test
lahf
jge
movsl
dec
pusha
pusha
add
pop
pop
std
mov
dec
sahf
mov
push
push
sti
pop
dec
pop
push
mov
fisttpll
rcl
mov
shrl
outsl
fdivs
cmp
hlt
and
loop
mov
mov
xchg
sbb
ss
aam
sub
or
cltd
sub
jo
dec
shrl
daa
push
or
inc
dec
std
data16
add
andb
nop
in
jbe
mov
test
inc
mov
ss
add
pop
lea
pop
inc
int
mov
lret
xchg
adc
iret
je
mov
fmull
mov
addl
or
adc
xchg
mov
insl
dec
arpl
pusha
loop
dec
bound
dec
push
dec
adc
das
ja
inc
or
loopne
call
cli
pop
add
jo
in
and
dec
test
fsubrs
in
addr16
push
jmp
mov
mov
aaa
mov
push
cmp
outsl
cli
add
loope
adc
mov
mov
inc
jp
sbb
test
mov
nop
aam
add
jne
sbb
add
pop
jl
js
mov
ss
data16
pop
rolb
cmp
jl
sbb
mov
add
mov
sti
std
or
out
xchg
in
int3
cmp
lcall
mov
cmp
adc
fs
mov
decl
mov
out
or
xor
xor
pusha
rcrb
cld
bound
dec
fidivrs
add
ret
icebp
out
or
xor
movsl
xchg
aaa
repnz
xchg
ret
cld
xor
mov
xor
cmp
sarb
arpl
or
and
sar
cmc
mov
paddw
es
jns
aam
ret
mov
scas
xlat
fmul
mov
aam
aaa
cmc
out
mov
or
popf
loope
dec
push
aaa
push
js
neg
js
sbb
xor
mov
push
and
in
jo
mov
jmp
je
pop
xchg
and
add
mov
lods
adc
mov
pop
push
push
sbb
andb
hlt
xchg
clc
lods
pop
cwtl
push
lret
and
stc
pop
lods
inc
lods
sub
mov
loopne
xchg
mov
and
add
fwait
sbb
jne
fistpl
mov
stc
fsubrs
shlb
push
xchg
call
sbb
outsl
push
btcl
popa
adc
mov
jmp
xor
xchg
dec
jecxz
iret
add
mov
sbb
sbb
popf
addr16
push
js
ljmp
int3
adc
dec
and
call
ffree
or
sub
test
fdivrl
push
aam
and
mov
jle
cli
xor
in
cli
mov
jno
ds
and
and
mov
inc
push
dec
in
mov
sub
xor
mov
add
int3
and
cs
pop
inc
imul
movsl
jns,pn
sti
adc
push
cmpsb
out
mov
cmp
push
cmp
or
out
adc
jle
jp
jnp
fistl
pop
aas
push
jp
mov
loope
sbb
cwtl
icebp
sbb
adc
push
push
insb
repz
add
ret
push
xor
cmp
mov
xlat
je
rorb
mov
jb
pop
enter
or
or
adc
or
cmp
insb
int
fmuls
xor
mov
addr16
and
xlat
scas
jecxz
jmp
lcall
mov
stc
fldenv
or
leave
aad
sbb
dec
inc
negl
bound
fists
and
xor
dec
adc
sti
imul
ret
in
int
xchg
or
dec
jge
inc
sbb
push
jo
call
les
sbb
cwtl
mov
cwtl
gs
xlat
pushl
dec
dec
test
push
xchg
xchg
push
xchg
push
push
test
xchg
lret
mov
cmp
scas
int
dec
icebp
jp
jecxz
test
clc
pop
loopne
and
fwait
xor
push
test
fiadds
and
xchg
outsl
xor
pop
mov
sub
popf
cmp
arpl
hlt
imul
lret
clc
stos
xchg
insl
into
bound
add
lds
lods
pop
dec
push
jno
iret
and
mov
sti
push
cmp
sbb
scas
mov
cmpsb
rorl
fs
mov
add
aaa
mov
xchg
sub
pop
repnz
hlt
or
in
pop
or
jne
push
pop
popa
gs
dec
push
jl
arpl
test
lret
loopne
adc
leave
rcrb
fdivrl
mov
add
lds
cmpsb
inc
adc
and
cmp
ja
inc
pushf
sahf
push
push
sub
mov
push
and
je
pop
jae
pusha
push
push
mov
xorb
test
rorb
mov
cmp
push
in
mov
pusha
jae
iret
push
loopne
xchg
mov
arpl
dec
adc
fs
arpl
push
add
and
jge
cmp
stc
out
ret
mov
roll
sbb
fisubrs
cltd
push
inc
arpl
std
inc
and
jo
ficoms
in
and
dec
call
jnp
jns
out
leave
inc
int3
mov
sti
gs
jl
push
pop
ret
hlt
dec
and
push
add
or
ja
addb
inc
repnz
clc
adc
pop
jb
mov
sahf
pusha
arpl
mov
xor
fldcw
in
jle
movsl
mov
pop
and
pop
imul
pop
imul
scas
push
push
lea
cmp
inc
rcrl
jns
in
popf
jbe
push
sbb
aaa
or
mov
and
mov
cs
int3
sbb
dec
imul
aas
shrb
sub
push
sub
adc
jbe
mov
mov
sarb
jmp
push
add
fsts
or
sbb
cwtl
pushf
ficoms
scas
rcrl
fbstp
lods
out
mov
sub
pop
popf
add
mov
add
inc
push
cmpsl
mov
mov
adc
fcoms
sbb
adc
loopne
mov
add
xor
jno
pop
lcall
mov
add
jns
fdivrl
pop
rcll
aas
jl
sti
in
dec
test
sub
pushf
divb
movsl
mov
sub
push
shlb
push
fcomi
push
aaa
dec
js
dec
aad
mov
ds
and
or
dec
lods
xor
sbb
lods
push
add
push
arpl
outsl
jle
xchg
das
sub
stos
insb
jecxz
push
push
cmp
push
int
stos
dec
sbb
or
hlt
lahf
les
sti
fidivrs
arpl
dec
dec
sub
aaa
push
call
aam
inc
push
push
mov
mov
aad
pop
movsb
xlat
or
sarl
mov
cmp
popa
aad
push
push
mov
stos
test
mov
mov
ss
jb
aaa
inc
enter
aad
or
sbb
fisubl
aaa
aad
push
scas
add
ror
fcompl
mov
nop
and
loope
xor
ret
sbb
cs
jo
les
inc
adc
add
cmp
jl,pn
push
pop
and
rcrb
push
fstp
data16
dec
movsb
cld
mov
xchg
lcall
sti
xor
jle
jae
inc
inc
out
mov
fisubl
sub
jecxz
xchg
pop
stos
in
pop
mov
mov
inc
je
pop
ret
and
pop
nop
xchg
pushf
pop
leave
adc
pop
push
jo
mov
push
inc
test
mov
cs
sub
and
or
xor
pushfw
lea
cmc
jmp
push
shll
cmovns
jbe
pop
cmpsb
inc
xor
out
mov
push
scas
mov
pop
lea
mov
inc
fimuls
jb
push
jne
das
outsl
sub
test
in
lods
shl
mov
lods
scas
int
pop
lret
inc
jge
mov
xor
aad
iret
imul
cmpsb
xchg
and
jle
jg
xchg
sbb
andl
mov
pop
test
sarl
popa
push
shl
mov
sub
lret
lret
and
leave
shlb
rcrl
inc
jne
pushl
stos
mov
add
ja
push
inc
xchg
sbb
ret
pop
lahf
pop
cmpsl
sbbb
adc
dec
imul
std
stc
imul
and
ss
sub
loop
pop
sub
mov
rcr
insb
and
jns
fwait
lods
xor
test
mov
or
es
inc
push
pusha
idiv
xor
xchg
add
int3
pop
xor
dec
movsl
mov
pushf
imul
pop
aam
jb
aas
scas
fildl
mov
jle
das
cmc
repz
inc
cmpsl
nop
jnp
mov
lock
in
add
popl
pop
sub
push
bswap
out
inc
mov
repz
mov
mov
push
into
leave
shll
stos
addr16
pop
or
scas
mov
or
cltd
push
lcall
sub
jb
lret
mov
into
movsl
bound
fldl
adc
inc
cmp
inc
sti
lods
mov
mov
and
test
jb
imul
sbb
push
sbb
pusha
push
adc
lods
mov
push
loop
push
movsb
in
fstps
sub
dec
or
rcrb
dec
mov
add
xor
call
cmp
dec
cmp
mov
add
mov
scas
mov
sub
adc
mov
sub
inc
and
push
xchg
cmp
ja
lds
cmp
jmp
sub
mov
pop
mov
mov
test
or
mov
push
ficomps
xchg
mov
cltd
jge
dec
rcl
jno
fcmovne
into
cmp
xchg
loopne
cmp
sub
pop
jae
push
xchg
sbb
jb
push
in
mov
test
lret
movsb
xchg
aad
mov
in
mov
notb
lret
outsb
scas
or
sub
ret
stos
iret
ljmp
mov
fcmovb
jge
clc
push
testl
loopne
outsb
and
ds
fcoms
adc
push
out
aaa
xchg
out
xlat
fcoml
dec
and
mov
dec
inc
lcall
mov
popa
xor
jg
mov
ss
push
dec
out
xchg
mov
adc
test
les
inc
and
jnp
inc
jp
sbbb
aaa
lock
dec
int3
mov
out
jge
ret
test
and
mov
mov
test
stc
subl
xor
cwtl
pop
cmc
iret
add
mov
push
je
nop
xchg
sbb
arpl
mov
mov
fidivrl
or
imulb
push
and
pop
mov
push
cmp
andb
xchg
pop
sarb
popa
xor
cmp
mov
jle
sahf
pop
jno
or
out
adcl
inc
add
cwtl
fists
push
stos
in
fsubs
lea
pop
pop
or
push
rcl
and
adc
leave
hlt
shrl
cld
jb
fisttpl
dec
mov
sub
xor
mov
push
add
push
rcr
scas
and
xchg
inc
lods
mov
adc
mov
dec
mov
je
inc
cmp
das
outsl
sbb
mov
arpl
push
lds
sub
push
push
lods
xchg
jl
adc
pop
imul
lcall
xor
addr16
fisttps
fistps
lcall
int
mov
xchg
lods
imul
clc
outsb
into
mov
nop
aaa
lret
add
test
or
xorb
push
call
outsl
imull
lds
roll
mov
mov
addl
in
sub
lea
mov
adc
mov
xchg
mov
int3
bound
dec
inc
xor
std
in
xor
lret
jle
mov
mov
dec
repnz
mov
das
cld
xlat
xchg
or
movsb
xchg
push
mov
cs
sbb
cmp
pop
cmpsb
xor
lds
je
in
sub
jbe
push
xor
pop
mov
scas
cmc
pop
in
mov
hlt
push
test
andb
movsb
pop
xchg
push
jo
inc
sub
sub
es
lret
cs
in
lds
adc
aam
or
push
cmp
sbb
fs
xor
fldt
push
inc
or
test
outsl
stc
mov
mov
loopne
jnp
repz
adc
mov
ja
fwait
popf
xchg
mov
in
ljmp
mov
leave
out
lret
add
adc
into
mov
xchg
sub
daa
arpl
cmp
frstor
loope
sub
jle
dec
sub
data16
xor
sbb
mov
andl
push
dec
rorb
push
mov
mov
xor
jns
sbb
push
pop
sarb
cltd
push
test
mov
out
clc
stos
add
scas
loopne
pusha
pop
call
cmp
lcall
icebp
ss
push
orb
add
leave
xor
mov
push
imul
fsub
adc
gs
into
push
not
cmpsb
int
pusha
xchg
dec
cmp
fs
pop
pop
lea
fisubrs
cmp
and
push
cmp
adcl
and
cltd
icebp
or
iret
in
jle
or
adc
dec
adc
sbb
arpl
flds
test
sub
shrl
lods
sbb
lahf
movsb
popf
mov
loopne
pop
adc
jge
int3
push
ficoml
in
push
sbb
mov
loop
ret
jp
and
outsb
int
jnp
sarl
nop
mov
sbb
pop
stc
pop
insb
cmp
rolb
negb
and
dec
insl
push
pop
inc
jmp
imul
inc
sub
push
lret
add
jmp
popa
jns
push
push
adc
sbb
lcall
sub
loope
dec
out
sbb
push
xor
dec
or
lahf
dec
loop
push
es
sbb
mov
lahf
xlat
mov
inc
pushf
push
jbe
test
mov
sub
out
mov
mov
in
pop
adc
adc
mov
imul
sbb
popf
xchg
enter
lret
test
pop
addl
mov
xor
pusha
lock
cs
or
sbb
push
cmp
int3
dec
sub
rcll
dec
add
cltd
in
clc
cmpsb
pop
mov
icebp
imul
jno
sub
stos
ret
xchg
mov
push
idivb
ret
inc
add
pop
sti
add
stos
dec
pusha
lret
push
dec
in
push
push
dec
or
inc
sbb
mov
xchg
mov
cltd
shll
jmp
mov
push
jmp
xor
xchg
mov
push
out
pop
iret
jo
int3
mov
fidivs
data16
dec
rcrb
mov
mov
mov
int3
push
popl
aad
xlat
lock
and
mov
sahf
leave
push
sahf
call
aas
mov
xor
jo
cmp
out
mov
cmp
setae
loope
movsb
cmpsb
daa
mov
mov
add
lds
out
sub
aad
xchg
push
sub
shll
fsubrs
stc
stos
loop
das
cs
pop
xor
jl
jg
bound
orb
les
sub
out
xchg
cmp
leave
inc
cltd
sbb
mov
pop
fmulp
lds
lea
addr16
sahf
jmp
test
sub
test
nop
cmp
xchg
jle
sub
insl
inc
or
scas
notb
push
das
das
lretw
adc
jl
fwait
insl
add
testl
dec
push
mov
dec
outsb
arpl
scas
outsb
xchg
cmp
stos
icebp
popa
outsl
inc
sub
sub
cmp
or
jl
xchg
mov
cmp
test
mov
int
xchg
fnsave
mov
inc
mov
pop
out
fnstenv
pusha
aas
fists
ret
into
sub
es
test
fldenv
adc
scas
sbb
xchg
or
mov
and
loope
andb
in
addr16
movsl
xorb
xchg
int3
xchg
jecxz
jns
out
lretw
addr16
int
add
lret
out
lea
add
leave
pop
mov
or
push
test
push
shll
loop
aaa
inc
rcr
pop
xor
stos
dec
xchg
dec
shlb
push
jno
and
aaa
jb
inc
sub
add
in
ljmp
sub
aaa
jecxz
fsubl
pop
sbb
dec
idivb
xor
mov
out
mov
push
mov
and
cltd
imul
push
pop
add
mov
push
xchg
and
fisubl
cmp
das
popf
mov
loop
sbb
aam
mov
cmp
mov
jmp
out
inc
pop
adc
xchg
xchg
xchg
mov
dec
pop
leave
hlt
out
sbb
lret
pusha
enter
mov
sahf
call
insl
popf
and
mov
iret
in
and
test
repnz
sbb
jne
mov
bound
mov
mov
leave
faddl
mov
out
outsb
add
movb
mov
mov
xlat
popf
dec
xchg
stos
dec
cmc
hlt
movsl
jge
nop
mov
xchg
and
pop
mov
dec
lcall
in
test
icebp
movsl
pop
rorl
mov
leave
push
xchg
push
loopne
xchg
pop
mov
cmp
sub
sbb
hlt
in
jge
insb
and
or
cmp
aas
jmp
push
cmpsl
out
mov
adc
inc
ret
ss
daa
or
out
rcl
sub
jnp
add
jb
mov
xchg
std
loop
fisubs
out
test
fwait
mov
dec
dec
jo
ja
xchg
and
out
pushf
pop
xchg
mov
sub
fstps
pop
push
cs
dec
push
pop
xchg
mov
or
mov
stc
aas
mov
fdivrs
mov
stc
xor
or
adc
sub
pusha
inc
dec
aas
jmp
fdivl
test
insl
mov
cmp
add
add
enter
fwait
or
fstps
add
sub
dec
hlt
mov
test
aaa
add
adcb
mov
xlat
sbb
adc
lods
outsb
nop
jmp
mov
mov
lock
xor
rolb
pushf
test
scas
int3
jl
imul
in
frndint
sar
lret
ret
jnp
cmpsl
andb
std
push
inc
xor
bound
scas
mov
daa
ret
ror
aas
in
ffreep
pop
negl
mov
fimull
out
add
inc
pushf
push
jns
or
jo
fs
jp
xor
dec
xchg
or
mov
sub
fnstcw
and
test
mov
arpl
rorl
and
aad
imul
fildll
stos
daa
add
push
faddp
cmc
sub
jl
xor
es
adc
ja
push
sub
and
sbb
aad
bnd
jmp
mov
icebp
add
popf
mov
jne
or
shrb
inc
fwait
std
js
daa
xchg
xchg
loop
fidivrl
outsl
jae
dec
cli
push
sbb
outsl
sub
or
cmc
in
sahf
sahf
pop
loope
in
jbe
ss
mov
cmp
into
clc
sti
sub
cmp
and
daa
sti
cmpb
rcrl
fldcw
ljmp
leave
stos
push
jno
test
scas
stos
pop
ret
daa
ficompl
cwtl
cmp
cmp
icebp
sbb
jl
mov
aas
in
xor
mov
shlb
pop
inc
pushf
std
call
dec
popa
cs
ret
mov
cltd
adc
jae
mov
mov
adc
lods
pop
xchg
fs
mov
xchg
stc
jmp
popa
adc
mov
add
ljmp
adcb
fstp
adc
leave
jo
mov
sub
xchg
stos
fcmovu
sub
popa
mov
rolb
mov
cmpsb
jb
inc
les
jo
dec
xchg
pop
xor
imull
aaa
or
mov
cld
cmp
pop
push
aas
mov
adc
xchg
inc
add
cmp
sbb
push
in
ds
jecxz
or
mov
test
stos
ja
inc
cmp
clc
mov
xor
xor
cmp
mov
lret
inc
sub
mov
je
cmp
hlt
xchg
in
loopne
es
adc
adc
orl
daa
xor
cmp
push
aad
sbb
xchg
in
je
pop
and
out
xor
push
stos
pop
mov
jmp
adc
xor
imul
out
sub
bound
or
pop
cwtl
lret
jge
mov
jb
fwait
or
cmp
xchg
out
or
sbb
sub
add
mov
test
cmp
inc
int3
push
sbb
xchg
ret
mov
cmpsl
mov
and
popa
mov
int3
cmc
or
stos
sbb
pusha
int
sar
loope
adc
jp
xchg
outsb
aas
cmpsb
and
sbb
mov
mov
cmpb
push
std
pop
mov
test
xchg
sub
iret
enter
cmp
shll
add
fdivrs
pop
lock
stc
dec
pop
dec
stos
or
insb
sbb
sbb
xor
int3
movsb
fmull
mov
mov
jmp
cltd
cmpsb
ljmp
out
mov
push
inc
stc
in
pop
popa
aaa
loopne
lock
ljmp
arpl
dec
stos
cmp
shrb
jl
jb
pusha
dec
ss
pop
mov
imul
std
in
dec
das
in
cmp
fisubrl
hlt
xchg
mov
sbb
adc
inc
call
or
sub
es
in
xor
stos
push
shl
cmp
imul
xrelease
nop
push
loopne
and
xchg
rcll
inc
pop
insb
inc
imul
mov
or
orb
imul
lahf
jl
sub
nop
arpl
mov
jl
mov
iret
lcall
jae
in
jle
jo
dec
hlt
push
dec
fsubrs
imul
icebp
mov
lret
adc
dec
mov
pop
cld
insb
add
mov
subb
xchg
xor
add
test
hlt
cltd
jp
int
adc
pop
out
cmp
stos
inc
push
sub
pop
mov
mov
cld
xchg
dec
add
hlt
shrb
cmp
dec
push
rcrb
sbb
por
daa
ds
mov
add
xchg
test
enter
mov
sbb
frstor
fisttps
bound
cwtl
outsl
push
cmp
pop
pop
xor
xor
sbb
sub
movsl
fsubs
popf
sub
cmp
dec
jecxz
int
bound
jmp
or
mov
and
mov
push
adc
popf
cmpsl
iret
sub
aas
jg
mov
scas
lret
push
mov
mov
hlt
lods
data16
jge
cmp
cmp
insl
inc
sbb
dec
sub
icebp
dec
les
lds
fadds
sub
cmp
out
xor
imul
jl
decb
iret
outsb
dec
cltd
mov
lahf
add
mov
scas
pop
or
lds
hlt
leave
push
jmp
xor
daa
std
sub
daa
loope
push
push
push
dec
jb
xchg
in
add
lahf
test
test
jbe
into
pop
add
mov
and
sub
push
in
inc
add
xchg
and
sahf
xchg
mov
mull
add
jp
mov
ret
sbb
and
jge
inc
fsubl
cltd
inc
ljmp
jbe
lea
sub
add
shlb
mov
dec
jmp
add
cs
arpl
mov
into
es
inc
test
daa
xor
fsubrl
jle
adc
gs
mov
repnz
xor
lret
pop
bound
test
jmp
movl
add
xor
jne
pop
push
and
call
adc
sti
ret
es
xchg
sbb
mov
ret
insb
inc
iret
jb
push
test
test
and
mov
gs
xchg
ret
adc
dec
mov
inc
mov
mov
pop
xchg
push
shlb
sbb
movsb
mov
push
imul
test
dec
adc
mov
pop
sbb
cmp
cmp
xchg
test
adc
xor
lods
sbb
jg
in
ret
out
or
inc
and
pop
out
cmp
mov
lahf
and
sbb
push
xor
repz
sub
dec
js
fidivrs
mov
lret
in
fcoms
fs
arpl
in
and
hlt
jns
mov
mov
push
sbb
mov
sbb
cmp
sub
and
sbb
loope
dec
pop
push
mov
cli
mov
and
or
adc
jbe
sar
add
popa
jecxz
lock
or
js
dec
addr16
dec
movsb
mov
xchg
push
xor
or
lods
add
lret
sub
data16
sbb
sub
mov
aas
cs
clc
or
fcomps
mov
test
cltd
pop
fs
cmpsb
jbe
mov
mov
iret
xor
ret
push
call
cltd
mov
xor
push
push
ss
sub
mov
lahf
cmpsb
adc
xorl
scas
movsl
cltd
clc
movsb
jbe
sbb
lea
xchg
sub
enter
push
lea
xorl
test
fcompl
clc
mov
mov
and
adc
pop
jmp
jp
sarl
xor
add
cwtl
sti
fcomps
and
mov
xchg
idivl
jno
xlat
or
xorps
or
and
cmp
pop
mov
sahf
int
push
mov
stos
sub
sbb
mov
jne
mov
add
xchg
stos
stos
in
lds
out
cs
loop
popa
int3
stos
lcall
add
fsts
outsl
xor
mov
jne
rcr
xor
vorps
dec
movsb
ret
bound
mov
aas
int
ljmp
incb
dec
dec
and
mov
adc
cmp
xchg
dec
push
fdivs
mov
cmp
test
mov
xor
push
fdivrp
cmpl
cmp
cmp
push
loope
xchg
adc
in
in
in
or
jmp
jno
mov
pop
in
pop
leave
clc
cmpsl
mov
pop
dec
jbe
jno
pop
fnsave
outsl
jle
lods
and
and
jne
jns
jnp
rolb
push
mov
jno
aaa
cs
jno
and
es
arpl
add
dec
sbb
rorl
test
xlat
stc
pusha
cs
stos
testb
jo
add
mov
loop
test
pop
push
std
adc
sahf
in
push
test
ds
mov
push
lcall
pop
xor
xlat
or
loope
xchg
cmp
stc
xchg
mov
jno
cwtl
lock
icebp
insb
cs
jnp
sbb
add
pop
xor
or
cmp
or
or
push
cmp
test
repnz
int
sarb
ss
mov
inc
mov
ss
insl
jns
jbe
rcll
jmp
lock
cli
mov
sub
cwtl
inc
add
test
xchg
add
inc
jg
sti
inc
jecxz
dec
or
mov
es
repz
test
pop
hlt
pushf
aad
jo
shll
outsl
test
mov
adc
fs
pusha
das
dec
mov
push
push
repnz
icebp
aaa
int
bound
push
xchg
xchg
outsb
out
inc
jns
fwait
into
mov
mov
lods
adc
popa
rclb
mov
mov
clc
and
push
adc
xchg
xlat
pop
jb
std
pop
repz
mov
sub
mov
dec
or
lods
in
lahf
mov
push
popa
repnz
and
jne
or
sub
ret
push
jmp
pop
pop
scas
insb
cwtl
xor
in
cld
jmp
xor
xchg
gs
ficomps
lock
dec
inc
fisubs
clc
andl
mov
stc
add
mov
outsb
mov
leave
cmp
in
or
test
dec
iret
push
mov
out
fldl
imul
aad
popf
dec
jo
lret
mov
adc
and
inc
xchg
mov
xor
popa
dec
sub
into
mov
lods
xchg
push
dec
orb
das
or
jo
inc
jl
xchg
dec
icebp
mov
shll
xchg
sub
add
fcomps
imul
cmp
sbb
scas
sbb
jbe
pop
mov
push
push
aad
and
gs
das
inc
sbb
fidivrl
outsl
push
call
enter
outsl
and
ds
sbb
sahf
loopne
shl
mov
sahf
push
mov
pop
add
out
mov
lods
mov
pop
pop
call
andb
inc
mul
addr16
and
mov
fists
rcll
gs
bound
lea
iret
out
pop
pop
rorl
aad
sbb
pop
cltd
push
push
xchg
orb
or
xchg
dec
insb
jo
test
xor
mov
loope
adc
pop
push
stc
sub
aas
inc
pusha
iret
ds
sbb
cli
aas
adc
and
dec
jo
roll
push
outsl
sub
bound
jo
push
and
ret
idiv
push
mov
aad
imul
jmp
mov
sbbl
inc
dec
sbb
lcall
cmp
stos
cmpb
and
lret
jmp
dec
orb
push
mov
pop
xor
push
addr16
mov
mov
mov
and
mov
xchg
pusha
cmp
mov
fcomps
and
idivl
ds
jb
fiaddl
xor
push
fsubr
loope
lret
mov
rcrb
cltd
dec
cli
leave
mov
insl
rcl
mov
jb
movsl
mov
scas
shr
in
fcomi
add
lcall
push
xchg
stos
sbb
sbbb
xchg
add
mov
inc
dec
or
outsb
mov
mov
les
pop
push
push
sub
pop
mov
mov
push
dec
xchg
call
shll
sbb
sbb
repz
in
mov
jl
sti
push
inc
in
mov
adcl
stos
cmpsb
xor
jecxz
stos
or
xor
lds
div
mov
add
data16
aad
imul
sub
les
loopne
and
test
shr
rcrb
push
dec
adc
int3
repz
aas
add
ja
sbb
enter
add
adc
xor
add
sbb
or
cmc
cmp
adc
sti
push
lods
or
jg
stc
ret
cltd
push
adc
bound
repnz
bound
add
xorb
insb
call
mov
cmc
sbb
dec
dec
std
cmp
cmpl
inc
sbb
inc
in
test
into
loope
add
push
xchg
cmp
push
xchg
fldcw
stos
bound
sbb
jmp
sub
xchg
pusha
mov
cmp
sarl
and
jl
inc
sub
adc
loope
fs
clc
stos
outsl
push
push
sub
and
lahf
xchg
pop
jae
mov
clc
sbb
or
out
jge
clc
out
jle
mov
cmpsb
jno
mov
pop
out
jo
push
leave
pop
sbb
loope
mov
cmc
mov
or
insb
inc
popf
inc
cmpsb
data16
pop
mov
mov
lcall
lock
test
cwtl
cli
jp
in
mov
lret
pop
int3
mov
das
pusha
dec
mov
adc
adc
adc
jg
dec
stos
loopne
test
adc
jge
mov
push
enter
pop
pop
xchg
test
ljmp
xor
xchg
sti
mov
and
or
mov
fcomps
aas
jl
pop
imul
ret
jns
push
stc
mov
mul
push
lahf
xchg
mov
push
repnz
js
mov
imul
mov
cmpsb
jmp
inc
lret
ret
mov
and
fnstenv
das
ret
ss
fdivl
and
pop
mov
mov
jae
arpl
ficompl
inc
es
dec
xchg
popa
loop
and
sti
sub
pop
adc
push
xchg
mov
sub
push
or
xchg
shlb
and
xor
or
ss
jo
mov
mov
sbb
dec
cli
cmp
inc
dec
cli
xchg
outsl
mov
aam
dec
pop
push
adc
insb
xchg
lea
in
enter
in
jmp
fdivs
sbb
jne
nop
ficompl
cmp
push
mov
lahf
xchg
xor
xchg
daa
orb
loop
rcll
mov
xor
es
je
fdivl
cltd
or
data16
sub
adc
push
cmp
jl
vmread
lds
scas
bound
cmp
negb
das
stos
push
xchg
push
cmp
jo
mov
and
pop
xchg
aad
push
or
pop
mov
leave
mov
xlat
cmpsl
das
mov
js
adc
fldenv
rcl
pop
aas
mov
inc
aas
inc
loopne
xchg
loope
std
ficompl
fst
cmp
push
lock
in
xor
and
es
adc
cmp
aaa
dec
lods
pop
inc
in
scas
icebp
adc
fisubrs
mov
sti
les
cmp
ds
aaa
push
mov
lock
sub
cmp
loope
out
cmc
sub
mov
or
daa
adc
into
sahf
mov
push
add
jae
lea
mov
mov
popf
or
arpl
test
inc
leave
adc
ja
jns
or
pop
jle
pop
jne
outsb
xchg
xor
cmp
test
rorl
push
dec
mov
xor
or
ljmp
lock
scas
xor
or
sbb
adc
add
fidivrs
clc
sub
in
jb
shl
stc
ret
testb
push
jne
aaa
add
mov
das
loopne
outsl
mov
dec
jae
cmc
fcmovbe
dec
jp
test
sub
add
mov
pop
mov
in
gs
test
dec
je
lcall
dec
pop
mov
pop
fnsave
jge
mov
repnz
scas
sahf
add
jge
mov
outsl
insl
idiv
cld
cmc
mov
adc
mov
cmp
stc
popf
out
or
sti
or
sbb
cmc
jo
dec
pop
sbb
push
mov
test
and
xchg
lock
ljmp
push
es
bound
sahf
call
leave
idivb
mov
mov
orb
in
fnstenv
test
adc
jl
scas
mov
cmp
shrl
fstp
icebp
and
in
push
inc
aad
dec
push
addl
in
cld
jg
pop
arpl
aam
mov
ljmp
pandn
xor
sbb
aam
adc
pop
add
add
in
adc
cmp
add
inc
or
pushl
or
jbe
cmpsl
push
clc
or
jne
sub
jle
cmp
dec
cmp
mov
or
orb
cmpsb
nop
call
push
cmp
movsl
fldl
idivl
aam
cmp
xchg
stc
pusha
dec
aaa
pop
pop
in
mov
inc
es
push
popf
add
ds
lea
adc
push
test
adc
js
adc
out
out
enter
out
xor
and
fnstsw
jecxz
sti
adc
push
aaa
xlat
pop
or
and
fwait
clc
bound
xchg
rcrb
xlat
lahf
daa
mov
add
inc
mov
push
int
jecxz
mov
test
mov
jns
add
shr
dec
arpl
ret
jg
xorb
test
xlat
xor
jecxz
sbb
outsb
addr16
addr16
test
inc
notl
divb
test
xor
std
rcr
cwtl
jle
add
xchg
bound
fldenv
sbb
test
lock
pop
std
mov
sub
stc
inc
std
bound
test
mov
mov
imul
dec
pop
mov
pop
push
pop
adc
or
mov
xchg
movsl
push
mov
adc
inc
push
aad
inc
add
js
outsb
pop
fsubs
js
fdivrl
mov
testl
mov
sbb
mov
push
pop
loope
fcoml
sbb
aad
xchg
jae
mov
lods
inc
cmp
loop
pop
pop
sbb
mov
inc
mov
loope
dec
ficompl
cmpsl
mov
mov
mov
add
lods
or
jge
push
xchg
inc
test
popa
loopne
test
mov
sbb
or
xchg
fcomps
leave
mov
mov
sbb
mov
sub
inc
jno
xchg
pop
stc
stos
imul
cli
popf
add
or
jg
cli
mov
cmp
repz
inc
loop
fcoml
and
out
push
add
mov
sbb
adc
sub
bound
add
imul
cmp
cmp
ret
mov
aas
xor
sub
push
lods
mov
in
adc
out
mov
sub
enter
sub
fistpl
pop
movsb
cmp
fistl
inc
test
mov
lahf
cmpsl
insl
lretw
lods
jne
imul
shlb
not
ja
xchg
inc
dec
in
mov
scas
mov
adc
and
rolb
out
cmc
insl
cmp
clc
mov
pop
sub
xchg
pop
addr16
fs
fnstsw
out
fisttpl
ss
jo
jl
ss
lods
xchg
shlb
xor
into
mov
xor
imul
out
push
scas
sub
into
mov
lock
or
fiaddl
ja,pt
jle
and
push
cwtl
subb
xorb
inc
push
pop
xchg
aaa
lcall
lcall
outsb
xor
outsb
push
sbb
sbb
pop
or
dec
les
add
aaa
movsl
fsincos
mov
cwtl
jge
mov
fsubs
leave
inc
fiadds
push
rcr
jmp
or
jnp
mov
stc
jbe
jbe
ret
inc
sbb
icebp
pop
mov
sub
xor
and
inc
jbe
jecxz
push
loopne
daa
inc
enter
enter
fistpll
aaa
fildll
xchg
xorl
ds
mov
mov
jo
jmp
xor
xchg
push
jo
fidivl
fmul
mov
cmpb
gs
jnp
adc
aam
push
push
push
dec
cmpsb
int3
iret
inc
adc
jbe
sub
clc
push
add
xchg
sbb
mov
xchg
mov
pop
sbb
add
lock
andb
lahf
xchg
movsl
inc
ror
outsb
mov
push
add
mov
andb
and
mov
dec
shl
cmc
jae
loope
xorb
push
dec
jle
ret
aas
test
inc
lcall
mov
sbb
sub
xchg
sub
add
aaa
sbb
fisttpl
cli
jp
xor
or
cmpsl
rorb
sub
cmp
jl
std
clc
lret
jmp
sbb
xor
fistps
jae
fs
xchg
sbb
popf
inc
adc
test
lcall
jg
test
and
pop
cli
xlat
loope
adc
mov
lds
xchg
inc
jecxz
add
lds
test
adc
mov
xlat
jmp
mov
cmp
mov
outsl
mov
dec
idivb
mov
mov
push
xchg
int
fmul
push
cmp
adc
jno
xchg
cli
add
jbe
dec
out
decb
movsl
push
jl
into
sub
sub
xchg
movsl
add
pop
push
and
imul
in
ret
and
or
sub
repnz
decb
std
clc
add
mov
imul
sub
or
aad
dec
adc
dec
in
sbb
roll
arpl
push
rcr
or
imul
jp
test
adc
xchg
mov
xor
mov
popa
lahf
repz
add
pop
push
inc
inc
sub
jns
mov
sub
mov
jne
adc
sbb
les
insb
push
testb
add
or
add
add
add
add
add
sbb
or
mov
faddp
push
in
sbb
xchg
out
popf
or
out
popf
or
je
jae
mov
pop
popf
or
out
popf
or
out
popf
or
hlt
jnp
sbb
xchg
sbb
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
mov
and
add
adc
add
add
aam
add
enter
fnstcw
jge
add
add
cltd
push
in
mov
add
rolb
add
test
add
add
add
pushf
rolb
adc
add
push
cpuid
cmp
add
add
sbb
out
push
sti
push
add
add
add
add
add
add
scas
jmp
add
add
js
inc
add
rolb
add
mov
add
add
add
add
add
add
add
cmp
bound
add
rolb
add
or
add
add
add
gs
add
push
clc
lock
out
iret
cmp
add
loopne
add
add
add
add
add
add
sbb
add
insl
sub
xchg
add
add
repnz
pop
iret
push
adc
push
add
add
js
add
add
add
sub
add
adc
add
sub
add
add
hlt
mov
mov
add
adc
add
add
push
add
inc
add
add
add
loop
or
add
add
shlb
rol
int3
in
fsubrs
push
int
jne
sbb
lahf
fisttps
rcrb
iret
adc
daa
mov
mov
push
ss
pushf
jo
jno
cli
mov
or
xchg
outsb
jbe
addr16
cmp
loopne
mov
xchg
fbstp
and
pop
jg
pop
inc
mov
mov
imul
xchg
jle
pusha
pop
jmp
stc
inc
lods
fs
aad
adc
inc
inc
lret
dec
rcrl
aam
push
insl
cmp
ret
adc
inc
ret
mov
push
faddp
jp
sbb
fwait
push
lods
movsl
sub
nop
ret
int
jge
cmpsb
xchg
mov
hlt
pop
sbb
in
mov
repnz
sub
pop
sbb
inc
stos
pop
cwtl
std
arpl
and
aam
lock
lods
lds
or
outsl
rclb
fnstcw
int
pop
jne
mov
hlt
mov
cld
cltd
push
mov
xchg
imul
loopne
sbb
dec
dec
adc
adc
push
or
add
lock
out
cwtl
das
mov
pop
lcall
add
out
mov
hlt
mov
push
lock
xchg
stos
dec
add
inc
xchg
pop
scas
mov
cmpsl
mov
testl
xor
adc
jl
nop
mov
cltd
push
repnz
and
stos
add
ljmp
xchg
loopne
or
xchg
cltd
or
cmp
clc
call
add
out
cli
mov
inc
cmp
jne
aas
xchg
repz
mov
repnz
gs
scas
fxch
add
push
orl
in
fmuls
data16
xor
or
cld
loopne
jb
push
icebp
mov
pop
das
jbe
enter
insb
push
imul
and
and
aam
sub
or
pop
adc
mov
push
adc
dec
ljmp
call
into
sar
fnstsw
das
pop
or
dec
mov
ja
push
mov
sub
pop
out
aam
dec
jno
inc
inc
fwait
xor
jecxz
sub
mov
mov
jecxz
pop
add
leave
lahf
mov
icebp
add
inc
add
fwait
sti
sub
and
roll
mov
jb
xchg
aas
out
aad
nop
shll
adc
jne
jbe
pop
cmpsb
andl
ficoms
pop
inc
push
sub
repnz
mov
adcb
jbe
in
and
sub
stos
xchg
sub
xorb
mov
sbb
in
nop
jmp
fisubs
mov
adc
repnz
jae
dec
lds
add
call
cwtl
mov
and
pusha
rcrl
call
divb
cmp
jecxz
leave
nop
jle
add
popf
lcall
push
dec
lret
divl
jbe
add
mov
cmp
std
pop
mov
mov
mov
fxch
jns
and
mov
scas
lock
and
cmp
enter
stos
sbb
lds
fcom
addr16
push
loope
xchg
and
icebp
and
add
fsubrs
add
subb
sub
pop
cmp
xchg
fbld
or
mov
jae
ret
mov
popa
std
sub
adc
bound
shll
or
or
add
adc
cmp
inc
iret
out
fstpl
stos
rcr
call
cs
sbb
stc
rol
fiadds
adc
xchg
inc
cli
and
pop
mov
scas
adc
cmp
pop
sbb
mov
mov
out
ret
sub
add
hlt
cli
ret
xchg
inc
bound
jo
enter
sbb
aas
fidivl
fs
xchg
lahf
mov
xchg
inc
repnz
aaa
pop
inc
rcll
xchg
les
mov
mov
dec
or
push
inc
cmovo
jns
fildl
jo
jecxz
arpl
pop
movsb
jbe
push
xchg
fidivl
gs
mov
addr16
inc
add
push
jmp
lods
mov
ja
push
xor
aad
mov
stos
sarl
je
test
adc
je
push
dec
mov
stos
imul
aaa
sarl
jo
loopne
dec
imul
nop
jl
out
cmovnp
xchg
mov
pop
push
lret
cmp
mov
popa
sub
adc
cld
mov
lods
in
mov
scas
scas
xchg
and
pushf
loop
push
enter
stos
je
mov
dec
cmp
sbb
cmp
lret
mov
cmp
hlt
push
fcmovnbe
jge
pop
xchg
stos
insb
and
lds
pop
adc
sub
push
daa
add
xor
scas
mov
popf
mov
lods
pavgw
movsb
call
lods
xor
shlb
cmpl
fistpl
mov
data16
clc
loope
cmp
add
call
in
sub
dec
pop
xor
ljmp
add
fwait
pop
ds
fsubrl
dec
mov
into
mov
lock
test
pop
addr16
cmp
jbe
push
jg
xchg
dec
dec
jno
adc
xlat
dec
pop
cmp
out
sub
xchg
push
mov
lock
aad
out
jbe
mov
and
adcb
movsl
xor
aas
jmp
jmp
test
je
cmpsb
xor
cmp
imul
mov
lret
in
mull
inc
xorb
ret
cld
push
jle
into
repz
sub
ja
xor
pop
inc
push
lock
xor
pop
enter
ja
push
fildll
shrl
push
mov
add
jmp
repnz
rcr
mov
orb
push
shrb
sarb
into
fwait
inc
sbb
dec
mov
adc
add
mov
int
pop
xchg
aaa
test
sub
mov
add
xor
decl
xchg
cmp
push
jbe
mov
push
xchg
add
xor
sbb
fwait
push
mov
push
inc
inc
add
jmp
es
rclb
jmp
dec
lods
ljmp
jnp
mov
and
sbb
xchg
adc
cltd
pop
hlt
jg
inc
dec
in
cmpsb
es
pop
pop
insl
jnp
cmp
sahf
adc
int
jle
scas
cmpsb
xchg
loopne
sub
cmpsb
cli
mov
adc
std
xchg
popa
jb
mov
cmp
sahf
mov
in
xchg
mov
push
test
push
aam
nop
or
xchg
je
xchg
dec
lods
fstl
movsb
mov
inc
jge
cmp
mov
aas
lahf
sub
sub
sub
repnz
out
push
dec
outsb
cwtl
stos
dec
xor
jge
xchg
and
mov
xor
jmp
and
sub
jnp
jge
pop
in
les
fisubrl
pop
and
daa
push
test
push
add
cmp
popa
xchg
das
cmpsl
imul
mov
jle
test
fisttps
popl
fwait
dec
shll
push
push
ja
inc
or
jo
lcall
dec
movsb
aaa
mov
mov
adcb
cli
rcl
add
inc
push
out
aas
mov
dec
dec
pop
cltd
das
xor
ret
lea
dec
hlt
mov
sbb
pop
stos
roll
rorb
xor
fcmovne
adc
in
jg
andl
push
cmp
paddsw
cmc
adc
out
in
mov
adc
sub
fimuls
ja
pop
jb
test
leave
jns
in
mov
fsubs
jecxz
jo
add
sbb
cmpsb
dec
push
sbb
xchg
movb
testb
lea
insl
lret
popa
jne
xchg
cli
mov
fcoml
pop
stos
xchg
or
lock
mov
lret
outsb
sbb
xchg
insl
inc
lahf
fsub
loopne
jp
cltd
xchg
mov
iret
or
mov
test
movsl
imul
movsb
cmp
add
daa
cmp
test
sbb
lret
pop
sbb
cmp
pop
adc
stos
mulb
sbb
xchg
popa
jnp
pop
call
out
popf
sub
pop
imul
daa
popa
push
jg
jmp
stos
push
int
jns
sti
fistps
cmp
mov
aas
jbe
cmp
and
out
insb
mov
jo
aaa
jae
cwtl
cltd
rolb
and
dec
or
jbe
xor
fldt
sbb
stc
inc
sbb
cmc
outsl
pop
loop
mov
mov
int3
sahf
xor
lods
ss
cmp
inc
xchg
ret
cmp
dec
or
cmp
xor
decl
test
cmp
sub
mov
in
or
and
scas
jmp
adc
sbb
ret
dec
push
xor
outsb
outsl
push
add
aad
mov
mov
or
sbb
mov
gs
or
adc
inc
mov
inc
sbb
js
cld
jb
inc
rcrl
loopne
mov
push
and
dec
add
push
fdiv
pop
jmp
jg
xchg
in
xchg
shlb
mov
mov
push
ds
movl
inc
sub
add
sbb
fdivrs
adc
insb
pop
rcr
push
dec
and
jae
xlat
push
cmp
into
xor
and
mov
fdivs
mov
les
pop
cltd
repnz
imul
jg
add
repnz
sbb
cli
aad
mov
aad
and
jle
neg
pop
int3
rclb
adc
pop
pop
add
lret
mov
fnsave
add
xor
lods
leave
stos
shr
dec
mov
mov
mov
jns
sbb
adc
adc
cmpsb
shll
sub
fstps
inc
and
mov
and
shll
add
inc
add
and
loope
fisubl
push
or
mov
xor
lods
cmp
xchg
loope
mov
stc
mov
fisttps
sbb
dec
lds
cmp
pop
adc
popf
cmpsl
mov
lahf
lret
lock
jmp
popa
gs
cmpsb
push
push
lcall
movsb
cltd
push
and
and
jns
pop
cwtl
js
push
mov
xchg
and
pop
cmp
test
aaa
sub
rol
add
dec
decb
mov
mov
add
lahf
adc
jmp
push
jmp
or
repz
and
pop
lahf
sub
lea
cli
mov
lcall
mov
mov
pop
cmp
pop
imul
xor
rolb
leave
mulb
dec
jmp
lcall
mov
add
in
lock
insb
sub
repz
jns
das
dec
fsubs
imul
push
jge
int3
cmp
insl
or
lds
jge
clc
es
inc
inc
sub
mov
push
xchg
mov
fsub
mov
push
movsb
data16
int
push
ljmp
mov
popa
inc
stos
mov
enter
cmp
inc
mov
push
xchg
jge
ret
sarl
aam
dec
jecxz
enter
cmp
cmpsb
push
sbbl
sub
clc
add
stos
call
push
push
pushf
cmp
adc
sbb
in
or
bt
in
add
jge
repz
adc
cmpsb
lods
add
mov
dec
inc
int3
inc
shr
repnz
jns
scas
lock
imul
fwait
adc
gs
inc
shrb
push
jp
add
push
or
mov
and
or
call
adc
popf
fnstenv
and
push
jns
into
inc
fiadds
rorb
xor
pushf
cwtl
das
adc
lret
mov
shlb
adc
ds
mov
push
or
sbb
push
mov
adc
inc
sub
jecxz
lds
fiaddl
dec
or
jo
add
ret
pop
ret
inc
loop
xor
pop
scas
out
xchg
push
sub
jl
insl
and
les
popa
cmp
push
ja
add
popf
ret
fimuls
mov
adc
je,pn
push
aas
fwait
es
lea
aam
push
test
mov
xor
mov
test
push
scas
fisubs
aad
jnp,pn
mov
inc
popa
ret
push
cld
jge
rclb
gs
arpl
test
sbb
cli
and
popa
sbb
jp
movsl
mov
data16
gs
jecxz
mov
arpl
xchg
leave
shl
push
xchg
arpl
push
das
enter
pushf
shll
jno
xorps
dec
sbb
bound
out
mov
leave
in
push
fmul
and
rcrl
mov
xor
jmp
es
mov
lea
mov
nop
push
sbb
rcll
mov
lcall
jge
data16
out
cmp
imull
adcb
aad
decl
cli
or
scas
addr16
sbb
js
or
adc
out
inc
pop
jl
mov
loop
fistpll
mov
push
push
aad
out
movsl
pop
dec
xchg
xor
movsl
sub
mov
dec
orl
imul
outsb
pop
pop
mov
cmpsb
xor
xor
xor
fsub
or
inc
xor
adc
mov
test
cmpsl
sub
addr16
mov
cltd
jge
inc
sub
roll
stos
jno
out
fdivl
enter
adc
mov
xor
fucomi
scas
ljmp
adc
pop
sbb
jne
aas
pop
repz
sub
in
cmp
test
das
push
ss
mov
sbbl
and
cmp
mov
orl
mov
jae
fistpl
loopne
jns,pt
and
push
lods
adc
sbb
aaa
mov
xchg
or
push
mov
jns
xchg
mov
out
inc
sub
jmp
xor
xchg
mov
lret
jecxz
xchg
scas
test
pusha
ret
das
xchg
inc
movsl
dec
sbb
insb
xchg
fstpt
pop
xchg
fiaddl
sbb
mov
xchg
icebp
in
imul
mov
ss
push
rorl
lret
dec
insl
iret
insb
pop
sbb
test
push
lods
mov
aas
test
inc
outsl
lret
adc
les
aaa
sbb
repnz
push
daa
cmp
xchg
ljmp
pop
dec
mov
out
xchg
out
sbb
lret
push
das
jbe
loop
roll
xchg
fs
push
mov
iret
jmp
gs
and
dec
cmp
movsb
jne
incl
add
cmpsb
and
cli
test
bound
jbe
mov
pop
jl
push
sub
mov
jle
xlat
push
adc
arpl
mov
adc
mov
lock
jne
addr16
imul
mov
mov
pop
jg
pop
and
pop
pushf
and
sbb
adc
push
outsb
jbe
gs
imul
out
dec
pop
jmp
ja
pop
ljmp
mov
or
lret
sub
shlb
mov
mov
andb
stos
dec
inc
nop
in
icebp
push
scas
lahf
imul
std
inc
ja
popf
push
cmpl
mov
xor
cmp
sub
xchg
inc
into
dec
mov
std
divl
sub
lret
jne
push
mov
inc
dec
in
add
push
and
xchg
adc
jmp
lods
or
and
test
mov
lds
mov
iret
test
xchg
dec
jae
or
outsl
dec
int3
mov
test
idiv
mov
outsl
sarl
ds
pop
andb
imul
loopne
ret
mov
test
fwait
negb
mov
repnz
push
push
or
inc
ljmp
shrl
add
xchg
push
mov
out
cmp
sbb
cmp
and
arpl
cwtl
dec
fidivl
or
xchg
faddl
xchg
gs
push
add
push
lds
mov
jno
data16
and
cmp
out
aaa
imul
in
popf
adc
mov
fcompl
dec
xor
mov
in
sbb
lret
insl
pop
mov
xchg
pop
add
xchg
loope
rcrb
xorb
lods
ret
push
std
dec
mov
subb
mov
inc
into
adc
dec
dec
cmp
jecxz
push
lea
mov
insb
sub
outsb
mov
and
mov
fisubrs
jnp
sbb
mov
sub
fmul
mov
hlt
push
fisubrs
and
es
ss
push
aas
ds
icebp
cli
in
jecxz
test
addr16
pop
call
xchg
mov
test
out
sbb
ret
mov
in
stc
scas
inc
frstor
push
insl
test
insb
aad
fmull
lcall
lret
sbb
mov
lcall
xchg
pop
xor
test
cltd
sub
adc
xor
jle
iret
rorb
add
call
in
lds
fs
mov
loope
fmull
pop
mov
jo
xchg
and
adcl
mov
bound
cmpsl
dec
stos
insl
push
mov
test
outsb
pushf
popa
sub
test
inc
mov
add
out
lahf
mov
inc
sbb
xor
in
mov
test
pop
mov
fadd
repnz
or
outsb
pusha
pop
sbb
ljmp
add
les
aad
jae
and
stc
jne
ds
add
xchg
add
movsl
sbb
and
lods
pop
jge
mov
xchg
cld
test
inc
adc
push
pop
pop
jmp
inc
inc
jo
sub
mov
push
out
and
jmp
mov
xor
pusha
mov
std
jge
dec
lock
fldenv
sub
divb
sbb
sbb
cltd
add
subb
push
idivl
js
lret
mov
mov
subl
inc
bnd
insb
je
jmp
ficoms
push
cs
mov
in
and
jae
sahf
repz
sub
xor
fistpl
sbb
mov
fwait
testl
addr16
add
test
scas
popa
mov
and
sbb
idivb
cmpsl
pop
sbb
lock
lret
jae
ficoms
flds
mov
push
add
int
nop
jns
lds
sbb
or
push
insb
add
test
push
sub
mov
leave
outsl
loopne
cs
out
inc
adc
dec
push
push
fldt
fcoms
jo
cmc
mov
mov
ret
and
cmp
inc
xchg
add
loope
test
dec
aas
jne
push
popf
notl
mov
mov
and
or
cmp
loope
push
rcrb
or
pop
sarb
rorb
leave
bound
iret
xor
xor
gs
iret
and
mov
or
imulb
dec
and
xor
sub
lea
test
pop
push
subb
cli
clc
data16
and
lods
jl
lods
or
in
push
imul
sbb
mov
test
popf
jge
pop
mov
mov
dec
push
push
and
cmp
outsl
push
cli
lods
lret
jns
inc
xor
ss
testl
xchg
pop
xchg
inc
test
mov
pop
jne
nop
push
add
call
in
jge
fildll
test
add
bnd
stos
mov
imul
cmp
ret
push
popf
cmp
mov
pop
addr16
xchg
jle
jle
ret
sub
test
cmp
pop
cwtl
mov
fwait
cmp
xor
adc
aas
call
jnp
rcll
call
jae
cmp
inc
fidivrl
xchg
mov
fcmovnb
mov
mov
xchg
mov
jg
add
ss
shrl
sub
push
test
sti
mov
ret
test
xchg
ds
and
push
pop
ljmp
push
sbb
mov
das
inc
mov
add
divl
push
or
mov
push
xchg
ja
ret
dec
lds
repz
mov
stos
ret
adc
jo
mov
pusha
les
lret
lahf
and
or
lcall
inc
and
pop
add
jno
in
push
jecxz
fidivrs
cmp
jb
pop
out
jbe
xor
lcall
cld
push
imul
sbb
daa
test
pop
sub
adc
hlt
int3
punpckhwd
aaa
sbb
and
and
mov
pop
cmpsl
sub
dec
mov
test
jae
mov
xor
bound
lods
loopne
orl
mov
jp
inc
jo
hlt
fisttps
inc
cmpsb
sub
or
push
adc
push
pop
mov
sub
add
add
and
rcrl
dec
add
mov
push
xor
xlat
mov
sbb
xchg
lret
nop
adc
arpl
dec
dec
ja
xchg
inc
in
lock
repz
into
test
lret
mov
fstps
push
jmp
jmp
in
adc
std
sarl
ljmp
in
dec
pop
inc
pop
mov
rclb
js
pop
push
or
daa
je
lcall
pop
mov
sbb
xchg
fsubrp
push
gs
push
jg
in
popa
jl
mov
in
daa
add
sbb
adc
clc
cmp
lahf
stos
outsl
xchg
sahf
mov
insl
push
test
xchg
aam
mov
arpl
jp
test
addl
outsl
mov
push
aad
and
push
pop
repz
sub
cmp
imul
sbb
dec
xchg
out
xchg
adc
cmc
adc
jo
fsubr
das
jo
inc
fidivl
into
add
inc
or
ss
sbb
and
cwtl
push
icebp
dec
sbb
test
jae
aad
inc
fmull
aas
cli
lods
add
and
stos
stc
sbb
loopne
fisubrs
mov
pop
jno
in
test
cmp
stc
repz
out
xor
leave
call
sbb
jge
mov
or
and
inc
shrl
xchg
icebp
sbb
cld
pop
mov
pop
lods
and
xchg
mov
push
pop
sub
jmp
mov
push
fwait
pusha
add
mov
in
movsb
mov
mov
nop
jo
mov
bound
idivl
push
mov
and
cmp
adc
insl
out
add
or
sub
cmp
lods
cli
and
insl
fistl
ret
dec
or
aam
sahf
cmc
ds
adc
lock
js
jae
out
gs
sarl
jnp
shll
inc
xchg
cmpsl
add
leave
cmc
sub
inc
xor
mov
xor
xchg
hlt
out
mov
cli
fs
xchg
mov
mov
push
ljmp
cvtps2pi
add
lahf
xchg
sbb
outsb
jle
cltd
mov
or
imul
xchg
ss
fucomp
ljmp
mov
ljmp
jmp
mov
mov
jl
test
je
push
adc
int3
dec
leave
mov
jl
jl
cmp
cld
dec
or
enter
xor
sub
lods
xor
push
test
sbbb
jge
jge
shll
xorl
pop
cwtl
cmp
xor
bound
js
cmp
test
ss
cwtl
or
mov
fstp
test
lret
mov
cmp
cmpsl
insl
lahf
cwtl
ljmp
shll
icebp
or
jbe
into
adc
mulb
push
pop
jge
xchg
push
or
or
dec
mov
xchg
adc
mov
adcb
xchg
call
cmp
add
je
lret
jae
mov
in
mov
ret
push
pushf
lods
lock
add
adc
aas
pop
jmp
test
mov
sbb
mov
cmc
jb
call
jnp
push
and
sti
out
rcl
aad
fisubrs
leave
movsl
inc
ja
lock
dec
dec
adc
jno
fstl
cmp
jp
bound
sub
xchg
mov
jbe
out
sbb
pop
enter
sub
int
icebp
aas
rcrl
mov
sub
xchg
mov
enter
adc
addr16
mov
cmp
and
adc
sbb
mov
pop
js
or
pop
stos
int3
add
je
lea
loop
push
popf
cmp
loop
subb
inc
lahf
inc
sub
arpl
push
add
jo
fwait
dec
fcomp
fidivrl
pop
fistl
addr16
cmp
mov
fs
lds
enter
or
in
outsl
fadds
ss
dec
roll
sbb
stc
jns
dec
push
mov
test
mov
das
cmp
call
test
sbb
cmp
dec
cmc
subl
mov
xor
dec
in
lods
cmpsb
popf
sub
jo
sub
icebp
scas
pop
dec
loope
pushf
lea
jmp
jmp
dec
or
sti
inc
adc
mov
cmpsb
cmpsl
jle
ljmp
push
outsl
mov
push
negb
push
sahf
fimuls
les
mov
mov
xchg
in
push
ds
pop
aad
mov
or
inc
les
js
rol
filds
mov
cmp
and
nop
cmp
loope
rorb
test
pop
sbb
js
or
inc
add
dec
add
mov
jmp
cld
push
ffree
sub
lret
add
mov
jns
ffree
mov
cld
add
sti
mov
adc
popa
or
mov
loop
pushf
adc
push
outsb
shll
inc
mov
jnp
cld
ja
mov
add
push
fs
push
nop
mov
movsb
push
xchg
dec
sub
push
add
mov
sub
bound
adc
lds
mov
pop
fsqrt
ljmp
mov
stos
push
pop
insl
lock
aam
xor
inc
jge
dec
stos
popa
in
negl
popa
ljmp
jmp
cli
aad
push
add
in
clc
jmp
arpl
inc
mov
xchg
push
add
push
lcall
push
mov
push
nop
inc
xor
shlb
in
stos
aam
adc
out
xchg
pop
xchg
es
jne
xor
pop
pusha
cmp
mov
outsb
pushf
aas
sub
pop
mov
into
int
fnstenv
sub
psubsb
lods
loopne
add
and
clc
xchg
int3
int3
out
imul
dec
inc
repnz
mov
cmp
mov
ja
sbb
jmp
mov
push
das
inc
mov
negb
mov
dec
xchg
xlat
shll
cmc
enter
in
push
jne
jbe
mov
loop
std
lahf
mov
loop
adc
add
out
mov
inc
nop
push
mov
cmp
push
outsb
sub
mov
lcall
sarb
in
scas
lods
add
mov
jg
and
xchg
xchg
pop
cmp
jb
pop
xchg
rorb
sub
gs
inc
add
mov
mov
outsb
inc
aaa
xchg
cs
orl
inc
mov
lock
and
test
daa
cmp
mov
add
jp
and
mov
cmp
inc
arpl
popa
jne
pop
iret
mov
or
inc
mov
xor
in
xor
cmp
mov
pop
negb
or
mov
pushf
arpl
or
cli
fcomps
sub
sub
shlb
push
xchg
push
fstpt
push
xchg
mov
lcall
icebp
fwait
aaa
dec
push
and
sub
out
mov
jl
clc
arpl
adc
push
pop
cmp
mov
add
fcmovne
ds
jae
hlt
nopl
dec
gs
dec
xchg
mov
push
out
scas
ret
sbb
fstps
adc
loope
loop
jle
int3
ror
or
in
in
sbb
ret
mov
push
push
fst
popa
push
cmp
xor
pop
push
add
sar
sbb
out
cmp
add
lahf
xor
and
imul
popa
test
jae
lods
bound
sub
pushw
mov
test
mov
pop
mov
sub
inc
cwtl
fstl
imull
call
push
push
fists
mov
popf
insl
cmc
fwait
movsl
sbb
fnstcw
inc
mov
js
rorl
xorl
lret
xlat
test
jecxz
scas
mov
jae
pop
push
mov
popa
xor
or
aaa
js
xchg
pop
sti
mov
mov
cmp
xor
nop
dec
xchg
std
sub
fsubrs
dec
mulb
sub
in
ja
mov
cmc
mov
jae
pop
sub
mov
xchg
inc
ret
sub
sub
push
sbb
sti
gs
enter
std
inc
add
xchg
das
fisttpll
xlat
and
int3
inc
pop
push
call
inc
aas
clc
mov
xor
out
cmp
sarl
scas
pop
push
adc
test
push
enter
test
ret
sbb
dec
cld
fldenv
mov
fcmovbe
fisttps
addr16
sbb
sbb
xor
test
sub
incb
testl
cwtl
push
xlat
dec
shll
ficoml
in
divl
andb
push
mov
cmp
add
inc
pusha
push
mov
mov
and
aaa
daa
int
cmp
xchg
out
and
aaa
sbb
sub
fs
dec
pop
add
jecxz
xchg
fnstsw
xor
add
xchg
sub
stc
mov
cmp
clc
mov
and
imull
dec
test
xor
mov
jmp
in
inc
mov
mov
inc
mov
mov
sahf
icebp
test
and
cmp
sbb
xor
sub
or
mov
icebp
fcoml
mov
inc
shrb
shrl
lock
cmp
push
icebp
mov
dec
jo
fildll
jno
mov
mov
cld
aas
or
mov
les
jl
enter
mov
in
lahf
push
dec
and
mov
jp
and
and
jl
push
int3
enter
and
mov
adc
adc
lret
xchg
dec
scas
pop
jle
jo
adc
cmpsl
xor
jnp
mov
in
and
jb
lcall
jge
adc
scas
aas
test
dec
dec
push
test
mov
enter
iret
mov
push
out
jae
fmull
in
sub
jmp
dec
pushl
loope
adc
cmc
sub
out
or
dec
adc
pop
and
mov
out
vcvtps2pd
int3
movsb
test
mov
imul
fcompl
fistpl
lahf
push
and
push
pop
sti
sahf
std
in
loop
insl
sub
mov
outsb
mov
imul
fnsave
dec
mov
adc
adc
jno
add
aaa
aad
jae
xor
jp
jg
repnz
inc
les
repz
lcall
push
in
add
pop
outsb
xor
fstpt
fcmovnb
pop
mov
or
mov
rcrl
cmpsl
xor
les
fs
in
ficoml
sbb
and
jle
inc
or
mov
jno
in
add
push
mov
or
data16
into
adc
push
push
cmpb
pusha
xor
cmp
movsl
pop
pusha
adc
loop
aam
mov
pop
in
lods
addl
iret
fcomp
std
add
mov
adc
fld
xabort
popf
les
repz
add
dec
repz
in
aas
leave
dec
pop
or
cmp
mov
movsl
les
aas
jb
push
nop
jge
ja
pop
mov
and
js
lcall
ljmp
in
into
xchg
in
aam
jb
add
dec
aaa
mov
inc
ss
repnz
decb
mov
fnstsw
pushf
mov
fstpt
and
testb
inc
std
pop
xor
pusha
inc
lock
negl
andb
hlt
sub
and
sbb
push
iret
push
mov
push
imul
out
outsb
dec
dec
lcall
ret
dec
lock
sub
push
int3
xor
repz
mov
imul
xor
xchg
pop
mov
rolb
dec
cmc
int3
inc
jbe
stc
adc
mov
dec
repz
inc
xor
ds
mov
aad
cld
inc
lds
loopne
scas
mov
adc
xchg
fs
mov
and
mov
pop
loope
sub
fiadds
cmc
pusha
les
xor
out
hlt
push
fisubl
sbb
xlat
in
ret
sbb
fs
lea
mov
ja
xchg
lret
push
jno
push
or
jp
fmuls
mov
xchg
jnp
xchg
ja
mov
dec
repnz
sbb
sbb
loope
pop
xchg
add
and
pop
shrl
out
dec
cwtl
out
mov
jle
jb
mov
nopl
push
shll
cmp
fcmove
pop
call
pop
cmp
je
in
enter
jo
or
cmp
jle
or
ds
orl
add
ja
push
or
adc
fsubrl
and
adc
and
jmp
stos
xchg
mov
imul
xor
sub
mov
xchg
data16
shll
cmp
imul
lahf
and
lahf
cltd
lret
lret
mov
push
pusha
pusha
mov
sub
xchg
jns
stos
sbb
jns
lahf
or
dec
ret
xchg
scas
int3
pop
sti
cmp
mov
mov
testl
lcall
jle
insl
js
mov
shlb
mov
inc
shl
leave
stc
xor
adc
dec
scas
and
divb
xor
bound
cmp
std
nop
std
sbbb
andb
or
loopne
inc
dec
xchg
xor
mov
xor
cmp
ss
mov
jns
push
sbb
lods
mov
test
xchg
std
out
daa
and
sbb
and
adc
shrd
jecxz
ss
lret
pop
adc
shll
push
js
sub
lds
shlb
insb
jmp
mov
jp
mov
repnz
cmp
sub
ficoml
xchg
pop
in
aaa
mov
push
inc
pop
dec
cmc
test
xchg
push
mov
dec
xchg
test
out
cmp
lds
ftst
pop
mov
jne
fiadds
sub
data16
cmpsl
aad
mulb
fcmovb
test
push
jmp
lods
lcall
inc
call
es
jle
scas
push
test
adc
jns
xchg
push
sahf
inc
movsl
or
dec
popf
and
lea
rcrl
mov
fwait
dec
in
pusha
outsl
lock
mov
mov
cld
add
mov
mov
test
or
add
in
ss
adc
test
icebp
pop
xchg
dec
push
jle
hlt
mov
push
inc
in
outsb
dec
cwtl
js
inc
mov
test
xchg
ds
dec
dec
or
xchg
sbb
jl
ret
sbb
push
shl
fwait
cwtl
pop
in
or
or
adc
cmp
outsb
mov
pop
loopne
push
lret
pushf
mov
jnp
ss
pop
rol
leave
xor
jne
es
jae
int
into
push
dec
rorl
sbb
push
aaa
in
rcll
inc
andb
jns
fs
fs
loop
mov
adc
xlat
cmpsb
add
xor
push
mov
movsl
and
mov
int
outsl
xchg
call
mov
push
xchg
sti
mov
mov
sub
or
xor
push
das
jmp
js
dec
ret
mov
in
sbb
dec
ds
xchg
push
lock
cmp
sti
popf
loope
les
pop
ja
rcr
aas
fwait
rcl
add
pop
ret
cmp
faddl
ds
pop
inc
pop
adcb
jns
iretw
sti
out
push
stos
pusha
cs
popa
sub
push
dec
call
xchg
call
cmp
fstl
and
out
pop
or
cmp
cwtl
xchg
cmp
sbb
add
ja
sub
imul
xchg
mov
ja
in
xor
inc
xorl
mov
dec
mov
insb
mov
js
ja
jb
sbb
cmp
in
dec
iret
in
clc
mov
rclb
xchg
stos
ja
sub
dec
test
fwait
rdtsc
add
pop
sub
fsubs
cld
sarb
cmp
mov
insl
stc
mov
test
xor
sbb
lahf
xchg
jnp
and
aaa
or
sbb
daa
sti
ljmp
imul
mov
in
cmp
pop
int
add
out
lret
mov
call
push
stos
inc
cmp
lret
rorb
pop
jmp
ret
outsb
adc
lret
in
push
mov
add
sub
jns
and
adc
pop
imul
cmp
mov
test
popf
jg
inc
dec
cmp
loope
outsb
push
imul
and
out
pop
imul
pop
icebp
pop
dec
or
jbe
sbb
rcll
mov
outsb
mov
popf
enter
mov
aam
xor
cmp
add
lret
fwait
aam
fstpl
iret
push
inc
xchg
or
imul
fstpt
fwait
mov
out
lea
xor
adc
push
cwtl
aaa
mov
aas
pop
sub
pop
push
push
ds
push
xchg
les
cltd
push
insb
lret
lret
repnz
aaa
mov
cmpsl
and
pop
jae
xlat
xor
or
repz
out
sbb
sbb
push
mov
sbb
daa
fs
stos
dec
inc
sbb
fists
fwait
mov
cmpsl
icebp
cmp
inc
inc
nop
jmp
adc
cmc
orb
scas
mov
jg
arpl
jbe
inc
lahf
les
mov
pop
rclb
scas
pop
inc
sbb
das
and
cmc
dec
fbld
arpl
or
push
adcl
sub
xor
pushf
or
push
test
mov
pop
and
xor
push
or
jo
out
mov
jp
mov
inc
dec
xor
sahf
mov
jmp
jo
es
leave
xchg
bound
cmp
imul
test
cmp
sub
and
or
mov
fldenv
xchg
lock
xchg
and
jbe
mov
cld
xor
inc
push
inc
xchg
and
or
outsl
imul
imul
jg
cmc
mov
add
and
push
jge
das
clc
add
outsb
and
mov
inc
jecxz
repnz
dec
and
cmp
dec
fdivs
fnstcw
jnp
es
leave
loopne
shll
nop
mov
mov
or
jo
sbb
out
daa
insl
sub
mov
les
jge
sub
test
dec
cli
inc
xchg
hlt
dec
arpl
scas
cli
mov
out
je
pushf
inc
data16
cmp
es
das
out
mov
loope
inc
addb
aad
cmp
xchg
ljmp
sub
ja
ljmp
mov
sub
mov
loop
jnp
insl
or
or
mov
das
repnz
loope
pusha
inc
mov
adc
inc
stos
call
push
jb
mov
loop
cltd
mov
inc
adcl
fwait
arpl
push
mov
dec
movsl
cli
enter
xchg
adc
and
stos
or
jbe,pn
fwait
gs
jge
aaa
fcom
sahf
push
inc
xor
adc
mov
lods
pushf
cmp
flds
inc
adc
mov
xchg
out
int3
nop
movsl
mov
enter
and
jae
es
jne
rorl
mov
int
in
cltd
hlt
pushl
imul
mov
clc
inc
hlt
xchg
std
pop
cmp
repz
inc
fdiv
popa
push
shr
std
das
mov
inc
std
adc
orb
and
mov
loopne
cs
ja
jo
inc
adc
negb
add
movsb
mov
xchg
inc
adc
in
iret
jecxz
dec
aas
mov
ljmp
xchg
xchg
sbb
clc
sar
hlt
mov
insb
inc
push
out
mov
fnstenv
cmpb
jae
xchg
push
mov
mov
and
pop
pop
je
faddl
cmp
sub
mov
xor
addl
inc
or
push
loopne
push
arpl
shll
inc
xchg
cmc
pop
or
push
sub
cmc
lahf
scas
daa
lea
jne
xchg
dec
cmp
pop
sbb
fnstenv
cmp
and
xor
cmp
out
sub
pop
pop
out
test
cmpsl
adc
mov
test
add
movsb
repnz
clc
add
jo
mov
enter
aaa
dec
mov
hlt
fldcw
or
test
pusha
mov
or
loop
mov
outsl
lret
and
test
push
add
in
insl
clc
pop
xor
push
jnp
lret
jbe
pop
nop
dec
rorl
por
push
xor
mov
pop
or
cmpsl
cmpsb
xor
inc
mov
or
or
les
dec
mov
out
mov
in
jns
jge
xchg
xor
orb
jmp
push
mov
push
cmp
mov
jmp
mov
inc
push
into
loope
sub
jb
inc
cmc
mov
cmp
mov
into
and
inc
sbb
fisubl
and
es
fcomps
mov
icebp
jg
inc
arpl
cli
inc
fbld
dec
cmpsb
push
or
mul
arpl
popa
stos
rorb
push
cli
cltd
addr16
iret
cmp
fidivl
ljmp
or
xor
mov
je
jo
ss
mov
sub
push
dec
in
and
dec
loop
pop
je
cmp
insl
pop
push
push
aad
jae
cwtl
mov
adc
test
mov
add
jb
push
daa
pop
outsb
dec
lahf
pushf
fcmove
popa
mov
mov
jle
aas
icebp
xchg
and
std
fwait
sbb
imul
pop
push
aam
imul
dec
fidivrs
insb
flds
pop
dec
adc
push
pop
push
subl
push
icebp
pop
mov
cmp
test
push
jl
outsb
cmp
jnp
ljmp
in
arpl
sbb
inc
icebp
lock
test
arpl
cltd
negl
xlat
push
flds
mov
std
xlat
cmpsb
mov
out
inc
stos
fldenv
push
leave
mov
inc
jle
std
jp
rolb
push
cmpsl
sub
mov
push
pop
dec
sbb
jo
inc
pop
shrl
push
xor
fwait
movsl
movsb
lds
mov
push
push
aas
enter
mov
mov
cwtl
dec
sbb
in
out
lret
loop
test
dec
lahf
xchg
shll
in
popa
idivb
mov
adc
xchg
inc
mov
sbb
popa
mov
push
jl
jmp
inc
mov
fists
mov
pop
mov
mov
repz
aam
sbb
cli
dec
adc
fldl2e
xor
mov
xchg
bound
lock
test
lahf
imul
xor
dec
xchg
sbb
xor
mov
shll
insb
jp
sbb
jnp
sbb
cs
xlat
fisttps
rorb
push
lcall
mov
out
in
add
mov
mov
sub
mulb
mov
xor
mov
filds
sbb
and
cmp
movsb
inc
and
fldln2
adc
pop
push
jnp
inc
lock
dec
int
ret
inc
subl
andl
xchg
imulb
pop
icebp
push
cmp
dec
push
vpcmpeqw
push
fisttps
jp
push
and
push
jb
insb
xor
mov
fidivrl
das
mov
push
fnstenv
inc
clc
and
cmp
xor
sahf
push
pop
jno
iret
pop
xchg
jno
xchg
std
mov
je
push
fistps
ljmp
adc
adc
cwtl
in
cld
or
cmc
pop
ljmp
dec
jl
movsl
cmp
movsl
and
lret
push
pop
shl
into
mov
or
jne
xor
adc
adc
arpl
bnd
dec
ja
loop
rcl
es
sub
add
cli
js
or
sub
sub
adc
test
mov
xlat
pop
test
xchg
loop
repz
movl
sahf
mov
mov
test
aad
je
das
cmp
je
fistl
sbb
push
fdivs
test
out
sahf
xchg
cmp
pop
cli
repnz
adc
cwtl
push
lods
mov
es
lock
pop
cmpsb
jmp
and
push
test
rorb
mov
or
cmp
in
jge,pt
push
add
push
imul
test
sbb
dec
mov
insl
mov
push
dec
movsb
popa
arpl
mov
cmp
stos
lret
sahf
fldcw
push
xor
push
cmp
pop
rcrl
xchg
or
lods
cld
in
xchg
out
mov
mov
mov
clc
lea
sub
push
or
jnp
mov
xchg
and
out
lock
xor
nop
ss
shlb
push
xchg
cmpsl
jae
xor
lcall
adc
jge
xchg
dec
add
xor
xor
and
iret
std
mov
and
jg
dec
mov
push
jge
and
movsb
jns
add
ss
dec
int
mov
add
mov
in
pop
popf
call
cmc
mov
call
sti
adc
xchg
add
fs
mov
ds
xchg
shll
fcompl
in
xchg
pop
rcll
sbb
gs
outsb
push
pop
inc
popa
int3
xchg
jp
mov
andb
outsb
hlt
sbb
jl
inc
cmp
ds
ds
aad
push
icebp
sub
hlt
mov
push
sub
sub
pushf
addr16
aas
sbb
lock
lods
stos
dec
ret
xchg
je
push
int
mov
sahf
orl
shll
out
push
jno
stos
test
js
push
cmc
cmp
xchg
cmpsl
cmp
mov
xor
loopne
dec
in
push
aad
cmc
ficoml
out
adc
mov
lods
psllw
pushf
fidivrs
push
popa
orb
jno
mov
add
dec
test
jg
adc
aas
xchg
aaa
clc
jae
and
or
and
je
xor
cltd
imul
inc
ret
pop
fisttpl
lea
dec
ror
push
lods
out
xchg
dec
fcom
cmp
inc
add
adc
xchg
and
test
int3
adc
jmp
mov
adc
inc
cwtl
mov
mov
inc
inc
add
imul
adc
shll
add
incb
or
into
sar
jae
popa
jo
fistps
xor
popf
fs
xchg
push
and
repz
aad
sbb
insl
sti
xor
int3
fcmovu
fwait
push
sbb
xchg
jg
popa
adc
pushf
sahf
inc
adc
inc
loopne
push
xchg
push
sub
xorb
dec
data16
popa
add
jl
shlb
arpl
repz
fnstcw
xor
dec
push
add
mov
xchg
push
and
ds
xor
inc
ret
ja
sbb
shlb
fsubrs
sub
nop
mov
pop
scas
mov
lea
out
rclb
sti
xchg
pop
loope
push
rolb
pop
jle
fmul
jl
fildll
jnp
in
iret
mov
inc
and
pop
inc
jle
out
shll
cs
ljmp
adc
sub
out
xor
pop
scas
scas
xor
mov
xchg
repnz
xchg
add
inc
das
push
or
std
je
jp
xor
insl
ds
clc
xchg
pop
incl
fcmovnu
dec
cmp
pop
jecxz
test
inc
add
push
setae
lock
cmpsb
out
jne
cld
out
pop
js
xor
cmp
aas
stos
frstor
inc
test
mov
je
repz
test
cmpb
cmp
mov
aam
mov
jecxz
pop
or
rorb
shrl
push
aad
mov
mov
lods
test
xchg
outsb
mov
arpl
cwtl
loopne
push
sbb
or
and
mov
cmpsl
sub
inc
mov
add
cs
nop
gs
insb
testl
insl
xchg
stc
push
addr16
ror
xchg
add
cmc
pop
adc
sbb
mov
mov
dec
add
ss
cmp
pop
sbb
imul
fsubl
loop
adc
jmp
sub
inc
jb
push
imul
fdivr
xchg
stos
mov
xchg
test
push
cvtdq2ps
push
or
inc
lds
mov
notl
jno
sahf
inc
mov
cmc
mov
cmpsl
sbb
and
dec
cmp
fistl
pop
sbb
fwait
push
repnz
cmp
or
mov
or
sti
arpl
xor
fldt
lods
pop
add
stos
sub
sbb
pop
lock
fnsave
or
and
add
sub
push
mov
rorl
cmp
cmp
cmp
gs
cwtl
xchg
es
push
fidivrs
aas
popf
cld
pop
sbb
sbb
fwait
ret
mov
mov
popf
inc
inc
sahf
dec
repnz
pop
sbb
jno
adc
leave
cmp
jae
inc
jge
data16
stc
sbb
adc
pop
loope
mov
xchg
je
xor
inc
push
call
cmovbe
ds
mov
lods
xchg
sbb
mov
scas
sub
mov
push
fadds
jo
xchg
or
push
jnp
sub
std
xchg
push
enter
jb
or
lock
stc
or
outsl
in
inc
imul
add
sbb
cmpb
lret
mov
push
cld
jecxz
mov
mov
and
cmpsb
shlb
adc
jecxz
push
sahf
mov
jne
les
push
sub
and
mov
shrl
in
mov
dec
cmp
mov
je
sbb
imul
call
mov
std
ljmp
add
sahf
in
movsb
pushf
inc
mov
xor
mov
jg
mov
ljmp
inc
jbe
mov
js
fcmovu
filds
popa
daa
sbb
jl
jmp
pop
movsl
push
ret
push
or
std
xchg
cmp
xlat
adc
cwtl
cmp
in
adc
cmp
sahf
pusha
jne
xor
add
adc
daa
mov
into
iret
xchg
inc
push
and
push
jp
xchg
cmp
mov
outsl
adc
cmp
push
subb
imul
pop
jb
and
add
pop
add
test
test
xchg
jo
cmc
inc
lcall
fisttpll
jmp
adc
fcmovbe
xchg
popa
jge
mov
fldl
imul
xchg
aaa
orl
cmp
and
call
inc
jle
jl
adc
inc
ja
sti
jge
push
fidivs
adc
aad
add
xor
lds
adc
arpl
lret
mov
lahf
sbb
sub
push
xchg
mov
outsl
cmpsb
insb
sbb
jecxz
xor
xchg
jl
and
outsb
push
sbb
aas
jg
ficoml
jno
fsubl
jo
in
cmp
mov
mov
push
fldt
fisubl
mov
enter
or
stc
cmp
add
fcompl
inc
push
mov
xchg
add
or
in
xor
xchg
dec
cli
mov
and
int3
xor
and
insb
inc
test
add
sbb
in
inc
les
pop
sahf
cmp
in
jbe
nop
xchg
dec
je
loope
popa
inc
popf
mov
adc
xchg
xchg
or
or
mov
shrl
clc
ljmp
jge
jge
xlat
mov
jge
gs
xchg
lods
ja
adc
jg
cwtl
cmp
jne
movsb
into
jns
mov
dec
xor
sub
cmp
jae
dec
push
aam
lcall
add
cmp
inc
clc
and
scas
fnstcw
adc
aas
jnp
xchg
sbb
aad
fildll
aam
sets
adc
sbb
and
sub
push
imul
mov
into
lods
daa
sub
hlt
cmp
xchg
loopne
cvtps2pi
adc
mov
pop
dec
sub
mov
arpl
pop
ss
mov
xchg
data16
and
fldenv
jl
in
jg
fwait
mov
pop
and
mov
neg
les
sbb
out
es
sub
sub
push
add
and
mov
cmpsb
mov
pop
mov
push
fdivl
pop
pop
or
xchg
shl
jl
movsl
sbb
mov
push
add
jp
sahf
notb
ds
out
or
xchg
jbe
loop
mov
add
mov
hlt
in
repz
rcl
sahf
pop
xchg
mov
sti
mov
pop
adcl
mov
pop
dec
stc
sbb
fld
insb
popa
shrb
or
xor
ret
fidivl
daa
push
fwait
mov
inc
jns
ljmp
icebp
cld
push
addr16
mov
pop
push
sti
dec
pop
lahf
jae
leave
movsl
ja
pushf
jne
sbb
in
mov
pop
inc
add
dec
add
pop
mov
popa
gs
xchg
out
jae
mov
ffreep
mov
pop
les
xor
imul
sbb
stos
test
mov
xchg
add
pop
jns
xchg
aas
push
mov
mov
push
hlt
enter
pop
sub
pop
sbb
pop
sub
push
outsl
jns
lods
mov
mov
inc
xor
out
lcall
xchg
int
orl
xlat
xchg
clc
add
xor
in
rclb
inc
dec
mov
push
lahf
stc
xchg
pop
xchg
pusha
test
fwait
repz
das
jecxz
aam
push
mov
mov
push
mov
add
mov
ja
mov
mov
out
pop
insl
mull
push
or
xchg
imul
jp
mov
movsl
fxch
pop
jns
cmp
out
and
fiadds
aas
sub
pop
lds
femms
sbb
repz
xlat
notl
cmp
es
inc
cmp
adc
icebp
fdivs
mov
repz
push
sub
lret
stos
mov
adc
mov
pop
inc
repnz
cmp
mov
mov
ljmp
test
mov
mov
inc
data16
mov
lock
dec
or
dec
jno
clc
and
and
fwait
sub
rcll
hlt
sar
mov
loop
jmp
in
das
sbb
rcll
sbb
add
sub
xbegin
hlt
decb
mov
lret
imul
adcl
adc
mov
pop
insl
inc
inc
pop
xchg
mov
loope
insb
ficomps
mov
ficoms
push
sub
push
push
dec
xlat
aas
or
adc
fcmovu
mov
push
cltd
sbb
scas
mov
jp
andl
insl
clc
or
mov
jo
hlt
mov
jge
sar
test
cli
fistps
mov
adc
xor
pop
fwait
sahf
mov
shl
inc
inc
mov
scas
cli
and
popf
lock
inc
sub
mov
das
pop
fistpl
mov
pop
push
and
inc
dec
xlat
stos
out
icebp
scas
push
lahf
jne
inc
cmc
popa
daa
dec
mov
aaa
or
pop
mov
stos
mov
repnz
pushl
in
outsb
xor
call
aaa
xchg
frstor
cmc
cmc
fldenv
adc
inc
fs
inc
iret
or
cmpb
cmp
addl
getsec
repz
adc
pop
mov
fstps
imul
pop
imul
sahf
leave
cwtl
mov
movsb
addb
lea
mov
jp
in
adc
pop
mov
or
popa
out
std
jae
pop
xor
push
jno
or
lret
push
dec
xchg
cmp
xchg
outsb
les
fucom
outsb
mov
sub
adc
test
aam
pop
popf
jne
cmpsl
jle
icebp
adc
pushf
lret
mov
inc
cli
sbb
sbb
mov
test
mov
adc
imul
out
mov
or
call
popw
sub
addb
test
mov
inc
sbb
clc
in
push
sti
inc
roll
icebp
test
fldl
dec
or
pop
test
mov
sub
lcall
push
outsb
lea
in
bound
adc
mov
cmc
pushf
dec
or
cmpsb
aaa
jne
loop
repz
rcrl
xorb
mov
and
lahf
pushf
loope
in
push
or
push
add
stos
sahf
fidivs
lock
push
movsl
icebp
out
or
sbb
int
pop
daa
imul
bound
int
in
push
mov
repnz
xchg
pop
cwtl
jg
rorb
aas
jg
add
ret
and
outsb
sbb
mov
push
es
push
xor
jae
pop
adc
out
push
lahf
push
sbb
xor
push
repnz
xlat
dec
movsl
mov
stos
sub
jno
pop
xchg
or
insl
or
icebp
outsl
jne
mov
roll
pop
and
push
xchg
pop
xor
adc
jae
lret
jnp
cmp
std
rorl
clc
push
sbb
dec
imul
int
add
xor
lcall
jp
gs
sarl
aaa
int
and
cld
pop
jmp
aaa
icebp
arpl
xchg
push
xchg
rolb
mov
test
mov
out
ficomps
les
aam
pop
imul
xor
fwait
xchg
and
push
insl
jno
cmp
xlat
ret
inc
xchg
jb
mov
fiaddl
dec
mov
outsb
rcrb
fmul
xlat
mov
fdivrl
daa
pop
jne
or
dec
push
add
pavgb
les
cltd
sbbb
aas
fadd
or
lods
jbe
xlat
call
push
mov
das
or
cwtl
outsb
out
nop
ffree
or
cli
fdiv
loop
mov
adc
pop
outsb
lahf
fldcw
in
mov
fldlg2
xchg
mov
adc
aad
cmc
subb
mov
dec
mov
and
lods
xchg
push
dec
imul
stos
mov
int
addb
mov
das
cmp
scas
add
addl
push
aad
sbb
pop
ss
pop
xor
sahf
test
mov
stos
push
insb
adc
mov
les
shlb
aad
inc
or
mov
mov
add
inc
aaa
jg
inc
jb
or
sub
dec
sub
pop
mov
idivb
nop
jmp
sub
cmpsb
or
ret
pop
lret
ja
and
inc
fimuls
mov
jne
sub
cmp
jmp
fisttpll
cld
outsl
jle
ss
add
push
adc
pop
lret
test
sarl
ror
jb
decb
adc
dec
loop
test
ja
cltd
cmp
jle
int3
xchg
aad
fnsave
jbe
and
mov
das
icebp
push
sbb
ljmp
lret
push
push
sbb
dec
sbb
fidivrs
ret
mov
pop
mov
daa
and
imull
cld
test
adc
stos
inc
pop
push
in
dec
xrelease
lods
pop
dec
std
inc
stos
xchg
popf
pop
add
fisubrl
test
popa
adc
xchg
mov
pop
mov
cs
xchg
add
pop
lahf
test
xchg
jge
inc
inc
add
jge
js
in
sbb
mov
mov
add
jb
xor
or
sub
cltd
xor
cmp
loop
stos
sbb
or
mov
inc
xchg
adc
sbb
lods
lahf
pop
pop
hlt
imul
insl
rcrb
out
test
das
push
mov
inc
jmp
adc
cmpsl
in
andb
ret
xchg
jb
pop
in
sbb
js
scas
in
mov
xchg
cmpsl
in
rdpmc
mov
xchg
inc
pop
inc
cwtl
mov
jmp
ljmp
clc
or
inc
push
addl
cmp
rcrb
data16
xor
fstpl
cwtl
aam
mov
cltd
cs
sub
mov
add
test
pushf
js
sub
hlt
mov
xchg
sbb
lods
mov
or
in
andl
fisubs
fnstcw
mov
lock
jge
or
xchg
add
adc
mov
or
xor
mov
mov
pop
pop
adc
adc
lods
nop
dec
pusha
pop
dec
iret
enter
sbb
add
adc
sti
mov
in
mov
and
xor
xchg
js
and
xor
stos
jae
insb
lcall
in
xor
in
pop
dec
and
dec
sbb
hlt
out
les
daa
and
xchg
push
lods
leave
cmc
inc
stos
mov
dec
cmp
adc
lock
sub
les
in
sub
add
je
xchg
xchg
daa
ljmp
dec
pop
xchg
dec
xor
aad
dec
stos
mov
lods
outsb
adc
movsb
inc
sbb
push
sub
addb
in
sub
and
daa
into
cmc
xchg
cmovnp
icebp
fs
add
xlat
pop
inc
dec
xor
nop
inc
insl
jge
fisttps
push
popf
jno
push
dec
mov
ds
and
loope
imul
lods
push
dec
inc
sub
inc
jmp
es
xchg
pop
xor
or
and
sbb
jne
stos
push
or
dec
and
fwait
std
lods
aam
mov
mov
sti
fs
mov
cmp
outsb
das
cmpxchg
leave
mov
xor
fdiv
ds
and
dec
and
adc
incl
sbb
lods
adc
divl
mov
jl
push
push
mov
push
xchg
mov
push
mov
mov
in
in
lcall
push
in
xchg
fidivs
lea
push
dec
jl
xlat
jmp
and
in
inc
jmp
les
sti
jmp
imull
push
inc
mov
sti
push
fisubl
mov
xor
lds
add
idivl
mov
cmpsl
out
fildll
xor
push
loop
push
sub
pop
insl
sub
mov
sbb
mov
mov
dec
test
dec
insl
cmp
enter
mov
jns
cmp
xchg
stc
push
xor
fprem
sbb
lea
les
adc
cmp
dec
jae
or
push
add
sub
insl
clc
cli
sbbl
add
int
pushf
and
dec
push
xor
aaa
add
xor
sub
pop
adcl
cmc
dec
jb
jmp
fwait
fisubrs
scas
sbb
out
inc
fnstcw
jnp
jno
xchg
in
cmp
adc
xor
or
pop
lret
repnz
jge
fists
addr16
push
and
aam
int3
shlb
push
jno
mov
pop
sbb
stos
pop
lods
or
adc
jmp
dec
cmp
xor
fcoml
daa
sbb
xor
int3
xchg
in
loop
xor
adc
stos
or
adcl
lods
outsl
inc
mov
jns
jae
fsubrs
jp
adc
pop
lock
cmp
lods
arpl
shrb
lret
inc
repnz
stos
data16
and
add
iret
mov
icebp
xchg
pop
xchg
cltd
mov
xchg
shl
mov
sbb
cmp
and
mov
sbb
cmp
test
push
pop
shr
pop
lahf
aaa
jno
movsb
cmp
sbb
imull
outsb
popa
mov
aad
mov
arpl
sub
push
adc
data16
sbb
adc
ljmp
xchg
jns
push
dec
push
sbb
and
decl
jno
pusha
mov
pop
mov
inc
out
ds
cmp
stos
lret
xor
ds
das
gs
mov
xchg
out
pop
mov
cmc
adc
movsb
cmp
out
daa
insl
cmp
loop
sbbb
cmp
call
aam
orb
mov
and
rolb
repnz
mov
dec
jl
mov
hlt
cld
xor
fst
jp
outsl
cld
add
push
dec
xlat
push
scas
sbb
add
call
mov
ret
xchg
cld
aaa
inc
ljmp
and
int
gs
outsb
cmp
dec
stc
shl
push
iret
cld
fwait
out
sarb
gs
xor
push
test
stc
fistpll
jns
es
cmp
shll
mov
jp
sub
push
inc
xchg
jg
add
jbe
mull
in
shrb
out
dec
adc
fistps
movsb
jno
jno
add
mov
cld
or
test
jno
iret
pop
in
int3
aas
inc
mov
lahf
nop
adc
mov
std
xor
int
jmp
mov
push
mov
mov
jecxz
dec
or
mov
fisubrl
outsl
insl
scas
loop
arpl
arpl
pop
and
mov
or
mov
aas
enter
sub
mov
pop
xchg
xor
cmp
adc
adc
repz
loopne
fcomip
push
jle
pusha
test
sbb
add
cs
scas
cmc
call
mov
ja
sub
add
fsub
fildll
outsb
mov
mov
and
mov
or
push
movsl
xchg
repz
cld
pop
sub
das
mov
adc
int3
pop
loop
imul
mov
lcall
lret
add
shll
mov
jo
rcll
gs
inc
movsl
sbb
cli
jge
mov
loope
inc
nop
dec
lret
cmpsb
mov
in
pop
push
mov
mov
push
test
popa
outsl
pop
mov
xlat
dec
shl
xlat
xor
or
cli
push
aas
inc
or
sti
inc
scas
inc
mov
sbb
outsb
ja
das
add
sbb
aas
or
dec
or
test
int
scas
lahf
and
pop
mov
xchg
sbb
fs
jns
sbb
jmp
pop
lods
insb
cmp
and
add
sarb
inc
outsl
cmc
mov
and
ficompl
scas
cmp
sar
insl
mov
mov
xchg
hlt
mov
sub
mov
sahf
decl
data16
mov
pop
enter
negb
mov
push
subl
jp
pop
shlb
sahf
xlat
test
mov
incb
mov
inc
jle
in
jmp
lahf
sbb
mov
xchg
dec
push
into
fistps
mov
jge
fdivr
add
shlb
push
jae
pop
mov
or
add
mov
dec
ret
xchg
ret
cmp
jle
xchg
jne
jl
daa
or
lcall
and
dec
xor
or
jl
xlat
fs
lock
aad
cmp
push
shl
push
sahf
adc
out
pusha
neg
cli
ljmp
js
or
bound
test
aas
js
adc
test
dec
xlat
rep
or
ror
xchg
data16
loope
inc
aad
jg
mov
ficomps
pop
test
mov
ljmp
nop
xchg
cltd
adc
pop
cmp
lds
mov
fisubrl
mov
adc
or
push
mov
stos
es
mov
mov
push
push
xor
cmpsb
pop
lret
in
punpckhdq
xor
aas
cmp
fdivs
sbb
push
cmpb
add
loop
inc
pop
mov
and
pop
push
loopne
lods
push
sbb
lret
cmp
cld
stc
jmp
outsl
xchg
cmp
jl
pop
push
mov
scas
pop
ficomps
jecxz
movb
fisubrs
pop
insl
icebp
jecxz
lret
out
inc
pop
push
icebp
dec
fbstp
adc
sbb
xor
jns
sub
or
mov
fistpll
mov
mov
dec
movsb
insb
jle
add
lret
jl
imul
call
jae
add
repnz
shrl
testl
fnstenv
xor
lea
fwait
jae
xchg
sub
movsl
enter
ss
and
imul
sbb
mov
shr
mov
in
cmpsb
dec
push
lods
push
cs
out
pop
ret
icebp
push
adc
movsb
xchg
xchg
sbb
add
mov
xchg
mov
ljmp
sbbb
int3
mov
scas
dec
push
testl
repz
jle
cld
pop
dec
sub
adc
push
add
pop
push
adc
subb
aaa
add
iret
adc
pop
sub
sub
cmp
xlat
fcompl
mov
xchg
ss
pop
sub
jmp
mov
xor
push
sbb
js
push
inc
jb
adc
adc
mov
rcll
xor
xor
and
imul
cld
dec
dec
jbe
orb
inc
les
add
aaa
cltd
push
pop
sbb
jno
aad
imul
popf
subb
add
push
dec
pop
cld
xchg
xchg
add
jl
inc
enter
ret
leave
dec
sub
inc
push
jne
jge
aaa
scas
aad
icebp
mov
insb
push
or
cs
jnp
cmpsl
and
push
sub
xchg
xlat
cltd
xor
jg,pn
jmp
cmp
pop
lds
xor
inc
outsl
out
pop
jecxz
lret
xor
jae
insl
lcall
orb
mov
jne
out
lods
dec
mov
ret
stos
cwtl
mov
int
int3
fsub
fstl
jp
jb
je
shll
cmp
fsubr
fcompl
in
jmp
ffree
scas
scas
enter
inc
cmp
add
push
aam
je
lods
stos
push
mov
lret
xchg
ret
popf
adc
jne
inc
add
and
aaa
sahf
orb
cmpsl
out
inc
ss
and
adc
stos
sbb
mov
pop
xor
mov
ret
sub
scas
lock
mov
xor
push
push
xor
sub
inc
pushw
insb
sbb
in
adc
pop
popf
mov
data16
fsubs
push
dec
rcl
fstpl
push
cmp
shrl
or
mov
ret
mov
lds
xor
adc
hlt
adc
mov
outsl
insl
jg
pop
in
jecxz
les
xchg
je,pt
jne
sbb
lods
or
out
add
rcl
xor
mov
loop
mov
pop
test
loopne
add
inc
xchg
push
inc
bound
and
xlat
mov
pop
stc
aam
xor
add
mov
loop
ret
inc
sub
jmp
sbb
inc
or
dec
mov
push
pop
ljmp
add
shl
mov
push
repnz
lahf
push
push
cmp
jne
mov
mov
inc
xlat
jecxz
sub
xchg
cltd
sbb
cmp
iret
stos
insb
sbb
orb
cmp
xchg
sub
sub
jb
pusha
scas
jae
mov
jbe
sbb
or
imul
xchg
cmpl
adc
leave
cmp
ret
jb
fsts
hlt
das
pop
jl
mov
sub
int3
stos
mov
loope
pop
sub
and
fistpl
cs
jns
cmpsb
push
insl
rol
in
stos
rclb
ret
ss
jae
sbb
pop
sysret
dec
subl
mull
test
ficompl
iret
mov
lahf
mov
inc
fisubrs
aas
arpl
popf
xchg
push
xchg
int
daa
xchg
into
xor
dec
cmpsb
lret
shrb
repz
push
mov
fdivs
into
stos
test
add
rclb
cmc
out
imul
mov
data16
inc
cmp
cwtl
repnz
ss
push
push
adc
out
pop
addr16
hlt
inc
jnp
jae
dec
jae
stos
sbb
sahf
clc
mov
idiv
pop
add
fcmove
push
repz
leave
ja
xchg
stos
push
shlb
stos
fldl
mov
les
outsb
and
loope
cmc
xchg
movzwl
or
mov
push
xlat
xchg
ret
dec
xchg
inc
cs
add
add
adc
and
ss
jmp
dec
sahf
mov
fisubrs
insl
mov
arpl
inc
repz
or
lea
fwait
iret
sbb
bnd
sub
cli
dec
orb
lcall
or
jg
sbb
aad
mov
add
aaa
mov
push
fcom
sbb
rorb
push
stc
add
cltd
test
in
xchg
pop
data16
jb
dec
adc
jle
jcxz
mov
pop
scas
pop
divl
fdivs
imul
ljmp
cmp
cmc
jns
stos
adc
ja
sar
mov
leave
jmp
ficomps
xchg
aas
loope
jns
or
xor
stos
pop
xchg
cs
jle
call
aas
jmp
cmpsl
loopne
into
sbb
popa
cmp
sub
cmp
push
ljmp
into
cmp
mov
imul
hlt
sbb
out
test
cli
mov
ret
xlat
daa
lahf
inc
mov
lds
jno
js
lods
into
fisubs
sti
or
out
loop
mov
fisubs
repz
ljmp
imul
add
jo
push
cmp
fsubrl
in
js
leave
sarb
cwtl
push
dec
out
jns
pop
test
into
cmp
mov
cmpsl
mov
and
repz
sti
pop
icebp
aas
mov
dec
xchg
xor
gs
xor
cmp
dec
rcrb
jmp
and
or
mov
mov
push
mov
inc
mov
and
sub
rorl
mov
in
pop
repnz
mov
push
xor
lock
hlt
scas
lods
sub
cmp
stos
stc
int3
push
xchg
pop
ss
sbb
and
mov
int3
lret
rcl
aad
in
dec
inc
jns
xchg
popa
repnz
js
jbe
or
adc
mov
lock
mov
or
aad
gs
popl
icebp
addl
push
fcomps
xor
jbe
jecxz
fdiv
call
lock
fistpl
cmpsl
popf
fistl
lods
push
or
push
in
popf
sahf
int3
in
mov
cs
mov
pop
lods
sub
push
in
add
dec
scas
popf
mov
data16
push
mov
sbb
lret
push
add
fs
shl
adc
cmp
add
and
or
mov
jl
push
mov
xor
out
popf
xor
pop
into
dec
stos
xor
xor
pusha
das
std
outsl
mov
sub
xchg
cmp
cmc
stos
dec
aad
fs
mov
pushf
pop
mov
inc
out
pop
arpl
or
pop
pop
add
cli
adc
adc
mov
cltd
stos
sub
xchg
imul
jo
in
cmp
cmp
stos
lods
jp
out
lock
cwtl
jnp
cmp
inc
hlt
sbbl
aas
mov
inc
mov
out
xor
lcall
xchg
insl
into
inc
cmc
addr16
inc
push
inc
fnstsw
cmp
sahf
les
addr16
cmpsb
jb
lea
xor
xor
xorb
loopne
clc
mov
inc
aam
notl
cmc
push
aaa
fwait
out
xor
int3
lds
push
fs
xor
test
sub
sub
test
arpl
pop
cmp
jecxz
mov
pop
imul
pop
decl
xchg
sahf
mov
sbb
adc
adc
xchg
and
or
jle
rcll
scas
sbb
or
sarb
ds
lods
xor
lock
sub
outsl
sub
arpl
pushf
lea
mul
ret
cld
adc
das
repz
out
push
mov
pop
popf
mov
inc
popf
je
lods
mov
xchg
fdivrl
and
insl
or
jp
inc
in
jae
or
push
cmc
pop
fisubl
sbb
push
jo
dec
hlt
push
and
mov
pop
jmp
ret
fwait
in
xor
shl
js
aad
out
xor
add
rorl
fldenv
cltd
jns
cmp
pop
loopne
stos
jbe
xor
jmp
aaa
shl
outsl
xor
decb
jne
shlb
stc
and
pop
pop
xlat
mov
add
push
pop
sub
imul
hlt
jns
les
mov
icebp
cltd
mov
mov
dec
fwait
or
adc
inc
lahf
sbb
jbe
pop
pop
push
cmp
cmp
xchg
mov
in
int
pop
mov
cmp
inc
sbb
xchg
stos
imul
and
out
dec
cmp
call
int3
mov
out
ljmp
insl
sbb
in
test
mov
mov
test
out
push
pop
insb
or
xchg
inc
xchg
adcl
push
and
loope
mov
push
bnd
daa
js
jne
push
add
or
mov
hlt
mov
imul
jle
sub
xchg
loop
daa
ret
cmp
fldcw
dec
dec
stos
dec
mov
pop
xchg
fildl
mov
push
sti
repnz
aas
clc
adc
or
lret
mov
aas
xchg
mov
sub
repz
jecxz
rcll
cmp
xor
cld
call
jb
inc
loope
xchg
dec
in
push
cmp
test
gs
push
pop
lock
out
push
ja
fsubl
aad
lds
mov
gs
add
and
push
imul
jo
data16
sub
pusha
ljmp
mov
xor
sbb
outsl
mov
cs
aaa
stc
fisttpl
aas
fmulp
and
pop
repnz
ret
pop
fsubl
mov
pushf
push
and
loop
sub
jo
mov
icebp
xchg
das
push
xor
mov
lods
mov
lret
sbb
scas
jnp
out
dec
pop
dec
sar
add
test
dec
mov
jns
mov
repnz
push
xchg
push
jb
and
cmpsl
bound
xorb
icebp
sbb
push
lret
leave
insl
pop
pi2fw
mov
dec
ss
rcrb
pop
ljmp
jne
xchg
fimull
mov
jmp
dec
cmpsl
dec
mov
call
enter
mov
xor
or
imul
mov
enter
scas
sbb
imul
push
adc
cltd
xchg
inc
add
outsb
xchg
jb
movsb
jne
pop
inc
adc
jb
mov
sub
mov
mov
dec
out
cltd
add
lcall
xorb
adc
pop
iret
xchg
xchg
fcompl
sti
rorl
stc
sub
xchg
dec
mov
jg
scas
xor
ficompl
dec
cld
or
xchg
mov
out
pushf
hlt
ret
jge
ret
mov
xchg
push
add
xchg
lea
mov
push
cltd
cs
dec
imul
ljmp
sbb
test
pop
pusha
sti
jp
into
cmp
movsb
or
mov
sbb
loopne
mov
repz
arpl
jle
lods
jl
scas
adc
xor
jae
popf
ja
or
mov
cld
jae
outsl
fistpll
mov
pop
jle
jmp
or
cmpsl
pop
jle
cmp
and
cmp
imul
mov
xor
add
xor
lods
or
jbe
cli
add
out
pop
mov
mov
sbb
mov
cmp
mov
dec
push
hlt
mov
add
lods
dec
pop
jg
inc
les
jb
mov
jl
gs
adc
pusha
or
jno
fcmovbe
push
mov
popa
mov
out
xor
and
push
aas
cmc
sbbl
mov
pop
mov
mov
cmc
jnp
sar
leave
addr16
inc
mov
adc
out
push
aas
lahf
aad
and
loopne
and
xchg
pusha
in
add
xor
push
enter
or
cmp
push
insl
cwtl
in
jne
sub
es
or
cwtl
shll
pop
insb
lret
adc
lret
dec
dec
lds
sbb
ret
hlt
jge
fs
push
in
jl
inc
sub
rep
inc
mov
inc
shlb
xchg
mov
push
xor
fildl
push
imul
jmp
mov
push
push
icebp
bound
sbb
inc
dec
loopne
xchg
xchg
xchg
movsb
cmpsl
out
pop
jb
sbb
and
jbe
mov
cmc
and
stos
ljmp
and
out
mov
test
outsb
inc
push
subb
in
ficompl
int
shr
repz
mov
inc
pop
inc
iret
enter
or
stos
popa
inc
test
rcrb
inc
loopne
insl
xchg
mov
in
add
dec
popa
sahf
rcrl
and
mov
sbbl
push
mulb
xor
xchg
mov
xor
xorl
notb
push
xchg
fsubrl
scas
repnz
sub
fisubrl
pushf
mov
and
ja
push
jmp
inc
hlt
push
mov
lds
inc
jg
cmp
xchg
add
das
jo
dec
ja
sbbl
rcrl
aam
clc
and
push
and
sub
xchg
test
imul
push
dec
add
sahf
adc
push
imul
sub
lret
mov
jl
mov
jne
jbe
aas
xchg
loope
out
into
icebp
cmp
xor
repnz
adc
imul
je
scas
daa
or
rcrl
mov
mov
inc
pop
cmp
cmp
pop
inc
ficoms
and
push
pushf
cs
call
mov
mov
ficoml
arpl
mov
das
rcrb
repnz
jo
or
dec
ja
xlat
es
adc
je
or
xchg
cmp
mov
ss
mov
inc
pop
and
sub
or
dec
pushf
stos
pushw
mov
jnp
sub
shll
push
adc
addb
mov
push
jmp
and
jle
jle
xchg
stos
aaa
pop
xchg
lcall
pushf
xor
push
pusha
push
lcall
push
clc
sub
dec
leave
mov
xchg
xorl
movsb
sub
or
mov
movsl
jae
loop
inc
xchg
andl
mov
add
cmp
arpl
ss
rclb
int
call
pop
mov
cld
fadd
push
mov
sbb
stc
and
shrb
push
mov
adc
inc
mov
xor
xor
movb
or
aam
jbe
jbe
xlat
daa
sub
mov
mov
mov
dec
pop
shlb
aas
adc
xchg
mov
negb
sub
xor
repnz
and
into
xchg
dec
mov
jbe
adc
popf
sub
lods
dec
xchg
xchg
mov
hlt
scas
lret
ret
xor
fisubs
notb
sti
ljmp
mov
pop
or
inc
xchg
sbb
xchg
fadd
in
div
cmpsb
pop
xor
xor
xchg
pop
cmpsl
faddl
xchg
or
push
ffree
sbb
cltd
jmp
lahf
inc
xchg
sbb
shll
fistl
jl
rcrl
push
repz
adc
outsb
pop
push
xor
pop
andl
mov
sbb
mov
adc
push
pop
mov
scas
in
jecxz
or
test
pop
addr16
xor
push
xchg
push
je
jbe
or
ret
pop
add
aas
inc
lret
push
add
rorb
std
ficoms
cmp
shl
in
pop
pushf
loope
repnz
push
jmp
adc
push
pop
or
por
ja
mov
pop
arpl
ficoms
lods
jne
xchg
jns
pop
sub
sub
dec
movsb
mov
jnp
pop
decb
adc
rorb
icebp
pop
lods
mov
cltd
ret
xor
rcll
jbe
add
daa
shll
sbb
add
call
rolb
mov
pop
jne
push
addl
out
hlt
inc
mov
and
dec
add
jle
bound
imul
jp
mov
mov
jmp
sub
inc
lea
jle
sarl
push
and
xchg
test
in
inc
rorl
inc
roll
adc
mov
or
mov
jbe
xchg
fmull
rolb
outsl
pop
into
pop
inc
pop
push
clc
out
lahf
jg
in
pop
cmp
lret
imul
lret
or
push
shl
add
inc
push
or
cmp
movsl
inc
inc
add
push
das
xchg
dec
mov
movsb
enter
test
pop
xlat
pusha
scas
imul
jmp
mov
adc
mov
in
dec
fs
out
les
je
mov
inc
sub
pop
add
mov
enter
pop
xchg
cld
data16
lahf
and
call
xchg
aad
loope
loopne,pn
inc
rclb
and
je
cmpsl
and
jne
scas
pop
arpl
rcl
ret
cmp
dec
pop
pop
sub
mov
or
das
dec
scas
mov
xlat
ror
ds
cvtdq2ps
movsl
mov
push
test
adc
hlt
and
mov
test
and
insl
sti
inc
mov
mov
daa
mov
popf
adc
lcall
sub
mov
jle
dec
in
pop
xchg
mov
mov
and
push
movsl
ss
mov
mov
xor
mov
pop
inc
gs
pop
sbb
test
pop
int3
jb
inc
pop
cmp
negl
jb
cltd
mov
sub
daa
pop
push
pop
mov
adc
mov
jno
fadd
cmp
inc
xchg
shll
loope
push
inc
jnp
imul
into
inc
dec
gs
sahf
xchg
or
ja
or
fisubrs
mov
pop
inc
inc
lahf
enter
andb
je
fcomi
mov
data16
ds
or
call
push
sbb
push
dec
cltd
iret
mul
fists
sub
les
je
push
scas
data16
and
enter
mov
add
rcrl
inc
movsb
lret
mov
push
mov
out
and
fs
repnz
mov
mov
xor
cmp
xchg
pop
xchg
cmp
or
add
imul
popf
fwait
out
adc
lods
ret
pushf
xor
clc
es
in
shll
inc
mov
mov
dec
push
scas
stos
stc
jecxz
pop
sahf
stc
test
and
and
shll
lods
pop
cmp
ljmp
cmp
aas
shlb
movsl
stos
ficoms
shlb
scas
and
jp
push
jb
cmp
sbbl
mov
adc
pusha
push
jb
pop
and
repnz
subl
out
adc
dec
dec
add
shlb
mov
push
sub
push
inc
mov
sbb
outsl
jge
fisubrs
negb
mov
jno
fmull
mov
jl
outsl
iret
std
or
stc
cltd
pop
sbb
xchg
and
add
inc
scas
inc
shrb
outsb
cmp
aas
dec
test
xchg
stc
ss
push
add
inc
jmp
pop
stc
xchg
fld
xchg
sahf
dec
push
dec
mov
pop
out
and
hlt
or
mov
enter
add
mov
andl
icebp
sarl
int
sub
inc
cld
jecxz
fstl
add
xchg
and
cli
cmp
sbb
mov
or
scas
xor
loopne
int3
xor
mov
and
and
inc
divl
mov
ja
sbb
lahf
cmp
mov
nop
hlt
xchg
fmull
xor
cmpsb
cmpsl
clc
mov
dec
push
fcmove
add
fldenv
pop
push
sbb
xchg
popa
call
inc
ja
mov
xchg
jae
mov
in
movsb
ds
xchg
clc
and
hlt
adc
mov
sbb
out
aaa
push
mov
sahf
dec
sbb
pop
stc
call
push
dec
pop
dec
popa
inc
push
push
fstpt
push
ret
imul
lret
cmp
lea
xchg
outsb
cmp
jo
aad
out
adc
je
inc
scas
ret
out
loope
xor
push
sti
aad
push
push
xchg
xchg
inc
sub
push
and
xlat
mov
pop
jb
in
mov
jecxz
popa
xor
scas
or
mov
xor
call
push
aaa
in
lods
xchg
idiv
pushf
sbb
pushf
jns
pushf
insb
test
cmpsl
inc
in
mov
out
jno
outsb
adc
sub
sbb
icebp
xchg
push
loop
lcall
add
pop
fstpl
mov
stos
fadds
out
int3
inc
mov
popf
jns
fadd
testb
popa
fistl
shrb
push
xchg
sbb
rclb
and
lock
sub
lods
mov
xchg
mov
mov
mov
mov
popa
mov
jecxz
cld
sbbb
pop
dec
sub
cmpb
les
das
adc
jmp
mov
rcrl
insl
and
aam
ds
cmp
bound
mov
stc
sub
notb
push
mov
add
dec
pop
and
push
dec
sbb
std
sub
sub
fwait
out
pop
mov
xchg
ja
pushf
adc
js
inc
pop
xchg
rcrb
add
pop
cmp
sbb
mov
push
inc
lret
xchg
insl
xor
push
aam
inc
dec
mulb
pop
icebp
xchg
movsb
jle
push
sub
adc
ss
sbb
out
ficoms
add
add
add
int
clc
pop
iret
jg
ja
mov
imul
ret
fwait
in
cmc
xlat
pusha
jne
xlat
pop
sub
stos
dec
bound
mov
cmpsb
cli
repz
push
mov
cli
jmp
push
jge
dec
jns
les
xchg
scas
leave
pop
sub
jae
aam
movsl
push
xor
xor
in
repnz
call
in
test
mov
clc
loopne
cmpb
mov
add
jg
and
jle
pop
add
mov
jge
jl
inc
add
rorb
iret
scas
imul
dec
mov
mov
loope
ja
xchg
inc
fsubrs
dec
xor
test
push
and
push
pop
pusha
mov
mov
in
inc
mov
jge
sbb
sbb
lcall
adc
ja
test
mov
cmp
iret
xchg
sub
xchg
mov
cmc
aas
scas
cld
push
sahf
divb
in
dec
add
mov
lods
mov
dec
fnstenv
fldl
mov
add
imul
je
jo
pop
loopne
stc
imul
inc
xchg
inc
andb
mov
aaa
jmp
xchg
or
sbb
call
rolb
mov
in
xor
pop
in
mov
popf
dec
jecxz
pop
fisubrs
mov
fadds
push
pushf
call
mov
add
inc
xchg
jmp
dec
jb
fmuls
lret
lret
inc
hlt
push
sarl
pop
movl
pop
add
pop
pushf
xchg
fmul
sbb
adc
movsl
or
sti
sbb
enter
ljmp
outsl
sti
repz
int
repnz
adc
push
pop
jg
push
pop
jnp
cmp
fs
movsl
test
mov
push
mov
stos
std
sbb
jb
scas
lock
shrl
and
ljmp
and
das
mov
xlat
dec
into
in
popf
and
dec
leave
cld
hlt
ljmp
sub
xor
call
movsb
xor
out
mov
push
mov
popf
pop
dec
sbb
xor
cmp
fs
fists
xor
or
mov
ljmp
or
jge
insb
and
movsl
cmpsl
insl
cmp
repz
lods
pop
lock
mov
aas
stos
cmpl
inc
in
repz
fmull
addr16
dec
cld
fimull
push
in
xor
dec
jnp
pop
insl
jne
dec
icebp
sbb
jno
jns
sub
xchg
sti
and
sub
in
ss
xor
mov
rorl
lods
push
pop
jo
loop
adc
dec
in
test
ret
sahf
ror
gs
loop
addr16
sti
add
jmp
cld
roll
sti
hlt
int3
leave
mov
jmp
movsl
mov
repnz
add
sub
lock
jge
clc
gs
adc
and
pcmpgtd
xchg
pushf
mov
lcall
enter
cmp
lcall
add
pop
pusha
mov
inc
fldt
lea
pop
outsb
lock
cld
bound
sbb
lret
cmc
aas
pop
mov
sub
imul
pop
ret
aaa
mov
adc
mov
in
repz
fidivrl
les
fs
cltd
in
xchg
jle
test
lret
sbb
mov
mov
sub
mov
popf
mov
jnp,pt
xchg
lret
lock
and
sbb
lods
pop
adc
les
pop
movsl
pusha
inc
je
cmp
ja
push
lea
xor
call
add
pop
aaa
aaa
or
mov
adc
outsb
and
ja
call
pop
push
cmp
add
mov
mov
sti
pusha
out
icebp
pushf
nop
jecxz
or
inc
out
test
push
out
dec
inc
or
dec
xlat
insb
test
les
push
movsl
out
ficomps
cs
out
ficompl
bound
mov
and
mov
dec
jg
sub
sub
mov
and
lret
insl
les
cmc
jo
out
pop
nop
push
je
mov
jbe
sbb
add
pop
pop
ja
add
adc
push
sub
cmp
pop
sub
lock
push
and
jb
mov
push
lea
mov
cmp
sahf
inc
mov
jmp
nop
ss
jecxz
and
sti
aaa
hlt
notb
xor
lret
sti
inc
mov
sbb
rcrb
idivb
test
cmp
shrb
stos
enter
fisubl
bound
sar
lock
inc
imul
repnz
stos
add
mov
sbb
inc
pop
rorb
sub
dec
and
pop
daa
fstpt
in
leave
aam
xor
add
ja
jns
push
movsb
inc
xchg
ffreep
xchg
push
jmp
daa
push
xchg
lret
pop
mov
push
je
popf
lret
pop
and
sub
test
ss
mov
popl
xchg
mov
xchg
dec
in
xor
popa
sti
xor
daa
mov
inc
iret
out
ljmp
scas
jns
movsb
pop
mov
or
jnp
fsubrs
add
aad
fiadds
pop
in
cmp
and
pop
bound
inc
mov
mov
test
xor
stc
cmpl
pop
push
popf
sub
xchg
mov
jl
inc
xor
subl
lret
ficompl
cmp
das
icebp
xchg
test
sbb
fwait
xchg
sbb
push
xor
sahf
in
push
sbb
mov
adc
inc
inc
int3
dec
xchg
jo
or
xor
ret
rclb
pusha
bound
loopne
lret
sub
and
shlb
jb
push
aad
js
xchg
lret
inc
and
cs
ljmp
push
icebp
sub
dec
adc
stc
pop
mov
test
pop
or
add
mov
insb
adc
add
jno
negl
mov
sahf
imul
or
mov
adc
xlat
int
out
add
outsb
pop
xorl
in
pushf
cmp
or
js
xor
and
mov
popf
dec
push
js
sbb
stos
lret
inc
dec
lock
cs
xor
xchg
lea
ficoml
ds
push
fistpll
lret
dec
and
outsl
push
adc
movl
dec
fistps
pop
inc
inc
dec
and
adc
and
stc
jbe
mov
movsb
negb
test
push
dec
out
mov
push
xchg
mov
out
xchg
inc
mov
and
shl
mov
fildll
add
xchg
mov
jae
and
ret
dec
jge
or
push
push
or
clc
push
lea
dec
or
mov
outsl
imulb
dec
enter
aas
std
push
daa
push
fwait
enter
repz
add
push
fdivs
mov
imul
jmp
lods
push
lds
jecxz
outsl
jge
cmp
push
dec
leave
test
mov
add
mov
lcall
jbe
dec
pop
stos
ficoms
add
call
js
push
lds
or
decl
ret
push
push
mov
or
fsts
jl
mov
ljmp
adc
jmp
pop
mov
loope
std
lea
add
loope
bound
in
pop
sbb
mov
jp
pop
pop
paddsw
sub
cmc
jbe
andl
ss
dec
std
lret
push
push
mov
jg
xchg
mov
inc
loop
mov
inc
add
lea
mov
sbb
inc
dec
pusha
fnsave
mov
mov
fnsave
mov
outsl
aam
inc
cs
fimuls
cmp
std
les
push
xorb
lock
mov
push
mov
inc
push
jno
es
mov
dec
cltd
dec
push
pop
jns
or
js
xchg
cli
or
testl
fcom
out
jne
xchg
stos
arpl
mov
pop
xor
pop
scas
pushf
cmpsl
or
popa
pop
mov
shlb
shlb
in
push
sub
repz
mov
test
arpl
inc
aad
std
push
test
push
mov
push
jno
jg
and
ja
js
mov
movsl
arpl
mov
and
iret
das
push
push
pop
das
mov
cmp
cmp
jl
cltd
ret
and
sti
jnp
inc
push
cli
lahf
stc
push
cli
adc
jl
push
or
pop
fwait
push
ds
stos
sbb
insl
xor
cltd
and
popf
adc
xor
add
jecxz
int3
sbb
jns
stc
icebp
mov
jl
aad
ficomps
xlat
push
adc
insl
mov
cli
cmpsb
cmc
xchg
rcrb
popa
subb
or
in
ljmp
jno
scas
dec
and
jecxz
xchg
fisubl
out
repnz
cmpsb
sbb
xchg
stos
xor
leave
cs
sbb
sti
pop
stc
xor
inc
push
inc
stos
mov
das
cmp
aad
xchg
pop
notb
mov
push
stc
jle
ljmp
ss
in
cmp
movsb
lret
inc
lods
mov
popa
mov
add
mov
fstl
mov
insb
push
pop
sub
inc
xchg
cld
out
imul
lahf
xlat
lret
lret
fs
les
ret
test
js
dec
in
and
push
mov
mov
loop
das
dec
jnp
test
cmp
mov
es
je
fdivrs
cmpsb
xchg
add
call
or
roll
sbb
popa
or
sbb
shll
andl
mov
out
mov
lcall
icebp
sub
jg
sub
sahf
cmp
scas
outsb
inc
push
mov
imul
repnz
xchg
fsubrs
or
stos
push
push
pop
pop
and
imul
dec
and
push
dec
shlb
adc
imul
inc
mov
cmpl
cmpl
pop
xor
mov
pop
inc
lret
or
inc
lahf
lock
sbb
or
mov
mov
cmp
adc
rcrl
les
outsl
xchg
out
cltd
in
or
divl
adc
xlat
jg
outsb
lahf
dec
cmp
shrb
xchg
out
xchg
gs
mov
dec
fwait
popf
mov
jle
icebp
ret
rorb
pop
lock
xchg
iret
inc
ss
mov
add
mov
and
std
push
into
cli
cmp
fdivrs
cmp
in
lcall
mov
addr16
cltd
fwait
mov
es
inc
les
mov
testl
pushw
adc
xor
xor
loopne
add
inc
xchg
or
mov
xchg
or
int
leave
andb
jo
ss
rcl
je
lods
inc
movb
or
mov
push
je
rcrl
inc
outsb
dec
push
nop
jno
sti
shrb
clc
inc
mov
test
call
pop
ret
pusha
adc
and
fmul
dec
adc
outsl
dec
loope
mov
mov
cld
mov
in
adc
push
dec
pop
push
xchg
iret
push
nop
fsubr
jns
push
xor
mov
mov
outsb
daa
inc
and
xor
xchg
inc
xchg
fcoml
add
lods
jl
xor
icebp
dec
or
and
das
push
aad
repnz
icebp
icebp
mov
lea
add
adc
mov
or
aas
imul
fwait
inc
in
jp
icebp
adc
fisttps
push
inc
mov
into
repz
and
test
in
adc
push
dec
leave
adc
mov
mov
mov
xchg
fldt
stos
jo
inc
adc
jp
scas
push
movq
cmc
jno
jne
push
push
xchg
cmp
dec
imul
pop
inc
dec
xor
inc
into
xor
cmpsb
sbb
adc
mov
inc
daa
mov
or
fsubl
and
sbb
inc
dec
adc
ret
ret
push
push
gs
xchg
insb
adc
repz
dec
sbbb
mov
add
cmpsl
add
xor
mov
pop
and
or
cmp
das
inc
mov
mov
outsb
out
jmp
ret
cmpsl
les
int3
sub
in
xor
dec
lea
rcrb
mov
or
ss
js
lea
xor
insb
repz
repnz
add
fiaddl
popa
cld
imul
xor
pop
push
pop
and
clc
popl
mov
jmp
clc
scas
test
arpl
and
int3
rcrl
sarl
aam
xchg
cmp
jns
cld
inc
test
or
push
dec
add
mov
cmp
fwait
xchg
in
fisubrl
cmpsl
adc
pop
sbb
cwtl
mov
push
cltd
sbb
aas
pop
scas
pop
add
pop
mov
leave
mov
rclb
mov
adc
aam
add
or
adc
dec
pop
jae
mov
fsts
outsl
cs
lods
mov
jl
pushf
lods
fbstp
test
pop
lret
int
movsb
cwtl
sub
or
cmp
dec
sbb
out
jbe
decb
cmc
jae
adc
stos
xor
pop
fwait
int3
pop
jl
sub
icebp
clc
les
call
in
out
sarl
xor
cmp
fidivrl
mov
mov
in
sub
insb
fmull
dec
sahf
out
or
movsl
test
adc
rolb
loop
jb
clc
roll
xor
and
inc
pop
pop
out
mov
xor
pop
sub
adc
je
or
fldl
dec
xchg
sbb
ja
mov
mov
ret
xchg
sub
mov
jmp
or
and
test
rcll
adcl
or
inc
cs
xchg
xchg
int3
jbe
out
lds
push
sub
jo
subb
icebp
xor
sub
xchg
pop
jge
push
iret
arpl
push
int
lock
or
pusha
jbe
pop
adc
push
mov
fnstenv
and
and
dec
jnp
daa
adc
inc
aaa
sbbl
add
push
lret
daa
ja
cmpsl
pusha
iret
pop
lock
repz
daa
loop
jns
dec
rorb
mov
and
test
fstpt
xor
inc
fimuls
xchg
mov
lock
stos
xchg
imul
add
cmpxchg
insb
mov
sub
stc
push
adc
insl
daa
imul
or
nop
pop
dec
pop
lret
sub
in
or
pop
adc
ret
pushf
sbb
xchg
pop
fcompl
dec
and
sub
mov
xorb
outsb
mov
sbb
push
fdivrs
aas
repnz
xlat
movsb
mov
add
es
pop
fwait
lea
je
aaa
jg
icebp
cmp
push
mov
dec
jl
dec
sarl
hlt
cmpsl
mov
sbb
enter
jl
arpl
paddw
mov
adc
nop
rep
cld
inc
inc
push
inc
mov
dec
xchg
data16
iret
cmpsb
mov
dec
sbb
adcb
sbb
lock
out
stc
inc
rcl
sbb
xchg
sub
cmp
fs
jno
push
in
repnz
push
lahf
mov
cmp
insl
fwait
pop
jp
fnsave
push
cmpsl
leave
loopne
outsb
sub
mov
inc
enter
test
push
sub
pop
adc
out
popf
sti
lret
and
add
movsb
jno
shll
testl
inc
mov
xor
outsl
int3
pop
fisttpl
rol
sbbl
mov
pushf
dec
in
xor
test
sub
mov
or
nop
jns
add
test
jecxz
sbb
sbb
sbb
xor
mov
addr16
mov
inc
lock
jnp
lock
add
pop
lahf
adc
jg
ljmp
xor
adc
cmp
jg
shrb
fbld
fwait
pop
jp
push
int
inc
sub
lahf
push
mov
lahf
sbb
loope
dec
xor
add
xchg
fidivrs
das
jmp
lds
jge
nop
jb
lds
daa
loop
cmpsb
cmp
sbb
push
stos
dec
call
addb
out
rcrb
lret
pop
in
mov
inc
mov
loopne
negb
icebp
ja
cmpl
daa
add
xchg
mov
cmp
mov
push
sub
cmp
pusha
cmpb
shrb
mov
testb
dec
mov
jmp
ret
filds
mov
arpl
test
xchg
shrb
lahf
movsb
int3
pop
in
dec
sbb
js
sahf
and
movsb
sub
sarl
das
sbb
dec
mov
test
xor
out
aad
jmp
fldl
xchg
adc
stc
lcall
xor
push
mov
cmp
push
es
test
lods
sbb
xorb
clc
fildll
jno
cs
das
pusha
mov
adc
repz
ds
or
xchg
sub
sti
jmp
adc
pushf
xchg
adc
and
movsb
fsubl
cwtl
cmp
jmp
ja
xor
sbb
cmp
mov
call
fnsave
call
add
aad
faddl
mov
sub
stc
and
aas
stc
cmp
lahf
shrb
xor
js
pop
orl
fcmovnu
push
aad
xor
jg
aam
cmp
push
sbb
mov
in
ljmp
mov
rclb
jnp
xor
cmp
xor
dec
mov
mov
ja
fsubr
pop
aas
inc
out
xor
std
insl
sti
out
push
dec
cmp
sbb
mov
scas
imul
sub
pop
dec
xchg
cs
lahf
out
imull
insl
stos
pushf
adc
or
add
mov
push
or
movsb
loope
and
lea
push
adc
and
jo
mov
push
inc
add
imul
shrl
popf
or
scas
xchg
jp
dec
xor
push
jbe
ljmp
pop
cmpsl
in
mov
ss
shufps
lfs
and
stos
xor
dec
inc
movd
and
and
icebp
enter
lods
out
rclb
inc
test
inc
jns
xor
dec
ss
sub
sti
push
pop
das
mov
dec
pop
adc
inc
jl
inc
lcall
aam
insb
enter
btc
test
jno
mov
dec
pop
mov
xchg
dec
xchg
jnp
pop
popa
out
adc
enter
pop
lods
inc
movsb
iret
jg
xchg
movsl
aad
movl
sub
addl
out
gs
ficompl
fcoms
fwait
pop
pop
loopne
jmp
loop
lods
loop
rol
in
lret
ret
adc
rol
add
shrb
iret
fwait
push
lcall
cmpsl
mov
sarb
push
mov
mov
lock
int
stc
pop
jbe
out
push
ret
adc
data16
rorb
xor
sub
pop
dec
je
cwtl
das
imul
sbb
repnz
pop
and
aam
nop
jno,pn
ja
mov
sbb
bound
jb
pop
push
cmp
inc
jbe
mov
push
xchg
jnp
movsl
jmp
and
dec
add
mov
loopne
inc
xchg
jno
es
jecxz
fcoml
and
cld
sub
clc
outsl
aad
push
mov
pop
pusha
outsl
jecxz
lret
push
aas
repz
cs
pop
xchg
ss
scas
lea
pop
xlat
pop
mov
imul
adc
sahf
dec
out
outsl
or
add
fs
inc
into
adc
xor
push
or
hlt
aad
movsb
xchg
int
cld
in
dec
adc
cmpsl
adc
or
test
fistl
xor
jmp
pop
repnz
and
popa
sub
psrlw
sbb
dec
add
in
sub
shrb
imul
dec
je
scas
and
add
lahf
test
or
inc
fmull
adcl
addr16
enter
mov
pop
inc
sub
mov
aad
add
mov
dec
lods
movsb
inc
sarb
and
loope
pop
arpl
cmp
rorl
or
inc
push
adc
cli
xchg
xor
pop
fnstenv
pushf
out
repnz
hlt
push
int3
xor
adcb
test
cltd
stos
rclb
jno
xchg
sti
pop
sub
daa
fisubl
clc
and
fadds
inc
lods
imul
aaa
mov
mov
push
mov
insl
or
cld
iret
shlb
jae
and
and
aam
jle
faddl
gs
addb
mov
adc
pop
mov
subl
insl
jp
and
push
jle
fcoms
or
sub
mov
shll
data16
or
int
and
je
aad
sub
pop
add
loope
mov
in
leave
push
pop
adc
ja
mov
imul
or
xchg
cmc
and
mov
imul
pop
pusha
add
bound
xchg
addr16
mov
mov
imul
test
pop
sub
std
push
mov
icebp
fs
mov
enter
jo
pop
adc
insl
push
sub
inc
jecxz
xchg
std
and
xchg
repnz
mov
push
inc
mov
das
aaa
faddl
xor
push
in
inc
mov
jecxz
cmpsl
mov
dec
xchg
sub
mov
pop
push
nop
insb
mov
lods
jae
jmp
add
lahf
js
or
sbb
mov
insl
mov
dec
mov
or
repnz
popf
or
jnp
sbb
xchg
or
mov
test
adc
cwtl
cmp
mov
movsb
inc
imul
clc
ret
pop
jl
jo
leave
inc
sub
jo
mov
lods
popf
lret
pop
mov
cltd
xor
repz
sbb
xor
mov
xor
mov
sbb
addb
in
or
push
int
in
xchg
test
jecxz
leave
scas
icebp
pop
jbe
cmpsb
xchg
pop
or
sti
push
mov
cmpsl
ja
or
jno
xor
js
xchg
add
xchg
push
daa
aas
inc
sahf
shl
xchg
sub
fisubs
jno
jge
lret
jb
aad
jo
push
aas
loope
xorl
mov
sub
inc
nop
ret
iret
nop
sub
xchg
jae
mov
das
and
cmp
dec
adc
add
or
push
mov
or
in
bound
ret
or
aaa
jg
shl
mov
xor
pusha
int
repnz
and
cmpsb
aad
xor
add
das
ljmp
stos
pop
dec
dec
jo
fisubrl
pop
cli
out
lret
adc
mov
decb
jmp
mov
and
jb
push
aaa
and
bound
shll
xchg
xor
ss
stos
sbb
pop
dec
orl
add
xchg
jae
mov
pop
dec
insb
repz
out
call
xor
sbb
lcall
mov
and
push
in
and
mov
dec
inc
pop
stos
cltd
xchg
inc
cmc
xchg
fnstsw
addb
cmp
push
clc
daa
add
and
nop
pushf
push
std
je
adc
lock
or
mov
cmpsb
or
aam
mov
cmp
iret
lahf
sbb
pop
push
in
sub
mov
mov
mov
push
cmp
insb
loop
test
outsl
sub
jno
loopne
lahf
js
cmp
jg
adc
xchg
dec
dec
adc
in
outsl
xor
bound
xchg
out
cmp
push
xchg
push
mov
jnp
ss
xchg
pop
test
jo
sbb
mov
in
cmpsl
and
call
and
pusha
push
inc
in
imul
xchg
pop
push
je
pop
cmpsl
movsb
sti
xchg
lret
jne
xchg
rclb
mov
xor
pop
inc
nop
push
mov
cmp
loop
inc
outsb
pop
fucom
insb
pop
ljmp
pop
mov
jge
cmp
out
jns
sub
lods
lds
cmpsl
sarl
jo
rcll
negl
xor
lea
stc
mov
sti
mov
aaa
mov
orl
lock
fidivrl
std
les
push
call
jnp
push
movsl
mov
cmp
icebp
jl
sarl
pop
aad
xchg
mov
pop
lret
jl
cmpsl
pop
repnz
dec
adc
push
cmp
jp
sbbl
jb
aaa
sbb
jb
pop
inc
cld
dec
xchg
jmp
and
daa
jmp
or
std
shlb
mov
pop
adc
xchg
add
sub
ret
mov
sbb
jecxz
popf
sub
push
sahf
lods
or
lods
insb
aas
mov
xlat
repz
ret
testb
mov
ret
push
cmp
cmpsl
mov
iret
mov
loopne
out
fwait
and
push
shlb
mov
mov
in
inc
test
inc
xchg
xor
push
dec
icebp
sbb
lcall
in
inc
aad
xchg
inc
fdiv
mov
sub
addr16
add
add
loopne
lret
cmc
daa
iret
jmp
hlt
ja
and
sub
mov
lcall
jg
pusha
adc
fists
into
inc
insb
mov
mov
aaa
jns
inc
jg
mov
and
out
bound
pop
dec
push
hlt
lods
and
popa
sub
jns
iret
mov
clc
xchg
push
mov
ljmp
or
mov
stc
cmp
arpl
cmp
jb
pop
ja
xchg
push
and
and
hlt
outsl
jmp
jl
cwtl
xchg
insb
adc
fs
scas
mov
jbe
cmp
aaa
dec
adc
out
int3
dec
sub
mov
xor
adc
fadds
jnp
dec
pusha
inc
dec
cmp
clc
hlt
mov
das
loope
pop
push
test
imul
mov
jg
push
lahf
adc
aas
jmp
xor
or
pop
sbbl
xchg
xchg
pop
push
mov
int
test
shlb
lock
fidivl
test
test
cmp
xchg
in
jno
xchg
pusha
insb
pop
lock
ja
add
jg
cmp
inc
pop
lods
mov
jge
insb
xchg
or
pop
inc
sbb
sub
cmp
mov
jle
lea
xchg
mov
stos
mov
inc
arpl
cmp
lret
lret
test
jge
mov
aas
shll
inc
push
add
mov
jmp
ljmp
push
arpl
xchg
clc
lods
imul
jbe
jb
inc
lret
mov
repnz
or
outsb
inc
dec
adc
xchg
out
pop
inc
sbb
sbb
pop
pop
stc
int3
fisttps
or
icebp
and
leave
push
push
or
sti
xchg
mov
mov
hlt
sbb
ret
sub
rorb
push
js
sbb
in
mov
xchg
or
in
cli
mov
or
popf
or
jno
test
adc
movsb
push
gs
mov
pop
cmp
xchg
cs
inc
leave
out
inc
pushf
js
cmpsl
orl
iret
imul
pop
pusha
mov
mov
repnz
fstpl
xor
inc
pushf
ljmp
std
stos
dec
scas
ja
test
inc
and
mov
imul
dec
push
sbb
add
xor
jg
enter
mov
sub
js
push
movsb
inc
jno
pushf
xchg
std
gs
pop
into
push
mov
arpl
or
ljmp
jmp
mov
flds
popf
int
jnp
mov
lock
aas
std
nop
cmc
xor
sbb
or
repnz
push
rolb
ja
sbb
aaa
movsb
xor
dec
iret
mov
fimuls
fcmovbe
imul
popa
lods
out
mov
xor
sub
xor
push
or
cmp
movsb
in
or
pop
pop
pop
jle
bound
popf
hlt
xor
pop
inc
ret
hlt
movsl
add
cmp
sbb
pop
icebp
dec
push
aam
mov
jbe
nop
pop
data16
aas
shlb
push
mov
jnp
xchg
and
sbb
call
xchg
xor
sahf
dec
or
faddl
jl
sbb
mov
pop
sar
les
rcl
mov
shrl
sub
add
ja
xchg
jp
inc
ret
pop
pop
insb
add
dec
subb
stos
mov
cli
lds
sub
mov
pop
push
jo
test
push
nop
adc
rcll
lret
pushw
dec
sbb
mov
stc
xchg
int
mov
adc
fcmovnb
cmpb
add
add
repz
cltd
mov
lea
cld
dec
scas
mov
jg
xchg
stos
push
imul
mov
xlat
mov
loop
push
mov
pusha
and
or
enter
rolb
jnp
movsb
jecxz
sub
mov
out
adc
dec
aam
jecxz
daa
loopne
fnstcw
xchg
inc
rclb
xor
and
repz
lock
mov
pop
repz
or
inc
inc
fcmovu
jne
maskmovq
adc
fadd
pop
push
mov
or
ror
adc
jecxz
add
mov
jge
sub
pop
lahf
adc
inc
rcrl
test
pop
lret
leave
cwtl
push
sub
call
xor
adc
pop
repz
mov
loope
jecxz
enter
pop
roll
dec
int
and
cwtl
mov
sbb
nop
icebp
rorl
out
xchg
xlat
sti
dec
adc
sub
adc
test
cmp
mov
adc
loope
pop
into
das
cld
insl
jns
rorl
jmp
or
push
add
lcall
xchg
cli
jecxz
ret
js
mov
shrb
jl
adc
scas
loope
fmull
xchg
rcr
repnz
movsb
xor
inc
xchg
or
sbb
addl
test
call
les
pop
xlat
rcr
xor
xchg
insb
pop
dec
dec
pop
inc
mov
mov
push
sbbb
pushf
fdivrl
and
test
fidivl
js
xor
cmp
data16
mov
adc
cmp
pop
fs
or
insl
loop
fmuls
in
jns
push
mov
cmpsl
push
dec
test
pushf
cmc
shll
cwtl
push
stc
xor
adc
xchg
and
mov
loope
movsl
mov
notl
sar
xor
mov
sub
mov
insl
jge
outsl
sti
mov
mov
stc
sbb
fbstp
add
fwait
test
or
lret
fidivs
fidivl
jmp
aam
xchg
add
imul
scas
pop
push
xchg
jnp
pop
xorb
or
fsub
adc
xor
lret
xor
xchg
xchg
popa
outsl
ret
shlb
push
je
arpl
push
repnz
loope
xor
and
jae
iret
es
or
mov
lahf
leave
test
jge
fisttpll
test
mov
in
dec
sti
lea
mov
xchg
xchg
xchg
or
jns
mov
subl
cmp
jle
ror
mov
push
stc
push
loopne
xchg
jne
xchg
ds
fsubs
jmp
mov
mov
test
xor
cmp
enter
bnd
mov
ss
or
jge
cmpsb
jl
fimull
jp
push
sti
sbb
notl
sbb
stos
jmpw
or
sbb
cmp
ja
insb
cmpsl
cwtl
add
jg
mov
cmc
pop
ret
aad
or
xorb
xchg
sub
cmp
fiaddl
or
pop
rorl
imul
mov
fbstp
dec
mov
xchg
std
dec
and
mov
aas
das
sub
insb
push
aad
and
xor
mov
addb
outsb
notl
sbb
popf
cmp
mov
inc
mov
mov
pushf
push
mov
aam
push
scas
and
push
adc
call
mov
push
sarb
push
xchg
inc
gs
push
rcrl
lea
inc
jp
xor
and
sbb
push
or
inc
cltd
mov
sub
sbb
addr16
add
mov
movsl
xchg
cmp
shrb
and
push
mov
cmp
lcall
push
test
push
and
pop
leave
jle
leave
jp
push
cmc
dec
inc
lods
push
push
je
push
je
and
lret
scas
or
in
lret
mov
int
sub
orb
sbb
sbb
pop
fdivr
sub
sub
out
push
ret
pop
push
push
and
sbb
jo
insb
decl
mov
xor
pop
pop
jne
and
js,pt
mov
mull
sbb
mov
outsb
nop
ja
pop
mov
xchg
ja
inc
scas
mov
popf
mov
enter
mov
push
inc
stc
enter
paddw
jg
sarb
out
add
jl
out
inc
outsb
jne
lock
mov
ss
mov
mov
ss
dec
sbb
jo
test
mov
mov
stc
or
xchg
add
in
into
cmpsl
pusha
punpckhwd
push
adc
jo
pop
dec
or
sbb
divb
cmc
xchg
popa
fsubs
sub
lock
push
test
xchg
ds
dec
pop
outsl
lahf
mov
sbb
push
ds
fbld
lds
shrb
iret
mov
sti
jo
aas
notl
fs
jge
scas
sbb
lds
lret
jo
mov
ffree
pop
cli
xor
loope
or
sub
inc
addr16
mov
in
dec
sub
int3
clc
sbb
mov
mov
push
mov
fsts
call
cmp
fisttps
iret
std
mov
hlt
xchg
dec
or
mov
lret
pop
mov
inc
lret
lcall
and
xor
xchg
ja
mov
cmp
or
mov
repnz
pop
pop
push
add
mov
repnz
pop
mov
mov
pop
shll
mov
cwtl
inc
insl
add
pushw
popa
in
mov
xchg
movsl
push
pop
dec
xchg
mov
xchg
test
std
jecxz
clc
fcmovb
scas
xchg
movsb
jae
insl
lds
jne
inc
jne
ret
stc
add
adc
mov
je
mov
mov
add
adc
xor
icebp
sub
pusha
cwtl
mov
cmp
jp
cmp
dec
cmpsb
and
and
fstps
sti
cmc
dec
mov
or
xor
sahf
es
je
sub
in
gs
das
fwait
repz
pushf
addr16
mov
mov
dec
xor
mov
shrb
mov
mov
lret
push
mov
pop
cld
dec
jnp
cmp
addb
pop
movsl
and
sarb
cmp
pop
mov
sbb
add
adc
mov
cmpsl
pop
pop
dec
lret
insb
stc
cmp
rclb
cmpsb
inc
pop
mov
add
rcr
cmpl
cs
in
jbe
scas
int3
pop
sahf
adcb
outsb
cmpl
dec
enter
ljmp
xchg
ja
pop
fcomi
sbb
push
mov
push
or
inc
and
sub
shlb
ret
outsb
aaa
jno
inc
xor
mov
rcl
testb
push
hlt
rcrl
pop
es
mov
jl
sub
iret
jl
shlb
fcoml
inc
in
mov
lcall
mov
loopne
cmp
push
inc
stc
nop
mov
jbe
pop
xchg
out
adc
fsubs
enter
sub
fcomi
aam
mov
push
insl
mov
mov
and
sbb
xchg
jo
jne
pop
xor
add
sbb
push
iret
dec
xchg
sbb
mov
jecxz
insb
andl
cmp
lret
mov
xor
pop
in
das
sub
sahf
mov
xor
jge
push
xchg
inc
popa
mov
test
pop
jg
dec
aam
sub
pop
push
es
or
fcomps
insl
ret
lock
out
aam
or
das
test
push
sbb
pop
gs
push
xor
push
outsb
add
cmp
into
lahf
addr16
scas
sbb
mov
xor
adc
xchg
call
push
into
call
dec
push
sub
dec
xchg
mov
das
scas
ja
fwait
out
fwait
xlat
nop
sbb
and
sub
cs
je
insl
adc
in
jge
xchg
or
and
xor
clc
jmp
vpmaxsw
xor
pop
push
nop
in
dec
std
shl
xchg
or
clc
test
das
dec
imul
xchg
call
insl
jns
mov
jns
pop
mov
shll
sbbb
shll
push
pop
mov
pop
int3
fdivl
fidivl
jge
int3
cmp
sub
jo,pt
aaa
loopne
xchg
std
push
bound
jns
add
addl
lret
jb
mov
inc
mov
mov
sbb
sub
sti
cli
push
mov
dec
pop
outsl
sbb
xchg
movsb
push
inc
jne
in
je
in
outsb
cmpsl
jb
push
cld
fisubl
sbb
xchg
and
adc
lret
insl
sub
mov
sbb
jbe
jmp
daa
pop
insl
jecxz
xchg
pop
pop
xor
or
jmp
shlb
cmc
mov
jg
and
add
jg
sarb
lret
insb
cmp
int3
repz
outsb
daa
pop
popf
ret
sbb
pop
repnz
fcoms
and
lret
pushf
stos
pop
pop
movsl
dec
fistpll
and
mov
int
jno
push
inc
aaa
imul
adc
pop
mov
mov
outsl
ljmp
cmp
pop
adc
push
xchg
lahf
lock
scas
and
scas
icebp
stos
cmc
jb
sbb
loopne
push
or
pushf
cmp
push
pop
imul
push
stos
xor
add
cld
pusha
cltd
jg
fnstcw
cmp
cmp
sub
jecxz
rorb
int3
test
cltd
enter
jae
xor
fwait
inc
je
fwait
int3
inc
mov
out
sbb
aad
mov
add
into
pop
xchg
insb
mov
movsl
cmpsl
mov
in
shl
jne
hlt
sarl
or
test
daa
paddusb
leave
neg
or
sbb
mul
mov
dec
in
mov
pop
xor
mov
xchg
jbe
test
sbbl
jno
mov
cmp
ljmp
adc
fistps
pop
loopne
clc
scas
jle
jl
lds
aam
dec
pop
pop
jl
stos
iret
adc
rol
lcall
or
insl
xor
inc
daa
pop
clc
movsl
adc
xchg
loop
jns
xor
not
pushf
pop
mov
cmp
xor
xor
add
fucom
rcl
jns
out
cmpsl
jle
das
lds
ret
bound
push
inc
sub
out
cmp
hlt
jecxz
xchg
imul
adc
sub
jmp
in
inc
cmpb
in
std
in
jl
aad
hlt
mov
xor
fmull
mov
jle
sbb
fldenv
outsb
pop
jl
adc
loop
dec
pop
dec
mov
pop
pop
jno
ds
test
jb
call
notb
in
xor
sub
out
sti
cld
dec
fidivl
lcall
xor
test
arpl
pop
sub
scas
clc
lret
std
dec
testb
lods
cmp
in
sahf
ss
sub
enter
xchg
dec
lds
icebp
jmp
push
imul
cmp
scas
dec
xor
fs
jl
jbe
popa
push
add
jb
lcall
leave
xor
daa
js
outsb
imul
fisubrs
adc
dec
lods
adc
mov
sub
mov
xor
jo
cmp
stc
fisttpll
sbb
rcll
or
outsb
mov
xor
dec
repnz
cmpl
fsubrp
scas
xor
rorl
inc
push
sub
xor
push
lods
push
cmpsb
xor
cli
mov
dec
xor
pushf
mov
std
pop
sub
loopne
out
jecxz
lods
mov
arpl
fnsave
mov
sub
shl
adc
cmc
sbb
shll
mov
mov
or
in
xchg
pusha
inc
pop
pop
mov
push
hlt
mov
mov
push
mov
pusha
cmp
inc
rol
loopne
mov
scas
movsb
cwtl
lahf
cmp
or
dec
adc
movsl
push
sti
xor
jb
xchg
cmpsb
lret
add
idivb
push
mov
test
repz
sbb
mov
mov
add
pop
fsub
test
scas
mov
mov
pop
pop
fucomp
mov
bound
xchg
loope
and
into
aad
cmpsl
mov
movsb
cld
add
out
sbb
cli
adc
gs
mov
clts
pcmpeqw
cmc
das
cmovae
sbb
sbb
icebp
addr16
cmp
cmp
xchg
sti
mov
inc
mov
ljmp
mov
push
mov
lahf
jno
dec
mov
test
cs
jb
lea
lea
je
jle
add
or
test
mov
push
sub
jne
lock
pop
mov
push
cwtl
jo
dec
fnstcw
mov
les
add
lock
lret
or
punpcklbw
shlb
dec
repz
xor
iret
cmp
and
xchg
jmp
jmp
jle
sub
sbb
xchg
xchg
adc
pop
shrb
push
shrl
push
inc
mov
inc
inc
imul
pusha
jmp
cli
xchg
inc
dec
mov
dec
xchg
cmp
add
jns
stc
sbbl
hlt
xchg
cmp
out
pop
push
mov
xor
xchg
ffree
mov
int
push
xchg
iret
mov
push
hlt
jae
pop
fisubrl
adc
push
stos
sti
lcall
add
iret
in
mov
inc
repz
add
mov
and
lret
pop
mov
and
mov
aas
cmc
pusha
push
cli
and
and
ret
lods
shl
rorl
cld
pop
cmp
lret
out
dec
lcall
mov
fdivrl
inc
pop
bound
aad
fnstcw
jl
ljmp
mov
lret
inc
pop
pop
test
nop
dec
mov
fadds
or
lahf
mov
imul
fidivrs
mov
adc
inc
shrl
cmp
jbe
roll
test
mov
shl
inc
jmp
adc
lock
punpckhwd
jbe
add
inc
loop
inc
lcall
ja
mov
sub
mov
push
stc
cmp
repz
dec
aam
xchg
dec
pop
dec
push
ficompl
sub
clc
mov
mov
clc
jge
jno
test
dec
xor
mov
shrl
jae
cmc
in
shrb
sbb
xor
das
xor
or
jecxz
mov
shll
aad
roll
jbe
push
jge
cmp
jo
sub
and
dec
jle
mov
pop
imulb
icebp
xor
jae
es
add
nop
cmp
leave
testl
and
popa
cmp
test
push
lret
insb
ljmp
mov
and
mov
jo
lods
cmp
bound
outsb
pop
mov
push
xor
push
shll
fmul
pusha
and
aaa
ret
nop
test
mulb
cmp
xor
sar
sub
dec
cwtl
mov
aad
addr16
xor
jae
aaa
pushf
xor
and
test
or
sbb
test
jo
sub
adc
xchg
lds
jl
adc
mov
loope
xor
inc
in
test
repz
xorl
dec
ljmp
stc
stos
test
in
inc
les
adc
mov
loop
jo
and
cmp
xor
sahf
inc
movsb
adc
jb
xchg
xor
or
rorb
cmp
es
sbb
cltd
inc
add
jns
mov
test
adc
scas
rorl
ds
mov
push
imul
es
sti
or
cmc
sbb
sub
xchg
aaa
not
adc
rcr
pop
ja
mov
aad
mov
mov
cld
ret
jne
fcompl
pop
xor
imul
aas
lock
sbbb
xlat
test
dec
add
stc
jmp
pcmpeqd
aam
ficomps
in
xor
cmp
xor
inc
mov
cmp
xorb
push
pop
js
pop
jne
adc
movsb
sbb
sbb
sub
lahf
aad
or
ljmp
pop
movsb
push
dec
mov
sbb
out
outsl
in
pushl
mov
jle
test
or
aas
mov
push
or
xor
push
iret
xor
loopne
setne
sub
mov
add
inc
cwtl
jmp
jge
jge
xchg
into
push
stos
ret
aaa
xchg
cmp
push
mov
repz
fwait
or
inc
shll
pusha
inc
xchg
mov
jmp
push
push
aas
mov
repz
fbstp
dec
mov
call
iret
hlt
fwait
idivl
fidivrs
dec
ja
mov
int
mov
adc
js
orb
jnp
mov
cmpsb
in
push
or
cwtl
out
xchg
mov
mov
pop
mov
fcoms
sbb
sub
jns
nop
pop
adcb
test
add
pushf
cmp
int
mov
cli
lods
out
mov
and
ret
insb
fbld
mov
mov
dec
dec
jnp
adc
jl
jg
test
andb
xor
dec
sub
add
test
sbb
rcrl
into
mov
pop
sbb
sti
cmpl
fidivrs
mov
dec
movl
jmp
jmp
ja
ror
jae,pt
add
stos
aas
out
in
xchg
insl
add
paddsb
ret
shll
pop
int3
test
call
insb
into
scas
mov
mov
jo
rclb
lods
jecxz
fdivrl
shrb
or
leave
fdivs
ja
sti
fsubr
add
or
movsb
je
popa
mov
call
lahf
setbe
cmp
daa
dec
cmp
xor
rorl
inc
into
push
xor
mov
out
dec
push
addr16
movsl
pusha
push
into
mov
cld
ss
xchg
pop
add
lahf
push
push
out
cmp
popa
pop
pop
test
cmp
push
and
ret
fisubs
pop
test
mov
xchg
add
subl
int
cld
cwtl
popf
jb
jne
push
ficoms
inc
fstps
mov
mov
cltd
sti
out
lcall
loopne
mov
icebp
shll
push
ss
jle
addl
imul
xlat
add
push
cwtl
cmc
xor
cld
test
sbb
cmp
pusha
leave
arpl
jge
test
mov
dec
cmc
mov
arpl
pop
mov
shll
negb
mov
and
cmp
js
psrlw
enter
mov
jns
adc
dec
addl
cltd
mov
mov
addr16
sti
imul
mov
pop
subb
push
adc
sbb
and
mov
fidivs
icebp
inc
mov
out
jns
test
sub
push
stos
mov
pop
int3
or
lcall
add
cmp
or
inc
push
out
xor
addr16
mov
scas
fstps
sub
out
nop
xorl
xchg
push
outsb
ret
sbb
cmp
or
test
fisttps
inc
loop
dec
cltd
outsb
jno
xchg
sti
inc
imul
jae
push
inc
or
ret
and
fistpl
add
pop
out
repz
jle
jo
mov
movsb
mov
push
loop
mov
subl
jp
daa
mov
dec
mov
clc
test
dec
loope
dec
mov
repnz
xor
mov
mov
sub
addb
faddl
cpuid
push
adc
inc
in
sub
loopne
ss
in
in
mov
cmp
sub
rorb
cmpsl
push
and
mov
sub
movsl
mov
sahf
stc
adc
inc
loope
sub
cs
lret
cmp
bound
jno
mov
sbb
jg
lods
sbb
insl
test
lahf
clc
lcall
adc
outsl
pop
fldenv
call
dec
cmp
pop
fisubs
shl
loope
dec
dec
fwait
jge
bound
cltd
movsl
dec
fstps
push
pop
or
out
mov
fwait
jge
stos
lea
aaa
mov
cs
xchg
cmc
test
inc
mov
xchg
iret
lock
negb
xchg
add
mov
xor
inc
mov
xor
popa
dec
xchg
dec
ja
sbb
mov
inc
push
je
daa
leave
in
scas
jl
inc
loope
popa
mov
push
loope
sub
mov
ret
jle
mov
jbe
adc
mov
cs
push
sti
loop
add
sbb
adc
cltd
out
fcomps
jg
pop
jg
mov
mov
sahf
cli
popa
loop
outsl
adc
mov
out
jle
orb
les
jae
jge
pop
in
ret
cli
mov
push
sbb
cmp
mov
cmpl
sub
imul
ss
adc
add
or
pop
inc
xchg
imul
pop
shl
dec
int3
popf
dec
inc
cmp
lcall
push
in
mov
es
inc
mov
pop
cmp
jo
stos
push
in
dec
mov
dec
fs
jnp
subl
inc
sbb
cmc
into
call
jecxz
and
push
mov
psrld
mov
jnp
mov
loope
subl
xor
pop
iret
cmpsl
sti
sarl
push
call
call
and
or
xor
pop
sbb
pop
mov
inc
test
test
lret
out
sbb
dec
rolb
and
cmp
cmpb
jg
dec
xor
loopne
repnz
xchg
sbb
push
lea
xor
dec
pushf
mov
push
push
rcrb
add
xor
jb
loopne
daa
mov
in
and
or
mov
jno
sbb
jae
pop
mov
in
mov
adc
shl
loopne
mov
arpl
xor
loopne
shll
leave
orb
dec
sub
sbb
push
and
je
mov
and
push
cmp
scas
shll
mov
jecxz
add
dec
pop
push
push
mov
sub
xchg
sbb
add
inc
lock
mov
ret
push
jnp
push
mov
push
jp
aas
hlt
notl
nop
pop
ret
jl
imul
lret
adc
adc
adc
jns
repz
bound
out
mov
mov
sub
movsl
xor
sarb
and
repz
iret
jno
es
dec
jno
and
cmpsl
lret
push
ja
dec
sub
xchg
jp
out
mov
inc
dec
test
fmul
push
cmpsl
sub
imul
sbb
xchg
dec
push
dec
jo
ret
ficoml
cmpsl
imul
pop
lods
xchg
dec
pop
repnz
pop
fisubrl
mov
int3
lret
pop
and
pop
sti
inc
push
scas
or
mov
repnz
es
stc
cwtl
mov
cmpsb
rcr
jns
add
andl
je
adc
les
fldl
mov
xor
mov
xchg
xchg
adc
insb
xchg
inc
out
aaa
in
lds
loopne
inc
jb
xor
lahf
ljmp
or
mov
cmp
stc
or
mov
fldt
mov
sbb
divb
jmp
cmp
fiadds
addr16
iret
lds
std
sbb
or
push
and
outsb
sub
sahf
test
xor
ss
mov
repz
xor
mov
scas
dec
pop
mov
dec
cmp
jbe
adc
rolb
ljmp
out
test
mov
sbb
arpl
addb
sub
cmpsb
shll
shlb
test
adc
fdivl
jp
jp
or
xchg
movsb
imul
sub
inc
jl
call
inc
stos
mov
pop
leave
jl
cmp
enter
sbb
scas
xor
or
fidivrs
cmpsl
je
xchg
pop
in
idivl
ljmp
push
pop
mov
pop
pop
cmp
imul
add
xchg
xor
aad
and
enter
push
or
out
fsubrs
sbb
pop
loopne
test
ret
xor
mov
xchg
mov
test
xchg
faddp
js
test
jae
data16
ja
leave
jno
pop
mov
inc
jmp
sti
push
lret
push
cmp
aad
xchg
aaa
add
test
shll
xor
sbb
sbb
int3
jmp
iret
sbb
and
adc
mov
enter
in
sahf
mov
pop
inc
push
pop
push
or
xchg
in
sbb
mov
ss
aas
jmp
xor
js
stos
mov
in
mov
lods
sub
push
fisubl
fimuls
mov
push
imull
pop
sar
fyl2xp1
fistpll
rclb
lret
jl
lret
cmp
scas
push
push
add
add
cltd
aam
arpl
rcl
enter
roll
jmp
call
push
stc
xlat
mov
movsl
xchg
sbb
in
xchg
or
data16
mov
mov
xchg
mov
test
mull
cmpsl
ret
inc
shll
lods
xchg
daa
xchg
shll
iret
mov
loop
imul
dec
mov
sub
rcrl
loop
jb
adc
adc
inc
repz
lea
data16
or
or
sub
jg
sub
jnp
out
mov
mov
push
adc
test
sub
shlb
xor
loope
imul
add
xchg
int
outsb
out
mov
jbe
xchg
mov
jle
xlat
xor
adc
iret
pushf
pusha
dec
aam
pushf
ficoml
fwait
adc
push
loopne
push
shrl
lea
stc
in
fnsave
xor
das
mov
mov
dec
pop
adc
mov
lods
mov
dec
mov
repnz
and
dec
inc
in
jg
sub
mov
in
int
mov
inc
xchg
inc
dec
gs
sbb
outsb
pushw
repz
adc
jg
mov
mov
pop
xor
push
xor
movsb
hlt
sbb
jb
xchg
push
addr16
data16
aad
push
pop
pop
clc
idivb
pop
popf
loope
in
mov
pusha
mov
bound
cmpsl
cs
jge
rcrb
mov
push
or
aad
rolb
jl
jle
cmp
add
push
icebp
aam
xchg
xchg
fdivs
jge
arpl
mov
jecxz
aaa
sti
sti
dec
pop
mov
xor
mov
aad
pop
cmp
fwait
sbb
mov
jnp
or
add
loop
nop
add
inc
adc
rcl
push
imul
inc
mov
mov
imul
and
stc
inc
mov
adc
jecxz
pop
mov
push
cltd
push
leave
dec
gs
std
in
rorb
jbe
add
adcb
into
pop
mov
mov
shl
mov
nop
push
mov
mov
std
pop
shlb
adcb
xchg
fisubl
xor
sub
adc
inc
adc
pushf
push
xchg
mov
and
or
jo
outsb
push
lds
cli
adc
xchg
mov
rcrb
cwtl
xor
daa
xor
or
popa
dec
xchg
sub
push
push
aad
mov
pop
test
enter
bound
jo
fstl
insb
ljmp
mov
xor
pop
xchg
pusha
ficoml
in
sub
dec
fiadds
pop
adc
push
stos
mov
pop
push
mov
cmpl
inc
jb
imul
lcall
aaa
pop
shrl
pushf
adc
outsb
jecxz
push
sub
aas
or
out
jns
sti
pop
hlt
pop
mov
mov
inc
jl
pop
mov
les
mov
adc
sbb
cmc
lea
es
xor
mov
adcb
mov
mov
in
ss
jns
cmp
and
push
mov
das
mov
pop
add
or
fldenv
push
loope
int3
imul
fcomps
dec
pop
outsl
jo
in
imul
notb
out
sti
popa
fs
ds
sbb
pusha
cmp
fwait
xor
cmpsl
dec
mov
xchg
aad
mov
lret
imul
inc
cmpsl
mov
push
xchg
pop
movsl
jecxz
cli
test
mov
nop
ja
inc
sub
popf
push
mov
cmp
insl
and
mov
push
cli
sbb
mov
sbb
push
outsb
inc
fldt
mov
jg
lock
and
add
movsb
movsl
into
in
subb
aam
nop
std
mov
cmpsb
ret
xor
les
cltd
cs
dec
sub
mov
jne
jp
arpl
imul
sub
je
push
dec
push
call
pusha
in
mov
push
aam
cmp
popa
pop
mov
jno
pop
sub
lret
cmp
int3
mov
hlt
pop
repz
and
sarb
pop
rolb
rorl
inc
cwtl
rorl
inc
jp
and
add
sbb
aas
ret
stos
in
xor
movsb
stos
push
inc
scas
outsb
xor
ret
movsl
es
fiaddl
outsb
add
mov
subl
aad
cmc
add
mov
pop
xchg
sbb
inc
dec
add
and
rcll
inc
out
jae
xor
or
mov
imul
ret
mov
mov
adc
pop
out
into
ret
rcrb
sbb
ds
mov
push
pop
aad
sub
in
orl
cwtl
icebp
dec
pop
aaa
dec
xchg
mov
sahf
push
lahf
dec
sub
cltd
std
ds
cmp
addr16
sbb
cmp
test
jg
jo
mov
pop
shlb
pop
mov
fisttpl
test
loope
jne
pusha
and
lds
pushf
mov
aaa
cltd
pop
aam
lea
stc
dec
sub
cwtl
sbb
aad
in
dec
rclb
cmp
loopne
jb
sub
test
in
mov
and
add
jo
dec
adc
stc
test
pop
mov
repz
xchg
sub
out
inc
jo
mov
pop
jmp
test
ss
inc
loop
or
or
out
stos
push
sbb
pusha
imul
cmp
in
xor
add
jne
cmp
outsb
inc
fistl
mov
jb
cwtl
cmc
pop
addb
outsb
jle
and
dec
inc
mov
sub
xchg
addb
idivb
das
je
repnz
cmp
inc
fwait
addb
xchg
xlat
hlt
scas
mov
int3
repnz
jns
scas
mov
xchg
cmpsb
outsb
xorl
jno
call
inc
ret
loope
mov
or
frstor
repz
sbb
sub
or
mov
out
ss
stos
adc
jbe
std
sbb
cmp
jp
pop
addr16
dec
insb
out
fs
cmp
shll
aaa
scas
dec
shll
mov
mov
imul
jb
shrb
daa
jl
mov
sar
jno
xlat
aas
and
or
out
and
ret
imul
mov
insb
cmp
mov
xchg
testb
fadds
jp
mov
xchg
cld
and
cmp
jnp
and
imul
dec
jge
inc
jb
xor
ror
or
mov
xchg
or
mov
cwtl
ljmp
fisubs
aam
je
fwait
js
push
loope
rclb
dec
bound
xchg
lds
push
movsb
mov
aaa
test
bound
repz
jp
imul
add
popf
pmuludq
inc
jge
sub
xchg
das
aas
mov
rcl
mov
in
mov
into
pushf
sbb
and
cmc
ljmp
mov
lret
xchg
or
sub
adc
loop
xchg
in
pop
sti
ds
or
xchg
ljmp
shl
in
dec
fidivrs
aad
fdivrl
aad
jbe
jbe
loop
add
push
fcmove
daa
ficoml
pop
daa
and
aas
cmp
dec
push
fwait
imul
dec
mov
push
sbb
pop
cs
fmuls
icebp
fdiv
test
sbb
jns
jnp
jno
loope
lds
imulb
clc
or
or
std
pusha
pushf
loope
add
outsl
sbb
sub
daa
or
sub
jnp
into
push
lea
push
das
sbb
add
sbb
loopne
addl
add
jne
mov
imul
idivl
cmp
xchg
ljmp
fmul
add
xor
sbb
lcall
fbld
in
add
lret
fwait
xchg
shll
push
or
dec
lret
add
fstpl
orl
aaa
mov
jp
pop
enter
dec
call
std
jae
cli
call
mov
es
mov
mov
in
gs
add
dec
fsubrs
pop
push
movsb
shrl
sub
jb
xchg
jnp
fsubr
leave
cltd
pop
inc
cmc
imul
imul
mov
pop
rcll
cs
pop
dec
fnstenv
ds
nop
aam
and
loopne
xchg
repz
lods
vprotq
push
pop
xchg
pop
or
lods
insb
mov
stos
call
rorb
mov
mov
mov
pusha
add
lods
mov
sub
xor
movsl
jno
push
out
dec
mov
mov
xchg
loope
inc
es
mov
mov
mov
std
insb
fucom
cmc
pop
out
add
ljmp
daa
inc
jne
call
repz
adc
hlt
dec
dec
stos
jp
dec
sub
pop
addr16
rclw
test
in
enter
fsubl
sahf
out
mov
cmp
mov
jge
inc
jg
aad
insl
push
jmp
repnz
das
int3
pusha
mov
jl
das
outsl
and
mov
rolb
imul
mov
inc
mov
push
dec
mov
int3
std
and
clc
xchg
out
mov
insl
in
xor
push
outsb
mov
loopne
mov
mov
pop
insb
and
movsl
inc
es
js
jne
imul
cwtl
setle
ret
cmp
scas
and
dec
aam
in
lods
xor
in
and
dec
in
mov
add
sub
inc
xchg
cmp
call
out
add
mov
adc
dec
jl
negl
sbb
inc
mov
test
sbb
rcll
pop
add
dec
inc
cltd
cmpsb
sarb
inc
enter
data16
mov
inc
int
mov
inc
jnp
xor
mov
xchg
and
wbinvd
dec
addr16
fcom
jne
or
clc
add
jle
imul
jge
fnsave
dec
jb
cmpsb
cmp
add
jmp
and
in
mov
fmul
sub
clc
xor
lods
jg
xchg
pop
popa
nop
mov
mov
mov
lcall
mov
add
jb
mov
js
mov
enter
sub
add
ss
pop
call
jnp
mov
mov
mov
lds
mov
cld
pop
fs
lock
xchg
pop
add
in
rclb
jo
out
cmp
lret
sub
aad
sub
in
aam
gs
pop
sahf
adc
std
gs
jecxz
pop
sub
nop
gs
lret
inc
mov
mov
das
arpl
and
mov
icebp
push
inc
sbb
dec
push
adc
int
push
push
mul
test
mov
fs
aam
mov
mov
loop,pt
mov
adc
pop
and
sbb
lea
add
ret
adc
cwtl
test
stc
dec
mov
repnz
mov
jnp
fs
sbb
push
decb
js
push
cmp
sub
nop
dec
jle
lcall
pusha
jle
in
adc
pop
push
xchg
sub
mov
int3
pusha
push
fnsave
sbb
pop
xchg
inc
adc
stc
adc
dec
scas
lods
lods
push
test
out
push
insb
jo
dec
scas
xchg
aas
stos
lcall
sbb
mov
cmpsb
ret
mov
mov
mov
lcall
mov
pop
jns
leave
jo
repnz
xchg
sti
mov
ss
jb
cmp
push
orb
loope
imul
out
adc
xchg
mov
pop
cmp
scas
in
add
xchg
movb
mov
sbb
scas
shr
test
cltd
xor
cmpsl
add
jns
js
xlat
mov
jno
xchg
xor
and
jae
cli
cwtl
jmp
in
sahf
jae
push
inc
out
lret
pushf
cmpsb
testb
mov
pop
out
in
xchg
mov
mov
punpckldq
enter
xor
test
hlt
pushf
push
ficoms
cvtdq2ps
and
rorb
mov
insl
aaa
cmp
addr16
rcll
inc
sub
sbb
sub
cmp
dec
inc
xchg
sti
fwait
loope
fldz
out
jmp
loopne
mov
scas
addb
popa
sub
mov
movsl
dec
test
push
xchg
and
mov
mov
enter
mov
jno
xlat
fs
jbe
pushf
sub
lds
push
mov
xlat
jno
cwtl
mov
cmpsl
dec
out
mov
dec
test
ss
cmp
cwtl
dec
cmpsl
sti
fistpll
je
arpl
test
js
mov
jmp
add
out
mov
jmp
subl
shll
sbb
cmpsb
jge
stc
aaa
popa
push
imulb
push
xor
pop
ficoms
jb
xlat
in
aad
mov
cmp
mov
ficoml
sbb
in
test
jmp
repnz
xchg
repnz
orl
std
push
mov
adc
mov
loope
push
rcll
repz
push
in
lahf
xchg
xchg
jl
jae
push
mov
xchg
lock
scas
adc
aam
xchg
push
add
js
jge
lar
jge
imul
sbb
jp
imul
movsb
ljmp
mov
leave
in
mov
mov
adc
shl
popf
sbb
fwait
sbb
push
pop
dec
adc
fucomp
out
sbb
sahf
cmpl
push
mov
push
mov
and
and
push
mov
imul
mov
mov
stos
jbe
pop
fisubs
or
dec
add
bound
orb
ffree
fistps
add
pushf
dec
mov
mov
imul
and
dec
or
cmp
xor
fidivs
mov
aad
movsb
sbb
aam
pextrw
and
add
push
xchg
inc
jno
lods
mov
or
cld
and
daa
lods
cmp
addr16
dec
imulb
xchg
sub
jae
sbb
adc
xor
rorb
fsubr
lock
xor
pop
aas
pop
addr16
stos
sti
jg
jecxz
scas
in
cmp
mov
int
mov
pop
push
xor
pop
xor
sbb
jnp
in
dec
fidivrs
sub
inc
pop
out
scas
cmp
outsl
pusha
push
fucomip
les
add
vmread
mov
pusha
sbb
push
insb
lret
cmpsb
adc
xor
movsl
and
in
das
jge
pop
mov
test
fimuls
fidivrs
cltd
add
cld
daa
adc
loop
adc
xchg
das
adc
rcr
idiv
lret
loop
jb
or
test
loop
pop
sbb
push
sbb
gs
repnz
test
jecxz
inc
add
jmp
inc
push
jns
xchg
jo
jae
dec
add
lock
dec
push
mov
arpl
push
in
rcl
xchg
inc
pop
lahf
mov
sbb
mov
lock
test
sub
sub
sub
xchg
mov
cwtl
jns
insl
mov
insl
jns
ja
daa
push
loope
dec
mov
add
movq
push
daa
stc
mov
hlt
lods
sbb
mov
pop
jle
loopne
cmp
call
out
cmp
mov
out
pop
xchg
sub
aam
test
mov
int
popa
sub
xor
movsb
mov
addl
ss
jnp
inc
adcb
push
jmp
lock
out
or
add
lods
pop
and
adc
sub
inc
sahf
mov
mov
aas
mov
test
or
pop
jo
insb
xchg
xor
jae
fisttps
pop
outsb
push
leave
jp
mov
adc
or
cmp
das
cs
or
jae
add
jge
pushf
aaa
mov
dec
aad
pop
xlat
mov
xorb
lock
sub
aad
jecxz,pn
xor
cmp
mov
enter
sbb
push
in
xor
lods
stos
test
cmp
into
das
in
les
mov
mov
mov
pop
jbe
inc
mov
out
ret
mov
popa
pop
lahf
pop
scas
cmp
out
or
mov
and
cmpsl
mov
mov
mov
and
sbb
arpl
mov
add
ffree
and
xchg
xor
cmp
jb
xlat
repnz
xor
pop
rolb
cmc
jl
enter
jo
mov
xor
cld
sbb
sbb
push
out
mov
jmp
mov
addr16
cmpsl
mov
mov
or
mov
sbb
in
mov
insb
loope
adc
out
and
loop
sub
adc
cmp
cmpsb
push
orb
jp
add
push
sbb
mov
cmp
lcall
mov
adc
or
fdivrl
fldl
insb
inc
adc
sbb
mov
pusha
js
fucomp
sub
shrb
shll
in
pop
inc
lcall
sti
out
inc
dec
or
shlb
dec
out
test
stc
imul
pusha
icebp
in
sar
or
in
pop
jecxz
inc
movsb
adc
mov
sub
or
ja
and
cmp
stc
xor
sub
lods
jne
pushf
lret
dec
mov
xchg
or
inc
and
mov
in
mov
dec
divl
and
push
ds
dec
faddp
sub
mov
div
mov
outsl
dec
mov
test
jae
dec
xor
pop
cwtl
clc
push
mov
jmp
es
enter
out
push
mov
and
mov
stos
int3
mov
test
xor
je
or
inc
inc
xlat
addr16
data16
jbe
repz
push
ficoml
lds
jecxz
add
fistpl
mov
testb
pushf
adc
shrb
andb
mov
xor
pop
pop
ror
lods
xor
xor
pop
and
aas
mov
pop
sysexit
fnsave
inc
inc
das
pop
imul
dec
jne
push
cmpsl
fdivs
mov
test
test
jbe
mov
push
and
shll
std
inc
push
enter
mov
inc
bt
mov
adc
sub
test
andb
push
mov
repnz
sub
or
cmp
ret
in
adc
and
pop
mov
lods
sbb
sub
in
mov
movd
lcall
call
or
cs
xor
pop
adcl
mov
jns
jbe
push
adc
xor
cmp
cmp
sub
lahf
pushf
push
mov
ljmp
popl
or
gs
test
jno
fcomps
add
and
xlat
shrl
test
repz
adc
dec
cmp
leave
sub
inc
cld
adc
call
int3
test
push
test
add
mov
xchg
insl
adc
pop
popa
stos
stos
mov
or
pop
sbb
into
add
icebp
sti
pusha
ret
int3
adc
dec
and
out
sub
jne
pop
mov
mov
test
loop
leave
mov
dec
adc
add
cmp
mov
xor
pop
inc
push
aas
jae
inc
jl
pop
shrb
pop
xchg
dec
int3
rclb
inc
lahf
xchg
mov
mov
outsl
xchg
mov
pop
push
icebp
push
out
jo,pt
sub
push
divl
and
mov
fbld
add
pop
rolb
int3
loopw
mov
and
icebp
in
sub
lret
in
adc
mov
mov
out
adc
cmpsl
mov
stos
repnz
sbb
lea
pop
setns
xor
sub
ret
jnp
jne
pop
jns
adc
pop
dec
lock
jecxz
mov
stc
and
push
fsubs
das
xchg
nop
jo
pop
or
movsl
jl
pop
xor
mov
popf
pop
daa
aam
rclb
xlat
hlt
fcomps
adc
mov
mov
push
loop
lock
xchg
xchg
mov
lock
test
fs
xor
daa
imul
mov
push
inc
cmp
fs
call
filds
xchg
jne
mov
dec
mov
inc
loope
scas
cmp
push
mov
sarl
sub
ss
inc
out
jg
xlat
inc
jmp
mov
popf
bnd
inc
jb
mov
mov
les
scas
add
push
fs
cmpsl
dec
ret
jge
mov
loopne
ret
lret
inc
sub
jnp
int3
jbe
jb
pop
jo
sbb
out
cli
sahf
es
rolb
dec
xchg
cltd
xchg
mov
aaa
and
xlat
loopne
mov
mov
sbb
test
fs
stos
leave
rolb
pop
rcrb
lea
push
mov
and
mov
add
add
jns
or
cmpsl
outsb
popa
das
and
lods
aad
jp
sub
xchg
jb
sbb
sti
ret
pop
testl
jae
mov
jno
imul
cmp
push
pop
jle
xchg
ljmp
popa
sahf
pop
punpckhwd
sub
icebp
pop
cwtl
xchg
or
fidivl
clc
out
in
xchg
xchg
cmp
sub
clc
jp
push
mov
scas
inc
data16
mov
jne
mov
xchg
pop
andb
lock
call
mov
cs
cmc
xchg
in
jg
or
add
lock
xor
jns
mov
push
dec
mov
mov
inc
sbb
fldt
sbb
js
shll
repz
sub
fstpt
loop
cmp
addl
inc
push
mov
icebp
mov
call
int
lahf
inc
sarl
into
pop
mov
mov
sbb
jmp
int3
or
in
ds
and
and
call
andb
xchg
fnsave
in
in
jecxz
jns,pn
hlt
cmpsl
out
adc
rorl
ja
inc
pop
push
gs
cmp
mov
add
ja
sti
cmp
lods
aas
xor
xchg
jns
xor
cmpb
sahf
add
bound
mov
test
pop
inc
add
ss
push
jmp
mov
mov
movsb
mov
or
sbb
nop
sub
mov
mov
stc
inc
orb
shlb
adc
push
stc
fmul
out
test
std
xchg
inc
or
ja
mov
int3
add
cs
fmul
les
fcoml
cmp
xchg
scas
movsl
cmp
mov
fisttps
in
pushf
xchg
lret
add
jnp
pop
in
mov
and
sahf
test
sub
cmp
loopne
xchg
out
inc
inc
pushf
repnz
sbb
subl
xchg
jo
movb
test
inc
cld
or
mov
mov
cmpsb
test
jb
leave
mov
ror
ljmp
add
sahf
jmp
jbe
or
push
andb
testl
cmc
cmp
ret
inc
lret
fwait
mov
dec
sti
sub
imul
fildl
add
jmp
push
xor
popa
jns
leave
imul
pop
shr
or
push
dec
pop
dec
pop
shrb
ss
add
or
cmpsb
leave
jnp
loopne
pushf
ficoms
adc
jecxz
sbb
mov
imul
dec
in
adc
or
inc
xor
les
ficompl
sbb
lods
pop
enter
in
or
mov
cmpl
mov
xchg
cwtl
pop
jno
jmp
adc
adc
pop
fdivrl
xor
cmp
fmull
clc
int
mov
cmpsl
mov
adc
outsl
lds
cmp
pop
pop
clc
pop
pop
in
sbbl
lahf
in
js
shl
xor
inc
mov
adc
stc
pop
ficomps
cmpsb
lahf
test
xor
jp
or
sbb
icebp
imul
ds
xchg
xchg
icebp
daa
and
stos
add
ljmp
add
mov
and
icebp
aad
daa
daa
mov
out
adc
mov
cmc
sbb
int3
mov
movsb
adc
adc
dec
ljmp
scas
and
mov
enter
sub
pop
iret
ds
sahf
lock
cmp
mov
sub
movsl
ja
dec
mov
pop
jns
xchg
adcb
xor
das
daa
lret
xchg
ljmp
mov
push
xchg
pop
test
not
xor
loopne
adc
fidivs
scas
repnz
loopne
dec
xchg
pop
pop
push
xor
imul
and
inc
cltd
addr16
sub
std
mov
fistl
adc
push
xchg
fs
repz
arpl
sbb
iret
or
mov
cmp
lret
loope
push
inc
sbb
aas
std
mov
sbb
dec
xchg
mov
cli
pop
xor
push
imul
xchg
pop
divl
sub
in
mov
jne
imul
mov
cltd
inc
lcall
mov
mov
and
lods
sbb
xchg
and
enter
out
scas
or
inc
jae
imul
das
ret
lahf
jl
lcall
pop
sbb
rcrb
in
lahf
push
lea
pop
adc
outsb
xchg
push
imul
fs
in
pop
addl
lea
dec
shrb
test
das
nop
mov
pop
andb
jmp
sub
bound
adc
and
ja
jo
push
std
subl
push
cmpsb
insl
mov
jno
xchg
mov
lcall
add
jb
addr16
mov
arpl
cmp
insb
cs
mov
repz
mov
pop
repz
sub
ret
pop
pop
jbe
int3
fbld
push
or
cmp
cs
sub
or
in
cmpsb
sti
sbb
ret
or
add
adc
fldcw
sub
pop
xchg
jecxz
sbb
add
fcompl
cmp
dec
jp
sub
out
out
mov
xor
cmp
rclb
mov
xor
dec
fsub
push
fwait
cmc
sbb
add
and
mov
and
out
inc
push
xor
cmp
adc
es
pop
xchg
xchg
popa
push
cmpsb
into
ljmp
cld
mov
icebp
in
mov
test
subl
push
or
xor
or
jo
add
in
fmul
out
lds
push
cmpsb
nop
xor
rorb
cmp
ja
mov
sbb
imul
lret
outsb
jns
and
ficompl
test
lret
int
inc
push
sbb
es
fs
ret
leave
outsl
icebp
notl
shufps
sbb
mov
or
icebp
mov
push
inc
daa
loope
arpl
fwait
push
outsl
add
loop
fld
xor
ljmp
lahf
xor
sar
push
test
addr16
mov
and
in
fmuls
xor
test
xor
ret
lret
shr
shlb
mov
sub
pop
imul
das
push
inc
out
sbb
jg
imul
mov
cmpsl
add
mov
lahf
push
push
pop
mov
cld
jg
xchg
inc
mov
sbb
or
sub
cmp
cmpsl
lahf
adc
adc
add
jge
iret
scas
push
mov
sbb
cs
les
sub
ds
jp
adc
xor
and
inc
dec
mov
ss
aas
add
adc
jae
repnz
data16
fisubrl
outsb
leave
push
cmp
adc
cmp
ljmp
xor
jae
or
sub
adc
xor
dec
lock
add
mov
and
xor
inc
mov
pop
push
push
insb
sahf
xchg
cwtl
mov
mov
add
ljmp
cmc
jge
daa
adc
rolb
mov
fcompl
ret
fadds
xchg
test
mov
cmp
imul
add
dec
jo
mov
cmp
jecxz
xchg
sub
js
repz
nop
jae
mov
jae
add
sub
xor
fwait
hlt
add
mov
and
mov
fmull
jbe
fnstsw
jne
cltd
dec
xchg
mov
xor
dec
fistps
loope
pop
fimuls
adc
xchg
pop
sbb
lods
add
pop
and
ja
xor
cmp
pop
sub
and
call
push
sub
mov
int3
cs
notl
mov
enter
cmp
lahf
stos
sbb
das
sbb
push
xchg
hlt
movsb
cmpsl
cmp
jb
xchg
lret
lahf
or
add
add
cmpsb
jne
mov
and
sub
fisttpll
mov
scas
xor
push
or
ficoms
jg
clc
sub
mov
int3
dec
out
jl
dec
inc
push
mov
aam
ret
push
lcall
mov
adc
cmp
xor
aas
outsb
pop
int
add
testb
pop
inc
out
push
pop
clc
icebp
pop
or
jl
sbb
test
inc
cmp
popa
pop
sbb
inc
mov
xchg
cmp
cmp
adc
mov
sbb
je
inc
inc
and
lret
into
dec
dec
cmpsb
aas
mov
fnstenv
fmuls
push
mov
mov
in
sub
inc
xchg
movl
pop
sub
sbb
add
clc
sub
or
cmp
in
dec
scas
fwait
scas
sub
dec
int
stc
je
push
loop
mov
insb
lret
les
pusha
in
int
jns
sbb
jle
mov
addb
push
dec
imul
pop
ljmp
adc
es
in
inc
pop
jecxz
push
scas
dec
ret
das
jno
nop
mov
sbb
pop
cmp
mov
loopne
cmp
xchg
fwait
push
dec
loop
test
ror
and
push
sbb
sub
push
ja
sti
push
jo
cwtl
inc
movsl
movsb
lret
dec
push
out
out
mov
outsl
cmp
sbb
or
jg
idivb
lret
gs
jo
out
subl
cmp
sbb
call
int3
not
addr16
fwait
push
fcmovne
inc
lcall
inc
xlat
add
sub
out
fcomps
mov
imul
fadds
cmp
iret
xlat
xchg
mov
sub
aaa
aad
xchg
scas
jns
mov
test
jmp
out
or
testl
xor
mov
mov
push
add
loopne
add
jae
inc
int3
loopne
lcall
lcall
sahf
test
sub
cli
cmc
sbb
loop
fildll
push
sbb
mov
sub
mov
jge
leave
mov
push
jle
les
xchg
push
push
lret
pop
mov
pop
inc
mov
ret
leave
and
cmp
push
aad
mov
adc
pop
scas
add
sbb
mov
stos
inc
mov
sbb
mov
lcall
movsl
fstps
ss
inc
loopne
inc
ds
sub
mov
and
faddp
into
aaa
dec
leave
jl
pop
es
loop
jle
push
push
xchg
add
mov
lds
cmp
stos
cld
inc
push
fs
jge
andl
mov
cmp
ds
mov
sar
add
daa
push
hlt
vmwrite
rolb
jno
outsl
cwtl
adc
notb
ljmp
imul
xchg
jne
push
aaa
add
fildll
fidivrl
sub
sbbb
popf
imul
inc
and
js
dec
fnstenv
loopne
out
shrl
xor
and
sti
fmulp
lret
dec
lret
lock
in
xchg
movsb
and
dec
mov
in
push
mov
sub
adc
cli
jb
cli
out
xchg
hlt
pop
push
mov
adc
and
jmp
sub
and
mov
les
test
and
scas
ret
lcall
bound
cwtl
fmuls
imul
push
lds
cs
mov
cwtl
cmpsb
jle
add
jl
orb
cmp
sti
dec
ficoms
pop
push
ret
fildl
push
inc
ljmp
mov
scas
jmp
repz
jl
sbb
or
cmpsl
mov
mov
adc
js
jecxz
and
pop
inc
lret
and
aad
mov
xchg
stc
jmp
inc
adc
pop
and
das
and
mov
ja
hlt
mov
fcoml
andb
mov
and
aas
and
popf
shr
sub
pop
imul
and
adc
inc
js
in
xchg
enter
jb
pusha
sbb
inc
and
pushf
push
leave
inc
mov
sbb
xorl
adc
das
mov
push
pop
jg
add
add
xchg
sahf
cs
insl
ret
cwtl
pop
dec
adc
hlt
ds
and
xchg
out
jb
add
jb
mov
mov
xchg
mov
xor
xchg
fisttps
out
js
les
decl
dec
mov
fisubs
cmpsb
rclb
in
into
mov
xchg
clc
sti
jns
aam
sbb
xchg
hlt
jne
cli
lahf
cmp
push
xor
imul
xor
bound
xchg
je
into
arpl
roll
jbe
les
push
push
rcrb
sbb
ret
test
push
int3
mov
sub
or
in
xchg
adc
push
pop
jb
sahf
movsb
sbb
fildl
stos
inc
inc
add
lea
jp
mov
test
cmp
push
inc
jne
xchg
nop
or
inc
divb
imul
inc
dec
repnz
dec
xchg
into
pop
addr16
movsb
sbb
xchg
cmp
rorl
dec
ret
mov
jl
lods
sbb
push
stos
xor
arpl
gs
push
inc
hlt
or
mov
in
cmp
adcl
xlat
sbb
pop
push
andb
fwait
inc
shrl
mov
jb
jbe
movsl
std
cmpsl
push
out
inc
cmc
pop
test
inc
out
mov
mov
rep
xor
out
call
inc
mov
or
xchg
cli
cmpsb
test
popf
xchg
and
mov
ret
outsl
pop
adc
sarb
inc
imul
sti
and
mov
sub
pop
or
mov
cmp
aas
mov
sbb
flds
mov
or
shr
movsb
lods
clc
leave
push
sti
inc
or
cmpsb
dec
adc
and
xor
imul
cmp
mov
int
les
or
insl
ja
push
bound
daa
outsl
in
aaa
scas
cmp
cmp
out
fwait
and
xlat
in
in
into
add
ds
jb
cmp
dec
lea
test
sbb
jl
xor
xlat
push
cmp
fildll
mov
pop
daa
inc
cli
mov
lods
jb
es
in
fucomi
inc
and
fs
aaa
jnp
sti
cmp
imul
jno
bound
xor
jp
pusha
fdivrs
adc
adc
popf
subb
lods
mov
jl
sahf
divl
into
frstor
push
jno
mov
imul
outsb
fprem1
push
jbe
fwait
xchg
mov
insl
ret
sbb
and
dec
xor
nop
push
cmp
jbe
andb
roll
or
test
dec
and
aaa
sbb
in
jns
stos
rcrb
shrl
cli
js
or
pop
sub
orl
addb
push
insl
call
mov
xor
ss
lock
xchg
pushf
aaa
pop
es
dec
and
pusha
bound
mov
stc
sahf
into
stos
jl
mov
outsl
push
scas
pop
ljmp
mov
adc
jbe
lea
mov
insl
rolb
out
fstpt
int3
icebp
insb
xorb
mov
sbb
out
mov
insb
pop
push
push
jle
pop
ror
xlat
test
lock
lds
add
xor
and
subl
mov
shll
in
pop
fidivl
negb
jp
insl
mov
xlat
stos
xchg
jg
ss
pop
mov
shl
push
lcall
sahf
dec
mov
std
or
dec
inc
enter
fldl
repz
outsb
add
out
pop
out
ds
add
dec
cmp
mov
push
mov
and
jae
ss
xchg
and
loopne
xor
shl
pop
fucomip
mov
add
call
inc
xchg
pushf
dec
lcall
cmp
lds
sub
xchg
and
sbb
pop
pushf
mov
jecxz
inc
pop
leave
mov
cld
xlat
and
repz
adc
mov
pop
cmp
mov
or
mov
fcoms
fistps
scas
ret
sbb
mov
lret
icebp
xchg
adc
loop
mov
out
jl
das
std
sbb
push
dec
jge
or
xor
jb
mov
mov
and
dec
pop
mov
ficoms
lea
inc
ljmp
push
adc
push
pop
jo
push
push
and
push
loopne
xor
les
sub
dec
mov
xlat
ds
adc
cmc
push
insl
dec
cltd
loop
mov
ret
iret
or
and
bound
or
cmp
leave
cmpl
inc
aam
mov
or
or
scas
adc
mov
test
sub
mov
sbb
sbb
movsbl
adc
pushf
mov
xlat
je
inc
in
add
pop
je
shlb
mov
lods
sub
pusha
push
mov
xchg
cmp
mov
dec
shlb
add
shlb
and
test
es
psubb
aad
jg
xchg
push
das
mov
xchg
xchg
dec
jnp
mov
add
adc
rcl
mov
mov
idiv
shr
add
sbb
mov
inc
sbb
out
push
imul
call
shrl
dec
or
mov
fwait
add
ret
ja
mov
sub
sbb
call
add
movsl
pop
and
pop
test
and
inc
sbb
adc
push
xchg
ror
movsl
ja
cmc
pop
or
push
push
xor
mov
add
popa
mov
popf
xor
out
jo
inc
add
popa
pop
inc
test
jl
cmp
inc
cmp
fstl
xchg
push
insl
aam
imul
jno
mov
shll
nop
sub
mov
jnp
das
sub
mov
test
sbb
mov
dec
js
shl
outsb
ret
sub
outsb
fsubs
outsl
mul
out
ss
mov
and
test
mov
adc
push
sub
popa
out
pushf
and
xchg
psubq
dec
sub
rcl
cmp
iret
cld
std
fs
pop
adcl
into
pop
aam
fists
pop
push
mov
cmp
leave
xor
sbb
lcall
and
xor
dec
ljmp
sub
adc
xchg
xor
fdiv
stc
add
test
out
aad
mov
icebp
or
in
sahf
shll
push
xorl
dec
sub
jmp
sub
mov
insb
cltd
mov
xor
iret
pop
out
xchg
cmp
add
arpl
sub
ja
insb
and
test
lahf
xchg
push
sbb
ret
ret
adc
push
enter
insb
jp
jmp
or
push
xor
icebp
mov
dec
mov
or
out
data16
call
movsb
mov
xor
sbb
fs
loop
inc
xor
adc
cmp
cld
imul
mov
testl
popa
fbld
mov
in
or
push
into
pop
push
inc
xchg
add
fdiv
mov
push
sbbb
mov
add
dec
sbb
out
in
inc
adc
or
jnp
leave
fs
movsb
dec
in
adc
xor
test
mov
pushf
lods
out
mov
pop
adc
hlt
xor
movsb
repnz
iret
sub
imul
add
push
inc
out
daa
pop
enter
sub
outsb
out
jno
arpl
in
loop
mov
js
cmpsl
jnp
push
repz
push
enter
pop
cmpsb
jl
rcrl
test
cmpsb
xor
xor
lcall
cmp
or
and
pop
push
fstl
xor
lret
adc
outsl
clc
mov
push
mov
dec
repnz
and
gs
pop
cmp
aad
cmpsl
xlat
inc
adc
adc
xchg
icebp
loope
ret
push
xchg
fidivrl
lret
and
lock
mov
mov
imul
pop
fldcw
sbb
or
mov
mov
cmp
in
xchg
dec
nop
std
loopne
clc
or
out
loop
insb
cwtl
scas
negb
sahf
nop
gs
clc
int
sti
xor
push
xchg
scas
pop
xchg
mov
gs
imul
cmp
leave
add
xchg
push
xor
and
test
shr
in
mov
xchg
icebp
inc
mov
data16
lds
xchg
cld
dec
push
arpl
out
dec
adc
or
and
pop
lds
sub
sub
jge
faddp
and
leave
aaa
cmp
sbb
aas
or
repz
cmc
mov
lret
int3
cmc
emms
cmp
outsl
xor
out
dec
clc
ficomps
pop
jnp
cmp
push
jo
mov
jle
push
leave
mov
aam
fucomip
mov
sahf
fisubs
dec
xchg
hlt
cmp
push
test
andb
jmp
push
ror
or
mov
and
ss
jns
mov
mull
sub
mov
bound
dec
xlat
mov
push
pop
testb
xchg
xchg
push
lods
arpl
cmpsb
shlb
dec
mov
pop
gs
xchg
popl
jge
push
adc
aad
xchg
inc
repnz
lret
loopne
movsl
mov
push
lock
inc
mov
and
into
fnstsw
aad
enter
ret
mov
add
cmp
movl
es
lods
repz
out
pop
xor
and
push
ror
adc
dec
push
push
xchg
sbb
fcomi
or
aas
rcll
sbb
cltd
rclb
add
add
cwtl
leave
inc
std
adc
fsubrs
jno
sbb
and
mov
shrl
pop
fildl
fistl
enter
cmp
loope
push
adc
cwtl
cmpsl
cmp
or
mov
push
lcall
into
inc
xor
pop
inc
into
add
aam
mov
outsl
mov
lea
and
inc
xor
hlt
fldt
pop
inc
or
sub
ss
xchg
jno
or
imul
faddl
mov
fmul
adc
pusha
push
sbb
pop
mov
xchg
and
lret
testb
lahf
outsb
mov
clc
adc
push
andb
aad
gs
cld
mov
push
sub
sti
adc
jmp
outsb
popa
stos
sbb
xchg
ret
rorb
les
sbb
xchg
cmp
lea
lret
cmp
pop
lea
lds
mov
aas
xchg
xchg
hlt
mov
mov
sub
sub
fwait
jmp
sub
add
xchg
test
movsb
push
sub
cltd
jno
push
je
jmp
mov
adc
lds
xor
cld
jae
and
in
int3
jo
movsw
cmp
mov
test
mov
nop
mov
cld
dec
fbstp
das
jno
fdivp
xchg
pop
jmp
cmpsb
out
jge
mov
inc
dec
mov
dec
cmp
mov
and
stos
sbb
push
cli
and
fnstsw
and
leave
data16
xor
push
popa
das
fmull
jecxz
mov
into
pushf
sbb
hlt
scas
repz
mov
cmpsb
mov
ficomps
dec
mov
in
aam
xor
outsb
cmpsl
lds
jle
std
cmp
xchg
stos
aam
std
filds
lcall
xchg
dec
call
out
add
cmp
enter
mov
cmp
es
outsl
es
mov
mov
gs
xchg
jl
std
fisttpl
jno
es
mov
cmp
jecxz
sqrtps
outsl
adc
push
mov
out
shll
cmc
adc
or
pop
icebp
call
add
stos
pop
loope
mov
and
adc
jbe
mov
mov
mov
xchg
bswap
lcall
sarl
cmpsl
lahf
insb
push
sbb
sbb
movsb
and
les
lods
xchg
sub
pushf
mov
mov
out
or
push
lret
mov
mov
sub
inc
push
adc
push
notl
and
sahf
push
and
push
add
not
enter
rorl
rcr
or
fwait
jae
mov
sahf
pop
sub
sub
subb
jg
mov
mov
hlt
sub
sbb
mov
hlt
mov
roll
mov
andl
popf
mov
jno
and
push
pushf
pop
jle
pop
dec
xor
push
and
jno
pop
outsb
or
adc
je
js
and
lret
mov
and
or
push
imul
and
outsl
test
out
icebp
pushf
xchg
daa
adc
cmp
iret
mov
std
insb
push
sahf
sub
push
add
push
std
lods
inc
mov
adc
stos
or
ret
xor
mov
fwait
test
cmpl
jl
or
mov
out
int
xor
call
jo
pushf
insl
vmovntps
sub
arpl
fsts
xchg
and
loopne
js
push
jns
mov
lea
xchg
add
pusha
xor
ds
lcall
xor
mov
jg
add
mov
stos
adc
cmp
ja
imul
sbb
int3
push
das
xchg
inc
mov
jns
mov
push
or
mov
jl
idivb
or
inc
or
nop
aad
sti
inc
inc
dec
or
or
out
xor
rcl
inc
repnz
dec
pop
pop
mov
adc
outsl
adc
mov
shlb
sub
mov
jae
mov
xor
jno
mov
stos
adc
daa
jbe
or
rorl
aas
test
jmp
xor
mov
jg
loope
lcall
mov
iret
xor
inc
sti
push
sbb
scas
mov
jnp
lcall
sub
scas
adc
stc
loope
mov
repz
cmp
jnp
cmp
jmp
adc
jne
iret
sti
fwait
shrb
loop
pop
lahf
mov
fisttpll
lods
in
mov
xchg
std
adc
inc
popf
jmp
mov
inc
push
ret
cltd
and
stos
mov
ja
repnz
xlat
lds
repnz
push
mov
jb
and
es
popf
and
fxch
and
stc
mov
sti
ficomps
dec
ja
test
loopne
pop
mov
mov
jne
pop
sahf
sahf
out
push
aad
in
scas
pushf
add
mov
sarl
and
adc
mov
rcll
push
pop
adc
xchg
mov
xor
cmpsb
sub
sub
idiv
loope
dec
fstpl
test
lods
fnstenv
orl
mov
into
fsubrl
jnp
iret
mov
add
in
xor
call
jbe
mov
movsb
xor
or
push
out
jg
hlt
xor
push
jns
imul
mov
aaa
fistps
or
addr16
cmp
cmp
mov
ss
fadds
repz
pop
in
fs
sbb
cmpsl
test
push
lahf
xor
xor
and
xchg
insb
std
popf
loopne
inc
dec
movsb
mov
push
stos
xchg
mov
adc
jno
mov
mov
inc
sbb
xor
sbb
sbb
push
ds
adc
or
xor
push
notl
mov
mov
imul
lods
fs
outsl
out
ljmp
outsl
out
cld
mov
bound
in
mov
xchg
mov
cmp
pop
imul
leave
jae
dec
into
insb
lcall
mov
popa
into
mov
lods
sbb
push
inc
cmovno
neg
insb
and
cltd
loope
cli
insl
inc
xchg
xor
aad
add
js
jae
loop
push
in
and
pop
mov
push
xchg
lods
clc
fs
fistpll
fimull
imul
ja
mov
and
cmpsb
inc
or
out
dec
push
add
xchg
shll
lcall
ret
fadds
int3
and
mov
push
test
push
scas
cltd
mov
int3
fadds
test
aas
cwtl
sbb
stc
xor
push
push
aad
icebp
cli
into
xor
or
pop
les
mov
subb
xchg
add
mov
ds
cs
inc
out
pop
pop
ljmp
enter
outsb
insb
jp
adc
adc
xor
pushf
push
inc
lea
iret
and
xchg
outsl
bsf
cmc
mov
stos
pop
pop
adc
stc
xchg
mov
mov
in
or
push
arpl
dec
sbb
fisttpl
idivb
add
in
inc
pushf
outsl
mov
xor
hlt
mov
incl
mov
push
ror
andb
jg
xchg
push
sarl
xor
imul
loope
ds
mov
xchg
mov
js
jae
xor
jmp
popa
roll
clc
bound
mov
bound
push
inc
pop
dec
test
gs
lret
and
cmpsl
call
push
sbb
and
xchg
or
adc
repnz
repz
test
push
mov
mov
pop
pushf
add
jp
int3
sti
ljmp
lea
xchg
popa
pop
xchg
nop
cmp
pushl
adc
test
pop
xchg
icebp
call
iret
push
fucom
lock
shlb
inc
sbb
and
es
imul
ficomps
mov
push
xor
scas
popf
lcall
movsb
sub
fldcw
push
fwait
sub
lock
hlt
ljmp
fucomp
daa
popf
scas
pop
mov
or
das
add
gs
pop
mov
js
mov
scas
loope
cmp
add
and
sub
push
out
cs
into
adcl
jecxz
push
idivb
jmp
cmpsb
imul
test
jnp
xchg
pop
stos
mov
xor
sub
push
mov
fucom
and
dec
movsb
xchg
cwtl
or
xchg
mov
outsl
mov
add
cmc
aaa
push
dec
hlt
out
pop
and
out
cmp
mov
sub
xchg
ret
fldcw
pop
cmpl
push
mov
cmc
ja
mov
out
inc
fcmovnbe
sbb
out
mov
aaa
hlt
dec
movl
adc
mov
mov
lret
mov
es
in
push
cmpsb
cmc
push
inc
mov
dec
aad
jle
or
xchg
cld
dec
call
outsl
pop
and
ficoml
in
jl
lcall
push
xor
pop
lods
fstps
mov
sarb
pop
and
test
add
mov
pop
arpl
js
mov
xor
pop
les
mov
test
cli
jno
sbb
push
mov
test
or
xor
rorl
inc
lret
inc
sbb
jle
mov
int
xchg
ret
mov
hlt
xor
dec
daa
push
mov
paddsb
inc
and
rcll
sub
cvtps2pd
mov
test
jbe
shl
mov
mov
lods
cwtl
adc
in
pop
rorl
add
dec
push
cmc
pop
push
arpl
pusha
pop
into
sub
data16
test
adc
in
fnstcw
arpl
dec
nop
mov
arpl
fstps
cmp
out
xchg
cmpsl
movsb
lret
iret
sbb
mov
imull
sahf
in
sbb
sahf
pop
dec
mov
int
sbb
stos
pushf
and
adc
popa
dec
xor
push
or
insb
xchg
das
mov
xor
inc
gs
push
cmp
aam
mov
mov
test
inc
pop
sahf
pop
hlt
push
xchg
in
lret
jmp
jge
std
stos
or
inc
fisttps
lock
lahf
xor
std
cmpsl
or
popf
iret
sub
sbb
rorl
mov
inc
in
xchg
repz
cmpsb
sbb
mov
cmc
push
addr16
or
mov
cmpsl
and
push
cmpsb
jp
cli
adc
mov
push
pause
arpl
inc
pushf
popa
sbb
jge
jbe
or
je
xchg
xchg
and
andb
repz
hlt
loopne
mov
cmp
add
jmp
test
cmp
dec
mov
adcl
nop
cwtl
js
aaa
popf
inc
sub
xchg
es
xor
pusha
cmpsl
or
rcrb
add
push
jns
mov
addb
jns
mov
mov
hlt
mov
loopne
jns
aaa
cmp
lret
inc
and
push
pop
add
mov
pushf
xchg
dec
jle
ds
cmc
fcoml
push
push
pop
lods
jl,pn
fnstenv
inc
lret
inc
adcb
cltd
mov
xchg
repnz
out
dec
repz
pop
mov
mov
jmp
jnp
in
jg
xchg
rcll
add
lock
cs
jne
test
push
call
aas
pop
je
scas
popf
jmp
ja
aad
int3
jle
lea
push
sti
pop
insb
mov
into
cmc
sti
lock
lds
xchg
enter
enter
mov
hlt
aas
pop
mov
mov
cmpsb
xlat
jge
mov
arpl
cwtl
testl
out
xor
out
stos
ret
repnz
pop
in
and
popf
sarl
and
mov
enter
popf
pop
mov
in
outsb
mov
cmp
fxch
loope
or
call
fwait
in
rorb
push
shlb
cld
lods
jg
leave
or
push
jp
pop
mov
cmp
add
push
jp
xchg
subl
sub
push
in
mov
imul
push
js
les
or
sub
test
xor
push
and
fwait
or
ljmp
cs
iret
pop
dec
push
adc
idivb
insl
dec
mov
cmp
mov
mov
into
call
loope
fstpl
push
loop
insb
in
bound
mov
dec
sub
xchg
rolb
ljmp
sbb
mov
xchg
sti
lret
xorb
popa
cmp
in
push
pop
notb
ljmp
jne
in
sti
cs
lret
lcall
xor
mov
pop
push
mov
cld
sub
adc
lahf
mov
ds
test
cmp
dec
jno,pn
or
addr16
and
lods
call
dec
jg
lds
lock
and
mov
inc
lods
fabs
das
lahf
jg
andb
shlb
enter
cmp
jbe
fbstp
jl
icebp
sbb
ret
inc
imul
fwait
shll
mov
std
inc
daa
arpl
inc
ret
pop
pop
sbb
push
and
mov
scas
sbb
in
test
in
daa
jp
mov
test
dec
sub
mov
and
aaa
cmpsb
mov
push
out
pop
cli
adc
mov
lods
movsb
inc
inc
mov
int
jle
mov
lret
add
adc
dec
push
hlt
in
leave
pop
lods
xchg
cmpsl
sub
test
aad
fs
jmp
jbe
inc
mov
or
hlt
pop
xchg
cmpsl
inc
push
jnp
xor
mov
aas
jo
cmp
and
xor
out
adc
adc
jecxz
insb
cmc
movsb
fdivs
out
ficoml
pop
or
andl
flds
jno
lcall
sub
mov
xchg
mov
bound
ljmp
ja
cmp
pop
cmp
iretw
fadds
das
mov
pop
leavew
daa
in
andl
icebp
leave
adcb
add
or
in
aam
jge
mov
rcr
inc
jb
push
mov
xor
xchg
mov
cmpsl
mov
dec
xchg
jno
push
rorl
jg
das
insb
pop
cmp
daa
or
inc
ret
sub
lea
movsb
sub
adc
leave
pop
fxch
in
hlt
fisubl
and
or
fwait
mov
push
stos
aas
std
imul
adcb
pop
popf
roll
push
cmp
cmpsl
test
xchg
add
inc
loop
mov
inc
lahf
stos
cmp
xchg
inc
cmp
aas
out
repz
aad
pop
sarl
scas
push
sbb
mov
add
inc
mov
sbb
js
cs
outsl
mov
sub
pop
dec
fwait
xor
push
xor
popf
mov
jl
js
divl
cmpsl
loopw
faddl
ljmp
jecxz
and
mov
dec
pop
addl
and
divb
ljmp
jp
fiadds
add
sti
mov
in
repnz
addl
push
adc
movsl
push
fnstsw
enter
les
xchg
pop
mov
push
aam
push
pusha
push
test
jl
add
mov
popf
ja
inc
pop
or
xchg
outsb
mov
not
mov
test
adc
mov
cld
sbb
std
add
cld
mov
dec
sahf
test
das
pusha
sahf
xor
adc
cmp
pop
xchg
ds
pop
movb
pop
or
jmp
push
mov
lods
mov
cmpsl
xor
cmpsb
adc
or
adc
xlat
adc
sub
jecxz
lock
mov
mov
mov
call
adc
and
mov
adc
daa
and
outsl
dec
push
cltd
rorl
mov
jmp
je
mov
pop
in
cli
faddp
shll
mov
cmp
sbb
sbb
sarl
out
popf
mov
mov
sbb
loope
neg
in
stos
popf
xor
movsl
mov
inc
lret
loopne
in
rolb
insb
push
fists
daa
movsl
sub
jne
or
andb
mov
jbe
movsl
lods
add
cld
out
xor
out
leave
lea
push
mov
xor
mov
push
push
cmp
sub
scas
outsl
add
mov
das
inc
pop
call
cmp
mov
scas
mov
ja
push
fcoml
mov
cmp
add
fstpt
adc
jecxz
add
mov
xchg
xchg
push
int
dec
pop
inc
add
jns
and
das
mov
mov
cmpsl
push
cmp
pop
cmpb
mov
inc
fcomps
jmp
repz
mov
mov
adc
mov
adc
ds
das
call
cltd
je
xchg
jle
mov
adc
push
sbb
sub
adc
pop
outsl
fadds
loop
lods
pop
dec
or
movsb
pop
dec
lret
fs
mov
outsb
adc
sti
cmp
dec
jecxz
sbb
out
inc
mov
btl
xchg
mov
outsl
xchg
inc
ret
push
xchg
imul
adc
mov
or
daa
ljmp
scas
xlat
lret
sub
outsl
or
fcmove
jge
push
insb
mov
iret
and
cmp
rorb
inc
sbb
outsb
insb
add
scas
dec
mov
ror
in
mov
xchg
xchg
ja
cs
cmc
pop
lods
inc
add
xor
call
hlt
and
or
mov
push
mov
and
sbb
adc
jge
inc
ret
pop
mov
cmp
jo
daa
movsl
inc
dec
clc
add
mov
sahf
xor
fistpl
adc
aaa
std
push
insl
mov
sbb
mov
add
or
pop
mov
jno
add
pop
rcr
mov
out
inc
dec
es
mov
push
cmp
data16
addr16
jns
aam
pusha
movsb
les
fcom
jp
cs
test
dec
imulb
stos
sub
and
fdivl
cmp
test
je
adc
adc
pop
sbb
and
inc
mov
into
sbb
sub
in
movsb
shll
jnp
hlt
stc
clc
and
xchg
cwtl
xchg
jl
pushf
sub
loop
in
gs
cs
xor
xchg
iret
mov
pop
js
sbb
mov
cltd
lret
and
repz
cltd
in
jge
fistps
into
cmp
push
dec
ja
mov
jae
or
hlt
imul
xor
add
popf
sbb
call
es
test
data16
sbb
ljmp
shl
push
add
xor
imul
add
pop
movsl
xchg
test
addr16
int
xchg
push
lods
ret
ret
push
adc
shll
mov
enter
ss
xchg
xchg
xor
loop
iret
push
out
ret
xchg
inc
mov
shlb
mov
mov
xchg
jp
and
aam
mov
cli
mov
repnz
cmpsb
repz
aaa
push
into
dec
mov
mov
int3
scas
movsb
xor
cld
mov
cwtl
dec
mov
sub
test
fcomps
dec
jp
xchg
jmp
push
sub
jg
dec
inc
cli
inc
xchg
aaa
in
push
mov
add
shrl
shlb
lea
jnp
insb
jg
adc
cwtl
dec
pop
push
adc
adc
sub
add
jnp
rol
rorl
arpl
shl
int
mov
lock
sub
push
pop
das
inc
push
xor
shlb
arpl
or
jle
xor
mov
sbb
rorl
dec
xchg
test
loop
push
int
ds
pushf
inc
aaa
ret
add
stos
push
cmp
jp
subb
pop
push
into
stc
mov
mov
fisubrs
lods
adc
test
cmpsb
mov
decb
sub
add
jae
xor
das
cmpsb
pushf
imul
mov
pop
bound
fcmovbe
jg
pop
test
fadds
std
adc
jae
cwtl
push
call
movl
pop
into
nop
fs
loope
hlt
imul
sbb
lods
xor
sbb
add
mov
pop
shrl
cmp
push
pop
adc
outsl
cmp
sar
mov
sti
jge
std
cmp
xor
push
sub
mov
rol
add
sbb
js
js
test
dec
adc
andb
push
fists
shlb
addr16
int3
or
repz
lcall
push
jbe
js
adc
push
mov
arpl
std
fstp
insb
add
loopne
aam
jmp
or
xchg
sbb
mov
das
arpl
dec
scas
or
pop
ss
js
mov
mov
insb
or
cld
stc
inc
jmp
cmp
idiv
xor
insb
iret
inc
xchg
fidivrs
mov
sbb
lods
popa
pop
std
imul
fwait
jns
sub
out
jle
in
lods
arpl
xchg
mov
popa
mov
or
fldl
pusha
jnp
mov
loopne
cwtl
dec
xor
roll
out
sbb
sbb
xor
test
aas
fwait
decb
xchg
sbb
imul
mov
fistpl
add
ja
inc
pushf
cmp
mov
jg
imul
or
aaa
mov
jg
test
in
pop
test
push
test
xchg
loopne
push
add
mov
cmp
pop
stos
out
xor
iret
arpl
and
scas
sub
out
stos
xchg
mov
xor
jb
sub
and
outsb
out
add
add
outsb
pop
lret
mov
dec
sti
les
movsl
clc
jecxz
push
outsb
fisubs
mov
addr16
ret
jge
mov
inc
push
jbe
jb
or
sahf
ja
jmp
mov
gs
mov
and
movsl
dec
push
out
or
aaa
ficoml
fwait
jo
or
jmp
scas
pop
mov
mov
andl
jb
and
cmp
ljmp
inc
sbb
dec
sbbb
sbb
xorl
in
in
dec
jnp
inc
mov
lock
stos
sbb
jmp
xlat
rolb
sub
jae
repz
push
stc
bnd
xorb
aam
inc
mov
mov
shlb
inc
je
push
sti
cmp
rcl
push
dec
adc
bound
cmp
push
fdivrl
iret
sub
mov
inc
ljmp
mov
mov
enter
inc
out
cmc
ss
add
and
mov
out
xor
jl
jl
stos
insb
push
sub
lcall
fdivl
sub
arpl
push
mov
xlat
push
sub
mov
lret
inc
jmp
inc
test
pop
jo
cltd
call
rcl
pop
and
arpl
clc
ret
sub
xor
sahf
mov
jae
pop
daa
xor
dec
jp
movsl
std
mov
and
add
imul
loopne
and
or
mov
lods
iret
cmp
bound
loopne
xlat
pushf
mov
xlat
xor
xor
rorl
lock
scas
and
pop
imul
mov
movsl
xor
dec
sbb
xor
sbb
mov
xor
sub
xchg
add
popa
out
fcompl
into
mov
adc
addr16
xchg
out
cmp
lods
int
pop
andl
dec
int
shl
sub
mov
gs
fdivs
ficoml
push
daa
rclb
out
mov
test
push
cld
adc
mov
jns
jl
adc
mov
mov
sbb
sti
mov
stos
lret
or
jno
or
sub
xchg
cltd
out
sar
movsl
adc
movsb
bound
fmull
jbe
in
sbb
sbb
in
and
clc
jecxz
pop
and
lock
or
js
mov
mov
jg
cmp
jle
pop
cmp
cltd
js
mov
jo
push
sarb
sub
push
sbb
xchg
out
out
cmpxchg
stc
lret
and
sarl
add
test
cld
ljmp
cmpsb
or
pushf
mov
std
fs
pushf
testb
cmp
push
dec
fwait
dec
push
lods
mov
sti
repz
aaa
push
movsb
fildll
je
inc
jg
mov
outsl
lds
mov
xor
scas
fimuls
adc
or
dec
push
push
jg
fwait
and
push
and
stc
outsl
dec
lcall
mov
inc
jne
push
mov
mov
notb
pop
and
mov
cwtl
adc
ret
lods
mov
jne
or
jl
jb
fwait
imul
xchg
add
addr16
sbb
int
inc
rorl
mov
cmp
into
insl
adc
xlat
stc
adc
daa
test
mov
ret
adc
push
push
xlat
mov
ss
jge
addl
add
mov
es
daa
pop
lret
push
mov
jns
lods
stc
inc
inc
lret
ret
mov
jae
imul
bound
cmpsb
adcb
cmp
mov
jmp
clc
dec
loope
loop
mov
inc
push
sbb
sbb
lds
iret
insb
mov
sarb
cmp
je
fadds
push
mov
test
stos
es
adc
inc
out
and
call
shrb
dec
scas
popa
xchg
stc
jecxz
incb
adc
push
into
repz
and
loop
mov
mov
pop
ret
dec
inc
jge
insb
jbe
testb
cmpsb
mov
push
out
and
sub
dec
cs
icebp
test
mov
lahf
js
fnsave
adcb
xchg
mov
sbb
pop
sub
pusha
aaa
stc
pop
dec
adc
and
jmp
cmp
add
test
push
ljmp
loopne
inc
cmp
pop
push
or
out
enter
clc
testl
pop
mov
pop
ds
push
jle
loope
push
icebp
lods
mov
add
jne
mov
xchg
clc
std
fildl
pop
jb
les
mov
and
hlt
pop
rorl
xchg
mov
cmp
cmp
xlat
mov
movsb
lods
add
popa
cs
std
cmp
xchg
inc
cmpsl
outsl
addl
scas
subb
xchg
ja
mov
in
add
adc
pop
mov
fwait
or
and
lret
pop
jg
add
cmpl
fiadds
push
cwtl
fwait
xor
and
mov
imul
or
push
movsb
xor
xchg
mov
popf
cld
into
mov
ljmp
test
inc
stos
clc
outsb
jbe
jmp
in
mov
mov
sub
test
cmp
sahf
rclb
sub
xchg
lock
xor
popa
mov
inc
notb
andb
xor
mov
pop
xchg
inc
in
cmp
push
cmp
push
negb
dec
and
xor
fs
test
bound
imul
add
xchg
dec
sub
and
cwtl
inc
ja
xor
sub
lock
push
cmp
fwait
pusha
and
pop
outsb
or
rcrb
adc
push
testl
add
mov
xchg
jecxz
cmp
inc
popl
cltd
jl
int
xchg
dec
cs
out
std
fwait
loopne
dec
adc
xchg
mov
fldenv
mov
popa
mov
stos
xor
adc
leave
dec
mov
lret
fyl2x
cmc
mov
test
add
lods
mov
mov
mov
imul
xor
cwtl
lret
and
cmc
xor
leave
addb
pushf
push
inc
cmp
jne
ljmp
lcall
xor
xchg
push
lds
add
mov
inc
sbb
and
roll
jmp
fcom
pusha
outsl
mov
or
lahf
push
insb
int
inc
push
dec
cmp
ljmp
xchg
das
or
pusha
rcr
and
mov
jmp
inc
mov
lock
mov
sbb
cmp
inc
cmpsb
shll
add
and
xchg
pop
adc
pop
cmpsl
int
dec
or
mov
jno
xor
mov
fisubs
dec
sti
xchg
cmp
ret
test
push
jl
xor
outsl
mov
push
dec
xchg
pop
clc
pop
ja
cli
scas
xor
lods
jne
mov
sbb
cltd
sub
push
std
fs
addl
mov
in
ss
push
ss
aas
and
dec
dec
and
pusha
loopne
push
repnz
cmp
rol
jb
out
inc
or
stc
mov
pop
or
addb
stos
cmp
or
lret
faddl
pop
fdivrs
mov
push
rolb
mov
dec
out
sub
addr16
stos
inc
pop
add
jne
iret
pop
jl
scas
pop
cmpsb
cmpsb
and
push
sub
push
icebp
stc
dec
pop
sbb
adc
add
ja
js
cmpsl
ss
mov
dec
out
shll
addr16
push
lahf
xchg
in
mov
mov
pop
ret
sub
cli
imul
inc
jg
stos
std
pushl
mov
int
inc
enter
sub
stos
ja
adc
and
add
xorb
push
and
mov
push
push
sub
mov
and
ret
imul
pop
push
mov
mov
aam
gs
pop
xchg
xor
mull
dec
mov
inc
ret
sub
lahf
insb
xchg
stos
stos
adc
cs
das
sti
mov
pop
adc
adc
xchg
fdiv
cmc
out
ja
mov
fistl
fxam
xchg
sub
xor
cmp
filds
bound
aam
nop
xlat
dec
adc
push
xchg
jl
push
jl
in
push
push
or
movsl
pop
mov
sahf
push
sub
int
jge
push
lret
push
xchg
adc
pop
add
jp
jl
fdivp
insb
push
mov
lret
add
push
cmpsb
aaa
cmp
dec
lahf
hlt
jne
push
lds
fwait
pushf
push
cmpsl
aas
call
push
pop
rclb
pusha
mov
rcrb
jno
mov
jb
xlat
xor
movsb
push
test
mov
xor
aam
sbb
fisttps
pop
sbb
lods
push
pop
pop
icebp
outsw
push
mov
cld
xor
sub
cmpsb
jb
mov
out
sbb
mov
xchg
inc
push
or
add
clc
out
xor
fimuls
jbe
xor
out
adc
inc
shrl
cmpb
loope
setl
and
adc
sub
mov
pop
push
jecxz
punpcklbw
cmp
xchg
pushfw
daa
das
cmpsb
call
pop
jns
bnd
fisttpl
mov
mov
js
xchg
aad
mov
stc
mov
xchg
or
loopne
jmp
sub
and
js
jge
iret
xor
jne
jae
and
pop
jnp
pusha
scas
mov
aaa
xor
mov
push
push
jbe
inc
sbb
insb
mov
out
shll
sub
mov
sbb
clc
fimull
xchg
lods
loop
clc
jbe
xchg
jne
dec
jge
mov
sbb
mov
aam
loope
cmp
jae
mov
jecxz
ret
jne
adc
pop
mov
in
xchg
jo
mov
imul
sbb
inc
mov
lock
cmp
xchg
out
cmovge
test
shrb
arpl
movsb
sbbb
sbb
scas
pop
and
ret
das
xor
xor
mov
and
cmp
pop
ret
mov
nop
addr16
xor
dec
sub
pop
das
fcoms
subb
stos
aas
sarl
cli
aad
dec
lret
dec
imul
test
pop
mov
mov
xchg
rolb
fstp
dec
cmp
movsl
aam
sti
push
mov
lar
add
hlt
out
mov
outsb
and
mov
aam
jnp
xchg
jnp
out
inc
stos
or
add
leave
jle
lcall
pop
ds
pop
loope
cli
sub
insl
mov
cmp
mov
add
mov
push
out
je
sbb
push
and
ss
xor
loopne
pop
aas
outsl
jmp
xchg
adc
leave
jecxz
fistpl
aam
fldl
sub
and
stc
lret
xchg
or
das
int
mov
mov
in
jge
jae
cmp
inc
lret
add
push
pop
and
mov
fldln2
shrl
mov
jo
insl
lock
outsb
mov
push
lcall
ljmp
insb
xor
mov
dec
fcmovnb
arpl
outsl
pusha
arpl
std
sbb
call
and
xor
or
mov
xchg
cmp
loopne
cli
bound
mov
jb
or
cwtl
xor
push
adc
mov
push
push
test
insl
push
jnp
ret
rcrb
xchg
and
mov
lds
ffreep
adc
std
ret
xchg
push
fimuls
sbb
es
addr16
test
mov
push
pop
xchg
test
add
jno
pop
xchg
std
icebp
in
outsl
outsb
sbb
adc
mov
imull
and
cmp
jno
cld
mov
sub
and
aad
push
pop
jle
or
add
icebp
je
mov
into
push
add
hlt
mov
cmp
mov
outsb
lods
dec
cmp
adc
movsl
insb
ret
cmp
ror
jb
dec
adc
xlat
inc
push
sar
adc
mov
inc
xchg
out
pusha
jo
stos
lods
test
and
xor
cltd
xchg
arpl
imul
imull
rorl
push
dec
mov
les
pop
mov
rcl
andb
add
dec
adc
inc
pop
popa
sub
cmp
adc
aas
lret
daa
cmp
or
xlat
jmp
mov
ja
je
stos
pop
push
jg
je
or
xchg
add
pop
repnz
cld
mov
ds
pushf
add
cli
lret
cld
jnp
adc
adc
push
cmp
cmpsb
xorb
sbb
dec
jp
lods
call
cmp
lock
aaa
adc
pop
repnz
push
cwtl
xchg
movsl
pop
pop
es
xchg
mov
lds
mov
jbe
aam
push
addr16
cs
nop
inc
mov
aas
pop
dec
sub
jae
jecxz
and
lods
mov
or
in
mov
xor
mov
jp
sbb
adc
adc
pop
roll
sub
push
int
nop
loopne
dec
adc
and
popa
and
mov
inc
push
in
rcrb
int
movsb
out
lock
rcr
xchg
pop
jae
dec
inc
es
jo
popf
pop
dec
imul
leave
insl
xlat
mov
dec
ja
cmpsb
sbb
fnstenv
inc
in
inc
mov
sbb
fcmovb
or
lcall
mov
leave
xlat
clc
inc
xor
pop
jp
mov
and
lock
enter
insb
ljmp
cmp
mov
dec
mov
push
into
jne
pop
testl
orb
jmp
push
pop
fsubs
loopne
jbe
in
mov
shr
jns
fdivrs
xchg
in
mov
fisubrl
mov
push
cld
incl
xor
ljmp
lcall
or
fnstsw
icebp
dec
pop
add
cmpsl
mov
adc
das
pop
push
add
inc
cld
pop
rcr
nop
mov
mov
xchg
push
jb
pop
xchg
mov
stos
int3
inc
aad
addr16
scas
rorl
pop
imul
xchg
in
mov
mov
int3
call
mov
sub
ds
out
int3
cwtl
mov
lods
int3
inc
mov
xchg
pop
push
sarb
aad
jns
inc
push
mov
loopne
dec
cmp
sub
dec
les
xor
inc
inc
std
cld
push
jo
repnz
stc
cmp
popa
cmpb
pavgw
push
push
cmp
xor
sti
clc
cld
inc
xor
idivb
pop
cmc
pop
mov
xchg
sbb
and
jl
imul
mov
lcall
mov
adc
inc
int
out
adc
push
push
xchg
pop
lret
lods
scas
loop
cltd
fistpl
jne
cmpsb
cltd
or
push
shl
mov
clc
jnp
mov
push
in
xchg
std
lea
imulb
shll
mov
jb
push
jne
insb
mov
leave
and
idivb
ljmp
popf
in
dec
fisubl
cmp
das
clc
movsl
pop
call
lahf
mov
clc
pop
gs
dec
add
adc
jle
pop
popf
dec
lahf
fs
lea
orb
xchg
pop
push
addb
jl
push
mov
movb
call
cmp
hlt
mov
or
test
pop
xor
sbb
add
dec
push
mov
jae
arpl
call
scas
cmpsl
sub
and
jnp
pop
or
mov
loop
jmp
movsb
dec
cmp
mov
iret
sub
dec
adc
pop
push
imul
outsb
ljmp
push
push
nop
push
add
push
mov
jg
mov
imull
pop
notl
sub
cmp
mov
pusha
int3
dec
push
sub
fsubrl
icebp
rolb
jbe
pop
stos
adc
push
inc
cltd
inc
or
lods
inc
inc
and
cmp
std
fs
sbb
push
jg
mov
pop
add
scas
fldt
addb
mov
mov
push
call
and
out
mull
sbb
stc
jne
shrl
jg
mov
xor
fwait
pop
fbstp
xlat
mov
mov
test
loop
and
mov
xchg
iret
cmc
or
ret
add
jge
movsl
mov
jp
loopne
jns
sahf
ret
ds
adc
arpl
nop
xor
xor
xor
imul
subb
mov
cmpsb
mov
pushf
mov
cmc
stos
jmp
movsl
pop
mov
inc
and
push
call
mov
and
dec
push
push
insl
je
dec
pop
addr16
imul
mov
sbb
mov
pop
sbbb
mov
xchg
or
bound
lock
sbb
and
dec
jle
ljmp
in
push
xchg
addr16
and
popf
and
cs
lea
lret
fs
and
mov
fwait
cmp
push
das
sbbl
mov
jg
jg
inc
lret
stc
pop
pushf
clc
lahf
mov
testl
dec
sbb
jae
insl
fwait
inc
push
lret
inc
inc
pushf
mov
mov
inc
xor
push
fs
push
and
or
pop
xlat
insb
push
push
xorb
mov
sbb
out
outsl
mov
sahf
iret
inc
xorb
jbe
ja
aaa
in
adc
idiv
adc
mov
adcb
ja
inc
pusha
popa
mov
iret
mov
repz
dec
pop
loopne
mov
cmp
popl
push
out
mov
sbb
leave
lret
mov
pusha
int3
fcomps
lods
jae
mov
cmc
jbe
xchg
add
xor
sub
fwait
bnd
jno
sbbb
clc
dec
sahf
mov
sbb
mov
push
push
mov
in
cmc
sub
mov
mov
jb
dec
popf
test
hlt
mov
repnz
rcll
jge
mov
rorb
xchg
add
cmp
mov
xlat
and
lahf
xlat
fdivs
add
rcll
lock
mov
jecxz
xchg
xchg
enter
aad
adc
roll
out
sbb
sbb
dec
fcomps
jecxz
or
pop
push
mov
lods
loop
fnsave
push
or
shrb
and
xchg
cld
mov
jbe
or
into
int3
or
imul
testb
mov
pop
out
fildl
xor
data16
fstl
sbb
mov
ja
pop
xchg
loopne
sbb
pushfw
pop
sbb
jns
and
aad
leave
clc
out
jb
jae
std
clc
movb
int
loopne
loop
jle
mov
push
mov
xchg
pop
push
jmp
ret
xorb
cltd
outsb
pop
push
js
pop
mov
push
push
xorb
popf
lahf
mov
ja
aas
mov
xlat
mov
int
xlat
std
fwait
jo
mov
shll
adc
add
and
inc
cmp
xchg
scas
or
emms
lret
leave
out
sub
or
les
sahf
xlat
imul
sub
ja
or
cmc
push
loop
mov
and
out
cmpsw
push
jns
xchg
rol
push
inc
mov
cmpsb
out
out
or
mov
inc
dec
and
or
mov
push
lods
lock
push
pop
insb
inc
xor
dec
mov
xchg
fwait
pop
mov
push
scas
adc
in
and
clc
sub
dec
xor
test
and
int3
sub
decl
test
jae
fwait
push
xchg
adc
xor
sbb
ret
inc
xor
cmp
pop
push
test
pop
pusha
mov
out
icebp
xchg
cmp
inc
subl
and
add
or
std
push
sub
and
mov
icebp
ret
mov
pop
jl
inc
cmp
mov
push
negb
fsubs
dec
arpl
mov
cmp
rorl
cmp
jbe
pop
insb
xchg
mov
add
fdiv
mov
cmp
loopne
mov
sbb
or
xchg
inc
movsb
push
aad
enter
lahf
lods
sar
cvtpi2ps
sub
fwait
mov
mov
imul
mov
and
mov
pop
pop
divl
sub
inc
jmp
pop
dec
ret
xchg
fcoms
pop
scas
inc
into
add
inc
xchg
iret
push
fiaddl
push
je
add
lock
insl
xlat
or
cmp
xchg
imul
fstl
xchg
or
sub
sahf
jne
jns
aad
data16
std
frstor
testb
mov
das
mov
and
lret
bound
inc
xor
mov
ror
iret
xor
xor
cwtl
lret
jmp
cmc
sbb
jg
imul
jmp
inc
aad
mov
lods
jl
mov
inc
xchg
mov
test
imul
outsb
inc
out
orl
inc
sub
inc
and
sbb
cmp
loop
loop
xchg
xor
fdivs
inc
add
and
into
js
shrl
xchg
adc
mov
inc
mov
jnp
popf
xor
nop
outsl
and
cld
xchg
adc
addr16
pop
xchg
fldenv
int
pop
adc
cmp
and
push
add
xor
mov
sbb
divl
xchg
or
loopne
test
cmp
fwait
shll
fsubl
and
sub
cltd
jp
ret
sbb
repnz
flds
sub
movsl
sub
push
add
clc
cmp
insb
sub
clc
mov
int3
add
mov
popa
cmp
aam
loopne,pt
arpl
das
jmp
mov
jno
jb
push
push
add
insb
out
addr16
or
es
pop
sahf
aad
jmp
push
js
stc
outsl
rolb
nop
push
dec
mov
push
mov
push
cmp
lock
inc
xor
into
in
ss
incb
and
push
mov
shlb
push
rolb
cs
rorb
in
inc
ficoms
adc
loop
cwtl
gs
mov
mov
and
jnp,pn
push
mov
popa
dec
or
incb
je
cmp
psubb
sti
mov
sub
dec
lods
cmp
orl
js
sahf
pop
ja
stos
int
jge
mov
negb
or
imul
adc
cmp
jmp
jae
mov
mov
insb
stos
dec
mov
xor
sbb
rcrl
inc
dec
cs
scas
shl
shll
cmove
xor
aaa
jne
or
xchg
mov
lds
sub
mov
test
pushw
sar
ficoml
push
push
push
gs
add
repz
out
push
jns
mov
fwait
lods
repnz
ret
inc
lds
js
adc
dec
pusha
cmp
lock
pusha
shll
fistpll
or
adc
fildl
mov
mov
mov
std
or
addr16
sbb
push
outsl
pop
adc
ss
cmp
jg
into
imul
and
stos
dec
xchg
mov
outsl
and
sbb
jmp
in
std
nop
ss
incl
cli
je
repz
xor
pop
cltd
add
push
ja
pop
xchg
in
movsb
mov
jns
shr
lret
stmxcsr
pop
cmp
xor
stc
std
push
sbb
cmpsl
cwtl
aam
inc
fcomps
out
les
clc
scas
mov
negl
mov
ret
jnp
adc
sub
inc
dec
mov
leave
push
xchg
mov
or
push
lods
gs
xchg
arpl
dec
jne
iret
sub
sbb
lret
mov
sub
xor
ffreep
test
mov
push
lea
fdivrs
outsl
stos
adc
jl
xchg
and
jns
outsl
shrb
push
hlt
std
cmp
push
fwait
test
mov
push
pop
arpl
imul
lods
in
xchg
sti
fsubrl
sub
addr16
jg
mov
movsb
pop
mov
loopne
push
mov
into
push
out
popf
loope
addr16
lahf
fdivl
call
mov
mov
insl
clc
in
xor
ret
cs
sub
add
adc
xchg
js
test
jl
sbb
push
jae
push
push
dec
cmp
dec
xchg
fistps
pop
push
inc
push
cld
sarb
test
or
mov
inc
cmc
pop
lock
mov
insb
sub
shl
inc
adc
jne
jge
inc
add
in
jl
cwtl
out
pusha
mov
cmp
jb
enter
into
xchg
jl
shrl
mov
cmp
and
xor
dec
xor
mov
call
mov
in
rcl
fmuls
sbb
push
or
or
mov
fcmove
inc
mov
outsl
rolb
test
sub
push
xchg
pop
cld
daa
inc
push
test
mov
xor
sbb
cmp
adc
dec
cmp
ja
mov
cmc
dec
xchg
dec
xor
gs
popf
adc
bound
adc
xchg
or
sbb
pop
test
sarb
je
ss
mov
addl
mov
mov
aaa
pop
adc
mov
push
fcmovu
adc
mov
cltd
sub
adc
in
xchg
dec
dec
je
mov
push
and
or
pop
cli
ja
leave
mov
pop
ljmp
pop
lds
rclb
xor
cmc
out
xor
movb
ljmp
mov
and
inc
scas
enter
mov
mov
stc
adc
xlat
jg,pt
shrb
cmp
not
mov
jmp
fiadds
push
or
sarl
pop
rcrl
bswap
gs
and
and
pushf
jo
adc
jbe
push
andb
fisttpll
and
inc
test
dec
divb
imul
leave
mov
pop
cmp
push
in
mov
lea
mov
pop
pop
sbb
push
inc
repnz
fildl
dec
ret
jecxz
movsl
into
mov
cmp
jg
mov
fisubl
dec
out
test
mov
push
dec
xchg
fcoms
in
add
sub
jae
nop
stos
dec
jl
mov
andl
mov
out
mov
xchg
enter
mov
xchg
mov
lock
push
xchg
loopne
mov
adcb
aam
sbb
and
xor
mov
out
dec
inc
jnp
daa
and
cmc
push
pop
add
inc
add
xor
sbb
and
xor
popf
dec
test
int3
test
dec
jg
lock
call
push
lcall
cltd
lcall
push
inc
and
pop
xor
test
sarb
xchg
loopne
mov
xchg
add
push
mov
xlat
imul
inc
cmp
or
xchg
xor
cmp
jo
sarl
fbstp
addr16
test
cmp
dec
stc
hlt
sbb
dec
sbb
pop
add
ljmp
jbe
ja
xorl
jp
pop
sub
xorl
cmpsb
call
inc
repz
cmp
rcr
mov
stos
ror
cmpsl
dec
dec
push
adc
cmp
dec
add
push
repz
pushf
mov
gs
cld
jp
cmp
xchg
push
xor
jle
xchg
lds
adc
ficompl
mov
popa
fdivp
and
mov
out
loope
xor
scas
jnp
movsb
xlat
sahf
outsl
cld
insb
aaa
sbb
ja
mov
pushf
call
sti
shll
repz
dec
inc
pop
mov
or
dec
aaa
in
lcall
xchg
pop
sub
js
in
pop
pop
ss
and
ljmp
scas
jne
mov
push
push
mov
ret
inc
insl
inc
adc
pop
movsl
cmp
je
xchg
fstl
mov
adc
bound
dec
xchg
dec
adc
mov
lret
push
rorb
icebp
xchg
mov
cmc
lcall
sub
insb
testl
or
or
addb
popf
lret
lods
std
mov
test
shrl
lret
mov
stos
adc
sub
sti
movsl
stos
leave
imul
rcl
fidivs
push
jp
in
mov
inc
inc
push
add
bound
dec
roll
ficoml
and
insb
push
jne
mov
in
pop
lret
outsb
sbb
cld
push
repnz
dec
and
adc
ficoml
cld
mov
pop
scas
gs
xor
jb
or
lcall
xor
mov
aad
aad
jecxz
loope
xlat
in
outsb
mov
mov
mov
cmp
adc
je
mov
test
jp
xor
loop
outsb
fs
ss
pop
shl
and
cmp
push
jle
push
mov
xchg
xchg
mov
out
cmpsl
add
mov
aam
mov
jle
xor
movsl
pop
ds
or
scas
jnp,pt
arpl
adc
or
lods
dec
adc
call
orb
sbb
aad
jg
mov
xchg
aam
test
aad
je
and
cmc
dec
inc
cmc
sbb
in
and
lret
mov
std
inc
mov
cli
mov
sbb
ds
loope
loop
adc
pop
jo
mov
stc
mov
jecxz
scas
lcall
aas
lret
adc
jg
push
mov
pop
mov
fs
jge
inc
repz
dec
test
daa
faddl
sti
mov
jae
repnz
xor
idivb
and
jecxz
testb
shlb
aas
pop
mov
cmpsl
cmpsb
daa
insl
enter
dec
test
pushf
stc
mov
mov
jl
insb
call
subb
roll
jp
mov
pop
xchg
jbe
daa
inc
push
mov
xchg
in
cli
and
mov
negb
outsl
fstpt
xor
in
fwait
jae
sub
out
add
or
arpl
sbb
scas
js
test
ja
je
iret
xchg
and
pop
mov
jmp
aam
jnp
jns
jp
es
push
dec
fcompl
lcall
testl
mov
idivl
stos
test
pop
aad
test
add
je
push
cmovno
inc
mov
add
jecxz
test
leave
call
outsb
xchg
popf
mov
pop
cmp
adc
add
pop
sbb
xchg
mov
mov
dec
pop
lea
imul
xchg
sbb
iret
scas
lds
rcrl
dec
mov
xor
mov
ret
insb
and
clc
pop
inc
push
cmp
adc
movsl
inc
addl
mov
mov
xchg
int3
add
sub
leave
or
push
mov
or
xor
mov
enter
xchg
dec
fsubrs
ljmp
dec
js
adc
cmp
xor
or
call
aam
mov
and
sbb
les
stos
ffree
dec
cwtl
ja
push
inc
xor
add
mov
jge
cltd
lock
gs
or
cmp
mov
xchg
mov
fistl
ja
add
dec
fs
cs
and
mov
pusha
or
inc
push
addr16
movsl
sub
pop
mov
nop
test
sbb
aam
popa
sbb
lods
shll
jno
fnstcw
xchg
data16
sbb
test
dec
shl
icebp
movl
mov
pop
jnp
int
loop
bound
sub
push
cmc
std
sub
fwait
mov
lahf
adc
dec
pop
mov
xor
sub
cmpsl
out
int
and
and
out
jle
mov
xchg
fsubrs
jb
xor
jecxz
rolb
insl
inc
fldenv
in
gs
xchg
dec
pop
inc
movsl
lret
inc
in
into
and
jbe
sub
inc
cmp
sbb
movsl
pop
push
push
clc
sar
dec
gs
cld
ja
xchg
pop
lret
pop
das
ljmp
in
ja
jp
cmovg
icebp
xchg
in
mov
addr16
adc
add
inc
fisttpl
xchg
xchg
add
enter
mov
mov
cmpsl
mov
gs
jg
xchg
or
xchg
cmp
xchg
lret
pop
pop
mov
mov
testb
inc
int3
lcall
popf
repz
cld
sub
mov
pop
fs
cld
mov
ss
cltd
and
clc
jns
push
adc
enter
dec
or
insl
xor
jno
int
push
lea
xorl
inc
mov
js
xlat
pop
jg
imul
push
push
cmp
or
push
adc
rorb
xor
sbb
es
bound
sbb
push
fwait
and
adc
push
loop
mov
cmpsb
std
imul
in
je
mov
inc
sbb
adc
and
cmp
imulb
jno
movsb
dec
jg
dec
mov
jno
pop
pusha
rcrl
jne
sbb
pop
in
xor
jbe
pop
mov
sub
std
push
and
xchg
sbb
imul
clc
std
dec
inc
mov
mov
adc
rclb
push
mov
mov
inc
hlt
shl
scas
or
dec
sub
or
push
sbb
cmp
aad
fbld
scas
mov
pop
cmp
aam
or
push
jge
xchg
out
adc
mov
fwait
dec
sub
lret
adc
std
pop
push
jne
or
xchg
les
push
ljmp
sbb
imul
xor
daa
push
ds
adc
mov
add
shll
pop
fisttpll
out
call
jae
xchg
xor
dec
mov
fucompp
aam
icebp
divb
inc
out
or
div
in
adc
popa
cmp
sbb
rclb
popa
daa
in
or
pop
mov
add
mov
das
mov
leave
addr16
dec
jmp
lds
adc
test
inc
sub
test
push
push
sub
fisttpl
in
cmpb
push
xchg
outsl
xor
insb
lods
xchg
sbb
sbb
xor
repnz
sbb
imulb
mov
and
mov
imul
jbe
or
aas
repnz
sbb
sub
scas
pop
jbe
in
popa
adc
outsb
ficompl
sbb
push
shrd
push
jno
arpl
lahf
sti
mov
pop
inc
adc
out
xchg
add
sbb
loop
pop
mov
rol
incl
test
rolb
mov
lret
repz
aas
push
es
jnp
pop
ljmp
cmp
xchg
insb
popl
pop
fmuls
fnsave
pop
add
paddd
xchg
inc
push
add
mov
xchg
cwtl
cmp
mov
pusha
out
pop
jae
negl
xlat
in
lcall
lcall
inc
jle
adc
call
lret
push
daa
sarb
or
ficoml
inc
xchg
adc
fs
data16
xchg
jmp
dec
mov
adc
adc
shr
jl
stos
repz
inc
pop
sub
push
in
mov
jp
lea
imul
scas
xchg
and
int
loopne
dec
lahf
repnz
ja
shr
cwtl
pop
add
lods
lea
cmp
lea
mov
in
loop
and
into
mov
mov
push
mov
inc
dec
dec
imul
mov
cmc
xor
js
daa
fwait
subb
out
jnp
pushf
cld
hlt
adcb
pop
add
mov
jg
int3
sub
pop
xor
jmp
cli
es
cs
add
hlt
push
mov
lds
stos
lods
xchg
repz
cmpsb
in
or
insb
lock
das
cltd
mov
pop
lds
jae
mov
icebp
jp
imul
mov
movaps
jb
fiaddl
data16
repnz
xchg
jg
js
mov
into
pop
pop
repnz
out
xchg
aam
dec
popa
vcvttsd2si
aam
adc
push
out
sti
insl
iret
sbb
mov
mov
jl
jmp
push
ja
jnp
pop
mov
je
bound
add
test
xchg
insb
mov
or
sub
ds
lcall
in
out
adc
test
push
sbbl
aam
ror
outsb
aas
fadd
aam
cmp
sub
sti
add
popf
pop
jo
fnstenv
inc
add
stos
jne
bound
adc
xor
cld
pop
daa
hlt
fists
mov
jecxz
jmp
mov
enter
inc
jne
and
rcr
sbb
push
insb
push
xchg
or
mov
mov
out
inc
das
loopne
jne
mov
inc
insl
lods
mov
fldcw
orl
cmp
mov
movsb
gs
add
inc
lods
outsl
and
xchg
sbb
push
lods
js
cmp
ljmp
outsl
sub
loope
push
xchg
sub
mov
pop
pop
inc
cmp
adc
cwtl
push
fdivrs
jp
loop
add
int
je
insl
pop
leave
inc
nop
sahf
push
adc
pop
push
cltd
scas
loopne
inc
mov
mov
mov
dec
push
outsl
loope
push
cmpsl
add
sub
cmp
shll
mov
cmp
xchg
pusha
into
xor
fcomps
cltd
pop
jno
jae
add
dec
aas
or
repz
ror
jl
out
outsl
stc
jge
and
imul
push
push
aam
pop
add
mov
leave
inc
out
movsl
pop
mov
loopne
inc
das
pop
xchg
scas
rol
mov
jecxz
and
dec
mov
ljmp
int
stos
add
add
jno
inc
push
jb
cmpsl
int
mov
imul
out
pop
lret
js
pop
mov
sub
adc
sbb
inc
clc
mov
addr16
gs
jb
mov
popf
adc
stc
xor
xchg
stos
inc
jp
mov
daa
es
mov
jne
jmp
mov
adc
clc
loopne
dec
decl
dec
inc
mov
mov
push
psubsb
cltd
pop
loopne
test
int3
xorb
dec
addr16
xchg
jge
leave
cmp
adc
lods
pop
les
aam
pop
int3
std
push
cs
fdivr
mov
sbb
and
mov
jg
mov
jb
push
das
jl
cltd
lcall
sub
fbstp
xor
mov
pushl
js
notl
cmp
bound
mov
insl
sahf
test
js
push
sub
add
idivl
sub
cmpb
xchg
pushf
rcll
mov
inc
jns
mov
fwait
cld
add
sbb
push
pusha
mov
in
push
jae
cmp
mov
xchg
data16
or
rcrl
movsb
cmp
and
mov
aad
fwait
adc
lock
loopne
leave
repz
sub
lahf
sbb
cs
or
jae
add
inc
jnp
adc
testl
cmp
outsb
fdivl
pop
inc
pusha
scas
lods
push
sub
adc
stos
fdivr
out
cmp
xlat
int
cmp
push
loop
or
or
test
pushf
mov
lret
mov
push
dec
pop
shll
hlt
add
jmp
lea
xchg
movsl
lea
fisubrs
mov
loopne
mov
aaa
cmp
aas
mov
sub
stos
jne
mov
sub
mov
cmp
mov
sbb
lds
adc
sub
xchg
fisubs
out
jmp
fmulp
jb
xchg
iret
mov
test
mov
cs
and
dec
loopne
das
aas
push
std
testb
mov
adc
or
inc
jne
sub
adcb
dec
aas
and
scas
mov
out
out
xchg
sahf
addr16
jbe
mov
add
test
bnd
rcrl
popa
and
mov
xlat
mov
ret
fnsave
adc
das
pop
mov
push
push
cmp
nop
ret
insb
aaa
loope
pushf
xlat
xchg
xor
into
jecxz
mov
out
ret
xor
shll
lock
scas
cmc
sahf
sub
mov
sub
fmul
test
mov
stos
pop
fstl
mov
cmp
cld
mov
or
cmpb
jns
stos
enter
bound
data16
es
jp
aas
outsb
xchg
dec
cmp
xchg
pusha
lret
stc
sub
cmpsb
cmp
fmull
mov
int
xor
rcrl
and
xchg
and
nop
int
sbb
test
loope
testl
lock
call
cmp
push
inc
add
dec
mov
in
in
push
ret
mov
insl
pusha
and
push
fidivl
push
fnstcw
lret
cmp
pop
test
mov
mov
push
dec
add
xor
mov
test
int3
push
add
or
cmp
popl
pop
adc
push
lods
adc
push
mov
daa
ficoms
jb
shrl
sbb
into
and
int3
scas
cltd
dec
sahf
cmp
jb
repz
dec
inc
ja
jmp
mov
jecxz
sbb
int
divl
jns
or
xchg
outsb
inc
mov
inc
stos
xlat
mov
icebp
cwtl
cld
loop
out
shll
adc
test
ds
mov
inc
mov
sbb
into
pop
and
and
adc
das
fiaddl
stos
sbb
xchg
xchg
xor
add
into
and
mov
cwtl
inc
popf
mov
sbb
lea
pop
aaa
sarl
imul
mov
in
push
pop
in
xlat
addr16
std
lea
mov
cmp
push
stos
stos
fsts
push
lea
les
push
ficoms
add
cmpsb
jne
mov
icebp
sbb
or
fldt
cmp
xchg
outsl
jnp
daa
dec
test
or
xchg
adc
test
inc
data16
cmp
pop
inc
repnz
inc
orb
mov
scas
mov
mov
pop
jp
push
test
sub
shlb
dec
mov
dec
icebp
cmp
jg
sti
mov
pop
mov
shrl
mov
pop
xor
stos
icebp
imul
dec
data16
ficomps
out
in
insl
lahf
pop
mov
sti
int
mov
leave
pushf
adc
addr16
mov
gs
shll
stos
inc
aad
xorb
fnstenv
mov
jp
ja
aaa
daa
jg
and
cli
dec
and
subl
pop
add
jmp
scas
int3
push
imul
push
pop
adc
sahf
push
sbb
or
rorb
notl
int3
add
pop
jg
test
xor
and
ret
and
or
fldenv
movsb
sbb
bound
or
xchg
pop
in
mov
and
movl
adc
cltd
push
mov
pop
mov
ret
sub
rolb
jp
enter
inc
movsb
scas
je
aas
inc
stos
and
cs
mov
stos
pop
shlb
dec
pushf
xabort
xor
inc
lret
and
sub
es
jno
adc
outsb
dec
sahf
xchg
dec
or
mov
add
jb
rol
mov
mov
pusha
icebp
sub
add
insl
in
movsl
jne
cli
sub
and
pop
cmp
repz
lock
imul
sub
loope
jmp
std
test
mov
lea
mov
xchg
mov
push
mov
test
lahf
shlb
cmp
push
das
inc
loope
in
out
mov
std
mov
mov
out
mov
cld
leave
outsl
pop
orb
pusha
pop
scas
xor
jmp
data16
mov
mov
fisubs
aad
dec
imul
addr16
xor
sti
jp
jp
inc
jno
lret
inc
fidivrl
inc
inc
fildl
pop
push
divl
hlt
and
xor
inc
jg
cmp
andl
rcrb
or
inc
cltd
mov
das
outsl
or
adc
subl
pop
add
out
int
fidivs
pusha
enter
ret
es
cmpb
jns
xor
in
ret
xchg
je
int3
xlat
push
std
xchg
cmpsb
mov
xchg
bswap
sbb
es
xor
push
mov
add
outsl
cmpb
emms
sbb
push
enter
loopne
adc
sub
adc
push
xchg
sbb
nop
inc
sub
pop
jno
sbb
jle
inc
mov
nop
xchg
and
out
cltd
ret
leave
ficoms
inc
aad
out
xchg
cltd
ljmp
sti
es
cli
pop
mov
pop
ljmp
scas
sbb
sub
bound
push
inc
repnz
cmp
xorb
lcall
movsb
sub
rcrb
and
mov
out
xorl
orb
into
mov
pop
lahf
pop
pop
jle
and
mov
cmpsl
or
sub
inc
pop
sbb
rclw
hlt
jne
push
inc
pop
mov
retw
std
ja
or
pop
add
fsubrp
xlat
pusha
pusha
rcl
movsl
dec
pop
aad
jne
xchg
mov
jl
sbb
shrl
xchg
cmp
cmc
in
cmp
movsb
insl
jecxz
mov
lea
movsb
cwtl
ljmp
pop
andl
loope
or
fs
call
jecxz
mov
fsubrl
dec
ret
add
push
outsl
dec
loop
ja
std
aam
jg
gs
xor
arpl
inc
push
mov
cmp
aam
ds
add
inc
loope
and
data16
xchg
leave
mov
das
mov
xor
inc
pop
insb
dec
xlat
xor
push
in
sbb
jnp
pushf
ret
fwait
ljmp
sub
or
out
jno
sbb
jno
inc
das
pop
movsl
ret
fs
in
insl
cmp
scas
xor
push
cmp
jmp
cwtl
cli
inc
push
or
rol
inc
je
inc
lcall
outsl
pop
loopne
aaa
and
xor
loop
mov
test
fcom
mov
sub
arpl
xchg
xchg
in
movsl
shll
in
outsl
divl
into
and
jno
jnp
out
call
push
pop
or
xor
sbb
push
push
or
vmovaps
sahf
pusha
aas
inc
lahf
push
lret
xor
test
sbb
frstor
xchg
mov
movsl
cmp
in
and
ljmp
mov
cmpsl
lods
lds
add
adc
cmp
push
xchg
addr16
decl
cmpsl
pop
jo
sbb
rcrb
xchg
ja
cmp
sbbl
push
push
and
jecxz
push
mov
insb
sbb
test
std
add
popa
adcb
inc
adc
push
jle
arpl
dec
push
jo
or
jb
lret
rolb
jno
mov
fisubrs
and
and
movsl
or
cli
adc
mov
es
fwait
or
add
sbb
mov
cmp
sbb
fstp
inc
pop
push
cmp
fwait
sbb
xor
and
mov
mov
push
adc
mov
test
xor
jle
imul
sub
adc
pop
int3
scas
cmp
hlt
sub
lret
sub
sahf
mov
sub
mov
push
jbe
out
jmp
pop
fisttpll
fwait
inc
out
pop
inc
jno
jo
pop
inc
jnp
inc
pusha
pop
shll
es
test
lahf
mov
mov
jecxz
loop
ja
mov
loope
mov
mov
rcl
js
out
lret
sbb
shrl
psubusw
sbb
clc
cmp
fld
outsl
ss
push
inc
shll
daa
pushf
pop
jae
mov
jae
clc
sti
or
jns
imul
out
pop
push
xor
xchg
test
inc
and
je
in
lcall
stos
adc
addr16
pop
pop
xor
xor
pop
add
lret
inc
rorb
push
or
stos
rolb
mov
aam
lock
das
outsl
push
mov
push
mov
mov
sbb
sbb
adc
jbe
setno
movsb
test
clc
mov
aas
iret
adc
das
cwtl
mov
dec
push
rcr
push
xchg
nop
or
push
mov
pop
cmc
adc
adc
inc
inc
cmpsb
or
mov
mov
mov
std
mov
jb
mov
in
xor
jbe
mov
cmp
testl
mov
fwait
jne
jle
popa
popa
add
inc
dec
out
push
xchg
mov
mov
mov
fwait
movsw
or
jecxz
mov
xchg
add
imul
cli
adc
sbb
pop
xchg
shl
xchg
push
movsl
ret
inc
lret
bnd
imul
dec
pop
jbe
pop
dec
notb
xor
loope
das
lret
lahf
lods
sub
mov
inc
push
pop
jo
outsb
and
dec
das
ss
test
in
mov
add
and
push
pop
xorl
pop
jo
ret
lods
leave
push
mov
mov
js
sbb
mov
mov
adc
mov
pop
cmp
fldenv
ss
ss
inc
and
test
xchg
sti
jb
negb
popl
test
mov
pop
mov
repnz
xchg
aaa
push
fsubrp
jb
push
and
inc
jg,pt
jecxz
push
je,pt
push
aad
stos
cmp
sbb
icebp
push
xlat
vphaddbd
jp
sbb
dec
aas
inc
fnstenv
out
mov
lahf
and
xchg
dec
gs
pop
mov
popa
pop
das
sbb
sub
cmp
dec
xor
mov
mov
sbb
xchg
repz
adc
mov
mov
jbe
out
scas
shll
mov
aam
imul
mov
mov
inc
out
fcomi
out
jo
incl
cltd
cmp
pushf
out
mov
mov
stos
ds
mov
mov
cmp
aad
movsl
repnz
call
in
frstor
pop
mov
xor
xor
imul
xchg
daa
inc
jmp
inc
out
adcl
fadds
mov
xorl
outsb
inc
jecxz
in
lahf
dec
xchg
adc
icebp
das
fwait
push
mov
cmp
arpl
xor
jmp
dec
dec
nop
out
pop
jg
mov
icebp
push
jle
jnp
inc
mov
xor
xor
call
test
data16
psrld
adc
inc
xlat
mov
adc
fstl
xlat
add
mov
test
push
out
aam
pop
jb
pop
fucomi
or
lahf
sbb
ss
cmp
push
jo
movsl
xchg
xor
adc
imul
ds
sbb
sti
mov
jge
pop
mov
popa
std
insb
xchg
out
or
cmp
push
mov
xor
pushf
std
jo
jnp
jl
or
pop
out
xor
pop
daa
inc
ss
dec
mov
or
inc
fsubrs
bound
add
dec
out
inc
and
xchg
repz
cmpsb
sub
fbld
adc
rcrl
insb
dec
in
ret
or
lea
fwait
lock
dec
cltd
xor
addl
inc
mov
pop
push
push
mov
stos
xchg
repnz
add
xchg
sub
shlb
add
lods
psraw
mov
pop
or
sub
and
jmp
sarl
loope
lods
popf
mov
mov
push
dec
out
test
or
jmp
stos
mov
xchg
jle
mov
dec
imul
andb
je
fidivrl
sub
inc
add
xorb
divb
imul
sbb
jp
adc
jne
fwait
sub
mov
getsec
out
shlb
mov
jmp
rorb
pop
sbb
jne
push
mov
cltd
les
xchg
addb
push
outsl
xchg
sub
sbb
bound
pop
jp
xor
scas
out
out
cli
push
cs
loope
data16
cmp
and
xor
fwait
add
bound
jle
lcall
dec
insl
and
icebp
repnz
insl
aad
add
out
sbb
cwtl
mov
mov
cmp
dec
jae
pop
nop
mov
sbb
orb
stos
cmp
mov
jb
hlt
cmc
adc
icebp
jb
mov
push
sahf
lcall
inc
fmull
sbb
pop
and
pop
push
inc
sahf
stc
push
dec
add
mov
add
orl
dec
call
mov
jnp
call
sub
dec
xor
jbe
pop
mull
mov
ja
lret
jnp
hlt
and
daa
addw
mov
mov
fwait
xchg
xlat
nop
jg
lcall
jg
mov
xor
jae
lcall
xor
fnstsw
fldt
lcall
lahf
mov
pop
insl
or
xlat
pushf
sub
test
jns
jo
push
and
sarl
addl
ja
xor
les
stos
cmpsl
lahf
jmp
outsl
fcompl
adc
dec
cmp
mov
lcall
pop
aad
mov
push
and
xlat
sub
add
xor
cmc
sti
das
xchg
adc
imul
daa
and
movb
mov
cltd
sub
mov
outsl
dec
ljmp
add
int
shlb
bound
cmpsl
or
jae
mov
imul
lock
fnsave
and
jecxz
mov
or
orl
push
mov
dec
push
adc
andl
in
cmc
dec
adcl
cli
loope
mov
or
xor
aaa
push
popa
stos
loopne
add
lods
push
sbb
xor
rclb
into
or
and
pop
and
xchg
push
and
or
push
hlt
adc
movl
pop
sahf
cld
fidivs
mov
mov
jp
push
stos
adc
xchg
fsts
stos
cltd
int
cmp
pop
pop
fimull
iret
pop
inc
les
mov
xchg
jp
push
cmp
fsubr
call
or
mov
ficoms
scas
rorb
inc
and
mov
int3
mov
xchg
testl
push
sub
mov
test
add
mov
pop
mov
jp
scas
enter
nop
lods
stc
aad
pop
add
inc
idivb
test
jg
mov
out
pop
mov
adc
call
not
jmp
jg
jecxz
push
in
mov
inc
lods
mov
cmc
and
rorb
jmp
and
cmp
test
jle
sahf
jge
push
js
inc
jo
xor
mov
xchg
arpl
les
imul
xchg
dec
mov
sub
or
sbb
jbe
sub
push
pop
ja
xchg
dec
push
cmp
xor
jno
xchg
add
push
or
adc
dec
scas
stos
loop
fs
call
fildll
cmp
or
mov
mov
or
mov
repz
pop
push
sub
mov
mov
inc
stos
jl
nop
daa
mov
imul
mov
shlb
or
add
rolb
imul
test
pop
add
rclb
stc
mov
fildl
fwait
sub
push
push
adc
enter
sbb
in
stc
xor
jno
pop
imul
lret
in
jne
and
mov
push
push
ret
movsl
mov
inc
adc
push
sub
out
imul
or
sub
jb
jne
mov
movsl
sbb
pop
lock
cmc
and
jge
pop
movl
and
movsl
mov
ljmp
jo
add
fsubr
push
loop
stos
jbe
xor
pop
mov
push
sbb
ljmp
xlat
or
test
mov
and
xchg
cmc
cmp
into
call
cld
mov
ret
imul
sub
stc
daa
pop
cmc
cmp
imul
sub
decl
nop
pop
xchg
cmp
add
pop
dec
out
call
mov
mov
pop
push
cmp
pop
out
xchg
rcll
popf
scas
add
pop
sub
cmp
adc
outsl
jnp
jae,pt
and
aas
sub
ret
es
sarb
or
xor
adc
push
shll
mov
outsl
sub
fwait
xchg
ljmp
xor
inc
and
cmp
ja
in
out
mov
pop
adc
repnz
pop
dec
xorl
mov
pop
and
out
sti
in
push
cs
mov
add
fadds
push
aam
xchg
push
inc
inc
pushf
fidivrl
cmp
in
inc
addr16
jmp
rcrl
mov
popa
mov
dec
adc
test
aad
pop
cltd
lret
jns
inc
push
pop
cwtl
fs
or
in
xchg
xchg
cwtl
jb
push
fdivs
aaa
push
cmp
ljmp
mov
ret
out
and
add
int3
dec
aas
mov
sbb
loope
arpl
jo
and
jg
mov
pop
sar
mov
out
mov
and
or
lret
idiv
mov
inc
mov
cmp
push
xor
pop
jmp
xchg
scas
pop
add
push
pop
adc
add
xchg
cmpsb
cmc
and
and
xor
pushf
mov
sub
icebp
or
jl
jae
xor
and
or
xor
in
pop
lds
push
adcl
cli
mov
push
jle
push
mov
stos
into
xchg
cmp
add
outsl
xchg
jbe
cmpl
scas
xorb
pop
sahf
mov
mov
sahf
sahf
cmpsl
hlt
mov
cld
lret
adc
jle
in
mov
cwtl
iret
idivl
dec
js
add
cwtl
xchg
xor
cmp
sub
xor
pop
insb
scas
cmp
mov
jmp
cmp
mov
lcall
jae
nop
mov
or
or
js
test
dec
fdivrl
mov
mov
rorl
pushf
stos
jge
sbb
sbb
mov
sahf
fcoms
fstpl
ljmp
jg
cmp
mov
push
pop
loopne
out
adc
ret
cmp
int
cli
cli
into
loope
xchg
and
mov
rcr
nop
fnstsw
add
cwtl
lods
repz
mov
xchg
repnz
scas
and
fisubrs
adc
ret
add
mov
cli
xchg
mov
mov
into
cltd
addr16
leave
movsb
xor
insb
roll
out
in
andl
dec
ds
insl
loopne
push
jbe
aaa
cmp
cmp
mov
xchg
dec
jae
loope
loopne
and
insl
fwait
out
mov
sbb
out
mov
cld
cmp
fistpl
push
sbb
sub
rcl
jbe
lret
mov
mov
mov
lea
xchg
push
pusha
push
jl
pop
aas
test
and
cld
ret
cmpsb
jbe
outsl
repnz
pop
add
adc
mov
sbb
and
mov
or
and
repz
mov
lret
sbb
mov
xor
jmp
xchg
daa
call
scas
pop
xchg
xor
dec
jle
jbe
arpl
add
cmp
rcrl
cs
mov
add
cs
xchg
std
imull
and
mov
or
mov
mov
push
adc
rcll
gs
xchg
stc
pop
push
fimull
xchg
mov
xor
aas
test
mov
sub
mov
repz
mov
xchg
mov
je
cltd
sbb
dec
xchg
stos
call
sar
nop
sub
xor
or
dec
insb
push
daa
cmpsb
jp
lahf
movsl
into
jnp
mov
cmp
dec
ds
pop
mov
add
dec
daa
out
nop
or
adcb
and
aaa
cmp
add
inc
mov
mov
sbb
in
pop
in
test
or
aad
jo
testl
sahf
iret
inc
js
sbb
and
mov
add
sub
mov
insb
jns
out
es
or
mov
fidivrl
fwait
mov
dec
arpl
pop
pushf
lods
rorl
mov
mov
sub
inc
pop
inc
nop
and
daa
adc
arpl
xchg
xor
mov
loop
inc
scas
xchg
xchg
dec
lea
and
mov
cs
adc
xchg
sbb
dec
into
sub
out
mov
sbb
add
push
in
xlat
rcrl
adcl
mov
daa
adc
mov
pop
add
std
sbb
mov
cld
inc
adc
mov
sub
rcrb
test
cmc
adc
mov
mov
scas
inc
gs
cltd
ja
jb
and
mov
inc
clc
test
lret
sbb
inc
in
int
xchg
mov
popf
cmp
pop
xor
mov
mov
or
adc
dec
decl
pop
mov
cltd
icebp
cmpsl
cmpsb
push
mov
movsl
loope
insl
dec
arpl
xchg
mov
imul
push
movsl
rolb
jns
ret
dec
mov
outsb
mov
push
call
sbb
xchg
pop
int3
and
add
ret
mov
stos
inc
mov
pop
pop
movb
ss
mov
fwait
dec
fs
std
push
clc
push
lret
int
sub
adc
jl
movsl
and
out
mov
cli
rcll
fwait
repz
es
pop
repz
cmc
cli
sti
rorl
mov
fwait
inc
adc
push
or
push
jb
in
fstl
xor
bound
sbb
add
or
mov
ret
mov
aas
loope
ret
inc
cltd
dec
cli
aam
movsb
mov
jmp
in
inc
mov
xchg
mov
jb
xchg
push
loopne
int3
jle
jnp
popl
int
loopne
jg
shl
loope
dec
das
ror
cli
pushf
jno
je
lea
xor
ret
mov
insb
divb
std
nop
dec
fmul
push
repz
test
in
call
push
cmp
dec
dec
orl
mov
aam
data16
inc
or
jp
fstps
xor
cld
sbb
mov
fbstp
and
inc
mov
mov
add
sub
or
int3
jge
aas
and
adc
jb
push
jno
jnp
jae
mov
jne
xchg
decb
mov
mov
add
sub
mov
inc
jae
cli
iret
rclb
lods
mov
jle
movsl
inc
test
mov
aas
pop
fbld
cmp
xlat
into
mov
adc
lret
jae
cli
push
std
mov
fdivl
or
dec
imul
pop
jae
jne
pop
pop
sub
dec
popa
mov
inc
mov
outsb
jl
movsl
data16
into
imul
arpl
stos
mov
sbb
or
adc
int3
mov
xor
ret
xchg
cmp
mov
test
mov
sbb
adc
pop
jecxz
xchg
xor
stos
dec
lahf
in
test
enter
jbe
fsts
orps
test
pop
mul
add
imul
fcmovbe
add
pop
push
into
pop
cmp
idivl
mov
inc
pop
add
or
pop
xchg
mov
outsb
outsl
mov
pushf
aam
les
mov
ss
mov
aam
mov
or
mov
inc
loop
adc
inc
sub
mov
pop
stc
mov
mov
int
ja
mov
or
std
mov
or
mov
push
stc
cwtl
sub
sbb
inc
adc
jmp
popa
add
pop
mov
pop
call
pop
test
xorl
add
inc
dec
fld
test
and
and
mov
aam
test
mov
add
add
cmp
and
pop
dec
test
mov
pop
jno
xor
sub
fsubrs
mov
sub
push
mov
fyl2xp1
inc
jg
fstps
dec
out
je
push
mov
jle,pn
jae
and
adc
pop
adc
int
xchg
sbb
sbb
sti
fisubs
pop
mov
popf
ficompl
pushf
lods
sbb
push
les
mov
lock
mov
push
mov
insl
mov
std
leave
add
loop
or
mov
pop
and
xor
sahf
xchg
inc
cmp
insl
adc
jp
inc
mov
jnp
jge
xor
mov
jbe
pushf
pop
addr16
push
or
dec
or
imull
jge
sahf
test
lods
mov
clc
in
outsb
mov
arpl
or
jmp
adc
cmpsl
aaa
movsl
rcrb
mov
xchg
lcall
dec
icebp
lock
hlt
mov
push
adc
shrb
mov
mov
xlat
aad
shr
negb
outsl
and
xor
mov
testb
sbb
mov
mov
sbb
jmp
adc
ja
mov
and
pusha
out
das
ljmp
push
dec
dec
std
lea
sub
imul
mov
xchg
mov
ljmp
loope
jg
into
sub
dec
adc
loopne
push
pop
pop
sbb
mov
call
cli
mov
sbb
imul
mov
dec
and
in
push
pop
ljmp
shr
mov
jae
outsl
jae
leave
movsl
and
pusha
add
aad
xor
in
fildl
sahf
mov
lock
push
mov
mov
mov
dec
repnz
ljmp
pop
add
sbb
call
in
test
in
mov
je
leave
inc
sbb
inc
fiaddl
nop
jno
inc
stos
inc
cwtl
inc
pop
sub
and
pusha
test
mov
sti
in
cmp
bound
out
jno
pop
add
lcall
xchg
pop
xor
mov
add
mov
scas
icebp
xchg
and
adc
inc
cmp
roll
nop
push
pop
xchg
cmp
in
push
rolb
xchg
addr16
in
cmp
dec
addr16
addr16
aas
sbb
int3
jle
sub
test
daa
pop
into
gs
pop
xorl
imul
sub
aad
pop
cmp
pop
mov
or
xor
dec
push
lods
sub
cmp
scas
mov
sahf
sub
leave
xchg
xor
jg
push
or
xor
mov
cs
fsubs
jmp
frstor
je
sahf
inc
dec
data16
push
and
jae
lock
fs
shlb
sahf
cli
js
jecxz
in
test
insl
cmpsb
add
ret
mov
mov
push
daa
sub
repz
pusha
push
or
and
out
mov
sbb
jl
shl
xchg
vmovlps
stos
adcb
xchg
test
mov
mov
in
flds
nop
push
outsb
cmpsl
or
jns
loope
fs
jo
adc
adc
fsubs
into
popl
insb
add
jae
stos
pop
cs
push
xchg
sbb
fmuls
lcall
lcall
scas
jne
pop
push
mov
cltd
popa
pushw
out
lock
es
adc
fdivl
ljmp
arpl
fdivs
iret
xchg
push
pop
dec
and
cmpsb
je
sti
gs
xchg
mov
push
xchg
sbb
js
cld
pop
xchg
push
rol
loope
mov
push
pop
or
mov
popf
pop
jno
cwtl
lcall
and
fwait
sub
int3
pop
shr
sahf
push
xchg
cs
mov
ror
icebp
mov
out
inc
iret
fistps
dec
inc
jne
inc
rcrl
add
lods
xor
out
jnp
fimuls
xchg
cmp
sub
cmp
int
inc
jecxz
adc
lret
push
int
shrb
imul
aam
nop
xor
int
leave
loope
and
fldl
and
into
outsb
push
mov
std
leave
sbb
mov
cld
les
and
out
dec
xchg
movsl
sub
xchg
mov
ljmp
mov
ds
mov
mov
insl
int3
call
sarb
xchg
loope
jns
data16
pop
das
jg,pt
loope
mov
jl
sahf
jp
mov
clc
xlat
fsubr
das
imul
nop
cltd
xor
mov
loopne
cmp
add
cs
xchg
push
sbb
es
jbe
outsl
lahf
imul
stos
popa
pop
dec
addb
out
sarb
lea
sub
sbb
jle
mov
mov
test
mov
add
jo
pop
shlb
popf
lret
jge
xchg
movsl
stc
push
fwait
add
pop
jns
stos
enter
inc
scas
ds
cld
lods
imul
pop
mov
test
pop
cmc
sarl
lret
jecxz
pop
inc
aad
in
xorb
das
cmp
dec
jno
adc
pop
xchg
lods
daa
jg
sbb
and
mov
or
rcrb
incb
cwtl
lds
or
lds
es
enter
out
ret
sbb
push
sahf
xor
inc
fidivrs
push
xor
mov
lods
ret
mov
scas
stos
pop
or
lock
xlat
std
clc
pop
in
fdivl
jle
int
loope
fmull
stos
mov
mov
mov
cmc
xchg
mov
and
sub
xor
mov
nop
data16
push
jl
cmp
gs
sub
mov
or
pop
cmpsl
jl
jno
pop
sbb
mov
mov
sbb
scas
cltd
adc
dec
pop
cmp
xchg
pop
mov
cmpl
movsb
pop
nop
xchg
mov
add
out
push
in
push
shlb
ss
sti
push
cmp
imul
mov
jnp
or
into
iret
sti
or
pop
or
sbbb
call
jg
data16
out
movsl
pop
ja
xchg
je
lods
aaa
jbe
xlat
es
push
lock
xchg
ds
add
imul
test
cmpsl
es
pop
fwait
dec
cld
test
ficompl
mov
js
jp
das
add
scas
rcrb
lods
mov
mov
fdivr
push
inc
mov
das
inc
fadds
fcomp
cmp
sub
mov
mov
aas
pop
adcl
cmp
fsubrs
and
inc
out
jo
fmuls
ljmp
or
test
cld
push
fwait
lret
mov
arpl
dec
adc
and
dec
lcall
movsl
das
pop
clc
push
push
mov
mov
stos
stc
rcrb
mov
xor
sub
lret
xchg
test
and
in
sub
mov
push
ret
repz
xchg
ljmp
lretw
sub
fadd
lret
dec
mov
cmp
mov
jmp
push
out
bound
cmp
in
adc
lock
aad
lret
xchg
repz
scas
mov
xchg
f2xm1
xchg
sub
fs
xchg
or
xchg
out
sub
movsb
dec
sbb
add
icebp
testl
mov
xchg
xor
adc
jne
jb
mov
repz
shll
pusha
mov
adc
sbb
fadd
jmp
movsl
in
fwait
jmp
push
dec
popf
pop
roll
add
pop
jl
arpl
adc
jbe
adc
jp
mov
out
mov
cwtl
mov
jge
and
mov
gs
idivb
jmp
jl
test
push
loop
lahf
mov
xchg
enter
xor
cmpsl
mov
add
mov
popa
inc
adc
mov
lahf
outsb
jecxz
adc
je
sbb
push
mov
je
fs
loopne
jmp
or
push
dec
andl
fidivl
cli
push
jns
inc
icebp
lret
addr16
push
iret
arpl
out
loope
imul
ret
xor
or
dec
xlat
mov
jmp
orb
jge
dec
pop
mov
test
das
cltd
je
mov
inc
test
test
pop
cmc
push
sub
es
cltd
scas
aad
adc
mov
pop
mov
fimuls
movsb
cmpsl
fstl
pop
or
mov
and
pushf
incb
lahf
and
fsubs
mov
in
sub
test
testb
dec
enter
push
sub
mulb
jb
mov
xor
sub
push
and
daa
insl
mov
fmuls
sub
mov
mov
xchg
and
jbe
lock
nop
push
pop
pop
std
xor
dec
bound
daa
insl
gs
add
xchg
push
outsl
dec
enter
push
adc
in
mov
sti
mov
daa
dec
jns
xor
jmp
mov
xor
mov
test
movsl
ficomps
outsb
dec
jmp
sub
outsl
loope
hlt
cmovp
js,pn
mov
into
es
and
test
outsb
jno
push
into
icebp
test
adc
movsb
lea
movsb
dec
repnz
sub
adc
cmp
insl
out
shll
dec
daa
mov
fnstenv
ljmp
xchg
fadd
popa
pop
push
jns
dec
dec
pushf
xor
inc
bnd
popf
in
in
jge
push
adc
mov
xchg
and
inc
cmp
add
cmp
fisubrl
out
lahf
cmp
adc
fcompl
jae
aad
js
sbb
in
xor
dec
fisubs
int3
cmc
fistpl
mov
out
mov
out
jmp
insb
pop
and
pop
test
test
mov
xchg
mov
sbb
lods
aas
cmpsl
push
inc
jle
jb
fldl
dec
xor
stos
lea
dec
xchg
lret
or
out
mov
ret
sub
xchg
fmull
outsl
mov
dec
enter
sub
xor
push
inc
xor
shlb
push
sahf
lods
push
push
jbe
stc
int
sub
mov
and
xchg
cmp
push
and
cmc
cmp
in
add
stos
aaa
iret
pop
bound
push
adc
and
cmp
mov
shlb
jmp
mov
test
mov
adc
jg
clc
sbb
ret
mov
xor
test
jmp
mov
pop
xchg
pop
decb
gs
cmp
push
push
xchg
push
push
sbb
out
inc
pop
out
pop
in
push
mov
add
ds
sti
std
nop
or
and
insb
scas
sbb
adc
lcall
push
cmp
mov
adc
add
out
mulb
push
cmp
cvtps2pd
pop
fldenv
cmp
pop
xlat
mov
cs
lock
test
pop
cmpsl
cs
jbe
xor
fisubrl
addr16
xchg
pop
stos
mov
fbstp
sub
rolb
dec
or
jmp
test
das
cmpsl
insl
andb
xlat
and
loop
gs
sbb
arpl
xchg
cltd
pop
fcmovnu
notl
stos
inc
pusha
insl
inc
sub
and
inc
aas
xchg
push
flds
cmp
pop
or
push
mov
adc
roll
rol
mov
push
fcoms
xchg
or
iret
cmc
pusha
lahf
xchg
xor
mov
test
roll
jbe
les
lds
mov
mov
jecxz
sub
or
loop
jb
pop
dec
pop
sub
ficoml
inc
adc
mov
fisttps
xor
lahf
or
sub
rclb
lahf
repnz
xor
push
sbb
clc
stc
push
scas
xor
add
test
jg
ljmp
cld
mov
stc
fisttpll
sbb
imul
jb
sbb
dec
dec
out
jns
icebp
clc
inc
in
inc
jl
lcall
inc
daa
mov
add
mov
xchg
clc
xor
imul
iret
jle
or
push
stc
pop
sbb
movsl
and
sbb
outsb
adc
adc
mov
jg
sbb
adc
jo
sbb
adc
xorb
test
mov
add
inc
cmp
jo
ret
int3
cld
gs
out
pop
push
push
pop
jg
lret
jle
cwtl
mov
push
loop
push
cwtl
cltd
mov
lret
pop
mov
aam
mov
cmp
inc
mov
pop
dec
xchg
xor
mov
movsl
jae
nop
add
mul
mov
cmpsl
cs
imul
mov
sub
inc
ljmp
lods
push
sahf
sarb
dec
out
lock
fisubs
pop
clc
push
addr16
cmp
mov
pop
repz
pop
divl
mov
push
sub
jp
dec
mov
mov
xor
mov
push
sub
orb
cmpsl
movsb
cli
push
add
jbe
pop
int3
enter
call
xchg
jb
data16
mov
xorl
mov
scas
xchg
add
sub
out
enter
mov
fisubs
jne
in
aad
cmp
movb
inc
fldcw
pop
sbb
int
rcrb
daa
neg
or
mov
sbb
pop
out
or
mov
insl
sub
sbb
cmp
sti
adc
js
lods
fcom
bound
mov
clc
hlt
mov
mov
aam
xor
popa
dec
iret
icebp
es
jle
cwtl
add
jnp
pop
mov
xor
push
xor
sbb
push
scas
inc
out
add
jns
xor
add
xor
cmp
jne
fidivs
mov
jb
jae
sub
inc
mov
sahf
mov
push
inc
mov
xorb
test
fwait
sbb
in
push
pop
cmpsl
daa
pop
cmp
ret
sahf
fildl
fistl
jle
xchg
shlb
cmp
fstpl
and
jne
pop
in
jno
inc
or
ja
addl
je
outsl
in
dec
sti
rorb
arpl
pusha
sub
and
pop
aaa
xchg
push
ljmp
pop
rcr
ss
mov
pop
lock
mov
repz
dec
ficoml
add
fs
push
push
push
popa
fwait
mov
out
aam
cmp
cmp
mov
mov
ds
fsts
ret
fisubl
mov
xor
xchg
mov
dec
fisttpll
jne
and
aas
lahf
xchg
leave
adc
sub
mov
hlt
call
cwtl
fisubs
rcl
sbb
jl
int3
ffreep
push
rcr
rcll
lds
mov
inc
jns
pop
xchg
add
jnp
aam
addr16
jge
push
mov
ss
ja
and
mov
inc
bound
mov
jno
inc
outsb
xchg
mov
ret
pop
cld
iret
fld
stc
stos
jns
mov
ja
popa
int3
dec
out
jp
cmp
in
cmp
mov
mov
test
cmc
xchg
adc
out
stos
cmpsl
dec
and
inc
out
fbld
sbb
lea
ja
jb
std
sub
ret
in
inc
sub
div
lock
cs
jge
lret
roll
mov
push
mov
in
pushf
pop
jmp
mov
xchg
cld
adc
mov
int
ltr
and
jnp
test
mov
scas
pop
pop
popf
adc
std
in
pusha
mul
ljmp
lcall
lds
aas
dec
pop
cmpsl
cmp
stc
nop
icebp
dec
int3
sbb
cmp
into
pop
cmp
mov
and
icebp
dec
mov
test
scas
das
loopne
mov
popf
test
stos
scas
push
xchg
adc
or
cmc
jg
inc
pop
stc
dec
in
add
pop
or
mov
and
lds
cmc
adc
xor
mov
push
mov
push
fisubrl
mov
xchg
add
lods
inc
addr16
repz
lods
dec
and
adc
ffreep
lock
xorl
sbb
loop
je
mov
cs
add
loop
ud1
sbb
xchg
insb
mov
inc
loope
xor
std
cwtl
cwtl
aam
mov
out
fs
cld
dec
not
mov
add
insb
enter
enter
loop
in
mov
jl
sbb
scas
pop
fimull
loope
fistpl
pusha
push
fldlg2
jp
daa
sti
dec
or
hlt
hlt
sti
cli
in
popa
data16
mov
push
adc
subb
jb
dec
std
and
lcall
xlat
scas
push
pop
arpl
sub
daa
xchg
xchg
ret
sub
cld
and
lahf
mov
daa
outsl
ss
fsubrs
int
jge
xchg
mov
xchg
ror
lret
adc
mov
outsb
or
mov
push
call
ja
inc
inc
jne
add
adcl
dec
mov
imul
mov
mov
sahf
pop
jmp
and
xchg
sub
testl
jo
cmp
pop
sub
ljmp
pop
push
push
mov
insb
shlb
push
repz
hlt
ucomiss
gs
insl
pop
or
and
adc
push
sub
cmp
lds
xchg
outsb
sub
pop
push
icebp
cmpsb
sahf
jg
fildl
dec
mov
pusha
cmp
repz
shll
mov
adc
add
pop
sbbl
dec
scas
movsb
push
xchg
mov
inc
mov
scas
lret
je
cld
fidivs
jge
or
andl
lock
loop
sahf
popf
je
or
push
xchg
jbe
add
cmp
or
lret
pop
cmp
mov
test
xor
xor
xlat
fdivl
data16
jecxz
lods
push
rcl
push
dec
inc
sub
cwtl
cmp
jle
xchg
js
subb
and
test
mov
dec
push
sub
stos
mov
cli
cs
int
repz
and
lock
js
inc
add
sbb
fcomps
std
push
fstl
mov
movsl
call
test
xlat
fistpll
push
imul
adc
fsubrl
ljmp
test
pop
iret
sub
sbb
jne
xchg
loop
sbb
adc
jl
or
fildll
push
js
stos
test
popa
scas
in
cmp
int
lds
cmp
dec
adc
in
daa
dec
adc
fldl2t
xchg
fcoms
inc
mov
and
cld
jge
or
jo
jns
repz
out
add
pcmpeqb
pop
push
cltd
bnd
aaa
adc
arpl
frstor
or
cmpsb
dec
loop
dec
add
and
and
push
dec
ja
mov
sbbl
out
xor
fwait
repz
popf
out
jg
outsb
push
je
fcmovnb
ss
push
fadds
nop
shll
push
in
jne
enter
scas
jecxz
inc
es
mov
pop
dec
cmp
or
repz
xchg
cmp
xor
xor
inc
jne
ljmp
in
aad
pop
pop
xorl
mov
push
dec
or
xor
ret
mov
lret
jnp
mov
push
mov
push
xor
mov
mov
pushf
out
ds
mov
pop
pop
clc
outsb
std
cmp
dec
mov
pop
outsb
pop
in
push
cmp
out
fadd
sub
mov
mov
push
inc
mov
push
std
scas
mov
jae
push
pop
cli
sti
call
out
rol
xchg
mov
sub
inc
jns
sbb
pop
xchg
ret
mov
fwait
mov
and
sub
aad
in
mov
mov
outsl
pop
mov
pushf
push
rcl
mov
xor
fistl
adc
loope
sbb
out
or
xor
popf
icebp
cmpsl
dec
mov
shlb
rclb
popf
adc
sbb
fsubl
xchg
jbe
mov
test
repnz
scas
sub
fmull
xorb
in
push
inc
ret
mov
jmp
cmpsl
popf
cmp
jno
mov
je
or
and
outsb
loop
jno
inc
es
mov
lock
enter
out
daa
mov
hlt
inc
xor
and
xchg
outsb
std
cmp
xchg
test
cmp
scas
mov
xchg
std
mov
cmpsb
lods
jb
and
inc
jge
xor
dec
in
out
sbb
xchg
lcall
fldln2
scas
xlat
shlb
jo
and
xchg
dec
push
dec
inc
xchg
dec
loopne
jp
fcoml
lods
dec
pop
mov
add
sbb
insl
faddl
pop
mov
enter
sbb
and
inc
sbb
add
int
fsts
lea
mov
sti
pop
mov
fsubrl
push
sub
stc
fsubrp
rcl
xchg
ror
mov
mov
ss
ds
sbb
int3
mov
cmp
addl
cmp
ljmp
mov
jbe
sbbl
jmp
sbb
lods
daa
dec
xor
push
jne
das
lods
popf
fnsave
jg
mov
popa
in
mov
pop
aad
cmp
jl
in
inc
stos
ds
adc
cltd
loope
idivb
loopne
enter
movsl
nop
cmp
bound
insb
lret
sbb
in
cwtl
mov
stos
frstor
inc
dec
pushf
pop
jg
lea
xchg
mov
int3
mov
shl
mov
pop
mov
mov
mov
iret
xchg
add
push
stos
cmpb
lret
and
imul
push
or
mov
and
dec
adc
enter
flds
cmp
mov
add
inc
add
je
jge
aaa
frstor
mov
adc
data16
mov
dec
xchg
inc
vmread
dec
in
dec
mov
cmp
jge
or
push
xor
push
xlat
inc
sbb
jge
fdivrs
xor
mov
js
mov
aad
mov
cmp
cmp
nop
mov
lcall
fistpll
cmp
aas
lcall
pop
ret
pop
lock
je
sub
mov
addr16
cmp
js
push
push
lock
adc
push
jnp
mov
sbb
mov
shrb
inc
lods
stc
ror
fsubs
mov
jns
adc
xchg
mov
pop
mov
fneni(8087
popf
xchg
loope
or
or
subb
scas
and
pushf
mov
push
xor
jo
mov
notl
sub
mov
xchg
sub
xchg
aam
paddq
xchg
inc
mov
mov
mov
xchg
outsb
in
mov
xchg
sub
sbb
jle
jo
dec
cli
mov
fmuls
inc
fsubl
lahf
cltd
pushf
cltd
sbbl
bound
cmp
push
loope
or
daa
je
fwait
loopne
and
mov
xor
mov
xchg
repnz
mov
es
les
insl
ss
lret
sub
roll
mov
dec
xchg
call
jne
jge
cmp
out
xor
and
sahf
call
mov
add
pop
test
xor
mov
adc
movsl
iret
mov
adc
sub
pop
inc
mov
adc
jbe
div
push
add
mov
movsb
subb
cltd
repz
test
popa
movsl
lcall
fdivr
inc
loop
rolb
lret
insb
lahf
arpl
int3
and
dec
cmp
in
lods
sahf
or
js
cmp
lods
testl
repnz
cwtl
sub
add
js
int
insb
adc
dec
into
sub
add
dec
cmp
mov
leave
mov
outsb
aas
js
mov
sti
test
iret
mov
mov
cwtl
dec
vrsqrtps
lods
clc
jbe
sbb
into
mov
data16
faddp
movsl
addr16
cmp
cmp
daa
mov
cwtl
fsubr
lods
sbb
pop
call
mov
pushl
mull
xor
push
pop
sbb
orb
addr16
add
lea
fs
cmp
pop
or
push
outsl
aad
xor
dec
loopne
dec
xorl
outsl
xor
and
mov
test
aam
mov
xchg
jecxz
orb
xchg
push
dec
mov
and
fsubl
aas
movsl
scas
mov
mov
fistpl
sbb
insb
int3
jl
dec
sub
gs
int
je
pop
insl
enter
and
shrl
nop
push
jnp
in
lods
sub
je
sub
insb
stos
mov
fwait
mov
andl
out
fistps
mov
xchg
cwtl
je
popa
xor
fimull
out
mov
inc
out
out
and
xor
cmp
fcoml
call
or
mov
notl
pop
bound
add
and
daa
lea
lods
mov
mov
and
add
popa
xchg
or
inc
stos
cld
fcoml
jle
and
sbb
xor
or
in
cmp
pop
subl
loope
push
cli
scas
cli
mov
sbb
lret
dec
mov
lods
in
sbb
dec
dec
fbld
fldenv
hlt
andb
aaa
data16
fmuls
lea
mov
das
lcall
and
leave
andl
or
jns
test
inc
xchg
mov
inc
ds
dec
add
mov
test
sbb
je
jno
hlt
loop
mov
xchg
stc
cltd
ds
push
jb
rcrl
lret
jmp
cmp
push
xor
sahf
fdiv
xor
cmpsl
dec
stos
jp
fstl
push
xor
jp
cmp
cmp
jno
push
xor
pop
into
jnp
xchg
pop
and
in
add
lahf
call
lcall
ss
jnp
mov
arpl
cmp
dec
jo
andb
pop
repnz
int
flds
fwait
pushf
adc
pop
add
fsts
inc
arpl
cmpsb
push
pop
pushf
mov
cmp
sbb
cmp
movsl
mov
push
pop
fcompl
mov
aas
cs
xor
adc
fbstp
push
lahf
cmpsb
xchg
sub
push
mov
push
sub
mov
clc
mov
dec
call
out
add
lock
jle
jb
fdivrl
movsl
jecxz
aam
fists
push
push
jle
int
inc
call
inc
out
imul
add
dec
inc
lock
cmp
daa
dec
fs
leave
sti
fnstenv
out
enter
cmp
dec
add
and
jl
popf
xchg
and
mov
mov
jmp
jl
js
add
sbb
jns
aam
mov
mov
xor
dec
pop
in
xchg
jno
push
fsubl
lods
xor
fisubs
popa
test
cmp
mov
adc
xor
or
notl
pop
sahf
out
jns
leave
inc
sub
sbb
jle
ja
pop
pop
fimull
sub
pop
int
push
stc
or
xchg
or
jle
outsb
imul
imul
mov
push
rolb
jns
jae
gs
inc
sbb
add
push
lret
loope
push
mov
lret
out
add
enter
stos
mov
adc
imul
jp
dec
lahf
iret
cld
pop
push
lea
jg
push
jbe
xchg
insl
les
lods
sbb
push
imul
addb
sbb
xchg
jle
adc
mov
out
das
scas
xchg
loop
inc
adc
mov
mov
loop
dec
or
sub
and
xlat
push
int3
outsb
cli
or
lods
sbb
jmp
xchg
pop
dec
enter
js
mov
cs
into
cmp
inc
cmp
aaa
sub
mov
or
pop
jl
and
pop
fstpl
or
pop
mov
dec
fcomip
arpl
push
add
mov
stos
je
push
cmp
adc
js
dec
vphsubdq
les
pop
mov
fsubl
jo
or
cmp
adc
hlt
movsl
mov
or
sbb
ret
cmp
test
lahf
xchg
push
test
add
jbe
push
aaa
mov
aaa
cmp
push
leave
push
aaa
xor
cmc
mov
cli
out
mov
dec
and
jecxz
out
add
shrl
mov
push
push
push
adc
xchg
jnp
mov
in
add
fst
ja
jecxz
sbb
data16
aaa
mov
xor
imul
mov
add
mov
cmpsl
movl
push
ret
shrb
rorl
adc
add
dec
mov
pop
pop
mov
into
pop
test
pop
mov
sub
xchg
xor
fistl
ljmp
cmp
cld
or
sub
aaa
push
repnz
fstpl
into
inc
pop
sub
out
fdivrl
mov
sahf
std
sub
or
outsl
or
pop
mov
add
jmp
and
mov
mov
mov
mov
push
add
movb
icebp
mov
mov
cmp
mov
popf
lahf
mov
mov
cmp
add
imul
sarl
insb
jecxz
jle
jne
ret
lock
adcl
mov
mov
or
xlat
adc
mov
jno
xor
xor
fmul
push
sbb
jl
xchg
dec
and
out
sub
cmpsb
cwtl
mov
movsl
xorl
rorb
fsub
aas
psllw
jle
adc
lods
icebp
popa
mov
movsl
pusha
jno
mov
mov
movsb
xor
pushf
mov
jecxz
sarb
dec
cmp
push
int
jns
testl
dec
loopne
jne
and
testl
jmp
sub
stc
lret
jae
add
shll
xor
filds
dec
iret
into
or
nop
cli
call
es
and
cmpb
loopw
cmp
mov
pop
into
mov
push
out
push
in
push
fistl
xchg
adc
ret
and
pop
mov
gs
daa
test
push
dec
out
mov
mov
jg
pop
mov
cmp
mov
repnz
stc
ret
outsb
jo
aaa
mov
shr
les
sub
sahf
push
frstor
jl
mov
pop
or
test
and
mov
imulb
popa
xor
jae
cmpsb
xchg
test
mov
insl
pop
mov
inc
push
leave
push
orl
in
insl
adc
adc
imul
mov
mov
dec
xchg
movsb
sub
jge
sub
adc
or
push
cli
xchg
pushf
testl
inc
or
icebp
and
mov
xchg
int3
lds
imul
clc
push
xor
add
mov
into
lods
leave
cli
test
sbbb
sub
push
dec
sti
sti
aam
dec
lcall
xlat
mov
mov
push
mov
xchg
roll
ja
xchg
fistl
or
mov
fdivrl
mov
adc
mov
xchg
pushf
xchg
xor
adc
jne
sti
push
addb
lods
loope
adc
sbb
xchg
in
inc
push
mov
loopne
xchg
adc
dec
rcll
inc
es
inc
mov
test
push
adc
dec
dec
into
cltd
in
mov
dec
sahf
lods
hlt
std
dec
add
push
fidivrs
adc
testb
push
shll
fistl
pop
das
mov
jg
fisubs
push
mov
ret
pop
orb
mov
shlb
cmpsl
jmp
mov
jp
arpl
mov
mov
popa
pop
push
js
xor
icebp
pop
ja
dec
fisubl
xor
mov
sbb
mov
mov
adc
xor
cli
stos
out
outsl
ret
jne
sbb
aad
or
push
mov
loopne
cli
sbb
add
push
pop
sbb
icebp
pop
es
cmpsb
inc
and
push
movsl
mov
icebp
test
cmpsl
xchg
int3
stos
pusha
push
faddl
test
lahf
pop
fstpl
xor
nop
inc
lahf
and
insb
aas
sbb
xor
add
lea
das
adc
mov
call
insl
icebp
test
out
aaa
int3
pusha
mov
loope
cmp
inc
scas
aaa
sub
push
xchg
cmpsl
mov
lock
in
test
imul
popa
lea
mov
push
and
out
push
adc
fsubr
out
addb
pop
xchg
xchg
ficoms
dec
jbe
lahf
loopne
lock
cmp
popf
icebp
add
jmp
lock
sbb
rcl
pop
das
mov
or
call
sub
stos
stos
sub
in
nop
mov
xor
dec
dec
out
ror
outsl
jecxz
mov
xor
movsb
mov
cmp
rcll
mov
mov
jo
loope
loopne
popa
add
rcll
mov
xchg
enter
ss
pushf
cmp
jbe
sub
dec
sub
jl
jnp
push
jp
shlb
aad
and
xor
inc
imul
bnd
and
idivl
icebp
adc
mov
push
movl
cmpsb
mov
inc
jle
cmpsl
lahf
rclb
loop
xor
adc
repz
and
imul
pop
sub
push
mov
and
or
xor
adc
arpl
mov
out
mov
jns
jge
ja
nop
call
inc
jbe
push
add
mov
in
mov
jl
lea
stc
jmp
lret
mov
mov
cltd
std
loopne
lea
stos
or
xor
xor
cmp
sub
js
mov
cmp
push
lods
sbb
push
jb
das
dec
fnstcw
ss
lods
pop
frstor
inc
nop
jle
je
jecxz
dec
cmp
faddl
enter
insb
fisubrs
aam
pushl
sti
out
je
mov
jmp
push
dec
shll
inc
xchg
pop
jb
lods
mov
push
sarb
sahf
push
pop
mov
sbb
fbstp
out
mov
loop
add
dec
add
push
pop
jae
lcall
icebp
sti
lock
cmp
jno
pop
pushf
int3
inc
popa
cli
aaa
mov
or
sub
lret
jle
sub
pop
aam
mov
sar
fmull
inc
jne
mov
and
out
push
stos
add
fadds
nop
inc
loop
jp
inc
sarb
mov
out
stos
stos
jb
mov
jmp
dec
pop
adc
jg
sbb
dec
lret
pop
push
cli
push
insb
movsb
push
sub
ret
push
pop
test
out
or
ljmp
leave
mov
mov
and
cmp
test
or
stos
lret
mov
dec
insl
in
leave
cwtl
inc
mov
hlt
pop
jno
xchg
mov
lahf
das
in
inc
rep
cmp
push
xchg
clc
popa
mov
loopne
cmp
xchg
in
push
hlt
aam
sub
out
xchg
xor
iret
or
fdiv
pop
sbb
popa
cld
sbb
repz
dec
mov
loop
xor
dec
cmpsb
jno
dec
add
mov
cs
xchg
mov
shl
lahf
sbbl
or
test
jl
js
out
jnp
lea
xchg
mov
dec
fildll
call
orb
xchg
sahf
enter
jbe
cmc
cmpsb
in
shrl
add
int
nop
in
mov
cmpsb
pop
dec
cli
cmp
push
inc
add
jmp
lahf
scas
cltd
cli
push
sbb
sub
fcoml
mov
jg
jmp
or
movsb
adc
out
and
cmp
xor
clc
sysenter
xchg
add
jl
push
inc
enter
xchg
push
mov
push
xlat
add
jo
popa
xor
pop
daa
js
fwait
data16
mov
fwait
clc
mov
cmp
into
mov
xchg
fidivl
mov
movsl
xor
push
jns
inc
xor
dec
fnstcw
lds
pcmpgtd
mov
loope
mov
mov
xor
pcmpgtb
repnz
or
inc
test
sub
mov
das
test
and
jns
ds
or
out
aas
dec
loopne
push
bound
sub
es
out
inc
or
jmp
notb
inc
mov
rorb
pop
sbb
or
test
or
lret
fisubl
int3
lock
inc
or
lcall
lret
call
and
xor
jo
cmc
popa
and
fsubl
daa
ja
call
sahf
ja
cmp
xchg
orl
jl
push
jb
pop
enter
ret
fdivrl
pop
or
push
in
xor
mov
mov
stos
stc
loop
das
dec
inc
mov
mov
cmp
jbe
and
push
jno
xchg
jo
scas
push
cltd
fidivrl
or
sbbb
in
mov
dec
xor
jecxz
or
test
push
in
xor
mov
lea
std
cmp
in
cmp
xor
inc
inc
sahf
in
adcb
xchg
jmp
dec
sti
jmp
inc
pop
movsb
shlb
mov
mov
mov
sub
jge
js
out
cmpsb
and
inc
adc
fwait
inc
mov
xor
aas
gs
fdivr
cli
or
test
sbb
aaa
adc
pushf
lods
jne
mov
repz
jge
andl
sbb
cmp
or
mov
mov
cld
push
and
jge
sub
es
iret
daa
data16
mov
je
mov
xchg
push
mov
in
sti
inc
push
ljmp
iret
shl
stos
jae
ja
dec
jb
jno
mov
nop
pop
ss
mov
icebp
cmpsb
mov
xchg
dec
push
pop
dec
pop
sahf
jne
sbb
incl
sub
cmpsb
jbe
mov
pop
hlt
sub
sub
mov
push
push
pop
out
mov
mov
mov
shl
lea
jmp
push
add
jecxz
push
push
movb
sub
cltd
adcb
and
sbb
dec
push
mov
cmp
sub
jl
mov
loopne
ss
and
ljmp
pop
xchg
pop
cld
stc
or
add
xor
in
lds
call
mov
shr
fisubl
loope
adc
cmp
mov
pop
and
dec
inc
jmp
xchg
sahf
mov
filds
out
int3
loope
sub
mov
push
mov
daa
in
jle
lcall
xor
inc
popa
sbb
je
js
jecxz
jnp
into
scas
movsb
xchg
mov
nop
fnstenv
dec
pop
jl
cmp
or
add
mov
inc
adc
jp
jns
dec
sub
out
ljmp
lret
sub
loope
scas
sub
jno
sub
pop
clc
pop
cmp
xchg
xor
rorl
lret
push
mov
clc
cmp
repz
push
fcmovnb
adc
mov
insl
scas
aaa
fs
test
xchg
add
jo
dec
dec
fisubl
imul
movsb
push
add
dec
add
mov
call
enter
inc
mov
out
out
rorb
aad
das
pushf
stos
mov
test
mov
jae
push
xchg
ss
mov
and
pop
int
imul
nop
cmp
fsubp
out
sub
lds
mov
andb
dec
pop
ds
stos
adcb
mov
jnp
filds
push
sarl
xchg
jg
adc
clc
push
xchg
add
shl
cmpsl
push
cmp
icebp
jmp
rorb
cmc
loope
mov
mov
cmp
or
cltd
mov
nop
mov
cs
adc
stc
out
rorl
xchg
test
mov
fcom
dec
sub
es
mov
aas
and
out
repz
repz
idivl
inc
iret
jmp
add
lcall
fwait
xchg
dec
mov
pop
mul
flds
dec
mov
dec
xor
pop
jl
insb
add
xor
pop
cmpsl
mov
xchg
jg
ret
mov
je
push
inc
cmp
xchg
hlt
jmp
cmpsl
out
xor
xchg
ret
push
inc
rcrl
pushf
ljmp
add
mov
fs
mov
inc
ja
sub
xor
sbb
or
adcl
fdivs
int3
mov
add
push
cmp
addr16
call
cmp
xor
xlat
dec
ja
shll
jle
push
dec
test
inc
xlat
mov
sub
dec
and
adc
pop
jmp
mov
sbb
mov
repnz
push
push
mov
hlt
adc
in
sti
fcom
repz
cmpl
add
mov
lock
mov
adc
loop
outsl
cmp
pusha
xchg
mov
push
cmp
inc
push
repnz
test
jp
popf
bound
dec
gs
xor
fimull
lret
int3
mov
movb
stos
loopne
imul
into
xchg
addr16
mov
xor
fucomip
insl
iret
nop
test
mov
cmp
pop
push
stc
rcr
jne
push
pop
sbb
mov
mov
push
cmpsl
int3
in
loope
xchg
push
mov
imul
cmp
outsl
jbe
jne
je
or
adc
aam
dec
push
lret
stos
xchg
and
cltd
sub
enter
loop
out
repnz
xchg
add
in
xchg
aas
jmp
and
sub
jb
aaa
adc
jle
xchg
into
in
hlt
and
cmpsl
lahf
in
xchg
or
ret
mov
xor
pop
add
imul
push
dec
hlt
jns
mov
daa
cmp
mov
cmp
mov
lcall
std
adc
push
dec
rcr
cmc
xorb
cmp
cmp
lahf
inc
aas
adc
mov
jns
pop
mov
sub
adc
icebp
xor
nop
cmp
jg
les
cmp
pop
mov
sub
fisubrs
js
sub
aas
gs
outsl
mov
jo
ret
xchg
ja
cmp
mov
cld
orb
in
popa
loope
clc
pop
jle
and
dec
jb
push
mov
pop
adc
inc
pop
mov
xchg
cmpsb
mov
jo
adc
pop
and
std
and
js
mov
ss
adc
decl
cmp
clc
cli
push
adc
push
iret
xchg
or
mov
aas
popf
imul
adc
aas
mov
mov
jecxz
fcoms
dec
jge
mov
jns
dec
cltd
lock
jg
push
or
push
lock
mov
jne
xor
scas
lods
inc
repnz
xchg
insl
xor
cwtl
loope
inc
subb
xor
xor
mov
xor
out
cs
inc
pop
mov
mov
ljmp
movsl
xchg
or
std
pusha
push
hlt
loope
in
inc
lds
sub
imul
in
das
aad
in
movsb
lret
sbb
imul
mov
pusha
inc
dec
cmpsb
roll
dec
adc
dec
cmpsl
fwait
pushf
pop
leave
ljmp
xor
dec
loop
push
cmc
insl
idivl
sahf
sub
rorb
inc
xchg
popa
push
jns
sub
sahf
and
and
outsl
pushf
sar
mov
js
aas
shl
gs
in
out
dec
push
dec
cs
xchg
jle
aad
lret
push
pcmpgtw
xchg
adc
test
xor
mov
aas
or
dec
pop
mov
jnp
mov
cwtl
jae
repz
xorl
mov
gs
xchg
lret
imul
jmp
jbe
shrl
loopne
adc
aaa
pusha
sahf
mov
dec
pop
or
mov
ss
in
mov
add
xor
pop
aam
mov
lret
cs
iret
mov
add
cmp
jle
fadd
std
xchg
cltd
clc
test
loope
mov
ss
sub
lods
aam
lcall
or
dec
dec
aas
push
lea
sbb
mov
and
jecxz
mov
mov
pop
gs
xchg
pop
mov
dec
ficoml
loope
xorl
cmc
cltd
pop
lahf
pushf
stos
push
outsb
shll
in
jns
pop
aam
push
inc
int
ds
sub
or
jns
test
fcomps
xor
xchg
in
or
ret
lods
sbb
fisttpl
jmp
in
into
sbb
xchg
stos
and
jbe
xchg
fdivp
cltd
cwtl
push
outsl
adc
out
ss
push
fisttpll
xchg
into
pop
insl
std
lods
addl
jle
and
ds
inc
cmova
xchg
sub
jns
jle
setp
vpsubusb
jae
xchg
cld
outsb
push
jecxz
loope
push
sbb
lock
adc
xorb
xor
call
or
jmp
outsb
mov
mov
cmp
stos
or
test
hlt
fwait
out
dec
insl
push
int3
pop
jb
sahf
push
and
rorw
or
jne
push
sub
out
add
and
xor
popa
pop
dec
and
andl
nop
add
pop
aad
jle
mov
fiaddl
sub
sbb
adc
cmpl
cmc
movb
inc
add
mov
idivl
shll
fcoml
in
lods
mov
sahf
jns
push
hlt
pmaxsw
jmp
fadd
xchg
xchg
ljmp
push
xchg
adc
xlat
dec
mov
push
push
jge
out
pop
mov
and
jge
and
hlt
aas
sahf
clc
test
out
and
fbstp
jge
test
insl
movsl
mov
xlat
add
outsl
dec
lahf
inc
mov
mov
repnz
push
dec
cmp
test
jb
add
clc
bound
push
scas
test
test
insl
aam
push
sub
xchg
orb
mov
ja
mov
test
dec
dec
pushf
dec
push
mov
push
lcall
fidivrs
and
and
repz
inc
mov
pop
pop
and
test
mov
mov
mov
xor
adc
sahf
ljmp
sub
and
adc
add
pop
sbb
xor
sub
ss
int
inc
sub
jmp
dec
mov
xchg
lahf
mov
xor
addr16
movsb
mov
cmp
sbb
scas
jae
fistl
xor
jnp
int3
mov
in
xor
mov
fidivs
xchg
loop
pop
adc
sbb
lret
std
push
push
xchg
mov
mov
push
push
flds
out
movsl
mov
in
sbb
stos
mov
cwtl
cmp
or
call
ret
popf
stos
aam
adc
es
jle
aaa
mov
mov
outsb
iret
sub
pop
jnp
cmp
sbb
inc
adcl
adc
xor
fiaddl
pop
popa
das
les
jp
or
loope
pop
push
xor
dec
and
cmp
cmp
sub
stc
shll
sub
push
pop
dec
loopne
gs
mov
orl
lds
in
cmc
rclb
fxch
ds
je
inc
andl
add
insl
pop
sti
loope
mov
and
nop
dec
pop
mov
in
mov
adc
xor
lret
xor
es
mov
repz
jo
adc
adc
sub
mov
pop
add
pop
bound
pop
mov
xchg
lods
sub
dec
cmp
int3
jmp
adc
inc
push
dec
add
sub
dec
cwtl
xchg
jno
aaa
cwtl
pop
inc
in
jle
mov
mov
mov
icebp
repnz
sub
mov
push
pop
hlt
mov
dec
pop
out
in
push
xor
into
push
aam
clc
push
push
les
outsb
xchg
fldenv
rcl
xchg
pop
xorl
push
xchg
mov
loope
cmp
bswap
dec
pop
dec
sbb
mov
jnp
test
mov
into
ljmp
cmp
out
dec
out
sub
jmp
int3
lcall
push
insb
int3
fwait
jo
cwtl
adc
mov
pushf
pop
mov
sub
pop
and
mov
fldl
ss
push
stos
inc
in
ljmp
idivl
dec
cmpsl
jno
xchg
popf
cmp
or
int3
and
and
movsl
arpl
fsubrs
jecxz
mov
popf
cmpl
pop
jnp
subl
jnp
jne
movsb
mov
loop
mov
push
pop
mov
orb
nop
mov
add
pop
or
test
xchg
jo
dec
sub
xchg
jo
inc
xor
fcmovnbe
idivl
cmovl
dec
repz
fidivl
lds
mov
inc
fidivs
or
lods
xor
add
mov
and
jb
xor
out
ret
imul
add
pushf
fcomip
add
std
xchg
stos
cmp
imul
sar
sub
jmp
test
in
push
sbb
mov
lds
xchg
push
xchg
aaa
mov
cld
hlt
dec
and
dec
adc
dec
test
xor
scas
shlb
xchg
jl
lods
mov
xlat
inc
lods
push
mov
push
out
jno
pusha
lret
jg
add
xchg
jge
mov
xor
fldt
hlt
jb
jmp
leave
mov
push
cmp
jb
add
cmpsl
mov
mov
jne
lcall
out
jg
negb
mov
jbe
cmp
icebp
jbe
xchg
push
cmp
fimull
addb
jbe
xor
repz
addl
cltd
pop
out
push
inc
arpl
scas
dec
out
sub
jge
adc
sbb
aad
cmp
int
xchg
mov
fs
add
cmpsl
cmp
movsb
xchg
sbb
mov
cwtl
mov
lret
stc
mov
cmp
shlb
xchg
adc
inc
jecxz
fadd
dec
adc
jmp
ljmp
cmp
jne
bound
inc
ja
roll
test
pop
int3
shlb
lret
jg
adc
mov
repnz
jge
fs
xchg
leave
xchg
in
xchg
loop
stc
adc
dec
dec
ss
mov
aaa
loope
and
gs
aad
jl
inc
fists
cmpsl
cmp
adc
and
push
push
gs
mov
pop
nop
inc
mov
test
dec
sbb
orb
in
lret
mov
lds
stos
addr16
adc
mov
into
orb
aaa
outsl
push
adc
out
rolb
dec
popa
xchg
mov
dec
popf
pop
out
lret
push
jl
popa
int
dec
lds
or
jmp
mov
dec
or
push
inc
sbb
sub
xor
call
aam
shl
inc
or
dec
push
imul
jmp
rorl
mov
fcomps
xchg
adc
btc
jmp
mov
mov
scas
lods
jnp
fcoml
add
cmpsb
pop
out
insb
mov
iret
push
pop
adc
and
enter
nop
std
mov
and
cmp
int3
stos
xor
xor
shl
cwtl
jns
jecxz
push
pop
ja
mov
mov
aaa
leave
inc
jp
sbb
sti
sbb
lret
fwait
pop
mov
xlat
adc
dec
std
cmp
inc
pop
scas
push
xchg
andb
push
mov
cmpsl
add
stos
xchg
mov
imul
or
mov
xor
popa
loopne
movsb
jns
adc
outsl
xchg
out
mov
cli
rcr
cmp
inc
rep
rol
repnz
rclb
outsb
and
fldl
mov
dec
jb
rorl
popa
push
mov
sub
pop
mov
mov
mov
clc
sub
test
std
inc
lret
or
mov
push
icebp
mov
leave
sbb
pop
push
popa
mov
add
les
faddl
notb
nop
jle
fbld
ret
andl
cmp
add
mov
and
inc
mov
imul
test
cmp
pop
xorb
pop
inc
xchg
iret
mov
adc
cwtl
fistps
clc
mov
mov
dec
dec
add
sub
imul
pop
aad
cmpsl
fiaddl
fs
xchg
and
sahf
in
les
adc
stos
ljmp
mov
cld
sarb
xchg
scas
sbb
daa
imul
jecxz
es
pop
insb
dec
mov
shl
push
pop
push
cmp
fstpt
push
dec
leave
cld
lds
cmp
clc
addr16
fs
je
fdivrs
lret
mov
jecxz
leave
push
loop,pn
int3
pop
inc
inc
out
push
xchg
mov
loope
lcall
sbbl
in
push
push
jb
push
hlt
out
cmp
lahf
fnstsw
sbb
xchg
in
sub
out
dec
fisubl
cwtl
cld
adc
xor
xchg
out
pusha
mov
push
and
fxch
jmp
fists
out
aam
mov
cmp
repz
cmp
push
mov
cmpb
mov
push
mov
adc
and
out
in
adc
sbb
mov
sub
mov
fxch
push
add
mov
shll
inc
cld
ja
xor
fildl
in
pop
repz
jae
and
jb
arpl
les
pop
and
adc
push
push
sbb
inc
mov
loopne
lea
outsb
xchg
dec
cltd
fxam
jb
in
mov
sub
or
add
pop
sarl
test
mov
jmp
sub
mov
sbb
lds
out
idiv
popf
out
aas
les
je
push
push
jle
int3
pop
xchg
xor
fsubs
inc
dec
jnp
adcl
pop
adc
inc
shrb
or
fwait
sbb
mov
out
lea
pop
and
mov
add
fstp
adc
mov
dec
divps
fimull
cmpsb
not
nop
mov
orl
jb
push
popf
into
inc
test
sub
jmp
push
cmp
in
int3
shl
pop
call
sar
and
xor
lods
into
cwtl
fistpl
push
mov
sahf
jmp
mov
loope
ds
push
inc
fcmovnu
js
sub
sub
adc
mov
and
mov
jno
int3
xchg
pop
push
dec
lret
inc
jl
jge
jno
fs
in
adc
pop
aam
js
or
mov
pop
mov
sbb
dec
xor
xor
inc
jmp
add
mov
movsb
pushf
xor
adcb
jo
ljmp
fiadds
xchg
adc
aaa
js
cs
ss
mov
outsl
scas
arpl
sbb
mov
fxch
addr16
aam
in
shl
mov
js
mov
xchg
sbb
or
daa
mov
ffree
leave
in
dec
xchg
adcb
into
push
or
adc
xor
movsb
dec
xlat
xchg
xchg
lret
pop
ret
imul
xchg
mov
pop
jbe
test
aas
jb
xor
in
adc
and
pusha
xchg
push
mov
les
int3
dec
test
mov
dec
mov
mov
pop
adc
inc
aad
pop
pop
lret
mov
dec
push
fsubrp
sbb
enter
xchg
and
jbe
adc
stc
lods
dec
stc
jmp
xchg
xorl
xor
xchg
pop
jg
ficoms
fs
dec
and
xor
jp
sbb
sub
lods
mov
inc
mov
push
cmp
inc
pop
dec
loope
lret
pusha
fprem1
pushf
pop
and
push
roll
inc
push
test
and
xchg
sub
shlb
sahf
sbb
cmp
mov
fcoml
cmc
xchg
ss
add
lods
pop
je
dec
dec
fwait
je
lea
test
inc
out
xor
movsl
xor
data16
and
pop
add
mov
push
into
test
dec
mov
xchg
arpl
pop
sub
pusha
push
inc
bound
xchg
fwait
xor
cs
hlt
mov
stos
xchg
fldl
idiv
dec
lds
clc
jp
daa
fstl
jmp
popa
shlb
cmp
sub
xchg
testb
fnstsw
and
xor
xor
adc
mov
xchg
imul
push
mov
mov
push
mov
cld
add
push
aam
clc
push
push
scas
mov
cs
fsubrs
xchg
dec
push
fdiv
push
inc
int
cld
test
popl
sub
leave
fistpl
sub
js
daa
test
filds
xchg
or
mov
inc
mov
adc
adc
or
mov
push
sbb
or
jecxz
jne
subb
ds
cli
xor
mov
xchg
cmpsb
inc
xor
cld
mov
inc
push
push
fwait
in
les
cld
and
testl
cli
jnp
and
xor
sbb
pop
pusha
push
test
inc
ja
pop
out
das
push
stos
roll
insb
ret
loop
mov
out
mov
shrb
pop
cwtl
push
xor
ss
in
loope
dec
imul
dec
push
dec
jnp
sti
xor
sahf
push
divl
outsb
or
ja
vpshuflw
in
jmp
cmp
inc
sbb
mov
cltd
nop
mov
test
cmp
mov
sub
jae
clc
es
scas
adc
imul
loop
popf
aaa
lods
sahf
lcall
fdivs
xor
mov
cmp
lret
push
adc
xor
out
rolb
data16
push
scas
ss
test
pop
fldt
fimull
pop
push
ss
ljmp
addr16
dec
lret
xor
int
inc
aaa
or
fsubl
xchg
push
imul
xchg
test
jecxz
pop
inc
and
or
and
es
xchg
mov
into
xchg
sbb
loope
rolb
aas
cmp
sbb
push
jecxz
lret
ljmp
adc
addr16
mov
xor
or
bound
xchg
pop
fidivrs
pop
mov
cmc
in
dec
jnp
dec
call
repnz
inc
inc
mov
cli
lods
divb
lods
sub
stos
or
sahf
mov
faddl
lods
fldenv
dec
inc
leave
and
mov
inc
rorb
add
std
lcall
xchg
jp
repnz
sti
mov
inc
push
xorl
sbb
lea
jb
insl
insl
dec
and
mov
jne
lret
mov
adc
outsb
adc
cmc
fldenv
in
sbbb
mov
cmp
jne
sub
push
pusha
rolb
ja
or
scas
adc
popa
cmp
test
jmp
xchg
inc
loope
jp
jns
and
add
mov
call
ret
mov
and
pop
into
gs
adc
stos
movb
mov
stc
add
cmpsl
dec
jmp
stos
and
dec
jbe
mov
mov
cli
nop
mov
es
jg
stos
mov
rcrb
scas
lcall
gs
push
mov
sub
and
jb
scas
cmp
pop
jns
sbb
mov
cmp
inc
jne
push
out
insb
mov
stos
out
jnp
mov
cmp
aas
aad
loopne
push
cli
cs
lds
xchg
jbe
sti
repnz
insb
test
push
idivb
in
mov
cmpsb
lcall
clc
mov
cmp
mov
cmpsl
mov
mov
inc
aas
jmp
xchg
scas
dec
stos
inc
mov
pop
add
rolb
mov
mov
mov
xchg
cmpsl
clc
push
pop
push
fsubrl
or
mov
repz
int
scas
ds
dec
xchg
sbb
cmp
je
pop
pusha
xor
addr16
popa
fisubl
loope
pop
stos
test
loope
les
arpl
in
fildll
daa
adc
xchg
ror
or
xchg
mov
mov
scas
adc
pusha
xor
mov
jne
or
add
cmp
adc
aas
leave
push
sbb
add
cmp
in
addr16
cltd
sbb
into
mov
jb
call
push
xchg
mov
xchg
and
ja
pop
out
fimull
std
cmp
hlt
pop
std
dec
mov
inc
subl
xchg
add
jmp
popa
cmp
push
mov
shll
push
fwait
jg
test
dec
aas
stos
rclb
inc
push
mov
out
push
aaa
jno
cwtl
mov
enter
das
ss
sub
xor
or
or
push
xor
jno
jne
push
test
jns
lds
dec
or
mov
xor
cmp
sub
test
sti
leave
jg
pop
mov
and
out
aaa
xchg
outsl
inc
in
inc
dec
or
pop
cmpsl
adc
repz
dec
pop
inc
push
or
cmpsb
lret
or
sahf
nop
xor
lcall
mov
cmp
inc
dec
out
sahf
fdivl
popf
fs
bound
jl
mov
out
ret
aas
lahf
cmp
push
xor
lcall
hlt
shlb
dec
lods
sub
leave
lods
or
mov
xchg
insl
mov
pushf
mov
xor
pop
arpl
pop
outsb
jmp
adc
xlat
addr16
bound
jg
cmc
insb
jo
std
push
lcall
add
pop
mov
cmp
stc
les
cmc
pop
mov
jae
test
jae
andb
sahf
mov
jmp
mov
roll
adc
aam
lods
fs
test
cmpsl
int
iret
adc
or
jbe
pusha
loop
into
or
call
loope
add
cmpsb
adc
andl
adc
idiv
sub
roll
out
mov
fst
sub
outsl
push
mov
fisubs
and
mov
jne
mov
sub
js
and
or
popa
repnz
in
fstpl
out
scas
mov
xchg
pop
mov
sti
sub
inc
xchg
jmp
outsb
loop
sub
jmp
cli
mov
pop
jmp
scas
xor
cmpsl
xchg
lret
mov
ja
cmp
or
sbb
jo
es
xchg
sub
fildll
pop
and
cmp
in
ss
fst
lcall
shl
std
gs
sahf
sbb
xlat
out
pop
test
addr16
xor
fisubrs
popf
pop
shlb
mov
loop
mov
sbb
data16
mov
ret
lea
mov
xor
enter
stos
jge
sahf
add
ja
xor
test
xchg
mov
push
in
jns
mov
jne
adc
icebp
mov
lock
xchg
mov
clc
jmp
arpl
mov
cmp
cld
lock
stc
std
adc
shll
stos
sub
xorl
popa
subl
xchg
pushf
push
fnstenv
lods
cmpsl
mov
jne
mov
push
xchg
pushf
in
lock
in
sti
sub
fistl
mov
push
fisubl
and
repz
std
mov
xor
add
cwtl
lds
insl
scas
divps
mov
push
dec
and
out
inc
cmp
addl
sbb
xchg
repz
sbb
mov
enter
or
test
icebp
push
adc
mov
mov
out
hlt
sub
jmp
fwait
push
jo
mov
out
dec
xlat
rcl
pop
pop
cli
daa
dec
mov
mov
cmp
mov
lcall
push
mov
xchg
cli
lock
xor
insl
clc
lods
movsb
addb
aad
or
pop
xor
mov
dec
dec
xor
mov
and
mov
cmp
int
in
icebp
into
xchg
mov
pop
and
scas
dec
loopne
push
rolb
in
jbe
js
and
icebp
mov
int3
push
lahf
maxps
mov
push
and
sbb
xchg
xor
or
mov
sbb
int
xlat
int
and
movsl
int3
xchg
loop
fmuls
mov
fcompl
cmc
in
or
dec
mov
cmp
mov
pop
pop
push
xchg
push
mov
dec
inc
ss
int
leave
mov
popf
cld
lahf
pop
pop
pop
insb
in
addr16
out
daa
sarl
je
aas
xchg
test
xlat
xlat
add
mov
jne
pop
clc
pop
mov
ffreep
ljmp
pop
pop
addr16
sub
adc
fildl
rolb
stos
pop
ljmp
mov
std
in
gs
xchg
push
icebp
mov
repz
mov
lcall
and
inc
ja
repz
insb
and
imul
lcall
mov
sbb
adcl
xor
cld
push
jno
mov
int3
mov
ficompl
add
js
push
xor
outsb
and
mov
fcomp
mov
and
and
pop
inc
daa
jnp
adc
call
sub
outsb
cmpsb
pop
leave
fcmovne
loop
jmp
adc
and
es
sbb
imul
jae
mov
ds
xchg
jns
cmp
dec
xor
or
inc
mov
cmp
xor
jb
ret
test
adc
xchg
popa
cld
test
pushl
faddl
jle
and
fistl
mov
mov
orl
pmulhuw
jne
push
dec
mov
or
movsb
lret
adc
xchg
jle
and
nop
sbb
fsts
jge
dec
pop
loope
ja
or
jmp
sbb
daa
std
outsb
scas
sub
imul
add
insl
cs
xor
jmp
sbb
adcl
or
imul
ljmp
mov
inc
mov
fstpl
or
cmp
lods
inc
sub
xchg
insb
out
sbb
dec
dec
lea
ror
xchg
sbb
imul
in
repnz
jp
into
lock
adc
js
sbb
add
out
dec
adc
jbe
in
and
xchg
nop
sub
jnp
lea
out
jp
sub
adc
dec
jle
add
in
push
fcomi
mov
xlat
stos
lret
test
shrl
jb
in
jne
inc
or
lret
sti
outsb
jmp
cmpsl
addr16
push
adc
subb
fwait
mov
loope
rcll
mov
sbb
jne
sti
lock
jae
dec
cmp
test
xchg
jmp
adcl
mov
dec
popa
mov
inc
and
imul
push
ret
sahf
into
add
push
mov
push
popf
push
loop
xchg
jns
int3
sbb
cmc
mov
mov
dec
cli
cmc
andb
lahf
dec
rorl
dec
dec
mov
repnz
leave
push
cmp
fsubl
mov
loope
repz
iret
test
sub
test
xchg
ret
mov
sub
fstl
push
jp
add
sub
sub
fistpl
fisttps
cmp
fisttpll
pop
or
push
xchg
mov
add
cltd
jmp
lods
push
inc
xchg
sbb
daa
sbb
rcll
pop
es
mov
push
test
push
jp
je
sub
cli
daa
bound
stos
aaa
mov
orb
add
je
cwtl
mov
add
test
xchg
outsl
dec
pop
sbb
test
cmpb
jnp
lds
mov
movsb
out
jo
pop
sbb
aam
dec
dec
pusha
inc
mov
pop
mov
in
into
sbb
xor
aas
outsl
lcall
jmp
mov
push
gs
jns
push
fnsave
icebp
popf
out
dec
loop
or
cmp
inc
subps
cmc
test
or
and
scas
xorl
std
and
add
cmpsb
fidivl
dec
or
pop
cmp
hlt
negb
xchg
ror
fidivrs
scas
js
and
repnz
jmp
bswap
dec
or
lret
or
jl
inc
pop
dec
inc
xor
sbb
pop
xor
js
cmp
dec
sahf
mov
outsl
sbb
xchg
push
mov
lret
dec
sub
or
cmpsl
fadds
gs
xlat
repz
fcmovbe
in
mov
push
stc
add
fwait
sahf
test
xchg
bound
jl
inc
inc
pop
inc
fnstsw
cmp
icebp
push
add
push
push
sti
xor
in
pushf
daa
and
mov
pop
sub
adc
fildl
lds
and
ret
mov
fmuls
stos
loopnew
adc
nop
dec
pusha
popa
mov
jmp
pushl
add
mov
and
sbb
sub
in
dec
pop
add
shlb
outsl
addr16
xor
jle
mov
fildll
aad
arpl
sbb
out
scas
pop
or
stos
mov
cwtl
pop
push
push
xchg
jge
mov
shlb
lfs
lock
push
mov
dec
push
scas
mov
mov
andl
std
adc
and
mov
dec
shr
shrb
pop
cmp
loopne
cmpsb
mov
inc
mov
shll
rcl
mov
xor
jae
jnp
dec
mov
fcomps
mov
sarl
movsb
and
dec
cmp
push
inc
jle
in
jne
xchg
sub
inc
mov
lock
cmpsl
repz
jno
or
fidivrs
aas
sub
daa
ljmp
xor
in
fs
mov
test
adcb
xchg
fs
daa
call
lea
xchg
icebp
insb
pop
addr16
mov
or
jp
aad
bnd
jno
jbe
mov
push
mov
xlat
pop
mov
je
gs
into
dec
outsb
or
mov
push
dec
mov
mov
aam
dec
shlb
orl
nop
punpckhwd
mov
xlat
je
popf
aaa
cmp
mov
test
pop
inc
jb
enter
and
push
push
test
in
lock
mov
cmp
cmp
jnp
insl
stos
mov
aaa
out
xor
pop
test
jne
lea
loope
loopne
mov
imul
jbe
pop
sub
cltd
mov
cmp
fmuls
xchg
outsl
aaa
jmp
mov
pushf
jle
frstor
popf
xchg
out
sbb
es
or
shrl
ss
xchg
cmp
sahf
fldt
xchg
xchg
int3
inc
test
pop
mov
call
aaa
testl
xor
jnp
pop
sbb
dec
inc
or
nop
fiadds
rol
loopne
pop
in
push
in
adc
adc
pop
xchg
pop
icebp
lret
shl
rolb
fs
stos
jns
test
arpl
xchg
loope
sbb
or
mov
js
push
xlat
cld
sti
aad
rcr
and
xchg
push
pop
adc
cmpl
xchg
cmpsb
push
mov
imul
es
cltd
lds
xchg
sbbb
adc
sti
mov
xchg
mov
out
mov
add
add
stc
push
inc
push
xor
pop
hlt
cmp
frstor
aaa
fwait
negb
outsl
pop
sbb
inc
mov
gs
mov
xor
mov
rcll
add
imul
adc
shrb
adcl
inc
icebp
mov
push
jne
mov
stc
push
lea
addr16
aaa
sarb
mov
jge
stos
and
cmp
inc
test
rorb
adc
mov
mov
cs
mov
in
add
add
mov
and
out
popa
out
xchg
add
push
xor
pop
int
xor
mov
add
adc
iret
ja
jmp
push
js
imul
xlat
ljmp
or
mov
ss
and
jbe
jmp
imulb
insl
popa
or
inc
mov
dec
shll
push
outsb
push
cmp
cmpsl
nop
sbb
filds
lods
int
stos
arpl
popa
cli
hlt
xor
out
je
gs
jbe
lods
pop
or
inc
push
sub
adc
testb
sub
or
repnz
jg
insb
and
and
cwtl
aas
lret
cmp
movsb
shll
test
icebp
outsb
cmp
mov
sbb
xor
inc
jb
outsl
or
jbe
inc
and
in
jae
mov
push
inc
fdivrl
xchg
call
push
movsl
hlt
lret
jmp
add
inc
cwtl
xor
mov
inc
shrb
dec
push
adc
shll
aaa
pop
enter
jo
or
js
cmp
adcl
and
stos
sub
in
nop
jp
iret
jnp
pop
lret
dec
movsb
mov
nop
popf
pop
leave
je
xorb
push
repz
lret
sahf
popa
push
jle
ja
mov
scas
in
rcl
repnz
or
or
clc
jge
push
inc
clc
sub
fbstp
xor
shrl
hlt
ss
repnz
adc
mov
mov
or
fistpll
cmp
or
mov
adc
fnstcw
add
or
xchg
aas
clc
sub
mov
negl
sub
imul
data16
xchg
std
shlb
stos
xchg
sti
xchg
inc
into
pop
mov
stos
in
js
add
aam
das
lds
jae
hlt
dec
cs
adc
daa
push
shrb
pusha
and
sbb
inc
stos
adc
sbb
inc
ret
mov
adc
dec
sub
push
popf
and
push
test
addl
push
mov
jmp
push
push
jae
sub
or
or
lret
pop
lret
ffreep
mov
and
aad
hlt
push
mov
adc
cmpsl
scas
xor
subb
lds
mov
add
loop
pop
addr16
add
lcall
jae
cmpsb
out
cld
arpl
mov
fs
cmp
sub
cli
das
sub
in
cld
cli
pop
xor
mov
aam
fsubp
fidivl
roll
push
pop
stc
jno
pop
mov
fisttpl
inc
sub
lahf
sub
or
or
xchg
in
xor
repnz
mov
xchg
ss
fstps
fcomps
jle
dec
adc
in
sub
push
insb
ret
add
andl
inc
popa
stos
adc
mov
pusha
inc
add
push
push
lods
insl
push
aam
shll
dec
popl
sarb
lea
stc
lret
fwait
out
mov
jno
pop
pop
insb
or
cld
jg
stos
es
sbb
pusha
cmp
pushf
out
data16
arpl
xlat
lds
add
add
and
ljmp
inc
popa
cli
das
lods
xlat
sbb
push
out
mov
jmp
jg
stos
lcall
mov
xchg
push
add
mov
adc
push
xchg
mov
lahf
cmpsl
aad
xor
loop
sbb
dec
sbb
pop
add
jno
or
sub
or
cmc
cwtl
push
xor
lods
and
mov
ror
jg
push
sub
jg
data16
test
idivb
mov
fildll
lret
mov
popa
popa
cmc
sub
shr
mov
movsl
data16
xor
stos
dec
jge
jbe
call
fbld
xor
xchg
je
jle
and
arpl
push
push
das
nop
loop
push
sbb
lds
mov
pop
mov
es
mov
sti
shlb
mov
sbb
jl
inc
jbe
je
gs
fcoml
xor
xchg
fs
xor
call
enter
jae
shll
and
lret
bound
push
mov
loopne
imul
popa
cmp
insl
xchg
jl,pt
mov
lret
mov
xor
stc
mov
add
fisttpll
cmp
mov
mov
repnz
js
scas
push
pop
mov
mov
adc
adc
movsl
shll
stos
outsl
gs
ss
std
inc
and
mov
outsb
cmp
inc
xlat
lea
lcall
outsl
stos
jl
popf
mov
mov
mov
push
add
shr
pop
clc
mov
dec
cmovge
imul
cmc
xchg
inc
sbb
or
fstpl
pop
fistl
xor
in
inc
jbe
or
int3
popa
mov
std
cmc
push
xor
xchg
idivl
mov
rep
push
add
pop
jmp
std
cld
push
fwait
or
inc
ja
xchg
ljmp
and
dec
mov
icebp
loopne
lods
insl
ss
lret
pop
lahf
inc
dec
mov
cmpsb
inc
lea
mov
in
xor
cltd
cmp
and
test
adc
lods
fdivrl
dec
shrb
dec
inc
fadds
out
insb
in
cmpl
enter
push
jae
test
cmp
cs
int3
shrb
inc
fisttpl
inc
sbb
dec
jmp
sbb
je
dec
test
dec
inc
frstor
push
loopne
ljmp
xlat
imul
mov
arpl
dec
xchg
cmp
mov
scas
nop
adc
rcrl
dec
adc
notl
popa
sub
imul
add
and
shl
and
inc
je
cmp
push
stos
and
clc
pop
and
daa
mov
sbb
outsl
enter
dec
stc
scas
adc
leave
stos
mov
xor
pusha
xchg
cmp
jnp
repnz
and
mov
push
aad
inc
outsl
jmp
jbe
mov
inc
and
mov
repz
cltd
dec
or
mov
xchg
sbb
jnp
arpl
push
xchg
jne
mov
push
inc
call
jae
xchg
dec
lods
pushf
fs
test
mov
mov
jns
inc
aaa
push
xchg
mov
testl
inc
jno
imul
mov
sbb
das
fimuls
daa
in
leave
pop
jnp
or
jo
xor
cmpsl
pop
inc
dec
lret
mov
pop
nop
jns
inc
cmp
hlt
mov
cs
bnd
or
leave
aaa
insb
ret
sbb
sub
push
add
mov
push
and
repnz
mov
push
ds
mov
jo
cmp
add
xchg
addr16
push
mov
sbb
and
das
and
xchg
adc
jo
jle
sub
fucomi
ljmp
imulb
fisubs
mov
outsl
xor
ret
int3
scas
in
fwait
movsb
ljmp
sub
xchg
xor
sub
scas
sbb
out
push
enter
mov
mov
xchg
aaa
pop
dec
push
mov
dec
dec
cwtl
inc
subb
pop
xor
xor
mov
add
in
pop
push
add
je
add
ja
ds
test
in
pop
jl
cmp
ret
pop
adc
fcomps
out
cmp
push
ret
in
mov
push
arpl
lahf
dec
xchg
mov
jo
mov
inc
fnstcw
or
lods
inc
dec
sbb
and
popf
andl
hlt
test
data16
fucom
cmpsb
xor
xor
test
jo
aam
mov
adc
cmp
mov
das
mov
jp
outsl
loopne
cltd
dec
rol
mov
push
jp
pop
mul
les
sbb
add
cld
iret
std
xchg
inc
cmp
sub
fidivs
xor
xchg
xchg
cmp
dec
and
mov
addr16
pop
lds
lret
cmp
mov
pop
sub
filds
mov
lock
mov
and
mov
shlb
aam
fadd
sahf
cmp
insl
mov
cmpb
aam
jl
push
push
cmpsl
sbb
in
scas
push
sbb
jg
insl
mov
lods
xchg
mov
mov
inc
popf
xchg
xor
or
cmc
scas
and
in
pop
mov
xor
lret
lret
cmp
cli
xchg
dec
mov
stos
out
cwtl
std
popa
adc
jecxz
lret
push
push
lea
pop
test
gs
mov
imul
jns
or
cltd
rcrb
jmp
push
outsb
cmc
and
pop
dec
insb
sbb
clc
shr
and
sub
daa
pop
jbe
aaa
cmp
mov
xchg
jecxz
fcoms
stos
jne
mov
pop
dec
adc
mov
bswap
repnz
inc
ja
pop
leave
sub
mov
cld
pop
ja
pmaxsw
lods
inc
and
xchg
aam
lds
push
jg
sahf
and
fiaddl
addr16
ret
rorl
sbbl
jnp
mov
mov
imul
insb
adc
lahf
jns
mov
or
pop
pop
xor
or
rorb
call
mov
scas
push
insl
dec
xchg
pusha
sbb
loope
inc
lret
add
mov
pop
cmp
jp
mov
testb
cmp
fstp
es
icebp
push
sub
pushf
popa
jge
and
jp
orb
mov
xchg
jl
hlt
imul
ret
fs
add
cmpsl
aas
movb
ret
inc
and
sub
or
or
mov
mov
dec
push
idivl
push
mov
adc
mov
sti
inc
push
xchg
cli
ja
sahf
inc
test
adc
ja
rol
nop
cmpsl
or
popa
push
mov
adc
icebp
roll
pop
pushf
jge
repnz
ds
adc
bound
pop
lahf
jne
adc
mov
negl
ficoml
and
adc
test
push
jae
andl
jo
les
pusha
cmpsl
mov
repnz
jbe
addr16
test
lret
lods
mov
fwait
push
imul
sub
icebp
gs
xchg
out
roll
dec
xchg
test
cmp
lcall
sbb
jb
loop
pop
push
xchg
testl
in
dec
call
xchg
jne
dec
cs
les
in
sbb
jl
pop
dec
and
into
loop
dec
mov
dec
cmp
jb
je
sbb
fsubrp
imull
lahf
mov
sbb
mov
mov
notb
mov
rcrl
daa
mov
rolb
repnz
sub
lcall
in
int
mov
pop
divl
adcl
leave
out
ret
jp
stos
xor
push
sub
xchg
push
scas
stos
loope
mov
fs
and
mov
lcall
xlat
cmpb
and
shl
pop
call
sbb
mov
loope
fisubl
xor
cmp
cmp
cwtl
fsubrs
xchg
rolb
adc
adc
push
scas
js
push
and
or
jecxz
pusha
jne
in
pop
aam
iret
aad
mov
scas
test
or
hlt
aaa
jg
stos
jnp
sub
in
js
pop
cmp
or
shll
dec
cmc
xor
mov
sbb
fnstenv
pop
dec
icebp
xchg
mov
mov
ss
push
add
arpl
sbb
sub
aad
shrl
sti
or
fcompl
mov
and
dec
xor
mov
test
stc
je
push
lds
jle
into
mov
sbb
cltd
fstpt
or
jecxz
out
int
in
ret
shlb
xchg
xor
jb
xchg
dec
and
leave
aas
or
jp
stos
xor
add
sahf
push
nop
lods
dec
lret
mov
mov
out
cwtl
cmp
imul
adc
aad
jb
hlt
cmp
dec
dec
int3
sbb
cmp
out
out
mov
ret
shlb
cmp
xorb
push
add
cltd
dec
push
push
sub
jl
and
dec
lret
cmp
popa
jbe
dec
cmpsb
addl
fsub
lds
iret
jnp
lret
pop
loop
mov
push
jbe
push
icebp
outsb
adc
daa
mov
push
and
xchg
mov
mov
push
dec
test
in
sbb
les
pop
mov
lret
mov
repnz
sbb
sbb
jmp
sbb
sbb
fwait
lret
icebp
sbb
rclb
jo
gs
fisttpl
les
movsl
lock
sti
jo
fldl
daa
cmp
mov
sti
pushf
out
movsl
cmc
cmp
stc
and
clc
push
jge
daa
ljmp
pop
js
stos
cmpsl
sbb
clc
sarl
bound
repz
aam
dec
push
mov
cmp
jbe
popf
mov
sti
push
and
mov
sub
pop
mov
adc
lods
dec
shlb
popf
xor
imul
lcall
xor
aam
clc
xor
jmp
addr16
lcall
pop
jle
rclb
dec
cltd
add
les
pop
in
mov
movsl
mov
aas
jmp
xlat
jg
lret
dec
out
mov
das
adc
shl
mov
add
push
mov
imul
in
leave
out
das
or
or
xchg
lcall
lea
pusha
xchg
pushf
outsl
mov
add
aam
xlat
scas
pop
pop
out
mov
iret
lock
add
mov
subb
cltd
mov
push
pop
cmc
pop
mov
inc
ljmp
hlt
pop
mov
mov
push
jae
cmpsb
stos
jb
or
push
mov
adc
push
data16
aam
scas
imul
shll
out
in
and
mov
sbb
mov
and
jns
push
adc
shlb
push
xchg
cmpsl
push
add
add
and
mov
xchg
mov
jp
ja
sbb
mov
xchg
test
sbb
adc
pop
aaa
rcl
rol
jae
mov
inc
fbld
mov
lods
push
fsubr
push
mov
aad
push
fdivrl
test
and
das
jnp
stc
loopne
ret
lock
push
adc
jl
mov
add
popf
test
les
cmp
addl
addr16
roll
mov
xchg
ljmp
cld
lcall
pushf
popa
push
push
fildl
insl
push
mov
pop
stos
push
lret
pop
sbb
dec
push
enter
repnz
js
cli
leave
icebp
mov
sub
jmp
popf
mov
sub
popf
fwait
stos
add
jns
in
mov
iret
push
push
cmpsb
test
in
xchg
xchg
pusha
aas
add
mov
fwait
mov
lods
leave
pop
mov
push
jns
xchg
addr16
and
test
imul
pop
sub
cli
mov
insb
adcb
cmp
cltd
push
adc
ret
dec
cli
pop
or
ds
jp
inc
orb
testl
pop
add
nop
pushf
in
pop
jnp
jmp
mov
dec
aas
popf
test
es
sub
sbb
les
in
jo
inc
shrb
cmp
xchg
test
loopne
insl
mov
pusha
pop
pop
add
clc
push
push
mov
xchg
push
adc
outsb
aad
pop
add
ss
xor
or
into
shr
sbb
sbbb
test
lea
pusha
jge
xor
std
scas
in
nop
sub
jmp
std
test
pop
sbb
movsl
jge
rolb
clc
dec
pop
es
test
ljmp
mov
push
xchg
and
xchg
cmpsb
dec
sbb
fsubrl
enter
dec
adc
jae
jnp
mov
mov
mov
pop
add
dec
inc
mov
pop
inc
ja
aas
scas
lret
sahf
sbb
inc
or
adcl
pop
aaa
mov
je
inc
dec
adc
je
mov
jbe
xchg
imul
test
mov
xor
in
xor
sbb
add
repz
test
adc
sbb
notb
adc
dec
daa
inc
orl
nop
mov
xchg
fwait
idiv
dec
adcb
fadd
into
mov
add
jecxz
sbb
mov
sbb
je
test
pop
rolb
test
xlat
in
stos
pop
gs
dec
or
dec
movsl
sbbb
xchg
sbb
outsl
scas
adcl
fistl
pop
dec
cmp
jecxz
lcall
repnz
int3
roll
out
inc
jne
enter
rolb
and
call
pop
pop
dec
push
addl
pop
mov
popf
movsl
daa
call
bound
mov
xchg
adc
jge
dec
sbb
clc
sub
sub
xchg
ss
mov
pop
sbb
dec
mov
mov
mov
lcall
push
std
mov
push
or
popa
mov
test
and
adc
dec
js
inc
lea
dec
std
xchg
pop
shrl
sub
push
add
pop
roll
xchg
shll
sub
inc
jp
xor
jne
and
popf
sbb
and
cmp
push
mov
xor
scas
mov
stos
outsb
add
ljmp
aad
xor
ret
dec
jle
and
loope
adc
arpl
or
repz
imul
andl
pop
stos
lret
aaa
insb
adc
dec
cmc
mov
mov
xchg
mov
cmp
movsb
xchg
cmp
mov
push
lock
push
insl
pop
or
mov
pop
jne
pop
or
and
jle
xchg
or
repz
push
dec
mov
mov
dec
sti
mov
jmp
test
popa
int3
ljmp
shrb
and
leave
ja
dec
mov
pop
test
ja
loope
or
mov
xchg
cltd
push
mov
and
xchg
fdivrp
sbb
mov
lret
sub
cmp
inc
adc
xor
aam
loop
sub
dec
lods
cmp
sahf
loope
jae
mov
sub
pop
xchg
pop
hlt
fistpll
clc
cld
mov
xchg
int3
or
mov
add
dec
or
jle
lods
pop
inc
fwait
sub
or
push
loope
xchg
outsl
inc
sbb
sbb
test
es
dec
addr16
fldcw
nop
enter
xor
mov
cld
lods
daa
and
int
ja
loopne
cli
iret
add
push
sarl
gs
rcll
test
add
idiv
mov
xchg
insl
pop
loop
jns
bound
pop
in
pushf
dec
cltd
xor
add
and
push
sbbb
in
addl
sahf
sub
mov
fucomip
cs
pop
popf
pop
aam
cmp
or
inc
rorl
daa
aam
push
lret
or
call
fstl
mov
jle
subb
pop
xchg
pop
cmc
push
les
test
test
loop
sti
es
out
or
pop
shrb
ret
dec
push
sahf
mov
sbb
fadd
sbb
jnp
pop
cmp
fildl
inc
and
fistpl
xor
adc
jns
repnz
ret
ret
xor
outsb
xchg
inc
sbb
and
rolb
insl
mov
xor
fwait
inc
lods
cmp
xorb
shlb
movsb
push
int
lods
inc
adc
lret
push
or
fnstsw
sub
xchg
sub
jnp
lock
pop
outsb
add
or
sbb
jns
add
sub
mov
and
fimuls
fisubrl
xor
mov
and
sahf
cmp
fidivrl
scas
out
cmp
sub
imul
mov
enter
add
mov
out
cmp
adc
ret
outsl
std
xor
outsl
xchg
or
or
add
pop
sbb
mov
push
adc
cmc
push
subb
insl
push
lahf
sbb
mov
push
cmp
bound
xor
jns
xchg
or
mov
pop
sbb
pop
scas
and
shll
scas
xorb
pop
push
sbb
orl
fisttpl
aad
xorl
cmpsb
xchg
test
mov
inc
scas
push
maxps
insl
xchg
mov
adc
mov
lcall
mov
cwtl
pushf
push
xchg
cmpsl
mov
dec
mov
lods
imul
movsb
fsts
xchg
push
sub
xchg
in
jle
or
and
jae
xchg
cld
pop
jmp
jl,pn
push
sbb
mov
or
pop
add
stos
cmc
dec
adc
test
mov
jp
pop
loope
insb
cmp
xchg
scas
fdivrs
cs
lds
loopne
popl
and
xor
jl
cmpsb
incb
out
xchg
mov
cmp
add
stos
xor
imull
or
push
add
aaa
mov
jae
stc
out
dec
mov
mov
or
sub
jo
xchg
loopne
mov
inc
and
jecxz
pop
cmp
adc
cmc
dec
xlat
dec
rcrl
ss
pop
out
leave
aaa
call
insl
inc
dec
leave
and
stos
sahf
orb
jne
pop
add
or
shrb
add
mov
daa
std
mov
js
dec
mov
cltd
pop
pop
xchg
in
fnstenv
shrl
outsl
jecxz
dec
std
push
add
ja
sahf
inc
in
push
or
pop
cmp
fidivrl
rcl
in
les
inc
fsubs
and
xor
or
insl
jle
ret
ljmp
cli
mov
lds
cli
out
insl
stos
js
andl
rorb
dec
jp
scas
mov
xor
mov
stos
pop
mov
int
inc
pop
test
repz
loope
pop
inc
pop
mov
ss
jle
jmp
jmp
add
jg
decl
jle
mov
xchg
sub
test
lds
inc
xlat
sahf
ja
test
push
addr16
lcall
pop
pop
inc
jle
adc
sub
cmp
sahf
jno
adc
cmp
movsl
xor
lcall
or
into
mov
adc
mov
xchg
enter
fs
icebp
mov
dec
aam
add
cld
fsts
stc
jle
jne
enter
gs
cmp
hlt
mov
push
add
inc
cld
loop
and
jmp
mov
out
dec
and
push
pop
fwait
stos
dec
pop
loopne
mov
lret
sub
sub
lds
iret
sub
inc
aam
dec
out
jns
sub
nop
mov
push
sahf
jnp
stos
sahf
lcall
test
sbbl
sbbl
jmp
xchg
andb
jb
push
sti
add
xlat
shrl
xchg
aad
imul
mov
mov
movsb
lcall
mov
jp
and
push
lea
xor
pop
cld
pop
fldt
add
es
push
stc
xor
bnd
pushf
out
dec
pop
stc
pop
inc
rol
mov
popf
sbb
daa
outsb
bound
ljmp
jb
lock
mov
cmpsb
scas
mov
pop
jp
push
push
pop
inc
std
push
xor
sbb
test
cwtl
mov
andl
int3
fstps
cs
ret
add
sbb
push
lahf
dec
sbb
mov
test
xchg
aas
jno
psubd
cmp
and
out
pusha
inc
ljmp
pusha
push
mov
add
shll
ret
imul
cmp
cli
adc
and
test
add
stos
sbb
inc
mov
dec
mov
dec
lods
fwait
sub
sahf
inc
addb
jno
fdivrs
sbb
cmp
lds
cmp
test
cmp
repnz
sar
lock
fwait
stos
lcall
repnz
in
out
or
jmp
sub
jno
leave
mov
sbb
out
cmc
stos
popa
or
arpl
imul
fmull
mov
push
lea
dec
rorl
scas
mov
outsb
xor
aam
iret
loopne
popf
les
sbb
sub
insb
xlat
leave
push
jl
arpl
pslld
mov
loope
cmp
inc
pusha
ljmp
mov
mov
mov
sub
cwtl
inc
mov
and
adc
out
inc
imul
adc
loopne
xor
adc
and
cltd
cs
and
dec
pop
stos
cld
mov
pop
push
xchg
mov
icebp
fimull
int3
xor
sub
test
scas
push
inc
mov
adc
jl
cmp
pop
outsl
mov
ret
inc
pop
fstl
mov
lcall
adc
cmp
mov
insl
mov
cld
adc
pop
xor
into
out
outsb
mov
mov
or
pop
inc
bound
push
add
jne
test
xchg
loopne
mov
notl
mov
push
divb
nop
lcall
cmp
lock
shrl
mov
inc
decb
cmp
dec
call
out
xchg
fcomi
insb
ret
mov
xlat
jg
push
xchg
lods
shll
lds
mov
dec
mov
add
aas
sar
fwait
and
repnz
xchg
cmc
lods
xor
out
int3
xor
mov
js
push
sbb
adc
jnp
mov
mov
jne
out
adc
and
or
jg
mov
adc
fadd
lods
jge
xor
in
add
pop
dec
dec
rcr
imul
ror
or
adc
jmp
sbb
sub
push
loop
push
leave
push
and
pop
mov
ja
fsubrl
ret
or
hlt
in
cld
test
cmc
xor
aaa
adc
and
mov
cmp
mov
cmp
jmp
stc
mov
and
inc
mov
and
ljmp
sub
pop
scas
sbb
and
subb
push
fadds
mov
dec
dec
int
xchg
push
mov
jnp
movsb
xor
dec
ror
dec
aam
and
dec
frstor
adc
lahf
in
and
inc
cmp
mov
movl
in
dec
icebp
int
pop
xlat
pop
jl
mov
pop
push
sbb
push
ljmp
xchg
mov
lock
mov
bound
push
lods
cmp
pop
imul
mov
add
mov
dec
jnp
insb
add
add
xchg
mov
lret
cmp
dec
out
fistpll
loop
or
scas
xor
fsqrt
ja
mov
fmulp
xchg
mov
loopne
add
movl
inc
dec
aam
jbe
loopne
call
jg
inc
adc
aam
popa
mov
notb
fidivrs
push
mov
lods
push
and
mov
adc
stos
nop
sub
adc
or
rcrb
and
cmp
iret
in
shrb
imull
cli
in
addr16
sbb
outsb
xorl
push
decl
xor
jae
cld
shrb
out
jmp
movsl
or
push
jno
pop
cmovae
inc
and
jae
and
sub
dec
imul
cld
outsb
mov
mov
js
mov
cmpl
out
pusha
push
ss
inc
jae
xchg
xor
pop
lods
push
imul
aam
loopne
push
lods
movsb
adc
clc
jne
test
dec
cmp
sbb
add
lock
fldpi
popf
dec
jle
adc
arpl
loop
int
mov
negb
aam
pop
into
aad
pop
stos
push
scas
sub
jno
pop
fsubr
fbstp
sub
out
dec
xchg
leave
inc
lea
jae
pop
push
subl
cmp
push
outsl
ret
dec
jbe
out
cmp
out
mov
icebp
xchg
dec
inc
sub
push
sub
test
cmpsb
mov
dec
adc
aam
adc
fcomi
jle
cmpsl
pushl
lods
std
dec
inc
pop
add
ja
imul
pop
add
mov
push
jnp
mov
xor
ds
xchg
jl
fwait
bound
andb
pop
cmp
in
inc
sbb
leave
cmp
dec
out
faddp
jge
je
rol
notb
hlt
mov
fists
or
popf
dec
test
push
xor
dec
push
out
mov
inc
lret
arpl
cltd
aas
lods
sub
lods
aad
and
inc
in
adc
push
xorl
rcrb
fbld
mov
add
xorb
popf
scas
cmp
das
mov
cmpsb
or
in
xchg
xor
out
adc
inc
mov
push
push
add
shlb
push
loope
rcr
inc
jo
aas
adc
xchg
sbbb
push
push
jo
out
or
jne
push
mov
jb
push
xlat
sti
mov
test
outsl
inc
lahf
sub
ret
roll
popa
mov
cmp
out
mov
je
aas
cmc
cltd
std
insb
mov
jnp
cmp
and
lea
adc
dec
pushf
lds
mov
gs
mov
hlt
fs
adc
les
mov
pop
mov
mov
pusha
pop
xchg
incb
test
inc
repz
xchg
pop
lret
ret
dec
mov
jg
sbb
std
mov
mov
add
inc
mov
sbb
lock
ret
mov
insb
fsubrl
mov
mov
pop
xor
fidivs
in
push
fimull
inc
jae
jne
sub
sarl
xorl
fdivr
lret
daa
cmpsb
or
ljmp
and
inc
or
mov
imul
cmp
lea
int3
pop
ficompl
test
iret
ljmp
xchg
and
adc
jle
mov
test
adc
out
jno
inc
dec
pop
sub
mov
mov
jecxz
pusha
sbb
mov
pushf
push
jmp
loopne
or
lret
mov
xor
pop
fwait
inc
fcoms
dec
push
cwtl
push
push
pop
add
lahf
pop
mov
out
sbb
xchg
cli
and
push
or
sbb
mov
cmpsb
jg
js
mov
mov
mov
xor
adc
push
test
adc
dec
xor
inc
rcll
fwait
xor
pop
mov
mov
cmp
dec
bnd
stos
xchg
aam
lock
clc
adc
fnstcw
sbb
mov
push
lret
xor
dec
int
pop
inc
xchg
daa
stos
dec
push
mov
push
jne
movsb
icebp
pop
mov
hlt
nop
call
inc
jns
xor
out
or
lds
sbb
orb
orb
jo
jnp
mov
xchg
sub
es
jge
fwait
stc
xchg
daa
mov
or
test
popa
cmp
cmp
lret
icebp
adc
pop
repnz
das
pop
mov
fimuls
mov
xchg
arpl
ficoms
addr16
ds
imul
pop
xchg
mov
push
fmuls
dec
inc
jle
addl
add
adc
mov
inc
push
sahf
dec
add
mov
jnp
repnz
int
fidivrs
sbb
xchg
leave
fildl
cmp
shrb
hlt
dec
mov
fbstp
movsb
inc
inc
dec
mov
lahf
rcll
pop
or
jp
jbe,pt
sub
sbb
mov
sub
fistpl
add
das
cwtl
pop
je
jae
js
lahf
push
jno
adc
call
and
xchg
call
rorb
push
cwtl
jne
repz
adc
mov
sbb
jmp
or
data16
xor
call
or
enter
iret
shrw
repz
jns
add
das
inc
adc
fucom
mov
or
pop
jp
std
sarb
cmp
sub
ja
push
cmp
dec
sbb
xor
sub
xorb
fadd
or
daa
push
jle
inc
cmp
pusha
lret
popf
lock
push
das
loopne
push
mov
cs
and
pop
push
repnz
jnp
adc
movsb
daa
adc
pop
mov
das
push
jle
pop
sub
mov
test
xchg
xor
out
aas
int
cmp
ljmp
pushw
jno
push
movl
in
gs
sahf
ja
orb
mov
sbb
in
xor
cmpsl
hlt
push
inc
mov
push
les
popf
js
cmp
movsb
jg
pushf
test
call
jo
ret
int
stos
fwait
lds
mov
lods
xor
inc
pop
test
scas
scas
mov
dec
ret
dec
lret
sbb
iret
cmp
inc
dec
pop
mov
dec
push
pop
inc
add
inc
ja
lret
push
hlt
cmc
adc
jp
sub
jecxz
lods
cmp
xchg
xor
mov
sbb
cltd
std
mov
mov
fucom
pop
mov
add
icebp
xorb
aad
fnstenv
adc
sbb
mov
and
inc
and
pop
xor
mov
int3
popa
shrl
adc
push
sub
scas
cltd
mov
insl
jno
push
pop
push
dec
ss
clc
faddl
push
dec
sbb
push
dec
loope
hlt
xchg
mov
je
dec
mov
pop
insb
fbld
jecxz
xchg
cmp
pop
cmc
jb
shlb
xor
push
mov
mov
sub
js
aaa
ljmp
out
call
mov
mov
movsb
jecxz
in
sbb
scas
sbb
push
cmp
add
je
bound
stc
xor
aam
add
aaa
aas
leave
pop
mov
dec
arpl
ret
jge
stos
ds
mov
pop
ja
add
icebp
jecxz
adc
lea
mov
add
mov
jp
lods
add
fldenv
lods
add
sarb
test
shr
cmp
icebp
xlat
add
or
xor
movsb
ds
lock
jecxz
mov
xchg
loopne
xchg
pop
mov
mov
enter
mov
dec
jb
dec
mov
es
xor
push
stc
jge
xchg
sbb
add
imul
into
and
scas
or
scas
out
and
fidivs
gs
mov
adc
mov
pushf
in
dec
pop
adc
adc
in
movsl
xorl
int
movsb
xor
mov
mov
adc
and
popf
push
xor
cmp
mov
and
cs
fsubp
cmp
xchg
jns
pushf
es
jle
cmp
das
in
stc
sub
cmpsl
adc
popf
aaa
cld
mov
fs
mov
push
stc
adc
add
mov
pop
or
mov
mov
sti
jb
cld
jecxz
cld
jns
repnz
mov
xchg
cmp
pusha
mov
insl
sbb
ds
sub
mov
dec
jae
hlt
sbb
jns
mov
int3
and
adc
mov
dec
cs
and
or
repnz
fcomi
mov
nop
cs
and
pop
gs
insl
mov
pop
fwait
adc
xchg
andl
leave
mov
jmp
or
into
mov
add
scas
push
push
filds
jb
push
les
ljmp
xlat
inc
popf
pop
cwtl
fldcw
sbb
or
xor
sbb
add
loopne
jg
xor
cltd
insl
aas
fwait
stos
clc
ret
arpl
dec
adc
mov
mov
cmp
mov
xor
or
in
cmp
ficoms
or
pop
adc
cmp
or
fimuls
pop
stc
mov
hlt
cltd
adc
or
fcoms
test
loopne
jns
cli
ljmp
adc
fwait
addr16
test
roll
lea
lods
mov
mov
das
rolb
imul
pop
xchg
xor
lea
pusha
push
shll
and
inc
pop
mov
add
mov
shlb
shlb
fcom
mov
push
cmp
mov
inc
sub
or
lahf
mov
adc
jae
into
sahf
pop
or
or
pop
adc
inc
jmp
test
inc
sub
sahf
cmp
or
cwtl
mov
mov
xchg
lods
mov
sahf
cmp
push
push
xor
mov
xor
mov
jmp
in
cwtl
push
pop
mov
lea
aas
loope
xchg
stc
ret
addb
mov
imul
mov
xor
fadds
pop
adc
js
rorb
out
data16
mov
push
pushf
xchg
lds
js
dec
mov
pushf
mov
std
push
mov
sahf
fcomps
cmp
into
loopne
fsubr
cli
loopne
call
dec
xchg
mov
std
push
xchg
adc
add
adc
mov
nop
mov
sbb
add
cmp
cmp
add
repz
ffreep
push
add
jge
in
bound
fsubrl
and
adc
xchg
lcall
cmp
shlb
xchg
adc
cmpsb
imul
cld
sarl
test
sub
lds
mov
jae
call
lds
lods
sti
icebp
std
pop
rcrb
xchg
mov
scas
inc
jne
pop
xor
fsubl
ret
ss
push
jmp
jno
mov
in
mov
enter
scas
ds
lahf
movsl
es
mov
add
lock
jmp
fnstenv
add
xlat
je
cld
in
add
add
jecxz
inc
cli
mov
lret
fwait
aam
push
loope
mov
les
jmp
lret
es
add
ss
inc
mov
movsb
negb
rclb
xor
sahf
xchg
add
fs
dec
ficomps
popf
lods
sub
std
sbb
or
cmc
in
sbbl
sbb
lret
rcll
or
mov
xor
cmp
scas
cmp
jge
dec
adc
das
lods
xor
cmp
pushf
rcl
cli
sbb
clc
fwait
sub
pop
cli
aas
mov
sub
sub
lea
push
fnstenv
push
fsubs
adc
decl
push
test
dec
cmovp
pop
inc
cli
ljmp
pop
adc
adc
pop
dec
lret
xchg
fisubrl
lods
inc
sub
test
js
in
sub
and
sbb
push
test
jge
push
jno
push
pop
in
push
in
lcall
mov
pop
dec
push
and
adc
out
in
frstor
and
into
je
push
pop
jbe
push
pop
jle
addl
dec
rcll
pop
mov
cmp
mov
fs
imul
insl
xlat
es
jecxz
fidivrl
cmp
movsb
movb
into
fnstenv
outsb
dec
add
lahf
mov
lcall
pushl
daa
inc
test
and
jne
ret
aam
cmp
push
sub
outsb
in
in
stc
ja
mov
movsl
dec
jns
jecxz
inc
fbstp
shlb
dec
dec
fisttpl
pop
adc
daa
inc
xchg
aam
add
inc
fucomip
flds
in
lods
mov
sbb
push
xchg
mov
daa
mov
cmp
push
repz
bound
dec
inc
cmp
pop
xor
or
lret
adc
iret
mov
inc
inc
test
imul
out
dec
lods
xor
fisubrs
stos
pusha
inc
ror
lock
dec
xor
push
pusha
lea
aas
in
out
adc
jg
pop
push
stos
mov
sti
repnz
mov
sahf
cmpsl
mov
mov
dec
add
dec
mov
push
xchg
sahf
lea
repnz
dec
and
or
ror
jne
aam
jne
inc
xor
mov
xchg
pushf
jg
mov
shll
jo
xchg
out
add
inc
cmp
sti
jne
repnz
call
sbb
pop
mov
rcr
push
mov
sbb
loope
and
movsl
adc
jb
pushf
insl
mov
hlt
mov
mov
dec
xor
pop
or
mov
mov
out
nop
lea
negb
sti
xor
imul
xchg
out
cwtl
sub
repz
pop
imul
repnz
xor
xchg
sbb
dec
add
dec
dec
and
adc
and
mov
inc
fistl
mov
sarb
enter
jne
movsl
pop
icebp
aam
dec
sahf
jns
pop
sarl
outsb
stos
nop
and
push
leave
test
mov
mov
adc
mul
pop
in
pop
jl
test
in
inc
xchg
jle
xor
add
xchg
movsl
testl
lret
mov
bound
pop
les
movsb
loope
icebp
sbb
test
stos
mov
push
xchg
adc
xchg
mov
and
test
inc
jp
test
and
mov
jmp
inc
inc
xor
imulb
ss
es
mov
xchg
and
scas
xor
push
xor
sbb
mov
cltd
and
adc
ret
das
jbe
fsub
aam
add
xchg
xor
xor
pop
add
jnp
jae
shll
sub
and
imul
push
mov
dec
cli
mov
push
push
cld
jle
lret
test
mov
inc
push
popl
xor
or
decl
shll
sti
cmpsb
outsl
fsubrl
push
sbb
adc
out
add
cmpsl
sti
mov
push
push
mov
call
push
into
push
fnstcw
cmp
xchg
inc
icebp
sti
leave
xor
shl
cmp
mov
lods
inc
and
inc
fmuls
xchg
pusha
leave
sub
mov
push
mov
cmp
lret
loopne
icebp
sub
call
in
bound
adc
sub
pop
enter
jp
dec
fcom
gs
daa
or
scas
sbb
inc
imul
clc
lds
push
call
aas
jecxz
jo
mov
mov
pop
sarl
or
inc
repnz
stc
sbb
jo
jo
xlat
pop
xchg
stos
and
clc
lret
sbb
imul
mov
push
xchg
ja
and
sbb
pop
mov
and
xchg
add
aam
xor
test
sub
mov
push
cmpsb
mov
imul
mov
xor
lods
in
jg
xchg
sub
in
xchg
movsl
push
dec
inc
push
xor
xchg
inc
in
mov
push
mov
lret
push
pop
and
mov
mov
adc
or
rcrl
test
mov
cmpsb
dec
mov
clc
sub
inc
stc
adc
cld
jno
sub
cltd
xor
cli
cmp
or
and
cmpsl
pop
jnp
push
cld
inc
jp
fs
adc
ffree
jecxz
push
sbb
sbb
out
std
cli
sbb
mov
or
pop
dec
test
outsl
test
sub
je
pop
sbb
data16
call
pusha
int
sub
aas
adc
ret
cmp
sub
in
je
fmulp
cmpsl
jge
xor
jno
dec
cmp
pop
arpl
in
dec
mov
lcall
in
add
and
bound
pop
jno
mov
out
cmp
lock
inc
loopne
lock
cmp
xor
mov
sub
lock
sbb
inc
ficoml
mov
inc
movl
push
xor
fistpl
iret
lcall
jle
int
inc
and
lret
push
ret
insl
push
or
cs
sarl
pop
adc
sub
jge
mov
xlat
add
dec
mov
lretw
scas
pop
dec
outsb
pcmpgtb
lcall
mov
test
lret
pop
xchg
idiv
push
nop
popf
jne
ljmp
hlt
push
fmuls
mov
fadds
jmp
popf
jo
std
popf
mov
add
addr16
imul
fucomi
movb
mov
cmpsl
jg
inc
daa
sub
fistpll
mov
mov
push
dec
out
insb
inc
lret
std
add
sbb
les
imul
sti
jl
aas
adc
in
loop
xchg
add
inc
out
clc
test
rorl
rcrb
jo
push
movsl
sub
pop
inc
ja
sub
scas
enter
xor
and
xchg
push
sbb
movsb
xchg
scas
cwtl
or
sbb
outsl
fcmovnu
mov
pop
dec
pop
xor
jnp
adc
and
sub
adc
push
pop
and
mov
pop
outsb
jg
add
imul
cld
pop
bound
xchg
add
or
mov
fdivrs
out
popa
xchg
shlb
scas
fwait
cli
ret
loope
mov
and
push
test
cwtl
pop
xor
xchg
mov
xchg
test
and
pop
xlat
inc
inc
decb
mov
xor
lds
push
mov
inc
test
popa
adc
lods
fwait
inc
dec
mov
outsl
gs
das
fcompl
sti
adc
sar
loope
pop
lahf
add
mov
movsl
scas
dec
push
int3
repnz
add
cmpsw
push
jp
adc
insb
push
pop
pop
dec
lods
jbe
push
lods
adc
das
aam
or
add
dec
xchg
mov
iret
xchg
mov
xchg
icebp
xchg
ret
inc
stos
sahf
pop
repnz
lods
cmp
int
lods
jns
repnz
push
and
or
cmp
or
xor
pop
pusha
jp
push
jns
sbb
mov
insl
jae
fsubs
cmp
icebp
jbe
cmpsb
and
pop
stos
lods
lods
and
push
xlat
int3
inc
cmp
stc
test
sbb
mov
sbb
dec
outsb
pushf
fistps
shr
sub
stos
imul
push
mov
pop
xor
dec
mov
stos
cli
ret
enter
fs
cmp
cmp
sub
pop
cmc
stc
xchg
adc
push
push
dec
inc
mov
movsl
pusha
pop
sarb
cmp
push
pop
out
movsl
sbb
incl
pop
inc
jle
jae
mov
cmpl
data16
lahf
cmpsb
mov
sub
jno
cli
push
lret
nop
mov
ret
xchg
push
sahf
ss
les
mov
sub
or
push
inc
hlt
out
add
dec
popf
lahf
mov
mov
cs
daa
subl
jno
push
adc
adc
jno
cmpsb
pop
push
sbb
mov
inc
lea
les
sbb
hlt
mov
cs
shrl
xchg
fldl
dec
into
mov
ds
out
jl
inc
out
les
mov
ljmp
xchg
enter
ret
scas
gs
fwait
jp
ficoms
cmp
mov
mov
jge
adc
andl
sbb
iret
mov
lcall
xchg
xchg
mov
xor
fwait
push
dec
mov
test
pop
jno
adc
in
fcompl
mov
lds
xor
fiaddl
sub
push
cmp
mov
outsl
mov
daa
loopne
xor
mov
lcallw
std
cmpsb
shll
idivl
sti
mov
add
pop
outsl
inc
inc
mov
pop
jl
inc
adc
sbb
call
cmp
jae
inc
rcr
je
or
jg
lds
and
or
imul
loopne
arpl
mov
shlb
mov
pop
fld
test
and
add
sti
andl
and
leave
mov
jmp
pushf
aaa
testl
popa
push
mov
add
jp
test
inc
std
repz
rolb
jo
inc
sub
in
fimuls
mov
add
call
cmp
sub
les
shll
jb
push
divb
add
hlt
roll
fimuls
mov
test
stos
jns
in
xchg
jo
gs
test
out
stos
mov
jns
adc
sahf
cmc
mov
fstl
out
add
inc
adc
cmpsb
repnz
insb
push
out
pop
add
push
xchg
stos
js
lret
inc
sub
push
xchg
stos
fisubl
in
jae
mov
mov
dec
lret
and
aaa
div
das
inc
imul
hlt
inc
daa
or
and
or
lret
lret
mov
fldt
icebp
ja
adcb
sbb
lea
sti
mov
adcl
repnz
testb
jmp
xchg
add
sarl
push
add
call
jp
aad
inc
xchg
aaa
inc
cmp
pop
das
lock
mov
ds
push
lea
xchg
inc
pop
inc
pop
imul
and
inc
lea
jg
std
stos
out
shrb
and
mov
mov
testl
dec
and
jno
push
pop
mov
mov
pop
xchg
lahf
push
in
and
cmp
into
bound
dec
test
in
dec
mov
gs
dec
rorl
cmp
les
push
dec
int
test
sti
push
inc
test
mov
aam
mov
mov
int3
divb
stc
jge
movsl
push
ret
stos
repz
bound
cmpsl
adc
lds
sbb
xor
ljmp
cwtl
lahf
push
movsb
and
es
jp
test
xchg
sbb
pop
mov
arpl
inc
dec
xchg
call
pusha
mov
cwtl
jge
jecxz
jmp
rclb
out
jp
insb
add
xor
pop
sarl
push
mov
push
pop
push
stos
pop
xorb
imul
in
sbb
mov
mov
cmpsl
cmc
xor
repz
nop
aam
mov
cmp
sub
addr16
or
dec
sub
sbb
mov
lahf
and
mov
js
mov
div
jle
test
roll
stos
sbbb
xchg
push
shl
xchg
or
push
inc
cmp
sbb
or
push
lods
out
aad
arpl
fistpl
mov
xor
cmpsb
pop
adc
test
sbb
jg
jp
pop
push
fwait
mov
mov
lds
imulb
out
mov
clc
mov
xor
mov
dec
or
or
repnz
lods
lock
inc
xchg
movsl
in
xor
ss
add
in
dec
jmp
in
sahf
xor
sub
mov
movsb
xchg
sbb
mov
dec
dec
push
in
repz
cmp
or
xorl
test
mov
xchg
mov
outsb
dec
mov
cmpsl
addl
mull
xchg
andb
inc
and
idivb
rorb
push
xchg
mov
xchg
mov
jp
sbb
aam
sbb
jmp
xchg
inc
pop
and
xor
sub
sahf
jns
jge
out
dec
pop
fcoml
fdivrs
movsl
loopne
pop
rol
mov
movsb
hlt
in
push
push
popa
adc
fucomp
pusha
pop
in
sti
fstpt
mov
std
pop
int
in
es
sbb
mov
pop
je
lret
pop
add
and
xchg
or
jne
je
stos
add
das
ss
ja
icebp
cmp
cmp
mov
sbb
add
fadds
mov
sub
mov
push
mov
add
xor
add
ljmp
popf
add
inc
xor
xor
lock
test
test
and
and
rcl
jl
mov
enter
gs
or
stos
xor
das
movl
mov
or
xchg
int3
rorb
pop
cmp
stc
sub
mov
mov
daa
hlt
pop
adc
pop
pop
and
jne
mov
mov
mov
xchg
cmpsb
lea
ds
pop
dec
xorb
jnp
gs
mov
pushf
add
ret
xchg
ficompl
adc
or
adc
and
mov
les
add
fdivl
dec
aaa
lds
push
dec
push
push
lahf
inc
push
mov
icebp
mov
cmp
gs
pop
mov
fnstcw
sysret
gs
ja
lds
cmp
in
stos
imul
sub
add
mov
jge
mov
ss
mov
add
bswap
dec
and
outsl
pop
mov
inc
imul
sbb
rclb
fdivl
mov
and
stos
push
pop
jmp
xchg
or
cwtl
scas
jmp
or
push
enter
xchg
mov
adc
mov
and
mov
jp
repnz
cli
inc
out
cmp
jo
lock
push
push
loop
and
jnp
loope
daa
pusha
xor
dec
arpl
cmpsl
adc
insl
or
sbb
cmp
sahf
ja
mov
cmp
push
movsb
mov
push
mov
icebp
push
xchg
call
loop
mov
add
out
add
sub
pop
stos
cli
addl
push
jmp
mov
subb
mov
dec
dec
imul
mov
fs
xor
clc
cmp
sub
addr16
or
sbb
and
jae
movsb
xchg
call
adc
jg
cltd
mov
sub
xchg
add
icebp
call
fadds
inc
lret
ja
jbe
mov
add
aam
sbb
inc
mov
dec
loop
jecxz
mov
or
arpl
inc
test
or
insl
imul
or
sub
or
jb
cmp
rcl
movsb
ds
push
adc
out
lret
popf
out
pop
les
jle
mov
mov
and
stos
arpl
xor
enter
xchg
or
call
ja
shl
shlb
mov
cld
daa
jae
aaa
sub
aas
shll
xor
movsb
inc
xor
jge
movl
push
inc
mov
imul
mov
test
xchg
sbb
jle
dec
aad
jnp
or
push
lds
lods
les
sbb
daa
xor
xchg
add
inc
mov
hlt
push
xchg
push
xchg
rorb
insb
in
cltd
lods
push
sahf
xor
xchg
sub
push
cmc
jmp
pop
mov
sub
aaa
xor
fidivs
jns
mov
adc
adcl
sub
inc
pusha
sahf
adc
cmp
push
xchg
shr
mov
dec
clc
mov
fmull
sub
repz
cmp
cmpl
int
iret
jae
ficomps
xchg
xor
leave
or
xor
push
and
in
imul
movl
inc
push
das
mov
mov
inc
mov
pop
jg
arpl
lret
sub
mov
shrl
adcb
pop
scas
dec
insb
movsb
lods
mov
xchg
add
int
xchg
xchg
sbb
lods
dec
mov
inc
dec
loope
jnp
xor
pusha
mov
out
xor
push
paddsb
test
imulb
push
jecxz
add
int
push
push
jne
mov
add
fistps
and
fwait
sbb
inc
pop
cwtl
add
outsl
dec
hlt
push
cmp
sbb
mov
insl
lock
push
lret
in
jo
test
inc
ret
or
andb
or
pop
in
sub
and
sarl
pop
push
fnsave
cmpsb
xchg
cwtl
jbe
mov
loope
icebp
lea
stc
rcl
xor
inc
inc
mov
and
dec
psllw
out
lret
push
push
xor
mov
fisttpl
rcll
pop
push
or
rorb
or
xchg
aad
jl
aaa
add
mov
xor
loopne
pop
push
repnz
sub
aaa
pop
nop
cmpsl
int3
adc
aaa
pop
dec
jno
out
fbld
jno
aas
pop
pop
stos
sbb
dec
fisubrl
inc
xchg
fs
inc
aad
and
shl
xlat
cmp
jb
sbb
cmp
inc
inc
jns
sahf
in
xor
jns
loop
das
loope
ret
mov
dec
lods
out
stc
popf
imul
mov
sti
adc
add
js
mov
int3
and
sahf
outsb
add
pop
mov
mov
inc
outsl
mov
stc
xor
clc
mov
adc
adc
push
push
fsts
xor
adc
fistpl
xor
and
sub
push
inc
add
mov
add
inc
push
push
jmp
dec
cmp
adc
push
lcall
xchg
add
arpl
push
gs
in
push
aam
call
add
dec
xor
mov
fidivs
fwait
test
sbb
scas
and
push
js
shll
lret
incl
mov
sbb
xor
sub
jb
or
sti
outsl
shr
or
or
das
pop
loopne
xchg
pushf
iret
jp
mov
mov
ss
mov
add
add
cld
mov
ljmp
je
adc
pop
in
push
and
into
inc
fucomip
pop
outsl
push
xchg
cmc
movsb
mov
mov
fwait
push
pushf
sbb
popl
loop
lcall
cmp
fbld
dec
add
clc
lods
mov
test
addb
lods
jnp
pop
sub
bound
movsb
fwait
mov
jge
pop
call
mov
or
aad
shl
fnsave
push
roll
xor
sbb
fcomip
add
aaa
or
or
cltd
mov
push
inc
movsl
adc
in
mov
aas
inc
iret
std
out
out
inc
xchg
andl
pushf
test
lock
ja
daa
rcl
xchg
inc
cmp
xchg
gs
mov
sbb
nop
xchg
add
imul
cmpsl
jbe
jbe
mov
stos
in
add
hlt
cmp
adc
sub
jb
ja
cltd
fnsave
pop
mov
mov
mov
mov
jne
stc
inc
jno
add
hlt
and
xchg
shlb
add
xlat
gs
mov
in
dec
ret
xchg
sub
jb
lea
inc
into
in
js
jnp
or
cld
pop
insl
ds
fcompl
cltd
cmc
mov
push
xlat
mov
enter
mov
sub
add
clc
mov
xor
or
cmpsb
jnp
mov
inc
dec
adc
xchg
stc
jp
inc
inc
push
cmpsl
scas
jne
ljmp
sbb
out
dec
or
cmpsb
push
sub
aas
mov
sbb
pushf
mov
sub
cmpsb
inc
push
std
jl
out
repz
inc
xchg
add
push
ss
pop
dec
sub
xor
dec
jmp
lcall
js
dec
pop
mov
iret
movsb
sbb
mov
loopne
jle
lcall
or
sub
flds
sbb
ljmp
xchg
gs
and
pushf
insl
cmp
in
lods
sbb
fsts
cli
stos
mov
xchg
jmp
xor
pop
lret
in
adc
sub
cmp
jg
cmpsb
dec
stc
sahf
test
dec
rep
in
xor
mov
adc
std
ds
lods
frstor
push
xor
fildl
lret
outsb
adcb
inc
mov
push
icebp
into
imull
cmp
pushf
xchg
and
xor
add
sub
pop
stos
into
inc
ds
fnstsw
popf
ficoml
mov
fsts
and
add
outsb
je
addb
add
cwtl
andl
push
jecxz
cmovno
int3
cmp
sub
mov
aaa
ret
jmp
pushf
sub
std
iret
imul
movsl
hlt
int3
and
sub
ja
and
movsl
call
sub
sbb
pop
out
sub
xor
mov
test
stos
in
lods
rcl
aam
adc
mov
inc
aad
pop
gs
push
fwait
iret
jle
gs
in
mov
adc
or
outsb
xchg
rol
data16
pop
mov
fwait
icebp
test
xchg
es
xor
mov
pop
sbb
or
inc
rcrb
add
inc
cli
js
xor
mov
and
shll
aam
mov
xchg
fidivs
popa
das
sbb
mov
movsb
mov
jmp
push
repnz
es
sbb
dec
or
aad
push
dec
test
mov
jns
sub
in
dec
insl
dec
in
mov
jge
in
inc
dec
mov
or
outsb
test
ja
xchg
xchg
push
sbbb
xor
es
sub
enter
ljmp
add
inc
sbb
and
jnp
lock
sbb
daa
pushf
or
push
stos
cmpl
or
sub
jne
xlat
lds
mov
jmp
leave
mov
out
movsl
shrl
pop
xor
add
loope
fs
sub
imul
push
push
and
sbb
jno
xlat
push
xor
xchg
adc
cs
dec
adc
mov
outsl
rolb
lods
push
ret
nop
push
fwait
pop
mov
jg
inc
pop
dec
push
and
and
add
sub
arpl
fisttpll
xor
push
fiaddl
imul
xor
imul
loope
js
jnp
or
xor
dec
push
rcrb
int3
in
jne
mov
and
cmp
lea
shll
pop
push
fistpll
fs
dec
xor
test
shll
repnz
or
js
rolb
lahf
mov
daa
pop
popf
xor
or
pop
sub
cs
popf
aas
jl
inc
sahf
jle
ljmp
neg
out
and
pop
notw
cli
scas
aad
dec
xchg
pop
inc
ret
es
out
sub
jmp
movsb
movsl
arpl
int3
pop
rcll
lret
es
mov
imul
lahf
inc
adc
sbb
inc
or
inc
das
scas
mov
les
addr16
pop
fsubrl
outsl
cmp
fs
stos
loopne
fisttpl
sbb
push
dec
inc
push
adc
fimull
aas
mov
xchg
xchg
sbb
mov
lret
xchg
mov
xchg
xor
mov
jp
add
xchg
pushf
nop
test
mov
push
jb
jge
add
mov
jbe
test
ret
adc
notl
popa
sbb
ret
xchg
aas
sub
cmpsl
push
cmp
dec
jmp
imul
stos
pop
xor
cmc
cmpsb
ss
fmull
jle
cmc
push
pop
addr16
inc
insb
xchg
cmp
inc
in
mov
shrl
js
addr16
push
jno
rcll
mov
jns
ljmp
loope
bound
aaa
or
cmp
sbb
push
fstpt
addr16
insl
stos
fimuls
pop
loopne
mov
shrb
or
cs
xor
pop
push
adc
pop
sbb
dec
into
scas
xor
sbb
adc
adc
mov
jge
inc
mov
push
or
cmp
inc
mov
or
mov
enter
push
fwait
lds
rcrl
inc
sbb
mov
sub
shlb
mov
push
mov
push
shrl
pop
subl
dec
mov
int3
dec
pop
leave
icebp
push
mov
in
inc
push
pusha
push
or
seto
addr16
sub
scas
fiaddl
sub
xor
add
fstps
fs
sti
lea
inc
dec
pushf
daa
mov
adcb
in
lds
jg
xchg
leave
jmp
cmp
push
fiadds
sbbl
je
mov
movsb
pop
jns
sbb
dec
jb
int
movsb
pop
cmp
imul
sbb
sbb
inc
push
addl
out
mov
ss
fdivrp
sub
adc
pop
jne
add
xor
ljmp
dec
xchg
xchg
and
mov
jge
pop
lea
fcoml
fmull
push
jp
adc
insl
rcrl
jl
adc
xchg
push
sbb
test
loopne
scas
adc
das
xchg
cwtl
dec
sarb
cmpsl
jbe
adc
jg
sbb
sbb
push
stos
or
jle
sbb
sbb
les
in
cmp
pop
dec
aas
sub
cmpsb
mov
or
repz
push
jnp
cmpsl
dec
mov
aaa
pop
rol
jb
jl
ret
mov
adc
sbb
int3
and
jbe
pop
cltd
loopne
sbb
enter
pop
xor
jno
inc
jo
cli
adc
ret
pop
stc
cmpsb
sarl
mov
pop
push
xor
ret
sub
add
jbe
adc
ficompl
idivb
int3
pop
mov
inc
ret
outsb
popa
repnz
pop
in
mov
out
and
jmp
ret
xor
xor
int3
pusha
int3
lods
mov
in
sub
xchg
xchg
hlt
addr16
add
in
jbe
adc
out
pop
xchg
pop
and
sub
arpl
outsl
sbb
cmp
jge
lret
dec
cld
ljmp
xchg
mov
or
scas
aaa
jbe
dec
or
cli
fs
outsl
dec
stc
fadds
jp
ja
data16
clc
push
or
jbe
sub
dec
stos
mov
pop
pop
or
inc
inc
repnz
pop
insb
xor
and
sbb
bound
inc
out
in
negb
stos
cmpb
push
cmp
mov
and
out
ss
popa
mov
sub
shll
fisubl
fmuls
sbb
sub
dec
daa
int3
inc
lods
mov
jae
jl
pop
rcl
sti
push
in
fs
test
pushl
call
mov
call
frstpm(287
push
bound
add
mov
outsl
loopne
push
mov
or
cmc
inc
inc
sub
mov
gs
mov
pusha
xor
xor
add
cltd
mov
cmp
push
jnp
les
jecxz
bound
push
cmp
xor
mov
daa
je
fldl
jmp
stos
jns
jnp
fildll
mull
or
sahf
cmp
mov
mov
push
test
stos
rorb
xor
push
les
es
fwait
loope
fcmovne
dec
outsb
push
xor
gs
fstpl
mov
mov
mov
int
sub
clc
sub
xchg
push
out
lret
jmp
mov
xchg
and
pop
cmp
addr16
roll
jnp
sbb
mov
adc
cld
cmp
jbe
mov
imul
mov
sub
push
nop
or
out
dec
fcomip
out
push
enter
and
xor
mov
jnp
add
and
jne
lahf
or
loope
xorl
cs
cmp
cmp
pop
and
jge
ret
mov
ret
cmc
test
out
inc
ds
rcrl
jae
test
mov
xchg
in
xor
mov
fdivrs
mov
aam
sub
scas
subb
imul
jns
mov
xlat
call
jnp
mov
addr16
rolb
sbb
aaa
or
sbb
hlt
jmp
test
dec
sti
inc
inc
int
jno
adc
lds
mov
nop
and
jb
dec
ss
mov
popa
aaa
lcall
pop
ja
data16
out
or
rcll
mov
ljmp
jge
dec
in
lea
pop
rclb
xor
popa
inc
fsubp
cmc
outsb
sub
test
inc
sbb
hlt
daa
sub
jae
mov
xchg
inc
push
stos
ja
push
jb
mov
mov
js
outsl
in
cmp
popf
lds
inc
adc
shlb
pop
mov
notl
fcom
in
add
xchg
ror
push
idiv
aas
xlat
mov
std
jge
out
rcr
bound
rcll
je
xor
dec
scas
mov
push
sbb
ljmp
ja
xor
loop
not
dec
xchg
cmc
dec
daa
push
or
xchg
sahf
fidivrs
loope
loope
mov
ljmp
scas
pop
xchg
test
ss
or
adc
inc
out
dec
scas
pop
jp
stos
pushf
mov
imul
leave
ret
and
clc
push
xchg
jecxz
or
das
xchg
push
repz
fs
js
call
jo
out
fs
inc
sub
mov
dec
pop
jmp
movl
xchg
loopne
dec
pop
mov
pop
xor
or
es
mov
stos
inc
jp
cmp
call
jbe
sub
mov
leave
mov
mov
xchg
and
mov
sbb
sbb
mov
lds
push
rorb
mov
cmp
fists
in
xchg
mov
dec
rcl
push
pusha
or
cmp
call
and
imul
mov
pop
pop
testl
or
sub
lods
lods
jmp
sbb
and
cmp
shl
dec
rorl
int
ret
or
cmp
bound
adc
cltd
push
test
jge
imul
mov
mov
lret
mov
pop
mov
xchg
cmp
inc
cwtl
ret
push
jae
sub
mov
sbb
sbb
inc
mov
adc
adc
ds
lock
data16
push
in
fwait
mov
jnp
sbb
push
shrb
in
mov
lds
std
jae
enter
cmc
lret
sbb
lock
rcl
push
stc
mov
inc
stc
jmp
lret
into
sbb
jge
insl
in
stc
test
cmpsl
pop
cmp
mov
enter
mov
mov
pop
xchg
les
and
mov
test
outsb
mov
and
sub
fmuls
arpl
mov
xchg
pusha
clc
aam
pop
repz
lcall
cmp
je
mov
and
fdivs
fs
inc
daa
in
dec
popa
or
into
dec
and
sub
jbe
sbb
jnp
dec
idivb
xor
pop
push
push
push
jecxz
adc
ss
sub
sub
push
mov
and
aam
or
sbb
or
fmul
or
sbb
inc
cld
lea
fidivl
pop
sub
rcl
xor
mov
loop
mov
arpl
push
mov
inc
jmp
out
adc
arpl
popl
stos
and
lea
and
insb
cmp
mov
mov
add
sub
mov
js
lret
aas
jnp
dec
push
adcb
and
cmp
repnz
add
fisubs
sub
xchg
sub
jmp
lea
dec
in
cs
loop
rclb
addl
jl
jae
lods
rclb
loopne
aaa
mov
fstps
sbbl
ljmp
mov
jb
adc
insl
jmp
xor
rcrb
fsubrs
cmp
xchg
mov
jo
lds
lods
cmp
pushf
or
mov
or
ja
imul
fisttpl
pop
sarb
pop
push
push
clc
add
inc
push
int3
push
fildll
out
nop
add
lret
or
cmpsl
dec
xchg
dec
dec
js
xor
je
inc
push
jne
test
popa
mov
in
push
xor
inc
pop
aad
mov
test
in
pop
movsl
arpl
stc
jae
js
adc
xlat
xchg
xchg
std
addb
mov
lods
nop
xlat
inc
jg
xchg
insl
mov
pop
jmp
and
push
aaa
and
stc
mov
pop
mov
dec
sbb
daa
fidivs
arpl
rcll
pushf
jb,pn
stos
scas
adcl
and
nop
mov
ret
cmp
jge
test
jne
jle
pop
dec
shrl
mov
inc
les
shrb
mov
test
inc
sub
stos
mov
sahf
pop
dec
fidivl
inc
out
add
rorl
mov
cld
adc
pop
xchg
mov
mov
jg
outsl
movsb
pop
popa
fstl
int3
pop
fidivrl
shrb
gs
nop
js
jno
mov
jle
setnp
in
mov
lea
jmp
jne
repnz
ret
xchg
push
shrb
push
add
add
jg
aas
dec
mov
enter
push
xchg
sbb
push
xlat
xchg
bound
or
stc
and
or
int3
call
std
xor
push
aaa
test
and
dec
dec
imul
add
into
mov
inc
inc
lods
adc
roll
cld
mov
mov
repnz
xchg
iret
mov
loope
xor
adc
add
pop
cmpsl
mov
fucomip
bound
add
push
jae
int3
xchg
shrb
popf
dec
shll
lock
and
adc
out
imul
inc
xchg
into
mov
rolb
ret
jne
clc
and
fwait
lods
mov
stos
enter
sahf
mov
insb
mov
mov
loope
and
fstps
jmp
mov
les
outsl
outsl
es
jb
xlat
icebp
sbb
sti
out
pop
inc
mov
adc
dec
mov
xlat
add
shll
dec
push
enter
stc
or
stos
fstpl
or
push
jl
scas
call
inc
jp
and
sbb
data16
mov
xchg
add
loope
in
int3
aad
stc
and
xchg
xor
cmp
sti
das
fcmovnbe
cmp
gs
push
xor
lods
insl
jb
mov
cmp
mov
inc
and
fmul
jns
xchg
clc
sub
andb
arpl
add
add
mov
in
cmp
int3
imul
jle
test
daa
push
aas
out
scas
pop
fnsave
ljmp
data16
adc
mov
mov
lahf
imul
mov
push
nop
lret
dec
lock
cmpsb
mov
xor
push
dec
and
and
sub
or
call
push
pop
outsl
and
mov
adc
cmp
call
jmp
das
mov
xor
adc
inc
jmp
cld
addl
stos
add
inc
push
xchg
ret
aam
aas
xchg
out
lods
iret
dec
or
mov
mov
fsubl
inc
and
cs
mov
push
adc
leave
dec
nop
cmc
icebp
jbe
jle
dec
inc
dec
push
jmp
std
mov
push
pop
jmp
push
fistpl
fistl
jl
jge
mov
dec
das
adc
cld
fnsave
jns
test
xlat
cltd
pusha
addr16
pop
jle
fldenv
jle
cli
dec
cmc
cmp
fisttpl
jns
leave
xchg
inc
out
adc
inc
addl
jmp
dec
fxch
xchg
inc
leave
shll
push
xor
sarl
mov
popa
jbe
or
test
in
test
dec
fdivrs
fistps
dec
pop
adc
mov
cmp
add
mov
jo
rorb
ljmp
test
rcrb
aam
and
dec
sub
stos
scas
jmp
ss
dec
cmc
xchg
push
pop
dec
stos
xchg
int3
sbb
out
jmp
push
test
sub
pushf
leave
imul
dec
pop
pop
pop
mov
in
add
pushf
cmp
insl
hlt
fnstenv
sahf
test
pop
test
push
mov
iret
imul
call
sahf
aam
jle
test
sub
lret
push
test
mov
jo
les
mov
mov
xchg
fnsave
fmuls
xor
or
nop
xor
in
rolb
ficoml
es
push
adc
sub
pusha
jne
ret
mov
aam
ds
push
mov
nop
aaa
pushf
xchg
adcl
je
inc
ret
sbb
sbb
mov
repnz
aad
fdivrs
shll
sbb
jp
pushf
out
xchg
stos
push
subb
ss
rcll
jl
lret
lea
iret
outsl
adc
dec
mov
or
test
jecxz
jno
or
sub
jmp
into
out
in
shll
or
fcomp
or
jp
xor
jno
scas
and
jp
jbe
int
sub
inc
out
arpl
arpl
lds
arpl
and
and
sub
sbb
fs
icebp
faddl
sahf
xchg
push
adc
sbb
imul
dec
lods
jbe
test
pusha
int3
push
mov
dec
xor
imul
scas
xor
dec
mov
pop
fs
inc
mov
dec
mov
ficoml
xorb
stc
or
and
and
mov
cmpsl
mov
mov
lcall
jge
insl
dec
xor
test
dec
mov
addl
mov
jmp
pop
sbb
lret
adc
or
mov
mov
inc
mov
push
orb
pop
mov
iret
ror
xor
pop
out
jo
das
sbbl
mov
sub
pop
dec
mov
dec
lret
dec
call
mov
rol
sub
add
mov
stos
mov
iret
adc
test
push
inc
aaa
sbb
out
mov
stos
cwtl
in
das
aaa
jns
jmp
dec
pop
andb
fistpll
pop
repz
cmp
pop
adc
cs
data16
fwait
push
ljmp
or
mov
and
jle
test
sahf
lods
clc
jns
icebp
dec
pop
mov
lcall
xchg
icebp
dec
cmp
loopne
aam
jl
data16
out
fidivrl
fnstcw
aas
ficomps
out
mov
xchg
outsb
addr16
mov
mov
cwtl
mov
pop
dec
xor
mov
repz
sahf
lods
jno
ret
or
inc
test
adc
push
mov
outsl
stc
pop
shr
addl
ja
fsubl
xor
and
js
inc
imul
aad
sti
loope
cmp
push
and
cwtl
sbb
push
add
imul
jge
dec
decb
test
add
pop
mov
cli
xlat
pop
lods
or
leave
mov
jge
cmp
call
add
popa
xchg
movsl
sub
into
into
imul
cs
into
dec
in
mov
rcll
push
push
jg
je
pop
movsb
jns
cmpl
notb
stc
sub
mov
insb
loop
pushf
inc
loope
dec
enter
jle
dec
lock
mov
jbe
xchg
add
xchg
stos
xchg
lcall
cmp
add
js
inc
xchg
sahf
shl
sbb
jecxz
xlat
jno
cmp
or
sahf
push
cltd
adcl
jne
pop
adc
rcll
dec
add
test
sbb
jecxz
jns
fildll
pop
jmp
loop
hlt
mov
xlat
or
sub
sub
ja
or
aas
repnz
jbe
rclw
jo
fmuls
repz
pushf
sahf
cmp
fwait
dec
aad
imul
mov
movsb
and
scas
jge
jns
packuswb
sbb
jg
pushf
mov
lcall
insb
lahf
repz
lahf
or
jbe
mov
jg
jp
test
into
push
add
shlb
fldcw
inc
cmpsl
mov
mov
popa
cmp
in
jbe
scas
insb
jne
xchg
sub
pop
cmp
dec
daa
and
sub
sbb
ret
mov
mov
pop
cltd
xor
and
add
push
out
mov
inc
movsb
xchg
mov
push
dec
daa
loop
xor
aas
and
hlt
xchg
sysret
test
test
push
push
mov
add
cwtl
pop
mov
xchg
mov
pop
imul
popa
xchg
data16
adc
or
jbe
mov
out
insl
pop
call
inc
imul
cmpsb
outsb
push
pop
add
xchg
imul
or
test
es
dec
mov
adcb
mov
and
jb
outsb
xchg
cmc
mov
and
push
mov
mov
test
push
adc
loop
ljmp
pop
sub
cmp
push
jl
fmuls
dec
sub
mov
stos
mov
xchg
jb
rcrl
inc
mov
lahf
fwait
mov
pop
insb
mov
xchg
in
lcall
push
inc
jp
lods
jle
mov
jae
dec
inc
mov
int
add
mov
mov
sbb
aas
sub
cwtl
pop
xor
dec
add
add
jb
inc
cmpsb
cs
mov
pop
or
nop
aaa
jo
adc
test
orb
jmp
out
fisttpl
xchg
xchg
and
cmp
stos
mov
imul
imul
pop
ds
es
jecxz
fistpll
add
sbb
or
sahf
roll
aam
or
jg
dec
cvttps2pi
aad
pushf
xor
adc
pop
fwait
jp
xchg
dec
std
push
xchg
add
inc
push
sarb
push
insb
aam
into
in
loop
aad
and
lods
out
test
push
loop,pn
nop
jne
stc
in
pop
mov
mov
xor
and
ffree
pop
xchg
push
lods
lds
stc
sti
test
loopne
dec
rcrl
in
inc
sbb
push
mov
xor
mov
fiadds
inc
es
test
mov
das
inc
cmp
orl
ja
jbe
mov
int3
mov
lcall
cmp
ljmp
scas
push
in
sbb
and
cli
mov
mov
outsl
test
inc
ss
push
cmpsb
test
insl
and
je
cmp
dec
out
aam
pop
cmp
insb
out
outsb
jo
adc
stos
cmp
stos
cmpsb
jae
clc
cmp
popa
fmull
lds
mov
jno
jl
or
sahf
shlb
and
int3
imul
cmp
pop
mov
pop
mov
jmp
insl
ror
shlb
ficompl
add
addr16
and
sub
mov
in
lods
sbb
adc
jg
cmp
shl
repz
xchg
push
daa
fs
add
shl
loopne
mov
inc
int
int
jnp
loope
and
sbb
mov
xchg
and
iret
iret
jge
lods
xor
jnp
jno
inc
jmp
mov
mov
mov
mov
xor
out
mov
dec
test
filds
pop
test
pop
jns
mov
sbb
inc
mov
insb
xor
mov
pop
cmpsb
int
shlb
push
shr
out
les
mov
loopne
in
or
or
bound
loope
sbb
pop
pop
inc
test
inc
mov
add
mov
adc
ret
or
inc
pop
xchg
push
ss
aaa
and
and
push
dec
mov
mov
mov
mov
sbb
push
ficoms
repnz
adc
cmpsl
mov
flds
test
jp
sub
xchg
addb
cli
shlb
es
hlt
jb
cmp
push
ret
cmp
xchg
push
enter
mov
adc
loope
lahf
ret
ret
cld
rol
adc
mulb
rorl
dec
das
int3
aad
or
shl
dec
or
pop
mov
jb
push
out
inc
jg
mov
and
das
mov
xchg
xchg
jecxz
stos
mov
je
test
or
int
mov
pop
adc
ret
pop
push
xchg
xchg
nop
pop
pop
add
adcl
inc
and
pop
movsb
mov
pop
mov
pop
mov
jmp
dec
xor
mov
stc
mov
leave
sbb
sti
adc
ret
out
sbb
or
xor
es
imul
add
inc
xlat
scas
jecxz
shrl
std
sub
add
jbe
clc
jae
sbb
fistl
out
xorb
fwait
mov
mov
testl
clc
dec
out
repz
lret
add
fdivs
fcoms
sbb
xlat
push
das
xchg
stc
push
cmc
int3
push
add
aad
push
mov
mov
lahf
mov
sub
inc
repnz
movsl
inc
adc
sbb
push
outsl
or
push
or
pop
sbb
mov
stc
and
push
pop
out
xchg
pushf
add
push
sbb
sbb
cs
mov
push
add
cmp
push
out
lock
sarl
add
mov
je
faddl
pop
outsb
mov
scas
lock
enter
imul
int3
push
mov
pusha
or
outsl
mov
inc
push
sub
dec
sub
pop
mov
mov
outsb
ss
inc
es
cmp
daa
jae
or
subl
mov
cmp
nopl
jo
sbb
call
pushf
orl
or
pop
sbb
lahf
mov
push
int3
mov
xchg
pop
fs
popf
rcrb
insb
flds
inc
pop
aas
mov
out
xor
mov
cmpsl
out
scas
pop
pop
pushf
mov
jo
jnp
aad
adc
jmp
rep
mov
sub
andb
out
inc
sbb
in
int3
or
adc
ret
pop
adc
mov
push
arpl
enter
imul
xor
mov
dec
mov
test
mov
push
mov
dec
jg
mov
add
sbb
sub
jne
mov
shl
aaa
fiaddl
push
cmc
rolb
mov
add
cmpsl
pop
jmp
mov
sub
jae
orb
or
rorl
rclb
push
cld
cld
scas
lods
pop
add
ret
ljmp
pop
push
js
lds
mov
or
sbb
and
aam
pop
adc
call
add
out
vmwrite
mov
in
clc
inc
dec
mov
clc
pop
jo
and
mov
push
cmc
adc
pop
ljmp
adc
sub
iret
jae
bound
pop
loope
mov
fisubrs
frstpm(287
jno
mov
std
xchg
adc
rcrl
lret
dec
jae
push
mov
shll
mul
fcmovnb
loope
mov
js
sti
cmp
sbb
sbb
data16
sub
lcall
daa
ficompl
call
jp
fldenv
addl
mov
xlat
mov
xchg
cltd
jno
mov
js
mov
inc
mov
fmulp
sbb
sbb
shlb
enter
cmp
dec
test
dec
es
sbb
or
mov
std
divb
inc
jmp
stc
mov
in
scas
repz
mov
mov
adc
xchg
inc
ret
inc
sub
xchg
in
add
jno
ret
jno
lods
cltd
sbb
cmp
or
shlb
xchg
dec
and
cmpsl
jp
and
fidivl
cmp
pop
decb
in
stos
in
imul
insl
stc
push
shl
icebp
fists
insl
xchg
call
cmc
loope
pushf
jge
repnz
sbb
mov
ret
pop
out
mov
out
adc
inc
or
add
aaa
push
xchg
mov
xchg
das
mov
jb
mov
add
aam
lret
jb
mov
mov
mov
fcoms
dec
jl
outsl
mov
lods
dec
movsb
jge
xor
dec
push
test
mov
jmp
lods
mov
xor
adc
pop
subl
cwtl
inc
shlb
inc
lret
jg
lea
sbb
and
stos
ljmp
xchg
inc
mov
movsl
stos
xchg
ret
jecxz
out
jae
xchg
xor
mov
adcb
add
inc
mov
mov
sbb
cld
mov
dec
inc
mov
pop
cmpb
cmc
push
test
sbb
xor
out
sbb
js
push
and
cmp
sub
mov
sti
push
fsubl
sbbl
into
cmp
mov
jo
mov
and
sub
fcmovbe
dec
mov
test
mov
and
xchg
pop
jmp
sub
xor
sbbl
aam
sbb
sub
jecxz
ja
clc
pop
sub
sub
inc
movsb
mov
lret
mov
rorl
sub
dec
xlat
pop
daa
jbe
rolb
sub
jb
ja
pop
cmc
xchg
mov
and
jecxz
inc
int3
cmp
leave
data16
xchg
ljmp
stc
in
mov
jge
lock
push
pop
mov
lret
out
je
mov
push
test
push
ds
std
int
sub
xor
inc
inc
lods
aam
leave
popa
bound
mov
xchg
xchg
push
ret
add
inc
stos
stc
xchg
jecxz
out
adc
push
push
cmc
in
data16
xlat
cld
add
xlat
pushl
lret
int
mov
lds
xor
cld
aas
lcall
cmp
das
movsb
jmp
lsl
pop
add
dec
xchg
adcl
push
ret
push
adc
mov
jle
mov
stos
and
add
ret
push
lods
js
push
add
sbb
push
mov
mov
xchg
inc
in
cld
xchg
and
lcall
mov
jb
mov
aam
or
xchg
mov
mov
push
das
xchg
xchg
pusha
jg
cmpl
fldl
imul
fmuls
mov
adc
cmp
in
ret
ret
inc
ljmp
jmp
mov
repnz
rcr
dec
sub
xor
mov
adc
cmpl
sub
push
pop
incb
cmc
mov
xchg
mov
mov
lods
pop
fcmovnb
sub
adc
in
xor
mov
or
jl
inc
mov
aam
lods
arpl
add
adc
adc
das
ja
les
add
jp
sub
add
sbb
dec
jecxz
add
test
push
leave
sbbl
mov
adc
sbb
and
or
loope
dec
dec
stos
jl
and
sbb
jecxz
or
jle
mov
sub
jae
mov
mov
mov
add
mov
hlt
adc
adcb
mov
ret
loop
push
inc
mov
in
jo
sub
push
je
cwtl
xor
inc
addr16
lahf
adc
cld
insb
cwtl
popf
add
mov
fwait
dec
or
cmp
sub
addb
loop
loopne
push
cltd
jns
sbb
shrb
inc
fimull
mov
sbb
das
sub
bnd
fdivl
jecxz
dec
mov
in
mov
cmp
dec
arpl
jl
in
mov
jne
xchg
sahf
inc
sbb
aad
cmpsb
test
cmp
int
xor
jnp
push
rorb
or
xor
adc
out
adc
lahf
mov
add
push
shr
clc
popf
mov
jae
scas
xchg
pop
aad
jmp
loope
and
pop
or
iret
jecxz
icebp
cld
dec
mov
xchg
mov
mov
push
js
push
movsb
cld
ljmp
sbb
push
leave
iret
lods
xchg
xor
cmp
cmp
xor
sub
out
cltd
add
lds
out
push
sahf
dec
dec
popf
dec
cltd
sub
out
mov
dec
and
cltd
add
and
out
nop
sub
xor
push
dec
add
jge
add
mov
ret
pushf
nop
dec
sbb
lock
lock
pop
xlat
xchg
cvtdq2ps
push
call
in
out
ret
push
and
call
cli
mov
ret
mov
jp
std
ss
mov
xor
call
pop
add
sbb
mov
jns
loopne
lcall
cmc
popf
jmp
push
call
jne
mov
or
add
ljmp
lds
or
pop
and
dec
xchg
sub
insl
xchg
jne
cmp
pop
dec
inc
arpl
sub
mov
test
and
sbbl
in
popa
add
shrl
jmp
ficoml
jbe
fxch
inc
jecxz
rcrb
loopne
rcrl
or
or
mov
adc
dec
add
xchg
movsb
hlt
jmp
scas
andnps
sbb
pop
ja
adc
nop
std
push
jecxz
xor
xlat
sub
in
in
rclb
mov
cld
loope
jbe
cmp
aam
mov
mov
cli
push
jnp
xchg
das
sub
repz
insl
movsb
sbb
sbb
testl
and
out
ss
mov
dec
adc
addr16
loope
push
imul
test
subl
mov
add
or
xor
sbb
fcom
sbb
lret
cmpsb
lahf
or
cli
inc
xorb
mov
stos
sbb
popa
or
insl
push
push
push
lds
lock
cmpsb
xor
jmp
aas
push
cltd
xchg
xorb
lret
push
xchg
mov
repz
sbb
add
cmpsl
xlat
push
pop
push
adc
insl
into
aaa
shl
push
loopne
test
push
dec
jle
add
pop
aad
mov
lea
in
pop
out
adc
fidivs
pop
adc
into
inc
mov
leave
xchg
cmpsl
popf
xor
xor
gs
cmpsl
cwtl
sub
pushf
cs
xchg
pop
jge
push
fld
inc
cmc
jns
rcl
rclb
popf
int
xlat
pop
dec
lret
add
sbb
jmp
cmp
lods
pop
dec
sbb
pop
rcrb
pop
fiaddl
sub
aaa
and
mov
and
cltd
nop
fs
cs
std
cmp
pusha
aam
cmp
hlt
std
arpl
add
jle
ds
sub
push
sti
push
xchg
clc
shl
pop
sub
fldt
jecxz
lcall
mov
loope
fnsave
popa
andb
mov
mov
or
scas
pop
scas
xor
sbb
mov
lea
arpl
cmovbe
insb
cmp
or
insb
in
ja
sbb
aam
sub
or
inc
loope
ret
or
imul
mov
jmp
jecxz
insb
xlat
scas
insb
cwtl
push
imul
xchg
out
push
scas
out
lods
mov
add
fldenv
dec
in
jle
out
pusha
aas
lahf
iret
int
sub
mov
xor
jno
fimull
cmpsb
add
call
xlat
xor
sahf
xor
jp
jge
test
bound
jne
scas
jmp
repz
xor
test
xchg
pop
mov
pop
test
out
loope
sub
push
pop
xor
addr16
xor
lcall
and
adc
and
int
cwtl
subl
dec
push
xchg
pop
frstor
jno
inc
pop
jno
jbe
xchg
cwtl
bnd
xchg
mov
mov
scas
scas
xor
pop
cmp
mov
fiaddl
out
mov
xor
or
mov
mov
out
xchg
nop
scas
push
sbb
out
lret
in
or
mov
loope
or
ret
out
inc
pop
cltd
xlat
cmc
cmp
mov
in
fidivs
nop
mov
jns
andb
adc
mov
es
movsl
and
and
loopne
mov
or
inc
aad
out
mov
and
push
or
jno
sub
dec
clc
cmpsb
repnz
scas
iret
cmp
fimull
sub
call
int3
sub
push
lods
fsts
mov
mov
cmp
gs
in
adc
outsb
movsb
es
scas
leave
shlb
xor
leave
mov
clc
xor
xchg
sbb
or
pop
mov
sub
fdivrl
cmp
sbb
pushf
mov
aaa
mov
add
add
mov
or
cld
js
inc
mov
dec
shl
mov
push
pop
in
and
xor
jb
cs
sti
mov
xchg
lods
jnp
out
ret
test
iret
aas
push
and
nop
or
psrld
xor
shl
jbe
sbb
inc
into
push
stc
xlat
cli
dec
mov
shlb
ds
fsubs
jo
inc
sbb
adc
stc
jae
jmp
jae
pusha
lret
aam
jl
lock
int
imul
ds
orl
lea
inc
inc
fiadds
sti
mov
mov
sub
inc
cmc
mov
call
mov
mov
or
jle
mov
stc
push
loopne
cltd
push
push
cmp
mov
inc
mov
pop
jbe
lcall
dec
movsl
adc
scas
pop
jno
insl
outsl
insl
dec
lcall
mov
jno
mov
jge
lock
xor
cmpsl
xor
mov
sbb
push
xchg
pop
sbb
pop
sbb
loope
scas
fwait
add
mov
out
into
sti
test
outsl
fsubl
sub
push
jb
jo
push
mov
daa
in
cmc
popf
push
ret
ret
and
mov
mov
sbb
jge
adc
sbb
xor
xor
lock
shlb
sahf
mov
sahf
dec
xchg
dec
mov
xlat
pop
pop
insb
inc
jo
je
add
or
scas
pop
pop
xchg
xor
mov
sbb
jmp
out
movsb
movsb
daa
movsl
jle
mov
push
inc
mov
pop
icebp
mov
icebp
lahf
inc
bound
push
les
movb
hlt
je
dec
lock
inc
push
mov
aas
ds
inc
call
mov
in
xchg
out
adc
lods
stos
and
mov
rcrl
push
das
lods
icebp
jmp
pop
jno
aaa
arpl
or
js
cmp
out
push
ja
push
sbb
and
ds
add
push
mov
mov
out
mov
xor
pop
out
push
fcomps
stos
and
test
pop
xchg
into
js
mov
cmp
fs
push
pop
lock
pop
cmpsb
dec
repz
aad
inc
and
pop
ret
int3
sahf
out
ss
push
je
jns
xor
std
mov
test
pusha
mov
test
sbb
mov
jns
push
mov
sahf
sbb
das
mov
adc
or
aam
xor
sbb
pusha
cmpsl
fistl
adc
cmp
cmp
test
iret
stos
mov
push
iret
xor
push
ja
mov
daa
xchg
mov
loopne
mov
movsl
pop
inc
mov
add
lahf
popf
test
hlt
or
aad
testl
sub
movl
dec
xchg
jns
pop
loopne
lods
aad
std
jo
mov
das
adc
add
aaa
and
sub
and
dec
movsb
xorl
cmp
cmpsb
jecxz
pop
pop
xchg
testb
jl
push
fs
cmp
or
pop
dec
lcall
pusha
stc
sub
cld
into
mov
xor
dec
clc
cmp
pusha
je
out
xchg
jb
mov
xor
jb,pn
subb
add
mov
sahf
mov
push
mov
xchg
cwtl
dec
outsl
popf
jg
jo
imul
dec
ja
mov
push
inc
loop
testb
jno
inc
stos
sahf
ds
in
cmpsl
mov
sub
jns
jns
clc
push
in
xchg
cmp
stc
cmp
xchg
repz
sarb
cs
dec
jl
lods
inc
lds
sub
das
fldl
in
pop
xor
or
and
dec
test
or
sahf
lods
int3
pop
insb
fisubrs
sti
mov
sbb
lcall
sti
movsl
pusha
mov
add
lea
and
stos
push
stc
xorl
cmp
dec
xor
sbb
insb
mov
movsl
mov
lret
xor
test
loopne
ret
adc
pop
int3
nop
xchg
test
lds
jmp
adc
sti
cmp
and
or
rcrl
mov
pop
std
ret
pop
stos
out
and
adc
roll
enter
imul
int
stc
or
mov
push
pusha
push
shlb
aas
xor
jecxz
jno
enter
push
or
repz
mov
or
jbe
adc
lcall
addl
fdivrl
aas
adc
add
daa
in
mov
jae
jle
dec
loope
repz
out
xor
sbbb
mov
lods
dec
add
dec
btl
popf
inc
testl
mov
or
mov
push
inc
popa
mov
cs
int
xor
divb
inc
cltd
pop
pop
aaa
pop
jo
sub
mov
xchg
lods
xlat
add
push
lcall
lock
mov
jno
lret
iret
test
jl
test
cld
sbb
sbbb
jle
mov
repnz
xor
pop
xor
dec
xor
outsl
mov
mov
pop
push
lds
repz
pop
mov
fcoml
ret
jbe
xchg
addr16
repnz
addr16
push
adc
icebp
les
jmp
and
iret
insb
ljmp
adc
push
mov
insb
div
dec
push
xor
or
cmp
pop
mov
push
ja
cld
push
push
daa
xor
mov
dec
mov
mov
aam
push
cmp
cmp
xchg
aad
fmul
jne
jl
sbb
arpl
imul
loope
hlt
cs
cmp
xor
inc
xchg
outsb
dec
push
fnstcw
sbb
mov
pop
dec
aam
rorl
test
jg
mov
push
mov
jb
imul
and
sbb
push
or
xchg
mov
or
es
mulb
sbb
xchg
and
aas
call
xchg
dec
jg
test
push
mov
xchg
movsb
jbe
fistl
xor
lods
sbb
ljmp
pusha
mov
lret
cmpsb
sbb
enter
lods
lea
outsb
fcomps
pop
inc
int
sub
test
push
cwtl
fidivrs
jmp
push
dec
jle
jns
out
pop
inc
xchg
pop
push
dec
in
js
sub
lods
adc
loopne
repz
add
testb
fwait
icebp
cmp
aas
jg
dec
outsl
or
sahf
arpl
fwait
inc
add
cmp
xor
or
shll
sti
xchg
xor
dec
inc
jae
stos
iret
mov
jl
std
sbb
aas
jle
and
call
and
push
les
dec
cld
push
or
lds
es
cli
int
xchg
cld
inc
xor
mov
mov
mov
daa
fwait
mov
dec
movb
adc
fdivl
mov
cs
enter
aaa
jecxz
sub
imul
mov
sub
xchg
enter
inc
cmp
dec
jns
adc
jne
xchg
leave
movsl
imul
and
pop
popf
into
pop
fstpl
fists
sti
add
stos
xchg
rolb
std
int3
mov
dec
cmc
sub
enter
jns
idiv
mov
push
je
jbe
gs
sar
cmp
pop
jne
aam
test
or
sbb
or
enter
xchg
adc
pop
or
pop
std
dec
xlat
mov
mov
pop
imul
cmp
push
nop
xchg
xchg
mov
in
mov
add
jp
or
mov
mov
mov
mov
xor
aas
fisttpll
stc
ror
js
loope
pop
lret
cld
and
inc
stc
loopne
add
pop
jae
mov
jo
or
fisubs
sub
cmp
jnp
stos
or
sbb
cmpsl
mov
jg
ja
xchg
or
lahf
mov
stos
outsl
push
jmp
jmp
and
leave
mov
aaa
fstpt
into
cmp
adc
sbb
xlat
lahf
sbb
sti
push
add
adc
sbb
xchg
and
sbb
mov
dec
xor
fbstp
dec
adc
and
xor
mull
scas
add
and
adc
sub
jmp
mov
andl
fiaddl
daa
and
jo
push
sbb
mov
aaa
iret
aad
in
jecxz
out
push
cmp
iret
std
cmp
popa
inc
inc
xor
in
jmp
mov
nop
sub
lcall
out
adc
loope
jg
cld
add
sbb
das
lret
jl
dec
ror
cwtl
cmp
push
xlat
ds
inc
push
fs
loopne
push
jo
xor
aam
scas
sbb
cmp
jae
jbe
jp
add
sbb
sbbl
xchg
inc
and
cld
sti
mov
mov
shrl
in
cmpl
dec
aaa
ficoml
sub
xchg
int
in
mov
test
in
stos
lret
outsl
add
popa
mov
sbb
mov
pushf
shll
push
mov
imul
outsl
inc
push
sbb
notl
popf
mov
js
mov
int
and
test
xchg
je
cmp
jp
and
test
fwait
test
out
push
cli
mov
lea
pop
cmpsb
cmp
fwait
dec
xor
xchg
jle
insb
dec
subb
bound
test
enter
bound
aad
mov
sbb
push
xchg
fcompl
push
ljmp
sub
mov
adc
mov
mov
mov
mov
sbb
out
outsb
sbb
add
out
fs
roll
fs
or
add
pop
xchg
int
gs
dec
add
imulb
jne
push
jp
int3
adc
loop
push
in
cmp
mov
adc
lods
repz
and
shll
lods
push
inc
push
xor
mov
xchg
and
inc
out
sahf
push
in
pop
cmp
jge
sub
jl
inc
sbb
or
mov
adc
push
and
pop
mov
push
hlt
pushf
mov
call
test
addr16
je
sub
mov
adc
push
ror
std
pop
adc
jae
mov
jge
jecxz,pn
mov
adc
fiadds
jmp
dec
movsl
stos
cmpsb
outsb
dec
jmp
cmp
stos
lods
sub
ds
fisttpll
pop
mov
loopne
addr16
mov
fcomip
loope
jno
dec
sbb
sbb
sbb
dec
sbb
inc
mov
rep
mov
push
xchg
outsb
sub
ss
mov
stos
insb
in
sbb
sub
clc
stos
dec
lds
repz
stos
daa
stos
hlt
mov
jo
jecxz
iret
mov
mov
sub
daa
and
imulb
sbb
lock
mov
mov
sub
push
repnz
sub
fisubl
push
push
push
lods
lahf
outsb
jmp
orl
sub
cld
jle
sub
ljmp
push
movaps
xchg
lock
je
pop
and
mov
mov
in
dec
int
mov
dec
xor
pushl
fmul
movsl
or
jp
and
sub
incb
aam
add
aad
adc
insb
push
mov
dec
sbb
sub
repnz
inc
and
es
push
int
enter
mov
or
jge
ror
nop
mov
push
dec
mov
pop
insb
dec
mov
rcrb
dec
jo
jnp
jno
addr16
xlat
dec
adc
out
adc
or
or
cmp
lds
xorb
add
sbb
mov
mov
jmp
mov
test
and
pop
loopne
cmp
xlat
insb
insl
movsb
test
outsb
pop
mov
push
ljmp
repz
lods
icebp
cmpsb
out
push
and
jp
cld
dec
dec
mov
inc
jl
xor
outsb
cld
in
push
or
sbbl
cli
jmp
push
lcall
hlt
cmpsl
add
jno
adc
jne
cmc
repz
mov
pop
mov
xor
pop
les
test
mov
mov
pusha
rorb
insb
aad
mov
xchg
add
jle
incb
cld
imull
shlb
rcll
sarb
pop
imul
cld
add
xchg
lret
lods
out
ret
pop
add
fdivrl
inc
popf
pop
sub
ret
repz
xchg
and
out
sbb
inc
xchg
mov
xchg
aam
ljmp
cmp
cs
xor
xchg
sbb
cmc
fldl
mov
add
shll
pushf
pop
jbe
push
stos
leave
xchg
push
call
dec
enter
dec
int3
int
dec
and
sbb
imul
hlt
mov
or
or
fildll
xchg
mov
sbb
lods
jmp
mov
cmp
jecxz
and
mov
pop
mov
mov
outsb
jge
jnp
dec
or
mov
lret
lds
maxps
jg
loopne
cmc
out
cltd
push
sti
push
cmp
push
out
leave
pop
scas
jle
andl
and
xor
es
rcl
loopne
cmpsl
das
fs
sub
stc
pop
mov
cmc
jecxz
stos
ss
cltd
sti
xchg
lret
hlt
fs
xchg
add
jbe
cltd
sub
sbb
mov
xchg
or
mov
or
mul
pop
pop
xor
lods
pushf
int
insl
jb
adc
xchg
test
dec
cld
or
inc
xor
sub
mov
sbb
cmp
js
loop
mov
mov
adc
sbb
stos
in
mov
push
test
rclb
leave
mov
into
adc
or
pushf
mov
dec
in
jb
and
out
mov
cmp
sti
int3
in
movl
sub
pop
mov
mov
xlat
pop
push
or
cli
sub
jae
push
dec
add
das
in
mov
fists
inc
jge
sbb
out
insl
mov
dec
add
jae
inc
rcr
aas
jo
out
icebp
mov
shll
and
sub
pop
pop
rcrb
imul
pop
jmp
repnz
sbb
aad
enter
push
xchg
xchg
std
fisttpl
inc
push
and
xor
pop
cli
push
mov
lods
mov
inc
add
cli
cld
sarb
add
pop
js
in
inc
test
mov
jecxz
pop
sub
fwait
outsb
and
pop
iret
mov
jbe
cmp
repnz
leave
xlat
gs
sub
lahf
xchg
popf
popa
mov
dec
out
addb
stc
push
ret
mov
fsubrs
sti
test
aad
clc
and
add
push
mov
mov
inc
popl
aam
inc
fs
or
lods
cmpsl
aaa
pop
imul
push
jp
push
jno
xchg
cwtl
ja
rcrb
jmp
push
and
jge
jnp
popaw
mov
rcrb
mov
imul
cmp
sti
scas
cmp
fistps
mov
and
sub
xor
mov
stos
out
sbb
aaa
shlb
push
dec
rclb
loop
fwait
mov
sbb
jg
pop
cmp
aaa
lea
rol
mov
rcrb
push
clc
sub
pop
movsb
mov
sbb
dec
in
stc
jo
js
lret
divl
jb
lods
insl
orl
ljmp
fs
lods
fsubrl
jmp
ficoml
mov
sbb
inc
xor
pop
adc
sub
inc
sbb
loopne
inc
mul
or
and
in
jne
jo
push
lods
sti
inc
pop
bound
adc
xchg
mov
pop
pop
mov
xor
lret
in
adc
xlat
mov
call
sub
cmp
sbb
mov
clc
mov
out
push
out
xchg
jno
out
cltd
xor
jle
add
sub
cld
icebp
shrb
rolb
je
js
jge
xchg
jmp
or
mov
roll
cmp
dec
xor
loopne
dec
nop
adc
cmp
imul
dec
inc
bound
pop
rorb
cwtl
lds
bound
loop
lret
in
jo
cmp
in
mov
icebp
pop
lret
inc
scas
or
imul
push
pop
mov
imul
lock
test
data16
lods
mov
or
mov
in
jge
mov
mov
sub
jne
or
mov
rcll
movsl
mov
in
pop
pop
mov
sub
xchg
daa
add
sti
scas
lea
xchg
jbe
jnp
xchg
clc
jns
jmp
repnz
xchg
iret
ficoms
mov
call
sarl
in
sub
bnd
in
test
and
mov
xlat
mov
push
lods
mov
xchg
sbb
sub
fdivl
repnz
cmpsb
pop
xor
sbb
out
push
ds
and
inc
mov
push
divl
push
inc
adc
in
lahf
lahf
mov
push
cwtl
insl
dec
sbb
jge
fists
pop
lret
lods
add
imul
sub
pop
repz
xor
mov
in
enter
mov
into
sahf
ljmp
sub
dec
mov
int
lods
add
pop
scas
out
xchg
subb
mov
in
xchg
push
or
jmp
loope
mov
jle
shll
cmp
or
movsb
cmc
inc
cmp
dec
adc
dec
jl
push
pop
add
icebp
jb
mov
dec
sub
sub
faddl
mov
push
xchg
push
jle
std
movsl
call
push
iret
xchg
pop
std
xor
adc
loop
and
and
cmpsl
out
into
xor
mov
stos
mov
mov
mov
and
ljmp
jnp
pop
dec
filds
xchg
popf
xchg
je
rcrb
pop
mov
in
arpl
aas
xchg
mov
cmpsb
mov
push
xchg
scas
push
push
ss
je
mov
and
mov
sbb
sub
jle
jle
fnsave
das
push
iret
test
push
cmpsb
ret
mov
or
insb
mov
imul
jne
xchg
pop
cmp
sahf
xchg
ret
cmp
sbb
mov
inc
sub
mov
push
cmp
cmp
dec
inc
repz
jb
cltd
ret
xor
out
pop
leave
mov
xor
movsl
lock
xchg
es
xor
sbbl
out
push
out
or
sbbl
xchg
std
inc
cmp
pop
mulb
sbb
mov
outsb
pop
xchg
and
sub
or
cltd
daa
push
lds
mov
je
xchg
rol
sbb
dec
cmp
mov
dec
jmp
adc
or
add
das
cmc
ds
dec
setg
pop
das
inc
push
fldl
cmp
andb
adc
int
and
jmp
fnsave
jg
es
push
sub
jnp
out
call
cmpl
or
shll
pop
lea
jg
add
mov
ret
add
cwtl
mov
xchg
or
dec
ljmp
adc
jg
in
mov
mov
sahf
mov
push
jae
das
pop
and
stos
ret
xor
xchg
stc
push
and
jns
popa
mov
push
imul
jo
pusha
jo
daa
sahf
scas
int
arpl
cmp
enter
cmp
push
test
ret
add
test
into
jl
int3
imulb
cltd
fistpll
xchg
stos
adc
mov
addr16
cwtl
or
jbe
lcall
andl
mov
hlt
out
lea
jb
outsw
push
icebp
jmp
jne
push
loop
pop
stc
test
jg
sahf
call
mov
cmp
or
in
movsl
push
cmp
mov
sar
inc
mov
mov
xchg
dec
clc
fidivl
arpl
xchg
jo
shr
or
les
out
sbb
or
cmp
ret
dec
mov
add
sahf
add
nop
lret
out
xchg
xor
mov
push
into
and
lds
mov
cltd
xor
jp
fninit
pop
inc
adc
into
aad
add
jns
mov
or
lret
imul
out
imul
mov
mov
cltd
dec
lret
call
and
xchg
mov
movsb
ljmp
repz
test
add
sti
ret
jns
mov
movsb
mov
icebp
mov
xor
sbb
mov
repz
repnz
mov
pusha
mov
add
mov
xchg
ljmp
cmc
xchg
lcall
xor
cld
xchg
adc
xor
mov
or
ds
lret
mov
jp
movsl
inc
fwait
and
aas
mov
loop
lods
mov
sub
adc
or
cmpsl
push
out
int3
adc
outsb
inc
loop
icebp
aaa
adc
xor
cltd
cmpsl
mov
adc
cmpsb
push
loop
adc
xor
push
jp
popa
cs
and
mov
fdivrl
imul
icebp
pop
sbb
add
popf
push
cmpsb
test
scas
dec
movsb
xor
enter
js
data16
andb
fdiv
movsb
dec
test
int3
rolb
stos
cmpsb
andb
je
adc
xlat
adc
lods
pusha
mov
std
repz
and
shlb
in
mov
cmpl
cmp
mov
fsubrl
sbb
mov
push
stos
repz
push
xchg
mov
mov
clc
scas
test
jge
arpl
daa
jno
loopne
insl
push
cmp
ret
dec
cwtl
iret
mov
mov
lods
mov
sbb
mov
out
jle
mov
push
pop
fldenv
psubd
lcall
push
enter
dec
js
jb
jle
popa
aam
out
call
repnz
push
enter
xchg
ret
xchg
cltd
push
xchg
add
jne
mov
cwtl
mov
lods
nop
int
movl
push
and
sahf
subl
fldcw
ret
jnp
loop
pop
push
mov
js
jo
jge
cmc
cld
les
add
les
lock
rcrb
mov
jbe
icebp
and
push
fidivrl
sub
mov
adc
mov
imul
sbb
fucomi
pusha
popa
test
imul
push
pop
push
repnz
std
lock
jle
imul
loop
adc
dec
pop
mov
arpl
adc
fsubrs
stc
push
cwtl
cmp
add
hlt
jmp
in
pop
sbbl
cmp
stc
int
mov
scas
insl
enter
roll
xor
push
in
xor
rorl
sub
add
fwait
adc
icebp
insl
inc
call
sub
clc
aad
test
xchg
jno
aaa
sbb
test
out
orl
sub
sub
lock
inc
pop
adc
push
aaa
jge
xor
movsb
jbe
ss
mov
push
ffree
in
jle
pop
jl
cmpl
lret
dec
mov
rorl
stos
out
lds
adc
fdivs
mov
push
ret
hlt
loope
xchg
push
hlt
jl
jg
gs
mov
or
lcall
ljmp
add
lea
andb
insb
pusha
mov
mov
arpl
pop
push
in
pop
cld
mov
xchg
test
hlt
jg
and
pop
lock
loop
or
and
or
loop
push
mov
test
repz
fadd
adc
call
test
test
mov
fsubs
inc
adc
jl
shll
icebp
push
pop
testl
or
pop
cmp
lods
cmp
add
xchg
sub
push
cltd
test
and
pushf
xchg
cmp
mov
jle
lahf
inc
sub
movsb
sahf
pop
loopne
push
mov
mov
mov
test
push
and
rolb
daa
fsubs
test
in
dec
cmp
sbb
xor
xchg
gs
mov
sub
inc
sub
das
scas
aad
cmp
push
lea
jne
gs
inc
or
mov
adc
icebp
mov
mov
add
pop
hlt
setge
add
mov
imul
pop
lods
xor
cs
dec
gs
xchg
add
sbb
jl
clc
adc
out
mov
mov
das
xchg
xor
add
imull
or
loope
and
dec
adc
mov
test
jmp
les
es
cwtl
xchg
xorl
jg
add
mov
cmp
ficompl
push
ljmp
fdivrs
cmp
mull
xor
mov
sub
imul
mov
int3
xchg
cmp
popf
shll
jne
iret
stc
cmp
cmp
pushf
push
lahf
jns
adc
jbe
aas
pusha
mov
sti
add
data16
fwait
or
push
adc
fucomip
dec
push
jno
jmp
push
inc
nop
dec
dec
pop
or
cmp
aam
aam
aam
in
xlat
mov
or
dec
stos
push
insl
inc
jecxz
inc
sub
leave
popf
mov
pop
aad
mov
insb
aas
push
xchg
cmp
pop
inc
notb
je
lret
xor
icebp
insl
lret
test
js
mov
xor
cmpsl
add
mov
out
ret
mov
mov
nop
call
je
xchg
mov
rcll
xor
and
cmpsl
jg
push
lock
mov
movb
jmp
std
iret
lret
std
push
xor
cmp
inc
jge
jge
add
pop
sahf
sar
test
mov
mov
sbb
call
and
or
adc
xor
out
in
lea
and
ret
or
loope
lahf
pmaxsw
stos
xor
popf
sbbb
mov
push
jo
or
jae
fisttpll
in
push
cmc
xchg
scas
nop
sbb
and
xor
or
mov
out
xchg
pop
iret
xor
js
sti
test
cmp
or
push
pop
mov
cmp
push
insb
xchg
fnstsw
bound
cltd
je
lret
jnp
mov
adc
xor
xchg
out
repnz
and
les
sbb
pop
cltd
jp
fistps
mov
push
push
pop
fldt
in
es
sub
mov
mov
sbb
ret
push
test
in
mov
in
mov
inc
mov
dec
sbb
rcr
stc
nop
sahf
fcoml
lock
js
cmp
mov
mov
int
sahf
stos
dec
mov
out
sti
xorb
jbe
les
scas
in
ja
push
push
stos
mov
push
add
adc
pop
outsl
daa
movsl
add
lret
sti
push
and
sub
movsl
nop
mov
fisubrl
jl
pop
sbb
and
xor
cmp
and
cmp
inc
pop
loopne
push
jno
xor
add
out
inc
push
add
test
mov
cli
iret
dec
dec
xchg
pop
and
sbb
popf
shrl
dec
fs
adc
je
ret
ficompl
ds
fisubrs
addb
pusha
test
inc
push
enter
mov
or
jae
mov
das
dec
stos
dec
test
out
mov
in
jno
stc
ret
dec
inc
or
mov
shll
xchg
cwtl
mov
jbe
out
stc
pop
push
mov
insl
out
dec
cmp
insl
lea
out
adc
adc
xorb
and
sbb
or
sbb
aas
jns
push
shrl
or
icebp
lds
std
lea
push
insl
xchg
dec
ja
sub
popa
jle
ret
in
lods
rcrl
cmpb
and
dec
push
ljmp
iret
repnz
sti
scas
xchg
gs
xlat
sbb
rclb
cmpsb
testl
insl
dec
out
pop
call
push
mov
icebp
pop
cmp
mov
enter
mov
sub
aas
dec
cmpsb
loope
scas
repnz
push
out
pushw
movsb
adc
mov
fstp
jns
cmp
popf
out
sub
loopne
and
cs
jns
in
pop
or
arpl
inc
repnz
mov
jp
xchg
jle
jg
ss
ss
rcll
fs
mov
cmpsl
xchg
call
cltd
mov
pop
and
imulb
or
movsb
lods
enter
cmpb
bound
fldt
and
loopne
inc
mov
cmc
std
js
fsub
or
sub
jle
data16
mov
adc
lret
jmp
in
lahf
sbb
add
lea
inc
das
rcrl
dec
leave
lds
jl
sti
data16
pop
adc
lods
loop
jecxz
sbb
rcrl
pop
rclb
sub
sub
and
int
cmc
and
dec
xor
cs
jl
mov
dec
jb
pushf
fldenv
jle
pop
iret
add
movsl
push
push
lods
pop
or
jg
aaa
adc
lret
mov
enter
fwait
adc
rorl
int
push
lods
je
mov
jns
pusha
outsb
sbb
push
out
mov
loope
fwait
jnp
sarb
add
sub
repz
js
pop
stos
pop
addb
aaa
lock
popa
pop
mov
in
mov
mov
inc
inc
jmp
lahf
push
clc
jo
lcall
lds
mov
movsl
xor
int
stos
pop
mov
lds
sub
das
or
es
fisubs
jmp
insl
popf
sbb
and
je
loop
mov
ret
fcoms
or
jb
icebp
xor
mov
scas
xor
shl
inc
icebp
nop
mov
jno
xlat
outsl
test
dec
push
cltd
test
xchg
adc
mov
dec
sahf
in
mov
jnp
mov
mov
andl
lcall
in
mov
push
dec
test
inc
cs
test
or
imulb
inc
mov
das
fidivrs
or
xchg
add
xor
inc
movsb
das
push
nop
lret
imul
shll
and
fwait
mov
in
imul
jno
sub
xor
dec
pop
fs
scas
icebp
mov
sbb
push
insb
mov
mov
popa
push
hlt
cmp
test
sti
dec
fbstp
sbb
sbb
mov
jg
mov
imul
add
push
nop
xlat
and
in
in
mov
dec
lcall
xchg
dec
clc
inc
pop
jg
int
pop
mov
pop
dec
mov
jecxz
add
adc
cs
stos
xlat
sub
add
scas
mov
mov
shll
inc
xchg
in
dec
push
mov
cmp
or
or
pusha
xlat
dec
and
lods
mov
mov
js
pop
lods
cli
aam
or
xchg
imull
repnz
dec
or
mov
int3
jmp
int3
mov
loope
jo
sti
push
push
scas
adc
pop
inc
lcall
adc
mov
xchg
dec
xchg
mov
fcoms
addr16
xlat
pop
jmp
dec
push
fbstp
dec
mov
mov
subb
mov
pop
xchg
out
dec
cmpsb
sub
imul
xchg
xchg
shrb
dec
inc
dec
iret
sub
stos
jbe
xor
add
lods
gs
xchg
negb
in
xchg
dec
cmp
sbb
arpl
pop
iret
incl
addr16
push
ljmp
mov
dec
popf
imul
daa
sub
jnp
stos
aaa
psllw
gs
testb
xchg
cmp
roll
cs
icebp
int3
inc
in
adc
mov
into
jbe
lret
fstpl
aam
push
adc
push
mov
jns
test
enter
fldt
dec
mov
jb
xchg
scas
sbb
xchg
mov
scas
xor
arpl
xchg
cmovp
cmc
repnz
outsl
lret
test
pop
add
xor
imul
sub
arpl
les
mov
mov
loope
clc
inc
and
pop
sbb
mov
jae
sarb
xorb
jb
out
and
inc
je
mov
ret
nop
hlt
push
and
aas
push
jmp
mov
jecxz
jno
mov
and
and
xchg
sbb
nop
or
adc
cltd
cwtl
inc
not
sbb
andl
mov
add
ja
inc
sbb
xorb
jb
rcll
subl
and
sub
insb
sti
movsl
loope
test
ds
jle
sbb
sub
stc
sarl
subb
lock
int
sub
and
andb
sbb
xchg
imul
dec
inc
jns
or
dec
imul
sub
lret
and
pop
dec
hlt
or
xchg
test
iret
push
shlb
inc
data16
shrb
mov
add
in
out
jno
xchg
pop
sub
jl
cs
add
inc
and
lret
fwait
int
enter
jle
sbb
rcll
in
xchg
int
fstpl
iret
and
xchg
or
and
cld
xor
inc
mov
sahf
sub
fwait
ja
outsl
cli
mov
inc
dec
daa
shrl
je
testb
mov
test
or
jle
cmp
pushf
repz
inc
fnstsw
cmp
push
xor
inc
vpsubb
pop
incl
inc
add
jge
and
jl
jb
imul
inc
push
xlat
test
or
in
outsl
lea
adc
jecxz
adcb
cmp
sbb
add
vandnps
push
mov
mov
aaa
daa
jne
mov
or
xchg
xlat
sbbl
xor
or
fcoml
out
call
sbb
addl
add
addr16
insb
pushf
shll
sbb
xor
cltd
test
shlb
int3
ret
or
sarl
pop
pushw
sub
lret
push
insb
or
std
movsl
sti
loope
push
push
jmp
je
sbb
stos
cmp
rcl
jmp
dec
cmpsl
scas
pop
inc
and
and
pushf
je
pop
push
out
subl
out
pop
jnp
mov
add
rclb
out
sub
in
hlt
xchg
push
out
xorl
int
data16
ret
lea
xchg
sub
sub
pop
xchg
mov
sti
iret
dec
insl
push
cwtl
shll
call
or
cltd
mov
loop
dec
fyl2x
fdivrp
fisubs
fisttpl
mov
cmc
add
stc
jbe
mov
outsl
xchg
out
sbb
xor
sub
scas
adc
nop
nop
jmp
cltd
aad
lds
and
pop
xchg
pop
push
cld
push
xchg
jns
adc
insl
push
inc
int3
test
cmpl
adc
sbb
push
adc
lret
outsb
inc
aam
xlat
and
inc
adc
sbb
je
ret
cmc
cmc
push
repnz
mov
int3
es
sti
aas
xchg
hlt
push
jl
mov
jbe
bound
leave
jle
cmpsl
int
and
push
repz
cli
mov
lahf
or
jle
ja
inc
push
ljmp
xorl
mov
jge
fisubrs
loopne
mov
les
orb
mov
lods
sbb
pop
sahf
jg
xchg
mov
sbb
bswap
test
in
or
out
inc
loope
add
dec
add
std
xchg
inc
pop
sub
ja,pt
inc
sahf
rorl
xor
ret
lcall
jmp
mov
jecxz
and
test
mov
cmc
scas
cmp
cmp
mov
gs
sub
movsl
mov
mov
xchg
lock
push
add
mov
fildll
push
pop
rcrb
popa
push
sbb
and
mov
roll
hlt
popf
adc
inc
scas
fisttps
sbb
cli
leave
mov
mov
cmp
daa
rcrl
ss
sbb
jge
stos
int
in
out
sbb
mov
push
out
addr16
pop
std
lcall
sub
pop
addb
mov
jp
xchg
cltd
jl
jl
in
and
addr16
push
stc
cmovle
dec
cld
pop
cltd
jg
sub
stc
add
pop
xchg
into
mov
mov
in
jge
or
push
adc
inc
int3
xor
mov
lret
in
lcall
and
and
mov
xlat
cs
adc
mov
das
movb
mov
aas
iret
mov
nop
and
pop
cmp
and
das
or
aaa
aas
xchg
pop
into
imul
mov
push
jae
push
call
jmp
mov
enter
push
jl
add
notl
jno
dec
and
loopne
cmc
sbb
jne
into
and
push
icebp
aas
sbb
inc
nop
popf
addr16
incb
push
cmc
mov
add
fisubl
bound
dec
sub
stos
loopne
sub
fisubrl
pop
in
push
sahf
adc
std
sysret
or
xchg
sbb
jae
dec
sahf
xchg
fnsave
sti
sbb
pop
xor
cltd
mov
sti
outsb
cmp
sahf
and
jmp
sbb
inc
jbe
pushf
inc
inc
inc
and
xor
inc
and
ljmp
mov
fcomi
jle
cmp
fs
mov
dec
in
stos
lea
mov
jecxz
push
in
das
aad
outsl
lock
xchg
xchg
add
cmp
das
in
test
pushf
cwtl
jecxz
cmp
loope
sbbb
shrl
jle
add
in
and
jne
cmc
orb
les
sbb
cmp
push
orl
fdivrs
xlat
repz
push
xor
push
nop
push
inc
cs
inc
mov
mov
jmp
mov
cmp
sub
nop
dec
jns
mov
cmp
leave
frstor
clc
imul
test
popa
bound
lds
jmp
push
punpcklbw
rcll
test
sub
mov
jge
cmp
testb
sub
adc
push
sahf
pusha
xlat
lea
gs
push
jg
sbb
sub
cli
lcall
xor
mov
xchg
outsb
jns
and
shlb
dec
and
push
mov
or
out
pushf
mov
cmpsb
int3
into
jo
dec
sbb
jle
add
adc
jmp
cli
sbb
lret
insb
aam
mov
orl
push
inc
and
repnz
push
mov
pop
scas
cs
push
xor
jbe
xlat
insb
xchg
mov
adcl
mov
addr16
or
pop
stc
xchg
pop
lcall
loopne
rcrb
lahf
inc
jnp
mov
or
add
mov
adc
mov
test
js
dec
mov
leave
sub
cmp
xchg
test
in
inc
add
outsl
sbb
sub
cmp
adc
lock
leave
mov
xchg
stos
gs
sbb
int3
push
or
les
in
push
or
mov
push
pop
aas
gs
cmpl
sub
fs
push
xor
jnp
add
mov
jge
mov
shr
dec
and
adc
insl
ficomps
cmp
lcall
xchg
and
js
hlt
sbb
fidivs
inc
call
and
xchg
repnz
push
mov
inc
cli
xor
fstps
out
or
out
out
xchg
std
outsb
mov
call
xchg
add
cmc
mov
inc
mov
cmp
insb
ret
in
loop
cltd
aas
jecxz
int
call
cmpsl
xor
jmp
sub
mov
movsb
popa
fs
xchg
xchg
lcall
repnz
add
sub
xor
jg
mov
jo
insl
stos
push
inc
xor
fists
jno
ret
sub
dec
test
dec
sub
ds
jl
hlt
mov
jmp
jns
xchg
mov
add
xchg
adc
bound
es
ret
adc
mov
outsl
sbb
ljmp
pop
push
out
les
pop
inc
sub
aad
push
hlt
scas
clc
jl
call
sbb
test
pop
jno
repz
stos
cli
inc
sub
into
mull
xchg
subl
cld
imul
divb
mov
sahf
addb
rorb
jecxz
and
ljmp
or
leave
orl
sahf
out
ja
mov
lahf
cli
popf
leave
sub
push
add
shlb
pop
mov
pusha
in
inc
jle
inc
sbb
xchg
les
rclb
mov
fimuls
iret
mov
pop
add
cmc
fwait
sub
mov
sbb
add
ja,pt
std
fadds
push
pop
sub
xchg
sti
gs
sbb
dec
fs
push
jo
cwtl
xchg
mov
or
inc
inc
sbb
xchg
lds
aaa
mov
cmp
push
push
pop
xor
cltd
and
sub
fiadds
sbb
mov
adc
xor
aas
cld
mov
mov
inc
out
inc
push
jmp
push
mov
jp
ret
push
enter
cld
lods
cmp
sub
fwait
addr16
sbb
add
inc
orb
pop
inc
xchg
push
sbb
adc
fwait
jecxz
mov
fists
cs
lods
and
int3
fiaddl
sub
loopne
dec
lods
stc
and
repz
aaa
mov
mov
rclb
dec
test
mov
pop
sarb
add
xorl
push
sub
shll
in
shrb
orb
or
cmpsl
ud0
cltd
int
dec
sub
xor
sar
push
push
out
popa
mov
mov
lret
and
sub
in
xlat
mov
lcall
into
jbe
xor
push
lahf
imul
mov
icebp
out
sub
arpl
xor
jno
negb
ds
push
pop
fldenv
xor
jbe
cld
repnz
inc
iret
aam
dec
adc
pop
pop
xor
add
pop
stc
and
cmp
dec
dec
adc
mov
adc
xor
mov
dec
sub
xchg
lret
and
andb
aam
out
add
and
jo
xchg
aam
lods
pop
sar
mov
test
dec
mov
lcall
mov
clc
stos
add
outsl
inc
mov
add
jno
mov
or
inc
lods
push
xchg
cmp
xchg
jmp
jle
stos
push
imul
add
insl
cltd
mov
mov
jo
add
dec
push
inc
jmp
and
gs
adc
adc
das
fmuls
cmp
insb
int
or
xchg
adc
pop
dec
inc
add
lahf
lods
ss
ja
or
cmp
es
sbb
mov
stos
mov
xchg
dec
int
fisubs
jle
inc
xchg
inc
push
push
ret
aam
lods
clc
fisttpl
paddsw
jns,pt
add
cmp
fadd
sub
dec
xchg
jecxz
mov
popa
pop
mov
push
mov
mov
adc
adc
dec
mov
outsb
inc
lret
enter
fcom
notb
dec
adc
jp
push
es
loop
sbb
pop
xchg
sub
add
and
addb
mov
lahf
inc
out
add
popf
es
xor
mov
cmpb
mov
cmpsl
jle
aam
shrb
pop
inc
lods
sub
xchg
sub
aas
add
scas
mov
mov
test
cmp
mov
and
push
ss
adc
cmp
mov
sub
or
inc
push
pushl
mov
cmp
or
pop
and
dec
insl
lret
pop
jp
sbb
adc
mov
inc
out
push
sbb
leave
cmpsb
xchg
lcall
pop
daa
popf
js
fcompl
jle
xchg
mov
mov
into
cmpsl
cmp
out
push
jp
xchg
sbb
dec
call
in
testl
or
insl
in
in
adc
mov
lds
and
and
push
enter
flds
outsl
es
sbb
arpl
je
fcmovne
dec
mov
mov
out
nop
jbe
mov
outsl
inc
jl
pop
inc
mov
repnz
and
push
or
lcall
je
je
ret
inc
sub
js
scas
xchg
sbb
inc
repnz
xchg
inc
fistl
mov
aas
iret
leave
imull
stos
mov
hlt
xchg
pop
mov
fistl
shr
scas
xchg
imul
ror
je
xor
cmp
mov
xchg
push
jge
jp
orb
push
stos
les
cwtl
outsl
push
xchg
aaa
repz
rclb
neg
push
adc
and
jae
sbbb
dec
popf
orl
jnp
push
cltd
mov
cmc
test
pop
mov
sub
lcall
sti
subb
xchg
dec
cmpb
jecxz
lock
stos
lods
inc
int
repnz
adc
in
xchg
mov
and
scas
fiadds
or
xchg
stc
repnz
ret
fnsave
xchg
out
sub
shlb
jle
mov
inc
inc
xchg
lcall
pop
stc
loope
dec
add
loope
lret
push
xor
loopne
jno
cmp
inc
sub
sbb
jbe
scas
dec
push
dec
mov
push
push
ja
mov
inc
mov
inc
mov
das
mov
shrb
xor
fdivl
scas
scas
sub
popf
enter
lret
aaa
popf
insl
hlt
andl
int
add
ja
insb
inc
dec
mov
inc
mov
int3
mov
sub
push
push
xchg
insb
pop
std
xor
sub
lods
dec
mov
or
fcomp
test
movsb
xchg
mov
inc
xor
fwait
jecxz
jecxz
mov
mov
xchg
sbbl
xchg
adc
mov
cmc
les
popa
mov
push
pop
clc
popf
arpl
daa
pop
jmp
loopne
adc
loop
pushw
ds
pushf
fdivs
pop
out
push
adc
inc
and
pop
aam
insb
insl
cmp
sub
push
into
nop
test
pop
ss
movsl
ret
outsb
inc
stos
dec
dec
xlat
clc
cmp
mov
ret
or
rcrl
dec
pop
or
icebp
or
mov
cmp
call
repnz
dec
decb
mov
push
sbb
fmull
adc
outsb
push
dec
out
mov
add
jp
pop
mov
inc
not
inc
stos
insl
aaa
dec
inc
pop
mov
aad
sub
jle
ret
ja
ljmp
repz
dec
fistl
sub
push
sbb
or
jnp
pop
cmp
test
outsl
adc
or
shll
andb
imul
jb
js
cmp
jp
fldl
adc
add
int
xor
ja
xchg
shl
and
test
mov
and
pop
addr16
adcb
cli
aad
jno
ret
xorl
outsl
fsubrp
repz
cltd
iret
out
sub
cli
jl
mov
mov
aad
stos
pop
mov
lods
xor
or
packsswb
inc
xchg
jbe
jns
jp
pop
mul
jecxz
iret
cwtl
inc
mov
add
push
push
push
sbb
jbe
ds
fdivr
shlb
push
bnd
dec
aam
mov
mov
xchg
les
or
jbe
jg
pop
jne
sahf
jmp
fwait
push
movsl
les
adc
pop
jns
mov
xor
push
aas
sub
dec
push
push
jbe
and
iret
das
xchg
je
movsl
xchg
mov
outsl
and
negb
ds
push
mov
pop
frstor
aaa
jnp
and
xor
jnp
lret
icebp
push
ret
push
loop
fmuls
inc
pop
fwait
fwait
mov
and
mov
mov
mov
popf
jno
popf
loop
jno
jle
cmp
pop
xchg
addr16
mov
ljmp
pushf
bound
fstpt
or
rclb
xor
adcl
add
loop
inc
popa
mov
sub
jne
xchg
das
imul
dec
mov
lret
sub
fidivl
ljmp
xchg
pop
xor
stos
add
mov
mov
sbb
xchg
sub
lret
jns
and
iret
mov
jo
aad
or
and
jne
clc
popa
push
scas
cli
es
mov
pop
inc
or
in
ret
jnp
mov
inc
push
fsts
hlt
ret
xor
xchg
out
jmp
cmp
push
mov
dec
jecxz
mov
sub
shll
push
adc
test
dec
mov
cwtl
fcompl
mov
and
pusha
popf
leave
push
cmp
add
xor
or
mov
mov
pop
sahf
insl
cli
pop
out
negb
sub
outsl
inc
inc
mov
inc
cmp
ficompl
mov
sub
cld
notl
aas
dec
rorb
mov
mov
pop
jmp
xchg
shlb
hlt
testb
sti
das
and
fstps
inc
pop
inc
pop
push
imul
mov
inc
out
push
rcrb
mov
into
out
fdivl
xlat
dec
xchg
int3
inc
xor
pop
mov
xor
cmp
or
add
dec
pop
add
push
mov
popa
or
xor
push
popf
gs
xor
push
mov
movsbl
jno
inc
cmpsl
mov
scas
mov
pop
mov
mov
mov
scas
jbe
call
inc
mov
add
pop
nop
lods
mov
adc
add
mov
dec
xchg
and
and
jecxz
pop
fistps
gs
and
sub
cli
sub
xchg
inc
cwtl
je
setge
mov
ja
mov
mov
pop
xchg
mov
mov
add
aas
test
das
loope
hlt
fs
orl
shrl
out
mov
dec
sub
xchg
into
inc
aad
daa
cmp
in
xchg
add
test
and
cmp
subb
mov
sti
filds
repnz
adc
jp
jp
insb
cmpsb
push
mov
test
push
cmpl
shlb
gs
insb
imul
or
adc
int3
icebp
pop
adc
push
repnz
mov
push
testb
sahf
xor
cmc
pop
dec
scas
push
ss
xor
andl
rol
shlb
or
sub
dec
mov
fcmovnb
cmc
mov
inc
or
sbb
insb
ljmp
xor
pop
or
out
fs
jno
inc
mov
push
mov
scas
jle
xchg
adc
aam
sbb
cld
mov
push
pusha
cmp
jl
jbe
mov
jge
mov
leave
inc
xor
xchg
jecxz
les
jp
out
shll
popa
dec
das
sub
cmc
pop
cmp
pop
ret
outsb
lret
inc
mov
push
mov
cmp
xchg
inc
or
stos
lahf
mov
sbb
cmc
js
adc
out
pop
sarl
testl
mov
cltd
in
add
std
pushf
mov
aad
xor
xchg
push
pop
mov
jae
mov
adc
icebp
shlb
scas
data16
lret
stos
xchg
push
sbb
test
fwait
push
mov
aam
jne
aam
fsubl
popf
cmp
sub
push
and
mov
fisttps
stos
dec
xchg
iret
mov
mov
xor
inc
sbb
sbb
popa
mov
jge
sub
std
out
mov
xlat
cmp
lcall
icebp
pop
adc
add
mov
mov
mov
bound
insb
ljmp
je
lcall
mov
adc
aad
push
mov
mov
xchg
add
enter
sti
testb
fidivrs
mov
lods
data16
sbb
adc
cmpsb
enter
mov
or
fildl
inc
sub
xchg
imul
loop
sub
shll
iret
cmp
push
jecxz
mov
test
es
rclb
dec
inc
sbb
jns
lret
repnz
jge
jae
hlt
dec
cmpsl
rcrb
test
mov
outsb
and
push
or
adc
addl
mov
xchg
scas
scas
pop
je
ret
cs
cmp
jno
scas
mov
fcmovu
dec
andb
cmc
inc
in
or
xor
repnz
out
push
add
cmc
mov
and
adcb
push
mov
je
dec
sbb
jbe
sbb
xchg
mov
je
mov
aas
pop
adc
popf
and
push
mov
add
sub
js
adc
lods
jae
add
fnstsw
xchg
push
sbb
sbb
add
fwait
stc
mov
add
loope
cli
mov
std
pushf
xor
mov
cmpxchg8b
nop
fbld
cmpsl
sub
xor
in
dec
or
fwait
cmp
fucomi
jg
inc
inc
dec
and
lahf
xor
lret
xchg
bswap
inc
mov
cmp
ret
lahf
pop
xchg
fdivl
out
xchg
push
xchg
stos
sbb
push
push
clc
jp
cmp
enter
cmp
testl
mov
pop
fnstsw
sbb
push
ss
jecxz
adc
iret
daa
rorb
and
ja
pop
mul
rorl
add
sete
xchg
push
loopne
shll
loope
aad
inc
cmp
and
lock
fistpl
sti
mov
imul
pop
mov
add
mov
lret
push
enter
mov
dec
mov
lret
int
movsl
add
data16
cmp
mov
lods
or
or
sub
push
mov
out
imul
add
mov
sub
mov
mov
cmpsl
xor
movsl
adc
fists
jle
adc
mov
aam
adc
ja
adc
inc
jo
add
add
inc
jb
dec
jmp
push
jmp
out
dec
popa
push
hlt
lods
repz
push
loope
loopne
popa
loopne
dec
mov
in
mov
std
jb
sbb
add
test
push
pop
ljmp
addb
in
ds
int3
cmpsl
push
or
and
mov
ficomps
mov
das
dec
push
jecxz
push
mov
scas
repnz
xchg
loopne
pop
cmp
and
fs
mov
loope
mov
mov
lock
fistpll
repnz
loope
push
push
aas
or
dec
mov
cmc
hlt
popf
dec
jbe
repnz
add
int
lahf
sti
mov
cmpb
pop
xchg
push
sbb
xchg
sub
cmp
ljmp
cwtl
lret
push
and
lahf
dec
jecxz
das
inc
iret
adc
or
push
and
pop
mull
xor
or
fisttpl
add
mov
mov
mov
xchg
mov
adc
in
cmp
in
jbe
pop
int
add
jmp
adc
xor
pop
into
push
pop
sti
fsubs
and
dec
mov
jge
jge
xchg
mov
and
scas
sub
add
jno
outsb
cmp
ret
aad
int3
push
mov
and
lret
cmp
test
int
xlat
push
repnz
pop
lods
cwtl
lcall
mov
lea
cld
scas
es
sahf
push
mov
dec
xlat
jbe
adcl
pop
mov
lea
pop
pop
pop
mov
clc
xchg
mov
mov
call
xchg
mov
ds
dec
clc
inc
pop
xchg
into
jb
and
xabort
es
fimuls
jp
test
icebp
jp
lret
jbe
jle
shlb
es
sbb
ficomps
shlb
test
pop
or
loope
cmp
ret
sub
cmp
xorb
mov
jmp
add
jl
push
es
and
arpl
mov
movl
push
lds
and
pusha
into
lods
adc
dec
jge
pop
stos
xchg
repnz
sub
aam
mov
test
std
xchg
add
daa
and
adc
push
cs
aam
fxch
loope
xchg
pop
int3
call
push
mov
cmpsb
sub
jle
jne
mov
mov
mov
hlt
sbb
jmp
add
fiadds
push
mov
xchg
aas
xchg
xchg
xlat
dec
jb
rorl
or
cwtl
fcomps
cltd
in
adc
cmp
roll
inc
stos
call
mov
scas
decb
lret
icebp
mov
aam
hlt
xor
js,pn
inc
pop
ffreep
jl
mov
push
shlb
jbe
repnz
cmpsl
loopne
out
pushf
imul
xchg
inc
mov
andb
clc
inc
push
push
add
dec
in
iret
into
pop
pop
xor
xor
jmp
js
outsb
mov
cmp
xchg
xchg
inc
cmpsb
jne
mov
xor
and
movsl
add
cltd
push
push
inc
mov
test
movhps
fsubrl
dec
inc
adc
es
or
rclb
jmp
lods
inc
xor
ss
inc
and
add
sbb
lods
xchg
dec
jns
jmp
push
mov
mov
test
pop
aam
inc
adc
in
adc
xchg
adc
aas
xor
andb
xchg
push
and
repz
add
sbb
insl
mov
adcb
cmp
lods
fcmovne
neg
in
stos
jb
mov
mov
arpl
mov
xchg
inc
sub
jnp
jle
lahf
daa
mov
mov
dec
push
add
scas
mov
pusha
adc
mov
das
scas
push
pop
adc
fistpll
xchg
pop
xor
cmc
scas
xchg
cmc
fcmovb
daa
ss
mov
xchg
in
aas
addr16
cmc
sbb
jae
and
mov
std
mov
xchg
dec
testl
xchg
repz
push
xlat
xor
xor
addps
mov
sbb
jl
lock
ficomps
jg
ds
xchg
rol
and
sbb
icebp
fs
insb
flds
add
iret
xchg
inc
mov
fsubl
icebp
inc
cli
popf
pop
pop
rorl
les
fisubl
hlt
leave
dec
fildl
mov
mov
and
iret
cmpsl
push
push
stc
pop
shrl
je
enter
int3
jge
out
shr
cmpsb
movsl
and
push
add
xor
sarl
popf
lock
fwait
stos
mov
push
mov
or
ja
sub
scas
or
lods
and
mov
mov
mov
faddp
or
cmp
imul
in
cmp
jo
or
mov
outsb
mov
pop
cmpsb
insl
mov
push
mov
sub
dec
ja
pop
fistpl
iret
jp
inc
enter
add
test
mov
mov
xor
mov
push
in
test
push
inc
in
repnz
int
test
lret
mov
cld
sub
jb
mov
repz
outsb
add
xchg
cmp
dec
or
or
imul
imul
inc
aaa
push
cld
pop
scas
cmc
xor
and
xchg
push
adc
fdivl
add
daa
fidivrs
and
std
push
push
fcomp
sub
add
cs
or
cmp
mov
cmpsl
inc
dec
xchg
sub
out
out
cmp
dec
mov
std
mov
shl
mov
ret
insb
sbb
int3
roll
insl
lods
imul
push
std
mov
add
jno
sbb
fs
push
mov
and
push
out
fwait
or
test
jbe
xor
sti
pop
in
jnp
mov
pop
push
rclb
mov
aaa
pop
jne
addb
jno
enter
aaa
ds
mov
imul
and
cltd
popf
test
cmp
lret
adc
jge
roll
sbb
ljmp
mov
scas
sbb
inc
into
mov
int
cli
sbb
push
ljmp
push
mov
xor
sbb
fwait
inc
add
jmp
jb
push
sub
sbb
sbb
push
xchg
pop
mov
pop
rorl
fwait
mov
stos
pushf
xchg
xchg
mov
movsb
jl
mov
sub
lods
testl
hlt
ficoml
std
leave
test
loopne
adc
popl
movsl
sbb
cmp
xchg
sti
xor
cwtl
adc
aas
push
adc
push
mov
pop
cmpsl
lock
in
xchg
mov
lcall
or
ret
xchg
mov
inc
aaa
sub
mov
aam
cmp
inc
cli
cmpsl
mov
clc
repnz
lea
fbstp
aad
aad
inc
sbb
es
mov
shll
xor
repnz
popa
pop
out
xor
mov
push
pop
pop
jae
imul
aas
shrl
pusha
addl
aam
ljmp
mov
push
add
ds
in
sti
pop
add
mov
or
push
cmpsl
fldenv
outsb
ljmp
and
mov
sub
jns
push
out
daa
mov
cmc
xchg
mov
stos
mov
or
data16
cmpsb
shll
xchg
sub
fisttpl
adc
iret
xor
cmp
std
out
sbb
xchg
je
jne
cmp
fists
out
add
sbb
push
insl
sub
dec
scas
fisttpl
int
xchg
and
mov
push
adc
adc
rclb
or
pop
in
jecxz
mov
add
in
jmp
mov
dec
push
cltd
je
test
inc
inc
aas
jno
mov
test
lea
dec
inc
push
push
ficompl
inc
fisubl
dec
jp
mov
mov
jmp
les
rcl
cmp
test
xor
and
push
data16
movsb
lea
xchg
pushf
cmp
xlat
sti
fistl
mov
dec
punpckldq
int3
jmp
in
sbbl
cmpsb
adc
cli
je
add
or
out
dec
cmp
scas
cmpsl
adc
out
jle
dec
aaa
mov
jge
and
pop
out
and
push
push
jb
sub
mull
bndstx
lods
cmpl
fs
fdivrs
mov
es
jmp
std
jo
or
sub
cmp
jno
adc
outsb
dec
enter
mov
jns
jb
sbbl
jmp
shrb
cmp
jno
int3
shrb
mov
inc
jb
xchg
aad
imul
xchg
mov
mov
lret
loopne
push
das
sub
daa
call
inc
sti
ret
arpl
aam
jno
jno
push
sub
add
dec
mov
test
fidivrl
arpl
pop
mov
fs
jnp
insb
jbe
fiaddl
scas
push
xchg
out
lock
pop
addl
or
aad
sbb
and
out
in
mov
addr16
dec
ljmp
add
adc
popf
dec
adc
mov
cmp
sbb
mov
or
test
stos
fwait
pushf
push
mov
xor
cmp
leave
jg
xchg
sub
xor
dec
add
jne
stc
jno
inc
xchg
cwtl
loopne
xor
mov
jg
cmp
neg
adc
cmp
xor
test
and
sub
cmp
aam
lcall
ds
xlat
and
aad
mov
push
sahf
sbb
mov
dec
rol
fnstcw
in
jns
and
push
lods
sti
les
xchg
add
mov
push
cmpb
aas
push
stos
aas
sub
jb,pt
call
push
rcll
imul
ds
xchg
mov
dec
inc
imul
fnstcw
cwtl
xchg
xor
push
pop
jnp
mov
div
and
fisttpll
ja
mov
ljmp
pop
pop
fadds
mov
fstl
sub
stc
mov
mov
sbb
lock
bound
insl
mov
ret
test
js
fstl
dec
xorb
in
mov
dec
mov
jge
mov
push
popa
pop
sub
pop
jo
dec
rcr
inc
inc
jecxz
cmpsl
and
mov
mull
add
pusha
stc
flds
sti
aad
cmp
cld
lea
dec
pop
xchg
insl
enter
xchg
dec
pop
xchg
pop
lds
roll
fadds
mov
leave
call
pop
mov
stos
mov
mov
icebp
imul
jo
aaa
incl
sub
mov
addr16
jmp
fdivs
sti
sub
add
cltd
mov
mov
add
sub
push
jg
add
push
out
das
sub
call
lret
pusha
imul
std
adc
lea
adc
jge
nop
mov
sub
mov
cmp
movsl
loopne
sub
movsl
pop
ja
push
negl
xor
or
or
pop
xor
pop
negl
xchg
and
aam
fwait
mov
adcb
pushf
adc
stos
xchg
mov
ljmp
dec
add
pop
push
or
pop
jge
imul
rclb
push
les
fs
iret
adc
cmpsb
cmpsl
div
inc
out
pop
outsb
shlb
adc
cmp
js
loopne
jp
push
dec
mov
inc
sti
inc
mov
loope
jle
lea
aam
xchg
out
mov
cmp
sbb
fnstcw
ret
xor
cmp
stos
mov
ret
jp
pop
cmp
icebp
or
inc
imul
dec
in
out
lods
cmpsb
lahf
sub
mov
pop
sbb
gs
xor
iret
jg
cltd
in
adc
outsb
dec
xor
sub
iret
or
jmp
enter
or
fmul
jmp
push
daa
test
repnz
cmp
fcomp
aad
stc
xchg
sarl
mov
dec
jo
dec
ret
cmp
out
push
cmp
mov
lret
jl
mov
sub
jae
xchg
mov
loopne
jb
sahf
or
aaa
jnp
fidivrl
mov
lcall
xchg
ret
lock
pop
fwait
jmp
cmp
xor
sub
cmc
cmp
repz
test
cmp
push
sbbb
xchg
aas
fimull
stos
mov
sub
or
mov
pushf
push
divl
jp
sub
jb
cli
and
xchg
aad
mov
pop
jno
push
in
test
push
inc
adc
push
push
jmp
pop
jb
and
fsubrl
cmp
dec
pop
inc
add
outsl
cmp
xchg
aad
xchg
mov
mov
mov
cwtl
imul
pop
push
cltd
mov
jl
adc
mov
adc
in
in
push
xchg
je
cltd
in
mov
into
cmp
push
into
into
lcall
mov
movsl
hlt
jecxz
cmp
sahf
xchg
shl
mov
jns
mov
jne
jb
adc
test
inc
pop
int
cmp
pop
push
adc
push
ja
jo
push
push
and
in
and
jl
push
pop
mov
cmp
leave
lea
jle
roll
mov
or
mov
lahf
insl
or
jecxz
movsl
jo
inc
out
mov
add
jl
mov
jecxz
sbb
mov
push
jo
jecxz
fbstp
les
aaa
movsb
xchg
cmp
jg
xchg
jecxz
pop
mov
cmpsl
xchg
int3
and
cmp
push
sbb
insl
fldl2e
rcrl
dec
shll
dec
int
or
fsubs
cli
bound
mov
pop
sub
pop
jno
in
lods
leave
inc
popf
aaa
pop
push
stos
fcoms
icebp
lea
sbb
cmp
imull
rclb
test
cwtl
ss
jmp
scas
pop
ja
test
jecxz
aad
cltd
or
or
stc
lahf
sbb
hlt
push
sub
repnz
sar
xor
jecxz
add
lea
jle
loopne
pop
jmp
cli
mov
clc
mov
jae
push
xchg
push
adc
mov
daa
movsl
sbb
imul
int3
xchg
jle
leave
dec
scas
je
lea
xchg
sti
mov
aad
add
test
imul
ja
push
jne
icebp
mov
outsl
lods
xor
adc
sbb
imul
xchg
daa
sti
jle
and
in
inc
mov
rclb
test
iret
ret
das
decl
dec
xchg
dec
stos
scas
mov
or
push
xor
xor
or
cmp
outsl
cmp
rclb
arpl
adc
in
insl
adc
rclb
es
das
ss
iret
mov
in
les
cld
out
mov
sub
mov
adc
inc
cmp
xchg
xchg
out
xchg
add
jge
sub
pop
cmp
pop
pushf
out
pop
loop
push
orb
aad
imul
mov
dec
lret
call
mov
cmp
orl
aaa
movsb
jge
mov
and
push
jg
lcall
mov
cli
jo
out
adc
pop
inc
jge
fs
in
pop
sbb
pop
pop
sub
pusha
mov
lcall
push
dec
push
sti
push
mov
cwtl
shll
adc
and
xor
mov
cmp
ljmp
out
fcmovb
cmp
loope
push
sub
ljmp
aad
cmp
mov
ljmp
push
arpl
dec
addl
cmp
test
je
ret
inc
push
jno
add
addr16
scas
popa
sbb
fimuls
test
jnp
stos
js
sbb
adc
clc
jns
xchg
shll
mov
xchg
dec
inc
push
popa
fnstsw
mov
out
in
and
es
inc
rcrl
stc
push
jae
loopne
cmpsb
loop
sub
orl
ja
shrb
add
pop
mov
popl
pop
mulb
xor
cmp
mov
stc
xchg
test
xor
imul
sahf
imul
sub
outsb
je
rcll
adc
dec
aad
mov
sub
mov
cmpsl
sbb
popa
insl
imul
pusha
stc
push
dec
dec
testb
int3
jg
stos
ljmp
test
repz
das
iret
or
mov
xchg
push
pop
outsb
mov
div
jno
subl
mov
xchg
iret
mov
inc
and
mov
sub
cmc
ret
rolb
jle
ss
fs
loop
enter
loope
fucomi
mov
mov
cmpb
sahf
je
gs
jge
mov
aaa
adc
jg
dec
inc
rcrl
push
insb
adc
adc
jg
outsl
repnz
movsb
push
pop
or
adc
out
adc
leave
xor
pop
cmp
mov
aaa
fwait
pop
inc
ret
jne
push
pop
xchg
out
in
and
and
pop
imul
jns
into
mov
sahf
pop
sbb
loope
bnd
lods
sbb
push
fstl
and
xor
inc
insl
and
add
dec
orl
xorl
xor
js
sub
dec
ja
sub
sub
cwtl
movsb
sbb
or
pop
dec
jne
repz
add
jnp
js
ret
mov
es
scas
adc
add
lds
out
xor
negl
push
mov
lcall
imul
call
lea
les
jne
xor
scas
cmpsb
ljmp
scas
insb
ds
push
popf
daa
mov
movsb
incl
js
lods
push
inc
adc
int
test
push
mov
jae
movsb
orb
mov
push
into
popl
push
pop
fcomps
sbb
icebp
call
fcmovnu
push
test
adcb
adc
cli
leave
jecxz
jne
cmpsl
pop
stos
inc
in
jge
sbb
mov
addb
cmpb
cmp
aam
inc
shlb
into
and
jmp
incl
inc
add
jl
jecxz
sub
out
and
shll
sbbb
aaa
xor
mov
stc
xchg
mov
xor
jg
lea
pop
mov
xor
jmp
in
scas
cltd
jle
mov
orb
cmp
cltd
sub
or
adc
lcall
dec
pop
inc
cmpsb
imul
push
sbb
testl
and
push
lds
rol
sub
lock
fnstsw
push
dec
inc
xchg
imul
mov
iret
bound
es
into
mov
and
jp
data16
jp
or
popa
decl
xchg
popf
lret
js
xor
mov
jle
fcomps
push
adc
xor
mov
xchg
in
sarl
mov
dec
rol
jl
popa
jge
push
and
xchg
loopne
cmp
imul
loop
std
push
jp
mov
jmp
das
cwtl
sub
add
cli
dec
popa
xlat
dec
ret
push
test
enter
es
cmp
mov
add
sub
inc
xchg
push
jo
loopne
fidivs
push
pop
xchg
push
mov
aam
or
addr16
and
andnps
idivb
mov
or
repz
sub
loop
fidivrs
dec
jp
mov
push
dec
mov
mov
dec
xchg
aas
cld
add
xchg
dec
jne
ja
loope
mov
cmp
inc
or
out
icebp
aad
cmp
fcoml
filds
cltd
xor
push
or
xchg
pmaxsw
mov
ljmp
jecxz
cmp
jl
adc
icebp
outsb
pusha
pop
adc
in
pop
out
cwtl
push
pop
mov
add
frstor
add
sub
movsb
push
adc
xlat
cmp
dec
dec
cltd
mov
xchg
in
ljmp
add
ret
arpl
jl
arpl
jo
xchg
add
jne
popf
or
sub
jnp
testb
sbb
sub
mov
cmp
or
pop
sbbb
cmp
adc
out
outsb
pusha
shrl
pop
cs
fisubrs
dec
xor
push
or
inc
cwtl
scas
aam
and
in
sbb
mov
xor
stos
out
mov
pop
xor
cli
jp
mov
loopne
lret
roll
mov
pop
adc
std
jne
pop
mov
push
insl
rolb
fisttpl
add
shll
test
lock
and
testl
loopne
cwtl
insb
push
rcrl
sar
xchg
cli
xchg
sub
mov
sahf
cmp
rcr
fs
test
xor
mov
mov
in
insl
clc
xorb
xchg
dec
clc
mov
xor
into
sub
mov
mov
icebp
pop
cmpsb
inc
inc
lcall
xchg
movsb
mov
outsb
mov
orl
jnp
popa
xchg
xor
push
add
mov
xor
sub
sub
andl
mov
cmp
es
icebp
mov
ja
aas
mov
push
fbstp
pop
ds
ret
sbb
jns
push
pop
cmpsl
cmpsb
test
dec
push
and
sti
or
or
pop
aas
insb
cmc
mov
xor
faddp
add
or
je
jne
cmp
jg
inc
fsubrl
in
lock
inc
pop
fimuls
lahf
das
icebp
add
cmp
sub
int
int
das
test
repnz
das
aas
dec
mov
or
fwait
les
xlat
adc
mov
adc
rorl
sub
cli
aas
jecxz
xor
push
sub
in
mov
push
sub
sarl
out
pop
aad
xor
lds
clc
loop
and
adc
loop
mov
loopne
pop
cltd
pop
cmc
add
push
mov
test
nop
pop
sar
sar
idiv
shl
mov
loope
sbb
dec
push
xlat
inc
xchg
cmp
add
add
jp
pop
pop
rorb
nop
pop
add
js
lahf
pop
faddl
mov
jo
jnp
jecxz
push
cs
lods
push
mov
xor
subb
mov
mov
dec
mov
scas
sub
pop
fisubrl
add
jmp
xor
cmpl
sbb
mov
xchg
dec
mov
push
and
ss
add
icebp
ja
cli
into
fisttpl
jno
push
pop
sbb
mov
pop
sarb
mov
add
xchg
mov
insl
mov
pop
dec
int3
imul
mov
repz
lea
pusha
jne
cmpsb
mov
push
mov
insl
xchg
cld
xchg
mov
sbb
mov
inc
ret
ljmp
pop
cmpsb
pop
and
rorb
inc
mov
jle
call
dec
hlt
sub
push
xchg
push
pop
mov
sub
les
inc
aas
xchg
das
jle
jge
xchg
clc
hlt
push
nop
xlat
jge
js
stc
sub
dec
popf
and
pop
mov
push
in
mov
xorl
push
sub
cltd
loopne
xor
pop
xchg
inc
sbb
cmpsb
lret
out
jo
and
inc
nop
jle
ja
paddusw
ljmp
jno
mov
fcomi
int
and
inc
mov
mov
add
inc
fcomp
xor
xor
xchg
mov
test
mov
push
xor
xchg
inc
xchg
jns
lods
push
or
scas
outsl
adc
sub
movsl
and
sub
or
sbb
fistpl
mov
dec
ljmp
or
add
pop
movsb
jo
or
mov
sti
mov
mov
xor
jge
jmp
push
popf
and
mov
sbb
shrb
loop
adc
fldt
mov
cmp
cli
mov
mov
mov
push
adc
mov
jp
jns
xchg
sub
in
inc
enter
adc
cmpsb
jbe
fsubs
outsb
jae
icebp
mov
add
xchg
adc
shlb
scas
fnstenv
pop
xchg
mov
fwait
dec
test
cld
mov
xor
aas
xchg
call
sub
adc
in
sub
or
and
jg
orl
orl
xlat
lcall
test
ss
sbb
pop
subpd
sbb
aaa
cmpb
mov
aad
sub
cmp
inc
sub
icebp
sub
out
or
pusha
pop
notb
popa
daa
loopne
repz
push
sbb
les
jp
sahf
ljmp
mov
cmpsl
mov
mov
pop
add
cmp
add
sbb
and
data16
in
mov
pusha
es
enter
ds
imul
loope
pop
jecxz
push
adc
movsl
pop
lret
jmp
repz
fiadds
dec
repnz
imul
xlat
pop
in
leave
mov
xlat
cmc
xchg
xor
mov
add
in
enter
data16
rorl
and
leave
aam
pushf
mov
insb
es
pop
je
push
add
jl
mov
cs
ret
adc
cmp
mov
jle
outsb
and
inc
in
daa
cwtl
aad
lods
in
out
outsl
inc
imul
sub
fcom
cmpb
add
ret
loope
add
xor
pusha
xorl
outsl
mov
xor
stos
cmc
hlt
xor
mov
sbb
pop
dec
mov
ret
cmpsl
xchg
adc
jne
pusha
push
xchg
sbb
repnz
mov
inc
push
adc
or
mov
in
pop
int
ja
dec
cs
mov
idiv
nop
clc
mov
nop
std
jne
out
inc
lcall
pushf
lock
call
std
push
mov
bound
push
push
pop
jnp
cmp
adc
out
cmp
in
xchg
dec
mov
sub
xorl
or
sti
popa
rorb
popa
ror
dec
mov
adc
jo
outsb
sbb
popa
jle
jl
xor
cmp
dec
jmp
mov
out
dec
pop
call
rcrl
leave
lods
je
add
int3
movsl
dec
add
scas
mov
cmp
or
fstps
dec
popf
or
stc
sbb
cmpsb
jge
fisubs
sbb
xchg
lods
xchg
dec
sbb
sbb
mov
jecxz
push
push
fbstp
ret
lret
fnstenv
data16
sbb
mov
mov
push
pusha
xchg
jns
jle
data16
out
popa
std
iret
ret
stc
sbb
lods
adc
lods
rorb
dec
addr16
fcomip
scas
in
cmpsl
cmp
adc
loop
mov
adc
or
dec
jae
out
xor
xchg
sbb
outsl
out
pop
mov
scas
out
arpl
arpl
test
mov
fs
xor
jp
sbb
loopne
xchg
pop
stos
push
fsubrs
xor
mov
pushf
sbb
add
xchg
pop
stc
lea
shll
popf
sbb
fisubrl
in
adc
cs
inc
sbb
outsl
mov
mov
mov
fdivrl
inc
nop
lret
push
sbb
movsb
push
cmpsb
jae
scas
push
jp
stc
mov
push
fwait
icebp
shll
mov
cmpsl
and
les
fcmovnbe
cmp
jno
cmp
jmp
jbe
mov
jo
xchg
lock
orl
jns
sbb
inc
sub
leave
jg
mov
adc
popf
shll
fsts
sub
cmp
lahf
jp
sub
inc
movl
movsl
mov
jmp
shlb
enter
mov
test
iret
leave
pop
stc
lahf
adc
add
ror
adc
add
iret
mov
mov
lock
dec
mov
jbe
jg
push
test
fs
xor
cmp
dec
inc
inc
mov
rorl
dec
hlt
pop
mov
pop
and
push
jae
sahf
push
pop
out
shl
push
js
sahf
test
pop
mov
mov
dec
arpl
cmp
xchg
je
ljmp
xlat
leave
add
fst
mov
in
daa
lret
into
outsb
into
lcall
push
pushf
in
lcall
sub
test
sarb
cli
sub
cmp
stos
fiaddl
cmp
mov
mov
jl
in
sarl
repnz
add
xor
sbb
push
test
inc
xbegin
xorb
or
push
or
xorl
inc
iret
adc
mov
test
or
jae
jg
adc
out
add
nop
inc
mov
and
sbb
cwtl
jmp
mov
adc
rcrl
jno
cs
lcall
xchg
adc
pop
cwtl
cld
lods
test
dec
jmp
fmul
lahf
outsb
scas
jns
adc
add
cmp
or
imul
jl
ljmp
or
iret
add
or
xchg
mov
mov
pop
dec
jge
mov
mov
in
add
in
xor
jmp
adc
or
jmp
js
pusha
xchg
inc
sbb
out
adc
pusha
pop
bound
lcall
jge
jle
mov
into
inc
sub
or
inc
mov
dec
cs
xor
sbb
movsl
ffree
pop
pushf
mov
pop
mov
mov
lea
inc
xor
xchg
outsl
adc
iret
popf
sub
rcll
inc
adc
inc
test
add
inc
and
not
mov
mov
fnstcw
aas
stos
sub
xchg
test
mov
ret
xchg
push
dec
add
shrl
xor
push
mov
xchg
mov
cmp
cld
jp
ss
call
push
mov
into
mov
lcall
push
dec
jae
mov
and
pop
jmp
jmp
aas
int3
inc
push
sub
imul
testl
jp
fsub
jmp
in
jecxz
sub
out
sub
icebp
clc
pop
cwtl
or
fbld
andb
and
ja
lahf
dec
sbb
nopl
adc
mov
popf
push
mov
ret
insl
pushf
or
paddsw
cmpsl
xchg
das
pop
sub
xchg
repnz
push
cmpsl
cmp
pop
rolb
int
fnstenv
jno
mov
and
jge
cmp
cmpsb
mov
xchg
adc
sbb
pop
or
neg
aas
test
inc
popa
sub
and
aad
test
gs
int
sub
xor
jge
sbb
pusha
sbb
fsubr
clc
mov
or
bound
into
add
cltd
dec
fsub
insb
lahf
jp
fs
jle
jo
inc
pop
mov
mov
outsb
and
push
add
popf
mov
and
dec
and
mov
shlb
fistpl
pop
xor
repnz
insb
daa
pop
loope
push
xchg
push
sbb
sar
aas
adc
lahf
xchg
icebp
dec
es
into
mov
mov
lods
int
jle
popf
mov
pushf
push
xor
cmpsb
fwait
dec
xor
dec
fiaddl
or
mov
loope
fmull
mov
inc
xchg
loop
push
mov
push
mov
out
fildl
loopne
aam
das
mov
jmp
aas
pop
add
adc
and
sub
sbb
scas
sub
clc
fcomi
inc
or
inc
mov
cmp
sbb
sub
xchg
inc
cmp
add
cmc
add
pop
or
pop
imul
push
mov
mov
mov
cltd
cltd
dec
movsl
push
jl
insb
in
lods
das
sub
outsl
dec
lcall
inc
out
iret
clc
xchg
orl
fs
ja
scas
mov
ds
ja
mov
scas
ret
clc
enter
pop
shrl
rcrb
mov
mov
mov
pop
mov
and
clc
je
aas
mov
xor
arpl
mov
cmp
mov
ret
and
push
lock
out
push
push
sub
fwait
pop
cmp
in
clc
out
dec
push
adc
mov
sub
div
addr16
sbb
dec
jmp
jnp
aam
add
sub
inc
cmc
fwait
xchg
jb
inc
sahf
mov
in
jl
das
popf
int3
or
sub
xor
into
fnstcw
pop
push
ss
jmp
adc
test
or
mov
push
sub
icebp
jmp
fadds
xor
out
push
adc
mov
xchg
ret
mov
cmpsb
insb
cli
jmp
jnp
roll
jge
les
repnz
andb
sub
or
jp
jo
popa
xor
lds
or
cwtl
popf
insb
lret
push
xor
icebp
jmp
add
shll
cmp
push
std
cmc
lret
test
push
ds
int3
in
cmpsl
aaa
xor
pop
jno
std
pause
lock
insl
cs
pop
xchg
dec
mov
dec
es
push
pop
data16
nop
push
adc
xchg
jo
adc
mov
lock
cs
pushf
inc
fcompp
mov
xor
shll
adc
rorb
aas
mov
arpl
jns
es
lcall
xchg
hlt
cltd
ja
mov
jg
les
mov
call
test
aam
decb
pop
push
arpl
pop
sbb
xlat
dec
inc
pop
and
and
mov
popl
jae
cmp
dec
pushf
call
adc
shrb
arpl
push
inc
test
cld
ja
fidivrl
jb
mov
fldt
pop
sub
loope
pop
inc
cmp
mov
orb
fwait
in
push
and
push
jg
imul
mov
cmpsl
mov
and
ficompl
or
movsb
shlb
pop
xchg
adc
and
cmpsl
pop
dec
cmpsl
cltd
loopne
mov
sub
sbb
lods
cs
push
ror
aam
inc
sub
ja
cli
pop
sub
iret
les
xorb
loop
pop
jb
nop
mov
fwait
test
out
and
jnp
test
mov
in
ret
movsb
daa
sub
add
out
jae
mov
fsub
cmp
xor
sbb
jnp
cli
mov
aaa
push
lret
into
dec
pop
lcall
mov
lods
mov
out
daa
cmpsl
pop
sub
xor
fcmovnbe
xchg
fdivr
in
and
cmp
mov
cmpsb
ds
or
icebp
or
jl
jecxz
les
daa
mov
cmpsl
cmp
mov
sbb
or
pop
idivb
pop
and
mov
out
sub
movsb
and
cld
adc
push
in
inc
out
dec
mov
cmp
adc
movsb
add
push
rclb
ss
and
push
dec
fmulp
inc
frndint
pop
sub
jnp
cltd
sub
cld
pop
stos
dec
jle
shll
stc
iret
addb
ss
jp
jp
outsl
mov
cli
jb
enter
pusha
into
inc
sbb
ds
inc
dec
cs
xor
mov
dec
push
jno
xorl
inc
pop
cli
or
xor
mov
cwtl
pop
sub
sbb
fmuls
mov
xchg
rcll
insl
cmp
in
loop
pop
xchg
lret
out
jg,pt
fstpt
aam
push
imul
test
cmp
ficompl
sti
scas
jno
and
jmp
push
pop
xchg
mov
jae
lods
mov
lcall
inc
cld
mov
sbb
movsl
out
mov
repnz
ljmp
enter
mov
lock
dec
adc
mov
jns
gs
adc
test
and
je
iret
jae
cmp
adc
dec
inc
push
dec
mov
push
cmp
cmp
jp
mov
push
fdiv
xlat
aad
aam
push
cld
pop
popa
in
adc
pop
sub
stos
mov
adc
add
clc
lret
sahf
and
fisubl
rcr
ljmp
dec
lds
push
cmpsl
jne
fadd
push
out
movsl
lcall
in
adc
hlt
lock
mov
clc
cltd
xchg
loop
fdivrp
and
mov
jl
sub
adc
add
xchg
call
pop
es
insl
lds
lods
les
cs
mov
std
xor
arpl
pop
lods
and
add
sbb
popf
inc
sub
lret
mov
adc
and
aaa
sub
adc
test
popa
jp
movsb
lds
adc
or
pop
mov
fistl
imul
adc
xchg
jb
dec
adc
in
push
cli
outsl
popa
in
test
adc
xchg
sub
das
jecxz
xorl
ds
cmp
cld
inc
imul
xchg
pop
mov
xchg
loop
out
cs
movsl
aas
adc
mov
enter
xchg
add
mov
cmpl
imul
popf
jl
inc
xor
mov
ljmp
add
je
xchg
cmp
loop
lock
in
clc
push
aas
sahf
dec
outsb
repnz
xchg
movsl
scas
mov
insb
xor
cmc
adc
call
mov
sti
cmp
inc
jae
push
outsl
lret
add
mov
fildl
in
fdivrl
test
or
or
mov
dec
sub
xchg
mov
push
popl
cmpl
mov
fwait
mov
mov
xor
jp
sbbb
push
push
das
loope
push
sbb
and
cmpsl
mov
call
dec
and
sub
xchg
fidivrs
arpl
jmp
stos
test
in
les
mov
adc
iret
mov
inc
cmp
fucomp
dec
addr16
fmuls
mov
cmp
je
test
out
mov
test
sub
icebp
ds
adc
xchg
jae
cmp
cli
pop
cmp
sub
pop
push
add
lea
call
lahf
mov
adc
mov
bound
dec
scas
mov
and
clc
sbb
mov
rorb
jg
jp
in
das
fstpt
gs
dec
sub
cmp
xchg
pop
out
imul
inc
into
pop
jbe
out
stos
nop
adc
inc
es
rcll
ss
jne
out
loop
xchg
and
jae
or
shlb
xor
inc
mov
sahf
cli
push
sub
js
fwait
rcrl
adc
jl
and
flds
loopne
out
popa
or
lahf
push
xchg
cmp
test
jnp
xchg
es
das
adc
xchg
sub
repnz
add
pop
push
jo
js
daa
aam
and
in
or
loop
dec
sbb
mov
mov
stos
pop
mov
dec
loopne
mov
addr16
push
cmpsl
sbb
xchg
loope
in
adc
imul
sub
and
or
in
popa
out
stc
xchg
push
mov
push
mov
xchg
loopne
xor
int
loope
rcrl
fstl
fwait
inc
inc
dec
or
jp
leave
test
xor
rolb
test
mov
sub
mov
xchg
pop
call
insb
ret
imul
bound
pop
scas
adc
addr16
push
pop
adc
mov
div
popf
test
fisubs
sub
ret
and
jns
xchg
sub
loope
int3
add
xchg
sbb
xor
cmpsl
out
sahf
testb
or
push
lods
call
aad
pop
push
loop
mov
and
inc
pop
mov
iret
jne
arpl
pop
push
sub
outsl
insb
fistpl
sub
roll
fucom
rcrb
in
inc
pop
xor
lret
push
iret
lock
mov
mov
int
push
jne
or
pop
cmpsl
xor
in
leave
mov
cltd
pop
daa
xchg
in
add
bnd
in
popf
add
lods
pop
cmp
jmp
mov
rcrb
mull
push
mov
sbb
fcoms
sub
idivl
je
rcll
push
repz
fst
popa
scas
in
push
sbb
xchg
mov
xlat
adc
or
push
test
mov
inc
cmp
jb
rcrl
mov
int
into
adcl
pop
or
shr
and
pusha
dec
push
nop
jle
xchg
add
hlt
ret
lods
mov
pushf
xchg
fildl
fldenv
fildll
rolb
cli
pop
dec
call
sbb
push
push
leave
lcall
push
pop
inc
rcll
pop
fists
call
cltd
loope
cmpl
cmp
jg
stos
inc
dec
jns
iret
cmp
mov
xor
add
add
mov
xchg
add
xor
xchg
mov
adcl
or
leave
sarl
test
jae
xor
icebp
mov
jecxz
inc
cltd
clc
loop
xchg
out
jmp
dec
addr16
dec
movsb
push
xor
neg
subb
jge
lods
daa
repnz
xor
or
leave
outsb
adc
ss
push
or
sub
jp
in
mov
jbe
sub
lds
sbb
test
daa
fisubs
mov
jmp
xchg
sarb
mov
loope
or
sub
ffreep
ss
data16
pusha
addl
mov
or
or
sub
out
sub
xor
je
sbb
loope
jle
pusha
movsb
ss
loope
push
sbb
sti
or
divb
je
push
fistl
in
jge
mov
pop
jno
shr
fbld
test
fistpl
sub
inc
mov
dec
adc
mov
cs
dec
inc
enter
stos
sahf
orb
cmp
mov
ret
xchg
jge
mov
aas
stc
sub
jne
push
sbb
adc
mov
or
sub
sbb
fldcw
cmc
xor
pop
push
jbe
jno
sub
leave
pop
lock
popa
push
sbb
sbb
sbb
loopne
scas
cmp
sbb
or
mov
mov
mov
je
mov
jp
rorl
mov
dec
jns
outsb
or
iret
mov
out
jp
xchg
mov
stos
and
aam
xor
ficoml
iret
sarb
out
mov
cmp
shlb
add
mov
adc
clc
and
fwait
pop
ret
and
sti
cmp
inc
pop
test
pop
jp
xchg
ljmp
sub
xchg
ljmp
outsl
xchg
lods
adc
negl
inc
mov
fs
test
test
out
pop
pop
dec
and
add
pop
fiaddl
mov
mov
cmp
rol
xor
iret
pop
loopne
mov
sar
fimull
std
jp
cmpsb
cli
cmp
scas
jo
les
aad
mov
cmp
inc
inc
imul
or
push
out
inc
dec
jnp
jnp
lahf
cmp
stc
sbb
xchg
push
or
and
imul
in
outsl
sbb
std
fcmove
add
test
and
xor
hlt
rcrb
lea
loopne
jp
scas
loope
gs
lods
mov
mov
out
or
mov
push
push
ror
addb
ljmp
xchg
sbb
mov
inc
jmp
rolb
mov
inc
adc
out
mov
dec
mov
cltd
out
rolb
lods
inc
insl
cmp
frndint
push
incb
push
push
mov
inc
push
add
jp
mov
scas
cli
and
xchg
mov
gs
xor
mov
ja
add
sub
lds
lea
pop
inc
mov
and
je
dec
and
repnz
scas
dec
stos
stos
xor
push
mov
popf
leave
repz
bound
call
fiadds
cmp
mov
pop
iret
fidivrs
xor
leave
push
dec
loope
push
insl
out
mov
mov
push
mov
pop
cs
mov
mov
jge
mov
ja
sub
iret
pop
pop
push
loope
cld
xchg
sahf
leave
aaa
and
push
adc
pop
jmp
icebp
dec
popa
xchg
cmpl
cwtl
fisubrl
or
inc
ret
jnp
cmc
test
cmpsb
add
inc
mov
xchg
lret
stos
es
xchg
filds
scas
fisttpll
hlt
push
sub
daa
add
imul
mov
dec
shl
insb
int
inc
and
lret
sub
cmc
mov
test
aad
lahf
addr16
rorb
adc
jl
xor
movsb
rcr
out
mov
sbb
or
aas
pop
in
test
pop
clc
cmpl
add
sub
mov
jb
pop
inc
fisttpll
jne
cmpsb
leave
push
out
push
mov
arpl
mov
push
cmp
add
leave
addr16
mov
jmp
push
bound
cmp
pushf
insl
sbb
add
inc
push
cmp
rcrb
cld
ja
repz
xchg
data16
fwait
out
xchg
ss
fstpt
test
xchg
pop
adc
inc
xor
jbe
pop
insb
lret
add
cmc
sub
cld
push
clc
mull
pusha
mov
mov
sub
add
dec
jp
fistpll
jle
jecxz
int
push
jp
xor
fnsave
add
sub
jbe
pop
push
outsb
mov
repz
ror
add
jge
adc
dec
or
jno
cmpsb
cmp
cmp
sti
inc
xor
repnz
adcl
pop
notl
lret
daa
orb
imul
fcomps
faddl
subl
pop
xchg
lods
push
cwtl
jecxz
stos
icebp
or
ret
add
ret
cmp
xchg
je
jp
push
pop
inc
and
ss
xchg
jbe
jno
out
jecxz
cmp
dec
pushf
ret
push
lret
fs
ret
or
pushf
lcall
cwtl
iret
mov
xor
push
orl
jmp
sub
and
ja
xchg
adc
popa
push
inc
jg
mov
pop
hlt
mov
pop
xchg
mov
aam
jb
sub
fs
xchg
data16
fldenv
jae
fmuls
xor
xor
mov
insb
sbb
fucom
arpl
sbb
inc
arpl
sub
shrl
push
cli
inc
mov
mov
cmc
frstor
dec
and
and
push
add
or
sbb
pop
mov
ss
push
adc
pop
repz
std
mov
test
sub
nop
test
inc
dec
rcrl
mov
stc
push
xchg
inc
fisttpl
adc
jp
sub
pop
pop
scas
icebp
fsubrp
dec
fnstcw
xor
mov
shl
dec
or
stc
adc
cmpsl
add
sbb
ljmp
rcl
inc
stc
xor
mov
cmpsb
bound
movsb
xchg
mov
into
cmp
ja
ds
jb
jno
add
sti
pop
das
mov
rcll
loope
aaa
fiaddl
repz
and
cmp
and
xorb
loopne
xchg
xchg
add
leave
das
jge
loope
repz
aad
fstps
inc
xchg
sti
dec
jp
and
cmp
jp
ds
out
hlt
out
test
jb
mov
or
push
pusha
sub
jb
inc
jmp
mov
push
and
ja
call
test
rcll
loop
jmp
dec
mov
cmpsb
cmp
hlt
test
xchg
rclb
push
outsb
imul
xchg
insl
and
ds
mov
aad
movsb
ja
dec
cmp
ss
or
add
mov
outsb
add
dec
xor
sarl
int
aaa
shrb
xlat
test
push
push
enter
lahf
popa
adc
jb
push
jb
add
lret
dec
mov
inc
mov
out
test
adc
mov
push
mov
mov
and
int3
fstpt
push
xchg
out
ficoml
cli
mov
xor
dec
outsl
movsb
and
pop
mov
repnz
outsb
pop
mov
in
or
mov
push
aaa
das
popa
sbb
aam
xor
stos
in
sbb
jmp
imul
pop
dec
lods
mov
ret
pop
dec
mov
push
pushf
in
lret
popa
ljmp
inc
push
adc
or
jg
pop
mov
add
pop
iret
lds
add
dec
pop
cmc
outsb
cmpsl
xchg
fcoml
cmpsb
das
mov
fcoms
aad
fdivr
mov
sahf
inc
push
add
cmovnp
clc
stos
vmwrite
inc
popf
dec
movsb
fdivs
cmc
js
data16
scas
jae
dec
hlt
or
adc
and
dec
sub
push
cli
lcall
sbb
jns
rcl
js
mov
pop
sahf
nop
rcrb
test
dec
cmp
movsb
shrl
sbb
call
imul
push
inc
js
les
pushf
mov
mov
pop
into
push
aas
adc
inc
xchg
push
adc
adc
cmp
mov
add
enter
andb
stos
sahf
addr16
mov
sub
mov
stc
stos
push
mov
xor
cmpsl
hlt
iret
dec
aad
sti
fnstcw
je
add
push
in
cs
sbb
xchg
and
repnz
test
or
and
rorl
push
movsb
clc
sbb
xchg
inc
sbb
dec
mov
xchg
fidivs
nop
xor
orb
cmp
jge
and
mov
pushf
out
out
test
lret
pop
pop
decl
jb
and
mov
push
pop
or
clc
loope
push
movsl
dec
fldenv
hlt
or
or
std
out
inc
nop
mov
jge
pop
bound
in
mov
pop
lret
lods
dec
ja
roll
movsl
push
xchg
imul
sub
leave
push
cmpb
daa
pop
popa
adc
xor
cmpsl
mov
jbe
aaa
test
or
push
aaa
xor
clc
std
add
ljmp
dec
je
mov
lds
sbb
and
jno
cld
lea
movsl
and
clc
xorb
cmp
xor
lahf
xchg
int
mov
cwtl
roll
dec
insl
push
sub
push
sub
add
outsb
pop
int
inc
mov
outsl
ret
xchg
mov
mov
xabort
in
sub
icebp
stos
es
cmp
push
mov
inc
inc
test
in
pop
and
and
adcb
pop
adc
mov
subb
xchg
pushf
adcl
andl
leave
sahf
pop
cmp
lods
leave
pop
pop
mov
inc
pushf
jno
in
loopne
push
sbb
sub
push
shll
adc
push
cmp
fimuls
ds
cltd
xchg
mov
lock
ja
popa
stc
mov
xchg
into
jmp
shll
xor
inc
cli
inc
loop
mov
insl
lea
lds
lret
das
jb
cmp
inc
bound
aam
aad
mov
nop
lods
mov
pushf
push
cmpl
adc
jg,pn
dec
popf
dec
imul
lds
rcrb
inc
xlat
shrl
int3
inc
pushf
xlat
mov
mov
or
lock
pushf
dec
xchg
movswl
test
inc
sbb
add
ss
push
subb
mov
in
lods
cmp
sub
out
loopne
adc
mov
xor
mov
sub
jne
mov
movsl
loop
popf
push
outsl
rorb
fs
pop
xor
pushf
mov
jp
leave
cmp
inc
shll
jmp
shr
add
pop
cmp
ficomps
jmp
fildll
cmp
ret
pop
out
or
outsl
and
notb
mov
or
jns
dec
xor
cmp
or
jne
xor
scas
gs
jle
outsl
inc
inc
fisubrl
rolb
push
push
hlt
stos
insl
cmp
in
fs
mov
adc
ja
test
and
mov
rorl
arpl
pop
fdivrl
and
xchg
jbe
mov
xorl
push
add
jo
loop
fadds
cmp
jp
add
dec
in
clc
pop
loope
pop
pop
leave
pop
int3
cmpb
jo
xor
pop
push
add
aam
ret
dec
sub
pop
adc
lret
out
out
jne
sub
lock
pop
xchg
fsubs
fwait
insb
ljmp
int
sbb
popf
mov
sbbl
sbb
or
push
arpl
or
adc
out
pushf
into
xchg
lds
push
cmp
pop
push
lds
nop
adc
mov
pop
sub
push
push
mov
or
cmp
test
dec
lret
rcll
mov
ret
xchg
or
dec
sub
movsl
or
aad
jnp
inc
push
add
mov
inc
sbbb
movsl
pop
pop
add
mov
pop
and
or
and
das
outsl
ret
test
addr16
mov
add
aad
cltd
mov
mov
xor
and
dec
jg
push
and
sahf
pop
mov
dec
fwait
adc
aaa
sbbl
movsb
push
dec
subl
icebp
sub
bound
fiaddl
out
or
imul
push
testl
inc
or
leave
sbb
ljmp
xchg
daa
and
mov
test
popa
jae
push
aam
mov
jl
sahf
adc
shl
xlat
ds
loop
movsb
scas
add
pusha
mov
imul
mov
jno
xor
xchg
arpl
mov
mov
jp
sub
sub
in
pop
insl
push
push
xor
add
sbb
dec
ds
jnp
mov
and
fs
push
sbb
xchg
shll
das
repz
fsubl
jne
jns
notb
imul
mov
push
cli
mov
and
adc
mov
arpl
cli
jne
nop
jb
xor
sbb
rep
lcall
ljmp
aas
inc
sbb
test
mov
in
stc
repz
cmp
ror
flds
push
pushf
ljmp
fsubrl
mov
test
push
mov
jecxz
mov
mov
cmc
aad
and
sub
or
lods
dec
push
jae
int3
sbb
dec
jns
push
mov
dec
jbe
out
daa
in
xor
shrb
and
xor
add
adc
andl
repnz
push
mov
cmp
inc
bound
pop
repnz
fistl
sub
xor
movsl
out
stc
cmp
loope
mov
cli
mov
rcpps
sarb
dec
leave
imul
pop
push
xor
vpaddsw
pop
sbb
jmp
lret
push
ds
sub
mov
movsl
cmp
xor
inc
outsb
cmpl
jbe
lods
lcall
gs
fistpll
xchg
lahf
push
sub
and
pop
loop
jae
lcall
int3
mov
cli
leave
popf
rcr
cli
adc
mov
sbb
insb
inc
repz
dec
addr16
pop
adc
test
mov
push
repnz
xchg
xlat
dec
loop
jge
sbb
sbb
das
cmpsb
mov
sti
idiv
jo
nop
push
adc
xor
repnz
sbb
xchg
mov
and
leave
add
pusha
fstpt
lods
int
dec
movsb
clc
daa
adc
rcrl
pop
imul
jecxz
cmpsl
dec
pushf
mov
dec
mov
cmpsb
test
push
mov
repnz
test
rorb
insl
dec
fstl
mov
ja
test
adc
and
test
pop
sbb
cwtl
scas
rolb
push
dec
cmp
daa
xor
inc
in
dec
iret
xchg
add
inc
int3
mov
sub
jecxz
mov
mov
cmpsb
arpl
int3
popf
and
lea
aaa
sti
pusha
test
jg
inc
jmp
in
sub
sahf
cmpsl
xchg
movsl
xchg
jge
dec
jnp
mov
and
pop
push
inc
daa
push
aas
jecxz
outsb
pop
lds
push
fisttpl
or
test
lods
jns
loope
cmp
fdivp
adc
jecxz
roll
jmp
pop
fnsave
pop
jae
xchg
pushf
les
inc
lahf
stc
mov
push
inc
ret
sub
pop
pop
sbbl
inc
outsb
cli
js
fisubs
ret
push
mov
lock
sub
jp
aas
icebp
rolb
mov
dec
test
hlt
repz
roll
neg
stc
in
mov
int3
or
mov
orb
adc
jl
loopnew
out
lcall
shlb
sti
push
inc
popa
xchg
bound
and
or
mov
imul
add
aad
call
aas
add
rolb
push
pop
aam
sbb
and
and
aas
iret
rcrl
mov
adc
inc
fnstcw
pop
lret
sub
sbb
push
push
dec
rcl
rolb
mov
or
jo
stos
ret
idiv
inc
jmp
mov
aam
or
out
ja
xchg
rolb
xchg
push
inc
sbb
jb
add
fildll
jo
adc
mov
lods
mov
ljmp
jb
add
test
hlt
xchg
and
sbb
sbb
add
cmp
push
sub
dec
outsl
sub
test
dec
mov
loopne
mov
jp
cmp
mov
int3
mov
sbb
je
sbb
mov
adc
cltd
cmpb
and
push
pushf
xor
lea
xchg
mov
pop
sub
adc
mov
xchg
xchg
or
data16
inc
xor
mov
repnz
iret
ret
mov
data16
push
dec
add
or
or
fnsave
mov
das
mov
mov
in
imul
push
and
jnp
fists
rcl
stos
aam
fiaddl
and
enter
mov
push
jo
jbe
rcrb
inc
leave
lret
sbb
pop
in
xor
xor
test
mov
jmp
hlt
mov
in
nop
inc
pop
sbb
iret
test
idivl
ljmp
sbb
mov
imull
dec
add
lock
dec
push
fists
xchg
adc
aaa
lds
mov
orb
in
pusha
cmpb
sbb
mov
test
push
adc
lret
or
jae
enter
insl
xchg
cmp
and
sbb
cs
outsb
push
mov
int
gs
test
pop
sbb
add
pop
mov
pop
mov
add
iret
daa
int3
aam
scas
push
pusha
pop
aaa
ret
adc
inc
out
sub
sub
mov
pop
ss
mov
jo
add
jo
jmp
jno
loop
adc
je
push
mov
out
mov
mov
dec
lea
mov
cwtl
xchg
sbb
cld
mov
or
cmp
xchg
xlat
es
or
add
jle
xor
xor
inc
pop
mul
jne
cwtl
rclb
push
imul
xlat
sbb
push
in
popw
out
in
test
sbb
movsl
das
fdivrl
es
xchg
and
cli
ja
and
xor
jbe
dec
imul
testb
jecxz
push
lock
daa
fistpll
xchg
xchg
inc
pop
pop
aam
nop
pusha
add
frstor
pop
cmpsb
xor
push
icebp
mov
add
mov
mov
adc
ja
ljmp
jecxz
hlt
sbb
in
iret
cmp
inc
dec
mov
in
js
push
add
push
push
aaa
pop
mov
mov
push
jo
xor
pusha
add
ljmp
push
out
inc
mov
mov
sub
cmp
mov
fwait
push
push
out
or
aad
add
mov
jo
fistpll
sahf
lods
pop
cmp
cltd
mov
pop
call
or
out
and
call
xorb
fsts
lods
test
je
movsl
or
mov
sbb
pop
dec
sub
pop
lods
push
xor
into
fisubl
inc
pop
xor
out
sub
int3
scas
int
cmp
mov
push
loop
gs
lcall
cmp
lret
inc
movsb
and
and
add
mov
lret
jbe
int
and
andl
mov
jbe
data16
lret
js
inc
fucomip
mov
pop
scas
subps
xchg
pop
push
pop
stc
cs
in
roll
jo
sub
lods
sbb
jae
pop
scas
mov
cmp
fiaddl
and
aam
arpl
rorl
dec
iret
adc
mov
and
lcall
mov
cli
fidivrl
and
scas
inc
orb
or
lea
dec
jno
ljmp
sub
or
lock
sbb
adc
sbb
popa
add
or
fs
adc
repz
mov
push
dec
movsb
cwtl
xor
jmp
sbb
and
aad
xor
jo
dec
repz
ljmp
jae
fsin
stos
xchg
jne
xor
fistps
xor
ret
pop
cmpsl
add
jno
repz
mov
and
sub
rcrb
cmpsb
or
xor
in
add
stos
mov
arpl
fs
push
es
xor
test
repz
cmpsb
aam
push
sahf
adc
dec
xor
adc
add
sbb
bound
js
popa
and
mov
xor
jg
jl
or
lods
adc
call
addb
adcl
pop
inc
mov
or
mov
push
mul
ljmp
imul
jmp
mov
test
xor
inc
das
lods
outsl
int3
stos
pcmpeqw
fisttpll
aam
cmc
lret
cltd
sbb
sti
shlb
js
lret
xchg
and
ds
ja
push
gs
lcall
push
out
ss
pop
mov
loope
sbb
insb
xchg
stos
sub
test
ret
in
enter
sub
adc
test
pop
pop
ja
incl
adc
xor
mov
sbb
dec
add
out
push
xchg
repnz
mov
jns
or
pop
ljmp
ret
scas
imul
sbb
xchg
inc
arpl
rcrl
push
fisttpl
lret
sub
xchg
cmpsl
into
psubusw
lods
cmp
xor
adc
jp
sarl
inc
mov
sti
in
and
or
inc
pop
jno
hlt
in
pop
mov
fwait
mov
imul
mov
dec
nop
loopne
and
daa
mov
sbb
scas
xor
pop
push
rcll
mov
sub
pop
lock
cmp
jg
push
mov
jge
hlt
jnp
dec
and
es
xor
xchg
jae
mov
je
mov
xchg
push
sub
outsb
mov
pop
in
add
bound
repz
aam
push
cmp
sub
push
jo
jmp
cltd
ret
dec
inc
pop
mov
push
pop
sbb
sbb
mov
in
and
ds
and
xor
push
mov
mov
cmp
repz
pop
jecxz
stos
adc
shrb
aam
sahf
mov
call
push
add
push
ja
lahf
adc
mov
scas
cmova
out
jae
cmpl
sbb
pop
or
jne
mov
out
mov
mov
jl
mov
test
es
or
or
cmpsl
iret
jne
nop
pop
les
cmp
pop
mov
fdivrl
jmp
dec
sbb
jb
inc
iret
add
jmp
sbb
cmp
add
insb
add
test
xchg
mov
cltd
xchg
addb
mov
ret
or
lods
sbb
int
jnp
dec
push
pop
push
lret
gs
mov
iret
in
cmp
adc
push
jge
int3
sub
out
cmpsl
xchg
mov
mov
jmp
aaa
push
iret
mov
pop
pop
or
push
adcb
mov
mov
jns
and
fidivs
cmp
jbe
jae
mov
mov
divl
sbb
add
scas
fsubr
test
inc
mov
xlat
daa
rcll
mov
add
pop
jle
xor
loope
loopne
jnp
mov
pop
mov
push
fimuls
pop
outsl
icebp
outsl
repnz
mov
int3
cmp
cmpb
dec
xor
cld
mov
cmp
cmpb
stc
sahf
roll
ja
or
mov
sub
adcl
stos
insl
push
dec
into
lcall
fstp
push
mov
sub
mov
aad
pop
and
add
arpl
sahf
scas
xor
fnstsw
rolb
pop
pushf
fwait
sti
and
push
popf
jne
dec
cmp
jp
jge
icebp
clc
pop
adc
jmp
add
cs
je
movsl
ds
cli
or
popf
dec
mov
repz
lret
sbb
sbb
fwait
ja
lahf
mov
xchg
sub
mov
divl
dec
jl
inc
add
sti
jg
cwtl
ja
outsl
bnd
sahf
or
jl
cmpsl
xor
iret
aam
lods
rcrl
adc
mov
mov
xchg
scas
xor
inc
lods
in
dec
jnp
test
adc
sarl
adc
jmp
xchg
repnz
cmp
inc
insb
or
mov
out
push
add
dec
jmp
jle
push
lret
fidivrs
and
push
iret
cmp
push
push
xchg
aam
inc
dec
adc
push
cmpl
test
ljmp
or
pop
pop
arpl
jno
stos
jp
insl
icebp
add
push
fwait
jmp
in
or
mov
sub
gs
das
and
mov
std
rcr
inc
cmpl
mov
fstps
nop
cmc
pop
pop
mov
xor
jb
data16
pop
pop
insl
fwait
imul
int
in
js
pop
push
cmp
inc
push
test
and
insb
outsl
cmp
pop
mov
int
lds
inc
faddl
xchg
adc
jnp
aad
adc
jg
mov
cmp
sar
data16
in
aam
pop
mov
gs
pop
out
cmc
shrb
xor
arpl
jp
in
dec
xor
jo
dec
sub
xchg
xchg
fidivl
jecxz
cmpsl
rorl
push
or
imulb
inc
xchg
pop
movsb
mov
cltd
dec
int
or
push
cmp
mov
xchg
shl
ret
sar
xchg
mov
lret
popl
lods
int3
or
jae
cmpsl
test
mov
rol
xchg
xor
ja
xchg
popf
ret
movsl
mov
or
inc
stos
sti
lret
xabort
push
in
inc
sub
aad
mov
shr
call
mov
leave
mov
push
dec
cmp
mov
and
xor
sahf
rorl
pop
repz
fisubrl
es
lea
leave
shll
lock
outsb
rcr
cmp
mov
mov
cld
mov
xor
mov
test
xchg
movsb
je
push
sti
mov
iret
pop
or
sbb
or
xchg
push
adc
cli
sbb
jnp
adc
aaa
scas
adc
lods
lds
ret
decl
xchg
push
pop
pop
popf
pop
cld
push
xor
nop
dec
and
mov
xor
shlb
int3
xchg
addr16
sbb
popf
push
fsubrs
mov
xorb
xchg
xchg
mov
push
mov
and
aam
fs
sbb
push
pushl
push
inc
push
nop
out
popa
lods
pop
sti
test
ja
push
std
sbb
out
inc
dec
fisubrl
lcall
aad
xchg
fcmovu
pop
pop
jo
iret
lahf
mov
lds
ja
out
fwait
pop
mov
test
vmwrite
push
pop
pusha
jle
fiaddl
lcall
fidivl
ret
lcall
insb
jg
int3
adc
jno
jae
scas
das
or
hlt
jae
or
xchg
add
dec
mov
cmpsb
cmp
pop
xor
xor
jb
jno
cli
popa
insl
adc
in
testb
jp
ja
or
adc
test
add
test
imul
adc
cmpsb
inc
imul
inc
insb
ds
mov
int
loop
stos
shll
pop
in
jmp
ss
add
mov
cltd
loope
and
movsb
add
push
loope
outsl
aam
mov
ja
adc
mov
dec
jbe
loope
add
mov
pop
cwtl
push
pop
dec
out
and
xor
clc
mov
test
xchg
jg
jbe
sbb
push
testb
out
jp
mov
adc
or
or
in
push
xor
mov
fcoml
outsl
loope
inc
pushf
pop
pop
cmp
mov
xorb
mov
jp
das
pop
jae
cmpb
cmpsb
fmul
cli
inc
pusha
jg
lea
jmp
cwtl
jp
nop
popa
lcall
mov
mov
jns
rorl
cs
cmp
inc
cmpb
mov
dec
inc
pop
ss
int3
jl
cmpl
addr16
lret
cmp
sarb
lcall
lcall
fiaddl
pop
loope
cmpsb
daa
scas
imul
inc
fs
shl
mov
add
ror
pop
sbb
in
inc
ret
data16
xor
outsb
enter
sbb
pop
add
js
pop
inc
pop
push
cmp
or
adc
xor
adc
dec
sbb
cmp
pop
xor
fdivl
xchg
sbb
std
out
inc
push
ficoml
add
test
test
imul
sub
mov
mull
sub
pop
scas
cmpsb
decl
xchg
lods
hlt
push
andb
cs
inc
and
push
hlt
das
std
mov
mov
add
and
imul
leave
shll
popa
fisubrs
dec
les
sti
pop
mov
jnp
fwait
inc
test
pop
pop
sbbb
int
je
into
dec
add
sub
in
shll
pushf
bound
jne
les
mov
cltd
movsb
dec
sbb
add
ds
mov
xchg
pop
cmc
xlat
push
out
and
push
cmc
push
jb
add
pop
xor
jp
arpl
fimull
rorb
loop
xor
cld
lret
add
mov
movsb
pusha
in
jnp
cmp
out
xor
mov
add
xchg
adcl
mov
inc
iret
jmp
xor
add
clc
jns
add
push
sbb
out
push
pop
mov
inc
ss
adc
stos
hlt
xor
ja
mov
lods
stos
xchg
filds
xchg
push
pushf
mov
fsubrs
sti
sbb
cmp
jmp
scas
out
xor
mov
outsb
mov
jo
aam
sub
ret
cmp
icebp
dec
add
cmp
dec
sub
lcall
jmp
leave
das
lret
mov
inc
pop
inc
loopne
push
stos
mov
and
sbb
in
cld
adc
lret
lds
jge
mov
dec
or
dec
or
fwait
imul
jno
sub
arpl
sti
lcall
in
dec
std
inc
xlat
push
testl
shlb
pmaddwd
mov
dec
xor
subb
repz
xor
js
outsl
ljmp
or
cli
mov
inc
sahf
and
jl
aaa
addr16
jmp
filds
pop
cmc
cmc
ret
sti
and
lods
sahf
negb
pop
lods
adc
aaa
dec
push
xor
inc
add
xor
sbb
or
adc
movsl
cmp
int3
jae
jae
mov
clc
sub
fwait
ljmp
and
icebp
jge
mov
sbb
mov
in
mov
xchg
jg
xor
aaa
aaa
adc
cs
inc
jmp
jns
sbb
repz
xor
insl
ret
mov
hlt
out
sbb
dec
mov
cli
mov
icebp
into
xchg
movsl
test
push
in
add
add
test
fildll
mov
lret
lret
ret
ret
fcomi
dec
icebp
cmpsb
and
mov
cmpsl
push
sub
jns
pop
mov
andl
xchg
arpl
in
add
xor
arpl
sub
movsb
push
pop
mov
loop
mov
xor
cwtl
jg
mov
mov
and
xor
cmp
shlb
jo
movl
out
mov
push
icebp
push
sub
jle
add
lock
shrl
adc
mov
xchg
dec
nop
in
iret
push
mov
fldcw
cmpsb
xor
stc
mov
sub
fistpl
sarl
jbe
push
jb
loope
jae
jno
pop
out
aam
adc
bound
gs
in
je
movl
loopne
scas
mov
iret
sub
push
add
popa
pop
push
sahf
out
mov
cmp
in
pop
mov
pop
cli
aam
sub
fistpl
ret
xlat
lods
lcall
cmpl
adc
rolb
add
jae
pusha
xor
jg
inc
scas
jg
repnz
xor
and
popa
cmp
and
aaa
ja
divl
iret
dec
lret
es
out
fcomip
stc
inc
mov
les
inc
cwtl
mov
sbb
pop
pop
int3
and
or
adc
cmpsb
ret
jg
adc
push
into
aam
push
stos
cmp
jb
imul
xchg
in
mov
jae
pop
test
fld
roll
xchg
sbb
popa
cmpsb
push
cmp
js
sub
push
daa
lret
ds
dec
rcr
or
loope
and
mov
cltd
mov
add
faddl
cmp
inc
shll
push
pusha
xor
and
sbb
and
arpl
push
in
lahf
jno
outsb
pop
adc
inc
mov
lods
pop
adc
flds
push
das
cwtl
push
scas
add
jo
cli
ds
outsb
stos
fidivrs
mov
push
sub
arpl
mov
call
jae
cli
mov
fcompl
lds
adcb
loop,pt
clc
mov
fs
xchg
mov
add
adc
fs
ret
lds
push
pushf
idiv
pop
mov
adc
sbb
jbe
cltd
test
test
sbb
adc
loope
cmp
sbb
push
or
imul
das
mov
mov
lret
mov
push
push
xor
push
test
mov
imul
rcrb
imull
mov
lahf
mov
mov
loopne
daa
push
adc
cmpb
clc
stc
lcall
outsl
sub
icebp
inc
or
mov
sub
adcl
mov
xlat
or
pop
inc
into
jnp
or
inc
inc
scas
aam
daa
add
inc
es
push
mov
inc
add
xlat
pop
aas
mov
push
jp
xor
cmp
fmuls
fildl
stc
ljmp
out
push
push
cmp
mov
or
aaa
push
aam
aas
xchg
fidivrs
lods
imul
enter
out
movsl
insl
or
mov
pop
pop
xor
les
or
cmpl
or
sbb
adc
movsl
lods
and
xor
fs
sub
stc
jg
push
mov
frstor
rcll
insl
ret
mov
ror
mov
sahf
push
add
pushf
shlb
pop
mov
jmp
xor
xor
bound
jbe
and
in
stos
add
and
xchg
iret
push
push
cmc
repz
add
mov
sbb
ljmp
addr16
into
sbb
or
icebp
fdivs
push
test
sub
aaa
dec
xor
cld
orb
inc
mov
insl
fwait
fisubs
imul
adc
pop
xor
inc
inc
addl
mov
mov
mov
and
mov
xchg
jbe
add
test
movsb
or
andl
sub
xchg
lods
mov
jmp
out
pop
cli
ds
pop
dec
sbb
popf
inc
mov
lods
adc
adcl
cwtl
ja
adc
lea
movsb
push
in
mov
and
das
xor
add
push
ffree
es
js
xor
outsb
repz
push
jg
inc
or
out
push
ret
push
add
sbb
repz
test
adc
inc
sub
dec
add
dec
inc
scas
sahf
jle
mov
in
js
orb
cmpsl
or
sub
mov
push
test
pusha
test
mov
xchg
frstor
mov
outsl
sub
imul
push
push
dec
mov
icebp
jnp
lods
pop
mov
sub
stos
cmp
das
dec
push
push
jo
es
sarb
cli
xor
es
outsb
or
ljmp
jae
sub
lea
rolb
cmpsb
xor
popl
stc
ljmp
dec
inc
mov
mov
sbb
sahf
sub
cmp
xor
pop
icebp
cmp
cmp
or
imul
ret
jmp
jnp
mov
dec
cltd
sbb
or
test
mov
daa
mov
inc
xor
in
or
pop
ret
or
or
jne
lret
xchg
dec
dec
data16
sub
pushf
adc
add
mov
fistpl
or
in
das
jnp
mov
and
jl
pop
dec
shrb
loop
iret
imul
addb
push
dec
pop
out
cli
test
je
in
aas
inc
cs
outsb
shll
dec
ret
pusha
fcompl
mov
repz
fistps
je
cmp
std
and
mov
cmp
lahf
inc
aaa
cmc
ret
inc
mov
in
inc
cmp
ret
mov
les
or
testl
call
test
sbb
imul
divl
clc
mov
leave
or
push
pop
out
stc
or
jle
or
mov
les
jbe
jns
out
jnp
lods
push
int
inc
adc
xchg
push
sub
jno
pop
test
into
popl
mov
lods
vdivsd
jns
in
in
incl
out
jbe
fbstp
jmp
dec
fs
je
mov
cmp
jbe
inc
pushf
fildl
andb
je
jns
dec
xchg
xor
jle
xchg
mov
push
pop
inc
stc
jne
movl
cltd
mov
jmp
adc
pop
mov
aaa
es
in
sbb
and
adc
scas
insb
and
add
mov
repz
imul
mov
xor
cmc
out
lcall
inc
test
xchg
in
xor
mov
mov
add
jns
inc
lret
out
push
add
stc
xchg
negb
mov
testl
cmp
add
lret
sahf
push
xorl
pop
adc
int3
inc
stos
sbb
movsb
inc
sbb
fmull
lcall
sbb
sub
sub
call
xor
aad
scas
rclb
sbb
popf
lahf
insl
mov
es
lea
popf
and
xchg
sbb
loop
mov
fdiv
stc
inc
stc
or
sbb
sbb
jnp
xchg
inc
xchg
or
cli
stos
fwait
sbb
dec
sub
imull
and
sti
sahf
loopne
xchg
pushf
repz
mov
dec
enter
in
pop
fcmove
jl
adc
loop
and
adc
adc
lcall
aam
sbb
pusha
mov
adc
test
int3
add
jmp
sub
lahf
das
mov
sub
rcrb
or
cmp
inc
outsb
cmc
movsb
sar
mov
inc
hlt
imul
xor
jmp
pop
cmp
add
mov
dec
sub
push
mov
jg
inc
rolb
fcmovnu
xchg
fdivrl
and
adc
sti
push
pop
loop
stos
add
insb
aam
subb
inc
mov
loopne
mov
mov
cwtl
cmp
in
mov
insl
mov
xor
out
ja
iret
sti
mov
fcmovnu
ret
cmp
into
stc
fidivs
lds
lods
aaa
aaa
pushf
push
add
imul
mov
ficompl
dec
cmp
dec
mov
js
jo
test
fsts
mov
adc
fisubrs
pop
testb
mov
sbb
hlt
daa
cli
pop
addl
scas
sar
insl
xchg
cmp
sbb
popf
notl
pushf
or
mov
adc
jnp
ret
mov
out
test
pop
jmp
mov
scas
push
les
add
lods
jbe
or
pop
dec
mov
inc
test
data16
inc
or
mov
fwait
pushf
arpl
shrb
and
subb
and
or
cmpsl
dec
jp
push
cmovno
dec
faddl
add
xchg
mov
xchg
jns
es
scas
test
pop
js
arpl
cmp
xchg
fsts
xor
lods
test
cmp
out
cltd
push
lods
push
out
xchg
insb
pop
bnd
adc
sahf
imul
and
lahf
xor
pop
push
loop
inc
cli
test
mov
mov
mov
dec
pop
sbb
jae
and
enter
sub
or
shl
jmp
mov
pop
outsb
outsb
mov
lahf
xchg
jmp
adc
icebp
in
aad
mov
subl
cmc
jne
test
jae
rcrl
xchg
mov
arpl
pop
stc
cmc
scas
or
jne
push
int3
sub
ret
cltd
pop
or
push
mov
add
into
inc
push
cltd
mov
mov
out
pop
sub
cmp
cmp
jo
pop
scas
pusha
mov
cmpsb
pop
out
sub
in
inc
cmp
and
scas
add
jo
pop
cmpsb
pop
loopne
push
clc
push
jmp
cmp
lcall
or
cltd
jno
in
pop
data16
lret
sub
lea
add
test
jae
mov
test
ds
cmc
scas
outsb
mov
outsl
lea
cwtl
jb
xchg
fs
repz
sub
dec
push
scas
ret
repz
sub
cltd
into
push
dec
and
test
repnz
into
pop
jmp
cmp
aaa
adc
xor
or
jl
mov
scas
lods
add
sub
push
mov
jge
dec
fsubrp
filds
jno
popa
lds
dec
jmp
and
jne
int
in
shll
and
popf
adc
pop
enter
push
or
lret
or
pop
fnstenv
fwait
adc
and
es
rclb
sub
mov
mov
or
jp
stc
and
or
push
stc
mov
call
cmp
cmp
sbb
dec
int3
add
insl
ss
cmpb
inc
jbe
pop
lret
or
dec
cwtl
fldenv
ss
and
outsb
push
or
cli
push
and
fs
std
xor
in
sbb
dec
cmp
or
and
mov
xor
sti
and
les
pusha
pushf
decb
js
mov
sarl
das
in
push
ljmp
dec
lret
arpl
outsb
adc
adc
frstor
cmp
rcll
addr16
ss
mov
int
adc
hlt
es
cmp
adc
push
clc
mov
push
outsb
pop
sub
sti
imul
dec
lret
adc
or
test
shr
rcl
or
push
pop
icebp
es
ret
xor
xorl
inc
clc
lea
pop
inc
xchg
outsb
pop
cmp
or
or
push
xor
in
mov
adc
lahf
mov
imul
or
jb
xor
mov
adc
imul
fwait
lahf
pop
xchg
fs
inc
nop
daa
mov
data16
sbb
sahf
lods
dec
scas
shll
pop
ljmp
mov
js
sub
cmp
mov
sti
shrl
ja
inc
mov
xchg
call
push
in
add
xchg
pop
jg
or
add
dec
dec
fisubl
out
loop
adc
pusha
aad
mov
data16
test
enter
mov
test
addr16
push
jae
cmp
loopne
mov
jmp
loopne
or
dec
leave
inc
mov
daa
sbb
and
sbb
jmp
add
int
and
ud2
mov
and
arpl
daa
fiaddl
rcl
jle
jp
jne
add
test
imul
sbb
pop
mov
cmp
adc
int
fs
cli
sbb
test
inc
mov
push
jmp
cmp
mov
jb
test
xchg
nop
xchg
fisubs
cli
pusha
ljmp
xor
clc
add
int
or
loope
or
pop
lds
add
push
test
mov
out
sbb
dec
fadds
push
mov
add
adc
sbb
mov
mov
and
int
or
outsb
mov
or
insl
mov
or
stos
xor
cltd
es
jge
cmp
mov
sbb
jmp
rolb
in
in
cltd
sbb
hlt
pop
aam
adc
fildl
sub
push
call
fxch
ljmp
les
add
hlt
adc
out
leave
inc
int
jmp
mov
adc
cld
pop
sub
aas
sub
xlat
insl
loop
insb
rol
dec
xchg
stc
pop
imul
and
aam
xchg
adc
imul
int3
in
out
aaa
adc
mov
push
push
pop
loop
mov
mov
in
jb
jne
adc
pop
fnop
int3
outsl
hlt
add
cmc
jle
sbb
cmc
xchg
movb
movsb
je
leave
pop
daa
push
add
fs
repz
std
dec
pop
jae
add
mov
sub
fdiv
jl
push
push
orb
vpcmpeqb
xchg
pop
jbe
push
sub
add
stc
dec
push
cmp
mov
repz
push
pop
jns
lds
push
andl
mov
xchg
sbb
push
mov
mov
mov
lods
cmp
push
fistps
jnp
mov
xchg
inc
test
cmp
push
xlat
je
cmpsl
adc
adc
jp
pop
xchg
jmp
push
or
mov
jae
bound
testb
out
fcoms
test
notb
add
pop
and
iret
les
cmpsl
jge
hlt
fldcw
pop
ret
sar
push
or
jnp
jbe
mov
sbb
gs
out
jno
stc
int3
aad
call
mov
cmp
loopne
add
xchg
dec
mov
pop
sub
cmc
js
mov
add
roll
scas
sbb
movsl
aaa
jnp
or
pop
jmp
imul
jno
popa
or
mov
negb
cmp
mov
and
push
sub
inc
cs
xor
popf
ror
lea
jg
dec
ret
mov
leave
xchg
add
test
lret
xor
sub
arpl
push
pop
cmp
les
add
sahf
pushf
loop
int3
cmpl
out
dec
push
pusha
dec
mov
push
pop
inc
lcall
inc
inc
cmp
or
push
scas
in
lret
bound
popa
adc
insl
inc
push
aas
jae
jp
and
sub
cltd
orb
or
xor
js
fdivl
pop
fs
xchg
push
and
xchg
and
xorl
insl
loopne
cmp
and
inc
xchg
sti
adc
sub
or
loope
cmpsb
sahf
es
mov
pop
or
or
into
rcrl
sub
adc
lret
fsts
mov
fcompl
cmpsl
sub
jmp
shrl
bound
mov
sub
imul
and
les
xchg
push
cwtl
jl
ljmp
dec
ja
icebp
and
das
inc
xor
mov
mov
jo
in
shl
adc
cld
inc
mov
jecxz
sub
enter
jl
mov
fstpl
ret
xor
add
nop
mov
out
sarb
sbb
xchg
xor
rcll
hlt
mov
ficoml
outsl
sbb
mov
mov
cli
mov
lock
pop
xchg
mov
xchg
dec
sbbb
sub
jecxz
aam
cmc
orb
imul
pop
pop
cltd
mov
cli
imul
jmp
xchg
lea
mov
test
mov
pop
test
mov
aam
push
mov
out
cmpsb
mov
jnp
jno
js
test
dec
cli
sbb
into
push
leave
repnz
popa
dec
hlt
lret
mov
pushf
add
ja
je
xor
shlb
aaa
or
cwtl
adc
imull
push
es
sti
sub
mov
push
mov
sbb
in
ja
loope
fstpl
outsl
xchg
push
inc
or
sub
ss
jno
cwtl
mov
mov
or
ds
decb
push
les
or
push
fwait
and
test
mov
ss
add
xchg
inc
pop
adc
mov
sub
mov
movsb
les
testl
mov
out
xor
and
std
mov
mov
dec
mov
sahf
stos
jmp
icebp
mov
test
jmp
scas
cmp
mov
pop
sub
mov
cmp
pop
xor
inc
mov
cmp
mov
or
aaa
xchg
pop
jecxz
sar
fcomip
sub
cld
push
jne
mov
sbb
in
fsubr
or
add
xchg
jbe
jl
add
cmp
push
and
xor
jl
cmp
mov
clc
ljmp
dec
inc
pop
sbb
lods
dec
ficoms
daa
in
sbb
dec
movsl
push
filds
imul
or
cmp
in
push
pop
pop
leave
orb
push
push
push
in
push
cmp
mov
push
loopne
test
sbb
int
lods
sub
mov
xor
add
jns
leave
fmull
push
mov
jbe
bound
pop
pop
push
mov
cmp
js
lcall
test
pop
add
push
pop
add
mov
push
mov
jno
sub
clc
and
rorb
lds
mov
push
cmpsl
rclb
cmp
fldenv
stc
ret
je
jp
push
lret
mov
ljmp
or
loopne
inc
xchg
je
stc
flds
xlat
xor
insl
lods
shll
imul
mov
xchg
ljmp
ljmp
fidivs
pop
dec
lret
xchg
add
lods
pop
inc
jge
mov
and
cmp
mov
push
or
imul
mov
mov
push
into
aam
cmp
pop
ljmp
scas
xchg
pop
xchg
jo
shrl
sbb
sbb
ds
inc
mov
or
pop
aad
repz
in
sarb
aas
std
xor
adc
jmp
in
ffreep
shll
pop
out
test
xchg
xor
sbb
sub
lcall
out
pop
pop
loop
jbe
inc
mov
dec
add
push
por
add
cmpb
cli
sub
in
movsb
xor
andl
cltd
xchg
mov
test
cmp
sub
dec
test
mov
ss
jae
int
cmc
in
in
cmp
popf
pushf
sbb
dec
jb
pop
shr
aas
adcl
roll
fucomp
test
cmc
fxch
push
xor
shl
lock
xchg
fldcw
pusha
or
mov
push
jo
sbb
cmpl
xor
sub
in
or
push
fxch
insl
int3
arpl
aad
add
roll
pop
lods
jo
adc
xchg
ljmp
push
stos
mov
sbb
adc
lds
push
lds
push
dec
mov
cmp
aad
jmp
stos
je
lcall
push
test
loope
adc
xchg
shr
cmp
cwtl
pop
divl
sete
inc
mov
xchg
pop
cmp
in
in
mov
sbb
inc
loopne
bound
insb
jo
cmp
test
hlt
xchg
jge
mov
jns
ljmp
neg
rclb
xlat
push
xorl
or
add
leave
sar
adc
arpl
subb
cmp
cmp
cmp
mov
adc
xlat
mov
inc
sbb
mov
sub
or
test
mov
cmp
mov
nop
cli
pop
sarb
addl
inc
push
popa
adc
jle
dec
lds
xchg
inc
xchg
mov
xchg
push
sub
adc
test
xchg
push
adc
cli
or
rorl
and
lods
jecxz
dec
lcall
inc
loopne
cld
ljmp
stos
xchg
mov
or
jns
pop
idiv
fwait
add
mov
sub
adc
dec
lret
mov
push
and
in
push
repnz
jmp
mov
inc
or
push
mov
jecxz
aad
out
push
mov
cmp
push
das
stos
adc
fsubl
xchg
shr
fdivs
jnp
subb
push
stos
dec
mov
loop
comiss
fadd
fdivrs
lods
pop
call
push
mov
and
mov
mov
mov
fidivs
scas
lahf
repnz
mov
out
stc
lret
addl
repnz
sbb
aam
mov
cmpsl
cmp
dec
jno
dec
xchg
cli
push
stos
or
adc
in
ljmp
les
dec
sub
pop
out
pop
pop
xor
sbb
fldt
push
jae
pop
jb
jle
xlat
shlb
push
sub
ja
mov
insb
sub
movsb
sub
push
jns
insb
aaa
jl
pop
js
cld
inc
sub
jmp
jae
imul
in
and
outsb
push
or
icebp
sbb
adc
das
mov
jne
int
dec
pop
pop
enter
push
mov
mov
sub
mov
test
or
mov
dec
cld
stos
adc
push
or
inc
xchg
in
sbb
roll
mov
sub
dec
lods
or
shll
test
loopne
in
in
arpl
xchg
xor
jb
scas
outsb
or
inc
jno
repz
xchg
fs
test
mov
push
or
cmpsb
xchg
gs
mov
lods
and
mov
jl
in
lods
mov
lret
jge
leave
jnp
cmp
icebp
test
pop
sbb
lcall
mov
dec
sub
rcl
dec
arpl
push
cld
orb
loop
xchg
cltd
xchg
dec
xchg
xchg
movsl
xchg
mulb
cmp
insl
clc
or
xchg
in
stc
mov
out
aam
ret
push
fnsave
cmp
addr16
mov
lds
imul
mov
xchg
loope
sbb
es
ret
cs
mov
inc
push
cli
mov
xchg
jmp
cmp
or
pop
push
xor
inc
push
icebp
shlb
shl
dec
arpl
lea
sub
dec
mov
jo
test
leave
rclb
into
leave
mov
int3
dec
repnz
test
in
rolb
rcrb
dec
sub
and
add
popf
and
mov
mov
pop
cltd
xchg
jp
sub
xor
jae
sub
pushf
and
es
or
mov
repz
rol
sub
sub
in
dec
sub
lds
mov
fwait
in
xchg
mov
sub
rorl
imul
mov
movsl
hlt
or
push
pop
sbb
xor
stos
jecxz
imul
push
aam
jbe
pop
mov
sbb
push
xchg
add
outsb
add
jnp
mov
sbbb
or
mov
pop
les
inc
dec
lods
sbb
les
push
jne
sub
repnz
repnz
and
in
movsb
lcall
lcall
out
xor
add
cmp
jp
add
sahf
lods
jne
jmp
cs
lret
in
lods
in
push
in
xchg
xchg
out
jmp
bound
test
jecxz
outsl
cmp
stc
xor
in
test
jae
mov
lock
inc
loope
add
sarl
inc
xor
fwait
mov
cmp
xlat
fcoms
les
sbb
adc
fcoml
fildll
xchg
xor
or
test
adc
addr16
out
inc
jae
clc
inc
jecxz
jns
dec
in
outsb
rcll
inc
cmpsl
cmpsl
xorb
std
fistpl
jns
xor
in
lods
lahf
mov
mov
sbb
aaa
dec
adc
add
aam
loop
lret
negl
fwait
jno
mov
push
adcl
sub
ds
or
lea
xchg
mov
pop
mov
mov
jle
fwait
cld
and
and
repz
cmpsb
inc
adc
outsl
xor
pop
dec
mov
lock
mov
fs
mov
xchg
mov
testl
out
xorl
adc
sub
popa
push
jg
inc
pop
sbb
fidivl
xor
out
rclb
mov
insb
cmc
sub
pusha
ret
loope
mov
ljmp
xor
gs
mov
and
das
cld
mov
test
lret
pop
and
jae
xchg
push
lret
shr
or
enter
add
bound
dec
repnz
in
pop
sbb
mov
lret
sub
jle
pop
push
push
cmp
jecxz
adc
mov
arpl
loope
nop
push
out
inc
mov
and
xorb
push
jl
xchg
xchg
dec
mov
jmp
movl
push
leave
movsb
xor
mov
ja
cmp
cld
ss
add
dec
sbb
add
pop
jecxz
out
outsl
sbb
test
cmc
out
adcb
and
sub
pushf
bnd
out
jb
cld
cs
push
add
ficompl
repnz
nop
aas
nop
jp
vpcomd
mov
lea
or
cmp
xchg
pushf
mov
cmp
push
out
mov
repz
jno
and
mov
pushf
add
mov
fwait
test
sub
add
jmp
outsl
ss
cs
fiaddl
sub
xchg
imull
mov
aas
or
pop
stc
andb
aam
aas
sbb
iret
iret
dec
ficoms
sub
xchg
xchg
sub
adc
add
and
adc
xor
imul
pop
mov
pop
fmul
pop
adc
stos
rorl
testl
scas
idivl
int3
lock
xor
leave
and
fsubrl
test
inc
mov
out
movsb
or
xchg
mov
jae
dec
iret
fiadds
add
fs
xlat
push
fs
xchg
push
mov
push
xchg
fdivr
fcmove
push
pop
mov
push
inc
in
out
or
icebp
aas
inc
xor
ljmp
mov
stc
aas
or
in
pop
jno
stos
or
popa
mov
sbb
fldenv
push
push
sbb
test
push
push
in
push
and
lret
push
xorb
outsb
into
cld
imulb
aas
jb
lds
in
mov
les
and
xlat
adc
test
xchg
sbb
repnz
sub
inc
popa
xor
enter
cs
test
cmp
sti
std
push
lock
xor
stc
stos
sbb
lret
lock
psubq
add
pop
pop
jbe
lds
cmp
and
push
adc
loope
imull
inc
insb
test
or
movsl
lock
push
popa
cmp
dec
add
out
xchg
inc
pop
xlat
fs
es
stc
cmc
inc
out
jle
push
xor
into
insb
js
cmp
xchg
clc
int
les
sub
call
mov
pop
mov
sti
imul
dec
lods
dec
insb
push
fs
and
sbb
das
ficomps
fnstcw
cltd
mov
jns
mov
cmpsb
cs
push
pop
je
push
stos
push
and
jb
ror
outsb
xchg
xlat
test
and
ret
loope
inc
sbb
hlt
add
negl
xchg
lods
pop
inc
arpl
dec
sti
cmovp
sarb
cwtl
xchg
mov
xchg
fnsave
xchg
enter
int
subb
in
in
dec
ljmp
mov
adcl
adc
es
iret
testb
sbb
les
cs
sti
and
das
pushf
xchg
mov
ds
push
sub
and
sbb
insb
dec
pop
icebp
inc
cmp
pop
fs
pop
pop
xchg
cmpsb
add
xor
cmp
arpl
xor
lret
out
mov
addr16
inc
pop
loopne
outsl
or
mov
ja
add
test
mov
shll
pop
mov
sub
xchg
lahf
fdivs
dec
orl
xchg
and
flds
mov
std
scas
add
mov
ds
mov
sbb
cmpsb
and
in
mov
stc
bound
mov
int
cmpsb
pusha
inc
shll
jo
inc
sbb
pop
sbb
push
movsb
popf
mov
les
mov
add
jne
adc
rolb
mov
call
in
push
xchg
pusha
aaa
es
push
sub
sub
inc
and
stos
adc
stc
mov
test
xor
mov
adc
es
cmp
negb
push
sub
repnz
sbb
loopne
enter
cmp
jo
int
mov
dec
mov
mov
mov
sarb
cmp
mov
adc
push
scas
lds
fnstsw
repz
xorb
xchg
or
cmp
cmp
aaa
divb
andl
mov
xchg
insb
or
xchg
push
push
pop
xor
mov
cmp
mov
cmpsl
xchg
pop
mov
mov
cmp
insb
cmpsl
adc
and
adc
cmc
movsl
sub
mov
clc
jl
and
fistl
cmp
add
jg
arpl
push
repnz
das
sub
mov
mov
push
jmp
js
adc
adc
sbb
xchg
aas
ljmp
sbb
lcall
out
sahf
jb
stos
cmc
cmpsb
mov
movsb
subl
sub
xor
and
mov
dec
imul
imul
push
push
iret
cmpsl
notb
fs
shll
pushf
jb
rorb
or
inc
pop
adc
dec
mov
jmp
negl
or
lods
jg
pop
jae
adcl
insl
jnp
fsts
pop
rcl
loopne
jb
cld
and
push
push
addr16
call
dec
adc
cmp
out
cmp
or
pop
mov
adc
aam
mov
leave
inc
outsb
daa
and
jmp
xor
ret
sarl
gs
mov
dec
loope
mov
ret
loopne
mov
xor
push
push
movl
push
inc
loope
sub
dec
std
cmc
xchg
insl
iret
mov
or
sub
jb
xchg
call
sbb
or
cmp
jle
test
mov
leave
xor
pop
fs
jno
dec
cmp
push
lods
mov
sub
adc
cwtd
mov
xor
cmpsb
mov
jg
scas
pop
fisubrl
jo
dec
mov
sub
xor
in
mov
and
stc
mov
popf
jge
mov
pushf
imul
mov
loope
ret
push
pop
test
xor
pop
rorb
daa
lods
mov
cld
mov
jbe
shll
cs
cmp
stc
aam
in
ficoms
mov
add
repnz
pop
out
cmp
pop
and
repnz
push
sub
push
inc
and
ja
jge
mov
push
inc
aas
iret
pop
xlat
mov
test
loope
push
dec
sbb
sbbl
shrl
dec
sar
sub
push
xchg
loop
cmc
xor
inc
stos
adcl
cmc
xchg
inc
cwtl
sbb
mov
fbstp
mov
mov
add
sub
mov
out
in
rorl
xchg
leave
loopne
or
add
cmp
mov
dec
xor
adc
cmpb
mov
test
xchg
mov
xchg
mov
repnz
pop
xchg
loopne
mov
fdivs
sbb
in
mov
or
int3
mov
inc
sbb
mov
push
pushf
and
rorl
pushf
inc
jnp
dec
push
ss
xchg
adc
mov
mov
je
xchg
mov
mov
out
loopne
xor
sbbl
test
in
mov
xchg
and
mov
and
ljmp
lds
int
ret
push
xchg
popa
jg
jbe
add
mov
icebp
add
iret
push
pop
lret
xor
mov
sub
js
xor
cmpsl
ds
bound
pop
add
sarl
mov
es
cmc
and
adc
out
sub
popa
jnp
jo
loope
dec
fstp
push
cmp
loope
cwtl
inc
call
sub
sbbl
mov
test
pop
xchg
inc
push
add
sbb
aas
xlat
push
xor
outsb
mov
in
imul
scas
adc
lods
jns
push
out
push
repnz
int
shrl
ss
mov
sub
stos
negl
sahf
mov
mov
std
xchg
add
out
jnp
pushf
adc
cmpsl
and
mov
in
mov
notl
cs
adc
lea
push
or
dec
dec
xchg
or
xchg
xchg
ficompl
call
inc
negw
mov
enter
insb
sub
je
loopne
mov
out
xchg
add
or
sbb
sub
ret
pop
jle
dec
jae
ljmp
mov
push
pop
int3
mov
lahf
pop
sahf
inc
outsl
fsubrl
outsl
push
xor
out
pop
enter
jne
loopne
push
mov
adc
shll
icebp
aam
lock
clc
jl
lds
xchg
jo
xchg
xor
lahf
sub
cmpsb
jne
jmp
mov
int3
popa
adc
movsb
xor
lock
and
xchg
filds
pushf
mov
loopne
test
aaa
sbb
inc
jge
movsb
out
pop
enter
sub
in
loop
pop
xchg
pop
scas
xchg
aas
sbb
add
mov
sahf
cld
push
xchg
mov
and
sarl
lret
test
inc
movsl
add
cmpsl
popa
and
or
ss
ret
jo
adc
pusha
sbb
iret
xchg
shl
cld
rcrl
imul
pop
jb
enter
pushf
xchg
adc
dec
les
adc
pusha
pop
cmp
sbb
insb
and
cmc
pushf
lods
cld
clc
lret
into
loopne
sub
call
in
pusha
and
and
pop
inc
sub
shrb
adcb
jb
mov
xchg
cmc
fmull
bnd
popl
aas
sbb
daa
and
repz
in
es
push
data16
aam
arpl
pop
es
stc
mov
xchg
sbb
ret
dec
or
push
enter
xor
or
xor
dec
fstpt
cmp
ja
sbb
cmpsl
jb
push
sbb
outsl
lahf
mov
fistpll
pop
shl
mov
subl
dec
inc
or
outsl
push
loope
sub
jo
mov
arpl
push
ja
dec
and
adc
stos
push
jle
pop
cmpsl
lret
mov
loop
rorl
mov
dec
pop
inc
movsl
addr16
cmp
adc
or
jae
test
repnz
iret
push
cmp
and
mov
pop
sarb
setns
xor
mov
add
nop
mov
mov
inc
adc
sti
movsl
movsl
mov
fstpt
add
pop
add
rcrb
dec
ret
xchg
push
scas
bndstx
inc
aaa
lcall
lock
rcl
pop
push
pop
imul
dec
inc
test
arpl
sarl
sub
loopne
and
pop
out
stos
pop
js
cmc
and
fdivs
jge
or
pop
push
in
jns
pop
or
inc
cli
inc
add
mov
shrl
std
jae
loop
mov
loop
cmc
and
xor
jne
shl
pop
sahf
rcll
mov
jae
std
add
aam
push
add
movsb
ja
loope
das
das
cmpsb
data16
es
push
data16
mov
test
ret
fldl
push
push
rolb
in
aaa
mov
fisttpll
jl
cmp
clc
fs
dec
sub
arpl
adc
and
mov
jge
cltd
fildl
jmp
push
dec
xchg
xchg
les
clc
sahf
or
inc
xor
xchg
addb
add
mov
loope
fsubs
es
stc
fs
xorl
sarl
cld
or
push
xchg
pushf
push
push
push
outsl
ret
lret
sub
pop
nop
call
fs
jb
fistps
inc
pusha
xchg
push
dec
loopne
adc
or
cmpsb
pop
lcall
push
addr16
jnp
nop
roll
ljmp
fadds
mov
xchg
fimuls
push
inc
pop
insb
or
inc
hlt
leave
std
into
aas
shlb
loop
sahf
punpckldq
shr
int
imul
push
stc
and
cs
fwait
loop
lock
sbb
push
sbb
push
sub
ja
dec
mov
or
xchg
mov
cmp
inc
dec
clc
adc
in
outsl
fidivs
js
dec
push
bound
lock
mov
cmp
clc
cmpl
mov
test
push
jp
imul
inc
mov
icebp
inc
pop
pop
cmpb
jnp
push
cmp
imul
add
mov
subl
pushf
cmp
popf
push
inc
fwait
icebp
pop
int3
adc
jno
mov
mulb
test
ds
inc
mov
adc
aam
pop
adcl
pop
pusha
mov
icebp
mov
sub
shl
mov
jne
test
fmull
je
xorl
stos
lret
jnp
lods
xor
mov
movsb
mov
hlt
insb
jp
out
movsb
xchg
mov
dec
pop
test
aaa
xchg
shll
mov
mov
mov
into
mov
cmp
sbbb
das
js
sub
fnsetpm(287
jnp
test
ret
addr16
push
cmp
sti
lret
jmp
sub
cs
xchg
clc
cmp
aam
in
cmp
mov
mov
dec
cmp
mov
int
and
or
or
insb
out
and
inc
sbb
ret
mov
mov
dec
mov
mov
lret
sti
push
sahf
rcrb
xchg
xchg
es
aas
cmp
dec
mov
jnp
mov
ficoms
pop
aam
mov
inc
mov
lea
imul
sbbb
add
insb
xlat
pusha
mov
push
push
or
sbb
add
xchg
in
push
mov
rcll
mov
push
xchg
cmpsb
push
mov
test
in
neg
push
out
jnp
push
dec
lret
adc
aam
icebp
gs
lock
bnd
scas
push
ret
jnp
je
test
xacquire
pop
sti
add
sbb
outsl
push
jecxz
subl
mov
stc
push
ret
arpl
xor
adc
pop
test
pop
sbb
lds
xchg
cmp
xchg
out
adc
mov
lret
lcall
idiv
jo
xchg
pop
push
push
in
mov
insb
sahf
mov
mov
test
das
mov
inc
outsl
fxch
call
xchg
mov
iret
pop
dec
scas
icebp
scas
icebp
mov
stc
cmp
shl
loopne
pop
ror
fists
fisttps
sub
int
lret
xchg
cltd
bnd
push
push
sbb
loopne
faddp
scas
pop
sbb
xchg
mov
inc
or
jns
pop
aas
xchg
jbe
leave
mov
daa
xor
xchg
jge
mov
mov
push
jge
lods
sbb
jno
lock
cmpl
lods
jl
fwait
mov
mov
cli
mov
out
ret
add
mov
jg
mov
and
in
add
add
stc
fnsave
js
lock
add
cmp
insb
pop
inc
xchg
dec
pop
sbb
adc
addb
lcall
or
in
mov
pop
mov
lock
sub
xor
jp
arpl
inc
mov
hlt
outsl
shlb
in
lahf
ss
arpl
xchg
pop
or
mov
inc
add
mov
jecxz
jne
push
imul
jecxz
xchg
xor
mov
popf
mov
stos
pop
or
cld
inc
dec
jl
insl
push
pop
mov
and
lods
lret
popa
jns
xchg
js
clc
push
inc
nop
pop
ss
fs
xchg
repz
dec
js
push
cld
xchg
fdivs
inc
lods
mov
loop
dec
ret
ret
shlb
sbb
dec
xor
outsb
pop
push
sbb
add
jbe
imul
mov
sub
push
pop
repz
adc
adc
push
test
test
fisttpll
arpl
mov
sti
lret
add
inc
jbe
shrl
pop
and
cmpl
scas
ror
daa
xchg
mov
or
loopne
das
mov
jmp
pop
lods
ret
lahf
int
outsl
mov
call
sub
inc
loope
mov
popf
push
and
fs
fildll
out
ja
enter
and
push
test
repz
xchg
rcr
cmp
dec
sbb
ja
aaa
shrb
fdivp
stos
sbb
inc
in
lds
lea
stos
inc
adc
and
dec
cmp
repz
pop
lds
cmpsl
mov
mov
xor
push
cwtl
cmpsl
hlt
lea
leave
clc
xor
fsubl
pop
cmpsl
xor
pop
arpl
pop
outsl
xor
out
xor
out
xchg
mov
xchg
jno
mov
js
bound
pop
cmpl
outsb
dec
dec
mov
adc
adc
cltd
and
out
stos
arpl
shll
mov
xor
inc
push
sbb
cmpsl
sbb
popf
in
iret
inc
push
jo
push
sbb
mov
mov
jecxz
xor
jmp
mov
sub
int
jp
iret
xor
ljmp
xlat
jae
icebp
lea
fisubs
push
dec
xchg
cmp
dec
ja
movsl
outsl
ffree
push
dec
and
or
lock
insb
nop
in
adc
testb
mov
jp,pn
fisttps
dec
stos
pop
mov
jns
mov
pop
cmc
rdmsr
repnz
out
jb
xchg
inc
jl
cmc
movsb
mov
pop
and
insb
mov
or
xchg
pop
cld
dec
iret
pop
outsl
imul
jo
into
mov
dec
insl
jb
xor
xorb
or
fadd
loope
cli
out
xor
fsubl
mov
aas
aad
add
pushf
ss
popf
mov
loope
jl
fstl
mov
xchg
lods
add
out
sbb
inc
in
insb
rcrl
inc
mov
dec
push
inc
pop
cld
loop
mov
jns
shrb
mov
xor
mov
sub
clc
mov
xor
inc
test
jb
cwtl
fdivrs
add
ljmp
adcl
dec
fwait
xchg
and
or
xchg
mov
xchg
push
push
jmp
ljmp
sbb
jne
in
cmp
shl
sub
sbb
bound
dec
jns
xor
push
faddl
cli
jl
shll
cmp
mov
movsb
sbb
pop
into
sbbl
in
lahf
bound
es
xor
fwait
test
and
repz
inc
shlw
bound
dec
lock
mov
mov
int3
pop
mov
add
scas
loopne
jecxz
and
pushf
dec
cwtl
arpl
dec
mov
pop
mov
lahf
sarl
outsl
jp
jp
cmp
pop
xchg
xchg
imul
mov
lcall
jmp
jo
sub
mov
int3
movsl
or
testb
pop
aam
stos
icebp
shrb
sub
aas
jbe
leave
out
outsl
adc
mov
mov
push
out
jns
mov
in
sbb
xchg
xchg
repnz
imul
dec
xor
imul
cmc
jmp
push
test
aaa
loopne
jb
mov
cmp
jno
lods
gs
adc
inc
ds
mov
and
dec
push
add
jmp
addr16
push
int3
mov
cmp
and
pop
jb
and
dec
jecxz
xchg
jp
out
fs
adc
js
jne
inc
or
mov
aas
mov
cltd
or
cli
movb
pop
inc
aam
mov
nop
test
dec
fs
aam
scas
fxch
mov
or
lcall
xchg
mov
jmp
fldt
int3
xchg
fs
cli
in
jns
mov
out
mov
in
xor
popa
movsb
std
mov
lret
ja
jp
mov
fadds
lods
ljmp
jb
es
sbb
popf
js
push
shld
loope
xchg
push
jns
mov
bound
xor
pusha
cmp
data16
mov
loopne
sbb
lods
psubb
sbb
repnz
xor
fwait
js
int
pushf
inc
repz
adc
orb
in
imul
sti
das
mov
cwtl
pop
add
mov
adc
pop
lcall
dec
or
fwait
mov
xor
pop
push
push
xchg
mov
push
inc
mov
mov
in
add
lods
xchg
add
out
push
les
fbld
cmp
call
lods
mov
divl
add
fcoms
sub
repz
adcb
clc
jns
cld
dec
mov
nop
xchg
add
scas
insb
jb
cltd
cwtl
bound
mov
sub
mov
out
sti
pop
stc
loope
ljmp
lahf
sbb
sbb
adc
jne
jnp
cltd
or
into
inc
mov
jle
mov
mov
lea
xchg
jge
push
pusha
xchg
add
jb
call
mov
sub
popa
jnp
cmpsb
jp
or
mov
call
stos
cmp
add
in
dec
add
push
sub
push
xlat
arpl
jnp
cltd
es
add
and
xchg
test
aam
or
iret
xor
scas
sub
push
mov
jne
movups
sub
iret
fs
mov
test
add
xor
pop
mov
btc
xchg
outsl
outsl
mov
jnp
mov
jmp
fstp
js
push
xchg
jecxz
je
outsb
enter
fnstcw
mov
das
add
cmp
jb
fstpt
mov
ret
dec
das
xchg
daa
inc
pop
sahf
je
ret
xor
sub
jo
push
xor
gs
loop
std
in
aaa
mov
and
push
sti
cli
mov
lahf
xlat
adc
mov
in
xchg
lods
inc
sarb
push
test
fistps
rcrb
out
sub
fnstcw
adc
and
and
or
xchg
cs
insb
rcr
push
adc
adc
out
mov
mov
sahf
fdivrl
das
aam
or
js
aad
push
and
cmp
clc
fdivl
xchg
loopne
je
mov
mov
sub
imul
push
out
dec
adc
fstp
aam
add
mov
mov
int
dec
sbb
loop
cmp
mov
jns
mov
push
aam
insb
lods
inc
sub
and
inc
cmp
dec
outsb
daa
in
movsl
inc
popa
adc
pop
lcall
lods
xchg
ja
fisttpll
imul
push
cmp
sbb
arpl
push
xor
push
nop
addr16
imul
out
scas
lret
sbb
mov
lock
sbb
adcl
addr16
cmc
leave
pop
cmp
and
repz
fdivs
mov
push
stos
pop
sub
mov
cmp
mov
cld
mov
pop
icebp
in
hlt
mov
mov
xor
xchg
loop
xor
jge
rsqrtps
add
xor
xor
mov
test
decl
pop
fisttpl
outsl
testb
inc
mov
mov
jns
fstpl
bound
mov
psrlw
popa
lcall
sub
fwait
adc
inc
adc
or
pop
cwtl
aad
xchg
mov
adcl
divl
leave
mov
and
addl
cmpsl
push
push
inc
mov
xchg
mov
add
pop
pop
cmp
fstpt
sub
aam
stos
mov
fwait
adc
or
orl
xchg
out
xchg
mov
movsl
stc
jbe
shrb
in
leave
nop
inc
loope
mov
movsl
in
and
sbb
cs
dec
test
ss
punpckhwd
jns
test
dec
imul
or
jno
mov
sbb
test
jbe
aad
cmpsl
or
sbb
out
shll
mov
sbb
mov
enter
mov
xor
cmp
inc
rcll
and
jmp
pop
mov
jb
test
xor
sbb
fs
ds
test
lret
ja
dec
adc
jl
jle
cmpsl
add
lods
dec
xchg
pop
test
gs
or
imul
mov
and
mov
negl
cld
pop
mov
imul
pushf
pop
outsl
or
movsb
adc
les
adc
movsb
call
movsb
lcall
fwait
adc
xchg
subb
out
adc
mov
push
dec
xchg
add
pop
shlb
and
sub
imul
into
mov
fsubrl
out
loope
pop
xor
test
push
xor
aas
fistpl
sbb
cmp
adc
xor
mov
xchg
orb
jno
cltd
push
cmp
dec
call
stc
mov
jge
inc
sahf
arpl
jae
mov
mov
adc
mov
aam
das
lahf
cmp
dec
push
push
push
push
out
mov
idiv
sbbl
sbb
cmp
jle
add
in
outsb
jae
aad
mov
xchg
psrlq
cmp
sbb
in
mov
mov
dec
pop
mov
ss
jne
sbb
cli
cltd
jo
and
sbb
cmp
sub
adc
test
xchg
lods
loope
mov
daa
and
jmp
add
sub
pop
fiaddl
sub
out
cltd
mov
leave
test
mov
in
mov
or
fisubrl
rcrb
xchg
or
cwtl
mov
push
fcmovb
mov
repnz
shll
cmp
inc
add
sti
sbb
mov
addr16
mov
decb
aaa
xor
jle
or
repnz
rorl
in
call
xchg
mov
xchg
pop
inc
mov
dec
pcmpgtw
outsb
dec
loopne
xlat
sub
sub
scas
push
jp
mov
pop
iret
push
add
sbb
jns
jg
cmc
adc
xchg
and
imul
aas
fwait
loopne
dec
test
mov
mov
test
mov
je
bound
pop
sub
xchg
pop
leave
pop
in
rcrb
enter
mov
cmp
fcmovbe
fisttpll
in
sub
out
imul
mov
lret
mov
subl
call
testl
or
cmpsb
and
cmp
and
test
test
pop
mov
pop
dec
xor
movsb
sbb
xor
test
stc
push
insb
lds
push
inc
dec
out
cmp
or
cltd
lcall
and
push
sbb
push
sub
jns
lret
arpl
xchg
push
inc
and
pop
ret
xor
shr
xor
insl
sbb
lods
mov
pop
mov
and
popa
push
add
push
push
imul
dec
mov
fidivrs
cmp
aam
lret
lods
sbb
fstps
dec
inc
clc
inc
push
cmpsl
test
mov
adc
das
pop
jl
dec
subb
icebp
mov
and
cli
divb
mov
or
pop
xchg
fstps
aas
ja
into
lock
mov
decl
test
jae
cli
pop
aam
aad
mov
inc
fldt
fidivrl
mov
fisttpl
jge
jo
or
pop
js
fdivrs
lods
gs
mov
add
lds
push
push
into
notl
cmc
xchg
test
nop
leave
mov
sbb
aaa
mov
cmp
ss
push
add
or
fstpt
das
pop
insb
push
push
xor
out
in
les
mov
mov
jnp
sbb
iret
adc
adc
sub
lret
mov
push
lret
push
fldl
dec
adc
out
cmp
fildl
popa
stos
or
popf
ds
outsb
mov
xchg
sbb
loop
adc
out
mov
or
cmp
xchg
dec
cmpsl
daa
pushf
jbe
sarl
mov
out
push
out
rcl
aam
aad
add
mov
adc
imul
jno
stos
mov
mov
and
sbb
repz
test
sarl
dec
mov
pop
dec
xorl
mov
xchg
rorb
jmp
mov
and
pop
add
test
pop
mov
cli
adc
adc
jmp
sbb
addr16
dec
mov
pop
push
aas
push
cmp
movl
push
insb
jno
rorb
pop
jge
dec
dec
mov
ljmp
push
lcall
fwait
mov
jl
adc
mov
or
mov
xchg
insl
mov
outsb
fstpl
in
adc
out
cmp
mov
and
xor
imul
jns
loopne
mov
jge
push
stc
cmp
push
loopne
icebp
jne
imulb
mov
je
mov
lock
dec
test
mov
xor
aad
dec
or
adc
xchg
mov
lret
scas
mov
cli
lcall
out
pop
jbe
adc
jo
test
mov
mov
je
jnp
movsl
sbb
dec
andb
mov
leave
lcall
mov
mov
fwait
dec
dec
mov
xor
repz
rolb
xor
popl
outsb
lock
push
cmpsb
mov
loope
dec
xor
mov
aas
jnp
daa
cmp
imul
jp
in
inc
mov
sbb
sbb
mov
pop
cmp
pop
mov
sbb
inc
sarl
cltd
dec
fadds
pop
fwait
jp
or
ds
pop
xchg
loop
push
cmp
mov
sbb
sahf
insl
gs
mov
inc
cmp
test
scas
lods
out
or
and
push
sahf
test
xchg
mov
lods
mov
inc
es
xchg
push
test
sbb
lods
pop
mov
mov
pop
cltd
addb
add
push
add
cmp
adc
sbb
xor
scas
add
fwait
or
sbb
fildl
mov
int
mov
imulb
add
push
clc
idivb
rclb
mov
mov
in
movsl
loopne
cld
lea
shrl
xchg
pop
sub
push
jnp
mov
or
lods
xchg
push
aas
js
mov
aaa
adc
lock
adc
in
inc
jge
mov
cmp
inc
mov
jbe
aaa
aas
jmp
sub
or
mov
mov
divl
jo
js
dec
push
jl
push
in
mov
push
imul
in
xorb
inc
negb
or
dec
inc
push
xor
mov
addb
pop
fisubs
rorb
out
cld
fmuls
mov
imul
jnp
or
dec
push
jnp
je
out
jge
neg
mov
cwtl
fbstp
adc
xlat
bound
xchg
mov
mov
jno
mov
xchg
jmp
subl
sbb
ja
sbb
dec
shlb
std
xchg
inc
mov
lods
stc
xor
add
mov
push
mov
cmp
push
shld
test
xor
fwait
add
mov
lcall
stos
and
xlat
sahf
dec
mov
mov
stos
int
sub
xor
push
push
lret
lds
pop
add
jl
adc
bound
lret
lret
sarb
aam
dec
xchg
fs
ror
out
jmp
xchg
int
stos
mov
js
xchg
scas
inc
sahf
aaa
add
rorl
sub
stos
or
lods
jmp
test
sub
xchg
outsb
rol
mov
inc
push
fdivl
call
in
dec
test
pop
pop
push
and
pop
mov
mov
test
push
push
mov
ljmp
cmc
out
sarl
sbb
cmp
mov
jmp
out
pop
add
aaa
pop
fimull
sahf
dec
data16
insb
leave
dec
addr16
inc
and
lea
mov
jno
mov
mov
xchg
sub
mov
imul
js
test
add
fstps
je
jbe
leave
pavgb
test
sbb
lcall
mov
mov
sub
dec
popa
in
insb
mov
add
je
call
ret
in
imul
cmp
pop
cmc
and
fwait
mov
icebp
push
pop
outsl
xchg
lret
lods
mov
out
jge
repz
push
adc
loop
lods
outsb
xor
pop
push
je
jo
adc
gs
shll
lods
cmpsb
push
rolb
xor
xor
or
inc
mov
addb
dec
mov
mov
pop
imul
or
mov
push
mov
xchg
sub
jmp
insl
bound
inc
sarl
pop
sub
sbb
inc
fidivl
and
and
xchg
fwait
xor
aad
jge
and
rcr
inc
arpl
data16
pop
fldl
out
adc
xchg
inc
push
or
mov
pop
push
cli
xchg
xor
sbb
cwtl
or
mov
cltd
test
cmpxchg
or
out
sbb
push
push
or
sub
jne
mov
lds
aas
jmp
fdivr
inc
mov
test
jl
lods
mov
loop
mov
cmp
aam
cmpsl
mov
ret
addb
mov
cmp
mov
jp
ja
jns
push
xchg
clc
cmp
add
mov
leave
je
in
lock
in
popa
jno
sub
fsubl
fs
push
sbb
jmp
dec
fs
aad
add
inc
xor
gs
jecxz
lret
ljmp
push
pusha
imul
jge
mov
or
rclb
mov
and
cmc
pusha
xchg
fwait
gs
add
outsb
rcl
or
pop
shrl
lods
sti
out
jmp
stc
scas
aam
sbb
shll
outsb
pop
or
push
ss
push
ret
ds
cwtl
push
adc
or
adc
out
xor
add
pusha
pop
ja
add
push
add
sbb
sbb
sbb
out
inc
jae
mov
cmp
xchg
mov
xchg
cmc
dec
and
mov
repnz
and
pop
mov
xor
jle
mov
or
repnz
jmp
pushf
or
mov
sub
fnsave
xchg
cmp
std
mov
push
scas
inc
dec
cmc
repnz
xchg
jmp
dec
es
pop
adc
out
jmp
fldt
scas
cld
in
xor
addr16
in
imul
aas
movsl
xchg
test
pop
mov
repz
loop
call
fs
pop
dec
clc
cld
sub
cltd
inc
and
stc
shlb
inc
mov
and
jne
outsb
cmpl
aad
dec
pop
insb
adc
sbb
inc
add
aam
dec
shl
sbb
dec
ja
lret
in
xor
xchg
cmp
addl
repz
add
lea
or
stos
adc
mov
cltd
pop
mov
mov
ja
xchg
inc
mov
mov
idivb
ljmp
xor
inc
cmp
jg
into
fnstsw
jnp
or
jno
sbb
jmp
inc
dec
push
scas
adc
adc
mov
mov
dec
addr16
lds
fdivrs
call
xlat
movsb
sbb
push
pop
int3
jge
iret
jmp
jo
dec
out
pop
adc
jle
add
dec
or
ss
mov
sub
fdivrl
fidivrs
hlt
xor
xor
aad
sub
xor
lds
xchg
addr16
test
jmp
call
or
cwtl
inc
cs
or
pop
mov
mov
gs
nop
movsb
or
dec
pop
or
or
ja
inc
sahf
mov
in
call
mov
loop
mov
mov
rcl
in
stc
jb
imul
dec
jns
cmp
mov
add
dec
out
cmp
aas
cmp
and
js
loope
mov
int
loope
jns
popf
mov
fisubl
add
js
fisubrs
mov
popa
pop
dec
and
hlt
sahf
push
call
mov
pop
adc
aam
pushf
fstpl
loope
dec
stos
dec
shl
enter
xlat
cli
es
shl
mov
daa
mov
xorl
cmpsb
iret
movsl
xchg
cld
in
and
adc
cld
xor
push
sbb
mov
adc
and
xchg
movsb
pop
pop
cmp
arpl
insb
fucomip
dec
push
push
sahf
aas
pop
aas
into
lods
mov
push
in
cmp
mov
dec
sbb
js
fstl
ss
ja
cmp
testl
fdivs
and
and
and
movsb
ss
inc
lods
jo
or
sbb
inc
and
dec
call
hlt
xor
xchg
xchg
fst
fidivrs
push
xchg
sbb
mov
push
or
and
mov
mov
iret
xchg
stos
outsb
cwtl
sti
rorb
data16
adc
mov
in
inc
movsl
mov
sub
rorl
push
xchg
ss
or
mov
insb
xor
divb
rorb
js
push
imul
ljmp
xchg
arpl
dec
mov
or
mov
cmc
xchg
fwait
aam
mov
adc
sti
push
nop
imul
imul
jns
mov
iret
inc
inc
loopne
add
inc
mov
pushf
pop
je
mov
xchg
rcr
xchg
inc
xchg
push
mov
and
and
dec
test
pop
clc
outsb
scas
cmc
mov
push
lock
jmp
ficoml
mov
cltd
adcb
jbe
dec
jmp
ljmp
and
cmp
or
mov
outsb
inc
loop
and
out
push
addr16
push
mov
push
mov
mov
push
push
xchg
xor
jo
leave
and
jae
xor
dec
mov
iret
mov
and
cs
outsl
in
dec
xchg
incb
add
andl
jo
leave
xchg
xor
or
out
and
xchg
push
test
lods
bound
mov
dec
jbe
test
lcall
mov
adc
pop
adc
jecxz
and
call
sti
rcrl
mov
scas
or
mov
orl
jb
inc
sbb
dec
gs
repnz
add
jb
jne
into
jne
mov
cmp
mov
or
loop
sbb
fists
xchg
mov
int3
outsl
adcb
or
fsts
push
push
inc
stc
je
sbb
adc
sbb
jmp
add
scas
xor
addr16
or
icebp
movsl
out
cwtl
add
cld
cs
in
ret
sub
jmp
mov
je
add
mov
pop
stc
xchg
repz
pop
add
gs
or
movsl
mov
jecxz
frstor
adc
ret
cli
lret
sahf
scas
fistl
lds
inc
xchg
in
scas
push
mov
lods
imul
inc
push
mov
mull
sub
or
pop
dec
jecxz
test
inc
clc
fsts
rorl
push
push
incl
into
das
enter
fs
das
cltd
pop
je
and
mov
in
aam
push
add
test
push
adc
enter
rorb
inc
or
dec
ss
imul
mov
and
je
and
ljmp
mov
lods
mov
aas
push
out
mov
addr16
in
out
test
xorb
iret
add
rcrl
pop
xor
cltd
in
data16
push
sbb
sbb
push
push
test
lret
cli
mov
cmp
lcall
lahf
dec
loopne
out
shlb
int
fstpl
shlb
adc
pop
lods
outsb
daa
mov
mov
outsb
inc
xorb
adc
xchg
cmp
jno
sbb
mov
mov
sub
push
inc
aad
lret
dec
and
movb
sbb
xchg
pop
lods
adc
dec
out
sbb
in
xchg
mov
insb
jo
mov
mov
pop
or
jmp
aam
out
aaa
rcr
dec
sub
shll
ss
rol
add
pop
cs
in
dec
aas
add
xor
mov
popl
dec
dec
add
xchg
jg
add
pusha
icebp
sbb
mov
aaa
sbb
add
andb
jns
ret
arpl
out
push
fisubs
ret
push
xchg
lods
in
sub
push
mov
iret
inc
or
jns
xlat
in
lods
loopne
pop
xor
sbb
and
sti
sub
jmp
sbbb
add
outsl
aam
outsb
js
scas
scas
adc
adc
mov
sub
cmp
jnp
div
ret
ficompl
stos
cmp
ficomps
das
sbb
mov
pop
inc
addl
int
pop
shrb
push
and
pop
sub
or
fistpll
adc
sub
push
imul
and
je
imul
jmp
dec
into
mov
cmp
xor
pusha
dec
cmp
repz
js
cld
sub
cltd
je
mov
cltd
rcll
loope
mov
sbb
and
dec
jns
push
cmp
sbbb
shrl
sbb
pop
call
mov
cltd
fadds
cmp
notb
faddl
popf
push
jge
jge
or
fmul
add
xchg
mov
out
adc
adc
xlat
mov
cmp
lds
jb
and
cmpsb
jle
jne
jne
push
fstpt
pusha
mov
xor
shlb
int
mov
mov
dec
cli
cmp
arpl
aam
adc
sub
xchg
shl
sbb
mov
mov
cmpsb
and
push
cmpsl
stc
xorl
out
mov
or
aad
dec
lcall
dec
cmp
repnz
mov
xchg
pop
shlb
out
imul
adc
outsl
mov
fdivl
ja
decb
leave
xchg
jecxz
cmc
add
nop
out
lods
data16
jp
push
rcr
xlat
in
xchg
dec
cmpsb
fadds
repz
outsl
repz
insb
xor
mov
mov
ret
cltd
arpl
cltd
loop
push
jne
nop
xchg
subb
and
mov
adc
xchg
pop
lds
popa
pop
xor
mov
xchg
add
sub
jecxz
insl
scas
inc
mov
fisubl
popa
jp
pusha
xchg
jne
pop
repnz
push
sub
mov
jo
cmp
xchg
push
dec
lcall
outsb
outsl
xchg
or
cli
pop
add
bound
cmp
test
inc
je
push
pop
dec
mov
inc
fwait
outsb
mov
negb
dec
fbstp
push
arpl
pop
sub
push
les
sub
xchg
mov
jmp
push
mov
dec
fidivrl
ss
stos
and
sbb
scas
push
jp
ljmp
dec
sti
fs
clc
lcall
decl
inc
mov
out
outsl
add
mov
xchg
call
sbb
or
mov
jno
push
out
cwtl
aam
inc
daa
mov
jno
fs
pop
adc
cmpsl
aas
jecxz
add
dec
pop
stc
mov
test
cmp
fldcw
or
jl
mov
das
out
and
shl
pop
loop
adc
pusha
push
xor
inc
dec
sub
push
scas
sub
les
mov
repz
inc
movsb
cmp
mov
aaa
cmp
push
mov
inc
sbb
rcll
aam
and
push
lock
adc
movsl
inc
inc
loopne
and
int
sub
nop
xor
les
mov
push
repnz
movsb
insl
push
push
push
jge
in
call
insb
jae
test
stos
into
or
lcall
fnstcw
inc
lret
mov
and
dec
xchg
fidivrl
sbb
imul
cmpsl
dec
adc
push
pop
push
mov
inc
data16
test
idivl
int3
in
aam
adc
mov
cltd
inc
push
jp
mov
add
mov
fmull
pop
pusha
add
mov
lret
leave
jnp
xchg
rorl
lahf
imul
pop
je
cli
push
popf
mov
outsl
leave
mov
in
rorb
rorl
xlat
hlt
out
inc
or
out
cmp
push
imul
testl
inc
xchg
js
pop
push
shr
cmp
call
push
sarb
dec
and
xchg
push
or
sahf
or
mov
add
sbb
stos
ds
mov
mov
add
add
daa
shll
icebp
fstpt
pop
rcrb
or
lods
sbb
pop
cmp
repnz
jo
push
test
pop
loop
push
xlat
cmp
int
add
aad
jb
das
pop
lods
ljmp
jl
xchg
movsl
sti
insl
loop
mull
or
push
roll
ficomps
jmp
jl
fbstp
in
push
pop
mov
in
imul
pop
add
aas
cli
aaa
mov
jbe
sarb
insl
fcoms
ret
aas
xchg
cmp
pop
jl
xlat
jp
add
stc
mov
cmp
pop
sti
xchg
popa
inc
addr16
and
aad
xlat
push
or
pop
fwait
xor
xor
lret
jo
sahf
cmpsb
shll
pop
addr16
fmuls
cmp
xchg
pop
mov
stc
int
and
sub
jmp
or
das
push
mov
xlat
dec
cmc
and
sti
or
ja
cmp
adc
int3
inc
repnz
lret
fldcw
inc
mov
je
mov
push
std
jp
mov
mov
pop
ljmp
xlat
jmp
std
in
dec
dec
cmp
jge
sbb
movsl
sub
and
lret
pop
push
sbb
sub
repnz
cmp
cld
cmp
push
pop
mov
lea
mov
cmp
add
lods
scas
in
in
xchg
pushf
andl
mov
and
push
clc
mov
inc
mov
cltd
test
xchg
daa
addr16
cmpsl
mov
mov
into
or
mov
lods
lret
incl
out
cmpsb
jno
data16
cld
fadds
mov
adcb
jno
test
push
ret
iret
and
fwait
insb
mov
adc
bound
movnti
lahf
les
movsb
sbb
sahf
je
orb
jge
jo
mov
add
fwait
xchg
sbb
jg
and
std
repz
push
insb
lret
fsubrl
adc
in
dec
addr16
sbb
jns
mov
and
in
and
add
inc
test
dec
imul
dec
fcomps
loopne
lret
jp
into
jne
pop
adc
sub
sbbl
shll
adc
cmp
push
outsl
pop
inc
shlb
push
sub
cli
xor
dec
in
xor
pop
and
mov
es
or
sub
xor
mov
add
xchg
mov
scas
in
dec
stos
jb
outsl
jg
inc
jnp
push
cmp
or
jno
inc
jns
jnp
out
push
add
out
or
xor
inc
dec
into
or
into
jp
dec
out
sub
popf
fcom
fisttps
cmp
cmp
std
fistl
leave
rolb
fists
test
adc
push
out
inc
loopne
aas
popf
cmc
lock
adcb
mov
es
popa
sub
mov
pop
sbb
in
xchg
shlb
setg
xor
outsl
lods
ja,pn
mov
mov
test
and
xchg
arpl
mov
incb
in
bound
mov
mov
lock
adc
into
imul
push
out
add
and
in
fidivl
cmpsb
mov
std
and
inc
fcmovnbe
mov
sarb
sub
mov
pushf
push
aaa
or
jp
adc
xchg
insb
jl
loop
adc
lods
mov
scas
xlat
out
pop
subb
or
mov
push
adc
or
lahf
and
lea
sub
mov
std
cmpsb
aad
mov
mov
jle
mov
push
lea
sti
aam
add
push
xchg
sub
ds
fbstp
popa
push
and
iret
rorb
outsb
inc
testb
and
lods
sahf
popf
cmpsb
and
js
stos
fnstcw
idivl
inc
leave
xchg
je
enter
push
xor
adc
shl
mov
jp
xchg
dec
push
ret
test
push
mov
sbb
jg
jl
cmc
jg
sti
mov
dec
jnp
or
pop
push
loope
lea
lods
stos
push
push
adc
mov
mov
imul
fimull
call
icebp
mov
lret
iret
rorb
aas
int3
xorb
mov
shll
cmpsl
scas
and
out
jmp
movsb
adc
aas
roll
mov
test
jns
or
cmp
xchg
mov
mov
jecxz
jg
push
jg
sbb
mov
clc
outsb
popa
mov
ss
mov
mov
leave
fsubrl
shl
sbb
sahf
dec
stc
or
push
push
ret
stos
mov
adc
fildl
icebp
stc
out
sub
call
or
sti
lahf
jne
das
leave
xchg
enter
push
loopne
or
iret
push
insl
fwait
dec
flds
or
sbbl
std
push
jg
std
fisubl
idiv
lods
mov
inc
movsb
loop
xchg
in
adc
cmp
add
movsb
lods
movsl
push
dec
push
jle
sub
dec
inc
hlt
xchg
mov
sbb
mov
movsl
aam
add
popa
xor
cmp
loopne
call
or
cwtl
outsl
clc
jecxz
mov
neg
mov
in
pop
stos
xchg
rcrl
loop
jb
sub
dec
pop
pushf
jge
leave
cltd
xchg
sbb
push
lea
mov
addl
inc
jg
lods
ss
push
imul
pop
out
loopne
pusha
xor
jmp
jmp
cmpsl
and
cmp
mov
pop
std
mov
dec
pop
fs
rorb
les
call
das
fimuls
fiadds
push
je
leave
xchg
mov
jo
push
jg
bnd
mov
or
lock
int
lea
jae
repz
jo
pop
or
push
mov
dec
jmp
sub
xchg
jl
mov
int
test
mov
and
jecxz
jl
jne
fstl
mov
push
xchg
dec
insl
jbe
not
cmp
ret
cmp
jnp
ret
fidivs
push
and
add
push
pop
mov
orb
mov
adc
rcrl
dec
movsl
out
mov
sbbb
mov
sbb
inc
fnstcw
lahf
jge
pushf
pusha
dec
sbb
shrb
cmp
cmc
jp
lods
outsb
stc
jecxz
add
lods
jle
pop
pop
mov
jne
data16
adc
test
pop
xchg
mov
pusha
das
mov
mov
arpl
sarl
xchg
stc
js
cs
jne
aad
xor
sahf
inc
jmp
or
in
mov
sahf
push
pop
jo
ret
ret
cmp
into
or
dec
fwait
popf
movsl
inc
in
jns
pop
push
lods
hlt
push
or
mov
imul
stos
adcb
adc
pop
jbe
sbb
clc
mov
adc
lods
mov
dec
repnz
jbe
or
test
sbbl
lods
sub
xchg
fisubs
lods
pusha
sub
push
icebp
gs
xchg
jnp
xchg
pop
xchg
push
test
cmpl
fdivl
and
mov
es
push
ret
outsl
pop
int3
cmc
jmp
xor
js
or
mov
mov
mov
ljmp
in
pop
fwait
adc
addr16
hlt
loop
leave
fisubs
jbe
cmp
sub
mov
cmp
fildl
mov
inc
adcb
mov
xchg
sub
mov
int3
pop
cmpsl
or
inc
fs
lcall
int
rcl
and
adc
lahf
ja
out
pop
idiv
cmp
lods
mov
outsb
xchg
subl
ljmp
mov
repz
xchg
fwait
mov
jg
adc
or
repz
shlb
jno
add
sub
mov
sub
adc
inc
sbb
jns
aam
add
or
adc
int
mov
pop
je
mov
jne
in
lds
add
add
xlat
enter
int
inc
dec
scas
jge
xchg
test
mov
ss
pop
mov
ljmp
mov
mov
sub
cltd
cmp
out
hlt
add
jle
mov
xchg
adcb
mov
mov
fcoml
xor
les
cmp
fcoml
mov
stos
arpl
or
or
xchg
xchg
leave
pushf
popa
fwait
mov
push
xchg
mov
mov
mov
ljmp
inc
dec
fcoml
inc
les
dec
or
dec
pop
mov
fistpll
inc
cmpsb
push
andl
lcall
inc
loop
xor
mov
ds
cmp
ja
lock
dec
sub
jno
cmp
push
fidivrl
inc
stc
aaa
add
shll
push
jne
jmp
not
out
arpl
sub
stc
out
add
pop
ja
in
push
lret
pusha
loope
sub
adc
or
sti
sbb
jl
int3
mov
add
roll
aad
add
loopne
es
xor
stc
ficompl
shrb
mov
rcrb
pop
dec
mov
stc
insb
adc
mov
add
aaa
xor
enter
out
daa
adc
or
xchg
xor
pushf
loop
add
rclb
mov
lods
mov
addr16
in
sub
decb
mov
cmpsl
addr16
push
xchg
pusha
int
adcl
aam
faddl
mov
inc
dec
fdivrs
iret
and
cmp
int
mov
roll
pop
lods
and
cmp
jne
mov
inc
jae
aad
call
insb
mov
jbe
cmp
xor
add
loopne
lret
shlb
dec
jp
daa
in
mov
pop
mov
jg
cmc
fs
xchg
arpl
dec
iret
jo
cmc
rcr
out
mov
stos
sti
or
out
xchg
xor
lock
enter
jmp
lods
test
pop
sbb
das
mov
mov
sub
jecxz
jne
fs
push
int3
cs
hlt
sbb
int
test
jle
in
inc
sbb
pop
fidivrl
jecxz
test
xchg
mov
cli
outsl
mov
mov
inc
test
enter
or
scas
jnp
nop
add
fsubs
xchg
daa
std
dec
or
dec
es
clc
shl
adc
inc
xchg
inc
lret
lock
adc
and
cli
ret
jmp
fwait
pop
pop
jne
pop
dec
es
lods
xor
imul
push
sub
mov
mov
mov
sbb
pop
mov
pop
and
lret
ret
jge
adc
or
push
adc
stos
lcall
cmp
outsl
pop
dec
and
shlb
cmp
jne
faddl
test
jno
or
into
adc
fcoms
mov
lds
inc
rolb
inc
mov
scas
ss
xchg
popf
shl
jns
sarl
sti
hlt
leave
repnz
jge
pop
daa
mul
mov
and
adc
mov
cmp
in
pop
leave
dec
lahf
clc
cmp
mov
adc
lock
jmp
or
jmp
dec
scas
push
add
cmp
bound
inc
xchg
in
adc
inc
mov
jl
enter
cltd
icebp
lahf
ja
aaa
mov
repnz
jge
pop
loopne
iret
inc
jo
mov
fsts
xor
hlt
cmpsb
adc
xor
sub
jp
int3
inc
pop
in
add
neg
cmpl
pop
fisttps
gs
imul
rorb
addl
mov
add
inc
jb
aas
inc
lahf
mov
dec
and
ljmp
lock
into
and
lods
mov
pop
imul
mov
mov
mov
call
hlt
pushf
pop
add
add
ss
mov
cmpsl
adc
das
mov
lea
push
aas
out
xchg
ffree
inc
mov
cmpsl
repnz
scas
pop
sbb
test
add
ror
repz
cmpsb
or
movl
sarl
sub
loop
fidivl
out
clc
rorl
cmp
or
pop
out
pop
pushf
cld
fsts
enter
cltd
out
mov
aam
outsl
dec
aas
cmc
cmp
test
dec
stos
movsb
js
or
das
in
adc
lods
cmp
adc
sahf
lahf
scas
movsl
insl
imul
xchg
adc
outsl
mov
xor
cmp
neg
loope
ret
ja
sbbb
xchg
dec
stos
movsl
icebp
inc
pop
adc
sbb
in
cmp
scas
pop
jle
bound
pop
push
rorl
mov
mov
add
mov
aam
icebp
leave
jg
cmp
jl
mov
and
inc
ret
inc
les
ret
push
push
add
leave
sbb
pop
cmp
cmp
cmp
add
loopne
and
cld
out
or
mov
add
lret
popf
insl
mov
push
sbb
and
push
sahf
sbb
or
pop
xchg
adc
faddl
ss
mov
in
mov
lods
sbb
out
cmp
and
jmp
movsl
push
lock
insb
mov
pop
inc
dec
cmp
icebp
xchg
mov
cmp
decb
sbb
aad
push
pop
jecxz
dec
jmp
push
jbe
and
sub
mov
mov
push
push
add
out
movsl
push
cmp
rolb
ret
mov
sbb
out
xchg
icebp
mov
test
cld
mov
addr16
imul
inc
lcall
or
xchg
jno
jns
bound
fs
push
xchg
push
cmp
out
repz
test
xor
mov
icebp
pushf
pop
adc
and
sbb
adc
add
sahf
popf
xor
inc
sub
xor
fbld
and
inc
sbb
out
and
pusha
fimull
xchg
mov
adc
xchg
daa
fsubrp
and
cmp
in
jb
jbe
imul
rol
jge
movsb
divl
test
jl
lods
push
jmp
dec
dec
mov
adc
cmpsl
mov
lret
mov
adc
mov
hlt
test
movsb
lahf
dec
cli
push
dec
mov
mov
aad
xor
pop
das
inc
movsl
jb
add
lret
cmp
roll
mov
outsl
aad
jmp
movsb
lahf
adc
inc
in
fwait
movsb
cli
lretw
fsts
or
cmp
add
add
into
cmp
push
ljmp
xor
cmp
imul
loopne
xorb
adc
cli
test
or
fcoml
jo
jmp
mov
out
mov
test
adc
cld
mov
int
iret
out
pusha
jno
test
enter
scas
cld
mov
jl
icebp
sbb
mov
jp
lahf
xchg
cmpl
syscall
fwait
in
frstor
call
mov
imul
jo
inc
stos
mov
inc
pusha
sbb
scas
lock
lods
adcl
mov
scas
push
pop
push
out
fcomps
push
pop
mov
or
test
lea
out
jo
int
test
sahf
xor
add
shrb
rorb
pop
push
out
inc
xchg
ds
mov
sbb
pop
mov
cmp
dec
cltd
xchg
adc
xchg
push
insl
jne
push
push
pop
adc
fcmovb
arpl
lods
sbb
mov
loope
adc
test
adc
popa
jb
sar
mov
fs
cltd
movsl
fs
fdivrp
jg
inc
add
stos
rcrl
sbb
leave
dec
mov
jns
cmc
pop
xchg
mov
cwtl
add
add
out
cmp
int3
addl
int3
xorb
leave
xchg
xchg
inc
sub
call
in
jbe
popf
out
mov
and
data16
mov
movsb
sub
rol
aas
jge
mov
orl
data16
lods
adc
je
add
repnz
push
iret
adc
push
sub
fdivl
out
xlat
lock
out
fidivs
insb
insl
and
sbb
and
aaa
shr
mov
leave
mov
or
xlat
jno
leave
mov
xchg
xchg
inc
mov
sbb
dec
outsb
iret
sub
mov
insb
movsl
sub
out
pop
iret
jp
cmpsb
jb
adc
ljmp
movsl
add
push
inc
or
fstpt
mov
add
orl
pop
rcrb
push
sub
data16
pop
xchg
mov
out
sbb
mov
or
cld
sub
mov
arpl
in
mov
cmp
and
cmp
mov
xchg
fstpl
scas
xchg
cltd
test
jmp
jle
jl
outsl
adc
inc
cwtl
repnz
stc
cmpsb
xchg
push
xlat
push
out
mov
sahf
jb
aaa
xor
pop
push
popa
mov
mov
push
xor
int3
sub
inc
inc
mov
mov
hlt
sbb
jb
jecxz
cltd
xchg
aas
mov
scas
xchg
jne
repnz
or
xchg
pushf
xor
stos
loope
icebp
scas
aam
lea
mov
pushf
icebp
pop
and
outsb
in
adc
lods
lods
loop
cwtl
popf
popa
das
sbb
aad
sarb
bound
lods
pop
adc
pushf
xor
lods
mov
or
push
sbb
js
ret
out
in
push
jne
pop
jbe
pop
push
sub
ss
loopne
fldt
mov
ror
pop
jmp
fadd
frstor
inc
xor
push
outsl
cltd
rolb
mov
adc
jne
adc
mov
aaa
inc
dec
push
jno
fs
arpl
cltd
mov
or
sti
imull
push
ds
cld
mov
xor
and
fcomip
std
out
and
pop
push
adc
jmp
ds
lea
push
mov
inc
ss
pop
outsl
cwtl
ljmp
es
push
scas
push
rcr
leave
inc
xchg
mov
xchg
addr16
mov
mov
movb
into
push
sbb
js
in
int3
jb
cmp
adc
cmp
push
lods
cmpl
jbe
rorl
jns
out
js
test
aaa
pop
leave
gs
inc
jb
sbb
hlt
jg
push
dec
sar
aaa
jnp
dec
sbb
or
push
or
loope
jl
popf
mov
je
js
imulb
in
fstpt
mov
loop
mov
inc
repz
ja
fdiv
lock
jmp
and
jnp
xchg
inc
mov
xchg
fldt
mov
test
adc
out
roll
mov
mov
daa
daa
xor
pop
push
je
enter
out
lock
rcrb
sti
push
mov
lock
mov
xchg
jecxz
pop
pop
and
pop
mov
test
push
insl
fwait
mov
push
test
das
and
mov
xor
sub
hlt
iret
sub
and
je
test
ss
jbe
lock
into
sti
test
in
and
jg
pop
mov
test
xor
mov
adc
jle
pop
mov
mov
xchg
adc
and
aam
adcl
subl
jecxz
arpl
clc
test
insl
mov
loope
cmp
mov
bound
xchg
xchg
and
ret
ret
inc
insb
pop
mov
popa
push
xchg
inc
fwait
loopne
pop
or
pop
mov
nop
lret
gs
jnp
out
loope
pop
out
imul
inc
sahf
xlat
fnstcw
inc
out
jns
lret
clc
pop
ss
mov
sahf
ljmp
fsubr
jl
and
cltd
cmc
mov
jo
gs
push
ss
roll
or
xchg
mov
rcll
jb
push
mov
ss
in
or
adc
push
pop
pushf
fwait
imul
jl
xor
pop
mov
subb
in
dec
jo
lcall
xchg
test
int3
inc
lock
cmpsb
add
shl
aad
insl
push
or
out
push
dec
pop
xchg
fld
pop
mov
sahf
lahf
xchg
imul
or
and
sar
neg
or
shlb
jne
lret
cld
sub
push
ljmp
mov
mov
data16
fildll
inc
inc
mov
sub
lds
jp
push
insl
xlat
cmp
sub
mov
dec
lret
and
ffreep
xchg
rolb
in
out
inc
xchg
shll
push
push
vandnps
push
sbb
or
mov
lret
imull
xor
xchg
xchg
xchg
push
loope
mov
andl
xchg
lods
scas
bound
test
cwtl
mov
into
stos
mov
jle
hlt
push
fmul
inc
sbb
cwtl
mov
fisttpl
imulb
and
scas
movsb
cmp
sub
xlat
popf
mov
int
dec
pop
mov
push
mov
cwtl
mov
sti
jmp
dec
pop
jle
insl
aam
dec
or
in
pop
js
dec
rcl
or
sahf
pop
arpl
lret
cmp
jbe
cmpsb
dec
and
push
cmpsb
or
and
push
jle
cmp
fcmovu
sub
outsb
notl
sbb
in
and
orl
into
aam
xchg
bound
lds
dec
fwait
cmp
mov
adc
adc
in
repnz
sub
xchg
test
xchg
les
test
int3
aad
scas
aas
mov
rcrl
ljmp
push
fs
aas
push
sbb
leave
mov
mov
push
pushf
cmp
addr16
out
sub
insl
or
shrb
and
cwtl
outsl
xchg
sbb
mov
and
push
ret
out
fs
pop
loop
call
jmp
insb
imul
loop
cmp
xor
sbb
repz
xchg
addb
fsubr
das
mov
mov
mov
jbe
pop
pop
jp
add
lahf
mov
movsl
mov
or
iret
fnstsw
mov
pop
stos
dec
or
sbb
xchg
mov
and
ss
nop
cs
int
aam
mov
loop
test
inc
hlt
push
pop
fcmovu
mov
jmp
mov
sub
pop
add
les
adc
xor
leave
sti
clc
testl
xor
or
jns
lahf
xchg
fists
or
push
lret
enter
push
xor
das
xor
rorb
dec
and
xorl
hlt
pop
or
xchg
out
insb
pusha
loope
pop
inc
pushf
cmp
lock
mov
jns
inc
dec
sbbb
stc
mov
fbld
cld
sub
cwtl
dec
mov
mov
mov
call
mov
ret
mov
aas
fs
ja
sub
scas
or
sti
rcrl
addb
sub
push
imull
loop
push
pop
sub
es
lcall
sbbb
xor
sub
addr16
adc
adc
in
push
je
addl
fisubs
and
out
sahf
inc
fs
sbb
fprem
add
and
add
push
jle
xchg
sbb
jno
frstor
push
and
fisubl
fnstcw
and
add
lcall
dec
pop
push
add
jg
popf
divb
outsb
cmp
jl
insl
inc
jne
jne
dec
dec
or
add
sbb
dec
int3
cwtl
int
jl
insl
pop
outsl
and
lea
add
jl
jno
addl
xor
or
sti
jp
out
jo
popa
cmp
pop
in
pop
in
lret
fwait
dec
lret
stos
dec
sbb
fidivs
test
xor
test
insl
and
inc
mov
inc
pushw
push
insl
xlat
jg
int3
push
cwtl
pop
and
cmp
test
out
out
ss
rorl
popa
rcr
jg
mov
enter
pop
aas
and
imul
xchg
sbb
pop
cmp
lcall
sbb
into
cmp
xor
rorl
or
movsb
inc
pop
popf
jle
pop
mov
divb
rorb
movsb
jae
mov
jns
das
cltd
push
sbb
aam
stos
cld
mov
mov
leave
mov
pop
or
gs
add
jno
les
dec
shlb
pop
add
clc
lahf
iret
adc
sbb
pop
mov
xor
aaa
aaa
or
inc
and
bound
xchg
mov
or
push
mov
and
ljmp
enter
jg
pop
hlt
nop
xor
inc
mov
outsl
dec
lods
filds
sub
jae
add
push
mov
adc
push
subl
xchg
sahf
into
in
arpl
scas
xor
and
push
adc
mov
popa
mov
lock
jecxz
push
les
inc
sbb
fsubl
jo
push
push
mov
test
mov
xchg
cld
mov
daa
out
cmp
leave
fstl
in
inc
add
pop
adc
fistpll
insl
pop
mov
mov
movsb
jl
ret
add
adc
js
rorb
movsl
out
push
cli
aaa
out
sbb
sbb
xchg
loopew
dec
aam
push
xor
inc
jecxz
pop
cld
test
inc
data16
rcrl
mov
je
cmp
repz
shrb
mov
mov
repnz
outsb
push
into
data16
cmp
and
shl
call
in
push
jnp
scas
aaa
mov
jo
inc
sbb
inc
or
dec
int
shlb
ja
push
lret
adc
xor
aad
out
cmp
bound
cmp
adc
rcll
or
sub
lcall
xchg
lock
sub
pushf
aaa
mov
rcrl
add
dec
sbb
mov
sahf
popa
cli
inc
push
mov
sub
rolb
pop
jl
enter
mov
mov
inc
pusha
out
jp
mov
push
imul
lods
xor
iret
in
stos
jl
adc
mov
sub
dec
lods
jae
jno
jl
mov
push
mov
and
shrb
pop
adc
dec
jns
iret
jecxz
ss
pop
aas
sarb
jp
sar
inc
mov
adc
xchg
mov
xor
add
or
pushf
push
ror
shll
out
clc
add
xor
xchg
and
mov
je
iret
push
ljmp
fildl
stos
jmp
jge
fcmovu
inc
and
mov
pop
mov
popa
sub
cmp
xchg
or
jnp
addr16
mov
jb
xchg
ret
mov
mov
out
je
fdivrl
lock
push
lret
mov
xchg
mov
scas
sub
into
clc
push
rclb
inc
add
mov
push
push
imul
sub
hlt
add
jp
iret
jmp
das
call
dec
jns
js
cltd
pop
sarb
mov
cmc
ss
sbb
fisubs
ja
mov
fwait
mov
rcll
fdiv
decl
cld
xor
dec
cmp
iret
adc
adc
pop
ds
inc
dec
out
icebp
xchg
out
or
mov
outsl
xor
mov
cmp
iret
or
pop
out
addr16
arpl
jmp
loop
jno
call
and
test
and
mov
pop
js
jp
cmp
mov
rolb
pop
push
lea
cli
and
xor
into
rorb
mov
cli
roll
inc
fisubrl
hlt
dec
adc
mov
dec
je
cltd
aad
pop
jle
lret
jnp
mov
dec
jo
gs
fisttpll
cltd
mov
inc
in
fwait
test
and
inc
outsb
push
mov
lret
fwait
mov
xchg
sbb
adc
sti
sub
insl
fdivs
daa
inc
adc
int
stos
scas
test
cltd
cwtl
add
aad
orb
xchg
lahf
popf
out
add
gs
imul
sarb
pop
stc
or
mov
push
mov
mov
pop
aaa
jns
inc
push
shll
mov
loopne
mov
ud1
mov
and
mov
icebp
cmpl
cmc
data16
cwtl
in
imul
mov
cli
cmpsl
test
jno
jmp
mov
mov
dec
aam
add
aad
mov
outsl
sbb
mov
cmp
loop
and
xchg
xchg
add
seto
jcxz
push
daa
xchg
mov
or
jle
ds
mov
ja
in
cmpsl
pop
sub
or
push
cmp
add
push
int3
dec
fsts
xchg
sub
xchg
add
ss
aaa
sbb
cltd
mov
cmp
lock
icebp
adc
push
jle
xchg
pop
mov
mov
pop
mov
ficompl
stc
mov
xchg
push
not
ss
fstpl
cmpsb
nop
mov
sahf
es
arpl
xor
pop
enter
addr16
les
ljmp
aas
dec
fstpl
lcall
xchg
and
lret
cld
push
dec
jmp
test
loopne
sti
les
lock
inc
jb
fcom
iret
leave
out
mov
adc
sbb
pop
or
sbb
push
nop
fwait
inc
fistpll
adc
das
inc
addl
sbb
inc
ds
pop
ret
fidivs
cs
or
scas
dec
push
jg
jnp
pop
jecxz
addb
pop
into
pop
adc
mov
mov
mov
into
pop
outsb
pusha
in
fsubs
pop
push
sbb
popa
in
mov
ret
add
aad
into
enter
test
mov
inc
xor
mov
ret
rolb
xor
int
enter
or
arpl
sbb
mov
ret
cs
in
clc
stc
jl
cmp
or
or
repnz
lret
fwait
xor
pop
filds
push
add
sub
sti
jbe
ret
lret
jne
mov
pop
jnp
fucomi
ret
cmp
fiaddl
sbb
sub
mov
xchg
aaa
mov
das
mov
lods
cmp
mov
cmp
xorb
dec
sub
mov
jl
dec
lock
pop
icebp
leave
cmp
bound
lcall
push
sarl
rcll
dec
xchg
push
inc
or
arpl
stos
stos
ret
xchg
std
lret
sub
push
ret
repnz
les
jmp
mov
adc
inc
cmc
fsts
rolb
jg
cmp
lock
add
mov
jae
jbe
les
push
cmpsb
mov
fwait
push
add
out
lock
dec
cld
nop
aas
bound
repnz
and
cmpl
sbbl
lds
adc
int
push
mov
fstpl
imul
cmp
pop
fnstsw
inc
inc
mov
cmp
fimull
dec
mov
xchg
adc
cmpsb
pusha
mov
cmp
mov
sbb
pop
imul
ret
pop
pusha
imul
aaa
outsb
lcall
mov
sbb
fwait
repz
xchg
aad
mov
pushf
mov
mov
insb
sbb
add
jle
test
xchg
or
inc
ja
inc
adc
fsubrs
cwtl
add
jle
daa
push
cld
lds
jno
xor
sub
sub
outsb
decb
sarw
mov
imul
mov
in
movsl
imul
imul
aaa
pop
pop
sbb
iret
cltd
into
jo
sbb
mov
repz
fidivl
lret
mov
insb
jge
inc
xchg
mov
iret
push
imul
adc
xorl
mov
mov
js
sub
arpl
aad
add
xchg
pop
inc
fcmovu
insb
xchg
popf
cmp
xor
clc
adc
sub
addr16
add
cltd
push
or
test
dec
add
popf
int
ret
test
inc
dec
aas
jecxz
fs
jne
call
test
inc
add
adc
cmp
cmp
in
jae
jle
pop
xchg
fs
adc
push
in
inc
out
cmp
or
loopne
ret
dec
or
jmp
sub
lea
xchg
cmp
gs
and
add
pop
xor
call
dec
cmp
sahf
or
out
jno
xor
cmp
sbb
mov
xchg
mov
pop
iret
mov
xchg
popa
push
test
mov
mov
repz
sub
inc
inc
call
xor
gs
gs
cmp
xchg
out
sbb
aam
push
pop
cmp
insb
or
testl
std
sub
cmpsb
into
inc
imul
cmp
sarl
add
je
xlat
push
mov
cmp
mov
cmp
mov
sub
mov
inc
xchg
jp
xor
in
and
ljmp
push
mov
jg
mov
xchg
lret
fistl
leave
and
sbb
push
test
popf
insl
int3
xor
mov
push
shl
jnp
movsb
push
mov
xchg
jmp
jl
push
dec
cmpsl
mov
stos
lds
pusha
pop
enter
int
lods
dec
pop
xchg
test
push
or
daa
js
lock
mov
jmp
iret
fldcw
xlat
fsub
das
mov
and
cmp
mov
dec
cmp
xor
or
xor
fs
sbb
xor
sbb
test
mov
pop
sbb
outsb
xchg
or
ret
popf
popf
adc
sarb
les
fldt
xchg
xor
mov
test
dec
push
adc
cmp
pop
pop
cmpsb
jae
aaa
or
cli
test
mov
xchg
push
pop
lret
mov
in
cmp
jle
in
mov
mov
lcall
pop
icebp
sub
fwait
ret
into
imul
leave
add
sbb
fs
jae
fsts
pop
dec
add
push
sarl
xor
ljmp
push
dec
movsb
repz
mov
sbb
ret
xchg
sub
into
es
pop
ret
mov
mull
cs
fistpl
in
das
add
fisttpl
jge
cmp
scas
xchg
aas
mov
cwtl
sub
jp
push
cli
cwtl
inc
das
jle
call
out
cld
xchg
sub
hlt
out
pop
mov
ds
std
xlat
pop
or
les
ret
mov
add
mov
sbb
aas
mov
fiaddl
pop
arpl
int
stos
cli
std
mov
pushl
dec
pop
pop
popf
leave
mov
stc
jo
adc
add
rolb
mov
leave
and
add
jno
push
lea
addl
mov
adc
popf
aas
jp
add
ja
call
mov
mov
fwait
inc
fisttps
lahf
jmp
ljmp
pop
adc
mov
mov
ficoms
pusha
pusha
xchg
pop
sti
rcrb
dec
fnstsw
popf
sbb
xchg
ffreep
stc
roll
fstpt
xor
jle
push
lahf
add
mov
mov
out
xchg
call
ss
lock
shll
add
out
cs
sub
and
mov
xlat
data16
sub
orl
dec
lods
cmpsl
sub
cmc
shl
ja
sbb
xor
jns
lods
and
mov
jecxz
jb
sbb
xorl
cwtl
jle
int
std
or
sahf
or
inc
mov
sub
filds
fs
stc
mov
fs
lcall
sbb
arpl
mov
pop
jmp
stc
sbbl
inc
mov
orb
pop
jno
outsb
and
bound
popf
push
cmpsl
aas
push
xor
mov
or
mov
pop
pop
cmp
sbb
shll
push
jecxz
addl
ja
outsl
shll
mov
inc
mov
mov
sahf
sbb
notb
ds
int3
add
cmpsb
adcb
cmpsl
xchg
hlt
out
and
loope
push
fmulp
sub
bound
push
pushf
and
mov
or
bound
movsb
adc
mov
ss
dec
pop
jp
dec
mov
mov
js
xchg
xor
movsb
es
add
pop
into
mov
fisttpl
shll
rolb
mov
in
dec
div
add
jnp
hlt
test
xor
mov
cmp
cmp
pop
xor
jecxz
test
mov
cmpsb
inc
mov
fnsave
pop
and
outsb
fnsave
and
adc
std
xchg
lcall
loopne
rolb
sti
add
push
inc
sub
dec
xchg
out
popa
or
mov
cmp
and
lods
das
das
add
xchg
mov
jp
xchg
cmp
and
xor
testb
je
add
andl
fucomp
push
inc
mov
lahf
icebp
ss
pop
add
mov
ret
and
aam
mov
pusha
outsl
lcall
dec
jno
js
sbb
cmpsb
addb
mov
jnp
xor
jg
push
mov
push
popa
adc
and
cltd
jmp
and
cmp
clc
pop
inc
shl
mov
notl
cmpsb
add
push
sub
lret
xor
rolb
int3
test
or
orl
cld
in
xor
arpl
in
cli
fs
push
movsl
lea
jmp
rcrl
nop
inc
repnz
cmc
insb
ljmp
cwtl
lods
ja
push
or
data16
cmpsb
mov
cmp
jle
stos
imul
push
dec
inc
mov
daa
inc
hlt
scas
roll
jnp
inc
adc
xchg
aad
shlb
jmp
dec
ret
es
stos
cmp
pusha
movsl
mov
mov
add
push
mov
push
cmp
jno
sub
ljmp
or
mov
push
fcomip
xor
cli
pop
sbbl
lods
add
jae
dec
inc
in
pop
std
cmp
stos
mov
mov
or
cmp
mov
inc
sub
and
in
mov
xchg
cwtl
lea
loop
scas
inc
enter
ds
pop
lea
jns
cmp
leave
out
out
stos
dec
ss
dec
mov
push
xchg
lcall
cmpb
mov
and
sub
insb
inc
pop
add
push
adc
pop
push
jge
mov
or
arpl
jg
movsb
stc
inc
mov
ja
mov
push
cwtl
jb
aad
add
xor
in
mov
insl
mov
xchg
cs
sub
adc
pop
xor
mov
adc
xchg
and
sub
ds
push
imul
in
icebp
inc
movsb
popa
rcrl
lret
sub
xchg
dec
or
ja
fwait
and
jle
das
mov
fldcw
std
pop
jne
sub
ret
and
pop
jae
dec
push
addr16
mov
daa
and
cmpsl
sbb
and
xchg
pop
dec
fcmovnbe
shll
jmp
xchg
pushf
cs
push
mov
xchg
ret
out
xor
lock
in
mov
fnstenv
mov
rolb
lock
shrb
push
pop
sub
movsb
dec
stos
mov
rorb
in
or
push
adc
outsl
cmp
mov
cmp
movsl
cwtl
sub
in
ror
cmpl
mov
and
fidivs
outsb
les
sarl
test
sub
xchg
push
lea
xchg
aam
inc
sub
jmp
std
and
pop
cmpsb
jmp
ret
loop
pusha
jno
cwtl
push
movzbl
cmp
decb
adc
das
icebp
mov
and
jmp
sub
cmp
mov
mov
cmc
mov
pop
jno
sbb
movsb
mov
test
push
notb
sbb
mov
push
xchg
mov
aam
xor
mov
cli
imul
imul
ret
dec
fcmovb
sub
mov
es
imul
test
rcll
pop
ficoms
loope
mov
loopne
cmp
lret
xor
inc
sub
inc
mov
sbb
adcl
sub
leave
notl
sbb
call
nop
push
std
fdiv
sub
aam
jl
in
xor
rcrb
mov
insb
jge
adcb
aam
push
fcmovnu
stos
xchg
cs
xchg
push
nop
add
into
cmp
cmpsl
xchg
es
and
sub
popf
dec
mov
cltd
mov
mov
mov
out
xchg
mov
mov
frstor
mov
inc
lahf
mov
sbb
daa
repnz
push
sbb
in
lret
dec
int
ljmp
sti
rcr
adc
divb
pop
in
add
es
nop
aad
fldcw
out
int
dec
jmp
mov
fiadds
or
sub
xchg
fprem
dec
mov
dec
mov
in
imul
cmp
pop
xchg
xchg
ds
dec
xchg
dec
pop
in
jmp
aas
fstpl
or
shlb
jmp
pusha
clc
jecxz
je
mov
dec
mov
jp
pop
popa
std
add
cmp
dec
adc
mov
loop
in
decl
std
leave
cltd
cmp
pop
icebp
out
mov
enter
lock
jg
iret
sub
into
enter
out
fmull
out
mov
scas
jp
pop
add
mov
ss
sbb
out
enter
adc
push
push
subb
push
lock
pop
and
aaa
mov
or
or
dec
inc
mov
in
mov
mov
push
dec
pop
test
rcr
add
lea
push
cmc
bound
repz
sarb
test
loope
lahf
data16
pop
lcall
js
sub
stos
push
inc
and
xchg
inc
pop
js
out
aas
adc
movl
in
test
and
pop
stos
adc
pop
pop
mov
adc
popf
inc
pushaw
cmpl
mov
mov
arpl
add
bound
stos
fs
mov
enter
pop
lret
fsubrl
leave
xor
stos
mov
xor
imul
add
daa
dec
rcr
cmp
mov
dec
scas
inc
aam
pop
jbe
test
push
mov
mov
cmc
insb
mov
repnz
pushf
mov
gs
pop
push
sub
fdiv
fcompl
mov
push
pop
cmp
xchg
fdivs
dec
add
ss
sbb
sub
inc
jns
cmp
mov
stos
mov
in
jb
dec
jae
pushf
xor
or
cmp
movsb
push
add
movsl
daa
cwtl
adc
int
cltd
add
in
rcll
dec
add
sub
test
ss
mov
push
aaa
adc
adc
inc
divb
mov
dec
mov
pop
loopne
add
mov
sub
jb
jmp
dec
call
fdivrp
iret
xor
call
sub
outsb
sub
into
outsl
mov
rolb
cs
and
sbb
sub
es
enter
mov
fmuls
add
fdiv
hlt
inc
xor
jecxz
decb
cmp
fcomps
aaa
sti
sbb
mov
push
add
and
sbb
adc
sub
les
mov
out
mov
xor
mov
cmp
fdivp
lods
ljmpw
lret
ss
int
xchg
rcrb
sub
and
fs
inc
test
and
sub
lods
rcrl
sarl
cmc
shl
mov
inc
push
cwtl
movsb
fnstsw
popa
data16
repnz
inc
jge
divl
xor
xor
add
mov
dec
ljmp
sti
pop
inc
shrl
pop
rorb
out
push
out
adc
mov
test
mov
inc
imul
and
mov
and
in
mov
aaa
xchg
ss
in
sub
mov
and
cmp
ficomps
inc
mul
mov
inc
or
movq
or
int3
mov
jge
pop
lahf
loopne
xor
cmp
cltd
add
fcmovu
cmpsl
sbb
test
and
adc
clc
mov
fs
ja
pop
lret
inc
adc
add
fcompl
movb
loopne
jb
lods
push
stc
sti
pop
sbb
mov
je
dec
jl
mov
pusha
inc
aaa
test
pop
mov
out
inc
lret
push
add
jecxz
xchg
mov
cmp
jnp
icebp
aam
xchg
push
sub
xchg
add
je
cmpl
cmovle
rolb
jnp
orb
iret
cmpsb
pop
cmpsl
jno
xor
enter
movsl
xchg
inc
xchg
div
and
sub
movsb
xchg
and
cs
sub
push
pop
mov
movsl
jle
inc
xchg
int
outsl
jae
add
mov
test
xor
jne
dec
repz
lea
mov
adc
int
daa
mov
sub
push
xchg
mov
sub
adc
filds
sbb
daa
sbb
pop
mov
adc
pop
gs
cli
dec
push
cli
or
or
add
fistl
lahf
pushl
xor
nop
scas
and
xor
movb
in
dec
data16
pop
add
push
mov
lods
jne
xchg
repz
push
test
jnp
fimuls
aam
or
sub
fisubrs
push
dec
adc
xchg
cltd
bound
movsb
aaa
jg
push
adc
pushf
adc
xor
ret
xchg
jae
jle
pushf
mov
movsb
mov
cmc
icebp
ds
clc
push
jo
dec
pop
mulps
mov
aad
ja
xlat
mov
xchg
loope
jle
dec
jae
cmp
stos
scas
fidivl
jnp
dec
push
inc
cmp
ja
cmp
icebp
jle
stos
push
sub
not
test
mov
mov
jecxz
gs
insl
push
sbb
inc
and
nop
push
add
insb
or
add
in
mov
add
push
jle
into
fcomps
mulb
cli
add
std
ss
aam
add
sub
pop
lahf
and
shlb
adc
and
cmp
sub
cmpsl
or
outsl
jo
aam
or
stos
mov
xchg
inc
push
dec
gs
mov
lea
scas
dec
mov
or
fistps
in
mov
inc
xor
cwtl
cmp
inc
movsb
lret
inc
cmpsl
fsubrs
je
ljmp
lock
aad
mov
popf
or
div
iret
or
popf
lahf
mov
add
outsl
bound
jne
into
incl
ljmp
mov
mov
mov
dec
xor
hlt
jae
sbb
xchg
movsb
xchg
popf
pushf
xor
cmp
pop
mov
dec
nop
test
mov
rcrl
sub
cld
xor
data16
mov
xchg
cmpsb
out
adc
xchg
test
mov
add
mov
or
lcall
pop
fucomi
ja
inc
cmp
pop
xchg
xchg
ficomps
sarl
test
out
js
pop
negb
in
xchg
movsl
dec
in
ficomps
and
add
and
cmpl
inc
push
mov
push
lahf
mov
aaa
mov
addr16
shll
mov
scas
sbb
mov
outsb
mov
popa
dec
mov
xor
fnstcw
jbe
call
sbb
push
jo
xchg
dec
mov
push
adcb
sbb
jmp
lret
push
push
push
and
mov
mov
xchg
mov
sbb
lods
push
test
cmp
mov
sbb
jp
pop
and
xchg
sub
sbb
test
add
repz
push
rolb
pusha
out
mov
fwait
sbb
aaa
cmp
and
cmpsl
pusha
pusha
imull
fnsave
int3
and
sbb
imul
ds
jno
insl
lcall
xchg
outsb
iret
xchg
sbb
lcall
in
aas
cmc
inc
js
mov
lret
inc
enter
inc
xchg
fisubl
cltd
dec
stc
gs
inc
cmc
aas
cmc
xchg
push
jo
test
or
add
mov
dec
nop
mov
in
xor
dec
ret
jbe
mov
mov
jnp
xchg
push
in
arpl
xchg
dec
hlt
insb
fcompl
cli
aam
xchg
fcmovu
sahf
inc
add
add
add
orb
data16
mov
js
icebp
je
mov
push
pusha
xor
sahf
int3
mov
out
add
adc
shlb
subl
popl
stos
lock
mov
push
cmp
je
test
into
or
es
fcoml
imul
pushf
cs
sub
fwait
icebp
in
jns
ljmp
or
sahf
inc
in
inc
mov
mov
mov
pushl
sub
cmp
mov
pusha
add
inc
mov
dec
jmp
and
add
push
push
dec
xchg
into
mov
push
pop
into
mov
popf
push
test
xlat
and
and
jne
inc
jle
imul
loopne
jecxz
outsb
mov
pop
adc
sbbb
jl
mov
xor
cmpsl
pop
call
sbbl
pop
filds
out
pusha
in
mov
cmp
mov
in
push
mov
mov
dec
cmp
xchg
xor
xor
icebp
imulb
add
mov
adc
sub
xchg
js
fwait
cld
or
lock
clc
jl
les
leave
leave
enter
cmp
sbb
rclb
xchg
iret
test
js
xchg
inc
sbb
sub
mov
sbb
xor
stc
mov
push
into
leave
and
cmpsl
mov
in
add
daa
sbbb
orl
sbb
and
mov
and
mov
and
pop
clc
cmp
aaa
cs
cmp
jg
or
cmp
aaa
push
sub
fcomps
jmp
test
mov
dec
inc
mov
stos
mov
in
insb
jns
and
lret
iret
dec
cmp
or
outsl
mov
xchg
gs
nop
xchg
jecxz
fs
xor
in
sub
add
fwait
stc
mov
insb
out
loope
cmp
cmp
inc
rclb
push
repnz
and
pop
cs
inc
dec
xchg
mov
leave
stos
add
add
daa
and
imul
stos
inc
mov
or
scas
xor
bound
pop
lods
insl
mov
push
dec
mov
mov
shll
daa
xchg
dec
and
fisttps
pop
or
mov
fsubr
sub
loopne
push
shll
add
outsb
mov
jno
xor
and
xor
repz
ficomps
jo
pop
add
jg
add
push
pop
clc
add
mov
pop
push
gs
and
fstpl
push
mov
jmp
dec
fcomip
ljmp
dec
pop
bnd
test
mov
dec
push
movsl
or
ds
xor
shll
dec
push
and
sti
mov
jb
or
sub
and
int
iret
inc
ret
mov
cmp
sahf
inc
clc
stos
cmp
add
and
loope
test
mov
or
cmp
push
xor
scas
jge
sbb
mov
mov
fnop
fwait
lahf
cmpsb
lahf
mov
add
add
push
imull
rorb
addr16
pop
outsb
xor
xor
and
subb
cmpsb
enter
fwait
loopne
push
clc
addr16
sub
sbb
pusha
adc
push
outsl
sbb
dec
in
jno
stos
or
mov
xor
pop
sub
mov
sbb
xor
cmp
jge
pop
ljmp
push
repnz
sub
pop
ja
leave
push
inc
jl
lret
xor
jp
loope
xchg
xchg
fs
test
jg
xor
inc
push
pop
sub
xchg
aam
gs
or
int
add
enter
in
mov
in
xchg
mov
cmp
out
subl
aam
aam
adc
dec
adc
insl
sbb
lahf
das
fld
les
loop,pn
or
call
movsl
mov
sub
adcb
dec
push
cltd
jbe
cmp
pop
sub
and
jo
adc
xchg
sbb
pushl
int
fisttpll
cltd
mov
adc
nop
mov
dec
test
out
rorl
xchg
xchg
push
push
pop
lcall
push
xor
lahf
aaa
mov
ret
push
hlt
pop
mov
mov
scas
in
lea
ret
mov
sbb
inc
mov
xchg
pop
push
imul
mov
pushf
addb
test
xor
and
scas
push
cmp
adc
cmp
and
xchg
test
lds
stos
aas
pop
mov
sub
push
mov
and
xor
and
or
stos
pop
xchg
cli
sub
enter
xor
cmpsb
lods
fldenv
test
aam
mov
roll
cmp
pushf
sarb
mov
inc
push
mov
test
gs
mov
hlt
rorb
mov
push
or
push
jp
aam
lea
dec
push
adc
addr16
sbb
pushf
in
jl
fmulp
add
sbb
and
mov
jbe
lcall
mov
repz
push
into
testl
mov
mov
lret
out
stos
repnz
call
mov
movsl
subb
sub
add
insl
mov
mov
sbb
inc
daa
fnsave
icebp
jp
dec
and
fsubr
in
rorl
lret
pop
fsubl
xor
cmp
or
add
dec
pop
pop
mov
jns
jno
xorl
iret
outsb
push
out
dec
push
push
jl
shrl
out
mov
adc
and
add
mov
push
adc
lcall
inc
jae
lahf
pop
lds
dec
stos
mov
stos
mov
push
pop
inc
mov
test
clc
mov
ljmp
sbb
or
ss
in
shll
out
dec
pmulhw
pop
loope
inc
pop
sbb
pop
pop
mov
rcrl
push
iret
adc
cmp
int3
cmp
cli
scas
mov
mov
loope
ss
xor
or
adc
enter
ss
out
mov
adc
int3
lock
and
test
push
xor
jo
or
sub
in
repnz
inc
sbb
hlt
shrb
push
les
push
jo
or
aas
and
leave
cmp
testb
subb
aad
mov
xchg
push
orb
mov
inc
mov
inc
dec
jp
push
lea
movsl
in
push
and
into
in
lods
xchg
inc
add
daa
mov
shl
outsl
jp
sub
add
sbb
push
ret
fs
dec
scas
outsb
jno
into
dec
or
std
fidivrl
divb
jecxz
add
mov
in
dec
or
aaa
push
not
pop
clc
mov
jno
leave
jne
jbe
dec
cmp
fistpl
in
xor
fldt
pop
jl
in
ljmp
bound
sbb
xchg
icebp
pop
jg
mov
push
mov
sahf
out
push
push
or
out
dec
cmp
jo
sbb
xchg
xor
jge
leave
stos
cmp
repnz
loope
cmp
arpl
xchg
xchg
sbb
imul
push
cmp
out
les
nop
mov
or
mov
fsts
mov
pop
fldcw
cmp
adc
jae
mov
cmpsb
aad
std
and
jg
lcall
gs
pop
rcll
cmpsb
jb
loop
sbb
fldenv
ljmp
mov
fstpl
js
mov
jl
popf
pushf
repnz
xchg
adc
ficomps
xchg
jecxz
sub
push
stos
adc
push
pop
xor
sub
movsl
fisttpll
shrb
or
test
adc
push
push
jge
sub
and
jmp
scas
call
cmpsl
sbb
inc
sbb
ret
push
adc
adc
sti
lret
jae
mov
add
adc
add
dec
int3
pop
cmp
lcall
dec
ss
mov
push
xchg
sub
filds
clc
sub
sbb
arpl
or
ljmp
add
or
in
in
xchg
or
push
add
inc
ret
fwait
std
lods
mov
sbb
cmc
push
addr16
es
sarb
mov
test
cmpsl
ret
mov
les
popa
test
xchg
adc
fimuls
out
mov
mov
pusha
pop
je
or
loope
push
sbb
or
xchg
sub
mov
adc
push
push
and
push
fcmove
insl
mov
xchg
jg
mov
fnstenv
jne
add
pushf
add
int
pop
mov
dec
or
push
cmpsl
push
aas
mov
push
ljmp
movl
je
push
not
mov
aam
sbb
mov
and
sub
or
rolb
sarl
dec
jmp
add
jo
outsl
aam
sub
and
xor
repz
fistps
scas
or
pop
in
pop
mov
daa
mov
ljmp
pusha
xchg
pop
dec
or
push
mov
push
lods
dec
lahf
fimull
test
jle
loope
jbe
push
mov
in
rolb
jecxz
cmpsl
dec
cld
fs
sbb
cld
dec
enter
imul
ret
sti
aam
lds
movsl
adc
lea
inc
xlat
mov
popa
mov
push
inc
inc
inc
jmp
aaa
out
movsl
shll
imul
xor
pop
jns
lea
mov
mov
out
pop
nop
out
fcmove
mov
xor
jge
ljmp
ret
sbb
and
sqrtps
daa
sub
cmpsb
lods
mov
loop
dec
mov
ja
and
mov
fwait
pop
push
movsl
xchg
lods
mov
cmp
into
push
mov
pop
loope
add
pop
dec
into
jo
mov
enter
shl
and
cltd
pop
stos
mov
pop
xchg
sbb
shl
fcmovne
sub
in
push
fldt
mov
dec
add
xor
pop
jbe
rol
rorb
outsb
cmp
lods
inc
adc
push
dec
xchg
movl
mov
addl
jno
out
or
subl
adc
daa
loop
data16
data16
out
mov
jg
loope
jb
sbb
mov
cmp
cmp
push
mov
xchg
cli
lcall
mov
call
jmp
push
out
push
gs
lahf
and
mov
test
mov
mov
loopne
push
sub
insl
sbb
testb
aas
test
sub
mov
fdivrs
inc
xor
mov
pop
sbb
sbb
pop
sub
int
or
push
cmc
add
leave
dec
mov
and
in
or
shl
sahf
fcoml
dec
mov
mov
int
les
adc
jb
je
jle
xor
rcr
sub
subl
sub
mov
cmp
dec
sbb
popf
lea
mov
cmc
push
je
pop
js
std
insl
fiaddl
inc
adcl
popa
adc
movsb
add
pop
filds
cs
std
mov
inc
addr16
es
dec
or
int
sbb
xchg
and
jp
or
xor
mov
jge
jmp
mov
ret
add
lcall
cmp
jbe
mov
mov
add
inc
dec
mov
jle
scas
push
mov
icebp
add
js
push
in
sahf
test
roll
mov
jle
mov
scas
shrb
jg
jns
mov
inc
pop
pop
jne
jbe
pop
ljmp
cmpsl
add
pop
shll
movb
ljmp
repnz
xchg
mov
insl
pushf
leave
and
dec
jb
in
rolw
lret
jne
int
lret
mov
mov
inc
mov
mov
mov
xor
inc
add
shlb
test
je
lods
cmp
pop
cltd
jle
push
fwait
std
mov
xor
pop
rcrb
in
pushf
shr
mov
leave
loope
cs
pop
lahf
lods
xor
les
sub
and
or
cmp
clc
mov
pop
add
sub
jmp
cmp
xchg
adcb
mov
jl
jle
in
roll
jns
sub
fs
shl
mov
out
xchg
sub
jge
push
mov
sbb
push
scas
aas
xchg
pop
loope
mov
and
loop
adc
and
out
int
enter
test
loop
cmp
inc
test
sbb
sahf
mov
xchg
lods
mov
std
push
movsl
xlat
fs
xchg
lds
mov
pop
and
inc
rcl
sti
fs
or
aas
dec
gs
xchg
adc
mov
lock
outsb
xchg
cmp
inc
and
adcb
sar
sub
add
clc
loope
std
xor
sub
repnz
mov
movsl
repnz
push
test
sub
test
idiv
mov
push
xor
jo
xor
mov
int
pop
ficompl
jbe
inc
add
push
loope
add
jbe
enter
cmp
adc
add
xor
imul
dec
cmp
cmc
add
ljmp
mov
jo
scas
jl
cmp
inc
ss
and
popa
scas
xchg
adc
loope
jno
loopne
mov
and
aam
xchg
lods
sub
sbb
sbb
jmp
ds
dec
call
sub
mov
sub
jb
pop
insb
pop
and
mov
mov
out
int3
sbbl
rorb
pop
das
xchg
push
pop
popf
lcall
inc
xchg
adc
jle
pop
push
push
inc
jl
cmp
jae
jbe
xchg
dec
scas
or
or
test
cld
fidivl
jno
pop
dec
pop
and
lret
xor
insl
int3
cmc
inc
sbb
and
jmp
iret
sarb
rorb
xorb
ss
fs
inc
jns
xor
mov
fstl
je
addb
cmpsl
xchg
mov
ja
jo
mov
shll
lret
jecxz
mov
sahf
shrb
push
push
jbe
mov
xor
xchg
out
pop
rol
mov
lahf
jns
xchg
outsl
dec
and
mov
xchg
mov
xor
fiaddl
fidivrl
into
push
adc
inc
sahf
arpl
scas
mov
add
test
fsubs
jg
out
dec
aam
sub
inc
shll
lock
mov
dec
call
ja
xchg
sti
sarl
jecxz
mov
add
scas
jl
jo
jns
jecxz
es
cs
ficoml
test
adcb
and
xchg
clc
jb
inc
int
jo
cmp
repz
add
sub
lea
push
or
pushf
pushf
les
cmp
cmp
pop
loope
push
jl
push
add
aad
es
fstpt
loopne
ds
lea
fistps
xor
jmp
and
fcmovne
mov
mov
xor
mov
jl
adc
jge
push
dec
imul
adc
or
shrl
test
insb
jns
or
cmc
sub
xlat
arpl
or
xchg
jb
outsb
rcrb
push
mov
cmpb
fcmovb
into
jno
push
jns
adc
inc
dec
mov
cld
add
push
or
lods
mov
mov
adc
jg
or
lret
hlt
imul
nop
push
outsl
push
push
mov
xor
dec
aaa
push
pushf
scas
ss
rorb
sub
push
pusha
and
aam
cmpsl
mov
int
mov
mov
adc
movsl
fcomip
sbb
testb
mov
pushf
pop
cmp
mov
gs
lahf
mov
mov
mov
cld
js
or
or
jns
push
scas
mov
cs
in
popa
pop
mov
add
mov
sbb
dec
std
and
pusha
ds
cmc
add
cmp
and
mov
call
xor
inc
outsb
out
jmp
daa
mov
outsb
enter
dec
lret
jl
push
or
sub
ss
out
hlt
mov
pushf
mov
hlt
test
sbb
jae
mov
sbb
imull
pop
test
push
iret
pop
sub
jecxz
jp
movsb
sbbb
imul
mov
jo
daa
lahf
test
xchg
movsl
pop
lods
rolb
dec
nop
insb
mov
popf
xor
mov
mov
aad
add
jo
sbb
cmp
and
add
pop
cli
xor
stos
outsb
shl
push
es
dec
stos
stc
aam
mov
xchg
push
mov
sbb
daa
repz
xor
fucomi
sbb
jbe
pop
fmul
movb
movsl
jg
push
push
popa
jmp
or
lock
adc
push
pop
lcall
ret
cld
cmpsb
mov
pushf
pop
mov
or
push
mov
mov
movsl
xor
cmp
scas
jb
mov
xor
test
shr
fimull
addr16
inc
cmp
sub
push
rcrl
and
sbb
pop
mov
mov
jno
into
mov
dec
jo
aad
xchg
pop
sub
and
lods
mov
fldenv
xchg
out
bound
pop
jnp
subb
inc
push
sub
push
push
lret
inc
dec
test
mov
jle
aad
or
das
data16
addr16
insb
xor
out
lods
xor
pushf
fsts
iret
xchg
mov
xchg
out
inc
fisubs
xchg
push
je
push
dec
xor
mov
jno
pusha
jmp
jbe
add
push
pop
movsl
xchg
cmc
addr16
jecxz
xchg
sbb
adc
dec
inc
mov
shlb
xchg
cmpsb
adc
insb
lcall
cmpsl
xchg
cs
into
push
out
mov
inc
sbb
mov
int3
cmp
stc
lods
xchg
test
lods
data16
adc
adc
popf
fwait
out
mov
xchg
int
dec
mov
data16
pop
cmpsb
dec
jmp
mov
push
ficomps
jbe
xor
fwait
jne
push
icebp
cmp
arpl
ror
or
es
or
pop
pop
jne
shlb
xor
inc
nop
daa
cmc
jg
inc
pop
shl
out
xlat
ja
pop
das
iret
ds
cltd
push
data16
fdivl
icebp
aam
divb
xchg
ror
fdivrl
insl
inc
daa
dec
inc
add
sbb
dec
cmc
mov
mov
inc
mov
push
hlt
outsb
setp
jae
dec
les
iret
out
jae
dec
iret
mov
push
push
mov
cmp
xor
leave
add
loopne
rorl
je
rcr
mov
add
in
mov
xor
shll
mov
jo
aad
and
sub
cmpb
mov
std
out
cmp
or
lods
push
or
cwtl
scas
test
jle
mov
imulb
push
ficoml
push
mov
icebp
adc
repnz
xor
fwait
sbb
pop
leave
jge
mov
ljmp
xchg
ljmp
enter
ffreep
adc
frstors
outsl
popa
cmpsl
or
cmpsl
js
shll
xchg
cmp
std
leave
ret
mov
xchg
pop
jne
sub
pop
movsl
int3
outsb
test
stos
and
pop
int
fists
mov
shrl
sub
shll
dec
js
and
xor
xchg
jae
cwtl
call
xchg
dec
fdivrp
icebp
mov
nop
push
sub
enter
fdivr
xchg
sub
sub
dec
jl
jb
xor
xchg
inc
fstps
xor
fs
mov
inc
add
sub
in
cmp
or
mov
into
mov
xchg
addl
and
test
arpl
add
das
arpl
cld
jle
fbstp
jbe
dec
fildl
push
push
xor
sar
or
xor
pop
stc
add
ljmp
aam
push
xchg
mov
das
adc
and
adc
jns
aam
or
das
add
out
int
leave
sub
mov
inc
insb
inc
pushf
in
add
jg
add
ret
cmc
fdivr
test
dec
fstl
mulb
add
add
mov
out
jl
mul
or
shlb
lcall
int
rcrb
push
cs
inc
sub
aam
je
and
insb
push
filds
es
std
jl
cmp
movsb
in
fisubs
xlat
sub
lcall
push
in
push
frstor
testl
je
xor
xchg
push
shrb
lds
lret
push
jne
adc
cmp
aaa
insb
jecxz
popf
sbb
dec
aaa
lret
pop
cmp
test
mov
push
into
cmpl
fldt
mov
add
xchg
test
add
js
test
divb
sub
cmp
je
jecxz
fdivrs
xchg
pop
cmpl
in
imul
stos
aas
out
decb
inc
mov
nop
mov
push
mov
out
lret
jmp
daa
popf
inc
pop
loopne
test
iret
mov
andl
fistpll
pop
xchg
mov
popl
arpl
out
gs
lahf
pop
addr16
add
and
inc
cmp
out
imul
aaa
mov
sub
jo
push
fdivp
aaa
cltd
int3
add
mov
xor
and
daa
popa
inc
pop
cmpsb
mov
subl
aam
andl
add
sti
mov
popf
outsb
not
repz
das
mov
bound
pop
imul
dec
xor
mov
lret
dec
and
mov
push
push
push
cltd
ja
inc
and
loop
push
inc
andl
punpckldq
push
jno
mov
mov
push
xchg
mov
imul
data16
xor
gs
push
jmp
lret
stos
and
aam
add
lret
adc
lcall
cmc
mov
sbb
insl
scas
movsl
test
cmp
test
les
sahf
xchg
pop
js
jl
cmp
in
rolb
call
pop
enter
aas
add
insl
call
and
rcrl
mov
cs
mov
xlat
cmp
arpl
pop
dec
add
and
mov
insb
test
adc
mov
xlat
mov
test
inc
xor
cmc
aad
mov
imul
stos
adc
test
fsubrl
cmc
mov
mov
xchg
arpl
push
sbb
jmp
lods
std
dec
jle
mov
scas
mov
pop
sub
in
shll
cwtl
scas
xchg
lea
sti
popf
sahf
mov
test
jl
pop
mov
roll
adc
fwait
jnp
sub
mov
mov
pop
popf
mov
andb
sub
int3
jns
out
lock
xchg
into
lods
fstpl
or
cld
aad
sub
sahf
jle
imul
xchg
mov
sbb
daa
cmp
popa
hlt
and
movsl
pop
mov
js
cmp
int
repz
xchg
ds
fwait
test
sahf
out
std
insl
lods
mov
sti
xchg
stc
cmp
sub
pop
adc
mov
push
pop
rcll
xor
aam
subb
ret
sbb
fwait
push
mov
data16
push
mov
clc
adc
aam
scas
adc
lock
lods
pop
leave
fisttpll
aad
in
push
iret
adc
sarl
dec
shrb
fistl
dec
movsl
fwait
push
sbb
gs
mov
sub
out
or
pop
cmpsl
rclb
lahf
lcall
xchg
xchg
and
repz
adc
or
cmpsb
lods
mov
sarl
cmpb
jae
pop
pop
mov
cmp
inc
sbb
fsts
push
aad
fcom
mov
enter
add
sub
push
lds
add
mov
push
jecxz
jecxz
std
int
test
enter
clc
add
inc
and
jae
mov
clc
xor
or
arpl
cmpsl
movsl
jecxz
pop
enter
shlb
pop
sbb
and
out
pop
mov
push
sbb
inc
stc
xchg
orb
mov
imul
outsl
dec
loope
daa
jmp
dec
and
jle
pushf
mov
outsb
push
pop
into
xchg
stc
scas
cmc
into
xchg
rol
out
testl
divb
sbb
fnstenv
jmp
call
repz
pusha
call
mov
jb
mov
sbb
and
ss
sbb
push
mov
mov
mov
or
aam
jns
test
cmpsl
test
cmp
icebp
leave
bound
repnz
cmc
push
jmp
cmpsl
mov
inc
cmp
mov
into
dec
popf
pop
push
jae
loop
into
mov
xchg
cmp
cmpsb
jne
inc
lock
je
cmc
inc
xchg
pop
idivl
pop
loop
fcmovnu
pop
push
in
cmpsl
xor
fs
lock
jle
cld
mov
fsubrs
dec
cmpsb
mov
xor
xchg
jecxz
daa
rdpmc
mov
fdiv
pop
mov
imul
pop
dec
repz
popf
mov
fstps
mov
loope
jg
mov
jne
ret
insb
mov
addl
mov
or
mov
jb
jne
adc
insb
aaa
test
mov
fwait
jnp
inc
mov
scas
data16
popa
and
ds
cmp
cmpsb
or
xor
sbb
mov
sub
insl
movsb
jno
push
ja
pop
cwtl
sbb
dec
sbb
data16
inc
lods
jae
stos
mov
push
in
add
mov
mov
testl
imul
test
fadds
mov
push
mov
js
js
jnp
inc
and
or
add
sti
orl
fcomps
addr16
mov
dec
pop
inc
test
xlat
dec
gs
lods
arpl
pop
xor
sbb
mov
sub
push
shlb
sti
push
push
jmp
or
adc
jo
sub
ja
sbb
divb
mov
xchg
sar
jnp
adc
push
lds
adc
add
cmp
cwtl
and
mov
xorb
das
and
packssdw
xlat
fsts
pop
out
shr
adc
es
icebp
lods
outsb
dec
pop
or
pop
dec
mov
push
add
cmpsb
inc
lods
cmp
adc
add
out
repz
and
dec
in
add
pop
push
lods
rorb
sub
mov
or
cmpsb
add
daa
xchg
mov
mov
jmp
inc
jae
pushf
sbb
xchg
or
pop
ret
push
scas
imul
mov
pushf
cs
xchg
jge
add
mov
idivb
or
pop
mov
ljmp
insb
or
adc
cs
sbb
out
xor
mov
xor
sub
sub
in
cld
sbb
sahf
aad
push
out
mov
xor
inc
sub
stos
int
loope
sub
les
sub
adcl
ja
cmp
inc
shll
and
mov
cmp
xlat
or
dec
repz
gs
xor
les
dec
daa
push
test
mull
loope
lods
sub
jle
xlat
scas
jnp
mov
and
mov
mov
cwtl
lahf
jecxz
sbb
int
int3
pop
in
popf
push
xchg
or
sbb
adc
xor
cli
dec
lds
xchg
adcb
and
sub
mov
test
nop
mov
mov
xchg
les
pop
mov
decl
and
inc
popf
xor
pop
cmp
jmp
fldl2t
add
mov
push
adc
pop
xchg
insb
cld
std
mov
sti
cmpsb
push
xor
jge
and
rorl
adc
int
lods
cli
repz
shrl
or
movsb
insl
gs
sub
cmc
lcall
into
push
rolb
in
jp
insb
decb
jecxz
insl
aaa
sbb
test
and
std
add
nop
inc
xchg
xor
jmp
add
sub
pop
aam
imul
pusha
sub
ds
mov
push
add
mov
test
dec
gs
mov
pushf
or
add
stc
xlat
lahf
or
jle
mov
inc
cltd
aad
adc
push
xchg
jecxz
es
sub
das
mov
cmpsb
push
xor
fbstp
pop
inc
mov
adc
cmp
pop
hlt
mov
xchg
shll
inc
jns
inc
push
adcl
cwtl
scas
fwait
in
cmp
scas
push
jb
in
out
mov
push
iret
cwtd
and
jae
aam
mov
xchg
ficoml
pusha
daa
js
rorl
scas
fs
test
inc
out
insl
push
and
enter
sti
imul
jl
mov
xchg
fiadds
in
mov
push
dec
push
js
mov
mov
and
andb
sub
flds
adc
movl
inc
mov
inc
mov
rcl
adc
cmp
pop
and
aaa
pop
repnz
lock
sti
add
mov
pop
scas
adc
outsb
lcall
pop
inc
mov
inc
jp
aaa
dec
fdivs
test
scas
test
sbb
jmp
fldenv
faddl
out
or
rclb
fisttpll
push
ja
pushf
repnz
int3
mov
fildl
out
add
xchg
mov
xorl
outsb
in
ss
mov
xchg
rcl
sbb
stos
dec
ret
push
lcall
xchg
fisubrs
mov
dec
cmp
add
xchg
xchg
nop
and
mov
xor
push
ret
outsl
and
lcall
push
psrad
test
or
jns
pop
mov
push
enter
popa
sti
mov
dec
pop
fisubl
bswap
add
sub
push
push
jmp
cmp
jmp
daa
rorb
dec
push
mov
jmp
test
add
incl
sbb
ja
sbb
ja
out
roll
push
mov
ds
xchg
sub
sub
popw
addb
je
int3
js
mov
pop
mov
sbb
roll
push
sti
jb
push
pop
lret
inc
push
pop
pop
loopne
out
push
lods
das
dec
push
mov
mov
dec
rcrb
sbb
inc
xchg
push
pop
adc
xchg
faddl
xor
jbe
pop
adc
shr
lret
addr16
xor
adc
adcb
fistpll
pushf
loopne
and
mov
test
cmp
xchg
enter
pop
mov
and
mov
pop
sub
push
insb
fwait
movsb
mov
shll
gs
jle
or
lods
xor
cmc
lret
or
pop
pop
cmpsl
mov
push
loop
mov
cmp
pop
xchg
mov
ds
add
movsl
and
cmp
adc
mov
rcll
sbb
xor
mov
push
cmp
and
call
mov
inc
xchg
xchg
cmc
cmpsl
xchg
mov
fs
adcb
loope
ficoml
aaa
test
push
orb
dec
xchg
jb
add
jne
jmp
movsl
subb
test
sbb
ljmp
pop
jmp
pushf
ret
mov
and
stc
daa
and
orb
insl
in
jl
cmp
in
int
jno
pop
loop
sub
movsb
in
push
roll
aaa
sbbl
fiadds
adc
push
mov
dec
push
or
and
into
inc
push
cmpsl
cmp
cmp
or
push
lret
mov
add
pushf
out
fisttpll
test
mov
fstpl
or
jae
negl
sahf
pop
out
ljmp
jo
decb
dec
adc
idivl
cmc
fldl
ret
pop
push
xchg
dec
dec
jnp
push
aaa
jge
or
imul
pop
fstps
lret
dec
movsl
sub
pop
ficoml
outsb
mov
or
mov
iret
pop
xchg
push
pop
push
jle
lock
jmp
lcall
jb
pop
jecxz
jmp
fcompl
stc
or
and
jp
jmp
push
push
xor
bnd
test
in
xchg
mov
sbb
xlat
test
mov
and
dec
mov
cwtl
scas
fldl
lret
push
pop
in
jecxz
xor
repz
adc
fbld
adc
cli
inc
mov
or
std
xchg
jbe
and
shl
cwtl
mov
pop
pop
fucom
dec
imul
dec
out
xchg
in
in
imul
lea
jae
mov
push
xchg
xor
pop
push
fsub
scas
call
push
std
test
lock
and
pmaddwd
dec
loopne
sar
shlb
lret
mov
mov
sub
or
dec
js
lock
cmp
inc
add
pop
adc
xchg
clc
xor
or
test
test
das
outsb
sarb
clc
inc
in
loope
add
add
push
addr16
cli
js
mov
xchg
jbe
xchg
mov
and
out
test
andb
das
xchg
out
cmp
adc
lret
mov
pop
mov
loope
out
xchg
daa
mov
shl
repz
les
adcl
inc
loop
xchg
sbb
fs
fistps
leave
cmp
add
pop
add
or
lahf
notl
xor
ja
adc
hlt
inc
mov
adc
xor
cmpsl
xchg
test
out
sbbl
pop
xor
inc
cmp
mov
popf
push
movsb
into
fs
lods
sub
push
mov
push
push
xchg
out
call
cmp
scas
lods
jp
inc
test
es
inc
xchg
mov
adc
dec
inc
scas
push
rcr
and
imul
xor
sub
mov
repnz
es
dec
mov
loop
pop
sbb
dec
push
jmp
adc
cmp
pop
pushf
push
inc
mov
xchg
mov
and
and
jae,pn
mov
scas
and
jno
popa
repz
lret
arpl
push
xor
ficomps
test
jae
pop
aaa
xor
mov
push
mov
jne
scas
sahf
fldenv
mov
sarb
in
lea
push
xor
cmpsl
out
lahf
mov
insl
scas
sti
sbb
into
out
pop
out
xchg
mov
pop
aas
sbb
mov
dec
push
repz
mov
sub
dec
sbb
aam
xor
fdivrs
loope
shll
mov
adc
js
mov
cmpsl
subb
movsb
rcll
push
lret
ret
push
mov
pop
jae
stos
cmp
jle
hlt
or
enter
jne
lret
push
cmpsl
add
jmp
dec
mov
xchg
fistps
cs
clc
adc
in
sub
fld
arpl
mov
mov
cli
xchg
mov
push
pop
in
iret
cmpsl
fildl
cmc
or
sub
cmpsl
sub
js
cmpsl
cmc
fwait
sub
das
into
shll
inc
xor
in
fisubs
inc
daa
aas
lea
jp
out
sbb
mov
fwait
mov
dec
cltd
mov
arpl
nop
pushf
fwait
sahf
mov
idivl
sarl
in
rcrl
fidivs
add
aaa
sub
inc
mov
clc
aaa
mov
push
cmp
cmp
add
shll
insl
cmpsl
mov
push
push
movsl
mov
mov
cmp
clc
xor
mov
ds
jp
sub
cwtl
nop
sub
xchg
cwtl
rcrb
xlat
lahf
dec
jl
jge
gs
and
sub
pop
adc
testl
negb
iret
xchg
or
mov
insb
cwtl
js
fiaddl
cmp
or
adc
lds
clc
sar
test
xor
insl
mov
push
adc
pop
fcmovnb
xchg
jb
mov
test
cmp
pop
lock
xor
adc
enter
mov
push
or
cld
mov
clc
divb
aaa
test
mov
jbe
in
lahf
sbb
pop
xchg
rcrl
xchg
push
sbb
sbb
xor
lock
adc
andl
stc
dec
fstl
jo
sahf
icebp
stos
fxch
adc
xchg
xor
add
xchg
and
add
xor
xlat
js
adc
cld
mov
lods
mov
sub
mov
popa
fiadds
stos
insb
and
mov
clc
pushf
fwait
xchg
cld
clc
mov
ret
mov
adc
sbb
xor
je
lods
test
icebp
add
aas
out
jo
add
shrb
mov
scas
icebp
lods
lahf
fcoml
out
out
test
lea
inc
cmpsb
mov
int3
xchg
dec
or
push
inc
pop
cmp
adc
int3
int
or
sbb
mov
test
pop
inc
lods
pushl
push
ss
mov
ljmp
mov
mov
dec
sub
mov
pop
insl
aas
cld
xchg
mov
xor
stos
cmpsl
push
loope
lret
fstps
inc
xchg
adc
and
mov
push
adc
icebp
pop
cmc
xchg
cli
lret
xchg
paddsw
sbb
lcall
enter
inc
int3
lea
pop
push
jecxz
fcom
mov
rclb
fs
push
inc
xor
xor
mov
stos
jle
adc
sub
outsl
inc
xchg
addb
xchg
mov
fisubl
and
lods
cmp
fcomps
jle
sbb
mov
inc
xor
flds
movsl
lahf
xchg
out
loop
leave
std
movzwl
mov
fistpll
mov
fimuls
sbb
jo
mov
pop
mov
push
jp
pop
aad
mov
inc
cld
and
mov
stos
xor
mov
sub
add
add
sbbl
sarb
bound
xchg
or
mov
push
xchg
arpl
lea
outsl
jbe
and
pop
inc
add
insb
fistpll
rorb
adc
dec
mov
call
mov
fidivl
stos
dec
jnp
ret
stos
lcall
cmp
pop
mov
pop
dec
xchg
push
cmp
loopne
inc
arpl
jmp
loopne
pushf
mov
outsb
daa
rclb
sbb
cmpsl
xor
outsb
out
mov
movsb
sub
movsb
test
xchg
xchg
sbb
insl
scas
in
leave
cmp
fcmovbe
dec
push
imul
push
xchg
vmwrite
xchg
adc
mov
sbb
xchg
dec
rcrl
jae
popa
mov
insl
push
sub
mov
cwtl
jnp
mov
sub
mov
and
loop
enter
or
pop
xchg
lods
fwait
sub
sub
loope
push
test
xor
test
stos
xor
cld
and
test
mov
loope
add
clc
scas
xchg
nop
push
mull
sub
cld
daa
rol
aas
mov
shrl
or
fwait
jo
fisubrl
ja
lea
in
mul
and
ret
data16
pop
ret
xor
xchg
divb
test
xor
mov
xor
insl
cmp
cwtl
fldt
inc
ss
stos
fdivrs
xor
into
std
fcoml
popa
dec
in
or
dec
cli
xchg
ficoms
mov
adc
sub
pop
adc
and
sahf
ret
push
int3
mov
ret
in
movsl
xchg
add
loope
mov
shlb
adc
sub
jmp
enter
dec
popf
je
leave
ss
cld
mov
push
jecxz
mov
xchg
popa
pop
les
and
mov
xor
mov
add
pop
mov
lahf
or
es
sbb
mov
cmp
or
sub
sub
xchg
rorl
mov
roll
or
pop
cld
inc
push
cmp
jmp
pop
addb
mov
sub
xadd
pop
fldenv
outsb
sub
loope
sti
xlat
jle
call
mov
mov
ficoml
push
ffreep
adc
mov
and
or
fcompl
and
xlat
or
pop
and
int3
das
or
gs
adc
jnp
xor
lcall
subb
or
sti
fsub
xor
dec
insl
in
cmpsl
push
xor
outsb
popf
pop
shll
ficompl
fnstcw
mov
rcll
xchg
fsubp
cmp
test
or
inc
nop
cmpsl
add
in
cltd
xor
adc
je
xchg
cmpsb
idivb
ds
add
pushf
iret
lret
or
mov
lds
dec
sub
movsb
cmp
or
fistl
arpl
dec
push
shl
push
sbb
aas
js
add
mov
and
jp
lock
dec
lcall
mov
mov
les
or
pop
insl
std
cli
jp
mov
inc
stos
repnz
ds
mov
cmp
xchg
enter
sub
gs
mov
jae,pn
loopne
cld
pop
xchg
fdiv
jmp
fcomip
jecxz
cwtl
cmp
xor
dec
lods
add
je
fistpl
pop
inc
outsb
fs
add
xor
push
call
out
divl
scas
or
jo
insl
or
mov
sub
inc
pushf
lds
loopne
mov
adc
mov
sbb
punpckhwd
mov
mov
ret
push
insl
inc
out
inc
lret
fsubl
repnz
lea
jle
imul
outsb
push
outsl
rcr
xchg
cmp
popf
xchg
adc
sti
pop
leave
inc
mov
aas
mov
sub
lods
les
push
xchg
call
cltd
mov
xchg
repz
leave
outsl
dec
dec
jo
or
out
mov
mov
daa
lahf
inc
flds
mov
cmp
fwait
mov
cmp
pop
mov
xchg
or
add
jno
xor
xor
mov
push
sub
test
or
push
jl
add
push
xorl
leave
enter
sbb
xor
dec
insb
rol
pop
int3
pushf
dec
jle
add
cld
fstpl
mov
std
push
je
xchg
adc
cli
push
bound
mov
enter
pop
in
iret
xchg
mov
dec
shlb
push
push
mov
pop
push
xchg
dec
jns
add
ljmp
lahf
stc
lods
fidivrs
adc
and
or
cmc
in
in
jmp
push
lods
pop
pop
and
push
fcomps
push
fnsave
cmpsb
lret
add
clc
jns
cmp
or
jmp
add
add
mov
xor
mov
in
pop
pop
and
pop
test
xchg
andb
lret
and
xorl
fucom
mov
adc
pop
jns
sbb
pop
imulb
rcr
pop
inc
imul
movsl
rolb
mov
dec
mov
nop
add
loope
sbb
push
sbb
lahf
add
jb
int
bound
fs
adc
clc
test
mov
scas
aaa
or
ret
mov
jmp
add
imul
add
xor
jmp
iret
jl
mov
loope
rcr
les
jnp
pop
mov
dec
mov
mov
mov
ds
movsl
out
out
cs
xor
repz
inc
test
mov
pop
pop
mov
pop
jl
add
push
jbe
xor
pop
test
clc
in
mov
or
lods
sub
cmc
mov
nop
mov
adc
enter
clc
mov
pop
mov
or
xchg
pop
mov
popf
int
sbb
js
imul
aas
pop
fmulp
mov
dec
mov
add
mov
popa
repz
add
mov
xlat
xor
lret
sub
daa
cmp
leave
stos
pusha
popf
fsubrs
sbb
cwtl
dec
xchg
popa
movsl
cmp
dec
jno
mov
mov
sbb
pop
aas
nop
or
or
fcomps
gs
subl
sub
lret
test
jge
xor
jb
jg
push
and
lret
daa
lods
lcall
mov
mov
xchg
addr16
mov
push
mov
shll
fdivs
fdiv
mov
push
cmp
hlt
inc
xchg
rcll
mov
push
incl
sub
lret
aaa
pop
imul
push
int3
jo
cs
cmp
sbb
jl
and
sbbb
popf
push
out
sub
sbb
lock
lods
sub
inc
test
fmuls
sub
into
add
movsl
lock
push
dec
sbb
out
call
dec
incb
test
in
mov
cmp
add
jg
dec
pusha
push
clc
arpl
pop
mov
xchg
cmc
dec
jle
outsl
cwtl
data16
mov
cmpb
jge
push
xor
or
push
pop
add
inc
rol
pop
subb
adc
and
rolb
ret
jns
inc
std
mov
pushf
mov
xor
insl
push
push
lock
in
test
sbb
sub
leave
inc
sub
mov
mov
inc
faddl
sbb
addb
jle
add
mov
in
cwtl
test
ljmp
in
dec
lret
cwtl
and
mov
cld
add
adc
inc
addr16
subl
cmpsl
xchg
mov
cmc
inc
cltd
shl
lea
pop
rclb
imul
pop
mov
das
sub
scas
mov
and
gs
cs
or
sbb
mov
out
pusha
lcall
pop
pop
push
pop
mov
sub
std
arpl
add
push
sub
sahf
add
adc
lret
mov
roll
test
aas
pop
dec
out
test
popa
ss
jb
ss
jnp
push
sub
xchg
ret
mov
fimull
lods
add
hlt
xor
and
jb
add
lock
pop
jg
jecxz
rcrb
fld
sbb
jb
xorb
or
add
mov
mov
aad
aad
rorb
sahf
lret
insl
adc
ss
xorl
add
pop
push
xlat
inc
stos
push
outsl
jb
or
sti
js
inc
mov
rcll
jns
pop
lcall
and
push
add
popa
mov
mov
jno
xchg
nop
xchg
fldenv
lret
xlat
ljmp
shll
gs
cmp
mov
dec
in
out
push
addr16
les
xchg
xor
xchg
inc
ret
adc
or
xchg
push
jb
adc
pop
pop
lea
idivl
sbb
or
jb,pn
mov
xor
xchg
decb
and
in
enter
mov
xor
mov
mov
andb
adc
ljmp
dec
into
fdivl
insl
shrl
xor
out
mov
pop
pop
and
mov
xchg
das
scas
test
or
lock
jnp
cmp
ret
push
push
repz
cwtl
fisttpl
sub
adc
mov
sub
out
cmc
repnz
clc
hlt
cltd
jecxz
ret
imul
cmc
stos
pop
pause
pop
pushf
mov
loop
mov
jbe
nop
addr16
pop
xor
inc
cltd
dec
add
in
addr16
mov
xor
mov
lods
fnsave
ret
sub
cltd
jp
int3
roll
xchg
aad
outsb
pop
jmp
rolb
dec
ficoml
pusha
insl
and
sbb
fstpl
fsubrs
jge
adc
data16
pop
out
push
and
inc
dec
mov
call
ja
dec
push
gs
push
int3
out
adc
rol
out
adc
mov
add
dec
popa
lods
pop
inc
iret
popl
sahf
inc
mov
xchg
inc
scas
cmpsb
push
inc
cmp
and
aaa
add
out
adc
lret
inc
movsb
outsb
out
cld
sbb
icebp
adc
inc
das
mulb
sub
into
dec
jo
mov
sub
js
mov
mov
loope
pop
pushf
push
scas
sub
mov
sbb
jno
or
repz
dec
xchg
dec
notl
push
cmp
push
xchg
jge
fwait
cmp
dec
lcall
mov
or
pop
fiaddl
cmp
pop
push
mov
jle
test
or
xchg
mov
dec
les
lahf
sub
push
popf
mov
mov
test
idiv
shrb
icebp
mov
mov
dec
jmp
or
jmp
jno
stos
fldcw
cmp
dec
jne
bswap
popa
xor
push
lret
cmp
inc
outsb
cltd
mov
xlat
iret
sarb
and
mov
insl
fstpl
cmp
mov
divl
fucomi
cmpsb
icebp
arpl
call
dec
jne
mov
and
ret
sub
push
mov
xor
inc
iret
mov
scas
sbb
das
jns
pop
jp
cmp
mov
shl
scas
jmp
imul
cmp
pushf
add
xchg
jmp
aaa
stc
xor
xchg
sbb
or
in
sbb
xchg
pop
or
jae
ret
pop
fstpt
imul
inc
jbe
loop
fisubrl
mov
xchg
rolb
mov
sbb
adc
loope
pop
mov
push
fisubrl
lahf
dec
mov
and
bound
and
pop
push
xchg
xor
dec
fstps
stc
xchg
adc
mov
into
rclb
rol
cltd
sub
in
dec
or
cwtl
lret
cmpsb
ss
pop
xchg
stos
push
call
shlb
adc
xchg
addr16
sub
xchg
push
jo
inc
or
ds
fadds
adc
data16
call
shll
stos
adc
pop
jno
xor
cld
pop
xchg
movsb
inc
rcll
es
sbb
popf
or
xchg
push
jnp
test
jbe
mov
mov
mov
dec
pushf
mov
cs
adc
pop
subb
pop
aam
sahf
or
ds
or
jb
sti
pop
sbb
or
jno
mov
imulb
sbb
mov
pop
xchg
jno
loop
push
ja,pt
stc
es
cmp
pop
mov
insl
mov
mov
imul
ss
sbb
mov
pop
sahf
xchg
shll
jne
inc
std
mov
add
fidivs
cmp
inc
xchg
xchg
stos
hlt
addl
frstor
iret
movsl
outsb
insl
jecxz
movups
adc
lock
in
xchg
movsb
mov
rol
mov
adc
loop
jmp
ret
mov
js
pop
into
repz
js
fistl
ret
clc
decb
imul
dec
xchg
mov
jne
xchg
addr16
mov
and
outsb
scas
mov
push
je
mov
adc
fpatan
pop
dec
rclb
xchg
xor
cmp
repnz
sti
mov
pop
jle
inc
and
ficomps
jnp
outsl
test
adc
subb
outsl
leave
icebp
jno
das
sub
xchg
mov
mov
daa
jnp
adc
sub
rcr
fimull
sub
and
mov
pop
mov
cwtl
cli
mov
imul
repz
pop
ljmp
pusha
lods
xor
jg
sub
test
pop
outsl
ret
int
lcall
push
jo
sub
dec
test
andb
test
imul
adcb
je
adc
mov
aam
into
lods
pop
fmull
push
call
dec
cltd
ss
and
loope
cmp
daa
bound
je
ljmp
ret
ret
imul
insb
cld
popa
pop
and
cmp
in
push
cld
cmp
mov
mov
fmull
add
push
xchg
pop
sbb
pop
dec
add
lock
sbb
jo
and
pop
ss
pop
popf
shll
testb
insl
sahf
jb
adc
pop
popa
and
sub
orl
jo
pusha
dec
add
stc
inc
xor
push
dec
mov
mov
in
mov
cwtl
test
test
push
cmp
jg
divb
lods
push
lods
out
pusha
nop
loope
cmp
inc
jns
xor
shrl
jl
mov
xchg
fcmove
adc
mov
call
pop
pusha
jnp
popa
loopne
fdiv
sbb
pop
mov
cmc
lock
jecxz
in
jne
push
xchg
pop
xchg
je
btc
mov
jp
mov
movsl
pusha
fistps
mov
mov
jle
and
cltd
jnp
xchg
sbb
mov
std
pop
xchg
pop
push
xchg
fcmovne
mov
enter
aas
sbb
dec
outsl
aad
ljmp
insl
nop
inc
stos
test
notl
push
push
sbb
xorb
dec
and
out
inc
xchg
mov
dec
mov
adc
push
add
sub
xor
cmpsl
jmp
cmp
sbb
int3
ds
mov
and
sub
jp
inc
and
xlat
cmc
pop
out
adc
into
cmp
int
pushf
jmp
enter
mov
sahf
or
lock
dec
xchg
xchg
inc
dec
mov
ret
jbe
pop
add
mov
sbb
out
lods
lret
mov
sti
pop
cmpsl
scas
mov
in
or
adc
xchg
lock
dec
pop
mov
cld
pop
xor
cli
push
test
adc
sbb
inc
inc
xor
jl
push
fdivrl
fldl
pop
mov
add
hlt
adc
test
imul
jmp
testl
lcall
adcl
aas
push
cmpsl
or
in
cmp
xor
jp
xchg
sbb
fnsave
fcomip
out
js
sub
int3
jg
mov
rorl
push
dec
shlb
cmp
jae
mov
into
cmp
or
sbb
stos
sbb
outsb
xlat
into
mov
or
loopne
ret
and
mov
ja
aas
mov
adc
orb
lret
lret
xchg
fcoml
movsb
inc
ja
ret
iret
adc
push
rcll
push
movsl
or
mov
push
xor
or
int3
in
mov
daa
mov
loopne
inc
gs
movb
adc
xchg
sbb
xchg
jb
sub
adc
mov
sbb
adc
loopne
adc
xchg
shrb
shll
inc
or
jnp
inc
mov
inc
iret
adc
test
fmulp
insb
int3
aaa
xor
stos
add
add
fidivs
repz
fcomp
mov
ret
repz
psllq
ffree
sbb
push
adc
insl
xor
jle
mov
mov
dec
insl
inc
test
loope
pop
out
icebp
fcomps
lods
inc
sub
jnp
mov
add
and
fadds
push
mov
adc
xlat
mov
mov
ljmp
xor
and
fucomp
xchg
les
shll
les
xchg
lcall
insl
add
test
stos
mov
nop
adc
test
or
loopne
loop
push
pop
cmp
mov
sbb
sahf
cmp
fdivrl
push
and
pushf
jno
shrl
lret
lods
test
cmpsb
aas
dec
test
idivl
sub
mov
ljmp
mov
xchg
gs
std
ljmp
scas
and
xchg
mov
repnz
fwait
dec
das
xor
cmp
addr16
repz
mov
pushf
in
sbb
mov
xchg
js
jp
in
adc
pop
ds
push
pop
fld
pop
cmc
cs
and
imul
std
aaa
inc
xor
lret
jecxz
sub
cmp
test
test
xlat
in
push
mov
sbb
fcomps
mov
inc
push
lcall
in
push
pop
rcrl
scas
and
jle
in
cmpb
and
icebp
cmp
int3
pop
push
sti
test
cmc
pop
mov
jbe
popf
jne
ficoms
mov
std
pop
jns
dec
push
arpl
pushf
inc
shl
out
or
cli
push
or
hlt
int3
fs
rorb
mov
popa
shr
or
test
mov
test
movsb
ja
or
nop
sahf
notl
popf
mov
repnz
insl
fcmovb
mov
ja
iret
cmp
data16
mov
push
pop
nop
imul
test
jmp
sbb
xor
gs
xor
pop
add
sbb
add
ja
push
jo
or
inc
or
ljmp
aas
insl
js
inc
xor
jo
cwtl
outsl
popl
pop
fcmovnb
or
inc
or
xor
jae
xchg
jno
push
pop
mov
fwait
xor
fwait
inc
push
xchg
pop
arpl
fdivrl
pusha
dec
hlt
hlt
mov
outsb
fsubp
dec
mov
shrl
and
scas
push
or
ljmp
add
xchg
pop
je
push
mov
test
and
xchg
clc
into
dec
loopne
pop
pusha
scas
adc
outsb
cmp
imul
ds
pushf
sub
and
xor
or
sub
int
xor
add
lods
addr16
mov
test
mov
push
mov
mov
call
sahf
and
cmp
and
cmpsb
adc
test
fnstcw
enter
repnz
test
or
pop
xor
in
insl
or
movsb
std
aad
test
call
sbb
jl
sti
xchg
out
insb
enter
and
cmc
ljmp
frstor
leave
push
lds
xchg
dec
arpl
inc
cmp
repnz
jno
inc
iret
int
jo
add
inc
testb
cwtl
push
fisttpll
data16
add
pop
inc
pop
dec
xchg
pop
sahf
xor
xchg
ret
adc
cwtl
sub
cmp
dec
in
push
inc
lret
loop
jns
ljmp
in
push
shlb
mov
js
fwait
mov
mov
test
sub
mov
inc
push
in
jg
cmc
inc
movsl
jnp
inc
repnz
sub
imul
lds
ret
imul
out
aam
xchg
in
leave
movsb
jmp
repz
xchg
xor
es
aad
bound
push
dec
fadd
imul
sub
cmp
mov
cmp
test
mov
xor
push
mov
pop
ret
xchg
xor
inc
adc
mov
cmp
mov
mov
icebp
dec
sbb
mov
sbb
push
out
pop
cld
add
adc
mov
push
jnp
sbb
testl
cmp
mov
mov
mov
gs
rcrb
jmp
jl
fs
lahf
int
cmc
pop
xchg
clc
mov
stos
out
jo
sub
jp
imul
mov
push
fnstsw
int
xor
popa
sahf
js
sub
movsb
in
sub
xchg
sub
jecxz
cmpl
testb
gs
shrb
dec
lds
out
add
mov
cmp
and
and
ja
push
sbb
adcb
daa
or
and
fcmovnb
xorl
dec
popf
jno
mov
adc
sarb
int
into
and
xor
cld
adc
mov
push
cmp
out
pop
sti
fsubl
dec
sub
aad
cs
lods
fidivl
insl
test
cld
idiv
cmpsl
and
rcrl
cwtl
addb
fistl
inc
pop
mov
mov
inc
insl
push
inc
sbb
iret
js
sahf
or
sub
cli
mov
mov
negb
ret
inc
daa
cs
fiadds
add
loope
xorb
sub
cwtl
cmp
adc
and
shl
mov
je
repz
ror
mov
jge
xchg
addr16
jo
dec
sub
out
and
mov
inc
inc
sbb
jae
xchg
add
sub
xor
mov
jnp
jge
pushf
inc
push
jp
mov
rolb
dec
mov
sub
pop
movl
and
stc
cltd
sub
pop
pop
loop
roll
inc
sub
popf
sbb
in
int
out
shl
stc
xchg
dec
inc
or
jno
into
das
jge
add
addr16
xor
popa
fisubrs
cmc
scas
pop
je
add
pop
fwait
pushf
sbb
or
pusha
int
xchg
arpl
insl
clc
mov
repnz
fst
js
es
push
push
adc
sub
pusha
cmp
cwtl
sub
add
sbb
sahf
ficoms
in
out
jb
jns
cli
pushf
into
lahf
imulb
jmp
aam
sbb
dec
mov
inc
dec
sbb
pusha
mov
jno
pop
fnsaves
and
pop
outsb
and
jge
lret
pop
enter
xchg
pop
mov
scas
xor
mov
orb
in
sbb
jb
test
xchg
sbb
and
pop
push
not
fldcw
pop
mov
out
dec
aad
adc
andb
fwait
cmp
addr16
xor
jg
ret
jno
pop
push
sub
push
outsb
scas
sub
or
icebp
or
pop
xor
xchg
mov
bound
cwtl
jmp
jmp
test
xchg
arpl
ds
xor
fdivrs
mov
or
and
cmp
push
hlt
fidivl
pop
dec
cmpsl
cmc
xor
xchg
push
popf
arpl
mov
into
xlat
mov
iret
mov
jae
sub
xchg
lret
push
add
insb
movsl
xchg
dec
arpl
outsl
sbb
jl
mov
mov
les
mov
shll
sub
sti
jnp
mov
xchg
imul
xorb
cli
or
xor
inc
cmp
add
add
sub
adc
adc
pop
scas
jmp
test
and
mov
push
adc
xchg
pop
push
mov
mov
out
pop
lds
sub
test
push
jg
call
dec
stc
xlat
pop
cli
sub
dec
or
cmp
mov
push
adc
cmp
fidivs
jae
xor
mov
ds
mov
lret
sbb
mov
in
dec
fistpll
rorl
lret
ds
pop
mov
xchg
xor
dec
insl
add
inc
adc
sub
sbb
xor
out
out
cmc
push
test
je
sub
pop
fmull
es
fs
or
int
inc
stc
test
out
xchg
or
xchg
fiadds
mov
jno
push
xchg
xchg
arpl
bound
dec
lods
insl
push
dec
xorb
pop
insl
movsl
adc
bound
inc
mov
into
pop
fstps
cmp
dec
inc
sbb
stos
pop
xchg
enter
cmpsl
loope
pop
imul
pop
mov
popf
ja
pop
loop
mov
push
fistps
jae
pusha
pop
push
mov
or
jecxz
test
fwait
or
cltd
xchg
lcall
adc
mov
push
stos
leave
loope
adc
scas
cld
push
enter
cmp
iret
out
cmp
mov
imul
sbb
out
repnz
ljmp
and
mov
mov
xchg
addb
and
repz
dec
xchg
ret
fsts
add
adc
pop
mov
pop
inc
fdivrs
adc
nop
in
push
aam
mov
or
pop
outsb
adc
sbb
inc
ljmp
clc
sbb
push
rol
cwtl
leave
jb
pop
rcll
test
je
mov
lock
sti
out
pop
or
test
jno
dec
loopne
add
icebp
hlt
xor
and
pop
sbb
mov
dec
lea
subb
cmp
add
imul
test
out
sub
xor
xchg
xchg
jle
cmp
jbe
xlat
xchg
jle
push
dec
mov
ss
or
jp
int
iret
pop
lock
hlt
push
shll
pop
sbb
xchg
inc
addr16
in
lock
inc
xchg
inc
nop
xchg
loope
adc
inc
xor
xor
ficompl
mov
subb
lock
adc
mov
mov
push
push
jno
lahf
negb
push
bound
cmp
lods
jecxz
cli
xchg
cmp
or
testb
ret
test
lahf
paddsw
xchg
mov
jae
mov
xchg
out
fstp
jns
mov
mov
adcl
ljmp
dec
js
jne
dec
jbe
scas
cmp
inc
test
jbe
mov
outsb
enter
adc
pop
dec
rcll
pop
push
mov
mov
push
pop
inc
push
mov
jnp
repnz
stc
sti
lea
xor
nop
fcompl
test
mov
stos
ret
jns
dec
pushf
imul
inc
adc
pusha
jbe
clc
jno
shl
inc
nop
cmpsl
ja
push
cld
adc
repz
les
dec
int
shr
rcrl
sub
daa
mov
mov
or
xchg
aad
inc
mov
ss
rorl
lret
mov
in
int3
std
je
mov
loopnew
xchg
sub
dec
jns
and
fisttpll
pusha
fdivrl
xchg
movsb
fbstp
inc
adc
scas
fildl
fimuls
xor
sarl
dec
mov
test
dec
pop
js
int3
mov
popf
adc
push
cmpsl
negb
jne
cwtl
enter
sub
add
add
rclb
pop
sbb
test
movsl
gs
aad
and
fiadds
push
lods
test
adc
xor
xor
loopne
dec
and
mov
pop
test
jmp
out
adc
cmp
or
and
xchg
out
bound
and
ds
cmp
cmpsb
xchg
ljmp
arpl
sbb
stos
and
inc
cmp
push
js
mov
cmp
pop
frndint
mov
lret
push
adc
out
mov
pop
push
out
pushf
mov
icebp
insb
inc
add
lds
xor
jnp
incl
aam
test
sub
lcall
push
fbstp
fildl
nop
fnsave
mov
outsb
imul
rolb
and
mov
fisttpll
lds
push
or
jns
jns
sbb
xchg
add
fnsave
push
ljmp
sub
mov
xor
mov
mov
dec
or
inc
mov
mov
sahf
popa
mov
sub
jmp
sub
lock
mov
push
fisttpll
push
ss
add
imul
pushf
mov
cmp
aas
shrd
lret
dec
std
orb
push
sbb
into
das
sbb
fisubs
repnz
lods
inc
mov
ficomps
cmp
cmpsb
cltd
push
out
xchg
jae
test
in
loopne
mov
and
imul
add
cmp
mov
mov
cmpl
movsl
add
add
push
lahf
popa
push
sahf
insl
and
daa
lret
mov
mov
xor
das
into
loopne
cltd
lock
xchg
dec
lods
inc
call
imul
es
sti
jle
idiv
movsb
scas
cwtl
jo
lret
out
addr16
pushf
data16
inc
cmp
cvttps2pi
aas
addr16
mov
cli
mov
jmp
pop
stc
hlt
dec
aas
mov
and
repnz
sti
sbb
sbb
pop
shrl
dec
inc
add
and
xchg
loop
fimull
pop
fdiv
movsl
mov
sbb
mov
cld
and
and
dec
mov
pop
bound
lea
mov
and
jb
adc
inc
scas
mov
daa
outsl
cmpsl
mov
pop
mov
xchg
jl
in
add
mov
cmp
popf
jg
adc
jbe
cmpsb
sbb
cmc
jo
inc
hlt
loop
sub
xlat
stc
pop
fs
lahf
mov
add
out
cmp
xor
loope
andb
sub
pop
inc
je
mov
rolb
inc
xchg
outsb
adc
in
das
jbe
and
mov
mov
out
sbbl
cmp
lcall
dec
push
pop
bound
mov
push
dec
xor
nop
out
insl
jns
imul
push
adcl
fwait
ret
pop
test
and
sub
daa
ret
lret
mov
les
sbb
outsl
loope
cltd
cmp
push
ljmp
xor
fildll
mov
outsl
insb
insl
sarl
mov
or
scas
xchg
push
dec
xchg
add
jecxz
aam
sbb
adc
mov
pushf
xlat
cli
add
mov
outsb
mov
icebp
js
fdivrl
movb
mov
iret
aam
mov
xlat
jbe
ret
sub
xchg
pop
pop
rcrb
ret
push
addr16
leave
ds
xchg
inc
sbb
xchg
mov
jge
cmpsl
adc
mov
xchg
xor
iret
mov
pop
leave
xchg
mov
mov
cmp
bound
cs
movsb
test
out
push
inc
in
dec
in
mov
repz
ror
stos
sub
rorb
aam
out
sahf
jns
pop
sbb
stc
adc
arpl
sub
pushf
leave
mov
int3
into
cmp
dec
xchg
inc
push
and
addl
out
mov
lea
inc
scas
sub
sbb
int3
cmpsl
mov
and
lds
sub
push
test
cmpsb
cmp
jmp
loop
or
and
out
data16
push
inc
lock
mov
xlat
nop
inc
insl
cltd
hlt
add
mov
or
mov
loope
in
mov
sub
sbb
int3
mov
leave
dec
das
mov
rcr
stc
add
dec
dec
es
push
push
mov
pop
aad
aam
cmp
out
jmp
test
sbb
xor
mov
loope
loope
sub
pusha
and
filds
roll
adc
lock
mov
outsl
movsl
sub
test
jb
stc
je
inc
aas
lock
xchg
add
pop
dec
sub
in
ljmp
sub
adcb
fadd
cmpsb
pop
scas
jmp
jmp
mov
dec
rorb
pop
cmp
sub
xchg
insb
negb
gs
add
addr16
js
or
bsr
lret
fmuls
in
adc
lret
aad
cmp
cmpsl
aam
insb
call
adc
xchg
xchg
or
jb
mov
mov
nop
and
fwait
inc
ffree
adcl
aaa
sbb
imul
out
out
inc
lahf
jmp
stos
and
loop
enter
hlt
std
test
je
add
pop
cmpsl
and
cwtl
push
mov
inc
loop
pop
dec
xchg
add
inc
mov
jle
adc
add
jmp
testl
xor
repnz
in
push
inc
das
mov
add
mov
jbe
mov
cltd
neg
mov
mov
sub
sbb
dec
and
mov
mov
std
in
nop
or
push
mov
iret
jecxz
mov
fdivp
push
push
ss
repz
stos
adc
dec
repz
popa
mov
loopne
or
add
add
cmc
jge
pusha
clc
cwtl
addb
cmp
jg
sbb
scas
xlat
ds
enter
sub
pusha
cmp
adc
and
stos
push
out
and
enter
jns
inc
or
or
jns
loope
mov
dec
fdivp
dec
jae
pop
push
jle
repz
or
mov
icebp
push
jp
mov
mov
xchg
mov
fildll
lock
add
pop
adc
subl
stos
test
xlat
cwtl
jbe
fstpt
fstl
lods
pop
inc
ret
leave
rcll
pop
jmp
nop
and
loop
ds
movb
sti
dec
test
mov
fs
imul
xor
mov
sbb
pop
fldenv
out
or
lss
sbb
jo
xor
sub
mov
xchg
add
or
push
pop
jae
sahf
inc
shll
xchg
out
adc
mov
jnp
cli
mov
cs
adc
mov
and
xchg
or
imul
add
ficompl
enter
out
data16
fs
in
jg
jg
mov
jns
rcrl
aad
scas
pop
stc
fld
fs
mov
mov
cmp
lret
jns
enter
jno
imul
ret
stos
ds
cltd
mov
ret
les
daa
repz
pop
mov
add
mov
push
clc
jg
pop
fdivrl
jmp
ret
xchg
mov
dec
call
jmp
and
pop
addr16
sti
test
in
sub
mov
ja
mov
add
mov
mov
jmp
and
test
negl
popf
xchg
inc
shlb
cltd
inc
popa
cmp
add
lcall
inc
addr16
dec
inc
jae
pop
filds
loop
dec
das
jl
sbb
popa
ds
sbb
ret
xor
testl
ja
jb
sahf
jns
repz
call
sub
cmp
cld
lret
js
inc
adc
pop
mov
aam
mov
lods
pop
cwtl
adc
fiadds
pop
lds
lret
jne,pt
mov
and
das
xor
into
mov
mov
call
mov
sub
aaa
pop
sbb
xchg
imul
sub
pop
dec
aad
or
test
push
pop
jecxz
xchg
push
push
out
jle
es
lcall
add
xchg
inc
popa
popf
dec
add
mov
mov
fidivrs
aas
inc
jb
addr16
add
mov
dec
mov
iret
adc
std
pop
hlt
mov
insb
ret
bound
jmp
xlat
sbb
push
in
call
leave
stos
popl
aaa
push
mov
mov
cmpsb
jno
cld
adc
sub
int
into
lcall
dec
cltd
ja
adc
xor
mov
shlb
pop
out
js
rcr
std
jecxz
push
movsl
pop
sbb
insl
push
repnz
ds
pushf
mov
repz
pop
inc
xchg
sti
sub
inc
ficoms
push
popa
dec
xchg
js
pop
mov
imul
fsub
xor
lret
dec
faddp
ficomps
xchg
je
jno
in
leave
sub
mov
iret
in
pop
iret
sub
call
adc
aam
mov
or
fs
jne
lods
and
xlat
imul
inc
add
pop
cmpxchg
jno
mov
adc
sbb
cmp
adc
dec
or
mov
fisttps
add
xchg
test
clc
sub
cld
push
cmc
loopne
inc
mov
sbbl
mov
lds
lods
pushf
popa
nop
das
dec
rol
mov
xchg
scas
mov
push
sbb
clc
repnz
pushf
add
cli
dec
das
xchg
pop
test
ja
mov
std
std
xor
xor
sub
insl
jns
mov
imul
popa
xchg
jmp
xor
or
lcall
pop
and
lret
jg
cli
out
sub
xor
mov
rcrb
movsl
push
mov
pop
enter
push
pop
lds
mov
aad
call
jbe
jmp
jb
lahf
inc
push
insl
insl
xchg
js
sub
sbb
jge
sbb
sub
scas
negb
xor
xor
cmp
imul
lods
dec
lret
xchg
sbb
aaa
xchg
sarb
aad
xchg
leave
pushf
cmpsb
lds
ja
insl
out
in
mov
cmp
bound
ror
xor
dec
cmp
pop
dec
idivb
mov
ds
in
mov
daa
inc
jnp
aam
mov
jmp
std
pusha
push
hlt
push
orl
push
fsub
sub
xor
stc
jmp
pop
icebp
movsl
ret
es
fildl
movsb
pop
push
cwtl
test
lods
sub
xor
mov
fisttps
cltd
lret
mov
mov
movsl
xlat
popf
fwait
dec
loopne
sbbl
lret
hlt
std
dec
dec
movsb
bound
lahf
xchg
sub
inc
lea
jbe
movsl
ss
cmp
inc
in
sbb
push
ret
in
xor
inc
cld
pushf
pushf
adc
leave
notb
icebp
xchg
mov
inc
push
xchg
mov
pop
imul
mov
test
mov
dec
mov
aam
or
dec
dec
shrl
jns
cli
test
pop
jo
mov
in
out
push
pop
pop
add
loop
cltd
adc
les
jg
outsb
cmp
add
jnp
push
xchg
scas
ret
enter
mov
and
dec
mov
mov
incl
les
pop
cmp
add
popl
out
pop
mov
icebp
push
pop
aaa
nop
cmp
inc
addb
das
pop
dec
push
push
or
leave
push
idiv
ficoml
or
mov
xchg
and
jbe
shll
in
imul
sti
rcl
mov
shll
lahf
cmp
lret
cmp
gs
mov
mov
pop
int3
movsb
sbb
rclb
and
dec
outsl
rorb
jb
imul
lds
inc
int
xorb
mov
lods
ljmp
hlt
outsl
shrl
loope
popa
adc
in
lods
dec
or
test
ret
imul
dec
inc
sbb
fs
pushf
xor
in
mov
mov
pop
push
mov
cltd
pop
pop
cs
push
jle
into
je
xor
fmul
bound
xchg
and
or
loopne
scas
stos
sbb
icebp
scas
es
aad
add
cmp
mov
movsl
aas
or
in
nop
imul
lock
pushf
sbb
imul
shll
inc
cs
nop
mov
lods
or
imul
jp
fnstsw
movb
ficoml
iret
push
jae
fcomps
and
sub
ljmp
mov
push
push
jg
xchg
xor
sbb
jp
sub
inc
jl
call
cmp
jle
mov
sar
xchg
sub
adc
inc
lea
outsl
and
lock
mov
xor
add
cld
dec
mov
loopne
add
std
int3
lds
adc
mov
daa
mov
inc
push
pop
xor
rcrl
iret
rol
mov
xor
fs
xchg
jae
inc
or
call
adc
adc
insb
cmpl
insl
or
push
adc
hlt
jae
shlb
je
test
mov
in
inc
fwait
in
out
push
mov
scas
jp
stos
clc
sub
imul
pop
adc
stos
clc
mov
shl
push
bound
cmc
xchg
sub
test
inc
mov
mov
mov
lahf
cmp
data16
orb
scas
pop
xchg
ja
and
mov
mov
out
xchg
les
loopne
mov
jge
fsubs
movsl
mov
or
xchg
cltd
cli
std
xor
pop
fcomps
cmp
push
mov
or
pop
ljmp
popf
test
jge
cli
xor
lret
out
xchg
sbb
out
daa
jmp
jg
arpl
stos
or
pushf
jg
inc
inc
inc
out
pusha
and
jns
adc
repnz
inc
repz
xor
mov
std
mov
jnp
out
sbb
enter
inc
cmc
push
arpl
aam
sub
std
add
sub
leave
cld
mov
sbb
aas
cmp
enter
push
pop
xchg
dec
add
sub
xchg
into
pop
in
sahf
cmp
das
fs
loope
mov
pop
fs
push
sub
insb
lahf
ljmp
insb
imul
pop
mov
xchg
dec
mov
push
test
orl
jae
rorl
or
mov
xchg
inc
stos
xchg
shrb
cmp
push
cmp
and
add
sub
repz
jge
jae
add
lea
fsubl
bound
jbe
aam
cmp
fmull
lcall
mov
mov
xorb
fsubrs
xor
add
inc
test
mov
add
out
dec
lret
leave
outsl
punpckhdq
lock
fdivrl
pop
xor
les
sub
and
xchg
lret
cli
repz
pop
add
cmc
mov
mov
and
stos
mov
fldl2t
and
sub
rorl
cmc
rcll
or
inc
js
jb
cs
fcompl
inc
push
add
lds
sbb
mov
xor
lahf
pop
xor
sub
js
xchg
ljmp
in
aam
test
cwtl
mov
push
stc
cltd
cltd
sarl
xor
xorl
scas
and
sbb
sbb
pop
jno
adc
subb
fistps
jg
cmp
pop
cli
imulb
push
in
inc
adcb
aas
jno
jbe
jb
sub
int3
jl
int
dec
js
push
mov
fwait
and
sub
pop
or
mov
fwait
mov
xchg
mov
xchg
data16
int
fwait
adc
adc
imul
xchg
add
loopne
fmuls
and
push
jno
cmp
cmp
adc
addr16
cmc
pop
push
xor
fstpt
jne
js
mov
adc
fdivrl
sub
dec
mov
in
cmc
xchg
jg
pop
jb
dec
fwait
xchg
cmp
cmp
cltd
jns
fmulp
push
jae
or
in
loop
int
or
in
fsts
outsb
loope
or
push
addr16
mov
sub
cmp
repz
lock
lods
cmp
pushf
xor
jge
xchg
mov
lret
push
fstpt
lock
daa
repz
sub
insl
sub
addr16
out
mov
fcmovne
adc
loop
cmpsb
xchg
or
int
jns
lret
mov
aaa
into
jne
xchg
push
cld
in
mov
test
imul
rcrl
int
std
mov
or
xchg
sub
std
fs
les
je
test
mov
cmp
rorl
addr16
jb
pop
loop
sbb
maskmovq
testb
test
pop
test
loope
adc
testb
jle
or
mov
cs
mov
jg
mov
leave
lahf
dec
imul
lods
inc
dec
or
sbbb
dec
mov
xchg
ljmp
xchg
jcxz
mov
pop
add
notl
push
loop
pop
sub
jo
clc
mov
or
cwtl
mov
jbe
mov
rorb
ja
sub
leave
adc
jno
enter
xlat
dec
push
std
xlat
data16
ret
dec
sbb
ret
xchg
push
push
imulb
cmp
scas
and
jmp
aam
in
mov
fisubrs
in
std
sub
daa
xchg
int
sti
sbb
outsb
xchg
mov
or
mull
je
mov
push
adc
cmc
cmp
or
or
iret
out
sub
or
jp
xchg
mov
jp
int
mov
jle
inc
mov
and
xor
mov
xor
or
and
je
or
popf
addr16
test
fs
insl
fdivs
pushf
mov
push
inc
out
add
push
test
pcmpgtw
jns
imul
fidivl
sub
sbb
mov
test
adc
push
sarb
jp
cmp
stos
insb
xor
lcall
push
xchg
xor
sub
out
cmpsl
inc
pop
push
mov
sbb
push
pop
cmp
xchg
imul
sub
push
repz
push
add
test
aas
fs
mov
cmp
addl
lea
sbb
sbb
sbb
push
xorl
hlt
push
inc
pop
jno
inc
adc
test
das
scas
aas
jno
xchg
mov
icebp
popa
es
mov
shll
stos
add
dec
mov
jg
jno
int3
icebp
push
mov
popf
bound
mov
pop
cltd
bound
repz
pop
movsl
aas
scas
mov
adc
pop
movsb
push
aaa
ficoms
xor
adc
stos
adc
fs
inc
in
or
push
sub
inc
stc
out
push
add
outsb
fs
scas
outsl
sbb
aaa
out
sbb
xchg
or
cmp
int3
dec
jle
push
sbb
data16
and
test
adc
aas
fdivrs
xchg
push
xor
inc
xchg
ror
jl
imul
addl
mov
xlat
or
pop
cli
cmp
sub
cmp
sbb
mov
negl
jo
js
js
ljmp
fidivl
sbb
pushf
or
add
out
mov
sub
add
mov
add
test
je
in
add
xchg
std
inc
push
ret
sub
mov
insl
cmp
pop
dec
not
add
lret
push
lds
mov
gs
daa
xor
aas
lods
xchg
addr16
mov
lock
fdivrs
mov
mov
fs
xchg
enter
and
adc
pop
mov
xchg
xlat
aad
jmp
pop
xchg
mov
les
or
pop
sbb
dec
cs
or
ret
and
sbb
mov
pop
jb
xchg
ds
mov
jg
cmp
inc
in
or
ljmp
orb
or
hlt
shl
jecxz
cmp
mov
aam
sub
aaa
mov
andl
outsl
jp
into
shrl
cmp
inc
ficoms
pop
jnp
xchg
or
iret
inc
cltd
dec
push
sahf
and
int3
test
sbb
sub
int
or
dec
add
daa
push
outsl
mov
addps
and
cwtl
sbb
cmp
popa
sub
dec
arpl
xchg
mov
lret
cltd
leave
imul
sbb
inc
shl
popa
std
scas
mov
out
stos
xchg
push
and
sbb
mov
icebp
inc
cmpsl
or
inc
loopne
cmp
aas
xchg
ljmp
pushl
or
pop
lret
jge
cltd
nop
pop
mov
jg
dec
xchg
jecxz
xor
or
aad
ja
jns
cmp
aas
call
mov
sub
pop
movsl
jp
das
jg
std
cmp
enter
pop
sbbl
orl
dec
and
test
fistpll
gs
loop
loope
xor
xor
sub
adc
mov
ret
mov
out
insb
and
mov
inc
fdivr
loop
rorl
or
xor
mov
int
inc
xor
sbb
pop
mov
cld
jb
and
pushf
mov
std
mov
iret
xlat
popa
sti
arpl
lods
mov
loopne
xor
loopne
mov
jg
cmp
push
mov
push
test
mov
aaa
sbb
xchg
add
lock
or
cmp
test
cmp
call
cmp
shll
insb
cmp
pop
inc
mov
dec
push
lahf
cmp
mov
lss
mov
lods
dec
testb
aam
jo
in
jb
and
xor
xchg
roll
jns
and
mov
in
sub
xor
add
or
jg
ja
xlat
pop
jo
hlt
icebp
aaa
sbb
sti
inc
sub
and
push
addr16
fwait
adc
das
pop
xor
push
cmp
inc
dec
push
mov
repz
jge
ss
test
or
lock
mov
or
stos
mov
rep
hlt
fnclex
push
lods
inc
ljmp
es
lret
ret
rcrl
inc
jb
mov
dec
sub
ja
stos
cmp
fisubs
hlt
adc
testl
cmp
adc
pusha
and
xchg
pop
pop
pop
mov
lahf
dec
adc
and
cmp
jg
movl
adc
into
das
incb
adcb
ja
pop
test
rclb
insb
lods
adc
aas
das
movsl
jg
cmp
pop
mov
add
inc
nop/reserved
or
loop
inc
mov
repnz
fwait
imul
out
push
dec
dec
in
icebp
or
sub
fsubs
push
mov
out
das
fsts
cmp
fsubs
jg
fmuls
test
mov
int
hlt
sub
mov
sar
je
xor
shll
pop
jle
mov
addl
inc
cmp
sbb
addr16
loope
mov
and
xchg
add
xchg
inc
or
pop
mov
mov
into
pop
dec
xchg
cmp
mov
xor
ja
test
aas
rorl
adc
inc
iret
das
or
sti
xchg
nop
ljmp
and
aaa
loop
xor
hlt
movsl
jne
lret
sub
fstp
fldenv
push
or
add
xchg
mov
push
adc
icebp
mov
mov
fsubp
add
insb
xchg
push
sti
mov
cmp
aaa
jg
fstl
aad
pop
sti
mov
in
imul
xor
cmpsb
push
fistps
pop
sbb
mov
lahf
cmc
ficompl
scas
fwait
out
lock
sub
rclb
mov
incl
shlb
inc
dec
pushl
adc
test
adc
xor
cld
jo
js
push
in
adc
outsl
and
lock
popa
jge
aad
iret
rcll
mov
xor
cmp
add
pop
test
dec
pop
adc
call
xchg
push
push
int
xlat
add
and
aam
xor
test
and
pushf
add
mov
or
insl
pop
adc
pop
int3
sbb
gs
jb
mov
js
frstor
mov
mov
mov
std
cmp
sahf
push
filds
lcall
xchg
add
mov
lcall
mov
repz
vpaddusw
test
fs
insl
icebp
push
mov
jp
movsl
mov
inc
pop
adc
clts
popa
adc
iret
repnz
les
cmp
out
push
push
fstpl
xchg
int
loope
std
sbb
mov
fbstp
mov
push
lods
pop
mov
cmpsb
outsl
mul
ret
pop
mov
push
mov
pop
rorl
popa
jae
mov
xchg
cmp
sub
xlat
out
sysenter
fwait
das
push
mov
fisubrl
sub
dec
idivl
iret
fnstenv
int3
mov
popf
and
mov
in
test
sbb
push
shlb
addr16
cmp
and
inc
test
aad
loope
xchg
xchg
test
inc
cmp
lds
or
mov
dec
aaa
lahf
int3
sub
sbb
dec
dec
fmull
sti
lret
xor
jns
aas
dec
sbbl
aas
lock
out
or
in
lret
push
jecxz
sbb
add
test
sbb
mov
sub
mov
movsl
and
in
and
mov
fcomp
test
fldl
mov
fstp
xchg
inc
lods
xor
mov
sahf
in
pop
test
shll
sub
xor
jno
mulb
gs
testb
mov
popa
cwtl
mov
xor
lret
dec
adc
jnp
out
push
popf
mov
scas
xor
sbb
pop
inc
fcompl
mov
jp
inc
gs
mov
sbb
inc
aas
mov
lret
adc
xor
add
mov
insl
das
out
ret
jns
outsb
les
sub
scas
pusha
dec
sbbl
adc
dec
ds
testl
dec
aas
loopne
cmp
aaa
sbb
test
lea
test
or
test
mov
jae
insb
lret
lea
cltd
inc
sahf
add
push
dec
jnp
fs
fs
in
jg
pop
mov
cmovne
addr16
adc
loope
dec
fwait
mov
push
mov
stos
gs
dec
fucomi
cmp
jns
arpl
inc
or
inc
cmp
ljmp
inc
in
mov
mov
shr
cli
or
lahf
mov
stc
inc
lcall
repz
pushf
or
cmpsb
testb
push
cltd
xchg
fisttpll
int3
in
lea
inc
inc
cmpsb
or
addr16
pop
fcoml
jge
or
lahf
jmp
cmp
jb
dec
mov
ljmp
lret
sbb
adc
sub
dec
pop
cwtl
add
outsl
sarl
mov
movsl
adc
cli
add
xchg
xchg
shl
cvtdq2ps
push
out
sahf
lret
pusha
je,pt
cmpsb
ffree
add
lock
push
and
mov
jecxz
enter
mov
push
daa
lods
ret
icebp
or
xor
test
inc
dec
aad
fsubl
cmp
shll
mov
sar
lcall
fldenv
push
mov
stc
mov
jo
popa
dec
sub
sub
into
or
cld
out
cld
or
addr16
leave
divps
xchg
les
jle
cwtl
xchg
stc
adc
cmpsb
jb
pop
push
mov
inc
inc
jecxz
xchg
pop
cmp
mov
clc
push
xchg
fcomp
aad
mov
into
and
repnz
in
xchg
popf
aad
push
les
mov
cmp
mov
sbb
loopne
gs
xchg
xchg
adc
js
loop
fcompl
mov
in
or
leave
mov
adc
mov
cmpsl
shrb
mov
mov
es
clc
filds
ss
and
aas
or
jo
pusha
cld
lods
pop
shlb
sub
pushl
pop
rclb
sub
out
shrl
pop
jno
ret
cmp
lods
pop
clc
movsb
xor
mov
xchg
xor
rcll
mov
dec
cmpb
cwtl
in
sbb
sbb
push
and
jnp
int
adc
cltd
test
jno
cmc
push
les
out
loope
inc
or
inc
aaa
ja
sbb
stos
fucomi
loopne
xor
aad
outsb
xchg
sbb
popf
addl
mov
into
push
pop
pop
outsl
out
inc
inc
xchg
dec
add
and
ja
add
xchg
shll
mov
push
cmp
sub
stc
ret
enter
data16
lahf
js
aaa
jecxz
lods
pop
daa
rclb
loop
xchg
inc
jmp
pop
or
xor
stos
add
jp
sbb
cmp
jns
cmpsl
xor
cld
jmp
add
xchg
sub
mov
or
jge
pop
mov
jb
or
rorl
xchg
jo
std
mov
push
pop
jne
addr16
mov
pop
aam
inc
xchg
inc
cmp
dec
inc
in
cmp
push
sbb
and
cmp
lods
mov
rcr
aas
ftst
adc
sub
jnp
mov
lcall
pop
sub
lds
das
inc
adc
dec
dec
fcompp
cmpsl
inc
das
sub
jae
es
loopne
dec
xor
xchg
jl
lahf
push
icebp
shll
insb
mov
sahf
imul
hlt
ja
dec
push
inc
fcmovne
jl
or
lret
sbbl
xchg
leave
jmp
lahf
test
xor
out
xor
orl
out
jl
insl
into
nopl
ss
inc
loop
repz
shlb
into
push
cmc
sti
cs
push
pop
mov
dec
jnp
push
mov
lahf
xor
arpl
inc
push
negl
or
add
das
push
mov
push
xor
inc
shl
lods
add
push
insl
push
imul
add
aas
push
dec
push
cmp
pop
jo
dec
lods
adc
fwait
jmp
repnz
cs
xlat
mov
in
mov
push
mov
push
ret
mov
jno
stos
add
xlat
fldenv
pusha
xchg
fisubl
or
fs
xchg
xchg
sub
daa
and
dec
subl
inc
js
imul
daa
and
xchg
pop
nop
xchg
std
xor
cmc
push
cmp
xor
push
outsb
push
insb
jno
bound
cmp
cld
jmp
ljmp
pop
sbb
hlt
call
adc
xor
adc
sahf
outsb
repnz
mov
ret
lds
xchg
pop
xor
mov
mov
testb
fs
jbe
ret
lea
xchg
hlt
jmp
ficoml
mov
out
sbb
xchg
mov
cmpsb
pusha
leave
push
stos
ljmp
and
bound
mov
orl
int3
mov
cmpsl
fwait
in
mov
cmpsb
int3
cmp
pop
lea
add
arpl
mov
imul
push
mov
rorb
cld
faddl
and
push
jo
xchg
inc
sub
jmp
repz
cmpsb
xchg
jb
mov
mov
js
leave
cmp
mov
inc
sub
xor
cmp
mov
dec
call
jne
lret
aad
popf
or
orl
or
fdivr
sbbl
add
pop
mov
cwtl
stos
add
daa
je
sbb
dec
cmp
jns
stos
cmp
int3
arpl
and
popa
sub
stc
clc
xor
xor
or
lock
push
std
in
jmp
xor
dec
mov
pop
leave
popf
test
mov
dec
mov
hlt
repz
lods
ss
scas
pop
add
lods
xchg
xchg
push
cmp
pop
test
cmp
mov
dec
out
mov
dec
mov
add
mov
adc
insl
sbb
dec
xchg
jmp
test
mov
push
mov
cmp
out
push
test
cmc
stc
ret
fldt
fwait
sbb
dec
movsl
fnstcw
mov
xor
rcrl
jno
outsb
mov
mov
enter
inc
mov
mov
push
call
pop
xchg
dec
push
or
inc
pushf
cs
mov
dec
add
inc
call
call
outsl
cmp
out
js
cmp
xchg
aas
in
leave
pop
out
or
mov
sbb
addr16
sub
gs
mov
das
enter
add
repz
push
push
test
mov
das
lods
push
fwait
dec
or
mov
pop
jp
dec
push
cmpsb
scas
jnp
rclb
rorl
sbb
or
mov
adc
sbb
adc
mov
add
mov
popf
cs
scas
pushf
into
rolb
jp
popa
ret
lea
dec
test
int
sub
push
lcall
dec
adcl
je
roll
push
mov
push
mov
dec
mov
adcb
xchg
rcrb
jae
fdecstp
add
js
dec
pop
sbb
int
xchg
xor
xchg
pop
inc
mov
add
push
in
mov
add
sbb
aaa
push
add
mov
dec
pop
mov
sbb
negl
into
movsb
std
dec
jno
sbb
iret
incb
lea
or
jns
inc
scas
sti
jmp
daa
add
int3
sbb
sub
rclb
mov
or
or
mov
aas
test
test
mov
les
outsb
aas
inc
push
pop
mov
push
dec
fists
test
mov
and
lods
adc
xor
sub
xchg
xor
test
xorl
leave
rol
incl
mull
push
pop
lret
orb
sub
xor
dec
stos
repnz
iret
mov
sub
push
jge
and
pop
call
dec
push
jno
push
fwait
dec
cmp
inc
sub
sarb
mov
fcom
sub
fisttps
jmp
push
je
lahf
mov
rorb
pop
push
pop
pushf
inc
push
jo
mov
jge
and
inc
xor
inc
jns
adc
arpl
je
sti
out
xor
imul
roll
jbe
sbb
jns
add
cmp
mov
loopne
dec
dec
and
cmp
daa
add
addb
mov
jl
negb
sbb
add
pop
mov
fimull
loop
jmp
out
jbe
jmp
test
push
mov
jl
jg
jmp
dec
mov
decl
adc
or
xor
dec
push
add
mov
add
cmpsl
inc
out
mov
lret
jg
orb
ficoml
mov
data16
inc
push
out
inc
andb
dec
out
pop
pop
xchg
cmp
dec
mov
pop
jns
sbb
pop
inc
sbb
int
cmpsl
and
roll
lds
push
xchg
adc
inc
or
aam
addr16
cmp
sbb
xchg
cmpsl
into
mov
jae,pt
xor
and
inc
lcall
jle
pop
lock
adc
or
icebp
addr16
mov
mov
jae
cmpsl
mov
adc
mov
mov
dec
mov
mov
or
dec
add
out
dec
test
add
fucomp
add
inc
dec
insb
pop
ffree
decl
push
pusha
in
outsb
cmc
sbb
nop
popl
mov
lret
shll
shrl
fcmove
cld
repz
xchg
dec
sbb
sbb
xor
sbb
aaa
test
sbb
and
loopne
jne
xchg
mov
dec
mov
lret
mov
pop
inc
dec
xchg
ror
fucom
pushl
fisubrs
cltd
sarb
adc
cltd
add
push
shl
jne
nop
cltd
sbb
insb
fdivr
fildl
inc
inc
cmpsb
sbb
and
jp
nop
push
jo
jmp
jg
sub
testl
push
rclb
push
outsl
jl,pn
les
sbb
lods
xchg
cmp
shlb
daa
ss
adc
arpl
mov
mov
sbb
test
repnz
sbb
push
imul
sbb
mov
in
daa
mov
pop
insb
jecxz
pop
lds
pop
cltd
leave
sbb
ja
add
and
sti
and
loope
in
gs
imul
mov
popf
testl
xor
loope
pusha
and
push
push
adc
lds
aaa
das
dec
cmp
mov
outsb
jl
push
js
fcmovnbe
inc
ds
inc
lahf
stos
xor
pop
rol
or
in
xor
push
pop
mov
add
mov
push
lods
call
sub
outsl
hlt
inc
inc
sub
incl
mov
push
clc
mov
int
sti
ficomps
imul
sub
aam
mov
xor
mov
cmp
imul
adc
jbe
dec
push
xor
outsb
push
jecxz
out
fstpt
insb
mov
add
call
je
rorl
or
sbb
loop
mov
in
xchg
hlt
sbb
lret
aaa
cmp
xor
lahf
dec
cmp
xchg
mov
jne
mov
into
mov
hlt
push
mov
sti
js
add
test
and
rolb
mov
into
sbb
fwait
pushf
inc
dec
inc
lds
loope
mov
lret
xor
lds
jle
mov
cmpb
mov
int3
add
sbb
inc
jno
out
mov
scas
inc
push
hlt
and
or
int
lea
mov
incl
xchg
mov
fbstp
sub
rorb
lds
xor
mov
xchg
mov
mov
sarl
mov
adc
jo
sbb
fistpl
or
mov
repz
mov
psubusb
rcrl
jnp
jmp
cs
jle
or
jmp
push
ja
daa
xlat
cmp
mov
orb
mov
data16
jecxz
data16
adc
les
mov
bound
fwait
rcl
xor
sbb
mov
mov
pusha
mov
iret
xor
into
push
ret
sbb
inc
sbbl
gs
add
push
mov
je
lcall
or
sub
jecxz
xchg
and
xchg
xor
push
sbb
adc
in
lods
xchg
bound
scas
sahf
rcrl
mov
xchg
pushf
rcll
or
lret
or
leave
out
clc
jno
imul
movsb
adc
jg
movsb
jp
iret
xchg
mov
add
sub
or
mov
mov
int
dec
in
mov
pop
fneni(8087
int3
inc
push
dec
mov
xor
pop
mov
inc
or
out
sub
insb
xchg
fisubs
adc
jp
pop
xchg
dec
pushf
lret
and
mov
nop
push
jle
add
enter
mov
mov
jne
mov
in
andb
enter
jno
sub
imul
sub
cmp
dec
push
xchg
adc
pop
test
sahf
shrb
dec
rorl
hlt
and
adc
mov
mov
add
push
les
cmpb
iret
jmp
sbb
mov
cmp
bound
add
jns
imul
mov
adc
stc
lret
jno
int
cmp
enter
cmc
cmp
test
xlat
sar
jmp
fld
rcll
dec
xchg
rorb
push
xor
popf
inc
nop
xchg
mov
rdmsr
pop
sbb
jae
sbb
jnp
push
sti
pop
inc
int
inc
jno
mov
and
outsl
cmp
test
jp
jmp
sbb
adc
testl
pop
xchg
out
mov
push
cli
repz
inc
mov
add
frstor
jl
inc
mov
sub
sbb
test
push
sub
shlb
mov
push
ss
stos
cmove
mov
xor
mov
push
adc
pop
push
jbe
cli
lahf
inc
sbb
pop
lock
shll
sbbb
jl
adc
movsl
jmp
hlt
loopne
push
js
xchg
out
inc
ss
cld
jge
sbb
and
or
mov
xchg
out
inc
clc
mov
jb
push
sbb
out
xchg
mov
fdivl
or
jno
out
lret
pop
jnp
lahf
or
leave
push
sti
xchg
xchg
lds
repz
xlat
pop
inc
fld
loop
stos
or
rcrb
loope
add
outsb
outsb
insl
xchg
stos
fsub
pop
fs
pop
fisttpl
rcrb
jae
loopne
test
xor
xlat
mov
inc
adc
cmp
pushf
loop
ss
fwait
mov
add
pop
sub
xor
push
cltd
pop
mov
jmp
mov
mov
lret
mov
sbb
jle
mov
dec
cld
jo
je
outsl
test
cmp
les
mov
sbb
cs
dec
fstps
xchg
sub
je
add
inc
pop
xchg
in
mov
les
jle
lcall
out
inc
data16
push
das
add
and
mov
cmp
cmp
jg
movsb
mov
loope
or
lcall
out
adc
dec
xor
push
les
cmp
js
insl
out
gs
test
jp
scas
sub
insb
repz
call
sbb
push
xchg
mov
stos
pop
fdivrs
or
pop
roll
outsl
xchg
clc
ja
or
rcrl
sub
popa
dec
sti
pop
jl
fnstsw
mov
mov
dec
addr16
jmp
xor
cmp
cltd
xor
insl
push
int
pop
push
aaa
ret
pop
cmc
xor
shrb
or
ret
mov
fstps
lret
ljmp
ja
jne
ljmp
mov
adc
cs
ja
mov
mov
and
add
and
lds
mov
mov
jnp
cmp
push
adc
imul
pop
sarb
mov
jmp
push
testl
cltd
inc
inc
sub
mov
aad
lret
cmp
xor
pop
xor
test
jb
push
mov
test
fcomps
add
addb
in
rol
dec
das
orl
cmp
roll
nop
and
add
push
sub
sahf
fldcw
push
mov
clc
cmp
or
add
push
nop
inc
shl
sti
pop
inc
fsubrs
sub
jg
jns
inc
aaa
lret
leave
enter
hlt
divb
leave
mov
imulb
int3
and
jno
push
hlt
pop
int
inc
pop
fsubrl
insb
xchg
mov
addb
xchg
xor
cmpsb
mul
js
popa
in
vmwrite
and
mov
in
dec
loopne
fdivl
outsb
xchg
push
sbb
sbb
or
jnp
jp
xchg
outsl
jo
cmp
xchg
or
mov
lcall
cmc
mov
adc
inc
ja
insl
jle
test
bnd
jae
dec
mov
mov
xchg
nop
test
loop
test
jnp
mov
inc
leave
rcll
in
cmp
dec
pusha
mov
pushf
or
or
jo
lods
rol
dec
and
test
fistpl
jmp
popa
dec
loopne
inc
ret
adc
aas
mov
rolb
and
and
jle
pop
clc
mov
repnz
mov
scas
test
push
mov
add
inc
test
jecxz
mov
imul
adc
test
lds
call
int3
loop
xchg
neg
mov
je
icebp
out
push
leave
cmp
data16
adcl
pop
or
push
outsl
jg
bound
mov
jp
push
scas
iret
mov
test
int
insb
mov
xor
xor
push
cmp
xchg
mov
movsl
and
mov
ljmp
rorb
frstor
cmpsl
lock
or
pop
sbb
out
movsb
rcll
popl
inc
add
into
repnz
push
outsl
jl
lahf
test
jg
repnz
aaa
inc
push
mov
mov
mov
sbb
and
dec
jbe
mov
sbbl
lcall
shl
fnsave
imul
sub
xlat
scas
mov
xor
jg
insb
cmp
mov
scas
movsb
push
out
movsl
push
movsb
nop
idivl
movsb
push
imul
mov
and
inc
sub
jg
jnp
or
xchg
jecxz
jno
sub
xchg
dec
sarb
push
mov
fs
sbb
lods
inc
stos
leave
xchg
mov
mov
lods
mov
out
push
imul
test
loope
out
cmp
sarl
popf
or
add
push
fistpll
inc
dec
test
cmp
push
das
fs
stc
loopne
pop
adc
sbb
push
or
sti
jl
je
jmp
inc
sbb
jns
mov
stos
sbb
sub
sahf
and
sbb
push
fsts
ljmp
xchg
push
arpl
fidivs
jbe
repnz
dec
testl
and
pop
jne
jmp
mov
lods
aam
sub
sbb
or
cmp
iret
fidivrs
push
xchg
or
loopne
push
xchg
push
daa
repz
gs
ss
push
and
dec
fs
lds
shll
orl
jl
jne
adc
mov
sbb
push
orl
inc
xorl
xor
jecxz
push
je
icebp
push
mov
out
xor
pop
sub
pop
push
sub
hlt
aam
popa
rorl
sub
fldenv
mov
and
xchg
cmp
jecxz
mov
fcoms
leave
out
xor
jecxz
push
lret
dec
jge
mov
adc
fidivrl
or
dec
xor
mov
adc
decl
push
test
les
ret
add
jg
adc
mov
hlt
notb
add
in
lcall
cmpsl
adc
xchg
and
pop
xlat
insb
js
mov
mov
cmpl
xchg
pop
test
xchg
int3
lds
int3
push
mov
jecxz
cmova
into
mov
lea
or
loope
imul
mov
stos
jnp
notl
cmp
add
cmpsb
das
push
lret
mov
cmp
gs
in
xchg
mov
arpl
jp
inc
dec
jbe
mov
adc
movsl
ja
mov
imul
mov
out
in
cltd
mov
cmp
test
mov
sub
push
inc
jno
in
or
test
lods
or
xchg
adc
daa
cmc
and
sub
jns
xor
in
and
rorl
pop
bound
mov
out
mov
mov
aad
sbb
adc
and
daa
sbb
adc
xchg
xchg
lds
mov
aas
jmp
jecxz
sub
mov
adc
movsb
fbstp
enter
push
std
mov
adc
adcl
out
mov
aad
add
hlt
adc
lods
or
jg
jg
por
loop
push
stos
or
sbb
mov
cltd
mov
jg
in
add
cmp
sub
jno
fmull
mov
stc
push
stos
mov
iret
pusha
pop
inc
push
push
push
mov
in
in
push
pop
lahf
cs
loopne
dec
js
aas
xchg
pop
sbb
add
gs
pop
jle
or
push
dec
jno
cltd
xor
pop
neg
mov
ss
or
add
out
aaa
pop
jne
testb
or
ljmp
lods
or
inc
mov
nop
mov
ja
iret
outsl
sbb
or
insl
in
push
call
inc
fdivrl
cmp
pop
jne
pop
pop
or
xchg
lods
cmp
pop
mov
add
jg
push
stos
ss
mov
aam
add
add
or
push
or
std
fcomps
sub
mov
leave
push
add
sbb
pusha
jb
gs
sub
mov
dec
push
lock
jp
fidivl
mov
cwtl
into
jge
test
inc
dec
fwait
pop
test
mov
jbe
mov
pop
sub
in
cld
test
pusha
inc
xchg
jne
loope
ret
pop
out
jns
hlt
test
push
pushf
add
or
push
in
or
sub
outsl
inc
into
mov
mov
push
adc
pop
jo
cmp
inc
lock
push
fdiv
test
aas
idivb
imul
jbe
leave
pop
fidivs
pop
cli
sub
flds
minps
adcb
dec
dec
add
cmp
or
sbb
mov
scas
jecxz
or
leave
cld
xlat
xor
inc
xchg
out
pop
adc
int3
sbb
adc
outsb
ljmp
mov
aam
cmp
pop
cmp
cmp
ret
sub
sbb
fildl
mov
daa
mov
inc
lods
ret
mov
test
or
fiadds
and
sub
pop
inc
and
sub
movsb
pop
ds
jno
mov
in
push
gs
lret
repnz
shrl
sub
push
xchg
data16
push
inc
cmpsl
jb
push
fisubl
outsb
paddusb
or
mov
dec
fimuls
sahf
sub
cmp
not
lds
mov
fsub
pop
fucom
nop
loope
pushf
xchg
fs
cmp
in
cmp
out
pusha
dec
in
dec
cs
out
mov
out
xchg
sub
xchg
inc
lcall
vpunpcklqdq
cltd
push
dec
xor
adc
jbe
lock
gs
bound
out
in
mov
dec
jo
xor
rclb
dec
jge
push
and
jg
push
jnp
ficomps
mov
dec
sahf
lods
arpl
push
mulb
jmp
push
dec
inc
arpl
mov
int
mov
pop
repz
shl
fistps
adcl
xchg
push
lock
lods
push
sub
fadds
or
js
sbb
fnstsw
pushf
insl
pop
xor
push
lods
dec
addr16
insl
loope
sbb
cmp
sbb
iret
jno
push
mov
mov
xchg
push
divb
xchg
and
push
int
out
dec
dec
ljmp
push
sbb
sbb
pop
jl
mov
lret
pop
push
push
fdivrs
mov
pop
mov
in
jnp
sub
test
and
imul
sti
push
in
adc
cmpsl
pop
mov
mov
ret
sub
or
pop
mov
icebp
stc
inc
add
jne
pop
insl
inc
pop
imul
inc
iret
fmul
inc
mov
and
mov
loop
lahf
or
xor
sbb
je
fs
in
xchg
xor
add
lods
and
sub
test
inc
mov
or
xlat
cmp
pop
out
lea
cmp
pop
int3
and
fmul
xor
push
mov
lods
repz
dec
cmp
adc
jno
inc
inc
scas
jno
pop
cmpsb
bound
fisttpll
jb
dec
outsl
out
cmp
outsl
adc
fsubs
cmc
mov
jmp
decl
xchg
fcmovne
jb
out
icebp
add
repnz
push
xor
sub
inc
add
push
ret
rorb
popa
filds
loop
jle
shl
sub
and
lods
mov
jmp
fnstenv
push
sbb
cmp
fnsave
arpl
popf
pop
sub
mov
inc
sti
adc
xor
mov
je
adc
inc
js
psubusw
repnz
insb
int3
vpshab
sbb
pop
mov
std
jg
jl
adc
in
imul
push
push
mov
push
and
cltd
jp
stos
push
test
lret
test
push
sahf
pop
push
sub
jbe
xchg
test
fmul
jnp
in
sub
or
lret
idivl
ret
sbb
scas
sub
addr16
gs
cmpsl
dec
nop
mov
xchg
dec
add
push
cmp
inc
or
jecxz
cmp
cmp
out
test
sub
test
call
ljmp
lods
cmc
rorl
mov
test
or
adc
and
pop
lahf
xor
mov
dec
movsb
xchg
xchg
mov
and
test
inc
xchg
nop
repz
arpl
ljmp
ljmp
in
repz
cmpsb
or
aam
dec
test
xchg
xchg
pusha
sbbl
jmp
bound
stos
nop
mulb
jo
ljmp
scas
sbb
xchg
xchg
dec
flds
cmpsl
xchg
jnp
lods
clc
push
scas
in
or
cld
jbe
jb
sub
mov
add
dec
call
les
jl
insl
push
sub
pusha
sub
cmpl
jg
sbb
inc
or
cwtl
inc
adc
jae
inc
mov
dec
rclb
mov
push
ret
lds
das
insl
test
pop
mov
cmpsb
jmp
dec
into
jnp
sbb
mov
imul
sub
mov
add
addr16
jle
repz
aad
dec
jae
or
jg
arpl
push
cld
mov
subl
push
in
and
mull
pop
jo
fbstp
icebp
jge
and
push
cmp
sbb
daa
ret
repnz
subb
test
scas
push
cli
inc
int
pop
cmc
rcrb
lahf
adcl
adc
inc
sahf
sbb
sub
dec
xor
lcall
shrb
xor
xchg
mov
ss
mov
lret
xor
mov
fiadds
inc
orl
rorl
jno
dec
inc
jne
pop
xor
bound
loope
jmp
add
mov
jg
or
adc
ret
sti
mov
popl
xchg
js
aam
push
mov
xor
or
cmpsl
xchg
outsb
bound
sub
xor
bound
sarl
pop
fimuls
shlb
xchg
das
pop
jge
sub
inc
js
inc
pop
int3
xchg
lret
sub
sbb
inc
adc
jecxz
bound
and
cmp
pop
push
or
ret
aas
jp
daa
xlat
jo
pop
mov
dec
xor
rorl
inc
fsubl
or
mov
xor
dec
sub
lock
mov
jge
sbb
mulb
jecxz
mov
ljmp
sahf
shlb
or
lods
pop
adc
add
divb
inc
and
daa
xor
cmp
imul
cmp
loop
mov
int3
into
push
add
cmp
aaa
xlat
shlb
mov
call
imul
cmp
xchg
ret
pop
icebp
or
mov
adc
lds
or
sahf
xchg
lahf
imul
push
fnstcw
pop
test
es
cmp
and
shrb
sub
stos
push
mov
fisttps
jg
pop
dec
sub
add
add
aad
shrl
xchg
js
pop
push
notb
or
jecxz
cmp
ljmp
mov
and
inc
adc
sahf
cmpsl
push
stos
adc
pop
sub
loop
push
lret
jecxz
sbb
outsl
add
push
das
or
xor
repz
and
movsb
jnp
data16
aaa
sub
xchg
push
push
lea
add
stc
lcall
dec
out
lock
dec
fbld
ret
mov
or
clc
loope
pop
sbb
mov
repnz
dec
movsl
fwait
int3
rol
mov
and
jbe
orb
insl
sahf
inc
push
mov
aaa
mov
lret
jl
lea
dec
fisubrl
inc
or
pop
push
sbb
push
mov
inc
jmp
sbb
push
mov
mov
mov
xor
adc
lds
fwait
mov
in
and
aaa
imul
negb
push
mov
mov
mov
outsl
jl
inc
pusha
lret
adcl
and
movsl
add
jno
mov
les
mov
adc
xlat
mov
xor
jno
inc
dec
daa
lret
and
sti
dec
ss
mov
sub
pop
add
add
jle
rep
pop
mov
inc
scas
dec
stos
in
mov
loope
and
xchg
ja
aad
xchg
fiaddl
ds
mov
adc
jb
or
adc
and
stos
out
imul
int3
rorb
test
mov
imul
aad
xchg
call
mov
aas
orb
push
jae
pop
add
inc
inc
and
mov
fwait
jmp
xchg
sub
cmp
lcall
dec
inc
cwtl
cmp
push
sbb
lcall
comiss
jno
jge
aam
pop
pop
sub
in
mov
sbb
sahf
mov
xchg
fsin
cwtl
rcrb
movsl
mov
jns
jl
ficoml
mov
or
adcl
xor
test
out
sti
cmp
nop
in
aad
adc
pusha
sbb
std
add
inc
dec
into
repz
push
sbb
sbb
popf
lret
repnz
jmp
je
pop
sub
push
jo
imul
mov
push
imul
lea
dec
sti
pop
mov
xor
and
sarb
or
jge
add
adc
xchg
idiv
adc
push
or
cmc
aam
sub
repz
push
or
dec
xchg
shlb
rcrl
jecxz
popa
outsb
sbb
and
arpl
addr16
fcoms
insb
mov
ds
cmc
js
ljmp
int3
int
inc
arpl
gs
mov
dec
cltd
out
mov
stos
dec
ficomps
icebp
lds
insb
test
lcall
icebp
jno
pop
mov
push
push
outsl
inc
sub
mov
mov
ror
mov
imul
add
adc
cmpsl
mov
enter
repz
mov
pop
lahf
imul
decl
call
mov
adc
cmp
pop
add
repnz
dec
lret
and
rcll
sbb
pop
or
aam
adc
push
sub
in
cmpsb
xor
xchg
pop
xchg
adc
and
add
lods
call
inc
sbbl
fsubp
orb
dec
and
inc
insl
xchg
ficomps
shlb
stos
pushf
pusha
loope
sub
jnp
mov
mov
pop
mov
sahf
push
aam
ja
and
xor
testl
jecxz
dec
mov
movsl
pop
popa
mov
add
push
push
into
adc
jo
sbb
scas
shrb
arpl
fisttpll
jp
mov
mov
or
xor
pop
cmp
xchg
fisttps
lds
bound
hlt
sub
test
cmp
adc
mov
mov
xchg
cmp
ljmp
pop
cmpsl
mov
ret
popa
push
call
popa
mov
jp
jp
fdivrl
call
out
fimull
outsb
rorl
adc
sub
shlb
shr
aas
dec
sbb
popa
push
sbb
icebp
and
rclb
mov
or
nop
jbe
pop
add
push
in
test
add
sub
mov
test
lret
sub
adc
jp
std
dec
inc
cld
mov
sub
pop
jge
lock
jns
sysret
mov
mov
movsl
pop
test
lcall
jmp
and
mov
lcall
loop
movsl
mov
cmpsb
scas
stos
cwtl
adcb
lods
sub
gs
mov
rcr
jno
loope
stos
sahf
or
daa
test
bound
in
add
clc
loopne
pusha
jecxz
push
sbb
fs
or
aam
or
cmpsl
pusha
xlat
xchg
mov
push
mov
adcl
mov
imul
test
movsb
jb
sbbb
inc
pushf
mov
xchg
int3
orl
divb
adc
call
xchg
data16
lahf
xchg
pop
push
push
push
pop
add
lahf
cmc
enter
scas
decb
jmp
push
pop
push
test
loopne
fidivrl
leave
inc
sbb
add
rorl
and
or
cmpb
jp
lock
sub
fstps
push
sbb
outsb
sbb
bound
cmp
inc
cwtl
iret
inc
out
pop
pop
es
sub
aad
aam
scas
fmulp
int
bound
test
lods
stos
sub
push
jecxz
fildll
and
adc
mov
into
outsb
sbbb
and
sub
fucomp
test
dec
cmp
mov
push
xchg
mov
cmpsb
and
fcomps
loopne
jp
ret
and
cmpsl
mov
in
lods
push
aas
test
sub
fists
jecxz
out
ficoms
addr16
mov
fwait
pop
push
xor
fcmovu
fstpl
dec
cltd
out
mov
or
sub
mov
arpl
sarb
xchg
movsl
pop
std
out
lret
inc
cmpsl
sarl
lods
lret
inc
pop
imul
cmp
adc
xchg
jg,pn
mov
cmpsb
addr16
sub
sbb
pop
popf
push
fidivrl
mov
inc
aam
or
cli
xchg
pop
bound
jecxz
repz
mov
sub
cltd
cmp
sub
je
xchg
in
repz
in
dec
jnp
jns
mov
dec
sbb
mov
je
adc
lahf
les
or
rcl
or
jmp
cld
lret
mov
dec
adc
xchg
fwait
mov
xchg
int
rcrb
xlat
jge
cmp
jne
lea
movsb
and
pop
mov
fs
daa
sar
add
sti
or
leave
insl
addr16
or
movsl
sub
jbe
mov
jae
cwtl
hlt
cmp
addl
pop
nop
jl
mov
rcrl
mov
daa
jg
icebp
in
aam
or
pushf
bound
pushf
fidivrs
ljmp
mov
fstpl
sbb
xor
pop
pop
insl
fimuls
std
or
adcl
mov
int3
call
fsubs
jecxz
push
mov
add
ds
out
xchg
aaa
xchg
add
mov
add
push
dec
mov
testl
popf
pop
rolb
in
pop
lods
mov
jge
dec
outsb
mov
clc
xchg
fsubs
mov
push
mov
inc
or
jmp
aaa
or
xchg
or
shlb
mov
addr16
jb
shll
adc
or
sub
jns
mov
cmp
pop
je
mov
cmpsl
clc
pop
test
movsb
movsb
adc
fbstp
mov
fstpt
push
mov
sub
push
cltd
icebp
xchg
cs
mov
jmp
rcrb
pop
stc
iret
ret
adc
or
iret
jns
adc
dec
loopne
mov
mov
daa
stos
or
cmpsb
jno
stc
fwait
outsl
fucomp
fcoms
dec
dec
adcl
cmp
jle
repz
xchg
andl
call
das
jnp
cmpsl
icebp
push
aaa
inc
xor
dec
scas
pop
dec
scas
cmp
adc
std
and
test
adc
cmp
rcrl
push
adc
jno
in
jns
mov
ljmp
stos
jno
out
int3
mov
adc
ja
pop
int3
hlt
aad
sbb
lret
int3
adc
inc
xor
sar
push
in
ror
mov
mov
arpl
and
popa
insl
cmp
xchg
mov
fcoml
adc
movsb
es
and
mov
mov
pusha
test
adc
movsl
jbe
add
cmc
sub
mov
adc
inc
out
dec
xchg
dec
cltd
jne
adc
in
out
pop
loopne
inc
popf
outsb
into
sbb
push
stos
dec
dec
mov
lods
sbb
xorl
test
orl
sub
aaa
push
sbb
hlt
lret
subl
fimull
and
xchg
sub
add
cmp
sub
sahf
mov
pop
pop
mov
or
add
fmuls
sbb
pop
int3
add
insl
inc
or
gs
mov
out
insb
jns
pushf
pop
adc
inc
icebp
xor
into
sub
add
jne
scas
push
rcll
jns
jb
cmp
jnp
fstl
mov
mov
cmp
aaa
leave
pop
mov
std
sti
xor
inc
cmp
xchg
cmpsb
stos
ret
rol
and
out
cmp
fnsave
add
hlt
mov
and
mov
mov
jns
push
and
lahf
add
insl
ficoms
lock
jnp
adc
sub
test
or
xor
cli
outsl
jnp
sub
sbb
idivb
pop
push
ljmp
push
mov
gs
or
mov
push
icebp
jns
xchg
in
pop
test
jl
sub
clc
jg
fcoml
jnp
push
repz
jecxz
popa
movsl
icebp
fwait
adcl
and
jmp
bound
pushf
inc
sbb
or
mov
jge
loopne
clc
dec
aad
mov
fwait
add
sub
or
sub
sub
subl
shlb
call
or
inc
sub
js
dec
mov
adc
repz
jl
pop
inc
or
int
loop
ljmp
jg
and
xchg
xchg
and
into
je
xor
fiadds
loopne
sub
mov
mov
ja
in
inc
pop
pop
aaa
icebp
into
ret
sbb
ficoms
add
popa
inc
xchg
test
push
dec
repz
dec
clc
and
or
xlat
xchg
pusha
jns
sbb
loopne
div
adc
std
pop
in
dec
mov
mov
out
mov
aaa
subl
mov
push
jbe
jnp
sbb
popf
add
cwtl
mull
cmpb
aad
jo
sarl
mov
fwait
and
mov
das
fwait
sti
inc
aam
rorl
or
hlt
pop
ret
dec
dec
mov
inc
xor
xor
lds
xchg
adc
or
loope
push
sbb
or
push
jnp
or
in
or
mov
dec
jno
out
sbb
cmp
xlat
push
dec
out
mov
cmpsb
push
xchg
mov
hlt
sti
out
sbb
int3
out
mov
insb
aad
mov
sub
jbe
jns
out
sar
push
push
sbb
repnz
lock
loopne
xlat
hlt
inc
cmpsb
icebp
dec
mov
int3
aas
lods
jl
jecxz
sarb
ja
aad
sarb
jg
push
xor
inc
int3
cli
inc
jns
or
aad
ljmp
bound
and
push
and
movsl
es
xor
test
jae
dec
xchg
popa
mov
jno
sahf
cmpsb
lret
and
outsl
jl
popfw
pop
cld
push
or
dec
lock
lock
push
xchg
dec
fdivp
dec
cmpsl
outsl
aas
lods
mov
popa
pop
das
mov
rcll
test
lcall
pop
aas
jg
shlb
lret
xchg
pop
out
push
sub
std
jnp
cmp
or
int3
adc
cmpb
sahf
pop
xchg
fwait
xor
in
int
inc
add
outsl
pop
xchg
sbb
pushf
rcll
jmp
jmp
inc
push
xor
jns
jnp
push
jnp
jae
mov
jmp
dec
cmp
mov
push
and
leave
push
inc
into
stc
je
stos
jmp
arpl
mov
add
cmp
dec
add
int
push
lods
imul
inc
lea
sahf
clc
in
js
sub
aam
repz
xor
mov
mov
sub
pop
cltd
sub
mov
xchg
nop
fcoms
xchg
roll
jne
inc
inc
shlb
mov
in
mov
add
dec
insb
mov
xchg
inc
ror
xor
inc
inc
cmp
idivb
sub
imul
jno
int
scas
imul
pop
sub
push
adc
mov
jbe
jle
ret
daa
cmp
mov
sub
inc
lret
jp
mov
pop
sub
scas
int3
jae
sub
out
adc
jnp
sbb
sbb
push
pusha
stos
cmpb
add
enter
fstpl
xorb
out
shll
sbbb
mov
loope
jnp
into
xor
hlt
mov
mov
lahf
out
add
adc
push
or
add
mov
inc
fnsave
dec
lods
mov
pop
push
in
std
aaa
pop
out
cmpsb
cmp
test
mov
test
rcll
lods
sbb
js
aaa
pop
pop
xor
out
stos
cmp
les
test
pusha
adc
jp
gs
mov
fdivs
pushf
jge
pop
aaa
fisttpl
mov
cs
jnp
push
adc
sub
in
or
int3
mov
gs
pushl
push
pop
loope
bound
jmp
in
enter
jge
mov
push
push
mov
and
jne
or
jp
push
add
enter
fsubs
jnp
syscall
mov
ss
and
js
xchg
lret
les
daa
cmpsb
and
sbb
call
outsl
sub
dec
bound
jmp
test
lds
in
mov
mov
cld
outsb
sbbl
data16
add
cmc
out
insb
rcrb
mov
es
mov
mov
fists
fbstp
pop
sub
adc
inc
dec
or
jno
or
popa
sub
xchg
dec
pop
test
add
aam
scas
scas
sbb
into
ret
scas
push
fsts
loopne
cs
clc
stc
jns
and
sub
mov
inc
mov
dec
ret
sub
or
rcll
mov
jae
loopne
andb
add
and
push
xor
inc
insb
sahf
lret
xchg
sbb
int3
lahf
mov
gs
jo
push
sbb
add
lret
mov
in
sahf
and
lcall
std
idivb
or
inc
add
mov
or
adc
test
or
dec
sub
dec
dec
push
js
mov
sub
mov
jecxz
imul
in
in
lock
add
lea
or
hlt
jno
fstpl
push
and
mov
in
mov
jle
icebp
adc
idivb
jo
add
insb
aad
mov
cmc
and
pushf
das
mov
enter
stc
push
mov
sbb
shlb
mov
fs
insb
or
insb
mov
adc
xchg
dec
inc
mov
sub
mov
lods
ror
mov
or
adc
and
dec
and
sub
bound
mov
es
mov
bound
push
das
stos
je
inc
dec
pop
push
leave
push
mov
mov
daa
or
repnz
adc
movsl
mov
imul
rcrb
pop
leave
cli
jne
cld
mov
push
ds
jl
cmp
aam
lahf
sub
cltd
aad
xchg
cmpsb
in
int3
aad
sbb
xchg
rcrl
mov
inc
cld
dec
xchg
fs
int3
test
mov
sub
adc
cmp
sub
pop
cltd
movsl
sbb
pusha
add
sub
inc
mov
addr16
mov
mov
or
test
cmp
mov
fsub
mov
enter
and
rcrb
xor
xchg
ljmp
mov
enter
imul
pop
into
sbb
xchg
pop
ja
push
movsl
in
pop
cmp
in
stc
mov
add
pushf
cmp
sub
or
adc
fsts
test
xor
lock
aam
mov
fistl
cmp
inc
lds
mov
cmc
lret
rclb
lcallw
stos
loopne
mov
in
scas
leave
xlat
fidivs
cmp
push
clc
jns
dec
adc
xor
mov
mov
aam
fs
push
gs
test
and
mov
jbe
inc
push
push
adc
cmp
jbe
add
xchg
loope
fstpl
fidivrl
daa
mov
xor
inc
sbb
push
leave
imul
inc
les
adc
mov
cmp
pop
jne
ss
xor
popf
xchg
mov
pop
pop
mov
mov
rolb
inc
nop
dec
mov
and
and
cli
out
enter
call
pop
fdivrs
pusha
into
and
mov
test
addr16
out
cld
or
xor
lret
adc
cmp
in
aad
fimull
cwtl
out
xchg
stc
pop
mov
xlat
sbbl
dec
push
dec
xchg
sbb
mov
stos
adc
mov
insb
or
stos
mov
mov
sti
lahf
and
adc
lods
rorb
or
mov
xchg
sarb
cmp
imul
fimull
stos
cmpb
andl
dec
adc
bound
fwait
and
or
jecxz
cli
jbe
push
repnz
xchg
push
outsl
aad
dec
nop
and
and
insl
mov
pop
js
mov
mov
mov
int3
int3
mov
dec
pusha
hlt
sarb
add
stc
xchg
inc
es
inc
pop
pop
inc
test
nop
jmp
mov
les
leave
xchg
sub
mov
add
push
lcall
divb
cld
pop
pop
test
xor
lret
mov
leave
sahf
movl
pop
lahf
or
loopne
mov
je
cmp
xor
jmp
jo
add
mov
xor
sub
lods
mov
loope
dec
mov
xchg
iret
jno
lret
push
ss
sbb
inc
cmp
mov
or
dec
dec
or
imul
pop
mov
mov
mov
jecxz
mov
loopne
rol
mov
gs
mov
test
jns
das
push
cs
sub
inc
jecxz
nop
xor
or
push
cltd
push
in
xchg
pop
cli
add
sarb
push
push
push
xchg
xchg
sbb
push
leave
fsub
cli
daa
pop
fincstp
mov
push
in
insl
out
and
fdivp
icebp
cs
jbe
lds
and
adc
pop
cli
dec
popf
xorb
outsl
out
mov
js
fildll
mov
mov
xchg
jg
imul
repnz
mov
out
pop
lcall
cmpb
dec
cli
add
fnstcw
xlat
clc
sub
push
cmpb
lods
inc
xor
add
sub
shrl
stos
fmulp
xchg
inc
movsl
into
jp
mov
hlt
pop
cs
mull
adc
sahf
icebp
scas
jle
nop
out
iret
mov
outsl
lcall
insl
jecxz
inc
push
outsl
clc
and
sub
test
loopne
bound
outsl
jmp
enter
jo
or
arpl
insb
adc
mov
push
push
xor
fwait
sub
push
jnp
and
pop
xchg
enter
dec
pop
add
and
in
loopne
pusha
xchg
add
pop
and
lea
sbb
xor
pop
lahf
xor
jmp
mov
hlt
sbb
add
sbb
pop
adc
and
fcomip
inc
movsl
in
xlat
scas
mov
shlb
and
mov
test
je
jne
jmp
out
pop
cmp
mov
js
scas
dec
scas
xor
xchg
xor
std
js
xchg
popa
mov
cmp
jno
cmp
aas
repz
add
iret
adc
rorl
inc
jecxz
xchg
lahf
jle
sub
fistpl
shr
aaa
imul
pop
cmp
fsubr
jle
xchg
ds
mov
dec
movsl
stc
mov
sub
mov
pop
inc
bswap
sub
add
pop
fbld
movsb
xchg
inc
push
iret
cs
outsl
adc
jo
popf
repnz
or
jmp
stc
pushf
jns
push
subl
fisttps
stos
int3
das
xor
cmp
xor
jecxz
sub
and
mov
je
inc
add
sub
dec
ss
cmc
mov
ss
pop
dec
sbb
dec
pop
mov
aam
add
xchg
loop
adc
inc
jno
push
aam
ja
mov
jb
arpl
loope
and
mov
cmp
mov
fdivs
jp
push
jge
dec
xchg
stos
xor
cmpsl
inc
and
out
fsub
repz
xchg
test
sbb
addr16
or
outsl
xlat
pop
das
test
sarl
cs
sahf
sub
ficompl
dec
xor
incb
and
sbb
ja
mov
mov
mov
aad
aad
ljmp
pusha
mov
notl
icebp
xor
cmc
jecxz
xchg
jbe
push
enter
xlat
inc
push
jge
sub
aad
lret
mov
xor
ljmp
in
inc
adc
adc
stc
jmp
and
je
jge
ds
imul
in
cmpsl
xor
mov
jg
inc
dec
and
hlt
int
movsl
pop
adc
add
add
cmp
or
fldpi
gs
xchg
adc
push
add
sarl
push
lock
repz
jge
jns
popa
aad
test
xchg
ret
xchg
sbb
pop
test
mov
jne
lcall
aad
mov
mov
cmp
arpl
xchg
inc
cltd
lahf
insb
aad
pop
adc
mov
fs
dec
insb
test
lret
push
scas
push
inc
mov
mov
imul
sub
int
cs
jmp
dec
and
mov
inc
aam
movsl
mov
addr16
insb
xchg
mov
shl
xchg
sbbl
xor
rcll
xor
stc
std
je
gs
fisttpl
sbb
into
inc
xor
xchg
xor
ljmp
dec
push
movl
xchg
les
and
daa
stos
insb
xchg
pop
lret
adc
lret
or
mov
imulb
jg
jecxz
add
in
clts
mov
add
cmp
mov
enter
mov
inc
adc
push
inc
aam
jno
mov
ret
and
popf
int3
dec
jne
inc
inc
leave
pop
cmp
or
das
mov
mov
inc
repz
sub
pop
cmpsl
shlb
or
cmp
add
nop
les
pop
and
fwait
mov
mov
pop
mov
sub
inc
mov
mov
push
adc
je
std
sub
jo
idiv
lea
cmp
push
in
sub
pop
rcrl
minps
stc
inc
fldcw
fcomps
out
dec
les
orb
push
mov
sbb
test
pop
out
inc
sbb
loop
test
cltd
mov
and
cmpsb
out
xlat
outsb
or
arpl
pop
movsl
repz
ss
adc
adc
mov
or
pop
pusha
stos
sbb
jne
nop
in
xchg
jg
cmpsb
mov
xchg
ds
adc
mov
inc
scas
dec
sbb
lock
imul
mov
jae
fucomp
xor
movsl
ficomps
iret
mov
xchg
call
cmp
out
popf
fdivrl
lret
adc
dec
mov
mov
cmp
negb
add
sti
jl
popa
jne
push
orl
lret
or
ja
in
repnz
sbb
pop
sub
mov
xchg
cmp
mov
xor
sub
leave
mov
xor
adc
fcmovnbe
lret
rolb
adc
ljmp
ficoml
int
xchg
jno
aad
xchg
lods
dec
popf
mov
mov
mov
cmp
popa
sub
sub
mov
es
jno
mov
loop
scas
lret
decl
cmp
mov
or
iret
imul
adc
xchg
insl
cs
out
test
mov
cmpsb
repnz
jge
ret
int
and
out
bswap
mulb
or
xchg
dec
inc
sahf
movsb
push
cmpsl
inc
cltd
ljmp
scas
aas
lret
in
adc
mov
xchg
popf
loope
sub
cmc
mov
mov
lds
bswap
push
xor
adc
das
xchg
jbe
jp
jnp
mov
fildl
data16
rolb
push
jns
xor
hlt
push
sbb
std
xchg
mov
popf
cmp
dec
and
mov
out
movsl
adc
cmpsl
ret
xchg
fisubs
push
lea
jo
adc
loopne
roll
mov
sub
je
test
xchg
mov
aaa
pop
cmp
jecxz
inc
adc
cmpl
push
lods
punpcklwd
loop
lods
cmp
cmpsb
inc
pop
mov
not
mov
movsb
sbb
and
mov
sbb
mov
xor
shll
inc
mov
dec
int3
inc
ljmp
ret
dec
das
repnz
sahf
push
rcll
das
mov
cmp
sub
ljmp
xchg
xchg
pop
js
or
test
and
and
mov
cmp
mov
push
adc
push
add
pop
lcall
mov
mov
adc
dec
outsl
dec
push
cltd
outsb
mov
mov
mov
pop
pop
enter
jl
adc
pusha
cmp
das
dec
test
pop
pop
lahf
jnp
lods
stos
enter
mov
jge
shll
inc
cmp
ljmp
push
mov
stc
jmp
mov
stos
pop
jae
dec
popa
inc
adc
and
fistpl
dec
add
mov
mov
pop
addr16
sbb
out
fimull
jb
inc
lds
sbb
mov
sub
in
test
mov
adc
push
jecxz
xchg
jns
adc
lcall
incl
and
aas
in
jne
or
ret
aad
test
sarl
cli
stos
aaa
pop
sbb
cwtl
out
xchg
shrw
or
xlat
xor
jo
cli
pusha
jb
jns
mov
sbb
push
mov
fiadds
sub
sub
jno
scas
dec
or
fs
inc
adc
push
adc
xlat
push
jo
mov
pusha
cmp
and
and
mov
sbb
or
inc
mov
sub
add
add
dec
mov
loop
sti
xchg
or
xchg
bound
push
cwtl
nop
sbb
lret
inc
push
cld
dec
pop
mov
jp
enter
push
add
inc
mov
xchg
xorl
cwtl
inc
aaa
bound
rorb
in
cmp
pushf
shl
lahf
dec
adc
mov
dec
ret
lods
sub
jp
cmp
orl
sbb
cwtl
inc
fstps
mov
lds
ljmp
leave
sahf
cmpl
xlat
cmp
inc
je
add
pushf
mov
scas
jge
xchg
jbe
dec
or
xchg
cs
lret
out
ds
sbb
pushf
xlat
adc
jno
repnz
cli
mov
inc
enter
arpl
push
popf
test
and
shr
iret
or
imulb
adc
test
cltd
insl
stos
pusha
icebp
dec
mov
mov
dec
fnstcw
iret
mov
aam
mov
int
movsb
fdivrl
movsb
cwtl
jo
filds
pop
and
dec
nop
mov
stos
and
mov
add
popa
adc
bound
jbe
cltd
pop
xchg
mov
push
cli
out
imul
je
sub
jns
loopne
mov
mov
or
sbb
sti
sarb
int
mov
pushf
mov
incb
orl
lret
loop
stos
or
outsb
imulb
ss
orb
cmp
loopne
xchg
dec
les
adc
inc
dec
cmp
mov
jb
jb
and
fs
xor
xchg
sub
out
push
mov
ljmp
add
in
mov
mov
fsubrl
jp
add
push
inc
and
repz
bnd
xor
dec
mov
loopne
inc
fisubl
inc
mov
lret
stos
cmp
in
mov
fldcw
sti
pop
push
out
inc
das
rcrb
rcll
inc
fists
ljmp
rolb
push
sub
out
mov
lret
gs
or
jnp
scas
fcmovb
fidivrl
call
inc
insl
mov
aam
push
mov
and
mov
and
mov
hlt
hlt
pop
jne
pushf
xchg
mov
loop
insl
and
adc
mov
divb
dec
mov
outsb
stos
push
in
mov
jnp
in
test
mov
ss
sub
inc
test
jmp
lock
js
repnz
mov
loope
cltd
sti
pop
movsl
mov
faddp
mov
popa
inc
mov
mov
test
lods
jo
pushf
cli
or
in
ficoms
data16
and
adc
insb
push
dec
out
dec
cmp
mov
dec
bnd
adc
fwait
and
cld
les
xor
jge
mov
jne
pop
fidivrl
adc
out
out
sub
leave
and
jns
inc
popf
jp
xorl
jbe
rclb
xchg
clc
push
out
ret
mov
stc
sbb
push
fimull
mov
inc
nop
and
add
xchg
lret
or
stc
gs
add
sbb
lods
sub
push
popa
pop
mov
fmull
jno
mov
dec
fldl
and
movsb
outsb
mov
xchg
sbb
rcrl
fwait
mov
push
xor
icebp
push
inc
negl
mov
xchg
int
xchg
ret
cmc
rcrb
es
mov
lds
cwtl
lea
pop
in
mov
faddl
loop
adc
scas
fadds
mov
insb
es
or
test
inc
inc
xchg
cmpsl
stos
and
mov
jg
pop
and
rcll
mov
ljmp
xchg
xchg
popa
lock
enter
and
push
adc
sbb
pushf
out
push
mov
or
pop
inc
or
sbb
pop
loope
aam
fstl
arpl
mov
sbb
cltd
jle
xchg
in
pop
mov
push
rorl
out
cli
fcmovb
add
lods
sarb
or
mov
sbb
sbb
xchg
mov
test
jo
aad
mov
pop
and
mov
rol
mov
mov
test
je
or
inc
stos
mov
and
out
dec
jp
xchg
pop
jmp
push
mov
ficoml
push
ds
pop
xchg
push
rcl
mov
fisttpl
xchg
or
xchg
and
repnz
lahf
outsl
ffreep
fisubs
into
jmp
pop
jecxz
in
insl
aam
add
mov
cmp
push
cmp
adc
xchg
sahf
in
jns
ret
sbb
loope
popa
push
fldt
cltd
xor
cltd
insb
jle
je
adc
aam
mov
add
pop
fadds
mov
ja
not
xchg
lahf
xor
fs
out
cmc
inc
inc
gs
addr16
pop
sahf
test
mov
dec
es
popf
cmp
push
out
mov
in
aaa
pop
jae
out
mov
lcall
push
sub
out
push
negb
mov
pop
push
enter
jecxz
int
jno
mov
mov
cmp
data16
out
int3
cmc
imul
insl
test
adc
sbb
cmp
idivb
aas
add
cmp
cmc
stos
inc
and
cwtl
push
sbb
jb
push
andb
bound
insl
cli
ret
push
mov
mov
inc
sub
loope
dec
dec
test
push
sub
add
mov
mov
mov
cmpsb
out
mov
jb
jb
inc
iret
sbb
mov
and
sbb
dec
adc
mov
fimull
xor
add
insl
gs
fldcw
pushf
mov
pop
mov
das
in
into
jle
pop
mov
fists
mov
add
cmp
adc
push
sar
imul
fdivl
insb
jne
and
push
adc
cs
cmpsb
sbb
das
push
lret
lret
out
mov
mov
lods
out
in
ljmp
cmp
in
pop
xchg
fwait
mov
add
sahf
push
js
loope
mov
ror
pop
dec
scas
pop
cmp
sub
repz
jg
lea
push
sub
xor
inc
or
adc
pusha
mov
mov
xchg
int
xchg
pop
push
xchg
cmc
mov
ja
mov
mov
xchg
pusha
out
sub
lock
inc
xrelease
cmp
and
fisttpll
out
je
cmc
sub
cwtl
xchg
outsb
mov
es
ret
pop
jmp
cmpsl
sbb
out
xor
movsb
push
lods
rclb
rcll
dec
cltd
lcall
sub
push
inc
xlat
sbb
push
sbb
iret
xchg
mov
sarl
fsts
into
gs
popa
lret
mov
je
popf
pushf
jge
add
push
insl
xchg
std
fnclex
call
in
outsb
inc
xchg
cmp
mov
mov
cmp
addl
pop
cmp
aaa
or
call
imul
outsl
pop
inc
or
push
into
dec
cli
mov
fisttps
xor
leave
pushf
aad
test
jo
cs
xor
loopne
add
fsubr
in
pushf
in
mov
sub
pop
popf
adc
stos
or
outsl
jp
lock
in
mov
sub
das
sub
ljmp
fmull
xor
add
xor
mov
sub
xchg
sub
andl
test
pop
push
add
lds
xchg
sub
mov
jno
inc
out
subl
xor
mov
into
test
push
shrl
bnd
push
repz
movsl
inc
lret
adc
subl
aas
xor
rcrb
sbb
and
jae
and
mov
adc
inc
iret
pinsrw
into
pop
movsb
in
fcoms
sub
adc
fwait
dec
push
cmp
movsl
jge
xorl
jb
xor
in
sbb
cmp
xchg
sub
xchg
cmp
inc
mov
cmp
xor
push
lret
sub
push
adc
pop
mov
out
and
popa
scas
int
push
dec
push
pop
aas
xchg
int
xchg
sub
inc
or
xor
je
aad
ljmp
repz
and
mov
sahf
jp
adc
sub
ja
fsubs
notl
outsl
in
daa
push
das
lods
pop
add
cmp
push
movl
or
sahf
and
movsl
sub
pop
cli
ja
inc
icebp
dec
or
es
ja
lds
pusha
pop
xchg
lret
imul
pop
dec
adc
pusha
ljmp
push
out
sbb
data16
es
es
inc
push
push
loope
or
addr16
icebp
inc
cmc
and
dec
or
cmp
mov
and
mov
scas
dec
fisubrs
inc
xchg
insl
xchg
out
lock
repnz
xchg
cmp
dec
daa
inc
push
inc
addr16
mov
mov
and
ds
ficoms
mov
lods
mov
sbb
imul
mov
push
cmp
or
cmp
sub
xchg
or
push
hlt
hlt
ret
cmpsl
push
cmp
int3
in
fidivrl
cmp
data16
jp
mov
jbe
sbb
sub
xchg
sbb
push
adc
and
jns
add
adc
and
imul
cwtl
lret
mov
jbe
arpl
dec
cli
lcall
push
adc
inc
pop
mov
es
push
mov
mov
mov
addr16
dec
xchg
outsb
mov
dec
mov
adc
push
lea
fdivs
push
mov
cmpsl
sbb
sub
dec
cltd
out
pushf
push
ja
mov
push
mov
cmpsb
repz
or
mov
inc
insb
and
inc
dec
push
sbb
aam
mov
sbb
mov
fistl
cmp
push
cmp
lret
jle
cmp
sub
mov
xchg
xor
rol
out
cmpb
dec
mov
stos
stos
shlb
sub
add
adcb
xchg
ja
scas
mov
sahf
outsb
dec
pop
test
aam
jno
sbb
xor
lret
ret
out
and
jg
xchg
repnz
stos
or
add
int3
repz
jne
lcall
xor
out
pop
inc
mov
xlat
dec
loop
cmp
xor
push
aaa
fsubl
cmpsb
jne
push
inc
sti
lret
in
xchg
xor
sub
popa
or
push
xorl
mov
lcall
cld
daa
jge
je
je
push
xor
or
cmp
int
push
dec
or
sbb
cmpsl
sahf
sbb
out
and
mov
mov
into
dec
push
hlt
lcall
stc
lret
test
push
push
pushf
inc
push
aad
fst
addr16
jle
es
addr16
out
pop
pop
add
mov
out
pushf
loop
adc
add
cmpsb
imul
icebp
add
pop
dec
imul
and
aad
out
push
ds
inc
sbb
addr16
jae
cld
xorl
dec
sub
in
lea
mov
ljmp
and
ret
stc
adc
in
adc
push
or
pop
cwtl
in
mov
cmp
push
mov
stos
cmp
mov
sbb
sbb
stc
and
inc
mov
xchg
push
sub
mov
and
push
outsl
and
repz
fcmovnu
dec
aaa
and
push
push
mov
add
sahf
mov
call
and
insl
adc
in
pushf
loop
add
pop
xlat
ror
iret
notl
or
je
cmpsb
xor
rcr
xorl
push
mov
fnstenv
lods
faddp
mov
xchg
mov
iret
sub
popa
or
sbb
movsl
cli
mov
xchg
push
out
jecxz
pushf
stos
lahf
sbb
jmp
push
out
lahf
adc
rclb
in
mov
scas
fldl
mov
sub
xor
fstl
movsb
dec
pop
adc
jg
stc
call
in
aas
add
inc
dec
add
test
xor
and
ljmp
fwait
push
dec
cmp
les
push
aad
jl
dec
push
in
or
cmpsb
adc
mov
es
sub
and
imul
jne
jbe
sahf
inc
push
adc
xchg
repnz
xor
xchg
cmp
mov
cmp
cmpsb
or
push
mov
test
das
mov
stos
and
adc
loope
or
fiadds
inc
pop
cmp
int
and
sbb
outsb
cmpsb
or
clc
es
flds
test
adc
push
and
rorb
mov
xchg
mov
gs
xor
mov
dec
into
ss
cld
sub
loopne
in
test
movsb
xor
add
les
inc
imul
fsubrs
mov
xorb
aam
xchg
dec
and
je
jbe
imul
icebp
inc
loopne
cmpsb
lock
adc
sub
cltd
mov
stos
push
xchg
test
mov
les
dec
ds
out
xor
js
mov
imul
arpl
mov
stos
and
std
jbe
sub
inc
clc
inc
jns
std
lret
mov
mov
mov
test
xor
cmpsb
in
add
insl
cmpsl
jb
jl
imul
add
decl
inc
mov
jmp
add
pop
es
ds
jmp
nop
sti
mov
clc
popf
stos
dec
movsl
cli
mov
test
push
dec
push
stos
shll
adc
and
push
push
and
adc
sub
add
cmp
rcrl
xchg
dec
jg
aaa
sti
cmpsb
out
adcl
jne
test
adc
xor
or
rcrb
ds
jo
popa
dec
loop
mov
push
ss
add
cmpsl
sahf
xor
lahf
xorl
arpl
into
mov
mov
data16
aad
outsl
enter
xor
mov
loop
sub
inc
scas
ss
lds
or
sahf
test
out
pop
or
xchg
inc
pop
xchg
jno
inc
xor
and
test
mov
div
out
in
sub
jecxz
test
xchg
jbe
jmp
xchg
xor
mov
divl
imul
dec
nop
push
out
pop
jae
inc
adcb
sbb
leave
lcall
std
sahf
xchg
iret
ja
int
nop
jnp
xchg
pop
and
mov
mov
mov
js
and
int
jp
jae
dec
and
xlat
sub
mov
faddl
mov
aad
and
inc
ss
daa
inc
mov
mov
mov
xchg
in
faddl
test
shll
pusha
adc
in
sbb
inc
xchg
xor
mov
lcall
gs
lods
imul
iret
pop
divl
in
adc
insl
pop
xchg
cmp
inc
loope
popa
leave
push
in
data16
ds
mov
call
xchg
mov
xor
loope
or
cmp
insb
mov
cmp
mov
and
jp
cmp
adc
add
into
movsl
dec
cmc
ror
lods
sub
test
jnp
popa
mov
push
sbb
rolb
push
pusha
movsl
adc
inc
or
adc
aas
jge
aaa
and
dec
xor
mov
push
jo
mov
sbb
mov
sub
test
ffree
xchg
push
inc
xor
push
es
pushf
or
xchg
test
add
xchg
movsb
test
adc
aaa
inc
push
addr16
in
xor
xchg
in
jns
sbb
orb
add
addr16
stc
sub
shlb
or
mov
pop
dec
cmpsb
mov
sbb
fsubrl
inc
rcl
popf
sbb
ja
cmp
repz
dec
jmp
add
loop
push
jb
test
daa
jne
mov
dec
sub
jb
test
fldpi
shlb
mov
add
ljmp
cltd
or
loope
xor
jle
imul
xor
fs
push
test
idivl
sub
outsl
in
jmp
jg
mov
sahf
cs
subb
mov
in
inc
aad
or
adc
gs
roll
jns
js
and
shll
imul
flds
in
push
push
rolb
mov
sub
lahf
in
or
cwtl
sub
pop
and
loopne
lahf
stc
cltd
test
test
mov
fs
enter
pop
aam
cltd
xor
andb
ret
mov
mov
mov
jae
sbb
xor
pop
ja
ret
imul
and
jns
dec
mov
pushl
int3
sahf
scas
or
mov
scas
cmp
xchg
or
pop
inc
mov
mov
inc
test
jge,pt
xor
pop
push
jmp
xchg
test
lods
rclb
mov
dec
sub
sbb
seto
push
fdivs
stos
mov
dec
mov
loop
pusha
std
gs
das
in
loop
call
movsb
in
dec
call
ret
shrb
push
sub
fldl
stos
xchg
ss
and
xchg
lret
ret
iret
imul
out
icebp
lods
mov
pop
mov
or
mov
aam
mov
fidivrl
dec
mov
popa
jb
cmp
mov
outsl
adc
cmpsb
es
cmp
stos
test
or
dec
adc
xchg
andb
stos
xchg
xor
imul
push
fwait
int3
or
pop
sbb
out
lahf
dec
sahf
cltd
sbbb
jno
mov
mov
test
jno
xchg
xchg
pusha
orl
aas
cmp
adcb
mov
andl
sbb
add
fwait
fwait
call
std
aaa
and
popf
push
mov
pop
sub
xchg
aad
test
nop
push
stos
jl
xchg
mov
cmp
sahf
pop
pop
pop
fcmovne
rorb
jae
push
dec
jecxz
scas
push
popf
mov
dec
cmc
sub
je
xchg
mov
sti
push
sbb
xchg
out
inc
dec
stos
sbbb
pop
mov
sbb
rol
fsubr
jmp
jp
pop
add
and
xlat
stos
push
dec
loop
or
into
popa
add
xchg
jbe
filds
test
icebp
inc
clc
pop
inc
rcrl
sub
frstor
dec
cwtl
adc
test
or
rolb
test
aaa
mov
lock
xor
iret
cmc
mov
and
pusha
jg
mov
dec
jg
inc
inc
les
shrl
mov
jge
lods
cs
xchg
push
repnz
faddl
xor
xor
test
outsl
fwait
or
call
xlat
sbb
cmc
and
push
mov
in
rcll
cs
add
sbb
and
add
push
jmp
lcall
xlat
or
sbb
lods
in
popa
sbbl
stc
adc
mov
inc
mov
mov
jo
push
call
sbb
lea
scas
mov
sub
loop
mov
and
xchg
add
call
popf
pcmpeqw
test
in
scas
pop
lahf
cltd
mov
popf
das
lds
outsl
fmull
mov
es
cmpsl
cli
mov
data16
mov
stos
orb
mov
push
cmp
dec
out
mov
xorl
nop
pop
jle
or
aas
and
xchg
je
mov
mov
fwait
jno
lahf
mov
shrl
inc
push
adc
lds
test
mov
or
push
in
jbe
je
pop
sub
inc
cltd
outsb
push
xchg
lret
and
push
mov
mov
jg
or
gs
scas
hlt
pushf
push
bound
fwait
addl
fistpll
cmp
arpl
test
bnd
mov
jle
sub
jb
ljmp
call
fnstcw
outsb
mov
cmpsl
and
fbld
aad
cmp
push
test
xchg
jp
xor
push
mov
fsub
and
sarl
lds
pop
addr16
adc
test
lret
enter
enter
enter
adc
xchg
fwait
jne
or
mov
jnp
inc
push
xchg
out
mov
fwait
lret
in
jbe
popa
push
or
lea
xor
cmp
fildl
clc
jle
xchg
repz
xchg
mov
es
mov
inc
sub
cld
jo
sub
cmp
xchg
mov
daa
clc
push
dec
cltd
out
divb
rcr
inc
and
in
loop
scas
sbb
inc
ret
fcompl
shrl
loop
pop
adc
repnz
cmp
jl
sub
push
cltd
sbbb
mov
cmp
push
loopne
cmc
daa
shll
mov
popf
cmp
mov
push
test
push
popa
inc
or
and
mov
cmp
dec
jg
stos
add
fnstsw
jbe
hlt
xor
cmp
jno
and
fdivrs
and
mov
in
cmc
adc
scas
pusha
add
adcl
testl
int
scas
mov
cltd
mov
in
mov
xchg
xor
mov
int
dec
jnp
pop
mov
cli
out
jge
arpl
pop
xchg
push
movsl
add
pop
mov
or
pop
and
cmp
xor
adc
add
ljmp
mov
add
adc
and
or
sub
pop
lods
loopne
shrl
sub
sbb
push
jg
cmp
adc
xchg
mov
add
lahf
jmp
les
mov
test
mov
push
jo
cmp
jns
and
and
cmp
dec
aad
orl
jg
mov
and
loop
aad
dec
adc
repz
es
lret
cmp
outsl
adc
adc
leave
in
aaa
repz
jecxz
mul
and
xchg
xchg
loopne
stc
mov
jg
icebp
mov
loop
std
out
sbb
test
jp
aam
in
cmp
scas
test
in
clc
sahf
faddl
mov
imul
pop
popl
pop
sub
push
mov
in
clc
jbe
mov
in
cmp
push
movsl
fwait
mov
add
cli
fldt
iret
int3
mov
jbe
mov
push
mov
xor
dec
popf
sub
fs
push
int3
push
aam
jge
in
sti
mov
ljmp
lea
and
lahf
loope
imul
enter
imul
dec
push
push
inc
pop
shrl
jmp
out
popf
sbb
icebp
dec
popa
popa
mov
xchg
fildl
jmp
add
mov
push
xor
jg
imul
sbb
bnd
push
fstps
xor
add
mov
adc
clc
push
cmc
out
pop
inc
jbe
add
add
mov
add
rorb
bound
iret
mov
or
sub
fstpl
pop
mov
in
gs
lcall
mov
inc
test
inc
jmp
adc
jnp
aam
sub
lock
push
inc
xor
lock
sbb
ret
int3
mov
push
jg
inc
pop
fs
jne
lret
push
lods
mov
pop
xchg
dec
js
int3
push
out
shrl
pop
xchg
in
test
jo
xor
pop
xor
arpl
in
insl
fcomps
notb
pop
bound
inc
pop
cmpsb
cmc
mov
xlat
mov
push
xor
pop
repz
in
mov
scas
loope
rorl
mov
sar
lods
or
xor
add
mov
fdivrp
out
or
xor
or
lock
push
ds
pop
sahf
int
shlb
sbb
pusha
inc
cmp
mov
pop
into
or
add
jl
push
or
in
sub
xor
jle
lods
sbbl
rcr
es
lret
push
sbb
call
mov
mov
out
sub
xlat
das
pop
dec
dec
out
ds
cli
lock
or
lcall
jb
xorl
or
test
imul
push
jo
dec
dec
lds
mov
test
or
loope
addr16
popf
movsb
dec
inc
sub
aad
mull
nop
jbe
or
or
fs
dec
dec
jnp
fs
rcll
pusha
push
dec
mov
fiadds
andb
into
psrlw
addr16
ret
push
arpl
adcb
in
jo
rcrl
push
int
lret
test
icebp
cld
mov
xor
ljmp
insl
jno
push
lock
adc
ret
mov
mov
stos
ja
mov
add
hlt
add
sbb
push
dec
mov
mov
loopne
lock
jnp
ficoms
jb
and
adc
jbe
das
sub
push
loopne
mov
mov
jle
inc
mov
test
jmp
test
daa
stos
inc
xor
push
mov
rclb
mov
aam
ljmp
xchg
std
les
arpl
imull
xor
xchg
adc
xlat
jl
sub
adc
movsb
addr16
and
scas
leave
out
inc
adc
mov
shll
mov
pop
adc
sbb
sarl
cli
xchg
ja
ss
ss
push
stos
jmp
pop
ljmp
ss
inc
jp
gs
in
sub
lret
xchg
repnz
loop
aad
mov
hlt
push
mov
or
out
stos
ret
inc
push
outsl
pusha
into
jne
xchg
sbb
fnsave
dec
jg
clc
xchg
cmp
cmc
fisubl
xlat
cmp
xor
or
adc
add
cld
loopne
les
ljmp
mov
and
push
cmp
aam
push
cmpsb
add
xlat
sub
aaa
dec
and
cld
leave
stos
cs
fisttps
mov
pop
jecxz
and
aas
out
mov
pop
rcrl
loope
mov
inc
clc
popa
push
sarl
jl
lahf
movsb
jle
pusha
jbe
mov
push
mov
add
ret
push
lock
sbb
jae
dec
sahf
cmp
push
xchg
rorl
data16
mov
frstor
lock
or
je
cmc
mov
adc
inc
lea
sub
clc
mov
mov
stc
adc
cli
data16
mov
pop
arpl
in
movsb
dec
lret
adc
lock
inc
or
lahf
mov
fsub
out
ret
sub
cmp
ja
push
mov
xlat
xchg
aam
jecxz
push
dec
loope
xchg
aaa
out
mov
in
cltd
mov
inc
ss
jae
ds
aaa
xor
fimuls
jp
jne
test
mov
mov
jns
mov
xchg
out
enter
jns
add
jae
inc
iret
xor
pop
sbb
out
dec
shlb
iret
and
insl
fxch
sub
and
pop
mov
pop
pop
pop
lret
fbld
enter
mov
jae
cmp
aam
pop
aam
xor
jnp
mov
xchg
in
cmc
push
add
movsb
stc
inc
lea
mov
je
add
push
sbb
sarb
orl
lock
lcall
xchg
jo
rcrl
insl
scas
cmc
push
or
std
xchg
ja
inc
faddl
scas
mov
movsl
lea
rcll
push
jo
mov
mov
dec
mov
and
mov
xchg
test
stos
jo
sbb
xlat
lret
sub
xchg
mov
add
and
addl
cltd
in
jg
jne,pt
add
mov
xor
out
test
dec
or
cmpl
mov
outsb
jo
aad
notl
pusha
inc
rorl
dec
xor
push
xchg
xor
xchg
insl
cs
fwait
push
mov
adc
fcomps
cmp
jg
cli
mov
out
jnp
in
cltd
lahf
cltd
test
mov
sbb
in
push
pop
jg
shrl
ds
push
roll
jae
stos
cltd
push
ljmp
jle
cmp
jmp
push
lods
test
jg
inc
loope
mov
inc
adc
outsb
repnz
sub
lods
fldenv
ds
push
cmp
mull
push
xor
sub
in
int3
ds
bound
inc
aaa
outsb
xorb
sub
sarb
mov
in
and
sub
ret
jmp
pop
xchg
add
adc
cmp
sti
xchg
inc
sub
sub
jle
out
push
add
out
test
ds
mov
cs
imul
orl
and
adc
mov
test
jl
lds
jl
out
dec
push
mov
mov
into
int3
lret
cltd
lods
xor
jae
mov
shlb
mov
mov
out
cld
jmp
xchg
es
jns
or
sahf
and
cli
adc
mov
xor
xor
xor
inc
ficompl
adc
xchg
ljmp
mov
add
fisttpl
mov
cmp
pop
aam
push
dec
sbb
rcr
adc
arpl
mov
les
pushf
and
clc
cmp
mov
dec
or
mov
mul
cmp
lret
xor
jg
negl
gs
aad
jno
xor
les
lods
jl
pop
sub
xchg
aad
lahf
shlb
loopne
shlb
dec
add
mov
imul
push
cmpb
pop
adcl
out
and
pop
inc
xchg
or
lea
enter
jmp
xchg
cmp
and
cmp
dec
dec
je
dec
fldenv
jge
testl
test
xlat
aaa
and
cmp
mov
inc
ret
or
mov
pop
add
push
sbb
xchg
bound
cltd
xchg
dec
jo
test
xchg
in
cmp
icebp
xchg
loopne
js
mov
mov
jns
mov
sbb
sub
cmp
pop
mov
mov
loop
push
icebp
std
pop
out
xchg
push
cmc
inc
mov
xor
repz
ja
rcll
mov
mov
add
mov
push
mov
xchg
cmp
std
adc
inc
push
push
jge
imul
out
xchg
jle
fs
pop
mov
push
dec
lock
and
jo
notl
and
std
xor
cmpsb
leave
pop
sbb
mov
aaa
cmpsl
or
mov
inc
ss
jae
pop
or
mov
cld
adc
pop
pop
nop
aam
pop
dec
fdiv
pop
and
adc
dec
jo
leave
in
mov
inc
mov
arpl
mov
outsb
or
mov
sbb
push
pop
mov
outsl
dec
mov
mov
movsl
ljmp
stos
push
xor
data16
sti
adc
push
es
clc
mov
jne
xchg
out
push
push
scas
ret
add
adc
sub
ffree
cmp
gs
hlt
imul
sbb
popa
push
push
cmc
sti
pop
xor
sbb
lds
jecxz
dec
dec
mov
loop
mov
js
es
sbb
pop
xchg
cmp
cmp
lock
push
fucomi
or
rol
sub
xor
xchg
aas
push
std
jmp
mov
cltd
inc
lahf
jo
cli
push
imul
loop
xor
adc
repz
loope
arpl
xchg
les
xor
movsb
pop
or
fists
ja
in
out
aad
adc
or
stos
cmp
mov
jno
ja
mov
push
or
jo
mov
stc
daa
jns
or
dec
push
out
sbb
mov
out
sbb
divl
inc
dec
dec
outsb
repz
xchg
aas
sti
scas
add
test
push
inc
push
test
in
mov
test
xchg
jg
and
push
mov
cs
adc
inc
int3
out
jae
imull
lret
push
insl
dec
fnsave
xlat
test
xor
push
mov
sbb
sbb
xor
and
push
movsb
scas
mov
and
popf
push
out
jl
sar
cmp
inc
into
cltd
cwtl
dec
sbb
lods
mov
pop
pop
imul
xor
xchg
sbb
fdivrs
aad
push
mov
mov
cmp
mov
jl
cmp
push
inc
pop
and
jno
aas
lods
cmp
push
shl
and
lret
ss
xchg
fsincos
adc
pop
sub
jnp
cli
mov
lods
pop
stos
adcb
xor
inc
ret
push
shrl
xchg
dec
movsl
fcompl
int3
dec
push
ffreep
inc
mov
jo
jmp
popa
sarl
add
pop
scas
int3
aam
push
xchg
nop
pop
gs
jp
scas
out
lret
push
sub
sub
pop
pop
mov
jbe
jns
testl
pop
mov
stos
pushf
inc
shrl
xchg
fidivl
aad
pop
lcall
stos
jae
imul
sbb
mov
push
sbb
cmpl
jo
mov
pop
movsl
ret
push
idivb
pop
test
xchg
mov
and
jle
int
stos
fcom
aas
cmp
inc
inc
and
push
out
jne
xor
push
lods
or
dec
jo
int3
aaa
jae
jge
out
out
insb
js
jl
fsubs
stos
or
lret
push
das
fimuls
jge
scas
cmpsb
push
cmp
xor
ljmp
sbb
arpl
inc
push
out
xorb
into
or
jbe
lret
or
aam
xor
mov
dec
aad
scas
lahf
movsl
dec
test
pop
push
iret
out
neg
loopne
in
fdivrs
xchg
sub
clc
xlat
ss
iret
cmp
dec
cmp
mov
loope
xor
shl
pop
outsb
and
dec
aad
pop
sti
das
das
push
popf
out
xor
icebp
test
aad
cli
jo
jo
jg
cmp
rol
or
xchg
les
push
pop
cmp
pop
arpl
test
insl
and
pusha
sbb
cmp
xor
pop
mov
loop
adc
sti
mov
clc
mov
dec
push
mov
dec
pop
jbe
fistps
xchg
fwait
insb
adc
fidivl
sub
into
push
pop
sbb
pop
jecxz
clc
lret
and
or
arpl
test
daa
push
ljmp
pop
xchg
and
movsb
ss
iret
pop
ds
sub
jmp
jl
outsb
int3
cs
or
adc
rorb
shll
inc
cli
pop
jecxz
mov
ds
xlat
fidivrs
daa
rorb
add
ffree
shll
test
dec
pop
push
pop
ret
ret
movsb
ss
lahf
sub
bound
lret
cmp
cmp
imul
and
jno,pt
dec
pop
pop
cmp
imull
mov
adc
mov
cmp
jle
sbb
ss
sbb
pop
ret
fnsave
lea
fcom
outsb
ljmp
test
xorl
mov
hlt
movsl
xchg
adcl
loopne
or
xor
dec
mov
divl
repnz
out
insl
pop
xchg
inc
psubusb
aas
int3
inc
mov
jmp
icebp
xlat
xor
das
decb
lcall
xor
and
pop
arpl
and
push
ficoms
daa
hlt
pop
jmp
or
push
enter
mov
jmp
jne
in
jecxz
lds
mov
pop
scas
adc
and
imul
pop
rolb
jl
in
push
inc
and
ja
push
push
pop
jb
addr16
xchg
lock
jg
cmp
ret
call
and
xchg
repz
scas
sar
hlt
loop
adc
push
mov
sbb
cltd
and
and
sub
pop
int
xor
jbe
movsl
and
cli
inc
lea
mov
data16
icebp
fstpt
test
mov
xchg
and
test
jle
xchg
ret
push
xor
mov
out
mov
out
stc
shrl
stos
lret
ficomps
popa
in
mov
in
jno
cmp
xchg
mov
jne
push
mov
or
mov
mov
in
cmpsb
jp
sub
pop
xchg
jg
cs
call
push
jecxz
outsl
mov
cli
sbbl
pushl
popa
fnstenv
popf
lret
lods
push
and
mov
inc
xchg
insl
hlt
push
mov
adc
stos
push
inc
rcrl
pop
call
push
fwait
mov
pop
in
mov
loopne
mov
push
push
sbb
outsb
push
push
jp
in
in
insl
cmp
xor
xchg
cmp
fdecstp
mov
mov
adc
xchg
pop
cltd
fmul
pop
jno
js
jmp
sbb
mov
pop
fxam
aam
ret
adc
push
cmp
lds
xor
out
jnp
pop
push
sbb
push
mov
icebp
cmpsl
gs
push
xchg
fimull
mov
cltd
pop
jno
arpl
mov
xchg
adc
and
out
dec
cmpsl
xchg
dec
pop
bound
mov
adc
dec
cmp
in
sbb
adc
call
sub
or
mov
push
fdivp
dec
sub
add
repnz
orl
test
mov
dec
mov
or
adc
add
lea
or
mov
sub
idivl
mov
inc
scas
lock
stc
cmpsl
sub
in
arpl
jbe
xchg
mov
adc
sbb
cmp
into
jmp
mov
jecxz
xchg
dec
pop
mov
cs
into
fucomi
mov
cmc
das
pop
lcall
add
mov
stos
or
std
clc
jecxz
sub
gs
mov
sbb
mov
into
cmp
and
push
addr16
les
je
dec
sti
imull
shrl
lret
sbb
mov
xchg
movsl
shl
pop
and
call
mov
pop
sbb
jae
inc
adc
addr16
pop
out
sub
mov
xchg
test
dec
fadds
jne
imul
movsl
jbe
into
add
mov
jmp
aaa
dec
inc
push
test
pop
cmp
push
dec
jge
hlt
mov
stc
das
jecxz
in
clc
into
cmp
imul
mov
jo
jno
sub
stos
test
jae
out
sbb
test
aad
mov
repnz
add
xchg
lahf
and
sub
arpl
rolb
cmp
add
mov
aas
aam
cld
dec
pushw
push
leave
pushf
das
lods
lahf
fiadds
add
cmp
shl
jge
fucomip
pop
outsl
imul
call
mov
xor
data16
cmpsl
int3
sbb
fdivrl
stos
test
push
push
and
or
nop
iret
jns
push
lds
lods
or
loope
jmp
imul
push
mov
hlt
mov
cmp
daa
add
xlat
in
adc
sub
iret
cld
push
fadd
jne
pop
jo
roll
inc
xchg
dec
xchg
lret
fcmovb
insb
cwtl
sub
or
jp
or
fcom
fisubrs
inc
popf
pusha
mov
mov
les
imul
push
jle
stos
inc
add
enter
movl
add
cmpsb
and
mov
imul
fstpl
mov
sbb
jle
pusha
jge
push
sub
mov
and
push
ret
pop
mov
ret
rcrb
in
gs
lahf
pop
xchg
ret
loope
mov
inc
cmp
push
mov
stos
popa
scas
mov
sbb
cmp
jge
ss
push
sbb
mov
popf
push
mov
jbe
insl
jmp
and
int3
xchg
mov
xor
repz
js
cmpsb
cmp
hlt
mov
sbb
sbb
fisttpl
rcll
mov
push
xchg
aas
pop
dec
or
inc
into
xchg
sbb
mov
test
mov
loope
pop
mov
sub
push
into
incb
icebp
cmp
std
dec
jae
scas
aas
cmc
in
stos
dec
xor
lods
aas
push
ret
out
pop
mov
xchg
pusha
jb
mov
je
lahf
cltd
sub
popf
dec
hlt
push
outsb
stos
test
test
mov
adc
push
popa
mov
xor
push
fisttpl
xchg
negb
lock
dec
add
push
mov
dec
mul
push
xchg
adc
mov
xor
dec
ret
cs
test
popa
add
add
or
sub
imul
add
fs
test
mov
mov
cs
mov
fs
out
movsl
sbb
stos
sarl
mov
lods
inc
adc
pushf
pop
mov
xor
out
add
enter
mov
lods
popf
cmp
pop
cli
jecxz
lods
xor
cmp
push
repnz
notl
sbb
cmp
dec
nop
loope
push
nop
lret
mov
lods
div
or
pop
mov
and
pop
in
in
repz
and
cmc
lea
xor
in
pop
jp
add
mov
aas
in
aaa
cmp
stos
out
hlt
fs
not
sub
in
rorl
dec
adc
fistps
incl
addr16
cmp
push
mov
testb
stc
sahf
filds
sahf
in
sub
xchg
sbb
push
pop
loop
push
push
scas
in
push
fmull
inc
jne
push
mov
insb
pop
jae
jecxz
cmp
and
rol
xor
sub
fistl
adc
cmp
xchg
lahf
xlat
or
sbb
leave
arpl
test
cmc
add
adc
out
je
fs
push
fwait
fwait
pop
std
stos
xor
sub
and
fimull
mov
ret
jne
mov
das
fldcw
mov
and
sub
sahf
mov
das
enter
mov
or
das
into
subl
adcl
lcall
push
xor
cmc
add
inc
add
fwait
je
or
sti
mov
rol
test
inc
cmc
push
test
cltd
repz
or
stos
aam
ja
xchg
pop
subl
and
repnz
dec
loope
jnp
mov
jb
enter
repnz
xchg
cmpsl
mov
sti
xchg
scas
aad
rcrl
push
add
xor
mov
ror
fwait
cmpsb
xlat
mov
cltd
fidivrl
out
mov
cltd
ja
and
xor
cmpb
jnp
lcall
dec
enter
adc
dec
jp
fcomps
inc
sbb
aaa
inc
test
add
das
cmp
dec
rcrl
sbb
in
test
pop
push
insb
int3
sti
fcos
xor
add
in
add
scas
push
xor
and
insb
lret
popf
and
pusha
add
mov
xor
faddp
fsubrs
in
jb
int3
dec
mov
loopne
mov
mov
dec
repz
aam
rcr
lcall
cmovae
pop
ljmp
mov
jecxz
push
stc
pop
fs
cmp
adc
rcrl
stos
stos
dec
mov
ret
push
xor
int
rcll
mov
or
repz
cmc
subb
add
std
jbe
aam
lahf
in
inc
iret
mov
xor
mull
loop
js
mov
and
clc
lret
popa
stos
icebp
cmp
shll
push
sahf
push
rorl
in
jg
aaa
xchg
inc
js
push
sub
cwtl
push
in
or
lahf
cmpl
push
popf
scas
call
add
mov
pushf
inc
push
shrb
mov
pop
leave
mov
sbb
mov
mov
outsb
pop
mov
sub
out
add
add
lea
sbb
xchg
cld
call
xchg
outsl
mov
dec
push
and
cld
pop
pop
sub
iret
iret
dec
push
dec
inc
add
jnp
es
pushf
jnp
mov
pop
lret
rorl
test
cmp
push
fwait
fs
lret
pop
stos
int3
lret
rorb
adc
ja
popa
les
test
mov
adc
out
cmpsl
sahf
xlat
mov
inc
fstpt
andb
ret
test
mov
std
mov
cmp
fiadds
dec
xchg
aam
fstl
add
mov
push
in
jge
hlt
and
faddp
mov
and
push
sub
popa
mov
clc
lret
test
jne
cmp
dec
xor
sbb
add
fidivs
mov
inc
add
into
xchg
cmp
push
and
xchg
sarb
enter
xchg
in
scas
iret
mov
fyl2x
hlt
ret
jbe
cltd
and
pop
xor
xor
imul
popf
js
push
fnstcw
mov
aaa
push
insl
outsl
push
cld
int3
decb
fwait
pop
xchg
mov
mov
hlt
inc
inc
push
test
dec
and
aad
xchg
xchg
mov
incl
imul
fimuls
push
pushf
sahf
adc
into
cmp
je
dec
sahf
stos
shlb
inc
xchg
pop
pop
pop
jge
test
repz
xor
adc
inc
cmpsb
std
add
sbb
xlat
clc
ret
mov
jg
inc
ret
push
push
lods
and
mov
testl
fisubrs
clc
ret
inc
xor
xorb
sti
fdivrl
and
hlt
aam
xlat
jg
inc
inc
icebp
in
in
fsubrl
add
pop
and
shrb
inc
jb
dec
inc
jp
hlt
mov
mov
mov
rol
jmp
dec
jns
repz
stos
jns
mov
xchg
popf
sub
sbbl
test
into
add
push
nop
dec
rclb
mov
pop
das
sub
cs
fists
popa
sbb
testl
lcall
xor
lods
std
ljmp
fwait
aaa
mov
xchg
inc
cmp
data16
pushf
lcall
inc
mov
cmp
movsl
lock
jge
push
xor
into
out
and
add
test
scas
pop
insb
sub
cwtl
mov
jns
push
dec
or
and
xchg
xchg
push
and
xchg
popf
adc
aam
xchg
sub
rcrb
sub
push
into
pop
shrb
or
loope
das
rcrl
nop
fwait
ret
loopne
xor
fcmovnb
pop
rol
xor
pop
stc
mov
loope
push
push
push
mov
and
hlt
pop
push
push
push
dec
mov
fisttpll
jecxz
and
rcrb
jno
mov
pop
stos
xchg
shl
insl
es
push
punpcklwd
gs
cmp
jb
test
pop
ds
jmp
fsub
fwait
lods
and
or
mov
and
js
push
add
mov
movsl
cmp
dec
stos
in
jne
aaa
ljmpw
xchg
pop
test
dec
popa
sbb
gs
outsl
sub
test
movsb
clc
shll
jne
add
and
or
dec
or
jl
inc
enter
insl
mov
std
mov
adc
stc
adc
nop
out
mov
inc
mov
stc
jg
inc
pop
mov
xchg
subl
icebp
into
lret
in
inc
mov
xor
ss
mov
push
push
movsb
call
xchg
insb
xchg
hlt
add
lcall
test
xor
cmpsl
cmpsl
mov
add
shl
out
imul
ljmp
shrb
pusha
inc
lods
es
and
mov
mov
xlat
mov
adc
jns
scas
nop
sbb
insl
jne
sub
and
scas
jg
and
adc
scas
jo
sub
pushf
das
aad
dec
lret
cmc
mov
dec
jmp
call
lea
imul
adc
sub
sbb
mov
xchg
mov
pushf
xchg
loopne
mulb
fcmovu
movsb
sub
or
scas
aaa
imul
mov
mov
adc
cmp
pop
into
push
lret
sub
jb
jl
mov
in
in
dec
repz
pop
xchg
xor
ret
sub
cmp
xor
fidivrl
ret
not
pop
push
push
enter
mov
fldt
bound
jl
movsl
lock
sub
sub
xlat
xchg
sbb
jle
sub
xor
dec
jno
or
push
cmpl
pop
int
push
sbb
pop
xchg
mov
jae
sub
cld
jae
push
int3
scas
subb
pop
and
xlat
xchg
insl
inc
xor
inc
push
shrl
and
lea
dec
bound
imul
std
inc
bound
sub
push
cmp
insb
clc
jp
mov
mov
std
test
pusha
mov
or
mov
into
lds
jp
cwtl
adc
pop
test
mov
movsb
adc
movsb
aaa
ret
sub
push
adc
out
cli
cmp
jle
ljmp
xor
jnp
pop
add
sub
push
cli
cmp
cmp
fs
or
iret
adc
add
out
hlt
mov
leave
lret
insb
subb
lods
cmpsl
ret
in
mov
lea
push
iret
push
sub
mov
mov
insb
or
andb
subl
test
shll
inc
lahf
pop
iret
mov
loopne
popf
lcall
cmp
sbb
out
xchg
cmp
repnz
popa
xchg
xchg
fildll
ds
adc
adc
negl
xchg
xchg
iret
out
jns
inc
sahf
xchg
pop
lret
aas
out
or
jo
xchg
mov
out
inc
jge
in
or
mov
jb
xchg
roll
in
test
or
push
jge
inc
jg
mov
stc
and
lods
pop
rclb
mov
test
cs
movsb
int
fldcw
cld
es
out
int3
push
imul
test
mov
and
and
mov
adc
stc
ljmp
fisubs
clc
pushl
int3
gs
fbld
sahf
shrl
xlat
xchg
mov
mov
pop
or
stc
xchg
dec
adc
test
push
pusha
and
adc
pop
and
jno
mov
dec
loopne
lea
mov
icebp
lret
ret
add
je
jb
push
xchg
addr16
inc
fnstsw
xchg
jns
jnp
loope
dec
mov
out
mov
sbb
ret
das
loope
call
push
and
jno
test
cmp
xor
into
inc
imul
insl
popf
jmp
xor
outsb
dec
popa
sarl
mov
mov
ds
cwtl
inc
shll
int
loope
iret
xlat
cmpsb
add
fwait
orl
outsl
mov
or
mov
scas
dec
out
movsl
mov
jb
lock
add
jmp
dec
cmp
xor
das
lret
aaa
push
mov
icebp
cmp
sub
sub
nop
push
pop
mov
inc
mov
mov
fstpl
pop
inc
les
lods
pop
dec
rorl
je
aaa
into
sub
shl
rcrl
clc
in
sahf
loope
cmp
ss
xor
repnz
adc
pop
adc
nop
pop
in
fists
nop
ljmp
pop
loop
jne
adc
popf
insl
daa
nop
scas
test
div
cmp
mov
mov
jns
pop
cwtl
loop
lcall
andl
xchg
adc
loopne
ret
scas
mov
mov
cmpsb
addr16
mov
cld
adc
ss
lock
aas
pusha
sub
stos
dec
lods
push
test
cmpsb
sub
out
imul
repz
stc
hlt
and
jmp
std
scas
adc
aaa
test
jl
xor
test
fsubrl
mov
repz
mov
stc
fs
or
cwtl
push
push
pop
and
jp
stos
inc
int3
sub
mov
mov
mov
pop
adc
mov
add
popa
pop
decb
cltd
imul
in
lock
dec
push
outsb
rcl
jecxz
fildll
test
sahf
cli
jmp
jmp
iret
popf
popf
inc
rclb
call
adc
adc
xchg
push
fdiv
fwait
imul
out
ja
xor
xchg
push
fdivp
xlat
repz
fs
jl
andb
dec
jnp
adc
loope
rcll
out
lods
mov
adc
mov
and
add
gs
lret
cmp
dec
sub
mov
fcompl
divps
fldt
sti
js
iret
lcall
mov
ret
mov
ror
add
mov
or
movsb
cmp
mov
test
xchg
cli
pushf
cmp
and
sbb
xchg
and
push
and
mov
adc
sbb
out
jno
inc
lds
adc
inc
aam
loopne
imul
push
inc
ja
roll
pop
mov
lcall
dec
add
lret
pop
jbe
adc
sub
popf
jecxz
rorb
mov
mov
cmp
mov
imul
pop
push
mov
cld
fsubs
dec
in
filds
dec
enter
sbb
repnz
add
jmp
or
int3
sbbl
pusha
xor
sbb
lea
cmpsl
fmuls
jp,pt
adc
leave
les
sbb
pusha
xchg
arpl
cs
gs
and
pop
inc
rcrb
dec
pop
jecxz
fdiv
out
scas
js
cltd
enter
leave
sub
repnz
das
mov
xchg
sbb
sbbl
or
mov
pop
rorb
inc
jbe
mov
fdivl
in
mov
and
popa
cmp
cmp
dec
dec
mov
sbb
int3
fldcw
push
push
pop
icebp
add
cld
dec
or
push
adc
fsubrp
imul
mov
push
js
mov
xchg
xor
inc
es
pusha
pop
out
mov
scas
jp
push
xor
lcall
xor
sahf
jnp
jge
out
sub
fisttpl
pop
pop
dec
or
add
xor
stos
cmp
dec
cmpsl
ret
xchg
cmp
outsb
pop
adc
and
mov
dec
dec
and
or
daa
cltd
fsubrs
pop
push
xor
js
push
mov
mov
sub
pop
jge
jne
ficoms
push
jno
lret
cmc
scas
pushf
mov
or
jle
pusha
dec
adc
xor
inc
sub
mov
pop
mov
dec
nop
cmp
mov
or
pushl
pushf
popa
dec
xchg
jmp
mov
jbe
lcall
mov
sub
cmc
xlat
add
loopne
dec
mov
dec
andl
dec
call
cmp
mov
push
imul
enter
xchg
fcomps
jno
push
fidivrl
cwtl
sbb
xor
sbb
popf
adc
add
repz
out
dec
xchg
jbe
dec
mov
jp
mov
lret
loopne
mov
pop
repz
stos
scas
in
in
icebp
sub
push
fnstenv
push
inc
mov
dec
jne
cs
sbb
pop
cmc
sbb
repz
sub
xor
lret
jmp
les
mov
push
popf
mov
mov
push
xor
dec
addr16
shl
inc
cmc
dec
push
push
inc
pop
mov
and
lods
imul
mov
repz
push
in
pop
pop
cmp
out
dec
loope
stos
add
leave
popf
or
pop
and
out
sbb
lcall
sub
mov
call
fmuls
or
push
std
imul
loope
push
pop
lcall
rcrl
mov
mov
add
adc
lds
cmp
fbld
scas
pushf
jp
adc
and
mulb
adc
jae
btr
lds
mov
jge
mov
stos
inc
pop
push
mov
push
out
pop
mov
mov
adc
das
push
cmp
jo
adc
in
stos
sub
lds
push
dec
push
xchg
or
jecxz
jge
add
jle
mov
mov
lcall
sub
xor
ss
xor
xor
rcr
and
insl
cmp
cwtl
inc
push
mov
push
jbe
sbb
xchg
inc
bound
mov
cmp
jb
mov
xchg
jne
rcll
pop
push
outsb
ds
jne
pop
cmp
fs
dec
mov
loopne
mov
bound
hlt
adc
lret
push
in
xor
dec
sarb
jb
xchg
fidivrs
loope
add
int
sub
aas
idivb
popf
pop
xor
push
mov
push
in
lods
mov
mov
fsubrl
insb
sub
mov
xchg
popf
int3
hlt
adc
movsl
js
in
sti
dec
cmp
cmp
cwtl
repz
mov
xor
sub
adc
adc
pop
mov
into
lock
fwait
mov
pop
shll
sbb
xchg
push
orb
jle
mov
clc
stos
xor
imul
mov
std
push
jno
loope
out
pop
jle
std
nop
inc
cmp
sbb
ljmp
outsb
jno
adc
cmp
jmp
testb
xchg
lds
movups
xrstor
sub
add
stc
cmpsl
lds
test
int
add
mov
fcmovnb
das
jo,pn
mov
aam
mov
pop
cmp
jno
sahf
xor
testb
xchg
imul
arpl
jg
push
mov
adc
std
jmp
push
repnz
icebp
jae
mov
mov
aaa
mov
cs
push
popf
mulb
dec
aaa
sbb
test
test
pop
pop
cmpsl
jbe
rcrb
lcallw
push
mov
pop
inc
icebp
and
in
sbb
mov
imul
cmpsl
sbb
imul
push
jne
and
sub
inc
in
sbb
xlat
adc
pop
push
dec
movsb
mov
cmp
xor
jae
add
inc
and
adc
jmp
pop
and
int3
lods
xchg
dec
out
mov
mov
insl
int3
pusha
xor
cmp
into
jb
mov
jge
pop
dec
cld
sub
into
ljmp
xorl
shlb
mov
jb
sahf
daa
not
sub
cmpsl
rcll
test
dec
xchg
testl
or
jne
mov
in
insb
mov
mov
aad
pop
fcmovu
je
or
in
int3
ss
mov
in
pushf
push
push
test
pusha
das
imul
in
push
ret
or
out
mul
xor
push
fisttps
je
pop
sbb
lea
ret
out
xchg
xlat
repz
dec
jle
mov
ficoml
xchg
pop
or
sahf
and
vmovsd
mov
cmp
aaa
sub
pop
in
out
and
in
pop
pop
dec
outsl
ljmp
mov
xchg
shl
lods
cmp
iret
lods
popa
xchg
hlt
movsb
outsb
push
fldenv
scas
mov
inc
xchg
into
cmp
dec
out
rclb
xchg
adcl
and
or
pop
xchg
insb
popf
shlb
dec
cmp
push
mov
dec
xchg
adcl
mov
insb
cmp
fists
cmp
dec
dec
cmp
dec
cmp
imul
and
inc
push
fmul
mov
push
adc
lods
cmp
iret
jecxz
ds
dec
test
xor
stc
popf
push
mov
and
popf
jmp
mov
cmp
adc
aas
lcall
leave
jbe
cmp
outsb
icebp
insl
aam
mov
gs
mov
ret
ret
dec
inc
repz
and
addl
xchg
add
inc
mov
mov
pop
mov
ror
jno
testl
xor
out
sbb
mov
jne
add
shlb
pop
sbb
lahf
insl
loop
pop
mov
fmull
pop
jbe
inc
sub
data16
lret
sub
mov
cli
movb
cltd
aad
mov
pushf
inc
in
mov
movb
int
push
push
push
fs
pop
ret
push
cwtl
adc
mov
push
add
in
ss
cmpsl
dec
in
sbb
es
dec
jo
xchg
das
sbb
xchg
call
mov
mov
inc
push
or
mov
out
subb
xchg
jno
iret
jecxz
cli
dec
lock
jmp
sub
mov
cld
or
ror
dec
inc
pop
push
imul
in
add
mov
mov
sti
sti
pop
pop
xchg
mov
pop
jo
push
stos
into
test
and
cmp
js
shll
cli
lods
pushw
lods
loope
mov
and
lret
xchg
jb
lret
lds
push
sahf
sarb
into
sbb
in
aam
cmp
iret
xor
pop
inc
cmp
adc
push
mov
jne
xchg
fxch
adc
push
inc
jbe
subb
test
cmp
pop
lods
enter
ds
dec
push
std
nop
jle
push
push
dec
adc
mov
inc
jae
pop
xchg
mov
pop
out
popa
inc
sti
mov
adc
mov
cs
pop
xor
xor
aaa
mov
imul
xchg
xchg
lret
std
mov
mov
stos
mov
roll
and
mov
outsl
cmp
mov
cmp
jmp
jmp
gs
rol
mov
push
imul
sti
jbe
mov
mov
popa
adc
les
cmc
add
add
rclb
sub
ss
lahf
jge
push
sbb
adc
je
loopne
insb
iret
adc
test
daa
leave
jp
push
addr16
inc
loope
add
jns
or
xlat
mov
sub
xchg
cwtl
test
fcoml
mov
mov
xchg
das
imul
je
adc
cmp
dec
jbe
rorl
and
inc
jge
stc
xchg
mov
cmp
push
adc
dec
pushf
or
add
mov
loop
push
mov
inc
rcl
sub
sub
mov
jno
adc
decb
repz
mov
lcall
jge
xor
in
cmp
push
add
enter
or
ds
or
scas
lock
mov
sti
xchg
xchg
ret
mov
aam
push
mov
fisubrs
adc
das
pop
aam
lods
inc
sub
addb
rorl
aam
lret
cs
ljmp
loope
scas
lret
push
or
lods
adc
push
pop
bound
rclb
mov
pop
xchg
push
jnp
sub
jb
xorb
jnp
clc
int3
sub
popf
jmp
pushf
xor
cmc
push
scas
and
roll
cs
cmpsl
mov
scas
outsl
out
pop
pop
dec
pop
fists
fs
xchg
pusha
dec
loop
xor
xor
push
loopne,pn
sti
adc
mov
lcall
sub
sbb
in
and
loope
sbb
add
negl
fadd
xchg
mov
leave
jns
out
adc
push
push
xorb
test
outsl
push
fsubs
cmp
add
cli
adc
movsl
sarb
and
cmpsb
and
and
jno
popa
dec
aaa
adc
inc
clc
sub
cmc
lock
cmp
cmp
pop
aas
sar
out
insb
cmpsl
mov
shrb
mov
adc
aaa
bound
shll
aaa
add
adc
pop
or
ljmp
mov
push
roll
in
fstpl
xchg
inc
jecxz
mov
push
mov
fwait
jne
dec
sarb
mov
and
in
adc
js
call
cmp
xchg
push
int3
xchg
pop
mov
fwait
and
fiaddl
lretw
das
add
shrd
jl
jo
in
dec
lea
push
sbb
aaa
int
jecxz
aas
sbb
cmpsb
sub
and
dec
jge
leave
inc
lods
ljmp
mov
cmp
dec
int3
pop
xchg
mov
add
cld
cmc
mov
mov
inc
jl
aas
xchg
jnp
enter
jo
es
mov
icebp
movsb
xlat
jne
mov
addr16
sub
cmp
mov
filds
pop
or
roll
icebp
cmpb
cmc
or
push
iret
ret
mov
xchg
push
ljmp
sub
out
cmp
lcall
sbb
cmpl
sbb
mov
mov
jmp
dec
or
out
inc
mov
out
fstl
push
addr16
loope
aas
out
in
insb
pop
orb
xor
xchg
repnz
test
div
leave
movsb
ja
hlt
adc
mov
aam
jne
repz
inc
push
pop
out
rorl
mov
arpl
inc
loope
add
das
lds
and
adc
xor
mov
test
gs
push
xor
mov
inc
fildl
adc
and
xchg
punpcklwd
enter
mov
push
enter
dec
inc
hlt
pushf
lahf
dec
or
adc
arpl
jo
push
pusha
loop
sub
jl
ljmp
fsubp
pop
sbb
mulb
and
int
jae
mov
push
xor
and
aad
sub
test
sbb
xchg
ds
lret
pop
fwait
mov
data16
insl
lock
inc
sbb
enter
movsl
leave
sbb
xchg
leave
out
out
jbe
mov
mov
and
sbb
mov
fs
mov
fists
sub
sbb
xor
fdiv
fwait
ret
cwtl
dec
adc
cmp
in
lcall
pusha
ss
std
orl
sub
into
rorl
pop
pop
mov
mov
lahf
repz
andb
cld
dec
sbb
je
adc
cld
cmp
clc
mov
mov
cmp
xor
out
movsb
mov
addb
js
push
pushf
push
pop
es
sbb
insl
inc
sbb
pushf
cmp
test
shlb
cmpb
cld
bound
ret
sub
add
push
js
mov
push
adc
jp
cltd
repz
iret
add
mov
out
mov
jb
nop
fildl
dec
fwait
pop
xchg
fwait
repnz
loop
inc
cli
push
lret
adc
cmc
fcmovb
stos
dec
test
rcrl
or
outsl
xchg
imul
cmp
sub
rcrl
ja
cmp
es
sbb
jl
xchg
pop
cmp
outsl
mov
scas
std
sahf
lcall
cmp
sbb
push
mov
cmp
sti
scas
pop
shll
push
mov
inc
in
sbb
insl
lahf
in
addb
insb
jae
mov
sbb
sbb
cwtl
xchg
insl
inc
cmp
pop
mov
jae,pt
test
jecxz
mov
enter
or
ja
inc
fs
daa
and
dec
les
lahf
int
mov
push
push
xchg
mov
mov
inc
cmp
cli
sub
inc
sbb
sub
jmp
push
push
jge
cmp
pop
fcmovnu
mov
cmpsb
xchg
mov
out
paddb
pop
add
adc
jno
std
add
clc
sti
fmuls
jle
and
push
xor
add
cld
faddl
lea
out
push
testb
subb
or
andl
stos
dec
or
fsts
sbb
inc
xchg
sbb
scas
cmp
push
scas
hlt
fndisi(8087
xor
xor
add
cltd
imul
mov
cs
imul
push
outsb
xchg
xor
out
dec
and
lds
push
jno
add
scas
mov
movsb
push
mov
mov
inc
and
mov
cmc
loope
ja
mov
lods
stc
mov
dec
cmc
mov
cmpsb
lods
jns
imul
mov
pop
ret
sti
lds
mov
xor
push
daa
sti
add
jae
mov
jne
add
out
enter
fstl
mov
iret
scas
out
rcll
hlt
testb
push
push
cld
jnp
fdivrl
fcoml
add
cmc
rclb
fistpll
xchg
jb
dec
sbb
mov
mov
pusha
imull
pop
mov
ret
sti
and
or
sbb
insl
inc
pushf
add
push
lods
cmp
outsl
lods
dec
or
outsb
pop
outsl
mov
push
cwtl
sbb
mov
push
push
mov
fldl
cmc
nop
test
dec
cwtl
sub
mov
adc
jle
push
xchg
xor
cmp
xorb
jnp
stos
lea
test
in
jle
or
mov
in
push
pop
sbb
mov
push
dec
jmp
xor
inc
push
or
mov
pushf
mov
dec
mov
aaa
in
mov
mov
and
push
cmp
adc
cmp
int3
mov
and
rclb
mov
test
rorl
in
enter
pushf
aad
or
movsl
adc
xor
call
or
inc
xchg
jg
nop
xor
stos
fdivrl
jmp
js
cmp
in
pop
adc
or
ret
jecxz
jno
fwait
aam
sbb
lret
jle
or
jl
adc
jmp
repnz
mov
shrl
sbb
les
daa
fs
loopne
mov
test
xchg
fadds
dec
sbbb
sarl
out
in
jo
mov
sbb
ret
or
or
cmpsl
clc
mov
in
sub
arpl
xor
push
clc
jle
mov
fcomi
fistps
lcall
stos
outsb
pop
mov
adcl
lahf
gs
cmp
xchg
icebp
push
sbb
cmp
mov
dec
push
inc
ror
pop
dec
sbb
mov
mov
push
ja
mov
push
mov
sbb
loope
xlat
or
and
pop
scas
fwait
sub
popf
mov
inc
out
push
int3
outsl
sub
jns
outsl
stos
adc
sbb
inc
add
add
ljmp
dec
pop
jmp
xor
cmpsl
shll
pushf
jge
fstl
sub
adc
mov
jecxz
nop
push
mov
aas
jbe
sbb
std
sti
or
mov
jecxz
popf
cmp
inc
add
mov
mov
pop
push
jbe
add
pop
inc
cmc
int3
jecxz
mov
cmc
into
or
imul
sbb
add
testb
mov
fistl
jnp
and
add
sub
add
mov
mov
adc
mov
mov
adc
or
repnz
jne
adc
sbb
pop
adc
sub
xor
pop
scas
sub
leave
pop
xchg
insb
mov
push
xchg
lock
add
add
push
or
in
push
cltd
lock
sub
ficompl
and
push
jne
mov
cmp
addr16
jb
std
insl
fdivrs
push
mov
mov
sub
sahf
mov
loop
sti
cmpsl
mov
inc
adc
and
adc
sarb
fistl
faddl
mov
bound
push
fidivrs
dec
movsb
add
pop
mov
mov
in
mov
cmp
jnp
and
cmp
xchg
nop
adc
insl
sbb
mov
lcall
hlt
jp
jns
jo
je
test
and
jo
out
dec
fcompl
cmpsl
je
lahf
inc
lcall
push
jp
pop
or
push
in
jbe
pop
les
nop
ficoms
pop
movsb
mov
jae
pop
adc
inc
jnp
out
push
ljmp
ds
lahf
bound
inc
xor
lret
or
dec
outsl
cmp
inc
adc
jns
dec
shl
pop
inc
cs
in
xor
movsl
and
sbb
pop
pop
js
xor
sahf
dec
xor
aad
nop
cmpsl
push
mov
bound
and
sub
in
or
movsb
icebp
xor
cmpsb
jg
add
dec
cmpsl
mov
ror
enter
cmc
xlat
adc
jno
sahf
jb
fs
js
fcmove
out
xchg
test
movsb
arpl
mov
pop
lret
fsubr
cmpsl
mov
xor
insb
push
sti
sbb
push
xchg
inc
mov
pop
jno
or
lods
insb
inc
mov
jns
mov
cmc
shrb
mov
mov
dec
iret
pop
push
jecxz
out
xor
push
xchg
enter
iret
and
push
sbb
jge
mov
mov
cmp
xchg
mov
mov
loopne
inc
jb
mov
repnz
pop
xor
test
sarb
imul
inc
out
out
nop
sub
shl
xor
lds
and
inc
ljmpw
icebp
mov
in
fisubl
xchg
push
in
lret
jbe
mov
mov
lods
jns
lods
shl
add
inc
imul
cmpl
mov
sub
sar
xor
jb
jecxz
lods
cmpsb
sub
xchg
loope
jbe
leave
ss
rcr
negl
cltd
inc
repnz
repz
add
push
or
cwtl
and
or
adcl
xor
and
inc
fs
pop
rclb
fincstp
outsl
mov
loopne
in
cmp
fwait
loopne
add
jge
in
notl
in
push
sahf
fists
andl
imul
icebp
fdivrl
mov
mov
orl
sahf
mov
in
adc
cmp
adc
mov
jg
imul
jecxz
call
mov
pop
lahf
xchg
test
pop
ds
aas
js
jb
sbb
cmp
dec
lds
outsb
push
iret
mov
setg
jo
out
popa
das
xchg
or
sbb
mov
cmp
movsl
cld
xchg
jle
cmp
push
adc
jae
inc
or
pop
jp
shlb
cmpsl
leave
jno
cltd
xor
jecxz
or
gs
incl
sbb
push
mov
xor
jb
cld
mov
div
imul
insl
add
in
sahf
adc
sub
inc
mov
jbe
pusha
sbb
imul
push
jge
iret
mov
push
sti
pop
clc
cmp
cmp
imul
and
jg
shlb
and
xor
or
idiv
movsl
mov
sbb
out
xchg
sbb
fstpl
jp
pushf
inc
xchg
push
and
add
mov
xchg
or
pop
gs
orl
inc
add
xchg
push
insb
xor
ljmp
lods
jae
and
std
daa
cmpl
push
add
fsubp
mov
xor
xor
mov
lds
jg
jge
mov
dec
xchg
push
test
scas
jnp
and
scas
into
neg
bound
roll
enter
repnz
jge
dec
or
ret
push
dec
sub
xchg
dec
pushf
lods
xor
mov
daa
cli
ficoms
roll
pop
pushf
mov
mov
decl
pop
decl
inc
jecxz
int
mov
or
push
iret
mov
leave
int
mov
inc
movsb
test
insb
shrl
std
repz
xadd
in
xor
test
rorb
shlb
add
mov
js
jno
jg
lretw
imul
daa
pop
lret
les
imul
cmc
sub
repnz
add
ret
or
cwtl
shlb
or
mov
add
andb
cmp
popl
jle
shlb
ja
das
xchg
mov
push
push
jae
pusha
jp
or
mov
xor
mov
nop
in
sub
dec
pop
ds
shll
sub
or
lret
mov
fwait
lcall
xchg
or
or
pop
push
stos
adc
sbb
jo
ss
imul
fcompl
scas
enter
addr16
out
inc
jg
lcall
fndisi(8087
pop
lea
sbb
int3
std
fldcw
mov
out
xor
enter
hlt
pop
sbb
push
sub
dec
or
loop
jnp
push
loopne
dec
push
fistl
pop
sub
lea
hlt
in
ljmp
std
mov
lret
rcrl
mov
fs
sub
push
cld
clc
sub
xor
push
cmpsb
add
clc
cli
inc
enter
stos
pop
and
dec
nop
mov
xlat
cmc
add
mov
add
test
ds
sahf
mov
jne
adc
cwtl
dec
fcmovb
stos
test
inc
xchg
adc
sub
push
subl
nop
jns
cmpl
adc
into
divb
and
jmp
cld
or
or
xchg
hlt
outsl
fsts
inc
ss
xchg
cltd
pop
dec
lock
adc
sub
and
cmp
cltd
movsl
push
xchg
fs
cmp
mov
push
adc
sbb
out
sub
lds
rorb
negl
cmpsl
inc
mov
push
enter
push
hlt
or
rolb
cmpsb
dec
aaa
adc
dec
int3
stos
filds
pop
sbb
out
xorl
cwtl
pop
pop
inc
mov
imul
fsub
fcoml
or
add
sahf
pop
ja
sbb
pop
add
enter
rcll
xchg
out
js
icebp
and
add
mov
lock
or
in
add
scas
lods
lea
dec
xchg
std
lahf
or
fmull
insb
cmp
sub
xchg
popf
or
mov
and
mulps
jns
addb
out
mov
adc
in
xchg
mov
loop
pop
aam
dec
dec
imull
xor
lret
enter
test
notl
test
push
mov
jle
stc
dec
idivl
in
test
out
cmpsl
pop
cmp
scas
inc
sbb
adc
lret
shll
jb
pop
mov
xchg
add
mov
cmp
push
dec
mov
xchg
enter
stos
andb
jbe,pn
xchg
sbb
insb
mov
std
jle
adc
pushw
aam
hlt
add
ficoml
fmull
or
lar
out
sbb
aad
cmpsb
fisubl
add
test
rcrb
push
xor
mov
inc
xchg
js
push
push
inc
nop
loopne
jp
xlat
mov
mov
bound
pushf
mov
push
std
pop
sub
mov
insl
mov
nop
fldcw
stos
jae
inc
sti
popf
ret
mov
push
add
and
ja
and
add
divl
pop
jle
shll
mov
push
pop
add
sti
pop
std
iret
push
stc
xorl
pop
outsb
xor
push
stos
xchg
inc
sahf
push
dec
imul
mov
movb
stos
mov
cld
test
fnstsw
adc
fdivrs
arpl
loopne
sbb
pop
mov
imul
mov
aaa
mov
lret
enter
mov
ret
insb
fdivrs
leave
stos
in
in
mov
fmuls
test
pushf
sub
jg
inc
cmp
inc
fiaddl
nop
je
enter
jne
pop
pop
pop
mov
ret
dec
in
arpl
pusha
test
cld
pop
int
fwait
mov
lcall
jmp
cltd
out
adc
add
xlat
call
cmpsb
mov
pop
mov
pop
cmpsb
iret
pop
mov
fmul
and
dec
out
imul
lea
cmp
leave
push
mov
lahf
addr16
pop
adc
jge
ret
leave
mov
stos
cld
popf
movsl
cmc
mov
mov
mov
not
sti
fwait
out
ret
repnz
lods
or
rcrb
addr16
and
or
push
jbe
xchg
cld
sub
push
xchg
jmp
cmc
add
repnz
ret
cmp
sub
mov
mov
cmc
dec
adc
movsb
nop
cmp
jg
mov
loop
loope
dec
inc
fcomps
out
cmpsl
push
mov
push
xchg
push
and
add
clc
cmp
stos
icebp
mov
mov
cmp
leave
inc
xchg
mov
int
sarb
pop
mov
lret
adc
xlat
sahf
dec
adc
int3
test
xchg
inc
mov
sbb
or
xchg
push
jle
mov
lret
mov
or
sub
popf
push
mov
pop
aam
add
stos
push
push
jo
insb
inc
repnz
sbbb
sub
cmp
add
adc
repnz
movsb
shl
fistpll
pop
dec
aas
pushf
aas
shr
sahf
xor
loopne
and
push
push
cmp
ja
or
pop
xorb
mov
dec
fcoml
xchg
or
mov
sbb
jmp
cmp
push
jno
mov
cmc
ficomps
gs
call
dec
jle
divl
scas
movsb
movsl
test
cmp
jbe
in
sub
and
aas
cmp
lcall
pop
outsl
xchg
or
ds
call
dec
ret
shrb
xchg
inc
or
out
mov
mov
mov
jp
test
xor
scas
and
xchg
fnsave
cli
aad
lods
mov
adc
loope
in
mov
vmovntps
repnz
scas
test
add
ficoml
inc
inc
int
jmp
xchg
jno
xor
lahf
fwait
or
mov
push
stos
in
mov
or
pop
pop
xchg
mov
cs
mov
adc
inc
inc
lea
shl
orb
push
fcompl
push
xor
and
repz
jns
and
jns
pop
or
shr
adc
mov
nop
xor
or
pop
cli
push
dec
dec
push
test
dec
pop
sub
das
jp
clc
das
mov
mov
lock
cmp
fildll
and
sti
jbe
dec
mov
push
xchg
sar
mull
int
push
dec
iret
repz
sbb
fsub
mov
jnp,pt
xor
stos
cmp
pop
jne
scas
mov
fcmovbe
jecxz
push
movsl
pop
ljmp
dec
push
mov
push
outsl
mov
sub
mov
and
roll
mov
call
call
or
sbb
sbb
xchg
pop
sbb
pusha
cmp
aam
cmp
jmp
sbb
fnsave
std
stc
nop
out
addb
les
test
push
addr16
sbb
inc
mov
pop
inc
xorl
icebp
sahf
aam
mov
lcall
je
xchg
addl
add
inc
inc
mov
mov
ror
cli
inc
aaa
xor
pop
dec
adc
mov
rcrb
cmp
dec
push
and
and
adc
ja
jmp
outsl
inc
xor
xchg
ret
fpatan
mov
aaa
push
ljmp
int3
push
imul
jmp
push
cmp
shlb
cmp
dec
xchg
aas
xrelease
pop
add
mov
cmc
push
cli
iret
cmp
addr16
inc
ja
add
and
jae
inc
pop
jns
or
sti
mov
imul
arpl
into
xchg
out
icebp
fsts
add
in
push
dec
mov
or
add
sub
in
out
jnp
test
sar
imul
cmp
adc
dec
lock
cmp
int
jns
sub
jmp
jo
mov
add
test
jnp
iret
sbb
imul
mov
jae
sub
mov
cld
imul
mov
clflush
and
sarb
call
mov
shll
popf
jp
decb
mov
movsb
xor
pop
sub
in
mov
int
or
sub
add
scas
fsts
cmpsl
movsb
addr16
mov
scas
call
pop
or
cmp
and
loopne
sub
add
cwtl
fmull
ret
mov
cmpsb
push
sbb
leave
call
sbb
daa
cmp
ljmp
jp
testl
pop
out
jae
neg
lds
rcrb
call
cmp
xchg
mov
sub
push
mov
ja
dec
xchg
sti
fwait
sub
jg
sti
lcall
int3
mov
nop
xchg
dec
int3
ss
fimuls
subl
loope
das
scas
out
fstpl
or
subl
int3
adc
jnp
pop
aas
dec
sbb
push
ja
fwait
es
xor
cmpsl
sub
sbb
or
gs
mov
mov
mov
lods
inc
call
ds
mov
dec
std
add
call
sbb
repz
pop
xor
cld
inc
and
ficoml
insl
out
imulb
push
pop
cmp
aaa
in
dec
aad
idiv
xchg
std
add
push
addr16
mov
stc
push
pusha
xlat
scas
loop
jge
adc
xchg
push
jns
sbb
xor
add
je
stc
dec
dec
jecxz
push
push
ljmp
jno
push
mov
pop
jno
mov
jmp
mov
addr16
les
jmp
sub
mov
mov
shrb
cmp
dec
adc
insb
inc
popa
js
xor
adc
movsl
sbb
and
dec
stos
repnz
jmp
and
gs
pop
dec
pop
inc
cltd
fnstcw
enter
inc
add
repz
cmovnp
icebp
cwtl
bound
inc
push
xor
lods
outsb
movsb
iret
sub
push
xor
jge
pushf
aam
push
xchg
cmp
pop
cli
fiaddl
mov
or
cmp
int3
or
outsb
int
push
adc
or
fwait
dec
add
inc
sbb
addr16
jmp
push
jp
subl
jecxz
xchg
nop
xor
sbb
jnp
out
fisubs
leave
arpl
mov
mov
xor
mov
pushf
mov
fstl
jno
cli
ficoml
sarl
lods
xorb
cmp
rcrl
mov
aaa
and
test
jg
lcall
jo
or
ret
jae
adc
addl
inc
sbbl
jb
in
cmp
negl
lea
jmp
dec
dec
rcrb
ss
jmp
and
mov
adc
push
pop
lds
add
loope
sbb
xor
inc
int
fidivs
inc
insl
mov
int
iret
jb
xchg
clc
ss
jg
jl
movsl
xchg
cmp
int
fidivs
mov
vpaddw
dec
mov
icebp
lahf
mov
punpckhdq
mov
call
mov
daa
gs
adc
cmpsb
push
popa
pop
mov
push
push
sbb
ret
push
hlt
jmp
pusha
aaa
loope
inc
pop
cmp
subb
fstpt
and
scas
xor
stos
inc
inc
add
loopne
inc
push
sub
inc
test
add
sub
cmc
push
jae
xchg
cmpsl
cmp
mov
popf
sbb
cmc
lcall
into
std
pop
lock
pop
and
xchg
outsl
jo
int
aas
push
es
jb
mov
test
sub
inc
dec
nop
movb
pop
shr
aaa
dec
mov
insl
mov
mov
dec
shl
and
fldcw
test
sbb
lea
in
push
dec
icebp
push
jno
jmp
lds
stos
push
mov
std
sahf
mov
push
out
rol
scas
cmp
cmp
cs
add
stos
cmp
arpl
cmp
or
push
shll
inc
popf
cmp
push
mov
fisttps
jbe
xchg
xor
in
add
mov
dec
mov
fnstenv
xchg
xor
and
mov
or
dec
jb
dec
pop
push
mov
sbb
movsl
pusha
push
xor
repz
adc
mov
int
cmp
cmc
inc
addl
xchg
test
and
outsb
inc
xchg
nop
xor
sbb
push
mov
dec
mov
andl
xchg
inc
adcb
repz
xor
dec
or
inc
push
popa
xchg
popf
out
pop
pop
and
stc
jae
adc
xchg
test
push
in
ret
push
scas
push
cmp
shrb
adc
idivb
sahf
fdivl
fistpl
iret
test
stos
sbb
test
adc
sub
push
out
mov
addr16
sahf
push
test
scas
fdiv
xchg
sbbl
sub
dec
and
jge
jge
and
enter
jg
inc
test
xacquire
idivl
pop
inc
cmp
jb
insl
or
rcrb
xor
int3
fmull
in
mov
test
cmp
push
sbb
inc
push
jg
add
xlat
aaa
imull
pop
dec
mov
sub
daa
push
mov
test
mov
shl
test
scas
jecxz
xor
mov
or
adc
insl
mov
sbb
fisttpl
dec
pop
sub
jo
pop
ret
fidivs
mov
fwait
ret
fdivrl
inc
int
in
movsl
in
scas
dec
mov
test
sub
mov
lock
arpl
inc
adc
jo
adc
bound
clc
andb
insb
fcmovnb
sbb
jl
outsl
sti
arpl
inc
mov
inc
mov
ds
inc
dec
pop
xchg
in
in
jns
ljmp
out
push
sbb
xchg
daa
mov
lcall
aad
dec
rolb
fcompl
mov
add
pop
inc
stos
cmc
xchg
add
mov
in
cmpsl
add
aas
jo
jg
adc
imul
aas
and
mov
mov
loop
stos
test
out
jl
mov
xchg
je
and
out
lock
lock
mov
lock
sbb
mov
jge
aad
cld
sbb
hlt
enter
xor
scas
cmp
push
jae
sti
lret
cltd
xchg
mov
jns
jl
push
in
cmp
push
jbe
xor
aas
dec
bnd
mov
and
xchg
mov
mov
int3
xchg
ljmp
imul
adc
mov
dec
sbb
sahf
shr
pushf
in
cltd
idiv
lahf
popf
into
nop
inc
test
mov
imul
jmp
lcall
daa
xchg
insl
inc
inc
cmpxchg
les
mov
sub
sub
inc
in
push
dec
stos
jg
data16
mov
add
idivl
push
xor
or
push
call
fiaddl
imulb
mov
lods
hlt
inc
aad
sbb
les
lcall
push
cmp
mov
sahf
cld
mov
sysenter
cmp
mov
subb
daa
aam
dec
jge
cli
aad
mov
sbb
and
das
sahf
es
roll
hlt
mov
jmp
outsb
dec
jbe
rcll
lds
mov
jb
test
add
mov
mov
add
cmpsl
dec
adc
mov
lock
sbb
push
test
aam
cmpl
xchg
mov
mov
fwait
pop
test
clc
mov
loop
pop
cmp
mov
pop
and
popf
sub
out
nop
test
call
jne
es
xchg
mov
sub
xor
pushf
xor
lods
adc
test
mov
popa
dec
dec
cmc
jb
xchg
out
icebp
ficompl
mov
loope
cwtl
mov
xor
pop
loope
test
jecxz
push
push
xchg
xchg
push
repnz
outsl
out
out
xor
out
cmp
push
lods
negl
repnz
or
fcom
out
jno
in
xchg
jge
jnp
cmp
mov
inc
or
data16
jg
popa
popl
xchg
dec
test
and
loop
sbb
int3
mov
xchg
loop
ljmp
xchg
aas
dec
and
loope
push
cwtl
ljmp
cmpb
mov
pop
push
inc
insb
mov
scas
jge,pn
pop
xor
popa
inc
loope
out
mov
into
mov
les
gs
cmp
sub
mov
daa
mov
push
sub
or
mov
mov
jns
pop
push
jge
into
xor
popa
lds
sbb
xchg
sub
pop
sub
imul
lret
and
pushf
mov
movsl
and
aad
ljmp
push
dec
clc
pop
sbb
lock
push
or
bound
lret
and
test
or
cmp
test
out
pop
sar
fcompl
lds
stc
stc
lcall
adc
mov
loopne
mov
je
xchg
imul
orl
imul
inc
or
add
outsb
mov
inc
addb
cmp
jp
sub
inc
mov
ret
lahf
jne
push
cmc
sahf
push
std
lahf
neg
adc
jp
rep
sub
movsl
xchg
xor
clc
cmpsb
insb
add
in
stc
in
movl
nop
shr
aaa
and
dec
cmp
mov
arpl
xchg
dec
rcrl
mov
add
pusha
inc
mov
mov
iret
rorb
out
inc
or
inc
cmc
pop
xor
mov
mov
push
pop
inc
push
xorl
sbb
bound
sub
push
jnp
mov
out
inc
icebp
mov
and
xchg
push
sbb
ljmp
out
cmc
jb
loop
mov
mov
dec
mov
fbstp
mov
shll
test
addb
mov
aam
aas
test
push
or
jecxz
add
cmc
test
leave
lods
inc
cmp
pop
mov
js
movsl
dec
imul
shlb
mov
xor
ds
imul
not
cs
push
in
mov
stos
in
in
cmp
mov
js
jnp
cvtdq2ps
xchg
mov
or
aaa
les
pushf
xchg
mov
lret
fistps
jae
jmp
mov
out
mov
je
repnz
or
enter
pop
inc
test
mov
out
test
imul
cs
push
ret
popf
loop
jns
push
mov
std
sub
xlat
dec
and
and
scas
push
xlat
fiadds
push
jo
loope
lea
test
sarb
pusha
call
loopne
push
pop
mov
jge
inc
iret
cmp
bound
dec
dec
arpl
lock
xchg
push
lcall
add
cmp
div
add
or
xchg
mov
dec
mov
iret
dec
in
pop
ja
inc
fs
fcom
int
sarb
dec
dec
xchg
cltd
arpl
or
popf
scas
stos
mov
iret
pusha
scas
mov
arpl
or
or
xchg
mov
lods
fdivl
or
and
divl
daa
sti
gs
and
jno
mov
int3
mov
popf
push
movsl
jbe
fcompl
mov
jns
mov
cli
mov
popf
test
testb
lea
mov
inc
sbb
mov
pushf
ficoml
movsb
bound
aaa
mov
icebp
mov
cmpl
test
ds
pushw
and
dec
xchg
iret
jo
repnz
mov
dec
dec
xchg
je
test
push
iret
cwtl
push
xchg
icebp
addr16
ret
lahf
mov
and
ss
aaa
adc
fimuls
xor
test
fsubl
mov
and
repz
sahf
lahf
xorb
call
pop
lret
clc
mov
push
inc
repz
aam
fsts
mov
fidivl
add
push
push
test
int
leave
sbb
sbbl
lahf
cld
cmp
mov
sahf
pop
xor
pop
fwait
leave
adc
sbb
mov
jp
jns
insl
xchg
cmp
or
repnz
mov
es
daa
insl
push
xor
mov
and
pusha
pop
inc
stos
mov
sti
add
mov
hlt
mov
xorb
in
stos
xchg
and
jle
aam
jmp
and
mov
xchg
test
dec
lock
and
popf
aas
and
rcl
aad
dec
cmp
cli
jns
call
jbe
stos
idivb
add
shll
mov
fsts
pop
push
xchg
mov
leave
lcall
orl
jns
incl
ds
sbb
inc
add
inc
pushf
push
arpl
add
jo
adcb
mov
dec
sbb
lret
pop
stos
add
sbb
loopne
jecxz
dec
test
or
sbb
enter
pop
shlb
scas
jae
xchg
mov
cmpsb
lock
shll
iret
popf
stos
dec
out
cmp
xor
mov
lcall
sarl
scas
movl
arpl
jo
jle
in
insb
xor
or
mov
inc
sub
sub
xchg
sub
std
popl
or
jae
sbb
ret
pop
out
pop
inc
shr
xchg
daa
dec
stc
sbb
fldenv
cltd
inc
icebp
adc
test
test
pop
xchg
imul
jle
push
stc
inc
aas
outsb
das
mov
fildll
arpl
lds
push
sbb
je
inc
mov
inc
pushf
insb
inc
mov
ficoms
fsubr
test
pop
push
insb
add
or
jnp
dec
jmp
xlat
fnstsw
push
dec
mov
jb
lods
cmc
loop
cmpsl
sbb
mov
shrl
clc
jbe
inc
idiv
sarl
dec
faddl
ficoms
mov
pop
pusha
pop
arpl
push
outsb
mov
add
adc
movl
arpl
scas
cmp
fdivr
lock
and
dec
cmc
push
cwtl
jl
pop
mov
cld
sub
rclb
hlt
pop
sub
cmp
shlb
mov
stc
cmp
jno
daa
cld
jmp
into
jecxz
decb
insb
out
lret
fcomi
aas
es
int
pop
and
sbbl
adc
push
mov
outsb
pop
clc
and
add
je
mov
pushf
push
and
rol
dec
sbb
sbb
in
mov
stos
xor
push
js
adc
mov
inc
pop
jns
push
inc
sahf
mov
lret
and
jge
andl
dec
fldt
mov
adc
adc
push
xchg
adc
mov
out
and
or
adc
add
mov
stc
mov
lock
cwtl
push
adc
push
pop
xor
sub
xchg
and
jne
outsl
adcb
ja
mov
pop
mov
mov
lret
in
mov
dec
dec
mov
ss
sbbl
mov
mov
inc
lods
xor
or
div
mov
jl
mov
push
outsl
loope
cmp
sub
pop
rorl
data16
push
and
mov
cmp
pop
mov
push
sub
lret
add
and
addr16
test
popl
rorb
cmp
xlat
ljmp
mov
adc
sbbb
int
cld
mov
add
sarl
cwtl
and
jge
fld
cmpsb
lods
ss
pop
mov
outsb
xor
lods
and
test
mov
push
gs
repnz
jl
gs
pop
and
pop
push
sub
ds
mov
add
sbb
xor
xchg
jo
mov
or
cmp
xchg
cmp
push
ret
pop
adc
cmpsl
sbb
jo
insb
push
xor
inc
adc
xchg
sti
shll
mov
mov
lea
std
out
adc
ds
loope
popa
cmp
sub
cmp
add
leave
xchg
das
inc
movb
sub
iret
es
jns
sarb
jg
push
outsb
shlb
andb
out
xchg
cmp
dec
mov
out
rcl
loope
lret
shl
mov
sub
pop
push
push
scas
mov
sbb
lcall
ret
jbe
xor
xor
mov
ja
scas
mov
nop
sbb
lds
icebp
add
inc
xchg
mov
je
cmpsl
xor
mov
test
test
rclb
pop
lret
push
iret
sbb
lods
clc
fs
sub
mov
pop
sti
es
movaps
pushw
push
inc
adcl
xchg
inc
loope
fcoml
je
mov
jnp
xor
dec
adc
mov
clc
cmpsl
adc
aad
inc
sub
insb
dec
enter
sbb
into
pop
daa
test
push
cmpsb
mov
adc
repz
mov
xor
jbe
sti
or
into
shr
mov
int3
push
add
xchg
mov
loope
xor
and
and
test
in
stc
pop
mov
lods
rolb
lahf
xchg
enter
jo
and
push
rclb
sbb
hlt
popf
mov
out
pop
lahf
leave
out
jns
stc
data16
jle
pusha
std
incb
mov
movsl
popf
rcrb
shlb
mov
in
push
adc
jecxz
xchg
mov
xchg
pop
fmuls
pop
cwtl
dec
roll
add
les
in
test
xchg
popf
hlt
fisubl
jg
mov
dec
sahf
pushf
pusha
jge
sbb
jbe
adc
fstl
mov
mov
add
into
cmp
cmp
inc
orl
je
mov
mov
jns
jle
rcr
jmp
imul
into
fisubs
xor
inc
add
adcl
js
add
cmc
push
inc
push
push
into
mov
std
mov
aad
adc
push
ljmp
jg
inc
loopne
aaa
adc
or
push
cmp
lds
push
lods
or
add
adc
add
sbb
add
xchg
or
xchg
dec
push
cmp
jmp
ds
fildll
dec
push
xchg
mov
mov
lret
inc
les
adc
mov
inc
popa
adcb
xchg
jl
cmp
leave
mov
xor
nop
ror
sub
mov
ljmp
outsb
std
aad
dec
xlat
cmpsb
lahf
ss
aam
mov
xchg
and
ds
dec
mov
jns
shll
sbb
xor
pushf
pop
mov
movsb
lcall
push
inc
shr
hlt
das
mov
pop
mov
sahf
pop
scas
sbb
mov
fnstcw
subl
push
int
aad
ret
sub
insb
mov
cltd
shr
fxch
sarl
stos
int
jmp
ss
pop
dec
push
adc
mov
push
xlat
pop
mov
jg
test
or
jmp
lock
aad
cwtl
repz
cmp
push
add
lret
jno
pop
push
sbb
push
inc
mov
mov
push
notb
gs
test
iret
push
out
mov
stc
cmpsl
xor
xor
dec
outsl
addl
jb
and
scas
fisttpl
rcrb
pop
cmp
pop
cmp
add
jae
and
ljmp
repz
cmpsl
addr16
lds
mov
lea
sub
pop
cmp
jmp
shrl
and
mov
cmp
cmp
fcoms
adc
lret
jbe
push
cmp
or
pop
jl
into
clc
mov
cmp
xorl
jg
mov
push
sub
sub
pop
xchg
cmp
std
and
jae
call
movsl
jp
sub
bound
push
int
jb
sbb
sbb
dec
adc
cmp
jb
and
loop
mov
and
pop
pop
pop
jnp
rcll
sub
mov
pop
cmpsl
in
dec
and
mov
lcall
fwait
mov
push
in
push
mov
jnp
jo
push
mov
cli
bound
bound
xchg
ss
sub
xchg
popa
pop
xchg
pop
and
flds
and
inc
xor
jnp
lock
icebp
ret
fisubrl
std
ja
push
push
mov
cltd
adc
lods
ss
jne,pt
inc
popa
or
dec
xor
jge
je
jns
dec
jge
mov
imul
movsb
negl
lock
inc
xchg
cmp
js
ja
cwtl
sbb
out
inc
add
int
inc
hlt
xchg
test
push
xor
lds
shrb
and
xchg
cltd
je
pop
jbe
add
dec
imul
pop
jmp
inc
orl
addr16
add
dec
call
add
fmull
and
xchg
pop
loop
dec
dec
enter
jno
fistps
mov
sbb
lret
rol
mov
es
mov
fdivr
cli
gs
adc
cmpsb
pop
push
xchg
imul
sbb
jle
out
dec
adc
mov
out
xchg
cmp
add
stos
enter
pop
push
out
mov
jae
popa
xchg
data16
xchg
push
fldenv
xor
ljmp
addb
lock
xchg
add
repnz
pop
icebp
enter
in
sub
or
sub
mov
pop
test
test
sub
mov
cmp
cmp
mov
hlt
cmp
add
mov
outsb
pop
sarb
and
jbe
std
cmp
adc
mov
out
inc
cltd
shll
sti
pop
xchg
ret
xchg
mov
pushw
mov
repnz
xchg
add
sbb
adc
xlat
xchg
insl
adc
in
mov
repz
add
gs
outsb
sahf
andb
nop
mov
std
lock
std
das
call
ja
or
out
in
jge
cmp
pop
xor
mov
sbb
or
jne
inc
js
push
repz
and
mov
or
mov
test
cmp
ret
rol
lcall
loop
inc
data16
nop
repz
nop
mov
xor
mov
cmp
sub
aas
jne
loop
ss
cli
add
inc
and
dec
xchg
inc
rcl
adcb
mov
inc
mov
add
in
inc
out
mov
cmpsb
add
sbb
icebp
pop
sbb
in
cmpsb
xor
lahf
hlt
add
shl
jg
cmpsl
pop
jns
gs
stos
stos
popf
sub
ss
movsl
mov
mov
cmp
out
pushf
sub
fnstenv
dec
push
or
add
fmull
iret
cmpsl
out
xchg
mov
push
dec
and
and
test
xchg
xor
fistpl
faddp
pop
add
aam
mov
iret
int
aad
mov
ror
push
jge
push
and
scas
mov
mov
xchg
clc
in
cmp
aas
es
pusha
mov
ret
jno
and
sub
mov
stos
xor
arpl
sub
shll
pop
leave
ret
idivl
cmp
mov
popf
add
in
adc
and
fwait
int
push
sbb
push
jno
push
shrl
cmc
divb
inc
mov
jmp
push
mov
fsubp
sbb
mov
repnz
and
rcrl
scas
jl
adc
pushf
add
mov
test
es
mov
xchg
adc
add
sub
sub
cmp
das
pop
push
push
sub
shlb
cmpl
pop
pushf
adc
loopne
test
stos
mov
sar
out
jnp
gs
shrl
sub
packuswb
hlt
lock
xchg
xor
push
fstpl
or
sub
cmpsb
cmc
push
ja
and
mov
rolb
inc
push
sub
test
in
adc
or
sti
jecxz
test
fsts
popa
jae
xor
add
push
or
push
sub
in
out
iret
sti
vandps
popf
mov
add
adc
out
sbb
cmpsl
sub
cmp
lds
repnz
shlb
sub
add
jle
lret
and
adcl
shrb
mov
cmp
adcb
and
adc
mov
jb
cmc
jns
fnstenv
add
and
into
packsswb
ss
sub
mov
repnz
xchg
repz
mov
daa
test
loop
test
shll
mov
fcompp
in
mov
xchg
sub
inc
lods
adc
push
out
and
and
sbb
mov
dec
iret
sub
and
mov
pop
je
imul
mov
mov
out
nop
leave
inc
popa
push
add
adc
sub
popl
xor
or
aam
jne
sbb
cld
lcall
rclb
fldt
cmpsb
xor
add
stc
dec
jmp
movsb
dec
andb
fs
mov
and
fdivr
rorb
dec
xchg
repnz
pop
or
xor
mov
inc
mov
leave
cmp
pop
addr16
clc
xor
inc
add
std
pushf
mov
scas
mov
cltd
repz
fidivl
rorb
lods
ret
mov
pop
jl
mov
mov
mov
sub
add
or
adc
dec
jno
dec
pop
mov
sti
das
mov
pop
bound
inc
push
sbb
adc
test
jnp
sti
mov
mov
dec
in
ret
jg
hlt
xchg
sub
les
or
lock
sub
or
sarb
loop
sbb
cmpsb
xlat
mov
mov
testb
jo
jae
loope
adc
jnp
aas
scas
aam
js
push
sbb
sbb
jbe
out
push
cmp
mov
xchg
sbb
or
jge
sub
in
xor
stc
pop
sub
adc
ss
in
test
icebp
stc
dec
aam
pop
pop
push
aas
cmp
pop
jg
in
push
xor
push
adc
mov
dec
inc
add
lock
jle
add
iret
paddsb
adc
push
gs
shll
adc
js
lds
ror
mov
mov
pop
mov
sbb
pop
insb
add
or
stc
adc
shrb
add
inc
sub
pop
or
hlt
cmpsb
add
jle
sbbb
mov
xor
mov
or
leave
lods
pop
mov
jmp
adc
negl
sub
pop
gs
xor
sbbl
das
ret
leave
add
mov
mov
push
das
imul
fwait
stos
mov
mov
sbb
push
push
cmp
outsb
fwait
lds
rcll
rcll
dec
pop
in
ljmp
mov
mov
sti
xchg
adc
sub
and
adc
insb
push
fdivs
sub
scas
loope
dec
lret
fs
jp
int3
and
imul
xchg
xchg
and
stos
or
dec
xchg
clc
inc
sbbb
and
xor
shlb
sbb
out
cmp
mov
clc
js
dec
in
pop
cmp
addr16
out
test
clc
pop
or
scas
xchg
fs
cmpsl
cmp
loop
ret
insb
xor
mov
jnp
mov
icebp
xchg
out
jecxz
jo
push
sbb
pop
xor
or
adc
movb
mov
mov
sbb
repnz
fildl
movsb
xchg
ficoms
sub
mov
push
divb
xchg
mov
cmp
aad
xor
pop
sti
mov
arpl
adc
or
add
mov
out
fsubr
lahf
xchg
jae
rolb
mov
enter
mov
push
in
jo
push
dec
xor
cwtl
sbb
aad
mov
cmc
in
cmp
xchg
lods
push
mov
mov
loopne
cmp
sbbl
mov
add
inc
add
dec
push
and
stos
pop
xor
add
mov
mov
sub
push
notl
jns
sbb
jo
pop
cli
xchg
adc
sbb
pop
inc
ds
inc
pop
imul
xchg
mov
out
mov
jl
sub
enter
adc
xchg
xor
in
dec
cmp
jg
icebp
shll
es
xchg
sbb
stos
enter
push
dec
lcall
push
call
sbb
mov
xchg
mov
daa
inc
movmskps
outsb
mov
xor
testb
test
adc
inc
ret
sub
shlb
mov
insb
and
sub
into
fcmove
sbb
nop
cld
jmp
inc
repnz
in
stos
cli
jp
loope
dec
add
jg
pop
fwait
sbb
stos
pop
test
sub
rcrb
dec
push
dec
sbbb
sbb
pop
call
pop
or
push
xchg
mov
icebp
adc
aad
aaa
or
or
xlat
pop
test
enter
push
test
loope
xor
in
jb
ret
lock
xchg
inc
or
cmpsl
stos
sti
jecxz
scas
push
ret
fwait
and
dec
add
adc
jnp
add
and
pop
dec
cmpsl
pop
test
push
xor
pusha
movsl
push
wrmsr
sub
fsubrs
jl
xchg
mov
add
fisttpll
push
test
dec
push
or
lock
mov
outsl
jmp
xlat
mov
mov
leave
vpminsw
mov
arpl
sbb
add
test
sbb
xchg
stos
xorb
sub
mov
mov
inc
repz
xor
cli
notl
dec
repz
mov
mov
loopne
das
and
not
negl
mov
add
dec
mov
repz
insb
xor
push
mov
movsb
std
sbb
adc
jns
jbe
dec
add
push
popa
pop
mov
lahf
hlt
ds
lods
icebp
test
mov
or
hlt
divl
in
leave
ret
enter
out
inc
jne
jge
es
dec
xchg
outsl
cmp
xchg
pop
notb
jle
aas
int
jp
ds
push
jg
cmp
movsb
bound
aam
jbe
sub
xchg
dec
pop
andl
xor
addl
into
sbbb
addr16
jne
jae
mov
adc
push
mov
lock
sub
mov
ds
inc
sahf
mov
dec
arpl
fs
filds
pop
mov
shll
mov
out
jbe
fstl
add
mov
mov
rcll
das
mov
pop
sub
cmp
lahf
xchg
mov
ret
xchg
inc
cmp
pop
les
pop
cmpl
stc
add
sti
test
aam
bound
mov
mov
xchg
fbstp
add
mov
add
add
push
int
mov
push
test
cmp
je
cmp
or
into
mov
jo
or
xchg
aam
fwait
inc
aam
test
sub
inc
sub
inc
inc
pop
nop
push
cmp
daa
rcrl
lahf
sub
pop
scas
mov
mov
sbb
push
xor
sub
pop
fistpll
push
jle
pushf
dec
test
pop
jge
jno
lahf
leave
pushf
xor
call
cmc
dec
rcr
pop
inc
cld
es
cmp
js
rorl
adc
ficompl
sub
pop
imul
daa
fxam
xchg
and
out
adc
lods
into
jl
bound
or
test
aaa
sub
pushf
rorb
stos
arpl
xchg
or
or
in
int3
dec
pop
add
or
push
mov
pop
push
xor
aam
adc
mov
aaa
xbegin
and
dec
pop
scas
dec
adc
add
in
adc
insl
arpl
movsl
pop
rcrb
clc
pop
imul
cmpsb
pop
and
mov
jle
mov
push
fsub
adc
pop
sbb
lods
xchg
mov
jmp
scas
mov
xor
adc
leave
imul
sbb
sbb
xlat
mov
mov
stos
stc
cmpsb
xchg
int3
icebp
or
fcomi
cmc
inc
mov
cmpl
push
adc
sub
mov
inc
arpl
scas
or
jns
mov
lea
mov
mov
jnp
mov
shr
into
sbb
mov
call
fs
or
inc
and
in
xchg
cld
stos
mov
mov
push
or
pop
dec
xchg
loop
test
arpl
mov
loope
fs
fwait
cs
jbe
push
push
data16
mov
cld
sti
jns
fcompl
cmp
dec
push
mov
stc
ss
cmp
fs
out
xor
and
or
out
xor
ljmp
push
scas
lcall
mov
cmpsl
clc
out
xor
scas
imul
jecxz
xchg
jle
sbb
xor
aad
mov
popa
mov
inc
mov
sub
pop
ud2
mov
cwtl
add
jecxz
adc
aam
shrl
shrb
daa
sub
push
lods
push
inc
xchg
mov
jnp
jecxz
jne
mov
in
imul
fdivr
arpl
pop
mov
xchg
bound
cmpb
add
lock
and
movsl
inc
sbb
out
mov
call
mov
jp
fisubs
and
faddl
push
jno
jmp
and
stos
xchg
lods
and
dec
adc
imulb
out
push
out
jg
fwait
mov
mov
xor
push
cvttps2pi
or
out
in
sub
repnz
jns
out
in
pop
adc
mov
in
xchg
decl
pop
pop
adc
xor
mov
pushf
ss
dec
sbb
dec
fidivs
sbb
pushf
repz
inc
popf
lcall
cwtl
shr
popa
adc
xchg
stos
inc
test
or
xor
stc
aad
inc
push
adcb
xchg
outsb
dec
jbe
lea
or
push
mov
mov
insb
and
leave
lret
les
leave
inc
push
jmp
jnp
insl
lcall
cli
scas
in
lahf
loop
scas
xchg
and
pop
or
int
call
and
mov
movsb
lret
push
inc
into
sbb
mov
mov
fwait
sbb
inc
div
jge
jns
test
cmpsb
in
or
push
jae
mov
mov
inc
ret
or
int
pushl
outsb
add
bts
js
mov
inc
test
cmp
adc
test
pop
jle
dec
mov
mov
push
mov
pop
out
out
arpl
outsb
inc
or
add
scas
js
adc
sbb
hlt
ret
ljmp
lcall
popf
int
mov
popl
inc
sbb
jle
mov
pop
sbbb
lods
pusha
jne
aaa
cli
push
pop
movsb
jmp
mov
mov
ds
add
or
ljmp
add
enter
popf
sub
in
sub
mov
mull
lock
sti
jne
bound
xchg
sub
add
sub
test
sub
ret
lea
push
jae
call
mov
xchg
pop
dec
xchg
out
daa
popf
rolb
or
int3
in
rorl
insl
repz
repz
inc
lsl
lock
push
add
add
fsubrl
push
lds
or
and
pop
aam
push
push
inc
mov
mov
dec
pusha
inc
or
insl
iret
sbb
ljmp
or
mov
xor
jnp
add
aas
roll
fmull
js
pop
loope
ljmp
int
cmp
sbb
xchg
test
out
and
test
jne
cmc
test
adc
in
cmp
fstpt
adc
dec
push
fs
add
pop
lcall
cmp
stos
sbb
pop
pop
std
movsl
push
push
pop
mov
pop
xlat
loope
cmp
les
shlb
and
xlat
mov
lret
sahf
test
pop
stc
cbtw
das
mov
mull
adcl
mov
jecxz
sbb
outsl
std
and
xchg
movsl
or
shll
pop
decb
dec
dec
inc
ret
jp
aas
dec
jecxz
fsubs
enter
sub
xchg
mov
inc
out
sbb
test
pop
lods
cld
push
mov
mov
scas
xchg
sahf
call
ficomps
push
testb
bnd
pop
mov
mov
xchg
add
lret
ss
push
adcb
pop
arpl
mov
stc
cld
xor
dec
add
dec
push
test
nop
call
inc
les
jle
mov
mov
hlt
xchg
shrl
cli
jns
sub
or
movsl
test
loope
jg
aas
push
mov
xchg
cmp
xchg
mov
shlb
int
add
fwait
cwtl
loopne
movaps
inc
or
cmp
mov
mov
in
jecxz
in
or
sbb
sbb
adc
mov
pop
xchg
jno
push
decl
mov
das
out
ret
outsb
mov
lds
inc
loopne
xchg
push
pop
mov
into
cmpsl
push
call
xor
xlat
adc
mov
fsubrs
adc
dec
loop
mov
xor
adc
imulb
stc
inc
stos
fimull
lahf
xor
lds
std
xchg
notl
pop
or
xchg
xchg
in
cmp
inc
cli
test
addl
pop
shr
cmp
test
push
out
jp
dec
stos
gs
fidivs
daa
iret
and
mov
je
stos
aas
and
xor
ret
jo
arpl
jne
scas
sahf
or
movsb
mov
inc
pop
movsl
test
test
pop
aas
dec
sbb
out
inc
dec
lcall
rcr
addb
lock
xchg
hlt
pop
push
gs
test
std
or
and
or
push
jmp
fisubrl
int
pusha
adc
pushf
movsb
popa
pop
loope
mov
imul
test
aas
jbe
out
adc
enter
divb
mov
stc
lods
in
fs
lahf
jno
push
loope
inc
sbb
icebp
sub
das
xchg
pop
mov
mov
mov
adc
lods
je
inc
or
cs
dec
pop
dec
xchg
jb
jns
or
push
cli
movsl
push
es
sbb
xor
pushf
or
adc
clc
bound
stc
cld
mov
mov
push
adc
lock
pop
dec
pusha
mov
sar
mov
push
cmp
sbb
pop
sbb
add
add
loopne
or
fwait
and
inc
cmp
xor
fists
les
sbb
sub
or
mov
outsl
cli
cmp
mov
rclb
lcall
fcmovne
jmp
jle
sub
cmp
sbb
mov
daa
arpl
testl
popf
out
mov
dec
fs
cmp
jne
push
js
icebp
fistpl
and
popa
out
cld
jmp
inc
int3
mov
dec
mov
or
mov
mov
push
fildl
shrb
inc
aad
rol
mov
inc
adc
rorb
shll
roll
cltd
jae
cmpsb
dec
add
jne
jbe
lea
js
lea
lock
aad
aad
fsubs
sbb
dec
je
push
and
sbb
in
jmp
adc
jbe
js
cwtl
add
call
insb
lret
xor
fcmovu
dec
les
popf
jae
pushf
out
add
mov
fcomi
mov
or
cmc
jne
cmp
sbb
cltd
cmp
imul
cmc
idivl
out
push
shlb
xchg
dec
jl
dec
mov
mov
push
pop
mov
xor
xchg
mull
mov
cmpsb
shlb
jne
jl
dec
push
ret
andb
loopne
pop
dec
push
out
mov
jns
popa
flds
sbb
fcmovnbe
lods
and
or
fwait
or
mov
dec
and
jmp
jo
std
cmp
bound
pop
pusha
add
jno
inc
dec
cmp
sbb
xchg
outsb
sbb
lds
arpl
mov
inc
xchg
add
int
out
lock
lea
or
je
push
mov
cs
adc
out
imul
les
std
cmpsl
or
and
xchg
sub
mov
and
aaa
add
pop
sahf
dec
int3
cmc
and
sbb
mov
popa
loope
add
cmc
js
dec
sub
push
decl
aam
lahf
add
or
mov
xor
mov
mov
adc
sub
dec
add
scas
shrb
adc
and
sbb
scas
xchg
out
push
mov
push
mov
cpuid
cmp
shlb
stos
ja
mov
gs
and
aas
data16
mov
sub
lahf
inc
addr16
dec
aam
ficompl
hlt
out
hlt
adc
int3
in
push
inc
xchg
lahf
mov
sub
clc
mov
mov
daa
mov
aam
fsubl
sub
mov
fnstenv
sub
sbb
xchg
sbb
sub
sub
clc
shlb
jae
leave
push
push
lahf
fmul
in
adc
xor
cmp
sub
xchg
pop
rol
sub
pop
mov
out
mov
sbb
mov
push
rcrl
mov
mov
sarb
pop
push
xorb
cmpsb
sti
sub
mov
in
add
jb
pop
xor
mov
lds
popf
pop
xor
fisttpl
or
out
xor
arpl
mov
in
fldl
mov
movsb
cli
outsb
mov
pop
lret
test
or
test
push
gs
mov
lock
inc
mov
mov
or
pop
ja
dec
lret
gs
and
mov
and
cmp
push
jno
mov
xchg
dec
jnp
call
xchg
je
cmp
out
outsb
xchg
shlb
fdivl
xchg
fldcw
xchg
movsl
add
insb
and
add
push
cmc
mov
fmull
call
bound
rcl
out
cmpsl
cwtl
int3
push
jp
mov
cld
paddq
les
adc
lret
push
loope
fimuls
pop
fcomi
cld
outsb
aas
shrb
repz
jl
test
test
xchg
cmc
mov
leave
outsl
es
lahf
imul
xchg
jl
jp
mov
js
jne
inc
arpl
aaa
ss
pop
or
xchg
rorb
and
dec
and
sbb
dec
sbb
xchg
in
ds
or
cmpsl
push
mov
scas
nop
int
ret
leave
lock
je
mov
pop
jae
aam
add
adc
mov
mov
mov
push
mov
sbb
mov
enter
inc
imul
jne
inc
mov
cwtl
pop
data16
adc
cmp
mov
mov
add
outsl
xchg
xchg
and
movsl
mov
cmp
dec
addr16
shrl
test
cmp
push
or
inc
xchg
ret
mov
xor
inc
jle
mov
mov
dec
inc
out
out
pop
sti
inc
jo
jp
or
ljmp
into
pushl
test
pop
xchg
pop
dec
cli
push
aad
cmp
cmp
and
xchg
push
xchg
pop
cmpsb
cmp
bound
jno
scas
jo
ficompl
cltd
mov
into
cli
dec
mov
pop
fmul
mov
push
or
lret
je
inc
sbb
sbb
or
cmovle
out
popf
mov
out
jge
and
int3
lds
das
mov
loope
mov
int
in
jl
cmp
popf
jle
mov
popf
cmp
mov
dec
ljmp
add
adc
imul
sbb
ror
aas
lret
ss
xor
jbe
mov
icebp
sub
and
or
jo
or
jge
adc
push
imul
inc
jno
inc
aad
cmp
fcmovnb
adc
xchg
dec
pusha
push
stc
rcrl
shll
jmp
dec
in
sti
movd
mov
pushl
mov
mov
lret
mov
inc
sti
ret
lcall
add
cmc
mov
cmp
flds
sbb
mov
mov
lcall
das
mov
mov
enter
ljmp
loop
push
clc
nop
jle
pop
jnp
xor
bnd
mov
loopne
push
int
adc
insb
xchg
mov
out
adc
pop
push
add
sub
dec
repnz
push
outsl
sub
mov
or
and
add
sub
adc
cmp
int3
clc
iret
jno
popa
outsl
cwtl
popf
lods
mov
into
push
repz
icebp
fnstcw
lods
movsb
jp
out
mov
jo
mov
dec
fmul
dec
fwait
push
bound
je
enter
pop
dec
paddusw
jno
cltd
das
sbb
stc
xor
inc
lret
push
dec
adc
in
je
dec
insl
scas
fstpt
inc
add
mov
pop
sti
sub
in
rcrb
pop
jmp
fldl
int
std
dec
xor
pop
jle
jg
sub
sub
mov
xor
inc
rol
xchg
int3
or
mov
addr16
fistpl
sub
arpl
lock
call
dec
jmp
cmp
mov
xor
aad
incl
sbb
mov
dec
sub
mov
pop
outsl
jno
fisttpl
das
out
cs
add
push
and
popa
pop
mov
mov
sub
pop
dec
mov
add
or
ljmp
icebp
dec
xchg
mov
fbld
aad
lods
shl
xchg
rclb
adc
sbb
fidivl
xor
std
dec
sub
divl
mov
lcall
aad
inc
jb
popl
scas
sahf
jecxz
mov
mov
pop
or
loop
movsl
mov
push
icebp
xlat
xchg
mov
mov
insl
mov
pop
mov
inc
mov
and
addr16
outsb
insl
dec
xchg
cmp
fs
arpl
es
clc
repnz
jp
dec
insb
pop
cmp
aam
push
mov
leave
movl
inc
xor
shl
and
cmp
xor
idiv
cmc
ds
push
hlt
push
cmpl
movsl
fisttps
jne
add
xor
pushf
sub
xor
mov
xor
icebp
ljmp
out
cmp
roll
mov
nop
add
testb
out
pop
xchg
mov
cs
hlt
ffree
xchg
sbb
jae
cwtl
mov
pop
or
adc
cmc
sbb
outsb
push
mov
push
inc
ljmp
mov
lea
fldl
sbb
or
stos
ss
mov
ja,pn
mov
mov
cmp
xor
stos
scas
xchg
idivl
stos
or
inc
jecxz
xor
dec
sbb
add
hlt
sub
ret
cmp
test
movsl
ret
ljmp
xor
inc
nop
ret
jge
cmp
push
jmp
cld
outsl
stos
push
sahf
mov
jno
iret
cmpsb
dec
shr
add
cmp
or
enter
push
pop
mov
stos
arpl
popf
sbb
cmpsb
pusha
ljmp
sub
divl
arpl
insl
push
jb
mov
out
repz
ja
jb
inc
out
test
xchg
pop
pop
mov
ror
fsubrs
repz
cmpsl
xchg
mov
cmp
ret
push
mov
int3
add
lret
dec
push
push
fwait
sub
mov
dec
or
mov
lock
inc
aam
in
dec
mov
push
dec
sbb
cmp
repnz
scas
xor
sub
int
sbb
cmovg
mov
xor
push
ret
pop
fcmovnu
arpl
dec
fists
dec
lret
xchg
fstpt
cltd
sub
mov
in
in
adc
cmp
add
cli
or
lds
inc
dec
into
scas
insb
or
mov
fists
push
lahf
scas
jge
gs
jae
inc
cltd
xchg
mov
leave
mov
fcoml
add
int
sti
inc
jno
bndldx
loopne
repz
fisttps
add
cltd
in
jb
jle
push
or
cmp
sub
out
mov
pop
adcb
sbb
cmp
or
int3
jae
push
ds
pushf
inc
ja
mov
pop
pop
mov
lcall
xchg
mov
test
shrb
rcr
sbb
inc
mov
loop
fldt
mov
xchg
inc
sbb
scas
jp
sub
int3
gs
add
mov
fistpl
fwait
insb
scas
in
and
xchg
aam
ret
int3
mov
lret
xor
inc
loope
and
imul
insb
lds
sbb
inc
cmp
pushf
xchg
int
dec
ss
pusha
mov
mov
ja
add
xchg
fwait
stc
out
and
cmc
clc
jmp
xchg
xlat
mov
push
adc
fldcw
jb
adc
fadds
sbb
popa
cmpb
movsb
push
adc
pop
cmpsl
push
mov
ficoml
and
cmpsb
andb
sub
or
scas
rep
mov
cmpsb
push
mov
add
fs
das
cmpsl
ljmp
inc
dec
push
mov
outsb
add
sbb
repnz
bound
jmp
rcll
stos
dec
in
xor
sbb
pushf
adc
push
or
fdivs
or
fisubrl
nop
es
fisttps
push
js
lea
pop
lahf
jnp
cmpsl
test
adc
adc
int3
push
fbld
aaa
in
shrb
cmp
fnstenv
inc
jbe
out
or
mov
sbb
leave
push
jmp
rcll
mov
mov
pop
mov
adc
sub
ret
stos
mov
cs
test
jbe
jecxz
out
jge
div
mov
js
out
cmc
jns
fmul
scas
and
cmp
rcrl
push
push
cmp
jl
adc
jl
sub
dec
mov
outsl
mov
lods
ret
enter
and
in
mov
outsb
jo
dec
jmp
loopne
aam
shrb
push
cld
dec
test
push
popf
jo
lcall
iret
int3
pop
and
leave
xor
cli
inc
into
fwait
xchg
pop
or
jno
xchg
jecxz
ja
cs
sahf
xchg
push
mov
insl
and
jp
lcall
shl
negl
fistpl
in
add
loope
movsl
and
adc
pop
mov
add
inc
jno
xlat
mov
mov
mov
push
xchg
mov
add
jnp
jmp
mov
adc
inc
xor
sbb
sarl
subps
add
jae
or
insl
pop
sub
gs
inc
sub
movsb
push
mov
lahf
adc
jae
dec
dec
dec
push
xchg
fdivrl
dec
test
arpl
inc
in
aam
push
rcr
sbb
xchg
nop
iret
xchg
push
xchg
aaa
xchg
xlat
or
pop
adc
adcb
sti
movsb
inc
lock
cmp
lahf
repz
or
xchg
mov
scas
mov
lods
cmp
aas
xchg
cmpsl
xchg
pop
scas
xchg
sbb
xchg
mov
add
fwait
mov
sbb
mov
sub
mov
les
iret
orb
repnz
movsl
stos
sbb
adc
das
sbbl
jmp
pop
sqrtps
jge
and
rcrb
stos
or
push
xchg
cmpsl
mov
mov
inc
jg
iret
loopne
loop
xchg
push
das
xchg
push
push
or
xchg
cmp
fmull
xor
dec
lret
or
xor
add
fucom
jp
insl
xorl
cmpsb
sbb
push
mov
sub
sbb
imul
and
sub
pop
jg
fs
ds
iret
into
mov
leave
scas
inc
es
lret
lret
dec
mov
inc
popf
inc
push
imul
fidivrs
push
jp
pop
cmp
mov
jg
adcb
cwtl
arpl
pop
or
mov
ja
push
in
mov
in
and
ss
xchg
xor
push
xchg
push
push
add
mov
testl
jg
loop
lods
xor
pop
sub
ret
mov
xor
sbb
out
cs
jp
in
cs
mov
mov
in
cmp
mov
xchg
inc
ds
out
lods
cmpsl
lahf
packuswb
into
jns,pt
or
sbb
dec
dec
je
rcr
shr
bound
cmpsl
out
and
inc
mov
aam
push
cmpsl
test
mov
nop
xor
mov
inc
push
dec
mov
cmp
test
test
mov
cmp
fistl
into
add
stos
jb
xchg
lock
mov
imull
push
jae
das
scas
xlat
ss
inc
es
inc
cwtl
lods
cmp
mov
adc
pop
push
movsb
jbe
dec
xor
aaa
adc
dec
inc
cwtl
iret
in
or
inc
cmpb
lret
gs
jecxz
popf
xlat
xchg
sub
push
and
mov
adc
adc
je
mov
mov
xchg
mov
repz
cmpsb
popa
cmc
nop
ret
push
out
fidivrs
dec
rclb
out
mov
mov
cld
mov
cmpsl
scas
mov
push
ds
out
jo
add
pop
xorl
xor
sti
notl
pop
add
mov
cmc
daa
flds
pop
jecxz
sub
xchg
jg
out
adc
fistl
xchg
mov
jno
jle
pop
push
clc
mov
pusha
jne
stos
mov
movb
adc
xchg
lods
cwtl
inc
loope
inc
sahf
sub
rol
inc
scas
cmc
push
mov
iret
andl
xchg
insl
pop
pop
mov
add
popa
pop
outsb
push
ja
cltd
sub
lahf
ret
pop
bound
inc
mov
and
pop
paddb
cli
test
aas
sub
cmpsb
cmpsl
ss
cmp
pusha
rcpps
fdivrs
lret
mov
sub
je
ja
push
mov
pop
sbb
shrb
iret
or
out
cmpsb
push
popa
dec
das
sub
mov
push
or
fidivs
jno
jno
pop
icebp
pusha
hlt
lret
xor
cmp
cmp
fidivs
pusha
and
adc
add
cmp
rcrl
sub
pop
les
stos
inc
sub
sbb
ficoms
push
scas
ljmp
shr
cs
cmc
fldcw
pop
dec
lea
sub
in
push
popa
stc
xor
cmp
test
pop
adc
xor
leave
sub
ja
xchg
cltd
and
jecxz
nop
orb
hlt
push
lea
adc
lods
mov
fs
xchg
sbb
jns
ds
js
xchg
mov
xchg
xor
jae
jp
add
sub
xchg
push
mov
fs
bound
ret
cmp
cmpsl
sbb
push
test
movl
repz
xorb
adc
mov
insl
sub
and
push
jae
jne
sbb
cs
test
les
mov
stc
xor
and
fisttps
fs
aam
mov
and
mov
in
inc
fiadds
jmp
je
jno
imul
pop
test
xchg
test
jle
mov
sub
or
mov
pop
sub
divl
sbb
jne
jb
and
jns
pop
gs
dec
sbb
ds
lret
in
mov
pop
cmp
add
xchg
mov
fistps
jno
adc
adc
lods
enter
pop
add
mov
adc
xor
sub
or
lcall
or
shll
popa
stos
dec
push
mov
adc
ret
xchg
loope
cmp
rcrl
cmp
inc
cmp
shl
adc
pop
outsl
xchg
out
stos
fisubrl
popf
mov
mov
sub
loop
xor
aaa
mov
mov
test
lret
fwait
xchg
adc
sbb
add
pushf
ret
fcomp
stc
jp
xorl
lods
push
hlt
mov
push
push
mov
and
in
repz
dec
aam
imul
mov
and
inc
loopne
lock
jg
out
pop
mov
sarb
out
ret
rorb
pushf
addr16
mov
cltd
jecxz
mov
or
xchg
int
push
adc
lcall
xor
imul
xchg
xchg
aaa
nop
call
cmpsl
mov
sbb
gs
xchg
pop
icebp
push
dec
lret
jecxz
imul
mov
ret
sbb
adcl
das
jns
lds
sub
push
lods
aad
mov
xchg
sub
in
cltd
repnz
sahf
fisttps
adc
sub
scas
icebp
jge
test
jne
sub
in
test
mov
and
xor
mov
dec
nop
aas
fiadds
out
sub
cmp
xchg
jmp
rclb
sahf
fwait
xchg
ds
insb
adc
rol
leave
popl
adc
jg
add
sbbl
and
or
pop
and
dec
popa
jae
push
loop
movsb
pusha
add
cmovg
pop
es
inc
stos
clc
sbbb
mov
cmpsb
addr16
xchg
inc
pop
mov
js
mov
lret
sbb
pusha
mov
jl
movsl
xchg
cmp
adc
or
mov
xor
lods
mov
xor
outsb
dec
mov
mov
add
ret
ja
adcl
nop
cmp
adc
mov
jb
data16
mov
sbbl
pop
push
xor
dec
addr16
push
ret
fimuls
sbb
adc
ss
stos
and
mov
ds
jbe,pt
push
adc
pop
add
test
shll
xor
arpl
fsts
js
cmpsb
push
popf
repnz
mov
sub
insb
or
add
test
jle
fisttpl
cmp
cmpb
dec
dec
pop
sti
pop
sbb
js
out
test
push
xchg
mov
xor
inc
fwait
xchg
in
dec
sbb
pop
cmp
mov
dec
push
lea
call
mov
push
mov
in
or
sbb
mov
dec
dec
sbbl
cmp
mov
lcall
pushf
pop
push
lock
pop
sub
xor
jo
addr16
sbb
xlat
or
push
or
pusha
movsl
add
cwtl
xlat
pop
add
movsl
add
mov
shrl
adc
xchg
mov
lret
push
mov
adc
cmp
cld
dec
and
in
hlt
mov
pushf
mov
mov
push
adc
mov
fildl
sbb
cli
jb
jb
xor
scas
dec
mov
mov
xchg
inc
xor
ds
cmpsl
rcll
jp
adc
and
jle
jns
leave
cmp
push
les
adc
xchg
lahf
xchg
lea
sahf
out
jle
addb
sub
cmp
cmpsb
hlt
lahf
fadds
scas
pop
stos
mov
imul
jecxz
stos
mov
fwait
loopne
outsb
repnz
push
push
int3
or
add
outsl
push
adc
pop
rclb
data16
in
fnstcw
das
push
sbb
pop
dec
inc
pop
mov
orb
cmpsb
rcrb
mov
jns
adc
mov
mov
mov
outsl
push
nop
imul
stos
mov
aas
mov
ds
fdivrl
ja
ret
icebp
icebp
or
push
fisttpll
sub
loopne
cmp
or
or
es
or
mov
pop
iret
jmp
in
fsubl
inc
jo
rcll
jbe
pop
add
mov
push
push
fcoms
lahf
lods
pop
push
mov
push
jno
mov
xor
in
nop
lret
mov
dec
movzwl
dec
sub
sub
push
lcall
outsl
imul
js
mov
scas
fs
inc
imul
cltd
mov
add
adc
inc
data16
dec
jne
addr16
mov
fdivrs
mov
xchg
sbb
pushf
jp
dec
inc
xor
xchg
cmp
cmpsb
push
pusha
pusha
push
push
in
or
push
pop
loope
outsl
ret
fs
mov
inc
push
ss
mov
inc
les
mov
inc
stos
andl
xchg
jne
shlb
sti
mov
jmp
js
roll
mov
ja
mov
pop
adcb
lret
int3
fs
idivb
pop
in
cmc
mov
adc
popa
repnz
out
xlat
jno
cli
xor
roll
xlat
jle
xor
sahf
adc
and
dec
faddl
pop
dec
or
mov
pushf
adc
and
adc
dec
sbb
out
adc
mov
push
sbb
push
loope
ret
add
loopne
in
pop
movsl
sbb
and
repz
mov
mov
fcmovnb
push
cmp
adc
das
inc
mov
mov
mov
js
mov
cli
mov
aam
fcompl
xor
sub
in
aad
jle
mov
hlt
jae
inc
push
mov
sbb
pusha
add
xor
sbb
push
cmp
pop
cmp
mov
or
pop
push
mov
mov
and
and
in
out
adc
mov
cs
stc
mov
movsb
ja
adcb
test
sarl
adc
mov
pop
inc
test
lods
fwait
xchg
cmp
test
pop
in
int3
cmp
and
sub
add
xor
push
push
sti
sbb
testl
xchg
sbb
jne
inc
dec
in
mov
faddp
or
xchg
dec
lock
xchg
mov
dec
cld
mulb
push
adc
push
cld
fwait
loop
jae
cwtl
cmp
push
pop
scas
int3
cwtl
sahf
inc
daa
repz
jmp
cmpsl
inc
inc
and
xor
data16
in
popa
jae
scas
dec
fsubrs
dec
imul
fidivrl
xor
mov
insb
and
push
xchg
sub
lcall
mov
aad
loopne
mov
push
inc
into
movswl
mov
push
mov
aaa
mov
movsl
mov
out
adc
adc
cmp
divl
je
sti
in
jo
sub
test
outsb
call
mov
dec
xchg
adc
jne
xchg
cmp
mov
daa
sbb
ret
movsl
jp
adc
jnp
mov
sub
xchg
out
push
mov
nop
js
sahf
test
insb
aas
imul
mov
sub
out
push
sub
pop
cwtl
xor
test
outsl
mov
cmp
data16
cmp
dec
push
mov
loop
fidivl
mov
push
mov
fsubr
out
ljmp
cmc
clc
imul
testl
sub
jecxz
nop
add
ja
fucomip
adc
inc
push
loopne
mov
addr16
push
cmp
repnz
mulb
mov
mov
ss
and
dec
lret
and
fwait
test
das
jecxz
stc
inc
jle
push
mov
daa
cmc
aaa
sub
sub
jmp
xchg
stc
push
mov
shlb
shlb
or
and
xchg
push
or
pushf
test
or
mov
ror
mov
ret
xchg
and
dec
xlat
pop
inc
pop
cmp
arpl
cmp
call
push
jl
sbb
or
mull
enter
loop
sub
repnz
leave
xchg
xchg
sbb
arpl
push
lods
std
jnp
incl
movsb
inc
sbb
mov
jg
jmp
cwtl
or
jb
lds
loopne
mov
xchg
loopne
adc
jmp
cltd
mov
dec
inc
mov
mov
add
pop
jbe
lcall
push
cmp
add
inc
popf
fnstenv
mov
leave
lock
popf
and
jbe
cmpsl
inc
xor
sbb
sbb
out
push
out
cli
ret
or
cwtl
jae
mov
repnz
scas
in
pop
jnp
cltd
lcall
add
push
into
cmpb
push
cs
stc
mov
jbe
cli
test
push
jnp
aas
add
out
fistl
pop
jmp
pop
lret
mov
xor
out
repz
inc
jl
ss
movsb
xor
pop
roll
daa
xor
imul
pushf
xchg
cmc
in
xchg
xor
sbb
jp
xor
add
in
jb
cmp
push
sub
in
and
inc
rclb
mov
jae
adc
push
test
sbb
xor
subb
mov
addl
gs
out
dec
arpl
push
jb
jo
test
sub
outsl
or
add
push
cmp
iret
daa
outsl
imul
sbb
scas
jbe
ror
push
push
cmpsl
inc
testb
cltd
jmp
aas
lds
dec
xor
lods
mov
mov
or
cs
pusha
pushf
clc
test
int3
push
inc
jle
adc
cmc
xchg
pop
addr16
mov
jbe
sbb
mov
lock
popa
sbb
clc
lods
mov
jne
add
adc
cmc
cmc
js
mov
push
pop
aad
decb
pop
ss
lods
jmp
mov
jb
dec
test
push
mov
into
data16
out
scas
jne
cmp
aad
jle
and
sub
push
pop
cmp
js
push
inc
mov
mov
jbe
jnp
sbb
fdivrs
or
push
rclb
rorl
shlb
roll
icebp
sub
mov
sub
and
xchg
fnstenv
jge
stc
movsl
in
insb
and
jo
test
pop
lret
outsb
out
mov
popa
stos
std
out
and
inc
mov
mov
pop
xor
jnp
mov
fistps
or
mov
sub
je
nop
popa
add
sub
cmp
sub
xchg
push
xchg
aam
jge
cmp
push
cld
mov
and
fiaddl
inc
inc
xor
test
ret
lret
sbb
push
dec
and
out
lcall
je
and
aas
pop
jmp
and
xor
mov
fcompl
cmp
add
sbb
fiadds
xchg
iret
jmp
push
pusha
fcomip
add
jmp
add
add
shll
inc
mov
fdivl
adc
pop
addl
test
jp
mov
les
sbb
jo
ds
icebp
pop
xor
or
xor
jae
movsl
pop
test
addps
insl
sarl
into
iret
add
lahf
nop
inc
dec
inc
inc
cwtl
mov
push
jl
mov
push
mov
and
xlat
push
inc
aas
fistpll
jne
or
sub
or
push
jle
jbe
sbb
inc
out
test
add
inc
xchg
pop
roll
cmp
aam
lods
pop
fldenv
mov
xor
dec
outsl
in
nopl
out
push
loop
jb
mov
ret
mov
mov
es
scas
inc
and
mov
or
jnp
nop
cmp
fldt
jno
mov
xchg
adc
lcall
pop
pop
jl
sbb
in
dec
push
push
imul
jno
mov
sbb
xchg
inc
std
mov
jae
push
pop
adc
adc
das
pop
aaa
into
movsb
jae
or
mov
test
mov
jp
pop
push
leave
sbb
movsl
push
sub
push
movsl
rorl
ljmp
pop
cmp
cmpxchg
aas
mov
lock
inc
xor
push
aaa
xlat
mov
or
cmp
inc
test
dec
sbb
es
push
add
stos
push
or
jmp
dec
lods
jge
adc
inc
mov
adc
data16
xor
pop
add
mov
movsl
movb
aas
fists
repnz
in
jmp
xor
sbb
rorb
jmp
pop
cmp
andl
fidivl
ss
pop
aas
mov
mov
int
int3
jb
sub
xlat
data16
push
bound
addr16
cld
mov
test
fsts
pop
call
cmp
sbb
pop
out
in
lret
mov
lds
push
aas
adc
hlt
add
xchg
xlat
dec
out
xor
sahf
test
adc
dec
xor
in
inc
xor
addr16
sub
mov
stos
pop
out
sbb
and
jno
push
iret
or
subl
xlat
mov
mov
xchg
inc
pop
xor
pop
ret
adc
inc
cmp
popf
push
push
popa
xchg
pop
out
pop
lds
fldl
pop
ljmp
lahf
out
cmp
iret
test
and
sar
ret
and
out
xchg
dec
lds
xorl
sub
mov
jmp
push
hlt
mov
lahf
mov
mov
adcl
rcrb
popa
push
push
cmp
lods
add
jno
hlt
sbb
or
in
jbe
push
lock
stos
jl
cmpsb
dec
sub
inc
sahf
xor
cmp
testl
mov
fwait
cld
loopne
dec
ret
pop
insl
push
mov
xchg
cmpl
int
lret
scas
push
imul
mov
stos
mov
push
les
imul
int
mov
stos
outsb
xchg
xchg
jg
rorl
ja
test
test
aad
jns
mov
jno
sub
loope
data16
and
jae
inc
and
daa
jmp
xchg
imul
lahf
decl
xor
and
inc
pop
jnp
lret
fisubrs
cmp
cmc
mov
aaa
aad
jnp
push
out
pusha
mov
jp
sarb
test
jg
cwtl
data16
loop
cmpsb
mov
adc
lock
notl
cli
mov
pop
mov
es
dec
push
adc
pop
out
inc
in
sbb
dec
out
cmp
repnz
sub
mov
arpl
sbb
imulb
faddl
jg
and
add
scas
imul
and
xor
out
push
mov
xchg
fldcw
or
and
out
xchg
and
or
loopne
les
cmp
adc
add
pop
add
mov
jmp
and
cs
ljmp
xor
dec
dec
andl
xor
xchg
lods
pop
jb
pop
mov
xor
popf
add
cmp
into
popf
jmp
outsb
hlt
jno
ds
lea
pusha
lods
test
jmp
or
shl
incb
hlt
cmpsl
lcall
pop
aas
pop
mov
in
je
and
pop
mov
cmp
inc
movsb
into
das
jns
push
test
pushf
aas
mov
loop
pop
or
xchg
push
dec
stc
pop
in
inc
roll
xlat
dec
cli
nop
mov
xchg
mov
dec
jns
push
mov
push
jne
cmp
mov
mov
aad
mov
jmp
inc
adc
shrl
lahf
stc
pusha
fucomi
xchg
sahf
xchg
mov
pop
inc
scas
lea
scas
fstpt
mov
adc
xlat
add
push
pop
or
pop
xchg
js
ljmp
push
scas
aad
push
dec
sub
cmp
jle
out
pop
and
ret
int3
jg
or
iret
pop
or
aaa
push
enter
push
outsl
cwtl
fcompl
add
xor
cmpsb
add
outsb
xorl
xchg
xor
push
jae
cmp
adc
xchg
pop
in
shlb
repz
pop
sbb
loope
bound
ror
rclb
xor
or
popa
bnd
or
jle
lods
add
jns
and
mov
sarb
aad
loop
repnz
subl
imul
xchg
scas
cmp
lds
xchg
push
sub
popa
call
mov
mov
aas
mov
xchg
outsb
movsb
push
icebp
jo
popf
lea
xor
or
sbb
pop
scas
ret
jl
sbb
xor
inc
mov
cmpsb
cmc
pop
adc
pop
hlt
jle
test
dec
call
xor
xchg
dec
cmpb
test
pop
or
sbb
jne
jb
mov
sbb
fsubr
or
xchg
jl
adc
sbb
jns
aas
and
icebp
repnz
test
cmp
and
xor
mov
mov
bound
fs
loop
mov
and
sub
rcl
movsl
mov
popa
dec
inc
inc
push
dec
mov
sti
cwtl
mov
dec
lods
inc
or
shl
stc
arpl
cld
clc
jp
mov
mov
ret
lret
xorps
imul
mov
cmp
pop
push
push
aas
fistl
outsb
clc
arpl
push
frstor
xor
into
sub
jl
xor
sub
mov
clc
stos
push
pop
adc
jmp
ss
movsb
mov
outsb
imul
mov
adc
adc
scas
ja
mov
push
movsb
jmp
fwait
loope
jne
pusha
mov
and
xor
mov
das
sub
and
cmp
adc
cmpsl
popf
syscall
xchg
cmp
fisttpll
subl
mov
icebp
adc
adc
imul
sub
jg
pop
ror
imul
mov
push
mov
cmp
sbb
pop
aas
mov
mov
mov
rcll
xchg
mov
inc
sbb
aad
xor
xchg
lds
dec
or
inc
sub
adc
cmp
xor
repnz
das
and
lahf
xchg
or
lret
inc
mov
jmp
xchg
or
mov
lods
push
jl
dec
push
sbb
nop
jp
ds
and
sbb
mov
shrb
cmpsl
test
into
lret
test
ja
xlat
jmp
scas
ljmp
xor
add
insb
notl
mov
popa
xchg
ljmp
lcall
ffree
dec
subb
push
loop
cmp
mov
pusha
sbb
jg
popf
sbb
call
xor
sbb
inc
or
mov
shrd
pop
arpl
xlat
cmp
mov
fsubrs
jne
sbb
lock
inc
shll
inc
cmp
shlb
xorb
repz
xchg
iret
or
lret
movsl
pop
mov
std
mov
inc
adc
push
test
mov
daa
fsts
popf
fldl
mov
leave
divl
lahf
jns
adc
scas
int3
jmp
out
call
call
cli
cmpsl
sbb
mov
mov
xor
or
push
cwtl
push
mov
cmp
negb
push
pop
add
push
fistpl
sti
test
ljmp
or
popf
in
xchg
xchg
inc
push
lcall
loopne
pop
add
and
or
dec
mov
or
jo
cmp
fsubl
push
dec
cmp
cmc
sbb
add
stc
push
out
gs
loopne
mov
cwtl
fisubrl
fildll
mov
lods
push
xchg
mov
std
negl
mov
cwtl
mov
sub
iret
sbb
cmp
push
mov
cmpsl
je
outsb
pop
dec
sarb
sahf
scas
pop
imul
pop
leave
xchg
push
hlt
lock
push
xor
and
xchg
add
les
push
sbb
hlt
jmp
pop
cmp
mov
sbb
arpl
sbb
or
insb
mov
jne
jns
pop
std
mov
xchg
js
inc
fldl
loop
mov
lcall
cld
ret
arpl
jnp
js
xchg
repz
scas
in
lret
jbe
sbb
cmp
roll
mov
sub
add
or
lods
sbb
js
xorb
test
sbb
and
test
iret
stc
push
sub
cld
mov
and
mov
mov
sahf
es
fisubrs
out
pushf
xchg
jl
or
rolb
add
fmuls
cli
adc
mov
out
nop
mov
call
and
lret
xchg
lahf
or
decl
into
xor
add
in
jg
shl
pop
xor
cltd
xorb
pop
pop
popa
pop
pop
cwtl
xchg
jmp
pop
push
cmp
cmpsl
lahf
iret
mov
xchg
jmp
lret
scas
enter
sbb
dec
and
ret
mov
rcrl
push
imul
jp
jg
xor
push
inc
inc
aas
dec
iret
fcomp
mov
pop
cmpsb
sbb
js
mov
out
push
mov
sub
or
movsl
cmp
mov
out
xorl
lods
mov
mov
aaa
mov
sbb
or
stos
nop
cmpsl
jae
ds
daa
dec
clc
les
mov
cmp
mov
xchg
divl
pop
jb
mov
mov
test
pop
in
mov
lock
subb
lret
hlt
jnp
popa
sahf
pop
cmp
mov
pop
sbb
dec
stos
fists
pop
hlt
mov
cs
xchg
push
outsb
dec
sub
lods
imul
pop
jno
outsb
adc
lea
cmpsb
xor
in
cmpsl
xchg
xchg
outsb
hlt
out
pop
sbb
cs
push
jge
mov
sbb
sub
mov
sti
filds
in
negb
loop
bswap
cmp
dec
or
movsl
adcl
in
jg,pn
or
call
xchg
imul
cmp
xor
adc
stc
inc
cmp
fmuls
jg
clc
xchg
xor
xchg
hlt
das
mov
and
adc
pop
shr
jg
sbb
cltd
sbb
scas
sub
xchg
mov
adc
pop
mov
mov
jnp
sti
adc
mov
adcb
cmp
aam
outsl
mov
fistpl
ret
andb
sub
or
movsb
imul
test
add
or
push
std
mov
dec
fisttpll
jmp
jge
xor
ljmp
inc
push
outsl
push
out
sbb
arpl
or
sbbb
int
out
sti
push
fildl
popf
movsl
ljmp
js
and
addr16
add
sub
subl
sbb
sbb
loopne
ret
lcall
pop
imul
repz
aam
xchg
push
ljmp
mov
cmp
fistpl
mov
imul
sub
hlt
jecxz
sub
xchg
jmp
sub
xchg
and
adc
jns
mov
jns
or
fisubrs
ret
pop
mov
insb
mov
jns
inc
std
imul
mov
push
popa
sub
lret
pop
arpl
aad
std
lea
add
stc
mov
sbb
nop
sub
mov
pusha
leave
pop
mov
pop
xor
repz
ljmp
mov
sub
std
xchg
mov
in
push
lds
xchg
or
test
sbb
das
cmp
sahf
xchg
mov
and
mov
ret
jns
jl
adc
sti
popf
xchg
push
rolb
fsts
out
js
or
cmp
adc
jg
icebp
lahf
cmp
xchg
imul
mov
ss
je
adc
dec
adc
add
sarb
fdivr
mov
in
bound
pop
xor
jb
or
filds
mov
jae
mov
ja
cmpsb
xchg
mov
out
sbbb
aas
mov
cli
sub
or
and
cmpsl
cltd
mov
call
pop
les
cs
xlat
mov
repz
add
lahf
fildll
shrl
mov
clc
jg
or
sti
xchg
and
nop
adc
dec
push
fists
cmp
sub
push
mov
cs
fbstp
jbe
lea
mov
dec
add
and
cmp
mov
hlt
stos
mov
mov
unpcklps
dec
dec
insl
imull
repz
scas
ret
test
add
loopne
out
pop
out
xor
sti
pop
movsl
mov
fs
adc
xchg
xchg
pop
xchg
add
mov
dec
xor
mov
clc
ljmp
pop
add
sbb
mov
mov
std
inc
fs
and
ret
sub
nop
mov
movsb
push
out
dec
fldl
xor
loop
add
inc
or
pop
pop
pop
cmc
pop
mov
lods
jno
or
mov
jne
push
in
mov
rcrb
sarb
div
out
out
testl
and
stc
push
jns
mov
or
push
nop
jno
iret
sub
sbb
pop
enter
jl
shl
dec
nop
addr16
ret
mov
jecxz
int3
inc
repnz
imul
insb
je
mov
add
lock
add
sub
sbb
lods
insl
divb
xchg
mov
sub
and
adc
pop
cltd
xchg
ds
insl
adc
aam
inc
mov
fwait
imul
cwtl
sbb
adc
mov
xor
jecxz
add
ret
mov
pop
adc
xchg
das
sti
add
rclb
adc
cmp
ss
jb
xchg
jae
in
in
push
stc
push
xor
push
stc
lods
call
test
mov
xor
repz
out
jmp
mov
pushf
cs
jl
jo
inc
stos
inc
in
es
call
or
ffreep
inc
push
cmp
jnp
pop
mov
mov
orl
pop
js
xchg
sarl
es
xchg
testl
xchg
cwtl
mov
shld
xor
fsts
and
std
xlat
jmp
add
popf
mov
out
cli
jns
jle
ljmp
jmp
or
test
push
ja
mov
jb
dec
inc
cmp
xchg
mov
xchg
cld
stc
sahf
mov
imul
dec
sbb
movsl
add
inc
or
es
dec
cli
push
sub
mov
outsb
icebp
pop
sub
push
pop
xlat
add
jae
dec
xor
ret
mov
push
jo
inc
in
scas
cltd
dec
ret
push
sub
stos
xor
mov
xchg
aam
add
and
fsubl
lret
mov
loop
or
xchg
movl
xor
repnz
add
adc
rcrb
arpl
fwait
mov
stos
movl
scas
xlat
dec
sub
jmp
dec
das
inc
push
inc
idivb
jmp
dec
dec
xchg
pop
xchg
pop
pop
shll
and
movsl
adcb
loop
lahf
addr16
xchg
cmp
iret
out
mov
and
xor
nop
mov
xchg
and
sbb
pop
push
fidivs
inc
loopne
pop
or
ja
push
cmp
outsl
data16
add
testl
sub
add
sbb
pop
stos
cs
cmpsb
aaa
fdivl
inc
jle
popa
repnz
jne,pn
xor
sahf
mov
shlb
scas
fists
rclb
dec
sub
jecxz
mov
jp
sbb
mov
imul
sti
fisttpl
cmp
int3
or
gs
pop
mov
js
xor
pop
mov
and
rcrb
sub
and
mov
dec
imul
pushf
cmc
int3
popa
push
mov
divl
mov
mov
inc
adc
pop
jo
fwait
nop
rcrb
mov
or
lret
inc
sbb
bound
aad
mov
sbb
lcall
mov
rorb
cld
push
hlt
addr16
push
mov
mov
mov
outsb
or
jp
dec
push
imul
iret
outsb
aas
dec
push
cld
push
mov
push
aad
mov
fcomps
hlt
sbb
cmp
ja
mov
in
xlat
mov
fwait
dec
test
mov
inc
fwait
imul
adc
sub
arpl
mov
or
out
mov
jle
xchg
test
sub
or
and
push
fwait
sub
pop
pcmpgtd
ja
mov
xchg
mov
pop
sbb
inc
addb
paddd
lock
test
lcall
inc
pop
enter
mov
pop
fwait
sahf
lods
jp
mov
lods
sti
data16
and
fsts
and
push
lret
push
test
mov
sub
popf
inc
push
cmp
ret
nop
mov
sbb
xchg
adc
lods
fs
int3
mov
xchg
pop
cmpsl
call
fnstenv
dec
test
daa
mov
mov
jns
mov
add
pop
repnz
mov
dec
jl
xchg
ljmp
out
sbb
jl
push
lock
testl
mov
ljmp
js
dec
fisubrl
int3
fxch
sub
pushf
inc
and
mov
lods
mov
leave
xchg
outsl
pop
insl
fucomi
outsb
repnz
fcompl
fldcw
dec
daa
pusha
dec
leave
aad
addr16
add
cmp
xor
iret
cld
shlb
dec
popf
mov
cmp
mov
fisttps
movsb
fstl
cmp
lcall
or
stos
test
int3
das
jno
stos
les
inc
or
add
jle
lea
cwtl
push
sbb
mov
cwtl
jg
not
dec
add
arpl
mov
or
call
in
xor
test
loopne
push
mov
xchg
push
repz
adc
subl
pop
dec
lock
sub
lds
push
mov
xor
cmp
or
sub
loope
inc
popf
cmp
sub
daa
mov
cli
and
cs
decb
loopne
jge
xchg
and
cs
push
sub
adc
out
dec
cli
jge
or
pop
xor
repz
adc
adc
mov
sbb
mov
jecxz
jbe
stos
fisubl
add
push
push
xor
xlat
nop
rolb
jg
mov
sarl
mov
xlat
aaa
in
fidivrs
jno
sbb
rcrb
mov
arpl
mov
cmp
in
mov
movsb
jl
pop
push
mov
mov
and
jp
mov
jl
sub
ret
mov
bound
jbe
int3
push
dec
xchg
cmp
mov
xchg
push
jg
cmp
adc
sub
out
leave
mov
sbb
push
mov
nop
sbb
imul
mov
jmp
cwtl
ret
js
sbb
mov
xchg
dec
ret
iret
sub
jmp
push
lods
call
sbb
hlt
jo
icebp
xchg
icebp
dec
and
fcmovnu
enter
cwtl
lock
inc
cwtl
stos
loopne
and
hlt
mov
cmp
push
cltd
jge
or
mov
mov
dec
xchg
jmp
test
adc
fsubrl
xor
mov
jg,pn
iret
jbe
pop
mov
xor
and
fisttps
pop
jns
int3
lea
fs
adc
pop
sbbb
mov
and
add
xor
ja
push
xlat
std
out
mov
mov
shrl
rcrb
xor
dec
test
mov
pop
inc
orb
ret
pop
and
jp
lea
push
lods
daa
add
ja
adc
push
xor
outsl
mov
shl
lret
test
loopne
imul
xlat
mov
and
enter
iret
adc
and
adc
mov
sub
ret
jno
dec
or
pop
jne
xchg
lods
stc
pop
xlat
sbb
dec
mov
ret
sub
loope
shl
xlat
adcl
cmpsb
mov
int
fsubr
push
std
push
out
mov
adc
rorb
or
ljmp
notl
shlb
sbb
or
dec
decb
jns
push
gs
repz
push
daa
push
aad
push
fucom
add
sub
add
jo
dec
sub
out
cmp
vpmulhw
push
movsl
inc
mulb
and
jl
jb
mov
dec
sub
jae
out
sbb
push
out
imul
cmpsl
sub
neg
repz
xlat
je
fnstcw
mov
mov
sti
xchg
push
mov
arpl
mov
ljmp
jne
sti
fidivl
mov
mov
sub
hlt
sbb
jle
dec
jbe
mov
adc
lcall
jg
mov
push
mov
push
dec
sub
pop
fistpl
sarl
cld
sti
sbb
loope
xor
test
push
shlb
adc
and
lret
jne
lahf
clc
cmp
cs
mov
test
pushf
lret
daa
mov
pop
jns
inc
testl
ds
mov
es
repz
fwait
cmpsb
jb
pop
in
dec
or
sbb
mov
sbb
test
cmpsl
sbb
and
xor
inc
xor
popf
pop
insb
mov
cltd
adcb
gs
rolb
cmp
mov
fbld
data16
addr16
leave
xlat
xchg
xchg
mov
xor
xchg
adc
int
int
ja
inc
rcll
loopne
repz
jmp
sbb
xor
push
mov
mov
aam
and
cmc
sbb
lret
xchg
leave
lock
lcall
and
dec
rorl
in
jno
dec
mov
test
mov
adcl
fdiv
mov
repz
leave
leave
jne
ret
xchg
mov
or
movswl
push
adc
inc
push
jae
subb
xchg
add
jle
xor
stc
mov
cmpb
jmp
mov
cmp
scas
add
test
rcr
lret
imul
or
les
je
adc
push
xor
inc
mov
mov
lods
dec
dec
push
cmc
add
cs
jne
sub
aad
sbb
in
mulb
dec
inc
add
pop
mov
test
jg
xchg
stos
dec
xchg
xchg
mov
pop
sarb
inc
xchg
out
xor
leave
and
cwtl
xchg
and
push
cmp
andl
rol
sub
rcl
mov
cli
jge
jb
mov
ret
scas
ret
scas
fcoms
dec
push
cmp
ljmp
xor
enter
enter
je
ret
aas
fisttps
xchg
pop
hlt
xlat
int
shll
insl
push
jmp
shlb
fbstp
pop
lahf
nop
dec
popf
mov
push
cmpsb
push
fcmovb
adc
addr16
dec
out
mov
inc
and
jp
ret
fistpl
cmp
sbb
js
imul
cmp
adc
push
pop
push
shll
cltd
in
loopne
push
mov
lods
scas
sub
cmpsb
test
pushl
call
lods
nop
mov
mov
addr16
xor
jge
xlat
adc
push
scas
fbstp
call
les
insb
xchg
cltd
push
outsb
test
inc
xor
dec
pop
pop
push
xchg
test
int3
inc
or
ljmp
jg
cmp
sbb
pusha
je
mov
arpl
dec
add
fwait
in
cmp
into
push
pop
jmp
iret
fiadds
mov
imul
inc
in
addr16
push
gs
rcrb
xor
xlat
push
fsubrl
sbb
int3
sbb
jecxz
packuswb
punpckhdq
adc
mov
or
subb
sbb
adc
sub
adc
sbb
sbb
sarb
jg
fdiv
push
and
arpl
loopne
in
or
push
notl
dec
jmp
sbb
push
jne
mov
xchg
sub
fcomip
inc
sti
sbb
inc
je
dec
mov
int
daa
cli
ja
icebp
insb
data16
or
xchg
sub
mov
gs
ljmp
popa
fldcw
adcb
out
icebp
push
leave
push
out
adc
xor
das
lcall
adc
std
adc
fwait
test
les
daa
scas
stc
jbe
in
push
rcrl
fnsave
xorl
add
and
or
push
cld
cwtl
push
leave
xchg
pop
mov
add
mov
test
icebp
mov
add
adc
jns
popa
or
dec
jmp
push
rcrl
stos
push
popa
push
push
sbb
adc
mov
hlt
push
pop
lea
dec
imul
negl
lods
inc
je
add
insl
leave
rol
cld
cmp
or
add
lret
mov
mov
dec
or
in
mov
pop
inc
jmp
sub
dec
stc
aaa
js
rcrl
xor
or
in
inc
hlt
jb
and
mov
fwait
ja
or
jmp
cmc
jg
out
jg
cmp
test
pop
clc
dec
jmp
inc
inc
mov
mov
js
mov
divb
outsb
and
dec
dec
hlt
add
imulb
cs
insl
push
jg
out
dec
outsl
pop
jns
inc
inc
push
pop
imul
sbb
mov
pop
shl
fucom
pusha
or
dec
mov
dec
xchg
cmp
push
push
inc
repnz
xor
fildll
adc
pop
push
add
lahf
out
push
aad
cmp
lea
ret
fisttpll
jecxz
mov
imul
test
stos
fisubrl
or
fcoml
cmp
mov
jne
insl
inc
and
mov
test
adc
mov
call
cmp
cs
dec
icebp
lea
jp
add
pop
or
hlt
mov
in
add
fisubrs
dec
sub
pop
outsl
std
jg
xchg
and
mov
sbb
into
mov
ljmp
mov
add
inc
pop
arpl
or
stos
xorl
imul
push
sub
out
icebp
leave
and
dec
jnp
sbb
mov
mov
xor
scas
xor
xchg
out
mov
fs
jae
push
xor
das
dec
xchg
cmp
xchg
cmp
pop
fwait
mov
sub
pop
loope
pusha
stc
jns
out
test
push
es
andl
ja
inc
fmuls
ss
std
xor
xor
add
mov
iret
lock
fstpl
shl
inc
fmul
jg
dec
fs
push
test
loopne
inc
dec
mov
leave
xor
lcall
jmp
insl
inc
push
les
lret
inc
scas
cmp
jl
and
orb
jne
xchg
mov
sbbb
andb
pop
jmp
cli
fs
mov
or
adc
mov
xor
xchg
test
call
testb
mov
roll
mov
test
mov
sarb
ja
xchg
push
scas
jno
les
pop
and
jl
inc
mov
xchg
mov
inc
ljmp
fwait
inc
mov
fisttpll
jne
mov
jecxz
lods
pop
fsts
sbb
pop
lahf
mov
add
in
out
inc
imul
lods
ret
data16
push
andb
jmp
outsb
movsb
cmp
sub
lds
imul
pop
xor
jl
and
or
jnp
and
dec
inc
cmpsl
jmp
fadd
cmc
test
push
and
and
inc
das
mov
stc
int
mov
ss
mov
dec
add
xor
loope
inc
xchg
ja
dec
stc
push
ret
xlat
push
lea
scas
jg
ret
aas
mov
pop
mov
sar
jp
cltd
add
in
out
sub
cmc
das
aaa
jl
push
add
mov
pushf
imul
mov
pop
std
sbb
xlat
mov
mov
jae
mov
out
pop
pushf
and
je
insb
adc
dec
mov
pop
rcrb
xchg
mov
std
aaa
jmp
mov
cmp
xor
jno
fwait
xor
jle
jb
dec
test
dec
xchg
cmc
or
mov
std
lock
mov
pusha
push
cmp
push
mov
mov
test
push
pop
roll
sbb
mov
fsubr
daa
and
or
js
xor
ds
adc
dec
shr
scas
in
cld
cmc
or
in
cmp
ret
repnz
lret
jbe
std
out
xor
cld
adc
dec
adc
rcll
xchg
les
mov
in
lods
insb
cwtl
dec
ja
out
call
inc
pop
nop
shll
repz
repz
or
inc
xchg
xchg
inc
jne
xor
xor
xchg
pop
repnz
sahf
mov
leave
and
sbb
rclb
loopne
inc
jae
in
mov
push
cmpsl
xor
fidivl
outsb
xchg
stos
es
lahf
je
daa
mov
ret
sub
shlb
shlb
mov
daa
and
fwait
inc
pop
xor
fistl
arpl
xchg
push
in
js
adc
popf
addl
popa
push
popa
add
mov
and
int3
fadds
mov
ja
scas
fidivl
mov
add
rcrl
jne
mov
ss
lods
in
vpsubd
xor
in
out
out
pop
test
ds
and
icebp
xchg
adcb
add
mov
insb
fmulp
mov
jo
dec
inc
xchg
popf
push
aam
hlt
ss
out
orl
push
mov
je
fsin
enter
loop
ret
addb
add
xor
ret
adc
lcall
popa
adc
jmp
fadd
shll
adc
xor
mov
xchg
out
pop
aam
daa
push
jo
pop
adc
xchg
cmc
ficoml
cmp
mov
adc
sub
or
pop
and
je
pop
cmp
sbb
inc
dec
out
mov
mov
mov
fcoms
jnp
ja
jns
add
xlat
mov
and
sub
shlb
cwtl
aam
imul
test
lret
aaa
ror
stos
sub
push
fwait
sti
iret
lock
jl
out
sub
fldenv
out
loop
fwait
add
es
add
and
repnz
or
jne
and
pop
mov
loop
pop
pusha
sub
and
repz
and
push
jg
push
dec
ffree
dec
dec
mov
scas
sbb
rcll
dec
das
arpl
cltd
outsb
inc
je
mov
sahf
cmp
rolb
xchg
popf
or
gs
outsb
lahf
enter
dec
mov
cmp
xchg
lahf
mov
insl
es
adc
pop
out
std
into
stos
ja
sahf
pop
mov
mov
jmp
je
mov
mov
divl
xor
sub
sub
data16
add
repz
in
jmp
sub
pop
push
add
test
sbb
adc
add
push
dec
cli
mov
test
pop
dec
fildl
cmpb
adc
inc
xchg
mov
xbegin
adc
adc
mov
negl
jl
push
sub
xchg
lea
sysexit
mov
cmp
test
or
push
mov
pop
jb
lahf
push
push
sbb
sbb
insb
cmpsl
comiss
das
ds
mov
dec
pop
lds
les
mov
mov
dec
adc
jb
enter
dec
dec
dec
imull
test
xor
popf
adc
scas
mov
push
sbb
mov
iret
or
out
out
cmp
lret
mov
xchg
popf
inc
add
xchg
ljmp
stos
and
push
mov
cwtl
jne
ret
mov
push
outsl
cmp
movsb
imul
mov
cmp
cld
push
sub
xchg
inc
push
pop
jnp
push
inc
or
cs
mov
imul
repnz
jle
xchg
mov
popf
jmp
push
pop
cltd
fnstsw
int3
xchg
push
adc
rolb
or
or
fwait
in
lods
mov
mov
pop
outsb
jecxz
cmp
push
push
loop
mov
mov
outsb
pop
adc
xor
adc
mov
jecxz
stos
stos
push
sbb
sub
fcmovb
xor
repnz
gs
xchg
xchg
pop
cwtl
ss
jne
jg
in
decl
in
mov
sti
imul
ds
das
subl
in
jnp
xchg
add
and
push
sahf
cmp
mov
xchg
scas
dec
cmc
stc
adc
dec
mov
push
mov
sub
cltd
mov
lods
mov
or
push
sbb
daa
xchg
stos
jmp
push
and
mov
outsl
sbb
mov
pop
pop
mov
inc
or
and
ljmp
fcmove
mov
push
mov
pop
and
push
jmp
adc
cwtl
mov
mov
mov
mov
scas
stc
mov
lahf
push
cmp
mov
adcb
xchg
or
dec
sub
dec
mov
mov
test
dec
sub
sbb
push
dec
fmull
loop,pn
loopne
rol
es
mov
scas
movsl
mov
je
mov
jecxz
push
cmp
cmp
pop
mov
pop
sbb
sti
xor
xor
pop
inc
xchg
or
movsl
mov
xchg
push
mov
mov
mov
outsb
mov
sub
out
mov
ja
dec
jge
sahf
mov
mov
mov
xchg
lahf
rorl
xchg
jmp
mov
adc
imul
or
scas
xlat
notl
push
in
icebp
jns
mov
jge
movsb
testl
fcos
cli
mov
xchg
ds
repz
les
loopne
or
push
mov
or
jbe
insl
add
sub
pusha
jmp
mov
lret
cmp
jae
adc
stos
push
popf
jg
xor
lods
test
dec
xchg
sarb
fiadds
adc
xchg
cli
push
mov
xchg
in
out
sub
fldcw
or
insb
insl
sub
popa
mov
push
cmpsl
adc
mov
mov
mov
ljmp
jne
imul
mov
push
lahf
xlat
xchg
xchg
push
adc
roll
loopne
mov
jns
cmpsl
add
or
push
shrb
mov
xchg
pop
jne
xchg
movsb
cli
pop
mov
and
repnz
mull
call
std
mov
idivb
std
adc
mov
sub
mov
dec
adc
icebp
mov
dec
jbe
xchg
push
inc
mov
testb
mov
shll
sbb
mov
cmp
das
add
ds
inc
mov
dec
pop
btr
das
adc
dec
mov
loop
or
fildl
out
push
pop
xchg
push
xlat
fpatan
fnstsw
jnp
sub
out
cli
or
cs
add
xlat
lock
xor
imul
stos
dec
dec
cmpsb
mov
inc
aaa
push
loopne
mov
push
rcll
shlb
out
movsl
xor
mov
lods
adc
test
bound
inc
mov
jge
std
cs
nop
call
jb
add
or
ja
test
pop
lahf
xchg
xlat
fsubr
xor
orl
dec
testl
jp
push
push
imul
gs
imul
sbb
xlat
sub
xchg
xchg
mov
pop
inc
nop
icebp
mov
push
lret
fs
stc
pop
sbb
loopne
mov
and
mov
jmp
test
inc
dec
test
aad
pop
lods
sub
scas
pop
cli
inc
sbb
fisttps
cmc
xchg
ret
add
xchg
lretw
dec
add
pop
dec
fldcw
or
hlt
ja
sub
push
addl
out
cmpxchg
cmpsb
rclw
mov
outsb
push
test
and
mov
fistpl
ss
gs
sub
fcoml
inc
cmp
and
fs
rclb
mov
sbb
ja
sahf
addr16
mov
cmp
cmc
dec
push
push
cmpsb
icebp
xor
cmp
adc
xchg
sub
test
insb
add
notb
mov
test
xor
add
mov
insl
int
and
cmc
pop
daa
aad
cmpsl
or
pop
adc
shrb
js
ret
jb
pop
cltd
dec
stc
clc
and
mov
ss
out
or
push
movlhps
pusha
stos
mov
test
idivl
and
les
clc
xchg
mov
inc
dec
pop
aaa
jg
loop
jns
addl
dec
dec
je
inc
loop
xchg
mov
mov
or
jp
out
in
outsb
shll
pushf
pop
in
les
and
inc
sbb
mov
sbb
xor
xor
dec
sahf
xchg
or
add
add
mov
outsl
mov
ljmp
je
jmp
dec
dec
add
xlat
outsb
mov
lea
fwait
outsl
push
cltd
fcom
mov
outsb
icebp
add
push
cmp
mov
test
adc
mov
aam
insl
stos
rcl
jecxz
push
sahf
sbb
out
frstor
sbbl
mov
cwtl
push
adc
mov
push
in
aam
ja
mov
addb
cltd
mov
out
or
mov
jmp
jmp
int
inc
stos
dec
pop
and
and
add
outsb
jnp
stc
xlat
adc
fldenv
sahf
dec
xor
lret
ss
pusha
cmpsb
shrd
cmp
mov
call
push
iret
cmp
fisttps
pop
js
fdivrl
jmp
test
fdivrl
add
sbb
mov
mov
and
lahf
int3
dec
cltd
jecxz
insl
aam
add
scas
lahf
into
sar
leave
push
dec
mov
cmp
insb
bound
sub
dec
fstl
push
stc
push
lock
jp
inc
xchg
jns
lcall
fdivrs
adc
dec
addl
in
hlt
ret
pop
dec
jge
call
sbb
xor
inc
xor
xor
jp
shll
mov
ljmp
add
fs
mov
aad
or
mov
jp
insl
mov
jp
lods
sbbl
mov
hlt
test
arpl
call
ret
sbb
sbb
mov
movsb
int
adc
xor
push
or
test
xor
lods
pop
nop
dec
iret
dec
inc
dec
jle
jb
fnsave
retw
movsb
jne
in
mov
out
mov
jo
cmp
xchg
sbb
push
adc
xlat
repnz
insl
jo
in
mov
mov
add
adc
mov
xor
inc
sarb
test
dec
dec
lcall
sub
mov
push
fcoml
loopne
into
sti
clc
mov
shrb
into
testl
aaa
mov
repnz
xor
bound
int
test
inc
mov
lock
push
mov
insb
mov
dec
pushf
cltd
add
mov
ljmp
sub
movsl
loope
test
jge
mov
push
pop
jbe
mov
lock
imul
test
xlat
jmp
or
and
stos
in
scas
leave
inc
fdivs
dec
push
in
mov
rcl
lret
cmp
popa
prefetch
icebp
or
addb
mov
pop
adc
add
xor
or
cmp
leave
out
aam
mov
fwait
in
shll
jg
mov
lret
adc
outsb
mov
and
sub
lock
cltd
int
jbe
xchg
add
std
loopne
in
scas
jle
inc
mov
subb
sar
pop
idivl
inc
scas
je
outsl
adc
enter
inc
stos
int
push
pusha
std
sarb
mov
jb
js
es
out
icebp
jle
stc
push
xchg
daa
pusha
repnz
jp
mov
adc
dec
dec
rcl
xor
inc
int
mov
inc
inc
sbb
ljmp
test
push
ds
and
icebp
dec
push
cmpsb
nop
sub
or
fsubl
mov
repnz
int
sbb
jmp
je
xor
xchg
into
mov
cmp
mov
loopne
ss
xchg
js
faddl
xchg
push
xchg
imul
dec
inc
out
jl
shlb
mov
loope
xchg
or
imul
outsb
outsb
pop
dec
out
icebp
lds
xchg
xor
mov
aaa
es
loopne
add
sub
or
aaa
lret
mov
sti
inc
jno
mov
movsb
cli
pop
out
outsb
enter
sbb
shrl
hlt
sbbb
mov
aam
or
adcl
push
aaa
stos
push
adc
into
stos
addl
inc
push
mov
add
jno
ds
xchg
pop
mov
xor
jge
cmpsl
aad
sub
aad
repnz
push
ljmp
add
inc
push
sbb
inc
push
push
mov
jbe
mov
into
xchg
push
xor
aad
js
sbb
movsl
aas
mov
fcompl
push
dec
mov
and
arpl
sbbl
mov
imul
fyl2xp1
mov
repz
cmp
out
xor
adc
je
arpl
rorl
cwtl
scas
push
mov
sbb
jp
shlb
dec
and
out
xlat
cltd
mov
xor
push
fwait
imull
mov
ds
sbb
mov
xchg
dec
inc
xor
insb
je
mov
int
inc
icebp
mov
scas
fsubrs
aam
incb
xchg
insb
nop
and
mov
dec
and
out
fwait
stos
sub
pop
call
add
jae
lods
pop
lock
inc
imul
rcr
in
dec
loop
pop
dec
jl
fadd
scas
cld
outsl
sbbb
jae
pusha
test
jne
jp
sbb
inc
lods
jbe
in
es
cmpsl
inc
hlt
mov
or
mov
mov
lods
mov
add
jne
in
aas
mov
fisubrs
cmp
or
shl
jo
mov
sub
rolb
push
out
data16
cmp
rcrl
je
push
ljmp
std
xor
push
mov
es
mov
in
fidivl
hlt
fucomi
pop
adc
int3
arpl
sete
cmp
popf
popf
inc
jp
shlb
cli
mov
push
cmp
mov
xor
pop
inc
xor
lock
pop
lret
lahf
dec
or
mov
fdivs
mov
adc
pop
sbb
pop
pusha
rorl
mov
inc
ret
sbb
adc
rolb
sbb
js
es
push
inc
aam
pop
flds
adc
push
xor
jl
push
jge
sub
ja
icebp
mov
test
dec
mov
outsb
inc
cli
lret
jnp
test
or
push
mov
or
xchg
jg
ss
cmpb
test
lock
jno
mov
mov
xchg
sbb
std
sbb
pop
lock
pop
inc
dec
or
aas
xor
push
xor
lock
cmp
ret
add
data16
dec
imul
aas
lcall
sbb
int3
dec
xchg
xor
adc
int
popa
loop
and
scas
pushf
mov
rolb
and
and
add
call
sub
imul
scas
lods
clc
pop
imul
aaa
cs
addr16
mov
loopne
out
shrb
lret
mov
out
das
dec
rcl
lret
mov
pop
int
sbbb
sahf
mov
frstor
pop
dec
ret
jge
and
fs
pushl
inc
scas
iret
dec
jmp
stos
xchg
sub
or
lahf
inc
push
js
leave
push
mov
xchg
imul
enter
jp
inc
cmc
sarb
mov
xlat
jmp
movsl
and
cwtl
cmpsl
pusha
lret
mov
cmp
mov
mov
dec
mov
xor
cli
cmc
lea
mov
lahf
lahf
cwtl
push
inc
xchg
xchg
lods
out
clc
ljmp
movsb
jne
aad
jb
pop
xchg
pop
or
lods
movsl
mov
pop
jne
xor
xlat
fs
loopne
subl
fcoms
lret
sar
sbb
jmp
test
sub
out
inc
insb
xchg
dec
js
test
cmpsb
fs
xchg
mov
cmp
pop
test
stos
xor
shll
fistpl
negb
fdivrl
in
xchg
mov
insl
cmpsb
sahf
sbb
and
incb
add
and
mov
call
mov
push
inc
push
pushf
inc
in
fs
scas
pop
pop
jl
xlat
pushf
negl
mov
aam
je
mov
jle
cmp
loope
lea
cli
and
fmull
stc
mov
jb
inc
xlat
cmp
pop
inc
negb
lods
cmp
jl
and
lret
imul
les
aam
jle
stc
inc
add
fmull
pop
or
loope
mov
fcoml
sbb
dec
outsb
or
xor
and
aad
repnz
ret
movb
sbbl
cmp
insb
into
mov
out
mov
cs
pop
inc
add
in
xchg
add
pop
jp
pop
push
cmp
push
add
xor
mov
push
imul
jae
push
push
in
in
insb
out
repnz
addr16
je
and
stos
xchg
ljmp
cs
sub
sub
jns
cmpsb
outsb
sub
scas
in
mov
adc
sub
pop
pop
sub
rol
pop
fldenv
pop
push
in
mov
imul
sahf
lret
js
and
out
inc
push
mov
test
and
popf
jns
in
push
mov
cmpsl
and
movsl
cmc
gs
mov
repz
sub
popf
xchg
stos
xorl
arpl
std
mov
push
and
push
fsave
push
std
je
sbb
repz
fidivrl
das
push
add
loop
xchg
add
cli
xor
loopne
sbb
mov
lds
cwtl
pop
repnz
xchg
or
daa
fsubrl
in
mov
xchg
mov
mov
mov
ret
and
idivb
pop
inc
cmpsl
push
push
sub
fistps
jle
push
ss
ja
jns
push
les
popa
pop
dec
or
or
xlat
ja
pushw
jmp
in
or
pop
cltd
fs
cmp
dec
test
adc
shrb
jb
aaa
push
stos
mov
push
lret
or
sub
jb
test
inc
jb
pop
lods
rclb
inc
insl
repz
enter
lods
in
xor
push
pop
rclb
nop
cmp
add
aas
inc
movsl
push
aad
pop
xchg
out
cmpsb
stos
lcall
cmp
jno
int3
jnp
xchg
nop
mov
mull
jne
and
testl
mov
mov
fidivrl
dec
shlb
adc
pop
mov
pop
ds
pop
xchg
movsb
cmc
lds
dec
cmp
fwait
xchg
rolb
fisttps
dec
or
inc
mov
ljmp
push
mov
in
test
push
out
xchg
rcl
or
jo
dec
add
xlat
pop
lret
xorl
stos
cmc
popa
push
mov
sub
arpl
push
mov
ljmp
xor
dec
mov
sahf
xchg
pop
xor
dec
dec
ret
arpl
rcr
mov
jl
xchg
push
add
mov
enter
sub
fdivr
rcrl
movsb
inc
stos
test
pop
mov
outsb
aad
jp
adc
inc
insb
jo
add
test
clc
dec
push
mov
mov
or
cs
or
inc
fisubl
mov
daa
bound
int3
add
xchg
leave
lods
dec
les
jg
inc
iret
ret
dec
dec
sbb
jp
mov
std
in
test
testl
dec
or
inc
lret
fistpl
mov
inc
imulb
in
jmp
or
xchg
lods
add
sbb
adc
insb
jecxz
jno
cwtl
imul
sti
cltd
addr16
cmp
pop
shrb
lock
pop
out
adc
scas
pop
lea
jae
in
nop
add
repnz
fiaddl
mov
jbe
sbb
popa
in
adc
mov
ss
sub
lods
inc
clc
scas
icebp
and
out
stc
mov
lds
sub
popa
gs
into
aaa
inc
stos
les
or
dec
mov
shll
push
or
inc
mov
stos
mov
jp
movsl
cli
sbb
inc
cmp
rsm
jne
and
movsb
mov
lcall
test
sbb
cmp
inc
rclb
out
cmp
cmpsl
negb
mov
mov
out
mov
es
pop
fnstcw
into
pushf
fisubrl
or
sub
mov
or
mov
push
pop
dec
cmp
xor
push
or
les
int
cmc
xchg
jecxz
dec
pop
inc
fucomip
pop
outsb
or
inc
pop
sbb
dec
imul
mov
mov
shll
outsl
dec
lds
xlat
or
jne
push
push
mov
dec
out
les
inc
std
adc
jo
mov
inc
out
mov
aad
fildll
adc
mov
mov
push
bound
mov
mov
push
push
cmp
inc
dec
jp
lods
pop
aaa
and
inc
call
xchg
mov
test
or
xor
leave
push
roll
sub
inc
add
gs
fisttps
xchg
jmp
imul
xchg
dec
jno
add
jns
xchg
fistps
mov
mov
scas
and
out
xchg
mov
and
add
mov
add
pop
xor
push
push
xchg
test
sahf
add
lcall
js
xchg
mov
popf
rorb
fsubl
and
movsl
sbb
dec
lret
sub
bound
and
push
ds
jg
mov
cmp
add
imul
mov
outsb
inc
rol
call
repnz
cmpsb
jns
pop
inc
dec
fs
push
jge
out
rcrl
adc
sarb
sub
lret
add
cld
mov
cmpsl
pop
push
inc
xchg
inc
jbe
and
jp
ljmp
pop
push
push
xor
jmp
nop
repz
jge
mov
dec
aaa
lea
nop
iret
filds
inc
notl
cltd
mov
es
sarb
xor
mov
sbb
mov
test
dec
xchg
cmp
ljmp
stc
pop
out
or
popa
jbe
and
sub
mov
out
movsl
hlt
mov
push
lds
stos
xorl
sbb
adc
xchg
stos
jp
test
xchg
or
lea
sub
xchg
inc
lret
mov
gs
shrb
mov
bound
mov
inc
test
adc
jp
popw
adc
push
push
lods
cmp
inc
and
outsl
dec
sbb
sbb
mov
stos
fstps
sub
insb
xchg
cmp
xchg
mov
into
aad
inc
dec
push
addr16
cmpsb
cmp
jp
or
ja
aad
repnz
inc
inc
rcll
mov
pop
aas
xor
jo
or
pop
push
push
sbb
push
sahf
cs
enter
loop
loope
les
scas
push
repnz
testl
popf
xchg
in
mov
jno
xchg
mov
icebp
mov
add
out
iret
shrl
repnz
imull
sbb
shll
popa
or
mov
fidivs
imul
cmpsb
scas
mov
lods
push
in
jge
pop
repnz
icebp
ja
adc
cmpsl
test
jmp
cmp
mov
into
sub
pop
dec
scas
or
lods
ss
sahf
cwtl
aam
clc
mov
loope
mov
out
xchg
dec
es
dec
add
stos
rcr
cld
pusha
rclb
pop
mov
or
adc
pushl
dec
adc
pop
daa
jecxz
dec
clc
in
movsw
push
push
inc
clc
inc
dec
xchg
xchg
xor
xor
xchg
xchg
sahf
jmp
insb
dec
jecxz
xor
fsubrl
or
jge
sub
mov
inc
shrb
aam
mov
sti
std
pop
insb
aaa
mov
xor
push
or
es
or
in
push
and
cmp
xlat
sarl
push
iret
and
dec
push
hlt
les
pushf
cmpsb
mov
cmp
jg
sub
push
and
or
fsubl
es
test
adc
repz
es
pop
push
pop
mov
in
and
inc
or
call
dec
sub
test
push
inc
xor
stc
adc
xorl
add
pusha
imul
fnstsw
and
aas
xchg
sub
cmpb
xchg
pushl
fisubrs
sti
je
subb
sub
fdivrl
movsl
cli
shrl
fld
insl
jg
repnz
mov
jl
out
jecxz
or
mov
cmovle
pop
cmp
icebp
cmpsl
pop
js
pop
loope
jmp
pop
push
xchg
ss
loopne
xorb
push
call
shlb
mov
mov
inc
scas
dec
mov
lret
lds
cld
or
xchg
or
fistps
sub
adcl
sbb
mov
xor
mov
or
dec
sub
jge
in
jne
lret
out
push
xor
push
inc
adc
or
sub
xor
les
icebp
lcall
or
mov
mov
inc
dec
mov
bnd
outsb
icebp
dec
out
call
loope
jp
mov
arpl
jae
xchg
enter
or
addr16
and
daa
mov
mov
sub
or
loope
not
cli
cmp
fildll
daa
enter
or
xchg
lea
or
jle
or
cltd
iret
lret
stos
mov
cli
stos
nop
jmp
cltd
outsl
jns
push
fs
push
sub
sbb
jne
sbb
cmp
loope
pop
or
add
and
xor
adc
pop
rcl
xchg
lahf
dec
cld
xchg
sub
test
cltd
and
mov
cmp
adc
sub
imul
call
mov
rcll
fistl
xchg
or
mov
pop
hlt
adc
outsl
inc
fiaddl
inc
addr16
iret
push
xchg
and
adc
push
mov
lret
in
xchg
in
rcl
mov
or
sahf
xor
rcr
mov
jo
mov
popl
std
stos
sub
cmpsl
addr16
cmc
mov
push
sub
or
mov
stos
insb
jle
test
movsl
jl
popa
cli
lds
pop
loopne
inc
adc
cli
sbb
cmp
js
pop
sarl
push
sbb
ror
aaa
xor
jae
mov
sahf
inc
sub
in
imul
es
imul
loope
and
or
push
fidivrl
push
ret
jns
test
daa
fcomip
jne
js
rcrb
push
outsb
or
or
xor
fwait
ret
jnp
dec
push
cmp
push
push
out
jo
repnz
outsl
inc
cwtl
mov
pop
cmpsb
xchg
pop
fildll
mov
lcall
cmp
xchg
mov
data16
nop
sub
das
psubb
add
inc
popa
mov
add
mov
insl
mov
xchg
int3
lahf
mov
xchg
cmp
xor
in
outsb
adc
dec
loopne
cwtl
or
aaa
mov
mov
imul
daa
xchg
or
test
xor
imul
ret
and
mov
push
mov
mov
adc
mov
sti
cmpsb
pop
push
push
ret
xlat
dec
fmuls
out
mov
iret
into
sub
xor
xor
repz
xchg
scas
adc
cli
inc
cmp
das
std
icebp
ja
xchg
sub
ret
sub
call
je
or
shll
loope
adc
mov
in
js
adc
loope
xor
mov
test
repnz
dec
inc
aas
or
mov
mov
mov
repnz
sbb
sti
and
rcrl
ljmp
pushf
add
mov
xor
ret
mov
mov
dec
jae
jae
push
jecxz
xchg
syscall
fnstcw
nop
ljmp
insl
pop
inc
fadds
cld
pushf
push
xchg
inc
lods
xor
aas
cmp
add
lods
pop
or
scas
and
pop
fildll
sbb
push
lret
sub
aad
adc
cmp
pop
dec
pop
jno
adc
inc
sbbb
aad
dec
lret
pop
pop
aas
jmp
les
cmpsl
enter
dec
insl
lcall
xchg
gs
push
mov
es
push
call
cltd
rcll
or
jnp
repnz
push
xor
inc
add
das
xor
aas
cltd
xchg
popf
or
inc
cmp
mov
rcrl
rol
inc
and
mov
outsl
outsl
and
jb
fcoml
test
xor
and
outsb
shrl
je
das
mov
imul
mov
lret
in
enter
daa
cli
test
dec
ja
andl
add
xor
rcll
repnz
sub
cmpsl
add
ss
push
adc
movsl
adc
cmpsl
push
mov
je,pn
adc
gs
jl
mov
sbb
popa
flds
inc
push
inc
repnz
jne
in
test
push
shrl
xchg
sbb
mov
mov
out
add
rcl
xchg
in
or
jno
dec
xor
cmp
rolb
or
fistpl
outsl
adc
lods
addr16
sbb
mov
pop
mov
push
pusha
lret
and
dec
jo
mov
sbb
gs
and
fbld
push
gs
scas
sub
inc
mov
and
fidivl
cmp
push
movsl
xor
dec
mov
cmpsl
aam
jecxz
imul
cmp
pop
xchg
push
cli
fdivl
pop
mov
push
mov
jle
fidivs
arpl
jo
mov
add
add
mov
xchg
and
popa
jg
inc
cmp
or
add
stos
popl
and
data16
pop
out
jg
dec
cmp
dec
or
popa
cmpb
adc
cmp
in
sbb
inc
pop
loopne
out
and
notl
adc
xchg
mov
pop
stos
dec
sti
xchg
icebp
dec
cmp
ljmp
pushf
les
mov
xchg
dec
add
add
cmpsl
dec
pop
xlat
lods
fstpt
outsb
jle
xor
sahf
int
sub
lret
mov
sub
pop
push
cld
frstor
int3
pop
and
push
mov
ret
sbb
mov
movsb
shll
jns
pushf
push
sbb
add
mov
push
jbe
cmc
add
sti
loop
pop
mov
push
das
jae
insb
or
dec
xlat
rolb
insl
movsb
das
and
dec
or
stc
das
out
imul
stos
cmp
pop
mov
sbb
push
enter
loop
sti
sbb
xchg
lea
jb
aad
jb
out
lahf
fdivs
negl
je
pop
nop
aad
scas
and
cmpsb
fsubs
jmp
jb
inc
push
mov
pop
sbb
pop
arpl
mov
xor
xor
lea
repz
xor
mov
aam
aad
int
mov
pop
aas
pushf
xchg
mov
and
lock
jmp
leave
outsl
or
lds
or
vpacksswb
xchg
in
popf
pop
adc
xor
adc
movb
in
loope
stos
dec
ljmp
sub
jecxz
ret
sbb
adc
push
sub
sti
add
ficompl
call
xchg
sbb
push
scas
mov
add
inc
lret
in
mov
enter
sti
pop
jmp
aad
stc
sub
dec
dec
rclb
cli
cmp
pop
test
sbb
aas
int
sub
inc
das
and
in
sub
test
dec
jg
push
cmpsb
loopne
popa
mov
test
xchg
fiadds
jg
mov
inc
pop
pop
shrb
or
out
outsl
adc
in
dec
push
mov
arpl
push
lcall
mov
mov
sub
mov
jecxz
jmp
mov
push
dec
sub
add
shll
jne
or
mov
pop
add
mov
ret
hlt
mov
inc
jbe
out
out
fcompl
xchg
and
lret
aam
aam
clc
movb
xor
mov
cwtl
push
add
icebp
push
inc
cmp
loope
lock
gs
mov
mov
pop
xor
xor
iret
dec
ficoms
fidivs
mov
xchg
mov
pop
repnz
sub
and
pusha
and
inc
sub
adc
call
scas
pop
and
xor
mov
out
push
test
sbb
outsb
in
rol
mov
push
jp
mov
push
mov
mov
mov
subl
mov
mov
lods
stos
inc
iret
jg
mov
icebp
cmpsb
mov
mov
pop
jp
adc
or
inc
test
and
clc
loop
jmp
xor
fcmovb
dec
xlat
push
leave
push
jb
rorl
xchg
xor
xchg
pop
or
cmc
js
mov
aaa
and
mov
and
imul
dec
dec
push
cmp
xlat
loop
mov
jge
jmp
fbstp
inc
les
fisttpl
xor
and
push
gs
stc
loop
push
aaa
or
shll
int
imul
lock
cwtl
in
pop
cmc
cltd
sub
jno
fdivr
cmp
adc
addr16
imul
ja
lcall
sub
dec
loop
xchg
shll
push
cmc
mov
pushf
adc
and
incb
inc
xchg
jmp
mov
cmp
lcall
sub
and
test
call
flds
rcrl
jae
dec
lret
andl
push
testb
mov
or
jb
sbb
aas
rol
jl
rclb
add
lret
cltd
mov
loopne
push
mov
jb
bound
pop
mov
jbe
mov
rcrl
and
int3
enter
outsl
icebp
outsl
pushf
inc
xchg
insb
push
cmp
add
shlb
jg
sti
pop
add
scas
dec
and
mov
loopne
adc
inc
ds
fimull
hlt
xchg
cmova
fstps
daa
cwtl
mov
pop
sahf
jno
pop
dec
outsb
shr
lods
mov
icebp
mov
mov
inc
sbb
movups
ret
xor
rorb
dec
mov
lods
and
repnz
in
fcomip
packsswb
fsubr
int
sbb
rcrl
push
in
popf
arpl
push
xchg
cmpsb
fisttps
xor
mov
enter
sub
mov
imul
push
notb
insb
push
mov
arpl
fnstenv
out
sub
xchg
sbb
stos
iret
sub
out
jmp
mov
sub
cmc
jae
adc
je
mov
shll
sbb
xchg
pop
arpl
and
xorl
inc
fmuls
rep
mov
enter
jae
mov
ss
arpl
mov
test
scas
loopne
loop
andl
mov
insl
jo
fistpll
test
adc
push
sub
jo
mov
shl
or
icebp
stos
xchg
xchg
not
loope
push
inc
cmp
mov
cmp
xor
pop
mov
in
subb
jmp
gs
outsb
in
in
ret
into
add
dec
push
mov
mov
sub
popa
sub
testl
adc
addl
sarl
add
dec
pop
fdivs
lret
cld
cld
hlt
aam
jb
mov
dec
fwait
orb
sub
sub
je
jmp
xchg
das
pop
jge,pn
pop
rcrb
jmp
xlat
push
add
cltd
lods
add
dec
es
aam
in
jge
ret
dec
sub
sub
fimuls
pop
mov
push
add
push
sbb
out
mov
push
stos
xchg
cli
xor
sbb
lock
pusha
and
dec
dec
pop
pop
pop
dec
push
xor
movsl
repz
and
and
les
pusha
mov
sub
rcrl
pop
ja
movsl
jle
and
in
inc
adc
push
cld
sub
add
in
push
out
add
fwait
mov
or
and
int3
mov
cld
add
sub
xchg
inc
iret
cltd
inc
xor
lahf
pop
mov
rcrb
pop
push
add
lcall
fdivrp
jle
sbbl
lods
sbbb
pushf
ds
sub
cmp
xchg
jl
xor
jb
in
add
insl
enter
divb
xchg
shr
data16
cli
inc
les
xor
xchg
in
add
fs
xchg
add
sbb
orl
cld
xchg
inc
mov
and
xchg
loope
xchg
mov
in
into
pusha
add
cltd
int3
les
cs
aam
andb
les
and
imul
mov
divb
push
sub
sub
jg
sahf
cmp
out
mov
daa
xor
mov
pusha
jb
pop
xchg
icebp
shll
add
jo
adc
inc
in
cmp
pop
lret
rorl
jno
rorb
adc
stos
xchg
jae
jp
in
xor
and
push
dec
mov
jbe
cmp
sub
xlat
loope
repz
clc
mov
inc
jne
stc
call
push
push
or
shll
iret
movsl
fsubl
and
cmpsb
xor
and
subb
cmp
dec
adc
nop
cmp
icebp
out
jno
mov
jne
inc
imul
roll
push
pop
imul
xor
int3
mov
aaa
push
outsb
orl
cld
mov
enter
push
imul
push
popa
into
js
lds
pop
jae
pop
mov
in
jge
imul
fildl
push
inc
sub
cld
dec
sub
cmp
xchg
lods
icebp
pushl
xchg
fsubs
js
pop
or
divl
les
cli
in
sahf
cld
sub
xchg
iret
fmull
push
hlt
push
subl
fldt
dec
mov
aaa
ret
test
sbb
push
repz
fcmovnb
push
sar
add
lods
push
and
cwtl
xchg
pop
call
std
outsl
repnz
cmc
lods
mov
xchg
popf
xchg
dec
data16
push
xor
xor
addb
in
fidivrl
and
icebp
lock
jmp
add
mov
pop
jmp
jbe
cmpsb
add
rorl
cmp
xor
add
xchg
in
ret
repnz
rorb
in
and
adc
out
mov
xchg
int
dec
adc
push
clc
mov
stc
jmp
std
scas
or
jge
jns
fwait
addr16
fstps
mov
mov
ret
mov
jl
ret
mov
out
movl
mov
les
rcr
mov
sub
inc
xor
insb
mov
adc
sub
and
dec
imul
imul
out
sub
inc
ss
shll
push
es
aas
int3
push
int
sbb
and
push
cmp
dec
jns
xchg
cli
inc
dec
pop
push
xchg
lahf
lods
imul
sbb
dec
jnp
push
pop
mov
test
jne
hlt
and
ja
cwtl
out
enter
lock
or
insl
adc
pop
call
pop
mov
push
xchg
imul
pop
sub
ds
cmp
cltd
mov
mov
adc
outsw
ljmp
xor
pop
adc
fs
pop
adc
out
add
xchg
insb
or
lret
jae
inc
sbb
into
xlat
les
out
pusha
mov
pcmpeqb
into
sub
out
inc
xchg
jg
scas
push
mov
test
mov
xor
mov
ds
add
jle
cmp
lods
sbb
xchg
sbb
mov
bound
mov
mov
xlat
xor
arpl
fldcw
push
push
mov
mov
ja
cmc
int3
lcall
sbbl
mov
inc
inc
fs
arpl
out
insb
cmp
insl
adc
mov
jnp
jmp
add
popf
icebp
insl
mov
adc
cmpsl
mov
jp
int
cs
sti
das
add
sti
mov
clc
test
or
push
cs
out
andl
push
repz
loopne
testl
xor
into
jne
aam
mov
es
mov
jo
mov
mov
cmp
and
adc
cs
xchg
dec
push
mov
sub
inc
or
lods
sbb
lcall
das
cmp
jge
mov
sbb
sbb
jns
popf
jl
orb
cmc
jnp
in
ds
push
mov
xchg
shrl
movsb
mov
clc
adc
pop
push
outsl
jae
mov
sbb
cmc
sub
and
stos
imul
push
in
mov
lea
loope
ss
into
in
lods
xchg
cld
daa
adc
pop
icebp
clc
mov
jbe
add
mov
mov
mov
pop
aas
adc
xchg
outsl
or
push
or
cli
adcl
and
cmp
leave
inc
in
daa
lds
and
aaa
div
and
lret
xchg
sahf
inc
fcompl
getsec
xchg
push
insb
repz
dec
push
out
testb
nop
dec
jecxz
je
xor
shl
or
outsl
mov
add
push
and
jp
lods
or
adc
shr
or
icebp
xchg
adc
arpl
daa
push
mov
and
lret
fwait
pop
imul
mov
mov
push
xor
mov
mov
push
or
and
cmpl
and
insl
in
movsl
lret
adc
add
call
insb
pop
daa
fwait
mov
loope
cmp
mov
add
cmp
insl
lret
mov
inc
insl
jbe
push
hlt
scas
adc
scas
add
cmp
in
mov
mov
into
stos
push
andnps
push
lret
xorl
xor
or
cmp
push
mov
stos
mov
mov
lret
ret
jmp
int
or
das
xor
xor
xchg
mov
jo
xor
lock
dec
inc
push
les
frstor
xchg
stos
ss
dec
jae
jns
jno
xchg
mov
call
xchg
jmp
pop
sub
and
dec
mov
jnp
fwait
xchg
jge
cmp
or
mulb
mov
dec
sub
sub
push
test
in
int3
jb
inc
xor
dec
mov
cmp
loopne
mov
cmpsl
jbe
add
fidivs
adc
push
rolb
jmp
rcr
sub
out
shrb
lret
pop
jbe
lcall
adc
pop
imul
and
push
adc
lcall
adc
lock
out
and
mov
mov
sub
shrl
xchg
push
aas
mov
and
adc
dec
xchg
pop
loop
sub
cmp
ret
dec
test
cmp
adc
add
ficoms
adc
mov
and
and
movsb
xor
xchg
adc
mov
pop
cmpsl
push
or
adc
inc
cld
mov
and
out
test
fsubrl
dec
ss
xlat
int3
int
outsb
ret
lds
mov
aaa
cmp
lcall
cld
movsb
inc
pop
movsb
mov
xchg
push
pop
outsb
mov
and
popa
jo
scas
fs
dec
inc
out
pop
fwait
dec
xchg
mov
cwtl
mov
lock
stos
mov
mov
sti
jg
sub
sbb
jecxz
daa
push
push
add
sub
sub
xor
xlat
xchg
ret
adc
or
xor
pop
push
adc
xor
lret
pop
xchg
or
jae
jp
add
mov
sbbb
sbb
out
ja
mov
jmp
add
js
xchg
scas
shll
aaa
into
es
scas
xor
int3
insl
cli
mov
push
jno
int
les
pop
out
repz
push
cmpb
lea
jae
dec
insl
adc
std
gs
pop
pop
test
mov
ret
dec
data16
add
fistl
arpl
lods
cli
sbb
jg
push
in
cld
xor
jbe
lahf
jle
and
lcall
mov
cmp
add
sbb
push
cmpsb
mov
and
and
mov
dec
test
ljmp
cmpsb
push
mov
mov
pop
in
sbb
or
xchg
lds
clc
leave
mov
scas
scas
push
scas
jbe
and
or
fwait
mov
add
cmp
lret
fsub
loop
fdiv
int3
lahf
flds
mov
das
xchg
inc
xchg
test
scas
mov
in
fs
mov
xor
data16
outsb
mov
addr16
cmc
scas
xchg
mov
fs
dec
notl
iret
insb
es
in
addr16
inc
fucom
xor
mov
xchg
loopne
sbb
pop
clc
stc
jne
xorl
jge
int
push
pop
cmpsb
jb
inc
sbb
jmp
testl
outsb
or
test
pop
push
scas
imul
mov
add
dec
in
sbb
sti
pushf
jmp
xchg
push
mov
cli
xchg
cmp
fldenv
loop
mov
push
in
jns
divl
dec
cwtl
sbb
cmc
lahf
pop
scas
ss
stos
imul
xor
push
into
and
xchg
cmpb
fisubrs
lcall
into
push
shrb
pop
icebp
sbb
rcll
cmpl
test
mov
addr16
sub
xchg
xor
xchg
and
outsb
sub
jle
mov
bound
scas
sbb
outsl
stos
jno
incb
and
mov
push
or
sbb
push
push
out
hlt
je
bound
lcall
add
sub
jge
lret
xor
push
aas
xchg
aam
dec
jbe
jl
mov
loope
cmpb
shrb
out
mov
cmp
inc
notl
add
je
add
ss
or
hlt
arpl
push
fs
xor
out
pop
adc
pop
and
test
clc
or
or
mov
jg
ja
xor
fdivrs
fwait
inc
mov
push
ret
ja
cld
cmpsl
sub
mov
inc
add
pop
jp
mov
sub
mov
arpl
and
test
iret
div
gs
xchg
adc
popf
lock
or
js
aam
jge
cmp
push
push
int3
fwait
pop
ss
loopne
mov
in
out
jle
or
push
test
dec
aam
mov
dec
dec
push
jnp
sahf
dec
jnp
fldcw
push
jae
enter
out
dec
push
cmc
daa
test
xchg
push
fwait
fs
jp
outsl
push
push
add
push
xor
xchg
mov
leave
inc
jbe
popa
push
fwait
and
movl
dec
aaa
lahf
or
shl
push
sub
jecxz
cwtl
xor
sahf
xchg
add
fs
add
push
cli
and
aas
jne
pop
push
incb
xor
jbe
pop
lahf
fisubl
cmpl
sub
pop
xorl
sub
pop
enter
pop
jnp
lock
fcmovnbe
shlb
inc
add
in
dec
adc
add
pusha
popf
lret
mov
das
xchg
mov
repz
xor
in
int3
scas
subb
bound
mov
and
test
movsl
jbe
rolb
aaa
inc
out
mov
out
add
pop
dec
cltd
sbb
and
iret
push
mov
test
dec
inc
and
dec
jnp
xchg
test
xlat
mov
repnz
loope
lsl
sbb
sbb
xchg
push
cmp
popa
iret
jns
dec
inc
call
sbb
mov
inc
xor
sbb
lret
outsl
scas
sub
add
pop
and
popa
inc
cwtl
ds
jmp
sbb
lret
jge
sub
jp
mov
mov
cwtl
dec
xchg
in
js
mov
insb
jecxz
leave
pusha
jne
jns
rolb
and
movsb
cmp
and
popf
and
mov
dec
mov
xlat
into
mov
jp
arpl
jmp
rolb
xchg
xor
ljmp
nop
xchg
nop
dec
sbb
movsb
xorb
popf
mov
cmpsb
mov
lret
jb
icebp
adc
add
mov
sarb
cmp
mov
inc
mov
inc
and
or
fcmovnbe
pop
mov
lcall
push
lods
fisubl
mov
cmpsb
jbe
jg
mov
stos
pop
pop
out
inc
cmp
jg
sub
pop
les
subl
int3
cmp
inc
and
dec
inc
clc
or
inc
xor
daa
lock
out
sub
mov
fcmove
push
aad
xor
cltd
pop
lods
pop
xor
lods
xchg
add
mov
es
sbb
mov
call
enter
cmpsb
or
in
lods
fisttps
add
adc
call
mov
stos
cwtl
aas
loope
gs
ud0
rorl
dec
rcl
and
jnp
scas
sahf
dec
mov
nop
idivl
inc
pop
pop
out
jno
jmp
inc
rcrl
push
je
addr16
xor
rclb
cmp
pop
mov
xchg
xchg
lahf
lahf
shr
fwait
scas
cmpsb
js
cli
mov
pop
adc
lret
mov
and
fcmovb
xor
sbb
cli
sbb
pop
sahf
jge
fstpl
jecxz
arpl
xor
jge
mull
aad
in
js
ds
fistpll
mov
sbb
lock
jb
in
add
gs
jmp
and
jmp
fldcw
add
lret
das
mov
push
flds
jbe
das
xchg
inc
repnz
shl
pop
mul
in
imul
inc
fwait
dec
pop
jmp
mov
inc
pusha
icebp
fistpll
mov
fmuls
mov
jge
shlb
sub
sub
out
dec
adc
mov
lods
adc
fmuls
negl
addl
cmp
adc
or
jg
jge
cli
clc
xchg
nop
pop
inc
cmpsb
cltd
ss
xchg
push
fisttps
or
lock
dec
insl
inc
ffreep
icebp
jmp
jbe
jo
dec
sub
pop
mov
mov
aam
scas
popf
or
arpl
ja
push
push
iret
xor
mov
mov
pop
xor
pop
ret
sti
testb
call
adc
mov
add
dec
push
and
data16
bound
mov
mov
hlt
mov
push
mov
gs
movsb
int
divb
xchg
lea
fbstp
xchg
cmp
addl
adc
je
repz
adc
in
psubd
pop
push
leave
inc
sbb
push
mov
daa
aas
pop
pop
jl
mov
ret
loop
add
sahf
mov
sbb
and
mov
sbb
dec
adc
fdivl
pop
and
add
rcll
test
jae
jmp
dec
leave
sarl
int3
ret
push
cmp
dec
add
lahf
add
in
mov
sbb
inc
hlt
push
push
ljmp
jp
and
mov
adc
mov
dec
lahf
push
testl
sbb
push
icebp
aad
mov
jl
popa
pop
push
cli
filds
rorb
mov
push
addr16
icebp
or
cli
sub
mov
ficomps
fsubl
pusha
fidivrl
inc
sbb
pop
jecxz
sbb
cmp
pop
mov
jge
inc
push
popa
pop
idivb
ret
mov
lds
pop
cmp
popf
adc
inc
mov
in
push
stc
gs
call
push
inc
push
into
dec
cs
cmp
movsl
aam
xlat
imulb
dec
popa
out
imul
cltd
sbb
ftst
repnz
repnz
push
pushf
mov
stos
and
pop
outsb
mov
mov
pop
fistps
pushf
push
or
dec
loope
mov
jo
fidivrs
pop
cmp
push
incb
mov
push
ror
push
mov
cwtl
and
mov
push
lcall
test
adc
mov
bnd
pop
arpl
aaa
pusha
shrl
xor
in
dec
test
std
mov
sbb
or
sub
add
shlb
cli
sarb
adc
inc
xor
rcrb
sub
jle,pn
adc
xchg
mov
jnp
jbe
adc
aas
sbb
push
in
mov
xchg
popa
movsb
js
push
enter
jbe
and
sub
and
mov
iret
cmpl
mov
jle
cmp
lods
sti
mov
outsb
pushf
sbb
addr16
orb
lock
lcall
xor
shlb
or
mov
inc
int
or
das
mov
pop
and
sbb
mov
fldenv
jno
imulb
std
adc
fildl
fwait
in
std
sbb
test
and
test
ss
or
xchg
sbb
cmp
rclb
cli
and
xor
dec
fcompl
mov
call
movsl
stos
cltd
mov
jmp
add
xchg
cld
jp
xchg
mov
leave
insb
enter
stc
push
xchg
repnz
sbb
roll
pop
cwtl
push
mov
push
sti
mov
adc
movsl
mov
dec
sbb
test
add
cmpsb
data16
mov
call
lds
push
push
jno
inc
xor
lret
mov
mov
pop
mov
ljmp
aas
sub
pextrw
and
insl
das
xlat
mov
jp
test
or
daa
xor
lret
subl
aas
aaa
insb
pop
int
lds
out
adc
cmp
mov
scas
and
sar
jp
pop
xchg
jb
adc
xor
sbb
mov
cli
fucom
movsb
lds
xchg
inc
push
cmp
mov
ficomps
jae
mov
mov
add
sbb
outsl
push
out
or
arpl
add
ss
pop
gs
push
add
or
mov
pop
add
cmpb
xor
lcall
loop
fiadds
cmp
xchg
rorb
sti
shlb
shrl
adc
sub
push
mov
adc
xchg
ret
scas
jo
sahf
jnp
mov
cmp
dec
fsubrs
cmp
test
dec
jmp
movsl
jae
stos
cmpsl
lcall
mov
icebp
and
dec
mov
in
cmpsb
add
ss
sub
mov
pop
in
movsb
popl
mov
push
insb
aas
addr16
cmp
nop
pop
inc
mov
adc
int3
jecxz
sub
in
push
stos
fs
xor
jl
jbe
scas
in
pop
pop
jle
adc
jbe
or
es
xor
mov
mov
add
ror
ds
push
push
rcll
push
pop
les
add
vprotd
jl
icebp
ret
hlt
imul
fs
shrb
cld
and
fmul
mov
loopne
cmp
nop
scas
popf
adc
xor
loopne
sub
pop
jae
js
pop
movsb
xchg
jl
mov
push
push
xchg
pop
cwtl
push
mov
jecxz
stc
and
in
fidivs
int
sbbb
add
movsl
inc
xchg
aas
scas
and
jl
icebp
pop
jne
and
insl
sub
jg
aaa
jae
inc
xchg
cmpsb
push
and
jno
movb
mov
lds
jmp
or
and
rcll
jecxz
lock
pushf
mov
push
xor
inc
mov
arpl
dec
jns
jb
inc
mov
mov
jle
xchg
pusha
jbe
sub
fildl
sub
fimull
negb
xchg
push
inc
and
stos
inc
push
inc
adc
mov
cmp
inc
jp
daa
lock
pop
sbb
daa
xchg
aaa
in
repnz
push
faddp
test
pop
dec
pop
je
or
mov
push
push
add
lods
pop
mov
popf
pop
in
add
test
add
jnp
outsl
pop
fs
dec
enter
xchg
and
je
jmp
cmpb
sahf
adc
inc
data16
mov
dec
cmpsl
hlt
data16
add
add
adc
daa
fdivrp
and
repz
mov
or
incl
inc
mov
mov
adc
mov
ds
adc
pop
ljmp
dec
sahf
divl
mov
dec
mov
rcr
cmp
inc
mov
mov
movsl
aam
in
incl
cwtl
js
mov
cwtl
mov
test
std
roll
loope
add
push
mov
enter
mov
das
rolb
xor
inc
jle
and
add
mov
xor
movq
nop
adc
lea
jnp
outsb
xor
lds
shlb
pushf
ret
push
xor
adc
fimuls
mov
push
cltd
sub
jge
sbb
cmc
pop
lret
sbb
popa
add
insb
mov
filds
cmpsl
movsb
mov
pop
add
fdivs
push
or
in
xor
orl
mov
cmc
pop
inc
test
mov
movsl
xchg
xor
sahf
add
adcb
push
xchg
pop
imul
mov
adc
pop
or
push
mov
push
or
nop
inc
sbb
jp
in
add
dec
cmp
popa
repz
xchg
daa
stc
movsl
mov
repz
cli
push
leave
nop
jae
sbb
cwtl
adc
lds
add
pop
les
and
sbb
imul
add
mov
dec
sub
lods
jnp
mov
or
sub
xor
xlat
pop
mov
push
imull
mov
inc
es
xchg
jl
sbb
mov
mov
mov
les
es
lcall
jae
pusha
jecxz
and
mov
mov
mov
orb
frstor
mov
add
sar
aam
cld
outsl
pop
inc
and
loop
jae
scas
sub
dec
stos
aas
inc
cmp
add
cli
sub
xor
mov
or
jp
ret
jb
insb
cs
jg
mov
loop
cltd
pop
or
popa
nop
mov
dec
lods
sbb
cmp
xchg
sub
sub
xchg
cli
or
push
scas
mov
xchg
xor
xchg
dec
repz
sbb
lcall
sbb
mov
pusha
mov
hlt
fmulp
lods
testl
pop
or
adc
jge
sub
inc
ja
je
stos
add
add
push
ror
data16
out
pop
dec
cli
fstpl
mov
repnz
lret
sbbl
out
mov
push
movsl
jno
stos
je
inc
outsb
call
xchg
mov
cltd
das
jmp
cmp
addr16
mov
and
sti
sbb
or
cs
repnz
incl
add
addl
pop
push
pushf
push
xlat
test
subl
lods
push
shl
inc
mov
nop
jg
pop
bound
loopne
aad
cmp
divl
lds
sub
pop
mov
negb
and
cs
hlt
and
int
mov
shlb
sbb
sub
inc
mov
repnz
xchg
sarb
lret
das
lahf
inc
xor
push
aas
stos
movsb
ja
negl
and
xchg
inc
shrb
mov
or
in
popf
adc
inc
push
xchg
arpl
std
pop
lret
sarl
sbb
xchg
movsb
xor
inc
arpl
mov
jle
dec
scas
cwtl
div
gs
sbb
inc
mov
mov
mov
cmp
pushf
jg
sbb
mov
pcmpeqw
xchg
mov
fs
mov
mov
xchg
das
mov
fs
std
mov
mov
movsl
enter
out
outsb
mov
cmp
push
std
push
push
popa
push
iret
jle
fisubl
bound
inc
inc
ss
in
jge
aas
push
lea
push
jno
xor
mov
xchg
cmp
or
dec
cmp
lret
sub
cmpsb
adc
lods
ret
fldt
rclb
testl
mov
int
cmpsl
fs
lock
sub
clc
mov
push
cwtl
in
pop
mov
and
push
nop
orl
js
xchg
add
cltd
aaa
adc
ds
pop
inc
lret
xor
adc
or
mov
cmpsl
imul
jmp
popa
and
jnp
jb
testb
into
dec
pop
clc
pop
push
cmp
cmc
push
int
pop
cwtl
cld
push
js
or
inc
cmc
faddl
js
test
push
cltd
jae
mov
bound
sahf
repnz
ret
push
sub
xor
sbb
test
dec
pop
sbb
pusha
cmp
sub
inc
mov
ja
imul
mov
leave
mov
lods
mov
ret
das
out
pop
push
push
adc
sub
pop
xor
imul
mov
inc
and
data16
push
or
and
xorb
pop
pop
movsl
or
fmulp
sarb
add
push
into
std
sub
lret
add
popf
rorb
push
jo
aaa
je
stos
push
xchg
cmp
push
add
sbb
dec
xorl
repz
jp
cltd
mov
pop
jle
pushf
sti
lahf
xor
cwtl
negb
lcall
push
jecxz
sub
test
push
test
mov
outsl
loope
cmp
pop
scas
push
mov
data16
insb
add
or
ljmpw
and
and
sahf
push
out
jns
mov
jmp
mov
shr
pusha
cmp
inc
cmp
add
in
mov
subb
sar
mov
hlt
addr16
sbb
in
sbb
mov
or
sbb
sub
pop
stos
imul
sub
test
popa
jmp
mov
jb
leave
into
clc
das
loop
jb
mov
dec
nop
mov
ret
out
je
scas
and
add
adcb
add
cmpsl
test
addr16
mov
ljmp
decb
jecxz
nop
inc
shll
ficomps
popa
dec
xchg
iret
rclb
icebp
or
add
clc
stos
shrb
pop
lret
ss
daa
inc
sub
faddl
mov
mov
mov
in
dec
xchg
pop
jmp
std
push
or
or
stc
sbb
dec
xchg
fildll
aaa
pop
dec
in
adc
sarb
out
jbe
mov
xor
loop
fcoml
pop
lock
stc
jbe
pop
aad
clc
or
lahf
es
aaa
mov
inc
sub
xor
push
mov
add
push
testl
pop
bound
call
mov
mov
imul
jnp
push
out
add
sub
pop
or
push
sbb
pop
push
push
ja
insb
aas
adc
mov
mov
jne
inc
out
adc
jo
lahf
adc
adc
or
fistpl
daa
mov
lahf
lret
mov
jp
inc
jb
fs
insb
movsb
mov
and
hlt
push
xchg
lods
cmp
sub
pusha
in
sbb
int3
inc
pop
mov
lahf
or
movsl
inc
jb
fdiv
in
push
inc
dec
push
int3
aad
cmpsb
rcll
nop
fldt
lds
add
fmull
icebp
inc
les
mov
jb
mov
adc
push
frstor
sarb
lds
sub
lods
push
fidivs
fs
jle
mov
or
mov
hlt
subb
add
sbb
imul
faddl
int
push
in
jbe
ljmp
std
add
jecxz
movsl
rorb
fmulp
adc
lret
xchg
inc
std
sub
cld
movsl
lret
jg
or
sub
mov
rcrb
fsubs
mov
int
je
mov
add
in
std
test
xchg
inc
add
inc
out
inc
inc
push
fnstsw
rorb
stos
add
cmp
pop
pushf
or
or
sub
jbe
std
xor
divb
xor
fstpl
mov
js
jecxz
loopne
pop
psubsw
pop
les
cmp
xlat
stos
insb
dec
xchg
fld1
cld
sbb
jg
sub
out
shl
rorb
lret
rcl
les
pop
mov
mov
lods
fistps
dec
pop
xor
xlat
fneni(8087
loope
cld
int
mov
dec
jo
xor
inc
nop
flds
aam
stos
pop
or
shrl
and
mov
lea
ficoml
push
adc
scas
push
popa
aam
sub
xlat
in
inc
xor
push
push
clc
outsl
test
loop
repnz
xchg
xchg
sub
sub
es
insb
dec
jnp
roll
test
rolb
jmp
imul
data16
xor
leave
loope
les
xchg
out
fcmovnbe
pop
pop
iret
sbb
outsl
adc
lret
pop
daa
jg
aas
xlat
out
inc
mov
jl
push
ds
jb
insl
mov
push
mov
add
mov
sti
jle
movsw
insb
test
ret
es
cmp
xchg
aad
mov
sbb
xlat
fmulp
push
mov
imul
add
pop
push
sub
ficoml
sub
aaa
hlt
aad
sub
pop
cli
adc
ljmp
jo
sub
bt
dec
ljmp
les
or
imul
addr16
lock
sbb
pop
pop
inc
jae
jecxz
jns
imul
out
test
clc
faddl
xor
adc
fwait
add
cmp
mov
test
inc
dec
cmp
push
mov
cmp
clc
movsl
jmp
sbb
adc
rcll
mov
pop
xor
je
cli
adc
push
xchg
sti
rorb
mov
pop
repz
jne
out
push
cmpsb
mov
decb
fs
sti
mov
xchg
mov
sbb
ja
xchg
inc
inc
pop
rorb
push
and
or
movsb
cltd
pop
movsb
adc
or
lods
or
data16
mov
xlat
repnz
out
pop
mov
cmp
and
jg
cld
jmp
xchg
xor
ja
addr16
imul
lret
mov
mov
ficoms
jne
loop
in
cwtl
adc
jecxz
pushf
fstpt
inc
int3
add
addr16
sbb
and
cmc
xor
cmp
je
push
or
fdivs
shlb
sbb
xchg
and
data16
dec
sarl
imul
jb
mul
sub
xchg
pop
and
in
mov
or
sbb
mul
xor
dec
or
dec
dec
lds
mov
cmp
insl
test
and
gs
neg
aam
je
xor
jns
mov
pop
sbb
scas
xchg
cmp
popa
arpl
loopne
int3
dec
or
stos
adc
and
inc
call
jnp
fisttps
add
mov
and
jmp
popa
ss
cmp
out
pop
mov
push
aam
cmp
ss
leave
adc
cltd
popw
in
mov
es
dec
das
jp
into
lods
sarb
cmp
push
loope
rcl
lret
je
gs
aam
sbb
enterw
push
xchg
jne
jns
push
scas
cmc
dec
sub
int
pushf
test
je
pop
adc
shl
mov
push
out
sbb
sbb
lret
push
cmpsb
and
stc
inc
sbbb
addr16
addr16
outsl
add
mov
mov
loopne
xchg
mov
jo
gs
dec
push
lds
popa
cld
jmp
rcrl
dec
hlt
pop
mov
mov
push
stos
mov
and
xchg
pushf
daa
sbb
jl
hlt
sub
xchg
aaa
in
dec
mov
imul
sbb
push
lock
add
dec
cmp
pop
mov
ljmp
stos
push
test
ds
xchg
jge
dec
loope
inc
call
iret
push
daa
int
icebp
js
outsl
inc
negb
jns
outsl
mov
push
outsl
sub
adc
xchg
xor
mov
stos
shl
rcr
adc
inc
insl
adcl
mov
mov
pop
movsl
rorb
push
pop
push
orl
or
push
cmpsb
das
push
xchg
inc
sub
add
pop
out
push
sub
sarb
movsl
adc
aad
xor
mov
inc
dec
jl
cmpsb
mov
insb
mov
mov
push
add
cmp
add
fldl
in
ss
lcall
pop
sbb
jecxz
add
sub
mov
fsubl
mov
ret
mov
push
std
push
cmc
lahf
divl
pop
mov
pop
lods
fsts
stos
rolb
icebp
aam
sub
adc
repnz
sub
lods
mov
pop
sbb
sbb
bnd
lock
lea
mov
adc
jnp
inc
ficoms
inc
scas
ror
nop
out
and
lret
mov
add
mov
jge
and
push
inc
test
repnz
and
inc
dec
roll
sub
mov
mov
inc
hlt
popa
fdivrl
add
push
push
lds
push
push
into
arpl
jp
int
add
lds
xor
aaa
insl
mov
sub
and
jecxz
cmp
movsl
clc
mov
movsb
rcl
xchg
sub
fildl
and
jle
jmp
outsb
inc
sub
mov
add
push
jmp
and
hlt
ss
testl
and
rep
cld
lahf
into
bound
ret
test
sub
pop
push
adc
pop
imul
out
test
ds
dec
lret
mov
filds
icebp
pushf
test
or
ret
mov
inc
xor
xor
lret
jo
mov
inc
sub
adcl
imul
xor
pop
pop
mov
je
sbb
dec
and
or
popf
fildl
sar
pop
mov
test
sarl
fwait
inc
pop
rclb
lahf
cmp
jne
xor
mov
icebp
loop
enter
mov
das
cmpsl
movsb
push
xlat
adc
into
inc
int3
xor
mov
xchg
pop
adc
fnstsw
bound
imul
paddd
clc
xor
hlt
sbb
push
sub
ljmp
leave
xchg
repz
cmc
cli
inc
jp
arpl
subb
xor
xchg
mov
clc
pop
mov
inc
xchg
popa
dec
and
dec
jp
push
popf
dec
dec
out
mov
in
les
jl
call
repnz
xor
xlat
in
mov
add
sahf
or
add
cld
pusha
gs
dec
or
xor
fcoml
mov
mov
jnp
adc
push
inc
mov
cmp
les
add
mov
bound
cmp
dec
repz
push
into
jnp,pn
call
test
rcll
jmp
in
sti
ret
push
cmp
cmp
sbb
loop
mov
fbld
mov
pop
add
xchg
sbb
mov
adc
out
mov
mov
sbb
push
xchg
daa
inc
jae
adc
jmp
cmp
pop
inc
xor
test
jo
int3
and
fcmovu
insl
aaa
vpcmpgtw
inc
jp
lds
add
insl
lcall
mov
popf
aam
mov
and
negb
or
sub
inc
in
jae
pop
push
andb
xlat
jae
push
hlt
push
mov
shll
jae
mov
mov
in
mov
aas
and
cmp
stc
push
test
push
mov
mov
mov
push
or
sbb
adc
pop
in
xchg
or
cmp
jbe
test
inc
mov
pop
popa
and
sbb
notb
sbb
out
out
pop
movsb
sti
scas
xchg
sbb
xchg
mov
ret
pop
lret
in
ret
movsl
lock
inc
inc
mul
roll
lds
push
and
cld
addl
dec
lods
fimull
fwait
or
mov
adc
jbe
xlat
push
je
push
ret
lea
mov
ficoms
cmp
adc
cmpsb
xor
stc
sbbb
cmp
in
sbbb
add
arpl
stos
dec
dec
pop
sbb
jb
sub
imul
sub
rol
sub
pop
push
sahf
push
subb
popa
push
leave
test
xor
nop
mov
inc
xchg
adc
into
fcompl
imul
adc
add
stos
ss
dec
andl
push
mov
movsb
pop
push
dec
out
jbe
inc
mov
jb
fisttps
mov
popf
and
gs
pop
mov
jecxz
xor
fstps
aaa
push
jp
std
stos
ficoms
mov
add
jno
sub
mov
cmpsb
xor
and
loopne
ficoms
or
out
shlb
in
leave
xor
fld
ds
mov
jl
sbb
jp
dec
fmuls
cmp
dec
lods
mov
dec
in
dec
fdivp
mov
pop
cli
andb
fsub
jl
ljmp
or
mov
stc
xchg
in
gs
xchg
incl
pop
in
dec
cwtl
mov
mov
loop
ss
flds
xor
cmc
je
sub
ds
sbb
das
inc
sbb
cld
mov
enter
adc
mov
lret
lods
cmp
adc
lods
dec
pushf
shll
sarl
dec
aad
xchg
out
pop
leave
jne
fs
push
xchg
stos
iret
cmpsb
test
ret
les
in
sub
jge
popf
fucomip
xor
mov
and
cmpsl
mov
mov
and
add
inc
push
loop
andl
sbb
stos
xlat
int
pextrw
xchg
dec
loopne
mov
inc
lods
dec
mov
push
jmp
or
cmp
movsb
pop
pop
dec
js
xchg
push
loope
sbbl
jge
sbb
daa
movb
cwtl
and
outsb
adc
test
pop
sbb
jb
jmp
xor
call
pop
notl
or
dec
pop
arpl
popf
hlt
xchg
xchg
pop
inc
push
mov
sbb
stc
cmp
push
nop
xchg
mov
mov
insl
jmp
jnp
addr16
mov
mov
pop
je,pt
int3
jne
icebp
testb
rcrb
fiaddl
je
loope
ljmp
das
repnz
rcl
ja
scas
daa
aas
jns
lcall
ds
lret
test
push
mov
add
mov
mov
das
jbe
add
mov
sub
cmpsb
add
push
mov
xor
scas
adc
mov
aaa
mov
or
push
jb
pushf
je
loopne
sub
xor
subl
push
js
dec
mov
fnstsw
int3
inc
scas
int
scas
out
xchg
scas
call
or
aam
pause
jge
mov
xchg
mov
in
or
push
int
or
push
lret
sbb
add
or
repz
add
mov
xchg
pop
xlat
fimull
cltd
pushf
cmp
fmull
dec
les
hlt
scas
mov
in
fsubrs
outsb
rcrb
in
in
xor
call
mov
pop
or
cmp
mov
mov
cmp
arpl
xor
mov
hlt
popa
push
or
mov
cmc
cli
mov
cmpsl
mov
das
iret
mov
mov
sbb
mov
ret
cmpsb
jns
fidivrs
add
cwtl
faddp
lcall
push
lahf
aas
les
jecxz
push
addr16
cmpsl
push
lcall
les
movsl
imul
add
xchg
stc
sbb
pmullw
inc
repnz
mov
mov
mov
mov
push
add
stc
fiaddl
mov
hlt
lods
xchg
mov
mov
pusha
jmp
mov
in
mov
mov
scas
shll
push
push
enter
mov
dec
aaa
pushf
push
mov
push
out
push
outsb
push
mov
fs
inc
jecxz
sub
pop
pop
rcll
add
or
fdivrl
adc
inc
jae
and
ja
roll
test
push
aaa
sbb
jb
xor
divb
adc
mov
aaa
fwait
testb
mov
jne
iret
test
fistpl
pop
add
fistps
mov
adc
imul
sti
movsb
cltd
mov
notl
mov
jne
xchg
push
inc
out
or
fcomp
jmp
adc
push
push
xchg
cmp
testl
inc
ds
add
cmp
out
movsb
inc
nop
cld
mov
push
xlat
arpl
ficoml
roll
xchg
jne
xchg
rcrl
push
dec
push
fcomps
fmull
jl
dec
int
mov
jbe
iret
push
cs
movsb
mov
push
pop
cmpsb
mov
jg
cmp
loopne
xor
testb
out
cli
test
jne
sub
mov
sbb
enter
push
inc
fcompl
js
inc
mov
ja
xchg
jno
leave
gs
mov
pushf
dec
or
out
sbb
xchg
adc
hlt
clc
scas
lods
sub
lret
push
mov
test
jo
pop
sub
sarb
push
movsl
mov
pop
movsb
mov
dec
aad
insl
and
pop
fmulp
mov
mov
sbb
jns
imul
push
ret
push
and
popa
or
add
push
cwtl
es
mov
std
jno
and
jns
inc
xor
cwtl
cmp
and
jmp
into
fwait
test
fdivs
andb
std
cmp
xor
xchg
cmp
cli
mov
mov
sbb
cwtd
mov
sti
lock
js
shrl
push
and
je
mov
xor
push
dec
xchg
mov
xlat
lods
call
fs
push
fcmovnbe
jp
das
outsl
je
mov
add
testb
stos
cmp
or
in
outsl
xchg
ret
sbb
push
jne
icebp
test
xchg
push
add
mov
incb
pusha
shlb
or
sbb
mov
dec
in
in
sub
in
xlat
sbb
ljmp
push
jg,pt
dec
pop
xlat
rolb
adc
push
lods
mov
int
cld
jge
aas
es
mov
outsb
mov
fisubrl
mov
or
outsl
adc
sub
adc
push
hlt
adc
in
inc
aas
mov
inc
xchg
inc
push
fs
test
cmc
sbb
nop
mov
movsb
xchg
inc
repz
xor
lea
repnz
or
mov
ds
insl
es
adc
in
lods
lds
out
mov
dec
xchg
inc
sub
lods
mov
repnz
sbb
sbb
push
je
and
sbb
mov
lds
dec
hlt
jno
sbb
lret
add
fistpll
adc
in
xchg
xchg
cmp
cmp
jnp
out
xor
inc
repnz
jecxz
inc
fnsave
push
loop
push
xor
fwait
movsl
and
jecxz
sbb
mov
cmp
and
popa
outsl
and
mov
in
push
sbb
test
jb
rcl
mov
fmull
xlat
xchg
fwait
inc
int3
shl
outsl
pop
insl
fwait
gs
cmpsl
dec
test
into
mov
add
and
stos
decl
adc
inc
dec
pop
repz
test
inc
outsb
ret
subb
lock
cmp
imul
jns
pop
and
mov
jg
cmp
shr
add
mov
in
loop
fcom
xor
int3
lds
and
xchg
push
lret
movsb
dec
into
dec
inc
daa
sti
mov
or
fst
movsl
and
push
or
cwtl
aaa
xor
daa
jle
mov
cmp
in
or
popf
adc
lds
or
inc
push
adc
add
pop
mov
sub
xor
push
mov
out
outsb
bound
scas
nop
push
test
mov
movq
and
loopne
sbb
mov
lcall
popa
inc
inc
das
xor
ja
insl
cs
scas
inc
sahf
aaa
js
adcb
adc
push
fcomi
and
dec
jmp
push
jns
inc
xchg
inc
repz
pusha
sub
popf
loop
xor
int
push
cmpsb
adc
fxch
adc
std
sahf
mov
scas
pop
stc
jo
sub
mov
orb
and
fwait
mov
les
xorl
outsb
cld
cs
stc
xchg
mov
jmp
les
mov
push
pop
push
test
lock
insl
subb
xor
sbb
inc
das
adc
mulps
sub
aas
lock
cmp
jp
inc
xor
mov
rolb
jno
adcl
fists
dec
test
mov
pop
xchg
shrb
int3
jb
jae
push
lods
and
cwtl
popa
sti
repnz
and
mov
xlat
add
std
pop
mov
add
add
leave
xchg
aam
in
push
push
jbe
test
push
xchg
or
dec
outsl
addb
icebp
shll
xor
xor
jne
std
rcrb
sar
leave
and
fcmove
push
pop
mov
movsl
out
sbb
pusha
inc
into
divl
cmp
jb
roll
push
enter
pusha
dec
cld
imul
fistps
cmp
das
mov
jecxz
jg
arpl
and
lret
inc
inc
hlt
sub
ja
push
and
mov
inc
rol
movsl
sbb
mov
mov
pop
xchg
movsb
mov
js
enter
xor
adc
lahf
leave
xchg
loopne
dec
jo
cmp
adc
filds
push
sbb
pop
cmc
testb
mov
and
and
in
pop
xchg
into
cmp
sbb
cld
jmp
sar
icebp
jo
mov
bound
and
loop
out
pop
out
test
mov
daa
sahf
es
test
adc
js
nop
xor
xchg
repnz
pop
hlt
std
add
lock
andl
jg
das
jae
out
ds
jmp
dec
jnp
mov
das
clc
push
into
dec
sbb
inc
repnz
std
dec
pop
cwtl
lock
loop
xor
jge
enter
sahf
aad
add
dec
imul
movsb
cld
lds
or
in
xlat
xchg
cmp
jo
inc
lods
in
inc
pop
scas
daa
les
mov
mov
and
mov
mov
in
frstor
mov
fildl
cmp
arpl
test
hlt
fcmovnb
repz
shrl
add
sub
lahf
xchg
inc
cmpb
std
push
ljmp
sahf
cli
cs
pop
movb
mov
sbb
loop
test
mov
push
xor
les
mov
ud2
movsb
sub
xchg
jns
insb
cmp
or
fisubrs
mov
cmp
inc
mov
aaa
mov
je
mov
pop
lods
inc
mov
daa
clc
adc
cmp
mov
mov
mov
inc
jno
mov
push
les
xchg
insb
sbb
scas
cwtl
int
and
mov
rcr
imul
mov
lods
push
or
into
xchg
iret
fdivs
sbb
inc
push
cmpsb
push
xor
lahf
and
loope
cmpsl
adc
lea
inc
adc
push
filds
scas
push
add
jl
inc
popa
bound
pop
popf
rclb
sub
lea
sbb
popf
sbb
test
insl
hlt
punpckhdq
push
push
int3
aas
jo
ret
xor
mov
lea
lret
xchg
sarb
mov
nop
xor
adc
cltd
mov
push
shrb
repnz
out
xor
jge
insb
test
test
mov
iret
rol
cld
lods
popa
jge
int
or
mov
mulb
subb
xchg
or
orl
iret
insb
mov
mov
mov
cmp
inc
movsl
jmp
sbb
xor
outsl
and
int3
rcrl
lock
and
fsubl
inc
aas
adc
lret
jp
test
push
int
insl
jo
jne
xor
push
or
scas
pop
les
jno
sub
jmp
jmp
jnp,pn
mov
dec
and
push
dec
sar
ficoml
mov
add
mov
addr16
inc
push
lods
dec
add
dec
shlb
cli
lret
loope
lods
adc
dec
dec
cmp
fimuls
cs
adc
into
dec
xchg
int
adc
ret
dec
mov
outsl
ds
lcall
push
pop
fmulp
aaa
or
push
adc
ljmp
outsl
jb
in
and
sub
dec
in
aaa
or
test
dec
push
sbb
xchg
add
jmp
arpl
push
xchg
add
inc
xor
rorb
xchg
insb
mov
cmc
adc
scas
inc
cltd
mov
mov
rcll
xor
bound
pushl
inc
repz
shl
push
cmp
pop
aam
clc
pushf
or
push
mov
dec
int3
jns
js
xchg
or
insb
xlat
mov
add
fsubs
sbb
sub
dec
xchg
pop
loop
std
data16
mov
or
jecxz
sub
in
ret
push
xchg
jbe
in
add
shl
adc
sbb
push
imul
aad
mov
pop
xor
outsl
repnz
adc
push
imul
repz
repz
fstps
sti
mov
lods
inc
ret
add
or
xlat
cmc
mov
xchg
aad
inc
int3
adc
js
mov
xor
sti
cmp
mov
or
xchg
enter
jns
jo
jecxz
mov
xchg
dec
pop
xchg
lret
mov
repnz
adc
rcl
pop
jl
scas
movsl
gs
icebp
mov
lds
xor
imul
cltd
outsl
add
mov
pop
mov
mov
pop
movsb
adc
and
pop
movsl
xchg
pushf
out
movb
cmp
inc
cmp
adc
test
sub
push
mov
popf
ret
sahf
or
sarb
movsb
sbb
xlat
mov
and
popf
cmp
pushf
mov
mov
xor
adc
xchg
int3
jl,pt
dec
cmp
or
sbb
loope
std
inc
pop
in
loop
mov
inc
test
mov
sbb
pusha
mulb
aas
test
inc
mov
cmc
stos
rol
pop
enter
orl
insb
cmpsl
movsb
call
adcb
push
mov
rcl
mov
repnz
fsubs
js
fsubrl
daa
and
mov
push
push
jl
xchg
push
int3
inc
cwtl
aas
add
pop
xchg
adc
pop
ljmp
pop
outsl
pop
cltd
push
mov
sbb
insl
adc
and
jmp
rolb
addb
pop
cld
adc
ja
stos
fwait
jl
pop
push
inc
mov
in
insl
cld
cmp
sub
fsubl
out
lds
insb
mov
xchg
cmp
icebp
adc
mov
pusha
stos
mov
rolb
cmc
mov
sarl
xchg
fcmove
mov
fs
movsb
xor
sarl
mov
fildl
addr16
nop
cld
mov
jno
push
inc
mov
mov
add
test
dec
scas
mov
iret
mov
cmp
mov
and
in
fisttpll
mov
mov
cld
and
xchg
cmp
sbb
push
repz
fbld
sub
inc
decl
cs
call
pop
sub
mov
xchg
aad
adc
arpl
imul
lahf
shl
push
adc
sub
psadbw
pusha
js
add
mov
rorb
aad
in
lods
cld
lea
addr16
scas
inc
or
adc
subl
adc
movsl
jno
addr16
mov
add
adc
mov
outsl
dec
cwtl
mov
test
xchg
or
jge
lcall
or
stos
push
insb
mov
daa
and
sti
adc
lcall
aam
push
push
lahf
stos
outsl
add
sbb
mov
jl
loope
je
mov
testl
mov
fsubr
cmc
mov
aam
fnstcw
or
dec
and
mov
loopne
cmp
je
aad
fs
push
inc
mov
sub
and
sbb
add
in
pop
dec
jbe
and
testl
fdivrl
xchg
and
mov
std
push
add
idiv
fldcw
lds
fnstenv
cmp
jecxz
mov
sbb
push
in
dec
jb
int
pop
lods
sbb
adc
add
xchg
jo
movsl
inc
cwtl
sub
mov
xor
adc
pop
rclb
arpl
mul
mov
adc
and
cli
push
jo
jnp
adc
and
and
cmp
mov
into
jge
sti
add
pusha
or
cmp
testl
and
popf
inc
xchg
je
stos
add
fstpl
push
xchg
cmpsb
xchg
mov
ret
test
xchg
aas
sbbb
in
subb
mov
push
sub
push
pop
sbb
or
dec
movsb
insl
stos
cmp
lcall
loopne
jmp
scas
lahf
repnz
mov
sbb
pop
mov
call
inc
and
xchg
aam
andb
jmp
fs
cmp
xchg
shll
mov
xor
or
jmp
hlt
mov
inc
lcall
xchg
arpl
lea
pop
push
mov
mov
enter
movsb
fidivrl
out
cmp
mov
sub
lcall
mov
cmp
jo
mov
mov
mov
pop
pop
movsb
aad
pop
pusha
in
and
pop
test
jno
cmc
sar
ljmp
jo
in
inc
add
cmp
iret
mov
jecxz
imul
jl
cmp
push
jle
push
pop
cs
cld
cmpsl
enter
into
pop
loop
inc
add
aas
xchg
ret
mov
pushf
inc
mov
iret
sbb
mov
adc
dec
xchg
adc
xor
mov
sub
arpl
ret
lret
sbbl
xor
repnz
les
test
and
dec
dec
mov
fdivrl
fsts
inc
mov
mov
gs
jno
shll
outsl
subl
mov
out
enter
cltd
bound
imul
dec
lods
add
and
icebp
jae
xchg
rcll
push
mov
call
loop
cli
and
xchg
xchg
inc
sbb
mov
mov
enter
mov
movsb
repnz
mov
jmp
pop
fisttpl
push
lret
mov
rcr
lahf
cmpb
dec
jecxz
push
xchg
fnstcw
sub
div
dec
sbb
add
pop
jne
xchg
pop
mov
sub
inc
xor
bound
xor
dec
fsubr
loope
loopne
pop
push
fs
push
xchg
in
pop
arpl
mov
sub
xor
add
dec
push
movsl
fists
idiv
jns
sub
jo
xor
adc
push
mov
popl
dec
ds
test
adc
jnp
dec
test
xor
sti
test
mov
inc
test
loopne
fcompl
icebp
lods
outsl
pop
repz
movsb
or
push
flds
or
in
xchg
adc
lock
popl
sub
mov
pop
lods
push
inc
in
mov
sbb
shlb
stos
add
adc
xchg
addr16
pop
js
mov
and
and
in
int3
mov
movsl
and
adc
incb
jle
clc
iret
loopne
push
loop
inc
or
scas
jmp
popf
sub
pop
push
jbe
xchg
mov
sbb
xchg
jp
fidivs
loope
lahf
repnz
dec
xchg
popa
ds
and
add
ljmp
sbbb
mov
movsl
xchg
adc
outsb
shr
cld
adc
cmp
cmpsb
int
into
jmp
add
out
xor
mov
scas
dec
es
movsl
mov
movsb
push
push
clc
and
pop
jo
in
jecxz
push
loop
call
adc
pop
push
cmp
cmp
mov
adc
cmp
mov
sbb
clc
flds
shll
pop
mov
out
insl
push
push
add
frstor
xor
adc
loopne
into
xchg
pop
arpl
dec
rolb
mov
mov
mov
lods
inc
iret
pop
fbld
idivl
in
ficomps
dec
out
mov
test
pop
mov
mov
jg
fidivrl
and
mov
aaa
in
xor
loop
je
cltd
jo
notb
sub
pop
inc
mov
or
pop
imul
test
cli
push
adc
cmp
mov
shlb
add
clc
ja
scas
scas
data16
mov
mov
cmp
pop
jnp
out
mov
call
les
sub
pop
das
cwtl
cmp
dec
or
mov
gs
imull
pop
pop
mov
mov
aas
repz
shlb
sub
scas
jae
and
mul
into
popl
inc
lods
sbb
mov
pop
dec
mov
pusha
cmp
cmp
push
jl
mov
loopne
push
and
in
push
shlb
leave
pushf
ret
cltd
sbb
inc
out
sub
data16
sbb
mov
int3
rcll
adc
out
mov
xor
gs
mov
fadds
sub
mov
loope
mov
shl
mov
pop
jae
test
arpl
xchg
xchg
jno
jge
lods
mov
subl
xchg
or
adcb
push
insb
jge
fnsave
jb
pop
add
iret
fldl
pop
jnp
outsl
sbb
mov
mov
into
pop
dec
sbb
pop
xor
and
mov
shr
mov
int3
mov
cli
stc
xchg
inc
pop
inc
xor
add
jno
fisttps
lock
rorb
mov
stc
mov
push
jle
or
int3
pushf
adc
aam
cmp
jle
aas
push
xor
mov
enter
pusha
iret
jns
add
push
cli
das
in
imul
pop
rcr
and
mov
cmc
jle
cmp
pop
pop
aad
jle
add
aaa
xchg
test
fistpl
movsb
pop
sbb
cwtl
inc
ficomps
fdivl
rcll
mov
fisttpl
sub
adc
test
push
mov
lods
je
aam
add
xchg
jecxz
cmp
xchg
push
push
cwtl
pop
cmove
pop
adc
fisttps
in
mov
frstor
cmp
movsl
cmp
jbe
sbb
mov
and
or
or
insb
test
mov
mov
shll
out
les
mov
rorl
dec
and
pop
cmp
fildll
jge
dec
mov
gs
mov
dec
xor
xchg
insl
in
adc
mov
jecxz
mov
add
gs
out
andl
push
push
adc
push
pop
inc
sbb
sub
pushf
sub
inc
jb
dec
or
mov
daa
dec
sbb
pop
scas
cmpsb
jmp
or
inc
xchg
faddl
pusha
ret
loop
leave
mov
push
subb
outsb
insl
dec
cmpb
dec
inc
jg
mov
ljmp
arpl
push
sub
pop
mov
mov
out
int3
cmpsb
lock
jno
xor
fmull
out
inc
mov
sbb
inc
add
mov
dec
inc
dec
dec
pop
popf
ljmp
sbb
fdivl
fwait
sbb
or
out
popf
or
arpl
jmp
or
xchg
pop
clc
orl
aam
jbe
fsubs
sbb
or
out
popf
or
out
popf
or
out
popf
or
es
xor
sti
xchg
imul
lret
push
push
mov
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
out
popf
or
das
pop
.byte
popf
.byte
fs
